int
push
inc
hlt
jmp
adc
mov
pop
add
mov
mov
or
mov
and
jge
xchg
xor
mov
test
lock
cmp
shlb
mov
mov
cmp
cld
or
xor
ss
test
cmpsb
pop
in
sub
jmp
lcall
movsl
cmp
or
ss
test
push
cmp
pop
fidivs
dec
int
cli
mov
sbb
into
movsl
or
dec
test
xchg
popa
aaa
lock
std
xor
cmpsb
sbb
clc
mov
jb
jmp
cwtl
sbb
mulb
cmc
sbb
or
insb
fwait
jne
das
gs
jp
stos
outsl
push
fistpl
std
jo
nop
mov
mov
dec
pop
addr16
cwtl
xor
sub
rcll
pop
cs
jle
xor
loope
inc
cltd
pop
int3
mov
movl
mov
cltd
dec
or
sub
sar
mov
sub
mov
pushl
xchg
call
sti
notl
test
in
sub
inc
fidivs
outsb
mov
jae
lret
ds
lock
cmp
jg
cwtl
push
mov
outsb
adc
xor
fimuls
jae
mov
add
insl
rcl
pop
pop
jp
lea
xor
mov
jne
mov
imul
aam
pop
out
inc
pop
sahf
or
fmul
iret
sbbl
iret
add
addl
dec
adc
loopne
sbb
push
sub
lcall
in
enter
jp
dec
sbbb
jno
adc
shlb
pop
int3
movsl
or
das
pop
ret
push
daa
aad
add
push
sbb
cmp
cmp
push
and
sub
int
lret
out
icebp
mov
hlt
xor
add
sbb
lret
scas
push
add
mov
unpcklps
add
mov
cltd
dec
or
pop
and
fs
movsl
jecxz
inc
out
push
xchg
dec
movsb
mov
xchg
and
call
bound
and
cmc
andl
sti
mov
lea
orb
mov
and
addr16
popf
inc
test
cmp
sbb
sub
mov
gs
lock
sbb
rolb
pop
mov
mov
dec
int
je
mov
adc
leave
and
sub
sahf
and
icebp
leave
sbb
and
inc
push
jbe
inc
arpl
sub
sub
shl
and
or
xchg
sti
push
shlb
fistpl
fsubr
inc
xchg
and
in
int3
in
in
mov
xor
loop
rcrb
fs
mov
icebp
loop
dec
aaa
cmp
xchg
inc
xchg
cmp
pop
aas
fxch
divb
stos
fildll
insl
loope
xchg
xor
faddp
mov
mov
mov
add
cltd
pop
fbstp
dec
andl
and
int
pusha
popa
aas
xor
sub
push
fdivs
add
sbb
and
mov
in
repnz
inc
add
int3
les
arpl
pop
add
aam
mov
test
mov
fimull
cmp
pop
jge
xchg
dec
sbb
fnstsw
inc
mov
lock
in
jmp
adc
jnp
loop
stos
cmp
into
add
fistpll
push
push
in
or
and
push
cmp
pop
nop
inc
cmpl
pop
lods
dec
lock
fs
or
icebp
fidivl
hlt
push
pop
test
add
in
pop
leave
shl
mov
pusha
sub
daa
xor
dec
leave
xor
jg
mov
decl
mov
stos
test
lahf
xchg
shll
in
int3
repnz
out
loopne
outsb
mov
push
movb
or
fistl
push
sub
bound
or
cmpsb
in
xchg
aas
andb
lods
push
push
jae
mov
ds
mov
mov
imul
jecxz
daa
push
popa
pop
adc
imul
pushf
pop
ljmp
inc
adc
cmp
dec
mov
add
or
movsl
movsb
mov
and
dec
inc
or
das
inc
push
mov
out
out
cwtl
aam
jno
out
mov
mov
mov
jo
push
mov
xchg
scas
cmpb
push
pop
aad
cld
push
in
push
mov
negl
or
pop
push
jno
and
mov
pop
pushf
dec
push
pop
sbb
shrb
mov
rclb
pop
aas
mov
imul
or
xchg
add
mov
and
sub
fcomp
dec
lds
jne
lcall
shlb
cmp
mov
dec
aas
in
push
or
loop
xor
sbb
out
xor
mov
pop
loopne
xchg
dec
inc
push
mov
push
or
cwtl
jnp
push
test
add
pop
xchg
sub
repz
leave
sub
cmovle
lock
xor
movsb
stos
xlat
lods
dec
pop
pop
dec
sbb
xor
add
int
pop
call
mov
sbb
cmp
mov
mov
test
jmp
sub
sub
mov
out
aas
mov
gs
jg
xchg
test
fsin
fmul
insb
mov
repnz
fdivl
cli
adc
xchg
andb
push
jle
jl
xchg
lcall
push
dec
jmp
cmp
cs
push
jne
push
in
lcall
xchg
lds
push
adc
pop
sub
inc
mov
jno
movsb
out
add
fildll
sbb
jle
iretw
mov
pop
lcall
fucomip
dec
cwtl
add
lahf
cmp
mov
popa
cmp
sbbb
and
leave
mov
inc
shlb
pusha
fcmovnbe
cmp
pop
cwtl
enter
rorb
mov
mov
sbb
push
sub
scas
lock
int
cmp
dec
adc
xor
fbstp
lahf
scas
jbe
xchg
cvtps2pi
ja
mov
ret
scas
xor
jle
icebp
mov
inc
fs
add
test
int3
jmp
inc
or
xchg
dec
loop
mov
ds
loop
ficompl
push
or
mov
lock
xchg
js
or
mov
and
nop
add
dec
lock
xor
testl
jl
cli
xchg
mov
hlt
sbbb
add
nop
sub
inc
dec
xor
or
pop
clc
mov
outsl
mov
push
xor
out
adc
iret
pop
xor
pop
ss
data16
ret
and
in
jne
mov
add
loope
cmp
cltd
cmpsb
inc
adc
lret
dec
mov
lods
cmpsb
movsl
sub
adc
cltd
pop
jo
shll
push
pop
inc
cmpsb
das
test
xchg
add
test
roll
add
push
or
inc
xchg
mov
scas
arpl
cs
mov
adc
dec
and
call
in
vorps
xchg
addr16
xchg
mov
jle
into
mov
aam
xchg
cld
out
cltd
je
ffreep
add
sub
dec
clc
std
mov
dec
lcall
sbb
xchg
test
shll
test
aam
mov
pop
push
cwtl
out
push
lcall
repnz
push
add
and
pop
mov
scas
jns
clc
mov
mov
cmp
sub
jmp
js
movsb
jle
push
add
loop
scas
dec
adc
push
aaa
jmp
add
ljmp
inc
or
fisubrs
or
stos
adc
pop
sbb
jo
mov
ljmp
in
push
in
push
out
testb
jnp
lock
xor
push
mov
pusha
repnz
push
outsl
mov
xchg
aam
jnp
pusha
pop
frstor
mov
out
daa
sbb
dec
outsl
nop
rcl
push
jb
je
push
sbb
cltd
into
mov
repz
pushf
jecxz
and
mov
and
shll
add
dec
mov
fwait
cmp
inc
mov
xor
mov
testb
jb
mov
fisttps
or
and
fs
mov
add
loopne
mov
dec
or
mov
cmp
ffreep
bound
adc
mov
xor
jmp
repnz
data16
inc
inc
push
icebp
push
orb
push
and
push
cmp
xlat
xchg
popa
cmp
test
jno
outsw
mov
add
push
mov
pushf
and
mov
mov
cmp
arpl
xchg
jo
inc
aaa
mov
mov
scas
adc
cmp
xor
int3
lcall
aam
clc
mov
mov
shlb
hlt
mov
add
and
and
xor
into
outsl
cli
jno
cmpsl
jg
leave
cmp
ljmp
call
xchg
pop
cmp
pop
mov
push
pop
sub
pop
jne
test
mov
sbb
mov
fidivl
rolb
add
int3
cmpsb
shll
data16
insl
add
cmpsl
inc
inc
filds
pop
loope
nop
pushf
xchg
aas
mov
jo
cmpsb
dec
fsubs
and
or
xchg
add
test
mov
mov
and
sahf
dec
jle
xor
in
push
loope
fwait
add
sbb
cmp
aam
jbe
push
pushf
maskmovq
sahf
push
dec
mov
call
pop
filds
mov
add
orl
pop
xchg
or
mov
xor
mov
cmp
xchg
clc
icebp
shrb
inc
adc
or
shl
add
negb
mov
pushf
add
inc
or
mov
popf
jnp
popf
add
ds
je
push
call
fistpl
loop
in
test
bound
cmp
cli
push
mov
mov
mov
dec
popf
outsb
sub
mov
or
icebp
sbb
enter
jp
fildl
cmc
popf
push
bound
mov
dec
cmpsb
sti
xorb
jb
shlb
sti
out
adc
mov
faddl
out
and
rorb
dec
fistps
cld
rol
jbe
mov
cmp
mov
xor
and
and
lcall
test
lcall
push
jne
cmp
mov
cmp
fstps
jns
jecxz
bound
int3
mov
inc
outsl
jne
adc
daa
adc
xchg
test
dec
insb
cwtl
mov
insb
push
mov
imul
pop
and
sub
inc
inc
jne
adcb
es
and
fsin
fnstenv
sub
mov
arpl
jmp
adc
xor
fisttps
mov
das
add
je
sahf
movsl
xchg
leave
loop
rcrb
mov
xchg
mov
jecxz
icebp
mov
fidivl
inc
xor
ficompl
cmp
ljmp
gs
inc
and
jge
andb
insb
push
lods
stos
sub
roll
ss
aas
out
loopne
fadds
outsb
inc
popa
xchg
and
mov
rorb
testl
mov
push
mov
lea
add
fdivp
mov
ret
xchg
dec
ja
rolb
pop
sbb
cmp
cmpsb
mov
mov
bound
scas
call
adc
jbe
adc
test
dec
pop
out
xor
sub
pop
mov
pop
mov
sahf
ss
imul
in
adc
pop
xlat
push
inc
sbb
push
sbb
xor
push
jne
stc
add
cmp
scas
dec
mov
mov
pop
dec
clc
mov
or
or
cmp
inc
stos
sahf
push
pop
adc
xchg
sbbb
roll
sbb
dec
mov
mov
aad
adc
jle
aad
push
sbb
mov
adcl
je
jb
sub
mov
sahf
mov
inc
cwtl
hlt
or
popl
imul
loopne
cmp
mulb
sub
sarl
pop
adc
lahf
ja
ljmp
in
adc
stos
jb
dec
stos
mov
jae
xacquire
push
and
jo
add
in
shlb
fxch
movaps
int
out
pop
mov
pusha
or
dec
sbb
and
pop
ja
repz
leave
xor
sar
imul
les
into
std
stc
cs
dec
jge
sbbl
aas
scas
insb
sbb
pop
aas
ss
out
idivb
inc
jnp
daa
mov
ja
lcall
xchg
imul
add
sub
mov
push
inc
ror
jl
dec
mov
ret
cmc
daa
mov
ja
fcoml
xor
mov
scas
mov
adc
dec
mov
xchg
bound
xor
insb
mov
fcompl
aam
cmp
es
dec
insb
shll
xchg
cmpsl
out
or
dec
rcrb
xchg
shr
or
xchg
sti
stos
scas
inc
xchg
jno
adc
or
ljmp
frstor
fwait
lds
std
aas
mov
cmp
scas
push
fidivrl
dec
push
fisttps
arpl
lock
mov
stc
int3
mov
or
movl
pop
pusha
jne
lret
lea
sub
enter
jne
cmp
or
rcrb
jp
cmpsb
in
jp
and
test
push
cmp
jno
adc
xchg
gs
sbb
pop
cmc
mov
cmp
adc
rorb
arpl
daa
mov
ret
jo
or
daa
shrl
adc
push
lds
lcall
or
lcall
into
fstpt
leave
outsl
jno
rcll
daa
inc
pop
scas
test
push
xchg
sub
inc
call
push
in
stos
aad
sarb
ja
xchg
push
jle
push
add
push
jge
adc
mov
nop
cmpsl
xor
fwait
das
and
cmp
adc
movsb
inc
popf
out
push
mov
fdivrl
test
shll
sub
les
mov
mov
inc
push
add
sub
dec
rcll
pushf
jg
inc
dec
outsl
mov
sarl
ljmp
cmp
xlat
lret
cmp
pop
movsl
xchg
rcl
mov
inc
aam
cmp
mov
mov
lock
mov
mov
adc
xor
cmp
loop
iret
insb
fs
ds
jge
mov
cmc
je
and
jns
incb
adc
loopne
pop
mov
xor
sub
mov
inc
sbb
negl
rcrl
push
push
addr16
ret
test
mov
fldenv
movq
mov
add
call
lret
mov
dec
leave
aad
inc
dec
mov
sub
fcmovnbe
or
inc
xchg
loop
add
icebp
dec
mov
in
ret
mov
and
jp
jns
pushf
lcall
lea
mov
leave
repz
ja
mov
inc
adc
mov
test
sahf
sub
cmpsb
decl
or
repz
jg
jmp
lea
inc
or
xor
pushf
mov
jge
xchg
aad
add
add
fmull
hlt
or
bound
les
cs
xor
fcmovb
shlb
pop
xchg
icebp
ret
les
pop
sbbb
gs
push
sub
scas
pop
inc
mov
faddl
movsl
or
or
inc
xchg
rclb
in
into
outsl
xchg
out
adc
push
adc
scas
das
out
sarb
push
fimuls
mov
cld
ret
add
loopne
lds
ds
dec
push
push
bound
sub
jns
arpl
cmpsb
and
pop
mov
gs
jg
dec
or
push
insl
mov
fwait
mov
ret
les
addr16
jle
leave
pushf
in
add
lcallw
xchg
popa
sbb
inc
out
jo
inc
out
in
pop
jns
mov
xor
dec
fwait
mov
iret
sbb
lahf
dec
jo
sbb
mov
mov
lret
xorb
pushl
icebp
imul
jl
inc
ljmp
dec
cmp
fdivl
inc
repnz
add
fmuls
mov
sub
push
loop
pusha
repnz
pop
fisubl
inc
imul
inc
aaa
mov
or
mov
js
cmp
insb
jno
sar
hlt
mov
push
roll
scas
pop
mov
mov
call
adc
test
jae
adc
xor
and
clc
xchg
mov
ja
out
in
aaa
cmp
mov
popa
loopne
ds
jne
xor
mov
popa
sub
aam
enter
dec
mov
jge
sbb
scas
filds
fxch
jb
repnz
pop
mov
popa
pusha
ds
outsb
dec
pop
inc
repz
xor
iret
insb
dec
bound
das
jae
fsubl
lods
ljmp
sbb
and
dec
ja
in
dec
adc
cmp
jmp
sub
sbb
cmp
fstpt
inc
mov
sbb
jl
mov
jle
fiaddl
loope
in
pusha
cmpsb
outsb
cmc
cs
in
inc
adc
out
shrl
fdivs
dec
sbb
mov
rorl
stc
aam
xor
mov
je
push
test
jg
sub
pop
imul
stos
mov
xchg
and
dec
insl
dec
mov
mov
cld
pusha
leave
sbb
cmp
fisttpl
fucom
or
pop
jns
scas
mov
int3
jae
mov
mov
jle
ja
ja
xchg
loop
into
xor
sbb
jle
or
shll
fcompl
lds
pop
lods
inc
jbe
xchg
lods
cmpsb
jbe
mov
in
mov
outsb
mov
mov
sbb
fiaddl
enter
xchg
mov
sub
push
mov
notb
mov
addr16
inc
or
mov
add
mov
clc
sbb
sub
inc
pop
pop
std
jae
sub
jg
out
sbb
pop
icebp
cltd
call
jb
sbb
cs
fisubs
push
stos
cmp
mov
rcll
roll
xlat
sarb
lods
das
jb
jne
js
pop
add
nop
jmp
jle
ljmp
adc
orl
aas
cld
mov
mov
lds
push
lods
xchg
mov
adc
mov
scas
inc
in
xor
jp
outsl
jne
aad
adc
push
stc
and
xchg
and
push
jae
dec
pushw
hlt
divl
rclb
xchg
adc
mov
push
cmp
inc
push
out
out
sbb
loopne
push
jnp
cwtl
jnp
xor
cmpsl
std
fwait
scas
mov
and
add
adc
scas
js
add
cwtl
leave
mov
mov
jecxz
loop
jnp
sub
add
and
sbb
inc
push
jle
adc
addb
das
sub
enter
test
test
int
fldcw
pop
sarb
mov
adc
test
loope
add
adc
sub
fstpt
sbb
aam
fbld
mov
push
pop
dec
dec
inc
jmp
push
scas
push
cmp
jo
sub
scas
hlt
repz
mov
xchg
inc
imull
repnz
nop
cmpsl
out
sbb
cli
mov
mov
mov
xchg
out
or
rcrb
push
and
or
movsl
dec
push
out
loopne
std
push
mov
faddl
sbb
jae
cmp
add
icebp
frstor
aad
lods
incl
inc
mov
es
xchg
or
sbb
fs
dec
push
lret
sub
sbb
sbb
mov
mov
xor
cmpsl
fidivs
dec
call
sbb
cmp
leave
jae
xor
push
mov
jns
bound
sub
jns
mov
mov
out
outsb
aam
pop
cmp
add
pop
add
mov
xchg
out
push
xchg
test
lods
pop
push
pop
cmpsl
xchg
inc
lods
adc
lods
mov
sbb
ds
mov
or
fld
les
dec
dec
dec
xchg
push
outsl
rolb
xchg
xchg
push
pop
push
push
rolb
sti
imul
sub
adc
aaa
sub
rclb
ret
into
cmp
lock
cmp
fcoms
mov
mov
js
mov
in
xor
adc
in
xchg
xchg
les
rcl
lret
or
and
xchg
xrelease
push
jecxz
shlb
cmp
xchg
arpl
push
cmpsb
loop
cmp
scas
jo
dec
pop
test
sbb
pusha
aas
rcrl
cwtl
ds
mov
das
xor
jbe
jl
popa
xlat
mov
add
lret
and
mov
lea
pop
xor
rolb
inc
fisubs
sub
xchg
repz
jl
int3
lods
sub
pusha
jmp
push
test
popf
mov
sbb
add
sub
out
sbb
xor
repnz
adc
data16
mov
dec
lods
mov
shll
fistpll
xchg
fisttpl
dec
repz
repnz
shlb
sbb
cmp
int3
inc
jge
mov
lods
divb
dec
sub
iret
and
rolb
pop
enter
inc
mov
sub
push
rcrl
mov
mov
inc
cmp
std
push
dec
leave
lcall
jne
daa
into
xchg
sub
sub
or
jl
xchg
pop
ror
jnp
mov
push
adc
popf
loopne
or
ret
int3
sbb
cmpsb
jnp
mov
mov
movsb
call
nop
test
and
in
xor
mov
push
cmpl
das
add
push
and
cmc
add
mov
add
iret
cwtl
aaa
push
das
lds
int3
xorb
mov
mov
shlb
jecxz
mov
push
lds
or
imul
sub
sub
adc
scas
cmc
dec
add
pop
inc
aas
add
mov
cmp
scas
lods
and
xchg
in
pop
pop
nop
test
test
imul
loop
pop
movsl
mov
aad
cmc
sahf
jge
xor
dec
insb
push
xchg
icebp
sbb
fwait
icebp
ja
mov
or
mov
fcomp
jbe
pop
adc
loope
dec
in
fdivrs
push
ror
push
stc
inc
mov
jnp
mov
movsb
jae
cmp
xor
cmpsb
pop
lods
mov
ror
cltd
inc
out
lds
sbbb
loop
push
sub
sub
lret
or
or
cld
out
icebp
pop
add
fbld
cs
ja
pop
data16
push
ret
test
dec
cmp
mov
xor
stc
or
inc
mov
ret
pop
jmp
mov
push
xchg
pop
jno
pop
xchg
lahf
xor
movsl
cltd
loop
jno
test
in
inc
dec
imul
xchg
mov
pop
arpl
cli
movsl
and
jmp
cli
jns
imul
dec
push
cltd
inc
jns
and
out
mov
xchg
pusha
jg
jns
sbb
inc
push
fidivs
sbb
pop
imul
push
xchg
xchg
pushf
jnp
and
ret
ds
lock
pop
stc
cmp
or
cmpb
sub
sub
les
add
xorb
sub
addb
lock
inc
xchg
aam
int
pop
dec
mov
xchg
ret
js
dec
jne
xchg
and
clc
dec
pop
jecxz,pn
xor
dec
add
and
jl
int3
jnp
lea
movsb
lret
outsb
sbb
sub
int3
sub
jle
int
mov
pusha
pusha
adc
cld
daa
jo
cld
xor
adc
push
jle
mov
add
mov
ss
dec
divb
dec
popa
mov
sbb
jle
pop
push
es
cli
hlt
pop
push
inc
loope
mov
bound
loop
push
out
adc
sbb
icebp
iret
cltd
mov
rcr
push
mov
lea
int
lret
popf
mov
enter
mov
dec
bound
adc
outsb
je
and
mov
scas
and
mov
sbb
mov
jmp
push
dec
stc
leave
stos
sub
push
lock
jecxz
mov
pusha
sub
push
ja
cmc
sbb
mov
or
cli
jmp
mov
add
outsb
popa
pop
adc
outsl
aas
pop
jnp
ja
push
sbb
addl
cmc
jnp
out
adc
es
lret
jp
lret
andb
test
scas
ret
sbb
inc
pusha
pop
or
aam
adc
and
mov
push
pusha
hlt
and
fcomps
testl
xor
je
sbb
cwtl
cmc
cmp
stos
test
push
scas
push
jb
jbe
insb
lods
movsl
je
rcl
shl
test
repz
pop
push
std
sbb
arpl
add
xor
sbb
outsb
scas
outsb
fdivrl
jae
subb
push
fcoms
nop
test
push
cld
cli
xor
cltd
mov
out
or
xchg
sar
xchg
dec
pop
leave
push
fldcw
fdivrp
in
pop
mov
or
mov
test
jne
lods
movsl
push
arpl
std
pusha
test
popa
xchg
mov
push
icebp
pxor
enter
shl
add
stc
imul
cmp
jge
inc
and
and
lret
pop
sub
adc
imul
stos
adc
add
lret
das
mov
xchg
sub
cvtps2pi
push
mov
lock
push
inc
lock
ds
enter
jns
lcall
fdivs
pushf
loop
rol
or
and
mov
ret
mov
lods
jg
loopne
loopne
in
loop
loopne
pusha
fsubs
or
push
or
enter
cmp
mov
call
arpl
into
cltd
cmpsb
lods
pop
test
pushf
sub
and
adc
fsubrp
int
filds
fistpll
inc
mov
out
mov
inc
cmp
jns
and
stos
rcll
xchg
sti
not
roll
insb
icebp
mov
mov
fs
jae
mov
mov
std
xchg
add
cltd
adc
inc
in
add
movl
sbb
and
mov
sbb
mov
jne
mov
or
lret
xor
and
jb
fbld
lock
push
shlb
fwait
cmp
add
jae
xchg
sub
lahf
and
stos
out
ret
or
pop
ficompl
xchg
sbb
inc
adc
sbb
imul
out
inc
mov
mov
push
pop
ss
dec
mov
or
xor
jb
mov
fdivr
ror
imul
imul
cmp
xor
cmp
sahf
pop
cwtl
xchg
mov
dec
les
sub
cmc
fiaddl
add
dec
les
sbb
sbb
xchg
xchg
sti
in
xchg
int
mov
aas
dec
mov
mov
or
lret
or
inc
dec
cs
xor
push
repz
pop
mov
mov
and
arpl
cmpsb
jno
scas
xchg
lcall
mov
fdivr
int3
dec
push
sub
cwtl
mov
sbb
xchg
into
or
lock
rcrl
jno
dec
loop
dec
sub
rcrl
xor
jp
jecxz
bound
lods
jno
pop
aas
in
jbe
push
aam
cmp
or
mov
jp
cmp
testb
loop
mov
add
sbb
mov
nop
mov
hlt
clc
aam
mov
out
jle
andl
fmull
jb
mov
ror
dec
dec
and
jne
fisttps
push
sbb
inc
dec
push
or
sbb
mov
mov
int
mov
jmp
add
shll
add
add
and
lods
mov
jb
sub
sub
sbb
or
mov
mov
jecxz
jne
or
mov
sbb
in
in
pop
or
scas
nop
out
pop
cs
lret
jmp
mov
arpl
push
and
adc
lcall
jecxz
cltd
lds
test
imul
lock
pop
xchg
iret
lds
mov
enter
out
pop
cmp
ror
jmp
pop
movsl
ror
pushl
push
xchg
stos
mov
imulb
pop
lock
test
push
sahf
push
mov
iret
hlt
dec
jg
push
ss
leave
pop
and
pop
mov
iret
mov
adc
aam
pop
jne
sbb
test
mov
jp
mov
xchg
xchg
mov
cmc
sahf
repz
add
mov
call
das
test
and
into
in
lahf
sub
stc
and
pusha
sub
sub
push
lock
jns
sbb
dec
push
jmp
outsb
lods
ljmp
out
sahf
lret
push
call
push
push
and
xor
xor
dec
push
jmp
outsl
mov
fcmove
int3
icebp
sar
adc
test
mov
repnz
jge
imul
pop
cmp
and
xchg
mov
jae
jbe
nop
xor
push
mov
divb
enter
jo
aad
sbb
xor
or
fdivl
bound
mov
ja
xchg
movsb
sub
lds
xchg
rolb
lcall
out
into
mov
adc
xchg
lcall
out
dec
rcl
adc
jo
sbb
movsl
mov
gs
fs
bound
xor
jne
lea
testl
arpl
jnp
push
xor
mov
cmp
shlb
add
xchg
sarl
nop
call
in
jns
int
jae
std
jecxz
mov
push
gs
lret
outsb
cmpsb
loopne
sbb
cmc
mov
ljmp
sub
mov
repz
nop
or
jae
lock
in
lea
inc
mov
lcall
pusha
push
clc
in
or
mov
outsb
xchg
xor
pop
pop
adc
out
mov
xchg
lret
js
pop
and
fs
icebp
pop
inc
stc
sahf
jnp
shlb
push
cwtl
fcoms
add
inc
mov
pop
cwtl
int3
or
mov
les
cmpsl
xchg
ljmp
push
ja
fldenv
imul
pop
push
aas
fisubl
push
jb
dec
inc
lahf
dec
xchg
loope
inc
xor
rcrl
roll
sbb
cwtl
insb
test
mov
hlt
fnsave
add
rclb
call
lods
enter
push
adc
insb
sahf
mov
push
mov
icebp
hlt
inc
sub
mov
aad
imul
push
push
inc
sbb
fisubl
jle
pushl
mov
mov
insb
sub
decb
push
push
imul
and
jecxz
les
add
push
mov
js
jmp
pop
loopne
ja
mov
mov
out
pop
fists
inc
dec
mov
push
or
nop
orb
pop
mov
jbe
scas
and
movsl
loop
popf
rcrl
mov
outsl
out
clc
icebp
push
sub
sub
xchg
mov
sub
mov
fistpll
scas
popf
pop
repz
pop
inc
fstpt
xchg
lcall
or
mov
xchg
fdivr
idivl
enter
mov
in
je
xchg
pop
cli
loopne
xchg
adc
and
out
mov
pop
pop
into
push
out
and
popf
imul
shlb
arpl
inc
addr16
jo
js
sahf
in
or
scas
dec
sahf
testb
dec
clc
fnstcw
out
cmp
dec
mov
and
into
adc
cmp
xchg
inc
nop
loop
adc
dec
std
sbb
cmpsb
push
jb
pop
sbb
mov
xchg
push
add
inc
add
xchg
cli
sbb
dec
inc
sbb
aad
pop
xchg
gs
jbe
sub
mov
fisubrl
mov
rcrl
mov
mov
cmpsl
stc
shr
mov
add
repz
jb
fdivrl
scas
pushl
or
lods
push
in
repz
loopne
dec
mov
negl
xor
and
push
push
shll
nop
std
scas
adc
inc
mov
jmp
cld
mov
sub
xchg
and
nop
mov
lea
lcall
fisubl
inc
ja
inc
call
mov
xlat
mov
enter
and
leave
inc
shlb
or
mov
scas
inc
mov
xchg
jle
js
cli
pop
lods
mul
les
push
insl
cltd
adc
inc
push
cmp
dec
fwait
and
pop
test
inc
into
out
aad
fdivrl
lret
ja
aad
mov
inc
mov
sbb
sbb
cmc
lcall
out
addb
pop
push
fisubrl
pop
inc
and
jp
mov
mov
pop
iret
es
xor
mov
cltd
or
inc
sahf
or
out
add
dec
negl
adc
fcmovnb
push
cld
inc
imul
in
out
fwait
add
or
fwait
repnz
clc
add
sub
iret
jno
sar
pop
sbb
adc
pop
fstpt
mov
pop
in
movsl
push
mov
inc
lret
or
imul
sbb
mov
mov
mov
and
inc
cmp
pop
fs
lods
jns
cmp
cmpb
popl
add
bound
cmp
shrl
dec
lcall
lock
test
loopne
test
das
push
push
inc
xor
cld
in
sub
pop
lods
pop
stos
dec
int
sub
jmp
arpl
inc
pop
je
dec
fldcw
lea
push
pop
jae
in
inc
mov
push
add
lea
arpl
mov
jl
cmp
cltd
out
push
xchg
into
mov
popf
xor
cmpsl
push
cmpb
mov
insb
xchg
cmpb
sub
pop
dec
test
mov
ret
or
dec
adc
push
push
cltd
popf
insl
pop
aaa
out
jl
push
sub
or
ret
mov
loop
pop
test
iret
pushf
pop
pop
push
repz
and
cs
dec
jecxz
iret
lcall
pusha
sub
mov
jg
mov
daa
inc
loop
and
add
fidivl
xor
cltd
ja
sbb
fwait
xchg
adc
mov
pop
aad
rolb
mov
sbb
mov
bound
gs
jno
cmp
push
pminub
call
push
mov
sbb
pop
out
sbb
sub
pop
sbb
xor
or
cmp
dec
dec
and
sbb
insb
fnsave
fstpt
sbb
cli
shlb
xor
repnz
push
jne
jb
movsl
jecxz
btc
cmp
leave
xor
icebp
push
sub
clc
movsb
or
inc
divb
xor
nop
mov
into
aam
lcall
mov
test
dec
mov
daa
mov
sub
sub
punpcklbw
test
test
lcallw
scas
or
inc
pop
adc
dec
dec
pop
dec
shlb
jg
xchg
es
hlt
and
jbe,pt
adc
in
ljmp
lods
xor
lahf
sar
inc
dec
push
stc
loop
imul
sub
jle
movsb
je
xchg
jg
mov
fisubrs
in
xorl
fwait
je
mov
fwait
dec
sbb
dec
lret
mov
mov
sub
inc
adc
xchg
testb
icebp
out
orl
popa
ds
inc
mov
stos
popf
in
mov
insb
xchg
les
sbb
lods
or
sbb
add
test
rolb
xlat
addb
mov
cmpl
xor
xlat
adc
adc
std
jg
cmp
stc
xor
jns
add
mov
fwait
repnz
sub
lretw
cs
push
stc
sub
aam
neg
shr
push
or
int3
mov
mov
or
and
xchg
cmp
xor
pop
xor
aaa
loopne
push
out
leave
pop
stc
mov
int
ljmp
mov
mov
lret
xchg
fidivrl
jle
mov
sub
aas
cmp
fildll
mov
lock
pop
fidivl
mov
mov
mov
lret
int
xchg
iret
mov
ds
aaa
dec
sub
xchg
aaa
sti
popa
fs
lcall
lret
push
mov
sbb
je
ljmp
icebp
pop
test
cmp
popf
mov
xchg
inc
xor
add
test
xchg
shll
cmp
adc
imul
lcall
mov
jne
into
mov
xbegin
push
cmp
mov
xorb
xor
fs
repz
add
jmp
jne
mov
push
sar
rorb
inc
imul
sbb
or
dec
dec
mov
data16
int
mov
loope
and
fildll
jne
sbb
and
mov
popf
pop
mov
loopne
je
fadds
pop
cli
or
sarb
inc
lods
jl
sbb
dec
outsl
mov
fstps
mov
inc
sub
mov
pop
stos
in
cmp
cmp
xchg
mov
xor
mov
xchg
sub
pop
test
lcall
daa
iret
stc
dec
xchg
xor
sub
lods
adc
iret
loope
adc
adc
loope
aad
movsl
leave
ret
sub
popa
jbe
cmp
mov
mov
js
pop
inc
sub
clc
cmpsl
push
icebp
add
sti
jmp
add
cbtw
outsl
test
cltd
insb
ror
mov
xor
dec
icebp
sbb
sbb
fbstp
frstor
call
jl
fbstp
movsb
mov
ljmp
inc
test
xor
dec
or
pmulhw
cld
das
jp
add
addr16
sbb
adc
xchg
sbb
loopne
insb
jb
cmpsb
mov
adc
mov
ret
data16
daa
and
mov
mov
outsl
gs
into
leave
sbb
pop
ficoms
scas
and
lods
add
xchg
dec
sbb
mov
pop
cmp
mov
insl
mov
xor
mov
pop
std
fildl
mov
dec
or
adc
cmpsb
xor
lret
icebp
cmp
rcr
fnstcw
lods
out
push
ret
scas
les
jp
mov
out
and
and
out
push
dec
lret
sub
sub
add
push
sub
je
sbb
cmp
dec
imul
sub
pop
lods
stc
pop
jns
push
xchg
inc
jg
or
inc
inc
push
test
push
aam
ror
mov
sets
push
ret
lds
cmp
lret
mov
xchg
mov
ss
loope
sti
pusha
push
jge
jcxz
xchg
inc
jae
in
or
stos
xchg
lods
test
add
push
push
nop
shlb
insl
bound
pop
and
rorl
aam
or
or
mov
dec
push
das
sub
or
jb
jns
add
dec
adc
addb
popf
cltd
cmpsl
mov
aaa
or
shl
inc
sub
add
in
test
movsl
xor
sbb
fistpl
mov
mov
test
dec
sbb
int
push
cmpsl
jmp
sti
icebp
sbb
in
pop
repz
popa
mov
lcall
fwait
shl
adc
adc
ds
movsb
dec
inc
enter
dec
xor
push
sub
pop
and
cmp
dec
pop
dec
test
dec
xchg
mov
pop
roll
add
mov
std
les
mov
ret
sbb
movsb
push
push
pop
pop
mov
fstpl
add
cmp
pop
mov
xchg
jb
push
cmpsl
inc
cmp
xchg
scas
lds
inc
pop
or
push
mov
int3
repz
icebp
dec
daa
add
es
insb
sub
std
clc
enter
push
lmsw
mov
in
aas
xor
jae
cmp
inc
rol
pop
loope
loope
xchg
or
cwtl
sbb
inc
out
fldcw
mov
outsl
flds
or
dec
mov
xor
aas
xchg
je
jae
jae
test
in
ja
repnz
xchg
mov
mov
and
jb
inc
imul
in
push
lods
mov
repnz
add
cli
fbstp
aad
mov
push
divl
popa
jno
sub
mov
sbb
and
and
and
inc
mov
pop
mov
cmp
daa
in
mov
cmpsb
mov
xchg
xchg
push
xchg
and
mov
cmp
push
adc
cmpsl
fists
jo
mov
addl
inc
scas
push
stos
orb
sbb
test
not
test
js
out
or
ret
imul
imul
ja
pop
popa
orb
push
jb
cmp
push
and
and
ror
sub
repz
inc
shll
push
mov
mov
cli
inc
cmc
shlb
xchg
mov
push
das
outsb
lods
lldt
jb
ja
jge
gs
hlt
inc
xchg
xchg
and
mov
es
xchg
xor
out
inc
mov
fistpll
in
inc
sbb
scas
ljmp
out
xchg
jne
mov
fstpt
ljmp
fldenv
push
mov
push
loopne
xchg
add
pushl
loope
push
cmp
mov
cmp
out
arpl
pop
push
inc
mov
mov
sbb
sbb
lahf
xor
xchg
ja
push
pop
xor
popf
mov
aad
sub
xchg
icebp
push
sub
jl
sub
xor
mov
sub
pop
pop
addr16
cmp
std
mov
arpl
mov
xor
jns
cld
sub
in
mov
xor
mov
lods
xor
outsl
push
rolb
push
jae
pop
mov
push
daa
mov
jne
rcrb
fcmovbe
addb
pop
or
cmp
fwait
pop
mov
adc
loope
test
xorl
lea
es
jl
mov
cmpsl
pop
xchg
sbb
jnp
clc
dec
pop
pop
push
movsl
mov
sti
jbe
xchg
xor
jl
scas
sarb
cld
std
cmp
not
fidivrl
frstor
ljmp
xchg
and
cld
cli
leave
out
jg
add
xchg
adc
nop
mov
xchg
jge
ja
stc
pop
int3
addb
xor
mov
cwtl
sbb
std
dec
shlb
lahf
and
dec
mov
cmp
dec
lods
or
fbld
mov
bnd
xchg
inc
cmp
xchg
cli
push
mov
dec
shlb
push
mov
adc
jl
dec
mov
clc
cmpsl
adc
arpl
ljmp
mov
sub
pop
aaa
pop
cli
xor
jae
push
imul
pop
aaa
pop
retw
or
imul
mov
ja
mov
dec
rorl
xlat
mov
out
addr16
mov
in
ss
pop
aam
or
lods
insl
sub
int
shlb
xor
jecxz
data16
mov
imul
js
xchg
cmc
sbb
jg
test
ja
loop
dec
xchg
xchg
insl
stos
aas
mov
iret
xlat
mov
cmp
nop
outsb
mov
pop
mov
inc
mov
lods
in
das
and
xchg
lahf
jne
repz
out
test
xchg
push
jg
jo
cmp
mov
in
or
fcoms
xchg
rcll
pushl
push
pusha
leave
ljmp
push
aad
loope
cmp
popf
mov
sbb
add
aas
call
fwait
mov
iret
mov
or
lcall
sub
push
sahf
and
xchg
lret
pop
cld
add
lea
xchg
inc
jge
call
jb
cmp
cmpsl
into
push
mov
sub
mov
add
xchg
mov
jle
jle
or
xlat
add
mov
add
and
int3
sub
mov
test
pop
fldcw
mulb
adc
jnp
fistpl
mov
mov
push
add
call
out
sarl
loop
loopne
pop
movsl
mov
cmc
stos
test
mov
mov
testb
cwtl
jb
inc
pmaxsw
shrb
mov
mov
mov
push
lods
xchg
jne
and
nop
push
imul
movq
jno
cmp
mov
push
js
mov
add
in
mov
aas
shlb
repnz
imul
das
int
insl
inc
ror
mov
cwtl
dec
das
and
jecxz
sarl
cs
arpl
hlt
mov
push
cmp
xor
gs
pop
out
and
sbb
inc
push
dec
mov
mov
push
fcompl
pop
aam
test
inc
push
xor
sbb
dec
cwtl
or
std
cmp
pusha
cmc
jp
mov
dec
add
inc
xor
in
in
js
adc
mov
roll
out
sbb
lcall
cmc
inc
sub
or
push
lods
fsubrp
stos
inc
and
cltd
or
mov
clc
lds
and
adc
aad
jno
push
repnz
ds
das
pop
and
and
int3
push
stos
mov
clc
mov
insb
icebp
jle
aam
mov
jecxz
cs
xor
lock
mov
jmp
lcall
pop
jl
add
dec
das
adc
mov
int3
jmp
inc
sahf
into
test
gs
mov
push
xchg
mov
or
addr16
xchg
cwtl
adc
test
rcrb
aaa
and
inc
mov
push
mov
sub
or
shlb
pop
scas
fldcw
adc
push
data16
mov
sti
xor
out
cmp
test
into
push
adc
out
lock
loope
or
lret
jg
xchg
fiaddl
arpl
cmp
insb
mov
inc
and
outsl
lret
dec
and
jns
in
cmpsl
jmp
jo
pop
inc
jo
jno
mov
and
add
cmpsl
sbb
repz
inc
mov
sub
mov
mov
sub
sbb
fisttpl
dec
dec
lds
jns
jg
add
xor
inc
mov
jg
out
push
out
and
inc
gs
sbb
stos
out
lods
ja
shl
imul
mov
jmp
mov
mov
ljmp
rolb
jmp
popa
mov
fwait
pop
and
cs
cmp
inc
sbb
mov
fwait
xchg
mov
pop
pop
popf
mov
test
xchg
aaa
test
pop
aam
aas
loope
das
mov
repnz
insb
mov
xor
xchg
aaa
js
cmpsb
mov
bound
inc
lret
das
pop
sbb
pop
pushf
add
nop
sbb
jo
nop
ret
sbb
shr
xor
out
mov
jle
push
add
xor
repnz
fnstsw
ret
into
inc
sbb
or
dec
xchg
or
stos
popf
scas
mov
repnz
cmp
test
mov
xor
push
sbb
lret
movsl
push
xchg
stos
shr
in
pushw
or
jge
cmp
cmp
ss
pop
sub
cwtl
cld
inc
cltd
sbb
imul
addr16
mov
jae
ret
sbbb
pushf
or
loopne
out
pop
mov
mov
dec
je
adc
sub
fistl
aas
jmp
mov
rcll
out
divb
jnp
lds
pop
repz
arpl
add
cmp
dec
xor
push
mov
cmp
repz
ja
mov
xor
mov
mov
cmovnp
or
mov
pop
xchg
push
xchg
xorl
nop
out
lds
filds
dec
cmpsb
subb
mov
mov
pop
push
cmpsl
xchg
push
dec
inc
lea
xchg
pop
add
push
out
xlat
lahf
cmp
cld
loop
cmp
xchg
mov
lret
lea
sbbl
movsl
jns
fdivr
mov
fildl
in
rorl
repnz
roll
aas
fsub
sub
rorl
jge
out
ds
and
test
repnz
lcall
dec
add
loopne
push
insb
test
jns
mov
js
arpl
out
js
shl
or
dec
and
pop
push
add
jb
cmp
es
dec
dec
movsb
lds
xor
shll
negb
into
test
adc
push
sahf
jge
mov
loope
mov
inc
lea
and
mov
ds
lock
sub
call
inc
popf
dec
mov
push
aas
popf
jle
inc
js
jecxz
lcall
pop
icebp
addr16
std
sahf
mov
out
movsb
push
andb
jg
aas
jmp
and
stc
cmc
mov
rol
inc
inc
dec
stos
dec
sub
movsl
dec
in
adc
jno,pt
cmp
addr16
orl
and
adc
lcall
mov
push
push
push
dec
push
es
jb
mov
lcall
int
lahf
sbb
dec
dec
adc
pushf
mov
cmp
aam
jl
jg
flds
jmp
test
popa
movb
mov
cmc
sbb
sub
sbb
or
and
cltd
adc
mov
xor
addr16
and
jp
cmpsb
xchg
sbb
shlb
jo
pop
cltd
xor
xchg
jg
pop
and
cli
mov
pusha
loope
mov
cmpsl
jg
pop
add
sbb
pop
test
pop
and
stc
cmpsb
das
push
xchg
test
rorb
and
xchg
fidivs
cli
push
adc
sub
fnstenv
fiaddl
dec
mov
sub
lret
jno
and
out
jnp
jmp
in
inc
fcmovne
cmpsb
orb
jo
out
jecxz
adc
or
aam
xchg
mov
lahf
xor
pop
repz
clc
movsl
dec
daa
subl
add
mov
outsl
les
lock
dec
iret
lods
sbb
pop
dec
outsb
pop
out
jae
cmc
popf
push
loopne
loope
adc
ret
cmp
dec
aaa
and
xchg
cmpl
adc
pusha
movsl
in
sbb
xor
cmp
shlb
out
cs
cltd
cmp
mov
inc
dec
out
jecxz
pushf
and
dec
cwtl
adc
push
shrb
aas
lods
or
outsl
popl
xor
jle
imul
add
xor
and
mov
mov
push
add
cmp
cmp
sbb
pop
mulb
dec
sbb
mov
mov
dec
adc
mov
mov
inc
push
lret
lret
adc
cmc
es
stc
inc
jge
test
cmp
mov
jmp
ds
push
int3
scas
ja
xchg
mov
in
mov
xchg
mov
adc
jne
mov
aad
hlt
jp
inc
mov
mov
test
inc
das
aas
pop
lods
dec
or
mov
cmp
push
push
dec
sbb
jne
imul
add
xor
jae
sbbl
repz
in
repz
push
cmp
aas
jno
int3
sub
and
mov
and
dec
sbb
pop
cmp
or
lret
clc
cmpl
fistpl
cmpsb
idivl
fs
and
mov
adc
mov
daa
in
dec
lahf
jl
dec
mov
rcrb
jnp
sbb
adc
xadd
sbb
jle
sub
subb
repnz
xor
ret
jecxz
or
adc
cld
mov
sbb
stc
sub
mov
sub
push
sahf
hlt
jns
jne
lcall
call
cmp
jae
addr16
inc
sahf
in
bnd
cmp
sbb
mov
xchg
mov
add
dec
popl
mov
movups
lret
sub
and
cmpb
es
std
sbb
fs
test
sbb
shll
shlb
pop
fidivs
aaa
test
sbb
sti
fs
push
jp
or
imul
mov
mov
jg
xor
jp
lret
leave
xor
and
lret
into
add
aam
inc
roll
xor
popf
insl
jg
movsl
icebp
jecxz
jmp
and
aam
xchg
and
add
lods
xchg
in
dec
imul
inc
fnstcw
cmc
shll
cmc
lcall
into
jnp
fcoml
out
fstpl
stc
sub
leave
mov
xchg
adc
rclb
arpl
xchg
or
out
adc
outsl
mov
je
and
repz
cli
mov
sbb
test
fidivrl
dec
scas
mov
inc
fdivrs
pop
add
fistpl
dec
cmpsb
loopne
mov
push
lcall
xchg
mov
pop
push
and
jmp
jbe
movsl
dec
push
inc
nop
inc
push
lcall
sbb
inc
aaa
adc
sbb
adc
repz
shrl
jmp
cwtl
jbe
dec
es
fst
iret
add
and
push
pop
pusha
xor
cli
sbb
nop
dec
ja
xor
je
in
mov
jge
daa
leave
pop
inc
xchg
jp
and
incl
jo
loop
popa
pop
ja
arpl
and
and
das
repz
xchg
lahf
out
xchg
in
jmp
jge
gs
push
ds
sbbl
out
fcompl
mov
mov
leave
mull
inc
dec
add
and
test
popa
xchg
lret
jge
xor
dec
std
notb
push
fcoml
lea
nop
outsb
xor
push
push
mov
shll
push
icebp
enter
jg
sbb
jmp
int3
push
in
sub
rolb
xchg
and
adc
sbb
enter
push
dec
scas
sarb
cmc
sbb
xchg
adc
enter
call
push
gs
pop
aas
mov
mov
mov
cmp
imul
jl
adc
cmp
les
jns
movsb
pop
push
aam
push
lret
je
stos
push
dec
adcl
imul
sti
in
out
inc
lods
loop
scas
bound
imul
ja
and
sbb
mov
jge
mov
lcall
inc
fisttpll
pop
setl
std
in
mov
sahf
inc
mov
jmp
jb
dec
hlt
xchg
cli
jecxz
dec
popf
xchg
xchg
sarl
nop
add
scas
cld
mov
nop
or
fsubrs
add
inc
mov
das
je
mov
cmp
jae
xor
addr16
xor
sarl
clc
pop
in
fnstsw
mov
cltd
adcb
xchg
cmpl
and
push
mov
add
pop
jge
cmp
mov
mov
cltd
test
cbtw
test
push
sahf
jne
ret
lods
sbb
jbe
in
dec
inc
fs
xchg
movsl
int
test
inc
ds
adc
xchg
daa
jbe
dec
out
adc
mov
fisubrl
jmp
sub
lods
mov
repnz
add
mov
shll
ja
sbb
pop
outsl
ds
stos
adc
inc
sbb
test
xchg
cmp
movsl
ficoml
jmp
push
in
insb
lahf
inc
clc
cmpsl
push
and
sub
push
inc
pop
dec
mov
mov
lods
stc
add
data16
pop
xchg
test
xchg
mov
into
cld
pop
inc
push
insl
clc
add
rcrl
pop
fcoml
sub
dec
rcrb
mov
sbb
mov
in
xchg
repz
or
pop
push
js
insb
and
popw
stc
mov
adc
jb
sub
je
push
enter
xor
enter
mov
adc
rcll
mov
add
shrl
mov
outsl
negl
xchg
jns
sbb
pop
cmp
fisubrs
rcrb
cmpsl
loop
push
lea
mov
inc
test
fisubl
inc
in
aaa
jp
xor
scas
shll
sub
frstor
rol
std
cmp
push
dec
dec
push
xor
add
cmp
or
rcrb
stos
aaa
testb
pop
xchg
ss
aas
hlt
mov
xor
test
icebp
jnp
mov
iret
mov
mov
sub
fistpll
ret
mov
insb
fiaddl
mov
orl
popf
dec
or
ljmp
jno
inc
jnp
pusha
rcrl
mov
adc
xchg
repnz
dec
xor
loop
lods
dec
lds
ds
out
sbb
js
xchg
dec
nop
hlt
xchg
push
dec
xchg
add
movsl
paddq
mov
jno
rorl
arpl
mov
jae
aaa
sarb
ds
loopne
pop
fs
sahf
mov
lahf
mov
icebp
mov
das
into
add
xchg
jp
cmp
dec
xor
and
jge
sub
dec
push
sub
or
xor
hlt
pop
stos
dec
inc
in
mov
adc
jbe
cmp
fsubrs
jle
mov
daa
push
ret
pop
fidivrs
rclb
mov
lahf
and
adc
into
xchg
lods
inc
faddl
iret
fucom
test
jne
sbb
dec
xchg
mov
out
shufps
sbb
xchg
fdivrs
pop
rorb
xchg
lret
pop
or
pop
pop
lahf
jl
mov
jo
add
out
sub
jecxz
adc
movsl
mov
notl
mov
orps
or
cwtl
lcall
jecxz
mov
inc
mov
sub
mov
push
arpl
pop
lods
mov
sbb
test
or
inc
xlat
jmp
or
and
jo
fadds
pop
push
and
test
mov
fs
mov
stos
lock
fcoml
mov
out
or
dec
jg
cmp
insb
pop
xor
push
lcall
inc
enter
hlt
dec
mov
adc
out
and
lahf
jl
xchg
test
in
arpl
cmp
push
out
pop
push
cwtl
and
xchg
pop
cld
in
frstor
gs
lahf
divl
cmpsb
xor
mov
inc
test
andb
insl
lcall
daa
inc
test
mov
aad
ss
adc
std
adc
dec
clc
mov
mov
clc
icebp
loope
xor
mov
push
lods
dec
adc
clc
cmp
fstl
aad
inc
and
jge
jp
adc
add
xor
xchg
stc
dec
int3
cmpb
aas
int3
mov
stos
ds
popl
mov
xor
mov
or
xchg
faddl
les
in
and
out
in
mov
sbb
loopne
xchg
sahf
pop
mov
jp
mov
push
repz
aam
pop
out
push
movsb
xchg
int3
add
sar
pusha
lods
repnz
rolb
ljmp
iret
pop
cmp
mov
or
daa
mov
pusha
cmp
cmc
xor
xchg
repnz
imul
and
shl
loopne
or
sarl
or
rcrb
dec
xchg
clc
pop
enter
add
sahf
loop
sub
lock
lret
insl
cli
icebp
aam
sbb
dec
outsb
xchg
insl
mov
or
ret
pop
repnz
js
imul
inc
enter
lock
in
inc
nop
out
and
outsb
sbb
mov
add
fcoml
ljmp
test
sarb
inc
jno
iret
sub
jb
and
fdivrp
inc
call
dec
add
std
add
out
subb
push
ret
sbb
jge
xchg
pusha
jl
cwtl
add
or
sahf
andl
loopne
fs
outsb
shrb
pop
sub
out
mov
fisttpll
inc
std
mov
shrl
shrb
imul
jbe
push
fidivrl
cmpsl
les
cmp
push
mov
and
xchg
sbb
outsb
jo
je
jns
dec
popa
sbb
ret
inc
xlat
loope
add
hlt
sub
mov
adc
insb
push
ss
or
jmp
rcrb
adc
js
xlat
add
addb
mov
clc
jmp
into
ud1
pop
mov
pusha
loope
adc
inc
inc
cmp
mull
inc
jo
mov
push
fstps
mov
insl
sarl
pop
adc
xchg
inc
fwait
pop
repz
mov
insb
xlat
or
pop
jmp
out
clc
paddusw
out
adc
push
push
dec
sub
fwait
clc
pop
mov
popa
ret
xor
xor
fdivl
jecxz
movsl
push
pushf
or
lahf
mov
xchg
test
pop
jp
mov
jo
lods
movsb
outsl
mov
hlt
xchg
adc
adc
mov
loope
stos
stos
sub
jle
cmp
sahf
int3
mov
mov
pop
jge
jecxz
popf
inc
adc
andb
pop
jae
cmp
enter
mov
mov
jne
test
jg
adc
pop
sbb
adc
xor
xor
and
out
push
cmp
sbb
je
pop
push
sbb
test
fstps
fdivs
sub
jmp
pusha
stc
xor
rcrl
aas
and
dec
loopne
cmpsb
sub
push
push
subl
andb
sti
clc
pop
aad
nop
out
xor
mov
xchg
adc
mov
outsl
dec
add
push
rcr
jmp
loopne
gs
or
or
xchg
stos
sbb
mov
pop
fstps
andb
jns
jp
add
mov
push
outsb
sbb
xchg
mov
int3
xchg
mov
loope
aaa
rcll
lock
inc
push
cmc
sub
cli
lss
mov
scas
pop
mov
ret
dec
pop
xor
flds
push
sbb
sahf
xchg
adc
scas
fadd
cmp
cmp
ljmp
mov
test
fistpl
test
out
inc
mov
notb
adc
loope
dec
jle
pop
dec
xchg
out
mov
arpl
test
or
sbb
dec
ljmp
inc
cld
xchg
lahf
hlt
and
mov
in
loopne
jmp
ljmp
stos
insb
ds
pop
inc
xchg
fdivl
push
imul
rcrb
rorl
test
sub
cmp
xor
push
popf
stos
arpl
push
popf
pop
lods
dec
mov
fcomps
xlat
push
mov
fldenv
jb
adc
xor
nop
mov
popl
test
cld
das
test
cmp
or
mov
mov
xlat
mov
mov
pop
loopne
cmp
push
imul
lcall
pop
xchg
add
sbb
popa
testb
xchg
popf
bound
dec
sbb
test
push
jns
scas
mov
adc
jno,pt
shll
cmpl
lods
out
xor
loop
jge
ljmp
add
decl
imul
fs
cmpb
cmp
push
push
sub
push
adc
lods
das
pop
inc
les
mov
or
mov
mov
inc
adcb
sub
sti
inc
add
lea
fildl
add
jg
js
pop
je
divl
adc
in
adc
xor
enter
xlat
sbb
pop
data16
xor
fistl
insl
push
push
imul
mov
insb
dec
pop
add
scas
aaa
nop
and
jp
jns
repz
lods
xlat
push
xor
popf
pop
mov
inc
add
fisubs
lods
test
push
cmp
cmp
mov
data16
cwtl
popf
je
mov
mov
mov
xor
mov
leave
or
roll
mov
push
and
test
pop
clc
xchg
lods
jecxz
pushf
add
hlt
cmp
lods
mov
scas
fstpl
xchg
ffreep
push
les
xchg
mov
leave
mov
add
rolb
and
out
cmpl
jnp
pop
pop
mov
mov
inc
mov
imul
bt
mov
int
sub
sbb
call
push
jae
loop
xchg
test
jge
push
or
bound
push
std
jmp
int3
ja
sub
sub
dec
mov
lods
jg
stos
call
subb
cld
das
pop
adc
cmp
sbb
fcoms
jae
jns
xchg
fucomip
inc
repz
call
imul
ffree
pop
inc
fildl
iret
test
test
repnz
push
arpl
pop
ret
xor
or
fs
fdivl
inc
push
insl
push
js
xchg
popf
push
dec
xlat
cmp
mov
push
insb
iret
popa
xor
adc
and
mov
leave
lret
pop
mov
jb
sub
mov
xchg
pop
dec
jecxz
jmp
pop
push
outsl
dec
inc
cmp
fisubs
or
jno
mov
int3
fdivp
stos
int3
xchg
lea
lds
push
push
push
jnp
mov
dec
xor
insl
and
lods
inc
adc
sbb
int3
mov
sbb
push
lods
pusha
mov
add
push
shll
mov
add
jecxz
ret
sbbb
dec
call
rcrl
mov
sub
push
vsqrtsd
xchg
jl
cmpsl
es
movsb
inc
add
xchg
xchg
outsl
test
nop
dec
insl
ja
inc
lods
inc
cltd
adc
pop
dec
pusha
cmpsl
ds
adc
outsl
test
add
out
mov
lret
dec
pop
adc
or
addr16
pop
pop
add
mov
mov
jno
fwait
rolb
lods
fistps
xchg
scas
inc
or
daa
loope
cmp
ds
and
inc
jecxz
fstl
leave
prefetcht0
add
lock
mov
lods
in
inc
push
add
in
pop
jno
jb
adc
dec
push
ret
arpl
test
xor
xchg
adc
inc
sbb
arpl
mov
push
hlt
mov
sti
cmp
xor
adc
mov
repz
or
or
popa
jns
loop
xchg
shrb
mov
pop
sbb
mov
sti
xor
push
mov
push
fdivrl
xorl
cwtl
mov
ret
js
out
xchg
pop
lret
fwait
aad
sbb
jle
shll
je
push
pop
es
jmp
jge
jae
lods
sbb
sub
aam
insb
push
mov
rclb
mov
lcall
and
cmp
and
mov
xor
insb
mov
xlat
xchg
xchg
cmp
pop
es
ret
lods
ljmp
lods
jno
mov
fsubrl
or
jnp
cmp
push
mov
cmp
push
js
lods
rcrw
pop
jmp
jmp
lret
cltd
addr16
mov
int3
std
inc
mov
sub
outsb
pop
and
out
pop
jmp
xor
lock
into
mov
out
cs
addb
xorb
call
mov
mov
in
repz
ss
lcall
jns
xor
sarb
fstps
jmp
sub
pop
popa
test
sti
mov
scas
dec
pop
cmpsl
sub
je
inc
mov
je
mov
fsubs
xchg
cli
cltd
sbb
mov
jbe
pop
shrb
or
insb
and
inc
pop
cwtl
mov
or
stc
push
jge
jg
sbb
andb
inc
imul
cmp
lcall
cltd
outsl
lods
packsswb
push
repnz
push
add
lods
ss
jecxz
or
decb
pop
sub
mov
clc
pop
emms
pop
test
xchg
pop
data16
sub
lods
rolb
loop
push
icebp
rcrl
negb
fdivl
dec
pop
fwait
push
jne
mov
jno
pop
mov
xchg
jno
lock
mov
inc
mov
inc
loope
add
daa
dec
dec
loop
call
or
push
in
ret
sbbb
inc
xchg
mov
add
mov
add
xchg
push
pop
lds
sbb
add
sbb
add
push
sbbb
fadds
adc
jmp
out
mov
clc
clc
mov
aam
xor
xlat
jl
in
add
inc
jecxz
push
rcll
rcrl
xor
in
int3
ja
mov
out
sub
es
rol
cmp
push
cmp
inc
dec
sbb
addb
jo
cli
adcb
out
aam
add
mov
int
imul
imull
add
mov
loope
std
push
push
mov
push
mov
sbb
jb
negb
jp
or
imul
inc
xchg
out
sub
adc
mov
loopw
push
cmp
lahf
cwtl
fiaddl
push
aas
mov
mov
or
push
jbe
in
pusha
ret
jl
iret
iret
cmpsl
int3
inc
ret
int
pop
lock
lret
xor
mov
ds
xor
sub
sti
or
test
rcl
mov
jl
mov
jbe
test
out
mov
pop
cld
cli
mov
stos
xor
idiv
mov
xchg
lret
dec
push
cli
xor
cmp
xchg
lcall
leave
mov
mov
push
push
addr16
loop
inc
imul
add
push
jl
iret
call
loop
in
jo
nop
bound
cmp
mov
fstl
test
pop
fs
movsb
imul
mov
or
es
pop
testl
std
pusha
lock
mov
insb
cmp
jnp
or
aas
mov
je
push
sarl
jns
out
xchg
pusha
pop
scas
pop
in
div
inc
push
data16
test
mov
mull
or
mov
int3
lret
cmpsb
hlt
call
mov
adc
sub
pop
aaa
lods
out
loopne
insl
inc
hlt
fwait
aaa
dec
jg
lea
or
shlb
mov
mov
aas
das
fistpl
mov
out
add
fiaddl
sbb
or
lods
jp
sub
or
arpl
sub
xor
push
pop
lock
sar
hlt
cmpsb
out
test
pop
outsl
in
mov
aaa
push
int3
sbb
cmp
dec
xchg
mov
out
push
pusha
out
cmc
mov
aad
push
pop
and
push
mov
cmp
fcomps
addr16
scas
or
sbb
cmpsl
and
mov
sub
xchg
inc
push
and
dec
push
cwtl
cli
das
inc
jne
cmpsl
stc
inc
or
pop
loope
xchg
adcb
fsts
bound
ljmp
stc
mov
sbb
outsl
sbb
lret
in
pop
push
xchg
jo
mov
add
or
les
mov
lret
jecxz
movsb
pusha
sbb
inc
mov
pushf
stos
push
scas
lds
xor
or
clc
rclb
lea
add
cs
xchg
xlat
jae
adc
cmp
cmp
lods
out
push
cmpsl
lcall
sub
dec
adc
pop
ja
xor
xchg
out
cs
lahf
scas
sub
inc
int
cmp
push
aas
les
mov
lret
xchg
jno,pn
add
push
pop
insl
xchg
dec
inc
xchg
sub
cmp
jb
loop
fisttps
loope
pusha
lds
test
das
iret
xor
mov
fcmovnbe
movups
cmp
aaa
test
rcl
fnsave
sub
fsubrs
loopne
dec
out
mov
dec
testb
push
xor
popf
mov
add
xlat
fidivrs
adc
popf
fmull
sbb
push
mov
test
data16
into
mov
jl
xorb
int
cmpb
or
popa
push
sti
std
xor
cs
mov
lret
icebp
jne
mov
repz
pop
push
mov
pop
mov
cmp
fs
xlat
bound
mov
push
stc
push
xchg
aaa
or
loop
inc
pop
lahf
insb
xorb
imul
fmull
out
test
jb
jno
fldcw
mov
push
jae
mov
int3
mov
insl
push
cmp
ss
sub
cmpsl
xchg
int3
cltd
and
movd
enter
outsl
shll
sbb
mov
addb
hlt
setns
cmc
movsl
test
mov
cmp
ljmp
das
and
cvtps2pd
inc
push
lock
pop
stos
bound
scas
js
faddl
fs
xor
lods
push
test
cs
xor
imul
out
test
paddsw
dec
sub
push
lcall
xor
add
fldt
pop
inc
test
out
jl
adc
cmp
mov
push
hlt
int
add
pushf
out
lcall
flds
sub
cli
and
sbbl
xchg
ja
scas
repz
push
test
dec
add
stos
cmc
pop
add
mov
sbb
xor
sub
mov
push
mov
or
fisttps
push
mov
sbb
test
xchg
xchg
int3
insb
xchg
xchg
test
xchg
jge
xorb
dec
fcoml
data16
push
out
in
outsb
xor
jnp
xchg
cs
adc
hlt
sar
pop
clc
mov
imul
pmulhuw
imul
das
jns
mov
or
in
jl
mov
mov
inc
inc
scas
mov
ss
xorb
jae
fbld
sub
mov
imull
dec
popa
and
loope
cmp
movsb
in
or
push
inc
or
cmp
stos
cmpsb
fwait
mov
xchg
aas
js
xchg
cmp
mov
outsb
jg
jb
aas
xor
imul
mov
push
or
push
and
cmpsb
pusha
out
fsubl
dec
adc
and
sbb
into
pop
jle
jle
xor
xchg
xchg
mov
repnz
mov
cmpb
cld
pop
mov
adc
jp
cmp
mov
cmp
in
rcll
sbb
sbb
mov
fistpl
retw
dec
pop
add
rcll
movb
cmpsl
sub
jnp
cs
sarb
mov
mov
popa
stos
mov
int3
ss
and
mov
test
outsl
test
aaa
inc
f2xm1
lret
in
sarb
dec
shll
aas
loope
imul
in
rol
jle
pop
addr16
lds
and
loopne
ss
xchg
addb
mov
jb
inc
test
roll
sar
sub
dec
xchg
sbb
push
add
lret
mov
ja
leave
xchg
cmp
adc
movsb
scas
mov
fldl
add
dec
sbb
ja
sahf
xor
xor
mov
fmuls
repnz
call
or
dec
stos
stos
mov
aam
cmp
shll
cmp
loop
hlt
les
mov
and
mov
or
mov
pop
mov
push
adc
outsb
outsb
pop
mov
mov
dec
ja
or
mov
lea
jns
jp
in
pop
cmc
loopne
popf
dec
sbb
mov
lcall
icebp
outsb
pop
mov
add
lock
lret
dec
cmp
fiadds
jae
inc
out
lahf
mov
xor
scas
jecxz
aad
jp
test
pop
je
prefetchnta
mov
mov
xchg
pop
mov
pop
cmp
rcrb
aaa
xchg
mov
aam
xchg
andb
inc
add
lahf
sub
dec
sbb
negb
mov
lods
xor
outsl
mov
push
mov
dec
dec
lods
lock
mov
push
jne
mov
sbb
sbbb
mov
push
cmpl
adc
xor
inc
int
jne
add
pop
cmpsl
add
adc
cmp
mov
cmp
jmp
subl
push
cmpsl
scas
push
lds
xchg
rclb
push
and
imul
inc
pop
cmp
mov
cltd
cs
jl
sub
inc
stc
xchg
lret
ljmp
outsl
repz
pop
insb
stos
xor
in
xchg
dec
mov
or
mov
cli
mov
iret
cld
mov
int
jnp
repnz
mov
insb
jg
cmp
jbe
dec
jne
inc
sbb
pop
xor
and
mov
sar
xor
mov
pop
mov
add
imul
dec
jge
jl
push
roll
jg
cltd
adc
gs
fs
and
lods
and
loopne
pop
sub
lods
cmc
dec
sub
cmp
or
adc
aad
stos
pop
outsl
in
sbb
and
sub
mov
mov
jo
sbb
mov
adc
shll
fiaddl
xchg
sub
jb
mov
stos
movsl
push
sbb
add
dec
fsqrt
mov
and
lds
dec
mov
mov
das
dec
ret
test
mov
aas
mov
aad
imul
rcl
shll
aad
ja
xchg
stc
inc
and
add
inc
mov
sub
jne
lret
shr
dec
lods
mov
leave
int
push
imul
inc
inc
clc
mov
dec
in
xchg
stc
xor
decb
test
and
pop
dec
inc
scas
add
pop
xlat
stos
in
enter
or
xor
and
shrl
scas
fidivl
mov
sub
das
js
fwait
inc
or
cld
fxch
ja
pushf
xor
sbb
push
mov
fdivrs
leave
cld
les
pushf
xchg
and
push
out
mov
push
out
mov
fldl2e
aaa
subw
mov
sbb
sbb
lahf
mov
inc
fs
pop
inc
jbe
std
loope
pop
push
inc
stos
fsubl
pusha
pop
rolb
int3
xchg
popa
xchg
xor
addr16
scas
jl
loope
ljmp
and
xchg
inc
fnstcw
mov
fcomip
and
jecxz
daa
push
fistpl
and
roll
sbb
jg
iret
adcl
jnp
lods
dec
int
push
addr16
mov
loope
call
xchg
xor
iret
rcll
push
lods
pop
sti
mov
ret
adc
xor
int
into
mov
imul
dec
shll
lret
sbb
outsb
icebp
cmc
sahf
dec
stos
sub
adc
xlat
xor
cmp
aaa
or
addl
std
fdivl
cmp
test
rclb
add
loope
cwtl
lahf
call
pop
xchg
push
mov
pop
push
outsl
inc
inc
sbb
cwtl
jbe
jo
add
mov
cwtl
xchg
sub
or
xor
adc
jb
adc
mov
sub
sbbl
sti
icebp
cs
ljmp
dec
orl
fs
shrb
jg
add
pop
mov
push
push
xor
int
mov
lret
arpl
or
mov
push
lods
mulb
shl
add
dec
inc
mov
inc
outsb
stc
sbb
les
or
ror
roll
xchg
negl
adc
hlt
inc
jb
fsubr
dec
in
add
dec
ss
jle
inc
xchg
mov
outsl
dec
aas
adc
imul
rol
xchg
shll
mov
push
mov
xor
xor
cs
dec
ss
pop
pop
mov
adc
sbb
ret
cltd
icebp
or
add
addb
ret
cmp
pop
xor
and
push
cmp
inc
or
es
cltd
cwtl
push
xchg
cmpsb
and
mov
into
fidivs
inc
sub
mov
test
mov
movsb
mov
mov
add
xor
mov
out
dec
bound
fcmove
dec
ret
jae
sub
push
ja
out
into
xchg
in
mov
cmpl
fsubrs
dec
add
pop
aaa
xchg
addr16
mulb
pusha
out
jne
into
ljmp
pop
push
movsl
push
jb
loop
ficoms
inc
xor
testl
mov
jge
jbe
sbb
lock
pop
aaa
in
inc
ret
aam
fmull
lcall
dec
fimull
dec
push
mov
xor
call
jb
mov
xchg
push
cld
ljmp
xor
mov
mov
mov
out
lods
pop
and
adc
aas
xchg
mov
loope
movb
movsb
std
mov
lea
shll
test
ljmp
fistpl
mov
xchg
add
ret
mov
insb
je
push
bound
mov
ja
lods
inc
ror
rcrb
out
clc
arpl
and
std
xchg
std
aas
arpl
fisubrs
popa
pop
push
shlb
cwtl
mov
pusha
std
adc
fiaddl
pushw
push
fnop
mov
dec
mov
lods
cmp
push
adc
adc
insl
fsub
jbe
icebp
je
push
cmpb
cmp
and
jb
ds
mov
or
lods
cmp
pop
jecxz
out
push
dec
jmp
dec
movsl
fldt
orb
pop
mov
inc
sbb
jle
cli
imulb
xchg
adc
push
out
sub
in
mov
inc
sub
dec
insl
and
inc
arpl
icebp
stc
mov
lods
fistl
cwtl
divb
pop
and
sbb
jle
in
ret
cwtl
cmpsl
or
scas
mov
pop
stos
stos
lahf
bound
outsb
test
in
ss
and
cwtl
jge
jne
xchg
ret
mov
cmp
fmull
xchg
xor
mov
imul
popa
inc
mov
xchg
inc
repnz
mov
cmp
cmp
inc
fistpl
or
sub
outsb
sbb
flds
shrl
leave
mov
daa
pop
and
cmp
daa
sbb
dec
mov
jns
std
movsl
test
jle
cs
xchg
cmp
fimuls
jne
cli
xor
divl
dec
adcl
pop
stos
dec
jo
js
stos
mov
sti
inc
sub
lcall
and
insb
cmp
xor
lea
pop
cmp
jno
inc
push
test
int
mov
xchg
aas
cmpsl
dec
rcll
mov
mov
sahf
add
mov
sbb
cld
cs
int3
dec
adc
and
into
hlt
xor
dec
inc
ret
mov
mov
fmull
dec
and
int
cmp
outsl
mov
inc
or
iret
shlb
cs
imul
and
pop
es
add
stc
push
jle
outsl
scas
aam
fisubrs
in
subb
sub
loopne
aam
rorb
shll
jno
nop
pop
movsb
cmp
mov
pop
cmp
loop
outsb
arpl
ja
ljmp
loope
ds
dec
xorb
sbb
pop
jb
xchg
cwtl
mov
pop
cwtl
enter
mov
pushf
mov
lahf
stos
out
stc
sbb
ret
pop
and
jb
pop
pop
xor
imul
jmp
icebp
sub
cmp
fistpl
bound
popa
fwait
mov
push
xchg
repz
mov
push
push
mov
xchg
lret
add
xlat
roll
mov
push
jae
jle
mov
pop
sar
cwtl
mov
xchg
xchg
mov
pop
lret
jae
in
loopne
cmp
mov
pop
test
lds
sbb
pop
lret
test
outsl
xchg
fwait
pop
fcmove
push
mov
or
adc
sarl
int3
sbb
dec
dec
jg
cld
aaa
shrl
xor
ret
lret
outsl
icebp
pop
stos
es
mov
push
aad
test
fs
test
add
inc
leave
mov
jmp
xlat
sub
sahf
xchg
ficompl
leave
inc
into
mov
outsb
loope
xorl
mov
cmpsl
xor
xchg
and
out
fs
scas
fldl
mov
and
test
sar
inc
jge
push
add
cmp
outsl
call
lcall
mov
sub
push
scas
std
pop
shl
leave
push
sbb
scas
xor
jne
mov
pusha
pop
mov
jecxz
xchg
or
test
push
mov
in
add
mov
in
add
sar
adc
data16
ljmp
pop
mov
jb
pop
lret
frstor
sub
and
ja
dec
into
xchg
dec
push
add
fmuls
mov
sti
out
sub
add
ss
jl
cld
ss
push
call
sbb
orb
push
add
adc
xchg
cmp
mov
mov
aad
inc
jo
mov
repz
roll
cmp
adc
aam
mov
push
jb
pop
roll
adc
scas
mov
jne
fsin
pushf
lods
inc
fidivs
jg
or
push
orl
insb
push
xor
add
daa
cmpb
push
pop
mov
and
into
mov
outsb
lret
adc
stos
or
and
cmp
xor
fildll
mov
stc
fmuls
fwait
imul
push
mov
shrb
mov
shrl
mov
xor
push
mov
out
fstps
and
xchg
outsb
mov
int
inc
imul
or
and
aaa
cld
sub
add
xor
mov
jmp
sti
inc
sub
cmp
cmp
sub
inc
sahf
inc
xor
test
subb
lds
mov
into
xor
scas
ret
out
add
mov
mov
fwait
call
in
fsubl
out
mov
mov
push
add
xor
cmp
jmp
mov
lcall
pop
dec
push
in
movsb
pop
adc
out
rclb
and
int3
pop
imul
xchg
rcr
cmpsl
mov
lods
out
lretw
les
cmpsl
popa
pop
jbe
js
lods
cmp
mov
aam
and
mov
xor
cmp
fnsave
pop
ja
xchg
shrl
cmc
pop
adc
xchg
xor
aad
adc
je
mov
mulps
pop
shlb
repnz
in
xor
repz
xor
adc
faddl
lea
scas
mov
cmp
aam
jo
hlt
pop
cli
mov
inc
mov
xchg
mov
xor
xor
push
lahf
mov
fstpl
sbb
movsl
adc
pop
push
pop
inc
hlt
add
cmpl
in
rcl
aam
cmp
jae
adc
mov
clc
xchg
xchg
push
test
push
aad
iret
in
pop
push
mov
fsubs
jbe
cmp
insb
les
ds
jge
mov
repz
push
addr16
sub
aas
mov
push
or
xor
ss
stc
outsl
out
mov
fstps
fnstenv
cmp
cmpsl
inc
jg
or
cmp
stos
adc
scas
mov
adc
cld
ss
inc
mov
dec
mov
or
cltd
stos
shll
xor
and
inc
in
xchg
sbb
lret
xor
inc
sbb
es
and
jbe
adc
les
inc
push
mov
lret
or
jmp
sub
ret
mov
mov
iret
bound
jae
or
adc
add
das
fiaddl
mov
sbb
fs
cmpsb
xchg
cmpsl
xorl
es
cwtl
int
int3
cs
lea
xchg
mov
sahf
and
aaa
aas
fcmovnb
mov
fstpl
mov
adc
cwtl
repz
xchg
test
loope
icebp
adc
cld
dec
pop
pusha
sbb
dec
insb
xor
rolb
add
clc
adc
pop
rolb
insb
stos
subb
inc
int3
mov
es
mov
jne
das
fldenv
lret
sarl
xor
inc
mov
push
enter
js
addl
mov
adc
rclb
mov
loop
sbb
inc
fidivl
scas
andb
scas
push
repz
call
aam
in
xor
fucom
leave
push
test
gs
ljmp
push
lock
mov
inc
jge
test
icebp
dec
imul
sarb
inc
push
sbb
jge
xchg
test
pushf
sub
stos
cmp
push
xchg
mov
pop
push
pop
and
mov
mov
mov
and
cmpsl
lds
sbb
and
mov
imul
cmp
je
xchg
push
dec
mov
mov
pop
loope
cmp
test
adc
push
sbb
testb
ss
lret
or
sbb
ret
cmpl
xchg
sub
and
mov
ret
gs
push
mov
outsl
in
fisttpll
adcb
hlt
fadd
test
in
dec
and
xor
sahf
and
pop
adc
push
xchg
cmp
or
shlb
add
loopne
adc
repz
adc
aam
cli
pop
gs
inc
ret
popa
arpl
mov
fwait
lahf
iret
pop
gs
sti
xchg
imul
gs
outsl
arpl
test
out
jne
ds
stos
stos
xor
ret
jle
dec
cmc
mov
sbb
iret
pop
dec
insb
add
adc
adc
ds
sbb
divl
pop
icebp
jne
mov
leave
rcll
inc
xchg
sbb
je
mov
loopne
cld
inc
daa
jo
sub
inc
xchg
nop
and
push
add
into
cmp
mov
mov
scas
idivb
xchg
cmp
rol
mov
aas
ljmp
lret
mov
iret
repz
lahf
ret
addb
cmc
icebp
pop
pushf
ficoms
lahf
dec
mov
mov
add
lds
repnz
mov
adc
jge
mov
test
jl
pop
dec
into
outsb
lea
test
jo
fisttpll
lock
stos
fwait
push
jle
add
and
fldt
cmpl
adc
sahf
mov
insb
loop
sub
insb
pop
pop
mov
push
pop
mov
ret
adc
outsl
xor
insl
in
mov
out
mov
lods
pop
and
inc
push
movl
mov
nop
nop
cmp
jl
inc
fcomip
add
xorl
stc
cmp
mov
xor
mov
or
mov
xor
mov
pop
mov
ljmp
cs
lods
push
inc
mov
repnz
adc
test
adc
in
add
test
pop
cmp
jns
mov
jno
mov
mov
cmp
stos
xchg
fistl
mov
cmp
and
xchg
push
lods
inc
sbb
ja
jmp
daa
mov
push
out
jbe
lea
aad
xchg
mov
adc
cwtl
cwtl
out
dec
dec
pop
das
xor
cmpsb
jns
test
imul
xchg
mov
mov
lock
inc
and
push
and
aam
ja
jae
mov
and
inc
jecxz
mov
movsb
inc
push
adc
adc
jo
xchg
and
sub
ja
ja
les
es
add
mov
inc
outsl
test
or
cmp
incl
jb
xchg
push
fimuls
outsl
jmp
cmp
cmpsb
fwait
jl
and
mov
lret
outsl
jecxz
mov
lcall
xchg
addb
ja
mov
stos
and
mov
shrl
aad
sbb
or
or
adc
shlb
aad
outsb
xchg
jmp
inc
add
adc
movsb
idiv
stc
add
test
idivb
and
add
adc
and
mov
bound
loope
aas
pop
scas
lret
add
sahf
mov
sub
mov
rol
jecxz
lock
fs
mov
dec
push
pop
adc
xchg
push
cmp
pusha
ds
rolb
inc
mov
adc
jno
or
xchg
mov
js
fistpl
add
jge
sahf
mov
scas
push
jle
mov
lods
out
ret
loop
mov
stos
and
dec
outsb
das
pusha
cltd
dec
loopne
add
jecxz
sub
mov
testb
xor
xor
adc
mov
dec
sbb
and
dec
adc
cli
loopne
or
lret
fsubs
adc
and
cmp
jbe
sub
fs
aaa
xor
pusha
and
mov
mov
mov
xor
ljmp
push
jle
mov
fdivrl
and
jnp
enter
xchg
push
lcall
inc
fucom
jmp
mov
ljmp
jnp
imul
mov
jge
ds
shr
mov
cmp
popa
push
sub
leave
lahf
out
sub
pop
mov
ficompl
mov
fcmove
cltd
mov
in
loop
xor
mov
push
lods
jns
sub
fwait
adc
repnz
sbb
sub
jecxz
sbb
jl
pop
ds
add
repnz
adc
test
out
pop
push
mov
mov
pop
dec
insl
lock
inc
mov
sub
mov
mov
in
cltd
or
push
and
out
sub
and
shrl
test
xlat
cmc
imul
jecxz
adc
hlt
out
rorl
repz
xchg
lods
aas
fsubs
jg
mov
mov
mov
ficoml
insb
sti
adc
inc
and
arpl
adc
jne
inc
inc
push
pop
fcompl
cmpsb
push
dec
dec
call
jbe
xlat
test
adc
mov
movsb
les
shrb
cmpsl
cmc
jae
fsubl
dec
in
jo
test
jno
or
and
or
ret
test
xchg
nop
inc
adc
adc
and
sub
repz
call
test
sub
push
adc
aad
pop
mov
push
aas
test
or
and
out
inc
lods
xor
js
fldenv
xlat
mov
out
addr16
inc
add
mov
movsl
cwtl
jp
rcll
outsb
mov
sub
ljmp
out
lcall
mov
lea
jg
sub
push
and
adc
xor
xchg
mov
and
out
icebp
inc
add
push
js
dec
scas
mov
in
push
test
fiaddl
mov
roll
hlt
xchg
cli
gs
xchg
aaa
or
mov
mov
dec
sarl
outsb
inc
sbb
sbb
jmp
data16
test
clc
sub
dec
xor
pop
adc
inc
mov
mov
outsb
andps
mov
leave
loop
sub
xor
movsl
in
mov
pusha
cltd
mov
hlt
lods
rcrl
mov
jmp
imul
adc
outsb
ret
fsubrs
mov
movsb
mov
mov
lea
mov
add
mov
xlat
dec
push
add
sbb
cmpl
push
xchg
pop
xchg
mov
pop
dec
in
fisttpl
loopne
mov
pop
lods
jecxz
xchg
repz
les
icebp
cmp
xchg
cld
adc
mov
inc
pop
pop
push
arpl
sbb
test
adc
pop
lods
adc
out
pop
aas
cwtl
xchg
aaa
mov
js
mov
inc
push
testl
out
test
insb
out
push
data16
or
imul
xchg
mov
jbe
data16
lret
mov
sub
mov
fnstsw
int3
hlt
mov
xchg
cs
mov
cmpsb
xchg
mov
mov
int
lahf
pushl
gs
inc
adc
repnz
lods
jp
sub
dec
xchg
jo
addr16
mov
xchg
repnz
push
cld
inc
sbb
and
roll
jg
sub
dec
dec
out
sbb
inc
cld
inc
mov
and
call
loope
jnp,pt
insl
push
xchg
mov
dec
mov
jg
add
insl
fwait
xchg
into
pop
outsl
test
pmullw
inc
sub
insl
repnz
and
jnp
push
adc
xor
test
ds
lret
xchg
pop
mov
cmp
push
xchg
repz
ret
inc
jecxz
cmpsl
xor
add
adc
out
cltd
stos
lods
shlb
add
rorb
mov
adc
mov
out
pop
out
pusha
mov
pop
sub
js
jno
stos
xor
inc
jle
inc
pop
fnsave
mov
xor
int3
ret
lock
sbb
gs
xchg
mov
dec
addl
fiaddl
pop
loopne
pop
test
aad
sub
int3
add
inc
loop
movsl
cltd
loope
mov
push
or
xlat
or
nop
sub
xchg
mov
sbb
push
cltd
push
pop
idivb
in
add
mov
cmp
xor
fcmovu
xor
push
lods
push
sbbb
lods
inc
aas
sbb
push
sbb
mov
inc
sbb
jno
dec
adc
mov
stos
cmpsb
xchg
loopne
cmc
jns
xchg
mov
push
inc
pop
je
jmp
mov
test
imul
xchg
mov
cmpxchg
call
inc
insl
push
outsl
push
cltd
mov
dec
nop
lcall
and
or
cmpsl
mov
cmp
mov
push
mov
mov
xor
insb
push
hlt
and
xor
scas
dec
push
sar
repz
in
in
pop
ret
sahf
ljmp
mov
jge
xchg
sahf
pop
adc
mov
cmpxchg
push
mov
push
mov
inc
icebp
xchg
xlat
data16
aas
push
ficoml
loop
mov
or
fisttps
mov
testb
dec
lock
ljmp
jnp
fldl
addr16
mov
out
jp
cmc
cwtl
push
push
or
push
ds
mov
cmp
mov
pop
es
push
ja
mov
mov
lea
repnz
aam
xchg
adc
das
pop
jno
mov
xchg
sbb
outsb
sbb
xchg
sbb
int
test
adc
jmp
pop
les
pop
xchg
inc
arpl
pop
pause
cltd
int
jecxz
inc
cld
fs
out
pop
daa
les
sub
call
xor
add
jne
and
push
lret
popf
mov
mov
sbb
adc
sub
mov
sbb
cs
xchg
ds
xor
ror
pop
xchg
pusha
mov
into
bound
scas
mov
pop
xchg
pop
filds
imul
cmp
add
cli
xlat
pop
iret
xchg
scas
and
jmp
outsb
pop
sbbb
std
mov
out
sub
jb
pusha
or
pop
pop
mov
inc
rorl
sbb
push
je
jnp
into
jg
pop
hlt
jne
and
pushf
jb
test
enter
loope
insb
fsubr
xchg
mov
loope
int
inc
jle
test
pop
sub
hlt
scas
inc
pop
and
push
inc
or
jl
mov
xchg
sub
mov
sarb
mov
push
cmovge
icebp
adc
xor
out
sbb
or
sti
inc
loope
cmpsb
xor
repz
jo
sbb
ffreep
pop
aaa
mov
cmp
push
jae
add
pop
imul
or
stos
jnp
mov
add
sbb
out
push
push
and
jae
ljmp
cmp
sub
push
inc
aas
push
lahf
adc
jmp
popa
xchg
fstpt
aas
sarb
push
mov
in
mov
pop
into
mov
inc
xchg
add
in
icebp
pop
cmp
inc
out
and
addr16
cmp
mov
push
pop
fcoms
out
jecxz
mov
adc
jle
and
movsb
stos
sub
dec
dec
inc
scas
cmpsb
cmp
jb
sbb
sub
orl
xchg
jnp
xor
loopne
rorb
scas
mov
je
fs
into
mov
fidivs
popf
aas
mov
aad
xchg
cwtl
ficomps
pop
rcrl
cmp
repz
mov
loopne
pop
inc
imul
cmp
jbe
push
adc
inc
push
daa
add
inc
fcomps
lret
add
stc
outsl
fwait
out
add
sbb
mov
sahf
push
xlat
loop
cld
mov
xchg
inc
int3
adc
int3
int
test
mov
and
jbe
xor
mov
lods
into
jecxz
mov
imul
jns
and
out
insb
sub
stc
hlt
iret
dec
add
in
sub
pop
xchg
jecxz
xor
xchg
clc
das
pop
dec
pop
pop
push
arpl
nop
divl
cmp
mov
sbb
clc
and
repnz
pop
sbb
lods
pop
mov
inc
testl
jns
cltd
mov
pop
ret
push
pop
jb
data16
je
inc
stos
cmp
subb
rclb
loop
and
jae
dec
jns
or
mov
aad
xchg
pop
jbe
xchg
sub
mov
lea
xchg
push
xor
out
test
push
pop
shl
mov
clc
jo
and
add
aam
test
mov
loop
cli
lcall
pop
pop
mov
jp
iret
out
repnz
cmpsb
pop
orl
int
outsl
hlt
add
push
aas
pop
adc
into
fistps
inc
daa
dec
shrb
pop
xchg
pop
pop
xchg
orl
in
imul
push
fstps
sub
xor
or
inc
adc
mov
cmpb
int
shll
das
sbb
into
cmp
mov
ror
lcall
mov
dec
pop
add
lahf
ljmp
and
push
dec
push
mov
in
cltd
fld
mov
mov
icebp
ljmp
jl
int3
loope
movsb
cmpsb
pop
pop
sbb
cmp
aam
aas
pop
js
mov
jb
push
out
jae
das
ret
jl
repnz
and
mov
sbb
outsb
adc
cltd
insl
jmp
adc
mov
nop
push
push
push
loope
in
cmc
in
sub
call
ret
mov
push
jle
fcoml
jb
fucompp
mov
mov
mov
in
bnd
insl
hlt
sub
ss
arpl
aaa
pop
rcr
xchg
es
and
negb
and
in
ss
enter
mov
push
mov
out
mov
and
pop
cmp
fcmovbe
ror
mov
and
fcoms
testb
insb
mov
es
sbb
int3
lret
sti
sub
icebp
loop,pt
arpl
test
xor
push
testb
adc
out
dec
iret
lods
sbb
rol
pop
mov
cmp
pop
push
mov
scas
fnstcw
lock
pop
repz
in
movsl
inc
test
sbb
push
mov
imul
cli
dec
jae
cmp
lock
addr16
addb
mov
inc
daa
mov
xchg
subl
pop
loope
dec
loope
sti
pop
cmp
mov
xlat
iret
fsubl
sbb
pop
or
das
fsubl
rdpmc
dec
inc
repnz
nop
lods
loope
orb
out
mov
sbbb
push
scas
adc
cmpsl
sbb
mov
imul
dec
mov
jb
add
cli
jo
mov
das
xor
mov
fcmovnb
insl
pop
mov
dec
divl
insl
jp
mov
adc
sub
push
lcall
leave
cmp
out
shl
testl
repz
mov
inc
sub
cmp
lods
mov
test
inc
mov
and
notl
decl
push
mov
cmp
mov
xchg
in
repnz
sbb
pushf
cmp
in
les
adcl
test
cmpsl
fistl
dec
and
imul
push
fsubrp
arpl
icebp
mov
pop
inc
sbb
decb
loope
cmp
cli
lods
push
push
mov
insb
test
push
fisubrl
cmp
adc
rcl
mov
inc
adc
sbb
jnp
test
push
inc
mov
rolb
mov
xchg
je
fidivl
mov
and
shlb
ret
and
and
rorb
lods
jae
pop
pop
fisubl
inc
pop
or
fdivs
inc
sbb
xchg
call
cld
loop
dec
and
shl
aaa
dec
cld
and
add
push
mov
ss
or
jae
repz
sbb
pop
and
mov
lret
dec
or
test
xor
cli
inc
idiv
lret
xchg
push
lahf
scas
aam
jmp
sub
mov
push
sub
and
cmp
in
scas
sub
fwait
add
xor
pop
ss
aas
jg
stos
mov
pop
sbb
ljmp
add
pusha
xchg
xchg
mov
out
das
jl
insb
cmc
sub
js
js
popf
dec
jg
jmp
outsb
and
dec
xor
cmp
es
lcall
push
mov
out
fwait
jns
mov
mov
xor
sti
pusha
orb
push
sbb
rorb
sub
adc
push
jnp
movsl
lock
mov
sbb
clc
fstl
mov
std
int3
loope
sub
ja
std
dec
loope
lcall
and
adc
mov
outsl
inc
out
adc
fcoml
jnp
dec
xor
cli
xchg
mov
into
xchg
scas
and
lcall
jne
pusha
pop
bound
inc
shlb
out
lahf
andb
into
or
push
jne
test
inc
ror
push
xchg
es
call
negb
mov
jp
mov
call
enter
addl
xchg
int3
out
or
cmpsl
push
and
stos
or
mov
mov
sub
in
sbb
aad
mov
sub
sub
rcll
test
xor
or
sub
outsl
sub
pop
mov
ret
dec
js
cmc
xchg
das
test
jg
pop
sub
mov
ret
bound
sbb
lcall
leave
out
jge
es
mov
xchg
jmp
push
lret
pop
test
and
xor
mov
popa
jp
enter
mov
lea
mov
ljmp
hlt
or
into
mov
or
repz
ds
or
je
inc
push
aaa
push
int
test
pop
lahf
mov
fs
lock
lea
fsubp
mov
test
and
push
fcomps
movq
pop
push
mov
call
int3
subb
jge
push
cmp
jnp
push
sbb
sbb
xchg
imul
stos
cwtl
test
je
mov
or
mov
adc
scas
outsl
leave
dec
iret
or
mov
push
movsl
ror
mov
pop
mov
mov
pusha
pushf
inc
adc
call
xchg
pusha
mov
inc
repnz
cld
mov
push
jp
stos
adc
out
test
test
mov
cmp
pop
adc
lahf
fstpl
aaa
xchg
in
mov
push
arpl
push
pop
and
sub
xor
arpl
pop
enter
movsb
jnp
mov
dec
gs
or
inc
pop
mov
in
popa
nop
mov
jbe
adc
testl
mov
loop
sbb
sbb
stos
out
lahf
loop
cmpb
nop
sub
out
iret
call
imulb
bts
and
andl
or
cmpsb
jo
cld
inc
adc
loope
cld
push
std
imul
jp
adc
pop
pop
adc
add
jno
xor
fisttps
in
mov
fstps
sti
adcb
xchg
xchg
jno
sbb
push
and
push
clc
pop
enter
out
loop
push
xor
stos
xchg
ficompl
sub
test
add
push
push
in
push
xchg
clc
mov
dec
mov
push
cld
cld
pop
xchg
xchg
pop
inc
rcrl
jbe
out
xor
sbb
mov
les
and
jmp
stc
idivb
sub
xor
test
js
jbe
test
lods
mov
loope
xchg
jne
lret
je
push
mov
and
push
mov
movsl
shrb
lea
or
pushf
dec
aad
mov
jnp
daa
iret
dec
jns
push
int
xchg
or
jp
repz
out
xchg
or
imul
xchg
cltd
jo
and
dec
std
mov
rolb
sbb
xlat
lcall
push
je
and
xchg
in
mov
dec
je
xor
outsb
sub
jge
repz
add
testl
popf
jbe
outsl
rcr
out
mov
loop
inc
lods
push
push
push
imull
in
lret
mov
stc
aas
addr16
sbbb
ljmp
xor
or
jg
fdivrl
ret
nop
cwtl
lds
adc
mov
je
out
adc
stos
les
call
sub
jg
sbb
and
cmp
pop
mov
cmp
sahf
shlb
jo
xchg
addr16
cmp
mov
mov
add
inc
and
ja
xchg
lds
adc
sbb
lfs
push
pop
in
rcrl
movsl
scas
mov
fnstenv
mov
cmp
dec
mov
jmp
fldt
subl
dec
mov
shlb
add
pop
cmc
int3
mov
and
insl
jo
popa
mov
add
sbb
mov
sub
loop
push
cwtl
in
loope
sti
sub
test
pop
pop
lahf
mov
orl
cld
inc
popa
or
add
pop
shrl
enter
jbe
icebp
vcvtdq2ps
lret
jmp
lret
cmp
andl
sub
arpl
cmp
jmp
pop
adc
dec
jo
jecxz
mov
xor
out
push
ret
jl
pushf
aad
pop
and
fiaddl
jbe
adc
stos
push
add
or
jns
sub
clc
xchg
lret
stos
scas
repz
sti
shrl
icebp
fisttpll
sbb
fsubl
xor
jmp
pop
sbb
int3
iret
sub
aaa
pop
lods
jb
cmpsl
adc
cmp
and
sbbb
in
sahf
dec
xchg
sarl
adcl
call
mov
xor
adc
dec
test
sbb
pop
or
sarl
sahf
mov
xor
cli
inc
int
sti
outsb
lods
jo,pt
inc
dec
and
mov
lods
inc
lock
ljmpw
sub
aam
les
push
mov
or
add
jo
inc
jne
test
push
js
std
insl
int
ret
dec
movsb
orb
aad
mov
divb
iret
rcll
lahf
push
ds
jp
and
adc
jecxz
pop
push
cmp
enter
or
xchg
ss
mov
and
roll
stos
cmpsb
xorl
sbb
pop
xchg
mov
fldt
cmp
imull
mov
into
push
ret
push
dec
dec
data16
stc
ljmp
adc
call
loope
rorb
jb
divl
fsubl
cmc
mov
leave
mov
dec
inc
mov
daa
lods
xchg
out
repnz
fs
fstps
ret
adc
sbb
iret
sbb
inc
push
fs
jmp
cltd
lods
daa
inc
add
jge
scas
out
shll
stos
mov
inc
cmc
push
push
add
aas
daa
daa
or
cmpsl
mov
jg
xor
mov
fists
scas
xchg
daa
movsb
fldl2t
scas
mov
mov
cmp
std
aaa
pop
mov
pop
inc
std
sbb
xor
mov
xlat
and
daa
sub
pop
or
mov
les
or
mov
mov
xlat
jne
out
inc
insl
jae
mov
adc
cwtl
adc
dec
or
movsl
adc
push
sbb
insb
sub
pop
orb
dec
cmpsb
mov
sbb
cmpsb
loope
cwtl
loopne
int3
je
hlt
ror
inc
mov
xor
adc
push
test
add
xchg
jmp
cmp
ret
mov
mov
pushf
adc
aas
cmp
ret
inc
pop
dec
stos
aas
repz
arpl
hlt
push
push
inc
hlt
ret
mov
dec
jecxz
push
out
lcall
pop
jmp
add
pushf
mov
inc
push
outsl
mov
test
add
add
dec
lret
jge
orl
cmp
push
xchg
insw
adc
out
add
int3
fdivr
in
data16
mov
xchg
notb
jg
xorl
mov
xadd
loop
js
loop
inc
mov
fisubs
mov
dec
cmpb
xor
fwait
inc
add
aad
pop
adc
jns
pop
jle
outsb
mull
aam
inc
xchg
add
sbb
jne
test
inc
repz
rol
int3
mov
outsb
insb
sub
inc
test
aad
in
adc
orl
xlat
mov
js
mov
sbb
xor
mov
pop
jecxz
call
dec
imul
test
psrad
xor
jecxz
push
movsl
test
idivl
pop
jl
add
cmpl
cltd
pop
xor
mov
mov
mov
sbb
cmc
fs
in
and
vmread
pop
call
mov
sub
push
rep
mov
dec
shll
inc
dec
addr16
cwtl
cli
jl
push
clc
push
icebp
gs
mov
sub
es
xchg
ficompl
jo
bound
insl
lock
pop
aad
sti
lock
mov
push
lock
mov
shl
mov
icebp
add
adc
fistpl
jl
mov
dec
xchg
xor
pop
mov
and
mov
cmp
mov
mov
mov
rcrl
test
mov
cmp
enter
mov
fistpl
shlb
adc
mov
lcall
mov
or
sub
outsl
cltd
cli
cmpsb
pop
fs
lret
cmpsl
sbb
lock
push
sub
cmp
mov
push
shrl
lret
xchg
cwtl
mov
or
adc
cmpsb
xlat
sbb
enter
jecxz
sbb
jle
push
nop
les
or
mov
rolb
insb
fnstenv
pop
pop
add
jne
je,pt
or
xor
lods
dec
or
push
fs
rorb
lea
loope
ss
or
divb
sbb
pop
pop
faddl
fwait
mov
and
inc
bound
adc
dec
outsb
fwait
pusha
int
xor
jle
xor
dec
aaa
add
test
ss
rcll
mov
xorb
cmpsl
data16
mov
jb
push
and
push
jo
mov
jl
ret
adc
sbb
xchg
rol
rorl
pop
push
fdivrs
xchg
sar
cmp
into
mov
adc
cld
mov
insl
pop
inc
popf
sub
sub
cwtl
gs
mov
repz
stos
pop
ret
out
bound
and
ss
mov
inc
mov
adc
repz
xchg
xchg
sahf
stos
mov
mov
fists
shll
aam
adc
xorl
inc
in
add
ljmp
push
pushf
dec
push
pushf
outsl
cmp
loopne
or
sahf
inc
out
leave
leave
test
jo
or
push
sbb
dec
je
adc
int3
jl
mov
pusha
sbb
pop
out
repz
dec
int3
scas
shl
sub
pop
push
or
sub
mov
pop
ror
mov
push
pop
popf
leave
lahf
fdivs
jp
sti
xchg
xor
loope
int3
mov
subl
mov
push
xchg
jl
fs
in
mov
pop
jo
mov
push
notl
lds
popa
cmc
das
adc
adc
ret
fs
mov
sbb
xor
push
cltd
imul
pop
hlt
rorb
ficoml
adc
sbbb
lahf
mov
sbb
fmull
cld
push
or
dec
int3
stc
repz
out
mov
int
inc
pushf
je
pushf
arpl
inc
jae
pusha
xchg
insl
dec
out
add
xor
cmp
add
inc
add
sub
pop
lret
stos
add
pop
mov
nop
cltd
out
sbb
cld
sub
iret
cmpsb
xlat
and
outsb
fs
xor
add
in
add
sbb
insl
aam
ja
insb
jmp
mov
xchg
sub
mov
dec
gs
test
jnp
ret
cmpsb
sbb
jae
clc
lock
mov
sub
lods
repnz
mov
pop
pop
push
or
js
mov
cs
xchg
pop
fisttpll
xor
test
imul
rcll
push
fdivr
and
ss
fdivp
xor
popa
scas
mov
shlb
or
jl
es
aaa
in
dec
int3
push
test
aaa
and
xchg
mov
mov
and
xor
fisubs
inc
mov
sbb
xchg
xchg
cltd
mov
mul
repnz
or
aaa
insb
sbb
cmp
ret
clc
lds
in
lcall
enter
jg
push
movsl
dec
sahf
add
and
aam
ds
pop
cmp
adc
cmc
mov
mov
or
xchg
fmulp
jg
outsl
cmpsb
add
jl
sub
gs
inc
lret
mov
mov
jge
xchg
in
xor
rcrl
pushf
and
movsb
js
mov
pop
mov
sbb
outsl
xor
pop
mov
xchg
aas
pusha
mov
adc
xor
int3
popf
repnz
aam
push
hlt
test
int3
pop
lret
xlat
adc
mov
es
js
out
insl
adc
aam
cmpsl
jmp
push
pop
xchg
pop
cmp
pop
iret
mov
and
ljmp
lods
fwait
push
vpcmpgtd
mov
cltd
fsts
mov
sbb
pop
lea
lahf
push
ja,pt
sbb
sub
movsl
jecxz
inc
nop
fs
mov
mov
cmpsb
pop
fstpl
test
or
arpl
fbld
mov
repnz
push
sbb
bound
jmp
lret
jns
cltd
jo
cltd
sub
push
xchg
lret
cli
xor
hlt
push
push
sbb
cmp
mov
jecxz
xor
xor
cs
adc
scas
dec
pop
sub
push
inc
daa
or
cmp
in
inc
xchg
out
adc
xchg
aas
aad
aaa
mov
loopne
in
mov
xor
cmp
fadd
aam
movsl
inc
fistps
bound
lahf
or
xor
mov
push
into
loope
and
ret
imul
jno
hlt
jl
aam
stos
call
out
iret
or
xor
dec
scas
adc
insb
and
jecxz
jle
into
stc
adc
and
xchg
lods
fwait
xor
mov
mov
adc
pop
inc
jb
lock
fcompl
or
dec
nop
popf
add
fcomps
sub
adc
into
out
cmc
sbb
mov
js
or
aas
xor
jb
dec
sti
fistps
dec
sbb
inc
jnp
mov
mov
mov
out
xchg
movsb
push
js
mov
cltd
jle
xor
mov
or
cmc
lods
stos
imull
int
cmpsb
pusha
push
cmp
xchg
inc
in
add
leave
fildl
add
mov
xchg
jg
add
dec
out
lcall
xor
and
and
inc
ret
nop
cli
mov
mov
jl
xchg
inc
popf
shlb
loopne
fdiv
adc
push
fs
push
dec
cmp
jne
mov
cltd
mov
lods
xor
add
repz
insl
or
dec
shrl
and
push
jnp
mov
cs
rdtsc
out
sbb
pusha
fcmovnbe
mov
cli
sbb
sbb
or
pop
pop
sub
outsb
mov
jecxz
iret
cmc
dec
adc
pop
push
rcrb
fiaddl
push
fsubr
lcall
aas
dec
ljmp
mov
mov
add
cmp
inc
rol
repz
xchg
cmp
fs
or
sbb
or
lock
movsl
or
rcrb
mov
out
popf
push
scas
cmp
add
out
mov
icebp
xchg
push
xor
imul
cli
adc
sbb
push
sbb
cmpsl
jecxz
mov
xchg
jle
sub
jg
fs
sbb
sbb
fsub
mov
sbb
aaa
mov
aaa
lcall
out
xor
bound
jmp
jbe
xlat
stos
inc
inc
je
pop
cmc
mov
xlat
jp
mov
outsb
loopne
mov
andl
mov
push
cmp
ficompl
sbb
inc
fst
pop
icebp
mov
mov
jle
inc
push
cs
cmp
sub
jmp
stc
push
jb
je
rcrb
or
pop
pop
add
push
shl
mov
pop
mov
out
xchg
cld
mov
xor
cmpsl
iret
cmp
incl
jne
xlat
insb
inc
jg
sbb
and
cmp
cs
faddl
push
xor
push
loope
mov
ss
loop
arpl
jnp
add
add
std
rorl
sahf
mov
pop
xchg
sbb
push
xchg
test
ljmp
call
pusha
xchg
jmp
shrb
pop
clc
pusha
sbb
repnz
stos
mov
xor
fucomp
jae,pn
mov
imul
cmpsb
sar
in
movsb
enter
cli
jb
mov
mov
push
loope
pop
repnz
adcl
and
mov
pmulhw
andl
pop
xor
push
rcll
ret
cmc
loope
or
mov
mov
call
mov
mov
shll
imull
std
cs
lret
cmp
add
sbb
mov
xchg
jns
mov
xchg
pop
jecxz
push
mov
loop
pop
sub
sub
mov
add
mov
cld
pop
or
stc
sbb
mov
shl
int3
mov
xchg
xchg
mov
xchg
and
movsl
xchg
mov
inc
imul
cmp
push
lahf
xchg
sbb
fisttps
inc
add
jno
movsb
xchg
out
xchg
adc
xor
or
stos
xor
js
inc
sbbb
js
lock
scas
xchg
and
test
std
jp
stos
mov
test
pop
inc
mov
loope
cld
dec
xor
add
push
and
xor
xchg
mov
sti
lcall
call
in
or
adc
mov
lods
mov
nop
ret
and
inc
xchg
outsl
mov
mov
add
pop
sbb
push
shll
out
and
pop
ret
inc
mov
push
repnz
or
out
insl
cmp
pushf
jp
les
adc
inc
popf
pusha
sub
mov
out
cmp
push
add
int3
pop
fld
fwait
out
das
mov
int3
mov
xchg
cmp
iret
xor
mov
sbb
lahf
sub
outsb
dec
mov
inc
cmp
mov
aad
mov
hlt
push
cmp
xor
addl
sahf
sbbl
xchg
push
cmp
es
sub
ret
cmp
gs
jp
or
jno
movl
mov
mov
xchg
lcall
fs
xchg
cmp
sub
mov
push
inc
sti
xchg
sarb
fnstsw
into
and
sub
cltd
sub
pop
int
andl
pop
in
ss
sub
mov
push
mov
cmp
xchg
inc
mov
aam
bound
jle
mov
or
and
inc
dec
shll
arpl
fsubrs
pusha
mov
ljmp
xor
jge
fimull
pop
fs
pop
call
pop
mov
faddl
stos
stos
jo
mov
push
ret
mov
pop
jmp
in
loopne
push
iret
stos
negl
mov
movsl
xchg
jnp
sbb
repnz
icebp
in
sbb
xchg
stos
movl
mov
xchg
cltd
push
inc
xchg
xchg
icebp
jns
and
cmp
pop
xor
xor
enter
repnz
xchg
push
xchg
out
jae
cmpsl
popa
sub
pop
ja
mov
and
nop
popf
xchg
add
push
in
jecxz
or
js
cmpsb
push
loope
in
enter
jle
pop
and
or
inc
sub
mov
and
dec
popf
and
mov
in
pop
in
jle
hlt
stos
pop
mov
pop
insb
pop
lret
jne
and
test
daa
mov
lret
out
add
jmp
mov
test
fldt
xor
or
cld
movsb
jo
out
push
outsl
dec
cmpsb
out
aad
inc
mov
inc
out
dec
lret
push
or
fsubrl
js
sbb
rclb
mov
push
mov
jne
and
nop
scas
addr16
cltd
movsl
push
mov
mov
sahf
xchg
sub
jp
ret
and
daa
mov
sbb
jb
adc
mov
mov
mov
insl
xchg
add
push
es
outsl
pop
mov
adc
inc
dec
scas
jne
jg
cmp
testl
fcomip
xor
xchg
in
ret
dec
pop
ret
inc
dec
dec
std
cwtl
enter
sbb
cltd
out
mov
cltd
jbe
add
stc
cmp
sbb
out
mov
mov
pushf
dec
leave
rcrl
pop
ret
subl
cmp
gs
lahf
std
imul
mov
out
and
dec
lahf
mov
stos
andb
int3
cmp
inc
addl
loope
ds
jg
mov
sbb
andb
sbb
mov
clc
push
xlat
or
fsts
or
enter
mov
fs
xor
or
in
shlb
jecxz
mov
dec
into
sub
inc
jp
outsb
mov
jl
inc
cld
sar
inc
push
add
rol
mov
in
je
cli
xor
mov
push
repz
lcall
cmpsb
inc
push
ret
dec
mov
and
jp
cld
mov
int3
mov
add
push
jno
das
cmc
or
sub
add
imul
xchg
aam
enter
out
mov
ds
mov
je
ret
cmpsl
loopne
je
mov
loopw
add
xchg
fwait
loop
ret
stos
cs
setae
jecxz
imul
push
push
push
std
adc
mov
sbb
in
add
pop
push
hlt
push
bound
fcoms
mov
jge
sub
cmpsl
negl
sbb
fs
xor
dec
sti
clc
mulb
pop
sti
dec
popa
out
push
in
lock
ret
ljmp
call
cmc
lret
enter
add
jecxz
dec
or
mov
lods
cmp
mov
in
or
mov
mov
pop
repz
sub
pop
jbe
out
imul
out
into
insl
mov
dec
outsb
mov
or
inc
scas
xor
repz
jno
jl
nop
mov
xor
adc
pop
outsb
pushf
mov
sub
mov
fabs
push
jo
dec
sbb
mov
repz
sbb
scas
fs
jbe
xchg
jle
lds
outsl
mov
or
add
jl
insl
jl
sub
in
call
sub
adc
add
lea
dec
addr16
test
dec
mov
cmp
mov
mov
mov
mov
mov
jbe
subb
push
xchg
xor
pushf
imul
stc
dec
add
test
add
jae
out
arpl
pop
pop
push
xor
call
movd
jae
sbb
mov
mov
push
mov
inc
mov
jne
stos
push
ficomps
push
inc
dec
ss
out
and
arpl
mov
fadd
mov
lcall
jne
push
outsb
in
shrl
push
ja
xor
mov
mov
pop
test
fisttpl
cmp
jnp
daa
fnsave
pop
sarb
mov
test
add
adc
inc
pop
add
pop
dec
aad
jle
test
add
ja
xchg
rclb
push
mov
shll
dec
or
lds
inc
cli
inc
test
sbb
inc
ficoml
push
push
pop
insb
xorl
jmp
sbb
insb
outsb
movsl
mov
push
sbb
cmpsb
ds
movsb
and
jle
or
push
mov
jp
xlat
cmp
popf
xor
xchg
iret
rolb
mov
clc
movsb
mov
je
fstl
and
rcl
out
add
shl
repnz
jmp
and
aas
stos
lret
inc
les
cmpsb
dec
adc
add
in
sub
adc
cmp
mov
in
ss
mov
fs
jmp
jnp
or
das
push
xchg
xor
xchg
addr16
lret
pop
stos
push
mov
icebp
call
inc
std
icebp
inc
inc
outsb
ret
mov
jecxz
fwait
cmp
mov
mov
add
jnp
ret
inc
mov
dec
shrb
adc
xlat
stos
pushf
pop
rorl
adc
shlb
int
data16
push
lock
cmc
sub
ja
lock
cmp
sbbb
mov
fidivs
fdivrs
mov
cmp
cld
xor
mov
jl
inc
or
pop
xchg
scas
push
movsb
pop
mov
loop
hlt
adc
aam
xor
test
xor
inc
in
sbbl
push
pop
es
mov
lret
adc
jge
outsb
repnz
sysenter
cwtl
or
add
in
into
mov
fstl
hlt
test
fdivrs
pop
mov
mov
sbb
ja
mov
inc
test
fisttpl
mov
gs
push
jae
out
repnz
leave
xchg
sbb
push
or
in
xor
testb
sub
jp
jmp
ss
fildl
stos
xchg
sbb
stos
out
xchg
fs
mov
call
orl
add
push
imul
mov
jecxz
and
fs
movsl
out
sarl
mov
xchg
or
adc
int
leave
add
bound
cmpl
sahf
dec
jb
repz
sbb
leave
shrl
mov
shlb
frstor
push
movsl
stos
out
daa
mov
lds
ret
shl
fists
mov
xchg
outsl
cmp
sub
in
mov
cmp
add
pop
fistpl
call
and
and
and
ret
leave
push
imul
out
std
sub
pop
leave
out
sbb
pop
fcoms
cs
mov
add
mov
insl
pop
add
cmp
and
loope
sbb
push
in
xchg
idivb
lcall
sub
adc
mov
inc
ja
xchg
and
mov
jbe
cmpsl
xor
xor
mov
call
or
aam
cs
sbb
dec
mov
push
sbbl
repz
sbb
rorl
call
test
jge
fcomps
imul
clc
pop
shlb
arpl
out
pop
sub
pop
lret
dec
fnstenv
adc
dec
xchg
sarb
scas
jns
sbbl
and
add
ret
dec
dec
out
ror
and
push
push
test
mov
and
xchg
push
or
pushf
push
sbbb
xchg
scas
lret
mov
jnp
or
cld
jno
and
sub
lods
je
pusha
ret
pop
cmp
fistps
push
mov
imul
jnp
mov
fadds
dec
cmp
call
cwtd
mov
adcl
cmp
jge
cmp
incl
mov
xor
add
fidivrl
jne
cmc
lods
and
push
add
dec
jle
std
and
and
ret
cwtl
lods
inc
in
push
mov
mov
xchg
out
cwtl
jg
sbb
and
sahf
push
add
inc
in
mov
push
nop
pop
jae
icebp
cli
out
stos
gs
or
int
sub
call
push
es
inc
mov
adc
sub
mul
pop
lock
sub
das
inc
fwait
imul
add
mov
mov
mov
nop
enter
xor
out
fildl
int3
insl
cmpsb
xchg
push
mov
jb
xchg
push
pop
mov
mov
std
sahf
sub
mov
mov
test
in
mov
dec
sub
xchg
fwait
scas
pop
sub
jl
mov
mov
dec
jl
scas
into
insb
sbb
leave
es
ret
adcb
add
push
adc
sbb
or
movsl
sarb
sub
iret
pop
pop
fcompl
popf
lcall
push
fs
lea
push
xchg
rcrb
mov
add
je
in
mov
bound
setnp
cmc
inc
fisubrs
clc
pushf
jecxz
xorl
or
imul
pop
lock
mov
shll
jl
int
pop
fdivs
les
cmpsl
subl
enter
dec
nop
mov
adc
mov
and
jge
mulb
mov
ljmp
add
sub
shlb
sahf
out
cmp
add
sub
add
lea
adc
popf
jmp
imul
mov
js
adc
leave
shrb
jle
mov
sbb
sbb
pop
into
mov
xchg
das
pop
into
dec
pop
ret
dec
xor
cmpsl
mov
mov
out
add
rcrl
jp
push
ret
loopne
rcr
cs
fnstcw
idivl
push
insl
addl
scas
in
rcr
fsubr
aas
inc
filds
test
fwait
mov
jb
adc
sarb
jb
sbb
mov
jno
in
or
sbb
jle
push
ljmp
add
xlat
in
nop
mov
popa
xchg
cld
stos
mov
push
rolb
stos
adc
mov
lret
xchg
add
nop
mov
notb
push
jnp
mov
divb
pop
mov
push
sbb
xchg
popf
sarb
jg
sub
lock
int3
aas
lods
jg
sub
rol
in
lea
out
pushf
add
adc
inc
popf
rcll
add
jae
inc
mov
out
cmp
jecxz
jmp
icebp
daa
scas
rolb
mov
inc
inc
add
adcb
aaa
cmpsb
iret
ljmp
pop
sub
jne
sbb
pop
fcomps
or
push
jnp
sbb
mov
add
xor
popl
bound
imul
mov
cmpsb
stos
pop
cld
rclb
rcr
fldl
cs
out
sub
out
dec
push
cmp
adc
adc
and
jmp
mov
xchg
fnsave
iret
mov
push
sbb
pop
pop
cld
xor
shlb
ret
xor
sub
cmpsb
lods
repnz
test
mov
fs
xor
mov
pop
movsl
and
push
xchg
repnz
pop
fcom
arpl
jno
lcall
xchg
jb
xchg
je
adc
addl
cmp
fmull
adc
add
imul
andb
adc
cmpsl
clc
cmpb
xchg
push
or
cmp
jno
rolb
sbb
ret
lahf
mov
jg
out
jnp
fwait
mov
add
dec
inc
or
mov
xor
push
dec
ror
cmp
xor
imul
in
xchg
inc
sub
pop
cmp
loop
fistl
lahf
lahf
inc
add
jp
dec
or
xchg
out
cmpb
pop
fldl
push
loopne
add
call
data16
rorb
mov
fdivl
sbb
outsl
in
xlat
lret
cmc
lret
rolb
rcl
mov
cld
loope
lret
out
or
lods
out
or
adc
std
data16
out
mov
push
push
sub
loope
pop
sub
and
icebp
xchg
jp
xchg
iret
rolb
ds
and
dec
aaa
mov
sbb
push
insl
xor
pop
int
stos
out
mov
pop
dec
pop
lcall
adc
mov
push
mov
jp
push
xchg
fisubs
add
push
pop
popf
sbbb
mov
push
enter
inc
fs
push
sub
xlat
xchg
pop
cmp
loop
or
int
cmp
sub
ret
daa
adc
movsb
fsts
mov
ret
enter
and
in
xor
bndstx
div
movsl
sub
enter
dec
xchg
lahf
add
push
sub
fistpll
aas
pop
pextrw
dec
dec
jns
adc
inc
pop
orl
push
clc
lcall
out
test
test
push
jns
jge
js
or
sbb
xchg
call
inc
inc
adc
shlb
pop
add
sar
jg
in
push
adcb
pop
in
lret
and
xor
push
sub
add
into
test
mov
out
xchg
pop
xlat
cmpl
std
divl
push
mov
cmp
fcoms
jmp
scas
jb
inc
adc
mov
dec
adc
xchg
sub
js
jmp
cli
ljmp
shll
loopne
jp
push
lcall
push
inc
mov
fnsave
outsl
pop
ds
sbb
xchg
pop
js
neg
scas
aam
sub
sub
push
jmp
add
ret
cmp
mov
int3
arpl
push
sti
xchg
nop
cmpsb
sbb
call
or
mov
mov
cwtl
mov
outsl
push
pop
sub
ret
mov
xor
inc
int3
dec
pop
pop
and
jmp
aaa
push
fs
mov
arpl
push
xchg
pop
cld
subb
and
sti
in
mov
imul
outsb
sbb
push
xchg
sub
test
jle
dec
out
fcmovb
xchg
inc
sarb
pop
and
lds
or
repz
sbb
push
jo
mov
or
dec
stc
mov
cmp
std
cltd
insl
lcall
and
jo
testb
xor
adc
add
mov
movsb
jg
pop
add
fmuls
lea
icebp
and
xor
cwtl
xchg
mov
mov
sbbl
enter
daa
adc
mov
pop
loop
sub
or
mov
or
sub
stos
pop
mov
jmp
mov
in
jns
sub
das
sub
push
add
adc
into
pop
adc
push
xor
fwait
mov
mov
cmp
popf
push
or
mov
out
loope
jg
jne
pop
or
push
andb
pop
mov
xor
pop
cmp
outsl
sub
aas
push
out
das
int
or
xor
stos
inc
lret
cli
sbb
fsubrs
mov
out
add
out
add
or
and
mov
add
xchg
repz
int
les
out
lret
or
xchg
lock
and
scas
xchg
mov
fisubrs
adc
or
shl
lock
andnps
in
aaa
rcrl
xchg
add
jp
repz
in
sbb
xchg
adc
aaa
fldenv
mov
lret
jecxz
pushf
insb
jge
inc
push
aas
mov
lret
aaa
jg
mov
fiadds
movsl
inc
mov
or
cld
mov
add
or
lea
and
clc
push
jbe
ljmp
arpl
dec
dec
pushf
xchg
imul
push
inc
pop
imul
roll
out
mov
stos
fstpl
mov
adc
fstps
ss
adc
bound
xor
jns
sbb
xchg
mov
push
pop
int3
decb
in
cmpsb
out
sbb
pop
xchg
stc
lock
or
daa
or
add
or
ss
enter
cmpl
push
push
dec
aad
ds
loopne
pop
mov
icebp
mov
inc
pop
adc
inc
xchg
test
adc
push
test
popf
call
or
pop
push
inc
jo
lods
divb
jno
ja
sub
out
popa
mov
pop
rclb
test
dec
lahf
mov
dec
outsl
in
mov
or
inc
adc
add
int
mov
push
mov
sbb
xchg
faddl
push
insb
add
leave
push
mov
loope
in
test
stos
fidivrs
mov
in
xor
mov
inc
xchg
xchg
xor
inc
daa
mov
aas
jmp
sti
jmp
xor
jo
adc
insb
int
mov
and
jb
fs
or
xchg
or
jge
add
fsts
rcll
xor
inc
or
add
loop
out
push
xchg
fstps
mov
sti
pop
stos
sbb
push
inc
cmpsb
shlb
pop
add
iret
push
mov
in
and
popf
sahf
mov
mov
xchg
adc
mov
jb
jp
stos
jnp
mov
push
aaa
xchg
out
sti
rcrb
std
sub
inc
lea
leave
pusha
out
and
jecxz
mov
in
repz
push
mov
sbb
pop
test
in
lahf
out
dec
mov
push
mov
call
xchg
dec
shrl
aad
fistpl
stos
jo
push
shrb
mov
outsl
cltd
push
sbb
dec
add
inc
dec
iret
mov
jbe
insl
lret
push
aaa
ds
add
xchg
fimull
push
adc
xchg
je
sub
mov
mov
mov
pop
movsl
dec
push
fcmove
cmc
cmc
sbb
sti
inc
mov
mov
mov
jns
imul
dec
int3
shrl
das
lahf
fsubp
and
pop
sti
mov
repz
icebp
aam
movl
xchg
fisttpl
lahf
ds
sahf
sub
cmp
mov
mov
lods
aam
mov
loop
outsb
jo
int
fiaddl
cmp
mov
pop
ljmp
push
dec
loop
aaa
or
lods
xchg
jl
je
fildl
sub
imul
or
sbb
xchg
idiv
lock
fwait
ret
mov
add
sahf
sub
pop
or
add
aad
les
lcall
out
adc
or
adc
testl
shr
xlat
fnstenv
sbb
aad
jecxz
xchg
rcr
nop
outsb
clc
jo
xchg
push
movsl
cmpsl
nop
push
push
push
mov
div
and
mov
mov
push
loope
add
and
push
std
test
dec
popf
pop
push
mov
adc
mov
out
repz
jle
push
push
lock
and
xor
ds
xor
outsl
mov
outsl
clc
mov
subb
lret
mov
clc
lock
subb
xor
jb
push
addb
mov
mov
cmp
mov
dec
shl
push
cmp
data16
dec
cld
int
dec
mov
fistpll
and
testl
dec
xor
shl
mov
or
stc
xchg
fldt
inc
push
lock
les
repnz
out
ds
xor
pop
jb
or
es
xorb
jne
sub
pop
aam
add
push
jl
cmp
test
repz
jl
jbe
push
fmuls
pop
xorb
add
adc
sti
sbb
jbe
pop
aaa
inc
mov
inc
addr16
pop
repz
arpl
adc
or
or
jns
jnp
mov
rcll
pop
and
mov
test
movsb
icebp
mov
fildll
fucomi
int
sub
loopne
jp
aaa
pop
ja
adc
mov
lods
cmc
push
mov
push
sahf
mov
pushf
aaa
inc
icebp
xchg
xchg
clc
or
pop
rorl
jmp
or
adc
inc
pop
xchg
mov
pop
inc
pop
mov
in
or
pop
pop
jle
pop
xor
xor
add
adc
xor
mov
or
inc
adc
je
daa
jbe
mov
in
ljmp
xor
ss
repnz
inc
aam
cld
inc
and
cmpsl
push
adc
arpl
jecxz
in
cmp
jne
inc
cmc
aas
jecxz
sub
add
movsb
push
lahf
loope
mov
cld
std
lcall
movsl
inc
jnp
add
aam
pop
and
cmp
ja
pop
mov
or
rep
push
inc
leave
sub
rcrb
xchg
rorb
xorb
cmp
push
push
inc
sbb
adc
inc
push
xchg
aam
movsl
sbb
pop
shrl
xor
add
and
push
or
xorl
hlt
jg
dec
mov
sub
push
std
xor
mov
mov
inc
out
int3
stc
dec
pop
push
add
cmp
into
xchg
cmp
cli
inc
lds
dec
ja
xchg
andl
push
jae
popa
fsts
jbe
insb
test
cli
aas
loop
pushf
pop
mov
sub
mov
je
call
dec
notl
clc
int
push
dec
mov
popl
ffree
test
sarl
lahf
aaa
cmp
xor
xchg
andl
jl
ds
sbb
mov
jp
dec
xor
mov
inc
mov
lea
sub
mov
clc
fdivl
mov
sbb
push
sti
push
xchg
mov
jo
ds
enter
jo
clc
adc
jle
mov
jp
iret
ljmp
sbb
inc
test
inc
mov
or
cmc
adc
iret
jae
aad
xchg
fildl
popa
daa
loope
repnz
jno
cmc
lcall
mov
pop
mov
push
fcmovbe
test
sahf
movsl
ss
or
add
lcall
mov
hlt
ss
les
add
cmp
pop
pushf
mov
jbe
cmp
pusha
mov
xchg
push
jmp
or
jns
pop
aaa
jmp
and
or
test
dec
out
jne
ds
scas
push
cmp
inc
jmp
xlat
lds
xor
fchs
out
sbb
pusha
cmpb
push
aas
adc
jo
sbb
jo
mov
pushf
adc
clc
dec
movsl
jg
test
shl
loop
stos
push
pop
sub
aam
jnp
in
or
aam
test
aam
repz
xchg
out
xor
and
test
and
mov
sbb
jle
adcb
popf
fsubrs
jno
adc
jmp
cmp
imul
sub
dec
movsl
lock
push
push
mov
sbb
outsl
mov
stos
jl
push
stc
inc
push
enter
lret
lods
mov
dec
jle
bound
fnsave
sbb
pushf
pop
ror
xchg
sbb
sti
enter
sub
mov
mov
jbe
ret
shrb
dec
sub
dec
test
push
dec
jno
jp
jo
and
cli
add
pop
loope
addr16
cli
pop
loopne
ret
add
call
daa
outsl
mov
jbe
or
imul
inc
hlt
mov
xor
fstpl
adc
mov
jns
clc
jmp
push
js
idivl
dec
add
int
mov
std
imul
jecxz
int3
cltd
mov
into
je
jl
xchg
cmp
repnz
and
fcomp
popf
outsb
lret
add
xor
in
xor
imul
cs
sbb
and
or
lahf
enter
mov
mov
mov
mov
inc
sub
mov
fstl
mov
and
inc
mov
stc
hlt
in
adc
les
int3
jno
negb
inc
pop
jle
mov
test
fldenv
stos
xor
dec
mov
cmpsb
fisttpl
push
xchg
pop
addr16
cmpsl
lock
dec
pop
icebp
je
xchg
push
cmp
mov
rcrl
inc
cld
inc
outsb
add
jle
fyl2x
int3
stos
xchg
mov
adc
and
xchg
add
mov
in
arpl
lahf
inc
sar
in
sahf
pop
mov
or
int3
xchg
mov
fcom
out
adc
mov
add
popf
mov
push
push
xchg
mov
popf
xlat
fadd
outsl
dec
jne
ljmp
push
fwait
push
ss
pusha
fists
loop
aam
push
popf
mov
fsubrs
je
jno
mov
or
stos
aam
aaa
rolb
pushf
mov
subl
lods
mov
inc
dec
pop
lahf
cmpsb
mov
pushf
push
mov
adcb
out
or
mov
push
cmp
jg
push
je
jp
jo
dec
pop
mov
pushl
mov
mov
insl
xor
dec
fcmovb
jmp
je
dec
and
sbbb
adc
int3
repz
mov
xchg
out
out
dec
lret
lahf
jo
mov
inc
cmp
pop
stos
in
sbb
jl
add
or
repz
stos
pop
xor
in
roll
dec
rclb
adc
loop
pop
cli
add
xor
inc
shlb
push
jg
mov
repnz
incb
pop
cltd
xchg
xlat
pop
ret
ret
inc
loopne
pop
xor
arpl
dec
xor
sub
ja,pt
xor
out
out
testb
test
loop
xchg
jecxz
adc
sbb
out
cs
mov
xchg
sahf
dec
xchg
loopne
cld
mov
and
jmp
mov
mov
sub
mov
cmp
jmp
lock
loop
inc
in
mov
stos
push
xor
sub
jb
xorb
inc
imul
cli
cwtl
sbb
xchg
sub
push
dec
mov
push
test
xor
inc
mov
lret
xchg
mov
popf
shll
test
push
mov
xchg
mov
outsl
sub
in
mov
xchg
mov
fdivl
stc
pop
pushf
fmull
xchg
dec
ss
js
adc
dec
push
loopne
inc
loope
arpl
push
movsl
add
int
mov
xchg
jns
adc
pop
mov
xchg
mov
sbb
mov
out
fcomps
cmp
stc
shlb
rcll
fldcw
adc
fsts
xor
xor
in
lea
call
and
or
dec
or
sub
cmc
pushf
loope
sub
loopne
lret
fs
shrl
inc
or
mov
lods
pop
test
cmp
in
pop
out
ret
add
inc
pop
insl
test
mov
fbld
mov
push
pop
pop
leave
andl
adc
xor
pop
add
mov
lcall
cmp
sub
in
call
idivb
push
or
mov
clc
mov
add
test
fwait
xlat
insl
jnp
cmpsb
cmp
adc
test
int3
roll
xchg
cltd
cmc
sbb
fdivs
cmp
jnp
std
xchg
mov
and
jns
dec
fwait
icebp
ficoml
popa
fs
int3
popf
jb
inc
push
mulb
pushf
mulb
ret
addr16
adc
mov
movsl
andl
pop
mov
sti
in
gs
js
cli
jne
fs
xchg
aas
xor
xor
ljmp
mov
pop
pushf
jbe
or
lods
daa
pop
sahf
mov
and
les
jb
dec
lret
inc
out
xlat
mov
and
rcrb
xchg
xchg
pop
lods
out
movsl
movsb
and
testb
add
and
das
pop
push
mov
push
and
insb
cmp
cmc
lods
add
in
push
pop
inc
and
js
mov
mov
xchg
popa
das
mov
xchg
adc
hlt
flds
stos
and
call
std
sbb
mov
cld
shlb
cltd
loop
mov
mov
enter
aaa
cli
in
rorb
movsb
jl
and
push
rcll
cmpsl
mov
sbb
sub
sub
mov
xor
sbb
popa
mov
xchg
push
jmp
mov
cmp
jl
xor
int
or
aaa
jbe
loopne
leave
das
pop
sarl
xchg
vsubsd
lret
aas
andl
push
jno
jle
xor
mov
xchg
or
cmp
out
inc
jne
jno
mov
daa
jg
mov
xor
adc
cmpsb
cmp
mov
es
addr16
lret
lret
mov
shrl
ret
add
loopne
lods
int
sarb
sub
daa
dec
addl
mov
or
fidivrs
int3
bnd
hlt
rorb
mov
pop
or
mov
out
add
outsb
dec
arpl
gs
dec
cmp
scas
ds
or
cs
or
and
aaa
mov
dec
pop
xchg
std
mov
mov
mov
loope
ror
jno
xor
pop
cli
xlat
out
xor
mov
setns
dec
int3
std
xor
jno
imul
xor
mov
test
xchg
inc
xchg
xchg
imul
test
xchg
push
cwtl
push
dec
and
aad
ljmp
cld
xor
out
mov
lret
lcall
pop
cmp
push
popf
xchg
or
mov
mov
shll
dec
cmp
xlat
push
pop
jns
mov
lods
adc
push
movsl
mov
sbb
dec
and
cwtl
jg
hlt
call
xchg
and
test
incl
xchg
ror
xor
mov
mov
add
sbb
adc
inc
je
sbb
sub
inc
aad
lahf
and
je
je
psrad
mov
mov
or
pop
mov
adc
imul
aas
cmp
push
mov
dec
inc
icebp
aas
cltd
adc
inc
jg
outsl
push
add
add
xor
sbb
and
jp
xlat
dec
test
loope
push
andl
iret
push
xor
xor
lods
aas
cmp
xchg
dec
sub
mov
push
addr16
mov
icebp
hlt
movsl
cmp
aas
int
leave
into
or
mov
or
push
sbb
mov
cmp
int
rol
loop
jg
or
pusha
mov
jne
repz
sbb
iret
xchg
sbb
jecxz
cmpsl
movsb
push
mov
push
xchg
call
sahf
push
in
ljmp
incb
xor
xor
int
mov
lcall
js
sub
cmc
or
jmp
and
inc
mov
dec
inc
mov
icebp
adcl
jecxz
mov
adc
test
xchg
sub
outsl
loop
pushf
xchg
iret
lcall
fisttpll
cmp
mov
xchg
lds
in
scas
lea
xchg
jge
push
out
dec
sub
out
sub
mov
mov
and
sub
jg
jl
adc
loope
rclb
add
in
iret
popa
mov
lods
imul
cmp
xor
mov
rolb
inc
lods
aaa
xchg
mov
leave
and
xchg
movlhps
dec
jne
and
jb
loop
into
shll
repnz
and
push
pop
sbb
jecxz
pushf
cmp
je
sbb
out
inc
cltd
fiaddl
pop
lds
mov
pop
aas
into
mov
les
or
xlat
in
or
mov
test
imul
push
mov
test
or
addb
xlat
movl
jecxz
adc
sbb
mov
cmp
add
je
cld
mov
cmp
fs
fisttpl
mov
js
xor
jge
adc
xorb
cmp
and
mov
leave
cmp
push
mov
in
out
cmp
mov
clc
scas
pcmpeqb
or
cmp
inc
mov
jle
arpl
cmp
mov
das
lods
das
popa
dec
xchg
mov
inc
xor
dec
mov
inc
mov
repz
dec
das
mov
sahf
rep
js
stos
nop
xor
into
mov
ficomps
and
ja
jg
dec
mov
arpl
bound
dec
push
arpl
mov
and
js
mov
scas
scas
mov
clc
lods
mov
cmp
dec
xorl
stos
test
sub
jne
popa
and
sub
pop
ljmp
lcall
rcll
and
out
bound
jne
mov
jle
cwtl
fs
inc
cmp
mov
and
lahf
push
movsl
inc
in
cmove
sbb
push
orl
fisubl
in
sbb
mov
cwtl
cli
jmp
aad
daa
xchg
sbb
inc
lods
mov
out
lret
pop
outsb
pop
lcall
cld
inc
ficoml
cmp
pop
pop
push
iret
mov
scas
or
fstps
clc
sti
sbb
and
movsb
fisubrl
loopne
push
cmp
push
stc
stos
mov
xorl
push
mov
inc
and
fdivrs
test
xor
jl
and
insb
clc
jno,pn
test
fimuls
in
or
pushf
sbb
inc
fisubs
into
add
or
push
mov
call
adc
jp
pusha
cmp
lcall
cmc
mov
dec
jl
inc
cmp
pop
fdivl
std
mov
adc
dec
xlat
subl
mov
push
std
int
insb
xchg
test
or
mov
add
xchg
mov
int3
mov
push
pop
sbb
or
xchg
xchg
push
jp
dec
popf
add
int
les
jbe
xchg
les
jb
mov
icebp
cmpsb
movzwl
arpl
push
inc
imul
stos
dec
lods
aas
fcmovnu
xor
add
add
jae
mov
xor
orl
cmpsb
loopne
fnsave
lods
lahf
or
fnstcw
or
and
or
sbb
test
pop
and
pushf
xchg
test
add
lods
mov
cmp
ss
fcmovnbe
rcrl
and
adc
inc
mov
xchg
cli
ret
mov
stc
xor
imul
jl
inc
and
sub
pop
and
daa
stos
mov
cli
xchg
xchg
es
aad
std
mov
fmuls
push
mov
ror
xlat
push
adc
pop
fadds
aam
cltd
inc
pop
or
aam
push
loopne
sbb
dec
cmpsb
xlat
xchg
mov
inc
iret
jmp
call
js
sbb
cmp
lcall
cmp
dec
jo
push
sbb
sti
ret
pop
push
jmp
mov
ja
mov
in
jecxz
jno
push
int3
add
stc
nop
dec
or
pop
mov
inc
test
shll
push
mov
mov
push
or
add
jno
add
adc
insl
mov
mov
mov
mov
shl
pop
sbb
add
mov
hlt
movzwl
int3
cs
imul
lcall
push
jmp
lahf
or
in
and
sub
ljmp
sub
insl
pop
mov
xor
ret
movsb
mov
mov
scas
hlt
dec
out
jbe
mov
push
xlat
repnz
fwait
dec
sub
imul
fnstsw
pop
dec
mov
lea
sub
out
aas
add
fldl2e
icebp
arpl
adc
push
je
stos
dec
dec
add
lahf
adc
sub
aaa
icebp
pop
xchg
adc
scas
jle
leave
mov
in
test
jmp
add
mov
lea
mov
push
fst
and
jb
or
push
out
popf
decl
cli
mov
sub
dec
add
sub
xchg
lods
mov
sbb
das
adc
mov
imul
add
fldl
mov
jl
pop
jnp
std
pop
xor
adc
mov
sbb
scas
subl
repz
or
in
sub
int3
clc
das
inc
mov
xchg
inc
add
rolb
push
pop
mov
inc
fstl
es
rcll
hlt
lahf
push
repz
dec
xor
int3
cs
fistpl
lods
mov
faddp
inc
push
sbb
dec
jmp
imul
test
aaa
xorb
add
jecxz
pop
loop
lods
int
ja
andl
je
mov
pop
xor
mov
movsl
sbb
or
cmp
lret
pop
repnz
sub
add
xchg
sub
and
pop
ds
inc
std
mov
xor
cli
or
shr
sbb
add
inc
imul
in
fstps
nop
xchg
mov
js
incl
mov
repz
adc
lret
ljmp
sub
lahf
dec
stc
mov
and
sub
sti
pop
scas
mov
mov
cli
mov
enter
pop
shlb
in
sbb
repz
scas
mov
cmpsb
sbb
pop
aam
popf
jns
flds
outsl
sub
jns
sarb
das
sbb
push
mov
jg
js
add
sahf
jb
mov
arpl
neg
lret
mov
xchg
xchg
fadds
ror
hlt
fldcw
add
int3
stos
rorl
je
imul
cmp
and
in
sub
push
or
test
dec
xor
and
mov
fistl
pop
and
rcrl
adc
jmp
sub
cmc
ljmp
ds
mov
add
leave
xchg
lcall
cmp
sbb
or
add
cmp
jo
inc
or
out
addl
test
loop
ss
push
call
lds
inc
pop
push
push
cmpsl
jo
pop
cmpl
xchg
or
add
ss
dec
nop
pushf
aas
add
pop
pushf
mov
femms
cmp
nop
jge
sar
xchg
or
jae
xor
and
jle
cmp
push
into
xor
enter
mov
dec
xchg
cmpsb
leave
xor
sbb
movsb
mov
pusha
or
enter
and
lcall
xchg
aad
ds
pop
xchg
xor
inc
mov
jb
aaa
inc
sbb
mov
cld
dec
int3
dec
in
or
adc
ret
dec
push
add
jecxz
sub
lods
cmpb
es
cmpb
jne
add
push
int3
jle
cwtl
movsl
dec
sub
sbb
add
into
sub
mov
adc
push
mov
popa
andl
pop
out
inc
adc
pop
and
sub
call
and
dec
xchg
lret
rcl
out
mov
pop
lds
pop
inc
push
push
icebp
pop
xor
testl
inc
cmc
sbb
sub
bound
mov
or
and
and
or
sub
aad
ljmp
or
cmp
sub
lret
jmp
daa
inc
push
and
lret
xor
and
pop
mov
dec
and
ja
xchg
push
test
clc
test
loope
imul
fdivrl
or
incl
leave
insl
dec
jnp
ljmp
dec
scas
fldenv
xchg
add
mov
insb
adc
cmp
aad
lods
mov
cmc
mov
loope
adc
movsl
insb
or
dec
fdivrl
ja
nop
xchg
pop
xchg
jns
ds
idivl
cs
andl
or
cmp
xor
mull
int
xor
mov
mov
fisubl
mov
pop
xchg
jp
ret
mov
rcl
inc
js
sti
push
sarb
dec
loopne
dec
mov
mov
in
or
push
mov
in
mov
lds
ja
rorl
imul
push
int3
pop
sbb
nop
iret
ljmp
insl
ds
in
push
iret
movsb
and
cmp
push
repz
scas
cmp
or
xchg
inc
ljmp
cmpb
xlat
sahf
addr16
sahf
imul
xor
movsb
in
imul
clc
idivb
ss
pop
jl
test
adc
fadd
orl
cmpsb
pop
and
sub
pop
lret
push
leave
pop
rorb
pusha
inc
mov
shrl
pop
add
je
scas
pop
rcl
or
jnp
inc
mov
jnp
jbe
xor
sub
repz
and
add
mov
mov
mov
into
mov
pop
mov
pusha
sub
inc
push
ret
push
dec
mov
sti
inc
jbe
pusha
mov
or
mov
inc
lret
mov
es
loopne
and
pmullw
push
notb
xchg
xchg
inc
dec
sub
popa
adc
lcall
push
rol
pop
cmc
lods
cli
pop
inc
jle
mov
aas
dec
cmp
xor
inc
insb
leave
add
push
arpl
dec
pop
xchg
stc
pop
lcall
lcall
push
mov
add
inc
call
test
adc
adc
cmp
xor
xor
xchg
imul
and
and
pushf
inc
or
aam
sbb
xor
cmp
movsl
jbe
xor
cwtl
adc
pop
xchg
aas
jecxz
iret
xchg
ret
outsl
add
imull
mov
jb
adc
dec
sbb
and
jecxz
xlat
ret
pushf
and
or
fwait
scas
pop
xor
or
shlb
adc
std
xchg
jmp
inc
incb
and
popf
dec
pop
jne
xor
dec
orl
cwtl
hlt
or
sub
dec
sub
inc
stc
lahf
movsb
jbe
stc
aad
imul
movsl
push
fnsave
sub
pop
fimull
xchg
mov
xchg
js
pusha
mov
arpl
jge,pt
movsb
jle
jo
ss
cmp
jge
sbb
sub
jnp
std
jp
jbe
das
xchg
aas
or
into
sub
cmp
pop
pop
cmp
lcall
push
test
pop
or
adc
iret
mov
rcll
fistps
cs
or
nop
add
jns
aam
push
dec
sub
sbb
cs
loopne
adc
lcall
sub
xchg
and
mov
pop
out
xchg
adc
push
in
push
pop
or
mov
push
jl
enter
pop
add
xchg
sub
push
push
sbb
or
xchg
mov
js
enter
int3
arpl
xlat
sub
test
jg
push
sti
lahf
sub
pop
cld
popa
jecxz
cmpsb
test
jno
js
fisttps
shrl
sub
dec
lds
adc
inc
ret
xor
inc
mov
jno
jg
mov
xchg
push
int3
sub
cltd
lods
lds
cmpsl
adcl
in
jle
adc
cli
mov
cmp
outsl
push
ret
lods
jmp
rcrb
pop
pushf
js
xchg
push
push
ret
or
test
mov
loop
out
mov
aaa
jno
push
mov
mov
stos
ja
jl
cmp
outsl
out
add
call
dec
je
jp
or
out
insl
add
mov
jbe
mov
ret
loope
add
sub
daa
pop
inc
andb
mov
or
inc
pop
sti
in
out
fildll
dec
in
ret
sbb
mov
cmpsb
mov
and
xchg
cli
inc
outsl
popf
xchg
int
loopne
sbb
xor
mov
push
xor
addr16
adc
pop
adc
mov
xor
jae
jae
cltd
roll
ret
xchg
nop
xchg
and
jne
lods
aas
mov
add
push
test
cmp
jbe
xchg
sti
dec
mov
test
push
xchg
mov
xlat
mov
inc
popa
xor
pop
jp
xchg
xchg
movsb
or
mov
mov
std
decb
rcrb
jp
sub
daa
daa
pop
aaa
fisttpl
cmp
rcr
push
pop
nop
jmp
hlt
push
fbld
repz
scas
sti
mov
add
outsl
pushf
sti
mov
pop
cmc
push
inc
aam
icebp
in
jge
stc
stos
and
frstor
and
sbb
pop
xor
out
push
int3
pop
xor
add
pusha
aam
pop
dec
pop
xlat
mov
stc
xchg
pop
mov
jecxz
or
shll
addl
in
rorl
add
loope
push
push
lods
xchg
xchg
aam
cmp
mov
sub
mov
inc
or
jp
movsb
mov
inc
in
in
sahf
repnz
adc
xorl
cwtl
push
and
mov
fmuls
in
cmpsb
pop
mov
arpl
pop
lahf
jae
daa
nop
mov
pop
jmp
sbb
cs
jmp
push
out
fcompl
xor
inc
sbb
sub
stc
adc
fnstsw
test
jo
jb
pop
lods
movsb
adc
xchg
lcall
in
sbb
or
mov
and
scas
popf
jne
dec
std
adcl
jp
dec
cmp
sub
orb
es
hlt
outsl
popf
xchg
xor
add
test
dec
jo
fcom
xchg
popa
into
pop
lret
int
cmc
jl
xchg
and
cs
mov
sbb
or
xor
mov
mov
fcompl
or
xchg
loope
cmc
mov
incl
push
add
sub
sbb
loopne
stc
push
hlt
cmpl
sti
adc
jmp
mov
and
int3
aas
jae
cmp
and
int3
lea
test
movb
mov
jnp
ret
faddl
sub
daa
adc
jae
shrl
sub
ss
mov
pop
aad
andb
test
imul
jecxz
jne
mov
sar
push
cmp
add
mov
out
movsb
mov
out
dec
inc
mov
sub
je,pt
fwait
add
dec
lds
popa
adc
stos
daa
xchg
mov
shr
lcall
bnd
jl
mull
adc
cld
mov
loopne
bound
xchg
outsb
lret
push
cmc
les
adc
addb
stos
out
js
ja
xor
fwait
cld
rorl
out
jle
pusha
mov
pop
dec
or
enter
setno
lcall
imul
sub
pop
sub
lds
ljmp
adc
bound
sub
das
add
add
sbb
adc
lret
ljmp
cltd
xchg
add
out
or
push
push
push
rcrb
add
or
push
pushf
or
fildl
cmpsb
xor
mov
shrl
lahf
jo
in
mov
aad
push
loopne
or
dec
insb
cmp
push
or
flds
lods
adc
cmpsb
cmp
mov
popl
cwtl
dec
jle
mov
and
cmp
in
mov
sbbb
sub
jae
and
shrb
outsb
es
fnstcw
mov
cmpsb
repnz
imul
lock
shll
fcomip
mov
cmp
ret
inc
lret
push
sub
add
pushf
xchg
loopne
ror
jbe
movsl
in
sub
testl
std
xor
fdivrs
loop
mov
cltd
jl
popa
fstps
xor
pop
in
sarb
insl
flds
popf
out
jbe
xchg
cmp
cwtl
mov
pop
das
mov
es
fs
cmpsl
and
and
or
hlt
stos
out
imul
cmpsl
ret
mov
mov
fidivs
mov
imul
bound
xchg
stc
orb
shll
lret
addl
xchg
cmp
enter
push
ss
or
cmp
mov
inc
mov
orb
insl
lcall
imul
xchg
push
test
inc
push
aad
rorb
jo
mov
pop
xchg
popf
or
enter
fs
mov
movsl
aaa
data16
cmpsl
ljmp
fcmove
xchg
xlat
mulb
in
xor
jo
xchg
mov
sbb
xchg
and
sub
mov
scas
mov
scas
and
inc
fisubs
or
push
jge
push
loopne
out
stos
les
movsl
roll
fwait
xor
scas
movsb
int
xor
inc
outsl
xchg
mov
inc
in
js
iret
jo
cltd
pop
jg
pushf
repnz
inc
jo
and
test
repnz
out
and
pop
dec
push
outsl
cmp
mov
jb
or
mov
cmpsb
jmp
cmp
inc
andl
test
mov
push
cmp
andb
sbb
mov
cs
dec
iret
dec
sbb
inc
aas
idivl
fsts
xchg
fs
cmc
loope
mov
inc
pop
dec
pusha
in
sub
jg
lcall
xor
or
lret
xor
pop
xor
cwtl
mov
sub
and
stos
pop
cmpsb
xor
push
pop
or
and
mov
ror
lods
ja
pop
loope
xor
es
mov
push
cmp
pop
mov
xchg
aas
mov
popf
imul
cmp
lock
mov
test
dec
data16
cltd
pop
mov
scas
icebp
out
outsb
imul
cltd
in
dec
pop
sub
sub
fs
mov
ljmp
sub
lcall
xor
xlat
nop
and
xor
cmpsl
and
mov
in
dec
mov
sbbb
lods
xchg
jg,pn
add
sbb
mov
xlat
pop
adc
sub
test
iret
cmp
cmp
or
into
ds
jne
ljmp
add
and
out
aas
pop
mov
idiv
push
mulb
jge
jo
jecxz
test
aas
popa
jg
repnz
or
push
add
mov
out
imul
cmp
push
dec
stc
add
xchg
divl
jne
push
fsubl
or
or
call
mov
mov
jmp
mov
sbb
int
stc
xchg
sahf
mov
in
popa
lea
inc
push
imul
mov
insl
in
inc
jae
cwtl
xlat
fst
pop
lds
pop
dec
adc
and
or
add
outsb
jns
arpl
sbb
addr16
or
sbb
sbbb
add
repnz
movsb
nop
cmpl
xchg
adc
xor
jecxz
jns
aam
push
xchg
orb
popf
int
xchg
add
pop
test
out
lods
xchg
add
sub
js
push
test
jne
gs
pushf
es
test
in
cmp
aaa
push
in
xchg
test
lcall
cmpsl
out
push
mov
pop
lret
push
dec
movsb
pop
xor
pop
add
scas
dec
pop
idivl
or
fcompl
push
jge
scas
jnp
mov
dec
movl
loope
and
sub
gs
inc
dec
loope
rcrl
into
pop
scas
mov
mov
xor
cmp
xchg
aaa
sbb
pop
jae
cli
xor
and
adc
mov
ror
movb
push
cs
hlt
daa
and
cmpsb
shrb
sbb
pop
shr
out
dec
push
dec
jmp
lea
test
lea
or
or
pop
sub
xchg
clc
push
mov
jmp
adc
pop
jno
add
callw
push
xor
xchg
dec
int
mov
out
call
and
xor
std
push
mov
sbb
mov
ds
sub
mov
pushf
adc
insl
dec
movsl
fs
dec
push
rorb
ljmpw
and
jbe
cwtl
inc
cwtl
or
cmp
xor
xchg
in
cs
pop
aad
xor
outsb
xlat
sub
mov
add
jp
pop
xchg
sbbb
inc
clc
dec
adc
fisttpll
cld
xchg
and
inc
xor
or
add
lcall
mov
push
xlat
bound
dec
inc
xchg
lahf
mov
xchg
push
mov
in
int3
adc
adc
stos
je
dec
lds
adc
push
popf
mov
xor
scas
cmp
mov
and
pop
mov
xor
cmc
inc
loop
mov
lahf
pop
xchg
rcrl
sbb
lods
iret
testb
xchg
or
add
stos
cmp
add
cs
outsl
xchg
pushf
cmp
and
repnz
sar
lahf
pop
ljmp
pop
mov
fnstsw
and
pop
js
loop
mov
cs
gs
enter
sbbl
repnz
xor
cwtl
dec
add
pop
inc
ret
mov
fldenv
dec
stos
fcoms
popf
mov
jno
shrl
in
rcrb
imull
inc
ss
inc
mov
stos
pop
jne
loopne
jl
insl
sub
arpl
cmp
sbb
enter
mov
add
out
push
mov
hlt
daa
outsb
push
stc
fldcw
jns
lds
popa
lds
scas
repnz
bound
stc
mov
jbe
stc
xor
inc
sub
pushf
shrl
insw
sahf
ja
cmp
ret
into
mov
stc
sbb
xor
ret
inc
mov
into
mov
andb
iret
pop
jle
jecxz
sbb
gs
xchg
unpcklps
xchg
pop
jle
xlat
and
aas
ja
mov
and
in
iret
push
outsb
enter
inc
xor
jmp
pop
jmp
ret
xchg
mov
fwait
xlat
add
mov
pop
imul
in
inc
aaa
cmp
sbb
outsl
add
clc
mov
mov
clc
inc
mov
pop
jge
or
daa
sub
mov
add
arpl
adcl
pop
mov
pop
inc
lea
arpl
fldl
adc
cmpsb
jno
out
lahf
or
loopne
test
dec
xchg
imul
mov
movsl
push
mov
mov
xchg
jnp
jmp
neg
pop
hlt
mov
dec
sbb
jecxz
push
inc
mov
inc
popa
pop
incb
jecxz
dec
cmc
aam
cmp
cmp
pop
mov
test
pop
push
sahf
jae
fstpt
adc
movsl
icebp
test
jo
inc
je
push
mov
push
mov
sarb
sbb
sarl
or
negb
fstl
lahf
push
cmp
adc
into
inc
faddl
leave
and
mov
out
or
fsubl
xor
mov
idiv
xchg
xor
fbld
arpl
out
fisubrl
jbe
and
ds
push
cmpsl
jnp
cld
cwtl
add
jg
push
sbb
inc
stos
and
mov
jmp
or
xchg
pop
jnp
mov
ror
mov
and
in
pop
icebp
or
push
ja
aam
or
push
jmp
mov
jle
test
sbb
mov
dec
mov
jge
mov
cmpl
out
xchg
or
lods
sub
dec
arpl
icebp
hlt
cmp
pusha
and
add
or
dec
xchg
pop
mov
fdivs
xor
push
leave
sar
and
lret
aaa
rcrb
mov
push
or
xor
jo
or
aaa
stos
test
xchg
pop
pop
mov
push
lea
lret
sahf
mulb
imul
mov
cmp
cmp
and
adc
mov
and
aam
cmp
ret
imul
les
stos
dec
fsubrs
pop
push
imul
cs
into
mov
inc
lret
xchg
pop
xor
adc
adc
cmc
pop
fldcw
jecxz
adc
cmpsb
mov
int
mov
push
or
mov
sahf
gs
nop
mov
push
movsb
dec
pop
in
add
pop
aad
xor
gs
inc
lret
int3
fwait
repz
xchg
jl
lret
mov
inc
dec
sbb
mov
mov
stos
out
mov
nop
mov
cld
jg
sti
mov
in
sub
push
pcmpeqw
imul
cltd
sub
sbb
lcall
pusha
mov
push
pop
cli
and
cmpsl
imul
mov
aam
xchg
or
imul
or
adc
outsb
stos
xchg
in
adc
adc
lahf
mov
fldcw
mov
pop
push
adc
push
jge
pop
arpl
ret
mov
sbb
push
adc
jle
popa
inc
insb
icebp
cmpsl
cmpb
repnz
data16
xchg
shrl
dec
aad
fidivrl
shl
clc
xchg
inc
and
sbb
or
mov
jge
bound
mov
jg
jp
ficoml
popl
push
pop
jo
negl
jecxz
fldenv
sbb
in
sub
popa
shll
mov
fisubrl
adc
mov
mov
jle
adc
mov
mov
js
shl
jae
add
lahf
jp
repz
adc
shr
or
mov
mov
movsl
in
aad
inc
cmp
andb
shl
jnp
xchg
dec
xchg
idiv
rclb
cmc
push
lss
xor
xlat
mov
inc
cmc
mov
push
sub
pop
outsl
mov
push
mov
or
mov
scas
jmp
inc
ljmp
in
or
fs
rcrb
mov
sbb
inc
dec
jns
aaa
xchg
add
es
mov
test
push
and
adc
out
and
push
mov
insb
andb
scas
stos
loop
xor
imul
test
add
cltd
add
inc
in
sarb
pushl
xor
cs
testb
das
jne
ret
jg
mov
stos
inc
jne
or
ret
movb
mov
outsb
aam
test
mov
inc
lock
out
lods
ret
loope
mov
cmp
repz
popf
dec
in
push
stos
mov
xchg
movsb
les
or
lahf
out
add
and
scas
sbb
pop
pushf
iret
push
jp
cmp
jge
std
cmc
movsl
jmp
push
pop
loop
and
xor
add
or
arpl
or
mov
pop
shr
shlb
push
jecxz
repnz
loop
cmp
inc
icebp
icebp
in
jns
sbb
adc
xchg
adc
test
pop
mov
lock
pop
mov
push
lret
je
or
jmp
out
sti
lea
adc
jb
int
sbb
repnz
mov
iret
dec
movb
mov
cltd
std
pushf
cld
pushf
mov
faddp
sub
lret
sub
jae
push
mov
js
mov
cltd
into
lea
add
xchg
scas
and
mov
lock
jecxz
jmp
insl
add
sbb
xchg
or
scas
xlat
mov
out
inc
dec
xchg
push
add
dec
lock
ss
add
mov
xchg
dec
das
popa
fldcw
cmp
cmp
in
imul
cmc
jg
enter
stc
cmp
mov
xchg
xchg
jne
pop
cltd
cmp
sub
lahf
mov
jg
arpl
fcmovnb
dec
pop
xchg
lods
jge
cmp
mov
mov
push
pop
lahf
jp
push
fs
xchg
xor
in
sarb
mov
rolb
jno
pop
mov
fcoml
ret
and
lods
mov
in
mov
dec
mov
inc
mov
inc
leave
dec
fisubl
mov
mov
lods
imul
and
das
jno
jne
push
cwtl
cli
push
aad
cmp
bound
adc
loope
int3
xor
jle
lret
es
fists
hlt
mov
xchg
pop
lret
mov
jecxz
xchg
and
into
push
test
or
jg
cltd
mov
js
in
stos
pop
xor
or
shl
into
dec
dec
cmp
mov
movsl
xor
ja
psubb
adc
sbb
inc
or
test
pop
pusha
xchg
mov
push
pop
insl
test
test
insl
mov
xchg
int
jnp
dec
lahf
add
add
ja
lahf
xchg
or
arpl
fbstp
inc
mov
mov
pop
mov
mov
pop
and
adc
or
shl
adc
push
ret
and
adcb
aam
in
bound
dec
hlt
cmc
or
outsl
imul
daa
pop
cli
jmp
sti
mov
add
mov
or
pop
lsl
xchg
inc
inc
addr16
pop
out
dec
bound
xor
mov
xchg
stc
mov
adc
jmp
pop
lret
xor
pop
push
lahf
cs
popf
and
jns
addr16
cmpsl
insb
pop
ja
dec
sub
shrl
dec
daa
subl
fucom
inc
ret
mov
lock
daa
lea
mov
xorl
divl
inc
je
adc
shll
push
pop
and
dec
lret
mov
cmp
inc
in
adc
cmp
sbb
sarl
popa
push
or
sub
pop
dec
aad
pusha
fimuls
mov
test
inc
jne
int3
or
gs
sahf
add
jmp
cwtl
cli
mov
add
rorl
dec
jge
popl
sbb
sbb
inc
sub
cmp
aas
int
or
lcall
test
lods
aaa
mov
aam
jbe
out
rorb
aas
cmp
xlat
jb
xor
in
inc
sub
dec
jecxz
add
fcmovnbe
daa
scas
cmpsl
cmp
jl
sbb
cltd
mov
push
movsb
jl
test
lcall
add
or
imul
loope
dec
ret
cli
inc
sbb
or
lea
outsl
ficoms
jo
loopne
inc
sarl
je
mov
out
aaa
inc
xchg
cs
cld
pop
cmp
rol
xchg
sysexit
loop
jmp
cs
test
adc
in
cmp
imulb
mov
es
and
incb
clc
fwait
jmp
leave
jmp
cmp
shll
or
xor
ljmp
xchg
jae
inc
mov
dec
insl
sub
scas
jp
dec
pop
adc
mov
dec
xchg
or
testl
test
inc
mov
ret
nop
push
lahf
cwtl
jmp
jno
loopne
call
xchg
bound
xchg
dec
push
push
sbb
jnp
rclb
std
stos
or
push
jo
int3
mov
es
pushf
jne
mov
loope
scas
call
or
nop
es
fdivs
jge
daa
jae
repz
fdivs
fstpt
xchg
push
test
mov
out
push
sbb
shufps
or
jo
sbbl
in
test
movsb
dec
mov
jb
adc
mulb
stc
mov
push
inc
les
mov
decb
cld
sbb
and
push
call
xlat
sbb
subl
push
subb
lds
sub
pop
jo
bound
or
jne
pushf
out
sub
into
hlt
cmpb
jne
inc
pop
jbe
dec
add
lods
adc
xor
aaa
popa
jo
or
mov
cs
ds
sbb
and
sub
pop
insl
lods
mov
ja
aas
jecxz
push
cmp
cmp
inc
sti
pop
sti
mov
ds
sbb
test
lods
cwtl
test
add
pop
pop
loopne
test
mov
stc
sbb
xchg
pushf
sar
or
insb
and
push
cmp
mov
jge
and
or
shll
out
dec
in
out
js
js
stos
dec
xor
sti
loopne
data16
and
dec
push
push
and
jbe
jge
or
in
mov
mov
sbbb
imul
add
adc
sub
addb
lahf
add
in
repnz
or
shrb
dec
push
jb
int3
decl
int3
adc
lret
ret
and
or
addl
jecxz
mov
sbb
imul
dec
fdivrl
mov
mov
sbb
data16
lss
pop
add
out
insl
lahf
int3
sub
jbe
popa
adc
push
xor
test
pop
cwtl
mov
inc
mov
aas
rclb
xor
and
and
mov
pushf
outsb
adc
sbb
inc
wbinvd
and
cmp
enter
ficoms
lahf
inc
push
in
mov
stos
jp
cmp
or
cltd
adc
cmp
add
dec
in
stos
push
loop
and
adc
cmp
je
fidivrs
or
addr16
and
pop
rcrb
mov
pop
and
sub
ds
xor
rol
hlt
loop
push
mov
or
pop
mov
adc
ljmp
cmpsl
xchg
and
pushf
xor
pop
push
test
lea
adc
mov
mov
hlt
mov
pushf
mov
inc
std
jle
xchg
mov
push
pop
int
bound
test
cmpsl
mov
jge
cmp
iret
inc
xchg
mov
jo
lods
js
stc
dec
xchg
leave
cwtl
cmp
lahf
es
sub
mov
xor
inc
sub
xor
add
popf
dec
imul
movsl
and
add
inc
rolb
jg
xchg
out
lcall
fildl
dec
in
jge
jae
out
cmp
cmp
popa
or
sbb
icebp
mov
nop
cli
rol
je
popf
test
push
jno
sti
gs
fwait
das
sub
jo
mov
inc
mov
out
mov
jmp
dec
pop
int3
dec
cli
out
popf
cmpxchg
sub
outsb
leave
mov
sub
pop
lcall
outsb
roll
add
add
test
lret
jns
gs
jns
in
add
jb
mov
repz
lret
push
or
push
mov
dec
xchg
jmp
inc
imul
push
scas
pop
add
movsl
adc
sti
xchg
pop
pushf
cmp
test
aam
enter
or
jp
push
ja
inc
lock
lods
pop
hlt
push
outsl
stos
je
fistpl
stos
iret
mov
int
sbb
push
cmp
es
dec
and
jmp
inc
leave
loop
xorl
xchg
fiadds
fidivs
add
jbe
sub
pushl
jg
rorb
mov
mov
inc
add
adc
dec
int3
insb
lahf
sbb
xorb
lahf
fsub
stos
mov
jp
sub
push
das
pop
add
into
fimuls
ss
fstl
out
adc
aaa
xor
xor
push
sub
push
push
pop
popl
xchg
std
mov
das
imul
ret
pop
scas
pop
jne
rcl
cmp
pop
xchg
out
push
mov
cmp
lret
mov
push
push
push
jge
in
jno
cmp
addl
push
fs
addr16
movsl
rol
mov
push
nop
test
not
and
out
rorl
mov
cmp
push
inc
dec
cmp
inc
xor
sbb
jecxz
sub
xor
aam
xor
out
mov
jnp
test
je
addr16
xor
mov
fdivl
lods
insl
pop
push
and
lcall
push
imul
sahf
stos
pop
pmulhw
dec
arpl
dec
push
mov
stc
imul
push
sbb
hlt
push
adc
in
cs
and
push
inc
xchg
add
adc
inc
jo
fucomip
dec
sti
stos
mov
addr16
xor
cwtl
pop
ret
les
push
mov
mov
push
idivb
fwait
dec
and
mov
shll
into
and
xor
mov
pop
decb
xchg
loopne
jo
xchg
loop
daa
and
sbb
jnp
pop
in
mov
adc
popf
jl
rol
cmp
aaa
or
stos
and
or
lahf
shll
icebp
insl
add
dec
cwtl
loope
mov
push
sub
call
cmp
cltd
dec
push
aad
push
xchg
filds
push
add
jg
add
adc
loopne
lods
jge
lahf
add
jg
jnp
jge
leave
stos
cwtl
not
push
fwait
aam
sahf
scas
sbb
mov
faddl
add
xor
lea
sub
movsb
cmp
fldl
pop
ss
jne
sub
mov
and
mov
out
stc
xor
adc
movsb
cmpb
ds
fmulp
sub
inc
push
inc
mov
aam
lds
aaa
inc
inc
ret
add
pop
call
fidivrs
pop
insl
inc
scas
shl
into
mov
sub
sbb
push
or
dec
popa
dec
inc
into
fwait
sbb
sarl
inc
shll
fs
sti
aaa
sar
test
ljmp
add
loopne
lret
mov
sbb
nop
ret
scas
std
fcmovnu
mov
mov
shr
testb
popa
outsl
and
xor
faddl
rcll
jl
outsb
sbb
pop
dec
cmp
fsubl
pusha
mov
xchg
cwtl
testb
dec
rolb
andl
test
jge
push
jge
mov
call
dec
fwait
mov
mov
jns
ret
sub
ret
das
lcall
nop
cmp
movsl
popf
mov
push
movsb
hlt
sub
mov
fwait
xor
lock
repz
cmp
or
push
ror
adc
push
nop
out
shr
mov
xchg
cmp
mov
outsl
xor
push
out
and
je
pop
test
scas
pop
cltd
int
insl
scas
push
ret
lret
pushf
pop
into
push
mov
mov
sub
fdivrl
adc
int3
neg
push
insl
mov
test
sbb
or
pop
bound
mov
xor
or
xchg
xchg
mov
testb
arpl
xchg
adc
movsb
inc
push
jae
nop
fcom
outsb
imul
inc
adc
or
insb
inc
inc
pop
cmpsb
imul
in
lods
icebp
or
icebp
mov
cmp
test
dec
xlat
clc
xchg
sbb
out
aas
mov
fcomp
jbe
lcall
dec
push
cwtl
mov
or
jno
or
or
inc
es
dec
dec
push
cmp
andl
mov
rorb
mov
mov
in
popa
cmpsb
divl
pop
pop
pop
lcall
adc
or
push
jno
mov
aam
push
fldl
cmpsl
setp
out
cld
pop
and
gs
add
cld
leavew
pop
cld
mov
neg
call
sti
mov
scas
dec
test
push
aam
out
push
icebp
pop
mov
cmp
scas
cmp
xchg
push
nop
adc
inc
xchg
addl
ficoms
push
lods
sbbb
xchg
cmp
xchg
pop
fcmovnu
sti
lret
mov
mov
jo
repz
push
dec
push
aam
addr16
dec
negb
dec
dec
aas
mul
je
cli
mov
int
mov
ror
dec
adc
std
lea
loopne
xchg
mov
mov
fstpt
ja
sbb
scas
out
add
ficoml
lahf
mov
imul
xchg
clc
shll
cmpl
addr16
popa
xor
jecxz
cmpl
xchg
int3
aam
and
and
mov
movsb
insl
out
add
push
jl
lcall
aas
mov
scas
xor
xor
adc
xchg
rcr
inc
fscale
scas
and
ret
lret
dec
sbb
stos
or
lea
mov
fnsave
add
jl
outsb
inc
xchg
mov
or
shlb
jl
xchg
mov
loopne
pop
dec
dec
inc
adc
ss
jb
push
ja
sahf
jns
and
popa
jmp
data16
mov
mov
jnp
sarb
inc
std
shlb
into
xchg
pop
xchg
rol
js
adcl
inc
pushf
mov
lahf
shlb
fimull
lds
arpl
dec
cmp
or
jbe
xchg
out
test
rorb
fwait
and
shlb
pop
cwtl
mov
test
jns
outsb
adc
gs
stos
jle
push
cmp
mov
popf
jb
stos
jnp
mov
inc
xchg
mov
sbbl
enter
add
loopne
xchg
xor
rcrb
imul
loopne
add
movsb
hlt
icebp
outsb
cs
jp
imul
gs
dec
adc
std
repnz
mov
addr16
and
push
mov
and
ljmp
push
fwait
xor
mov
push
int3
mov
pop
test
jbe
xor
bound
test
test
cwtl
mov
pop
xchg
jge
mov
adc
mov
mov
ret
push
jae
push
pusha
js
lods
or
inc
arpl
mov
push
add
es
mov
dec
adc
jbe
or
fsubrp
adc
xchg
adc
into
loop
push
es
out
mov
mov
cwtl
mov
dec
adc
mov
inc
xchg
cmp
imul
dec
or
xchg
sbb
and
into
stos
add
std
icebp
pop
xlat
mov
fisubl
pop
mov
inc
into
cs
xor
insb
dec
fdivrs
and
or
clc
dec
test
push
in
xchg
into
mov
fwait
pop
dec
test
dec
mov
add
mov
out
fldenv
inc
sti
test
lock
subb
push
out
pop
cmp
insl
xor
xchg
mov
push
test
inc
push
pop
add
inc
dec
xlat
and
adc
add
clc
pop
pop
scas
xor
or
pop
sbb
call
jle
cmpb
mov
cmp
ljmp
xor
and
push
cmc
mov
fcoms
std
les
push
cltd
data16
lods
cmp
call
lret
gs
pop
scas
insb
and
dec
jae
mov
out
pop
and
movsb
testl
fisttpll
mov
mov
jae
sbb
xor
aad
out
ss
dec
insb
pop
inc
div
out
addb
push
adc
rcrb
lahf
fs
test
dec
mov
mov
sbb
inc
movsl
sub
jno
test
adc
sbb
mov
push
push
mov
fsts
fcmovbe
mov
shll
andb
mov
mov
ss
dec
ss
repnz
nop
jle
in
inc
pop
sbb
pusha
inc
and
dec
or
dec
dec
jo
dec
xchg
mov
sub
comiss
aam
jno
inc
outsb
or
scas
es
add
hlt
xchg
add
inc
push
xchg
pop
xchg
dec
out
int3
jmp
fnstenv
lock
push
insb
xchg
cmpsb
cmp
mov
jo
data16
xchg
rorl
mov
into
cltd
outsl
mov
scas
mov
or
cs
subb
aad
fadd
adc
in
lahf
aad
fisttpll
xchg
mov
ret
sub
arpl
stos
xchg
addr16
and
imul
mov
pop
mov
lods
scas
and
pop
jl
loope
sub
test
xor
mov
mov
cmp
leave
inc
loop
push
aad
or
xor
dec
cld
mov
and
inc
fs
dec
es
adc
jne
dec
push
rol
inc
dec
or
into
mov
xchg
cmp
inc
mov
ret
out
call
ret
or
outsb
xchg
les
enter
leave
add
inc
leave
dec
mov
ljmp
ret
call
sahf
mov
xchg
cmp
pop
sarl
ret
pop
shll
insl
repz
aas
jno
cmp
xor
je
sub
loopne
int
cld
sahf
xor
and
add
fbstp
xchg
jmp
mov
and
inc
fisubs
push
xchg
addl
in
pusha
ja
or
aas
ret
or
in
lahf
add
jmp
mov
sbb
ret
sub
push
inc
dec
in
dec
inc
loopne
sti
sbb
xlat
lea
mov
inc
icebp
xor
aad
pusha
mov
sub
mov
add
xchg
mov
mov
dec
dec
and
push
mov
in
inc
inc
fildl
push
jp
inc
ss
or
shr
dec
sbb
jge
mov
jno
das
inc
leave
pop
mov
loopne
mov
mov
lock
push
cltd
lds
mov
jb
inc
js
sub
or
jb
mov
sbb
aas
inc
xor
aas
mov
jae
mov
mov
push
movsb
cmpsl
mov
push
je
or
xchg
mov
in
ret
sub
add
sub
and
pop
js
enter
aaa
lock
dec
fimull
sub
stos
cli
pushf
lret
pusha
lods
ljmp
adc
xor
out
jmp
xchg
pop
jle
add
xor
outsl
add
sub
adc
push
xchg
adc
pop
out
sbb
inc
cmp
testl
and
les
jge
jmp
cltd
test
adc
into
repz
mov
pop
in
mov
xchg
push
add
subb
mov
adc
push
or
inc
jnp
sub
rolb
add
dec
hlt
push
jnp
add
xchg
in
ret
mov
insb
or
mov
test
pop
push
scas
inc
jno
fs
or
lea
sub
jnp
inc
sti
xchg
push
sub
insb
xchg
scas
aaa
inc
or
adcl
push
jg
xchg
add
mov
dec
pop
test
cli
mov
xor
mov
stos
scas
inc
and
aad
hlt
call
out
xchg
call
jmp
sub
in
mov
xchg
repz
sub
dec
jmp
mov
xlat
rcrb
jecxz
call
cld
dec
push
jo
out
xchg
xor
adc
or
cmpsl
lret
mov
adc
fincstp
xchg
or
mov
lcall
or
push
outsb
dec
cltd
incb
sbb
xchg
sub
jo
adc
xchg
inc
rclb
shrb
mov
sbb
cmp
sbb
lret
adc
dec
push
inc
xchg
adc
and
and
std
sti
pop
push
imul
icebp
mov
loop
stos
mov
or
and
jle
je
and
mov
pop
repz
mov
xlat
fnstcw
loope
ret
movsl
jne
je
fadds
filds
or
cmp
pusha
icebp
pop
rorb
add
das
cmp
cmpsb
sub
add
aaa
xor
stos
pop
dec
dec
lock
jne
js
jbe
addr16
ja
push
stos
bound
sbb
fnstenv
test
push
mov
popf
mov
xchg
mov
jmp
push
out
pushf
or
test
add
out
sub
mov
jmp
popf
dec
popf
cmp
inc
mov
and
push
lahf
shlb
mov
ret
mov
mov
inc
movsb
cltd
dec
pop
mov
lahf
dec
sub
add
push
jne
mov
pop
pop
out
pop
add
sbb
mov
lret
ret
and
mov
mov
fists
sahf
mov
sbbl
cmp
mov
and
xchg
lret
cmp
outsl
aas
subb
push
rcrl
movsl
bound
jecxz
mov
jnp
test
movl
sub
out
mov
cltd
cmpsb
nop
mov
mov
cmovle
insb
mov
cmp
xchg
adc
xchg
lds
pushf
cmp
mov
lret
cwtl
pop
or
sahf
adcl
push
les
addr16
mov
xchg
imul
mov
enter
or
cmp
xchg
xor
test
mov
out
clc
or
cltd
insl
mov
cli
sbb
jp
xor
fdiv
std
ljmp
jo
in
outsb
or
cmp
xchg
into
mov
or
movq
sub
aas
or
adc
push
imul
loopne
push
outsb
jno
sti
rolb
pop
ret
jmp
pop
std
test
sub
pop
into
or
leavew
imul
sbb
add
addr16
sub
push
js
mov
cmpsb
push
jae
shlb
in
ja
out
popf
fs
xor
in
push
pop
mov
lea
enter
adc
mov
push
subb
scas
cmp
pop
cltd
movb
dec
insl
jbe
dec
sbbl
pop
or
movsb
sti
inc
imul
out
adc
push
imul
add
insl
push
int3
push
ja
adc
xchg
insb
idiv
jle
mov
mov
das
aaa
and
mov
addr16
popa
mov
mov
lret
adc
mov
loop
push
outsl
jae
jb
scas
insb
xchg
nop
cs
push
clc
cs
out
push
xchg
std
ror
imul
aaa
sub
movsl
sbb
pop
mov
daa
mov
aam
pop
mov
dec
shl
lods
idivb
mov
add
jle
loopne
push
pop
or
pop
lea
xchg
and
jne
dec
pop
popf
jb
bound
xchg
lret
pop
mov
and
fs
push
cwtl
push
cmc
fdiv
jmp
mov
cmpsb
inc
in
lods
xchg
mov
xchg
ja
push
test
mov
sti
and
and
orl
add
push
repnz
enter
scas
aad
mov
push
mov
loop
mov
mov
push
pop
lock
mov
leave
repz
pop
sub
xchg
pop
push
or
outsl
sti
sbb
jmp
sar
xor
pop
loopne
es
add
ret
cmp
inc
sbb
sub
sub
rol
imul
dec
aam
sub
insl
mov
or
inc
add
mov
xchg
add
mov
sub
dec
jns
data16
mov
mov
bound
dec
push
and
shlb
lcall
xchg
cltd
jp
jns
aas
xchg
imul
mov
xchg
ret
inc
jno
js
notl
pop
cmpsl
rcll
pop
xchg
test
jo
lods
xchg
ljmp
ss
icebp
sahf
outsl
dec
aam
aas
jmp
mov
les
je
je
repz
arpl
out
in
lret
or
out
cmp
jmp
add
outsl
testb
cmp
mov
addr16
cld
andb
xor
add
mov
inc
push
repz
xchg
pop
and
xchg
movsl
cmpsl
xchg
cmp
mov
xchg
mov
xchg
push
cmpsb
cmp
or
cmp
addr16
loop
xchg
inc
enter
xor
xchg
mov
push
xlat
sarb
lods
mov
mov
lret
sbb
push
push
ret
stc
shrl
mov
cmp
fbld
mov
add
nop
divl
sarb
call
lret
sbb
pushf
xchg
jmp
icebp
daa
add
test
andl
mov
xchg
rorb
loop
xchg
push
insl
jae
test
and
sub
cmc
das
test
sub
insb
and
cli
ljmp
mov
les
dec
shll
mov
jbe
mov
jg
adc
mov
push
ret
arpl
js
cwtl
mov
jl
cmp
xchg
data16
xchg
out
ja
subb
lds
sbb
movsl
lock
aam
movsl
mov
dec
loop
cmc
or
add
jne
xor
fs
out
sbb
or
jmp
add
aam
cltd
in
insb
mov
out
dec
out
push
ret
inc
adc
sub
pop
or
lds
push
adc
jbe
jno
test
add
js
sbb
out
adc
fadd
mov
int3
je
add
inc
sub
fidivrs
jns
pop
cmp
aaa
rcr
xorb
cs
jae
sahf
jl
mov
jnp
out
inc
add
push
jecxz
int3
insl
jmp
mov
cmp
mov
adc
cwtl
inc
dec
mov
hlt
pop
jne
adc
inc
add
mov
aad
arpl
cltd
out
sbb
jno
out
mov
push
je
lods
mov
into
and
push
inc
add
add
add
xchg
and
lret
arpl
push
mov
gs
mov
lock
cmp
iret
mov
lock
pop
xor
jno
pop
cmc
dec
jns
js,pt
test
iret
jno
insl
pop
in
dec
or
popf
mov
stos
jae
js
fisubrl
out
and
mov
push
movntq
mov
das
cmp
dec
push
sub
cmp
movsl
cmpb
jg
lcall
rorl
mov
adc
mov
movsb
orl
test
push
popa
mov
push
pop
push
popl
xchg
lods
into
sbb
pop
out
setg
cmp
cmp
data16
enter
push
mov
sbb
inc
inc
iret
scas
add
std
repnz
push
inc
mov
pop
dec
test
popa
xor
icebp
jne
xlat
mov
mov
stos
adcb
stos
jmp
sti
or
sub
pop
jne
shr
out
leave
mov
mov
es
jmp
popf
push
mov
js
sbb
imul
mov
push
ret
ror
imul
in
jo
loop
addl
sub
ljmp
lea
adc
fisttpl
pop
or
popa
add
sub
cwtl
mov
test
mov
push
cld
adc
cmp
lret
hlt
out
movsb
dec
cmp
pop
xchg
mov
or
addb
repz
cli
cmp
mov
adc
sub
enter
daa
mov
in
je
lods
xor
push
loop
sbb
adc
out
gs
cmp
into
movsb
xor
in
push
in
out
out
lret
ret
hlt
or
jge
daa
sub
aad
mov
test
and
inc
or
sbb
xlat
jle
sbb
lahf
mov
bound
aaa
nop
fsubrp
adc
push
icebp
es
mov
ljmp
jns
xor
out
cmpsb
je
lcall
add
and
scas
shll
and
ds
jmp
mov
outsb
nop
jmp
cmp
cmp
sub
mulb
cld
pop
bnd
cmp
cmp
pushf
mov
dec
popf
add
fs
add
pusha
xor
cmc
cmp
out
xchg
ds
mov
das
cltd
xorl
leave
sub
das
jl
into
shrl
lret
in
xor
fcoms
xlat
xchg
and
aad
test
inc
sub
or
xchg
cld
inc
adc
sub
lahf
je
inc
cmp
jg
bound
lret
idivb
pop
dec
fildll
std
cld
into
ljmp
pop
jae
jb
and
mov
or
repz
xor
cmovne
negb
loopne,pn
adc
push
fidivl
mov
sub
xchg
fstp
jno
push
sbb
pop
incl
cmp
out
enter
out
sysret
and
push
mov
mov
push
dec
add
sbb
xlat
sahf
movsl
fadds
fdivrs
push
aad
xchg
adc
mov
icebp
sbb
push
jge
fistpl
dec
repnz
popa
aas
lahf
stos
bound
leave
mov
cmpsl
addr16
movl
mov
cmpb
lahf
aam
jae
sti
stc
stc
cmp
add
jmp
push
xchg
or
negb
sub
in
mov
fwait
cmp
test
and
es
lret
dec
xchg
movsl
push
je
push
aad
int3
push
push
or
mov
into
in
xor
inc
call
pusha
loop
in
das
mov
aam
rcrl
out
repnz
mov
cmpsb
pop
pavgw
lods
jbe
push
and
mov
jne
push
jbe
add
xchg
dec
int3
jg
sub
mov
loope
adc
jmp
rorb
ret
push
lock
push
cmpsl
ret
inc
scas
mov
pop
pop
dec
out
sahf
aaa
inc
loopne
int
push
pop
sbb
and
xchg
xchg
pop
cmp
adc
cld
mov
jmp
push
xchg
push
sbb
dec
sbb
jno
add
ss
lock
jnp
cmp
lods
repz
add
int
enter
pop
loope
mov
dec
push
rcll
rcll
sarb
or
fists
jnp
insb
cltd
adc
jae
and
sub
in
andl
pop
sarb
imul
dec
mov
jnp
and
sti
popf
sub
mov
fildll
arpl
mov
cltd
loopne
lcall
add
and
add
jecxz
push
aaa
xor
test
sbb
cwtl
cltd
sub
jae
in
sub
pop
push
xchg
sbb
and
cmpsl
ss
leave
cld
sahf
add
dec
xor
loopne
test
shlb
arpl
add
in
sbb
cmpb
or
jns
fwait
jecxz
pop
cli
sub
xor
push
mov
dec
out
cmp
fbstp
je
adc
push
pop
mov
loope
and
mov
lret
cmp
xlat
roll
sbb
sbb
push
data16
ret
and
lods
inc
lret
cwtl
insb
push
dec
mov
cmp
or
subl
in
das
jns
or
inc
push
pop
sub
fsubrl
bound
push
lods
addr16
clc
xlat
and
xchg
jle
or
add
sarb
inc
adc
mov
shrb
movsb
jg
inc
ljmp
mov
adc
fstpt
sbb
sbb
pop
je
sub
mov
int
pop
jae
hlt
shll
mov
fwait
sub
xchg
push
es
jne
mov
loope
inc
pop
cltd
mov
xor
incb
ffreep
or
sub
mov
cwtl
mov
xchg
push
xor
insb
sub
out
cmp
movsb
xor
insb
and
sub
push
mov
mov
les
pop
jne
pushf
inc
in
and
cltd
dec
push
pop
mov
inc
xor
or
stos
inc
inc
sbb
cmp
call
in
std
mov
ficoml
movsb
stc
arpl
add
mov
imul
push
les
xor
outsl
pop
inc
pop
mov
mov
xor
test
cmp
or
pop
aas
pop
adc
int3
inc
xchg
insb
sbb
mov
or
movsl
popa
mov
aas
push
dec
sub
fldenv
jnp
inc
jnp
test
cwtl
fwait
mov
xor
outsl
and
repz
xchg
jno
inc
insb
pop
sti
pop
jle
dec
pop
stos
int3
sbb
scas
and
test
sub
add
in
std
xor
loope
int3
pusha
adc
arpl
into
xchg
es
dec
jl
psubb
out
fmull
clc
mov
pop
ficoms
add
imul
out
xchg
in
or
and
dec
int3
movsl
or
in
ljmp
xchg
rcr
in
sbb
cmc
dec
mov
mov
jne
push
addr16
std
aad
xchg
je
inc
push
lock
aaa
int3
rorl
xchg
inc
jne
mov
movsl
pop
scas
or
mov
cld
pop
dec
or
hlt
pop
mov
ss
pop
ret
int3
faddl
repnz
ficoms
lahf
pusha
sbb
pop
push
imul
movsb
mov
xadd
mov
int3
mov
sbb
pop
inc
fisubrs
xor
add
mov
mov
dec
cs
push
cmp
mov
rol
pop
fwait
dec
repnz
testb
test
pusha
xchg
addr16
jns
popf
out
mov
adcl
dec
gs
imul
jl
mov
push
cmpl
cmp
pop
mov
cmp
jb
movl
jo
mov
dec
adc
xchg
cli
and
int
and
xor
and
xchg
enter
and
or
push
mov
cmp
cmp
ffreep
xchg
sub
aas
in
mov
push
or
mov
dec
lret
cltd
lods
jl
andb
int3
fadd
sbb
and
jle
inc
shl
mov
jns
dec
dec
pop
dec
inc
add
mov
sbb
insb
dec
and
sti
and
jp
into
mov
out
jmp
sub
push
xchg
adc
sub
decl
jns
pop
adc
dec
std
mov
std
loope
add
push
fistl
lods
jbe
in
cmc
lahf
mov
pop
cltd
mov
mov
or
icebp
popl
lret
dec
and
jne
icebp
pop
shll
mov
jg
mov
hlt
add
popf
inc
ja
sub
push
pop
sbb
jbe
scas
pop
push
lret
jae
in
mov
cwtl
or
mov
xchg
rol
addr16
scas
sub
and
jae
daa
lret
mov
mov
jge
int3
lea
lgs
leave
addr16
xor
cmovs
inc
sti
xor
dec
sub
sub
or
and
cli
push
or
scas
jb
inc
push
addr16
or
nop
lods
lock
pop
aaa
rcll
jo
mov
das
aas
or
push
cmp
mov
mov
xchg
push
pushf
pop
fsubl
shll
pop
xor
arpl
sbbl
icebp
dec
loop
repz
dec
out
js
sbb
add
xchg
mov
sub
sub
mov
mov
repnz
push
cld
scas
lods
repz
mov
cmc
ret
xchg
rorl
inc
test
xorl
std
loope
cmp
mov
add
mov
bound
push
push
jbe
ljmp
inc
sub
out
inc
jnp
cmp
repz
xor
bound
sahf
adc
mov
push
out
ljmp
jge
jae
mov
mov
mov
movl
popf
and
and
adc
jns
lret
stos
int3
jae
pop
sti
repnz
pop
repnz
xor
xchg
ficompl
add
lret
iret
mov
sbb
cmp
mov
xor
fmull
iret
inc
pop
shrl
sbb
sbb
push
mov
pop
lahf
repz
mov
push
fwait
jp
shll
aam
and
xchg
shrb
arpl
cmp
test
call
ret
loopne
xchg
sbb
xor
sub
aam
std
push
mov
insl
fwait
mov
fwait
add
pop
dec
in
aam
mov
push
pop
std
inc
inc
dec
mov
and
sub
data16
jae
push
cmp
aad
loop
dec
sbb
movsb
cs
mov
xor
mov
mov
add
jle
pop
mov
js
ds
scas
sti
sub
scas
mov
loope
mov
xlat
pop
adc
push
sub
pop
repnz
inc
mov
pop
mov
inc
in
mov
popf
pop
incl
nop
lods
xor
cmp
xchg
filds
push
std
pop
loop
out
inc
mov
js
popa
bnd
lcall
jg
sub
das
pop
jae
mov
addr16
mov
mov
jne
or
shrl
mov
nop
mov
das
loopne
fld
add
sbb
ffree
int
sub
or
xor
cmc
fneni(8087
mov
push
call
xchg
jmp
outsb
and
jb
in
bound
add
leave
add
push
rep
jno
aaa
mov
sahf
enter
out
mov
adc
hlt
icebp
in
loope
fcoml
xchg
sti
push
mov
inc
inc
popf
and
cwtl
repnz
push
int
sbb
push
xlat
add
push
movsb
jl
add
out
loop
loope
xchg
scas
sbb
aam
jle
imul
rcr
mov
test
sub
adc
ret
sbb
or
aas
mov
int3
cltd
xor
inc
stos
and
mov
cli
test
mov
pushf
add
lret
pop
imulb
add
xor
sbb
scas
push
pop
scas
ret
mov
jbe
jle
dec
dec
or
dec
cmpsl
out
pop
repnz
push
sbb
ljmp
pop
stos
pop
outsl
orb
fists
rcr
push
dec
arpl
and
cld
into
jge
push
out
mov
adc
mov
inc
pop
push
mov
cli
and
testb
in
dec
stos
dec
add
inc
lret
xor
mov
fwait
mov
js
mov
jp
inc
loope
inc
jbe
mov
and
prefetchw
fildll
jae
mov
pop
sub
shr
xchg
cmpsb
sub
push
jmp
movsb
frstor
adc
dec
inc
sbb
jnp
push
adc
sahf
jo,pn
in
ret
fucomip
dec
ret
roll
scas
dec
jbe
or
into
pop
mov
dec
pop
dec
lcall
ja
mov
aaa
in
nop
dec
add
cmp
jecxz
fld
cmc
cmp
cmp
popf
fmulp
jp
cwtl
ret
insl
test
dec
or
mov
and
jge
rorl
xor
rolb
in
out
lcall
iret
js
sub
adc
out
sbb
sbb
outsb
sbb
inc
in
inc
cmc
mov
aaa
outsb
loope
sub
ljmp
pop
jmp
dec
push
test
mov
test
xchg
divb
or
mov
and
sub
nop
mov
stos
cmp
out
cmp
sbb
pop
xor
sbb
add
shll
or
sbb
rclb
cmp
mov
jp
adc
rcll
ret
fs
lahf
jmp
jo
jb
xor
jb
xchg
jae
lret
aad
in
cmp
ret
fidivrl
loopne
scas
jnp
lods
adc
imul
push
repz
adc
mov
aas
shrl
arpl
fstl
roll
std
xor
dec
sti
aam
in
in
lods
cmp
decl
mov
xchg
cmp
fstpl
jb
mov
adc
cld
or
or
movsb
add
sub
xchg
std
fadd
out
iret
pop
cld
xchg
jb
test
cltd
outsb
ss
hlt
movsl
sbb
xor
test
mov
pushf
icebp
in
push
sbb
xor
call
cmpsb
mov
adc
inc
daa
push
inc
je
and
mov
notb
lret
sub
dec
mov
rcrb
sbb
sub
mov
and
inc
incb
outsl
jnp
shll
scas
pop
je
popa
xchg
rorb
push
jno
jne
push
pop
imul
adc
addr16
fsubrs
fsubs
and
into
xchg
faddl
cmp
fwait
ret
pusha
pop
jg
dec
sbb
jle
int
mov
popf
mov
aas
xchg
pushf
loop
in
dec
xchg
fst
mov
jnp
std
lcall
inc
or
subb
mov
in
cmp
clc
or
dec
test
pop
or
in
push
mov
sarb
cmovno
rcrl
addb
dec
dec
mov
or
lret
js
xchg
push
sbb
fidivl
mov
fcmovnb
in
mov
dec
adc
mov
xor
testl
xchg
sahf
cwtl
inc
dec
xchg
repz
bnd
adc
jp
dec
and
push
pop
jae
test
mov
or
mov
jbe
paddsb
and
incb
mov
dec
mov
cmp
out
ljmp
imul
adc
cmp
add
jmp
fbstp
and
mov
mov
shll
push
sbb
aad
xlat
pop
out
in
aas
pop
mov
xchg
leave
jg
daa
rcrl
lock
jno
xchg
ds
fistl
add
mov
in
sub
rorl
je
xor
dec
js
pop
sti
test
call
mov
movsb
jae
pop
adc
stos
out
pop
loop
loope
test
aam
repnz
jae
add
jns
add
lret
or
pop
test
test
add
add
push
pop
push
add
xchg
aad
push
add
aad
cmpsl
push
xchg
mov
sbb
out
aam
outsb
out
mov
xchg
cmp
push
in
aaa
jl
into
cs
dec
cld
sub
and
pop
inc
popf
xlat
dec
and
mov
cs
orb
push
mov
adc
popa
push
fwait
push
jno
adc
ret
mov
daa
call
lds
stos
inc
enter
xor
xor
adc
xchg
or
push
sub
sbb
adc
aaa
lea
mov
sbb
movsb
insb
aad
or
sahf
or
adc
incl
repnz
sti
jno
cmp
adc
fisttpl
out
icebp
ds
lcall
jne
sbb
mov
and
mov
cwtl
fistps
push
scas
push
lret
cmpsb
sbb
mov
dec
int3
jns
out
mov
in
or
ljmp
jnp
mov
rcl
imulb
mov
repnz
fmuls
fwait
jae
test
mov
and
dec
add
sbb
popf
es
dec
jns
iret
rep
ret
out
dec
mov
ss
int3
jg
mov
adc
xlat
out
fwait
aaa
jne
and
dec
out
rcll
popf
int3
sarl
insl
out
xchg
pop
add
jg
mov
idiv
xor
pushf
mov
fists
pushf
cmp
fcomps
rorl
subb
rcr
pushf
leave
mov
xchg
ror
dec
ljmp
mov
sub
sub
cmpsb
ss
add
test
jne
xchg
das
leave
cmpsb
mov
jb
int3
mov
or
xlat
sub
aas
mov
loopne
lcall
test
fsubp
jns
push
mov
repnz
cmp
out
test
fs
fwait
or
lea
and
mov
pop
dec
mov
shrb
cmc
nop
data16
mov
push
and
cmpb
lret
movsl
mov
fnstcw
mov
out
std
andb
mov
out
das
insl
test
jg
insb
ljmp
lea
mov
mov
add
cmp
pop
out
or
ss
fcomps
ficoms
lahf
test
popa
adc
jmp
jmp
jp
push
lret
out
sub
sub
das
sub
mov
imul
lret
jecxz
insb
add
inc
das
inc
aam
cli
pop
cmpsb
in
push
adc
cs
cmp
out
sub
xchg
and
pop
std
test
iret
lods
mov
cmp
add
jbe
sbbl
test
inc
pop
ds
or
mov
lock
jle
sbb
dec
jl
aam
sbb
repz
push
jo
cmp
xor
inc
loopne
mov
shll
xor
cmc
mov
mov
inc
xchg
and
xchg
adc
icebp
mov
mov
jg
mov
outsb
push
push
imul
jle
xchg
nop
xor
mov
std
ud1
scas
pop
or
mov
into
stos
mov
dec
rolb
jle
cli
out
jo
cmp
and
in
mov
push
es
jbe
cltd
movsl
pushf
lds
scas
mov
in
dec
fneni(8087
jns
clc
cmpsb
test
es
inc
out
inc
in
addb
xor
enter
pusha
push
push
adcl
pop
mov
inc
sub
mov
xor
mov
pop
mov
dec
xlat
dec
inc
push
rol
imul
mov
and
push
xchg
popl
or
out
leave
pop
sbb
add
xchg
orl
aam
and
push
fisttpll
mov
stos
test
xchg
jmp
in
ds
mov
and
jecxz
std
jo
sub
xchg
out
lods
enter
xchg
jge
cmp
mov
call
lds
push
test
scas
arpl
dec
gs
sarb
cltd
cld
orl
imul
gs
xor
inc
adc
push
stos
arpl
push
pop
mov
push
mov
cmpsb
push
cmp
lods
test
sub
mov
xor
push
aam
pop
or
push
cmp
xchg
mov
dec
daa
aad
and
jbe
sub
or
aad
testb
decb
mov
dec
out
cmp
mov
fmuls
enter
ja
mov
cmp
stc
ret
pop
cmpsb
mov
add
test
xchg
rcrb
fbstp
ljmp
push
cmpsb
lahf
pop
add
pop
or
xor
jle
aaa
push
xor
popf
fsubs
outsb
dec
push
fiaddl
jmp
scas
sahf
cld
das
sub
push
pushf
call
xchg
add
jmp
fstps
xchg
rclb
es
in
push
pop
pop
int3
fisubrl
jmp
add
mov
jb
jns
push
push
add
mov
push
sbb
js
je
repnz
loope
filds
inc
test
dec
das
pop
sbb
and
sub
lods
loop
sti
xor
jne
dec
iret
in
addb
ret
jmp
pop
add
pop
popf
dec
scas
pop
lret
fucomip
addr16
mov
push
add
adc
dec
daa
shr
in
xor
pusha
add
jg
mov
sti
loop
roll
and
xchg
cwtl
jmp
cli
lock
cwtl
push
mov
mov
xor
test
lods
fsubs
daa
xchg
in
cmp
out
ficomps
dec
inc
fwait
ljmp
imul
repnz
adc
js
add
push
jae
jo
jae
call
test
popf
and
insb
scas
je
inc
jg
inc
sti
adc
test
jge
sub
dec
mov
lods
xor
push
and
test
inc
push
outsb
cld
cmp
lret
out
lds
out
and
movsl
sub
inc
sarb
ficoml
mov
movsl
call
call
xlat
cmp
in
adcl
add
ljmp
mov
sbb
in
mov
push
hlt
fcoms
jnp
push
pop
or
mov
cs
jbe
aad
jns
lret
dec
iret
mov
es
inc
add
sbbb
mov
jnp
popa
jne
cmp
jbe
in
data16
dec
call
mov
data16
jle
or
pop
fadds
jl
push
aad
inc
mov
adcl
cmp
xchg
mov
cmp
lcall
cwtl
xchg
int
push
dec
cmp
sub
pop
adc
cmpsb
xchg
in
pop
subl
add
les
data16
test
push
fwait
cmpsl
addr16
mov
notl
cmp
lods
add
js
pop
xor
jp
sbbb
out
fisubrs
push
ficoms
repz
enter
adc
mov
outsl
pop
into
push
gs
pop
fists
lds
pop
or
movsl
jl
xchg
and
mov
inc
jo
pop
mov
test
mov
inc
fisttpll
add
mov
pop
push
jno
xor
loop
dec
enter
cmpsl
fldt
mov
mov
pop
add
in
jp
enter
pushf
jg
add
dec
mov
test
imul
sub
inc
insl
cmc
icebp
and
roll
dec
into
mov
sti
jne
jbe
scas
fistps
sbb
lock
mov
pop
dec
pop
mov
lahf
add
cmp
in
inc
sub
jmp
jb
shlb
les
xor
ret
loopne
pusha
movb
stc
stc
sub
mov
aaa
mov
aas
repz
cmp
dec
fcomp
stos
xorl
add
adc
pop
adc
push
sbb
out
test
add
sbb
lods
cld
xchg
mov
cwtl
pop
das
add
out
cmp
loope
or
addr16
jae
fldcw
add
in
out
out
stc
xlat
aas
movsl
idivl
mov
out
shrl
cmp
push
lahf
cli
repnz
iret
repnz
pop
out
in
sbb
pop
fwait
sbb
mov
movsb
xchg
ret
pop
es
cmpsl
inc
es
push
je
stc
or
cmp
mov
addl
inc
pop
lock
pop
mov
mov
std
aam
repz
or
cmp
loope
push
pop
icebp
sub
xchg
jmp
xor
rol
jae
cwtl
jno
icebp
cmpsl
mov
sbb
mov
rol
sbb
cmp
xchg
sub
movsb
pop
and
inc
pusha
mov
jo
mov
data16
rcrl
nop
ljmp
lret
lret
xchg
add
push
xorl
dec
shl
ss
sub
stc
mov
popf
and
aas
jno
or
inc
xor
movsl
push
mov
push
add
decl
and
sbb
mov
and
push
hlt
sti
aas
push
mov
dec
sti
mov
dec
popf
popf
ret
push
xlat
cmp
sub
bound
out
mov
movsl
mov
sub
xchg
mov
cmp
scas
or
mov
adc
push
addr16
sub
inc
fstpl
adc
xor
or
push
popa
fwait
or
mov
lcall
dec
jmp
mov
cmp
je
push
je
push
mov
xchg
mov
ds
xchg
mov
add
mov
call
loopne
std
cs
pop
out
ds
lcall
sub
fadds
cltd
les
or
or
stos
pop
test
es
fucom
mov
xchg
insb
and
cwtl
stc
sub
in
mov
and
push
and
pop
stos
or
ja
inc
roll
mov
sub
fisubrs
or
add
adc
pop
insl
add
xor
fs
cmpsb
popa
push
popa
jb
ret
fsubl
pop
lods
scas
pop
in
mov
mov
xchg
dec
or
int3
pop
push
mov
in
mov
mov
in
in
rorl
jbe
mov
sbb
outsb
rclb
jg
dec
lea
xor
and
fcomps
scas
push
cltd
or
movsb
fidivl
dec
inc
mov
std
call
sub
stos
daa
jns
addb
fidivs
add
mov
dec
imul
push
pop
mov
inc
negb
sub
push
lret
ljmp
add
cmp
adc
xchg
or
nop
aam
rol
lahf
push
fucom
sbb
ret
stc
arpl
xor
lock
push
pop
clc
pop
jbe
jg
cld
outsb
test
add
cmp
xlat
mov
and
jp
in
jbe
addr16
fbld
movl
mov
mov
imul
inc
in
pushf
or
cwtl
xchg
pushl
movsb
mov
adc
push
pushf
cmp
jecxz
aas
in
push
lock
xchg
sub
into
in
push
out
rorl
mov
out
mov
mov
popa
lret
insl
mov
stc
bound
xchg
mov
fstpl
mov
icebp
out
std
lods
in
cmp
stc
dec
addr16
xor
xor
sahf
in
lret
outsl
adc
sub
mov
mov
push
sub
lret
aad
xor
pop
fdivr
iret
hlt
add
dec
mov
fcmovne
in
pop
aam
or
lds
mov
xor
cmpsb
subb
popf
lcall
jle
push
data16
xor
adcb
jmp
mov
stos
lret
xlat
cmp
aam
dec
stos
pop
pop
mov
pop
mov
push
add
lcall
dec
test
cwtl
pop
lods
lahf
pop
and
aaa
sbb
sti
shrb
xchg
lea
je
cltd
mov
shlb
pop
push
adc
add
subb
cmp
adc
imul
push
push
call
fisttpl
bound
test
inc
inc
clc
test
clc
icebp
mov
cmp
fstpl
negb
dec
notl
fstpt
faddl
pop
jmp
cmp
xchg
insb
inc
inc
movsb
mov
mov
inc
js
leave
dec
lds
sbb
lret
in
mov
cld
pop
push
mov
push
outsl
loop
out
xchg
popa
in
mov
loope
xlat
imul
jg
mov
mov
movsb
mov
popa
call
in
dec
mov
xchg
mov
call
scas
mov
popa
jmp
mov
mov
outsl
jecxz
xor
roll
loop
fisttpl
es
mov
imull
movsb
adc
test
add
pop
and
leave
cmp
cltd
adc
ret
mov
mov
jge
testl
cmp
adc
es
cmp
mov
aas
scas
xor
in
mov
inc
dec
sub
je
out
cs
popf
xor
jg
mov
lods
sbb
dec
mov
pop
vmread
pop
inc
test
jo
outsl
int
xchg
pop
sahf
mov
inc
test
pushf
setnp
cmp
push
psrlq
int
dec
cmc
sub
pop
add
lea
add
out
pop
sub
mov
mov
shlb
repnz
inc
dec
sub
rcrl
call
cld
ljmp
cmc
xor
out
sbb
aas
or
xchg
aad
in
sub
fstl
mov
mov
imul
inc
movsb
pop
sbb
or
jle
push
cmc
and
jae
pushf
stos
add
sti
inc
fmuls
outsl
mov
or
roll
and
mov
xchg
xor
rolb
add
sahf
cli
sub
cmpsb
test
push
inc
hlt
hlt
mov
daa
mov
xor
sbb
lods
push
cli
push
es
pop
sbbl
jg
sub
mov
fwait
lcall
idivb
xor
mov
gs
call
pop
cmp
and
pusha
sbb
and
pushf
popa
dec
aam
jmp
mov
aam
pop
popf
cmp
subl
pop
push
aam
cmpsl
sub
mov
repnz
push
dec
jmp
pushf
xchg
int
jo
in
xor
inc
cld
or
rorb
lahf
ret
std
jae
lcall
ds
imul
int3
mov
pop
fstl
scas
leave
mov
dec
push
pop
es
xchg
je
loop
xchg
mov
jno
cmc
rcl
loope
mov
inc
adc
mov
jp
cld
push
loope
pop
stos
add
sub
add
insb
ja
addl
sbb
or
mov
iret
cwtl
adc
pop
mov
insb
sub
xchg
add
insb
std
ja
cmpsl
fsubp
xor
call
xor
sti
add
cmp
shlb
xchg
add
inc
push
roll
pop
push
mov
aad
sub
inc
fbstp
adc
pop
fs
clc
loope
sbb
pushf
test
std
outsl
mov
mov
mov
mov
sub
cmpsb
movsl
jmp
and
and
loopne
cmp
sub
add
stc
and
xchg
or
test
test
inc
mov
pop
inc
add
mov
outsl
sub
adc
jns
mov
push
push
pop
sub
fsubrs
pop
popf
enter
adc
jl
arpl
push
insl
adcb
jle
cld
jo
outsl
and
jno
sbb
outsb
fists
xchg
lods
mov
ja
sub
icebp
icebp
dec
cmp
orl
sbbb
mov
leave
inc
sti
ds
bnd
ss
mov
out
push
xorb
sbb
ljmp
mov
addr16
divb
loop
and
sbbl
inc
fcoml
bound
je
sub
movsl
xchg
dec
mov
dec
in
and
dec
and
pop
adc
sub
movsl
ret
sbb
push
mov
mov
out
movsb
je
addr16
int3
dec
bound
mov
inc
imul
sbbl
add
out
pop
adc
and
cmpb
pop
sub
movsl
mov
sarl
ja
cmp
iret
jle
insb
lcall
cmpsb
repz
jg
sarb
push
adc
inc
out
insl
jp
ror
push
es
xchg
scas
ret
js
push
sahf
pop
cmp
mov
sbbb
or
cmp
aam
cmp
xor
sub
mov
rorb
xor
dec
jo
imul
xchg
mov
adc
push
inc
and
les
add
into
pusha
or
popa
aad
lahf
out
jl
mov
sub
dec
je
pushf
repz
xchg
fdivrs
dec
sbb
enter
into
jp
les
outsb
ret
push
ret
hlt
ret
hlt
nop
stc
xor
ss
iret
dec
idivb
mov
in
mov
sbb
shll
mov
out
lea
jecxz
in
sub
jae
movsl
jle
mov
in
jnp
int3
loop
cld
lods
dec
pushf
aaa
push
addl
sbb
sub
mov
iret
jbe
andl
inc
jns
pop
test
stc
xchg
inc
inc
arpl
fsts
sbb
in
pusha
pop
enter
mov
xchg
mov
test
cmc
stos
mov
cld
mov
hlt
mov
das
add
jb
in
movaps
movsb
jbe
jbe
jno
arpl
jne
shlb
lcall
fmulp
ds
dec
in
mov
xor
sub
int
pop
es
mov
mov
pop
adc
iret
arpl
and
xchg
jae
sbb
in
int3
cmpsb
sti
aas
lcall
inc
xlat
outsb
xchg
cs
in
loop
xor
aam
xchg
fwait
add
adc
out
jp
dec
add
fs
jbe
dec
dec
ss
sub
outsl
fisubs
lret
inc
mov
cmpsb
mov
std
sbb
dec
mov
mov
and
pop
cmp
lahf
imul
and
ljmp
clc
loop
sub
lods
addr16
cmp
mov
sub
ja
pusha
das
adc
adc
insb
mov
rclb
pop
add
inc
sub
lods
ret
cmp
shr
xchg
push
mov
inc
push
aas
mov
sbb
mov
cwtl
mov
adc
rcr
push
jb
neg
add
icebp
test
fs
xchg
repnz
inc
inc
push
test
mov
lret
loopne
ljmp
in
lahf
pop
push
aas
xchg
jo
loopne
push
sub
jns
rcrl
insl
dec
push
lods
cmp
arpl
cmp
pop
inc
jmp
shrl
adc
pop
jmp
lahf
jae
pop
mov
mov
test
mov
and
pop
xchg
inc
xorl
std
inc
jno
pop
push
jg
jo
lea
in
pop
negb
cmp
or
ss
dec
ss
jnp
insb
mov
add
sbb
mov
cmc
pop
push
pop
fnstenv
cmc
hlt
adc
sahf
mov
push
daa
xchg
lea
std
insb
xchg
add
aad
mov
jbe
sub
adc
or
adc
std
leave
mov
fstpt
jae
mov
inc
loop
lcall
pusha
imul
mov
sub
cld
leave
cmp
xchg
and
shrb
scas
out
or
dec
mov
sti
xchg
fdivrp
insb
ljmp
mov
stos
push
fsubl
inc
popa
stos
stc
loopne
xor
jno
adcl
pop
sub
cmp
or
les
addr16
mov
leave
jno
xchg
ds
in
sub
ja
mov
loop
scas
pop
in
pop
stos
arpl
xchg
ja
out
xor
jg
pop
ret
dec
gs
xchg
pushl
scas
jle
lcall
mov
shrl
xorl
js
mov
jle
xchg
inc
jne
or
subb
sarl
out
data16
xchg
into
sahf
inc
and
pop
loop
sbb
aad
or
enter
xor
rcrb
and
push
scas
add
shll
push
inc
dec
mov
mov
lea
cltd
jge
and
ret
jl
mov
cmp
pop
dec
and
push
into
mov
test
xor
and
ss
rcr
repz
les
adc
or
sub
sub
dec
int3
sbb
mov
in
mov
or
cmpsb
fldt
xlat
xchg
mov
cwtl
pop
incb
into
test
aaa
xor
imul
and
add
xchg
mov
sub
inc
mov
das
pop
das
xchg
xor
dec
push
je
inc
mov
sbb
sub
test
pop
push
call
mov
mov
adc
nop
mov
adc
lock
testb
xchg
dec
roll
mov
sahf
leave
pushf
jb
daa
mov
scas
shr
imul
orb
gs
lahf
mov
sahf
adc
jnp
dec
jmp
inc
inc
dec
jl
lahf
clc
push
data16
pop
jmp
push
mov
mov
inc
jp
out
adc
std
xor
lcall
xchg
pop
xor
fistps
jo
dec
inc
mov
push
icebp
jo
sub
sbb
and
sbb
adc
sub
add
mov
push
adc
add
mov
flds
push
lods
mov
pop
jb
push
out
repz
pop
sbb
jmp
mov
xchg
orl
mov
sbb
lock
stos
add
dec
mov
sbb
jno
mov
lds
cmpsb
nop
jmp
scas
int3
jnp
fwait
inc
rol
pop
dec
iret
ja
push
lret
dec
and
xor
popa
sbb
js
xchg
and
push
mov
std
jo
cmp
test
sbb
jg
push
mov
sbb
in
sahf
mov
int
enter
jae
lea
cmp
movsb
aas
pop
push
add
xchg
inc
shrb
push
imul
xlat
lods
cwtl
arpl
xchg
mov
jae
into
aam
inc
jp
popf
psubsb
sub
in
popa
mov
popf
mov
sub
sbb
and
jbe
stos
sub
pushl
stc
les
fnstsw
cmp
sub
push
xchg
out
sbb
icebp
xor
jmp
add
jp
cmp
out
pop
aam
scas
push
sub
ret
pop
pop
xchg
and
hlt
je
loope
fildl
aam
xchg
cmp
imul
add
and
stos
push
shlb
sbb
insl
frstor
mov
mov
je
push
jb
pusha
bound
ret
movsw
ja
shlb
jns
and
xchg
fmul
or
and
dec
sahf
xor
push
outsl
xor
popf
push
cmp
push
lea
jno
jle
gs
clc
xchg
rorb
pop
cmp
jne
mov
dec
pop
cs
jnp
movb
mov
and
in
jge
or
jbe
es
aaa
clc
mov
cmpsb
mov
xlat
in
push
xchg
sahf
gs
xchg
js
fildll
xchg
hlt
add
aad
out
jle
hlt
iret
jne
sbb
pop
pop
adc
push
pop
cwtl
inc
jl
negl
shrl
in
mov
pop
lods
jl
dec
mov
push
rcll
add
mov
test
mov
sbb
lret
cld
lods
stos
ror
mov
and
fnstcw
and
dec
mov
add
lods
push
cmp
loope
icebp
mov
ja
or
into
pop
outsb
mov
cmpsl
sbb
cmp
int
hlt
jle
std
dec
lret
jns
sbb
adc
push
push
adc
push
or
rorl
adc
inc
loopne
ret
mov
shrb
out
sbb
push
mov
jmp
dec
aaa
int3
jbe
adc
xchg
jge
jae
imull
xor
mov
xlat
ljmp
inc
push
std
divb
mov
cmpsl
cmp
out
ror
test
ret
das
daa
loop
ds
push
cmpb
enter
dec
int
enter
inc
adc
pop
fstpt
and
outsl
out
or
arpl
bound
mov
scas
cmp
gs
push
sbb
pop
sahf
mov
xchg
cmp
mov
dec
iret
or
adc
test
pushf
rcl
dec
jne
mov
xlat
je
addr16
xor
outsl
push
insl
insl
mov
cltd
lret
cltd
fidivrs
outsb
lods
adc
xchg
or
dec
mov
movsb
push
jnp
cmc
jge
adc
ja
sub
imul
jp
xchg
cwtl
inc
cld
aas
cltd
xor
je
mov
sbb
or
pop
xor
or
dec
sub
and
sbb
lds
add
inc
mov
addr16
jl
pop
mov
jge
and
dec
pop
nop
cmp
int3
stos
sahf
jae
lods
mov
cmpsl
test
fidivrl
adc
xchg
int3
scas
pusha
jge
push
add
push
xor
ds
rorb
aas
addl
lods
xchg
xchg
jo
jmp
fucomip
mov
or
movsb
add
in
subb
jge
xor
xor
repz
lods
shr
lock
cmp
sbb
cwtl
call
jo
push
idivl
mov
mov
stos
sub
ret
pop
cli
jg
inc
movlps
xchg
lock
xor
xlat
xchg
mov
scas
outsl
scas
ret
jmp
jg
mov
inc
and
jns
mov
aad
rclb
inc
lods
aam
out
jnp
jne
stc
xchg
clc
stos
adc
les
imul
aam
ss
sbb
inc
sub
test
add
loopne
fdivr
fwait
pop
out
mov
sahf
repz
dec
cmp
dec
add
in
lods
mov
mov
iret
arpl
and
sbb
test
and
aas
adc
sbb
jle
mov
adc
iret
inc
addr16
xchg
mov
lret
push
inc
sti
pop
sti
jmp
xlat
mov
inc
or
shll
ljmp
sbb
mov
ljmp
push
das
xchg
mov
push
andl
inc
adc
imul
sub
mov
sub
pop
rclb
outsb
sub
cmpsb
and
jmp
int3
lret
jecxz
clc
xchg
jl
sarl
inc
add
sbb
mov
or
xchg
dec
ror
lcall
lret
in
xchg
lods
into
rclb
inc
in
mov
cltd
adc
fsub
ret
inc
les
push
lahf
in
scas
leave
cld
pop
call
repz
movsl
jl
xor
adcl
lret
ds
or
or
leave
stos
push
lahf
push
xor
in
mov
xchg
imul
mov
xchg
or
leave
in
fsubrs
push
mov
mov
data16
inc
mov
push
das
mov
sbb
push
lahf
in
mov
cmp
fcmovnb
mov
pop
push
test
test
cmp
cmp
test
cmp
fs
movsb
ljmp
into
cmpsb
cltd
movsb
ljmp
jge
sub
sub
loopne
js
arpl
mov
push
add
dec
ds
xchg
icebp
lcall
into
in
add
cmp
call
loope
cli
mov
mov
or
add
push
out
push
pop
popf
xor
add
pop
sarb
sub
mov
out
test
and
aaa
lcall
mov
jno
mov
imul
add
sbb
out
sbb
dec
bound
stos
dec
sub
and
sub
adc
and
sub
cmpsb
cli
inc
sub
push
mov
sbb
cld
cmp
les
mov
xlat
and
xor
test
imulb
mov
cmpsl
sub
leave
dec
ja
xor
mov
outsb
ret
mov
rcrl
jmp
cs
and
dec
test
ss
imul
dec
ret
jp
xchg
mov
cmp
sbb
ret
or
lods
ljmp
xchg
scas
xor
add
js
xchg
sub
sbb
cli
pop
xor
xlat
fisttpl
push
lds
xor
push
xchg
push
or
jb
sub
pop
inc
les
inc
dec
xchg
push
leave
or
rol
jge,pn
lret
mov
mov
mov
fnsave
push
int3
sub
inc
pop
pop
cli
lea
sarl
addb
inc
dec
adc
mov
aas
jmp
mov
mov
xor
les
or
cmpsl
cmp
jecxz
rol
js
das
dec
pop
orl
adc
inc
mov
adc
inc
mov
xchg
arpl
test
lods
pop
mov
add
push
lea
mov
push
pop
push
movsl
addb
jle
push
loopne
jo
sbb
or
adc
shrl
jg
aaa
cmp
sub
dec
mov
jl
jno
cmc
jae
xorl
push
push
jo
lret
add
dec
fadds
xchg
mov
subl
mov
in
fwait
or
movlps
data16
jmp
mov
mov
addr16
cmc
sbb
sub
lock
or
inc
jl
push
adc
xchg
inc
test
scas
cmp
adc
add
adc
cld
out
aas
jbe
mov
sbb
push
ficomps
out
sbb
add
xor
sbb
sahf
add
and
xchg
sub
enter
xchg
and
fimull
in
sbb
xor
notb
sub
inc
add
dec
xchg
movsb
pop
jp
lcall
mov
push
lods
enter
inc
jb
int
cmpl
orl
out
dec
xchg
xor
sub
cmp
jne
jb
sub
mov
add
adc
sbb
mov
das
hlt
xchg
repnz
cltd
inc
pop
xlat
push
ja
ds
jbe
icebp
pusha
pop
and
movsl
xchg
insb
jecxz
int3
push
sub
push
sub
pop
test
adc
xor
aam
bts
popa
bound
pop
mulb
jl
jl
clc
rcll
pop
pop
pop
cmpsb
imul
fstpt
fdiv
and
hlt
mov
int
sar
and
push
pop
dec
cmpb
ret
test
lret
imul
mul
adc
popf
inc
or
jge
repnz
incb
les
in
lods
ret
xchg
call
cwtl
sub
sbb
add
push
mov
data16
fcomi
nop
adc
int
adc
lret
pop
lahf
cmp
inc
lock
std
cltd
cmp
mov
adc
xchg
and
inc
pop
jl
jns
lret
mov
cmpb
movsl
jae
and
shr
into
cmc
jle
push
dec
pop
gs
and
push
bound
add
pop
fs
and
addl
or
mov
xchg
rolb
shlb
call
add
neg
push
aaa
add
ret
push
neg
or
shrl
dec
loope
in
test
roll
and
jg
pop
insl
lcall
jecxz
fistl
movsl
out
mov
pop
mov
fwait
out
jmp
mov
mov
ror
jle
dec
mov
mov
fs
rcll
sbb
js
clc
xchg
add
xchg
mov
inc
sysenter
mov
lret
ljmp
cmp
sub
dec
dec
test
jge
roll
es
out
sarb
outsl
aaa
iret
and
outsl
mov
hlt
mov
stc
jge
cmp
ret
iret
test
sbb
jle
jne
ret
int3
dec
mov
inc
and
pop
cwtl
imul
ficoms
mov
sub
cmp
add
inc
cmp
push
addb
ds
sbb
mov
pop
dec
sahf
adc
jg
inc
cmc
leave
sub
xlat
sti
mov
and
mov
test
xor
or
jmp
ja
scas
jmp
fisubs
fisttps
insl
jbe
push
jne
outsb
dec
dec
incb
push
icebp
outsb
jp
xchg
push
insl
adc
pop
push
push
adc
dec
xchg
inc
fs
mov
outsl
sti
or
inc
mov
push
ljmp
rcll
jle
aaa
addr16
inc
jno
pushf
and
iret
add
jbe
mov
push
lock
cmp
rclb
in
xchg
pusha
jnp
cltd
mov
xlat
rol
scas
cwtl
cmpl
pop
mov
lods
hlt
sti
inc
js
lods
mov
ss
push
sub
test
add
jge
xor
aad
pop
inc
gs
test
mov
enter
mov
jl
test
mov
sub
xor
pop
pop
je
mov
push
in
pop
mov
sbb
dec
in
mov
test
or
addr16
jnp
pusha
push
jge
mov
dec
fbstp
push
ljmp
insb
inc
lret
ret
inc
xor
lods
mov
add
sbb
or
xchg
dec
pop
rorl
add
jae
xor
cmp
adc
xlat
in
jl
rorl
adc
test
rclb
xlat
cmpsl
movsb
mov
outsl
jnp
sub
jae
mov
jmp
cmp
mov
pusha
ror
add
pop
ret
pushf
adc
sub
les
push
sbb
enter
add
enter
inc
cmp
push
add
imull
push
mov
sahf
test
or
mov
adcl
push
dec
xchg
cmp
mov
cmp
in
mov
adc
dec
ret
cmp
leave
data16
sarl
loope
sub
outsb
add
jl
repz
inc
repnz
lret
pusha
subl
cli
and
outsb
push
fs
fnstcw
or
xchg
je
sub
fdivp
out
jmp
int
rep
stos
add
mov
out
icebp
add
insl
enter
jl
cld
mov
or
jne
outsb
jg
cmp
jne
enter
scas
mov
xlat
push
pop
push
shll
daa
dec
iret
mov
inc
mov
outsb
hlt
mov
addr16
mov
in
mov
imul
popf
test
fidivl
adc
incl
mov
repz
imul
int
fs
xor
dec
mov
xor
stc
adc
lea
fsts
jge
test
jae
repz
xor
leave
cli
in
xchg
xchg
dec
jmp
mov
adc
testl
rorl
test
mov
xchg
lods
jo
dec
xor
in
or
pop
mov
enter
std
xchg
add
out
addl
outsb
pop
out
loope
imul
test
mov
in
cmpb
mov
push
sbb
xlat
sub
dec
add
and
push
xorb
or
xchg
mov
andb
xchg
add
jp
mov
and
test
xlat
aas
outsl
outsl
inc
fwait
std
out
sub
ret
pop
daa
das
pop
jg
and
inc
push
aam
add
out
lahf
addr16
test
lcall
int3
or
dec
jno
push
mov
adc
mov
push
fwait
sub
xchg
sub
and
test
sub
scas
and
lret
pop
ret
push
js
in
jno
push
faddl
push
jg
inc
adc
scas
xor
cmp
std
cmp
leave
in
push
outsb
jg
fnsave
xor
mov
mov
dec
mov
xchg
dec
jecxz
ss
jg
mov
cs
fcomi
hlt
imul
push
add
lahf
push
or
add
mov
enter
push
lods
roll
jmp
pop
push
adc
rsqrtps
add
mov
shlb
sub
mov
mov
sub
push
sub
push
std
push
cli
sbb
xor
cmp
push
mov
mov
or
fnstcw
sbb
and
inc
lds
dec
nop
int
in
aas
add
and
push
leave
jp
movsb
insb
out
mov
push
test
and
in
shlb
mov
push
lret
fwait
pusha
je
leave
enter
mov
xchg
mov
out
push
xchg
jnp
filds
test
dec
les
mov
pop
mov
mov
mov
adc
or
mov
stos
les
xchg
fs
in
mov
sub
outsb
aaa
lods
adc
testb
repnz
mov
fs
xor
jmp
mov
test
inc
cmp
dec
xchg
add
in
in
lret
sbb
add
jge
out
sbb
mov
lock
mov
sbb
jmp
push
inc
vpshaw
loope
inc
jns
sbbb
or
mov
std
mov
fidivl
jle
mov
sbb
jns
loop
push
lea
sbb
cmp
std
ljmp
pusha
repnz
jne
xor
arpl
jecxz
int3
inc
fdivrp
imul
daa
xchg
pop
scas
mov
dec
loope
dec
jp
add
andl
pop
sub
mov
pop
test
negl
cltd
dec
sti
stc
dec
pop
cmp
jnp
popf
mov
cld
inc
add
js
jl
sbb
mov
pop
cli
xchg
lcall
sub
or
pop
outsb
add
dec
mov
mov
pushw
fbld
inc
cmp
push
or
xchg
push
icebp
cld
mov
lods
fldenv
jne
mov
jne
in
stc
das
xor
popa
sub
mov
sub
daa
xchg
out
aaa
adc
cltd
pop
loope
lods
sbb
loop
push
mov
imul
pop
adcb
mov
sub
xor
xchg
iret
cltd
jp
mov
mov
call
add
in
bound
outsb
mov
pop
enter
jg
jns
cmp
sti
mov
add
lahf
sbb
pop
pop
fst
sub
mov
out
sub
cmp
mov
xchg
ja
mov
jge
jnp
call
or
punpckhdq
lret
ret
scas
rcrb
mov
sahf
test
pop
aas
push
mov
mov
adc
adc
andb
or
sbb
cmp
outsl
stos
test
insb
cmp
sub
aaa
push
sbb
pop
mov
out
push
aaa
setbe
ret
adc
or
sbb
or
or
and
dec
push
lcall
pop
and
xor
mov
dec
call
jl
orl
pusha
push
sbb
mov
repz
fldcw
mov
mov
in
mov
jmp
dec
mov
lods
movsb
jns
imul
sti
sti
insb
xor
cmp
push
int3
das
dec
addl
push
outsb
lea
hlt
xchg
mov
out
mov
push
cmp
nop
int
loopne
in
cmp
jo
lahf
mov
repz
enter
xor
rclb
aaa
test
dec
cmp
and
scas
pop
jl
pop
ds
insb
rorb
movsl
mov
pop
in
popa
jl
test
adc
jp
add
fdivrs
out
test
cli
call
mov
xchg
xchg
or
out
xor
add
adc
or
lods
mov
push
cld
lcall
cmpsl
fisttps
add
push
push
sub
shrl
fimull
inc
xor
popa
sbb
mov
cmp
shr
lahf
sub
faddl
xchg
call
sub
cwtl
jge
add
sbb
jmp
and
ficoml
dec
test
enter
mov
jo
leave
sub
fxch
test
xor
pop
js
ret
into
aam
pop
pop
cmc
ss
mov
aam
andb
inc
xor
pop
inc
mov
clc
or
xchg
arpl
mov
xchg
in
xor
xchg
stos
or
sbbl
fcomps
out
ret
lods
cmp
dec
fdivp
jo
add
dec
sub
decb
fs
outsb
imul
and
pop
hlt
cwtl
cmp
inc
aam
push
jns
stos
push
adc
or
loope
repz
push
push
cli
fmull
mov
fdiv
lods
adc
xchg
sbb
ss
xchg
lea
movsb
test
mov
cmp
popf
adc
lock
jno
data16
push
push
mov
rclb
gs
push
pusha
adc
push
cmp
cltd
aam
adc
loope
aas
ficoms
lock
cmp
xchg
jmp
inc
fistpl
clc
inc
push
sahf
cltd
mov
leave
repnz
xor
movsb
mov
push
jl
push
ret
mov
aam
les
or
aam
jmp
add
scas
gs
xchg
arpl
mov
cmp
movl
ret
fwait
rorl
xchg
decl
push
push
or
push
je
push
push
pop
lahf
loop
je
faddl
sub
pop
out
mov
repz
dec
cmp
mov
add
roll
dec
sbb
movsl
sbb
pop
dec
jmp
shlb
inc
or
pop
add
mov
jg
cmp
shl
xchg
xchg
xchg
mov
sbb
enter
dec
mov
push
and
in
jnp,pn
mov
xor
jae
push
and
loope
imul
push
jecxz
cmp
lods
cmp
fucomp
decl
out
or
mov
xchg
xlat
fnstsw
push
lods
cmp
add
stc
repz
lret
jae
push
and
in
inc
pop
cmpsb
insl
or
xchg
sbb
inc
fidivs
dec
lock
subb
lret
mov
leave
sub
aas
mov
pop
jns
cs
push
dec
scas
inc
ja
dec
mov
pop
adc
js
sub
jbe
repz
sub
imul
sub
mov
lock
pop
pop
cmpsb
mov
pop
test
pop
in
push
sbb
cmp
sub
pop
scas
xor
sti
dec
xchg
sub
pop
incb
enter
nop
out
cmpsb
into
in
aam
out
pop
iret
cmc
hlt
xchg
jb
ret
adc
push
xor
fisubl
or
insl
int
mov
mov
xchg
insb
sarl
pop
fs
jmp
cmp
fldz
int
sub
jecxz
ret
pop
add
mov
testb
stos
sub
fimuls
mov
xchg
fmul
dec
rcrb
nop
sub
adc
mov
ss
in
insl
jb
aam
dec
mov
adc
cmp
lahf
xchg
cmp
leave
pop
fsubs
int3
stos
xchg
sub
push
mov
repz
push
insb
jmp
imul
pop
and
sub
inc
sbb
adc
fnop
sar
lahf
loope
in
xor
mov
fmull
leave
subb
mov
enter
or
adc
and
icebp
and
leave
add
out
inc
stos
xor
aad
inc
inc
lcall
aas
loop
pop
mov
or
mov
sbb
pop
cwtl
ds
sub
dec
setnp
negb
int3
bound
test
sahf
xchg
mov
ret
xchg
clc
mov
mov
stos
adc
pop
xlat
push
push
lock
popf
pop
add
fnstenv
xchg
lret
sub
ss
out
xchg
shlb
sub
stc
pop
and
adc
sub
pop
xor
popf
jbe
in
mov
jge
shl
pusha
out
repz
daa
sbb
stos
sbb
adc
les
jp
push
call
fcoms
std
push
rcll
je
mov
pop
in
push
mov
push
cmp
out
in
sbb
adc
in
push
scas
pop
inc
cs
mov
pop
mov
push
push
ljmp
jecxz
xorb
pusha
cmc
pop
je
js
pop
dec
aad
mov
push
jmp
add
xor
test
out
mov
mov
jmp
repnz
jmp
fadd
scas
lret
xor
ret
jae
movsb
es
sbb
shll
shll
xor
stos
sub
ret
or
mov
dec
ds
out
mov
fldt
mov
test
jl
aaa
daa
int3
stos
cmp
cmp
loopne
jns
insb
pop
inc
fcompl
sbb
daa
sub
adcb
inc
int
mov
cmp
or
sbb
aam
dec
jmp
rep
pop
dec
stos
and
mov
mov
lea
repz
cmc
inc
dec
adcl
nop
jne
daa
mov
push
ret
jo
jo
cmp
fldenv
ljmp
sub
mov
icebp
adc
cltd
jl
xchg
lods
xor
push
jp
les
sbb
dec
dec
sbb
jp
test
fnstsw
enter
nop
aad
aam
leave
sahf
push
jns
cwtl
xchg
pop
jecxz
mov
push
daa
fisttps
pop
pusha
mov
nop
add
and
out
outsb
mov
ret
dec
xor
sbb
cld
rol
xlat
fs
and
scas
pop
push
cmp
inc
cwtl
std
mov
shll
cltd
fsubrl
add
xor
fcoms
dec
pop
fidivl
mov
sub
dec
dec
adc
mov
sbbb
fld
push
xchg
cs
mov
insl
test
jae
icebp
repnz
movsb
pop
iret
shrl
xchg
and
and
and
sahf
dec
mov
or
shrl
cmp
pop
lods
xor
sub
mov
sub
add
xor
fwait
popa
cwtl
push
or
pop
pop
leave
data16
and
mov
inc
sub
sub
pop
xlat
jmp
and
push
and
dec
mov
mov
mov
cmp
lahf
imul
bound
lea
add
push
xor
inc
mov
sub
aam
push
cmp
insl
mov
fimull
lea
cmp
jecxz
shll
push
jo
setle
push
xchg
jmp
add
cmp
xchg
out
inc
xchg
pusha
pop
sbb
jno
into
in
pop
add
xor
dec
mov
xor
add
scas
cmpl
dec
call
cmp
in
jp
dec
rcll
jecxz
into
outsl
mov
sub
xor
and
dec
out
ret
pop
cmpsb
xor
sbb
repz
stos
insb
mov
lcall
mov
data16
lods
iret
sarb
mov
inc
pop
add
mov
in
pop
cltd
mov
or
enter
lods
adc
sub
xchg
insl
xchg
jo
jge
ret
push
cli
jg
inc
inc
leave
sub
enter
dec
movb
sub
cmp
push
and
sub
add
sbb
jmp
or
fcmovnu
stos
cmp
mov
dec
mov
lret
inc
fists
mov
stos
and
outsl
dec
or
add
mov
daa
nop
loop
dec
das
mov
rcr
sbb
cmp
xor
lret
or
jnp
fdivl
outsb
popf
sbb
mov
and
xchg
shl
lods
xchg
daa
mov
xor
jne
cmp
inc
jmp
xchg
push
mov
nop
mov
jl
bound
adc
int
aaa
inc
fbld
xor
data16
add
insb
dec
pop
shll
nop
dec
fisttpl
push
cmp
lods
jp
jmp
aad
mov
popf
in
fcoml
mov
movsl
or
pop
scas
push
jle
adc
jbe
int
xchg
dec
push
mov
dec
xchg
loop
pop
in
jmp
jae
outsl
pop
mov
xchg
adc
mov
test
jl
push
lds
ljmp
out
xchg
and
fsubrs
sbb
mov
aaa
std
frstor
aaa
and
roll
aas
or
aas
repz
loop
mov
cli
sarl
popa
xchg
xor
xchg
cld
ret
int3
jp
mov
mov
jl
lahf
mov
jne
xor
lret
daa
cs
stos
fisubrl
movsb
test
lret
push
jne
cmc
sbb
inc
jp
dec
adcb
das
lods
shl
xor
inc
es
sub
enter
test
mov
pop
fldl
cmp
js
divb
dec
cmp
out
mov
aam
add
inc
pop
retw
xchg
push
cmp
imul
cmp
cmp
nop
shlb
or
mov
cmpsb
mov
cs
dec
push
into
cltd
dec
lods
ss
lods
imul
dec
lcall
sub
and
xchg
insl
idivb
scas
and
out
cltd
test
scas
adc
in
xchg
pop
in
jb
ljmp
sarb
mov
dec
pop
jo
or
jp
js
push
lods
xor
adc
mov
mov
stc
in
cli
out
aaa
outsb
adc
ljmp
xchg
int
rcll
fwait
xchg
call
loope
out
pop
jae
dec
fistps
mov
aas
and
xchg
cld
sub
cmpsb
ljmp
xlat
aaa
ret
in
aas
stc
jg
xor
dec
loope
rcrb
sub
lahf
mov
xchg
inc
pop
and
jb
ljmp
int
jmp
pop
decb
lret
hlt
mov
out
add
clc
call
and
ss
notb
int3
stos
punpcklbw
sub
aam
add
std
int3
clc
ret
fldl
daa
cltd
daa
or
cmp
adc
cwtl
and
mov
call
cmp
aad
mov
pusha
jge
sub
pop
inc
cmp
hlt
or
pop
popf
cmp
arpl
sub
or
jns
push
fmull
icebp
je
mov
je
fistpll
lods
ljmp
test
fdivl
mov
cmp
mov
push
out
mov
or
orb
xor
cltd
out
daa
ljmp
inc
pop
pop
aam
orb
sbb
lock
sar
and
movsb
inc
clc
scas
mov
rcll
pop
sbb
in
dec
push
insl
enter
adc
mov
or
ror
xchg
pop
sbb
inc
ret
cmp
jbe
es
and
lods
loop
ja
cmp
cmp
hlt
or
mov
into
movsb
pop
enter
pop
add
mov
add
outsb
jbe
decb
repz
loope
cltd
pop
cmpsb
or
testl
icebp
call
imul
call
lods
aam
lret
mov
scas
je
push
mov
ficoml
adc
ds
je
imul
pushf
repz
or
data16
or
dec
xchg
adc
mov
sbb
test
jle
ret
mov
lods
pop
inc
jmp
mov
adc
subl
leave
inc
test
xor
stos
cmp
lret
in
push
xor
jno
mov
pop
nop
or
insb
mulb
mov
sti
cltd
outsb
cmp
mov
dec
dec
push
outsb
adc
push
mov
jecxz
fwait
inc
test
stos
inc
test
xor
cmc
out
adc
pop
xchg
pop
jno
ret
repz
lock
fiaddl
inc
dec
xlat
dec
iret
push
stos
add
sbb
mov
fildl
xor
jmp
inc
lahf
lods
mov
enter
dec
or
popf
iret
mov
and
rcl
pop
cltd
and
jo
mov
sub
jbe
lret
fs
popa
js
jl
push
push
pop
mov
and
enter
push
movsb
xchg
xchg
sub
or
mov
mov
adc
les
inc
ss
std
sub
test
mov
adc
sbb
inc
popa
dec
lret
aam
in
push
sub
cmp
mov
pusha
or
test
ret
push
inc
addr16
popf
pop
clc
rcrl
mulb
mov
adc
mov
jg
pop
push
je
adcb
adc
jp
mov
push
sub
test
incl
aaa
pop
mov
mov
cmp
push
inc
adc
jo
leave
or
ret
cmp
sbb
fmull
cmpsl
mov
ror
jne
mov
ficoml
sbb
cmp
jbe
int
jmp
movsb
fdivrl
icebp
xor
inc
pop
lret
push
cmp
or
test
in
test
mov
and
fcompl
adc
insl
mov
movsb
add
xchg
adc
adc
imul
jne
push
aas
cld
inc
divl
xor
out
mov
mov
jp
repnz
and
ficoms
sbb
inc
fists
inc
sub
xchg
fadds
dec
xchg
es
fistl
mov
or
or
ja
mov
arpl
jmp
cmp
push
imul
out
sbb
sub
imul
mov
movsl
xor
daa
xchg
fmul
sub
js
call
push
cs
call
flds
mov
xchg
and
cmp
add
or
popf
mov
xlat
cmp
ret
lahf
dec
leave
mov
add
xchg
cmp
pop
pop
and
ljmp
arpl
insl
in
psubq
loope
stc
push
and
rcrb
cmp
movsl
push
push
mov
pop
xchg
and
cltd
into
mov
dec
mov
jbe,pn
insl
shlb
out
test
adc
loop
clc
rol
mov
flds
xlat
mov
or
jge
pop
pop
mov
cmpsl
cmp
dec
push
dec
jbe
ja
xor
or
and
mov
and
imul
loope
inc
sbb
aad
and
insb
jl
xchg
jecxz
add
ror
cs
loope
xor
pop
jmp
movsb
clc
lods
cmpsl
cmp
push
std
imul
push
xor
pop
iret
daa
sub
hlt
or
inc
mov
push
lret
adc
jle
ja
inc
xorb
ds
push
ja
ficoml
add
pop
mov
add
pop
movsb
scas
xor
cmp
and
in
xchg
aad
loop
gs
jg
push
loopne
mov
xchg
sbb
push
dec
or
mov
xor
xchg
mov
cmp
mov
imul
mov
dec
and
rcl
call
in
mov
clc
icebp
adc
xchg
jecxz
popa
mov
push
xchg
insb
mov
xlat
cmp
mov
push
dec
jne
test
sbb
mov
lock
xchg
mov
sub
gs
fistl
and
xor
jecxz
push
popf
mov
cltd
jg
js
ret
div
xchg
sub
movsl
adc
rcll
sbb
push
inc
insb
icebp
adc
xchg
gs
sbb
lahf
dec
cmp
mov
lret
mov
aad
lods
cwtl
jecxz
shrb
mov
fcompl
dec
outsb
stos
jge
in
jne
lcall
cmp
or
into
aam
jle
adc
mov
ljmp
cmp
cwtl
outsl
dec
je
xor
insb
sahf
sbb
add
jbe
out
and
sti
pop
jno
fildll
mov
or
adc
xchg
aam
push
es
aam
sti
cmpb
repz
out
mov
mov
in
into
es
jno
sbb
repnz
inc
pop
mov
addl
inc
or
pop
cmp
into
mov
xchg
jle
setae
push
sbb
sub
mov
sub
leave
jb
nop
inc
cwtl
push
pop
xchg
stc
fbld
les
ret
fldl
mov
push
aaa
inc
in
stos
mov
dec
jmp
mov
cmp
mov
ret
sahf
xchg
mov
adc
cmpb
fmull
bound
lcall
dec
pop
jecxz
into
stc
mov
lods
das
sahf
xchg
arpl
scas
xchg
mov
xchg
lods
sub
mov
test
rcll
mov
or
iret
jnp
pop
test
lock
cmp
popf
in
imull
out
or
push
stc
cmp
leave
test
pop
shl
loop
fmuls
dec
jb
popa
insb
lret
push
fisubrl
mov
fistl
xchg
and
sbb
mov
popa
push
subl
sub
fidivrl
add
xor
sbb
sbb
out
test
dec
cmc
mov
jl
cli
imul
dec
inc
sub
imul
test
lret
jno
fdivrs
bound
dec
outsl
pop
mov
sbb
loop
shll
js
loope
add
call
add
icebp
inc
or
std
rorl
mov
jno
cmpsl
enter
sub
stos
addr16
add
test
xchg
pop
lahf
dec
popf
dec
cltd
xchg
std
ja
mov
add
xor
out
pop
push
add
imul
sbbl
push
out
add
pop
cs
mov
nop
dec
mov
bnd
data16
dec
stos
or
out
pop
sub
xor
mov
imul
and
dec
mov
int
or
shll
dec
jge
popl
iret
loop
test
jo
push
push
pusha
cmpsl
inc
cmc
mov
rclb
xchg
push
stos
xchg
xor
mov
addr16
or
pop
inc
outsb
sbb
mov
adc
sbb
mov
lods
xor
popf
dec
xor
movsb
pop
lods
testb
xchg
outsb
into
jle
int
xchg
mov
insb
xchg
cmp
aaa
ds
xor
out
cwtl
mov
sub
gs
call
std
push
mov
mov
sti
xchg
fnstcw
cmp
push
int
fs
push
andl
dec
push
and
and
adc
mov
outsb
repz
repz
test
lea
add
pop
xchg
jecxz
lods
or
shrl
and
lock
fcompl
jle
cmpsl
inc
and
idiv
lret
outsl
add
sub
and
pop
movb
stc
jmp
push
push
xor
dec
inc
pop
pop
es
js
lock
and
aaa
mov
ret
stc
gs
jbe
adc
outsb
addr16
sahf
nop
jg
aaa
stos
lea
fistps
pop
or
push
lahf
jge
jmp
out
cmc
jo
aad
insl
fwait
shl
jmp
add
mov
mov
jl
pop
loopne
adc
rorb
sbb
int3
rcll
push
pop
aam
enter
pop
cmc
jnp
test
jno
cltd
pop
adc
std
dec
xchg
sbb
xor
add
fists
rorl
ljmp
in
lret
fildll
jb
cmp
sahf
lds
lods
or
insb
fistpll
and
sub
ss
jno
mov
inc
cmp
ret
arpl
mov
push
mov
jb
mov
lock
xchg
addb
dec
jl
xchg
or
dec
mov
push
inc
aam
imul
sub
lret
mov
sub
jno
lods
push
and
push
into
add
dec
cmpsb
push
xor
mov
mov
scas
imul
jmp
cmpsl
shl
fucomip
mov
add
addr16
popa
xchg
fldcw
stc
pop
sbb
int
cmp
mov
mov
in
push
fildl
scas
out
push
arpl
pop
mov
stc
hlt
std
movsb
push
mov
sti
loopne
push
cmp
cs
mov
cmp
out
mov
jmp
imul
and
fimull
jnp
fildll
outsl
lret
xchg
test
fbld
cs
das
xchg
xchg
and
in
xchg
bnd
data16
nop
jle
jns
xchg
and
mov
and
sarl
push
int
les
dec
in
lret
pop
and
push
sub
je
inc
push
xor
lea
jno
out
imul
sbb
or
out
adc
cmpsl
filds
cmpsb
addb
dec
or
aas
sub
cmp
push
loop
fildl
je
dec
xchg
popf
rcll
aad
xchg
jb
lock
sub
sbb
jg
sbb
lods
jae
pop
jne,pn
jmp
inc
bound
ss
lea
repnz
test
fwait
and
cwtl
cmp
cmpsl
leave
mov
push
fdiv
out
lcall
xor
stos
add
inc
sti
dec
mov
push
jg
mov
jecxz
sub
mov
cmp
xor
jle
ja
mov
cmc
pop
cmpsl
in
mov
sbb
push
jle
or
push
dec
dec
inc
mov
mov
leave
movsl
repnz
stos
test
xor
test
sar
jge
ret
scas
xchg
jnp
inc
pop
mov
stos
adc
pushf
cltd
xor
popa
es
ljmp
mov
fmull
das
cmp
ret
xchg
stc
mov
sahf
mov
adc
mov
xor
ror
pop
sub
imul
push
test
mov
movsl
sub
ret
insb
xchg
or
or
pop
shl
cld
inc
mov
push
and
inc
cld
pusha
dec
dec
push
imul
mov
stc
pop
inc
int
xor
jbe
or
pop
jecxz
xor
xor
lds
gs
in
gs
or
sub
arpl
gs
push
xchg
or
xchg
loop
lcall
fimull
pushf
mov
insb
cli
mov
or
adc
add
fs
jecxz
ds
dec
pusha
mov
xor
cmp
xor
shl
cli
fwait
out
jae
fs
sub
and
lods
mov
sbb
popf
jmp
repnz
roll
aad
dec
ret
jmp
jecxz
or
sub
xchg
cmpb
popf
stos
mov
dec
je
pop
ljmp
scas
jp
stos
xchg
jp
out
adc
cmp
xchg
push
add
mov
loop
fdivrp
movsl
pop
aaa
sbb
push
je
aam
jp
or
fisubs
dec
or
ret
or
sbb
lods
pop
dec
pop
adc
dec
aaa
or
cmp
cmp
dec
and
lock
inc
xor
jnp
sub
inc
je
jl
sub
pop
repnz
ficoml
loop
jle
mov
jl
xor
pop
or
mov
rcl
test
push
pop
and
pop
add
sub
mov
inc
mov
lahf
mov
and
icebp
mov
add
ds
mov
leave
dec
pop
mov
mov
ficoms
mov
adc
aaa
xlat
repnz
cmc
mov
addb
pop
in
loop
xorb
movsb
clc
inc
enter
fs
mov
push
jecxz
inc
push
cld
dec
xorl
fdivl
andb
sbb
add
xchg
push
xchg
xchg
add
or
jle
std
cmpsl
jmp
xor
adc
push
int
xlat
xchg
xor
es
lods
jnp
fdivrl
xor
or
fistpll
cmp
mov
push
xchg
push
or
push
xchg
arpl
imul
mov
mov
sbb
icebp
xor
cmp
dec
dec
ja
jb
shrb
stos
jecxz
jmp
test
movsl
cld
push
sahf
scas
or
xchg
xchg
inc
pop
into
or
ds
incl
jle
js
mov
and
xchg
cmpsl
inc
xor
test
aas
inc
pop
and
out
sbb
addr16
sbb
cmp
fistpl
repz
iret
or
lret
mov
dec
loopne
repnz
shl
and
fwait
mov
inc
cmp
fstps
icebp
daa
mov
shl
dec
xor
inc
xor
repz
les
sub
pop
aas
mov
lods
cmp
mov
out
outsb
movsb
jg
cs
stos
inc
les
cmc
pusha
cmpsb
int3
in
repnz
pushf
sti
std
adc
movsl
call
ds
jns
ljmp
mov
leave
adc
stos
sbb
xlat
call
pop
jno
loopne
imul
pop
js
subl
cld
mov
loope
jo
jb
scas
mov
adc
fidivl
cmpsl
xchg
add
jb
mov
push
insl
xchg
jl
enter
idiv
ffree
pushf
rcrb
push
jmp
pop
dec
and
dec
test
add
inc
pop
mov
das
mov
mov
adc
out
add
fisubl
sbb
inc
jno
arpl
xchg
mov
jnp
outsb
fmuls
adc
inc
push
adc
in
sbb
xor
inc
sti
addr16
popf
xchg
movsl
cli
jne
andb
xchg
jp
add
insl
inc
jo
test
mov
and
dec
or
add
aaa
mov
dec
adc
lret
and
and
pusha
mov
call
lret
sub
or
pop
mov
fnstenv
jo
pop
leave
sbb
repz
insl
adc
mov
mov
and
xor
mov
and
mov
mov
xor
outsb
out
sbb
push
xchg
das
out
data16
nop
pop
xchg
mov
add
test
add
popf
mov
iret
pop
loop
fwait
mov
push
addr16
push
sub
jg
out
xor
inc
jmp
aad
xchg
adc
push
cmpsl
cmpb
mov
xor
push
fwait
movsl
dec
nop
inc
lcall
pop
xchg
mov
jnp
ss
adc
cmp
enter
jnp
jbe
dec
lods
test
lds
std
jae
jmp
lcall
xor
repnz
test
push
fsts
mov
lret
loopne
mov
mov
hlt
aad
in
xchg
inc
mov
daa
xor
xor
test
adc
ja
test
lret
andl
mov
dec
xor
cli
pop
xchg
out
sbb
das
and
outsl
cmp
nop
jl
fmulp
pop
stos
out
lret
lret
in
adc
rorb
sub
inc
call
out
std
out
push
and
out
test
dec
xchg
sub
and
loope
sahf
jbe
and
mov
cmpsb
cmp
or
ficoml
fistpll
add
testb
ret
out
jne
adc
dec
and
ret
lea
dec
push
adc
dec
gs
xor
es
xorb
add
mov
aaa
inc
or
outsl
pop
sub
test
mov
jne
add
lcall
fldenv
pop
daa
cmpsb
xlat
aaa
dec
xchg
pop
mov
mov
stc
or
test
mov
hlt
push
fidivrs
mov
jae
mov
cmp
icebp
xchg
rcll
lds
push
xchg
mov
outsl
in
in
mov
xor
mov
cmp
mov
pop
icebp
and
repz
std
lret
daa
fwait
or
adc
sbb
loop
xor
repz
or
xchg
add
xchg
loopne
mov
mov
sahf
sub
dec
sub
shrl
mov
cld
mov
clc
jge
into
cmpsl
adc
mov
faddl
incb
inc
rorb
orb
pop
or
pop
roll
pop
or
sub
mov
ss
call
test
stos
daa
imul
mov
rolb
lcall
cli
pop
sub
fwait
adc
data16
push
sti
inc
cwtl
cmp
mov
push
push
ret
pop
jl
jae
aam
pushf
bound
fmul
sarb
add
mov
lods
rclb
mov
dec
test
push
outsb
mov
lods
add
in
push
scas
std
mov
pop
push
cmp
push
mov
repz
xlat
xor
inc
xchg
mov
ret
xor
stos
pop
mov
ret
aad
mov
push
pop
cmc
cmp
pop
add
jle
icebp
and
je
xor
dec
les
adc
jne
mulb
fistpl
popf
jmp
adc
mov
ds
movsl
mov
add
xor
push
ja
pop
movsb
in
cli
xor
mov
aaa
xor
sti
mov
fisubs
push
testb
mul
stos
pop
lcall
cmp
sub
shrb
popf
push
nop
xchg
fldenv
iret
mulb
or
dec
fisttpll
aad
xchg
xchg
fwait
nop
pop
push
xchg
outsl
rcrl
xor
lahf
dec
push
cld
fwait
jae
aad
xchg
ds
sbb
mov
repz
fdivrl
fdivr
inc
or
mov
mov
out
insb
dec
mov
mov
adc
xorb
dec
or
nopl
xor
pop
push
inc
cmpsl
sub
jge
int3
pushf
sub
stos
mov
cltd
mov
outsl
stos
push
add
xor
pusha
or
loop
pop
ljmp
jmp
call
lea
adc
adc
insl
mov
fs
jle
loope
push
and
pushf
xor
dec
fcom
adc
mov
test
pop
push
rorb
scas
or
mov
iret
cwtl
loopne
xor
ljmp
adc
mov
add
adc
sbb
out
fdivr
pushf
mov
lahf
lret
xor
cmp
or
sbbl
jno
and
call
lea
cmp
in
or
divb
stos
adc
les
sbb
out
jae
ret
repnz
jl
aaa
pop
push
sti
add
dec
xchg
dec
xchg
pop
popf
test
add
cmc
sbb
cmpsb
mov
and
cli
dec
mov
dec
scas
addb
shl
xor
jo
daa
adc
movsl
mov
ja
cmp
push
push
push
lea
xor
ljmp
mov
dec
dec
dec
rolb
in
fisubs
mov
and
pop
cli
cmpb
ret
shrl
shlb
add
cld
sub
out
mov
cli
mov
sbb
cmpsl
les
loope
mov
mov
lods
nop
shrb
fwait
cmp
cmp
inc
insl
xchg
xchg
int3
or
dec
pop
popf
pop
mov
cmp
fwait
mov
push
mov
inc
pop
sub
adc
jl
arpl
mov
pop
lds
and
adc
jl
pop
pop
in
xchg
cmp
xchg
mov
cmp
dec
call
sbb
push
insb
and
pusha
add
push
sub
sbb
pusha
movsl
sbb
fisttpl
xor
loope
mov
sub
adc
jp
jns
dec
jecxz
cmpsl
push
push
daa
lahf
addb
rclb
imul
fidivs
les
out
movsb
jo
sahf
icebp
jnp
add
out
xchg
sbb
std
add
addr16
lods
outsb
push
jae
xchg
inc
test
xchg
mov
shl
mov
imull
stos
pop
popw
out
out
in
mov
adc
jp
sahf
mov
add
enter
lea
in
test
xchg
inc
xchg
imul
rcl
inc
cmp
out
int3
inc
scas
sti
arpl
mov
pop
cmp
mov
sbb
inc
jle
jae
sbb
jns
jp
dec
gs
lgs
lods
inc
and
insl
lds
and
inc
inc
and
add
pmuludq
enter
rclb
rorb
and
inc
pop
popl
test
imul
mov
shl
pop
out
sub
mov
sub
xor
sbb
daa
mov
into
in
js
jmp
jae
push
jne
fcoms
or
dec
jno
inc
mov
aaa
xchg
fdivrs
pop
jb
xor
dec
fdivrs
fsubrs
hlt
push
lds
pop
movsl
xchg
jne
adc
push
pusha
mov
iret
jno
out
mov
sub
sbb
dec
sbb
or
pop
ss
lods
stos
into
and
push
imull
dec
jb
xchg
xchg
inc
fdivr
pusha
xchg
fwait
xor
jmp
mov
mov
lea
push
cmc
sub
jne
ds
int
outsb
xlat
cs
adc
scas
jb
pushf
or
rorl
jp
pushf
jne
icebp
push
stos
pop
ss
xchg
int
pop
xor
mov
icebp
in
hlt
cmpsb
cmp
jno
subl
test
jne
mov
iret
mov
cli
test
sbb
fadds
cmpl
or
popa
into
imulb
fiaddl
cwtl
rorl
lods
add
fldl
push
dec
or
subl
cld
mov
les
popf
popa
ljmp
pop
stos
push
add
ss
sub
adc
lock
insl
sbb
repnz
fcoms
lds
call
iret
aas
clc
mov
shl
sahf
shrb
xchg
and
subb
xor
mov
adc
rcrl
dec
inc
dec
cmp
int
cmpsl
xchg
lds
ja
mov
out
or
test
add
loope
mulb
inc
fcoml
pop
pop
lds
hlt
sub
ds
sahf
mulb
jle
dec
jns
subl
call
lcall
cmp
jno
fwait
ja
xor
and
mov
test
lea
adc
fidivrs
add
push
sbb
add
lds
xchg
push
mov
gs
daa
decl
lds
cld
shlb
push
inc
pop
jg
jno
push
xchg
ret
movsl
xor
cmp
mov
adc
insb
xor
add
jo
icebp
arpl
cmpsl
push
mov
add
dec
popa
adcb
mov
fwait
cli
out
addr16
push
sub
mov
mov
xor
test
inc
out
adc
pop
cwtl
pop
divb
orb
ja
mov
push
outsb
push
sbb
in
cwtl
shrd
adc
roll
push
xchg
and
adc
arpl
adc
dec
jbe
addr16
sub
sbb
bound
into
in
fs
sbb
rorl
lret
int3
in
sub
jmp
hlt
xchg
dec
sub
sbb
xchg
cmp
push
insb
pop
pop
stc
pop
stc
cmpb
jns
xchg
std
andb
stos
push
pop
mov
ja
fmul
jno
sbb
jnp
in
into
icebp
pop
pop
xchg
cld
std
iret
stc
mov
scas
or
aas
xor
lcall
lods
sbb
dec
jmp
repz
lcall
or
inc
or
mov
sahf
popa
adc
jbe
lret
inc
data16
arpl
push
clc
rcrl
es
out
pop
clc
std
jl
call
cmp
inc
repz
pop
imul
xchg
andb
pop
lds
ret
pusha
popa
ret
in
push
inc
rcrb
mov
fists
dec
fdivrl
xor
pop
leave
lds
adc
inc
and
jns
mov
mov
xchg
call
mov
mov
push
mov
inc
or
nop
pop
xor
jno
inc
add
push
insw
int3
mov
mov
fs
ds
xchg
mov
mov
pop
add
mov
aas
outsl
fstp
fiaddl
jnp
xchg
cmp
dec
lods
dec
movb
and
xorl
shll
mov
rorl
push
xor
out
popa
pop
mov
xchg
dec
push
sub
mov
pushf
scas
xchg
mov
pop
xchg
repz
aad
jg
sbb
pop
lcall
fidivrs
ret
arpl
lods
icebp
jbe
jecxz
lret
push
and
dec
adc
mov
and
pop
stos
out
pop
jp
xchg
push
lahf
lods
or
xchg
daa
leave
cli
cmpb
das
mov
push
shrb
pop
scas
or
sarb
mov
loope
jne
jmp
xchg
mov
mov
and
push
push
mov
sbb
loopne
sbb
stc
mov
jge
inc
jnp
pop
xor
inc
mov
or
cmp
sub
std
test
popf
mov
scas
rcrl
aas
xchg
int
jbe
and
ja
mov
stos
push
adc
in
xchg
dec
stc
xor
int3
or
out
pop
es
fxtract
or
ds
push
icebp
jo
bound
into
lock
mov
mov
aaa
sub
fistl
int
popa
push
imul
arpl
clc
clc
jmp
lret
jle
sbb
push
loopne
sar
mov
push
cwtl
push
fidivrs
adc
jl
xlat
or
dec
cmp
loope
iret
rcr
cmpsb
stos
push
imul
out
mov
outsb
fmuls
lods
mov
cmpsl
jecxz
sub
es
ret
aam
add
rorb
test
jg
stos
or
jge
repnz
lods
ja
out
insl
imul
cs
mov
sbb
scas
add
imul
xor
dec
out
stos
adc
popf
nop
addb
lods
pop
mov
and
sub
imul
iret
and
jns
xchg
inc
mov
push
pop
xchg
out
testl
push
and
adc
xchg
aam
cmpsl
rcrb
clc
daa
ret
fsubrs
or
push
call
jp
sub
nop
clc
lods
popa
push
mov
in
leave
cmp
stc
add
into
ret
out
pop
js
push
mov
adc
or
out
iret
cmpsl
inc
addr16
scas
push
mov
gs
cld
loope
lds
sub
mov
loop
ret
sti
mov
sub
pop
outsb
pop
ret
sbb
cmp
cld
popa
mov
pop
gs
test
cmp
mov
ljmp
xor
clc
xchg
pop
out
add
movsl
sbb
imul
sarl
repnz
popa
ss
xchg
andl
mov
sbb
xor
push
lea
hlt
repz
test
cmc
dec
inc
adc
jnp
push
jno
loop
std
pop
cmpl
daa
jnp
or
or
adc
lret
imul
jmp
fsubrl
scas
adc
push
ret
inc
adc
pop
and
jne
push
sbb
xchg
in
daa
cmp
pop
and
es
jo
inc
mov
sub
je
pop
cmp
dec
aas
mov
add
fsubr
lods
cmp
int
cwtl
add
xchg
scas
or
lods
mov
push
xor
rcrl
pushf
push
out
jo
imul
rol
jbe
inc
mov
push
lods
jmp
arpl
mov
stos
fisubrl
inc
mov
pop
pop
dec
cmpb
adc
aad
sahf
rclb
imul
xchg
les
lea
jb
dec
adc
sub
xchg
dec
lahf
adc
loopne
mov
int3
xchg
xchg
sahf
and
mov
cmp
cmp
fstps
inc
push
bound
inc
daa
mov
nop
mov
mov
jg
add
mulb
xor
sbb
add
push
repz
mov
pusha
mov
arpl
xor
or
inc
rol
mov
out
ficompl
xchg
movsl
aam
fsubl
pop
shll
xchg
das
inc
push
jb
icebp
out
lock
mov
rclb
fwait
mov
dec
dec
movsl
testb
pop
adc
pushf
cmp
mov
cmp
imul
loop
mov
and
incb
je
into
jp
pop
enter
and
cmp
iret
sbb
pusha
scas
add
aad
mov
push
fisubl
cmp
or
xor
mov
mov
mov
pushf
cmp
jp
pop
or
pushf
mov
loopne
cmp
pop
sub
cmpb
aaa
xor
mov
fsubrs
out
jg
idivl
mov
xchg
mov
inc
add
and
inc
mov
int
jne
fs
sbb
clc
jle
das
adc
xchg
fcmovnbe
daa
mov
jne
sub
add
sti
and
or
ret
fnstenv
push
sub
stc
cmp
or
pop
mov
shll
mov
out
fwait
sbb
dec
out
sub
or
mov
leave
repz
mov
inc
sbb
sti
sub
xchg
mov
les
cmc
fs
bnd
fadds
js
jbe
adc
mov
cmp
jnp
pop
push
test
cmp
cmp
xchg
andl
imul
xor
sti
mov
ss
sub
fs
rorl
push
hlt
mov
adc
pusha
mov
repz
push
or
jmp
clc
aas
jo,pn
and
mov
and
in
repz
mov
dec
mov
pop
xchg
or
cmpsl
imul
icebp
push
rcll
pop
or
push
outsl
in
xchg
mov
mov
lds
mov
cmp
into
cmp
xor
aam
add
movsl
sbb
cmp
pop
out
mov
and
into
add
mov
inc
enter
mov
xor
lret
push
jl
aam
dec
test
ss
sbbb
outsl
inc
cwtl
nop
mov
mov
loope
sbb
pop
das
xchg
out
mov
cmp
outsb
ljmp
cmp
mov
mov
movsb
jmp
aaa
addb
xchg
xchg
cmpsl
stos
push
test
cld
adc
add
in
dec
shlb
mov
aas
gs
jbe
inc
jge
jbe
sub
inc
in
pop
adc
scas
out
popf
sub
pushl
cmc
dec
xchg
fstl
mov
push
dec
fucomp
or
scas
fistps
sub
sarl
and
sub
lcall
inc
inc
xchg
sbb
arpl
jae
add
add
dec
int
in
push
adc
flds
adc
push
mov
xchg
adc
icebp
sbb
mov
cmp
sub
push
repz
mov
nop
stc
rcrb
dec
mov
dec
dec
add
fwait
pushf
lret
xlat
sub
mov
jmp
jp
rcrb
mov
or
gs
gs
aas
loopne
stos
cmp
adc
push
nop
mov
jge
push
jnp
push
movb
aaa
testb
test
adc
addr16
mov
shr
adc
in
loop
mov
push
lds
movsb
fadds
or
shrb
jne
es
ret
and
out
fildll
jne
cmp
cmp
cmp
call
outsb
shlb
cmp
pop
je
jae
into
adc
push
mov
pop
mov
outsl
leave
inc
leave
shlb
xchg
repnz
add
insb
scas
fdivrs
add
mov
insl
pop
hlt
add
out
sbb
clc
testl
sub
adc
cmovb
hlt
xchg
xlat
inc
pop
fidivrl
dec
cmp
add
push
mov
mov
jae
pusha
push
pop
pop
sub
out
in
movsb
mov
mov
mov
mov
sub
xchg
test
or
outsl
push
push
outsb
pop
pop
cmp
imul
cmpsl
cmp
inc
dec
outsl
sub
test
fsub
jecxz
fdivrs
sbb
ss
inc
sbb
cmp
fcoms
enter
ficoml
stc
pusha
adc
dec
push
dec
addr16
inc
mov
mov
lea
rcrb
xor
js
js
jns
icebp
sub
fildll
repz
dec
push
push
retw
test
jb
stos
sbb
clc
mov
and
xchg
cmp
adc
insl
push
movsl
push
mov
bound
jecxz
adc
mov
mov
xchg
add
add
xchg
xchg
cmc
cmp
out
push
aam
dec
stos
test
pop
ljmp
imul
mov
loop
bound
jbe
subl
addr16
ja
inc
jge
sbb
cs
pop
mov
mov
mov
js
add
cltd
mov
sub
sub
pop
dec
jl
pop
push
pop
fmuls
leave
jecxz
push
loop
or
lods
cs
clc
adc
push
mov
fldl
inc
cmp
or
imul
outsb
xor
notl
xor
fwait
xor
or
rcrb
fs
es
adc
mov
not
sbb
adc
enter
push
repz
dec
into
stc
iret
int3
imul
ds
insl
or
xor
and
push
outsl
jno
std
inc
pop
jae
and
cltd
ret
and
mov
int3
inc
mov
add
jae
test
ss
rorl
enter
mov
clc
in
arpl
cmp
pop
cmpsb
push
jae
xchg
and
fnsave
cltd
sub
sti
xor
cltd
mov
sbb
loopne
xchg
subl
lods
cwtl
sub
push
adc
repz
in
cwtl
cmp
gs
sbb
mov
enter
lret
or
jmp
inc
mov
cmp
sbb
rcr
add
and
cltd
pop
adc
pop
inc
sbb
fmul
je
xchg
notl
out
jbe
sbb
dec
cmp
bound
test
sub
int3
push
jmp
fucomp
mov
push
jbe
pusha
cmp
ja
xor
dec
lcall
cmp
add
pushf
js
imul
add
cmp
mov
inc
pop
aas
cmc
mov
mov
pop
clc
pop
jge
out
jnp
aaa
pop
scas
dec
cld
xchg
xchg
mov
mov
xchg
popl
outsl
add
ljmp
jmp
stos
sti
lea
lea
mov
std
mov
addr16
jne
push
add
stos
push
jns
jne
std
jmp
adc
scas
pop
jo
inc
in
imul
lock
xchg
lods
and
aaa
mov
adc
bound
adc
mov
sbb
pop
stc
adc
or
ret
cmp
and
hlt
dec
xchg
jbe
jb
fstpt
lea
cmp
mov
pop
jns
mov
lahf
fidivs
cwtl
pop
fdivrl
rcr
jae
dec
testl
js
jo
dec
and
test
sub
fldl
adc
inc
repnz
fsubrl
les
scas
das
dec
xchg
int
xchg
jmp
push
je
cmp
jl
int3
pop
and
pop
push
rorb
sub
roll
inc
xor
mov
pop
xor
fistpl
cmp
and
push
cmp
push
test
xor
xchg
ftst
mov
roll
in
and
fdivl
out
cs
jno
test
adc
sbb
and
jg
cmp
and
fld
xchg
call
pop
jbe
cmp
mov
adc
lahf
es
lods
cmp
adcl
dec
push
addr16
and
daa
loope
ds
icebp
sbb
sub
add
insb
icebp
add
sarl
push
jne
sub
addr16
ljmp
mov
push
ljmp
mov
pop
jno
and
and
jae
jp
sbb
lret
or
bswap
sub
aas
decb
clc
mov
mov
jae
or
push
test
mov
clc
cmp
dec
xor
push
ss
repnz
cmpsb
ret
xchg
mov
out
xchg
adc
dec
adc
jp
lods
adc
mov
adc
cmp
call
push
ds
shrb
and
xchg
das
xlat
pop
adc
rorl
jno
xor
hlt
cmp
push
adc
jnp
cmp
mov
cld
out
imul
scas
ror
cmp
sub
push
daa
inc
icebp
or
sub
sbb
pop
mov
movsb
or
adc
or
sbb
mov
sbb
adc
loope
xchg
pop
cmp
sbb
jle
je
xor
sbb
xchg
sub
mov
jns
and
xchg
inc
adc
sbb
and
in
add
inc
aas
push
roll
in
mov
mov
dec
push
pop
push
pop
inc
inc
xor
xlat
outsl
sbb
shlb
or
inc
mov
mov
loope
pop
xchg
mov
nop
pop
imul
shlb
popa
clc
lret
mov
sbb
sbb
addr16
sub
insb
xchg
and
cmp
shrl
rcll
lahf
repnz
adc
sub
push
mov
repz
dec
popf
loop
pop
dec
dec
sti
push
dec
es
xor
sbb
rorb
pop
ljmp
inc
dec
add
xchg
jne
sbb
push
sub
mov
cmpsl
scas
cmpb
clc
jae
add
fistpll
push
sbb
cs
nop
movsb
sbb
imul
arpl
in
das
aad
jne
mov
loopne
lds
or
push
imul
pop
adc
repnz
jb
fcmovb
fcompp
jmp
imul
pop
out
stos
dec
mov
les
or
adc
push
jnp
mov
inc
dec
lcall
mov
cs
clc
mov
bound
push
lods
ja
fisttpl
adc
lods
std
mov
inc
icebp
add
bound
imul
test
pop
add
in
dec
xchg
sbb
mov
mov
sub
dec
out
mov
push
push
repz
dec
in
or
cmc
inc
mov
out
xchg
pop
sub
push
push
lret
xor
jecxz
std
or
sbb
cmpsl
xchg
pop
fimull
push
daa
fcoml
aam
xor
push
movsb
int3
and
push
or
xchg
jg
dec
or
adc
pop
pmovmskb
arpl
push
popa
mov
jne
sub
scas
sbb
hlt
cmp
xchg
inc
push
jnp
ret
mov
sbb
push
in
lds
dec
xchg
jnp
in
mov
je
mov
xor
call
outsb
aad
arpl
jmp
out
fbld
cmpsb
imul
xchg
push
pusha
xor
movl
insl
test
mov
and
mov
add
fistpll
adc
or
xchg
cmp
mov
fwait
mov
push
movsl
test
test
mov
hlt
jb
dec
stos
pop
jl
ss
mov
aad
pop
ret
imul
pop
mov
pop
mov
jo
jb
das
cmp
xor
or
lds
mov
addr16
leave
jl
addl
jb
inc
ljmp
jbe,pn
std
sbb
jnp
ret
xor
adc
mov
cmp
ret
and
lcall
mov
cmpb
jp
adc
push
repnz
in
orb
pusha
aas
lock
outsb
add
outsl
ret
test
out
ja
jo
lcall
sub
dec
daa
cmpsl
xlat
fstpt
dec
imul
pop
ret
jbe
sub
fstl
pop
icebp
push
jnp
pop
add
movl
movsl
popa
inc
in
mov
inc
mov
fadd
mov
push
pop
repz
jl
fldl
add
int
hlt
mov
mov
jp
sub
push
addr16
out
ljmp
mov
pop
iret
push
xchg
scas
lds
xor
es
cmpsl
mov
je
sub
mov
shll
jle
mov
jo
jmp
outsb
xor
jl
push
lods
sub
subl
out
pusha
push
add
jno
enter
dec
sub
jno
push
in
pop
in
or
int
mov
cmp
sub
push
loop
mov
daa
dec
fsubrl
jp
clc
loopne
addl
movsb
and
in
push
je
in
outsl
jns
sub
call
push
dec
js
scas
add
in
je
mov
mov
xchg
icebp
push
outsl
stos
in
jg
je
cwtl
xchg
sub
stos
test
and
sbb
push
sub
mov
fcmovbe
jle
bound
add
cld
pop
mov
mov
inc
ss
scas
mov
aad
lret
cs
mov
sub
aaa
adc
stc
movsb
lock
outsl
scas
inc
jg
lret
fs
xchg
xor
xchg
dec
int3
stos
out
push
push
shll
int
dec
pop
bound
int
loope
xchg
test
dec
add
sbb
push
mov
jae
cltd
push
mov
jl
shrb
cmp
ret
aam
lret
xchg
push
stos
mov
xor
dec
mov
or
filds
mov
inc
pop
ljmp
inc
sub
add
sbb
ret
sbb
or
inc
lock
xchg
jbe
mov
fiaddl
rcl
loopne
imul
fimuls
sbb
pop
fsubrs
mov
lahf
xor
pop
imul
or
jge
add
xor
ret
pop
addr16
and
xchg
mov
xchg
subb
mov
push
repz
pusha
pop
xchg
mov
push
jno
ret
stos
jbe
jae
jno
cld
sbb
sub
cwtl
mov
pop
enter
stc
andl
scas
xchg
and
inc
sub
pop
sub
aaa
scas
aad
imul
xor
mov
enter
imul
fildll
xchg
push
std
xorl
sub
movsb
lcall
dec
popa
int
cmpsb
fmull
das
enter
sbb
pop
sbb
mov
xor
mov
inc
jecxz
out
loop
lea
jge
xor
adc
push
mov
out
daa
jno
or
testl
enter
addr16
mov
add
xchg
xchg
mov
fld
sarl
mov
loop
mov
inc
das
lcall
sti
add
and
jo
out
push
out
mov
nop
pop
lds
adc
sbb
and
mov
inc
lods
aaa
and
mov
pop
mov
and
mov
lods
xchg
rolb
icebp
cwtl
ljmp
lods
loop
int
pop
das
jbe
stc
mov
clc
xchg
dec
cmp
mov
clc
and
jo
inc
mov
dec
jge
lods
cwtl
aad
lcall
push
aaa
out
fcoms
data16
shl
xchg
imul
add
mov
mov
sbbb
test
xlat
mov
xchg
cwtl
pop
clc
xchg
inc
jle
jle
ja
mov
mov
cld
jnp
jmpw
fnstenv
cld
dec
cmpsb
clc
stos
arpl
mov
and
aas
shrb
sbb
out
psrld
cld
pushf
adc
stos
aaa
sarl
push
jmp
decb
inc
aad
lock
jmp
jns
sbb
mov
cmp
mov
ljmp
ret
fildl
mov
fidivl
xor
push
pusha
sbb
pop
jecxz
pop
lods
cs
test
mov
push
add
rclb
xor
jge
loope
lods
push
xchg
lahf
pop
sbb
push
fsubp
cmc
shrl
pop
adc
fidivs
and
jns
sbb
rol
mov
cld
popf
xor
or
aad
in
inc
xchg
sub
adc
popf
sbb
filds
outsl
jge
add
push
shr
loop
pop
mov
inc
out
les
mov
xchg
mov
frstor
and
and
sbb
data16
notb
xchg
pop
xchg
outsb
xchg
test
int
or
shll
in
nop
clc
adc
mov
and
out
out
clc
push
inc
push
push
and
daa
jne
insb
ljmp
or
out
stos
aaa
mov
xchg
mov
xor
int
pop
adc
leave
xchg
ret
cmp
lods
and
repz
sahf
test
insl
shll
jae
sbb
popf
sbb
rcrl
dec
adc
xor
jbe
jnp
outsl
insb
insb
mov
hlt
jg
jl
enter
cld
sti
loopne
out
pop
dec
loopne
ljmp
jmp
aam
bound
cmp
pop
iret
xlat
inc
or
outsb
add
loope
dec
inc
mov
outsl
ljmp
arpl
fwait
outsl
dec
aas
mov
stc
shlb
fists
dec
pop
mov
push
outsb
jno
ret
rclb
xchg
pop
add
sbb
mov
fcomp
push
fcomps
mov
addl
pop
inc
loop
int3
mov
lds
test
shlb
mov
les
dec
jo
mov
push
repz
mov
fcompl
fs
pop
push
sbb
jb
cltd
xchg
xchg
pop
dec
lods
movsl
sarl
fmuls
sub
sti
scas
mov
pop
or
pop
push
ds
jle
inc
push
popf
sbb
stos
rcrb
jge
dec
stc
sbb
inc
push
inc
dec
es
popa
fwait
push
test
xor
or
push
rorl
and
jns
jo
ss
push
xor
push
add
es
test
mov
or
push
ss
test
adc
dec
xor
xchg
push
jo
popf
loopne
pop
mov
jb
dec
xchg
mov
sahf
inc
incb
notl
mov
cmp
fidivl
adc
lds
mov
mov
jb
pop
loope
sti
roll
popa
bound
jnp
out
or
fbstp
imul
aad
adc
xor
arpl
das
cs
cmpl
add
sahf
cli
or
pusha
rorl
fucom
std
jo
pop
mov
ljmp
pop
xchg
cs
or
adc
xor
mov
mov
push
ret
jmp
out
stos
repz
repnz
cmp
in
dec
outsl
aam
and
mov
shlb
shll
xchg
adc
rcrb
mov
stos
push
rcrl
pop
mov
les
mov
insb
sub
mov
sahf
pop
adc
add
mov
and
pop
lods
lea
cmp
mov
push
data16
movl
js
dec
xchg
xchg
jae
push
mov
ljmp
sti
adc
sbb
mov
and
sub
out
mov
cwtl
cmp
andb
aam
pop
mov
jne
ja
rcl
lock
push
out
pusha
test
ljmp
and
in
push
fsubs
scas
xchg
stc
ret
sub
xor
faddl
jnp
ret
adc
push
mov
scas
aaa
mov
mov
push
ret
or
cmpsl
sar
pop
or
leave
sti
filds
repz
sahf
and
push
push
jp
adc
shll
jp
sahf
adcb
ds
mov
add
repnz
mov
bound
dec
xor
std
push
xchg
adc
jp
or
arpl
cmp
xor
pusha
inc
xchg
mov
test
cmp
mov
push
in
aad
fwait
xchg
in
pop
outsl
out
mov
stc
les
stc
push
lods
ret
jo
vcvtdq2pd
mov
xchg
add
imul
loopne
outsl
loope
fldl
movsb
mov
leave
sbb
into
cltd
test
cld
inc
mov
xchg
and
stc
in
cmc
sbb
jmp
mov
jp
adc
xchg
iret
ds
outsl
add
and
test
orb
pop
fcomps
sahf
jge
or
sbb
mov
pop
sahf
test
xchg
test
add
imul
adc
popa
iret
lea
mov
pop
mov
adc
loop
jle
push
push
sbb
dec
xchg
fidivrl
or
jae
lahf
inc
dec
mov
dec
stos
out
add
push
xor
xchg
aam
sub
fldenv
pop
and
into
xchg
xor
adc
or
out
mov
xor
pop
mov
and
push
js
faddl
icebp
call
push
stos
add
mov
and
mov
adc
ret
movsl
xor
sub
xchg
pusha
cvtdq2ps
push
insl
mov
aad
into
mov
sub
sub
insb
rorb
sbb
pop
xor
xchg
sbb
mov
insl
pop
test
testl
cmp
xor
int3
mov
es
pop
adc
loopne
sub
lcall
mov
ja
pop
push
jnp
and
in
cmp
scas
fdivrl
dec
xor
mov
mov
cli
jmp
xchg
dec
pushf
dec
pusha
mov
out
shl
cmp
mov
xlat
ret
push
mov
cli
sbb
stos
ds
in
add
lea
faddl
jae
xchg
add
or
enter
addb
inc
xor
repnz
xchg
add
and
mov
dec
lea
pusha
mov
add
repz
adc
adc
xor
sbb
bound
movsl
mov
sbb
lcall
cld
dec
loopne
push
out
das
or
sub
jo
enter
insl
incl
jne
mov
nop
mov
outsb
add
loop
popf
mov
cmp
mov
jns
je
fsubrl
add
in
cmp
xor
nop
dec
lock
enter
sarl
jge
sbb
jns
or
adc
fidivs
or
pop
pop
lods
dec
loope
mov
lods
fldl
jne
into
mov
sbbb
dec
shl
out
mov
cmp
int
mov
lret
xlat
mov
add
out
inc
mov
into
adc
jle
xor
jo
jo
fwait
jmp
inc
mov
enter
lcall
aas
sub
bound
lea
subl
rorb
xchg
js
std
lahf
sub
out
adc
jle
rorb
aam
data16
ss
leave
popf
data16
mov
mov
pop
pusha
jp
in
inc
push
lock
pop
fdivr
xor
es
jp
out
iret
xlat
and
stos
or
push
ja
pusha
mov
xchg
xor
mov
inc
sbb
xor
in
loop
out
mov
cmp
lods
or
xchg
xor
dec
loop
mov
ret
pop
dec
xchg
outsb
cmpsb
out
adc
and
adc
mov
add
test
or
ret
mov
daa
push
test
push
cmp
bound
inc
jmp
xchg
adc
ret
imul
test
xchg
push
pusha
xor
xchg
cmp
mov
jmp
adc
jo
adc
cmp
lds
ffreep
xchg
cli
xchg
stos
dec
fmul
sarb
insb
sub
les
pushf
gs
lahf
les
js
push
into
aad
inc
sbb
popa
xor
mov
inc
cmpsb
daa
out
pop
pop
mov
and
rolb
fmuls
lahf
add
in
sub
sbb
or
outsb
test
dec
sbb
loope
cld
cmpl
loop
sbb
cmpsb
repz
cmp
mov
xchg
cld
mov
in
xchg
repnz
lods
cmp
add
adc
dec
pop
aam
sub
cwtl
lods
jb
push
xor
mov
cmpsb
mov
ljmp
jbe
xchg
repnz
andl
inc
inc
pop
sub
shlb
arpl
cmpsl
mov
and
xchg
in
or
fstpt
sahf
mov
inc
pop
mov
pmaxsw
inc
popa
in
lods
pop
pop
ficompl
and
lods
cmp
dec
pop
mov
cmpsb
je
fdivrl
fistl
test
sub
push
push
test
mulps
test
mov
or
aam
and
insb
in
inc
inc
sbb
pop
cli
outsb
test
push
mov
int
jmp
cmp
push
jae
mov
ficoml
into
sbb
inc
sub
out
push
mov
hlt
shr
push
pop
mov
imul
inc
adc
pop
pop
nop
out
lret
out
out
sbb
xchg
mov
shl
jge
nop
hlt
les
cli
sub
push
clc
popf
sub
sub
es
std
cmp
hlt
lods
ret
cmp
cmp
stos
inc
mov
add
adc
dec
xchg
jbe
and
gs
jecxz
jo
lcall
ljmp
loopne
mov
icebp
mov
adc
xor
leave
pop
xchg
mov
pop
or
dec
in
jns
das
jle
cs
int
imul
imul
movsl
xor
out
push
xchg
pop
lahf
out
hlt
test
dec
fs
sbb
add
add
fs
sub
push
cmovns
in
dec
pop
jle
mov
out
push
and
test
adc
mov
push
dec
lahf
sub
pop
addr16
push
xlat
cmp
xchg
cwtl
xor
cmp
loope
jl
xor
jae
lock
jo
inc
hlt
add
ds
cmp
jle
imul
or
dec
or
nop
out
xor
push
stos
fnstenv
les
xor
mov
test
stos
and
push
pop
pushf
fucomip
lret
fidivrs
adc
rclb
xor
inc
dec
fwait
lea
and
jns
bound
push
sbb
icebp
enter
js
sar
dec
aaa
mov
push
int
pusha
jo
cmp
call
push
fcoms
fmull
arpl
repnz
aad
popf
and
imul
mov
jmp
mov
xor
in
or
pop
mov
mov
xchg
sbb
ja
imul
inc
mov
xor
sti
jbe
dec
mov
call
repnz
neg
push
mov
xor
mov
pop
std
jle
push
fisttpll
iret
jmp
sub
movsb
fadd
jle
xchg
inc
test
movsl
daa
jmp
lods
dec
jg
stos
add
push
sbb
les
lods
and
data16
push
fs
xchg
stos
fsubr
stos
inc
scas
xor
dec
inc
cmp
or
xchg
jmp
sbb
sbbl
int
out
inc
xchg
pop
ljmp
dec
push
push
lcall
hlt
jmp
jb
jno
daa
sbb
nop
ljmp
inc
in
mov
int3
andb
lock
push
inc
jae
aam
cmp
jle
fmuls
movsb
pop
push
inc
mov
xor
cltd
shl
cmc
push
or
es
add
clc
gs
ds
cmp
inc
scas
rep
test
mov
gs
add
out
mov
cwtl
lret
shll
out
nop
xchg
or
push
or
push
mov
ds
shlb
pop
lret
cmp
xchg
xor
fcmovnb
out
cmp
jne
ret
or
mov
std
cmp
jnp
lds
imul
mov
aam
push
ss
punpckldq
mov
sub
push
addr16
xchg
popa
jnp
jl
jno
test
repnz
push
sbb
rcrl
outsl
sub
stc
mov
into
jge
xor
fs
hlt
rcrl
out
in
xchg
ja
into
hlt
fucomp
or
int3
fisubl
or
push
int
jmp
pop
mov
cmp
mov
stos
aad
push
addr16
aad
sti
dec
sti
adc
mov
out
xor
sahf
addr16
imul
push
je
lcall
dec
je
sbb
lahf
jmp
and
push
mov
popa
and
cmp
jo,pt
mov
jnp
aas
push
sub
cmpb
jne
pop
sub
dec
mov
jo
pop
js
inc
fwait
sbb
ljmp
enter
mov
xchg
insl
mov
mov
out
movd
dec
push
mov
jl
lods
sar
aam
or
std
ds
fnsave
push
inc
lods
jb
movsb
add
push
insb
push
and
aas
pop
outsl
fnsave
adc
xchg
jnp
enter
add
sub
out
movsb
sbb
loopne
daa
in
push
xor
xchg
movsb
add
bound
xchg
jge
aam
mov
inc
add
cmc
stos
push
add
sbb
pop
jecxz
and
xlat
xchg
in
call
iret
stos
push
add
push
outsl
dec
mov
lock
ja
test
rclb
or
adc
gs
orl
enter
adc
addr16
test
insl
push
repnz
mov
adc
push
pop
stc
xchg
sub
scas
jno
xchg
pop
inc
shlb
lock
outsb
movsb
das
iret
sub
fwait
mov
scas
push
mov
mov
cltd
mov
mov
jo
cmpsl
or
cmp
fsubs
or
sub
and
add
call
lock
je
hlt
push
add
incb
insb
xchg
out
xchg
pop
nop
jno
mov
mov
js
cmp
mov
fimuls
mov
and
adc
xor
mov
xchg
ffreep
xchg
into
incb
test
addb
sahf
call
lds
test
inc
clc
jns
addb
std
int3
movsb
jmp
pop
repz
push
cmpsl
mov
fbld
mov
adc
imul
into
sbb
mov
pop
push
arpl
cmpsb
add
jns
adc
sub
test
and
jge
std
jge
mov
sti
mov
js
fs
ja
jmp
adcb
push
mov
lea
cmp
das
lea
insb
or
mov
hlt
stos
icebp
call
test
jp
sti
and
outsl
push
jo
push
push
jp
cld
clc
mov
mov
iret
pusha
insl
fs
jb
mov
aas
pop
jo
pop
pop
outsb
hlt
jo
cmp
and
jbe
daa
mov
mov
pop
push
mov
add
ret
push
icebp
stos
and
dec
inc
cmp
xchg
cmpsl
ficoml
icebp
test
jmp
loope
mov
sbb
imul
leave
pop
test
or
push
pop
pusha
sbb
dec
push
mov
ret
shll
mov
mov
and
jno
xor
sub
mov
pop
jmp
xor
stos
sub
stc
pop
pop
dec
ljmp
insl
jns
fs
pushl
cmpsl
test
mov
arpl
dec
jne
jge
mov
mov
jbe
negb
int3
cltd
imul
movsl
xchg
outsb
cmp
xor
push
sbb
nop
adc
repnz
inc
mov
lahf
lods
mov
ret
mov
push
push
rcrb
cmpsb
adc
out
and
mov
outsl
std
pop
and
decb
jecxz
hlt
mov
xchg
inc
hlt
jne
pop
xchg
sbb
ljmp
adc
sub
leave
push
cld
xor
and
aas
add
cmp
sub
jo
hlt
dec
outsb
push
ss
sahf
les
loop
mov
dec
adc
in
je
cmp
jge
aad
cmp
scas
mov
add
inc
mov
in
js
out
add
shl
pop
inc
stos
xchg
rorl
enter
mov
push
jnp
push
push
cld
pop
cwtl
mov
addw
and
js
clc
sbb
jns
xchg
lds
xor
dec
aaa
mov
adc
sahf
mov
pop
out
jae
push
jne
out
repz
cmp
imul
jle
cmp
pop
ds
adc
ret
insb
jbe
leave
in
mov
or
jge
push
ss
mov
xchg
cltd
cld
stos
cs
jle
stos
repz
out
test
mov
lret
rclb
cltd
movsb
scas
add
lods
or
or
inc
cmp
jno
int
inc
jno
stc
scas
cmp
jle
xor
les
pop
inc
and
roll
pop
xchg
lcall
shrb
ljmp
aas
sub
cmc
iret
incl
jmp
js
stc
shlb
sbb
push
xor
xchg
das
jb
inc
fwait
cltd
xchg
adc
icebp
add
sbb
call
push
cltd
mov
insl
bound
push
jns
or
push
xor
sar
pop
iret
aaa
jge
clc
mov
fadds
adc
mov
das
insl
xchg
sbb
cs
adc
mov
movaps
push
out
addb
xor
rcll
shll
add
scas
lcall
adc
inc
dec
scas
and
push
ss
pop
adc
test
imul
and
or
mov
repz
sbb
fisubrl
mov
and
add
or
inc
push
insb
pop
jp
adc
data16
jne
addr16
add
xorl
and
fiaddl
lods
stos
jg
stos
adc
inc
inc
subb
pop
mov
bound
mov
xor
inc
das
jecxz
test
cmp
jp
fnstenv
call
outsb
in
inc
imul
cs
mov
faddl
pop
jge
sbb
push
and
cld
icebp
jnp
mov
sti
rcrl
sarl
jno
dec
cld
icebp
aaa
mov
aaa
sub
cmpsb
fs
leave
mov
jecxz
dec
jmp
aas
mov
jp
std
push
cwtl
mov
fwait
mov
movsb
call
aam
pop
mov
and
and
shrb
sub
iret
stos
or
stos
out
add
xchg
mov
pop
ret
push
jo
inc
test
mov
mov
pop
cwtl
clc
sub
popf
test
mov
xor
shlb
mov
fisttpll
mov
xorb
jg
inc
jae
movsl
mov
nop
in
cmp
fwait
xor
xchg
xor
out
inc
mov
cmp
pusha
pop
add
add
gs
mov
fcoml
popf
in
aad
add
lock
call
shl
scas
mov
mov
pop
mov
js
mov
decl
loope
es
leave
adc
arpl
test
mov
out
mov
fistl
imul
pop
mov
and
cltd
cmpsl
adc
cld
mov
enter
imul
mov
adc
jnp
clc
repnz
or
mov
pop
xchg
mov
inc
imul
fldt
fwait
push
insl
movsb
into
test
mov
xor
inc
mov
loope
jle
dec
sub
scas
jle
jae
es
pop
add
pop
xchg
cs
mov
lret
push
in
sbb
pop
mov
cld
movsl
xchg
pop
mov
mov
daa
sub
lods
mov
int
fisttpl
imul
and
inc
sub
mov
jbe
ja
imul
or
xchg
push
outsb
sahf
loop
xchg
pop
mov
or
and
dec
lret
sbb
and
cmp
add
lret
cld
xchg
dec
push
or
jbe
test
jl
or
cmp
sbb
add
and
mov
jp
hlt
add
mov
and
fldt
dec
mov
mov
jnp
loopne
cmp
shlb
mov
jnp
xchg
push
stos
fildll
lods
imul
jecxz
cmp
sub
push
ret
daa
dec
jo
pop
cmpsb
cmc
lods
and
mov
outsb
test
lods
lret
sub
ret
out
loope
fistps
push
ljmp
ss
aaa
jge
cmp
lds
mov
repnz
ja
in
adc
cmp
aam
push
pop
pop
dec
pop
and
jb
add
mov
dec
icebp
and
and
in
pop
push
adc
mov
xlat
xchg
mov
mov
inc
pop
mov
or
js
mov
adc
jno
popa
out
cs
dec
clc
xchg
push
shlb
std
sbb
pop
xlat
adc
adc
in
adc
daa
pop
mov
pop
mov
cwtl
mov
inc
cmc
lods
mov
mov
lcall
stos
mov
sahf
push
test
add
xor
fistl
sbb
push
ja
out
movsb
cmp
jg
push
out
push
add
out
icebp
mov
mov
mov
lret
inc
and
shrb
mull
and
lods
cmp
js
and
xor
dec
sbb
mov
outsl
lahf
stos
inc
pop
ret
lea
mov
fsubrs
pop
fdivp
cmp
cmp
xchg
out
add
push
imul
pop
adc
nop
mov
sarb
sbb
pop
out
inc
lret
pop
mov
scas
cltd
jge
pop
adcl
add
inc
push
call
lock
or
mov
enter
mov
xchg
or
jno
test
xor
sbb
mov
rcll
cld
cli
pop
push
test
mov
or
sbb
adc
out
xor
fisttps
pop
xchg
outsb
mov
out
jnp
aaa
sub
cmc
pop
mov
mov
pop
cmp
push
sub
in
dec
test
lret
fidivrl
test
out
aaa
add
adc
jns
mov
loope
push
lret
test
mov
mov
xor
or
push
repnz
and
xchg
ljmp
fisubl
leave
out
jg
sbb
in
lods
xchg
xor
in
int3
and
or
or
and
adc
js
rorb
push
lods
in
lock
sbb
xor
mov
jbe
mov
jmp
es
jg
outsl
or
pop
test
sub
xchg
cmp
pop
outsb
jae
mov
repz
push
and
call
adc
test
dec
pop
push
cmpsl
cli
mov
adc
idivb
jle
ss
xor
insl
and
rcrl
mov
lds
popf
push
fdivrs
data16
movsb
cmpsb
push
inc
xchg
xor
lods
mov
call
xor
lcall
sub
and
call
dec
pusha
dec
mov
dec
pop
dec
mov
loopne
xor
mov
and
ss
or
mov
dec
aas
jb
sbb
jg
push
sbb
ljmp
leave
mov
das
mov
push
add
jge
ret
mov
pop
lods
push
aad
inc
fmuls
fcomps
sbb
push
push
mov
lfs
cmpsl
and
ja
add
scas
xchg
inc
dec
cld
xchg
leave
jns
inc
and
jg
pop
sahf
xorl
mov
mov
mov
or
sub
cmp
xor
ret
sbb
xchg
push
mov
xchg
out
lea
mov
pop
or
icebp
nop
aaa
mov
mull
inc
mov
jae
mov
sub
xlat
movsb
and
loopne
push
in
and
inc
pop
mov
mov
insb
stos
jecxz
sti
mov
add
jnp
mov
subb
xchg
fisttpll
cmp
xor
inc
adc
push
rorb
stos
nop
cs
push
outsl
push
imul
push
push
in
add
std
dec
rorb
lret
shll
scas
xlat
dec
lcall
mov
mul
cmp
mov
inc
les
jg
sub
aam
jl
push
push
ja
lods
popa
fsubs
popf
mov
dec
cmp
lcall
sbb
inc
cli
sbb
and
in
or
scas
inc
fdivl
repz
jl
push
stos
clc
adcb
aas
andb
add
or
out
ret
and
int
xchg
imul
add
and
mov
ret
addb
fildll
out
push
jnp
sbb
fs
pop
dec
out
shl
fsubp
fimull
repnz
cmp
cmpsl
in
mov
cmp
les
loopne
outsl
mov
or
cltd
dec
pop
push
jb
mov
push
call
pop
mov
xor
out
add
mov
iret
decb
fwait
movsb
xchg
lods
das
rolb
pop
xchg
mov
hlt
in
inc
pusha
fs
mov
jg
xchg
inc
sub
dec
dec
cmpsb
sbb
mov
inc
data16
push
push
xchg
xor
loope
jbe
cmp
int
mov
gs
leave
cltd
adc
mov
mov
fisubl
stos
mov
stos
sbb
push
mov
jb
in
or
scas
cmp
mov
mov
pop
xchg
add
repnz
popa
ret
popf
jno
push
mov
inc
sbb
push
fs
and
cmp
dec
push
xchg
sub
imul
sbb
fnstcw
pop
jg
and
xchg
push
pop
mov
testb
and
bound
mov
loope
push
sub
inc
imull
lods
mov
popf
mov
and
push
gs
mov
pop
scas
test
mov
icebp
lret
outsb
insb
dec
xchg
pop
lret
push
push
addr16
sub
jg
pop
out
stos
or
jl
or
sbb
mov
testl
scas
adc
push
insl
pop
mov
pop
pushf
mov
ss
mov
sar
add
push
lahf
push
ud0
pop
mov
flds
outsl
jle
xchg
pop
push
imul
pop
xchg
fcompl
pop
scas
and
xorb
sub
cmpsb
add
mov
icebp
mov
ljmp
xchg
pop
xor
xor
pop
sahf
xor
jge
adc
inc
sbb
arpl
add
std
ss
jae
jns,pn
xor
xor
adc
inc
jnp
jl
rcrb
jb
sbb
add
inc
jl
mov
push
fs
dec
xor
scas
or
dec
frstpm(287
out
push
scas
xchg
test
insl
push
ja
mov
sbb
es
bound
mov
arpl
xchg
jecxz
inc
cmp
sbb
std
inc
mov
mull
ljmp
push
adc
pop
jnp
jne
add
jo
push
shlb
outsl
mov
mov
cld
cmp
push
xchg
xlat
insb
jns
lret
mov
jl
popa
pop
popa
inc
lds
dec
aad
mov
mov
rorl
cmp
xchg
push
aas
inc
loop
cld
jp
ljmp
push
xchg
enter
adc
mov
fbstp
ret
test
fwait
cmp
or
das
stc
inc
mov
hlt
cmc
repz
hlt
fs
pop
pop
clc
sbb
iret
inc
es
in
mov
imul
popf
cmp
and
sub
pop
mov
test
jge
popa
mov
iret
cmp
addl
jae
xlat
mov
push
lret
adc
add
xchg
test
mov
fs
pop
xchg
sbb
or
test
ja
test
mov
gs
or
cs
sbb
aad
jb
pop
or
fisubrs
sub
mov
iret
movsl
jecxz
mov
loope
push
or
sbb
fcoml
or
cld
jo
test
ja
and
mov
push
int3
cmp
and
pop
stos
out
mov
das
jmp
add
sub
cmp
ret
jno
mov
mov
and
leave
mov
pop
xor
out
repnz
insl
fwait
jns
sbb
push
loope
cmp
sub
jmp
and
sti
bound
js
mov
push
push
jno
jbe
aam
in
xor
dec
test
enter
loope
sbb
and
and
sub
lods
pop
adc
ja
push
push
inc
cmp
data16
rcr
fisttps
add
fucom
sbb
lods
pop
jmp
sar
push
sbb
cmpsl
lret
cmc
mov
pand
sbb
popa
push
pop
push
int3
notb
rcr
movsl
sbb
xchg
bound
jmp
push
aam
cmp
sbb
incb
lds
repz
in
jge
mov
cmp
mov
push
imul
outsl
mov
hlt
adc
test
stos
pop
inc
lds
sahf
fimuls
and
inc
push
jl
out
lret
fistpl
out
cmp
or
cmp
xor
loopne
rcr
inc
add
jbe
cld
rcrb
dec
or
cmp
fs
movsb
fdivr
ljmp
test
cmpl
cld
or
fistl
cwtl
mov
stos
int
mov
imul
add
stc
jmp
ret
sbb
dec
xchg
mov
gs
mov
mov
inc
es
mov
xor
xchg
test
push
out
icebp
mov
aaa
out
imul
jge
or
gs
cmpl
push
inc
cmp
ljmp
fisttpll
arpl
cltd
xchg
ss
mov
repnz
mov
imul
sub
pop
cmp
mov
mov
xchg
push
cs
push
push
push
mov
aad
pushf
and
push
ds
push
mov
fmuls
mov
fistpl
inc
xchg
adc
dec
lcall
mov
sub
mov
sub
mov
or
mov
cwtl
movl
rcrl
adc
or
push
and
pop
ret
push
out
insl
subl
arpl
loopne
xchg
in
inc
sub
aas
inc
mov
jle
scas
js
sbb
sub
andb
test
mov
mov
jnp
jne
hlt
insb
and
jmp
or
repnz
dec
or
xchg
leave
push
jnp
sub
lret
dec
jnp
dec
fwait
out
pop
shlb
dec
in
movsl
mov
fldcw
clc
int3
sbb
imulb
pop
dec
lock
icebp
xor
call
fldcw
decb
int3
cmpsb
mov
insb
sbb
xchg
adc
mov
add
shll
in
ret
or
lcall
int3
sub
lcall
cmp
shrl
sbb
in
pushf
jmp
aad
jb
push
push
adc
mov
xchg
outsl
aad
mov
lock
test
xor
mov
popf
xchg
mov
shrb
out
pop
or
xor
sahf
pop
mov
or
mov
ret
inc
mov
test
add
or
inc
repnz
call
inc
repnz
sbb
cli
mov
push
xor
shlb
sahf
sub
out
add
imul
jge
xor
pushl
cli
arpl
mov
jmp
fdiv
lds
shll
mov
mov
lcall
icebp
pop
dec
xlat
mov
loope
jge
jae
stos
mov
lea
and
aad
outsb
add
jno
lret
mov
inc
nop
aaa
loope
mov
push
mov
and
xchg
push
mov
sub
pop
mov
jl
mov
into
add
lds
shl
shl
popl
dec
das
push
xlat
add
int
aaa
ljmp
add
mov
cmp
jmp
cmpsl
mov
jmp
sub
mov
sbb
cmp
or
aas
dec
jo
jmp
enter
stos
out
add
cmpl
dec
mov
cltd
daa
fstps
mov
out
mov
or
jb
das
dec
loope
sub
jl
cltd
js
dec
mov
sbb
insl
push
fbstp
test
mov
sti
sbb
scas
adc
jle
pop
push
xlat
repnz
je
scas
push
jbe
movsb
mov
orl
scas
arpl
roll
ja
lea
mov
xor
iret
dec
xor
stos
out
push
mov
jp
xor
lcall
dec
loop
mov
xor
xchg
xorl
mov
add
dec
imul
hlt
insb
push
push
cld
sarl
lret
and
push
adc
lock
ljmp
cli
dec
cmpsl
mov
mov
and
jmp
cmp
mov
adc
leave
shlb
push
iret
loope
add
imul
push
adc
insb
jb
jb
shrb
lcall
jge
sub
pop
mov
arpl
out
enter
and
loopne
jmp
push
test
test
sub
jbe
cmp
sub
sub
jns
lea
imul
cmpsb
cmpsb
push
mov
push
or
xor
or
popf
rcrl
sbb
and
mov
es
pop
push
outsl
es
cmc
lret
int
clc
cwtl
stos
ja
enter
mov
in
sbb
rcrb
icebp
adc
mov
adc
xor
dec
push
push
mov
mov
xchg
mov
mov
arpl
insb
inc
rcrb
mov
test
iret
jb
mov
lods
jl
jecxz
lea
cwtl
stos
mov
jo
aaa
inc
xchg
dec
xlat
cmpsb
push
ret
out
shll
outsb
mov
and
jne
ret
ss
xchg
aas
push
cmpsl
pop
js
in
inc
or
rcrl
lock
call
fmulp
outsb
mov
insl
aas
adcl
das
movsl
filds
or
std
dec
xor
cmp
ds
cld
enter
inc
add
jo
imul
cmp
and
jle
pop
xchg
push
test
js
out
mov
adc
inc
loopne
subl
fwait
mov
out
add
dec
inc
mov
rcll
sti
and
test
shll
imul
cmc
xchg
test
cld
sbb
stos
in
bound
inc
adc
gs
or
jp
cmp
pop
or
sbbb
push
pop
cld
adc
insb
sarb
sub
in
in
lea
test
sbb
enter
or
push
loope
movsl
xchg
pop
mov
leave
push
jbe
cmp
add
js
xor
ja
xchg
push
mov
dec
xchg
mov
pushf
loop
test
sbb
cmp
mov
orl
lds
sbb
lea
aas
test
ds
stos
fwait
pop
sbb
jge
pop
aas
mov
sbb
lret
pop
pop
lds
js
sub
sar
add
sub
add
aam
shl
mov
out
mov
fstp
xlat
in
jle
test
loopew
dec
and
pop
adc
stos
sbb
jae
clc
ret
sbbb
mov
mov
fs
push
sahf
adc
xchg
and
inc
fstl
popa
inc
gs
popa
sub
cmp
dec
int3
adc
outsl
jp
clc
mov
cmp
aas
inc
cwtl
adc
jmp
dec
jmp
out
jl
inc
mov
ja
cltd
xchg
sbb
sbb
xchg
jb
outsb
notl
jns
pop
dec
std
push
hlt
push
mov
jge
fdivrs
mov
pop
xchg
shlb
mov
mov
jae
xchg
fisttpll
xchg
in
mov
push
pop
test
and
fisubl
ds
testb
pop
pusha
inc
and
sub
lret
out
xchg
mov
pusha
mov
or
test
lods
pop
inc
mov
mov
jmp
daa
cwtl
iret
insl
jl
fstpl
sub
aam
pop
xchg
je
jae
mov
icebp
sahf
sub
add
ljmp
ret
xchg
jae
xchg
pop
jbe
scas
cmp
adc
aaa
push
xchg
xchg
test
repz
fldt
cmc
xor
rolb
test
cmp
add
pushf
lcall
xchg
xor
mov
lahf
ret
xor
and
in
fsubrs
xchg
xor
popf
and
scas
ljmp
lret
ja
pop
inc
popf
xlat
push
inc
nop
outsb
mov
in
sub
add
xlat
jl
jbe
in
leave
add
loop
pusha
jmp
mov
shlb
xor
xchg
ljmp
sub
out
sub
jo
mov
inc
sbb
push
sbb
rcr
jae
lret
or
ss
dec
popf
insl
inc
jmp
dec
dec
andb
mov
sub
je
in
ficompl
pop
cli
pop
mov
repz
lret
cltd
data16
jle
and
aas
movb
imul
cltd
mov
imul
repnz
ret
js
nop
mov
push
or
shll
mov
clc
push
fistpll
inc
adc
push
daa
movq
dec
mov
cltd
mov
stos
add
inc
xor
mov
ss
jg
cmp
ret
icebp
out
fstp
aad
lahf
or
sbb
loopne
inc
rcll
mov
add
aas
pavgw
lahf
pop
inc
rcrl
dec
mulb
cmp
pop
pusha
fsts
sub
lea
in
and
jmp
pop
add
das
insl
ss
add
mov
int3
add
jmp
mov
arpl
pop
shrl
cmp
fcoms
pop
add
push
mov
orl
inc
mov
xchg
lcall
rcll
cmp
cli
pop
mov
add
jo
pusha
xchg
aam
push
mov
les
add
cwtl
adc
add
stos
enter
mov
aas
adc
pop
and
fs
xor
js
xchg
aad
in
int
loop
lods
xchg
cmp
inc
adc
sbb
sub
lods
dec
into
lcall
adc
or
out
leave
aad
nop
and
fwait
push
icebp
jg
mov
idiv
pop
and
sbb
mov
popa
cmp
ja
insl
nop
add
pop
dec
push
mov
pop
pop
ss
cmp
sbb
scas
dec
sbbl
and
cmp
aas
jbe
mov
pusha
movsb
enter
xchg
loop
add
add
xlat
insl
movsl
call
jns
or
and
inc
jge
xrelease
in
rorl
sbb
jbe
push
loop
mov
movsb
aam
mov
jp
hlt
jnp
pmaxsw
int3
fldt
les
xor
inc
jnp
push
lods
in
push
arpl
xor
daa
fdivs
and
lea
xor
push
stc
shr
add
pop
jp
xor
int3
test
jecxz
out
iret
out
clc
add
mov
push
jb
jno
and
mov
out
jmp
sbb
push
inc
xor
and
sbb
add
sbb
cmp
push
aaa
mov
push
test
adc
pop
mov
pop
movsl
push
lods
push
adc
sub
jae,pt
jge
mov
xlat
pop
aam
xorb
pop
andb
cmc
push
fucomp
lods
xchg
xlat
ss
stc
dec
movsb
popa
ret
decb
jo
adc
insl
daa
adc
adc
nop
scas
mov
mov
sbb
out
clc
pop
sub
jmp
jo
enter
sub
mov
push
push
sbb
lahf
rcll
pop
sub
addl
adc
pop
ja
insb
pop
insb
pop
jb
sbb
add
fwait
lods
loopne
fldl
sti
mov
cltd
pop
call
cwtl
popf
inc
mov
leave
mov
scas
add
inc
std
lcall
rol
push
ja
negl
cld
ds
sar
xchg
lds
js
add
fs
jns
sarl
idivl
jno
lret
adc
xlat
mov
cmp
inc
add
mov
rolb
xchg
enter
out
fiadds
or
sbb
sbb
repz
xchg
divb
sbb
xchg
lcall
inc
dec
dec
jo
mov
adcb
or
ret
pop
push
ja
iret
cmp
push
xor
push
bnd
test
inc
jns
jl
inc
add
push
mov
inc
outsb
lock
sub
hlt
aaa
sub
mov
adc
adc
xchg
mov
mov
les
sub
pusha
and
mov
cmp
pop
arpl
cmpsl
movsl
jbe
inc
stos
mov
push
insb
and
shlb
inc
inc
mov
dec
ret
enter
push
mov
cmpsb
adc
and
fst
sbb
jl
adc
in
xor
adc
pop
push
inc
xchg
lods
inc
dec
out
outsl
add
cmp
sub
imull
inc
scas
stos
loopne
cmp
dec
cld
sti
adcl
pop
xor
dec
in
ret
aas
addl
sbb
lock
jle
mov
add
std
mov
aaa
fwait
aaa
fisttps
dec
cmc
jbe
fsubs
mov
outsb
mov
push
jns
mov
test
push
lods
xor
inc
xor
or
icebp
es
les
jae
movsb
movsb
dec
mov
push
test
inc
in
pusha
jo
mov
push
aad
pop
push
stos
sti
and
leave
xchg
mov
lahf
sub
cmpb
push
repnz
loopne
pop
lahf
push
jnp
pusha
xor
nop
aad
xor
and
cmp
pop
or
xor
movsb
sub
mov
test
sub
loop
mov
scas
leave
mov
mov
subl
adc
ds
add
lock
rorl
xchg
push
imul
mov
dec
mov
mov
cmpsb
movsb
pop
nop
cmc
pop
sbb
testl
bound
dec
push
sub
popa
xchg
sbb
repz
add
and
jns
pushf
sub
addr16
sub
add
sub
shl
push
dec
sub
andps
mov
bound
cmpsl
idivl
dec
cmp
clc
dec
mov
sub
mov
loope
xchg
cld
scas
out
mov
mov
repz
in
mov
mov
in
test
fdivrs
lcall
push
ljmpw
fsubs
jns
subb
enter
call
test
imul
pop
mov
loope
outsl
enter
adc
xlat
mov
dec
aaa
mov
leave
rcll
pop
mov
fmuls
xlat
xlat
mov
push
xchg
in
lds
push
pushf
shl
fsubs
fistps
mov
mov
cltd
pusha
outsl
cmpsb
sub
dec
ffree
jle
mov
stos
out
lahf
mov
jne
imul
aaa
daa
test
cmpsl
xor
jp
xor
xchg
lock
ss
stos
lcall
imul
push
out
lea
imul
mov
xchg
mov
stc
inc
or
test
sub
test
adc
cmp
jb
and
ss
sti
mov
push
addl
or
pushf
stos
insl
aam
insb
arpl
push
enter
repz
mov
mov
rol
xor
sub
push
repnz
ljmp
cmpl
dec
outsl
mov
adc
fildll
dec
fstp
daa
pop
popf
jmp
test
into
loopne
push
in
int
outsl
xor
test
cs
or
push
sbb
in
movsb
sarb
sub
sahf
dec
dec
dec
jecxz
subl
inc
mov
mov
ja
cwtl
inc
mov
rolb
xor
xor
sbb
jle
push
xchg
gs
adc
test
push
sub
push
sarl
cli
cmpl
cs
sbb
leave
pop
pop
adc
ljmp
insb
daa
scas
outsl
mov
xchg
loop
inc
dec
cmpsl
jb
cmp
loop
cld
or
mov
imull
fcomps
mov
insl
pop
mov
test
cmc
dec
inc
iret
xchg
xchg
push
movsl
push
jp
cmp
scas
mov
jnp
lcall
jae
and
dec
nop
lcall
mov
cmpsb
mov
jge
mov
imul
xchg
es
movsb
cld
jmp
push
push
rcll
ja
lret
cmp
xor
xchg
inc
xor
rorb
mov
xor
or
mov
jge
mov
or
xor
js
enter
xchg
data16
adc
push
ja
push
jo
xor
stos
addr16
sti
pop
mov
jge
repnz
pop
dec
add
or
rcll
sub
jno
mov
std
mov
sti
cld
mov
sub
sub
cld
or
add
inc
jmp
mov
xchg
jno
inc
jl
inc
stc
es
lea
in
scas
jmp
test
add
ficomps
ss
cmp
sub
pop
fdivr
xlat
sub
pop
test
xchg
pop
inc
ja
shrb
pop
popa
mov
pop
push
jne
xor
jae
push
lds
mov
xor
or
es
sub
adc
add
dec
adc
jns
test
aas
out
xor
cs
sbb
xchg
mov
sbb
xchg
push
cmc
pusha
dec
lds
fwait
jecxz
ss
out
jae
js
sbbl
outsl
scas
movsl
inc
adc
sub
add
push
push
mov
add
sbb
add
pop
xchg
pop
dec
mov
or
mov
std
cltd
lahf
pop
cmp
push
xor
mov
add
push
fsts
lret
cwtl
adc
mov
pop
cmp
push
push
adc
pop
psubsw
jnp
mov
imul
xchg
inc
sbb
cld
xchg
add
push
in
test
cmp
sub
inc
jmp
add
das
cmp
lock
push
and
jmp
push
cmp
int3
mov
sbb
cmp
xchg
test
jle
xor
mov
push
jge
nop
sbb
in
lock
shll
mov
sub
xchg
insl
and
out
and
push
call
lcall
pop
sub
mov
sti
sbb
pop
mov
ficompl
inc
pop
out
mov
xchg
jae
cmp
mov
push
int3
xorb
xor
mov
out
lahf
in
xchg
aas
mov
xor
loope
sbb
sub
inc
data16
adc
jbe
mov
sbb
mov
mov
out
sarb
add
fsubr
mov
xor
ret
jns
sbb
rolb
idivl
and
xchg
rol
or
pop
scas
mov
call
sbb
iret
mov
mov
pop
mov
xor
mov
cwtl
adc
ficoms
fld
dec
mov
mov
rcll
mov
fisttps
mov
outsb
sbb
cli
into
xor
mov
lahf
insl
jmp
push
loope,pn
mov
xchg
ret
push
dec
and
mov
mov
sub
int
mov
hlt
inc
mov
add
pop
and
ljmp
dec
cld
mov
jecxz
dec
mov
jo
pop
adc
add
add
jmp
push
flds
pushf
rcll
aad
icebp
call
cmc
mov
fwait
add
mov
aaa
movsl
xor
inc
mov
mov
test
into
add
jnp
cmp
sti
push
outsb
sub
aad
cmp
sahf
loope
mov
jno
shll
adc
int
cld
insb
fists
jne
xor
sbb
sti
std
mov
lahf
dec
cmp
lea
aas
stos
idivb
mov
jae
fimull
sub
orl
dec
dec
test
pop
clc
xor
inc
cmp
icebp
sub
push
addl
adc
jg
les
aam
and
or
and
cmp
test
jo
push
or
xchg
sbb
repnz
fwait
jae
xchg
and
test
sub
jae
imulb
mov
icebp
lret
movsl
scas
aas
and
mov
imulb
pop
es
ss
fnstenv
in
mov
mov
jno
fisubrs
or
sub
int
pop
lret
sub
sbb
jg
sub
xchg
xlat
and
lods
sub
push
jb
cmc
xchg
imul
xor
mov
mov
leave
inc
add
add
test
cmp
xchg
jo
rcrb
inc
arpl
popl
inc
sbb
shrd
stos
pop
pushf
adc
dec
xor
popf
loope
ja
or
scas
push
es
lea
out
pop
ret
fmull
pop
leave
repz
inc
bound
or
into
dec
imul
nop
inc
mov
pop
fs
mov
sbb
je,pn
jmp
cli
scas
in
loop
imul
or
insb
push
loope
neg
out
lods
jl
and
xchg
mov
push
dec
and
pop
outsb
mov
dec
iret
xor
push
movsl
test
inc
cli
out
loop
mov
call
xor
jg
test
mov
out
mov
hlt
int3
mov
mov
aad
push
pop
inc
jno
fnstsw
and
test
outsb
jne
inc
pop
bound
pop
mov
mov
sub
pop
adc
xchg
lock
push
subl
adc
add
ljmp
jmp
push
testb
lret
cwtl
jl
inc
imul
inc
add
pop
aas
in
jecxz
call
in
outsb
mov
xor
fdivl
orb
shlb
cmpsl
ficomps
dec
aas
sahf
or
fidivrs
test
sarb
xchg
pop
fiadds
jbe
aad
fmul
jg
cmc
cmc
ficoms
xor
cmp
stc
xchg
mov
test
xchg
sub
shlb
lret
fiadds
pop
mov
xlat
popf
dec
in
into
mov
ds
push
lcall
scas
pop
std
pop
fidivl
shrl
lahf
mov
dec
or
les
inc
push
fstl
repz
dec
and
sub
pusha
lret
fstps
cmp
ss
dec
pop
sub
scas
or
push
push
inc
dec
jecxz,pn
jl
and
sarb
call
mov
shlb
mov
sti
xchg
jmp
mov
cmpsl
stos
dec
aad
sub
ret
lods
jge
xchg
inc
cmp
in
pop
inc
rolb
xor
mov
inc
dec
out
adc
mov
popa
shrb
pop
mov
mov
cmpsl
xor
lcall
jp
and
ret
inc
inc
and
dec
test
xchg
mov
adc
movsl
fucom
xor
mov
das
xor
enter
enter
mov
cmp
ljmp
cmp
dec
jle
xchg
test
sbb
stos
out
lret
stos
es
in
insl
insb
scas
repz
push
add
insb
and
mov
xlat
lahf
sbb
wrmsr
fimuls
add
pop
push
pcmpeqw
decl
test
icebp
mov
fwait
push
fwait
outsb
push
shll
push
outsb
data16
xchg
repnz
mov
adc
inc
andb
mov
jae
in
hlt
pop
xor
mov
popf
xor
sahf
pusha
addr16
jp
call
fcoms
daa
gs
dec
sbb
std
shlb
popf
popa
loopne
leave
ret
incl
inc
mov
or
push
loopne
ret
mov
cs
lods
sti
lods
push
jecxz
jmp
rcrl
cmp
call
inc
call
or
and
inc
ljmp
test
stc
incb
inc
sahf
jge
jb
or
dec
cmp
xchg
insl
push
add
aam
xchg
hlt
clc
fcompl
ficomps
stc
loope
mov
mov
int3
push
lret
dec
jl
jbe
inc
std
jbe
lret
mov
xorl
push
or
pop
jns
int
sub
faddl
push
and
ss
push
xchg
jp
or
lret
sub
mov
nop
cmp
lret
hlt
test
push
out
push
out
xor
fwait
cmp
or
jmp
mov
fdivs
cld
xor
subl
in
test
push
scas
sbb
cwtl
push
repnz
xchg
sbb
and
inc
icebp
sbb
cmp
xor
add
sub
cmp
mov
clc
fimuls
push
push
addr16
outsl
mov
push
xchg
sbb
sub
jg
jl
fwait
test
mov
in
fidivrl
or
in
sub
push
sti
int
arpl
in
mov
insb
jns
xor
xor
clc
and
lea
mov
gs
cltd
or
dec
mov
inc
pop
mov
into
mov
ja
pop
xchg
jbe
ret
incb
mov
xchg
stc
mov
sbb
pop
pop
lds
ljmp
push
or
mov
mov
cmp
test
mov
mov
movsl
pop
fdivp
in
dec
in
outsl
popa
push
insb
mov
test
bound
mov
push
lds
orl
or
idivb
repz
mov
lds
std
pcmpgtw
or
scas
loopne
xchg
out
push
dec
push
movl
mov
xor
lahf
or
sub
imul
cmp
mov
divl
push
and
mov
push
push
mov
call
push
sbbl
push
mov
pop
xchg
lret
xchg
or
jns
or
mov
pop
inc
aas
dec
aaa
xchg
sbb
adc
push
outsb
inc
popa
fldenv
jae
mov
out
shrl
sub
jecxz
add
and
mov
cmpb
pop
and
pop
mov
or
lods
xor
imul
lahf
xchg
mov
pop
inc
mov
scas
in
pop
loope
mov
outsl
sbb
dec
mov
je
inc
mov
push
mov
and
mov
pop
xchg
sbb
ljmp
xor
mov
in
sahf
cld
push
ret
push
vzeroupper
and
addl
dec
ret
and
aas
jmp
jo
fisubs
jne
popa
mov
mov
cltd
jne
fwait
xchg
fs
js
add
bsf
mov
sub
in
std
jb
fcompl
mov
adc
stos
push
cs
pop
jmp
les
xor
pop
addl
jbe
xor
rclb
out
jb
xorl
xor
jb
or
jo
cli
mov
mov
inc
jge
pop
sub
pop
mov
fwait
mov
mov
inc
movsb
lods
jo
fcmove
or
or
arpl
mov
mov
mov
cmp
inc
lret
and
dec
push
pop
int
jbe
mov
cmp
iret
or
loope
mov
stc
es
dec
hlt
stos
lcall
pop
int
and
enter
iret
pop
fmul
jae
pop
cltd
xor
addr16
pop
jecxz
outsb
aam
pop
sub
jle
insb
jae
mov
stos
lcall
sbb
push
test
pop
arpl
jg
inc
lock
mov
cmp
rcrl
jle
cld
pop
cs
shlb
pop
sti
push
shrl
jne
enter
test
adc
mov
aam
add
or
imul
sub
lcall
sbb
stos
cmp
cmovs
xorb
mov
jae
stos
icebp
je
inc
xchg
or
pop
mov
adc
push
sub
sub
adc
popa
idivb
mov
popf
popa
xchg
xor
lea
das
push
jge
in
pop
add
push
ds
push
pop
int3
inc
das
icebp
daa
dec
lock
push
adc
jbe
in
pop
fiaddl
or
out
fistl
push
adc
xchg
js
mov
xchg
out
mov
xor
add
sub
insl
iret
sub
test
rorb
xchg
hlt
push
sbb
push
pop
push
lea
and
mov
add
test
cli
outsl
adc
addr16
testl
inc
mov
ljmp
leave
mov
jno
jne
sti
scas
mov
nop
scas
pusha
hlt
dec
mov
add
sub
xchg
addb
ffree
dec
enter
into
xchg
sub
into
shl
pusha
dec
imul
adc
les
sub
xor
mov
cmp
mov
lcall
add
nop
pop
mov
cli
inc
xor
outsl
nop
mov
and
fnstenv
cmp
adc
clc
or
sbb
mov
insb
test
int3
mov
stos
add
out
or
jge
aad
jp
add
jecxz
test
in
sub
adcl
pop
movsl
adc
cwtl
mov
mov
mov
dec
enter
fwait
jbe
lret
push
in
jae
mov
mov
lahf
aas
int
cmpsl
in
lahf
push
insb
push
pushf
jne
inc
sbb
xor
sub
dec
test
and
mov
jle
jecxz
pusha
sbbb
cmp
sbb
jb
outsb
sbb
pop
mov
je
jg
call
cmp
push
test
sbb
stos
aas
jmp
jb
test
dec
jl
aas
jo
pop
cltd
iret
and
adc
in
testl
jb
and
mov
ret
mov
push
loop
mov
mov
or
sub
rorl
cmpsb
add
pop
rorl
insb
push
orb
in
cs
sbb
push
imul
pop
mov
stos
dec
rcrb
sbb
or
mov
jp
and
popf
lcall
xchg
call
cmovno
inc
dec
sahf
enter
not
test
and
scas
jno
bound
sbb
iret
pop
inc
sbb
jb
lcall
push
xor
cld
orb
in
stos
gs
mov
std
add
inc
jle
mov
adc
pop
adc
vpsllq
orl
pop
das
jmp
int
mov
add
ja
mov
ss
mov
fiadds
mov
ret
roll
cmpl
mov
pop
inc
mov
push
mov
or
mov
add
data16
sbb
pop
adcl
ljmp
pushf
repz
inc
test
int3
imul
nop
lods
fwait
inc
aaa
mov
scas
iret
jae
push
mov
cltd
jle
int3
cmp
push
lret
jne
push
xor
nop
mov
sub
jl
sub
call
ret
lock
cltd
sarb
sub
xor
mov
dec
fs
les
test
daa
add
pushf
ret
mov
jmp
mov
push
cmp
pushf
fcoms
or
leave
jbe
ss
pop
adc
mov
jbe
mov
xchg
arpl
add
push
jecxz
push
jle
adc
and
adc
pop
pop
fwait
mov
xchg
je
mov
test
int3
imul
outsl
js
dec
push
dec
inc
ja
fiaddl
cli
sub
lock
add
lcall
dec
lods
fists
notb
lret
hlt
xor
mov
add
add
clc
mov
in
test
mov
push
cld
ss
data16
ljmp
mov
mov
pop
pop
out
inc
dec
push
sar
aaa
xchg
sti
inc
pusha
ret
ficoml
jmp
lret
jo
out
idivl
outsb
xor
lea
push
ud0
push
sahf
cltd
adc
ds
jbe
adc
jp
outsl
mov
jne
inc
sub
sbb
inc
push
adc
mov
das
add
sbb
push
je
mov
pop
mov
xchg
pop
lock
mov
inc
sti
xor
push
jle
add
sahf
mov
fisubrs
push
sbb
dec
test
seto
push
out
test
hlt
addr16
adc
adc
scas
cmpsb
aam
push
sbbl
mov
xchg
in
in
fists
xor
push
mov
mov
setns
push
sub
sahf
ret
push
cs
mov
push
add
xor
outsb
xchg
insl
fstl
sbb
xchg
push
jnp,pt
aad
movsl
sarl
dec
push
ja
jo
mov
cld
cmpsl
outsl
mul
mov
inc
pusha
cmpsb
enter
jge
ss
inc
loopne
out
mov
cmp
lea
xchg
xor
xchg
xor
in
js
push
inc
inc
bound
clc
out
icebp
bnd
sub
imul
mov
pop
inc
test
inc
push
dec
pop
insb
cmp
mov
inc
fisubrs
adc
test
imul
fadds
stc
repnz
push
sahf
out
mov
inc
clc
sub
inc
test
loop
mov
inc
cmp
aas
xchg
and
in
dec
mov
push
cwtl
pop
leave
lret
loopne
out
push
repz
push
sub
test
push
mov
lret
push
test
mov
nop
in
add
inc
pop
inc
test
addr16
daa
adc
xor
inc
pop
lds
roll
dec
mov
dec
jecxz
pop
mov
cmp
dec
fbld
mov
cmp
test
xchg
or
inc
xchg
lahf
cmpsl
push
leave
fildl
in
pop
dec
shl
push
pusha
js
es
lds
xor
mov
sarl
cwtl
data16
and
adc
bound
ljmp
sub
mov
cmc
popa
repz
sub
movsb
xorb
js
xchg
mov
mov
xor
fmulp
jae
icebp
jmp
je
push
mov
jnp
xor
fwait
xchg
mov
cmp
push
add
imul
push
clc
movsl
mov
xchg
and
stos
cmp
mov
or
sub
mov
dec
pop
gs
repnz
and
push
setnp
sbb
test
push
sub
icebp
arpl
push
movsl
mov
and
imul
decb
mov
sub
mov
sub
xchg
lods
cmpsb
jnp
pushf
das
pop
xor
pop
gs
inc
imul
in
shrb
inc
loop
jo
movsl
jl
or
mov
push
aad
push
xchg
cmp
out
xlat
mov
out
mov
int
lret
xlat
out
cmp
dec
pushf
jo
movsb
and
lock
mov
popa
stos
or
cld
add
leave
lahf
shlb
push
sbbl
xor
mov
cmpl
or
dec
and
insl
or
pop
sbb
mov
xchg
mov
cs
cwtl
inc
out
push
cld
jle
inc
xchg
jbe
in
je
adc
push
pop
mov
pushf
add
jbe
scas
push
xchg
fistps
xchg
mov
cmpb
das
adc
cmc
sub
dec
repz
mov
pop
nop
mov
fistpll
into
mov
push
iret
or
mov
scas
mov
adc
gs
arpl
outsl
clc
jp
xchg
jecxz
sti
lock
fisubs
xchg
mov
inc
xchg
jb
mov
inc
jne
scas
in
dec
adc
mov
inc
imul
mov
dec
insb
jecxz
pop
cmc
xchg
mov
ljmp
mov
hlt
popf
aam
mov
cmp
inc
xchg
ret
sub
xchg
xlat
or
lds
xor
popf
xchg
movsl
aas
mov
sbb
add
std
imul
es
mov
pushf
pop
bound
call
cli
cli
add
xchg
jge
adc
pop
pop
clc
or
lock
mov
nop
ret
add
push
xchg
sbb
sub
xor
out
js
dec
rcrl
xchg
and
pop
movsl
adc
ret
inc
adc
popa
cld
sub
ret
or
fistl
xor
xor
ficoml
or
test
fcmovne
add
mov
mov
divb
xchg
inc
stc
sahf
cmp
gs
sbb
shlb
pop
mov
xchg
sar
mov
inc
mov
bound
fistpl
rclb
xchg
mov
aas
insl
out
mov
pusha
mov
mov
xor
xchg
and
pusha
jle
mov
push
add
cli
push
fsubs
push
cltd
mov
xchg
movsl
cmp
sub
fldl
inc
mov
lods
mov
hlt
sti
sti
imul
jo
into
add
mov
jnp
pop
or
mov
mov
arpl
gs
mov
inc
mov
and
and
inc
mov
fcmovnbe
mov
loopne
pop
or
in
push
add
int3
loopne
rorl
out
lods
or
mov
push
arpl
add
aas
and
clc
scas
addr16
lods
mov
lods
inc
lods
rorl
inc
in
xchg
gs
jne
add
mov
lock
fwait
sarb
inc
push
rorl
xchg
xchg
and
insl
sub
int
test
mov
fisubs
push
aad
mov
imul
in
xor
mov
mov
adc
add
loop
fsts
fcomip
repnz
repnz
push
mov
push
aaa
jp
jne
stos
es
xchg
xchg
jae
and
ljmp
pushf
add
imul
lock
je
inc
sbb
mov
mov
sub
testb
ljmp
jno
dec
push
xor
pusha
std
icebp
or
rclb
sbb
dec
jp
jno
sbbl
cmp
inc
jle
fisttpl
mov
sbb
out
sbb
xchg
inc
daa
mov
xchg
js
lods
aam
js
push
fistpl
mov
mov
aam
pusha
and
adc
lds
or
pop
jp
adc
sub
pop
pop
jns
pushw
js
stc
cs
aam
notb
daa
mov
mov
dec
aaa
lea
cmp
sbbl
ror
jmp
lods
pop
jne
es
ss
pop
aas
es
gs
stos
js
jb
cmp
bound
lock
shrb
cli
xchg
push
mov
pop
das
add
repz
stos
xchg
loopne
sbb
dec
mov
inc
cmp
sub
cld
pop
cmp
fisttps
dec
and
jecxz
mov
mov
push
ja
mov
ds
sahf
cmp
fs
iret
and
aad
adc
cmpsl
jb
divl
roll
fnstcw
pop
mov
test
mov
push
inc
bswap
lahf
xchg
es
and
xchg
jb
sti
repz
and
jae
mov
sbb
sub
xchg
mov
lds
mov
loope
int
xor
int
xchg
mov
pop
push
insb
xor
scas
cmp
imul
es
add
into
inc
push
xchg
mov
lahf
fwait
test
sahf
or
mov
jno
push
jb
pushf
add
aaa
push
pop
mov
outsb
xchg
or
push
cmp
xchg
add
mov
pop
inc
inc
push
jb
mov
push
adc
insl
sub
jns
mov
push
mov
movsb
mov
lods
fs
jg
lret
lahf
adc
ds
pop
stc
push
jge
xchg
xorb
fstl
fwait
movsl
into
pusha
std
or
mov
or
lods
inc
popf
cmp
xchg
outsb
ret
pop
dec
dec
adc
xor
inc
adc
fs
in
mov
pusha
inc
push
mov
test
stos
mov
or
inc
jo
cwtl
add
jge
jnp
adc
jmp
jle
push
dec
pop
lret
ffree
mov
jns
push
mov
inc
push
mov
sbb
fimull
xchg
xor
rorb
push
icebp
sub
pop
nop
or
into
mov
out
cmp
and
adcb
dec
aaa
pop
sub
movsb
xchg
out
fistl
sub
jp
jnp
push
add
movsb
jg
stc
pusha
icebp
jmp
jmp
jne
mov
pop
loop
pusha
xlat
fptan
cmpb
mov
test
push
adc
loop
xchg
cli
pop
mov
xor
dec
lock
lds
pop
inc
dec
les
push
pop
repnz
jmp
sahf
add
and
add
add
inc
ds
popf
enter
fisubrl
addl
pop
ret
mov
mov
mov
xchg
inc
mov
out
sub
mov
pop
flds
cmp
in
out
clc
fidivl
lahf
out
or
insb
sub
shr
call
xchg
ss
jg
sub
out
xor
push
and
ret
sarb
inc
push
pop
icebp
out
mov
adc
inc
ror
mov
outsb
mov
fnsetpm(287
dec
fsubl
xor
pop
mulb
sub
pop
lea
incb
sub
stc
jmp
cmp
fdivl
mov
sub
imul
cltd
jnp
cmovns
in
mov
jns
iret
adc
arpl
scas
pop
dec
fnstenv
inc
push
inc
in
mov
dec
cmp
jg
xchg
mov
inc
pop
push
in
sbb
int3
movsb
ret
movsl
cmp
jmp
aad
cli
pop
adcl
es
sahf
nop
jno
js
mov
int
mov
sti
push
sbb
xchg
aas
mov
and
dec
nop
xchg
sbb
mov
adc
cmp
xchg
stos
pushf
out
or
adc
jbe
sub
mov
mov
add
lock
in
xlat
hlt
inc
fisubs
mov
push
popa
sbb
mov
fbstp
push
rcll
add
dec
pop
jnp
or
clc
mov
shr
mov
adc
xchg
imul
sbb
daa
test
mov
pop
int
dec
adc
bound
jns
setns
inc
mov
push
xor
jo
cli
cwtl
pushl
xchg
subl
add
inc
push
mov
fadds
rcll
and
lods
jl
test
cmc
ret
int3
jle
sbb
cli
pushl
lds
clc
in
ja
cltd
movsl
jl
sub
adc
repnz
cmp
lock
jnp
cmp
fcmove
lret
jo
inc
xchg
test
cltd
sub
dec
mov
jae
mov
cmp
or
xor
sub
jp
fs
fcom
and
imul
jecxz
outsl
popa
pop
loope
insb
adc
ret
and
cmp
enter
repz
cmpsb
lret
lahf
mov
add
push
sub
sbb
push
and
in
xor
lods
in
and
das
arpl
loope
mov
scas
cmp
sti
lock
xchg
pop
jae,pn
in
push
jbe
out
arpl
sti
and
or
inc
and
imul
movsl
icebp
xchg
push
loope
imul
clc
pop
pop
popf
jbe
add
push
push
int3
mov
jns
call
and
pop
push
or
mov
mov
leave
out
fdivp
sub
mov
pop
in
roll
xchg
js
adc
pop
pop
in
lea
scas
and
and
stc
ret
fwait
test
xchg
shrb
sbb
jbe
testb
push
aad
dec
jle
hlt
add
sbb
cld
mov
gs
int
adcb
and
out
subl
sbb
dec
idivb
sub
lods
inc
out
rcll
dec
cld
cmpsb
push
xor
mov
xorl
cmc
dec
sbb
push
push
iret
lods
xlat
mov
testl
sbb
jo
and
mov
loop
addr16
mov
nop
inc
push
mov
xchg
rorb
inc
add
add
push
push
loopne
mov
out
push
pop
jl
mov
pop
mov
inc
jno
mov
movsl
insb
mov
bound
cmp
aad
mov
out
dec
mov
fs
hlt
out
dec
push
cmp
dec
ds
sbb
xchg
inc
xchg
in
repz
shr
mov
pusha
mov
pop
jae
cmpsl
aas
movsl
sbb
test
cmc
fstpt
and
lea
ljmp
cltd
fdivr
cmp
cmp
xchg
dec
xchg
sub
sahf
pop
mov
add
mov
testl
sbb
push
pushf
repz
insl
xor
sarl
sbb
mov
sbb
cmp
ror
xorl
xor
mov
and
lret
stos
jo
in
fs
leave
mov
jno
inc
sbb
xchg
or
push
xor
push
out
ds
mov
or
in
das
movsb
mov
cmp
call
xchg
mov
xchg
push
jbe
cs
xchg
pop
sub
sub
mov
push
pusha
sub
jno
inc
rcll
loop
pop
ss
repnz
aas
xor
or
stos
jbe
mov
mov
loopne
cmp
jg
sub
shl
imul
popa
inc
out
push
pop
or
cmp
xor
stos
push
mov
pop
jae
hlt
enter
add
in
loopne
out
sub
dec
stc
jo
in
dec
je
sub
cmp
cltd
sbb
scas
in
inc
adc
mov
cmp
rorl
jecxz
push
sub
fbstp
xchg
sbb
test
ds
xlat
je
sbb
inc
es
adc
mov
jmp
sbb
sbb
sbb
xchg
loop
jp
cli
adc
iret
pop
push
mov
mov
enter
mov
inc
mov
ljmp
mov
leave
bound
or
dec
jl
add
push
sti
sbbb
and
cmp
jnp
xchg
pop
push
hlt
cmpsb
sbb
jp
push
pop
movsb
loop
mov
mov
inc
stc
push
inc
dec
lea
stos
test
mov
xorl
sub
jo
xchg
das
inc
pop
sub
cld
cmp
xchg
mov
mov
popa
sahf
xchg
imul
data16
inc
bound
jb
xchg
xchg
dec
iret
jg
sub
addr16
and
cmp
je
jae
outsl
push
lods
mov
test
mov
notl
test
pop
imul
loop
or
repz
mov
add
stos
jnp
mov
mov
cld
cmp
and
imul
loopne
arpl
sub
cmp
push
mov
adcl
mov
xlat
sub
push
jo
dec
xor
sbb
loop
cs
loopne
sbb
ljmp
jne
dec
jmp
jecxz
cmp
sahf
rolb
cwtl
call
and
push
push
mov
cmc
cmp
sar
mov
xor
inc
cmp
lahf
popa
mov
cmpb
inc
cmp
add
jno
dec
lret
flds
adc
fldt
xchg
mov
jb
scas
int
mov
cmp
xlat
imul
xchg
add
jbe
xor
xchg
pop
mov
mov
mov
cmp
or
stc
ds
pop
adc
fistpl
inc
xor
jbe
nop
es
dec
setne
ret
aas
or
xor
popf
push
outsl
imul
and
mov
push
push
dec
cmpsl
mov
push
sbb
outsb
or
roll
inc
mov
dec
xlat
inc
jmp
or
fcmovnbe
pushf
mov
sub
and
fmull
jge
lea
jae
xchg
sub
dec
popf
jnp
pop
adc
mov
int3
push
or
notb
xor
ds
pop
mov
mov
pop
add
mov
cli
or
sub
add
cmp
xchg
sbb
dec
popf
mov
ljmp
cmp
loope
jg
mov
add
mov
scas
inc
fwait
dec
test
mov
imul
inc
or
mov
out
pushl
and
outsl
cs
lods
arpl
iret
mov
scas
mov
cmp
pop
loope
push
pop
add
pop
sbb
add
mov
loope
pushf
push
iret
int3
sub
sahf
fcomip
fwait
sbb
hlt
cmp
add
into
ljmp
ljmp
das
pop
into
mov
push
mov
add
out
scas
jno
ss
mov
cli
inc
jae
xor
jp
xlat
fwait
mov
jne
ljmp
pop
cmp
in
pop
sahf
or
aas
dec
aaa
in
jg
rolb
imul
scas
and
push
filds
ja
and
insb
or
xor
lcall
mov
adc
out
add
imul
sub
hlt
in
xchg
outsl
cmp
aas
xor
popf
mov
int
aam
sub
enter
jns
stc
fsubl
jno
pop
pushf
lods
mov
lds
sub
jmp
dec
mov
cltd
jle
and
shrb
arpl
test
mov
jns
scas
das
sbb
in
lret
and
sbb
mov
jae
mov
insl
movsl
stc
mov
dec
xchg
cld
xlat
push
and
cli
push
test
adc
lock
dec
adc
les
xorb
cld
dec
int
movsb
dec
inc
push
xchg
movsl
sub
sahf
stos
das
xor
orb
pop
mov
and
insl
xchg
popa
push
sbb
scas
and
loop
push
push
lods
sahf
xchg
mov
scas
pop
bound
cmp
or
add
in
leave
sub
pushf
push
add
mov
lret
push
sub
out
xor
sbb
inc
iret
xchg
arpl
push
adc
sub
jo
inc
sbb
xchg
pop
add
das
lods
mov
imul
addr16
fwait
imul
les
sahf
out
ds
cltd
jle
test
sub
fadd
cmp
and
nop
icebp
push
mul
into
repnz
clc
and
mov
inc
iret
gs
ss
inc
pop
sub
inc
xor
shrb
fadds
les
push
mov
xchg
lahf
out
lcall
dec
insb
pop
sub
jge
pop
insb
mov
insl
inc
fcmove
mov
sbb
mov
jmp
mov
sbb
mov
dec
cmp
enter
roll
ficoml
jbe
xchg
shr
stos
pop
popa
stos
sbb
in
das
or
jo
mov
lods
or
sbb
jp
push
mov
das
loop
push
xor
push
jg
insb
test
fistpl
push
aam
dec
cmp
and
out
cmp
rclb
xchg
fildl
outsl
cmc
lds
mov
les
xor
test
sub
xor
gs
divl
int
cmc
popa
xchg
adc
test
repz
cmp
add
sbb
xchg
mov
add
inc
adc
scas
push
xchg
lods
cmp
repnz
jnp
add
hlt
int3
movsl
pop
xchg
imul
mov
lods
push
adc
int
repnz
call
mov
test
fdivrl
cmp
out
sti
xchg
mov
push
sbb
pop
mov
push
sbb
mov
xchg
aas
mov
repnz
dec
xor
shll
fcomps
push
lock
out
jae
jmp
pop
repnz
sub
push
cmp
push
inc
mov
stc
loope
mov
pop
mov
add
icebp
mov
inc
repz
test
jne
jno
cmp
ljmp
jp
inc
and
xchg
mov
pop
addr16
imul
icebp
imul
sub
cltd
push
mov
sete
lcall
daa
cli
pop
jecxz
jnp
inc
je
xchg
push
jae
cmp
ds
shl
push
sbb
push
fidivrs
mov
outsb
sub
mov
dec
and
mov
idiv
dec
pop
mov
scas
and
dec
cmp
sahf
stc
dec
xchg
leave
jp
bound
repnz
lods
inc
addb
leave
xchg
jno
adcl
iret
mov
push
xchg
insb
test
imul
sub
div
daa
push
add
movsl
sbb
jbe
add
mov
lods
mov
and
test
sub
lldt
jns
repnz
add
xor
fdivl
inc
out
loope
push
es
inc
add
mov
xchg
addr16
mov
jle
ficoms
imul
out
and
cmp
dec
iret
jg
and
mov
or
xlat
fcomps
enter
hlt
popf
clc
mov
repz
test
push
ds
mov
push
mov
inc
hlt
arpl
dec
cmp
mov
sbb
mov
xlat
rcrb
out
push
jmp
jo
in
jp
and
and
mov
jne
pusha
adc
mov
or
mov
fucom
and
dec
sbb
lods
sarb
mov
les
push
notl
repz
rcrl
mov
add
in
fisubl
out
pop
dec
mov
pusha
insb
dec
jge
roll
cmp
jbe
loopne
es
xchg
push
in
jle
aad
loopne
fs
sub
es
inc
out
imul
bswap
push
repnz
cmpsb
mov
mov
mov
dec
dec
xchg
out
inc
jecxz
aad
cmp
das
stos
push
lea
or
pusha
imul
inc
jmp
mov
sbb
or
inc
pop
jns
ret
sub
jmp
jno
xor
adc
sbbl
test
fsubrl
lods
faddl
mov
fmulp
mov
ljmp
incb
and
addl
aad
push
out
and
mov
mov
mov
call
pop
popa
aas
jmp
insb
pop
das
sbb
dec
fcmovu
sbb
jmp
add
jecxz
jecxz
push
sub
push
les
inc
popa
pop
dec
xchg
xor
lods
mov
cmc
xchg
nop
jo
add
adc
mov
fsubrs
adc
dec
jecxz
cs
dec
add
ret
jp
cmpsl
pop
in
jnp
mull
stos
cmp
sub
sub
shrl
xchg
iret
xchg
xchg
add
arpl
outsl
and
fistpl
sub
fdivl
shlb
repz
mov
mov
int3
aad
movsl
lods
test
fnstenv
dec
pop
xchg
aam
push
mov
or
divb
andl
or
inc
mov
lea
rcrb
loope
idiv
and
xlat
inc
mov
or
in
adc
pop
lods
push
into
jbe
js
or
mov
jnp
push
inc
insl
jp
cmp
aam
nop
sti
lahf
dec
das
push
or
fs
adc
ficoms
jne
stos
pusha
test
mov
pop
ds
lcall
mov
push
outsl
jp
inc
aad
mov
iret
loopne
add
inc
test
jnp
inc
pop
gs
out
imull
mov
sub
mov
test
ds
sbb
mov
loope
adc
in
cld
xchg
repnz
mov
les
hlt
xchg
test
les
outsb
std
dec
out
inc
lods
outsl
out
nop
dec
mov
fdivrs
push
dec
jnp
adc
fstps
mov
lret
push
jae
stos
push
aam
loopne
mov
movsb
sub
rolb
inc
decl
pop
adc
ds
sarb
popa
test
ljmp
loope
movsl
lods
push
sahf
cld
loop
xchg
inc
xchg
cmpsl
popa
or
sub
pop
addl
dec
mov
xor
push
test
lods
ret
cmc
ret
mov
ljmp
jne
jmp
push
mov
adc
add
push
in
cmpsb
enter
jnp
xor
imul
ja
jbe
jmp
cmp
ss
dec
std
push
jmp
mov
mov
push
lods
dec
or
xor
imul
mov
jge
data16
dec
gs
pop
hlt
repnz
cmpl
and
jns
or
mov
mov
enter
imul
fwait
dec
aad
mov
in
push
mov
clc
pop
adc
ss
hlt
loope
out
mov
mov
in
push
dec
or
push
jle
dec
adc
out
xchg
in
adc
jecxz
arpl
jae
add
cltd
aam
mov
out
cld
mov
je
clc
lcall
je
pusha
dec
addl
mov
dec
es
cmp
call
shrl
imul
dec
inc
xchg
int
and
push
jne
int3
inc
mov
fcompl
xchg
sbb
aam
imul
xor
fcmovnbe
add
fadd
jno
xchg
pop
inc
stc
rclb
fbstp
std
add
cli
inc
pop
push
push
data16
lods
imul
movl
jnp
mov
imul
inc
in
mov
aam
lods
fs
nop
pop
loope
shlb
mov
into
xchg
mov
push
js
ret
icebp
scas
mov
lods
push
rcr
fimull
push
xchg
lcall
pusha
xchg
adcb
sbb
sbb
cltd
aam
xor
daa
xorl
sub
mov
xor
bound
xchg
mov
adc
cld
ret
push
test
sbb
or
mov
xor
mov
aad
stos
push
ret
add
repz
incl
ss
je
fadds
adc
std
roll
inc
and
sub
jae
cmp
xchg
or
push
es
mov
fs
dec
int3
movsl
mov
pop
scas
call
cmp
lcall
pop
ja
popf
adc
pop
push
out
pop
call
daa
subl
movsb
imul
iret
cmp
faddl
arpl
enter
add
in
ds
enter
lds
aas
or
out
icebp
xchg
cmp
out
cmp
cmpsb
pop
jmp
pop
pop
pop
mov
aad
adc
xchg
rcr
jecxz
enter
shr
fiaddl
xchg
div
ljmp
sti
xchg
lods
sarb
ljmp
popa
or
sub
inc
test
add
sahf
imul
lods
leave
mov
xor
dec
xor
lods
cld
jb
mov
xchg
fdiv
pusha
lret
stos
jmp
rcrb
js
nop
orl
mov
cwtl
mov
lods
mov
mov
lahf
hlt
and
rcrb
push
or
or
insb
lret
popf
lods
pop
lods
cmpsl
push
xchg
sbb
gs
xchg
icebp
fucomi
inc
dec
aaa
pop
cmp
xor
scas
cmp
fwait
subb
cmpsl
push
sbb
test
jne
xchg
loopne
jb
push
mov
stc
nop
push
mov
xchg
ja
insl
je
shlb
je
cltd
loop
mov
xchg
int
sbb
cmp
adc
xchg
rorl
sbb
adc
push
cltd
out
cld
pushl
ret
outsb
lret
icebp
jecxz
test
testl
or
ja
dec
inc
xchg
add
sub
mov
in
ret
ds
stos
ja
adc
add
pop
test
or
mov
les
cwtl
jae
sbb
or
bound
jmp
movsb
pop
into
cwtl
jg
iret
mov
push
shll
cltd
jg
icebp
sub
test
mull
loopne
jp
stc
jge
mov
push
inc
mov
lret
clc
and
xchg
push
jo
push
test
mov
fdivl
or
fildll
xchg
sub
shll
jp
data16
dec
dec
jno
negl
stc
pop
loope
jmp
mov
fcmovnu
mov
adc
push
ret
xchg
fld
loop
stos
adc
imul
testl
jp
mov
mov
sub
sbbb
sti
popa
sbb
jne
cs
cmp
mov
and
mov
aad
sahf
jmp
jmp
movsl
mov
sbb
test
sbb
sbb
push
test
jp
fsts
out
mov
int
sub
adc
jbe
mov
imul
aas
push
mov
es
inc
sub
in
inc
xchg
jns
pop
push
mov
in
pop
mov
xor
fisubrl
mov
jnp
pop
add
repz
mov
aad
les
mov
jae
mov
push
cmp
mov
jno
adc
sub
add
popf
inc
les
xchg
lea
push
adc
mov
lods
mov
and
cltd
mov
mov
pop
fsts
stos
lret
add
jae
mov
fisttps
and
movsl
loop
xchg
insb
das
inc
pop
jg
ds
and
fisubl
dec
cli
xor
int3
dec
cwtl
xchg
lock
rcrb
jno
xchg
push
and
mov
out
sbb
dec
mov
push
pop
sub
or
sbb
inc
xchg
ret
dec
and
cmp
push
push
repz
add
adc
fcompl
inc
mov
xor
adc
sub
push
inc
int
push
push
mov
jbe
loop
dec
jg
pop
hlt
aaa
pop
mov
cmpsl
adc
xchg
cltd
shr
sarl
jl
sbb
push
sahf
jmp
jno
and
pop
arpl
sbb
cld
test
outsl
ret
lods
nop
out
mov
adc
fsubs
adc
imul
inc
dec
push
jmp
les
ss
inc
insb
loop
rolb
dec
rolb
mov
in
jb
test
fisttpll
add
jmp
xchg
fwait
or
sub
fadd
mov
push
clc
pop
xlat
jne
cmp
pop
in
xchg
sbb
xchg
mov
jae
loope
cld
rolb
xor
outsb
xor
xor
mov
pop
xchg
jge
jecxz
push
sahf
int3
js
dec
xor
cmp
mov
cwtl
imul
outsb
pop
push
xor
imul
daa
dec
vmovlpd
je
push
jp
mov
mov
push
les
dec
and
pop
dec
lds
insl
jl
stos
adc
hlt
inc
mov
dec
sub
popa
lea
push
bound
decb
xor
aad
adc
fcoml
ficompl
push
out
test
js
test
loop
lret
inc
movsl
rclb
lret
test
mov
subl
xchg
gs
imul
test
xlat
dec
pop
xchg
fistl
sbb
aad
insl
adc
repz
cmp
add
decb
or
js
pop
mov
xor
in
mov
mov
popa
rcrl
fadds
cli
sub
add
or
stos
cmc
ret
xchg
mov
popa
lods
fists
andl
cltd
adcb
inc
mov
syscall
das
adc
xor
pop
cmp
mov
xor
orb
fimull
adc
outsb
xchg
cmpsb
mov
mov
sub
jmp
out
mov
mov
sarl
aas
fidivrs
jo
imul
adc
mov
adc
mov
xchg
mov
shl
insb
mov
jecxz
jnp
jno
dec
test
into
jle
je
mov
xchg
mov
imul
push
sub
or
bound
jmp
jge
mov
mov
out
outsb
jo
or
push
clc
pop
in
iret
rcr
pop
ret
mov
sbb
push
sbb
out
and
mov
pop
iret
ds
and
popa
cmpsl
loope
sbb
enter
out
mov
ja
jae
pop
enter
dec
mov
stc
xor
je
xor
ficomps
sub
andl
fucomi
xor
sarl
fdivrl
xchg
dec
call
add
dec
mov
out
fiadds
adc
orb
hlt
addr16
lds
imull
mov
mov
fcmovu
lock
mov
es
push
pop
pop
and
in
mov
iret
not
xchg
mov
scas
stos
mov
fldcw
pop
movsl
add
mov
cmp
jae
mov
jno
neg
add
pusha
fmulp
add
mov
in
jns
arpl
or
pop
lcall
outsb
aas
lret
cs
mov
ret
aam
cmpsl
imul
push
add
aad
mov
loope
pop
mov
test
sahf
dec
jnp
jb
sarb
pop
std
jle
mov
push
mov
stc
fisttps
ljmp
pop
mov
jnp
test
push
out
push
int
or
push
cmpsl
cld
add
mov
xlat
loope
insl
mov
jb
pop
cmp
loope
and
inc
sub
sub
jg
lods
mov
inc
adc
into
js
mov
ret
xor
dec
sarl
rorb
mov
push
push
jno
mov
mov
rcll
ret
fwait
add
ljmp
addl
aas
sbb
mov
xor
inc
ljmp
pop
adc
nop
mov
stc
fs
repz
inc
cli
enter
mov
add
addr16
push
pop
or
imul
dec
push
sbb
in
mov
mov
jmp
and
cmp
cmp
push
dec
push
scas
xchg
inc
in
fstl
pop
dec
popa
stos
pop
mov
test
hlt
mov
add
mov
mov
outsl
jbe
push
fstpt
sub
jno
incb
test
push
adc
sbb
enter
cltd
imul
into
dec
cmp
dec
call
inc
insl
mov
add
or
roll
mov
out
stos
fwait
add
cs
xchg
or
imul
lcall
or
xorb
jae
cmp
out
mulb
adc
mov
es
mov
mov
cs
rorb
fiaddl
mov
push
dec
jmp
cli
pop
add
mov
xchg
inc
xor
mov
push
repnz
ds
repz
in
cltd
mov
jns
xchg
rcrb
and
aad
rorl
lock
add
movsl
mov
mov
jb
incb
adc
lods
lret
mov
pushf
sbb
aad
and
xchg
mov
inc
dec
push
sub
push
mov
xor
push
sub
push
and
lods
jg
add
adc
sbb
or
mov
loope
push
mov
dec
inc
js
pop
cmc
mov
inc
dec
movb
or
sbb
cwtl
mov
filds
popa
fwait
jmp
out
dec
lds
fs
and
dec
pop
jge
add
daa
adc
sbb
jp
dec
mov
xchg
iret
xchg
jmp
in
lods
fdivs
adc
ljmp
sahf
cmc
inc
add
lahf
lods
pop
orl
fmull
lock
jecxz
rcrb
and
outsl
fldenv
shrl
mov
pop
sbb
cmpsl
mov
push
rcrl
scas
pop
lods
pop
pop
les
movsb
std
stos
in
xchg
mov
int3
pop
push
pop
pop
sub
es
or
push
cmp
test
or
lcall
cmp
dec
mov
clc
lret
jae
fldenv
imul
lret
cmp
out
mov
dec
jmp
into
pop
inc
sbb
dec
xor
lret
outsb
xchg
les
popa
clc
xchg
loopne
sub
push
insl
aaa
and
ret
or
stc
adc
lea
adc
add
out
loope
adc
fdivs
mov
aas
xchg
pop
addr16
loopne
push
sub
push
imulb
cld
inc
xchg
cwtl
and
lock
arpl
mov
dec
and
pop
jmp
pop
jns
jmp
es
stc
push
test
call
fisubrl
orb
or
xchg
into
xor
popf
mov
dec
int3
jge
jnp
outsl
push
and
js
mov
or
ja
fisubs
fldenv
or
cld
xor
call
push
arpl
rcll
loopne
cmp
or
lcall
and
rclb
sarl
pop
add
outsb
aam
xchg
or
pop
filds
in
out
loope
out
mov
jmp
xchg
mov
cmp
jnp
push
mov
cmp
cmpsl
or
mov
mov
push
dec
sbb
dec
adc
fstp
sbb
lods
cmp
outsl
xchg
push
lret
repnz
sbb
nop
jl
sub
jo
mov
dec
test
popf
adc
out
mov
dec
test
xchg
call
add
les
dec
arpl
pop
push
mov
loop
out
jo
in
sub
fidivs
mov
std
cmpl
lock
pop
mov
xor
iret
sbb
push
lret
mov
in
lds
and
add
mov
push
jne
scas
inc
lret
xchg
loopne
adc
jle
js
push
pop
aad
pop
movsb
daa
adc
faddl
lods
pop
iret
pop
add
sbb
push
sbb
repnz
pop
mov
pop
loop
popf
pop
jbe
lret
pop
inc
xchg
cli
mov
mov
test
sub
std
ffreep
out
mov
and
fst
jl
add
sbb
push
mov
ficoms
push
ss
sub
add
push
fcompl
mov
das
out
sar
mov
push
movb
ret
lds
repz
lcall
xchg
clc
add
mov
insb
bound
push
jne
and
fcmovu
mov
ret
ss
jle
les
or
test
xor
lods
push
out
ss
inc
mov
roll
xchg
in
adc
movb
insb
fstps
loop
jnp
cmp
negb
jo
mov
cltd
lods
jb
pop
push
add
scas
ja
xor
add
in
and
jae
fidivrs
addb
xchg
mov
lds
cmovle
jb
pop
ds
mov
xor
xchg
imul
or
insl
out
or
xchg
push
cmpsb
rcl
add
ret
repz
or
mov
mov
aad
fsubrl
stos
shrl
and
jno
cmp
jbe
mov
sbb
int3
ljmp
int
and
cli
inc
insl
cmpsl
xchg
add
add
std
mov
adc
jl
repz
notb
dec
out
jns
movsl
sbb
mov
pop
test
and
and
enter
fsub
lea
mov
jmp
mov
pop
in
sub
popa
imul
lcall
movsl
lods
out
xchg
inc
mov
daa
lock
adc
adcl
jecxz
add
test
add
fwait
mov
jno
sbb
test
fucomi
lcall
cmpb
repnz
mov
outsb
bound
int
out
outsb
or
xchg
adc
push
insb
int3
int
sub
mov
daa
mov
mov
push
dec
cs
notl
out
repz
pop
mov
cmpl
clc
xlat
dec
mov
test
cmpsl
inc
push
cmp
icebp
push
mov
call
scas
pop
daa
arpl
shrb
push
xchg
inc
lcall
mov
inc
outsb
lods
mov
adc
test
js
stos
or
pushf
fisttps
in
test
mov
sub
and
cli
lods
pop
add
testl
lea
stos
cmc
push
inc
push
add
sub
scas
xor
arpl
fwait
cltd
dec
jmp
adc
aaa
pop
sti
xchg
out
or
pusha
adc
inc
mov
mov
mov
or
movsl
pop
lret
insb
notb
lds
ljmp
mov
sbb
enter
out
pop
inc
add
stc
pop
stc
mov
arpl
fsubrl
mov
dec
stos
cld
ss
out
loopne
dec
and
mov
pop
and
inc
scas
movsl
sarl
xlat
pop
push
sub
xchg
mov
std
pop
fldl
mov
mov
mov
adc
inc
xor
jecxz
or
lods
mov
cwtl
into
sbb
fnsave
ret
xlat
mov
inc
into
movsl
and
pop
aas
mul
outsl
or
fisttps
loope
xlat
es
lea
push
pop
icebp
lea
jl
mov
sub
mov
dec
sbb
std
jecxz
mov
mov
int
mov
aaa
inc
out
push
push
or
leave
inc
adc
bound
push
cmp
gs
lret
inc
aad
inc
add
in
stos
stos
lods
jo
movsb
cmpsb
push
or
mov
cbtw
mov
mov
sbb
xor
pop
mov
popa
or
addr16
jbe
fmull
adc
add
scas
push
popf
sub
ja
int
cmpsb
out
ss
popf
loopne
les
adc
pop
inc
adc
cld
adc
test
push
jp
mov
inc
stc
jl
sbb
clc
fstps
mull
mov
loopne
mov
das
sub
mov
movsl
in
xchg
movsl
sub
pop
push
mov
add
add
imul
shl
out
or
adcb
subb
dec
xor
inc
fwait
subl
adc
pop
cmp
test
movsl
mov
and
jbe
addr16
inc
push
mov
mov
popf
int3
fs
mov
jo
push
add
lret
dec
pop
daa
ret
out
inc
movl
and
inc
sbb
or
cmp
mov
jp
cmp
sbb
das
fmul
lret
insl
imul
lods
mov
xorb
jno
pushf
xor
int3
jg
inc
std
repnz
or
xchg
in
cmp
lret
mov
cmp
jb
nop
jle
or
dec
mov
sbbl
out
jne
xchg
xlat
pop
add
into
push
dec
jl
shll
xchg
xor
scas
or
push
rorb
mov
push
inc
iret
sbb
shll
dec
std
leave
movsl
js
leave
push
mov
adc
outsl
add
lods
push
push
lahf
sbb
popa
test
pop
sub
xchg
jb
call
dec
je
packuswb
in
fsubr
imul
loopne
lods
mov
mov
rcll
sub
mov
push
sub
call
pop
add
scas
dec
aam
out
sbb
and
dec
mov
mov
cmpsl
lahf
and
push
lret
jnp
cld
fnstenv
movsl
daa
lahf
call
mov
pop
push
xor
fimull
dec
movsl
mov
test
ret
clc
stos
inc
repz
xchg
ja
sahf
inc
add
pop
dec
inc
mov
cltd
xchg
and
push
ror
mov
adc
into
stos
in
imull
shl
ret
ror
push
adc
sub
std
aas
lods
imul
rclb
xor
bound
push
and
xchg
mov
test
lcall
cmp
das
sub
ljmp
mov
cli
pushf
xor
mov
in
fs
jecxz
mov
dec
lods
testb
js
test
sbb
mov
out
mov
mov
stc
and
cltd
push
mov
jno
or
int
outsl
maxps
stc
test
xor
dec
test
xchg
or
test
lods
enter
fildll
and
mov
aaa
or
mov
mov
xchg
fstpl
inc
sbb
jne
cld
dec
inc
dec
jns
or
cmp
sub
jge
pop
xchg
lods
jg
and
popa
sub
jne
add
add
sbb
cmpsb
mov
jmp
fnstsw
cld
pop
mov
mov
addr16
ret
sarb
popf
and
xchg
mov
in
pop
mov
push
scas
lods
push
movsl
sbb
sbb
xorb
dec
std
mov
gs
jne
add
push
bound
shll
loopne
fs
clc
push
fsubrs
not
pop
adc
dec
pop
inc
movsl
cmp
rolb
or
mov
div
cli
lds
test
xchg
pop
jne
cmp
in
fimull
in
push
jle
je
push
popf
inc
out
cwtl
outsb
std
xchg
xchg
aad
xchg
test
mov
mov
pop
out
and
test
aam
push
mov
xchg
test
add
push
nop
arpl
jge
push
lret
mov
mov
pop
lret
push
add
inc
out
push
add
enter
sbb
jmp
addr16
pop
ret
lea
dec
sbb
aam
jecxz
scas
rcrl
in
or
add
mov
pop
cmpsl
dec
mov
fs
mov
cmp
sbb
andl
and
fdivs
aad
mov
mov
mov
push
jns
push
mov
adcb
adc
pop
cmp
bound
iret
and
int3
sub
xorl
repz
mov
sti
jne
mov
sbb
in
xorb
call
adc
into
push
or
inc
mov
stos
pop
dec
mov
jnp
mov
int3
cmova
jp
jne
call
mov
dec
or
sbb
mov
cld
add
out
jmp
mov
push
and
mov
pop
jl
jecxz
fisubrs
imul
loope
add
movb
or
push
scas
enter
pushf
mov
in
pop
cli
cmp
fwait
xchg
adc
xor
fldenv
inc
adc
stos
rclb
sub
fidivs
inc
insb
loop
pop
xchg
xor
int
inc
fldt
out
repnz
repnz
xor
cmp
inc
adc
mov
cs
push
sub
cmpl
pop
cmpsl
xor
nop
pop
dec
loopne
xchg
xlat
lret
mov
gs
in
movb
mov
add
fisubl
faddl
or
out
mov
les
mov
js
arpl
xchg
inc
pop
iret
dec
cli
sbb
cmp
mov
jb
jne
fildll
inc
movsl
push
icebp
jp
mov
in
xor
push
cmpsl
ret
and
cmp
add
mov
repz
xchg
movsl
in
ja
pop
sub
mov
popa
xchg
push
aam
sub
xor
mov
xlat
movsl
mov
leave
and
xchg
or
cli
cmpsb
sarl
or
cmpsb
mov
or
adc
mov
fsubrl
mov
daa
adc
js
fs
and
sub
or
jmp
scas
scas
xor
fadds
das
lret
outsb
jge
pop
addl
imull
mov
inc
mov
jae
adc
lock
aas
xor
stos
ja
xchg
inc
mov
cmp
shlb
nop
lcall
test
pop
jg
int3
pop
hlt
push
mov
mov
push
mov
fistl
mov
xchg
pop
inc
cmp
rorb
insl
xchg
mov
in
shrl
mov
xor
rolb
jnp
icebp
int
aad
mov
and
cmp
pop
sbb
add
jle
or
jg
jne
setne
out
lret
push
movsb
hlt
test
inc
xchg
mov
dec
lods
mov
adc
adc
jns
lock
lods
lret
mov
jnp
inc
jb
rorl
hlt
dec
mov
jbe
test
aam
lock
cmp
jne
mov
xrelease
ja
mov
aam
nop
and
cmpsl
and
xchg
inc
fisubs
outsl
add
adc
mov
setno
sub
out
in
daa
je
adc
sub
repnz
lock
sub
inc
mov
cltd
in
mov
stos
and
xor
mov
stos
pop
pusha
scas
ret
aaa
push
out
daa
sub
push
data16
xlat
sub
das
dec
add
push
jl
pushf
gs
cmp
out
popa
push
out
orb
mov
mov
mov
pop
pop
inc
enter
dec
mov
addr16
aam
ficoml
pusha
push
ficomps
cmp
inc
roll
pop
lahf
fsincos
in
je
cmp
sbb
or
cmpsb
out
scas
data16
mov
lods
dec
or
scas
cmp
sbb
mov
std
inc
mov
mov
es
es
and
jp
sbb
mov
push
or
fistpll
push
sbb
lds
les
pop
inc
das
pop
xchg
mov
outsl
push
jecxz
ret
inc
daa
xchg
xor
mov
ss
loopne
loopne
jne
cmp
rcrl
jns
mov
mov
mov
pop
leave
hlt
mov
shll
mov
or
xor
push
mov
lcall
ret
mov
int3
sbb
xchg
into
scas
mov
out
fbstp
jae
in
daa
insl
push
inc
lods
into
add
sti
push
add
fisubrl
lea
repz
ljmp
adc
mov
xchg
popa
push
cwtl
stos
cwtl
pop
test
test
pop
cmp
xor
push
mov
mov
push
cli
xor
xchg
enter
mov
repnz
ss
popf
orb
aas
repnz
mov
cmc
mov
and
sbb
xchg
arpl
fwait
adc
int3
mov
aam
fwait
push
pop
add
cmp
dec
add
sub
inc
test
js
xchg
and
pop
jno
fadd
loop
sub
inc
pmuludq
in
out
decb
in
sbb
mov
addl
fstp
cmp
jmp
imul
jo
jecxz
jne
gs
in
movsl
mov
xor
and
std
adc
or
xlat
or
ja
cmp
pop
xchg
jb
add
xchg
dec
mov
jnp
mov
mov
push
lods
pop
mov
js
lea
xorl
in
pop
xor
out
ss
dec
mov
jg
negl
adc
sbb
cmp
mov
decb
xchg
jmp
mov
cmp
inc
iret
push
ljmp
push
cmc
stos
push
adc
sub
adc
push
jne
and
push
jb
add
jl
mov
xor
stc
imul
mov
mov
dec
dec
adc
in
clc
jno
push
or
jne
scas
addl
aam
addr16
subl
mov
inc
jne
ljmp
out
and
push
push
add
xchg
rorl
mov
pop
xor
mov
outsb
xchg
cmp
jge
test
and
fsts
jae
sub
inc
stos
sub
icebp
adc
outsb
and
clc
sti
shlb
fimuls
xchg
mov
in
dec
push
fldt
imul
cmp
outsl
cmpsl
inc
mov
cmpsl
sub
sub
jnp
adc
push
and
and
mov
cmp
sub
in
jle
inc
xchg
fsubrs
mov
gs
stos
ss
fsubrl
jae
in
fs
lcall
out
dec
and
fwait
cmp
or
dec
test
xchg
stos
mov
scas
insl
add
xchg
push
pop
imul
cmp
cltd
adc
iret
pop
sahf
in
aam
jnp
dec
push
jl
sbb
push
fldenv
bound
jno
out
inc
rolb
stos
and
and
mov
cltd
mov
jl
fwait
jecxz
or
pop
jns
or
mov
push
xchg
cmpsl
cmc
clc
jbe
fwait
or
cld
into
mov
popa
push
push
jo
jbe
repz
pop
rcrb
lock
jo
adc
cmp
mov
int3
loope
push
jle
mov
jmp
mov
fmuls
jno
dec
or
mov
imul
push
in
pop
data16
xor
sub
clc
xchg
out
sub
std
lcall
push
add
inc
js
stos
and
movsb
add
repz
mov
aas
push
pop
xor
mov
or
sbb
xor
dec
mov
add
and
sub
aaa
fsts
mov
data16
pop
push
inc
repz
fldenv
andl
dec
out
out
movsl
pop
cmpsl
jecxz
push
push
shll
push
fcmove
pop
cmp
inc
add
cmp
cmpsl
fwait
jnp
push
fcompl
pop
negl
mov
pusha
jae
rorb
push
jae
and
pop
jo
in
add
shlb
jne
mov
loop
test
and
adc
push
and
imul
and
mov
jle,pt
mov
cmp
mov
pop
shlb
inc
pop
mov
call
sahf
sbb
cli
fistl
mov
adc
fucom
iret
int3
lea
imul
or
xor
fwait
aam
fnstenv
sbb
inc
jmp
arpl
stos
push
dec
and
sbb
sbb
cli
push
loop
nop
insl
call
xorb
ret
push
test
popf
mov
outsl
nop
sarb
sbb
fildll
sbb
outsl
mov
push
or
cmp
dec
add
hlt
xchg
ljmp
fsubp
sarl
dec
dec
data16
insl
sub
sbb
mov
aaa
adc
lods
loop
outsl
jne
mov
stc
dec
jno
in
jbe
test
add
mov
orl
loop
outsl
push
cli
cwtl
jnp
call
pop
in
pusha
hlt
xchg
fidivrs
daa
xor
sub
sbb
push
ret
inc
adc
dec
addr16
mov
dec
lcall
fadds
or
or
movsl
shll
scas
cmc
test
adc
ss
add
pop
test
imul
add
out
lods
rolb
leave
cmp
cmp
jg
das
add
sahf
jb
clc
mov
lds
lcall
push
iret
jl
or
xchg
pop
push
movsl
adc
arpl
stos
sbb
cmc
jb
jne
and
inc
pop
inc
out
lods
sub
inc
pop
xchg
cld
mov
imul
dec
fsts
fwait
mov
int3
scas
push
loope
lods
gs
es
dec
xchg
xchg
mov
cmp
std
aaa
scas
shll
mov
push
jle
inc
lock
loop
xlat
ja,pn
mov
dec
ret
adc
dec
fsubl
inc
mov
sub
xor
sub
xor
adcb
rorl
cwtl
bound
pop
pop
test
cmp
cmp
fwait
push
nop
int
jl
jae
js
jno
dec
inc
xchg
adc
dec
shl
pop
test
mov
sbb
xchg
xor
int
ds
aaa
or
add
jbe
out
cwtl
jne
aad
decl
jno
stos
fsub
imul
and
mov
sub
dec
jecxz
cmpb
out
sbb
push
fdivrs
sbb
pop
scas
je
insl
subb
ds
lods
clc
or
out
xchg
paddsb
std
cmp
in
or
and
xor
out
mov
or
mov
add
inc
js
xor
pop
insl
mov
lahf
insl
dec
aam
jmp
mov
xor
je
repz
loop
sarb
das
loope
inc
aas
call
pop
and
dec
ffreep
jb
fsub
addr16
dec
inc
ret
push
iret
jo
cmp
mov
adc
cltd
out
not
cmc
or
ss
imul
jbe
data16
push
xchg
fisttps
inc
dec
les
stos
pop
shr
insl
mov
push
push
daa
loop
aas
or
icebp
clc
popa
mov
repz
adc
dec
insl
pop
lcall
and
insl
les
clc
flds
js
repz
add
mov
sbb
outsb
add
daa
sbb
lahf
out
jle
xor
jo
and
xlat
mov
xchg
and
call
in
jo
and
mov
mov
pop
and
stos
cwtl
jne
mov
cmp
cmp
and
stos
shlb
iret
daa
subl
mov
shlb
cli
imul
sbb
outsb
push
push
mov
mov
mov
cmp
or
daa
cli
add
mov
and
int3
mov
fidivs
pusha
shl
mov
call
movb
push
outsl
je
mov
push
dec
out
jnp
add
jnp
pop
cld
fstp
xchg
fmul
loope
sub
out
js
mov
sub
out
fiaddl
adc
test
or
inc
add
sbb
subl
cmc
or
push
lock
push
jno
mov
arpl
mov
sub
sub
pop
adc
in
repz
sbb
xchg
test
stos
cmc
and
roll
fbld
add
ret
mov
pop
fcomps
test
push
jns
cmp
xchg
std
lcall
lods
push
aad
sub
push
sub
and
xchg
pop
xchg
shlb
pusha
xchg
in
xchg
orb
pop
lds
jmp
push
pusha
cmc
dec
mov
loopne
das
jle
sbb
or
or
mov
dec
aam
sbb
sub
fs
pop
push
stc
jno
push
div
mov
xchg
inc
xchg
dec
sub
mov
mov
mov
rcll
cmp
outsb
or
stc
int3
mov
and
push
mov
mov
fbstp
push
cmp
xchg
lahf
cmp
mov
mov
add
jnp
test
sbb
mov
xor
out
gs
adc
lods
or
adc
leave
in
lods
pop
xor
jno
pop
add
push
mov
outsl
lahf
stc
add
fidivl
pop
or
mul
mov
idivl
dec
mov
push
fimuls
lock
mov
xchg
outsl
sbb
and
mov
fs
push
xchg
sub
call
outsb
andl
clc
add
ljmp
sub
pusha
ficomps
dec
mov
movsl
jge
cmc
xchg
ret
sbb
jb
out
pushf
pop
push
cmp
dec
cmc
div
movsl
jo
inc
cmpsb
jne
pop
cmpsb
sar
mov
inc
sbb
mov
arpl
lcall
push
loope
or
clc
fcmove
adcl
arpl
push
mov
mov
mov
aam
mov
jae
inc
mov
fistpl
jmp
lret
mov
in
imul
and
xchg
adc
pop
shl
bound
dec
je
outsl
gs
out
and
repz
jne
push
pop
mov
into
cmp
cltd
repnz
pop
pop
lret
call
call
loop
jo
ficoml
iret
pop
push
fbld
mov
popf
repnz
cmp
adc
shll
add
test
sub
bound
mov
xor
fmull
jns
div
or
push
xchg
orl
sbb
dec
dec
add
push
cmp
das
testl
jo,pt
in
arpl
jl
aaa
mov
lods
jnp
mov
pop
cmp
outsb
mov
std
xor
xor
jecxz
dec
mov
xor
iret
pop
leave
in
push
test
push
inc
mov
addr16
std
int3
lods
stos
jmp
dec
xchg
cmpsb
dec
cmp
xor
fucomip
xchg
push
jecxz
arpl
push
or
mov
and
mov
fnstenv
inc
and
outsb
jg
push
fwait
sarl
cli
jp
mov
cmp
mov
or
and
out
add
add
pop
mov
ret
std
or
jle
xchg
insl
fs
mov
add
mov
sub
mov
loop
pop
sub
stc
clc
ja
sbb
es
inc
shrl
shll
fwait
addr16
lea
loope
inc
out
into
cmp
sbb
push
cmp
mov
xchg
les
popf
add
incb
cltd
dec
loop
jnp
xor
out
xchg
ljmp
sub
ss
xor
enter
adc
pop
fisubrl
pop
lock
movsl
add
hlt
into
stos
gs
cli
xchg
dec
mov
inc
dec
pop
stos
add
pop
call
and
in
enter
lods
nop
enter
fsts
or
mov
xchg
sbb
enter
adc
and
jae
cmp
movsl
mov
lahf
mov
pop
and
lock
test
cmp
sti
sub
mov
push
sub
xor
inc
loopne
sbb
push
sbb
clc
jmp
lcall
and
adc
sub
push
or
mov
notl
test
adc
pop
adc
mov
xchg
out
jecxz
loop
scas
leave
mov
call
xchg
mov
push
cmovle
dec
flds
rcr
cwtl
bound
sarl
xchg
mov
pop
mov
push
arpl
sbb
xor
pop
imul
mov
cmp
xchg
ficompl
cmp
jmp
sub
cmp
push
xchg
rolb
mov
scas
jecxz
xchg
dec
loopne
sub
or
mov
andl
movsl
xor
mov
outsl
mov
mov
adc
push
int3
dec
in
cmp
xchg
jl
loope
push
fdivrl
lods
inc
out
addr16
jl
bound
sbb
imul
nop
test
test
mov
stc
pop
or
shl
fs
mov
fistpll
mov
jecxz
mov
and
mov
das
sbb
pop
repnz
pushf
sbb
ret
add
nop
daa
push
scas
arpl
jp
cmp
inc
lea
pop
add
push
sbb
cmp
leave
in
cs
mov
add
ret
mov
adcb
dec
mov
ret
and
std
and
adc
ljmp
sbb
lret
mov
in
jle
pusha
jne
or
gs
push
jno
mov
mov
xchg
pop
dec
test
and
lret
bnd
mov
add
sbb
jb
stos
lods
push
out
std
xchg
rcll
negb
fisttpl
or
cmpsl
nop
push
xor
test
push
mov
test
jecxz
ja
rcll
jbe
in
shlb
adc
adc
outsb
loope
into
xchg
cs
dec
adc
rol
lahf
inc
ja
pop
cltd
insb
loope
andl
mov
mov
scas
lcall
cmpsl
arpl
xor
push
mov
mov
cli
dec
xchg
andb
cs
sti
fildl
adc
insl
ss
stos
pop
test
push
jno
mov
add
lahf
lods
fadds
aad
ret
imul
add
jle
mov
pop
test
sbb
cmp
cmc
mov
insl
pop
scas
xor
stc
xchg
daa
lods
or
out
filds
in
jbe
es
ret
jb
add
and
xchg
fsubrl
lahf
imul
mov
repnz
jo
push
pop
add
cmp
movsl
dec
sbb
push
xor
jb
inc
adc
mov
dec
cld
fildll
dec
or
ja
adc
fs
add
mov
mov
andl
dec
cvttps2pi
push
sbb
jno
sahf
inc
sub
xor
mov
imul
lea
xor
std
fwait
loopne
movsbl
dec
dec
sbb
inc
aam
lahf
ja
in
add
or
dec
jge
mov
mov
mov
in
xor
js
je
cmp
xor
pop
loopne
adc
push
inc
iret
aam
cmp
xor
cmp
mov
mov
scas
push
pop
inc
mov
scas
pop
xchg
ljmp
xchg
pmulhw
leave
leave
data16
sbb
adc
and
fcmove
lods
imul
inc
ret
add
fistps
into
popf
iret
adc
aaa
dec
fisttpll
xor
fcomp
sub
popf
cmc
fdiv
popa
xchg
jecxz
int
daa
lds
and
xchg
pop
jl
addr16
jmp
test
jmp
int3
leave
xchg
packsswb
inc
mov
pop
add
adc
mov
mov
ja
mov
jg
sahf
mov
iret
sbb
jp
jb
pop
mov
jo
pop
push
or
std
jg
mov
jo
test
pushf
adc
jae
jmp
divl
aas
imul
sti
sbb
xchg
es
sbb
fxam
dec
and
testl
inc
sbb
sahf
lahf
cmp
or
add
and
push
push
enter
inc
dec
rorl
inc
and
mov
dec
push
jp
or
xor
loope
mov
ss
push
fisubs
insl
jno
add
push
lret
shl
ja
sbb
xchg
or
imul
xchg
cltd
test
sub
xchg
clc
pop
stc
aad
lock
stos
fstpt
xchg
outsl
add
mov
jne
push
add
cwtl
es
ja
aaa
clc
mull
loope
scas
sahf
push
in
mov
int
and
cmc
aas
out
mulb
lahf
or
and
ja
aas
push
pop
test
idivl
sub
lods
scas
cmc
and
mov
mov
add
cld
addl
insl
je
pop
inc
insb
mov
or
loopne
std
divb
mov
lahf
lcall
inc
jecxz
into
fwait
test
xor
mov
sbb
lret
pushf
fldl2t
push
push
pop
lret
mov
mov
mov
push
mov
mov
pop
xor
mov
fdivrl
or
rorb
pop
pop
mov
add
fnstcw
add
mov
dec
mov
test
dec
inc
daa
xchg
call
xchg
inc
and
xchg
hlt
xor
scas
push
inc
or
sahf
xlat
clc
pop
xchg
mov
dec
mov
outsb
movsb
mov
bound
cmp
mov
sbb
add
inc
jnp
testb
repnz
pop
sub
daa
movsl
and
sti
mov
xchg
mov
and
inc
sbb
jbe
mov
or
xchg
cmpsb
jo
sbb
sahf
mov
sub
sbb
sub
es
sti
dec
ljmp
loope
loopne
push
push
dec
dec
or
add
sahf
cmp
push
cld
mov
inc
cmpsl
xor
pop
in
sub
sub
dec
into
testl
fisubrl
lahf
adc
push
jl
mov
lahf
insl
push
lds
mov
add
jae
inc
mov
pop
mov
popa
push
scas
fucom
and
mov
adc
bound
dec
sbb
ss
je
icebp
rorb
jnp
xchg
push
bound
sahf
dec
xor
xchg
lret
bound
loopne
call
mov
loope
fwait
or
js
and
ds
push
adc
arpl
test
outsl
sub
leave
stos
outsb
pop
push
pop
repnz
and
flds
lods
mov
mov
mov
je
repz
rcrl
clc
dec
sbb
or
cli
mov
mov
in
mov
cli
adc
pop
aaa
pop
dec
inc
add
mov
cltd
and
sbb
adc
dec
imul
sub
jl
cmp
mov
rcll
lock
mov
js
aad
xchg
data16
shrb
push
imul
shll
cltd
repz
daa
sahf
sbb
push
dec
push
cmp
jbe
int
sub
scas
mov
in
adc
or
push
cld
and
icebp
jmp
stos
out
shll
das
mov
sbb
inc
repz
and
outsb
add
sarl
mov
test
pusha
test
sbb
push
cmpl
inc
cmp
in
push
outsb
jb
mov
xor
xor
pmuludq
cmp
fadds
fdivs
pop
mov
clc
aad
fwait
xchg
jo
fldcw
rcl
in
adc
inc
cld
sbb
iret
sbbl
push
inc
sub
inc
data16
jbe
outsb
push
inc
pop
arpl
mov
shlb
imul
mov
lds
push
mov
cs
std
out
xor
xchg
stos
call
pop
test
leave
sub
inc
inc
dec
js
adc
jecxz
shll
mov
lcall
shrb
cmp
sub
in
sbb
rclb
inc
mov
ror
std
loopne
mov
out
scas
cmc
dec
mov
sti
and
mov
dec
andl
mov
popf
add
popa
pop
sti
ret
sbb
and
sbb
sub
subl
lahf
shll
adc
negl
repnz
insb
lahf
or
jmp
cmp
sarl
jb
sbb
decl
sbb
xor
pushf
adc
pop
lea
adc
inc
popa
pushl
lods
push
adc
lcall
pop
inc
mov
lret
jo
lcall
adc
lods
push
mov
mov
or
lock
jmp
shlb
rcll
test
jmp
jmp
mov
das
dec
into
and
fstl
loopne
cltd
inc
ss
push
push
lods
lods
push
rcrl
addr16
sub
sbb
imul
push
rcll
ret
cmp
push
scas
int
imul
dec
xchg
add
imul
ret
enter
ja
cwtl
aam
cmp
cli
lds
cld
stc
pushf
aad
xchg
lods
addr16
hlt
pushf
cmp
sub
xor
push
mov
loope
adc
out
into
cld
dec
adc
les
mov
mov
sar
pop
inc
cmp
into
add
stos
pop
cld
mov
push
sbb
xchg
stos
popf
mov
cs
mov
lret
lods
stc
lret
dec
sbbb
push
mov
test
repnz
jmp
icebp
adc
pop
xor
mov
jge
xchg
pop
cmp
xor
add
ljmp
mov
mov
pop
mov
inc
gs
push
inc
sub
out
pop
pop
xor
inc
into
push
sbb
cmp
popf
aas
test
pop
ljmp
mov
es
filds
psubusw
mov
sbb
mov
jbe
out
jecxz
mov
or
xchg
cmpsb
pop
xchg
outsl
hlt
scas
pop
hlt
cmpsb
mov
data16
xor
bound
add
in
xchg
sub
mov
jle
mov
ret
fxch
inc
pop
jnp
imul
dec
pushf
leave
sub
push
imul
out
jnp
fstpl
divl
or
outsb
inc
movsb
lcall
pop
pusha
sub
popl
adc
push
fnstcw
mov
and
jns
divb
jecxz
and
adc
jecxz
dec
adc
pop
hlt
pop
movsl
mov
out
push
ss
stos
mov
dec
pop
xchg
adc
dec
in
sub
imul
or
mov
sub
jmp
shll
sub
cli
arpl
jg
es
mov
pop
bound
xlat
jnp
cmpsl
cltd
xchg
push
stos
push
or
cmpsl
or
sub
or
xchg
cmp
ds
popa
or
pusha
inc
pop
jbe
dec
xor
outsl
dec
pop
repz
jns
dec
dec
in
ljmp
jbe
push
lock
jns
xchg
mov
sti
or
rdmsr
shlb
ss
add
or
iret
jns
stos
lret
mov
movsl
xchg
enter
adc
inc
pop
sbb
pop
aas
sahf
out
cmc
xchg
mov
ret
int3
outsl
inc
test
add
inc
and
je
fmul
movsl
pop
inc
mov
sti
cld
push
clc
lcall
pushf
rcll
xor
xchg
sarb
pop
xor
cltd
sbb
ja
pop
sarb
pop
mov
test
test
lea
sbb
aad
stos
cmpl
pop
mov
sbb
sti
jl
movsb
int3
lock
aam
lods
mov
cmc
icebp
and
jns
add
dec
rcll
dec
rorl
clc
mov
cmpsl
add
ja
sub
inc
test
orb
mov
leave
sub
fbstp
fsubs
inc
dec
jecxz
push
fbstp
andl
mov
sbb
push
or
or
addr16
mov
addr16
mov
shlb
in
faddl
jb
inc
addr16
lahf
int3
push
xchg
sbb
loope
stos
jo
stos
lret
mov
sbb
xchg
cltd
and
pop
push
mov
cld
mov
xor
scas
lcall
test
add
das
orb
sbb
in
sbb
scas
or
jl
in
push
imul
pushf
lds
inc
cld
pop
or
mov
pop
repz
lock
jns
pop
pop
movsb
lods
stos
call
inc
mov
or
fimull
cmpb
orl
out
fsubs
in
je
out
cmpsb
sbb
fwait
xor
pop
cltd
xlat
das
arpl
mov
mov
daa
je
das
add
movsl
mov
and
call
inc
jo
adc
test
adc
rcrb
sub
std
sub
dec
lods
fwait
in
std
or
dec
lcall
add
mov
pop
fistpll
cltd
adc
lods
jb
repz
hlt
jnp
sbb
pop
in
pop
sub
bound
mov
popf
pop
and
sub
and
xchg
mov
push
aaa
mov
push
jl
push
imul
mov
jne
lahf
cmpsl
ret
adc
adc
sbb
adc
stos
jae
sbb
aas
xchg
and
adc
xorb
movsl
push
jecxz
test
and
add
jmp
cld
jg
inc
lret
mov
mov
mov
insl
jae
push
iret
push
xlat
insb
xchg
or
mov
xchg
inc
movsb
mov
mov
sbb
xor
ss
mov
add
out
in
loopne
pop
inc
mov
das
fsubp
dec
adcb
insl
mov
push
stc
loop
addr16
dec
sub
push
nop
jbe
cmp
xchg
call
jbe
jae
jg
cmp
loope
lahf
pop
sbb
sahf
cmpb
imul
push
xor
hlt
outsl
test
fs
mov
push
std
pop
pusha
add
lea
xor
pop
push
cwtl
ret
xchg
or
jge
movsl
cli
fwait
es
mov
ds
push
and
popa
pop
loop
mov
lret
loope
sbb
lcall
jmp
sti
data16
or
addr16
subb
mov
sbb
cmp
xchg
xchg
mov
cld
popa
pop
sub
lret
fcmovu
test
xor
stc
push
loope
mov
mov
mov
scas
aaa
mov
sub
icebp
lahf
cltd
loop
push
mov
lods
mov
sbb
popa
scas
lods
sub
xchg
cmp
jle
fisubs
push
inc
jnp
add
int
in
mov
loop
mov
push
fcomps
cmpsl
jg
loop
push
pop
mov
dec
or
aam
lea
xor
or
out
push
xor
addr16
nop
pop
mov
in
and
mov
mov
inc
mov
xlat
fnop
cmc
push
imull
sbb
and
jmp
in
hlt
ret
pop
bound
mov
sub
cmp
popa
xchg
orl
mov
jo
adc
jnp
pop
mov
sbb
rol
outsl
mov
loope
mov
dec
xchg
mov
insl
mov
sbb
mov
insb
mov
mov
dec
push
inc
or
add
dec
jno
xchg
jmp
cwtl
into
and
fxch
cmp
cwtl
js
adc
fwait
xlat
mov
cmp
or
int
repz
loope
test
mov
pop
test
fwait
mov
jo
cmp
pop
lods
icebp
adc
push
or
out
fldl
lret
out
repnz
in
fsts
jmp
adc
sub
popa
jb
enter
dec
imul
out
push
xor
insb
push
mov
cmpsb
cmc
add
xchg
stc
inc
daa
es
dec
push
pop
loope
leave
mov
push
jo
sbb
pop
xor
push
repnz
lcall
dec
jle
push
lods
cmp
xor
lds
sti
das
xor
xlat
jbe
cmpsl
ljmp
ret
cld
xchg
jmp
das
das
jle
cli
scas
xchg
arpl
add
mov
jns
mov
daa
data16
cmp
xor
loope
fs
int
add
shll
dec
xlat
iret
rcl
popa
shl
popa
aad
sbb
mov
les
jno
xchg
test
int3
bound
fwait
js
test
cmp
out
stos
loope,pn
add
lds
mov
test
test
cmp
jle
add
out
cmpsl
jnp
out
ret
cltd
lret
sub
loope
mov
loop
adc
or
sbb
outsl
into
mov
sbb
outsb
adc
xlat
add
or
cwtl
jge
mov
pusha
out
or
add
xchg
xchg
int3
fistpll
loop
and
pop
sarb
push
mov
dec
mov
and
mov
ficomps
test
aas
dec
test
pop
mov
lods
pushf
mov
mov
test
mov
call
sub
mov
sub
sub
mov
shll
testl
ljmp
enter
pop
xchg
pop
jae
jecxz
movsl
push
lret
dec
mov
pop
in
lods
push
mov
jl
in
sub
xor
cmp
lret
mov
leave
push
pop
xchg
mov
sbb
inc
mov
adc
mov
fimull
imul
testb
sbb
xor
stos
xor
cld
call
insb
push
addr16
stc
mov
sub
sarl
xlat
push
cmp
sbb
lods
pop
push
xchg
or
repz
push
in
or
lcall
rol
std
jmp
cmp
das
fsubrs
add
daa
jecxz
test
movsb
sarl
pusha
jecxz
int3
jmp
or
shl
mov
imul
mov
mov
xchg
adc
adc
cmp
icebp
pop
sub
imul
pop
push
sbb
outsl
call
mov
ret
xor
dec
inc
jmp
rcr
push
mov
shrl
adc
push
enter
pop
frstor
je
mov
clc
cltd
inc
xchg
cmp
into
cmpsl
arpl
pop
dec
cmp
jns
enter
iret
int
lcall
popf
aas
iret
sub
dec
xor
jo
in
sbb
push
aam
mov
pop
cmp
cmp
out
leave
adc
xor
mov
or
mov
jmp
push
pop
adc
incb
xlat
test
insb
aas
cmpsb
add
or
inc
lahf
pop
je
sti
dec
insl
sub
cmpsb
test
in
scas
jp
out
push
dec
sar
outsl
or
lock
fisubrl
nop
subl
xchg
ja
and
std
and
mov
mov
in
lret
push
fsubr
movsb
rorl
pusha
les
ret
inc
inc
mov
adc
xor
mov
imul
sysenter
mov
test
jge
xor
pop
adc
fcmovnu
lds
xor
mov
sbb
sbb
jle
lret
mov
dec
mov
xor
addr16
neg
addr16
ds
mov
dec
iret
rcrl
or
dec
mov
jge
sbb
mov
jns
mov
jno
into
mov
cs
sahf
ret
mov
and
push
push
push
or
testl
aad
mov
pop
aad
xor
sti
mov
iret
aas
cmp
pop
in
push
call
adc
shlb
push
filds
mov
xchg
into
sub
notl
lret
dec
mov
test
push
lret
insb
das
movsb
xchg
xlat
dec
notb
cwtl
cmpsl
pop
in
add
aam
cmp
sbb
fisttps
enter
or
stos
popf
rol
sbb
pop
jo
xor
int
lods
sti
lret
test
inc
mov
xchg
fs
aaa
gs
in
stc
push
mov
push
lcall
and
je
mov
xor
mov
fs
adc
xorb
mov
int3
or
mov
int
fmull
jo
shlb
inc
jb
scas
fcmovu
adc
mov
add
ljmp
jnp
xchg
and
jns
cmp
adc
mov
mov
sahf
aaa
lahf
aas
xchg
dec
movsb
pop
jae
inc
pop
cmp
mov
pop
pop
cwtl
aas
in
jmp
outsw
inc
dec
lahf
call
int
dec
jl
adc
xchg
or
jo
test
repnz
dec
and
repnz
faddl
jecxz
sub
pusha
nop
xchg
and
dec
cltd
or
ds
adc
fdivl
adc
cmp
mov
dec
push
or
xor
lds
addr16
scas
jb
cmp
mov
add
cmpsl
pop
push
add
xor
push
cli
leave
or
leave
dec
pop
xor
and
mov
icebp
divl
divl
jle
sbb
xor
push
jp
pop
mov
mov
xor
adc
fsts
adc
cmp
scas
test
push
push
jmp
sbb
sub
pop
rcrl
dec
leave
jle
in
dec
cmp
xor
repz
fadds
adc
test
inc
iret
and
sbb
inc
in
sahf
clc
dec
push
fmull
stos
cwtl
scas
mov
or
mov
imul
mov
sbb
lds
arpl
push
cmp
insl
push
dec
dec
cli
data16
cs
or
xchg
incl
add
scas
les
jae
cmp
orb
orl
filds
cld
sub
push
jmp
dec
jge
sbb
xchg
fsubrl
jecxz
mov
dec
push
or
pushf
scas
mov
add
ret
shrl
mov
popa
dec
sub
jns
jbe
sbb
arpl
or
xor
xor
ss
jae
sbb
movsl
xor
jo
lds
sarb
imul
jae
pop
jo
lcall
jbe
add
dec
scas
aad
daa
arpl
and
in
inc
mov
sub
jbe
xchg
les
xor
int
inc
push
dec
subl
xchg
sub
dec
sahf
inc
mov
sbb
inc
fistpl
cmp
cmp
jo
mov
pop
sub
jl
sbb
adc
enter
jns
paddusw
adc
push
mov
jno
fmul
clc
shll
sbb
dec
fiadds
push
xchg
mov
lret
xor
repz
or
rorb
cs
into
pusha
adcb
ficompl
push
xchg
jp
dec
dec
mov
cld
inc
shlb
loop
or
add
mov
ficomps
xchg
rol
jb
add
jae
inc
and
sub
cmc
sub
xchg
std
add
jns
scas
out
push
aad
xchg
pop
push
out
enter
adc
cmp
fnstsw
aas
and
cmc
inc
sub
dec
xchg
xchg
dec
mov
outsb
outsb
lods
cmp
lahf
cmpsb
inc
insb
adc
jbe
push
cld
in
and
int
test
inc
repnz
sbb
andl
ficompl
jl
push
jp
orl
pop
and
sub
mov
repz
in
add
cli
mov
movsl
jo
pop
jb
subl
mov
subl
sbb
test
pop
push
or
push
fidivl
mov
ljmp
fwait
loop
dec
jge
fldcw
xor
push
aam
xchg
inc
mov
out
add
jae
or
scas
adc
dec
sbb
addb
lods
aam
and
fisubs
inc
cli
dec
xor
std
scas
faddl
xor
test
cwtl
jb
lods
sub
or
xor
cmp
data16
dec
cmp
mov
pop
rcl
ja
or
cli
in
xchg
xchg
lea
xchg
decl
hlt
mov
jge
mov
mov
mov
pop
mov
mov
mov
das
lea
pop
pushf
test
fisttps
ds
jecxz
and
cmpsb
pop
pop
sub
daa
push
xlat
lret
jbe
cmpsb
icebp
popf
pop
lret
mov
mov
in
xchg
aas
int3
adc
inc
mov
ljmp
inc
in
das
loop
inc
inc
dec
jnp
cltd
repnz
pop
mov
das
sbb
and
or
mov
and
xor
mov
cwtl
push
mov
add
call
lcall
jne
aaa
das
adc
xor
jl
and
inc
or
test
mov
leave
hlt
push
cmc
add
xor
mov
jne
fsubrs
mov
push
xchg
in
dec
mov
mov
pop
addl
mov
cmp
scas
push
inc
lods
xor
imul
pop
mov
xchg
lds
xchg
xor
cli
call
dec
sbb
push
sahf
daa
fisubrs
xchg
arpl
aam
in
and
mov
inc
mov
out
sbb
mov
and
mov
fadds
enter
ficomps
or
xor
shlb
jne
sbb
xchg
mov
das
adc
sbb
push
fisttpll
dec
xor
das
jmp
imul
shll
test
xchg
xchg
xchg
jno
dec
cmp
pop
fcmovnu
mov
dec
sbb
dec
xlat
fucomp
dec
add
cmpsl
jo
cli
aaa
mov
xor
or
leave
insb
sub
scas
lock
out
xor
jl
pslld
faddl
mov
lea
xchg
mov
push
push
ret
outsl
cmp
imull
cmp
lret
mov
mov
xor
mov
jmp
push
pop
and
lret
roll
fistpll
xchg
jl
rcrb
mov
arpl
loope
push
inc
les
and
add
cmp
or
add
or
xlat
lea
adc
adc
repnz
jl
fwait
sub
in
pop
inc
into
xchg
aaa
xchg
into
enter
popf
pop
out
je
pop
in
dec
push
shl
fstpt
cmp
out
mov
shrl
dec
mov
mov
xor
adc
sti
sub
cmp
test
inc
lea
ficoml
pop
mull
xchg
push
jecxz
jmp
rclb
cltd
cmp
lsl
fsubrl
mov
loope
sbb
mov
dec
popf
pop
lret
out
in
mov
mov
xchg
cmpsb
jmp
fwait
neg
push
fwait
arpl
test
imul
push
bound
pop
fistps
mov
popl
push
push
and
cmp
aad
aam
xor
gs
add
push
jbe
mov
mov
lret
lret
shr
dec
inc
rcll
pop
scas
add
fstpt
std
xor
mov
inc
mov
test
add
inc
xchg
stos
add
dec
scas
arpl
pusha
jno
or
mov
xorl
push
loopne
add
cmp
outsb
xor
cwtl
sub
test
rol
iret
mov
int3
and
jle
push
shrl
mov
sub
mov
xchg
popa
xchg
sub
push
dec
cli
les
shlb
cmc
mov
mov
xor
call
filds
sub
pop
int
mov
stc
or
pop
push
jbe
pop
mov
xchg
std
out
or
pop
cwtl
mov
out
dec
out
shl
sahf
ret
mov
dec
adc
lods
shlb
jo
cmp
xor
or
cmpsl
or
mov
mov
aam
inc
stos
jg
iret
mov
outsl
adcb
inc
mov
int3
test
mov
push
xor
xor
push
dec
in
push
fiaddl
outsb
xlat
xor
aas
test
je
jno
add
outsb
pop
popa
cmp
dec
cmpsl
and
lcall
sti
insb
cmp
dec
mov
push
mov
cmpsb
pop
data16
mov
sti
out
in
and
jp
mov
decl
int
mov
push
aaa
ret
fisttps
nop
mov
cmp
roll
push
xchg
dec
addr16
push
jecxz
mov
hlt
pop
test
insl
mov
jmp
or
cmp
hlt
imul
iret
push
loope
lea
cmp
pop
mov
jns
inc
inc
sub
pop
pop
jmp
dec
lock
pop
mov
icebp
js
outsl
jge
movsb
mov
xchg
inc
cmp
in
adc
sbb
cli
adc
cmp
shlb
aad
ds
pusha
mov
test
pop
mov
insb
xchg
ficompl
cmp
inc
pop
sub
or
arpl
fsubrs
dec
jl
jle
mov
xchg
dec
insl
xchg
addr16
mov
inc
inc
mov
pop
cmp
jp
cmpsl
push
adc
movsl
lock
out
insb
fs
dec
jne
es
inc
popf
mov
add
arpl
aad
sbb
mov
hlt
rcl
out
push
stos
ret
adc
repnz
adc
or
sub
mov
jmp
arpl
loope
sub
in
xor
xor
test
dec
sbb
jmp
cmp
and
repnz
sbb
pop
mov
stos
mov
int
add
jmp
adc
mov
mul
int
mov
jb
popa
adc
mul
inc
cmp
aas
int
mov
int
in
cwtl
mov
sbbb
shrb
sub
mov
cmpsl
je
mov
jb
lods
lds
add
scas
aad
ret
in
jmp
push
aad
outsl
icebp
in
out
dec
mov
fistl
fwait
or
mov
nop
or
loope
xchg
clc
jne
lret
fldpi
ds
shlb
stc
and
and
aad
mov
mov
subl
push
sar
lcall
add
or
imul
loopne
lods
pop
push
push
addr16
and
adc
in
mov
fldcw
jl
mov
adc
pop
dec
dec
cmovne
sub
cmpsb
and
lock
pushl
mov
ds
and
jbe
pop
pop
sub
sahf
stos
xor
jg
sbb
cld
lea
imull
jecxz
xchg
int
sbb
pop
mov
push
xor
sub
aas
xor
fnstenv
mov
ffree
and
mov
sbb
mov
push
mov
movsl
frstor
xchg
mov
das
imul
popf
xchg
filds
daa
push
adc
lahf
scas
test
jg
incl
xor
adc
mov
or
cltd
in
dec
pusha
mov
adc
xchg
inc
out
andb
dec
ss
scas
sub
lahf
sbb
dec
pop
lcall
popa
in
mov
in
jns
dec
mov
pop
imul
pop
sbb
cmp
mov
add
pop
aam
shrl
add
ret
push
in
pop
inc
je
ret
jae
push
dec
cwtl
arpl
daa
outsb
sti
or
push
leave
mov
dec
pop
shrl
add
mov
movsl
adc
push
test
add
fbld
cmp
decb
mov
enter
mov
push
aam
rcr
push
scas
xchg
inc
lret
call
cmp
je
out
jno
sub
pop
xchg
push
mov
xlat
sub
lock
push
xchg
ss
js
mov
add
movsb
xchg
xchg
popa
cmp
add
call
loope
add
aaa
push
cld
pop
jp
jnp
add
dec
sti
add
or
aam
daa
xchg
mov
repz
jmp
int3
inc
push
stos
sti
xchg
dec
or
push
daa
insb
test
jo
movsb
jmp
pop
pop
mov
mov
div
psrlw
out
push
mov
sbb
inc
ja
sbb
pop
adc
pop
test
jae
dec
ljmp
pop
pop
jl
push
push
shll
out
out
or
in
and
clc
mov
pop
aam
negb
scas
fnsave
movsl
xchg
or
ret
cld
fisubrl
pushf
aad
aaa
inc
lcall
fdivl
mov
loopne
and
sub
inc
add
out
pop
jno
pop
mov
jnp
repz
sbb
iret
sub
out
fnstcw
movsb
popf
jo
jl
mov
push
sub
std
jl
loop
mov
inc
and
int
sub
repnz
add
adc
lcall
adc
mov
into
test
daa
fisubs
sarb
dec
push
pop
pop
xor
add
scas
loopne
xorl
pop
pop
in
pop
arpl
stc
leave
mov
jne
and
stos
loope
xchg
mov
imul
cmpsl
mov
enter
inc
add
push
add
mov
xor
push
push
pop
xchg
in
lods
mov
jmp
push
xchg
js
jbe
dec
mov
inc
arpl
stos
or
test
gs
pop
jecxz
pop
stos
out
mov
sarb
push
jp
push
mov
lret
push
adc
pop
push
sub
add
and
pushl
test
stos
out
xlat
xchg
aaa
pop
in
iret
and
dec
dec
fwait
dec
mov
cwtl
jo
divl
add
outsb
in
push
xchg
inc
fs
in
clc
int
pop
jne
sub
add
enter
and
mov
add
xchg
sub
pop
mov
cmp
dec
sub
mov
test
movaps
mov
data16
jp
xchg
imul
cmpsb
jg
aaa
popf
addb
mov
sub
push
inc
loope
add
daa
out
mov
andb
jle
imul
pop
dec
repz
aad
imul
mov
imul
mov
push
ret
repz
in
cs
or
xchg
imul
into
mov
adc
cmp
sbb
xchg
les
push
pop
popa
and
or
fcmovnbe
out
sub
and
cs
dec
addr16
pushf
adc
iret
jmp
inc
adc
pop
jle
add
mov
mov
movsl
movsl
ficompl
push
es
push
add
movsl
test
mov
push
rorb
dec
sbb
inc
cltd
sbb
cld
aas
outsb
mov
push
mov
outsl
int
xor
sbb
mov
sub
aas
mov
test
pop
cmp
outsl
adc
inc
je
insl
shlb
dec
mov
js
pop
adc
mov
sub
pop
push
mov
dec
pop
pushf
sub
pop
jl
movzwl
jns
pop
mov
imul
push
pusha
fsubr
cld
pop
pop
adc
xor
mov
and
xchg
cmp
gs
xchg
pop
popa
sti
pop
lret
jbe
inc
insl
dec
cmp
fisubrs
flds
mov
push
movsl
ss
nop
mov
mov
cmp
dec
cli
inc
leave
cmc
outsb
data16
pop
lret
mov
dec
adc
fnstsw
popa
lds
lds
push
lods
call
inc
push
out
adc
jmp
rorl
cmpsl
cmpsl
xchg
mov
sub
mov
test
mov
jmp
push
dec
movsl
xor
in
xor
cmp
push
cmc
xchg
fsubr
test
rcl
and
mov
xchg
add
xor
addb
fs
mov
inc
push
imul
jge
aad
or
in
loopne
xor
aad
sbb
pushf
arpl
jmp
mov
scas
pop
es
push
hlt
movsl
enter
dec
or
sbb
xor
test
pcmpeqw
nop
jns
dec
and
loopne
dec
and
test
xchg
stos
les
cmp
sub
push
pop
cmp
cmp
jne
stos
lret
test
push
in
movsb
mov
sbb
push
dec
xor
test
mov
sbb
pop
fwait
mov
mov
mov
shll
add
sub
jmp
loop
inc
inc
jb
xchg
adc
nop
jp
inc
es
fwait
ror
not
jmp
push
pop
incb
fldt
cmp
in
les
cmp
mov
gs
push
or
mov
call
stc
lea
add
xchg
add
xor
or
dec
lods
cmpsb
push
sti
pop
xor
in
aam
push
mov
clc
mov
pop
icebp
ja
ret
in
cltd
lods
mov
mov
or
sahf
sahf
dec
push
adcb
dec
enter
ret
popf
mov
add
or
idiv
lret
scas
mov
add
dec
and
lcall
mov
jb
lock
ja
sbb
jecxz
cmpb
pusha
mov
cli
ss
inc
inc
out
cmp
mov
into
xchg
or
clc
push
std
sarl
add
in
xchg
repnz
fwait
loop
mov
sub
cmp
jbe
loop
ret
lret
inc
and
movsl
push
cmpsl
mov
mov
mov
scas
push
xchg
adcl
pushf
jo
loope
test
mov
sbb
mov
mov
sar
or
cltd
jle
arpl
test
ljmp
mov
cwtl
pcmpgtd
adc
sub
push
loope
lret
out
mov
mov
jmp
inc
into
sub
mov
fwait
mov
xor
iret
pop
mov
jae
fscale
sti
mov
lock
sahf
xchg
fimuls
test
pusha
rclb
aam
mov
pop
sbb
inc
scas
rcrb
cmc
mov
pop
jge
iret
test
cmp
cli
pop
adc
mov
fistpl
pushf
es
jno
jmp
cltd
mov
cmpl
jecxz
out
fadd
mov
jbe
outsb
jns
or
dec
xchg
out
add
call
rolb
inc
or
fcomip
push
or
je
add
clc
mov
mov
jle
inc
daa
push
movaps
or
dec
push
jbe
hlt
pop
sbb
inc
fildl
ljmp
mov
pop
out
dec
dec
adc
sub
pusha
sahf
and
mov
movsb
inc
mull
dec
ja
sbb
jp
test
mov
pop
inc
ds
rep
sub
loop
popf
fmull
nop
or
xchg
mov
inc
push
inc
xchg
psubsw
jne
or
pop
mov
jbe
decl
jb
add
or
sti
fldln2
xor
pop
stc
mov
xor
pop
add
jae
adc
iret
sub
sbb
lret
test
cld
lret
addl
xchg
jns
enter
bound
adc
mov
repnz
mov
push
loope
mov
jmp
rcl
pop
arpl
push
push
mov
sbb
cmc
call
cmp
addr16
ror
push
dec
outsl
mov
pop
pop
int3
clc
cmc
inc
arpl
xor
xlat
outsl
jecxz
fcmove
lahf
inc
test
push
cmpsb
push
adc
jns
ret
imul
dec
cs
or
movsb
mov
mov
stos
and
inc
arpl
adc
jns
push
add
xor
xchg
orl
sbb
dec
rcrl
mov
mov
lds
pop
fs
mov
mov
les
les
sti
in
call
pop
pop
mov
push
inc
movsl
loop
rorl
hlt
bound
aad
dec
and
add
inc
xor
stos
fdivrs
sahf
mov
rcll
pop
pushf
in
xchg
ljmp
xor
cli
jnp
jg
inc
aaa
aas
pop
cmp
andb
mov
jmp
sar
aad
pop
push
das
fwait
es
ficoml
inc
xchg
in
cmp
push
mov
cmp
inc
mov
add
mov
fwait
pop
xlat
fs
scas
in
xchg
daa
pop
scas
mov
pop
enter
inc
jl
ja
jns
insb
movb
cmp
js
sar
cmp
sub
test
repz
push
xchg
stc
xor
negb
mov
imul
push
push
cltd
jg
lea
xchg
mov
test
adc
jo
imul
scas
into
xor
xchg
popw
mov
rolb
mov
adc
push
fwait
jmp
es
mov
push
inc
lret
cld
pop
inc
mov
ja
fdivl
or
outsl
in
fidivl
push
cmp
adc
xchg
xchg
jnp
mov
sbb
ret
mov
ret
sub
fmul
add
and
dec
mov
fisubs
icebp
std
sub
jae
cmp
inc
out
ds
rorb
out
je
mov
pop
sbb
inc
fisubs
or
aad
add
flds
movd
shl
push
sbb
jp
and
imul
inc
or
sbb
aad
sub
and
enter
repz
movsl
out
leave
stos
pop
pop
push
or
les
mov
rorl
out
cmpb
stos
and
jge
or
into
sub
ja
add
mov
jecxz
dec
aas
iret
inc
hlt
or
xor
push
out
add
xchg
inc
jecxz
jecxz
push
jl
cli
movb
fcmovu
int3
sbb
fidivs
ja
ret
mov
les
mov
lahf
inc
mov
jns
or
push
mov
fstp
pusha
cmpb
push
ja
aaa
ret
sub
clc
pusha
lock
lret
cmp
lds
xchg
xchg
jb
dec
bound
xchg
sbb
nop
sarl
push
mov
mov
ds
lock
mov
mov
xadd
xchg
mov
dec
or
cmpsl
pop
mov
mov
aam
jl
sbb
mov
add
xchg
imul
pop
shr
push
adcl
je
add
pop
sbb
or
insb
xchg
fs
sar
leave
mov
or
fsubl
addb
sub
cli
in
lea
fcompl
das
or
out
mov
ss
arpl
in
fsts
call
push
jns
cmp
out
loopne
fsub
cmpsl
cmp
mov
aad
mov
shll
xor
cmc
lret
in
decl
sar
jno
ret
call
sbb
outsl
scas
bound
loope
dec
ds
xlat
test
ja
imul
es
adcl
lret
jno
fisubl
sahf
xlat
pushf
enter
mov
test
pusha
sbb
cs
ljmp
lret
scas
sbb
adc
fcomp
scas
bound
cmpsb
xchg
bound
ja
mov
movsl
inc
test
movsl
repz
out
ret
outsb
lock
and
push
xor
push
loop
scas
push
clc
inc
dec
jg
repnz
popa
xchg
sbb
pop
sbb
pop
inc
out
pop
arpl
or
stc
xor
mov
xchg
jg
cmp
mov
test
fcmovbe
aas
movsb
inc
insb
add
pop
bound
push
xchg
jmp
jmp
mov
mov
es
lods
lret
lret
cmp
imulb
push
sar
ja
cmc
fstpt
fdivr
pushw
stos
in
sbb
rorl
negl
inc
fs
xchg
jmp
sbb
ret
out
xchg
sbb
and
lods
jno
adc
xchg
xor
call
mov
inc
cli
out
fucomp
add
push
ljmp
cmp
adc
cmp
imul
ss
pop
mov
mov
add
adc
and
lret
shrl
adc
pop
inc
or
cltd
push
adc
mov
jp
out
push
dec
int3
inc
mov
shlb
outsb
cmp
out
inc
sbb
repz
int3
mov
mov
sub
push
andb
insb
xor
xchg
imul
repz
hlt
dec
mov
push
ds
ljmp
shrb
jg
repnz
scas
es
out
out
pop
pop
dec
pusha
movsl
stc
jno
ds
xchg
jp
xchg
pop
cli
jp
and
into
pop
mov
test
inc
jmp
xor
and
sbb
sarb
iret
push
xchg
imul
push
add
push
dec
push
enter
xadd
sahf
sub
push
out
in
pop
inc
mov
pop
cli
sbb
addl
rorl
test
inc
insl
push
xchg
xor
and
add
fdivs
iret
loop
mov
pop
or
jbe
xchg
iret
mov
rcrl
jb
xchg
or
adc
pop
lcall
inc
or
cmpsl
scas
in
cmp
sub
dec
add
loopne
shll
jbe
insl
arpl
sbb
negb
inc
mov
out
mov
add
jns
and
lret
dec
es
decl
pushf
stos
fcmovnb
jecxz
test
mov
inc
in
pop
pop
addb
rorl
jge
pop
xchg
push
out
nop
pushf
mov
pop
in
sbb
sbb
subb
push
std
cwtl
jge
dec
das
test
lods
mov
cltd
insl
inc
enter
negb
mov
fstl
shll
cld
adc
xchg
arpl
sub
pop
scas
or
pop
jne
jl
dec
aas
and
xor
cmpsb
test
pop
ret
inc
pusha
mulb
fsubrl
mov
sbb
in
es
insl
inc
jmp
test
movsb
leave
or
es
cmp
mov
pop
clc
or
lcall
mov
leave
adc
add
mov
gs
notl
and
mov
jb
shl
fstps
idivb
test
and
pushf
popa
push
data16
in
fwait
mov
or
fcmovbe
incb
ret
xchg
insb
into
mov
push
cmpsl
xchg
out
and
sub
push
dec
sbb
stc
xchg
or
pushf
dec
cmp
mov
add
lcall
cltd
dec
mov
andl
jle
in
loope
repz
fisubl
jne
in
jg
cld
xchg
xchg
jno
sbb
and
scas
les
hlt
cmp
mov
lcall
mov
push
jle
mov
jo
dec
jmp
jp
cmp
bound
rclb
loopne
lret
in
lcall
test
sbb
jae
push
addb
lret
adc
and
fisttps
mov
mov
jno
shl
dec
mov
and
pop
cli
rcrl
ja
imull
lds
sahf
sub
mov
negl
mov
mov
pop
pop
pushf
cmp
jmp
nop
lret
fwait
sub
shlb
loop
movsb
push
lret
sub
inc
sub
int3
cmp
negb
cmp
jg
push
push
in
add
out
sbb
inc
les
decb
push
subl
hlt
mov
xchg
mov
jge
popf
adc
mov
mov
ret
jl
popf
xchg
mov
xor
xchg
cmpsl
loopne
stos
das
push
sti
xchg
leave
fwait
aaa
xchg
jl
fcoms
xor
push
xchg
in
test
nop
insl
pop
lret
push
lret
xlat
movd
cltd
mov
test
enter
das
scas
stos
or
and
sub
adc
pop
fdivp
test
push
mov
push
arpl
jb
test
loope
pop
ljmp
popa
or
push
mov
add
ljmp
jg
scas
cmp
xchg
sbb
mov
js
int
sbb
mov
pop
sbb
push
in
fldenv
mov
jo
pop
mov
sbb
push
pop
test
xchg
push
pop
adc
call
int
clc
push
fsubs
aaa
pusha
subl
or
in
xchg
and
das
dec
cmp
dec
mov
je
or
fdivl
je
fldenv
out
imul
or
hlt
inc
fsubrl
xlat
int
imul
mov
iret
cmp
mov
notb
repnz
lods
fcoms
lods
add
cmpl
mov
push
fldenv
iret
outsb
sub
xchg
scas
xor
int
std
xor
xchg
or
cmp
sub
int3
clc
jge
xor
or
xchg
jne
jmp
in
inc
inc
cs
sar
lret
daa
in
fwait
push
mov
pop
lods
jmp
add
mov
lret
jno
xchg
rcll
jno
sub
cmp
push
sub
sub
enter
mov
fst
adc
jmp
test
sahf
dec
ds
xorl
jnp
inc
inc
push
cmpsl
mov
insb
lods
pushf
add
pop
cmc
sub
dec
jno
push
pusha
adc
mov
mov
imul
inc
pop
adc
ljmp
jne
ds
push
lcall
jp
cs
cmpsl
lret
sub
jo
outsb
mov
or
out
aam
test
cltd
dec
str
cmp
xchg
jl
xchg
ret
inc
outsl
ret
nop
add
push
repz
pop
jne
mov
dec
dec
dec
or
into
stc
push
and
jbe
jne
arpl
dec
pop
imul
test
stos
push
cld
adc
out
pushf
mov
sub
dec
jmp
mov
pusha
stc
scas
inc
inc
jecxz
iret
imul
or
jne
push
repnz
mov
outsb
out
xchg
push
pop
cli
push
rorb
or
stc
pop
ret
ret
aam
iret
icebp
pop
adc
hlt
lret
imulb
imul
mov
push
adc
mov
cld
sar
mov
or
mov
fiadds
mov
outsl
jle
sbb
add
or
lds
sub
mov
and
out
std
inc
pop
imul
addr16
xor
dec
xchg
subl
sub
repnz
inc
imul
xchg
cwtl
xchg
mov
jl
jle
xchg
ds
push
lods
loopne
test
xor
ds
cmp
sbb
adc
mov
add
pop
inc
sub
pop
dec
mov
int
insb
jns
scas
mov
pop
cmp
enter
mov
in
pop
inc
cmpb
cmp
lcall
mov
int
cmp
mov
lret
fwait
pop
cmp
into
jbe
daa
int
scas
sub
ds
xchg
push
adc
sbb
outsb
or
icebp
xchg
jmp
xchg
int
push
jmp
insl
ljmp
mov
fwait
imul
pop
sahf
mov
repnz
adc
das
leave
mov
gs
mov
dec
push
sarb
pop
mov
mov
add
xchg
pop
out
cmpsl
ja
nop
movsl
push
insb
dec
mov
test
push
sti
out
jnp
push
jb
lods
jo
mov
xchg
dec
jns
mov
daa
mov
mov
gs
push
mov
pop
pop
movd
add
adc
jmp
nop
xchg
push
sbb
call
lds
ss
inc
mov
cmp
scas
or
mov
cmc
push
pop
dec
mov
push
jge
std
rol
pop
cmp
mov
inc
mov
adc
mov
outsb
cmp
hlt
ret
or
in
mov
pushf
dec
js
push
stos
dec
movsb
adc
test
sbb
adc
sub
sti
push
iret
daa
xchg
int3
xchg
sub
mov
jmp
add
scas
sbb
dec
add
decb
or
sti
ja
pop
xchg
push
jg
mov
jae
lods
je
jnp
inc
pushf
fdiv
fdivrp
adc
out
dec
jge
xchg
sub
cli
shrb
fnstenv
fsubrp
add
aas
sti
dec
jle
dec
jl
mov
xor
and
xchg
push
shl
sbb
sbb
mov
popf
cmpsl
jle
push
into
or
repnz
or
lds
decl
cmpsl
test
iret
lea
jns
pop
fs
inc
add
sbb
arpl
sub
add
pop
push
stc
mov
cmp
jle
cmpb
outsb
sahf
cmp
jb
je
mov
js
rorl
sar
mov
lds
subb
mov
mov
movsl
in
rcl
std
jge
stos
pusha
or
fistpll
add
and
cmp
je
adc
shrb
xor
xor
push
xor
or
jbe
subl
mov
iret
xlat
dec
fsubl
stos
mul
js
sub
mov
shl
jmp
dec
repz
push
cmc
cld
call
notl
mov
sub
ja
add
bound
fidivrs
rcrl
mov
inc
mov
fld
sub
rcrl
push
jmp
fs
insb
or
stos
mov
insb
enter
push
jno
nopl
addr16
mov
jl
adcb
xchg
jnp
push
dec
pop
mov
mov
fmuls
add
mov
mov
jp
and
xchg
push
jae
lods
cmp
sub
lds
iret
xchg
test
pop
pushf
and
jbe
sbb
lock
xchg
adc
loopne
jmp
or
and
mov
nop
or
fyl2xp1
sub
mov
inc
and
rorl
mov
in
sarb
inc
popf
or
cmpsl
xlat
xor
cs
mov
pop
aas
jl
cmp
shll
ja
sbb
aaa
xor
orl
lds
rorb
ja
jmp
fcomps
push
xchg
lock
mov
call
mov
fadds
or
mov
jge
das
call
test
movsb
loop
test
imul
lock
cltd
adc
scas
mov
hlt
ret
dec
pop
gs
and
sahf
adc
jno
mov
stos
and
cwtl
ss
jno
sub
push
pop
fdiv
or
fnstsw
cmp
ret
push
popf
outsl
dec
inc
and
cli
jmp
leave
mov
cmp
add
push
mov
mov
sarl
gs
mov
scas
dec
in
arpl
adc
push
mov
or
jbe
mov
jns
in
jl
in
movsb
dec
push
xor
mov
adc
xchg
outsb
mov
pop
mov
out
push
xor
xor
adc
cmp
stos
popa
imul
loope
movsb
xchg
pop
cs
cmp
decb
aaa
stos
aam
push
sbb
insb
xor
stos
push
std
and
imul
stc
and
cmpsl
add
in
daa
stos
cltd
xor
mov
inc
xorl
test
or
lahf
sbb
xchg
and
or
and
add
jbe
mov
sahf
lea
mov
sbb
js
out
xchg
mov
fcmovnu
test
jo
xor
addr16
outsl
xor
test
out
xor
rolb
lahf
push
mov
hlt
xchg
jecxz
popa
jle
adc
mov
adc
xor
lret
test
outsb
fcomi
add
fiadds
stos
sti
lods
push
add
in
xchg
fld
jecxz
adc
fcompl
xor
call
xlat
ret
test
mov
add
jnp
adc
mov
cld
movsl
out
inc
arpl
outsl
fmulp
lret
or
add
push
iret
subl
inc
add
stos
pop
xorb
dec
jg
cld
push
call
fwait
inc
xchg
addr16
popf
push
ffree
pushf
test
dec
sub
insl
push
mov
mov
mov
xchg
push
fiaddl
cmc
xor
pop
jge
js
jae
jecxz
sub
popl
xchg
push
pop
or
or
sub
push
mov
ds
cmpsl
outsb
sub
sahf
jns
mov
daa
or
sbb
inc
adc
or
push
gs
gs
inc
mov
loope
fs
hlt
lret
sub
push
xor
sub
loopne
lret
fldl
cld
adc
mov
test
or
lds
aas
in
and
fcomps
push
jg
pop
jecxz
lcall
cmp
push
or
imul
ljmp
dec
nop
adc
cltd
imul
cld
xchg
cwtl
scas
xchg
fs
lock
bound
jo
or
popf
das
push
out
nop
add
add
lret
pop
lret
adc
jno
xor
clc
add
hlt
add
aas
sti
or
or
dec
adc
push
cs
out
mov
dec
les
out
std
popa
pop
xchg
inc
repz
int
fiaddl
sar
pop
sbb
lret
mov
es
data16
loop
add
mov
mov
andb
pop
insl
push
mov
movsb
adc
test
xchg
mov
xchg
inc
sahf
jne
shll
call
sbb
fsubrs
std
das
mov
into
mov
lds
mov
push
jb
mull
jnp
inc
loopne
xchg
sbb
dec
sub
popa
pusha
sbb
mov
pop
jl
cmp
test
mov
les
xor
xchg
pop
cmp
xchg
and
outsb
add
jecxz
lods
add
add
mov
movsb
adc
loopne
push
jns
test
pop
xchg
call
dec
mov
sbb
xor
cli
xchg
bound
fildl
dec
pop
and
or
pop
cmp
and
in
roll
jo
cmpl
sbb
add
mov
lods
mov
insl
nop
xchg
imul
xchg
sahf
jbe
ret
in
icebp
mov
lods
jmp
sysenter
loop
js
push
outsb
push
sub
mov
adcb
mov
jp
inc
mov
out
adc
dec
rcr
jmp
mov
jb
into
mov
xor
and
fs
xchg
loop
jb
jns
adc
in
inc
mov
bound
nop
movsb
inc
inc
xlat
mov
mov
insb
shll
add
pusha
in
clc
jg
cld
pusha
arpl
insb
and
inc
or
lods
cld
insb
jo
int3
imul
rclb
xchg
push
out
repnz
int3
sub
dec
push
xchg
push
pop
mov
xchg
push
in
sti
xor
xchg
xor
dec
fidivs
cli
in
or
xchg
sbb
ljmp
aam
push
insb
add
cmp
push
rclb
dec
adc
pusha
cli
inc
jmp
mov
xlat
mull
add
out
pop
dec
mov
icebp
fnstenv
sub
loope
adc
jnp
daa
dec
andl
and
push
jmp
aad
mov
mov
push
push
mov
loop
loop
mov
outsl
lret
es
ret
adc
jge
stos
fiaddl
xchg
or
adc
out
shlb
leave
cli
loop
add
inc
adc
fwait
and
lea
sub
negb
inc
add
sbb
adc
repnz
mov
loop
sets
outsl
cmp
mov
popf
xchg
and
cmpsl
loopne
repnz
mov
pop
push
cvtdq2ps
inc
or
xchg
inc
shll
xchg
jae
gs
pop
jno
loopne
dec
fsubrs
hlt
or
dec
clc
mov
in
scas
test
cmp
mov
jmp
xchg
xor
xor
or
iret
lds
pop
pushf
movb
ljmp
mov
fneni(8087
jnp
xchg
inc
dec
jns
lods
xchg
lods
imul
in
out
mov
lds
push
mov
xlat
mov
mov
xchg
call
mov
pop
call
icebp
mov
lods
fnstsw
mov
jmp
xchg
pop
dec
cs
decb
jmp
add
inc
inc
push
call
repnz
das
js
sbb
insb
xor
jmp
mov
push
repz
pushf
ret
movsb
inc
daa
xor
add
clc
test
enter
or
addr16
cs
into
movb
outsl
ss
cmp
push
pop
add
js
pop
or
insb
pop
dec
dec
pop
jecxz
mov
in
fsub
cld
sub
decl
jp
add
mov
sub
jmp
sahf
jl
xchg
std
cmp
mov
add
orb
mov
cmpsl
flds
pop
in
lret
mov
pop
sti
xor
enter
aaa
ja
out
jne
dec
push
lcall
ljmp
add
xor
dec
call
in
shl
lods
out
push
js
stos
xchg
cmpsb
pop
mov
fistpll
mov
sbbb
not
and
pop
or
or
xchg
rclb
mov
dec
push
inc
test
sti
add
repz
out
fsubs
xchg
jg
leave
sti
xchg
and
jl
cli
sub
xchg
imul
jl
mov
jmp
aaa
shrb
xchg
sub
xlat
test
xor
vpsadbw
or
shrl
nop
cmpb
and
mov
pop
lahf
xor
push
stc
dec
inc
sbb
add
lea
iret
inc
js
repnz
push
pop
inc
push
jb
and
jo
push
mov
cmpsl
xchg
push
and
ds
cmpsl
sbb
sub
jbe
add
mov
and
data16
sti
addr16
pop
repz
icebp
ret
js
insl
add
dec
out
movsl
dec
xor
aas
fcom
add
sahf
cmp
loopne
push
je
lea
mov
jbe
lret
mov
frstor
imul
mov
fxch
inc
mov
inc
jl
dec
scas
cmp
neg
add
mov
lods
cmp
and
or
sbb
jno
ss
sahf
mov
aad
add
adc
cmp
push
lds
fsub
pop
cmp
pop
adcb
xchg
das
mov
xchg
push
test
push
nop
ljmp
mov
dec
stos
pop
cmc
adc
fisttpll
iret
adc
and
jns
rcll
idivb
insl
test
jle
loop
push
test
pop
push
popa
add
lods
cmp
popf
cltd
dec
fwait
mov
inc
dec
and
cmpsb
stos
fidivrl
inc
fnstsw
arpl
out
adc
push
fcmovne
pop
iret
movsb
jns
movsl
jns
xor
xor
or
mov
pop
les
call
aas
rcl
xor
mov
add
fcmovbe
int3
and
out
adc
jo
pop
test
insl
cmp
adc
adc
movsb
cmc
push
mov
hlt
jbe
sti
std
or
sbb
inc
xor
in
mov
popf
jns
xor
push
and
es
pop
movsb
sub
xchg
sbb
mov
call
cmpsl
pusha
lock
neg
hlt
cmp
inc
inc
imul
mov
cmp
cmp
fisttpll
mov
popf
imul
sub
jle
popf
call
mov
das
out
lods
mov
cmp
fsubrs
xchg
js
jb
repnz
push
cmpsb
cs
mov
sahf
fs
cmp
cwtl
fmull
not
icebp
jb
pushf
rcrb
sub
lret
jnp
shr
test
ficoml
movzwl
sub
xchg
aad
cwtl
and
sub
and
mov
cmp
mov
aad
mov
jp
fnsave
stc
sbb
mov
test
cmp
sub
or
mov
add
in
mov
or
iret
pop
add
mov
testb
inc
adc
add
hlt
test
mov
jl
mov
sti
scas
xchg
xchg
adc
test
movsb
cmp
sub
pop
out
cmp
shlb
lods
out
hlt
jmp
mov
adc
outsb
jnp
xor
mov
jmp
push
aas
add
ret
lcall
lcall
mov
clc
cmp
hlt
adc
daa
jo
stc
lret
push
push
dec
repnz
leave
push
jb
ret
out
lret
imul
mov
push
cwtl
jl
leave
mov
fs
test
push
repnz
xor
pusha
aas
cmp
ljmp
leave
test
ja
push
cmpsb
stos
pop
inc
lea
xchg
je
test
lock
jno
incb
push
pop
xchg
fisubl
arpl
dec
xchg
inc
push
inc
xor
mov
cmpsl
xchg
dec
dec
int
shll
inc
insb
out
daa
pop
scas
loop
push
adc
fmulp
adc
xor
jno
or
jns
xchg
or
push
arpl
dec
cmp
lds
cwtl
into
fidivrs
es
cmp
data16
adc
in
repz
inc
loop
and
pop
push
jbe
add
jg
lods
rcl
jo
pop
loop
popa
pushf
adc
xchg
addb
dec
mov
incl
aam
mov
les
xchg
popl
stos
xchg
das
les
repnz
push
in
test
shlb
cmp
shll
jge
and
shr
lock
fsubl
push
ljmp
dec
int3
insl
pop
fldcw
stos
imul
mov
fwait
in
test
mov
jg
insb
out
dec
cli
roll
mov
arpl
mov
cli
pusha
aam
xchg
xchg
mov
xchg
scas
sbb
jnp
adc
enter
inc
insb
mov
sbb
aad
jg
fisubrs
cmpl
test
call
sbb
lock
data16
int
enter
mov
ds
mov
popa
dec
push
or
pop
push
fidivs
sahf
lods
rorb
outsb
jecxz
std
add
and
sahf
sbb
sbb
xor
dec
push
push
jnp
sbb
arpl
decl
js
add
mov
mov
or
jne
mov
out
jl
sbb
mov
adc
in
in
jmp
jmp
call
or
mov
cs
add
mov
test
sub
mov
rcl
stc
stc
in
jb
sub
push
pop
scas
lock
or
xor
arpl
sub
ja
jge
mov
xchg
xchg
pop
push
lret
insl
popa
sarl
xchg
mov
xor
ficompl
bound
push
dec
adc
int
jecxz
into
ljmp
sahf
loopne
push
lret
jae
lret
xlat
push
call
inc
push
add
push
mov
cld
sbb
imul
sbb
cmp
mov
xchg
adc
gs
arpl
xchg
jp
test
clc
push
jno
repz
outsb
pop
pop
xor
filds
pop
popf
pop
and
push
dec
scas
mov
imul
mov
push
icebp
arpl
ret
dec
pop
into
cmp
clc
or
outsb
test
mov
fwait
mov
pop
movsb
cmp
stc
arpl
mov
inc
adc
dec
pushf
mov
sarb
shr
inc
sub
iret
or
or
sbb
or
je
js
cmpsl
or
out
cltd
xchg
add
mov
or
cmp
lret
jo
pop
sbb
pop
jecxz
ljmp
dec
insb
adc
stos
push
cmp
pop
out
lret
or
enter
cltd
push
jge
pusha
add
cld
jp
ss
push
data16
fstps
and
test
outsl
mov
jb
pop
add
pushf
fisubrl
lret
lcall
lahf
cmc
sbb
loope
adcl
lods
jmp
cmp
pop
cmpsl
movl
sub
add
icebp
popa
movsl
lret
sahf
push
ret
jg
stos
mov
test
inc
jmp
mov
cmp
sbb
pusha
mov
push
inc
jg
out
sub
sahf
ss
push
stos
rorl
test
lahf
test
sub
pop
adc
ljmp
sbbl
jg
push
imul
testb
adc
icebp
mov
xor
jno
lret
incl
popf
jp
jns
push
dec
mov
arpl
stc
cmc
sbb
jl
xchg
xor
insl
mov
jle
or
sbb
jge
lahf
sub
icebp
ror
sub
xchg
mov
dec
mov
adc
sub
mov
aad
inc
xchg
push
mov
rcrl
subb
push
dec
movsb
lahf
into
add
jl
sub
xchg
sub
test
or
lds
mov
enter
out
and
dec
jle
and
dec
add
das
mov
xor
pop
mov
sub
xor
je
push
and
sub
shr
clc
push
lods
bound
iret
stos
scas
and
sbb
push
stc
in
es
jge
lcall
jg
sbb
inc
pop
ds
int3
arpl
inc
xorl
mov
dec
mov
mov
negl
jg
stos
andl
mov
and
fstpt
push
pop
jl
xor
mov
imul
xor
add
pushf
cmp
push
loope
push
mov
dec
in
or
fucom
cmpsb
adc
and
fwait
push
das
jno
out
fcoms
stos
aad
xchg
pop
dec
push
fidivs
push
test
xlat
outsl
dec
orb
mov
cmp
ljmp
mov
cmp
bound
jg
push
xchg
outsb
mov
call
push
mov
cld
xchg
sub
xor
mov
clc
in
or
mov
cmpsl
das
sbb
out
xor
into
jmp
cmp
or
call
pop
push
orb
ret
sub
call
sub
aaa
in
addr16
xor
fmuls
sub
add
ds
adc
in
mov
jo
cmp
mov
xor
popf
arpl
xchg
dec
mov
gs
add
ljmp
inc
js
sub
xchg
jo
add
aad
ja
mov
inc
mov
mov
inc
jmp
out
or
pop
mov
and
clc
and
jo
xchg
repnz
sub
insb
rclb
mov
and
aam
mov
push
add
push
jge
lock
jne
call
addl
gs
mov
pop
push
lahf
ja
out
xchg
repz
cltd
xchg
shll
hlt
mov
cmc
sub
sub
fsub
pushl
xchg
scas
cmp
add
push
gs
push
mov
insl
addr16
enter
jno
iret
xor
and
outsl
in
jg
insb
call
movsl
in
adc
outsb
int
xchg
mov
aaa
pop
addl
cs
and
xchg
push
loope
xor
addr16
cmpsb
fcmovbe
in
cmp
sub
inc
sbb
mov
xchg
fsubrs
cmp
jle
xchg
cmp
push
data16
fdivl
std
or
and
loop
in
rcr
loop
mov
dec
sti
dec
fdivp
push
gs
jne
and
fwait
xlat
cmp
adcl
mov
xchg
mov
pushf
cmpsb
fistpl
fldcw
int
jle
inc
jmp
divl
mov
test
ja
scas
mov
int3
sub
int
sar
sbb
data16
dec
mov
movb
inc
push
or
insl
add
aad
dec
fs
data16
mov
stc
jno
test
add
adc
dec
cmpsb
xchg
sbb
cli
mov
add
addr16
xlat
dec
and
jge
mov
into
nop
adc
fistps
loopw
mov
jo
cmpsb
ror
xor
xor
es
cld
pop
mov
lret
sbb
std
cmp
mov
in
inc
cmpl
mov
lock
lea
pop
daa
xchg
mov
or
lods
fidivrl
inc
sub
lcall
mov
push
cld
mov
lods
leave
dec
sbb
sti
data16
jns
adcb
mov
pop
add
stc
xchg
cmp
mov
push
pop
sbb
sbb
adc
inc
mov
lahf
xor
out
xor
xchg
fsubrl
fadds
jb
shll
fwait
dec
lea
cmp
cmp
in
int3
idiv
push
data16
lock
pop
push
lock
xor
lret
push
shll
sbb
loope
movsb
cmp
mulb
iret
fldl
jo
dec
xchg
int
rcll
xor
loope
inc
mov
jecxz
fnstenv
mov
mov
imul
aaa
enter
lds
jns
cmp
daa
xchg
xor
adc
mov
cld
imul
cmpl
test
xchg
data16
rorb
and
lret
lcall
addr16
push
adc
aas
push
mov
xor
mov
stos
js
movsb
in
add
jnp
sbb
jbe
das
pop
aam
or
jmp
rcll
mov
add
loop
leave
xor
in
shrl
xor
gs
in
pop
jle
jo
pop
aaa
lods
repnz
push
scas
mov
jne
push
cmp
ret
mov
push
inc
jo
je
xchg
fldt
es
sub
or
cmp
imul
fstl
mov
jg
inc
sti
adc
stos
mov
clc
js
xchg
sbbl
add
and
and
and
add
dec
in
jecxz
mov
xor
mov
in
jb
std
xor
inc
mov
dec
xor
push
xor
repnz
cmpsl
push
cmpsl
push
push
push
push
cld
loope
push
xchg
push
or
inc
pop
adc
lcall
fisubl
test
adc
xchg
nop
lock
add
xchg
hlt
sbbb
in
sbb
stc
ret
cwtl
inc
or
dec
jl
rolb
orl
inc
mov
jns
jbe
test
fildl
into
push
and
fmul
pop
dec
flds
sub
xor
cwtl
and
stos
cmc
dec
lret
adcl
outsl
shll
lcall
push
enter
cmpsl
mov
inc
mov
xor
outsl
repz
xchg
xor
outsl
mov
stos
and
xchg
dec
lds
lahf
test
icebp
dec
or
sbb
pop
sbb
int
adc
icebp
rcll
or
cwtl
fmull
push
or
loop
sub
fmuls
lret
mov
in
in
or
fbld
jbe
xchg
imul
jbe
xchg
and
lock
testb
cmpsl
fwait
add
push
mov
jl
and
fdivrl
xor
xor
mov
fstps
sbbb
sahf
imul
mov
call
cmp
xor
repz
test
sbb
sub
xchg
inc
fists
xor
fs
fnsave
add
int3
cmp
xchg
xchg
sahf
xor
repnz
sbb
setbe
lret
inc
cltd
mov
daa
jno
rcrb
xchg
push
mov
in
lea
or
mov
mov
sub
cwtl
push
adc
xchg
aam
fldl
lcall
daa
add
cmpl
mov
inc
lods
inc
mov
scas
mov
js
jne
bound
mov
push
xchg
fldt
stc
sbb
push
mulb
cmpsb
lcall
out
movsb
sub
aam
cmp
inc
cmp
add
and
jp
movsb
mov
outsl
xchg
pop
pusha
int3
xchg
pop
add
push
mov
fsubp
mov
aaa
sbb
inc
pop
movsb
mov
ret
xlat
sub
call
stos
or
pop
mov
stos
inc
mov
repz
es
adc
mov
int3
dec
cmp
in
jb
mov
mov
push
push
sbb
shl
push
jge
dec
add
mov
add
nop
outsb
pop
repnz
sbb
test
push
enter
ljmp
into
xchg
fadds
push
out
lahf
cmp
or
cmpsl
push
and
xchg
loopne
pop
lret
inc
sbb
mov
xlat
pop
or
mov
cmp
jge
out
xchg
cmp
xor
jg
push
dec
jo
lret
mov
and
add
andb
outsl
pop
mov
push
outsl
rcrb
gs
out
mov
push
cmp
xchg
popf
mov
mov
and
ficomps
jmp
loop
xchg
or
int
movsl
pusha
and
xchg
in
ret
add
sub
rcl
push
xor
dec
adc
lock
inc
lret
ja
and
mov
and
sarl
sbb
jne
fimuls
mov
ficoml
and
lcall
dec
add
and
xchg
lret
push
push
lcall
les
sub
pop
dec
mov
sbb
lods
pop
mov
in
mov
inc
or
pop
mov
xchg
and
inc
push
mov
mov
cmp
fwait
iret
cmp
dec
push
les
xchg
push
mov
push
shrl
add
jo
dec
mov
sub
shrl
sub
fwait
cmp
loop
idivl
mov
xchg
add
outsb
or
pop
sbb
cmp
xchg
fnstsw
xchg
or
insl
js
in
xor
clc
shr
mov
push
jmp
inc
xlat
cmp
addb
mov
or
xchg
rcll
xchg
inc
and
mov
cmpsl
popf
imul
movsl
dec
dec
lea
hlt
rclb
and
lahf
addr16
mull
movb
jnp
sub
out
or
je
test
push
mov
insb
jno
gs
mov
sbb
push
adc
aaa
rcl
or
and
jne
out
test
xchg
pop
fs
js
ljmp
lcall
adcb
adc
jmp
scas
into
mov
sti
aaa
es
and
clc
testb
clc
fstl
pop
cmp
mov
pop
xchg
cmp
push
repnz
lcall
ljmp
sub
ds
insb
jns
and
ja
sbb
subl
mov
add
jle
in
imul
lock
or
es
fstl
sbb
aad
pop
stos
sbb
sbbl
pop
pop
xor
push
jecxz
aam
mov
ds
test
subl
les
add
xchg
xchg
push
or
mov
sub
daa
cmp
mov
jecxz
inc
out
xchg
inc
xlat
aam
jbe
mov
insl
mov
scas
stos
movl
mov
pop
add
cs
sbb
mov
or
pop
xor
mov
push
shlb
push
xor
out
or
es
lock
lea
not
adc
mov
inc
popl
mov
or
lcall
arpl
test
mov
mov
dec
sbb
pop
mov
out
sub
cmp
dec
xor
int
jno
arpl
xchg
mov
pop
cmc
mov
out
into
sbbb
mov
inc
jle
je
mov
lds
popw
repnz
icebp
mov
mov
in
rcl
cmp
movsl
adc
iret
int3
fwait
jle
jmp
dec
adc
sbb
push
xor
insl
sbb
int3
mov
es
mov
mov
sbb
imul
xor
sti
test
or
mov
mov
or
jmp
sti
pushl
mov
adc
push
push
xor
loopne
cmpsb
aas
in
or
push
xchg
xor
aad
cvttps2pi
xor
push
test
mov
xor
pop
test
mov
mov
xchg
scas
fdivrs
das
cli
xchg
push
in
jnp
leave
jnp
movntq
add
cmp
xor
cld
dec
mov
jmp
push
jmp
xorb
fildll
scas
xchg
or
int3
xor
shll
dec
push
popa
shl
inc
mov
mov
xor
outsb
jo
sbbb
ss
das
add
aam
aaa
cmp
push
lahf
pop
and
xchg
shll
mov
neg
fst
and
cmp
pop
mov
popa
inc
sbb
outsl
repz
sbb
and
adc
fwait
push
ret
leave
in
addr16
mov
mov
sbb
in
js
dec
vdivsd
aas
imul
mov
fisttpl
addr16
add
out
scas
lock
and
cmp
push
cmp
add
cltd
and
pop
aam
or
cmpsb
idivl
sbb
add
or
or
fwait
icebp
inc
push
add
jl
adc
push
sti
sbb
jmp
daa
movsl
pushf
cmp
test
imul
and
sbb
cli
pop
fnstsw
xor
cwtl
hlt
xor
gs
sbb
add
pop
shlb
mov
cmpb
pop
or
xchg
xor
jp
jmp
push
mov
and
and
sub
mov
pop
mov
adc
push
or
mov
loope
stos
adc
sbbb
xor
fadds
xor
stos
popa
add
xor
xor
xchg
in
sbb
and
mov
dec
scas
sub
cmp
cld
jg
cmp
nop
mov
xchg
or
pop
iret
push
dec
stos
sbb
nop
xor
ret
sub
push
mov
int
cli
ret
mov
push
cmpsb
cld
es
push
in
mov
movsb
and
lcall
and
xor
out
sub
mov
and
mov
insl
ljmp
xor
daa
subb
jg
ret
xchg
pop
mov
adc
cmp
pop
push
pop
and
cli
mov
mov
mov
and
or
mov
daa
sub
jnp
int3
jl
int3
xchg
push
stos
fmulp
push
jmp
inc
push
push
adc
std
mov
fmull
outsb
clc
scas
xchg
daa
stc
sti
ljmp
out
xor
rclb
mov
in
add
mov
stos
xorb
jmp
push
mov
mov
jge
stc
mov
ljmp
adc
enter
pop
xlat
test
lods
jecxz
cmpsl
inc
adc
jmp
sbb
pop
mov
das
inc
inc
aad
movsl
out
jne
enter
sbb
xor
stos
or
imul
pop
daa
les
js
mov
and
mov
or
xchg
xor
sti
cmp
or
sub
shlb
cmp
rcr
pop
or
push
ds
test
and
hlt
in
sbb
cmpsb
out
insl
cs
sub
adc
mov
push
mov
ljmp
inc
movsb
movsb
sub
mov
or
jb
repnz
sub
lcall
pop
mov
dec
rorl
xor
xor
popa
outsb
cmp
orb
adcb
dec
jmp
movsl
ss
movsl
mov
dec
lock
dec
fs
xchg
repz
dec
jle
inc
rcrl
dec
addr16
scas
mov
jno
pop
test
mov
stos
cli
push
inc
mov
add
jp
cmp
scas
das
mov
mov
jle
imul
fstpl
into
ss
sbb
fsubr
mov
fwait
aad
push
aam
fsub
scas
xchg
push
push
xor
jnp
inc
inc
sub
mov
mov
loopne
popa
test
and
daa
sub
addr16
cmp
fs
movb
jnp
icebp
cwtl
mov
testb
pushl
mov
packssdw
add
xor
mov
leave
test
mov
hlt
pop
fisubl
add
dec
push
add
setnp
inc
mull
repz
pop
mov
jbe
lcall
aad
mov
iret
jb
sti
cwtl
jbe
or
adc
ss
add
add
leave
les
push
push
data16
sub
pcmpgtb
pop
jecxz
mov
push
test
adc
in
cmp
or
inc
int3
psllq
inc
xor
aas
pop
in
pusha
js
sub
popf
push
xchg
fyl2xp1
xor
jge
add
push
cmp
or
and
sarb
andl
test
aaa
outsl
and
sbb
insl
mov
cmpsb
aas
pop
xchg
fsubl
lcall
sti
movsl
push
repnz
lods
pop
mov
pop
out
jg
inc
shr
or
not
loope
add
mov
aam
out
mov
stos
mov
adc
ficoml
xchg
sub
loopne
shlb
cmp
nop
cmpsb
xor
adc
mov
fwait
movsb
lods
cmp
cmp
adc
lahf
mov
loop
inc
testb
xlat
sub
and
pushf
out
in
xchg
mov
test
fld
jp,pt
jo
jns
fcmovnbe
hlt
fucom
outsb
xor
xor
mov
inc
js
pushf
add
jmp
cli
jl
cmpsb
cmc
mov
pop
andb
pop
data16
sar
push
repnz
sub
imul
insl
pop
or
das
scas
into
pop
mov
cs
mov
flds
lock
test
imul
sti
push
cmp
sub
aaa
cld
sbb
popf
sbb
aad
ds
arpl
rcrl
es
mov
fs
sbb
cwtl
or
popa
sbb
adc
lock
rolb
pusha
cs
rorl
xchg
push
int
lods
mov
xor
mov
fsubl
inc
je
shll
lock
mov
insl
jb
jbe
xchg
les
lret
sbb
lahf
sub
aam
sbb
fwait
movsb
sbb
jb
xor
sahf
or
pushf
adc
bound
rcrb
xchg
test
test
leave
andl
cmp
out
stc
je
scas
aaa
scas
pushf
push
mov
add
dec
jl
jns
outsl
outsb
cmp
dec
into
dec
into
imul
adc
adc
adc
movsb
mov
pop
mov
mov
sahf
add
or
adc
lods
jp
inc
pop
cwtl
xchg
push
fistpll
adc
mov
sbb
cmp
push
popa
nop
pop
into
dec
adc
inc
iret
ljmp
lds
test
adc
hlt
lret
imul
outsl
pop
and
mov
sbb
into
out
scas
dec
mov
loopne
lods
aaa
sbb
movsb
add
js
or
cs
lock
out
in
mov
sbbl
add
insb
pop
mov
jmp
pop
adc
add
dec
ja
popf
cwtl
xchg
aas
jp
mov
hlt
popf
xchg
push
test
sbb
test
xor
pop
mov
xchg
out
das
icebp
pop
mov
repz
lods
jne
dec
mov
jmp
push
cmp
pusha
out
add
test
movsb
xor
and
push
xor
out
aad
push
sub
fs
and
push
icebp
repz
test
inc
ja
aam
push
std
or
pop
xor
pop
pop
cmp
jne
mov
cmpsl
add
xor
in
js
outsb
and
push
cmpsb
push
push
mov
mov
call
cli
jo
mov
push
sbb
in
test
pusha
in
fdivl
stos
pop
mov
es
dec
sbb
jne
push
cli
jecxz
aas
popf
lods
ss
out
sarl
int
mov
test
mov
lret
stos
xlat
sub
sahf
cmp
mov
mov
shll
lcall
sbb
arpl
call
mov
sbb
sbb
icebp
mov
sbbl
adc
rclb
pop
xor
jae
jl
ds
fistpll
sahf
movsb
jecxz
jl
jmp
adc
lahf
and
outsl
mov
cmp
add
mov
arpl
lea
mov
addr16
loop
add
mov
jecxz
std
cld
mov
out
fwait
mov
sti
and
bswap
imul
mov
mov
pop
inc
inc
mov
pop
pop
push
fildll
into
mov
je
jb
leave
jp
xchg
mov
aaa
jg
xchg
pop
imul
ret
inc
mov
and
add
jae
fcmovu
sub
pop
cmp
jg
ss
push
add
shlb
mov
adc
fisubrl
ds
xlat
sbb
push
push
or
and
lcall
clc
fwait
pop
movsb
and
mov
inc
ret
mov
cmpb
fcoml
in
out
out
hlt
xchg
inc
aad
shl
jle
xchg
mov
insl
sub
mov
jecxz
xchg
and
pop
mov
lods
stc
iret
into
cmp
push
push
decb
mov
sub
dec
sbb
jnp
pop
mov
mov
xchg
lret
xchg
add
and
sub
xor
jns
stos
sbbb
pop
dec
adc
std
push
test
mov
and
pop
jns
sub
sbb
xor
xchg
call
sub
jo
fwait
sub
sahf
lods
es
arpl
mov
lock
and
aas
call
stos
addb
mov
cltd
push
jp
fmul
fisttps
imul
lods
and
inc
jnp
clc
repz
add
xchg
mov
mov
repz
inc
je
test
addr16
pop
lds
sti
or
repz
pusha
push
outsl
stc
xor
mov
xchg
sbb
es
cmp
jecxz
lcall
cld
mov
mov
aad
pop
sbb
sub
bound
insl
shlb
outsl
test
xchg
inc
subl
pop
lahf
jl
out
jge
lock
scas
es
and
adc
rcll
mov
mov
fisttps
sub
dec
jb
das
imul
lods
pop
rcl
mov
cmp
push
pop
shrb
out
add
mov
aaa
and
adc
inc
pop
lret
xchg
ljmp
xchg
imul
mov
fsubrp
sub
iret
add
pop
icebp
ss
scas
or
addb
push
add
pop
addr16
out
push
dec
jle
push
pushf
mov
sub
nop
mull
jl
xchg
push
mov
adc
add
inc
push
xor
sub
movlps
xor
inc
loopne
adc
aad
fwait
movsl
mov
xchg
mov
mov
stos
in
sbb
push
mov
mov
jmp
sbb
add
popa
and
sub
or
jl
and
leave
mov
jg
or
les
jg
sbb
fistps
mov
leave
adcl
sbb
or
mov
push
cmp
loopne
jo
rolb
call
es
and
aas
mov
js
add
mov
inc
adc
arpl
cli
out
aas
imul
hlt
xor
xlat
adc
insl
dec
imul
sbb
cmp
sar
xchg
add
std
and
jb
and
data16
ja
mov
mov
xor
sbb
xor
mov
leave
testb
pop
push
stc
xchg
stc
scas
and
lret
rcll
je
or
std
cltd
dec
arpl
inc
movb
cmp
dec
sub
insb
lret
lahf
ficoms
arpl
jno
movsl
mov
xor
push
mov
iret
push
stc
inc
js
jge
and
xor
sti
sub
leave
jno
adc
jmp
loopne
sti
repz
scas
push
imul
jecxz
xor
fldenv
cmp
js
outsb
jp
pop
imull
pop
sbb
jbe
sarb
sub
in
pop
and
fbstp
imul
icebp
push
sbb
jae
nop
mov
cmp
divl
or
jg
dec
arpl
push
mov
jmp
inc
inc
out
push
shll
pop
outsl
xor
fidivrl
sub
sbb
inc
lock
jecxz
ret
sub
lret
insl
in
sub
imul
and
sbb
push
mov
in
cmp
icebp
xchg
cld
jmp
adc
xor
sub
adc
pushf
mov
lcall
add
cmp
popf
mov
mov
shll
xor
scas
adc
pusha
addl
call
jbe
push
xor
fs
stc
imul
jecxz
jbe
xchg
shrb
cmp
jns
shrl
jle
inc
or
xchg
imull
push
jno
ret
push
dec
push
fnstenv
sub
cs
les
ljmp
xchg
and
pop
inc
lods
icebp
in
jns
pop
pop
mov
out
stos
jp
pop
adc
or
stos
pop
iret
out
in
jl
inc
mov
out
nop
fisttpl
dec
adc
add
sarb
js
fisubs
inc
repz
data16
cs
sub
lock
rol
mov
mov
test
adc
stos
add
mov
js
rclb
loope
or
test
dec
xor
push
mov
add
push
xchg
mov
cmp
mov
imul
jmp
sub
pop
data16
or
ret
adc
in
lret
nop
insb
cld
les
sub
shr
shr
fsubr
xchg
adc
mov
imul
add
int3
repz
pop
mov
and
push
cs
loope
je
adc
repnz
adc
subl
repz
mov
ljmp
jg
movsl
xor
iret
loop
movaps
scas
add
in
mov
fsubp
or
leave
test
cmp
adcb
sahf
mov
ljmp
rcr
lret
sti
sbb
scas
sbb
push
lahf
inc
push
pop
sub
cmpsb
pop
sbb
pop
pusha
or
xchg
aas
sbb
sub
cmpsl
shlb
sbb
cld
shlb
push
repz
cs
das
insl
lahf
jo
cmp
dec
sbb
sbb
mov
in
inc
fldt
insl
bound
rorl
lea
call
mov
pop
mov
push
out
or
popa
stos
adc
mov
aad
adc
icebp
ficompl
cmp
sub
cmp
clc
dec
gs
sub
jp
jge
mov
mov
fsubrl
lods
sahf
js
loope
xchg
loope
fidivs
ret
sbb
clc
push
sub
adc
dec
add
les
shl
pop
adc
sahf
loop
mov
mov
mov
jo
push
mov
dec
dec
aaa
cwtl
rsm
test
pop
shl
lock
les
mov
xor
sub
pop
and
movsl
pop
scas
mov
pop
gs
jmp
mov
pop
mov
adc
sbb
sysenter
fwait
cmpsb
test
test
jns
outsb
jge
xchg
int
sbbb
or
enter
pop
insb
push
in
add
push
xor
mov
popf
mov
or
in
inc
aas
mov
arpl
xchg
and
sbb
mov
adc
scas
je
scas
mov
inc
add
mov
cmc
outsb
mov
arpl
add
jmp
mov
pop
test
mov
fdiv
out
mov
nop
or
or
adc
gs
sub
in
enter
sbb
lds
inc
cmpsl
loop
xchg
and
push
mov
test
in
mov
push
mov
xchg
jno
mov
or
pusha
adc
pushl
lahf
cmpsl
jge
shll
jge
or
jle
lea
dec
xchg
xchg
ds
pop
dec
xor
adc
inc
jno
stc
aaa
mov
cmp
mov
ret
add
cmp
xchg
add
lcall
inc
jecxz
sub
es
les
shll
lea
fimull
xchg
sbb
movnti
outsl
stc
cmp
lahf
out
xchg
fists
int
sti
cli
xor
and
nop
popf
stos
mov
fidivl
push
cmp
jle
dec
bound
add
sbb
push
mov
cmp
aam
inc
sbb
outsb
jg
or
jo
mov
add
xlat
lea
or
lock
push
and
add
inc
cs
mov
aas
mov
sub
or
add
int3
pop
inc
inc
xchg
jns
adc
xor
adc
fndisi(8087
pop
jg
mov
inc
gs
shlb
jno
cmp
jl
pushf
fs
cmp
pop
out
flds
jg
jno
sti
lret
fbld
jmp
mov
dec
cmpl
xchg
xor
inc
push
stos
pop
orl
adc
adc
sbb
and
cmpsb
sbb
sub
fsubrs
adc
and
mov
inc
popa
mov
push
xor
fcomp
imul
sbb
mov
mov
andb
push
scas
mov
mov
adc
sub
adc
xchg
add
inc
mov
dec
cmpl
mov
push
in
bound
arpl
jbe
push
ljmp
je,pt
jle
stc
add
sbb
jle
out
mov
fptan
mov
mov
shlb
push
xchg
mov
arpl
icebp
jnp
out
inc
jg
adc
dec
fld
mov
subl
je
nop
inc
cmp
movsb
or
ljmp
cmp
push
mov
pop
cld
adc
jo
cmc
jne
jp
mov
push
or
mov
fwait
test
imul
push
push
jg
mov
inc
sarb
cmpsl
fwait
outsb
aaa
dec
call
inc
push
mov
cmp
insb
lcall
adc
fcomps
not
push
mov
cs
cwtl
stos
jo
fucomi
stc
dec
fwait
xchg
in
in
xchg
dec
jecxz
pop
rorl
repnz
push
adc
test
cmc
pop
das
xchg
mov
mov
xor
mov
jbe
mov
jecxz,pn
mov
pusha
shrb
add
or
sar
flds
subb
jo
pop
add
je
adc
std
and
mov
xor
out
test
sub
adc
movsl
stc
or
enter
adc
push
pop
mov
push
in
cmc
push
ja
cmp
dec
repz
xor
imulb
xchg
popa
and
mov
nopl
push
bound
cmp
mov
dec
cmp
stc
lock
or
test
lahf
cwtl
mov
add
xor
pop
mov
fnsave
xor
and
ljmp
pop
das
insb
movsb
adc
lock
int3
jmp
fwait
std
clc
cmp
jno
mov
ret
or
fmuls
jle
mov
mov
es
xchg
sub
jb
inc
adc
lret
push
scas
and
dec
fwait
iret
int
jne
adc
arpl
add
mov
popa
stos
mov
and
std
dec
pop
jecxz
ljmp
mov
push
imul
xlat
mov
push
inc
fs
xlat
sub
and
mov
ja
adc
outsl
or
rolb
sub
inc
push
scas
mov
ljmp
test
lret
push
push
test
cwtl
xchg
sub
vcmpss
movsb
gs
mov
data16
dec
push
into
xor
xor
int
jle
cmp
lods
ja
ljmp
sbbb
or
mov
mov
push
mov
jo
iret
insb
lret
scas
ds
jb
xor
repnz
fstpl
in
in
dec
loop
push
sub
test
or
xor
mov
or
jl
movb
cwtl
xchg
divb
mov
xlat
lahf
lock
sbb
sub
pop
aaa
test
add
xchg
dec
pop
inc
lock
sub
int
xchg
xor
adc
push
pushf
push
add
rcrb
ret
adc
xlat
mov
movb
stos
andb
add
push
lock
or
lea
loope
js
pop
les
cltd
jnp
fnstenv
test
mov
adc
pop
xchg
and
testl
std
mov
insl
fdivl
cmp
sti
daa
xor
rclb
dec
loopne
nop
or
imul
mov
and
add
sbb
add
mov
cmp
imul
lahf
mov
fsubrl
movb
std
les
mov
lods
mov
inc
xor
loope
ds
ss
insb
xchg
and
fisttpll
mov
mov
nop
in
jns
out
mov
push
test
scas
cs
mov
xchg
shrb
shll
nop
push
pusha
jmp
or
shlb
adc
cmp
and
cld
jecxz
and
mov
push
jns
cmp
sar
mov
pop
xchg
xor
repnz
sub
or
lret
mov
inc
das
sub
sub
dec
pop
mov
cmp
loop
push
movsl
xor
and
jle
je
test
sti
jmp
dec
testb
jge
or
mov
and
call
add
imul
or
popa
sub
sub
pusha
add
jnp
mov
push
popf
mov
stos
frstor
cmpsb
cli
add
mov
dec
je
push
xchg
mov
divps
test
xchg
sbb
sub
fsubrs
sub
fwait
and
inc
xor
push
mov
or
inc
loop
dec
sbb
or
aas
sbb
add
push
daa
push
pushf
jge
cmp
nop
dec
cltd
movsl
jbe
roll
rcl
or
inc
cmp
jle
test
push
repz
xchg
out
sahf
fbld
ja
ret
popa
sub
out
insl
andb
je
cmp
lods
or
jno
jmp
sbb
ret
pop
jo
sub
cmp
sbb
sbb
or
int3
out
mov
out
xor
cmp
mov
jge
cld
add
fiaddl
pop
cmpl
jns
or
ret
imul
popf
push
popl
pop
js
dec
ret
inc
insb
int
sub
lods
cmp
push
aam
sbb
jp
arpl
icebp
mov
fildl
fs
inc
mov
fwait
add
and
jg
test
ret
pop
adc
sahf
pop
repnz
and
sbb
push
ret
xchg
dec
jne
inc
xor
into
lods
and
or
insb
movsl
addr16
push
pop
mov
dec
arpl
or
test
xchg
fnsave
cmp
ss
jbe
mov
hlt
das
call
jg
pop
push
dec
and
daa
sbb
inc
jg
shlb
jge,pn
inc
cmp
addr16
lahf
push
imul
or
popa
fisttps
add
xchg
sahf
pop
stc
mov
sahf
lret
mov
mov
aam
hlt
push
xor
push
and
or
push
fildll
das
mov
lcall
mov
sub
sti
daa
popf
sbb
into
push
mov
imul
jae
cmpsl
lret
sahf
lret
add
mov
cli
mov
imul
stos
insb
push
sbb
cmp
sbb
cmc
repnz
jge
and
in
adc
jmp
into
popf
sti
jl
or
or
cmpsl
adc
imul
pop
mov
xchg
ss
mov
xchg
xchg
in
jne
aaa
cmp
jno
sbb
cmc
movsl
and
jmp
test
lock
xor
pusha
ss
lcall
sbb
dec
xor
inc
mov
jb
fdivrl
add
sub
add
fisttpll
jno
cmp
stc
jo
xor
dec
add
mov
test
or
add
push
lock
addr16
mov
cmp
js
in
ss
fs
mov
mov
lea
fldln2
and
movsb
xchg
mov
aas
lds
clc
lods
lahf
or
xchg
mov
fwait
shl
push
push
xchg
pushf
imul
pop
out
iret
cld
leave
in
cmp
push
ss
loop
cwtl
jae
cmp
ror
arpl
test
jle
dec
jle
xchg
cmp
daa
xlat
push
imul
mov
inc
out
xchg
jp
mov
out
mov
push
ret
pop
aas
lea
imul
inc
lcall
jae
in
jb
xchg
jae
es
sub
cmp
repnz
pusha
sub
jge
or
adc
mov
insb
mov
mov
adc
sub
pop
sbb
ror
xchg
jbe
cmc
xchg
jns
jmp
jmp
cmp
mov
call
adc
pop
lret
jp
adc
push
and
out
mov
xchg
or
es
mov
mov
pop
mov
addps
dec
je
fwait
cmovb
loopne
lock
pop
ja
arpl
nop
fsubrl
xor
jmp
rclb
jne
out
dec
push
jecxz
mov
incb
gs
jp
xchg
or
out
imul
mov
clc
xchg
sti
enter
jo
call
dec
in
and
test
enter
fdivrl
sub
and
faddl
or
mov
mov
in
pushf
icebp
xchg
in
sbb
pushf
or
push
or
fdivrs
mov
mov
subb
jns
jle
iret
mov
ja
test
nop
movsb
leave
pop
jp
add
push
sahf
lods
loop
es
outsl
inc
sub
in
push
dec
js
rcrb
jmp
andb
cltd
push
in
inc
aam
jne
jp
je
ss
cmpsl
rcrb
es
xor
std
jns
xor
popf
out
ret
add
rclb
jmp
lret
mov
insb
cbtw
jae
lcall
pop
call
clc
aaa
or
jns
xor
push
call
push
dec
and
adc
insl
loop
movsb
je
imul
out
mov
das
cmove
cmp
push
push
test
mov
adc
jl
xor
ss
mov
sub
in
aaa
jl
sbb
mov
fcoml
rolb
push
stc
xchg
dec
daa
ds
sub
cmp
outsl
mov
testb
js
xor
into
inc
jns
mov
sarb
mov
dec
mov
xchg
popf
les
mov
jp
pop
mov
push
leave
fadds
sub
out
jae
mov
and
jbe
outsb
push
xsave
and
nop
push
and
mov
sub
repz
xchg
pop
andb
sub
int
push
insb
icebp
sub
sub
sbbl
jg
out
pop
jg
inc
pop
xor
push
mov
mov
jae
jb
arpl
lahf
push
fst
and
xlat
std
cld
pop
sub
into
jo
not
pusha
push
add
fadds
xchg
cmc
jp
jmp
fisubrs
xchg
inc
and
fsub
outsl
stos
fwait
es
scas
pushf
repnz
mov
mov
ja
sub
push
nop
loop
es
outsb
jne
and
mov
or
push
ljmp
ret
mov
out
cmc
mov
dec
mov
ret
daa
hlt
add
js
in
add
lret
arpl
fsubrs
mov
nop
inc
xchg
mov
inc
repnz
fsub
subl
aad
ret
fstp
push
arpl
xor
mov
xchg
add
ret
push
stos
xchg
sbb
jns
xchg
add
or
lret
and
pop
aam
jg
mov
mov
pusha
pushf
jmp
push
test
mov
sti
outsb
pop
sbb
sbb
push
jae
ss
out
int
iret
rcl
xlat
mov
xorb
loop
sbb
jp
int
mul
mov
rcr
jne
push
mov
gs
dec
nop
sbb
xor
or
test
fwait
stc
cmp
cmp
fimull
ds
arpl
mov
nop
test
cmp
mov
idiv
xchg
xor
mov
addl
push
fstpt
mov
dec
adcl
or
bound
test
mov
mov
outsl
or
aad
out
mov
sub
mov
sbb
jp
pop
lahf
dec
pop
xchg
fs
imul
jmp
popf
pop
cmp
jns
jl
pop
add
out
jmp
clc
in
int3
inc
ss
jbe
sbbb
ds
sub
loopne
push
push
gs
cli
inc
clc
push
push
fsubrp
jns
ret
addr16
cmp
scas
adc
lock
test
fisttpl
orl
fcoml
push
mov
mov
dec
mov
je
fiaddl
mov
out
mov
add
adc
pop
add
outsb
test
xlat
addr16
or
hlt
jmp
fcoms
int
pop
and
test
mov
dec
gs
lret
scas
pop
add
pop
imul
pushf
push
mov
pop
inc
jbe
xchg
cltd
jne
dec
cmp
mov
out
test
aad
enter
scas
jp
int3
popa
and
mov
pop
pop
mov
pusha
packssdw
sbb
hlt
xchg
fiadds
int
pop
std
mov
iret
nop
lahf
push
stos
dec
add
sbb
inc
push
inc
movsb
jo
out
or
inc
out
mov
xor
fidivrl
dec
popf
push
int3
jno
add
rcrl
mov
or
movsb
mov
mov
jmp
sub
cmp
js
pop
lods
adc
push
xchg
imul
std
test
rcll
sahf
inc
fsubrl
xchg
xchg
loop
xchg
jge
xchg
fst
push
scas
scas
jo
sahf
ss
pop
pop
out
gs
sti
sti
xchg
and
dec
mov
jl
into
pusha
xor
insl
mov
pop
inc
mov
and
cmpsb
xor
adc
lret
cmp
test
and
les
xchg
shlb
or
out
adc
or
leave
push
mov
pushf
scas
js
mov
mov
aam
outsl
sub
insb
popa
xchg
xchg
adc
insb
aam
and
xchg
add
cli
js
and
fisttpll
push
lret
pop
jecxz
jb,pn
rorl
mov
adc
dec
push
lock
add
ljmp
cld
xor
mov
jg
sub
loopne
cmpsb
mov
inc
aaa
fistpll
push
jnp
and
insl
sbbb
loopne
dec
xlat
push
aas
mov
cmp
or
cmpb
pop
gs
push
push
cmp
jmp
fdivl
dec
sbb
dec
cmpsb
out
popf
or
mov
movsl
movsl
insl
mov
adc
clc
inc
dec
xchg
jno
pushf
xlat
fcompl
sub
mov
cwtl
fisttps
adc
or
pushw
mov
mov
aas
sar
mov
test
rol
mov
pop
out
inc
adc
pop
dec
mov
and
jle
sbb
test
pushl
stos
fsubs
sti
movsl
mov
bound
ret
stos
stc
jmp
pop
rorl
in
sub
enter
jae
loop
data16
bound
mov
add
push
jae
or
leave
cmp
mov
or
adc
jg
aas
cmp
jg
jne
dec
ret
pop
and
lods
iret
mov
mov
outsb
inc
lcall
add
add
lcall
jmp
cmpsl
or
fadd
ret
scas
mov
testl
adc
jmp
or
xchg
sbbb
subl
dec
fnstsw
hlt
mov
push
pop
ja
mov
lods
lods
mov
out
push
inc
fwait
ret
xor
sbb
cmc
xchg
fdivr
inc
adc
mov
mov
mov
out
jnp
dec
loop
mov
mov
loop
mov
fdivrp
pop
cmp
xchg
fwait
mov
test
inc
mov
mov
inc
ror
mov
lods
ljmp
xchg
fisttps
or
test
mov
fistl
or
lock
popa
pop
pop
push
inc
movsl
ja
xor
aaa
cs
jge
pop
mov
rclb
inc
jb
cs
out
ret
stos
leave
and
lods
lret
cmp
mov
pop
popf
mov
sbb
and
pop
push
cmp
mov
xchg
mov
dec
aas
xor
mov
lods
popa
mov
and
push
sub
loop
mov
mov
test
testb
cmp
ret
cmp
adcb
mov
xor
push
pushf
mov
push
adc
jo
mov
shlb
lea
or
dec
mov
nop
xchg
dec
pop
push
xor
cmp
lret
xchg
jge
or
xchg
push
mov
cld
scas
cmpb
xchg
mov
jge
mov
mov
shrb
or
push
xchg
pop
jle
fidivs
dec
lcall
aam
scas
shlb
mov
ficoms
sub
call
loopne
pop
mov
xor
push
dec
sbb
push
movsl
popa
jp
and
sub
pop
sbb
add
aaa
fcoms
mov
xchg
aad
pop
pusha
mov
add
std
or
pop
and
clc
xchg
jns
pushf
push
pop
rcrl
int
js
enter
loopne
push
popf
in
ror
sub
add
dec
stos
sahf
and
shlb
sbb
test
decl
sub
pop
mov
pushf
mov
xor
dec
ss
push
xlat
mov
fidivs
xlat
xor
cmp
loope
repnz
sub
leave
arpl
fcomp
shll
sarb
aas
or
stos
push
xchg
and
xchg
mov
dec
fildll
movsb
fldenv
fidivl
sub
icebp
inc
xchg
pushf
movsl
dec
push
push
cmp
inc
cwtl
js
in
fisttpll
stos
out
jnp
sub
out
call
push
jno
adc
insb
xchg
arpl
jmp
cmpsb
mov
test
mov
pop
bound
adc
cmp
ss
dec
icebp
outsl
push
mov
in
xchg
inc
cltd
inc
inc
mov
xchg
sahf
xchg
lcall
sub
and
movsb
dec
pushw
aas
push
rclb
mov
in
push
pop
in
inc
inc
outsl
test
mov
mov
shll
imul
and
pop
or
cmp
xor
or
dec
pop
add
and
pop
sub
rcrb
cmp
lods
jnp
orl
ss
add
sub
mull
sub
mov
push
lcall
mov
movsl
test
sbb
es
ror
mov
lahf
jbe
sbb
fisttpll
pop
mov
aaa
int
popa
adc
xor
outsl
jns
roll
fxch
jmp
sub
mov
xor
push
lods
cmpl
mov
shll
cmc
adc
xchg
repz
mov
test
adc
lahf
sbb
out
ret
mov
out
push
xchg
testb
mov
sub
xchg
inc
lcall
cmp
fidivl
pop
popa
ficomps
sbb
and
or
jmp
xor
lea
rorb
lds
dec
ds
sbb
add
sbb
jle
add
rcrl
rcl
outsl
mov
adc
add
push
jmp
cmp
sub
mov
sarb
aad
fistl
pop
mov
pusha
xchg
lret
sarl
in
dec
shrb
idivb
mov
stc
inc
lock
test
inc
fisubrs
lods
mov
mov
pop
lret
push
lret
lds
mov
mov
fisubrs
scas
add
sub
push
adc
mov
leave
cmp
rorb
or
jp
ljmp
push
sti
not
mov
repnz
bound
and
cmp
push
or
pop
xor
fwait
mov
adc
shrb
fadd
andl
test
pushf
xor
dec
sbb
pushf
cwtl
push
rorb
sbb
ret
add
mov
mov
xor
xor
push
or
cmovs
outsl
dec
test
sub
in
dec
mov
push
outsb
xor
and
out
push
daa
adc
lcall
nop
xchg
mov
lahf
and
fildll
cltd
std
ror
call
push
or
int
sbb
xchg
adc
in
std
imul
xor
jb
pop
clc
int3
xchg
movsb
mov
dec
lret
test
add
jno
ficompl
push
test
mov
push
jl
xchg
sbbb
xchg
fdivrs
adc
out
cwtl
shl
push
xchg
stos
cmp
and
and
sub
popf
mov
clc
in
test
lds
in
lret
cs
xor
movsl
outsb
inc
test
push
int
cmp
movsb
rclb
xchg
pop
mov
dec
test
add
inc
mov
cmc
lods
test
or
fldt
cwtl
out
or
xlat
mov
lcall
fs
xor
xchg
xchg
pop
aas
icebp
or
xchg
xchg
sbb
aam
cmp
xor
add
mov
in
inc
xchg
ret
cmc
pop
adc
inc
lret
adc
ljmp
mov
stc
sub
sahf
jb
mov
inc
inc
hlt
ljmp
imul
in
rcrl
mov
std
jge
push
mov
dec
pop
fldenv
mov
stc
mov
push
mov
shr
fstl
fsubrp
inc
arpl
andl
mov
xchg
sbb
sub
and
leave
push
push
sub
mov
iret
lcall
je
jo
push
and
push
nop
mov
pop
cwtl
inc
movsb
ss
lcall
xchg
cmp
xchg
xchg
sub
inc
lock
dec
icebp
push
imul
or
sbb
fs
jge
push
scas
sbb
lds
fists
xchg
pop
outsb
out
xchg
sbb
inc
mov
sub
sbb
int
push
aam
insl
jbe
jg
mov
stos
pusha
std
mov
lock
push
or
or
sahf
jge
mov
mov
sbb
sahf
mov
mov
mov
fdivrs
lea
mov
xor
jmp
iret
add
jl
and
pop
jl
nop
loope
inc
adc
data16
xor
les
int3
stos
cmp
mov
outsb
fucomip
mov
hlt
jg
into
int
mov
ljmp
push
dec
add
or
sbb
and
dec
call
inc
or
sbb
or
mov
lock
stos
jg
pop
gs
sbb
push
sub
or
js
mov
shrb
ds
daa
or
icebp
and
inc
lahf
sbb
into
and
push
ss
jg
jno
rorb
jnp
or
loopne
movsl
out
sub
cmp
dec
mov
dec
js
sarb
adc
imul
xchg
imul
inc
pop
gs
into
push
push
mul
mov
int
cltd
sub
jbe
lcall
xchg
pop
stos
add
xchg
popf
hlt
adcl
mov
fwait
adc
push
push
push
ret
rcr
inc
and
or
xor
fisttps
xor
mov
inc
and
dec
sub
push
mov
pushl
push
stc
rolb
test
push
xchg
mov
push
mov
dec
shl
push
jle
cmpl
icebp
into
cwtl
dec
adc
mov
pop
or
fnstenv
sub
dec
mov
pop
pop
lret
lea
ds
adc
scas
dec
test
scas
addr16
jle
push
dec
jns
loopne
jns
iret
rolb
iret
sub
mov
fdivrs
das
dec
mov
fcomi
adc
and
es
xlat
mov
leave
movl
and
pusha
mov
in
enter
push
rcr
xchg
adc
push
xchg
and
jo
fcoml
pop
add
loop
jg
shl
sub
pop
cmpb
dec
adcl
iret
cmp
push
cmpsl
add
inc
cmp
out
negl
dec
shrl
mulb
loope
pop
subl
add
inc
outsl
subb
test
push
insb
fnstcw
inc
xor
and
and
jnp
add
shrl
int
or
sub
and
add
and
dec
lcall
xchg
add
je
jl
xor
mov
add
popf
xor
arpl
xchg
and
push
cltd
jmp
sub
dec
mov
or
mov
inc
dec
fistpll
pop
nop
les
ds
mov
push
insb
pop
stos
xacquire
jnp
cmp
shlb
push
movsl
fisubrl
sub
and
pop
pop
daa
mov
loopne
xor
dec
lret
cmp
leave
inc
shl
sub
icebp
push
adc
mov
inc
lods
sub
jge
ja
jb
lea
dec
das
jmp
jns
shrl
iret
cmpsb
inc
and
fwait
mov
ljmp
fcom
iret
lods
fwait
or
mov
push
push
or
pop
addr16
pop
xor
push
outsb
add
int3
jno
mov
in
es
lcall
mov
xchg
cmc
mov
pushf
xchg
cld
and
outsl
insl
daa
imul
dec
es
pop
mov
adc
lock
js
pop
pop
jg
adc
orl
jmp
add
push
xorl
xchg
in
sbb
movsl
xor
push
in
add
dec
xlat
jmp
std
test
es
lock
out
icebp
into
decl
aas
mov
mov
push
idivl
lds
mov
enter
xorb
in
inc
add
fidivrs
xor
shrl
fcoml
gs
or
testb
insl
imulb
mov
ljmp
dec
jge
push
fistpll
mov
scas
test
repz
and
mov
add
iret
fistl
jns
std
mov
mov
jge
lret
jae
stc
rclb
in
movsb
icebp
cmp
dec
xchg
push
imul
lret
testl
fs
mov
outsl
cli
out
and
push
outsl
pop
scas
cld
dec
mov
jg
pop
dec
stos
adc
fidivs
arpl
les
clc
bound
push
jnp
pop
mov
notl
fistpl
loope
mul
or
and
out
lret
xor
ds
jns
out
fnstenv
stos
out
or
jmp
lock
adc
add
jb
pop
and
mov
or
shlb
ds
sti
ss
fucomp
call
enter
lea
iret
mov
xchg
cmc
pop
insl
sub
mov
lods
xchg
sbb
xor
rorb
jnp
or
lods
rorl
sahf
mov
out
cmpsl
inc
adc
insl
out
xorb
fisubrs
out
adc
repnz
imul
std
rorl
lods
or
outsl
mov
negb
leave
pop
scas
adc
test
mov
stos
or
and
pop
std
and
insl
sbb
jp
das
rcr
sub
scas
jg
ss
cmp
aas
jb
sbbl
sbb
and
punpcklwd
push
addr16
xor
mov
add
lcall
dec
inc
jbe,pn
mov
mov
movsl
fcoms
sub
jo
cli
xchg
cmp
test
jg
mov
jb
mov
movsl
cltd
pop
add
popa
stos
aam
or
sbb
out
sub
shrl
mov
fs
lds
cmp
pop
mov
popa
fstpl
jo
sub
sub
and
mov
jmp
repnz
mov
mov
loope
popa
cmp
cmp
mov
cmp
ret
repz
lea
outsl
loopne
dec
lods
fldenv
dec
call
stc
push
fld
int3
out
push
jg
and
jmp
xchg
cmpsb
loop
mov
cwtl
mov
cmpsl
cmpsb
push
ljmp
sub
aaa
xchg
daa
pop
xchg
lahf
mov
xchg
cmp
loopne
dec
rcrl
fistpll
jo
in
mov
jg
loope
mov
movsl
bound
or
pop
mov
cltd
xchg
sbb
sahf
test
scas
inc
arpl
loope
jle
sbb
adc
iret
aas
xchg
popa
mov
lahf
clc
adc
mov
mov
mov
sti
and
rol
in
push
ja
pop
int3
xchg
push
fiaddl
faddl
out
jo
mov
outsl
xchg
jae
clc
stc
imul
push
les
inc
or
adc
out
pop
rcll
add
adc
sti
imul
fdivs
cltd
ds
mov
mov
inc
inc
fstpt
adc
xchg
sahf
inc
xor
xchg
pushf
pop
xorb
adc
adc
stc
sar
repnz
cmc
mov
test
shl
mov
push
icebp
loope
test
or
shlb
je
push
movhps
xlat
sbb
fldenv
mov
pop
cmp
sbb
inc
outsb
add
mov
bound
aas
cmpsl
mov
inc
nop
ficoms
cmp
mov
fmull
mov
repnz
fimull
and
adcb
gs
xchg
add
rclb
push
imul
ror
dec
add
arpl
sti
jmp
xor
inc
inc
jno
or
repz
and
rorl
inc
mov
ffree
mov
sbbb
test
xchg
in
jge
xor
ret
mov
movsb
test
dec
xchg
cmpsl
dec
test
inc
sbb
pusha
inc
cmpsb
repz
addb
sub
push
pop
dec
into
fmul
call
ljmp
fldl
sbb
mov
sub
sbb
jecxz
lret
out
popa
xor
xorb
dec
sbbb
mov
repz
sbb
aas
insl
cmp
inc
setnp
loop
bound
test
mov
pop
dec
nop
addr16
pop
pop
xchg
sbb
testb
cwtl
xchg
bound
sbb
mov
adc
xchg
xchg
dec
cmp
xor
lods
and
push
ret
or
pop
movsl
cltd
test
fiadds
stos
and
loopne
cmp
inc
shlb
and
cli
inc
loop
adc
pop
stos
mov
in
add
in
cmpl
jecxz
add
dec
dec
and
les
mov
loopne
pop
add
imul
or
notb
and
mov
insb
data16
ret
push
push
cmpsl
push
and
lea
xchg
pop
scas
add
out
mov
inc
jno
sbb
mov
insb
pushf
pop
jg
cld
aad
movsb
mov
outsb
mov
mov
add
or
aas
dec
dec
push
jns
mov
sbb
mov
ficoml
jecxz
loope
aad
into
pop
fdivl
pop
fidivrs
div
jl
fdivrl
fwait
pop
push
or
mov
xor
mov
arpl
jmp
shll
pop
mov
xor
stos
repz
xchg
jbe
popf
pop
dec
imulb
push
pop
lods
shlb
pop
add
fcmove
stos
test
push
cmp
shrl
mov
jns
cwtl
jns
dec
addr16
mov
test
inc
in
dec
mov
add
setge
aam
push
jo
or
jle
lea
call
cmp
sub
dec
cmpsb
sbb
xchg
jnp
jno
pushf
mov
and
and
aad
and
xor
hlt
mov
aaa
adc
aad
mov
inc
fs
je
push
sbb
jae
push
mov
push
fisubrl
cmp
push
les
add
cld
jne
mov
ret
push
movsl
xchg
lock
mov
xchg
push
sbb
mov
adc
faddl
loopne
mov
add
jae
and
mov
out
jle
mov
jle
ja
pop
lods
inc
mov
repz
lods
pop
push
add
repz
sbb
xchg
inc
add
push
int3
lock
daa
sbb
xor
std
jge
sub
pop
xchg
push
xlat
push
adc
test
rcrb
pushf
imul
testl
js
sub
mov
test
adc
pop
ljmp
popa
xchg
stos
mulb
pusha
hlt
test
rorb
pop
pop
jb
stos
inc
add
sbb
ss
inc
push
shrb
lock
lods
dec
lock
fs
mov
sbb
mov
jmp
cmp
jne
sub
jne
sub
xchg
jbe
jle
les
xor
stc
shrl
hlt
jb
pop
aad
pop
rorb
push
cmpl
loopne
or
mov
push
add
pop
sub
mov
pslld
and
sti
or
jle
lock
mov
rolb
pop
fxtract
adc
mov
repz
das
in
sbb
stos
and
mov
fidivrs
popf
cwtl
ret
push
stos
loopne
cwtl
add
into
sub
cmp
stos
jle
xchg
inc
into
mov
ret
cli
xor
cmp
mov
test
arpl
pop
mov
or
jg
shl
xchg
mov
cltd
cld
enter
sahf
repnz
dec
pop
idivl
xor
xor
xchg
les
mov
roll
inc
and
dec
and
movb
mov
dec
push
and
pushl
dec
cmp
jle
jle
jb
lds
test
mov
aam
mov
in
jo
mov
pop
sbb
jecxz
insl
and
xor
inc
mov
js
adc
mov
imul
xlat
sbb
push
mov
mov
fldl
pop
mov
jecxz
repnz
das
sbb
insb
inc
rcrb
dec
pop
divb
adc
lods
xor
mov
arpl
dec
mov
cwtl
roll
ret
or
cs
lret
insb
sahf
hlt
fmuls
sbb
test
shll
rclb
insb
and
push
rcll
pop
pop
adc
add
loopne
orl
xor
lret
pop
fcomi
lods
mov
and
test
push
notl
xor
adc
mov
push
push
arpl
clc
test
cmp
cmpsb
inc
sub
mov
inc
mov
xlat
mov
pop
mov
lea
lret
cmpsl
xorl
ss
add
sub
arpl
pop
push
sub
test
jne
cmc
icebp
inc
out
dec
in
mov
mov
xchg
jbe
push
lods
loop
xor
addr16
mov
scas
imul
insl
jnp
xor
add
xor
pop
fucom
pop
cld
popf
cmpsl
bound
ret
jg
nop
cld
std
adc
push
insb
loop
sub
fiadds
adc
mov
ds
push
aas
dec
push
adcb
sbb
mov
outsl
lret
push
xchg
cmc
sbb
aad
pop
add
adc
lds
mov
mov
pop
mov
xor
dec
fsubrs
mov
test
mov
jne
fucomi
sbbl
pop
adcb
popa
fcomip
test
arpl
add
cmc
or
inc
sahf
notb
loop
sbb
mov
sarb
into
xorl
sbb
and
test
scas
cmp
xor
out
lods
movsl
jns
xchg
aam
sub
shll
call
sahf
inc
inc
leave
dec
xor
sbb
inc
arpl
pop
or
jne
lret
jne
add
and
mov
and
sub
xchg
sbb
sbb
test
dec
aas
adc
rol
mov
cmpsl
dec
sti
and
lods
in
jmp
arpl
mov
out
bound
jl
aas
pop
and
fs
jo
jmp
insl
pop
pop
fistpl
les
ret
fs
cli
insl
mov
cmpsb
sub
adc
xlat
cmp
dec
daa
mov
jl
jnp
bound
out
lahf
lret
mov
jle
leave
inc
lea
mov
lcall
push
push
mov
in
movsl
dec
hlt
jmp
aas
nop
lea
stc
mov
lods
scas
dec
dec
popf
adc
cwtl
mov
loope
mov
push
lahf
rorl
les
mov
inc
leave
pop
iret
push
pop
inc
mov
dec
pop
jecxz
loopne
sbb
daa
loopne
mov
xchg
in
mov
in
xchg
fucomip
sbb
add
cltd
cmp
sub
mov
inc
push
or
cmpsb
and
adc
int3
sub
mov
adc
iret
data16
mov
pop
hlt
jle
out
gs
out
bound
aas
mov
aaa
emms
cmp
test
fwait
dec
fwait
adc
xorl
cmp
add
test
cs
sbb
cmpsl
or
leave
shll
push
mov
cli
add
idiv
out
icebp
pop
cmp
and
lock
sbb
popf
jns
data16
sbb
mov
ret
mov
and
sbbb
dec
les
scas
aad
xchg
enter
scas
clc
cmp
xchg
mov
gs
fimuls
sbb
dec
dec
outsb
push
ja
fsubs
enter
mov
xchg
xor
pop
mov
negl
pusha
sub
dec
insb
mov
sarl
push
cmp
mov
sbbl
aaa
stos
inc
sbb
sahf
fs
imul
or
dec
test
mov
xor
jecxz
push
cltd
mov
jle
mov
iret
mov
mov
imul
xorl
and
sbb
test
cmc
jle
dec
fcompl
in
adc
bound
adcl
dec
subl
sub
adc
out
mov
out
sub
and
or
pop
add
dec
jl
cmp
sbb
cmpsb
sbb
test
dec
addl
add
lret
mov
jo
inc
and
xchg
icebp
xchg
es
dec
cmp
xor
xchg
push
icebp
dec
and
stos
aas
loope
stos
ss
push
daa
add
sub
clc
or
pop
das
mov
push
aaa
loope
pop
inc
cmpsl
outsb
loop
in
or
sbbb
out
push
xchg
scas
mov
push
lea
addr16
test
inc
loopne
mov
or
xor
mov
ret
push
jge
pop
lcall
push
cmp
aam
into
cmp
inc
cli
lock
inc
scas
mov
sub
jne
arpl
dec
lcall
lods
xchg
shll
mov
or
mov
scas
fidivrl
sbb
jb
jnp
mov
dec
loopne
adc
add
push
jb
ficoms
das
es
es
stos
inc
jae
sbb
mov
lds
dec
jbe
and
lahf
jecxz
xor
lods
sub
cli
orl
cs
fisttpll
or
push
pusha
pop
ljmp
test
inc
ja
or
add
gs
data16
jo
dec
inc
insl
rcrl
mov
arpl
cmc
ficoml
or
nop/reserved
loopne
jp
mov
dec
mov
cmp
pop
push
mov
leave
bound
shl
lcall
xchg
dec
aad
push
scas
sub
fwait
sbb
mov
lods
int3
mov
push
frstor
pop
mov
mov
add
out
in
mov
fisubrs
scas
adc
cld
mov
sub
enter
out
cld
push
cmpsl
mov
movsl
pop
roll
test
lods
fstpt
mov
test
sub
popf
arpl
test
nop
pop
push
sub
adc
adc
movsl
aaa
lret
push
rep
xchg
je
xor
scas
ljmp
sub
cmpsb
into
sbb
cmpsl
xchg
or
dec
inc
mov
push
popf
loop
and
hlt
pop
or
cmc
mov
fwait
movsb
dec
lea
or
aad
stos
jge
rclb
lcall
push
mov
jbe
mov
jg
dec
xchg
pushf
out
cs
cmc
cmpsl
into
jns
cs
es
jmp
dec
rcrl
ja
mov
jno
nop
dec
incl
add
sahf
and
pop
push
popa
cmp
dec
jne
lods
sub
xchg
loop
imul
dec
out
pop
sub
dec
fldt
mov
fsubr
inc
adc
mov
leave
movsl
mov
int
jge
in
inc
in
sahf
mov
call
fstl
aaa
in
loop
xor
fcoms
mov
dec
sub
mov
out
aas
pop
mov
mov
pop
lea
or
call
inc
scas
mov
mov
and
sbb
pop
xchg
mov
sarb
fs
shl
in
inc
xor
std
mov
fcoms
popf
imul
lea
jecxz
and
mov
std
and
push
orb
jecxz
shll
lods
xchg
fldt
push
mov
out
outsl
push
sub
lcall
je
das
jne
das
push
out
sbb
push
pop
jo
std
test
inc
pop
orl
and
xor
adc
aam
arpl
aas
imul
js
out
out
add
dec
jne
pop
lods
test
push
stc
push
jl
ja
aas
imul
call
es
sub
mov
inc
hlt
mov
aad
mov
dec
sbb
aad
mov
stos
ss
sbb
adc
mov
dec
lds
sti
repz
sub
int
push
add
xor
adc
rorb
es
sbb
adc
ljmp
xchg
push
fists
loopne
pop
in
int3
stos
push
shll
sahf
enter
pop
jo
push
pop
jb
jae
pop
sbb
inc
sti
ss
lods
cmp
ds
mov
or
mov
pop
fiadds
add
test
repz
push
sbb
mov
add
push
pop
push
ja
jmp
push
or
pop
imul
call
mov
jge
icebp
xchg
mov
jle
cmp
or
sbb
test
pop
lods
out
jbe
dec
gs
sub
rol
lods
pop
imul
and
loope
mov
rcrb
cmp
mov
jnp
xlat
push
add
push
das
and
xchg
adc
scas
loope
lock
mul
cmpsl
inc
shrb
xchg
pop
pop
pop
mov
jnp
sub
hlt
stc
jns
movsl
sahf
jb
loop
mov
mov
push
adc
or
sub
aam
sub
adc
enter
push
into
dec
xchg
outsb
lret
bound
push
outsb
jmp
lods
sub
popa
std
dec
out
and
mov
mov
sbb
cmp
in
and
xchg
pop
mov
fistpll
mov
fwait
cmp
and
sarb
cmp
into
cmp
aam
jbe
fxch
cwtl
sub
lcall
push
inc
cmp
mov
jo
cmp
cmp
push
lods
cmp
jp
inc
movsb
xchg
lods
or
cld
insl
pop
cld
fidivrs
or
pop
jne
ds
je
loope
outsl
pushf
pushf
mov
adc
shrl
lods
or
cmc
ror
cmp
push
ficompl
mov
or
arpl
imul
mov
xchg
sarb
les
out
shlb
js
sub
pop
xor
js
std
adc
mov
jecxz,pt
hlt
push
xchg
mov
adc
and
pushf
fsubrp
vmwrite
insb
pop
sbb
sub
mov
sahf
push
and
lock
push
inc
fprem
daa
rcrb
sub
cmp
xchg
cmp
pop
lret
push
cs
into
xorl
andb
pop
mov
mov
xchg
cmp
cmp
push
push
add
in
dec
xchg
sbb
or
je
sarl
cli
repnz
lcall
cmp
inc
rolb
push
xor
adc
inc
gs
jno
es
pop
scas
push
sub
scas
pop
mov
lds
rol
pop
mov
pop
xchg
or
imul
xor
aas
lods
outsb
or
mov
sbb
adc
pop
arpl
movsl
hlt
outsl
inc
scas
into
push
fadd
or
dec
repnz
push
inc
mov
rcll
enter
loop
mov
std
pop
mov
cmpb
insb
test
ret
dec
imul
stos
lahf
cs
daa
push
dec
pop
addr16
xchg
call
xchg
add
movsb
pop
push
mov
into
push
jl
mov
sbb
add
loop
testl
dec
dec
push
cltd
incl
arpl
pop
call
or
sub
or
jge
fnstcw
out
lods
jnp
into
hlt
fcompl
mov
lods
adc
test
shl
mov
pop
out
sbb
inc
adc
test
gs
xchg
in
lock
xchg
js
adc
andl
mov
add
mov
in
hlt
xor
and
add
inc
jb
mov
xchg
arpl
mov
add
adc
cmc
add
test
jp
xchg
gs
lret
fisubs
jp
shlb
bnd
lods
repz
sbb
or
mov
jp
xor
pop
adc
push
in
cmp
xchg
stc
pop
leave
ret
cmp
xlat
jecxz
or
bswap
push
push
das
lcall
test
sbb
clc
movsl
sti
or
js
or
aaa
mov
int3
xorb
inc
or
xor
add
movsl
xor
std
inc
popf
add
xor
dec
pop
int3
mov
xor
mov
inc
lahf
dec
aaa
inc
and
or
aam
add
std
cltd
fisttps
int
mov
cld
mov
lods
jp
xchg
jp
imul
inc
xchg
push
movsb
je
push
in
ljmp
fmull
lods
out
mov
dec
mov
clc
hlt
jg,pt
filds
xchg
mov
jns
xor
repz
aam
shl
lods
pushf
insb
xchg
mov
loopne
dec
scas
sub
jmp
leave
out
mov
sbb
sbb
jns
push
rcrb
dec
mov
xchg
popa
push
ds
aad
insl
sub
cmpsl
jnp
xchg
sub
adc
inc
insl
push
imull
ljmp
pop
jmp
hlt
cmp
test
adc
jb
fpatan
lret
sar
mov
repz
mov
sbb
movl
dec
addr16
cwtl
or
mov
sarl
leave
enter
icebp
lret
sub
push
sti
lds
movsb
mov
fsubrl
mov
jecxz
jbe
mov
push
pushf
jecxz
mov
daa
leave
stc
add
lret
jle
gs
pop
push
and
imul
idivl
aaa
dec
pop
in
mov
adc
sub
jmp
hlt
pusha
pop
sbb
pop
arpl
jne
js
ss
xchg
cmp
mov
shll
add
mov
xor
push
mov
int3
dec
jo
jbe
hlt
nop
adc
jle
lcall
cwtl
push
xchg
xchg
es
daa
das
xchg
sub
mov
mov
fadd
mov
lds
ret
xchg
sbbb
adc
aas
repnz
fildl
mov
in
xchg
mov
enter
notb
in
mov
ss
sbb
pop
jb
dec
push
mov
mov
pop
and
inc
ret
xlat
scas
xchg
insb
sub
lods
repnz
push
mov
xchg
mov
adc
and
xor
xor
xor
jae
fs
out
out
ja
mov
sysenter
xor
push
mov
pop
sbb
mov
jb
and
mov
std
sub
xchg
repz
in
imul
jg
jbe
orl
or
cmp
pop
jb
pop
xchg
pop
jae
mov
rclb
out
hlt
sahf
dec
mov
mov
je
hlt
pop
sbb
or
insb
dec
dec
or
lods
jp
ljmp
xor
es
les
jp
emms
push
push
xor
push
cmp
shlb
hlt
mov
sub
pop
rorb
pop
scas
add
dec
dec
mov
xchg
jle
jo
test
popa
mov
pusha
xchg
mov
mov
andl
es
gs
xchg
out
arpl
xor
aaa
push
arpl
adcb
fstl
jmp
ljmp
lcall
pop
es
cs
sti
ret
cmp
xor
enter
add
push
or
inc
adc
pop
pop
cmpsb
mov
push
add
ds
push
enter
and
lahf
push
je
imul
xor
and
popa
xchg
push
and
jge
pushf
pop
cmp
jne
cmc
add
add
fs
pop
push
jp
mov
dec
out
stos
add
push
testb
cltd
ret
push
add
mov
mov
das
cmp
mov
clc
mov
inc
mov
mov
fstl
sbb
and
pop
and
in
cmp
mov
xor
add
xchg
scas
pop
pop
xor
gs
into
loop
mov
push
add
and
and
xchg
adc
and
faddp
or
add
insl
xchg
mov
or
jp
mov
lock
cmpsb
cs
mov
mov
pusha
std
in
mov
xchg
ja
aas
out
cmp
xor
cmpsl
stos
dec
jns
mov
xchg
repz
cli
out
add
test
xlat
sub
adc
jno
icebp
and
incl
xchg
mov
pop
sbb
icebp
in
dec
mov
or
cmpsl
sbb
adc
jmp
jg
push
jns
cmp
xchg
out
js
add
sub
push
loop
lcall
fsubs
or
xchg
jle
jle
add
lods
xor
mov
push
mov
mov
lret
mov
or
in
in
mov
jl
ret
and
xor
push
sbb
arpl
dec
int3
and
mov
lods
stos
inc
mov
in
in
push
mov
and
push
ret
test
sbb
sub
and
dec
ja
mov
aad
pop
int
jnp
fnstsw
xor
jb
sub
jb
or
insl
and
ret
or
mov
hlt
ficompl
cmp
mov
and
push
repnz
popa
ret
jmp
or
lret
cmp
pop
lahf
add
inc
enter
sbb
scas
pop
mov
adc
pop
push
in
cmpsl
mov
lods
push
mov
les
xlat
add
mov
sub
out
lock
ficomps
push
xor
and
movb
cmp
clc
inc
fcmovnbe
xlat
cmpsb
cmpsl
js
ss
inc
cwtl
cmc
out
ljmp
inc
fsubs
jne
out
nop
imul
out
sarl
arpl
or
mov
mov
mov
daa
mov
sub
mov
leave
mov
fdivrs
icebp
outsl
sub
ljmp
popf
cmp
ja
push
test
or
outsb
int3
ss
jmp
lods
dec
fsts
ja
xor
cmp
lds
enter
mov
out
and
mov
pop
sub
adc
cmp
out
mov
cmpl
push
push
jecxz
lcall
dec
mov
mov
das
lcall
out
xor
jle
cmpsb
in
mov
pop
rolb
cmp
pushf
nop
in
or
cmc
dec
fsubl
cmp
mov
mov
je
push
cmp
gs
jg
bnd
lahf
pusha
push
adc
clc
loop
insb
dec
xchg
sbb
cmpsb
popf
cmpsb
xor
je
pushf
push
inc
loopne
add
outsb
mov
ds
movsb
stc
test
or
pop
add
out
fidivs
data16
sbb
sarb
sbb
stos
cmpsl
mov
push
adc
jno
and
adc
mov
fisubrl
xor
rcr
je
jae
pop
inc
aas
push
pop
jno
pusha
mov
add
xor
and
loope
jnp
ss
push
insl
xor
lcall
push
daa
inc
fs
cmpsl
sbb
cmp
xchg
cli
cmp
jecxz
das
mov
ficomps
dec
or
dec
ja
cmp
push
outsl
mov
lret
pop
mov
jae
fs
mov
lods
xchg
aas
inc
pop
enter
xor
mov
imul
aad
xchg
or
cli
pusha
pop
hlt
push
fisubrl
repnz
call
jb
lahf
sub
dec
mov
orps
mov
out
notb
test
mov
xchg
subl
fbstp
jg
inc
push
icebp
repnz
repnz
jmp
insb
sbb
dec
jns
lret
inc
mov
add
cld
push
cltd
jmp
mov
mov
mov
sub
push
div
dec
push
loop
scas
and
add
scas
adc
je
mov
dec
jo
xlat
and
push
push
adc
and
mov
inc
clc
aaa
imul
mov
fdivrl
add
ror
lods
push
push
xchg
dec
scas
int3
loop
inc
xchg
jle
xchg
imul
aad
xor
pushf
mov
jo
stos
inc
scas
gs
dec
or
pop
je
fcoml
in
fcomi
pop
cmp
popf
sub
outsb
inc
sarb
mov
push
call
ficoms
cmc
xor
push
imul
daa
sbb
xchg
mulb
sbb
loopne
push
sub
outsl
mov
pop
and
mov
mov
sub
mov
stc
lahf
sub
or
pop
les
fnstcw
xchg
dec
ljmp
lea
mov
jne
mov
xlat
sbb
add
ffree
xchg
dec
out
in
mov
ljmp
inc
jge
xor
push
add
movsb
jge
mov
ja
popa
sub
cli
pusha
jp
movsb
add
cmc
sbb
push
cmpsl
pop
inc
mov
add
sbb
pop
xlat
rcrl
popa
into
inc
cs
sbb
push
insb
out
and
jp
lcall
and
in
into
lcall
imul
bound
xor
push
jnp
mov
out
scas
mov
sub
iret
or
dec
addr16
mov
sub
mov
aas
sub
sub
push
add
dec
push
mov
sub
cmp
cs
adc
mov
fucomip
lods
xchg
test
cwtl
inc
xchg
cmp
jg
lahf
shlb
sub
jne
es
cmp
lahf
mov
mov
pop
push
lret
cmp
dec
js
test
push
es
sub
rorl
dec
xlat
repnz
cmp
adc
mov
add
out
dec
stos
adc
push
scas
xor
into
inc
mov
mov
dec
pop
sti
adc
pop
sbb
fcompl
nop
push
or
fstps
imul
pushf
sub
stc
jns
sbb
adc
jmp
dec
cmp
jb
fs
cvtpi2ps
inc
rorl
hlt
inc
and
inc
dec
cltd
xor
add
sub
push
mov
loopne
fsub
dec
jne
cltd
pop
scas
and
out
ds
leave
cmp
mov
popf
enter
movsl
sbb
loope
stos
shlb
insb
mov
fdivrs
xchg
or
and
fmulp
js
in
push
sub
pop
and
add
test
imul
mov
cmp
xchg
push
xor
pusha
lds
jno
out
stos
jmp
and
mov
in
add
mov
and
test
xor
stc
iret
js
xor
inc
and
int
mov
mov
repz
popf
mov
mov
bndstx
and
inc
into
mov
test
shl
ljmp
stc
divl
bound
mov
nop
pop
sti
daa
in
mov
jns
jg
leave
add
enter
jecxz
lods
movsb
pop
sub
sub
xlat
ja
mov
jnp
dec
pop
mov
cmpb
punpcklbw
fcomps
push
in
or
stos
shll
lcall
arpl
jmp
dec
shlb
aaa
lcall
lods
pop
movl
daa
jb
mov
mov
inc
inc
mov
push
xor
xor
xchg
jle
subb
dec
sub
sbb
mov
inc
stos
jns
cltd
loope
pop
jmp
stos
in
xchg
scas
push
jp
or
and
mov
and
adc
enter
popf
mov
fnstsw
push
icebp
ffreep
pop
rcr
push
inc
out
mov
xor
push
dec
cmpsb
push
fs
jmp
mov
add
nop
rcl
push
les
cmpsb
dec
xchg
jne
movsb
jo
ret
sbb
sub
inc
sahf
fwait
push
ljmp
cmpsb
mov
xchg
mov
mov
xor
ret
lods
out
push
dec
ja
mov
jge
mov
jg
push
mov
sub
add
mov
mov
mov
cld
jo
and
lahf
and
pop
jmp
roll
or
insb
call
dec
sbb
sub
pop
mov
out
or
pop
lcall
lods
fadd
add
mov
adc
cmp
mov
fcmovnu
inc
or
inc
jae
jbe
fs
mov
ljmp
lahf
das
sahf
adc
rcll
mov
jne
adc
dec
fdivrs
je
pop
push
insb
mov
cmp
cmp
push
sti
push
push
fisubrl
mov
not
movsl
mov
mov
out
mov
jne
movsl
mov
repz
pop
in
or
sub
jmpw
mov
mov
cs
pop
aad
or
pop
pushf
push
pop
inc
cld
mov
notb
dec
xchg
add
pop
fidivrs
aaa
les
or
ret
sbb
pop
jle
jl
or
dec
sub
jae
out
add
jns
test
jge
xor
mov
and
insb
and
and
xor
add
roll
out
sbb
pop
xorl
fldcw
mov
shrb
fildl
adc
mov
int
and
jb
push
ljmp
jl
xchg
pop
jns
jg
jl
sub
sbb
ss
insb
lcall
cmpsl
or
jmp
mov
or
inc
rorb
test
sub
test
fcoml
mov
lds
repz
mov
sub
out
jae
push
in
adc
scas
fs
in
outsb
push
shll
mov
mov
dec
or
cltd
xor
push
cmp
add
mov
add
adcb
lods
data16
mov
push
in
xchg
xor
push
testl
mov
xlat
lret
xor
repz
in
addr16
pop
push
add
mov
lods
dec
ja
xchg
mov
xor
fstpl
sbb
inc
xor
clc
mov
adcl
cmp
mov
jl
jp
pop
jmp
cmc
arpl
cld
cmp
adc
mov
lret
sub
dec
mov
idivl
sbb
and
hlt
imulb
xor
xor
sub
aad
test
fmul
xchg
clc
repnz
cmp
sub
in
xadd
xchg
aam
jns
mull
popf
sbb
pusha
movsb
in
outsb
sbb
push
mov
mov
mov
mov
or
or
and
sbbb
ss
mov
jne
mov
mov
or
test
push
rolb
outsl
mov
push
cmpsl
int
add
daa
mov
push
aam
fists
push
add
out
pop
mov
or
add
daa
jne
push
push
shrl
pop
lret
xchg
loope
push
mov
xchg
inc
mov
lret
bound
adc
fistps
dec
jae
pop
ss
xchg
divl
xchg
add
mov
je
stos
xor
add
jae
lock
xchg
clc
pop
xor
mov
movsl
js
xlat
mov
in
xchg
jo
in
cltd
mov
jmp
ljmp
ret
sbb
push
mov
rol
jge
test
mov
mov
adc
and
aad
daa
push
lds
aad
lret
and
aad
in
pop
dec
add
pop
nop
and
dec
scas
mov
mov
sub
xchg
pop
jp
sbbl
insl
sub
mov
mov
adc
mov
dec
sarl
fbstp
popf
arpl
lahf
inc
out
iret
clc
nop
pusha
faddl
push
sbb
push
fmul
jmp
ret
mov
push
popa
xchg
xchg
lds
and
cmp
and
mov
fs
mov
sub
ljmp
jg
sbbb
lret
rorl
inc
xchg
mov
sub
gs
sub
stc
jno
or
popf
sti
addl
fs
xor
test
and
in
stos
mov
popf
aad
mov
push
ljmp
xchg
hlt
pop
jae
aaa
xor
mov
in
cli
cmp
push
mov
mov
push
push
xor
xchg
adc
mov
inc
stc
inc
shrb
aas
or
fisubrl
or
and
mov
xlat
lret
and
dec
push
adc
test
sbb
mov
jne
cmp
popa
fidivrs
ss
popl
lret
pop
push
clc
gs
sbb
or
mov
outsl
rcrl
movsl
test
mov
fimull
push
negl
lock
mov
jbe
xchg
fsubs
xor
jg
pusha
pop
pop
add
xchg
sbb
fdivrl
scas
or
add
aam
adc
mov
shll
orb
and
mov
pop
mov
mov
orl
loope
pop
cmp
inc
repnz
repnz
lds
and
sbb
fidivrs
movsl
add
add
sub
test
adc
icebp
cmp
jbe
test
inc
pop
and
adc
add
das
adc
aam
jg
insl
push
divl
test
les
or
add
mov
push
adc
mov
add
or
popa
es
and
outsl
ss
je
jnp
sti
in
leave
jno
and
or
mov
jmp
enter
xchg
scas
mov
mov
addr16
push
cmpsl
dec
insl
mov
xor
pop
xor
cmpsl
push
orl
cltd
insl
dec
adc
adc
cltd
sub
add
pop
or
mov
fldenv
or
imul
or
js
pop
lds
push
lahf
aad
jne
fmull
mov
jne
cmp
add
jbe
xlat
stos
adc
push
int3
aad
leave
add
jp
jmp
jno
cli
xor
push
je
aam
loop
and
sbb
fsub
pop
mov
popf
inc
lds
mov
and
mov
orps
dec
fwait
ja
mov
cwtl
int3
filds
mov
enter
fsubrs
iret
dec
adc
xchg
ret
dec
pop
mov
add
aas
add
mov
je
and
ja
ficompl
mov
mov
sarb
insb
jecxz
lea
or
xchg
out
jp
cmp
divl
and
test
imul
inc
push
pop
dec
fisttps
rcr
push
repnz
cmpsl
jge
jo
scas
mulb
mov
idivb
sbb
dec
jae
cld
cltd
push
or
pusha
sbb
popf
or
pop
cs
jb
inc
push
pop
cmp
and
ret
leave
bound
add
inc
iret
inc
adc
pop
shll
into
add
inc
pop
adc
cmc
mov
loopne
mov
pop
cmp
sbb
outsb
push
test
cmp
cmpsb
mov
mov
sbb
lock
popa
into
or
scas
xor
pop
xchg
dec
mov
jl
xor
inc
in
das
iret
lcall
or
xchg
xlat
add
daa
lcall
es
sbb
sbb
push
push
gs
ret
into
cmp
iret
sbb
lahf
sahf
cmpb
repz
mov
and
je
aam
mov
xchg
cmpsb
sarb
ja
adc
jmp
scas
jae
adc
int3
scas
cmpsb
out
mov
xchg
add
fwait
test
mov
mov
and
lcall
mov
test
jmp
jg
pop
xchg
mov
xlat
mov
sub
adc
sahf
gs
xchg
or
xor
rorb
add
add
mov
or
aaa
xor
mov
xchg
xchg
leave
cltd
stos
inc
inc
imulb
addl
popl
ljmp
negl
sbb
xchg
mov
push
js
mov
cwtl
xchg
iret
sub
xlat
sub
mov
inc
out
addl
cmpb
xchg
icebp
and
pop
dec
xorl
jge
rorl
pushf
addr16
add
jo
fbstp
sbbb
and
add
mov
pop
pusha
das
leave
push
cmp
inc
bound
call
out
mull
gs
or
loopne
add
push
bound
push
or
lret
dec
decb
into
inc
nop
negb
ror
add
and
ret
cmpsl
cmc
es
rcrl
mov
icebp
xor
mov
fcompl
nop
les
mov
inc
movsb
inc
mov
mov
mov
lea
aam
addl
mov
pop
jmp
cmp
je
dec
dec
jbe
adc
lods
es
iret
rclb
cwtl
push
fldenv
cwtl
dec
cmp
jl
lods
lea
ja
pop
sub
sbb
push
mov
out
fwait
lods
push
push
cli
aaa
lock
imull
aam
mov
xchg
pop
cmp
lret
dec
fwait
test
out
movsb
lods
js
xchg
pop
cli
sbb
cmp
sbb
xor
dec
and
cmp
fists
jmp
xlat
fadd
jmp
jne
leave
out
or
xor
and
fnstenv
pop
dec
inc
jl
test
or
cmp
into
xlat
test
sub
dec
fistpll
dec
inc
std
movsl
loopne
cltd
shr
movsl
pop
mov
and
pop
mov
mov
shrb
mov
out
xor
cmpsb
or
and
cld
repnz
push
or
imul
cmp
enter
mov
push
lock
sub
or
xor
les
add
dec
jle
outsb
popa
and
daa
pop
pop
jns,pn
xlat
jecxz
jp
dec
mov
enter
in
cltd
xchg
out
mov
add
test
xor
movsl
mov
movsl
xlat
xchg
call
xor
inc
cmp
mov
pop
enter
mov
pusha
dec
xor
jmp
push
push
lret
sahf
loop
or
sub
loope
lret
mov
in
test
popa
pop
jl
or
aaa
ret
adc
dec
xor
pop
int
ja
mov
jecxz
pop
cmp
sbb
jmp
mov
movsl
sbb
cli
xor
hlt
fmull
dec
jmp
sbb
mov
sti
shl
mov
xor
jno
mov
dec
xor
mov
push
mov
test
fistps
sbb
pop
jge
push
cmp
sbb
push
sbb
nop
sti
outsl
popf
jecxz
or
insb
ljmp
imul
push
lea
testl
sub
add
ret
cmpsb
je
sbb
jb
mov
rcrl
inc
push
xchg
js
cmp
call
lods
gs
add
pusha
mov
pop
subl
fldl
dec
inc
push
movsl
ret
fldenv
insb
lods
in
sahf
jge
in
dec
cmp
add
mov
pop
std
loop
sbb
and
push
push
insl
cmp
jne
sbb
xor
in
insb
fbstp
test
test
push
imul
int3
ja
or
or
outsb
punpckhwd
sub
vpsrlw
mov
jmp
out
xlat
bswap
out
push
out
shll
cmp
int3
gs
pop
shl
sti
mov
xchg
sbb
aaa
dec
popf
lds
mov
mov
pop
icebp
mov
sbb
movsb
scas
dec
mov
es
mov
mov
inc
fisttps
push
jne
or
or
push
test
ljmp
sub
lds
in
movb
cmpsl
sbb
push
test
in
jl
mov
enter
das
xor
sub
leave
and
mov
sub
fldenv
add
pop
out
sbb
loope
pop
jnp
aam
fwait
mov
sub
cmp
ljmp
in
adc
mov
insl
push
mov
out
daa
repz
sub
loopne
sbb
imul
bound
and
xor
pusha
mov
and
jg
jb
add
sbb
loopne
and
sbb
sub
xchg
pop
add
cli
adc
scas
test
ljmp
pushf
movsb
mov
lmsw
loopne
fwait
jle
ret
ret
repnz
cmpsb
lods
jno
daa
mov
jg
gs
lock
sub
jle
sbb
inc
repnz
jno
out
ds
fisubl
cld
and
sub
xchg
loopne
mov
fcoms
dec
inc
out
out
dec
mov
push
shrb
push
jnp
dec
adc
enter
pusha
cld
mov
loopne
adc
cmc
mov
sbb
les
bound
push
jno
pop
push
pop
aad
cmpsl
pusha
icebp
jp
add
testl
push
shlb
lds
testl
xor
aam
es
aad
push
sahf
push
xchg
push
dec
lret
aas
xchg
out
pop
popa
cwtl
inc
cmp
jle,pn
sbb
jge
jae
sub
mov
and
xchg
into
push
sub
andl
cmpl
fsubrs
push
jo
imul
out
mov
mov
and
sbb
cmpsl
and
stc
stc
fwait
add
std
mov
pop
xor
push
jb
lods
push
cmp
divb
lret
or
and
scas
hlt
add
dec
loope
rorl
sarl
or
adc
pop
xchg
cli
jo
loop
xchg
add
sub
jae
add
popf
jle
dec
mov
in
in
push
mov
int
roll
mov
cmp
dec
ss
fisubs
fwait
dec
dec
mov
out
loope
scas
notb
inc
xchg
and
xchg
and
jecxz
mov
lret
ja
ss
fwait
mov
loope
adcb
dec
and
mov
repz
adc
scas
scas
js
inc
adc
adc
xchg
lods
cld
rcr
add
fistpl
dec
shlb
loopne
orl
mov
mov
std
add
pop
sti
push
in
imul
fwait
pop
xchg
xor
shll
pop
pop
std
push
pop
pusha
out
inc
fcmovnu
movups
add
mov
aad
dec
fsubr
arpl
aad
adc
adc
rolb
jb
inc
out
in
fsubs
aas
inc
scas
pop
inc
fsubl
out
add
out
test
ret
cld
outsb
xchg
pop
adcb
xor
xlat
or
loop
mov
fisubl
xchg
lret
sbb
push
dec
test
insl
cmpsb
adc
loopne
rcrb
les
ficoml
daa
in
dec
movb
fidivs
xchg
jmp
cld
or
out
sbb
inc
xchg
insl
iret
rcl
jno
inc
xorb
dec
sub
add
mull
pop
in
iret
adcl
xor
outsl
or
mov
shrl
in
fidivrs
mov
mov
jmp
mov
adcl
inc
jnp
loope
sarb
aam
inc
pushl
flds
adc
icebp
mov
je
adc
pop
xchg
pop
mov
xor
mov
hlt
out
add
jbe
and
pcmpgtd
adc
jae
mov
dec
xor
aaa
jnp
sub
scas
into
rorb
jo
jmp
jbe
adc
and
mov
divb
addb
shl
out
xchg
in
hlt
test
dec
loop
mov
sub
mov
iret
mov
add
iret
cmc
js
push
inc
mov
inc
inc
cwtl
inc
mov
push
pop
out
dec
ds
fs
jae
pushl
add
push
hlt
clc
sahf
aas
mov
mov
subb
push
fsubs
cmpb
cmp
xor
in
push
lahf
scas
xchg
mov
xchg
sbb
dec
push
or
mov
mov
mov
xor
ret
lds
cmp
or
pop
cmp
or
inc
in
cwtl
fisttps
mov
hlt
mov
ss
das
das
adc
pop
sbb
xor
sub
pop
dec
pop
or
pushl
jecxz
mov
xorb
rorb
or
xlat
insl
rcrl
xchg
imul
repz
jge
sub
jecxz
fsubrl
aas
pop
arpl
xchg
xchg
mov
icebp
add
out
or
mov
jno
test
xor
cmp
adc
mov
or
cmpsb
sbb
jge
outsb
and
lret
test
cmpsl
cli
xor
dec
mov
jnp
mov
jno
call
xchg
sti
stc
xor
repz
stos
aaa
mov
jns
dec
cltd
aam
mov
imul
cmp
bound
inc
int
pop
mov
ret
lea
loope
inc
lock
pop
dec
aas
mov
loop
pop
dec
mov
dec
enter
mov
into
iret
mov
cmp
mull
scas
mov
fidivrs
rcl
inc
add
xchg
stc
mov
mov
into
out
sbb
mov
adc
int3
in
iret
pop
movsl
jge
lcall
call
enter
hlt
cmpsl
pop
dec
clc
repnz
xlat
adcl
fs
addr16
xchg
push
mov
outsb
or
mov
xor
dec
inc
xchg
lds
sub
into
jno
test
test
push
aas
mov
dec
cs
mov
or
mov
out
push
xchg
cltd
hlt
orl
aam
pop
or
add
shrd
push
bnd
sarl
pop
sbb
imul
add
push
addb
mov
rorl
sbb
aam
mov
push
shll
cmpsl
mov
ljmp
negb
mov
mov
jae
hlt
mov
loopne
cmp
pop
test
pusha
repnz
shll
adc
lods
add
or
insb
movq
fisttpl
jns
mov
sbb
pop
add
mov
mov
loope
ret
fldenv
jbe
daa
lahf
jge
out
in
push
inc
sarb
or
or
dec
movsb
adc
pop
push
xlat
and
rcl
jns
inc
pop
xchg
dec
out
mov
add
sbb
jle
loopne
jns
mov
daa
sub
and
je
add
daa
mov
in
adc
jg
xchg
mov
mov
dec
push
inc
xchg
insb
cld
or
jg
loop
mov
adc
add
jmp
dec
jmp
xchg
lret
jnp
add
jmp
adc
movsb
mov
iret
mov
shl
into
bndstx
dec
xchg
sub
stc
push
cltd
cmp
sbb
sub
jmp
movsb
mov
mov
iret
test
pop
cltd
adc
push
lcall
pop
dec
cmp
mov
loope
fmuls
add
sub
mov
xlat
push
jecxz
in
jecxz
lahf
mov
xor
sbb
xor
cmp
adc
sahf
add
fsts
in
addr16
push
mov
push
cmp
sbb
jno
mov
mov
and
jnp
dec
cltd
dec
push
repnz
and
lods
or
das
mov
xor
mov
and
or
pop
out
and
out
roll
popa
add
jne
mov
mov
daa
mov
push
orl
es
scas
add
mov
std
out
or
fldl
sub
aas
cmc
push
add
jae
int3
dec
sbb
dec
std
cmp
mov
adcl
sarl
and
mov
pop
add
lcall
lcall
popf
leave
pop
push
mov
cmp
push
incb
int3
mov
fwait
out
nop
adc
testl
add
push
cmc
outsl
mov
mov
add
into
push
inc
stos
lahf
outsl
mov
mov
inc
xchg
mov
lea
dec
loop
lea
lods
movsl
mov
sub
and
mov
pop
inc
pop
jne
mov
out
jnp
shrb
xor
arpl
inc
stc
rolb
gs
fbld
and
xchg
adc
lds
jne
or
cmp
adc
inc
xchg
and
jmp
movsb
push
mov
popa
les
iret
addr16
jge
xchg
fnstenv
popf
cmp
fsubrl
sbb
inc
xor
mov
or
mov
xchg
notb
sub
inc
hlt
pop
lret
mov
cmp
daa
iret
cmp
mov
mov
ja
adc
and
addr16
cmp
jo
in
scas
mov
test
aam
cmpsl
adc
fs
lret
jecxz
lret
jle
lret
mov
sbb
jae
cmp
mov
pop
xorl
es
and
popa
aas
xor
adc
push
jns
aad
pop
xor
inc
jp
sub
shlb
adc
dec
add
and
inc
sti
hlt
inc
cmc
cmp
lock
repz
jle
add
mov
mov
fistpl
loope
mov
xchg
dec
xor
mov
push
or
mov
popf
cmp
cmp
push
in
push
add
addr16
push
fisubs
mov
adc
jns
fsub
push
fcomip
fstl
icebp
out
cwtl
mov
sahf
pop
and
ficoml
jae
mov
dec
push
into
xchg
xor
into
jl
ljmp
cltd
clc
dec
jmp
stos
mov
call
in
mov
divl
mov
ds
sub
in
test
scas
adc
push
andps
and
mov
sbb
lea
cmpsl
mov
and
and
ss
sbb
out
or
cmp
jmp
mov
xor
data16
clc
mov
pop
push
xchg
jae
pop
je
and
mov
fcmovnb
popl
testl
mov
inc
dec
fwait
insb
jno
loop
add
sub
jl
mov
adc
pop
mov
dec
in
cmp
xchg
lds
test
mov
sub
test
xchg
cld
cmp
lods
in
cmp
sub
adc
mov
lea
lock
loopne
inc
sarl
hlt
in
addb
jle
ja
stc
imul
mov
xor
lods
fsub
push
stc
push
cmp
repz
xchg
adc
out
test
cmc
push
shll
subb
add
mov
pop
hlt
cmp
push
xor
stc
inc
mov
addr16
push
divl
dec
pop
loopne
aaa
loop
insb
addr16
inc
sti
jecxz
je
popf
aad
add
xor
xor
sbb
pop
std
or
xchg
jle
addr16
pop
lods
les
mov
fstpl
push
or
mov
imul
test
outsl
cmp
imulb
xor
mov
and
and
dec
in
inc
mov
cli
mov
adc
scas
out
repz
fiaddl
rep
push
adc
mov
ret
inc
sbb
push
cwtl
jg
out
add
or
inc
sbb
or
inc
mov
inc
insb
sbb
mov
sub
cmp
or
out
popa
ja
xchg
jnp
loop
mov
mov
sbb
scas
fsub
iret
outsb
ret
cmp
lcall
cmp
push
pushf
push
mov
push
outsl
ficoml
imul
call
pop
pop
sti
bound
dec
fisttpl
out
adc
fimull
es
ljmp
mov
aas
xor
cmp
outsl
scas
outsl
and
cmp
jbe
cmp
inc
pop
mov
xor
lret
push
dec
push
xor
sub
push
pusha
xlat
mov
jns
mulb
jp
int3
sub
test
std
and
push
gs
dec
rcl
dec
push
adc
cmp
inc
jmp
jno
cmp
repz
pushf
dec
pop
xor
out
orb
test
stos
push
xor
adc
or
jmp
sbb
mov
push
out
dec
cld
fsubrl
push
push
mov
xor
fstl
jae
xchg
adc
outsb
test
aam
pop
stos
test
add
stos
aad
dec
xor
inc
cmpsl
mov
mov
xchg
add
fsubs
dec
cmpl
addb
insl
imul
sbb
insb
ss
fwait
leave
inc
xchg
sahf
dec
xlat
mov
nop
js
cld
fcompl
mov
sbb
repnz
rol
push
cli
pop
les
popf
pushf
fldcw
lcall
mov
push
jp
mov
cmpsl
inc
adc
fdiv
mov
pop
hlt
and
and
cwtl
cltd
repz
dec
iret
push
sub
jp
push
mov
fisttpl
scas
orb
leave
and
pop
les
jbe
mov
cs
sbb
sbb
hlt
bound
mov
xchg
jne
sbb
mov
jbe
xlat
movsb
cmp
mov
cmp
jnp
lcall
fs
iret
sar
mov
jb
leave
arpl
and
in
jno
mov
out
inc
int
cmpsl
push
clc
out
sub
and
aas
popf
push
call
negl
aad
subl
insl
sbb
jnp
nop
add
dec
inc
jge
pop
adc
or
xchg
adc
lock
or
sub
dec
adc
sub
mov
mov
ficompl
jmp
mov
cltd
lods
xchg
test
in
add
leave
daa
and
xchg
outsb
cmp
cmpsl
adc
dec
cmpsl
and
jbe
inc
mov
rcrb
and
inc
or
outsl
mov
rcll
pop
jo
cmpsb
insl
mov
pop
lahf
outsl
xor
ret
in
mov
repz
imul
sub
sub
xor
adc
in
mov
cmp
movsl
or
int3
adc
mov
outsl
lret
dec
and
and
rorb
scas
ret
das
rolb
xchg
jb
popa
mov
push
sbb
cmp
aas
xchg
call
mov
fstpl
and
push
insb
sarl
inc
in
inc
mov
xor
pop
imul
mov
hlt
lcall
cs
xchg
xchg
inc
push
sub
out
adc
pop
in
out
jmp
inc
pop
sarb
sub
popf
add
pmaxub
pop
pop
push
mov
mov
push
push
jb
cld
sub
xor
push
xor
insl
ds
cltd
sub
dec
and
sub
xchg
jne
add
and
cmc
xor
xor
lock
push
clc
test
mov
imul
xor
repz
sbb
jbe
out
aam
inc
xlat
out
add
inc
fists
cmp
or
inc
xchg
js
adc
xor
push
or
and
es
mov
dec
out
lcall
cmp
push
push
adc
ljmp
jp
cmp
in
fcoml
mov
and
imulb
fsubrs
inc
outsl
jg
jl,pn
je
test
divl
or
dec
mov
neg
mov
xor
les
pop
add
fwait
sbb
mov
push
jno
and
inc
cmp
lahf
inc
pop
dec
lahf
shll
jmp
cmp
pop
fcoms
les
repz
std
xor
hlt
movsl
add
or
sbb
outsb
idiv
sbb
lods
cli
sub
iret
xchg
cmpsl
mov
xlat
lahf
push
add
mov
mov
outsw
mov
inc
lahf
xchg
in
clc
ds
dec
rcr
xchg
arpl
sbb
loope
lds
dec
mov
aas
push
ja
and
adc
jle
push
mov
pusha
push
lret
aaa
cmpl
sub
lret
push
inc
xchg
inc
cmp
ss
push
in
je
nop
pop
adc
lods
addl
mov
xor
popf
pop
inc
inc
jnp
test
outsl
mov
fdivr
cmp
xchg
call
test
dec
adc
aad
les
xor
sub
pushf
aas
fiadds
xchg
fwait
and
cs
add
movb
mov
aad
pop
push
repnz
sub
mov
pop
stos
xlat
loop
adc
pusha
ja
repnz
dec
popf
repnz
sahf
cld
call
out
xlat
scas
mov
aam
repz
push
push
sub
push
pop
in
mov
adc
fdivl
popa
fwait
dec
nop
jl
rcrb
mov
leave
xchg
sub
out
push
push
ror
and
sub
add
outsb
sahf
fimull
pop
pusha
push
ljmp
sbb
adc
mov
mov
cmc
call
inc
insl
mov
in
sbb
repnz
cli
ret
sbb
sti
pop
sub
add
adc
and
mov
call
addr16
inc
lea
push
out
pop
fdivp
shrl
scas
jno
mov
movsl
mov
cmp
out
mov
xchg
dec
andl
or
jecxz
jne
and
xchg
jmp
int
sub
jnp
addl
nop
and
sub
movsb
out
xchg
pop
lods
jmp
sbbb
mov
iret
push
and
or
mov
push
and
fdivrp
xchg
fisubl
dec
push
sub
mov
rcr
inc
sbb
lret
or
sub
adc
frstor
pop
addr16
imul
mov
inc
cmp
mov
lods
lret
mov
in
insb
clc
test
inc
xor
into
push
pop
dec
shrl
hlt
dec
test
jae
jle
stos
je
xor
jnp
daa
and
inc
jnp
lods
mov
mov
je
cmp
test
leave
cmp
testl
cli
push
sbb
xchg
xchg
push
jmp
push
mov
fisubl
sub
push
xchg
and
outsb
into
mov
movb
mov
lods
and
push
lahf
sbb
popa
xchg
sarb
jmp
lods
sub
mov
loop
sub
push
hlt
out
subb
sbb
jp
push
add
cmp
out
iret
or
jne
hlt
pop
jp
int3
dec
imulb
scas
cld
out
cmc
js
jp
scas
cmp
sub
jb
xor
lods
mov
push
xor
ja
xchg
mov
mov
lock
mov
pop
sub
int3
call
jmp
or
cmp
pop
jbe
inc
icebp
cmp
lret
sub
int3
in
das
mov
sbb
sub
adc
sub
xchg
cmp
xchg
jge
jnp
inc
lcall
mov
aas
mov
mov
ljmp
jno
dec
jb
lea
xor
or
mov
cmp
add
cmp
bound
fwait
adc
movsb
mov
int3
in
push
fldl
or
mov
out
mov
or
pushf
mov
sub
das
lds
pop
mov
cmp
pushf
and
cmp
or
push
push
aas
push
mov
es
cmpsl
dec
cmp
test
add
push
imul
mov
mov
xor
aas
mov
js
sbb
fwait
inc
sbb
inc
xor
and
aas
sarb
sbb
div
ja
sahf
cmp
mov
loop
in
pop
in
rorl
std
pop
in
push
ja
pushf
add
inc
adc
fld
sbb
ja
lea
inc
jg
lahf
jno
shll
push
cltd
fwait
jne
gs
inc
sub
mov
cmp
jg
mov
mov
mov
ret
adc
push
push
dec
add
or
popf
fucomi
scas
fstl
aas
pop
stos
sub
fbld
ret
mov
or
xor
xor
add
mov
push
psllq
out
xor
in
insb
inc
jno
or
mov
push
sar
mov
repz
mov
cld
jno
loopne
loope
je
rclb
sbb
adc
mov
sub
jo
sub
pop
loope
mov
mov
lret
pop
test
ret
xchg
xchg
notb
cmp
mov
xchg
repnz
hlt
xchg
enter
sbb
sub
or
mov
mov
lahf
xchg
sbb
pop
pop
test
clc
add
in
xchg
loope
sbbl
addr16
ljmp
inc
inc
es
outsl
int
fnstsw
fadd
lods
daa
pop
repnz
sbb
div
stos
xor
jbe
or
jne
inc
and
shl
rcrb
movl
pop
sbb
xor
jnp
or
cmp
lret
mov
stos
jmp
sub
stos
sbb
mov
rorb
rcl
cwtl
dec
das
xorb
mov
jbe
inc
or
mov
addr16
sub
mov
aaa
mov
push
icebp
out
add
mov
cld
dec
add
and
test
pop
xchg
pop
in
sbb
add
clc
dec
mov
ljmp
movsl
jl
xchg
mov
sbb
icebp
lods
and
push
mov
sti
inc
es
cmpb
jbe
js
test
dec
or
int
and
loop
test
sbbl
mov
and
inc
cmp
hlt
cmp
test
test
leave
aaa
and
data16
nop
lods
dec
pop
xchg
or
cmpl
pop
xchg
lock
fmull
sbb
fisubl
cld
cmpsb
or
dec
mov
ret
add
outsb
or
and
xchg
outsl
inc
lds
cmpb
inc
xadd
shrl
and
les
ja
lcall
outsl
sbb
push
xchg
mov
push
cmpsb
mov
mov
lcall
push
lahf
pop
pusha
pop
test
inc
aam
pop
test
insb
out
adcb
and
and
xlat
sub
fmuls
mov
loop
cmc
cs
enter
lods
sbb
mov
movsb
fwait
xchg
adc
pop
mov
ret
mov
sub
loope
dec
ss
out
scas
ret
out
pop
xor
mov
cmpb
out
or
loope
and
stos
orl
xchg
lea
pop
xchg
pop
lahf
loopne
sarl
xor
orb
jg
insl
sub
popa
into
ss
flds
push
pop
xchg
lret
inc
hlt
hlt
mov
pop
cmp
imul
and
dec
pop
inc
daa
push
ljmp
repz
mov
jecxz
xor
jmp
and
sbb
mov
mov
shlb
xchg
or
mov
mov
inc
sub
fs
insb
mov
jne
add
xor
lahf
stos
jb
add
mov
add
pshufw
pop
aam
mov
scas
jo
movsl
inc
ret
add
popa
std
jae
push
enter
cltd
data16
lods
dec
jg
dec
inc
sahf
enter
cltd
fldl
leave
sbb
fidivl
movaps
repz
sub
test
das
cltd
roll
or
ret
dec
xchg
fdiv
xor
jp
add
push
cltd
or
and
cmovae
test
in
fnsave
mov
rcll
jmp
repz
scas
cmp
cmc
mov
std
mov
xchg
sbb
lahf
int
jnp
pusha
inc
mov
lret
test
pusha
inc
xor
mov
insb
mov
jo
movsb
repnz
xchg
movsb
mov
rcll
xor
out
pop
adc
fstsw
or
ds
dec
xchg
fisttpl
loopne
insl
jp
inc
shrl
out
pop
pop
adc
mov
jne
inc
pop
insb
hlt
push
inc
lret
add
sarb
ds
out
dec
int3
clc
mov
and
xchg
insb
shlb
js
fwait
adc
lods
mov
je
ret
lock
and
push
jns
shr
adc
and
fadd
ret
dec
fwait
xchg
dec
push
test
xchg
aas
xor
xor
insb
out
inc
rorl
mov
mov
jno
add
pusha
xchg
dec
aam
push
shll
fwait
mov
sbbl
js
or
inc
sti
ficoml
jno
inc
xor
adc
int
dec
jae
dec
pop
flds
add
push
and
sub
es
push
cmp
jae
es
in
in
lcall
dec
cmp
or
dec
sbb
sahf
sbb
ss
fisubl
rol
pusha
cmp
bound
imul
es
dec
movsl
cmc
xor
les
outsb
std
sub
push
cli
jge
pop
sahf
clc
push
push
mov
lret
out
mov
jle
or
mov
xchg
push
mov
mov
int3
mov
mov
and
aad
cmp
cmp
icebp
mov
sub
in
cmp
pop
inc
in
adc
push
mov
mov
add
mov
inc
lods
inc
mov
lret
movsb
cwtl
mov
lea
push
mov
jmp
jle
xor
dec
dec
rorl
test
xor
out
push
imul
testl
mov
jne
sub
cmp
sti
mov
fdivs
xchg
lea
mov
mov
and
and
mov
xchg
int
in
imul
in
jno
dec
shl
inc
sub
adc
pop
out
and
mov
inc
sahf
dec
adc
mov
shrb
mov
stos
sub
repz
pop
hlt
cld
rcll
add
sahf
sbb
or
enter
mov
inc
and
or
insb
xlat
or
jg
aaa
mov
aad
popa
clc
push
xchg
push
add
jae
leave
xchg
xlat
sbb
xchg
fwait
rcll
dec
sbb
jnp
pop
jbe
adc
in
rcl
cmp
dec
lahf
out
xchg
dec
inc
aad
fidivrl
jecxz
addr16
push
and
lock
inc
mov
insl
inc
mov
inc
adc
jo
iret
and
decb
clc
pusha
dec
outsl
jae
clc
mov
fnstcw
mov
outsl
sub
lods
xchg
frstor
aam
or
dec
bound
xchg
xor
xor
xor
mov
dec
fwait
cmp
mov
dec
outsl
roll
call
inc
mov
je
in
pop
sub
add
nop
cli
pop
mov
js
add
jne
mov
lods
in
out
xchg
repz
js
dec
xchg
outsl
mov
or
out
adc
mov
or
decb
push
pusha
or
je
pop
push
inc
push
nop
out
xor
mov
shlb
jmp
jmp
pushf
fidivl
push
xchg
ljmp
iret
xchg
sti
arpl
push
outsb
and
aaa
clc
mov
ficoml
fnsave
test
or
pop
call
pop
outsb
sub
iret
loope
sub
jle
push
mov
sbb
lcall
pop
inc
stos
pop
add
scas
inc
std
aaa
je
sti
shll
iret
mov
pusha
scas
insb
pop
jnp
addr16
mov
lds
mov
mov
stos
sbb
sbb
int
sbb
data16
add
pusha
pusha
pop
mov
movsl
aaa
roll
call
stc
mov
lahf
mov
popa
mov
std
xchg
aaa
jp
shl
jnp
popf
into
dec
xchg
enter
scas
repnz
shrb
cli
mov
subb
in
mov
pop
aaa
ds
sbb
fiadds
aad
sahf
aad
je
rcrl
sbb
adc
sub
dec
or
cmp
lret
iret
repz
pushf
or
mov
inc
test
cmpsl
lods
sub
insb
jnp
sub
andb
lods
into
aad
sub
movsl
jge
xlat
rorl
repz
stos
cmpsb
xor
mov
and
dec
mov
repz
mov
jmp
dec
ja
inc
clc
xor
arpl
nop
and
pop
add
and
mov
cmp
fs
loope
jo
mov
jp
gs
mov
roll
add
pop
test
pop
sti
negl
pop
clc
cmp
pop
daa
lcall
cmc
lock
push
test
cmp
test
fisubs
into
xor
outsb
mov
dec
pop
xchg
mov
movsb
push
fwait
dec
clc
stos
and
ficomps
fsubrs
and
scas
inc
prefetchnta
mov
pop
addr16
clc
ret
xchg
and
cs
int
jmp
xlat
loope
xchg
int3
mov
stos
cmp
enter
inc
or
jmp
lcall
push
mov
xchg
out
fildll
cmp
jp
fiadds
dec
pop
jns
add
movsl
orb
ss
sbb
mov
pop
and
inc
das
in
orl
pop
jecxz
aam
pop
dec
xlat
ss
mov
adc
dec
cwtl
cmc
fsubrs
inc
mov
out
inc
gs
sub
mov
pop
leave
aad
dec
or
lods
inc
or
icebp
mov
aam
fwait
mov
in
push
popf
dec
imul
ret
xchg
pushf
enter
test
leave
push
in
ds
pop
cmp
movsl
scas
xchg
pop
jne
jge
in
or
push
jo
mov
out
sarb
mov
pushf
fistpll
push
dec
mov
xchg
xor
xchg
jge
inc
xlat
mov
push
push
xor
mov
adc
mov
push
ljmp
add
inc
iret
push
inc
in
fdivl
pop
push
std
orl
scas
cmpsl
gs
or
testl
xchg
aaa
mov
inc
inc
aaa
dec
or
push
icebp
jl
imul
mov
bound
mov
aaa
add
pop
mov
add
test
and
mov
jae
push
out
cmp
and
shll
sub
xor
xor
xchg
inc
or
push
xor
clc
cmp
or
xor
pop
dec
jae
movsb
mov
lcall
jecxz
cmp
fsubrs
and
test
pop
outsb
mov
xchg
into
sarl
ss
xchg
adc
cmpsl
fiaddl
shll
push
and
mov
xor
mov
movsb
std
call
outsb
lahf
dec
or
and
xchg
xchg
jae
and
and
ret
pop
sub
jae
xor
pop
outsb
xor
mov
and
sbb
cwtl
and
pop
pop
lods
push
xchg
testl
dec
jnp
dec
enter
lret
push
lahf
incb
xlat
movb
aas
dec
mov
fdivrs
adc
cmc
loopne
jne
xlat
xor
cld
and
ss
imul
sub
das
jp
cmpsl
or
call
jmp
xchg
lret
mov
or
xor
cmp
imul
mov
add
test
bound
sbbl
mov
enter
inc
push
je
jl
mov
cmp
fisttpll
add
rcrl
int3
xchg
fld1
pop
sbbl
outsl
ret
mov
adc
imulb
mov
mov
or
nop
repz
mov
fcmovb
in
movsb
testl
movb
jmp
int
mov
mov
xchg
movsb
cwtl
negl
pushf
adc
push
jns
cmp
iret
aaa
mov
xchg
lea
scas
clc
stos
sub
loope
hlt
xor
sub
mov
mov
jbe
js
add
pop
out
and
arpl
int
adc
cmpsl
cmp
pop
call
ret
icebp
jge
lods
sahf
push
mov
shlb
fs
dec
push
mov
dec
mov
push
jno
push
pop
adc
aam
mov
mov
aam
adc
popa
lods
xor
xchg
testl
stos
mov
shl
lcall
jnp
sahf
adc
inc
loopne
incb
xor
js
nop
or
rclb
into
adcl
jb
loope
cmp
adc
fsts
ja
les
idiv
push
sbb
adc
mov
and
jecxz
dec
iret
or
or
mov
dec
in
pop
mov
xor
iret
es
push
aaa
xor
flds
xchg
stc
jo
xchg
dec
xchg
dec
shlb
aad
cmp
mov
das
add
sbb
outsl
add
mov
scas
jae
add
inc
mov
mov
jg
repnz
pop
pop
outsl
outsb
fwait
add
and
push
cli
mov
inc
imul
xchg
pop
cwtl
jge
scas
jns
shrb
jg
aam
adc
and
lods
jge
add
mov
pop
pop
inc
dec
adc
in
mov
xchg
xchg
add
addl
and
sbb
cltd
mov
mov
pop
sub
cmp
push
gs
inc
mov
push
repnz
add
scas
cmovs
jp
test
xchg
or
lock
loopne
aad
in
push
out
adc
xchg
inc
outsb
hlt
push
loopne,pt
cmc
add
xchg
sarb
adc
rcrl
mov
push
das
cmpsl
inc
adcl
fnop
addl
lds
cltd
push
sub
mov
sub
lcall
jge
shl
ret
int
call
sub
inc
mulb
inc
lahf
push
call
mov
pop
les
xchg
inc
cmp
mov
shl
mov
jmp
scas
jno
push
cltd
jp
cmp
inc
mov
mov
mov
pop
push
jge
sbbl
cmp
cmpsb
insb
rorl
sbb
and
jbe
push
rorb
pop
inc
jg
xor
jecxz
cmp
hlt
add
sbb
push
imul
das
push
sub
mov
and
ret
in
xchg
in
test
push
jle,pn
jns
xor
cs
cmp
cmpsb
int
xor
test
or
lods
xor
pop
mov
ret
cld
add
out
mov
sbb
pusha
sub
adc
repz
or
maskmovq
testl
aad
cmp
imul
std
hlt
pop
shll
push
in
cmpsl
pop
ficoms
adc
inc
imul
outsl
sarb
push
jno
lock
jae
repz
mov
xlat
stos
or
jecxz
decb
shlb
push
arpl
mov
pusha
mov
insb
in
test
and
sbb
mov
add
scas
mov
mov
cld
mov
leave
or
cmpsl
mov
jecxz
fsubrs
lret
xlat
inc
insl
fcomi
pop
push
loope
push
mov
sti
pop
in
jnp
addr16
xor
scas
mov
sub
daa
rolb
mov
adcl
sub
mov
outsl
dec
push
je
push
xor
aad
inc
cltd
mov
ret
imul
shrl
scas
cmc
or
pop
test
add
frstor
stc
in
int
pop
fs
mov
ret
hlt
testb
cmc
mov
xchg
loopne
lcall
mov
mov
mov
popf
sbb
sbb
fildl
adc
add
adc
adc
jecxz
inc
jb
xchg
dec
adc
adc
xlat
ss
cmpsl
mov
cld
jne
js
lea
xlat
adc
in
cmc
or
dec
mov
and
sbb
lret
mov
aas
push
mov
adc
lcall
pop
dec
mov
std
fwait
mov
shll
imul
mov
pop
inc
cmc
movsb
rol
sbb
inc
mov
jns
imul
shrb
stc
jp
loop
add
dec
cli
or
push
and
push
addr16
jae
popa
push
rcrb
lahf
jmp
dec
gs
movsl
sbb
dec
fiadds
std
ljmp
fs
cmp
sbb
stc
aaa
xchg
mov
jbe
clc
dec
fcom
popf
and
mov
xchg
cmp
iret
push
jmp
std
call
push
js
mov
shlb
xchg
ljmp
sbb
fistps
out
xchg
inc
int
orl
add
inc
lcall
ds
dec
ret
repnz
pop
mov
js
iret
adcl
jns
and
mov
adc
aaa
scas
and
xor
cmc
out
jmp
sbb
mov
pop
xor
rclb
add
fidivs
mov
ret
jns
mov
dec
loope
inc
int
dec
je
sbb
movsb
arpl
pop
sub
jb
sbb
adc
jnp
cmc
inc
stos
jl
pop
popf
xchg
div
jns
loope
mov
cmp
fsubrs
dec
bound
cmp
pop
jne
cmp
cltd
pop
add
cmp
stos
loop
repz
sbb
sub
pusha
in
hlt
jne
pop
enter
mov
fdivrl
jbe
sbb
dec
xchg
mov
jp
jp
push
xlat
daa
stos
sahf
rolb
push
push
adc
idivl
cmpsb
imul
ficompl
test
mov
cli
dec
cltd
add
clc
aam
outsb
add
je
ret
repz
and
pusha
dec
shlb
fimull
sub
fiaddl
icebp
xchg
cmp
jne
inc
aad
dec
push
inc
mov
cmp
fcoml
pop
fld
in
and
jne
mov
mov
outsb
popf
mov
cmp
repz
jns
movsl
ret
sahf
pop
aad
or
jb
push
dec
fstps
mov
or
push
ss
ret
and
pop
sub
mov
xchg
in
add
xorl
mov
dec
push
jl
mov
adc
push
sub
pop
sub
mov
pusha
jmp
fsubl
out
xchg
mov
inc
mov
inc
push
pop
out
jmp
mov
sti
mov
out
add
imul
outsl
jae
adc
mov
lock
rcll
bound
xor
popf
insl
int
jl
fnsave
arpl
dec
bound
mov
xchg
push
jo
cwtl
imul
ljmp
push
call
into
dec
sbb
push
std
sahf
pop
dec
jo
cmc
push
xchg
cli
addl
aad
outsb
mov
push
mov
fiadds
and
mov
insl
pop
mov
out
rcrl
inc
and
out
stos
pushf
jp
xchg
cmp
dec
jns
loopne
xor
andb
jmp
out
pop
mov
xor
je
repnz
jle
dec
inc
cld
aam
sbb
pop
jns
pop
repnz
xor
push
frstor
sub
xchg
in
decl
xchg
xchg
decl
mov
dec
mov
adc
mov
sbb
push
cmp
fdivr
fstpt
push
in
jb
lea
loopne
xor
je
inc
adc
repz
push
cmp
mov
push
loop
cmpsl
inc
in
mov
pop
mov
cmp
push
aam
es
inc
adc
and
add
outsb
xor
mov
dec
xchg
mov
sti
inc
sub
mov
push
aam
cs
pop
rcrb
rclb
js
sub
adc
jl
scas
inc
test
jmp
ljmp
add
iret
sub
fimuls
or
aas
lock
popf
arpl
xlat
push
es
cmp
cmp
insb
ret
xlat
push
pop
xchg
sbb
sub
sub
mov
mull
cmpsb
push
mov
inc
mov
cwtl
xor
add
and
push
add
fwait
mov
xor
movsb
enter
pop
testb
fsts
jnp
and
add
push
jle
jo
icebp
popf
xlat
cmp
mov
jg
inc
mov
inc
mov
mov
xor
lods
int
inc
mov
out
sbb
sub
cmp
inc
fucom
fwait
iret
fdivrs
adc
ljmp
sub
testl
xor
push
sub
jecxz
arpl
jmp
test
xor
popa
das
out
fxch
sarl
inc
and
out
test
xchg
xchg
push
repz
adc
lods
jne
in
xchg
xchg
dec
in
aaa
call
inc
cld
or
or
cmp
adc
in
xchg
cmp
sbb
dec
sbb
mov
out
xor
and
push
mov
insl
cs
jns
inc
pushf
pop
idiv
adc
sub
cld
push
ror
inc
jmp
loope
stc
lods
jecxz
outsb
pop
xor
mov
insl
pop
sub
jmp
test
leave
mov
popf
inc
out
xchg
clc
pushl
aad
or
sub
mulb
sub
outsl
lahf
xchg
movsl
idivb
icebp
inc
inc
sub
mov
int
jle
out
add
push
push
cwtl
cmpsb
mov
sub
xor
push
pop
stos
push
pop
test
andb
xor
js
dec
xor
es
add
loope
daa
sbb
xchg
into
pop
jae
and
adc
ret
jge
pop
fs
pop
push
xchg
sub
adc
xchg
outsb
rcll
or
lcall
xchg
fstpt
js
dec
ret
pop
sbb
or
aam
mov
sub
mov
sub
push
cwtl
mov
push
mov
lret
loopne
push
loop
dec
add
addl
dec
sbb
loopne
insl
data16
dec
fst
ja
pop
lret
ret
and
mov
jne
cmp
fmuls
jge
leave
push
ret
repz
pop
dec
in
jb
add
push
bound
xor
jne
sub
push
ret
cmp
mov
adc
inc
imul
fst
push
mov
subl
xor
into
pop
xchg
stc
xchg
lods
inc
xor
jb
jecxz
pop
bound
mov
mov
aaa
jp
sarl
pop
lods
push
mov
mov
mov
push
jns
dec
add
fnstsw
sub
sbb
mov
xor
sbb
insb
xor
inc
add
sahf
xchg
scas
mov
mov
pop
add
cmp
fsubl
jns
sbb
inc
sbb
scas
xchg
negl
orl
and
and
jbe
fcmove
inc
inc
push
mov
fcompl
mov
jno
pop
mov
push
lods
mov
insl
ret
or
scas
or
jecxz
push
sbb
mov
xor
aam
in
add
and
movsb
or
out
sub
sub
dec
jge
leave
jb
cs
mov
cli
bound
sub
adc
xchg
lret
push
rclb
mov
in
imul
out
mov
cwtl
aas
sti
pop
xor
push
xchg
les
sub
cmc
pop
xchg
mov
in
das
push
mov
pop
out
lahf
out
mov
scas
nop
in
xor
stc
or
data16
cwtl
mov
xor
jno
pop
shrl
aad
mov
imul
cmp
int
adc
and
pop
outsl
outsb
loop
mov
call
fimuls
divb
fdiv
xor
cs
xor
cmc
xchg
pop
scas
mov
lods
jbe
test
xor
jle
daa
daa
fldcw
adc
icebp
inc
or
xchg
jle
inc
movsl
push
pop
xchg
sbb
mov
in
and
cli
sarb
pop
mov
std
xor
dec
mov
addr16
add
mov
insb
xchg
push
mov
sub
mov
cmp
cltd
shrb
push
repz
push
mov
cli
outsl
fs
dec
sbb
and
add
sub
inc
in
jae
mov
push
cli
lret
jge
dec
jnp
es
sub
rorb
scas
stos
sbb
add
push
add
fcompl
pop
push
mov
sbb
inc
inc
add
sti
lret
jecxz
ja
xor
js
xchg
popf
add
jecxz
pop
and
dec
and
xor
sahf
cli
out
and
push
jno
std
mov
repz
les
cmp
mov
imul
sarl
test
test
into
sub
insb
sti
add
xchg
pushf
cwtl
pop
push
add
mov
mov
dec
fstps
movsl
xor
pop
inc
js
jbe
stos
in
jnp
std
and
andl
ljmp
cmp
mov
int
rclb
out
movsb
pusha
cld
dec
loope
test
insl
imul
out
cmp
enter
sbb
push
xchg
sub
je
lds
push
cmc
dec
push
loop
addr16
hlt
ja
sub
sub
loope
push
arpl
lds
out
or
not
sahf
mov
rclb
jmp
add
lods
ss
xchg
incb
lea
ja
jns
push
adc
and
pop
or
mov
ds
dec
push
mov
and
mov
cwtl
out
sbb
xor
in
pop
inc
rol
xlat
jns
adc
lret
lock
nop
adc
cmp
xor
add
xchg
aas
imul
lods
pop
pop
lock
push
fmuls
inc
pop
or
xchg
push
and
scas
in
mov
push
ja
jo
jmp
mov
pop
and
insb
xor
adc
inc
insb
loop
push
mov
insl
cltd
inc
dec
rclb
outsb
addr16
and
iret
mov
push
in
leave
inc
inc
adc
push
mov
or
xchg
popf
jle
or
jle
jb
cld
andl
lret
insb
sub
lea
out
sub
jmp
adc
in
mov
push
sub
and
fidivl
push
mov
pusha
mov
stos
cmp
das
inc
mov
inc
inc
cmp
nop
addr16
add
add
sub
loop
movsb
bound
mov
dec
sub
adc
in
lret
mov
xlat
js
aas
idivl
call
icebp
pop
mov
sbb
and
inc
push
icebp
cmp
and
or
ss
push
std
lds
mov
fmulp
aam
mov
in
pop
daa
imul
bound
mov
lret
push
push
jo
jg
and
in
shll
lcall
pushf
jo
lods
stos
mov
push
lahf
pop
xchg
pop
xor
and
xchg
mov
jecxz
or
enter
pop
sub
cmpsl
flds
inc
xor
hlt
ret
cld
sub
pop
je
pushf
int
scas
and
pop
test
and
xchg
hlt
sub
or
push
sbb
pop
int
jnp
xor
int
xor
or
xor
xor
adc
push
aam
daa
popa
add
jmp
in
push
adc
popa
xchg
push
fs
in
pop
icebp
rclb
lods
scas
repnz
cwtl
ret
mov
popa
cmc
lods
lea
js
iretw
popf
add
test
adc
sbb
mov
lds
xor
and
daa
mov
lret
imul
je
adc
dec
jecxz
xchg
loop
aam
negl
push
mov
sub
adc
mov
mov
fwait
or
sub
jge
int3
les
loop
in
adc
mov
add
lret
call
pop
int3
das
cmp
pop
out
inc
je
cmp
sbb
clc
push
call
mov
dec
sbb
orl
iret
out
fs
imul
mov
xchg
jno
fcom
ret
in
push
add
icebp
outsb
std
xchg
pop
into
cld
xlat
push
sbb
icebp
mov
mov
dec
test
data16
mov
sti
xchg
mov
or
sbb
jmp
mov
and
ficompl
call
dec
push
xchg
adc
mov
std
fwait
clc
out
cwtl
fdivrl
mov
mov
aad
or
jmp
notl
jle
repnz
lods
cmp
test
jns
fs
push
mov
push
gs
mov
dec
int3
daa
out
iret
jl
xchg
or
pop
cmpsb
xor
mov
jge
dec
scas
scas
mov
sbb
sbb
sub
int
pop
mov
push
subl
mov
mov
sub
mov
add
popa
cmp
sub
nop
jo
aas
xchg
or
jecxz
fnstsw
xlat
into
mov
js
test
xchg
outsb
mov
ret
push
mov
dec
scas
loopne
in
sahf
xorl
and
dec
jp,pn
adc
jb
loope
ret
jg
and
popa
cmp
daa
mov
out
jo
mov
pop
cld
or
sbb
out
dec
or
pusha
in
inc
sarb
mov
and
jle
test
xchg
and
xchg
imul
pop
mov
idivb
cltd
lret
fidivrl
scas
mov
cmpb
pop
jp
push
test
dec
xor
xor
mov
cld
push
mov
xlat
lea
xchg
sub
std
sub
lahf
xor
jl
cmp
cwtl
and
mov
fwait
pop
or
scas
outsl
jae
xchg
and
lcall
push
mov
mov
sahf
jne
push
enter
out
mov
dec
mov
xor
push
ret
cmp
out
imul
adc
aaa
push
loop
ljmp
test
out
jg
fistl
fwait
js
pop
sbb
rcrb
shrb
jg
les
mov
outsb
dec
loop
lahf
insb
dec
push
and
nop
test
or
hlt
push
aaa
xor
imul
int
dec
ret
cmp
add
inc
inc
cli
arpl
inc
jb
mov
orb
push
push
cmp
int3
xchg
mov
mov
pop
push
out
inc
mov
cmc
scas
sub
xchg
xchg
ret
pop
xor
jnp
subb
enter
pusha
pop
xchg
pop
sub
imul
dec
iret
cmpsl
sbb
das
xchg
cld
mov
cmpsb
lahf
cli
jmp
or
add
mov
and
push
mov
and
mov
pop
mov
or
sti
fwait
mov
ljmp
addl
lock
xchg
sbb
xlat
cmp
dec
movhps
mov
mov
push
cmp
ljmp
in
inc
enter
sub
push
stc
mulb
lock
fidivs
sub
add
mov
sub
lcall
cmp
movsl
mov
stos
hlt
cmp
push
inc
nop
js
sbb
inc
jmp
dec
idivl
je
test
dec
cmpsl
leave
cmc
sub
push
mov
sub
dec
cmp
je
mov
sub
lahf
popf
xchg
cmpsb
inc
fs
and
push
dec
loope
fisubrs
pop
adc
int
cmp
mov
sub
mov
push
roll
mov
or
adc
in
or
sahf
jbe
cmp
jns
pop
sbb
push
mov
pop
dec
adc
test
xor
add
and
outsl
dec
pop
sbb
in
scas
outsb
loope
gs
pop
rcrb
pop
testb
jl
jmp
sahf
mov
cmpsl
cmp
inc
push
jb
repnz
or
movsl
jne
sbb
data16
mov
add
cli
out
add
inc
cltd
and
not
orb
dec
movsb
in
jae
xchg
out
lea
mov
add
or
mov
dec
cmp
gs
xchg
daa
and
cmp
jmp
mov
sarl
mov
sbb
sbb
imul
jo
addr16
out
add
cmp
add
call
sub
dec
lock
fcoms
movsb
adc
lods
dec
adc
jo
cmp
insl
sub
lcall
jns
enter
stos
xchg
mov
cmpsl
pop
es
add
pushfw
cli
add
and
psubusb
lcall
xor
pop
or
test
nop
fwait
dec
jp
mov
scas
in
clc
lret
push
sub
repz
stos
add
add
test
mov
aam
xorl
loope
cmp
sbb
cltd
sub
jb
fiadds
push
sbb
ljmp
pop
add
out
loope
cmpsb
ret
mov
imul
mov
sahf
ret
lahf
lds
mov
inc
enter
sub
es
lea
mov
push
adc
mov
sahf
sub
loopne
xor
ja
in
vpandnd
fistpll
jge
xchg
xchg
popf
loopne
pop
xchg
ret
ss
pop
rcr
mov
es
jmp
stos
jge
pop
add
dec
mov
repnz
mov
pop
add
jo
dec
lcall
jecxz
jecxz
sub
jo
loop
inc
or
pushf
cld
mov
fnstsw
dec
icebp
jecxz
das
test
popf
xor
pop
les
and
aad
fdivrl
lahf
push
std
jno
aad
xor
mov
or
xchg
repz
mov
push
ret
pop
stos
mov
mov
dec
mov
sti
mov
and
outsb
pause
mov
xor
arpl
scas
call
in
cmp
push
and
stc
ljmp
out
movsl
fwait
leave
cmp
cmp
fsubrs
pop
outsb
mov
push
les
in
sbb
xor
xor
jge
daa
dec
dec
sti
jns
inc
mov
mov
movsb
icebp
add
cmp
adc
outsl
lods
daa
jecxz
mov
mov
lock
push
test
out
xchg
inc
outsl
popa
mov
mov
dec
nop
test
jg
add
je
sbb
lea
inc
dec
push
sbb
sbb
mov
inc
pop
adc
and
mov
loop
nop
call
repz
sbb
dec
xlat
test
mov
adc
testb
cmpsl
in
xor
movsl
dec
xor
mov
and
js
cmp
mov
xor
sarb
cwtl
shlb
movsb
push
and
push
fsubrl
enter
lahf
mov
push
pop
sbb
hlt
jb
sbb
pop
push
lods
xor
ja
les
and
insl
or
jnp
js
jecxz
test
popf
push
ja
pop
or
adc
push
inc
jnp
adc
mov
dec
cld
shll
mov
scas
or
cltd
sub
mov
mov
pop
xchg
cmc
mov
mov
clc
test
dec
inc
xchg
imull
lahf
leave
leave
cltd
cld
aas
adc
mov
jg
aaa
push
hlt
and
dec
mov
ja
and
sti
mov
add
jb
out
pop
push
sbb
push
mov
sti
pop
xchg
repz
xor
xor
into
int
loopne
in
inc
add
mov
aas
push
jle
jae
jg
add
dec
push
jmp
and
call
push
fisttps
mov
pop
jae
xor
and
inc
std
jl
cld
ja
test
xlat
dec
jae
and
pusha
inc
sahf
dec
mov
ja
in
int
sub
add
movsb
inc
leave
cltd
mov
cmpsb
cmp
jmp
and
or
sarl
adc
stos
in
test
movsb
repz
pop
dec
imul
push
js
xor
sbb
sti
sub
js
lods
sbbb
ja
inc
mov
mov
gs
and
cmpsb
es
add
loopne
sub
sti
ficompl
sub
iret
incb
jge
out
dec
add
loopne
mov
out
shrb
sbb
dec
icebp
pop
push
sbb
loop
sbbb
push
push
outsl
sub
sar
inc
addb
sub
imul
dec
pop
fsts
xchg
jnp
mov
enter
divl
push
iret
loopne
shll
gs
inc
add
inc
push
aad
push
es
pop
icebp
or
mov
fcmovnb
or
aas
cmpsl
lock
add
mov
or
repnz
ffree
lret
loop
pop
jae
jg
dec
jg
jg
sbb
adc
test
xchg
nop
cmp
stc
cwtl
pop
lods
pop
out
mov
cmp
sub
and
or
cli
or
cwtl
loop
and
orl
push
push
jmp
mov
loopne
test
and
test
loope
fistpl
dec
mov
push
repnz
fnstenv
add
sub
mov
inc
repz
sub
pushf
inc
arpl
ds
xor
insl
pop
add
dec
xor
subb
add
and
jecxz
xor
pop
adc
pop
jb
clc
mov
push
xchg
xchg
psllw
fdivl
sbb
test
lcall
arpl
or
fcomi
scas
ljmp
xchg
dec
inc
mov
xchg
add
and
shlb
scas
rcrb
dec
dec
out
aaa
inc
imul
std
mov
push
gs
movsb
popa
imul
mov
dec
leave
sub
add
negb
xor
sub
in
pop
xor
mov
int3
inc
inc
icebp
add
mov
js
pushf
mov
mov
shrb
movsb
test
cmpsl
enter
pop
psraw
xor
inc
imul
mov
pop
jnp
out
std
mov
mov
add
fcmovbe
sarl
inc
sub
lods
push
aad
push
sub
cltd
es
leave
xchg
push
in
out
mov
clc
cltd
jl
ja
jo
cmp
xor
daa
push
jge
push
popf
insl
lret
int3
scas
cmp
pop
pop
orl
xchg
cmp
jo
out
push
mov
adc
addr16
ss
lret
scas
pop
in
mov
push
cmp
mov
aam
sub
popa
cmc
cmp
andb
clc
test
lea
and
mov
add
iret
repnz
sub
sub
cmp
sub
dec
dec
addr16
clc
xchg
push
test
call
pushf
inc
adc
out
jb
scas
addl
mov
inc
cmp
xor
out
sbb
std
ds
movsb
push
sar
sub
mov
or
mov
out
or
daa
mov
dec
dec
inc
and
mov
nop
inc
pop
mov
int3
fwait
or
mov
xor
mov
sub
pop
test
pop
xchg
fdivs
or
fildl
outsb
inc
dec
xor
ficoml
into
mov
in
das
shrb
xlat
call
pop
mov
or
fcmovbe
popa
cltd
push
pop
andb
popf
push
jge
pop
mov
mov
xchg
xor
push
lcall
call
cltd
sub
imul
fidivrs
xchg
sahf
xor
dec
cmpsl
xchg
push
mov
sub
cmpsb
clc
xor
in
loop
mov
xchg
cmp
stc
push
push
jg
ljmp
aas
into
ljmp
xchg
add
lods
subl
mov
int
cltd
cmc
nop
call
xchg
xchg
je
sbb
not
test
lret
xchg
jns
push
pusha
sbb
dec
icebp
flds
das
push
mov
adc
movsl
push
mov
enter
mov
enter
dec
xor
cmp
push
cmp
cwtl
sbb
orps
dec
push
lods
jge
add
cmc
jmp
negb
cmp
test
mov
pop
push
add
repz
xchg
mov
dec
mov
repz
add
dec
test
stc
sub
xor
jnp
loop
mov
mov
and
popa
or
ljmp
jns
xchg
mov
jb
cmp
pusha
out
mov
mov
in
add
scas
mov
ret
mov
test
les
and
and
in
stos
jmp
mov
loope
rolb
scas
psadbw
loop
adc
test
or
mov
cmc
fs
out
daa
xor
jecxz
cmp
les
ret
cwtl
lods
jge
xchg
test
dec
jnp
or
shr
pop
adc
imul
cmp
popf
fstpl
out
mov
push
cwtl
iret
sbb
popa
cld
sub
popa
stos
loop
dec
imul
cmp
mov
mov
adc
shl
aad
out
mov
imul
mov
loopne
jno
ret
mov
mov
clc
pusha
fists
insl
adc
pop
ljmp
mov
icebp
loope
std
ljmp
ljmp
push
outsb
sub
xor
rcl
cs
bound
or
adc
jp
stos
hlt
mov
lods
lea
jmp
sub
jp
rorb
lods
cmp
iret
nop
jns
lahf
push
adc
fmulp
dec
test
test
clc
xchg
sahf
movsb
cmp
fwait
int
sbb
and
das
icebp
add
pop
out
popf
jno
call
mov
dec
jns
popf
push
mov
repz
add
mov
push
push
mov
sahf
pop
sbbl
cmp
std
inc
cmpsb
ret
movsl
xchg
hlt
cmpsb
les
lret
mov
cld
lock
add
sbb
fstl
lods
add
out
inc
ljmp
jns
inc
orl
lcall
sti
fs
add
mov
imul
jae
or
pop
adc
push
out
xchg
inc
mov
pop
jl
dec
loope
inc
out
xchg
out
mov
in
shrb
adc
push
out
sbb
stc
ds
mov
push
pop
adc
cmc
notl
loop
inc
stos
and
sub
movsb
and
push
jecxz
pop
add
xor
push
dec
daa
fucomp
mov
data16
leave
out
fstl
ret
or
cmp
insl
add
inc
push
sbb
lahf
ret
push
arpl
xchg
push
fnstenv
xchg
mov
mov
jb
jae
cmp
xchg
es
mov
cmpsb
jnp
in
sub
cmp
in
loop
pop
sub
movsb
sub
adc
jmp
mov
cwtl
popl
or
mov
xchg
pop
loopne
stos
dec
repnz
filds
ret
inc
int
mov
push
add
stos
push
test
cld
jo
add
ljmp
mov
or
test
cltd
jno
jle
xchg
roll
dec
push
repz
sub
mov
fst
repnz
orl
jp
icebp
xchg
insl
mov
sahf
fdivl
aad
inc
cmp
pop
daa
int3
pop
lahf
mov
cmpsb
dec
in
bound
add
adc
cmpsb
pop
or
stos
adc
repz
mov
in
movsl
push
xchg
sub
cmp
mov
pop
nop
inc
jne
dec
mov
mov
cli
aaa
pop
jnp
test
jb
cmpb
mov
lcall
aaa
daa
cmp
test
dec
mov
inc
scas
mov
imul
addr16
dec
mov
vminsd
gs
mov
dec
ss
push
xchg
jmp
lds
orb
mov
mov
les
mov
pop
cmpsl
aaa
in
fldt
in
mov
mov
add
cmp
add
popa
loope
sub
and
push
pop
insb
icebp
int
enter
cltd
jo
daa
mov
add
push
js
fnstsw
cs
cld
loop
jmp
inc
pop
fnstcw
mov
in
sub
mov
insl
cmp
jg
lock
cmpsl
ficoml
cwtl
xor
pop
aad
xchg
out
or
ja
outsb
ret
test
cmp
push
adc
push
into
dec
adc
add
imul
push
adc
push
cltd
arpl
dec
test
mov
cmpsb
sub
inc
mov
cmp
pop
lock
pop
jle
ljmp
fisubs
fsubrl
out
rsm
pop
enter
arpl
repz
push
outsl
cmp
stos
outsb
ret
cwtl
lds
popf
std
in
les
ds
nop
jl
adc
ljmp
je
sahf
outsl
enter
rclb
xlat
lret
lcall
pop
lds
jmp
cmp
addr16
aaa
inc
sub
sbb
das
pop
jo
xor
stos
inc
push
add
and
cltd
pushf
lods
icebp
dec
pop
push
jl
mov
dec
fimull
fwait
imul
push
cltd
inc
scas
cmp
aam
adc
cmp
addl
xlat
jbe
hlt
call
push
push
pop
bound
out
cmp
popf
sbb
int3
rcl
sbb
xchg
das
mov
loopne
mov
mov
jecxz
hlt
mov
cld
sarl
popf
mov
icebp
outsl
fsubrl
sub
pusha
sub
or
sub
dec
mov
shrl
sub
out
or
rorb
neg
push
mov
les
inc
mov
and
sub
push
dec
sub
add
popa
loopne
ret
roll
in
popf
sahf
imul
add
popf
dec
mov
push
xorl
mov
pop
mov
fstl
or
outsl
xchg
mov
or
mov
xchg
and
mov
loopne
jbe
popa
int3
mov
push
cli
out
lret
lds
mov
addr16
jp
cmc
pushf
out
aam
sub
pop
test
out
in
push
and
lods
pop
insl
enter
aas
or
ret
xchg
scas
sti
mov
mov
add
pop
jl
mov
popa
push
ja
mov
mov
sti
fdivr
cli
lcall
pop
or
mov
xchg
rcrl
jns
loop
clc
sahf
int
mull
dec
outsb
mov
mov
addb
or
mov
dec
inc
or
je
lea
movsb
arpl
loopne
stos
dec
push
sub
xor
movsb
push
add
pop
aaa
push
jg
rorl
adc
mov
call
mov
add
mov
adc
push
push
jecxz
fmull
xchg
or
ficoms
bound
push
dec
cmp
out
push
cmpsb
mov
sub
mov
lret
mov
fwait
ret
jp
outsb
jg
icebp
and
jae
adc
and
xor
mov
ret
into
jbe
nop
lods
in
xor
sbb
cmp
dec
sbb
pop
add
lret
lret
sbb
add
cmp
fsubs
cmpsb
push
sbb
adc
jg
in
mov
cltd
mov
adc
outsb
jnp
or
xlat
aad
lea
cmp
xchg
or
pop
xchg
ficoms
cs
jp
mov
mov
stos
pop
popf
mov
mov
pop
cmp
cmc
push
sub
push
mov
adc
and
aad
lods
xor
shrb
stos
jb
mov
into
mov
dec
dec
mov
and
xor
jne
push
daa
fsub
ja
mov
mov
idivb
push
mov
outsb
pop
mov
rcr
movsl
and
out
shrb
inc
aam
aas
sub
push
xor
cmpsl
aam
dec
add
mov
lock
aas
fisubrl
sub
jns
mov
dec
lds
sahf
leave
xchg
nop
cld
dec
xchg
mov
int
cmp
rorb
push
cmovbe
add
movsl
sub
inc
in
loopne
push
sbb
cmpsb
lcall
jbe
out
jae
pop
test
adc
sbb
sub
lret
push
sti
add
cmpl
fbld
xchg
push
add
xchg
dec
int
jno
jge
inc
lahf
loopne
sahf
sbb
out
js
mov
jmp
mov
sub
icebp
xor
cmp
mov
das
rclb
jl
sub
mov
icebp
xor
sub
sub
sub
sub
cmpb
fistpl
xor
pop
icebp
leave
hlt
decl
in
ficomps
stos
xchg
fnstcw
clc
cltd
jp
stc
mov
sar
popa
out
mov
movsl
inc
lea
adc
cld
in
popa
ljmp
xor
xor
lds
dec
lods
subl
sub
add
into
sbb
es
mov
xchg
fstp
enter
jns
inc
mov
push
sbb
fmul
jns
call
scas
or
rol
outsb
pop
adc
xor
pop
aaa
cmpb
add
enter
subb
jmp
ljmp
nop
dec
shlb
push
inc
les
or
jmp
mov
xor
lahf
jg
arpl
sar
add
lods
push
push
push
rcrb
cmp
push
jmp
cmovae
pop
pop
arpl
lock
push
in
orb
test
shlb
aas
insl
sub
gs
xor
cmp
xor
mov
cmovb
and
arpl
aad
add
rcr
pop
adc
lods
or
dec
nop
cs
repz
stos
adc
in
mov
inc
push
push
adc
and
jle
movsb
inc
aad
int
roll
mov
jbe
and
add
and
sub
cmp
dec
cmp
mov
sub
addr16
movsb
pop
cmp
dec
dec
sarb
leave
popa
push
mov
jp
rorb
data16
xchg
scas
mov
sbb
mov
xor
pop
mov
js
out
pop
jge
or
adc
test
je
xchg
xchg
sub
into
and
repnz
out
mov
adc
xor
adc
xor
and
jne
lds
jne
fisubs
mov
and
mov
cmp
jmp
pushl
xor
leave
push
test
jb
lcall
jge
inc
ffree
cmpsl
inc
fs
fcmovne
push
or
int
inc
loope
in
sub
sub
xchg
pop
mov
insb
push
aam
and
inc
fwait
mov
pop
pop
pop
inc
push
xchg
fimuls
mov
sbb
xchg
and
into
aas
in
pop
cs
stos
test
adc
jg
mov
ret
mov
stos
xchg
jmp
gs
adc
mov
xor
mov
xchg
add
jo
adc
or
push
ja
push
xchg
ljmp
imul
ja
sub
aaa
push
lods
mov
dec
test
adc
ljmp
scas
cmp
or
in
subb
and
daa
xchg
aaa
popa
jns
xchg
xor
xchg
mov
aaa
gs
xchg
test
xor
jne
push
test
bound
fcmovb
adc
call
push
push
shlb
xor
and
add
push
in
xchg
adc
or
lret
sbb
arpl
mov
mov
dec
cld
or
out
inc
xor
shll
inc
and
cli
adc
rcr
mov
adc
aas
xor
adc
pop
jae
mov
out
cwtl
mov
int
xchg
fisubrl
xor
sahf
dec
xchg
daa
es
inc
rcrl
mov
iret
insl
dec
pop
stos
shl
pop
inc
or
pop
jecxz
aas
mov
xchg
sub
push
cmp
mov
mov
mov
ljmp
add
call
add
loope
sahf
jle
push
push
out
mov
inc
xor
xor
xchg
mov
aam
mov
out
sub
adc
push
icebp
icebp
push
pushl
test
in
imul
cltd
je
jp
fiadds
rcrl
bound
cmp
push
bound
xor
lods
leave
adc
test
mov
mov
add
sub
dec
jecxz
movsl
jb
mov
cmp
jo
pop
adc
mov
rcl
or
mov
leave
cwtd
dec
leave
sub
push
mov
or
and
xlat
mov
hlt
ds
mov
pop
cmp
mov
adc
iret
inc
mov
adc
push
scas
xchg
push
test
sbb
sbb
es
or
pop
sbb
xchg
jns
in
movsb
and
lcall
clc
and
repz
test
testl
push
mov
pop
imul
sub
sti
ss
test
mov
dec
out
push
mov
andb
pop
repnz
out
lods
faddp
pop
xor
bound
pop
inc
popa
inc
pusha
out
ror
inc
insl
fidivrs
icebp
clc
clc
movsl
insb
xor
sarb
scas
mov
mov
hlt
jo
js
inc
or
adc
sub
inc
popa
int3
je
out
sarl
fmul
mov
out
hlt
pusha
xchg
and
and
mov
repz
cmc
test
pusha
sbb
or
mov
out
push
leave
mov
or
movsb
mov
movsb
or
mov
adc
dec
and
pop
and
jnp
pop
push
les
jge
std
stos
rol
dec
xchg
pusha
fildll
xchg
lcall
push
cmp
inc
mov
das
push
aaa
cmp
shlb
andl
push
hlt
repnz
ret
xor
pop
sbb
pop
mov
lcall
add
inc
mov
jb
mov
rolb
mov
fs
icebp
scas
sbbb
mov
loop
adc
jne
arpl
sarb
and
cmp
xor
xchg
loop
aad
xchg
xor
jbe
daa
mov
repz
imul
out
pop
sahf
setl
mov
sub
rolb
xchg
ffree
mov
add
sub
push
inc
add
inc
cmpsb
push
out
jg
sub
xchg
cmp
push
push
sbb
xor
stos
mov
movsl
mov
push
push
jl
cmc
lahf
test
inc
loope
jg
pushf
sbb
cwtl
pop
js
movsb
or
push
cmp
xor
sub
shld
loopne
push
lret
fistl
test
dec
pop
xor
mov
cld
sub
ljmp
mov
ss
or
adc
mov
cld
fcompl
push
scas
or
sub
mov
fcoms
add
test
or
dec
movsl
mov
mov
fisubl
sbb
xchg
ja
push
test
insb
or
mov
adc
je
sbb
lock
cmp
insb
out
dec
and
sbb
es
insb
and
sbb
iret
jp
daa
mov
mov
adc
cwtl
or
or
mov
test
popf
xchg
mov
sub
or
lcall
sub
cmp
or
xor
mov
fptan
push
mov
fsubl
ror
mov
pop
adc
cmp
psraw
rcrb
neg
popf
inc
loopne
mov
pop
xor
sbb
inc
into
jae
dec
lea
mov
mul
push
and
xor
xor
add
test
je
inc
mov
sub
sbb
out
icebp
xchg
aaa
lcall
mov
aas
push
fadds
lahf
sbb
inc
lea
lret
jmp
jecxz
jnp
lret
scas
mov
cmp
mov
mov
inc
das
test
addb
push
dec
lds
int
dec
mov
jecxz
loopne
movsl
pop
lcall
icebp
test
jns
pop
jno
outsl
outsl
pop
fldcw
out
jb
popa
fyl2x
push
sbb
cmc
adc
cltd
and
neg
mov
cld
gs
stos
xchg
fs
das
pusha
add
cld
push
popf
sbb
rcl
faddl
mov
outsb
dec
push
gs
pop
ljmp
pop
dec
mov
cmp
loope
bound
insl
push
xor
cmp
inc
add
out
xor
mov
pop
sahf
hlt
jmp
pop
push
cli
sbb
xchg
jle
xchg
arpl
loope
neg
mov
cmp
and
fucomp
mov
hlt
jge
pop
add
sub
rcll
call
push
pop
sbb
pop
adc
adc
push
gs
fmull
dec
mov
fadds
movsl
nop
add
fucompp
int3
mov
mov
push
mov
sti
andb
gs
fcomps
lock
fs
es
cmp
mov
xor
xchg
jge
pop
inc
add
out
add
jns
xchg
pop
cmc
int
or
aaa
push
sbb
xchg
adc
outsb
aaa
lahf
mov
dec
lods
mov
mov
mov
push
xchg
insb
xlat
rorb
popf
and
sub
subb
mov
arpl
pop
je
std
leave
mov
and
test
jp
sbb
nop
push
adc
mov
pop
mov
adc
add
cmp
jle
push
dec
js
pop
adc
or
in
inc
pop
inc
or
divb
pop
shrl
int3
dec
testl
mov
aad
ds
cmp
add
jge
push
pop
dec
pop
pop
out
fadds
jno
mov
mov
jne
push
pop
imul
outsb
jmp
shrd
pop
cmp
sbb
mov
inc
mov
faddl
mov
xor
xor
adc
dec
dec
leave
js
ljmp
jl
adc
pop
push
jae
jl
out
sub
ss
cmp
rcrl
ljmp
mov
mov
loopne
lgs
fwait
inc
test
adc
daa
inc
loope
cmp
jecxz
sbb
mov
cmp
stc
cli
pushl
das
mov
cld
or
xor
or
repnz
std
in
pop
xchg
adc
jo
test
adc
dec
push
adc
sbb
sub
cmp
cmp
rol
adc
sbb
arpl
lock
sub
insb
jae
inc
lret
outsb
mov
cs
test
punpcklwd
out
dec
es
ds
cmp
adc
sub
inc
mov
dec
lods
mov
mov
fcomip
xor
rorl
xorb
xchg
mov
jae
mov
outsb
pushf
repz
shr
push
push
test
bound
pop
sbb
jge
mov
outsb
orl
push
addr16
and
and
test
cwtl
or
push
jge
jnp
insl
mov
jp
in
jmp
les
call
ret
repz
and
cmp
jg
fmulp
sbb
and
pop
cwtl
mov
push
aad
sahf
fsts
aam
fcoml
sti
flds
cmp
and
add
pop
popa
in
add
add
insl
jmp
daa
loopne
out
lea
sbb
mov
lret
adc
xor
outsb
or
xchg
leave
push
cmpsl
mov
adc
mov
sub
push
and
or
pushf
push
xlat
inc
shrl
xor
sbbl
xchg
call
sub
repnz
mov
or
rolb
inc
jp
jb
jnp
test
push
addl
cmpsb
call
clc
sub
insb
add
xchg
test
cmp
lret
xor
xor
cmp
lods
jnp
add
inc
pop
inc
call
jo
xor
repz
ja
pop
sbb
lret
cmp
add
data16
enter
and
cmp
or
out
adc
lret
out
push
mov
aam
xor
bound
int
cmp
or
lds
daa
cmp
int3
push
lods
cmp
andl
sub
movsb
subb
cs
pop
pop
frstor
wbinvd
xchg
push
push
nop
add
and
dec
pusha
sbb
lea
cmp
ljmp
mov
movb
dec
cs
icebp
frstor
lds
hlt
xchg
xchg
aam
add
mov
cmp
test
fucomp
fcomps
sahf
cmp
inc
mov
jne
jno
adc
cmp
in
std
stos
dec
cmp
pop
or
mov
add
push
xchg
fdivs
divl
and
sbb
jnp
js
adc
adc
cmp
out
adc
or
iret
mov
push
cmp
fsubrs
outsb
loope
dec
test
popa
and
lret
mov
call
stc
aaa
dec
test
sar
xlat
xor
and
push
ficompl
dec
arpl
stc
or
cmpsl
sub
lret
xchg
stc
cmc
or
dec
mov
jns
mov
lret
lds
jb
pop
sbb
mov
lret
mov
push
sub
sbb
adc
cmp
cmp
jae
jb
mov
fs
fs
add
lcall
lcall
jne
aam
testb
pop
adc
mov
mov
lea
repz
and
in
mov
xchg
push
test
jns
cmpsb
mov
fcomi
scas
xchg
testl
sub
pop
enter
lea
push
xor
std
iret
movsl
mov
sti
dec
cmpsb
pop
aas
fadds
clc
pop
and
sbbl
mov
cltd
out
jmp
scas
stos
fxch
into
movsb
or
mov
push
outsl
dec
or
daa
sub
dec
repnz
aas
mov
dec
mov
lret
jl
push
stos
push
jne
std
data16
loop
repnz
pop
cmp
xchg
imul
inc
pop
icebp
jbe
xor
les
push
pushf
xor
test
addr16
adc
jne
dec
mov
sbb
outsb
jnp
ss
sbb
sub
lock
cmp
fldl
in
outsl
mov
add
cltd
pop
ret
xlat
cwtl
shrl
out
mov
mov
and
cmpsl
nop
adc
pop
jns
jno
mov
inc
jae
mov
ficompl
xchg
inc
dec
shrb
pop
dec
cmp
pop
or
xor
dec
je
mov
fsubrl
mov
pop
ljmp
inc
test
add
jns
xchg
rcrb
xor
add
arpl
and
inc
lcall
nop
repz
outsb
and
and
jl
imul
dec
fiadds
aad
popf
sti
pusha
adc
add
sahf
pop
add
inc
mov
xchg
clc
dec
fs
mov
adc
fimuls
and
rcll
arpl
or
addr16
clc
sbb
mov
testl
cmp
jmpw
push
mov
aaa
es
repnz
popf
push
cmp
add
jl
pop
mov
push
jg
mov
mov
inc
repnz
fnstsw
test
mov
icebp
pop
mov
cmp
pop
add
mov
pop
jge
adc
mov
call
inc
cs
ret
push
insl
arpl
in
add
out
mov
sub
mov
mov
mov
cmpsb
mov
adc
cmp
fwait
xchg
add
dec
or
push
add
je
test
imul
daa
aaa
mov
mov
loopne
pop
cmp
mov
test
aaa
and
lds
stc
mov
adc
mov
adc
mov
stos
flds
jb
push
inc
call
and
test
mov
mov
sar
testl
jnp
dec
add
lret
push
pop
inc
xor
xor
sar
sarl
cmp
xor
push
loope
mov
scas
cmp
test
into
xor
add
call
ja
ret
cli
pop
fwait
ja
mov
cmc
fstl
jge
out
test
cmpl
push
push
stos
push
xor
movsl
jg
cmp
les
stos
xor
mov
outsl
lret
rcr
or
fistl
xchg
aam
and
ja
prefetchw
or
jmp
jno
rcrl
gs
inc
lds
mov
fistpll
mov
gs
cmp
inc
fwait
jo
shr
pop
hlt
mov
aaa
nop
pop
aaa
fnstenv
xor
popf
pop
pop
fwait
mov
js
je
mov
inc
in
or
sub
fcompl
pop
imul
fs
popa
mov
push
sbb
jl
out
addr16
xchg
sub
test
mov
xor
mov
dec
popa
mov
mov
xchg
adc
cmpsb
ret
out
and
das
push
xchg
daa
jg
jnp
aad
push
outsb
outsl
out
cmc
push
dec
jge
fwait
imul
push
in
lea
bound
jne
jns
fadds
push
mov
mov
push
outsb
clc
xchg
jnp
cmpb
jle
mov
sub
pop
mov
push
push
push
adc
lea
lcall
mov
jae
test
loopne
fildll
dec
das
cli
fwait
xchg
add
int3
and
xchg
sbb
and
movsl
inc
inc
push
inc
inc
inc
bound
std
add
sahf
stos
mov
mov
aam
dec
xor
fs
out
pop
es
adc
sti
sahf
push
inc
mov
push
imul
cwtl
test
outsl
iret
dec
cmp
and
and
les
mov
repz
push
sub
xlat
sbb
xor
and
dec
sub
dec
or
xor
or
add
xor
xor
lods
pop
jp
inc
mov
inc
sbb
fadds
mov
rorl
fld
gs
push
pop
iret
push
ret
xor
loop
adc
mov
scas
adc
sub
inc
imul
je
test
jecxz
mov
cld
cmc
jmp
jp
push
cmp
inc
cwtl
ficoms
xor
or
data16
pop
pop
dec
fwait
inc
cmp
scas
repnz
mov
mov
leave
cld
bound
aad
mov
and
push
adc
sarb
push
stos
bound
sbb
mov
mov
stos
imul
in
xchg
imul
mov
aad
ss
or
cmp
leave
mov
push
fisubrl
push
gs
rol
aad
ss
mov
and
push
jo
adc
adc
add
mov
lcall
iret
mov
add
in
fwait
imul
pop
inc
int
popa
push
mov
jle
pop
xor
inc
addb
push
push
add
sub
stos
sbb
or
mov
pop
cmp
sub
aas
int3
mov
repz
sti
mov
or
sub
sbb
and
clc
sti
incb
sbb
mov
jne
jg
push
xchg
or
aaa
push
mov
add
jge
stos
nop
cmp
into
jbe
les
call
or
stos
lock
dec
cmpsb
sarl
inc
mov
jp
adc
lahf
lea
insl
push
sahf
cli
xchg
push
jb
into
dec
arpl
aaa
or
xor
pop
stc
mov
pop
jp
scas
push
cld
jae
xor
rcr
xchg
mov
xchg
loope
jo
mov
xchg
ljmp
ds
roll
ja
enter
std
xchg
enter
or
ret
arpl
sbb
rcl
inc
cs
fsts
scas
and
leave
jp
mov
or
fwait
pop
inc
nop
mov
and
ja
cld
mov
and
push
into
imul
hlt
ja
pop
mull
adc
notb
push
loopne
std
xlat
mov
push
xor
mov
push
rcr
dec
or
and
xor
and
mov
jge
ret
pop
test
cmp
xor
fs
xor
add
xchg
stos
and
rorl
lahf
lea
fsubrl
popa
xor
inc
jae
mov
fnstcw
mov
pusha
ja
outsl
jp
sbb
inc
aas
inc
inc
xor
lret
pop
insl
or
aaa
xorl
int
hlt
pop
bound
push
and
or
inc
mov
push
adc
das
inc
mov
cmp
cmc
xorl
into
xor
mov
and
out
cmp
push
lods
repz
sub
push
nop
mov
xor
aad
aam
push
fucomip
sub
pop
adc
lret
cmp
call
addr16
mov
xchg
push
ret
jnp
adc
fs
jno
jg
out
sub
add
and
mov
fistpll
add
cmp
mov
sbb
push
sti
mov
neg
inc
subb
inc
mov
popf
arpl
inc
out
leave
pop
pop
rcl
jp
jle
or
ss
lods
inc
sub
pop
int
hlt
push
int
sbb
xchg
add
hlt
call
adc
stos
jb
mov
jp
mov
ja
cld
jecxz
outsl
xchg
adc
pop
or
inc
jne
repz
test
imul
outsb
das
push
out
outsl
jbe
dec
pop
inc
fnstenv
sbb
xor
or
fnstsw
ret
inc
lods
xor
stos
xchg
loopne
in
std
pop
sub
dec
sbbl
pop
mov
inc
pop
xchg
aaa
inc
cmp
std
dec
mov
and
mov
jnp
push
pop
outsb
movb
data16
push
notl
xchg
into
out
cmpsl
xchg
dec
and
lods
pop
pop
xor
jb
repnz
jne
push
jl
lret
sub
out
adc
or
jl
iret
adc
js
daa
fisttpl
inc
leave
push
and
mov
push
jbe
repz
xor
or
test
test
xchg
ljmp
sbbb
xchg
and
push
fs
jmp
lea
mov
daa
fisubrs
dec
das
push
sub
je
sarl
cmp
cwtl
sbbl
mov
xchg
push
pop
mov
pusha
test
sub
in
jo
xchg
jae
push
jo
test
sbb
dec
sub
int3
mov
test
or
sub
fsubrp
repz
mov
mov
mov
aad
ret
fisttpl
add
xor
pop
adc
out
lcall
pop
pop
pusha
and
aam
mov
sub
imul
rcl
xchg
sti
inc
xor
rcr
and
js
mov
sub
mov
pop
mov
sub
xchg
in
cmpsb
inc
testl
cmpl
pop
adc
stos
test
insb
shl
jl
mov
mov
clc
adc
sub
mov
decl
jle
xchg
push
lds
cmc
shll
adc
rol
inc
xor
cmp
je
fcmovnb
jae
sbb
sbb
in
xor
or
cmpsl
sub
adc
jl
pusha
andl
daa
psrld
mov
popf
mov
mov
mov
lahf
mov
and
roll
movsl
push
lret
stc
jnp
ret
out
dec
sub
in
push
gs
add
addr16
pushf
add
shll
sbb
sbb
mov
imul
sbb
xor
sbb
dec
stc
inc
cmp
inc
adc
lods
clc
popf
xchg
js
pushf
inc
enter
xchg
jo
movsb
sub
ret
daa
imul
sub
vpcmpgtb
pop
inc
fisubrs
add
loop
push
lahf
push
aas
add
mov
add
aam
add
sub
lret
jl
aad
bound
stos
iret
inc
ret
pop
cmc
mov
and
mov
aas
insb
adc
iret
cmc
cmp
imul
xor
andl
cmc
mov
push
lret
pushf
or
push
pusha
cmpsb
mov
cmp
inc
sub
xor
jmp
mov
scas
sub
outsl
std
adc
out
dec
sbb
stc
aam
sahf
das
enter
mov
xchg
or
in
ret
adc
popf
imul
add
cmp
adc
aam
sub
idivl
movsl
jbe
sarl
mov
xchg
pop
adc
add
and
into
lcall
fstps
xor
pop
cli
mov
pop
outsb
cmc
push
adc
sub
fcmovnb
nop
xlat
cld
lcall
mov
int3
adc
scas
mov
inc
cmpsb
in
in
cmpsl
shrb
sbb
dec
roll
sub
adc
outsb
out
in
rep
aam
ret
cmp
inc
cmp
jae
mov
pop
mov
and
shll
rcrb
mov
lret
and
or
jp
cmpsb
icebp
lret
dec
bound
test
push
sub
push
inc
arpl
fs
xchg
fmull
outsl
mov
push
mov
cmp
outsl
mov
into
add
lods
mov
push
dec
or
clc
or
jle
add
js
imul
in
js
jbe
lret
out
lods
outsb
fs
sub
sbb
add
mov
xchg
decb
or
xor
inc
and
imul
dec
mov
sub
xchg
test
lcall
inc
cmp
push
repz
out
push
adc
into
sub
sbb
mov
pop
mov
xorb
inc
sbb
test
cwtl
sbb
and
adc
xchg
xchg
fsubrs
pop
int3
push
int3
push
repnz
in
dec
mov
rclb
xchg
out
push
int
jae
jle
push
es
pop
rcrb
dec
push
ss
in
adc
pop
xchg
cmp
out
xor
add
mov
cmc
mov
xchg
pushf
xchg
aad
test
sub
cltd
icebp
sbb
fcmovne
adc
addr16
pop
jbe
mov
cmp
ljmp
nop
push
cmp
lock
jecxz
not
push
test
cmpsb
aad
repz
dec
mov
mov
movsl
mov
sbb
push
jp
mov
fs
jmp
inc
fs
mov
addps
stos
fcmovnb
sbb
sub
xchg
cmp
filds
jp
xlat
adc
outsb
lcall
mov
scas
pop
int
pusha
cmp
rcll
ljmp
adc
arpl
shl
fbld
and
cmp
sbb
push
shlb
mov
dec
repz
inc
inc
mov
insb
jnp
out
fdiv
mov
mov
jbe
clc
aaa
cld
and
hlt
movlhps
pop
xchg
sub
push
test
mov
pop
push
xor
stos
adc
push
pop
nop
dec
lret
or
or
aas
fcomps
negb
sahf
test
mov
xchg
and
mov
decl
enter
mov
popa
mov
imul
repnz
loope
aaa
pop
and
ret
mov
aad
jns
leave
jae
addr16
stos
and
mov
movsl
cmp
movzwl
push
insl
test
lret
jno
xchg
push
stos
jge
sbb
sub
add
lahf
push
ljmp
push
loopne
addb
mov
adc
jg
sub
in
aas
filds
mov
jle
ja
or
add
push
lds
lock
out
push
cmp
dec
in
sar
inc
mov
push
push
and
mov
fadds
or
int3
adc
rcll
mov
adc
nop
ret
or
cmc
out
cmp
rorb
sbb
fidivrs
decl
int
pop
fucomp
data16
les
xchg
mov
xor
dec
stos
hlt
mov
mov
test
dec
xchg
lahf
xor
pusha
dec
mov
fisttpll
out
or
xor
lock
or
fwait
xlat
or
aam
repnz
add
test
loopne
add
jbe
or
add
lcall
cmp
ja
mov
idivb
sarb
and
fmuls
leave
je
xchg
inc
insb
adc
mov
data16
out
popf
push
lock
test
xchg
test
fldl
push
stos
jp
dec
xorb
leave
fdivs
jnp
lcall
sarl
jp
sbb
mov
pop
scas
sub
push
imul
bswap
sub
shl
call
or
notl
outsl
inc
dec
dec
insb
mov
sbb
fsubs
sbb
movsl
popa
mov
arpl
stos
push
push
xor
xlat
xchg
mov
add
andb
inc
ret
pop
shll
mov
aam
mov
inc
fistl
push
lods
sbb
lock
dec
jp
sbb
add
mov
mov
cltd
adc
adc
and
xchg
or
add
js
test
pushw
xchg
push
adc
test
jns
sub
test
and
dec
adc
stos
arpl
fwait
mov
cmp
cmpsb
jae,pt
pop
loopne
xor
loop
sbb
ds
mov
out
in
addr16
pop
cld
mov
aaa
add
mov
iret
ret
out
xor
sub
in
lds
cwtl
push
sti
mov
mov
inc
push
lahf
test
dec
add
or
and
mov
push
cmp
mov
cli
or
ret
and
sub
movntq
mov
cmc
mov
stc
shl
add
xchg
ja
or
pushf
jno,pt
sbb
inc
movsb
dec
js
ljmp
into
pop
mov
mov
dec
pop
jle
mov
cmpsb
ds
mov
mov
xor
ret
pop
inc
sub
xlat
scas
outsl
imul
cmc
inc
mov
shrb
addb
ss
jo
out
cmc
out
fnop
mov
add
out
sbb
lock
jl
movsb
dec
scas
push
fimull
pop
adcb
xchg
hlt
fsts
push
rorl
mov
shlb
add
in
std
idivb
lods
pop
push
scas
xchg
sbbl
loope
pop
test
loop
push
mov
jb
pop
sarl
push
mov
adc
dec
scas
iret
xchg
enter
pop
mov
xlat
add
add
mov
leave
repz
or
push
sarl
das
mov
or
sbb
sti
les
xorb
cld
insb
imul
sbb
cmp
and
repnz
sbb
outsb
testb
jbe
iret
xor
add
mov
dec
jae
loope
enter
push
shll
les
jae
sub
lcall
sub
adc
add
cld
or
adc
out
push
cmc
nop
dec
aas
and
popf
pop
jg
cmp
jle
inc
pop
jecxz
mov
sahf
sub
lcall
sti
sbb
lahf
mov
fstl
fdiv
xchg
imulb
test
shll
leave
push
outsl
int
pop
pop
scas
add
int
movsl
nop
je
aad
jecxz
js
lcall
jge
mov
mov
leave
sub
or
xor
sbb
stc
mov
mov
cmp
adc
roll
or
les
jae
lahf
jae
std
jo
icebp
test
pop
pop
dec
dec
jp
loopne
xchg
jo
xor
dec
nop
mov
mov
test
push
jo
test
cmpsl
sub
adc
and
test
je
outsl
movsl
aaa
adc
xor
repnz
jp
sahf
mov
je
aas
hlt
sbb
push
xchg
data16
sahf
jp
stos
mov
jae
inc
adc
push
in
lret
ret
cmpsl
stos
mov
dec
std
mov
cmp
mov
sub
insb
sahf
jecxz
pop
sbb
scas
jbe
cwtl
ds
mov
jo
sub
pop
hlt
bound
lea
pushf
cmp
adc
shl
mov
sub
dec
stos
fstpt
ja
mov
shlb
inc
cmp
add
insb
pop
pushf
mov
cli
dec
add
mov
and
mov
mov
or
lods
xchg
cli
lret
or
sub
rorl
pop
and
mov
inc
test
mov
rcl
xchg
dec
mov
dec
negl
dec
pusha
or
xor
mov
outsl
xchg
gs
out
mov
call
xchg
insb
jb
call
popf
cltd
mov
mov
push
mov
push
in
dec
pop
lret
data16
in
sbbl
test
out
mov
scas
cmp
xchg
fstps
jecxz
xchg
movsb
ffree
movsl
mov
lods
fmuls
adc
nopl
xchg
arpl
ja
push
or
js
add
cltd
or
fwait
enter
fstl
cmc
and
loop
movsb
and
mov
rcl
ds
push
lds
dec
out
dec
or
ret
out
pop
shlb
scas
sub
in
jmp
push
sbb
jne
je
xchg
xor
push
adcb
and
rorl
scas
jns
pop
in
out
in
jle
stos
hlt
sbb
xchg
mov
inc
jae
fcmovb
in
xor
in
enter
sbb
in
fadds
leave
scas
ss
pusha
sahf
ffreep
pushf
mov
test
or
mov
pop
mov
mul
push
cmp
push
mov
xchg
lahf
decb
scas
ljmp
pop
mov
fs
xchg
or
arpl
mov
and
mov
pop
sahf
mov
int3
cli
insb
fildl
mov
push
adc
cmc
lcall
inc
sti
jno
cmp
xor
and
sbb
in
sub
cmp
outsl
jmp
sahf
inc
cld
xchg
mov
and
in
dec
sub
push
xor
sbb
es
inc
call
adc
mov
push
xor
aad
cmp
cmp
popa
mov
push
cmpsl
push
xor
fistps
push
or
aad
xchg
cmp
adc
mov
xchg
and
lods
lds
cli
lea
dec
ljmp
shld
ds
js
int
mov
loope
or
outsl
femms
add
mov
xchg
mov
shll
fbstp
and
mov
out
stos
add
scas
xor
mov
in
hlt
xor
icebp
aad
scas
idivb
leave
cmpb
push
mov
mov
or
inc
mov
sbb
pushf
inc
and
jg
adc
inc
rep
pop
popa
jge
adc
xchg
push
lds
xor
jb
out
push
add
mov
xor
rcrb
inc
cmp
out
insb
pop
and
int3
add
sbb
jo
rcrl
insb
xor
test
pop
pop
sub
iret
sub
shlb
push
dec
push
les
sub
mov
in
addr16
xchg
rorb
adc
test
icebp
and
sub
or
or
sub
adc
push
cld
addb
aaa
jmp
scas
xor
mov
int
pop
inc
dec
fidivrl
add
jae
jge
sbb
xchg
mov
xor
pop
adc
jecxz
outsl
addr16
inc
and
push
rcrb
insb
xchg
andl
push
dec
vmovaps
mov
into
mov
add
xchg
jnp
jl
shll
mov
mov
fildl
test
mov
test
dec
jmp
pop
scas
xchg
or
int3
sbb
push
sahf
inc
fidivrl
ljmp
xchg
scas
sbb
jmp
lea
sti
dec
jl
repnz
sbb
shll
fstl
push
jno
fldz
out
leave
aas
inc
nop
mov
bound
and
jmp
inc
jbe
ljmp
ljmp
outsl
jnp
fs
sbb
repz
push
nop
inc
jg
sub
icebp
cld
push
dec
cmpsl
adc
pop
inc
call
loope
cli
rolb
fldt
cmp
dec
sti
add
adc
scas
cmpsb
je
dec
jo
popf
push
mov
mov
sbb
push
jmp
or
sub
xor
fists
lret
outsl
cmp
iret
sbbb
mov
scas
lods
xchg
aaa
push
mov
and
xchg
pop
roll
mov
sbb
test
jecxz
pushf
jne
std
or
mov
lods
and
lods
mov
push
add
ds
cmc
popf
mov
aaa
mull
fists
push
dec
or
mov
sub
mov
stc
lock
and
pop
jbe
and
stos
pop
mov
sbb
gs
decb
psrlw
mov
popf
popf
lods
lock
cmc
scas
pop
add
push
callw
or
push
and
inc
sbb
dec
dec
fildll
test
das
jmp
fcomip
fdivr
jl
mov
dec
push
sbb
sar
cmp
in
dec
and
mov
sub
cmp
pop
cmp
pop
rep
lret
sahf
xlat
mov
adc
jo
dec
jmp
cmp
adc
push
mov
lods
jb
fsubrs
icebp
aaa
push
push
fcmove
int3
js
dec
lret
in
popf
mov
stos
movsb
add
aaa
adc
cmp
rcrl
jle
lret
leave
jo
pop
sti
dec
shr
notb
xchg
dec
jp
shlb
add
mov
xchg
inc
imul
mov
cmp
cmc
mov
or
repz
adc
aad
addb
mov
lea
sub
aam
test
pop
fisubs
cmpsl
xor
and
aaa
repz
inc
adc
pop
sarb
test
dec
push
fisubrl
js
or
roll
xor
je
xor
ret
cmp
cmpsl
add
insl
lock
push
ret
lds
mov
cmp
fisubs
cmpsb
mov
popf
mov
push
adc
add
or
cmp
negb
fiadds
lahf
cli
fstpl
mov
mov
xor
lcall
dec
jl
cmp
mov
push
out
lret
int3
addr16
dec
xchg
in
lods
dec
mov
out
add
mov
insb
loopne
mul
jge
sbb
mov
fldt
pop
dec
leave
subb
xchg
loop
and
ljmp
xor
mov
adc
std
sub
adc
inc
insb
pusha
mov
js
lods
dec
mov
out
push
cld
stos
int
mul
sbb
ds
jle
outsl
mov
fs
test
add
inc
or
mov
in
aaa
pop
push
push
das
stc
fldcw
jb
xchg
or
mov
out
int
fsubrs
cld
fimull
mov
dec
jnp
add
jno
ss
dec
pop
sbb
dec
movntps
and
mov
scas
pusha
cmc
adc
cmc
cmp
hlt
mov
adc
add
mov
das
aaa
inc
movsl
in
je
ret
cmp
in
xchg
pop
xchg
in
int3
pop
dec
aad
cltd
test
mov
bound
mov
xchg
inc
cld
fsubs
xor
out
xchg
mov
dec
and
ljmp
push
subb
int
mov
iret
and
arpl
add
jp
js
jo
les
dec
mov
push
mov
test
outsl
xor
loop
cmc
popf
aad
and
adc
sub
jmp
cmpsl
int3
mov
mov
xor
or
mov
gs
into
fnsave
mov
inc
add
sbb
inc
pop
sarl
jns
pusha
mov
arpl
gs
mov
inc
lock
mov
adc
mov
testb
pop
push
sbb
push
adc
leave
stos
sub
push
sub
sub
in
test
xchg
mov
jecxz
adc
xlat
dec
gs
add
xchg
ljmp
jnp
sub
mov
pop
sbb
add
xor
bound
mov
inc
cmp
stos
inc
lock
and
jb
push
xor
out
sub
es
leave
inc
mov
clc
push
add
jo
mov
mov
test
push
shlb
fcomps
adc
les
insl
cmpb
mov
lds
xchg
rolb
data16
dec
jge
mov
pop
lods
pop
fisubs
inc
out
xor
das
xrelease
sub
jno
movsb
inc
or
imul
test
imul
adc
aad
roll
pushf
sbb
xchg
jb
fisubrs
cmc
xchg
js
cmc
mov
mov
cmpsb
notb
sub
pusha
jecxz
pushf
arpl
add
cld
xor
mov
push
cmp
ljmp
nop
daa
dec
lods
inc
jnp
es
inc
lods
jl
lahf
xor
or
sahf
mov
fstpt
xchg
mov
std
je
nop
mov
test
int3
fnstcw
data16
in
pop
dec
xchg
pop
nop
in
into
cmp
adc
aam
adc
movsl
push
enter
stos
out
pop
cmpsb
pop
inc
in
mov
clc
popa
push
dec
scas
dec
sbb
pop
xchg
inc
ffree
xchg
sub
fnstsw
adc
hlt
sarl
cltd
aam
js
orb
mov
xor
push
lahf
das
jge
rcrl
jo
or
movsb
repz
pushf
cld
or
jmp
jne
cmpb
mov
jbe
addr16
dec
std
repz
dec
push
test
dec
sub
test
ret
stos
push
std
jg
clc
mov
lret
les
sub
dec
out
out
out
les
inc
push
mov
xor
in
mov
jns
xor
jo
filds
inc
sub
and
aam
xchg
add
mov
inc
daa
mov
pop
mov
xchg
int3
nop
add
ljmp
insl
int3
out
rorb
outsb
prefetch
jae
cmp
sti
cmp
xchg
negl
sub
pop
mov
adc
push
xor
sbb
mov
rcrl
push
fs
iret
lea
cld
int3
xchg
lods
in
inc
cmp
xor
mov
inc
sahf
and
ficomps
sub
mov
aad
sar
inc
test
adc
arpl
adc
and
repz
sahf
mov
xchg
cmpsl
push
sbb
pop
call
dec
adc
jle
insl
negb
pushf
push
adc
je
out
pusha
push
jb
mov
fldl
sbb
ds
inc
scas
jp
inc
cwtl
cmc
aad
lock
out
push
bts
cmp
cwtl
movsb
xchg
stos
sbb
test
sti
sub
mov
negl
iret
jp
std
or
aad
and
and
sbb
fsts
inc
ja
add
push
mov
jecxz
mov
sub
ss
pop
jl
adc
lahf
mov
adc
and
imul
data16
or
ret
fst
fbstp
je
test
or
stc
test
in
mov
in
insb
jl,pt
push
shlb
cld
xchg
repz
sbb
cli
cwtl
mov
arpl
jl
mov
pop
or
loope
lret
jp
mov
je
pop
outsl
fstps
inc
inc
std
mov
xor
jbe
sub
loope
je
xchg
and
add
lcall
call
xchg
xor
outsb
jb
sub
xor
lret
movsb
mov
sbb
insl
mov
lret
adc
or
sub
into
or
shlb
iret
adc
xor
js
shlb
mov
imul
outsl
mov
int3
addr16
sub
ret
aaa
dec
xor
push
mov
out
out
mov
popf
mov
lcall
sub
das
and
inc
jmp
and
imul
xchg
and
cmc
pop
sahf
xchg
adc
clc
pop
dec
xchg
sbb
sbb
inc
popf
mov
push
in
cmpsl
mov
adc
insb
loopne
clc
lea
bound
mov
in
add
dec
loopne
test
or
pop
int3
sub
sub
xchg
cwtl
clc
inc
insl
fldlg2
fwait
cld
sub
mov
push
push
dec
and
adc
pusha
dec
xor
aam
mov
ret
addl
cltd
cmp
mov
hlt
shrl
add
movsb
and
int3
lock
nop
rcl
sub
push
or
xor
call
outsl
lods
ljmp
call
je
out
cmp
lock
mov
mov
filds
jge
into
xor
or
insl
mov
pop
outsl
sbb
mov
call
fists
cmp
lret
shlb
ss
inc
je
cli
and
shl
adc
inc
gs
jnp
sbb
vminsd
mov
jmp
mov
adc
cs
vxorps
jno
mov
xor
dec
aaa
fsubs
movl
jno
je
fidivs
lock
movsb
xor
repz
cmp
xchg
cmc
push
repz
sub
mov
mov
xchg
jne
and
xchg
fsubrp
loope
insb
mov
mov
push
mov
addb
push
mov
aad
lahf
inc
jae
push
lods
test
xchg
or
out
sub
jecxz
cmp
sbb
clc
xor
and
loope
dec
pop
jle
or
arpl
test
jmp
movsb
loope
stos
and
out
push
jl
imul
add
je
sbb
pop
dec
push
push
loopne
repnz
jns
insb
es
insl
xor
dec
push
cmp
pop
adc
fldenv
sbb
add
repz
lods
sub
loop
pop
or
and
sti
pop
adc
mov
xor
cmp
in
push
test
pushf
ljmp
lret
xchg
xor
dec
cwtl
and
fldenv
arpl
jbe
in
mov
mov
fimull
adc
xor
lret
jne
les
and
ljmp
and
loope
sbb
fwait
pop
mov
mov
adc
lods
cmpb
sbbb
jns
movb
aam
dec
xor
in
jbe
adc
xor
sarl
inc
mov
outsl
inc
xchg
sub
mov
cmp
popf
jne
jge
adc
add
lret
lret
loope
popl
push
mov
dec
mov
pop
mov
mov
mov
js
shrb
sbb
loope
arpl
out
fisttps
lds
mov
repz
adc
fs
ds
mov
or
cmpsb
cmp
or
xchg
adcl
call
pushf
scas
arpl
fnsave
loope
sti
and
mov
scas
cltd
test
pop
mov
cli
lret
inc
cmp
lods
movsb
lahf
repnz
mov
xchg
inc
mov
decl
fs
scas
out
xor
ljmp
and
popa
sahf
ret
mov
js
jb
sub
js
mov
push
outsb
mov
jne
jmp
mov
imul
jg
dec
lods
ljmp
scas
jne
inc
addr16
inc
add
pop
cld
fisubl
popa
std
loopne
std
fs
mov
icebp
push
adc
add
jb
ror
in
pusha
shl
sbbb
xor
sbb
dec
bound
mov
adc
push
or
cmp
jecxz
cltd
mov
mov
hlt
fldcw
jbe
or
xor
shr
lret
sbb
inc
fildll
or
push
subb
lcall
movsl
scas
push
clc
jecxz
or
adc
sub
inc
sbb
ret
mov
mov
push
std
xchg
or
cmp
add
dec
adc
scas
and
shl
scas
mov
test
add
mov
push
stc
inc
jge
shrl
into
pop
inc
scas
add
shlb
mov
push
pushf
clc
xchg
test
xorb
aaa
mov
dec
xor
outsl
mov
mov
fldcw
cmp
nop
or
in
cmpl
adc
cmc
out
pop
add
pop
loopne
jno
push
in
add
imul
xchg
pop
xchg
inc
fimuls
sub
mov
ficoml
lahf
adc
add
jbe
hlt
push
sub
inc
push
add
fwait
lea
cli
call
push
dec
mov
pushf
xchg
jno
jmp
or
mov
fs
inc
out
ret
xchg
fcmovb
push
sbb
jne
or
jmp
and
jno
sub
popf
jb
jecxz
add
out
or
inc
test
sti
roll
dec
mov
xor
enter
test
insb
aaa
and
test
inc
fdiv
xchg
mov
gs
sub
popf
mov
or
ss
cmp
aam
je
mov
push
mov
sbb
push
and
in
mov
or
sub
and
cltd
lret
or
mov
es
gs
pushf
dec
jg
scas
js
cs
pop
repz
add
lcall
xchg
sahf
dec
fbstp
loope
sub
test
fdiv
fisttpl
repz
shlb
loopne
iret
mov
or
pop
mov
testb
mov
xor
mov
xchg
insl
dec
push
stc
push
test
push
fiaddl
mov
inc
repz
out
sti
sbb
shl
dec
push
mov
fsubs
ja
dec
mov
fcmovb
in
mov
add
xor
mov
push
imul
in
dec
outsl
mov
add
movsl
es
adc
int
push
mov
jmp
repz
dec
or
adc
roll
mov
mov
dec
jmp
imul
shlb
ljmp
or
shlb
fsub
sub
ds
aad
push
mov
pop
mov
inc
in
push
or
cmpsl
hlt
jecxz
pop
pusha
das
or
sbbb
loope
ror
cld
fsubs
es
push
clc
test
mov
push
xchg
add
rol
rolb
fs
and
scas
adc
mov
lret
enter
push
fnstcw
mov
or
out
ret
popf
add
pop
decb
jmp
inc
aad
test
add
xor
andl
adc
lock
stos
decb
mov
dec
mov
into
aam
sahf
push
lods
or
xchg
cmpsl
stc
sub
push
adc
or
sbb
aad
cwtl
loope
lret
std
or
clc
cwtl
xchg
add
cli
sbb
push
aas
imul
inc
and
lods
pusha
rol
dec
and
pop
arpl
popf
lea
push
sub
mov
in
rol
hlt
mov
std
dec
rolb
jb
rep
cmpl
adc
inc
mov
add
sti
xchg
xchg
mov
sahf
push
lcall
pop
lcall
ret
add
cmp
iret
aaa
jae
sbb
lds
dec
jle
inc
rol
shrl
daa
shrl
fisubl
sub
fs
enter
mov
mov
test
sbb
push
ss
push
leave
sti
loope
add
inc
es
jne
jb
mov
inc
stos
imul
pusha
cmp
jne
inc
mov
jmp
xor
test
es
subb
fisubl
mov
add
into
pop
aam
clc
pop
dec
cltd
or
cmp
stos
ss
aas
fists
adc
rcrb
push
dec
or
orl
mov
or
into
sub
gs
mov
mov
bound
push
insl
cmp
xor
jp
mov
in
add
dec
mov
js
test
cmp
cmpsb
pop
xorl
movsb
mov
pop
sbb
mov
subl
xchg
sbb
xor
lea
ret
pop
aad
cltd
int3
dec
mov
mov
jmp
ret
mov
loope
insl
mov
mov
jo
adc
fwait
mov
addl
or
sbb
xchg
scas
sti
add
xchg
inc
in
pusha
sahf
and
mov
xchg
outsb
pusha
cmp
xchg
ljmp
es
fcomip
jge
push
jns
addr16
pushf
das
jns
push
ljmp
inc
sarl
inc
push
add
aas
cmc
ss
stc
mov
mov
inc
and
mov
je
push
in
in
xchg
subb
mov
push
aas
sbb
jo
sbb
ds
sub
imul
fldl
sahf
and
pushf
in
pop
movb
pusha
mov
xchg
shll
xor
push
aas
mov
xchg
push
or
sahf
cmpsl
outsb
and
movsb
jnp,pn
divl
clc
fs
pop
lcall
cmpsb
mov
mov
test
ret
ja
pop
mov
mov
sbbb
std
js
cmpsl
scas
or
mov
cli
push
in
fbstp
hlt
cwtl
inc
push
sti
add
jnp
into
or
mov
icebp
fucomi
xor
movsl
pop
test
shl
push
dec
sub
or
jnp
in
push
insl
sub
inc
push
lds
cld
pop
lds
xchg
xchg
ljmp
jecxz
dec
inc
pop
and
add
icebp
mov
rolb
pusha
nop
rolb
movsb
push
mov
adc
mov
push
dec
stos
pop
jecxz
ljmp
inc
push
dec
rclb
add
sub
jg
insb
mov
cmp
jl
adc
mov
outsl
aaa
cltd
mov
mov
sti
mov
mov
int
jmp
pushl
cwtl
cld
or
mov
shlb
icebp
push
orb
dec
jb
mov
bound
inc
mov
test
lods
xchg
inc
cmpl
lods
jmp
and
and
stos
in
xchg
cmp
sbb
test
xor
dec
mov
inc
sub
imul
add
adc
add
dec
popf
sbb
xchg
inc
push
fldl
dec
mov
cmp
dec
hlt
xchg
movsl
into
aas
pop
mov
loope
shr
ljmp
dec
sbb
loope,pn
pop
pop
xor
in
ja
mov
mov
int3
fiadds
in
jmp
rolb
stc
scas
loopne
mov
add
mov
das
test
mov
lock
dec
sbb
imul
jp
imulb
shrl
xlat
jecxz
and
fsubs
dec
fmuls
inc
ss
movsl
mov
mov
aaa
paddsw
les
jge
pushf
gs
mov
xchg
outsl
sub
cmp
mov
lahf
add
or
fwait
jo
sub
cmc
adc
xor
out
mov
and
inc
mov
gs
and
bound
or
jne
push
add
xor
in
adc
enter
push
in
and
ss
mov
mov
je
mov
adc
insl
out
pop
mov
xlat
sbb
xor
mov
mov
and
mov
data16
fs
ja
in
cmp
lret
mov
pop
inc
jp
xor
jge
shl
push
jecxz,pn
lret
push
xchg
cli
int3
jl
outsl
sbb
xchg
cmp
mov
cmp
nop
add
aas
cmp
pop
add
mov
cmp
mov
enter
leave
stos
out
jo
push
mov
cmp
and
cmpsl
jb
cmp
jge
ja
stc
mov
lcall
mov
cmp
fs
rcrb
cmp
mov
movsb
movsl
push
fs
repz
ret
pop
stc
imul
into
outsb
mov
popa
aad
lcall
pop
into
dec
cmpsb
cmp
or
sub
xchg
div
and
imul
mov
addr16
jp
sub
adc
lods
movl
es
aaa
scas
cli
and
push
ss
mov
les
jmp
test
inc
out
test
shll
loope
pushf
and
popf
dec
imul
or
jne
fnstcw
mov
fisttpll
jp
pusha
faddl
push
xlat
pop
jne
and
pop
or
xchg
mov
repz
mov
in
push
insb
out
imul
fdivl
pop
aaa
pop
testl
inc
xlat
push
cmc
cmpsl
mov
jno
rolb
pop
cwtl
mov
jb
addr16
les
add
jns
dec
ds
enter
mov
fcoms
inc
jae
lods
jbe
jg
inc
aaa
stos
push
mov
cmp
push
pop
int3
dec
testb
daa
sbb
push
cmp
cmp
jae
icebp
push
ljmp
push
mov
mov
rcrb
mov
iretw
lahf
xchg
push
loopne
mov
sub
mov
add
push
sbb
aas
cmp
fildll
in
sbb
push
lock
xor
out
fidivrl
lea
mov
xchg
adc
mov
out
push
mov
sub
loop
fistpll
xlat
dec
test
add
inc
sbb
subb
add
sub
fs
push
lds
mov
idivl
pop
fcmovne
out
pushl
push
mov
mov
fwait
mov
test
fninit
lahf
xchg
fs
lea
aam
push
xchg
arpl
pop
sub
sub
dec
xchg
jno
adc
sub
imull
pop
xchg
insl
sub
sbb
fldcw
inc
xor
fbld
rorl
adc
out
mov
rcr
stc
push
adc
sbb
scas
pop
dec
subb
stc
pop
jmp
push
fwait
aam
repnz
cltd
loope
fsubl
aas
inc
mov
sti
cli
mov
mov
sbb
outsl
sub
mov
ss
das
jne
outsl
pop
sbbb
mov
mov
sub
xchg
and
jns
packsswb
mov
sub
popf
xchg
fs
cwtl
pop
inc
out
push
sbb
rorb
or
rclb
adc
ret
cmpsb
call
adc
add
popa
aam
push
mov
fstpl
fidivrl
rorl
pop
in
imul
push
aad
test
mov
lea
bound
je
inc
jnp
cwtl
out
dec
and
xor
bound
ficompl
data16
inc
mov
push
testl
xlat
dec
lock
fs
jl
dec
arpl
push
jp
mov
aas
hlt
xlat
xor
js
mov
gs
adc
mov
mov
or
mov
cmp
jmp
mov
mov
adc
gs
or
inc
jle
repnz
inc
aad
pop
and
iret
cmp
xor
test
ror
icebp
inc
lock
pop
jl
jnp
inc
dec
pop
mov
pop
mov
movsl
sbb
insl
sub
inc
movd
inc
mov
xor
out
movaps
fs
jne
jge
rcrl
add
pop
lea
decl
dec
xchg
xlat
xor
xchg
push
enter
push
inc
sbb
mov
inc
cwtl
loope
loop
sahf
shrb
adc
jg
jne
imul
push
frstor
xchg
shrb
and
js
imul
aad
mov
outsl
pop
and
add
rcrl
push
sbb
cmc
sub
or
pop
inc
arpl
mov
dec
stos
adc
and
icebp
icebp
negb
add
scas
out
jl
cwtl
mov
cmc
push
jo
psrlw
push
fistpll
pop
lock
gs
jg
hlt
push
mov
dec
pop
jl
not
cmp
in
call
in
je
cli
push
test
push
data16
imulb
inc
xchg
jl
shll
jecxz
jnp
inc
sub
jmp
clc
and
push
mov
je
ss
mov
jo
dec
rolb
sti
mov
ja
cmpsl
push
aad
dec
stc
xor
adc
sbb
xor
out
pop
and
sub
ljmp
cmpb
sub
xchg
iret
push
mov
aaa
aam
mov
or
jo
inc
sub
loopne
or
pushf
mov
cmovns
push
xchg
fsubrs
xchg
push
lcall
xor
stos
dec
sbbb
dec
adc
add
popa
stc
into
mov
xchg
add
jmp
adc
shl
lret
sub
int
sbb
mov
test
pop
dec
movsb
dec
cmp
js
in
or
cmp
cmp
mov
add
arpl
shrb
movb
imulb
pushw
adc
cmp
xor
icebp
es
cmp
pop
cmpl
jbe
pusha
std
stos
leave
jge
sub
or
cmpsl
pusha
test
cmove
xor
push
and
jbe
outsb
jmp
ljmp
adc
fistpl
int
inc
jb
sub
int3
pop
in
rol
pop
mov
cmc
inc
jno
hlt
stos
gs
call
jns
pop
push
xor
in
aas
sarb
ljmp
or
test
or
add
or
dec
xlat
repz
dec
ficoms
dec
xor
movsl
outsl
cmc
aaa
and
sar
and
mov
test
sbb
ds
mov
jp
adc
push
inc
mov
sbb
test
sbb
rdmsr
inc
pop
adc
cld
mov
cmp
mov
jecxz
jge
aam
mov
popa
push
fcoms
clc
mov
sbb
in
sub
pop
repz
icebp
rolb
pushf
dec
lret
nop
shrl
bound
mov
sub
aaa
sbb
push
cmp
fists
sbb
add
inc
lods
dec
fnop
xorb
fwait
mull
int
hlt
mov
std
imul
stos
inc
dec
push
jg
popf
loop
mov
mov
ret
jecxz
in
icebp
or
mov
mov
adc
iret
adc
ljmp
imul
int3
sbb
or
mov
adc
lods
push
ret
in
roll
pop
dec
daa
cmpl
push
dec
cmp
mov
jecxz
jg
inc
fnsave
pop
cs
imul
sub
push
pop
push
jo
cmpsb
ljmp
das
pop
fld1
adc
es
jp
cmp
jne
ret
or
jns
enter
cwtl
dec
jbe
mov
rolb
jecxz
icebp
and
inc
xor
addb
imul
aam
cmp
out
icebp
fdivrs
lea
inc
xor
pushf
add
repnz
cwtl
push
sbb
mov
out
mov
addl
xchg
stos
add
aas
jmp
je
testl
pushf
int
pushf
js
mov
cmp
lret
cmp
mov
jno
ret
pop
aaa
add
push
mov
lea
jmp
ja
push
ljmp
cmc
mov
fdivr
ficomps
xchg
mov
and
fwait
ret
or
and
int
inc
pop
mov
pop
and
mov
stos
pop
pusha
roll
jb
lcall
xlat
sbb
or
jae
inc
mov
in
mov
popa
out
in
cs
addr16
pop
jge
hlt
sar
and
push
lock
xor
adc
ret
jnp
out
sbb
xor
mov
jns
and
fistps
ja
out
in
xchg
mov
jnp
pop
scas
std
xchg
or
jle
aam
pop
icebp
fld
ss
lahf
call
or
sti
sub
data16
leave
xchg
or
test
cwtl
add
fdivs
pop
mov
pop
lret
je
clc
pushf
push
sahf
call
sbb
cwtl
movsb
xchg
and
mov
push
sbb
cmc
mov
mov
jne
idiv
and
jb
lods
jg
std
mov
rolb
movsl
dec
cmp
jmp
mov
cltd
fnstenv
shl
jns
add
jb
in
push
dec
cld
enter
jne
int
xor
aam
sahf
lock
dec
loop
or
mov
dec
or
lods
sbb
mul
adcl
pop
hlt
push
mov
cmc
sbb
stos
comiss
push
in
clc
xor
fidivs
mov
fnstcw
xor
jnp
movsl
or
gs
stc
mov
mov
dec
cli
and
mov
adc
popl
stos
repz
cmpsl
xor
shl
lock
mov
add
mov
mov
inc
aad
and
out
iret
pop
sbb
ficomps
outsb
sar
outsl
insl
mov
inc
sbb
and
notl
repnz
xchg
or
push
repnz
movsb
aaa
and
cltd
mov
push
sub
ss
vcmpsd
stos
xchg
adc
xchg
xor
mov
mov
mov
mov
mov
dec
xchg
sub
roll
mov
or
xor
and
mov
lcall
or
push
mov
lods
xchg
call
sbb
das
scas
push
or
scas
push
mov
cwtl
clc
loope
xchg
out
push
insl
lods
dec
pop
push
sbb
jne
mov
mov
cmp
je
xchg
push
clc
jbe
shrl
insl
sub
or
or
xor
fwait
xor
push
cwtl
imul
inc
mov
pop
and
push
inc
push
popf
sahf
stos
and
jmp
jmp
xor
jne
roll
movsb
add
out
add
mov
and
push
jo
inc
cmc
lods
and
sub
lock
je
fidivs
shl
add
mov
push
xorb
mov
pop
fmuls
ljmp
sub
mov
sub
cld
push
dec
cmp
jg
pushf
push
inc
loopne
adc
ds
aad
jo
bound
pop
movsl
jb
outsb
loope
lds
or
repz
add
add
mov
test
inc
fs
hlt
outsl
dec
fadds
sti
cmp
jecxz
mov
sbb
cmp
xchg
stos
and
mov
add
add
push
leave
xlat
jno
or
sub
or
or
cmp
xor
xchg
mov
jle
jl
bound
pusha
fbstp
loope
add
sub
xor
adc
inc
sub
jg
sbb
ror
xor
dec
jl,pt
imul
daa
sub
jne
int
jge
push
in
mov
out
cmc
aad
jg
pop
cld
inc
mov
shll
mov
push
mov
aam
mov
lcall
outsb
pop
test
jo
cmp
push
and
in
mov
test
cmp
in
dec
jnp
mov
xchg
cmc
add
cli
fst
jmp
jno
movsl
inc
sbb
movsl
inc
xchg
cmpl
mov
pop
add
adc
mov
lret
dec
dec
sarb
push
push
stc
mov
add
mov
imul
dec
xor
into
push
into
nop
mov
insb
jmp
jae
pusha
push
pop
repz
sbb
rorb
and
sbb
and
xlat
test
adc
loope
mov
imul
subl
pusha
mov
popf
outsb
ja
lcall
mov
test
loopne
cmp
test
nop
int3
daa
imul
mov
pop
xorb
jbe
sbb
push
cld
add
mov
sti
sbb
mov
dec
scas
push
mov
in
ror
loop
gs
xor
gs
adcl
pop
xor
mov
pop
adc
lods
iret
adc
cmp
adc
rorl
add
repnz
adc
jns
lods
cwtl
mov
or
sub
call
dec
mov
jp
adc
mov
fs
loopne
adc
fidivrl
jmp
pop
test
stos
push
ret
push
or
inc
pop
inc
sbb
mov
xor
rcll
imulb
xchg
mov
jnp
cmpsl
inc
or
xchg
addl
push
sbb
dec
ficoms
mov
stc
mov
fwait
cmp
jge
xor
or
sub
sbb
mov
inc
xor
mov
xchg
and
rcrl
or
cltd
fsubrl
lahf
dec
push
rcrl
mov
push
mov
jo
ret
push
or
idivl
xor
pushl
lock
aam
push
xor
mov
std
jbe
aad
out
push
pop
add
adc
loop
cli
mov
sub
inc
addb
xlat
das
cli
jl
dec
push
das
xor
add
lcall
mov
outsl
fwait
pop
sub
push
and
cmp
push
xchg
jo
cmpsb
fldenv
and
add
jns
lods
jl
nop
ret
fisubs
mov
insb
lahf
js
pop
divb
fmuls
mov
mov
push
inc
push
dec
xchg
shrl
xchg
js
jge
je
repnz
icebp
in
aas
or
dec
adc
sbb
jp
pop
out
sub
imul
jae
in
in
lods
pop
rorl
and
je
clc
xchg
mov
inc
scas
inc
cmp
xchg
add
stos
jns
jmp
imul
movsl
cwtl
and
dec
jp
cs
or
cmpsl
mov
xchg
insb
jb
imul
xor
aaa
jmp
shrb
mov
add
sbb
inc
xchg
jecxz
in
fwait
cwtl
ret
in
push
arpl
sbb
mov
ret
or
xlat
loope
xchg
adc
mov
fs
jle
fcompl
jno
ffreep
call
pushf
jo
cmp
mov
iret
in
or
push
lock
jge
out
popf
sbb
es
insl
cmp
lods
add
xor
repz
pop
hlt
test
pop
jle
cltd
insl
pop
inc
nop
ds
add
in
push
outsl
cltd
sub
sbb
push
mov
and
push
in
add
imul
ret
rcrl
into
cmpsb
pop
dec
xlat
jae
in
xchg
pushf
testl
adc
imul
jp
mov
mov
mov
ds
and
or
loope
push
mov
inc
push
jge
call
iret
and
testl
adc
int
push
call
clc
imul
loopne
test
add
scas
fsubl
cld
jo
adc
add
int3
gs
jle
mov
jg
pushf
jb
inc
dec
fucomi
imul
lcall
mov
sbb
cmp
cmp
mov
jg
icebp
ljmp
neg
cmpsb
repnz
int
sub
bound
jbe
dec
cmp
iret
mov
jecxz
adc
adc
in
addr16
aam
ret
push
or
movsb
jmp
adc
jmp
sbb
icebp
adc
mov
in
lret
and
out
fbstp
aam
mov
add
cmp
inc
sub
sub
loop
push
cmp
popf
jb,pt
out
pop
test
jns
sub
gs
ficomps
cmp
mov
call
add
or
sbb
hlt
dec
inc
xchg
loopne
mov
inc
loop
mov
aad
ret
pop
sub
inc
cmp
test
xchg
inc
subb
inc
popa
mov
adc
mov
mov
push
cld
lods
or
faddl
mov
push
cmpsl
ret
mov
in
jbe
loope
mov
jge
outsb
jg
sub
lock
dec
inc
lods
mov
dec
dec
addb
lea
aas
testl
fists
ss
mov
mov
repz
bound
pop
test
shrl
imul
pop
mov
stc
loop
xor
test
in
push
pop
lret
repz
sub
dec
cmp
inc
test
fisubrl
sahf
sub
cmc
aaa
lret
add
mov
sbb
pop
adcb
push
stos
mov
pop
imul
jbe
shlb
hlt
or
dec
pop
push
data16
lods
cmpsl
into
dec
adc
jno
jle
bound
cmc
fsubrp
xlat
pop
mov
adc
lea
mov
out
es
push
push
out
xchg
bound
subl
sti
inc
dec
cltd
xchg
cmp
bound
adc
inc
cmp
or
jnp
and
push
out
adc
mov
mov
cmp
in
loop
lds
out
xchg
xchg
test
jns
arpl
xor
cltd
dec
add
mov
xchg
fst
scas
faddl
jmp
cmp
test
jns
hlt
insl
inc
mov
bsr
popa
cmpsl
xorl
jb
ja
jmp
or
fcomi
dec
jb
cli
es
mov
pushf
test
push
mov
bound
std
aad
add
pop
out
fdivrs
sub
inc
mov
mov
mov
dec
cmp
and
fildll
sbb
push
mov
dec
inc
enter
and
push
cmp
sub
inc
adc
pop
or
xchg
arpl
shll
in
scas
das
cwtl
lcall
rcl
arpl
jo
add
pop
or
in
pushf
int3
out
hlt
push
mov
xchg
sti
sub
and
fisttpl
cltd
xor
inc
push
jbe
cmp
ds
mov
cmpb
cs
sub
cmp
or
pop
in
mov
xchg
and
xchg
fwait
in
pop
daa
sub
xchg
mov
sbb
movsb
sbb
and
imulb
fcompl
fwait
arpl
mov
or
sub
mov
fsubr
and
lret
ret
xchg
mov
add
insl
pop
fcompl
cmc
dec
sub
or
inc
in
das
cwtl
stc
ret
rclb
sbb
imul
xor
mov
shl
inc
ljmp
aad
or
jb
cltd
mov
push
fs
lahf
add
ss
sub
mov
jmp
int
sub
jmp
js
sub
pop
cmp
rcrb
gs
push
test
mov
push
out
lahf
mov
or
mov
pop
sbb
dec
je
aad
cltd
inc
daa
lods
cmpsb
xor
cmc
addl
jge
ja
pop
test
xor
sahf
out
mov
or
les
sbb
imul
and
add
adc
mov
dec
inc
mov
cwtl
mov
push
mov
ljmp
jmp
gs
mov
ficoms
sti
and
dec
mov
lock
adc
inc
iret
mov
push
mov
cwtl
jp
push
insb
inc
aam
fdivrp
cmp
cwtl
lret
in
jmp
xchg
outsl
xchg
pop
pushf
cld
clc
sahf
fisubrs
loop
movsb
ret
pusha
mov
out
out
xor
mov
adc
pop
sbb
leave
xchg
xor
loope
sub
inc
xorb
test
xor
or
roll
jnp
and
aad
call
push
mov
jne
or
fsub
mov
pop
js
mov
imull
dec
xlat
insb
adc
adcb
xchg
sub
jecxz
mov
push
mov
fisubs
mov
in
stos
add
pop
in
mov
insb
and
xor
push
test
es
stos
out
jb
bnd
jecxz
mov
mov
lcall
scas
dec
jb
cmp
clc
fimull
fidivl
push
add
jle
jnp
push
in
ja
mov
inc
stos
test
xchg
lret
mov
into
jno
xor
mov
inc
sbb
add
insl
jmp
cmp
add
int
mov
and
imul
popl
repnz
mov
jne
jl
icebp
shrb
lods
popa
icebp
xchg
mov
push
pop
jge
mov
imul
or
cmpsl
fdivrs
pop
mov
scas
aad
scas
clc
pushf
shll
push
inc
fsubrp
mov
xchg
dec
dec
iret
xchg
mov
repz
mov
jp
mov
push
into
push
mov
sar
and
push
arpl
cmp
push
jg
scas
divb
mov
subb
or
cwtl
aad
loope
lcall
add
cmc
mov
pushf
push
in
ret
add
vmaxsd
xchg
cmpsb
sbb
pop
rcll
or
mov
xchg
push
mov
arpl
cmpsl
insl
ss
push
sbb
ret
in
loop
daa
aad
loope
cwtl
rcll
dec
hlt
add
lret
bound
adc
push
cmpsb
andb
add
insb
or
mov
mov
push
pop
lahf
ficoml
int3
out
xlat
iret
mov
nop
jp
dec
out
dec
add
dec
jge
inc
and
loopne
outsl
jle
adc
cmp
or
imull
xchg
jge
popa
lods
leave
fnclex
push
dec
jp
test
mov
cmp
fs
clc
test
nop
and
add
insb
cmp
xor
add
mov
mov
push
mov
adc
pop
and
aaa
xor
or
repnz
insb
inc
lcall
imul
or
push
rol
add
or
push
sbb
sub
shlb
mov
ret
clc
cmp
stos
sahf
ljmp
cmp
cmp
in
dec
mov
pop
push
mov
inc
sbb
push
xlat
ja
mov
push
pusha
mov
cwtl
mov
mov
xchg
rcl
xchg
pop
imul
lahf
stc
push
shll
enter
cmpsb
lret
push
cmp
shll
ja
jle
jne
les
jecxz
mov
cmpsb
jb
aam
pop
fidivl
ficomps
in
xchg
xchg
mov
loop
repnz
or
aas
xorl
mov
frstor
cmp
loope
and
mov
mov
sarl
into
insl
out
xor
or
xchg
call
lret
outsb
mov
test
or
push
push
mov
addr16
cli
push
insl
sbb
faddl
mov
or
loope
int3
cld
data16
dec
mov
cmp
and
cmp
aas
dec
loope,pt
movsl
insb
mov
and
pop
mov
icebp
cmp
pop
orl
adc
inc
xchg
clc
ret
loopne
lahf
ss
jbe
icebp
sbb
dec
xchg
sbb
mov
mov
dec
enter
lods
test
fwait
popf
xchg
adc
mov
mov
jae
jp
ficoml
pop
xchg
cmpsl
add
cmp
xchg
and
mov
pop
aas
mov
dec
xor
or
pop
scas
mov
call
dec
and
das
ret
cmpsb
push
enter
xbegin
adc
xchg
outsl
inc
xor
or
into
sti
jp
iret
aam
mov
pop
movsb
lret
cmp
xor
lret
pop
imul
cmp
loopne
dec
inc
mov
pop
inc
mov
jmp
in
sbb
sub
mov
in
push
lds
mov
ficoml
int3
test
in
clc
jb
clc
test
mov
leave
dec
lds
push
pop
outsb
pop
loope
inc
add
jmp
mov
cmp
stos
adc
mov
jnp
bound
sub
sbb
push
dec
in
decl
adc
imul
dec
mov
lds
mov
mov
daa
test
fidivrs
and
push
cltd
inc
shll
add
fistpll
mov
in
inc
in
mov
mov
pop
push
xor
xchg
sub
mov
icebp
in
stos
mov
cmc
jae
lock
fucomi
stc
jmp
cmp
push
negb
ja
into
xor
not
push
jge
jmp
mov
xor
cmpsl
pop
push
std
add
adc
mov
inc
sbb
pop
add
mov
mov
pop
jmp
daa
ret
cli
dec
mov
or
mov
and
ret
jb
cmpsb
dec
es
jmp
imul
dec
sbb
or
pop
in
dec
enter
mov
xor
mov
xor
outsb
imul
pop
adc
push
add
add
andb
in
popa
std
adc
push
push
push
movsb
mov
or
insb
test
mov
inc
dec
lods
out
jns
fwait
stos
imul
xchg
mov
xor
cmp
sti
pop
cli
outsl
dec
push
jns
out
int
mov
add
xlat
cmp
inc
pop
mov
sbb
pop
not
jmp
cmp
inc
and
in
loopne
mov
movsb
enter
dec
lret
inc
ficoms
dec
or
and
pop
sub
fs
pop
jno
inc
popa
jno
pop
or
add
in
mov
sub
repnz
popf
mov
sbb
pop
fmul
gs
push
jl
lret
or
icebp
test
vaddsubps
add
lock
jne
stc
xchg
mov
stos
push
es
shr
daa
mov
mov
mov
dec
stos
in
jns
sbb
stos
sub
loopne
sahf
xchg
mov
fisubrs
pop
aaa
pop
jle
sub
jne
xchg
dec
movsb
jb
movl
stc
pop
out
int3
adc
cltd
shlb
push
dec
fsubs
adc
dec
aas
andb
xor
inc
cwtl
fs
adc
in
mov
jae
sarb
adc
add
imul
stos
pop
pop
sahf
push
mov
jmp
lea
or
inc
and
mov
test
out
rorl
pushw
cwtl
push
popa
inc
mov
pushf
lods
mov
ficomps
in
sub
sub
out
fwait
push
push
jg
jno
scas
movsl
shr
std
addb
out
insl
jmp
xchg
addb
leave
mov
pop
imul
and
cmp
clc
xor
xchg
fsubrs
mov
fnstcw
fcomi
pushf
jp
cltd
mov
test
push
shl
inc
lret
and
pushf
sbb
mov
mov
movsl
xchg
imul
jbe
xchg
in
push
rcr
adc
jae
mov
inc
push
dec
out
or
addb
int
imull
mov
dec
sti
mov
push
and
test
es
fisttpll
or
insb
cld
pusha
icebp
jb
movsb
adc
rcrl
pop
and
cmp
test
push
repz
enter
je
mov
jmp
mov
sbb
pop
cs
mov
cmp
mov
lds
addr16
pop
loop
pop
mov
js
std
adc
fistpll
rol
jnp
mov
pushf
mov
xorl
mov
nop
xor
push
aas
dec
roll
jbe
xchg
or
xchg
ljmp
add
insl
gs
adc
xchg
rolb
mov
push
pop
xchg
jmp
scas
xchg
fldl
dec
jno
mov
shlb
xchg
xchg
shll
mov
out
xorb
outsl
mov
ss
xor
mov
xor
xchg
push
shlb
daa
jge
cwtl
stos
inc
cmp
xchg
mov
mov
fcoms
sbb
and
mov
mov
lock
dec
pop
test
mov
xchg
mov
in
rcrl
fwait
insb
jne
xchg
mov
mov
orb
mov
mov
sub
es
xor
xchg
mov
pop
xchg
orb
push
ljmp
sub
loopne
adc
push
inc
inc
scas
lcall
dec
mov
and
test
orl
fcomp
test
xchg
test
mov
push
jbe
xor
push
stc
ficoml
shr
or
mov
jb
pushf
data16
in
aas
sbb
rcr
faddl
inc
lods
mov
mov
and
fs
xor
add
xor
and
xchg
shlb
and
aas
sub
dec
je
xor
hlt
or
and
dec
sub
push
mov
mov
or
popf
lret
mov
or
bound
adc
in
ret
stos
mov
scas
scas
mov
jne
jmp
mov
clc
out
out
lret
das
scas
and
dec
popa
xchg
inc
test
xchg
daa
pop
inc
push
and
roll
sub
mov
cli
pop
mov
sbb
mov
xchg
jo
add
xrelease
jl
out
pop
and
mov
clc
or
sbb
inc
push
leave
aaa
sub
loopne
call
aas
ss
fcomps
stos
push
add
mov
pop
mov
sbb
add
mov
scas
cmpsb
mov
push
xchg
xor
pop
lret
pop
out
daa
mov
sbb
push
mov
testb
int3
ficoml
addr16
pop
push
clc
movsl
xlat
mov
mov
popa
dec
lods
add
fisttpl
sbb
test
mov
sub
push
lods
insb
and
sub
fwait
inc
rolb
mov
push
cmpsb
jns
jbe
push
psrad
adc
js
cltd
popa
jnp
mov
push
pop
xor
mov
push
or
xchg
daa
popf
mov
enter
out
push
xchg
cmp
adc
cs
imul
mov
popa
jmp
out
nop
add
cltd
mov
push
jae
lea
sti
jbe
lods
mov
jmp
cmp
xchg
jl
popf
fwait
dec
clc
adc
adc
cmp
sbb
pop
lods
and
rcrb
jnp
sbb
lret
xlat
mov
xlat
gs
cmpsl
stos
push
jmp
xor
xchg
adc
mull
lret
adc
aad
xchg
jge
sarb
les
int
in
adc
adc
push
mov
jnp
jbe
jle
pop
or
imull
ret
cmp
jl
ss
dec
push
addr16
push
pop
and
es
sbb
lahf
xor
or
ja
pop
push
pop
jnp
push
pop
mov
mov
xchg
lods
cli
insl
mov
xor
lds
out
xor
adc
sarl
xor
inc
mov
mov
iret
xor
and
fucom
hlt
stos
in
xor
aam
popa
mov
mov
outsl
add
cli
xor
popf
fadds
add
jge
pop
or
orl
stos
shll
inc
mov
cld
pusha
notl
xor
daa
mov
lods
stos
mov
ffreep
fdivrs
mov
fnstsw
in
test
fdivp
mov
sti
jle
lret
push
jmp
inc
outsl
xchg
popf
cld
xchg
dec
cmp
xchg
cmp
lods
sbbl
insb
mov
lds
add
sub
and
and
jge
scas
and
popf
mov
les
mov
adc
sub
das
mov
out
cmp
fs
mov
pop
inc
sub
dec
mov
push
inc
fs
insl
inc
add
sbb
mov
ja
icebp
push
pushf
add
inc
push
lret
in
shlb
stos
pop
and
pop
fnstcw
nop
cs
mov
xchg
push
orl
pop
leave
test
pop
rol
mov
mov
push
push
sbb
jne
mov
mov
lret
repz
sub
cwtl
mov
mov
xor
mov
mov
inc
sbb
icebp
neg
addr16
outsl
int3
in
fsubrs
jns
dec
cmp
gs
fwait
out
sbbl
mov
and
pop
mov
sarb
adc
pusha
pop
push
jg
roll
mov
out
add
pushf
lcall
lds
js
cmp
xchg
insb
xchg
jmp
icebp
aas
hlt
ret
xlat
sbb
pop
mov
sub
enter
xchg
test
rcr
mov
jle
jae
mov
mov
adcl
sbb
popf
scas
in
jbe
xor
mov
mov
gs
sti
outsb
shll
gs
jg
push
add
lcall
cwtl
out
xchg
xor
out
inc
pop
fisttps
pop
and
fstpl
jmp
inc
xchg
xlat
inc
push
inc
xor
out
fs
outsl
outsb
mov
es
fisttps
inc
dec
mov
add
ss
xlat
mov
fnstenv
cli
pop
pusha
leave
gs
into
popa
xchg
stc
jp
add
lock
lret
sbb
inc
pop
loope
mov
xchg
lcall
and
mov
mov
sbb
jo
jmp
inc
xchg
mov
movsb
rcrl
adc
cli
aam
out
stos
push
jecxz
clc
cwtl
arpl
jg
or
in
xchg
xchg
nop
push
je
sub
pop
xchg
js
das
data16
jno
into
jae
add
xchg
xchg
in
sbb
jg
fnop
sbb
xor
test
pop
mov
or
sbb
lds
push
sbb
test
lds
daa
negl
and
ja
aad
inc
adc
mov
in
mov
outsl
xchg
gs
xchg
cmpsb
lret
js
push
stos
fwait
cwtl
test
repz
cmpsb
js
insl
int3
es
sub
pusha
jmp
sbb
ljmp
in
sbb
dec
cld
cmp
ds
imul
sbb
rol
rcll
imul
das
pop
add
or
cmp
popf
jne
mov
test
push
fimuls
push
xlat
xchg
lahf
push
ret
cli
aad
dec
dec
testb
adc
arpl
mov
iret
ja
dec
out
jg
pop
rol
cmp
xor
outsb
add
jle
insl
adcl
repz
ret
outsl
lret
add
jbe
mov
or
jae
outsl
loopne
insl
mov
mov
repz
mov
repz
push
repz
xor
fsubp
cmp
out
and
lds
mov
xchg
xchg
push
jb
pop
xchg
sub
lcall
ss
orb
mov
mov
mov
jge
lret
sbb
or
repnz
int3
cmpsb
stos
daa
xchg
mov
notl
pop
sti
arpl
aas
jne
fwait
push
or
mov
negb
add
iret
loop
xlat
jae
xchg
or
xchg
mov
out
sub
hlt
pop
test
xchg
sub
push
xchg
push
fcoml
add
mov
dec
add
iret
ret
stc
pop
or
ficompl
mov
xchg
shll
aas
cmp
sub
scas
and
pop
sub
dec
cmpsb
mov
lea
call
lock
jg,pn
mov
xor
dec
jg
out
and
clc
lods
lret
mov
iret
fst
xchg
test
lret
or
sbb
cmp
mov
cmpb
pop
fildll
xlat
in
add
subb
add
adc
cmp
movsb
int
imul
jne
push
ss
pop
lods
add
outsb
push
cmpl
or
mov
xor
sub
jg
mov
mov
ret
std
fmuls
mov
jae
add
movsb
or
sahf
mov
test
xchg
push
jl
out
mov
pop
cmpsl
adc
push
inc
or
sub
or
jmp
xchg
loop
cmp
or
test
fldenv
xchg
movsl
add
xchg
mov
test
mov
loopne
mov
mov
adc
pop
sbb
cmp
aam
repnz
daa
pusha
jmp
int3
push
test
lea
pushf
dec
xchg
aad
lret
sbb
or
mov
dec
push
arpl
adc
pop
loope
mov
out
scas
jge
jno
jmp
imul
rcr
ret
xchg
push
fisubrs
mov
pop
test
in
loopne
out
scas
dec
jl
frstor
loop
push
jne
pop
or
pop
add
outsb
jne
fsubrs
ljmp
ret
test
stos
jne
fisubl
push
loope
push
jg
rorl
mov
mov
aas
mov
add
push
scas
push
jg
cli
mov
call
mov
inc
and
and
jo
jo
cld
push
dec
mov
pop
mov
mov
js
push
and
jmp
imul
in
xchg
std
nop
mov
push
xor
sbb
js
lock
fdivs
add
inc
pop
cli
pusha
or
mov
loop
jg
push
mov
push
call
and
pop
xor
negb
sbb
xchg
xchg
out
test
js
xor
and
pop
sub
filds
jb
in
push
sbb
jg
cmp
data16
dec
aaa
xchg
pop
add
mov
stos
dec
xchg
xchg
lcall
jnp
lea
fisttpll
nop
cmp
lret
loope
xchg
sbb
pop
cmpsl
scas
jmp
cmp
stos
aam
push
sbb
push
repnz
mov
xchg
mov
cmpsl
push
andl
and
jge
outsb
xlat
lds
out
cwtl
and
pop
movsl
push
adc
int
xor
cmp
fidivl
popa
add
sbbb
stos
jp
adc
jecxz
xchg
mov
mov
dec
bound
mov
mov
test
test
ds
lret
inc
jae
scas
ss
lahf
jl
in
adc
je
dec
pop
ljmp
lret
ret
cmp
cli
adc
lea
andl
lahf
push
dec
test
xchg
in
stc
test
xchg
jb
repz
test
andl
xchg
sub
mov
sub
cwtl
into
xlat
pop
lock
loope
cwtl
out
aam
insb
push
jg
pop
sbb
sub
cmp
xchg
inc
or
xor
pop
bound
pop
shr
and
push
nop
add
sbb
mov
push
movsb
adc
jmp
xchg
sbb
pop
daa
nop
mov
daa
fs
jno
mov
and
rorl
dec
jmp
inc
xchg
insb
stos
mov
stc
call
shll
clc
sbb
jge
icebp
pop
mov
cwtl
dec
push
jg
or
mov
lret
test
or
and
xor
stos
ljmp
jo
test
add
sbb
jns
into
scas
and
stc
test
sbb
push
clc
jmp
cmp
mov
mov
les
pop
dec
cmpsl
fnstcw
pop
mov
inc
movsb
mov
xchg
or
pop
test
idivb
daa
mov
mov
mov
ret
es
mov
or
ja
xchg
loop
out
mov
mov
rorl
filds
push
xchg
adc
inc
jns
es
push
daa
imul
push
sub
jnp
movsl
jmp
xchg
dec
stos
jno
shl
repz
jmp
ss
mov
push
cmc
and
lods
mov
inc
mul
xor
out
cmp
push
ja
push
lods
jg
push
dec
adc
mov
into
xor
inc
adc
dec
jp
test
es
pop
pop
aas
mov
loopne
adc
dec
mov
sub
cmpsl
repz
aad
daa
popa
call
insb
clc
mov
or
fs
xchg
fwait
inc
and
out
mov
movsl
and
cmp
insb
push
ret
dec
push
cmpsl
inc
or
lret
sbbb
and
xor
push
mov
stos
jge
adc
jbe
xor
std
fcomps
sahf
fsubrp
mov
xchg
cltd
mov
inc
adc
push
jo
loopne
cs
dec
and
mov
sub
xchg
xchg
dec
sub
push
cmovnp
repz
sbb
mov
cmpsl
xchg
mov
ss
sti
xchg
lcall
mov
cld
or
mov
icebp
inc
int3
clc
outsl
adc
imul
jno
mov
push
popa
sbb
jg
jne
inc
insl
jp
inc
mov
mov
push
pop
mov
jp
repz
xor
shr
outsb
mov
jmp
dec
jecxz
shl
fistps
loop
cs
jmp
out
dec
push
mov
cmp
movb
aas
test
dec
repz
lcall
pop
fnstsw
jne
xchg
inc
test
repz
loope
lock
into
out
mov
lods
aaa
out
add
nop
adc
or
addr16
pop
dec
or
pop
add
in
pop
popa
xor
outsb
dec
aad
mov
inc
mov
add
int3
push
aas
es
addr16
in
rcr
loope
movsb
ja
or
mov
in
addr16
jmp
fisubrl
data16
dec
scas
adc
loope
push
pmovmskb
leave
add
push
push
inc
jecxz
out
loopnew
mov
outsl
or
or
clc
push
jl
aad
and
xchg
xchg
fucomi
imul
daa
mov
jle
outsb
add
dec
lcall
nop
rcll
in
sub
push
push
jl
and
push
xchg
mov
sbb
and
mov
cld
fistl
xor
mov
daa
mov
out
dec
lcall
leave
rcr
sti
mov
lock
mov
push
loope
mov
daa
in
pushf
cltd
sbb
or
fcoms
arpl
mov
cmp
fs
nop
push
and
roll
add
adc
or
clc
fcomps
sub
push
mov
or
lret
imul
rcll
cli
cmp
dec
sbb
mov
sti
mov
sub
dec
xchg
dec
addr16
add
add
pop
dec
arpl
lds
inc
shl
push
add
lds
push
or
adc
jp
sub
in
call
iret
dec
test
mov
mov
movsl
lea
sbb
sahf
scas
and
mov
pop
dec
sarb
xor
lds
dec
insb
mov
lods
ss
nop
mov
scas
add
lcall
std
hlt
leave
int3
inc
scas
mov
mov
jo
adc
inc
mov
std
xchg
inc
mov
aaa
mov
or
or
aam
js
jb
mov
stos
pop
mov
in
fwait
and
outsb
pop
push
jbe
pop
cmp
push
fwait
mov
shrb
cmc
cwtl
mov
les
xchg
xor
in
sbb
fmuls
stc
cmpsl
mov
xchg
or
pop
das
add
je
and
mov
divb
jl
xchg
cmp
lock
imul
rcll
repnz
repnz
xor
sbbl
cmp
rol
cmp
mov
mov
std
adc
dec
mov
mov
in
insl
sbb
sti
xchg
fidivl
mov
arpl
pop
mov
cld
test
sub
or
adc
jg
movsl
xchg
xchg
push
or
cmp
jecxz
cmp
adc
lock
dec
jb
and
or
push
subb
xchg
dec
xorb
add
aad
push
cltd
push
pop
cmp
das
adc
xchg
scas
sub
adc
push
push
loopne
jno
shll
and
popf
cmp
fisttps
mov
enter
push
xchg
aad
jnp
fstpl
rcrl
outsb
cmpsl
leave
inc
or
or
aad
repnz
add
jne
sub
fstps
leave
push
cmp
hlt
nop
mov
cli
ret
inc
into
leave
clc
sub
mov
out
jae
jp
pop
cmp
call
cmp
popa
lret
xchg
movsl
jp
jb
scas
xchg
add
mov
mov
pinsrw
mov
movsb
dec
add
pop
test
fsubrs
xchg
jmp
pop
push
inc
jnp
fwait
dec
xor
sub
stos
lret
loope
xchg
cs
adcl
mov
xor
mov
out
xor
or
fwait
and
adc
loop
push
sbb
ljmp
mov
mov
push
sub
ds
fbstp
ja
or
and
cmp
adc
dec
inc
pop
mov
ljmp
push
jecxz
sbb
insb
cmp
int3
pop
jne
xorb
adc
push
enter
jae
add
sti
outsb
jp
outsb
mov
das
insb
imull
and
pop
jp
or
xchg
das
fwait
cmp
pop
sbb
fsubrl
mov
pop
mov
lret
out
xor
imul
inc
je,pn
push
xor
jo
stos
jecxz
in
sub
cs
dec
pop
rolb
insb
adc
jnp
xor
jle
and
mov
out
lea
roll
inc
mov
xor
ret
or
fsubl
in
xor
cmp
popa
xchg
fdiv
jle
sti
cmp
fcomp
minps
mov
stc
inc
add
xchg
sbb
jmp
mov
mov
rclb
sbb
mov
nop
adc
pop
fwait
dec
call
fdivrl
not
jle
xchg
or
mov
pop
xor
xchg
int3
or
into
cmp
pushf
int3
pusha
push
or
pushf
push
and
nop
ret
std
sub
adcl
push
outsb
jns
fwait
push
neg
dec
in
jnp
les
movsb
lds
outsl
sbb
leave
lret
iret
inc
jbe
aam
das
lock
bound
popa
adc
mov
shlb
xchg
loope
add
pop
push
add
les
in
mov
into
or
mov
test
mov
cmp
dec
jb
pusha
mov
pop
or
jmp
lea
pop
cmp
adc
jns
push
inc
cmp
cltd
lock
sbb
pop
fcomps
fbld
sti
int
ds
mov
dec
and
repz
ljmp
enter
int3
mov
lods
shll
inc
ret
pop
lea
mov
lahf
xchg
shl
sub
cld
std
out
subl
test
mov
cmp
add
not
xor
and
scas
cwtl
cmpsl
adc
pop
pushf
dec
mov
or
lret
add
ljmp
out
ffree
in
call
dec
aam
xchg
frstor
xchg
sub
push
fs
mov
add
repnz
js
cmp
dec
hlt
mov
dec
lea
and
jg
add
mov
jmp
xor
cltd
add
in
je
jp
les
inc
mov
or
xchg
jg
cld
ss
cli
and
jae
add
ja
das
movsb
pop
mov
pushl
outsb
sti
sbb
rcll
lahf
add
aam
lahf
cli
pusha
test
mov
and
xchg
sub
aaa
cmp
push
inc
rclb
imul
rol
repnz
jo
sbb
mov
fnstcw
dec
ficoms
ret
dec
mov
ds
sub
mov
add
cltd
jecxz
lods
jecxz
dec
sar
mov
mov
mov
aad
imul
aas
mov
adc
cmp
cmp
pop
mov
in
jne
movsl
push
cmp
ret
addr16
dec
faddl
xchg
push
add
nop
inc
pop
adc
je
xchg
pop
pusha
lods
cmpsl
dec
and
jecxz
lahf
stc
mov
cmp
into
mov
inc
out
cmp
sti
mov
xorl
xor
mov
push
xchg
sub
test
jl
xchg
mov
pop
push
add
jmp
cld
lret
inc
nop
cmc
cmp
in
in
jae
fstps
sub
shrl
push
dec
subb
addr16
push
and
outsb
xchg
mov
sahf
and
mov
ds
clc
mov
inc
jg
add
jno
xchg
aam
adc
mov
fdivrl
outsl
pop
push
jns
mov
test
mov
fcmovnbe
cmp
pop
scas
xchg
addr16
dec
fs
mov
xor
enter
stc
jae
xchg
outsb
sbb
mov
ja
jns
insl
push
add
push
dec
push
jnp
movsl
fdivrp
sub
push
rcrl
xchg
pop
out
ja
dec
or
pushf
in
faddl
xor
test
loop
and
out
xlat
mov
lods
dec
mov
js
ss
jno
mov
int
cmp
rcr
mov
cmp
dec
shrl
or
mov
pop
push
or
loope
inc
in
adcb
pop
jp
inc
mov
fucomi
mov
dec
add
cmpsw
or
sbb
add
mov
mov
test
mov
incl
jne
out
mov
insl
jae
andb
xchg
pushf
push
iret
sub
xlat
xchg
rol
xchg
scas
dec
mov
xor
push
imul
scas
out
out
shrb
ror
cmc
mov
xor
clc
inc
pop
xchg
lret
pop
push
mov
cmp
dec
push
and
inc
imul
inc
mov
aaa
aaa
mov
les
rcr
xor
xor
popf
xchg
int3
push
sub
jae
sbb
fwait
sub
mov
mov
loope
in
lret
inc
sbb
outsb
outsb
sbb
andl
push
in
dec
je
jg
jb
add
outsb
jae
lds
jge
xor
sub
in
aas
sub
xchg
mov
jb
pusha
or
mov
cs
and
cmp
es
movsb
outsl
ficomps
cmp
sub
mov
xchg
loope
push
jb
sub
fwait
mov
fimuls
sarl
xchg
sahf
adc
lock
jns
incb
and
lock
push
inc
push
bound
std
dec
out
ds
dec
pop
ret
pop
daa
push
mov
pop
jnp
scas
inc
pop
mov
out
xlat
insl
pop
pop
int3
mov
fsubr
orl
lock
xchg
outsl
shr
imul
out
mov
aaa
nop
mov
add
sbb
sub
adc
ss
push
mov
leave
iret
adc
cwtl
in
ds
and
outsb
xchg
das
cmpsl
inc
inc
dec
pop
cmp
mov
pop
mov
adc
dec
imul
inc
repz
test
adc
push
test
dec
push
mov
mov
push
jae
mov
sbb
xchg
push
les
pop
jmp
push
cs
shl
rcrl
cli
sbb
pop
testl
sub
fsubs
repnz
testb
xchg
lcall
jno
cmp
jmp
xor
mov
pop
and
inc
mov
ljmp
call
xchg
mov
xchg
mov
push
movl
xor
or
push
jns
adc
pop
xchg
xor
loope
cmpsl
xchg
ret
test
mov
inc
push
repnz
sahf
fisubs
cld
arpl
sbb
fnstsw
lods
jle
mov
mov
js
mov
inc
shrb
outsl
xor
jecxz
fcmovnu
lcall
aas
inc
push
and
or
mov
xchg
lahf
mov
sarb
and
and
or
loope
xlat
fs
push
mov
cmp
lods
cmc
cltd
and
xchg
push
frstor
fwait
jmp
movsb
je
cmpsb
sahf
adc
dec
and
push
mov
pop
movsb
and
add
and
pop
in
lods
js
jg
outsb
jns
xchg
adc
stc
sub
mov
int3
push
outsl
testb
push
pop
push
push
cmpsb
pop
bound
lret
inc
mov
outsb
add
lcall
aas
lahf
rcl
cmc
mov
orl
std
mov
gs
in
pop
mov
js
dec
dec
mov
mov
pop
xchg
sbb
cld
pusha
sub
adc
test
mov
pop
cmp
push
xor
je
cmp
cli
cli
out
daa
adc
cld
fdivrl
scas
dec
pop
xor
dec
sbb
les
mov
in
sub
mov
sbb
pop
jno
jmp
pop
push
mov
xchg
test
cmp
xor
pop
add
test
push
shll
lods
out
add
add
add
mov
cli
ret
lods
xchg
aam
ror
push
jecxz
cmpxchg
mov
popl
jb
mov
jmp
popf
je
fistpl
aad
inc
jne
pop
pusha
mov
pop
clc
xchg
mov
mov
mov
stos
adc
imul
fwait
subl
jmp
xchg
pop
int
es
xor
jnp
jg
push
cmpsl
xor
add
inc
xchg
pop
lock
mov
pusha
pusha
std
mov
imul
aaa
adc
clc
fistpl
test
push
xchg
loope
adc
scas
xchg
mov
pusha
pop
sbb
add
hlt
inc
xchg
or
sbb
jl
xchg
rol
jmp
repz
movsl
or
adc
out
mov
daa
mov
popf
scas
fdivl
jge
icebp
divl
in
insb
addl
mov
xchg
adc
sub
and
bound
add
aaa
in
dec
in
inc
add
sahf
hlt
jnp
jnp
insb
adc
shll
dec
repz
into
lods
mov
insl
mov
pop
mov
sbb
jmp
push
pop
or
arpl
mov
daa
sub
rcrb
or
adc
fmull
mov
xor
adc
pop
fadd
and
sahf
int
inc
in
sbbb
std
push
movsb
xor
push
sahf
mov
mov
jae
jle
in
mov
mov
xor
jl
inc
mov
jecxz
mov
add
and
cmp
scas
fdivrl
jns
popf
adc
jo
movsl
jmp
movsl
pop
enter
mov
adc
bound
int3
xor
jg
xor
andl
mov
fwait
jmp
aad
sbb
jp
xor
repnz
jg
sub
xlat
hlt
enter
mov
mov
fs
movsb
jns
mov
xchg
mov
fstps
ds
fisubl
lahf
sub
jg
in
dec
imul
mov
out
imul
aad
mov
cs
mov
ret
mov
ret
aas
sub
push
popa
outsb
xchg
loop
sar
mov
push
xchg
cmpsb
neg
aas
adc
repnz
or
push
adc
xor
daa
out
cmc
jae
shl
or
jmp
jl
xchg
jmp
sbb
leave
or
cmpsl
cwtl
adc
jp
decl
shrb
notl
movsb
ljmp
lock
mov
scas
jae
aaa
xchg
push
sti
in
cmp
xchg
in
add
scas
mov
xchg
adc
or
push
bswap
hlt
push
scas
dec
lret
clc
stc
xchg
das
outsb
cs
cmp
add
xlat
xor
mov
fcmovnbe
daa
xor
jno
fildll
add
insb
mov
dec
sbb
in
adc
sub
test
sbb
cmp
mov
scas
dec
lds
and
xor
xor
xchg
scas
mov
addr16
jmp
lret
dec
xchg
int
jp
gs
pop
popa
xchg
or
test
cmpsl
xchg
or
xor
xchg
pushl
cmp
mov
sbb
adc
andl
add
push
mov
loopne
mov
jmp
pop
popf
repnz
loopne
js
mov
out
lock
xchg
lret
jp
jecxz
gs
jmp
inc
xor
cmp
pop
hlt
ss
fstps
test
cmp
ljmp
dec
ja
inc
mov
ds
fcmovnu
cwtl
mov
jl
popf
jno
fists
stos
sti
out
jbe
add
inc
cmpsb
loop
out
stos
mov
stos
not
test
push
pop
lock
and
mov
pop
dec
xchg
sbb
sahf
xor
mov
scas
pop
bound
pop
inc
sahf
dec
insl
add
xor
pop
xchg
and
jp
adc
cmpsl
mov
sahf
mov
push
mov
in
testb
shlb
or
divb
xchg
stc
mov
cmp
movsb
inc
fbld
mov
ret
jmp
movsl
scas
movzbl
sar
push
clc
mov
scas
push
lods
cmc
jmp
pop
xacquire
sahf
popa
stc
pop
mov
adc
mov
out
mov
push
sub
push
insb
sub
mov
stos
aaa
sti
push
xchg
imul
cs
js
sub
ss
inc
adc
fstpt
xchg
pop
mov
sub
js
pop
dec
fnstcw
ja
pop
divl
aam
repz
inc
jnp
dec
xor
ljmp
popf
sti
hlt
sub
dec
pop
push
decb
sbb
cmpl
xor
push
sbb
insb
push
je
push
fwait
rorb
lea
test
lds
cmpsb
fxtract
sbb
rcrl
enter
subb
jle
and
clc
lret
mov
dec
and
add
popf
jbe
in
jl
jne
pop
aaa
lds
add
sbb
jne
xchg
pushf
stos
fsubrp
sbb
cmpsl
jge
fidivrl
jmp
js
in
inc
adc
cld
pop
mov
xor
push
xor
out
mov
pop
dec
xor
pop
cs
or
mov
lea
cmpsb
enter
mov
pop
dec
test
and
call
xor
ljmp
addr16
or
jne
in
mov
int3
jb
loop
fsubrl
push
jns
xchg
aas
dec
xchg
aas
cmp
sbbl
or
xchg
xchg
ds
push
bswap
sarb
out
dec
mov
mulps
loopne
fnstsw
scas
insb
add
aas
xchg
sub
pop
mov
inc
adc
inc
adc
stos
fidivs
cltd
jo
dec
popf
inc
das
push
test
pop
add
jnp
scas
pop
mov
into
push
push
repz
cmp
push
push
adc
adc
fucomi
loope
mov
push
test
jae
mov
leave
or
jno
lods
pop
int3
sub
ss
jle
push
mov
ljmp
xor
sbb
int3
jge
lods
or
les
xor
mov
push
aas
dec
pushf
sub
js
leave
mov
movsl
inc
jge
nop
push
mov
fwait
jne
xor
and
xchg
aas
inc
jno
jbe
lcall
and
pop
bound
add
fistpl
ja
mov
xor
and
pop
mov
xchg
jge
ljmp
in
fwait
bound
jecxz
xchg
mov
movsl
fdivl
mov
lods
adc
cwtl
mov
dec
add
pop
outsl
sahf
inc
push
mov
leave
pop
movsl
push
and
cltd
insl
sub
addl
mov
xor
ss
mov
enter
cmp
out
out
int
dec
cmp
mov
repnz
or
ss
mov
mov
mov
ffree
cwtl
cld
test
and
fs
add
hlt
xchg
inc
dec
aam
inc
inc
push
in
mov
mov
sbb
sub
inc
and
and
xchg
push
icebp
sbb
dec
lds
mov
cld
fistl
je
mov
dec
inc
and
mov
pop
out
in
pop
cmc
ja
std
mov
cli
lsl
mov
sub
jo
scas
popf
or
or
mov
or
icebp
lods
and
adc
xor
sti
jp
adc
cli
sbb
leave
out
rorb
cmc
repnz
push
inc
stos
add
or
xchg
push
orl
sub
idiv
or
hlt
movsl
push
cs
cmpl
mov
xor
pop
iret
test
xor
lret
out
imul
push
js
xchg
push
push
nop
push
cld
std
push
jo
lret
cmp
out
mov
lcall
xchg
sub
loope
push
push
add
jae
fisubrl
adc
loop
inc
stos
sbb
mov
bswap
xor
fdivrp
in
mov
stos
rclb
mov
bound
xor
call
xor
dec
jge
dec
jns
pop
lea
adc
mov
pop
and
adc
flds
fisttpl
add
sahf
or
roll
stos
jne
mov
xchg
ficoml
sub
mov
mov
orb
std
insb
aam
xor
lcall
pop
std
sbb
and
movsl
fcomi
ljmp
add
push
out
pop
cli
lcall
fwait
jne
arpl
mov
arpl
pop
es
fildll
mov
test
fwait
cmp
xor
or
pop
movsb
sbb
add
xchg
cld
out
adc
fcomps
ds
sub
add
dec
dec
mov
mov
add
fldln2
mov
ss
addb
pop
push
js
adc
das
imulb
dec
inc
outsl
mov
xorb
sti
dec
mov
fstl
push
mov
mov
jne
jo
fcomps
pop
xchg
arpl
xor
mov
dec
push
imul
loope
rcr
pop
xor
scas
mov
daa
cmc
xchg
adc
into
push
leave
into
sahf
rcll
inc
dec
div
stc
xor
mov
xor
xor
mov
cmp
std
cmp
aas
and
pop
movsl
inc
xchg
inc
lods
xchg
sub
jl
addr16
icebp
mov
jge
push
mov
imul
mov
xchg
fisubrs
xchg
ljmp
jo
mov
cmpsl
xchg
idivb
das
out
sbb
out
pop
jg
lahf
lock
xchg
sub
xchg
push
adc
add
inc
adc
pop
inc
ljmp
addb
mov
dec
adc
adc
shll
mov
cmc
jne
fwait
loop
xchg
dec
mov
xchg
xchg
shll
call
aaa
cmovno
arpl
pop
subl
int3
add
mov
pop
sahf
or
mov
xor
fsubr
rep
scas
iret
pop
icebp
lahf
js
in
push
out
inc
cmp
inc
call
lock
idivb
aas
leave
ret
repz
dec
out
sbb
mov
loope
xor
ljmp
mov
test
adc
jge
hlt
dec
sub
cmovb
mov
add
sub
ss
es
and
or
xor
int3
jno
mov
cmc
dec
pop
xchg
dec
xchg
out
xchg
push
test
les
ja
lahf
xor
xor
imul
add
mov
imul
dec
xchg
adc
mov
inc
mov
clc
fcomp
lock
pop
mov
add
push
in
and
in
ljmp
popf
insb
inc
outsl
mov
fimuls
dec
ret
xchg
nop
scas
gs
movb
mov
push
mov
mov
cmp
xchg
jns
add
sahf
test
aaa
xor
mov
in
clc
stc
mov
xchg
xchg
inc
mov
cwtl
xchg
mov
xor
mov
adc
dec
push
jns
loop
dec
pop
lock
fldt
sub
loop
ljmp
loopne
popl
in
fimuls
mov
out
insl
js
lea
push
dec
push
mov
xchg
adc
mov
daa
add
sbb
mov
cmpsb
sahf
xor
sub
das
clc
jp
das
sbb
inc
dec
push
loop
test
lret
inc
loope
rcr
call
push
insb
push
mov
fadd
enter
inc
aas
xchg
or
pop
push
sbb
push
stc
nop
lret
cli
sub
dec
cmp
cmp
ret
xchg
xchg
ss
mov
sti
movsb
cli
sbb
rorb
push
pop
mov
mov
dec
mov
mov
out
pop
gs
incb
loopne
lcall
js
pop
adc
push
fisubrs
daa
add
sbb
aaa
lock
sub
and
stc
push
ret
les
push
jl
xchg
sbb
cld
pop
adc
out
scas
adc
mov
lds
pop
popa
imul
stos
lret
dec
cltd
push
arpl
and
sub
mov
int3
pop
xor
loop
cs
ficomps
cmp
pop
cmpsb
out
pop
in
cmc
movsb
shl
dec
adc
push
fisubrs
movsb
jecxz
out
popa
lods
sub
pop
mov
lds
fstpl
push
dec
or
call
sbb
addb
lcall
pop
jge
decb
mov
outsb
je
lret
popf
test
int
fidivs
jge
test
scas
sbb
jns
lret
push
orl
mov
aaa
cmpsb
adcl
das
sub
movsl
ss
aaa
mov
in
sub
push
sbb
ja
enter
mov
das
xor
cmc
jle
mov
cwtl
scas
addr16
out
dec
mov
les
xchg
mov
shll
outsb
cwtl
cwtl
pop
imul
pop
imul
into
rorb
stc
jno
or
lock
fisubs
push
sbb
fcompl
add
in
xchg
aas
cld
shll
cld
call
sub
xchg
add
xchg
or
data16
fimuls
fs
dec
xchg
fmuls
and
jmp
ficoml
int3
cmp
pop
xchg
cmp
insl
mov
sbb
xor
gs
jle
xchg
sbbb
outsb
xchg
popf
push
loope
mov
add
jbe
pop
arpl
lahf
outsb
push
xchg
or
push
pop
pop
mov
nop
pop
xchg
cli
cmpsb
xorb
mov
and
xlat
or
ljmp
mov
in
in
bound
adc
adc
sbb
scas
xlat
sarl
cli
sbb
mov
sbbb
daa
orl
mov
sbb
sbb
push
mov
stos
cmpsb
cs
fbld
xorl
xor
cli
mov
push
pushf
imul
xor
addr16
ljmp
mov
fisubl
out
pop
outsl
cmpsb
push
mov
aad
loopne
adcb
testl
test
dec
push
push
xchg
aas
inc
jno
test
xlat
js
arpl
and
push
aam
cmpsb
jl
pop
push
sub
cwtl
loope
inc
aam
das
incb
add
je
sbb
dec
inc
dec
mov
dec
rcrl
jb
lea
adc
and
je
jo
loopne
mov
xchg
jle
adc
mov
testl
or
mov
scas
out
lea
mov
dec
xchg
jle
pusha
mov
xchg
insb
dec
stos
jo
out
stos
cmp
inc
mov
imul
add
pop
adc
cld
and
and
mov
dec
fsubrl
add
jmp
aam
and
inc
jmp
adc
push
jne
jno
lods
mov
push
push
loope
jmp
bound
jecxz
daa
dec
inc
out
ror
flds
xchg
fistl
daa
popa
daa
push
movsb
cmc
call
pusha
sub
fnstenv
mov
ror
clc
ja
adc
or
je
mov
add
jmp
jne
push
scas
and
xor
jnp
int
int
sarb
and
inc
out
mov
imul
pop
sti
add
sar
push
negl
mov
repz
pop
inc
push
daa
push
dec
mov
dec
xchg
imul
notl
mov
jne
pop
cmpsl
dec
inc
sub
fdivl
out
sbb
jmp
sarl
jge
push
in
inc
mov
loopne
loopne
adcl
push
fcoms
xchg
jecxz
jecxz
jg
lods
punpckhbw
push
inc
or
pop
addr16
jmp
sbb
jmp
lds
addb
gs
inc
inc
sahf
andb
popw
fstl
pop
in
mov
stos
jle
mov
dec
ret
pop
push
es
xchg
jne
lahf
aas
pop
jmp
fwait
push
shl
ja
adc
ja
mov
sub
addr16
clc
mov
jg
icebp
mov
pop
cmp
stos
arpl
into
aam
pop
cli
fwait
pop
and
push
imul
mov
pop
xchg
mov
fdivl
mov
scas
jo
dec
push
adc
movsb
loope
sbb
lcall
push
aam
scas
and
dec
and
dec
sbb
mov
call
sahf
jmp
sub
fwait
loop
push
test
dec
aad
cmp
push
gs
mov
shr
out
incb
lods
cmpsl
clc
bnd
mov
add
push
cld
dec
clc
or
imul
fdivrp
faddp
push
push
add
pop
cmp
sub
movsl
cmp
xchg
xor
outsb
lret
jge
xor
inc
fwait
icebp
fsubs
sub
lods
arpl
movsb
pop
in
adc
mov
push
sub
push
stos
sahf
imul
xchg
pop
movsl
jmp
or
aas
or
add
movsl
mov
nop
mov
pop
les
cmp
or
push
inc
dec
bound
lds
jge
cld
mov
rorb
daa
outsl
divb
mov
outsb
in
adc
cli
fists
pop
or
test
jecxz
xchg
add
ja
int
mov
push
in
mov
xchg
mov
cld
cmpsb
fildll
icebp
push
movsl
lock
jp
daa
cmpsl
add
jbe
divl
int
pop
or
jecxz
mov
insb
push
jl
xor
aaa
outsl
dec
gs
pushf
xor
mov
xor
stc
scas
ljmp
into
inc
dec
insb
dec
dec
push
xor
dec
xor
inc
and
jnp
mov
cltd
mov
out
stos
loopne
lods
dec
mov
loope
pop
pop
jl
cmp
cltd
movsb
test
pop
cmp
lds
pop
arpl
out
lcall
jno
test
cmpsl
cmp
ret
adc
fisubs
sub
adc
out
jo
aam
push
cmpsb
sti
xchg
and
sti
mov
pop
push
sbb
pop
xorl
cmp
in
inc
xchg
adc
jp
xchg
sub
jp
or
repz
es
cmovb
push
repz
call
movsb
stc
mov
mov
pusha
lea
adc
mov
jle
nop
imul
xor
data16
dec
pop
push
out
stc
sti
insl
push
ret
test
mov
insl
sbb
cmc
lea
xchg
in
scas
cmc
loope
imul
mov
daa
les
push
push
xchg
pop
push
mov
add
shrl
in
imul
scas
gs
add
xchg
pop
mov
jecxz
daa
xor
pop
mov
pop
adc
shld
lds
in
int
or
shl
jns
mov
movsl
in
pop
pop
dec
aaa
cmc
pop
adc
mov
and
cmp
sub
xchg
arpl
dec
and
or
js
sbb
jbe
dec
fistpl
or
aad
adc
faddp
test
mov
lret
or
out
sub
test
test
aad
and
push
lret
push
leave
or
push
loop
adc
lods
jno
cwtl
out
stos
js
stc
mov
pop
repz
mov
dec
jg
pop
out
sub
inc
in
xchg
fisubrs
xor
inc
pop
xor
cmpsl
lds
mov
cwtl
shl
je
je
out
jbe
in
adc
call
jmp
and
stos
cld
addr16
repz
dec
dec
jecxz
mov
sub
push
mov
or
popa
mov
adc
push
js
pop
sbb
roll
mov
and
stc
dec
mov
subb
sub
aaa
subl
lock
fadd
out
pop
fldt
dec
popf
cmpsb
outsl
fldenv
popl
orb
or
cltd
xchg
xchg
out
inc
mov
and
sets
or
repnz
push
enter
sub
adcb
nop
jg
pop
jbe
mov
fsubs
addr16
sub
xor
ljmp
inc
adc
mov
dec
jmp
pop
aam
inc
sbb
pop
push
or
f2xm1
jp
and
fst
sub
mov
pop
push
jecxz
xchg
add
mov
sbb
imul
loope
outsl
fstps
add
jmp
add
pop
mov
inc
sarl
cmpsb
scas
lods
out
andb
fdivs
mov
rcr
push
gs
xchg
mov
sbb
add
push
sahf
push
xchg
data16
je
pop
adc
fwait
es
mov
icebp
cwtl
faddl
mov
int
pop
inc
dec
dec
loop
sahf
aaa
adc
inc
and
pop
inc
jp
or
hlt
idivl
leave
add
adc
nop
xor
mov
cmp
scas
cmc
cli
jg
and
jns
or
in
es
mov
adc
xlat
xor
pushf
dec
pop
dec
add
addr16
aam
jns
imul
imulb
insb
add
dec
inc
jp
push
cmpsb
fwait
pop
pop
lret
pop
xor
push
push
enter
sbb
nop
pop
cmp
push
jno
dec
mov
lods
pop
sub
jae
pop
lea
movsb
cmc
daa
or
jmp
insb
pop
xchg
push
xcrypt-ofb
cmpsl
stos
push
mov
call
jmp
jmp
out
or
out
cwtl
or
sub
dec
out
pop
sub
pusha
lcall
push
xchg
repz
loop
outsl
test
adc
push
test
or
jl
push
aam
mov
dec
jae
fnsave
jb
data16
aas
lret
pop
pop
call
dec
popa
sub
xchg
lock
cwtl
sub
xor
jge
rcrb
outsb
rcl
mov
mov
dec
mov
frstor
xor
fdiv
movsb
cmpsl
lcall
mov
in
leave
push
fucomip
sbb
push
jge
stos
jecxz
dec
ljmp
cmp
sahf
repz
stos
cli
into
add
pop
pop
jb
mov
lret
xchg
push
jo
pop
xor
mov
jl
iret
xchg
ljmp
popf
fmulp
sbb
xchg
fs
pushf
mov
dec
ret
adc
mov
int3
int
call
push
sahf
sbb
xchg
push
xorb
and
mov
adc
jecxz
mov
push
mov
in
push
loop
and
repnz
les
rcrl
sbb
push
in
sete
xlat
jne
mov
add
fcmovnb
js
xchg
data16
data16
shll
dec
bound
pop
test
pop
aad
out
pop
aad
push
mov
mov
and
leave
lcall
ds
jl
adc
inc
add
mov
mov
das
aad
mov
mov
add
xchg
inc
shll
rorb
hlt
incb
add
jo
xor
in
leave
adc
loop
cmp
sbb
cmp
sbb
jns
push
mov
and
cmp
in
inc
dec
cmp
jnp
cmp
sbb
sub
mov
jle
push
dec
xchg
outsb
sub
dec
jp
cmp
cld
je
outsb
mov
scas
cs
adc
popl
adcb
pop
enter
mov
dec
loop
push
mov
jnp
xchg
mov
mov
and
std
idivb
mov
or
dec
fs
sub
popa
push
xchg
das
shlb
mov
int
pop
mov
sarl
xchg
sbb
hlt
push
sbb
xchg
popf
outsl
daa
stos
jb
inc
mov
incl
dec
sub
push
push
xchg
in
push
and
jb
inc
repz
aaa
xlat
ss
mov
jge
movd
in
jg
test
and
daa
push
iret
pop
js
jmp
stc
dec
into
test
aas
in
ret
lea
loop
loopne
arpl
jmp
mov
lcall
lret
inc
loopne
mov
mov
or
loopne
cld
imul
jo
repz
hlt
cs
push
xor
les
scas
rorl
inc
ss
dec
cmp
fbstp
in
in
loopne
pop
icebp
inc
add
int3
dec
in
mov
mov
push
mov
std
sub
test
ficoml
jo
lods
fiaddl
or
ds
xor
mov
mov
test
imul
jo
lcall
inc
push
mov
xor
in
add
iret
pop
mov
jne
aaa
push
mov
push
negb
dec
push
int
pop
mov
sahf
iret
pushf
hlt
je
outsl
rclb
or
inc
fstps
xor
dec
fcmovnu
test
fcomip
mov
cmp
orl
mov
out
adcb
xor
jnp
icebp
push
rcrl
adc
dec
pop
test
fisubs
mov
lock
or
testb
mov
or
mov
push
mov
pop
out
mov
out
out
push
jl
mov
xchg
dec
inc
insb
push
aam
cmc
pop
pop
jbe
mov
mov
insl
xchg
pop
mov
inc
pop
xchg
lret
inc
mov
fisttps
les
mov
dec
loop
push
or
add
push
mov
in
lock
mov
cmpsb
cs
cmp
mov
inc
cmp
ret
mov
mov
out
mov
sub
pop
inc
stos
jle
clc
mov
loop
sti
mov
ret
xchg
mov
or
hlt
iret
movsb
adc
push
mov
sbb
arpl
fs
aaa
and
inc
movsl
mov
orl
pushf
dec
shrb
xor
sub
cmp
mov
mov
dec
xor
sub
and
pop
mov
sti
push
push
pop
mov
pop
add
mov
dec
jmp
ljmp
jg
negl
jmp
push
movsl
dec
jecxz
mov
mov
shlb
leave
int
xchg
enter
shl
sub
add
lcall
xchg
sbbb
and
ds
lea
out
outsl
or
mov
cmp
cmpsb
mov
movsb
andl
call
icebp
js
push
jmp
jae
sbb
or
xor
into
imul
js
addr16
jg
sub
push
ret
bound
add
fsts
rcr
push
ret
jae
aas
sbb
cwtl
or
out
pop
xorb
std
mov
add
push
pushf
stos
or
outsl
add
gs
mov
xor
repnz
rorb
jmp
arpl
test
ljmp
push
adc
inc
jbe
cmp
ret
cli
mov
cmpsb
push
hlt
das
lret
insl
and
dec
cmp
cmp
inc
adc
dec
jle
ds
bound
mov
repnz
jp
int3
inc
and
sbb
adc
ljmp
adcl
fwait
and
int
imull
in
in
subb
cmp
and
cmpsl
in
adc
jg
adc
xorb
test
scas
jno
inc
sub
movsl
insb
sub
imul
cmp
test
xchg
push
inc
add
std
data16
mov
pop
lret
sub
gs
adc
popa
hlt
or
mov
push
aas
jecxz
bound
pop
add
cmp
cmp
cld
push
dec
in
decb
add
inc
cmp
jl
inc
cmpsl
fstpl
pop
imul
jb
mov
dec
or
or
in
int3
inc
iret
sbb
sub
cmpsl
mov
mov
mov
cmpsl
pop
sarb
xchg
andb
hlt
jl
out
lock
xchg
insb
ljmp
sti
or
adc
into
ljmp
jp
cmp
cwtl
cmp
push
daa
cmovo
add
aad
sub
cld
xor
sub
or
adc
enter
out
sbb
ds
pusha
jne
imul
fisubs
sar
pop
lods
repz
stos
mov
push
test
btc
das
in
test
loop
jge
pusha
cwtl
nop
test
jg
dec
mov
je
or
andb
ss
fdivrs
xchg
fwait
in
out
lret
into
out
stc
sub
lret
cmp
cmpsl
inc
out
push
mov
repz
xor
imul
adc
pop
mov
hlt
dec
aam
add
shlb
and
pop
dec
mov
scas
xor
mov
xchg
dec
dec
fisubrs
popf
pop
pop
sbb
lret
dec
mov
mov
inc
adc
adc
pop
xor
add
inc
in
xor
jge
pop
clc
mov
push
push
jbe
or
std
pop
cs
jne
mov
sbb
pop
push
add
cli
pop
into
inc
das
adc
test
sbb
pop
sbb
insl
int
sbb
mov
push
sbb
xorl
loop
mov
push
push
mov
shlb
inc
mov
movsb
clc
mov
and
push
dec
test
sub
leave
jns
jge
cltd
xchg
mov
jns
push
incb
xor
jle
jg
sub
insl
mov
movsb
fwait
jge
adc
sbb
out
xchg
adc
ficoml
shr
cmp
rcrb
outsb
popa
hlt
jmp
xchg
push
and
or
xchg
mov
push
adc
add
cmp
sbb
or
imul
xchg
shrl
and
out
and
jecxz
repz
das
adc
and
pushf
punpcklbw
mov
push
sbb
push
cmp
imul
clc
or
jb
ljmp
lret
ljmp
pusha
mov
mov
dec
stos
jg
dec
int3
out
jno
lcall
inc
gs
fldl
popa
bound
rcrb
or
adc
xor
sub
std
cmc
cmp
scas
sub
fwait
stos
stc
inc
xchg
cwtl
mov
arpl
pop
aas
stc
mov
jns
xor
xchg
aam
xchg
dec
gs
jge
xor
sarl
and
aam
outsl
sar
pop
out
frstor
cmp
je
sub
lds
loop
sub
bound
cmpsb
xor
or
mov
stc
imul
lods
push
xor
dec
cs
add
dec
lods
sub
mov
pushf
xchg
mov
mov
pop
xchg
orb
popf
cmp
movsb
insl
nop
das
or
or
or
lock
movsb
inc
sbb
icebp
mov
push
jp
shrl
adc
push
mov
sbb
fildl
pop
lods
xchg
inc
fcompl
mov
pop
xorl
jecxz
fcoml
pop
adc
push
mov
enter
mov
inc
mov
int
adc
lods
sarl
js
push
sahf
dec
lods
mov
data16
push
mov
mov
mov
shll
rorb
mov
pop
adc
fstp
mov
rcrl
xchg
sub
stos
stos
push
test
fcoml
xor
xchg
mul
cli
lret
in
push
test
cli
dec
rcrl
andb
cs
cld
insb
pavgb
scas
sbb
xchg
mov
out
push
leave
pop
pusha
cli
sub
nop
fisubrs
push
ret
cmpsb
xchg
xor
cmc
clc
sbb
sbb
addb
xchg
mov
xor
sub
sti
bound
xor
pushf
mov
xor
xchg
icebp
sub
sbb
cld
data16
dec
or
jae
cmc
stos
icebp
mov
push
scas
pop
mov
sahf
stos
fs
sub
in
shlb
adc
out
mov
jmp
enter
pop
sub
movsl
fiadds
sahf
xchg
mov
shll
dec
xor
jne
leave
andl
popf
dec
mov
xor
mov
bound
mov
xor
xor
icebp
sub
sar
push
aaa
dec
or
xor
cmc
stos
jno
sbb
pop
mov
sahf
stos
fs
sub
in
shlb
adc
out
mov
jmp
enter
pop
sub
movsl
fiadds
sahf
xchg
mov
shll
dec
xor
jne
leave
andl
popf
dec
mov
xor
mov
bound
mov
xor
xor
icebp
sub
sar
push
aaa
dec
or
xor
cmc
stos
jno
sbb
pop
mov
sahf
stos
fs
sub
in
shlb
adc
out
mov
jmp
enter
pop
sub
movsl
fiadds
sahf
xchg
mov
shll
dec
xor
jne
leave
andl
popf
dec
mov
xor
mov
bound
mov
xor
xor
icebp
sub
sar
push
aaa
dec
or
xor
cmc
stos
jno
sbb
data16
push
mov
sub
jmp
ret
mov
jmp
andl
jmp
jbe
mov
mov
jmp
movb
movb
movb
jmp
mov
mov
movb
movb
jmp
mov
jmp
movzwl
mov
and
jmp
mov
add
lea
mov
nop
nop
nop
nop
nop
test
jmp
push
call
pushl
jmp
cmp
jmp
test
jne
lea
jmp
add
mov
popa
jmp
leave
ret
add
add
add
lret
jmp
je
jmp
add
add
cmpl
mov
nop
nop
nop
nop
nop
jle
jmp
je
test
je
jmp
mov
sub
pushl
push
jmp
jne
jmp
addb
call
push
call
jmp
jmp
ret
add
add
add
push
jne
sub
jmp
lea
push
jmp
add
inc
or
rorb
nop
nop
mov
jmp
push
xor
push
push
jmp
call
jmp
inc
jmp
add
add
je
or
stc
add
add
dec
or
addb
mov
jmp
add
add
add
rorb
ss
jmp
add
add
mov
xor
mov
test
jmp
lea
push
jmp
add
jmp
add
add
and
add
test
jmp
mov
mov
mov
ret
add
add
add
loopne
or
movsbl
mov
jmp
xor
push
add
cmpl
jmp
cmpl
je
mov
cmpl
jmp
test
jne
pop
ret
push
push
jmp
mov
xor
jmp
push
push
jmp
sub
jmp
je
mov
jmp
mov
jmp
push
push
mov
lea
jmp
push
push
push
push
jmp
pushl
call
jmp
mov
lea
jmp
push
jmp
movl
mov
jmp
sub
jmp
add
add
push
mov
jmp
push
mov
jmp
pop
ret
add
add
add
push
mov
push
andl
jmp
mov
push
jmp
push
push
push
pusha
jmp
mov
push
andl
jmp
add
cmpl
je
jmp
push
mov
jmp
movzbl
inc
mov
mov
jmp
push
jmp
pop
jne
mov
jmp
push
call
mov
cmp
jmp
add
lea
mov
mov
jmp
cltd
pop
mov
idiv
jmp
mov
and
incl
jmp
add
shr
jmp
je
mov
jmp
push
call
mov
nop
nop
nop
nop
nop
test
je
lea
jmp
add
in
push
mov
jmp
sub
push
jmp
orb
push
push
jmp
jne
pushl
jmp
jmp
push
pushl
call
mov
nop
nop
nop
nop
nop
mov
mov
jmp
mov
jmp
mov
jmp
add
in
jmp
pushl
pushl
pop
jmp
push
jmp
pop
test
jmp
mov
andl
mov
jmp
push
pushl
jmp
push
push
jmp
call
mov
xor
test
jmp
test
jle
jmp
je
call
jmp
xor
mov
xor
jmp
xor
test
jmp
incl
jmp
and
mov
ret
add
add
add
add
add
add
add
test
lcall
add
add
add
aaa
std
jmp
xor
jmp
mov
mov
xor
mov
jmp
mov
jmp
push
jmp
mov
jmp
mov
call
jmp
mov
mov
jmp
add
add
test
decl
pushl
movb
cld
call
decl
incl
jmp
jle
jmp
mov
xor
mov
jmp
mov
mov
test
jle
jmp
push
call
test
pop
jmp
mov
jmp
push
pushl
jmp
add
call
push
jmp
nop
popa
jmp
push
mov
sub
jmp
mov
mov
push
nop
nop
nop
nop
nop
shr
push
jmp
mov
je
add
push
jmp
add
pusha
mov
jmp
shr
jmp
mov
jmp
push
lea
jmp
add
add
push
mov
jmp
je
push
mov
shr
jmp
call
pushl
jmp
pop
cmpl
jne
cmpb
jmp
lea
jmp
push
lea
push
jmp
mov
mov
mov
xor
jmp
mov
add
add
jmp
ret
add
dec
or
test
jmp
call
test
pop
jmp
mov
mov
mov
add
jmp
movzwl
jmp
mov
add
jmp
push
call
push
push
jmp
and
jmp
test
pop
jne
lea
jmp
mov
test
jmp
lea
push
je
call
jmp
push
call
cmp
pop
jmp
add
jmp
call
push
push
push
jmp
add
add
add
mov
jmp
call
mov
jmp
jle
mov
add
jmp
test
pop
jmp
je
jmp
push
push
jmp
call
add
jmp
inc
inc
decl
jne
jmp
call
cmp
jmp
push
push
jmp
add
jmp
je
push
jmp
add
dec
jne
mov
jmp
je
push
xor
pop
jmp
incl
jmp
call
test
je
jmp
push
call
jmp
add
jmp
cmpl
jne
jmp
pop
mov
mov
jmp
test
jle
mov
jmp
lea
push
jmp
addl
jmp
mov
add
jmp
mov
cmp
jl
xor
jmp
add
jmp
add
jmp
jmp
lea
push
push
pushl
jmp
pop
pop
jmp
mov
lea
push
jmp
shl
shr
or
jmp
call
dec
pop
lea
jmp
push
call
jmp
push
pop
pop
jmp
push
call
cmp
jmp
xor
add
dec
jmp
jne
mov
test
jmp
jmp
mov
mov
movzwl
jmp
xor
jmp
jne
pop
pop
jmp
je
mov
sub
jmp
mov
add
pop
jmp
jmp
push
pop
jmp
mov
test
je
jmp
leave
ret
add
add
add
test
add
pop
aam
test
add
jmp
pop
leave
ret
add
add
add
dec
add
add
add
add
leave
ret
add
add
add
pop
pop
jmp
pushl
add
jmp
cmp
je
mov
jmp
pushl
push
push
call
jmp
pushl
jmp
incl
nop
nop
nop
nop
nop
jmp
mov
push
jmp
add
add
cmpl
jmp
call
nop
nop
nop
nop
nop
mov
push
push
call
jmp
pop
movzbl
incl
jmp
jne
call
push
jmp
mov
add
mov
lea
jmp
mov
and
jmp
pop
pop
nop
nop
nop
nop
nop
pop
pop
leave
jmp
push
push
pushl
jmp
ret
xor
jmp
add
add
add
sbb
add
inc
nop
nop
nop
nop
nop
shr
je
test
je
jmp
call
push
push
nop
nop
nop
nop
nop
mov
call
push
jmp
mov
mov
sub
jmp
push
mov
call
push
jmp
mov
mov
incl
dec
jmp
push
mov
jmp
jne
jmp
call
push
push
mov
jmp
jmp
jmp
call
add
jmp
mov
mov
push
pop
jmp
mov
jmp
jmp
call
test
jmp
mov
pop
pop
jmp
pop
jne
cmp
jne
jmp
pop
leave
ret
add
add
add
xchg
cmc
incl
nop
nop
pop
je
nop
nop
nop
nop
nop
mov
mov
sub
mov
nop
nop
nop
nop
nop
mov
incl
dec
jne
nop
nop
nop
nop
nop
jmp
sub
nop
nop
nop
nop
nop
jmp
dec
nop
nop
nop
nop
nop
dec
mov
nop
nop
nop
nop
nop
shl
movzbl
add
nop
nop
nop
nop
nop
incl
mov
lea
nop
nop
nop
nop
nop
push
call
cmp
nop
nop
nop
nop
nop
pop
jb
inc
nop
nop
nop
nop
nop
cmp
jb
inc
nop
nop
nop
nop
nop
cmp
jae
inc
inc
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
je
mov
mov
nop
nop
nop
nop
nop
sub
mov
nop
nop
nop
nop
nop
mov
incl
nop
nop
nop
nop
nop
dec
jne
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
mov
mov
mov
nop
nop
nop
nop
nop
mov
incl
nop
nop
nop
nop
nop
incl
nop
nop
nop
nop
nop
xor
nop
nop
nop
nop
nop
cmpl
nop
nop
nop
nop
nop
je
mov
pop
sub
nop
nop
nop
nop
nop
pop
pop
leave
ret
add
add
add
add
add
add
add
fisttpll
add
add
add
fimuls
add
or
fimuls
add
fimuls
add
add
add
fisttpll
add
fisttpll
add
or
aam
or
push
fimuls
add
or
fisttpll
add
or
push
fisttpll
add
add
add
add
fisttpll
add
add
add
fimuls
add
or
fimuls
add
fimuls
add
add
add
inc
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
imul
add
incl
inc
gs
gs
je
jo
imul
xchg
add
jo
je
push
popa
addr16
add
roll
gs
popa
addr16
outsl
js
outsb
imul
push
push
inc
push
xor
cs
insb
add
or
inc
jb
add
dec
xor
cs
insb
add
mov
sub
add
add
add
add
add
add
lds
cmpsb
add
add
add
add
rolb
add
add
xchg
add
daa
sub
popa
cs
add
add
add
xor
add
nop
add
add
add
xor
add
add
add
rorb
add
add
jnp
jp
jge
add
add
add
add
add
nop
add
add
mov
pop
add
add
add
inc
add
sub
add
add
xor
xchg
fs
or
mov
dec
jmp
jg
pop
xchg
fs
int
add
xor
imul
cmp
cmp
cmp
or
cld
cmp
cmp
xor
xor
cmp
xor
cmp
iret
xor
aaa
sub
loop
nop
cmp
cmp
cmp
add
ds
cmp
xor
xor
lods
aaa
mov
aaa
add
xor
xor
ss
shll
ss
aaa
fs
les
lret
cmp
add
add
push
inc
aaa
dec
xor
sub
jg
cmp
sub
cmp
push
xor
aaa
xor
cmp
dec
pop
pop
cs
jne
gs
cs
pop
insb
pop
inc
aas
ss
inc
and
sub
pop
push
push
xor
jo
inc
popa
jb
push
dec
pop
dec
cmp
dec
inc
pop
dec
inc
and
jl
ja
and
dec
pop
pop
insb
inc
imul
sub
sub
pop
dec
xor
jge
pop
jbe
pop
imul
jp
outsb
inc
subl
dec
and
push
dec
push
xor
inc
xor
cmp
push
and
addr16
xor
and
inc
jge
outsl
inc
push
dec
sub
jg
and
pop
outsb
inc
jnp
jno
push
pop
jle
and
pop
js
jae
push
push
push
and
sub
dec
andb
jo
push
daa
imul
das
and
jns
xor
jl
jl
pop
es
pop
and
es
push
sub
push
arpl
sub
imul
sub
pop
inc
.byte
.byte
.byte
