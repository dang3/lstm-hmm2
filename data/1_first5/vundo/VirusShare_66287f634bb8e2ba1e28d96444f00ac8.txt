shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
mov
test
je
mov
mov
test
jle
mov
test
jne
movl
mov
mov
test
jle
mov
test
jne
movl
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
mov
cwtl
mov
call
data16
inc
sbb
push
push
pop
test
mov
mov
cmpsb
clc
xchg
enter
sub
js
inc
sbb
push
push
pop
sub
mov
add
mov
orb
xor
push
sub
jne
mov
out
out
leave
cmp
adc
xor
int
in
scas
arpl
push
inc
aaa
lcall
dec
addr16
pop
pop
mov
rcrb
mov
mov
xchg
sbb
stos
jg
hlt
ds
sub
mov
test
imul
cmp
jmp
test
arpl
xor
dec
mov
mov
aad
dec
sbb
or
and
pop
mov
outsl
test
js
test
jae
jae
out
sub
arpl
popf
pop
jne
mov
sahf
cmp
inc
sbb
pop
push
pop
lds
stos
cwtl
mov
loop
xchg
enter
sub
cmp
push
bound
test
nop
mov
fadds
mov
dec
daa
dec
push
pusha
daa
pop
pop
or
bound
sbb
test
mov
fbld
cmc
fmuls
daa
dec
xor
ja
or
arpl
aad
cmpsb
loopne
std
repz
xchg
jbe
data16
inc
sbb
push
push
pop
imulb
cwtl
mov
cmpsb
clc
xchg
enter
sub
push
or
ss
push
pop
imulb
cltd
and
adc
sub
sub
scas
icebp
jns
sahf
icebp
push
lods
inc
pop
sbb
pusha
stos
xchg
pop
les
gs
inc
xchg
push
pop
pop
in
daa
mov
mov
push
testb
aaa
lret
cmp
jb
and
or
nop
inc
les
movsb
testl
xchg
in
call
out
cmpsl
sbb
mov
sub
add
movsb
outsl
push
rorl
cmpsb
mov
mov
pop
cmp
xor
loop
ds
jo
mov
pop
xchg
sub
sahf
test
int3
dec
in
stos
mull
xor
cmc
rorb
mov
pop
fsub
in
push
jl
or
arpl
dec
xchg
jbe
out
add
cmp
pop
in
adc
lret
lods
push
mov
mov
mov
arpl
popa
pusha
pop
sbb
and
js
aas
xorb
push
daa
dec
in
std
pop
pop
movsb
xchg
jb
or
repz
dec
repnz
push
or
arpl
std
cmp
cmp
adc
cmp
xchg
shrb
je
cmp
push
into
dec
mov
add
pop
jae
hlt
iret
sub
ja
sbb
popa
inc
or
mov
or
push
ss
cmp
mov
daa
jno
pop
add
push
data16
pop
pop
insb
stos
mov
and
dec
adc
mov
sbb
call
int
xor
mov
mov
mov
daa
xor
adcl
and
repnz
sbb
sbb
inc
xor
xchg
adc
movsb
pushf
or
and
fs
mov
cmc
in
movsl
or
jge
cmp
xor
push
jne
jnp
mov
in
add
pop
cmc
lock
rolb
dec
int3
outsb
and
aas
dec
daa
and
mov
jecxz
movsb
cmpsb
inc
arpl
mov
jecxz
pop
ljmp
adc
in
mov
imul
icebp
pop
push
aad
or
mov
mov
in
push
sub
aam
xor
mov
xor
lcall
jo
pop
lds
cmp
fwait
enter
daa
pusha
cltd
mov
mov
or
add
outsl
mov
shrb
cltd
leave
movsb
repnz
subl
add
hlt
cmp
dec
insl
mov
mov
into
gs
xchg
inc
xor
xchg
int3
add
clc
xchg
mov
push
jne
cmp
xor
jmp
add
or
mov
sbb
ds
mov
test
sub
xlat
pop
cmpsl
inc
out
xchg
or
xor
scas
mov
mov
pusha
je
xchg
push
and
popa
jg
mov
pop
dec
out
fcmovnu
sbb
inc
ds
push
push
jmp
sub
int
add
sbb
rclb
xchg
loope
repnz
inc
add
dec
mov
adc
mov
pop
jb
fistps
mov
test
mov
and
pop
out
mov
stos
lahf
in
jne
scas
xor
clc
inc
sub
adc
xchg
pop
jnp
mov
mov
popa
outsl
fmulp
adc
in
mov
xchg
out
roll
xchg
ja
jns
rclb
xor
orl
pop
sub
xor
stc
dec
shll
xor
mov
pop
in
outsb
add
imul
addb
adc
jnp
dec
xor
jg
and
test
cli
hlt
imul
dec
pushf
sub
mov
cmpsb
sub
pop
es
fs
cwtl
inc
loopne
leave
mov
sbb
jo
push
sbb
cmpsb
in
jmp
push
cmc
movsb
ss
xor
std
xchg
push
out
frstor
pushf
jne
cmc
pop
adc
lea
rcr
push
adc
lds
push
inc
mov
sub
adc
or
je
push
mov
arpl
mov
inc
pop
test
leave
lods
sarb
mov
mov
in
mov
mov
push
mov
xor
jo
dec
sub
mov
mov
push
lahf
sub
mov
aad
add
mov
jae
inc
or
mov
xchg
sub
or
inc
ja
push
pop
sbb
sub
or
lcall
cmp
mov
pop
inc
dec
jle
pop
jecxz
xchg
dec
jne
jmp
xchg
jae
enter
dec
xor
popa
jge
mov
gs
jb,pn
stos
pop
pop
sub
adc
insb
inc
fwait
lock
cmpsb
cmp
psrlw
mul
imul
adc
clc
fwait
push
cli
test
inc
jno
pop
fdivrs
cmpsl
ffree
push
aas
cmc
pop
push
jl
mulb
loop
mov
shrl
jne
cwtl
out
in
sarb
and
push
aad
xchg
addb
sbb
lcall
push
out
outsl
mov
int
iret
pusha
movsb
sbbb
loopne
outsl
add
aaa
sub
push
in
mov
rcll
sti
imul
loop
scas
xchg
pop
in
ljmp
mov
cmp
test
jo
inc
gs
cld
adc
add
adcb
jns
mov
in
out
fmul
inc
xchg
inc
xchg
test
sub
add
data16
push
movsl
cmpsb
fisubl
jecxz
cmpsb
test
mov
lods
ja
mov
xchg
adc
aam
aad
movsb
test
aas
lret
pop
mov
pop
in
fcoml
test
sub
outsl
jg
xchg
enter
pop
jbe
or
mov
cmp
cwtl
or
mov
ffree
lea
adc
mov
add
push
movsl
shlb
dec
test
out
push
mov
push
jl
mov
xor
jo
mov
in
dec
loope
mov
outsl
jle
cwtl
xor
mov
adc
sar
or
mov
push
lret
test
insb
jp
dec
xor
mov
push
stos
mov
aad
movsl
mov
subb
adc
movsl
sbb
daa
xchg
in
loop
in
mov
add
sbbl
mov
jecxz
es
pop
cmp
sbb
inc
popf
or
push
cmpsl
sub
cmp
push
sbb
xlat
call
sbb
out
lock
push
bound
inc
sbb
and
arpl
push
daa
cs
inc
xchg
add
cmp
mov
in
sti
dec
add
push
mov
jle
cmp
js
jb
cmp
push
rol
aam
popa
add
xor
leave
cmp
jmp
add
out
in
push
les
adc
loop
fidivrs
repz
shr
cmp
mov
xchg
scas
xor
subl
sub
adc
add
iret
sbbl
lods
and
aaa
pop
jno
imul
popf
xchg
inc
cltd
cmovg
sarb
jnp
jecxz
shlb
loop
inc
movsbl
sub
inc
or
push
dec
ret
sub
inc
mov
ds
das
inc
retw
imul
sbb
mov
push
push
rcll
xchg
adc
es
aad
xchg
add
sti
clc
std
or
aaa
jno
dec
mov
mov
leave
mov
adc
jle
lret
push
sub
xchg
js
mov
push
popf
aaa
lcall
pop
popw
jle
nop
mov
lea
xchg
sub
jne
cld
jmp
cmp
xchg
je
sarl
aam
ljmp
sbb
int3
jle
xchg
sub
push
cmpsb
ja
orb
or
and
sbb
push
sbbb
mov
xchg
dec
les
pop
pop
mov
cltd
jno
push
clc
loop
mov
adc
sub
leave
or
add
cmp
loop
xor
sbb
push
imul
and
dec
jg
sbb
in
push
pop
mov
sqrtps
test
dec
mov
arpl
addr16
sbb
roll
rcrb
int
out
and
dec
out
fdivp
cmp
repnz
stos
push
insb
and
cld
mov
test
ljmp
cli
rorb
pusha
fidivrl
shrb
cli
aas
push
pop
movsb
sub
jmp
sub
js
lds
or
test
stos
lret
icebp
cmp
mov
adc
scas
and
sbb
pop
inc
add
mov
in
ret
xor
add
mov
lcall
movsl
add
sarl
leave
loope
xor
pop
inc
fs
mov
les
lcall
fldenv
cld
loope
loop
inc
mov
pushf
sbb
rorb
xchg
fprem
mov
shrl
test
dec
js
xor
lock
pusha
pushf
cmp
std
sbb
jae
and
mov
jo
daa
sbb
add
loope
push
push
jge
insl
mov
sub
mov
push
xor
sbb
stc
inc
xchg
clc
out
jmp
jne
mov
cmp
cmp
dec
pop
xchg
adc
adc
fmuls
arpl
out
xlat
sub
in
push
rorb
gs
jmp
lea
pop
adc
fcmovnb
fldt
cmp
sub
ja
addl
jae
xor
ror
ror
jecxz
mov
dec
rcll
dec
adc
or
jo
movsl
adc
push
adc
xor
fstp
rcrb
jp
jae
lods
jle
movsb
adc
cmp
xchg
adc
popf
repz
movsl
cli
adcb
push
dec
xor
or
dec
ja
ret
adc
jge
or
inc
inc
sub
cmc
sub
nop
f2xm1
push
mov
out
lret
pop
test
jecxz
cmp
insb
jg
cmp
push
cmpsb
std
fwait
rolb
jae
loope
pop
jle
lret
movsb
mov
xchg
iret
pop
fisttpll
pop
push
pop
outsb
loop
sbb
xchg
push
mov
icebp
cmp
jns
cmp
mov
xor
xchg
icebp
sub
sbb
rclb
popa
call
push
xorl
add
xchg
dec
xchg
dec
out
std
xchg
lds
mov
mov
cmp
xchg
hlt
add
ret
inc
or
imul
mov
mov
add
push
inc
xor
scas
sub
dec
ss
hlt
subb
xchg
adc
pop
inc
outsl
test
mov
or
fs
fnstenv
mov
lods
adc
cld
cmp
push
pusha
mov
inc
lods
aam
jb
jmp
or
mov
loope
in
js
sahf
mov
inc
jae
jp
in
mov
fistps
jge
xchg
test
or
call
add
mov
mov
scas
cwtl
add
outsb
in
lcall
stos
sbb
and
jle
mov
dec
popf
cmp
xchg
mov
dec
push
dec
lods
enter
push
or
add
xchg
sub
jae
int
pushl
hlt
sub
push
cmpsl
inc
sub
jno
aam
xor
xchg
repz
xchg
test
xchg
dec
mov
addr16
aad
cmp
out
and
shlb
gs
sbbl
and
cltd
sub
pusha
sub
loop
push
sub
jo
and
jne
and
scas
outsb
test
xor
fstpt
imul
out
jecxz
jle
je
imul
add
cld
jmp
cmp
xor
xor
sahf
push
xchg
adc
sbb
inc
xchg
data16
addr16
movsl
aad
pop
mov
sahf
push
jg
xor
js
or
push
and
lcall
push
xor
clc
aas
add
mov
out
not
inc
cmpsb
roll
inc
inc
dec
sti
dec
xor
ficomps
mov
jge
fsts
cs
push
lahf
jo
ss
inc
jecxz
mov
aaa
push
sbb
aaa
mov
fsubs
xor
out
out
cmp
xor
mov
test
or
pop
cmpsl
daa
movsb
lods
jno
ja
dec
test
mov
pop
adc
cwtl
dec
bound
xchg
fdivs
pop
loope
add
push
adc
sub
bound
mov
lea
in
les
adc
idivb
cmp
and
lret
pushf
sbbb
lock
mov
dec
inc
rsm
push
nop
pop
inc
add
cmpb
imul
ljmp
in
imul
xor
lret
test
mov
or
daa
stos
outsb
imull
in
shll
mov
sbb
and
jle
pusha
dec
jns
push
push
js
stos
and
lret
int3
data16
ja
pop
sub
sti
cli
sbb
cmp
mov
push
sub
aad
cmp
cli
inc
icebp
into
adc
imul
sub
test
mov
rcr
in
pop
sbb
or
insl
pop
or
inc
cmp
faddl
pop
jnp
aam
jae
jg
loope
cmp
fildll
addb
jnp
inc
lods
out
push
lea
rolb
cmp
mov
mulb
int
sub
or
or
pop
imul
pop
adc
sbb
incl
xchg
push
sarl
xor
cmp
dec
mov
or
pop
and
je
dec
pop
and
push
lods
jo
imul
outsl
es
xor
call
shrb
jp
mov
testb
cmp
lock
jge
dec
or
out
sub
pop
out
lds
mov
cmc
fnstsw
cmpsb
test
and
sbb
cmp
mov
ja
sub
nop
out
mov
test
add
pop
xchg
push
push
push
dec
rol
lret
sbb
out
push
push
mov
cli
outsl
or
jp
mov
lret
mov
push
dec
je
sti
stos
mov
sbb
adc
and
mov
test
out
into
fnstsw
jbe
jb
xor
dec
mov
les
jne
cli
inc
enter
test
sbb
orl
sti
or
dec
xlat
inc
ja
repnz
aaa
dec
popa
dec
or
dec
sub
add
in
push
jl
cli
lahf
sahf
xchg
xorl
test
jnp
mov
dec
mov
pop
push
in
cld
enter
imul
js
fisubrl
stos
mov
push
push
data16
out
jno
lahf
xchg
rcrl
jmp
aas
mov
mov
lret
lods
js
dec
lret
push
inc
mov
xor
mov
cltd
xlat
jecxz
add
mov
lds
sbb
cli
jg
xorl
inc
stos
push
cmpsl
pop
push
sub
cmp
inc
mov
fwait
mov
cmpxchg
lahf
pop
push
mov
jo
and
cld
ja
sbb
dec
dec
cli
push
adc
subb
mov
popa
fdiv
inc
dec
jle
jae
cwtl
mov
adc
mov
orb
out
mov
dec
pop
adc
mov
out
insl
inc
mov
mov
or
call
xor
addl
out
add
lds
cmp
sti
sbb
pop
popf
shll
movmskps
dec
je
lods
inc
jl
flds
fcompl
jle
xlat
test
aas
mov
push
or
push
and
mov
or
popa
and
push
dec
out
mov
ret
pop
mov
cmp
jb
mov
outsl
sti
outsl
adc
mov
stos
sbb
cmpsb
xchg
mov
mov
pop
mov
or
sub
adc
nop
adc
xlat
xor
hlt
addr16
aad
jle
mov
stc
ss
xlat
and
fbld
cli
mov
lcall
ja
std
test
lret
jns
xor
and
les
repz
je
sub
pop
test
ret
mov
jo
and
ret
mov
call
sbb
xchg
dec
stos
pop
xor
sbb
stc
fadd
aaa
add
ds
sub
sbb
cmpsb
xchg
xor
cmc
icebp
adc
les
xor
popa
or
inc
jmp
outsb
xlat
xchg
inc
icebp
test
push
test
push
fiaddl
cmp
cli
aad
in
push
loope
and
pop
inc
add
jne
mov
outsb
pop
insb
jne
ficompl
fldt
lock
loopne
push
adc
rclb
loopne
jle
jne
mov
and
add
sub
rolb
nop
push
push
dec
cld
mov
sti
mov
add
jns
popa
xchg
dec
mov
jg
repnz
jnp
aas
jmp
je
inc
jp
mov
mov
adc
push
fisubl
xchg
notb
punpcklwd
mov
cmpsb
xchg
xchg
nop
clc
mov
stos
iret
arpl
fmuls
loopew
adc
pop
aas
mov
leave
xor
pop
adc
pop
jle
add
push
jb
cmp
pop
rorb
inc
jno
popl
cmp
std
cmpsb
sub
jge
sbb
cmc
ret
sub
dec
or
aas
dec
jp
sbbb
jmp
negl
fisttps
pop
jb
adc
push
divb
xchg
iret
mov
xlat
and
jle
sbbl
xchg
cld
jo
jmp
pusha
ud0
jne
add
inc
pushf
pop
dec
incl
and
leave
orb
mov
clc
sbb
mov
jle
sub
dec
dec
xor
sbb
inc
xor
jne
icebp
sub
pop
and
mov
inc
jne
xor
sbb
jno
fsubrl
inc
cmp
jmp
push
xabort
arpl
loopne
bound
pop
out
cmp
lods
inc
mov
lret
add
fidivl
cli
dec
movl
stos
pop
inc
jp
sbb
sti
cmp
mov
xchg
xchg
sbb
and
ret
push
xchg
dec
push
mov
int
ror
or
pusha
push
shl
sbb
lret
jne
mov
push
sub
rcll
je
jo
cmp
pusha
push
pop
test
jge
popf
and
aas
jnp
sbb
fs
rcll
or
xor
arpl
sub
push
popf
mov
xchg
sub
das
mov
adc
cmp
pushf
call
gs
shll
add
push
sbb
sbb
lds
jecxz
cmc
push
mov
ficomps
mov
xchg
lock
out
or
mov
lods
jge
insb
xor
leave
out
mov
add
js
jnp
std
push
int
jno
gs
pop
lods
push
enter
js
mov
mov
pop
data16
call
gs
cwtl
cld
rcll
dec
mov
repnz
rcrb
fwait
mov
xorl
fldcw
xor
repz
mov
cmpsl
xchg
cmp
mov
lock
test
fimuls
cmpsl
out
iret
push
bound
std
and
inc
push
push
push
outsl
popa
jb
add
add
or
arpl
test
fs
mov
shlb
imul
and
lea
call
hlt
mov
cmp
sub
lods
aas
push
data16
xchg
jle
fwait
mov
ud2
addr16
add
pusha
mov
add
imul
sub
rorl
jmp
dec
cmpsl
cmp
xor
subl
sub
mov
jae
xor
push
xor
adc
jnp
push
cltd
insl
arpl
ficompl
dec
add
jmp
mov
jo
lahf
lods
pop
lods
inc
insl
dec
icebp
mov
cld
and
pushf
mov
subb
mov
sarb
jecxz
pop
ret
dec
stos
divl
lretw
addr16
je
sbb
test
inc
bound
imul
cmp
outsl
jmp
inc
jp
pop
xchg
xor
lret
ljmp
call
insb
loopne
test
neg
sahf
dec
ret
sub
mulb
mov
adc
ret
mov
loope
int3
jb
iret
loope
sarb
dec
cmp
jbe
lahf
add
aad
cmp
mov
xlat
mov
push
inc
and
jp
jle
fbld
xchg
rcrl
mov
or
repz
inc
sbb
or
adc
xchg
mov
push
test
lcall
jnp
stos
inc
movsl
stos
lea
movsl
std
in
cltd
inc
aaa
lahf
mov
mov
cs
xchg
sub
mov
mov
cmpsb
clc
xchg
enter
sub
push
or
ss
push
pop
imulb
cwtl
mov
cmpsb
clc
xchg
enter
sub
push
or
ss
push
pop
imulb
cwtl
mov
mov
fdivs
data16
inc
sbb
push
ss
out
test
mov
mov
mov
xchg
enter
sub
outsl
inc
loopne
xchg
mov
cmpsl
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
inc
cmp
jb
mov
jge
push
jns
insl
ret
jge
mov
cmp
add
fnstenv
sub
jb
add
imul
mov
cld
mov
fnstenv
out
jp
push
sbb
and
push
xor
mov
mov
subb
lods
sub
push
push
jbe
nop
jecxz
cmc
mov
push
imul
bound
addl
insl
into
imulb
insb
adc
cmpsl
cmpsb
cmpsl
mov
inc
sti
push
push
data16
shr
xorb
push
scas
jo
inc
xor
rcll
adc
cwtl
jg
orb
adc
inc
cmp
stos
sbb
adc
cltd
xor
dec
cmp
dec
xlat
or
in
xchg
sub
mov
adc
out
in
idiv
dec
or
cwtl
ret
lcall
jp
xchg
cld
pop
mov
and
adc
cmp
dec
mov
lods
mov
mov
or
jb
adc
pop
sub
fstpt
jmp
lcall
sti
cmp
inc
pop
jne
gs
je
outsl
sub
push
ret
fsts
mov
fbld
or
sub
cmp
xor
sbb
mov
xorb
mov
push
jne
gs
xor
xor
mov
repnz
fnstenv
sub
jb
add
imul
mov
repnz
fnstenv
jg
fs
outsb
push
push
ljmp
test
notb
and
mov
cmpsl
jo
fwait
lods
ljmp
mov
sub
lock
lods
mov
lods
xchg
arpl
dec
testb
rcrb
push
std
add
ds
mov
fisttps
addr16
test
jge
dec
adc
fsubrs
xor
mov
add
lds
xor
push
cmpsb
and
mov
sub
mov
or
out
fmull
or
mov
push
sbb
mov
sbb
aas
imul
mov
fldt
jp
shll
insb
les
and
pop
inc
outsl
xor
xchg
push
cmp
jmp
imul
pop
stc
fwait
inc
in
or
movsb
cmpxchg
adc
outsb
mov
cmpsl
cmp
jns
jbe
iret
scas
fimull
pop
or
movsl
repnz
fiadds
je
rclb
dec
movzwl
test
int3
enter
sahf
sbb
mov
sub
jno
xchg
lahf
add
arpl
ja
mov
cmp
mov
in
ror
mov
jo
cltd
cmp
outsb
or
repz
shl
test
out
and
mov
push
jl
loopne
fadd
repz
pop
push
inc
in
mov
add
mov
mov
mov
jno
popf
xchg
inc
ss
aad
sub
mov
cwtl
or
jp
xchg
push
sbb
test
inc
fucompp
mov
inc
adc
js
adc
imul
fildll
stos
ret
in
int3
inc
popf
dec
cmpsb
insb
loope
dec
sbb
mov
cmp
fwait
neg
movsb
flds
rcr
leave
dec
out
out
mov
scas
mov
imul
ror
push
cld
mov
mov
cmpsl
sub
jb
popa
rolb
jmp
pop
sbb
lret
mov
lret
rcll
mov
push
lds
and
int
loope
mov
pusha
scas
cmp
rolb
lahf
sbb
push
fdivrs
in
icebp
insl
sbb
pop
mov
fbld
xor
xchg
mov
xor
cmpsl
repnz
xor
out
bound
nop
sti
add
jmp
jne
xlat
stos
sbb
cmp
push
mov
cmpxchg
popf
aas
stos
mov
mov
cwtl
mov
inc
push
cltd
call
scas
pop
fwait
out
jmp
xchg
fwait
out
outsb
loopne
icebp
lret
ret
cwtl
push
add
mov
scas
lea
in
fidivrl
adcw
xlat
pop
enter
scas
loopne
mov
mov
sahf
mov
push
popf
pop
jnp
xchg
rcrb
enter
xchg
mov
icebp
push
sbb
ss
jnp
xor
or
nop
and
sbb
popa
les
les
cld
aas
call
inc
popa
jno
cmp
cltd
jae
xchg
and
add
jbe
shlb
or
sub
sub
cmp
xchg
push
mov
fldl
lret
xchg
mov
fistps
inc
inc
ret
sub
rcl
ficompl
data16
sbb
pop
fwait
outsb
dec
adc
jo
pop
push
adc
cs
nop
mov
movsb
movsl
popa
push
mov
xchg
sbb
testb
test
and
dec
xor
fidivrl
jne
pop
cld
and
int3
lahf
mov
popf
mov
dec
inc
das
outsl
jo
or
mov
push
mov
mov
or
mov
leave
xor
jp
sbb
sub
push
cmp
clc
stos
adc
sub
sub
lods
push
xor
sbb
cltd
sahf
and
mov
cmpsl
dec
das
push
push
repz
in
xchg
adc
mov
je
dec
pop
aas
jl
adcb
push
push
cmp
pop
into
dec
and
leave
jne
jns
fyl2x
and
int
rcll
jecxz
mov
add
mov
or
sbb
lds
pop
xor
xor
xchg
push
lock
jp
lret
in
out
sub
cmp
stc
add
jge
mov
es
test
and
mov
mov
and
div
mov
outsb
into
sub
mov
cwtl
jp
sub
gs
add
lea
shll
push
test
sub
popf
adc
lahf
mov
push
cmp
test
sbb
mov
ret
mov
popl
adc
dec
jmp
lahf
mov
dec
inc
xchg
fistl
in
into
popa
imul
pop
inc
scas
mov
insl
ja
pop
or
pop
iret
or
dec
cmp
ljmp
into
aas
test
lret
mov
xor
jl
cmp
decb
decb
push
fsts
mov
inc
test
or
ljmp
inc
dec
ds
cs
jp
daa
dec
cmp
filds
fcomp
jge
mov
mov
insl
movsl
push
jecxz
cmp
adc
mov
out
sti
daa
les
pusha
adc
adc
imul
fistpl
vrcpss
stos
jo
rsqrtps
push
in
shll
dec
repnz
addr16
and
test
pop
lods
jecxz
mov
push
or
cmp
cmc
adc
test
loopne
mov
loop
mov
movsl
sub
or
mov
inc
ret
or
pop
clc
stc
rorl
stos
aas
jbe,pt
hlt
push
sahf
fidivs
in
mov
xchg
sarl
adc
sub
jge
lret
or
ror
rcll
sub
ds
ror
iret
adc
shrl
testl
jmp
mov
sub
cmpsl
cmp
pop
cmp
cmpsl
repz
movups
lret
mov
lahf
call
and
dec
jns
xor
sub
ss
jmp
mov
and
cmc
lcall
outsb
pop
dec
dec
das
sbb
jl
sbb
and
xor
cmp
in
ja
sbb
int3
fbstp
pop
pop
ljmp
cmpl
jns
cmp
subl
fisubl
stc
fdiv
jle
inc
xor
and
jo
hlt
add
mov
stos
pop
imul
mov
jmp
cmpsl
mov
dec
and
pop
inc
jge
mov
add
jl
stc
addb
add
dec
andb
cmp
fldt
and
and
ljmp
fstl
jae
jns
pop
pop
sub
sbb
dec
mov
sbb
dec
mov
mov
clc
clc
lods
test
outsb
outsl
cmp
inc
and
sbb
in
push
inc
jbe
idivl
pop
push
repnz
addl
cmpsb
adc
and
testl
mov
movl
stos
sub
iret
sahf
pop
clc
jae
add
jns
pop
shlb
sub
aam
push
xchg
push
lahf
stos
mov
cmpsl
loope
mov
fisubl
mov
in
cmpsb
push
sub
mov
mov
mov
scas
roll
mov
xor
mov
mov
stos
mov
ljmp
push
push
push
cmp
repz
xor
cmp
xlat
jmp
xchg
or
mov
out
mov
inc
sub
and
out
cli
mov
aas
mov
in
pop
lods
fisubs
adc
cwtl
lea
sub
jge
sbb
push
xchg
jmp
jns
popa
pop
add
mov
or
sbb
out
adc
pop
sub
aad
push
pop
mov
rcrl
jl
in
out
ret
out
sbb
pop
pop
cmc
mov
and
icebp
and
test
dec
inc
pop
test
movsb
mov
push
out
mov
not
dec
mov
gs
std
sbb
loop
or
pushf
sub
shr
in
mov
pop
call
mov
add
stc
leave
cmp
insb
aam
sbb
cwtl
adc
or
imul
fisttps
jp
mov
or
fisubrl
pop
push
push
jg
clc
jbe
xor
pusha
xchg
outsb
or
cmp
test
movsl
bound
add
or
mov
push
mov
shll
mov
mov
sbb
fisubs
mov
nop
fidivs
std
xchg
sbb
xchg
andb
sub
les
in
sbb
sbb
inc
iret
push
ret
loopne
in
cmp
and
xchg
les
dec
xchg
lret
xor
push
push
cwtl
lds
repnz
add
sub
push
pop
imul
pop
and
adc
sub
rcr
pop
insb
lock
cmpsb
and
fs
rclb
insb
jle
dec
sub
xor
cld
test
mov
insl
clc
es
icebp
lret
lahf
adc
cmpsb
pusha
adc
cli
ja
faddp
lods
scas
xchg
dec
or
out
adc
push
sbb
sbb
ds
xor
pushf
popa
popa
clc
data16
jnp
pop
lea
jbe
xchg
lods
std
push
aaa
cltd
fwait
xor
fwait
xchg
cmc
mov
lret
in
sub
xchg
loopne
mov
jns
ss
pop
aaa
ljmp
jle
mov
jmp
sub
popl
jo
nop
cmp
in
pop
inc
mov
pop
gs
dec
jns
repz
pushf
lea
cmp
cmp
sbb
jg
outsl
dec
mov
nop
or
adc
add
push
out
xchg
rol
roll
sub
test
or
and
fimull
pushf
sbb
sbb
inc
leave
push
inc
sub
aad
loop
and
jl
jo
or
jle
mov
lret
push
mov
loop
nop
lcall
cmpsb
push
dec
xchg
jg
adc
jbe
das
sbb
jmp
mov
popf
push
cmpsl
xchg
inc
xchg
push
loop
dec
adc
cmp
rclb
clc
xor
fildl
std
in
lahf
and
in
leave
xor
xchg
lea
les
repnz
test
pushf
xchg
jmp
push
pushf
ja
arpl
jle
ss
dec
mov
fucomp
dec
cli
or
fcoml
mov
fwait
gs
scas
sbb
movsb
inc
add
mov
cltd
aam
bnd
mov
repz
mov
aad
scas
jno
dec
loope
push
mov
jmp
dec
pop
in
dec
cli
sbb
imul
xchg
dec
and
mov
flds
fldenv
cli
call
cli
pop
out
fdivr
addr16
std
stos
cmpsb
sti
sub
int
cmp
inc
and
addr16
scas
sbb
aaa
mov
cmpsb
adc
sub
or
gs
iret
mov
xchg
sub
ljmp
add
xor
cmpsl
sbb
ss
loopne
mov
jl
test
mov
cmpb
jne
sub
pop
cmp
imul
pop
es
decl
stc
sbb
pop
add
push
jg
push
mov
mov
mov
xchg
ds
push
test
dec
fistps
xchg
push
adc
push
inc
test
xchg
pop
pop
pop
add
test
and
jg
imul
xchg
cmpsb
iret
xor
mov
jmp
mov
mov
and
dec
fwait
inc
push
add
push
cltd
loope
test
and
mov
ds
cmpl
ja
xchg
cmp
pop
psubusw
rcrl
add
cli
in
jae
mov
xor
ret
loope
pushf
dec
dec
stos
and
cwtl
int3
std
mov
push
jg
dec
inc
mov
stos
xlat
sub
lcall
jb
gs
and
dec
lods
and
push
inc
adc
and
loope
jmp
and
pop
jg
das
out
adc
dec
jae
stc
fucomip
fcmovnu
sub
jb
mov
jge
mov
test
test
xchg
movsb
pop
inc
cmp
pop
loopne
bound
sbb
adc
mov
sub
mov
sbb
mov
jg
insb
xorb
and
ss
jnp
mov
pop
xor
lea
xchg
icebp
movsl
clc
and
popa
mov
lods
lcall
fs
mov
pop
orb
popf
push
pushf
xor
hlt
push
test
das
mov
lret
pushf
stc
jnp
xchg
movsb
xor
das
sahf
pop
scas
xchg
xchg
mov
sti
addr16
dec
aad
mov
in
push
push
into
cmp
addr16
mov
std
lds
repz
sub
inc
out
sar
shlb
nop
outsl
loopne
mov
scas
push
inc
subl
jp
jp
aad
pushf
sub
or
push
data16
test
push
inc
testl
pop
mov
repz
bnd
rclb
or
in
jne
aam
mov
iret
out
or
decl
sahf
pop
data16
sbb
sbb
jo
icebp
mov
sub
fstps
mov
mov
aad
xchg
xchg
sbb
test
cmp
loopne
jecxz
lea
adc
pop
das
jb
pushf
xor
mov
xchg
jnp
mov
push
push
mov
fs
bound
in
imul
jae
leavew
scas
mov
aaa
push
in
jne
mov
sti
jmp
sbb
scas
in
lods
xor
pop
sub
add
test
ret
ret
jne
add
sub
test
call
test
pop
pop
loope
jns
cmp
mov
mov
jns
test
insb
cli
dec
fildll
cwtl
or
movb
cmpsb
outsb
addr16
popa
xlat
pop
sbb
push
out
pusha
outsb
ret
jp
push
push
enter
or
int
fwait
out
scas
jp
lock
test
xchg
xchg
sub
loop
ljmp
loopne
call
mov
push
iret
imul
pop
pushf
xchg
and
imulb
and
dec
test
ret
mov
cmp
aam
gs
pushf
xor
mov
movsl
sarl
lds
cwtl
stos
mov
push
and
jbe
push
in
pop
inc
loopne
rolb
clc
push
or
mov
mov
push
sub
dec
imul
push
pop
stos
lret
xchg
dec
paddd
cltd
jecxz
out
push
push
push
scas
xchg
mov
xor
or
sub
add
inc
dec
jcxz
sub
cmp
stos
leave
cmpsl
nop
hlt
adc
iret
fcoms
bound
dec
and
jnp
fmulp
test
push
popa
loope
mov
sbb
jmp
and
mov
pop
push
mov
push
ror
inc
mov
or
loop
push
stos
push
mov
loop
ja
push
mov
mov
sahf
test
mov
push
or
xor
mov
push
fstpl
out
push
push
jae
xor
fsubl
add
cmc
mov
aam
push
cmp
inc
stos
mov
cld
ftst
and
mov
rorb
jno
stos
jmp
in
and
cmp
je
into
cmp
dec
or
sbb
aas
out
ret
cs
rorl
mov
xor
push
or
fnstcw
es
mov
mov
dec
das
loope
pushl
cmc
xchg
inc
test
push
xchg
in
aad
add
mov
and
adc
out
lods
daa
add
inc
stc
testl
popa
icebp
add
fiaddl
cmp
mov
ret
jbe
sub
outsl
out
daa
mov
inc
out
dec
jle
and
pop
pop
popa
test
and
sbb
cmpsl
ror
cmp
mov
dec
add
lahf
daa
xor
xchg
push
jmp
in
imul
add
sub
pop
mov
mov
popf
cmp
mov
ret
lds
sbbb
imul
mov
adc
es
cmp
add
jno
xor
test
mov
dec
sarb
aaa
dec
or
cwtl
jno
mov
xchg
loop
xlat
xor
jmp
repnz
mov
mov
sbb
jae
mov
in
add
push
mov
sbb
push
push
in
popf
xor
jb
sbb
pop
xor
xchg
mov
rcrb
mov
sub
xchg
outsl
xchg
push
add
sub
mov
clc
mov
cld
in
repz
and
hlt
dec
jg
popa
mov
out
pop
int
aas
jle
insb
adc
loopne
enter
lret
fs
jp
sub
mov
nop
aam
das
xlat
add
push
arpl
dec
push
test
jbe
cmp
pop
loopne
dec
xchg
in
cmpsl
mov
arpl
out
add
jp
mov
ljmp
das
outsl
mov
rcrb
scas
test
mov
outsl
les
ss
scas
cmp
inc
imul
xchg
sub
add
and
gs
dec
push
jb
dec
fldl
mov
repz
mov
or
dec
xor
fcmovu
jl
cwtl
xabort
or
mov
lcall
push
cltd
mov
dec
data16
or
push
sti
pop
mov
and
ret
mov
addb
xor
cmpsl
andl
arpl
pop
sbb
fdiv
lret
test
xchg
repnz
adc
call
sub
push
lock
js
and
in
jmp
lcall
ficoms
std
test
insb
adc
cmp
xchg
sbb
das
shrb
rorb
stos
xchg
les
scas
add
out
aam
cmc
fidivs
sahf
and
fcoms
cwtl
or
mov
inc
arpl
ja
mov
mov
mov
test
mov
mov
xor
push
les
cmpsl
add
repnz
mov
cmpsl
sbb
jae
test
or
pop
xchg
pop
arpl
shl
repz
mov
sbb
and
push
push
sub
gs
dec
pop
pop
adc
pop
push
sub
cmc
aaa
cmp
xor
ljmp
mov
pop
jp
dec
adc
test
lds
jb
xchg
xor
popa
push
mov
and
sbb
sbb
dec
or
pop
sub
cmovns
aaa
sahf
repz
sub
lea
sbb
andl
adc
adc
mov
test
ljmp
inc
imul
lods
pop
sub
in
in
cmp
outsb
xchg
and
aad
mov
cmc
add
push
fadds
xchg
mov
movsb
lcall
push
mov
push
call
and
pop
push
flds
xor
scas
jmp
push
cmc
test
or
pop
cmp
mov
addr16
aad
out
mov
nop
out
fldcw
adc
jae
xor
flds
int3
dec
lret
jmp
dec
xchg
stc
jo
cmpsb
push
fsubp
div
or
mov
cmp
cli
inc
pop
leave
call
fcom
jno
mov
cltd
dec
fimuls
or
xchg
int3
and
pop
test
addr16
pop
sub
add
nop
aad
jle
cwtl
in
dec
pop
imul
xor
mov
popf
sti
loop
icebp
push
pop
mov
jb
and
or
ss
mov
fsubrs
adc
fcoml
ffreep
pop
pop
std
out
jp
add
jl
pop
pop
je
inc
inc
dec
dec
cmp
xchg
xchg
stc
cltd
or
and
mov
inc
js
inc
jnp
adc
xor
push
or
adc
aad
mov
dec
dec
xorl
jns
or
adc
scas
sub
xchg
mov
pop
push
pop
fldl
mov
jecxz
adc
cmp
xchg
int3
fmull
pop
cmc
push
shlb
cmpxchg
popf
add
daa
fninit
aas
notl
in
cmc
push
or
cmp
mov
dec
lods
imul
mov
mov
or
fdiv
xchg
mov
sbb
sub
jbe
pop
cmp
mov
mov
dec
lds
xor
out
xchg
lea
mov
das
add
fs
or
ss
lret
mov
adc
xorb
insl
xorl
in
sarl
lahf
enter
xor
pusha
mov
loopne
and
arpl
adc
repz
scas
idiv
sti
iret
mov
stos
aam
adc
dec
mov
inc
clc
sbb
xchg
inc
xor
dec
cmc
das
pop
decb
addl
fsubrl
or
inc
mov
ficompl
sub
incb
cmp
push
pusha
inc
inc
fnstenv
xchg
push
adc
icebp
sbb
rcll
sbbb
xor
int3
cmpsb
sbb
jno
pop
inc
mov
jmp
push
lock
mov
insl
bound
fimull
loopne
mov
call
sbbb
lret
loope
mov
jb
daa
dec
jmp
mov
int3
in
and
jmp
movsl
inc
fisubl
aas
mov
mov
xor
sub
pusha
outsl
movsb
jo
mov
jb
add
imul
mov
repnz
fnstenv
sub
jb
add
imul
mov
repnz
fnstenv
daa
bound
jb
add
add
pop
xor
mov
repnz
mov
inc
fstl
arpl
jb
add
imul
cltd
repnz
cmc
sbbl
mov
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
fs
inc
inc
push
push
sub
pop
popa
push
jno
in
hlt
test
cmpsl
mov
test
je
inc
inc
push
push
and
xor
add
adc
in
hlt
divl
cmpsl
mov
test
je
inc
inc
push
push
and
xor
add
adc
in
hlt
stos
mov
cli
xlat
int3
cmc
xlat
ror
loop
xchg
sub
and
mov
popl
hlt
es
mov
das
mov
aam
out
outsl
enter
fldcw
ud2
loop
adc
xchg
dec
push
pop
addr16
xchg
pushf
jb
mov
jp
and
xchg
in
sahf
or
ret
add
cmp
xchg
and
aad
and
and
cli
out
jl
in
in
dec
cmp
sub
fsub
test
mov
cli
add
lahf
daa
aas
enter
inc
hlt
mov
pop
in
outsl
mov
xchg
popl
inc
mov
fsubr
cmc
xor
int3
lahf
xchg
mov
sahf
out
ret
xchg
xlat
cwtl
pop
mov
test
je
inc
inc
push
push
and
xor
add
adc
in
hlt
test
cmpsl
mov
test
sbb
adc
jge
popa
bound
movsl
mov
sahf
cmpsl
test
rolb
cmp
bound
sbb
adc
andl
loopne
div
xchg
stc
or
xor
and
xor
add
adc
in
hlt
test
cmpsl
mov
test
je
inc
inc
push
push
and
xor
add
adc
in
hlt
test
cmpsl
mov
test
shll
mov
xchg
loop
cld
jno
add
add
outsl
mov
fldt
jne
and
inc
rorb
jecxz
hlt
xchg
sub
sarl
mov
mov
cld
mov
ficoml
jne
dec
mov
in
test
cmp
pop
test
lods
int
mov
and
sti
sti
cltd
and
into
cmpsl
dec
imul
cmp
mov
shl
adc
clc
fwait
add
stos
iret
negb
sar
test
push
popf
fwait
imul
mov
adc
dec
sbb
cmp
js
cmpsl
int3
movsl
pop
rclb
into
xor
sub
sub
add
push
pusha
test
arpl
daa
in
jns
pushl
mov
insb
pusha
lahf
inc
movsb
mov
jge
icebp
jmp
push
data16
dec
aas
imul
into
push
jb
push
inc
mov
sub
sbbb
bound
in
or
pushf
mov
loope
cld
jg
loop
or
movsl
mov
fisttpl
mov
bound
add
and
cmc
sarl
cmc
mov
mov
pop
push
xor
cmp
xor
jb
xchg
adc
lahf
lcall
cmpsb
cmpsl
scas
iret
aam
test
xor
xchg
fs
in
jle
movsl
loopne
xchg
bound
mov
pop
lods
push
pop
add
jmp
adc
aaa
push
ret
xor
sub
test
mov
lcall
dec
adc
pop
lea
fldcw
lcall
mov
pop
subb
stos
out
xor
stc
pop
je
jge
leave
bound
pop
pushf
jb
sbb
cmc
mov
mov
jecxz
inc
lret
jnp
xchg
cmp
or
ja
in
and
xchg
mov
mov
mov
stos
adc
in
fsubp
sbb
nop
dec
xor
mov
test
stos
inc
and
xlat
mov
mov
outsl
push
push
adc
nop
and
cmpsb
xchg
sub
gs
ja
or
mov
lea
daa
cmp
in
and
xchg
test
aad
xlat
mov
lret
mov
fs
mov
jnp
js
jno
ret
mov
mov
aaa
add
gs
sub
jge
pop
push
push
add
sub
gs
pop
rorl
lret
mov
fdivl
xchg
adc
mov
or
add
lcall
push
dec
mov
push
and
test
cmp
call
sbb
inc
les
ja
push
insb
xchg
add
arpl
push
pop
test
xlat
sbb
or
fistps
jl
testb
cmc
xchg
push
mov
addr16
mov
xchg
mov
push
jnp
cltd
dec
cli
or
js
aad
lret
clc
out
push
dec
xor
mov
inc
js
pop
inc
jns
jp
mov
jp
push
das
jo
outsl
test
pop
outsb
fisttpl
popf
or
lret
jmp
es
imulb
and
or
cmp
mov
mov
jp
movsl
lods
rclb
lret
mov
inc
aam
mov
mov
lods
push
mov
inc
xchg
xchg
or
xchg
dec
stc
push
xchg
testl
dec
or
push
dec
or
mov
andl
cmp
jecxz
cli
inc
add
sub
pushf
or
dec
jle
decb
and
ret
push
pop
push
mov
mov
cmpl
push
or
mov
xchg
and
test
cld
sub
adc
ss
push
imull
mov
adc
pop
xchg
sbb
xchg
mov
xchg
cmp
aam
pusha
lret
jne
lahf
push
insl
or
int
jb
test
dec
js
xor
jmp
dec
cmp
or
jne
jns
sbb
dec
mov
add
shrb
cmc
sub
jp
aaa
mov
clc
call
mov
sub
popf
xor
icebp
inc
into
jbe
sbb
fcomps
pop
mov
sbb
and
jne
in
mov
int3
cmp
out
pushf
stos
cmc
jmp
lret
xchg
inc
mov
mov
add
mov
lea
imul
push
sbb
push
jge
pop
sub
jecxz
mov
push
push
adc
imul
pop
mov
push
mov
xchg
ret
test
xchg
hlt
mov
pop
sbb
popf
fists
or
int3
push
fisttps
pop
out
lret
add
fs
jae
add
push
gs
xchg
mov
imul
sti
fbld
lahf
repz
sub
test
incb
pop
xchg
inc
nop
add
loope
xor
repnz
addl
aam
in
jbe
scas
lods
jle
aaa
jns
pop
push
ja
mov
push
inc
cmp
cmp
jmp
dec
scas
mov
out
rorb
push
hlt
and
push
loope
sub
or
mov
and
sub
jmp
and
divl
insb
cld
bound
outsb
xor
dec
xchg
xor
int3
js
cmp
rcrb
fsubl
movsl
dec
xor
push
mov
push
test
lock
xor
mov
push
xlat
dec
jo
xor
xchg
loop
shlb
push
stos
dec
gs
jmp
xchg
into
std
inc
xchg
fldenv
mov
jge
xchg
fdivl
dec
jmp
rclb
mov
xor
jb
out
inc
xchg
lret
aad
mov
cmp
fwait
push
adc
insl
inc
int
jge
lret
fidivs
sahf
stos
das
aad
cmp
scas
aas
xor
dec
jb
fs
jmp
jo
filds
pop
addb
sbb
pop
adc
mov
jne
cmp
fsts
insb
jle
outsl
and
push
mov
pop
dec
pushf
mov
cli
push
mov
lret
popa
in
dec
mov
out
test
jle
xchg
jnp
sti
fildll
inc
clc
dec
jb
aaa
dec
rcrl
das
or
mov
mov
and
push
fbld
mov
inc
adc
adcb
daa
cmp
pushw
add
stos
mov
and
je
repz
jecxz
sti
lock
andb
push
jecxz
mov
movsb
test
lret
mov
sub
imul
dec
daa
imul
int3
jnp
sub
mov
mov
push
xor
mov
call
mov
pushf
sub
je
push
inc
mov
outsl
mov
das
inc
mov
bound
jnp
sub
add
cmpsl
add
mov
jecxz
cltd
jge
jbe
fisubl
mov
fsub
add
pop
test
scas
xchg
ss
stos
dec
mov
pushf
xor
addr16
test
push
lret
dec
arpl
mov
jmp
dec
mov
pop
movsl
gs
xchg
mov
mov
pop
jmp
pushf
int3
stos
push
frstor
xchg
adc
lods
and
into
jae
jp
orb
nop
or
aaa
filds
imul
push
in
shl
add
pop
paddb
dec
push
pushf
dec
add
mov
repnz
mov
andb
mov
imul
dec
push
mov
pushf
mov
movb
decl
mov
popa
int
movsl
scas
jle
pushf
mov
or
lcall
pop
stc
xchg
bound
inc
cmpsb
lret
or
xchg
loope
xor
mov
push
xor
jge
test
xchg
out
cmpsl
cmp
leave
jbe
shlb
in
cmp
repz
and
movsb
std
mov
add
dec
jne
fisttps
sbb
mov
int3
or
movsl
lods
mov
dec
sbb
js
jns
xor
xor
cli
and
sbb
push
inc
jge
cmpsb
aam
push
sbb
inc
rorl
and
out
jns
add
cld
ret
ficompl
int
sbb
mov
xlat
mov
adc
xchg
jecxz
dec
inc
jo
mov
inc
imul
inc
mov
dec
cmp
cmpsb
mov
fdivl
sub
or
cmp
push
stos
loopne
adc
ljmp
fs
test
loopne
cmpsb
scas
sbbl
mov
jo
in
sbb
inc
ret
inc
xor
pop
call
fstpl
xor
cwtl
adc
or
ficoms
sbb
sbb
scas
cwtl
xchg
in
push
and
fisttpl
pop
adc
adc
addr16
xor
divb
xchg
pop
cmp
loopne
addr16
std
mov
xchg
test
or
subb
in
adc
xor
ljmp
shll
xor
pop
or
adc
lods
add
pop
cltd
outsl
mov
test
popa
icebp
dec
sub
fistpl
stc
mov
or
scas
push
pop
arpl
pop
xchg
cmp
jno
adc
js
pop
add
mov
lahf
insb
out
pop
cwtl
std
lret
or
xchg
dec
movsb
xor
mov
pop
aaa
mov
sbb
add
inc
jl
push
test
mov
movsl
push
jnp
ss
adc
negl
cmp
movb
xchg
inc
pusha
popa
insb
rorl
xchg
mov
mov
push
sub
jno
cmp
mov
xor
aam
test
dec
int3
int
shrl
stos
xor
pop
subl
sub
inc
inc
and
mov
pop
and
repz
add
outsl
testl
xchg
cltd
fadds
pop
lock
daa
cmp
jp
push
push
rep
or
fwait
mov
es
jb
or
xchg
push
mov
aaa
stc
das
iret
cmpl
stc
into
dec
cld
stos
add
and
mov
aas
icebp
push
xor
fstl
test
inc
cmp
test
add
dec
repnz
pop
push
sub
notb
mov
loopne
inc
push
lret
cmp
fwait
lods
pop
mov
popa
jne
sbb
insl
and
or
lea
sti
sbb
jl
dec
jnp
arpl
fprem
mov
enter
dec
repnz
push
sub
pop
xchg
dec
push
mov
lahf
jmp
iret
mov
decb
dec
sub
jns
pop
and
pushf
nop
add
popf
mov
imul
and
jnp
add
stos
repz
mov
cli
ret
in
sub
pushl
ret
in
shll
rol
inc
xlat
adc
xchg
and
xlat
pop
jb
mov
jo
sub
lods
ljmp
sbb
add
in
lock
add
fnstenv
mov
ret
roll
fsts
push
jne
addl
in
ja
jo
imul
sahf
sub
imul
clc
pop
sbb
cmc
pop
divl
sub
arpl
ljmp
fnsave
hlt
xlat
in
pop
shr
cmpsb
mov
mov
or
mov
and
inc
mov
jne
aaa
pusha
fs
and
cmpb
inc
push
mov
stc
inc
or
inc
mov
push
add
mov
xchg
mov
shl
push
mov
imul
inc
inc
xor
lods
addb
mov
xchg
cmp
fidivl
add
cmc
mov
call
add
dec
cwtl
sbb
imul
add
loope
loop
sub
mov
rcrl
sbb
cmp
fdivrp
inc
rolb
ret
adcl
out
iret
arpl
inc
push
jl
push
shrl
cmp
and
pop
loope
jns
into
add
dec
mov
loope
mov
xchg
and
pusha
mov
cmp
push
insb
fldcw
sub
mov
pop
jno
ljmp
scas
stos
add
sbb
lock
faddl
test
cld
mov
xchg
call
jns
mov
popf
movsl
psubsw
jbe
xchg
stos
sbb
fcomps
clc
sub
push
lods
iret
push
fs
test
jmp
pop
shr
test
jmp
sub
jg
mov
jo
fwait
mov
ds
add
imul
outsb
dec
roll
std
xor
lods
mov
stc
jle,pt
pop
inc
scas
ret
pop
in
lods
repz
mov
int
push
pop
dec
mov
dec
sub
fdivl
xchg
sbb
push
ss
int
sub
jbe
repnz
imul
dec
pop
addr16
sbb
je
xchg
add
add
icebp
mov
pop
or
xor
fsts
out
inc
mov
inc
stos
inc
push
aas
lret
dec
or
or
push
arpl
stos
dec
in
or
cmpsl
cmp
stc
sub
mov
jmp
push
pushf
mov
in
out
loop
lret
add
loope
inc
fiaddl
or
dec
cmp
lock
les
aas
lods
in
mov
inc
scas
pop
mov
dec
push
inc
inc
push
or
fistpl
out
popw
lret
xor
lods
gs
xor
mov
fwait
mov
loope
notl
jnp
dec
dec
icebp
add
or
out
inc
adc
test
fildll
inc
sub
icebp
stc
inc
adc
ds
dec
hlt
cmp
jle
movsb
push
sbb
dec
push
js
ljmp
cld
sti
pop
add
into
mov
cmc
mov
fs
mov
jge
outsb
dec
dec
push
pop
inc
je
xchg
cmp
dec
cs
shl
add
roll
dec
call
shll
dec
xchg
mov
inc
or
mov
fdivs
sbb
sbb
mov
out
loop
add
xchg
mov
pushf
fidivrl
cmpl
rorb
lods
loop
mov
in
mov
add
and
aam
jno
subl
push
outsl
mov
int3
mov
adc
pop
pop
std
push
les
xchg
aam
scas
or
xchg
mov
data16
push
fldcw
leave
push
inc
xlat
ljmp
ja
or
cmc
mov
iret
cmp
mov
jg
out
sub
add
mov
mov
loopne
clc
jns
lcall
inc
sub
ret
and
loop
dec
push
xor
sahf
loopne
push
jl
sbb
add
or
mov
mov
jp
xchg
outsl
flds
js
jb
jl
imul
xor
lret
adc
xchg
xor
pop
popa
sbb
out
pop
aam
sbb
cmp
mov
and
sbb
inc
roll
mov
xchg
push
lret
inc
mov
sub
inc
dec
pusha
push
cld
jge
xchg
pushf
sbb
sahf
mov
loop
pop
jle
ficoml
or
ficoml
inc
aas
lods
sbb
popf
mov
fbstp
inc
addr16
add
inc
mov
adc
mov
fst
add
or
pop
mov
push
enter
jno
insl
xchg
std
sub
aaa
out
pusha
xor
or
dec
mov
push
call
lock
add
or
push
adc
bound
mov
lret
ss
mov
mov
xchg
cmp
push
js
test
mov
fstpt
pop
xchg
mov
loopne
inc
div
xlat
testl
int3
frstor
xor
cmpsl
gs
dec
pop
mov
shl
pop
jmp
sbb
mov
fidivrl
test
mov
cs
mov
adc
ja
fisttps
xchg
mov
jnp
xor
sub
popa
imul
cmpsl
cmp
fucomp
jb
popa
out
pop
lods
fistps
iret
cmp
push
std
jmp
or
insl
sbb
add
call
xchg
in
cld
dec
xchg
lcall
ss
adc
mov
repnz
inc
pop
and
je
mov
cmpb
imul
dec
shrb
xor
enter
dec
xor
aaa
imul
test
dec
cwtl
addr16
test
jmp
ja
adc
loope
pop
dec
inc
jmp
push
aad
gs
movsl
lahf
pop
je
shl
pop
mov
insl
fcmove
add
sub
inc
in
sub
xchg
daa
loopne
cmc
sbb
dec
cwtl
in
shl
int3
mov
mov
imul
in
jl
jno
idiv
adc
imul
imul
or
out
xchg
inc
fcoml
adc
sbb
movsl
adc
mov
fsts
push
jecxz
add
imulb
sub
pop
loopne
xlat
enter
cmpsl
mov
into
jmp
ljmp
sbb
mov
xchg
neg
insb
pop
push
stos
iret
push
xlat
cltd
faddl
outsl
movsb
mov
mov
idivl
xor
push
lcall
dec
dec
popf
fisttpl
or
lds
stos
jae
push
in
imul
ds
jp
mov
xor
into
std
repnz
adc
cwtl
mov
ret
or
jmp
mov
movsl
sub
mov
add
jecxz
jg
push
adc
inc
andb
push
and
cmp
cli
outsb
and
aaa
mov
pop
mov
stc
incl
cmpsl
cmpl
adc
sbb
cmpsl
in
dec
push
and
aaa
lcall
movd
flds
jno
inc
iret
push
push
lock
push
mov
loop
lahf
mov
mov
clc
shlb
popa
cmc
pop
inc
addr16
mov
push
insb
push
fcoms
mov
jg
sub
cmp
sub
or
stos
aad
sbb
xchg
stc
adc
imul
sarl
clc
add
pop
adc
cs
test
jl
js
sub
sbb
cs
sarb
outsl
inc
dec
jecxz
test
mov
cmpsl
mov
sub
lahf
xor
and
and
sub
cltd
ja
fstl
inc
inc
imul
ss
lods
aad
cmpsb
push
or
add
out
mov
les
xor
imul
loop
pop
aam
int
psrlw
jg
stos
std
jbe
mov
pop
fdivl
push
ret
jmp
pop
xlat
lret
xchg
pop
dec
fldenv
xor
push
pop
out
mov
or
sti
and
sahf
icebp
dec
mov
or
inc
jb
lahf
and
ret
mov
inc
jb
adc
pusha
adc
mov
lods
dec
mov
fdiv
sub
xor
aam
lock
int3
jecxz
ret
dec
ljmp
shll
xor
outsb
jge
or
cmp
orb
push
out
idivb
jno
or
ja
pushf
bswap
ret
xchg
loop
xor
jno
dec
pop
lea
inc
xchg
mov
in
mov
inc
pop
xor
xchg
hlt
sahf
sub
push
mov
lock
xchg
sbb
pushf
stc
scas
and
cmpsb
stos
adc
jo
rorl
outsb
xchg
lahf
lret
and
stos
fbstp
pop
stc
mov
add
dec
jmp
dec
adc
cmp
loop
call
std
loop
inc
imul
dec
dec
clc
rcrl
push
mov
push
movsb
dec
mov
mov
cmpsb
xchg
les
and
test
clc
sbb
jae
sbb
arpl
outsl
mov
inc
in
mov
mov
lea
jmp
js
outsb
mov
test
leave
dec
sub
addl
and
inc
xor
xchg
inc
cwtl
mov
int3
or
push
divb
pop
ja
xchg
jmp
fldt
adc
test
jae
adc
add
push
rorb
push
push
jb
enter
lret
xchg
aad
lcall
repz
mov
aaa
push
in
inc
pop
cmp
push
jne
cmp
push
add
inc
dec
das
cmpsl
xor
xor
pop
add
lcall
test
xor
ss
rolb
lds
lods
fistps
xor
xlat
das
push
bound
mov
mov
jp
aas
push
cmpsl
cmp
decb
cmp
lods
mov
sbb
mov
pop
es
jp
cmpsb
sbb
push
out
ja
and
jo
mov
sbb
repnz
pop
mov
pop
daa
inc
mov
int
jl
insb
pop
or
xchg
ss
dec
and
aad
xor
inc
adcl
les
sti
dec
addr16
test
in
out
outsl
jle
mov
xor
cld
pop
std
loop
lcall
or
data16
into
mov
ja
jg
mov
popf
mov
jnp
in
push
jne
cmc
data16
xchg
push
shlb
inc
push
push
and
xor
add
adc
in
hlt
test
cmpsl
mov
test
je
inc
inc
push
push
and
xor
add
adc
in
hlt
test
cmpsl
mov
test
je
inc
inc
push
push
and
xor
add
adc
in
hlt
test
aam
movsb
cmpsb
mov
test
je
inc
inc
push
push
and
xor
add
adc
in
hlt
pop
outsb
aam
shrl
cmp
jnp
imul
shlb
loopne
pop
xor
add
jg
add
inc
jmp
shll
adc
and
lock
loopne
nop
xor
fs
icebp
inc
loope
shlb
rcl
add
shlb
popa
lock
loopne
nop
xor
add
arpl
sbb
pusha
scas
adc
outsl
std
inc
hlt
dec
testb
mov
mov
into
mov
jb
sbb
push
cmp
popa
outsb
and
cwtl
jno
jno
cmp
int3
outsl
and
mov
cs
aam
mov
lods
rolb
adcl
cmp
inc
push
icebp
adc
jo
mov
popf
push
sbb
dec
sar
shlb
pop
mov
xchg
and
or
or
inc
inc
mov
adc
sahf
adc
or
inc
in
mov
cs
mov
stc
and
sub
ja
out
imul
jb
cmp
icebp
mov
movsb
dec
ds
mov
mov
popa
lock
loopne
nop
xor
add
inc
loope
shll
adc
and
xchg
jno
sbb
jbe
push
aam
mov
clc
jo
sbb
push
jecxz
in
sbb
mov
nop
jb
fs
xor
mov
xchg
adc
outsb
aaa
pop
hlt
push
aad
xor
xor
add
add
inc
loope
shll
adc
and
lock
loopne
nop
xor
add
inc
loope
shll
adc
and
insl
ds
xchg
and
cmc
js,pt
push
std
rcl
vprotd
mov
test
pop
repz
orb
test
cltd
addr16
lods
daa
dec
dec
xchg
mov
pop
sbb
adc
cmp
icebp
js
loope
ret
push
pop
repnz
dec
inc
test
pop
xor
test
popa
sti
es
sbb
sbb
dec
sbb
sub
xchg
lret
loope
jge
sbb
int3
mov
lock
shlb
mulb
jp
addr16
int
xchg
sbb
ret
xor
adc
dec
adc
or
mov
pop
dec
shrl
cs
xor
lcall
shlb
inc
insb
jp
outsl
fxam
pop
cmpb
jmp
mov
mov
fsts
lret
cwtl
jne
add
in
lahf
aam
xchg
mov
xor
daa
sub
mov
into
aas
and
ss
arpl
pop
mov
inc
xchg
cmpsl
mov
xor
mov
movsb
cs
daa
xor
or
mov
adc
loop
add
das
rcr
push
inc
cmpsl
xchg
push
insb
jg
sarb
cmp
pusha
test
push
xchg
inc
cmc
and
add
testl
add
dec
sbb
ljmp
pop
lock
call
ficoms
mov
push
push
test
das
mov
sub
fdivrl
mov
into
imul
jae
fs
cmp
stc
aaa
mov
inc
dec
call
pop
fidivrs
xor
inc
and
stos
ljmp
aam
fsubs
out
movsl
push
aaa
pop
int
xor
enter
cmp
jbe
jp
fstl
lret
cmp
lock
insb
test
out
mov
iret
xchg
repnz
jmp
cmp
mov
dec
fisubs
sub
popa
cs
cmp
nop
insl
out
mov
jecxz
pushl
mov
pop
movsl
daa
pop
and
popa
stos
mov
test
mov
dec
jns
lret
gs
stc
and
out
cmp
mov
popf
loope
push
es
push
stos
jns
roll
je
push
jp
sub
js
mov
out
ret
and
dec
ficompl
add
inc
sub
insb
push
ret
loopne
cltd
outsl
adc
test
jp
xchg
mov
aas
sbb
mov
mov
out
push
sbb
mov
mov
jle
sahf
sub
push
popa
jge
mov
mov
insb
outsl
fnstsw
gs
notb
xor
test
testl
adc
push
aam
out
repnz
add
xchg
and
sub
inc
adc
inc
out
xchg
mov
je
pop
scas
and
ss
mov
jnp
mov
popa
jge
add
mov
je
addb
jo
sub
out
pop
adc
or
sbb
in
gs
scas
mov
loopne
or
pop
lret
in
inc
sbb
xchg
test
dec
push
rolb
mov
xchg
flds
leave
and
in
pop
stos
lods
scas
mov
repz
dec
xor
rolb
lods
sbb
jg
stos
jecxz
les
pop
pusha
cmp
clc
mov
jle
sbb
mov
and
int
aas
xchg
scas
pushf
pop
ds
sub
push
pop
scas
pop
xchg
jg
sbb
sub
jb
pop
test
mov
push
addr16
je
xchg
inc
sub
jle
fsubrs
rcll
int3
jmp
xorb
inc
mov
adc
mov
mov
aam
sbb
icebp
hlt
insl
pop
les
adc
mov
mov
fiadds
orb
pusha
push
pop
pop
ja
adc
enter
cli
fdivs
addr16
xchg
inc
pop
jno
addr16
mov
es
inc
inc
icebp
popf
int
into
mov
xchg
sbb
lret
gs
cmp
cltd
setae
or
xor
not
test
rcll
bnd
aas
les
nop
xchg
or
xchg
mov
dec
cmp
cmp
scas
sbb
fildll
mov
shrl
movsl
add
xchg
adc
and
and
cmp
xor
aas
inc
sarl
loop
outsl
push
jecxz
mov
mov
xchg
sbb
cli
loope
dec
outsb
add
out
mov
outsl
xchg
inc
lcall
loope
insb
addr16
mov
repz
mov
add
aam
negl
cwtl
imul
xchg
sbb
mov
cwtl
fwait
inc
cs
jbe
mov
jns
sub
mov
popa
add
leave
mov
xor
fs
hlt
cs
arpl
cmp
fldcw
add
xor
pop
mov
inc
push
ss
pop
xor
mov
inc
pop
xor
jle
adc
jae
mov
sbb
lods
and
and
es
sarb
jg
dec
inc
mov
mov
mov
jno
mov
push
orb
inc
sub
movsb
cmp
les
das
sbb
cmp
in
push
add
out
cli
xchg
add
xchg
ljmp
xchg
push
inc
mov
sub
out
jge
into
jg
das
add
mov
rorb
dec
stc
mov
sbb
or
fisttpll
adc
or
shll
insb
insb
mov
jl
movsl
cld
idiv
mov
and
in
into
add
sub
mov
jno
dec
cltd
inc
iret
dec
loop
je
jmp
cmpsl
not
aaa
mov
in
add
pop
call
and
daa
and
fisubrl
int
iret
adc
je
pop
add
clc
add
enter
lret
inc
mov
adc
fiadds
test
mov
or
cmp
cmp
pop
dec
dec
dec
push
in
or
jno
jo
loop
test
data16
xchg
in
push
in
test
push
cld
jne
and
xchg
pop
add
std
xlat
ja
lods
pop
movsl
into
imul
push
xchg
sbb
fs
das
xor
jge
push
pop
add
jecxz
bound
gs
xchg
dec
mov
adcl
fsubp
pop
pop
add
xchg
adcb
sbb
xor
std
lods
fadds
mov
jno
inc
fiaddl
inc
test
test
filds
inc
push
and
out
js
mov
mov
ds
pop
gs
cmp
insl
mov
orb
mov
pop
cwtl
xchg
out
jecxz
in
push
fdivs
push
jne
or
repnz
cmp
add
call
rcll
in
push
or
add
lret
inc
cld
repnz
mov
dec
lods
lods
dec
jbe
mov
pop
loop
inc
out
xor
sub
gs
sub
out
insb
mov
pushf
imul
push
adc
pop
iret
int3
loopne
dec
aam
daa
mov
or
pop
dec
sbb
sbb
jmp
and
dec
mov
add
rcll
xchg
ss
cwtl
shll
and
in
adc
jne
aam
test
adc
adc
scas
xor
sub
sarb
dec
push
lods
popa
cmp
jecxz
shrb
jb
pusha
jb
fwait
pop
mov
xchg
nop
stos
dec
lods
scas
test
pop
pop
jge
and
je
xchg
out
add
and
mov
jnp
mov
outsl
std
jg
je
add
imul
out
sbb
cli
cltd
incb
sub
imul
ljmp
mov
mov
or
xor
ret
xor
sub
push
imul
add
inc
fidivl
sarl
outsb
fiaddl
jg
sbbl
cmp
pop
repnz
mov
sbb
popf
dec
push
and
in
xor
mov
scas
pusha
ss
push
fadds
incb
mull
sub
or
jb
push
xor
das
ret
fisttpl
mov
cmpsb
sub
or
xchg
or
dec
xchg
sub
and
sbb
ja
adc
xor
jg
sbb
popa
test
cmp
out
rcrl
pushf
sbb
add
mov
cmp
ja
lahf
roll
xchg
cltd
fisubs
xor
rolb
sub
mov
lret
loopne
sub
popa
sub
fisttpl
fsubrl
mov
nop
pop
test
mov
add
xor
and
inc
movsl
loop
mov
popa
xor
mov
aam
mov
loopne
xor
fildll
xor
lret
xchg
int
dec
cltd
js
pusha
test
andb
adc
loop
pcmpgtw
loopne
clc
popf
sbb
cwtl
lret
dec
push
out
into
mov
orl
mov
fisubrl
cmpsl
and
push
jo
xchg
testl
aaa
sbb
jne
cs
out
mov
adc
mov
ret
add
je
stos
xor
outsl
mov
sbb
std
mov
or
add
mov
mov
not
jns
cmp
rolb
jo
stos
inc
out
dec
sub
push
hlt
inc
pextrw
out
xor
lods
sarl
or
and
jecxz
sbb
js
cmp
lahf
pusha
push
adc
jge
mov
movsb
ret
sub
cmp
rcrb
and
sarl
mov
sbb
jl
in
mov
adc
lret
scas
mov
dec
sahf
push
mov
repnz
adc
xor
loop
sbb
and
jp
dec
ljmp
shll
or
jp
stos
mov
dec
adc
gs
xchg
ss
xor
cld
call
cltd
int3
sub
test
pop
mov
sub
cwtl
pop
and
mov
loop
push
cmp
pusha
cld
movsl
aam
mov
pop
sub
lea
aas
mov
or
jno
and
pop
sbb
int3
out
xchg
mov
repnz
mov
es
cwtl
je
and
xchg
push
pusha
cmpsb
cmp
inc
ficoms
sbb
jnp
aaa
in
stos
mov
in
and
dec
out
add
sub
jns
lahf
or
icebp
imul
rolb
in
aaa
lock
pop
mov
sub
lock
addr16
sbb
stos
fdivr
data16
leave
inc
sahf
lods
or
jmp
xlat
xchg
gs
mov
sti
aas
cmp
jae
xchg
mov
mov
and
push
mov
repnz
dec
or
call
mov
sbb
lahf
dec
ja
addl
dec
sbb
ficoms
fistps
cmovs
shlb
mov
xlat
and
add
or
and
inc
dec
mov
and
and
pop
inc
mov
add
xchg
ret
cmc
cmp
jnp
push
mov
xor
cmpsl
out
push
pop
or
cmp
push
cli
pop
movb
jns
std
test
insl
push
enter
dec
push
xlat
sbb
setae
push
or
in
sbb
inc
cmp
xchg
in
cli
jp
xor
jae
pop
ljmp
out
sahf
jns
lock
sub
dec
push
adc
push
jp
ret
testb
shll
sub
lods
push
xchg
fisubrl
mov
add
arpl
mov
pop
xchg
and
mov
add
and
jbe
fildl
adc
jmp
adc
or
xchg
and
lret
push
sbb
loopne
into
arpl
jns
xchg
scas
sarb
pusha
mov
adc
xor
add
imul
xor
inc
ds
das
mov
mov
sahf
sbb
push
adc
cli
das
pop
js
or
loop
negb
cmc
fs
fcmove
dec
jl
inc
loopne
sahf
shlb
and
mov
shrb
inc
xor
sub
pop
out
or
je
addps
addr16
mov
cmp
or
and
test
mov
shrd
clc
mov
and
shrl
jg
and
adc
pop
out
cmp
into
mov
or
lahf
cmpsb
mov
rclb
jne
adc
mov
popf
mov
sbb
push
fiadds
ffree
jp
fisubrs
and
add
xor
das
or
adc
mov
or
adc
pop
ss
push
xchg
icebp
and
fwait
pushl
out
stc
push
movsb
insl
mov
mov
test
mov
dec
cmp
movsb
fadds
call
pop
mov
cmp
data16
call
xchg
xor
movsl
sub
push
cli
sbb
inc
sub
jnp
fsts
out
sbb
push
iret
push
aas
or
lret
in
and
jae
dec
pop
xor
in
push
in
xchg
push
sbb
sub
sbb
pop
push
test
movsl
jae
fstl
mov
punpcklwd
repz
daa
sub
jecxz
inc
in
outsl
sbb
jnp
idivl
pop
jno
orb
and
sub
les
cmc
inc
decl
fsubl
inc
scas
mov
shrl
fdivrp
ss
call
icebp
or
dec
std
outsb
es
lahf
mov
mov
adc
js
imul
pop
jmp
sbb
or
out
xor
xor
clc
adc
pop
adc
shlb
shlb
inc
pop
xchg
mov
call
xor
int
jge
loop
lock
and
mov
xchg
ja
xchg
xchg
add
mov
loope
jbe
adc
inc
jnp
dec
inc
ss
and
repnz
mov
cli
jo
cmp
je
test
fadds
sub
ja
fstpt
push
mov
mov
add
iret
addl
jg
push
call
out
mov
test
lcall
mov
inc
fmuls
push
ljmp
pop
jnp
lods
cltd
mov
dec
iret
idivl
push
call
imul
and
xor
hlt
mov
es
dec
call
fcomip
push
jns
sbb
and
push
ss
add
or
fs
jp
fisttpll
lret
jno
xlat
push
cmc
jecxz
int3
push
arpl
pop
in
cmpl
xor
push
ds
or
mov
mov
jle
xor
push
popa
stos
es
add
xor
mov
inc
xor
xchg
inc
sbb
out
cli
add
mov
add
and
aad
mov
sbb
sub
cmp
lods
jno
mov
mov
pop
xor
lahf
movsb
sub
jle
aas
bound
icebp
mov
cmp
js
out
std
mov
push
push
pop
lds
or
mov
jmp
stos
sbb
roll
xlat
pop
sbb
insb
mov
and
push
jbe
dec
xchg
inc
add
sar
adc
outsb
icebp
test
add
push
mov
and
adc
mov
push
cmp
je
repz
sbb
dec
clc
cmpsb
mov
sahf
adc
dec
sahf
out
ds
nop
push
cmp
fcoml
mov
cwtl
adc
xor
adc
int3
fwait
fistpl
adc
cmpsb
or
pop
push
iret
insl
and
mov
xchg
loopne
pop
in
shrw
add
add
lahf
loop
aad
cld
jl
mov
lret
and
mov
cwtl
cwtl
pop
push
idiv
outsl
pop
insl
mov
cmp
movsb
jnp
insb
mov
cwtl
pop
mov
ror
xchg
jnp
in
and
movsb
shll
popf
jle
jge
mov
pop
push
sbb
mov
fsts
daa
aad
add
into
dec
mov
xchg
jecxz
mov
xlat
outsb
icebp
ret
dec
xlat
sub
int
cmp
out
mov
mov
pop
pop
mov
inc
mov
xchg
inc
sub
clc
lods
je
mov
mov
mov
mov
outsl
or
xchg
sarb
jns
lahf
sbb
sbb
inc
xchg
add
fsubs
mov
mov
subl
in
push
call
mov
sbb
sahf
addr16
jb
outsb
and
sub
stos
xor
aas
cmpsb
cmp
push
rcrb
es
stc
add
test
xchg
dec
cli
mov
sbb
aad
push
push
push
cs
mov
mov
inc
sbb
or
push
dec
pop
mov
ss
jae
fstps
rcl
add
je
aaa
mov
xchg
inc
icebp
roll
cmp
aad
into
adc
stos
cmp
cld
push
not
daa
int
les
mov
lea
push
int
ret
sub
mov
cmp
mov
add
cmp
push
out
inc
adc
stos
sbb
inc
rcrl
push
fs
jo
mov
or
push
aam
inc
pop
push
clc
fistpll
jns
insl
cmp
aad
addb
stos
adc
pop
lods
mov
cli
xor
mov
fisttpll
add
xchg
shrl
or
push
inc
dec
addr16
add
mov
add
jbe
repnz
or
dec
dec
cmpsl
cmp
cltd
sbb
push
movsb
sahf
cmp
lahf
xchg
ffreep
jp
dec
dec
pop
pop
dec
xchg
pop
in
in
sub
shl
inc
mov
imul
mov
mov
nop
ljmp
les
inc
loopne
mov
popa
jns
in
repnz
scas
add
and
fucomp
xor
ret
push
sub
das
ljmp
push
rorl
leave
or
in
lods
das
into
and
xor
jo
fsubrs
mov
push
in
sbb
nop
stos
push
cmp
rorl
jno
cltd
xchg
jne
popa
in
xchg
add
aam
xchg
mov
jbe
lds
lock
sbb
fwait
cmp
pop
or
scas
and
mov
in
add
daa
pop
mov
push
arpl
inc
sahf
mov
jg
xor
pop
xchg
lret
loopne
push
iret
popf
mov
xchg
icebp
sbb
and
push
dec
flds
cmc
adc
out
push
xchg
cmp
jecxz
imul
cmp
dec
cmp
jae
xor
push
cmp
add
jecxz
push
in
cmp
sub
fyl2xp1
sbb
test
mov
jecxz
imul
testb
movl
pop
movsw
xchg
xor
mov
inc
and
mov
jmp
or
std
push
stos
in
rolb
daa
xchg
std
pusha
dec
inc
jnp
icebp
lock
movsb
pop
ficoms
hlt
jge
pop
and
cmpsl
cmp
push
jge
dec
pushf
jle
pop
hlt
cmpsl
pushf
xchg
int
push
rclb
dec
cmp
mov
cld
mov
jbe
test
mov
push
add
inc
inc
stc
int
adc
pop
cltd
fadds
dec
scas
dec
popa
cmc
cli
stos
insl
jbe
cmpsl
loop
popa
mov
lret
fldcw
jo
ja
notb
fwait
dec
jp
icebp
lds
pop
iret
outsl
cltd
adc
mov
xchg
addl
pushf
rorl
clc
and
dec
bound
add
sti
mov
jle
stos
xlat
je
loopne
add
push
or
dec
push
sub
inc
outsb
aas
ret
mov
je
test
scas
in
mov
dec
pop
shr
shlb
and
insl
xchg
cs
push
fwait
xor
xor
jle
dec
test
add
cmp
mov
je
xchg
out
aas
in
call
lret
fmul
movl
mov
pop
mov
aas
pop
pop
mov
add
push
push
cs
daa
pop
sub
repz
pop
push
adc
sub
mov
repz
jns
push
dec
sub
into
js
inc
add
xor
and
dec
in
add
inc
cmpsl
ffree
cmc
adc
in
in
popf
lahf
movsl
inc
dec
fst
adc
adc
gs
movb
mov
das
out
jg
or
fwait
push
lods
nop
insb
roll
scas
mov
add
popa
jne
out
shll
sub
adc
lods
lds
dec
cmp
lcall
inc
sub
xchg
sarl
test
jae
daa
int
sbb
aas
inc
lea
inc
or
jbe
cltd
adc
add
aaa
repz
loop
push
push
mov
int
shlb
popf
sbb
pop
and
push
add
stos
and
cmp
sub
cmpsb
outsb
mov
mov
stos
ja
clc
and
xor
addr16
out
mov
push
dec
or
jne
lds
cmp
jne
push
stos
sub
push
xor
and
gs
dec
dec
jo
pop
sbb
addr16
loop
arpl
iret
les
js
dec
pop
out
ret
mov
ficoml
daa
jp
ret
test
bound
jo
ret
popa
shll
popa
icebp
push
loopne
nop
xor
add
inc
loope
shll
adc
and
lock
loopne
nop
xor
add
inc
loope
shll
adc
and
jo
loopne
adc
andb
adc
add
inc
loope
shll
adc
and
lock
loopne
nop
xor
rcll
dec
fcmovbe
pusha
mov
cmp
inc
outsb
push
jle
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
insl
pop
jle
dec
jns
imul
sbb
sub
stc
fsubrp
scas
cltd
mov
test
and
imul
cmp
push
out
fsin
leave
scas
stc
fsubrp
out
cmc
mov
test
fdivrl
imul
cmp
sub
mov
xlat
ret
sub
add
aaa
imul
mov
mov
xchg
xor
jmp
mov
testb
fucomi
add
mov
and
lods
mov
dec
in
and
mov
cmp
dec
outsl
out
jg
push
lret
mov
mov
sti
mov
mov
insl
stos
push
mov
sarl
push
xlat
out
es
ss
jge
or
mov
test
sub
ret
in
xchg
mov
test
or
es
into
push
fwait
in
jmp
mov
push
xchg
fsub
les
mov
shl
sub
cli
lcall
in
fimull
pop
sub
jns
imul
cmp
leave
mov
cltd
mov
mov
pop
or
cmp
imul
push
jge
mov
mov
in
out
sti
out
cmp
sub
sbb
imul
dec
dec
mov
cmpsb
mov
not
mov
out
ffreep
add
or
or
cmp
sub
fsin
leave
into
stc
fsubrp
scas
cltd
mov
test
dec
jns
imul
cmp
sub
fsin
leave
into
stc
fsubrp
scas
cltd
mov
test
mov
jp
add
aam
ss
adc
out
in
dec
insb
stos
addl
adc
xor
mulb
test
iret
shrb
out
scas
mov
and
imul
loopne
sub
sub
out
out
fsts
cwtl
loop
cmp
aaa
mov
mov
das
aaa
testl
jne
pop
jno
addb
dec
push
lock
pop
mov
test
sbb
rolb
cmpsl
fs
mov
jg
pop
xchg
mov
ficompl
dec
push
mov
mov
sarb
enter
lahf
cld
pop
in
or
push
mov
pushf
add
xchg
in
jge
mov
and
dec
jbe
popf
mov
jmp
pop
and
sub
cmp
sbb
in
push
lret
lods
push
jmp
sarb
mov
xchg
pop
outsl
inc
sub
sub
fnstcw
mov
add
roll
mov
rolb
es
xchg
in
or
xlat
mull
dec
jg
test
negl
ret
jo
mov
sbb
lods
mov
mov
pop
adc
sbb
mov
jmp
stc
fsubrs
xor
jno
jbe
xor
lcall
add
cmp
fs
mov
das
mov
dec
data16
xor
push
mov
mov
sub
icebp
es
jno
mov
adc
loop
mov
mov
mov
jge
fiadds
daa
jg
cmp
jbe
popa
pop
mov
push
mov
pop
daa
data16
adc
mov
aas
or
insl
push
fwait
push
leave
push
mov
push
inc
add
sahf
das
adc
mov
jle
mov
sti
popa
xchg
mov
mov
pop
mov
lods
in
in
fwait
mov
jp
dec
pop
mov
xchg
cmp
loope
add
or
shlb
push
push
out
xchg
frndint
mov
out
pop
mov
jno
fwait
ds
jl
lods
cs
mov
loope
push
mov
in
cmp
iret
jecxz
push
dec
sub
js
push
test
sub
pushf
add
xchg
mov
push
xchg
xchg
sbb
xor
mov
and
rcrb
movsl
push
mov
push
xor
jmp
pusha
pop
mov
dec
xchg
inc
dec
add
sbb
test
arpl
cmpsl
lock
jns
popf
aam
fbld
sub
out
arpl
push
pop
fsubl
sbb
jecxz
sbb
mov
xchg
push
inc
sub
push
mov
xchg
sub
icebp
mov
push
scas
cwtl
ljmp
ficompl
add
mov
or
icebp
dec
xor
pop
or
test
inc
stc
jno
xchg
fdiv
cli
js
adc
add
dec
cwtl
std
sbb
cmc
jle
imul
sbb
lock
inc
mov
mov
outsb
dec
sbb
addb
fsts
xchg
sbb
sub
outsb
jbe
pusha
inc
xchg
jo
lahf
sub
mov
or
out
in
cltd
shlb
cld
dec
push
les
push
lods
cltd
add
ss
outsb
flds
xor
imul
dec
push
push
dec
jge
inc
imul
push
pop
pop
or
xlat
mov
or
cmp
cmp
jne
cmpsl
add
mov
js
mov
mov
pop
xchg
jg
lcall
dec
faddl
ret
cld
nop
fmull
xchg
movsb
cmc
cmp
ljmp
jge
movsl
mov
ficompl
pop
push
push
ja
and
lahf
mov
sub
pop
mov
out
mov
mov
mov
popf
sarb
imul
in
fdivp
stc
cwtl
add
fists
arpl
idiv
mov
hlt
imul
ret
pop
clc
dec
adc
sahf
stos
adc
jl
xchg
icebp
push
in
scas
sbb
ss
mov
push
aad
addr16
aam
roll
cwtl
pop
xchg
das
pop
cmc
pop
int
cmp
lcall
mov
popf
divl
or
aas
push
mov
mov
jp
inc
in
stos
push
les
lds
movsl
jbe
add
xor
popf
jp
out
das
movsb
repnz
mov
sub
out
sbb
aas
int3
adc
xor
mov
mov
mov
and
sbb
jmp
mov
or
std
mov
aam
loop
mov
xlat
std
sub
mov
xor
xlat
in
out
andb
leave
sub
xor
loop
out
mov
sub
insb
dec
pusha
adc
xlat
add
mov
test
push
push
push
js
xchg
jne
mov
mov
lods
iret
arpl
mov
cli
int3
xchg
sub
jne
movsb
push
inc
call
xchg
push
imul
inc
aad
mov
insb
daa
cld
pop
fcmovu
jmp
sbb
ds
mov
cmp
subb
das
int
or
dec
loope
stos
iret
xchg
mov
mov
xchg
adc
mov
sbb
fdivs
push
cs
psubw
pop
pusha
cmp
push
add
aam
inc
dec
aas
jo
dec
xchg
inc
jno
sub
pusha
inc
sub
sbb
mov
jb
sub
in
sbb
inc
es
mov
rclb
js
shlb
mov
lods
cs
jp
stc
push
rclb
pop
dec
mov
addb
inc
mov
je
jecxz
out
fnstenv
mov
les
push
mov
ss
test
push
push
inc
into
xor
out
pop
filds
xor
sti
push
add
push
in
sub
shrl
inc
lea
add
mov
test
repnz
arpl
cltd
lea
adc
sub
jecxz
or
stos
fnstsw
fwait
adc
fstps
shrl
mov
pop
mov
push
out
mov
ss
insl
add
dec
icebp
pmaxsw
add
repnz
pop
xchg
jmp
cli
pusha
iret
dec
mov
test
or
lods
push
cmp
mov
mov
pop
popf
sti
sbb
and
test
xor
cmpsl
sub
lods
jl
xchg
and
pop
mov
sbb
cmp
cmp
imul
or
xor
aas
shll
mov
cwtl
dec
shll
rcl
pop
jge
inc
lret
sahf
mov
enter
popa
dec
ds
xchg
push
insl
sub
pop
xchg
push
les
or
dec
mov
insb
test
shl
rclb
js
cmpsl
int3
push
repnz
mov
mov
sub
mov
lock
adc
jmp
orb
pop
cmp
mov
adc
out
xor
outsb
xchg
lock
sarb
and
mov
out
pop
loopne
data16
or
and
int
out
decl
adc
cmp
and
inc
pop
sbb
jae
dec
and
sub
stos
out
mov
or
add
aas
clc
mov
cli
es
fnsave
mov
lock
insl
stc
pushf
dec
js
and
sub
test
adc
push
arpl
and
ds
mov
fucomi
mov
sub
xchg
lret
insl
xchg
lahf
dec
js
rorb
adc
jmp
dec
loopne
xchg
inc
push
in
mov
shlb
jne
into
sbb
push
push
mov
or
mov
arpl
lds
es
cmp
das
xor
sub
fsubrs
cmp
lret
xor
mov
lods
pop
outsb
pushf
repnz
push
clc
pop
negb
sahf
xchg
jle
adc
scas
xchg
mov
xor
dec
jbe
cmp
jg
test
fiaddl
sahf
mov
cmc
or
push
jmp
inc
lcall
aas
or
jns
outsl
popf
pop
lods
mov
js
lds
mov
jno
inc
sbb
das
jnp
sbb
mov
out
xor
and
in
cmp
cmc
mov
out
pop
outsb
pop
aad
push
rorb
cmc
fs
xchg
jle
adc
outsl
inc
jno
jbe
scas
hlt
in
lret
jl
push
jl
ja
lods
imul
xchg
daa
imulb
jg
or
rcrb
scas
xchg
fistl
mov
inc
xor
je
shrb
fwait
mov
ljmp
test
bound
or
pop
cmp
mov
cmp
cli
xchg
std
push
and
je
data16
scas
mov
or
pop
ror
pop
fildll
loope
xor
in
mov
cmp
dec
aaa
es
fs
fisubl
jo
push
xor
roll
data16
xor
add
mov
stos
test
pushf
jmp
xchg
cmpsl
sub
mov
mov
lock
or
mov
pop
je
add
xor
push
insb
je
and
insb
daa
add
arpl
rcr
aad
sbb
mov
sbb
stc
sub
cmpsl
mov
loop
movsb
or
jnp
cld
aas
movsl
dec
inc
in
repz
adc
xchg
daa
mov
xor
cwtl
cld
in
addr16
dec
mov
sub
popf
pop
xor
popa
insl
pop
add
xchg
inc
andl
mov
mov
pushl
fwait
lret
arpl
fmull
pop
out
scas
sub
nop
push
xchg
ret
push
mov
push
fidivrl
and
fimuls
push
cld
fisttpl
jl
jmp
testb
into
decl
mov
mov
std
ljmp
push
inc
movsl
xor
mov
cvtpi2ps
xor
xchg
sti
jno
xchg
xchg
sbb
test
mov
sbb
out
cltd
inc
hlt
ret
jge
mov
and
add
and
pusha
inc
ds
in
das
loopne
cltd
cmp
mov
push
scas
orb
push
arpl
scas
std
push
sub
shrb
inc
cmp
test
and
fstpl
repz
and
push
aad
stos
cli
leave
add
outsl
into
into
jno
pop
lods
test
inc
enter
shll
dec
and
addl
rclb
pushf
rcrl
and
cmp
jb
or
dec
pop
pop
dec
inc
cmpsb
rcrl
mov
mov
inc
add
lds
ds
lods
out
out
fnstsw
xchg
pop
outsb
and
xor
sub
adc
in
mov
fidivrs
cmc
mov
push
out
int3
xor
scas
and
int
or
sub
dec
xor
in
pop
mov
sub
xchg
inc
stos
cltd
and
stc
mov
into
vpmuludq
xor
inc
or
fldenv
push
cs
out
int
movsw
scas
xlat
adc
mov
add
popa
cmp
sub
fidivrs
jecxz
push
jnp
sub
scas
into
push
popa
outsl
adcl
test
or
loop
clc
and
or
jbe
pop
sbb
xor
and
jp
subb
mov
mov
xor
jp
fsubr
xor
add
test
lcall
or
pop
or
movsb
mov
ret
in
mov
mov
lods
aaa
outsl
sbb
xlat
jp
pop
and
mov
fwait
das
dec
xor
fsubr
push
xorl
test
loopne
pop
lret
out
mov
xchg
and
xorl
sub
sub
orb
shl
inc
push
icebp
aaa
and
cwtl
fsubl
stos
cmp
mov
and
cmp
mov
sub
loopne
inc
sahf
mov
fists
mov
sti
cmc
jbe
mov
stc
jmp
sub
push
jg
int
mov
mov
adc
xchg
sbb
xorl
orl
sub
test
xchg
mov
pop
test
movsl
andl
loop
sahf
xor
stc
and
js
test
push
adc
stc
dec
mov
sub
push
adc
inc
push
push
mov
cmovp
mov
sub
push
or
dec
rclb
lods
mov
adcb
dec
add
push
jnp
shll
push
sahf
hlt
inc
inc
jns
push
mov
imul
dec
imul
loop
andb
xchg
jnp
mov
dec
push
inc
xor
cmp
rol
rcrl
mov
xchg
or
inc
les
mov
mov
subb
dec
cmpsl
xor
xchg
add
mov
gs
jmp
pop
or
addb
cmp
or
nop
xorl
lock
popf
hlt
pop
cltd
pushf
xchg
xchg
in
movsl
gs
daa
idivl
push
pop
inc
orb
xchg
sbb
mov
jo
xor
hlt
or
mov
popa
sub
or
fcomps
imul
add
out
insl
pop
sbb
ret
cmp
es
cmp
std
out
jmp
lcall
push
jmp
rcrb
test
ret
mov
int3
std
jne
add
add
pop
add
sahf
andl
add
cltd
dec
lahf
cmp
adc
dec
add
daa
mov
push
push
lcall
push
jp
lods
enter
mov
movsl
mov
je
test
leave
sbb
jmp
xlat
test
inc
or
sbb
lods
mov
mov
dec
iret
mov
sub
ja
loopne
pop
in
mov
in
ss
mov
pop
insl
dec
dec
xor
pop
mov
mov
test
and
mov
jnp
ret
adc
mov
cmp
adc
pop
xchg
hlt
add
inc
int3
and
push
mov
movsl
push
or
into
cmp
sbb
mov
mov
xchg
rorl
stc
sub
js,pt
fcomps
sub
addl
xchg
jecxz
cmc
xchg
sub
std
and
subb
cs
enter
pushf
jge
int3
das
cmp
shl
and
xchg
bound
mov
ss
ss
mov
push
aad
xlat
dec
push
jne
xchg
inc
xor
jl
add
icebp
in
scas
lods
push
out
jnp
jg
sub
jo
mov
and
fcoms
cld
mov
scas
pop
xchg
inc
jne
sahf
test
mov
push
call
ficomps
subl
rorl
mov
aad
out
mov
mov
repnz
adc
and
push
adc
in
subl
outsl
dec
lret
gs
cwtl
negl
aam
and
je
add
repz
jmp
adc
shll
xor
lea
mov
mov
jmp
stos
adcl
inc
xchg
mov
fisubs
les
add
adc
push
imul
out
imul
popa
bound
jge
sbb
adc
mov
xadd
mov
into
dec
hlt
scas
ficomps
ret
mov
sbb
xchg
mov
cmp
jne
xor
sbb
jno
adc
xchg
repz
cmp
lods
ja
jecxz
addb
dec
and
jo
inc
xchg
je
es
pop
pop
sbbb
jae
and
jp
inc
mov
pop
and
mov
sbb
addr16
cmp
adc
add
mov
pop
aas
mov
xchg
push
insb
pop
sbb
inc
fwait
and
enter
enter
sbb
jg
sbb
adc
xor
jbe
fsubl
jmp
push
sbbl
inc
rcl
lcall
inc
mulb
sub
bound
out
mov
add
sbb
fcoms
mov
iret
mov
cmp
push
pusha
sbb
out
inc
test
negb
cmp
jp
adc
int
pop
mov
addr16
rol
xchg
jg
mov
dec
sub
adc
rclb
jbe
inc
outsb
aam
dec
lods
inc
movsl
mov
clc
push
push
jns
out
jnp
inc
outsb
outsl
inc
mov
mov
insb
mov
jge
mov
shrl
sub
pop
xchg
icebp
popf
adc
mov
call
push
jno
push
movl
pop
adc
rol
mov
cmpb
mov
movsl
xor
gs
loope
xlat
mov
mov
jo
xchg
adc
sub
push
lods
sarb
ret
jl
movsl
and
enter
dec
sbb
cmpsl
push
fstpt
or
inc
std
sub
lock
dec
adc
js
xchg
mov
jle
jne
leave
iret
inc
xchg
adc
cmp
inc
xorb
pop
loopne
repz
icebp
shr
sahf
mov
inc
push
pop
lods
pop
lret
mov
std
scas
sbb
cld
xchg
cmp
jl
daa
mov
adc
pop
mov
loop
sub
daa
and
inc
inc
cmp
mov
xor
sbb
xchg
mov
loopne
hlt
inc
pop
fdivl
sub
rcrl
dec
cmp
repz
mov
adcb
fs
mov
push
ffree
mov
nop
dec
mov
int
shrb
pop
add
cmp
les
inc
mov
jge
je
sub
mov
pusha
cmp
push
sti
push
mov
fcmovu
and
mov
rcrl
mov
inc
mov
inc
add
sahf
push
clc
in
arpl
jne
mov
or
xchg
or
jns
sub
mov
lods
jmp
fbstp
out
mov
push
push
xchg
add
jno
mov
jg
addb
leave
movsl
idivl
repz
cmp
es
inc
dec
add
std
adc
imul
sbb
jns
add
data16
pop
dec
jb
ds
xor
lods
fs
repnz
push
mov
and
jecxz
mov
cmpsb
mov
xor
xchg
jne
jb
stc
aam
mov
inc
inc
jle
cmpsl
mov
movsb
addr16
xchg
das
xchg
jae
repnz
push
push
add
lret
mov
cwtl
pop
jns
into
rcr
dec
cmp
movsl
aam
jge
popf
mov
pop
push
jle
pop
mov
sub
imul
ret
or
add
outsl
mov
cli
ficompl
xchg
ret
neg
outsb
mov
push
pop
mov
push
pop
int
in
inc
mov
lcall
mov
gs
xor
lds
and
addr16
jge
push
daa
lahf
mov
fwait
jle
mov
fcmovnb
je
stc
cld
loopne
jmp
add
jbe
loopne
outsb
ds
jg
or
sbb
repnz
fdiv
inc
mov
imul
popa
pop
dec
enter
push
xlat
notl
shl
xchg
adc
sahf
mov
pop
cmp
push
dec
adc
inc
dec
lods
insb
and
test
or
mov
xchg
jp
scas
pusha
scas
jo
jmp
sti
scas
sbb
scas
xchg
lahf
sub
xor
repnz
xchg
mov
sub
popa
js
cld
adc
cs
sahf
cmp
mov
fdivs
sub
mov
adc
jg
add
jnp
and
push
xor
mov
ljmp
xchg
push
or
icebp
cmpsl
inc
scas
lds
das
insl
in
xor
adc
mov
mov
and
icebp
mov
xchg
imul
call
pop
cmp
frstor
dec
and
dec
sub
cmp
cld
out
inc
in
pop
ret
jmp
push
add
jl
cmpl
jne
mov
leave
add
fs
inc
rol
sbb
adc
dec
xlat
insb
jmp
nop
ljmp
cli
jle
icebp
dec
push
adc
pop
sub
dec
pop
outsb
fidivs
pop
mov
push
sbbb
and
dec
outsl
cmp
fidivrs
ja
jne
out
mov
insb
pushf
les
or
popl
mov
js
sti
popa
xchg
cwtl
repnz
jnp
ret
sub
mov
into
sub
data16
pop
or
push
cmp
and
add
lahf
dec
insl
push
and
push
xchg
in
gs
lock
outsl
mov
std
fisttpl
push
jmp
mov
add
sub
aad
add
stos
ss
sbb
mov
mov
inc
jl
mov
xor
xchg
divl
pop
je
push
andb
test
ljmp
sbb
add
mull
pop
loop
data16
mov
out
push
popa
hlt
pusha
xchg
or
sub
inc
xlat
test
fsubrl
test
xlat
xchg
mov
out
fxch
je
cwtl
outsb
push
dec
dec
neg
cld
or
and
pop
imul
cmp
sub
fsin
leave
into
stc
fsubrp
scas
cltd
mov
test
dec
jns
imul
cmp
sub
fsin
leave
into
stc
fsubrp
scas
cltd
mov
test
jns,pn
imul
fsin
leave
ds
fsubrp
scas
cltd
scas
mov
pop
and
jns
imul
cmp
arpl
sahf
fsts
ss
inc
popa
push
rcrb
mov
test
adc
movl
bound
xor
push
shlb
loop
xchg
in
jns
lds
adc
adc
add
add
ret
sub
or
sub
push
add
data16
jno
jno
dec
push
cmpsb
movsl
mov
rcrb
sub
js
gs
lahf
cltd
mov
fiaddl
or
cs
sub
test
out
add
mov
add
fs
jae
sub
lahf
stos
mov
js
std
pop
in
test
mov
mov
cwtl
adc
jne
test
inc
shlb
movsl
xor
jge
jmp
mov
gs
xor
mov
lods
test
pop
ja
pop
adc
mov
aad
jbe
and
inc
xorb
stos
out
cmp
enter
mov
test
pop
cmp
or
cmc
inc
and
adc
loop
xchg
in
cmc
mov
mov
repz
bound
dec
add
mov
mov
mov
jo
jno
jl
or
push
add
xor
loopne
hlt
xchg
in
mov
mov
imull
and
jb
xor
dec
ds
ret
aad
not
addl
xor
adc
jne
inc
and
movsl
ret
test
xchg
xchg
in
cmc
mov
mov
xor
adc
jne
inc
and
movsl
mov
mov
lods
xor
test
sub
out
ljmp
xor
dec
jne
das
pop
mov
enter
add
push
adc
sbb
lcall
or
mov
jmp
lds
push
in
lret
cmp
add
xor
push
insl
sbbl
call
push
pop
push
dec
fcoms
lock
fcomip
xchg
stc
pop
inc
pop
jmp
hlt
mov
addl
pusha
imul
inc
xor
stos
xchg
push
scas
scas
inc
fisubl
jmp
pop
push
aaa
xchg
sub
adc
insl
cld
imul
mov
adc
sbb
inc
sub
mov
mov
into
in
mov
sbb
inc
scas
ljmp
sub
out
and
dec
das
daa
and
sub
jmp
dec
sahf
push
adc
filds
and
mov
ds
ds
pop
outsb
pop
sbb
or
loop
adc
pop
ret
in
es
or
dec
sbb
lods
inc
push
clc
test
lea
addr16
rcl
jns
fimuls
jle
fadds
clc
fcompl
cmp
mov
dec
sahf
adc
lods
mov
mov
das
fistps
aad
push
and
ds
stos
jge
xor
mov
jecxz
aad
das
xor
jae
push
and
jmp
nop
stc
dec
dec
xchg
sub
inc
rorl
jnp
lods
jns
test
jmp
push
pushf
fwait
sbb
sbb
adc
cmpsl
hlt
inc
inc
xchg
in
xor
lods
mov
pop
es
mov
push
les
mov
loopne
data16
fiaddl
lods
dec
out
xor
xor
icebp
stc
jmp
cwtl
add
sahf
adc
push
fadds
roll
out
cltd
popa
ret
mov
test
push
gs
aaa
inc
mov
cmpsb
jnp
dec
das
jb
insb
mov
jle
stos
mull
imul
push
add
or
fldenv
daa
xchg
addl
sarl
in
test
pop
lods
std
xor
sbb
add
movsb
fimull
shr
pusha
popa
jnp
push
add
sbb
les
push
repz
inc
loop
and
sar
xchg
notl
mull
test
clc
repnz
icebp
pop
call
xchg
xchg
or
jns
shrl
ss
sti
sahf
sti
mov
jne
lea
adc
into
xchg
fcmovnbe
out
inc
xor
jp
and
out
sub
enter
add
or
adc
push
sbb
ret
jp
ret
jp
add
mov
mov
pop
outsl
add
data16
mov
jp
xor
in
cli
xlat
int3
xchg
push
lods
lahf
add
les
mov
and
jle
cld
dec
scas
into
cli
xor
aam
mov
inc
jb
dec
fcompl
cld
jnp
mov
and
sub
sti
cmpsl
inc
sbb
movsl
lods
dec
add
pop
daa
pop
fisubrl
mov
mov
adc
cltd
pop
mov
rcrw
fimuls
inc
xchg
out
into
xor
push
cli
loope
mov
rcrb
mov
jne
je
add
movsl
pop
jnp
pop
xchg
mov
mov
repnz
add
add
out
iret
jno
mov
mov
mov
inc
mov
xor
lret
push
roll
push
inc
jle
pusha
jo
and
push
scas
lea
adc
jno
hlt
mov
jp
ja
bound
inc
scas
imul
scas
pusha
push
orl
mov
adc
xchg
pop
out
xchg
cmp
mov
dec
stos
mov
sub
inc
mov
add
xchg
add
dec
idivl
imul
inc
cmp
stc
xor
ficoms
dec
shrb
dec
mov
rclb
and
clc
jae
je
push
jne
adc
mov
xchg
xor
lea
into
cmp
and
inc
mov
lret
xor
dec
push
test
lret
pop
nop
add
pop
mov
and
and
pop
jae
movsb
lcall
in
out
and
in
stos
or
in
pop
pop
inc
adc
xchg
adc
fdivs
outsb
sbb
sub
test
push
jno
xor
mov
sub
push
cmp
dec
cmpsl
movsl
xchg
nopl
cltd
xchg
and
and
push
pop
movsb
xchg
into
jo
into
jle
xor
ds
das
scas
jo
cmp
push
stos
or
xor
les
jle
cwtl
and
dec
outsb
mov
negl
hlt
mov
push
aaa
insl
and
xor
xchg
sub
and
aam
daa
push
inc
daa
pop
mov
adc
bound
fucomp
aam
mov
shrl
jbe
lods
push
push
dec
jmp
lret
ret
lods
jns
inc
rol
cli
jl
xchg
xor
stos
and
faddl
mov
in
test
daa
mov
xchg
imul
iret
xchg
cmpsb
cmp
sbb
and
xchg
dec
cmp
shll
sub
ret
mov
push
pop
fcomi
aam
or
stos
pop
repnz
into
xchg
int3
imul
push
nop
add
bound
dec
enter
faddl
push
add
lds
stos
arpl
push
fdivrs
and
xchg
xchg
subb
out
out
jae
pop
scas
cmpsb
movsl
cmpsb
add
lock
add
inc
out
cwtl
jb
lcall
mov
cmp
out
mov
mov
bound
stc
add
shll
pop
xchg
jge
int
aas
loope
mov
lret
scas
adc
push
stc
xor
out
push
adc
in
icebp
outsb
mov
sbb
stos
mov
dec
stc
dec
cld
sbb
hlt
mov
or
xor
sbb
inc
xchg
pop
mull
dec
sarl
pop
add
fmull
pop
push
addw
add
add
push
daa
int
lret
cmpsl
arpl
rcpps
or
fisubs
daa
mov
daa
ljmp
in
loope
pop
xchg
jp
lock
xor
add
pop
ret
mov
jp
cmp
aas
clc
lahf
mov
pop
mov
es
mov
repz
cs
adc
pushf
xchg
repz
mov
push
ret
pop
lcall
dec
in
inc
inc
jg
imul
xchg
xchg
out
jbe
cmc
pop
cmpxchg
lods
enter
xchg
scas
and
cwtl
jb
notb
and
xchg
out
adc
scas
or
in
adc
in
jl
rdmsr
jno
orb
jae
push
fadds
add
mov
loop
int
xor
push
sahf
jb
xchg
cmp
ficoml
stos
adc
test
push
fmul
push
push
ret
nop
fbstp
lret
pop
jecxz
dec
or
jbe
stc
cmp
and
xchg
mov
popf
sbb
lods
jle
inc
cmp
pop
mov
ss
out
pop
and
inc
jmp
das
jmp
dec
sub
lods
imul
sbb
jo
inc
aam
and
sub
xchg
xchg
dec
stos
pop
sub
bound
pop
stos
stos
popa
data16
inc
loope
push
sub
sbb
fdivrp
outsb
int3
cmp
call
pop
sti
outsl
movsl
cmpsl
scas
mov
and
push
fwait
popf
push
push
dec
popa
mov
jle
adc
mov
in
out
mov
push
mov
cmpsl
adc
rorb
test
jno
popa
or
push
hlt
adc
ljmp
jp
vhsubps
rorl
iret
adcl
sub
jge
ret
out
jbe
hlt
je
mov
xchg
sahf
adcb
fnstenv
and
cmp
aaa
push
leave
jg
sbb
fldcw
stos
mov
lret
push
cmpsl
pshufw
mov
mov
lret
push
movb
push
addr16
xor
xchg
pop
int
dec
and
shl
aaa
hlt
int
jle
xchg
sbb
ret
or
fsubs
ss
cmp
pop
xchg
fwait
jnp
add
in
call
idivl
pushf
push
imul
in
mov
xlat
pusha
and
fisttps
add
arpl
cmpsl
scas
xor
pop
orb
xchg
or
stos
inc
pop
cmp
rolb
fld
sub
js
shll
mov
sub
fidivrs
jo
pusha
lret
push
pop
sub
mov
adc
push
andb
mov
loopne
sub
cmovno
aam
jne
inc
mov
sbb
out
dec
and
mov
mov
adc
es
faddl
divl
xchg
lea
out
mov
dec
xor
cmp
call
sbbb
mov
sbb
and
fs
arpl
js
movsl
xchg
mov
mov
push
imull
clc
insl
adc
xor
and
hlt
xor
xchg
sbb
mov
cltd
fcmovbe
fs
sub
cmpsb
mov
jne
jle
std
sbb
pop
jg
cld
dec
es
mov
cli
mov
mov
push
fisubl
shr
scas
enter
out
sub
pop
pop
pop
push
dec
fsubrl
inc
sahf
daa
cwtl
sti
fwait
gs
sarl
dec
notb
bound
mov
out
sub
push
insl
cmpsb
and
xor
dec
adcb
mov
xor
or
mov
xchg
pop
mov
push
push
jmp
clc
pusha
imul
xor
mov
pop
into
jmp
mov
sti
jle
test
mov
adc
inc
jge
fstl
adc
lahf
jns
fbld
sbb
aaa
mov
dec
or
in
clc
push
dec
ret
subl
loopne
cwtl
lret
xchg
ds
cmp
sub
test
notl
push
or
mov
push
daa
jmp
and
adc
mov
or
sub
lds
pop
inc
outsb
int
insl
or
push
dec
add
subl
popa
push
andb
outsb
aaa
mov
xlat
adc
push
test
mov
bound
push
xchg
notb
mov
jmp
dec
mov
push
pop
adc
lret
xchg
jno
jnp
test
rcrb
push
adc
test
mov
sbb
inc
add
jne
shl
dec
addr16
jno
mov
mov
mov
inc
cmp
mov
jge
fcompl
cmp
in
adc
mov
xchg
sub
xor
cmp
mov
and
aam
mov
mov
push
movsb
mov
out
ja
in
call
adc
stc
adc
mov
lock
je
data16
mov
sub
fiaddl
sub
jl
fldcw
cmc
jl
add
popf
push
push
ret
sub
pop
and
in
xor
mov
pop
xchg
jg
push
jb
push
shrb
mov
jo
arpl
mov
push
mov
int
addl
push
inc
dec
cli
mov
xchg
bound
xchg
out
fmul
sub
das
dec
inc
mov
push
dec
insb
sti
insb
pop
cld
pop
rcll
in
rcll
add
stos
rol
dec
mull
out
out
pop
mov
mov
pop
fdiv
sbb
iret
xchg
mov
lcall
add
test
xchg
jecxz
adc
fidivl
xor
and
arpl
sbb
pop
fcmovb
cld
mov
movl
jl
pusha
ret
shl
call
into
int3
lds
adc
pop
int3
mov
push
push
jbe
sbb
mov
mov
test
cmp
pop
jae
mov
ljmp
and
lea
in
dec
add
and
lcall
mov
pop
data16
mov
inc
inc
ja
vmovdqu32
add
aas
andl
cmp
les
xchg
cwtl
sahf
jmp
scas
or
fisubrl
xor
sarb
pushl
daa
cmpsb
test
outsl
mov
push
out
or
pop
rolb
loop
push
lret
std
inc
aad
pop
jp
clc
adc
cmpsl
shrl
xlat
and
int
add
xchg
les
and
jns
or
and
mov
xlat
push
aaa
ds
mov
sbb
mov
push
insl
leave
test
js
or
jne
jb
or
inc
jle
ljmp
les
daa
mov
fidivrs
sbbb
push
pop
mov
mov
pop
lock
test
rol
dec
jg
cmp
out
fsubrl
xor
call
cmpsl
mov
cmp
mov
inc
sbb
or
mov
movsl
arpl
fbstp
mov
icebp
mov
cmp
call
aam
pop
mov
xchg
je
sub
into
test
imul
xchg
fcom
sbb
arpl
xchg
push
les
addl
shlb
xchg
ret
test
adc
pop
add
loope
je
aam
lret
aaa
scas
nop
cltd
mov
inc
pop
addb
and
xchg
inc
sub
cs
inc
add
or
iret
dec
jb
pop
and
mov
rclb
ficompl
pushf
jne
pop
adc
mov
jb
and
add
lcall
mov
fiaddl
jg
lods
and
std
das
xor
sub
filds
scas
mov
aas
fwait
pop
in
mov
imulb
jmp
push
cwtl
int3
out
ficoms
sbb
in
out
push
push
inc
push
or
les
push
jno
mov
dec
insb
insb
cmp
loopne
push
pop
pushf
stos
test
sbb
ret
lcall
js
lds
inc
jno
adc
fnsave
and
and
mov
rcrl
jbe
sbb
loop
xor
ficoms
mov
push
pushf
jb
add
sbb
mov
test
lret
iret
mov
leave
ja
mov
hlt
jle
movsl
shl
jp
xlat
push
mov
push
or
in
jno
sbb
sti
imul
cmp
clc
jecxz
aad
sub
dec
cmpl
int
sbb
push
cmp
xor
push
js
mov
test
push
stc
mov
stos
out
mov
dec
mov
mov
dec
add
inc
pusha
lret
xor
stos
jnp
lods
sahf
shlb
lock
push
in
mov
lods
mov
repz
jb
cltd
fcomi
mov
sahf
lock
push
sahf
cwtl
test
mov
bound
lds
roll
mov
das
aaa
ss
inc
leave
jae
adc
fmuls
jne
lahf
inc
pop
mov
sub
cmp
mov
clc
mov
dec
cmpsl
xlat
idivl
imul
push
mov
dec
jl
hlt
out
in
test
sub
popa
lret
lock
repz
lds
pop
movsl
ds
gs
test
dec
adc
icebp
push
aad
pop
fsubrl
dec
or
popa
ret
fstpt
pop
fadds
mov
push
xchg
push
add
mov
push
aad
push
mov
jmp
mov
add
jg
adc
bound
test
int3
xor
mov
js
pop
mov
popf
in
xchg
xchg
in
jg
repz
sub
jecxz
push
shlb
xchg
je
repnz
mov
mov
xchg
test
sbb
loopne
ret
pop
mov
jge
out
pop
popa
orw
mov
inc
xchg
pop
inc
mov
or
imul
test
fsubp
push
int
lahf
mov
adc
adc
lods
sbb
or
jnp
fsubl
mov
xor
or
sub
xchg
mov
addr16
clc
jecxz
ficoml
jmp
xchg
mov
inc
pop
mov
push
shll
cmpsb
push
enter
dec
or
add
ss
ret
push
insb
dec
add
mov
jnp
lahf
sub
sbb
lret
das
stos
jne
insb
push
xor
mov
inc
jne
xor
jmp
adc
int3
add
fsubr
sbb
mov
fbstp
lret
push
sub
push
add
out
or
jns
iret
cmp
fstpl
js
jecxz
aaa
push
jno
pop
push
loope
pop
enter
jp
rorb
sbb
dec
je
cmp
imul
andl
inc
jmp
mov
sbb
jl
outsb
mov
or
mov
xor
push
outsb
add
cs
pop
pop
fidivrs
inc
daa
imul
jo
push
sti
je
dec
pop
dec
jle
fwait
xor
call
lea
mov
addr16
adc
sub
sbb
dec
daa
or
inc
cmp
push
rorl
sub
psubd
jmp
aaa
mov
adc
xchg
scas
add
and
adc
inc
jmp
cltd
fcompl
js
and
das
jbe
jecxz
adc
lods
call
or
push
pushl
inc
xorl
and
or
push
jg
inc
shl
mov
dec
lock
and
jg
idiv
cmp
stos
cmp
sbb
enter
nop
adc
push
sub
xchg
dec
or
sub
in
and
ljmp
outsb
movsl
shrb
push
loop
sbb
jo
imul
les
clc
int
mov
aad
xor
test
add
push
fistpl
in
inc
xchg
negl
scas
dec
or
jnp
dec
stos
enter
mov
dec
and
cmp
mov
ret
sbb
stos
ljmp
jle
insl
mov
inc
dec
pop
push
cmp
add
mov
dec
shll
xchg
jg
mov
pop
ret
ljmp
lock
js
xor
add
cli
jmp
xor
xor
sub
adc
push
jne
pop
dec
data16
int3
jl
out
and
sbb
aas
scas
aas
inc
cmp
mov
mov
mov
mov
jb
pop
jmp
sub
dec
push
cmp
scas
lret
inc
mov
mov
or
jno
jmp
xchg
loopne
dec
pop
add
dec
xchg
fistpll
outsl
loop,pt
xor
push
fnstcw
imul
ret
sbb
mov
jo
lret
fidivrs
push
inc
dec
push
mov
int3
ds
sti
mov
xchg
jb
xor
jnp
jbe
loopne
adc
lret
add
inc
arpl
mov
push
dec
sub
mov
cmp
mov
inc
mov
xor
sub
clc
ficomps
xor
call
mulb
sub
pop
gs
adc
jnp
rcrb
push
fwait
lcall
in
xor
cmp
pop
rol
xlat
sahf
imul
ja
lods
xchg
mov
int3
mov
or
inc
test
fnsave
or
enter
mov
mov
aam
fldenv
push
adc
xchg
testb
mov
jae
cld
push
and
js
fnstsw
movl
notb
gs
insl
rcrb
inc
xor
pop
addl
and
xchg
sti
mov
into
xor
cmpsl
fwait
add
jl
jnp
cmp
add
mov
loopne
ljmp
mov
in
imul
fwait
into
cmp
inc
insb
sbb
mov
inc
movsb
out
mov
sti
xchg
pop
cmp
clc
negl
add
pop
arpl
dec
mov
add
sbb
or
add
nop
push
pop
into
xchg
sub
addr16
add
cmp
arpl
ljmp
and
enter
mov
aam
std
adc
jge
insb
mov
add
cmpsl
sbb
ret
pop
adc
mov
xor
les
inc
movsl
xchg
push
ljmp
stos
aad
add
add
push
es
and
pop
hlt
and
les
jp
mov
or
lret
push
mov
popf
sbb
push
mov
ret
in
or
jne
lcall
pop
xchg
mov
sahf
gs
adc
push
cmp
mov
pop
and
aam
inc
dec
loope
in
inc
xor
scas
call
or
cmp
dec
cmp
push
xor
add
lea
mov
stos
add
or
sub
mov
mov
jge
js
and
xchg
pop
lea
xor
in
cli
jecxz
cltd
mov
sub
cld
add
sub
test
mov
push
mov
cmp
stc
test
in
mov
and
pop
mov
in
mov
sbb
push
int3
sbb
sbb
jg
ds
mov
mov
jmp
xor
lds
xor
adc
jne
inc
and
movsl
ret
test
xchg
xchg
in
cmc
mov
mov
xor
adc
jne
inc
and
movsl
ret
std
loop
xchg
in
pop
mov
mov
xor
adc
jne
and
movsl
ret
test
xchg
xchg
in
cmc
xor
aad
fidivrl
bound
mov
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
add
out
and
xor
pop
sahf
and
inc
rcrb
pop
jg
arpl
aas
xchg
das
loope
icebp
movlhps
adc
adc
xor
inc
mov
jno
mov
outsl
lds
dec
rcrl
pop
icebp
out
out
cmp
sub
pop
cmpsb
dec
mov
xchg
sbbl
inc
xchg
dec
cwtl
call
xchg
pop
inc
dec
push
lods
jbe
add
in
pop
pop
sbb
jecxz
push
add
and
xchg
push
xchg
adc
outsb
xchg
mov
jp
pop
jl
mov
adc
xor
psubsw
jae
imul
jecxz
lret
xchg
das
dec
loope
psrlw
mov
outsl
mov
jno
mov
stc
nop
mov
insb
adc
xchg
sbb
out
push
js
inc
das
adc
popa
mov
sbb
mov
loope
adc
outsb
fistpll
andl
mov
add
add
icebp
pop
sar
clc
and
es
mov
push
ja
inc
test
fldenv
leave
cmp
pop
call
out
inc
ficoms
and
repz
cmc
push
xchg
pop
rorl
fbld
lods
push
mov
test
xchg
bound
xchg
out
inc
scas
xor
xor
sti
xor
addl
push
in
les
dec
mov
push
mov
xor
popa
lahf
jno
cmpl
dec
sarl
das
loope
icebp
call
out
and
xor
inc
mov
jno
cmpl
dec
sarl
das
loope
icebp
call
push
outsb
add
cmpsb
xchg
jl
outsl
xlat
mov
outsb
imul
mov
inc
pusha
mov
cs
out
cmp
lret
jns
push
cmp
jmp
mov
xchg
std
inc
imul
nop
enter
jnp
or
sub
add
dec
ljmp
fwait
or
repz
ss
push
fldenv
jge
icebp
adc
das
stc
mov
cld
mov
lods
jmp
in
mov
dec
mov
xor
cmp
jmp
xchg
roll
inc
test
mov
shll
push
test
mov
cli
stc
in
ljmp
xor
pop
aas
jle
fiaddl
mov
popf
sub
les
jae
ja
push
sbb
out
insl
mov
pusha
mov
add
pop
sub
seta
loop,pn
cmp
cmp
mov
in
or
xchg
or
and
inc
sbb
xchg
mov
sahf
sbb
sar
stos
dec
mov
xchg
popf
cli
ja
divps
xchg
sbb
pop
test
and
jns
mov
inc
sbb
rolb
cld
or
add
push
lahf
sti
test
dec
push
sub
adc
cli
gs
movsb
xchg
hlt
cmc
loopne
push
nop
cmpl
xor
lret
cmp
test
fwait
das
and
mov
scas
lods
sbb
fldl
pusha
jns
mov
mov
scas
aad
ret
mov
cmp
mov
loopne
jp
sub
or
fstpl
lds
dec
mov
and
pop
sub
xchg
sti
jo
icebp
in
in
lcall
xor
lods
arpl
out
shrl
add
rcrb
pop
shll
mov
test
jp
sti
out
stos
data16
sahf
dec
testl
add
mov
mov
shr
ficoml
add
mov
cmp
jno
inc
cmpsb
or
push
push
test
das
stos
lds
dec
pop
cwtl
xlat
mov
shll
and
popf
cwtl
mov
cld
lock
test
xchg
mov
jp
and
int
push
mov
nop
dec
into
mov
pop
and
mov
jp
or
imul
xchg
rorl
call
lods
push
test
mov
and
out
xchg
ljmp
mov
int3
movsb
mov
mov
loopne
stc
mov
daa
aaa
cmpsl
jecxz
outsb
out
mov
popf
icebp
mov
fs
cmp
mov
pop
pop
and
scas
mov
lds
arpl
mov
sub
mov
sbb
adc
rclb
pop
ds
shlb
pop
add
cmovns
xorb
jmp
aas
scas
and
dec
fmul
stos
jbe
mov
pop
push
popf
lods
adc
ja
add
mov
jl
popa
insb
cmp
mov
test
mov
stc
inc
insb
mov
cs
xchg
or
jmp
jle
or
cltd
enter
and
rcl
jo
xor
ds
bnd
xchg
dec
scas
mov
jl
mov
ja
lods
xorb
jo
cltd
enter
je
inc
xchg
mov
sub
adc
cld
jno
cmp
push
inc
fucom
dec
push
dec
and
dec
push
cmp
lcall
or
outsb
push
mov
cli
lahf
jae
movsb
or
pusha
sarl
inc
mov
dec
pop
push
daa
and
mov
daa
mov
sbb
lret
sbb
loope
jno
scas
dec
divb
xlat
sub
mov
mov
out
enter
repnz
sbb
xchg
or
pop
or
stos
orb
sub
push
add
pop
push
cmp
iret
call
pop
aas
xchg
ja
and
int
iret
add
aad
lahf
xchg
cmc
and
dec
aaa
pop
or
or
mov
or
push
rcll
loop
rcrb
inc
push
push
lea
mov
cmp
or
inc
and
pop
cmp
das
fisubl
lds
xchg
cltd
lret
inc
xchg
mov
in
mov
adc
outsb
cmp
out
dec
sbb
pop
ret
sbb
push
es
in
or
std
hlt
jmp
rep
mov
pop
pushf
mov
mov
divb
sub
mov
fwait
js
pop
sbb
in
mov
push
nop
mov
call
out
mov
and
out
and
xor
lods
mov
stos
sbb
mov
mov
push
mov
pop
sti
leave
arpl
arpl
mov
pmaxsw
sbb
jp
mov
and
mov
mov
cmp
mov
scas
add
lahf
pop
dec
bnd
popf
rclb
sbb
pop
or
pusha
pop
mov
cs
mov
je
lods
loopne
push
inc
xor
popf
and
js
jl
data16
mov
stos
les
arpl
out
pop
adc
sbb
test
cltd
jb
push
out
in
test
mov
and
lods
sbb
cld
fwait
pusha
shl
cmp
xor
sbb
mov
xchg
cwtl
out
imul
popf
push
leave
mov
xchg
call
jmp
jnp
cmp
sub
cmp
test
movsl
stos
hlt
insb
push
int3
push
clc
lret
fiadds
outsb
cmp
push
sub
and
sub
mov
aas
cmc
orb
dec
jecxz
dec
adc
adc
sub
in
cld
xor
cli
inc
jle
or
inc
sbb
rcll
jbe
add
ret
std
pop
jno
cs
or
sbb
js
add
dec
xchg
lret
cmpsb
scas
popf
xchg
add
out
xchg
addr16
push
xchg
xlat
jmp
pop
repnz
rclb
rcll
sub
push
ret
inc
sbb
xchg
sub
mov
icebp
icebp
add
xchg
jecxz
xchg
rcrl
andl
rolb
sti
sar
dec
or
lcall
mov
insl
mov
mov
jno
push
xor
or
pushf
aam
loop
or
int3
in
imul
cmpsl
mov
neg
loopne
fbstp
push
mov
xor
add
xchg
cmp
pop
mov
lods
aaa
aam
dec
cmp
mov
push
ret
dec
leave
pushf
aaa
sahf
jle
cmp
in
pop
xorb
lods
ljmp
mov
xor
pop
or
add
out
or
inc
roll
sub
inc
push
inc
rcrl
pop
xchg
ret
pop
or
int
xchg
mov
icebp
out
push
sub
xor
dec
in
les
cmp
lods
repnz
sbb
loope
neg
mov
cmp
cmpl
out
lds
lcall
sahf
shll
fdivl
push
es
push
mov
mov
adc
mov
imul
daa
sbb
cltd
cwtl
bound
test
jae
push
add
dec
dec
idiv
and
popa
jne
insl
imul
pusha
fildll
shll
sahf
or
das
xchg
adc
sbb
test
push
ret
aam
sub
mov
sub
adc
das
add
sub
push
fstpt
adc
pop
jo
out
sbb
addb
insl
mov
inc
sub
xchg
ss
stos
negl
or
xorb
adc
add
jle
pop
test
add
xchg
dec
and
in
lahf
cmpsl
cmc
xchg
add
inc
idiv
fldcw
pop
movsb
pusha
in
insl
pop
pop
inc
inc
push
orl
mov
cmp
sbb
push
icebp
jle
test
in
sbb
mov
stos
iret
sub
test
jns
je
lea
mov
inc
cmpsl
aaa
xchg
int3
xor
push
adcb
into
stos
jp
jo
sub
aad
mov
les
roll
push
mov
popl
cli
jo
int3
inc
and
pop
lock
xor
hlt
or
lds
int
arpl
js
cld
xor
rol
popa
rolb
std
mov
scas
lcall
mov
insl
leave
xor
or
push
sahf
pop
xor
mov
std
and
jae
inc
add
vfmadd213ss
mov
icebp
push
inc
mov
shrb
sbbb
or
mov
sub
jl
test
and
jb
ror
shlb
pop
scas
test
dec
sub
fildll
popa
cmp
mov
lahf
test
ljmp
inc
fcoms
sti
add
pushf
loop
push
jp
adc
dec
lret
and
and
cmc
xor
or
sbb
xchg
arpl
dec
add
push
iret
loopne
aad
mov
bound
movsl
das
cmp
and
push
cmp
sub
fdiv
in
testl
mov
add
sbb
in
pop
cmpsb
insb
pop
popf
popf
and
lret
sbb
push
stc
sbb
cltd
imul
pop
outsl
test
lods
lea
pop
inc
xor
inc
adc
aaa
jmp
push
sbb
mov
in
enter
fldl
jae
dec
lcall
pop
xchg
into
insb
addb
mov
xor
jmp
push
pop
xor
mov
andnps
loop
or
cli
das
jb
pop
cmpsl
adc
cmp
enter
out
fbstp
mov
mov
std
pusha
inc
pop
adc
push
mov
insl
or
mov
pop
dec
mov
in
clc
cmp
fsubrs
aad
lret
push
jne
xchg
mov
fwait
xor
sub
adc
jbe
and
out
jge
or
add
adc
movsb
sbb
in
lcall
lahf
roll
das
pop
aas
subl
mov
in
inc
xchg
fidivs
bound
push
cmp
dec
in
ret
pop
mov
mov
das
sbb
jge
ljmp
mov
insb
jmp
xor
ds
xor
rorb
mov
xor
call
ljmp
jns
push
outsl
lcall
or
movsb
mov
in
out
fwait
mov
add
mov
lods
xchg
sbb
push
cmpsl
adc
lock
adc
lock
das
mov
pop
stos
add
in
test
dec
insb
inc
mov
cmp
test
add
or
cmc
nop
dec
sbb
into
cltd
fstpt
mov
pop
xchg
test
stos
jae
test
mov
jg
push
add
das
cmp
sbb
xchg
xchg
pop
sub
and
mov
lods
lock
dec
int3
mov
jns
push
int
shl
sbbl
cmpsl
inc
push
stc
sub
iret
in
dec
sbb
or
ffree
push
cmp
pop
icebp
push
inc
cltd
repnz
fldenv
mov
pop
pop
rcrb
jae
dec
scas
lret
aaa
mov
fildl
dec
nop
es
dec
daa
shll
sub
xchg
ret
mov
jmp
add
push
fwait
jmp
ss
fmuls
test
or
mov
into
dec
into
mov
movsl
mov
out
pop
sbb
and
es
mov
test
rcr
jecxz
int3
fldpi
xchg
dec
nop
add
fdivs
mov
gs
incl
jnp
or
or
repnz
dec
aad
cmp
jno
jb
cmpsb
xor
mov
leave
pop
lret
sub
jmp
mov
arpl
test
aam
daa
enter
mov
stc
sbb
mov
shll
sbb
imul
out
mov
scas
std
cmp
adc
imul
mov
adc
mov
enter
iret
loop
fs
mov
inc
mov
sub
dec
or
aam
pop
mov
das
insb
test
jne
jp
lods
xchg
test
lods
mov
jmp
mov
aaa
into
dec
mov
xchg
jl
add
xchg
cmp
push
mov
data16
jnp
cli
push
push
cmp
icebp
cmp
aad
aad
pop
jb
mov
jl
cmp
xchg
stos
adc
jl
adc
mov
jle
mov
sbb
repnz
inc
je,pt
aam
out
outsb
ljmp
sbb
sahf
out
dec
cmp
push
inc
xchg
jecxz
sub
or
arpl
pop
stos
pop
xor
or
push
mov
and
jecxz
push
xor
jno
sub
shrb
bound
test
xchg
cmc
lock
sbb
add
enter
outsb
lcall
jecxz
dec
mov
fwait
dec
adc
cmp
ret
decb
pop
sbb
movsl
xchg
adc
dec
inc
lea
mov
push
ljmp
cmc
jmp
mov
imul
mov
mov
aad
sbb
mov
sbb
mov
xor
es
ss
mov
inc
sbb
jno
jmp
mov
les
bound
negb
or
and
cs
out
xor
addb
xchg
jae
lods
aad
mov
xor
test
fcoms
ds
xchg
shld
lahf
xchg
ret
mov
and
or
jmp
ja
shll
jnp
mov
popa
dec
mov
aaa
popf
movsl
cmp
lret
dec
test
pusha
insl
scas
cmc
notl
jbe
icebp
push
mov
cmp
gs
inc
xor
xor
fcompp
rcr
cmpl
dec
addr16
push
outsb
inc
adc
mov
pop
testb
jns
sbb
push
or
inc
sub
sub
andl
xchg
outsl
fldl
jae
cmp
aas
pop
int3
dec
and
rcrl
sbb
ret
out
xor
loope
jl
mov
jbe
mov
mov
pop
fcomi
xor
dec
mov
lods
stos
not
xor
jge
andb
pop
test
lea
push
add
in
aas
ficoml
inc
fcmovb
xor
cmpsb
mov
adc
out
mov
ud1
sub
repnz
js
xchg
shlb
mov
pop
inc
pop
jmp
inc
sub
sub
jnp
fistps
in
sbbl
mov
xchg
insb
xchg
cmp
sbb
addr16
pop
out
add
and
xor
movb
pop
dec
jp
lock
xor
pushf
stos
lea
mov
out
mov
clc
shlb
imul
test
sub
xchg
or
push
xor
jg
popa
into
jno
lret
ret
psubsw
cmpsb
aaa
cmp
pushf
sbb
lods
les
mov
xor
mov
les
jnp
lds
sbb
mov
adc
cmpsb
stos
in
sbbb
xor
ret
lods
jge
testl
cmp
cs
repnz
repz
mov
leave
xchg
cli
jne
cwtl
aam
add
sarb
loop
dec
cli
jp
clc
adc
push
adc
dec
xor
xor
cli
inc
jle
fwait
ds
inc
sub
fcmovnu
jae
mov
cld
pop
idivl
add
xchg
fwait
push
inc
push
mov
leave
push
jnp
mov
sets
js
daa
pop
mov
and
int
lret
xchg
mov
repz
inc
jmp
xor
pop
mov
fidivs
outsb
loop
jg
inc
or
les
add
loopne
jle
outsb
inc
inc
sti
sub
fisttpll
out
and
jnp
test
xlat
or
and
dec
ret
sub
bound
pop
xchg
dec
pusha
lods
pop
iret
rol
push
lahf
adc
and
shll
sbb
push
cwtl
jecxz
fwait
adc
clc
push
scas
push
cltd
shrl
in
fwait
js
xor
ds
jmp
jnp
rcr
arpl
aas
lret
jmp
jg
sub
sbb
shr
and
test
or
xchg
imul
imul
ds
ja
gs
jb
sahf
gs
popf
sbb
ss
cmp
cs
leave
jne
movsl
aas
bound
mov
mov
mov
stc
sbb
cmpsb
jecxz
hlt
jl
jge
je
xchg
push
dec
les
push
ret
loopne
add
push
pop
xor
cmp
cwtl
fildll
aad
xor
cltd
popf
jbe
mov
sbb
nop
repnz
fdivl
scas
and
jae
mov
test
out
lahf
sbb
mov
in
stc
in
fadds
int
cmp
fcmovu
std
cmpsb
je
cmp
sub
add
and
pop
int
fwait
lret
dec
mov
sti
dec
add
mov
pop
adc
scas
mov
pop
ljmp
mov
shll
cmc
mov
lods
fidivs
inc
sbb
mov
es
inc
daa
xor
fdivs
cwtl
mov
xchg
lods
adc
or
std
xchg
mov
idiv
sbb
add
addr16
or
pop
or
daa
stc
and
inc
push
shrl
dec
nop
dec
dec
xchg
insb
sahf
mov
inc
xchg
jge
pushf
insb
iret
xor
pushf
adc
ljmp
and
lret
jnp
mov
imul
dec
inc
iret
es
inc
or
xchg
test
xchg
ret
jmp
inc
pop
data16
std
or
fsubl
add
pop
adc
or
mov
sahf
adcb
std
daa
xlat
sti
xchg
add
movsb
cmpsl
pop
shrb
es
test
arpl
xorb
test
lcall
push
pop
mov
jne
sti
ds
inc
add
xchg
rolb
test
inc
cltd
push
rorb
ljmp
mov
movsb
mov
xor
inc
in
inc
cmpsl
mov
xchg
int3
call
xchg
cmp
and
ret
pop
jp
jmp
in
xor
inc
in
xor
mov
and
out
mov
out
push
outsb
lods
clc
mulb
nop
lds
sahf
test
repnz
mov
mov
in
sbb
pusha
shrl
cmpsb
aam
sbb
shrl
popa
sti
push
loopne
push
xchg
fs
aas
cmp
mov
cmp
mov
sbb
ret
outsb
sub
xor
jecxz
jecxz
and
in
mov
cmp
adc
out
fsubrl
adc
loope
or
ficoml
outsb
mov
es
cmp
inc
push
mov
int3
lods
jb
icebp
mov
into
mov
sub
xor
enter
leave
fidivs
andl
and
cmpsb
mov
or
xor
cmp
leave
and
sub
jmp
shll
addr16
outsl
and
mov
out
call
inc
faddl
add
cmp
sbbl
into
xchg
adc
push
push
add
pop
outsb
inc
or
das
lcall
dec
mov
dec
clc
mov
mov
or
shlb
movsb
bound
outsb
out
aas
icebp
mov
push
pop
jecxz
mov
jecxz
xlat
sub
lcall
jo
add
fmull
cmp
mov
mov
dec
xor
push
and
int3
mov
mov
sub
mov
jl
lea
stc
jb
mov
leave
ds
test
mov
adc
sar
fstpt
ljmp
sub
push
ss
mov
and
lock
dec
ret
fmull
push
loopne
adc
xchg
sbb
nop
push
cwtl
jmp
lea
cs
sub
in
pop
mov
mov
ret
xchg
movsb
fistpll
fdivrs
pop
push
inc
mov
xchg
push
cld
xor
stc
jp
add
dec
add
test
into
mov
test
out
rcr
mov
adc
mov
jl
sbb
mov
std
jl
jne
sub
cmpb
cli
test
aam
int3
xchg
push
mov
rorb
rcrb
jp
dec
add
mov
loopne
push
cmp
rol
mulb
inc
lahf
fwait
xor
jnp
jl
mov
push
jle
fmuls
shr
and
xorb
jns
dec
and
cmp
cmp
mov
cmc
in
scas
lret
ds
stc
adc
push
in
xor
in
dec
lock
icebp
call
insb
or
stc
pop
leave
mov
sahf
loope
push
and
jle
js
arpl
js
cmp
loope
into
arpl
negl
mov
scas
cld
mov
dec
das
fnstsw
enter
mov
cli
xor
xchg
aam
lods
loope
mov
add
sub
push
cmpsb
sub
das
out
sub
xor
inc
mov
jno
cmpl
dec
sarl
das
loope
icebp
call
out
and
xor
inc
mov
jno
cmpl
dec
sarl
das
loope
icebp
call
out
and
xor
inc
mov
jno
cmpl
dec
sarl
das
loope
rorb
jmp
iret
inc
mov
icebp
jle
outsb
lds
pop
mov
mov
pop
rcrb
loopne
lock
xor
and
jmp
cmp
movsb
mov
mov
sar
dec
fdivp
fsubp
adc
add
xor
and
jle
dec
jno
adc
out
mov
mov
into
icebp
fsubp
or
sbb
sub
cmp
jle
dec
imul
out
enter
sahf
xchg
mov
xorl
inc
push
dec
inc
in
pop
xorb
mov
mov
cltd
push
push
cwtl
jnp
mov
jnp
pop
jno
and
les
inc
jg
loope
pop
adc
sbb
add
push
hlt
push
inc
sub
xchg
out
sbb
je
js
icebp
fwait
movsb
jmp
into
bnd
push
push
push
scas
add
js
dec
jbe
push
in
lods
inc
fimuls
aam
rcll
push
xchg
pop
or
insl
lret
jle
dec
sahf
sbb
mov
jne,pt
leave
fwait
stos
mov
mov
mov
cwtl
xor
push
pop
lcall
out
push
adc
sub
and
jle
dec
jno
js
xchg
mov
mov
into
jmp
loopne
adc
bound
sub
sbb
or
loope
cli
les
sahf
stos
lea
jge
jp
push
dec
or
cmovle
shl
not
sti
mov
sahf
xchg
rcll
push
ds
bound
dec
jno
popa
scas
xchg
mov
mov
into
icebp
fsubp
adc
add
xor
and
jle
dec
jno
popa
scas
xchg
mov
mov
into
icebp
fsubp
adc
adc
ficompl
hlt
mov
adc
aas
push
ret
push
mov
ret
stos
lret
mov
nop
sub
adc
adc
push
popf
std
and
add
mov
ret
aaa
faddp
or
xchg
cmp
dec
clc
aam
sub
xor
ds
imul
mov
gs
mov
push
push
mov
xchg
mov
dec
sub
les
sti
test
rcrb
enter
cmp
and
hlt
cmp
out
jl
in
sub
loop
scas
int3
inc
jo
stos
sub
or
mov
xchg
insl
rorl
push
cmp
jl
mov
mov
adc
lock
loope
dec
adc
xchg
push
jo
in
xchg
or
movsl
sbb
inc
jns
or
call
subl
cmp
loope
xor
cmp
call
push
xchg
dec
mov
insb
movsb
jno
pop
fdiv
lock
cltd
mov
into
lcall
test
loope
pushf
aaa
xchg
inc
jge
mov
jmp
dec
in
out
fsubl
cmp
lds
lods
jp
loop
int
xor
les
push
aas
insb
test
movsb
fsubrl
inc
gs
xor
rcll
sub
cld
pop
and
push
xchg
jae
addr16
and
bnd
sbb
lahf
hlt
push
push
lds
daa
push
jmp
inc
mov
mov
push
mov
and
sbb
dec
in
xor
mov
cmp
cs
test
xor
pop
mov
das
push
xchg
adc
jns
sbb
dec
lahf
lds
add
and
mov
mov
lcall
hlt
fcmovnbe
cmpl
xchg
mov
dec
iret
inc
pop
xchg
cmp
or
dec
pop
add
xor
adc
xchg
outsb
mov
pop
fsts
out
shrb
sarl
sbb
repz
mov
push
movsb
cld
lret
in
ja
adcl
mov
push
mov
pushf
fidivrs
in
xor
lcall
pop
push
cmp
mov
pop
dec
cs
xchg
repnz
cmp
inc
sbb
mov
lahf
or
in
movsb
inc
in
adc
divps
xchg
push
xlat
lret
pop
xor
push
mov
mov
mov
sarb
fiaddl
sbb
sub
push
lret
lcall
ss
scas
movsb
add
pop
ss
mov
or
pop
in
sahf
aas
cld
shll
push
add
or
loope
out
add
add
fnstenv
notl
pusha
xchg
in
push
lock
test
cmp
mov
fdivr
jb
jo
or
lret
xor
push
push
mov
xlat
out
jecxz
cmp
aaa
daa
inc
dec
loop
jns
add
dec
jo
call
cmp
mov
dec
cld
repnz
push
ror
fs
adc
or
mov
ljmp
mov
mov
xchg
fbstp
and
inc
out
or
sbb
cmp
xorb
inc
add
jle
mov
dec
popf
mov
mov
and
sti
movl
aad
push
rcrl
aas
clc
mov
aaa
cmpsb
leave
pop
cwtl
and
jge
mov
ret
mov
cli
sbb
pop
xchg
loope
jmp
jno
mov
cmp
lcall
cltd
sub
mov
mov
call
and
xchg
fiadds
jb
sub
mov
rol
mov
ljmp
pop
mov
outsl
pop
bound
xor
cmpsb
mov
sbb
xor
xchg
sub
aas
mov
scas
push
orb
pop
pop
lock
jge
int3
and
xor
fwait
sub
pop
inc
pop
xchg
push
sub
sbb
test
addr16
std
cwtl
push
bound
mov
push
ficomps
jmp
xor
add
insb
cmp
cmpb
stos
mov
leave
rolb
cmp
lea
fmul
fwait
pop
out
dec
movl
mov
mov
push
std
dec
cmpsb
lret
xor
or
test
loop
repz
int3
push
adc
mov
pop
fwait
clc
push
push
inc
jbe
mov
mov
aaa
popf
push
mov
daa
jecxz
loope
aam
push
test
cwtl
xor
ret
push
mov
call
cmp
push
jns
mov
test
mov
add
jnp
outsb
xlat
xchg
push
cmp
or
stos
enter
gs
adc
push
pop
test
nop
and
pushf
and
repnz
out
lods
mov
xchg
xchg
cmpsl
cmc
lret
in
add
mov
fwait
ror
jno
and
stc
mov
inc
inc
push
insb
aas
mov
iret
movsl
push
fwait
cmpsb
mov
mov
loopne
sbb
add
jno
ljmp
jecxz
push
inc
mov
adc
xchg
push
mov
pushf
int
mov
cmp
out
mov
push
cmp
mov
out
cwtl
jmp
push
sahf
dec
stos
dec
inc
hlt
dec
xchg
pop
in
mov
rol
sub
loope
mov
repz
and
icebp
scas
iret
test
ds
dec
fwait
in
xchg
push
xor
push
test
jb
cmpb
ror
xchg
adc
sub
inc
and
movlhps
cmp
pop
loopne
pusha
inc
pop
pushf
lret
out
push
movsb
aam
dec
in
sub
stos
pusha
roll
and
cmp
inc
xorb
in
jecxz
xchg
es
cld
popa
sub
mov
sub
in
dec
xchg
push
push
insl
cmp
add
inc
sahf
cmp
es
push
icebp
mov
inc
or
lea
dec
adc
jg
dec
popl
mov
mov
les
negl
lea
push
stos
hlt
sbb
mov
pop
out
add
lock
pop
rolb
mov
outsl
inc
adc
leave
push
movsb
and
incl
inc
or
aas
mov
adc
scas
push
fwait
adc
cmp
mov
pop
call
jecxz
repz
and
imul
test
xor
and
mov
outsl
sub
lock
sbb
inc
mov
ret
scas
in
pop
ss
sbb
add
mov
and
xor
int
popf
jmp
imul
cmp
fwait
and
lods
fs
cmp
cmpsl
fnsave
xor
test
insl
mov
push
xchg
adc
in
sahf
outsl
push
aas
mov
mov
adc
nop
into
xchg
movsb
cmc
xchg
and
sbb
xchg
les
push
push
jecxz
loop
orl
imul
or
and
jo
cmpsl
in
in
mov
mov
jno
xchg
mov
pusha
cmp
cmc
or
fnstcw
adcb
xchg
imul
push
push
mov
dec
shrl
rclb
adcb
jmp
das
adc
inc
inc
imul
fisubrl
pop
aaa
add
jecxz
bound
push
inc
adc
loop
popf
sahf
jo
push
xchg
adc
pop
mov
lret
pop
rcrb
out
pop
mov
and
lods
fisttpll
xor
xor
dec
stos
pop
adc
jns
into
xor
aas
imulb
inc
in
push
and
sti
adc
ljmp
loopne
cwtl
mov
pop
pop
imul
cmpl
je
jge
or
fildll
jp
mov
inc
add
cmpb
ds
add
mov
dec
rorb
ret
lds
fs
cmp
lret
fidivrl
pop
lcall
mov
ret
insb
and
lret
or
ja
rorl
dec
fisubrs
or
mov
jl
sti
inc
push
add
aaa
add
xor
bound
fwait
addb
xor
dec
adc
jbe
arpl
xchg
bound
dec
imul
push
xlat
js
mov
jle
pop
xor
or
mov
test
xor
in
mov
imul
ja
adc
inc
or
xor
movsb
pushf
cld
add
in
das
in
data16
shll
mull
pop
test
sub
inc
xchg
test
or
push
mov
dec
leave
cmp
mov
and
sbb
loope
out
imul
jae
lock
lret
and
push
outsl
pop
add
adc
push
test
pop
and
jmp
rorb
cmpsl
cli
mov
push
loope
push
lcall
scas
fcom
pop
dec
lds
sti
rcr
ret
add
push
sub
enter
add
cs
inc
ret
mov
in
jno
movsl
push
gs
mov
imul
or
cmp
rcll
sti
dec
gs
in
mov
dec
sbb
mov
xchg
cmpsl
xor
xchg
jp
lret
stos
cltd
adc
cmc
pop
or
mov
and
scas
orb
mov
inc
pop
push
mov
dec
add
adc
mov
lods
clc
adc
daa
xor
lcall
xchg
inc
pop
mov
dec
add
and
push
mov
xchg
adc
ljmp
pop
jbe
lock
repz
adcl
loopne
cmc
xor
adc
pop
xchg
outsl
and
sub
push
clc
push
cmp
imul
arpl
jmp
ret
into
push
xor
movsl
jns
mov
in
add
sub
hlt
cmpsl
pop
mov
test
movsl
ret
int3
shl
mov
push
ds
inc
xlat
xchg
rorb
lock
popa
add
test
mov
test
mov
sub
enter
cli
js
inc
dec
arpl
pop
jb
out
cmp
sbb
mov
out
cmp
jno
xor
xchg
mov
or
sub
sub
lret
mov
rclb
xchg
movsl
call
cmp
pop
jl
iretw
rorb
xor
xchg
push
mov
add
repz
test
insb
jmp
jle
adc
das
and
xchg
jns
xchg
dec
scas
sbb
fidivl
test
shrb
mov
outsl
mov
fcmovu
mov
push
insl
movsl
xchg
jae
xchg
push
mov
repz
movsb
push
pop
enter
jmp
shrb
jbe
movsl
and
fwait
cwtl
jnp
pop
movsl
inc
ja
jle
xor
outsl
push
movzwl
fbld
out
xchg
mov
enter
mov
xor
out
mov
fs
add
jnp
out
pushf
movsb
mov
and
in
shl
outsl
mov
xlat
sub
xor
adc
and
aas
aam
mov
mov
pop
sbb
inc
in
cmp
js
xor
test
in
jle
test
jb
arpl
insb
cmp
sbb
or
lea
cs
cmp
fisubs
or
daa
insb
icebp
call
mov
inc
mov
scas
jo
vpsraw
imul
fdivl
xchg
cmp
xchg
mov
and
mov
sbb
int3
imul
dec
fldl
jns
lea
orb
push
jne
adc
jge
rclb
adc
stc
shlb
rol
mov
mov
mov
add
push
push
mov
popa
fsubs
xor
popa
add
inc
lahf
mov
mov
call
mov
movsl
aad
lret
rcl
ss
fldcw
sbb
int3
mov
clc
shrb
or
aam
sub
and
roll
int
cld
inc
outsl
movsl
mov
aad
xlat
mov
bound
cmp
add
inc
inc
int
loopne
lods
pop
pop
aam
sbb
or
mov
mov
sub
repz
orb
sbb
cld
lfence
mov
cli
sub
jnp
scas
push
decl
popa
insb
mov
mov
mov
sub
mov
pop
mov
adc
inc
jbe
xor
and
out
mov
inc
enter
pop
ss
mov
cmp
jl
imul
and
pop
ficomps
leave
adc
rcr
aas
js
sub
das
in
dec
add
sub
jl
mov
add
and
pop
cmpl
sbb
mov
mov
dec
xchg
popa
mov
xchg
push
jle
sbb
inc
in
iret
movsl
gs
and
ja
cld
mov
mov
jg
pop
mov
insb
stos
xchg
in
mov
xchg
popa
dec
inc
movsb
dec
push
mov
stos
push
cmp
sbbl
lods
das
subl
mov
xor
push
loopne
fs
push
outsl
adc
cmp
test
fwait
adc
dec
loop
bound
mov
sti
pop
pop
lock
fisubrl
mov
push
inc
pop
pop
mov
or
rorb
or
fs
fstpt
push
mov
cmp
andl
int
daa
pinsrw
mov
and
sbb
arpl
add
xchg
inc
pusha
sub
mov
gs
test
lods
mov
cld
std
imul
les
fisubrs
jnp
or
outsl
imul
jmp
sub
subl
pusha
in
addr16
cwtl
shlb
enter
xorb
cmp
out
repnz
cmp
add
add
idiv
or
nop
jns
rolb
jecxz
cmpsb
or
push
inc
jl
scas
push
icebp
out
pusha
cmp
lret
adc
add
pop
leave
jl
data16
adc
out
pusha
mov
and
mov
jmp
sub
fsubrl
shl
mov
enter
push
hlt
cwtl
sub
mov
mov
repz
cmp
and
adc
es
mov
test
adc
and
into
mov
pop
xchg
inc
hlt
aas
pushf
sub
xchg
adc
push
aas
nop
icebp
ja
rcrb
push
aad
arpl
das
xchg
subl
cmp
pop
int
mov
gs
xchg
mov
jno
ficomps
push
adc
push
int3
jae
loopne
pop
add
cmpsb
push
testb
push
loope
or
shr
insl
dec
sahf
lahf
xor
jno
mov
adc
inc
cmc
xchg
xchg
push
pop
cwtl
gs
xchg
lods
xchg
and
dec
sti
fidivrs
mov
cmpsl
out
out
dec
hlt
fldl
in
fmul
and
push
sub
test
fdivrl
add
sub
xchg
jo
leave
and
in
pop
mov
push
aaa
sbb
jmp
mov
popf
dec
mov
jo
sahf
jae
mov
cmp
xor
repnz
xlat
in
hlt
inc
inc
push
out
scas
inc
inc
jecxz
out
cmp
ret
add
out
arpl
jecxz
dec
push
xchg
fisttpl
pop
stc
mov
xchg
xor
jnp
mov
sti
and
arpl
and
inc
fisttpl
mov
insb
push
cmp
adc
lret
fiadds
push
mov
rcr
stc
and
mov
xor
es
arpl
mov
dec
stos
in
dec
push
enter
ja
mov
sbb
sti
popa
dec
cmp
pop
jmp
jne
mov
jae
and
or
xlat
cmp
mov
cltd
fbld
sbb
xchg
inc
xchg
aaa
xor
lcall
hlt
cmc
test
or
test
pop
pop
mov
pop
push
mov
mov
xor
sti
ja
flds
js
ret
pop
insb
cli
scas
lahf
incb
mov
in
mov
shrl
pushf
mov
mov
cmp
loope
pop
test
lret
rcll
mov
sbb
stc
mov
es
jne
mov
xchg
xor
outsl
jne
stc
pop
loope
shrb
mov
push
insb
mov
push
jnp
addr16
cmc
outsl
mov
cmc
in
add
jle
inc
or
mov
inc
out
aam
fiadds
push
mov
sbb
mov
dec
inc
aad
lcall
cwtl
inc
lods
xchg
xchg
sbb
movsb
xchg
dec
in
cmp
ja
shrb
add
aas
cld
loope
in
ret
dec
call
push
xchg
pop
add
ror
ljmp
cmp
inc
lret
mov
not
mov
add
xor
sar
aam
js
pusha
mov
test
mov
js
sbb
int3
xor
jns
and
sbb
lock
pop
inc
sub
adc
dec
js
and
xchg
sahf
mov
add
cmp
lcall
mov
and
xchg
sub
sub
add
mov
push
aam
clc
pop
dec
movsb
push
mov
daa
pusha
idiv
mov
inc
daa
test
jnp
test
jp
lahf
outsb
aad
cmp
xchg
sti
lret
pop
shl
movsl
jo
and
iret
cli
out
push
mov
adc
xor
and
cs
fdivl
pextrw
sbb
into
lods
inc
cwtl
ffreep
cmp
xchg
cmpsb
subb
xlat
aas
cmp
in
lods
pop
mov
mov
mov
mov
pushf
cs
sbbb
in
xchg
jp
jb
test
mov
sub
mov
mov
sarb
negl
iret
sub
ljmp
aam
lods
dec
les
lds
fsts
add
rdtsc
push
mov
fdivrs
jb
outsb
in
pop
jne
push
fdiv
out
inc
aaa
add
cmpl
sbb
jle
adc
sub
sub
and
outsb
jnp
xchg
lock
sar
repnz
or
add
iret
xchg
paddsb
mov
push
sahf
pop
inc
cmp
daa
mov
jno
sub
daa
push
int
ret
cmc
adc
inc
int
movsb
dec
push
push
or
stc
test
fisttpl
push
mov
pop
cmp
jb
andl
mov
cmpb
movsl
mov
push
pusha
push
jnp
sbb
clc
data16
lods
mov
mov
cmpsb
ljmp
sar
inc
enter
test
insl
inc
js
jge
lods
daa
dec
lds
fnstcw
scas
xor
adc
push
hlt
into
mov
sub
pop
and
dec
aaa
sub
addl
sbb
mov
cmc
call
sub
scas
xchg
gs
outsb
loop
cmp
jne
outsb
out
icebp
dec
repz
sbb
call
gs
imul
outsb
das
out
or
xchg
push
pushf
sahf
adcl
lret
in
int
mov
jle
pop
push
pop
pop
adc
jbe
mov
jle
pop
jb
cwtl
movsb
aaa
daa
jecxz
dec
mov
daa
or
add
lds
push
xchg
jne
cmp
or
lods
andb
rcll
pop
aad
inc
mov
jecxz
pop
add
cmpsb
lods
sbb
pop
addl
pop
cmpl
push
es
rcll
push
xchg
xlat
in
xor
fisttpl
mov
inc
fldenv
mov
cli
inc
pop
push
mov
into
jbe
jp
sub
gs
jno
rorb
sbb
xchg
push
sbb
ror
push
hlt
ljmp
loope
cmpsb
in
pop
out
add
jle
repz
aas
aam
xchg
loopne
sub
dec
adc
add
lods
jno
cmpsl
loope
mov
push
pop
les
jne
xor
dec
adc
outsl
fcoms
bound
pop
pushf
add
clc
mov
cmovae
jno
nop
daa
es
imul
or
xchg
mov
push
lods
sti
clc
xchg
dec
mov
shr
leave
sub
mov
inc
mov
ficomps
fmull
les
les
push
daa
xchg
inc
push
xchg
mov
leave
lret
mov
lea
push
jno
xchg
xchg
sbb
pop
stc
mov
cmp
and
insl
pop
stos
orb
inc
gs
jb
dec
iret
and
xchg
cwtl
arpl
jo
dec
push
mov
mov
mov
jge
lock
ret
fldcw
scas
call
xor
outsb
jg
popa
push
popl
lods
into
xor
jno
into
push
mov
sahf
insl
sbb
xor
jmp
xlat
enter
hlt
sbb
test
adc
push
adc
adc
sub
mov
xor
pop
fdivrs
loopne
scas
rol
ljmp
stos
repnz
mov
mov
pop
outsb
loopne
cltd
movl
xchg
flds
xchg
mov
jb
xor
push
clc
adc
ret
cld
mov
mov
cwtl
add
lret
lret
daa
addl
dec
sarl
dec
or
mov
stos
shr
movsb
fbld
sbb
mov
iret
into
dec
pop
sti
jge
sub
mov
cwtl
add
xor
and
jle
dec
jno
popa
scas
xchg
mov
mov
into
icebp
fsubp
adc
add
xor
and
jle
dec
jno
popa
scas
xchg
mov
mov
into
icebp
fsubp
adc
add
xor
and
jle
dec
jno
popa
scas
xchg
mov
movsl
out
sar
ror
das
adc
push
and
jle
dec
jno
mov
and
sahf
cltd
pop
jbe
xor
in
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
testb
addr16
aam
xor
jnp
test
pop
or
add
or
mov
push
add
add
add
mov
out
add
add
dec
add
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
popf
add
add
add
or
add
add
jl
test
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
fiaddl
fldl
dec
add
add
push
add
add
lahf
add
das
add
add
add
inc
add
loope
mov
sub
add
dec
add
add
add
add
add
push
sub
rolb
add
add
add
add
xor
xchg
add
add
rolb
lahf
add
xchg
add
movb
add
add
or
lret
add
add
add
add
add
add
add
add
lods
add
add
add
enter
or
add
add
sbb
mov
add
add
add
loopne
loope
xor
popf
add
roll
or
addb
add
add
add
add
sub
pop
add
add
aad
lahf
add
add
add
add
add
add
add
dec
add
outsl
add
add
addl
lods
add
fiadds
dec
add
add
add
add
xor
int
daa
add
and
cmpsl
add
mov
add
add
add
add
add
adc
add
add
rolb
mov
add
add
add
add
add
add
add
add
add
jge
mov
icebp
add
add
adc
rolb
adc
add
add
add
add
add
add
add
add
jl
fwait
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
iret
add
jo
and
sub
int3
add
sbb
add
add
add
add
add
add
add
add
add
add
jo
test
imul
adc
jecxz
pop
add
add
loope
fadds
push
add
lahf
add
add
sbb
add
add
add
pop
add
add
add
add
cs
add
jl
add
add
add
insb
add
add
add
or
ret
add
add
add
in
and
ret
add
add
lds
scas
add
jl
xchg
add
add
add
addl
add
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
xchg
add
add
add
add
add
scas
add
add
add
add
add
add
jl
test
adc
lods
add
add
add
add
add
add
add
add
outsl
add
add
add
add
add
adc
add
add
add
add
es
xchg
xor
jmp
test
inc
addl
adc
loop
das
test
mull
pop
mov
lcall
sbb
imul
adc
stc
sbb
sbb
mov
data16
int3
insb
cmc
jl
jmp
sbb
sbb
lock
cwtl
jl
pusha
push
and
jne
adc
xor
jl
add
rcrb
imull
jle
cmc
mov
pushf
roll
sbb
fnstcw
mov
lods
leave
outsl
jl
inc
sub
cmp
push
jle
sarb
movsl
je
rorb
xchg
push
out
lahf
int3
pop
xchg
je
push
repnz
push
mov
lods
out
jb
sub
lcall
add
cmp
push
imul
add
cmp
jae
pushf
js
jae
in
imul
jge
or
in
jge
adc
or
pop
fs
xor
cmc
mov
push
mov
jecxz
scas
pop
je
add
cmpsb
xor
and
mov
js
and
push
lods
or
sbb
cltd
mov
out
mov
jae
xlat
daa
fsubs
in
xlat
jo
or
xor
inc
cltd
outsb
enter
mov
push
jne
xor
add
jae
scas
cmp
xlat
ror
stos
lret
jle
push
pushf
sub
and
and
hlt
jle
inc
sub
loop
les
lret
into
cmp
pop
pop
mov
jne
mov
stos
loope
mov
sahf
or
jle
fsubs
push
aam
gs
and
and
mov
xor
sahf
lea
mov
jo
out
dec
dec
clc
mov
lock
cmp
lods
into
push
pop
push
or
test
enter
dec
xor
sub
inc
push
sarb
jnp
cmpsb
xchg
add
inc
jmp
pop
lret
dec
mov
jecxz
std
ficoml
iret
lock
lock
stos
cli
mov
dec
push
push
sub
imul
dec
adc
lods
imul
xchg
cld
xchg
inc
sbb
aaa
jmp
fisubl
and
dec
jp
sub
stos
dec
stc
and
jge
adc
mov
sub
lahf
pop
and
xor
pop
mov
dec
rcrl
pop
fisubl
jle
in
adc
xor
cmpsb
cmp
sub
pop
xor
push
inc
adc
sbb
lods
add
sbb
test
test
mull
scas
popf
jo
mov
rcr
jecxz
push
xchg
mov
into
sbb
lahf
fdivr
loopne
gs
arpl
sbb
std
iret
mov
jecxz
es
jecxz
je
lods
out
negl
mov
push
sub
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
