pop
pop
rolb
or
add
or
add
or
mov
or
add
add
or
adc
cmc
or
and
jge
mov
add
rolb
or
add
or
add
add
rolb
xchg
add
lock
add
lock
seto
popf
or
addb
pop
rolb
add
mov
lahf
add
add
mov
add
mov
add
pop
jo
cmp
mov
pop
add
addb
add
push
add
pop
rolb
add
add
push
addb
add
add
add
push
add
or
add
rolb
push
pusha
add
loopne
mov
push
jo
fildl
rolb
aam
push
add
add
add
lock
add
add
addb
punpcklbw
rorl
sti
push
loopne
adc
push
add
rolb
aas
push
addb
add
add
inc
add
lock
add
sbb
add
push
lock
nop
add
or
add
add
inc
add
sbb
mov
add
add
aaa
push
add
and
lock
add
sub
or
add
add
mov
add
push
addl
add
add
mov
add
outsl
add
add
or
rorb
add
pusha
add
add
mov
std
or
add
add
lret
add
and
push
add
add
jo
in
pusha
add
xadd
add
lock
jo
lret
add
or
add
or
add
pop
inc
add
pop
push
add
mov
mov
add
add
jo
repz
add
add
add
or
add
rolb
push
mov
push
popl
mov
movb
mov
mov
movb
call
movb
movw
cmp
jne
movl
movb
ret
movl
push
popl
push
and
andb
push
push
popl
mov
subl
pusha
xorb
push
popl
call
addw
mov
push
popl
push
push
popl
xorl
orl
orl
addl
andl
push
orw
push
popl
call
push
popl
push
popl
cmpl
jne
sbbl
orb
call
push
popl
addb
ret
xorl
movl
jmp
movw
mov
xor
push
popl
mov
sbbl
shl
sub
subb
mov
push
popl
sbbl
shl
push
popl
mov
andl
cmp
jne
orb
xorb
mov
andb
xorb
sub
xorb
movl
call
push
popl
popa
add
addw
pusha
push
popl
push
popl
call
and
push
popl
mov
addb
subb
push
push
popl
xorl
and
addl
sbbb
push
or
subb
call
add
push
or
xorl
push
popl
push
popl
addl
or
add
pop
push
popl
push
popl
cmp
jne
sub
push
popl
ret
xor
push
popl
popa
or
movl
call
xor
push
orb
xorl
sbbw
andw
addl
subw
push
popl
push
push
popl
call
push
popl
push
push
mov
add
xchg
mov
mov
push
popl
shl
sub
push
popl
push
push
popl
sub
xor
andl
push
popl
push
movw
call
sub
sbbb
push
or
push
popl
mov
mov
orl
push
sbbl
push
popl
jmp
push
popl
pop
and
sbbl
mov
push
popl
push
push
popl
push
orw
push
xorb
mov
push
popl
orw
mov
andw
sbbw
rep
push
popl
push
popl
pop
mov
pop
push
add
mov
xor
xchg
push
mov
mov
add
xchg
push
popl
sub
xor
addw
push
popl
jmp
addl
sub
addw
andl
mov
push
popl
push
popl
sub
orl
sub
sbbw
mov
push
popl
addl
sub
xorl
add
or
jne
push
popl
add
subl
jmp
push
popl
mov
addw
shr
push
popl
shl
push
popl
mov
push
popl
add
push
popl
sbbl
jmp
or
sbbl
sub
push
popl
mov
push
popl
add
push
popl
push
popl
cmp
jne
sub
addl
mov
movb
add
subl
mov
xorb
push
popl
add
andb
push
popl
cmp
jne
push
popl
ret
xorl
xorl
push
add
xor
movb
andb
pushl
push
popl
add
pop
push
popl
and
lea
andl
addl
or
orw
mov
xor
xor
mov
sub
lods
subl
addw
mov
orb
pop
xor
ret
sub
push
xorl
mov
andb
push
popl
add
push
popl
push
or
addw
push
andl
push
popl
push
mov
addb
push
addw
push
push
popl
mov
addb
mov
push
popl
push
popl
add
sbbl
pushl
sbbl
mov
andw
add
push
popl
push
popl
add
and
mov
movl
add
push
popl
xor
sbbw
push
popl
lea
push
popl
and
mov
push
popl
add
andw
mov
movw
orl
xor
push
popl
rol
push
popl
xor
movb
inc
push
popl
xorw
cmpb
jne
push
popl
cmp
je
xorl
inc
push
popl
cmp
jb
xor
mov
push
popl
add
orw
push
popl
movzwl
orw
mov
subl
add
push
popl
push
popl
mov
subb
add
mov
pop
subw
cmp
jbe
orb
cmp
jae
push
popl
pushl
push
popl
xorw
pushl
push
popl
xor
push
orw
orb
xorl
sbbw
addl
movw
pushl
push
popl
call
addw
call
push
popl
pop
push
popl
pop
push
popl
pop
push
popl
add
pop
sub
xor
pop
subb
leave
or
ret
andb
call
divb
fstpt
mov
mov
lds
xor
dec
mov
pop
call
fildl
jmp
inc
insb
xchg
xchg
jle
stos
ficoml
add
xchg
inc
push
aaa
mov
mov
xchg
jns
mov
mov
push
int
cmpsl
loopew
cltd
lret
jae
jl
popf
daa
xchg
push
xchg
fimuls
stc
or
xchg
imul
cwtl
lret
imul
fcom
sahf
sti
cmp
dec
stos
ds
imulb
dec
ja
test
or
fdivrp
outsb
xchg
stc
lret
fdivrs
xor
imul
test
ja
outsl
mov
clc
pop
mov
lock
lods
out
xor
movsb
cltd
dec
es
and
xchg
and
inc
jns
sti
leave
xchg
cmpsl
xor
cmp
lahf
ret
cmp
jno
nop
cmp
fisubl
mov
loopne
or
mov
xlat
mov
add
cli
mov
push
dec
jae
mov
or
xor
cwtl
ret
in
loope
imull
mov
js
out
subl
xchg
pop
mov
mov
clc
cmp
adc
out
mov
mov
lods
cmp
xchg
mov
loope
xor
in
jle
push
mov
arpl
and
pop
xchg
xor
sahf
sub
sbb
ds
mov
push
mov
es
dec
push
xor
adc
fwait
divl
lods
lahf
xchg
subb
jg
inc
xchg
imul
ds
mov
out
jns
xor
inc
popa
push
movsb
jnp
jecxz
mov
mov
lea
outsl
into
xchg
sub
test
mov
inc
cmp
mov
ja
push
jecxz
mov
and
sti
jo
xchg
mov
adcl
pop
aam
scas
pop
mov
push
or
adc
jno
lahf
cmp
mov
sar
mov
dec
shlb
test
mov
imul
or
jno
ja
dec
in
push
out
and
push
pop
and
fildl
lret
mov
push
pushf
movsb
fistl
and
adc
xchg
imul
cli
jns
popf
in
push
cmp
or
cmpsl
adc
mov
jmp
js
ret
and
lret
out
fiadds
and
ljmp
imul
dec
mov
lcall
jl
mov
pop
lahf
ret
mov
movsb
sahf
push
fiadds
mov
mov
sti
leave
xchg
movsl
data16
sti
cmp
adc
movb
mov
mov
fnstsw
lret
repz
out
repnz
push
cmpsb
mov
andl
movb
mov
ror
sti
inc
in
arpl
fstpl
jns
pop
or
lods
sub
sbb
in
mov
fsubs
jne
pop
or
ficompl
in
pop
ret
push
mov
xchg
cmpsb
pop
xchg
sub
adc
hlt
lcall
inc
pop
std
adc
inc
pop
or
orl
push
out
clc
xor
ret
rorl
enter
pushf
repnz
sbb
dec
and
mov
movsl
push
test
dec
cmc
pop
add
xchg
test
das
divl
ss
mov
insl
push
insb
lcall
xor
cltd
or
mov
aad
test
rorl
add
and
pop
jno
add
xchg
xor
call
mov
dec
lret
and
mov
jl
jns
ret
cmp
jmp
push
in
es
test
movnti
push
adc
and
lods
or
xchg
fcoms
popf
mov
inc
or
jmp
cmp
sbb
negb
out
inc
xchg
pmulhw
mov
sub
xor
and
mov
jp
dec
mov
cmp
loop
pop
push
xor
sub
xchg
loop
xchg
clc
scas
push
add
and
dec
les
jecxz
outsb
or
out
loopne
xchg
ret
and
fiadds
pop
loopne
adc
push
rcrl
pop
xchg
jg
adc
mov
lret
sub
in
ja
xchg
movsb
xor
dec
xor
mov
imul
out
mov
pop
mov
mov
mov
xor
xchg
loopne
jns
jle
mov
popf
mov
cmp
pop
iret
dec
xchg
jl
imul
or
shlb
scas
mov
jno
jge
sbb
lret
mov
mov
and
incl
or
ret
xor
mov
es
add
icebp
in
outsb
sbb
mov
cmpsb
mov
adc
insb
or
jns
mov
sub
and
jns
pushf
ss
cmp
add
popa
mov
adc
sbb
xchg
loopne
mov
nop
adc
movsb
xor
xchg
jecxz
push
dec
pop
jmp
push
or
push
orl
test
mov
imull
cs
clc
loope
adc
mov
mov
push
jae
push
repz
test
mull
mov
subb
test
cmpsb
jno
outsb
xchg
imul
jne
lret
push
cmp
outsl
out
notl
lds
in
push
movsb
clc
nop
arpl
jmp
push
jae
ud2
mov
sub
hlt
jns
mov
lret
pop
mov
loopne
or
xchg
sbb
shll
push
xor
mov
push
cmp
clc
dec
in
loop
bswap
cmpsl
pop
inc
sub
cmp
pop
dec
jbe
out
test
xor
test
cmp
aad
in
test
loope
call
mov
int3
push
ljmp
subl
mov
mov
or
cmp
and
aam
rcrl
je
lret
pop
jnp
out
mov
cmpsl
mov
ss
mov
repnz
lods
add
in
and
push
add
xchg
sub
mov
test
fisubrs
push
in
pop
outsb
cltd
sbb
cwtl
and
add
jmp
mov
xor
enter
xchg
pushf
mov
call
xchg
repnz
jle
andb
xchg
lock
jno
lds
xlat
movsb
sti
sti
adc
cmpsb
leave
mov
aam
and
mov
and
fiadds
int
jl
imul
sub
adc
lods
cmpsb
out
fs
add
cmp
add
push
sbb
or
pushf
mov
insl
popf
call
aam
or
mov
and
leave
xorb
fiadds
and
lcall
adc
jae
or
push
ficoms
sub
mov
jp
xchg
dec
pop
insb
dec
xchg
xor
fxch
push
fwait
add
mov
xchg
lods
jb
push
mov
cmp
adc
jno
ds
mov
mov
jecxz
jae
cli
movsb
fsubl
push
es
or
push
dec
test
mov
jbe
mov
cmc
std
mov
fdivrs
mov
cmpsb
mov
or
sub
lret
xadd
push
pop
dec
dec
push
pop
adc
testl
xor
or
adc
out
out
clc
stos
or
in
inc
loopne
pop
push
jg
loope
loop
repnz
mov
scas
pop
add
jecxz
scas
sbb
jl
sbb
hlt
sub
mov
cmp
mulb
dec
add
jmp
adc
or
inc
inc
adc
ja
or
mov
test
and
xchg
mov
repz
lcall
icebp
in
lret
ljmp
test
call
stc
sbb
jbe
lret
sbb
stc
js
add
push
jp
jnp
popa
cmp
movb
out
out
hlt
and
stc
lea
xor
push
xor
inc
std
cmp
aad
addps
mov
loope
mov
push
test
cs
out
or
jns
push
sbb
loope
in
ss
notb
jecxz
push
mov
inc
jo
mov
test
int
jno
leave
sbb
mov
and
std
inc
adc
fsubrs
fisubs
sti
inc
adc
out
pop
cwtl
mov
push
mov
xchg
fsubrs
pop
test
sahf
mov
adc
jno
add
mov
adc
js
sbb
fistps
fists
sbb
sbb
lods
ja
decb
jecxz
cmp
mov
scas
add
cs
and
and
sbb
or
addb
jae
pop
dec
negl
testb
adc
andb
out
dec
leave
imul
mov
pop
dec
notl
xor
pop
les
popa
mov
outsb
das
xor
mov
mov
sbb
out
out
clc
xchg
push
mov
xchg
movaps
xor
add
adc
push
fucomip
mov
inc
stos
test
cltd
mov
ljmp
mov
inc
ret
xlat
dec
movsb
movsb
negl
bound
loopne
out
andb
mov
xor
in
ret
xor
cld
icebp
adc
jecxz
fldenv
mov
add
lea
add
stos
lret
pop
ficompl
cs
sub
cltd
repz
pop
out
das
xchg
push
xchg
sbb
rorb
xchg
cli
mov
out
inc
mov
xor
sbb
cmpsb
imul
fistpll
jbe
add
sbb
arpl
ss
sub
daa
rorl
and
add
cmp
pop
in
andl
rep
xor
push
fwait
mov
fiadds
lds
repnz
sbb
ds
or
pop
mov
nop
or
xor
jbe
aas
lods
jae
inc
sarl
push
sbbl
in
data16
repnz
inc
sbb
popa
ret
ret
pop
into
xor
xor
pop
push
cmpsb
ljmp
ret
mov
out
inc
out
mov
mov
xchg
pop
cmpsb
aaa
mov
mov
mov
jp,pn
std
leave
xchg
out
notl
jb
sbb
inc
and
fbld
sbb
test
inc
out
mov
xor
add
fwait
add
lahf
rcr
outsb
cmc
fbstp
pop
or
add
popa
mov
adc
fsubl
loopne
mov
mov
js
fwait
icebp
sarl
add
popa
mov
and
mov
in
jl
xchg
mov
sbb
xchg
jns
sub
or
jmp
mov
inc
lock
mov
notl
adc
je
jbe
sbbl
dec
sbb
lock
xchg
xchg
push
lock
push
push
cmp
jl
inc
jmp
mov
ss
dec
and
cmp
push
out
and
push
xchg
in
icebp
pop
jle
popa
adc
or
cmpsl
repz
mov
xchg
cmc
aad
add
dec
xor
stc
popf
sbb
lock
adcl
or
fiadds
test
sahf
jmp
rcrb
push
lahf
adc
movsl
leave
mov
rcll
pop
frstor
shll
push
xor
dec
sub
test
popf
mov
mov
aaa
mov
sarl
and
and
jb
pop
out
jns,pt
cmp
mov
imul
daa
push
or
nop
inc
mov
in
or
jae
xor
sar
out
fisubrl
test
sahf
mov
mov
mov
xchg
mov
imulb
fimull
sbb
stc
jbe
call
add
cmp
or
les
test
ret
push
addr16
lea
mov
pop
les
mov
mov
adc
lods
jbe
test
adc
mov
xchg
fnsave
mov
fs
test
movsb
push
popf
test
loope
mov
imul
adc
sub
xor
scas
jo
push
inc
nop
fidivs
das
aas
test
add
xchg
pushf
mov
mov
mov
mov
or
cld
test
mov
test
push
mov
sbbl
ret
cmp
xchg
mov
xchg
cltd
lret
adc
das
add
stos
jb
outsl
test
add
outsb
inc
gs
or
out
push
add
test
jbe
xor
mov
mov
lret
jb
xchg
cli
loop
xchg
mov
mov
mov
xor
sbb
in
shlb
mov
cmp
ljmp
mov
and
add
lea
adc
mov
stos
clc
clc
lahf
mov
popf
inc
adc
imul
out
mov
xor
mov
or
push
cmpsb
or
repnz
add
iret
test
push
ret
rcrl
outsl
in
clc
inc
cs
aad
cmp
mov
jne
cmp
popa
lret
or
jns
fcmovnb
sub
popf
ret
adc
jmp
mov
lock
dec
fmuls
inc
test
pop
mov
jle
das
xlat
adc
rclb
imul
aam
repnz
stc
cmpsb
popa
loope
cltd
add
xchg
aaa
mov
nop
dec
mov
stos
fiadds
sbb
push
cmp
mov
std
leave
mov
adc
cmpsb
gs
lcall
add
push
in
es
adc
xchg
test
pop
sahf
sub
push
aaa
mov
mov
mov
andl
int
push
xor
add
jno
mov
pop
add
mov
mov
cltd
das
pop
mov
aas
lea
jl
mov
mov
or
add
repnz
jbe
sub
lods
hlt
sti
or
pop
fsubr
xorb
cmpsb
xchg
imul
lcall
movsb
pushf
dec
outsl
cmpsl
mov
loop
jo
jb
add
or
sbb
xchg
sarb
and
out
movsl
dec
jno
stc
lea
push
movsl
popf
sbb
inc
std
cmp
bound
fiadds
or
les
negl
jo
mov
or
enter
scas
pop
aaa
adc
lods
insl
pop
cmp
or
je
jb
jg
in
mov
fsubrp
xchg
mov
fiadds
adc
xor
jmp
in
call
dec
push
dec
mov
rcr
sbb
dec
inc
sbb
stc
ja
movb
pushf
cvtdq2ps
sbb
sbb
cmp
adc
adc
xchg
popl
fistl
push
xor
jl
inc
xor
loopne
jnp
rcrl
lahf
jmp
xlat
mov
js
inc
test
mov
push
xor
stos
sbb
stc
jnp
cwtl
or
pop
in
or
lea
fwait
push
imul
cmp
scas
xor
xchg
imul
inc
mov
mov
fs
cltd
test
mov
push
cmp
sub
loopne
dec
fstpt
cltd
inc
scas
inc
imul
xchg
mov
or
jmp
out
mov
cmp
add
xchg
push
adcb
psubd
data16
cmp
cmpsl
adc
imul
jmp
jge
jns
inc
bound
push
cmp
mov
dec
xor
sti
xor
xchg
bound
cmp
sahf
mov
push
cmp
push
jns
inc
xchg
lret
mov
pusha
or
jnp
push
and
jnp
or
add
xchg
imul
mov
mov
pushl
jae
dec
lods
lods
adc
mov
jne
mov
push
repnz
loopne
nop
in
inc
xchg
pop
cmp
jp
das
icebp
mov
adc
push
jnp
dec
je
sub
imul
shll
adc
mov
pop
movsb
lahf
hlt
xchg
sub
daa
jmp
js
mov
adc
dec
adc
mov
mov
push
fidivrl
xor
jl
push
adc
aad
sbb
lret
je
cs
dec
gs
sbb
fildl
pop
mov
push
mov
test
outsl
push
out
lock
nop
sbb
jmp
cmc
xchg
mov
pushf
jle
loopne
adc
fs
jne
cmc
jecxz
negl
add
popa
fisubs
adc
inc
daa
mov
xchg
sbb
and
add
mov
add
dec
sbb
lret
or
push
jle
xor
xchg
sbbb
add
mov
mov
imul
jno
pop
shlb
fadds
push
in
add
dec
stc
cld
xchg
xor
insb
sub
add
ret
divb
inc
fidivl
ja
addr16
mov
fsubrs
das
les
fistps
mov
in
cwtl
and
pusha
negl
cwtl
and
out
dec
pushf
lret
push
xor
lea
push
mov
mov
jp
mov
sar
lea
dec
movsl
xchg
add
pop
xor
inc
sti
cmp
xlat
pop
mov
test
mov
sbb
daa
fldcw
mov
push
aaa
and
dec
xchg
test
mov
and
xor
fwait
imul
inc
movsb
inc
mov
xor
leave
mov
mov
cmp
mov
fmuls
repnz
adc
inc
jl
mov
rcrb
jb
jg
call
xchg
imul
mov
fcmovbe
adc
int
jg
mov
out
leave
cltd
ljmp
mov
xchg
xor
outsl
and
push
call
enter
ja
cltd
outsb
sarl
add
popa
mov
adc
cmpsb
pop
ljmp
ljmp
jns
mov
test
je
jno
ret
sbb
movsb
repnz
mov
sub
aam
add
fnstsw
pop
loopne
fwait
imul
xchg
ds
inc
sub
cltd
jns
std
leave
mov
cmp
xor
jns
xchg
pop
notl
xchg
bound
imul
xchg
lods
sbb
sbb
jecxz
jno
lret
or
xchg
sti
pusha
ret
dec
xchg
adc
xchg
adc
sub
pop
das
jb
mov
scas
cmp
push
inc
and
lea
ljmp
jge
clc
xchg
jne
roll
sub
add
xchg
sbb
iret
fidivs
rorb
dec
adcb
les
popf
mov
jno
and
insb
xor
or
rorl
daa
sbb
out
mov
imul
imul
lcall
les
adc
xchg
and
jno
or
xchg
xchg
imul
and
adc
jle
mov
aaa
inc
xchg
clc
sbb
jg
negb
dec
adcl
sub
mov
jl
jns
pop
popf
add
int
sbb
sbb
mov
or
jecxz
xchg
mov
adc
fisubrs
push
adc
mov
frstor
add
ljmp
or
pop
xor
xchg
ret
cmp
scas
jge
addr16
insl
std
and
pop
les
push
cltd
xlat
leave
scas
test
testl
ja
rolb
sbb
pop
movsl
push
movsl
insl
popf
mov
or
sub
pop
xchg
add
add
cvtdq2ps
sbb
ljmp
mov
pop
mov
mov
rcr
sti
or
dec
adc
jg
test
dec
xor
mov
mov
fists
xchg
cmp
push
adc
or
push
xor
xchg
lret
mov
or
lcall
adc
adc
fldt
cmpb
fimuls
push
lret
xor
or
pop
mov
shrb
mov
lods
ss
ja
in
jecxz
xchg
mov
mov
add
and
cwtl
mov
les
fdivrp
imul
lock
add
pushf
mov
gs
xor
xchg
or
fadd
inc
test
xsavec
push
jnp
mov
shl
icebp
popa
frstor
lret
or
lds
les
dec
pop
cmp
and
cltd
cmp
rcrb
lods
jne
xchg
or
add
fs
mov
or
jno
lret
inc
jp
popf
cwtl
test
leave
xchg
sbb
scas
cwtl
fistl
add
sub
xchg
imul
data16
jmp
lds
sbb
cmpsl
leave
mov
std
xor
dec
pushf
xor
adc
test
imul
lret
adc
jo
lret
adc
jo
jmp
leave
mov
bound
and
xor
dec
push
ja
mov
or
btr
lcall
and
mov
mov
adc
arpl
push
xchg
fisubrs
push
and
xchg
mov
lock
ja
jbe
fdiv
ss
jbe
mov
sbb
dec
fnstcw
mov
mov
dec
sti
xor
repnz
jne
cmpsl
sub
aam
sbb
push
das
mov
inc
mov
and
xchg
faddl
divb
lds
add
xchg
mov
mov
push
jno
insb
scas
js
repnz
lret
in
ret
jecxz
or
call
ret
pop
sahf
mov
add
mov
bound
fiaddl
in
xchg
iret
sbb
stc
jne
insb
push
rolb
dec
neg
adc
and
shrb
xor
xor
mov
xchg
imul
loope
jl
hlt
pusha
push
adcb
test
ss
out
insb
ss
clc
dec
xchg
mov
sar
sub
adc
bound
inc
cli
cmp
jns
inc
mov
add
or
cmpsl
pop
bswap
std
out
or
xor
in
fbstp
xchg
test
mov
loope
mov
jne
les
sbb
cmp
and
jae
inc
push
mov
cli
in
add
sub
xchg
mov
lea
ljmp
notl
fildl
into
mov
xor
cmc
lods
xchg
xchg
jle
push
and
addl
scas
push
add
and
push
jb
sbb
jns
dec
mov
mov
ljmp
sub
jo
nop
sbb
nop
xor
fists
fisttpl
lock
and
mov
or
fiadds
ss
leave
mov
mov
es
imul
mov
adc
cltd
fiadds
ret
push
mov
add
and
jle
cmp
loopne
xor
in
imul
mov
dec
cmpsb
and
add
out
sub
cwtl
mov
cmp
add
popa
test
xchg
daa
sbb
cltd
mov
mov
scas
mov
loope
insl
mov
push
xor
imulb
clc
imul
jae
fidivs
into
add
ja
mov
inc
out
mov
sbb
and
xorb
xchg
sub
loopne
and
push
je
cs
push
andb
test
pop
and
bound
in
xor
pop
or
fildl
mov
rclb
subb
xchg
ret
cltd
push
lret
add
jbe
lahf
push
mov
test
jo
test
mov
sub
xor
cmp
lds
cmp
lds
lods
lock
imull
xor
xor
scas
add
fcoml
out
testb
dec
add
daa
mov
inc
call
repnz
push
and
add
jno
divb
inc
xchg
jno
stc
lea
icebp
movsb
outsb
test
ret
cmp
pop
jae
jecxz
cmc
pop
imul
lret
mov
mov
xchg
mov
jnp
gs
stos
pop
popf
push
sahf
mov
idivl
clc
add
test
lods
pop
in
add
lods
jmp
push
or
dec
sub
jo
std
loope
sbb
pop
push
inc
arpl
mov
mov
push
sub
fbld
ljmp
and
xchg
xchg
imul
jp
mov
mov
sbb
or
sbb
jecxz
sub
cltd
inc
push
cmp
add
popa
stos
adc
inc
mov
mov
lea
xor
xchg
imul
test
in
push
movsb
xchg
sub
xchg
addps
in
xchg
stos
or
jge
mov
mov
mov
cwtl
int3
add
stos
jne
mov
cmpsl
in
call
shll
scas
sub
pop
push
in
lret
sbb
lods
jno
mov
sub
movsb
movsb
add
out
cmp
dec
imul
in
adc
fdivs
or
dec
push
jge
inc
jno
bound
or
jle
pop
sti
orl
loopne
bound
cmp
jnp
les
add
repnz
push
push
int
aam
cmpsl
clc
dec
cmp
mov
jle
dec
cld
fadd
dec
sarb
pusha
in
xchg
stc
fstpl
or
add
inc
and
jmp
enter
xchg
sarl
int3
add
jl
jge
idivb
test
insb
xor
xchg
imul
rorl
enter
adc
cmp
testb
and
pop
mov
xchg
pushf
mov
rorb
mov
sbb
sbb
pop
mov
repnz
jge
xor
mov
call
das
imul
push
test
into
lahf
test
bound
cmp
rclb
dec
xchg
lahf
push
pusha
dec
fcomps
add
mov
inc
stos
insl
cmpsl
shl
pop
add
mov
sbb
das
mov
push
xor
movsb
negb
push
cli
push
sahf
ljmp
mov
lods
sub
ljmp
push
xchg
mov
jmp
notb
nop
loopne
jbe
fcomp
test
sahf
repnz
mov
clc
dec
xchg
gs
cltd
gs
movsb
movsb
mov
cmp
das
fldt
jp
sub
lock
stos
je
stos
or
dec
out
testl
cmp
outsl
icebp
mov
mov
andb
xlat
orl
pop
push
jg
push
aaa
mov
mov
mov
lock
into
pop
xchg
dec
cmpsl
pusha
loope
xchg
fnsave
outsl
jl
and
xchg
imul
scas
cmc
ljmp
aaa
mov
add
and
lods
stos
adc
les
ficoms
sub
data16
or
push
push
mov
stos
jmp
jge
mov
push
out
in
movsb
cmp
add
dec
dec
sbb
stc
jns
add
sub
add
cvtps2pd
mov
xor
fcmovnb
pop
test
pextrw
dec
imul
mov
stos
nop
push
popa
xchg
adc
mov
lods
sbb
sbb
pop
cld
xchg
dec
or
add
mov
movsb
mov
sub
je
sbb
std
imul
push
ss
mov
adc
jno
pushf
stos
adc
push
rol
mov
out
jle
mov
aaa
movsb
add
test
and
je
test
sub
xlat
pop
adc
jnp
mov
sbb
xor
jl
cmp
int
pushf
repnz
jmp
mov
mov
adc
jno
fidivs
adc
pop
pop
or
and
mov
cmp
movsl
fists
into
add
xchg
sub
pop
cmp
arpl
out
mov
and
jmp
pop
mov
test
mov
jno
hlt
or
fbstp
pause
push
mov
adc
sbb
test
mov
jbe
cmpsb
sbb
movsb
push
bound
les
mov
or
xor
xchg
scas
jecxz
negl
stos
xchg
test
mov
mov
das
pushl
and
fidivl
add
jle
jb
das
jle
fs
push
mov
inc
xchg
sti
and
out
pop
cwtl
jno
scas
pop
push
inc
add
cli
sbb
ret
inc
sahf
mov
pushf
push
fistpl
insb
jge
popf
repnz
mov
arpl
pop
sub
mov
sbb
fstpl
in
jnp
insl
dec
pop
shl
test
enter
lahf
fiadds
and
add
leave
adc
sahf
sti
icebp
in
jmp
cmpsb
mov
aaa
movswl
adc
lahf
insb
xor
adc
adcb
xchg
pop
test
mov
add
mov
sti
aad
addps
js
fiadds
movsl
jno
outsl
push
stos
loop
mov
inc
rol
jnp
sub
jno
xor
movsb
fiaddl
xor
imul
push
lcall
imul
xchg
xchg
adc
test
and
xor
mov
fbld
cltd
pop
pop
fwait
jno
sti
adc
negb
xchg
pop
pop
jo
jmp
jp
sbb
stc
jnp
inc
cmp
push
nop
lret
xlat
in
ds
jb
in
or
xchg
pop
fwait
jns
outsl
xor
mov
cmp
pop
adc
pop
and
hlt
icebp
pop
addl
adc
fiadds
lods
sbb
jns
mov
mov
cwtl
pusha
pushf
jae
mov
test
lea
in
arpl
cltd
add
sbb
sahf
and
jns
sti
leave
xchg
cmc
xchg
push
test
dec
mov
mov
imul
mov
xor
mov
int3
subb
insb
xchg
sub
repnz
loopne
or
arpl
push
fbstp
leave
mov
lock
testl
cmpsb
jbe
scas
js
mov
add
les
xchg
push
push
jp
aam
aaa
push
data16
bound
stos
mov
addl
push
in
div
daa
inc
movsl
adc
cmpsl
xchg
loop
mov
loopne
sub
push
pop
add
mov
pushf
mov
push
stos
lds
jp
dec
jp
sti
cmp
pop
xchg
mov
fldenv
andb
xor
adc
lcall
push
jl
add
insb
inc
mov
cli
imul
adc
fstp
inc
jne
mov
dec
mov
test
fidivs
jns
dec
outsb
sbb
testl
fistps
popf
call
div
or
jge
rcl
ret
repz
negl
or
fiadds
ud1
or
cmp
sub
cmpsl
lret
mov
in
enter
fsubrl
mov
orb
mov
sub
fstpl
jp
rcrl
pusha
inc
iret
jmp
mov
xlat
jbe
shrb
cmpsl
fbld
popf
xchg
push
repnz
jns
mov
jns
cmp
ficoms
cmpsl
sti
cli
push
pop
repz
repnz
imul
push
lret
push
push
inc
or
movsb
jnp
fisttpll
or
and
inc
adc
pop
cmp
mov
xor
fldcw
ds
gs
xor
or
repnz
mov
and
pop
add
mov
xor
arpl
imul
adc
xchg
sbb
aas
out
fidivrl
adc
pushl
sub
adc
or
jae
dec
push
out
cmp
out
mov
or
filds
cmpsb
test
cli
pop
push
pop
das
lods
pop
cmp
mov
push
mov
lods
adc
lods
cmc
gs
xchg
jb
jb
push
mov
cmp
andl
push
lods
test
cs
or
xchg
in
je
fcoms
jle
jbe
mov
add
cmp
leave
mov
and
mov
and
adc
in
jmp
call
mov
sbb
mov
sti
push
lahf
push
or
sbbb
cmp
sub
dec
jle
loopne
dec
add
stos
jbe
in
mov
or
pusha
lret
cmp
das
scas
imul
mov
scas
insb
loopne
jns
popa
lret
pushf
or
mov
cltd
hlt
leave
idiv
push
push
popa
xor
mov
xchg
pushl
outsl
adc
in
add
push
outsb
push
mov
ficomps
cwtl
movq
adc
test
xor
shll
jle
or
out
xchg
mov
fiadds
cmp
leave
insl
ret
sub
js
lcall
jl
jmp
clc
jmp
je
and
les
mov
sub
add
divl
test
out
and
in
sahf
mov
ja
mov
decl
jle
popf
in
push
cmp
push
imul
mov
sbb
shll
mov
shrl
je
cwtl
arpl
cs
stos
mov
add
xchg
inc
add
lods
je
stc
sbb
rorb
cld
push
lcall
in
sbb
lods
jb
fbstp
outsl
andl
mov
outsl
push
loopne
sbb
xchg
imul
push
push
shll
mov
scas
push
push
fildl
clc
smsw
mov
cmp
mov
jno
xchg
outsb
test
fiaddl
fldt
jmp
jecxz
adc
sahf
push
push
mov
pushf
sti
add
repz
jmp
mov
dec
sub
dec
ss
int
outsl
mov
adc
pop
adc
pop
jb
arpl
mov
test
ss
pop
add
jg
pop
jns
inc
mov
lock
jns
imul
jo
pop
aas
dec
mov
sbb
mov
mov
sbb
and
imul
lock
cmp
push
fcomps
out
ficoms
popa
cmc
fwait
test
sbb
lahf
les
test
push
rcll
ficomps
loopne
or
pop
ss
fcmove
push
scas
dec
div
push
dec
loope
mov
inc
popa
adc
ljmp
jo
mov
lcall
xchg
push
or
jge
jo
aaa
or
mov
loope
jo
js
cs
add
push
and
add
out
testb
xchg
mov
mov
add
and
nop
das
les
fucomip
lret
loop
cld
push
pop
fisubrs
push
or
dec
mov
faddl
in
leave
sti
push
xor
mov
inc
pop
out
pop
sarl
out
cmc
imul
cmc
xor
mov
je
pushf
mov
cmp
jmp
mov
dec
clc
lds
jecxz
in
cmpsb
xchg
jns
lds
adc
scas
fwait
sahf
sub
sbb
mov
lds
and
pop
mul
push
push
out
sbb
fdivp
adc
addl
mov
mov
int3
pop
dec
in
jae
out
xchg
imul
cmp
xor
jle
pushf
mov
xchg
push
xchg
mov
int
xchg
in
and
xor
icebp
or
and
mov
pop
loopne
or
and
jp
dec
cmpsl
jl
outsl
adcb
mov
push
popl
jae
cmp
pop
popf
mov
insb
addb
rcrb
or
or
lods
jbe
mov
dec
mov
mov
fisttpll
pop
inc
lods
movsb
jae
scas
push
mov
adc
pushf
inc
mov
add
sbb
mov
mov
outsl
dec
shrl
je
push
ret
inc
loope
negb
fbld
cmpsl
mov
int3
sar
insl
repz
stc
push
fistps
cli
sbb
imul
dec
push
jge
xchg
ret
mov
in
push
or
cmpsb
js
mov
adc
ljmp
int
cmp
mov
or
push
fsubl
nop
fidivl
leave
sub
in
xchg
imul
out
push
ss
imul
test
adcb
pop
mov
lock
pop
repz
inc
pop
push
mov
ds
enter
push
in
orb
nop
mov
mov
mov
insb
jns
sti
leave
xchg
cmc
xchg
push
mov
push
ljmp
xor
jge
xor
sub
movsb
mov
cmpsl
nop
adc
stos
bswap
xchg
pusha
pop
jno
sbb
cmpb
dec
ljmp
pop
out
mov
pop
out
adc
test
pop
lea
xchg
push
mov
mov
sbb
loop
sub
xor
inc
cmp
imul
jo
fisttpl
popa
pop
jmp
mov
mov
subb
xchg
insb
out
ffreep
mov
test
inc
add
adcb
push
cmpsb
pop
rorl
xchg
inc
fwait
cmpsb
pusha
out
cltd
std
ficoms
ja
or
mov
mov
and
fiadds
or
test
pop
sbb
hlt
jae
xor
xor
nop
jno
aas
cltd
dec
xchg
xlat
push
outsl
cmp
insl
daa
sub
insl
ljmp
test
scas
jb
push
shll
xchg
arpl
test
out
pop
cwtl
mov
dec
fs
pop
test
popf
mov
cmp
sub
lret
stos
add
mov
or
int3
sbb
mov
push
inc
dec
push
sbb
jne
pusha
push
cmovs
dec
xchg
lahf
push
cltd
cmp
popl
fmuls
dec
pop
push
adc
inc
pop
inc
sub
push
add
lock
nop
pop
hlt
nop
adc
imul
push
mov
jno
insb
outsb
inc
pop
and
out
clc
nop
push
movsl
xor
push
mov
inc
fs
mov
or
cmpsl
movsl
push
rclb
cmp
aam
pop
pop
popa
test
popf
mov
mov
xchg
jae
or
dec
sub
xorb
out
pushf
loope
mov
push
jno
jae
ljmp
pushl
test
ja
nopl
cmp
cmpsl
push
inc
out
mov
ss
mov
sbb
cltd
push
in
lea
cltd
movsl
mov
shll
push
mov
adc
and
sahf
hlt
push
mov
clc
loopne
adc
dec
mov
mov
imul
sbb
jns
jp
in
xor
js
cmpsl
xlat
loop
mov
adcb
prefetch
mov
ds
stc
mov
jp
cmc
fwait
popf
ljmp
and
es
fbstp
call
sub
hlt
jg
adcb
bndstx
div
subl
ljmp
popf
mulb
loope
fisubs
push
xor
pmuludq
ss
clc
das
les
test
movnti
out
or
xlat
jo
iret
mov
loopne
or
test
jns
sbbl
stos
jns
mov
and
outsl
hlt
push
or
xchg
hlt
or
sub
xchg
out
mov
mov
je
mov
mov
jg
mov
jno
or
or
sbb
test
mov
mov
in
adc
xor
jl
push
outsl
cmpsl
arpl
jo
xor
gs
test
lcall
and
shl
push
adcb
pmaddwd
lret
ret
mov
stc
cltd
mov
std
jo
pop
mov
popa
pop
mov
fldl
jo
cmpsb
clc
nop
in
loope
mov
pop
popa
jp
push
or
mov
jns
sub
and
aaa
xlat
adc
xor
push
mov
insb
fnstsw
outsb
mov
inc
ss
add
mov
sub
stc
pop
cs
xor
dec
jbe
ficomps
dec
add
jo
mov
arpl
pop
jo
xlat
sub
daa
lods
push
mov
sbb
sub
outsb
cltd
imul
lds
inc
in
push
mov
cmp
outsl
jb
jbe
in
bound
sbb
adc
dec
mov
imul
sub
leave
pushf
lock
cmp
cmp
mov
daa
mov
dec
adc
stos
call
pop
jno
roll
popa
add
xchg
pushf
mov
daa
cmp
notb
jl
outsb
sbb
push
cltd
push
pop
movsl
jg
jl
add
dec
negb
add
out
dec
imul
xchg
cmp
ljmp
mov
mov
ret
lret
enter
in
mov
lock
pop
orb
fiadds
push
mov
jno
sbb
and
xchg
push
xor
in
push
mov
and
sub
push
cmp
ds
mov
cltd
and
movsl
lret
adc
cmp
sub
dec
push
out
jns
xor
mov
out
xchg
imul
aas
test
jl
mov
sbb
or
sub
mov
fwait
adc
xchg
out
test
sbb
scas
or
jmp
leave
mov
xor
inc
popf
xchg
xchg
push
jmp
sub
mov
test
mov
scas
jo
addr16
push
pop
and
aaa
les
loopne
enter
pop
push
inc
arpl
mov
sbb
jns
aaa
in
mov
mov
or
shlb
jns
xor
add
ljmp
insl
adc
adc
cmp
inc
fisubrs
insb
outsb
cltd
imul
mov
loop
xchg
imul
stos
pushf
add
dec
bound
push
cmp
jno
or
popa
inc
xchg
mov
mov
add
xchg
lahf
scas
lahf
adc
daa
les
fmulp
sub
fiadds
cwtl
enter
fdivrl
ljmp
lea
in
ja
sti
adc
aaa
adc
or
mov
or
jne
test
sbb
sbb
or
adc
cmp
in
mov
mov
cmp
push
cmp
inc
stc
aaa
in
sub
cwtl
negb
add
popa
mov
adc
push
xor
cltd
mov
mov
scas
mov
dec
inc
popa
pop
sbb
fildl
mov
clc
outsl
imul
out
imull
lcall
fidivl
mov
sub
push
pushf
orl
les
push
pushl
pop
popl
test
add
popa
jge
mov
addb
out
hlt
xchg
push
mov
adc
andb
or
fiadds
in
out
fistpll
sub
and
loop
cmpb
xchg
imul
je
add
sub
sbb
in
jns
inc
daa
ret
mov
fimuls
sub
lcall
cwtl
cmp
xchg
push
xor
and
mov
test
or
or
inc
lea
pop
shll
jle
jns
int
xor
hlt
and
lea
sti
imul
and
lock
inc
jno
stc
lea
clc
movsb
jbe
mov
xor
inc
cmp
fadds
fiadds
jbe
mov
mov
jnp
pop
test
pop
shrl
test
aas
lock
rcrb
jae
sub
int
cmp
mov
sbbl
dec
aad
sbb
js
movsb
xchg
mov
lahf
xlat
lret
addr16
or
outsb
xlat
push
ja
jb
mov
adc
rcll
lods
movsl
ret
sub
iret
mov
sub
mov
cmpsb
xor
lret
jne
mov
xchg
jae
stos
mov
push
nop
mov
cwtl
mov
dec
push
jae
jecxz
icebp
xchg
mov
and
mov
outsb
adc
xchg
mov
mov
adc
mov
jno
adc
and
push
adc
out
test
xchg
push
pop
adc
sti
add
mov
push
push
or
or
dec
sar
movsb
fistps
and
js
imul
dec
insb
sbb
divl
or
cmpsl
cwtl
push
lret
inc
movsl
sbb
jbe
xchg
cmp
popa
pop
adc
pop
add
push
data16
push
scas
or
scas
imul
cmpsb
leave
mov
mov
ja
sub
js
mov
ret
in
adc
cli
ds
pop
dec
out
sbb
sahf
mov
xchg
mov
clc
stc
cmc
imul
mov
adc
sbb
pop
dec
es
incb
dec
pop
ss
imul
sub
into
xor
stc
xor
mov
inc
cmpsb
imul
xor
push
jp
xor
stc
push
inc
out
mov
aaa
jns
sub
lahf
rcr
outsl
push
loop
adc
fcmovnb
popa
test
psrlw
out
rcr
mov
xlat
jno
push
ret
popa
test
popf
mov
mov
cmp
mov
sahf
pop
push
clc
arpl
pop
fimull
lahf
xor
ljmp
stos
xchg
insl
xchg
or
insl
in
sarb
sti
inc
and
outsb
pop
lea
mov
test
insl
pop
mov
inc
cmp
cmp
and
out
push
ret
cli
jae
sahf
jns
cmp
mov
fisttpll
gs
push
rorl
dec
bound
inc
dec
invd
xor
loop
pop
shlb
or
jecxz
or
mov
jne
roll
or
sub
sub
push
jb
ljmp
lds
call
lds
mov
jnp
shrb
pop
xor
lahf
fists
icebp
mov
sbb
mov
in
or
and
fwait
dec
popf
push
jbe
mov
dec
jmp
popf
inc
or
jl
jne
add
inc
test
mov
xor
mov
popf
cmpsl
mov
mov
mov
add
and
ss
jae
push
les
adc
xor
test
jp
fsubs
mov
mov
and
out
sarl
dec
cmp
nop
loopne
or
push
fwait
cmp
pop
xlat
xchg
push
lret
call
ss
inc
in
mov
aaa
arpl
test
sbb
push
insl
add
js
lds
icebp
out
sub
xchg
imul
mov
clc
and
nop
loopne
or
sub
lret
cwtl
rolb
sbbl
mov
loope
adc
pop
pop
xchg
add
sub
mov
repnz
and
xor
push
in
mov
negb
lds
xchg
or
ret
stos
in
mov
sub
in
push
mov
sbb
or
rcr
xchg
push
fwait
and
xor
mov
aas
loop
push
sahf
xor
sbb
mov
sub
adc
xchg
and
push
adc
jns
outsl
cmp
fistps
inc
push
mov
jnp
xchg
add
push
jmp
test
mov
and
xchg
cmc
sahf
push
adcb
mov
mov
ret
mov
cwtl
xchg
imul
je
lret
jno
push
cmpsb
mov
xorl
test
and
fimuls
mov
adc
sahf
pop
add
mov
fldenv
cmp
push
adc
or
adc
scas
push
or
mov
jmp
in
in
inc
out
adc
mov
xchg
xchg
dec
fstpl
jne
sub
es
cwtl
mov
mov
sub
push
mov
outsb
xchg
imul
insl
mov
fistpll
test
andl
and
out
sub
xchg
imul
jl
lcall
sahf
repnz
sbb
cmpb
mov
mov
jno
cmp
ret
or
cmc
sbb
or
or
lcall
leave
or
wrmsr
sarb
repnz
in
xchg
and
ja
cmc
jne
adcb
nop
pushf
jbe
insb
pop
mov
std
popa
jb
clc
ss
repz
std
pop
cmp
add
popa
mov
mov
mov
fidivs
pop
andb
or
fiadds
into
push
cmp
outsb
pushf
sub
fcmovu
ljmpw
adc
call
xor
xor
adc
cmp
inc
jmp
test
in
aam
or
pop
bound
push
xor
jecxz
shrb
call
sbbl
xchg
imul
mov
inc
out
cmpsb
lahf
or
rclb
jo
pop
insb
lea
cmp
ljmp
adc
xor
push
iret
sbb
inc
push
xor
jl
stos
cmpsl
movsl
jmp
mov
lods
jecxz
push
pop
cmc
lcall
push
mov
inc
mov
cli
xor
out
andb
cmp
stc
shl
mov
pop
mov
std
imul
or
xor
jl
sbb
mov
insb
sbb
repz
xor
xor
mov
lret
lods
sub
xchg
divl
or
mov
scas
jno
dec
xlat
enter
insl
adc
pushf
push
fs
pop
fwait
add
adc
sbb
sbb
dec
icebp
imul
lcall
iret
jbe
mov
stc
mov
cwtl
into
testb
outsl
sbb
ja
xor
adc
jae
loope
vorps
cs
decl
addl
add
in
pop
fucomp
xor
add
xchg
pushf
mov
pop
xor
nop
in
jl
ss
jns
xor
mov
loopne
fld
push
push
mov
xchg
loop
arpl
adc
pop
inc
ds
dec
in
fs
ja
lds
jle
ja
inc
aaa
lds
pop
sbb
and
inc
jmp
lea
jo
mov
call
lea
js
std
in
inc
jnp
and
cld
cmp
ret
mov
leave
mov
mov
adc
stos
lods
stos
ljmp
ficoms
dec
repz
and
addl
in
int3
pop
jp
pop
in
add
mov
push
rclb
xchg
in
inc
sbb
gs
jmp
mov
sbb
jp
push
arpl
cs
adc
jno
sbb
ret
js
les
push
mov
inc
sub
mov
movsl
ret
scas
popf
mov
sub
fistpl
jp
add
dec
into
adc
adc
mov
mov
push
outsl
fistl
cs
pop
mov
lods
je
out
fsts
cmp
xchg
mov
jno
clc
xchg
loopne
jns
idivl
ret
cmp
and
xchg
xchg
xchg
stos
leave
lcall
enter
fcoms
jl
xchg
adc
mov
movsb
add
out
cmp
movsb
test
test
jne
push
push
mov
mov
loopne
or
sbb
xchg
mov
hlt
aad
movsl
fistps
stos
movsb
xchg
lea
xor
and
je
sbb
mov
fidivs
dec
add
add
popa
shlb
cmp
push
sbb
les
test
mov
jl
stc
sbb
sbb
imulb
incb
mov
inc
rcll
xchg
clc
jl
sbb
addps
cmp
test
addb
sti
int
icebp
fsubrl
lock
orl
fwait
xchg
or
jns
clc
leave
xchg
out
repnz
push
test
mov
dec
fisubs
in
clc
xchg
fimuls
fbld
mov
dec
jns
cltd
mov
push
mov
sti
outsb
in
pop
xchg
adc
inc
lock
add
or
stc
aaa
and
sbb
xor
pushf
sub
movsb
fistps
dec
out
and
daa
hlt
add
or
into
push
test
shll
mov
test
data16
xor
cmpsb
leave
sbb
mov
out
clc
nop
push
movsl
xchg
and
mov
inc
nop
xchg
imul
jno
cs
mov
mov
test
clc
leave
mov
fldt
jl
fcompl
ljmp
outsb
sub
mov
or
cmp
add
popa
cmpsl
mov
jbe
fisttps
in
testl
mov
inc
orb
add
adc
cltd
sbb
scas
add
mov
cli
mov
jns
cld
mov
adc
mov
out
or
imull
out
push
incl
sbb
gs
adc
pop
fisubs
sbb
push
jmp
in
std
or
jno
ret
sbb
loopne
cmc
xor
cmpsl
pusha
out
cwtl
xor
test
je
cmpsb
sbb
rcll
inc
rclb
pop
xchg
lods
stos
xlat
cltd
fnstsw
sbb
adc
jno
cmp
pop
jmp
dec
inc
adc
mov
or
ja
pop
rcll
dec
mov
andb
pusha
inc
xchg
jnp
mov
sahf
sti
in
push
pop
dec
add
jl
push
ret
pusha
push
dec
or
sub
divb
push
dec
shrl
push
add
sbb
xchg
int3
cmp
sti
or
and
sub
add
shlb
jne
mulb
adc
push
mov
fisubrs
push
repnz
icebp
mov
add
out
mov
enter
aaa
mov
mov
nop
jns
pop
xchg
call
xor
push
xchg
push
xchg
clc
arpl
cmovbe
sbb
ret
mov
pop
loop
jecxz
popa
add
movsb
lahf
repnz
mov
decb
mov
test
xchg
rorb
add
mov
sub
mov
lock
pcmpeqd
sbb
mov
push
in
and
std
lds
ja
mov
pop
dec
push
mov
fidivrs
adc
movsl
leave
mov
cmpl
xchg
jge
xor
dec
push
add
xchg
pushf
mov
fstpt
insb
xchg
nop
in
jl
cmp
adc
push
stos
jg
lea
mov
daa
in
jns
xor
jns
pop
loope
jns
sti
push
sub
push
pop
adc
inc
insb
shll
js
jg
call
mov
sbb
mov
test
mov
jno
pop
leave
or
add
sbb
add
in
jbe
sub
fucomp
in
sub
mov
imull
imul
subl
pop
jns
dec
mov
leave
mov
jmp
lea
pushl
out
dec
cmc
test
push
xor
adc
pusha
or
pop
mov
std
xor
adc
mov
xchg
imul
jmp
inc
jno
sbb
push
cld
pop
mov
mov
jb
icebp
xor
nop
mov
sbb
mov
test
mov
fistpll
imul
jae
jl
cmp
cmc
push
jno
sub
sbb
loope,pt
pop
lds
cmpsb
mov
mov
sbb
jmp
pop
movsl
adc
xor
out
push
jns
inc
loope
xor
push
xchg
les
test
sahf
mov
mov
repz
cltd
mov
xor
int3
lahf
cli
mov
and
loope
push
mov
xor
out
pop
shl
gs
adcb
test
shrl
std
lahf
jne
testb
xchg
sub
das
lret
test
pop
lret
push
ss
pushf
ret
popa
inc
xchg
push
xor
ficomps
hlt
jno
negl
xchg
mov
or
fiadds
pop
hlt
push
out
jg
jns
clc
add
sahf
mov
cmpsb
lea
push
and
xor
and
daa
mov
inc
out
movsb
imul
push
mov
and
dec
mov
push
sub
sti
add
add
push
shll
adc
or
jbe
xor
loopne
shlb
std
pop
lods
cmpsb
xchg
mov
dec
xor
pop
outsb
and
adc
sbb
movl
mov
ret
and
jno
repz
mov
xor
add
mov
add
jne
jp
movsb
dec
popf
test
adc
mov
cmp
xchg
sbb
movb
ret
testb
and
out
scas
sahf
mov
mov
xchg
and
fiadds
aaa
cli
leave
xlat
xor
mulb
outsb
sbb
push
add
mov
pushf
pop
add
mov
adcb
xor
lods
out
xor
test
dec
test
push
push
or
push
into
dec
mov
scas
push
insl
loope
xchg
fs
addr16
or
cmpsb
cwtl
aam
imul
jmp
jno
mov
xchg
mov
jmp
cmpsl
ficoml
mov
and
cmp
fadds
push
fwait
insb
mov
je,pt
jp
xor
loop
outsl
sbb
repnz
int3
imul
xchg
mov
addb
movsl
fucomp
sub
adcb
ud2
xor
mov
lcall
fyl2x
cli
out
js
les
ffreep
out
jle
ljmp
mov
and
pop
push
dec
sbb
push
js
cmc
inc
xor
movsb
fistps
lock
jecxz
push
sub
mov
dec
mov
cli
sub
and
mov
adc
sub
imul
mov
les
push
adc
roll
fbstp
or
inc
cmpsb
mov
imul
jl
ljmp
repnz
push
cwtl
fcmove
mov
push
inc
in
addr16
pushf
add
push
sbb
call
xchg
jg
lahf
mov
inc
push
pop
or
add
add
stos
fwait
xchg
xchg
push
div
or
cmp
cs
loopne
jns
loope
inc
mov
lret
pop
adc
fisubrs
mov
idiv
dec
mov
les
adc
jbe
les
or
jne
mov
sbb
ja
pop
pushf
cmp
sarb
xchg
adc
xchg
sbb
mov
mov
testl
aaa
sbb
imul
test
dec
lea
cltd
cmp
mov
mov
scas
dec
sub
cmpsl
ds
fistpll
es
cwtl
or
xchg
push
pop
imul
dec
shl
jl
dec
adcl
cli
push
fwait
lahf
add
and
enter
pop
xor
in
adc
dec
mov
mov
fcmovnb
popa
test
push
cld
and
pushf
sub
sbb
sub
xchg
orps
gs
and
sahf
testl
and
pop
pop
xor
mov
ljmp
mov
xchg
mov
fistpl
mov
lock
xchg
loopne
jns
movb
push
pusha
push
inc
or
dec
repz
dec
push
jge
cmp
mov
fstl
or
cs
jge
pop
cmp
idivl
dec
cmp
notb
or
cmp
xor
cmpsb
pusha
out
pop
mov
lret
cmpsb
add
lret
rorl
pop
lahf
lods
movsl
loopne
mov
lods
mov
stc
movsb
rcrl
pop
cmp
shr
sub
jne
dec
out
pop
or
xchg
out
or
lea
cltd
test
fmull
or
adc
inc
jo
mov
mov
lahf
push
in
subl
cmpb
sub
sub
lods
mov
pop
pusha
fs
cltd
jne
test
das
fisttpl
stos
fldt
or
mov
daa
pushl
mov
sub
or
roll
faddl
sub
add
outsl
jecxz
clc
test
mov
sbb
ja
icebp
lock
test
sahf
jle
add
push
test
jg
push
sub
jns
fimull
andb
sbb
and
add
aas
dec
scas
cmpb
cmpsb
sbb
cmp
pop
aad
lret
jne
gs
cltd
ficompl
fwait
pop
dec
fnsave
lods
mov
sbb
movsl
cmp
clc
shl
sbb
insb
in
stos
pushf
xchg
mov
jb
mov
orb
cs
dec
call
fildl
cmp
dec
jle
outsl
push
out
lahf
push
mov
shll
jp
xor
jl
nop
jns
dec
test
pop
outsb
sbb
in
fbld
or
xlat
test
lock
sbb
mov
insb
outsl
xchg
lods
hlt
pop
jle
pushf
repnz
mov
cmp
scas
jne
push
jae
mov
inc
adc
dec
fcmovnu
jns
xchg
scas
and
xorl
ss
pop
pop
pop
in
add
jp
das
mov
repnz
into
fdecstp
mov
clc
popa
outsl
lcall
loope
in
sub
sbb
xchg
imul
iret
or
ljmp
or
sbb
fucomip
lret
movsb
xchg
test
lret
lret
add
pop
movsl
jg
sub
xchg
mov
mov
adc
stc
xor
sub
fcomip
mov
cmp
jmp
mov
dec
push
xchg
mov
push
iret
lret
and
cs
push
cmp
xor
insl
sbb
xchg
add
pop
mov
into
cwtl
cmpsb
add
push
scas
mov
sub
push
aam
dec
sub
xchg
jmp
cmc
stos
sub
push
sbb
sbb
mov
imul
div
jno
adcb
paddw
mov
mov
stc
xor
adc
shll
nop
xchg
imul
inc
push
mov
jns
clc
leave
xchg
movsb
xchg
andl
xor
sub
loope
ljmp
sub
mov
push
xor
inc
clc
adc
jae
in
enter
fisubrs
push
sbb
add
and
mulb
pop
lea
out
xchg
imul
out
and
jge
jns
sbb
mov
jmp
mov
cmp
out
pop
add
mov
mov
adc
add
jns
scas
cmpsl
push
fcmovnbe
jns
shlb
sub
adc
pushl
test
adc
xchg
fsts
inc
or
scas
cmpsb
call
ret
fbstp
stc
lea
pop
movsl
jg
jl
ljmp
sahf
imul
out
out
out
fdivs
stc
lea
mov
dec
xor
jecxz
mov
xor
mov
loope
call
push
sbb
pusha
insb
std
dec
scas
and
add
out
divb
popf
fnstenv
mov
test
dec
or
jge
xchg
jns
inc
stc
lret
stc
xchg
push
mov
sbb
arpl
pop
orl
fildll
fdivrl
xor
call
std
dec
mov
jo
nopl
and
mov
xor
add
popa
mov
adc
xchg
mov
mov
lods
in
xchg
imul
add
js
pushf
mov
hlt
loope
sub
popf
mov
scas
bound
xchg
insb
jp
xor
jl
jns
movsb
popa
dec
xchg
push
cmp
jge
sbbl
std
loope
out
out
cli
lcall
push
movsl
jge
pop
hlt
adc
cmp
jb
mov
sbb
loop
fnstsw
mov
inc
imul
jb
inc
xchg
adc
jno
xor
es
jmp
leave
add
jno
idiv
out
dec
and
add
sub
sar
sub
sbb
jae
inc
push
mov
les
push
scas
dec
adc
mov
mov
mov
inc
pop
jae
fucomp
pop
or
pop
pop
or
leave
pop
jmp
in
in
push
add
or
les
in
pop
push
cmp
in
imul
in
pop
fldt
leave
sbb
and
xchg
and
mov
mov
mov
jns
enter
ficoms
jmp
push
in
or
repnz
test
fiadds
dec
shr
scas
jns
xor
jmp
xor
xchg
mov
adc
lea
ljmp
int3
hlt
push
adcb
test
inc
inc
xor
data16
xor
out
add
test
push
xor
inc
insb
pop
mov
std
imul
jno
stc
lea
mov
xchg
xor
jle
mov
subb
or
fiadds
ss
leave
mov
in
in
leave
mov
mov
sub
orl
ljmp
and
dec
call
jl
dec
cmpsl
popa
out
cwtl
inc
and
and
test
mov
sbb
out
outsb
mov
test
mov
in
outsl
xor
dec
xchg
push
xor
and
ds
lret
mov
rclb
adc
jg
cwtl
leave
jmp
push
out
or
lret
div
push
push
mov
iret
das
xlat
rcll
ficoms
shl
inc
push
or
jno
jg
push
sbb
push
aam
imul
mov
or
inc
jp
xor
jmp
dec
xchg
out
clc
xchg
push
movsb
nop
ljmp
push
sbbb
orl
flds
mov
mov
xchg
out
inc
mov
fidivrs
arpl
lret
adc
and
push
xchg
dec
mov
outsl
mov
xchg
mov
mov
test
jne
rorb
jnp
out
scas
inc
out
xchg
mov
bound
push
cmp
testb
sbb
out
divl
fisttpl
nop
pop
jmp
mov
movsb
jno
inc
xchg
xchg
push
jmp
sub
sbb
xor
mov
adc
shrl
pop
sbb
les
jnp
mov
sub
stos
lds
mov
mov
popf
scas
push
insb
push
lea
in
sbb
xlat
sbb
test
lea
adc
scas
bound
xor
fiadds
into
mov
adc
or
sti
leave
in
sbb
dec
jle
test
pop
je
jge
aad
fbld
dec
imul
cmpsb
js
or
stos
pop
cmp
adc
jb
jle,pt
xor
ljmp
test
outsb
push
or
jb
mov
mov
pop
repz
push
cmpsb
orb
insb
inc
and
xchg
aam
gs
push
in
or
flds
cmpsl
loopne
xchg
mov
jge
rcrb
in
push
enter
movsb
pop
mov
xchg
sub
js
sbb
das
shlb
pop
and
repnz
jae
add
push
xchg
cmp
sbb
hlt
jnp
or
fcoms
data16
cmc
imul
movsb
repnz
or
lahf
jbe
mov
adc
mov
jns
arpl
addb
scas
inc
add
xchg
lahf
dec
sbb
les
ficomps
mov
fiadds
cld
xchg
arpl
imul
mov
cmpsb
jno
enter
lea
adc
mov
jge
and
sbbl
cmp
mov
add
and
sub
pop
dec
les
jecxz
mov
in
xchg
cli
push
push
pop
jo
sub
xchg
xchg
push
fisttpll
xchg
xchg
sarl
cmp
mov
stos
cmp
push
clc
lods
in
ficomps
and
stc
js
ljmp
inc
lods
jno
inc
popa
insb
subb
in
test
out
or
in
into
fcoms
dec
xor
jl
adc
lock
inc
xor
and
sbb
lcall
add
xchg
test
fiadds
fistpll
add
mov
mov
scas
test
add
jle
rol
pop
push
scas
mov
xor
mov
ljmp
pop
movsl
sub
sub
adc
dec
sbb
or
arpl
sbb
stc
jl
shl
test
pop
push
mov
sbb
and
mov
mov
jne
mov
inc
sbb
add
fcoms
lock
sub
out
mov
ja
pop
shlb
lods
mov
shll
add
sbb
or
nop
mov
js
cmpsb
fiadds
movsb
pushf
daa
push
pop
aad
cwtl
and
xchg
add
ror
jmp
outsb
push
icebp
adc
in
leave
xchg
jne
fstl
cs
push
pop
pusha
push
js
xor
add
jmp
sti
iret
jp
fsts
sub
push
lahf
orb
push
es
xchg
dec
in
jbe
sub
stos
hlt
xchg
push
adcb
nopl
inc
mov
cli
add
mov
mov
add
and
cmpsb
sub
aas
les
loope
cmp
sahf
cmpsl
test
test
mov
sbb
lock
pop
mov
and
sti
jo
xor
cmc
daa
mov
add
stos
je
aaa
loop
add
lea
aaa
adc
push
aas
add
adc
bound
xchg
sbb
or
ljmp
test
rcl
sti
fsts
push
mov
fwait
lods
sahf
sub
sbb
sbb
mov
movb
cltd
jns
and
push
scas
jp
or
adc
xor
sub
jge
test
adc
adc
pop
aad
int
and
lods
adc
pop
mov
mov
and
mov
inc
add
xchg
loopne
mov
mov
test
mov
and
push
mov
xor
hlt
xchg
push
movsl
adc
jno
lea
cli
es
push
sbb
pop
mov
loop
pop
fisubrs
push
adc
inc
add
scas
and
add
jmp
loop
xchg
push
stc
xchg
lahf
das
mov
dec
cmpsl
xorl
sbb
sahf
sti
shl
dec
mov
rclb
outsl
and
clc
data16
mov
scas
push
lods
popf
xchg
mov
sbb
sbb
lock
ss
or
insb
xor
push
ljmp
pop
ficomps
repz
cmp
push
dec
adc
lods
lods
das
cmp
nop
js
in
loopne
dec
or
fwait
dec
das
lea
ss
les
or
fcom
popf
out
in
adcb
adc
pop
stos
dec
scas
std
imul
push
push
xchg
lahf
fs
mov
mov
xor
mov
sarl
ror
sti
dec
aam
sbb
lcall
cmp
add
stos
ja
mov
inc
shrb
or
adc
or
aas
push
sbb
sbb
mov
cmpsb
pop
into
out
idivb
dec
in
out
loop
cmpb
push
adcb
unpckhps
mov
stc
imul
movsb
sbb
rorb
roll
mov
loope
mov
dec
pop
sbb
idiv
push
dec
test
in
loop
jmp
push
or
sub
test
xchg
push
or
in
mov
cmp
call
sbb
push
dec
jge
fs
dec
loopne
xchg
dec
pop
push
jb
mov
adc
stos
stos
mov
mov
add
sahf
add
imul
pusha
sahf
xchg
jg
mov
dec
data16
mov
adc
adc
inc
test
add
push
in
or
lds
loop
in
xor
into
rcll
lds
mov
jb
aam
sbbl
cmc
xchg
push
cmpsl
or
cmpsl
clc
nop
lahf
ret
shlb
jns
xor
add
mov
sub
mov
repz
inc
xchg
and
inc
inc
sub
jno
xor
xchg
or
leave
lea
pop
pop
or
sbb
insl
icebp
sub
xchg
jns
pushf
sbb
and
and
imul
xchg
in
pop
insl
xchg
imul
cwtl
mov
test
dec
popa
jge
test
sahf
mov
dec
or
dec
jns
arpl
cmp
stos
jp
pop
mov
imul
jl
sti
lods
lods
test
es
test
cltd
push
adc
lock
jp
in
lret
ret
mov
in
jle
jo
mov
inc
cmc
jl
xchg
jns
fisttps
pop
das
mov
daa
mov
pop
xchg
push
xchg
jbe
xchg
fiadds
and
in
pop
mov
and
add
sub
jae
dec
mov
enter
dec
jne
leave
cmp
inc
lods
jb
or
push
pop
nop
imul
and
xor
js
fnstcw
xor
sub
sub
mov
loop
jae
inc
addr16
test
mov
pop
xor
xchg
out
in
xor
and
ficoms
loopne
fsub
sub
stc
hlt
outsb
push
adcb
psubd
data16
arpl
out
or
mov
xchg
dec
mov
mov
mov
mov
push
and
push
jmp
loop
cli
jl
cltd
push
adcb
pmulhw
repnz
ds
stc
or
and
xor
popa
shrl
movsb
fiadds
cmp
leave
lea
mov
or
sbb
test
xor
adc
das
or
cmpsl
cmp
lret
cmc
int
mov
scas
mov
or
fistpl
jp
dec
outsb
outsb
test
sub
push
mov
dec
pusha
pop
inc
or
add
sub
pushf
sahf
mov
insl
mov
out
mov
pop
mov
adc
mov
test
mov
jno
cmp
nop
inc
and
mov
out
and
test
cltd
xchg
xor
add
popa
rclb
fwait
rcr
mov
or
filds
jp
xlat
loope
fnsave
mov
dec
in
push
cmpsl
daa
icebp
mov
jb
shll
movsl
xchg
stos
inc
push
add
xor
jne
sub
sbb
mov
and
jecxz
push
cmp
mov
xor
leave
xchg
clc
xchg
push
mov
sbb
and
into
test
push
xchg
and
mov
push
cmp
cltd
lret
cmpxchg
jno
leave
pop
jns
mov
dec
cwtl
push
xor
and
sub
mov
mov
pop
test
nop
cmp
or
fiadds
shrd
xchg
add
fcoml
nop
ds
shl
or
stc
lea
xchg
movsb
mov
add
ret
cmp
push
sti
fidivs
dec
nop
bound
mov
addb
testb
mov
hlt
xchg
and
pop
test
mov
sbb
les
mov
jecxz
out
jo
add
xor
push
iret
mov
inc
push
cmp
xchg
pushf
mov
sahf
mov
xchg
icebp
pop
jle
clc
pusha
lcall
xor
mov
push
inc
out
mov
sbb
xor
out
inc
and
ret
mov
jbe
mov
imul
cmp
nop
jns
sbbl
sub
dec
mov
lock
loope
jnp
jle
xchg
push
addl
adc
testl
push
dec
mov
in
enter
cmc
or
mov
pop
mov
adc
loopne
adc
mov
mov
add
and
daa
les
ficoms
mov
les
adc
and
jle
jl
dec
pop
sbb
mov
out
adc
push
push
push
aas
aaa
sti
dec
shl
jge
xor
outsl
inc
out
stc
sti
les
add
mov
lcall
jns
sbb
push
mov
and
and
mov
mov
outsl
push
out
push
xor
cmpsb
out
cltd
xor
lret
inc
push
jp
popf
das
sbb
popa
into
aam
cmp
outsl
jp
shll
das
pop
jae
xor
mov
insl
push
push
imul
pushf
xor
add
adc
add
stos
jbe
flds
push
in
add
fdivs
cld
ja
inc
mov
addr16
push
jmp
jecxz
mov
pop
cmpsb
jns
xor
stos
ret
sbb
mov
in
leave
sti
aas
push
test
mov
mov
sbb
and
push
adc
jmp
test
ret
mov
dec
iret
nop
pop
and
fildl
adc
pop
aam
push
gs
xchg
push
jmp
lahf
push
add
mov
fdivr
lea
shlb
xor
inc
stc
aaa
adc
jecxz
mov
and
push
cmp
sbb
mov
jno
dec
sbb
cmpsb
in
xchg
fistps
out
cmpb
push
dec
mov
and
xchg
mov
push
inc
gs
and
push
inc
outsl
fbstp
xlat
mov
xchg
xor
xchg
xor
jne
cmp
push
in
stc
mov
sbb
sbb
push
xchg
sbb
pop
sbbb
ds
fiadds
mov
or
jg
jns
mov
jae
es
and
jl
dec
inc
and
inc
inc
scas
mov
pop
jb
xor
shlb
mov
fistpl
std
push
xorb
in
jno
push
cwtl
nop
fst
pop
or
rcrb
push
mov
repz
hlt
repnz
cmpsb
fisubs
aaa
shrl
mov
dec
jbe
roll
mov
mov
xor
mov
in
std
lahf
jecxz
adc
jmp
adc
enter
mov
xchg
outsl
pop
imul
lcall
dec
xchg
sub
sub
in
fadds
sbb
push
cli
lahf
inc
cltd
popf
xor
movsb
sahf
mov
xchg
and
push
fidivrs
pop
mov
xor
jmp
mov
and
xchg
mov
cmp
inc
xchg
enter
or
jae
sti
jbe
xchg
aas
test
mov
xor
inc
add
mov
fcomps
and
leave
xchg
sti
sbb
popf
jp
fsubs
mov
jmp
cmpsl
jno
stc
lea
adc
popa
xor
lcall
inc
adc
sahf
fiadds
mov
imul
ja
and
lss
xchg
add
xor
popa
dec
lcall
insb
lock
dec
cmp
add
popa
mov
popa
pop
pop
loopne
mov
mov
and
add
pushf
mov
mov
lods
jmp
sbb
dec
fidivs
jnp
arpl
mov
cwtl
xchg
mov
loop
jmp
repnz
enter
add
popa
rorl
cli
jno
sbb
cltd
mov
mov
sub
loop
jmp
xchg
lock
imul
fcompl
xchg
out
dec
les
jecxz
cs
adc
mov
inc
adc
fiadds
push
lahf
push
leave
jl
test
test
ja
mov
and
jno
jmp
dec
out
call
ret
mov
cmp
cmp
pop
and
leave
std
shl
jns
mov
add
notl
test
and
mov
js
mov
sahf
mov
fistpll
shl
fnstenv
mov
js
cmp
xchg
pop
xchg
add
sub
add
jo
lcall
in
ficoms
fisubrs
push
sbb
pusha
fs
pushl
in
data16
xor
sahf
adc
loop
adc
fistl
gs
pop
push
mov
mov
jno
lahf
leave
pop
std
sub
ss
clc
test
or
flds
cltd
cmp
mov
mov
sub
aas
mov
inc
lahf
lret
fistl
js
and
push
insl
or
lret
mov
adc
addr16
mov
pop
insb
inc
insl
jmp
imul
jle
jns
cs
sbb
push
pusha
and
lret
jne
test
mov
andb
and
repnz
jp
popf
xchg
and
and
sub
push
jns
popf
loopne
mov
xchg
push
jbe
cwtl
push
cmc
cmp
add
popa
rcll
cmp
loopne
mov
mov
mov
.byte
mov
