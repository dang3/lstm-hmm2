xchg
add
das
add
jl
add
jl
add
jl
add
jl
add
out
add
add
add
fidivl
add
add
js
add
bound
add
add
push
sub
add
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
jl
add
jl
add
jl
add
jl
add
add
add
popf
jns
add
add
js
add
bound
add
add
push
sub
add
add
sbb
add
jns
add
add
add
add
add
add
outsb
add
xchg
add
jns
add
add
sub
add
add
add
add
add
push
ja
add
add
add
add
pop
jl
add
add
js
add
bound
add
add
push
sub
add
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
mov
add
add
jl
add
add
add
add
add
add
add
js
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
das
add
jl
add
jb
add
jl
add
jl
add
jl
add
inc
outsl
outsb
je
outsl
insb
and
outsb
gs
pop
inc
outsl
insb
outsl
jb
add
add
inc
outsl
outsb
je
outsl
insb
and
outsb
gs
pop
inc
gs
je
jo
add
cs
inc
inc
inc
push
dec
push
add
add
inc
outsl
outsb
je
outsl
insb
and
outsb
gs
pop
inc
arpl
jae
imul
add
fcmovne
jg
adc
dec
data16
popa
cmp
add
add
push
add
or
add
add
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
adc
add
mov
filds
adc
add
pop
add
inc
add
add
add
add
pop
add
add
pop
add
add
add
push
add
jo
mov
add
add
add
add
jne
scas
add
data16
add
add
sbb
and
add
add
sub
pop
add
add
jae
jne
add
xor
data16
add
add
pop
add
jne
jo
mov
nop
add
add
add
add
faddl
jne
add
xor
data16
add
add
jo
les
push
add
jo
add
sub
pop
add
inc
add
pop
add
add
add
filds
jne
mov
push
add
jne
test
add
add
add
mov
add
add
add
add
add
add
faddl
stc
add
sub
add
in
add
add
add
add
add
mov
lea
and
add
add
and
add
add
popa
add
add
add
test
aam
sbb
add
add
pop
add
add
add
add
add
push
add
add
add
adc
roll
add
add
add
pop
add
movsb
add
add
bound
and
filds
jne
jne
lcall
add
add
add
cmp
dec
add
dec
add
imul
and
add
add
add
and
push
add
add
jne
fwait
add
add
add
add
add
add
add
jl
or
pop
add
int3
add
add
add
add
test
dec
add
filds
pop
add
add
inc
add
add
jg
filds
pop
add
out
add
or
mov
add
add
add
pop
add
add
add
push
add
pop
add
ret
add
add
add
jne
jne
xor
les
stos
add
add
add
adc
add
cs
add
push
add
add
push
add
add
add
scas
add
add
pop
add
and
push
add
inc
add
push
add
sbb
arpl
cmp
add
add
add
add
or
lret
add
add
push
add
add
cmp
hlt
add
add
pop
add
jns
imul
add
adc
push
add
add
add
mov
add
pop
add
add
add
aam
js
push
add
add
add
pop
add
add
add
push
add
add
adc
popa
add
add
add
add
add
push
add
add
add
add
add
add
mov
add
adc
dec
add
add
add
add
add
add
add
adc
sbb
push
add
add
data16
add
filds
and
add
jne
mov
add
pop
add
push
add
int
xchg
add
fldl
filds
lea
rolb
add
add
add
add
add
adc
push
add
data16
add
stc
add
and
mov
sar
adc
bound
sbb
fisttpl
mov
push
and
adc
xor
cmp
cmc
mov
hlt
mov
jmp
sbb
bound
pop
push
fneni(8087
gs
jmp
mov
fstps
and
mov
jno
cltd
popf
cmp
jecxz
xor
aad
ss
jo
dec
xchg
insb
pop
fcom
dec
scas
and
mov
jmp
dec
mov
pop
push
ljmp
scas
inc
pop
push
sbb
mov
cmc
int3
mov
pop
sub
int
out
pop
mov
ret
in
inc
sub
fwait
movsb
into
push
mov
adc
enter
sub
sahf
jge
gs
mov
lods
push
rep
ret
nop
mov
movsb
mov
je
lea
cmpsl
mov
hlt
jmp
xchg
filds
pop
aas
mov
mov
pop
xor
sub
test
jb
cltd
xor
cmp
mov
lahf
mov
test
rcll
mov
in
push
mov
stc
jne
call
dec
test
mov
popa
and
mov
mov
fimuls
jb
sbb
popf
jl
inc
rcrl
addr16
jns
mov
stc
cmpsl
pop
mov
push
mov
cmpsl
test
outsl
dec
shlb
insb
jne
fxch
xchg
shrl
add
inc
shl
sbb
scas
mov
out
test
pop
in
or
dec
mov
popf
sbb
mov
fwait
movsb
adc
mov
and
fildll
aas
pop
jl
fimull
pop
cld
test
xchg
cmpsb
negb
sbb
dec
jmp
call
enter
push
mov
insb
or
scas
lahf
pop
adc
arpl
mov
pop
inc
xchg
fdivl
xchg
xor
dec
jg
sbb
cmp
les
push
test
sbbl
mov
loopne
mov
mov
leave
sub
jae
sub
cmp
leave
cs
fcomp
mov
xor
or
mov
jb
inc
jno
xchg
jnp
loop
push
or
jnp
xor
jp
jl
test
ss
mov
push
ret
loope
add
lret
mov
bound
mov
lret
push
jmp
out
xor
xchg
data16
into
enter
mov
ds
push
cmpsb
mov
mov
push
leave
inc
mov
adc
sub
scas
jecxz
popf
mov
mov
inc
xchg
leave
imulb
lock
sbb
xchg
andb
mov
mov
ds
cli
pop
stos
in
sbb
inc
out
adc
ljmp
xchg
fildl
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
in
push
ds
dec
dec
pop
xchg
or
cmp
sub
cmc
fdivr
int
mov
mov
jle
dec
dec
pop
cmp
push
or
mov
subb
jge
insl
mov
cmp
add
sub
out
in
fnstsw
fdivrs
sub
adc
or
fistpll
add
mov
lret
aad
insl
loopne
sub
or
cmp
and
mov
adc
test
inc
mov
push
loope
add
insb
daa
push
pop
sub
cmp
cmpsl
xchg
js
std
out
mov
and
pop
insl
inc
push
pop
enter
insl
jle
dec
mov
push
std
into
or
push
fdivl
and
xor
mov
pop
mov
sbb
int
test
out
lds
test
enter
in
in
lret
pop
add
inc
mov
lods
sti
pushf
bound
pop
cmp
cmp
push
or
push
int
mov
xchg
lea
and
xor
dec
push
pop
jnp
pop
xchg
lods
pop
mov
jmp
stc
mull
sub
cmp
cmp
dec
insb
sbb
popl
out
mul
fidivrs
or
insl
xor
ds
out
in
int
mov
mov
jle
dec
dec
pop
cmp
push
or
int
mov
mov
sub
xor
mov
dec
bsr
inc
loop
inc
insb
lds
ja
mov
imul
idiv
adc
ja
push
les
arpl
jge
adc
push
push
push
mov
add
clc
mov
and
cmpsb
add
mov
insb
bound
sti
js
lcall
rorl
jo
pop
icebp
pop
repnz
sub
pusha
mov
int3
and
mov
push
inc
mov
rorl
cli
mov
cmp
dec
fs
jp
ja
dec
sbb
loopne
cmpsb
sub
js
ja
call
addb
fmuls
aam
xor
lahf
es
test
fwait
sub
ret
dec
sub
add
cltd
icebp
jg
adc
xor
jmp
xchg
scas
mov
sbb
mov
xchg
push
test
lock
jb
xchg
in
xchg
add
dec
dec
mov
push
push
jbe
stc
push
cmp
pop
loopne
enter
lcall
jne
fxch
inc
dec
and
mov
aas
dec
mov
les
jae
sbb
cmp
add
adc
jmp
cmpsl
or
mulb
mov
jbe
xor
sub
jmp
icebp
out
xchg
dec
popa
mov
ja
sub
mov
sbb
mov
arpl
out
mov
push
inc
out
mov
xor
adc
dec
mov
aaa
mov
adc
js
enter
leave
push
pop
adc
outsl
imulb
pop
or
cmc
lods
mov
pop
xor
pop
mov
cmpsb
pusha
xchg
xor
mov
mov
inc
enter
push
sbb
cmp
xor
cli
cmp
pop
mov
incl
fwait
jae
pop
and
das
movsb
scas
ja
or
pushf
adc
insl
call
cmp
fildll
pop
or
cltd
dec
inc
inc
jl
repnz
pusha
push
popf
cmpsl
xor
jmp
in
xor
jge
imul
jo
mov
clc
jo
clc
pop
testb
mov
hlt
sub
repnz
mov
dec
push
pusha
loope
add
sbb
popa
or
pop
test
mov
fsubs
fistl
fadds
push
cmp
sbb
sbb
cmp
pop
insb
gs
testb
cmpsl
mov
xchg
les
pop
pop
stos
jle
shlb
ret
fmulp
call
adc
adcb
into
pop
mov
aaa
mov
idivl
nop
xchg
out
mov
test
xor
addr16
imul
pop
jl
cmp
add
aad
sbb
jmp
jae
lret
in
push
ja
packsswb
into
and
in
adc
mov
jl
aad
idivb
jecxz
addr16
fsts
pushf
out
cltd
std
inc
xchg
cmp
ljmp
sub
add
in
test
sbb
mov
insl
fisubs
adc
add
inc
cli
gs
dec
int3
outsl
pop
int3
loopne
push
sbb
sahf
int3
mov
or
repz
lea
iret
cmpsb
gs
add
lea
push
jbe
test
cld
sbb
loopne
and
adc
xchg
dec
or
pop
inc
push
pop
adc
push
xlat
pop
daa
out
xchg
hlt
insl
in
pop
mov
setbe
fisubrl
jno
lea
pushf
lret
outsl
pusha
scas
lcall
sbb
dec
imul
out
daa
and
sbb
cmp
adc
ret
into
xchg
rcrb
sbb
popf
call
insb
xchg
lret
aad
sub
dec
arpl
shll
mov
rorb
lret
push
mov
push
stc
loopne
ds
pop
xchg
sub
jae
ja
lret
pop
sub
rcl
push
roll
inc
sub
ss
sub
out
lods
dec
loop
dec
add
dec
fimull
adc
inc
mov
jecxz
dec
mov
daa
dec
pushf
dec
or
jno
inc
aad
gs
jle
aam
pop
mov
mov
pop
dec
in
mov
bound
pushw
add
sub
out
adc
ss
cltd
cmpsl
dec
in
negb
push
es
daa
mov
mov
mov
ja
scas
add
icebp
or
cmpsb
jl
adc
inc
movsl
lret
push
movsl
popa
lods
mov
pop
xchg
mov
sbb
std
iret
add
sahf
mov
xchg
outsb
int3
push
sub
dec
out
scas
std
xor
iret
sarl
movsb
out
js
int
pop
pop
add
lods
sti
inc
xor
iret
por
and
jo
pop
sahf
jns
dec
xchg
push
mov
jecxz
daa
sub
cmc
fdivr
push
sti
ffreep
xor
test
test
xor
sub
xchg
andl
adc
pop
xchg
mov
js
dec
xor
popa
mov
aas
jae
adc
mov
lcall
fsubs
pop
push
pop
inc
mov
out
cmp
push
jmp
mov
jl
dec
dec
dec
lret
cmp
les
movsl
or
jle
dec
sbb
xchg
jg
xchg
add
jae
xlat
andl
pusha
enter
push
pop
sbb
adc
pop
loop
or
pushf
repnz
aaa
mov
jg
or
pop
scas
stos
xor
les
mov
cmpsb
daa
pop
add
enter
sbb
add
sub
and
movsb
cld
iret
push
js
test
repnz
in
push
and
test
je
add
test
stos
setg
scas
inc
arpl
dec
and
mov
xchg
in
outsl
sub
in
call
xchg
in
mov
jecxz
iret
and
js
add
into
shll
inc
add
sti
imul
shlb
lcall
jmp
pop
sarl
mov
push
shl
push
push
sub
cmpsb
xor
sbbl
push
aam
in
les
imul
xor
cltd
cltd
inc
jg
out
sub
mov
test
cmpb
dec
jecxz
cld
inc
mov
sti
add
test
pop
and
pop
adc
dec
test
push
not
fisubrl
mov
push
pop
jge
jo
shll
in
call
stos
dec
push
scas
loop
das
cli
mov
push
sub
sub
call
mov
pop
adcl
popa
sbb
rcrl
push
bound
jb
shrb
stc
testb
aad
sub
sti
jge
mov
je
or
push
gs
cmp
repnz
pop
adc
shlb
mov
lret
mov
jo
or
hlt
mov
cmpsb
cmp
lock
adc
fcomip
jmp
adc
pushf
roll
adc
divl
bound
dec
lods
push
pushf
mov
sbb
insl
div
xchg
add
test
mov
daa
es
into
sbb
push
push
shrl
adc
jp
and
movsb
scas
mov
sbb
inc
push
sub
sbb
imul
lods
and
jo
cmpsl
daa
sub
outsl
test
lea
lret
push
adc
insl
mov
push
mov
ljmp
sbb
push
sbbb
data16
hlt
imul
cmc
ret
pop
outsl
cmp
clc
dec
es
imul
mov
jnp
mov
fisubs
stos
pop
ja
jnp
es
adc
fstps
inc
cmp
and
iret
or
inc
inc
mull
mov
mov
movsb
sbb
pop
xorb
daa
jb
fdivs
jge
ja
jg
insl
lea
cmp
jne
xor
into
and
mov
and
loopne
push
mov
iret
stos
adc
int3
jae
jbe
pop
mov
pop
cmpsb
stos
out
insl
cld
aaa
or
insl
sahf
cmpsb
cltd
sub
mov
or
lds
pop
or
ja
push
arpl
mov
sbb
sarl
iret
pop
and
and
and
in
shll
shrl
dec
jge
aam
into
cmpsl
rorb
cld
push
ja
pop
xchg
cld
fst
sub
or
cmp
prefetch
or
or
push
sbb
push
jmp
scas
std
push
xchg
ror
sub
fiaddl
fldl
out
adc
or
inc
call
lahf
lret
cmc
rcrb
cli
fwait
sub
pop
in
fwait
xchg
ror
mov
ljmp
push
mov
push
sub
inc
rcr
rorb
inc
imul
cld
loope
decl
sub
push
and
mov
pusha
aaa
std
mov
push
lea
dec
jns
pop
push
shrb
or
ret
push
cmc
sub
stos
sarl
lds
push
sahf
imul
pop
cmp
and
add
std
mov
push
stos
xchg
scas
aaa
mov
or
arpl
outsb
add
or
imul
jo
rcrb
inc
xchg
mov
jo
jl
fidivrs
push
outsb
mov
shl
imul
stos
stos
popf
icebp
pop
in
push
jecxz
lahf
jns
hlt
outsb
test
mov
cltd
lret
xor
xlat
out
test
push
in
sbb
sub
add
shll
pop
push
in
sub
and
mov
and
sub
xor
movsb
into
add
dec
inc
dec
or
popa
cmp
mov
pop
icebp
cmpsb
test
push
push
xchg
orl
int
inc
add
fsubrs
icebp
adc
addl
inc
or
movsb
rcrl
js
fcoms
ljmp
inc
push
mov
hlt
or
push
out
mov
int3
mov
ds
aas
stos
lahf
cli
js
lcall
jmp
jge
stos
or
loope
dec
pop
xor
cmc
out
bound
dec
and
pop
mov
adc
out
ja
or
push
push
data16
adc
mov
in
xchg
or
mov
dec
push
sbb
cmp
or
lea
popl
orb
or
sahf
movsb
pop
jl
movsb
cmp
and
int3
stos
cs
inc
mov
sub
fmul
dec
push
in
adc
jb
movsb
push
hlt
sbb
xchg
xchg
leave
mov
pushf
xlat
fdivp
lcall
mov
lods
fsubl
pop
adc
ret
fdiv
adc
xchg
pop
and
scas
call
push
lea
inc
xor
sub
mov
outsb
sub
sbb
aaa
adc
mov
pop
jge
popf
dec
mov
lcall
rcll
pop
cld
in
test
int3
pushaw
cmp
xchg
inc
sar
add
pop
fmul
or
aad
dec
div
lds
mov
dec
push
jno
jge
rolb
stos
andl
int3
rcrb
sbb
and
xor
cmp
out
popa
dec
pop
cmp
fcmovnb
dec
outsl
ds
pusha
jnp
ds
addr16
inc
mov
movsl
sti
inc
cmpsb
jbe
mov
cwtl
xor
or
sub
cmp
inc
adc
dec
push
test
mov
sub
sbb
mov
mov
lock
push
negl
pop
rcrl
movsb
mov
lahf
lock
dec
xchg
xchg
push
fiaddl
or
adc
idivb
scas
iret
inc
in
push
test
xchg
mov
into
push
xchg
test
repnz
dec
rcrl
in
inc
lea
pop
xchg
xor
cs
xchg
data16
push
dec
xchg
aaa
sub
mov
mov
add
test
adc
stc
add
jge
repz
mov
jl
mov
xor
clc
sahf
loop
pop
pop
mov
lcall
ds
imul
jae
roll
std
or
and
in
pushf
lds
push
mov
jl
aas
shrl
push
and
insl
into
push
aas
push
dec
cltd
mov
mov
sbb
add
in
cli
in
xor
adc
xor
sub
sbb
std
fxch
jbe
iret
xor
and
cmp
sub
icebp
cmpsl
lock
cmp
xchg
iret
icebp
xchg
and
jmp
fisubl
outsl
cltd
vmwrite
push
bound
cmp
add
jecxz
aas
pop
rcl
xchg
or
jge
adc
ljmp
xor
sub
ret
xor
or
fnstsw
ljmp
or
pop
xchg
mov
sti
sub
sub
push
push
jne
ret
dec
outsb
mov
ret
lds
mov
cmp
cs
andl
roll
add
inc
sub
xor
cli
aam
mov
sub
lods
mov
mov
mov
inc
add
std
out
and
adc
or
push
xor
xchg
shrb
jecxz
pushf
je
js
jb
sbb
stos
les
jns
les
jbe
dec
mov
popa
sbb
or
jge
fnstsw
mov
addl
jae
lret
mov
mov
cmp
call
jns
out
push
mov
lds
or
pop
pop
in
inc
rolb
in
pop
jno
loop
inc
add
cmc
pop
and
or
inc
popf
pop
dec
je
lahf
lds
jno
xchg
mov
cmpsl
add
and
jne
lahf
rclb
pop
push
inc
je
mov
aad
jae
jg
fs
or
push
and
bound
inc
stos
int3
xchg
cmp
push
test
sbb
jmp
cmp
scas
int3
enter
hlt
icebp
fwait
leave
out
inc
aad
pop
cmpb
pop
add
fnstenv
mov
jmp
in
scas
mov
ds
pop
inc
xor
loopne
bound
outsb
jae
popf
mov
and
pop
mov
stos
daa
push
mov
mov
add
xor
sbb
insb
lret
and
cli
faddl
push
rorb
pop
test
jmp
sub
sub
stos
inc
inc
mov
shll
xor
cmp
xchg
pop
pushf
popa
leave
push
add
aaa
mov
or
xchg
and
sbb
push
inc
aam
pop
in
push
cwtl
and
or
or
repz
mov
mov
ffree
mov
xchg
pop
cmp
mov
imul
inc
jle
mov
fmull
jle
adc
shl
lret
clc
xchg
mov
out
push
sub
loopne
mov
test
xor
adc
mov
xchg
sub
inc
fadds
sub
insb
dec
or
adc
mov
pop
or
xor
test
and
call
lds
imul
leave
scas
mov
enter
xchg
imul
jo
sub
cmp
bound
inc
jmp
mov
cmp
or
or
aaa
loop
pop
loope
clc
mov
test
adc
nop
mov
push
fwait
pop
and
cs
ja
pop
sbb
shr
and
cmp
lods
mov
cmc
mov
pop
gs
push
xor
pop
and
cli
aaa
sbb
fidivs
dec
ljmp
or
xor
outsb
xchg
jmp
lahf
sbb
cmp
xchg
pop
inc
cwtl
or
mov
xchg
nop
pop
in
adc
or
test
sub
inc
and
mov
adc
push
lds
mov
inc
jmp
clc
xor
out
ret
movsl
or
out
in
gs
data16
fnstcw
mov
loopne
inc
movsl
add
or
fwait
loop
loop
fnstsw
and
cmp
lret
cmp
mov
push
aaa
popa
scas
fisttpl
or
add
add
dec
das
mov
mov
mov
sbbb
data16
leave
insl
in
jge
stos
out
iret
xchg
mov
pusha
sbb
outsb
std
xchg
out
xchg
in
sub
lahf
cli
mov
inc
aad
or
movsb
mov
mov
mov
ljmp
xor
sti
bound
inc
dec
sub
arpl
ljmp
jl
push
jo
push
test
mov
xchg
ja
rcll
in
popf
dec
pusha
imul
dec
inc
fidivrl
pop
testl
fs
xor
cmpl
subl
cmp
jge
dec
cmp
add
dec
je
decl
xchg
icebp
pop
push
xchg
mov
dec
nop
xchg
scas
push
ljmp
repnz
movsb
loope
push
ljmp
mov
repz
repz
loop
std
add
cmp
cli
sbb
mov
imul
jecxz
ss
mov
aad
js
lea
icebp
loope
mov
xchg
xchg
mov
cltd
mov
jmp
dec
test
mov
movsb
adc
mov
or
cmp
add
jo
scas
cwtl
push
sarl
dec
jp
lcall
div
movsl
sub
in
pop
pusha
dec
and
or
addr16
dec
mov
cmc
or
jg
or
fiaddl
lods
sbb
or
ret
cmpsb
fwait
aam
loope
test
test
in
rsm
lds
test
dec
mov
jb
rorl
faddp
mov
imul
pop
mov
jo
add
repnz
xchg
rorb
inc
xchg
cmp
xor
mov
push
popa
pop
mov
mov
pusha
in
sbb
or
clc
cmp
mov
push
and
add
hlt
mov
test
or
mov
xor
movsl
fmuls
sub
js
sbb
repnz
inc
jp
push
inc
push
cld
out
insb
ds
jge
int3
cmp
loope
cld
movsb
mov
dec
out
ljmp
cmpsb
cli
sbb
stos
dec
xchg
call
jle
int
sub
sbb
xor
pop
mov
and
pop
dec
push
pop
outsb
imul
outsl
xchg
ljmp
xor
fucom
xor
pushf
push
loope
je
cmp
rclb
push
jge
cmp
pop
mov
outsl
data16
clc
inc
test
xlat
outsl
pop
nop
or
rolb
push
je
lahf
push
call
out
idivb
test
arpl
pop
mov
mov
cmpl
xchg
fmull
push
mov
inc
lds
out
rcr
repnz
repz
js
ja
out
mov
insl
xor
cs
pop
dec
pop
xor
mov
pop
les
mov
fstl
inc
aaa
cs
in
xchg
push
test
cmp
push
xchg
mov
test
stc
inc
sbb
jge
push
repnz
xchg
or
out
enter
inc
fsubr
adc
movsb
roll
mov
divb
push
rol
add
adc
mov
sti
jl
sub
js,pt
mov
or
jp
cltd
iret
push
cli
mov
and
lahf
adc
lret
into
mov
inc
inc
jo
dec
cld
and
cmp
cmp
fsubrs
fidivrs
ljmp
xchg
popa
adc
sub
jg
inc
sbb
test
xchg
mov
out
stos
push
clc
cmp
bound
jnp
jg
add
and
push
mov
or
fsubrs
sub
repz
dec
push
fistl
push
xor
popf
cli
dec
loope
pop
mov
mov
xlat
jne
mov
push
adc
jno
repnz
addl
sbb
add
mov
std
add
imul
enter
inc
mov
sarb
xchg
cmpsl
sub
in
movl
into
or
popf
pushf
fucom
xor
adc
sbb
mov
xor
push
aas
jbe
mov
push
test
frstor
neg
addr16
sbb
dec
loop
movsl
and
mov
xchg
pushf
mov
jns
jbe
shlb
out
jne
stc
outsb
mov
xchg
or
out
sbb
cmp
cmp
jae
stos
fcoms
mov
or
daa
repz
or
aad
push
mov
bound
or
ja
sahf
fistps
stc
jnp
leave
call
das
pop
cld
stos
mull
push
inc
mov
addr16
das
aad
sub
loope
xchg
insl
js
loopne
fwait
pop
xchg
pop
test
or
rorb
leave
out
out
out
lret
imul
popa
lods
cwtl
clc
add
add
rcr
test
lret
stos
pop
mov
int3
loope
sbb
dec
jecxz
in
push
pop
push
push
dec
cmp
cmp
outsl
mov
andb
cld
sarl
sarl
insb
movsl
lret
jp
jns
and
ja
pushf
jmp
inc
push
decl
xchg
add
lret
jle
fisttpll
loope
inc
jle
cltd
out
jle
mov
mov
sub
daa
push
and
sub
fs
mov
jl
sbb
pop
push
fiaddl
cltd
push
lock
popf
pop
insl
out
sbb
aas
jae
lods
testl
nop
pop
in
mov
stos
jns
add
push
add
js
mov
data16
jne
jl
loope
xor
mov
daa
mul
aaa
mov
insb
mov
cmp
enter
stos
cltd
push
sbb
ret
into
lods
mov
sub
jns
xchg
je
and
mov
shrb
cmc
inc
stos
xor
in
xchg
add
cmp
dec
cmpsb
and
je
inc
adc
mov
inc
test
bound
lea
pop
and
inc
push
out
fnstcw
pop
and
jge
lret
int
pop
fcompl
sbb
mov
test
pcmpgtb
add
stos
sbb
adc
xor
movl
jge
pop
repnz
xchg
js
iret
push
and
push
cmpsl
and
pop
or
movsb
js
lods
rcrl
ss
mov
sbb
in
jp
adc
lahf
imul
rcrl
sahf
mov
aam
sub
push
pusha
cmp
popa
push
imul
ljmp
mov
out
jbe
cmpsb
in
and
xchg
xlat
sarl
dec
fwait
das
insb
add
push
das
inc
pop
adc
xchg
insl
dec
pop
sub
nop
cmpsl
stos
xchg
push
or
dec
xchg
aad
fldenv
enter
lods
ficomps
enter
movsb
cwtl
cmp
stos
push
mov
int3
mov
cmc
cld
sbb
test
sbb
cld
fwait
push
inc
mov
xor
out
sub
cmp
stc
cs
push
popf
cmpsb
jnp
bound
jle
jb
addb
dec
dec
pop
cmp
push
or
int
mov
mov
jle
dec
dec
pop
cmp
push
or
int
mov
mov
jo
push
dec
pop
cmp
or
cli
int
mov
xchg
pop
stos
dec
push
cmp
mov
push
ja
int
lret
divb
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
cltd
adc
and
cmp
pusha
sbb
sub
jns
imul
mov
push
leave
inc
stc
jo
pusha
sbb
sub
jns
imul
mov
push
leave
inc
stc
jo
pusha
sbb
sub
pop
xchg
cmp
in
adc
pop
mov
xchg
sahf
mov
rorl
and
aam
ret
clc
and
jbe
inc
push
push
ror
mov
movsl
js
jg
mov
sub
das
mov
jecxz
rol
loopne
mov
sbb
cmpsl
insl
sbb
sub
pop
pop
rol
add
punpckhwd
add
scas
and
jmp
in
fmuls
lock
loop
lret
cmp
push
fbld
push
jmp
jecxz
insb
add
mov
mov
cmp
punpckhwd
xchg
adcl
repnz
stc
sbbb
or
inc
mov
mov
adc
and
push
leave
inc
stc
jo
pusha
sbb
sub
jns
imul
mov
ds
xor
insb
hlt
dec
fsubrs
mov
mov
repnz
fidivl
call
and
pop
lods
pusha
imul
cmc
inc
shrl
iret
scas
mov
stos
adc
mov
pop
int3
inc
pushf
push
leave
inc
stc
jo
pusha
sbb
sub
jns
imul
mov
push
leave
inc
stc
jo
pusha
sbb
sub
jns
imul
and
or
out
pop
xchg
xor
cmp
ja
dec
adc
insl
icebp
sub
cld
xchg
test
push
jecxz
test
push
repnz
pop
test
mov
rolb
iret
lcall
cmp
mov
ret
out
cld
sarb
int
loop
cmp
and
push
sbb
adc
test
push
std
js
or
mov
pop
mov
push
cmpsb
jns
and
test
sti
cmp
daa
xchg
stos
imul
inc
mov
xchg
loopne
mov
dec
lret
mov
pop
and
and
inc
push
movsl
outsb
inc
je
jg
outsl
jb
outsl
daa
ljmp
xchg
insb
cld
xchg
imul
out
clc
insb
je
hlt
negb
inc
loop
outsb
cmp
mov
add
loop
or
adc
pusha
push
or
inc
aas
dec
out
mov
xor
int3
lahf
shll
xor
inc
inc
mov
ss
aam
push
cwtl
mov
shlb
or
mov
lds
out
xlat
in
mov
aas
outsl
jl
pop
sbb
jg
loope
je
sub
shll
mov
sbbb
ret
sub
add
xchg
cld
bnd
xor
jl
sahf
pop
lock
sahf
or
daa
pop
jle
xlat
ffreep
add
sbb
jg
aaa
cmp
std
add
leave
jecxz
mov
pop
rcrb
mov
xor
mov
dec
lods
or
rolb
repz
mov
loope
push
incb
jb
lods
fidivrs
sarb
je
roll
fdivrl
cmp
jmp
cmp
xchg
imul
out
dec
cmp
jl
les
ret
push
test
movsl
add
jle
adc
scas
cmc
push
mov
ret
mov
pop
orl
sub
mov
xorl
pop
cltd
xchg
not
cmpl
push
pop
outsl
sub
in
ret
mov
mov
sbb
jp
es
inc
push
addr16
loopne
jl
pop
jb
outsl
das
adc
add
lret
and
inc
lock
decb
aad
aam
mov
in
test
mov
pop
in
push
hlt
cmpsb
lds
adc
adc
repnz
popa
clc
out
pop
dec
gs
sub
xor
mov
add
std
lock
xchg
out
sub
lcall
sahf
pop
rorb
rorl
call
bound
lret
inc
cmpb
or
adc
out
pop
adc
mov
push
subb
int3
xlat
insl
subb
leave
inc
imul
dec
mov
shrl
jae
jmp
inc
cmp
imull
add
or
fldenv
pusha
clc
scas
jnp
cmp
dec
pop
gs
pushf
insb
sbb
jp
and
xchg
mov
outsl
es
sbb
or
fs
jae
xchg
push
xor
jb
cmp
icebp
push
push
aam
je
jae
xchg
mov
int
insb
sti
ret
mov
inc
xlat
inc
xchg
xor
cmpsb
mov
xchg
es
adc
hlt
push
int3
iret
cmp
addr16
cltd
stos
daa
loopne
pop
mov
movsb
mov
pop
xchg
dec
xor
pop
das
or
cmp
xor
jp
inc
mov
dec
mov
jno
jne
push
stc
push
mov
push
fbstp
cmp
fldt
mov
fdivs
sahf
mov
test
push
jmp
cmovns
mov
cmp
jbe
cmp
xchg
xchg
cmc
gs
xor
xchg
mov
pop
or
into
push
gs
add
cwtl
lahf
aam
mov
ds
pop
call
push
addr16
je
and
sub
cmp
adc
mov
adc
push
add
call
test
mov
movsb
fsubr
and
or
and
push
roll
inc
push
shl
stos
stc
xchg
sbb
push
pop
mov
cwtl
xor
xchg
pushf
das
bound
aad
jbe
mov
aam
cmpsb
in
lret
xchg
loop
stos
mov
dec
dec
lret
leave
popa
jns
shrl
mov
fsub
or
popf
jecxz
cltd
into
lea
in
outsb
push
loopne
dec
nop
or
aas
add
mov
mov
inc
lret
sarb
pop
mov
jecxz
and
pop
mov
in
fwait
hlt
cs
mov
sbb
hlt
xchg
and
and
in
es
inc
mov
mov
mov
xlat
test
xchg
sub
cld
mov
dec
ja
subb
in
dec
xchg
mov
icebp
jae
in
or
les
lea
pop
pop
mov
test
arpl
cmp
mov
cmp
test
ss
incl
hlt
filds
mov
dec
cmp
out
cmpsb
ss
test
test
sub
mov
decb
jecxz
mov
sti
call
or
add
rcrl
adcl
pop
pop
in
add
xchg
scas
sahf
mov
inc
das
popw
jecxz
shll
mov
add
in
call
adc
gs
lret
stc
flds
push
sub
rcrl
rol
adc
sarb
notb
mov
imul
out
fldenv
call
inc
or
pusha
ss
pop
adc
or
or
sti
xor
add
jne
mov
xchg
into
jns
inc
mov
pop
fldenv
insl
cmp
mov
shl
into
cli
stc
clflush
jnp
imul
xchg
insb
adc
and
lret
sub
push
xchg
fiadds
negb
add
inc
je
test
bound
xor
mov
ds
sub
dec
push
enterw
push
enter
mov
mov
or
xchg
mov
out
mov
les
push
mov
into
dec
ja
lret
push
fldt
in
inc
pushf
xchg
adc
push
mov
cmp
mov
xor
rcr
out
daa
loopne
sbb
pop
and
inc
lds
and
jmp
dec
add
into
sub
imul
out
adc
pop
add
stos
mov
test
inc
inc
or
xor
pop
rol
sub
add
jge
mov
fwait
xor
mov
add
and
fstl
mov
mov
cmp
xchg
cmp
mov
xor
inc
xchg
cltd
cwtl
inc
test
cmp
in
xor
jle
in
jle
push
xlat
push
xchg
rorb
pop
sbb
mov
mov
push
sarb
ret
cmp
or
aad
in
mov
xchg
cld
xchg
rclb
xchg
inc
in
pop
mov
sar
cmp
int
xchg
push
push
pop
shrl
test
adc
cmp
sub
fistps
loopne
andl
cli
mov
int
stos
test
push
adc
test
mov
sbb
or
loopne
inc
stos
jp
sbb
jp
xlat
lods
xchg
xchg
cwtl
mov
pop
pushf
dec
jno
dec
add
inc
mov
xor
fmul
mov
pop
cli
mov
jg
mov
mov
lock
out
pushf
loop
xor
hlt
xchg
popa
out
ret
mov
aaa
mov
pushf
pop
dec
inc
and
xor
mov
cmp
hlt
loop
push
dec
cmp
out
or
xchg
mov
inc
js
outsl
test
cmp
aad
or
cmp
mov
into
pop
jl
pushf
add
rcr
js
sub
jns
dec
roll
dec
cmp
jne
mov
mov
pop
cmpsl
pop
imul
push
ficomps
in
jnp
jmp
jmp
inc
adc
ds
cmpsl
aas
jne
or
dec
ficoml
push
cli
movsb
std
repnz
out
dec
dec
fwait
jmp
adcl
bswap
xchg
fs
stos
dec
push
push
lds
mov
xchg
inc
insl
jecxz
inc
cli
push
push
or
or
shrb
sbb
mov
mov
fsts
call
xor
insb
jno
mov
aas
push
jp
push
movsb
sti
ljmp
and
call
sbb
xor
push
add
and
test
xchg
mov
inc
xchg
push
adc
bound
les
jae
cs
or
jge
shrb
adc
lds
imul
test
insb
arpl
adc
jbe
fsubrs
test
sbb
xor
ret
mov
sbb
mov
pop
lds
mov
jl
test
inc
xchg
mov
xor
mov
cld
lock
pop
lods
mov
dec
cmpsl
inc
sahf
mov
cmp
js
and
sub
inc
dec
xlat
inc
popa
push
mov
mov
xchg
pop
sbb
fidivl
cmpsb
hlt
ret
outsb
jnp
enter
dec
rcrb
pop
rolb
push
dec
xchg
mov
das
lret
xchg
cli
dec
pop
roll
jle
jle
sbb
mov
arpl
mov
pop
mov
into
dec
std
cmpsl
cmpsl
mov
or
loope
movsb
loope
ss
and
leave
fnstcw
in
cmp
mov
popf
imul
mov
stos
push
or
sub
cmpsl
pop
leave
cmp
imul
inc
xchg
mov
xchg
mov
sub
cmc
mov
jecxz
scas
imul
add
inc
lahf
dec
fwait
vcmpss
mov
roll
popa
les
sbb
and
mov
sahf
sbb
das
sarl
mull
pushf
cltd
scas
add
inc
dec
and
jmp
bound
fimuls
sbb
sbb
je
cmp
dec
cltd
xchg
inc
fistl
les
mov
sahf
pop
mov
loopne
nop
jmp
cld
xor
xchg
jp
jp
or
cmpl
or
out
out
xchg
fdivl
mov
mov
in
jne
scas
mov
in
sub
xchg
add
pusha
inc
repnz
or
xor
lret
cmp
std
push
dec
mov
xor
mov
cmp
or
add
cmp
jns
pop
cwtl
movsb
mov
mov
fwait
and
adc
scas
imul
cltd
xchg
sarb
imul
orb
notl
push
xchg
ja,pn
cwtl
lret
inc
test
out
shll
sub
leave
das
adc
call
jg
add
ds
adc
dec
fld
stos
sub
mov
dec
dec
jo
lahf
sti
cmp
inc
pminub
lret
cld
call
loope
pop
dec
fs
jg
out
cmpsb
stos
pop
mov
outsl
and
addr16
cld
mov
push
mov
ret
xchg
pop
aas
pop
xlat
int3
inc
stos
pop
cmpsb
pop
mull
mov
repz
cmp
shrb
and
jae
fnstsw
icebp
xor
inc
jge
ja
sub
cli
pusha
mov
sub
fdivr
cli
test
in
jmp
sbbl
aas
std
sti
fiadds
xchg
mov
rolb
adcb
mov
rolb
pop
mov
sub
cli
mov
fisttpll
imul
cmpsb
sarb
xlat
repz
mov
aas
jbe
dec
xchg
dec
cmc
mov
cld
cmp
int
jne
sub
add
jo
add
hlt
or
inc
pop
out
add
inc
jge
lret
lahf
lcall
outsl
inc
xchg
sbb
outsl
mov
push
xchg
add
inc
je
mov
dec
setl
out
mov
xor
mov
mov
xor
or
pop
mov
dec
std
jmp
test
mov
movsl
sub
into
out
adc
adc
mov
push
js
or
dec
cltd
dec
push
sbb
scas
imulb
repnz
adc
jmp
mov
sub
pop
push
push
xor
adc
jbe
mov
in
call
lea
xchg
push
daa
mov
fwait
insl
jne
out
and
cmpb
cmp
mov
js
or
out
ret
dec
pop
xchg
xor
aaa
int3
jmp
dec
mov
adc
scas
jge
aaa
dec
aam
imul
jnp
lods
icebp
and
lods
fdivs
inc
or
sbb
clc
fiadds
jne
or
add
loopne
insl
cmp
in
imul
mov
shrb
mov
jo
fwait
shlb
mov
rclb
mov
push
cmp
fwait
inc
cmp
test
xor
enter
mov
dec
leave
hlt
add
or
xchg
mov
iret
and
lds
dec
pop
imul
dec
sbb
incl
cmp
leave
jno
xchg
push
push
mov
or
decb
mov
lock
or
or
and
jg
loop
outsl
fidivs
jle
xor
mov
popf
pushf
and
popa
mov
add
movsl
cmp
pop
or
ret
and
dec
in
js
sbb
xchg
lretw
sub
scas
jnp
cmpsl
mov
loopne
cmc
xchg
cmp
mov
lock
inc
sbb
je
push
pop
sbb
loope
call
arpl
xor
repnz
int
and
cltd
mov
cmp
cli
and
negl
in
in
fcomip
and
push
jg
imul
sub
dec
adc
cwtl
das
jecxz
mov
cmpsl
das
push
data16
ja
xchg
shll
das
cmp
data16
xchg
xor
fistl
and
mov
and
cmp
and
inc
xor
pushf
mov
push
sarl
rcrb
xchg
inc
inc
mov
leave
mov
dec
cmp
inc
and
fildll
inc
xrelease
cwtl
dec
cmc
sahf
add
mov
jg
packsswb
push
aas
sub
sbb
loop
xchg
fcomp
and
sub
pop
cmp
loopne
xchg
loop
rcrb
rcll
int
sbb
cmp
test
andb
rcrl
mov
jns
adc
push
inc
stc
jbe
xchg
aaa
insl
enter
je
adc
or
test
mov
add
inc
mov
sub
popf
jmp
fwait
paddw
adc
mov
ret
es
sahf
leave
mov
movsb
fnstsw
xchg
push
hlt
xor
pop
scas
movsl
or
push
shlb
rcl
btcl
addl
in
push
sbb
mov
dec
and
pop
inc
mov
cmpsb
mov
xor
inc
jecxz
jg
dec
insb
adc
gs
jae
sub
jge
xchg
sbb
xchg
xor
sahf
repnz
cmp
sbb
int3
jb
aas
add
icebp
stos
and
imul
gs
inc
lock
inc
and
imul
xchg
test
xchg
adc
mov
mov
pushf
or
ret
or
inc
inc
loop
push
fs
xor
mov
pop
push
js
fstps
sub
mov
mov
mov
jns
cmc
pop
pop
and
jbe
xchg
or
pop
aad
jl
mov
push
xorl
cmpsl
sub
pusha
js
mov
mov
rcrl
inc
push
ja
push
test
xchg
inc
add
int3
scas
jp
mov
mulb
inc
jo
fcompl
add
fwait
sub
repz
daa
outsb
jbe
jle
inc
jp
xor
in
cli
pop
pop
push
aad
fisubrl
or
outsl
enter
lret
pushl
movlps
into
rolb
sub
xchg
cmc
or
sub
aad
icebp
mov
push
out
leave
shlb
jge
push
mov
sub
mov
je
pop
jno
into
jge
lea
pop
cmp
jae
mov
cld
je
inc
ret
loop
dec
xor
jge
mov
fucomip
sub
stos
push
inc
test
pop
jmp
jo
cmp
sbb
mov
mov
in
jne
jbe
orl
sub
jns
or
adc
add
rorl
sub
mov
shrl
ss
outsb
out
icebp
mov
iret
arpl
sub
xchg
xchg
xlat
arpl
jae
mov
out
insl
pop
adc
fs
les
cmpsb
daa
sbb
xchg
daa
xchg
push
or
loopne
outsb
cmp
adc
ret
rcl
adc
push
hlt
cmp
mov
sbb
rcll
xchg
inc
sub
xor
jo
xchg
xchg
outsl
and
adc
cmp
imul
add
cmp
fs
imul
es
xchg
stos
js
std
xlat
xor
in
dec
fiaddl
adc
popa
aaa
push
push
in
cmp
mov
adc
jecxz
push
mov
jge
adc
rcrl
sbb
ss
or
out
cmp
cmp
adc
popa
pop
dec
pop
xor
lcall
fnstenv
dec
mov
out
mov
hlt
stos
add
fcmovnu
das
ret
out
ret
mov
test
sub
ror
adc
pop
pop
or
inc
call
je
lds
xchg
pop
lea
or
lods
pop
xor
cmp
enter
jo
push
lret
xor
ljmp
mov
inc
sahf
negl
push
xchg
push
ficoml
mov
inc
dec
out
bound
nop
jmp
subb
pop
mov
jnp
outsb
or
jl
or
std
pop
mov
cmpsl
enter
scas
jne
jg
xor
mov
fwait
dec
or
sarl
push
xchg
jno
or
pop
inc
push
rcl
bound
mov
pandn
movd
popf
out
fists
xor
lahf
repnz
es
cmp
std
ja
cmp
pop
mov
add
cmp
test
pop
and
mov
aad
sbb
lock
or
out
jge
jmp
lcall
icebp
xchg
jns
fidivrl
and
sbb
fwait
push
xchg
bound
sbb
and
in
insl
ret
jbe
or
lret
jp
sbb
pop
shl
loopne
dec
mov
shrl
imul
pushf
imul
mov
jne
insl
dec
lods
fs
and
push
notl
or
add
std
ficompl
xor
adc
test
cmp
dec
dec
cmp
int
mov
and
out
inc
or
shll
inc
or
xor
mov
push
dec
push
sbb
lret
loop
stos
out
out
rolb
push
ficoms
adc
ljmp
push
push
cld
std
scas
sar
and
insl
push
push
mov
add
sbb
lea
fstps
sub
inc
inc
sbb
lcall
or
pusha
mov
dec
fisttpl
pushl
mov
mov
sbb
add
sub
push
repnz
idivb
inc
sub
test
scas
test
shlb
mov
rcrb
and
sbb
inc
or
jns
inc
test
daa
and
adc
lahf
cmp
dec
popa
sub
out
aad
jnp
aaa
les
nopl
pop
stos
adcb
push
arpl
mov
leave
mov
mov
popw
adc
inc
andb
dec
xchg
insb
and
sbb
inc
pop
jmp
cmp
xchg
mov
pop
jno
enter
mov
icebp
ljmp
or
aam
jb
mov
add
negl
nop
dec
icebp
cmpsl
gs
mov
int
fwait
xor
push
lods
inc
lcall
push
push
mov
mov
or
fwait
or
pop
cs
stos
outsb
scas
jg
sahf
or
xchg
mov
xchg
push
inc
push
sti
popf
scas
mov
add
outsb
addl
sub
sub
repnz
faddl
mov
jb
xorl
icebp
xor
cmp
les
orb
shr
dec
shr
jl
xchg
outsb
xchg
mov
stc
arpl
inc
dec
imul
cmp
mov
pop
xchg
sbb
sbb
xchg
cld
xor
cld
or
jbe
sub
clc
std
enter
les
or
pop
sarl
clc
pop
aaa
int
and
mov
dec
xlat
jne
push
into
ss
pop
call
inc
lahf
nop
dec
jg
xor
stc
mov
add
stos
popa
test
test
outsb
std
shrl
fiadds
mov
pop
pusha
in
ljmp
fsub
inc
dec
outsb
sbb
scas
out
jle
iret
push
lea
jns
jnp
testb
dec
ja
shlb
pop
mov
push
arpl
fisubs
hlt
jmp
call
mov
loopne
adc
addr16
push
jg
sti
popf
xchg
dec
aad
aad
movsb
xchg
stos
jno
lret
shl
add
out
ja
popf
lea
mov
pop
lods
cmp
jmp
pop
test
test
movsl
and
clc
js
mov
push
jno
div
sbb
fwait
lds
shrd
test
mulb
xchg
ret
push
xchg
pushf
pop
push
push
add
mov
xor
xchg
xchg
pop
mov
push
repz
xchg
insb
dec
add
xchg
push
push
push
jg
lods
mov
sub
pop
add
punpckhbw
xor
cmp
sarl
cld
or
pop
pop
js
iret
cmpsb
out
push
out
add
inc
fmuls
shrb
cli
push
xchg
mov
mov
cmpb
push
ss
mov
fisttpll
pop
and
adc
or
andl
mov
dec
and
inc
and
in
jp
je
enter
iret
mov
push
cmpsb
mov
jmp
jno
jge
push
test
int3
in
jle
popa
fimuls
in
xchg
stc
xor
xchg
cwtl
aas
jnp
inc
mov
xor
cmpsl
insb
inc
out
jnp
bound
mov
mov
cmp
es
fimuls
je
cwtl
lcall
xchg
scas
mull
inc
adc
or
aaa
inc
adc
lods
mov
icebp
pop
lods
ret
add
jmp
es
and
fisttpl
cmp
scas
shrb
cltd
adc
mov
mov
lods
addr16
add
mov
add
or
pop
pop
ds
movsb
or
cli
ds
sti
adc
inc
xchg
insl
or
push
push
addl
jnp
out
cpuid
add
jle
xchg
xchg
xchg
test
inc
stc
jo
pusha
sbb
sub
jns
imul
mov
push
leave
inc
stc
jo
pusha
sbb
sub
jns
imul
mov
push
enter
jmp
cmpb
sub
js
imul
mov
push
leave
inc
jns
imul
mov
xlat
cs
sarl
setno
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
xchg
inc
fucomp
orb
pop
and
pop
push
or
dec
cmp
lods
fstpl
in
lods
fdivrl
sub
cmp
or
pop
sbb
sub
movsl
les
in
hlt
mov
stos
dec
fists
add
or
cmp
push
dec
mov
call
popa
xor
mov
movsl
cmpsl
movsb
sbb
push
and
loope
in
in
adc
jo
ja
adc
je
test
or
stc
dec
cmp
pop
mov
inc
inc
movsb
ret
aas
call
mov
mov
orb
mov
int
or
fmull
xor
xor
xrelease
dec
xchg
insl
aam
sub
arpl
adc
mov
sub
pop
jge
cmpsl
adc
loope
pop
lds
mov
push
or
mov
mov
sbb
das
or
pop
or
mov
xchg
popf
cld
xchg
lods
lds
jne
fs
sub
fnstcw
jmp
mov
mov
pop
dec
adc
adc
dec
pop
pop
and
repz
mov
pop
dec
sub
dec
push
xor
leave
mov
std
stc
cmc
nop
popf
in
lods
fdivrl
sub
sbb
or
jl
insb
sub
mov
std
mov
fdivrl
sub
sbb
or
jl
insb
sub
mov
xchg
lahf
mov
aad
mov
xchg
jae
sarb
push
push
out
int
mov
inc
adc
push
add
mov
sub
int
xchg
out
push
int
repnz
mov
push
lahf
or
mov
popa
mov
xchg
and
cltd
sahf
or
cmp
sbb
test
add
aad
jno
mov
test
mov
sub
mov
notl
mov
out
mov
fwait
cmp
mov
xlat
jecxz
aaa
mov
xor
jns
dec
xor
xchg
lcall
repnz
js
movsb
lret
pop
jnp
into
je
add
push
fbld
fisubs
xor
mov
mov
out
dec
adc
adc
test
pop
mov
push
mov
jle
mov
push
add
mov
fnstsw
imul
fs
mov
decb
fisubrl
inc
cli
xor
jge
ds
repnz
sbb
mov
stos
testb
ja
movsl
lea
cld
cmp
mov
or
shlb
dec
pop
cmc
call
cmp
popa
cmc
push
and
jns
popa
adc
leave
in
out
push
out
jecxz
push
test
into
int3
or
jle
lods
and
jbe
lcall
scas
roll
cmp
adc
filds
xchg
pop
test
cwtl
fcmovne
fiadds
pop
out
xor
ja
xchg
dec
mov
cmp
push
xor
rorl
pop
out
pusha
xchg
or
inc
loop
cmp
rcrl
out
inc
fld
push
sbb
lods
roll
out
mov
xchg
jle
std
cmp
sub
aad
adc
inc
inc
or
das
cmp
pop
inc
and
xchg
in
stc
scas
push
adc
hlt
in
mov
aad
xor
stos
or
mov
adc
jle
or
fsubrs
xor
xor
xchg
push
jl
xor
push
pop
xchg
adc
shlb
jo
mov
ds
pop
xchg
addl
in
sbb
sbb
mov
push
or
jnp
in
jbe
and
movhps
inc
xchg
cmp
xchg
adc
or
leave
sti
out
aas
cld
mov
sub
scas
mov
pop
mov
xorb
cmpsl
shlb
mov
das
jae
je
imul
sbb
fisubl
jno
cli
jnp
sub
lock
mov
mov
sbb
mov
cmp
and
inc
inc
jmp
cmp
jno
xor
xor
and
inc
mov
std
ljmp
outsl
inc
pop
xor
inc
jne
cmp
dec
and
enter
sbb
dec
out
mov
add
sbb
jne
push
jo
rcrl
xor
insl
mov
or
adc
lret
or
xlat
ficompl
adcb
aaa
aas
sub
outsb
or
outsb
pop
aad
ljmp
sub
mov
mov
jo
adc
mov
mov
adc
or
rcrb
or
repnz
lods
jnp
xchg
out
mov
inc
sbb
dec
jecxz
inc
jl
roll
sub
testw
leave
cmpsb
shl
arpl
andl
incl
add
ljmp
cmp
mov
icebp
bound
push
jne
push
adc
adc
and
ret
pop
inc
cwtl
mov
sbb
std
ljmp
sbb
push
ret
insb
push
test
xchg
mov
sti
or
adc
out
test
adc
lock
aad
fdivl
sub
cmp
or
insb
add
leave
js
sub
inc
test
mov
sbbb
push
rcrb
or
movsb
jne
jo
push
mov
and
pop
sbb
int
incb
comiss
out
fsubl
sahf
xchg
leave
clc
fsubrl
fisubrl
push
mov
jecxz
sbb
xchg
xchg
push
rcl
hlt
loopne
xor
aam
jmp
inc
ret
xchg
jecxz
xor
rolb
outsb
repz
jbe
mov
outsb
leave
aaa
lea
jecxz
mov
andb
ret
sub
ret
cmp
rcl
add
inc
push
mov
push
jg
push
dec
mov
inc
in
mov
rorb
mov
push
sbb
iret
daa
rcrl
outsb
dec
mov
sub
push
push
stc
mov
int3
shlb
add
add
cmp
jge
and
sarl
add
test
jne
popf
movl
cmp
ja
pop
mov
addr16
outsb
aam
nop
mov
add
and
sbb
inc
push
mov
pusha
insb
jp
addb
insb
ret
push
shlb
adc
sbb
jg
lcall
imul
scas
fadd
pop
sti
test
imul
mov
dec
mull
rorb
push
push
sub
push
imul
hlt
rcrb
fistps
push
adc
or
pusha
xor
xlat
cmc
jne
sahf
jnp
inc
mov
insb
and
movsl
fs
adc
or
ret
je
sub
xchg
out
aas
fcoms
push
cli
mov
dec
sub
xor
daa
cmp
mov
adc
push
jge
xor
dec
scas
int3
addr16
ljmp
jb
xor
cli
lcall
and
xor
xlat
ja
outsb
xor
adc
xchg
jne
out
or
or
pop
mov
jmp
mov
and
testl
in
inc
scas
ljmp
jo,pn
mov
lcall
or
adc
testb
repz
xchg
lcall
cmpsl
mov
cltd
dec
jecxz
test
fucomip
out
jecxz
mov
add
cmp
push
xchg
xchg
cltd
mov
push
imul
test
mov
mov
jnp
add
pushf
mov
repz
jmp
pop
adc
xchg
iret
cld
iret
ds
mov
add
pop
pop
daa
sahf
sbb
xor
das
sahf
mov
mov
push
popa
dec
rcrb
push
and
dec
repz
mov
sub
xchg
test
or
mov
cmp
sub
iret
pop
ret
repnz
ret
gs
xorb
inc
adc
cwtl
mov
pop
dec
shr
xchg
or
push
jle
jecxz
cmc
cmpsl
add
ret
cmp
movsb
push
inc
ds
fdivrp
pop
mov
imul
xchg
sub
clc
jl
dec
jp
mov
sbb
mov
shll
std
test
sbb
je
xchg
push
sahf
loop
insl
daa
stos
sbb
in
xchg
lahf
push
popf
mov
in
andl
xchg
push
sub
in
sbb
addl
fimull
les
loope
bound
js
dec
mov
out
gs
inc
push
cmovge
mov
stc
loopne
pop
cmp
jb
and
sub
aam
in
pop
arpl
rcrl
push
je
sbb
or
stos
out
call
ss
int3
inc
cmp
xchg
mov
out
mov
mov
dec
mov
xchg
enter
repz
cld
movsl
movsl
jae
mov
int
daa
or
popf
inc
or
icebp
and
mov
or
xor
stos
scas
movsb
mov
in
push
ljmp
jnp
cmp
repnz
xchg
and
shll
or
scas
mov
dec
fadds
cs
aas
aad
ret
test
sti
aas
in
aam
jnp
lret
jbe
and
push
sub
inc
repz
push
outsb
or
cltd
mov
sub
cmpsb
and
mov
aas
lahf
and
dec
outsl
push
movsb
mov
xor
pop
add
cltd
cmp
add
in
outsl
or
inc
mov
roll
in
leave
out
in
dec
movsl
add
insb
imul
pop
shl
inc
in
sub
cmpsl
out
int3
jg
jne
repz
popf
in
sarl
stos
adc
shlb
addr16
mov
sub
xor
cmpsl
xchg
push
or
cmp
add
sub
das
orb
jnp
mov
dec
jnp
pop
dec
inc
adc
sub
mov
ds
sbb
jp
sahf
sar
sbb
shlb
lcall
sub
mov
je
cmc
arpl
or
sbb
les
sti
fistps
into
insl
pop
dec
xor
cltd
pop
idivl
sbb
cmpl
cmc
cmp
clc
sub
push
leave
std
movsb
sbb
in
leave
ljmp
ret
mov
and
mov
ds
mov
sahf
cli
push
mov
divb
insb
adc
call
mov
call
mov
sbb
int3
aad
in
es
push
rcrl
xor
imul
dec
ds
lock
pop
cmp
inc
jmp
fldt
data16
test
mov
std
lret
sbb
nop
ret
add
in
xchg
test
jmp
sub
xlat
out
ret
and
jl
sub
or
dec
inc
icebp
mov
rdmsr
sub
sub
rclb
pop
cmp
mov
push
stc
cmp
testb
mov
insb
adc
popa
icebp
lret
nop
jno
mov
xor
dec
lock
subl
shlb
dec
stos
out
xlat
push
ljmp
dec
mov
clc
enter
iret
mov
fs
ljmp
add
lods
faddl
data16
repnz
push
int
das
xor
xchg
aaa
repz
es
sub
js
enter
dec
ja
adc
in
lcall
outsb
inc
les
xchg
mov
cmpsb
mov
jnp
mov
xor
fcoms
mov
pop
mov
lret
jnp
push
dec
mov
hlt
mov
enter
add
cs
enter
lret
cmp
cmp
mov
or
inc
mov
and
xchg
fsubr
ss
mov
add
mov
xor
iret
sbb
jge
bound
push
cmp
aad
popf
mov
sbb
iret
movsb
push
mov
jb
sub
xchg
push
jl
shrl
dec
sub
mov
xor
cwtl
test
jae
sbb
shll
stc
adc
test
xchg
pop
insb
pop
jo
push
inc
pop
cmpsb
sub
pushf
ret
push
xor
out
adc
fwait
mov
cwtl
push
ret
sub
sub
xchg
shlb
leave
push
xor
outsb
jne
jle
movsl
stc
insb
jp
int
sbb
pop
mov
and
mov
inc
cltd
lds
pop
mov
ficoms
dec
ret
jo
jnp
add
orb
lods
cmp
stc
mov
dec
cmove
es
stos
shrb
lods
pop
fs
bound
andl
in
pop
xor
je
adc
jle
insl
pop
inc
cmp
mov
js
aaa
and
hlt
lods
je
popf
fidivrs
loope
xor
movsb
sti
lods
add
mov
cmp
repnz
movsl
dec
in
add
dec
call
mov
fistpl
rorb
jne
lea
cltd
sub
pop
jle
lcall
add
jge
out
mov
out
scas
test
lret
or
stos
cli
out
mov
mov
imul
inc
xor
or
cld
shrb
mov
cld
cld
lds
call
jb
pop
std
push
xchg
hlt
or
adc
xchg
adc
mov
aaa
sub
out
int
dec
and
push
lock
frstor
and
test
leave
insl
dec
cmpsb
or
push
mov
cs
fsts
fistps
pop
or
push
mov
mov
das
mov
mov
aam
and
sbbb
and
in
sub
loopne
mov
fs
sbbl
ds
in
idivl
ja
mov
xchg
or
lcall
lds
mov
adc
jne
jno
ret
push
cmp
icebp
stc
shlb
stos
jo
inc
adc
in
cmp
pextrw
or
add
orb
xchg
mov
in
ret
repz
pop
pop
ja
pop
cmc
in
cmpsb
arpl
dec
sub
push
test
std
pop
mov
adc
popa
mov
fldt
test
nop
add
cmp
data16
into
ficoml
jnp
push
mov
jecxz
push
imul
out
aad
sbb
cltd
jb
cmp
inc
aad
pop
mov
lods
or
or
es
dec
cmp
pusha
adc
sti
ja
mov
mov
fldcw
in
or
sbb
push
jmp
test
jbe
inc
push
add
mov
sub
aam
mov
mov
decb
jge
sub
lret
jnp
cwtl
xchg
inc
push
cmp
test
pop
or
cmp
or
mov
xchg
arpl
ror
mov
cmp
jo
div
jno
ljmp
sahf
insb
in
leave
mov
lahf
pop
lcall
clc
add
pusha
adc
aad
adc
jne
mov
push
lcall
je
jo
push
jae
pop
cmpsl
test
dec
xor
adc
repnz
in
lcall
lret
gs
inc
mov
inc
in
faddl
hlt
in
fiadds
and
mov
pop
dec
mov
cmp
int3
gs
aam
fwait
out
xchg
pop
dec
add
mov
or
cmp
dec
sar
popa
repz
inc
pop
mov
mov
mov
in
cmpsl
mov
inc
movsl
inc
aam
sub
hlt
fstps
pop
add
mov
jp
rorl
scas
subb
sbb
jb
pushf
aam
cmp
push
and
dec
stc
ljmp
mov
fsin
stos
pop
test
and
loop
sub
inc
ljmp
jecxz
test
mov
pop
cmp
repnz
dec
lds
push
pop
lds
in
cli
xor
fwait
mov
mov
add
or
gs
push
mov
cmp
loopne
sub
cmpsl
pop
mov
stos
mov
test
or
jae
repnz
mov
sahf
addl
scas
fucomp
fisubrs
mov
push
mov
mov
push
push
mov
xchg
pop
imul
ret
gs
and
mov
out
test
push
push
adc
inc
loope
lcall
subl
cli
xor
mov
jecxz
jno
cs
call
dec
stos
pop
cmpsl
xchg
stc
dec
enter
orb
jno
ror
lods
inc
cmp
and
xor
jb
sahf
mov
ror
or
cmc
pop
adc
arpl
test
ret
or
and
adcb
fidivrs
adc
xchg
xchg
dec
test
das
add
lret
mov
or
push
pop
push
nop
add
cmp
jae
cmp
dec
cli
mov
andl
ja
add
xor
sbb
xor
lahf
dec
add
jg
iret
and
rclb
cmp
lods
adc
and
sub
test
lods
cmc
adc
mov
loopne
rcrl
outsb
out
push
popf
or
xor
cmpsb
daa
push
push
dec
subb
add
pushf
push
das
xor
jl
and
dec
mov
adc
pop
push
mov
xchg
sahf
and
inc
movsl
icebp
inc
xchg
outsl
jle
cwtl
in
mov
and
dec
scas
and
push
aam
sbb
xchg
push
lcall
lahf
lods
addr16
jnp
mov
xchg
sbb
mov
adc
shlb
shll
popa
push
xor
jle
mov
and
test
or
imul
inc
in
lock
addr16
mov
add
inc
test
sbb
cli
aam
ret
dec
jbe
out
and
adc
lds
cltd
bound
in
pop
or
sbb
enter
lahf
arpl
popf
loopne
lret
fcmovnb
mov
mov
cwtl
imul
inc
jl
mov
push
pop
inc
push
adc
xor
in
in
jo
out
mov
add
mov
pushl
fildl
nop
ficoml
pop
hlt
out
add
sbb
cmc
ss
or
push
dec
loop
loope
jo,pn
addr16
je
dec
outsl
cli
popf
outsl
das
das
das
insl
repz
cmp
sub
int3
jae
inc
loope
jb
sahf
cmova
icebp
in
pop
movsl
dec
jnp
add
in
outsb
xchg
jle
xor
cld
ljmp
jne
mov
xchg
xor
lret
and
popf
ret
cli
cmpsb
xlat
movsl
add
lock
adc
shl
jmp
xchg
fdivrl
jge
mov
jno
jecxz
cmp
push
aaa
nop
scas
mov
mov
jmp
inc
cmpl
idiv
xchg
lods
xor
fld
push
aas
ss
popl
or
jbe
pop
jns
xor
and
mov
ret
insl
addr16
lcall
out
fwait
lds
roll
idivb
xchg
shlb
pop
pusha
loop
mov
rcrl
int3
sub
clc
fcmovbe
lods
leave
xchg
and
adc
shrb
jnp
xor
sub
xor
out
adc
aam
std
cltd
xor
mov
lods
dec
rol
imul
gs
rcrb
out
cmp
les
push
sub
divl
cmp
inc
push
or
sahf
data16
mov
fidivl
xchg
popf
test
out
jo
jg
call
imul
dec
filds
push
mov
adc
inc
xor
push
out
movsl
cmpsb
xchg
cli
xchg
xchg
enter
add
scas
mov
jne
rcll
lds
lock
ss
outsb
repz
insb
push
into
rcr
jnp
dec
lahf
aam
lds
adc
push
xchg
mov
ds
adc
sti
sbb
jge
stos
inc
mov
out
jl
mov
movsb
sbb
cltd
jp
gs
inc
sbb
lea
movsl
or
mov
in
data16
inc
jp
clc
mov
xchg
andb
pop
jmp
bound
loopne
sub
and
sti
jecxz
data16
sub
loop
and
inc
pop
push
enter
and
adc
fldlg2
leave
adc
popf
mov
mov
dec
add
lods
leave
fisubl
loop
and
dec
mov
xor
out
pop
and
pop
mov
dec
lret
pop
fcoms
iret
das
hlt
daa
xor
pop
cmpsb
add
ret
push
sti
xlat
mov
leave
fsubp
cmpsl
lods
movsb
and
sbb
in
jne
inc
mov
lcall
mov
into
mov
popa
inc
stos
fildll
loope
dec
xor
mov
xchg
cmp
je
xchg
xchg
xor
addb
jmp
jecxz
enter
test
dec
inc
ret
push
jg
sub
popa
xchg
dec
sbb
and
das
xchg
lods
or
push
repnz
cs
dec
call
jmp
pusha
out
cli
and
test
xor
addr16
xor
mov
outsb
sbb
sbb
mov
and
jle
fwait
sbb
test
xor
pop
sub
inc
xchg
xchg
mov
inc
cmpsl
push
adc
jne
adc
xchg
into
hlt
mov
out
fidivl
adc
jne
stos
adc
mov
and
inc
addr16
jne
inc
inc
sub
and
bound
outsl
adc
mov
xor
movsb
xchg
outsb
popf
sub
pop
jmp
or
inc
movsb
pop
lods
sub
insl
xor
lods
movl
sbbb
out
in
cmp
dec
and
andps
mov
pop
sub
jp
dec
ret
out
adc
push
and
lea
loope
stc
push
imulb
sbb
popf
clc
cmpsl
cmp
int3
movsb
push
imul
sub
xor
fsubrp
roll
jmp
xlat
scas
fwait
pushf
icebp
sahf
negl
pop
sbb
into
xlat
xlat
loopne
mov
imul
fsub
jne
stos
shlb
push
movsb
cmp
jl
jb
inc
cmpsb
stos
cmp
in
sti
fnstenv
lock
sbb
lcall
rcrb
or
push
mov
stc
mov
push
and
mov
jo
ss
jmp
test
mov
mov
cmp
and
sub
sub
inc
mov
push
cmpsl
stos
das
aas
mov
ss
jg
orl
add
int
std
insb
pop
fbstp
or
iret
jle
jge
mov
mov
mov
inc
int
shr
stos
mov
je
cmp
arpl
into
sbb
lret
rorl
dec
sbb
incb
cmp
jle
jbe
addl
rcll
icebp
call
mov
mov
or
mulb
xor
fldl
lea
out
mov
or
cwtl
movsb
sub
dec
push
ljmp
inc
adc
ret
add
mov
insb
fstps
shl
cmp
shl
testl
inc
roll
pop
mov
inc
jbe
cmc
jecxz
add
jle
inc
or
scas
shll
sbb
idivb
shl
pop
mov
nop
dec
xchg
or
sti
cmp
jae
repnz
test
mov
sti
sub
inc
mov
jo
xchg
out
adc
dec
inc
cmpsb
in
addr16
cmp
out
cmp
sbb
gs
pop
hlt
pop
ror
fsubp
mov
rolb
adc
sbb
adc
and
pushf
aam
lret
mov
cwtl
addr16
es
shl
adc
out
sbb
je
mov
mov
imul
stos
pop
pop
adcl
and
scas
mov
xor
insl
call
mov
inc
mov
subb
xor
dec
mov
ds
sub
gs
imul
or
lods
js
mov
adc
int
bound
rol
mov
or
adc
jae
mov
fdivrl
sub
sbb
or
jl
insb
sub
mov
std
mov
fdivrl
sub
sbb
or
jl
insb
sub
mov
std
mov
fdivrl
sub
sbb
or
sub
mov
std
mov
fdivrl
xchg
sbb
jnp
hlt
xchg
xchg
shlb
int3
int3
int3
xchg
cmp
sti
sbb
or
aaa
dec
or
dec
mov
push
clc
or
cmp
sub
sarl
lret
sub
sbb
or
pop
stos
sub
mov
imul
fldcw
leave
add
dec
sub
sub
imul
cld
or
cmp
pop
mov
mov
ret
into
xchg
cmp
je
loopne
shlb
jle
sbb
ret
jae
test
imul
test
sbbb
cmpsb
cwtl
mov
fucomi
sti
lret
imul
xor
cmpsl
iret
adcb
test
xchg
enter
sahf
mov
cmp
or
pop
lcall
test
imul
xchg
jmp
aam
pop
stc
ss
add
sub
repnz
fwait
inc
sbb
stos
or
imul
aas
add
dec
add
ss
rcll
mov
in
imul
or
call
sbb
imul
cltd
jne
jnp
adc
push
mov
ds
sbb
cmp
or
jb
gs
dec
stos
insb
lods
fistl
inc
mov
cmp
sub
push
fsubs
fmull
fistpl
incb
fldt
outsb
jg
mov
clc
jp
jl
jno
dec
mov
pop
stos
dec
pop
mov
imul
fldcw
leave
fstpt
lret
sub
sbb
or
pop
stos
dec
pop
mov
imul
fldcw
leave
fstpt
lgdtl
mov
xlat
mov
jno
mov
xchg
xor
or
cli
repz
loope
cld
jmp
hlt
pop
add
inc
mov
clc
cmp
xchg
xchg
cmp
sub
jmp
test
leave
aas
xor
cli
call
lahf
jg
push
adc
and
test
icebp
pop
out
lcall
stos
divb
cmpl
cmp
mov
jne
out
xor
add
push
inc
jmp
cs
and
or
movsl
and
dec
mov
mov
add
jle
jne
fistpll
data16
popf
lea
lfs
fimull
les
leave
mov
jmp
xlat
inc
xchg
jle
lcall
or
mov
sahf
sub
data16
fwait
sub
int
movq
sti
mov
mov
mov
fcomps
test
dec
mov
xchg
push
add
pop
addr16
test
add
pop
rclb
out
hlt
xchg
jmp
enter
inc
fisttpll
inc
xor
data16
pop
or
mov
xor
push
scas
inc
insl
sub
push
call
mov
mov
push
fucom
lahf
push
jg
mov
sbbb
mov
jle
lret
test
and
push
and
push
stc
rcrl
daa
add
adc
push
add
jo
pusha
cmc
ror
dec
andb
ss
insl
stos
mov
jnp
data16
iret
addr16
add
jmp
fistps
dec
mov
int3
cmp
push
lret
jecxz
and
jo
mov
repnz
out
dec
aaa
push
popa
notl
push
sub
sub
lods
movsl
xlat
and
jnp
fcmove
shr
mov
mov
jmp
push
xor
outsb
add
xchg
out
jnp
call
mov
shlb
int
xor
in
scas
xor
cmc
jbe
mov
jge
mov
je
add
shlb
lock
jo
jnp
mov
jl
bound
jbe
loope
sti
jmp
mov
clc
scas
xchg
xchg
flds
cmp
jne
push
cmp
mov
pop
mov
ret
movsl
inc
sbb
cltd
dec
push
mov
in
push
ret
fnstenv
pop
jne
clc
xchg
int3
cmpsb
mov
movsl
iret
mov
xchg
sbb
xorl
jno
int
inc
cmpsl
lret
mov
faddl
or
jmp
push
nop
andb
sahf
jge
test
outsl
loope
lahf
xor
es
je,pn
mov
addb
scas
movsb
ret
inc
loopne
mov
inc
mov
inc
xchg
addr16
test
adc
cmp
xchg
fsts
data16
pusha
lds
arpl
arpl
xchg
or
dec
shl
dec
test
int3
or
sbb
pusha
sbb
pop
inc
pop
mov
push
push
sbb
lods
cmpsl
xor
mov
mov
loopne
test
testl
pop
std
xchg
inc
fldenv
jo
imull
push
push
push
mov
cmp
insl
jp
imul
xor
push
xorl
into
sbbb
jmp
xor
and
das
mov
out
cwtl
or
jno
outsb
imul
jp
mov
leave
iret
in
negl
in
push
aaa
jmp
mov
cmovbe
dec
jge
dec
out
and
mov
int3
sub
sbb
pop
xor
mov
roll
stos
xchg
xchg
insb
xchg
inc
mov
pushf
or
subl
call
mov
xor
adc
or
mov
cltd
mov
ret
mov
cltd
mov
inc
mov
outsl
stos
inc
push
xchg
inc
sahf
dec
cmpsl
xchg
mov
out
test
jp
push
xchg
mov
xchg
pop
xor
jbe
cli
mov
fsubl
sarb
push
mov
jae
xor
jae
loopne
and
xchg
cwtl
xlat
add
shl
call
ss
jb
jb
lret
fbld
leave
xlat
dec
and
pop
sbb
pop
or
xor
inc
and
xchg
xor
inc
cmpsb
dec
nop
push
outsb
shl
jmp
inc
rcr
sub
push
lcall
loopne
insb
jae
sbb
or
xchg
xor
test
int
in
push
and
sar
mov
je
or
jp
outsb
fbstp
je
rcl
ror
int
lcall
shr
lods
outsb
inc
or
jb
stos
aad
imulb
clc
mov
hlt
fld
ret
stc
test
ret
cmc
mov
popf
mov
mov
lds
test
push
xor
cmp
subl
ficoms
jmp
mov
pushf
das
insb
xchg
xchg
in
mov
mov
sub
pusha
push
aam
dec
sbbl
or
je
dec
lea
out
jnp
or
mov
fistpll
inc
popa
and
enter
jp
lea
sbb
shll
aad
call
fldenv
push
push
jecxz
sbb
mov
out
inc
aad
jle
push
mov
inc
inc
pop
jmp
inc
push
cltd
test
lcall
xchg
fmuls
js
pop
cs
adc
cwtd
xlat
xchg
icebp
ds
addl
mov
lods
sub
and
or
shlb
dec
hlt
idivl
adc
lock
adc
xor
out
aas
fs
xchg
popa
xor
mov
mov
cmovs
jne
fs
adc
jno
cld
test
inc
inc
fsts
insb
inc
scas
fstp
sar
loopne
inc
sbb
or
push
push
and
divb
loopne
imul
in
loop
adc
fidivl
aas
xor
mov
ja
adc
xor
lds
pop
inc
pusha
pusha
or
lret
sub
jae
mov
jg
sub
mov
andl
push
jno
out
outsb
imul
xchg
fbstp
sbb
loop
enter
loope
adc
aad
scas
or
cli
fistps
sub
mov
jge
xchg
jle
mov
lret
clc
movsl
cwtl
jae
sar
nop
inc
cmc
cmpsl
test
mov
dec
sub
or
dec
shl
rcrl
test
pop
dec
in
jmp
data16
testl
add
or
xchg
push
pop
mov
sub
or
aas
lods
and
xor
xor
or
push
negl
dec
inc
inc
jbe
adc
add
lods
dec
mov
es
sbb
pushf
pop
or
jg
mov
mov
xchg
or
hlt
andb
cmp
mov
stos
jle
mov
std
iret
in
pop
inc
inc
rcl
stos
and
cmpsl
and
aam
mov
inc
lcall
cs
xlat
jg
fst
jg
push
xorl
sub
std
js
popf
jne
cld
lods
sub
aaa
jb
shll
out
sbb
test
mov
fyl2xp1
fidivrs
pop
ds
outsl
push
adc
inc
lahf
pop
loop
sbb
add
xor
es
cmp
sbb
aaa
push
scas
pop
mov
cld
fnsave
icebp
mov
push
sub
xchg
add
sahf
data16
fimull
ss
fst
cmp
sbb
jecxz
repnz
jl
loope
dec
push
sub
mov
mov
pusha
clc
jnp
and
das
sub
fnsave
cs
jge
repnz
mov
das
js
mov
dec
les
xchg
and
mov
repz
into
inc
jno
addr16
jmp
push
fnsave
cmp
and
sbb
icebp
or
std
popf
int
dec
jecxz
movsb
insb
xor
dec
ret
fld
lcall
scas
jg
or
pop
ret
testl
push
cmpsl
nop
mov
out
jp
sbb
shll
test
test
cwtl
ret
add
jg
enter
cmp
mov
insl
stos
pop
mov
adc
xchg
cmp
pop
lahf
cmp
mov
fnstcw
cmp
add
mov
xor
sub
movsl
or
sbb
fisubl
sti
sub
xlat
fisttpl
pop
adc
into
or
ret
sub
mov
and
into
popf
sub
lret
in
orl
xlat
jbe
xchg
fidivrl
sbb
pop
and
xchg
mov
jp
xchg
mov
outsb
cltd
dec
iret
icebp
push
or
xor
test
lds
in
mov
and
add
les
insb
cmpsb
mov
dec
shl
fistps
cmpsl
dec
push
mov
mov
dec
mov
stos
pusha
xor
jbe
cwtl
xchg
fsubp
rcr
test
and
pop
mov
jmp
inc
xor
pusha
popf
outsb
adc
imul
fadds
lock
adc
pop
sahf
fmulp
mov
or
loopne
rorl
lods
pop
pushf
add
lock
gs
mov
cltd
xor
push
repz
stos
or
data16
ja
push
pop
bsr
add
dec
es
cmp
mov
mov
jg
inc
je
jle
inc
jb
jbe
lahf
mul
and
cld
xorb
mov
push
mov
stos
xorb
cmp
xor
fistl
push
cmpsb
xor
sbb
jge
and
ret
push
sub
inc
jno
loope
cmp
mov
jns
push
mov
je
xchg
push
cld
add
hlt
push
adc
insl
sti
mov
mov
mov
out
push
fs
inc
das
loopne
fwait
leave
test
js
xchg
loopne
ds
shr
test
fdivrl
nop
rclb
shr
push
loope
fwait
cs
jb
out
push
and
fisubl
mov
leave
mov
dec
mov
inc
sub
adc
nop
fisttpl
stos
mov
push
cmp
cmp
mov
add
or
pop
xorb
sahf
push
leave
incb
push
cmp
shll
jge
addl
sub
scas
mov
pop
aaa
mov
je
jb
popf
in
xor
pop
or
xor
inc
cmp
lahf
xchg
jbe
pop
std
push
cli
or
fistpl
inc
in
mov
mov
in
cmp
aas
mov
mov
or
push
xor
mov
into
mov
inc
outsl
sti
andb
lea
outsl
xor
mov
and
sub
mov
mov
fstpt
out
push
lahf
mov
xor
jecxz
mov
mov
sbb
jo
jle
inc
ret
pushl
decl
dec
xlat
cmp
add
cmpsb
cmp
mov
pop
pop
inc
lret
lcall
xlat
aad
out
xor
pop
jg
sub
mov
push
xchg
shll
scas
cmp
mov
pop
in
sub
enter
add
je
xchg
fmuls
mov
mov
sub
cmp
mov
negb
jae
shll
inc
hlt
pop
lret
test
adcb
inc
dec
pop
jle
clc
sbb
xor
addr16
inc
aaa
bound
sbb
jp
sbb
sub
add
jnp
jno
xchg
pop
in
xchg
mov
cwtl
fwait
into
sti
xlat
or
mov
rcrb
les
je
ret
cs
das
jbe
imul
inc
scas
fistps
mov
push
mov
ds
sbb
jl
out
dec
jp
lods
in
mov
cld
and
and
out
xor
dec
push
je
ret
movsl
push
addr16
mov
pushf
push
sbb
inc
xchg
fst
push
cld
rcrl
mov
sahf
stc
repnz
mov
ret
jne
and
jbe
test
xor
mov
push
pop
movsb
cmp
mov
pop
test
cmp
les
clc
or
lahf
lds
and
push
lret
out
les
out
xchg
sub
call
sub
out
add
mov
test
xor
imul
sti
mov
mov
das
dec
lret
jecxz
rclb
leave
movsl
jle
test
mov
in
mov
cmp
dec
add
push
lahf
fwait
inc
dec
mov
pop
cs
jo
rcr
jo
inc
dec
xchg
lea
pop
push
mov
pop
test
rclb
mov
push
push
fisubrl
inc
lret
ss
pop
mov
jp
cltd
inc
fstl
pop
and
insb
nop
rol
in
aad
jp
xchg
jns
enter
adc
rcl
mov
pushf
scas
outsl
lock
sbb
mov
dec
adc
lods
xor
add
sub
mov
mov
xlat
jecxz
test
js
pop
subl
lea
insb
sub
in
inc
push
lahf
nop
mov
in
dec
xchg
inc
sbb
lods
ja
xlat
into
cmp
in
mov
jmp
sahf
cmp
pushl
pusha
fsubl
std
pop
cmp
pop
push
pop
imul
stos
dec
fnstsw
add
inc
out
or
sub
sbb
loope
cmp
fsubp
fists
mov
inc
jns
adc
add
push
fsts
inc
dec
cmpsb
mov
sub
mov
dec
inc
xchg
add
sub
xchg
and
mov
adc
pop
bound
bound
out
js
sahf
loopne
xlat
push
adc
pop
fcmovu
je
data16
fwait
cltd
jne
fdivl
mov
or
scas
andl
cli
and
outsl
aaa
insb
fcoml
cs
in
imul
shlb
jmp
lea
cwtl
push
aad
mov
xor
in
jl
cmp
cwtl
into
je
fidivrl
aas
fwait
jecxz
or
mov
daa
pop
fisttps
daa
ja
outsl
mov
xor
jl
jns
fs
leave
mov
gs
dec
add
call
daa
fdivr
lcall
push
rcrb
out
addb
cmpsb
leave
ljmp
push
adc
rcl
lea
mov
fidivl
cmpl
xor
ud2
dec
into
mov
xchg
mov
push
jno
fwait
xchg
stos
adc
jae
aam
push
pop
movsl
mov
adc
repz
stc
jp
push
add
sub
xor
fldt
rorb
jmp
mov
xchg
lret
sbb
xchg
stos
mov
scas
xor
jg
out
fidivrl
push
jb
push
aam
aaa
xlat
push
cmp
push
dec
test
sbb
repz
jl
int
xor
incb
push
inc
rol
std
pop
pop
pop
in
sbb
dec
dec
dec
mov
mov
jbe
std
sbb
mov
mov
adc
mov
xchg
sub
cmp
cmpsb
imul
shll
fisubrs
sub
sbb
sbb
dec
popf
out
pop
push
push
xchg
xor
adc
xchg
movsl
xor
sub
scas
loope
shl
stc
fcoml
pop
cwtl
sbb
xorl
and
stos
pop
les
vmread
xor
imul
sbb
jmp
add
movsl
inc
pusha
jmp
push
in
pop
loop
fsubrl
test
cli
insb
or
add
adc
inc
mov
mov
cwtl
pop
dec
sub
arpl
jecxz
dec
mov
add
repnz
pop
push
nop
jno
jae
mov
pop
sbb
mov
movsl
cmpl
adc
insl
xchg
and
insb
mov
int
and
pushf
lcall
sub
or
in
in
xchg
pop
or
mov
fcoms
ficoms
arpl
sub
cmp
xor
adc
sbb
sub
mov
arpl
xor
mov
lret
and
jbe
pop
imul
ja
or
mov
dec
add
xor
jecxz
roll
divl
shll
leave
push
loopne
xor
inc
lds
dec
js
mov
sbb
or
aaa
lahf
rcrl
icebp
cmc
clc
nop
out
adc
lahf
insb
pop
jl
test
into
jmp
into
add
leave
mulb
in
in
int3
es
ret
sub
mov
sbb
sbb
std
xchg
adc
sbb
pop
and
cmpsl
aad
or
insl
xchg
xchg
popa
stos
sbb
mov
fsubr
push
sub
jno
pop
sbb
pop
jle
mov
xor
pop
into
push
cmp
test
cmp
in
mov
mov
dec
mov
fld
add
pop
inc
pushf
add
lea
sbb
mov
or
mov
jmp
mov
adc
fadd
lock
stos
push
clc
fisttps
test
test
insl
or
jp
dec
fwait
hlt
dec
nop
imul
pop
mov
adc
das
inc
ljmp
mov
mov
pop
je
fildl
jg
imul
mov
or
dec
out
popf
adc
mov
shrl
mov
push
push
adc
mov
in
or
push
inc
sarl
cmp
push
fcom
xchg
loope
fiadds
adc
adc
adc
popa
sbb
jbe
cmpl
ret
jmp
add
clc
mov
jns
pop
arpl
sub
sti
insl
mov
inc
cwtl
in
pop
andl
and
inc
clc
les
dec
push
loope
nop
dec
inc
adc
gs
icebp
inc
lret
pop
aam
pop
movb
cmp
pusha
in
sahf
mov
into
add
int3
and
ljmp
push
mov
or
orl
dec
addr16
ljmp
fwait
insl
out
dec
jl
inc
testl
mov
jnp
push
xchg
fdivl
push
in
and
fisubl
push
push
inc
imul
sub
pop
movhps
imul
arpl
test
pop
inc
mov
fistps
mov
mov
push
xor
sub
das
cwtl
mov
lock
sbb
je
mov
lods
mov
popf
hlt
xlat
jge
add
xor
jno
inc
into
rcrb
mov
mov
dec
or
inc
cmp
push
sub
inc
mov
pop
mov
ss
sahf
dec
dec
inc
fldcw
mov
aam
mov
sub
daa
cmc
or
push
popf
push
xor
ret
pushl
push
jb
mov
cltd
stc
dec
push
adc
into
cmp
cmc
in
lods
lahf
xchg
fucomi
pop
jmp
add
es
push
pop
mov
xchg
xchg
pop
jmp
mov
cli
cmpsl
cmp
sub
xchg
jg
ficoml
movsl
jbe
pop
jl
add
xor
mov
pop
xchg
xor
out
arpl
cwtl
mov
xchg
in
popf
pop
mov
sbb
lret
mov
mov
xor
pop
inc
das
movsb
mov
lret
xchg
mov
rcr
nop
pushf
rcrl
jb
sahf
inc
dec
fsub
fildl
out
stos
pop
addr16
push
xchg
icebp
pop
jns
xor
mov
pop
jp
mov
shll
and
lahf
xchg
sub
fwait
mov
js
adc
sahf
mov
pop
push
andb
extrq
jns
mov
stos
in
sbbb
fwait
add
xor
xchg
popa
cmp
out
fwait
add
adc
stos
fsts
mov
dec
bound
adc
lods
mov
adcl
jecxz
je
test
mov
and
inc
ljmp
pop
or
inc
or
rclb
mov
icebp
je
xor
add
cmp
jmp
adc
sub
mov
and
xchg
mov
cmp
sbb
jle
cli
inc
aas
and
loop
fidivl
repz
sarb
pop
push
gs
sbb
mov
xchg
sub
sub
in
js
adc
pop
pop
js
addr16
add
mov
push
pop
fwait
mov
lds
jg
pop
mov
sti
adcl
in
xor
or
imul
das
pop
jo
mov
mov
fiadds
xchg
outsb
adc
test
push
js
enter
ja
aaa
and
lret
adc
sub
dec
dec
mov
insl
lret
xor
pop
cli
scas
lds
adc
adc
cs
mov
daa
xchg
and
and
in
fmull
jns
pushf
cltd
push
mov
loope
imull
jno
mov
push
repnz
xor
stc
clc
cmc
sub
mov
std
nop
je
ss
fisttpll
mov
mov
test
add
xchg
mov
mov
sbb
push
add
inc
xchg
sar
pushl
outsb
xlat
push
and
and
into
push
and
mov
mov
push
movsb
jno
sub
fcoms
test
xor
fwait
sub
dec
and
xchg
pmaddwd
cld
clc
int
xchg
push
or
xchg
lea
fdivrl
cmp
sti
jl
lds
lret
or
ja
dec
cmpsl
xorb
fbld
ret
jmp
jno
sarl
jae
or
outsb
jmp
ret
push
jecxz
in
stos
mov
dec
xchg
mov
enter
push
leave
xchg
std
outsb
incl
lret
xor
loope
pop
cs
jno
inc
adc
fbstp
loopne
cmpsb
xorb
rclb
addr16
xchg
mov
inc
pop
imul
sbb
shlb
scas
fsubl
lcall
dec
in
jge
js
ds
mov
push
inc
cmpsl
cmp
mov
cmp
fwait
in
push
popa
and
fcmovb
std
pop
jecxz
mov
or
es
adc
push
xchg
mov
xchg
test
fs
xchg
rclb
inc
push
imul
shl
popa
xchg
mov
stc
mov
sti
push
mov
pusha
push
cmpsb
shll
inc
inc
clc
push
cmpsl
imul
int3
iret
xchg
mov
fdivl
cmp
adc
scas
roll
add
mov
mov
sub
jb
loop
imul
xchg
jbe
adc
dec
sti
adc
mov
inc
xor
mov
dec
cmc
fdivrl
movsbl
cmc
jo
dec
and
mov
adc
xchg
cmp
ja
pop
repz
cmc
ret
jae
or
lods
aam
mov
push
out
cli
xor
popa
xchg
adc
cmp
sbb
inc
es
sub
mov
ljmp
and
cmp
in
add
jno
lcall
in
sub
fcomps
pop
stc
and
ja
push
adc
jmp
dec
push
inc
popf
pop
stos
pop
mov
scas
jae
repz
or
adc
or
xchg
sbb
pop
out
jnp
outsb
jg
jnp
ljmp
fsub
js
fdivrp
aam
arpl
icebp
add
daa
sbb
or
pop
stos
dec
pop
mov
imul
fldcw
leave
fstpt
lret
sub
sbb
or
pop
stos
dec
pop
mov
imul
fldcw
leave
fstpt
enter
jmp
lcall
dec
pop
mov
outsl
mov
stc
adc
aas
fstps
leave
ret
cmp
sub
ret
or
pop
sub
rcrl
adcl
es
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
adc
pop
dec
aaa
jns
imul
dec
sub
fldenv
mov
cmpsl
jmp
idivl
pop
dec
pop
jns
imul
sub
leave
stc
cmpsl
jmp
idivl
cmc
dec
movsl
jns
imul
addr16
out
xchg
fisttps
mov
mov
pop
dec
cmp
push
filds
lods
cmp
lds
xchg
sahf
push
repz
pusha
sti
push
sti
or
loope
idiv
xor
repz
sub
add
mov
inc
lahf
inc
mov
add
jg
push
test
sbb
sub
cltd
cmpb
cmpsb
outsl
dec
sarb
jge
sbb
mov
addr16
ljmp
sub
fdecstp
inc
out
call
scas
mov
idiv
in
jg
pushf
add
mov
loop
xchg
push
int3
jmp
call
js
sbb
shrb
lods
movsb
es
std
push
jmp
imull
dec
aaa
jns
imul
fstps
jmp
lds
jne
inc
aas
pop
das
cmp
dec
add
xchg
mov
mov
movsl
hlt
test
int3
pop
sbb
inc
jns
ds
daa
adcb
lock
aad
mov
filds
sahf
int3
cmpsb
jnp
imul
jne
or
sub
leave
mov
cmpsl
jmp
idivl
pop
dec
aaa
jns
imul
sub
leave
mov
cmpsl
jmp
idivl
mov
mov
mov
aam
sbb
inc
orb
cwtl
movsb
les
inc
cmpsl
adc
sub
jns
enter
movsl
in
test
or
inc
jmp
cmpb
lcall
bound
outsb
jl
cmp
insb
and
fsts
fistpl
out
cmp
sbb
jae
push
adc
or
cwtl
jno
sbb
adc
lahf
and
adcl
les
movsl
lret
cli
in
inc
mov
jae
sub
fneni(8087
aam
movsb
outsb
es
cli
inc
fwait
dec
test
xchg
ljmp
mov
lock
add
sub
mov
jae
mov
jo
cmp
adc
cmp
movsb
jecxz
mov
lret
xchg
cmp
mov
push
or
pop
xchg
scas
jle
test
stos
jns
sti
daa
push
mov
sbb
repz
out
icebp
popf
cli
xchg
sti
fisttpl
ret
jbe
xor
std
roll
out
dec
aam
add
mov
jp
push
pop
and
cmc
sub
push
add
test
add
sahf
nop
imull
pop
iret
data16
pop
bound
outsl
pushf
sahf
addb
xchg
lods
mov
xor
xorb
lcall
xchg
repnz
pop
cli
dec
subl
cmc
cmp
sarb
push
pop
add
push
sbb
std
inc
and
cmp
ret
pop
int3
imul
dec
ret
or
cli
cmp
jns
or
in
cwtl
jb
jg
inc
std
lea
leave
sarl
int3
lock
push
in
jns
mov
adc
gs
push
movsb
cmpsb
test
mov
jge
imul
leave
test
addr16
mov
mov
daa
test
jl
and
call
inc
popa
add
cmp
das
sbbb
push
inc
adc
jp
sub
inc
icebp
xchg
adc
imul
aam
push
subl
insl
xor
mov
outsb
cltd
push
mov
adc
sub
cmp
adc
lret
mov
sbb
cmc
mov
test
repz
inc
sahf
imul
mov
inc
cmp
or
jg
hlt
xchg
cmp
adc
xor
int3
add
shll
cltd
icebp
sbb
test
imul
xchg
push
or
push
pop
imul
dec
sub
ficompl
xchg
fstpt
sub
xorl
and
and
gs
aad
lcall
lcall
iret
push
and
jp
push
mov
cs
xchg
mov
arpl
mov
sbb
into
or
cmp
mov
int
ret
jo
xchg
scas
adc
jb
int3
sbbb
push
sub
cmp
aam
adc
adcb
push
pop
cmp
xchg
mov
movsb
or
jge
fistl
adc
pop
mov
lods
sub
shll
sub
push
and
add
dec
mov
add
pop
repz
mov
cmpb
ss
or
push
aad
fcompl
fwait
pop
stos
xor
in
arpl
stos
ja
inc
bound
out
data16
jb
jae
in
out
sahf
and
movsb
mov
sub
mov
stos
adc
mov
sub
jle
jnp
mov
mov
mov
push
insl
jnp
mov
xchg
movsl
movsb
out
cmp
repz
cli
jnp
stc
push
scas
leave
adc
aas
jno
jmp
imul
cmp
xor
dec
rol
or
aaa
into
je
mov
push
lea
cltd
cmp
mov
sub
inc
loop
dec
js
fisubl
dec
ljmp
je
cmc
and
jno
xlat
or
dec
stos
cmpsl
push
adc
sbb
add
dec
sbb
in
and
add
mov
dec
or
loop
sub
adc
mov
das
sti
jne
cltd
lret
mov
mov
imull
std
pusha
lock
mov
pop
sbb
enter
adc
jp
pop
mov
sbb
test
cmova
mov
mov
out
cmpsl
jle
cld
std
push
rol
jle
lahf
cmova
cmp
out
xchg
jno
inc
je
mov
gs
pushf
sti
outsb
xlat
je
push
pop
sti
fbld
enter
loop
inc
inc
mov
sbb
cmpsb
scas
lds
pop
jno
jmp
popf
shll
xor
add
aaa
cli
push
enter
aaa
imul
adc
jns
psubsw
xchg
rorb
push
fwait
insl
aas
pop
lcall
out
movsb
mov
mov
and
stc
cli
stc
jbe
xor
cmp
add
push
out
arpl
mov
xor
sbb
pop
xor
mov
push
mov
push
and
insl
push
inc
clc
and
or
sub
call
mov
clc
pop
push
fcomps
xchg
movsb
pop
pop
in
mov
mov
push
push
sbb
and
pop
fbld
pop
push
aas
loop
dec
inc
mov
outsl
pop
in
push
pop
aad
pop
inc
negl
inc
adc
sbb
insl
pop
mov
jns
jl
adc
pushf
adc
sbb
insl
push
jnp
cli
out
cli
mov
cmp
imul
adc
je
rol
pusha
addr16
mov
aaa
movsb
test
stos
pusha
xor
inc
mov
mov
mov
aaa
xchg
pop
dec
inc
and
repnz
mov
leave
iret
push
leave
fsubl
addr16
xchg
ljmp
jae
sarb
pop
lret
xorl
test
xchg
mov
jl
sbb
adc
popa
adc
mov
jns
lret
into
sub
add
gs
inc
adc
enter
loop
pop
xlat
add
sarl
cmp
notb
fdivs
shr
jmp
xor
ret
or
das
inc
mov
adcb
in
push
sub
xchg
push
repz
cltd
stc
adc
es
mov
push
loope
mov
xchg
xchg
xor
jne
and
xchg
ret
xor
int3
aas
int3
rorl
je
push
jae
repnz
xchg
inc
fs
xchg
dec
inc
pop
pusha
jmp
push
inc
xor
dec
jl
popa
fildll
inc
test
repz
adc
inc
or
mov
gs
mov
dec
jmp
mov
fcmovnu
addr16
fisttpll
push
jge
hlt
cli
pushf
push
sahf
cmp
add
lahf
out
dec
pushf
int3
mov
jle
clc
jno
cmpsb
cltd
push
adc
cld
ja
pushf
cmpsl
loop
sub
push
inc
shll
sub
xlat
das
out
cmpl
aad
mov
sbb
xor
push
dec
es
mov
dec
fcomip
fdivs
lcall
adc
in
shlb
jle
lock
test
push
xor
sbb
dec
inc
push
mov
push
push
out
jae
mov
jecxz
mov
loopne
mov
mov
mov
push
sbb
call
pop
mov
sub
jae
es
les
shl
pop
sahf
into
mov
cmpsb
mov
sub
dec
out
rcll
push
ret
push
fldl
mov
inc
fdiv
in
ficomps
and
inc
adc
and
iret
enter
test
mov
jmp
cli
roll
int
lret
stos
dec
jb
stos
in
iret
ficoml
mov
inc
add
adc
and
cmp
test
mov
ds
movsb
lret
outsb
repnz
jnp
loope
ljmp
test
rcrb
dec
dec
mov
mov
daa
scas
and
pop
arpl
stos
adc
inc
adc
or
ljmp
iret
scas
mov
mov
in
testb
add
dec
and
fs
xor
and
mov
and
sbb
ror
sahf
dec
dec
xorl
ret
mov
xchg
in
pushl
mov
out
fwait
adc
adc
icebp
xchg
push
pop
mov
pop
jno
inc
pop
pop
pop
fdivr
sbb
mov
push
push
push
loope
xchg
aas
insb
das
inc
hlt
xchg
jp
push
and
pop
inc
movzbl
mov
or
xor
popa
das
cmp
mov
arpl
je
or
inc
xor
push
cmpsb
pop
or
sbb
aaa
xchg
fistpll
mov
fwait
in
fldt
cltd
mov
push
jg
adc
das
mov
rorl
jp
enter
shrb
mov
mov
cmpl
sub
icebp
and
cwtl
mov
dec
shrl
dec
xchg
outsl
fwait
jno
sbb
mov
fucomi
mov
pop
inc
pop
and
loopne
clc
pop
fnstsw
push
jmp
mov
inc
jo
jmp
push
into
dec
mov
cmp
ljmp
inc
sbb
cmp
dec
adc
pushl
clc
pop
and
adc
xlat
iret
aaa
mov
mov
filds
or
cmc
mov
mov
lahf
xchg
orb
stc
mov
or
jbe
in
int3
call
push
cmp
and
mov
dec
adc
jle
mov
lret
sub
pop
jne
or
repz
lret
and
jno
pop
imul
addl
cmp
fldl
sbb
cmpsb
cmp
scas
xchg
outsb
sub
cmp
sub
ds
sub
dec
mov
lods
out
mov
mov
inc
mov
and
push
push
imul
mov
loopne
das
mov
push
xchg
add
mov
adc
push
rclb
stc
xchg
or
cmp
leave
ret
jb
mov
mov
adc
nop
inc
mov
pop
adc
cli
rclb
mov
add
mov
ret
notl
stos
mov
xchg
rcrl
stos
cmp
and
cmp
xor
inc
repnz
stos
mov
test
ror
mov
int
imul
fsub
mov
lret
and
mov
dec
btr
inc
in
loop
scas
push
xor
sub
xchg
hlt
pop
mov
aas
in
data16
push
dec
call
jns
je
sub
dec
aad
push
sbb
jb
dec
fistpl
lcall
loopne
xor
movsb
pop
add
or
add
jae
inc
pop
push
pushf
mov
ds
scas
sub
mov
add
mov
push
push
pop
sahf
xor
xor
outsl
sub
ret
mov
pop
sbb
aaa
sbb
mov
mov
mov
pop
bt
mov
xlat
imul
int
pop
or
pop
popf
mov
xor
xor
jge
mov
xor
scas
cmp
cltd
add
bound
imul
xchg
daa
xchg
mov
aaa
jl
aas
rolb
and
cwtl
add
cmp
pop
and
lods
cmpsb
into
and
pop
and
andl
aam
arpl
inc
enter
rclb
mov
dec
mov
fldcw
hlt
mov
mov
lea
mov
lahf
jle
mov
xchg
mov
aam
dec
jmp
negl
pop
repnz
loop
aam
jg
mov
out
adc
mov
imul
mov
pushf
loopne
jle
cmp
or
ja
pop
movsl
mov
mov
sbb
daa
bound
rorb
cwtl
xorl
mov
lods
rorl
pop
cmp
fldcw
mov
jp
pop
fnstenv
lods
lods
sar
pushf
pushf
in
jns
testl
fldenv
es
rorl
xchg
gs
cld
je,pt
cmp
sub
repnz
push
adc
pop
mov
cmpsl
xlat
js
dec
lret
inc
dec
push
scas
or
icebp
orl
lock
push
dec
stc
xor
fs
test
cmp
mov
rcrl
mov
pop
add
pop
setb
lds
enter
idivl
mov
dec
mov
inc
in
lods
dec
push
sahf
stos
jo
out
sub
mov
mov
jecxz
nop
pop
shll
cmp
xchg
jl
or
dec
add
leave
je
pop
xchg
mov
mov
leave
test
imul
and
stos
lods
lds
adc
xorl
stos
adc
dec
adc
xor
inc
sarl
and
push
jge
xchg
test
cmp
push
adc
add
out
pop
lret
cmc
lds
mov
push
fsts
ficompl
loopne
jno
sub
mov
mov
enter
shll
push
mov
push
sbb
cmpsb
adc
adc
out
pop
daa
and
incl
cmp
loope
jmp
std
test
loop
mov
pop
xchg
adc
ja
jle
sahf
xorl
pop
shlb
mov
imul
xor
dec
test
cmp
ffreep
bound
lret
sub
clc
test
lds
mov
scas
bound
jmp
es
mov
lock
push
cmpsl
xchg
gs
jmp
xchg
shll
pop
test
gs
adc
cwtl
push
dec
pop
es
mov
rcrl
dec
mov
idivb
push
or
mov
cmp
sub
imul
pop
aad
pusha
addr16
ret
mov
adc
inc
pushf
lock
mov
pop
frstor
ja
add
ss
and
fistl
inc
xchg
lea
jno
std
jge
mov
xor
sbbl
sahf
mov
fnsave
pop
cmpsb
js
inc
movsb
jecxz
es
mov
dec
mov
add
jo
sar
call
pop
pop
loop
icebp
testl
fs
mov
mov
repnz
sbb
mov
adc
in
cmp
ss
jo
mov
pushf
les
jae
inc
pop
cltd
into
stc
rcrl
mov
iret
popf
popa
cmp
cmpsl
sub
cs
cli
xor
mov
push
add
push
lret
ja
adc
sbb
inc
imul
popa
cs
outsb
xchg
cs
pop
je
test
mov
dec
xor
aad
push
jge
addr16
or
mov
pushf
or
xchg
jae
and
pop
scas
pop
lds
stos
daa
pop
imul
jne
xor
pop
ds
icebp
dec
out
cs
and
adc
lods
or
mov
pop
stc
xchg
push
push
vmread
jecxz
xchg
popf
pop
imul
xchg
xchg
shrl
mov
add
mov
jmp
out
pop
or
scas
addps
lds
mov
mov
or
dec
cwtl
dec
das
mov
cmp
push
cmpsl
pop
stos
popf
inc
cmp
test
rclb
mov
loop
test
loop
imull
aad
pop
pop
cmp
out
xchg
dec
sub
inc
or
xchg
stos
inc
test
xor
dec
bound
adc
loope
sbb
jge
xchg
or
add
mov
inc
out
lret
sub
arpl
jbe
jbe
dec
testl
into
sbb
dec
push
icebp
subb
insl
and
adc
pop
in
adc
shlb
jnp
dec
aaa
dec
fiaddl
xor
repz
sub
fs
pusha
cld
pop
jle
je
cmp
sbb
mov
mov
into
sbb
push
cltd
push
cmp
lea
pop
movsl
sbb
stc
rol
arpl
std
imull
xor
dec
cltd
mov
iret
xor
iret
push
std
push
jle
inc
adc
xchg
jmp
push
or
jle
test
fildl
lret
push
incb
mov
insl
mov
xor
dec
cmpsl
pop
pusha
xchg
outsb
insb
icebp
mov
loope
push
cltd
push
xchg
lods
mov
cmc
arpl
mov
aaa
sahf
mov
jb
andl
fiaddl
out
or
pop
outsb
fwait
lret
mov
or
mov
push
jmp
cwtl
pop
aas
push
xchg
stos
inc
ret
loopne
or
mov
aaa
mov
fsubr
sub
mov
loop
popa
cmp
imul
nop
push
and
out
push
add
cmpl
jecxz
jno
cmp
cltd
push
out
fdivl
pop
rorl
mov
lods
faddp
xlat
cmp
sub
in
ret
sarb
xor
mov
jecxz
pop
jl
push
mov
cmpsb
xchg
xor
inc
jno
outsl
pop
andl
jbe
popf
xchg
fdivrs
or
pop
adc
ljmp
lods
jle
test
scas
stos
cmpsb
test
pop
jne
fcomps
inc
lcall
inc
pusha
ret
pop
inc
mov
in
aas
dec
stos
and
push
mov
mov
xchg
pop
sbb
mov
aaa
decl
push
fwait
daa
jecxz
movsl
cmpsl
sbb
fbstp
pop
daa
testl
pop
int3
xorb
fucompp
mov
xor
hlt
xchg
imul
outsl
dec
jecxz
jg
in
inc
fildl
aas
push
push
xchg
rolb
jmp
subb
pop
int3
add
rclb
in
jl
add
enter
mov
adc
dec
fwait
xchg
sti
pop
jo
dec
inc
lods
ljmp
lret
cmc
jns
push
ret
pop
xchg
or
xchg
insb
inc
pop
aaa
xor
dec
jmp
sbb
jmp
adcb
or
iret
aad
cmpsb
dec
mov
push
nop
ss
iret
mov
daa
and
and
lret
jno
cmp
cmp
stos
test
loope
adc
add
cmp
inc
ficoms
mov
sbb
or
lret
lahf
xor
mov
mov
sahf
xor
pop
je
inc
sub
pusha
out
rorl
xor
dec
movsb
mov
xchg
sarl
xchg
addl
xchg
push
dec
jge
jp
pusha
dec
clc
dec
sbb
sub
inc
pop
pusha
sti
or
xchg
and
dec
cmp
xor
outsl
push
insb
push
pop
mov
push
mov
popa
in
fisttpll
or
shll
and
iret
and
cmpsb
jbe
roll
ret
mov
fimull
and
jnp
jmp
mov
pop
xor
mov
pop
xchg
push
xchg
lock
mov
ljmp
stos
mov
and
add
mov
gs
inc
or
push
inc
frndint
stos
inc
sub
cmc
fsubs
sbb
mov
jecxz
test
adc
aaa
aaa
and
mov
popf
push
fs
sub
ljmp
in
in
dec
bound
sarb
test
out
cmpsl
outsl
mov
mov
pop
adc
xchg
lcall
dec
gs
shrb
test
add
mov
mov
cmp
mov
jns
xchg
call
push
loope
jne
adc
clc
call
rclb
xchg
ret
inc
js
adc
out
xchg
fwait
dec
mov
pop
out
mov
ljmp
out
fisubrl
ss
lock
dec
push
popa
inc
cmp
fstpl
enter
push
xor
or
xor
xchg
dec
nop
test
fisttpl
push
out
dec
in
aam
fcom
stc
jle
adc
sub
shlb
sbb
and
add
cmp
ret
leave
pop
inc
push
scas
mov
test
clc
sbb
int
or
jbe
inc
jecxz,pn
push
cmp
mov
inc
nop
adc
cmpsl
adc
dec
adc
and
xor
cmp
add
popf
outsb
stos
push
add
test
push
ljmp
jne
lahf
lods
push
and
pop
push
xchg
pop
test
mov
pop
incb
out
push
push
movsb
mov
jns
rolb
mov
sbb
aas
orb
jo
inc
xchg
dec
lock
xlat
inc
xchg
xchg
jecxz
cmp
arpl
xor
mov
int
xorl
or
outsb
adc
pmaxub
or
hlt
ljmp
out
pop
fsubrs
jb
mov
push
aam
into
pop
es
mov
loopne
pop
mov
mov
cld
push
pop
mov
fxch
push
mov
arpl
jns
out
jnp
addr16
mov
decl
call
pop
outsl
pop
outsb
jmp
sbb
test
pop
push
or
stos
sub
notl
aam
lea
dec
fnstenv
jmp
nop
iret
cltd
xor
std
ja
idiv
sarb
xlat
mov
sub
dec
add
mov
add
mov
test
jl
add
jae
or
mov
shlb
iret
cmp
mov
int3
xchg
adc
fwait
push
mov
cmc
popf
clc
inc
shl
daa
insb
fidivrs
aam
scas
dec
pop
cmpsl
shrl
pop
leave
ja
push
mov
div
mov
ret
rorl
cwtl
out
gs
sbb
and
in
jmp
fmuls
lods
iret
xor
or
cmp
in
or
arpl
rcrb
mov
xchg
je
dec
sub
or
or
je
cmpb
loope
cltd
out
jnp
mov
sarl
call
adc
pop
mov
cmpsb
xchg
fmuls
xor
repnz
xchg
lret
repz
push
movsb
fdivrl
mov
and
leave
mov
jo
sub
jle
mov
xor
int
aaa
test
cmp
lods
in
bound
jne
ret
xchg
mov
lods
cs
imul
inc
inc
es
xor
gs
fbstp
push
pop
add
sbb
leave
pop
or
fs
sahf
outsb
out
in
outsl
pop
cs
enter
cmpsl
adc
xor
xchg
shlb
fstps
rclb
outsl
repz
jbe
in
dec
push
mov
cmc
sti
ds
iret
out
subb
insb
int3
adc
cmpsl
inc
xor
scas
add
fcmovnb
shll
mov
mov
dec
ss
gs
dec
sahf
push
pop
inc
loope
jecxz
sahf
jns
push
shlb
int3
in
inc
ja
mov
dec
sbb
and
frstor
or
rclb
xchg
pop
cmp
ret
imul
sahf
loop
jl
push
iret
xchg
and
xlat
enter
mov
pusha
lds
rcl
cmpsb
inc
mov
cmc
ds
pop
sbb
movsl
xchg
push
mov
push
mov
je
mov
adc
lods
es
das
pop
scas
aam
and
rcrb
daa
outsb
inc
add
push
pop
stc
cmpsb
mov
subb
ja
lret
xor
jbe
xchg
insb
shll
jo
daa
imul
sub
leave
mov
cmpsl
jmp
idivl
pop
dec
aaa
jns
imul
sub
leave
mov
cmpsl
jmp
idivl
aaa
dec
push
jns
push
ja
cmpsl
sub
stc
cmpsl
jmp
idivl
pop
dec
insl
jns
insl
push
sbb
ja
out
xchg
es
sbb
adc
or
push
int3
int3
int3
int3
int3
jl
insb
clc
pop
enter
adc
outsb
loope
cwtl
std
pop
in
jns
pop
int3
dec
mov
or
pop
enter
test
test
mov
in
fs
js
dec
ret
pop
pushf
cmp
jne
inc
rclb
mov
mov
in
iret
pop
xorl
sub
sarb
adc
lods
cmp
ja
mov
xor
mov
lods
mov
idivl
jb
shl
push
fsubrs
cltd
ja
addr16
lds
in
dec
mov
loopne
je
xchg
scas
sti
or
xchg
mov
adc
and
mov
or
xchg
aaa
push
test
cld
or
xchg
mov
aad
adc
mov
sub
loope
shll
lods
lods
ret
push
cld
lock
xchg
sub
inc
sub
xchg
pop
mov
and
sbb
add
popa
adc
add
fcomps
jne
pop
rorl
test
mov
in
hlt
pusha
les
inc
movsb
xor
adc
or
dec
stos
dec
fsts
or
cld
pop
cmpb
test
mov
loopew
adc
cmp
push
test
negb
pop
stos
mov
sub
cmp
outsl
call
clc
xor
mov
cld
push
int3
pop
mov
or
pop
enter
test
mov
cld
push
int3
pop
mov
or
jecxz
aas
ficoml
sub
or
xchg
in
or
mov
dec
jno
push
mov
jecxz
xor
or
in
mov
xchg
dec
orl
lahf
into
xor
psubd
scas
outsl
mov
sbb
test
sbb
or
push
fs
jne
dec
jmp
shr
out
cli
cmp
clc
cltd
imul
fmulp
int
pop
int
xor
xor
xor
sti
pop
add
pop
nop
sub
loop
sub
pop
xor
cmp
inc
out
mov
mov
outsb
in
lret
jle
sbb
or
or
pop
cwtl
mov
sti
dec
mov
push
repz
bound
mov
sarb
and
leave
inc
dec
or
or
icebp
jno
jecxz
pop
ret
shufps
test
sahf
rcll
push
push
insl
fistps
inc
mov
hlt
cmp
insb
jns
inc
dec
pop
in
pop
imul
enter
sub
cmpsb
xchg
jns
add
push
cld
stos
scas
out
aad
aas
ss
dec
adc
mov
por
outsl
imul
aas
xchg
jns
pop
int
inc
insl
inc
jnp
sub
dec
cmp
cmpsl
neg
cmp
mov
push
cs
pusha
mov
cmp
icebp
inc
enter
cmpsl
testl
xor
lods
popf
xchg
cmp
notl
mov
xor
fiaddl
inc
aad
push
lret
repnz
rcrl
jne
add
divl
mov
xor
adc
loop
xchg
cld
fisttpl
xor
jge
inc
faddl
movsl
inc
iret
hlt
iret
sbb
bound
mov
pop
cmpsb
ds
sbb
push
leave
sti
daa
mov
mov
sbb
inc
dec
mov
jae
push
scas
pop
fisttpl
out
es
mov
or
xchg
dec
mov
push
cld
int
pop
push
notl
jo
xchg
out
ljmp
push
aaa
jbe
jb
dec
js
pop
repz
and
mov
pushf
aas
jle
mov
fstpt
add
sti
ret
cmp
mov
push
xchg
sbb
mov
fimuls
or
outsl
int
mov
loop
xchg
dec
inc
mov
repnz
mov
sahf
mov
insb
push
xchg
mov
das
les
cmp
orb
cwtl
dec
js
cmp
lret
out
jl
ds
aaa
inc
hlt
and
mov
add
mov
jno
push
or
xchg
cs
pop
pop
or
xor
xor
scas
dec
and
js
mov
jb
jo
xchg
add
mov
lret
or
sbb
andl
sub
shll
arpl
test
and
xor
cmp
mov
add
stos
pop
imul
ss
fidivrs
and
sbb
adc
adc
mov
stos
or
mov
test
push
sbbl
xor
shrb
sub
in
xor
adcb
mov
sbb
out
int3
cli
lock
xchg
mov
adc
mov
lcall
loopne
mov
mov
and
mov
rol
mov
popf
add
or
subb
push
arpl
repnz
and
leave
int3
cmp
ja
or
ds
gs
or
push
inc
in
push
cmp
das
test
push
dec
adc
xor
push
lds
sha256rnds2
mov
jne
nop
aas
lods
push
mov
mov
pop
int3
insb
out
repz
fisttpll
pop
ffree
or
les
and
leave
add
xchg
cmp
das
pusha
sbbb
inc
sub
fwait
adc
xchg
or
xchg
pop
lds
mov
lret
pushf
loope
mov
xchg
xchg
xchg
shlb
dec
mov
packssdw
mov
xor
adc
cld
or
cmp
mov
jmp
dec
push
mov
cmpl
cmp
movsb
add
sub
pop
sbb
lods
push
mov
adcb
push
add
push
push
fldcw
pop
movsl
jl
dec
je
mov
sbb
or
cwtl
loopne
inc
out
push
inc
jge
into
mov
bound
sbb
sub
push
xlat
add
mov
lea
inc
lcall
lcall
and
mov
mov
test
cmc
rclb
mov
xor
adcl
sub
aad
loope
adc
inc
pop
out
fdivrs
mov
popf
fstps
in
mov
add
inc
or
and
push
test
add
add
shr
cmp
jae
roll
subl
sbb
enter
and
mov
std
add
mov
push
mov
mov
push
jbe
pop
dec
loopew
xchg
testl
call
jno
cmp
stos
push
push
insb
add
pop
movq
pop
ja
imul
fs
inc
and
sbb
mov
dec
mov
je
push
loop
xchg
jle
dec
mov
hlt
push
pop
js
xchg
pop
out
stos
data16
bound
fmuls
and
inc
movsl
jmp
xchg
jmp
cmp
jns
mov
ds
and
loop
andl
mov
and
pmullw
jmp
jp
pop
fisttpll
rolb
std
cltd
out
sti
call
or
mov
mov
dec
lret
sub
push
jecxz
cmp
mov
dec
aaa
jecxz
adc
mov
push
fsubl
int3
xchg
xchg
sbb
imul
mov
mov
insb
fwait
mov
fstpl
insb
pushf
out
call
xor
movb
sub
loopne
rolb
lock
stos
in
test
lods
or
push
lahf
jge
and
loope
ss
in
dec
mov
adc
std
pop
data16
xchg
cmpsb
fadds
pop
filds
pop
and
mov
lea
or
ficomps
xor
fisttpl
jecxz
mov
cs
cmp
js
cld
pop
mov
sti
cmp
clc
mov
or
iret
push
jp
lret
pop
and
ret
fldl
jno
sub
pop
subb
cmp
push
mov
lods
movsb
movsl
mov
aas
cltd
ss
in
cmpsb
add
aam
subl
fdivl
pop
cmp
ds
cli
push
shll
push
dec
mov
cmp
sub
mov
les
xchg
lea
int
scas
mov
xor
lods
add
cmpsl
cmp
out
gs
ret
ja
lret
movsl
mov
out
add
xlat
add
es
mov
or
mov
test
push
cmpsl
aad
in
jmp
outsl
sti
and
scas
dec
ja
mov
mov
mov
subb
push
mov
sub
xchg
test
mov
add
lods
ljmp
jae
jbe
test
repnz
sbb
scas
bound
or
sub
xchg
jno
and
and
shll
inc
outsb
xchg
enter
jle
xchg
sbb
aam
push
out
dec
and
cmp
andb
bound
loope
push
add
pop
aad
pcmpeqb
sbb
add
sbb
lahf
out
fisttpl
xchg
push
clc
shlb
out
mov
shlb
adc
cltd
inc
dec
ret
outsl
fnstenv
fsubrs
ret
inc
pop
xchg
xchg
ret
sbb
inc
mov
mov
popa
inc
rcrb
arpl
push
notl
bound
add
xchg
shlb
test
mov
fucom
fdivr
push
pushf
pop
mov
mov
xchg
fbld
fucom
lods
and
push
frndint
rcrb
and
or
repz
rcrl
jo
xchg
mov
adc
xchg
rclb
repz
sub
push
aas
loop
sub
shrl
jnp
insb
ret
adcb
fbld
xlat
jbe
dec
pusha
jbe
jbe
sbb
cmpsl
fldl
jecxz
inc
inc
mov
push
sub
fwait
ljmp
dec
dec
jmp
xchg
mov
xor
sub
fucomi
pop
push
dec
scas
jg
adc
nop
xchg
std
lret
das
lods
sub
movsb
aaa
cmp
fwait
pop
jmp
and
jecxz
rorb
sti
or
mov
pop
add
cmp
negb
xchg
stos
sbb
pop
push
dec
js
mov
fldcw
sub
loopne
xchg
aad
inc
inc
jle
inc
jne
jb
les
push
jbe
and
dec
mov
hlt
cmpsl
dec
in
xor
or
xor
cmpl
xchg
insl
les
sub
dec
inc
dec
iret
push
jp
and
enter
jbe
cmp
aas
xchg
lahf
js
cmp
xchg
std
and
sahf
or
int
xchg
inc
add
adc
subl
fimull
mov
rorl
sti
lods
pop
cmc
cmpsl
pop
xor
rolb
xchg
dec
out
out
orl
imul
dec
xchg
gs
cmp
jnp
aaa
shrb
and
mulb
call
into
loope
icebp
sbb
dec
stos
add
and
test
add
mov
movsl
inc
sbb
loope
add
lret
iret
xor
pop
fsubp
or
out
repz
popf
insl
jle
inc
out
xor
loope
movl
mov
pop
cmp
aaa
shlb
cmp
adc
jo
fwait
mov
sub
aam
gs
cmpsb
rorb
movsb
mov
int3
jge
add
fidivl
orl
inc
popa
repz
jns
hlt
push
push
in
pop
inc
aas
cmp
leave
andl
mov
test
je
clc
xor
into
movsl
pop
push
cmpsl
fisubs
inc
test
and
cwtl
pop
mov
pop
loop
outsb
mov
ret
and
jb
mov
xchg
jne
jmp
push
into
fadds
push
scas
jp
sbb
cmp
ficoml
inc
data16
jo,pt
cmp
jbe
cmpsl
xchg
push
inc
sbb
int
adc
mov
cmp
imulb
lret
je
cmc
xor
push
aam
xchg
adc
cltd
mov
push
push
adc
mov
and
xorl
dec
xor
sbb
xor
mov
rclb
dec
xchg
mov
jo
dec
pop
rolb
fstpl
mov
mov
and
xchg
dec
mov
outsl
test
add
hlt
ljmp
mov
mov
sarb
out
mov
rolb
in
insb
aas
dec
inc
sub
add
xchg
bound
flds
iret
gs
sbb
jnp
inc
cli
scas
cmp
or
mov
pop
in
add
jmp
sub
imul
xchg
in
push
dec
jge
xchg
pop
inc
cmpsl
sub
lcall
jecxz
orl
or
lret
mov
ret
push
mov
dec
je
push
mov
bound
pusha
add
testb
or
pop
xor
hlt
testb
stos
jne
inc
pop
icebp
clc
xor
pop
adc
sub
sub
add
test
xchg
sti
pop
xchg
hlt
push
xchg
push
lods
lahf
mov
out
xchg
mov
dec
cmp
stc
insl
nop
pusha
loope
adc
dec
adc
pop
or
call
cmp
les
std
push
mov
fwait
and
sub
mov
pop
cltd
int
addl
mov
mov
aad
jmp
das
clc
cmp
cli
mov
push
push
fdivr
pop
aas
clc
sahf
cmp
mov
in
fdivrs
lahf
pop
lods
pop
stc
popf
inc
or
sub
into
xor
dec
mov
repnz
leave
pop
lcall
dec
or
fists
push
mov
into
xor
dec
jle
iret
cwtl
outsb
out
stos
int
mov
mov
add
push
hlt
dec
pop
xor
popf
mov
jae
in
mov
bound
mov
mov
sub
push
push
sbb
out
int3
test
dec
cmpsb
adc
lds
xchg
mov
pop
cmp
add
lret
mov
mov
repz
mov
mov
pop
xor
adc
push
mov
into
dec
push
mov
jns
push
xchg
mov
and
adcb
xor
jecxz
rol
in
jge
gs
sub
imulb
pusha
cmp
popf
popa
xchg
outsb
into
cmpsl
sarb
nop
add
xchg
mov
shrl
or
in
loopne
pop
mov
into
jp
rolb
sbb
int3
shrl
test
aaa
mov
inc
aad
js
sbb
mov
and
sbb
fs
mov
mov
add
adc
aas
adc
ret
rcrb
add
mov
inc
cld
inc
push
test
dec
push
fs
add
mov
imul
popa
popf
arpl
or
test
pop
jg
mov
inc
negl
dec
gs
imul
scas
int3
outsb
mov
inc
in
in
jbe
testl
lahf
jge
cli
sbb
mov
gs
push
sbbb
jg
or
sbb
jnp
lods
repz
xchg
mov
movsb
jb
add
fstpl
push
pop
imul
xor
and
mov
sti
mov
les
popf
xchg
in
sub
xor
in
mov
dec
aad
inc
pop
out
mov
sbb
arpl
repnz
mov
push
jno
movsb
pushf
adc
jl
pop
xchg
pop
ret
cmpsl
xor
fsubp
popf
push
push
adc
jmp
adc
mov
bound
in
sub
mov
cld
inc
rclb
and
mov
stc
lock
pop
push
mov
jmp
dec
enter
cmp
mov
bound
shll
cmp
cltd
dec
test
adc
inc
lahf
adc
out
in
sub
lret
sbb
das
sbb
push
jnp
xchg
xchg
sbb
loopne
cmp
pop
xchg
cli
mov
or
sub
out
xchg
pop
push
loopne,pn
sub
test
push
cs
stc
outsb
insl
and
cs
xchg
nop
pop
inc
test
data16
xchg
pop
cmp
out
rorl
repnz
mov
xlat
fwait
std
mov
scas
xor
fcom
dec
or
insl
adc
ss
pop
dec
jae
cli
dec
movsb
sbb
popw
xor
es
push
in
mov
add
sub
or
xchg
push
les
mov
cwtl
mov
sbbb
inc
out
leave
dec
decl
jnp
out
aas
dec
mov
cmc
push
or
sbb
repz
cwtl
jae
cli
outsl
cmp
subl
or
mov
jne
out
mov
ret
push
shll
scas
nop
push
push
push
mov
mov
lds
call
mov
xchg
and
pop
xchg
pop
xchg
push
scas
scas
push
xchg
cmp
mov
pop
ficoml
and
subl
js
mov
test
in
xor
js
pop
negb
lods
lret
and
aad
ds
add
jecxz
lea
ds
xlat
fistps
pop
or
sub
loop
sti
mov
dec
dec
jp
test
std
mov
out
ja
mov
pop
es
lds
fdivl
push
or
dec
rorl
lds
cmp
pop
addr16
pop
iret
test
jle
pop
js
xchg
mov
jmp
and
add
and
rcrb
lods
fcmovb
inc
cmp
shl
test
dec
lods
aaa
pop
ds
pushl
pop
mov
jl
pop
decl
jb
iret
sub
xchg
jnp
popf
push
lret
add
bound
sub
adc
rol
dec
jo
mov
in
daa
addr16
sub
inc
push
int
cmp
sub
add
sbb
pop
jnp
scas
cmpsb
adc
test
stos
adc
xchg
sbb
sub
jnp
cs
sub
stos
and
aad
xor
xchg
xchg
mov
pop
mov
inc
loopne
fwait
add
xor
cmp
sbb
lock
jbe
inc
imul
sbb
mov
ficompl
xor
inc
pop
cmpb
or
rclb
mov
js
test
mov
fs
jge
adc
jbe
cmp
xchg
pop
mov
push
jle
lods
push
addl
ret
ret
xchg
pop
mov
in
mov
mov
ja
xor
or
repnz
lds
cmovb
iret
xor
mov
mov
pop
mov
hlt
xchg
and
push
add
xor
es
hlt
xlat
cwtl
iret
mov
inc
lret
in
and
fsts
sahf
jbe
rorl
xor
insb
jo
jnp
lahf
push
pop
inc
pusha
sub
mov
cmpsb
pushf
insb
nop
add
cmp
push
pop
fs
sarb
aas
push
pop
fs
mov
scas
lret
clc
inc
or
fucomip
jne
jecxz
cli
xchg
jbe
insb
inc
bnd
jecxz
sbb
ds
adc
mov
and
ret
lock
and
xchg
dec
in
dec
fdivs
fs
pop
lds
push
fiadds
jae
xchg
jbe
push
movsl
sbb
fsubrl
or
es
dec
sbb
insb
mov
and
mov
mov
sbb
push
arpl
shrl
xchg
sub
mov
mov
and
dec
imul
aad
pop
sub
xchg
or
xor
jae
add
outsl
inc
int
pushf
leave
out
mov
lret
movsb
inc
xchg
jae
push
mov
mov
pop
out
mov
daa
pop
xchg
in
rcll
add
aam
inc
push
ss
shl
imul
cmpsl
ss
out
cwtl
or
jae
gs
mov
pusha
cli
cs
mov
mov
or
jne
fsubs
shrl
out
aaa
push
and
push
inc
xchg
lcall
loopne
lea
bound
xchg
jbe
pop
sbb
sub
repz
fcmovne
mov
lock
dec
adc
data16
add
push
icebp
and
pop
lret
push
sub
push
cmp
xchg
out
int3
pop
dec
add
ljmp
add
dec
sbb
ja
sbb
cmp
dec
push
leave
fld
or
cmpsl
jb
faddl
mov
adc
loopne
lcall
les
outsb
push
inc
bound
loop
cltd
and
scas
ret
mov
xor
mov
jg
jg
jp
inc
jns
shl
jle
mov
cmpsl
lret
cmc
cmc
or
mov
sub
adc
inc
jl
lcall
lods
jns
mov
lret
push
push
cmp
mov
fdiv
sub
movl
fmulp
in
shl
js
fcompl
outsl
xchg
pop
andl
stos
xchg
xchg
arpl
and
inc
mov
stos
scas
sar
adcb
mov
test
push
pop
fcmovne
or
add
mov
add
shl
pop
arpl
inc
mov
mov
add
icebp
jae
es
fcoml
data16
push
mulb
aam
js
das
sub
sub
dec
pop
mov
add
sar
arpl
scas
adc
add
sub
jo
sbb
mov
outsb
mov
dec
sbb
cs
mov
out
and
incb
nop
aam
bound
subl
lods
or
and
xor
shl
inc
loope
jae
ret
inc
xlat
inc
pop
sbb
pop
or
pop
scas
pop
pop
icebp
sbb
jo
sahf
inc
lods
stos
cmp
adc
mov
xchg
lret
pop
add
xor
jp
mov
mov
nop
push
les
jp
in
lret
or
xor
and
lret
stc
rolb
out
push
gs
or
and
push
sub
in
mov
pop
pop
add
and
movsw
dec
jle
ret
into
lcall
jbe
xchg
inc
adc
sub
decl
sbb
mov
dec
and
outsl
mov
mov
cmp
lcall
stos
mov
sarb
inc
sbb
mov
icebp
inc
aaa
inc
and
jnp
pushl
sub
sbb
mov
in
mov
mov
xlat
push
or
adc
jae
dec
xchg
mov
xchg
and
scas
fcomi
pop
jg
hlt
cmp
mov
fwait
fld1
pop
sbb
cli
xor
adcb
fwait
das
jns
xor
enter
jo
mov
test
pop
imul
mov
push
mov
cmp
lock
xchg
sbb
pop
test
fstpt
pop
push
inc
xor
cmc
inc
pop
movsb
das
xchg
xor
jge
int3
icebp
push
loop
addr16
sbb
xor
scas
inc
aad
insl
mov
xchg
add
rcl
jg
mov
popf
and
es
out
inc
imull
pop
push
dec
adc
or
sub
mov
add
insb
pop
stos
or
adc
daa
stc
movsb
je
xor
sub
sahf
jp
xor
sub
fsubl
mov
scas
xor
inc
in
and
fldl
dec
pop
mov
incl
adc
gs
mov
adc
mov
mov
push
sbb
sub
xchg
mov
mov
mov
mov
add
cmc
xor
lock
repnz
pop
push
sbb
lds
push
sbb
mov
es
pop
pop
cld
out
arpl
sub
test
dec
stos
adc
es
addr16
stos
enter
in
mov
das
fsubs
rcrl
jns
mov
cmp
test
mov
sahf
dec
cwtl
in
data16
mov
jmp
sarb
cmpsb
dec
movsl
add
test
cmp
inc
dec
adc
dec
lods
mov
int3
ljmp
dec
mov
xchg
movsl
repz
cmp
pushf
stos
sti
ljmp
mov
data16
cmp
nopl
nop
mov
aam
pop
repnz
jo
pop
mov
ss
sub
out
jmp
adc
sub
gs
and
test
daa
bound
dec
outsl
or
dec
xor
imul
les
and
or
lods
insl
cmpsb
adc
mov
jnp
idivl
and
sarb
ds
repnz
cmp
lods
and
std
dec
push
and
dec
popf
push
fidivrl
cld
ret
ss
hlt
repnz
push
enter
test
mov
cld
push
int3
pop
mov
or
pop
enter
test
mov
cld
push
int3
pop
mov
or
pop
enter
test
mov
cld
push
int3
pop
mov
or
sbb
in
outsb
cld
pop
int3
dec
fdivrs
test
mov
add
shlb
int3
das
lret
mov
jae
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
push
call
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
dec
push
jp
dec
jl
shll
inc
sub
sbb
movsb
in
lret
mov
mov
jp
dec
jl
or
sbb
sub
cmp
int3
ljmp
dec
pushf
mov
dec
push
jp
dec
jl
or
sbb
sub
cmp
int3
ljmp
mov
repz
ftst
shr
adc
cmp
insb
and
pop
lds
xchg
aas
daa
add
add
stos
std
add
repnz
sbb
sub
rolb
rcll
sahf
pop
add
jae
popf
jae
mov
lret
sbb
push
ja
and
pop
xchg
imul
in
xchg
cmp
fdivrl
mov
pop
push
bound
mov
cmp
adc
xchg
cmp
faddl
mov
mov
adc
mov
jns
and
mov
arpl
mov
mov
sbb
sub
repnz
sti
sub
adc
aam
fsubrl
cmp
subb
insb
dec
jl
or
sbb
sub
cmp
int3
ljmp
mov
mov
cmp
dec
outsb
push
dec
dec
ds
int3
xchg
mov
scas
jmp
cli
aam
pop
or
adc
inc
pop
jbe
arpl
test
cltd
cld
mov
rcr
cmc
sub
pop
xor
cmp
aas
inc
add
cmp
cmp
int3
ljmp
mov
mov
jp
dec
jl
or
sbb
sub
cmp
int3
ljmp
mov
mov
adc
cmpsl
push
cwtl
repnz
mov
mov
dec
mov
sub
push
xor
pop
mov
sti
inc
mov
xor
fwait
and
ds
aaa
fsubl
xchg
push
lds
push
data16
xor
push
dec
je
mov
cmpsl
test
rclb
inc
and
jp
inc
in
sbb
inc
adc
add
imul
insl
mov
adc
mov
pushf
call
cli
shll
dec
xor
xchg
arpl
jl
test
or
dec
jge
lahf
shrl
in
push
push
xchg
aad
shl
jp
mov
sub
clc
sbb
mov
enter
into
xlat
jg
int
pop
sti
test
xchg
mov
inc
dec
mov
inc
xor
fisubs
dec
out
scas
sub
ficomps
fcoml
pop
fstp
inc
ret
lret
jge
push
lods
fdivrs
xor
push
leave
iret
and
ret
jl
xor
xchg
aad
dec
das
mov
adc
lods
fs
pop
xor
fninit
inc
pushf
mov
hlt
je
rclb
adc
xchg
ss
mov
arpl
xlat
dec
and
outsl
adc
scas
loope
mov
mov
adc
pop
sub
aas
cwtl
push
xchg
int3
dec
clc
lods
sbb
cmpb
pushf
call
or
push
push
push
jg
in
mov
sub
jg
cmp
jl
stc
xlat
mov
add
mov
jno
out
cli
jl
cmp
xchg
push
dec
cs
inc
xchg
test
mov
int3
cmp
mov
xchg
push
mov
or
test
sub
sub
decl
js
adc
push
mov
and
jne
hlt
loopne
add
sub
xor
jns
imul
mov
mov
lcall
int
fmull
xor
sub
nop
mov
cld
cwtl
mov
pushf
ljmp
sti
shl
insl
xchg
sub
xor
push
test
mov
pop
push
mov
xor
imul
test
dec
movsb
cld
or
mov
add
sar
out
movsb
jae
xchg
adc
inc
dec
xchg
pop
cwtl
jns
fistps
push
outsl
repz
test
adc
rcll
out
clc
daa
mov
lods
popa
sti
and
pop
xchg
mov
pop
and
pop
jns
push
or
iret
push
in
dec
fcoml
and
int
cmc
stos
jmp
dec
add
cmp
divb
inc
stos
jle
sub
and
xchg
scas
in
xor
insb
sbb
xor
es
pop
xor
sbb
gs
pushf
xchg
mov
sbb
js
xlat
out
dec
and
out
cmp
into
rclb
mov
dec
sahf
add
mov
cmp
fsubrs
mov
fs
das
pop
mov
fs
ss
jns
popa
ja
and
and
mov
in
mov
mov
rcl
push
cmpsl
xchg
sbb
sub
test
mov
xor
repnz
cmp
pop
ret
xchg
xlat
pop
dec
jb
addr16
and
adcl
cmc
iret
xchg
inc
inc
movsl
push
mov
add
mov
js
xchg
pop
xchg
mov
inc
push
mov
cmpsb
sub
add
mov
mov
iret
xor
repz
cmp
or
hlt
inc
loop
push
cld
pop
pop
push
pop
pop
xchg
je
aas
insb
in
repnz
aad
mov
cltd
stos
popf
outsb
push
mov
xchg
lret
or
lds
adc
pop
mov
test
lret
xlat
addb
movsl
pop
popf
into
lahf
xorl
aaa
lret
pop
inc
or
ret
push
add
xchg
jmp
dec
jg
mov
jne
and
push
xor
jne
stos
dec
cmp
mov
sub
test
es
adc
out
cld
out
mov
cmp
cwtl
fistps
cs
int3
push
test
xchg
loop
and
dec
adc
jecxz
fnstcw
mov
scas
aaa
clc
popf
sbb
dec
adc
cli
fildl
sbb
push
and
call
dec
loop
sbb
aaa
xchg
jns
push
stos
das
inc
sbb
outsb
ja
inc
xchg
test
pop
and
push
test
gs
ret
es
fs
pop
add
aad
cbtw
imul
pop
mov
cmp
shr
test
fs
lods
pop
ja
mov
mov
dec
pop
stc
xor
aaa
push
fisubs
cmpb
or
or
pusha
test
mov
jae
and
int3
sub
lock
sti
jno
negb
jbe
pop
std
gs
lds
sub
pop
popa
dec
das
cmp
es
aam
in
inc
inc
jle
loopne
stc
cltd
scas
in
sub
inc
fcompp
dec
out
inc
and
sbb
cmp
or
add
lds
int
andb
push
out
add
ret
rcll
ret
loopne
push
out
enter
mov
sbb
mov
mov
add
aas
out
scas
je
push
jbe
xchg
ss
js
mov
shll
jo
dec
pop
cmp
xchg
adc
lods
stos
push
into
dec
xchg
mov
jp
and
cli
dec
daa
fsts
loop
aaa
fs
insl
popa
xchg
sbb
outsb
loopne
cmpsl
scas
push
testb
xor
sbb
lcall
rcrl
adc
push
inc
adc
xchg
or
shlb
push
push
xor
push
repnz
imul
fisubl
call
pushf
or
out
mov
sub
adc
pop
dec
es
lods
cli
adc
loopne
sub
mov
sub
int3
sub
test
lods
jo
popa
insl
movsb
push
cmpsb
popa
and
je
mov
mov
push
mov
repnz
cmp
mov
push
popa
xchg
fs
mov
or
shlb
inc
out
loop
mov
psllq
test
gs
push
out
jmp
inc
add
xor
mov
jp
jae
sbb
dec
rorl
mov
xor
pop
adcb
mov
sub
icebp
inc
inc
dec
lds
cmc
clc
std
inc
aaa
mov
cs
adc
jbe
pusha
es
cmp
mov
int
ficompl
push
fists
cmp
mov
jo
mov
push
jno
int3
cmp
dec
nop
aad
pop
insl
loopne
pop
shlb
loopne
xchg
mov
fs
pop
cmp
or
and
outsl
lea
mov
mov
shld
out
xor
in
xor
and
lds
xchg
sub
popf
sub
and
dec
outsl
sbb
adc
movsb
adc
out
jecxz
mov
or
dec
in
scas
enter
repz
call
push
inc
dec
in
adc
jmp
aas
gs
int3
outsb
mov
test
jno
pusha
adcl
icebp
xchg
inc
add
inc
pop
test
xrelease
sbb
insl
inc
jecxz
popa
imul
inc
insl
test
cmp
xor
mov
pusha
call
mov
in
outsl
cwtl
shlb
push
or
lods
xchg
call
or
leave
dec
negb
out
mov
and
out
lds
xor
mov
inc
mov
jecxz
and
mov
jns
xchg
loope
push
adc
andl
mov
mov
arpl
fildl
dec
cmp
sbb
cmp
adc
fs
out
sti
iret
mov
shrb
scas
mov
fisubl
mov
xchg
lods
sub
stc
mov
inc
or
pusha
sbb
sbb
sarl
dec
repnz
in
sahf
jecxz
cmp
dec
mov
inc
pop
sub
mov
neg
xchg
xor
mov
mov
test
je
mov
ss
mov
cmp
test
fs
xchg
add
enter
dec
mov
cmp
cwtl
insb
or
ja
in
cmp
mov
adc
add
or
pusha
inc
scas
ret
add
outsb
jns
out
sbbl
jb
pop
cmp
push
ja
shrb
into
call
stc
and
mov
xor
jp
dec
dec
mov
and
nop
mulb
xchg
orl
sub
jne
or
adc
jb
push
test
fnsave
insl
xchg
ja
xor
jae
mov
std
sarl
fidivl
sbb
adc
loopne
fmull
repz
pop
pop
cwtl
adc
cmp
test
pop
add
mov
int3
into
and
aam
or
int3
or
adc
testb
fs
inc
sub
les
stos
mov
and
inc
dec
dec
addr16
popa
mov
mov
mov
jae
mov
adc
stos
push
in
inc
inc
gs
int3
lds
cs
clc
xor
in
or
add
call
test
movsb
jno
insb
lea
jns
and
mov
mov
aas
push
fistpll
cmp
clc
lock
push
mov
or
sub
in
pop
push
pop
pop
pop
jns
nop
int
inc
push
rol
sbb
xlat
mov
sbb
push
cmp
mov
fwait
pop
data16
outsl
fwait
cld
imul
jns
movsb
sub
mov
loope
xchg
mov
hlt
inc
mov
lahf
jb
aas
fcomip
insl
adc
neg
inc
mov
pop
fwait
dec
and
shrl
popa
adc
popa
cmp
roll
inc
outsb
popl
ds
and
push
dec
imul
cmp
addr16
test
arpl
test
cwtl
sub
ret
mov
lock
xchg
addr16
xchg
jae
lret
arpl
popf
stc
std
rcl
sarb
sub
mov
add
pushf
cmpsl
imul
sub
cmp
inc
or
stos
push
and
cli
into
sub
sbb
test
loope
stc
sbb
fistpll
pop
inc
jns
lods
sub
pop
jae
lods
pop
push
outsl
mov
lahf
and
rorl
and
mov
nop
xchg
and
fistpll
jo
das
dec
mov
leave
scas
mov
xchg
push
xor
push
pop
jo
add
cmpsl
data16
adc
test
std
add
mov
mov
cvtpi2ps
fcomp
pop
pop
push
cltd
fimull
dec
xchg
mov
xor
std
mov
mov
jp
cmp
outsb
loopne
pop
movsl
in
mov
push
lods
adcb
nop
insl
pop
fnstenv
das
imul
add
movsl
leave
movsl
jmp
pop
sbb
rorl
imul
sbb
dec
jmp
fcomp
xor
dec
hlt
repz
and
pop
xchg
xchg
jmp
jb
xor
fwait
sub
loope
movb
movsb
in
pop
sub
testb
bound
fwait
sti
int
cmpsb
mov
jnp
gs
scas
lahf
jb
mov
jl
and
mov
sahf
jns
sub
push
xor
out
int
fildl
dec
cmc
mov
loopne
xor
mov
mov
pop
dec
je
adc
push
mov
jo
adc
sbb
cmp
push
xchg
sub
xabort
push
cmpsb
inc
fcoml
jne
stos
ds
dec
mov
fidivl
mov
xor
mov
adc
inc
sti
imul
adc
in
push
mov
aaa
iret
daa
cmp
ror
push
daa
adc
add
push
ret
push
loope
mov
push
les
dec
imul
fisttpll
push
sub
jne
leave
loop
jg
gs
pop
cli
mov
pop
push
jg
inc
enter
or
fs
sbb
outsb
fnstcw
adc
mov
outsl
mov
mov
jg
test
stc
es
scas
and
test
add
icebp
lahf
cmp
les
jb
sub
inc
dec
jl
xor
loopne
idivb
mov
out
test
jae
movsl
int3
jl
int
ret
ss
add
pop
fmuls
roll
rsm
mov
in
or
cmpb
xchg
ljmp
sti
rcl
sbb
xchg
in
fidivrs
in
pop
les
leave
xor
dec
adc
shl
push
mov
mov
mov
sbb
neg
dec
or
push
inc
shrb
xchg
rclb
clc
cltd
sbb
in
fnstenv
add
mov
xor
push
scas
xorb
and
xor
imul
mov
lret
in
cltd
lret
rcl
dec
dec
add
lcall
mov
jnp
test
lret
and
pop
adc
mov
in
fnstcw
std
iret
fwait
mov
pop
fbld
je
mov
sub
flds
add
sub
and
sub
inc
arpl
cld
repnz
mov
jmp
lods
std
jbe
mov
orb
fwait
dec
adc
jmp
iret
xchg
xchg
adc
or
fistl
and
sub
cmp
xchg
jl
mov
in
jg
cmc
out
cli
mov
clc
xor
in
in
repnz
sub
add
pop
rorl
cwtl
inc
out
movl
in
data16
mov
ret
sub
test
pop
jbe
scas
test
sbb
push
lret
push
mov
dec
ljmp
push
jg
dec
sahf
push
mov
hlt
xchg
data16
data16
or
mov
sbb
and
jnp
imul
push
mov
push
paddusw
sahf
test
arpl
test
dec
mov
xor
in
pop
mov
in
xor
lods
xchg
scas
jns
jne
push
push
test
and
pop
rclb
pop
sahf
std
stc
and
loopne
insb
cmp
adc
gs
push
dec
lret
and
dec
lds
ss
movsb
inc
pop
loop
xchg
add
call
cmpxchg
dec
lcall
push
test
add
rolb
lods
pusha
push
icebp
cmp
call
outsl
lahf
dec
cmp
mov
xor
dec
rcll
shrb
inc
pop
outsl
popa
lea
xchg
data16
out
and
add
sbb
jbe
cltd
inc
data16
lcall
or
pop
jb
xchg
or
mov
cmp
test
xchg
jg
les
mov
sub
lods
push
sub
push
mov
repnz
xor
shl
pop
jnp
cwtl
pop
dec
jle
pop
cli
dec
pop
imul
xor
cltd
xor
sbb
out
push
or
idiv
test
sbb
or
mov
inc
push
int3
inc
add
repz
insb
fldcw
subl
xorb
mov
jb
jp
push
iret
xchg
xchg
xchg
testb
stos
sbb
fst
mov
stos
in
adc
adc
inc
out
cmpsl
and
decb
cmpsl
adc
les
addr16
fcompl
adc
cmp
aas
pop
sarb
enter
insl
add
xchg
sub
or
xchg
adc
dec
xor
mov
lds
jp
inc
push
in
lds
je
aad
jns
and
jle
cmc
adc
mov
inc
inc
xchg
clc
ror
test
mov
and
pop
imul
pusha
insl
mov
dec
or
adc
mov
imul
mov
sbb
cwtl
xor
shr
push
xchg
pushf
outsl
in
or
data16
in
test
shl
scas
mov
mov
lcall
mov
cmp
sub
inc
add
dec
hlt
sbb
dec
ja
or
stos
adc
movl
ficoms
mov
lcall
sbb
mov
push
cmpsl
or
xlat
add
in
leave
jg
sti
push
add
mov
sbb
andl
out
dec
add
inc
mov
xor
push
mov
inc
mov
sub
xor
loopne
jno
sbb
das
iret
imul
and
lahf
mov
sbbl
call
outsb
mov
push
dec
and
pop
sbb
push
jl
xchg
xor
add
int3
mov
sti
mov
jne
mov
lahf
xchg
stos
jecxz
and
pop
jno,pn
imulb
mov
jno
cmp
call
fnstcw
insb
lcall
mov
call
or
pop
mov
hlt
test
jp
pop
mov
js
mov
in
sbb
jle
outsl
addr16
sbb
scas
jge
ret
rorl
dec
hlt
xchg
xlat
or
subb
sub
push
sti
insb
cmpsl
aas
inc
mov
sub
insl
out
add
and
bound
sbb
shrl
insb
leave
lcall
shll
jl
adc
jl
leave
xor
add
loopne
pop
xchg
lahf
fistl
or
or
jae
sub
ss
xor
inc
pop
push
rcrl
pushf
add
aam
mov
clc
mov
xor
popf
dec
fldenv
mov
lea
pop
jg
filds
mov
mov
je
push
mov
jno
dec
cmp
push
pusha
gs
fsubrl
das
in
popa
jle
push
mov
daa
jno
or
shlb
add
cmc
dec
mov
adc
sbb
jmp
nop
mov
cs
xlat
xlat
cwtl
fldenv
scas
sbb
push
int3
loop
mov
les
pop
lods
sub
das
push
mov
insb
es
sbb
cmp
inc
adc
in
int
bound
fwait
dec
jle
imul
xchg
jns
sti
mov
mov
mov
pop
aam
pop
lahf
test
xor
lret
nop
sub
cwtl
dec
jns
xor
fs
push
mov
fists
push
or
inc
xchg
pop
sbb
xchg
pop
clc
xchg
shlb
ds
sbb
mov
cmp
xchg
pop
ret
das
xor
aas
mov
mov
sbb
push
xchg
or
mov
data16
cltd
adc
inc
or
sub
loopne
adcb
outsl
mov
mov
push
pop
mov
lret
cs
daa
sub
ficoml
scas
outsl
mov
ss
mov
lea
aam
push
jnp
jp
dec
daa
sahf
out
clc
cmpsb
loopne
data16
fs
mov
lock
or
mov
repnz
in
call
aas
mov
fnclex
call
push
in
shl
pop
jbe
or
adc
jp
in
dec
test
xorl
adc
lock
mov
mov
pop
es
jne
test
pop
aas
mov
in
lods
fstl
ret
jbe
add
inc
call
iret
jbe
add
add
pop
rcrb
movl
adc
dec
setno
daa
xchg
scas
cmp
push
rolb
rcll
fidivs
addb
jnp
lcall
jmp
push
leave
into
or
fstpl
dec
shrl
idivl
inc
sub
push
pop
inc
adc
jmp
ret
cmp
adc
ss
mov
push
jmp
mov
push
sbb
pop
into
in
cmp
dec
pop
aam
les
aad
xlat
jg
inc
sahf
sbb
push
std
daa
data16
sub
cmp
mov
xchg
mov
xchg
or
dec
inc
push
decb
lods
test
roll
outsb
mov
mov
bound
movsl
jnp
jp
mov
sarb
testb
repz
add
cs
mov
sbb
lret
lcall
jge
xchg
push
fprem
ret
cli
push
jg
pop
pusha
dec
and
dec
push
push
sub
int
push
mov
mov
xchg
je
popa
mov
mov
push
cmpsb
cmp
sub
fdivrl
fimuls
in
dec
int3
movsl
sub
push
stos
push
fdivrp
lret
push
xor
loopew
int3
cmp
mov
aam
stos
int
rcrl
loop
cli
andl
enter
pop
fs
rorb
fdivrs
and
push
leave
mov
inc
out
ljmp
mov
testb
adc
mov
mov
inc
sub
push
movsb
pop
inc
or
push
push
mov
loopne
xor
jmp
push
mov
push
fs
push
hlt
iret
mov
and
inc
cltd
or
std
test
cmc
bound
add
lds
mov
fsubl
fmuls
push
inc
adc
repnz
in
push
fs
mov
mov
pop
ret
enter
jle
stos
data16
je
or
daa
sub
aad
jb
xchg
lret
cmp
mov
ja
int3
insl
jge
or
mov
and
sbb
and
push
mov
repnz
push
subl
mov
mov
les
test
mov
nop
xchg
dec
leave
cs
cwtl
sub
sub
inc
out
icebp
ret
dec
adc
jl
and
inc
daa
mov
hlt
ret
in
into
sbb
sub
stc
jmp
insl
shll
mov
insl
pop
xlat
lret
addl
or
xor
fistl
xor
aaa
mov
out
cld
xchg
out
dec
pusha
pop
in
pop
mov
xchg
fcomi
mov
nop
inc
pop
jne
stos
js
shlb
subb
pop
stc
cltd
cld
mov
push
insl
or
add
in
xchg
sbbl
jmp
push
sahf
pusha
xchg
les
jg
inc
push
aas
in
mov
fcoml
dec
testb
mov
or
push
inc
aad
xchg
lea
push
ret
xor
loop
ret
sbb
dec
inc
loop
lock
in
or
dec
fmuls
testl
lahf
push
dec
int
dec
insl
scas
pusha
sti
sbb
cli
je
sbb
bound
inc
mov
aad
or
push
add
rorb
pop
rclb
movsl
and
push
mov
lret
jl
movsb
xor
out
fs
sti
inc
fbld
stc
dec
xchg
cmpsl
js
dec
pop
mov
jae
mulb
lcall
mov
push
loop
es
shr
dec
mov
jno
std
inc
repz
mov
outsl
mov
lcall
dec
aad
adc
sub
push
dec
cmpsl
jmp
mov
cmp
xchg
in
pop
sbb
in
out
cmp
dec
pop
xor
push
pushl
in
push
dec
mov
into
fwait
and
fcmovb
clc
out
xor
imul
jns
enter
mov
out
pop
push
fistps
dec
jl
or
sbb
sub
cmp
int3
ljmp
mov
mov
jp
dec
jl
or
sbb
sub
cmp
int3
ljmp
mov
mov
jp
dec
jl
mov
sbb
sub
mov
cli
in
lret
mov
mov
jp
dec
jl
or
sbb
sub
cmp
int3
ljmp
cld
and
inc
fdivl
gs
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
inc
leave
push
arpl
jae
or
adc
ret
mov
cmpsb
jecxz
xrelease
mov
inc
ss
arpl
jae
add
ljmp
roll
sbbl
movb
arpl
adc
mov
rol
nop
leave
jmp
lock
in
mov
push
dec
adc
push
inc
inc
adc
test
enter
or
push
mov
imul
repz
enter
xchg
dec
mov
sub
lds
jbe
jl
xchg
mov
or
sub
add
lock
ret
cmp
or
sbb
push
jae
push
notb
adc
jbe
push
ret
imulb
aad
jge
sti
sbb
and
into
or
cmpl
xor
in
mov
push
jp
push
movsl
xchg
out
cmpsb
cmp
xchg
cmp
xor
in
push
mov
into
sbb
sahf
mov
fildl
ss
arpl
adc
mov
mov
shll
xchg
into
sbb
push
mov
cmp
push
push
push
sub
pop
or
jb
xor
jecxz
loop
out
out
cli
xchg
out
out
inc
jae
xor
and
jg
and
xor
cmpsb
rcl
lock
cmpsb
stos
shll
aaa
popa
or
add
adc
push
xor
mov
cmpsb
jecxz
xrelease
mov
inc
ss
arpl
jae
add
and
inc
ret
mov
cmpsb
jecxz
xrelease
mov
inc
ss
fdivs
in
jne
mov
dec
adc
out
fisttpll
xchg
adc
nop
ss
lds
dec
mov
mov
shlb
lret
inc
push
js
hlt
mov
or
in
hlt
mov
adcb
inc
icebp
mov
dec
sti
sub
dec
push
push
add
aas
repz
into
jbe
push
sub
aad
fidivrl
add
push
push
cmp
imul
cmpl
mov
cmp
dec
outsl
imul
sbbl
push
sub
scas
scas
jno
mov
ds
push
js
into
dec
enter
cmpsb
ror
cmp
imul
fwait
adc
int3
mov
fists
mov
adc
or
in
fcoml
bound
inc
push
inc
inc
shrl
pop
dec
mov
pop
lea
lret
xchg
pop
push
adc
sub
mov
or
movsb
lret
iret
clc
clc
lahf
push
or
fisubrs
dec
push
cmp
xor
lods
inc
mov
sub
rcll
mov
addr16
fidivrl
push
mov
cld
loopne
lcall
popf
repz
lds
dec
push
test
ret
xchg
mov
inc
imul
inc
push
mov
enter
call
xor
cmp
and
rolb
loope
cwtl
dec
mov
je
mov
imull
cwtl
dec
push
push
pop
pop
inc
sarl
cmp
ds
xchg
mov
jo
lret
sahf
push
aas
or
dec
ret
movsb
pop
scas
push
in
mov
xchg
jo
mov
pop
daa
xlat
sbb
cli
in
lods
outsl
movsl
test
movb
lods
shlb
mov
lret
fwait
scas
mov
aaa
scas
adcl
cli
les
sbb
xchg
pop
and
jo
add
fs
mov
mov
jo
pop
std
aad
push
fiaddl
lret
aam
test
or
sarl
add
mov
jg
cmpl
mov
jns
inc
movsl
or
int3
andb
push
push
test
xor
xor
mov
push
and
fs
rcl
jp
cmp
jnp
jl
lea
lahf
inc
and
jae
jle
and
nop
test
rcl
add
mov
ffreep
cmpsl
add
lret
jmp
scas
lods
nop
in
push
sub
or
jle
in
mov
js
pop
jecxz
push
lcall
add
pop
pop
jae
or
push
adc
jmp
aam
jecxz
loope
sub
xchg
add
fwait
out
pop
jecxz
sbb
fldl
je
lock
lea
add
xchg
idivb
jno
and
xchg
ds
aad
pop
or
mov
pop
loop
xchg
insl
xchg
fcmovb
jp
jl
xor
mov
pop
clc
cmp
inc
test
mov
jno
pop
into
push
stos
out
daa
lahf
insl
and
js
adc
in
shr
mov
ljmp
popa
test
sti
sti
pusha
fstpl
pop
cmp
or
rolb
push
cld
cmpsb
push
outsl
fs
and
push
insb
cld
xchg
adc
cmpsb
ret
bswap
sbbb
cli
std
add
cmp
inc
movsl
cwtl
mov
xchg
adc
lods
lret
aad
jae
pop
daa
test
pop
lock
mov
aad
xchg
les
sbb
xorl
inc
push
xor
cltd
orb
or
cmpb
ror
in
cwtl
movsl
icebp
imul
fs
cwtl
pop
jnp
iret
popa
mov
insb
jo
add
jo
aas
std
mov
inc
scas
jmp
jmp
adc
nop
addl
jns
mov
fs
and
pop
or
std
loop
stc
cmpsb
and
lods
pusha
adc
push
testl
pop
xor
lret
lahf
sbb
int3
mov
cmpsl
in
xlat
mov
cs
out
imull
imul
in
jno
or
xor
xchg
divb
inc
dec
arpl
mov
fs
in
ret
xchg
xchg
sti
push
flds
inc
mov
sub
movsl
cmp
repnz
xchg
xchg
mov
pop
adc
out
int3
jl
fistpl
mov
out
pop
xchg
xor
cs
adc
stc
dec
mov
addr16
sbb
fisubrs
dec
ret
aam
adc
ret
push
cmpsb
mov
scas
hlt
or
daa
add
dec
or
dec
pop
sub
insl
mov
mov
bound
fldenv
in
fidivrs
out
jae
xchg
mov
pop
pop
adcl
dec
int
mov
outsl
xchg
jmp
push
out
mov
inc
push
sub
loopne
test
out
gs
xor
rcrb
pop
inc
cmp
cmp
sahf
test
jnp
dec
adc
lcall
jle
insb
out
push
pop
sbb
dec
arpl
cmpsb
rcrl
pop
xchg
test
or
ds
and
mov
xor
pop
fwait
xchg
pop
lcall
cmpsl
push
iret
shrl
adc
push
dec
sub
sub
daa
add
push
mov
mov
enter
xchg
arpl
add
cwtl
pop
enter
and
push
loop
and
movsl
and
adc
jp
push
jecxz
jae
mov
xor
int
enter
xchg
mov
adc
add
and
hlt
lcall
outsl
adc
in
leave
push
cmp
lret
les
dec
mov
xchg
sbb
loop
pop
adc
adc
jl
lret
ds
daa
ja
fmull
cld
ds
or
pop
scas
in
mov
or
addr16
inc
imul
xchg
add
nop
dec
jle
inc
add
dec
dec
jp
or
out
pushf
setb
push
rolb
loope
les
int3
loope
mov
fcoms
push
push
data16
test
xchg
adcb
fstpt
xor
push
xor
sahf
adc
test
or
xchg
jmp
pop
and
hlt
fs
test
sub
and
rol
sbb
je
mov
sub
jmp
in
movsb
mov
and
mov
scas
stos
rolb
or
mov
lahf
into
and
arpl
movl
icebp
or
pop
out
sahf
dec
mov
cmp
scas
cmp
push
push
and
mov
sti
dec
mov
mov
cmpsb
cmp
add
loopne
xor
cs
adc
inc
mov
cmpb
mov
test
rol
jecxz
inc
pusha
imul
fwait
movsb
in
push
stos
mov
idivl
inc
leave
in
xchg
push
mov
data16
mov
pusha
and
es
aad
cmp
int
loope
negb
jmp
cmp
data16
xchg
pop
add
adc
in
cmp
repnz
xchg
adc
inc
mov
je
pushf
mov
mov
sbb
and
mov
mov
fcmove
xor
push
sbb
push
cmp
arpl
ss
roll
push
cld
scas
mov
mov
insl
jmp
add
xchg
xor
cltd
jge
pop
test
mov
dec
mov
outsl
aad
stos
mov
outsl
popf
push
mov
hlt
or
dec
mov
xchg
push
shl
popf
dec
jns
xchg
movsb
xchg
dec
mov
sbb
stc
cld
in
and
xlat
repz
push
rolb
ret
xlat
fldenv
adc
mov
push
cmp
adc
xor
pusha
pop
icebp
out
and
mov
inc
divb
loop
js
adc
rcll
adc
lret
fsubl
cmp
das
jae
and
jb
scas
xchg
mov
ljmp
dec
ficoms
pop
inc
mov
ret
jmp
inc
adc
cld
inc
pop
outsb
sbb
mov
sub
aas
lahf
pop
inc
cmp
add
mov
push
inc
aam
cltd
repnz
inc
add
cltd
fmulp
jecxz
scas
stos
dec
stos
adc
jne
bnd
jmp
xor
dec
pop
xchg
jae
add
pop
movnti
jbe
xchg
bound
pushf
fmull
scas
sub
pop
addl
pop
cld
adc
sub
rcl
pop
adc
les
jg
sar
subb
and
xor
xor
xchg
das
out
repz
xchg
dec
inc
cmpsl
lea
mov
and
and
stc
xor
shrl
push
ss
xchg
stos
mov
je
add
lahf
loopne
int3
push
enter
or
movsl
jns
jno
imul
jns
xchg
out
stos
xor
out
xor
dec
sti
jo
movsl
daa
imul
add
repz
jg
insb
cmp
xor
or
mov
jne
mov
dec
int3
inc
ljmp
or
jne
xchg
ret
jecxz
xor
out
scas
mov
out
arpl
stc
ret
and
cwtl
inc
xchg
mov
test
sub
sbb
outsl
inc
cwtl
dec
cwtl
push
jge
scas
mov
test
lcall
mov
dec
mov
faddp
pusha
mov
mov
adc
dec
cmp
bound
in
or
ja
test
repz
repz
mov
xchg
dec
mov
jmp
dec
shl
mov
mov
mov
and
fiaddl
fwait
push
mov
and
xor
cmp
mov
push
and
mov
ss
mov
xchg
lock
cmp
cmp
fiaddl
mov
pop
fisubrl
dec
std
lods
cmpl
xor
iret
and
add
cli
push
mov
imul
popa
lock
or
incb
mov
xchg
pop
or
cmpsb
clc
jp
pop
enter
lods
clc
and
pop
pop
sti
sbb
mov
push
sub
mov
push
pop
dec
xor
mov
add
lods
or
pop
lods
subb
and
sbb
jmp
shrl
ror
xlat
mov
pop
sarl
and
das
xchg
push
cmp
popf
stc
sbb
pop
lods
xchg
fs
bound
mov
fdivl
mov
xor
or
rorb
dec
cmp
xchg
dec
shr
stos
lcall
fstps
addr16
xchg
push
cmpsl
lods
mov
xchg
pop
movsl
imul
aad
push
inc
add
ss
lahf
mov
out
into
adc
push
inc
sub
lret
jmp
xchg
mov
adc
sub
or
dec
mov
out
imul
das
or
pop
outsl
sub
add
sahf
dec
lods
push
and
pop
leave
pop
jno
arpl
pop
loope
or
sub
xlat
pushf
mov
add
xor
mov
mov
adc
repz
sub
jl
sbb
inc
icebp
fisubrl
pusha
es
mov
cmp
lcall
clc
add
xchg
or
sbb
dec
in
adc
sbb
pop
shrl
pop
pop
shll
pop
pop
fstl
ljmp
add
pop
push
dec
jae
dec
test
cli
ds
idivl
xor
push
jmp
sub
adc
gs
movsb
add
lret
mov
adc
sub
pop
xor
jge
mov
pop
sahf
pop
fs
xor
cmp
push
sub
pop
loopne
xchg
icebp
mov
cmp
test
sbb
cmp
out
loop
cmpsl
dec
dec
loopne
iret
xor
addr16
pop
cmp
and
mov
cli
adc
int
mov
jp
ret
rorb
sub
in
ds
or
xor
insl
xorl
out
out
pop
jle
cmpb
rcl
and
iret
test
out
mov
popa
adc
loopne
call
xchg
dec
push
loopne
leave
out
test
inc
iret
jg
jg
psubd
in
imul
lcall
lea
sbb
jl
stc
out
std
mov
mov
dec
cltd
xchg
mov
push
int3
cmpsl
or
push
inc
lods
insl
notl
jo
in
mov
imul
mov
nop
mov
mov
in
xchg
sub
sbb
fildll
mov
incb
sbb
or
jo
push
les
loop
xchg
mov
out
sbb
add
popf
in
mov
push
fimull
loop
ja
sbbb
cmp
inc
adc
or
cmc
sub
out
inc
dec
mov
cmp
xchg
out
mov
mov
jb
jge
cmpsb
jne
lods
pop
add
xchg
push
mov
fs
sbb
sub
stc
sub
andb
pop
les
rcrb
mov
fs
std
xchg
xor
mov
jbe
xor
lock
cli
push
cli
fsubr
push
jmp
or
int3
xchg
leave
pop
iret
jle
ficoml
mov
jne
call
lea
ficomps
stos
xor
enter
fs
ss
sarb
psrlw
pop
push
cmp
xor
enter
stos
cmp
sub
dec
adc
bound
imul
out
in
xorl
repz
mov
xchg
xchg
iret
sbbl
fadd
mov
fstps
jo
or
aas
jb
roll
or
and
mov
cs
loop
mov
add
jnp
add
adc
std
out
xchg
ret
imul
add
out
in
outsb
popf
repz
repnz
arpl
xor
iret
dec
jns
cmp
stos
fmuls
adc
je
cmp
cmpsl
sbb
push
cmp
call
xchg
das
sbb
pop
repnz
stos
mov
fld1
fstpl
lret
fbstp
adc
aad
aaa
sbb
scas
addr16
popa
enter
mov
shrl
inc
xor
call
loope
test
enter
outsb
xlat
mov
jge
shrl
adc
movsb
lcall
les
clc
sub
adc
insb
and
enter
movsb
cmp
scas
loop
xor
fstpt
dec
sbb
lods
aas
inc
je
or
add
hlt
cld
lcall
pop
repz
sbb
mov
dec
dec
ds
pop
xchg
dec
dec
pop
ds
pop
cld
cmp
dec
pusha
mov
jmp
push
inc
mov
add
lahf
adc
or
into
mov
das
jb
sar
cmp
sub
cli
mov
mov
push
dec
xor
out
mov
pop
mov
or
mov
pop
mov
and
out
dec
cmp
cmp
mov
mov
push
mov
insb
aas
inc
ret
dec
outsl
aam
cltd
std
add
mov
cld
sbb
dec
jl
cmp
or
jl
push
mov
loope
out
jae
notb
adc
leave
lcall
out
loope
pusha
cmpsb
imul
jmp
adc
push
push
xor
leave
jmp
inc
call
sahf
popa
das
fxch
int3
ficomps
stos
mulb
ret
adc
inc
pop
mov
jae
imul
and
je
mov
cli
and
mov
lahf
pop
js
std
push
ss
fldl
and
loope
and
cld
js
jne
jns
nop
js
add
test
ffree
das
push
std
push
push
push
pop
aad
push
cmp
daa
adc
daa
push
clc
jl
dec
scas
mov
cmp
lods
or
fnsave
enter
xchg
jo,pt
pop
mov
inc
loop
out
cmp
insb
cmpl
push
jbe
pop
stos
int
cmpl
sbb
push
aaa
mov
lock
insl
out
clc
pop
inc
jecxz
dec
out
incl
inc
push
stos
pushf
add
pop
push
aaa
lock
mov
pop
or
int3
pop
jl
adc
or
lea
pusha
insb
es
dec
xorb
fdivs
adc
ljmp
es
xor
mov
jae
hlt
popf
xor
in
aas
cmp
adc
add
cld
test
and
inc
in
mov
push
cmp
xchg
out
mov
pop
dec
adc
sub
add
sub
push
dec
mov
ret
pop
les
sarb
sub
lret
imul
jp
shl
adc
iret
xchg
es
adc
sub
test
stos
subb
sarl
pusha
pop
call
fcmovb
into
mov
rcrb
test
imul
mov
ss
and
push
xor
mov
sbb
xor
sti
push
jae
popf
mov
push
out
jle
movsl
mov
sub
orb
push
mov
and
jae
fbld
mov
sbb
mov
add
jns
stos
es
mov
lods
sahf
inc
mov
int3
ds
clc
shll
fnstcw
jge
lret
jge
test
mov
es
lods
ds
movsl
push
sahf
sti
sbb
mov
stc
xchg
xor
outsb
fcoml
cmpsb
mov
add
inc
fs
test
jmp
imul
out
movsb
lds
jb
out
call
pop
dec
dec
cmp
xchg
ficoml
in
popl
es
add
cld
loop
push
mov
dec
adc
jne
adc
lret
sbbb
mov
ds
fucomp
sbb
gs
add
or
mov
adc
jbe
mov
sbb
sbb
and
out
in
mov
jp
jnp
or
mov
mov
test
clc
movsb
iret
shrl
jno
add
test
sbb
ret
adc
gs
mov
cmp
inc
imul
outsl
xchg
insl
xor
int3
or
mov
push
movsl
pop
in
pop
pop
jns
ret
mov
and
inc
mov
mov
pop
adc
sahf
aad
ss
mov
cltd
fildll
xchg
and
stc
bound
mov
pop
dec
xchg
lcall
fs
pop
lcall
sub
and
push
insl
bswap
or
outsl
stc
loopne
ret
lret
aas
shl
xchg
pusha
aas
in
ret
test
mov
outsl
pop
sbb
push
mov
push
adc
mov
add
cli
jns
push
lds
sti
or
sbb
jmp
dec
jno
scas
push
cmpl
xchg
lcall
pop
jecxz
mov
adc
iret
xor
sbb
adc
mov
jge
jl
or
fldcw
nop
insb
ja
sub
call
add
lret
xor
out
jle
push
or
fdivrl
repnz
pop
sub
xlat
data16
push
mov
push
aaa
pop
dec
repz
movsb
fs
pusha
mov
pop
or
jo
pop
sbb
inc
adc
jo
repz
mov
xchg
jo
in
es
add
ja
pushf
dec
jge
iret
ja
jo
xor
mov
shlw
fstl
push
lods
repz
ljmp
mov
repnz
mov
and
mov
push
inc
loop
or
mov
xor
pop
movsb
outsb
pop
xlat
fwait
lcall
jecxz
jecxz
stos
inc
addl
and
daa
inc
popf
into
lea
push
pushf
push
aad
push
lcall
sub
nop
test
aas
xchg
and
lds
mov
pop
test
lods
cmp
stos
push
inc
and
jl
popf
pusha
adc
imul
mov
es
xor
mov
jl
push
leave
outsb
cmpsb
xor
adc
jae
rcl
rorb
xor
iret
roll
out
data16
mov
stos
mov
jl
sti
push
ja
xchg
fsubl
adc
mov
sar
xchg
iret
addb
popa
dec
mov
gs
into
fcomp
xchg
mov
jle
test
adcl
inc
orl
sbb
or
mov
clc
dec
es
ror
jb
pop
fdiv
sahf
rcl
aad
repz
ja
jg
out
xchg
js
jmp
outsb
imulb
fnstcw
out
cwtl
aad
pop
aaa
sbb
lds
xor
inc
aad
sahf
repnz
ds
jp
nop
lret
jns
pusha
inc
fldl2e
sarb
enter
imul
sbb
cmp
pop
jle
movsb
xchg
icebp
mov
movsl
in
icebp
fadds
and
xor
inc
sub
push
jge
mov
bound
imul
cmp
and
icebp
in
lock
out
jmp
xchg
cld
jo
and
xchg
cld
mov
mov
test
cmp
inc
mov
xchg
jb
out
cld
cmp
mov
loopne
jnp
mov
mov
fsubrs
pop
mov
add
and
jbe
lea
add
push
imul
mov
dec
push
or
sti
call
dec
push
in
or
dec
inc
adc
cmp
mov
cwtl
ds
xor
mov
sarl
jle
jno
xchg
pop
popw
mov
out
into
movsb
xchg
sub
lcall
sub
sub
mov
xor
xchg
dec
push
or
fildl
jg
aaa
xchg
sbb
xorl
push
in
stos
iret
dec
pop
or
insb
dec
lock
out
inc
in
xchg
out
ss
outsl
imul
repnz
pop
outsb
pop
xor
sub
pop
mov
aaa
mov
xor
sbb
loopne
test
arpl
jno
jmp
mov
je
jge
fs
ret
or
popf
cmp
lds
dec
int
pop
jecxz
and
push
sar
sahf
jnp
test
xor
xor
stos
push
inc
add
inc
push
inc
add
and
scas
scas
push
sti
push
push
or
shlb
mov
pop
sbb
mov
inc
arpl
negl
mov
daa
es
xor
xchg
jmp
out
add
dec
rcrl
insl
ret
inc
shr
hlt
mov
push
push
jo
jno
cli
les
inc
inc
pop
fcomps
sbb
jle
pop
incb
out
and
setns
pop
es
jae
add
and
inc
ret
mov
cmpsb
jecxz
xrelease
mov
inc
ss
arpl
jae
add
and
inc
ret
mov
cmpsb
jecxz
xrelease
mov
inc
ss
outsb
arpl
push
add
into
and
inc
ret
outsb
shll
xor
out
divb
arpl
jae
add
and
xor
dec
rorl
xchg
repz
hlt
jle
sbb
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
add
pushf
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
add
add
add
and
add
sbb
add
adc
add
or
add
add
add
cld
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
add
add
add
insb
add
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
add
add
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
add
add
add
lods
add
add
add
les
add
add
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
add
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
push
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
pop
add
or
add
add
add
cld
push
add
hlt
push
add
in
push
add
in
add
faddl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
pop
add
dec
pop
add
pusha
pop
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
pop
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
or
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rorb
add
fmuls
add
call
or
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
