mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
ret
adc
add
xor
and
add
shll
mov
andb
mov
xor
xor
ret
adc
add
xor
and
jo
pusha
push
nop
push
andb
mov
and
xor
ficoml
lret
xor
and
jo
pusha
pop
scas
jo
cmp
or
jg
fs
adc
rclb
je
lds
testl
jnp
sub
sub
fwait
and
test
jl
push
lahf
mov
mov
and
int3
sbb
add
mov
inc
pop
pop
lret
sub
loope
push
lods
jle
mov
pusha
add
out
repz
xor
ret
add
xor
xor
push
xchg
push
pop
cltd
mov
enter
push
dec
mov
adcl
test
xor
xchg
lea
outsb
out
fnstsw
mov
inc
aad
andl
adc
sub
or
jl
xchg
inc
push
mov
ficoms
inc
das
inc
xor
in
loopne
adc
add
xor
and
stos
pusha
pop
nop
dec
cmpb
mov
cmp
xor
xchg
data16
cmc
add
adc
aas
jmp
add
pop
test
xorl
xchg
outsb
mov
aad
in
arpl
xor
add
push
mov
inc
fwait
push
lret
cmp
inc
mov
nop
push
andb
mov
and
xor
ret
adc
add
xor
and
jo
pusha
inc
nop
push
andb
mov
and
xor
ret
adc
adc
out
xchg
xchg
mov
push
sub
add
repnz
lea
jl
and
ss
or
dec
mov
cmpsb
mov
xchg
xor
fidivs
ljmp
pop
and
popf
sar
stc
xchg
sub
push
call
enter
ljmp
mov
push
mov
pop
cltd
lcall
scas
call
scas
sub
add
or
lahf
sbb
fdivrl
cld
std
xchg
cmc
sahf
ljmp
test
int3
mov
daa
call
out
fldl
jg
push
repnz
out
xchg
stos
pop
in
jae
sbb
sub
mov
repz
lea
inc
popf
enter
int
mov
xor
enter
rorb
leave
repnz
cmp
push
aaa
pop
scas
jg
mov
ja
fmuls
pop
lret
test
cmpsl
mov
mov
ficompl
xchg
enter
icebp
das
cmp
adc
aam
mov
shrl
xlat
add
das
push
mov
or
mov
or
xchg
cmp
pushf
cmp
adc
adc
dec
jmp
mov
enter
dec
fdivrs
and
fdivs
mov
cmp
lcall
add
xchg
ret
stc
repnz
movb
shrb
dec
cmp
jne
jmp
jnp
ror
test
pop
xchg
int3
mov
add
xor
pop
mov
sahf
and
push
roll
or
jno
ja
and
xor
jg
adc
scas
or
cld
xor
aam
add
lock
sub
cld
ficomps
pop
rorl
movsl
arpl
arpl
lret
fiaddl
jmp
addr16
mov
insl
lock
push
imul
and
sub
outsl
mov
lds
pop
mov
dec
mov
insb
mov
push
xor
mov
lock
or
test
in
mov
mov
sahf
out
hlt
jl
popa
repz
shrb
sbb
shrb
sub
stos
jnp
jns
fcmovnbe
fwait
popf
addr16
mov
out
jle
pop
adc
jae
in
xor
push
aad
jmp
jmp
push
jge
and
loopne
adc
stos
les
aad
call
roll
je
sbb
cmp
loop
test
dec
inc
jb
jmp
add
pop
std
pop
jbe
xlat
js
cltd
out
adc
jl
mov
push
lret
sbb
mov
and
nop
lret
fidivrs
adc
cmc
sub
insb
daa
sub
clc
sub
mov
pop
sahf
xor
mov
in
add
cmp
dec
addr16
xchg
pop
mov
add
add
test
icebp
out
dec
rcll
rolb
imul
pop
or
jecxz
or
mov
lret
loop
mov
gs
add
or
inc
movsl
dec
sti
imul
ret
aad
push
pusha
in
mov
cmp
dec
inc
or
lcall
popa
cmp
pop
sub
xchg
fs
push
gs
cld
cmpsl
mov
cs
lret
scas
adc
cmc
out
fldpi
xchg
mov
push
jp
repz
dec
pop
cmpsl
testl
pusha
sub
lods
sbb
shll
push
bound
jnp
loopne
xchg
shll
lock
loopne
pushf
mov
cmp
mov
xor
dec
imul
rcr
mov
test
adc
or
push
ror
iret
sbb
lds
dec
dec
out
or
push
mov
push
mov
ds
xorb
data16
stos
jl
nop
or
sbb
cmp
repnz
pop
ja
jno,pn
test
loop
sahf
in
jg
dec
in
hlt
jbe
repnz
adc
aaa
mov
add
loopne
xchg
mov
out
lods
addb
test
dec
add
mov
dec
mov
dec
sub
cwtl
or
sub
sbbb
mov
pop
lds
or
push
xor
sub
js
dec
jecxz
in
fisubl
ss
mov
lea
sub
xchg
xor
ret
test
je
dec
test
popf
inc
mov
fldl
xor
xchg
or
test
aad
add
inc
fs
or
adc
lret
adc
mov
push
js
into
push
push
fwait
iret
ja
mov
pushf
fcoms
rcrb
sar
inc
lods
xchg
pop
shlb
shl
stos
ljmp
enter
inc
push
int3
in
xchg
xlat
cmp
xchg
cmc
push
insl
or
loope
cs
xor
adc
cmp
mov
and
jo
jge
sub
outsb
or
fldln2
out
or
jg
jbe
ds
push
push
es
fimull
je
stos
mov
mov
out
xchg
dec
mov
lods
xchg
int
stos
xlat
xor
sbb
mov
push
insb
dec
insb
pop
adc
test
cmp
sub
mov
fisttpl
push
mov
js
push
mov
xchg
add
pop
stc
mov
pop
hlt
mov
sbb
and
nop
cld
in
mov
dec
fisttpl
pop
xchg
mov
pop
sub
je
std
ret
loopne
add
jmp
andl
or
dec
cmp
add
xlat
dec
leave
xor
in
sbb
lods
rolb
dec
leave
cli
xchg
insl
sbb
insl
seta
shlb
xor
xor
imul
sbb
aam
std
cmpsb
jmp
inc
cmp
pop
mov
andb
loope
jmp
sahf
outsb
pop
mov
xchg
add
sbbb
fimuls
rcr
pushf
sbb
rorl
ss
mov
out
adc
popa
cmc
fwait
inc
mov
lret
stos
into
dec
push
jae
jne
pushf
xchg
pop
arpl
dec
push
pop
adc
cmp
je
fmul
loopne
jae
stos
or
push
inc
rorl
rclb
jb
loop
mov
lods
pop
dec
scas
pop
fwait
imul
mov
push
adc
addr16
imul
lds
push
jge
leave
mov
dec
out
pop
fs
clc
in
sbb
xor
dec
inc
insb
test
adc
pop
cmp
sub
add
outsl
enter
ret
dec
sub
cwtl
cli
sub
and
out
add
push
inc
sarl
mov
jge
pop
xor
pop
jle
testb
add
push
stc
loop
fcoms
adc
test
sahf
mov
mov
lcall
cmp
cltd
in
bound
mov
and
push
lods
push
idivl
jg
or
loop
fstpl
sti
daa
rclb
movsl
jb
fistpll
fidivs
loope
div
add
fidivs
jae
sbb
jo
aaa
ficoms
jecxz
xor
movsb
je
mov
or
test
inc
jp
lea
xor
sti
sahf
fs
or
xchg
jg
inc
imul
mov
xor
mov
and
xchg
loopne
and
fisttpll
imul
xchg
or
pushf
or
lods
stos
mov
pop
pop
or
movsl
push
xor
dec
leave
das
xchg
testl
push
pop
das
ds
testl
mov
add
push
mov
xor
adc
mov
insl
dec
push
lds
outsl
mov
jecxz
lods
cmp
outsl
push
mov
scas
mov
add
adcl
into
sbb
iret
gs
jo
jne
jnp
rclb
std
aad
push
xor
mov
jle
lds
sub
test
loop
sub
enter
xchg
andb
out
pushf
xor
sar
fmul
mov
xchg
push
mov
jbe
sahf
outsb
xor
mov
gs
mov
add
data16
int3
cmp
xor
jne
xor
add
ljmp
popf
daa
fnsave
jmp
xchg
xchg
icebp
mov
pop
and
sbb
jne
push
in
push
xchg
out
ljmp
fstpt
mov
push
mov
cmp
dec
insb
jnp
add
add
pop
sti
lds
inc
in
or
or
mov
pop
addr16
xchg
mov
out
add
pushf
bound
roll
or
ds
push
mov
xorl
or
movsl
lds
inc
dec
push
pop
in
sub
push
jae
mov
decb
stc
sbb
inc
lock
loopne
cmpsb
mov
mov
or
adc
xchg
cmp
lret
push
mov
into
cmp
push
xchg
cmp
loop
push
adc
dec
mov
xchg
and
loop
cltd
mov
sbb
jle
movsl
mov
xchg
sub
loope
scas
mov
addr16
jle
test
xor
dec
insl
cmpsb
test
leave
repnz
test
xor
jmp
mov
pushf
fstpt
push
repz
jnp
daa
or
stos
insl
sub
mov
mov
mov
sbb
jp
mov
icebp
cmpsl
aaa
in
dec
push
test
dec
push
sub
inc
xor
xorb
ss
je
ret
fldenv
js
lahf
pop
push
inc
ss
xchg
daa
aaa
imul
sbb
sub
outsb
pop
mov
scas
cmpsb
cmc
call
sbb
orl
sub
ret
clc
cld
sbb
xchg
sbb
mov
xchg
push
pop
mul
je
sub
jl
pop
test
add
add
pop
mov
jnp
mov
pushf
es
rcrb
push
mov
js
sbb
out
stos
sub
ljmp
in
stc
pop
jle
jg
or
notb
inc
leave
mov
push
test
adc
and
jle
ja
lock
idiv
jae
outsb
stos
xchg
push
push
jnp
mov
mov
mov
std
frstor
xchg
out
loopne
arpl
ficompl
xchg
push
shrl
scas
jmp
daa
dec
pop
test
and
cwtl
fs
xchg
mov
stos
or
sub
sahf
mov
movb
pop
jmp
jp
cmp
or
out
jns
jecxz
sbb
cmp
dec
fwait
push
mov
push
sub
adc
fwait
add
filds
outsb
ss
mov
lods
cmc
inc
cmc
push
add
inc
int
aam
cmp
loope
sub
pop
pop
mov
and
leave
push
push
popf
rclb
mov
add
push
inc
in
cld
dec
cmpsl
ss
mov
movsb
pop
sbb
inc
out
outsb
scas
shlb
xlat
dec
sub
iret
or
loopne
cld
sub
mov
subb
mov
loopne
mov
notb
xchg
mov
push
and
icebp
stos
sahf
daa
rcll
cmp
adc
repz
adc
sbb
inc
int3
mov
fstpt
mov
xor
stc
jns
je
mov
jae
lahf
ljmp
or
inc
test
cmpsl
jmp
out
mov
push
mov
sbb
sbb
adc
insb
rolb
in
jecxz
pop
adc
pushf
jnp
push
jb
mov
xchg
stc
mov
adc
jmp
cmp
hlt
stc
pop
push
jns
mov
popa
movsl
inc
inc
fwait
cwtl
inc
sub
sub
or
int
cmp
xchg
je
jns
in
out
dec
jne
lea
adcl
popf
lret
xchg
imul
jge
loopne
je
mov
fbld
inc
stos
cmc
pop
ljmp
iret
jmp
outsl
inc
mov
xchg
mov
sbb
int3
fsubl
pop
mov
into
add
xchg
mov
lea
pop
mov
enter
jmp
mov
mov
les
testb
pop
ret
xor
mov
sbb
shl
popa
sbb
jbe
pop
decl
pop
cmp
in
cmp
sbb
popf
xor
lahf
rcrb
push
loopne
xchg
lods
je
xchg
sub
sub
pop
sahf
or
and
test
cmpsb
jb
sbb
das
sub
pop
mov
pop
push
jnp
notb
pop
in
and
sbbb
sub
shl
xor
stc
adc
pop
movsl
fisubs
sbb
jb
insb
xor
jp
fldlg2
cmp
in
add
out
in
cli
and
je
ror
out
outsl
stos
mov
iret
and
orl
idivb
add
sbb
dec
mov
xchg
mov
in
in
mov
jp
nop
notl
mov
push
cwtl
mov
cmp
adc
cli
cmp
xor
cwtl
fwait
push
stos
andb
lods
js
inc
dec
or
and
or
sbb
out
xor
data16
aad
pop
in
das
pop
push
std
or
dec
cmp
fwait
sbb
into
cmp
loop
adcl
lods
insb
or
pop
xor
imul
and
pop
scas
inc
test
test
mov
jecxz
les
int3
jecxz
and
lcall
and
test
mov
push
enter
push
neg
addr16
jge
push
sar
or
std
lret
je
mov
sbb
adc
adc
stc
or
and
inc
pop
sti
fdivl
rclb
dec
mov
ret
stos
or
push
out
jl
push
jne
jno
push
xchg
lahf
sub
push
mov
dec
sahf
mov
loope
sub
jns
pushf
jecxz
dec
sub
xchg
insl
cld
cmp
pop
mov
nop
mov
pop
rorl
enter
lods
cmpsb
mov
add
fisubl
out
dec
xchg
movsl
fidivrl
loopne
lock
inc
jmp
push
enter
sbb
sbb
dec
fnstsw
loope
xchg
mov
mov
add
cmp
in
jo
test
xor
mov
out
sub
sbb
push
ja
out
pop
mov
fwait
jns
xchg
fistpl
fs
subb
int3
cmpsb
xchg
clc
insl
dec
stc
fidivl
adc
imul
sbb
std
jmp
mov
dec
shll
pusha
dec
cmp
lods
sarl
pop
jge
rorl
xchg
arpl
and
daa
cltd
fldenv
in
mov
mov
frstor
stos
mov
or
stc
xchg
in
icebp
mov
pop
cli
cmp
arpl
arpl
pop
test
sbb
leave
sub
mov
in
add
test
mov
push
pop
mov
outsl
hlt
push
push
xchg
push
or
adc
add
test
js
clc
push
mov
repnz
ficompl
push
sub
sbb
aas
mov
push
cmp
pusha
loop
mov
cmp
jo
xchg
mov
xchg
jo
mov
roll
jle
cmp
leave
loope
clc
bound
xchg
fmul
inc
sub
rcll
push
cmp
mov
push
adc
add
aaa
push
mov
test
push
scas
mov
cmpsl
shlb
push
dec
sbb
xchg
cmpsl
ds
push
cmp
lahf
fiaddl
jmp
cmp
sbb
stos
and
mov
xor
aas
xor
in
add
daa
cmp
loopne
add
cli
jo
movsl
mov
mov
push
mov
sub
cli
mov
out
sbb
es
pop
xchg
mov
adc
mov
lahf
cmp
frstpm(287
inc
je
push
xorb
sub
cli
cmp
pop
fld
jecxz
push
test
and
or
bound
xchg
mov
inc
mov
or
call
xchg
fs
idivl
jno
and
insb
imull
loopne
lods
inc
mov
xor
popa
mov
pop
pop
sti
data16
jb
push
mov
jnp
push
pop
cli
sarl
inc
popa
leave
push
sub
imul
xor
aad
pop
pminub
xor
sub
mov
shlb
shlb
cmp
push
jg
pop
xor
cmp
inc
or
repnz
dec
mov
jle
jmp
mov
and
shlb
test
xchg
lret
adc
inc
stos
aaa
rcl
in
shlb
jo
mov
leave
sbb
adc
xor
jns
jae
ja
sub
popl
push
cwtl
inc
mov
lock
lret
mov
insb
xlat
inc
inc
loopne
mov
inc
xor
sub
lcall
push
mov
jmp
sub
lods
addr16
sub
mov
pop
insl
fcomi
xchg
push
enter
and
and
mov
or
and
lea
out
xor
into
jmp
movsl
adc
in
mov
jns
leave
adc
mov
leave
mov
movsl
arpl
insb
pop
insl
mov
dec
xorb
loope
scas
pushl
xchg
popw
add
out
mov
cmp
xor
fidivrs
push
xchg
cmp
inc
sbb
pop
rcl
pop
lret
into
cld
notb
xlat
out
push
hlt
pop
aad
jecxz
fidivl
bound
test
adc
jne
aad
and
arpl
out
call
mov
jnp
push
ret
inc
jp
inc
mov
inc
rolb
sti
xchg
rol
and
mov
mov
xchg
inc
or
push
sbb
cmp
sbb
push
adc
xchg
sbb
xor
das
adc
adc
mov
pop
jp
add
imul
pop
test
jbe
sub
scas
outsb
mov
pop
insl
dec
xchg
arpl
out
mov
mov
jne
js
fistpl
cs
orb
sahf
cmp
dec
jns
xchg
rcrb
fiaddl
lea
xor
testl
and
call
xor
or
mov
push
mov
jne
mov
addl
ds
push
out
sub
push
pop
movsb
xor
push
jbe
jecxz
xchg
pop
faddl
pop
cs
test
bsr
cmpsl
add
js
cli
scas
ret
xor
and
dec
cmp
clc
sbb
adc
cmc
xchg
mov
xchg
jmp
jl
pop
lcall
lcallw
push
push
mov
pop
test
ja
pop
xchg
lea
loop
ds
fcomps
xor
enter
dec
loop
mov
jo
stc
push
test
repz
stc
pop
rclb
xchg
sub
imulb
ljmp
jbe
pop
pushf
mov
add
sub
insb
cmpsl
mov
cmp
xchg
sbb
in
push
fsub
push
push
rcll
jnp
mul
ds
fwait
sub
lahf
roll
cld
test
imul
push
fwait
dec
or
ljmp
into
mov
adc
mov
leave
adc
loopne
cs
mov
push
mov
movswl
xchg
cmp
popa
enter
mov
aad
dec
outsb
pop
jl
test
adc
add
inc
sar
fwait
mov
xor
add
repz
xchg
dec
shl
xor
add
push
scas
sub
pop
hlt
in
adcb
popa
push
dec
lds
out
lods
mov
std
mov
jmp
scas
cmp
xchg
out
js
adc
push
stc
xchg
cli
mov
ficoms
jo
and
pop
int3
sbb
xchg
bound
fs
or
cmp
pop
pushf
lcall
mov
cld
jge
daa
das
mov
xor
xchg
loope
lds
ret
fstpt
test
push
pop
mov
adc
iret
mov
and
cmpsl
adc
mov
imulb
and
in
sub
pop
mov
sahf
inc
jno
idivb
cs
dec
sbb
and
leave
out
mov
xchg
fisttpl
out
cli
sub
mov
jno
loopne
pop
dec
adc
sub
jo
je
aaa
dec
push
loop
fcmove
mov
test
adc
sub
popa
fmull
out
cmp
push
adc
sbb
lcall
add
inc
jns
mov
and
xchg
pop
adc
pop
fstl
or
jo
bound
daa
mov
popa
pop
ret
dec
popl
scas
fisttpl
xchg
lret
or
push
add
rcrb
loope
mov
jns
pop
sbb
push
fdivl
or
outsb
pop
mov
xchg
filds
out
push
mov
out
and
jle
imul
mov
jb
fnstcw
inc
push
neg
pop
shll
mov
popf
negl
jmp
sbbb
mov
sbb
loop
cmp
push
stos
dec
shrl
sbb
inc
add
test
push
sub
sar
les
cmpsl
fwait
mov
sahf
ficoms
negb
adc
sub
arpl
popf
repnz
nop
scas
cwtl
mov
pop
xchg
adc
fwait
scas
add
fcom
into
lcall
repnz
outsb
inc
mov
mov
xor
das
ret
or
fstpl
ljmp
sbb
out
add
mov
jl
inc
or
jg
cmpsb
cmp
pop
inc
xchg
mov
pop
enter
repz
call
dec
or
adc
push
push
add
in
test
idivl
icebp
insb
inc
push
push
and
pop
adc
mov
orb
or
sbb
sub
and
rolb
inc
inc
mov
mov
sbb
push
fdiv
mov
dec
push
lret
sti
call
ss
test
lahf
pop
pop
js
outsl
into
popf
stc
push
popf
into
popf
adc
xchg
jae
mov
cmpsb
add
inc
mov
jge
and
pop
pop
jge
cmp
mov
rcrb
xor
jge
sub
pop
lock
or
sbb
inc
cltd
int
outsl
lret
fidivl
cld
jae
iret
inc
mov
pushf
push
sbb
rcl
aam
popf
dec
xchg
mov
addb
shlb
xchg
std
and
jo
and
pushf
inc
push
fucom
arpl
mov
add
mov
das
or
or
lods
cmpsb
outsl
ss
out
ja
cli
xor
mov
sbbl
call
push
sub
movsb
div
ds
adc
das
pop
pop
or
cmp
sbb
loope
sbb
cmp
cmpsl
and
adc
pop
lods
mov
out
pop
jo
es
icebp
mov
fildl
and
lret
sti
pop
pop
dec
sub
mov
xchg
fwait
add
or
xor
in
outsb
cltd
inc
jle
invd
clc
jo
pop
mov
cmp
mov
jl
or
push
test
addr16
sub
scas
dec
add
jns
repz
mov
xor
mov
add
xor
and
jo
pusha
inc
nop
push
andb
mov
and
xor
ret
adc
add
xor
and
jo
pusha
inc
nop
push
andb
mov
and
xor
ret
adc
add
xor
and
jno
pusha
inc
nop
push
andl
adc
and
xor
ret
adc
add
xor
and
push
xchg
shlb
xor
leave
mov
xlat
je
fwait
aas
fmull
int3
pop
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
arpl
xor
sub
push
jbe
push
xor
and
inc
cmc
rcl
mov
test
jne
inc
push
push
and
adc
jecxz
repz
ret
int
aad
mov
xchg
arpl
jae
inc
fists
and
adc
jecxz
rcl
mov
mov
mov
idiv
icebp
pop
and
xor
push
cmp
sub
fs
call
outsb
fmuls
leave
xchg
ds
mov
data16
and
xor
pop
sbb
cmp
mov
ljmp
sbb
sbb
movsl
jbe
loope
leave
cmc
dec
dec
pop
in
in
les
mov
push
xchg
push
arpl
jne
inc
push
push
dec
xor
add
adc
adc
repz
cmp
sbb
xor
scas
stos
fcoml
adc
les
mov
repz
xor
pop
lcall
or
cmpsl
jne
adc
mov
movsl
xor
mov
lock
imul
push
and
adc
ret
shr
mov
popf
xchg
cmpsl
push
adc
add
sbbb
xchg
push
xchg
cmpsb
xchg
test
loop
icebp
jecxz
adc
adc
inc
ja
addr16
insb
push
es
test
push
ljmp
add
jae
add
imul
adc
ret
mov
test
jne
inc
push
push
and
adc
ret
mov
test
and
cmp
repz
xor
leave
ffree
into
aam
add
std
xlat
sbb
push
inc
pop
ljmp
addr16
dec
mov
imul
shrl
lods
add
xadd
gs
jo
insb
inc
pop
adc
push
pop
sub
test
popf
sbb
xlat
xor
xchg
out
adc
gs
aam
cmp
into
fnstcw
mov
sub
jno
sbb
mov
fcoms
cwtl
daa
ljmp
sbbb
jns
dec
xchg
inc
int3
insb
outsl
dec
gs
cmp
cmpsb
push
div
out
ret
or
ljmp
jp
jp
mov
pusha
lods
xchg
lock
pop
lret
int
sbb
hlt
ror
sub
andb
cltd
inc
jg
lret
fwait
sub
mov
xor
sub
rorl
mov
jl
out
out
in
sbb
sti
rcll
aas
dec
jns
xor
jbe
pop
imul
test
dec
inc
inc
pusha
xchg
aad
jo
arpl
loopne
add
in
and
xchg
loop
cwtl
push
adc
in
test
inc
icebp
jne
or
inc
mov
movl
hlt
jp
aam
hlt
xchg
xchg
in
pushf
sti
dec
xchg
xchg
cmc
mov
mov
js
push
pop
jb
mov
mov
loop
pop
test
mov
push
cmp
dec
fs
push
push
inc
adc
shll
add
dec
sbb
mov
std
inc
dec
cmp
or
nop
hlt
mov
xor
pop
push
test
add
cltd
xor
inc
inc
call
cmp
mov
in
xor
outsl
pop
call
mov
cmpb
and
mov
gs
mov
cmc
xor
mov
aas
pop
fwait
mov
mov
xor
xor
xchg
or
or
ljmp
pushf
sub
mov
inc
add
mov
lods
repnz
popa
cmp
mov
or
lods
test
push
addl
pop
movsb
mov
cld
cld
imul
je
xchg
aas
pop
test
cmpsl
pushf
mov
and
loopne
inc
or
aam
sbb
or
jmp
cwtl
fisubrs
repz
mov
xor
lods
aaa
out
xor
pop
loope
js
mov
inc
push
dec
sub
sub
add
fldz
into
das
in
bound
mov
pop
arpl
dec
dec
test
cmp
test
bound
xor
insb
aam
or
and
mov
stc
cmp
jns
rcll
jae
cs
leave
out
inc
hlt
pop
sarl
jo
loopne
adc
mov
out
idiv
hlt
sub
inc
repnz
xor
les
cmp
adc
or
repz
call
cmp
and
jmp
sbb
movsb
sbb
movsb
mov
or
xor
lds
xchg
mov
xchg
call
jge
popa
mov
cmp
and
xor
or
xchg
sar
shr
fs
xchg
and
in
in
pop
dec
and
repnz
push
je
dec
adc
insl
xchg
scas
mov
aad
mov
mov
xchg
ret
rcrl
std
sbb
pushf
ret
jno
or
cwtl
roll
dec
fucomi
repz
pusha
fdivrl
xchg
ret
jae
sub
sbb
scas
shll
sti
icebp
add
push
mov
pop
out
cli
xchg
loope
cmpsl
ljmp
mov
into
cmp
xchg
mulb
ds
mov
fucomi
out
or
arpl
rorb
mov
outsl
into
out
jae
stos
inc
sarb
inc
mov
mov
outsb
add
outsb
adc
xchg
bound
es
xor
scas
orl
sbb
rol
pop
adc
fwait
mov
fsts
dec
lea
adc
cmc
js
mov
cmpsb
in
insb
fs
icebp
mov
lcall
xchg
test
ficoml
push
cmp
jno
or
add
jecxz
jo
or
adc
adc
in
push
adc
into
push
cld
dec
cmp
enter
mov
cmp
adc
ret
mov
cmp
ds
les
inc
dec
in
push
dec
add
xchg
fbld
arpl
out
cld
jb
in
movsb
adc
rorb
jns
jg
js
push
cmpsl
lret
imul
push
int3
xor
lcall
sub
pushf
int3
jnp
jns
dec
lret
in
sbb
ret
and
jle
stos
cmp
rorl
ss
mov
lret
es
fldl
icebp
fwait
inc
call
fcomi
mov
addr16
fwait
jo,pt
mov
insb
dec
push
xchg
jbe
sub
add
sar
mov
inc
psrad
mov
jnp
insb
jns
mov
xlat
stos
fistpl
cmp
inc
mov
mov
pop
pop
mov
loopne
inc
aad
rorb
imul
rol
xlat
ret
cmpsl
lret
mov
mov
cwtl
add
fisubs
popf
jb
inc
mov
hlt
adc
mov
add
insl
call
adc
jns
out
mov
insb
test
daa
sub
pop
jb
mov
xlat
mov
insb
push
cmp
gs
test
push
and
mov
pushf
sub
loop
out
cmp
lock
imul
or
xchg
jno
jb
repnz
loop
mov
jmp
cmp
sub
movsbl
jnp
test
ror
xlat
sbb
scas
sub
push
enter
mov
insb
or
mov
mov
xor
add
ss
mov
pop
dec
pop
adc
sbb
inc
xor
inc
ret
push
push
push
stos
push
bnd
xchg
push
jns
decb
mov
adc
rcrl
dec
test
out
aam
int3
sbb
out
lcall
mov
loop
push
or
cli
push
add
mov
mov
adc
ret
xchg
int3
insb
mov
movsb
lret
popw
dec
divl
test
mov
negb
shlb
scas
repz
push
cmp
pushf
pushf
or
or
out
bound
mov
push
xchg
movl
fwait
mov
add
push
jae
stos
stos
xchg
cmp
clc
call
sub
mov
push
lcall
imul
in
repnz
and
mov
mov
inc
cmpsl
ficoms
mov
fists
nop
add
loopne
xchg
cmp
mov
xlat
push
ss
movsl
pop
pop
lock
fwait
inc
sbb
enter
sbb
mov
idiv
cmp
aad
pop
dec
hlt
sbb
add
in
lcall
sbb
jae
fists
inc
fwait
jmp
pop
sbb
sub
xchg
dec
insl
xchg
adc
mov
push
test
adc
add
pop
or
push
xor
insl
mov
hlt
xchg
or
push
mov
inc
outsb
fcom
hlt
xchg
addr16
lcall
add
fstpl
and
xchg
or
sub
mov
xchg
aaa
out
sbb
inc
push
sbb
jge
aad
leave
aaa
pusha
std
popa
negl
inc
movsl
leave
scas
push
outsb
cs
pop
or
push
outsb
pusha
imul
cmp
jl
lea
pop
or
sbb
and
xchg
movsl
xchg
pushf
push
pushf
cwtl
xchg
aad
and
mov
and
lret
insb
and
jbe
jns
aas
hlt
into
jecxz
add
fldenv
mov
ret
aad
jbe
dec
xlat
mov
out
add
dec
dec
pushf
arpl
push
lods
xchg
ljmp
inc
movsl
sub
cld
call
mov
iret
xchg
ret
adc
cltd
std
pop
dec
dec
fadd
je
mov
inc
cmpsl
sbb
cmp
pop
pop
inc
adc
mov
and
jbe
xchg
jo
andb
int
mov
sub
out
push
out
fcoml
into
incb
js
xchg
adcb
add
shrb
test
inc
jmp
jno
sub
add
inc
addr16
les
mov
xor
pop
inc
xchg
xchg
pusha
push
aad
jae
add
popa
scas
or
fs
pop
lahf
jno
adc
sbb
lcall
cmpsb
test
or
iret
or
and
mov
test
pop
sahf
xor
sub
aam
jb
jo
pop
inc
jbe
rcrl
mov
je
mov
bound
mov
xlat
lock
pop
imul
jno
clc
dec
sahf
repz
fadds
dec
xor
push
test
xor
ljmp
repz
movsb
fbstp
mov
sub
and
pop
sub
lds
daa
mov
sbb
test
imul
jae
addr16
pop
negl
xor
mov
repnz
push
ss
in
jnp
lock
test
cli
or
jle
jo
ja
push
cmp
stc
pop
jns
andb
int3
add
jb
and
cs
jmp
jp
push
or
ficomps
loopne
or
mov
pop
repnz
pop
inc
adc
push
js
xor
js
mov
stos
out
inc
or
loop
cmp
xchg
rcr
mov
jle
xchg
mov
jle
cli
sbb
sub
mov
dec
hlt
in
inc
notb
or
push
cmc
cmp
and
ret
les
mov
jne
outsl
fistpl
jno
xchg
stos
pop
sbb
in
call
mov
lock
dec
stc
push
mov
cmp
mov
mov
out
xchg
or
rclb
pushf
push
mov
mov
notl
test
xchg
fnstsw
js
arpl
popf
outsb
inc
loope
jle
pop
ss
outsl
rclb
ds
pop
sub
scas
jp
pop
call
lods
mov
das
iret
pusha
movsb
test
push
inc
fbstp
into
repz
pop
lret
popf
bound
add
ds
dec
pop
inc
dec
inc
add
pop
scas
xchg
xchg
nop
adc
adc
leave
push
decb
xor
push
repnz
inc
xchg
nop
fisttpl
jle
fwait
sbb
and
call
arpl
addb
dec
enter
cmpsl
js
mov
nop
add
pop
addl
nop
jns
scas
insl
dec
adc
xor
xchg
dec
std
std
jg
jg
movsb
decl
cmp
imul
daa
add
xchg
inc
mov
pop
dec
jne
xchg
xchg
cmp
neg
int3
pop
ret
sub
imul
add
popa
sti
pop
mov
stos
push
decb
adc
sti
pop
dec
mov
add
adc
scas
sbb
out
add
notb
out
popa
xchg
and
xchg
lds
cmpsb
jbe
inc
lret
add
adc
cmp
mov
std
pop
scas
inc
xlat
addr16
insl
insb
push
cmp
loopne
test
jno
xlat
inc
nop
sti
call
sbb
sbb
rclb
mov
sub
loopne
jl
jno
jle
lcall
xchg
mov
test
into
movsl
popa
fcomps
psubsw
adc
sbb
cmpsl
and
repnz
sub
fidivl
mov
rclb
sbb
loop
or
cmc
pmuludq
addr16
sub
push
and
sbb
and
mov
addl
sahf
sub
scas
outsb
lret
cmpsl
icebp
imull
jp
into
cmpsl
les
cmp
popf
lcall
ljmp
xsavec
mov
and
mov
inc
add
dec
dec
shrb
ljmp
sub
lods
rorb
fisubrs
push
adc
mov
out
iret
pop
inc
stos
fdivrs
dec
mov
fcompl
cmp
cmp
insl
mov
imul
inc
mov
rcll
int
mov
push
mov
pop
adc
stos
mov
leave
mov
lcall
shr
add
test
sbb
jmp
imul
clc
push
mov
mov
pop
roll
inc
sbb
out
cs
xchg
insb
outsb
inc
inc
imul
shrl
cmpsl
dec
fs
or
incl
loope
jle
fucomp
stos
and
jecxz
pop
repnz
imul
jbe
cmp
cwtl
iret
daa
test
movsl
sub
adc
movsb
mov
test
paddusw
scas
adc
push
adc
mov
int
pop
repz
push
lds
iret
aaa
dec
adcb
imulb
int3
and
pop
cmpsl
lds
mov
gs
aas
insb
stos
popa
outsl
insb
fldenv
repz
pop
xor
lock
mov
gs
roll
out
les
std
popa
aad
lods
in
mov
pop
stos
dec
fidivs
fnsave
movsl
in
adc
cmc
mov
dec
mov
xchg
sbb
aas
dec
adc
dec
dec
repz
cmp
lock
rcrb
mov
xchg
pop
xor
adc
push
xchg
cld
lret
imul
adc
and
mov
or
mov
push
adc
mov
enter
adc
xchg
ja
sbb
dec
lods
dec
ds
mov
mov
sbb
and
fidivl
shlb
pushf
lods
movsl
adc
or
and
lcall
xor
mov
xor
xor
scas
lret
insb
icebp
leave
dec
in
movsl
sub
jns
inc
xchg
repnz
mov
loop
or
dec
cli
sbb
jnp
jp
add
stos
addb
ljmp
dec
lods
adc
push
cmp
push
insl
lret
mov
inc
push
push
inc
ficoml
mov
ror
sub
fidivrl
mov
xlat
rclb
fxch
mov
inc
aaa
xor
jo
hlt
in
adc
jae
out
pop
ss
ret
sub
jno
ja
fcomps
pop
jo
aas
scas
outsl
mov
ss
ret
imul
sub
sub
dec
pushf
int3
fisttps
or
dec
push
int
inc
ljmp
sub
sbb
pop
mov
mov
mov
rcll
mov
mov
aas
into
out
in
test
ljmp
mov
and
call
iret
xchg
pop
popf
fisttpll
pop
cmp
gs
mov
lahf
jo
mov
add
icebp
adc
aam
push
incb
mov
mov
std
fimull
sbb
in
push
cmpsl
lods
popa
js
imul
dec
inc
cmc
mov
in
jns
mov
int
mov
fcmovb
dec
and
imul
sbb
ret
sub
jno
jp
adc
jne
sub
pop
xor
out
aam
dec
aad
test
testl
push
xchg
push
pop
ja
stos
mov
and
and
movsb
int3
aam
inc
jmp
out
or
stc
pop
arpl
mov
xor
dec
bound
pop
in
inc
pop
pop
fldenv
fwait
jbe
sti
dec
stc
mov
mov
adc
add
mov
xchg
xchg
pop
outsb
icebp
stos
xchg
out
loope
cs
or
scas
or
cmpsb
rclb
xor
dec
adc
flds
inc
data16
andps
dec
or
das
jae
jle
lods
jge
ret
add
imul
fcmovnb
sti
imul
or
sbb
ffreep
mov
lcall
idiv
lret
cwtl
pop
jnp
pop
sarl
enter
fsubl
or
and
mov
cli
dec
and
stc
adc
leave
inc
int
lods
pop
mov
add
and
loopne
jl
push
mov
push
mov
sti
subb
jmp
xchg
loop
int
mov
cltd
lock
repnz
ja
xchg
mov
xchg
push
push
test
sub
dec
pop
sub
nop
fdivrs
sub
lods
lret
fsts
sbb
inc
lahf
mov
xchg
arpl
sbb
je
popa
outsl
push
or
mov
or
int3
xchg
or
inc
push
xchg
push
jle
push
xchg
jle
cs
cmpsl
jno
cmp
jmp
inc
xchg
or
inc
out
pushf
rcrb
push
jnp
pop
out
cmp
jbe
adc
daa
shrb
mov
repz
lods
rcrb
lock
adc
mov
push
dec
mov
addr16
cltd
fstl
movsl
xlat
cmpsb
xor
sbb
cmp
add
mov
push
mov
and
mov
mov
mov
dec
xchg
xchg
daa
and
pop
testb
cmpsb
or
push
test
jl
xor
or
add
scas
sti
jbe,pn
jns
jb
ret
jecxz
pop
leave
int3
and
jg
xor
enter
jge
lods
inc
cmc
repnz
mov
rcll
jbe
cmp
nop
in
cltd
xor
and
dec
test
daa
fisubs
mov
xchg
adc
mov
cmp
pop
and
inc
nop
and
jae
mov
test
fsubrp
insb
lods
inc
lods
ja
popf
sbb
in
inc
stc
orl
fpatan
pop
test
paddsw
adc
cmp
cmp
sub
push
cmp
dec
cmp
imul
js
adc
movzbl
mov
mov
ja
mov
imulb
pop
or
xchg
xchg
cs
jb
in
cwtl
adc
pop
mov
popa
mov
and
lods
mov
and
dec
stc
push
icebp
and
xorb
sbb
sbb
add
loop
hlt
cmpsb
mov
sub
jno
xor
inc
xchg
addl
cmp
stc
adc
movsl
or
cmc
fidivl
out
pusha
ds
into
xor
cmp
cmp
incb
jle
push
mov
aam
cli
or
mov
shll
push
les
cs
jne
add
iret
lods
dec
inc
leave
movsl
fs
push
cwtl
lea
loop
adc
cmc
sahf
lret
sbb
int
aam
mov
roll
jbe
outsl
imul
adc
cltd
inc
sbbl
loopne
sub
lods
loopne
lea
adc
pop
ja
mov
push
jne
int3
ja
mov
sub
push
jle
ret
int
mov
std
fistpl
mov
test
cmp
leave
les
push
adc
dec
ljmp
scas
int3
pop
fimuls
xor
inc
cmp
push
insl
pop
repz
dec
mov
fwait
sbb
stos
int3
lods
sub
xor
inc
test
adc
mov
xchg
inc
icebp
push
or
cmp
sub
cmc
orb
loope
pop
adc
push
ja
dec
adc
clc
push
test
lcall
xor
cwtl
rorl
mov
sbb
push
neg
mov
inc
lea
mov
or
push
gs
xlat
pop
fbstp
lret
cltd
sub
xchg
dec
pop
mov
sahf
mov
mov
pop
lds
mov
jp
scas
imul
imul
arpl
jbe
cmp
mov
aaa
and
jbe
or
fidivrl
mov
jp
sub
cs
stos
aam
popa
int
fnstenv
push
movsl
xchg
push
imul
sub
sub
xchg
stc
test
cmp
xchg
ficomps
aad
out
cmp
and
sbb
sub
icebp
es
int
push
insb
aad
add
jo
cmpsb
ljmp
dec
jl
dec
xor
jl
mov
adc
pop
sbb
scas
repnz
fsubrl
nop
push
push
jnp
cwtl
call
popa
sbb
fwait
stos
mov
ljmp
xchg
jne
daa
push
cltd
scas
stc
xchg
pop
xchg
xlat
cmpsl
popf
push
push
jno
xchg
jbe
ljmp
push
stos
sub
xor
push
and
popf
ja
addr16
push
pop
mov
sbb
xor
ror
mov
xor
shlb
stos
push
fxch
cmpsb
dec
mov
xchg
dec
stc
xor
insb
jae
push
pop
mov
inc
pop
setns
testb
sub
mov
jae
mov
rcll
jbe
out
jo
add
dec
adc
jns
xchg
rcll
jne
lret
outsl
repnz
imul
xchg
push
adc
sub
lret
cmp
test
data16
cli
sub
xlat
repnz
jmp
inc
subl
sub
stc
das
push
sbb
addr16
icebp
xor
das
ret
adc
push
inc
psllw
ret
ficoms
int
je
data16
adc
hlt
push
popf
aas
adc
mov
test
jmp
xor
push
jb
subb
pop
or
mov
cwtl
push
lods
and
add
fsubrs
pop
int
and
nop
roll
and
jo
push
sub
ljmp
es
insl
jnp
jmp
mov
mov
rcll
sbb
pop
dec
je
jecxz
jae
test
aaa
sbb
gs
mov
ret
xchg
insl
rcr
int3
loopne
je
push
xor
or
mov
jmp
xorb
xlat
aas
js
jl
xchg
packsswb
mov
mov
cmpl
xchg
mov
and
jo
xor
loop
scas
mov
fnstcw
mov
inc
adc
mov
sbb
xchg
mov
pop
dec
mov
mov
les
jnp
adcl
sub
stos
ljmp
sbb
adc
frstor
xor
cld
imulb
mov
mov
inc
push
inc
cmp
orl
mov
cltd
adc
cmp
stos
ja
fdivrs
xor
das
in
ret
mov
mov
bound
ja
pop
dec
ja
cmp
sub
add
clts
test
sti
rcrl
and
mov
test
adc
scas
mov
jo
lds
ljmp
repz
and
je
movsl
mov
and
ljmp
pop
out
push
cmp
fisubl
xor
push
ljmp
xor
lret
jbe
test
sub
fcmovnu
sbb
mov
xchg
inc
push
push
and
adc
ret
mov
test
jne
inc
push
push
and
adc
ret
mov
test
jnp
pop
push
push
and
adc
ret
mov
mov
xchg
inc
mov
xor
sbb
or
imul
cmp
jnp
imul
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
push
outsl
ficomps
dec
mov
pminsw
ucomiss
in
fisttps
cmp
push
idivb
outsl
ficomps
dec
mov
pop
mov
ljmp
jo
dec
iret
fimull
push
lahf
push
and
outsb
outsl
pop
pop
or
aas
out
mov
jbe
jle
add
cmp
jb
imul
into
pop
lcall
rcrb
insl
adc
lds
pusha
aas
dec
bnd
jg
xor
push
mov
cli
out
xchg
adc
scas
mov
fisubrs
lea
ss
loope
les
out
mov
inc
mov
inc
mov
dec
fwait
sbb
pop
mov
imul
adc
mov
mov
sub
or
icebp
jnp
adc
inc
mov
rcr
movsbl
ds
mov
in
cs
jnp
out
jns
loope
inc
xor
movsb
sbb
xchg
jmp
stos
dec
xor
lahf
push
jo
jg
outsl
ficomps
dec
mov
pop
ss
fists
pop
mov
push
mov
push
lcall
pop
lea
jnp
das
testb
das
mov
push
dec
ljmp
add
push
dec
std
and
das
popf
cmp
dec
cmp
dec
fisttpl
aaa
sti
or
mov
jle
outsb
out
pop
fisttps
ds
push
jg
outsl
ficomps
dec
mov
pop
mov
jle
outsb
out
pop
fisttps
ds
push
jg
inc
jbe
xchg
mov
lret
push
and
dec
frstpm(287
xor
mov
fnstcw
xlat
mov
push
je
clc
add
andl
sbb
sbb
jne
sub
lock
cmc
and
outsb
adc
jo
jle
addr16
mov
sbb
fcos
sbb
aad
mov
inc
das
sbb
test
or
in
popf
mov
mov
mov
xor
sub
or
nop
sub
mov
adc
enter
dec
data16
nop
lret
jge
xchg
push
mov
into
lcall
test
cwtl
aaa
leave
movsl
adc
fimull
mov
ja
clc
or
and
adc
pop
imul
repz
push
pop
add
or
aad
add
loopne
je
xchg
sbb
lret
icebp
pop
sbb
pusha
add
sarb
pushf
mov
movsl
fdivs
sub
mov
dec
pop
xor
jnp
push
xor
lahf
stc
xchg
mov
imul
rolb
addr16
loope
aam
mov
and
xchg
test
je
jbe
mov
test
and
aas
les
not
mov
arpl
cli
sub
out
cmp
fldenv
add
sub
sub
daa
cmp
push
inc
jne
xor
leave
popa
push
imul
pop
mov
stos
pusha
ljmp
jo
push
lods
sub
xor
mov
and
pop
mov
sub
add
xor
imul
in
jno
add
imul
in
or
dec
addr16
faddl
ss
cmc
fistpl
dec
xor
xchg
mov
cli
pop
cs
test
sbb
pop
xor
dec
pop
int3
push
xchg
inc
jg
push
mov
test
ret
xchg
dec
add
jbe
mov
sahf
outsl
dec
push
aas
sub
pmullw
sbb
and
or
out
add
add
loop
mov
mov
decb
out
push
push
mov
loopne
cmpsl
rcll
sbb
roll
movsb
data16
aas
int3
adc
inc
hlt
fistps
aam
out
mov
test
push
and
sbb
jg
sub
in
mov
xchg
in
inc
and
leave
xchg
push
fisubrs
in
pop
pop
adc
mov
pop
outsb
push
pop
pop
pusha
or
mov
dec
imul
ds
mov
mov
mov
ret
jns
popa
adc
mov
pop
psubb
popa
popa
jecxz
addr16
add
rorl
fucomp
pop
push
aaa
lock
jmp
cltd
push
inc
shlb
dec
loopne
mov
adc
out
arpl
mov
sbb
std
aad
test
cli
jmp
mov
stc
xor
icebp
cwtl
loope
cmp
call
push
fcmovbe
movsl
repz
xor
call
mov
and
into
test
popf
sbb
iret
xchg
out
loopne
loopne
sahf
pop
xchg
movsl
push
jg
jnp
push
into
ret
push
lcall
clc
add
sub
sahf
dec
jno
stos
fildl
call
dec
loop
xchg
ss
or
xor
or
jmp
fistl
das
push
imul
out
inc
inc
int
jg
cmp
xchg
insl
testb
inc
pop
cmpsl
mov
xchg
stos
mov
sbb
aaa
and
pop
movsb
rolb
imul
ret
adc
sbb
push
fisubrs
mov
aaa
add
loopne
inc
dec
xchg
jl
sbb
mov
xor
std
push
cmpsl
aaa
fcoml
insl
hlt
test
sub
push
inc
adc
push
repnz
mov
push
scas
hlt
jmp
xor
or
xchg
cmp
xor
push
jns
neg
and
int3
repnz
inc
aas
enter
pop
pushl
mov
mov
movsl
sub
lret
mov
out
jge
jge
cmp
dec
je
pop
std
ret
cmc
test
imul
shl
mov
fisubl
sbb
xchg
mov
clc
ljmp
cmpl
sahf
dec
mov
sbb
push
into
fcomps
inc
xchg
jae
inc
ret
fisttps
sub
push
les
int3
adc
lea
fs
or
lods
xor
xor
jnp
in
sti
in
sub
cmp
push
pop
inc
jle
and
dec
add
push
lret
in
lret
out
lahf
outsb
adc
lahf
rcll
and
inc
sub
mov
push
test
xor
in
cs
or
aas
or
push
xor
or
pop
nop
subl
sbb
out
fsubr
add
xchg
sub
aad
cmp
pop
adc
outsl
or
lock
sub
xchg
dec
mov
mov
cmp
and
pop
inc
push
outsb
mov
and
es
mov
xor
jns
fidivrl
inc
xor
insb
sub
add
push
jmp
or
jp
mov
sbb
mov
je
cwtl
mov
sub
ss
scas
stos
cli
lea
cmp
loopne
lret
lds
adc
es
popa
or
outsl
jmp
testb
mov
aas
add
sbb
adc
mov
lock
addl
mov
or
sub
mov
mov
jle
out
rcrb
loopne
std
mov
cltd
in
dec
sub
jge
mov
call
dec
lea
inc
dec
je
sbb
or
popf
js
fcoml
dec
stos
inc
lods
sub
imul
sbbl
xchg
fadds
mov
lret
push
in
sbb
and
pop
mov
jle
add
std
jl
xor
or
jae
inc
leave
cmpsl
mov
pushf
inc
mov
push
shll
cmp
pop
mov
lods
jp
dec
ljmp
jmp
out
dec
or
push
push
cld
add
pop
in
or
inc
ficompl
mov
test
adc
rcrl
jmp
out
pop
push
mov
add
push
xchg
ljmp
xchg
jge
mov
outsb
mov
jno
xchg
js
faddl
mov
xchg
inc
add
adc
xchg
rolb
rcrb
sub
fnstcw
pop
fwait
in
dec
jmp
mov
call
out
fsubrs
or
sbb
pop
loope
xchg
lods
sbb
in
movsl
adc
mov
inc
lret
pop
xor
cmp
leave
popa
arpl
cmpl
xchg
roll
cs
adc
push
aaa
popa
xchg
push
inc
pop
push
jae
jo
repnz
xchg
fidivl
rol
jp
lret
out
negb
pop
jecxz
jae
movsb
push
sub
stc
imul
mov
ds
iret
mov
ror
adc
inc
jo
sbb
cmp
cmovle
adc
xchg
xchg
xor
pop
sti
aam
ss
sbb
mov
and
lds
popa
popa
dec
inc
mov
cmp
clc
mov
xchg
mov
pop
rcll
cmc
aad
fstp
dec
mov
mov
iret
es
pushf
mov
loopne
jle
idivb
lea
notb
pop
pop
pop
pop
lcall
add
add
js
lods
scas
pop
sub
or
mov
and
mov
divb
lds
lock
es
cmp
outsb
push
adc
addl
push
stc
ja
mov
cltd
sbbl
fimuls
test
and
ffree
push
pop
xor
mov
or
sub
nop
sub
jo
push
xor
mov
inc
cmpsb
cmpsl
sbbb
shlb
repz
dec
iret
fprem1
mov
mov
dec
mov
adc
popf
lcall
mov
xchg
xlat
add
jb
js
xchg
call
in
jmp
lock
loopne
inc
mov
sbb
and
sub
jbe
popf
cltd
add
push
sub
gs
clc
ss
xor
cmp
leave
fidivl
mov
cmpl
mov
stc
push
adc
lcall
inc
popa
push
into
out
stos
sub
ficoml
jae
mov
cld
jmp
mov
fistl
loopne
out
jo
xchg
inc
lahf
xor
sbb
pop
imul
das
fcom
xor
xchg
mov
jp
cmp
sub
das
cmp
adc
and
sbb
fisubrl
jl
lods
dec
das
insl
fisttpll
fbld
lret
adc
adc
adc
cmp
dec
inc
js
movsb
push
dec
or
inc
in
mov
sets
das
pop
cmp
dec
lock
add
push
dec
sbb
push
xchg
stos
lret
xchg
push
inc
ss
addl
push
popf
clc
or
lcall
jns
mov
add
shr
in
xlat
out
or
mov
mov
icebp
dec
or
dec
pop
jo
xchg
push
add
faddp
mov
cmp
sub
aas
fistpll
stos
inc
mov
dec
sahf
push
adcl
adc
mov
fs
mov
aam
jbe
aas
mov
xchg
fbstp
call
jne
mov
xchg
lahf
aas
mov
or
push
movsb
mov
jle
mov
leave
and
testl
mov
pop
shll
arpl
mov
pop
dec
dec
push
push
xchg
bndstx
rcrl
dec
test
mov
out
shl
cltd
sbb
bound
hlt
pusha
outsb
mov
stc
lds
rcrl
sub
push
sbb
adc
insl
lret
xor
sbb
movsb
inc
mov
imul
push
mov
inc
inc
in
and
pop
int
lods
int3
dec
adc
mov
iret
addb
rclb
fisubs
mov
out
jecxz
out
decl
mov
pop
in
xchg
lods
addr16
pop
or
loopne,pn
adc
mov
cld
arpl
add
xchg
mov
jecxz
cmp
insb
jp
sub
push
jno
jo
push
dec
xor
fildll
jno
jnp
sbb
mov
sarl
clc
in
or
xor
je
es
loope
pushf
sub
or
fxch
jmp
rcrl
ds
inc
mov
xor
xor
push
mov
pop
outsb
sub
dec
movsb
pop
pop
out
loop
mov
cmp
dec
xor
inc
mulps
dec
dec
mov
shrb
cld
push
cmpsb
xchg
popa
mov
mov
out
mov
into
add
test
mov
fwait
cltd
mov
fidivrs
cli
xchg
loope
dec
or
aam
shlb
ds
pusha
mov
jp
and
out
push
nop
jbe
pop
push
sub
pop
jo
shlb
aaa
xchg
fidivrl
push
xchg
mov
cmpsb
adc
xor
pop
add
scas
add
icebp
and
xor
das
cmp
push
mov
or
imul
pop
xlat
je
mov
shrb
xor
xor
push
jp
or
addr16
movsl
stc
pop
push
dec
sbb
ret
out
sub
in
adc
pop
mov
mov
lret
cltd
xchg
mov
outsl
dec
in
sbb
add
xor
adc
sub
test
xor
call
ja
shrl
popa
adc
clc
scas
mov
iret
fildl
pop
dec
popa
mov
xchg
test
scas
mov
scas
into
insl
inc
cld
dec
sbb
cmpsl
mov
mov
push
and
pop
bound
test
lea
mov
sbb
mov
mov
mov
sub
mov
mov
repnz
repnz
pop
pop
xor
push
and
enter
repnz
mov
cmp
mov
cs
jle
xchg
and
cmpsl
mov
shrl
leave
cmp
xlat
mov
lods
mov
sti
inc
adc
inc
jecxz
xlat
std
jae
cmpl
jmp
jl
fildl
sub
fdiv
imul
sbb
cwtl
push
ret
icebp
push
xchg
mov
into
rol
pushf
push
in
xchg
in
dec
lods
pushf
xchg
sti
rcr
mov
adc
add
enter
push
jne
lret
and
push
and
mov
sahf
mov
ret
popa
ret
jae
imul
jns
push
daa
push
and
and
outsl
rolb
sub
mov
lret
cmp
icebp
xor
adc
jl
sub
add
aas
dec
xchg
xlat
lahf
sbb
mov
addb
pop
pop
mov
or
es
lret
xchg
int
pop
outsb
push
push
pop
add
movl
cltd
shll
jmp
sbb
nop
stc
fadds
xchg
add
div
mov
mov
mov
cmpb
add
adc
cwtl
jge
daa
jecxz
xor
jle
cmpsb
test
fxsave
push
push
cmp
inc
dec
pop
enter
jecxz
sbb
xchg
dec
addl
out
inc
mov
dec
cmp
inc
sub
mov
sbb
adc
ja
ret
in
in
dec
les
cmpb
adc
pop
pop
jecxz
and
dec
pop
inc
ja
pop
xchg
out
inc
mov
push
into
sbb
jo
aaa
sbb
push
mov
or
lret
test
daa
push
mov
push
daa
adc
pop
test
lcall
testb
subb
ret
ja
push
je
out
adc
inc
jb
add
mov
cmp
sbb
fwait
mov
or
pop
stos
adc
pop
loopne
loopne
xor
push
inc
inc
push
xchg
out
push
test
xor
or
mov
into
dec
subb
mov
lret
push
insl
lods
int3
add
jbe
mov
pushf
stos
mov
mov
faddl
xchg
mov
pop
xchg
test
out
or
loopne
lods
int
add
mov
mov
into
sub
test
mov
sub
adc
push
pusha
test
gs
sbb
out
add
pop
mov
xchg
cmpsl
sbb
inc
leave
xchg
xchg
jnp
push
cmp
jne
push
mov
mov
inc
aas
setle
dec
add
sub
mull
sbb
mov
leave
outsl
or
inc
jnp
in
shlb
test
mov
jmp
mov
push
out
inc
push
jecxz
iret
add
xchg
inc
xchg
les
xor
adc
dec
xchg
cs
push
xor
in
push
or
mov
push
dec
mov
and
arpl
hlt
jnp
std
xchg
xchg
in
enter
clc
pop
addb
cld
mov
das
dec
inc
cmp
in
xchg
push
pop
xchg
out
sub
dec
mov
test
or
pop
ljmp
cmp
hlt
add
xchg
dec
lret
mov
fists
test
adcb
add
sub
add
pop
iret
test
bound
shll
or
dec
dec
mov
ret
fisttpll
ja
cmp
add
fldt
jecxz
mov
daa
fs
lahf
add
lahf
mov
mov
or
sbb
xchg
add
pop
push
std
cmp
and
nop
inc
icebp
arpl
incl
jnp
inc
in
add
out
xchg
dec
xor
pop
mov
dec
adc
mov
sbb
mov
mov
lret
inc
inc
cmc
add
inc
mov
cltd
inc
inc
int3
jl
pop
dec
mov
scas
out
in
imul
mov
jle
add
push
add
xchg
mov
scas
inc
push
mov
xchg
inc
leave
loopne
insb
push
ljmp
push
fxch
xor
ljmp
into
push
sub
cmp
shrb
imulb
loope
shrb
hlt
lods
cld
test
out
push
dec
mov
imul
sub
sbb
or
add
popa
pusha
mov
xor
mov
int3
push
icebp
outsb
inc
mov
mov
cmp
pop
out
mov
ja
adc
cmpsb
sub
pop
or
add
or
pop
imul
jns
bound
sub
pop
or
jmp
int
jge
scas
popa
add
out
jge
mov
mov
pop
loope
add
mov
testl
je
lret
and
testl
mov
adc
js
pop
mov
mov
jne
je
cmpsl
push
push
mov
cmp
repz
push
stos
jae
mov
outsl
incl
push
cli
inc
sbb
imul
scas
leave
lcall
sub
loop
cmp
sahf
scas
push
scas
jno
add
or
adc
into
outsl
mov
dec
dec
mov
pop
fcomps
inc
jl
call
xchg
bound
clc
les
inc
pop
test
cmpsb
sbb
jl
mov
adc
inc
ret
mov
pop
in
mov
inc
into
sub
xor
adc
pop
out
add
jl
out
xlat
jmp
aad
mov
idivb
cli
lret
mov
adc
fildl
sbb
fdivrl
fldenv
pop
jno
cmp
test
xchg
add
mov
adc
mov
fdivrl
arpl
movsl
ds
ja
fbld
inc
lods
mov
xchg
test
jne
inc
fimull
shl
lods
xchg
test
pop
dec
pop
pushf
or
outsl
test
lret
xchg
and
stos
inc
xchg
push
hlt
xor
mov
and
pop
dec
jb
lock
cmp
jle
lock
mov
mov
int
sbb
sbb
out
fimull
mov
xchg
xchg
cmpsl
pop
aas
pop
hlt
mov
fisttpl
mov
lds
inc
insb
fwait
stos
add
sbb
imul
or
repz
loop
leave
pop
lods
and
pop
xor
ret
fisubs
add
ljmp
cmp
pop
iret
cld
mov
cmc
and
inc
cmp
test
lods
mov
pop
xorb
int3
gs
call
dec
inc
xor
imul
jno
idivl
sbb
rolb
push
roll
sarb
cmp
jp
jl
mov
into
lea
xchg
notl
mov
sbb
ret
adc
cmp
add
inc
xor
dec
sub
inc
add
mov
insb
jecxz
pop
mov
test
jb
stc
and
and
cli
fsub
testl
xor
les
int
cmp
jmp
inc
add
add
test
jecxz
sub
xchg
cmpsb
adc
adc
cld
mov
dec
in
jle
mov
repz
push
xlat
ds
clc
aad
clc
jge
dec
lret
pop
xor
cmpsl
jo
out
xchg
xor
andb
jmp
cs
loopne
rorb
lret
mov
push
push
add
lods
sbb
loopne
push
dec
clc
inc
mov
cwtl
pop
fistpl
std
jl
xor
mov
pop
out
mov
cmc
adc
jmp
dec
mov
push
add
es
and
aad
ret
adc
loope,pn
pop
rcrb
xchg
pop
mov
les
inc
cs
lcall
arpl
pusha
cltd
out
cmp
stc
jp
xor
push
mov
js
les
mov
xchg
call
addr16
xlat
iret
fdivr
loope
pop
jb
or
jmp
outsl
divb
xchg
sbb
mov
fnstsw
inc
bound
jb
dec
hlt
icebp
dec
push
push
or
adc
pusha
orb
call
call
jmp
mov
ljmp
fists
dec
mov
ret
and
push
mov
sahf
enter
repnz
enter
test
add
inc
adc
pop
jmp
push
lret
es
stc
cwtl
inc
mov
mov
scas
jo,pn
jne
xchg
and
popa
xchg
in
iret
ret
stos
movsb
jle
enter
cltd
sbb
push
test
push
push
mov
jae,pn
dec
mov
add
mov
push
or
in
pop
mov
nop
add
inc
fucomip
daa
stos
push
push
dec
xchg
inc
push
push
inc
ds
in
push
lds
pop
cmpb
mov
xchg
xchg
push
sbb
pop
inc
std
add
and
cmpsl
sahf
rolb
neg
out
adc
into
cmp
stc
mov
xchg
scas
test
adc
push
scas
dec
or
adc
fwait
bound
cld
xchg
pop
mov
cltd
pusha
out
push
jl
test
and
pop
pop
pusha
out
push
testl
cli
mov
mov
sbb
mov
jno
and
mov
xchg
call
sbb
inc
sbb
xor
sub
xchg
loop
pop
add
out
fsts
mov
in
adc
push
es
test
out
pop
cwtl
and
mov
mov
fmull
sbb
cmp
dec
jg
and
mov
sub
stos
or
push
mov
lahf
mov
stc
icebp
js
daa
cmp
dec
adc
mov
in
mov
cmp
out
outsb
test
add
sub
or
xchg
mov
adc
rolb
pop
shrb
add
insl
push
xchg
xchg
pop
jmp
fsubr
xlat
enter
jge
cld
scas
lds
das
and
or
les
push
push
cmp
scas
icebp
es
xchg
sub
call
lahf
mov
xor
jge
jno
jge
lret
xor
and
mov
sbb
xor
rorb
dec
fsubrs
pop
push
xchg
bound
cwtl
cld
cmc
int
mov
loopne
xor
mov
dec
loope
mov
pop
sub
xchg
and
sbb
jl
das
cmpsb
cld
cmp
stos
and
pop
pop
mov
shll
cli
hlt
xchg
fildll
icebp
aaa
adc
sub
mov
or
in
outsl
mov
lock
lret
in
out
xor
pusha
cmp
mov
shr
fs
inc
or
add
cmp
pop
add
inc
sbb
mov
cmp
mov
pop
out
adc
je
in
minps
adc
das
movsl
dec
ds
out
out
dec
rol
jle
into
lods
cmpsl
sub
fwait
inc
cmc
jo
stos
imul
inc
repnz
shr
cmp
push
xor
nop
pusha
ljmp
hlt
xchg
addl
stc
imull
lret
aad
jle
dec
mov
aas
dec
mov
ljmp
nop
mov
loopne
pop
pop
rorb
aas
scas
das
sahf
pop
mov
jle
outsb
out
pop
fisttps
ds
push
jg
outsl
ficomps
dec
mov
pop
mov
jle
outsb
out
pop
fisttps
ds
push
jg
outsl
into
pop
into
dec
mov
pop
ljmp
push
fisttps
ds
ds
out
ret
pop
out
mov
pop
push
iret
jle
xchg
inc
hlt
fisttps
dec
aaa
cmpsb
push
loope
icebp
jo
int3
int3
int3
int3
fistps
pop
or
jg
mov
aas
daa
dec
pop
pop
push
out
mov
sahf
dec
mov
sbb
outsb
cmp
addps
dec
das
js
push
mov
lahf
enter
call
outsl
cmp
addps
dec
das
js
push
mov
lcall
mov
call
and
jns
lahf
aas
stos
aam
or
dec
push
faddl
sbbl
inc
clc
lock
sbb
mov
pop
xlat
push
fistl
mov
jle
sub
mov
pusha
and
test
mov
pusha
iret
push
inc
or
xchg
cltd
movsb
cmp
iret
gs
ja
js
push
xor
pop
or
cli
popa
mov
xchg
sub
pop
xor
idivl
xchg
filds
in
inc
pop
clc
outsl
mov
aaa
mov
clc
mov
xlat
out
pop
pop
das
insl
aas
jmp
fs
fistpll
enter
pop
inc
gs
pop
mul
pop
cli
shr
sub
stc
mov
in
or
sti
int
lfence
mov
or
jg
addps
dec
das
js
push
out
mov
lahf
enter
cmpl
push
xor
xor
dec
push
std
insl
cld
adc
out
sti
mov
lret
test
sbb
aaa
pop
push
jnp
das
cmova
loopne
std
xchg
fstps
mov
cmp
pop
or
pop
dec
dec
pop
pop
dec
das
js
push
out
mov
lahf
enter
call
outsl
cmp
addps
dec
das
js
push
out
mov
lahf
enter
call
loop
sub
mov
jne
pop
sub
inc
sbb
cltd
lret
pop
mov
inc
sub
add
lahf
addb
fiadds
cmp
pop
fdivrs
idivb
mov
lret
fmulp
into
pushf
lahf
dec
mov
dec
mov
and
clc
call
fbstp
outsb
pushf
sub
xor
push
adc
scas
nop
cmp
aas
pop
dec
mov
jbe
aaa
dec
shll
daa
or
xchg
or
adc
or
stos
in
cmp
mov
dec
cmp
cld
lret
shll
and
test
pop
movsb
mov
pop
call
orb
mov
enter
mov
clc
sub
insb
mov
test
ds
shll
outsb
aam
out
cmc
dec
movsl
mov
js
stos
lret
shll
ljmp
adc
ret
inc
and
nop
ret
outsl
sub
rcrb
clc
clc
inc
add
xchg
bound
pop
xor
aam
push
push
movsb
enter
es
jo
push
mov
sub
cmp
loope
mov
leave
ja
push
iret
push
fsubl
pop
pop
pop
fists
arpl
pushf
cmpsb
js
into
mov
fwait
cld
xchg
inc
mov
mov
je,pn
rolb
inc
test
mov
or
sub
lret
mov
ljmp
cmpsl
xor
sbb
lret
popf
aad
cmc
sbb
pop
bswap
xor
cmp
sbb
outsb
sub
scas
out
xlat
cwtl
shll
jle
sahf
adc
sub
mov
lods
jo
lock
jecxz
fists
lret
or
push
fcomps
jg
and
and
xor
inc
jb
push
pop
mov
loop
jmp
sahf
je
sbb
dec
inc
inc
xchg
decb
xor
popf
out
mov
push
rclb
xlat
add
test
test
push
dec
js
dec
lea
sbb
jl
add
sub
ror
outsb
enter
inc
xor
addr16
jl
and
fxch
push
xchg
repnz
push
hlt
lret
js
mov
sub
jg
xlat
cmp
insb
sub
mov
ret
mov
in
cmc
mov
aad
mov
das
mov
jge
push
and
dec
ja
mov
and
cmp
xor
mov
cmp
mov
in
cwtl
lods
ret
push
mov
daa
fisttps
aaa
xor
scas
jnp
push
mov
mov
xor
addr16
xchg
dec
test
inc
fisubs
cmpsl
mov
scas
call
insb
dec
fsubrp
in
jb
mov
lds
repnz
fdivl
xor
inc
xchg
negl
test
movsb
loop
sbb
fdivrl
int3
cli
outsl
iret
sub
mov
or
icebp
fidivrs
or
sbb
mov
loopne
adc
and
lods
pusha
flds
lock
fadds
sbb
mov
cltd
push
outsl
push
jg
aas
test
xor
popf
ss
pop
add
ljmp
and
es
jnp
push
sbb
dec
lock
and
add
inc
pop
jg
inc
xchg
xor
mov
cmp
adc
mov
int3
cmp
push
fdivp
push
pop
pop
insl
push
insb
xchg
loope
jbe
mov
mov
scas
push
movaps
ds
pushf
xor
mov
repz
mov
sbb
xor
lds
xlat
fists
je
mov
mov
dec
xchg
adc
sbb
aaa
sub
mov
xor
mov
mov
ror
aad
dec
cli
mov
xchg
jb
cld
cwtd
or
rorl
insl
jno
add
hlt
pop
in
and
or
aad
fcmovnu
js
mov
fmull
xor
mov
enter
ds
jae
test
dec
stc
jo
cwtl
stc
and
mov
divl
jle
jmp
cld
and
insb
stos
sub
push
lret
out
dec
and
and
adc
cmpsl
mov
push
push
in
imul
push
pop
imul
sbb
sbb
push
cltd
jmp
aad
or
mov
sub
call
test
mov
sbb
hlt
lret
xchg
mov
lds
dec
icebp
pushf
adc
lock
sahf
jle
pop
add
jmp
es
sbb
test
pop
push
dec
insl
jl
push
jecxz
xor
test
xor
in
movsl
sbb
nop
inc
cmp
inc
repz
mov
lods
xchg
jmp
adc
push
fstl
push
xor
pop
sub
xchg
push
pusha
sti
shl
inc
pop
pop
mov
movsb
push
popf
int
data16
and
in
pop
imul
outsb
andl
sub
mov
dec
mov
mov
int3
fs
mov
mov
pop
mov
lret
dec
adc
xor
mov
xchg
mov
lods
dec
push
cld
push
or
jg
es
and
gs
stos
or
iret
js
mov
mov
pop
jg
xor
push
pusha
repz
daa
mov
aas
aam
xor
jl
xchg
push
xchg
lret
inc
add
push
pop
out
fisttps
out
and
fistpl
adc
pop
add
psubd
mov
jl
in
daa
ljmp
icebp
stc
movsb
dec
lea
loopne
jno
xor
xor
mov
cmp
jle
mov
fnstcw
add
xor
test
dec
dec
stos
pop
dec
sbb
in
xchg
sub
jmp
xchg
loopne
mov
negl
pop
int
rcr
je
cmp
sahf
pop
xchg
int3
push
repnz
rcrl
outsb
or
sbb
js
in
xor
push
stos
mul
into
lret
push
lret
aaa
push
jns
test
test
movsb
cmpsb
and
loop
jb
xorl
outsb
roll
or
mov
jle
loop
ds
mov
mov
cmpb
sahf
call
outsl
dec
outsl
loope
cmpsl
mov
lods
mov
inc
inc
push
add
imul
insl
mov
std
arpl
pop
jecxz
cmp
xchg
shrl
adc
andl
cmpl
mov
add
sbb
es
cmpsb
in
add
and
cmpl
mov
sbb
cmp
imul
mov
xchg
imul
mov
mov
mov
adc
jp
xor
mov
dec
mov
imul
mov
lds
push
mov
mov
or
sub
adc
mov
aad
sbb
in
pop
stos
mov
stc
jp
xlat
mov
and
adc
jbe
mov
jmp
jmp
adc
mov
sbb
cmovle
pop
fildl
and
call
orb
inc
pop
out
mov
mov
xor
ljmp
enter
mov
jecxz
lods
hlt
xlat
or
ds
xchg
rcll
jno
inc
lahf
sub
dec
push
testl
mov
fists
add
xchg
hlt
shrb
fsts
dec
outsl
dec
out
mov
mov
bound
int
testl
xor
aaa
or
xor
mov
insl
mov
add
mov
sbb
xchg
test
incb
sbb
leave
mov
test
aas
repz
add
aas
jmp
push
rcrl
bound
xchg
and
and
repz
in
fcomps
lock
pop
imul
inc
scas
fbld
ret
test
testb
mov
mov
pop
xorb
adc
cwtl
push
adc
int3
mov
adc
mov
push
stc
mov
call
push
sbb
loop
mul
or
cltd
mov
iret
inc
push
imul
xor
jle
out
or
adc
or
iret
mov
add
cmp
fsubrs
and
dec
hlt
xchg
cmpsb
dec
fstpl
shlb
mov
cwtl
jmp
sbb
xor
lods
cltd
mov
out
arpl
inc
and
cmp
lods
sub
scas
shl
shrl
inc
and
and
cld
adc
ret
sbb
add
and
push
out
movsb
repnz
push
push
cmpsb
je
pop
dec
adc
and
subl
xchg
dec
pop
dec
xor
cmp
aad
cmp
loope
jb
and
imul
lcall
pop
pusha
dec
dec
scas
xor
mov
ret
or
jl
mov
mov
cli
inc
sub
add
mov
jecxz
mov
dec
push
xor
neg
and
add
lret
jb
mov
pop
icebp
into
fists
pop
cmp
stc
call
stc
je
cmpsl
cmc
data16
stos
ret
jge
and
xchg
rcrb
movsl
and
pop
mov
adc
cmp
inc
pop
fists
jg
or
xchg
sahf
add
negb
jns
iret
sub
scas
test
ja
cld
mov
adcb
aaa
scas
adc
negl
dec
jae
rorl
add
aad
mov
dec
dec
insl
fistps
add
into
mov
jp
outsl
jno
loope
push
lods
cld
rorb
push
pop
sbb
mov
mov
in
mov
mov
or
repz
aad
add
push
inc
into
out
or
inc
imul
adc
icebp
adc
fidivrl
pop
push
add
xor
enter
dec
ret
fbstp
rcl
inc
pop
mov
fwait
imul
daa
or
cwtl
dec
mov
test
insb
cmpb
inc
into
in
adc
sbb
ret
mov
lahf
pusha
clc
jg
inc
fsubrs
arpl
ja
jmp
into
fstpt
xchg
xor
cmp
pusha
int
and
and
lret
mov
or
pop
mov
fndisi(8087
lea
aad
sti
mov
fiadds
ljmp
push
mov
xor
inc
mov
rcr
aas
xchg
bnd
mov
cmpsb
fucomp
mov
mov
cmc
popa
mov
mov
test
push
add
and
fwait
shlb
xchg
dec
xchg
push
mov
add
pop
push
sub
fmuls
xchg
imul
sahf
cmp
std
pop
roll
cmp
add
clc
pop
sbb
mov
mov
ret
loop
jb
dec
aam
adc
aas
fsubrl
mov
rol
inc
loop
mov
movsl
arpl
xor
push
mov
xlat
inc
pop
subb
mov
jge
out
nop
outsl
sarb
jge
gs
sahf
jnp
cli
inc
sbb
mov
xchg
push
or
cld
mov
xor
inc
sub
xchg
adc
pop
push
push
mov
int
push
mov
lret
push
push
inc
test
lods
sbb
imulb
arpl
adc
shlb
pop
xchg
cmp
in
sti
aam
push
scas
cs
jns
and
xor
lahf
imul
push
shlb
add
std
push
add
rorl
clc
add
in
insl
sbb
jo
daa
and
lea
dec
jecxz
popf
and
in
shrb
push
out
mov
shrb
lret
xchg
nop
xchg
out
add
mov
xor
jp
xchg
mov
jbe
movsb
sub
repz
dec
cltd
sbbl
outsb
jbe
cmpsl
dec
dec
fwait
jl
jnp
iret
or
mov
or
pop
mov
je
insl
dec
loop
mov
gs
dec
hlt
popa
pop
push
rorb
mov
pushl
lret
add
popf
hlt
pop
mov
inc
sub
cltd
repz
inc
ja
and
jg
sbb
add
pop
xchg
stos
mov
pcmpeqd
add
lcall
jmp
lahf
lods
xchg
inc
hlt
xor
repz
gs
inc
adc
dec
mov
ja
std
pop
push
std
pop
push
in
arpl
and
fisubs
lret
jne
and
dec
push
mov
add
or
jae
enter
inc
jae
in
push
cmp
sarb
testl
cwtl
out
iret
mov
push
pop
out
pop
push
stos
lock
jnp
pop
cmpsl
das
imul
nop
scas
cld
fists
stos
jg
fiaddl
lds
mov
pop
pop
sar
sub
sbb
cmp
lock
cmp
or
ret
or
push
mov
jnp
addb
cwtd
imul
and
hlt
jo
dec
out
sub
cli
cmc
mov
int
dec
and
cli
out
popa
stos
in
xor
stos
sub
xchg
fucomp
xor
inc
sub
jmp
inc
pushl
sbb
pop
inc
enter
inc
aaa
jnp
cmpsl
push
mov
or
stos
xchg
jmp
and
pop
incb
outsb
insl
inc
lahf
sub
jae
shl
ja
bswap
dec
jmp
sbbl
xlat
mov
or
test
rorl
xor
fisttpll
aad
add
pop
pop
mov
and
cli
xchg
fsts
das
lods
ds
ret
mov
mov
push
clc
sahf
popf
sbb
mov
out
mov
jb
mov
nop
pop
push
popl
fisubl
jge
push
ss
aas
xor
popa
jmp
imull
repnz
push
cld
repz
scas
push
cmpb
aad
repz
out
sbb
and
pop
jle
sub
sbb
stos
and
jo
out
mov
cmp
outsl
jge
mov
or
jl
xlat
shl
xor
outsl
stc
fwait
loop
fwait
aam
dec
sub
sbb
pop
sbb
cmpsl
repz
xchg
test
mov
and
scas
pop
test
lods
popf
pushl
fldt
sub
jg
and
inc
subb
out
out
es
std
fnstsw
add
popf
ljmp
enter
cs
dec
sti
nop
xlat
mov
xor
sahf
sbb
mov
push
sbb
sbb
pop
mov
fidivs
inc
sahf
pop
fs
sbb
stos
add
addl
leave
je
mov
iret
mov
cmovne
sbb
out
mov
movsb
movsl
pop
test
test
inc
pop
movsl
jg
fists
sbb
adc
sub
pause
loopne
jbe
cld
cmp
pop
add
ret
or
xchg
mov
cli
popa
ljmp
sbb
cli
leave
stos
jg
pop
push
mov
sub
int3
outsl
mov
push
popa
xor
adc
movsb
popa
cmp
or
push
hlt
jge
repz
jp
in
insb
insb
inc
mov
and
inc
xchg
fcmovnb
push
stc
rorb
adc
insl
sahf
mov
call
outsl
mov
mov
xchg
arpl
mov
mov
mov
xorb
cs
pop
sub
out
stos
xchg
imul
fcompl
mov
scas
aaa
sbb
fstpl
dec
fstpt
push
add
sti
jmp
shrb
movsb
test
test
mov
cmp
xchg
mov
dec
jmp
sbb
sub
push
es
jle
outsb
dec
insl
pop
in
mov
dec
dec
icebp
sbb
xchg
pop
xor
roll
mov
push
cmp
cmp
sub
addr16
fildl
es
mul
inc
jb
scas
mov
popa
or
jns
pop
icebp
aam
dec
shlb
fucompp
aad
inc
or
fistps
into
mov
daa
sti
dec
jne
scas
and
mov
sub
fldl
jbe
mov
es
in
ret
inc
adc
testl
push
xchg
sbb
lea
arpl
or
jmp
ret
sub
cs
test
stc
fs
mov
xchg
arpl
sar
mov
mov
in
fs
ljmp
aad
jne
test
loop
fistpl
mov
mov
cmp
sbb
dec
dec
sbb
pop
and
sub
push
rclb
cmp
xchg
and
push
pop
fwait
loope
mov
cmp
jle
or
xchg
xchg
mov
ret
add
arpl
test
fistpl
adc
dec
push
xlat
pop
dec
sub
fucom
jne
cmpsl
xchg
push
mov
pop
add
ficoms
imul
into
xor
push
lret
and
xchg
arpl
mov
mov
and
aas
mov
sbb
call
sbb
dec
adcl
addr16
dec
je
adc
mov
and
xorl
inc
cli
cmp
dec
in
push
lahf
mov
lods
in
mov
push
daa
idivb
imul
dec
into
xor
xchg
cmpsb
les
xor
flds
sub
sahf
out
test
jae
popf
push
sbb
push
add
xchg
sub
sti
test
dec
jb
cmp
enter
mov
xor
jle
cli
cwtl
sbb
sub
insl
mov
das
aad
push
data16
jnp
pop
hlt
inc
mov
inc
and
int
add
xchg
fnstcw
mov
add
xlat
lahf
inc
outsb
repnz
add
insb
mov
and
pop
xor
xchg
jae
fsubrp
sti
mov
pop
fwait
mulb
sbb
dec
les
pop
clc
xor
cmp
fistpll
mov
lcall
incl
ja
mov
sub
lret
les
les
dec
xorb
fcmovb
js
ret
pop
xchg
mov
lock
add
and
lds
out
cli
inc
lahf
xchg
adc
mov
scas
aam
mov
scas
mov
sbb
cmc
mov
rorb
add
sub
pop
mov
repz
and
fldt
mov
xchg
dec
aaa
xchg
jmp
push
mov
pop
mov
rcrl
or
xchg
adc
cld
mov
adc
xor
sbb
loopne
mov
xchg
enter
in
in
xor
dec
clc
inc
xlat
cmpsl
repnz
pop
mov
clc
mov
mov
mov
inc
mov
subl
mov
mov
cli
sbb
stos
mov
inc
nop
adc
push
xchg
cwtl
xchg
mov
mov
lock
movsb
jg
push
and
mov
daa
mov
ficomps
cmp
leave
xchg
les
cld
sbb
pushf
repz
aaa
jl
ja
fwait
and
mov
push
mov
or
mov
xchg
fwait
mov
insl
jo
lods
jl,pt
das
jns
loop
fadd
inc
fsubl
aas
add
aaa
stos
dec
cltd
sub
fwait
sbb
test
sub
xor
outsb
xor
jo
xchg
mov
push
push
sti
add
repz
insl
std
push
notl
lret
stos
cmp
aaa
jl
std
decw
repnz
sub
out
sarb
sete
dec
loop
stos
cmp
push
xor
bound
cmp
lods
pop
aaa
ret
fimull
mov
or
in
add
cwtl
sub
push
loop
pop
push
dec
inc
out
jmp
fucom
insl
lahf
lods
lahf
inc
das
call
scas
add
pop
repz
test
sbb
sbb
mov
ds
pop
or
roll
sbb
imul
bound
sbb
ss
aaa
icebp
cli
pop
int
jnp
nop
and
dec
xor
adc
lahf
sbbb
push
cs
mov
imul
ror
sub
fdivrs
push
jne
or
jl
mov
cmp
mov
shrl
in
fildll
or
repz
mov
loop
inc
les
movsl
rcll
int
and
jmp
sub
je
lock
xchg
sub
jge
rcll
cmp
fstpt
in
dec
pop
cmp
xchg
aas
out
xor
lods
sub
or
or
cmp
out
nop
mov
inc
cmp
sub
clc
outsb
mov
pop
int3
xor
pop
icebp
loop
mov
push
cmpsl
roll
push
jmp
push
test
clc
lcall
outsb
data16
pop
aam
mov
mov
mul
xchg
fisubrl
stc
mov
jb
inc
mov
jnp
fdivrl
xor
mov
ret
mov
dec
jl
popf
xchg
sbb
or
insb
jmp
loope
push
fst
mov
lahf
into
jmp
stc
mov
xchg
push
inc
rcrl
add
adc
jmp
jle
pop
push
xchg
ret
je
xor
xchg
ss
inc
push
or
mov
jns
pusha
sub
outsl
mov
push
mov
scas
fbstp
popa
xor
sbb
mov
and
inc
jp
outsb
insb
sbb
out
sbb
pop
popf
aaa
icebp
push
mov
and
setnp
lahf
aaa
cmp
fsubl
dec
add
aam
cltd
mov
out
cmp
xor
jl
movsl
sub
pop
cmc
jbe
dec
add
jbe
std
push
cmp
pop
lods
movsl
add
fdiv
out
mov
and
aaa
jmp
push
mov
sub
xor
jp
and
sub
mov
cli
fistps
orb
sub
or
cmp
mov
mov
aad
dec
mov
ret
repz
sbb
stos
mov
xchg
add
jne
fxch
cli
xchg
push
lret
icebp
sahf
mov
sbb
add
dec
out
push
xchg
hlt
fs
ljmp
and
adc
push
mov
pop
pop
dec
ret
gs
mov
data16
mov
mov
cmp
mov
loop
int3
pusha
cmp
mov
inc
push
aas
jecxz
adc
mov
fwait
lret
and
push
outsl
jae
push
lods
and
and
add
or
jmp
lcall
or
push
dec
hlt
xchg
sub
add
stc
xchg
movsb
pop
mov
ret
inc
jbe
dec
push
add
push
flds
loope
jo
imul
shld
mov
adc
lret
jmp
push
pop
or
daa
sbb
sbb
jno
mov
repnz
stos
or
iret
pop
lcall
cmp
aad
loop
test
sub
jmp
das
sub
ret
mov
lret
lock
add
pop
lods
dec
xor
sbb
fistpl
mov
cmp
sbb
fstpt
movsb
xorl
cmp
jne
xor
dec
out
ja
or
jg
addps
dec
das
js
push
out
mov
lahf
enter
call
outsl
cmp
addps
dec
das
js
push
out
mov
lahf
enter
call
outsl
mov
pop
enter
push
out
mov
lahf
enter
call
outsb
cmp
addps
dec
das
js
push
inc
mov
pop
aaa
push
pop
inc
pop
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
ret
rcl
cmp
dec
dec
loope
int
mov
mov
popf
jb
add
adc
and
xor
ret
sub
repz
mov
scas
push
mov
ret
mov
sbb
ret
xor
cmp
xorl
push
mov
inc
dec
jo
psubb
add
fstpl
lahf
xchg
dec
sbbb
test
dec
pushf
and
pushf
ss
shll
xchg
test
jl
xchg
sbbl
aad
sub
mov
je
mov
mov
or
out
sub
in
mov
sub
jge
xor
std
inc
xor
ffree
jge
cmp
movsb
dec
xchg
into
std
inc
popf
insl
sbb
mov
push
mov
adc
or
fimull
andl
and
popf
push
test
jo
int
and
and
inc
push
popa
pushf
ja,pn
rclb
mov
lea
sahf
mov
mov
cvtps2pi
sub
sbb
xchg
jge
push
mov
inc
mov
movsl
arpl
ljmp
cmpsl
cmp
cmpl
adc
and
lds
or
add
jne
cmpsb
push
mov
xchg
sbb
sub
xor
aam
fsubl
jae
add
inc
mov
mov
iret
add
pop
inc
lods
push
mov
add
adc
and
xor
ret
sub
repz
mov
lods
push
mov
add
adc
and
xor
ret
sub
fmull
jge
ss
std
inc
popf
and
sub
xchg
jno
shr
add
mov
mov
jle
popa
movb
ja
stc
jno
xchg
rcll
mov
pop
xlat
adc
lcall
jl
fdivrl
xlat
pop
ds
xchg
in
in
ret
cmp
jnp
lods
and
sub
data16
pushf
mov
test
sahf
fsubp
enter
and
into
roll
xor
add
lcall
arpl
inc
push
jg
pop
dec
jg
push
incb
xchg
rol
add
insb
js
out
arpl
test
stc
mov
cli
lods
stos
mov
into
ror
sub
popa
decb
test
sub
jmp
aas
dec
mov
cwtl
sbb
gs
sti
mov
and
scas
cmp
xchg
das
xchg
cmpl
dec
push
mov
jl
sahf
stos
jle
pop
cmp
test
dec
repz
add
mov
scas
into
sub
fstl
aaa
notb
adc
xor
lds
iret
push
rclb
in
xchg
div
imul
inc
outsl
int
subb
insl
shlb
adc
mov
fisubrl
ljmp
rcrb
outsl
stos
inc
mov
fwait
inc
repnz
fnstenv
test
xor
fisttps
repnz
push
and
cltd
xchg
push
or
std
cmp
dec
xorl
add
mov
pop
push
in
movsb
adc
xlat
dec
or
stc
aaa
jge
in
loope
dec
sub
hlt
fistl
adc
add
jbe
gs
in
sti
pop
or
cs
xchg
aas
mov
or
test
jns
push
insb
pop
xor
loopne
dec
pop
adc
inc
fistpl
mov
arpl
mov
sbb
hlt
push
xchg
add
pop
xchg
or
lods
push
leave
push
in
sbb
add
fimull
repnz
call
and
xor
mov
sti
mov
jmp
out
mov
adc
rcr
sahf
mov
ljmp
xor
sbbb
add
pcmpeqd
jg
das
sbb
xchg
mov
insb
dec
ds
inc
sbb
arpl
arpl
cmpsl
dec
loopne
fistl
stos
add
mov
inc
or
pop
jge
mov
xor
inc
jno
xor
ja
aas
add
jg
jnp
pop
fistpl
das
shll
movsb
sbb
xchg
cltd
jl
fstpt
push
ficoml
fiadds
jmp
inc
das
sti
pop
in
rolb
xchg
into
out
arpl
dec
sub
jmp
mov
mov
pop
jns
lret
jns
xchg
push
aad
mov
rcr
sub
mov
das
mov
lcall
jmp
ss
int
mov
cmp
mov
cmp
xchg
xor
jmp
loop
mov
inc
out
insl
fstl
out
pop
movl
dec
jno
into
jge
xor
and
lret
outsl
cmpb
pushf
jo
loop
rcrl
push
pop
add
jp
mov
cmp
or
xor
xor
jbe
jecxz
bound
dec
int3
aad
adc
sarb
or
push
push
cmp
pop
nop
lret
inc
ljmp
lds
inc
fdiv
xor
loopne
mov
cmp
outsb
lods
js
push
inc
scas
mov
test
cmp
fs
sub
jmp
xchg
dec
adc
inc
sub
ret
cmp
pop
cmovne
push
sub
add
arpl
sahf
add
repz
test
and
push
xchg
loopne
or
pop
sti
cmc
mov
mov
pushf
jb
sub
iret
push
ja
xchg
mov
xor
mov
movb
jl
mov
add
je
mov
jmp
andb
adc
cmp
xchg
pop
adcl
push
ljmp
lret
or
lea
testb
push
inc
and
mov
mov
push
ljmp
cmc
imul
ficompl
insl
orb
and
into
data16
push
pop
ror
inc
push
repnz
dec
dec
inc
ret
movsb
mov
int3
lods
out
sti
dec
stos
cli
pusha
pop
je
shll
add
negl
xchg
and
dec
mov
push
dec
or
pop
or
int
dec
dec
pop
inc
hlt
in
or
shrb
out
fildl
sub
sahf
in
jns
cmc
rolb
pop
sar
push
imul
sbb
add
in
rorb
add
or
fdivl
push
addr16
faddl
sub
pushf
jle
adc
mov
fs
mov
mov
sub
loop
inc
adc
push
and
fucomp
adc
push
mov
xchg
mov
jns
clc
loope
and
ret
insb
gs
out
outsl
mov
es
ss
jecxz
mov
imulb
sbb
les
mov
jp
and
test
jae
and
xor
mov
gs
xor
lahf
loope
xlat
daa
xor
loopne
test
mov
jb
cmp
push
scas
add
pop
jne
pop
jl
test
popf
mov
lahf
dec
jg
nop
sar
pop
and
sbb
shlb
daa
jo
out
xchg
mov
loope
and
mov
shr
imul
sbb
sub
notb
xchg
stc
sbb
dec
clc
in
sbb
popf
les
dec
pop
push
jne
ret
inc
add
or
sub
test
mov
cmp
jb
jp
or
cmc
lds
inc
call
sbb
pushf
imul
int3
jp
addr16
scas
adc
pop
or
cwtl
insb
hlt
dec
mov
xor
icebp
push
stos
stos
aas
xor
mov
pop
dec
aas
push
push
or
scas
cltd
scas
insb
sahf
pop
loope
xchg
cmp
loop
pop
test
sub
dec
ss
cltd
inc
sbbl
push
sbb
pushl
xchg
cmp
in
clc
call
push
aaa
or
imul
andl
cmp
fsubrl
cmc
lret
jp
and
cmc
rcll
out
ja
sub
and
cmpsl
xchg
pop
out
shrb
dec
cmp
aam
dec
sbb
ret
pop
mov
stc
sub
jecxz
decb
outsb
mov
and
xchg
xchg
mov
dec
lret
mov
adc
or
popf
xorb
cmp
inc
sub
push
test
insl
outsl
bsf
inc
jge
cli
idivl
test
mov
xchg
pop
aaa
in
adc
jns
pop
xorb
pop
sub
and
cmpsl
mov
jnp
dec
js
cmp
popf
push
loop
fmul
mov
and
mov
xor
mov
fistl
adc
mov
xchg
jno
roll
lcall
fwait
add
adc
xchg
sbb
mov
fcomps
and
popa
jae
loope
loop
pop
out
dec
clc
cmpsb
shrl
int3
mov
mov
xchg
jnp
outsl
and
adc
divb
leave
cld
mov
out
sbb
xchg
adc
cmp
rcll
dec
movsl
popa
adc
ret
sub
add
cwtl
in
adcl
sub
movl
xor
pop
adc
data16
imul
shll
xor
jno
sub
ficoms
cmp
pushf
call
bound
xchg
pop
add
test
lcall
push
mov
pop
testb
xor
outsb
mov
test
adc
outsb
pusha
and
call
mov
or
rorb
fsubrl
add
inc
cmpsb
test
mov
jb
andl
arpl
dec
mov
shll
lret
mov
mov
daa
push
lods
subb
mov
sbb
adc
sub
in
sub
aad
ds
ret
in
xor
jno
call
mov
dec
adc
dec
mov
pop
movsb
sub
xlat
pusha
std
add
mov
lret
push
pusha
iret
aaa
sbb
jbe
pop
jbe
call
lcall
adc
push
jg
stos
movsb
fdiv
rolb
xchg
popf
pusha
xor
mov
inc
int3
xchg
mov
outsl
xchg
fs
cwtl
in
inc
cmp
cmpsb
mov
adc
cmp
fistpll
add
out
jge
jb
mov
jp
sub
cmp
dec
cmpl
sub
jo
sbb
mov
stos
cmp
iret
adc
pop
add
xchg
data16
mov
aad
pop
loopne
xor
insl
cmpsb
jnp
pop
roll
fisubs
push
pop
mov
xchg
sbb
icebp
imul
or
jecxz
fwait
dec
mov
mov
pop
dec
stos
mov
les
sbb
dec
sbb
add
dec
fcmovu
xchg
lcall
jge
out
leave
xchg
xorl
sbb
cmp
insb
push
jns
pop
insl
or
jb
dec
jmp
mov
push
test
dec
inc
dec
mov
imul
jl
psubsw
mov
pop
pop
adc
pop
rcrl
and
xchg
sarb
and
mov
mov
loopne
and
cwtl
and
sbbb
sbb
mov
jmp
lods
mov
lea
or
iret
and
je
push
jge
sub
mov
mov
lahf
mov
jl
aad
xchg
rcrl
or
mov
call
mov
add
nop
cmpsb
jmp
mov
mov
mov
cmpsb
mov
lods
rcll
add
xor
mov
mov
pop
pop
cmp
sbb
in
imul
fnstcw
xchg
add
gs
xlat
jns
iret
mov
sub
mov
xor
sub
clc
mov
mov
ret
jae
imull
ja
repz
mov
mov
jns
ja
test
sub
cmp
inc
xchg
mov
cmc
cmpsb
iret
xor
ficomps
icebp
ljmp
pushf
push
mov
aaa
call
xchg
sbb
nop
imul
push
fstps
push
and
jbe
jno
push
push
dec
jg
xchg
int3
ret
mov
pop
push
ds
sub
dec
jmp
repnz
je
mov
inc
dec
repnz
xor
xlat
jne
dec
inc
jns
xor
rolb
xchg
pop
lret
jp
nop
inc
jo
mov
rorl
push
inc
cmp
pusha
jecxz
filds
enter
pusha
jnp
xlat
jne
lock
sbb
movsb
jl
repnz
sbb
or
clc
or
jl
lahf
in
std
subl
out
loope
pause
pop
cmp
gs
push
dec
pop
into
inc
cld
imul
out
mov
movsb
cwtl
rcl
popa
cld
fidivrs
push
in
mov
fstl
xlat
xchg
inc
push
jge
ret
sub
std
add
xchg
mov
push
loope
jne
mov
xor
daa
mov
bound
dec
test
push
in
sub
cmp
cli
add
int3
addr16
rcrl
or
into
insb
stos
aam
stos
adc
dec
ljmp
and
cmp
loope
mov
jne
call
loop
cwtl
pop
les
push
xchg
inc
xlat
ljmp
mov
or
inc
stos
leave
mov
or
repz
push
cmc
mov
lahf
mov
mov
mov
movsl
inc
mov
and
jno
nop
jge
jb
sbb
lods
test
lret
test
pushf
aas
adcl
in
rorl
shl
and
jbe
out
movsl
cmpsb
jo
cmp
fistpll
shlb
inc
xchg
xchg
inc
inc
fidivl
cmpl
popa
aas
xchg
shlb
fs
jecxz
add
mov
dec
test
stos
frstor
cmp
sub
inc
js
lock
test
dec
lock
adc
stc
push
lods
shrb
xchg
jmp
sbb
push
in
push
sar
sub
jne
aaa
push
inc
xchg
cltd
leave
sbb
cmpsb
push
fs
aaa
and
xor
push
xlat
dec
and
insl
inc
sbb
movsl
dec
mov
jne
loope
push
dec
pop
mov
rolb
sub
dec
fldt
stc
divl
shlb
insl
movsb
inc
ljmp
dec
cltd
int3
mov
mov
loopne
mov
or
xchg
xor
popa
scas
cmpsl
jecxz
mov
ret
sbb
add
rorb
mov
imul
hlt
or
fildl
in
loop
sahf
sub
std
xor
sahf
sahf
iret
popf
cmc
repnz
push
fisttpll
roll
dec
jnp
pop
sbb
jae
mov
ljmp
add
test
or
clc
inc
mov
decb
inc
fst
mov
lret
das
js
out
mov
imul
fwait
adc
mov
xchg
ja
jb
push
add
leave
lea
icebp
or
mov
pop
dec
add
dec
icebp
mov
xchg
fcomps
out
lret
js
nop
jnp
push
fwait
mov
repz
cmp
cmpsl
inc
sub
cli
test
dec
or
outsl
lds
add
lcall
or
mov
sbb
mov
dec
enter
xlat
imul
std
dec
into
std
int
ds
cmovae
jno
dec
mov
rolb
lods
imul
sbb
cmpsb
outsb
dec
test
push
fldenv
push
dec
cmp
mov
loop
jl
lods
jbe
xchg
lea
xchg
ss
pusha
test
jecxz
ucomiss
push
shll
xchg
xchg
lcall
scas
out
pop
sub
je
jae
shr
cs
add
rclb
jmp
pop
imul
push
xchg
ficomps
add
je
pop
sbb
jp
das
cmovae
cmp
cmpsl
es
adc
or
mov
mov
jae
scas
mov
loope
loopne
add
jne
loop
pop
popf
xor
push
in
outsb
shlb
ja
jecxz
loope
scas
inc
push
mov
inc
dec
jge
mov
cmpl
imul
fbld
adc
mov
mov
jb
mov
sbb
ja
sub
stc
aam
ds
pop
addr16
cmp
imul
fisubl
je
andb
cmp
xlat
repnz
movsl
pop
mov
in
test
xlat
test
and
lods
add
stos
pop
shll
pop
push
jno
cld
xchg
pcmpeqw
xchg
movsb
insl
mov
sub
mov
in
movsb
xor
insl
and
and
xor
xor
subb
or
movl
out
mov
mov
mov
leave
orl
mov
cmp
inc
push
mov
mov
call
dec
cmc
push
inc
nop
cmp
mov
sahf
pop
xor
bound
sbb
jns
iret
repz
pop
push
or
pop
adc
loop
add
pop
aas
sub
cli
addr16
mov
mov
sbb
fcompl
mov
or
lsl
orl
cwtl
and
lods
sub
insb
push
push
clc
daa
test
jl
and
pop
cmp
comiss
dec
shll
jnp
push
icebp
pusha
shrb
jbe
popa
gs
mov
mov
in
ret
cmp
add
sahf
sub
ss
adc
lret
cmc
sbb
andb
and
sbb
mov
xor
lret
enter
cmp
push
inc
mov
and
inc
out
clc
ret
mov
imul
dec
insl
rcr
cld
stos
and
cmp
pop
mov
pop
sbb
clc
sbb
jns
leave
out
dec
std
or
mov
pop
in
loop
xchg
cltd
mov
push
inc
push
push
outsb
jg
add
ja
pop
add
lea
addr16
jbe
push
cmc
xchg
push
sbbl
sti
loopne
ja
xchg
jmp
subb
insl
movsl
jns
movsb
pushl
jp
sub
or
aam
aaa
hlt
dec
and
inc
cmpsb
in
scas
idivl
sub
sbb
inc
xor
dec
cmp
xchg
scas
mov
pop
or
pop
aaa
mov
xor
in
ret
jns
mov
into
xchg
ljmp
arpl
dec
std
mov
and
push
lcall
out
insb
out
push
jne
xor
sub
mov
dec
pop
outsl
arpl
mov
xchg
scas
mov
sbb
adc
cmp
xor
add
cs
clc
mov
sub
in
sbb
push
div
or
jns
dec
sti
ror
daa
push
xor
jp
in
jge
cli
mov
movsl
adc
insl
cmp
stc
sub
js
mov
out
rcrb
jo
or
xchg
sbb
jg
loop
inc
push
cmp
add
cmp
jmp
add
and
mov
xchg
xor
lea
inc
ror
or
fbld
sub
test
sub
xchg
sbb
movsb
iret
pop
xchg
push
loope
sub
pop
jp
roll
xchg
adc
test
lret
bound
mov
imul
repz
ficomps
leave
test
or
adc
ret
lret
inc
adc
or
jecxz
ljmp
push
ret
mov
aas
inc
shl
cmp
xchg
addr16
push
jl
cmp
pop
mov
dec
sarb
push
xchg
or
jnp
std
lret
int
inc
les
and
adc
pop
mov
cmp
sbb
xchg
xor
iret
pop
lods
jge
mov
out
push
lock
dec
fwait
pop
sub
data16
pusha
inc
int
hlt
adc
pop
mov
mov
dec
pop
mov
arpl
xchg
pusha
dec
inc
push
lods
ss
push
add
std
or
dec
push
adc
lcall
sbb
mov
fs
sahf
sarl
in
scas
jle
add
mov
cmc
das
aaa
mov
xchg
ds
jmp
mov
lds
out
les
xor
hlt
sbb
ljmp
xchg
loop
sbb
test
shrl
cmp
loop
cmp
or
out
popa
je
mov
stos
push
sbb
and
adc
cltd
sub
dec
lds
or
xchg
add
or
sbb
jl
mov
test
pop
jb
pop
rolb
out
xor
loopne
neg
insl
repz
dec
insb
mov
testb
imul
mov
or
mov
movsl
stc
fidivrl
out
push
mov
xor
pop
mov
dec
push
ljmp
dec
push
fwait
jg
stc
ret
cmpsl
iret
xor
jmp
fldenv
xor
outsb
or
inc
stc
into
mov
mov
aaa
mov
cltd
xor
fsts
mov
lods
shlb
dec
push
pop
repz
out
pop
mov
mov
add
daa
repz
mov
push
js
rcll
sub
cld
adc
lret
and
sbb
pop
lods
or
mov
push
fadds
xor
jp
in
adc
mov
push
test
in
in
scas
pop
and
andl
sbb
inc
xchg
and
add
xchg
das
jl
jne
test
fbstp
scas
fisubrl
outsb
out
rclb
and
es
mov
stos
rorl
shr
pop
jmp
jmp
outsl
in
cmp
bound
mov
mov
xor
arpl
stos
pop
mov
inc
jae
pop
and
stos
mov
mov
inc
ja
xor
bound
adc
sahf
sahf
push
and
mov
jb
mov
push
sbb
push
xor
xchg
insl
fimull
sti
lret
add
jmp
adc
outsb
mov
fdivrp
xchg
mov
in
adc
rcll
xchg
lret
jno
test
sahf
jbe
sub
or
repz
ljmp
dec
insb
or
push
test
ljmp
add
push
inc
sub
sbb
insb
sub
cld
jnp
mov
imul
mov
test
ja
movsl
data16
adc
pushf
es
pop
je
inc
dec
ss
test
mov
mov
dec
lods
sysenter
cwtl
xor
or
cmp
and
jne
popa
or
push
xchg
jg
shrb
test
lret
add
xchg
shr
jge
les
lahf
xchg
movsl
add
leave
push
test
pop
mov
push
lcall
or
pop
lcall
xchg
push
mov
push
lds
iret
std
sahf
mov
adc
sub
sbb
mul
jg
push
xchg
adc
inc
mov
out
dec
jns
icebp
push
stos
xor
xchg
out
jno
pop
not
pcmpeqd
pop
gs
leave
lret
cli
popf
aaa
test
cld
int
pop
fucom
js
add
xorl
addl
push
fs
inc
outsb
rcr
scas
cwtl
inc
inc
sub
sbb
xchg
push
pop
aam
hlt
fdiv
jns
mov
test
xchg
sbb
inc
or
enter
gs
jl
ds
pop
outsl
xor
dec
adc
cwtl
push
arpl
xchg
push
repnz
and
and
cmp
imul
jno
imul
mov
jle
adc
out
pop
push
mov
mov
ret
xor
pop
xlat
push
push
int
or
out
in
inc
xor
jne
and
adc
sub
xchg
and
mov
pop
and
pop
mov
out
mov
xchg
mov
xchg
sbb
movsl
xor
cmp
dec
sub
cmpsl
nop
jb
dec
data16
add
mov
ret
dec
jnp
push
ret
xor
pop
jecxz
lcall
repz
cs
dec
adc
sub
jb
pop
je
pop
sub
and
xor
sbb
data16
cmpsb
mov
je
xchg
icebp
cmp
mov
mov
add
and
mov
mov
sbb
pusha
test
mov
out
outsl
shrl
xchg
cmp
repnz
push
jmp
cmp
pop
mov
inc
cmp
sbb
mov
lods
push
mov
add
adc
and
xor
ret
sub
repz
mov
lods
push
mov
add
adc
and
xor
ret
sub
repz
mov
lods
push
mov
add
adc
and
xor
ret
sub
repz
mov
lods
push
pop
leave
lea
jae
arpl
push
xor
int3
int3
int3
int3
int3
jns
push
pop
mov
pop
test
mov
or
fidivrl
lret
pop
stos
dec
lcall
mov
mov
sub
sbb
or
mov
aaa
stos
dec
lcall
mov
mov
dec
lret
add
or
sahf
sbb
sub
psubusb
adc
es
and
shlb
mov
repnz
push
lcall
stos
pop
sahf
lock
enter
out
cs
stos
dec
xchg
repz
or
sahf
hlt
pop
cs
inc
pop
testb
fwait
das
xchg
rcrl
shrl
adc
cmp
iret
lret
dec
out
dec
push
mov
cmpsb
fiadds
scas
mov
js
lret
or
pop
mov
stos
mov
jno
push
out
fstpt
xlat
es
push
mov
lret
imul
or
xchg
test
testl
add
repz
scas
leave
or
pop
push
ret
ds
pop
stc
sbb
fwait
cmp
pop
mov
push
lret
sbb
lods
jmp
sbb
lods
cmp
sub
pop
mov
add
lahf
sbb
cs
inc
mov
cli
bound
pop
enter
repz
and
sub
sub
out
xchg
pop
popf
push
mov
dec
ret
xor
lret
add
filds
ret
cmp
sbb
imul
or
cli
sbb
or
cmp
sub
jnp
imul
mov
dec
stos
cmp
sub
sbb
or
cli
sbb
or
cmp
sub
jnp
imul
jecxz
push
mov
scas
inc
mov
fs
mov
daa
lods
outsl
cmp
fldcw
pop
shl
mov
add
jmp
pop
cli
mov
mov
inc
ret
jne
aam
int
gs
sub
mov
jb
sub
loopne
add
pop
xchg
pushf
jmp
jmp
les
cmp
push
enter
or
lea
aam
jp
cs
rcll
mov
mov
or
dec
mov
mov
add
gs
or
repnz
xchg
mov
shlb
imul
push
mov
cltd
and
xchg
lcall
or
xlat
mov
and
push
pop
jecxz
arpl
cltd
or
jge
vpsubusw
clc
xchg
push
repz
mov
mov
dec
xor
shll
pop
push
setle
pop
add
adc
scas
mov
and
data16
dec
movsb
mov
in
mov
adc
or
xor
lea
insl
push
movb
pcmpeqw
xor
sahf
divl
jb
aad
mov
pop
jmp
sub
add
out
jmp
enter
mov
add
xchg
pop
xchg
mov
cli
int3
cli
dec
repnz
bnd
xor
mov
xor
fbstp
push
adc
mov
jg
pusha
mov
ljmp
test
xlat
out
adc
fcmovnb
jae
adc
jg
adc
mov
mov
das
ljmp
les
insl
and
adc
adc
in
lds
shrb
hlt
daa
push
sbb
mov
arpl
adc
scas
dec
and
loopne
movsb
xchg
inc
ss
mov
data16
and
sbb
push
inc
out
loop
jmp
pop
add
mov
push
or
mov
push
fmul
cmp
test
test
js
cltd
cmp
mov
popf
push
sbb
mov
inc
lahf
adc
outsb
jbe
jb
xchg
lods
bound
xorps
sarb
mov
mov
pop
add
sub
stc
jmp
mov
jl
and
pop
jecxz
arpl
inc
pop
inc
mov
pop
mov
cmp
mov
ljmp
mov
dec
daa
lret
bnd
jo
push
pop
mov
dec
outsb
addl
xor
xchg
enter
mov
ja
adc
ret
cmp
ja
and
shll
pop
nop
adc
repz
clc
shll
fnstsw
addr16
jnp
adc
sub
repnz
push
sub
xchg
pop
stc
addr16
bound
movsb
pop
fbld
sar
or
ret
mov
ret
lcall
ljmp
testb
or
jge
int3
icebp
outsl
movsl
fstpt
add
cmp
or
dec
jae
jmp
sub
in
add
leave
repnz
in
popf
xchg
movsb
dec
loopne
jae
or
cmp
pop
jge
ljmp
jmp
fisttpll
movlps
lahf
xor
cmp
push
inc
ss
cmp
mov
pop
cmpsl
push
psrad
movsb
stc
push
inc
mov
jne
xchg
les
inc
mov
xlat
call
idivl
xchg
jne
sub
cmp
xor
outsb
push
sbb
paddsw
sbb
mov
je
xchg
mov
bnd
push
push
roll
or
pop
dec
xchg
arpl
shrl
outsl
adc
arpl
jne
inc
mov
mov
jecxz
jp
imul
outsb
jp
iret
loopne
xchg
test
int3
mov
cli
sub
ret
cltd
and
mov
fwait
jle
xchg
mov
rorb
adc
cmp
pop
js
xchg
dec
sub
loopne
xchg
adc
ja
imul
sub
push
movsb
xchg
jp
jnp
sub
lods
ss
insb
xchg
outsb
xor
pop
inc
addr16
pop
pop
rol
jmp
fwait
outsl
cwtl
jno
loope
push
and
dec
adc
rcll
pop
int
rol
mov
xchg
data16
jae
mov
pop
ds
dec
inc
icebp
jle
mov
sbb
fbstp
or
inc
in
dec
add
and
stc
mov
nop
and
add
adc
daa
sarl
int3
scas
adc
nop
std
outsl
idivl
gs
inc
sahf
and
and
push
mov
lret
divb
pop
ja
hlt
loopne
push
ret
shrl
add
pushf
push
push
lods
ret
jmp
cmp
mov
mov
addr16
clc
je
pop
jno
push
cli
add
bound
add
adc
shl
dec
adc
mov
in
xor
shl
out
sub
cmpsb
mov
inc
jo
cli
ret
mov
inc
mov
test
dec
ds
dec
adc
sbb
stc
inc
mov
addr16
dec
cmc
out
fwait
test
jae
sbb
xor
pop
jle
mov
push
mov
sub
xchg
jns
cmp
scas
pop
outsl
mov
les
and
mov
out
insb
add
push
xchg
pop
roll
mov
mov
sub
jg
xchg
repz
ljmp
mov
push
das
and
stc
inc
aaa
push
mov
jl
adc
lds
ljmp
test
popa
mov
add
mov
rclb
sbb
pop
add
aas
pusha
jb
or
push
jne
sbb
inc
jns
enter
cs
movsl
test
lods
adc
and
sub
xchg
pop
mov
loop
xor
push
das
mov
out
or
dec
repz
and
fwait
jge
adc
push
mov
ss
loopne
push
cmp
out
stc
pushf
in
cmp
jle
cmp
cmc
xor
out
cmp
aam
mov
mov
insl
push
jge
pop
sbb
push
xor
imul
je
xor
lods
out
adc
add
dec
jae
xor
add
ss
aad
cld
inc
mov
sub
mov
adc
ss
leave
push
ja
sbb
dec
aaa
push
ja
out
lock
adc
mov
shrl
fidivl
mov
mov
xchg
popf
loope
fistps
andl
xchg
pop
ret
xor
ja
xor
jg
jmp
and
mov
and
add
cmc
jle
loope
fnstsw
lds
repnz
sahf
in
cld
scas
pusha
jp
sahf
data16
roll
adc
mov
dec
lret
ret
sti
call
push
ljmp
or
and
jecxz
out
lcall
jg
bound
pushf
loop
jne
xchg
pop
xchg
pop
lock
in
mov
dec
inc
fimuls
sub
mov
movsl
outsl
cmp
jl
loopne
cltd
lods
inc
insl
push
test
sahf
jno
mov
fsts
cmpl
fcmovnb
mov
sbb
xlat
clc
pop
dec
ficoml
cli
ret
jbe
mov
jns
push
mov
push
sti
pop
mov
push
mov
inc
sbb
shll
xchg
inc
enter
mov
in
pop
sahf
cwtl
mov
inc
lds
cli
test
dec
and
and
stos
scas
ss
mov
fisttpll
xorl
sbbb
popa
add
xor
sub
jge
cld
addl
xor
jb
sub
inc
imul
ja
filds
inc
out
or
rep
fmull
pop
dec
lret
fs
sbb
pusha
mov
jmp
xchg
sbb
lret
mov
mov
loope
push
cli
adc
rcll
iret
push
std
rorl
xor
pop
sbb
mov
popf
nop
mov
adc
mov
mov
or
push
jno
adc
roll
loopne
mov
jbe
insb
hlt
push
gs
jo
mov
lock
push
stc
jo
cmp
ss
hlt
dec
repnz
inc
mov
push
pop
popf
je
loope
andl
sti
sub
je
imul
push
stc
push
std
mov
inc
and
aas
jo
jp
fsubrs
jmp
and
mov
mov
xchg
mov
fisubrl
incb
mov
add
addb
mov
and
fcoms
jle
jno
insl
daa
jmp
pop
mov
mov
jecxz
inc
stos
mov
cmpl
mov
dec
mov
inc
fdivr
and
cmp
add
dec
js
jnp
outsb
das
jno
jns
pop
ret
fwait
push
sub
mov
lret
cmp
std
sub
dec
fsubp
cli
mov
adc
leave
pop
loopne
fdivl
add
addr16
mov
in
inc
sbb
test
popf
aaa
outsl
outsb
lret
pop
sbb
outsl
mov
dec
or
mov
in
xchg
loop
ljmp
push
jbe
cld
cmpsl
push
bnd
jg
mov
les
cmp
aas
pop
or
inc
mov
cli
xor
imull
push
xchg
pusha
in
mov
jnp
pop
jp
sbb
adc
out
vxorps
lock
lcall
and
push
push
sbb
jnp
sbb
gs
lods
fistpl
daa
insb
sbb
cmc
push
mov
jl
rcll
inc
cmp
mov
dec
ljmp
addl
ficomps
orl
mov
xor
push
or
mov
sbb
push
jo
fnsave
ss
jle
adc
sbb
cmp
out
fistpl
repz
mov
or
and
les
push
pusha
mov
stc
bound
mov
push
add
xchg
or
addl
xchg
and
add
sbb
insb
push
or
ja
popf
ficomps
jo
negl
mov
stos
aaa
inc
loop
loop
loop
arpl
xor
fnstcw
out
push
push
ret
and
xchg
das
sbb
rorb
cmp
push
repnz
mov
bswap
mov
push
sbbb
cmp
xor
jg
and
and
adc
mov
lods
xor
lods
jne
xchg
in
fdivs
aam
filds
cmpsl
mov
push
int
popf
xorl
and
sbb
cmpsl
movsl
movsb
pop
pop
mov
pop
jl
xor
mov
dec
loopew
xchg
mov
jecxz
data16
int
cmpl
mov
pop
lahf
add
mov
arpl
dec
cmp
rcll
inc
pushf
jne
das
inc
cmpsb
cmp
ds
xchg
gs
and
and
stos
adc
mov
aas
jo
push
dec
xlat
add
lock
jne
shr
dec
adc
jmp
jo
jno
fistl
or
pop
pop
test
fisubl
or
push
icebp
cmp
adc
adc
or
push
mov
pop
jo
repz
inc
js
sbb
orb
sti
mov
sub
mov
movsl
mov
xchg
movsb
mov
lea
mov
test
movsb
lods
mov
mov
mov
push
bswap
jae
sub
or
enter
lret
jge
loop
lods
dec
mov
hlt
call
stc
dec
adc
repz
jmp
jo
ljmp
cmpsb
inc
xchg
jecxz
aad
sahf
mov
lods
lds
roll
cwtl
add
add
les
dec
mulb
fwait
popa
xchg
shrl
ret
xchg
sbb
sbb
jae
cmpsl
nop
mov
lock
test
bound
mov
in
xchg
fsubrl
out
push
pusha
xchg
cld
int
xchg
xchg
xlat
fwait
lahf
and
dec
sbb
pop
std
xor
push
imul
cli
lret
inc
or
sub
mov
inc
mov
dec
inc
out
icebp
ret
dec
loop
jmp
cmp
nop
cmpsb
repnz
push
lods
adc
mov
into
xchg
nop
mov
add
scas
xchg
or
xchg
pop
mov
jle
pop
test
or
push
lcall
jae
add
or
daa
ret
in
rcr
cmpsb
sti
hlt
inc
iret
icebp
xchg
in
pop
sub
in
call
lret
inc
popw
cmp
popf
cld
xchg
mov
add
lahf
pop
mov
cmp
shl
pushf
lret
scas
and
and
pusha
cmp
mov
mulb
lea
rorb
cmp
leave
andl
jb
or
jmp
subb
pop
pusha
jp
leave
es
mov
push
mov
fnsave
shll
lret
add
decb
xchg
iret
or
stos
xchg
bound
cmpb
xchg
inc
mov
adc
cmp
and
inc
mov
movhpd
out
cmp
cmc
mov
add
and
mov
xchg
into
int3
stos
in
daa
ficoml
clc
push
shr
popa
in
filds
pop
jmp
cmp
out
lret
mov
mov
and
stc
lock
jnp
inc
xchg
or
jg
fwait
sub
ret
mov
dec
shrb
test
push
adc
stos
pop
jg
pop
pop
push
lock
inc
sbb
or
dec
pop
fs
sbb
push
cld
cmpb
iret
mov
push
xchg
pop
cli
cmp
mov
add
shlb
inc
mov
ret
xchg
out
daa
pop
psrad
xor
cld
inc
jbe
mov
jb
and
dec
dec
ljmp
mov
call
aaa
or
mov
dec
ljmp
xor
xor
pop
fistps
pop
dec
adc
mov
dec
mov
lds
add
sub
xor
mov
dec
in
push
ficomps
rolb
add
fsubrs
stc
pop
dec
je
daa
mov
mov
push
jl
lahf
ja
mov
cltd
jb
add
cmp
push
jp
test
enter
add
lds
pusha
dec
les
mov
or
ror
arpl
stc
push
and
cmp
push
mov
xor
add
jb
jecxz
sub
ror
dec
mov
movsl
jg
frstor
das
hlt
dec
sub
sbb
ja
or
fidivrs
loopne
or
xor
test
xchg
pop
push
jbe
lea
and
xor
adc
and
nop
mov
fs
cmc
jno
lds
rorb
mov
pop
fst
xor
popa
push
and
jnp
and
cmpsl
inc
xor
sbb
dec
dec
lcall
inc
outsb
cmp
mov
divb
testl
xor
mov
xchg
jp
cmc
xor
loopne
outsl
push
out
ljmp
mov
push
mov
jp
orb
cmpsl
pushf
cld
mov
outsb
cmp
mov
in
incb
addr16
mov
push
js
mov
jbe
int
testl
jae
andb
add
insb
cmp
in
and
and
fwait
jmp
mov
rcrb
int3
outsb
or
push
pop
or
leave
mov
mov
jmp
mov
or
push
add
sub
ret
sbbb
fnsave
jb
jle
ljmp
xor
xor
cld
xlat
lods
xchg
cli
rcr
xchg
test
popf
bound
mov
adc
test
ret
lcall
sahf
inc
dec
insl
xor
xchg
aam
jbe
scas
and
cmp
add
inc
dec
jp
lahf
push
jge
adc
jb
add
mov
mov
mov
mov
ja
pop
inc
icebp
mov
popa
jbe
out
iret
dec
mov
in
imul
sub
rolb
inc
lret
aaa
test
popa
jo
push
add
repz
xchg
ss
inc
pop
imul
mov
pop
jge
mov
xchg
lret
les
jp
ljmp
or
add
loop
inc
jecxz
in
add
inc
cmpsb
mov
es
xlat
data16
and
popf
stos
mov
and
push
and
push
sub
xor
fnstcw
ud2
mov
es
and
rorb
popf
mov
mov
sbb
push
adc
dec
in
sbb
dec
addb
ds
ss
pusha
mov
pop
scas
push
or
push
les
push
inc
push
cmpl
loopne
test
les
cmp
shl
jg
dec
push
mov
repnz
ret
xor
cmc
ret
mov
je
push
sbb
pop
jle
and
scas
add
sbb
jle
push
imull
lods
jecxz
mov
inc
jecxz
pop
inc
and
jbe
pop
pop
xor
sub
xchg
mov
xchg
clc
jns
mov
divb
pop
das
enter
cmp
sbb
aam
in
sbb
push
sub
push
pop
cmp
inc
rcll
stos
rep
dec
mull
ljmp
imul
mov
stos
mov
mov
shlb
cmc
and
mov
push
or
push
sbb
stc
in
fists
testl
out
aad
sti
xor
xchg
add
lods
jnp
pusha
repz
test
sar
out
sbb
push
pusha
push
stos
xchg
lea
pop
cld
or
mov
mov
pusha
int
sub
jne
push
cltd
xor
fstps
fnsave
or
subl
dec
mov
in
pop
cli
enter
jmp
inc
push
fstl
and
xor
sub
cmp
mov
cli
cli
cmpsl
fwait
inc
movsb
clc
jge
shlb
pop
imul
scas
jb
cmp
xchg
inc
mov
and
in
cld
ljmp
rcr
mov
or
out
fdiv
mov
mov
sub
fildl
or
mov
push
in
fnstcw
in
pop
jecxz
push
jmp
pusha
push
pusha
js
push
push
pop
in
adc
dec
xor
shll
or
imul
jg
leave
sub
iret
adcb
je
mov
xor
roll
fstp
push
mov
mov
jae
adc
mov
inc
aad
into
xchg
aam
insl
ret
adc
mov
cs
mov
sbb
inc
cmp
and
comiss
mov
adc
cmp
pop
jecxz
gs
and
nop
lcall
mov
rclb
dec
cs
cmc
mov
mov
mov
imul
ds
push
mov
sbb
popf
xor
jns
loopne
cmc
xchg
xor
cmp
dec
je
inc
lea
rcl
xor
mul
filds
out
inc
in
sbb
dec
rclb
push
mov
inc
pop
int3
add
xor
and
push
push
orb
and
repz
or
bswap
or
jmp
mov
icebp
jg
sub
fistpl
loopne
xor
mov
push
cmp
in
ja
push
xchg
out
sahf
es
into
ds
add
push
push
mov
ret
fcoml
mov
inc
cwtl
stc
aaa
fwait
add
test
push
and
and
jmp
mov
fxch
mov
jns
adc
sbb
jo
ss
in
or
mov
sbb
xchg
mov
ret
bound
cmpsl
pop
addr16
jmp
sub
lahf
xlat
mov
and
xchg
test
jbe
xchg
xchg
imul
je
popa
adc
outsl
mov
insb
xchg
cmc
bound
loope
inc
es
mov
sub
int
rorl
fisubl
jne
jle
mov
mov
rolb
jg
lahf
inc
sub
pop
decl
push
test
adc
and
aas
pusha
daa
clc
pop
ljmp
adc
dec
mov
and
dec
mov
mov
xchg
or
sub
out
pop
gs
pop
jae
in
xor
cmp
xchg
imul
inc
movsl
and
iret
cld
sub
das
push
mov
xchg
divl
inc
add
jbe
pop
nop
or
dec
lods
je
stos
insb
nop
rorl
dec
xor
cmp
loop
cli
xor
lahf
fisttpl
mov
adc
sbb
stos
iret
mov
and
leave
fcoml
lret
and
mov
loop
jne
dec
out
dec
mov
hlt
mov
rclb
inc
int3
push
shlb
stc
mov
mov
push
inc
dec
addl
xchg
addr16
je
lahf
inc
hlt
jne
out
pop
std
mulb
imul
out
arpl
lock
int
stos
pop
or
push
sbb
arpl
cmp
pushf
cs
adc
ja
inc
jp
popf
idiv
or
xor
sbb
mov
sarl
mov
iret
in
insl
mov
fwait
xor
cmc
dec
and
cmpl
xorl
dec
call
mov
push
add
scas
jne
jle
orb
xor
xor
xchg
shr
and
repnz
inc
xorb
add
mov
into
test
sub
dec
xchg
ficompl
aad
push
jmp
xchg
pop
out
mov
mov
cmc
jb
mov
or
dec
and
loope
adc
mov
scas
cli
add
xor
push
sub
mov
push
lds
push
pop
push
aam
jb
mov
mov
jl
cmp
mov
inc
sbb
push
cmp
loop
add
stc
or
mov
mov
scas
sbb
insl
mov
xor
fldl
pusha
jae
xor
mov
fcoml
aas
gs
cli
sbb
ret
loop
jl
dec
jnp
mov
dec
jecxz
pop
push
jnp
loop
push
out
mov
in
add
popf
fwait
cmp
mov
fcomp
pop
scas
jo
das
xchg
fwait
add
jmp
sub
xor
xor
lcall
es
les
test
add
pop
aaa
pop
lret
lods
xor
lea
rorb
gs
out
push
outsb
lahf
out
scas
xor
addl
xchg
popa
dec
popf
push
adc
adc
out
mov
das
loope
movsl
data16
jl
pop
ret
pop
loop
lods
xchg
pop
lock
jecxz
jns
jno
fwait
mov
addr16
repz
lea
bound
clc
jo
movsl
mov
xchg
sbb
jns
pop
data16
pop
and
pushf
inc
test
orb
cs
stc
push
fistl
test
shrl
stos
cmp
sub
sbb
or
cli
sbb
or
cmp
sub
jnp
imul
mov
dec
stos
cmp
sub
sbb
or
cli
sbb
or
cmp
sub
jnp
imul
mov
mov
sub
sbb
lret
sbb
or
cmp
sub
jnp
imul
mov
mov
cmp
sbb
mov
cli
sbb
pop
int
and
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
cmp
fs
jne
pusha
sub
in
hlt
std
test
xchg
frstor
push
sbb
add
cwtl
pop
and
inc
mov
in
hlt
std
jmp
xchg
fucom
int
cmp
int3
or
sub
dec
sub
sbb
xchg
shlb
cmp
jg
cmp
cmp
outsb
push
fidivs
loope
ljmp
or
add
mov
test
mov
in
test
push
fsubl
cmpsb
push
aad
test
push
jl
and
push
bound
jns
movsb
fs
mov
test
imul
add
jl
fbld
test
shrl
imul
iret
out
push
pop
mov
and
pop
sub
xor
xchg
push
les
xlat
out
xchg
cmp
test
dec
test
xchg
mov
mov
roll
xor
sub
jle
add
adc
decb
mov
hlt
lea
movsb
int
jnp
inc
push
js
push
jnp
dec
or
cld
subb
cwtl
jmp
loopne
in
aad
add
dec
add
add
pop
dec
dec
pop
fsubs
enter
mov
fists
adc
pop
jge
insl
adc
and
xor
les
hlt
std
test
xchg
frstor
push
sbb
add
adc
and
xor
les
hlt
std
test
xchg
frstor
andl
xchg
pop
sub
pop
dec
pop
loop
fcoml
outsb
cltd
mov
push
mov
cmp
loope
ds
mov
mov
lods
inc
xorb
lcall
jb
adc
mov
loope
mov
jmp
add
dec
lcall
sub
scas
pop
scas
hlt
or
and
jnp
jae
sbb
mov
fsts
push
xchg
ss
arpl
mov
or
fisttpl
movsl
rorb
pop
or
imul
cwtl
adc
push
jg
cmp
mov
mov
test
xchg
pop
outsb
push
dec
fstpt
and
fisubl
sub
cmp
test
push
add
push
shr
nop
or
sub
cmp
nop
xchg
xor
push
sti
xor
jecxz
jo
outsl
push
inc
mov
stos
imul
test
mov
pusha
lods
xchg
sub
pushf
dec
in
jg
mov
or
roll
loope
scas
lcall
out
dec
nop
cmpsb
mov
inc
jnp
sbb
into
cmp
jne
jns
popa
mov
adc
movsb
push
daa
xchg
jmp
mov
jecxz
leave
cmpsl
mov
aas
cmpsl
jbe
shl
and
jns
repnz
and
pushf
mov
inc
divl
pop
mov
pop
lock
iret
mov
push
sub
add
cli
cli
je
popf
mov
adc
inc
push
ss
adc
int3
add
test
popf
shlb
stos
inc
nop
mov
jno
cwtl
sahf
lods
scas
mov
stc
rolb
jno
inc
dec
jno
jne
ss
outsb
movsb
mov
inc
rclb
xor
repnz
adc
test
out
add
push
push
movb
hlt
notl
nop
push
jo
int3
imul
pop
or
aam
jmp
mov
inc
jle
and
mov
lcall
sbb
test
pop
sbb
lcall
fmuls
or
sahf
iret
push
cmp
or
mov
push
pop
mov
hlt
roll
stos
fcompl
nop
clc
lock
jge
in
push
int3
xchg
or
scas
mov
cmp
xchg
frstor
sub
ljmp
inc
cwtl
pop
sbb
pushl
ret
imul
push
ds
sub
push
push
push
push
push
jp
mov
or
ds
out
cwtl
mov
cli
movsl
jecxz
roll
shll
nop
xchg
inc
mov
daa
sar
sub
push
fisubrl
andnps
jnp
jnp
scas
jne
arpl
ret
pminsw
rclb
push
xchg
sub
aaa
das
stos
ds
pop
daa
dec
sub
int
mov
in
mov
test
cli
and
lret
xchg
ret
adc
jecxz
or
dec
jb
loopne
pop
test
inc
mov
push
push
sub
fs
arpl
mov
dec
aam
add
mov
mov
mov
adcb
int3
fists
inc
hlt
cmc
inc
mov
mov
addr16
out
fucom
adc
inc
sub
add
movsl
push
in
into
out
xchg
mov
shll
popa
loop
mov
scas
adc
pusha
xor
add
dec
stos
loope
nop
inc
in
stc
rorl
cmp
hlt
add
cmp
cmc
xchg
jb
push
dec
pop
mov
gs
xor
pop
mov
sbb
adc
mov
and
dec
arpl
mov
jg
cmp
int
and
mov
sub
sbb
lds
xchg
cmpsl
cltd
inc
cltd
in
js
gs
aad
into
xchg
daa
sarb
xchg
dec
jne
movsb
ret
daa
dec
insb
xlat
lds
shr
testb
mov
mov
sub
add
clc
and
pop
push
or
addr16
pop
xchg
mov
adc
mov
outsb
jbe
ja
inc
ret
mov
imul
mov
add
pop
lahf
outsb
jns
fdivs
inc
popa
scas
sbb
ret
repz
jmp
and
cmp
int3
imul
dec
cmp
inc
push
lret
hlt
into
repz
cmp
cltd
into
adc
dec
clc
aas
lret
push
push
in
dec
shlb
sarb
sbb
fisubs
lahf
cmpb
imul
jl
in
leave
inc
sub
and
pop
and
pop
or
hlt
pop
sub
or
jp
insl
stos
adc
arpl
dec
aaa
pop
jbe
shr
mov
cmp
lock
xchg
fwait
in
cld
mov
dec
outsb
test
and
mov
aad
faddl
cmc
inc
daa
sub
mov
lcall
cld
lds
pop
unpcklps
xchg
sarb
add
out
cs
xchg
mov
add
outsb
arpl
add
or
subb
pop
imul
imul
scas
jo
push
test
mov
lods
cld
cmp
cs
xor
or
xor
sbb
jle
sub
inc
push
xor
mov
sub
xor
sbb
lods
inc
out
insl
cltd
int3
imul
add
xor
pop
les
rorl
cmc
mov
inc
dec
data16
push
inc
mov
scas
sbb
jl
pop
jmp
xor
adc
std
add
clc
hlt
iret
test
jbe
pcmpgtw
xlat
jp
or
mov
rolb
icebp
mov
pop
dec
test
sbb
rcrb
cs
mov
imul
mov
mov
or
das
loope
fiadds
cmp
shrb
test
push
cmpsl
mov
popf
out
push
jg
sbb
test
insb
xchg
fsubs
jb
dec
adc
cmp
or
pop
pusha
pop
cli
inc
adcl
stos
mov
dec
cmc
cmpsb
mov
sub
rcll
xlat
jmp
and
dec
sub
scas
xchg
call
and
insb
mov
sub
outsl
lahf
addb
add
xchg
dec
and
std
sub
cmp
into
clc
fwait
std
mov
sbb
dec
cmpl
movsb
test
sbb
pop
and
push
rolb
add
div
and
clc
lahf
jb
xlat
cmc
fcoms
movsb
and
mov
mov
cmp
mov
xchg
xchg
push
dec
sub
and
dec
cwtl
pushf
movsb
or
pop
ds
imul
push
or
dec
or
in
cli
arpl
jmp
jbe
stos
ds
add
rcll
shlb
mov
outsb
xchg
jmp
mov
movsl
loopne
stos
add
xor
in
pop
das
mov
jg
test
movsl
stos
imul
pop
adc
pop
cmc
sub
aaa
icebp
sub
adc
daa
mov
pusha
adc
jb
mov
pop
jo
add
lock
fwait
adc
js
pop
xchg
sahf
inc
into
mov
push
imul
out
out
cwtl
mov
push
jb
shll
push
sub
cltd
add
push
test
outsl
out
cmp
and
pop
js
and
das
sbb
add
mov
jo
into
fwait
xor
xchg
repz
mov
bnd
cwtl
mov
mov
cmp
movsl
cmp
and
roll
mov
pop
fdivr
inc
loopne
add
into
jbe
stc
cmp
push
arpl
mov
lea
adc
xchg
nop
sub
sbb
test
xchg
dec
scas
pop
xchg
xor
mov
dec
fstpt
adc
pop
mov
pop
loopne
mov
mov
fldl
pop
inc
inc
xchg
ss
mov
and
aad
push
or
inc
add
lds
adc
rcrl
int
dec
or
loopne
out
mov
aam
scas
mov
scas
and
jno
scas
inc
cmp
sbb
mov
cltd
aam
sub
and
data16
jo
mov
scas
icebp
fisubrs
xchg
adc
inc
mov
aad
jmp
push
popa
pop
mov
shl
in
cmc
pop
sbb
jg
jp
fst
pop
ds
out
dec
insl
sbb
aam
push
sub
mov
movsb
enter
add
jmp
pop
and
add
fildll
je
in
shl
rorb
pop
pusha
lcall
mov
push
adc
sbb
dec
popa
fwait
loopne
sbbl
push
xchg
push
and
dec
ss
lods
and
in
jae
cmp
repnz
in
jp
aas
or
and
mov
mov
int
out
jge
jne
sub
add
fwait
inc
cmovne
add
inc
dec
in
dec
ss
nop
shrb
adc
mov
cmp
mov
andb
xchg
mov
mov
inc
repnz
ss
xor
push
jns
mov
dec
dec
sub
or
and
jp
scas
lea
loope
or
jne
aas
js
inc
mov
leave
push
jb
scas
mov
push
mov
into
mov
dec
add
mov
clc
or
sub
lret
push
dec
push
xor
je
pop
das
push
repnz
add
lock
arpl
test
mov
sub
mov
jmp
jb
add
aam
lahf
sbb
cmpsb
filds
xor
mov
stos
pop
incb
cs
cwtl
out
cwtl
imul
inc
inc
cs
pop
decb
and
cmpsb
adc
push
xor
leave
outsb
sti
insb
mov
sbb
mov
sub
mov
incb
test
sub
enter
roll
data16
cli
jge
mov
test
in
popa
push
aam
nop
lret
pop
push
inc
fstpl
lock
repz
jns
aas
xlat
ss
das
and
and
mov
lods
inc
imul
xchg
rolb
or
lcall
imul
pop
mov
push
ljmp
mov
push
pop
je
std
stc
sbb
movsl
out
xchg
push
or
fsubl
adc
mov
sti
lcall
das
jno
push
cs
ljmp
lock
cmp
sahf
adc
inc
dec
xchg
out
sbb
or
mov
adc
insb
daa
ds
jp
adc
insl
mov
cmp
sub
jmp
out
jae
adc
scas
adc
and
mov
add
mov
adc
jmp
ljmp
test
mov
push
and
and
jle
jae
ficoms
dec
imul
sti
mov
mov
sarl
js
xchg
sub
hlt
mov
nop
pusha
inc
sti
mov
ficoml
in
fwait
xchg
into
dec
jb
dec
xorb
push
icebp
fmull
mov
enter
adc
fadd
sub
jge
int
add
add
jp
pop
cmp
movb
adc
xlat
lret
sub
jle
dec
cmp
roll
or
clc
mov
gs
mov
stos
ja
dec
negb
lea
icebp
mov
ret
imul
dec
mov
test
pop
sbb
scas
cmp
js
pop
dec
push
jno
add
pop
jnp
mov
sbb
xchg
dec
test
xor
and
repz
jnp
mov
push
pop
insb
or
lods
xor
aaa
cmp
add
pop
jp
jmp
mov
in
mov
fiaddl
xchg
fwait
enter
inc
outsb
jno
cvtps2pi
mov
dec
das
xlat
rcr
cwtl
imul
adc
push
xchg
push
mov
xchg
sbb
mov
in
push
icebp
scas
or
nop
dec
and
or
sub
inc
fcoms
andb
cmpsb
and
fdivrp
enter
xchg
jns
scas
pushf
out
push
mov
or
leave
sti
les
imul
outsl
jl
mov
adc
xchg
pop
lret
out
icebp
outsb
jecxz
pusha
jns
mov
or
in
xorl
sti
xor
xchg
or
mov
cmp
stos
inc
xor
in
pop
fbld
sbb
lock
andl
stc
fdiv
rolb
mov
mov
addr16
daa
xchg
or
iret
or
sub
or
sbb
mov
or
nop
pop
and
pop
out
mov
xchg
fimull
fiaddl
pop
adc
test
shl
xchg
int3
or
shll
xchg
sub
add
sbb
jp
pop
and
add
jge
aad
mov
outsb
mov
jb
mov
jae
mov
shlb
sub
sti
sbbl
test
cmc
fcmovu
sbb
inc
enter
js
jp
aad
cwtl
add
and
js
or
pop
aaa
dec
mov
loop
inc
or
jb
ljmp
and
xor
jbe
stos
add
mov
mov
push
rorl
mov
adc
imul
cmp
ret
orl
sub
fst
push
adc
jns
aaa
adc
ss
outsb
cld
jle
pop
or
sbb
jl
push
add
pop
ljmp
jb
lock
je
sub
jg
scas
mov
add
psadbw
lahf
sub
stos
mov
es
mov
xlat
push
scas
fwait
mov
xchg
jne
cmpsl
sub
imul
or
inc
push
pop
xchg
and
xor
es
imul
or
insb
inc
jmp
xchg
adc
shll
in
and
pop
leave
push
mov
fwait
mov
fisubl
fsubl
mov
xchg
jns
mov
lret
pop
rorb
pop
mov
test
sbb
leave
gs
pop
cmpsl
add
icebp
repnz
mov
push
push
ljmp
outsl
add
jge
xor
sbb
xchg
fisubrs
inc
xor
mov
mov
mov
xor
cld
das
pushf
popa
xchg
sbb
push
adc
orl
test
test
pop
aam
ja
inc
fwait
gs
js
loope
add
pop
xchg
jae
xchg
inc
pop
pop
pop
loopne
cli
in
push
dec
test
mov
out
testl
or
pop
or
dec
dec
push
scas
clc
mov
or
push
lods
jle
cmc
xlat
lock
ficoml
jl
mov
aaa
sbb
andb
insl
add
cmp
mov
js
mov
fwait
xchg
jns
sbb
lods
and
pop
xchg
cmc
cld
dec
fsubs
addr16
jo
sar
push
push
or
adc
xchg
sbb
xchg
xchg
repz
inc
mov
jno
sub
xor
scas
iret
push
xchg
cmp
push
daa
stos
clc
cmp
idiv
pop
loopne
inc
loope
mov
iret
fistpll
cmpsl
sti
or
inc
rclb
stos
lods
sbb
pop
mov
mov
repnz
push
lahf
cmc
xchg
movsl
mov
dec
and
push
add
adc
lods
insl
fimuls
push
xchg
sti
xchg
cli
push
es
notl
lock
movsl
rclb
leave
jmp
push
cmp
popa
fadd
clc
fstl
add
mov
ja
scas
out
popf
jb
adc
test
inc
loopne
sbb
bound
pop
insb
mov
pop
jae
pop
pop
cli
fs
xor
addl
push
mov
adc
lock
icebp
lock
cmp
repnz
bound
adc
fmuls
popa
ja
sub
out
xor
mov
ret
push
shlb
dec
jo
cwtl
fdivl
lods
pop
xchg
ret
cmpsl
jl
aaa
sbb
push
lret
enter
lods
test
scas
push
leave
insl
xor
lret
dec
and
mov
and
push
jg
imul
mov
lods
mov
mov
ret
adc
or
or
stos
mov
sbb
out
add
add
pushf
inc
adc
xor
fisttps
xchg
mov
data16
and
sbb
adc
mov
lods
aaa
fcmovnu
in
cmp
outsl
outsl
pop
dec
xchg
cmp
inc
lcall
push
xlat
mov
setbe
adc
or
jno
loopne
push
or
push
xchg
lods
leave
xchg
inc
pusha
dec
add
aam
sub
orl
arpl
das
mov
pop
xchg
adc
nop
xor
cmpsl
shrb
incl
dec
in
jl
lods
dec
cmpxchg
std
push
cmp
mov
pushf
subl
cli
pop
inc
fidivrl
and
push
or
xor
jae
xchg
dec
call
into
push
cmc
push
and
xchg
pop
shll
loop
out
shl
sarb
adc
sbb
cmc
push
xor
mov
sbb
int3
cmp
stos
outsb
xor
add
ja
mov
cmp
mov
into
dec
insl
stc
cld
mov
push
cmpsl
xor
cmp
or
mov
add
sbb
idivl
push
paddusb
les
hlt
xchg
xchg
xchg
push
insl
mov
lods
cli
repnz
mov
mov
sub
dec
xlat
xor
ss
lds
int
les
loopne
popf
in
fld1
shll
inc
testb
xchg
imul
out
adc
pop
dec
les
inc
ds
mov
mov
add
popf
repz
pop
orl
pusha
shlb
cltd
sub
inc
leave
insb
pop
cmc
imul
enter
sahf
les
aaa
xor
lods
int3
jne
cwtl
sbb
and
je
jbe
pushf
inc
cli
imul
fdivr
sbb
out
stc
lret
lea
pop
cmp
pop
aad
dec
xchg
inc
enter
add
cmc
cltd
popf
jbe
pop
mov
dec
mov
in
out
leave
pushf
mov
sbb
mov
lret
imul
scas
adc
inc
xchg
mov
xor
mov
cltd
jne
xorl
mov
sahf
jmp
lods
push
cmpsl
ret
adc
inc
hlt
repnz
mov
xor
push
out
cmpsb
pusha
xchg
incb
repz
movsl
out
subl
adc
pushf
dec
cmp
sub
rorl
lds
gs
pushf
sbb
xor
aad
lds
push
divl
xchg
ja
pop
ret
out
push
push
inc
loop
fdivl
add
aaa
es
xchg
cmpl
push
fisttps
loopne
mov
js
repz
repnz
mov
in
out
outsl
arpl
aaa
cmpsb
out
mov
fs
ss
in
shrb
stos
dec
lods
pop
xchg
pop
pop
leave
sbb
push
mov
lahf
mov
mov
push
mov
pop
add
loope
mov
push
filds
add
xchg
pop
push
cltd
bnd
pushf
outsb
rcll
fadd
jle
inc
sbb
xchg
js
in
add
fidivrs
cmpsl
sub
cmp
hlt
dec
mov
int
pop
popa
jle
inc
cmpsl
inc
sbb
push
cwtl
dec
iret
leave
sub
loopne
imul
pop
sarb
pop
loopne
lret
push
push
mov
cmpsb
lods
xor
pop
stc
inc
call
repnz
iret
inc
jnp
push
fsubrs
and
sub
adc
xor
out
lea
ret
mov
sbb
push
dec
ljmp
insl
hlt
pop
addr16
push
in
and
mov
and
ss
jb
movsb
jae
jae
sbb
arpl
sub
jg
ret
orl
mov
or
aaa
adc
outsb
data16
push
dec
jnp
cmp
mov
push
lretw
push
out
inc
cmp
jg
faddl
orl
and
push
imul
xor
pop
add
mov
pop
repz
lods
fisubrs
and
mov
shll
gs
jp
repz
push
mov
push
stos
js
inc
cs
ret
std
xor
dec
movsb
mov
xchg
mov
ds
sub
ficoms
sti
cmp
insl
std
mov
xor
inc
push
sbb
sbb
das
jne
dec
sub
loop
rcrl
mov
icebp
jmp
into
xchg
dec
psraw
pop
fiadds
mov
lret
add
repnz
out
outsl
shlb
xlat
xchg
adc
inc
jae
pop
jg
jl
movsb
jecxz
popf
rcll
scas
sub
int
ds
in
add
hlt
aas
pop
loope
mov
ja
dec
xchg
lret
out
push
mov
or
ficoms
xchg
retw
sahf
jnp
repnz
and
xchg
cltd
das
jnp
adc
mov
mov
jmp
lds
negl
je
hlt
xchg
es
and
test
xchg
test
mov
loope
push
repz
mov
std
jb
daa
icebp
pop
mov
lock
xor
add
sbb
incl
inc
jns
out
mov
sbb
jns
test
pop
dec
mov
idiv
inc
clc
ret
mov
adc
fstl
jmp
es
mov
sub
mov
inc
sbb
xchg
mov
ds
std
dec
into
mov
loop
and
bound
adc
adc
jbe
stc
aam
and
repnz
mov
mov
sti
jo
sbb
pop
ja
repnz
movsl
daa
lock
cmp
dec
dec
addr16
stos
adc
pop
fnstenv
fcompp
loope
mov
test
or
stc
inc
mov
popf
sub
dec
mov
aas
mov
mov
lea
repnz
int3
notb
xor
sbb
test
inc
clc
arpl
les
or
repnz
mov
leave
scas
popl
jg
and
push
cld
repnz
insl
push
imul
xchg
fcom
in
pop
in
lds
pop
sbb
dec
mov
adc
mov
outsb
mov
das
jno
pop
sbb
or
mov
cltd
dec
and
popf
or
in
pusha
mov
call
sub
jg
jge
les
xchg
mov
jg
inc
sbb
pop
mov
dec
push
add
inc
je
add
mov
rol
inc
loope
cmp
scas
sbb
and
push
push
jno
rcl
dec
push
lock
pusha
jno
notb
add
xchg
mull
out
cmpsl
in
adc
push
mov
adc
xlat
imul
dec
xor
jns
or
loopne
sti
pop
ja
in
cmp
push
mov
sbb
jecxz
hlt
call
test
movsb
inc
insb
outsl
call
scas
xor
push
pop
or
adc
and
xor
les
hlt
std
test
xchg
frstor
push
sbb
add
adc
and
xor
les
hlt
std
test
xchg
frstor
sbb
sbb
je
add
mov
mov
in
hlt
std
test
xchg
fldl
push
sbb
add
adc
movsb
dec
xor
cmp
orl
xor
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
lret
sbb
lock
rolb
js
mov
add
jo
pusha
clc
xchg
sbbb
sub
dec
lock
add
push
mov
pusha
clc
mov
cltd
add
push
flds
jo
bound
mov
mov
jg
or
xchg
loopne
subb
into
pop
fadds
sbb
stc
lods
int3
mov
js
outsl
adcl
cmp
stos
add
jmp
clc
sub
xchg
xorb
bound
ret
shll
clc
and
pusha
ret
scas
insl
add
mov
push
xlat
sub
dec
aad
sbb
std
and
push
xor
xor
mov
jo
jg
jmp
mov
sub
sbb
and
lret
std
mov
subb
mov
ret
adc
sub
loopne
repnz
push
and
loopne
cmp
pop
orb
xor
pop
lock
sbb
dec
rcrb
jo
jns
jecxz
in
aad
les
dec
lods
cmp
add
sbb
inc
lods
dec
fnstsw
add
jno
pop
mov
push
pushf
sbb
dec
adc
add
jne
push
mov
add
mov
aad
mov
pop
lock
add
push
enter
call
sbbb
sub
pop
lock
add
push
enter
call
inc
or
scas
enter
push
mov
in
in
mov
popf
ljmp
cmpxchg
jge
add
or
push
lds
flds
jle
aaa
jb
adc
sbb
iret
rcll
sbb
sarl
mov
shlb
test
pop
and
fst
add
rcll
lds
jecxz
cwtl
bound
ss
dec
and
std
jp
push
aaa
movb
pusha
aas
ret
imulb
jno
data16
dec
leave
push
sub
adc
rclb
cli
xchg
je
inc
imul
push
and
or
setb
mov
rclb
lret
addr16
cmp
arpl
xchg
sbb
fistpll
and
add
fcmovne
mov
push
or
out
aaa
jnp
out
push
push
outsl
cmp
in
inc
repnz
cmp
test
pop
and
je
int3
out
inc
sbb
repnz
dec
add
data16
and
or
and
jmp
push
icebp
mov
loop
cmpsl
xor
pop
cmp
sbb
jae
jp
mov
ret
in
mov
pop
in
adc
push
cmpsl
call
ret
xchg
enter
mov
je
cmpsb
xor
pop
sub
jle
les
xor
add
mov
sarb
outsb
stc
inc
data16
clc
scas
sub
cmp
sbb
insl
xor
xlat
xor
les
fadds
add
out
fidivrs
out
arpl
fcomi
sbb
xchg
mov
push
push
sub
push
mov
cld
mov
popf
scas
cmp
or
shll
cwtl
xor
jp
ret
fists
rcrb
jl
mov
in
imul
leave
daa
cmpsb
adc
hlt
lock
in
xor
movsl
sub
sub
mov
mov
ficompl
adc
or
push
js
in
or
add
popf
push
in
sbb
xchg
scas
lds
pushf
das
pop
sbb
xorl
cmpsb
jl
fstps
stc
xchg
aam
add
rcrb
outsl
jmp
loopne
mov
arpl
in
adc
cmp
subl
dec
adc
js
fimuls
jecxz
sbb
mov
jg
lcall
push
and
cli
imulb
in
xchg
js
cmpsb
cmp
stos
fcomp
pop
or
mov
pop
dec
mov
int
pop
aad
pop
pushf
cmp
gs
jle
adc
mov
dec
mov
adc
stc
sarl
cmp
mov
mov
out
push
pop
imul
std
int3
push
xchg
aad
push
or
dec
mov
loope
arpl
or
adc
fsts
sti
shrb
mov
and
jmp
loopne
aad
or
inc
cmp
std
pop
les
mov
das
jmp
xchg
out
stos
dec
mov
sub
mov
je
cmp
js
lods
add
cs
shr
lcall
mov
nop
mov
repnz
pop
shl
mov
pop
dec
sbb
and
icebp
xor
sbb
or
insb
or
js
jle
add
hlt
xlat
in
mov
jecxz
int3
pop
sahf
das
sahf
xor
jae
enter
adc
adc
das
dec
ret
cwtl
push
push
ret
add
adc
lahf
jmp
mov
push
out
mov
mov
xchg
aad
jg
xchg
jno
jg
lods
imul
jp
fcomi
ret
ja
ret
sub
mov
mov
inc
dec
xor
xlat
pusha
pop
loop
test
push
std
mov
inc
inc
push
into
fldl
jns
rclb
leave
mov
mov
rolb
rclb
mov
popa
cmpsl
mov
shrb
fs
xchg
dec
xlat
scas
push
xchg
xchg
add
jbe
loope
cltd
mov
das
cli
jge
mov
aad
mov
mov
adc
cs
rorb
cmp
pop
aad
je
addr16
cltd
inc
test
bound
mov
movsl
dec
push
sub
dec
cmp
cld
and
xorl
outsl
jp
xorl
sub
mov
movsb
icebp
cmpsl
push
cmp
dec
mov
arpl
adc
lret
inc
jmp
mov
mov
xor
push
cmpsb
add
sti
fildl
cld
sbb
mov
xor
scas
adc
mov
mov
xchg
mov
jo
xor
cs
lea
cmp
adc
inc
dec
pop
mov
jg
mov
dec
mov
mov
push
sub
lods
leave
lea
cli
rolb
push
out
outsl
pop
in
and
sti
inc
in
jae
addr16
imul
push
scas
xchg
es
dec
add
imul
movsb
popf
cmpsl
test
jp
xchg
xchg
test
lret
iret
ss
pop
testb
cmpsb
add
out
jnp
out
rcll
notb
sti
test
pop
mov
fldt
sub
add
cld
bound
mov
sti
xor
leave
nop
push
jg
or
add
ja
pop
out
loop
inc
fimull
cli
and
ss
or
dec
jle
dec
lahf
pop
adcb
into
ss
mov
loop
cmp
mov
cwtl
push
hlt
xor
inc
xor
mov
dec
adc
call
cs
jge
in
adc
xchg
xor
in
in
adc
fsubr
push
xor
or
lock
repnz
xor
icebp
jae
test
jp
pop
jg
xor
push
xchg
movsl
push
sbb
daa
or
add
adc
add
cmp
ds
ficoml
shll
loope
pushf
test
add
adc
pop
or
fucom
dec
loope
mov
jge
mov
lock
mov
xchg
xchg
pop
cmp
loop
pushf
test
jb,pn
ds
jmp
rolb
push
push
dec
ds
divl
pop
pop
cmc
cmc
xchg
outsb
idivl
mov
pop
pop
jmp
inc
ds
or
imul
push
pop
fs
out
inc
add
mov
and
test
dec
jg
and
jg
add
out
das
xchg
inc
inc
sti
mov
cld
fisttpl
in
mov
mov
lcall
data16
dec
inc
inc
jae
cmp
lret
or
xchg
sbb
mov
fisubrs
test
xchg
out
cmp
ret
push
ret
fisubrs
sbb
jbe
mov
int3
inc
fisttps
pop
inc
inc
js
mov
mov
fidivs
std
imul
mov
jge
cmpsl
and
mov
push
mov
leave
xor
test
mov
aaa
cmc
jns
cmp
testb
sbb
sub
loop
es
xchg
in
and
outsb
mov
aad
pop
mov
test
imull
shrb
call
outsb
std
ret
xchg
sti
push
add
clc
cmc
lret
cmc
cmp
and
insb
and
loopne
out
ljmp
lcall
pop
or
test
insb
xor
xchg
xlat
mov
jl
dec
add
push
in
mov
xchg
in
lods
mov
jg
dec
pop
popa
sub
outsl
mov
mov
aaa
mov
fldcw
cmp
push
mov
int3
iret
pusha
aad
lret
sti
and
add
adc
ds
mov
les
jg
aas
out
add
fwait
xor
dec
in
xor
lods
xchg
or
int3
jmp
add
lock
jl
push
xor
das
xor
mov
scas
cmpsb
jge
mull
test
mulb
xlat
push
mull
test
ja
das
jmp
sti
adc
xor
push
mov
call
insl
pusha
pushl
xor
add
sti
mov
int3
fisubl
dec
call
mov
push
and
int3
ret
inc
js
dec
xchg
pop
scas
xor
fucomip
dec
sbb
sbb
int
int
jmp
dec
mov
pop
push
testl
loope
aad
jecxz
popa
and
int3
mov
and
fwait
xor
mov
jmp
sub
xchg
jbe
push
mov
sbb
rolb
shr
lcall
push
sub
lods
dec
pop
xchg
jb
pop
xor
push
mov
mov
mov
and
jbe
sbb
das
cmp
lret
arpl
sub
push
mov
fadd
lret
je
push
mov
stos
mov
sub
sub
cmc
pushf
push
xor
inc
xchg
mov
lods
jae
testl
fwait
adc
call
pop
dec
and
icebp
lea
push
mov
lds
jg
jle
or
mov
shl
xor
jbe
jns
testb
pop
outsb
push
xor
ds
ret
movl
repz
cmp
push
in
xchg
lcall
andl
dec
jbe
sbbl
gs
or
je
ret
xchg
je
jg
mov
xchg
adc
jne
cmp
mov
fisttps
xor
cmc
repnz
push
mov
mov
jb
mov
hlt
jg
mov
mov
js
xor
mov
jnp
lods
jo
ret
cmpb
fcomps
xor
dec
mov
adc
leave
int3
call
inc
or
mov
adc
mov
gs
roll
inc
pop
xchg
js
pop
sbb
xchg
sbb
cmp
dec
data16
mov
in
inc
loopne
int3
xorb
pop
inc
faddl
testl
sub
and
cmp
cltd
cmp
fists
push
insb
xchg
fdivrs
imul
jmp
int3
xor
sub
int3
lret
lret
dec
jmp
push
mov
adc
push
mov
dec
out
jo
adc
xor
cmpsl
mov
mov
dec
int
jae
test
push
pusha
mov
dec
loop
fs
sub
push
sbb
jnp
pushaw
xchg
cld
icebp
push
js
fwait
in
push
push
shl
pop
cwtl
mov
or
movsl
decl
inc
push
movsb
dec
icebp
or
pcmpgtd
repnz
inc
adc
sbb
xlat
and
daa
popl
jle
xorb
mov
imull
lret
jb
cmp
nop
cmp
int3
add
add
das
sub
ror
sub
mov
mov
mov
push
fwait
adc
icebp
shll
mov
sbb
pusha
adc
mov
sub
push
mov
xor
insb
adc
fidivs
add
insb
ds
push
cli
adc
mov
jne
mov
and
andb
outsb
sbb
out
insl
and
pop
jle
ss
pop
das
sub
int
cmp
mov
das
insl
xchg
icebp
faddl
jns
mov
mov
xor
clc
mov
hlt
cmp
lahf
pop
daa
js
jg
pop
pusha
xchg
xor
test
out
cmp
jbe
inc
aaa
adc
sbb
pop
add
sti
fidivrs
loop
adc
bound
outsl
clc
push
mov
cmp
jecxz
mov
scas
cwtl
mov
orl
insb
test
lret
cmp
add
mov
xor
xorb
add
push
subb
mov
aas
lret
inc
movb
jge
xor
sbb
or
add
iret
call
mov
popf
imul
cmp
mov
inc
push
shll
aad
pop
sbb
xchg
call
xorb
mov
add
cmpsl
and
pop
and
sbb
fisttpll
iret
psubusb
cli
pop
lret
and
cld
sbb
pop
cwtl
add
stos
jg
stos
xor
rcl
push
dec
cs
adc
xchg
add
mov
jno
push
pusha
int3
pop
orb
xchg
outsb
xor
push
mov
sub
fsubr
jp
mov
rorb
xor
jl
mov
lea
adc
add
sub
jle
mov
ret
add
fistl
mov
dec
cs
sub
sub
es
inc
mov
out
into
jne
mov
testb
fwait
mov
xchg
push
inc
stos
sahf
outsb
xchg
pop
cmp
push
cmp
nop
scas
subl
jg
jbe
fistps
lcall
jl
lea
in
or
cwtl
ljmp
dec
mov
adc
rcl
hlt
sbb
das
ret
sti
mov
add
jmp
mov
sbbl
std
rolb
mov
call
mov
pushf
out
enter
mov
mov
fs
adc
and
mov
fcomps
loop
icebp
jno
out
pop
shlb
les
push
lret
mov
adc
daa
arpl
dec
cmc
lcall
shlb
test
adc
rcr
psadbw
cli
movsb
sarb
mov
add
cwtl
lahf
jl
outsb
loop
push
js
push
pop
mov
lock
cmp
jecxz
insl
xchg
mov
mov
mov
cmp
mov
fs
lea
xchg
or
pusha
cwtl
cmp
pop
mov
insb
aam
rcrl
int3
pop
sub
cmp
imul
adc
pop
sbb
nop
rol
popa
jno
jmp
or
and
outsb
lret
mov
fldcw
cmp
mov
lahf
cmpb
mov
mov
outsb
cmpb
xchg
pop
ja
add
and
cs
rcr
mov
fwait
xor
fsub
push
out
xor
inc
cli
xor
addr16
fs
sar
jno
push
add
iret
addb
push
jae
negl
mov
js
xor
shlb
das
repnz
bound
mov
lahf
cld
jmp
mov
sarb
pushf
ljmp
stos
dec
jecxz
sub
and
inc
int
scas
push
add
sbb
loope
fistps
dec
or
adc
out
stc
ffree
lea
loope
lds
mov
inc
push
es
fidivrl
loopne
fbld
and
mov
mov
hlt
pushf
add
je
xchg
sub
addr16
cwtd
dec
in
xor
dec
dec
insl
in
insl
rcrl
repnz
mov
fsts
sub
pusha
xor
fistpll
pushf
and
mov
stc
xchg
sbb
pop
jnp
mov
mov
fnsave
jmp
daa
lret
adc
das
prefetchwt1
inc
lret
or
orb
iret
add
sbb
push
in
fistl
sub
cmp
in
mov
test
mulb
xchg
test
mov
and
nop
cmpsl
mov
mov
fsts
jns
mov
aas
sbb
sub
lret
lret
fs
adc
push
or
movsl
ljmp
stos
and
lds
ss
js
pop
dec
popl
add
mov
dec
and
rolb
mov
sub
iret
fisttpll
and
mov
call
stos
movsl
mov
ret
lods
cmp
outsl
test
sub
stos
movsb
iret
xchg
pop
dec
fbld
push
sbb
out
pop
movsb
into
popa
jnp
mov
clc
inc
jno
sahf
imul
dec
dec
jo
fcompl
mov
fimull
stos
data16
sbb
mov
jne
movsl
jecxz
jge
or
fxch
mov
mov
lcall
push
int
pop
cmp
pop
and
xchg
dec
int3
cmpsl
jp
jecxz
std
dec
sbb
shll
insl
fldt
test
cvtpi2ps
mov
or
or
subb
pop
push
les
lret
cmp
dec
mov
xchg
cmpsb
sahf
push
dec
mov
pop
jae
stos
in
jl
movsb
xchg
pop
cmc
sbbb
fsts
cmpb
jno
xchg
lahf
repnz
sbb
das
sub
into
fcmovnb
mov
dec
mov
push
xor
out
cmpsb
inc
or
stos
les
std
inc
addb
sti
fstpt
adc
in
xor
mov
jle
xor
or
add
push
cmp
ret
jle
ss
push
jns
lea
inc
sub
add
aaa
lock
lods
loop
pop
inc
mov
sub
jno
mov
push
pop
xor
shlb
inc
jge
jnp
dec
jecxz
cmp
xchg
cmp
lea
add
cli
enter
dec
ror
mov
mov
mov
xor
test
xor
insl
mov
pop
test
fistpl
inc
adc
ljmp
push
lret
xor
imul
add
scas
xor
lods
or
int
dec
inc
jne
movsb
mov
jl
sti
jmp
ret
sahf
jmp
push
sbb
and
jmp
sub
cld
jl
push
cltd
mov
stc
enter
dec
jbe
ret
fs
mov
add
add
push
cld
pop
xchg
cltd
leave
dec
cltd
mov
repz
xor
inc
push
ret
das
rolb
rorb
fcom
insb
loopne
lret
add
mov
sbb
mov
add
lcall
sbb
push
dec
scas
ror
dec
or
inc
cld
popf
dec
push
aaa
imul
pushf
mov
jns
in
leave
leave
dec
fistps
mov
push
pop
jae
std
addl
xor
xchg
push
sub
mov
push
xchg
andl
call
fs
mov
outsl
stc
scas
iret
mov
js
jl
pop
add
pop
cld
mov
repz
xchg
xchg
lret
sub
ret
mov
pop
mov
cmp
push
and
inc
popf
or
add
sarb
insl
clc
aam
ret
jg
cltd
xchg
test
and
popa
xchg
lds
in
adc
movsb
popf
push
or
stos
xchg
pop
cltd
test
jns
loope
aad
jo
xchg
push
mov
mov
xchg
pushf
filds
inc
rol
rorb
es
sbb
pop
sbb
movsl
adc
sub
cwtl
movsb
sahf
and
stc
leave
outsb
push
mov
icebp
aad
testl
adc
test
or
sub
js
push
insb
mov
mov
test
aaa
fmuls
push
pusha
fwait
insl
and
fisubs
and
hlt
sbb
lock
xor
fs
idivb
sbb
mov
clc
and
inc
lock
push
mov
dec
cwtl
sahf
sti
loope
pop
shlb
scas
addl
movsb
pop
movsl
sub
test
dec
sbb
dec
mov
test
add
jecxz
and
mov
or
mov
addr16
mov
out
addr16
mov
mov
cmp
fsubrs
mov
xor
popa
push
stos
or
out
pop
mov
pop
leave
mov
sub
mov
je
pop
lods
adc
sarl
cwtl
outsb
mov
adc
pusha
dec
mov
stos
call
pop
mov
xchg
push
arpl
xchg
push
sti
aas
pop
inc
arpl
push
leave
mov
xchg
cwtl
loope
push
dec
pop
aas
das
enter
cs
ja
adc
jl
outsb
mov
in
fwait
xor
or
sbb
cwtl
int
jbe
inc
pop
subl
push
push
jnp
jecxz
int
cmp
adc
xor
mov
pusha
pop
sub
jge
pusha
or
xor
int
out
sub
aaa
ret
push
cmp
in
sub
sub
sbb
loop
cmc
andl
int3
adc
mov
and
xchg
fwait
push
sbb
std
fucom
pop
jecxz
jp
adc
adc
and
inc
mov
pop
adc
push
add
rcrl
aam
lea
mov
aam
pop
outsl
adc
std
cmp
xor
push
push
fstl
xchg
mov
nop
mov
ss
xchg
ja
lock
mov
mov
xchg
clc
sbb
inc
fldt
test
jmp
or
push
enter
fsubr
ret
shll
shlb
cs
jb
jns
stos
leave
into
scas
and
mov
clc
mov
les
mov
cmc
das
and
cmc
cmp
inc
outsb
int
mov
cmpsb
loopne
pop
jbe
insl
scas
push
notl
cmc
test
std
out
and
xchg
shlb
jle
test
pop
arpl
xchg
repz
mov
out
cmp
mov
mov
sbb
shll
push
sbb
push
scas
mov
sti
cmpsl
add
lret
dec
ja
xlat
mov
pop
dec
fnsave
inc
test
nop
pop
and
xchg
sub
and
lret
stos
es
lods
fisubrl
dec
xor
inc
aaa
jp
xchg
sbb
sub
imulb
stos
sub
roll
push
xchg
xor
push
adc
das
and
sbb
cmpsl
or
mov
sub
xchg
fs
pop
pop
outsl
sub
dec
cmpsb
push
nop
rcll
leave
sbb
mov
jg
sub
xchg
cmp
adc
outsl
cltd
jno
fnstenv
cmp
flds
push
mov
cwtl
pop
xor
push
out
cmpsb
loopne
jb
cmp
movsb
or
pop
and
daa
repnz
xchg
cli
adc
jl
pop
fildl
popa
cmp
ficoml
popf
dec
mov
sbb
fcomps
int3
fwait
push
adc
in
xor
ret
push
sub
outsb
and
or
push
dec
add
and
sub
icebp
icebp
sub
ds
imul
in
jecxz
push
mov
ss
ljmp
filds
leave
stc
jo
push
jl
sbb
and
in
movsl
ja
enter
out
sbb
dec
nop
sub
xchg
pop
test
lea
sarl
pop
andb
sub
push
outsb
fidivrs
sub
dec
mov
xchg
pop
pop
xor
outsl
mov
test
jmp
mov
aam
popa
rclb
sti
adc
jno
add
sub
dec
inc
lock
mov
push
push
sub
dec
push
stos
mov
adc
clc
cli
inc
ficompl
mov
and
rcr
aam
in
sub
pop
popl
sahf
jb
xlat
pop
push
cmp
and
jb
inc
into
adc
insl
imul
jecxz
jns
adc
int3
aas
push
shll
and
mull
test
cmp
jb
testl
dec
ja
sub
mov
pop
lock
add
push
enter
call
sbbb
sub
pop
lock
add
push
enter
call
sbbb
sub
pop
lock
add
push
enter
in
push
cld
movsb
or
sbb
sub
cmp
dec
rcrb
pusha
mov
lcall
cmpsl
xchg
lahf
xchg
int3
int3
int3
int3
xchg
dec
jle,pt
les
jne
dec
and
pop
add
add
push
add
add
pop
add
popl
addr16
add
add
push
add
insb
add
add
add
add
add
add
push
push
add
add
add
add
mov
add
add
add
add
add
aad
cmp
sbb
into
add
add
add
add
add
add
add
add
add
push
add
xchg
add
add
add
add
out
add
add
add
add
add
insb
add
add
add
add
add
sahf
add
add
add
add
mov
add
add
add
lret
add
out
add
aad
jge
or
clc
add
add
add
add
add
add
fs
add
push
add
add
add
add
add
cmp
out
add
add
add
add
add
add
sub
add
pop
add
pop
add
add
mov
icebp
add
in
mov
jge
fldl
test
add
sub
cmp
mov
sti
add
insl
add
add
push
add
add
jbe
add
add
das
add
add
add
in
imul
add
add
add
insb
add
add
mov
add
add
add
add
add
add
add
sub
pop
add
add
add
add
sub
jge
fldl
es
add
add
cmp
or
push
add
add
add
add
add
add
sbb
adc
add
add
xchg
add
test
fwait
add
add
les
mov
cmp
xchg
add
add
add
hlt
add
outsb
add
add
les
dec
add
add
add
add
incb
hlt
add
fwait
add
insb
add
add
mov
add
add
cwtl
add
pop
add
adc
mov
add
add
add
add
add
les
sbb
hlt
add
add
in
push
add
add
dec
add
add
add
add
add
add
add
add
mov
jg
push
add
add
aad
push
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
insl
add
pop
add
add
jns
push
add
add
add
add
sbb
out
jno
dec
add
add
in
sbb
xchg
add
add
add
add
add
mov
add
add
add
ret
add
add
add
hlt
add
mov
add
add
add
add
loope
sahf
add
add
add
add
add
add
jns
mov
add
cwtl
add
add
add
add
add
add
add
adc
mov
add
add
add
adc
add
add
scas
add
add
add
add
ltr
add
cmp
pop
add
clc
add
add
aad
stos
add
jb
jg
sub
add
add
stos
add
cmp
pop
add
incb
cmp
lcall
add
cmpsl
call
adc
push
sbb
xlat
loopne
pop
out
mov
add
pop
fisttpll
push
mov
insl
mov
mov
std
sub
mov
test
add
fs
test
adc
jb
jp
sti
mov
xlat
insb
jecxz
bound
popf
cmp
dec
lock
fdivl
push
dec
cmp
lock
adc
xchg
xor
ja
pop
xor
test
inc
sbbb
dec
mov
iret
imul
jmp
mov
cmpsb
pop
arpl
inc
cmp
lock
outsl
push
sub
lods
mov
cmp
mov
in
test
cli
mov
adc
adc
mov
dec
psubsb
mov
mov
mov
xchg
and
fdivs
pop
iret
arpl
lock
push
inc
sbb
and
decl
je
xor
pop
popa
mov
xchg
stos
mov
cmp
int
sbb
or
add
stc
mov
xchg
xor
sub
in
or
scas
rorb
insb
data16
dec
mov
ljmp
sub
xchg
cmpsb
rorb
repnz
mov
mov
pop
leave
ds
mov
fstl
push
repz
enter
xor
je
pop
scas
bound
push
jge
push
out
jge
aam
mov
pushf
sub
hlt
and
into
push
imul
mov
sub
mov
or
scas
dec
xchg
je
rclb
mov
add
jmp
jae
pushf
mov
aas
xchg
mov
out
adc
ret
jecxz
bound
je
inc
lock
sbb
jmp
filds
adc
cmp
ret
in
inc
jecxz
sub
dec
fildll
ds
fdivs
push
jecxz
inc
test
hlt
jg
test
mov
sub
insl
dec
inc
jge
into
lret
sbb
movsb
mov
testb
test
hlt
sbb
cmp
dec
jo
subl
dec
ljmp
push
out
mov
lret
cmp
inc
call
push
lock
xor
push
or
mov
fs
pushf
adc
ds
mov
mov
jbe
mov
lret
xchg
aam
push
iret
inc
leave
movsb
sarb
test
incb
mov
shrb
mov
stos
insb
adc
movsb
les
mov
xchg
pushf
jl
int3
mov
loope
std
add
mov
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
