add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
sbb
fstps
add
push
add
or
pop
add
add
add
fwait
add
pusha
add
das
add
testl
addb
add
add
add
add
add
add
add
mov
fwait
add
add
add
add
lods
add
addb
add
add
cmp
add
add
push
add
add
add
sbb
stos
add
add
add
mov
or
adc
out
add
add
add
add
add
add
add
add
add
add
add
push
add
sbb
add
push
add
or
sahf
add
add
add
add
jecxz
or
add
add
mov
add
aad
data16
sbb
add
testb
add
add
add
push
add
add
das
add
add
add
out
add
add
add
filds
sbb
add
add
add
add
xor
sbb
add
xchg
add
pushf
add
sbb
add
add
adc
jb
outsl
add
add
add
mov
add
pop
add
add
add
sti
add
inc
add
hlt
add
pop
add
add
add
add
add
add
mov
add
movb
add
sub
xchg
add
add
add
add
add
add
adc
cmp
sbb
add
pushf
add
sbb
add
add
add
add
add
sbb
add
add
add
sbb
add
add
xor
pushf
add
sbb
add
xchg
add
mov
add
add
add
add
add
add
adc
leave
add
add
add
lret
add
add
sbb
add
add
add
add
mov
add
add
and
mov
add
imul
sbb
add
add
add
filds
inc
add
xchg
pop
add
sbb
add
add
add
popf
add
aam
outsl
add
add
jmp
dec
add
add
add
popf
add
hlt
add
push
add
add
add
add
add
add
add
add
addl
cmp
push
add
jno
xor
inc
add
add
lret
add
pop
add
sbb
add
add
addb
add
pushf
add
add
pop
add
lods
add
add
add
add
add
add
xchg
add
testb
add
add
mov
loopne
push
add
add
add
testb
add
add
add
add
dec
add
add
add
sbb
das
add
add
add
add
add
add
fildl
pop
add
addb
add
aas
add
add
xchg
add
add
repz
add
and
sahf
add
add
add
add
test
dec
lea
pop
jo
push
loopne
cmc
or
das
fwait
fucom
sub
xchg
mov
or
xor
push
sub
sbb
pop
pop
cmp
lret
and
push
div
jbe
jle
pushf
ljmp
sub
addr16
popf
mov
mov
cmp
cmp
dec
rorb
cmp
dec
mov
mov
xchg
mov
push
ljmp
pushf
ss
iret
lahf
xor
add
lcall
je
xor
or
mov
lret
call
es
sbb
aas
pop
scas
ss
mov
leave
mov
outsb
cmp
movsb
push
jmp
pushf
mov
test
in
movsb
mov
out
xchg
push
dec
mov
or
out
in
jb
stos
sti
daa
sarl
in
push
xor
js
aaa
aaa
sub
dec
add
mov
orps
or
and
and
jmp
sbb
orb
scas
jp
lret
dec
outsl
cltd
sub
cmp
pop
adc
lahf
lea
loop
mov
sub
icebp
fcomip
dec
in
xchg
cmp
jnp
jae
repz
fs
test
int
lcall
test
cli
inc
jb
loope
dec
test
jle
je
cmp
je
in
cli
lret
cmp
cmp
add
js
inc
add
in
and
lods
or
addr16
jmp
dec
inc
mov
sti
and
test
dec
je
ja
out
xor
std
and
mov
push
mov
divb
cmp
repnz
adc
in
pop
add
int3
sbb
test
stos
xor
das
out
push
inc
cmp
fiaddl
dec
test
rorl
sbb
cmp
out
loopne
mov
pop
cmpsb
push
out
aaa
add
orb
ljmp
out
lret
sub
and
push
int3
cmpl
faddl
fs
jne
mov
push
in
xor
jae
xor
push
ret
imul
add
push
cli
push
jno
sbb
dec
dec
clc
jl
xchg
repz
dec
sub
mov
adc
jecxz
inc
aam
fnstcw
add
sbb
sahf
pop
loope
adc
out
inc
push
sub
push
into
shlb
mov
dec
movsl
iret
outsl
pushf
and
add
ret
xor
into
jge
stos
adc
adc
xchg
jne
test
scas
lods
jl
jbe
lea
xor
sbb
push
mov
and
ss
mov
mov
add
add
add
add
loop
add
add
push
mov
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
in
cmp
sub
sbb
or
jge
dec
jle
push
cmpsb
fstpl
in
mov
mov
jl
insb
sub
sbb
or
jl
insb
sbb
or
cld
mov
int3
mov
mov
jl
insb
sub
sbb
or
jl
insb
sbb
or
cld
mov
test
mov
mov
insb
pop
adc
imul
aas
out
push
rol
popf
mov
cmp
sub
cmp
jbe
cmpl
lods
adc
arpl
inc
in
push
mov
fs
stc
sub
in
push
into
sub
mov
cld
mov
xor
add
push
leave
add
or
insb
cld
push
or
in
inc
sub
pop
and
pop
in
decl
test
xchg
rorl
jecxz
add
mull
sbb
or
xchg
inc
cltd
mov
out
scas
cld
sbb
cmp
mov
in
in
lret
mov
inc
jae
in
lods
mov
and
sub
sbb
or
jl
insb
sbb
or
cld
mov
int3
mov
mov
xor
dec
jg
dec
sbb
imul
mov
test
enter
icebp
scas
clc
test
sub
pop
aas
dec
sub
je
scas
flds
fdivp
cltd
fistpll
mov
inc
jg
jns
je
dec
sub
sbb
or
cld
mov
int3
mov
mov
jl
insb
sub
sbb
or
jl
insb
sbb
or
cld
mov
int3
mov
mov
jl
imul
mov
cld
outsb
sbbl
lahf
push
roll
and
pop
mov
mov
jmp
push
movsb
mov
cli
xchg
push
loopne
shll
ret
aad
mov
imul
jns
pop
mov
in
dec
add
and
cmp
mov
xchg
clc
xchg
mov
or
ds
inc
sub
and
push
aam
ficoms
fwait
push
test
jo
push
push
mov
loopne
pop
insl
popf
jecxz
testb
jbe
adc
into
jae
cli
push
mov
adc
loopne
loop
sbb
scas
inc
test
cs
mov
mov
xlat
lock
aaa
mov
add
jg
pusha
in
out
add
fildll
scas
mov
mov
mov
dec
mov
test
push
cld
sub
imul
xor
aad
ljmp
mov
mov
test
cmp
and
leave
mov
mov
int
add
jecxz
fdivrl
xlat
mov
insl
clc
stos
bound
daa
xor
xchg
sbb
inc
repnz
inc
and
leave
cmp
pop
stc
and
xchg
or
das
loop
mov
dec
data16
dec
int3
fstps
addb
push
iret
push
enter
lds
or
pop
cwtl
jnp
fs
icebp
mov
into
addl
cmp
imul
movsb
bound
cs
mov
add
out
mov
and
sti
push
jmp
pushf
stos
lcall
repnz
mov
popf
inc
jns
adc
adc
out
mov
xor
es
mov
jae
dec
mov
xchg
push
sti
mov
xor
jne
sbb
cmpsb
addr16
mov
insb
testl
jae
jnp
jg
push
fistps
adc
jp
bound
adc
cld
pop
sbb
fdivrs
lods
lahf
sub
rorb
mov
cmp
push
testb
pop
and
xchg
test
rcl
ret
pop
sub
push
and
pop
aad
scas
dec
leave
push
xchg
fidivl
cmovne
in
sub
sbb
mov
jne
jp
pop
stos
sbb
shlb
xchg
hlt
stc
sub
std
test
jae
pop
into
xor
aam
xorl
mov
adc
pop
push
xchg
pop
dec
lret
outsb
rclb
xchg
lods
mov
mov
cmp
int3
gs
ljmp
pop
mov
and
xchg
mov
xchg
in
sub
sub
ret
out
mov
mov
out
bound
xor
fadds
mov
mov
jecxz
es
cmpsb
add
xchg
pusha
dec
repz
test
icebp
adc
js
xor
mov
fcmovne
add
add
mov
mov
fsubrs
jl
push
pop
add
cld
movsb
ljmp
xor
or
pop
dec
repz
bnd
rorb
sub
outsl
stos
outsb
mov
push
js
mov
dec
bound
cwtl
test
cli
repnz
lahf
aas
push
outsl
inc
cmpb
or
roll
lahf
mov
imul
nop
jb
add
jne
icebp
icebp
add
fistl
jg
aam
movsl
pop
mov
inc
jmp
or
mov
xchg
cmp
push
cmp
lock
adc
cmp
mov
dec
jbe
aad
mov
ficoml
push
rolb
mov
adc
add
imul
movsb
push
inc
pop
push
or
cmpsl
js
pop
pop
cmpsl
mov
cltd
inc
inc
inc
xchg
call
arpl
mov
out
or
add
pop
out
add
fisubl
sbb
pop
cmp
hlt
ret
fisttps
lea
mov
ja
jmp
dec
inc
loop
test
fcmove
pop
xchg
dec
and
ja
mov
mov
push
sub
pop
clc
mov
aad
cmp
call
and
ljmp
mov
mulb
pop
pop
mov
inc
pop
cmp
fcmovne
xchg
push
or
xchg
repnz
fchs
popf
inc
insl
in
cwtl
push
and
mov
testb
pusha
mov
dec
sub
and
xchg
pop
mov
and
jnp
push
movsl
push
aad
int
jp
fidivrl
sub
inc
add
outsl
shll
fsubrl
dec
movsb
les
repnz
ret
lcall
pop
dec
mov
jae
in
adc
and
lock
push
inc
dec
aad
or
push
pop
inc
enter
adc
stos
sub
lods
das
and
stc
sub
into
lods
fdivs
mov
enter
cwtl
xor
dec
gs
cmp
add
in
lock
push
gs
dec
cmp
dec
scas
icebp
xor
sub
int3
and
push
pop
dec
xchg
sbb
ror
add
jno
std
cmp
ret
addr16
int
aad
aad
sub
pusha
dec
jmp
repz
aas
inc
into
dec
mov
inc
sbb
test
cmp
xchg
test
imul
ret
cmp
xor
cmp
jp
mov
fmulp
fiaddl
cmp
pop
and
sti
mov
mov
sub
movsb
or
push
push
jge
xor
clc
dec
lods
dec
jae
fstl
jnp
sbb
je
xor
add
pop
or
lret
movsb
scas
mov
push
dec
pop
xchg
cmp
sbb
popf
mov
fnstsw
sbb
mov
fidivs
adc
sbb
xchg
xor
cmpsl
xchg
fisubl
cmp
stos
jmp
mov
xchg
addr16
push
mov
imul
push
add
add
pop
ret
ret
stos
shll
lret
mov
out
xor
movsl
mov
inc
inc
stos
cmp
insl
fwait
bound
sub
inc
dec
inc
ljmp
and
pop
rclb
jg
clc
and
pop
or
jne
fstpt
rorl
push
push
in
cs
out
outsl
outsb
subb
sti
push
je
cli
xchg
dec
jae
lahf
push
pop
aad
ja
jle
mov
xor
scas
dec
xor
pop
and
pushf
rol
sbbb
insl
mov
pop
cmp
jle,pn
cld
mov
push
popa
mov
inc
cwtl
xor
push
sbb
mov
cmp
jne
add
pop
shlb
dec
push
and
xchg
adc
addr16
repz
mov
scas
add
lret
movsl
scas
cmp
jle
xor
jle
mov
jmp
dec
cmp
mov
mov
and
sbb
jecxz
mov
js
out
mov
cmp
pop
dec
lock
mov
push
imul
das
loop
push
push
mov
sbb
movl
pushf
test
hlt
or
jg
xchg
testb
movsb
xchg
lret
jno
cmp
add
xor
lret
addr16
aaa
roll
jmp
jb
cli
mov
movsb
inc
cmpsl
mov
jo
dec
inc
or
jno
cmp
inc
mov
aad
fcoml
xor
or
jp
repnz
sbb
cmp
mov
mov
enter
inc
inc
jno
scas
dec
dec
dec
fnstenv
cwtl
dec
add
leave
inc
sbb
lock
sti
sbb
lock
mov
jecxz
lods
jno
mov
adc
and
xchg
imul
lea
xor
cwtl
frstor
arpl
divl
mov
pop
fwait
lods
jge
xor
jnp,pt
aaa
jb
or
scas
adc
xchg
inc
mov
push
mov
add
jns
jecxz
jecxz
mov
int3
cmp
jb
and
pop
or
cld
shll
inc
push
lock
xor
and
cwtl
rcr
lret
xchg
sbb
add
clc
cwtl
or
mov
sub
std
jg
fisttps
inc
scas
out
in
xchg
daa
daa
lahf
cmp
stc
mov
ja
pop
ljmp
cwtl
outsl
mov
pop
fstl
add
int3
cmp
add
jecxz
cld
sahf
dec
out
movsb
sub
cmpsl
mov
mov
gs
mov
adc
push
mov
popf
repnz
mov
and
sub
lret
push
mov
dec
add
push
mov
dec
add
in
in
hlt
jb
inc
out
and
push
test
mov
pusha
sub
push
out
es
iret
rcr
sub
shlb
xchg
sbb
inc
jmp
jge
dec
lds
push
push
jnp
and
ss
sbb
xorl
adc
mov
out
push
imul
repz
in
sarl
jp
xchg
sub
js
sbb
inc
and
mov
mov
out
xchg
sub
icebp
mov
sahf
lcall
movsb
outsl
out
jns
dec
xor
sub
out
push
mov
test
mov
mov
xchg
sti
jo
mov
bound
mov
lea
push
leave
rcll
insl
cs
ret
mov
pop
or
cltd
xchg
in
pushf
fsubp
or
popf
mov
xchg
cwtl
in
mov
mov
mov
ja
ficoms
imul
sti
mov
mov
sti
xor
xchg
jl
ss
xor
jno
xor
xchg
xchg
cmp
scas
cmpsb
jae
and
or
out
call
leave
add
popa
cmp
gs
and
push
test
jmp
int3
divb
and
mov
fs
mov
scas
jp
push
mov
shrb
sbb
adc
jb
push
jmp
and
xchg
sbb
es
pop
xor
dec
pop
sbb
sbb
lods
pop
adc
shll
cmp
loope
dec
rclb
or
inc
cmpsb
jmp
dec
and
divl
sub
pop
xor
xorb
shrb
cmp
xchg
cld
lods
jae
psadbw
pushf
sbb
lods
xchg
imul
add
into
in
jnp
jne
lock
inc
leave
enter
pop
and
test
inc
add
cld
jl
add
sub
xor
xor
xchg
add
gs
mov
sarw
xor
cmp
inc
or
fdivr
dec
loope
adc
push
cmp
jecxz
jle
out
pop
in
mov
daa
push
pop
ja
sub
mov
xor
push
mov
ds
xchg
fadd
out
shll
add
mov
adc
xor
int
dec
das
mov
pop
add
aam
in
gs
test
test
je
pop
xchg
mov
sbb
arpl
xchg
dec
lock
popa
ljmp
out
and
jne
jecxz
sahf
mov
adcl
ja
inc
mov
leave
rorb
mov
pop
inc
push
pop
shll
push
ljmp
sbb
cmp
cmp
insb
sub
out
movsb
pop
adc
cs
jae
cmpsl
xchg
ljmp
adc
dec
movl
cmp
xchg
test
push
outsb
std
sub
call
mov
add
lods
pop
sub
mov
sub
push
ret
mov
movsl
rol
mov
les
lds
into
lahf
inc
ret
inc
imul
xor
test
out
inc
jb
xchg
mov
jecxz
and
fcomps
xchg
mov
jno
lret
sub
lods
rcll
lods
sub
rclb
test
mov
cmp
mov
lret
sbb
gs
or
xor
dec
sbb
popf
into
cwtl
pop
andl
sub
les
jp
jg
push
repnz
ss
and
xchg
loope
into
ds
dec
jecxz
ljmp
outsb
negl
pop
mov
loope
mov
lea
faddp
jl
addr16
sbb
pop
xor
sti
shrb
mov
mov
loop
mov
cmp
clc
insl
inc
in
stos
inc
jmp
cmp
add
out
add
int
add
push
inc
pusha
ja
pop
or
int3
cmpsb
and
fsubrl
mov
sub
aas
ja
sub
add
dec
mov
mov
adc
mov
and
leave
je
lret
ret
popf
sub
jg
scas
or
movzbl
stos
and
jmp
jl
inc
push
lods
addr16
mov
or
cmpb
push
cmp
inc
mov
xacquire
fldl
mov
mov
in
mov
data16
jo
push
mov
aam
lcall
inc
xor
pop
ss
jmp
jo
stos
sub
pop
mov
jo
dec
imul
popa
push
add
mov
clc
mov
jl
fisubrl
push
pop
int
fidivs
push
xor
xor
push
jae
or
mov
xor
mov
pop
mov
arpl
and
jle
icebp
jno
mov
cmpsb
xchg
outsb
xchg
iret
cmc
sbb
repz
fidivl
outsl
add
cmp
push
shl
arpl
in
jo
dec
sub
mov
cld
fisttpl
and
sbb
push
mov
adc
fdivrs
sbb
fldt
xor
mov
dec
in
les
pushf
jmp
movsl
or
imul
imul
imul
adc
sub
xchg
aas
scas
clc
xor
rcrb
xchg
pop
sbb
pop
sti
out
push
jmp
add
popf
xlat
repz
lret
js
xchg
adc
fsubrl
dec
in
scas
adc
dec
and
push
test
mov
push
pop
push
mov
outsb
sub
cltd
jno
adc
fnstcw
lea
xor
push
sti
insl
pop
icebp
and
scas
mov
test
lods
add
mov
sbb
test
inc
ja
dec
dec
mov
test
mov
push
jle
inc
mov
pop
test
and
jo
pop
push
fistpl
inc
dec
mov
pop
pusha
or
daa
insl
and
fidivrs
mov
xchg
aaa
and
enter
lcall
in
inc
add
icebp
cmp
jns
xchg
daa
xlat
jns
jae
cld
push
sub
push
or
cli
out
add
mov
adc
jo
sahf
push
fs
stc
or
hlt
ficoml
mov
jns
fldenv
loope
jno
test
mov
repz
aas
sarl
lahf
imul
add
inc
xor
pop
lock
icebp
ret
mov
arpl
dec
out
fsubs
repnz
jae
jmp
nop
adc
jne
dec
and
dec
stos
mov
jl
in
mov
xchg
pop
xor
cmp
push
and
pop
sub
lahf
pop
and
sub
imul
enter
xor
pop
inc
fiaddl
lds
movsb
cmp
push
and
pop
xor
cmp
xchg
pop
push
orl
nop
xchg
insb
jbe
enter
or
cmc
je
and
movsb
fldln2
sbb
out
xchg
mov
add
rol
dec
cs
lods
jnp
sbb
lock
int
push
gs
lods
rsm
dec
into
xchg
and
adc
ror
pop
jb
or
mov
cmp
xchg
inc
test
data16
jb
inc
rorl
bound
xor
or
pop
iret
jae
je
push
fcomip
imul
push
sti
enter
xor
pop
in
dec
daa
sub
add
adc
fwait
and
mov
and
hlt
out
fldcw
or
push
call
xchg
inc
mov
xchg
imul
push
repnz
xchg
mov
dec
loop
mov
add
add
out
inc
pop
cmp
pop
xchg
xlat
mov
xchg
dec
push
dec
adc
aam
addr16
js
and
cmp
loopne
sbb
add
dec
cltd
mov
repz
into
xor
lea
inc
xchg
movsl
mov
popa
fucom
bound
ja
subb
lret
and
and
xchg
scas
fmul
dec
mov
bound
adc
jle
loopne
jae
lods
mov
bound
leave
repz
sarb
imul
mov
aas
xchg
in
xchg
f2xm1
test
mov
std
movsb
xchg
fld
adc
mov
pop
ljmp
data16
add
test
in
lahf
stos
orl
adc
ficoms
add
ljmp
sub
cmp
int
int
cmpsl
cmpb
les
lock
mov
sbb
pop
lods
cs
shlb
adc
jg
popa
lret
xorb
jno
cltd
cmp
mov
cmp
in
inc
enter
push
xchg
lret
gs
imul
popf
addl
mov
inc
jmp
lret
jl
pop
sub
xchg
jbe
xor
cltd
jmp
push
and
in
inc
xor
aas
add
push
mov
jge
jae
sbb
dec
push
into
push
push
xchg
sbb
lret
decb
lds
jns
aaa
negl
pop
sti
das
sti
aas
mov
daa
add
xchg
jge
and
outsb
out
icebp
rorl
xor
lret
clc
fstpt
imulb
rorl
arpl
roll
lds
and
push
repnz
inc
das
jmp
xlat
and
repnz
fcmovb
push
inc
sarb
gs
mov
lods
jle
sbb
call
xor
sti
cmp
or
movsb
jne
pop
jge
jp
jbe
xchg
int
inc
jg
pop
jne
jnp
xchg
sti
mov
aas
mov
sbb
pushf
or
and
in
repnz
mov
pop
lds
je
xchg
call
nop
push
imul
movsb
jne
push
add
pusha
sbb
and
or
insb
fst
andl
mov
scas
movsb
add
cld
or
movsl
xchg
xlat
and
mov
sbb
inc
or
rep
sbb
push
sub
ljmp
outsb
pop
pop
pop
dec
test
stos
movsb
push
cmp
test
adc
pop
mov
jo
cmp
and
leave
mov
add
or
pop
pop
sbb
xor
out
add
lods
aam
sahf
aad
inc
cli
clc
fiadds
or
movsb
mov
call
arpl
rorb
test
mov
adc
mov
mov
pop
push
cmp
push
scas
jo
pop
mov
inc
fs
les
pop
jl
adc
pop
repnz
stos
cwtl
inc
sbbb
xlat
dec
arpl
add
add
xchg
cmc
imul
sti
xor
mov
stc
mov
cmp
push
dec
or
es
sub
std
adcb
int
dec
xorl
cwtl
mov
push
popf
sbb
fs
repnz
inc
pop
jo
aad
add
mov
lahf
mov
sub
lds
pop
push
push
mov
cmp
xchg
mov
mov
test
sub
jecxz
lcall
mov
lahf
loope
test
repnz
fisubl
push
mov
test
xchg
mov
add
mov
in
fcomi
sub
jge
pop
icebp
lods
sahf
xor
cli
jno
fnsave
test
shlb
or
iret
lods
divl
out
stos
mov
xor
stos
push
in
into
test
pop
cmpl
mov
or
cwtl
jmp
mov
adc
sub
add
hlt
frstor
push
inc
and
or
adc
inc
adc
aas
aam
inc
push
subb
xor
push
lods
dec
call
xor
pop
pop
push
cmp
in
rorl
pop
jae
push
lahf
jnp
mov
jb
sub
jae
in
outsb
jne
mov
out
pop
rcll
jnp
insb
mov
mov
jb
rcrb
mov
add
jge
mov
sahf
push
cltd
mov
in
lcall
xorb
cltd
mov
cmc
mov
add
xchg
mov
ret
scas
bound
mov
sub
push
cmp
pop
jp
xor
addr16
push
jge
fidivl
aad
lret
inc
or
pop
pop
sti
jp
mov
ror
sub
push
stc
xor
cmpsb
cmpsb
addr16
lcall
jecxz
lods
pop
test
sahf
or
xchg
jge
mov
add
rcl
mov
xor
out
ljmp
imul
mov
adc
dec
push
loopne
xor
push
xor
cltd
jo
mull
mov
jbe
push
repz
int3
aaa
lods
aaa
subb
mov
mov
jnp
dec
ret
in
lcall
cmpsl
add
pusha
sbb
bound
or
mov
ret
mov
jp
shlb
and
je
repnz
fisttps
or
enter
and
in
pop
sub
arpl
inc
nop
lea
xlat
test
test
iret
lods
call
jo
add
push
pusha
push
push
mov
cmp
dec
hlt
and
push
enter
fnstsw
rorb
jns
push
outsl
and
je
int3
rorb
std
push
pushf
pop
push
lods
ficompl
mov
shlb
cmp
cltd
and
clc
mov
jbe
xchg
mov
pop
shl
xchg
insl
test
stos
dec
loop
mov
push
push
push
adc
dec
pop
mov
std
cmp
adc
std
xor
nop
test
push
xor
jne
jo
adc
subl
push
sahf
std
das
jg
subl
inc
js
jno
test
mov
push
dec
scas
push
mov
inc
fsubl
sti
mov
mov
jno
pop
jle
inc
pop
lahf
lcall
cmp
insb
sub
out
pop
push
xor
inc
daa
mov
add
cwtl
mov
pop
xchg
lock
inc
pop
mov
jmp
sbb
mov
sbb
fisubrl
push
fdivl
sbb
jecxz
sti
xchg
mov
inc
adc
in
test
add
mov
lahf
jne,pt
lcall
inc
dec
mov
push
insb
loop
mov
mov
mov
fsts
icebp
mov
fldlg2
xor
jne
xchg
dec
jmp
scas
cmp
hlt
pop
and
mov
enter
pop
jecxz
push
inc
lock
mov
mov
pop
call
fwait
cmpsl
out
mov
stc
jbe
lock
pop
lahf
lahf
shrb
aas
xor
push
pop
jno
mov
jae
call
popa
xor
cmp
dec
dec
mov
xchg
loopne
shrl
gs
cmp
mov
dec
cmpsl
daa
ja
jle
sub
fwait
loope
sub
dec
or
jl
insb
sbb
or
cld
mov
int3
mov
mov
jl
insb
sub
sbb
or
jl
insb
sbb
or
cld
mov
int3
mov
mov
jl
insb
sub
sbb
or
jl
insb
sbb
or
cld
mov
int3
mov
int3
jge
insl
sub
sbb
or
jl
insb
sbb
or
cld
mov
int3
sti
lret
je
adc
jae
int3
int3
int3
int3
int3
or
sbb
sub
cmp
jo
das
sbb
ja
mov
mov
sar
cli
loope
adc
add
xor
and
pop
inc
push
jp
lcall
mov
ljmp
add
sub
cmp
inc
pop
jb
jp
xchg
jb
mov
lret
scas
mov
lods
loope
adc
sub
stos
sbb
mov
or
mov
test
or
in
push
mov
pop
mov
movups
mov
ljmp
xchg
outsb
jl
mov
fiadds
add
gs
xchg
or
es
cli
loope
inc
or
jecxz
push
adc
sub
add
fwait
jle
push
inc
pop
xor
jnp
mov
xchg
loopne
into
fcmovb
mov
inc
mov
mov
subl
icebp
ljmp
xor
ljmp
jb
jne
pop
xchg
xlat
movsb
ljmp
push
cli
icebp
ret
adc
push
sub
cmp
pop
push
dec
inc
push
arpl
mov
mov
lock
cli
test
jg
dec
xor
cmp
cmp
daa
sbb
idiv
ftst
fmulp
lret
xchg
cwtl
icebp
xchg
mov
jnp
inc
inc
dec
and
and
push
sub
stos
lret
scas
pushf
popf
sahf
test
jbe
inc
push
push
push
add
jp
mov
mov
shr
cli
loope
adc
add
xor
and
pop
inc
push
jp
mov
mov
shr
cli
loope
adc
xor
insb
inc
jle
rcrb
dec
insl
aad
push
and
inc
rol
mov
jecxz
imul
dec
js
cmpsl
jae
and
xor
into
lock
xlat
xor
fisubs
cmp
lods
jae
iret
ret
mov
mov
test
dec
inc
push
mov
adc
xor
and
mov
jp
test
ss
std
sub
xor
shl
mov
pop
and
push
loopne
sbb
movsb
in
daa
je
sti
mov
pop
pop
into
loopne
rcrb
loopne
daa
mov
sbb
sub
ss
adc
xor
lret
mov
out
jns
jl
jns
pop
aaa
lods
pop
push
call
mov
push
int3
notb
call
xor
mov
icebp
into
lcall
jmp
aad
loopne
cmp
push
les
out
sbb
popf
jnp
and
std
fbstp
pop
lods
or
gs
mov
pop
cmp
sbb
int
pop
std
icebp
pop
call
cmp
sub
mov
sub
cld
lods
xchg
das
xor
out
fcoml
enter
mov
inc
add
sbb
bswap
dec
or
mov
mov
pop
jle
rsqrtps
or
cli
ja
and
or
lret
imul
je
pcmpgtb
push
es
sub
stos
rcll
test
cmp
cmp
sub
pushf
lods
inc
mov
push
pop
jo
imul
push
xchg
sub
cmpsb
dec
aaa
pop
mov
pop
inc
mov
push
mov
js
add
xchg
cmp
xor
or
sbb
aas
pop
into
sub
fsubs
in
xchg
sbb
cmp
cmc
bound
adc
out
and
jbe
cs
dec
insb
sbb
jns
outsb
aad
pop
or
pop
push
arpl
adc
inc
jmp
bound
pop
out
push
xchg
sub
mov
inc
xchg
addr16
cmpsl
cmc
xlat
lds
sub
pushf
jge
out
out
jl
adc
push
lock
sahf
dec
xchg
enter
daa
outsb
movsb
push
sbb
pop
cmp
push
inc
jb
out
sub
xchg
xor
stos
and
sub
jp
inc
cmp
mov
mov
inc
movsl
testb
stos
imul
jae
jle
cmpsb
stos
mov
add
jne
cmp
jge
fcoms
pop
imul
leave
das
jmp
ret
dec
test
dec
pop
xchg
add
mov
sbb
icebp
ljmp
xor
sti
ljmp
sbb
mov
cmp
aas
cltd
addl
mov
in
fisttpl
movsl
adc
jl
int3
ret
cld
jp
lock
xor
and
push
lds
sbb
push
into
pop
call
sbb
sbb
or
pop
jecxz
xchg
arpl
sub
mov
sbb
cs
enter
xlat
fisttpll
sbb
push
push
out
int3
ficoms
mov
xlat
mov
dec
xor
add
imul
push
add
push
and
loope
adc
outsl
sbb
dec
jl
xchg
imul
dec
mov
ljmp
cmpsl
add
and
push
sahf
pop
test
xor
ret
stos
sahf
inc
orb
pop
jnp
or
out
xor
inc
push
sub
xor
lcall
jb
push
std
inc
dec
sarl
jge
fucom
inc
sbb
clc
add
push
fwait
mov
insl
arpl
fcmovnbe
mov
jmp
iret
push
movsl
add
pop
test
out
cld
lcall
and
or
inc
cmp
nop
push
fisubrs
out
call
or
sti
pop
xor
sbb
jge
cmc
leave
lahf
push
cli
add
sub
inc
xor
orb
cld
cmp
jo
repnz
and
or
ja
test
mov
fwait
cmp
mov
jmp
fnsave
pop
scas
fstp
push
sbb
jo
mov
push
pop
xchg
xchg
xor
mov
call
clc
aad
add
add
dec
push
and
pop
idivl
lcall
fwait
sub
data16
sbb
or
sub
sub
and
jp
xor
sub
mov
nop
loope
pop
or
popa
in
sbb
jmp
xor
insb
lret
movl
je
shl
add
pop
mov
insl
jp
push
mov
push
inc
mov
int
sub
out
pop
push
outsl
out
pop
pop
mov
lods
sub
xor
mov
pop
jne
cs
ret
mov
sbb
and
jp
lock
fucomi
adc
lods
aas
sub
or
xchg
jl
xor
or
sar
test
pop
or
xchg
out
ret
gs
push
sbb
fldl
cs
daa
fsin
ss
in
es
xchg
in
repnz
pop
sub
adcb
adc
sbb
mov
loop
xor
dec
ret
jge
sub
cmp
scas
jbe
in
ljmp
loope
bound
and
mov
inc
enter
mov
xchg
mov
int
les
popf
in
cwtl
cmpsb
addr16
mov
push
call
lcall
sub
sub
rcll
mov
fldcw
adc
adc
and
lds
jbe
lock
xor
sarl
decb
pop
mov
leave
inc
ret
andb
mov
xor
movsl
push
sbb
xor
pop
loopne
pop
xchg
daa
enter
sahf
pop
test
rcrl
pop
lea
sbb
int
popa
sti
ljmp
jecxz
xchg
inc
arpl
lea
in
into
push
inc
jne
divl
imul
xchg
or
mov
xchg
test
mov
dec
mov
icebp
pop
sub
int
sbb
jae
jnp
das
aas
adc
xchg
popa
sbb
insb
xor
inc
shlb
fiadds
loope
hlt
mov
mov
inc
insb
xchg
movsb
mov
outsl
adc
lcall
rcrb
mov
xlat
add
es
and
je
mov
and
xor
ffree
pop
jmp
std
jae
push
sbb
out
mov
fsubs
lods
arpl
push
shrb
shlb
cmpsb
mov
js
rorl
push
mov
mov
out
jns
movsb
aam
mov
es
out
pop
fcmovnb
ret
icebp
outsb
sub
aas
push
xchg
loope
push
xchg
or
cld
dec
and
xor
shrl
fcoms
sub
inc
push
push
fidivl
sti
lods
daa
cld
mov
in
or
repz
cmp
fistl
ss
scas
mov
or
xor
sub
pop
inc
jb
test
push
mov
inc
jp
jl
add
mov
int3
outsb
add
pushf
mov
dec
rcrb
xchg
lods
movsl
xchg
insb
mov
push
repz
xor
dec
xor
ljmp
aaa
scas
sbb
pop
push
fists
lds
xor
jl,pt
xor
fdivrl
call
adc
jae
aas
fcmovnb
cs
notl
jne
jno
push
hlt
sarb
test
or
orl
out
jl
fstl
xchg
scas
xchg
mov
jmp
shrb
push
movsl
cmp
sti
push
das
cmp
jl
outsb
in
push
mov
lcall
xor
lcall
aad
add
test
jg
in
pop
mov
push
stos
pop
xchg
pop
cltd
push
jge
mov
loop
jmp
mov
xchg
popf
mov
sbb
in
test
outsl
mov
push
cmp
insl
adc
ja
xorl
lock
jns
js
push
into
lcall
lods
mov
enter
je
ss
js
adc
add
mov
xorl
inc
shlb
out
sub
aad
lcall
mov
cmpsb
inc
test
sbb
mov
xlat
es
push
fdivp
xchg
cmp
jg
or
stos
xchg
dec
mov
push
dec
mov
loope
daa
mov
leave
or
or
dec
mov
mov
out
sbb
jbe
mov
mov
ja
dec
call
dec
push
dec
push
pop
popf
cmc
mov
unpckhps
jne
adc
testl
inc
adc
dec
pop
out
mov
pop
test
push
jne
ss
pop
daa
xchg
push
inc
push
in
dec
xlat
sub
ret
cmpsl
andps
add
mov
lret
lcall
into
dec
rolb
aaa
lahf
enter
sub
inc
mov
add
fpatan
insb
int
and
incb
sbb
sarl
push
jl
fldenv
cltd
xor
sbb
pop
pop
sar
sub
cmpsl
jae
push
out
jecxz
mov
in
sbb
std
xor
mov
cmpsl
pop
outsb
cmp
loop
sbbb
cltd
sbb
pop
push
xor
mov
xchg
or
ja
sbb
fiadds
dec
movsl
pop
fwait
jle
out
cmpsl
pop
and
mov
jb
xchg
arpl
adc
ret
bound
std
fnstcw
mov
jl
popf
jne
insl
or
push
push
pop
dec
pop
jno
or
pop
jle
xor
fimull
cmp
adc
rol
xchg
add
push
aad
or
add
rorl
testl
jl
pop
enter
fdivrs
add
cmp
scas
aaa
out
sub
je
cmp
add
sub
jle
pop
adc
ja
cld
push
fnsave
jp
aam
aaa
or
pop
cs
mov
fmul
in
pop
fiaddl
add
pop
mov
shl
dec
insl
movb
sub
jbe
pop
pop
repnz
test
lds
mov
hlt
pushf
lea
ret
mov
adc
pop
repz
shr
stos
jp
out
fs
outsb
fstps
in
std
inc
pop
sub
jns
shll
jno
xlat
jae,pn
or
mov
test
add
rcrl
mov
add
cwtl
rcrl
xchg
inc
loope
inc
push
cmp
dec
jecxz
adc
out
cli
pop
mov
dec
or
mov
ret
inc
movsb
xchg
pop
or
cmp
pop
inc
dec
or
lret
loope
jp
jp
fdivrs
pop
lret
push
movsl
pop
cmpsb
out
add
fwait
shrl
sarb
call
imul
pop
pop
push
lods
stos
shlb
pop
pop
jb
dec
cmpsb
std
add
pop
daa
mov
sbb
daa
je
cmp
insb
pop
xor
or
test
pop
sbb
iret
mov
lods
sti
mov
idiv
adc
repnz
mov
pop
in
dec
sbb
jnp
or
es
fcmovne
pop
push
cmp
xor
fcoms
and
hlt
mov
sbb
sbb
ret
aas
lret
mov
pushf
loope
cwtl
popf
mov
push
fwait
test
dec
inc
insb
sbb
fidivl
loopne
add
ljmp
cmc
stc
or
dec
mov
jp
fnstcw
dec
jp
fsubr
icebp
stos
stos
testb
inc
mov
cs
in
or
push
pusha
inc
xor
insb
cld
inc
stos
dec
fstpl
lea
dec
repnz
mov
out
imul
xchg
jge
call
sarl
jl
pop
mov
push
jno
mov
mov
test
adc
sbb
in
popa
subb
test
test
lret
xchg
xchg
scas
or
sar
jg
bound
hlt
popa
and
mov
and
test
inc
adc
stos
das
lock
enter
or
push
leave
pop
test
jmp
das
pop
sub
aas
cltd
subl
shl
mov
aas
xor
jb
fadd
cwtl
mov
fidivrl
jno
jo
gs
sbb
aad
gs
or
xor
je
in
pop
pushf
adc
mov
or
daa
orl
xchg
xchg
dec
ja
push
sarl
daa
loope
cltd
xchg
ret
push
gs
mov
pusha
lahf
mov
jmp
dec
mov
pop
xchg
stos
pop
lods
ret
add
fisttpll
dec
and
sbb
adc
mov
in
or
xchg
mov
dec
paddw
add
jbe
sbb
dec
popf
jle
fisubl
and
icebp
sar
xchg
dec
inc
mov
aas
cmp
in
stc
cld
dec
jbe
xchg
iret
stos
xchg
add
mov
popf
jb
js
cmp
adc
scas
test
xlat
sub
mov
adc
outsb
xchg
mov
cmp
mov
int3
fneni(8087
xor
cltd
rorl
gs
jle
movsb
jg
push
push
mov
inc
lods
sub
pop
lcall
cmp
ljmp
je
negl
call
mov
movsb
rcll
insb
stc
or
jmp
ljmp
lret
sbb
pop
testb
fisubrl
mov
inc
add
pop
js
test
and
in
mov
lahf
loope
mov
movb
jmp
mov
aaa
adc
in
or
dec
test
dec
es
insb
sub
or
jo
push
dec
fdivr
cmpsb
outsb
jno
gs
mov
jp
imul
cmp
jl
addl
fwait
mov
loope
in
dec
ljmp
out
mov
sbb
imul
push
clc
cmpsl
push
mov
jmp
lret
push
xchg
dec
xor
les
jmp
rclb
push
pop
mov
or
ds
or
loop
ret
dec
test
out
dec
adc
cmp
popf
jmp
aas
lods
xorb
outsl
adc
xchg
inc
fmul
jmp
add
lahf
ljmp
sbb
push
cmc
movsl
xor
cmp
fdivrs
mov
in
fistpl
pop
ss
xchg
into
pop
sub
cmp
or
adc
mov
sbb
fwait
mov
cs
add
jmp
cmp
mov
cwtl
les
inc
out
pop
adc
lret
fimull
cmpsl
fbld
push
sbb
negl
js
and
gs
stos
ret
sbbl
data16
push
mov
sbb
test
jg
fwait
or
daa
mov
data16
dec
lock
ret
cmp
mov
cmp
adc
insl
in
inc
hlt
and
movsl
psubsw
test
xor
adc
cmp
fsubrs
adc
bound
je
std
mov
int3
sub
orb
fnstenv
push
mov
sub
pop
inc
push
out
jne
sub
mov
mov
test
and
std
mov
cmc
add
lock
xlat
fs
mov
push
adc
inc
imul
cmp
mov
data16
ss
dec
xchg
xor
rcll
into
dec
loop
scas
lods
jo
fnstsw
dec
call
jmp
pop
out
add
pop
test
xchg
xchg
or
xchg
pop
xor
sub
mull
movsl
fstpl
icebp
shll
sub
push
xchg
mov
mov
negb
sbb
cmp
cmpsb
xor
in
sti
inc
push
xchg
sbb
in
outsl
mov
clc
mov
add
xchg
cmp
push
pop
inc
stc
mov
data16
arpl
pop
jb
inc
push
call
add
adc
dec
ja
xor
add
cmp
mov
jne
stos
sbb
cmc
xchg
in
out
testb
or
mov
lock
js
xchg
in
pop
outsb
sub
push
sbb
adc
flds
hlt
loop
pop
sbb
cli
fidivs
outsb
or
mov
push
lods
scas
test
fnstsw
dec
andb
orl
bound
shl
adc
clc
rcl
and
scas
out
push
repnz
or
jb
push
scas
cwtl
mov
shrb
lods
scas
ficoml
fwait
pop
inc
pusha
push
repz
jl
test
and
mov
aas
jl
inc
call
pusha
jp
inc
pop
movl
leave
leave
push
push
lcall
mov
push
or
aam
dec
sti
push
shl
sbb
mulb
mov
fisubrl
js
adc
inc
inc
jecxz
pop
mov
sbb
ss
push
shrl
hlt
stos
add
arpl
jae
mov
add
add
xchg
faddp
lods
pop
lods
sar
mov
sub
scas
cmpsl
fs
test
xor
cmp
jo
cltd
push
enter
popa
jmp
sbbl
rolb
fsub
scas
ret
js
sub
sarl
fldenv
jmp
hlt
in
or
pop
rorl
cwtl
test
mov
mov
aas
cmp
add
pop
fdivl
int
popa
xlat
les
ljmp
cwtl
dec
cld
cwtl
sti
jo
xchg
dec
sarb
loope
pop
cmp
push
ret
or
daa
call
pop
sti
mov
jmp
mov
push
loope
jmp
dec
push
jmp
imul
sarl
scas
cs
push
imul
data16
push
inc
lods
imul
fnstenv
ret
icebp
sbb
adc
jo
push
inc
outsl
popf
inc
cmp
mov
mov
pushf
mov
cmp
cs
jo
out
jae
adc
nop
xor
mov
adc
mov
addr16
add
roll
xchg
cld
jmp
push
cwtl
cmp
cltd
cs
dec
icebp
mov
fldenv
hlt
lcall
or
leave
mov
push
daa
adc
push
inc
cmp
or
insb
mov
cmpsl
inc
je
xchg
add
cmp
jne
dec
lcall
outsl
xchg
int3
out
out
bound
xorb
xchg
inc
mov
xchg
cld
lods
cs
loopne
and
mov
cmp
xor
sbb
mull
or
cmc
rol
jne
mov
addr16
out
sahf
in
movsb
xchg
rorl
popf
add
fsubrp
inc
lret
js
divb
mov
fdivrl
imul
push
aam
fwait
dec
imul
lods
popf
adc
dec
aaa
int
ficompl
jae
scas
daa
cmp
adc
sub
pop
nop
insl
mov
inc
adc
mov
dec
ljmp
xchg
stos
push
add
add
push
in
mov
or
xchg
imulb
jne
xor
sbb
les
push
jno
jns
mov
shl
cmpsb
push
inc
in
mov
call
and
sbb
cmpsb
mov
adc
dec
sti
mov
push
std
dec
lock
popa
cmp
adc
or
enter
pop
adc
inc
es
xchg
pop
add
lods
adc
adc
mov
fistpl
inc
lret
fwait
mov
ljmp
fwait
jle
ljmp
aad
aad
mov
das
cmp
ds
inc
out
jle
xor
jnp
lret
lds
inc
add
cmp
gs
mov
in
clc
dec
enter
pop
je
dec
jle
pop
pop
test
mov
lcall
leave
movsb
push
xorb
add
xor
mov
outsb
jbe
dec
popa
adc
testb
add
leave
xchg
out
mov
adc
mov
clc
sub
insb
ljmp
les
stos
mov
xchg
adc
pop
test
jbe
jne
xchg
mov
add
xorb
aam
pop
dec
stos
mov
and
cmp
dec
adc
mov
outsb
lock
push
and
repz
and
and
loop
push
mov
std
stos
sti
dec
dec
cmpb
cmp
push
stos
adc
mov
out
push
xor
xchg
aad
sbb
stc
cli
mov
insl
ds
sti
sub
inc
outsl
mov
inc
insl
cmp
pop
jg
outsl
icebp
cmp
jmp
insb
or
subb
incl
add
pop
sbb
xor
roll
mov
add
mov
adc
cltd
test
inc
nop
sbb
jno
outsb
pusha
cltd
shl
push
inc
jo
addr16
push
jnp
sbb
fs
push
mov
icebp
xchg
rorl
mov
aam
fnstsw
adc
mov
inc
bswap
fisttpl
lahf
sbb
jbe
add
cmpsb
in
sbb
add
stos
stos
imul
loope
cs
and
pushf
xor
push
push
cwtl
add
inc
jmp
cmc
ret
jge
sbb
faddl
in
push
inc
xchg
jecxz
mov
std
and
ss
push
cmpl
mov
push
sbb
cmpsb
dec
add
je
shrb
and
pop
jno
adc
or
push
aas
jecxz
and
ljmp
decb
movd
mov
xor
xor
cltd
lret
stos
add
xchg
out
cs
xchg
sar
jbe
cwtl
pop
lods
cwtl
in
jp
xchg
outsl
or
imul
into
hlt
pop
cmp
xchg
lds
sbb
mov
sbb
dec
test
js
pop
rcll
imul
push
mov
add
cld
incl
das
add
notb
out
std
pop
imull
insb
and
jmp
fcomps
shrl
std
cs
aas
lds
add
ret
fnstenv
lcall
lods
mov
pop
mov
shll
adc
notb
xor
or
mov
mov
xchg
or
gs
inc
jnp
popa
sub
popf
subl
mov
clc
jo
stc
mov
cmpsb
bound
mov
sarl
arpl
mov
out
pop
jmp
das
stos
mov
clc
popa
sti
jne
jno
iret
enter
int
out
mov
int
xchg
lock
mov
sbb
push
in
int
mov
adc
mov
out
pop
jp
jecxz
mov
pop
scas
jg
mov
daa
push
mov
mov
sbb
adcl
xor
fucomip
bound
and
ds
sbb
push
rol
pop
mull
xor
mov
test
cs
jecxz
aaa
jne
aaa
pop
push
mov
jns
data16
cmpsb
arpl
lea
std
fsts
jmp
sub
cmp
into
inc
push
cmp
mov
xchg
js
add
pop
pushf
mov
popa
repz
add
sbb
ror
mov
push
push
loopne
pop
mov
or
lea
mulb
mov
add
fidivrs
and
pop
inc
push
jp
mov
mov
shr
cli
loope
adc
add
xor
and
pop
inc
push
jp
mov
mov
shr
cli
loope
adc
add
xor
and
pop
inc
push
jp
mov
mov
shr
clc
loope
adc
add
xor
and
pop
inc
ljmp
sub
mov
mov
push
add
int3
int3
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
mov
mov
lea
push
movl
movb
movl
movb
movb
movb
movl
call
leave
ret
sbb
or
cmp
sub
xchg
lret
cmp
adc
pusha
mov
or
ja
pop
lret
daa
ljmp
out
negl
dec
xchg
jp
push
lcall
ja
imul
cli
daa
ljmp
out
negl
dec
xchg
jp
push
lcall
push
ficoml
inc
inc
mov
sahf
cmp
rcll
movsb
inc
and
scas
imul
inc
popl
stos
lods
out
push
mov
movsl
xchg
test
push
inc
jb
adc
daa
addr16
movl
icebp
rorl
xor
lcall
daa
mov
mov
lahf
mov
or
push
iret
sub
dec
push
pop
mov
rclb
sub
ljmp
cmovp
stc
int
xchg
jb
fcompl
aas
cwtl
xlat
jae
push
xor
leave
out
cmc
pop
stc
mull
pop
imull
jp
inc
lahf
andb
inc
inc
mov
or
cmp
sub
pop
xchg
jp
push
lcall
ja
pop
lret
daa
ljmp
out
negl
cmp
push
loope
jecxz
ds
push
mov
inc
lret
pop
lods
jns
mov
inc
negl
pand
into
cmp
decl
cs
imul
push
xchg
inc
xchg
push
test
push
lcall
ja
pop
lret
daa
ljmp
out
negl
dec
xchg
jp
push
lcall
ja
pop
lret
daa
ljmp
or
xchg
cmpsw
scas
mov
push
add
pusha
xchg
jle
mov
pop
fmulp
js
fstpt
dec
push
aaa
add
push
loop
or
adc
push
in
into
xorl
rol
fmuls
dec
les
cmp
lea
push
jecxz
add
push
mov
in
pusha
mov
xchg
insl
pushf
lds
pop
pop
dec
inc
and
push
pop
lods
insb
sbb
mov
pop
add
rcll
mov
orb
cmp
dec
push
imul
push
adc
pop
cmpsl
sub
xchg
cmpsl
sub
and
dec
stos
inc
mov
or
mov
enter
jo
outsl
sub
pop
and
xor
cmp
pusha
fisubl
jg
inc
dec
mov
imul
dec
add
or
pushf
leave
outsl
cmpsl
push
xchg
add
insl
sbb
js
and
test
outsb
xchg
stos
adc
jno
mov
data16
nop
popf
mov
iret
mov
in
ret
xor
gs
push
mov
adc
subb
xor
dec
cmp
imul
sbb
stc
sbb
ds
sub
aaa
cld
jle
jl
lds
mov
mov
ja
ds
adcl
xchg
xchg
mov
rcll
aaa
xchg
inc
mov
lret
jge
pop
es
outsl
xchg
sub
xchg
adc
mov
sbb
sbb
xchg
cld
lods
jns
cmp
mov
mov
jne
xchg
mov
shrb
jne
icebp
test
idivb
popf
lods
jb
sbb
rcrb
test
pop
jp
scas
aam
inc
pop
mov
or
addr16
inc
repnz
sub
repnz
fwait
pusha
repz
fwait
les
push
nop
std
fwait
je
fidivrs
mov
xchg
es
inc
stos
mov
imul
sti
adc
sbb
lods
add
mov
dec
cltd
faddl
fstps
xor
es
stos
add
mov
inc
in
mov
cwtl
out
or
sub
sub
jbe
arpl
mov
mov
mov
or
xor
mov
ljmp
bnd
inc
xchg
mov
xchg
jg
std
sub
lds
cmp
scas
mov
mov
adc
xchg
jnp
cwtl
inc
adc
push
mov
push
loope
push
lret
stos
bound
repz
in
mov
jo
lock
jl
lea
cmp
test
sbb
add
sbb
icebp
pop
je,pn
ret
xor
mov
and
pop
pop
pushf
pop
add
mov
aas
adc
inc
loope
arpl
lcall
mov
ja
outsb
sbb
ds
xlat
sahf
jbe
addr16
cwtl
je
and
test
push
pop
jns
push
fnstcw
mov
xchg
stos
je
cmp
aam
sbb
jl,pn
lods
mov
pushf
and
mov
scas
xor
lret
dec
call
mov
out
in
lds
pop
out
inc
sub
jb
cmp
sbb
cltd
or
xor
and
and
stc
cmp
xor
lret
movsb
lock
mov
xlat
shr
data16
xor
xchg
ljmp
mov
adc
rolb
add
cmpsb
inc
enter
in
aad
xchg
fadds
rcrl
rcll
js
jp
gs
aad
cmp
inc
repz
jmp
dec
or
mov
mov
cmp
inc
xchg
adc
push
add
scas
jo
mov
lea
sbb
fdivrs
push
cmc
sbbb
pusha
add
roll
imul
insb
dec
add
pop
movsl
js
clc
inc
pop
jl
scas
insl
jno
adc
mov
sbb
leave
xchg
sahf
pusha
shl
dec
sub
push
add
daa
inc
int3
jecxz
stc
adc
pop
addr16
fcmovu
in
leave
xor
mov
notb
jg
jmp
dec
cs
cltd
xchg
shrl
jle
popf
notb
xchg
jnp
xlat
cmc
pusha
mov
xchg
sbb
fidivs
and
xchg
adc
mov
and
cs
xor
fistpl
hlt
xchg
aaa
mov
mov
push
popf
lea
and
and
mov
pop
pop
in
sbb
lret
jecxz
xor
nop
add
addr16
inc
cltd
xchg
mov
lods
inc
adc
inc
cmp
mov
dec
imul
ret
addr16
jge
and
call
push
insl
dec
cmpsl
cmc
fldl
gs
push
sbb
jns
mov
test
out
xchg
mov
mov
mov
and
and
flds
hlt
popl
cmc
lods
fsub
scas
int
cltd
or
stc
xor
mov
cmpsl
mov
mov
fnstcw
and
adc
sub
sti
or
dec
xor
test
out
out
lock
mov
scas
dec
xchg
mov
sub
push
rolb
hlt
jle
pop
inc
dec
testb
dec
mov
mov
push
dec
rcr
mull
lcall
adc
pusha
lcall
cld
scas
aas
xchg
lods
mov
sub
cmpsl
pop
mov
imul
xlat
enter
rorb
fsts
adc
add
add
pop
mov
loopne
shrb
inc
sbb
mov
mov
push
aas
jne
sti
subb
out
das
inc
arpl
and
scas
pop
shlb
pop
push
lock
int
cmp
or
insl
gs
test
call
mov
mov
ret
sahf
xlat
xlat
xchg
cmp
cmc
jo
sbb
lahf
lods
xor
imul
xor
adc
sbb
stc
lds
pop
push
std
xor
add
pop
mov
xor
repz
xchg
gs
sub
imull
cmp
pop
test
push
push
insl
out
je
mov
aaa
cli
aad
sbb
imul
inc
pop
lock
mov
push
xor
loope
mov
xchg
cmp
negb
aad
sub
dec
or
std
cmp
testb
jne
pop
sti
movsl
mov
in
xor
jmp
pop
xchg
xchg
jb
jge
jno
push
jns
jbe
scas
xchg
aas
pop
call
xor
scas
out
dec
loopne
testb
mov
sbb
fists
fadd
sub
leave
icebp
dec
cmp
out
adc
mov
test
jp
xchg
in
mov
pop
inc
movsb
xchg
rcrl
lcall
loopne
cmp
stos
pusha
fisubs
push
dec
push
pop
mov
arpl
ret
test
ret
mov
adc
sarl
adc
int3
xor
pop
shrl
xchg
cmpsl
mov
outsl
adc
fnstcw
int3
outsl
stos
lret
mov
xor
sbb
mov
push
push
mov
fisttpl
push
xor
xchg
sbb
push
mov
inc
test
cmp
insb
popf
loope
sub
pop
sahf
sub
std
cli
or
mov
xor
popa
xor
mov
or
sbb
jne
dec
inc
add
js
mov
shlb
cmp
adc
outsb
data16
popf
in
shrb
lcall
mov
test
sub
xlat
sarb
push
rep
mov
pop
mov
and
mov
xchg
int3
idivl
mov
add
repnz
push
push
inc
jnp
mov
dec
sub
cmp
cmc
repz
sub
adc
sub
jno
shr
pop
repnz
push
adc
xchg
xor
lret
fmull
push
sub
inc
jle
clc
lods
jmp
shrl
adc
pop
nop
call
xchg
inc
lret
sbb
add
jg
stos
mov
pop
push
jp
fcomp
cmpsl
xor
out
into
xlat
dec
ficomps
dec
sub
out
jnp
test
push
sbbl
test
mov
xchg
add
stos
cmc
fsubs
mov
cmp
sub
xchg
mov
mov
xchg
mov
lock
xor
xchg
ret
inc
xor
in
and
arpl
push
push
loopne
scas
out
movsl
cs
jnp
into
sbb
int
mov
fisttps
loopne
inc
and
std
pop
notb
cs
jae
mov
mov
mov
push
jecxz
pop
daa
add
xchg
and
xorl
sub
iret
xchg
pop
dec
pop
cmp
jge
nop
or
mov
lret
mov
sbb
flds
negb
adc
push
inc
cmpsb
ret
mov
xchg
pop
aaa
mov
or
mov
xchg
sub
subb
mov
push
std
in
pop
sub
je
shll
imull
pop
inc
add
pop
stos
mov
lods
xchg
fwait
leave
push
hlt
js
sbb
sub
push
std
sbb
or
cli
xchg
mov
cmpsl
imul
in
jmp
inc
sub
pop
inc
stos
movsb
mov
xor
jns
int3
jno
adc
mov
xchg
sbb
movsl
cld
cmp
jp
jecxz
lret
mov
in
jge
shrl
nop
sbb
push
gs
dec
out
gs
xchg
adc
mov
int3
rcr
imul
sub
dec
sbb
pop
stos
wrmsr
xchg
insb
in
insl
jae
sahf
iret
rep
cmp
sbb
push
xchg
mov
sbb
sub
ficoms
mov
in
push
stc
jb
push
out
aad
push
and
jnp,pt
jle
ljmp
ja
repz
mov
jp
fsts
jbe
popf
cs
movsl
jp
nop
adc
pushf
stos
inc
inc
pop
in
push
call
sbb
outsb
bound
adc
pop
mov
dec
mov
adc
das
mov
xchg
lahf
dec
adc
mov
xchg
test
xchg
cli
in
mov
push
push
push
xchg
adc
xchg
ljmp
ja
fidivl
stos
fwait
ljmp
xor
in
std
sub
inc
sub
and
fdiv
fildl
mov
adc
test
in
lods
xlat
test
outsb
imul
sub
add
icebp
fadds
loop
int
les
mov
mov
fsub
lock
rclb
icebp
push
inc
sbb
ret
xchg
daa
mov
jo
jmp
mov
out
jecxz
jns
orb
lock
out
and
data16
pop
jecxz
in
ljmp
add
inc
jmp
lret
mov
sub
lods
lcall
gs
scas
xchg
lret
pop
jno
lock
sti
insb
repz
scas
fcompl
add
ja
mov
or
mov
arpl
mov
iret
sar
fs
cmp
xor
mov
mov
pop
add
xor
divl
nopl
sbb
push
lahf
inc
subl
jmp
bound
push
imul
out
fwait
jge
pop
imul
jb
dec
cmp
iret
mov
mov
daa
mov
mov
cmp
cmp
in
dec
sub
mov
dec
mov
jle
ss
jbe
rorb
inc
ljmp
movsl
add
movsl
jb
xchg
dec
cltd
add
and
jl
push
push
ja
shl
cli
test
adcl
je
out
sti
cmpsb
add
popf
sub
jmp
cs
sbb
xchg
ret
iret
data16
mov
dec
in
inc
xlat
mov
hlt
inc
mov
lods
in
stos
jae
cwtl
mov
inc
pop
int3
int3
roll
andl
sub
xor
lret
mov
push
imul
sub
sub
imulb
mov
outsb
stos
xchg
jle
dec
jl
pop
out
stos
pop
pop
pop
out
shr
into
jmp
aam
jmp
loopne
in
out
xor
test
push
sarl
mov
in
sbb
in
fcmovbe
cmpl
inc
push
lock
out
les
jg
and
inc
mov
movsl
scas
dec
sbb
mov
push
jl,pn
sub
aad
lahf
inc
sub
arpl
and
cmp
pop
cwtl
gs
out
mov
mov
push
lock
fdivrs
mov
lds
add
in
out
inc
push
fmull
add
cmp
test
aas
push
imul
mov
mov
test
and
dec
pop
fnstenv
mov
nop
add
dec
aaa
cmp
sti
out
stos
int
sysret
outsl
mov
xorl
pop
hlt
and
sbb
cmp
loop
loope
jg
push
pushf
push
push
sub
push
sub
inc
int
cli
lods
pop
pop
or
pop
add
xchg
nop
cmc
and
sbbl
cwtl
sbb
fs
mov
jns
out
adcb
add
jmp
in
push
adc
jecxz
popf
ljmp
loop
out
or
and
xchg
jbe
arpl
cmp
mov
or
pusha
cmp
mov
mov
out
dec
inc
fstps
inc
jp
fstl
fisubrl
ss
push
lock
cmp
aam
xchg
clc
repz
shr
sti
mov
cmp
xor
aaa
into
jbe
mov
mov
fadds
or
mov
xchg
jae
stc
sub
stos
ljmp
push
test
push
dec
ficoms
xchg
inc
sbb
adc
mov
mov
adc
daa
xor
sbb
mov
pop
xlat
and
ret
sub
int
ficompl
js
loopne
out
rcll
or
ret
sbb
mov
pop
push
scas
cld
lock
imul
jg
insl
lods
sbb
add
ret
add
push
xlat
pop
lahf
movsb
jbe
ss
je
jecxz
adc
pusha
mov
add
push
rorl
int
mov
shlb
sub
sbb
pop
adc
mov
ds
inc
fiadds
fbld
pop
cmc
jb
mov
mov
xor
pusha
add
xorb
xchg
mov
mov
fs
sub
loop
in
outsl
xchg
pop
test
mov
fistpl
nop
ja
aam
bound
inc
rcrl
aas
cmpsb
dec
out
testb
jb
xchg
pop
ja
push
cltd
cld
push
push
enter
in
imul
mov
and
mov
mov
sub
push
sarb
mov
insl
add
pop
sbb
movsl
dec
cmp
jno
ror
mov
ds
ror
ds
push
cmp
out
xorw
outsl
jl
xchg
orb
jl
jmp
sub
mov
ror
and
inc
cmpsb
das
xor
mov
addl
aaa
test
lea
orb
jne
into
or
mov
xor
into
ds
inc
adc
je
xchg
lods
mov
cmpsb
daa
sub
xchg
inc
mov
sub
ret
daa
cmp
aam
jge
mov
inc
cmp
aam
sbb
fwait
xchg
jp
xor
mov
cmp
jmp
add
xor
and
out
pop
scas
pop
scas
aaa
xor
or
out
xchg
push
add
and
and
push
pop
pushl
push
sub
lods
js
jmp
dec
push
clc
mov
jge
xchg
cmp
push
mov
lods
xor
pop
scas
sbb
dec
out
adc
dec
sub
lods
pop
mov
push
inc
rorb
test
je
adc
push
add
test
test
lret
pop
rclb
jg
nop
mov
lods
sbb
lret
push
xchg
cmp
jne
xor
fcomp
rolb
mov
lock
scas
pop
push
repnz
mov
mov
outsb
push
fs
xchg
mov
dec
int3
cmp
mov
push
sbb
inc
add
sbb
movsl
fnstcw
fmul
iret
sbb
sub
stos
dec
cmp
cmpsb
dec
jmp
popa
aas
test
jp
inc
sub
sub
cwtl
dec
shl
out
add
mov
loope
jmp
mov
inc
cmpsl
test
and
jns
fimuls
cmp
lock
pop
sbb
sbb
imul
xchg
mov
adc
inc
fdivs
test
sub
jg
cmovs
loope
bound
add
repnz
mov
and
dec
arpl
das
push
sbb
push
out
pop
fisubs
xchg
push
cltd
in
mov
aam
fsubrs
aad
cmp
mov
divb
hlt
inc
adc
cwtl
xor
jbe
repnz
cli
push
decl
sub
sub
jge
mov
jbe
lods
cmp
add
aaa
fdiv
or
add
and
xchg
sbb
xchg
ret
inc
pop
mov
mov
rolb
jne
dec
pop
push
jb
test
and
mov
and
sub
cwtl
andl
jns
cs
cmp
push
ret
es
push
movhps
mov
cmpsl
aas
push
les
insb
push
mov
sbb
adc
jno
cli
pop
add
push
push
add
std
or
pop
cmc
inc
ret
sub
xor
insb
fldpi
addr16
push
jl
xor
shlb
hlt
popf
xor
jno
jns
add
cmc
dec
shlb
cli
pop
popa
jecxz
lods
fs
loop
sar
mov
bound
push
loopne
movsl
lahf
mov
sbb
cmp
repz
mov
lret
pop
out
mov
inc
jl
bound
mov
mov
lods
and
fimuls
jns
xor
lcall
ret
in
nop
mov
dec
icebp
bound
jge
inc
test
cmc
mov
cmc
xlat
inc
xor
dec
loope
sbb
clc
int
jne
adc
popa
sub
jecxz
aaa
pop
sbb
mov
insb
fisubrs
pop
cltd
std
and
jae
mov
or
inc
popa
stc
xchg
push
iret
push
jnp
sbb
cmp
sub
mov
jae
ss
and
sbb
push
das
pop
xchg
cmpb
pop
call
movsb
sbb
mov
cltd
mov
mov
sub
inc
or
jge
out
dec
pop
filds
lret
in
xor
add
fs
sbb
push
les
pop
inc
dec
fld
cld
cmc
ds
or
push
sub
scas
mov
lods
cld
xchg
mov
std
cmpsb
pop
mov
sbb
or
inc
or
icebp
and
sbb
frstor
add
movsb
and
cmp
pop
iret
out
test
fdivrs
pop
dec
pop
lcall
xor
lds
mov
xor
sub
cltd
insb
ljmp
into
adc
test
push
jp
sub
mov
sub
nop
push
jl
xchg
mov
fsts
lods
push
shll
jle
mov
nop
cwtl
jg
inc
lds
shrl
xchg
and
int
out
jp
mov
je
pusha
pop
pop
jae
fstpt
inc
xchg
and
lcall
cs
jge
jno
and
push
xchg
sub
xor
enter
cli
jl
inc
and
mov
in
daa
in
ret
mov
cmpl
add
xchg
dec
and
out
adc
mov
adc
andl
mov
xchg
cmpsl
std
xor
and
push
mov
sub
dec
div
jp
adc
scas
stos
lock
mov
cld
jg
inc
data16
ret
jae
loop
fmull
pop
ljmp
xor
pop
stos
aaa
jp
and
jmp
ss
cmpsl
xchg
ret
add
mov
sahf
sar
dec
mov
dec
jns
and
stos
movsb
inc
popa
sbb
jecxz
pop
xchg
into
daa
fwait
xchg
cmpsb
dec
fisubrl
push
inc
jl
arpl
scas
mov
loopne
pop
adc
nop
sbb
mov
mov
dec
or
jnp
lea
cmc
orb
outsl
dec
push
scas
out
imul
popf
out
add
in
cmp
dec
ljmp
push
stc
lret
lret
xor
dec
mov
fists
test
nop
jne
inc
mov
push
inc
jae
inc
pop
addr16
das
repnz
xchg
add
nop
sub
ret
mov
sbb
push
add
stos
fidivrs
lret
fcomps
negl
jg
pop
jne
les
add
stos
pop
pop
pop
adc
out
cmp
fucom
cmp
inc
scas
ljmp
fwait
jnp
pop
daa
jnp
paddd
hlt
imul
and
sbbl
js
int3
popf
out
mov
test
insb
pop
aad
dec
or
xchg
dec
mov
lods
lret
pusha
mov
adc
leave
in
adc
aad
mov
in
mov
push
jo
sub
adc
add
pop
mov
dec
cld
xlat
xchg
stos
and
xor
adc
add
loope
cmpsb
into
push
pop
movsb
jg
es
ror
cltd
inc
add
sbbl
repnz
mov
xchg
arpl
lods
cs
bound
outsl
bound
mov
xchg
dec
xchg
pop
daa
in
aas
or
lret
jp
jnp
stos
pop
div
pop
mov
xor
jns
cmp
xchg
add
sub
sbb
adc
hlt
xchg
inc
data16
add
and
imul
out
adc
aas
jmp
xor
jnp
push
aas
mov
push
lods
mov
out
cwtl
xor
int
xchg
ret
mov
and
fidivl
jb
pop
mov
mov
dec
xchg
insb
lcall
jnp
mov
mov
xchg
int3
out
popl
mov
cmp
insb
call
adc
dec
mov
or
loopne
xchg
xchg
scas
mov
data16
push
jl
xchg
cmp
into
xchg
fcoms
cmp
and
lahf
jp
roll
mov
insl
hlt
jg
inc
xchg
xchg
xor
fistps
pop
mov
in
jmp
hlt
pop
adcl
push
mov
sbb
mov
iret
sub
test
or
cmp
and
and
xchg
leave
push
adc
arpl
inc
leave
andb
pop
push
inc
dec
or
dec
dec
pop
sbb
sub
mov
sahf
inc
add
cmpsb
int3
jge
out
pop
popf
adc
add
movsl
mov
sti
idiv
sub
sub
fldenv
lcall
jle
sbb
sub
xor
fwait
inc
aad
inc
cmp
mov
adc
mov
adcl
stc
in
mov
and
outsl
push
jae
std
sti
bound
xchg
addl
scas
push
jmp
or
sub
add
gs
popa
ljmp
pop
arpl
push
mov
xchg
cs
sahf
stos
fnstenv
std
push
sub
lcall
sbb
dec
sub
fwait
xchg
push
mov
xchg
inc
adc
push
mov
add
adc
lret
sbb
jg
adc
negl
dec
xchg
jp
push
lcall
ja
pop
lret
daa
ljmp
out
negl
dec
xchg
jp
push
lcall
ja
pop
lret
daa
ljmp
out
neg
xchg
jp
ljmp
stos
ja
pop
lret
daa
ljmp
out
negl
dec
xchg
jp
push
lcall
add
fcomps
int3
int3
mov
sub
xor
dec
ret
jnp
mov
push
stos
push
mov
pop
jmp
sti
mov
sub
pop
fisubrs
jnp
mov
sti
push
stos
push
mov
pop
test
scas
sbb
dec
out
pop
fisubrs
jnp
and
mov
sbb
or
inc
sahf
inc
out
icebp
mov
jg
adc
or
repz
push
mov
or
push
pop
push
fwait
popa
dec
jae
dec
out
movsb
and
cmp
stos
icebp
sub
pop
stos
inc
push
les
hlt
fadd
push
stos
cmp
adc
xchg
xchg
xorb
push
imul
fstl
jb
push
mov
xchg
dec
adc
in
test
push
mov
jmp
mov
lds
jmp
in
scas
jae
add
dec
and
clc
aas
ja
int3
xchg
push
test
fucomi
daa
mov
popf
push
in
dec
jno
aad
gs
jp
ficomps
out
mov
cmp
cli
jge
scas
sbb
dec
out
pop
fisubrs
jnp
mov
fwait
push
stos
push
mov
pop
jmp
xchg
fadds
push
fwait
daa
sbbl
out
dec
out
insl
ret
dec
std
clc
stos
das
test
jmp
ficompl
std
sub
dec
fwait
add
jnp
repz
out
arpl
push
aam
test
mov
mov
flds
dec
fadds
pop
mov
imul
mov
fwait
push
stos
push
mov
pop
jmp
sti
mov
sub
pop
fisubrs
jnp
mov
fwait
push
stos
push
mov
pop
jmp
sti
mov
cltd
icebp
jl
xchg
inc
sarb
push
push
inc
int
jle
ror
cld
addr16
jno
dec
mov
and
xlat
cltd
cmp
dec
pop
scas
mov
test
addl
push
loopne
push
inc
addr16
inc
call
lcall
or
popa
push
andb
pushl
cld
fisttpl
stos
add
jo
cmp
sbb
cs
jae
mov
dec
dec
jo
pop
sbb
cmpsl
psubusw
adc
jb
outsb
xchg
xor
push
inc
cltd
repz
push
jns
ror
shlb
das
xor
add
add
pop
pop
lret
fmuls
lds
xor
sbb
lret
ja
jge
sbb
clc
das
arpl
push
xchg
pop
adc
iret
mov
mov
jmp
cld
cmp
adc
dec
jle
push
add
sbb
cmpsb
aam
iret
xchg
xchg
jo
push
jns
push
pop
pop
ljmp
mov
int
insl
stc
cli
mov
cmp
popf
shr
mov
es
mov
cmpsl
popl
adc
sub
je
in
call
aas
loop
sub
imul
push
fcompl
ss
jo
add
add
pusha
and
call
cmp
incb
and
or
mov
pop
jg
ljmp
add
mov
mov
jns
mov
mov
jne
rcrl
sub
mov
dec
lahf
inc
pop
and
call
addr16
in
add
loop
lcall
inc
ret
add
sbb
or
out
std
int
fimull
aas
popf
jnp
orb
mov
daa
fldl
dec
sti
neg
nop
add
fwait
mov
cmp
jbe
add
dec
loop
decl
test
and
cmp
add
lds
inc
aad
push
push
push
xor
mov
addr16
dec
jl
in
ret
push
mov
loop
xchg
add
cmp
jb
lods
iret
adc
lret
lea
push
and
jno
push
mov
std
inc
lret
pop
xor
xor
lahf
cmp
repz
stc
cltd
lret
aad
pop
shrb
fildll
add
call
cmp
mov
mov
fcomps
loope
jp
adc
dec
mov
shr
mov
gs
clc
pushf
mov
fs
enter
loop
push
push
out
add
xchg
and
mov
test
shll
in
mov
ret
sahf
popf
cmc
add
xchg
imul
mov
jb
adc
sbbl
fs
shrb
mov
or
sub
xlat
xchg
jmp
fwait
push
push
mov
pop
nop
jle
adc
sbb
nop
notb
xorb
mov
ret
cmc
xor
jmp
pop
mov
mov
jle
sub
cmpsl
pop
stos
call
subl
mov
xor
cmp
cmp
mov
enter
push
rcrl
xchg
mov
push
dec
lret
adc
inc
inc
push
jle
cmp
loopne
shrb
inc
jle
test
mov
popa
cld
outsl
xor
sbb
or
sub
adc
mov
mov
lods
dec
mov
scas
repnz
jae
cltd
mov
and
insb
in
aad
dec
push
mov
cwtl
push
cmp
lock
ds
sbb
mov
fwait
leave
mov
aam
or
movsl
cmpxchg
mov
sbbb
leave
mov
adc
sub
sbb
xchg
call
int
cli
xchg
xor
fmull
xchg
or
sub
or
push
mov
xchg
inc
sbb
pop
sar
std
adc
dec
fisttpl
or
leave
xchg
or
lret
pop
push
mulb
decb
jbe
pop
lock
jle
mov
push
xchg
pushl
sub
push
imul
inc
jb
imul
jl
sahf
hlt
roll
mov
pop
fsubrl
jle
sahf
sbb
adcl
cli
test
loop
adc
loope
cmp
and
pop
les
cli
out
push
iret
inc
jns
mov
xor
lods
adc
and
lock
mov
out
movsl
cmp
jb
sbb
mov
dec
push
dec
fimuls
or
sbb
jae
inc
shll
fistps
pushf
mov
push
add
incl
jecxz
push
xorb
push
les
test
cli
jbe
xchg
inc
sahf
push
mov
fisubrs
dec
add
popa
inc
push
adc
adc
aam
ja
inc
loope
xor
add
fstl
cmp
pop
mov
fstpt
imul
xor
add
outsl
cmp
sbb
mov
and
int3
stos
xchg
loope
insb
push
sub
stc
loopne
clc
pop
mov
out
add
imul
mov
loop
xchg
mov
subb
repz
cli
icebp
shll
mov
sbb
dec
cli
ficomps
adc
je
mov
mov
subl
pop
cmp
inc
inc
repnz
inc
add
xor
sahf
mov
mov
dec
clc
sbb
and
adc
push
xchg
cmp
push
add
int3
xor
stc
xchg
std
push
std
adc
ficomps
fwait
sub
insb
dec
dec
mov
iret
jg
ret
jl
sub
sbb
addr16
imul
jmp
into
pop
ret
sub
xor
scas
adc
pop
push
push
mov
or
stos
outsl
cmc
jg
sbb
cmp
data16
mov
fstps
mov
mov
sub
add
or
mov
jnp
test
push
icebp
jge,pn
add
imul
mov
inc
mov
mov
sub
cmpsb
mov
dec
push
loop
lods
mov
pop
es
mov
or
and
pop
xchg
shlb
inc
xchg
cmp
sub
lock
jg
fistpll
repz
mov
ficompl
rcll
adc
or
in
and
movsl
inc
mov
decb
out
sbb
mov
adc
aad
mov
xlat
or
or
adc
push
sub
adc
dec
enter
sub
adc
imul
or
jae
inc
xor
mov
mov
jae
icebp
jae
rorl
mov
xor
pop
nop
mov
adc
lahf
mov
insl
lods
mov
cmc
mov
mov
dec
lcall
add
dec
cmc
jb
insl
cmc
das
adc
jl
hlt
pop
mov
ljmp
andb
sub
add
dec
ljmp
pop
push
aas
mov
out
ss
cwtl
mov
lea
dec
scas
hlt
xor
pop
fimuls
shr
jnp
ja
pop
pop
stc
inc
add
sbb
cmp
mov
inc
pop
dec
dec
inc
cmp
into
dec
test
pop
jge
mov
shll
cmc
je
mov
mov
bound
in
or
sbb
das
inc
xor
adc
bound
addr16
fs
dec
cltd
movsb
jnp
mov
ret
pop
insl
jmp
mov
test
add
mov
cmpsb
pop
ret
mov
fcmove
nop
push
leave
xchg
mov
fcmovnbe
out
and
sbb
decl
cld
fstpt
and
bound
xor
loopne
jno
movsl
sbb
ret
rorb
imul
cmp
jo
scas
scas
lods
pusha
adc
into
nop
xor
bndstx
jl
testb
or
adc
mov
lds
pusha
ret
scas
addr16
pop
sub
or
xchg
stos
push
fwait
push
sub
stos
inc
addr16
jne
cmpsl
mov
mov
jno
jnp
addl
sbb
loop
xor
sbbl
pop
xchg
iret
movsl
mov
cld
add
ja
insl
xchg
mov
push
sbb
and
push
mov
mov
rcll
mov
push
cs
mov
cmp
ret
lods
mov
push
cmp
or
push
int
and
js
mov
mov
push
aas
js
test
pop
pop
daa
xor
gs
test
fsts
test
pop
mov
xchg
push
adc
dec
scas
xchg
mov
push
int
or
faddl
ss
ret
rol
aam
mov
out
push
inc
push
out
dec
inc
xlat
and
mulb
mov
shll
into
jno
mov
inc
mov
mov
pop
inc
aam
sbb
or
cmp
xchg
int
int
es
loop
inc
cwtl
push
mov
mov
inc
xlat
shl
xchg
dec
mov
sar
ret
pmaxub
sub
pop
mov
daa
and
call
mov
and
js
daa
outsl
imul
int
mov
out
dec
mov
scas
push
loopne
cmpsl
adc
mov
push
insl
leave
cwtl
lods
jmp
mov
aad
dec
inc
and
icebp
inc
daa
ljmp
sub
loop
imul
fistps
push
add
jl
mov
lret
shl
mov
addl
imul
rcll
jnp
call
xchg
jl
decb
mov
out
test
adc
adc
or
imul
inc
rol
push
ja
xchg
outsb
sbb
in
aaa
xchg
add
and
pop
add
xchg
dec
out
dec
adc
fildl
xor
and
insl
sti
jmp
out
xchg
cld
add
pop
mov
adc
pop
cltd
ljmp
xchg
outsl
sub
adc
mov
mov
incb
xor
xchg
scas
imul
data16
in
movsb
ret
mov
scas
jno
inc
xchg
mov
mov
roll
sub
and
mov
dec
sbb
fidivl
or
out
stos
mov
pop
or
jae
xchg
jae
sti
outsl
out
push
lods
push
sub
and
mov
jbe
mov
in
mov
sub
mov
orl
sub
xchg
adc
sbb
adc
xchg
push
les
add
shlb
lds
fimuls
adcb
inc
insl
js
mov
xor
add
xlat
imul
xor
lock
and
cmp
iret
xchg
js
xor
sub
jb
filds
ja
in
lock
sub
sbb
inc
mov
mov
clc
or
jae
xchg
sub
add
fwait
daa
imulb
repz
inc
shrl
clc
mov
xlat
jo
ss
xchg
cmp
push
imul
sbb
enter
mov
jns
es
mov
pop
dec
lret
sub
sbb
xor
cld
or
shlb
cld
mov
sub
cmp
xor
lods
push
add
ret
je
bnd
cld
mov
ret
imull
adc
rorb
jg
pop
lds
ret
dec
xor
scas
or
mov
rcrb
adc
add
les
adc
pop
sub
stos
mov
idiv
repnz
mov
loope
mov
push
mov
xchg
cld
call
add
out
test
adc
xlat
xchg
frstor
dec
loop
imul
dec
sarl
adc
mov
inc
sub
push
adc
sub
inc
inc
leave
int
jne
xor
push
scas
mov
mov
or
out
xchg
jmp
pusha
dec
out
int3
mov
mov
sahf
lock
add
aas
test
cmp
jecxz
imulb
or
sub
stos
mov
jl
testb
outsb
pop
mov
mov
dec
dec
popf
loope
lock
insl
stos
daa
in
mov
push
lea
or
subl
jae
lahf
dec
das
add
fldcw
inc
aas
jmp
cmp
test
fs
mov
loopne
movsl
imull
inc
sbbb
sbb
sti
in
ud1
adc
pop
lahf
add
arpl
test
sub
lock
pop
test
inc
jmp
adc
daa
cmpsb
dec
fistpll
fistpll
jmp
push
dec
inc
jae
cmpsb
cwtl
adcl
inc
xchg
xchg
rclb
test
out
xor
push
or
adc
ss
cwtl
mov
push
and
mov
lock
add
dec
sbb
std
xlat
mov
jg
lret
xor
test
lock
mov
mov
inc
shll
dec
mov
fsubr
mov
mov
jle
xchg
inc
leave
pop
movsl
out
and
scas
push
xchg
mov
sahf
loope
push
xor
sub
aaa
popf
push
xor
nop
sar
adc
aam
dec
stos
xor
sub
or
inc
cmp
xchg
add
test
push
cltd
out
or
inc
outsl
fdiv
bound
in
pop
add
jb
jo
sub
pop
jl
mov
cmp
sub
dec
mov
iret
jl
sbb
shlb
xchg
jo
push
dec
fiadds
adc
adc
push
and
popf
inc
enter
ds
test
es
pop
lods
jg
cli
arpl
mov
rolb
sub
push
inc
adc
adc
add
xchg
loope
xorb
cmp
xchg
mov
aas
std
add
stc
push
lahf
mov
lcall
xchg
int
inc
dec
add
pushf
bound
stc
xchg
xchg
adc
in
dec
loop
popa
or
jle
pop
jbe
addl
cs
in
mov
movsb
daa
test
mov
enter
xlat
imul
sbb
lahf
mov
mov
push
fsubrl
inc
in
ljmp
loopne
xor
lods
loop
sbbl
xchg
pop
xlat
mov
fnstcw
sbb
mov
dec
pop
pusha
shr
mov
popf
or
enter
and
mov
or
mov
inc
or
loope
iret
inc
add
stos
dec
or
push
lcall
repz
loope
add
sub
orl
inc
pop
out
mov
xchg
mov
addb
out
pop
mov
in
out
mov
fisubl
lret
jg
sub
sbb
inc
sub
stos
pop
pop
xchg
icebp
adc
push
xchg
nopl
sub
std
test
adc
stos
clc
dec
js
lcall
sub
mov
add
lret
or
into
ds
xor
xchg
jmp
sub
ljmp
das
sbbl
push
sub
icebp
mov
adc
sbb
and
test
ss
push
movsl
or
cli
add
rcrl
mov
cli
inc
pusha
dec
cltd
mov
cltd
push
jne
in
pop
pop
bound
loop
mov
lcall
dec
enter
sti
fstp
icebp
out
pop
sub
test
inc
push
movsl
pop
orl
or
mov
je
dec
mov
mov
jbe
sbb
dec
mov
loopne
sbb
push
push
dec
cld
xchg
jae
inc
inc
xor
les
psraw
lahf
aas
out
adc
cwtl
pop
push
dec
xor
push
jle
pop
imul
xchg
and
outsl
or
jns
pop
xor
mov
scas
push
loop
lea
popf
sbb
mov
cltd
popf
push
or
push
pop
clc
mov
mov
push
scas
nop
xchg
pop
in
inc
aaa
mov
mov
push
pop
adc
pop
xchg
mov
enter
pop
cltd
and
pop
push
add
shrl
push
sahf
xchg
data16
int3
in
sub
in
fdivrp
xchg
mov
repnz
jl
arpl
outsb
xor
popf
stos
mov
cmp
and
out
push
iret
fildl
pop
and
inc
setl
jg
xor
adc
sbb
outsl
ja
aaa
or
add
arpl
adc
dec
dec
mov
test
subl
out
push
and
loopne
fwait
movsb
lods
mov
sbb
xchg
fwait
sbb
lds
mov
jne
cwtl
dec
rorl
sub
inc
lds
test
scas
scas
sub
sti
pop
push
sbb
inc
test
mov
jo
pop
ss
sub
aas
divl
rorb
icebp
xchg
push
xor
cmpb
gs
dec
adc
imul
jno
cs
add
repz
lea
pop
mov
outsb
dec
pop
sahf
pop
jg
dec
sub
mov
les
loop
cld
inc
scas
jle
inc
and
insb
les
cld
dec
lods
lahf
pop
dec
pop
in
sub
or
cld
push
jg
dec
icebp
cmp
scas
bound
daa
push
ret
cmp
adc
pop
or
xchg
mov
xchg
mov
xor
test
bound
mov
aaa
dec
inc
pushf
inc
adc
add
sub
iret
inc
stos
lock
stc
pop
repnz
mov
insl
inc
lods
pop
sti
call
outsb
inc
cmp
fcoml
or
loop
xor
aad
jmp
mov
push
jmp
xor
pop
sti
dec
lret
in
mov
stos
in
lock
fwait
out
inc
sbb
fmulp
out
outsl
lret
mov
clc
frstor
fcompl
fdivl
dec
xor
and
scas
lods
jns
cmp
roll
pop
in
lea
das
lds
pop
lret
pop
test
lods
pop
inc
or
push
adcb
int3
test
push
pop
dec
mov
adc
adc
call
or
leave
push
push
adc
pop
ret
lods
xchg
imul
dec
lret
mov
cmp
js
pop
sub
cmpsl
adc
out
aaa
pop
mov
pop
push
enter
cmc
cmc
lods
or
adc
sbbb
scas
in
arpl
data16
lret
mov
push
test
and
test
in
dec
mov
mov
mov
cmp
and
mov
fldcw
mov
bnd
in
mov
shrb
sbbb
cmpsb
shrb
inc
inc
movsb
cmp
pop
dec
sti
push
xchg
jg
xchg
stos
gs
or
add
mov
jno
into
adc
mov
pop
sbb
push
mov
push
and
mov
mov
out
sbb
rclb
dec
popa
pop
dec
mov
cmp
je
and
xchg
lds
addl
dec
mov
mov
aas
cmp
mov
mov
lods
mov
dec
inc
cmp
sub
mov
jb
cmc
outsb
sub
in
sbb
jo
fs
or
pop
xchg
mov
enter
lods
cli
pop
push
mov
enter
push
cmp
insb
test
mov
enter
mov
bound
outsb
arpl
mov
pop
ret
movsb
push
or
or
mov
add
bound
incb
xor
xor
xor
ja
xor
push
setle
mov
ljmp
movsb
shll
or
mov
mov
je
ficoms
cmp
hlt
push
mov
cli
sahf
push
jb
dec
shlb
mov
push
std
lret
sub
pop
mov
mov
xor
test
mov
jecxz
mov
mov
lret
and
pushf
dec
lret
sbb
sub
or
push
clc
jns
sarb
jns
jno
mov
or
cmp
add
add
push
xor
ds
adc
jge
xorb
aad
rclb
mov
and
inc
jae
jmp
popa
add
rcrb
mov
cmp
rorb
xor
mov
sahf
xchg
inc
les
movsl
add
jnp
ret
cwtl
rcr
lods
or
aas
lods
pushf
jecxz
js
sbb
data16
xchg
mov
sbb
ret
test
repz
pop
flds
ljmp
sbb
test
lahf
jnp
cmp
push
mov
xor
mov
ret
movsb
mov
inc
pop
cmp
in
popf
mov
lcall
dec
fstps
icebp
mov
fst
xchg
hlt
or
mov
cs
les
int3
loope
or
mov
fs
rol
mov
cmc
sub
iret
test
loopne
mov
inc
mov
jno
test
sbb
mov
mov
mov
bound
jno
bound
push
dec
mov
jl
rcll
lds
sub
dec
test
sub
adc
pop
jg
aaa
data16
bound
xchg
pushf
sub
loopne
jmp
mov
cmp
cmp
add
subb
push
inc
cmp
ss
sbb
add
mov
fisttps
mov
or
sarl
mov
out
inc
inc
lock
or
mov
rcrb
jae
push
in
jne
pop
sub
imul
mov
add
pop
scas
insl
bound
jns
mov
adc
sub
arpl
call
dec
sub
imul
sub
pop
mov
xchg
pop
and
out
test
mov
loop
pop
mov
lret
fists
mov
mov
outsb
fcoml
pavgb
inc
jb
test
inc
lds
nop
inc
add
fisubs
lds
outsl
notb
or
lods
es
in
pop
into
lret
dec
xorb
pop
mov
mov
jl
mov
addr16
jl
xchg
in
ret
idiv
mov
inc
jb
lock
xchg
imul
mov
out
mov
adc
cmp
push
adc
push
mull
adc
cltd
aam
das
mov
mov
sbb
mov
out
mov
inc
add
lcall
jle
xor
mov
out
aaa
mov
pop
ljmp
mov
push
cld
mov
xor
pop
lea
cmpsb
out
loope
sahf
cmpsl
faddl
mov
repz
dec
sub
leave
les
or
lahf
lods
sub
push
dec
lret
jmp
movsb
roll
xor
xchg
inc
jo
flds
jnp
icebp
xchg
ret
out
mov
out
mov
ljmp
daa
mov
mov
add
sub
test
add
jb
repz
sub
jp
inc
cli
adc
imul
mov
dec
out
pop
fisubrs
jnp
mov
fwait
push
stos
push
mov
pop
jmp
sti
mov
sub
pop
fisubrs
jnp
mov
fwait
push
stos
push
mov
pop
jmp
sti
mov
stos
mov
decb
fcmovnu
imul
aas
or
fwait
push
stos
btc
outsb
fistpl
dec
sti
mov
sub
pop
pop
imul
mov
xor
out
cmpsb
adc
add
int3
int3
int3
int3
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
leave
loopne
lock
sbb
jmp
pop
jno
push
jns
or
sbb
leave
loopne
lock
mov
mov
jo
inc
jns
or
xor
add
adc
stc
fldl2t
jmp
mov
mov
push
sbb
push
and
addr16
jg
lods
flds
leave
push
inc
jg
mov
sub
fmuls
mov
inc
loopne
jp
leave
je
mov
jg
outsl
mov
adc
scas
testb
sub
call
and
jno
xlat
sub
int
pusha
xor
sub
scas
test
add
push
mov
js
mov
rcll
in
pop
sbb
mov
cmp
ss
jae
pusha
xchg
lds
pushf
movsl
jns
lock
leave
push
sub
ss
loope
scas
cmp
pop
jno
pop
adc
sbb
xor
xchg
mov
sbb
sub
push
push
xchg
neg
loopne
fyl2xp1
rorb
cmpb
imul
sub
sbb
adc
movsl
pushf
mov
mov
clc
cmc
or
pop
jo
inc
adc
xor
insl
jl
mov
mov
test
adc
adc
insb
push
dec
xor
cmp
mov
xchg
mov
mov
jo
inc
jns
or
sbb
sub
cmp
leave
loopne
lock
mov
mov
jo
inc
jns
or
sbb
sub
cmp
leave
loopne
jecxz
inc
fst
push
sub
inc
ss
xchg
popa
ljmp
aaa
mov
xchg
daa
cwtl
mov
adc
jmp
das
mov
shlb
xor
add
jecxz
and
jmp
adc
xor
dec
jl
mov
cld
test
sbb
fs
xor
insl
shrb
pop
sbb
sbb
cwtl
orb
jb
cmp
jo
xchg
sbb
cmpsl
adc
insb
or
push
outsl
pop
fwait
or
aad
lret
iret
mov
add
arpl
sahf
pushf
mov
mov
inc
aaa
pop
sub
pop
mov
js
xor
negl
jns
ror
xor
cmc
fsub
in
add
add
add
aaa
and
daa
push
xor
stos
push
push
adc
xor
fsubr
xchg
popa
push
push
outsb
dec
hlt
test
fs
mov
sbb
push
mov
cmp
rclb
cmp
iret
test
stos
jecxz
fidivs
adc
mov
cwtl
fs
cmp
lcall
jecxz
cwtl
cmp
or
add
xchg
cltd
xor
je
in
gs
dec
test
popf
mov
lods
sub
les
mov
mov
clc
in
mov
add
fimuls
insl
push
jmp
into
int
push
outsb
nop
xchg
ja
add
in
mov
mov
fstps
sbb
or
loop
repz
loope
into
or
inc
mov
or
jnp
lds
push
jns
sbb
icebp
xrelease
mov
or
xor
pop
mov
faddl
add
mov
pusha
mov
mov
cld
lret
xchg
mov
rcll
ljmp
loope
stos
pop
pop
in
mov
dec
fidivs
xchg
repz
and
sub
and
mov
cmpsb
push
mov
jb
iret
test
jno
jno
cli
push
jo
add
or
fiaddl
jno
stc
daa
int
call
sbb
cmpsl
xchg
cli
jno
movsl
pop
imul
stos
xchg
je
mov
loop
inc
jb
or
xor
imul
fdivrs
ds
mov
out
dec
xor
into
leave
and
loope
dec
mov
imul
mov
out
pop
scas
adc
sbb
nop
mov
pop
out
dec
jnp
add
test
outsb
leave
mov
jne
cmpsb
and
adc
cmp
mov
mov
in
sub
sub
mov
cltd
es
mov
push
mov
pop
pop
mov
ret
pusha
cli
bound
jo
cmpsl
rcrb
loop
ss
popf
dec
cmpsl
jno
fadd
dec
inc
mov
mov
and
outsl
lock
or
shrb
xor
jns
andb
test
adc
loope
cmp
sbb
sti
bound
mov
lcall
push
mov
js
jge
test
jbe
fsubrs
bound
sbb
jmp
stc
mov
sbb
xlat
inc
adc
push
aam
fidivs
fidivl
cli
dec
jl
xchg
mov
movsl
outsl
scas
xor
push
fbld
gs
jo
lret
cld
xchg
lcall
loop
jnp
inc
fiaddl
fld
adc
test
scas
mov
xchg
hlt
and
lods
mov
push
adc
dec
and
imul
jb
call
dec
mov
movsb
aam
cmp
add
push
push
jae
pop
and
std
movsl
jp
mov
mov
dec
addr16
mov
fwait
clc
pop
ret
lds
sub
jo
mov
lods
jp
adc
sbb
pop
test
fs
fisubs
movsb
int3
icebp
xchg
fidivrs
mov
sbb
fmul
pop
push
shll
xchg
lock
adc
fistpl
mov
hlt
xor
mov
addr16
xor
aas
jmp
cld
lock
adc
dec
dec
jno
jge
sti
pop
loope
adc
mov
jp
test
aam
andl
dec
loope
test
je
aas
aas
pop
sub
push
das
popf
ret
test
test
cmp
pop
cmc
fimuls
dec
or
jbe
mov
pop
pop
jns
int
test
and
movzwl
ljmp
dec
adcb
lods
xchg
cmp
lret
cwtl
mov
mov
lods
stc
mov
xlat
dec
adc
jno
push
cmp
pop
push
jb
lds
out
jnp
mov
cmpsb
call
push
stos
popf
pushf
sub
add
into
mov
fcmovne
lods
xchg
imul
jmp
sbb
pop
sbb
cmpl
sbb
sbb
test
push
fs
adc
ss
mov
movsl
jmp
pop
mov
mov
jno
adc
sub
rcrb
pop
cs
cwtl
gs
jno
js
dec
addr16
repnz
cmpsb
ljmp
pop
mov
jecxz
fs
xchg
out
dec
fwait
adc
or
test
f2xm1
sbb
inc
icebp
mov
jmp
addr16
pop
ret
adcl
dec
out
fbld
lods
arpl
lds
fmuls
cmp
and
pushf
sbb
enter
fstpt
cmp
aam
dec
fidivl
mov
cmc
dec
in
es
push
out
leave
adc
sbb
lret
sbb
cmp
sti
pop
hlt
in
shrb
lret
mov
push
loopne
aam
popf
add
lea
pop
scas
push
cvtpi2ps
repz
mov
jne
sahf
sbb
out
jp
cmp
leave
and
sub
cvtps2pi
dec
shll
sub
cmp
xchg
jmp
rorl
add
adc
test
push
cmp
dec
dec
jecxz
xchg
xchg
mov
push
mov
push
out
bound
push
jnp
jno
cltd
pop
in
mov
mov
adc
cmpl
mov
and
aas
fcomip
push
cmp
dec
cmp
in
in
jns
ss
fsubl
jo
xchg
lds
mov
mov
mov
fnstcw
adc
add
push
mov
shll
mov
mov
loope
push
xorl
aad
mov
loop
test
push
sbb
imul
or
lods
add
sub
xor
sbb
arpl
xchg
mov
cmp
je
push
in
push
insl
lahf
jo
push
push
pop
lret
jnp
pop
and
add
sub
mov
or
mov
jge
fldcw
add
xchg
mov
xchg
ret
pop
pop
icebp
int3
mov
or
daa
inc
xor
push
mov
loope
xorb
fstl
filds
add
in
imul
ret
mov
mov
ds
hlt
cs
lock
dec
test
popa
xor
ret
add
jbe
pop
fwait
maskmovq
divl
cld
jns
inc
imulb
rorl
cmp
inc
mov
mov
mov
in
add
rcll
aam
or
sbb
ret
pop
cmp
popf
push
addr16
cli
or
mov
out
pop
jecxz
pop
add
push
js
xor
jge
dec
cmp
sti
sbb
mov
add
cmp
adc
sarl
xor
movsb
mov
aaa
and
frstor
add
sub
enter
cmpsb
mov
mov
ds
cmp
mov
es
push
ljmp
je
push
push
icebp
mov
pop
jle
dec
sub
cmc
mov
jmp
out
xchg
dec
pop
inc
pop
test
scas
out
pop
sbb
fistl
lods
inc
mov
or
fnsave
inc
mov
aad
sbb
fwait
jne
xchg
xchg
mulb
leave
xor
xor
and
xchg
adc
jle
and
hlt
out
popf
xor
cmp
ror
aaa
fldt
popa
push
jnp
imul
mov
mov
lods
in
inc
sbb
sub
out
mov
aam
jle
pop
rcrb
and
bound
repz
leave
inc
repz
pushf
cmp
lds
mov
std
imul
cli
sbb
or
cltd
imul
push
cmpsl
clc
mov
mov
andl
inc
loop
movsb
mov
or
cmp
xor
ljmp
or
js
lods
or
mov
arpl
dec
lods
sbb
es
daa
shlb
xor
jp
dec
rcll
notb
ds
or
imul
scas
dec
adc
or
mov
or
mov
add
pop
mov
fimuls
decl
pop
lret
test
das
mov
add
sbb
adc
push
out
pop
dec
dec
mov
jg
xchg
cwtl
dec
aas
pop
inc
mov
dec
mov
inc
jnp
and
or
sahf
shrl
data16
stc
into
inc
mov
mov
adcl
pop
sub
mov
xor
xor
sti
imul
sbb
iret
xor
push
les
xchg
test
fsubl
clc
push
cmp
popf
ljmp
movsl
ds
cmp
cmp
sub
scas
dec
iret
ds
dec
add
addr16
xor
mov
lods
sub
aam
shll
nop
mov
mov
pushf
ljmp
push
cmpb
inc
and
adc
adc
or
mov
sar
mov
imul
je
push
jb
pop
add
cmp
inc
cmpb
ror
inc
rcrb
sub
repz
mov
xchg
mov
push
popf
in
mov
in
push
adc
iret
jle
dec
inc
jmp
rorl
imul
add
push
add
mov
cmp
mov
or
jns
xchg
push
and
and
pushf
sbb
dec
xchg
inc
in
popa
and
test
cmp
pop
push
xchg
cmp
jle
call
or
inc
out
call
loopne
call
aad
cmp
dec
mov
rcll
sub
nop
inc
or
dec
xorl
or
xchg
sub
mov
stos
sbb
daa
dec
jg
jo
jb
mov
dec
leave
sub
dec
cltd
dec
iret
insl
ljmp
sbb
xlat
mov
cmp
push
jns
dec
mov
mov
jecxz
or
xor
xor
xchg
ret
mov
leave
pop
fmull
jge
andb
aaa
cmpsb
rorl
or
sbb
test
sarb
in
inc
mov
imulb
jb
jp
insb
pop
inc
adc
xchg
repnz
hlt
push
inc
inc
sub
inc
sbb
leave
xchg
push
dec
cld
aad
mov
pop
lea
scas
push
mov
sbb
in
loop
xchg
in
cli
sbb
push
lret
push
movsl
lcall
dec
adc
adc
adc
and
jb
adc
inc
jge
andb
push
insl
js
fidivl
xor
rcll
repnz
lea
jnp
hlt
out
pop
sbb
or
inc
cmp
loop
gs
or
lds
sub
je
stc
je
mov
mov
xlat
sbb
cmp
insb
fnsave
aas
push
xchg
sbb
cli
mov
sub
out
pushl
xchg
stos
mov
sahf
inc
cmpsb
gs
mov
push
into
andl
or
insb
cs
sarb
xchg
pop
fimull
mov
lock
std
call
test
or
movsb
loopne
cmp
mov
xlat
iret
xor
lret
jno
mov
in
fs
popa
popf
lea
fsubs
pop
push
mov
add
mov
lock
inc
ret
inc
add
jbe
jae
push
push
xor
in
or
push
pop
pusha
inc
leave
xor
or
outsl
lret
je
ret
jp
fisubl
xchg
jp
out
lret
mov
sub
mov
push
cld
pop
outsl
push
loop
and
cwtl
call
cld
int
mov
add
sbb
jl
and
fsub
jns
pop
and
mov
push
mov
lea
xor
push
scas
pop
nop
jg
sub
mov
sbb
mov
inc
fists
and
out
push
icebp
jns
mov
sbb
mov
in
add
mov
push
sbb
inc
and
jl
jmp
stc
push
push
es
mov
inc
test
es
and
push
hlt
ja
fisttps
sbb
sub
negl
outsb
out
int
test
imul
xor
dec
xor
mov
fadds
cmp
in
sub
imull
jmp
insb
lods
jp
ret
and
bound
cmpsl
into
es
data16
mov
push
lea
dec
add
dec
add
cmp
add
cmc
dec
inc
movb
testb
and
and
inc
pop
adc
lret
dec
sbb
and
mov
nop
dec
jne
fcmovnbe
add
push
sub
or
mov
jge
push
fucom
dec
nop
mov
popa
int
mov
int3
mov
pusha
test
nop
push
nop
roll
hlt
sbb
and
push
aam
lret
leave
inc
or
je
mov
std
enter
pop
xlat
mov
push
mov
adc
movsl
mov
call
inc
add
mov
sbbl
pop
cwtl
xchg
push
outsb
and
push
pushf
xchg
mov
out
cli
push
push
or
jbe
repz
sti
je
mov
pop
mov
fistl
repz
jle
adc
pop
mov
cltd
lret
sbb
mov
mov
sbb
adcb
fs
test
adc
xor
add
mov
dec
mov
adc
pushf
pop
stos
les
call
dec
inc
std
sub
dec
xor
clc
or
sbb
cs
fcmove
push
in
push
adc
testb
femms
cs
aas
xchg
test
mov
js
adc
cmpsl
mov
movsb
sub
test
je
orb
and
je
dec
ret
es
repz
mov
pop
or
test
cmpsb
movsb
sub
xor
getsec
lods
inc
inc
mov
repnz
das
into
push
jg
push
testl
mov
mov
mov
addl
mulb
xchg
test
test
sbb
mov
scas
cmp
es
xlat
push
xcrypt-ctr
cmpsl
pop
and
call
shl
pop
and
xor
sub
fsubr
int3
cmp
add
dec
or
loope
pop
loopne
pop
adc
cmp
jp
push
bound
lods
push
pop
daa
ret
rolb
pop
add
inc
repz
cmpsb
setae
adc
fnsave
outsb
mov
gs
stc
mov
pop
aad
lea
movq
movsl
pushf
pop
cmc
mov
lea
ds
dec
cltd
shlb
es
adc
aad
out
add
jge
call
mov
sbb
push
repz
mov
and
movsb
xchg
pop
sarb
fadds
dec
das
enter
adc
inc
bound
or
pop
in
lods
jmp
scas
or
gs
push
ja
and
mov
cwtl
rcrb
push
imul
push
in
shll
sarl
fldcw
out
cmc
scas
lret
push
pop
ss
int3
sbb
fs
push
aas
jne
js
xor
xlat
sbb
push
push
push
out
repz
jl
mov
outsl
xchg
dec
std
or
xlat
xor
mov
in
sub
xchg
pop
out
sbb
sbb
dec
xor
test
lcall
and
xchg
aas
imul
jp
lcall
pop
mov
cmp
stos
call
rcrl
les
negl
jmp
int3
cmp
es
push
fiadds
test
jp
fsubr
dec
imul
mov
je
jmp
int
mov
addb
test
sub
mov
ret
push
test
xchg
mov
inc
in
push
jp
stos
sub
or
adcl
mov
add
mov
sub
and
daa
cwtl
adc
mov
fmul
cmpsl
adc
js
sbb
mov
inc
mov
and
gs
lret
aam
or
hlt
jmp
adc
es
rcrl
xchg
mov
adc
jo
lds
les
jbe
iret
adc
jb
out
pop
shrb
outsl
cmc
xor
jae
fnop
adcl
out
jmp
loopne
out
test
add
fldcw
in
dec
push
call
mov
subb
cltd
pop
sbb
aaa
sbb
jmp
xchg
fsubrs
add
sbb
fnsave
pop
inc
jns
or
sbb
xor
test
lea
nop
mov
lea
adc
sbb
or
packuswb
or
add
mov
adc
in
loopne
movsb
sbb
jb
into
cmp
mov
xor
mov
popa
imul
cwtl
ja
jmp
movsl
test
mov
scas
mov
imul
repnz
mov
orl
rol
push
repnz
adcl
iret
push
inc
jge
push
addr16
xchg
in
repz
popf
sub
daa
stos
mov
test
push
insb
cld
and
call
stos
std
adc
push
and
cmp
dec
sub
icebp
imul
aas
add
push
add
daa
jnp
mov
adc
imul
fists
imul
dec
sbb
rclb
syscall
dec
pushl
xor
adc
test
jecxz
pushf
inc
push
cmpsl
es
push
out
mov
xchg
nop
mov
mov
int3
je
or
mov
out
ss
add
shrl
and
sbb
repz
inc
negl
dec
mov
jns
pop
sub
ja
dec
and
or
or
lret
lahf
mov
shrl
lds
jp
push
outsl
inc
mov
repz
hlt
loopne
jmp
mov
ljmp
popf
mov
mov
sub
neg
icebp
and
movsb
xor
call
test
test
mov
push
xchg
xor
pop
dec
push
jae
sti
outsb
xor
ss
inc
les
jecxz
frstor
xchg
mov
jecxz
mov
mov
je
rcr
pop
mov
mov
push
dec
xchg
dec
in
popa
or
loopne
test
int3
inc
mov
pop
ja
dec
mov
repz
rorl
inc
jno
leave
xor
repz
xchg
cwtl
movsl
cwtl
das
testb
js
dec
pusha
push
out
int
push
lahf
lea
arpl
mov
jne
xchg
sbb
lock
mov
jb
adc
aam
mov
out
fs
clc
mov
and
pop
inc
pop
aam
ret
inc
pop
push
leave
scas
dec
nop
push
xlat
jo
in
je
icebp
push
out
ss
xlat
stc
mov
push
fldenv
in
js
out
dec
add
lods
ljmp
and
push
out
test
push
sub
adcb
jb
pop
je
jnp
jbe
xlat
loopne
cmp
arpl
lret
sbb
inc
jno
xor
aad
mov
add
adc
sbb
mov
and
les
mov
cmp
shlb
inc
in
pop
push
jb
mov
test
mov
lcall
inc
dec
ds
in
sub
push
clc
int
sbb
xchg
mov
ljmp
jmp
ja
dec
pop
mov
les
push
pop
pop
dec
into
enter
jno
jbe
ja
or
sub
push
pop
adc
and
jp
dec
push
push
inc
popf
mov
or
inc
scas
lods
imul
testb
neg
dec
test
fbld
not
pop
cwtl
scas
sub
cli
lods
add
je
push
fstps
pop
leave
lret
dec
mov
scas
push
ja
dec
or
icebp
ljmp
lret
push
jmp
stc
mov
xchg
mov
fs
cltd
pushf
fsubs
pop
cwtl
pop
shrb
or
mov
xor
rorl
sbb
les
or
nop
out
sbb
cmc
add
push
mov
xchg
or
in
jno
push
fidivl
xor
mov
dec
sub
ret
fdivrp
jno
aad
shrb
insl
sti
fsts
mov
xchg
divb
lcall
inc
jo
out
sbb
push
inc
lcall
lock
push
add
xor
popa
or
pop
or
and
lahf
add
xor
pop
ljmp
dec
shrl
mov
gs
jmp
lahf
lahf
sbb
mov
jmp
sbb
cmpsb
push
andb
aaa
shl
sub
mov
pushf
in
xlat
and
pop
pop
xchg
adc
jge
push
pop
inc
push
test
es
sub
mov
aad
fst
int3
stc
lret
push
roll
and
repz
push
arpl
ficomps
imul
mov
push
mov
cs
mov
les
ljmp
xchg
pusha
cmpsl
int3
in
jge
jno
scas
or
push
popa
daa
fcoml
leave
fsubrl
gs
orb
xor
mov
mov
fnstcw
xor
popf
xchg
mov
inc
push
test
xlat
loopne
add
cld
add
xchg
out
jb
pop
cwtl
shll
adc
shl
in
adc
stos
fildl
in
cld
fucomip
test
jae,pt
fcompl
test
arpl
sub
dec
insl
jg
add
xlat
push
xor
mov
or
push
fwait
aad
mov
das
fwait
je
fisubs
call
in
push
fldcw
and
movsb
int
lcall
mov
xchg
popa
outsl
fs
test
call
mov
stos
test
fistpll
mov
or
ds
or
mov
mov
sbbl
xor
mov
mov
xchg
mov
outsl
cmp
inc
or
jmp
adc
les
sbbb
pop
sub
popa
sub
stc
jo
jns
jno
cmc
sbb
rep
outsl
inc
sahf
int3
pop
xchg
leave
add
ud1
adc
enter
loopne
pop
hlt
pop
inc
mov
ljmp
rorb
cmpb
imul
xor
add
adc
loopne
lock
mov
mov
jo
inc
jns
or
sbb
sub
cmp
leave
loopne
lock
mov
mov
jo
inc
jns
or
sbb
sub
adc
in
hlt
jmp
mov
mov
fcmovb
inc
jns
jle
xchg
dec
jg
outsl
int3
int3
int3
int3
int3
push
mov
push
push
lea
push
mov
push
call
cmpl
je
cmpl
je
call
movzwl
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
pop
mov
or
mov
leave
ret
jns
xor
add
adc
pop
add
arpl
cmp
out
mov
xorl
pop
ret
xor
xor
xor
adc
arpl
push
shrl
jne
gs
repnz
cmp
lds
pop
or
jp
push
pop
pop
inc
mov
out
sub
push
int3
inc
mov
and
dec
cmpb
mov
stos
jge
push
dec
decl
jg
xchg
jmp
fdivrl
pop
mov
pop
movsb
xchg
mov
cmc
lcall
sbb
movsb
das
xor
test
aam
rorb
lret
sub
adc
mov
clc
insb
call
imul
and
jecxz
cwtl
pop
inc
xchg
in
stos
dec
push
pop
xchg
stos
fistl
data16
cli
sbb
jbe
ror
pop
cmpsb
addr16
xor
inc
movsl
stos
push
dec
push
xchg
mov
gs
inc
repnz
and
fcmovb
adc
sahf
sar
push
mov
push
dec
sub
and
cli
and
xor
jae
imul
fwait
mov
ret
xor
push
lds
ja
pop
loope
ljmp
mov
icebp
add
or
jp
jno
je
inc
and
adc
pop
cli
sbb
leave
mov
adc
add
push
rorl
addl
movsw
adc
inc
mov
movsl
mov
jne
gs
repz
and
xor
add
adc
arpl
push
movsl
mov
jne
gs
repz
and
lock
jnp
dec
or
jae
fsubp
cmpsb
xor
btc
or
or
mov
mov
xchg
lahf
loopne
and
mov
fistpl
xor
sub
jno
mov
and
dec
sbb
inc
inc
rorl
push
clc
inc
mov
mov
test
inc
and
imul
push
mov
mov
mov
ja
test
xor
cmp
sbb
aaa
push
sub
xor
cmp
je
xchg
xor
sarb
xlat
jno
js
or
jnp
and
cmpsb
push
dec
xor
adc
jmp
into
or
jae
xor
inc
and
outsb
imul
or
inc
inc
repz
hlt
std
or
mov
les
addr16
aad
fnstenv
sbb
in
out
mov
dec
stos
mov
sub
jmp
or
mov
inc
popa
rolb
iret
push
dec
inc
adc
sahf
and
sub
into
imul
lods
mov
xchg
xor
cmp
adc
stos
movsb
in
out
cld
mov
lods
cld
mov
push
adc
pop
and
push
jl
dec
mov
das
inc
loop
ss
inc
jnp
idiv
fwait
stos
add
imul
add
int
in
sbb
push
cld
mov
insl
dec
mov
xchg
lds
sbb
les
push
push
fwait
imul
and
xchg
inc
jae
mov
fsubrs
pop
add
repz
pushf
pusha
sbb
or
out
pop
or
icebp
pop
sbb
popf
lcall
jecxz
dec
rcrb
mov
cld
mov
cs
paddd
and
cmp
iret
data16
cmpsb
sbbl
leave
cmp
inc
dec
push
push
lcall
jmp
adc
mov
sub
and
mov
cld
loopne
leave
sub
lcall
pushf
or
in
dec
imulb
insb
js
cmpsb
push
cli
cmp
mov
and
jp
mov
mov
cmp
cltd
imul
sti
neg
dec
sbb
outsb
fdivl
jae
andb
push
inc
jae
ds
leave
cmp
push
ljmp
out
in
cs
cmp
inc
jb
push
mov
fists
fsubl
scas
push
adc
dec
or
adc
or
ror
test
loopne
nop
jmp
push
xor
lods
mov
das
jmp
loop
mov
push
test
fsubr
cmp
lcall
cmp
and
jle
aaa
cmp
in
dec
cwtl
and
inc
in
dec
adc
adc
sbb
inc
lods
sbb
mov
inc
lods
jmp
or
cmp
ss
mov
lods
mov
xchg
shll
fcomi
add
or
mov
sbb
cmp
jbe
sti
aam
dec
sub
repz
lret
mov
lds
mov
lods
aaa
mov
jmp
jbe
out
out
and
bsr
into
adc
push
mov
mov
gs
out
pop
test
outsb
cmp
pop
in
jge
adcb
test
pop
fstpt
push
sub
add
lret
out
jns
xor
sub
or
or
addr16
mov
xor
out
cwtl
lods
push
shll
jmp
inc
push
addr16
sub
mov
daa
dec
sti
in
out
pop
jnp
ret
xchg
xor
jecxz
iret
pop
push
dec
push
pop
xlat
lret
mov
xchg
jl
sub
cli
pushf
aas
inc
ja
out
sub
and
ljmp
jbe
sbb
cwtl
pop
hlt
cli
outsb
lahf
insl
dec
mov
arpl
test
or
adc
rcll
fs
ret
adc
out
xor
mov
and
cmc
mov
nop
cmp
mov
aam
out
popl
pop
ret
nop
mov
xchg
repz
movsb
inc
je
xchg
add
iret
push
or
push
dec
xor
mov
lcallw
push
mov
mov
pop
es
into
fwait
and
dec
outsb
lock
dec
lcall
xchg
jl
mov
inc
js
mov
xor
test
mov
cmpsl
lods
pushf
mov
sbb
mov
and
and
test
jl
and
lods
or
adc
fmull
jp
movsl
push
stos
ja
movsl
jno
cmc
sub
inc
push
inc
shrl
mov
pusha
test
xor
daa
popa
test
jp
xchg
cmpb
mov
decb
test
mov
jo
lds
pop
mov
sub
adc
dec
mulb
clc
loopne
push
aad
inc
andb
popa
and
mov
push
adc
jg
sahf
scas
outsl
mov
sub
data16
rcl
test
pop
push
fdivrs
lock
repz
xor
pop
lock
inc
pop
inc
and
xor
sub
sbbl
test
sub
cmp
lcall
pusha
sbb
aaa
jne
es
test
mov
cmp
jge
push
adc
mov
cmpsb
mov
shr
repz
popf
loope
inc
lret
and
xor
lret
and
sahf
out
std
push
jecxz
or
mov
cltd
mov
fucom
scas
xchg
dec
shl
mov
or
nop
add
xlat
and
les
cmc
movnti
fisubrl
repnz
test
push
add
sarb
jge
cmpsb
or
daa
push
hlt
call
inc
push
sbbl
shr
and
cmpsl
dec
test
lret
cmp
or
arpl
es
movsb
scas
ret
in
inc
ja
cmp
sub
push
daa
jge
add
sub
or
push
mov
inc
mov
pop
mov
in
pusha
and
mov
push
ja
and
popf
nop
push
or
dec
negl
xchg
xor
sti
lea
jns
pop
fidivs
inc
xlat
jecxz
cmp
sbb
push
lea
outsl
push
loop
cmp
or
jmp
out
in
lcall
sbb
imul
sub
repnz
pusha
adc
push
out
popf
movsb
rcll
pop
mov
jl
orl
mov
fsubrs
fwait
mov
int
inc
jno
push
inc
std
out
xlat
sub
cmp
int
cmc
aad
push
xchg
icebp
jle
fisubrs
ret
adc
in
mov
jb
dec
int
loope
xchg
mul
pop
inc
mov
mov
sub
aaa
and
aad
pop
stos
out
movsb
lds
in
data16
mov
xchg
jae
mov
mov
cmpsl
fdivrs
xor
lock
imulb
mov
cmp
xchg
mov
sbb
lahf
adc
or
mov
dec
mov
lret
repnz
mov
inc
aas
scas
push
pop
xlat
gs
jmp
mov
loope
das
mov
lea
negb
popa
addr16
xchg
dec
sub
jbe
clc
popf
cmp
imul
sti
xchg
mov
jns
cmpl
fs
mov
lds
jp
xchg
nop
aad
in
adc
jb
push
and
pop
or
popf
std
iret
xlat
push
lret
mov
mov
push
hlt
fistl
les
cmpb
mov
stc
xchg
and
insl
xorl
mov
mov
add
cmpsb
cwtl
sbb
out
test
outsb
xchg
push
push
sbb
rolb
movsb
insb
or
mov
sahf
jecxz
push
shrl
pushf
cs
fiadds
mov
repz
add
push
push
mov
push
out
xor
mov
lds
inc
mov
lahf
jno
out
lds
bound
js
push
dec
mov
mov
nop
pmovmskb
xchg
shrl
mov
loope
sub
aaa
std
sbb
pop
shlb
mov
jne
insb
xchg
add
sarb
pop
aas
orb
dec
push
lret
pop
es
gs
lret
add
push
xor
in
loopne
pusha
xchg
xor
rcrb
insb
stos
push
int
xchg
sub
es
js
sbb
rorl
jp
push
mov
movsb
arpl
pop
adc
push
leave
sbb
xchg
mov
sbb
imul
pop
pusha
fucomi
cmpsl
push
outsl
sub
scas
test
imul
mov
pop
push
nop
mov
xor
lds
mov
loop
or
popa
ljmp
lods
ds
sub
xchg
mov
ds
inc
inc
and
mov
inc
rcll
sbb
lret
negl
js
dec
scas
call
adc
cld
aaa
push
cs
mov
or
xchg
pop
insb
fmul
fisttpl
fcmovnb
xadd
andb
push
or
push
push
fs
in
cmc
pop
clc
mov
inc
int3
pop
lods
cmpsb
testb
xchg
dec
mov
dec
jo
shlb
test
sub
dec
xor
and
mov
push
movsb
jmp
int
mov
xor
cld
fbstp
sub
dec
imul
test
xor
cmp
mov
adc
out
test
push
out
xor
bound
mov
inc
ja
sub
test
cmp
fmull
xor
mov
jmp
cli
shl
popf
sub
sbb
popf
pop
add
data16
sbb
test
cmp
xor
stc
sbb
push
cmpsb
push
outsl
fldenv
push
scas
enter
test
cmp
std
add
or
ljmp
jns
movsb
out
mov
pop
xor
fidivrl
mov
sub
test
ds
jl
in
sbb
mov
repz
enter
test
idivl
ljmp
aad
loope
fimuls
inc
mov
xchg
dec
mov
shll
cld
shlb
loop
scas
or
inc
into
rep
and
hlt
insb
push
mov
dec
pop
mov
lahf
sbb
imul
rcrb
sti
adc
and
scas
mov
jb
aad
aas
pushf
jmp
jo
push
inc
addr16
lret
fwait
popa
arpl
sbb
scas
xor
lock
mov
mov
std
stc
mov
mov
mov
sbb
pop
fwait
mov
xor
adc
jae
scas
mov
xlat
mov
pop
lret
test
cmc
loopne
dec
lahf
pop
popa
push
and
adc
lahf
xor
and
and
lcall
jg
sbbl
into
push
fst
insb
or
push
sbb
push
dec
inc
pop
push
fsubs
adc
sarl
mov
testb
into
fcmovb
or
outsb
jnp
loop
or
pop
jmp
cmp
and
jl
lret
pop
adcl
inc
movsl
cmc
mov
insl
fisubs
cltd
dec
int3
aaa
dec
fcoml
addr16
lret
ret
test
pop
dec
cmpsl
lret
aam
xor
jo
mov
sbb
shll
lea
push
jg
push
lods
std
cmp
adc
mov
mov
cmp
xlat
cltd
cmc
mov
jbe
test
xchg
scas
xor
in
int
or
cmc
xor
mov
fists
inc
das
popa
insl
xor
pavgw
test
pop
testl
jb
stos
xor
dec
in
hlt
dec
adc
mov
lret
adc
jns
mov
imul
dec
shrl
pop
dec
mov
aam
out
mov
fimull
int3
sub
dec
enter
cmp
cld
in
fldl2e
cmc
mov
add
push
push
out
ds
std
arpl
and
das
in
js
push
mov
js
sarl
jo
adc
sub
mov
sub
fidivs
and
ja
cmp
inc
xor
lahf
xchg
mov
sub
loop
ss
mov
push
popa
xchg
addr16
mov
rorb
sahf
shlb
in
mov
orl
or
ss
mov
ds
push
dec
pop
cmp
into
fwait
aad
add
and
popa
push
pop
xlat
shl
mov
push
xchg
fs
sbb
mov
gs
cmp
aaa
mov
jne
mov
or
stos
sub
jns
and
cmpl
mov
mov
push
or
cld
push
jae
push
test
sbb
mov
inc
daa
sub
or
notl
mov
in
loope
bound
xor
mulb
pop
jp
out
mov
sub
cmp
mov
andl
jno
and
addl
or
fldcw
aaa
inc
jg
jmp
mov
add
push
sub
cmc
enter
sub
fst
sub
mov
or
push
jmp
and
push
jo
pop
cmp
ja
les
or
push
add
push
dec
int3
jns
push
jae
mov
lret
shlb
gs
inc
dec
movsb
sbb
mov
les
insl
lods
idivb
rcrb
jecxz,pn
add
js
sub
pop
cmp
or
imul
xchg
jge
xlat
jne
testb
in
sti
push
cmp
movb
out
bound
sbb
movsl
jecxz
in
dec
mov
imul
add
mov
loopne
in
popa
aad
xchg
push
xchg
sarb
insb
out
and
gs
inc
mov
ss
jnp
stos
retw
outsl
push
add
and
pushf
mov
push
loopne
or
dec
mov
and
pop
mov
pop
cmp
dec
lods
imul
daa
sbb
popf
dec
sub
scas
in
xchg
adc
inc
faddp
pop
and
into
insl
and
jno
mov
scas
add
push
dec
cmp
dec
mov
pop
push
ret
jo
add
lret
cs
or
inc
nop
push
sarb
scas
add
orb
sbb
aaa
mov
mov
gs
dec
mov
xchg
mov
xor
or
pop
lret
aam
add
and
nop
dec
aaa
lods
fstl
pop
inc
insl
nop
and
pop
or
scas
orb
xor
xor
outsl
lahf
cmpsl
into
es
cmp
cs
dec
loope
xor
inc
push
hlt
je
xor
call
sbb
movsb
les
xor
pop
mov
test
push
inc
xchg
pop
pusha
xchg
test
out
cmp
je
or
cmp
int3
fsubrl
dec
out
push
ss
fld
dec
xlat
mov
mov
repnz
or
xchg
cmp
into
push
adc
push
rcrb
and
jb
ja
icebp
mov
dec
adc
sbb
or
add
mov
xchg
aad
adc
lea
xchg
or
add
jb
addr16
xchg
popf
pop
mov
mov
mov
je
jmp
insb
dec
cmpb
fcoms
mov
push
scas
in
mov
or
mov
mov
push
push
jmp
adc
xor
dec
push
pop
dec
pusha
leave
inc
scas
cli
enter
ss
int3
cmp
sbb
out
xchg
addr16
push
pop
addr16
ja
mov
jns
cltd
clc
add
adc
ret
jge
ss
rcrl
mov
add
into
jo
pushf
sbb
jmp
pop
mov
jl
leave
stos
das
jl
jg
lds
insb
ds
jae
pop
out
out
fildl
xchg
sti
les
lods
pusha
adc
mov
dec
rcll
sub
jmp
aam
lcall
mov
mov
in
lea
dec
movb
mov
stos
push
das
pushf
call
mov
repz
mov
stos
jg
mov
inc
repz
pop
sub
jb
ret
popf
and
test
dec
xor
or
pop
adc
add
jo
adc
jb
or
pop
sub
shufps
sti
pop
jge
scas
rcl
sbb
xor
cld
lret
sar
push
mov
andl
ret
pop
inc
inc
das
or
inc
sub
mov
test
stos
adc
repz
movsl
jg
pop
fistps
jb
xor
sbb
fs
xor
outsl
jp
and
sbb
push
leave
aam
rcr
int3
out
mov
dec
sbb
aad
bound
dec
add
movsb
pop
mov
in
rcrb
sbb
push
jmp
ret
xor
movsl
into
xor
sub
xchg
jge
adc
ret
jns
das
mov
js
fildll
push
adc
imul
dec
push
inc
adc
rol
dec
lock
ret
pop
sti
jl
leave
insl
in
jl
je
jo
xor
mov
jns
adc
jge
dec
mulps
ds
jnp
mov
je
pop
popa
push
test
mov
jns
xchg
repnz
jle
mov
sub
or
daa
rcrl
dec
cli
paddsb
push
lock
ljmp
adc
push
add
fistps
outsl
ljmp
inc
add
cmpsl
xchg
inc
aas
sbb
and
xor
in
fmul
int
sbb
pusha
es
push
ss
push
mov
mov
loop
outsl
decb
fisttps
xchg
cwtl
loopne
icebp
int3
shl
cmp
imul
pop
add
loopne
mov
dec
and
call
lock
mov
lds
pop
or
repnz
mov
jge
mov
xor
pop
push
scas
cmp
sbb
sbb
mov
cmp
rcrb
mov
rorl
sarb
call
imul
repz
lcall
push
push
mov
aam
pop
pop
sbb
test
xor
movsb
xor
mov
cld
sub
sbb
xor
inc
dec
pop
ret
loop
lock
push
sahf
jp
std
arpl
in
cld
mov
mov
sub
out
sbb
movsb
ljmp
lods
cmp
stos
pop
or
or
cmp
ds
lahf
sub
pop
mov
enter
and
or
adc
inc
cmp
mov
sahf
nop
shr
mov
xchg
scas
inc
sub
mov
mov
mov
imul
jne
icebp
test
scas
fistps
or
xor
sbb
dec
es
insl
pop
mov
lods
insb
push
clc
push
comiss
cld
orb
push
popf
cs
cmp
pop
xor
cld
mov
mov
mov
call
mov
cmp
or
imul
ljmp
mov
dec
jle
push
mov
in
mov
or
aad
icebp
cmp
mov
lahf
jecxz
lahf
je
push
mov
js
sahf
lea
in
cs
push
xchg
mov
cmp
jns
mov
ficoms
ljmp
arpl
loope
inc
je
cli
push
mov
pop
jbe
hlt
push
jecxz
push
int
mov
fsubr
xchg
outsb
pop
into
dec
sbb
ret
insb
fcmovne
sub
or
fisttpl
shrl
mov
add
or
pop
loop
lret
mov
jns
inc
rcr
int
mov
mov
mov
and
cmp
mov
rcrb
mov
jo
cs
lods
repz
sbb
xchg
cmp
sti
mov
repnz
add
xchg
insl
sahf
xor
movsl
pushl
into
out
push
incb
testl
shlb
inc
dec
push
or
cmc
mov
test
push
pop
js
testl
or
addr16
mov
test
push
pop
sti
cwtl
aam
xchg
sub
cmp
fnstcw
aad
arpl
jnp
push
mov
cld
push
mov
and
fwait
aas
mov
aad
cwtl
mov
sbb
xlat
adc
dec
das
cmp
pop
inc
loop
jns
or
jae
xchg
mov
daa
and
mov
leave
or
inc
add
dec
mov
and
pop
aas
pop
movsb
aad
outsb
shll
out
out
sbb
mov
fnstcw
xchg
out
dec
bound
jns
mov
fisubs
sbb
cmp
dec
xchg
mov
mov
sub
repz
add
pop
push
or
loope
loopne
popf
dec
es
add
mov
subl
cmp
xlat
cmp
mov
jno
inc
ds
sbb
dec
sub
xor
jne
adc
xchg
jb
dec
stos
sbb
mov
mov
add
outsl
add
stos
mov
dec
pop
outsb
out
dec
lcall
push
enter
lods
xchg
push
hlt
shll
repnz
stos
int3
cld
xchg
in
pushf
xor
repz
cli
pop
bound
mov
and
test
iret
iret
sbb
lcall
shl
sbb
fistps
sbb
xor
and
cld
or
xchg
xor
cmp
pop
push
add
stos
ficompl
jge
dec
out
ret
jo
jno
test
out
jp
push
std
cmp
lea
xor
bound
and
xchg
shlb
rcr
mov
std
jg
sahf
add
iret
hlt
rcrb
sbb
lret
mov
stc
test
push
repz
fimull
pop
xor
or
dec
pushf
jge
mov
sbb
stos
inc
adc
cmp
sbb
xchg
orb
outsb
inc
cwtl
pop
inc
pop
in
inc
test
stos
insb
add
add
xor
pop
shrl
and
inc
and
lds
outsl
and
pushf
sub
lcall
cmpsb
push
rcl
and
jnp
pop
std
cmp
cmp
xor
xchg
dec
sbb
mov
mov
push
cmpsb
out
repz
xlat
scas
push
jecxz
push
jmp
xchg
mov
clc
inc
lods
xchg
mov
mov
outsl
sbbl
sti
sub
loop
pop
fucomi
test
sub
loope
lea
movsl
jmp
orl
mov
rcrb
in
dec
mov
aad
inc
mov
or
pop
xorb
inc
mov
and
dec
aad
pop
pop
fisttps
icebp
fwait
clc
xchg
fadds
add
out
push
aaa
pushf
int
in
xchg
dec
inc
mov
hlt
mov
adcl
das
push
std
cld
cld
out
inc
in
jle
jp
mov
dec
sub
aaa
sub
xchg
jne
pop
fdivl
dec
lahf
dec
push
fs
mov
jns
scas
scas
ja
jno
xchg
cltd
adc
arpl
push
movsl
mov
jne
gs
repz
and
xor
add
adc
arpl
push
movsl
mov
jne
gs
repz
and
xor
arpl
push
movsl
mov
jne
gs
testl
xor
xchg
jae
ret
xor
dec
out
sub
adc
sub
int3
int3
int3
int3
int3
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
call
mov
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
push
call
xor
leave
ret
out
mov
movsl
adcb
mov
xor
adc
inc
push
push
inc
stos
mov
movsl
adcb
in
aad
lds
xor
bound
gs
push
push
inc
js
xor
repnz
mov
lds
or
fs
inc
daa
add
mov
rol
icebp
in
imul
shll
adc
xor
adc
aaa
mov
scas
mov
sbb
or
push
int
mov
inc
std
adc
jecxz
ret
push
fistpll
andb
push
subl
ljmp
adc
lds
stos
or
movsb
call
cmc
ret
cmp
xchg
aaa
push
popa
xor
jmp
cli
out
es
push
stos
lods
fs
sub
jge
push
js
cmc
jno
xchg
lcall
jmp
jb
adc
daa
xor
lock
ds
inc
push
sub
lret
add
adc
pop
inc
inc
inc
xchg
mov
movsl
adcb
in
aad
mov
add
inc
push
ss
fadd
jbe
sar
ret
mov
mov
inc
pop
jae
push
jnp
imul
sbb
xlat
adc
out
lds
xchg
lret
scas
mov
jae
addr16
jle
adc
pop
or
and
sub
in
shl
loope
icebp
cmpsl
cltd
repnz
aad
lds
xor
adc
inc
push
push
inc
mov
xchg
xchg
test
cmc
repnz
aad
lds
xor
adc
inc
push
push
inc
mov
addr16
scas
xor
andb
int3
xor
icebp
inc
scas
out
mov
sbb
ja
push
outsb
xchg
pushf
xchg
jmp
lods
cltd
loopne
enter
jns
frstor
cld
xchg
call
pop
mov
pop
out
cmp
inc
pop
aas
fwait
pop
sub
mov
in
jae
shl
or
lods
mov
xchg
cmp
sub
cmpsb
movsb
shld
stos
xor
xchg
lods
aad
mov
push
mov
jae,pt
inc
ja
sub
hlt
test
les
lods
loope
ss
insb
sti
pushf
into
mov
jmp
pmulhw
inc
mov
push
push
add
add
lods
pop
pushf
pop
lods
push
sbb
xchg
push
mov
push
sbb
enter
icebp
dec
push
cmp
xchg
repz
xor
xchg
shrl
pop
pop
push
cld
imul
aas
xor
sahf
xchg
das
pop
in
ffree
flds
inc
pusha
inc
adc
mov
mov
rcr
ss
orl
in
inc
lret
cltd
cwtl
loope
dec
data16
add
mov
adc
clc
jecxz
inc
mov
ror
popl
xchg
pushf
jo
inc
mov
movsl
movsb
and
test
xor
inc
dec
in
xchg
push
sub
adc
and
cs
xor
xor
loopne
xor
out
jbe
inc
cmpsb
cmp
sub
and
inc
or
stc
mov
stos
aas
xchg
sbb
push
aad
les
push
je
in
jb
mov
fsts
daa
rcr
pop
jg
xor
pand
popa
adc
leave
mov
rclb
addb
daa
mov
xlat
aam
imul
cmpsw
call
mov
pop
popf
push
sbb
mov
imul
and
cmp
mov
jg
inc
add
push
mov
fisubl
dec
sbb
dec
sub
and
inc
arpl
cmp
inc
mov
int3
jmp
cmp
fsubs
gs
sbb
bound
xor
adc
sbb
adc
daa
mov
mov
dec
inc
jecxz
mov
lret
add
cmp
add
icebp
push
mov
lds
insb
std
inc
sbbl
int3
pop
ja
rorl
in
imul
xchg
xchg
xchg
dec
sbb
ret
test
das
push
mov
mov
fisubrl
mov
and
mov
cmp
mov
icebp
mov
xor
ret
dec
es
pusha
push
adc
je
add
push
lods
mov
mov
icebp
movsl
pop
dec
and
data16
and
adc
push
or
fbld
loope
push
xor
cmc
int3
xchg
push
xor
cmc
lock
push
cli
imul
addr16
daa
sbb
cmp
xlat
lock
ljmp
out
cmp
clc
mov
jge
cmp
loope
jnp
ret
push
out
inc
jbe
inc
imul
movsb
xchg
aaa
or
inc
pop
int
fdivrl
shrl
cmp
aaa
xchg
mov
push
sti
cli
inc
xchg
fdivrl
push
mov
xorl
xlat
insl
imul
sub
iret
add
push
bswap
inc
push
fildl
mov
out
xchg
lock
jb
inc
clc
push
inc
add
inc
aad
test
aad
cmp
mov
lret
in
cwtl
xchg
sub
leave
std
pop
icebp
xor
pop
cmp
pop
idiv
loopne
dec
cs
cmc
mov
push
sahf
stos
mov
aad
pop
dec
push
add
xor
jg
stc
sub
dec
clc
dec
xchg
sub
imul
lds
cmpsl
ror
dec
aaa
jae
mov
cmp
or
dec
mov
push
mov
mov
jne
add
leave
push
lods
cmp
pop
xor
ret
std
adc
push
push
sbb
jecxz
push
xchg
mov
shrl
clc
jne
pop
fwait
cld
or
dec
insl
jb
mov
cmp
ficoms
inc
cltd
test
and
aad
insl
xor
jae
repnz
mov
mov
add
cmpsb
repnz
clc
lds
jae
pop
mov
sub
jno
out
stc
or
push
loopne
mov
pop
je
xchg
mov
sub
ficoms
jp
rcrl
sbb
or
jle
in
stos
daa
xor
pop
push
mov
xor
mov
cmc
sub
fistpl
mov
and
adcb
mov
insl
iret
insb
por
cmpsl
rcrl
xchg
hlt
push
push
ljmp
sub
add
fidivrs
mov
mov
mov
xor
cmp
sub
int3
fstpl
fsubp
scas
pop
pop
pop
cld
cmp
lea
mov
repnz
ja
push
push
fstpl
mov
jge
xchg
sbb
pop
push
sub
out
movsl
aaa
out
roll
mov
jle
and
pop
inc
test
xchg
pop
jns
jb
adc
push
xchg
or
push
loope
shl
jecxz
add
sbb
inc
push
in
aad
push
sbb
call
js
jg
fcmovb
mov
inc
xor
bound
jmp
pop
pop
mov
int3
or
mov
sarl
cs
lcall
aam
shlb
pusha
sub
pop
push
and
jl
lds
mov
or
lods
jae
insb
lods
inc
mov
jo
inc
pop
imul
mov
pop
int3
popa
push
mov
es
inc
lret
jne
sub
dec
mov
cmp
addr16
pop
sbb
xor
push
out
lahf
pop
sub
push
sti
movl
popa
and
aaa
sbb
xchg
cld
sbb
jae
pop
lret
sub
add
adc
ds
ret
dec
cltd
ret
fwait
pop
aaa
inc
rol
rcrb
push
ja
std
cmc
inc
push
movsb
pop
push
jg
imul
push
aam
pop
cmp
sbb
push
lret
pop
scas
cld
cltd
aam
xor
xlat
cli
pop
notb
fistpl
aaa
lods
pop
inc
sbb
call
loopne
outsb
out
jl
sbb
loope
jl
mov
jbe
jno
cmpl
sbb
pop
cmc
mov
out
in
insb
jnp
aas
fiadds
or
sahf
pop
jo
xchg
mov
lock
and
lret
lret
mov
mov
jecxz
dec
sbb
sti
loope
push
or
enter
push
push
outsl
mov
nop
add
pop
scas
cmpsb
adc
scas
nop
in
sti
gs
daa
adc
adc
adc
outsl
jne
lcall
in
stos
push
gs
and
stos
rcll
fstpl
pop
mov
adc
pop
adc
fisttpll
mov
ljmp
jge
andl
xor
mov
dec
cmp
in
sahf
pop
push
movsb
jnp
xlat
call
adc
mov
push
orl
xchg
cmp
xchg
jmp
pop
iret
push
ficomps
loop
adc
divb
in
das
repz
xchg
scas
push
inc
jge
aaa
es
dec
jge
lret
decl
jle
das
mov
movb
lock
jae
sub
and
ds
in
add
or
lret
push
cltd
pop
subb
sub
jo
push
shll
ss
paddw
xchg
movsb
enter
sbb
xchg
push
idivl
les
push
aad
cli
insb
and
inc
push
mov
jae
or
fs
fcoms
dec
xor
push
inc
sahf
fistpll
pop
cmc
jne
lret
out
iret
add
sub
xchg
sbb
jp
bnd
lcall
gs
cmpsl
push
movsb
lret
jbe
sbb
cltd
mov
inc
mov
or
sbbl
or
aam
fstl
movsl
stos
repz
clc
mov
cltd
mov
icebp
and
pop
das
aad
popf
adc
jo
cmp
mov
push
les
movsb
imul
add
mov
sub
cltd
lds
andl
mov
inc
cmp
in
repz
jge
xor
je
fiadds
push
push
mov
cld
mov
nop
mov
push
mov
mov
fs
std
sbb
mov
loopne
repnz
daa
or
jmp
adc
fists
cwtl
sar
jl
mov
xor
jg
lods
insb
test
out
mov
mov
push
mov
jge
pop
xchg
cmp
mov
jne
xlat
out
xchg
xor
mov
push
imul
sarb
idivl
out
mov
mov
cmc
adc
sbb
aam
in
faddl
mov
adc
jmp
and
inc
repz
pop
xlat
add
sti
pusha
mov
insb
xor
daa
push
sbbl
stos
rclb
scas
cmp
dec
pop
fcompl
ffreep
mov
adcb
mov
aaa
pushf
fdivrl
inc
mov
jbe
movsb
int3
cwtl
aam
adc
mov
jecxz
popf
leave
xor
xchg
mov
pop
jb
mov
push
push
cmp
mov
and
repz
xchg
pop
inc
add
ret
lock
dec
mov
in
out
and
test
inc
cmp
adc
xchg
fnstcw
loop
adc
out
mov
repz
xlat
inc
or
outsl
xchg
mov
fcompl
fcmovnbe
xchg
sbb
sbb
cmp
mov
daa
mov
push
js
mov
mov
in
je
pop
inc
mov
sub
jbe
data16
in
push
sub
xchg
sbb
mov
inc
jle
es
fbstp
repz
dec
addl
test
add
pop
je
pop
inc
pop
pusha
sub
into
or
lahf
scas
pop
sub
xchg
cmc
adc
xor
add
xchg
mov
mov
jae
and
or
in
ss
jns
dec
int
enter
fstpt
daa
cld
imulb
inc
cmp
xchg
add
ficoms
xchg
div
fidivrl
inc
cwtl
out
or
push
and
lds
push
call
loop
jge
mov
jecxz
cmp
lcall
insb
cwtl
sbb
inc
cmc
jl
fcmovnbe
shll
mov
mov
cld
xor
sub
cld
mov
ret
in
stos
jbe
or
sbb
inc
dec
mov
jmp
cmp
cmp
push
and
aas
test
mov
pop
out
inc
pusha
mov
icebp
ja
inc
push
inc
insb
or
lds
ja
aas
mov
sbb
and
mov
cmp
xchg
pop
pop
hlt
or
addr16
pop
adc
add
lea
mov
pop
adc
pusha
push
add
sub
rorb
iret
pop
push
inc
iret
and
aam
shrb
jmp
add
out
sbb
rcll
pop
xor
rcll
push
xchg
mov
lret
inc
mov
xchg
lret
push
push
sbb
pushf
add
cmp
jg
xchg
gs
xchg
fstl
adc
loopne
bound
idiv
leave
out
inc
fistl
push
add
jno
data16
sbb
pop
int3
jmp
stos
jp
inc
mov
jp
xlat
add
ss
push
cmp
lods
pushf
mov
mov
sub
lea
xchg
bnd
stc
sub
lea
adc
sbb
adc
jo
les
mov
and
adc
xor
add
lods
push
mov
data16
adc
jg
ss
scas
mov
pop
cltd
mov
xor
out
jno
mov
adc
in
es
scas
lods
mov
sbb
cmp
inc
cmp
and
add
inc
popa
loop
lahf
imul
loopne
es
sbb
sub
xor
ja
cmpb
roll
scas
cld
sub
push
sbb
mov
mov
jg
push
mov
shll
clc
push
arpl
nop
loope
jne
sub
ljmp
lds
fs
xchg
add
cmp
jl
movsb
push
cmp
mov
popa
jne
leave
add
pop
xchg
adc
mov
dec
xor
push
inc
ret
xor
test
mov
lods
addl
into
or
das
gs
jecxz
stos
cmp
push
xor
xchg
push
aaa
fs
cmp
and
in
ss
enter
xor
fildll
add
in
out
xor
and
fidivl
sbb
daa
pop
inc
pushf
out
lret
das
xor
jno
test
pop
adc
jb
mov
sub
jbe
std
jle
jle
loope
xor
pop
xchg
xchg
outsl
popa
xchg
xchg
movsl
xor
mov
lea
arpl
mov
cmc
cld
outsl
jns
or
dec
sbb
out
and
xchg
inc
xchg
lds
jg
lock
cmp
shr
push
ja
ret
cs
jo
cmpsb
test
aaa
dec
ret
and
mov
and
fidivrs
push
mov
push
push
imul
ja
test
lea
xchg
stos
hlt
mov
and
and
push
stc
incl
std
or
mov
cmpsb
xor
or
call
mov
jp
mov
leave
mov
jnp
and
sbb
push
insb
or
inc
xor
mov
push
or
testl
fnstcw
jmp
movsb
pop
outsl
movsl
push
xchg
add
mov
and
popa
loopne
jnp
adc
inc
inc
inc
out
clc
inc
addr16
addr16
xchg
dec
inc
sbb
cmp
js
ficompl
loop
std
adc
sbb
jp
mov
orb
push
inc
ret
icebp
xor
and
push
mov
jg
mov
mov
jmp
push
dec
pop
lahf
xchg
fcmovbe
dec
jl
rol
or
sti
pop
push
jmp
xchg
or
adc
push
add
xchg
and
insb
lods
push
sbb
lret
sub
or
xor
sub
jnp
xor
cmpsb
jecxz
jmp
adc
clc
add
cmpsb
test
fdivrs
loop
cltd
jl
outsb
jge
shlb
ljmp
mov
push
mov
or
adc
pusha
sarl
xor
xlat
xchg
adc
leave
mov
je
xchg
ja
and
pop
jge
ss
or
inc
fnstenv
pop
xchg
pop
sti
lock
mov
loop
cltd
mov
sub
mov
jecxz
insb
inc
mov
lds
pop
sbb
cmpsl
movsb
je
inc
testl
and
ds
lahf
fstl
cmp
or
jecxz
in
push
insb
shr
mov
xor
js
in
sub
sbb
xlat
in
icebp
sbb
xchg
test
ja
mov
sub
sub
hlt
mov
out
aam
push
dec
in
lahf
pop
incl
push
ror
stos
int
divl
mov
mov
sub
and
sub
test
xchg
jbe
das
decb
jo
test
ljmp
jp
inc
jmp
sub
sbb
in
lahf
in
dec
push
jo
sub
jae
insl
dec
pop
je
jle
hlt
lret
dec
leave
out
leave
and
jp
mov
imul
mov
mov
dec
inc
jmp
pop
repz
out
fxch
addr16
pop
lret
inc
mov
cmp
fs
lret
dec
enter
adc
sub
into
fs
xchg
loopne
int3
sub
popf
insl
addr16
cs
scas
pop
xchg
jbe
in
dec
in
fists
mov
ljmp
xchg
add
popl
inc
insl
data16
movsl
mov
mov
in
js
lcall
daa
adcb
sahf
into
fs
sbb
xor
cmpsl
imul
push
cmpsl
sub
lret
dec
subl
sbbb
rcrl
mov
sub
cmp
inc
dec
and
orl
pop
test
es
sbb
and
mov
mov
mov
imul
ret
pop
sub
sub
out
xor
mov
pop
aas
in
pushf
inc
adc
add
cmpb
int
jns
sbb
ds
jne
out
push
cmp
xchg
imull
lods
mov
fisubrl
repz
lcall
mov
enter
pop
inc
fisubl
ds
test
notl
stos
lods
aad
add
xchg
pushf
js
subb
pop
xor
add
movsb
scas
add
inc
ds
hlt
ljmp
cmc
adc
mov
ficoml
or
repnz
xor
push
enter
pop
out
bound
aas
fwait
xor
adc
cmpsl
loopne
shlb
and
and
stc
fstpl
xchg
stos
cmpsl
test
sub
mov
jmp
or
lock
sub
xor
pop
or
add
dec
fimull
dec
fwait
jne
pop
mov
das
push
fistl
cmp
or
pop
xchg
pop
xchg
push
mov
in
fwait
jle
call
sbb
mov
imul
jo
pop
lret
out
imul
xchg
cmp
jmp
std
push
outsl
repz
aaa
cli
jae
and
jmp
sahf
push
gs
daa
adc
scas
lods
jg
incb
jge
dec
sbb
jge
js
jb
outsl
xchg
cmp
cmp
jae
mov
out
addr16
roll
xchg
xor
aaa
into
outsb
rcll
aam
rcrl
mov
sub
xor
jg
mov
neg
in
push
xor
lret
pop
fisttpl
cmpl
jno
dec
test
int
mov
push
imul
push
addr16
cmpsl
lret
scas
andw
sub
aam
sub
push
dec
sbb
addr16
mov
push
imul
shrb
push
mov
cld
and
adc
mov
cmpsl
sub
shrl
call
ret
popf
pop
cmp
dec
jp
insl
cli
stos
pcmpgtb
sub
addl
xchg
lcall
sbb
dec
add
loop
push
sbb
dec
xchg
test
mov
nop
adc
cli
push
lret
inc
jo
mov
jecxz
je
out
in
pop
mov
cmp
sub
push
sub
icebp
cmp
enter
add
xchg
int
xchg
adc
jge
pushf
or
notl
dec
inc
mov
sahf
ss
lcall
mov
lahf
lock
mov
cmp
ja
imul
and
jg
jae
lcall
fstpl
in
inc
dec
sub
push
adc
push
add
fsubrs
sub
xor
xlat
out
xor
or
mov
lea
jne
pop
cwtl
lods
dec
adc
xchg
jmp
or
mov
mov
jecxz
test
jl
dec
and
flds
pushf
mov
jo
repz
mov
mov
mov
push
mov
out
jno
les
push
pusha
inc
pushf
movsl
loopne
push
loop
sub
push
inc
jbe
sbb
push
xchg
cmp
sub
adc
and
mov
sub
imul
and
mov
jns
xor
jns
cmpsb
enter
int
cmp
sub
push
sub
cmp
and
push
iret
test
je
jecxz
adc
aad
sub
sbb
pop
aam
jle
mov
sbb
pop
arpl
orl
in
push
pop
aad
cmpsl
fistps
pop
push
cmp
pusha
mov
test
das
dec
sub
add
or
mov
lea
aam
or
test
xchg
mov
jne
ret
push
fidivrl
pop
adc
xor
mov
pop
pusha
aas
lods
mov
mov
cmp
shrl
stos
pop
ljmp
dec
adc
sbb
notl
out
test
loopne
mov
mov
mov
call
xchg
dec
mov
jns
bound
test
lret
jmp
jo,pn
add
jg
push
push
sub
addps
jmp
xlat
ds
sub
sbb
setno
mov
cmp
call
xchg
jl
push
mov
das
mov
pop
jecxz
xor
inc
xor
sub
in
push
push
add
xchg
js
int
shll
adc
xor
mov
scas
xor
pushf
xchg
jb
push
gs
push
in
movsb
outsb
shl
iret
ds
dec
push
cmp
iret
dec
outsb
mov
sarl
add
xlat
cmp
or
les
or
cmpsb
xchg
mov
aaa
jge
fs
popf
cs
dec
adc
mov
mov
sub
ret
xor
add
pop
ljmp
in
loopne
jmp
pop
add
or
stos
fcmovnb
dec
sbb
insb
in
mov
dec
ja
mov
sub
scas
lahf
repz
adc
jle
or
int3
dec
xchg
lods
fwait
imul
xchg
mov
and
cmpsl
jns
sahf
inc
das
cli
mov
inc
cmp
sub
pushf
and
cmp
add
dec
push
fsubp
dec
inc
hlt
mov
inc
cmp
xchg
in
shl
adcb
jbe
lods
lret
mov
rclb
sbb
cmpb
in
mov
ret
or
pop
out
sbb
nop
add
pop
pop
dec
adcb
jmp
and
loope
idivl
xchg
pushf
sub
imul
push
stc
mov
ret
push
movsl
lock
push
inc
sbb
fwait
and
in
fwait
cmp
xchg
ljmp
jo
shrl
or
fnstsw
ljmp
adc
push
mov
xchg
jg
jo
stos
addl
jbe
adc
push
xor
sub
shll
les
int3
mov
je
sbb
aad
sti
sbb
rcrl
popf
push
pop
out
sub
frstor
leave
sub
jne
pop
enter
push
xor
ja
cmc
clc
sbb
mov
lods
or
ret
inc
je
aad
dec
mov
enter
into
push
add
cltd
or
jg
loop
jecxz
mov
cwtl
adc
and
aad
iret
pop
xchg
mov
ds
fwait
adc
sub
mov
fmuls
and
and
sbb
aas
ret
outsl
imul
je
push
and
sub
repnz
mov
push
sub
adc
mov
jle
mov
xor
mov
ds
or
fnstsw
addr16
int3
lcall
out
int
cmp
xchg
xchg
mov
ret
lds
xor
adc
inc
push
push
inc
mov
xchg
xchg
test
cmc
repnz
aad
lds
xor
adc
inc
push
push
inc
mov
xchg
xchg
test
cmc
mul
ret
lds
xor
push
add
inc
push
bound
mov
movsl
or
loop
ret
cmp
lret
test
adc
std
cli
lcall
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
bound
sub
pop
push
dec
and
aas
sub
in
ror
mov
pushf
orl
cmp
sub
sbb
and
cld
icebp
in
mov
xchg
mov
sbbl
cmp
or
fs
push
adc
test
ror
test
out
ret
lret
int
sub
and
lahf
cmp
cmpsb
ja
adc
fs
test
lea
scas
shrl
mov
sub
repz
add
pushf
pop
test
outsb
rcrl
inc
mov
or
and
std
icebp
cld
aam
shll
mov
hlt
push
dec
dec
lods
dec
mov
pop
mov
sbb
fcoml
and
and
int
test
xchg
lock
stos
jl
popa
mov
mov
lock
mov
in
mov
jns
popf
add
sub
insb
and
shrb
and
jmp
cmp
daa
dec
inc
sub
lds
sub
sbb
sahf
daa
cld
imul
lock
test
add
cltd
pop
inc
jne
adc
mov
mov
sar
ffreep
call
cmp
xor
xor
dec
outsb
push
jle
jne
aas
xchg
test
lods
call
nopl
jo
sub
sbb
or
cld
icebp
in
rcr
int3
mov
pushf
xchg
mov
jno
inc
pop
push
dec
and
sub
sbb
or
cld
icebp
in
rcr
int3
mov
pushf
xchg
mov
xlat
cmp
pop
and
push
add
cltd
iret
push
es
addr16
xchg
aam
mov
pop
inc
adc
fwait
add
fcomps
daa
sahf
jge
ss
mov
aas
adc
xor
in
imul
js
jbe
data16
dec
test
fdivrl
xor
dec
mov
sub
add
xor
xchg
pop
cmpsb
aas
jb
push
add
pusha
bound
adc
inc
repnz
jbe
ljmp
xorl
adc
sub
scas
es
mov
enter
ljmp
ret
loopne
mov
push
pushf
ds
out
and
inc
or
fistl
add
push
sahf
jg
sahf
pop
xlat
dec
dec
push
repnz
jg
out
dec
ds
sahf
sarl
inc
push
jmp
cmc
cmpsl
inc
incl
pusha
sub
aas
into
popa
int
daa
inc
xchg
mov
cs
enter
inc
push
mov
push
insl
ret
sbb
fbstp
pop
js
pop
repz
hlt
sbb
mov
adc
and
adc
mov
out
inc
push
aas
stos
push
push
mov
or
xchg
and
lds
sbb
lock
fwait
push
jns
subb
insb
add
inc
or
pop
or
outsb
loope
sub
xchg
stc
out
push
push
sub
repnz
mov
xchg
jp
int
push
les
and
cs
popf
fnstenv
stc
jge
mov
mov
mov
in
mov
cmp
push
dec
and
movsb
xchg
scas
xor
sbb
loopne
inc
jge
sub
adc
stc
push
push
jae
movlhps
insl
bound
inc
sbb
rorb
leave
push
neg
mov
add
je
inc
pop
in
nop
andb
jp
test
adc
xchg
sbbb
xor
aas
scas
int
loop
ds
and
push
add
jg
jnp
int
ret
cld
aas
add
movsl
adc
mulb
sbb
cmp
add
mov
jbe
pop
lahf
xor
std
inc
mov
push
repz
pop
and
ss
test
jno
inc
inc
negl
xchg
shlb
add
xor
andl
lret
loope
stos
loope
test
mov
in
add
icebp
add
push
mov
jb
mov
mov
dec
jno
loopne
mov
cmp
data16
cwtl
mov
push
mulb
imul
fucomip
jns
aad
sub
sub
jl
adc
insb
sbb
dec
push
cmpb
pop
mov
pushw
or
and
mov
xchg
jne
cmp
lret
adc
and
jb
int
or
push
cmpsl
dec
insb
jp
rcr
cmp
and
in
sbb
xchg
sti
dec
xor
and
gs
xor
sbb
cli
jo
insl
sti
xchg
mov
mov
gs
aam
cs
xor
in
push
fldl
dec
outsl
pop
pop
lahf
addr16
push
arpl
dec
inc
sbb
xchg
or
jg
jns
movsl
sub
into
iret
jb
adc
bound
js
scas
dec
pop
mov
lock
cmp
sarl
jns
fwait
push
faddp
or
pusha
adc
xor
jo
cmpl
pop
mov
cmp
dec
shll
adc
int3
xchg
sahf
xor
repz
aaa
jae
mov
cmp
jp
cmpsb
cmp
movb
popa
or
sub
aas
jnp
push
out
int
jo
inc
shll
icebp
pusha
cmp
jl
les
add
add
add
addr16
jmp
jno
std
jp
lret
enter
pop
pop
xor
addr16
out
rorl
sahf
mov
aas
dec
mov
in
sbb
fsin
or
adc
mov
or
int
pop
inc
push
add
and
stos
jmp
iret
das
add
pop
stos
in
fwait
mov
pusha
fnstsw
add
fcoml
sub
stos
out
gs
pop
push
and
dec
mov
or
das
and
adcb
push
dec
add
and
fs
lods
mov
test
cmpsb
dec
arpl
cltd
cmpsb
push
cltd
imul
ja
jmp
lahf
cli
add
pop
lods
dec
pushl
fucomp
mov
outsb
inc
add
repnz
cmp
adc
popf
xchg
cmp
dec
adc
dec
hlt
incl
adc
add
ds
int
outsl
out
icebp
out
jmp
inc
add
popf
sub
in
push
push
loopne
inc
movsb
mov
rorl
ja
icebp
inc
repnz
xor
push
fimull
stos
and
push
add
jp
inc
in
mov
lret
xor
mov
cld
pop
out
mov
mov
loopne
adc
les
movsl
jecxz
or
stos
arpl
loope
data16
test
jno
stc
jns
mov
negb
jb
subl
push
pop
add
inc
push
pop
adc
stos
je
pop
loopne
dec
or
mov
cmp
aam
insb
shll
aas
fdivrl
mov
dec
or
jnp
popa
inc
popa
add
mov
xor
cmp
mov
mov
aad
cmp
insb
ljmp
aas
adc
push
xchg
xchg
or
push
shll
out
add
popa
mov
jnp
dec
sti
dec
jp
sub
sti
jns
sub
fildl
repz
mov
aad
dec
int
ss
mov
adc
daa
outsb
mov
mov
outsl
mov
shrl
out
fnstenv
int3
lea
cmp
mov
insl
mov
data16
dec
loop
xchg
mov
movsl
jbe
mov
pop
sub
adc
and
cmc
data16
mov
adc
es
mov
and
in
dec
dec
pop
in
push
mov
ss
mov
adc
xor
push
mov
cmpsl
sub
aas
jne
inc
test
xchg
xor
xor
gs
lds
dec
xchg
xor
dec
jno
fidivs
insl
pop
xor
jg
lds
stos
sub
out
cwtl
adc
mov
xor
inc
sub
mov
ljmp
rclb
jmp
loop
fcmovnb
rcrl
pusha
pop
aas
data16
jb
push
push
repz
jmp
jecxz
jns
fidivrl
inc
dec
sbb
push
push
mov
adc
in
sbb
mov
jmp
clc
sub
shlb
jbe
orl
fwait
lahf
push
push
sub
adc
jmp
pop
lods
call
pusha
add
in
sbbl
sbb
rorl
sub
insl
repz
jl
lods
lds
aam
int3
pop
xchg
push
frstpm(287
iret
and
in
jae
sbb
pop
movsl
test
and
es
notl
ss
cmpsb
das
xchg
inc
dec
xor
and
mov
sbb
insb
xor
dec
xor
push
insb
mov
nop
leave
and
cs
nop
mov
dec
div
sub
cmc
int3
ret
or
imul
sub
lea
mov
jg
and
pop
mov
gs
mov
ret
and
rcrb
sbb
pop
cs
imul
mov
add
mov
push
fnstsw
push
push
mov
or
cmp
ss
mov
stos
movsl
int
inc
adcb
cwtl
clc
ss
orl
push
mov
int3
in
or
sarl
xchg
pop
adc
mov
xchg
ja
lret
mov
ss
mov
ss
mov
dec
aad
mov
jg,pn
dec
leave
into
inc
lcall
ljmp
mov
mov
jbe
sub
cmp
testl
jmp
push
jbe
inc
fsubrl
test
pop
or
or
pusha
pop
in
jae
push
adc
inc
movl
or
mov
cmpsb
ljmp
dec
xchg
pushf
mov
rcrl
xor
xchg
mov
insl
cmp
in
push
popa
mov
xchg
stos
or
jns
jle
xor
sbb
in
adc
ss
arpl
sub
mov
lea
mov
jmp
xlat
mov
mov
dec
cmp
cmpsb
fistpl
cs
adc
xchg
and
push
mov
adc
jne
int
jb
push
pop
sahf
mov
lods
dec
xor
add
popl
pusha
push
xchg
rcll
inc
push
mov
fsubr
and
xor
or
js
sub
sub
xchg
push
nop
orb
or
pop
inc
adc
iret
je
shll
gs
dec
lods
shr
add
ds
adc
sbbb
pop
or
sbb
or
or
sahf
es
insl
loopne
jns
insl
inc
adc
test
ss
mov
inc
cmpsl
mov
jmp
xchg
lahf
fs
iret
push
lcall
shrl
es
sub
gs
cmp
in
sbb
adc
and
mov
mov
pop
imul
sub
pop
ret
jns
push
leave
mov
xchg
popa
insl
add
adc
outsl
je
mov
and
and
cltd
flds
xor
mov
mov
loopne
jo
lods
addr16
adc
clc
xor
dec
out
add
lds
inc
ds
inc
mov
clc
movsl
dec
mov
ror
cli
mov
or
sub
push
add
je
subb
aaa
mov
insl
mov
mov
xorb
jp
rcrl
cld
sbb
mov
in
rclb
cmp
xlat
and
ja
inc
jl
pusha
push
rclb
ds
rcr
add
mov
jecxz
push
mov
outsl
mov
sub
jle
test
inc
ret
jns
outsl
sub
cmpsb
lcall
cmp
gs
jno
adc
mov
xor
xor
mov
imul
add
les
cmc
adc
mov
mov
push
sbb
cmpsb
push
icebp
clc
ljmp
mov
jl
jns
sub
and
cwtl
lds
xchg
sbb
add
sub
mov
xor
dec
addr16
fwait
fwait
leave
or
cmp
js
out
jnp
jae
jg
test
fst
adc
inc
aaa
jl
cmpsb
mov
mov
xor
push
jmp
push
cmp
out
in
and
in
pop
mov
imull
mov
out
insb
push
inc
sti
icebp
jmp
fsts
pushf
sbb
or
mov
das
pop
adc
ds
rorb
and
push
sysenter
test
mov
lcall
cmp
sbb
rcll
mov
adc
dec
rorb
cmpb
add
mov
xorb
sbb
xchg
or
cmp
xor
int
imul
jg,pt
out
in
jae
loop
jl
adc
push
pop
jecxz
mov
jp,pt
jns
sbb
adc
xor
jne
icebp
and
decl
xlat
cmp
addr16
and
gs
aam
std
popa
lret
or
fwait
loopne
pop
cmpsl
sbb
in
ds
jg
loope
mov
stos
loop
cmp
addr16
and
fyl2x
xchg
inc
mov
pop
clc
jne
aam
mov
sbb
in
and
xlat
adc
mov
add
lcall
call
cmp
jb
cld
test
rclb
daa
fisttps
push
js
ss
addb
fnsave
cmc
inc
fcmovnb
dec
stos
out
push
pop
jle
jns
arpl
in
inc
and
jns
mov
rcrl
and
shrb
sbb
add
xchg
pop
gs
outsb
movsl
insl
test
or
pop
fdivs
cld
jbe
add
lods
int3
addr16
mov
mov
inc
clc
lea
xor
cmp
mov
les
in
dec
xchg
mov
or
jl
jmp
adc
das
test
movsl
add
fildll
or
xor
sub
pop
xchg
js
scas
xor
ljmp
aad
ficompl
jl
arpl
jle
xor
fscale
andl
imul
fidivrs
fwait
pushf
jge
sbb
lret
je
pop
scas
scas
jne
imul
scas
or
ret
cmp
loop
pop
push
test
xor
clc
cmpsb
jbe
dec
stos
int
jb
mov
jge
dec
out
adc
push
mov
mov
aad
int
aad
cwtl
xorw
cltd
mov
jne
sub
cwtl
mov
lods
in
cwtl
adc
push
popf
and
enter
les
push
push
push
orl
fcoml
add
popf
cmp
push
enter
and
lahf
sbb
rorb
lock
das
xchg
xchg
cli
mov
inc
pop
xchg
hlt
daa
mov
push
and
loope
aam
adc
fisubl
lahf
mov
xlat
cmc
cmpsl
mov
ljmp
pop
out
ret
sti
in
jb
arpl
int
pop
andb
or
das
and
scas
mov
xor
mov
sub
sbb
cmp
ret
adc
test
cmp
mov
push
shr
imul
xor
fldcw
adc
push
mov
popf
dec
loop
sub
idiv
add
dec
fistpl
fsubl
jl
jmp
cmp
mov
or
test
mov
lret
pop
movsb
rorb
das
mov
or
js
pop
xlat
in
jp
push
push
call
pslld
adc
sub
je
fsubrp
mov
scas
push
push
lods
pop
call
lea
xchg
adc
and
lahf
push
xchg
jo
jo
cmpsl
nop
inc
mov
mov
or
out
sbb
repnz
jle
mov
fwait
mov
popa
inc
sarb
lret
orl
cmp
pop
xchg
out
mov
mov
loope
fidivrl
icebp
test
clc
or
mov
and
rorl
rorb
adc
inc
dec
repz
cwtl
mov
gs
call
ret
mov
pop
xchg
in
jae
xor
psrld
mov
stc
dec
in
inc
sub
in
mov
sub
movsl
mov
mov
add
adc
jns
xor
dec
mov
mov
pusha
pop
cmpsl
mov
cmpsb
mov
or
loop
daa
dec
sbb
xor
pop
fwait
jg
rolb
adc
mov
rorb
ret
popa
cmp
popa
jmp
xchg
and
xor
dec
pop
lods
add
mov
mov
and
xchg
push
ja
ret
xchg
incb
std
and
insl
arpl
pop
dec
push
xchg
je
xchg
xchg
push
push
jle
fnstenv
push
cmp
push
push
xchg
fisubrs
and
movsb
enter
mov
imul
dec
shl
cmpsl
adc
test
and
mov
bound
jne
add
sbbl
or
cmp
call
addb
inc
xor
cmpsl
mov
mov
mov
lods
mov
lret
add
push
sti
jo
ffreep
cmp
sub
mov
sub
xchg
sub
pop
and
and
cmp
inc
push
push
pop
stos
xorb
dec
or
loopne
xchg
adc
stc
aam
inc
loopne
sarl
mov
in
aam
mov
xchg
jecxz,pt
mov
push
clts
xor
mov
cmpsl
xchg
add
cmp
sti
xor
dec
mov
sub
sub
mov
mov
test
cmpsb
mov
mov
shlb
and
out
aad
movsl
popf
pop
xchg
mov
into
sub
movsl
dec
mov
xchg
mov
mov
popa
add
pop
arpl
push
mov
cmpsb
loope
repnz
mov
neg
data16
and
dec
fbld
fnstcw
outsb
mov
mov
and
pop
pop
enter
xor
iret
shll
pop
xchg
mov
mov
push
or
es
lods
lods
dec
sub
cmp
in
sub
cs
pop
arpl
adcl
mov
lret
xor
mov
or
xlat
xor
ret
push
fistpl
or
fisubrs
outsl
jns
je
or
xor
adc
mov
stos
sbb
mov
and
mov
xlat
repnz
ds
popf
pushf
outsb
fs
push
test
mov
push
mov
out
push
pop
or
ret
stc
or
pop
rcll
ret
sar
cs
xor
xor
mov
sti
sbb
add
sti
stc
or
bound
je
jns
xor
add
int
jmp
xchg
shl
or
pop
pop
popf
sahf
cmp
cs
jmp
fmuls
adc
cltd
pop
int
mov
xchg
test
dec
rclb
xor
add
sbb
fs
jp
test
loop
mov
js
test
and
and
les
sub
mov
inc
lock
les
fistpll
xchg
lods
js
out
lahf
sbb
sub
jge
inc
cmp
rorb
cmp
je
jno
iret
call
sarl
sarb
xor
pop
adcl
jbe
lods
xchg
push
ds
les
icebp
jl
mov
pushf
loop
inc
sub
lods
or
jp,pt
dec
xchg
and
mov
repnz
mov
repnz
and
in
fiadds
popa
ljmp
adc
lds
daa
inc
out
lds
fidivs
xchg
push
stos
dec
movb
data16
popa
mov
loope
adc
pop
sub
and
mov
jbe
lahf
cmpsl
jp
cmp
shrl
cmp
pop
mov
outsl
in
cmp
lea
xor
out
or
sub
stos
stos
or
dec
mov
mov
mov
mov
nop
mov
mov
pushf
mov
xlat
pushw
fdiv
xchg
mov
test
sbb
dec
xchg
jmp
push
iret
scas
ret
push
sub
das
cmp
xor
and
mov
add
inc
mov
shlb
int
shr
mov
and
stos
pop
fucomi
mov
outsl
xor
stos
icebp
sahf
and
adc
lock
pop
cltd
aaa
mov
shrl
or
pop
mov
dec
mov
xor
sub
cltd
pop
fsub
xchg
inc
or
cs
push
xor
data16
and
fstps
cmpsb
cmp
pop
jmp
dec
fistpl
jecxz
cwtl
lahf
xor
push
subb
cmp
jg
cmp
aaa
mov
test
in
idiv
bound
lret
inc
mov
mov
mov
out
cli
sub
aas
icebp
and
jge
sahf
pop
mov
adc
daa
adc
sub
jae
sub
push
cmpsl
dec
inc
out
lods
lds
repz
xchg
lods
int
xor
sbb
xor
filds
ss
cwtl
lock
adc
mov
adc
pushl
and
int
ss
fmulp
or
mov
daa
orb
lods
and
pop
push
sbb
inc
fists
add
pop
rcll
and
jbe
xor
xlat
fdivs
mov
mov
int3
push
repz
das
lods
iret
jle
xor
add
sbb
xor
ret
sbb
cmpb
mov
loope
in
movsb
jnp
inc
mov
fwait
cli
and
les
popa
stc
fwait
add
fstpl
add
add
sbb
mov
jp
cmp
mov
dec
lods
jb
jmp
ret
shlb
sub
dec
pop
lods
in
jg
jecxz
jns
xchg
xor
mov
or
daa
and
lcall
dec
dec
in
mov
pop
mov
push
dec
mov
test
aad
push
add
dec
mov
ja
or
cmp
add
ja
enter
add
les
push
icebp
adc
jns
sbb
cmc
xlat
mov
ds
sub
mov
add
fdivrs
push
cmp
add
ret
cld
pop
rclb
test
jl
iret
mov
xchg
out
cmp
lret
lods
xchg
inc
faddl
cmp
mov
xchg
jb
or
cmp
sbb
xor
jbe
lds
lock
jge
ret
fs
loope
sub
sahf
out
fsubs
adc
xchg
jmp
jle
add
std
mov
adc
jnp
jle
inc
jae
sub
add
mov
jmp
pop
push
cmp
scas
lret
outsb
sub
sub
push
mov
js
in
lods
push
loopne
fcmove
test
add
push
jbe
outsb
test
and
cmc
push
sti
sub
imul
jne
scas
cli
pop
mov
and
lret
mov
test
jmp
and
outsb
xchg
add
or
fmuls
stos
mov
sbb
xor
mov
mov
cmc
pusha
cmp
scas
daa
out
insl
and
jl
stos
adc
adc
imul
sbb
lods
stc
lea
push
into
fidivs
push
outsl
test
xchg
fdivrs
stos
les
out
shl
add
fmull
inc
sub
scas
cmpl
sbb
or
mov
cmp
adc
add
inc
mov
pop
push
ja
cli
add
jp
jne
sbb
int
jae
push
testb
lcall
mov
sbb
dec
pop
sbb
mov
cmp
shrb
inc
bound
sbb
jo
dec
pop
or
adc
call
repz
push
xchg
adc
cmp
and
movsb
inc
mov
aam
sub
add
lock
mov
adc
xchg
xchg
rclb
fwait
or
push
addr16
dec
aaa
ds
es
stos
mov
out
cmpsl
es
call
inc
sbb
sub
mov
movsl
int
push
test
xchg
test
int3
push
and
mov
mov
pop
jp
pop
mov
out
xchg
ret
jb
pop
pop
sbb
cmpl
addr16
jmp
iret
jge
scas
in
ja
loopne
nop
cmp
inc
es
fsubrl
aas
movsl
clc
rorb
sbb
mov
pop
jmp
add
out
sarb
daa
mov
mov
xlat
shrl
jl
lcall
in
mov
pop
lret
test
cmp
insb
push
pop
push
dec
and
sub
sbb
or
cld
icebp
in
rcr
int3
mov
pushf
xchg
mov
jno
inc
pop
push
dec
and
sub
sbb
or
cld
icebp
in
rcr
int3
mov
pushf
xchg
mov
inc
bound
inc
push
dec
mov
xor
sbb
or
std
icebp
call
mov
xchg
jns
jne
sub
or
cmp
sub
pushf
xchg
int3
loope
push
inc
imul
mov
jle
outsb
hlt
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
addb
lods
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
add
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
nop
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
push
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
push
add
lods
push
add
mov
add
mov
push
add
int3
push
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
pop
add
adc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jl
add
je
add
insb
or
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
or
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
or
add
add
nop
or
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
or
add
or
add
or
add
add
or
add
adc
add
daa
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
or
add
add
pop
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
