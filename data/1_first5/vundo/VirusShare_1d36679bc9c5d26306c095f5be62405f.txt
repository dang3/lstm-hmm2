mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
lcall
xchg
fnstenv
rcll
jmp
adc
dec
xor
jns
std
mov
test
icebp
stc
shr
sbb
or
pop
add
adc
popa
dec
jno
inc
imul
xorl
out
jmp
insl
push
jno
adc
xor
adc
mull
sarb
leave
xor
ret
pop
cmp
movsb
inc
sbb
dec
test
jne
jne
cmp
dec
push
je
fs
pushf
jge
mov
mov
xchg
lods
addr16
addr16
jbe
std
adc
ficoml
loope
iret
sub
sub
dec
popa
or
mov
push
push
inc
pop
loope
pop
addb
loopne
loope
sub
sbbl
call
out
cmpsb
xor
js
imul
push
xor
and
bound
cmp
insb
and
dec
xor
inc
add
adc
mov
sub
repnz
or
push
sub
or
adc
sahf
sbb
ret
mov
subl
rcr
and
adc
popa
inc
jno
inc
imul
int
rcl
mov
cmpsl
mov
movsb
jmp
pop
pop
outsl
dec
jg
or
or
ret
or
aam
in
sti
lret
or
fisttps
mov
pop
cmp
jge
push
es
adc
aas
cmc
icebp
in
fdiv
cli
in
leave
icebp
stc
shr
sbb
or
cmp
sub
pop
popa
dec
jno
inc
imul
subl
rcrl
and
xor
add
adc
dec
jno
inc
imul
jae
inc
push
and
cmp
jp
xchg
pop
inc
xchg
aaa
leave
js
pop
mov
cmp
mov
ja
xchg
pop
inc
cli
rcll
mov
testb
add
subb
mov
cld
jp
and
or
xlat
sti
cvtdq2ps
out
adc
rcll
or
ror
cmp
xor
pop
pop
into
jo
std
addb
fstp
ljmp
fldcw
mov
outsb
dec
or
or
int
sbb
out
xchg
sahf
pop
inc
mov
mov
inc
in
xor
std
and
imul
and
cltd
outsb
ret
test
in
xchg
push
inc
fidivrs
xchg
adc
adcl
xchg
inc
jg
clc
stc
test
call
and
jae
add
dec
es
mov
mov
xor
cli
cmp
pop
fcomp
or
sbb
rcll
ret
movsl
xchg
adc
fiaddl
sub
jp
xchg
xchg
int
jecxz
mov
enter
jnp
mov
hlt
add
movsl
dec
adc
mov
or
lods
lods
pop
pop
or
mov
sbb
das
daa
sub
test
imul
or
or
test
stc
cmpsb
and
adc
fdivrl
scas
mov
inc
mov
mov
xor
lret
movsb
push
test
adc
pop
jmp
es
rclb
xchg
inc
xchg
jae
loop
ja
push
ss
sar
mov
add
outsb
lea
test
inc
shrl
andl
ss
test
mov
orl
test
mov
cltd
push
dec
jl
fstpl
ret
mov
int3
inc
ret
xor
adc
pusha
add
pop
cmc
repz
mov
fiaddl
into
sbb
inc
push
sbb
insb
pop
mov
addr16
inc
mov
ja
test
test
cmpsb
mov
adc
addr16
dec
imul
int
arpl
pop
repnz
dec
xor
dec
dec
insb
ljmp
pop
out
lock
fucomp
mov
ss
cmc
cltd
mov
cld
cmp
mov
ret
jnp
push
cs
stos
and
mov
mov
int3
lods
xchg
test
cmpsl
inc
repz
out
shr
insb
xlat
dec
outsb
cwtl
pop
sbb
cmp
out
pop
mov
mov
cmp
jecxz
ret
mov
xlat
xlat
mov
push
and
jbe
mov
insb
ja
push
in
int3
je
jge
sbb
pop
push
push
pusha
je
or
or
add
test
jo
dec
fimull
test
sahf
cmp
xor
pop
and
add
ret
idiv
mov
in
xchg
js
or
out
push
jl
or
xchg
in
dec
mov
out
xchg
sbbb
pop
mov
into
push
in
mov
inc
iret
out
stc
repnz
nop
js
jae
aas
fldcw
xor
dec
fmull
push
mov
xor
sub
test
fnstcw
lock
nop
pop
int
cld
xor
insb
rcr
mov
lret
add
insl
call
stos
mov
xor
push
clc
rorb
pop
leave
sub
int
mov
sbbb
gs
hlt
jge
aas
dec
out
add
lea
xchg
push
mov
xorl
jo
jp
mov
adc
cld
in
sub
subb
cs
scas
loopne
push
adc
movsl
xor
and
mov
shlb
jecxz
daa
loop
inc
aam
inc
popf
add
xor
jne
or
push
out
jp
sub
mov
aad
add
aad
leave
stos
mov
lret
cmpsb
adc
jp
jno
daa
shrb
out
jp
push
fiadds
sahf
sbb
rcrl
cmp
xor
mov
or
xor
pop
mov
fsubp
test
ficomps
pop
mov
mov
xorb
or
pop
sub
mov
into
ljmp
jae
dec
and
mov
lock
in
sbb
in
push
aaa
mov
insl
mov
add
mov
and
stc
sub
mov
adcl
push
xchg
sarb
xor
lcall
pop
jecxz
ss
cld
add
pop
movsb
nop
cld
jnp
lds
std
sti
sub
test
xchg
fdivr
icebp
out
mov
sub
xor
mov
lea
popf
xchg
cmp
lock
subb
jb
xchg
inc
cltd
and
mov
lock
adc
mov
or
jmp
and
inc
jae
icebp
iret
or
mov
push
lea
adc
sbb
xchg
or
lods
out
std
clc
movsb
addr16
rclb
inc
xor
mov
adc
data16
push
pop
adc
aaa
je
mov
fsubl
sbb
test
mov
sub
imul
lea
mull
mov
jge
test
xchg
inc
shr
sbb
lcall
lcall
shl
leave
cmpsb
mov
mov
mov
icebp
aas
leave
mov
sbb
hlt
and
xchg
shll
loop
pop
cltd
mov
add
or
dec
push
cld
jns
dec
lods
fcoms
add
pop
or
iret
sub
rcrl
mov
into
adcb
pop
and
xlat
or
shlb
xchg
mov
lret
mov
push
fsts
out
mov
es
je
sbb
jb
ret
push
stc
mov
cmp
aas
stos
mov
pop
les
mov
cmp
mov
xor
ds
mov
in
push
movsl
sub
or
fldenv
sub
inc
aam
fsub
mov
mov
mov
sti
scas
sbb
adc
add
add
ss
jae
cmp
and
dec
fdivrp
and
jbe
sbb
sbb
push
sbb
lret
xlat
and
lret
rorl
aad
jl
mov
xchg
mov
mov
jnp
test
icebp
mov
mov
cwtl
push
or
cmp
sbb
ret
lret
repz
mov
test
xchg
or
mov
xor
or
xchg
mov
incl
out
jmp
xchg
test
cld
mov
fsubr
xchg
xor
mov
cld
fwait
cmp
movsl
jns
jle
mov
aam
xlat
add
xchg
fwait
mov
cwtl
test
shrl
jecxz
add
inc
pop
clc
sub
mov
imul
popf
test
mov
dec
and
insb
fistl
mov
push
lods
or
icebp
jo
push
sbb
jmp
mov
fcmovnu
insb
xorb
inc
lock
or
negb
inc
mov
dec
push
sub
dec
inc
jmp
insb
sub
lods
repz
jne
out
adcb
test
mov
xchg
sub
mov
aaa
mov
fwait
daa
pop
int3
sub
xor
cs
shlb
mov
lods
jb
fimull
add
test
push
fbld
fs
add
ljmp
lods
push
sub
mov
fdivl
jp
and
arpl
jno
lock
sub
xchg
inc
out
mov
rcrb
outsb
adc
ds
pop
cmp
jl
pop
dec
dec
shll
sarl
xlat
jo
lea
or
sub
jnp
cmp
orl
dec
and
push
xor
sub
mov
test
or
out
adc
es
bound
mov
xchg
jae
sbb
and
jae
iret
in
mov
hlt
andb
inc
jmp
inc
push
mov
aad
and
mov
push
or
xchg
movsb
les
fdivl
push
jae
frstor
lea
push
xor
aad
call
ror
pop
test
loope
dec
pop
les
or
in
jbe
movsl
mov
dec
cld
inc
jbe
mov
dec
dec
nop
sbb
ficompl
xchg
mov
push
sbb
xchg
inc
mulb
negb
fwait
loop
lret
and
inc
aas
sti
dec
adc
movsb
sahf
mov
xchg
ret
scas
push
or
lcall
push
arpl
mov
int
sbb
arpl
adc
inc
add
pop
push
xchg
in
hlt
xchg
pop
mov
jecxz
adc
cmp
imul
test
adc
jae
shrl
jno
mov
arpl
mov
dec
or
mov
mov
enter
xchg
lock
push
xchg
sti
rolb
gs
dec
mov
imul
scas
mov
ret
sarl
xor
xor
jae
lcall
in
int
cs
hlt
in
xor
data16
push
push
shrl
stos
js
leave
mov
mov
cmp
mov
jmp
andb
inc
mov
xchg
scas
inc
sub
mov
insl
mov
scas
cmp
mov
mov
push
scas
dec
xchg
xlat
mov
in
int
into
jl
fiaddl
loopne
cmp
dec
pop
sbb
mov
imul
lret
lret
jbe
pop
inc
cmp
mov
std
jno
icebp
dec
ror
or
loope
sahf
testl
pop
std
jo
cmpsl
or
fadds
movsb
mov
sub
out
jecxz
mov
or
add
lahf
js
ds
fs
pop
leave
jns
lods
mov
push
dec
jne
mov
mov
push
jg
mov
aas
inc
mov
or
in
scas
lds
pop
cmp
jmp
stos
or
mov
or
int
insb
js
jno
dec
and
fcmovu
mov
das
xchg
out
xor
dec
lret
xlat
jge
into
movsl
mov
lcall
adc
adc
mov
adc
xor
xchg
insb
outsb
dec
ror
mov
push
lds
cld
mov
aaa
fs
sub
sub
ss
pop
test
push
mov
add
mov
inc
pop
push
inc
lahf
stos
inc
rcl
cli
mov
pop
sub
mov
xchg
adc
outsl
icebp
call
push
inc
cwtl
rorl
cmp
xchg
pop
push
rcl
enter
jp
push
int
stos
mov
mov
dec
shl
negb
ljmp
sub
inc
mov
sbb
sbb
adc
mov
mov
cwtl
popa
fsubs
sub
popf
repz
jp
std
push
aam
xchg
mov
pusha
mov
fmul
xchg
fcmovbe
and
pop
xor
dec
pushf
pushf
dec
mov
xor
and
lods
add
mov
jmp
add
loope
push
xchg
fs
gs
push
fildl
and
enter
add
adc
mov
xchg
pop
and
insl
sar
negl
iret
or
xchg
mull
pop
mov
lret
cmpsl
jmp
push
cmc
and
iret
cs
xchg
pop
xlat
sbb
push
jbe
sub
sbb
xchg
arpl
rclb
mov
adc
jl
pop
shll
push
loop
popf
inc
push
movsb
sub
sti
test
sub
jmp
pop
mov
movsbl
js
jg
xor
int3
sub
sbb
push
xlat
push
mov
mov
mov
mov
hlt
icebp
fs
arpl
and
fimull
and
sbb
loope
xor
nop
outsb
cmp
std
andl
scas
pop
rcll
sub
les
fisubrl
mov
sub
std
int
mov
add
test
xchg
loop
add
test
sarb
or
dec
or
mov
sub
sarl
sbb
lahf
pop
sub
sub
jl
icebp
bound
outsl
fisttpl
mov
sub
out
push
in
lods
div
sub
into
push
xchg
aas
add
inc
sbb
dec
lret
into
pop
mov
push
rcr
cld
mov
stos
inc
pop
lock
mov
xchg
inc
sub
cltd
adc
ja
push
jmp
or
jne
sahf
test
test
jle
mov
movsb
or
lret
xchg
fwait
mov
cs
cmp
mov
pushf
pop
push
jecxz
jbe
or
inc
sbb
sbb
pop
xchg
xor
add
dec
mov
sub
mov
add
adc
xchg
cmp
mov
cltd
and
pusha
out
test
outsb
xchg
aam
push
xchg
movsl
and
push
repz
ss
jnp
and
pop
flds
popf
rolb
out
rcrl
cmp
mov
cmpsb
je
aad
sbb
aas
enter
and
xchg
and
inc
data16
and
push
gs
add
test
mov
in
or
andb
pop
cmp
icebp
into
inc
ret
mov
lcall
jmp
out
cmpsl
push
out
jae
outsb
mov
sub
fildll
push
pop
cmp
xchg
or
mov
dec
mov
out
data16
loop
lea
mov
clc
rcrl
fldl2t
cmp
lahf
jbe
and
push
xor
negl
imul
fstl
test
mov
lret
xchg
cmp
xchg
sub
ss
lods
psubw
push
mov
lods
mov
test
xchg
push
insb
and
xorl
sbb
leave
gs
outsl
xchg
jmp
ljmp
stos
adc
mov
push
cmp
stos
mov
xorl
cmp
shll
and
jmp
lret
nop
data16
pop
push
nop
inc
fsub
aaa
mov
xchg
mov
adcb
loope
mulb
mov
in
dec
xchg
or
and
sub
sbb
out
jecxz
ja
mov
jg
dec
loopne
nop
jmp
and
icebp
int3
aas
clc
movsl
in
xchg
and
cmpsb
shlb
inc
sbb
pop
push
cmp
inc
inc
lds
lods
insl
in
incb
mov
pop
jo
pop
dec
sti
enter
insb
cwtl
mov
movsb
lea
sahf
repz
and
popf
mov
jne
inc
add
pop
push
add
ss
imul
in
jge
fmull
popf
loopne
cmpsb
sahf
unpcklps
or
jg
dec
in
or
xlat
adc
mov
inc
mov
jg
stos
lds
pop
fadds
add
jg
dec
cmpsl
lret
cmp
sub
mov
dec
pop
jecxz
je
lods
cmpsl
sbb
test
or
mov
jnp
or
ret
into
xchg
stos
cld
jmp
mov
mov
sbbl
ret
sbb
gs
xchg
and
jnp
repz
cwtl
and
pop
sti
fists
xor
and
jmp
push
xor
sub
jne
mov
insb
scas
adc
jb
lahf
jecxz
cmp
fs
scas
mov
cmp
inc
jae
push
idivb
add
sub
stc
clc
cmp
insb
shr
or
sub
cmc
and
xchg
lret
loopne
add
and
test
dec
repz
gs
mul
mov
ret
mov
jl
push
fstpt
pop
dec
ret
add
pop
in
loopne
pop
push
jle
mov
cmpsl
or
in
jne
dec
add
sbb
imul
clc
adc
cltd
stos
sub
ja
fidivl
sbb
jg
push
fwait
xor
or
sar
stc
jo
adc
ret
mov
cmp
mov
pop
sbbb
mov
out
jecxz
jmp
test
mov
clc
mov
enter
xchg
es
and
lods
pop
shrl
std
push
shr
js
and
dec
enter
repnz
pop
repz
push
popf
hlt
or
ss
subb
andb
or
xlat
stos
xchg
jae
lret
lds
pop
mov
mov
mov
inc
adc
push
sbb
es
scas
mov
gs
test
not
mov
ds
mov
test
push
lock
add
and
sti
jge
std
hlt
dec
in
sti
sarb
js
xchg
int
pop
add
jge
nop
mov
mov
sub
jae
pusha
bound
or
ficoms
ret
test
iret
and
lods
dec
dec
loopne
push
mov
add
xor
cmp
and
jno
cwtl
xchg
cld
daa
adc
add
adc
xchg
cs
or
outsl
dec
fwait
pusha
push
sbb
push
pusha
jo
pop
ja
mov
pop
mov
cmp
push
icebp
inc
inc
lock
push
arpl
ja
inc
inc
jmp
mov
adc
call
roll
fcom
lea
jge
sahf
loope
mov
loope
mov
imul
dec
je
or
flds
inc
push
scas
lcall
adc
fs
push
cmp
sub
sbb
mov
xor
xor
cmp
aas
lret
pusha
fs
or
jmp
loope
lock
and
fdivp
fiaddl
mov
xchg
dec
gs
dec
test
sub
or
cli
out
and
sbb
dec
xchg
shrl
pushw
mov
inc
popa
mov
inc
lret
pop
cmpl
pop
jmp
repnz
dec
add
mov
test
das
les
pop
dec
scas
mov
int3
mov
fsubl
into
repz
imul
in
mov
inc
add
out
lods
add
pop
adc
inc
dec
sbb
xchg
insb
push
xor
outsb
into
xchg
int3
mov
hlt
outsl
add
bound
and
ret
cltd
jecxz
and
adc
mov
jae
push
bound
mov
jne
ret
mov
aam
sub
out
jg
pop
or
bnd
jnp
sub
aaa
lcall
sub
movsb
sub
fldt
scas
test
movsl
shrl
pushf
adc
xchg
jb
push
add
imul
les
adc
leave
out
mov
movsb
cmp
lahf
jo
je
test
int
das
jle
add
stos
mov
insl
push
sub
inc
mov
int3
cmp
test
mov
mov
jp
dec
shrb
lret
mov
out
dec
test
xchg
mov
sbb
pop
push
fld
daa
out
inc
xchg
mov
fcoml
inc
add
lock
addr16
sub
or
pop
lods
popf
adc
jbe
dec
pop
arpl
sahf
divb
outsb
aas
sub
into
xchg
mov
dec
fdivrs
aaa
inc
mov
out
movsb
es
mov
cmp
popa
mov
in
jp
rcll
cmp
jbe
insb
and
mov
shlb
mov
hlt
loop
test
inc
push
jle
sbb
pusha
loopne
orb
enter
mov
cmp
lock
movsb
dec
addr16
loopne
xchg
fstps
ja
call
scas
jmp
xchg
ficomps
sbb
push
and
lods
cmp
pop
adc
xor
sub
xchg
rorl
mov
sub
sub
cmc
sub
outsl
sub
aas
loop
jae
inc
rorb
sub
mov
out
movsb
repz
loop
mov
dec
fucomi
pop
lods
cmpsb
mov
mov
mov
pop
outsb
fnstcw
jno
fcoms
sbb
movsl
clc
mov
xor
out
pop
dec
fcompl
pop
cmpsb
push
add
scas
test
adc
loop
jecxz
repnz
ret
mov
pop
mov
and
mov
scas
pusha
fistps
xchg
subl
xor
and
pushf
sub
orl
ja
or
inc
test
int3
cmp
inc
lea
xchg
and
mov
inc
xchg
mov
dec
std
and
aaa
test
popa
push
movsl
inc
mov
cltd
jecxz
inc
jmp
popf
test
sub
popf
push
push
mov
ljmp
shl
std
rorb
and
stos
and
cmp
loopne
into
fcoml
fistps
movsl
xchg
and
loope
in
push
sbbl
inc
xchg
es
cld
sahf
cmp
sub
fst
xchg
xchg
out
xchg
add
and
pop
outsb
add
sub
fstpt
dec
cmp
popf
je
lock
jle
inc
xor
fnsave
adc
jo
test
js
mov
jg
out
loop
lret
lcall
or
dec
ret
sbb
rol
test
rol
sub
dec
mov
or
cmc
das
inc
dec
xchg
cmpsb
stos
out
adc
cmp
sub
test
aam
out
repz
inc
push
or
mov
cmp
std
int
rcll
shrb
outsb
ss
mov
inc
inc
js
repz
cmp
mov
push
out
mov
cmp
cmp
mov
cltd
lahf
xlat
xchg
inc
pop
push
dec
pcmpeqw
hlt
mov
scas
stc
cltd
lahf
dec
jp
dec
shrb
dec
and
pop
jg
or
ljmp
xchg
inc
pop
bound
mov
push
push
lea
sbb
add
outsb
cmp
call
xor
flds
mov
iret
repz
inc
cmp
test
add
inc
loope
adc
xchg
lret
jecxz
lods
loop
jbe
xor
pop
call
pop
loope
adc
ret
js
xor
pushf
push
push
insl
xchg
mov
and
dec
imul
hlt
mov
xlat
gs
jae
add
adc
push
popf
es
pop
es
loop
cld
jbe
mov
loope
fwait
int
cmc
push
pop
rcrl
clc
adc
lea
xlat
lods
xor
rorb
mov
shrb
gs
int
push
sbbb
lcall
jns
jmp
loop
push
pop
jle
in
roll
push
push
inc
popa
aas
subb
std
hlt
mov
xchg
sti
mov
loop
imul
sub
scas
stc
dec
sub
rclb
or
dec
or
push
dec
lret
xlat
mov
sub
inc
lret
xchg
sub
add
stos
mov
adc
or
xorb
cmp
xor
je
inc
push
jmp
insb
or
rcrl
cltd
pop
rcl
xor
inc
clc
adc
inc
adc
leave
xchg
mov
subb
stc
shr
sbb
or
cmp
sub
pop
popa
dec
jno
inc
imul
subl
rcrl
and
xor
add
adc
dec
jno
inc
imul
subl
rcrl
and
xor
add
adc
pop
jno
inc
adcl
orl
cs
negb
cs
xchg
scas
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
pusha
push
jo
inc
lea
in
int3
inc
xchg
outsb
sbbb
loopne
icebp
xor
sbb
mov
sbbb
pusha
lods
jo
inc
lea
and
xor
add
adc
loopne
lock
pusha
push
mov
orb
pusha
mov
mov
and
xor
add
adc
loopne
roll
lods
js
sbb
cmc
sbb
pop
aas
lods
adc
inc
stc
cmp
jmp
push
call
mov
or
dec
in
cmc
inc
shll
sti
cld
sbb
scas
popa
fbld
add
inc
in
push
sbb
sbb
mov
xlat
dec
sbb
cmp
and
std
mov
movsb
std
shlb
jge
mov
pop
pusha
std
jo
sub
and
and
jne
ds
mov
addb
movsl
aaa
lahf
xchg
nop
pop
mov
int
add
mov
lods
sbb
rorb
mov
orl
sbb
notl
push
mov
add
aas
sbb
or
lds
jo
inc
popf
push
xchg
in
xor
add
adc
loopne
lock
mov
dec
nop
cmp
enter
mov
pushf
and
adc
rcrb
mov
dec
xor
std
cmp
and
inc
mov
push
mov
pop
mov
and
cmp
in
cmp
insb
xorl
fucom
sub
rcrb
orb
pusha
lods
jo
inc
lea
and
xor
add
adc
loopne
lock
mov
dec
nop
pop
pusha
lods
push
cmp
lods
jg
xchg
jne
les
mov
mov
icebp
clc
inc
dec
jmp
mov
sbbl
push
cmp
loop
data16
mov
mov
xchg
lcall
jns
loopne
lcall
mov
scas
call
sbb
mov
pop
and
xchg
test
pop
adc
imul
cwtl
pushf
dec
adc
mov
jno
fnstcw
push
lds
or
sbb
out
roll
and
cmp
sbb
pop
aas
mov
imul
shrb
outsl
mov
data16
xchg
shr
mov
negl
and
inc
lcall
stos
jno
mov
cltd
loope
out
and
lods
xchg
sti
ljmp
ds
xor
jo
inc
xor
push
ss
in
nop
cmp
add
and
sbb
lock
adc
pop
mov
push
test
sahf
jle
add
in
adc
aaa
mov
lods
in
jbe
push
bound
and
mov
out
cs
push
cs
jne
fstl
sub
adc
cmp
sub
fistps
jl
insb
pop
fstps
adc
shll
mov
nop
push
dec
repz
std
fadd
fwait
cmpl
dec
int
mov
sub
sahf
bound
inc
mov
and
loop
cli
cmp
dec
inc
xchg
mov
or
inc
pop
lea
data16
sub
das
pop
dec
in
mov
dec
cmp
fwait
push
cltd
test
js,pn
cmp
cmpsl
lods
xor
dec
jle
mov
cmp
push
adc
loopne
ljmp
scas
fdivrl
add
xor
ja
clc
imul
adc
jb
cmpsl
jne
ljmpw
imul
cs
fildl
imul
scas
mov
scas
inc
in
mov
push
repnz
int
test
fistpl
fldenv
das
adc
or
addb
flds
push
cmp
nop
and
fsubs
mov
sub
fs
adcl
push
loopne
fisttpll
test
ljmp
adc
ja
rclb
xor
cltd
mov
and
aas
jp
rcr
sarb
sbb
out
lods
aas
cmpsl
loope
inc
xchg
arpl
loopne
add
out
push
addr16
aad
mov
and
incl
ret
mov
lcall
push
in
push
xor
jbe
pop
rcrl
cmp
lods
adc
sti
movsb
mov
stos
test
movhps
aaa
stc
jmp
shrb
int3
inc
test
xchg
arpl
out
add
jge
jns
fmull
dec
out
imul
xor
pop
outsb
add
sbb
int
daa
repz
sub
loop
or
add
mov
sbb
cmpl
jb
nop
add
jp
mov
sub
in
ret
xor
test
xchg
mov
xchg
or
inc
int
pop
lret
mov
mov
adc
pop
jae
xor
call
add
repnz
inc
mov
adc
out
in
out
test
mov
cli
mov
fcomp
fnsave
or
xchg
add
mov
mov
leavew
mov
testb
arpl
fs
adc
mov
add
adc
outsl
dec
mov
ret
inc
xchg
in
xor
cmp
addl
mov
dec
add
aas
xor
pop
inc
out
mov
xor
mov
in
fnsave
or
adc
mov
push
mov
cmp
push
shlb
push
push
mov
cmp
and
sbb
test
jno
movsb
xchg
lret
dec
adc
or
enter
pop
stc
in
add
inc
mov
repnz
push
or
rclb
fs
jbe
enter
das
clc
sub
adc
or
pop
mov
in
add
sbb
xor
mov
xchg
test
psrlw
ljmp
add
cli
sub
imul
mov
sub
pop
push
or
jno
test
data16
addr16
aas
lds
adc
adc
lods
das
lock
xor
push
push
jl
sarl
jb
or
jo
ret
and
andl
std
test
adc
inc
fs
out
mov
mov
and
std
jne
insl
stos
xchg
in
loop
scas
out
push
mov
fsubl
pop
hlt
xchg
sub
jge
mov
cmp
adc
push
dec
fnstsw
js
mov
push
xlat
inc
test
sbb
sub
mov
pop
fsubr
xor
pop
cmp
fwait
insb
repnz
outsb
mov
imul
dec
or
mov
jl
outsl
push
in
pop
xor
inc
inc
loopne
adc
pop
pop
fistpl
adc
jae
sbb
imul
push
sub
mov
jns
sarb
mov
call
add
out
loope
insl
loop
xor
cmp
mov
int
sbb
cmp
into
mov
mov
xor
ljmp
int3
es
and
sbb
sbb
loopne
ret
das
aaa
out
icebp
lea
cmpsl
fimull
xor
jbe
mov
push
adc
pop
dec
push
pop
sub
into
repz
leave
int3
push
in
jg
and
ljmp
test
out
jle
adc
popl
int
cld
and
shll
imul
xchg
out
pop
addr16
addr16
jp
mov
sub
sub
mov
dec
pop
and
dec
pop
push
jnp
movsb
fcompl
insl
jb
or
jle
mov
jb
push
imul
arpl
jbe
outsl
scas
movsl
lahf
imul
outsb
ljmp
sbb
mov
int3
shlb
outsl
mov
mov
mov
dec
jno
inc
mov
push
sahf
or
shrl
inc
pop
dec
inc
push
push
shl
outsl
out
jae
aaa
pushl
or
mov
decl
cwtl
lea
outsb
rorl
add
lods
iret
mov
mov
cwtl
lea
mov
dec
jno
jae
enter
jb
loope
out
jae
push
xor
or
xchg
sub
pop
aam
mov
mov
mov
sub
jns
sub
xlat
sub
and
mov
jns
es
sbb
fadds
ljmp
in
inc
cli
cmc
adc
call
lods
push
repnz
xor
gs
cmp
aaa
cmp
inc
cmp
and
pop
dec
and
mov
jge
subb
jo
in
popa
mov
insb
dec
pusha
dec
mov
clc
setns
xor
and
mov
popa
clc
imul
into
out
jns
icebp
dec
mov
dec
lret
mov
mov
cmpsl
std
xor
sahf
push
xchg
in
fs
sbb
mov
cmp
cs
decl
pop
or
fcoml
push
das
movsl
jecxz
fs
pusha
lret
icebp
icebp
testb
mov
mov
or
addb
sbb
xor
inc
pop
mov
mov
cmp
lret
dec
icebp
out
aaa
push
repnz
cli
push
and
pop
xchg
es
inc
sub
mov
sub
imul
add
aas
xlat
sbb
and
sbb
xor
sbb
nop
aad
sbb
iret
sarl
inc
xchg
cmp
sbb
daa
shll
sub
xchg
adc
jns
lret
fs
push
sahf
cmp
into
xchg
jb
jne
das
popa
dec
pusha
aam
adc
push
data16
pop
xchg
xchg
ss
mov
imul
cwtl
into
lret
push
cmp
test
mov
push
dec
xor
xor
xchg
push
xchg
push
xchg
sbb
loopne
pop
cmp
adc
insl
push
outsb
push
insb
or
xor
mov
mov
and
pushf
mov
sub
testl
cmpsl
shrd
ror
outsb
cmp
outsb
mov
mov
out
push
mov
repz
push
xchg
dec
or
xor
out
add
cwtl
idivb
cmp
mov
jp
cmpsb
add
and
sub
icebp
push
rcrl
cmpsl
jle
daa
xor
push
push
xlat
pop
mov
ficomps
std
inc
fisubl
cmc
testb
into
lods
and
mov
xor
mov
sbb
add
mov
jge
ret
lock
sub
nop
sub
add
or
sub
push
mov
int
sarl
mov
nop
add
pop
jg
sub
jns
cmp
and
push
jl
je
insb
mov
stos
hlt
sbb
arpl
mov
out
stos
sbb
pusha
add
ja
loopne
test
pop
or
dec
add
popf
fwait
arpl
pop
scas
idivb
les
ret
sub
mov
cli
pop
outsl
shl
xor
dec
or
sbb
cmpsl
cs
sbb
jnp
scas
in
mov
xor
in
int3
imull
dec
cmpsl
into
data16
les
les
push
lret
inc
xor
jge
into
repnz
js
pusha
cmp
repnz
add
int
jae
xchg
or
pop
mov
sbb
mov
mov
cmp
out
lret
sbb
cmpl
mov
sahf
push
mov
cmp
xor
fmul
push
fcmovb
mov
jae
mov
sub
cli
idivb
sarb
jno
pop
stos
xor
fiaddl
pushf
stos
outsb
lret
das
ja
rclb
xchg
out
jno
sub
movsb
cmp
test
insb
ds
mov
les
pop
stos
jo
jge
fisttpll
mov
pop
enter
xor
mov
movsb
sub
mov
dec
hlt
xlat
xor
adc
mov
stos
cld
outsb
leave
test
push
je
mov
push
xchg
sti
cmp
xor
jg
push
and
lock
cmpsb
pop
push
inc
lea
je
movsl
repnz
aas
pop
dec
sbb
arpl
test
out
push
sub
push
push
into
cmp
push
sub
dec
ja
add
cmp
xor
in
inc
sbb
xor
jns
mov
sub
std
rorl
loope
dec
or
sbb
in
sti
pop
repz
mov
pop
sub
pop
daa
mov
adc
xlat
adc
push
mov
and
lock
es
xor
mov
decl
shl
mov
fistps
sbb
jb
inc
inc
mov
out
and
jns
scas
or
add
adc
xor
pop
or
lock
pop
ljmp
sub
pop
adc
lods
jmp
adc
dec
popa
addr16
push
dec
pop
gs
sub
sbb
jae
cwtl
xlat
negb
mov
rcrb
mov
test
mov
imul
sub
xchg
ja
push
aas
mov
insb
jmp
insl
sbb
xchg
cmpsl
mov
add
push
dec
adc
adc
outsl
push
xchg
rclb
pop
cmp
arpl
mov
fdivr
dec
inc
cltd
adc
int3
negl
cmp
repz
hlt
dec
pop
lea
aaa
fimuls
mov
xor
fisubs
lds
into
inc
out
lret
dec
fs
cli
imul
arpl
inc
cmp
cmp
sahf
insl
push
test
adc
adc
stc
aaa
cmpsl
adc
and
jbe
or
push
pop
sbbb
ja
adc
and
dec
mov
icebp
xor
cmp
dec
es
fsubrs
lahf
xor
mov
repz
mov
int3
lods
ss
jge
dec
sbb
iret
push
insl
inc
rcrb
and
call
and
lods
mov
cmpl
inc
pusha
outsl
test
add
mov
icebp
bound
clc
imul
sbb
shlb
fmull
or
add
push
lods
jecxz
imul
sbb
xchg
push
cmpsb
movsb
mov
xchg
xchg
pop
jbe
outsb
stos
mov
out
mov
lea
lcall
or
faddl
sub
sub
divl
mov
out
movsl
mov
xlat
jp
aam
iret
mov
inc
ficoml
or
xchg
aam
stos
sbb
push
clc
daa
sub
sahf
mov
inc
bound
mov
filds
pop
adcl
jb
outsb
mov
outsb
out
xchg
push
sub
adcb
in
pushf
out
sti
mov
pop
mov
xor
xlat
insl
xchg
and
xor
icebp
bound
sbb
fwait
ljmp
ret
stc
add
mov
xor
jl
or
leave
lret
daa
or
sub
dec
xlat
mov
xor
loopne
mov
cmc
mov
pop
jb
ljmp
cwtl
mov
fildll
cwtl
adc
mov
lret
scas
push
stos
pcmpgtd
sub
mov
push
loop
data16
lea
loope
sub
add
and
aas
mov
and
xor
push
lds
mov
cwtl
jb,pn
sub
mov
sarb
cmpsl
nop
xor
fisubrl
mov
rclb
outsb
jae
jno
and
jecxz
fdivr
inc
and
mov
adc
dec
int3
data16
fsubrs
sub
jg
cmp
hlt
or
inc
sub
lds
xchg
fisubrs
lock
mov
fadds
or
cs
ret
subb
scas
mov
and
adc
jbe
pop
std
dec
ret
insb
jne
lods
popa
fsubrs
cs
adc
je
mov
add
divb
mov
mov
fimuls
inc
mov
pop
push
loop
and
mov
push
daa
xchg
push
and
movsb
pop
xor
cltd
je
ljmp
fistpl
stc
arpl
test
sub
out
sub
mov
adc
int
mov
sarl
jle
inc
pop
inc
xchg
dec
cltd
jle
popf
inc
xchg
test
add
icebp
icebp
cltd
inc
rcrb
pop
pop
loopne
fldt
dec
mov
repnz
movsb
add
mov
adc
pop
cmp
ss
cmp
sahf
dec
fsqrt
in
mov
les
cmpl
int3
cld
in
inc
stos
in
jp
pop
inc
dec
les
stos
and
jns
xchg
xlat
pop
out
lea
pop
ljmp
xchg
fwait
dec
cmp
iret
loop
div
pop
push
push
jbe
loope
mov
sub
mov
mov
dec
and
inc
xor
in
xor
mov
inc
ret
jns
or
fs
cwtl
cmp
lea
in
xchg
or
jae
xchg
cmpsl
in
outsb
xchg
cwtl
mov
dec
mov
dec
lret
fsubrl
mov
sub
in
popf
add
shrb
bound
movl
mov
movsl
in
sbb
mov
sbb
arpl
jb
sub
add
mov
movd
xchg
mov
pop
outsw
adc
sar
xchg
sub
hlt
shld
mov
dec
iret
mov
leave
jbe
scas
jl
cmp
shlb
xor
push
cli
fstps
fcoms
sub
or
mov
pushf
movsb
cli
loopne
push
call
rol
shrb
je
push
in
adc
mov
push
fstp
test
inc
cli
or
jae
repz
frstor
subb
fincstp
das
addr16
jns
pop
pop
jnp
xchg
pop
dec
jle
jae
nop
and
xchg
inc
ljmp
push
rolb
in
xchg
popa
das
test
xchg
inc
dec
repnz
dec
sti
stc
jo
push
add
inc
in
mov
xchg
fldcw
daa
xchg
mov
daa
mov
ret
stos
xor
dec
and
jl
jb
movsb
sbb
aam
aaa
jnp
cmp
ror
sbb
pop
shlb
dec
fstl
aam
push
ds
push
xor
inc
jecxz
inc
xor
aad
ja
in
jle
lret
in
xchg
syscall
push
aaa
inc
orl
cmpsb
int3
movsb
loop
je
rcr
hlt
mov
mov
out
in
stos
std
sbb
mov
movl
test
shlb
jmp
outsl
sbb
dec
es
push
cli
inc
or
test
cmp
mov
cmc
sub
in
mov
insl
ss
push
xchg
dec
push
inc
inc
xchg
repz
cmpsl
or
aas
divb
rcl
mov
mov
add
mov
inc
pop
hlt
outsl
inc
push
pusha
xor
in
mov
push
cli
xor
adc
inc
fstps
or
mov
cmp
bt
cld
ret
lds
mov
ret
fbstp
cmp
adc
mov
fsub
sub
out
jae
mov
and
loope
add
push
les
adc
jge
mov
outsb
test
movb
ror
iret
cmp
add
or
sub
xchg
out
push
lods
inc
stos
xchg
das
sahf
mov
cltd
xchg
or
loopne
popf
imul
mov
pop
fisttpl
aam
pop
dec
xchg
mov
aaa
arpl
addb
sub
mov
xchg
inc
cwtl
ret
repnz
insl
faddl
or
jno
in
mov
js
cmpsb
push
push
ja
or
mov
fcomip
lods
push
jb
aam
mulb
shll
mov
push
stos
adcb
lods
pusha
andl
stc
addr16
stos
cltd
in
xor
jl,pn
inc
pop
dec
addr16
sbb
nop
mov
stc
or
fdivl
push
cmp
outsl
addl
cmpsb
cmp
out
mov
and
inc
xor
mov
push
cli
push
jno
pusha
push
dec
inc
inc
xor
mov
bound
inc
loope
jne
xchg
inc
lods
pop
stc
mov
xor
sub
push
and
xlat
mov
mov
aam
sti
imul
fsubrs
jg,pn
xor
inc
pushf
adc
or
mov
int3
add
in
scas
xor
push
mov
add
inc
and
cmpsb
jmp
loope
inc
sbb
pusha
sbb
pop
mov
movsl
add
mov
pushf
add
dec
repnz
sbb
cmp
xchg
cs
stos
inc
lahf
lods
xchg
fmull
xchg
pop
ljmp
push
mov
je
jno
push
and
fnstenv
or
pop
add
or
jecxz
cltd
loope
mov
icebp
sbb
inc
scas
and
movb
and
cmp
cmp
mov
sahf
dec
pop
inc
xchg
fmulp
fisubrl
movsb
mov
daa
out
pop
jecxz
in
mov
dec
sub
pop
aas
aas
fiaddl
subl
call
inc
xor
iret
xlat
scas
rorb
int
ja
test
out
out
dec
out
jns
cld
jns
imul
mov
cmpsb
push
cmc
mov
repnz
inc
mov
aad
mov
pop
cmp
pop
ja
add
scas
push
jl
jge
filds
fwait
add
lea
xchg
dec
inc
stos
aam
aaa
push
mov
ja
mov
lret
xchg
lea
and
fists
add
shlb
push
or
mov
leave
xor
mov
shrl
dec
jo
arpl
enter
rcrb
enter
inc
pop
mov
jp
jmp
mov
mov
jecxz
xchg
fadd
adc
fsubs
rcrb
jp
inc
or
mov
jbe
mov
int
iret
adc
fst
mov
ret
xchg
push
push
pop
divb
loopne
in
aaa
xchg
push
lods
sbb
pop
adc
push
out
mov
call
in
daa
sbb
dec
and
sub
cmp
in
sahf
fsts
jb
fsubrl
sub
je
mov
mov
and
mov
cmp
lods
sbb
mov
mov
push
sbbb
pop
or
nop
out
dec
dec
adc
fld
and
aas
dec
ja
mov
push
ljmp
push
pushf
mov
stos
cmp
sub
xor
jg
mov
sub
jo
push
sahf
aaa
hlt
jmp
test
add
inc
icebp
add
mov
retw
out
jl
dec
inc
push
cmp
inc
jmp
pusha
sarl
mov
xchg
mov
ljmp
mov
jecxz
addr16
pop
sbb
mov
enter
inc
sarl
and
push
xchg
test
leave
int3
lods
cmp
imul
stc
jo
push
test
inc
scas
test
pop
sbb
add
adc
mov
inc
inc
or
mov
mov
mov
outsl
enter
cli
push
fwait
aam
stos
mul
xor
subb
jp
imul
test
daa
outsl
mov
int3
ret
add
aam
pop
in
sti
leave
jns
les
and
mov
divl
out
aas
les
lds
fxch
loope
add
jo
cli
mov
xor
in
xchg
xor
out
fbstp
xchg
or
test
xor
and
xlat
adc
push
and
in
sub
dec
mov
or
xorl
sti
subb
je
pusha
imul
imul
idivb
xlat
inc
cmp
ja
mov
pop
lods
and
mov
dec
and
inc
nop
dec
das
dec
pop
cmp
shlb
add
mov
xchg
je
jle
je
es
or
dec
leave
outsb
je
mov
mov
mov
xor
stos
add
icebp
cltd
add
orb
sub
sti
pop
rolb
outsl
xor
insb
imul
cwtl
and
test
add
jne
cmpl
add
push
pop
xor
lock
lret
cli
in
cmp
outsl
andb
and
leave
mulb
bound
and
xor
add
adc
loopne
lock
mov
dec
nop
pop
pusha
lods
jo
inc
lea
and
xor
add
adc
loopne
lock
mov
dec
nop
pop
pusha
lods
lock
mov
int
fucom
sub
rcrb
insl
mov
orb
lods
jo
inc
lea
and
xor
add
adc
loopne
lock
push
shrb
in
xor
loopne
int3
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xchg
push
addl
mov
adcl
add
xor
and
push
xchg
inc
xchg
arpl
mov
mov
pop
repz
jecxz
add
add
xor
sub
xchg
arpl
stos
ja
addr16
pop
jmp
jecxz
or
and
insb
test
push
ret
sub
das
fnstenv
cli
and
push
mov
aad
xorb
add
mov
clc
mov
jnp,pt
pop
rolb
stos
cmp
clc
adc
iret
lret
sub
loop
pop
ret
xorb
sub
iret
loop
addl
push
dec
jae
pushf
imulb
dec
inc
sbb
inc
xchg
and
cmp
mov
cmpb
xchg
adc
xor
ret
pop
loop
cwtl
sub
cmp
jae
pop
lods
xchg
inc
jns
mov
push
pop
ds
inc
ljmp
adc
adc
lds
stos
les
mov
arpl
hlt
addr16
daa
sub
ror
aas
jmp
in
mov
xchg
adc
jae
arpl
mov
mov
pop
repz
cli
daa
or
sbb
sub
cmp
dec
xchg
pop
xchg
arpl
call
push
ja
addr16
outsb
mov
scas
outsl
movb
xchg
push
aam
loop
into
push
jmp
fcoml
shll
jnp
dec
repz
mov
push
pushf
mov
bound
add
adc
pandn
ret
pop
repz
jecxz
adc
add
xor
and
push
xchg
inc
xchg
arpl
mov
mov
pop
repz
jecxz
adc
add
xor
and
push
xchg
inc
xchg
arpl
or
shlb
rorb
jns
push
jne
cltd
pop
pusha
mov
ror
or
or
mov
dec
pushf
loopne
std
jno
and
mov
sub
decb
arpl
aas
scas
xor
dec
lcall
mov
or
sbb
pop
rcrb
jmp
xchg
and
push
sti
mov
mov
adc
inc
sub
sub
leave
loopne
add
repnz
jmp
dec
or
mov
jb
sbb
push
pop
sbb
sti
sbb
pop
jle
mov
add
cmp
out
sub
outsb
mov
stos
orl
aad
into
adc
or
mov
cmp
cmp
js
outsb
divb
ret
les
cmpb
call
popa
addr16
repz
fmull
sub
sbb
icebp
mov
rolb
inc
push
adc
mov
and
ljmp
js
jbe
adc
mov
and
xchg
jle
xchg
dec
sub
xchg
inc
add
and
push
mov
xor
xchg
icebp
out
ret
lret
sti
sub
sub
adc
ficoml
sub
int3
push
icebp
dec
negb
es
push
leave
cmp
repz
lea
leave
negb
inc
jns
mov
cmp
mov
out
lods
cmp
or
mov
leave
pop
push
jecxz
lret
cmp
nop
out
dec
js
orb
into
xchg
or
xchg
xchg
insb
loop
xor
ret
mov
into
mov
int
adc
pop
sahf
jle
push
cmp
sahf
stos
xchg
loope
dec
cmp
add
adc
leave
shl
fs
jb
outsb
aam
orl
outsl
mov
xchg
xchg
push
and
out
ds
cmp
push
test
cli
inc
ljmp
cmp
daa
movsb
cli
daa
into
sub
xchg
cmp
loop
and
xor
in
ret
pop
pop
repz
xor
mov
loope
insl
push
and
pop
int3
jmp
inc
xchg
jecxz
in
inc
fsin
jmp
aaa
cmp
repz
adcb
adc
pop
insl
dec
fs
dec
add
inc
and
add
jo
inc
sub
cmp
mov
stos
test
jno
adcl
addl
cs
insl
inc
xchg
and
icebp
xor
gs
loope
mov
test
fmuls
hlt
popa
mov
dec
jge
fbstp
adc
mov
jg
cmpsb
imul
jp
xor
push
ret
mov
fs
mov
aad
fistps
cmpsb
movsb
lret
and
jecxz
dec
sbb
es
mov
ss
fstpt
xadd
loop
jns
sarb
xor
xchg
aas
shl
mov
test
ret
push
pop
leave
ret
inc
or
pop
push
out
xorl
mov
frstor
sub
nop
popf
pop
mov
cmp
or
push
inc
ljmp
push
add
ds
sbb
jmp
pop
inc
into
int3
jmp
mov
ret
vpsllw
mov
aam
or
mov
pop
loop
fs
cmp
out
mov
jo
ret
mov
cmp
js
push
cmp
and
sub
jnp
sub
in
cmp
fsts
inc
decl
dec
cld
add
lret
mov
sbb
mov
inc
inc
test
mov
test
aad
xor
movsb
out
aam
xchg
or
pop
pop
push
cmp
inc
xor
stc
lahf
pop
popf
pop
shl
loope
fdivr
test
imull
loopne
pop
and
cs
es
ror
in
jl
sub
mov
jb
enter
inc
jecxz
and
xlat
mov
xor
xchg
mov
and
cwtl
fcompl
jmp
mov
pop
stc
in
data16
jmp
xor
pop
fldt
mov
cwtl
pop
popa
xchg
or
and
cs
lods
enter
test
in
stos
add
xchg
sbb
stos
js
loopne
pop
adc
inc
pusha
fsubl
jae
sub
sbb
lahf
insl
xchg
imul
jbe
push
mov
mov
dec
inc
jno
push
pop
cmpsb
xor
xchg
or
mov
dec
mov
jbe
push
outsb
mov
add
cmpsl
push
ror
add
popa
roll
mov
jnp
xchg
xchg
sbb
repnz
mov
mov
inc
jecxz
sahf
jb
mov
repz
out
mov
adc
push
lret
mov
filds
sub
sub
push
repnz
cli
scas
add
xor
inc
clc
adc
sbb
dec
mov
pop
sub
dec
add
lret
inc
mov
cs
jmp
ja
pop
sbbb
out
repnz
or
lods
lea
imul
inc
sti
into
insl
lahf
xor
jle
and
adcb
mov
cmp
cld
push
and
sub
iret
imulw
xor
mov
push
sub
xchg
jo
dec
cmp
sbb
dec
je
cld
adc
jae
leave
out
pop
nop
or
or
adc
and
add
inc
pop
push
xlat
sbb
or
in
cs
shll
cmp
mov
mov
mov
or
push
pusha
jo
cmp
int3
or
ffree
pop
fdivrl
loop
add
sub
or
mov
add
ror
pop
insb
sub
movsl
popa
xchg
jl
lods
mov
std
mov
rorl
lret
xor
push
jo
mov
out
pop
push
outsb
or
in
sahf
cmp
fchs
jge
jae
loopne
mov
adc
adc
mov
fstpl
inc
notb
cmpsb
inc
dec
sbb
dec
cmp
xchg
rcr
mov
and
jnp
cmpsb
sarl
or
or
and
pop
into
mov
lcall
push
sbb
pop
xchg
aaa
sub
into
sub
jp
enter
lahf
dec
mov
xor
subb
mov
mov
lods
cld
sbb
adc
icebp
ret
stc
sub
xchg
jnp
je
push
xchg
jg
mov
fadd
fadd
inc
shlb
fisubl
inc
int3
adc
add
cmp
sub
pop
mov
sahf
test
aas
jge
ret
xorl
sbb
insl
jmp
xorb
daa
adc
dec
cmc
test
mov
pusha
xchg
mov
jne
push
dec
imul
cltd
notb
push
inc
aas
pop
loope
add
enter
jno
mov
insl
sub
inc
mov
and
push
pop
andb
and
je
push
and
shlb
pop
xchg
gs
or
movsb
ss
fbstp
cmp
and
arpl
mov
cmp
push
jns
cmp
adc
jle
in
cmpsl
xlat
mov
sub
sbb
out
sti
mov
inc
or
adc
les
mov
xor
cmp
mov
mov
pop
xchg
lods
popa
lret
xor
sbb
pop
lret
push
xorb
aad
out
lret
jns
pop
xchg
mov
add
mov
cmc
rcl
push
and
mov
push
sub
popa
stc
in
js
lcall
add
jmp
push
cmp
iret
mov
clc
lahf
jp
ret
mov
jl
ljmp
into
jb
repz
pop
jb
icebp
repz
mov
mov
add
cs
push
test
mov
aaa
ss
gs
pop
cmp
mov
xorl
jle
addr16
pop
mov
mov
pop
push
cmp
js
mov
sub
adc
sub
sbb
popa
je
outsb
or
mov
push
fprem1
push
fwait
int
xor
inc
rclb
jge
das
jle
cmpsb
cmpsl
fisttpll
or
fstpt
popf
mov
mov
push
dec
push
mov
adc
mov
pop
outsb
add
mov
push
loopne
mov
addl
lret
incl
dec
shlb
es
jns
sarb
cs
sarb
fs
jb
test
adcb
and
bound
cpuid
ret
jge
mov
iret
jb
xlat
dec
lea
and
pop
xchg
inc
cmc
stos
and
jl
in
xchg
dec
out
mov
pop
mov
jecxz
lret
add
xlat
inc
pusha
aas
pop
arpl
push
dec
aam
std
add
test
dec
inc
jae
loope
and
xor
test
and
pushf
aam
sbb
lods
adc
sub
lods
add
and
jo
cli
aam
stos
push
enter
and
jmp
cmp
int
jmp
add
pop
add
sbb
insl
cmpb
aaa
inc
xchg
add
cltd
out
ja
stos
inc
jbe
mov
sub
shr
out
xchg
jne
inc
xor
mov
fidivrl
mov
jp
inc
jmp
fwait
mov
and
fbld
popa
sti
add
pop
ret
clc
and
push
jae
outsl
xor
or
cltd
packssdw
movsb
jmp
fisttpl
inc
mov
xor
andb
jecxz
pop
mov
lahf
inc
daa
and
and
incl
xchg
lods
in
sti
lock
push
std
jb
out
enter
fldt
les
sbb
pop
mov
inc
add
jp
aam
mov
ds
add
xor
jg
notl
mov
pop
pop
sbb
or
dec
insl
outsl
xchg
sbb
xor
cmc
xlat
ds
push
mov
aam
insb
lahf
mov
sbb
test
rcrl
adc
push
xlat
nop
jge
es
mov
push
popa
fimull
mov
popa
xchg
iret
fmuls
js
sbb
out
popaw
pop
imul
bound
psllq
pop
add
loope
shlb
das
je
xchg
dec
sub
stos
push
fidivl
arpl
push
push
jl
test
fidivs
cmpsl
push
das
sarb
repnz
lds
xor
and
jp
setne
into
sub
mov
cmp
jge
xlat
cmc
js
and
push
jbe
ja
dec
dec
mov
dec
cld
ljmp
sbbb
push
xchg
mov
pop
icebp
mov
std
repz
in
inc
pop
gs
sbb
mov
mov
cltd
fildll
je
mov
mov
mov
or
jecxz
pop
shufps
mov
adc
pushf
cmpsl
xchg
adc
dec
mov
adcl
outsl
dec
fldl
and
inc
cmpsl
in
adc
cmp
push
out
push
les
jle
inc
adc
testl
push
movq
cli
lret
mov
aam
jle
or
xchg
lret
aam
push
jne
dec
movsb
dec
sub
daa
xor
cli
jle
mov
xchg
lcall
xor
jbe
push
dec
incb
jle
mov
xchg
aad
cmp
xor
push
idivl
push
jp
sarl
aam
imul
ja
sub
pop
push
push
mov
loop
out
mov
into
jnp
arpl
ja
adc
stos
adc
dec
lret
add
fucompp
jmp
adc
add
pop
add
mov
loop
push
and
mov
mov
xchg
cwtl
iret
mov
in
jo
sub
hlt
sahf
mov
mov
leave
stc
cmovge
and
gs
pop
pushf
lret
sbb
test
int3
dec
cli
mov
push
xchg
inc
sahf
jne
ja
stc
xor
cmc
mov
xor
les
adc
cmc
push
mov
push
icebp
pop
mov
hlt
mov
push
push
fwait
aam
pop
inc
inc
add
inc
cmp
aaa
xchg
scas
cmp
mov
mov
mov
mov
mov
ds
mov
int3
push
out
movsl
mov
scas
mov
les
jns
add
test
jns
xchg
es
out
ds
fsts
inc
clc
or
jmp
and
repnz
pop
push
cmpsl
stos
xchg
dec
dec
adc
mov
push
loope
mov
ss
popf
subl
sub
mov
imul
or
sub
fadd
jle
stos
adc
mov
sti
xor
jecxz
popa
mov
iret
mov
add
popa
test
cmp
aaa
scas
mov
in
addl
mov
ret
ja
mov
ret
movsl
aad
push
cmp
fimuls
or
cmp
fimull
pop
insb
jbe
sub
pop
movsl
mov
jge
sahf
xchg
scas
shrb
pop
lds
ja
push
mov
push
and
imul
aam
das
ret
in
jl
lcall
lret
int
daa
imul
xor
or
push
test
gs
jmp
lock
ss
lret
sbb
sbb
subb
mov
and
push
pop
and
mov
mov
inc
popf
pusha
jne
ds
pop
xchg
jp
mov
cmpsb
pop
push
outsl
adc
ret
cs
pop
dec
cmp
mov
xor
dec
inc
and
xchg
mov
sbb
dec
popa
jne
or
cmpsl
pop
push
pop
repnz
mov
imul
cltd
push
cmpsl
mov
ficoml
jl
jecxz
push
xchg
sub
or
push
mov
shrd
jno
inc
lret
loop
jp
ljmp
fbld
xchg
dec
adc
xchg
repz
pop
dec
mov
mov
jno
adc
cmovae
cmp
pop
ret
inc
repz
negb
gs
xchg
add
or
add
lcall
outsb
xor
pop
rorb
es
xchg
jecxz
fisttpll
add
pop
dec
and
adc
ss
outsl
push
std
sbb
xchg
add
icebp
std
adc
scas
dec
stc
jecxz
pcmpeqd
dec
or
push
outsb
gs
pop
shr
mov
in
inc
mov
inc
xorb
frstor
ss
dec
mov
xchg
adc
test
cmp
pop
add
push
pop
mov
xchg
inc
adc
cmp
nop
ret
movsb
or
out
ds
mov
or
pop
jle
xor
ret
cld
cmc
push
lods
addl
xor
in
push
cmp
loope
fimull
jo
jb
and
sbb
mov
lea
dec
pop
and
mov
stc
cld
push
shll
out
xchg
mov
hlt
and
bound
adc
xor
inc
bound
popa
cmp
cmp
jmp
and
pop
lret
jbe
incb
stos
push
jle
sub
inc
lret
xor
add
aaa
inc
sbb
std
hlt
dec
sbb
push
lret
lock
test
imul
push
and
push
inc
sti
mov
mov
and
mov
push
add
pop
xchg
aad
fnstcw
sub
insb
adc
pop
shr
loop
inc
in
test
adc
xchg
or
jno
jl
mov
xor
inc
outsb
ja
mov
mov
call
sub
mov
sbb
ljmp
or
orb
xchg
dec
aas
ljmp
rclb
pop
or
hlt
lcall
test
dec
dec
pop
cmc
pop
iret
or
aaa
out
xchg
or
loopne
dec
mov
fdiv
imul
jae
pusha
mov
xchg
jo
stos
sahf
mov
sbb
or
es
ror
xchg
addr16
push
jns
xor
das
xchg
lock
xor
jg
jno
pop
test
movsb
xchg
out
scas
adc
xor
pop
add
imul
jge
cmp
movsb
pop
xchg
and
jno
sbb
pop
pop
adc
xlat
pop
push
insb
dec
lods
or
hlt
psrad
lea
orl
pop
adc
xchg
js
loopne
mov
movsb
pop
sahf
ljmp
adc
and
sub
xor
push
mov
mov
mov
inc
xor
mov
ss
fisubrl
or
out
xchg
loope
fwait
mov
cltd
outsb
cmpsl
push
add
ljmp
lds
pushf
cmpsl
and
sarl
push
adc
jb
xchg
sub
or
pushf
cmpsb
outsb
cmp
pop
sahf
pop
movsl
xsha1
cmpsb
mov
mov
xchg
xor
pop
pop
aas
ja
call
mov
ret
stos
and
call
ljmp
dec
sarw
adc
xchg
or
adc
xchg
sbb
push
jmp
and
filds
stc
or
or
xor
mov
cmp
in
jbe
mov
sbbl
pop
ret
outsb
xor
jmp
in
outsl
lahf
xor
xor
mov
testl
or
stos
sbb
add
nop
les
mov
push
or
js
gs
jle
movsb
scas
jbe
ja
orl
mov
dec
fstpl
mov
movsb
jnp
push
lret
clc
or
push
or
push
stc
sbb
cld
and
repnz
adc
fdivs
pop
lcall
sub
lock
dec
jo
sahf
mov
in
outsl
rcrl
adcl
cmp
bound
or
adc
cmp
int3
xchg
mov
mov
sub
test
sub
jno
int3
sahf
aam
ret
and
dec
pop
xor
in
push
mov
stos
mov
data16
pop
lods
mov
out
addl
lea
mov
shl
scas
cmp
movsl
cmpsl
popf
dec
xchg
mov
mov
mov
xchg
mov
hlt
xor
mov
aam
pusha
sarb
cmc
mov
inc
adc
and
ds
xlat
outsl
stc
incl
insl
pushf
pusha
dec
add
stc
rol
sub
movsl
popa
outsl
pop
in
pop
push
int
addl
int
xchg
sub
jo
lahf
repz
sub
xor
ffreep
push
enter
or
repz
cli
adc
jns
push
add
shll
mov
mov
hlt
adc
das
sub
shlb
fucomp
shll
int
fcomps
adc
ret
mov
cmp
inc
xor
push
mov
lret
sbb
jp
incb
in
push
sahf
jne
inc
pop
outsb
neg
lahf
xchg
push
jno
dec
gs
sbb
mov
or
pop
add
ss
pop
xchg
add
shll
cmp
in
inc
add
push
movsl
push
jnp
xchg
xchg
sbb
xchg
call
mov
push
mov
add
lds
sbb
bswap
jns
push
call
pop
pop
push
inc
lods
pop
imul
call
xchg
mov
ret
mov
add
imul
lods
inc
ret
dec
popf
arpl
sbb
mov
push
pusha
aas
mov
pop
xor
lock
xchg
mov
jae
sub
imul
cli
in
add
clc
add
jle
xchg
dec
dec
jmp
loop
pop
sub
xchg
imul
or
int
and
push
leave
mov
mov
xlat
or
daa
ds
imul
inc
sub
jmp
or
xchg
jle
xchg
enter
xlat
sti
pop
mov
sbb
jo
mov
mov
mov
in
inc
enter
sub
mov
and
jle
mov
cmp
lea
shlb
popf
repnz
popf
scas
xchg
jecxz
rcrb
insl
addr16
adc
mov
xor
jb
or
mov
sbb
stos
cmpsl
test
cld
or
jmp
cmpsb
sub
pop
orb
jecxz,pt
adc
inc
lea
sti
mov
jo
pop
fiadds
xor
movsl
inc
aaa
in
jnp
push
sarb
xchg
pop
xchg
mov
fidivl
fsubrl
inc
push
mov
loopne
xor
pushl
stc
or
lahf
inc
push
push
out
jg
cmpsb
mov
loop
sub
cmpsb
scas
xor
sbb
cmp
sarb
adc
aad
ret
xchg
imul
fwait
add
xchg
dec
jns
mov
cld
mov
xchg
or
ljmp
xor
push
pop
push
jl
xchg
sbb
xor
popl
bound
cmp
imul
jb
mov
pop
cmp
sti
push
imul
mov
loope
jge
mov
popa
mov
imul
std
dec
adc
jle
leave
fwait
ja
cmp
xchg
addr16
jge
imul
jp,pt
push
mov
lret
test
stos
mov
cmp
inc
mov
cmpb
rcrb
and
pop
dec
iret
sbb
sub
paddsw
inc
icebp
stc
lea
jmp
jae
rcrb
insb
je
fs
and
mov
insl
xchg
test
pop
ret
pop
data16
or
push
mov
cmpsw
xor
lea
xchg
jecxz
js
sahf
test
scas
jp
test
lock
mov
jle
push
push
mov
mov
cs
sub
ja
cmpsl
shr
data16
add
hlt
push
inc
out
mov
rcl
cmpsl
mov
cwtl
std
fldl
or
ret
jnp
shlb
cli
sbb
inc
add
pop
pop
adc
dec
add
aas
icebp
mov
mov
jnp
out
mov
mov
sub
jne
xchg
xchg
jl
xchg
sbb
mov
or
mov
or
and
aaa
cwtl
dec
and
cmpsl
sub
mov
pop
inc
adc
mov
lretw
mov
xchg
cmp
sub
adc
jecxz
add
xchg
and
inc
repnz
notl
cmp
mov
xor
stos
mov
jbe
lret
roll
or
lahf
jle
push
fdecstp
mov
shlb
fisubrl
cmpsl
test
push
andl
cmp
sbbl
dec
fdiv
aad
jne
jmp
inc
sub
fdivrs
pop
aad
sub
jp
ja
outsb
stc
movsb
lret
push
mov
mov
movsb
sti
jae
xchg
vmptrld
pop
nop
push
sbb
jb
inc
cmp
mov
or
shrl
stos
pop
arpl
push
mov
nop
adc
sbb
mov
loope
ret
idivb
adc
push
inc
sub
stos
sahf
mov
fucomip
adc
sub
leave
std
pop
mov
mov
pop
and
pop
push
loopne
mov
pop
es
cli
xchg
scas
push
rcrl
cmp
inc
mov
pop
ret
pop
repz
jecxz
adc
add
xor
and
push
xchg
inc
xchg
arpl
mov
mov
pop
repz
jecxz
adc
add
xor
and
push
xchg
inc
xchg
arpl
mov
mov
pop
repz
jecxz
adc
add
xor
and
push
xchg
inc
xchg
popa
cmpsl
xchg
push
addl
pop
ret
pop
jae
arpl
in
xlat
cld
insl
cltd
mull
nop
and
lret
js
dec
pushf
pop
int3
int3
int3
int3
int3
lock
mov
enter
mov
divb
bound
pop
cmp
cmp
sub
pop
or
fcomps
test
cwtl
and
push
push
jnp
dec
sbb
mov
mov
enter
test
cwtl
int
sub
dec
cmp
inc
jle
je
jge
jg
mov
cwtl
mov
lods
loop
push
inc
stc
fwait
and
ret
add
add
mov
pop
inc
out
int3
stos
clc
aaa
clc
mov
add
add
push
pop
pop
sub
pop
daa
call
pop
shld
data16
dec
sub
imul
aas
adc
xchg
popf
les
stos
std
push
adc
and
push
xchg
or
sub
or
or
inc
pop
shll
out
lds
leave
lret
xchg
jge
cmpsl
sbb
imul
jo
call
lds
rclb
and
adc
add
js
insb
cmc
sub
push
stos
sbb
push
mov
enter
test
cwtl
ret
mov
js
push
jb
bound
dec
sbb
fprem
fists
mov
xchg
fmul
std
mov
pop
or
jno
or
dec
push
outsl
das
push
insl
stos
xchg
mov
stos
sahf
sti
xchg
in
cmpsb
iret
lahf
cmpsb
sub
outsl
sbb
pop
or
ret
mov
lcall
cwtl
fimull
or
dec
push
jp
dec
sbb
stos
clc
mov
enter
test
cwtl
fimull
or
dec
push
jp
dec
sbb
stos
clc
jns
shll
insl
pop
or
icebp
adc
cmpsl
bound
dec
cmp
xchg
test
popf
rcl
cmp
adc
inc
hlt
ficoms
mov
mull
sub
rcll
add
frndint
or
lock
nop
sahf
xchg
jecxz
jae
lcall
mov
mov
cmp
cmp
dec
pop
xor
dec
js
and
xchg
arpl
jecxz
subb
rcr
call
cwtl
add
fldl
lods
repz
cmpsb
lods
ret
pusha
aam
and
lds
scas
lret
jecxz
inc
xchg
fsubr
in
mov
lahf
imul
mov
outsl
bnd
cs
movsl
xchg
jge
inc
xchg
mull
lods
sub
mov
push
cwtl
test
jge
dec
int3
aas
adc
mov
lods
stc
loopne
dec
pop
xor
sub
lods
fistps
mov
test
ja
rcrl
ja
dec
mov
fwait
inc
mov
ret
mov
mov
popa
cmp
fdiv
mov
sub
push
icebp
push
arpl
negb
mov
xor
jb
pop
mov
shl
and
test
sub
sub
sahf
xor
xor
mov
ret
in
ss
jne
popa
push
std
add
and
cli
cltd
cmp
mov
mov
negb
lods
add
in
push
mov
js
cmpb
mov
je
mov
test
testl
add
movsb
std
sahf
rcrl
test
ds
add
in
fwait
cmpsb
xor
mov
mov
arpl
sub
int
jne
mov
or
int3
cmp
rcll
mov
push
pop
test
mov
push
subl
inc
mov
leave
nop
sub
int3
ds
jl
aam
call
bound
dec
out
andl
push
xchg
sar
in
mov
popl
ffreep
sahf
push
sarl
xor
lahf
in
cld
and
aaa
movsl
test
inc
popa
into
dec
push
pop
je
jbe
das
mov
aam
ljmp
push
jecxz
jnp
stos
stos
push
jle
mov
in
and
push
mov
lcall
push
pop
mov
cmpsl
andl
call
jp
ret
mov
out
insb
bound
rorb
pop
jns
fcompl
mov
rcrl
push
fsts
es
aaa
out
loopne
xchg
decb
jmp
out
fisubrl
imul
push
dec
cmp
dec
jmp
iret
xor
mov
push
test
bound
jns
sahf
ds
cld
sbb
daa
xchg
repz
add
stos
std
cmpsl
jo
pop
fisubrs
addr16
xlat
mov
push
rol
incl
movsl
cld
lock
mull
and
fmuls
negb
jb
aam
sbb
pop
bound
stos
cmp
jns
jae
repz
cltd
les
jb
adc
imul
mov
xor
outsl
adcb
dec
and
sub
jle
scas
test
movsl
fwait
pop
xlat
mov
push
pop
and
movsb
mov
dec
test
out
dec
sbb
jecxz
xor
pop
fdivrs
imul
aam
out
xchg
orb
adc
push
add
push
pop
lret
sub
sarl
fidivrs
hlt
jmp
int
test
jno
leave
mull
dec
or
shlb
mov
insl
cld
dec
rcl
aam
test
mov
sub
and
sub
ljmp
xchg
pop
xorl
fstpt
inc
bound
inc
jae
pop
and
das
dec
jno
xor
jecxz
icebp
enter
nop
push
test
mov
jp
jge
xor
ja
mov
and
out
out
in
rcrb
sub
inc
mov
pop
bound
hlt
mov
aas
rol
mov
int3
push
cmp
pop
jp
lret
pop
cmp
jne
adc
bound
add
popf
add
out
icebp
fisubrs
jle
dec
push
push
or
mov
ficoms
das
stc
mov
dec
dec
inc
lock
stos
add
jle
jns
stc
dec
jp
dec
mov
dec
jle
movsl
cmp
mov
xchg
cmp
xor
fsubrl
add
dec
orl
mov
push
out
jae
out
pusha
xchg
mov
xor
sub
cli
addb
sub
or
cmpl
popf
sub
xchg
mov
rorl
negb
push
add
fstl
stos
jge
ret
cli
nop
rcrl
jp
sbb
sbb
cmpsb
je
test
add
and
fidivrs
adc
mov
and
inc
add
jne
dec
cli
repnz
stos
push
shrl
cs
mov
ja
cmc
sbb
push
mov
pop
out
push
test
mov
mov
adc
nop
stos
push
imul
cmpsl
lret
inc
pop
jg
cmp
inc
test
fcoml
push
add
mov
test
lods
int3
cwtl
js
pop
stos
mov
std
inc
sbb
jne
or
out
push
fcoms
dec
jmp
in
sub
testl
or
ds
pop
push
call
jle
in
dec
add
pop
cmp
fs
std
adc
imul
in
and
fs
aaa
push
jns
cltd
xor
testb
stos
inc
dec
mov
pop
and
push
cs
push
mov
cltd
mov
jbe
enter
mov
ret
xor
xor
push
mov
sbb
test
icebp
cmp
loope
push
pushf
dec
jbe
and
lcall
add
pop
pop
mov
pushf
cmpl
shll
jg
and
push
fisttps
pop
sbb
popa
lods
out
addb
xchg
xor
sub
aas
addb
lods
sbb
lea
mov
cmpsb
out
fdivr
push
inc
push
lock
push
sbb
nop
push
test
push
sub
sarb
sbb
mov
sbb
pop
pop
scas
sub
dec
aam
imulb
mov
xchg
aad
cmpsb
and
sub
pop
pop
mov
test
xor
popa
xchg
jmp
push
int3
test
fwait
adc
loop
xchg
cmp
loopne
outsl
cmp
mov
sbb
jecxz
ficoms
add
add
insb
dec
add
mov
cmp
insl
test
xor
in
push
sub
push
mov
xchg
jbe
lods
sbb
mov
mov
ja
js
jno
sub
or
jmp
push
mov
mov
adc
mov
and
jno
jge
mov
push
push
dec
cmpsl
in
push
or
movsl
or
cmp
daa
cltd
arpl
mov
outsb
mov
cmp
lods
cmp
ret
push
mov
lea
jbe
dec
pushf
xor
std
mov
iret
das
jne
cmc
fsubrs
push
inc
pushf
outsl
or
outsl
inc
pop
mov
mov
cmpsl
out
ja
cmp
outsl
sub
ret
ret
add
out
mov
push
cmp
and
hlt
jp
sbb
or
or
or
shll
jmp
nop
mov
clc
lret
pop
mov
jo
dec
jle
inc
aam
xchg
insl
inc
xchg
cmp
push
xor
lea
cmp
pushl
jne
mov
mov
jle
cwtl
icebp
xchg
data16
jb
dec
inc
xchg
dec
sbb
cmpsb
cmpl
push
or
dec
push
mov
loop
xchg
pop
inc
mov
icebp
fstpt
sti
loopne
adc
inc
lcall
push
cld
add
cwtl
movsb
dec
or
and
or
pusha
xor
jae
dec
js
pop
lcall
scas
push
mov
fiaddl
pop
in
sub
push
loopne
mov
clc
fldenv
adc
pop
clc
scas
shlb
add
cmpsb
inc
nop
enter
rorl
mov
loope
daa
mov
mov
pop
lods
jne
push
outsl
lea
push
cltd
mov
mov
xchg
insl
xor
daa
push
js
mov
xchg
popa
inc
sbb
icebp
dec
cltd
push
push
inc
mov
add
mov
sub
mov
cmp
pop
cmc
adc
adc
fs
test
icebp
pop
sbb
mov
aad
sbb
loope
pop
xor
test
pop
xchg
and
in
pop
push
mov
pop
push
adc
jnp
push
or
cld
test
mov
movsb
mov
xchg
test
mov
loope
gs
sahf
sahf
add
repz
mov
stos
pusha
pusha
jns
pop
xor
adc
adc
xlat
cwtl
das
xor
or
sti
adc
sbbl
fildll
sub
scas
xchg
shll
add
pop
mov
bound
xchg
ss
faddl
loopne
cmp
pop
push
int
cmc
in
push
outsl
lahf
dec
in
adc
icebp
xchg
lods
xor
pop
jno
daa
dec
add
push
hlt
repnz
jnp
aas
xor
or
imul
bound
xchg
adc
ja
dec
and
mov
out
not
daa
mov
outsl
jmp
mov
cmp
push
dec
scas
dec
pop
add
jns
dec
cmp
dec
mov
jae
inc
mov
gs
add
sub
and
shrb
loopne
xchg
out
dec
imul
repnz
cltd
xor
mov
sub
dec
xor
jl
dec
xchg
insb
out
pop
repz
pop
call
add
fdiv
leave
addr16
mov
pslld
mov
push
sbb
jle
cmp
xorb
xchg
xchg
fnstsw
sti
xor
lahf
fwait
sar
int3
mov
pop
pusha
cmp
xor
adc
fbld
cld
popa
mov
xlat
xor
mov
mull
and
mov
mov
into
dec
test
pop
add
insl
dec
xor
pop
mov
addr16
aas
sub
mov
mov
jge
push
inc
hlt
imul
call
xchg
addb
rcrb
cmpsb
push
leave
inc
pop
mov
mov
into
lret
imul
adc
ficoms
cmpsb
mov
pop
xchg
js
push
pop
aad
xchg
test
test
sub
pop
imul
imul
clc
setbe
repnz
es
popf
popf
mov
jecxz
shufps
jmp
pop
lock
test
push
icebp
insb
mov
sbb
and
push
pop
call
inc
testb
jbe
out
adc
fstpl
fidivl
or
xchg
xchg
jle
aam
or
in
cmp
xor
pop
das
out
outsb
cmp
adc
add
push
xor
sti
xor
stos
stos
push
add
ljmp
inc
nop
scas
scas
les
gs
sbb
out
jecxz
adc
lock
or
and
mov
cmp
ja
push
ljmp
push
mov
cmc
cmpsl
sub
xchg
push
loope
icebp
test
xchg
cmpsb
popa
ja
push
setno
and
jnp
fwait
mov
fadd
add
add
inc
rorl
and
adc
or
bound
xlat
ss
cld
int
and
js
pop
add
stos
cmp
js
repz
inc
add
add
stos
add
xor
fwait
sbb
cwtl
mov
je
jno
push
dec
xchg
or
loope
clc
jns
lret
push
shll
aam
fistl
inc
mov
xchg
jnp
stos
test
pushf
push
popa
or
leave
repnz
xor
mov
mov
arpl
xchg
arpl
sub
inc
mov
adc
int3
sub
mov
xlat
add
mov
ret
pushf
shll
mov
pop
jl
pop
cmp
inc
out
dec
or
sub
push
push
xchg
aad
xchg
aam
fmull
les
cs
jle
jbe
gs
iret
or
xchg
icebp
test
jne
fisubrl
mov
xchg
inc
jnp
mov
cmove
lods
xor
adc
sbb
ficoml
test
imul
leave
cmp
mov
gs
push
mov
imul
int3
xchg
dec
in
icebp
movl
push
std
jne
int
sahf
sbb
orl
les
in
jl
into
cmpl
inc
jae
xchg
scas
jns
sbb
scas
lahf
aam
cmp
mov
mov
mov
addr16
xlat
imul
push
and
fistpll
jl
les
add
push
pushf
shll
js
cmp
xchg
and
aaa
xchg
daa
xor
incl
fisttpl
outsb
jne
out
out
insb
aad
dec
mov
mov
and
xor
je
xchg
jle
sahf
ljmp
ljmp
adc
mov
mov
movl
push
cmp
xchg
cmp
scas
push
fisttps
jmp
stos
add
fcoms
sbb
add
mov
cmp
jbe
pop
pop
cltd
cs
or
xor
xchg
xchg
sar
add
xchg
enter
sub
stos
cwtl
lcall
or
out
sarb
sti
pop
sti
and
and
pop
cmp
in
adc
jecxz
pop
fmull
or
test
pusha
out
dec
xchg
ss
add
and
push
mov
fnstsw
and
jecxz
stos
rep
imul
bswap
pop
jbe
inc
inc
mov
or
cvtps2pi
mov
pop
xchg
sub
iret
fdivs
xchg
inc
cs
dec
cmpsb
mov
js
arpl
arpl
push
lods
scas
mov
imul
cmp
test
add
pushf
stc
adc
negl
cs
mov
xor
mov
jae
test
push
ds
in
inc
in
popa
stc
cmp
popl
mov
sbb
xor
or
sub
add
imul
ret
jno
add
push
cmp
aam
pop
daa
pop
jle
fildll
les
pop
jo
and
lock
adc
sti
sub
push
fisttpll
add
js
mov
dec
data16
push
les
jb
out
shrl
sbb
fsubrl
into
sub
stc
and
jecxz
daa
ret
xor
cmpsb
mov
imul
jmp
mov
ret
pusha
inc
ficoms
jecxz
sahf
outsl
inc
mov
test
dec
xor
pop
leave
sbb
mov
into
clc
and
dec
mov
mov
add
test
xor
add
push
daa
sahf
loop
dec
sbb
pop
ret
mov
out
scas
ss
xchg
mov
mov
pushf
cwtl
mov
aas
loopne
rol
push
js
cs
push
sub
push
xchg
jb
outsl
lods
sbb
push
push
mov
jecxz
xchg
xchg
jns
mov
xchg
lret
insl
or
mov
or
inc
cmp
jbe
mov
add
mov
mov
push
xchg
xor
outsb
xchg
push
cmpsl
arpl
gs
lret
push
sbb
xor
add
mov
lods
jbe
shl
or
cmp
xchg
repnz
addr16
mov
dec
pop
sbb
cmp
je
in
out
lods
cmp
add
std
sahf
je
push
rcll
adc
lods
pop
jnp
push
rcll
jl
sar
xor
adc
push
in
stc
xor
fistps
mov
jno
orb
add
mov
xor
inc
ret
pushf
iret
pop
dec
xchg
cwtl
into
sub
and
sbb
ret
and
int
adc
fcompl
adc
cmp
cltd
and
enter
into
imul
stos
movsb
jns
pop
fists
out
cs
fidivs
orb
test
pop
mov
rolb
lods
xorl
add
inc
call
and
cs
xor
aam
push
fdivl
scas
mov
rorb
mov
cmp
popa
pop
xor
mov
fldcw
sub
jbe
movsb
into
pop
dec
sub
xlat
data16
or
xor
es
or
push
pop
lret
or
cwtl
icebp
fsubrl
dec
pop
idivl
cmp
pushf
aad
inc
push
in
shll
and
hlt
sbb
pop
inc
add
rcr
test
mov
test
jmp
mov
pop
xchg
test
enter
ficoms
or
pop
ja
xlat
frstor
movsl
add
or
fs
scas
fsubrs
xor
xchg
cmp
jbe
mov
or
mov
call
js
dec
ret
inc
mov
sub
jle
les
xchg
movsl
test
and
cli
repnz
mov
sub
cld
imul
jae
adc
lret
repnz
fs
dec
jb
fildl
pusha
push
stc
mov
add
xchg
fxch
test
adc
mov
pop
sbb
stos
adc
and
std
mov
jno
aad
test
jle
or
jp
and
cltd
ds
and
sbb
pop
out
inc
notb
adcb
push
enter
adc
fstp
jg
jnp
ficoml
dec
popf
xchg
pop
xor
jecxz
in
je
mov
xchg
aam
adc
xor
filds
test
aad
pushf
xchg
and
jae
ret
sbb
inc
scas
outsb
data16
pop
xchg
scas
fwait
xor
imulb
jns
lods
jmp
lds
pop
sbb
in
push
xchg
push
pop
jp
int
popl
push
or
adc
and
push
fwait
mov
imul
stos
daa
jl
pop
xchg
xchg
aas
cmp
cmpsb
or
shll
stos
push
punpckldq
jl
mov
popa
xor
aaa
push
xchg
xor
test
sbb
lea
xor
mov
xchg
es
hlt
enter
add
jle
aaa
adc
push
decb
inc
jno
push
lret
mul
sub
cmp
shll
inc
push
out
loop
xchg
push
in
int3
and
arpl
jle
sub
mov
cltd
push
loop
xchg
movsb
and
and
xchg
fisttps
or
call
or
push
mov
hlt
dec
push
jge
push
xor
out
test
cs
dec
test
push
cmpsl
mov
adc
lds
aam
sarb
dec
mov
incl
push
push
jbe
fcmovb
int
syscall
inc
loop
push
mov
and
in
dec
mov
lret
sbb
popf
mov
jno
add
dec
mov
push
hlt
int3
data16
mov
stc
insb
imul
adc
mov
js
adc
add
pop
add
jae
pop
mov
cmp
xchg
mov
mov
pusha
repz
xchg
xchg
adc
push
pop
insb
fdivrs
pop
xchg
into
sub
outsb
pop
cli
jle
test
test
stos
repz
xchg
pushf
push
mov
mov
movsb
mov
sbb
xlat
outsl
sbb
adc
daa
cmp
repnz
cwtl
test
jecxz
and
ljmp
or
cmovg
lods
dec
ljmp
jecxz
into
sub
ret
push
shll
stc
sub
inc
mov
cmp
mov
jns
in
sub
inc
pop
jae
mov
mov
icebp
cmp
xlat
and
fwait
outsb
xchg
fimull
lcall
mov
dec
pop
jp
pusha
nop
lods
int
movsl
inc
mov
clc
sub
jl
mov
jb
pushf
popf
fwait
jg
inc
stos
pushf
insl
insl
ss
fimull
repnz
clc
arpl
sub
xchg
sbb
xchg
cmp
lret
add
aad
sbb
dec
fidivrs
jo
mov
roll
mov
test
in
movsl
push
add
mov
jbe
xchg
mov
mov
std
dec
mov
or
cs
adc
jecxz
arpl
add
repz
notb
lret
test
and
cmc
pop
xchg
mov
adc
insl
xchg
sbb
stc
pop
idivl
and
pop
es
pop
out
stc
jp
and
jp
sub
pop
in
pop
clc
pop
sbb
push
cmp
push
pop
shl
and
dec
xchg
mov
fxch
or
fnstcw
movsb
lcall
shrb
aaa
push
xor
xchg
push
cmc
and
adc
sahf
ror
sub
sahf
sbb
cmp
or
cwtl
dec
imul
out
stc
sub
push
fstpl
movsl
in
mov
xor
mov
cltd
mov
push
xchg
pop
jae
lret
mov
testb
sahf
mov
jmp
mov
lods
enter
in
loop
jecxz
shlb
pop
xchg
push
add
sbbl
sub
lahf
mov
lea
imul
and
imul
imul
movsb
rolb
or
mov
xor
test
mov
pop
cs
jo
sbb
mov
adc
fsubr
mov
test
enter
xchg
pop
outsl
cmp
push
into
jns
add
dec
gs
sub
dec
data16
add
outsb
insl
dec
in
and
ret
mov
xchg
adc
pop
and
cld
push
adc
insl
inc
adc
inc
adc
imul
and
arpl
lcall
mov
outsb
push
test
pop
fists
push
adc
jno
push
sub
adc
sub
and
fnstcw
arpl
lds
lret
or
mov
pop
add
test
xchg
sarl
or
aam
jae
jno
shll
cwtl
fsubrs
pushf
mov
jmp
insl
data16
xchg
push
fwait
popf
or
push
inc
xor
in
mov
dec
call
xchg
dec
sub
addb
sbb
popf
aas
adcb
sti
sub
inc
sub
mov
data16
xchg
clc
adc
adc
insl
push
iret
stos
ja
loop
sub
and
add
jns
add
mov
jae
popa
mov
sbb
xor
aam
mov
xor
inc
cmp
cmp
pop
sbb
push
fsubrl
movsb
push
popf
call
ljmp
mov
js
push
push
jp
dec
sbb
stos
clc
mov
enter
test
cwtl
fimull
or
dec
push
jp
dec
sbb
stos
clc
mov
enter
test
cwtl
fimull
push
pop
sbb
cmp
dec
sbb
sahf
clc
mov
mov
mov
pop
dec
aad
pop
sbb
sbb
out
test
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
shll
ret
stos
repz
out
sahf
ficoml
inc
sub
jae
adc
push
jp
adc
ret
stos
repz
xchg
ljmp
inc
add
cmp
popa
add
jp
push
lret
sub
jl
fimull
add
dec
or
push
push
ja
inc
or
mov
test
lahf
inc
out
push
stc
dec
cmp
mov
xchg
jmp
mov
int3
dec
pop
xchg
int
xchg
cli
xor
rorl
lods
out
aad
rcrl
ret
neg
fimull
test
sarb
inc
sbb
decb
in
aad
les
xor
cmp
or
mov
xchg
and
es
mov
mov
das
pop
xchg
test
orps
push
or
xchg
xor
mov
dec
mov
mov
pusha
xsha1
cmpsb
cvttps2pi
imul
add
repnz
sub
mov
pushf
iret
cmp
das
xor
mov
ljmp
ljmp
pop
repnz
jp
or
sub
and
shr
mov
xchg
aam
movsb
xchg
scas
loop
fistps
inc
jp
pop
push
and
add
pop
cmp
stos
in
xorb
xchg
mov
xchg
xor
pop
es
push
push
popa
cmp
add
push
cmp
shrl
cmpsb
mov
cli
mov
sub
arpl
pop
add
jp
mov
lcall
xchg
fiaddl
or
inc
sub
arpl
pop
add
jp
mov
pop
rolb
je
loope
sbb
data16
cmp
fildll
mov
lods
sub
or
mov
fldl
jo
mov
rorb
in
adc
jge
lods
leave
enter
and
rcll
jmp
push
sub
outsl
xchg
out
in
cmp
inc
sub
pop
aad
mov
mov
mov
xchg
dec
jmp
jae
sub
and
imul
inc
adc
push
aas
or
fisubrs
lods
push
push
sti
daa
outsb
subl
aaa
lret
popa
lahf
xor
inc
add
fimuls
xchg
mov
inc
cmp
mov
or
add
mov
ss
add
xor
and
pusha
pop
adc
leave
adc
push
add
sbb
mov
cli
dec
inc
decl
loope
jns
jmp
push
push
pop
jp
jns
out
stos
mov
out
dec
adc
lock
ror
andb
mov
mov
mul
adc
and
frstor
cmp
iret
in
into
jp
pop
stc
ret
pop
jge,pt
cmp
sbb
mov
aaa
inc
pop
pop
sbb
popa
mov
repnz
mov
ss
cmp
jbe
bound
adc
jbe
adc
jae
mov
jne
adc
test
lahf
mov
ss
ds
imul
imul
test
inc
jnp
xor
and
jecxz
cs
aas
lods
fsubr
cmpsl
adc
pop
fldcw
jl,pn
lcall
fs
pop
xor
movsb
das
dec
int
movsb
bound
adcb
cmpsl
sti
cmc
loopne
cmp
sti
mov
insb
sbb
out
lea
std
dec
fstpl
xchg
movsl
test
xor
cmp
sub
push
adc
popf
xchg
mov
ds
test
stos
cld
pop
mov
push
fucom
es
jmp
movsb
idivl
pop
daa
popa
test
pop
jae
or
test
and
or
mov
fwait
cmp
push
in
pusha
pop
or
and
ljmp
sub
cmp
and
mov
cmpsl
xlat
repnz
push
rcrb
sbb
push
stos
into
mov
adc
mov
fdivrl
sti
jl
cmp
ds
mov
enter
sti
inc
aam
sub
adc
insb
jmp
sbb
mov
scas
imul
mov
lcall
scas
inc
mov
out
cmp
ds
push
int
addl
sti
inc
mov
int3
pop
rclb
xchg
sahf
daa
call
jns
pop
push
sub
ja
cltd
jg
sbb
fs
dec
sarb
daa
sbbb
push
adc
xchg
dec
and
mov
dec
xchg
inc
add
je
rorb
aaa
mov
sbb
or
jns
xchg
mov
and
lds
jbe
xor
ret
or
lea
call
adc
mov
sub
cli
je
push
push
popf
xchg
sti
in
xchg
shlb
adc
mov
lret
mov
enter
push
in
fwait
loop
pop
xor
mov
movsl
sti
mov
call
das
cmpsb
vcvtdq2pd
shl
push
shrb
sbb
mov
fdivrp
int3
jmp
mov
jae
scas
flds
pop
in
push
jne
lret
mov
aam
nop
in
push
add
inc
push
adc
push
repnz
in
sbb
shl
add
xchg
sub
cltd
sbbl
daa
movsb
inc
inc
mov
pop
xor
pop
dec
add
jge
push
inc
push
stos
inc
cmp
nop
pusha
lret
test
nop
lods
mov
decl
inc
pop
or
mov
cld
xor
sbb
dec
xchg
fsubr
fdivrl
pop
adc
dec
stos
addr16
and
test
mov
loope
cli
sub
push
test
movsb
movsb
inc
and
push
sti
fucomip
in
outsl
mov
out
xor
int3
sub
cmp
callw
push
mov
cmp
lcall
push
loope
es
dec
addr16
mov
push
xchg
test
jmp
xlat
inc
and
push
push
hlt
repnz
and
mov
cltd
and
xor
or
cmp
push
hlt
les
push
cmp
dec
icebp
jno
add
stos
push
push
movsb
inc
mov
push
in
sti
mov
sub
scas
push
call
cmp
jb
cmc
je
sbb
add
xchg
mov
scas
jle
insb
ret
pop
mov
and
lret
dec
mov
and
mov
cmp
jno
or
ret
xchg
push
sub
xchg
xor
adc
add
aaa
in
xchg
popf
mov
pusha
jnp
lods
mov
mov
xchg
sub
xor
scas
jg
cmpsl
xchg
and
and
aad
mov
jge
ret
cmpsb
cmp
mov
test
repnz
jge
sub
into
js
add
movsb
mov
loope
cltd
popf
xlat
xchg
not
inc
sub
pop
out
dec
xchg
ds
and
inc
mov
fstl
pop
mov
mov
jnp
out
inc
pusha
add
ret
jg
sti
add
and
inc
clc
sbb
and
in
pop
das
and
sub
cmpsl
roll
sbb
jmp
lea
xchg
inc
fcomps
pop
jae
add
jg
xchg
mov
or
inc
cltd
fstpl
mov
les
daa
loope
icebp
mov
xor
pop
cmp
flds
jne
and
iret
scas
negl
daa
xor
xchg
jge
rclb
iret
jmp
cwtl
add
push
lret
out
jbe
out
mov
mov
dec
xchg
aam
mov
mov
imul
xchg
mov
dec
jmp
decl
mov
pop
push
jp
pop
jo
mov
push
or
lret
es
mov
adc
pop
mov
pop
out
out
int3
mov
pop
ret
xchg
daa
dec
pop
pop
fldl
mov
xchg
rorb
enter
sbb
mov
hlt
cmp
call
popf
lods
fisubs
jmp
outsl
add
sbb
and
cltd
mov
sti
mov
cltd
iret
lcall
lret
enter
int
clc
fcompl
mov
xchg
test
pop
mov
fldt
push
aaa
dec
je
lahf
stc
sub
jbe
mov
xor
jb
into
or
mov
imul
and
das
add
mov
mov
nop
mov
ja
and
add
in
insb
sbb
push
cmp
jp
adc
ja
fistpl
mov
and
cmp
push
iret
jle
ds
and
or
sub
adc
dec
xchg
or
mov
xor
shr
push
jecxz
push
orl
or
pop
scas
sbb
jne
rcr
neg
scas
dec
nop
pusha
insl
insb
es
sbbb
jmp
mov
jbe
and
mov
mov
in
inc
cmpl
mov
xor
mov
loope
stos
mov
hlt
out
out
add
pop
xchg
lock
inc
xchg
rcll
cmpb
mov
adc
cmp
pop
es
test
mov
icebp
xor
movsb
lcall
jbe
in
ss
mov
inc
fadd
pushf
aas
xor
dec
xchg
sahf
das
out
dec
cwtl
mov
popl
push
mov
cmp
ss
cmp
sub
inc
sbb
xchg
inc
test
scas
insl
xchg
and
negl
adc
outsl
mov
cwtl
and
mov
test
xor
imul
lcall
mov
jl
insl
adcb
dec
ljmp
xor
adc
pop
jb
mov
testb
dec
enter
xor
pushf
mov
ja
int3
mov
lcall
pop
jge
jno
fs
mov
inc
pop
dec
dec
icebp
inc
push
scas
jl
test
push
fcom
mov
cli
push
scas
sti
jb
adc
jo
mov
pop
hlt
jp
lahf
sub
and
ror
jne
dec
cmp
insb
orb
cmp
adc
mov
es
mov
adc
sbb
jno
es
dec
push
lret
jecxz
dec
adc
mov
mov
push
adc
xchg
cmpsb
pop
std
sbb
sarl
lret
cld
notb
aam
adc
out
inc
mov
or
rcrb
jmp
cs
adc
add
mov
jbe
loop
out
dec
xor
ret
int
inc
sbb
xor
std
nop
sbb
inc
out
lret
mov
add
fildll
repnz
fwait
sbb
rorl
cld
dec
mov
or
push
cs
xor
icebp
mov
psrad
test
add
lahf
xchg
xor
lcall
scas
stc
movsl
sbb
xor
movb
add
aas
movsl
adc
ret
jbe
insb
mov
ret
push
pop
sbb
addr16
mov
mov
fmull
repz
add
icebp
mov
popf
dec
std
mov
mov
arpl
fs
fistps
in
mov
outsb
pop
testl
pop
jge
mov
dec
inc
sbb
enter
lret
into
mov
inc
mov
in
fidivrl
arpl
popf
push
ljmp
test
xchg
pop
mov
clc
inc
ljmp
cmp
and
or
test
inc
lock
fistpl
sbb
scas
add
ficomps
cs
shrb
push
ja
ficoml
popa
and
jle
stc
and
cmp
pop
jmp
jo
and
jle
push
cmpsl
repnz
pop
xor
jge
push
movsb
mov
loope
mov
jne
jg
xor
cmp
out
imul
rclb
pop
arpl
pusha
xchg
dec
mov
dec
or
jae
mov
push
movaps
rorb
addr16
pop
cmp
xor
in
jp
cs
test
adc
data16
sub
cltd
lods
out
imul
jne
imul
jle
shl
sbbb
push
push
lods
mov
das
outsb
lahf
jp
jge
jp
and
or
adc
push
cld
add
or
sub
into
sahf
dec
ds
cmpsb
push
ret
rcll
mov
cmp
and
mov
scas
jbe
cmpsb
clc
xchg
or
dec
insl
pop
subb
add
sub
sbb
mov
sahf
outsl
add
gs
ja
es
stos
dec
fsubrs
mov
sbb
add
cltd
sbb
popf
and
xor
in
cmp
and
lret
fs
out
lods
or
add
and
mov
pushl
or
xlat
aas
xchg
mov
fdivl
sbb
sub
xor
sub
cs
testb
cmp
dec
call
cmp
ljmp
add
dec
ret
xor
inc
scas
sub
fwait
xchg
dec
jmp
inc
xchg
pusha
bound
push
mov
xchg
pop
inc
pop
jg
inc
pushl
mov
test
xchg
mov
into
cmp
jg
xsha1
cmpsb
leave
or
mov
dec
mov
je
adc
xchg
bound
mov
mov
sbb
xchg
pop
mov
mov
adc
sbb
sub
mov
sbb
daa
push
jp
movsl
in
xor
mul
pop
movb
add
ret
cmp
js
fisubrl
sahf
movsb
ja
lahf
mov
sub
or
jb
mov
mov
pop
sub
pop
xor
shlb
and
sahf
lds
adc
adcl
cmc
xchg
jecxz
pop
lds
ret
les
push
mov
or
xchg
cmp
loopne
movl
popa
mov
inc
mov
pop
loope
cs
aaa
inc
push
mov
pop
insb
mov
push
inc
add
push
or
push
mov
cmpsb
pop
loop
insl
mov
lea
xchg
push
jmp
mov
dec
inc
sbb
stos
daa
inc
testb
mov
pop
imul
push
mov
cmpsl
cld
add
dec
fstpl
mov
js
ss
fdivrl
cmp
push
lret
orb
adc
sbb
sbb
mov
out
pop
icebp
test
pop
sub
les
cmpsb
hlt
aad
xor
pop
sub
sbb
lcall
ret
lock
mov
xor
sbb
sub
and
sahf
push
push
add
insb
test
addr16
frstor
enter
cmp
sub
sub
mov
dec
jbe
into
shl
pop
cmp
dec
fcmovb
add
mov
cmp
add
inc
and
push
int
imul
sbb
jbe
jae
out
mov
sub
jl
add
fisubs
cmpsb
ljmp
jl
mov
or
cs
aaa
orb
mov
outsl
add
int3
inc
pop
into
test
out
ret
pop
xor
mov
movsl
pop
andl
mov
mov
push
xlat
lret
pop
mov
popa
xlat
sub
add
jb
stos
idivl
and
dec
loop
mov
mov
cmovns
and
gs
outsb
xchg
sti
sub
adcl
insl
add
aam
jo
mov
shlb
test
add
mov
mov
scas
pop
dec
push
je
or
orb
ret
das
xor
sub
in
push
dec
mov
fisubrs
mov
lcall
out
nop
pop
fwait
push
inc
mov
adc
addr16
mov
in
add
and
fdivrs
pop
xchg
and
mov
xchg
ret
mov
xchg
pop
fidivrl
jmp
int3
adc
dec
and
xor
outsl
std
jae
sbb
nop
loopne
test
insb
push
in
push
or
mov
adc
lods
aaa
mulb
subl
xchg
jl
push
movd
arpl
jle
loopne
ficompl
add
adc
into
add
test
insb
ror
leave
jle
test
scas
or
ds
dec
int
xchg
inc
in
mov
jns
outsl
add
sub
push
push
mov
pushf
imul
mov
addl
mov
push
sti
call
jp
jp
xor
pop
push
cmpsl
loopne
mov
imul
std
mov
mov
xor
jecxz
cld
pop
int
xor
out
dec
xor
loope
mov
addb
pop
cmp
pushf
inc
test
xchg
int
mov
into
fs
enter
retw
aas
adc
icebp
add
lahf
lret
cmp
sub
jno
lock
repnz
xchg
jecxz
jnp
imul
das
idivb
pop
repnz
pushf
lahf
jl
fcompl
mov
xchg
adc
add
push
mov
sbb
ret
adc
lds
orl
ficoms
push
or
and
push
clc
add
pop
inc
cmpxchg
pusha
insl
xchg
add
adc
xor
rclb
lds
sub
jno
sbb
call
repnz
stos
stc
mov
push
dec
stos
adc
mov
sub
cmc
in
push
imulb
cmp
filds
pop
enter
push
xchg
aad
push
cmc
jmp
fnop
lods
fcmovnbe
ds
ja
fdiv
lods
js
jne
cs
xor
sub
scas
outsb
mov
cwtl
das
dec
jecxz
xchg
insl
xchg
adcl
out
scas
adc
lea
movsb
push
lods
sub
jno
xlat
outsl
pop
movsl
loop
sub
sub
rorl
sub
push
into
stc
push
or
out
jmp
rcrb
test
jae
add
loopne
and
test
add
and
out
imul
adc
add
mov
in
push
ret
out
pop
cwtl
movsb
dec
xchg
cs
push
mov
jmp
adc
popa
dec
pop
pop
mov
rclb
mov
test
outsl
and
into
sbb
outsl
jl
push
cmp
cmpsl
imulb
inc
and
inc
or
jo
lods
xor
inc
mov
ret
rdtsc
lds
out
ss
dec
xor
aad
out
or
jge
pop
or
cltd
je
sbb
cmpsb
add
addr16
das
inc
dec
mov
xorl
mov
add
xor
dec
adc
dec
and
in
sub
sub
add
mov
mov
lock
lahf
xlat
in
imul
and
imul
jle
lods
pop
stos
insb
lahf
icebp
aam
pop
dec
test
and
sub
sbb
xchg
dec
xchg
ficoml
dec
add
xor
push
insl
dec
dec
clc
inc
push
shl
lahf
adc
lea
or
repnz
and
xor
repz
sahf
test
xor
icebp
enter
cmp
fisttpl
test
je
pop
shll
test
sahf
mov
fiaddl
mov
mov
jmp
mov
lds
mov
lock
fs
gs
mov
xchg
push
jns
mov
pop
lods
jne
xor
rcrl
mov
pop
shll
lret
aas
pop
imul
icebp
jo
lret
push
test
mov
icebp
push
lds
mov
xchg
fisubl
xor
pop
out
pop
jmp
aaa
jne
aaa
xor
fcoms
inc
lods
sub
push
pop
adc
cmp
data16
push
lods
pop
mov
loop
push
mov
bound
inc
inc
xchg
dec
jg
mov
flds
enter
aaa
hlt
sub
insl
push
sbb
xor
test
dec
sbbb
and
outsb
xchg
xchg
push
inc
add
and
jge
or
fisubl
xchg
lods
dec
outsb
cmp
into
nop
mov
fwait
xchg
ljmp
jecxz
call
cli
mov
je
popf
mov
mov
mov
pusha
in
out
pop
ja
push
sbb
es
sahf
xchg
aaa
xor
into
sub
mov
lcall
adc
mov
jno
leave
adc
xchg
scas
sbb
push
insb
fstpl
cmc
sahf
sub
mov
hlt
cld
pushf
jns
cmc
cmp
cmp
cmp
scas
addr16
mov
or
fdivs
adc
shrl
or
fisubs
push
and
insb
pushf
pop
jmp
aas
pop
add
mov
fdivrs
pop
ja
mov
dec
dec
aad
xchg
mov
sub
packssdw
stos
and
jge
dec
add
jb
inc
mov
or
cmp
pop
dec
fstpl
insl
insb
xor
xor
fs
add
and
sub
shlb
in
pop
mov
das
dec
mov
xchg
sub
clc
std
or
call
lds
aaa
cmc
sbb
mov
and
out
dec
nop
pop
jne
jl
sub
addr16
jmp
sub
adc
dec
mov
xchg
dec
sbb
xchg
sbb
adc
push
fwait
xchg
stc
adc
dec
cwtl
das
ja
add
mov
and
ret
mov
in
fwait
shr
or
je
leave
jb
sub
mov
shl
jae
lret
hlt
testl
scas
dec
loopne
mov
mov
stc
lock
loope
cmp
mov
jbe
shrb
or
movsb
stos
cmp
insl
cmpsb
sub
mov
xor
mov
cmc
call
mov
and
imul
rcrl
push
iret
fwait
cld
movsl
mov
test
adc
cld
push
cs
pop
sbb
sbb
lcall
xor
rol
out
aas
inc
cmp
add
mov
fs
push
xor
clc
cs
out
inc
or
mov
mov
call
cmpl
sbb
mov
addl
jns
cltd
cmc
mov
lods
mov
or
arpl
mull
adc
xchg
pop
or
loope
adc
add
cmp
rcrl
fldl
xchg
mov
movsb
sbb
ret
mov
popa
sub
pop
std
jecxz
jo
and
mov
movsl
rcll
sbb
int3
mov
cmp
incb
dec
dec
pop
mov
jns
les
lcall
lods
jbe
ss
and
outsl
push
jbe
push
mov
ret
lret
dec
leave
dec
insb
mov
add
shl
mov
cmp
fdiv
and
jnp
insl
ficoms
jge
cmp
jnp
shrb
dec
aaa
es
push
test
mov
jns
jl
mov
adc
sub
rorb
add
out
sub
mov
loopne
xchg
dec
aam
in
fdivrp
cmp
das
sub
jo
mov
jp
xchg
fcompl
inc
mov
scas
out
sub
repz
mov
fidivs
inc
pushf
test
sub
cmpsl
icebp
repnz
mov
mov
cmc
and
fbstp
dec
push
inc
loope
in
jno
xchg
mov
jp
or
icebp
and
clc
xchg
mov
pop
enter
push
jno
shl
jbe
fnstenv
cld
jns
andl
scas
xor
xchg
mov
scas
nop
adc
cmp
pushw
push
orb
jns
jmp
push
int
xchg
dec
push
adc
lods
xor
fldl
cmpsb
loope
or
sub
test
lcall
xchg
dec
add
pop
pop
insl
daa
roll
lea
xbegin
dec
aas
jno
test
pushf
jg
loop
xchg
ret
iret
mov
icebp
or
test
cmpsl
pop
sbb
jae
leave
add
pop
push
jno
into
xchg
loopne
repz
cs
lods
fsub
inc
insw
ljmp
add
leave
mov
lea
mov
cmp
dec
iret
jge
and
mov
scas
out
stos
fs
pop
or
pop
mov
cmpl
in
sbb
fs
cmc
or
mov
jno
mov
addl
out
ret
data16
xchg
ret
pop
and
es
sub
pushf
xchg
cmp
inc
cmp
test
arpl
jge
sub
ret
popa
outsl
or
mov
xor
stos
lock
inc
repz
jecxz
xchg
fiaddl
or
inc
sub
arpl
pop
add
jp
mov
lcall
xchg
fiaddl
or
inc
sub
arpl
pop
add
jp
mov
cltd
ret
mov
xchg
fiadds
push
push
sbb
jae
addr16
adc
outsb
aaa
dec
daa
xchg
xlat
mov
and
xchg
jecxz
xchg
lret
mov
arpl
push
in
xorb
cmp
dec
test
int3
int3
int3
mov
iret
sbb
bound
sub
aas
lahf
stos
outsl
mov
pop
ljmp
pop
sub
cmp
or
sbb
imul
jmp
outsl
mov
pop
jmp
sti
aas
lret
dec
fistpl
sub
decl
addr16
imul
xchg
adc
sub
js
push
jmp
mov
pop
out
cmp
loopne
pop
xor
xchg
push
lds
outsl
mov
dec
push
inc
jle
mov
jle
pop
arpl
je
ror
fstp
dec
inc
das
shlb
push
dec
push
cs
ret
push
and
add
jp
outsl
cld
icebp
xchg
sub
adc
loop
cli
ffree
rclb
cmp
dec
iret
sahf
paddsb
cmp
sub
mull
scas
push
xlat
stos
je
pusha
mov
jp
mov
rorl
les
pop
pushf
push
pop
orl
lahf
ret
cmp
outsl
fisttpl
xchg
ds
push
and
shrl
cmp
ficomps
cmp
iret
popf
arpl
pop
mov
inc
lahf
cs
ror
ficompl
or
aad
scas
jnp
dec
push
pop
pop
stos
jmp
fwait
pop
jmp
sti
lret
pand
mov
push
icebp
sub
push
rorb
ds
ret
sub
cmp
cmp
ss
inc
mov
cmpsb
dec
scas
jle
stos
js
jg
push
cli
push
rcrb
dec
loope
repz
or
sub
sub
cmp
outsb
les
adc
mov
dec
pop
lahf
stos
outsl
mov
pop
jmp
sti
aas
lret
pand
sub
cmp
or
sbb
imul
lahf
stos
outsl
mov
pop
jmp
sti
aas
lret
pand
sub
sub
ss
lods
scas
jns
jecxz
dec
cmp
and
or
int
das
mov
out
cwtl
sub
inc
lret
sub
adc
addr16
or
jne
sarl
cmp
arpl
add
aad
jl
mov
pop
in
push
mov
xor
addr16
fmull
jae
mov
push
dec
fmul
int
cmp
pop
je
subl
and
xor
lret
cmp
add
shl
je
jae
mov
sarb
les
pop
jne
gs
xchg
cmpsl
ja
push
and
inc
mov
xchg
lods
stos
cld
mov
addb
jns
in
sbb
push
stos
out
mov
scas
sub
inc
or
sub
mov
inc
sbb
mov
push
ds
dec
push
sub
inc
adc
mov
in
nop
xor
jae
in
fadd
in
mov
add
repnz
inc
jnp
and
nop
test
mov
shl
repz
push
cmpsb
push
add
adc
inc
inc
adc
pusha
pusha
call
test
mov
imul
pop
add
adc
sbbl
shrb
test
add
adc
fs
push
add
cltd
icebp
xchg
xor
push
stos
dec
imul
lock
int
imulb
dec
dec
aas
mov
scas
jae
mov
jecxz
jmp
or
cmp
shr
fisubrl
sub
in
push
cmp
sub
in
push
data16
adc
pop
loopne
xor
xor
pop
mov
loopne
cmp
sbb
scas
int3
push
jnp
push
in
and
sbb
sub
dec
pop
or
xor
imulb
push
add
dec
lcall
lds
push
sub
or
mov
fisttpll
je
pop
dec
mov
clc
pop
add
cltd
pop
dec
pop
popa
bndldx
mov
fdivr
mov
mov
mov
cbtw
fs
cltd
mov
call
nop
sarl
sub
loop
jl
or
xchg
xor
iret
inc
pop
adc
shl
pop
cltd
adc
test
popf
sbb
inc
pushf
and
mov
mov
xor
sbb
sub
add
and
sbb
jns
jne
enter
cmp
mov
fsubrs
outsb
addr16
hlt
dec
jb
dec
cwtl
shrb
out
or
dec
push
add
or
mov
pop
insb
out
iret
out
mov
es
or
xchg
lret
repz
pushf
in
dec
jl
pop
xlat
lea
aam
cs
mov
in
repnz
loope
idivl
fs
adc
mov
lds
movsl
dec
shrb
fldl
mov
adc
js
pop
popa
ja
fsts
hlt
pop
xchg
pop
jb
pop
pop
and
fwait
pop
out
adc
mov
aam
cmpxchg
dec
sbb
mov
cmc
popf
xchg
mov
sub
ja
xor
sahf
xor
test
clc
es
push
add
add
repnz
cltd
out
dec
sbbb
mov
out
dec
dec
sub
jnp,pn
cmpsb
dec
jns
adc
aas
push
xchg
in
cmpsb
pop
pop
fmull
xor
xchg
xchg
loop
stos
repnz
lret
in
dec
mov
cli
fdivs
ret
xor
push
nop
push
cmp
das
xchg
loope
hlt
sahf
push
sub
out
mov
push
out
cmp
les
icebp
dec
stc
sub
jp
pop
int3
push
xchg
sbbl
mov
push
cmp
sahf
roll
neg
lahf
sbb
and
imul
fildl
xchg
jmp
xchg
jb
xchg
insb
xlat
add
repnz
jmp
push
jmp
movsb
mov
push
mov
push
icebp
dec
fistpll
fwait
shrl
addr16
stos
add
nop
cmp
or
adc
inc
dec
out
pop
inc
into
fcompl
mov
dec
lahf
fiaddl
dec
loopne
jb
xor
lahf
mov
fbstp
xchg
fs
dec
or
push
or
sti
xchg
fisttps
jmp
fadds
fldt
jb
fsubs
mov
dec
add
imul
adc
dec
push
xor
adc
mov
xorl
jg
pop
cmp
pop
aas
outsb
repz
jae
inc
popa
dec
xor
push
ljmp
aas
cmp
or
in
or
imul
sbb
mov
or
jae
fbstp
lret
cmpsl
xlat
stc
rcrl
std
xchg
in
push
repz
jg
inc
adc
bound
push
fs
mov
xor
fldl
js
mov
lahf
or
pop
clc
or
addr16
insb
mov
dec
inc
daa
in
mov
xor
mov
jb
outsb
mov
stos
inc
loope
and
addr16
test
mov
aam
data16
and
mov
ret
xorl
outsl
cmpsb
movb
popa
imul
outsl
and
sbb
ret
push
push
out
fstl
popa
mov
xchg
dec
sbb
dec
cmp
inc
cmp
inc
mov
push
addr16
pop
mov
subb
pusha
ret
into
in
mov
push
jle
leave
sahf
into
repnz
int
xchg
pop
add
fcomps
mov
add
cmp
sub
pop
lea
cmp
arpl
popf
cmp
icebp
dec
mov
xlat
pop
dec
dec
lods
cld
test
mov
and
fistpll
cmp
xor
cli
inc
sbb
lcall
jmp
xchg
adc
repz
add
mov
out
xchg
pushf
and
jmp
nop
xor
inc
data16
push
lahf
ds
push
xchg
lcall
sahf
xlat
pop
pop
lods
fs
dec
mov
cwtl
pushf
leave
jmp
dec
cmp
cmpsl
push
inc
push
test
add
out
mov
cs
and
test
push
cmpb
shrl
imul
add
shr
pop
divl
sub
incb
sbbb
jne
stc
add
fwait
enter
enter
lcall
es
jne
push
jne
stos
hlt
jb
test
and
adc
outsb
jae
rorb
xchg
xor
inc
cmc
mov
out
push
jmp
xor
dec
mov
xchg
into
and
jg
xchg
ret
add
jle
cld
sbb
shrl
in
push
xor
nop
and
jl
lea
cmp
rcr
dec
and
fsubl
mov
xor
xchg
push
jo
pop
mov
flds
dec
pop
cmp
iret
pop
mov
movsl
xor
mov
jbe
dec
push
or
and
lret
and
xchg
out
inc
cmc
dec
pushf
imul
sub
cmp
inc
std
das
ja
dec
push
sar
push
push
int
lcall
int3
stos
add
mov
out
adc
in
or
dec
mov
dec
mov
iret
insl
add
out
ror
mov
and
adc
imul
xor
repnz
mov
repz
addl
movsb
jp
in
mov
loope
repz
fisttps
ret
mov
jmp
mov
fisubs
jns
pop
js
push
scas
insl
ja,pn
and
popf
and
les
cmp
dec
push
mov
sbb
mov
cmp
push
xor
xor
sbb
and
shl
dec
mov
mov
aas
inc
imul
mov
jl
out
andb
push
stos
inc
dec
addr16
jp
iret
mov
pushf
jbe
imul
gs
mov
aas
repnz
out
aam
xor
int3
mov
mov
sbb
into
push
popf
xchg
das
rcl
ss
movsl
xchg
adc
and
push
shl
fwait
inc
lock
test
jo
gs
xchg
xchg
lods
orl
xor
xor
push
jb
sbb
addr16
or
jl
je
jg
jg
gs
xchg
mov
lods
xchg
rolb
add
xchg
jno
out
nop
hlt
ja
xchg
jb
cmp
fisubs
fsubs
xor
jno
stos
stos
pop
add
add
jnp
xchg
jg
and
dec
jg
or
push
loop
dec
jl
sbb
sub
in
and
loop
cmp
loop
pop
mov
jb
stos
repz
in
pop
or
lds
jl
xchg
dec
mov
and
in
mov
pop
lea
xor
add
jns
and
ffreep
and
mov
xlat
dec
repnz
lods
mov
push
idivl
mov
lahf
inc
insl
xlat
in
hlt
fstps
xor
add
xor
pop
mov
loop
or
xchg
stc
cli
fstl
add
aas
jo
ret
arpl
xor
adc
ret
fs
fcmovnu
adc
adc
ja
inc
fldl
shrl
dec
dec
xor
jne
sbb
das
je
icebp
ficoml
in
scas
mov
lods
fidivs
cmp
into
sbb
mov
push
and
out
idivl
inc
ret
or
aaa
mov
stos
insb
js
ds
jnp
adc
xor
pusha
jbe
scas
loop
mov
sbb
push
add
xchg
ficomps
punpcklwd
add
dec
repz
mov
imul
sbb
jmp
push
jne
fnsave
mov
cltd
jo
addr16
subb
jg
dec
movsl
mov
fsubr
sub
push
mov
repz
mov
xchg
loop
fcoml
add
cmp
pop
cmp
push
adc
jns
mov
add
mov
xchg
cli
xchg
sbb
adc
call
and
gs
push
push
fildl
mov
jmp
lods
les
cmpsl
movsb
pop
loopne
fmull
jb
xchg
push
fnstcw
push
insl
pop
fstpl
inc
push
add
scas
dec
xor
les
je
bound
in
mov
mov
and
out
jmp
out
sbb
push
jle
insb
and
sbb
jns
cwtl
xchg
sbb
insl
adcl
pushf
xchg
faddl
cmp
dec
adc
out
mov
pop
lcall
popa
xor
test
es
loop
mov
push
jno
dec
out
dec
jo
in
jecxz
mov
mov
sub
jl
add
or
jae
and
mov
mov
lret
in
jp
or
test
arpl
out
adc
cmp
negl
cli
rolb
pusha
inc
frstor
movsl
sub
dec
imul
mov
push
jmp
mov
inc
jg
fiadds
or
cld
movsl
mov
lahf
xchg
pop
loop
xchg
mov
jl
push
push
pavgb
fs
enter
scas
mov
push
cltd
pop
adc
pop
mov
mov
lret
xor
xor
mov
or
ja
xlat
sbb
lods
inc
mov
data16
adc
sbb
movl
mov
lds
cmp
push
mov
pop
fadd
pushf
jno
repnz
rdpmc
into
stc
clc
inc
arpl
xlat
jo
rolb
sub
pop
jle
aam
lds
dec
cmp
into
pop
push
push
dec
or
jp
insb
imul
in
mov
rorb
jge,pn
lods
mov
lods
push
fstpt
mov
add
out
or
cmp
inc
test
fnstenv
push
scas
jo
xor
popa
push
add
jmp
jp
jmp
rorl
icebp
and
popa
pop
dec
imul
inc
pop
mov
adc
gs
mov
stos
mov
enter
push
xchg
out
push
inc
mov
fs
mov
mov
mov
inc
dec
fildl
dec
add
mov
sbb
dec
dec
mov
iret
fabs
ljmp
mov
mov
sti
aad
lahf
pop
dec
lret
mov
mov
rol
fsts
aaa
or
mov
dec
add
imul
push
jb
jg
jge
push
ret
push
mov
mov
cmp
jg
std
in
ja
adc
roll
xchg
add
mov
ds
decb
leave
push
inc
mov
mov
pop
sbb
pop
push
push
mov
imul
in
imul
sbb
mov
xchg
imul
xchg
hlt
int3
sub
aas
lahf
xchg
and
push
dec
sub
es
lods
sarl
mov
mov
jbe
mov
insb
in
sub
je
out
jge
sti
vunpckhpd
rorl
xchg
push
cmpb
daa
test
add
cmp
jne
cmp
int
bound
popf
jmp
rcr
loope
inc
sub
sbb
xchg
outsl
iret
cmp
mov
fidivl
mov
cmp
cmp
cmp
fidivrs
loopne
jb
mov
sbb
roll
mov
movsl
test
ror
xchg
cwtl
xor
daa
pop
mov
xchg
add
xchg
stc
or
dec
pop
jl
fadd
mov
push
or
test
xor
loopne
cmp
aad
sub
cmpsl
fcmovnb
popf
lods
or
lret
sbb
mov
cmc
leave
lock
cltd
xchg
and
pop
movsb
gs
mov
xchg
jge
jo
js
push
fadds
mov
test
or
and
jno
notl
sub
jo
xchg
jmpw
sub
aas
js
popf
jp
push
xor
cmp
jmp
in
adc
test
xchg
jns
xorl
hlt
mov
clc
rorl
movsl
inc
sub
insb
sbb
pop
lds
icebp
xlat
out
mov
sbb
pushf
fnsave
xor
scas
push
incb
mov
lret
and
pop
notb
test
dec
xor
push
sbb
je
hlt
mov
jo
lods
js
dec
rcrb
loope
cmpsl
mov
out
cmp
movsl
ljmp
outsl
add
insl
scas
fadd
stc
into
xor
inc
out
mov
mov
sbb
push
iret
out
jb
sbb
sbb
dec
jg
mov
dec
sub
cmp
addl
mov
jno
fists
push
mov
ljmp
std
cmp
push
mov
mov
popf
and
hlt
fldt
fucomi
or
sub
ljmp
mov
push
push
imul
xchg
pop
scas
rorl
hlt
inc
enter
in
cmp
stc
out
call
pop
xchg
inc
mov
ss
cmp
nop
add
aad
adcb
xor
mov
lret
inc
xorl
movsl
xchg
in
fisttpl
jmp
cmp
inc
cmp
daa
jp
enter
dec
pop
rcrl
ret
dec
adc
push
hlt
cmpl
and
pop
mov
and
jbe
lds
fcomps
fptan
pop
cmp
lds
lret
iret
xchg
fdivp
xor
sub
cmp
and
movsl
cmp
lret
xor
jl
out
jb
mov
lcallw
ss
mov
cmpsb
aas
inc
mov
aad
xor
and
cmovnp
pop
jl
sub
shrb
sarl
scas
add
cli
loopne
push
in
aaa
pop
xor
sbb
cmp
lret
mov
aam
jae
cmp
inc
add
cmp
pop
sub
test
pop
jne
movsb
cltd
insl
or
repz
pop
xor
std
lahf
inc
stc
xor
add
jnp
pop
adc
scas
testb
fnstsw
lret
inc
mov
dec
inc
int3
je
cmpsb
ficomps
icebp
out
daa
inc
or
sub
dec
jecxz
jns
pop
es
mov
cmpsb
or
movsb
dec
or
shl
lret
push
shll
clc
lods
dec
clc
mov
in
repz
inc
and
hlt
or
rolb
sbb
aas
sbb
scas
fistpll
scas
das
adc
pop
push
pop
inc
sub
das
mov
jmp
out
cmc
inc
inc
clc
jp
imul
movsl
sahf
adc
cmpsl
seto
nop
mov
or
out
out
xlat
or
imul
cs
dec
popf
fstp
cmp
scas
ss
adcl
sub
mov
push
call
cmp
mov
xor
push
inc
lods
lahf
lds
mov
add
lret
dec
fdivrp
addb
nop
add
test
push
outsb
inc
pusha
add
xchg
cmc
rorl
mov
shl
cmp
push
inc
push
cmpsl
inc
jo
push
and
jo
aam
mov
cs
inc
xor
out
mov
nop
stc
pop
sbb
xor
push
sbb
sbbb
fimuls
mov
ljmp
xchg
out
dec
mov
cmpsl
sub
pushf
outsl
push
arpl
in
pusha
enter
int3
int
adc
xchg
lea
test
es
push
and
inc
jne
enter
ja
repnz
cltd
popa
pop
ret
fbstp
cmc
mov
lock
mov
xchg
mov
stos
xor
stc
adc
lods
std
icebp
bound
js
outsb
popf
or
mov
dec
push
mov
shll
adc
insb
subl
cmpsl
cmp
lret
jns
sti
jno
hlt
shl
mov
mov
xor
pop
ficoms
daa
push
das
and
ds
mov
mov
mov
pop
leave
jno,pn
cld
in
jp
or
or
idivl
leave
leave
mov
aam
cmp
jbe
lret
es
idiv
loop
cwtl
les
inc
pop
aas
mov
or
sbb
popf
into
sbb
add
icebp
sub
sbb
into
leave
in
movsl
mov
xor
stos
mov
sbb
sahf
push
mov
push
pop
shll
cmp
mov
movb
insl
jnp
and
pop
into
cmp
cmpl
stc
popf
out
fisttps
dec
mov
pusha
mov
lods
mov
jmp
stos
xor
fsubp
outsl
out
dec
cmc
rorl
or
add
shl
and
sub
ret
cwtl
and
cmpsb
jbe
das
adc
mov
mov
lods
insl
pop
jl
xchg
inc
mov
insl
sbb
mov
mov
and
mov
dec
es
add
xor
dec
loope
fwait
jmp
ror
jp
add
pop
sbb
pop
ja
xchg
xchg
lea
inc
inc
mov
xor
or
cmp
xor
popa
es
and
adc
mov
jl
imul
popa
stos
popf
cmpsl
xor
push
stc
cmp
popa
push
mov
jbe
fsubs
jge
lods
jb
and
hlt
add
mov
pop
push
mov
jae
jo
mov
push
add
push
mov
or
fbld
sbb
xchg
dec
in
int3
xor
pop
and
movsl
lea
jno
jmp
jne
popf
jle
ret
sub
pushf
dec
mov
inc
push
rcll
push
push
icebp
lods
pop
test
mov
pushw
dec
enter
cmp
test
fdivrl
popl
daa
mov
push
adc
and
jle
jl
cmp
mov
mov
test
mov
cmp
lods
loopne
jmp
rcl
add
lret
inc
adc
adc
sub
hlt
pop
lahf
mov
nop
push
fisubl
xchg
inc
or
xchg
adc
lods
fldt
push
xlat
es
pop
dec
jnp
pop
leave
fmul
rcrl
jle
push
push
stc
jecxz
int3
pop
stos
in
push
outsb
pop
inc
dec
and
cmp
popf
adc
or
subb
mov
pop
outsl
or
clc
xchg
in
in
or
fcompl
repz
repz
xlat
or
mov
sahf
inc
mov
sti
sbb
push
mov
xor
psubusw
push
jg
hlt
ret
pop
test
sub
imul
test
test
pop
push
das
pop
sub
lock
shl
push
fwait
pushf
inc
lret
or
cmpl
xchg
xchg
movsl
repnz
loop
inc
jne
fistpll
in
movsb
cmp
aam
data16
push
xchg
ret
hlt
addl
sbb
xchg
and
faddl
adc
mov
mov
in
scas
inc
mov
cmp
push
ljmp
out
adc
dec
test
fucom
mull
ja
pushf
movsb
sbb
cmpb
pushl
decb
std
sahf
jecxz
movsb
out
push
xlat
test
jle
outsb
data16
std
popa
mov
fucomp
sub
jge
or
inc
mov
int3
pushf
cwtl
sahf
pusha
psraw
jle
mov
lea
dec
jb
aad
mov
sbb
mov
adc
iret
mov
jae
sbb
sbbl
daa
mov
scas
jns
cmpsb
dec
add
cmp
xor
movdqa
add
push
fcomps
dec
mov
cmpsb
movsl
sar
and
pusha
dec
inc
pusha
or
xor
pop
aam
dec
mov
test
jecxz
call
shll
ficomps
xchg
push
adc
jge
test
sub
es
or
cmpsb
mov
xorb
inc
incl
ljmp
je
nop
pop
cmp
sub
loopne
jecxz
nopl
cmc
cmp
jo
push
xlat
adc
and
movsw
notb
scas
shlb
mov
ljmp
push
mov
mov
cltd
in
sbb
sti
xchg
mov
loop
pop
pop
xchg
lret
inc
in
xor
sub
xor
push
mov
cmpsl
and
lds
pop
test
dec
mov
sbb
cli
cld
jp
xor
mov
sbb
btc
sar
push
js
jge
dec
sub
dec
adc
repz
or
xor
outsb
cmpsb
push
fwait
inc
je
lcall
fsin
leave
or
fstpl
sub
or
aas
lret
repz
testb
dec
bound
xchg
mov
or
mov
mov
nop
jg
push
xchg
mov
ud1
aas
pop
push
mull
data16
jns
cmp
cmp
inc
xor
lods
insl
movsb
pop
push
and
push
jo
adc
aas
std
sbb
jp
and
mov
mov
xor
xor
test
es
out
pop
mov
jo
and
lods
ret
jge
push
mov
nop
aas
addr16
mov
movsl
ret
xchg
xor
subl
mov
scas
jnp
dec
pop
lahf
stos
outsl
mov
pop
jmp
sti
aas
lret
pand
sub
cmp
or
sbb
imul
lahf
stos
outsl
mov
pop
jmp
sti
aas
lret
pand
sub
cmp
imul
lahf
stos
mov
jg
dec
fwait
pop
jmp
sti
aas
lret
das
ficompl
sub
cmp
or
sbb
imul
lahf
stos
nop
mov
sub
and
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
fbstp
callw
inc
xchg
pop
call
push
pop
testb
outsl
pop
mov
and
xchg
das
xchg
jbe
callw
inc
lahf
ss
es
testb
outsl
pop
mov
cmpsb
aas
aam
xchg
jbe
callw
inc
lahf
ss
es
pop
insb
out
mov
pop
repz
jl
inc
xchg
cmp
lds
add
subl
jno
sub
xor
xor
add
adc
inc
adc
jecxz
ret
xlat
nop
dec
dec
ret
cmovp
jle
and
movsl
je
mov
pop
divl
lock
ljmp
imul
in
lcall
out
scas
stc
scas
sub
nop
xchg
dec
fmull
pop
imul
pusha
aaa
scas
xor
and
pop
or
repnz
push
dec
cmpsb
pop
shrb
jecxz
aaa
cltd
lds
adc
sbb
out
orl
pop
add
popa
clc
subb
call
inc
lahf
ss
es
testb
outsl
pop
mov
cmpsb
aas
xchg
das
out
mov
aas
test
rcrb
push
das
xchg
sub
cltd
xlat
dec
aad
xchg
pop
test
push
scas
xor
jle
inc
cli
popa
ljmp
mov
test
push
repz
mov
mov
fidivl
es
testb
outsl
pop
mov
cmpsb
aas
xchg
das
xchg
jbe
callw
inc
lahf
ss
es
testb
outsl
pop
mov
cmpsb
aas
xchg
das
xchg
jbe
das
in
add
mov
mov
mov
or
dec
lock
inc
sbb
ds
jl
shr
dec
in
es
inc
mov
test
mov
inc
jno
and
lock
mov
add
int3
xor
fsubs
jl
and
and
mov
ss
ds
sarl
xchg
je
inc
outsl
and
shlb
scas
xchg
ret
popf
call
mov
jno
int3
imul
xor
push
idiv
movsl
dec
pusha
outsb
mov
fwait
call
push
out
rcrb
sub
shll
push
dec
xchg
mov
mov
mov
push
loopne
mov
out
pusha
fidivs
mulb
or
jnp
mov
cmpsb
in
dec
inc
jmp
popf
jecxz
mov
shrl
lods
mov
outsb
dec
push
fldenv
add
jg
pop
arpl
inc
imull
aaa
iret
sbb
sub
mov
inc
pop
mov
out
pop
outsl
rcr
call
sbb
lea
push
mov
xor
loop
ret
call
xchg
adcb
subl
aad
testl
xor
pusha
cwtl
mov
cmc
out
sti
ss
je
sbb
lahf
pop
pusha
sbb
xor
ret
and
mov
mov
lret
popf
mov
stos
loop
xlat
addb
ret
call
sub
or
lods
or
jnp
sbb
test
sub
pop
out
add
or
push
pop
sub
ss
push
dec
out
shr
push
jmp
jge
sbb
sub
jbe
dec
imul
pop
xchg
mov
jns
jne
and
fwait
push
pop
xchg
subb
and
push
or
mov
sbb
adc
xor
pop
jge
das
ret
andb
nop
cmp
cmp
sbbb
mov
test
les
call
decb
dec
sbb
stos
inc
call
cmp
jnp
pop
mov
hlt
sub
mov
push
add
sub
addr16
push
pop
in
xlat
scas
out
cli
ret
in
adc
out
negb
sbb
cli
sbb
and
add
mov
pop
dec
sbb
cmp
push
leave
cmp
xor
pop
fmul
xchg
je
negb
out
jnp
jb
fbstp
fucom
dec
pop
bound
ds
mov
mov
out
push
cld
int3
dec
dec
mov
outsl
push
xor
mov
mov
sub
mov
sub
xor
sbb
mov
inc
andb
cltd
cmp
or
decb
lret
adc
add
mulb
imul
ja
aas
inc
loopne
aas
mov
cmpsl
and
cmp
mov
es
insb
into
pop
scas
lock
repz
hlt
jae
pop
xor
adcl
cmpsb
fdivrs
cli
dec
sub
in
bound
repnz
test
jb
and
jp
mov
inc
js
fisttps
stc
in
ds
sarb
out
inc
orl
xchg
jb
sub
push
je
cwtl
adc
arpl
push
sbb
cmp
xor
or
orb
cmp
and
loop
je
dec
imul
bound
jne
cmpsb
clc
mov
inc
loopne
lods
fsubr
jg
sti
xchg
in
mov
testl
dec
pop
ret
pmuludq
xchg
movsb
mov
imul
jg
sbb
cmp
or
test
insb
jge
add
test
sub
add
push
popl
pusha
sub
mov
data16
mov
fs
outsb
scas
js
decb
mov
xor
cmc
mov
sbb
mov
lahf
insb
add
ret
pop
pop
imul
mov
mov
lock
stc
or
call
out
loope
push
mov
in
xor
and
xchg
ljmp
call
loopne
loope
cmp
ja
mov
mov
dec
roll
cmpsl
out
xor
aas
pop
fldl
repnz
mov
pop
inc
js
mov
pop
pop
daa
ja
inc
mov
and
lods
jbe
adc
test
and
adc
movsb
push
cs
stos
repnz
mov
pop
testl
push
js
pushf
push
jl
lahf
jno
in
inc
mov
xor
mov
ljmp
rcrb
das
mov
adc
bound
hlt
es
aad
pop
push
shrl
pop
cmp
lret
cltd
loop
stos
pop
jge
sbb
jg
fiadds
test
arpl
mov
or
fs
push
into
dec
stos
pop
mov
jno
mov
xor
out
mov
jbe
xor
pop
sbb
cmp
jmp
mov
push
sti
int3
push
test
xor
je
or
cmp
jge
andl
adc
pop
popa
loope
cmpsl
mov
mov
jbe
fwait
ds
lock
mov
or
aad
cmpsb
cld
lahf
pop
loopne
pusha
std
mov
adc
fistpll
cmpsl
adc
shrb
mov
in
scas
es
addr16
test
dec
xchg
or
fmuls
sbb
sub
adc
mov
movsl
adc
mov
movl
inc
adc
mov
dec
lods
jl
adc
fwait
rorl
jb
mov
pop
les
test
mov
mov
adc
mov
and
or
mov
mov
cmc
jo
jecxz
es
scas
cmp
push
pushf
fcmovne
cmp
cmp
mov
adc
jno
repnz
or
hlt
data16
shl
mov
frstor
jns
mov
int
addr16
test
pusha
cwtl
repz
outsl
add
mov
xorl
and
ljmp
in
loopne
ds
mov
je
mov
fdivs
push
dec
lods
sub
mov
ljmp
sbb
out
ljmp
dec
dec
outsb
enter
pushf
adc
cli
mov
jb
mov
sbb
scas
cmp
inc
in
filds
movsb
mov
and
jnp
xor
or
push
pushf
pop
adc
or
sar
push
ja
or
pop
jnp
jne
cmp
push
mov
add
add
cld
fnsetpm(287
push
jae
cmp
mov
mov
cmpsl
push
test
jae
mov
pop
mov
fs
rcll
inc
cmp
mov
push
sub
dec
std
aas
mov
stos
push
mov
or
jle
test
addr16
sub
test
push
jnp
or
stos
jne
adc
popa
stos
adc
fcmovne
mov
ret
mov
lea
cld
out
clc
dec
dec
inc
jae
mov
test
sahf
jg
mov
test
and
and
scas
in
mov
or
imulb
adc
outsl
pop
or
dec
xchg
jmp
mov
push
idivl
mov
sti
sbb
or
sub
and
or
sbb
fstl
jnp
add
push
jmp
sub
xor
repnz
xor
cld
lds
xchg
push
push
ja
stc
dec
mov
imul
ds
add
adc
aaa
dec
mov
xchg
leave
sub
inc
out
mov
sub
jecxz
shlb
sahf
ja
mov
ss
clc
out
movsl
sbb
rcr
sbb
popf
sub
adc
cmpsl
mov
cmp
jmp
cmpsl
cmpsb
bound
jbe
add
sub
mov
mov
decb
js
int
add
xchg
lahf
pop
add
loop
arpl
xchg
fstps
push
mov
popf
xor
xor
xchg
gs
int
rcl
sti
js
ss
js
sbb
xor
insl
daa
sbbb
aad
imul
fisttps
cwtl
inc
push
sti
insb
cmc
imul
or
in
and
push
outsb
jg
movsb
fldenv
rcll
loope
pop
sbb
xchg
mov
adc
push
add
mov
pop
lds
in
fbld
into
fistl
or
rorl
in
movd
dec
push
cld
lret
js
push
xor
imul
call
xor
insl
jae
iret
fisubrl
ss
push
hlt
jg
jge
mov
dec
daa
and
leave
aad
jle
mov
ror
iret
push
dec
fcomp
in
push
sbb
repz
dec
sub
sbb
out
inc
pop
push
dec
push
jne
pop
enter
stos
push
and
pusha
sub
nop
push
lea
rol
loop
push
push
cmp
minss
out
ss
or
xlat
lock
pop
lea
sbb
add
sub
pop
hlt
sarb
inc
adc
add
cwtl
mov
in
dec
out
hlt
leave
in
mov
cmp
std
jg
add
xchg
dec
aaa
push
rorb
iret
and
cmpsl
bound
pop
dec
hlt
mov
mov
sarb
jbe
push
mov
loop
jle
mov
push
jae
int
or
mov
pop
loope
cmc
ror
pop
enter
imul
lahf
jmp
mov
push
inc
xor
dec
inc
pusha
call
pushf
lock
pop
jbe
aad
ja
sarb
pop
adc
pop
aam
add
or
pop
imul
sbb
pushf
add
cwtl
popa
sub
cmpsl
xor
inc
iret
pop
jp
outsb
pop
jge
mov
movsb
mov
stos
out
inc
mov
inc
jge
fsubr
cbtw
aad
fimull
lahf
test
fists
mov
mov
xlat
jbe
mov
dec
jne
outsl
push
ficoms
scas
adc
jae
and
roll
jbe
sub
loopne
iret
lret
stos
loop
xor
cmp
push
test
sbb
cmp
add
cmp
outsl
mov
pop
push
adc
add
sar
ss
lret
ret
lods
lcall
rclb
shrl
fisubrl
mov
rorb
jne
push
inc
xchg
xchg
lret
stos
dec
dec
jne
inc
fstps
ret
in
pop
fwait
dec
add
push
popf
mov
pop
cmp
pslld
sbb
pop
arpl
xorl
lret
mov
mov
ret
subb
cmpsl
dec
lock
sbb
mov
jo
out
mov
lcall
push
push
shll
xor
cmp
in
xchg
fwait
enter
enter
sbb
sub
mov
and
adc
jne
rol
sub
or
jecxz
and
mov
cmc
sub
in
push
cmc
and
xor
add
push
hlt
add
orb
xchg
mov
jo
adc
and
jle
dec
int3
add
sahf
jmp
lcall
pop
in
sbb
sub
fists
imul
add
and
es
cmp
in
inc
dec
out
sbb
pop
inc
cmp
inc
orl
pop
pop
sub
clc
jmp
outsb
stos
inc
fmuls
sub
pop
inc
ret
jbe
mov
pusha
cmpsb
sti
mov
mov
imul
mov
fwait
mov
pop
pop
ja
out
movsl
jg
js
inc
movsb
mov
jp
cmp
lcall
xchg
loope
sub
cs
rol
dec
inc
sahf
sti
cmp
add
inc
xchg
sbb
pop
out
or
hlt
inc
aad
pop
fsubrp
mov
std
mov
mov
and
mov
scas
sbb
cmp
pushf
sub
adc
push
inc
and
sub
or
notb
popf
mov
sahf
call
sti
jmp
xchg
dec
movsb
out
inc
in
lea
cmp
bound
push
xor
mov
mov
pop
sbb
xchg
xor
push
repz
stos
jns
xor
xchg
jb
sub
sbb
ss
adc
hlt
js
mov
clc
imul
pop
mov
lds
jmp
lret
sub
jge
mov
push
push
scas
pop
jo
push
dec
push
sbb
jo
orb
sub
adc
ds
pop
mov
lret
mov
lds
xlat
and
idivb
cmp
negb
mov
mov
pop
scas
sub
push
jp
jnp
sahf
fbld
stc
inc
xchg
addr16
inc
repnz
les
pop
pushf
or
or
add
out
jg
adc
mov
ja
cmp
and
cltd
enter
stc
add
dec
mov
movsb
xor
out
push
fst
sub
outsl
xchg
leave
stos
jb
popf
or
mov
push
test
jmp
dec
dec
aaa
jae
imul
lahf
aas
popf
push
test
lret
or
jae
or
mov
push
scas
xorl
insl
mov
insl
cwtl
or
notb
test
cmp
mov
pop
or
lret
push
fstl
lret
dec
lods
pusha
stos
dec
test
mov
mov
and
mov
lods
fdivrs
popf
inc
cmp
push
lret
in
cmpsb
fbld
mov
inc
and
jmp
inc
push
cmp
hlt
les
and
sub
inc
dec
cmp
sti
add
ljmp
xor
scas
mov
es
jnp
jb
imul
nop
pusha
pop
sub
inc
and
pop
dec
push
fsubrs
vmovmskps
ret
int
mov
adc
jle
addr16
ror
mov
lods
pop
das
dec
out
ret
popa
shll
or
pop
shll
cwtl
int3
mov
ds
testl
jle
dec
inc
sbb
in
mov
fwait
mov
xchg
sub
mov
add
loope
lock
dec
shlb
repz
add
xchg
push
in
ffree
sub
mov
xchg
xchg
fsubl
fdivrl
cmp
add
pop
sbb
scas
dec
sub
adc
je
repnz
pmullw
mov
test
aad
rcrl
aaa
subl
cmpsl
test
mov
pop
repz
cmp
out
fimull
sub
sub
xor
into
sarl
dec
pop
mov
mov
cwtl
jle
push
fists
ret
icebp
int
sete
add
and
xor
mov
sub
imulb
dec
dec
xor
sti
data16
stc
push
divl
fisubrs
pop
das
lahf
xor
push
inc
out
fdivr
jnp
mov
cltd
repz
les
aam
push
test
das
mov
pop
xchg
mov
jb
dec
lods
nop
aam
ljmp
repz
addr16
push
fnstcw
sbb
push
pushf
add
xchg
jbe
fs
imul
and
pop
test
fldcw
mov
mov
xor
or
mov
js
ljmp
or
adc
pusha
jo
dec
repz
push
test
jmp
test
loopne
push
lcall
push
fldenv
mov
shll
out
sub
loop
sub
std
jp
inc
dec
scas
push
cmp
sbb
shrb
int3
arpl
out
mov
mov
movsb
push
mov
inc
inc
dec
cmpsb
rcl
push
dec
mov
cmc
pop
into
gs
mov
push
inc
addr16
xchg
mov
dec
cmp
mov
sbb
lret
rorl
dec
mov
cwtl
pop
mov
je
mov
sbb
add
orb
outsl
adc
add
sbb
adcb
lret
xor
leave
imul
into
mov
xchg
sahf
adc
xchg
mov
test
push
jecxz
cltd
push
adc
out
mov
cli
jge
int3
pusha
repnz
xorb
call
cmp
out
pop
adc
dec
fld
inc
cmp
push
push
imul
xchg
sbb
or
inc
and
jo
mov
ds
mov
popf
add
fs
idivb
adc
adc
xchg
popa
pop
dec
std
xchg
test
out
out
sub
inc
lahf
leave
push
insb
push
idiv
cltd
xor
iret
xrelease
inc
add
jl
jle
inc
mov
adc
dec
dec
pop
mov
repz
in
test
push
aaa
insl
or
mulb
in
sahf
xchg
sub
orps
add
out
adc
fisttpl
xchg
je
daa
aad
cmp
mov
orl
mov
je
divl
test
pop
repz
rolb
sbb
sbb
pop
fwait
xchg
popa
sahf
xchg
std
das
inc
push
jae
movsb
pop
enter
aaa
sti
mov
adc
fsubrs
adc
ja
popa
jb,pn
sbb
mov
mov
or
pusha
outsb
push
cmpsb
xchg
pop
subb
movsl
mov
xor
pop
rcr
mov
lahf
out
popa
dec
loopne
dec
pop
xchg
cli
movsb
cmc
jl
je
sahf
sbb
test
sub
sbb
mov
pop
sti
incl
adc
into
mov
pop
fnsave
cmp
xchg
fdiv
pop
ss
push
addb
sub
and
int3
jns
pop
sub
xchg
mov
fiadds
stos
arpl
inc
rcrl
dec
nop
xchg
or
sbb
and
loop
cmpsl
push
stc
jl
lahf
ret
mov
add
lahf
cmc
outsb
jle
pop
mov
in
fldz
xchg
into
cmpsb
and
mov
loop
and
sbb
adc
and
xor
int3
in
sbb
inc
sbb
outsl
pop
ret
mov
popf
xchg
cmpsl
push
icebp
and
add
xor
cmpl
jno
push
cmp
mov
pop
pop
test
test
fwait
add
adc
imul
inc
sub
dec
and
mov
js
lock
or
sbb
ja
das
jb
icebp
in
push
xchg
fs
xchg
fs
cmp
sbb
pop
xor
mov
xor
repnz
push
mov
mov
inc
pop
in
jmp
imul
inc
out
mov
mov
mov
pmullw
cmp
sbb
int3
xchg
stos
imul
insb
push
xor
enter
mov
addr16
mov
ret
xchg
std
mov
xor
clc
pushf
je
movsl
leave
shll
in
mov
push
mov
mov
add
xchg
cld
enter
pop
stos
cmc
push
shll
dec
sub
inc
add
pop
mov
dec
fadds
pop
xchg
test
leave
xchg
push
in
int
mov
pop
out
and
les
inc
fwait
push
xor
push
aad
xchg
std
lret
add
jmp
jae
inc
lahf
xor
arpl
xchg
xor
and
mov
push
pop
sti
cmpsl
add
sub
and
or
sbb
cwtl
and
or
fs
xchg
nop
xchg
das
dec
mov
pop
pop
pop
mov
xchg
or
lahf
out
stc
sbb
add
mov
xchg
inc
sub
push
in
sub
xchg
clc
fcomip
jnp
mov
mov
lods
pop
mov
loopne
lcall
fisubl
mov
add
es
mov
pop
inc
lods
dec
clc
sbb
movsb
or
int
add
fs
push
mov
jnp
aam
inc
sub
sti
inc
pop
out
scas
stc
push
jg
adc
nop
or
int3
mov
sarb
or
out
insl
sub
pop
shlb
ss
jecxz
pop
incl
xchg
mov
cmpb
lret
pop
and
leave
inc
int
pop
jl
es
or
popf
mov
std
pop
sbb
test
mov
aam
notl
in
push
pop
cld
ljmp
jecxz
jo
jb
rcrl
or
inc
sti
daa
loopne,pn
mov
negb
dec
jge
sub
cmpsl
and
sahf
es
ret
int
and
ret
xor
mov
testb
push
inc
xor
pop
pop
imul
daa
jnp
sahf
stc
mov
pop
in
in
fs
je
sti
inc
push
lcall
or
push
cmpsl
imulb
add
or
mov
out
je
test
fstl
inc
push
test
mov
and
test
fadds
pop
fsubp
pusha
sbb
cmp
add
push
or
in
lret
ds
paddd
jge
mov
ret
imul
ret
les
inc
pusha
sbb
outsb
sahf
cmp
push
aam
aam
pop
mov
loop
pop
in
roll
sub
jl
aaa
test
cmpsl
mov
jnp
pusha
push
add
jg
movsb
push
sub
mov
dec
and
cli
sub
movsb
in
loope
cmp
loopne
fmulp
movsb
gs
jae
and
push
loope
cltd
push
mov
ljmp
or
out
out
xchg
sub
and
inc
daa
cmp
adc
call
pop
add
rorl
push
lods
xchg
xchg
add
adc
call
dec
cmp
jno
iret
rorb
les
cld
sti
clc
cwtl
add
idiv
rol
ret
js
lahf
stc
mov
lcall
push
mov
or
ret
inc
pop
aas
or
gs
push
mov
and
cltd
sbb
push
je
fbstp
enter
add
mov
fdivs
mov
push
mov
push
sbb
mov
xor
mov
sbbl
cmp
add
push
pop
in
ja
sub
pop
inc
aam
lea
pop
xchg
es
cwtl
push
pushf
fwait
cs
data16
in
cmpsl
xchg
xchg
in
adc
lds
int3
pop
push
and
add
sub
shlw
push
imul
imul
adc
jbe
test
mov
mull
ljmp
mov
sbb
ss
push
xchg
je
mov
push
add
sub
bound
jle
cltd
daa
add
loope
inc
in
shrb
add
cmpsb
pop
cmpsl
in
lret
dec
or
lods
stos
jo
push
out
clc
aaa
out
sub
inc
cmp
int
fimuls
daa
jae
and
fcmovne
add
sar
push
mov
pop
je
add
out
add
sbb
fsubs
add
pop
icebp
or
dec
ss
push
rcrb
cmp
xlat
jg
mov
jl
pop
and
pop
cmpsl
aam
test
and
mov
xchg
test
mov
scas
jle
loope
rolb
mov
inc
adc
in
sub
jb
cld
mov
cltd
test
inc
leave
and
cli
pop
es
enter
iret
push
mov
lcall
push
fs
or
pop
int
xchg
jno
inc
sub
test
test
cmc
loopne
andl
call
ds
push
mov
stc
insb
lcall
sbb
pushf
jmp
sbb
inc
pop
cmp
jecxz
mov
xchg
popf
ja
outsb
repnz
add
movsb
cmp
and
xchg
mov
popf
jmp
xor
les
data16
lahf
ss
es
testb
outsl
pop
mov
cmpsb
aas
xchg
das
xchg
jbe
callw
inc
lahf
ss
es
testb
outsl
pop
mov
cmpsb
aas
xchg
das
xchg
jbe
out
out
inc
lahf
mov
pop
jbe
out
outsb
pop
mov
cmpsb
ds
das
xchg
jbe
callw
inc
lahf
ss
es
push
das
push
mov
outsl
mov
xchg
imul
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
cmpsb
mov
xchg
xchg
call
in
lock
aas
push
xor
adc
popa
jbe
inc
inc
push
push
cmpsb
movsb
mov
xchg
hlt
mov
cli
es
xor
or
adc
dec
jbe
inc
inc
push
push
cmpsb
add
loop
aam
mov
es
pop
jne
cmp
aaa
adc
xor
loopne
cmc
cmc
xlat
in
cmpsb
jmp
or
in
in
lret
into
inc
inc
in
mov
push
pop
sub
lock
icebp
jb
int
and
rcr
sbb
mov
xchg
inc
cltd
jno
sub
test
pop
int3
cmp
fs
xor
es
jl
xchg
decl
jecxz
mov
lock
out
out
cmp
pop
mov
xor
inc
mov
ret
jns
imul
cmc
movl
lahf
in
push
je
cmpsb
pop
inc
fstps
mov
icebp
jbe
push
stos
aaa
pop
cmp
fs
rclb
pop
or
xor
ds
sub
xchg
out
div
mov
inc
es
pushf
push
push
push
sub
jbe
inc
pop
push
data16
jecxz
repz
mov
cltd
mov
xor
mov
pop
sbb
xor
cmp
div
clc
mov
lods
out
inc
xor
inc
push
push
and
sub
je
and
iret
xlat
rclb
xchg
clc
out
div
mov
aam
and
xor
add
adc
fs
inc
inc
push
push
cmpsb
movsb
mov
xchg
hlt
mov
aam
and
xor
add
adc
fs
inc
inc
push
push
cmpsb
movsb
adc
cmp
orl
mov
ret
sbb
cmova
cmp
sbb
iret
fcomps
mov
cmpsb
incb
inc
imul
ret
stc
stos
mov
orb
mov
not
add
fldl
dec
dec
lcall
cmp
rcrb
and
ja
inc
fidivrl
jo
shlb
clc
int
popf
outsl
or
mov
inc
push
mov
jecxz
xor
xor
jmp
push
das
cmp
or
sub
pusha
pop
mov
bound
shlb
aad
mov
stos
fstps
icebp
cs
sbb
dec
mov
setnp
add
xor
jnp
mov
loope
pop
call
add
stos
dec
fisubl
out
test
sbb
jbe
xorl
subl
aam
push
mov
popf
or
sbb
xchg
pop
lea
int3
jb
faddp
mov
sub
test
cs
jge
mov
dec
pop
pop
sub
mov
add
subb
adc
insb
jbe
pop
jns
notl
dec
sbb
cmp
gs
jle
xchg
push
stc
sbb
jne
pop
lods
dec
sti
fstps
xor
aas
movsl
and
jbe
movsl
dec
mov
hlt
mov
aas
dec
es
xchg
mov
icebp
hlt
dec
imul
add
mov
jle
pop
jb
pop
xor
or
shll
or
cmc
jnp
popl
mov
push
jae
push
call
or
mov
xchg
fidivrs
cmp
cwtl
mov
and
sub
in
out
mov
lret
push
stos
jmp
add
push
mov
inc
fcomp
mov
and
arpl
dec
iret
insb
movsl
push
xchg
mov
arpl
ljmp
push
popa
push
outsb
movsb
xor
jmp
fdivl
jl
add
scas
pushf
sub
inc
adc
popa
mov
jno
clc
or
mull
out
loope
mov
pop
cmp
or
pop
jb
sub
inc
iret
jmp
xor
js
std
hlt
jb
nop
cwtl
in
stos
mov
shr
test
mov
push
imul
push
loop
mov
jg
pusha
je
mov
sti
mov
jo
push
cli
lock
mov
shl
fsub
sbb
iret
popf
out
lock
mov
xchg
fistpl
push
mov
aaa
cld
ljmp
inc
cmp
push
cli
mov
popa
rcl
push
and
pop
mov
fsubs
mov
push
nop
shl
pop
mov
push
in
aad
sub
mov
iret
sub
les
call
loopne
dec
and
jle
ret
adc
leave
ja
jb
jecxz
stc
mov
jns
and
or
sbb
mov
mov
out
btc
rcll
in
lea
xchg
dec
les
jmp
mov
and
js
jecxz
xchg
cmp
je
add
cs
cli
test
push
testb
out
invd
push
and
sub
out
sbb
hlt
es
dec
xchg
aaa
jo
jo
cmp
or
jno
loope
aas
cld
jge
push
sbb
arpl
jp
jbe
cwtl
jno
movsl
or
or
dec
adc
inc
xor
and
scas
lret
mov
movsl
pop
sub
inc
out
lea
lds
mov
xchg
es
xchg
xchg
leave
pop
mov
scas
ret
push
add
jg
mul
mov
add
add
inc
push
adc
dec
ret
out
clc
sbb
fwait
sbb
adc
jge
iret
sbb
imul
jne
add
sub
cwtl
xchg
mov
inc
test
lea
arpl
and
orl
das
adc
mov
push
jne
outsl
negb
jecxz
popf
mov
jmp
imul
mov
adc
test
inc
lret
jp
es
and
out
mov
mov
and
mov
jmp
cmp
push
pop
out
repnz
pop
icebp
push
ret
ret
repnz
in
sbb
push
loop
ficompl
sub
jno
popf
xor
stc
sub
push
das
fcmovbe
cmp
or
rorb
push
lahf
adc
outsl
add
lods
or
inc
bound
outsl
inc
mov
lods
popf
ffree
inc
dec
or
outsb
mov
inc
iret
mov
pushf
mov
or
cltd
lea
xchg
push
jns
xchg
rcll
iret
dec
divl
stc
ja
pop
mov
and
pusha
and
sahf
aas
dec
ljmp
stos
leave
cmp
aaa
fisubs
sub
dec
sub
pop
ret
inc
insl
hlt
dec
imul
in
stos
fbstp
xchg
mov
push
sbbl
std
jg
outsb
sbb
or
sub
add
fstpl
add
fsubl
clc
ja
push
mov
test
cmp
repnz
ss
icebp
shrb
cltd
add
xor
sub
adc
bound
add
test
js
pop
cmc
pop
cmp
dec
mov
jge
xchg
data16
pop
mul
out
dec
movsb
insb
test
sub
xorl
loop
stos
cmp
mov
pop
into
add
push
xor
dec
in
inc
sub
and
xchg
sti
stc
ljmp
std
cmp
push
pop
insl
nop
filds
fdivl
ret
mov
cmp
imul
in
jbe
stos
out
mov
cmp
test
adc
cmp
inc
xor
test
loopne
mov
fwait
movb
mov
lods
loop
ja
adc
dec
jecxz
adc
dec
das
jecxz
mov
jo
jne
push
out
cmp
jbe
scas
and
out
test
cmp
sarl
jmp
or
repz
adc
insb
sbb
jno
cmp
jecxz
and
insb
ja
push
sub
loopne
cmc
adc
stos
or
int3
lret
jne
in
or
sbb
and
push
lret
jb
push
lahf
pop
xchg
int
imul
popf
adc
arpl
mov
out
popa
in
sbb
mov
loop
xchg
lcallw
clc
pop
sbb
faddl
mov
adc
loopne
es
in
mov
lock
pop
xor
mov
subl
aas
sub
push
mov
xchg
and
sti
push
jge
test
dec
xchg
into
mov
sbb
dec
mov
xchg
jo
movl
and
push
xchg
push
mov
cmp
sub
addl
pop
sub
out
int
mov
xchg
sub
mov
mov
xor
add
or
cmp
pop
mov
bound
mov
insb
dec
das
das
ficompl
fcmovnu
jbe
jo
pop
outsl
fwait
mov
repz
in
cwtl
enter
push
fst
pop
stos
mov
add
pop
xorb
das
sbb
mov
mov
repz
pop
in
mov
iret
mov
call
sahf
lcall
xor
and
pushf
pusha
push
aas
imul
cmpsb
adc
dec
je
sub
jle
pop
jecxz
dec
insl
out
aad
test
pop
push
sub
sbb
mov
mov
pusha
cmpsb
aaa
sti
mov
pop
loop
xchg
cmp
push
jl
jmp
dec
pop
rcrl
mov
lret
mov
mov
inc
inc
out
pushf
adc
shll
out
xchg
hlt
aam
movsb
mov
pop
pop
inc
jle
popa
hlt
scas
testl
inc
sbb
fs
sarb
cmp
or
ja
mov
pop
mov
test
jb
fstps
ds
inc
iret
pop
push
es
and
or
fwait
xchg
lea
std
dec
jg
mov
mov
loop
mov
mov
lds
int3
push
pop
dec
push
call
xor
pushf
jbe
bound
call
test
cmp
mov
das
nop
mov
movsb
push
sbb
lahf
or
jae
in
ss
push
cmp
cs
xor
movsb
out
lds
and
outsl
add
xchg
and
adc
or
cmp
lods
cli
or
xchg
mov
fildl
lock
scas
shll
les
test
inc
cmp
sarl
dec
rcll
ljmp
mov
push
adc
mov
mov
ja
jg
mov
fistpl
out
lods
loopne
call
and
push
lret
inc
lea
scas
ficomps
pop
bound
lahf
sbb
mov
dec
xlat
sub
jmp
cmpb
lods
sbb
insl
pop
in
sub
pop
addb
xor
sub
or
loop
xchg
scas
xchg
fldenv
sub
cmpsb
push
xchg
or
enter
adc
add
sbb
fiadds
hlt
lea
or
mov
xchg
sbb
push
sbb
jmp
jle
or
or
push
sbb
adc
jmp
pop
push
xchg
in
sbb
add
testb
jo
mov
stc
xor
inc
outsb
pop
mov
mov
mov
ret
lcall
push
mov
scas
nop
jle
pusha
imul
sbb
and
lcall
xor
cmpsl
je
aaa
xchg
dec
jno
sub
loop
or
fisubl
aaa
xchg
data16
int
inc
or
mov
in
pop
pop
call
mov
andb
inc
cltd
cmp
jb
inc
inc
nop
mov
cmp
or
push
dec
jno
addr16
movsb
test
bnd
out
and
sub
aam
mov
and
mov
iret
sub
mov
sub
push
sub
outsb
push
gs
inc
rolb
outsl
cmp
movsl
imul
ljmp
orl
mov
xor
mov
fnstenv
outsl
xor
lret
adc
and
or
and
xchg
dec
jg
mov
adc
aaa
jne
icebp
push
xchg
mov
movsb
jg
adc
in
dec
mov
imul
out
or
sahf
lds
mov
pop
push
sar
adc
faddl
js
xor
add
inc
pop
push
lahf
mov
ss
std
popl
xchg
pusha
sub
sbb
sbb
pop
in
bound
dec
iret
jl
popf
addr16
xchg
dec
inc
leave
nop
xchg
pop
cmp
or
mov
push
adc
xor
mov
test
push
push
adcb
into
ja
into
or
pop
cmp
xlat
fmuls
outsb
mov
mov
cwtl
insb
pusha
sbb
mov
dec
int
jbe
xchg
cmp
fildl
sbb
mov
das
lock
outsl
lret
pop
xchg
or
popa
ss
imul
lahf
lret
and
stc
jns
stos
fstpl
pop
jae
fidivrl
loopne
or
insb
lcall
cmpsb
jl
and
inc
jl
inc
sbb
lret
jno
jle
pop
mov
sub
rcrl
inc
jno
xchg
pop
loop
xchg
aas
mov
fstpt
pop
aaa
adc
shlb
pop
imul
xchg
dec
movsl
loope
inc
testl
ss
andl
dec
gs
jle
lret
adc
jns
popa
cmc
scas
call
or
mov
fucomi
mov
sbb
in
mov
mov
rol
mov
sub
jg
jnp
pop
pop
outsb
dec
adc
rol
push
ljmp
mov
inc
outsl
cli
fwait
subb
lea
data16
xchg
or
cmp
stc
pop
dec
jp
sbb
enter
fwait
aad
in
sbb
add
push
jbe
in
shl
jle
pushf
cs
sub
add
pop
pop
lods
push
ljmp
in
mov
lods
int
dec
sbb
iret
push
jecxz
xor
sub
inc
jno
into
pop
push
inc
aaa
out
and
fmuls
repnz
iret
iret
out
ds
sub
or
jnp
pop
jno
popa
jo
mov
out
inc
popf
repnz
sbb
imul
jmp
ror
leave
fisubrl
lret
les
popf
fadds
or
sbb
aad
pavgw
pusha
inc
pop
fwait
dec
jp
es
push
xor
js
or
sub
std
scas
pusha
mov
mov
fcoml
adc
sub
fwait
clc
shll
push
push
sarb
sub
insb
sbb
add
or
and
ficoml
stos
mov
in
das
lods
xor
or
dec
out
fwait
jmp
mov
lret
mov
mov
test
adc
jnp
push
add
stos
xlat
call
leave
jo
jns
or
jge
arpl
mov
cmpl
push
fcomps
mov
xchg
lret
push
sbb
popf
dec
xchg
jmp
mov
clc
adc
lods
ljmp
stos
adc
fcomp
cltd
lret
shrb
xchg
xor
int
and
aas
add
lods
ja
dec
aad
pop
in
inc
mov
mov
jle
xlat
out
into
push
test
hlt
cmpsl
out
push
daa
mov
aad
jns
cmp
push
sahf
sub
aaa
inc
and
pop
or
cmp
stc
lea
push
ret
mov
mov
loope
out
fisttpll
cwtl
adcb
xchg
test
ljmp
stos
adc
sarl
sub
pushf
sub
jb
xor
push
inc
push
pop
mov
cmc
dec
inc
inc
cmp
push
pop
test
mov
and
fldl
faddl
stos
sbb
xor
inc
inc
cmpsb
add
cmp
ja
jg
lods
fcompl
dec
mov
loopne,pn
rcrl
dec
mov
leave
mov
or
arpl
adc
cmp
add
mov
lret
xchg
shr
ret
add
in
rclb
mov
push
out
aaa
adc
hlt
and
test
jecxz
pop
daa
jae
rcrl
cmp
sub
loope
and
mov
jg
mov
mov
les
dec
adc
ss
xor
push
lods
popf
pop
sbb
add
dec
dec
je
out
mov
je
mov
mov
insb
xchg
jae
daa
lock
shrb
sub
lds
mov
mov
imulb
jae
add
jge
pop
out
jle
adc
jb
pushf
mov
mov
or
test
addl
jle
dec
xchg
pop
sbb
sbb
outsl
hlt
push
lahf
dec
in
pusha
out
fisttps
or
adc
int3
fs
mov
addb
push
push
aas
or
stos
sub
into
inc
jae
in
fwait
fs
insl
push
xlat
or
xor
and
addr16
fisttps
cmpsb
sbb
pushf
jb
sbb
jecxz
in
addr16
cmp
or
pop
xor
mov
or
push
loop
out
push
dec
mov
mov
mov
push
ret
in
fldenv
adc
outsl
jbe
push
dec
sbb
sub
xchg
sbbb
mov
mov
inc
and
outsb
xchg
mov
out
ljmp
mov
out
xchg
xchg
mov
cmp
int3
loopne
pop
add
flds
cmp
add
repnz
push
mov
jb
inc
and
fdivr
mov
xchg
nop
mov
enter
aam
hlt
mov
inc
pusha
jbe
or
or
and
les
scas
inc
lock
sub
into
insb
jmp
insb
lret
jle
bound
mov
inc
sbb
test
mov
int
adc
test
lahf
stos
gs
sarb
aad
inc
nop
out
jae
in
test
test
or
push
mov
nop
cld
jno
pop
push
and
jbe
cmp
iret
xchg
xchg
jl
sub
cmpsl
js
push
aas
fsubr
idivl
aaa
sub
add
daa
dec
shl
hlt
popf
jg
mov
xchg
repz
xchg
xor
pusha
mov
jnp
repnz
lods
sub
out
add
fiaddl
mov
sbbl
jne
xchg
jmp
add
jle
or
cmpsb
cmpsb
mov
push
clc
mov
cmc
lock
pop
jecxz
outsb
out
jp
insl
clc
inc
dec
inc
lods
gs
mov
xor
jp
mov
and
jbe
inc
mov
pop
mov
xor
ret
xor
jae
add
fidivrs
mov
sti
cmp
repnz
pop
mov
int3
outsl
outsl
enter
dec
dec
xchg
pop
pop
xchg
in
adc
mov
cmp
leave
pop
xchg
mov
mov
and
pop
push
add
out
fisttpll
dec
lret
insl
stc
and
stos
dec
hlt
icebp
or
sbb
enter
xlat
and
in
jnp
and
out
and
shlb
filds
test
outsb
mov
mov
mov
mov
cs
cmp
lret
loop
adc
jne
inc
and
mov
rorl
pop
push
pusha
imul
adc
lahf
xor
fs
cmp
fstpt
lock
inc
and
xor
pushf
sahf
daa
addr16
and
inc
inc
into
shrb
xchg
push
cli
fsubs
mov
ret
test
negb
mov
dec
mov
mov
mov
pop
cmp
mov
lret
out
xor
xor
out
sub
pushf
xorl
fsubrs
sbb
sbb
popf
lock
adc
cmpsl
lock
inc
cld
hlt
ret
and
push
test
dec
mov
clc
repz
mov
jl
stc
nop
xchg
inc
push
mov
sub
add
cwtl
popl
jb
das
aaa
fs
mov
xchg
adc
rep
pop
push
cmp
les
adc
add
aam
xor
add
shl
adc
cmp
pop
dec
es
cmpl
mov
mov
push
xchg
mulb
test
mov
test
and
je
mov
mov
aad
jno
sub
sarb
adc
mov
adc
sub
jecxz
lds
jo
rolb
xchg
mov
cltd
dec
in
and
mov
mov
mov
xchg
jae
push
push
sub
dec
pop
mov
bound
push
sub
mov
push
sahf
dec
xlat
xor
jge
cmp
jecxz
jg,pt
mov
push
shrl
fs
stos
movl
xchg
pushl
cli
sbbl
ficoms
mov
fstps
decb
lods
inc
test
xor
roll
xor
lret
inc
cmp
mov
test
int
xor
fs
cs
ret
loopne
push
movsl
and
sub
arpl
adcb
stos
sbbb
insb
jns
jbe
dec
inc
cmp
in
pushf
aaa
stos
and
mov
jae
jne
movsl
push
ret
sbb
sbb
scas
clc
mov
cmp
int
or
cmp
cmc
cmp
sub
sbb
fcomps
inc
ret
jmp
mov
push
sahf
xlat
cmp
lds
addl
push
iret
pop
popl
cmp
mov
sti
bound
out
mov
sub
mov
ret
outsb
cli
lahf
fcmovnu
aas
and
mov
loope
test
loop
sub
daa
shlb
in
mov
sub
stos
jb
dec
pop
aaa
data16
lods
cmp
cmp
push
cltd
add
or
pop
adc
roll
aad
je
in
xchg
neg
rclb
loope
js
fldenv
fldcw
push
sub
xchg
sub
inc
adc
adc
fs
mov
xchg
mov
movsb
in
gs
and
inc
and
push
lret
lds
jne
ror
sub
jmp
sbb
xor
sti
arpl
das
push
sbb
nop
test
xor
call
dec
js
cmpsl
xchg
push
sahf
in
je
sub
subl
aam
loope
xor
icebp
push
cs
inc
xlat
add
mov
cmp
pop
bound
jne
cwtl
sub
bound
imul
mov
adc
jo
out
push
dec
xor
or
or
aas
fsqrt
arpl
adc
xchg
fistps
sub
js,pt
or
shll
insl
imul
jno
pop
inc
mov
sbb
and
cmpsb
cwtl
push
cs
jne
adc
sarl
mov
into
pop
push
xchg
dec
jne
loope
mov
lock
mov
pop
add
aam
pushf
bnd
sbb
popa
shlb
or
mov
in
push
mov
pop
xor
add
xor
sub
andl
popa
pop
repz
adcl
mov
pop
mov
test
inc
add
enter
aam
outsb
dec
icebp
xchg
and
or
lods
sbb
push
cmp
inc
jmp
and
arpl
jbe
mov
mov
enter
shlb
aam
ret
add
jg
mov
xchg
sub
mov
rol
leave
das
scas
out
lods
inc
shrl
outsl
mov
xchg
cmpsb
pop
push
mov
and
fstpt
adc
jns
adc
pushf
add
push
and
aad
into
pop
jg
mov
mov
iret
leave
xchg
inc
xchg
jp
insl
lahf
mov
sbb
fistpll
scas
incl
add
rorb
mov
sbb
lds
out
std
pop
fnstsw
cwtl
mov
test
out
lcall
push
roll
movsb
dec
add
inc
mov
inc
dec
in
ss
pop
test
and
gs
mov
lahf
ret
cli
mov
or
cmpsl
push
dec
cli
pop
ds
pmaxub
or
mov
lret
xchg
xor
jecxz
in
inc
add
loop
xlat
jae
imul
xchg
jno
adc
loope
insl
aaa
data16
and
test
mov
mov
pop
jo
cmp
lcall
inc
lods
in
inc
mov
xchg
lcall
test
daa
cwtl
or
lcall
loopne
sub
xchg
dec
dec
sub
and
call
pop
adc
cmp
fs
notrack
mov
xchg
addl
inc
adc
sbb
cmp
xchg
inc
push
xchg
xchg
cmp
out
ss
movl
loope
mov
cmp
mov
sbb
xchg
arpl
stos
outsl
add
or
ja
sbb
mov
adcl
aam
and
xor
add
adc
fs
inc
inc
push
push
cmpsb
movsb
mov
xchg
hlt
mov
aam
and
xor
add
adc
fs
inc
inc
push
push
cmpsb
mov
xchg
nop
out
negb
es
push
sbb
inc
dec
push
mov
inc
mov
xchg
aam
in
hlt
movb
sahf
lods
add
arpl
sbb
or
cmp
sub
int3
int3
int3
int3
mov
fldenv
pop
jecxz
scas
jns
add
or
add
add
add
add
mov
add
pop
add
add
add
add
add
add
add
pop
add
roll
add
aaa
add
add
add
jge
pop
add
add
add
add
add
lea
pop
add
mov
addl
xor
sbb
sub
jns
push
add
add
add
mov
pusha
add
roll
sbb
add
mov
add
add
add
add
add
add
adc
cltd
add
add
add
mov
daa
add
add
clc
add
fiaddl
and
sbb
sub
add
add
add
add
add
pop
add
add
clc
add
add
or
mov
add
add
add
imul
sbb
imul
add
add
add
add
add
add
push
add
add
add
add
inc
add
add
add
adc
mov
add
add
add
add
int
or
inc
add
add
xor
sbb
outsb
add
push
add
add
add
add
scas
add
add
pop
add
push
add
add
mov
addl
movsl
add
add
add
add
add
jbe
imul
add
add
push
add
add
add
push
add
add
add
add
add
add
add
mov
outsb
add
add
dec
add
add
cltd
add
add
test
lods
add
add
pushf
add
add
out
adc
insl
add
and
les
rolb
and
add
adc
sub
add
adc
clc
add
add
add
add
add
add
add
add
roll
pop
add
sub
addr16
add
add
add
add
add
add
or
dec
add
add
mov
outsl
add
add
add
scas
add
add
insl
add
flds
addl
clc
add
add
and
bound
incb
movsl
add
add
cmp
rolb
imul
add
mov
add
add
add
xchg
add
or
sub
add
add
add
add
mov
add
add
add
add
add
out
add
add
test
push
add
add
mov
add
add
adc
jg
lods
add
add
add
add
add
add
add
add
add
adc
stos
add
sbb
roll
add
add
add
sbb
sub
add
add
add
xchg
mov
add
add
or
pop
add
add
add
add
add
or
dec
add
add
add
add
add
sbb
roll
leave
add
add
add
popa
add
add
sub
xchg
add
add
leave
add
add
aaa
add
add
add
insl
add
dec
add
add
sbb
sub
add
add
add
insl
add
add
add
add
jmp
pop
add
add
pop
add
add
mov
add
lcall
add
add
fadds
mov
add
cmp
xchg
add
and
and
test
scas
lods
loope
mov
test
add
xor
jbe
pop
arpl
mov
pop
or
in
inc
mov
push
adc
iret
lret
and
lahf
xor
cmp
mov
and
in
ss
sbb
xchg
jecxz
jb
xor
scas
inc
mov
push
movsb
push
pusha
and
stos
fs
lods
inc
pop
lods
icebp
xchg
fwait
push
jg
int
mov
loopne
inc
jmp
cmpl
cli
test
dec
clc
sub
repz
nop
lea
aaa
push
das
push
lahf
movd
ljmp
push
dec
mov
flds
test
gs
jmp
rcr
repz
dec
into
mov
test
stos
data16
sahf
inc
mov
pop
and
stc
sub
lahf
insb
aam
jbe
lods
mov
add
mov
xlat
fistpll
and
pop
rolb
stos
dec
dec
call
jge
xlat
movsl
out
es
test
push
and
stos
rcrl
movsl
sub
test
push
sub
into
mov
pop
in
int
clc
repz
push
into
adc
mov
add
adc
sub
mov
sbb
jecxz
xchg
push
add
xor
xchg
xchg
xchg
mov
sbb
lret
stc
dec
arpl
push
lahf
shll
or
mov
pop
xor
inc
inc
out
pop
inc
dec
sbb
stos
dec
mov
rorb
or
enter
cmp
push
xchg
cmp
aas
hlt
xor
loope
dec
mulps
sar
mov
sub
push
pushf
push
arpl
hlt
popa
and
icebp
xchg
pop
pusha
movsb
mov
hlt
sahf
xchg
or
je
add
mov
cmpsb
clc
mov
pop
xor
inc
test
and
lock
hlt
push
cmp
or
cwtl
data16
xchg
mov
fistl
popa
push
int
and
icebp
xor
lret
mov
mov
icebp
mov
stc
repz
enter
std
cmc
push
push
and
in
out
sub
vmovddup
fisubrs
out
mov
shr
push
xor
orb
push
repnz
outsl
push
add
int3
scas
stos
decl
pop
stc
dec
repnz
push
push
mov
cmp
sbb
cltd
adc
jae
or
hlt
das
cmp
les
setp
rdtsc
push
je
inc
out
xor
les
sub
in
arpl
insb
or
repnz
test
imul
jp
jl
and
mov
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
