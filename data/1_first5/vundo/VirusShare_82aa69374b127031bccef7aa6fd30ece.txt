jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
shlb
lret
aad
xor
cmpsb
dec
xchg
adc
or
add
add
push
add
aam
xor
add
add
add
or
add
add
rolb
or
cmpsl
add
add
add
cmp
add
add
xor
add
dec
add
add
add
xor
and
aas
add
add
push
mov
add
dec
add
xor
add
add
add
add
sbb
or
push
jnp
roll
addb
add
pop
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
mov
cltd
add
add
or
push
iret
add
add
pop
add
add
add
adc
addb
add
js
or
cmp
ss
add
add
push
add
add
add
fiaddl
xchg
addb
add
xchg
add
add
add
add
add
addl
add
add
add
mov
add
add
add
add
add
add
or
mov
pushf
add
add
add
add
add
add
out
add
add
addb
add
add
add
in
add
add
add
push
js
add
sub
add
cmp
adc
or
dec
add
add
add
add
add
add
lcall
add
add
add
add
pusha
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
mov
add
movsb
add
add
addb
add
mov
or
push
add
add
add
add
add
add
add
add
add
dec
add
pop
add
or
cmp
pop
add
enter
or
mov
add
sti
add
add
dec
add
add
add
dec
add
add
or
push
add
push
add
addb
add
add
add
add
add
jae
int
mov
add
add
add
add
or
ljmp
add
add
add
add
add
roll
and
inc
add
popf
add
addb
add
add
add
add
arpl
mov
add
add
cltd
add
add
add
and
inc
add
add
daa
add
add
add
add
add
mov
popf
add
add
add
add
add
add
add
add
add
add
inc
add
pop
add
add
or
pop
add
add
add
add
nop
add
add
add
add
addl
add
add
add
push
add
add
jp
addb
add
cmp
add
add
xor
add
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
pop
add
add
add
xchg
add
add
add
add
stos
add
add
insl
add
add
add
add
or
insb
add
jb
orl
das
es
pop
adc
sub
hlt
xor
mov
add
push
orl
into
sub
add
mov
divl
movsb
cld
and
pop
popf
addr16
mov
loopne
inc
jae
adc
or
xchg
ss
iret
or
xchg
bound
mov
sti
loop
cmp
ss
nop
mov
add
bswap
adc
in
iret
testb
out
pop
lds
inc
jecxz
shlb
and
pusha
jne
sti
pop
inc
loopne
push
sub
add
dec
jae
jle
lahf
insb
in
xchg
lods
sbbb
scas
fcompl
jmp
repz
xchg
xchg
cmp
in
sub
or
add
into
imul
loop
inc
push
and
daa
mov
mov
add
adc
cmp
or
ljmp
dec
mov
xor
inc
jp
out
xorl
or
adc
stos
scas
lret
xchg
lret
mov
mov
lahf
and
subb
cli
adc
mov
es
lds
mov
repz
repnz
sub
or
mov
push
sub
sar
stos
imul
sbbb
mov
cld
out
add
adc
mov
inc
pop
push
push
xor
pop
roll
push
and
cltd
lock
dec
mov
in
jae
pop
sbb
mov
sub
sbb
inc
testb
shr
je
cld
fsubl
cmp
push
mov
push
mov
test
xchg
pop
mov
fsub
out
xchg
out
pop
sub
bnd
stos
out
dec
cmp
lgdtl
push
in
add
in
ret
sarb
jns
ja
dec
imul
rcr
inc
inc
sub
xchg
push
xor
cld
xor
arpl
adc
and
mov
cmpsb
clc
xchg
inc
mov
das
lods
jmp
add
pop
clc
add
cltd
dec
rolb
mov
jecxz
mov
jo
leave
add
sarb
fdivr
jp
scas
popf
mov
dec
pusha
mov
and
add
jae
scas
ret
push
iret
xchg
pop
stos
ds
add
jle
bound
or
lods
sub
pop
loopne
sarl
sbbb
shl
sbb
jge
imul
mov
inc
test
or
je
mov
jae
and
sbb
add
push
jo
xchg
inc
xchg
por
les
sahf
pop
push
repz
pop
sbbl
cltd
add
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cmp
jbe
inc
cmp
cmp
inc
and
sub
mov
mov
testb
sbb
jbe
push
sub
pop
ss
push
jp
push
lcall
cmpsb
fidivl
ljmp
dec
sub
pop
das
dec
push
jp
push
movsb
std
stos
lret
mov
ljmp
cmp
cs
lret
jns
mov
mov
dec
adc
adc
dec
inc
sub
loope
leave
mov
jbe
bound
daa
or
cmp
loope
push
sbb
jmp
jbe
bswap
xchg
inc
push
jge
jmp
pop
or
sub
stc
sub
push
jmp
in
or
pop
and
xchg
push
cmp
test
mov
mov
lcall
mov
pop
in
and
jbe
divb
out
fisttps
mov
inc
cltd
or
mov
or
outsb
mov
or
fistpl
xchg
mov
out
sbb
fwait
cmp
cmpsb
ds
xchg
ljmp
inc
sub
pop
sub
push
jp
push
lcall
mov
cli
lods
adc
jl
insb
inc
xor
jnp
xchg
div
jecxz
aam
lret
mov
js
pop
jbe
and
push
jge
aas
pop
fs
push
push
fcomip
out
in
mov
movsl
testb
jle
dec
push
pop
pop
ss
push
jp
push
lcall
cmpsb
fidivl
ljmp
push
sub
pop
ss
push
jp
push
lcall
cmpsb
fidivl
ljmp
ds
or
sbb
cltd
je
push
pop
mov
out
icebp
aam
or
push
lea
in
dec
lods
fcmovb
mov
mov
mov
scas
fdiv
icebp
cltd
cmp
push
cli
stos
pop
sub
sub
pusha
sar
xlat
pop
xor
stc
clc
add
addr16
hlt
xchg
in
das
int3
cmpsl
mov
aad
lret
push
movsl
enter
lret
push
pusha
aaa
iret
push
xor
push
push
xchg
ds
mov
dec
loopne
and
and
pop
out
cmp
loopne
add
mov
or
pop
or
gs
out
scas
jl
addr16
and
daa
sbb
mov
int3
xchg
push
pop
cmp
insb
lret
lock
loop
scas
pop
adc
ret
inc
out
cmp
jg
popf
sub
dec
aaa
dec
rorb
aaa
sub
sub
adc
addl
pop
test
xchg
imul
add
cwtl
or
iret
imul
mov
pusha
mov
jnp
out
mov
aad
adc
sbb
clc
mov
ret
rorl
push
std
cmpsb
ret
cwtl
shl
mov
outsl
cli
dec
mov
cmp
repz
addr16
arpl
fmul
dec
and
scas
js
sbb
or
mov
ret
fs
push
xchg
jns
mov
daa
or
in
repnz
sbb
sahf
orl
ja
and
and
and
mov
mov
push
ds
insb
lock
and
stc
xchg
mov
imul
dec
out
js
inc
sbb
out
mov
sti
adc
aad
in
cmp
xchg
bound
fcomp
popf
jae
scas
ljmp
xchg
dec
shll
mov
ss
std
pop
in
dec
fisttpll
stc
xchg
ret
jmp
mov
cltd
or
and
inc
jb
test
stos
mov
mov
dec
mov
rorb
xorb
mov
outsl
pop
mov
popa
mov
pop
cmp
stc
sub
pop
jae
mov
dec
push
xchg
sub
sub
cmp
push
scas
call
movsl
cltd
sbb
ret
push
jg
ds
ret
lds
pushf
push
imul
daa
loope
in
mov
cmc
xor
mov
add
addr16
jbe
xchg
jnp
flds
jle
test
and
push
xor
adc
hlt
ds
mov
stc
mov
into
jecxz
mov
out
mov
andb
inc
pushf
xchg
and
scas
lock
inc
adc
xor
adc
or
out
les
std
mov
adc
shl
or
mov
sub
and
jle
aam
or
fwait
jnp
outsb
push
lret
iret
mov
out
fisubrl
outsb
daa
nop
lock
push
xor
cs
add
xor
cs
or
jle
mov
add
inc
pop
jbe
sub
cli
daa
fs
imul
xchg
mov
or
mov
push
dec
mov
movq
sub
xchg
xchg
fnstsw
in
sub
jl
filds
leave
aaa
clc
call
xor
inc
xor
fists
xchg
inc
mov
or
clc
fisttpl
push
inc
adc
jno
fidivrl
sbb
and
cwtl
lods
mov
inc
or
and
test
adc
roll
push
fmul
push
xchg
stos
inc
cmp
sub
sbb
aas
insb
sti
es
or
jecxz
xor
jnp
xor
enter
add
mov
and
sbb
dec
push
mov
fucomi
xchg
xchg
sbb
fwait
cmp
scas
adc
les
add
mov
shlb
mov
movsb
into
in
mov
sbb
add
cmpb
das
aad
inc
pop
mov
sahf
out
out
shll
shrb
std
and
xor
outsl
xor
mov
outsl
mov
add
test
pop
push
popf
and
pop
pop
shll
out
and
cmp
fnsave
sbb
xor
pop
mov
mov
je
ljmp
jne
jl
or
push
lods
push
stos
pop
cmpsl
imul
dec
cwtl
adc
les
sbb
and
and
lcall
nop
ja
sbb
les
pop
sbb
fwait
xchg
aaa
pop
scas
sahf
add
shrb
out
push
push
addl
or
jle
mull
push
and
push
cltd
popa
fwait
inc
into
in
xor
rclb
xchg
hlt
or
jae
cmp
pop
lods
cmp
cmp
add
sbb
loope
mov
notl
inc
std
cmp
pop
call
mov
scas
movq
flds
push
sbbb
popf
lods
test
mov
decl
mov
cmpsb
lods
lods
inc
jo
xchg
inc
xchg
dec
add
js
mov
lods
out
fdivl
fs
sbb
pop
dec
iret
adc
js
xor
out
aam
lods
mov
insb
shr
dec
cwtl
xchg
inc
add
pushf
bound
push
lds
cmp
aam
mov
imul
in
or
mov
loopne
push
and
or
and
ret
mov
fwait
mov
mov
xchg
adcb
in
popa
adc
call
jl
sti
leave
sarl
sub
popf
orl
push
xchg
dec
lcall
push
mov
imul
jae
mov
adc
outsl
clc
mov
xor
mov
xor
dec
fmuls
popa
mov
push
cltd
scas
inc
loopne
pop
xchg
pop
outsb
cmpsb
mov
jbe
adc
mov
into
adc
jno
dec
lds
addb
int
fldt
xchg
enter
sub
dec
in
push
cwtl
mov
sub
repnz
pop
mov
mov
aas
dec
xchg
jnp
test
into
add
jge
jmp
icebp
das
out
or
pop
pop
push
sbb
cs
push
add
xchg
out
add
push
mov
mov
mov
test
int
dec
jl
sub
mov
loopne
aam
stos
and
cwtl
push
lret
mov
ja
xchg
dec
clc
jg
pop
jle
stos
add
ljmp
rclb
insb
mov
pop
rol
mov
in
or
xchg
cmp
lea
mov
push
fisubrs
add
ror
mov
jl
add
into
cld
test
pop
add
xor
nop
movsl
mov
outsb
stc
or
pop
mov
lret
push
mov
jno
jno
pop
jle
imul
adc
jmp
ret
mov
test
xchg
sbb
jo
sub
mov
xor
in
in
mov
pop
fcomps
pop
inc
pop
rclb
por
or
sub
push
inc
mov
call
mov
jb
hlt
add
sub
test
out
movb
repz
xor
dec
xor
aas
in
jge
jns
sub
or
imul
nop
mov
icebp
mov
out
xlat
fnstsw
mov
xchg
mov
lret
popa
cmpsl
pop
aas
cmp
mov
popa
andl
add
ret
test
pop
negl
out
roll
fisttps
xchg
in
movsb
loop
lock
out
jo
mov
mov
pop
in
fwait
adc
cwtl
and
xor
sub
push
mov
aas
clc
mov
bound
push
pusha
dec
pop
cmp
or
jno
out
movsb
test
push
and
pop
or
repnz
out
pop
mov
fdivp
into
or
mov
mov
cmp
mov
and
cmpsl
sub
sahf
mov
mov
mov
int3
cmp
and
xor
shrb
sbb
inc
jb
iret
aas
out
sbb
sahf
dec
mov
cli
mov
or
hlt
mov
and
sti
sbbb
pop
mov
imul
divl
cmp
idiv
and
inc
mov
insl
call
sbb
push
xchg
lret
jge
jmp
mov
jo
mov
pushf
int
cmp
jg
pop
sub
outsl
stos
rcrb
iret
jb
daa
test
test
iret
xchg
lret
sub
lahf
inc
rcl
and
adc
mov
popa
mov
scas
inc
out
aad
call
ret
inc
dec
shr
and
fwait
jb
cli
scas
sbb
dec
decb
ss
sub
pop
sub
jmp
cmp
inc
jbe
out
int
decl
bound
jo
adc
fadds
out
xor
das
xchg
jecxz
jp
lahf
pop
jb
xor
pushaw
mov
fisubrs
addr16
out
stos
mov
sahf
lock
lds
rcll
xor
inc
sub
mov
out
sub
mov
pop
into
subb
in
pop
sbb
jl
pop
dec
inc
adc
ret
adc
sbb
fmulp
sarb
andb
xor
xchg
cltd
icebp
or
repz
push
add
add
inc
ljmp
xorl
hlt
fidivrs
mov
dec
mov
enter
sbb
cli
in
or
lock
xor
pop
xchg
shrb
sbb
shl
aaa
jg
insb
push
pusha
fildl
adc
xchg
ja
sbb
sub
aaa
pop
xchg
imul
outsl
and
outsl
cmp
push
fstpl
lock
rcrb
jbe
jge
mov
lds
jecxz
mov
xchg
adcb
mov
popf
dec
add
adc
movsb
add
into
rcl
repz
mov
in
lods
inc
push
clc
dec
outsb
int
aas
jmp
adcb
mov
in
xchg
sti
pop
testl
stc
or
pushf
leave
nop
mov
push
fidivl
jb
pop
call
cmp
lret
enter
mov
cld
fildl
add
div
arpl
cmp
cli
and
movsl
cmp
fsubs
fnstenv
jg
pusha
mov
lock
mov
pushf
lods
inc
ret
ud0
sbb
fld
cmp
fistpll
ficompl
or
mov
bound
movsb
into
shl
add
lcall
lret
daa
scas
bound
xor
ljmp
shrl
incb
aaa
cwtl
into
out
push
stc
sbb
subb
ficompl
and
jg
ljmp
test
xor
fs
xchg
push
inc
movsl
sbb
aad
adc
andl
cmpsb
arpl
xor
jne
data16
mov
test
lret
das
push
pop
lret
mov
mov
lock
cmp
outsl
stc
bound
jno
jno
or
int
push
xchg
add
cmpsb
mov
fidivl
mov
enter
test
cmpsl
aas
xchg
mov
in
data16
pop
sub
push
jmp
add
pop
add
test
dec
mov
adc
add
cmp
lret
test
xchg
bound
imul
sbb
hlt
mov
outsb
push
mov
xchg
call
push
lahf
adc
rcll
push
mov
push
push
cwtl
and
pop
aas
cmp
loop
add
test
jnp
movsl
mov
inc
lahf
mov
fwait
sub
imul
adc
dec
arpl
outsl
xchg
pop
adc
mov
cmp
cmp
outsb
inc
movl
mov
pop
xlat
iretw
fdivrs
dec
shll
jg
xlat
adc
fs
cmpsl
icebp
jg
lret
add
and
cmpsl
cli
jae
pop
mov
cmp
je
mov
out
jl
cmp
adc
xchg
lds
push
or
cmp
add
enter
sbb
into
mov
inc
nop
sub
pop
js
jp
jo
xchg
out
cld
pop
dec
out
cwtl
addl
lar
mov
jp
in
or
cmp
jo
xchg
xor
and
and
in
ja
jmp
push
dec
movsb
out
pop
popa
aaa
mov
cmpsl
imul
cwtl
out
cmp
xchg
push
xchg
xor
rcrl
mov
and
sub
std
lret
sbb
iret
lods
fiadds
mov
or
jo
daa
and
aas
xchg
cmpsb
lods
xor
js
jnp
clc
cmpsb
mov
in
sahf
call
js
fnstenv
adc
sar
loopne
addr16
into
cmp
push
lea
adcl
or
inc
cmp
ja
rclb
and
add
push
mov
xchg
enter
mov
cmp
dec
mov
push
mov
jmp
dec
xchg
and
push
mov
aad
jns
in
pop
inc
lret
add
std
jo
divl
das
mov
jns
inc
or
scas
fdivl
xchg
inc
mov
push
cmc
inc
jbe
jns
aad
jle
cmc
mov
aad
and
fwait
stc
cmp
aam
xorb
dec
mov
xchg
and
push
mov
movsl
adc
incl
mov
lahf
gs
cwtl
adc
jecxz
sti
fdiv
scas
daa
mov
aas
rcrb
int
sub
adc
jl
clc
cmp
sub
fcomip
xchg
add
push
or
dec
call
out
mov
xchg
scas
pop
and
lahf
ret
jae
dec
dec
bound
jbe
jnp
xchg
xchg
and
repnz
or
cmp
insl
push
ss
roll
sbb
aaa
out
inc
loope
add
lods
xorb
pop
xor
add
and
mov
fsubrl
adc
clc
jge
je
cwtl
fcoms
std
and
adc
dec
les
call
lds
hlt
popf
lret
mov
dec
mov
add
std
aas
cli
test
jecxz
sarb
shlb
sub
inc
ret
xchg
and
jae
cmp
push
in
cmp
sub
sahf
jb
rcrb
xchg
and
clc
cmpsl
jmp
add
xchg
mov
loopne
or
push
jno
ja
sub
std
pop
jae
add
movsl
or
movsl
in
or
sub
xor
sub
lods
test
rol
repz
lret
or
add
out
les
push
cmpsb
push
les
sbb
mov
loope
cmpsl
mov
loop
inc
or
push
fxtract
mov
pop
imul
xor
mov
mov
or
or
xchg
and
stc
lcall
rcrl
push
jp
inc
jns
scas
cmp
mul
add
test
aad
sbb
mov
mov
lret
xor
divb
mov
sbb
jno
pop
das
dec
xlat
cld
cmp
pop
pop
add
fcmovnbe
mov
sbb
mov
cmp
shl
lret
push
mov
push
dec
ffree
enter
std
jecxz
pop
add
add
movsb
test
fiaddl
stc
roll
je
mov
mov
sub
sub
loop
clc
jns
pop
push
cmp
cmp
cmp
mov
fiaddl
sub
aas
and
push
ss
xor
daa
call
sbb
loop
mov
mov
aam
stos
adc
pop
or
bound
cmpsb
cmp
cltd
mov
jo
mov
mov
add
data16
mov
in
dec
push
mov
roll
pop
mov
sbb
loope
iret
inc
cmpl
sbb
sub
cmp
xchg
mov
lods
sbb
xor
sbb
cmpsb
in
movsl
les
cmp
pop
xlat
lcall
dec
cmp
cli
inc
add
and
dec
cwtl
lock
push
in
pop
scas
sub
xlat
push
cltd
jg
inc
dec
lret
mov
inc
dec
or
dec
dec
mov
lret
repz
popa
test
popf
xor
pushf
dec
add
mov
mov
jmp
jno
and
adc
jae
dec
arpl
cwtl
adc
xchg
int3
cs
repz
add
outsl
js
pop
mov
and
rcrb
sbb
nop
lods
repz
mov
mov
mov
or
push
imul
outsl
sub
add
and
xor
adc
inc
jmp
vpshuflw
inc
xor
add
mov
addr16
mov
push
push
mov
mov
lahf
inc
fdivrl
in
sbb
mov
add
dec
jmp
lcall
shlb
int
in
pop
sub
mov
inc
cli
mull
rcrb
subb
xor
loop
call
repz
inc
data16
ret
aaa
rolb
jbe
fnstcw
dec
inc
xor
adc
mov
test
sub
xor
cli
sbbb
xchg
sbb
sbb
mov
aas
fnstenv
enter
xor
jnp
mov
pop
sbb
xor
xchg
push
xorb
ret
test
sbb
xchg
push
inc
int3
mov
stos
dec
sub
dec
mov
loope
ss
adcb
fbstp
in
dec
push
sbbl
inc
jnp
gs
add
xlat
shlb
add
and
push
xchg
xor
adc
inc
push
mov
mov
jge
clc
lahf
bound
inc
dec
or
outsb
mov
and
fs
mov
cmp
clc
js
mov
mov
fistpl
loope
lds
mov
adc
pop
out
and
shrl
sub
pop
push
int3
sbb
push
je
cmp
mov
shll
and
pop
cmpb
xor
mov
sub
push
sub
mov
jp
mov
dec
shl
imul
inc
cmp
rclb
idivl
push
add
aas
fcompl
std
addr16
xchg
mov
cs
xchg
scas
adc
add
out
out
pop
gs
mov
insl
mov
aaa
jmp
jb
cld
rcll
add
xlat
loop
add
sar
adc
inc
pop
jb
xchg
bound
adcl
push
push
xor
or
lcall
ss
lock
jae
add
sub
add
imul
mov
fildl
cwtl
mov
sub
fwait
out
les
mov
pop
mov
push
cmpsb
les
and
adc
jbe
fwait
stc
iret
je
ljmp
imul
stos
lods
xchg
mov
cld
xchg
pop
stc
add
adc
enter
or
stc
mov
jne
popa
mov
lods
popa
bnd
test
icebp
aas
push
push
mov
lret
mov
xchg
lcall
fisubs
inc
push
push
jl
in
sbb
and
inc
in
data16
filds
fsubr
dec
rcl
mov
fwait
leave
into
call
xor
out
pushf
xor
and
orb
xchg
sti
cwtl
mov
mov
or
std
mov
cmp
xchg
push
scas
ret
adc
push
cwtl
xchg
in
daa
pushf
cmp
xchg
dec
movsb
notl
cmc
int3
or
js
aad
sbb
inc
push
cltd
adc
repz
incl
dec
repz
gs
in
mov
lea
cmc
mov
or
ljmp
sub
push
dec
call
cmc
inc
push
push
aad
mov
inc
ret
aam
outsl
or
dec
pop
dec
andb
repnz
mov
nop
cmp
push
xlat
enter
pop
sbb
mov
push
push
dec
sarl
jge
decl
pop
sub
mov
lds
sbb
and
les
mov
lret
xlat
lahf
push
or
mov
add
lret
push
clc
leave
aas
cmpsl
repz
das
sbb
xchg
pop
cmp
jb
xchg
push
ss
push
lcall
cmpsb
xchg
and
fs
pop
rep
pop
inc
scas
testl
and
mov
in
dec
loope
in
in
xlat
sub
adc
fnsave
sbb
out
test
lcall
inc
xchg
ss
cmpsl
cmpsb
es
stc
add
iret
sbb
or
pusha
les
jle
pop
mov
aaa
pop
and
mov
mov
fnstcw
roll
cmp
ja
test
fwait
add
mov
mov
sbb
leave
sub
jmp
and
scas
mov
das
aad
loopne
xchg
mov
sbb
insw
pop
and
mov
in
test
xor
fstpl
and
xlat
add
sbb
into
and
pop
mov
in
adc
pop
push
clc
lcall
dec
cmpsb
cmp
lret
ja
push
xchg
mov
lahf
rclb
cmpsb
jecxz
scas
jmp
cmpb
sub
pop
ss
push
jp
push
lcall
cmpsb
fidivl
ljmp
push
sub
pop
ss
push
jp
push
lcall
cmpsb
fidivl
ljmp
push
sub
pop
ss
push
jnp
push
lcall
cmpsb
ljmp
push
cs
ss
xchg
xchg
sbb
and
fst
push
ds
push
lods
xchg
mov
jl
negb
push
arpl
cmp
inc
insl
push
jge
dec
jbe
xchg
mov
in
std
out
mulb
inc
or
push
jge
dec
jbe
xchg
mov
in
std
out
neg
push
sub
push
jl
cmp
sub
sbb
neg
xchg
hlt
ljmp
clc
sbb
into
adc
gs
sub
insl
xor
std
add
sbb
in
fnstcw
lds
ret
mov
mov
dec
mov
lods
xchg
mov
out
fwait
ret
jge
orl
push
leave
dec
clc
js
jge
enter
call
pop
lret
cli
cld
push
cmpsl
mulb
push
rcl
ret
fdivrp
cmpsb
insl
add
pop
jnp
imul
cs
idiv
outsb
shlb
jbe
sbb
dec
mov
sub
xor
es
push
xor
stc
cmp
outsb
push
cmc
mov
cs
ja
fldcw
mov
in
std
out
neg
push
sub
ss
dec
jbe
repnz
clc
popf
test
xchg
mov
movsb
cmp
push
sbb
or
adc
enter
call
mov
out
mov
pop
pop
push
js
add
xor
jmp
xchg
clc
xchg
std
out
neg
push
sub
ss
dec
jbe
xchg
mov
in
std
out
neg
push
sub
ss
dec
jbe
xchg
in
mov
hlt
mov
negl
loope
dec
xchg
stc
fdivl
xchg
movl
inc
imul
jge
jl
mov
xchg
push
ss
in
mov
pop
in
fptan
cmp
loopne
push
lods
scas
aam
stos
push
mov
jo
cmp
adc
fs
dec
mov
sub
leave
xor
cmp
fists
add
inc
jg
bound
mov
mov
push
jg
fwait
cwtl
mov
push
lods
decl
xchg
in
fscale
and
in
lds
push
adc
fldt
fcmovne
push
dec
inc
std
pop
push
push
mov
pop
into
cmp
dec
pop
iret
aaa
sbb
xchg
jb
test
sbb
cmp
outsb
cmp
mov
mov
sub
pop
repz
xchg
sub
icebp
jbe
push
pop
or
lcall
xor
movsl
pushf
inc
mov
push
popf
test
xchg
int
lods
call
dec
dec
std
mov
add
pop
std
sub
cmpb
adc
xor
add
aaa
bound
adc
lret
loope,pn
fsubl
fucom
jecxz
icebp
mov
pop
cltd
lods
jbe
jle
shl
cmp
das
test
std
testl
inc
fwait
sub
arpl
hlt
je
sbb
push
test
addl
xchg
pop
aad
popa
xchg
cmp
or
cmp
inc
addr16
mov
daa
mov
and
leave
stos
lret
sbb
mov
in
mov
and
hlt
ljmp
or
inc
jmp
rorl
les
xchg
es
xchg
cld
loope
mov
outsb
pushf
push
testb
fcmovne
jno
push
mov
fstpt
xchg
sbb
push
repz
xor
jne
xchg
repnz
push
pop
add
cmp
sbb
int3
push
mov
fidivl
in
and
ret
lret
mov
insl
mov
iret
mov
add
add
mov
stos
mov
fldenv
or
lcall
imul
pop
and
mov
jns
dec
xlat
sysexit
push
xchg
sbb
aam
xchg
jae
mov
pop
fucomi
fs
jae
sbb
jo
and
pusha
xor
inc
movsl
pop
sub
mov
popf
cwtl
int
scas
inc
ss
xorb
mov
inc
scas
inc
negb
ret
or
int
mov
cmpsl
fcomps
rcll
xor
fisubrl
in
xchg
mov
push
xchg
push
cs
jo
pop
js
repnz
push
xchg
enter
pusha
xor
sahf
xor
and
lahf
rcll
mov
fidivs
pop
call
mov
into
xchg
cltd
pop
ror
shlb
sbb
sbb
imul
mov
sbb
lods
cli
les
mov
lods
aad
mov
shr
pop
es
insb
aad
lahf
cmp
shrb
scas
push
push
and
insb
adc
inc
push
cmpsb
inc
rolb
mov
test
dec
adc
push
add
in
imul
into
xlat
sahf
imul
call
inc
xchg
jmp
xor
push
ss
in
pop
arpl
mov
sub
mov
cs
fnsave
or
push
sub
fimull
dec
mov
xchg
cmp
push
add
xor
dec
cmc
mov
mov
gs
jno
inc
cld
imull
or
nop
nop
int3
lock
out
dec
stos
push
mov
pop
cmp
movsb
xchg
jl
jnp
mov
les
mov
mov
mov
notb
inc
mov
int
sarb
and
inc
mov
inc
sub
ficoms
lret
test
inc
cmp
xor
cmc
imul
mov
inc
cld
in
inc
andb
arpl
les
sbb
add
jns
or
push
inc
sahf
cmp
adc
pop
jge
inc
cld
xchg
xor
sub
pushf
ds
sub
mov
aaa
cs
adc
mov
mov
jnp
adc
or
mov
inc
jge
shll
xlat
int3
aam
adc
stos
inc
mov
mov
sub
cwtl
jo
sub
pop
je
frndint
divl
add
mov
mov
out
adcb
test
hlt
push
push
push
sbb
mov
stos
push
mov
cld
imul
aaa
push
and
dec
mov
arpl
sub
mov
jp
adc
mov
and
lds
insl
mov
movsl
stc
mov
sbb
jno
popf
fucomp
jnp
adc
outsb
sti
fst
mov
xor
hlt
inc
or
and
xchg
imul
ret
mov
jge
or
lahf
xchg
cmp
sbb
push
mov
adc
pop
out
jno,pn
dec
add
in
pop
int3
in
pop
addr16
inc
movsl
fnsave
and
mov
sub
ficoms
sbb
ljmp
inc
test
ret
sbb
dec
sti
jecxz
rclb
addr16
aam
jbe
cmp
pop
movsb
pop
adc
push
scas
lcall
dec
fisttpll
adc
ja
addl
outsb
cmp
stos
mov
xor
in
inc
mov
cmc
add
sbb
add
pop
call
enter
pop
out
xor
pop
dec
fs
mov
xchg
jnp
or
xchg
fnstsw
lret
test
push
call
push
xchg
adc
leave
cmc
adc
mov
mov
cmpsb
int3
es
cltd
push
sbb
mov
fcmovbe
and
or
xchg
or
stc
pop
scas
scas
mov
in
or
inc
pop
push
adc
mov
push
mov
pop
pop
lret
pop
push
filds
pop
repz
jae
inc
lret
aam
and
fiadds
adc
hlt
sarb
add
ficomps
mov
das
fs
in
lods
mov
cmp
lods
outsb
fadd
inc
pop
in
stc
mov
mov
adc
daa
in
sarl
inc
xor
mov
mov
and
xchg
and
in
idivb
dec
lods
mov
adc
push
mov
mov
sub
lahf
scas
out
js
add
jg
out
dec
iret
test
jne
or
lds
fidivs
jp
and
imul
pop
inc
inc
ffree
insb
shl
insl
xchg
lods
in
pop
pop
aam
dec
btr
aam
scas
das
insl
sub
jp
sub
sbb
stc
fistps
in
mov
and
fwait
leave
adc
mov
lds
add
mov
jmp
pushf
shr
imul
xchg
ficoms
cmpb
xchg
adc
je
and
pusha
pop
test
adc
mov
mov
mov
adc
mov
jbe
roll
out
push
ret
sti
or
nop
loope
mov
test
call
clc
jmp
mov
lcall
mov
rorl
mov
push
pusha
aam
jge
add
mov
lea
inc
les
shll
or
and
xchg
push
mov
jnp
add
inc
sub
pop
inc
je
inc
dec
lods
dec
jecxz
in
push
adc
xchg
or
and
out
pushf
lods
aas
into
jo
data16
popl
rorl
pop
xor
arpl
push
xor
push
fimull
repnz
xchg
xor
mov
or
js
push
pop
xlat
sar
and
xlat
scas
cltd
mov
out
push
adc
movsb
fwait
jbe
dec
les
xor
sub
mov
push
dec
fnstsw
pop
pop
or
xchg
fnstcw
arpl
and
insb
cmp
cmp
jle
dec
lret
imul
idivl
or
lock
push
and
dec
sub
mov
or
cmp
mov
lret
decb
push
sbb
inc
pop
mov
aam
icebp
adc
cmovns
bound
xchg
push
test
rolb
cli
dec
jmp
in
sahf
mov
xchg
fistps
xchg
sub
push
mov
mov
adc
and
add
jae
fsubrs
rolb
test
inc
aaa
ret
dec
es
les
in
test
add
jmp
mov
cmp
insl
dec
ret
xchg
xchg
jge
es
cmp
xor
imul
mov
sbb
out
pushf
or
add
out
push
out
test
dec
sbb
dec
jb
clc
adc
test
cmp
cmpsb
push
pop
dec
push
inc
inc
jg
mov
mov
je
arpl
fstpl
dec
and
add
loope
cmp
pushf
xchg
dec
pop
jg
aas
mov
mov
arpl
push
cltd
mov
sarb
addr16
cmc
leave
mov
jno
movsb
jns
mov
push
cmpsb
sbb
insb
test
jae
test
adc
lods
cmp
sub
mov
stos
lahf
cmpsl
xlat
test
pop
pop
rcrl
nop
fdivs
inc
aas
aam
mov
add
ljmp
mov
aaa
out
sub
or
xchg
add
repz
and
mov
cmp
scas
sub
repnz
incb
test
testb
sbb
xchg
in
fst
in
mov
add
mov
sbb
sbb
cmc
dec
mov
or
data16
out
scas
xor
push
insl
sahf
push
inc
push
shll
mov
dec
adc
push
inc
xor
inc
mov
mov
cmc
ret
stos
lods
jbe
mov
scas
dec
push
xor
in
pop
mov
mov
jne
push
xorb
sub
aad
test
jns
mov
xchg
rorl
cmp
mov
sbb
pop
fimull
xor
mov
adc
imul
cmp
ja
inc
adc
cwtl
jge
or
mov
mov
fs
fildll
lahf
inc
dec
pop
cmc
mov
push
dec
mov
aam
rcl
jb
and
sbb
add
fcompl
call
jmp
push
adc
aad
inc
push
push
shrl
push
aad
sti
mov
add
jb
sub
scas
enter
xchg
mov
out
pushf
mov
pop
icebp
faddp
xchg
arpl
mov
add
mov
idivl
call
inc
out
aas
mov
aam
test
loopne
sbb
in
loopne
hlt
lcall
and
repz
dec
xor
nop
sar
cld
pop
pop
push
rcrb
rolb
jl
push
sub
add
mov
cmp
dec
pushf
and
fs
bound
cli
imul
sbb
not
mov
jae
dec
cmp
push
icebp
or
dec
dec
inc
loop
mov
push
pop
adc
outsb
cmpsl
rorl
clc
divb
jae
les
and
adc
call
mov
call
insb
xorl
inc
xchg
pop
push
or
sub
add
jae
shll
cwtl
pop
in
aaa
push
addl
cwtl
fstps
pop
out
lret
addl
dec
mov
shlb
je
movsl
mov
daa
inc
sbb
insl
mov
mov
add
lods
daa
pop
enter
dec
add
loop
idivl
rcr
sub
cld
shrl
sub
fdivr
js
enter
add
and
and
mov
fadds
sti
pop
dec
sbb
mov
inc
jns
mov
rol
mov
or
aad
mov
adc
dec
mov
pop
in
enter
mov
mov
inc
cmp
or
in
mov
stos
scas
push
mov
lret
rolb
movsb
dec
inc
mov
lds
out
lcall
test
orb
sbb
dec
push
adc
negl
imul
mov
ret
push
sbb
xchg
lods
add
mov
dec
stc
ret
mov
fwait
mov
sbb
mov
sbb
sbbl
adc
mov
stc
cltd
test
int
gs
xchg
mov
xor
cmp
ficompl
xor
in
mov
aad
push
loopne
int
testb
jbe
inc
xchg
rorl
mov
mov
jmp
xor
pop
clc
mov
adc
pop
test
push
push
sbb
mov
test
mov
lds
xchg
mov
inc
mov
outsb
into
je
cmp
adc
lahf
mov
mov
insl
imull
out
adcb
push
pop
pop
repz
jecxz
out
adc
imul
addr16
pop
cwtl
pop
add
stos
je
dec
out
iret
cmpb
sub
stos
jle
mov
xchg
test
jecxz
cmp
repnz
ss
enter
rorl
mov
lods
jno
shlb
push
imul
inc
out
arpl
mov
imul
ja
inc
rorb
fucom
sbb
add
pushf
jecxz
js
aaa
mov
leave
aad
movsb
push
jge
jg
mov
mov
jle
aam
fnstsw
jae
ret
loopne
cmp
xlat
cmp
add
jne
jl
mov
mov
mov
mov
jle
push
rclb
scas
lret
mov
mov
addr16
pop
leave
and
loop
pusha
inc
in
repnz
fdivl
int
ds
pop
mov
fmul
ljmp
not
shll
xlat
dec
leave
jmp
bound
and
push
cmpsl
movsl
push
push
dec
xor
cmp
and
mov
sbb
lock
inc
mov
fldenv
rclb
stc
sbb
sahf
aaa
lahf
pop
mov
push
jg
sbb
loopew
popa
mov
adc
insb
enter
fisttps
inc
sbb
pop
dec
insl
lods
lods
pmulhw
sub
or
adcl
rcrl
in
add
mov
mov
push
jp
ljmp
shrl
and
sub
jne
jmp
into
mov
xor
fmuls
pop
jge
cmp
push
pushf
or
cmp
sbb
pop
jnp
pop
sbb
inc
jle
lods
stos
inc
pop
dec
mov
mov
add
xor
cmpsl
jno
aas
arpl
push
popf
lcall
lahf
dec
mov
repz
aad
shrl
ds
xorl
mov
sbb
xlat
aam
addr16
push
pop
fdivl
or
dec
sahf
insl
sbb
add
loop
sbb
dec
and
fiaddl
mov
notl
repz
pushf
mov
movsb
push
jae
js
add
popf
lods
xlat
inc
popa
imul
adc
subb
sub
adc
aam
cltd
mov
and
mov
mov
addr16
mov
add
mov
inc
jo
adc
jbe
push
insl
jae
aaa
call
push
fcmovnbe
push
push
push
push
cld
dec
push
sub
xlat
xor
in
adc
xchg
outsl
ret
adc
fldl
fsubl
dec
xchg
mov
rcrb
or
lret
aas
push
lret
cmp
add
out
insl
or
inc
test
int
cli
movsl
add
fsubrs
scas
sbb
mov
mov
sub
add
leave
adc
int3
xor
jb
xor
adcl
and
arpl
sarb
pop
push
xchg
push
pop
lods
in
jg
mov
insl
jne
ret
mov
jmp
js
lahf
rcrl
dec
jl
insb
adc
xchg
push
jae
xor
imul
mov
fucomp
push
jp
dec
mov
inc
loop
mov
or
jecxz
mov
aas
push
leave
mov
sbb
mov
fstps
pop
sbb
or
xor
es
and
pusha
pop
shrd
in
jp
fildl
inc
sub
jle
fbld
lea
xchg
dec
pop
std
jnp
nop
pop
mov
pop
xchg
dec
cld
sti
sub
jb
sbb
adc
dec
push
xchg
lock
cmp
test
je
data16
push
in
lahf
xor
rep
and
inc
repz
jmp
in
jle
mov
addb
icebp
shr
loop
fimuls
sbb
or
or
jge
jae
fsubrs
jp
dec
xor
dec
xor
xchg
in
imul
cwtl
and
jge
inc
sbb
mov
or
call
xor
insb
sub
adc
jns
xchg
mov
repz
cs
adc
push
inc
imul
or
mov
mov
daa
mov
xchg
movsl
pop
jbe
out
aas
and
xchg
dec
ja
inc
sub
mov
xchg
dec
and
daa
imulb
cmpsb
daa
ja
lret
push
loope
cmp
loope
push
jle
xchg
popf
or
nop
mov
sbb
cltd
test
ret
mov
stos
mov
imul
xorb
push
add
shrb
xor
mov
es
pop
mov
ret
xchg
pop
ret
inc
jns
cld
mov
rcl
pop
inc
and
dec
ficoms
popf
cmpsl
mov
mov
add
xchg
je
push
stc
cmp
mov
in
out
cmp
data16
mov
test
sub
cmp
movsb
or
inc
adc
cmp
ds
cmpsl
movsb
mov
sahf
push
lret
int
fcmovb
cmp
jp
add
push
ret
xchg
dec
jbe
sub
mov
ret
mov
addr16
fs
test
sub
in
inc
dec
in
jo
adc
aam
push
xor
jno
inc
cmp
mov
leave
mov
je
xchg
aas
dec
loope
cmp
adc
xchg
inc
ss
call
cmp
aas
cwtl
in
test
ret
shlb
jecxz
mov
popfw
cltd
gs
mov
cmpsl
sbb
ret
fnstenv
pop
xchg
mov
dec
add
xlat
daa
xchg
jnp
push
fcomps
popf
sbb
lods
mov
out
mov
leave
stos
jge
sub
or
test
mov
lret
into
xorl
jge
movsb
pop
dec
ja
mov
loopne
dec
jnp
dec
adc
dec
bnd
mov
pop
frstor
ficompl
mov
lods
sti
xor
jge
add
sub
js
or
fiadds
loop
aad
popa
leave
hlt
iret
in
push
and
movb
insl
pop
outsl
adc
out
mov
push
clc
xchg
scas
inc
les
lock
lcall
jecxz
mov
ja
pop
stos
and
out
adc
fdivs
cmp
add
xchg
popf
daa
out
dec
into
fimuls
inc
and
ljmp
and
or
pop
inc
ror
push
arpl
aaa
out
test
int
ljmp
xorb
pop
jp
bound
push
lret
ja
xor
sub
or
mov
ja
push
mov
cwtl
incl
adc
imull
and
sar
pop
jns
loop
add
xchg
scas
dec
mov
enter
outsl
loopne
orl
pushf
xor
out
xor
loop
and
dec
andb
lods
xchg
test
mov
mov
filds
lods
jne
dec
je
cltd
fwait
mov
pop
rcll
lret
jl
dec
sbb
pop
adc
repnz
in
sub
mov
arpl
int
loopne
pop
or
cmpsl
out
sbb
lods
in
icebp
lret
push
fsts
or
imul
adc
push
shl
jns
inc
inc
pop
mov
dec
scas
sub
and
pushf
out
mov
call
std
fistpll
gs
mov
outsl
bound
adc
fbstp
and
xchg
lahf
push
add
jmp
or
or
iret
dec
pushf
mov
ss
mov
scas
mov
cli
sub
insl
sub
dec
push
inc
fs
shrl
pop
push
in
adc
imul
add
xlat
sbb
cmp
add
enter
rolb
icebp
es
ja
push
add
xor
cmc
push
mov
adc
popa
test
test
pop
xchg
pop
sbb
mov
and
sub
bound
push
xchg
push
sub
subb
jmp
out
enter
mov
popa
es
pop
adc
cmp
push
cs
mov
lock
lock
sbb
xor
cltd
orl
push
sarl
inc
mov
mov
js
and
dec
dec
dec
mov
mov
aam
orb
in
cld
pop
xlat
fsubr
jnp
pop
sbb
or
stos
aad
ret
sar
mov
in
std
out
neg
push
sub
ss
dec
jbe
xchg
mov
in
std
out
neg
push
sub
ss
dec
jbe
xchg
mov
in
std
out
neg
push
sub
ss
dec
ja
xchg
mov
in
std
out
neg
push
sub
ss
in
sbbb
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
sarb
loope
xchg
inc
repz
mov
pop
adc
loopne
pop
xor
mov
loope
xchg
incl
mov
adc
popa
sqrtps
and
cmpsb
xor
out
imull
aas
bound
data16
jp
jae
gs
fcomip
cli
mov
xchg
aaa
subl
push
in
bound
sbb
or
xchg
in
mov
cmp
fistpll
and
cmpsl
shlb
out
pop
pop
xor
scas
fidivs
test
les
aas
inc
das
fs
lock
inc
stc
pop
sbb
push
adc
or
decl
mov
shl
loopne
sub
add
xor
int3
push
shll
sti
insl
aas
or
jno
ret
out
mov
jge
jg
or
lret
pop
fcomi
addr16
add
dec
ficoms
clc
loopne
lock
push
push
xor
dec
mov
loope
jne
stc
out
mov
pop
xchg
aas
pop
push
push
push
pop
or
inc
and
mov
cltd
ljmp
mov
das
adc
add
arpl
outsl
insl
pop
xor
movsb
movb
in
inc
stos
hlt
std
ss
adc
jp
or
pop
cmp
mov
sti
mov
ret
out
mov
mov
das
jno
popa
movups
outsl
xor
dec
sarl
loope
xchg
incl
iret
push
aas
inc
das
jno
popa
movups
outsl
xor
dec
sarl
and
cmp
or
push
adc
enter
mov
pop
xcrypt-ctr
cmpsl
pop
lahf
jbe
aam
xchg
push
add
loop
stos
mov
cmpl
lods
mov
jb
mov
sub
fstpl
mov
or
fbld
das
nop
ss
adc
sbb
lret
dec
xor
mov
in
dec
inc
jle
inc
pop
mov
fcoms
pop
cmp
and
mov
imul
cmpsb
xor
or
repz
sbb
sbb
jmp
and
cmp
pusha
jmp
inc
fdivrl
mov
mov
ds
lods
idivb
mov
mov
es
fmull
sub
xor
inc
pop
pop
in
sbb
pop
pop
fs
je
and
xchg
xor
push
push
dec
lret
jecxz
add
inc
xrelease
jmp
pusha
cmp
int
xchg
xor
sbb
xchg
mov
and
rcll
lods
push
dec
jg
sbb
mov
jae
and
push
int
lret
cmpsl
push
cmp
stos
lea
ret
stos
mov
stos
stc
stos
out
out
cltd
lahf
into
adc
or
add
aam
xchg
in
add
cmpl
inc
jbe
push
aam
sub
or
lret
pop
or
add
add
push
xchg
xchg
into
or
mov
mov
cwtl
shll
orl
test
test
fnstsw
scas
xchg
pop
pusha
in
inc
out
inc
mov
push
mov
leave
lret
pushf
cmp
aaa
and
leave
mov
imul
xchg
mov
add
add
jge
in
imul
add
xor
lahf
pop
adc
mov
lea
mov
aas
hlt
mov
test
shll
aaa
nop
and
mov
mov
inc
lds
xchg
pop
push
jb
repz
out
push
inc
sub
cmp
scas
mov
mov
pushf
fcmovne
push
xor
mov
loop
imul
cmpsl
lock
cmp
movsl
xor
mov
sub
ret
int
lcall
and
mov
lock
or
mov
es
mov
arpl
push
aaa
cli
inc
aaa
jle
inc
mov
pop
jmp
inc
mov
test
jl
ds
dec
adcl
arpl
and
jl
mov
stos
nop
push
dec
clc
and
xchg
cmpsl
scas
cmpsl
sub
sub
sti
xchg
and
push
arpl
call
mov
sbb
push
inc
hlt
inc
loop
jo
fnstcw
xchg
sbb
mov
sar
mov
mulb
mov
mov
push
loop
jge
call
cltd
andb
xchg
lret
mov
pop
xchg
leave
test
jecxz
sbb
xchg
test
xor
dec
push
push
cmp
gs
scas
dec
sub
or
sbb
and
scas
pop
inc
lea
jb
jo
jbe
inc
push
sbb
cltd
jl
jge
adc
cmpsb
pusha
dec
xlat
ja
cld
xor
xlat
mov
push
xor
inc
sub
push
or
push
pop
xor
mov
cmp
aam
sbb
je
or
add
loop
cs
jmp
mov
ret
sub
mov
dec
jno
or
push
and
xchg
out
loop
inc
or
scas
mov
shl
out
xor
or
loopne
mov
push
fdivl
jle
sti
cld
inc
hlt
out
clts
cvtps2pd
fsts
cmp
sti
sbb
add
jl
lahf
gs
adc
flds
or
scas
adc
jecxz
subl
adc
lock
xor
xchg
jne
ret
mov
mov
and
mov
pop
ret
push
mov
add
sub
and
and
mov
mov
or
mov
or
xchg
xchg
and
nop
out
and
hlt
jp
sub
je
push
mov
push
iret
repnz
inc
icebp
jle
popf
pop
pop
rclb
mov
rcrb
and
mov
mov
push
jbe
mov
ret
addr16
dec
xchg
mov
push
lods
mov
xchg
mov
add
jmp
int
push
je
inc
pop
and
lock
sahf
lahf
js
arpl
je
mov
add
cmp
std
sti
jbe
jge
test
into
popf
sbb
cld
and
and
je
out
cmp
popa
inc
pop
jbe
push
rorb
sarb
clc
xor
aaa
fwait
xor
mov
insb
sahf
enter
adc
mov
adcl
cmp
cmpsb
add
les
repz
enter
sahf
push
arpl
adc
out
movsb
cmpl
sti
inc
stc
pop
inc
ljmp
ljmp
out
out
insl
cmp
pop
or
pop
testl
lds
ljmp
dec
xor
shlb
rcrl
test
adc
negb
cwtl
mov
xchg
mov
jle
out
mov
idivl
out
mov
xchg
stc
shll
push
inc
sbb
and
inc
pop
cli
cmp
arpl
aaa
cmp
dec
or
jae
test
out
pop
mov
in
sub
xlat
imul
push
mov
shl
es
into
inc
xor
stos
cld
arpl
jno
jno
std
xor
mov
scas
scas
hlt
int
popa
push
lds
stos
pushf
adcb
sahf
push
pop
mov
mov
fwait
push
add
mov
and
mov
sub
xor
xor
or
jg
mov
xor
add
jge
xor
icebp
sbb
fs
into
jl
iret
pop
int3
popf
sbb
inc
cmp
pusha
std
decb
mov
xor
xchg
push
and
xchg
rorb
pushl
sub
ja
pop
adc
xchg
mov
je
cs
mov
shll
sub
lods
in
pop
mov
icebp
gs
gs
sub
add
std
je
adc
in
mov
imul
jo
xchg
orps
inc
dec
dec
and
and
rclb
mov
jbe
arpl
sub
adc
ds
push
fcomip
pop
outsb
stos
xchg
pop
sub
xchg
scas
cmp
repz
bound
aas
stos
xor
lret
sbb
imul
xchg
fldcw
or
iret
adc
js
popa
sbb
and
xor
sub
leave
xchg
push
into
push
pushf
jg
or
mulps
add
inc
je
out
mov
imul
mov
daa
popa
movb
add
loop
das
add
jp
pop
mov
int3
movsb
sub
sbb
sub
xchg
loope
and
mov
shrd
outsl
pop
jo
xchg
insb
pop
in
pop
sub
and
mov
mov
int3
xchg
ret
fcoml
mov
aad
pop
insl
outsl
and
mov
sbb
jae
or
or
sub
xchg
loop
fs
sub
xlat
popf
fstl
clc
pusha
sahf
jbe
add
pop
outsl
js
and
cmp
ret
inc
pop
or
repnz
sub
mov
inc
stos
sub
lcall
ret
leave
cmp
aam
insl
sbb
xor
xchg
imul
jmp
std
sbb
add
mov
jg
jg
pop
inc
xchg
cmpsb
sub
imul
das
sub
xchg
mov
dec
adc
xchg
mov
call
push
es
imul
stos
ret
mov
adc
or
sub
jmp
dec
arpl
iret
out
mov
je
out
jg
movsl
lret
lret
mov
add
pop
push
adc
jge
jp
aam
xchg
xor
lret
and
mov
dec
fst
out
inc
push
aaa
int
call
sbb
ds
inc
dec
push
xor
adc
push
xor
cmp
loope
into
inc
imul
sbb
mov
xor
sbb
or
in
add
lea
or
add
or
adc
xorb
inc
icebp
jle
jnp
into
pop
adc
mov
insb
pop
or
or
sbb
and
pop
xchg
mov
xchg
das
sti
lcall
repnz
mov
xor
cmpsb
cmc
lods
sub
dec
sub
xchg
repz
es
fistps
loopne
sbb
sub
xchg
addl
icebp
into
fcoms
sbb
out
lret
cmp
mov
or
dec
lock
xchg
into
mov
add
loopne
jle
lock
les
testl
xchg
or
bound
mov
jmp
pop
mov
bound
sub
mov
aad
or
mov
push
cltd
call
popa
outsb
inc
je
fidivs
add
adc
sub
adcb
lcall
mov
lds
push
jge
xor
ret
test
out
xchg
nop
inc
sbb
mov
xor
mov
pop
pop
jl
sarb
ficoml
fs
and
int3
push
filds
js
push
in
insl
mov
stc
cs
popf
jp
out
jne
add
js
mov
outsb
add
ljmp
movsl
leave
jbe
dec
fmuls
jbe
lock
shr
adc
daa
in
loop
push
jl
loope
xor
out
pop
jmp
sub
stos
ret
fwait
cmp
fnstenv
outsl
dec
fsts
push
pop
push
movsb
arpl
pop
loop
jnp
enter
loope
mov
jb
adc
out
mov
xlat
int
or
icebp
and
das
xchg
xorl
lcall
pushf
xchg
ljmp
inc
ljmp
iret
xlat
pop
popf
test
mov
sbb
mov
dec
movsl
rclb
jo
dec
push
cmp
test
sbb
sbb
ja
adc
and
aad
jo
lock
jmp
loope
das
cld
imul
xchg
in
pop
pop
mov
jmp
cmp
mov
xchg
pop
xchg
insb
jo
mov
xchg
clc
hlt
in
and
mov
mov
xchg
and
push
fistpl
jle
inc
cmp
push
lcall
mov
outsl
and
pop
xchg
sahf
fistl
xchg
inc
push
cli
mov
and
ret
lods
and
in
cmpsb
push
pushf
pop
sahf
push
sbb
cmpsb
push
popa
insl
data16
das
sbb
fisubs
insb
gs
xchg
pop
add
les
sarl
mov
jecxz
and
cltd
jmp
test
frndint
push
jae
xor
and
int3
scas
mov
xchg
and
xchg
fwait
and
popf
pop
dec
mov
adcl
pop
cmp
inc
outsl
in
fst
xor
pop
pusha
xor
xor
shrl
loope
mov
ret
or
push
mov
inc
or
pop
mov
sub
jns
test
fs
popa
int3
shr
out
insl
xor
in
test
sbb
xchg
cmp
sub
push
push
clc
dec
mov
pusha
mov
pop
insb
add
sbb
inc
or
mov
rcrb
enter
inc
xchg
xchg
aam
into
sti
xlat
rclb
cmp
insb
adc
stos
outsb
inc
mov
pop
loopne
adc
and
jo
shl
out
scas
inc
or
lods
and
test
aad
iret
ror
mov
icebp
and
xor
aam
retw
jnp
out
mov
jnp
cmp
push
int
popf
daa
jmp
pop
or
rcll
repnz
mov
mov
adc
pop
cli
test
pop
xor
sbb
push
cmp
sbb
cli
pop
add
lods
push
aad
or
add
andl
jg
jne
arpl
ljmp
cli
outsl
xchg
sbb
mulb
and
jnp
iret
pop
imul
push
fwait
mov
mov
xorl
mov
outsb
sti
repnz
jnp
lds
pop
xor
or
xchg
pop
pop
pop
jp
out
jns
cmp
and
pop
xor
repz
add
push
jb
repz
rolb
sbb
outsl
in
gs
repnz
inc
mov
ds
mov
fcomp
jns
sub
repz
orb
mov
mov
and
fs
imul
jns
test
dec
jmp
xlat
pop
sub
sub
psadbw
out
repz
inc
out
mov
test
xor
imul
or
dec
mov
data16
cmp
insl
fmulp
subb
add
stc
mov
and
push
mov
jae
sti
sub
and
mov
mov
fcoml
scas
add
cmp
adc
xchg
and
aad
push
pop
push
aad
clc
push
lds
loope
repz
insl
push
paddq
negb
loope
adc
cli
cmp
jecxz
push
inc
adc
cld
sbb
outsb
daa
xor
lock
xchg
sbb
sub
imul
add
cmp
in
mov
scas
ficoml
mov
inc
out
negb
jle
jge
out
dec
fistpl
arpl
dec
push
push
fildll
pop
sbb
mov
dec
or
xor
mov
fs
sarb
mov
xchg
jne
sarb
jmp
xchg
repnz
jnp
inc
mov
insl
test
inc
mov
popa
adc
inc
cmp
cmp
xlat
mov
inc
ret
mov
cmpsl
push
push
push
sub
cmpsl
sti
pop
push
aam
iret
jp
data16
lahf
mov
and
xor
cmp
add
cmp
lods
cmc
stos
mov
push
out
or
cmp
mov
shlb
adc
fucom
mov
insb
imul
aas
stos
dec
xchg
fstpt
or
add
jae
xchg
dec
imul
push
jno
sbb
and
push
gs
dec
cmc
ja
add
ja
sbb
jge
negb
adc
xor
shll
or
mov
outsb
popa
jb
xchg
add
inc
push
pop
fdivr
push
jb
push
inc
adc
xor
xchg
xchg
push
push
jle
xchg
ficoms
rcrb
add
sbb
fsubl
and
or
and
data16
push
in
xchg
imulb
aas
xchg
xchg
sbb
dec
ror
idivl
push
clc
cmp
fwait
xor
inc
inc
pop
mov
xchg
lods
insb
dec
or
cmp
cmp
xor
addl
xor
jg
cmc
imul
scas
cmpsb
add
data16
or
ss
mov
mov
jecxz
xor
stc
sbbb
push
mov
jbe
push
lds
xchg
hlt
sbb
jl
out
cmovs
add
imull
mov
lret
sahf
aaa
clc
out
sbb
cli
imulb
jl
push
dec
stos
mov
jl
pop
cwtl
popa
jbe
gs
fisttps
loop
inc
pop
cmc
outsl
and
cmp
xchg
jle
mov
arpl
aad
rcl
fdivrl
jle
cmpsl
lods
bound
adc
cmpsl
movsb
sbb
dec
xchg
sahf
xor
imulb
mov
jp
xchg
adc
rcll
jb
ret
test
fmul
pop
mov
jmp
sub
sub
mov
sarb
mov
subl
cwtl
movsl
nop
aaa
out
mov
xchg
out
cwtl
mov
push
stc
in
fnstenv
mov
add
pop
int3
inc
ljmp
jb
push
cmp
fs
mov
ljmp
rorb
adc
inc
fstpl
pop
les
jae
das
ja
sti
pop
rorb
mov
outsb
roll
xor
mov
imul
push
mov
push
push
orl
mov
addr16
push
test
mov
mov
xchg
jb
xchg
ljmp
loope
imul
fnstenv
popa
fisttpl
insl
inc
mov
sbb
xchg
aad
call
movsl
bound
pop
call
push
adc
movsb
loop
mov
pushf
fcoml
clc
dec
mov
daa
jmp
mov
push
outsl
pop
jmp
cmp
sub
int3
int3
testl
into
xor
sti
fwait
push
lods
stc
fdivr
pop
test
xor
in
xchg
jmp
into
cmp
cmpsl
inc
mov
shlb
sbb
iret
fs
mov
ss
add
lea
pusha
insl
orl
or
adc
lods
je
mov
mov
loopne
cmp
cmpsb
mov
fldl
mov
insl
sub
sbb
in
nop
rorb
movl
mov
push
call
cmp
in
jb
cmp
add
das
icebp
int
mov
repz
xchg
pushf
xchg
cwtl
leave
bound
gs
xchg
jge
xor
add
xchg
add
push
shll
test
and
and
adc
imul
mov
jle
or
adc
and
jae
sub
cmpsl
jecxz
sbb
movsl
mov
ds
cwtl
push
hlt
sbb
in
inc
mov
or
inc
xchg
push
and
andb
test
adcb
outsl
inc
ja
data16
xor
jae
adc
mov
cmp
daa
out
cli
scas
push
ss
mov
cwtl
nop
jecxz
xchg
inc
movsb
lods
in
mov
push
jp
mov
insl
adc
and
or
xlat
ds
out
sbb
push
stos
std
mov
jmp
ss
cvttps2pi
cwtl
setg
pop
and
clc
jnp
lods
lret
jno
out
mov
pushf
dec
mov
aaa
adc
cmp
mov
je
mov
xchg
jge
add
pop
add
stos
push
add
scas
nop
xor
out
cs
lahf
lcall
sub
jo
test
inc
inc
push
dec
sbb
adc
repz
mov
subl
pop
ret
decl
inc
cwtl
repz
mov
popa
dec
mov
mov
sub
mov
out
je
shlb
int
das
and
mov
dec
into
vpsrad
sub
inc
xor
cmpl
and
dec
ss
push
dec
lret
mov
cmp
mov
dec
insb
adc
sbb
ss
loop
mov
jmp
test
adc
fs
xchg
in
cmp
mov
dec
call
mov
cmp
xorb
test
shrl
lcall
mov
jno
fdivl
ss
cmp
sarb
mov
test
or
mov
xor
cmp
pop
pop
push
adc
into
mov
or
pop
cli
mov
test
cli
inc
cmp
jge
ror
sbb
and
pop
sub
sarb
popa
push
insl
or
adc
mov
lds
cmp
mov
fidivrs
sbb
mov
xchg
negb
gs
lea
sahf
cmp
sbb
rolb
or
loopne
jmp
cmp
push
jge
stos
and
or
and
inc
fstpt
xor
or
dec
pop
and
or
into
insl
dec
sti
cmpsl
notl
dec
mov
cmp
movsb
int
push
mov
scas
lcall
jbe
xor
lods
jg
jmp
add
dec
push
push
fcoms
sarl
push
mov
fidivl
sub
dec
loopne
cmpsb
leave
jnp
jbe
jl
pop
mov
xchg
sub
push
shll
mov
movsl
fldcw
ja
jns
mov
jmp
mov
add
sbbl
aam
mulb
lret
dec
out
or
xor
repnz
repnz
popf
xchg
xor
xor
push
inc
in
lcall
mov
jmp
rorl
push
popf
leave
mov
lods
mov
sbb
mov
xchg
or
inc
dec
pop
push
mov
test
cwtl
cmpsl
movsl
inc
jo
cmp
rolb
jae
iret
cmpsl
dec
ljmp
sbb
mov
mov
pop
imul
add
fwait
add
add
fwait
push
jle
mov
imul
cmp
dec
pop
cmp
mov
add
out
pop
std
add
adc
mov
mov
mov
and
inc
push
scas
mov
loope
xchg
incl
iret
push
aas
inc
das
jno
popa
movups
outsl
xor
dec
sarl
loope
xchg
incl
iret
push
aas
inc
das
jno
popa
movups
outsl
xor
dec
sarl
loope
add
sub
push
aas
inc
das
sbbl
adc
pop
leave
dec
lds
rorl
fbld
sqrtps
mov
js
testl
push
call
lret
int
fnsave
dec
pop
xlat
push
xchg
xchg
sub
fcoms
addr16
ja
pop
cwtl
fwait
test
mov
negl
js
or
sbb
enter
call
cmp
das
dec
sbb
sbb
jnp
rclw
addl
and
xor
out
mov
subb
sub
movsl
loop
jmp
sbb
push
sbb
mov
loop
xchg
std
out
xchg
cmp
inc
push
push
and
pop
push
mov
aad
push
mov
xchg
push
jp
cmpsl
xchg
xchg
dec
addr16
cmpsl
lea
jns
mov
mov
enter
xchg
rcrb
testb
in
push
lods
mov
xor
xchg
push
test
xchg
movsb
js
icebp
testl
xchg
ljmp
pop
xchg
push
addr16
sbb
xor
xor
sbb
cmpsl
push
xor
jecxz
jge
pop
cwtl
pop
test
mov
adc
js
or
cmp
mov
popf
pop
in
sarl
dec
stc
push
or
adc
insl
call
insb
lret
add
push
into
push
mov
subl
xlat
dec
fistpl
cmp
mov
aaa
stc
adc
arpl
aaa
dec
pop
xlat
push
xchg
xchg
sub
fcoms
addr16
ja
pop
cwtl
pop
test
mov
xlat
push
xchg
xchg
sub
jge
push
fcompl
sahf
data16
shrl
mov
mov
sbb
sahf
jns
test
mov
xor
out
enter
dec
dec
sbb
imul
mov
mov
jne
cltd
mov
cmpl
push
sti
movsb
lret
mov
sbb
imul
out
movsl
mov
in
scas
xchg
and
mov
cmpsb
repz
sub
stos
mov
cmpsl
or
fdivp
adc
sbb
mov
sub
pop
in
stc
ret
and
ss
dec
push
xor
mov
dec
ja
dec
sub
or
jns
jp
lret
repz
in
dec
jae
es
gs
ds
push
sub
xlat
sbb
xchg
add
insb
lock
rclb
dec
mov
pop
jge
dec
fsubl
pop
pop
lcall
sub
addr16
mov
iret
push
cmp
pop
inc
cmp
shll
xchg
pop
dec
ret
adc
jns
mov
out
daa
mov
jmp
push
and
into
and
nop
pop
dec
fldcw
adc
push
mov
neg
test
stc
inc
ds
and
dec
aaa
xchg
outsl
inc
jp
les
rorb
in
mov
pop
mov
test
in
insb
jle
xchg
sbb
jg
pusha
int3
les
int3
mov
shlb
dec
xchg
and
sbb
xchg
sub
clc
bound
popa
shll
push
xor
push
xchg
cmp
fists
cmp
into
jo
insb
pop
push
mov
pop
push
stos
xchg
fwait
xor
mov
xchg
cmp
mov
xchg
xchg
sub
push
push
add
push
out
fstpl
jl
out
dec
push
rolb
sub
outsl
imull
outsb
shrl
sbb
popf
mov
je
pop
xor
push
inc
in
mov
ds
stos
push
out
into
addr16
incl
mov
repz
movsb
test
mov
adc
jnp
jbe
fs
sbb
out
fists
lods
inc
push
loopne
loopne
sub
pop
int3
loop
jl
mov
hlt
mov
stos
jg
fmuls
aad
xchg
outsb
mov
xchg
mov
adc
mov
icebp
imul
sahf
mov
lock
scas
xchg
sub
add
cmpsl
push
sub
call
jge
xchg
inc
mov
in
jp
test
jae
lret
xchg
jno
jmp
subl
mov
out
or
out
push
mov
fidivs
mov
leave
insb
repnz
pop
fimuls
test
out
cmp
sbb
shrb
push
pop
cmc
int
and
mov
sub
dec
dec
add
movsl
cmc
jle
out
lods
mov
add
rolb
or
cmc
xlat
ret
sbb
sarl
lcall
clc
pop
pop
ljmp
mov
sbb
loopne
and
outsb
sub
mov
pop
dec
stos
mov
ja
xor
pop
in
xchg
adc
and
pop
adc
cmp
mull
mov
jae
mov
mov
arpl
iret
inc
add
sti
ja
pop
sbb
inc
sti
lods
dec
pop
ret
adc
int
in
sbb
loope
adc
cmpsb
pop
decl
pop
stc
mov
mov
js
sbb
mov
add
jb
stos
inc
xor
inc
or
inc
jecxz
sbb
lds
push
mov
xchg
sub
adcb
add
xlat
mov
mov
push
cmp
aam
mov
mov
jg
mov
data16
mov
insl
pop
or
call
ja
mov
mov
roll
ljmp
mov
and
enter
sub
rorb
pop
movsb
shl
ret
iret
lods
fimull
subb
sahf
lahf
fbld
inc
push
loop
out
mov
or
jmp
gs
adc
mov
mov
xchg
std
inc
shll
xchg
js
cmp
cmc
mov
add
xchg
sbb
cmp
mov
jo
mull
int3
xchg
mov
lahf
mov
inc
push
idivl
jno
es
jmp
mov
add
cmp
mov
push
ss
insb
pop
sbb
nop
push
iret
ret
sbb
leave
pop
loopne
inc
jnp
mov
in
push
sbb
mov
sub
cmp
fs
sti
arpl
hlt
imul
insb
dec
rorl
fcompl
cmp
shlb
movsl
loope
cmpsl
cmpsb
fadds
insl
add
cmp
hlt
push
test
mov
xor
aad
cld
testl
mov
pushf
dec
push
push
inc
stc
in
imul
fmull
jg
mov
pop
xor
cmovbe
xor
mov
daa
daa
and
xchg
xchg
inc
pop
lods
cmp
lcall
cld
dec
mov
mov
cmp
lea
xchg
cltd
shlb
cwtl
je
hlt
mov
out
scas
stos
dec
mov
sbb
mov
add
sub
scas
push
lods
pop
dec
outsl
cmc
push
in
xchg
push
movsb
cmp
xchg
pushf
div
pushf
mov
inc
sti
adc
leave
in
adc
adc
fldl
push
xchg
cmovl
dec
mov
adc
jbe
pop
and
ret
faddp
pop
in
push
sub
mov
jle
lar
lcall
xchg
ss
xor
test
jb
cmc
jmp
xchg
dec
mov
and
sub
pusha
cmp
mov
clc
insb
pop
mov
sub
or
fsub
shl
ss
mov
inc
out
mov
sti
fwait
and
mov
mov
movsl
inc
push
add
loop
inc
frstor
mov
out
lahf
int3
mov
dec
imul
aaa
call
cmp
into
roll
mov
stos
lods
ret
int
jnp
sbb
mov
xlat
dec
add
jnp
mov
mov
pop
incb
jne
push
fsub
lahf
or
adc
mov
data16
adc
ret
dec
mov
rcrb
rcrl
les
dec
cmp
nop
sbb
lds
inc
es
mov
aaa
lahf
or
or
mov
mov
arpl
cmp
mul
jecxz
inc
lock
jne
mov
arpl
data16
test
cmp
and
pop
test
movsl
push
mov
jo
push
mov
push
and
mov
movsl
push
imul
aaa
bound
mov
cmpb
or
xchg
pop
adc
mov
add
inc
movsb
lock
xor
imul
pop
pusha
int
mov
push
dec
pmuludq
loopne
cmc
cmp
pop
jmp
fcmovne
add
shl
mov
pop
mov
add
addr16
pushf
cmp
popa
push
movsb
sbb
fnstenv
ja
shll
add
test
dec
adc
imul
test
xor
sub
aas
inc
std
enter
and
loopne
sub
ficoml
dec
jecxz
in
inc
lock
cmc
xchg
popa
arpl
cmp
push
mov
mov
push
dec
into
imul
test
or
andl
push
cmpsb
sti
xchg
mov
jb
pusha
sub
sbb
je
movsl
pop
popa
in
xor
push
cmp
xchg
and
and
inc
dec
loop
push
dec
out
ja
fisttpll
popa
fdiv
mov
xchg
mov
negl
push
out
add
test
mov
xor
rolb
loopne
movsb
das
je
adc
loop
and
mov
fbstp
call
push
iret
mov
and
mov
inc
and
cmp
cli
js
mov
xor
lahf
aam
scas
call
adc
lahf
adc
icebp
dec
les
xchg
bswap
and
mov
cmp
mov
out
out
pushf
std
inc
int
xchg
adc
rol
and
push
repnz
testb
and
mov
fadd
into
pop
int3
data16
pop
cmpsb
rclb
inc
push
ret
dec
ljmp
or
cmpsl
and
gs
jg
push
cld
aas
inc
scas
int
je
stos
nop
xor
push
mov
ljmp
mov
lock
mov
ret
sub
sbb
and
dec
inc
outsb
lea
lcall
mov
sbb
push
sbbl
xchg
adc
shl
sub
xchg
xor
jno
and
aad
push
dec
mov
add
xchg
fcoms
lods
in
nop
dec
xchg
xchg
cli
sbb
and
mov
mov
add
add
mov
jae
ret
aam
aaa
push
arpl
clc
hlt
out
sbb
dec
adc
iret
jl
insl
jbe
xchg
rclb
push
push
in
int
mov
sub
sbbb
fsts
fisttpl
arpl
stos
into
pop
jge
and
or
xchg
dec
xor
pop
negb
and
inc
inc
popa
mov
js
gs
and
mov
jae
pop
in
push
mov
stos
inc
pop
mov
ljmp
rclb
jbe
jp
enter
mov
and
cmp
movsl
mov
mov
das
stos
mov
lock
dec
add
and
and
test
fwait
sbb
inc
pop
mov
movsl
jle
test
lea
popa
shrb
dec
ficoml
imul
mov
dec
jbe
pusha
cmp
testb
sti
aas
repnz
movsl
ror
dec
jnp
les
xlat
sbb
stos
push
xor
or
imul
cltd
test
fistpl
test
pop
in
jge
push
push
cmp
and
cmp
adc
cld
sar
pop
pop
jne
fidivrs
in
mov
xor
cli
dec
stos
sahf
xor
sub
and
pop
movsl
xor
dec
or
jo
push
fwait
pop
ds
lret
jno
add
ja
adc
popf
sti
inc
cli
fucomip
adc
sub
add
cmpsl
mov
cmp
mov
push
mov
adc
pop
cmpsb
dec
test
and
repnz
and
push
repnz
dec
push
movsl
ret
imul
iret
mov
shrb
push
or
inc
sub
mov
ja
mov
push
jecxz
mov
out
cltd
lcall
stos
ret
adc
jae
mov
std
stos
xor
out
dec
mov
out
xor
int
cmp
test
push
xor
popa
adc
pcmpeqw
icebp
fldt
cmc
lds
rolb
nop
or
push
mov
in
xor
lods
inc
xchg
mov
call
aam
sub
pop
pusha
outsb
js
sub
or
adc
es
jns
or
xlat
outsb
inc
push
lahf
bswap
mov
es
lcall
test
push
pop
cmp
adc
mov
pop
loope
fld
addb
dec
cmc
imul
mov
push
mov
notl
inc
lret
ljmp
mov
mov
pop
lock
xor
lcall
or
mov
nop
xor
jp
mov
adc
push
int
into
or
xor
sbb
negl
cmp
mov
nop
jne
in
lahf
out
loopne
popa
mov
les
jo
inc
add
and
jle
stc
mov
in
ja,pt
mov
inc
mov
inc
xor
sti
adc
xchg
pop
int
xchg
adc
dec
sbb
pushf
fidivl
pop
test
jmp
imul
jge
xorb
out
push
pop
jo
add
and
xlat
sub
cmpsb
orb
lret
lods
mov
cmp
cmpsl
or
cli
hlt
call
lahf
std
inc
add
mov
adc
out
and
ss
lahf
push
push
xchg
mov
in
pop
nop
test
cltd
out
lahf
push
rcrl
xor
ja
imul
xor
testb
sub
cmp
push
nop
dec
xadd
lahf
xchg
jne
cmp
sub
sub
fldl
aad
es
int3
cmp
inc
sub
aas
adc
cmpsl
dec
fisubrl
sub
loop
mov
xlat
dec
xchg
popa
xchg
int3
cmc
xor
mov
or
push
sti
loopne
jns
sub
jo
aad
sbb
cmpsb
cs
mov
loope
add
popf
xlat
arpl
imulb
inc
rclb
push
pop
jbe
push
loopne
adc
xor
out
dec
inc
imull
outsb
mov
pop
push
pop
xchg
jae
je
into
cmp
mov
lds
xor
pop
test
mov
stos
mov
xchg
aam
pop
daa
dec
pop
subl
lock
xchg
out
push
test
cmp
mov
movsl
jg
cs
add
dec
xor
mov
test
int3
loop
dec
and
adc
fs
jecxz
movsb
mov
mov
fcmovnb
inc
ljmp
jmp
pop
out
add
inc
jb
push
decl
nop
not
ds
sub
repnz
fwait
out
imul
mov
or
adc
add
cmp
fwait
clc
push
mov
cwtl
out
and
xchg
mov
iret
mov
sbb
sub
sbb
das
in
mov
test
rclb
mov
xchg
cmp
adc
inc
jne
jb
push
adc
cmp
rcrb
sub
xlat
pop
inc
sub
inc
ret
xlat
mov
leave
jle
dec
lahf
mov
ret
loop
dec
sti
xor
inc
aaa
sub
sbb
imul
testl
out
mov
cmpsb
sahf
sbbb
xchg
sbb
dec
sbb
xor
mov
add
adc
aaa
cmp
lds
repz
les
sub
mov
pushf
push
fildl
xchg
and
dec
jno
test
jnp
adc
dec
add
fstpl
xchg
add
mov
mov
mov
or
pop
les
sub
pop
loope
mov
aaa
mov
imul
xchg
ljmp
outsl
fists
fcoms
popf
xchg
hlt
lock
sbb
or
or
mov
mov
or
push
test
and
out
in
rorl
pop
ja
ret
or
movsl
fiadds
jp
and
and
out
nop
pop
xor
and
dec
inc
cmp
push
sbb
mov
sub
pop
pop
das
and
push
cmc
out
sub
jp
pop
sahf
adc
loopne
jge
ja
jae
dec
call
lea
pop
xor
adc
out
cmpb
mov
addb
pushf
add
test
jmp
sub
xchg
sbb
lods
ds
test
mov
mov
inc
xor
mulb
cmp
outsb
or
jno
sub
xchg
sbb
lock
sbb
js
push
dec
push
shl
mov
mov
pop
sbb
jmp
fiaddl
insl
lods
or
cli
mov
sbb
mov
lahf
add
sub
sbb
jnp
inc
xchg
sub
mov
and
shrb
lods
mov
xchg
pop
sbbb
aam
and
mov
mov
and
xchg
xchg
or
lea
in
das
fdiv
jl
movsb
jecxz
out
pushw
and
outsl
and
and
test
xchg
insl
dec
mov
add
inc
jbe
add
sarb
ja
in
and
dec
sbb
jb
push
jo
pop
mov
pop
fsts
sahf
adcb
addr16
or
add
mov
push
in
inc
cwtl
mov
jmp
inc
aas
xor
enter
outsb
popf
mov
push
mov
adc
push
insb
rcrl
shlb
sub
jl
lds
orb
xor
jg
jmp
cmpsb
cwtl
cld
jg
leave
popa
add
insl
sbb
xor
fcoms
lods
add
ret
clc
addl
xor
push
cmp
jb
ficoms
or
lret
mov
fmuls
sub
mov
pop
movsb
jno
adc
pop
in
push
lret
sub
sbb
mov
ficoms
push
xor
jmp
scas
xlat
dec
pop
jle
or
add
push
cwtl
push
out
mov
push
mov
xchg
xor
cmp
inc
cwtl
sbb
in
mov
xor
test
push
in
mov
jl
and
push
adc
lcall
jle
andl
push
sub
test
scas
nop
cmp
dec
mov
ret
sbb
imul
stos
and
notb
lea
dec
sbb
mov
mov
inc
pop
inc
cmpsl
movsb
dec
cmp
addl
shll
out
push
push
push
enter
enter
aas
xchg
movl
rorb
lret
pop
jecxz
pop
jo
add
jno
mov
xorb
push
sub
je
ljmp
scas
std
cmp
jbe
call
xchg
xchg
push
cmpsl
lret
pushf
xchg
bound
add
adc
sbb
movsb
mov
xchg
aas
pushf
cli
hlt
push
push
test
or
sbb
cmp
imul
cmp
dec
add
pop
mov
push
out
ret
cltd
aaa
pop
jecxz
dec
sbb
ljmp
pop
mov
xor
sbb
and
add
pusha
push
loope
dec
lock
ljmp
bnd
rcrb
inc
xchg
xor
cmp
sub
xor
lods
pop
cwtl
pusha
xlat
add
rol
loop
jl
mov
fwait
data16
aaa
into
cli
cmp
popf
mov
mov
icebp
mov
xlat
clc
jge
outsl
mov
lea
dec
ja
fmulp
cmpsb
jb
jge
mov
fiadds
and
dec
mov
fs
push
pop
movsb
xchg
jmp
xchg
lods
sbb
sub
xor
lods
xchg
sbb
cwtl
testb
cs
in
ss
sti
jbe
or
stos
movsb
mov
in
dec
repnz
ds
insl
mov
mov
pop
faddp
test
mov
or
repz
testl
roll
shr
clc
imul
fmulp
ror
fsubl
cmp
scas
repnz
sbb
fsubrl
cmpb
fbstp
xchg
das
movsl
movsb
nop
mov
dec
or
cmpsb
sbb
cwtl
in
pusha
arpl
or
inc
loop
or
test
outsl
pop
fidivrs
lret
inc
les
shll
ss
dec
add
cmc
orb
mov
xor
push
out
shl
add
xchg
sub
jp
inc
adc
fs
bsf
jle
in
inc
fistpl
jecxz
mov
mov
xchg
sbb
faddp
test
mov
and
push
cs
jl,pt
icebp
jbe
incl
mov
int
pop
xor
lods
lret
rcrl
int
push
in
gs
or
nop
addb
scas
ja
nop
fdivrs
out
inc
mov
mov
add
fmull
mov
mov
movsb
loope
mov
inc
xchg
sbb
pop
cmpl
popf
sahf
aam
cmp
lods
xchg
cmp
stc
inc
in
mov
sbb
cs
push
jl
mov
mov
xchg
or
in
and
movsb
jecxz
mov
mov
pop
or
mov
leave
xchg
pop
lahf
and
leave
rcrl
pop
outsb
push
addr16
and
jp
pusha
dec
stc
adc
inc
das
or
cwtl
mov
in
jbe
xorl
xor
jo
ret
or
lcall
sbb
dec
xor
jle
repz
cmp
or
sub
jne
test
sub
loop
xor
data16
pop
xchg
stos
loopne
cmpsw
das
mov
push
imul
xchg
fs
push
mov
out
lahf
dec
mov
ja
cltd
sbb
je
push
cmp
in
jb
sar
mov
sub
cmpsb
sbb
je
imul
mov
mov
movsl
pushf
add
pop
popa
xlat
xor
pop
push
lds
rcl
mov
fstps
mov
and
out
mov
scas
je
mov
out
mov
mull
subl
pop
mov
loopne
aam
sbb
in
aas
mov
mov
dec
add
adc
aam
call
sbb
js
lret
jecxz
enter
pushl
stc
xchg
ret
call
or
ja
pop
cwtl
pop
test
mov
xlat
push
xchg
xchg
sub
fcoms
addr16
ja
pop
cwtl
pop
test
mov
xlat
push
xchg
xchg
sub
fcomps
call
pop
cwtl
mov
dec
pop
pop
xlat
push
xchg
xchg
sub
fcoms
addr16
jbe
pop
cwtl
pop
test
mov
jge
out
cmpb
push
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
popa
push
mov
mov
sub
xchg
push
xchg
mov
cmpsb
sub
pop
les
outsb
out
push
sahf
push
mov
mov
inc
into
jbe
data16
xchg
push
mov
test
cmp
out
ja
ds
pop
outsb
out
hlt
std
movsl
xor
dec
fisubrs
pop
test
outsb
jg
imul
add
pusha
mov
test
cmp
js
mov
jb
adc
xchg
ret
stc
iret
dec
ss
je
adc
pop
cs
sbb
jle
and
popa
cli
or
loope
lret
ret
mov
into
mov
cmp
and
pop
into
push
mov
mov
inc
push
mov
xchg
sbb
shrl
or
out
inc
cmpsb
mov
inc
dec
test
scas
xchg
out
xchg
xchg
inc
push
mov
push
cs
jle
xchg
xchg
out
jno
fldenv
in
das
test
outsb
arpl
or
lret
sub
ds
or
out
fistps
es
ficoms
jbe
jg
popl
sahf
push
scas
daa
mov
pop
in
jle
or
arpl
and
xchg
adcw
ret
xor
add
mov
push
stos
cmp
xor
outsl
mov
out
sub
and
fildll
pop
fisttps
push
mov
into
jbe
data16
xchg
push
xchg
mov
cmpsb
cs
pop
dec
idivb
outsb
push
sahf
push
mov
mov
inc
into
jbe
data16
xchg
push
xchg
mov
cmpsb
cs
pop
dec
idivb
outsb
push
sahf
sub
mov
inc
inc
push
idivl
mov
shrl
inc
shll
imul
addr16
test
mov
inc
fdivs
mov
dec
iret
test
hlt
out
pop
add
and
sti
cmp
inc
nop
out
pop
mov
inc
movsb
repnz
repnz
xchg
and
insl
dec
shrb
aam
dec
cmp
jmp
adc
sbb
aas
fldcw
jle
insb
pusha
mov
cmp
pusha
sbb
jl
xchg
es
or
negl
xchg
pushf
std
mov
mov
pop
loop
mov
and
into
test
dec
push
adc
setne
sbb
xchg
mov
sub
add
pop
shlb
sub
add
sbb
mov
sub
pop
les
repz
jbe
imul
out
lcall
lock
int
fisubl
jns
fwait
addr16
scas
mov
mov
push
adc
shr
fcomps
popf
add
std
or
sarb
sub
outsb
push
dec
ljmp
or
mov
dec
xchg
lea
mov
fs
jl
ret
outsl
test
or
push
popl
lahf
stos
push
or
out
pop
pop
sar
jb
pop
mov
inc
iret
dec
xor
lods
xchg
addr16
xchg
dec
push
repz
and
mov
pop
testb
loopne
imul
dec
clc
push
jmp
xchg
orb
cli
iret
fsts
cmp
and
sbb
add
lods
push
mov
jne
cmc
mov
out
orl
jg
cld
sub
je
or
cmp
xchg
loop
movsl
xor
dec
mov
hlt
mov
mov
es
pop
adc
fcomps
lahf
sbb
aam
cmp
push
jle
popa
lret
jp
xchg
or
xlat
add
jmp
xor
mov
jnp
push
fisttpll
cmp
test
sbb
push
jmp
and
adcl
mov
jmp
rcrl
mov
pop
or
insb
push
sub
mov
cltd
stc
jnp
iret
xchg
shr
aas
xchg
fdivp
inc
movsl
icebp
enter
inc
fldcw
cs
addb
inc
add
insl
adc
push
jle
dec
ss
decl
cs
pop
pusha
imul
std
into
cmc
mov
insb
lds
mov
jle
pop
sti
scas
mov
in
stos
add
push
pop
xor
stos
sti
aas
cmp
xor
insb
jle
scas
push
xchg
sub
sbb
xchg
mov
and
mov
jle
pop
adc
or
pop
es
xchg
rorb
xchg
lock
int
mov
dec
fs
lods
and
add
scas
aas
lock
aaa
outsl
mov
adc
mov
add
lret
ficoms
mov
aaa
out
sahf
adc
xchg
sbb
jo
xchg
xchg
jl
pop
leave
divb
lods
pop
xchg
sarb
sbb
jl
repnz
fcompl
iret
aaa
cmc
sbb
xchg
mov
es
in
psubsw
dec
jmp
pop
xchg
into
mov
cmpsl
test
sahf
push
test
scas
std
xchg
jae
loop
cltd
mov
jnp
addl
adc
and
sahf
sahf
jo
notb
out
sti
shrb
stos
jo
and
push
repnz
pop
xchg
testl
dec
inc
sbb
push
aad
outsl
sti
sub
out
repnz
mov
je
cmp
push
pop
fcmovb
dec
dec
pop
out
addr16
jmp
push
mov
jge
idivl
dec
sbb
push
pop
mov
psubq
adc
or
mov
icebp
jbe
aaa
cmp
cmpsl
imul
fcompl
cmp
loop
pop
sub
cmc
xchg
test
jo
jbe
sub
rorb
fstpt
lods
inc
jle
lds
mov
repnz
xchg
in
sub
adc
inc
mov
push
push
lahf
fstps
fcmovne
xor
or
into
push
fmuls
es
pop
xchg
xchg
push
sub
mov
in
adc
fucomi
sub
in
cmp
scas
rorl
cmp
sub
int3
in
sub
mov
inc
mov
ret
ret
std
xor
inc
aas
pop
jle
pop
shll
sarl
cmp
or
dec
add
xchg
jae
leave
rcrl
arpl
add
add
movsb
icebp
and
cmp
add
inc
in
cltd
popl
iret
mov
mov
xor
fldl
movsb
sub
jnp
movsl
jno
mov
flds
insb
mov
test
inc
mov
aas
sub
dec
icebp
pop
enter
add
insl
add
jae
sti
jmp
imul
lahf
jne
cmp
outsb
or
mov
or
test
push
sbb
xchg
xchg
cltd
sub
daa
fadds
lahf
jns
mov
fadd
mov
lock
and
call
sbb
pop
mov
jp
lahf
in
or
fwait
mov
repz
add
loopne
jo
xchg
push
pop
push
fsubrs
je
bound
enter
shll
adc
dec
sub
adc
mov
sbb
adc
fnstenv
iret
add
xchg
icebp
mov
lock
aam
outsb
push
mov
sbb
adc
dec
pop
ljmp
clc
inc
mov
sub
pop
cmp
xlat
push
aad
roll
pop
mov
in
fcomps
jmp
imul
pop
mov
and
ja
push
ret
mov
movl
and
daa
adc
lods
insl
imul
jecxz
cmp
mov
push
fwait
xlat
cs
push
and
loop
pushf
jge
dec
dec
xchg
add
imul
cmp
adc
cwtl
stos
jb
dec
and
mov
lret
retw
shr
lea
int
lock
inc
arpl
jne
es
es
xchg
pop
lret
push
adc
sbb
xor
mov
lahf
mov
xchg
sbb
sub
xchg
ret
and
popf
pop
loope
sbb
sub
mov
push
push
ret
cli
and
push
pop
movsb
fldt
shll
mov
adc
jl
cmp
insl
mov
cmp
jno
scas
push
aam
cmpsb
sbb
jg
xor
int3
lods
fs
xor
mov
fisubs
mov
sbb
clc
lahf
out
imul
xor
sub
jl
jl
and
cmp
pop
imul
subl
int
and
mov
test
or
add
xor
or
xchg
cltd
cmp
or
nop
ljmp
xchg
inc
repnz
dec
push
or
movsl
orl
push
jb
xchg
adc
or
fistps
mov
call
mov
insb
sbb
inc
cmpsl
and
stos
push
loop
lock
mov
daa
fisttpll
or
jo
xchg
hlt
orb
inc
push
push
fsts
push
test
fcom
pop
rcr
popa
jecxz
add
subl
jbe
push
cmpsb
dec
mov
jle
push
pop
or
and
jnp
les
movsb
loop
or
gs
enter
fdivrs
out
cmp
cli
add
nop
aas
popf
mov
frstor
loope
out
sub
jle
fcoml
mov
mov
pusha
sbbb
jge
mov
sub
dec
jle
push
cmpsl
dec
das
xor
cli
in
es
outsl
nop
popa
mov
cmp
clc
jnp
cmp
fimull
call
pop
std
je
std
sub
cmc
adc
mov
rclb
movsb
daa
into
pop
inc
fadd
push
xchg
pop
xchg
xchg
jecxz
dec
add
addl
test
push
enter
push
shlb
and
push
aam
push
xchg
popa
cs
shl
iret
shll
or
mov
insb
xchg
ror
stos
mov
cli
repz
ja
push
inc
pop
frstor
mov
cmp
pop
in
jp
and
mov
repnz
loope
ja
or
sbb
test
movsl
sbb
rclb
jbe
pop
dec
adc
fsubr
xchg
xchg
mov
add
test
shll
sub
cmp
enter
push
mov
lock
xor
lock
sub
xor
push
inc
fimull
cwtl
insl
js
popf
sub
xchg
pop
jnp
shrl
rorl
inc
icebp
mov
mov
rep
lds
mov
push
mov
inc
out
loopne
shlb
xchg
jns
sub
cwtl
sub
repnz
test
xchg
pop
loope
fs
and
push
int
mov
or
dec
sub
lods
in
mov
jg
aaa
jge
jmp
add
or
mov
or
push
xor
dec
sub
idivl
sbb
xchg
scas
int
xor
push
jnp
pop
sbb
push
dec
in
fisubrs
mov
data16
push
mov
jl
outsl
leave
pushf
push
cmp
test
dec
fistpll
dec
add
idivl
idivl
inc
sahf
pop
leave
shrl
insl
xchg
mov
inc
cmp
sbb
mov
sti
ljmp
jp
fs
repz
icebp
jae
cmpsl
mov
fdivrp
cwtl
xor
sub
sarl
inc
jo
enter
pushf
pop
arpl
mov
arpl
or
in
je
lds
fidivs
mov
mov
fistl
xchg
and
lahf
ret
mov
aad
push
js
inc
rcll
scas
xor
xor
enter
nop
or
mov
lods
sbb
mov
xor
inc
dec
push
push
insl
rorb
cs
mov
jle
test
das
lcall
lods
add
push
rcrb
xor
shlb
xchg
aas
cmp
aad
fucomi
push
adc
add
mov
jecxz
jo
fcoml
mov
jmp
sbb
push
mov
xor
movl
inc
lods
dec
xor
mov
xor
sbb
out
outsl
push
ljmp
mov
xchg
jecxz
out
xchg
push
iret
mov
push
sahf
push
cltd
cmc
push
and
ret
sub
dec
sub
mov
out
jae
pop
mov
mov
cs
out
mov
mov
dec
fadd
out
das
sbb
pop
cmp
mov
cld
rcrl
mov
mov
inc
add
jg
xchg
testl
add
inc
jne
xor
dec
jne
test
sahf
or
mov
hlt
push
rcrb
fisttpll
xchg
imul
sub
hlt
lds
aaa
imull
sub
repnz
pop
lahf
jns
pop
nop
push
in
outsl
push
sbbl
jle
xorb
cmp
ljmp
adc
and
pop
dec
adc
cmpb
movsb
aad
repz
jbe
das
jge
aaa
add
mov
pop
jle
sub
adc
mov
sbb
fwait
bound
sahf
fcmovnu
push
sti
pop
xchg
divl
mov
jae
fcmovnbe
and
mov
or
dec
ds
sbb
push
mov
adc
mov
test
sbb
int
popa
xchg
jmp
stos
adc
push
mov
and
insb
push
jmp
jl
mov
adc
mov
imul
sub
and
adc
or
out
and
shlb
inc
xchg
pop
and
in
xchg
outsl
adc
and
lret
cltd
cmp
xchg
stos
test
iret
pop
xor
push
or
in
mov
sbb
in
inc
cwtl
push
mov
aad
or
fdivs
loop
test
sbb
push
mov
aam
xchg
rcll
dec
add
dec
dec
inc
jge
fdivr
insl
out
ret
inc
cmpsl
ror
cmp
mov
mov
dec
shll
push
or
pop
lahf
stc
in
mov
data16
outsb
xchg
ljmp
adc
scas
das
cmpsb
pop
fsubs
inc
fnstsw
or
lcall
fwait
jns
mov
scas
dec
cmpsl
push
ja
pop
insl
jns
xchg
inc
ret
in
push
mov
jo
std
popf
xchg
mov
inc
aaa
sub
enter
pop
movsb
xchg
push
add
add
test
data16
lahf
pop
sbb
test
ljmp
fs
in
stos
or
push
les
pushf
pop
xchg
ja
fcmovnbe
clc
and
cmpsl
lret
aaa
pop
rcrb
push
jp
add
xor
out
mov
iret
inc
sub
neg
jle
pushf
add
or
pop
imul
sti
sbbl
push
xchg
adcl
inc
aam
incb
fmull
jg
sarb
wbinvd
in
sarl
popa
jns
shll
loop
mov
out
dec
rorl
pop
xchg
add
mov
xor
cli
jmp
xor
lahf
aam
inc
or
arpl
xchg
xchg
lret
test
fimull
ret
xchg
dec
jg
dec
or
adc
leave
mov
jae
cmp
pop
and
push
iret
sub
inc
pop
out
fs
lods
jo
in
stc
sub
cmp
andb
adc
jbe
jno
jb
cmpsl
mov
mov
mov
ja
mov
in
loop
movsl
xchg
or
push
add
jg
outsl
daa
add
lods
scas
mov
xor
into
jbe
add
sub
xorl
cmp
fwait
scas
arpl
sti
in
inc
add
xchg
lods
push
inc
ja
xchg
mov
orb
inc
fcoms
mov
xor
aam
popa
enter
nop
and
xchg
push
into
push
das
inc
or
mov
add
mov
std
mov
in
lods
sbb
negb
leave
stc
lahf
daa
dec
negb
sub
stos
cli
add
stc
mov
lcall
in
popa
cmp
push
jne
cs
xlat
pop
inc
lret
pop
xor
lods
sub
add
out
mov
xor
int3
cmc
mov
arpl
xor
xchg
ret
sub
fwait
pop
lods
repnz
push
or
pop
repz
sbb
outsl
int3
iret
ret
fwait
mov
inc
js
movsl
repnz
sti
mov
bound
mov
mulb
stos
adc
xchg
addl
fisubl
dec
sbb
daa
inc
subl
popa
hlt
add
and
stc
sub
cmpsl
scas
lcall
int
insl
mul
mov
mov
rcr
xor
mov
scas
add
mov
out
or
xchg
jo
push
mov
push
or
xorl
mov
into
leave
mov
sti
sbb
adc
and
leave
pop
test
fs
cli
dec
xor
popa
mov
test
sub
dec
or
add
push
adc
jne
js
xor
int3
pop
or
sti
sub
lods
pop
stc
filds
jle
pop
mov
push
adc
popa
mov
enter
testb
les
xor
dec
aam
das
pop
outsb
popa
into
cmp
push
inc
xorl
add
mov
ret
subb
add
les
cmp
add
push
incl
test
dec
shrl
fisubrs
ss
adc
dec
sub
ja
add
test
mov
cmp
mov
mov
mov
in
push
jae
add
or
or
icebp
loope
or
sbb
sub
sbb
imul
xor
mov
nop
add
outsb
cmp
notl
pop
in
or
xor
push
sbb
pop
neg
fsubrs
arpl
mov
adc
loopne
call
pop
fdiv
inc
pop
or
ljmp
xchg
jo
adc
dec
bsr
rcrb
dec
shll
ljmp
xchg
and
jns
inc
stos
movsb
out
outsb
mov
xor
mov
push
adc
fstpt
add
xchg
fisubl
push
scas
out
xor
loop
test
ficoms
xor
mov
or
xchg
insl
js
sti
enter
mov
in
mov
push
out
fisttps
repz
pushf
and
xchg
xor
cmpsb
mov
jg
inc
lds
imul
or
xchg
repnz
xchg
xchg
ret
ret
out
std
cmpsl
jnp
jmp
xor
push
add
adc
push
lock
jle
xor
mov
and
push
push
mov
rorb
repz
dec
dec
mov
data16
rolb
sub
jo
imul
push
fs
mov
test
mov
lods
xor
and
stos
jl
stos
test
test
xchg
insb
mov
cltd
xchg
fbstp
jo
push
jl
cmp
push
aaa
leave
sbbb
xor
jmp
lea
xchg
or
xor
mov
or
fcoms
fwait
xor
adc
xchg
ja
mov
sub
test
lret
dec
push
pop
lea
enter
or
ljmp
cmp
adc
sarl
int3
jmp
or
lock
sbb
addr16
xchg
lahf
or
jmp
mov
in
insb
jmp
pop
xchg
or
rcrl
bndstx
xchg
pusha
mov
aam
rclb
jo
in
movsb
push
adc
pop
sbb
inc
stc
leave
test
bound
add
xchg
xchg
das
ljmp
fadds
dec
pop
inc
mov
mov
call
scas
addl
sarl
std
add
int
dec
lcall
adc
movsl
les
mov
add
or
mov
push
xor
cmpsb
jg
dec
jb
add
jne
mov
in
mov
sub
cs
jne
call
test
xchg
cs
sub
inc
aas
movsb
addr16
fwait
adc
push
outsb
push
push
dec
arpl
push
mov
pop
fsub
mov
pop
hlt
testb
lea
rcrb
daa
pop
mov
xor
and
cmp
das
rcll
out
outsb
cmpsb
or
test
mov
xchg
xchg
fbld
repz
dec
xor
les
lods
mov
mov
xor
mov
shll
icebp
sbb
iret
jo
pop
stc
add
sub
lcall
out
mov
push
push
rcl
pushf
icebp
pop
jnp
aaa
movsl
mov
pop
dec
js
cmpsb
adc
call
or
jg
je
add
test
pushf
insl
scas
mov
mov
cwtl
mov
scas
cli
daa
or
add
adc
cmpl
rorl
or
mov
repnz
or
mov
lds
xorl
mov
std
das
arpl
cmpl
mov
fstl
adc
sub
adc
jno
rorl
shll
jl
das
xor
and
insl
mov
pop
das
or
mov
jmp
pop
popl
ds
inc
pop
xor
fstps
rorb
ficoms
jl
jae
fistl
mov
jae
add
orb
push
jle
xchg
or
xor
stc
sbb
mov
mov
push
stos
lods
outsl
ss
stos
movsl
ss
popl
and
iret
mov
pop
out
jecxz
dec
inc
call
cmc
mov
out
xchg
pusha
lods
movsl
push
ret
xchg
in
push
aaa
dec
fldcw
jmp
test
mov
lds
xor
in
push
or
pop
pusha
pushf
or
adc
lds
mov
jge
mov
jnp
add
cltd
sub
push
sbb
aaa
cmp
inc
jo
or
je
movsl
pop
sbb
loopne
popl
cmp
lcall
insb
andl
mov
add
sbb
mov
and
or
les
add
scas
out
cwtl
fs
inc
popf
or
cmpsl
cmpsl
loope
jns
mov
test
scas
add
fwait
add
mov
roll
sbb
loope
dec
outsl
sbb
inc
pop
jl
xchg
or
xchg
test
aad
mov
push
jbe
jne
sub
data16
sbb
das
nop
daa
sub
daa
nop
mov
mov
imul
inc
cmp
negb
mov
into
pop
inc
notb
mov
enter
pop
fsubrl
jmp
pushf
push
cltd
push
test
incl
mov
jb
xchg
mov
xor
jb
stc
pop
push
insl
mov
lock
and
mov
es
push
fiadds
jbe
data16
xchg
push
xchg
mov
cmpsb
cs
pop
dec
idivb
outsb
push
sahf
push
mov
mov
inc
into
jbe
data16
xchg
push
xchg
mov
cmpsb
cs
pop
dec
idivb
outsb
push
sahf
push
mov
mov
inc
into
jbe
data16
xchg
push
xchg
mov
cmpsb
das
pop
dec
idivb
outsb
push
sahf
add
aaa
mov
inc
into
idiv
out
imul
cmpsb
pop
mov
sbbl
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
xor
imul
cmp
es
or
flds
test
mov
mov
jns
imul
cmp
push
sbb
mov
mov
leave
repz
test
xor
imul
cmp
push
sbb
mov
or
mov
nop
cmc
nop
cld
stos
incb
inc
sbb
or
jl
xor
mov
jp
adc
jle
push
dec
fistpll
jns
xor
les
arpl
jmp
jl
movsb
test
xchg
fmul
imul
es
out
ret
or
filds
ss
push
inc
xor
add
rorb
sbb
pushf
sub
adc
inc
add
jl
mov
in
dec
mov
cmpsb
xchg
xchg
cmpsb
incb
inc
scas
dec
enter
stos
cld
push
es
mov
icebp
ret
imul
out
inc
pop
jbe
mov
hlt
stc
out
arpl
stc
adc
shll
and
pop
add
cmp
push
sbb
mov
mov
leave
repz
ret
iret
push
jns
adc
inc
or
jle
pop
cmp
jge
mov
lock
mov
mov
mov
inc
adc
inc
sub
jp
insb
push
dec
push
daa
rcrl
add
xchg
mov
cmp
cmp
xor
or
push
sbb
mov
mov
leave
repz
ret
mov
jns
imul
cmp
push
sbb
mov
mov
leave
repz
ret
mov
jns
inc
mov
jl
mov
and
xchg
xchg
sar
movsl
xchg
jl
sahf
ss
fmuls
sbb
adc
mov
push
fbstp
lea
xchg
cltd
outsb
out
cli
in
pushf
aam
das
sub
mov
aas
jb
bound
lea
scas
hlt
adc
jg
mov
inc
aad
sbb
scas
je
xchg
mov
das
mov
stos
sbb
rorl
into
sub
or
mov
cld
inc
adc
in
dec
jne
hlt
mov
lahf
mov
fdivrs
pusha
repz
jnp
adc
out
ljmp
jmp
or
sti
leave
or
not
sbb
ljmp
shlb
sbb
push
test
ficompl
inc
movzwl
sub
jno
in
hlt
push
push
mov
dec
sbb
imul
out
psubd
decb
mov
sarb
js
test
or
pop
sub
outsb
out
and
dec
xchg
mov
lods
cmpb
fistps
ret
loop
sbb
idiv
clc
dec
imul
imul
mov
jb
push
add
inc
cmp
loope
xorl
in
sbb
pushf
xor
lods
and
ja
jp
nop
je
mov
mov
mov
lods
fisubrs
push
data16
leave
cmp
push
cs
mov
sbb
xchg
sahf
mov
mulb
inc
pop
jmp
xchg
mov
shl
pop
xor
jb
je
dec
loope
pop
dec
add
mov
cmc
lods
push
aam
fiaddl
sbb
in
ja
or
in
dec
mov
int3
aas
mov
xor
test
icebp
stc
mov
inc
insb
mov
or
pop
adc
mov
jg
push
out
push
adcl
mov
popf
xlat
cmc
stos
mov
push
std
jecxz
dec
push
lret
das
aad
rorb
pop
dec
sub
xchg
test
mov
or
mov
pop
xor
adc
sub
dec
imul
ss
mov
sub
mov
das
pushf
hlt
sub
dec
ret
inc
test
sbb
and
cwtl
loopne
mov
mov
test
dec
dec
out
repz
cmpsl
mov
in
rolb
mov
sub
inc
aaa
xlat
adc
adc
leave
mov
or
push
mov
mov
daa
xor
inc
popa
inc
int
repz
les
add
cmpsl
icebp
xchg
enter
ljmp
ds
xchg
icebp
cmp
mov
push
sbb
push
mov
les
adc
gs
fwait
or
jle
test
xchg
jb
xchg
and
pop
jne
out
fidivl
inc
push
scas
hlt
mov
mov
aad
imul
sub
xchg
pop
xor
push
test
mov
pop
cmp
das
push
mov
mov
popf
or
pop
and
push
push
rclb
cli
push
adc
sti
lret
es
xchg
mov
mov
mov
lcall
pop
mov
xchg
mov
repz
aaa
cwtl
adc
into
add
dec
es
andl
fs
enter
cmp
lahf
fcmovnu
movsb
int3
push
repz
mov
xchg
enter
or
addl
dec
test
jno
insb
inc
std
dec
jnp
or
pop
lea
rcrl
outsb
iret
pop
inc
andb
sbb
fnstcw
xor
outsl
cmpsb
ret
les
cmp
mov
adc
mov
push
add
enter
das
enter
pop
cmpsb
adc
pushf
inc
rclb
lods
je
cwtl
ljmp
and
rorl
ja
pop
push
jnp
add
jge
xchg
testl
pop
outsl
mov
repnz
cmp
iret
lds
loop
mov
cmp
jbe
jecxz
jmp
push
jo
cmp
mov
adc
sbb
inc
xor
cmpsl
mov
fsub
imul
lcall
fld
inc
mov
cmp
add
add
inc
sbb
cmp
clc
fcmovnb
or
gs
mov
jae
inc
outsl
inc
sbb
adc
jbe
jb
or
pushw
cmp
clc
mov
mov
out
cmp
ficoms
hlt
lods
fcoml
dec
fisttpl
popa
push
xchg
xor
ja
popa
dec
inc
xchg
lcall
jge
scas
out
cmp
out
ljmp
push
js
cmp
xchg
cwtl
out
xor
or
dec
fs
cmp
roll
cs
pop
cmpsb
inc
cmpsl
xor
push
xchg
mov
insb
jp
sti
out
hlt
test
lods
jmp
fnstenv
bound
add
movsb
cmc
lods
cs
mov
mov
or
add
inc
sbb
imulb
out
jp
mov
ljmp
sub
inc
cli
adc
jbe
les
adc
fstps
sbb
jb
and
dec
jecxz
fadd
add
insb
ds
int
mov
out
xchg
clc
lahf
dec
int
lahf
jle
push
mov
pop
mov
outsl
inc
pop
lods
das
adc
cwtl
pop
push
filds
xor
mov
andb
insb
adc
lret
add
lock
cmp
dec
inc
call
incl
stos
dec
push
sbb
arpl
sub
repnz
movsl
and
and
mov
jg
dec
push
aam
adc
outsb
dec
adc
idivb
jp
testb
or
mov
and
adc
cli
sub
sbb
movsb
push
hlt
loope
jbe
addb
sbb
in
imul
cmc
mov
xor
xor
sub
aaa
sub
add
xor
outsl
leave
idivl
pop
adc
push
inc
mov
loop
dec
imul
mov
hlt
addr16
inc
imul
add
xchg
enter
mov
adc
je
mov
fisubl
push
cltd
sbbl
ds
cld
ror
jns
cmpsl
call
into
pop
mov
out
js
jmp
fdivl
imul
fiadds
sub
enter
jp
push
test
and
js
lret
cli
add
and
inc
xlat
test
add
or
and
rclb
into
mov
sub
cld
dec
repz
dec
xorb
mov
mov
sar
push
cli
mov
aam
inc
repz
pop
ja
inc
jp
xor
into
cwtl
punpcklwd
and
sbb
daa
or
adc
cmp
dec
arpl
arpl
add
cld
cmc
lret
inc
xchg
pop
je
cltd
add
stos
cmp
test
fidivs
jge
rcll
push
pushf
rclb
inc
mov
dec
push
cmpsl
cmp
mov
push
fwait
das
xor
cltd
pop
push
dec
pop
xchg
fsubrl
or
inc
pop
out
ss
xor
dec
cwtl
and
push
icebp
xchg
cltd
mov
das
sub
add
xor
mov
mov
into
pop
cmp
or
jae
leave
bound
or
jne
dec
xchg
jno
dec
push
ss
fmuls
int
hlt
outsb
push
dec
mov
popf
mov
push
orl
out
inc
inc
jae
sbb
sbb
inc
dec
pop
dec
jecxz
fadds
inc
test
outsl
jl
xor
jnp
push
add
add
jno
xor
push
mov
dec
out
dec
cmc
add
dec
xor
aad
xchg
cmpsl
leave
xchg
loope
lods
push
xchg
cmp
shlb
xor
pop
mov
mov
es
sub
ja
cmp
and
frstor
push
pop
icebp
jbe
sahf
cld
nop
nop
loop
xchg
lods
adc
ss
out
data16
mov
and
jmp
mov
sub
fldcw
adc
sub
jl
pop
in
or
push
mov
inc
push
insb
jns
aas
jg
mov
or
xchg
call
fidivl
mov
xchg
and
pop
iret
sub
xor
movsl
xchg
jbe
ret
mov
push
jae
xor
bnd
insb
loopne
in
shll
lods
shlb
or
std
dec
or
enter
cmpsb
clc
adc
jmp
push
mov
xchg
xchg
aam
stos
sbb
call
mov
push
sub
xchg
push
pop
mov
insb
inc
sub
lahf
shll
mov
and
dec
cmpsb
cmpsl
cmp
subb
xchg
pop
push
cltd
push
cltd
lods
jb
or
fs
ret
adc
aad
es
shrl
push
inc
fdiv
mov
lds
insb
hlt
fistl
mov
jmp
hlt
xchg
xlat
stc
mov
jae
nop
xor
inc
cltd
dec
mov
cmp
insl
xchg
lods
inc
mov
or
popa
loop
push
cltd
stc
ds
fwait
jns
mov
cli
dec
jae
xor
scas
jp
pop
and
xlat
cld
imul
movb
sbb
decb
jno
adc
bound
inc
lock
lock
jmp
cmpsb
add
mov
push
ljmp
lret
sarb
push
cld
into
repz
call
pop
mov
cs
ja
jle
aas
jmp
lahf
sub
adc
jle
test
inc
or
adc
sar
push
outsl
test
test
das
sub
addr16
pop
jge
pop
pop
adc
stos
adc
cmp
out
mov
xchg
mov
je
cmc
inc
dec
daa
mov
sub
fistl
mov
sub
pusha
outsb
stos
xchg
repnz
pop
jmp
fsubrl
addl
jnp
xchg
addr16
stos
je
test
sbb
sub
or
out
inc
mov
cmp
jle
push
mov
xor
fdivs
dec
clc
ja
and
or
xchg
lods
cwtl
cmp
in
aaa
je
jmp
int3
mul
in
insb
fimull
xchg
imul
push
mov
rcr
call
and
push
inc
jmp
xor
int
sub
out
cmp
aaa
inc
add
imul
test
push
rorl
cmpsl
aaa
xor
ljmp
addb
sbbl
inc
sub
test
dec
xor
aas
lret
outsl
mov
mov
aad
ss
xchg
xlat
out
cli
sub
mov
add
mov
cs
pop
cltd
jecxz
xor
lret
in
sub
scas
dec
or
insb
adc
int
mov
cmc
fisubrs
dec
mov
daa
and
adc
mov
pop
xlat
fstps
mov
lds
jae
dec
jo
addb
negb
and
sbb
add
pop
push
inc
daa
dec
subb
push
roll
gs
sbb
mov
push
or
push
fists
cmp
xchg
inc
and
dec
add
pop
push
stos
and
push
adc
fildll
dec
mov
mul
clc
jmp
dec
push
nop
cmp
and
out
xchg
fisubrs
pop
popa
in
jmp
aas
jno
mov
push
mov
fsubl
shlb
mov
add
push
push
jne
xchg
pop
stc
mov
lret
popf
mov
jbe
xchg
imul
aas
mov
xlat
sub
dec
stc
inc
pop
xlat
mulb
mov
repnz
mov
cmp
cltd
mov
lock
loopne
ficomps
ja
inc
je
es
stos
cmp
cs
push
sub
add
jb
dec
ljmp
mov
loop
or
mov
sbb
mov
jg
sti
subl
ret
imul
inc
and
xchg
imul
jg
cltd
cmp
adcl
pop
call
in
fistpll
cmp
or
scas
sbb
mov
xor
xor
pop
mov
inc
adc
fst
and
push
rorl
push
outsl
rorb
daa
in
pop
fsub
jg
jae
sbb
cmpsb
js
and
test
dec
les
xchg
out
clc
lock
mov
stos
fcomps
outsb
andl
hlt
cmp
sub
xlat
repz
daa
stos
mov
fs
lds
enter
mov
mov
jbe
rorl
sarb
or
mov
xchg
mov
and
sbb
arpl
dec
icebp
sar
sbb
lahf
call
jle
pop
call
sahf
inc
mov
inc
jb
and
push
movsl
xchg
stc
inc
mov
pop
pop
scas
insl
xlat
mov
call
xor
je
sbb
sahf
int
sbb
fimuls
cmp
xchg
test
add
pop
cmc
and
sub
jg
push
xchg
aam
cli
out
xchg
nop
mov
and
sub
inc
mov
adc
push
cmp
mov
sbb
sahf
test
jbe
ja
sbb
push
nop
mov
jg
jns
mov
add
sbbl
sub
push
insl
ja
adc
mov
and
cmp
mov
xchg
inc
hlt
iret
push
cmpsb
rorb
arpl
cs
mov
ss
sub
jnp
xor
xor
out
divb
dec
dec
inc
inc
xor
out
pop
lret
js
or
and
mov
jl
je
mov
adc
mov
push
lods
aad
mov
inc
xor
lods
pop
mov
loope
out
addr16
sbb
pusha
jecxz
ljmp
xor
pusha
push
out
scas
jo
icebp
mov
repnz
fsubl
loop
jae
cmovle
icebp
mov
cs
pop
cwtl
mov
lahf
dec
adc
sbb
adc
add
xor
aad
icebp
mov
mov
add
sti
shrl
xlat
fs
cmpsl
xor
popf
je
pusha
dec
mov
jae
mov
xchg
mov
shrl
xor
jecxz
pop
mov
ret
or
movsl
mov
sbb
bound
cmp
adc
dec
xor
pop
xor
addr16
rcrl
push
and
in
push
nop
cmp
mov
push
sub
bound
stc
fisubs
jg
dec
pop
aad
push
cmc
sbb
out
cmpsb
cmp
dec
push
outsl
cmp
jae
test
push
and
jnp
push
adcl
xor
xor
negb
jbe
std
pop
cmp
mov
mov
mov
int
inc
mov
xchg
pop
or
lds
and
inc
xchg
jl
mov
sbb
jno
les
cmp
lahf
mov
test
mov
push
leave
push
stos
hlt
cmpsl
mov
jb
sbb
scas
mov
call
mov
cwtl
sub
jo
stc
out
fnstsw
and
fwait
xor
xor
dec
clc
cmp
mov
pusha
push
jnp
xchg
addb
or
std
jl
or
out
lcall
adcb
ror
stc
pop
xchg
pop
jb
xor
test
outsb
cmp
mov
out
mov
jecxz
inc
lret
mov
icebp
cltd
cmpsl
movsb
push
data16
inc
xchg
jle
push
xchg
rorl
inc
cmpsl
adc
stos
pushf
insb
lods
jb
fs
nop
dec
insb
loope
call
cld
xor
xchg
and
xor
fsubs
les
cmpsl
xor
pop
sarb
push
neg
mov
cli
adc
ret
dec
or
bound
pop
mov
jb
es
ret
mov
je
mov
aam
pop
add
xchg
pop
es
out
add
mov
fiaddl
out
out
pushf
push
cmp
fs
jg,pt
mov
roll
lock
jmp
push
pop
decl
data16
xchg
loop
cmp
mov
popf
or
jecxz
cmp
sbb
inc
test
sub
mov
inc
mov
dec
mov
mov
push
pop
push
mov
add
mov
sub
leave
lcall
out
mov
out
fidivs
xor
and
inc
daa
inc
adc
pop
ficomps
sub
insl
cmpsb
out
in
call
mov
and
cld
shrb
sub
mov
dec
or
ds
and
mov
fidivrs
mov
cwtl
sarl
js
adc
mov
imulb
xchg
pop
das
jb
inc
clc
dec
inc
mov
icebp
push
push
push
inc
push
jb
arpl
cli
and
and
iret
dec
inc
test
fbstp
jne
lahf
lock
and
rol
hlt
jge
roll
bound
xchg
nop
add
popa
icebp
lods
mov
popf
mov
and
and
nop
clc
scas
push
add
jbe
jge
loop
sub
aad
fldl
jge
and
loop
les
lret
popa
jle
ss
testb
out
icebp
cltd
push
inc
inc
xchg
mov
add
daa
inc
cwtl
add
test
loop
gs
cmp
shlb
jno
and
aas
lahf
xor
jae
jbe
loop
cmp
push
popf
jle
call
jecxz
mov
dec
jne
pop
inc
inc
hlt
mov
lods
mov
cwtl
pop
dec
icebp
mov
jb
inc
aaa
lea
jp
sub
dec
fsubr
cmp
push
loop
xor
add
fisubs
into
stos
mov
xchg
jns
sbb
sbb
scas
imul
xor
mov
jns
add
jbe
outsl
cld
out
test
mov
mov
push
movsb
and
mov
test
inc
out
jnp
lret
sub
jl
add
pop
leave
out
sub
sbb
ss
push
mov
roll
into
hlt
and
inc
out
pop
jns
ja
inc
sub
sbb
xchg
inc
out
mov
pop
jp
cmpsb
andb
orb
mov
inc
xor
cmpsb
movsb
leave
out
inc
pushf
out
fmull
adc
pop
xor
lcall
push
inc
movsb
adcb
cld
pusha
add
or
and
ljmp
push
arpl
in
icebp
or
jge
lret
cmc
testl
vmovapd
out
into
mov
adc
insb
pop
ja
push
sub
hlt
int3
sbb
shlb
jno
cwtl
mov
cmp
add
ret
xor
xchg
movsl
mov
adc
sub
mov
frstor
addr16
xor
cmp
sub
das
cmp
and
bound
sbb
clc
pop
sarl
mov
mov
daa
lea
sahf
mov
jge
or
test
cmp
aaa
or
pushf
enter
movsl
sbb
or
pushf
ljmp
and
xor
push
out
enter
sbb
enter
mov
dec
xchg
push
inc
sbb
iret
int
and
loopne
repnz
add
aaa
push
push
cmp
adc
xchg
mov
inc
into
dec
ljmp
flds
xchg
inc
sbb
sti
dec
push
outsb
int
ds
mov
xor
jne
cwtl
xor
decl
in
icebp
idiv
cmc
inc
pop
jne
jle
aas
cmp
sbb
shr
in
and
pop
fmuls
jnp
mov
cmp
pop
and
adc
out
in
inc
movsl
xchg
adc
mov
seta
imul
add
aam
and
mov
lahf
rcr
pusha
jno
xchg
rorl
sub
popa
jecxz
in
rorb
cld
mov
add
mov
or
mov
mov
push
push
sub
arpl
lods
mov
ss
jae
repnz
push
int
jns
add
outsb
xor
inc
and
xchg
push
fimull
lcall
mov
jp
enter
stos
popa
pop
stos
mov
lahf
repnz
push
sarl
mul
shlb
or
cltd
pop
mov
push
fcmovnu
jp
sahf
mov
jbe
sbb
dec
mov
lds
inc
cmp
sub
or
test
ljmp
xor
and
fcmovbe
xchg
lcall
jb
cs
cmp
gs
dec
add
imul
imul
test
xor
mov
and
test
cmpb
mov
faddp
fcomp
jo
push
movsl
and
dec
decl
lret
mov
or
imul
jg
xor
test
or
stos
mov
rolb
add
add
cmpsb
cmp
ret
adc
adc
sub
pushf
mov
adc
xchg
mov
stc
jns
mov
icebp
sti
sbb
sbb
js
lcall
loopne
in
fisubrl
sub
and
jne,pt
dec
ss
dec
jae
mov
cmp
xchg
in
imul
arpl
push
sbb
mov
mov
leave
repz
ret
mov
jns
imul
cmp
push
sbb
mov
mov
leave
repz
ret
mov
jns
imul
cmp
push
sbb
mov
mov
leave
repz
ret
mov
jns
imul
cmp
rcrl
ret
leave
dec
stc
pop
inc
cmp
cmpl
cmp
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
movb
mov
stos
in
enter
inc
add
and
push
inc
push
arpl
jae
adc
out
divb
cmpsb
jecxz
repz
add
and
movb
and
jae
adc
out
divb
cmpsb
jecxz
repz
stos
jne
or
xor
push
jns
push
adc
cltd
xorl
dec
add
xor
popf
cltd
sbb
jbe
mov
test
ja
xor
mov
inc
xchg
sub
in
mov
jmp
in
cltd
and
mov
xchg
fcmovnu
and
dec
jecxz
sub
incb
in
data16
into
push
inc
imul
xchg
adc
adc
insb
mov
lret
fcom
jg
fcompl
stc
sub
movsl
pushf
add
cmp
insb
push
or
xchg
and
incl
inc
jecxz
or
push
push
jmp
cmp
jge
inc
mov
pop
sub
cmpsb
adc
push
fwait
xchg
arpl
jb
adc
out
divb
cmpsb
jecxz
repz
add
and
push
inc
push
push
arpl
sbb
lret
xchg
mov
inc
xor
dec
push
jne
and
and
jo
mov
mov
shll
and
fs
jbe
pop
and
dec
push
inc
and
lret
lcall
jecxz
repz
add
and
push
inc
push
push
arpl
jae
adc
out
divb
cmpsb
jecxz
repz
add
and
push
inc
push
push
arpl
jae
xor
jnp
fxtract
js
xor
clc
insl
cwtl
add
push
lahf
fbld
hlt
incl
inc
imul
push
sbb
insb
add
pusha
add
and
negb
aas
sti
lea
mov
scas
and
es
sub
shll
cmc
clc
push
sti
dec
adc
mov
aas
push
rcll
sbb
jb
daa
lcall
es
shrb
call
int
xchg
mov
cli
or
mov
push
cmpsl
insl
pop
pop
cmpsb
or
jnp
aad
xchg
movl
cld
push
testb
imul
add
and
cmp
add
mov
clc
push
test
inc
dec
and
enter
rorb
jnp
stc
and
dec
ficompl
and
lret
adc
dec
es
xchg
xchg
out
xor
push
gs
insl
lea
repnz
fiaddl
arpl
cltd
dec
xchg
pop
push
jns
daa
sub
inc
mov
bound
mov
fwait
lcall
jmp
test
loopne
ds
mov
imul
xor
sbb
mov
sbbb
sarb
sbb
mov
pop
adc
scas
arpl
lahf
in
push
lahf
mov
fisubrl
or
in
cmp
xor
lahf
dec
inc
loopne
adc
dec
pop
add
in
hlt
mov
sub
jmp
inc
mov
je
cli
or
jbe
inc
pop
push
mov
or
lds
fidivl
add
cmc
sbb
mov
lahf
inc
push
mov
push
fcomps
push
aaa
cld
in
cmc
mov
xor
mov
jo
sub
or
xor
sub
ret
test
dec
test
push
jnp
stc
scas
in
mov
pop
xchg
mov
and
and
icebp
xchg
bound
mov
sbb
cmp
repnz
int
mov
mov
xchg
and
mov
mov
push
test
adc
inc
cmp
push
lods
xchg
nop
test
hlt
xchg
sbb
shrl
clc
negl
fadd
test
clc
outsl
jp
lcall
aad
jno
sarl
inc
inc
sub
sbb
jge
or
outsb
cwtl
push
rcll
shll
dec
int3
jnp
fildl
jg
aad
xorb
idivb
jb
xor
nop
push
test
jns
fstpl
xor
inc
push
push
repz
mov
dec
mov
ret
jae
or
inc
push
dec
outsb
jmp
cld
lcall
dec
sbb
jb
mov
insb
inc
mov
xchg
out
bound
xchg
add
mov
ret
sub
push
add
ss
test
test
adc
add
jae
add
lahf
push
jae
scas
cmp
call
insl
shrb
xor
sub
cmp
push
ja
in
mov
cmpsb
and
movsb
jno
loope
push
pop
xlat
or
add
push
or
mov
lcall
imul
test
push
xlat
ja
mov
mov
imul
mov
adc
pusha
mull
mov
mov
inc
sub
dec
mov
mov
lret
out
pop
add
into
iret
sbb
movsl
sbb
mov
jl
lds
mov
out
xlat
repz
outsb
int3
es
xor
pop
jle
dec
dec
stos
jb
pop
inc
dec
inc
data16
aas
dec
xchg
pop
in
movsl
movsl
jns
fs
inc
imul
bound
jb
scas
mov
enter
addr16
xchg
movsb
sbb
in
pop
jp
sub
jge
jnp
mov
clc
aam
in
ljmp
jbe
jno,pt
xor
adcb
fcomp
xor
pop
push
ja
cmp
dec
mov
xorl
jnp
pushf
add
pop
pop
dec
fldt
pop
imul
push
imul
jb
popf
enter
xor
arpl
mov
mov
mov
push
xchg
xor
mov
pop
aam
js
shll
mov
sub
std
push
popa
repnz
sbb
enter
shl
xor
sbb
mov
aam
repz
test
aas
mov
mov
xchg
push
xor
in
cli
mov
add
xchg
sub
jno
jnp
xlat
adc
xchg
push
pop
add
shll
pop
mov
lods
mov
push
or
pushf
imul
jl
cltd
daa
ss
mov
pusha
into
data16
mov
out
stos
pop
mov
add
dec
pop
jmp
hlt
jmp
xor
lods
mov
lea
inc
pop
aas
mov
or
xchg
dec
cmp
add
xchg
pop
sub
in
aas
inc
jmp
clc
test
or
sub
sub
dec
jae
js
and
in
sub
push
fistpll
scas
sti
or
repz
mov
frstor
mov
enter
dec
jbe
or
or
cmp
pop
sti
push
xchg
sbb
dec
loopne
xchg
add
out
push
xchg
notb
add
in
mov
daa
push
lret
cmp
cmp
test
arpl
out
loopne
xchg
nop
or
sbb
jae
push
adcl
mov
js
mov
or
inc
cmc
imul
mov
sahf
cld
std
push
lea
test
loope
cld
adc
outsl
das
and
je
push
pop
mov
mov
inc
ljmp
sub
push
sub
and
icebp
add
dec
imul
xchg
lods
lea
and
xchg
scas
push
mov
inc
shl
push
jno
out
loope
push
pop
neg
lret
in
pop
push
loop
lret
cld
jl
jnp
mov
outsl
mov
cmp
scas
sub
arpl
mov
mov
dec
cmp
icebp
in
xchg
xchg
ss
popf
ret
inc
jbe
sub
push
dec
cwtl
insl
or
mov
das
popf
jp
icebp
or
inc
lods
xlat
push
out
ss
bound
adc
repnz
mov
xor
test
fstpl
sahf
mov
ret
imul
mov
mov
xchg
jmp
cmpsl
out
das
sti
inc
icebp
mov
mov
push
add
mov
lods
jb
cmpsl
push
and
cmp
loop
std
xor
pop
adc
mov
inc
xchg
xor
and
pusha
fcmovne
jbe
subl
aad
ret
lahf
sub
and
lret
icebp
pop
mov
jge
or
out
inc
ret
xchg
jp
push
cli
pushf
rcrb
pop
xor
or
inc
leave
stos
dec
jnp
dec
mov
int
dec
fnsave
ret
subb
sub
dec
pop
imul
call
pop
adc
frstpm(287
loopne
imul
xor
outsb
std
push
jo
int3
mov
fistps
xor
and
and
sub
rolb
iret
aad
subb
xchg
stos
aam
ficoms
xchg
negl
inc
and
mov
fstpt
xchg
push
mov
ret
cmpsl
out
imull
movsl
cmp
in
gs
stos
mov
add
mov
fprem
sub
clc
jmp
pusha
inc
shll
subb
js
adc
ljmp
pop
xor
dec
sbb
add
mov
pop
imul
pusha
fnstenv
dec
aaa
and
sbb
sub
iret
daa
test
movsb
cmp
adc
lock
popa
imul
mov
movsl
bound
add
enter
stos
add
inc
fcom
adc
daa
movsl
int3
fsubs
or
push
mov
and
inc
mov
xor
and
sahf
outsl
or
es
sub
ficoms
add
xchg
fcmovbe
fcmovnu
xchg
int
sbb
inc
mov
pop
push
mov
rcrb
imul
mov
add
push
xchg
xchg
shll
scas
aas
fstpt
sub
out
shrb
mov
cld
dec
and
sahf
xchg
rclb
ds
mov
mov
jo
hlt
stc
in
mov
push
insb
insb
cmp
mov
cmp
mov
push
mov
push
jae
das
sub
mov
jp
or
int
outsb
inc
jb
movsl
hlt
xor
sbb
push
pop
hlt
outsb
imul
sub
dec
nop
dec
enter
fs
mov
sti
mov
add
sbb
pop
neg
int
jo
pop
dec
mov
aam
lods
dec
stc
mov
je
or
jbe
pop
aas
negl
fwait
subl
outsl
mov
pusha
pushf
test
sar
dec
pop
add
sbb
addr16
cwtl
cmpsb
ja
call
mov
addr16
push
mov
repz
sub
or
jp
lock
sub
fcomps
fcoms
sbbl
test
mov
push
or
jl
fists
dec
jge
frstor
call
inc
add
add
jmp
mov
mov
dec
inc
loop
out
fdivs
bound
cltd
sub
mov
in
fisubl
push
sahf
xchg
enter
push
inc
popa
mov
in
negl
lds
jg
or
sbb
into
and
or
fxch
ljmp
leave
pop
xlat
and
das
popa
add
inc
orb
and
pushf
push
or
into
adc
push
sbb
xchg
rolb
data16
jge
push
push
cmp
int
or
push
push
loope
sub
ret
fdivrl
and
mov
push
test
adc
cmp
push
push
sbb
inc
ljmp
pop
ret
out
fnsetpm(287
jmp
mov
in
outsb
or
jl
insb
cmpsb
or
ljmp
add
xor
mov
or
pop
das
scas
jmp
or
cmpl
scas
mov
andb
mov
adc
jae
ss
and
out
inc
or
mov
xchg
sub
xchg
notb
xor
or
gs
bound
pop
out
in
iret
dec
insb
adc
dec
dec
sub
pusha
popf
cmp
jb
mov
push
jbe
sbb
repnz
add
dec
aaa
mov
enter
pop
and
xchg
jno
incl
imul
inc
mov
test
fisubrs
jg
addr16
xchg
addb
and
in
and
ja
call
push
mov
movups
jb
shr
out
cld
mov
ret
push
xchg
mov
sub
out
lock
inc
rorb
imul
xor
mov
scas
jmp
roll
xchg
mov
in
cmpsl
and
fstpt
adc
dec
daa
btr
fmul
inc
test
test
mov
inc
js
les
bound
dec
sub
ss
jg
mov
out
pop
mov
mov
jl
push
pusha
xchg
sub
pop
add
mov
dec
out
push
push
icebp
or
push
mov
fsts
orl
sbb
push
aam
bound
lods
or
in
cld
pop
pusha
mov
into
jecxz
add
jns
dec
cmpb
adc
add
dec
or
mov
outsb
sbb
lods
or
xchg
cld
mov
daa
mov
mov
sbb
jae
bswap
in
cmp
fistpl
testl
mov
or
fcoms
adc
jmp
scas
aad
add
or
adc
mov
ret
sar
and
in
cmp
jp
mov
loope
pop
cmp
fimuls
out
cli
shll
adc
andb
mov
xchg
insb
cmc
mov
and
clc
xchg
xchg
sbb
mul
fwait
scas
mov
jp
mull
repnz
pop
inc
push
nop
mov
lods
jp
mov
fcmovb
mov
pop
into
nop
sahf
push
pop
jle
mov
fisubrl
scas
mov
test
inc
test
xchg
int
into
jge
sbb
xchg
fiadds
cld
enter
and
add
movsl
push
std
mov
inc
imul
cs
cmpsl
fidivrs
sbb
clc
mov
pop
ja
sub
test
pop
inc
imul
jge
sbb
push
popa
test
int
jg
push
btr
sbb
or
mov
and
imul
mov
xorl
lret
sti
mov
repz
dec
fs
adc
scas
mov
cmp
add
sub
test
repnz
xchg
push
movl
inc
test
dec
pop
xchg
add
stc
test
add
je
sbb
std
scas
add
fimuls
sub
cmpsl
jle
pop
mov
push
or
stc
and
mov
adc
imul
sub
sarl
mov
outsl
mov
mov
cmp
inc
mov
fcoml
outsb
outsl
and
and
out
pop
push
cmp
call
movsl
inc
stos
das
sub
imul
mov
adc
pop
aad
ds
push
insl
mov
repz
mov
aas
sub
lods
bound
les
xchg
xchg
inc
xor
xchg
push
inc
pop
mov
testl
adc
repz
dec
icebp
jle
add
aad
stos
int
sbb
ljmp
outsb
addb
cmp
add
insb
pop
lods
pop
mov
push
jge
stc
sub
aaa
or
test
xchg
inc
jmp
jb
jb
addr16
jg
or
stos
xor
roll
cmc
dec
and
xor
daa
std
push
popf
jae
xchg
subb
lods
add
les
loopne
adc
xchg
push
data16
cmp
mov
clc
ss
adc
cld
test
imull
cld
shrb
mov
push
inc
aaa
mov
cs
inc
popf
daa
adc
add
faddl
repnz
xor
adc
int3
mov
inc
notb
pusha
leave
mov
pop
stos
sub
mov
lret
xchg
sub
jb
mov
addr16
sbb
xor
or
jp
xchg
add
push
popf
jecxz
pushf
mov
popa
sbb
mov
mov
jg
pop
or
lods
mov
mov
and
ljmp
enter
mov
mov
data16
les
jbe
adc
enter
sub
insb
loop
jle
das
outsb
out
cmp
xlat
and
jp
clc
rolb
jnp
iret
dec
pop
xchg
nop
stos
xchg
sub
andb
in
sub
es
loopew
dec
dec
fisubs
cmc
dec
dec
sahf
imul
scas
and
aas
cmc
lret
fdivs
xor
jmp
dec
fcompl
mov
sbb
ljmp
cli
arpl
mov
movsb
bnd
jne
pop
or
jno
imull
lods
sub
mov
mov
pusha
fmul
imul
fidivrs
lret
pop
mov
and
iret
sbb
and
dec
out
inc
mov
sub
fiadds
int3
pop
xchg
add
xor
sbb
and
shll
daa
push
or
popa
insl
add
movsl
stos
dec
pushf
cld
push
pop
movsl
pushf
or
cmc
jge
sub
push
adc
dec
lret
jmp
in
fcomip
jecxz
lods
test
mov
mov
int
xor
bound
pop
sbb
cmpsb
inc
adc
xchg
outsb
cmp
popf
call
ficompl
and
and
and
idivl
inc
into
mov
or
mov
pop
jne
inc
rolb
xor
adc
add
push
fdivr
mov
xchg
sbb
lock
adc
out
push
pop
fcoml
in
xor
xor
loope
inc
stos
jmp
cmp
cmc
fists
ss
push
fsubl
inc
cmp
nop
cltd
pop
jbe
or
xchg
jmp
popf
cmp
arpl
mov
out
in
sbb
sbb
in
loope
iret
ljmp
popf
leave
mov
adc
mov
inc
mov
shll
cmp
jno
inc
or
and
or
fildl
test
and
sbb
inc
je
aas
aad
lahf
out
mov
in
inc
cld
outsl
adc
push
aaa
mov
mov
inc
xor
gs
lods
and
jo
jb
push
fidivl
mov
movsl
mov
lahf
and
int3
fiadds
add
pop
push
cmpsb
adc
cmc
jecxz
mov
ss
sbb
shll
je
pop
pop
xchg
xchg
dec
arpl
inc
stos
out
cli
push
arpl
ja
adc
movsl
addr16
or
and
inc
out
lds
insb
pop
pushf
dec
jns
mov
adc
xchg
js
mov
push
sbb
mov
mov
imul
mov
xchg
xor
inc
push
xorl
out
notb
pop
inc
cltd
jbe
popf
jle
repz
leave
ss
pop
mov
ror
pop
push
xchg
or
and
inc
and
nop
orb
push
xor
xor
xor
push
jge
js
push
aas
arpl
daa
mov
cmp
out
inc
push
mov
xchg
nop
scas
or
cmovnp
cmp
rcrl
repnz
sbb
add
gs
push
pop
sti
mov
imul
cld
jmp
insl
ljmp
or
addr16
cmpb
push
and
dec
sub
mov
mov
data16
imul
dec
sbb
call
int3
or
hlt
dec
aaa
inc
sbb
mov
adc
mov
mov
in
stos
xchg
cmp
mov
jge
pop
sti
push
mov
lds
mov
sbb
pop
pop
mov
stos
call
in
sub
add
jg
mov
test
sbb
mov
adc
sahf
add
mov
pop
xor
stos
jle
dec
stos
adc
xchg
mov
jmp
jecxz
jmp
mov
adc
cmp
call
inc
fildll
mov
adc
lea
das
gs
subl
test
sub
int3
adc
pop
in
add
scas
mov
jp
pop
out
cmpsb
lods
adc
jnp
inc
pop
shll
and
mov
mov
lret
lahf
xchg
xchg
repz
pop
aam
insb
jmp
mov
cmp
aad
fsubrl
pop
mov
xchg
les
cmp
and
dec
dec
sahf
pop
stos
aam
in
test
xor
adc
inc
cmpsb
cmp
mov
dec
outsl
mov
xor
outsb
mov
dec
bsr
rorl
stos
in
jne
adc
mov
insl
je
shrl
or
stos
lahf
mov
nop
insl
pop
pop
xlat
adc
xchg
mov
pop
jmp
int3
ljmp
leave
test
inc
adc
sbb
insb
js
sbb
xor
adc
jo
cmpsl
cmp
fmuls
lret
les
jb
adc
add
roll
xchg
xor
adc
aaa
push
stos
push
sti
push
out
mov
add
cmp
cmpsl
xchg
pop
dec
push
fcom
jae
cmp
inc
aam
mov
xor
lea
mov
cld
inc
roll
jbe
push
inc
hlt
lods
sti
sti
pop
jmp
adc
pusha
sub
jg
cmc
and
enter
ljmp
arpl
mov
ret
inc
lret
xor
sub
lret
mov
pop
or
mov
mov
es
adc
test
movsl
sbb
js
shlb
and
orb
das
add
and
sbb
add
mov
mov
sub
push
cltd
dec
test
pusha
dec
xor
jle
dec
ret
popa
add
jno
lea
jb
sbb
dec
stos
mov
mov
cwtl
and
jnp
and
pop
mov
addr16
es
hlt
sbb
pop
addb
add
or
stos
inc
cld
mov
sti
inc
mov
push
xchg
inc
jmp
orb
cwtl
ds
insl
xlat
pop
add
xor
lods
cmp
dec
sub
push
push
popa
call
sbb
cmp
pop
push
out
push
imul
dec
inc
fadds
js
add
hlt
sbb
mov
mov
push
xchg
lods
inc
lea
jo
hlt
sub
pminsw
insl
pop
aam
adc
fnstenv
mov
cmp
andl
cmpl
dec
mov
addr16
rcr
adc
scas
push
sahf
addr16
push
inc
push
mov
cmpsb
fsubrl
jae
nop
enter
pop
pop
addr16
popf
and
popf
mov
xchg
pop
sbb
mov
ret
leave
sub
ja
adc
xor
sub
aaa
dec
cmp
fadds
into
ret
rorb
mov
mov
push
pusha
xchg
inc
and
mov
pop
decl
xchg
out
divb
cmpsb
jecxz
repz
add
and
push
inc
push
push
arpl
jae
adc
out
divb
cmpsb
jecxz
repz
add
and
push
inc
push
push
arpl
jae
adcl
and
mov
ret
xchg
push
cmpsb
jecxz
repz
adcl
and
push
inc
push
push
arpl
jae
adc
out
divb
cmpsb
jecxz
repz
add
int3
and
jbe
data16
push
pushf
inc
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
popf
add
lock
jmp
push
add
sahf
jo
pusha
mov
rolb
xor
and
fadds
loopne
nop
inc
adcb
mov
xchg
pop
lods
pusha
mov
jmp
aad
in
cmc
or
es
xorb
pushf
outsl
pop
inc
push
test
push
les
xor
push
xchg
xchg
inc
loopne
mov
xchg
push
sbb
lods
mov
mov
push
out
pop
lret
sbb
adc
enter
rclb
fwait
lcall
pop
mov
xchg
rclb
mov
lock
lds
test
cwtl
adc
dec
out
lea
ret
xor
xchg
add
mov
xchg
push
jg
mov
mov
jne
pop
lahf
mov
rolb
pop
and
sarl
lret
add
call
ret
arpl
scas
add
pusha
mov
js
cli
shr
push
inc
in
or
xor
mov
fists
or
lahf
jecxz
shlb
inc
les
gs
mov
cmpsl
jle
jo
push
cmp
std
inc
mov
dec
mov
loopne
cmp
movb
and
add
jns
outsb
mov
rolb
push
mov
sub
pop
loope
fmull
inc
push
testl
mov
dec
mov
push
mov
mov
xchg
jo
pusha
mov
lds
aad
in
cmc
rolb
loopne
nop
inc
adcb
mov
xchg
jo
pusha
mov
lds
aad
in
cmc
rolb
mov
jp
mov
in
sbb
cmp
adc
cmp
cmp
and
mov
fcmovb
push
cli
iret
push
inc
mov
and
xchg
pop
xchg
sub
push
test
push
or
push
ret
fnstcw
movsl
cmovns
jp
pusha
stos
arpl
mov
aam
js
int3
jecxz
jae
icebp
bound
stos
fldt
fnstcw
and
xchg
fistpll
push
push
outsl
dec
add
loop
xchg
es
sub
or
xchg
pop
stc
mov
add
mov
fbld
sub
roll
mov
sbb
pop
sub
sbb
dec
jl
lods
push
jno
and
inc
test
sub
test
in
sub
shr
adc
fwait
popf
xchg
jmp
mov
imul
jbe
push
sbb
sbb
sarl
inc
push
lret
or
mov
into
ljmp
adcb
jle
pusha
les
sbb
jne
xchg
or
pop
mov
leave
xor
sbb
mov
loope
pop
out
fdiv
gs
push
mov
aaa
cmpsb
out
scas
xor
sbb
test
sti
push
shlb
pop
aad
pop
lahf
fs
je
stos
and
outsl
ja
stos
sub
fcmovnb
dec
and
inc
mov
adc
push
repnz
and
bound
dec
aas
cld
cmp
or
cmp
add
cwtl
dec
fwait
arpl
mov
dec
xchg
rcpps
inc
push
imul
int
cmp
jne
adc
std
sbb
fbstp
out
sbb
mov
ja
xor
cwtl
mov
cmp
and
rcl
in
pushf
ja
call
dec
inc
sub
sub
insb
mov
mov
aad
mov
mov
insb
test
add
jnp
lahf
ret
sub
mov
aas
xlat
sbbl
mov
or
xchg
jmp
pushf
gs
push
pop
push
orb
ljmp
push
and
sbb
es
mov
aad
ret
scas
daa
test
adc
sahf
fwait
stos
enter
pop
sarb
loope
ffreep
sbb
pop
add
mov
jnp
jg
shufps
sbb
clc
mov
stos
cmp
mov
jle
sub
enter
mov
pop
inc
dec
adc
push
lret
pop
leave
rep
xchg
adc
xchg
mov
and
xor
mov
dec
hlt
push
lods
lods
call
fwait
push
fiadds
lods
pop
les
pushf
lods
dec
out
sahf
scas
and
inc
pop
xchg
sbb
xor
jnp
rol
pop
xchg
cltd
es
hlt
jns
mov
jne
out
addr16
add
pop
in
push
cmp
xlat
lea
sub
add
sub
jb
or
popf
mov
fsubr
lods
sahf
fnsave
dec
cmpsb
cmp
cmpsb
and
add
cltd
cmp
outsl
xor
arpl
jle
bound
les
xor
cltd
pusha
sbb
cmp
loopne
faddl
rorb
cmp
shll
nop
adc
outsl
sbb
sub
mov
sub
xchg
xor
mov
push
addr16
fidivs
in
into
mov
stc
sub
push
enter
mov
sarl
jnp
sahf
int3
xor
popl
frstor
call
mov
xchg
adc
orl
lea
inc
rolb
jecxz
aaa
push
mov
mov
leave
xor
mov
lods
adc
pop
lea
sub
out
movb
adc
sbb
fnstcw
mov
cltd
out
lock
sbb
sub
out
mov
aam
shll
mov
imul
test
enter
lret
call
push
shl
pop
push
in
push
inc
fucomip
add
mov
clc
cmpsl
je
in
jb
addr16
cmp
std
mov
push
mov
add
sbb
mov
or
ds
sbb
std
mov
loop
testl
insb
stos
sti
pop
sbb
fwait
xchg
push
mov
iret
fs
sarl
enter
inc
rclb
pop
push
pusha
mov
or
jae
std
iret
mov
int3
dec
ret
cs
imul
pop
mov
stc
aaa
ret
dec
inc
test
mov
and
fwait
xlat
mov
inc
add
fnstsw
or
pop
ljmp
jo
movsl
xchg
imul
sbb
bound
and
push
dec
jmp
int3
jp
outsb
das
shlb
popf
add
pop
or
sub
adc
lods
and
push
test
cmpsb
arpl
fs
scas
push
nop
xor
xchg
jno
imul
mov
xlat
loope
pop
jmp
sahf
mov
sahf
dec
dec
sub
dec
push
sbb
mov
jp
mov
mov
dec
cld
dec
add
lods
repnz
lret
sarb
leave
fcoml
aam
ss
mov
add
and
enter
sbb
mov
test
arpl
jnp
scas
mov
dec
rcll
jnp
in
push
sti
and
mov
add
lock
lods
xchg
cld
xor
add
and
lret
cmc
in
or
incb
imul
mov
xchg
ret
insb
popf
cwtl
lea
lods
mov
jbe
pop
pop
js
or
subl
inc
jle
jb
and
lds
lretw
pop
adc
xor
ds
cmp
scas
dec
xchg
dec
cli
lods
ret
jnp
jne
and
xchg
sti
stos
les
ficoms
pop
dec
add
xchg
insb
add
or
loopne
nop
mov
mov
aas
into
dec
or
pmaxsw
sbb
test
push
cmp
dec
jns
cmp
mov
pop
dec
sbb
outsl
out
inc
jb
push
adc
dec
jns
sbb
arpl
ljmp
mov
cs
mov
inc
add
daa
mov
or
pop
xor
mov
daa
xchg
inc
or
cmc
addr16
lods
add
loop
repnz
jne
fsubl
adc
fnsave
leave
mov
or
mov
test
cmpsl
pop
rorl
xchg
push
imul
not
xchg
mov
fldl
pop
pop
mov
cmpsb
dec
add
cmc
mov
movsb
in
push
jo
add
sbb
insl
loope
stc
mov
adc
mov
adc
dec
mov
xchg
jo
sti
in
incl
sub
inc
in
in
int
mov
pop
dec
in
jg
sets
bound
in
test
nop
scas
idivb
scas
and
pushf
pop
adc
mov
jle
mov
add
mov
mov
dec
jae
ret
data16
imul
sub
nop
cmp
sahf
dec
push
xchg
sbb
jne
rolb
or
and
and
stos
rcll
xor
fdivr
pop
xlat
mov
pop
arpl
mov
test
push
aam
loope
data16
dec
jmp
out
stos
sbb
dec
lcall
mov
outsl
xor
and
out
cmp
add
lea
out
push
hlt
mov
xor
push
mov
decl
xchg
je
or
mov
or
lods
out
aad
xor
movsl
xchg
lahf
add
jmp
xor
pop
sti
push
jbe
dec
inc
pop
inc
push
fidivrl
xor
mov
cmc
sarb
dec
out
insl
add
cmp
lcall
out
inc
mulb
adc
in
pop
sub
pusha
add
cwtl
adc
sub
adc
ret
mov
jecxz
adc
jo
pop
jge
mov
push
sbb
andl
and
sub
out
jns
pop
aaa
add
jecxz
lret
out
cmp
jbe
rcrl
adc
lret
notb
int3
lods
in
jp
ja
xor
jle
insb
lcall
xchg
in
push
cmpsl
test
mov
stos
gs
dec
jnp
cld
sbb
ljmp
pop
adc
add
lret
enter
cmp
push
pop
aas
or
outsl
mov
int3
test
mov
jge
loope
and
movsl
scas
cli
sub
sbb
sbb
sbb
test
push
and
and
fadd
inc
ljmp
imul
ja
pop
insb
push
mov
push
jecxz
in
mov
sub
jp
sbb
mov
xchg
mov
out
push
pause
loopne
fsubrl
in
mov
cmp
rcl
repz
ds
adc
mov
inc
sub
cmp
les
adc
adc
sbb
lea
add
sbb
adc
dec
test
inc
xchg
inc
inc
cmc
inc
insb
fwait
lock
xor
test
pop
and
mov
sahf
shrl
push
mov
sbb
gs
bound
daa
jae
pop
into
or
mov
cld
pusha
mov
add
gs
inc
xor
int
mov
ret
int
stos
dec
pop
loop
xchg
or
daa
ja
inc
mov
adcl
sbb
in
cmp
testl
popf
lods
clc
into
push
frndint
dec
lds
xchg
cmp
cmpsl
imul
out
and
popa
daa
inc
insl
mov
add
lretw
jecxz
call
mov
jb
xor
mov
sub
adc
insb
sbb
dec
xor
js
mov
pop
ss
clc
bound
mov
test
push
and
std
cli
mov
xor
fisttpl
push
aam
fldl
insl
mov
movsl
int
incl
stos
or
xchg
jmp
arpl
repz
inc
add
aam
divl
xor
stos
arpl
fsts
mov
jns
ss
test
mov
adc
lods
sub
popa
push
rorb
fbld
lret
push
idivb
lret
jno
loope
and
xor
aaa
jno
or
xlat
lds
scas
lods
cmc
and
jp
test
jb
fsubr
lods
push
sbb
push
cmp
sarb
outsb
lods
aas
aam
cs
dec
stc
mov
dec
outsb
clc
leave
cmp
jp
jne
xchg
ret
jno
imul
lret
mov
std
lret
addb
outsl
lcall
inc
add
fmulp
xchg
lcall
pop
pop
clc
sbb
rorl
aam
into
mov
add
cli
addr16
xchg
lret
in
lods
popa
inc
inc
adc
and
and
mov
data16
iret
and
pop
enter
push
push
pop
jg
fistl
arpl
or
gs
push
inc
mov
adc
and
pop
cmp
cs
inc
movsl
add
pop
cmp
inc
or
jle
div
mov
insb
insl
imul
xlat
mov
and
or
inc
mov
scas
mov
and
loopne
in
lret
adc
daa
lea
mov
js
out
xchg
jbe
dec
push
adc
lahf
xchg
mov
mov
xor
loope
aas
pop
sti
leave
jmp
mov
sti
cmp
lock
cwtl
add
aas
insb
das
sub
pop
rcl
test
outsb
jno
inc
dec
insb
sub
adc
int
push
aam
insl
bound
sbb
mov
imul
or
push
mov
adc
adcb
push
leave
cwtl
addr16
mov
fs
mov
mov
adc
ss
push
clc
xchg
cmpsb
jmp
sbb
ljmp
les
push
outsb
sbb
add
jae
inc
pop
xchg
aad
mov
movsl
fs
les
in
push
push
and
mov
adc
iret
jp
xor
lahf
rcr
test
inc
mov
std
jbe
dec
scas
xor
stos
adc
xchg
mov
or
or
inc
cwtl
push
pushf
ja
jle
and
push
mov
icebp
imul
lea
xor
push
dec
jmp
dec
in
inc
cmpl
xchg
pop
xchg
repz
mov
sar
lea
sbbl
test
xor
pop
push
push
cmpsb
add
xchg
push
jl
hlt
push
dec
scas
add
add
or
outsb
icebp
bound
test
pop
scas
inc
mov
or
mov
jno
xchg
inc
jl
loope
jecxz
loope
inc
pushf
cli
daa
into
es
or
inc
repz
arpl
rcrl
and
push
xchg
or
ljmp
add
ret
xlat
test
shlb
add
pop
sti
xor
mov
mov
mov
test
gs
lahf
mov
xchg
add
stc
or
addb
fistpll
lret
stos
xlat
and
aam
scas
mul
push
xchg
notrack
out
push
fisttpl
fstpt
jle
jo
scas
cmp
jp
les
dec
add
fisubl
imul
cld
mov
push
loop
arpl
sahf
dec
ljmp
cmp
mov
xchg
push
jl
sub
lahf
cwtl
imul
rol
xchg
ss
daa
lods
fs
repnz
dec
mov
xor
push
adc
int3
mov
ljmp
ljmp
std
pop
pushl
add
movsb
mov
adc
push
cmp
mov
shll
cmpb
push
scas
mov
pop
sub
mov
leave
in
shrb
fildl
adc
pop
scas
push
adc
mov
dec
scas
pop
std
outsb
mov
xor
cwtl
clc
aam
data16
push
arpl
push
call
jg
frstor
repnz
xchg
nop
call
popf
out
cltd
jno
mov
scas
mov
ficomps
mov
icebp
or
xor
push
add
dec
adc
es
mov
enter
jo
imul
jae
mov
lret
imul
jg
dec
inc
jle
dec
scas
das
es
mov
push
push
push
fldl
rcrl
sti
pop
mov
popl
inc
sbb
dec
leave
pop
mov
mov
sarl
mov
sbb
inc
pop
cmp
push
pop
jnp
cld
mov
ljmp
pop
jp
je
popa
bound
adc
add
jns
jmp
and
pop
jl
cwtl
outsb
jge
rorb
sbb
jbe
mov
jns
ret
cmp
lock
data16
mov
pop
cmc
jns
movsl
lock
jns
lahf
xor
mov
insl
mov
push
dec
pushl
in
xchg
lock
push
shll
dec
test
sub
bound
dec
xchg
jne
cmpsb
sub
sub
shll
add
sahf
jmp
imul
xor
sahf
sbb
pop
jmp
mov
sub
pop
sub
ret
xlat
lea
cli
or
mov
ficoms
hlt
sbb
fildll
iret
lock
jge
fildll
sbb
xorl
dec
clc
dec
cmpsl
or
sahf
dec
jae
fcomps
in
dec
pop
out
xchg
mov
cmp
xor
scas
add
add
das
mov
andl
shlb
test
test
xor
add
lds
lea
jno
jbe
incl
cli
and
or
mov
xor
cmpsl
sub
cli
or
mov
int
cmc
adc
loopne
cmp
inc
loop
pop
xlat
pop
inc
jae
outsb
ljmp
loope
mov
test
mov
and
insl
imull
mov
xor
sbb
xchg
imul
ja
inc
sbb
shll
hlt
mov
ja
add
mov
mov
jge
fiaddl
sub
leave
scas
out
mov
popa
xor
push
lds
adc
subb
cmpsb
push
fwait
subb
inc
inc
sbb
icebp
and
add
mov
jp
lret
mov
aaa
shl
test
iret
sbb
and
or
les
enter
xor
xchg
push
xor
pop
jg
data16
test
xchg
cmp
popf
shrb
andps
shrl
add
mov
lock
icebp
adc
icebp
xchg
jmp
test
adc
fdivrl
lds
add
dec
mov
push
jne
or
or
sahf
nop
outsb
mov
jne
in
xchg
loopne,pt
and
pop
filds
jmp
call
test
lret
mov
sti
dec
mov
or
aaa
jle
inc
cmp
jl
xchg
mov
jne
enter
fwait
fwait
shr
inc
mov
push
mov
xchg
mov
dec
cs
adc
pop
cmp
cmp
movsb
cld
mov
jle
cmp
xor
pop
add
loopne
sub
loope
test
xchg
mov
xor
leave
in
aad
push
js
js
mov
aaa
mov
pop
dec
ret
jmp
mov
jne
outsl
stc
cltd
adc
insb
push
push
push
pop
arpl
push
jae
pushf
mov
dec
jge
test
mov
dec
out
dec
push
adc
push
mov
or
mov
daa
push
popa
loopne
lds
rcll
xchg
loopne
mov
jle
jb
jns
sub
clc
clc
out
sub
pop
jg
jle
xor
cmp
imul
int
xor
cmp
dec
shlb
push
xorl
and
notl
or
divb
and
xor
fdivp
jno
xchg
cmp
sub
neg
mov
adc
or
fcmovnu
push
sub
mov
pop
ds
mov
xchg
lds
dec
adc
inc
and
adc
inc
gs
fdivrp
cwtl
bound
dec
and
mov
andl
jl
lods
push
jne
dec
cwtl
out
mov
push
inc
jmp
cltd
push
pop
dec
es
imul
int
push
movsb
in
ljmp
cmp
sub
mov
shll
out
das
stos
mov
push
xlat
inc
cmp
divb
int3
or
mov
pop
lret
mov
fbstp
mov
call
das
loope
orb
sub
inc
lock
sub
in
mov
lods
lds
add
or
sub
and
xchg
ljmp
out
xchg
in
sub
ret
fwait
xchg
clc
mov
cmc
cmp
inc
arpl
test
int3
push
or
mov
iret
xchg
popf
inc
or
mov
dec
pop
repnz
add
daa
xor
lret
cmc
outsl
addr16
pop
outsb
sbb
pop
pop
mov
aam
repnz
mov
xchg
and
in
test
ja
or
bound
and
push
fsubl
test
jmp
scas
insb
mov
inc
dec
stos
inc
sbb
and
sub
and
mov
push
push
mov
adc
pop
lcall
jo
xor
aas
into
pusha
stc
imul
jnp
mov
mov
jg
loopne
cmpsl
dec
add
stc
push
div
xlat
xchg
leave
xlat
dec
call
sarl
hlt
add
and
fmuls
push
popf
pop
orl
leave
jg
mulb
push
aad
pop
or
out
dec
test
adc
mov
mov
bound
jne
leave
mov
xor
lret
cltd
ror
test
outsl
clc
xor
cmp
outsl
or
test
mov
iret
nop
sub
mov
xchg
sbb
push
cmpsl
jno
cmp
jb
push
xor
out
xchg
adc
mov
scas
insb
sbbl
inc
cmpb
mov
dec
das
arpl
je
iret
aaa
fs
and
cmp
es
lods
loope
mov
xor
and
push
push
inc
sub
adc
inc
jno
and
jno
mov
adcl
popa
push
sbb
push
insl
push
jmp
dec
add
cltd
adc
push
stos
imul
mov
dec
push
sbb
add
sbb
mov
cmpsl
shr
push
scas
push
mov
inc
rorb
lea
xor
cmp
aas
mov
out
movsl
pusha
test
in
shlb
push
dec
nop
call
dec
imul
inc
cmp
push
lock
cmp
fstl
sbb
lock
dec
enter
xlat
scas
shrl
cld
xchg
in
inc
in
nop
sub
cmpsl
lock
mov
clc
xor
les
mov
call
xchg
pop
test
cmc
pop
dec
je
cli
dec
and
scas
sahf
adc
cmp
in
cwtl
xchg
xor
add
dec
mov
mov
and
sbb
sbb
xorl
adc
ja
inc
mov
lahf
ret
lods
movl
fs
xchg
or
ja
inc
pop
nop
adc
nop
inc
adcb
mov
xchg
jo
pusha
mov
lds
aad
in
cmc
rolb
loopne
nop
inc
adcb
mov
xchg
jo
pusha
mov
lds
aad
in
cmc
rolb
ret
sbb
cmp
test
mov
mov
xchg
jns
fs
xor
adc
enter
js
enter
nop
push
mov
and
fisubl
mov
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
