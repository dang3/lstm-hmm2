push
mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sub
cmp
or
sbb
mov
jg
dec
lods
mov
popf
in
cld
push
iret
sub
cmp
or
sbb
insb
jg
outsl
dec
pop
pop
dec
lods
mov
pushf
sub
cld
out
int3
popf
fmul
sub
cmp
or
sbb
insb
jg
outsl
dec
pop
pop
dec
lods
pop
lahf
scas
loopne
pushf
in
mov
mov
jae
pop
jo
jo
pop
movsl
mov
movsb
dec
int
jae
add
cmp
or
push
jns
lock
cld
jl
mov
mov
push
jae
arpl
adc
push
sahf
jl
xor
or
imul
pop
add
mov
jb
incb
inc
sub
cmp
rcrw
dec
jle
outsl
leave
rcrb
fs
jb
neg
adc
jmp
shr
lcall
iret
dec
sbb
inc
inc
ljmp
out
add
pushf
and
inc
shrl
xchg
imulb
sub
lret
jae
mov
mov
lret
pop
into
loopne
cmp
or
sbb
insb
jg
outsl
dec
pop
pop
dec
lods
mov
pushf
in
cld
out
int3
cmpsb
insl
push
dec
das
gs
data16
adc
outsl
sub
pop
pop
lods
fcmovu
fisttpl
cld
pushf
scas
fstpl
sub
insb
aaa
cmp
xor
push
dec
leave
in
fimull
pushf
xchg
test
jbe
jl
ja
push
jg
outsl
dec
pop
pop
dec
lods
mov
pushf
in
cld
out
int3
iret
sub
cmp
or
sbb
insb
jg
outsl
dec
pop
pop
dec
lods
mov
pushf
in
cld
out
int3
iret
sub
sbb
lods
xor
mov
test
shll
ret
je
mov
or
loop
sub
call
dec
orb
fs
test
sbb
push
std
aad
js
imul
in
cmp
sub
cwtl
ljmp
aam
pop
mov
pop
xchg
andl
cld
fildl
add
pop
ficoms
inc
negl
jbe
xchg
cli
push
in
or
inc
mov
hlt
push
out
adc
test
xchg
fcmovnu
add
jne
mov
out
lea
or
xlat
fwait
sbb
test
in
cmovno
jno
ljmp
add
mov
clc
xor
bound
dec
out
and
dec
sbb
hlt
cmpsb
test
push
mov
stos
jo
xchg
mov
and
pop
pop
cmp
xlat
xchg
enter
js
arpl
mov
dec
xor
xor
rorb
test
pusha
mov
jmp
in
cmp
dec
add
lods
je
lret
pop
ficoml
aad
cmp
subb
popa
pop
out
aad
in
out
push
and
xchg
mov
aas
test
and
mov
adc
xchg
sub
jo
fisubrs
bnd
jecxz
jl
lea
or
ja
sub
dec
mov
stos
jbe
inc
and
jne
sbb
sub
data16
cltd
adc
leave
loopne
pop
fidivrl
daa
jmp
ret
rolb
lcall
cmpsb
xchg
lea
into
aad
stc
cmpsl
mov
dec
xor
out
cmp
dec
jg
push
lret
fcoml
in
xchg
mov
inc
cmp
push
cltd
sbb
sbb
lret
adc
xlat
inc
push
movsb
sub
mov
inc
jbe
cmp
mov
mov
into
fists
mov
clc
push
outsl
push
or
sbb
outsl
fwait
aad
insl
pop
cmp
test
stos
movsl
shlb
test
dec
and
ja
push
sbb
or
subb
or
clc
inc
pushf
sub
mov
out
pop
dec
mov
inc
je
shlb
and
sti
dec
shlb
imul
mov
dec
mov
mov
dec
rclb
outsl
sbb
stc
test
cwtl
dec
cld
out
scas
std
inc
test
popf
xlat
xchg
jge
jge
jbe
and
sbb
sbb
adc
sbb
push
xchg
lcall
lcall
jmp
enter
setb
leave
sub
jg
or
pusha
enter
sbb
inc
mov
pusha
add
ljmp
negb
xlat
repz
xlat
xchg
mov
inc
imul
mov
lock
arpl
jge
mov
or
cmpsl
push
dec
pop
lcall
fistpll
mov
cmc
jle
jmp
adc
in
lds
mov
adc
mov
fiaddl
add
lds
and
xor
push
jle
or
data16
sub
adc
mov
nop
fildll
stc
sub
inc
pusha
mov
test
push
mov
test
into
dec
leave
fnstenv
cmp
popf
pop
std
ret
scas
inc
or
insl
xchg
cmp
pop
inc
or
add
imul
mov
out
pop
iret
data16
add
pop
mov
xor
std
js
fwait
das
pop
jo
mov
and
xor
fcmovnu
mov
adc
sbb
divl
jnp
sub
mov
adc
addr16
jnp
mov
lds
imul
iret
jp
lock
jl
pop
rcrl
mov
pusha
pop
xchg
popf
mov
in
mov
mov
mov
jge
pushf
or
mov
push
jp
adc
jl
mov
cltd
or
out
and
inc
enter
xchg
cmp
rcr
ljmp
sub
stos
test
or
adc
jno
cmp
push
jge
mov
cli
cmpsl
je
or
dec
xchg
push
xchg
sbb
scas
lahf
mov
jns
fcomi
fidivl
sub
mov
xor
in
stos
test
sub
pop
xor
and
xchg
test
fldl2e
loope
adc
sub
test
cmpl
pushl
sbb
cli
fsubl
fwait
jg
inc
cld
les
inc
leave
xchg
test
lds
xchg
fstps
pop
adc
xor
movsb
sub
mov
push
mov
data16
inc
inc
jl
imul
xor
in
jns
cli
mov
pusha
xor
mov
pop
cmpsl
int
or
jl
sub
es
cmpsb
push
xorb
pop
lds
dec
sub
add
dec
mov
ss
add
and
inc
xchg
xchg
mov
mov
add
push
cltd
arpl
mov
mov
add
mov
dec
xlat
mov
mov
push
inc
add
fs
mov
xlat
adc
data16
pop
push
mov
dec
call
repnz
pop
jnp
mov
dec
push
push
fucom
lods
and
xor
add
and
pmulhw
andl
outsl
inc
adc
ret
inc
mov
movsb
mov
cmc
in
int3
cmpsl
dec
jl
cwtl
ficoml
popa
ss
adc
in
imul
nop
lds
rorb
xchg
mov
fldt
pop
cs
je
pop
and
loop
pop
mov
mov
inc
jae
mov
rcrb
insl
jno
cmp
mov
cmc
xorb
mov
stos
cmpb
loopne
sub
clc
outsb
jae
gs
pushf
call
pop
std
sbb
cs
fidivs
dec
xchg
dec
push
jle
ds
and
push
fisubs
adc
adc
enter
out
in
xlat
mov
push
add
arpl
add
cmpsb
mov
lods
scas
cmpsl
add
lcall
ja
cli
mov
imul
in
jg
cld
xor
mov
adc
sbb
cmp
std
insl
xor
test
cmp
mov
outsb
arpl
or
cli
push
dec
dec
scas
nop
cli
iret
push
xor
cs
loopne
sarl
hlt
push
cmp
lahf
mov
push
push
aam
push
outsb
inc
dec
mov
ret
inc
push
sbb
clc
push
dec
push
cmp
and
lahf
loopne
mov
mov
outsb
mov
and
mov
in
and
jns
nop
repz
mov
dec
ja
movl
popa
push
sbbb
add
cs
js
sub
popa
int3
adc
test
rdtsc
stos
stos
cmpb
adc
cmp
dec
shlb
dec
jle
out
inc
mov
ret
lret
xor
loop
sub
test
into
dec
xchg
fstl
scas
ficoms
push
hlt
mov
into
fwait
pop
inc
ss
mov
xor
xchg
dec
inc
fs
mov
push
test
xor
xchg
sub
adcl
add
popa
std
rolb
mov
xchg
mov
xchg
cmp
jnp
adc
xor
fstpt
sub
or
jnp
mov
mov
xlat
xchg
mov
adc
cmpsl
xor
stos
mov
lcall
push
outsb
outsb
push
cmp
mov
insb
jnp
cld
dec
mov
inc
insl
cmpsw
lcall
repnz
mov
adc
inc
add
clc
xor
sub
xchg
pop
mov
adc
test
sub
testl
out
or
test
jns
cmp
mov
inc
mov
cwtl
into
aas
lods
mov
jge
cmc
shll
cmpsb
xor
loopne
adc
fwait
outsl
push
push
jmp
sbb
adc
jbe
iret
iret
mov
sbb
sahf
lret
andb
loop
cmp
adc
adcl
fdivrl
sahf
adc
mov
sahf
into
addb
mov
or
dec
cmp
jg
mov
mov
mov
sub
push
ror
inc
or
outsb
cli
sti
int3
movsl
and
or
rcll
sbb
loop
iret
xor
les
mov
xchg
inc
in
mov
pop
lods
jb
mov
push
fldl2t
sbb
add
sarl
xor
mov
aam
shlb
aas
out
sbb
xor
xor
notb
sbb
nop
cmpsb
subl
adc
test
movsb
mov
ss
or
pushf
push
adc
std
sub
mov
and
dec
pop
movsl
mov
lock
add
mov
out
movsl
incb
lcall
outsl
or
mov
adc
dec
and
ficoml
popa
ret
cld
add
add
and
cmp
cmpsl
rcl
notb
adc
in
mov
test
adc
iret
inc
jno
mov
xchg
je
es
pop
cmp
dec
mov
jg
out
jecxz
cld
dec
mov
pop
and
in
movsl
lcall
lahf
xor
fs
sub
addl
arpl
ja
lret
cmpsb
addr16
sbb
add
mov
push
mov
adc
dec
ja
and
movsl
add
dec
aas
data16
decl
or
test
outsl
cmpsb
mov
xor
aaa
dec
popa
mov
sbb
fs
outsb
inc
jae
dec
push
push
push
sub
push
and
mov
repz
xchg
pop
pop
loopne
xchg
xor
movl
xor
std
hlt
into
dec
mov
mov
xchg
mov
mov
or
inc
mov
test
mov
in
sub
movsl
push
insl
mov
jg
dec
xchg
enter
negl
push
sub
push
dec
lea
jmp
cmp
movsb
daa
sub
pusha
pop
fcoms
je
mov
xchg
iret
xchg
enter
and
xor
pop
lcall
insb
addr16
xchg
or
push
push
pop
and
mov
jb
dec
push
testb
sub
mov
xchg
add
cmc
dec
push
addr16
add
lds
in
or
sti
and
aas
and
adc
lods
jnp
lods
lcall
push
cmp
push
in
popl
mov
pop
lock
addb
pop
or
push
xchg
push
lret
lret
lcall
cmp
jns
pop
js
fsubrs
push
ja
repnz
imul
lods
stc
push
arpl
sbbb
add
rclb
xor
push
pop
cmp
mov
add
xchg
and
cmp
xchg
ror
sbb
pop
test
and
int
int3
test
shl
xor
pop
jno
inc
roll
in
push
stc
cmp
nop
sub
fsubrs
mov
dec
push
mov
in
testl
mov
fldcw
fxch
xchg
lods
jp
mov
int3
std
das
jmp
int
iret
dec
iret
pusha
out
sub
fnstsw
imull
call
jmp
and
pop
in
jns
push
adcb
adc
dec
test
push
mov
jecxz
ljmp
pop
mov
test
push
sti
data16
icebp
dec
push
inc
add
test
shrl
or
xor
scas
ja
sub
pop
outsl
jecxz
int3
pusha
xchg
mov
push
stos
and
fstpl
cs
xchg
nop
mov
cmp
cli
mov
inc
int3
xlat
icebp
leave
arpl
xchg
pop
daa
jno
out
add
lods
and
mov
mov
sbb
fisubrs
stos
cli
mov
mov
cmp
outsl
push
add
shrl
imul
and
jbe
icebp
out
sti
xchg
adcb
mov
ss
les
cmp
mov
jge
fcoms
out
sti
insl
fs
xchg
sub
cmpsb
xor
lcall
sub
repnz
xchg
insl
repz
xchg
lds
cwtl
xchg
lret
xlat
inc
aas
cmp
nop
cwtl
jecxz
test
call
dec
push
pop
adc
cld
jnp
sbb
lds
js
mov
popa
add
jo
out
popa
ret
sbb
sub
push
cmp
insl
add
add
adc
sbb
repnz
push
pop
cmp
xchg
ss
inc
dec
inc
mov
clc
sub
xchg
cld
sahf
lods
cmc
rcrb
mov
push
les
imul
fmul
outsb
jle
jae
jle
ret
pop
std
jmp
jg
in
mov
dec
lret
fwait
sbb
mov
cmp
sarl
dec
testl
or
ja
in
cmc
jno
mov
adc
scas
add
mov
hlt
inc
repz
or
cmp
sub
dec
sbb
dec
outsl
icebp
fildll
iret
stos
test
adc
xchg
in
shrl
jmp
leave
cmpsl
repnz
adc
jg
push
out
inc
pop
mov
dec
mov
movsl
repz
fdiv
pop
iret
sbbl
mov
and
pushl
mov
mov
lds
and
push
iret
or
sub
inc
movsb
mov
inc
and
lfs
data16
js
mov
movsb
clc
jg
aas
fs
into
aam
push
mov
cmp
or
xor
dec
mov
lcall
lcall
pushf
repz
mov
xchg
mov
mov
push
sbb
xchg
xlat
stos
push
mov
lds
dec
cmp
insl
jmp
push
imul
cmc
dec
pop
stc
imul
mov
outsl
and
mov
xor
out
xchg
sbb
xchg
fwait
addr16
and
jne
dec
pop
add
jo
cmp
or
inc
shrl
lods
jns
or
stc
subl
inc
pop
stos
pop
aad
xchg
fbstp
insb
mov
lock
mov
enter
jecxz,pn
aam
dec
pop
lahf
cli
daa
mov
xchg
rolb
xor
xor
and
push
out
sbb
pop
nop
scas
loop
insb
bound
pushl
xor
inc
dec
mov
and
jno
test
pop
pop
call
test
pusha
and
int3
nop
lahf
scas
xchg
mov
push
inc
out
mov
cld
adc
or
pop
inc
ret
ja
lcall
sbb
mov
xor
xchg
inc
int3
push
scas
xchg
pop
and
pop
or
xor
mov
enter
movsl
push
stos
orb
and
mov
out
xchg
sarl
push
sbb
in
sbb
aas
addr16
cltd
loop
mov
hlt
jb
mov
pop
sbb
add
or
cmpsb
lret
adc
shl
xor
pop
rclb
pop
enter
jecxz
cli
mov
mov
clc
mov
test
ret
jp
jmp
sbbb
xor
lods
loopne
cmc
or
push
fisubs
ja
fdivrs
sub
fisubrs
xchg
cwtl
loopne
lret
and
jo
jecxz
sub
rol
out
mov
imul
roll
jmp
jno
es
xchg
dec
sub
movsb
cmpsl
lds
aad
dec
cwtl
jae
popf
ja
mov
fisubrs
js
pushf
inc
pop
hlt
mov
mov
dec
scas
mov
enter
jb
jae
sti
pop
or
imul
xor
xchg
xlat
mov
sahf
or
inc
inc
push
test
out
pop
aad
mov
pop
sbb
add
xor
lcall
lea
or
sbb
jmp
lret
mov
push
or
fxch
pusha
dec
prefetchnta
lock
jnp
sbb
pop
mov
add
fisttpll
cltd
pop
jle
fidivrs
inc
cmp
and
mov
cwtl
dec
clc
stos
mov
push
add
cmp
loop
fmuls
addr16
outsb
lret
out
add
lock
xchg
cld
adc
call
mov
mov
jmp
dec
xor
mov
std
push
mov
test
jb
jmp
cltd
cli
adc
jle
pop
in
int
push
adc
pop
jbe
mov
pop
pop
mov
cmpsl
or
xchg
inc
repnz
scas
push
subb
cltd
mov
ficompl
and
icebp
mov
dec
jg
cmp
sub
ret
mov
nop
mov
imul
push
aas
dec
and
pmulhw
xor
insl
int3
cmp
jnp
ds
cmp
int
aam
pop
imul
icebp
mov
inc
pusha
out
adc
push
test
les
lcall
sub
jle
adc
xchg
inc
lods
sahf
mov
xor
enter
rolb
daa
xor
push
fsub
adc
jno
dec
out
push
outsb
dec
ret
ds
push
leave
pop
inc
and
jbe
jae
add
jae
clc
jg
shlb
arpl
fbstp
mov
add
adc
sub
xor
mov
mov
loope
repnz
xchg
or
fldl
lret
jnp
repz
dec
ss
std
sbb
jmp
orl
out
sub
ficoms
cmp
sbb
addl
mov
push
xor
insb
aad
hlt
lahf
mov
mov
pop
lahf
cltd
or
scas
pop
insb
ja
xchg
mov
int3
test
push
xchg
inc
sbb
lcall
das
nop
mov
pop
loope
xor
test
pusha
fs
cmp
pop
and
mov
pop
xchg
pop
xchg
or
sbb
lods
ficompl
int3
pop
rclb
imul
cmc
rcl
shrb
mov
fstps
mull
and
or
inc
scas
lahf
inc
inc
inc
mov
clc
inc
sbb
cwtl
clc
fcoms
in
add
jne
lea
fisttpl
loopne
xor
sbb
stos
push
imull
jmp
loopne
sbb
push
lret
mov
push
lods
dec
adc
addb
sub
fs
cmpl
xchg
int3
data16
mov
dec
pusha
sbb
in
xchg
rcrb
test
sbb
in
pop
dec
es
inc
dec
pop
daa
push
fs
popa
or
inc
rcll
cli
cmp
xchg
rcl
inc
mul
or
cld
hlt
addb
sub
aas
pop
or
jno
inc
into
adc
int
cmc
pop
out
dec
push
movsl
stos
push
jbe
shrl
pop
mov
xor
pop
scas
push
hlt
sbb
movsl
shr
repz
cmp
or
lods
sbb
fistpll
jl
sub
test
mov
pop
lahf
xchg
or
test
pop
lods
inc
popf
cmp
fmulp
xchg
enter
pop
mov
cmpsl
inc
inc
adc
sbb
out
es
mov
mov
xchg
lea
mov
adc
out
cmp
enter
dec
arpl
push
mov
std
cwtl
das
jno
fidivl
imul
dec
xchg
mov
mov
testl
dec
out
adc
adcl
sub
pusha
rcl
movsb
push
popf
xchg
adc
adc
jae
pop
dec
icebp
sti
rcrb
xchg
fwait
shlb
mov
cmp
jl
sbb
mov
pop
push
int
mov
jge
mov
stos
mov
aaa
dec
mov
mov
fwait
mov
pop
sbb
jg
jg
pop
sub
push
leave
rol
pop
push
repnz
lret
nop
sub
mov
out
adc
sub
divb
arpl
add
mov
sahf
pop
cmp
xchg
add
and
aas
dec
mov
out
push
fsubrl
xlat
jl
mov
pushf
mov
inc
inc
inc
adc
addr16
fbstp
adc
mov
stos
and
ja
cmpsb
rol
add
or
adc
jge
fcmovbe
jns
ficompl
xchg
dec
out
lahf
pop
movsb
sbb
sub
push
xor
xchg
sub
cmp
adc
jp
cltd
jle
sbb
mov
ss
testb
push
lea
lods
adc
ret
push
sbb
mov
adc
mov
testb
int3
in
addr16
sbb
out
mov
incl
pop
or
push
or
cli
mov
push
cmp
test
mov
push
push
sub
adc
loop
and
jns
in
int
popf
addb
fisttps
dec
sub
sub
jne
mov
push
faddl
sbb
or
jg
outsl
dec
pop
pop
dec
lods
mov
pushf
in
cld
out
int3
iret
sub
cmp
or
sbb
insb
jg
outsl
dec
pop
pop
dec
lods
mov
pushf
in
cld
out
int3
iret
sub
mov
paddsb
out
dec
pop
fmull
aas
mov
in
cld
out
int3
iret
sub
cmp
or
sbb
insb
jg
outsl
dec
pop
pop
dec
lods
mov
pushf
clc
pushf
ja
adc
in
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
mov
inc
dec
mov
mov
sahf
and
jno
out
out
push
incb
mov
mov
dec
icebp
pop
icebp
outsb
sarl
mov
mov
arpl
push
incb
test
mov
dec
call
jle
mov
sahf
add
push
mov
cs
std
push
rcrl
dec
out
cmp
in
test
dec
jmp
insb
adc
inc
mov
ljmp
mov
shll
adc
mov
js
mov
and
xor
lret
aas
out
mov
xchg
lret
mov
adc
lret
nop
pushf
mov
hlt
and
aam
outsb
aam
fmuls
out
pop
pop
pop
outsb
mov
icebp
nop
movsl
push
inc
mov
mov
and
cwtl
mov
dec
mov
out
scas
cld
push
icebp
xor
pop
inc
outsb
push
cmc
cmc
xor
outsl
fnstcw
sahf
int
fidivrs
jae
jno
add
icebp
dec
es
imul
inc
xchg
shl
xchg
ficomps
dec
push
out
sti
repnz
filds
push
cmpsb
push
mov
mov
orl
jle
mov
sahf
cmp
imul
inc
dec
mov
rorl
pop
in
repz
orb
aas
movsb
iret
pop
lcall
adc
arpl
fsubrs
loop
out
or
xor
jmp
pushf
inc
out
je
add
ss
xor
inc
cmc
aas
les
pop
loope
sarl
mov
sahf
and
jno
popa
out
push
incb
mov
mov
dec
icebp
pop
loope
sarl
mov
sahf
and
jno
popa
out
push
incb
mov
mov
push
sbb
sbb
push
bound
mov
mov
or
push
call
fsubl
jmp
mov
dec
outsb
push
xchg
pop
add
pop
add
outsb
sahf
dec
sub
pop
push
sub
push
jecxz
inc
push
test
push
push
pop
imul
adc
inc
fistps
dec
scas
fists
sbb
in
or
cmp
xchg
push
pop
mov
xlat
bound
in
outsl
sub
push
dec
test
cmp
cmp
mov
push
scas
lods
sbb
pop
dec
jg
ljmp
lret
aad
and
xchg
cs
sub
pop
adc
pop
inc
inc
add
jge
xchg
cmp
idivl
mov
pop
jecxz
pop
xchg
addr16
dec
push
push
fnstsw
or
xchg
xor
dec
sbbl
movb
int
dec
notb
fnstenv
cld
sbbb
out
xchg
xchg
cmpsb
sub
out
cmp
int
enter
movsb
bswap
daa
mov
in
cld
mov
sub
inc
sbb
add
push
push
and
xlat
adc
leave
insl
and
bound
mov
mov
dec
xlat
jns
dec
xchg
gs
xchg
call
das
add
sbb
fs
mov
mov
call
lahf
push
mov
sub
fiadds
sub
dec
inc
and
jecxz
mov
add
loopne
imul
stc
add
test
cmp
cs
in
test
ja
pop
xchg
movsb
xchg
inc
scas
pop
inc
push
stos
push
or
aas
addb
subb
enter
mov
enter
loope
sub
aaa
shrl
jb
mov
lods
push
adc
sub
mov
mov
adc
push
fsubs
xchg
mov
sbb
sub
lahf
pop
fstp
icebp
pusha
xchg
push
mov
popa
dec
sub
pop
push
sub
jbe
lea
pusha
xchg
mov
fadd
and
jne
sub
and
mov
push
push
and
pop
outsl
stc
daa
mov
mov
add
pop
lock
jne
push
sbb
mov
lock
in
add
xor
mov
mov
popf
mov
mov
loope
jmp
push
rorb
ja
lea
pop
shll
mov
imul
cltd
jl
lea
dec
in
mov
nop
push
pop
das
jecxz
mov
push
loopne
test
inc
inc
sub
dec
lods
sbb
lods
dec
mov
aas
push
aas
in
jae
cld
sahf
out
lahf
jo
mov
mov
xor
cmp
mov
lcall
push
test
shll
xchg
push
or
aam
cs
push
lcall
lcall
xor
and
mov
imul
dec
push
push
xchg
test
lock
ret
mov
jp
sbb
imul
and
jnp
xor
and
pop
push
adc
outsb
push
repz
ret
sub
mov
xchg
jb
sub
add
stc
sbb
mov
xor
and
mov
dec
cwtl
bound
jb
call
cmp
xor
outsb
dec
arpl
xor
or
in
and
mov
int3
outsl
xchg
fisttps
in
inc
adc
ja
pop
out
jmp
inc
push
es
jne
push
in
jge
aad
push
mov
std
jge
and
repz
push
popa
xchg
rorb
mov
lods
and
rcrb
divb
add
pushf
pop
sbb
mov
inc
xlat
jns
pop
xchg
std
mov
in
add
roll
sbb
pop
push
ror
popf
into
in
jo
xlat
mov
push
outsb
outsl
add
sub
push
out
jbe
sbb
das
mov
adc
outsl
xchg
jb
mov
addl
add
mov
mov
xchg
pop
test
fimull
push
adc
jecxz
fwait
and
dec
cmp
xchg
adc
cs
cwtl
lahf
test
xchg
pop
xchg
mov
xchg
cmc
jne
mov
and
pop
xchg
mov
popa
push
mov
push
call
mov
inc
test
imul
nop
pop
adc
or
inc
pop
out
out
adc
cmpsl
or
push
jp
add
lods
in
xor
in
aad
jg
jbe
and
or
stc
push
xor
push
inc
mov
ret
push
or
cmp
push
mov
imul
outsl
jle
lret
ss
sti
cli
fistpll
repnz
mov
int
xorl
xor
fcompl
add
test
mov
and
stos
loop
cld
sbb
mov
add
xor
inc
pop
cmp
stos
hlt
test
imul
push
test
aaa
inc
std
imul
inc
sub
mov
mov
xor
add
sub
movsb
fistpll
mov
imul
movb
mov
mov
pop
push
cmp
or
mov
sti
lock
cltd
out
rorb
jne
sbbb
push
lock
rcrl
test
cmp
push
xchg
je
lahf
jge
sub
lea
int3
loopne
ret
add
mov
fimuls
cs
add
push
adc
mov
divl
shl
sbb
lock
mov
movsb
sub
aas
mov
adc
rcll
and
shrl
fcoml
push
pop
lods
pushf
shll
dec
dec
jae
push
popa
mov
xorl
daa
inc
jg
cmp
push
jb
in
mov
mov
int
jecxz
mov
out
pusha
pop
mov
jns
sbb
stc
pop
mov
sbb
daa
dec
cmp
xchg
add
pop
aas
subl
loope
cltd
xlat
pop
add
sbb
inc
test
daa
mov
rorl
cld
cmp
stos
das
cmp
aam
mov
sub
es
data16
mov
call
aam
xor
dec
sbb
xor
mov
pop
lret
stos
inc
rcll
popf
xchg
shld
jmp
loope
mov
or
xchg
xchg
stos
jl
inc
scas
dec
stc
js
mov
movsl
adc
mov
in
adc
or
sbb
test
in
and
arpl
adc
nop
aas
fcomi
fwait
shl
in
sarl
ret
subl
sub
mov
inc
or
jl
push
mov
jle
mov
adc
jp
dec
jge
mov
je
js
std
or
lds
test
addr16
es
sub
scas
pushf
jbe
lea
or
mov
push
sarl
cmp
pop
scas
dec
lea
xchg
or
mov
cmp
inc
inc
ja
inc
icebp
idivl
xchg
fnstsw
dec
cmc
ror
pusha
outsb
mov
ljmp
popf
push
sbb
call
fsubs
or
orb
sub
or
outsl
adc
stc
jp
push
mulb
scas
dec
xchg
fnstcw
in
add
cmp
dec
mov
cmp
orl
push
mov
fxch
faddl
iret
cmc
hlt
nop
sub
adc
into
sbb
cmp
sbb
adc
lret
lcall
jb
out
adcb
pop
fisubrl
std
jp
pusha
aas
pop
shrb
mov
sub
cmp
dec
mov
adc
enter
ds
fisttps
xchg
out
cli
dec
test
sbb
lock
daa
adc
dec
popa
nop
mov
cmp
mov
jne
cmp
ss
mov
mov
push
or
dec
insl
push
sub
mov
or
idivl
push
mov
lods
mull
xor
sti
fsubs
mov
sbb
movsl
mov
or
and
mov
call
rcl
add
fsubp
out
or
lret
out
je
sbb
idivb
and
js
dec
mov
ret
pop
xchg
frstor
mov
cmp
stc
dec
jmp
mov
adc
cmp
enter
xchg
clc
dec
mov
pop
push
movsl
int3
xchg
into
std
add
test
lods
mov
push
mov
call
daa
inc
movsb
jecxz
outsl
cmpb
mov
addl
out
add
add
pop
js
mov
leave
mov
ja
jl
cmp
inc
fwait
pushf
pop
push
into
and
cld
dec
xchg
lret
mov
push
or
fmulp
jne
aam
cmp
dec
push
mov
popa
xchg
lea
mov
and
mov
adc
xchg
out
lock
pop
inc
mov
xchg
mov
aam
call
movsl
lock
imul
mov
xchg
out
into
test
je
cmpsb
add
mov
pop
cltd
and
pop
stc
sub
mov
jecxz
sbb
adc
insl
pop
or
icebp
inc
sahf
xchg
mov
dec
fs
ja
cwtl
pop
mov
mov
mov
xchg
in
popa
sbb
aad
lahf
pop
popf
xor
xchg
cmp
lea
sahf
or
testl
out
icebp
pop
loope
je
pop
inc
mov
push
ljmp
cmp
mov
push
daa
mov
or
inc
aad
lods
in
bound
ljmp
dec
icebp
lock
inc
idivl
jl
lods
adc
dec
push
adc
dec
imul
xchg
mov
add
xor
ret
adc
dec
in
xchg
add
jns
xchg
bswap
cwtl
mov
xor
sahf
jbe
fwait
mov
pop
push
pushl
ret
scas
mov
adc
cmp
aaa
ds
jns
sbb
adc
or
cmp
and
inc
cmp
cmp
movsb
mov
sub
jle
out
push
xlat
popf
imul
sarb
push
addr16
dec
add
icebp
lret
jecxz
push
mov
xchg
ja
test
mov
rcrb
stc
xor
or
inc
xchg
jae
das
jmp
jne
fpatan
adcb
rcrb
into
cli
repnz
xor
dec
imul
xchg
sbb
mov
pushf
cli
or
clc
or
out
adc
lret
pop
mov
and
leave
inc
popa
and
add
lcall
out
outsb
jl
and
inc
push
data16
sbb
stos
xor
scas
mov
mov
add
dec
clc
das
xchg
cmp
and
mov
ljmp
clc
lahf
xchg
push
pop
or
pop
ret
iret
mov
daa
std
cli
xor
xchg
loop
insb
xchg
lods
movsl
mov
xchg
xchg
popa
fcmovu
cmp
hlt
cmp
cltd
stos
cmc
xchg
lret
xlat
xor
push
xor
test
sub
ss
inc
jge
lcall
inc
xor
arpl
je
adcl
push
je
cld
xor
xchg
add
cmp
mov
roll
loope
rorl
rcl
movsl
enter
test
inc
lcall
cmpsl
cld
popa
sbbb
push
push
add
pop
xchg
das
sbb
jo
and
adc
ret
push
adc
adc
xor
dec
aas
cmovo
add
dec
cmp
inc
insl
pop
push
push
add
lods
fdivrl
ljmp
jge
adc
mov
nop
inc
fcompl
cmc
dec
pop
mov
pop
fsubl
rcrb
pusha
loop
sub
and
test
enter
outsl
lea
inc
mov
sbbl
out
add
dec
mov
nop
mov
cltd
mov
test
pop
adc
insl
lods
test
aam
xchg
pop
shrl
cmpl
push
mov
or
sub
mov
push
cltd
push
cmp
scas
lds
into
mov
cwtl
test
cmp
mov
mov
sub
add
leave
je
sarl
mov
xor
addl
stos
and
and
mov
mov
ljmp
mov
stos
mov
mov
aas
inc
mov
jo
aas
sub
fs
pop
pop
mov
scas
andl
in
mov
pop
jns
pop
test
jl
out
mov
mov
and
push
pop
mov
inc
addr16
hlt
mov
das
pop
es
insl
cmp
jmp
xchg
xchg
sarl
xchg
pop
cli
add
xchg
add
leave
pusha
xchg
add
and
sahf
sub
rclb
push
in
in
bound
adc
sbb
mov
pop
loope
paddq
jp
mov
sbb
lret
pushf
inc
xchg
cmp
cmp
js
sbb
out
xor
repz
jnp
ret
or
insb
add
ret
aam
jb
push
push
jmp
mov
pop
mov
sti
xchg
ljmp
mov
add
cmp
inc
mov
sub
mov
dec
inc
pop
ret
orl
lret
rolb
jno
popl
mov
ja
xor
popa
popf
enter
popa
cmpsb
cld
and
push
lcall
stc
push
fs
cltd
call
xchg
jnp
popf
sbb
ficoml
push
pop
loop
jo
pop
pop
ret
out
cli
enter
sbb
pushl
shlb
fwait
cs
scas
pushf
adc
add
dec
es
loopne
pusha
inc
push
subl
and
popf
cmc
pop
push
dec
xor
push
das
mov
das
rorb
movsl
mov
shll
and
ficoml
xchg
dec
mov
add
pop
mov
fwait
test
push
lds
ret
mov
mov
sub
aam
aam
in
fucom
jb
cmp
popf
in
adc
xchg
push
in
xorb
bound
sbb
in
aaa
je
bound
inc
inc
inc
insl
adc
aam
test
xchg
cltd
sub
mov
add
es
cmp
cltd
imul
out
cmpsb
push
cmc
inc
addb
xor
mov
adc
lcall
and
test
pop
cli
mov
scas
cmc
sub
mov
imul
xchg
bound
mov
cwtl
xor
mov
andl
and
les
shr
xchg
cli
into
mov
into
mov
xchg
inc
leave
cltd
stc
out
xor
push
out
add
imul
push
pop
call
ljmp
inc
lods
push
repnz
ja
cs
fistpl
mov
mov
inc
sbb
sub
lcall
das
pushf
mov
repnz
les
lcall
cmc
aaa
mov
das
test
sbb
push
bound
xor
fsubrp
pop
cmp
push
call
arpl
daa
push
cld
fwait
cmc
je
xchg
cmpl
pop
jp
in
shll
cmp
mov
jne
sub
cwtl
imul
push
cltd
lcall
cmc
sub
in
cmp
dec
stos
add
jmp
sub
dec
inc
add
pusha
inc
cmpb
dec
icebp
stos
push
sub
mov
or
in
mov
lods
ds
mov
mov
adc
add
in
jge
fcoml
cmp
sahf
lcall
add
xchg
daa
jmp
cmpsb
incl
cmp
hlt
dec
and
jb
push
mov
ret
stc
ja
mov
pop
lds
dec
loopne
mov
cltd
std
jecxz
fistpll
inc
or
data16
or
jae
sarb
je
dec
mov
jne
aaa
aad
push
inc
sub
mov
lods
out
or
lcall
ja
pop
jnp
sub
lret
sar
stos
mov
sub
gs
adc
les
scas
cmp
ret
int3
xlat
loop
aam
pop
idivb
loop
cmp
jle
jae
out
xor
clc
dec
adcl
frstor
cli
mov
int
out
pop
jmp
mov
in
add
jle
adc
push
sahf
jmp
mov
mov
cmpsb
dec
sarl
shlb
loope
push
outsl
imul
cmp
aaa
addl
aaa
cld
push
jle
mov
out
popa
mov
cmp
fwait
test
pop
fcomps
cmp
adc
push
std
xlat
enter
xlat
out
mov
loope
outsl
jb
nop
and
push
cld
jns
cmpsb
mov
xor
mov
clc
pop
popl
loope
mov
stos
xchg
and
arpl
and
das
je
ficoml
sub
ss
movsb
pop
mov
mov
add
push
icebp
dec
cmp
push
call
mov
jg
inc
rorb
ret
cmp
iret
insb
sub
dec
mov
fdivrs
orb
fs
stos
mov
out
nop
sti
mov
into
in
loopne
loope
push
div
sahf
cmpsb
pusha
jns
loopne
push
jl
rcrb
aas
es
inc
out
mov
test
add
inc
loopne
xchg
pusha
bound
cmpsb
stos
out
mov
inc
and
push
mov
ljmp
inc
fwait
push
push
cmp
jbe
fadds
adc
daa
rolb
jb
cmp
imul
xchg
dec
out
hlt
sub
pop
jecxz
mov
pop
xor
aas
xchg
ret
or
or
adc
or
pop
xor
cmp
outsb
shrl
stc
sub
fmull
call
jmp
dec
adc
pop
ret
adc
xor
fildl
std
popf
clc
mov
fstps
sub
jmp
outsb
mov
mov
out
dec
fwait
and
inc
sahf
dec
pop
test
xchg
fwait
pop
add
jge
sbb
dec
data16
je
xchg
pop
lret
fistpl
fsub
rcll
fmuls
adc
xchg
pop
cmp
cli
sub
lret
push
jnp
lods
push
adc
icebp
mov
jecxz
imul
jne
xchg
push
in
add
push
nop
mov
sbb
lahf
xchg
xchg
jl
cmpsb
js
cltd
push
mov
add
push
int3
pop
and
jb
inc
pop
imul
xor
mov
sbb
loope
inc
fucom
jmp
in
mov
dec
lea
test
or
mov
in
push
outsl
fs
dec
movsl
dec
movaps
fwait
sbb
imull
test
adc
cmp
les
xorb
xchg
dec
pop
repz
adcb
mov
sbb
sub
add
lcall
jb
repnz
in
ret
inc
mov
bound
sub
in
pop
fcoms
fwait
and
inc
pop
add
loopne
bound
scas
pop
push
xchg
sub
popf
mov
cmp
imul
leave
add
mov
sub
lahf
cmc
in
dec
cmp
adc
stos
push
repnz
test
cs
imull
push
jo
stos
pop
pop
out
add
add
sbb
and
add
lods
mov
dec
shl
sbb
dec
lret
ficompl
in
pop
jbe
jl
pusha
int3
hlt
ret
mov
lods
or
aam
pop
stos
pop
xlat
cltd
fs
push
push
pop
stc
xchg
icebp
push
call
push
outsl
ja
add
xchg
popa
les
lret
hlt
mov
mov
add
sub
ljmp
push
adc
mov
jecxz
mov
push
or
enter
cwtl
fwait
arpl
dec
mov
inc
movsb
mov
jecxz
cmc
xlat
lret
adc
les
push
in
jno
inc
and
mov
add
outsb
mov
mov
push
jle
mov
sbb
lahf
cmp
xchg
test
mov
pop
cmp
xor
xor
jge
mov
jl
test
scas
fisttpll
pusha
xchg
mov
ja
sub
mov
stos
std
mov
aam
outsb
movsl
mov
inc
sub
fsub
sbb
pop
or
mov
mov
mov
or
inc
lea
mov
mov
xchg
psrad
dec
or
mov
mov
pavgw
je
adc
or
lcall
push
mov
mov
aam
adc
test
daa
cmp
mov
mov
xchg
and
or
shlb
mov
jo
mov
adc
mul
sub
adc
dec
inc
dec
into
mov
mov
push
mov
ljmp
arpl
jae
pop
rcrl
mov
xchg
orl
jle
mov
sahf
and
jno
popa
out
push
incb
mov
mov
dec
icebp
pop
loope
sarl
mov
sahf
and
jno
popa
out
push
incb
mov
mov
dec
icebp
pop
loope
sarl
mov
sahf
and
jno
popa
out
push
incb
mov
movsl
cs
orl
jle
mov
sahf
mov
mov
push
adc
add
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
ficoms
out
jl
imulb
push
loopne
inc
daa
jle
outsb
inc
pop
push
pcmpeqd
jbe
xchg
xchg
into
cmpsl
mov
sahf
mov
mov
push
dec
inc
jg
outsb
inc
jnp
push
data16
xchg
xchg
into
cmpsb
mov
sahf
mov
mov
push
insl
inc
sbb
and
pop
sbb
xchg
xchg
mov
dec
and
popa
sbb
fstl
and
xor
std
ljmp
mull
mov
add
and
dec
jmp
jnp
push
test
jg
into
xchg
push
test
rcrl
subl
inc
dec
jo
leave
xchg
clc
loope
xor
mov
loop
push
xchg
fildl
lahf
cli
mov
mov
dec
push
mov
fsubrp
cmpsb
push
add
jnp,pn
imul
cs
imulb
jbe
outsb
adc
push
mov
jle
xchg
fsubrs
xor
rcrl
add
stc
pop
rorb
mov
pop
addr16
xchg
into
cmpsb
mov
sahf
mov
mov
push
dec
es
outsb
inc
push
push
push
data16
repnz
mov
mov
mov
mov
movsb
push
dec
sub
sbb
dec
add
mov
mov
mov
jmp
jnp
pop
sbb
or
pop
imul
fwait
xchg
xchg
xchg
scas
push
pop
push
dec
es
outsb
inc
push
push
push
data16
xchg
xchg
into
cmpsb
mov
sahf
mov
mov
push
dec
es
outsb
inc
push
push
push
data16
xchg
xchg
out
xchg
in
mov
hlt
and
sbbb
mov
jge
and
ja
sbb
fcomps
aas
sub
jmp
int3
fxch
mov
shll
mov
jns
lea
or
inc
add
clc
sub
adc
inc
adc
jns
jnp
std
cmpsb
or
cli
cltd
adc
jl
leave
push
push
sub
or
test
mov
test
sub
xchg
sbb
movsl
ret
cmp
aad
fstps
sbb
pop
add
frstpm(287
insb
mov
leave
fmull
nop
inc
repnz
sti
mov
pop
cmpsb
cmpsb
inc
or
fstl
fimuls
push
mov
cwtl
adc
jp
andl
fs
jbe
push
fsubrp
incb
mov
clc
fdivr
mov
out
addr16
sbb
cli
push
adc
testl
cwtl
inc
add
scas
mov
cltd
xor
ret
sbb
jne
int3
in
dec
pop
mov
addr16
lcall
push
lret
insb
dec
int3
pop
pushf
dec
or
mov
shrl
dec
xchg
std
lea
pop
shrb
cwtl
scas
push
test
pop
xchg
push
into
rcrl
movl
add
pop
daa
push
adcb
dec
addr16
jge,pt
sbb
into
xchg
jnp
lods
popa
pop
out
ret
inc
stc
mov
aas
push
pop
pop
inc
lret
pop
mov
xchg
sub
adc
sbb
push
lret
rorl
cltd
jmp
aaa
push
cwtl
les
cld
outsb
sti
inc
lcall
sti
xor
fldcw
and
ret
xor
mov
pop
dec
lods
sub
inc
mov
stos
mov
adc
test
cltd
ljmp
popl
cmp
xchg
movsb
jp
lds
test
adc
ror
inc
in
add
xor
and
or
lret
sub
iret
hlt
sbb
inc
sub
mov
cmc
mov
or
inc
mov
fdivrl
and
mov
jbe
sti
add
and
enter
ljmp
mov
mov
ss
sub
sub
or
das
mov
push
mov
daa
mov
xchg
push
movsb
cmpsb
fcoms
fcomip
cmp
add
jle
jnp
aam
out
fld1
xchg
jmp
adc
popf
jns
scas
xor
add
mov
cli
inc
cmp
cs
ficoms
adc
mov
mov
jecxz
mov
xor
in
aam
subb
adc
sbb
sbb
xchg
and
xor
icebp
adc
in
inc
movsl
fdivp
fcomp
out
xor
jns
add
push
and
leave
mov
repz
push
loop
dec
ficoml
mov
mov
imulb
pop
mov
test
les
bound
jbe
cmp
push
mov
adc
cmp
add
xor
sbb
mov
js
or
xor
cli
dec
ds
mov
xchg
dec
mov
cmp
mov
cmpb
ss
dec
lret
mov
push
shlb
cli
inc
aad
jmp
aaa
add
xchg
movsb
decl
testb
jns
imul
pop
fldt
push
inc
dec
and
mov
xor
sub
xor
pop
cmp
repnz
mov
mov
pop
scas
pop
xchg
mov
mov
pop
imul
fdivr
fwait
sub
imull
inc
xor
gs
jno
inc
popf
mov
repz
repz
and
mov
gs
mov
xchg
push
inc
cmp
mov
pop
popf
or
loope
data16
push
sbb
xchg
push
xchg
mov
hlt
push
loop
cli
test
scas
xchg
adc
fcompl
pop
lea
cmp
xchg
or
popa
and
out
lods
gs
mov
in
jp
inc
mov
xchg
shl
ds
push
jno
push
fsubs
call
aam
push
shrb
mov
sbb
push
je
pop
repz
lahf
adc
xchg
pop
pop
addr16
mov
ds
jge
icebp
adc
jmp
or
jns
inc
inc
sbb
aas
in
inc
pop
add
in
mov
add
mov
in
sub
sbb
pushw
cmpsb
cld
mov
outsl
arpl
shll
stos
std
js
jne
dec
jmp
cmp
mov
inc
ficoml
in
pop
xchg
pop
roll
fs
push
leave
in
dec
pop
xor
sar
dec
sub
add
push
jbe
pop
add
or
xchg
pop
int3
adc
sbb
lahf
xor
out
mov
ficoml
ljmp
rcrb
fiaddl
add
mov
lahf
movsb
out
fstl
out
lahf
push
lds
cltd
pushf
outsb
scas
mov
int3
loope
mov
stos
jno
imul
or
mov
mov
push
aaa
pop
or
xchg
cli
dec
xor
bound
xlat
out
les
xor
and
out
cmp
adc
add
push
iret
sahf
push
ret
inc
cmp
fwait
cmp
cmp
dec
movsl
xor
push
sbb
idivl
mov
and
push
fiadds
outsb
or
pushf
mov
xor
sub
iret
cli
inc
adc
in
cwtl
lretw
sbb
ret
cmp
arpl
cmp
push
cmp
xor
in
das
jbe
mov
test
xor
movsl
jnp
sbb
add
fwait
sbb
mov
outsl
into
or
fcmove
outsw
mov
dec
fisubs
xchg
add
fildll
push
dec
jbe
inc
sbb
loopne
repnz
loopne
push
repnz
inc
dec
cmp
repnz
cmpb
shrl
xchg
push
mov
roll
data16
sub
lea
mov
lcall
mov
mov
roll
sbb
sti
rcrb
or
cmc
mov
sub
push
mov
test
lods
cmp
dec
mov
inc
scas
mov
mov
imul
mov
out
stos
sbb
fmul
inc
sbb
jns
pop
jle
pop
dec
stc
inc
movsl
insb
iret
push
aaa
mov
arpl
aaa
fwait
adc
test
or
mov
push
ljmp
in
das
int
dec
xchg
jecxz
mov
sarb
daa
pop
add
mov
push
movsl
sahf
push
outsb
and
jnp
xor
xchg
inc
dec
mov
push
fistpl
call
cmp
xor
jne
mov
mov
cmpsl
int3
xor
pop
sahf
adcl
push
mov
xor
pop
lcall
mov
and
fcoms
out
push
push
inc
loope
and
imul
daa
dec
sub
xchg
cmp
inc
mov
mov
push
xchg
addr16
imul
xor
hlt
jne
pop
test
add
adc
sub
mov
mov
bound
stos
adc
adc
jecxz
lahf
dec
rcll
sarl
inc
cld
dec
test
inc
xor
mov
daa
push
and
aas
hlt
dec
adc
icebp
mov
fwait
insl
in
jecxz
nop
push
shrl
cltd
out
js
movsb
in
pop
cmc
and
fwait
test
fwait
sbb
scas
inc
mov
sbb
mov
inc
pop
adc
jo
sbb
dec
add
add
mov
in
xchg
imul
ds
popf
mov
add
dec
adc
icebp
xchg
push
call
cmpsb
in
xchg
mov
pop
xchg
adc
cltd
dec
call
mov
push
stos
or
xor
mov
std
std
out
cmpsl
cltd
and
pop
sbb
test
xlat
in
fcoms
into
dec
mov
sub
mov
mov
pop
or
repz
add
pop
icebp
std
stc
stos
jle
push
push
sbb
or
xchg
mov
pushf
push
imul
in
aaa
dec
int3
shlb
xor
jp
cmpsb
push
mov
mov
mov
push
jge
push
pop
xchg
imul
sbbb
movsb
mull
xchg
sbb
pop
cmp
sbb
adc
gs
cwtl
jl
loopne
add
mov
fidivrl
push
in
and
cmp
pop
or
xlat
mov
xor
stc
push
push
sub
inc
aas
fs
cli
mov
or
out
cli
lea
aam
mov
sbb
jmp
jae
push
aad
decl
mov
pop
rcl
mov
adc
pop
jmp
pop
movsl
test
lahf
and
pop
pop
jnp
lock
loope
xor
dec
push
jo
lods
adc
sahf
jns
jns
cmpsb
mov
cmp
jge
jp
or
pop
gs
clc
sbb
pop
mov
xor
dec
adc
mov
adc
sti
ffree
outsb
stc
cmp
fcmovu
shl
inc
jle
jbe
sub
inc
xchg
pusha
pop
xchg
pop
fmull
sub
ret
wrmsr
out
icebp
xchg
or
dec
mov
xchg
test
jne
lods
pop
out
ret
inc
sbb
ljmp
jecxz
lret
push
into
sbb
xor
xchg
add
and
sti
mov
jmp
sti
stos
ljmp
jge
push
add
xchg
mov
shll
jmp
push
mov
fldt
push
insl
mov
xchg
push
rcr
out
or
or
ss
icebp
or
lock
hlt
test
or
dec
stos
pop
push
inc
gs
lcall
push
jl
dec
xchg
loope
mov
out
add
or
lock
in
jmp
dec
sub
push
sbb
cmpsl
push
xor
lcall
into
adc
pop
sub
xorl
pop
movsb
dec
jmpw
jl
mov
loopne
jge
and
ror
cld
or
xor
movsl
adc
fwait
into
fcoms
mov
xlat
loopne
out
or
stc
stc
push
xchg
cltd
incl
xchg
mov
pop
movb
pop
iret
cmp
dec
ret
stos
sbbb
dec
popf
addr16
cli
out
lea
jb
adc
jp
mov
mov
mov
movsl
pop
in
sub
sub
sbb
mov
scas
sbb
adc
iret
push
mov
mov
mov
sub
imul
sub
addr16
jp
mov
cmp
jge
cmpsl
repz
add
daa
scas
sbb
lock
inc
adc
xor
fnstsw
xchg
inc
jae
inc
cmpsl
push
cwtl
cmpsl
andb
test
mov
orb
ret
mov
rcrl
or
jae
js
test
stos
test
or
push
jmp
push
jmp
lods
js
push
sbb
jg
jnp
pop
in
insl
push
sub
pop
in
out
xor
jns
or
pop
sbb
repnz
xchg
lret
movsl
push
imul
loopne
out
ja
mov
cmpsl
inc
add
xchg
shll
pop
inc
xchg
jne
pop
push
push
sub
cld
cmpb
sbb
outsb
cmpsb
or
push
stc
jp
lds
mov
stc
lahf
daa
mov
addl
inc
inc
jmp
movsb
xchg
mov
and
xor
inc
xchg
aas
jmp
add
in
cld
cmp
inc
push
cmp
inc
popf
or
fildl
xchg
dec
inc
dec
push
aas
mov
arpl
jle
xchg
rcrl
and
jp
cmp
pop
mov
rcrl
lahf
or
adc
jmp
gs
or
movsl
mov
push
aam
cltd
fisubrl
pop
in
sub
xchg
jecxz
push
cld
ret
pop
push
decb
xchg
push
ljmp
xchg
pop
sti
inc
nop
mov
cmp
adc
andl
jg
push
mov
inc
sbb
scas
sub
pop
nop
das
call
xchg
mov
or
sbb
test
mov
cmp
push
xchg
stos
inc
stos
jg
stc
gs
pop
mov
mov
mov
mov
fs
pop
adc
daa
xor
dec
and
xor
dec
xchg
insl
mov
inc
decl
mov
dec
cmp
dec
jl
fsub
movsl
adc
pushf
shl
jb
subl
stc
in
cmp
jno
dec
clc
jo
push
repnz
cmp
inc
sub
in
fs
les
hlt
push
jne
shr
pusha
xor
and
push
xor
fisttpl
mov
xchg
adc
nop
aad
cltd
fisttpl
enter
mov
leave
int3
inc
xchg
js
movsb
mov
ds
sub
inc
icebp
lock
jecxz
shlb
fs
cltd
scas
xchg
imul
aas
movsl
scas
lods
cld
das
sti
add
jle
and
dec
or
pop
outsb
mov
aam
pop
pop
imul
and
add
mov
test
jno
flds
daa
adc
add
aad
push
mov
subl
add
pushf
loopne
jno
and
notb
in
or
icebp
sub
js
adc
loope
mov
cltd
test
shlb
or
mov
mov
mov
and
xchg
iret
pop
inc
or
shr
addr16
sar
sub
jmp
and
push
pop
fldcw
mov
mov
insb
mov
iret
outsl
pop
xchg
cs
ds
mov
xchg
sub
push
dec
ljmp
pop
sub
jno
dec
outsb
insb
imul
rol
or
jne
mov
cs
dec
or
movsl
fsin
ror
hlt
pop
scas
mov
jg
aam
fcomps
push
push
jnp
adc
iret
out
xchg
fbstp
rol
mov
pop
jl
mov
fldcw
nop
sub
in
mov
cltd
enter
xor
gs
in
jg
dec
in
mov
mov
iret
dec
pop
loopne
mov
pushf
shrb
xchg
pop
sub
in
call
iret
push
sub
inc
mov
or
mov
jae
das
jg
xchg
movsb
push
in
icebp
rcrb
int3
fwait
test
jg
les
jecxz
xchg
adc
outsb
ror
push
mov
jge
pop
mov
xor
push
pop
mov
out
outsb
aaa
fcomi
adc
sarl
lcall
popf
cmp
test
loopne
sbb
and
dec
pop
popa
out
adc
pop
imul
cmp
jle
lcall
lcall
jb
mov
xchg
lret
shlb
sbb
sbb
cltd
jle
out
or
adc
xor
aad
scas
sub
lcall
out
addb
adc
add
xlat
xchg
mov
sahf
test
inc
pushf
mov
outsl
pop
stos
push
pop
js
jecxz
push
xor
dec
stos
or
push
mov
repz
sbb
push
xchg
adc
xlat
xor
add
jbe
faddp
les
mov
jb
xchg
mov
cmpsb
mov
jle
test
fnstcw
popa
add
aas
cmp
or
pop
ja
mov
mov
cmp
fmuls
jno
jnp
push
imul
cmp
add
push
sahf
sub
xlat
and
cmp
and
jl
dec
push
jl
and
mov
jmp
sub
nop
push
sbb
sbb
stc
dec
test
repz
lea
pop
pop
divb
adc
arpl
sti
pop
pop
pop
in
imul
xor
js
stos
xor
xor
in
scas
and
mov
in
jae
lods
dec
in
mov
push
in
popa
leave
dec
jge
stos
inc
sahf
call
and
push
outsb
mov
push
mov
push
mov
lea
clc
lret
mov
dec
inc
mov
cmp
leave
test
pop
dec
movsb
bound
add
pushf
dec
in
push
shll
pop
pop
les
jge
out
mov
ss
shr
inc
jbe
mov
or
leave
cld
jl
dec
ja
xchg
sbb
into
aad
push
xor
mov
pop
ret
add
jle
jae
inc
movb
adc
push
push
mov
lea
inc
pop
addl
xchg
scas
pop
xor
lds
sbb
push
mov
inc
fiadds
mov
pusha
pop
iret
xchg
xor
inc
adc
lods
lret
insl
cmpsl
lds
xchg
test
mov
scas
push
pop
xchg
divb
jle
pop
mov
sbb
xchg
or
xchg
popf
mov
mov
loop
mov
lret
pop
mov
jns
sub
inc
and
test
loope
inc
movsb
jg
pop
sbb
std
mov
bound
xor
xchg
push
sarl
sbb
mov
lret
mov
je
notl
fdivs
pop
out
xchg
mov
jmp
ja
mov
ret
mov
clc
sahf
mov
and
ds
jbe
cmpsb
jp
dec
or
jmp
sbb
jmp
fs
mov
loopne
outsl
lods
stc
mov
and
push
cmp
mov
test
push
push
mov
mov
pop
scas
mov
inc
push
insb
jmp
lret
std
dec
dec
and
insb
bound
ja
jecxz
sbb
inc
push
sub
movsl
jns
rolb
cmp
imul
jl
out
or
movsb
pop
es
xchg
rdpmc
sub
enter
dec
inc
xchg
lea
push
jb
movsb
push
xchg
repnz
xor
cmp
and
push
fprem
in
xchg
inc
pop
and
popf
sbb
adc
add
xchg
push
mov
movsl
mov
xchg
test
inc
fmul
shr
outsl
push
fwait
sbbl
xchg
or
addr16
call
fldl
cmp
jecxz
mov
and
xchg
outsl
jmp
jno
pusha
shlb
adc
dec
cmc
add
sbb
mov
fsubs
imul
outsl
inc
sub
or
xchg
or
inc
stos
cmc
outsl
sbb
mov
mov
fistpll
mov
xchg
xchg
mov
pop
into
in
pusha
ret
mov
dec
xor
and
cmp
lods
xor
enter
dec
push
sbb
inc
jbe
testb
dec
xchg
dec
mov
out
xor
in
adcl
pop
outsb
mov
lock
mov
iret
jge
fdivrs
shlb
bound
mov
and
adc
movsl
xchg
into
mov
inc
aas
jae
dec
nop
das
pop
pushf
cld
mov
mov
add
jp
xchg
hlt
hlt
or
sbb
mov
mov
loop
cmp
mov
stc
aad
adc
fxtract
mov
sbb
fwait
fs
adc
stc
test
outsl
and
xchg
stc
js
data16
outsb
mov
mov
sbb
mov
loop
test
mov
dec
cmp
int3
and
and
mov
adc
inc
fstl
fadds
fs
mov
add
mov
mull
add
add
loope
push
push
sbb
imul
pusha
mov
in
fdiv
sub
mul
sub
sub
fucomp
mov
mov
mov
pop
sub
mov
xchg
xchg
cli
xchg
ror
add
xchg
add
rcll
sarl
pushf
sbb
jns
popf
and
xor
push
jmp
fcomi
lock
sbb
ljmp
mov
push
cmp
dec
xor
inc
out
xchg
aas
sbb
sbb
pop
add
ds
sahf
fwait
hlt
stc
rol
movb
ja
cmp
add
mov
aam
jae
lods
inc
sahf
inc
jl
lahf
jge
push
pop
addr16
lods
ret
mov
adc
iret
imul
cmp
aam
xor
xchg
mov
xor
mov
aas
push
mov
cmc
pop
sbb
or
adc
add
jo
jl
jno
fistpl
jo
dec
cltd
ds
imul
ljmp
add
mov
in
cwtl
mov
pusha
and
mov
fildl
lcall
out
xchg
stos
je
add
out
pop
sbb
sti
mov
iret
cmp
adc
aad
xchg
xchg
mov
test
sbb
jg
outsb
hlt
imul
int3
test
mov
into
gs
fcoms
lcall
adc
pop
mov
stc
test
out
pushf
fstl
jbe
xchg
rolb
das
sbb
xchg
mov
cmp
popa
ljmp
loop
lds
int
add
jle
dec
dec
outsb
insl
cmpsl
stc
inc
das
fmulp
mov
mov
lock
xchg
dec
mov
dec
push
cmp
sub
mov
xchg
popl
push
mov
mov
insb
sub
and
sbb
out
sahf
mov
mov
push
dec
es
outsb
inc
push
push
push
data16
xchg
xchg
into
cmpsb
mov
sahf
mov
mov
push
dec
es
outsb
inc
push
push
push
data16
xchg
xchg
into
cmpsb
mov
sahf
mov
mov
push
dec
es
outsb
inc
push
push
push
data16
xchg
xchg
into
cmpsl
mov
sahf
mov
mov
push
in
jle
sbb
xchg
fdivp
cltd
rorl
iret
sahf
fisttps
std
lea
cs
push
pop
push
das
jle
cs
pop
pop
dec
out
mov
fisttps
ficomps
cs
push
push
push
das
jle
outsb
divps
dec
idivb
mov
ficomps
jb
outsb
daa
push
das
sub
or
dec
dec
xchg
test
das
dec
fstpl
jmp
push
pop
pop
daa
jns
mov
aad
xchg
add
mov
arpl
push
mov
ljmp
movq
loopne
adc
cltd
loop
test
pop
dec
cmp
adc
sbb
into
das
jle
pop
pop
pop
dec
out
inc
out
scas
push
lahf
sti
lcall
sahf
sahf
in
jle
jp
mov
test
jb
inc
dec
aas
jae
cmpsl
adc
and
outsl
jnp
das
dec
loop
cmp
lock
nopl
cmp
push
mov
mov
dec
nop
shl
xor
femms
push
insb
lcall
out
iret
sahf
fisttps
fiadds
cs
push
inc
push
aaa
jle
outsb
adc
rcrl
enter
scas
ret
mov
cmp
cmp
adc
jge
jb
cmp
in
sahf
scas
fld
fwait
mov
into
sub
sbb
dec
push
bound
adc
sub
mov
xchg
fisubl
xchg
mov
into
outsl
jg,pt
dec
push
pop
push
das
jle
outsb
divps
dec
out
mov
fisttps
ficomps
cs
push
pop
push
das
jle
outsb
divps
dec
out
mov
lods
pop
ret
cmp
cvtdq2ps
add
adcl
xchg
ja
js
inc
xor
mov
fmuls
ds
lret
jno
pushf
push
je
sbb
pop
pop
in
testb
je
loop
inc
xchg
call
and
xor
mov
pop
lret
adc
mov
dec
sbb
sub
sub
imul
push
popf
mov
scas
mov
lret
add
push
mov
xor
pop
mov
into
out
push
push
or
rol
mov
sbb
sbb
jns
pop
add
pop
add
rcrb
mov
or
and
lret
pusha
mov
xchg
in
imul
loope
jb
lret
outsb
aam
arpl
mov
adc
mov
adcb
pop
inc
imul
jnp
inc
rolb
sbb
jle
add
push
cli
add
mov
lods
addl
outsl
xor
pop
mov
adc
insb
test
test
arpl
and
add
dec
ret
cmp
inc
push
push
push
jae
adcl
cmc
andb
sub
decl
cmpsl
pop
jecxz
xor
sbb
imul
lods
call
add
int
mov
add
and
clc
inc
xchg
out
sarl
xchg
mov
mov
or
and
pop
mov
or
sub
lret
push
lods
push
jb
fstl
xchg
dec
jbe
inc
subb
ljmp
insl
out
out
sub
movl
sub
imul
jge
rcl
jbe
std
jmp
out
xchg
movsb
mov
stos
cmp
dec
jl
xchg
cmpb
call
add
adc
call
js
mov
ja
sub
imul
mov
jae
movsb
xchg
loope
pop
dec
sbb
roll
xchg
in
imul
pop
cmp
xor
dec
or
mov
push
xchg
lret
bound
inc
outsb
popa
push
push
push
add
hlt
inc
stos
dec
in
and
mov
test
sbb
clc
xchg
dec
dec
push
and
add
cwtl
pusha
ret
xor
xchg
push
lock
and
imul
mov
test
fnstcw
out
cmp
push
cmp
pusha
sbb
fimuls
mov
and
sbbl
jns
mov
out
scas
insl
and
add
inc
cmp
cmpsl
cmp
loop
inc
pop
xchg
ja
pop
jle
lahf
mov
push
jmp
mov
mov
inc
decb
mov
das
mov
sub
adc
ss
js
mov
jmp
mov
ds
out
jno
aaa
xchg
data16
cmp
es
or
hlt
jno
cwtl
int
inc
inc
xchg
ret
mov
push
test
out
popf
mov
cs
lds
xor
fs
push
mov
push
lock
aad
cmp
jp
push
das
cld
arpl
insl
lods
loope
bound
loope
sbb
sub
adc
out
or
movsl
fstl
insl
adc
enter
int3
push
push
pop
lds
inc
test
jns
mov
int3
xor
adc
clc
dec
rcr
rol
loop
cmp
and
enter
leave
insl
jg
cmpl
mov
ja
mov
ret
jne
mov
int3
int
js
add
mov
jmp
mov
mov
jae
and
and
pushf
adc
pop
insb
push
dec
push
loope
jo
adc
sbb
ret
adc
adc
std
mov
xchg
and
push
test
outsb
push
std
test
rcrb
lock
inc
out
jno
es
scas
jl
sub
cwtl
dec
aad
pop
stos
mov
sub
push
push
orl
push
push
and
fisubl
inc
lods
jl
xor
sbb
cmpsb
aas
addr16
adc
mov
mov
and
xchg
loopne
and
and
mov
ret
xchg
jns
loopne
rcll
idiv
mov
dec
ds
aam
mov
sbb
pop
enter
sti
lret
push
pop
push
enter
hlt
jge
adc
js
fstpl
out
and
mov
push
pushf
mov
ss
sbb
les
jmp
hlt
pop
pop
decl
mov
not
sub
dec
scas
loope
aas
ss
mov
mov
ljmp
xchg
cmc
rclb
xlat
nop
mov
and
clc
aad
xchg
lock
into
dec
mov
movsl
jae
cmp
xor
mov
mov
jg
mov
xchg
xlat
sub
mov
addr16
daa
out
repnz
adc
inc
jb
mov
fisttpl
call
xor
lcall
xchg
lods
insb
mov
popa
cltd
psubb
or
fs
mov
loopne
and
bound
mov
cmc
insl
in
mov
popa
hlt
aam
ret
dec
fcmovnu
rolb
sub
cmp
scas
out
mov
or
aam
call
xchg
mov
popa
test
mov
mov
jns
add
cmpsl
jo
test
fisttpl
repnz
or
lahf
xchg
movsl
je
xchg
or
lods
push
flds
movsb
xor
push
add
pop
push
inc
jnp
jne
push
sub
xchg
xor
lea
jne
daa
mov
jb
dec
mov
jnp
push
ret
mov
imul
ss
push
mov
inc
sub
mov
sub
xor
xchg
inc
test
sbb
push
arpl
sbb
dec
mov
inc
popa
je
ret
imul
mov
add
movb
or
stc
loope
insl
dec
repz
ret
out
push
add
fs
sbb
out
insb
xchg
mov
adc
add
test
popa
push
es
insb
arpl
xchg
int3
cs
mov
mov
mov
test
in
inc
out
push
nop
or
add
add
pop
inc
sub
pop
lret
pop
adcb
add
sti
sbb
pop
ss
test
fisttps
add
mov
sahf
aam
mov
mov
jns
adc
rorl
jns
pushf
loop
dec
aaa
mov
outsb
sub
push
inc
bound
cmp
dec
pop
rorb
push
lcall
cmpsl
aam
adc
sbb
cmp
jp
or
mov
dec
stos
xchg
popa
jecxz
mov
xchg
ja
and
pop
jge
xor
insl
or
cli
test
mov
lahf
add
leave
rclb
xor
push
outsl
adc
outsb
inc
fs
andl
mov
add
or
sbb
pop
and
in
jmp
fs
push
push
mov
cmpsb
mov
bound
into
xchg
xor
dec
sub
stos
cld
sub
inc
and
push
mov
jbe
add
dec
sbb
ds
mov
jno
in
in
lret
dec
and
popf
fldl
popa
jbe
inc
xchg
cltd
and
mov
in
mov
sub
sbb
and
fisttps
jbe
rol
aad
xchg
hlt
test
imul
inc
mov
mov
pop
mov
jge
loop
sub
fprem
cmp
push
popa
adc
fcoml
daa
loop
andl
push
fidivrs
dec
xlat
call
jle
mov
scas
or
leave
cmpsl
icebp
xchg
insb
lret
inc
jg
daa
mov
sbb
movsb
inc
add
leave
sbb
dec
dec
fldln2
pcmpgtb
inc
sbb
sbb
rcll
sti
adc
fbstp
inc
and
pushf
jns
cmc
in
push
pop
movsw
aad
mov
cmp
aaa
lods
aaa
in
xor
sub
fsubrl
int
faddl
mov
pop
pop
loope
mov
int
pushf
movsl
mov
mov
sub
xchg
mov
push
mov
sub
dec
rolb
mov
call
sbb
xor
sub
add
in
scas
scas
loopne
test
mov
dec
mov
xor
jbe
lahf
out
shll
pop
cmp
pop
frstor
or
adc
add
jne
scas
sahf
jl
or
push
call
pop
sub
ds
and
imul
or
inc
or
fldl
cmc
jbe
pop
jb
fs
sub
dec
or
lcall
int
sub
std
xchg
jmp
inc
fiadds
clts
mov
test
std
repz
mov
push
ljmp
repnz
ss
and
out
arpl
and
mov
cmpsb
dec
pop
pop
mov
stc
nop
in
pushf
push
inc
in
outsb
cmp
adc
jge
jmp
in
movsb
sbb
xlat
inc
adc
lods
insb
or
jo
ja
jge
mov
inc
fadd
cmp
push
into
lret
dec
jge
lock
int3
or
out
faddl
mulb
aaa
aam
mov
repnz
addr16
xchg
xor
hlt
sbb
xchg
loopne
loopne
pop
dec
adc
stc
adc
iret
push
jge
mov
jb
rcrl
and
adc
dec
sbb
mov
push
mov
mov
stos
xor
mov
mov
dec
xlat
mulb
sub
outsb
adc
aas
pop
int3
iret
int3
lret
dec
cmp
cmovg
xchg
aad
nop
loopne
in
lds
insl
outsl
add
push
scas
call
push
lds
mov
lods
push
cmp
mov
cmp
stos
xchg
repz
dec
mov
hlt
dec
testl
push
dec
adc
dec
xor
js
and
xchg
and
loope
add
adc
popf
pop
repz
gs
fisubrl
xchg
jb
and
out
lds
dec
mov
pushf
outsb
push
stos
addl
sbb
shll
add
popa
and
je
das
call
cmpsl
xchg
mov
sbb
jl
mov
dec
cmpsl
mov
sub
stc
aad
mov
nop
dec
sub
push
or
push
inc
int3
sbb
add
lcall
mov
adc
inc
jle
add
iret
push
inc
and
in
into
mov
gs
mov
mov
in
xchg
jb
repz
out
cwtl
sub
cmc
mov
lock
jge
sbb
cmp
mov
push
stos
aam
in
int
adc
and
in
scas
add
jb
jb
jle
or
nop
enter
adc
sbb
stos
fimull
scas
inc
mov
inc
movaps
xor
int3
sti
aad
lods
push
push
and
dec
jo
and
pop
jb
imull
and
push
out
out
int3
jns
test
mov
mov
mov
xor
leave
mov
scas
fiadds
sbb
mov
sti
bound
test
mov
repnz
cmp
push
push
pop
test
mov
repnz
fs
or
adc
popa
push
insb
aam
je
adcb
in
sarl
int
sbb
xor
fwait
psubb
adc
cs
mov
xchg
cmp
xchg
inc
push
subl
pushf
inc
add
xchg
sub
enter
dec
or
sub
mov
cmp
std
mov
adc
repnz
dec
and
insb
sbb
mov
xchg
xor
pop
mov
and
sbb
sub
outsl
movsb
mov
push
int
fists
dec
mov
rcr
arpl
aad
cs
fcmovnbe
sub
lods
jo
pop
ss
xchg
mov
mov
roll
ss
std
shrl
mov
mov
add
loope
add
fdivr
int
adc
add
push
xor
icebp
pop
std
xchg
enter
loop
mov
cmpsl
sbb
mov
testb
pushf
int
popf
ljmp
enter
mov
push
jb
popa
loopne
mov
jae
enter
mov
push
mov
sbb
cli
jne
sbb
test
or
pop
negl
stos
push
mov
adcb
adcl
ds
in
sub
rorl
sbb
fsubrl
mov
inc
jno
rclb
loopne
and
sbb
lret
push
fsubs
push
outsl
or
scas
rcll
mov
fwait
call
sub
jb
or
enter
mov
fistpll
fs
inc
dec
jg
pop
insb
cwtl
clc
ret
std
rcll
fsubrs
mov
jnp
ljmp
bound
out
lahf
pop
daa
repz
lds
loope
mov
mov
ror
bound
clc
fsub
cmc
and
add
mov
adc
sbb
gs
pop
stc
out
out
or
mov
sbb
lea
dec
push
mov
stos
insb
push
xor
mov
inc
xor
push
arpl
pop
push
insl
imul
addl
cmp
add
xchg
and
jg
out
inc
or
inc
enter
imul
int3
xchg
test
pop
loope
jg
pop
icebp
cmpsb
jbe
cmpsl
into
xchg
sbb
loopne
pop
mov
ficoms
enter
push
push
xchg
cmp
sarb
loope
ljmp
data16
xchg
xlat
hlt
xchg
mov
test
jmp
mov
ljmp
es
repz
dec
dec
gs
push
repnz
scas
sarl
fcmovnu
shll
repnz
and
ffree
inc
jae
lock
and
dec
clc
scas
sti
cmpsl
mov
lcall
push
pop
and
outsb
sbb
lahf
outsl
arpl
mov
pop
mov
mov
xchg
push
out
inc
test
or
mov
out
sub
scas
aas
pop
outsl
mov
leave
add
add
inc
in
int
sub
jno
push
dec
and
hlt
cmpsl
data16
sub
jnp
xlat
pop
xchg
mov
pop
out
push
jp
and
xchg
lcall
mov
into
inc
push
push
data16
push
mov
imul
xchg
imul
push
cmp
out
aad
jnp
insb
test
sbb
cmp
sti
add
outsl
aas
jne
dec
fs
inc
xor
adc
mov
popaw
push
fcomps
cmp
dec
iret
xor
xchg
pusha
sub
jle
int
adc
jp
popf
lahf
pop
add
mov
pop
sub
sbb
insb
mov
test
xor
fstps
mov
aam
mov
cbtw
and
push
aad
mov
dec
jg
push
data16
mov
or
int3
mov
push
cmp
bound
shrb
lret
and
inc
mov
and
push
pusha
test
gs
fidivrl
sub
addb
mulb
and
fldenv
cmpsl
negl
jge
sahf
push
mov
jno
addl
push
xchg
sbb
adc
bound
jae
adc
xchg
scas
or
insb
jbe
inc
mov
ljmp
cld
mov
loop
loopne
in
repz
mov
adc
aam
and
mov
iret
or
push
pop
rorl
cmc
into
lock
jle
adc
mov
push
test
fiaddl
outsl
addr16
sbb
cwtl
fidivl
pop
in
mov
mov
mov
fdivrl
xchg
loopne
test
cltd
cld
mov
stos
sbb
popa
ss
or
adc
call
push
push
stos
repz
dec
or
xor
jge
ljmp
cmp
int3
inc
xchg
lret
push
in
mov
jg
ret
pushl
cmovnp
jb
in
cmpsb
mov
pop
out
xchg
nop
mov
inc
pop
loopne
pusha
pop
int
rorl
pop
cmp
fwait
pop
mov
shlb
cmpsb
mov
or
fdiv
xor
in
adc
icebp
xlat
xor
sbb
stos
scas
enter
mov
xor
add
out
rcrb
and
inc
jmp
es
sub
sub
mov
jl
inc
sti
push
repz
popf
in
adc
js
stos
sar
cmp
xchg
sahf
cmc
pop
jns
ljmp
push
dec
and
add
push
xchg
test
in
jo
push
adc
lret
and
mov
adc
mov
mov
cmp
sub
clc
mov
mov
mov
dec
pushf
fidivrl
fwait
jle
xchg
mov
rolb
jl
divl
bound
push
inc
xor
lods
jl
lods
jecxz
sbb
add
mov
mov
jle
fs
pop
clc
mov
xchg
iret
addl
sub
cmp
inc
jns
pop
addr16
adc
push
or
inc
jmp
lret
inc
mov
xor
std
jmp
into
or
leave
sbb
aam
mov
adc
mov
pop
mov
lret
lahf
stc
adc
shl
adc
cmp
and
jmp
test
xor
or
imul
dec
mov
sub
lret
lods
ret
icebp
sar
jbe
cli
push
push
orb
fcoml
imul
arpl
xor
subl
cmp
lahf
popf
idivb
sub
mov
jne
fcmovbe
mov
jmp
in
test
rcrl
jp
xor
std
and
data16
dec
xchg
jnp
dec
mov
pop
mov
or
sarb
je
push
mov
mov
xor
sahf
arpl
and
or
shl
clc
jle
dec
adc
subb
mulb
lea
cmpsl
pop
mov
add
and
sbb
outsb
pop
pop
aam
jp
fsubrl
sarb
add
push
sbb
pop
into
jp
andl
out
adc
xchg
lcall
and
sti
xchg
std
cmp
push
or
and
xchg
and
daa
push
mov
adcb
test
icebp
scas
arpl
nop
pop
mov
es
push
mov
das
mov
test
sahf
nop
std
bound
ja
addr16
add
incl
pop
mov
test
push
mov
add
add
mov
pop
sbb
cmc
jge
int3
cs
xchg
sti
pop
aaa
dec
mov
and
and
cmpsl
ja
in
adc
sbb
push
mov
or
loope
hlt
sahf
cmc
scas
in
push
push
pushf
xchg
insb
cmp
jge
sub
and
sub
sub
mov
mov
lea
nop
das
mov
xchg
jne
pop
fwait
icebp
mov
js
bound
movsl
clc
cmp
or
push
daa
jp
lret
pop
or
pop
js
js
rcl
arpl
jno
addr16
sar
imul
mov
hlt
or
mov
xchg
push
je
sub
mov
ja
bound
div
lock
stos
adc
or
rcrb
lea
fldcw
dec
push
into
shll
pushf
lahf
inc
mov
add
jle
mov
rcll
lea
mov
mov
test
in
negl
sub
xor
aad
mov
jmp
sub
cli
pop
xchg
adc
mov
or
imul
leave
mov
add
dec
jg
aad
sbb
out
jbe
decb
test
sbb
add
out
cwtl
push
mov
cltd
std
inc
dec
mov
push
fcmovb
mov
cli
insl
addb
cld
xchg
mov
shlb
push
mov
mov
sub
mov
xchg
insb
mov
dec
mov
insb
sub
push
fcmovb
ljmp
push
push
pop
and
dec
push
lods
test
add
pop
pusha
in
dec
add
shlb
pop
sub
ret
adc
jo
add
inc
es
lcall
aam
enter
shlb
inc
mov
hlt
sub
add
loop
jl
inc
dec
jle
push
loope
mov
jle
sahf
sub
arpl
push
cmp
mov
pushf
fldcw
out
mov
xchg
mov
adc
xchg
cmp
das
pop
push
push
aad
daa
loope
fists
movsb
daa
sbb
idivb
and
adc
push
out
mov
lds
sbb
incl
inc
xchg
aas
push
lret
inc
pop
rcr
push
imul
shl
jno
insb
loope
dec
mov
ret
test
cld
cmpsb
call
push
mov
je
out
push
fcmove
movsb
add
pop
mov
xchg
pusha
jl
ret
xchg
jl
mov
push
xor
mov
sub
and
adc
push
pop
js
xchg
insb
pop
xor
lea
push
loope
lret
aaa
mov
pop
mov
test
pushf
fwait
cmp
add
adcb
js
adc
add
xchg
sbb
mov
enter
jo
xchg
pop
insb
mov
cmp
lods
mov
jbe
stos
insl
cmp
lds
mov
into
outsl
jg,pt
dec
push
pop
push
das
jle
outsb
divps
dec
out
mov
fisttps
ficomps
cs
push
pop
push
das
jle
outsb
divps
dec
out
mov
fisttps
fistps
das
dec
push
pop
push
das
jg
outsb
divps
scas
into
sahf
fisttps
divps
xor
push
pop
jns
divb
mov
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
lods
inc
mov
out
fmull
bound
push
movd
insl
dec
dec
dec
dec
lret
lods
loop
sahf
out
std
in
into
fstp
int
aas
ds
cs
jle
dec
pop
pop
dec
push
movsb
dec
lods
sbb
inc
xchg
lock
cmc
rol
dec
ficomps
or
sbb
add
mov
testl
adc
cmc
or
mov
cmpsb
push
sbb
push
dec
mov
inc
in
push
adc
jle
inc
push
push
inc
fdivrs
loop
xchg
clc
and
dec
pop
mov
sub
ret
daa
stos
mov
and
ds
sbb
cmp
mov
lods
imul
sub
das
insl
rorb
jle,pn
dec
xlat
pop
daa
push
test
insl
adc
jbe
inc
lea
push
mov
sub
sub
push
mov
mov
dec
popf
pusha
inc
adc
pop
or
out
inc
sbb
or
sbb
dec
mov
call
xchg
or
xchg
into
les
call
add
adc
gs
jl
pop
sub
fmul
lods
cli
pushf
out
subl
insl
push
imul
sbb
adc
daa
pop
cmp
jecxz
fldt
xchg
mov
push
imul
daa
xor
sub
cld
ror
out
cld
int
mov
fstp
int
cmp
push
or
dec
pop
pop
dec
scas
mov
sahf
out
std
in
into
fstp
int
cmp
push
or
dec
pop
pop
dec
scas
mov
pop
sahf
and
xchg
gs
aam
mov
xchg
insl
das
and
mov
push
movsl
enter
fildll
inc
imul
pop
jns
and
test
xchg
pop
lahf
fsubl
out
pop
adc
aam
sbb
outsb
sti
repz
imul
in
test
dec
ja
or
dec
xchg
dec
dec
dec
aad
xor
std
push
jp
pop
daa
dec
cmpsb
lret
mov
imul
mov
into
lcall
adc
add
imulb
push
add
rcll
in
je
xlat
fdivrp
push
push
jno
jns
or
sbb
cmp
cmp
int3
shl
into
sub
xchg
scas
enter
int
mov
cmpsb
mov
inc
imul
adc
push
mov
jbe
add
daa
pusha
leave
jb
xor
jbe
pusha
mov
ljmp
je
mov
pop
test
jno
sbb
jp
nop
pop
neg
cld
lcall
out
aam
pop
adc
je
adc
pop
es
and
lock
mov
push
push
lods
nopl
movq
mov
incb
xlat
sbb
aad
loopne
inc
movb
std
jp
adc
ja
push
into
fnstcw
mov
negl
pop
ret
add
jns
shl
int
ljmp
aam
jne
lret
aaa
jnp
mov
aam
mov
push
or
int
int
mov
and
jg
xchg
enter
jne
xchg
lds
sub
dec
fdivr
mov
popf
lds
pop
cmpsb
ficomps
mov
jbe
sbb
pop
jp
pop
fs
cltd
or
sbb
inc
mov
jns
mov
hlt
lods
add
stos
and
cwtl
add
mov
int
mov
cwtl
jp
cld
sbb
mov
cmp
stos
xchg
loop
xchg
jbe
fwait
out
mov
das
sbb
lds
aad
push
adc
imul
lcall
mov
sub
js
sti
cmc
aas
fistps
sub
mov
or
loope
in
jbe
fbld
pop
push
addr16
mov
xchg
pop
icebp
push
inc
pushf
inc
pushf
mov
insb
adc
mov
or
stos
popf
enter
mov
cmpsb
mov
jge
movsl
or
jne
mov
sahf
or
or
mov
call
xchg
push
push
inc
popf
and
in
fcoms
pop
sbb
xor
aad
daa
add
arpl
cmp
addl
loop
fisubrl
jae
shll
or
mov
movsb
into
mov
cld
movsl
cmp
outsl
mov
xor
dec
xchg
push
mov
dec
enter
mov
fisttps
ds
fadd
into
pop
xor
dec
and
ss
jmp
dec
test
stos
xchg
out
cmpsb
stos
arpl
out
cmp
jl
loop
and
add
xor
inc
scas
dec
and
mov
stc
neg
fs
xchg
leave
pop
cmp
or
fwait
push
out
xchg
add
inc
push
insb
es
inc
rol
jns
adc
imul
repnz
movsl
jp
les
mov
adc
push
movsb
push
leave
inc
push
shr
xchg
aam
mov
add
sbb
sub
enter
add
sub
test
lret
arpl
mov
call
and
push
ret
aad
jg
lods
mov
into
orb
loopne
jecxz
or
xor
pop
xchg
subb
adc
adc
or
jg
pusha
inc
and
cmp
jg
icebp
push
stos
push
lcall
cmc
xor
lods
shll
gs
sub
sub
xor
push
pop
inc
sbb
jge
cmp
into
inc
mov
sahf
add
push
push
mov
pop
or
jle
pop
shl
pop
lcall
pushf
mov
push
and
ret
dec
std
cmp
cmp
push
mov
cmp
jb
dec
scas
sub
rorb
sub
dec
aad
in
jl
cmp
sbb
into
test
addr16
in
ret
inc
adc
stos
lret
pop
shl
scas
inc
ljmp
movlps
pusha
jmp
cs
cmp
mov
pop
xor
lahf
jmp
pop
inc
mov
xchg
xchg
lahf
fwait
xchg
movsl
pop
xlat
sahf
std
jae
gs
add
sub
pop
pop
mov
jmp
test
vmwrite
in
js
push
or
xor
lock
push
push
and
ljmp
insb
pop
ret
lock
movl
int3
outsb
xor
cwtl
je
out
fs
xchg
jp
mov
inc
xchg
xchg
add
stos
and
jmp
loope
icebp
jbe
outsl
xchg
addl
repz
inc
push
ja
mov
xchg
inc
lahf
push
xchg
and
or
adc
inc
mov
fdivr
cltd
int3
cmp
sbbb
repnz
inc
adc
jl
stc
fwait
daa
fucomi
pop
mov
lods
dec
fsubl
in
cs
dec
imul
pop
inc
push
out
xchg
pop
and
test
sbb
rol
jmp
nop
push
push
or
in
outsl
jg
arpl
mov
lcall
mov
movsl
cs
cwtl
in
xor
lock
cmp
stos
into
mov
adc
aad
push
and
mov
orb
std
xchg
lods
mov
mov
mov
mov
mov
sbb
sub
ljmp
mov
dec
leave
adc
dec
test
popa
jmp
stos
cmp
dec
clc
mov
rorb
leave
negb
mov
jnp
ljmp
les
mov
push
ss
pop
les
das
push
push
mov
insl
and
and
ficoms
addr16
lea
loop
jbe
in
xlat
mov
test
push
movsl
pop
test
push
mov
pusha
ljmp
test
mov
and
push
jl
je
mov
xor
push
mov
fadds
jns
cmp
push
out
loope
mov
inc
push
mov
movsl
out
mov
rcr
xchg
pusha
jl
push
sub
sbb
inc
shr
xchg
mov
mov
mov
and
notb
ja
adc
enter
xchg
stos
adc
rol
inc
push
inc
bound
cld
jo
jge
jecxz
cmp
insb
jb
jmp
pop
sbb
pushf
jecxz
mov
mov
fdivl
jle
aaa
das
aas
and
cld
sahf
sbb
mov
call
push
test
out
push
push
or
xor
xlat
stc
test
scas
xchg
inc
add
and
dec
mov
mov
inc
cmp
add
out
mov
scas
mov
or
jbe
arpl
insl
repz
loop
cmp
test
scas
lods
out
mov
je
xchg
fwait
mov
adc
sub
push
sbb
lods
int
adc
stc
call
pop
ficoml
lock
xor
xor
cmpsb
and
and
test
ret
adc
scas
xchg
cmp
sub
mov
xor
pop
rcl
sbb
pop
popf
stos
xlat
sbb
mov
pop
ret
fidivl
or
movsb
lds
sub
cmc
lcall
or
dec
pop
push
adc
lret
fidivs
cmp
dec
and
add
arpl
lods
sahf
jl
pop
outsl
mov
lds
mov
adc
dec
adc
add
pop
cmpsb
cli
mov
mov
or
inc
xchg
inc
aas
inc
lahf
jmp
push
xchg
stos
mov
test
mov
ss
jmp
adcb
test
dec
push
inc
mov
xor
mov
sahf
nop
lods
popf
pop
clc
js
addr16
ror
sbb
mov
adc
fisttps
sbb
add
mov
arpl
sub
leave
arpl
push
int
mov
jl
nop
aam
pop
fs
hlt
jbe
mov
add
xchg
ret
mov
bound
pop
and
dec
sbb
dec
pop
dec
and
sbb
cli
in
lods
sbb
pop
add
cld
bound
inc
out
leave
in
mov
cmpb
fldt
pop
std
mov
dec
cmp
loopne
or
mov
jle
sub
aaa
pop
loop
mov
adc
push
mov
movsl
scas
mov
cli
cmp
mov
inc
ja
mov
inc
hlt
outsl
mov
mov
jle
pop
les
daa
stc
lock
push
js
pop
aaa
sti
int
insl
lret
inc
ret
popf
mov
xchg
xchg
fmull
lds
adcb
ret
pop
cmp
xlat
add
pop
xchg
xchg
inc
cmpsl
xlat
jno
fldcw
adc
dec
int
push
add
dec
or
loop
cmpsl
pop
mov
lret
ficomps
xchg
imul
lret
out
bound
sub
or
pop
inc
orb
fxch
xchg
clc
sub
daa
test
inc
inc
push
and
xchg
shll
arpl
scas
cmp
rorl
inc
and
and
mov
cmp
push
mov
test
mov
in
mov
jae
pusha
push
push
scas
push
pop
mov
or
aam
lcall
mov
aad
packssdw
andb
mov
insb
stos
adcl
mov
add
mov
pop
in
jne
adc
shll
mov
lods
repnz
es
test
mov
dec
test
dec
fs
jo
mov
outsl
stos
or
add
rcrl
dec
nop
fcoms
xchg
out
idivl
insb
icebp
in
pop
xchg
loope
jmp
pop
scas
rcrb
outsb
sbb
jae
adc
pop
push
jl
jnp
mov
mov
int3
scas
xchg
push
sub
cmp
add
or
test
sbb
jecxz
xor
insl
adc
or
incl
push
push
ss
imul
mov
inc
or
insb
xchg
jg
cmp
push
add
and
cmp
jns
dec
je
loopne
out
rorb
xchg
mov
neg
pop
addl
xchg
dec
pop
ds
xchg
jge
and
jg
jmp
into
inc
adc
fnstcw
mov
in
aad
cmp
push
mov
sbb
aad
jle
rcll
xchg
in
add
push
shlb
mov
mov
out
sbb
dec
xor
cmpsl
jae
into
jp
dec
mov
mov
push
test
add
mov
sub
push
adc
fstps
ficomps
pop
push
xchg
movsl
mov
repnz
sub
popa
addl
div
mov
test
iret
and
sbb
scas
add
push
adc
jne
adc
xchg
or
sbb
push
add
adc
sub
sub
or
and
test
scas
into
xchg
or
mov
or
sub
mov
push
inc
cli
test
and
in
push
xchg
jl
fcmovnbe
mov
fadds
call
sti
and
jbe
sbbl
movsb
mov
mov
pushf
add
jns
mov
pop
or
test
xor
rcr
stos
adc
sub
jl
test
mov
adc
push
push
gs
jns
dec
cmp
push
stos
lret
cmp
nopl
adc
and
mov
sbb
imulb
jle
orb
ss
jno
and
js
sbb
xor
jecxz
pushf
cmp
fs
stos
ficomps
sbbb
outsl
jg
leave
popf
dec
add
and
mov
add
nop
mov
xchg
lcall
imul
test
out
push
sbb
in
shrl
out
cwtl
imull
inc
adc
dec
movsl
adcl
leave
push
sbb
pop
sbb
xchg
sahf
jp
je
jns
imul
cmc
rorb
mov
mov
inc
sarl
shl
and
jnp
inc
ja
jnp
movsb
jnp
js
test
push
inc
movsb
das
sub
ss
add
dec
push
xor
inc
jno
xor
std
sbb
mov
mov
sbb
push
stc
or
push
aam
jae
nop
fiaddl
dec
aaa
inc
and
scas
and
dec
outsb
dec
push
test
push
mov
xchg
fiadds
cmp
roll
rcll
jnp
inc
cmp
dec
mov
dec
xor
sub
scas
out
xchg
je
mov
add
imul
scas
int
or
sbb
into
lock
rorl
pop
lds
shll
ds
imul
lock
movsb
pusha
movsb
movsl
add
lahf
mov
dec
fstps
pusha
push
inc
je
dec
ja
insl
xor
sbb
out
sub
insl
std
out
call
jae
xchg
xchg
push
sbb
pusha
xor
jb
adc
cmp
out
ds
xchg
mov
mov
mov
sti
mov
js
xchg
aaa
dec
movsl
mov
cmp
cmp
stos
sub
pop
subl
hlt
mov
mov
aas
mov
rcrl
or
mov
mov
or
sti
push
adc
mov
int
or
jns
movsb
jmp
jl
out
mov
sub
pop
mov
inc
imulb
pop
cwtl
xchg
xor
sbb
jmp
icebp
outsl
pop
pop
xchg
dec
sbb
xor
es
test
add
clc
sbb
das
aaa
jmp
inc
fisubs
mov
dec
in
inc
and
hlt
mov
cmp
cmpsl
xchg
push
loope
aad
jp
xchg
dec
and
dec
xchg
push
insb
lcall
ret
push
imul
inc
sbb
dec
pop
sbb
ds
dec
lret
mov
aas
or
add
stos
movl
addr16
into
out
fmuls
in
adc
test
bound
pop
dec
sub
scas
ljmp
jns
and
dec
mov
cwtl
outsb
out
rorl
es
mov
add
push
rep
jg
ror
movsb
cli
sub
push
int
push
imul
int3
inc
loopne
outsb
add
or
inc
sub
pop
jne
sbb
sti
enter
pop
mov
ljmp
add
mov
lcall
mov
jl
out
leave
filds
pop
add
rcrb
inc
lahf
pop
cli
mov
lods
mov
mov
test
inc
sti
aaa
mov
mov
adc
aad
mov
movsb
in
or
mov
nop
cmp
adc
inc
mov
push
call
pop
cmc
loop
in
aam
pop
sti
or
mov
stc
xor
in
xchg
inc
test
or
jecxz
icebp
lret
imull
sbb
lret
push
xchg
aas
push
outsb
imul
out
jmp
jo
jle
inc
data16
cs
int
icebp
cmp
outsb
and
hlt
in
orb
pop
adc
xor
fcomps
repnz
dec
das
adc
rcr
loope
test
jge
xchg
sbb
adc
cltd
xor
inc
out
push
ds
pop
adc
xchg
mov
pop
outsb
idivl
jp
pusha
in
imul
push
das
and
add
fisubrl
pop
lods
mov
nop
movsb
jmp
addr16
sbb
push
aaa
jmp
mov
mov
xchg
addb
test
fs
stos
jg
aam
out
out
mov
cltd
xor
cltd
call
dec
jmp
xor
cmp
push
imul
pop
fcmovnu
jge
ss
inc
mov
aas
stos
scas
aam
gs
xor
cmp
lods
xchg
in
xorl
dec
pop
inc
inc
into
dec
xor
outsb
fsubs
inc
stc
pusha
xchg
adc
mov
mov
or
and
adc
lahf
and
cmp
inc
inc
jnp
lock
inc
xchg
pushf
and
mov
mov
cmpsb
and
cld
fdivr
pusha
enter
mov
gs
jo
push
adc
mov
xor
arpl
jnp
jne
xlat
pop
ds
test
mov
xchg
push
in
lock
into
shll
mov
imul
push
stos
dec
sbb
inc
scas
clc
loopne
aam
adc
and
xor
sub
stos
aas
cmp
adc
call
mov
out
das
push
jnp
arpl
cmpb
add
xchg
adc
pop
push
repnz
loopne
xor
push
add
cmc
jmp
les
lea
dec
popa
add
xorb
aam
xor
in
mov
daa
or
jecxz
shll
cwtl
jge
cwtl
xlat
mov
dec
pop
inc
mov
mov
ret
repz
ret
sub
sahf
mov
test
push
test
lcall
sub
mov
repnz
std
nop
movsl
xchg
mov
jecxz
adc
outsb
xor
popa
sub
imul
loopne
xchg
lock
mov
cmpsb
lret
dec
aad
fbstp
fs
nopl
mov
sbb
das
in
aaa
mov
lock
rorb
push
or
push
lcall
mov
pop
lds
and
lods
add
ss
push
jecxz
xchg
ret
xlat
fidivs
lret
inc
xor
sti
mov
fxch
adc
xchg
xor
movsb
or
stos
push
dec
stos
adc
inc
pop
clc
jp
mov
test
adc
lret
fstpt
pushf
xchg
cmp
mov
mov
ror
sub
das
dec
shr
loopne
ljmp
jmp
js
movsb
mov
push
sbbl
pop
fsubrp
mov
adc
dec
cltd
sbb
ficompl
jne
push
stos
mov
push
push
insl
fdivrs
pop
jmp
inc
cmpl
scas
mov
push
test
push
dec
push
out
jae
mov
lcall
inc
jecxz
mov
dec
dec
inc
or
or
inc
cmpsb
iret
in
mov
movsb
jnp
pop
dec
dec
mov
mov
ret
mov
dec
and
dec
fisubs
int3
sar
mov
cld
mov
dec
dec
shll
ret
mov
in
xchg
div
hlt
mov
fcompl
dec
xor
lahf
mul
mov
pop
loop
add
mov
xchg
out
xor
xchg
push
mov
mov
and
pop
shl
mov
daa
pop
or
xor
scas
jge
fdivrs
imul
mov
push
out
movsb
sti
arpl
pop
aas
jle
cmpb
xchg
sar
dec
mov
cmp
scas
adc
pusha
outsl
dec
dec
pop
inc
adc
xchg
sub
cmp
cmpsl
dec
jns
lock
cwtl
in
sub
dec
dec
call
push
xchg
add
adc
sbb
int3
push
or
out
jnp
pop
sbb
add
pop
rorl
sub
and
cmp
cmp
repnz
pop
mov
loopne
jmp
lods
xor
lcall
xor
xor
int
bound
sub
sub
sbb
rol
jmp
add
fists
inc
outsl
adc
mov
iret
xor
mov
dec
jns
fadds
and
fidivrl
aad
jle
mov
or
cmpsb
xchg
sub
jae
ret
xchg
cmp
and
inc
sub
rcl
leave
xchg
iret
push
xlat
idivb
das
lds
mov
jne
sbb
aad
jp
sqrtps
out
hlt
cmpsb
xchg
xchg
or
out
sti
xchg
cwtl
mov
xor
arpl
das
imul
shrl
inc
mov
test
xchg
pop
jne
mov
test
push
dec
pop
mov
push
xorb
or
loopne
insb
int3
int
inc
stos
xor
pusha
aad
lds
jmp
dec
dec
bound
sahf
stos
sbb
add
lods
sahf
inc
xchg
jecxz
mov
sub
pop
shll
scas
adc
lods
test
mov
push
es
pop
or
xor
fcoms
xlat
cld
fists
adc
adc
xchg
dec
lahf
dec
in
push
mov
pop
mov
dec
lea
or
cmc
or
mov
scas
add
insl
xlat
imul
addl
aam
cmp
pop
arpl
fstl
test
addb
fsubrp
cmc
inc
pop
pop
add
scas
adc
mov
pop
xchg
or
out
cli
cmp
jl
and
in
add
and
inc
jecxz
or
clc
sarl
enter
insb
jnp
cmp
in
loope
cmp
adc
and
fstpl
pop
pop
pop
popf
lods
leave
jb
out
std
in
into
fstp
int
cmp
push
or
dec
pop
pop
dec
scas
mov
sahf
out
std
in
into
fstp
int
cmp
push
or
dec
pop
pop
dec
scas
mov
sahf
lea
in
into
fstpl
int
cmp
push
or
jge
insl
dec
pop
mov
mov
popf
mov
in
into
fstpl
cs
push
jp
cmc
notb
mov
cmpsb
mov
les
aad
movsb
lret
mov
mov
push
push
jbe
data16
inc
adc
in
hlt
xchg
les
mov
test
mov
push
dec
push
push
jbe
addr16
add
adc
inc
cmpsb
xor
xchg
out
mov
cmpsb
ss
es
adc
jo
mov
out
mov
stos
mov
cmp
out
or
mov
mov
out
aaa
imul
imul
stc
add
xor
add
int3
lods
cld
popf
iret
and
dec
xor
sbb
cltd
iret
mov
fs
inc
subl
rolb
mov
xor
sahf
mov
test
loope
xchg
idivl
mov
int
in
and
adc
jnp
or
dec
push
fwait
movsb
lea
push
inc
cltd
mov
pop
or
insl
inc
jb
xchg
jno
arpl
xchg
insb
ds
dec
xor
jle
push
xchg
mulb
push
ss
inc
push
push
push
sbb
es
lds
xchg
add
roll
inc
add
loope
aaa
lock
pop
xor
jge
mov
mov
xchg
in
andl
push
push
subl
rcll
shrb
out
test
xchg
ss
inc
push
push
jbe
data16
add
adc
in
hlt
xchg
les
mov
test
xchg
ss
inc
push
push
jbe
data16
add
adc
in
mov
es
out
enter
sbb
pop
movsb
dec
int
in
mov
sub
das
jp
and
xor
xchg
inc
cmp
adc
aam
fstpt
cmp
adc
xor
push
mov
cmp
push
outsl
cmp
mov
xchg
ds
mov
mov
je
cmp
add
jne
mov
ret
into
fistps
outsl
repz
push
jmp
jl
sub
imul
sub
out
push
fdivrl
mov
mov
lea
sbb
or
lret
in
mov
fldt
loop
dec
outsb
lret
add
mov
ret
pushf
mov
xor
pop
adc
aas
lahf
fsubrs
or
xchg
dec
popa
cmpsl
mov
shll
sarb
pop
insl
sar
ss
jecxz
adc
mov
mov
test
sub
add
add
xchg
add
ret
repz
pop
jno
test
sub
sbb
fcompl
mov
mov
dec
xlat
and
sub
mov
jmp
test
cwtl
rcrb
mov
rolb
outsb
dec
addr16
iret
scas
adc
sbb
shlb
js
push
rcll
lcall
xor
mov
pop
inc
jg
inc
push
xchg
nop
pop
cmp
lret
lret
icebp
clc
lds
aas
cwtl
js
xchg
aad
or
push
test
nop
data16
add
pop
dec
fxch
lds
rcr
lea
iret
imul
cwtl
mov
std
jge
inc
pushf
mov
add
stc
jge
dec
mov
popa
push
push
insb
aas
dec
outsl
push
add
and
int3
mov
movsb
movsb
pop
inc
mov
out
insb
push
imul
mov
sarb
in
mov
mov
enter
adc
outsb
pop
or
push
push
pop
push
aam
dec
cltd
jo
push
imul
in
jne
xor
clc
sahf
out
call
xchg
inc
sahf
in
data16
mov
dec
sbb
test
xor
mov
cwtl
out
aaa
decb
out
xor
je
nop
cmc
cltd
jecxz
inc
sbb
sub
pop
xchg
icebp
addr16
insl
int3
repz
or
cmp
jae
cmp
sbb
lods
adc
and
xchg
adc
pusha
dec
fdiv
cmc
mov
cmpl
popa
ljmp
aad
ljmp
hlt
xor
out
scas
cmp
sub
roll
mov
sub
or
push
insb
or
aam
jg
push
push
or
movlps
push
xchg
jo
outsb
mov
aas
mov
xor
cwtl
mov
dec
inc
mov
dec
add
cmpsl
push
aam
loop
mov
inc
iret
cmp
imul
dec
mov
pop
mov
jne
pop
jl
fldt
arpl
mov
loope
xlat
cmp
stos
fldl
push
xor
cmc
add
push
scas
dec
inc
dec
movsb
out
mov
push
push
push
sahf
mov
pushf
sub
jecxz
xchg
jp
popa
cmp
add
fwait
hlt
and
and
stos
daa
inc
xchg
lds
mov
bound
adc
call
icebp
add
mov
movsb
dec
movsb
mov
movsl
int3
jge
push
aas
xchg
sbb
inc
icebp
mov
add
xor
loop
lret
mov
bound
enter
shr
cmp
lods
fstps
cmp
or
jne
inc
addl
or
mov
pop
mov
pushl
adc
stos
loope
stc
jg
xlat
dec
aaa
fwait
xor
dec
or
add
pop
xorb
lcall
aad
sbb
cmp
daa
data16
pop
shll
jbe
mov
clc
incl
out
in
scas
inc
cmp
pop
movsl
and
inc
data16
hlt
insb
mov
jge
rorl
xor
mov
xchg
cs
addr16
mov
push
and
adcl
lods
data16
adc
sub
dec
adc
jne
mov
fldt
or
ljmp
jns
xchg
insl
inc
push
and
movsb
mov
sub
cmp
mov
rclb
fwait
sbb
shlb
xchg
mov
jg
addr16
pop
pop
xlat
outsl
cmc
xchg
movsl
inc
dec
in
and
shll
hlt
add
rclb
in
inc
dec
jae
loop
cmp
pop
cmp
lcall
out
pop
mov
mov
push
pushf
jl
dec
mov
rorb
add
xlat
pop
gs
xchg
push
inc
push
cwtl
push
outsb
fdiv
repnz
and
fcoms
jl
sbb
sub
or
outsl
sub
pop
and
jge
loop
shrd
lock
stos
repz
mov
dec
ja
mov
rorb
and
cmp
ds
add
scas
das
pop
test
stc
enter
pop
pop
pop
jne
adc
dec
enter
push
xchg
mov
rorl
sub
mov
pop
mov
std
fdivrl
xchg
jb
shr
shlb
iret
pop
jne
test
cmp
adc
dec
lods
call
mov
mov
cmp
lea
jmp
lock
arpl
lea
mov
adc
sub
ficomps
push
inc
xchg
adc
je
cmp
xor
ficomps
xchg
adc
sbb
and
outsw
jp
xlat
cmp
repz
and
pop
je
arpl
xchg
dec
xchg
push
rcrb
stc
sbb
jmp
jne
gs
test
stos
and
sbb
dec
pop
shr
mov
mov
dec
jl
add
je
icebp
hlt
andl
aad
lret
pusha
and
cmc
iret
pop
out
add
popf
out
and
addr16
xchg
std
das
test
out
iret
call
mov
inc
xor
jne
mov
mov
int
jno
insl
inc
js
or
outsb
jno
and
scas
hlt
sbbb
xchg
xchg
loop
aaa
mov
fldt
xlat
inc
imul
js
push
mov
ficompl
test
and
fiaddl
jle
xchg
and
sub
popf
imul
mov
mov
jns
rep
jmp
fdivrl
adc
inc
inc
cmp
in
cltd
jle
add
sub
out
std
sbb
sub
pop
insl
outsb
mov
mov
fidivl
mov
add
xor
pop
mov
sbb
cltd
push
inc
jb
repz
arpl
sub
mov
xchg
xor
mov
inc
mov
xchg
stc
insb
adc
or
les
push
add
lahf
and
cmpb
shrl
lahf
xor
cli
mov
fstpl
push
fs
mov
dec
iret
movsl
leave
adc
mov
cmp
sbb
mov
movsl
xor
les
mov
jecxz
sahf
popl
dec
in
cmp
lds
repz
mov
mov
cmpsb
test
and
sub
ljmp
cltd
cmpsl
lods
jns
mov
push
cmp
movsb
out
xchg
cld
dec
mov
testb
sub
push
out
clc
fs
mov
xor
lcall
or
and
mov
and
lret
cli
lock
enter
rolb
ljmp
sub
or
jp
mov
idivb
dec
mov
js
repz
mov
mov
and
jno
repnz
adc
dec
jl
xchg
std
pop
xor
mov
fcompl
xlat
repz
mov
arpl
imul
push
xor
cmpsb
shrl
sbb
jecxz
out
and
rcll
ret
popa
ss
aad
dec
sarb
xchg
sub
cmp
mov
ret
lcall
insl
jp
lret
enter
mov
dec
notb
pop
dec
rol
cli
push
sti
aam
jmp
testb
mov
push
lret
icebp
sub
movsb
daa
into
jp
push
adc
and
or
cs
inc
bound
and
xchg
pop
data16
mov
mov
in
daa
add
jns
popf
sub
dec
or
fldt
inc
sub
int3
adc
xchg
add
lds
fmul
mov
scas
aad
outsb
inc
push
inc
push
fcomps
push
dec
sbb
add
clc
xchg
clc
pop
dec
stos
adc
jle
push
int3
pop
rolb
inc
rcrb
int3
fldt
cmp
popf
xor
push
fisttps
xchg
setle
xor
cmp
mov
cltd
add
add
sbb
pop
int
sub
outsl
mov
ret
mov
mov
mov
inc
xor
std
aam
or
addps
test
data16
sub
sbb
sbb
call
xor
mov
mov
push
in
mov
jmp
mov
sub
sbb
scas
jge
xor
loope
dec
sti
shrb
mov
call
sbb
orl
or
insl
icebp
loope
xchg
add
push
sbb
pusha
in
sub
mov
inc
test
lea
outsl
in
jns
mov
clc
cmp
cmpsb
jne
repz
xor
std
cmp
push
in
jg
lea
or
jecxz
lods
sub
mov
int3
ds
pop
pop
mov
fwait
test
mov
and
clc
sub
scas
push
stos
test
sar
stos
adc
cmp
pop
and
pop
shl
push
push
rcrb
xchg
rorb
lods
fildl
pusha
mov
xchg
mov
ds
repz
in
xchg
push
arpl
cmp
adc
flds
fstpt
xor
cmp
das
shll
int3
in
inc
out
andb
and
outsb
insb
mov
sbb
push
mov
xchg
in
xchg
jl
sub
mov
pusha
mov
inc
out
inc
hlt
test
and
loop
xchg
push
mov
mov
cli
cmp
pop
enter
popa
push
aam
push
aam
mov
sub
add
xor
inc
push
or
enter
dec
cld
pop
mov
sbb
jno
push
xchg
ret
loop
jl
sub
aad
inc
sbb
and
mov
add
and
lea
insb
ret
pusha
pop
movsb
imul
imul
daa
add
dec
add
daa
shrb
and
nop
fisubs
mov
mov
call
lds
pop
mov
adc
inc
mov
shll
push
lcall
fadd
pop
lcall
sbb
sub
pop
dec
lea
inc
mov
adcb
ret
and
and
out
das
repz
loopne
and
pop
lods
xchg
jae
or
mov
mov
xchg
int3
jecxz
xor
and
hlt
loop
aad
mov
sub
pusha
mov
inc
xlat
fstl
in
mov
mov
mov
or
mov
jecxz
xchg
mov
xchg
lods
pop
and
lods
cmpsl
into
mov
dec
sarb
fwait
xchg
xchg
mov
iret
add
jmp
mov
add
mov
call
add
roll
in
sub
cld
adc
dec
xorb
jge
dec
push
mov
outsl
hlt
and
mov
adc
add
leave
mov
pusha
jne
imul
scas
add
add
stos
scas
sub
fwait
outsb
dec
jne
int3
jne
mov
add
push
fstp
aaa
bts
out
fdivrl
add
jmp
push
loop
dec
das
pop
es
mov
nop
outsl
hlt
add
inc
rcrl
pushf
cmp
xchg
mull
rclb
outsl
inc
cld
add
rcll
mov
jmp
mov
in
and
stos
pop
mov
add
xlat
fisttpl
and
mov
mov
mov
pushf
sbb
jecxz
push
dec
add
fisubrs
iret
call
shrb
xlat
test
mov
or
mov
shl
loope
adc
cmp
out
sahf
test
pop
jne
inc
jmp
sbb
faddl
sub
loopne
in
inc
vorps
pop
push
insl
scas
add
add
mov
das
inc
mov
fildl
dec
sbb
negl
pop
mov
out
push
jecxz
adc
ret
stos
shll
movl
inc
loopne
insb
test
adc
aaa
out
cli
orb
push
jnp
std
inc
aad
pop
xchg
inc
scas
js
cmp
ljmp
out
push
adc
shll
outsl
out
fwait
rorl
in
ss
sub
lea
pop
stc
stos
xchg
and
cs
and
adc
rcrl
xchg
push
ret
inc
lcall
sbbl
sub
scas
lret
daa
jmp
mov
sub
push
insb
add
adc
mov
fsubl
in
dec
int3
pop
dec
lods
bound
and
and
mov
mov
pop
jecxz
push
inc
pusha
cmpsl
out
adc
sbb
adc
pop
test
inc
xlat
xor
xchg
cli
push
ds
mov
mov
int
js
lcall
or
imul
xor
ljmp
cmp
shrw
aad
or
bound
popa
push
adc
jmp
cltd
fsubs
xor
push
pop
jp
rcll
inc
xor
outsl
pop
cmp
jecxz
ljmp
jmp
andb
push
pushf
or
clc
mov
int
andl
fdivl
add
sarb
mov
xor
fimuls
negb
subl
mov
loopne
or
rcll
sub
mov
fisubs
insb
inc
nop
test
js
lea
sub
jns
xor
xor
out
jb
xchg
imul
std
pop
loope
lods
push
cmp
sub
bound
sahf
aas
les
xorl
iret
lds
stc
cli
mov
fs
mov
fisubrs
xor
ficoml
mov
and
pop
jne
cmpl
add
ja
in
push
cli
or
aas
add
push
ret
pop
jnp
std
sbb
repnz
jp
jbe
or
lods
jns
adc
cmp
fucomip
or
aas
xchg
cltd
xchg
movsb
shrb
leave
or
sub
lret
movsl
ljmp
mov
mov
jno
xchg
fldl
jge
mov
xor
push
scas
enter
sti
sub
cmp
cmp
mov
pushf
fwait
xchg
insl
xchg
sub
sahf
jmp
inc
pop
xor
mov
pop
negb
dec
mov
into
data16
dec
aam
cmpsb
ljmp
loop
cmp
adc
test
call
push
sbb
fwait
mov
push
push
addr16
aam
pushf
call
dec
out
sti
xlat
jl
test
pop
das
push
push
or
dec
stos
shll
daa
xchg
repz
mov
dec
in
fmull
ss
ds
lods
xor
adc
data16
shrl
shl
aas
xchg
jle
add
scas
decb
push
insl
cmc
push
decl
mov
dec
int
std
sub
cld
fs
jmp
xchg
div
jmp
pop
inc
pop
test
negb
pop
xor
push
inc
lods
sbb
push
adc
push
sbb
insl
fpatan
xlat
sbbb
and
adc
cmp
fnsave
daa
jg
xchg
inc
fdivl
cltd
call
cmp
jne
out
sarl
inc
mov
scas
dec
jae
cwtl
hlt
push
inc
pop
outsb
jno
outsl
testb
aaa
or
push
add
add
sub
cmc
push
pop
sahf
sbb
int
inc
push
ret
aaa
adc
push
pop
and
div
adc
subb
sti
push
inc
push
sbbl
scas
push
mov
lock
mov
push
inc
sub
jecxz
cmp
icebp
and
and
orl
out
andb
push
push
mov
outsl
sbb
jne
mov
add
lock
arpl
subl
sahf
jb
jmp
imul
movsl
sti
mov
int3
add
mov
sub
aas
dec
push
pushf
insb
mov
xchg
notb
ret
mov
mov
cmp
xchg
mov
jo
aam
cmp
or
and
test
repz
arpl
push
cltd
add
inc
in
mov
out
pusha
dec
pop
inc
sub
mov
sub
push
out
pusha
leave
cltd
xor
sbb
pop
arpl
loope
push
dec
in
push
sbb
imul
lcall
aaa
inc
mov
push
sub
pop
jno
add
push
popa
out
ret
pop
into
rorb
pop
mov
sbb
sbb
ja
cmp
jns
push
data16
lods
mov
aas
ret
loop
inc
xchg
or
shll
call
fmul
mov
popf
jns
inc
enter
div
cwtl
fs
mov
dec
lods
mov
inc
pop
test
fistl
fcompl
push
fdivrl
sub
sbbl
push
loop
leave
sbb
fmuls
mov
cmp
sub
xchg
rcrb
arpl
push
dec
add
inc
leave
sub
fimuls
sub
std
mov
cmp
xlat
sub
in
pushf
lds
mov
ds
mov
scas
sub
popa
out
adc
push
fdiv
jmp
push
std
push
ljmp
jo
lds
sub
out
daa
inc
mov
and
ds
mov
mov
mov
call
aaa
fcomi
pop
sub
ficompl
cmp
push
mov
jmp
nop
mov
dec
ja
gs
js
lds
jl
dec
mov
testl
sbb
mov
xchg
movsb
fwait
push
std
lahf
clc
dec
pop
jg
jg
lods
and
mov
movb
sub
js
mov
pop
pop
cld
lret
cltd
push
fildl
mov
lret
fadds
inc
rcl
loopne
repnz
repnz
push
into
jmp
cld
hlt
cmc
push
test
inc
cwtl
fstl
cwtl
pusha
scas
adc
outsl
test
cmp
pop
ror
xchg
sub
icebp
int3
jl
shll
hlt
clc
in
call
xchg
ljmp
sti
or
cwtl
aaa
int3
outsl
pop
jmp
fisubrs
push
inc
cmovbe
bound
roll
mov
add
mov
das
nop
push
sbb
mov
sbb
bound
pop
mov
cmp
fdivrl
xor
add
fwait
lahf
out
cwtl
cltd
lock
inc
sbbb
stc
movntps
in
fs
lret
mov
or
dec
xor
movsb
test
and
add
push
jg
pop
adc
xor
jns
dec
fcomi
and
xchg
jmp
cmp
and
cmp
les
and
cmp
or
and
enter
loopne
cmc
aaa
js
dec
mov
xchg
test
inc
inc
bound
cmc
mov
pop
pop
pop
push
mov
xchg
jge
enter
shl
dec
out
out
out
lret
out
mov
scas
fdivrl
pop
test
sbb
out
out
push
add
std
popf
mov
adc
out
and
push
call
sbbl
push
and
mov
adc
adc
jno
imul
cmp
orl
pop
jno
adc
ljmp
fistl
xchg
mov
xor
andb
jnp
int3
push
pop
and
inc
xlat
ficomps
jl
jge
inc
xor
sub
inc
cmp
xchg
add
fcomps
sbb
mull
push
or
mov
mov
jbe
sub
add
orl
xor
loop
push
inc
or
xor
movsb
orb
ja
push
push
fimuls
lea
and
ror
xor
add
insl
insb
mov
ss
mov
scas
push
adc
scas
shll
sub
push
lock
inc
dec
je
dec
ds
pop
and
jp
mov
in
jb
mov
imulb
adc
dec
mov
roll
loopne
push
loop
push
jnp
add
aaa
ficomps
inc
testl
aas
dec
fisubs
or
ljmp
dec
ret
push
xor
add
and
jp
orb
push
test
int
cwtl
jb
xlat
mov
cs
sbb
jl
mov
subb
in
sbb
dec
jge
push
mulb
or
fisubrl
inc
iret
nop
or
daa
cmc
fdivl
jbe
ds
inc
jmp
iret
mov
xor
test
shll
pop
aaa
add
scas
mov
hlt
test
movsb
out
test
xchg
ss
inc
push
push
jbe
data16
add
adc
in
hlt
xchg
les
mov
test
xchg
ss
inc
push
push
jbe
data16
add
adc
loopne
cli
xchg
faddl
add
aaa
gs
inc
pop
pop
jbe
data16
or
cmpsb
adc
movsb
out
push
add
push
leave
mov
pop
out
dec
scas
jl
insb
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
mov
movsl
icebp
xchg
loope
mov
repnz
xor
inc
add
xor
inc
mov
movsl
rcll
imul
adc
add
adc
fsubs
mov
cwtl
fldcw
ljmp
and
and
mov
loopne
rcrb
leave
pop
sbb
mov
mov
call
sarl
dec
mov
iret
icebp
cmp
jle
inc
xchg
push
jne
jge
adc
fstl
pop
mov
mov
fbld
mov
mov
out
push
inc
gs
xchg
out
add
mov
test
mov
xchg
lea
mov
jne
and
lcall
ds
test
xchg
add
roll
mov
mov
shlb
mov
inc
fnstcw
mov
mov
push
xchg
mov
scas
xor
pusha
sbb
rcll
rcll
rcll
testb
inc
dec
mov
jecxz
add
sbb
mov
test
mov
int3
mov
add
insb
jge
adc
and
lock
hlt
jecxz
in
out
fnstsw
inc
jae
jo
bound
sub
and
mov
vcvttpd2dq
xchg
and
push
xor
popa
add
xor
inc
shll
loope
xchg
cmc
and
push
xor
popa
add
xor
inc
shll
mov
jbe
lods
mov
repz
cli
mov
jo
jl
jl,pn
and
scas
ja
idivb
sbb
repnz
pop
xor
push
mov
jp
mov
out
jb
cld
push
imul
mov
or
sub
push
test
std
std
sub
das
gs
mov
in
jb
mov
add
push
test
loopne
cmc
shll
loope
mov
and
mov
mov
sbb
xchg
test
jmp
pop
dec
mov
int3
mov
jg
gs
sub
sbb
push
inc
rcrb
push
and
mov
rcrl
mov
cmpsb
stc
push
pop
lcall
sbb
repz
jns
sub
loopne
xchg
mov
add
or
push
push
daa
out
outsl
outsl
lods
sbb
push
xchg
bound
fsubrs
mov
fmulp
cmpsb
inc
xor
pop
cld
mov
rclb
and
pop
mov
cmp
ds
movsb
les
outsb
pusha
mov
daa
pop
mov
and
insb
btr
call
inc
sub
jl
xlat
shll
pop
add
imul
sbb
push
jge
std
push
scas
mov
and
push
adc
cmp
push
js
fsubs
test
push
xchg
mov
pop
fdivp
rorl
jbe
call
int
shll
sub
adc
dec
sbb
xchg
mov
xchg
cmp
adc
cmc
adc
mov
cmp
bound
test
pop
dec
jns
std
mov
push
mov
mov
icebp
divl
stc
dec
daa
and
or
add
mov
jg
mov
enter
cmp
leave
fistpll
inc
mov
pusha
adc
push
ljmp
lock
mov
es
inc
sar
pop
bound
mov
rcll
iret
cmp
push
lea
pop
rorl
scas
xlat
mov
cld
ret
add
enter
das
dec
nop
push
sbb
mulps
addl
test
popa
push
xor
cmp
lret
ljmp
incb
or
push
ss
aam
decb
ljmp
pop
iret
jae
and
adc
imul
out
aas
int3
nop
repnz
shrb
cltd
cmp
test
fsin
fsubrp
fnstsw
push
pop
out
sbb
stos
sub
or
jmp
lods
push
scas
pop
jne
dec
xchg
xchg
cmpsb
movsl
loopne
jbe
ja
icebp
xor
dec
fidivl
pop
mov
pushf
or
mov
sbb
jecxz
xor
lret
jge
or
pop
insl
ljmp
shll
in
and
adc
lods
mov
xchg
stos
xacquire
mov
push
int3
add
fwait
cmc
cltd
shll
in
ss
mov
cmp
cmp
pushf
dec
cltd
sbb
subl
je
pop
lock
sub
data16
fsubrl
negb
or
or
push
cmp
jno
sbb
dec
dec
mov
int
jmp
push
cmp
xor
stos
lea
mov
out
imul
mov
push
dec
jno
xor
xor
mov
mov
and
or
mov
push
dec
in
mov
add
push
cld
dec
mov
loopne
cs
mov
push
rorb
or
cltd
cwtl
imul
pop
sbb
imul
xor
out
adc
inc
test
sar
test
push
fimuls
mov
loopne
inc
mov
not
dec
add
push
subb
in
cltd
mov
add
dec
mov
jno
or
testb
shll
mov
lcall
inc
xchg
pop
or
pop
mov
lea
out
sub
cmp
aaa
data16
jo
jp
push
xor
bound
cmp
leave
cltd
jns
inc
mov
xor
cmp
pop
fs
mov
lahf
jb
mov
jge
stc
dec
add
push
popa
cmp
cs
cmpl
mov
xchg
repnz
inc
pushw
jle,pn
inc
jmp
mov
out
mov
and
in
mov
push
mov
test
xor
mov
int
or
dec
cmp
and
outsb
cmp
mov
or
mov
inc
cwtl
icebp
sub
mov
xchg
inc
cmpb
jo
pop
faddl
lcall
jo
xor
mov
jb
jb
cmp
pushf
mov
mov
fadds
ds
or
inc
mov
out
lahf
mov
lock
or
rolb
lods
cmp
cltd
add
jne
cmp
enter
inc
lcall
in
stc
adc
pop
loopne
inc
pop
dec
push
xor
lock
and
leave
xchg
xlat
iret
cmpsl
movsb
mov
xchg
mov
ds
mov
dec
cmpsl
movsb
jb
or
and
insl
sbb
or
imul
sahf
inc
sbb
sub
mov
mov
in
pusha
push
cli
data16
jg
movsl
fdivl
popa
sti
dec
mov
push
push
dec
dec
jg,pt
popf
ja
test
mov
ss
xor
fcompl
jb
lods
fdivl
xchg
pavgw
inc
mov
pop
out
in
or
mov
push
push
mov
in
jnp
xchg
std
mov
in
mov
push
repnz
lds
xchg
add
lea
inc
icebp
ja
cld
push
fwait
in
cmp
aas
and
or
out
pop
push
add
rcr
mov
xor
cmc
cmpl
push
mov
inc
imul
push
adc
loop
inc
mov
adc
cwtl
pop
sarb
inc
jae
lret
jo
imul
adc
mov
add
div
sarb
les
mov
adc
inc
mov
mov
sub
fidivrs
adc
movsb
mov
loope
test
fwait
xchg
cmp
out
movsl
xchg
ret
in
mov
xchg
pop
cs
jg
xor
mov
mov
es
mov
and
xor
notl
sbb
jmp
cmc
push
sbb
iret
add
xchg
mov
das
jmp
test
iret
js
dec
pop
add
ret
test
fwait
jl
xlat
xchg
sub
xchg
fwait
pop
add
popf
sub
out
mov
pop
add
fs
lahf
adc
add
int
ljmp
inc
jl
mov
mov
leave
mov
popf
xor
arpl
sub
dec
mov
scas
arpl
inc
lcall
rcrl
shrb
stos
insb
call
les
jae
sahf
lret
test
fdivl
mov
cmc
cmp
pop
sub
dec
mov
js
call
cmp
ret
mov
mov
imul
pusha
add
cld
xorb
cmp
and
pop
push
add
les
or
mov
add
insb
and
jecxz
cli
pusha
cmpsb
das
lret
inc
xchg
smsw
sub
mov
lods
sbb
xchg
mov
or
inc
add
insl
xchg
mov
push
fistpll
add
pop
jb
enter
fcmovb
xchg
pop
and
adc
dec
adc
xor
hlt
movsl
jae
adc
mov
push
fiadds
or
stc
dec
mov
xor
dec
ja
push
insl
aad
inc
adc
lret
xchg
aad
sub
sub
pop
jmp
insl
out
jae
mov
ljmp
mov
sub
mov
lock
fisttpl
test
adc
mov
mov
ret
outsl
pushf
sarb
hlt
mov
shl
inc
add
adc
mov
hlt
popa
adcb
idiv
cmp
int
dec
pop
test
push
popf
cmpsl
mov
insb
mov
sub
or
adc
or
cwtl
xlat
adc
movsl
inc
adc
dec
imul
rclb
xor
xchg
xchg
das
jb
daa
pop
mov
and
insl
loope
inc
dec
call
mov
or
pop
mov
mov
rorb
push
bound
inc
push
sub
dec
imul
pop
xchg
jl
lret
mov
pop
loopne
mov
aaa
lret
inc
daa
fists
fdivrs
pop
inc
cld
cmp
sub
or
clc
mov
pop
mov
push
in
es
lock
dec
fsubs
mov
jge
mov
lods
dec
fisubl
dec
ret
adc
mov
repz
pusha
add
xor
jae
scas
and
inc
les
jmp
push
pop
dec
cld
frstor
cld
aad
mov
mov
inc
sub
cmp
cli
xchg
clc
cmpsl
das
hlt
in
adc
sbb
ss
popa
cmp
movb
aaa
mov
sub
rcrb
aam
pinsrw
test
push
cmp
pop
pusha
out
xor
push
dec
ja
les
lock
add
int
rcl
lds
popa
lock
insb
or
call
out
andl
js
cmp
loop
dec
mov
ja
rcl
dec
xor
dec
jle
pop
pushf
imul
jecxz
movsb
sub
test
cmp
insl
fwait
lahf
pop
cli
adc
loop
xchg
or
out
add
scas
ja
or
cmpsb
mov
into
rcrb
xor
fnsave
in
lock
cmpsl
icebp
std
add
push
xchg
lods
adc
fists
testl
enter
rclb
push
mov
in
adc
mov
insb
or
cmpb
jb
inc
pop
iret
lds
pop
test
leave
jo
jg
cmc
jne
hlt
and
movsb
not
and
in
sti
dec
inc
lods
stc
dec
dec
inc
jo
imul
and
enter
push
arpl
or
dec
stos
icebp
adc
movsl
rclb
xchg
pop
les
mov
sbb
add
cmp
mov
call
cmp
mov
sbb
inc
jo
ss
rcrb
mov
push
hlt
lods
jns
test
cmp
nop
jl
hlt
sub
fistl
sbb
mov
inc
xor
push
mov
repnz
jmp
adc
mov
xchg
inc
xor
push
test
xchg
sbbl
ficoml
and
lret
nop
mov
fwait
mov
dec
push
xchg
adc
jae
adc
inc
add
or
imul
and
add
push
into
xchg
or
jo
std
and
sub
imul
adc
xchg
fbstp
ficomps
das
leave
or
call
jne
popa
add
fidivrl
sarb
cs
push
add
ror
pop
mov
int
mov
pop
jg
test
xchg
lds
fisubl
dec
cmp
push
lahf
inc
mov
push
ja
dec
mov
ret
jmp
sub
loopne
cltd
sahf
idivl
ficoml
sbb
jns
push
xor
cs
test
pop
data16
repz
daa
sub
and
gs
pop
or
das
ss
outsl
xchg
popa
xchg
push
sbb
xorb
imul
into
int3
cmpxchg
icebp
hlt
inc
fwait
pop
fldt
xor
data16
push
mov
sarb
jbe
loope
ret
pop
repz
mov
js
ljmp
in
adc
jno
fsubrs
inc
movsb
aaa
bound
lods
popf
aam
jg
xchg
stc
test
fnsetpm(287
cltd
iret
sbb
dec
in
mov
cmp
push
cmp
xchg
xchg
jg
fisttps
lcall
push
jo
das
fistpll
pusha
mov
dec
test
mov
mov
inc
pop
mov
lods
pop
out
rcll
or
scas
sbb
adc
incl
pop
fisubrl
pop
pop
rorb
mov
scas
xor
lcall
out
out
sti
sti
jne
mov
dec
or
aas
in
sbb
lcall
lea
iret
shll
inc
jmp
and
lds
pop
mov
in
dec
dec
ss
imulb
inc
pop
nop
addb
or
ds
imul
insl
insb
fwait
icebp
dec
out
mov
jae
test
test
sbb
mov
dec
jp
imul
test
mov
shl
aam
outsl
pop
arpl
and
mov
dec
negb
mov
cmp
fs
ficomps
push
adc
jae
add
mov
cmp
popa
mov
nop
sbb
sbb
sub
outsb
jno
jp
incl
or
dec
je
cmpsl
inc
push
sub
cmp
sub
into
mov
aas
loop
dec
fwait
dec
sbb
or
jo
dec
adc
rcl
mov
or
in
lahf
addl
outsl
arpl
movsl
push
jb
mov
aam
push
fdiv
shl
jo
xchg
lahf
sub
je
rcll
xchg
cmc
or
mov
imul
jnp
out
stos
cli
adcl
or
dec
dec
dec
in
mov
add
mov
pop
xchg
push
xchg
icebp
lock
das
jno
imul
outsl
orb
mov
mov
fstpt
cmp
sbb
mov
mov
and
pop
stc
ds
xchg
shrb
mov
lock
and
in
out
xor
mov
push
fwait
sbb
int
cmp
in
mov
sbb
mov
iret
lahf
sub
xchg
push
mov
leave
insb
fisttpl
mov
dec
mov
sub
jb
pop
xchg
movsb
in
xor
push
and
cmp
mov
fstl
int3
fcoms
or
adc
out
inc
sub
addr16
ss
inc
push
cmp
push
xchg
pop
negl
mov
out
out
inc
push
and
and
jne
mov
sub
inc
mov
into
lcall
hlt
jo
cli
ss
jo
es
push
out
push
out
rcr
cld
jmp
jnp
or
inc
orb
and
iret
sub
xlat
mov
in
or
out
pop
fisubrl
sub
jne
scas
pop
pop
enter
insl
push
push
idivb
repnz
in
loope
sub
xchg
xchg
shll
je
stc
and
repz
fistpl
imul
xchg
sub
and
faddl
pop
and
ficomps
fwait
inc
push
pop
daa
sti
lcall
sub
xchg
or
sbb
jo
mov
add
lock
push
xor
lea
jne
ss
or
loop
out
push
mov
push
lret
push
jno
pop
push
inc
loopne
andb
xor
hlt
mov
movb
outsb
add
push
pop
out
mov
xchg
adc
sbb
or
cltd
mov
rorl
imul
sbb
ds
insb
fdivrp
and
stos
stos
push
aaa
lds
stos
lock
sub
mov
lock
cmpsl
imul
sarb
decb
xchg
mov
loopne
in
pop
mov
inc
cmp
clc
neg
inc
mov
sbb
rcr
jg
or
mov
add
gs
and
cld
pop
bound
and
jnp
or
addr16
jecxz
adc
movl
and
mov
pop
repz
push
cmp
dec
jns
sti
aas
pop
popa
sarb
push
and
pusha
les
movsl
xchg
jecxz
and
sub
add
cmpsb
ficomps
loope
mov
push
mov
leave
lock
rcrl
add
push
jnp
xor
shlb
inc
xor
jno
ja
nop
scas
outsl
lods
xchg
cmp
mov
push
hlt
sbbb
pop
ljmp
xor
scas
cmpsl
mov
ss
pop
jg
stos
sbb
ret
dec
stc
ret
and
fistpll
jae
cmp
pop
jb
or
aam
add
addr16
fidivrs
je
mov
inc
movsl
mov
aaa
inc
inc
int
pop
push
or
in
push
je
cmp
fs
dec
shlb
mov
inc
mov
xchg
mov
pop
push
or
xor
test
mov
inc
jp
shrb
lods
aas
adc
xor
mov
loope
add
push
int3
jns
int
jno
xchg
rcrb
shrb
addr16
or
mov
mov
dec
jno
pop
xchg
jle
test
mov
adc
xor
pop
bswap
xor
mov
fdivl
mov
sbb
xchg
ja
mov
stos
mov
pop
popf
imul
sti
cmp
jge
sbb
scas
push
nop
or
insl
mov
or
in
nop
dec
dec
mov
cmc
mov
test
fistl
cwtl
jmp
loope
int3
sub
and
or
cwtl
int3
lods
rcrb
inc
pop
inc
and
out
mull
xchg
ja
movsb
sbb
loop
sbb
rcll
and
divb
xor
lcall
mov
adc
into
lock
addr16
pop
mov
arpl
push
and
dec
inc
dec
or
mov
aaa
inc
push
lods
inc
or
lock
fsubrs
fs
leave
xchg
movsl
mov
mov
subl
shll
loope
and
cmp
movsb
aam
or
push
out
cld
loopne
faddl
xchg
loope
sbb
push
lret
mov
inc
mov
pop
mov
popa
mov
imul
sbb
push
sub
nop
xchg
hlt
std
or
lahf
aas
lods
push
out
jg
fisttps
lret
inc
mov
iret
or
push
jo
in
mov
ret
dec
cli
jecxz
mov
mov
xchg
rep
xchg
mov
or
mov
xlat
pop
lcall
xchg
movhps
enter
mov
jne
sbb
sbb
cmc
lods
mov
or
or
ret
mov
enter
mov
jl
jne
sarl
cli
test
add
xor
cmc
xor
pop
stos
je
inc
out
imul
es
lcall
xlat
xlat
outsb
push
stc
jmp
in
scas
pop
scas
sub
push
fnstsw
inc
sbb
lods
pop
xchg
mul
ljmp
jecxz
push
ds
mov
mov
push
sbb
outsl
rcrb
test
or
repnz
sub
push
pop
clc
hlt
mov
pop
push
leave
add
jns
inc
daa
test
pop
out
xchg
xor
jmp
aad
pop
xlat
jns
push
pusha
cmp
scas
add
adc
std
mov
mov
mov
mov
lret
pusha
lcall
loope
mov
or
insb
lret
and
test
shlb
in
mov
in
mov
imul
subl
imul
mov
jge
cmpsb
je
inc
add
mov
mov
mov
jo
test
sarb
rcl
enter
leave
std
adc
pop
dec
lahf
incl
dec
test
cs
sub
scas
cmp
adc
sbb
jle
xchg
and
into
mov
cltd
cmp
pop
xchg
push
inc
dec
adc
std
add
mov
out
lret
punpcklwd
jg
hlt
adc
push
rep
and
loopne
fnstenv
shlb
and
outsb
inc
popl
xchg
add
clc
std
mov
mov
divl
addr16
in
das
inc
sub
mov
add
add
adc
sbbb
pusha
cmpsl
sahf
mov
mov
in
inc
ret
push
dec
push
jo
sarb
and
and
jns
loopne
ss
xor
inc
das
fwait
cmpsl
js
pop
pop
mov
lds
dec
xchg
movsb
in
sbbb
cmp
fwait
mov
xchg
push
xor
fstpl
daa
fisttps
stos
jmp
or
jae
push
mov
outsl
push
neg
dec
out
mov
loop
mov
push
jp
adc
jno
mov
push
testl
xchg
loopne
or
fwait
jns
shll
push
and
xlat
neg
xchg
ljmp
lahf
mov
pop
add
sub
mov
xchg
mov
aaa
std
movsl
aaa
stc
loope
xchg
cmc
and
push
xor
popa
add
xor
inc
shll
loope
xchg
cmc
and
push
xor
popa
add
xor
inc
shll
loope
xchg
cmc
orl
in
inc
and
adc
xor
inc
in
cmc
movsl
xchg
loope
xchg
cmc
and
scas
lret
fistl
mov
fdivl
popa
mov
mov
inc
test
mov
inc
mov
and
push
mov
mov
cltd
jno
popa
mov
mov
and
adc
jns
icebp
add
pop
shll
rcll
mov
dec
jno
popa
aaa
push
addr16
shll
and
adc
add
icebp
insl
ret
inc
mov
push
call
repnz
mov
inc
pop
adc
and
add
hlt
add
xor
push
ficomps
or
movsb
ficompl
or
lret
mov
push
shll
mov
and
cmp
push
push
cmpsl
insb
into
mov
xchg
scas
movsb
int3
mov
aam
stc
inc
int3
jns
push
rclb
jecxz
add
push
push
and
and
mov
pop
fs
sahf
adcb
int3
cs
test
lods
into
cs
mov
xchg
adc
adc
sub
pop
xor
jmp
jmp
sub
aam
mov
repnz
jno
mov
push
int
shll
test
icebp
adc
jecxz
xchg
loope
sarl
shll
pop
mov
jecxz
mull
cmc
push
iret
inc
mov
push
adcb
inc
loopne
mov
mov
repnz
les
adc
add
xor
inc
mov
js
sub
dec
movsb
and
and
add
and
jecxz
mov
shll
and
pop
shll
adc
add
icebp
add
xor
and
push
mov
mov
xchg
jno
popa
mov
mov
and
adc
add
icebp
add
xor
and
push
mov
mov
xchg
jno
or
mov
mov
cmp
ja
inc
cld
xchg
push
inc
cmp
and
repz
repz
pop
add
mov
sbb
adc
adc
mov
das
push
pop
xchg
jb
xor
dec
mov
movswl
cmp
push
or
adc
inc
or
push
adc
add
rcrl
inc
mov
dec
cwtl
lods
popf
out
mov
push
jno
pop
sbb
dec
mov
mov
cmp
pusha
lret
dec
push
adc
test
sahf
add
insl
push
jmp
or
xchg
mov
lcall
aad
data16
xor
imul
enter
movsb
mov
pop
mov
pop
inc
daa
daa
pop
les
in
xchg
lea
fcomps
xchg
push
sub
mov
int
push
lods
or
mov
jbe
test
jle
int3
cmp
subb
sbb
movsl
mov
jno
pop
add
negl
inc
cmp
sti
enter
push
out
int3
iret
movsb
jae
adc
xor
mov
cmc
insl
pop
ja
sub
mov
jb
sub
pop
push
push
dec
outsl
mov
dec
stos
lds
test
pushf
or
dec
push
scas
mov
pop
push
in
dec
jle
idivb
dec
sbb
outsb
test
test
cmpl
jmp
xor
sbb
or
out
movl
mov
sahf
mov
sub
mov
mov
jle
xor
das
nop
add
test
jnp
dec
mov
pop
add
adc
pusha
mov
popf
nop
mov
sub
xchg
xor
cmp
xchg
ja
sbb
cs
pop
lods
nop
insl
jno
jmp
mov
adc
mov
sbbb
adc
testl
sbb
cmp
mov
nop
fldenv
out
xlat
sahf
adc
aad
cltd
inc
scas
xchg
cmp
jecxz
aam
sub
mov
sbb
js
jecxz
bound
cmpsl
popf
testl
cmp
dec
iret
inc
aaa
lock
int
icebp
inc
popf
inc
pop
popa
cmp
iret
dec
out
cmc
insb
fwait
mov
jb
pop
push
iret
inc
imul
xor
sub
mov
aad
rep
jno
cmp
jl
stos
leave
hlt
sub
aam
popa
loop
jne
or
mov
add
jg
add
fadds
jbe
inc
cwtl
out
shrl
inc
popf
push
cmp
mov
sub
int3
out
push
mov
shlb
cmp
dec
shl
lea
and
je
pusha
dec
lcall
sbb
ret
shll
xor
out
lret
daa
push
adc
sbb
xor
call
mov
dec
lahf
fsubrs
std
test
out
jbe
inc
push
cmp
inc
sub
jbe
mov
stos
push
roll
nop
xchg
dec
insb
inc
adc
jle
push
popa
mov
push
ret
xor
lahf
jg
mov
mov
les
mov
adc
sar
add
iret
lds
cmpsl
cmp
scas
sub
dec
fimuls
pop
dec
mov
xchg
push
cmp
mov
lret
jecxz
pop
cwtl
xor
cmp
icebp
pop
nop
xor
hlt
pop
fcmove
hlt
xchg
mov
push
pop
sbb
clc
fdivr
xchg
mov
adc
mov
in
sysret
rclb
out
and
cmp
xor
mov
pop
sub
fistpl
xchg
and
push
mov
scas
bound
stos
pop
mov
out
mov
and
pop
repz
xchg
popf
xchg
cmp
fs
or
mov
xchg
or
inc
ret
dec
imull
sub
clc
cli
in
popf
mov
mov
adc
xchg
cs
inc
dec
xchg
cmp
add
loopne
mov
push
leave
xchg
jns
sub
jge
xor
jae
adc
loopne
or
mov
fwait
pop
imul
jae
push
hlt
cmpsl
jecxz
call
jnp
stos
sub
sbb
mov
add
lods
pop
mov
jbe
orb
repz
sub
sub
inc
inc
sub
leave
sub
je
iret
mov
leave
stc
xchg
pop
lea
xchg
aaa
mov
inc
sahf
push
mov
mov
out
xchg
ja
xor
pop
stos
jg
outsl
in
sub
jo
add
xor
adc
aad
cmc
mov
add
mov
loopew
daa
push
push
clc
add
xchg
sbb
cmp
in
scas
dec
loopne
test
ror
cmpsl
push
cmp
shlb
adc
mov
out
jns
push
lret
addr16
mov
xor
lcall
adc
hlt
lods
dec
fsubl
mov
pop
inc
add
sbb
and
xchg
push
jns
push
sbb
in
sub
push
enter
inc
stos
outsl
scas
pop
stc
sub
repnz
xor
pop
xchg
xlat
sub
scas
xlat
fiaddl
movsl
cmc
fidivrs
or
mov
leave
mov
in
inc
cli
outsl
xchg
jp
inc
jae
aam
sbb
push
pop
sub
mov
cmpsl
xchg
stc
sbb
xchg
les
dec
imul
pusha
or
rclb
xor
out
icebp
imul
lods
mov
fwait
cmpsl
xor
fildl
and
lret
dec
cli
pop
les
xchg
rorl
push
loope
mov
cli
xchg
movl
pop
lock
pop
xchg
mov
je
nop
ret
push
in
cmpsb
sbb
mov
pop
push
push
adc
in
mov
xchg
pop
xchg
pop
xor
imul
and
xor
out
mov
dec
cld
insl
inc
add
cmp
int
sub
cmpsb
jae
fs
cmp
mov
push
addr16
daa
push
mov
push
and
dec
rcrb
pushf
pop
push
xchg
add
lahf
adc
scas
xchg
cltd
lret
and
xor
movsb
mov
or
ss
mov
inc
pop
cmp
rorl
mov
xchg
xor
mov
or
xchg
outsb
test
nop
fwait
cwtl
dec
test
mov
push
in
jae
sub
xor
xor
xchg
push
daa
pop
sbb
adc
hlt
mov
sub
pop
inc
cmovne
mov
addr16
arpl
into
fisubl
xchg
jbe
call
inc
dec
mov
std
add
sbbl
xchg
sbb
dec
mov
xlat
lods
xchg
loop
xor
mov
cli
xor
mov
icebp
mov
push
jns
mov
jle
les
repnz
or
cmp
stos
push
pop
arpl
cltd
add
inc
add
into
sbb
lods
sbb
das
iret
push
mov
jp
inc
mov
ret
lea
paddb
sbb
in
inc
lea
mov
mov
loop
iret
fdivp
or
inc
cli
xor
push
hlt
les
popa
jb
lret
insb
mov
pushf
jmp
scas
cmp
mov
leave
adc
mov
and
insb
inc
inc
dec
jecxz
mov
jge
ljmp
in
mov
jle
adc
jo
mov
stos
or
shlb
int3
dec
push
xor
aam
lods
cli
xchg
dec
push
movsl
push
into
mov
stc
movsl
daa
pop
inc
lret
xchg
fiaddl
into
cmp
xchg
enter
push
shl
jbe
add
and
lods
aas
in
mov
and
hlt
addb
cmp
xor
clc
mov
cmc
sub
stc
psadbw
xchg
insb
push
cmpb
push
inc
jmp
nop
mov
aas
xor
and
xchg
fstp
push
aas
xor
sub
fwait
push
ljmp
dec
add
imul
incb
ss
xor
add
xor
cli
ss
outsb
stos
xchg
inc
cmpsl
mov
fsubr
sbb
arpl
adc
ret
ss
mov
dec
sub
nop
dec
push
stos
das
mov
call
bound
add
jb
imul
mov
out
jnp
sub
lock
add
xchg
pop
xchg
mov
mov
stc
sti
adc
push
jecxz
test
or
cmp
mov
outsb
jns
cmpsb
shrb
sub
js
and
mov
addl
jae
mov
shlb
sbb
scas
scas
andnps
cmp
fdivrs
fdivs
test
pusha
dec
test
add
lds
data16
test
imul
jmp
push
cli
or
inc
rcll
ficoml
inc
adcb
xor
scas
sarl
pushf
ljmp
xor
push
pop
dec
ja
scas
jmp
orb
inc
cmp
push
cmp
comiss
mov
jg
add
imul
dec
orl
cld
xor
xor
les
cmp
sbb
sub
jbe
mov
xor
out
mov
jno
jb
add
mov
and
into
bound
xchg
ljmp
push
mov
and
dec
cmp
icebp
arpl
xchg
pop
xchg
add
add
and
inc
cmp
cmpsb
nop
in
sti
or
sub
aas
cmp
dec
jae
inc
repnz
pop
lcall
movb
jg
stos
lea
scas
ror
add
mov
cwtl
out
ss
or
rol
xor
mov
jbe
sbb
arpl
adc
sbb
dec
cmp
cmc
repz
xlat
stos
aad
cmc
mov
cmp
es
ss
pop
dec
sub
mov
cwtl
arpl
sarb
call
cltd
or
pop
dec
aam
mov
repnz
dec
jge
sub
leave
mov
arpl
std
push
push
cmp
and
inc
leave
or
sub
call
add
lcall
xchg
pop
jb
push
pop
and
movsb
mov
or
mov
jns
loope
pop
adc
fs
xchg
loopne
lea
imul
inc
bound
xchg
push
jne
movsl
fwait
adc
pushf
xor
in
push
mov
clc
aad
cmp
insb
and
cmp
fs
into
push
lods
xchg
ret
cmp
and
mov
js
xchg
adc
std
mov
lods
rcl
sub
push
push
xor
int3
jnp
or
arpl
xchg
lods
in
hlt
mov
mov
inc
add
jmp
add
push
test
sub
push
daa
sub
enter
inc
lahf
pushf
mov
pusha
es
fs
lock
roll
dec
idivb
pop
mov
cmp
dec
popf
jg
dec
cmpsl
or
pop
fnstcw
sub
xchg
xor
sub
mov
pushf
movsb
inc
data16
es
lods
ficoms
icebp
jbe
or
or
jge
and
mov
or
loope
insl
neg
aam
movsl
daa
mov
jmp
adc
inc
test
ljmp
sbb
sahf
inc
adc
or
inc
std
shll
int
dec
sub
out
and
inc
cmp
pop
jno
push
call
add
mov
addr16
mov
loop
icebp
test
cmc
arpl
jecxz
test
stos
ja
cmp
leave
int3
and
clc
xchg
adc
or
mov
jl
dec
shrl
push
ret
das
out
insl
push
xchg
sarl
cli
out
lret
stc
icebp
or
stc
daa
and
fs
add
mov
mov
jecxz
push
push
mov
and
mov
popf
js
stc
cmp
stos
jl
pop
test
add
add
pusha
dec
inc
mov
xor
fnstcw
fwait
xchg
insl
mov
jnp
mov
xchg
cmp
outsl
dec
pusha
jg
scas
sub
mov
xchg
mov
in
hlt
daa
inc
mov
sub
jl
stos
stos
aaa
aad
es
xor
or
imul
mov
sub
adc
cli
push
aas
and
clc
jl
call
inc
adc
test
and
cmp
jo
sahf
jmp
jb
xor
fildl
jno
leave
mov
and
rcrl
es
mov
ret
scas
lds
dec
insb
jmp
xchg
or
enter
push
fnstsw
mov
mov
repnz
cld
jne
sub
pop
mov
sbb
test
nop
xchg
jbe
push
adc
push
push
or
cmpsl
sub
adc
rorb
inc
mov
sub
leave
shrl
dec
lcall
fistpl
jp
cmpsb
loop
push
pop
sbb
cmp
jmp
arpl
aas
pop
in
pop
mov
cmp
arpl
and
xchg
xor
sub
arpl
outsl
mov
pop
xor
loop
and
shll
fwait
jmp
stos
aad
lods
mov
xor
mov
repnz
add
pop
stos
ret
push
mov
cltd
repz
clc
loope
adc
insl
icebp
xor
adc
iret
in
rorl
lock
pusha
xor
fistps
shrb
or
push
stc
out
ret
xor
loop
cltd
mov
bound
movsb
cs
rorl
jl
xchg
mov
cmp
jb
rcrl
fmull
test
jmp
repnz
out
cmp
xchg
inc
mov
mov
jo
stos
inc
and
mov
cwtl
in
xor
mov
sub
outsl
or
adcb
dec
jl
fadd
ret
mov
sbb
jp
sbb
out
jae
mov
pop
xchg
mov
enter
inc
test
xlat
addr16
mov
cmp
add
mov
sub
mov
and
adc
popf
pop
test
add
shlb
data16
pushf
sub
pop
lahf
and
in
fildll
mov
mov
mov
cmpsb
test
xor
mov
add
add
movl
xchg
xchg
imul
sub
jmp
push
cli
shr
pop
mov
cmpsl
cltd
xor
loop
mov
int3
cmp
dec
jp
jle
aaa
xchg
aas
inc
cmpsl
fbld
inc
inc
sub
and
shll
mov
xlat
mov
into
add
loope
arpl
mov
dec
out
in
pop
in
pusha
fmulp
mov
lds
cmp
cmp
pop
dec
fs
in
insl
ds
repz
xor
cli
insb
pushf
jmp
lcall
cld
xlat
and
cmp
test
mov
add
imul
jne
xlat
xchg
clc
adc
mov
dec
sbb
sbb
jge
mov
std
mov
add
sub
fildl
and
out
add
cmp
fs
leave
mov
fnstcw
lahf
or
insb
xchg
cmc
sub
adc
mov
or
js
xor
xchg
sbb
xor
cmp
inc
cli
and
leave
sbb
xchg
inc
sub
cltd
icebp
and
popa
pop
les
aam
insl
mov
mull
pushl
mov
rclb
scas
imul
push
shlb
cltd
dec
arpl
les
fdivrs
nop
ret
leave
test
pusha
and
incb
pop
dec
movsl
pop
insb
mov
shl
sbb
mov
cmp
in
mov
outsb
rol
imul
xor
popa
jnp
sub
fstl
sbb
rcll
aaa
cld
cmp
int
rcrb
xchg
iret
push
or
mov
sbb
adc
xchg
out
cmpsl
push
ss
imul
into
imul
fnstenv
shl
aas
enter
and
cmp
xor
xchg
inc
call
pushf
aam
or
lret
push
lods
aaa
sbb
push
jno
mov
out
pop
or
xor
and
stos
popa
mov
inc
xor
icebp
mov
jecxz
mov
xchg
adc
popf
mov
mov
mov
xlat
aas
daa
dec
mov
lahf
in
xchg
add
cmp
inc
les
rcll
in
xchg
lea
cmp
notb
or
add
dec
inc
adc
jno
push
xchg
orl
lods
and
push
xchg
jmp
mov
push
cs
enter
aaa
push
inc
pushf
jno
jge
int3
ljmp
icebp
cmp
fcom
les
cmpsb
and
pop
lcall
je
push
call
sub
jae
cmp
repnz
mov
sbb
lds
cltd
sti
xor
sbb
js
cmp
and
pop
cmpl
xchg
jp
cli
inc
test
cwtl
inc
jle
xchg
add
addr16
sub
fs
add
je
rolb
outsb
cmp
mov
and
clc
sbbl
pop
pop
adc
sub
inc
stos
lahf
roll
pop
outsl
arpl
xchg
loop
lds
lods
nop
jb
pop
test
fwait
aaa
sbb
xchg
outsb
das
mov
sahf
and
mov
push
dec
outsl
scas
adc
sub
mov
push
push
insl
jbe
je
loope
push
jne
push
sub
sbb
push
mov
jnp
mov
jle
test
add
mov
pop
push
jnp
xlat
scas
movsl
mov
cmp
cmpb
daa
mov
inc
jno
aaa
jno
addb
leave
sub
cltd
pop
cmp
add
out
push
lods
nop
inc
outsl
movsl
jle
sub
ret
insl
push
and
mov
jne
and
sbb
subb
push
pushf
xlat
push
mov
in
and
mov
stc
cmp
out
insb
shll
hlt
or
scas
push
push
call
lret
enter
shl
fs
test
test
xor
mov
and
mov
out
cmp
push
data16
shlb
andl
fst
fldcw
xor
sub
test
repnz
sbbb
insb
insb
cmpsl
imul
jb
inc
and
decb
rcll
mov
fwait
dec
jnp
lods
sub
jae
jne
js
jo,pt
imul
jl
addr16
mov
and
add
sbb
pop
and
jp
jle
push
inc
add
push
push
pop
push
jbe
adc
add
sti
sub
dec
popa
sub
mov
repz
push
fbld
shll
add
aaa
inc
pop
mov
hlt
mov
das
mov
out
stos
popa
cld
lsl
inc
addl
imul
popf
iret
insl
lea
sbbb
jle
icebp
test
das
outsb
lods
cmp
mov
cmp
add
test
and
in
mov
dec
mov
inc
into
sub
mov
mov
and
add
lcall
jnp
test
test
es
dec
ljmp
push
jno
mov
lea
fwait
adc
xchg
ret
flds
push
jecxz
subl
and
scas
or
and
xchg
pop
testb
cmp
adc
ret
testl
fdivl
inc
pop
sbb
test
xchg
fsub
gs
jnp
test
cwtl
ja
dec
push
mov
jb
js
mov
mov
mov
cs
call
sub
cmpsb
xchg
lods
xchg
fsts
push
outsb
mov
out
jmp
mov
fisubl
push
xchg
cmc
xor
xchg
lret
sbb
dec
cmc
or
stos
mov
call
outsl
jmp
mov
sbbb
das
xchg
mov
les
jb
rcrb
and
dec
fdivs
stos
imul
jl
lods
fwait
pop
out
and
jb
std
je
jnp
gs
sub
popf
or
cs
dec
dec
enter
inc
bound
mov
js
shl
inc
cmpsb
add
mov
mov
xchg
mov
and
or
into
mov
imul
pop
or
jb
fdivrs
mov
mov
xchg
lds
adc
push
aad
cmpsl
jmp
xchg
subb
popf
sub
cmp
out
adc
movsl
push
test
xor
jl
insb
mov
lds
test
lahf
cmp
das
jne
push
cmp
addb
das
mov
pop
addr16
lods
arpl
fwait
lds
add
push
mov
rcrb
nop
js
out
jecxz
imul
addps
iret
adc
mov
inc
fldcw
jecxz
push
es
or
jp
pop
mov
adc
push
pusha
gs
or
sub
adc
and
fistps
mov
add
add
add
movsl
negl
jbe
sub
popa
loope
mov
and
adc
add
icebp
add
xor
and
push
mov
mov
xchg
jno
popa
mov
mov
and
adc
add
icebp
add
xor
and
push
mov
mov
xchg
jno
popa
mov
xor
and
adc
add
shll
mov
mov
popa
cmp
inc
shll
shll
icebp
adc
adc
decb
shll
mov
cmp
pop
mov
jle
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
xchg
rolb
in
mov
mov
or
add
add
add
or
add
aas
add
popa
add
mov
insl
add
push
add
add
add
add
add
add
add
add
filds
push
add
add
add
dec
add
jnp
xlat
add
arpl
out
rolb
xor
popf
add
jnp
dec
add
add
add
jnp
in
add
or
test
dec
add
xlat
add
add
add
add
add
add
add
add
imul
add
add
push
add
daa
add
inc
add
add
add
add
add
add
add
or
add
mov
dec
add
sbb
jl
mov
arpl
jnp
mov
add
add
add
add
add
add
add
inc
add
add
and
xor
add
filds
dec
add
add
pop
add
add
dec
add
add
add
add
add
add
add
add
mov
cmp
and
add
add
add
add
mov
add
inc
add
add
add
xor
jnp
sub
push
add
add
add
add
add
add
add
push
pop
add
add
add
add
pop
add
add
add
add
add
add
add
sbb
pop
add
push
add
adc
push
add
add
add
add
out
mov
imul
add
add
add
add
add
add
add
addb
add
add
add
lods
or
cld
add
add
add
mov
xor
jge
jge
dec
add
int
jl
daa
add
js
cmp
add
add
add
add
add
add
addl
mov
push
add
add
add
add
add
add
add
sbb
inc
add
add
add
add
popa
add
cltd
add
movsl
add
add
add
add
add
jge
push
add
mov
push
add
add
add
add
add
xchg
add
add
and
outsl
add
mov
add
add
add
add
add
add
in
push
add
add
add
push
dec
or
or
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
jns
lods
add
add
sub
testb
add
add
ja
fwait
add
add
add
add
add
add
add
add
add
add
push
add
add
stos
add
add
jnp
pop
add
add
add
sbb
adc
add
or
add
popa
add
fldl
arpl
add
mov
add
add
add
add
xchg
and
sub
test
cmp
lea
leave
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
inc
add
add
aad
ja
sbb
mov
xor
jge
jge
mov
faddl
stos
add
add
add
aad
mov
add
add
jge
xchg
add
arpl
push
add
add
add
int3
add
add
add
add
add
add
cmp
fadds
and
int3
add
add
add
add
add
les
lea
cmp
cli
cmpb
sub
mov
jno
and
aas
dec
daa
into
out
pushf
iret
xchg
aam
scas
inc
cmc
push
or
fldt
jns
mov
fiaddl
dec
cmp
or
fcmovnbe
or
xchg
mov
add
andl
jl,pt
mov
popf
fdivrl
sub
movsl
sahf
jle
lahf
paddd
push
push
xor
pop
pop
add
lds
push
into
xlat
mov
push
loope
jl
pusha
mov
add
lods
add
movsl
loop
cli
jae
add
sbb
test
jmp
clc
xchg
dec
arpl
std
sub
ss
std
andb
std
xchg
adc
gs
push
mov
dec
aaa
in
lock
inc
scas
adc
mov
les
push
lods
or
adc
mov
add
into
shr
add
mov
sbb
mov
mov
ljmp
or
jle
stc
sahf
loopne
cmp
movsb
stos
push
sub
lea
clc
xchg
pop
mov
flds
fisttpll
xor
add
and
jmp
icebp
xchg
decb
addl
test
fisubs
push
mov
rcl
xor
aad
mov
std
push
out
and
inc
cmpsb
pop
add
mov
add
mov
bnd
mov
jno
mov
mov
push
js
inc
jae
std
cmc
xchg
inc
xchg
dec
iret
adc
add
rorl
pop
in
adc
sahf
leave
bnd
jne
std
addl
cli
jno
imul
out
jecxz,pt
cmp
dec
test
adc
fnsave
aad
int3
rclb
jbe
mov
out
ss
fcmovnu
mov
jbe
sbb
data16
loopne
xchg
push
sbbl
xor
or
xchg
add
sbb
sahf
cmpsb
ds
xor
les
stos
cmpsl
jge
and
jmp
jle
out
jl
or
cmc
icebp
in
add
ljmp
int3
lock
mov
sub
mov
dec
mov
dec
inc
scas
jae
sarl
shlb
mov
xor
cld
loope
lahf
mov
cmpsl
or
jge
jmp
mov
out
out
sub
loop
pop
int3
push
addr16
add
pop
js
mov
dec
sbb
pop
lea
dec
add
add
pop
lea
push
adc
movups
ss
mov
pop
pop
ds
adc
sub
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
repnz
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
repnz
repnz
mov
repnz
lods
repnz
movsb
repnz
pushf
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
repnz
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
repz
mov
repz
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
hlt
add
cwtl
hlt
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
pop
add
pushf
pop
add
xchg
pop
add
mov
add
test
add
jl
add
je
add
insb
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rclb
add
fcoml
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
sbb
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
sbb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
sbb
add
add
js
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
