jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
push
jo
jge
cmc
xchg
lcall
add
push
add
pop
add
pop
add
or
lea
pop
add
imul
add
add
add
add
clc
add
add
add
add
imul
add
add
add
add
add
xor
imul
add
xchg
outsl
add
add
add
add
add
sub
add
add
add
add
inc
add
imul
add
add
add
sub
add
add
add
sbb
imul
add
add
add
imul
add
add
addl
loop
pop
add
adc
add
add
insb
add
add
add
sbb
push
add
add
push
add
add
add
bound
add
clc
add
sbb
imul
add
add
add
imul
add
inc
add
add
dec
add
lret
add
add
add
cmp
add
pop
add
ljmp
add
and
add
add
add
add
dec
add
or
jp
push
add
incl
add
addl
adc
add
add
add
add
add
imul
add
add
add
mov
out
inc
add
xor
add
add
add
push
add
add
add
dec
add
add
add
push
add
add
testb
add
add
lret
add
add
cmp
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
or
xor
imul
add
sbb
add
push
add
add
or
pop
add
xor
dec
add
add
add
add
pop
add
addr16
add
add
add
imul
add
pop
add
add
add
add
add
add
add
add
outsl
add
add
add
imul
add
add
or
imul
add
add
add
pusha
add
add
add
faddl
add
xchg
cmp
adc
add
add
add
add
add
imul
add
addl
add
add
dec
add
mov
xor
push
add
add
add
add
push
add
arpl
add
movb
gs
add
or
cmp
or
add
add
jns
lret
add
add
add
add
popa
add
add
dec
add
dec
add
add
push
add
clc
add
and
movb
sbb
add
add
incl
gs
add
add
lret
add
add
add
add
add
add
lret
add
add
add
add
xchg
add
add
inc
add
add
add
pop
add
imul
add
dec
add
add
add
imul
add
add
add
mov
dec
add
add
dec
add
add
add
imul
add
add
add
add
add
add
or
dec
add
xor
add
push
add
sbb
xor
add
imul
add
cmp
iret
add
add
pop
add
add
add
add
add
inc
add
arpl
sub
add
sub
cmp
clc
add
adc
and
lock
sbb
mov
shlb
push
aaa
lahf
jbe
clc
push
sbbb
cmp
leave
aas
lahf
test
pop
test
sbb
lods
inc
out
lret
rcll
jp
push
xchg
xor
ljmp
pop
mov
or
xchg
pop
je
insl
stos
pop
sbb
int
inc
sti
sahf
fwait
and
adc
scas
mov
inc
adc
add
or
xchg
mov
out
dec
mov
inc
insl
xlat
das
in
cmp
out
sub
mov
jb
jns
es
faddp
insb
inc
ret
das
or
pop
jne
loope
scas
jns
mov
cld
icebp
test
ffreep
pop
xor
cmp
gs
add
or
dec
sbb
inc
mov
test
pop
pushf
sub
xchg
and
out
adc
xor
jl
pop
data16
cmp
std
mov
ret
jns
imul
xor
int3
fwait
cmp
and
mov
dec
out
cltd
fnsave
push
push
cmp
adc
pop
mov
jmp
cs
int
fimull
xchg
aaa
adc
jl
out
es
push
dec
not
sbb
mov
jecxz
out
negb
test
jle
stos
neg
pop
es
jne
lods
scas
pop
fisttps
lea
jns
loopne
or
jo
lock
in
mov
jecxz
call
pop
movsb
lret
xrelease
sub
mov
lods
imul
subl
fldt
rorl
push
cwtl
mov
adc
mov
nop
lods
jb
xor
mov
in
push
scas
repnz
in
bound
xor
mov
sar
mov
lahf
hlt
ror
movsb
push
faddl
dec
popf
pop
lahf
sbbb
js
repnz
stc
xor
ja
popa
add
sub
or
lret
lret
fdivrs
sarb
and
jecxz
movsl
test
addr16
leave
shl
mov
pop
adc
and
daa
fsub
sbb
mov
mov
out
je
daa
dec
rcrb
mov
mov
jo
sub
cmp
xchg
jge
push
paddsw
lods
jp
pop
nop
jbe
mov
sti
sbb
imul
xchg
cs
and
xchg
push
xchg
or
outsb
cmp
int3
rcrb
and
jl,pn
ljmp
outsl
in
adc
mov
xor
lcall
arpl
iret
xor
stos
inc
dec
jp
sub
push
cwtl
mov
out
xor
repz
push
aam
push
int
imul
mov
and
hlt
sbb
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cmp
inc
add
bound
imul
out
xchg
movb
lds
and
ss
gs
push
push
and
xchg
movb
aad
lds
addb
push
incb
mov
xchg
mov
mov
aaa
jns
push
adc
pusha
mov
push
add
pop
fxch
dec
into
insl
jl
nop
shrl
mov
jp
xor
data16
cmp
movsl
sbb
push
nop
xor
aaa
mov
es
mov
cmp
bound
sbb
or
fldenv
xor
adc
je
gs
pop
add
jecxz
mov
push
cmp
cmp
movsb
add
repz
fisubrl
movsl
mov
dec
inc
ss
mov
sub
test
cmpsb
cmc
mov
xor
cmp
out
xchg
int3
push
mov
mov
xor
cmpsb
mov
aad
cmp
and
sub
push
push
mov
movsl
push
xchg
fadds
xchg
aad
addl
inc
pop
xor
add
lds
cmc
filds
shll
pop
lea
ss
and
jne
into
shlb
xlat
lds
xchg
add
push
jbe
jo
jge
inc
es
push
push
inc
divb
movb
aad
lds
and
inc
add
push
push
push
inc
divb
movb
aad
lds
mov
ret
add
pop
sbb
in
loope
ljmp
mov
jbe
iret
scas
inc
jp
shl
mov
lret
adc
test
add
notl
sahf
nopl
cmc
mov
jl
mov
push
xchg
jl
cmc
movsl
jle
add
imul
adc
pop
and
dec
mov
jnp
stos
push
imul
pop
daa
jp
loop
mov
inc
mov
mov
rorl
sbbl
mov
popa
les
jmp
inc
push
push
pop
movups
hlt
mov
mov
jmp
add
ja
sti
cmp
add
hlt
outsl
mov
cmp
lea
out
out
arpl
push
push
mov
sub
negl
cmovne
and
hlt
iret
fbld
inc
out
lcall
xor
or
clc
stos
in
inc
jns
in
js
sbb
mov
ja
fs
into
inc
and
pop
aam
xchg
rolb
pusha
divl
iret
mov
or
pop
daa
jl
leave
ljmp
pop
xor
xor
dec
stos
mov
adc
push
ret
jp
xor
aaa
pop
cmc
in
cld
and
push
call
mov
mov
jbe
inc
stc
lret
out
mov
xor
xchg
xchg
cmp
adc
in
xchg
aad
or
fldt
push
sahf
loopne,pn
adc
xor
or
les
mov
ret
xor
mov
adc
add
test
pop
enter
pop
rcll
out
xor
pop
fucomp
jb
call
cltd
sahf
mov
mov
test
sbb
add
add
mov
inc
push
inc
xor
ss
out
mov
mov
data16
mov
lea
jno
push
push
inc
in
sbb
clc
xor
push
lds
sbb
ds
cmp
or
mov
and
hlt
jl
lahf
fldenv
shlb
testl
adc
inc
push
ret
dec
inc
shlb
or
loop
jmp
outsl
mov
xor
movsb
arpl
and
pop
pop
cmpsl
xchg
loope
test
fisubl
mov
fsubl
jmp
cmpsl
fwait
jg
mov
hlt
xor
xchg
insb
mov
push
xchg
adc
dec
lahf
or
shrb
pusha
push
shlb
in
std
jnp
or
inc
inc
lods
aaa
sahf
dec
adc
xor
adc
lahf
notl
or
cli
lcall
mov
outsb
adc
aad
pop
xchg
jecxz
cmp
or
arpl
aad
sbb
pop
icebp
in
shr
inc
in
out
ja
sbb
inc
gs
xchg
inc
int
sbb
mov
or
sahf
lret
inc
subb
lds
inc
fldt
icebp
mov
and
sub
std
js
mov
lret
js
shlb
into
test
outsb
xchg
jns
lds
or
fildll
scas
sbb
and
add
cmp
fs
xchg
test
xor
xor
dec
in
jge
repz
mov
pop
and
push
add
aaa
dec
and
jle
push
dec
loop
inc
dec
sbb
fwait
pop
mov
sbbb
mov
cltd
sbb
lods
sub
jl
iret
jnp
xchg
add
jge
out
xlat
aam
sub
pop
loope
loopne
fisttpll
mov
mov
ret
ret
cmp
xlat
sbb
push
aad
dec
int
shlb
lds
pop
mov
daa
xchg
sti
icebp
imul
in
or
sub
sbb
cmp
or
dec
push
xor
lret
xor
and
dec
fiadds
leave
pop
push
movsb
add
js
ja
mov
stos
je
fsubs
ficompl
scas
ficompl
mov
fsubrs
je
ljmp
int3
or
mov
sbb
fwait
adc
movsb
sbb
sub
shrl
xchg
cli
jmp
enter
movb
lock
mov
lea
outsb
jae
scas
fsubl
dec
xlat
mov
repz
es
out
mov
ja
jnp
sbb
mov
or
adc
jbe
xchg
xor
aam
test
rclb
and
fwait
gs
mov
jecxz
mov
outsb
int
xchg
and
stos
aam
pusha
psraw
sti
andl
cmp
cmc
xor
call
test
fwait
mov
jmp
pop
test
stc
push
and
xor
pop
push
and
mov
jo
xor
xor
scas
cmp
outsl
cvtsi2sdl
xor
lea
rclb
push
push
lcall
ljmp
imul
add
jmp
fildll
push
mov
inc
jg
dec
jnp
es
out
jg
imul
in
jmp
jnp
adc
sti
xchg
adc
fwait
push
insb
fists
mov
imul
int3
loopne
cmp
xchg
adc
test
int3
sbb
inc
and
ret
xchg
shrb
mov
xchg
in
lcall
inc
inc
repnz
faddp
pop
adc
xchg
lods
xor
movsb
and
es
cld
es
rorb
cmpsl
inc
imul
in
jne
push
xchg
lods
adc
imul
add
gs
jae
push
xor
daa
cmp
jle
xchg
and
jge
jno
dec
das
xor
lret
cmp
repnz
ds
mov
popa
mov
sbb
aam
sti
mov
dec
or
aas
in
adc
lods
sub
push
out
fcoml
orb
or
jl
cmpsb
shlb
into
lods
leave
sub
lds
jns
pushf
scas
arpl
adc
insb
add
sub
mov
cwtl
fidivl
pop
xchg
push
out
arpl
sbb
dec
sbb
in
in
xor
out
shlb
addr16
add
ds
ljmp
mov
orb
inc
add
inc
push
shlb
add
dec
aas
test
xchg
out
xchg
aaa
addr16
xchg
mov
push
stos
and
jae
movsl
pushf
adc
mov
dec
mov
add
sahf
enter
ds
fsubr
push
subl
jmp
insl
sbb
enter
lret
inc
lcall
pop
mov
lret
pusha
int
lcall
ljmp
ret
in
cmpsb
add
out
mov
xchg
iret
pop
xor
dec
call
push
or
ljmp
shl
push
mov
or
je
pop
sub
mov
sub
mov
xchg
adc
mov
pop
rcll
mov
sbbb
push
sub
repnz
adc
lods
sbb
enter
arpl
rcr
filds
push
or
xchg
inc
mov
sbb
out
cmp
pop
lret
push
jae
lods
int3
push
push
loop
daa
fistl
pop
scas
ret
or
add
inc
test
das
or
stos
jbe
hlt
ss
divb
inc
fwait
xor
xchg
sub
in
movsb
pop
mov
sbb
mov
insl
jmp
insb
iret
cmpsb
xor
test
xchg
rcrb
cli
fucomp
loop
into
mov
sbb
dec
out
pop
arpl
mov
fldl
xchg
jl
std
std
pop
jnp
fcmovu
js
xchg
into
push
or
int
adc
push
mov
sbb
aad
add
push
dec
push
dec
in
push
ljmp
hlt
or
push
aam
adc
jbe
sahf
stos
jge
mov
stos
loop
jo
jne
gs
adc
test
push
mov
adc
push
lret
and
cmp
pop
jle
cmpsl
test
dec
xor
jnp
fnstsw
sub
mov
mov
mov
lea
push
lea
fs
fisubrs
pop
call
ret
faddl
mov
dec
sbb
repnz
shlb
ret
scas
mov
push
out
sbb
xor
fbstp
inc
ds
test
or
jb
ljmp
cs
push
pushf
bound
xchg
or
test
pop
mov
push
lret
add
jg
dec
fwait
adc
ss
push
push
or
aam
pop
movsl
in
loopne
inc
insb
bt
dec
dec
lret
clc
data16
add
and
cvtps2pi
jle
mov
movsb
sbb
and
and
ds
idivl
das
cmc
int
ret
ljmp
xchg
add
jmp
movsl
jge
imul
pop
mov
std
mov
sbb
cmpsl
pop
out
or
dec
mov
xor
push
test
cli
or
xchg
or
jecxz
jo
imul
pop
xor
sbb
cli
ficomps
je
lock
fisttpll
pop
or
cmp
adc
rclb
mov
stc
or
out
les
pop
push
dec
and
popa
or
and
insl
adcb
pop
or
sub
pop
popf
xchg
iret
xchg
push
xlat
xchg
loope
lds
fcomi
fs
cmpsb
mov
cmc
mov
fwait
sbb
and
pop
mov
ja
lods
mov
ret
adc
sub
and
clc
adc
jnp
add
loop
mov
jp
jg
add
cmpsl
xor
insb
test
add
int
mov
mov
and
or
mov
jne
mov
cmp
fstpt
push
shl
out
daa
mov
lahf
mov
push
sub
paddw
xchg
xor
pop
aad
mov
out
and
arpl
movsb
ss
mull
inc
int3
dec
lea
sbb
fisttps
jl
push
jo
mov
mov
bound
fcmovnb
dec
lret
mov
inc
cs
sub
stos
lret
lahf
outsl
push
lcall
gs
mov
int
xchg
mov
lret
lds
pop
repnz
and
les
daa
mov
sbb
test
stc
pusha
jecxz
loopew
mov
pop
sbb
jge
jecxz
sbb
xchg
add
xchg
fisubrl
bound
divl
pop
popf
xor
cmp
mov
mov
mov
or
xchg
aam
pop
hlt
or
jae
dec
repz
mov
sub
mov
push
xlat
pushf
cmp
stc
fsts
das
sub
sbb
mov
mov
lods
jae
outsl
and
mov
mov
fldl
add
sbb
xchg
fs
outsb
mov
mov
outsb
idiv
fsubs
pop
add
mov
sub
icebp
cmpsl
insl
jae
in
sub
pop
pop
adc
or
mov
in
xor
mov
push
cmpsb
jmp
pusha
mov
imulb
rcrl
stos
lea
cmp
cli
mov
sub
loopne
add
sub
test
or
cmp
push
mov
outsb
cmc
ljmp
pop
cmp
sub
xor
mov
xor
pop
divl
lret
test
and
iret
sti
clc
jl
pop
in
lret
ja
push
xchg
jge
inc
js
jecxz
jns
inc
and
rol
xor
pop
sub
sub
add
scas
jecxz
iret
adc
fwait
repz
and
sub
gs
sti
inc
xor
das
jbe
adc
pop
sarb
jg
mov
mov
cmp
cmp
lret
fstps
add
xorl
dec
dec
jg
cld
push
jmp
push
xchg
cmp
mov
fsub
sub
mov
dec
sti
rdtsc
int3
push
mov
icebp
xor
xor
or
push
enter
pop
icebp
fsts
or
sub
inc
xor
sbb
mov
add
leave
add
push
mov
sub
mov
lahf
or
sub
jge
call
ret
call
xor
xchg
fisttpll
cltd
dec
sub
mov
subb
mov
dec
outsl
pop
mov
xchg
adc
loopne
jno
xchg
cmp
scas
sarb
idivl
lods
xchg
ret
loopne
pop
mov
xlat
je
jns
jb
sbb
mov
adc
cmpsl
mov
pop
lods
stos
inc
sub
jb
xchg
test
jb
lock
sub
arpl
mov
loop
pop
ljmp
adc
cmpsb
mov
hlt
push
cmp
dec
jae
in
cmpsb
test
clc
xchg
mov
xchg
dec
jge
rcll
in
or
sbb
mov
and
cmp
cld
xchg
push
jb
inc
inc
ss
mov
les
pushl
jbe
lret
mov
jle
and
push
loopne
mov
das
nop
loope
or
movsl
imul
sub
add
hlt
dec
hlt
jne
push
xor
les
xchg
jns
push
adc
in
ret
fistpll
shlb
shl
cmp
add
int
adc
mov
in
jg
xchg
stc
pop
and
sub
pop
mov
loopne
mov
in
call
addr16
push
popa
lock
je
cmp
out
ss
test
pop
arpl
jb
and
mov
aad
leave
pushf
jbe
jbe
cmp
addr16
out
sub
xchg
pop
jp
arpl
or
jbe
shrb
mov
imul
dec
push
mov
call
mov
inc
les
stos
add
sub
xchg
push
xor
xchg
das
lods
xchg
cli
mov
inc
sub
ret
or
jp
mov
pop
cmp
mov
loopne
or
dec
push
ss
cmp
sahf
popa
ret
jecxz
lret
std
mov
push
int
lods
push
jb
imul
std
xchg
movsb
ret
movsl
jl
xchg
daa
mov
add
dec
je
push
sbb
mov
xchg
jge
or
mov
cmpsb
mov
loopne
push
stc
in
dec
sbb
xor
dec
ljmp
xchg
mov
cmp
fs
cmc
mov
add
pop
mov
sub
xor
pop
push
pop
enter
call
jp
pop
stc
xor
fldl
loop
mov
into
mov
push
test
lds
sub
sub
lea
or
in
dec
push
sbb
dec
mov
jmp
out
sbb
aas
sahf
or
test
inc
out
jg
push
out
ja
aas
pop
push
pop
inc
lods
adc
jns
cli
jbe
jae
pop
repnz
sub
and
test
popf
pop
xchg
les
lea
out
adcb
es
mov
xchg
pusha
repnz
sarl
movsl
imul
mov
jno
data16
xor
pop
fdivs
ljmp
mov
movsb
sub
mov
cmp
or
cmc
in
sbb
mov
hlt
dec
bound
shrb
mov
data16
pop
imul
shl
or
int
loop
aad
movsl
loop
push
xchg
xchg
mov
pop
orb
dec
xor
es
mov
xchg
and
or
dec
out
lret
pop
cmc
lahf
push
outsb
les
icebp
call
and
faddl
jmp
pop
sahf
mov
sub
jl
push
in
cmc
flds
call
jbe
fistpll
xchg
xor
push
xchg
xor
ss
dec
loop
scas
fmul
dec
loope
daa
sub
popa
addb
bound
das
and
les
dec
pop
pop
scas
arpl
push
cmpsb
or
mov
cmp
push
enter
movaps
sub
cltd
lock
test
js
fisttps
mov
jl
div
and
xorl
push
mov
repnz
std
inc
xchg
inc
xchg
mov
jge
dec
scas
bound
pop
loopne
add
mov
xor
adc
loop
mov
lea
int3
cmpsl
xor
in
arpl
sub
push
mov
cmp
and
mov
aaa
test
or
popa
in
je
fstl
sbb
jg
dec
movsb
je
and
das
add
cs
pushf
jno
bound
arpl
rorl
int3
ja
jne
je
sbb
mov
lahf
aam
pop
mov
xchg
jl
xchg
jp
inc
cltd
mov
rcrb
dec
int3
adc
push
dec
les
in
inc
fstps
jnp
test
jae
sub
add
push
fsubrs
push
sub
inc
add
adc
arpl
fiadds
daa
pushf
pushf
test
adc
pop
popf
lods
stos
push
lods
std
mov
sub
das
out
ljmp
jns
inc
adc
popa
mov
jl
pop
jno
scas
repz
xchg
or
jp
stc
fcmovnbe
mov
mov
iret
pop
imul
movsl
mov
out
mov
out
inc
out
pushf
sbb
lods
inc
pop
ljmp
fisubrs
xor
sbb
jb
lock
cmpsb
dec
ret
mov
inc
xchg
xlat
or
sbb
fdivrs
into
pop
gs
push
mov
dec
xor
mov
or
ret
arpl
insl
dec
and
cmpsl
cmp
fstl
lea
mov
jl
adc
adc
pop
add
cld
dec
mov
xor
cmp
ds
xchg
mov
inc
rcrl
adc
push
shll
push
shlb
sub
mov
inc
pop
mov
repz
ret
or
or
jns
push
pop
ss
icebp
repz
stc
shll
cs
jb
xchg
subl
xchg
and
addr16
and
popa
jb
stos
pop
imul
pop
inc
ret
mov
jbe
lea
push
cwtl
sar
xchg
mov
or
lahf
test
int
or
pop
xchg
push
shlb
icebp
mov
in
lods
rol
fwait
aam
pop
pushf
cmp
iret
inc
jmp
ret
sahf
nop
jmp
fidivs
in
ss
fdivs
mov
mov
adc
pop
xor
mov
les
insb
mov
sbb
sti
sub
gs
mov
mov
adc
push
addr16
push
icebp
push
sbb
jge
call
fldl
pop
pop
scas
xor
dec
fcmovu
loop
adc
ror
nop
xchg
add
loopne
xchg
jge
pop
call
xchg
lret
add
lds
mov
es
jmp
imul
sbb
add
sub
mov
jb
xchg
and
out
ljmp
add
push
jbe
pop
dec
mov
int3
adc
daa
test
xchg
mov
and
xchg
add
adc
sti
stos
xchg
shrl
test
in
in
fldl
pop
lods
imul
sbb
mov
jg
jp
sub
inc
dec
sbb
movsl
jno
fwait
sub
add
orl
dec
push
xor
push
faddl
mov
push
pop
fcomps
ficompl
in
dec
insl
mov
into
jecxz
xchg
into
call
dec
stc
inc
hlt
loopne
lods
test
cli
sbbb
stc
ss
mov
vcvttss2si
xor
daa
jns
int3
int
xchg
pusha
outsl
xchg
insl
add
or
bound
aaa
mov
mov
cmp
lea
cmp
movsb
adc
js
mov
mov
mov
mov
mov
mov
imul
jle
popf
fsubs
jg
nop
imul
iret
stos
and
adc
ficompl
mov
jg
or
mov
fists
std
dec
or
ficoms
jb
xchg
jp
jmp
fwait
pop
fsts
sub
xchg
dec
adc
dec
xchg
cli
bound
sbb
bound
push
jbe
jnp
dec
pop
in
outsl
pop
or
push
dec
cmp
sbb
lcall
cmpsb
xchg
mull
paddw
jnp
ret
and
add
add
dec
pop
data16
dec
jmp
xchg
loopne
or
cmp
popa
cld
mov
popa
dec
dec
mov
add
pop
dec
lods
and
nop
hlt
or
stos
xchg
icebp
mov
cmc
jecxz
push
ret
xor
pop
ficompl
mov
aad
shll
jo
pop
outsb
fisubl
xor
sbb
mov
movntq
out
addr16
and
mov
daa
sub
ret
cmp
cmp
fs
push
loope
and
stos
sbb
je
movb
das
fisubrl
movsb
js
nop
leave
add
movsb
lret
add
jns
test
sub
jecxz
decl
xor
cmpsb
mov
jb
cmp
and
ss
gs
push
push
inc
divb
movb
aad
lds
and
inc
add
push
push
push
inc
divb
movb
aad
lds
gs
aaa
jne
gs
push
pop
inc
repnz
movsl
fists
mov
lds
dec
and
ss
gs
push
xchg
jl
repnz
imul
inc
out
mulb
in
xchg
and
aam
enter
out
xchg
push
test
movsb
movsb
rcll
je
xchg
add
xor
and
push
les
aam
in
notl
push
es
movsb
fisttps
inc
insb
out
jge
or
mov
decb
addl
ljmp
sub
mov
push
xchg
stos
dec
in
pop
scas
dec
scas
lock
dec
cmp
or
out
out
inc
lahf
imul
push
test
in
adc
lret
jmp
scas
sub
enter
mov
scas
enter
add
dec
mov
test
mov
movsb
push
add
inc
push
je
push
mov
insb
mov
jb
cmp
sub
add
jnp
ds
es
sub
xor
clc
mov
cmpsb
and
jae
jbe
lods
cld
pop
or
pop
movsb
test
cs
test
cltd
loope
hlt
mov
icebp
dec
ss
push
push
out
loope
xchg
adc
add
sub
dec
fdivrl
outsl
std
push
mov
xchg
es
shlb
xchg
gs
sti
push
pop
fisttpl
mov
sbb
inc
mov
leave
sub
inc
addl
repnz
ss
dec
inc
lods
push
movsl
and
gs
fdivs
shrl
notb
js
add
xor
and
aam
les
jbe
push
xchg
push
test
mov
movsb
push
inc
out
mulb
xchg
add
xor
and
aam
les
jbe
push
xchg
push
test
mov
movsb
push
adc
ja
sub
outsb
inc
sub
mov
add
xchg
lds
sub
push
push
enter
sbb
add
or
jbe
inc
mov
mov
js
dec
gs
loope
icebp
jl
xchg
inc
cwtl
sub
out
dec
divb
call
and
fs
pop
jle
push
jl
imul
into
push
movsl
adc
sahf
xor
cmpb
clc
push
lea
idivl
mov
scas
add
pop
movsl
insl
scas
dec
mov
push
icebp
cmp
inc
loope
test
hlt
or
jg
loop
sbb
mov
adc
cmp
cmp
sarl
fs
in
pusha
sbb
sbb
not
daa
shrl
sub
dec
not
and
dec
add
adc
push
int
stos
add
popa
test
mov
inc
test
out
sub
xchg
or
movsb
mov
push
pop
subb
lahf
rorl
popa
inc
popa
popf
jle
push
cmp
mov
rorb
push
pop
aad
cmp
push
fnstsw
repz
mov
sub
jl
jmp
mov
mov
cmpb
mov
aaa
or
daa
pushl
mov
mov
push
fs
sti
cmp
mov
ja
jb
pop
push
xchg
gs
rorl
sub
faddp
or
xor
push
punpckldq
in
outsl
js
adc
sbb
rcll
fstpl
and
push
mov
ljmp
cmc
pop
jns
cmp
mov
mov
outsb
pop
sbb
fmull
lock
xchg
or
inc
rol
shlb
sbb
adc
pushl
lret
test
or
movsb
shrl
push
inc
call
inc
cmc
or
icebp
nop
gs
inc
or
pop
sbb
inc
gs
mov
sub
scas
dec
bound
arpl
out
dec
cmc
call
pop
aad
stc
add
sahf
sbb
dec
pusha
dec
fs
les
and
leave
lahf
imul
int
out
push
ljmp
push
pop
cli
insb
adc
daa
lahf
xchg
pop
call
ss
dec
sti
push
pop
sub
loop
arpl
xchg
pop
loop
lods
ficoml
sahf
xor
mov
pop
add
xchg
js
add
inc
imul
and
stc
sub
arpl
xchg
mov
push
xchg
stos
lret
mov
and
add
cld
sbb
fs
pop
mov
shlb
dec
xchg
in
sub
jns
push
arpl
outsl
in
test
cmp
push
push
dec
sbb
xor
jge
aaa
jo
or
inc
out
add
and
ror
call
xor
popa
jg
ljmp
jmp
sbb
fdivrp
mov
popa
imul
xchg
push
add
lds
cmpsl
mov
push
outsl
cmpsb
aaa
icebp
adc
cmp
push
cwtl
lcall
ficoms
or
mov
xchg
cmpb
or
xchg
mov
jl
adc
xor
adc
hlt
jmp
pop
mov
nop
cmp
stos
lock
or
jnp
mov
fisttpll
fsubs
jp
lods
jno
fcomi
sub
sbb
outsb
push
bnd
xlat
lahf
test
xor
ror
and
or
jne
pop
fwait
inc
aaa
adc
adc
stc
leave
test
mov
jno
add
xchg
stos
jns
iret
xor
mov
jb
lret
mov
ljmp
stc
pop
cs
dec
out
fisubrl
xchg
das
cmp
insb
cwtl
fisubl
lods
mov
imul
mov
inc
mov
mov
call
fisubl
inc
pop
addr16
sbb
fcoms
nop
xchg
movsb
dec
mov
bound
and
fisttps
pop
test
xor
jl
dec
in
sub
lds
sub
rclb
in
and
divb
cmp
push
push
test
xor
pop
inc
cmpsb
scas
dec
pushf
aad
pop
mov
sub
out
jae
sahf
es
fnstcw
sbb
xor
jmp
cmp
pop
push
ljmp
mov
mov
push
ja
adc
jb
sbb
push
into
test
pop
icebp
cltd
jb
hlt
cmpsb
sub
pop
pop
mov
mov
imul
jp
pop
mov
and
adc
int
mov
shrl
nop
add
addr16
push
adc
sar
out
mov
dec
push
lahf
int
sbb
aad
out
int
fiaddl
into
adc
repz
test
mov
mov
cmp
psubusw
cmp
pop
push
ljmp
jb
das
cmp
push
xchg
leave
add
iret
inc
mov
inc
and
popa
add
lret
pop
loopne
mov
lods
pushf
fs
outsl
push
aaa
adc
dec
movsl
or
sahf
fimull
dec
fcompl
loopne
in
mov
iret
xchg
dec
xor
movl
cmpb
ret
aas
sti
dec
stos
xor
or
aas
adc
mov
mov
inc
sub
dec
sub
movsl
add
jae
pop
std
add
and
aaa
inc
adc
in
and
dec
lahf
or
divb
mov
xor
and
pop
mov
lret
sub
xchg
lret
dec
fdivrs
call
fwait
or
in
add
test
fucom
stc
adcb
insb
dec
ljmp
lods
add
lret
aam
mov
lcall
pop
cld
mov
pop
mov
mov
lret
mov
shl
jl
mov
pop
rolb
je
pop
add
imul
stos
in
int
lea
pop
enter
stos
movsb
jbe
je
mov
js
dec
rcll
mov
pop
rclb
loop
stc
adc
call
cmp
cmp
cwtl
or
jl
jno
out
sbb
pop
gs
add
aam
cmc
cmp
rorb
aaa
arpl
jecxz
gs
or
int3
cwtl
scas
push
jns
sbb
sub
inc
and
gs
mov
dec
mov
mov
inc
sbb
mov
push
out
iret
dec
leave
xor
popf
mov
cmc
inc
pop
ret
sti
mov
fcoml
sbb
pop
dec
rorb
sbb
es
pushf
aad
icebp
out
lods
cmp
mov
shll
adc
jle
sub
mov
jl
orl
movl
add
xor
dec
sub
push
popa
fistpl
mov
inc
push
movsl
sbb
jmp
jno
cmpsb
fisttpll
jecxz
push
mov
ds
pop
shrl
fdivs
in
jne
add
ret
fistpll
or
adc
xor
and
jo
in
mov
insl
adc
sahf
aam
jmp
imul
ret
inc
push
and
dec
xchg
inc
ficomps
lea
dec
jle
icebp
and
push
mov
rcll
cmp
ja
jne
inc
lret
loopne
test
mov
sbb
adc
imul
mov
dec
cmp
push
scas
bound
mov
push
or
lock
add
push
inc
leave
rclb
mov
popf
inc
loop
ret
stos
addr16
mov
sub
add
sub
notl
loop
sbb
mov
push
lret
jo
push
ja
movsb
dec
mov
shrl
insl
imul
mov
punpcklbw
and
dec
inc
mov
inc
rol
icebp
jno
adc
jbe
xor
sub
roll
sbb
push
push
pop
rcrl
sbb
in
pop
insb
lods
cmp
jnp
xchg
cmp
scas
out
sti
pfrcp
sbb
mov
fists
fwait
enter
cld
add
lds
adc
lahf
gs
inc
pop
or
test
movsl
movsl
icebp
movsl
rcrb
pop
mov
mov
js
xor
jecxz
inc
sub
mov
inc
sub
fisubs
mov
push
push
out
leave
orb
mov
shlb
or
dec
loopne
push
jmp
xchg
xor
or
inc
fwait
lea
stos
dec
fidivl
loop
mov
aam
sbb
gs
sub
cli
cmpsl
mov
push
bound
lods
mov
xor
cmc
stos
dec
outsb
andb
inc
or
lcall
lcall
aas
test
clc
rcr
adc
mov
daa
ss
std
push
sti
mov
shll
push
stos
das
pop
push
pop
adc
xor
aam
les
jp
pop
sbb
cmpb
shll
out
jns
and
pop
repz
loopne
stos
sub
jo
and
test
inc
cmp
sub
cmpl
mov
test
ds
dec
mov
or
pushf
mov
shrb
arpl
int3
add
sub
inc
icebp
add
lods
mov
pop
fdivr
shll
mov
xchg
gs
enter
lret
stc
mov
add
in
add
in
jnp
pop
push
test
movsl
stos
jle
fdivs
rolb
jnp
aam
pop
jg
and
push
mov
cmp
repz
aaa
dec
cmp
sti
fmuls
aaa
xlat
aam
fistpl
and
jl
std
mov
lret
push
xor
pop
dec
and
into
fsts
cld
lds
mov
jae
jecxz
jns
ucomiss
daa
jne
pop
mov
pushf
out
mov
push
mov
and
ret
rclb
imul
sub
adcb
stos
or
adc
gs
sbb
fsub
mov
enter
push
push
and
cld
sub
out
std
and
imul
movsb
xor
ret
mov
mov
xchg
mov
mov
xlat
cld
iret
mov
pop
fcmovnbe
pop
push
mov
mov
inc
xchg
nop
pop
jecxz
outsl
or
xchg
out
mov
nop
sti
loopw
fs
mov
pop
js
dec
inc
cmp
and
fcompl
sub
adcl
ds
pop
mov
sbb
sbb
in
or
clc
rolb
sbb
xchg
add
jbe
push
push
mov
xchg
sbb
insl
das
je
xor
jl
mov
dec
loope
adc
mov
jbe
add
adc
ret
push
call
std
jg
es
push
xchg
idivl
fs
jo
jecxz
test
adc
test
sahf
adc
xchg
adc
cmp
cltd
popf
test
adc
repnz
mov
pop
dec
pop
arpl
mov
pop
cmpsl
aad
xlat
std
mov
or
in
outsl
pop
pushf
mov
imull
ss
xchg
adc
aas
leave
xchg
rorb
push
push
ja
in
loopne
cmp
icebp
jbe
xchg
movsl
lods
insl
orl
xchg
pop
mov
out
dec
xchg
inc
and
stc
jmp
push
decl
jge
cmp
in
mov
ja
shlb
sbb
jl
mov
mov
lds
and
hlt
insl
and
push
das
cs
sub
mov
lock
add
mov
sbb
jmp
mov
jecxz
shll
addb
xchg
arpl
je
scas
orl
xchg
les
mov
imul
out
nop
xchg
jno
pop
jns
fistl
out
stc
movsl
gs
clc
push
leave
xchg
mov
pop
lods
rcrb
gs
ss
sti
call
call
add
jg
std
in
sub
inc
cmpsl
nop
sbb
jle
push
cmpsb
daa
ret
jnp
or
pop
xlat
movsb
lods
ja
adc
iret
cmp
pop
mov
dec
int
or
mov
stos
mov
rorb
ja
mov
test
xorl
popf
ja
add
dec
fiaddl
push
sub
std
adc
fildl
push
jns
and
fcoml
cltd
mov
mov
and
adc
cmpsl
xor
add
sbb
xor
test
jbe
sub
xchg
sub
fxch
fyl2x
mov
cmpxchg
sbb
pop
cmp
mov
inc
shrl
add
movsl
rolb
xchg
jmp
xor
cmp
and
sbb
inc
stos
xor
mov
notb
loope
adc
add
les
lods
cli
push
cmp
outsl
in
test
lret
jmp
xchg
xchg
xlat
mov
ds
pop
lret
mov
mov
or
adc
in
ljmp
shll
dec
jge
pop
mov
jb
push
pop
or
push
cltd
xor
jl
mov
mov
adc
dec
xor
mov
nop
movsb
idivl
add
sar
aam
pop
inc
mov
mov
imul
and
sbb
inc
or
shrb
outsl
fmuls
lock
push
xchg
xor
imul
cs
mov
stos
out
incb
dec
cmp
inc
mov
rcll
mov
sbb
dec
ret
adc
fs
int3
pop
pop
dec
loop
pop
imul
inc
shr
lret
cmp
lock
mov
lods
and
sub
ljmp
inc
out
inc
fs
inc
jns
jno
and
aas
int3
pop
cmpsl
jl
out
dec
scas
leave
packssdw
rcr
hlt
push
adc
pop
sti
xchg
pushf
dec
inc
in
test
lret
iret
mov
fldl
push
sar
pop
rcll
lods
sbb
test
mov
out
or
loop
add
rcl
xchg
fmuls
data16
xor
sub
cmp
pop
dec
jge
add
js
mov
jg
lock
fidivl
loop
ljmp
or
ljmp
xor
and
dec
shll
lret
mov
jae
adc
lea
addr16
push
ljmp
in
add
add
xchg
xchg
mov
sar
mov
and
aas
lods
cld
mov
xor
jge
mov
scas
sub
pop
out
aad
sub
cld
add
imul
jg
mov
xor
xchg
out
pushf
push
ja
rorb
or
adc
add
lods
xlat
dec
dec
dec
out
hlt
push
xchg
mov
pop
push
test
sub
pop
loopne
ljmp
adc
lods
push
sub
scas
dec
inc
fs
call
xchg
cmpb
es
cmp
test
cli
loope
push
cmp
ret
and
stos
xchg
pop
xlat
jp
clc
fdivl
pop
mov
adc
insb
in
xchg
test
sbb
dec
sbb
jp
dec
sbb
xor
lods
pop
pop
data16
sub
mov
rcll
sbb
pop
stos
adc
fistl
adc
push
xchg
outsb
inc
testl
pop
add
mov
cli
daa
mov
bound
sahf
mov
mov
adc
js
mov
bswap
sti
push
push
adc
add
int3
aas
rcl
sahf
xor
mov
push
xlat
or
dec
sub
mov
inc
out
jp
push
and
ljmp
mov
jae
mov
fdivrs
xor
jae
stos
push
xor
mov
shrb
dec
push
sub
fdivs
fstl
outsl
imul
cmpsl
je
xor
sbb
push
rolb
pop
mov
mov
sbb
cli
mov
bound
inc
xchg
pop
cmp
lds
loope
fcomps
adc
outsl
ficoms
mov
and
pushf
xchg
sti
loope
loopne
or
mov
imul
pop
cmp
fmulp
das
xlat
mov
cmpb
aas
mov
shlb
mov
inc
fisttps
sbb
lret
loop
mov
push
dec
sarb
inc
loope
or
fildll
xchg
cmpl
push
or
mov
inc
dec
loopne
inc
xor
jl
rol
xchg
inc
fcoms
cmp
pop
inc
inc
mov
out
mov
out
xor
movsl
fs
insl
jbe
pop
or
imul
xor
or
adc
sbb
rolb
lcall
loope
lahf
jecxz
addr16
inc
mov
sbb
stos
aas
xlat
pop
scas
mov
jmp
add
in
or
cmpsl
mov
outsl
xor
mov
push
push
xorl
nop
pop
cmc
xchg
pop
sti
mov
dec
stos
mov
and
into
cli
mov
mov
pop
mov
cmp
fmulp
icebp
jb
xor
pop
test
negl
push
jp
out
sbb
adc
pop
push
push
fisubs
or
sbb
out
dec
mov
test
jl
xchg
mov
js
stos
mov
mov
cmpsl
repz
dec
lcall
sarl
inc
cmp
inc
adcb
add
int3
js
add
inc
popf
xor
jmp
lock
je
imul
dec
nop
jae
push
inc
sub
lret
or
shrb
pop
test
cli
fldcw
cmpsl
inc
cmc
sbb
or
and
and
mov
jecxz
mov
inc
pop
loop
int3
cmp
lods
mov
jmp
lcall
xchg
aad
aam
sub
lret
jl
outsb
adc
lret
out
pushf
lret
sub
dec
rorb
push
aam
mov
popf
or
jmp
mov
or
mov
sti
push
loopne
and
inc
sahf
adc
or
inc
stc
subb
jg
mov
adc
mov
popf
test
mov
mov
mov
mov
or
fwait
adc
out
adcl
loop
and
push
sub
add
jns
fldenv
insl
in
in
shrb
push
cld
add
mov
cmp
jns
dec
add
dec
push
test
rcll
inc
inc
std
addr16
mov
addr16
out
push
jl
out
es
jge
dec
push
lahf
sub
in
mov
cmpsl
cmpsl
scas
cli
xlat
je
andl
push
inc
or
xchg
push
mov
hlt
mov
pop
movsl
xchg
insl
pop
gs
clc
add
cmp
mov
pop
pusha
jne,pn
repz
add
ss
cmp
aad
lcall
addr16
jmp
aas
mov
inc
jle
add
incb
lods
push
xchg
adc
xchg
mov
mov
addr16
imul
xchg
out
sub
cmp
xor
mov
mov
pop
js
std
cs
jo
jne
mov
mov
jle
fmul
scas
sbb
xor
addr16
xlat
jl
jecxz
pop
pop
out
adc
aam
movsb
push
push
pop
adc
popa
add
lock
sbb
push
xlat
iret
popf
out
jne
push
mov
inc
push
jb
outsb
adc
fdivrs
jbe
fstpt
les
imul
imul
xor
into
mov
mov
fs
pop
xchg
hlt
imul
mov
dec
sarb
clc
in
in
inc
outsl
insl
aam
outsl
jmp
add
push
adc
jle
mov
cmpsl
leave
test
xchg
sub
rcrb
jg
mov
mov
call
jecxz
mov
pushf
das
aaa
inc
fcmovne
push
mov
sub
jnp
clc
sub
or
movsb
xor
mov
sbb
ret
jbe
xchg
dec
jb
inc
in
xor
std
hlt
mov
or
test
fstpl
ljmp
sbb
dec
mov
outsl
and
ficomps
xchg
fnsave
dec
das
pusha
lcall
lret
in
test
or
popf
outsb
aaa
push
dec
sbb
jl
sbb
lock
shlb
jnp
leave
inc
stos
sub
dec
and
jbe
lret
mov
fs
and
mov
dec
inc
icebp
jnp
lret
das
out
dec
mov
push
adc
jg
sbb
in
pushf
add
xchg
aaa
adc
mov
cmpsl
sub
out
fsubp
mov
push
faddp
jg
mov
ret
scas
sbbb
stos
mov
iret
dec
mov
insl
adcb
loop
das
mov
jg
push
add
xchg
test
orl
dec
xchg
loopne
add
adc
out
mov
cmp
jmp
sti
nop
adc
dec
xor
out
inc
subl
scas
jae
loope
nop
mov
mov
pop
xchg
je
mov
hlt
movb
lcall
push
into
lret
test
inc
lahf
cmp
scas
mov
jo
hlt
mov
je
pop
cmp
bound
inc
jecxz
icebp
in
inc
dec
fwait
mulb
xchg
add
xor
and
aam
les
jbe
push
xchg
push
test
mov
movsb
push
inc
out
mulb
xchg
add
xor
and
aam
les
jbe
push
xchg
push
test
mov
movsb
push
inc
out
mulb
xchg
add
xor
and
aam
les
jbe
push
xchg
adc
push
loop
shlb
xchg
add
xor
and
aam
outsb
int3
hlt
jbe
jno
sahf
jnp
dec
leave
pop
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
jae
arpl
cmp
xchg
retw
jecxz
rcll
ret
add
push
addl
arpl
xor
and
rolb
mov
xor
add
sbb
addl
arpl
xor
and
adc
in
jecxz
mov
and
in
inc
cmp
xor
jae
and
into
clc
sbb
xor
cwtl
sbb
nop
inc
cmp
ret
sbb
cmp
mov
enter
repz
push
sbb
int
pop
jp
adc
mov
mov
lret
lods
insl
mov
in
dec
repz
test
notb
bound
xor
xor
repz
jb
daa
in
dec
jae
popf
xchg
mov
pop
dec
cmp
jnp
mov
sub
jecxz
pop
xor
aad
add
and
mov
adc
mov
popa
in
xchg
mov
mov
in
xchg
jae
popf
xchg
push
jmp
sub
push
inc
mov
repnz
adc
add
mov
in
add
dec
mov
mov
sub
loopne
mov
pop
xchg
jbe
inc
cmpsl
mov
out
mov
scas
imul
lret
adc
and
adc
add
cmpsl
jne
dec
rcll
mov
loope
xchg
ja
gs
and
loope,pn
subl
in
in
ret
xor
add
repz
and
adc
add
push
addl
arpl
xor
and
adc
add
repz
and
adc
add
push
addl
jne
xor
jmp
cmpsl
and
jle
add
dec
mov
loopne
sub
or
fdivrl
xor
in
hlt
xchg
fs
cltd
push
iret
jg
or
ds
loope
imulb
sbb
stos
pusha
hlt
popf
dec
or
xchg
jns
push
jno
ja
rorb
outsl
pop
push
test
cmp
sub
loop
mov
xor
fs
call
jb
divb
stos
clc
es
icebp
stos
bound
mov
aas
scas
or
adcb
dec
test
mov
lds
ret
mov
loop
xchg
js
je
loope
into
insl
inc
ja
mov
int
and
xor
roll
dec
popa
aas
mov
or
hlt
push
cmpsl
popa
inc
adc
rorb
int
lahf
jp
test
cmc
add
mov
xchg
xchg
inc
mov
imul
rcl
xchg
sub
mov
out
inc
pop
push
inc
dec
adc
adc
mov
or
jno
loopne
pop
cwtl
adc
roll
mov
push
les
icebp
dec
push
xor
inc
push
mov
inc
sbb
rcll
add
lret
or
ljmp
pop
ja
arpl
xor
jle
stc
iret
mov
pushf
xchg
sbb
push
jmp
std
into
scas
inc
dec
pushf
hlt
xor
lods
fld
adc
adc
cmpsb
stos
les
xchg
outsb
push
mov
mov
mov
inc
sbb
fisubl
xchg
test
cltd
dec
cmp
jecxz
pop
dec
loope
loopne
imul
repnz
dec
sub
lret
push
insb
adc
xchg
xor
rcrb
and
pop
push
aaa
mov
mov
and
into
sub
push
xchg
out
sub
and
lret
pusha
mov
mov
repnz
out
jbe
xchg
fcompl
aaa
and
adc
pop
mov
in
test
mov
mov
and
pop
andl
mov
call
gs
mov
and
pop
sbb
cmp
add
shrb
in
cmp
div
pop
mov
mov
gs
push
xchg
cltd
push
pop
es
mov
dec
filds
add
rcrl
xchg
xlat
inc
stos
sub
pop
cmc
test
movsb
pop
cwtl
or
pushf
push
push
and
or
out
call
dec
add
mov
mov
fimuls
mov
das
lods
movsb
mov
vminpd
hlt
jb
xor
and
incb
cs
and
add
stos
pushf
push
inc
call
arpl
inc
cmp
push
imul
dec
and
popa
subl
and
cmpsl
cmp
xlat
rcrb
jnp
push
push
dec
push
jno
add
shrl
icebp
popf
rolb
jo
sub
xchg
pop
data16
pop
rcrl
add
mov
aaa
xchg
dec
out
in
mov
psubd
out
pop
sti
push
ret
fwait
jo
mov
dec
mov
xchg
jno
ret
fsubs
addr16
pusha
leave
jge
loope
adc
mov
mov
repz
or
cmp
ljmp
cmpsl
inc
sub
xlat
test
hlt
test
add
adc
mov
out
add
push
pushf
mov
lock
or
jb
cs
fbld
cltd
lock
pop
pop
mov
pop
adc
adc
cmp
iret
rorb
imul
jp
pop
in
jmp
jmp
lcall
lcall
pop
decl
add
jae
add
out
out
dec
int3
mov
mov
fs
stos
mov
ljmp
outsb
in
push
pop
iret
mov
push
push
repnz
xchg
pop
imul
sub
cmp
mov
hlt
push
fidivrl
in
stc
imul
dec
mov
es
mov
fsubrp
sub
push
cmp
dec
fisttps
bound
xchg
rclb
mov
in
push
stos
push
lahf
insb
fstpl
repnz
jmp
repz
scas
jbe
inc
mov
loope
imul
sarb
test
inc
repz
adcl
into
in
jle
jg
mov
shrl
push
push
cltd
sbb
enter
sahf
dec
mov
cmpsb
add
mov
jae
add
call
fstenv
stos
subl
push
push
mov
stos
add
push
lds
mov
jp
xor
mov
cwtl
cs
sti
pop
in
pushf
xor
dec
jno
mov
cs
or
mov
jne
and
out
pop
xchg
clc
xor
shll
clc
mov
leave
sti
data16
jle
adc
push
xor
inc
int
loope
pop
cmpsb
xchg
mov
fsubr
mov
aad
scas
pop
js
mov
jecxz
js
dec
or
stos
and
fstps
jl
ja
sbb
iret
scas
aam
popa
ss
rcll
ss
clc
inc
or
dec
jno
out
addr16
cmp
push
mov
and
adcb
pop
fistl
rcrb
sub
lods
adc
add
rcl
pop
ret
mov
mov
mov
xchg
jne
add
xchg
ja
mov
mov
dec
xchg
lods
out
test
mov
mov
in
add
js
int
sbb
push
cs
jae
fsubrl
sbb
mov
xchg
add
inc
mov
add
push
add
xchg
mov
mov
xlat
daa
push
in
and
frstor
mov
dec
cltd
pop
push
push
and
outsb
inc
mov
pop
sub
mov
dec
mov
je
push
test
add
mov
pop
add
scas
xacquire
mov
stos
hlt
mov
repz
cmp
test
scas
cmc
xor
fimuls
mov
inc
mov
xor
add
and
ret
mov
and
xchg
xor
pop
mov
mov
sbb
aam
pop
fcoml
repz
in
sub
cmovg
sub
mov
inc
lea
loop
push
test
xchg
or
cmp
das
loopne
das
shll
jns
pop
insb
fs
sbb
sbb
ret
shlb
lea
mov
mov
cltd
lea
ret
in
insb
cmovle
xchg
or
aam
xchg
popf
inc
push
call
cli
push
xchg
mov
pusha
addr16
out
sub
imul
js
pushf
shl
mov
pop
and
fistpll
adc
daa
jo
vpmuludq
pop
jle
push
mov
push
out
or
subb
pop
outsl
neg
imul
jno
div
popa
mov
xchg
adc
enter
adc
ljmp
je
and
int
pop
dec
push
or
mov
jge
insb
sbb
mov
cld
scas
jae
sub
dec
stos
test
push
daa
subl
loope
adcl
fsubrs
push
cmpl
mov
dec
cmc
test
push
mov
add
stos
lods
push
inc
xchg
int3
xorb
pop
cmp
andb
ror
push
ficomps
xor
jne
cltd
jmp
jo
jl
push
das
and
xchg
shr
movsl
ds
sbb
insl
aaa
jg
test
mov
jp
or
adc
scas
cmpsb
pop
xor
push
pop
push
fistps
jns
or
out
adc
in
jmp
fs
into
add
lods
loopne
cmpsl
loopne
mov
popa
mov
jns
cmpsl
dec
pushf
and
and
xchg
add
sbbb
test
sbb
mov
xchg
push
mov
dec
push
das
jo
pop
cmp
xchg
xchg
rolb
je
ret
cmp
loop
or
mov
insb
ss
daa
stc
dec
insl
xchg
cmp
adc
clc
rclb
pusha
adc
test
js
js
mov
dec
lahf
mov
or
std
sbbb
adc
out
aad
jl
inc
lahf
add
or
push
test
pop
addr16
pop
xchg
xchg
mov
inc
out
jb
cmpsl
in
aaa
loope
fsubl
jecxz
mov
xchg
dec
aam
in
jnp
jns
pop
cmp
movsb
cmc
pop
xchg
inc
lret
sub
cmc
pop
pushf
dec
adc
inc
aas
divl
jo
out
lret
out
lock
mov
mov
mov
mov
inc
inc
ds
repz
stos
flds
jg
lock
lret
ljmp
dec
inc
xchg
mov
insb
addr16
dec
inc
jg
cwtl
sub
std
dec
dec
cmp
psubw
scas
rcrb
movsb
jg
lret
mov
push
mov
daa
movsl
sub
hlt
das
adc
sbb
pop
xor
mov
popa
rep
jle
arpl
clc
inc
cmp
fcompl
push
push
and
adc
cmp
ja
xor
test
insl
mov
adc
nop
jle
and
and
sarl
lahf
push
cwtl
ret
leave
pop
ljmp
xor
pop
sbb
xchg
into
jne
fmul
jnp
daa
in
jns
push
xor
ljmp
imull
es
jge
in
sbb
shll
lods
push
inc
les
dec
lds
pop
lds
cmp
int3
cmp
in
es
cmc
aaa
aas
adcb
clc
adc
inc
mov
pop
bound
sbb
cli
not
push
push
leave
sbb
cmpsl
icebp
movsb
add
or
cmp
adc
ret
jmp
fwait
ret
lock
cld
and
mov
mov
jo
mov
inc
aad
cmpsl
pushf
pop
add
push
pushf
movsb
fmulp
xor
mov
jnp
shlb
outsb
jmp
cltd
cwtl
sarl
pop
repnz
xchg
loopne
jl
aaa
popa
push
or
push
gs
pop
push
dec
jecxz
mov
mov
inc
jae
sbb
aam
repnz
movsb
pusha
das
mov
mov
iret
scas
stos
cltd
mov
and
add
add
test
xor
jp
testl
cmp
mov
aam
aaa
jbe
call
negb
xlat
mov
cmp
test
dec
out
shlb
orl
jns
imul
lahf
je
or
xlat
popa
stc
aad
pop
mov
pop
int
rcl
int
int
adc
loop
mov
or
sbb
nop
cmc
mov
xchg
in
dec
push
pop
dec
xorb
fs
push
js
movl
insb
mov
fdivp
icebp
sbb
xor
int3
std
sbb
jge
dec
xchg
mov
or
inc
mov
xor
aaa
mov
std
dec
dec
movsb
aas
inc
das
push
mov
adc
mov
test
xor
paddq
and
dec
loope
out
imul
mov
mov
sub
cmp
test
pop
pop
aam
sahf
lahf
js
jno
in
cmp
mov
and
fistpl
scas
ror
nop
cmpsb
add
adc
addr16
pusha
lods
daa
cmc
int3
or
mov
dec
or
test
xchg
xor
jae
mov
lahf
mov
negl
mov
sahf
rol
sti
xchg
popl
cvtps2pi
jg
adc
mov
data16
cmc
imul
stc
push
inc
fisttpll
xor
push
test
rcl
test
fnsave
mov
je
ud1
add
adc
inc
outsb
mov
or
or
in
adc
push
mov
nop
pop
xor
outsb
lcall
pop
scas
fnstsw
xchg
inc
or
hlt
es
and
pop
add
out
popf
cli
shrb
xchg
mov
sub
xchg
loope
fs
cmp
inc
lods
mov
es
jmp
repnz
mov
jno
push
push
adc
xchg
pop
gs
mov
add
sub
popa
test
bound
jo
or
xor
xor
xor
sub
loop
mov
cmp
dec
inc
jbe
mov
je
pop
dec
arpl
test
xor
adc
adc
push
dec
push
shl
pop
data16
mov
ret
fcmovnb
inc
mov
in
movsl
dec
leave
imul
and
mov
cmp
stos
mov
clc
fcomps
outsb
popf
stos
fbstp
xchg
mov
xor
bound
idiv
pusha
aam
xor
imul
dec
push
add
and
and
fsubrl
cmc
sub
fstl
fwait
divl
sbb
cmc
jle
out
pop
sbb
and
idivb
fs
stos
jne
mov
push
xchg
repnz
js
push
push
jmp
pusha
add
mov
shl
shl
jmp
jle
add
pushf
fsubrs
mov
int
adc
dec
addr16
in
add
movsl
pop
test
and
jmp
inc
mov
ljmp
xchg
sbb
sbbb
xchg
jne
stos
es
cs
loope
dec
jg
cmpsb
call
mov
rorl
test
mov
sti
mov
addl
cmp
add
adc
rcrl
cwtl
push
push
adc
cmp
pop
idivb
xor
cltd
xchg
push
nop
daa
cmpsl
xchg
lods
jecxz
inc
add
test
xchg
xchg
out
subl
jp
sbb
in
sbb
sbb
sbb
push
ss
cmpsb
call
test
out
pusha
enter
pop
fldl
loopne
pop
outsb
mov
lods
mov
hlt
fmul
ljmp
mov
mov
bound
outsb
les
cld
fwait
enter
push
dec
xchg
mov
adc
adc
mov
clc
in
adc
cmp
jg
jno
loopne
mov
xorl
aam
and
sbb
adc
push
leave
ss
pushf
pushl
movsl
mov
repnz
sub
icebp
out
inc
sti
or
mov
popf
mov
push
jnp
ror
mov
mov
scas
mov
mov
mov
pop
cmp
movsl
push
repz
xlat
divb
xor
xchg
add
push
cmp
into
push
das
inc
idivl
dec
jmp
cmp
cmp
jbe
push
out
cmp
xchg
push
mov
fbstp
push
ss
jo
jl
cmp
dec
shl
insl
cltd
cld
and
lods
dec
or
outsb
inc
insl
mov
imull
add
in
out
mov
std
inc
lea
dec
xlat
daa
and
push
inc
jne
xchg
psubw
shrl
dec
push
js
sbb
sub
and
add
aam
xchg
jo
xor
add
mov
imul
add
sbb
mov
adc
cltd
pop
roll
jg
jb
lcall
sub
movsb
lret
xchg
adc
ret
fcmovnu
insl
adc
mov
aaa
adc
outsb
mov
push
fimuls
mov
and
jae
dec
pop
fstps
pop
fisubs
inc
loope
add
test
popa
insb
or
cld
inc
daa
push
inc
mov
iret
dec
push
push
aam
pop
lods
sub
lock
cmc
and
mov
imul
int
mov
insl
arpl
sbbl
mov
sbb
nop
and
sub
arpl
push
insl
pop
popa
and
scas
dec
xor
mov
xchg
mov
inc
movsl
pop
dec
mov
out
mov
or
js
popf
xchg
and
mov
mov
imul
push
aad
rclb
and
popa
jb
add
pop
or
idivl
mov
movsb
add
mov
adc
dec
insl
xchg
lea
sub
dec
sub
out
xor
btr
xchg
insb
or
fbstp
add
aad
adc
add
cli
pop
loop
je
sbb
xchg
cltd
outsb
xor
outsb
inc
subb
xor
mov
xchg
std
in
xchg
add
pop
sub
jl
fwait
cmp
bnd
in
fidivrl
mov
pop
aam
inc
sar
std
xor
mov
xor
xor
icebp
into
dec
or
jae
xchg
repnz
outsb
iret
pop
repz
cmp
out
pop
mov
testl
les
push
mov
xchg
rcrl
movsb
fucomp
lcall
fimuls
inc
das
sub
add
cmp
ja
inc
fimull
sub
or
scas
fcmovnu
lods
jge
push
popf
jne
or
or
loopne
dec
cmp
ss
and
jecxz
push
mov
inc
sub
leave
inc
sub
mov
arpl
int3
pop
adc
mov
je
mov
sub
push
mov
lods
sub
repnz
sub
lea
xor
rcrl
lcall
add
mov
mov
fistpll
fstp
shrb
mov
mov
out
aad
out
push
jp
insl
adc
sub
outsb
adcl
or
lahf
in
dec
mov
push
subb
daa
je
pop
ds
cmp
xchg
mov
or
jmp
jo
repz
push
rcr
pop
divb
data16
lds
int
mov
jmp
ret
ficomps
or
push
std
pop
adc
mov
subl
xchg
sub
pop
adc
in
popa
sarb
idivl
xor
or
std
or
fwait
xchg
adc
fwait
cmc
inc
repnz
push
xadd
mov
jg
push
aas
xchg
shll
das
push
icebp
mov
sub
pop
addr16
sub
add
add
inc
and
push
push
in
push
movsl
mov
jl
and
test
lock
out
mov
in
flds
push
and
aad
ds
out
pop
scas
ds
lock
call
mov
fcomps
cmp
les
in
mov
cmp
aam
cs
add
and
xchg
call
xchg
ret
dec
or
and
dec
pop
loop
cmp
and
movsb
fisubrs
insb
lods
adc
xor
notb
leave
mov
pop
dec
pushf
iret
shl
leave
mov
push
inc
dec
aam
repnz
jns
xor
inc
ja
mov
loop
or
push
test
pop
gs
xor
mov
pop
pop
mov
fwait
inc
xor
imul
mov
adc
cmp
inc
sub
stos
mov
cld
stos
shll
sbb
jmp
jge
xor
rcrb
out
movsl
movsb
mov
call
inc
xchg
jae
mov
jae
sahf
imul
or
or
and
iret
outsb
and
lods
test
call
mov
ja
cmp
pop
add
dec
jne
pop
or
outsb
lds
out
dec
and
rcl
mov
xor
xchg
fildl
popa
dec
lds
stos
test
push
mov
dec
insl
loope
lea
je
cwtl
ja
sub
xchg
inc
dec
push
xor
push
clc
popf
cmp
ret
mov
lds
mov
loop
js
into
mov
popf
xor
add
mov
lea
push
jp
jns
pusha
cmp
inc
mov
ret
mov
sahf
add
dec
jmp
aad
jle
andb
cmpsl
inc
xchg
dec
outsb
push
int
test
push
addr16
repnz
push
gs
xor
leave
cld
mov
stc
bound
xlat
ficompl
sbb
cmpsb
sbb
xchg
clc
xchg
jae
cli
mov
cmp
ss
and
scas
mov
cmpsb
and
cmp
cs
push
cmpsb
inc
and
sarb
lret
movsb
jo
imul
xchg
outsb
xchg
sbb
shl
in
shrb
mov
dec
jae
sub
in
jno
add
pop
pop
push
nop
dec
addb
js
stos
xlat
or
sub
aad
out
icebp
jbe
dec
mov
sbbl
sub
jp
fcmovnu
loop
jae
loope
data16
ds
push
shlb
cmp
dec
or
in
adc
aam
aam
movsl
sub
or
lret
or
mov
adc
mov
xor
mov
shl
out
add
mov
mov
loopne
insb
std
mov
push
pop
rclb
sub
push
xadd
mov
jmp
cmp
ja
push
out
lret
sti
aaa
mov
jl
pop
pop
add
dec
in
clc
xchg
sbb
insb
push
jnp
xchg
cmp
sbb
xchg
lods
jnp
mov
mov
sbb
loop
stos
push
loope
fcomps
fstpt
jne
imul
mov
xchg
sbb
push
in
data16
lds
mov
insl
fildll
jns
add
jecxz
ljmp
mov
js
mov
int
dec
adc
cwtl
pop
sub
lret
cmp
lcall
repnz
adc
add
repz
and
adc
add
push
addl
arpl
xor
and
adc
add
repz
and
adc
add
push
addl
arpl
push
ljmp
adc
add
repz
mov
mov
inc
jae
arpl
xor
and
adc
ret
jecxz
jns
ret
jne
cli
sub
repnz
loop
shlb
shrb
jb
arpl
push
daa
inc
xor
push
and
adc
arpl
xchg
loop
shlb
mov
xchg
jb
bound
push
xor
repnz
inc
adc
arpl
mov
lcall
mov
stc
jb
inc
and
dec
inc
push
xor
or
filds
les
sub
cltd
adc
adc
lods
dec
andl
stos
addr16
sbb
mov
mov
sbb
in
out
lods
arpl
sbb
mov
xorb
sbb
fdivrl
push
pop
sbb
negb
ja
add
repnz
jl
dec
ret
shll
push
out
lods
int3
sub
xchg
mov
jae
push
add
cmp
mov
sti
mov
lret
aas
lcall
add
sbb
sub
push
popw
repnz
int3
push
bound
mov
ds
xchg
shrb
mov
cli
jb
bound
push
sub
xor
pop
adc
bound
stos
mov
shlb
jb
pop
add
cmp
and
sbb
seta
xchg
mov
scas
int3
mov
out
ljmp
push
push
inc
and
and
adc
pop
xchg
xchg
loop
mov
loopne
ret
xchg
repz
adc
push
xor
xor
inc
adc
arpl
xchg
loop
shlb
mov
jecxz
adc
push
xor
xor
inc
adc
arpl
xchg
nop
dec
xor
mov
and
inc
int
jbe
jl
rorl
and
adcl
mov
lods
out
or
shll
pop
les
pop
ss
xchg
sbb
sub
jp
loopne
mov
sub
xor
sbb
pop
mov
mov
in
mov
mov
or
add
dec
xchg
les
mov
sbb
rorb
stc
repz
xchg
imul
mov
inc
jl
dec
inc
mov
addr16
dec
mov
xor
je
add
int
icebp
lock
sbb
pop
sub
inc
outsl
push
ficomps
sub
test
dec
jmp
lcall
pop
rorb
stc
add
sub
icebp
xor
dec
mov
sti
and
aas
aam
fsubrs
jp
stos
and
dec
movsl
faddp
cmp
push
cmp
test
cmp
dec
mov
cld
in
aas
lea
jns
lods
and
insb
or
fidivs
adc
cltd
and
clc
and
mov
mov
es
mov
jecxz
test
sbb
cmpsl
ja
jb
mov
lea
cwtl
push
jecxz
shrb
aam
sbb
js
dec
push
ja
xchg
push
call
push
out
jl
fisttpll
jne
mov
xorl
popa
test
fcompl
cwtl
cmpsb
int3
pop
mov
lods
arpl
sub
popf
les
addr16
push
mov
cli
jge
andl
jne
int3
ss
jp
mov
scas
mov
and
lret
mov
jb
or
adc
push
imul
les
les
xchg
mov
lret
inc
mov
rorl
lcall
and
ljmp
enter
lret
insl
cmp
mov
arpl
xlat
push
and
push
adc
test
pop
cmpl
bound
cmp
xor
mov
adc
ds
subl
imul
push
roll
dec
adc
test
cli
popa
mov
orb
pop
loop
in
dec
mov
shl
sbb
fbld
mov
notb
pushf
sub
in
popa
mov
loope
inc
and
in
aas
xor
xlat
inc
ds
or
aam
fidivrs
test
inc
cli
xor
ret
js
or
sbb
repz
jp
test
cmp
dec
shll
mov
mov
sbb
ret
testb
out
popa
jg
rcll
push
pop
and
in
ss
mov
hlt
xchg
jo
sahf
js
outsl
aas
addr16
ret
xor
loope
bound
xchg
ficoms
aaa
sub
sub
pop
push
xor
xlat
mov
xor
xchg
call
lods
repz
pop
xor
sub
popf
sub
and
fsub
shll
inc
and
adc
fwait
mov
pop
fwait
daa
in
mov
cmp
cmpsl
int3
cs
jb
test
adc
xchg
cmp
mov
fisttps
sub
pop
lea
or
or
loop
inc
fistps
repz
out
cmp
and
pop
or
inc
pop
rclb
mov
pop
insl
adc
xor
inc
insb
pop
xor
loope
nop
and
test
mov
xor
movsl
pop
call
fisubrl
cwtl
jnp
loopne
test
mov
cmp
pop
cmp
in
je
push
mov
adc
mov
in
mov
sti
xchg
lret
cmpsl
stc
cmp
std
pop
je
push
jbe
loope
mov
rorl
cmpsb
ret
fmul
dec
jmp
bound
add
adcb
lea
xchg
test
cmp
cmp
sbb
push
dec
lods
push
andl
push
dec
test
fxch
inc
xchg
mov
xchg
and
cmp
loopne
cmp
push
xchg
mov
scas
cmp
aad
push
mov
pushl
xchg
mov
adc
jle
pop
sbb
sbb
pop
je
mov
mov
jp
dec
xchg
xchg
pushf
jbe
xor
sbbl
mov
incl
mov
inc
jns
pop
js
stc
or
push
xchg
fiadds
and
nop
inc
repnz
cmpsb
or
cmp
shl
jno
ja
in
mov
cli
loopne
inc
lea
inc
fisubrl
rclb
cmp
das
inc
and
sarb
and
mov
sub
aas
sub
push
call
popf
jmp
inc
scas
imull
push
popf
dec
shl
xchg
arpl
inc
adcl
inc
or
or
mov
int3
xor
pop
clc
lods
outsb
xchg
loopne
jmp
stos
mov
pop
jns
dec
or
xchg
mov
mov
sahf
pusha
dec
lcall
das
xchg
lock
fsub
push
pop
cltd
mov
stos
sub
mov
dec
xchg
scas
in
xchg
xchg
mov
mov
sub
pushf
jl
dec
mov
push
pop
aad
cltd
mov
jg
push
adc
clc
mov
cmp
mov
imul
pop
jb
outsl
iret
les
xor
push
in
xchg
int
and
roll
jnp
fisttpl
adcb
in
adc
jo
out
xchg
mov
bound
cmp
lret
lods
jmp
aaa
pusha
inc
push
mov
mov
mov
and
or
xchg
dec
jmp
push
sub
mov
dec
test
aas
int
stos
jg
sub
jl
imull
fimull
loopne
sarb
mov
addr16
push
mov
mov
je
lcall
loope
xchg
popa
inc
hlt
sub
scas
or
xor
sbb
out
aam
fs
inc
pop
fsincos
jb
mov
xchg
int3
dec
push
jl
das
nop
xchg
inc
dec
adc
jecxz
push
xchg
in
inc
and
inc
xchg
xchg
push
jecxz
xlat
dec
aad
test
repz
out
add
push
ja
data16
imul
xor
je
xor
negl
mov
in
mov
testl
jp
int3
incl
outsl
pop
add
clc
jl
add
loop
nop
mov
xchg
in
sub
dec
call
push
lods
jbe
ljmp
mov
mov
cs
sub
mov
push
xchg
fbstp
mov
xchg
jge
mov
mov
adc
repz
xchg
mov
lret
push
repnz
pop
mov
sub
adc
xor
or
mov
popf
aaa
sbb
push
xor
push
movsl
fiaddl
popa
loop
cmp
ror
andb
cmp
mov
cmp
pop
subb
fcoms
xchg
inc
lret
mov
push
xor
mov
lret
sbb
int3
mov
pop
mov
loopne
push
sbb
jmp
push
cwtl
sbbl
aam
test
cmp
mov
imul
aas
dec
mov
push
fucom
or
pop
shl
xchg
fildll
lahf
push
adc
loop
mov
ljmp
loopne
shlb
pop
cmp
mov
mov
in
mov
fdivrp
or
jnp
mov
dec
pop
dec
sub
das
pop
jne
fnsave
push
push
test
les
mov
xlat
push
pop
jo
dec
leave
sub
mov
nop
mov
xor
ficompl
into
ffree
fimuls
add
jg
pop
in
call
aas
mov
clc
push
jno
rclb
pop
sub
cmpsb
std
inc
inc
add
fsubrl
push
ret
imul
or
pop
xchg
lods
jno
jmp
in
movsl
mov
push
xchg
out
das
fiaddl
or
adc
adc
test
cmp
push
mov
orb
decb
xchg
std
subl
aam
outsl
push
push
fcmovb
and
add
sub
shr
inc
push
loope
sub
sti
inc
and
push
mov
and
test
push
and
insb
dec
mov
fsub
int3
jns
push
js
insb
in
fimuls
movsb
insb
ret
cld
lods
adc
adc
loop
in
mov
mov
sar
insb
sahf
mov
rolb
inc
mov
inc
and
pop
notb
cmp
loop
scas
xor
insw
push
sbb
enter
test
lret
cmp
pusha
daa
outsb
lahf
cltd
mov
cwtl
push
mov
out
imull
xchg
inc
clc
add
into
stos
shrb
pop
or
xlat
push
sar
sbb
cmc
xor
out
cmpsb
adc
or
popa
pop
lcall
push
cs
mov
mov
lea
lods
mov
sub
jno
dec
adc
enter
xlat
ss
cmpsb
mov
mov
jmp
jp
inc
pop
dec
jmp
xchg
dec
outsl
stos
inc
in
test
sbb
rorl
mov
push
mov
or
mov
in
inc
adc
pop
popl
cmp
aaa
xor
test
inc
or
aas
rcr
test
jl
cmp
in
mov
das
mov
xchg
test
lock
out
icebp
fcoms
cltd
or
ret
xchg
jle
mov
pop
xchg
xchg
inc
mov
push
lcall
pop
add
jb
enter
mov
jg
mov
popf
dec
bound
loope
cld
and
sbb
add
xor
adc
sahf
xor
icebp
lods
jo
insb
cmp
in
dec
mov
push
jle
push
popf
fisttps
sbb
out
dec
xor
ja
test
into
shr
pop
mov
shll
xor
pop
mov
and
push
xor
push
jmp
cmp
push
xor
ljmp
ljmp
pop
fnstenv
loopne
int
ss
and
xor
das
popa
sbb
ja
mov
lock
shll
ds
or
cs
xor
add
stos
loope
jle
jp
mov
adc
ret
sub
and
xor
sub
das
mov
addr16
sbb
scas
jae
hlt
ret
jbe
jo
jb
add
leave
or
inc
sub
pop
mov
xchg
mov
mov
addl
imulb
shll
fadds
lahf
lret
add
ss
jge
daa
xor
add
cmp
and
or
das
adc
jecxz
cmp
test
mov
addr16
mov
ret
pop
aaa
in
and
adc
rol
pop
lret
mov
call
leave
jno
inc
in
xchg
cmp
dec
jb
push
loope
inc
push
addr16
fbstp
lcall
notb
sbb
inc
sub
shll
pop
jne
clc
ds
test
sarb
int
es
imul
adc
shll
loope
xorl
stc
ror
push
add
or
lds
fmull
loopne
mov
sub
rclb
jae
dec
lret
cs
sbb
mov
repnz
ffreep
lods
ja
push
out
daa
sbb
iret
lea
xor
jns
popf
sahf
pop
cmpsl
imul
loopne
mov
ja
xchg
cmc
pop
or
lods
xor
push
cmpsl
movsb
xchg
mov
stos
pop
das
sub
inc
mov
fsts
mov
mov
inc
scas
insb
mov
jo
out
rcll
out
jge
mov
incl
jne
xchg
jecxz
insb
mov
or
std
cwtl
pop
mov
push
in
movsb
into
std
cli
add
or
inc
xorb
inc
hlt
cmp
imul
jne
fstpt
dec
in
test
sbb
stos
jns
out
lret
adc
adc
hlt
xlat
movsl
mull
and
inc
call
xchg
pop
aad
aad
mov
fs
pop
mov
daa
xchg
cmpsb
daa
mov
push
xchg
sbb
mov
jo
inc
leave
mov
loope
cmp
pop
call
hlt
inc
mov
push
in
jno
inc
inc
dec
push
repz
das
icebp
mov
arpl
jae
push
inc
xchg
repz
shrb
pop
ljmp
cmp
xlat
xor
mull
xor
call
cmpb
rcll
cmp
test
adc
xlat
adc
mov
xchg
jno
andb
jmp
mov
mov
adc
cmpsl
push
sub
or
or
inc
sbb
imul
iret
clc
push
test
or
xchg
sbb
out
ja
dec
adc
add
add
mov
xchg
or
mov
dec
lret
xchg
cmp
sub
call
mov
dec
cmpsb
test
pop
dec
xchg
inc
mov
dec
jl
push
movsl
imul
mov
inc
adc
adc
cld
jo
jg
call
and
sarl
xor
adc
pusha
sbb
inc
js
aas
inc
xor
loope
imul
mov
xchg
sbb
sub
dec
jo
push
jno
sarb
rcl
add
xchg
mov
pop
mov
lock
cmp
jge
popf
pop
aam
mov
daa
repnz
pop
cld
mov
daa
int3
imul
jns
dec
add
add
mov
jb
gs
sbb
and
push
lret
pop
inc
push
gs
call
xor
leave
test
cld
aas
es
mov
fimuls
fdivp
jae
nop
fwait
outsb
push
lret
lock
ret
mov
mov
sarb
sarb
popa
hlt
jbe
mull
push
movb
push
scas
dec
data16
scas
out
loop
rcrl
aas
scas
aam
dec
sub
jecxz
out
lds
or
xor
cmpsl
sbb
adc
jb
pop
int
xchg
call
lahf
loopne
xor
fwait
cltd
add
ja
stos
roll
xchg
aad
cltd
mov
and
push
mov
into
mov
cmp
loopne
jl
dec
fs
xchg
mov
jl
call
imul
xchg
xchg
cmpsl
pop
das
pop
aaa
pcmpeqw
outsl
lahf
xor
scas
bt
dec
fisubs
push
dec
xchg
and
xlat
jmp
repnz
inc
sti
adc
push
fistpll
or
mov
push
jmp
jmp
bound
mov
icebp
jns
pop
dec
loop
mov
mov
cmp
sar
aas
leave
xlat
push
js
cld
rorl
pop
push
idivl
add
test
hlt
shll
pop
inc
and
subl
or
xchg
mov
aaa
jmp
or
push
movsl
nop
iret
xchg
sysret
cmc
and
loope
int3
pop
bound
loop
orb
andnps
mov
mov
movsb
imul
pop
adc
and
aam
sarl
cld
stos
cmpsl
sti
fdivrs
jns
push
push
lods
xlat
inc
or
xor
xor
out
add
pop
data16
ja
lret
pop
call
push
mov
sbb
adc
mov
jmp
std
aam
and
add
mov
test
xor
mov
or
mov
ret
adc
jecxz
adc
push
jmp
fbstp
inc
xlat
fiaddl
mov
les
push
cmp
icebp
test
inc
imul
sub
jae
or
push
mov
lods
xchg
shrb
repz
cmp
cs
add
loope
lods
or
inc
lcall
out
sti
push
or
mov
mov
lods
xor
roll
adc
sub
bound
loopne
xorl
loop
mov
ret
inc
xchg
cltd
lret
pusha
xor
fwait
xor
imul
push
ret
pop
mov
mov
pop
fmul
mov
xchg
lods
lds
ja
mov
push
or
gs
ret
sub
call
or
pop
sbb
mov
push
sub
xor
xchg
push
cmpsb
or
sbb
or
mov
push
xchg
dec
nop
mov
sub
push
add
jbe
dec
lret
mov
ret
stc
xchg
mov
mov
or
leave
scas
stos
cmp
mov
push
stos
sub
ret
mov
repz
adc
adc
or
iret
jb
mov
xchg
add
mov
imul
jne
adc
rcr
out
push
testb
push
xchg
imul
sub
pop
int3
int3
adc
add
int3
je
inc
mov
scas
adc
sbb
aaa
ss
cld
dec
jbe
inc
dec
je
add
pushf
sub
add
in
imul
cmpl
fmul
pop
add
jb
pop
jmp
mov
test
inc
fs
add
xchg
cli
push
add
xor
test
enter
cld
fisttpl
cmpsb
sub
xor
xor
add
adc
fst
mov
jp
sub
mov
jae
mov
xchg
xchg
mov
pop
mov
fdivs
call
pushf
orb
mov
fwait
outsb
push
add
fstpl
fs
aad
mov
xor
push
lods
xor
lcall
mov
rcr
xor
jne
pushf
test
insb
pop
sub
lret
xchg
stc
adc
ja
sti
pop
inc
aas
addl
inc
adc
jae
movsl
ljmpw
push
mov
push
sub
adc
fwait
out
add
jge
sbb
sbb
xor
das
mov
add
jno
push
int
movsl
in
inc
fdivs
ret
jnp
or
pop
or
add
cmp
dec
call
aaa
or
sbb
bound
leave
sbb
les
incl
out
add
outsb
jb
lahf
sbb
sbb
popf
pop
outsb
ljmp
ret
sbb
faddp
mov
pop
orl
shr
fcoms
mov
movsl
out
mov
add
ret
pushl
pop
pop
fiadds
push
jge
cmp
push
push
out
sub
dec
repnz
hlt
push
jge
enter
dec
shrl
dec
mov
aam
pop
mov
xchg
or
loope
mov
mov
mov
cltd
fnsave
addr16
jecxz
inc
xor
pop
dec
in
xor
pushw
icebp
mov
mov
mov
les
xchg
xchg
push
mov
or
and
adc
jne
and
ret
hlt
loope
jne
fistpll
sub
inc
int3
faddl
and
sbb
and
cmp
or
out
and
icebp
ret
lcall
ret
pop
scas
mov
xchg
dec
ret
loopne
xor
lock
cmpsl
pcmpeqd
addl
scas
call
orb
adc
loope
rcrl
hlt
notl
out
adc
aam
mov
mov
mov
insb
cmp
movsb
pop
mov
orb
xlat
cmp
cmp
jp
movsl
pop
in
outsb
in
mov
jg
mov
mov
jb
das
pop
rcrl
push
mov
stos
inc
nop
pop
mov
cmp
cli
xchg
mov
stos
int
insb
inc
cmp
aad
mov
adc
sub
inc
adc
ja
jecxz
pop
fisubs
repz
fldcw
dec
jnp
mov
or
dec
adc
gs
dec
cmp
push
vcvttpd2dqy
clc
lret
xor
addr16
sub
add
in
mov
out
data16
xor
daa
fidivs
mov
xchg
pusha
inc
dec
push
dec
insl
leave
popa
or
add
ficompl
xchg
insb
sar
adc
rcr
popa
enter
add
loope
push
sti
push
xor
fisubrl
push
lea
loopne
addl
cmp
lahf
mov
jns
mov
jnp
out
jmp
fsubr
adc
mov
or
enter
das
addb
mov
test
std
xor
lock
mov
cmp
cli
out
jg
addr16
and
and
jno
int3
and
js
enter
cli
cmp
jmp
xlat
push
aaa
aaa
cmpsl
pop
fcomip
into
icebp
sbb
aaa
mov
and
pop
popf
jb
std
mov
pop
test
dec
jl
data16
subb
fisubl
dec
shlb
mov
sub
sub
mov
sub
pop
incl
inc
adc
cmp
sarl
lret
mov
popa
jo
data16
imul
push
adc
repnz
mov
pop
in
aaa
lods
add
int3
jbe
sub
inc
xchg
sbb
xor
outsl
enter
push
bound
jbe
adc
adc
fsubrl
xchg
jae
sbb
mov
push
jne
jmp
out
imul
mov
int
cmp
sahf
adc
test
fcmovb
lret
mov
jl
sbb
cmovbe
jb
adc
ret
shll
jecxz
adc
push
xor
xor
inc
adc
arpl
xchg
loop
shlb
mov
jecxz
adc
push
xor
xor
inc
adc
arpl
xchg
bound
xor
mov
jecxz
adc
push
xor
xor
inc
adc
addr16
loop
shlb
mov
and
bound
inc
fistl
bound
sbb
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
cwtl
push
int3
ds
sub
popf
fmuls
ficomps
mov
push
pushf
push
mov
mov
dec
int3
jle
outsb
ret
mov
xor
sub
jb
dec
jl
insb
push
cmp
dec
ds
dec
test
outsb
ficomps
pop
lret
pop
fimuls
mov
or
outsl
int
out
inc
leave
push
rcrl
xor
push
xchg
movsl
repz
test
inc
push
subl
ror
push
pop
leave
dec
inc
addb
adc
jecxz
lock
ret
push
jl
dec
into
adc
hlt
fs
in
pop
or
pushf
xor
and
sub
fildll
out
stos
push
pushf
sub
enter
cmp
popa
outsb
cltd
add
pop
ret
push
sub
push
andl
dec
mov
inc
rcll
out
outsb
int
cmp
xchg
fsubl
pop
add
out
loope
arpl
jae
leave
sarl
lds
fimull
pop
dec
ljmp
cmp
push
lods
ds
fmull
jle
outsb
jle
sbb
movsb
mov
pusha
into
mov
jnp
insl
jecxz
shrb
cmp
mov
out
pop
jmp
int
jmp
pop
sbb
add
pop
iret
outsl
sarb
add
fucomip
jge
jns
outsb
scas
sbb
adc
pop
jns
push
insb
js
dec
rcrb
dec
int3
jle
outsb
in
sahf
sbb
or
cmp
sub
pop
into
dec
jl
insb
push
pushf
push
mov
mov
dec
int3
jle
outsb
in
sahf
sbb
or
cmp
sub
pop
into
dec
jl
insb
push
pushf
outsl
fisubl
mov
rcrb
mov
sti
pop
pushf
fnstenv
xchg
jle
pop
jae
pop
mov
sbb
jne
add
pusha
pop
xor
jnp
and
and
movsl
inc
add
popa
sub
cld
add
iret
testb
das
xchg
sti
mov
jbe
xchg
mov
lds
sbb
lds
push
cltd
dec
push
repz
aas
je
out
dec
and
popf
dec
or
sbb
movsb
xchg
fadds
mov
shrb
xlat
pop
lcall
pop
jnp
int3
dec
test
aad
mov
mov
xchg
popf
ret
adc
add
mov
test
xor
sbb
or
cmp
cmp
sub
cmp
icebp
mov
xchg
sub
popf
push
push
lds
cmpsl
test
sbb
mov
ljmp
incl
imul
fcos
dec
jecxz
movsb
jg
and
xchg
mov
xchg
add
jmp
or
xor
and
movsl
dec
xlat
out
idivl
imul
sbb
punpckldq
sub
cld
add
push
cmpsl
xchg
imul
pop
mov
fisubrs
fs
out
lahf
popl
mov
lods
sbb
aad
mov
das
les
cmp
es
aam
lret
mov
inc
push
loopne
in
aas
js
fidivs
lock
cld
cmpsb
add
adc
inc
push
mov
hlt
lods
jp
inc
idivl
dec
push
lcall
scas
mov
cmp
jb
mov
mov
and
out
jmp
xor
pushf
test
add
outsl
icebp
movsb
in
push
mov
sbb
or
add
mov
andb
test
jge
add
mov
mov
inc
test
mov
inc
dec
aam
adcl
mov
sbb
ret
sbbl
clc
push
xchg
add
mov
mov
ret
lods
popa
jmp
in
arpl
cmp
test
inc
pop
mov
sti
jge
cmp
inc
mov
mov
inc
call
push
loop
mov
mov
cmp
jecxz
add
jno
pop
fsts
push
scas
push
shlb
inc
inc
xchg
jo
sbb
lods
xor
push
jo
movsl
rcll
std
jmp
shr
mov
aad
mov
pop
jmp
or
movsl
jmp
xchg
adc
inc
pop
mov
mov
dec
jl
out
push
mov
sbb
lods
dec
jmp
xchg
aas
cmpb
scas
outsb
adc
dec
mov
insb
jge
enter
fdivs
adc
sub
sbb
movsl
or
xchg
and
sub
aam
dec
xor
xor
flds
or
out
cli
lds
sbb
test
mov
jbe
fnstenv
jmp
test
or
sarl
nop
inc
inc
test
dec
orb
mov
or
mov
fnstsw
repz
or
call
or
dec
test
mov
mov
movsl
mov
out
cmp
les
cs
cwtl
push
test
repnz
push
bound
dec
aam
clc
xchg
dec
mov
scas
outsb
jne
mov
frstor
inc
stos
sbb
sti
jmp
pop
adc
nop
inc
pop
aam
inc
movsb
pop
mov
lret
and
aaa
fisubrl
in
fldenv
es
xlat
cwtl
lcall
call
stc
shrl
pop
cmp
push
repz
icebp
adc
negl
jbe
mov
stos
mov
sahf
push
dec
xorl
cmp
in
sbb
dec
loop
and
push
int3
jg
xchg
mov
sbb
jge
sbb
rorl
gs
pop
lods
lods
xchg
les
mov
gs
xchg
sub
cld
dec
lds
inc
mov
or
jnp
add
adc
pusha
fists
inc
jo
pop
jle
mov
dec
mov
das
lods
pushl
fdivrl
adc
xchg
add
xor
sub
jns
mov
xor
add
sub
push
leave
jp
popf
and
cmp
ret
fildl
leave
jns
je
xor
dec
inc
pop
inc
lods
sbb
dec
inc
nop
mov
subb
lods
repnz
mov
imull
arpl
addb
jmp
push
ret
or
idivb
add
stos
inc
jle
cli
cmc
and
pushf
bound
imul
jbe
arpl
int
inc
imul
aas
sbb
mov
mov
int3
test
leave
jp
arpl
outsb
push
sbb
cmp
loopne
jno
jb
pop
mov
mov
popf
sub
jmp
in
clc
out
out
cmp
ja
mov
test
fcoml
jbe
in
sub
xchg
sarb
push
shl
jge
int3
mov
and
push
int
scas
mov
and
push
inc
in
xchg
inc
test
pop
pusha
ja
stos
std
lods
mov
fmuls
xor
cmp
sbb
je
iret
inc
adc
inc
movl
sbbb
inc
sbb
outsl
pop
movsl
aaa
test
add
pop
int3
inc
dec
hlt
repnz
fs
mov
or
xor
sub
fadds
adc
mov
jne
dec
sub
push
movb
cwtl
test
loope
stos
dec
rolb
jnp
cmp
and
jb
mov
sub
orl
cli
jno
adc
imul
sbb
xchg
call
mov
push
lret
mov
lods
xlat
enter
cmpsl
mov
and
and
in
in
shlb
mov
scas
test
dec
cli
jno
xor
fcmovne
pop
add
out
shlb
hlt
jb
nop
mov
testb
lea
or
out
mov
pop
mov
pop
test
push
es
fsubrl
imul
bound
out
pop
mov
ss
jl
mov
pop
ljmp
daa
out
in
sub
push
rcr
lahf
notl
out
into
icebp
xchg
ret
mov
es
sbb
add
mov
out
sub
xor
enter
lds
mov
cmpsb
outsl
cmp
mov
inc
pushf
ljmp
int3
loope
popf
mov
add
inc
inc
jp
pop
xchg
clc
pushf
daa
add
test
jo
mov
insl
movsb
ror
xor
lods
inc
in
nop
xchg
mov
sub
call
cmp
mov
lods
pop
inc
mov
adc
mov
mov
adc
into
jp
dec
mov
push
in
xchg
out
pop
sarl
iret
arpl
adc
jmp
jb
js
int
loope
out
pop
add
stc
jg
lahf
and
adc
xor
fsub
pop
aas
jbe
faddl
ficoml
in
or
pop
inc
jecxz
jo
loopne
mov
cwtl
push
jmp
cs
jno
sbb
xor
rcrb
movsl
lods
push
rcrb
adc
int3
fisttpl
xor
test
mov
dec
std
jb
pushf
sbb
mov
xor
cmp
cld
loopne
lds
mov
cmp
push
pop
cltd
jl
sbb
fdivl
shlb
dec
ret
gs
jg
popa
pushf
aam
cmpsl
dec
mov
mov
sub
mov
ss
fiaddl
dec
orl
or
xor
mov
int
or
xchg
add
cmp
popf
mov
mov
dec
lods
dec
or
jmp
lods
or
adc
xchg
imul
sbb
xchg
in
sub
lea
das
xor
pop
and
and
daa
loopne
testb
ret
sbb
dec
enter
add
in
rolb
inc
int3
andb
rcrl
sbbb
shlb
sbb
cmpl
insl
repz
rcll
pop
mov
xchg
out
push
arpl
cmc
std
fists
data16
add
ss
orb
xor
popa
addr16
scas
cs
lock
sti
pop
fidivrs
js
cs
mov
sbb
jle
mov
repz
shrb
lea
iret
jno
jecxz
stos
mov
and
andl
fstpl
push
scas
sbb
mov
dec
outsb
fmuls
test
jo
repnz
inc
mov
stos
pop
std
das
mov
imul
pop
test
jae
ja
add
jp
movsl
xor
xor
ror
xor
mov
mov
mull
and
cli
movsl
inc
cmp
lock
out
mov
sub
adc
into
jg
sbb
leave
mov
rorb
call
and
dec
push
mov
push
int3
aad
sbb
das
std
mov
adc
rol
sbb
inc
jae
jp
lret
std
scas
sahf
rol
movsl
aaa
push
in
or
jae
pop
inc
mov
cmpsl
lahf
test
in
and
push
mov
in
int
add
cmp
dec
pushw
js
sbb
mov
push
inc
jbe
add
push
popf
fisubs
push
inc
repz
ljmp
jnp
test
mov
sub
push
mov
mov
nop
int3
jp
pop
xor
and
jae
test
cmpsb
adc
push
jo
fistps
mov
fsubr
jle
add
add
fstpl
push
aad
dec
jle
in
pop
inc
dec
out
push
movsl
shll
ja
fisttpl
repnz
ds
mov
pop
in
insb
inc
pop
mov
xchg
sti
sub
jnp
es
add
mov
mov
mov
cmp
shll
popf
jmp
int3
cmp
adc
into
mov
sub
inc
stos
mov
pop
inc
lea
sub
in
sbb
cli
and
jmp
push
push
dec
cmp
push
add
neg
mov
jl
inc
add
in
cmp
mov
cmpl
cld
enter
loopne
jnp
inc
ret
and
cmp
enter
arpl
andl
cmpl
imul
es
out
fwait
cs
jg
xor
dec
in
add
rol
fidivs
push
out
fiadds
imul
mov
outsl
cs
sbb
inc
and
adc
jns
insb
dec
cwtl
pop
and
dec
insl
es
hlt
shlb
push
mov
mov
pushl
bound
pop
jae
xchg
sbb
pop
add
ret
dec
sahf
subb
inc
sahf
jg
or
stos
jae
xchg
add
movsb
outsb
clc
pop
sub
adc
mov
js
mov
mov
and
cwtl
xor
loope
pop
xchg
in
cmp
addr16
mov
xchg
addr16
test
cmp
addr16
xlat
mov
ljmp
fisttps
xor
lahf
pop
lahf
push
lock
xchg
push
es
xor
pop
loopne
fiadds
lret
loop
add
in
jb
and
sbb
vmovdqa
into
sub
sub
mov
fcmovnbe
addr16
jmp
cmc
inc
cmp
lcall
push
jbe
xlat
fmuls
test
sub
sub
push
push
test
out
jg
int
sarl
sbb
sahf
dec
inc
lds
xchg
dec
pop
fisubrl
adc
mov
inc
cmp
ret
jae
sub
int3
inc
sahf
pop
jns
cld
leave
pop
iret
mov
cmp
dec
pop
dec
adc
fisubl
inc
ja
or
xchg
subl
sub
adc
cmp
and
push
test
or
out
gs
mov
out
xchg
push
cmpb
scas
cmp
dec
jmp
sti
popa
int3
imul
inc
mov
test
outsl
daa
repz
sarb
mov
loopne
shll
jnp
mov
and
push
mov
sbb
adc
jno
lahf
mov
lret
jb
push
or
pop
xchg
sbb
imul
mov
es
dec
leave
cmpsb
pop
inc
dec
xor
push
fs
or
xor
or
aam
push
repz
push
aaa
sub
fisubrs
dec
ljmp
dec
mov
xor
ficomps
es
add
mov
pop
outsb
stc
push
cmpb
lock
cltd
arpl
mov
aam
cmp
inc
jb
push
mov
push
jno
loopne
repnz
inc
std
mov
mov
addr16
icebp
sbb
aas
ss
popl
xchg
xor
push
fisttps
mov
dec
sbb
inc
add
in
cmpsl
fcom
mov
mov
sub
xchg
pop
loop
lahf
xchg
jb
xor
lds
lds
dec
insb
mov
data16
lcall
xchg
pop
jmp
leave
loope
xchg
xor
or
inc
jno
xor
inc
bound
daa
push
push
push
fidivrl
xchg
repnz
movsb
int3
adc
and
sbb
pop
ficoms
cmc
nop
gs
shrl
add
andl
ja
dec
push
insb
lock
dec
or
adc
dec
or
mov
fbld
fs
bound
hlt
push
ljmp
outsb
xor
jbe
iret
mov
pop
mov
hlt
push
adc
insl
inc
push
mov
neg
fnsave
sbb
mov
mov
jb
imull
lret
lods
out
outsl
jp
mov
imul
je
cltd
xor
inc
jecxz
iret
adc
mov
cmp
push
pop
add
in
push
cld
add
test
dec
enter
pop
stc
rorl
and
push
ret
dec
mov
ret
mov
add
mov
lds
jg
rcl
fcom
jne
xchg
sarb
jl
adc
jg
mov
sbb
es
aas
scas
mov
lds
dec
sub
lret
cmp
adc
adc
mov
dec
push
nop
adc
pusha
out
sbb
add
cmp
fidivrs
sahf
cmp
add
aas
push
jno
in
aaa
jnp
mov
xchg
outsb
lods
aas
add
jnp
jle
test
ja
jb
popa
shrl
ljmp
sub
out
repz
cwtl
jle
outsl
jmp
ss
xchg
lcall
push
mov
sub
push
jnp
push
repz
mov
idiv
mov
xchg
mov
popf
loope
inc
in
movsl
sub
loope
add
movsb
add
cld
test
and
sub
andl
cltd
ret
sbb
stc
test
cltd
xor
mov
sub
add
pop
cmp
aas
mov
mov
push
sub
pusha
cmp
mov
or
mov
adcl
mov
sub
stos
in
fs
mov
int
add
outsb
sub
adc
sarb
cmpsl
mov
push
xchg
negl
mov
xor
outsb
push
adc
sbb
sbb
add
and
and
pop
rolb
mov
out
rcll
cmp
fstpl
hlt
sub
stc
sub
push
negb
sbbb
sub
xchg
mov
and
xor
push
scas
lret
xchg
cs
inc
sbb
inc
dec
repnz
sbb
mov
and
dec
inc
xor
dec
fldl
in
inc
lret
push
xlat
and
push
pop
xchg
in
cwtl
pop
xchg
push
gs
movsb
xor
test
add
add
inc
in
out
push
pop
js
mov
jle
and
push
out
adc
hlt
mov
dec
lock
sbb
repnz
and
fmull
rorl
inc
push
mov
sbb
hlt
adc
aaa
xor
stos
pop
push
rep
out
mov
popf
xchg
out
scas
mov
loop
mov
lds
add
xchg
inc
sub
rorb
push
lods
jns
mov
addb
repnz
or
fbld
sbb
ficompl
mov
gs
dec
and
jl
or
mov
loop
test
loope
data16
inc
insl
fistl
fucomip
rol
stc
xor
adc
push
inc
addr16
ljmp
es
fisubrl
mov
iret
xor
hlt
adc
mov
mov
insl
rcl
sbb
fstps
dec
daa
into
cmp
sahf
mov
cmp
test
jg
mov
push
shl
fs
add
adc
xchg
pop
xchg
or
stos
je
add
pop
pop
or
nop
mov
es
add
lea
push
ds
xor
and
pusha
es
xchg
xor
cmpsb
push
mov
pop
add
andl
xlat
sub
mov
adc
mov
pop
ror
xchg
sbb
pop
cmp
mov
orb
mov
movsb
inc
scas
sub
je
stos
or
ss
xlat
push
jp
addl
mov
ret
inc
add
lahf
imul
adc
shll
faddl
ret
sub
jge
out
xchg
or
lds
lret
fdivr
add
rol
mov
mov
push
fstps
sub
in
mov
mov
jae
lods
test
pop
jmp
fbstp
out
icebp
mov
out
aaa
ss
xchg
jmp
aaa
pushf
rol
dec
cmp
or
sbb
add
dec
scas
sub
xchg
jb
jo
out
adc
sahf
imulb
pop
data16
jp
ret
mov
inc
and
daa
mov
hlt
hlt
test
mov
ja
sub
lock
push
sbb
pop
test
loop
dec
jmp
cltd
mov
lahf
mov
aam
fdivrl
mov
xchg
enter
ret
pop
gs
ss
out
cmpsb
push
or
mov
jmp
iret
xor
cmpsb
cltd
cli
inc
adc
add
mov
js
adc
imul
mov
rcl
push
rclb
push
jns
mov
lcall
inc
jp
and
lock
out
add
push
mov
pop
mov
fucom
fnsave
sahf
and
mov
sarb
dec
roll
xor
aam
ss
jmp
push
sbb
inc
movsl
xlat
movsl
xor
add
xor
inc
xchg
test
imul
inc
repz
sbb
clc
jle
in
adc
arpl
jne
das
dec
stc
xor
fimuls
stos
imul
movsb
push
sbb
fsub
dec
or
aaa
dec
mov
orl
movsl
and
bound
lahf
decb
nop
jp
and
push
dec
jno
xor
xor
sar
out
movsl
fnstsw
ja
cmp
popa
sbb
subps
cmc
jns
xchg
or
jl
cli
mov
inc
inc
repz
xchg
dec
cmc
xor
jl
fucomip
out
jmp
xchg
adc
fildl
test
pop
jmp
lock
outsb
inc
mov
xor
sub
and
mov
lcall
add
pop
mov
add
es
stc
push
and
mov
and
mov
mov
or
mov
test
push
imul
test
push
shrb
xchg
push
inc
movsl
popf
sbb
into
dec
in
mov
dec
or
jno
sbb
fistpl
adc
sub
xor
out
add
jmp
inc
jmp
loop
cmpl
jo
sti
xor
and
dec
sub
or
add
lea
stos
movsb
pusha
jp
mov
cmp
add
adc
in
mov
jp
push
inc
dec
add
scas
cltd
jl
mov
sub
mov
mov
adc
fildl
xchg
popf
cmpsb
xor
jae
pop
cmpsl
fsqrt
mov
ljmp
int
arpl
push
jl
in
xor
fsts
inc
xchg
enter
xchg
aaa
ljmp
and
adc
mov
xchg
lods
push
lret
scas
cli
bound
lock
push
add
lock
sar
icebp
ret
push
jge
lock
and
jmp
mov
orb
cmpsb
aas
iret
adc
fisttps
mov
pop
fwait
mov
and
mulb
sbb
and
push
cmc
pop
movsb
outsb
pop
xlat
lahf
aam
pusha
xchg
jb
rorl
mul
pop
pop
in
hlt
xchg
sahf
jbe
mov
jnp
xchg
and
pop
push
int3
inc
daa
mov
lock
dec
sarb
sub
idivl
lret
push
ret
mov
pop
fbld
outsl
testb
xchg
xchg
mov
sub
push
inc
mov
or
shll
mov
aad
pop
pop
repnz
pop
push
fcmove
sub
mov
scas
mov
adc
pop
jl
leave
mov
push
add
hlt
scas
stos
repnz
mov
mov
dec
int3
jle
outsb
in
sahf
sbb
or
cmp
sub
pop
into
dec
jl
insb
push
pushf
push
mov
mov
dec
int3
jle
outsb
in
sahf
sbb
or
cmp
sub
pop
into
dec
jl
insb
push
cwtl
push
cmpb
cs
fmull
jle
outsb
in
lahf
sbb
scas
and
pushl
mov
js
push
pop
fmull
jl
sub
jecxz
cmpsb
adc
scas
pop
test
add
adc
lahf
inc
ja
scas
lods
mov
mov
xlat
pop
psadbw
out
xchg
pop
xchg
cmpsl
jg
outsl
push
lahf
inc
jbe
scas
pop
filds
iret
aaa
jmp
out
xlat
pop
outsl
xchg
aas
out
xchg
pop
xchg
cmp
inc
ja
scas
pop
filds
iret
aaa
jmp
out
xlat
mov
setbe
das
hlt
sbb
and
lahf
inc
sarb
shlb
pushf
sbb
sub
and
les
clc
push
stos
fwait
cwtl
adc
loopne
sub
add
lret
fldenv
push
push
pop
or
mov
idivl
lock
ds
push
js
mov
movl
adc
push
mov
loop
lock
pop
inc
xor
loop
nop
mov
push
jae
scas
pop
fisubrs
iret
xlat
jo
adc
les
arpl
rorb
ja
aam
cmpsl
subb
and
jb
fimuls
fidivl
ljmp
cmpsl
shl
les
mov
sbbb
or
std
push
imull
loope
sub
jb
dec
xchg
or
scas
pop
filds
iret
aaa
jmp
out
xlat
pop
maskmovq
idivl
out
xchg
pop
xchg
jg
push
and
add
push
mov
iret
jo
inc
mov
cwtl
push
subl
lret
cmp
jge
or
das
fnsave
arpl
test
jp
pop
addb
hlt
and
sbb
fcoml
inc
lret
pop
iret
aaa
jmp
out
xlat
pop
maskmovq
idivl
out
xchg
pop
xchg
jg
outsl
push
lahf
inc
ja
scas
pop
filds
iret
aaa
jmp
out
xlat
pop
maskmovq
idivl
out
xchg
pop
xchg
jg
outsl
push
lahf
inc
cli
or
jae
mov
lock
les
sti
stos
dec
mov
jne
stos
and
push
mov
lret
std
jecxz
mov
rcrl
jp
arpl
fcomps
and
push
jns
pop
xor
cmp
cltd
push
xchg
lcall
cmpsb
test
js
decb
xchg
jp
xchg
xchg
popf
or
fsubrl
movsb
mov
fisttpll
inc
add
or
and
dec
call
add
or
in
and
hlt
loope
pop
fs
mov
cli
roll
mov
or
jge
nop
ret
mov
loopne
shl
popf
and
xor
push
xchg
or
xchg
xor
pop
push
or
std
cmp
insl
lret
je
cmpsl
in
xchg
test
and
jbe
cld
and
mov
fcomps
push
aaa
jmp
add
mov
andb
test
mov
xchg
dec
stos
fldenv
mov
loopne
and
mov
pop
movsb
ret
imul
int
mov
push
mov
iret
inc
sub
jmp
push
pop
fdivp
sahf
fnstsw
push
mov
test
nop
adc
bound
pop
jns
mov
outsl
aam
fwait
or
mov
fdivl
repz
mov
push
dec
stc
jecxz
mov
fmulp
lds
ret
fbstp
bsr
push
mov
or
sbb
out
jecxz,pn
and
xchg
dec
ss
aam
mov
clc
sbb
pop
mov
hlt
lcall
lock
jg
push
pop
aas
mov
insb
mov
shlb
hlt
jb
jns
rcll
std
pop
mov
lods
mov
repz
int3
movsl
mov
mov
add
pop
mov
lods
sbb
daa
bound
xchg
dec
scas
push
or
flds
jle
in
ljmp
cmpsb
pop
into
sahf
mov
push
push
mov
addr16
xchg
repz
sbb
xor
dec
mov
leavew
adc
push
sti
jge
cltd
push
bound
jg
stos
pop
test
xor
cmpsb
enter
sbb
inc
or
xchg
pushf
xor
sbb
mov
sahf
or
int
mov
adc
xor
ret
stos
dec
dec
adc
pop
mov
aam
or
loope
ljmp
scas
and
or
test
push
mov
mov
pop
xchg
scas
aad
icebp
int3
fld
xchg
cmp
dec
push
xchg
pusha
mov
adcb
adc
cmpsl
xor
dec
idivb
iret
pushf
dec
cs
data16
adc
into
repz
and
xor
call
aam
or
leave
out
sbb
mov
cmp
or
inc
mov
sub
daa
or
adcb
jo
push
xor
mov
sbb
add
mov
adc
cmpsb
sub
shlb
test
or
pusha
or
add
pop
dec
push
jp
dec
icebp
mov
xchg
cmp
mov
aad
icebp
jne
lods
cmpsb
scas
and
adc
faddl
lods
test
xchg
test
pop
cmp
sub
js
addr16
add
shll
dec
cmp
cmp
es
lods
mov
sbb
xchg
cmp
add
lret
lock
cmpsl
into
pop
jp
jno
add
repnz
adc
jg
pop
mov
bound
insb
add
xchg
xor
add
mov
ds
int3
and
inc
sbb
push
xchg
jle
pop
mov
mov
jnp
aam
popa
jle
mov
push
je
add
mov
adc
addl
dec
shlb
aaa
inc
mov
shll
jo
add
ret
dec
es
ds
ret
mov
xchg
fsubp
dec
shl
xchg
fldenv
push
lods
lods
inc
dec
add
adcl
aad
or
fbstp
sub
cmpsl
lods
or
jno
sub
inc
xchg
pinsrw
mov
je
dec
sub
int3
leave
lahf
repz
push
inc
bound
adc
fistpl
pusha
mov
jo
fldenv
clc
stos
in
popa
subb
icebp
add
sbb
sbb
test
push
sub
add
pushf
rol
dec
pop
pop
call
sbb
andl
aas
fwait
sbb
cmc
dec
dec
mov
insb
mov
mov
sub
mov
pop
pop
test
test
stos
test
sbb
xchg
dec
push
cmp
test
pop
ds
dec
cmp
mov
mov
sti
int
sub
stc
xchg
push
or
dec
outsl
cmp
or
add
test
push
ljmp
adc
push
sbb
stc
leave
jle
mov
cli
testl
fwait
or
mov
daa
shrl
movnti
inc
sub
lret
out
cli
dec
lret
pop
inc
enter
jns
clc
fs
jmp
sub
repz
inc
insl
out
jp
fistps
jne
cmp
fisubl
sub
nop
pusha
mov
rcll
std
rorb
sub
xchg
insl
cmp
jns
adc
dec
jp
divl
adc
jnp
and
fildl
outsb
mov
fdivrs
xchg
fs
aad
getsec
nop
aas
adc
cltd
cwtl
add
rep
lret
movsl
pop
sbb
cmp
mov
lret
lcall
shlb
lahf
mov
mov
lea
cmpsl
loopne
cld
ds
mov
test
nop
mov
popa
cmpsl
dec
mov
adc
loope
xor
cs
loop
in
loop
cld
pop
lcall
ficomps
push
or
jl
loop
inc
dec
jno
add
sar
push
lret
xchg
cmp
adc
int
sbb
js
ss
test
das
pop
push
mov
fistl
cwtl
negb
outsl
repnz
out
push
mov
mov
add
sbb
outsl
lods
xlat
inc
aaa
mov
sbb
fimull
sbb
out
jecxz
pusha
inc
je
bnd
adc
xor
cltd
xlat
sub
lods
adc
push
add
ret
mov
xchg
mov
movb
movsl
cli
insl
mov
jb
pop
jp
cld
mov
push
jmp
sbb
int3
ret
lock
pop
xchg
jl
push
cmp
stc
mov
push
mov
push
mov
inc
dec
inc
pop
dec
ds
sbb
cli
sub
nop
jge
pop
sti
fsubrp
shll
stos
fists
xchg
dec
jp
jge
popa
stc
sub
sahf
daa
sub
xchg
and
arpl
cmpsb
in
mulb
sbb
in
pusha
mov
decl
cli
push
jns
mov
call
cmp
stc
and
lods
dec
and
pxor
arpl
repnz
hlt
shlb
jno
cmpsl
shll
and
mov
aam
popf
pop
stos
xchg
or
mov
cmpsl
ss
and
jbe
jns
pop
imul
pop
js
inc
jp
lret
jle
cs
mov
mov
mov
lret
pop
addr16
mov
arpl
ds
cmp
test
in
inc
dec
sbbl
or
call
popf
in
adc
xor
fwait
fwait
jl
stc
xchg
js
inc
xor
std
adc
repnz
fwait
push
cmp
sbb
out
cli
roll
lret
mov
and
xor
cmc
mov
clc
out
in
out
je
pop
pushf
sbb
pop
negb
and
scas
inc
lods
cmp
mov
sbb
das
xchg
cmpsb
xchg
push
in
outsl
push
jl
test
mov
jmp
push
fidivs
sbb
jo
mov
pop
cmp
or
fld
out
adc
cltd
fcos
mov
dec
shll
lock
inc
loope
push
pop
icebp
out
jo
or
push
loop
jl
mov
dec
jmp
jle
mov
mov
loope
jb
ret
movsb
mov
daa
jg
enter
aad
imul
add
dec
in
cmpsl
jno
mov
xor
iret
jmp
cmp
inc
dec
add
xchg
cmc
outsl
cmp
sub
xor
push
aam
jbe
clc
lcall
and
dec
adc
or
aam
roll
xor
test
mov
insl
cwtl
pop
mov
outsb
inc
xchg
shll
jle
orb
mov
decl
lods
aas
sahf
add
scas
popf
cli
addr16
sti
mov
aad
mov
xchg
jnp
cli
cmpsl
insb
fistl
gs
or
movsl
xor
cld
inc
xor
ret
add
sub
jae
jb
xor
dec
lahf
ficomps
out
jne
sahf
in
xchg
outsb
js
sub
popa
aaa
shr
lods
push
sbb
or
jl
mov
xorb
fs
push
cmp
ds
movsb
aas
idivb
pop
lock
mov
dec
std
cmp
mov
js
aam
push
lods
add
push
nop
adc
jge
iret
jg
jne
xchg
cmpsb
stos
sub
adc
enter
into
lods
icebp
dec
je
js
lock
jbe
dec
ret
jl
push
mov
lods
jmp
in
lds
or
test
pop
fsubl
cs
ror
arpl
pop
mov
leave
popf
sub
loope
mov
mov
fadd
dec
or
sbb
sti
sahf
dec
mov
push
js
xchg
jns
in
mov
push
add
push
std
jg
jo
loope
sbb
or
sti
gs
pop
adc
sbb
enter
imul
mov
das
mov
imul
cmpl
and
test
adc
cmove
sub
insb
ret
bnd
cmp
ljmp
insl
cltd
fmul
add
ds
enter
sbb
mov
xor
shlb
iret
and
movsl
lcall
test
nop
cli
test
pop
ja
push
or
int3
jae
mov
in
xorl
movsb
push
loope
jnp
sbb
js
push
pop
test
adc
pop
fmul
test
xchg
popa
pop
repz
sbb
gs
or
sbb
xchg
cmp
lret
dec
pop
shll
jb
and
adc
sub
mov
xchg
xchg
add
int3
les
repz
lret
arpl
jecxz
sub
aaa
add
das
stc
xor
mov
push
in
dec
push
mov
mov
rolb
push
loopne
bsf
dec
xor
sarb
inc
fisttpll
aam
mov
scas
mov
cli
push
aad
ja
sbb
ds
sbb
in
sarl
inc
sbb
sub
cltd
xlat
mov
adc
mov
jge
in
repnz
xor
movsl
xchg
inc
push
inc
and
jae
sbb
add
pop
ds
sbb
dec
cli
inc
push
stos
std
jae
imul
ret
das
add
mov
test
pop
cwtl
out
dec
lahf
mov
movsl
mov
int
imul
pop
or
add
jne
and
xchg
in
mov
fimuls
add
inc
out
popa
stos
mov
sub
pop
mov
ret
jns
xlat
ficompl
jae
dec
sbb
cmpsl
subb
push
sub
pop
pushf
cmp
popa
pop
xchg
jge
sbb
mov
andb
loop
insl
cmp
aad
pop
push
gs
jp
call
dec
daa
rolb
lds
and
in
or
fldenv
add
cmp
fidivrl
pop
into
mov
out
push
dec
push
jl
loopne
mov
cmc
mov
mov
jg
xchg
lods
cli
jl
jno
iret
and
andb
stc
jbe
fcoml
out
aam
cltd
jecxz
call
fcmovnbe
es
and
pop
mov
or
iret
ret
out
xor
sbb
mov
adc
push
movsb
xchg
mov
mov
pop
cmp
cmpl
mov
orl
int3
jnp
jo
push
out
cmpsb
movsl
stos
jecxz
mov
lret
pop
repz
inc
rcl
lods
sub
js
ds
jbe
fsubl
sub
add
cmp
rcll
movsl
fsubr
jo
sub
mov
in
fnstenv
data16
sub
loop
mov
shl
dec
sar
adc
iret
lret
shlb
pop
es
adc
push
scas
adc
pop
fwait
cmc
and
cwtl
and
jae
adc
mov
pop
repnz
adc
jno
add
mov
out
mov
les
push
push
hlt
adc
dec
imul
jg
jmp
cmp
push
loop
xchg
pop
jp
push
loope
pop
mov
pop
xor
jbe
test
cs
adc
add
aam
push
xchg
jge
sbbl
or
add
popf
xchg
push
repnz
imul
sub
sbb
add
pusha
call
gs
loop
rol
ret
es
or
mov
mov
or
ljmp
nop
lea
sub
shrl
jp
push
jmp
or
ret
pop
dec
stos
mov
je
aaa
cli
insb
mov
ds
rcrl
jbe
iret
popf
and
insl
out
fdivl
add
adc
pop
sarb
rcr
inc
aas
test
push
mov
add
hlt
dec
push
sbbl
push
out
inc
fnsave
adc
adcl
movb
int3
fdivl
add
scas
sub
mov
mov
add
inc
xchg
sub
xor
xlat
scas
dec
lods
adc
repz
add
jne
shll
std
cmp
mov
aad
lods
aas
mov
sub
rorb
sub
int3
adc
cmpsb
jl
lret
mov
jnp
pop
popf
aas
sub
fcmovb
iret
push
aad
jmp
xchg
or
int
fmull
lods
mov
add
repz
subl
push
cli
jo
cmp
fidivrl
icebp
lods
mov
outsb
ljmp
xchg
mov
sbb
mov
xchg
dec
xchg
dec
lahf
and
inc
aaa
dec
cld
or
mov
or
lret
and
xchg
test
pop
xchg
mov
jl
shll
jo
repnz
and
pop
mov
pop
jmp
mov
cltd
dec
mov
out
lock
call
ljmp
add
jle
repnz
mov
sub
push
push
out
mov
ja
jl
push
push
sbbb
test
dec
dec
fcomp
and
push
nop
stos
sbb
mov
xchg
push
outsl
jmp
in
cmc
arpl
pushf
stos
xor
or
add
sub
mov
mov
ret
push
movsl
sub
repnz
and
mov
repnz
sbb
xchg
cmp
ds
jge
cmpsb
adc
fiaddl
outsb
adc
aas
inc
mov
aad
mov
and
dec
mov
xor
lret
adc
pop
test
aam
pop
cli
fcomps
mov
mov
pop
sub
jmp
inc
sar
cmpsl
ret
out
pop
shll
add
sbb
les
jge
mov
mov
rclb
xor
mov
sub
sahf
jbe
repnz
iret
movsb
rorb
test
jmp
adc
jg
inc
sahf
pop
lea
repnz
test
cmp
adc
test
push
adcb
push
ljmp
adc
mov
ret
addr16
jbe
in
nop
cmpsl
stos
sub
xor
movsb
or
mov
jecxz
push
or
add
mov
mov
js
insb
loopne
test
push
test
cmp
es
xor
and
sbb
dec
jae
inc
shll
adc
pop
add
pop
out
insb
push
out
mov
pop
data16
pop
shlb
push
adc
test
add
pop
subl
jb
pop
setne
jns
adc
sarl
adc
and
cmpsb
in
push
mov
mov
pop
add
sahf
popf
imul
mov
dec
inc
lea
sub
sub
ljmp
add
out
ficomps
jbe
jg
jmp
mov
pop
xor
inc
scas
imul
mov
dec
out
mov
mov
fisttpll
lcall
sub
mov
sbb
ret
bound
icebp
nop
addr16
adcb
andb
push
dec
xchg
push
mov
sbb
xchg
push
sub
push
repz
dec
push
dec
mull
jmp
cmpsb
insb
ret
jg
sbb
fadd
or
adc
fldl
lea
push
or
cmp
sub
pop
ss
cmp
push
test
sbb
leave
cmp
push
cmp
fwait
mov
mov
cmpsl
lahf
loop
lahf
loopne
fdivl
or
jmp
fbstp
mov
mov
insb
sub
xlat
mov
inc
or
xchg
call
sub
outsl
cmp
cs
imul
inc
inc
jne
call
push
pop
dec
jns
lahf
jo
aad
clc
arpl
es
daa
cmp
fnsave
mov
sbb
push
pop
or
mov
cmp
mov
jge
push
cmpsb
nop
lret
jbe
fbld
aad
xchg
in
fcoms
arpl
sbb
inc
push
fwait
dec
addr16
push
and
mov
jg
dec
clc
and
out
pop
xor
cs
popa
jns
ja
imul
cmpsb
addr16
scas
loop
js
test
arpl
xchg
inc
add
dec
iret
jb
and
subl
stos
inc
enter
aam
sub
adc
test
fwait
sbb
jns
out
xchg
stc
mov
mov
scas
cmp
mov
call
call
imul
dec
pop
movsl
inc
sbb
roll
int3
jl
jl
mov
lock
push
mov
and
decb
and
sti
mov
repz
movsb
sub
in
cmpsl
jnp
xor
test
push
jp
rclb
adc
mov
insl
mov
sbb
xlat
or
subl
stc
sub
nop
mov
into
push
inc
and
jne
arpl
out
shrb
cwtl
jbe
lcall
movsb
pop
sub
jmp
inc
jl
cld
inc
xchg
and
in
mul
pop
jle
jbe
mov
cmp
into
inc
fs
orl
scas
mov
shrl
mov
dec
enter
pop
sbb
pop
nop
sbb
jbe
out
scas
cld
inc
ljmp
iret
movsb
push
sbb
mov
jp
mov
mov
inc
push
ds
cmp
xchg
icebp
loope
iret
xor
mov
icebp
loop
loop
inc
nop
inc
xor
insl
add
cmc
xor
mov
dec
aaa
cmp
push
mov
outsb
pop
dec
shlb
mov
icebp
mov
mov
dec
pop
mov
sbb
movsb
and
rorl
jl
in
pop
mov
jl
daa
data16
movsl
leave
or
push
nop
aaa
pop
mov
mov
inc
es
ljmp
dec
mov
xor
adc
mov
int3
xor
mov
popf
scas
mov
lret
outsb
pop
rol
add
hlt
cmpsb
mov
loopne
xor
jnp
and
in
ret
mov
into
test
xor
xchg
test
xor
arpl
push
jno
xorb
cwtl
xor
and
cmpsb
fmul
test
leave
insl
cmp
pop
out
dec
cltd
sbb
test
and
clc
jp
jl
mov
jg
pop
xchg
or
movsb
mov
jo
mov
jp
clc
mov
or
es
icebp
aaa
in
les
cmp
std
inc
cmpsb
pop
es
jp
shrl
testb
or
call
cmp
xor
mov
dec
das
add
jb
sub
pop
dec
pop
scas
filds
dec
imul
rclb
sbb
pop
test
loopne
mov
pop
mov
int
xor
xchg
insb
or
xor
enter
sbb
daa
cli
jbe
ss
std
int
sbb
sbb
mov
popa
and
aaa
imul
in
jae
iret
dec
mov
pop
iret
aaa
jmp
out
xlat
pop
maskmovq
idivl
out
xchg
pop
xchg
jg
outsl
push
lahf
inc
ja
scas
pop
filds
iret
aaa
jmp
out
xlat
pop
maskmovq
idivl
out
xchg
pop
xchg
jg
outsl
push
lahf
inc
emms
aas
scas
pop
filds
dec
aaa
jmp
out
xlat
lahf
maskmovq
idivl
out
xchg
pop
xchg
jg
outsl
push
lahf
inc
jbe
scas
pop
filds
iret
aaa
jmp
out
xlat
pop
movsl
pop
aas
out
loopne
cmpxchg
pop
nop
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
js
push
push
mov
push
push
add
icebp
fadd
enter
stos
mov
orl
push
cmp
sub
sbb
or
loope
icebp
fadd
sarl
orl
push
and
xor
add
or
loope
lret
rolb
cmc
out
out
adc
pop
cmp
ds
imul
xor
mov
lcall
nop
test
inc
or
stc
and
sub
xchg
rorl
aam
mov
mov
ja
xchg
jl
sub
push
sti
sub
scas
mov
jl
cwtl
inc
cmpl
and
push
xchg
imul
imul
jae
jmp
xor
test
adc
in
aad
test
test
clc
xor
push
cs
inc
repnz
sbbl
push
mov
and
stc
jmp
add
mov
std
mov
mov
inc
dec
push
das
and
xor
add
adc
loope
icebp
rol
shll
orl
push
dec
inc
dec
pop
push
inc
or
cwtl
test
stos
movsb
lods
movsl
mov
clc
in
pop
add
adc
and
push
push
dec
sub
push
lea
mov
xlat
in
sbb
xor
xor
movaps
sbb
or
clc
loope
icebp
fadd
enter
test
cwtl
orl
push
cmp
sub
sbb
or
clc
loope
icebp
fadd
enter
test
cwtl
orl
xchg
push
push
pop
lods
jp
xor
dec
ljmp
jp
mov
lret
orb
lea
cwtl
out
test
cmp
inc
xchg
push
mov
scas
sub
push
and
xor
cmp
mov
xlat
aaa
icebp
push
imul
pop
test
push
dec
shr
fistpl
out
sub
sahf
into
dec
mov
mov
cwtl
movsb
cmp
dec
jns
pop
es
add
mov
jo
dec
popl
or
loope
sub
lods
es
pop
mov
test
faddl
add
mov
loopne
int
mov
sbb
lret
adc
jl
out
movsb
xor
cmp
rorb
scas
push
mov
xchg
in
in
repnz
dec
add
sub
jp
add
inc
inc
lret
lods
adc
pop
push
inc
test
sub
mov
mov
dec
clc
pop
adc
sub
cmp
out
xchg
scas
stos
pop
jecxz
jb
mov
das
inc
mov
adc
jb
stc
les
mov
or
pop
mov
adc
scas
mov
push
loope
sub
cs
mov
fwait
test
xor
sbb
and
push
shl
mov
sbb
lods
jle
dec
cmp
dec
leave
nop
stos
dec
or
and
cmp
xorb
std
adc
lret
daa
push
dec
in
movsb
push
xor
inc
add
repz
or
pop
add
pop
or
gs
les
sub
jno
cmc
dec
mov
pop
ds
iret
dec
inc
subb
dec
and
push
sbb
sub
push
mov
jb
inc
mov
scas
mov
inc
mov
jae
push
push
sub
mov
rorb
lds
cmp
and
pop
enter
sti
xchg
icebp
push
jnp
cmp
sbb
mov
jnp
lret
and
inc
lds
jne
mov
push
fcomp
addr16
and
mov
jne
fnstcw
aas
push
xchg
std
cmp
mov
xchg
push
mov
jnp
gs
test
cld
stc
and
aad
dec
mov
jnp
sub
mov
mov
pop
scas
lret
call
jb
push
cltd
fucomi
test
ret
roll
fwait
adc
ljmp
popa
test
push
mov
pushf
data16
ds
int3
into
xor
mov
imul
cmp
leave
mov
xor
lea
in
or
push
or
mov
mov
push
sub
je
mov
xchg
adc
sub
add
jb
jg
xor
inc
inc
sub
fcomip
fwait
jp
inc
movsl
pop
pushf
rorb
cmpb
and
lock
popa
inc
push
mov
jns
cmp
roll
clc
lds
rolb
jns
add
sub
mov
jb
mov
fadds
sub
fs
push
or
lahf
flds
icebp
leave
jb
ds
shrl
xchg
xchg
pop
mov
clc
das
repnz
or
inc
test
jmp
jne
lret
dec
inc
lds
mov
sub
xor
mov
fdecstp
adc
push
jne
outsl
lahf
fs
pushf
or
cmp
imul
sbb
and
jle
push
xor
push
sarb
sbb
mov
adc
dec
jae
cmp
inc
xchg
outsb
mov
xchg
or
ds
jae
aaa
cld
xchg
in
pop
pusha
lcall
jno
rclb
pushl
sub
or
add
or
mov
mov
testb
mov
jae
mov
sbb
push
push
lds
add
subl
bswap
pop
push
test
cmp
test
pop
pop
xor
xchg
test
lahf
xchg
mov
mov
imul
push
addb
lea
iret
dec
pop
xchg
out
loopne
cmp
out
aas
cmp
decl
inc
pop
int
or
test
ret
leave
in
movsb
inc
dec
aas
sub
xor
fld
pop
push
xchg
jmp
xchg
ja
and
jl,pt
jo
inc
clc
push
xchg
lret
inc
les
std
cmp
mov
mov
push
ret
pusha
cmp
xor
mov
dec
sbbb
lock
push
push
int3
lods
loope
out
push
adc
push
mov
in
lods
out
fs
adc
xchg
push
pop
or
sub
jp
mov
enter
inc
jnp
jecxz
dec
ss
loop
mov
mov
and
push
out
inc
cmp
lods
out
dec
lcall
daa
mov
jns
iret
inc
test
in
jg
cmc
call
pop
pop
push
push
out
jg
int3
mov
into
add
sub
and
cmp
imul
mov
jmp
outsb
xor
lcall
test
ss
push
popa
dec
repnz
test
xchg
pop
fchs
lods
out
shrb
fucom
dec
sub
insb
cld
or
mov
lods
sarl
ret
mov
outsl
dec
lcall
aas
inc
enter
pop
call
enter
popl
xor
jp
sbbl
cltd
xchg
pop
nop
scas
pop
lret
inc
adc
cmp
mov
pop
mov
sbb
sbb
in
add
xchg
push
mov
push
loopne
es
jne
add
sub
jbe
sub
test
dec
repz
lock
insb
std
daa
aaa
inc
or
push
push
mov
mov
data16
xchg
aad
addl
mov
or
lret
loope
cmp
jne
cmp
outsl
push
jne
lcall
addr16
cmp
in
lahf
inc
xor
cmp
das
sarb
xor
rclb
sarl
mov
int
test
enter
dec
or
add
pop
inc
cmp
push
mov
scas
mov
fiaddl
jmp
dec
cmp
pop
push
mov
stos
aam
jecxz
add
mov
jb
jl
mov
cmp
xchg
inc
xchg
call
inc
sub
imul
sbbb
cmp
fs
repz
mov
js
sbb
jecxz
clc
sbb
mov
leave
mov
outsl
push
fcoms
mov
call
cmp
jno
or
dec
push
inc
or
mov
xchg
jg
leave
outsl
jbe
xchg
sar
cli
in
insl
pushf
jg
mov
adc
jecxz
add
sbb
pop
sbb
mov
adc
mov
out
xor
gs
inc
cmpsb
dec
push
pushf
scas
cmpb
push
fistl
cmp
out
xchg
jle
xchg
arpl
inc
loop
pop
dec
lcall
adcl
push
xchg
ljmp
stos
mov
pop
sbb
or
sub
cmp
dec
ds
adc
bound
std
sbb
test
sub
test
in
aaa
add
movsb
dec
out
stc
out
inc
xchg
mov
iret
pushf
insb
mov
jl
and
rol
mov
inc
mov
xchg
push
push
cmp
add
aas
mov
arpl
jg
leave
push
lcall
fldcw
mov
jmp
lods
jb
push
sub
jns
mov
mov
mov
sbb
xchg
in
imul
pop
call
out
cmpl
in
repnz
cmpsb
jns
mov
std
shrl
push
pop
popa
add
xchg
mov
nop
jne
mov
add
aad
sub
stos
xchg
mov
imul
loop
add
mov
shrb
cmp
iret
lret
mov
nop
sbb
dec
lock
cld
aam
leave
sbb
negb
inc
call
icebp
push
mov
jo
xchg
repnz
pop
jne
cmp
stc
xchg
and
outsb
ss
loope
jo
adc
lds
cmp
mov
lods
xchg
rcl
in
add
popa
ss
or
sub
mulb
daa
dec
out
push
mov
ret
sbb
xor
push
push
mov
icebp
hlt
insb
cmp
mov
sahf
dec
mov
movsl
sub
enter
fcmovnbe
outsl
mov
adc
xchg
fsubrp
jp
cmp
push
call
push
fmuls
xlat
lret
add
mov
push
jae
out
add
inc
std
pop
popf
inc
jo
out
xor
pop
loope
clc
push
popa
cld
test
cli
mov
or
xor
pop
xor
loope
add
imul
add
out
repnz
das
jg
sub
cltd
or
sub
addr16
adc
int3
inc
sbb
out
mov
pushf
addr16
or
into
xor
sbbb
ret
dec
add
sbb
sbb
jecxz
cltd
xchg
pop
and
cs
mov
jmp
or
mov
std
jge
in
and
mov
xchg
inc
or
jae
xchg
dec
mov
cli
adcl
cwtl
les
fistl
repnz
sub
fwait
sub
xchg
and
xchg
cltd
push
imul
sbb
jo
cmc
pop
adc
lret
mov
pop
cmp
mov
or
or
stos
dec
pop
outsl
xchg
cmc
pop
add
dec
rcr
xor
jecxz
popa
fildl
test
lods
clc
push
subl
xchg
lds
stos
jle
es
cmpl
insb
push
mov
and
mov
data16
outsb
cmc
mov
adc
faddl
xchg
lcall
dec
mov
out
js
loop
mov
sub
xor
jb
arpl
imul
mov
push
adc
aaa
pop
dec
repnz
out
ss
and
int
stos
int
leave
xchg
in
mov
out
mov
add
xor
xchg
iret
inc
andb
rorl
dec
pop
pop
lret
imul
lret
arpl
push
icebp
imul
mov
or
jge
mov
cmc
pop
add
mov
lock
ja
stos
cmc
mov
mov
dec
mov
std
dec
or
stos
mov
jo
ja
or
sub
mov
rolb
dec
inc
gs
stos
mov
pop
pusha
fiaddl
shlb
adc
stos
or
cmpsb
inc
fnstsw
mov
lahf
sub
adc
adc
push
pushf
xchg
add
sahf
mov
repnz
sarl
int
mov
shll
pop
test
pushf
icebp
push
or
ljmp
rcr
xchg
xor
test
jl
lods
mov
and
cmp
test
add
mov
in
mov
in
cmpsl
jne
xor
sbb
jmp
inc
adc
jno
xorl
or
sbb
and
push
cmpsb
inc
in
fwait
add
xorl
lock
lds
inc
add
and
movl
scas
fcompl
fsubrs
int
out
int
jns
pop
inc
sbb
js
mov
cmp
cli
rorb
cltd
icebp
add
xchg
mov
das
or
fcmovnu
iret
enter
jmp
mov
std
nop
pop
fcoml
add
jecxz
gs
lcall
lret
outsl
daa
xchg
or
xchg
adc
out
inc
add
push
cmp
pop
fidivrs
adc
out
lea
dec
pop
inc
and
jbe
loop
pop
push
out
xlat
mov
shrb
mov
jle
sub
add
mov
popf
addr16
fdivrp
loopne
fistpll
sbb
xor
dec
mov
scas
adc
jge
adc
pusha
xor
lock
push
xor
call
cmp
negl
sub
in
mov
rcrl
mov
gs
jae
xchg
data16
jns
cmp
mov
pop
mov
cld
sbb
in
xchg
negb
cmp
xchg
mov
add
mov
popa
fmuls
ret
xor
cmp
jns
std
adc
xor
pop
insl
cltd
adcb
push
mov
xchg
xor
rcrl
cwtl
lds
pop
sub
subl
inc
inc
sbb
sar
jno
sub
push
adc
ret
mov
xor
mov
jp
adc
dec
push
jecxz
lahf
push
jns
mov
lahf
push
cmpsb
das
inc
int3
mov
mov
xchg
push
les
ljmp
faddp
inc
cmpsl
leave
lods
dec
mov
mov
mov
test
xchg
jno
lahf
inc
push
xchg
xor
xor
pushf
adc
mov
fstps
jne
jb
sbb
and
ds
adc
pop
add
mov
mov
jle
mov
test
mov
iret
mov
int
lahf
dec
mov
or
in
iret
aad
movsl
push
jbe
ret
lock
push
cltd
adc
mov
in
pop
sbb
xchg
push
mov
sub
push
xchg
ss
mov
mov
sub
test
mov
sub
xlat
stc
into
shrb
sti
inc
mov
pop
fisttpl
pop
fs
xchg
adc
ja
or
movb
jb
pop
lods
and
mov
leave
jge
push
mov
mov
ja
pop
outsl
inc
in
push
sub
pop
cmp
aaa
push
ret
push
fwait
rcll
sbb
std
sarb
icebp
ja
cld
pop
mov
and
xchg
andb
push
je
jge
xchg
outsb
xchg
fiadds
xchg
scas
ljmp
mov
sbb
xchg
leave
xor
dec
pop
loope
ret
inc
out
in
inc
sbb
pop
push
sbb
inc
jae
out
roll
cmp
out
push
ja
push
out
nop
ds
mov
jae
or
dec
popa
int
xchg
or
repnz
and
push
sbb
mov
jo
cmp
fidivrs
dec
sub
dec
mov
or
mov
inc
or
mov
add
stos
es
sahf
ret
jnp
pop
lods
pop
mov
mov
mov
or
mov
stc
mov
mov
loope
fwait
or
frstor
mov
xchg
xchg
push
mov
cltd
mov
jbe
push
fucompp
loopne
push
shrb
cmp
test
rcrl
test
dec
repnz
pop
add
or
xor
sbb
mov
pop
sti
cmp
push
aas
loope
out
jb
pop
std
adc
stos
mov
adc
xchg
lods
fisttpll
push
rorb
daa
addb
mov
cmp
filds
and
push
cmpsl
sbb
push
cmp
dec
xchg
mov
paddw
push
cmp
fiaddl
mov
xchg
add
sahf
stos
mov
xchg
or
xor
out
push
inc
lcall
add
nop
cmp
lcallw
stos
stc
sub
inc
xor
or
jecxz
mov
fmul
sub
sub
pop
and
mov
mov
xchg
loopne
or
sbb
adc
push
cmp
dec
js
jns
and
xchg
pop
gs
fwait
rolb
xor
push
mov
push
push
jmp
call
in
dec
daa
cli
push
sbb
out
jnp
cli
mov
xchg
mov
push
push
cmpsl
in
or
popa
adc
dec
mov
xchg
pop
pop
fists
popa
push
inc
cmpsb
in
orb
das
push
mov
les
fcmovne
mov
cmc
mov
test
nop
imul
fs
repnz
pop
stos
jns
and
ret
cltd
fcmovnbe
or
pop
inc
sbb
mov
or
cmp
cmp
pop
add
ss
jno
ljmp
sbb
int
lret
scas
adc
jg
or
push
daa
mov
out
mov
mov
in
push
andl
mov
mov
sahf
inc
xchg
aas
ret
xchg
cwtl
mov
adcl
lret
scas
dec
lret
icebp
cltd
mov
cltd
cmp
movb
jae
push
mov
rolb
jecxz
bound
adc
out
add
xor
jno
gs
scas
pop
nop
loopne
enter
add
cld
xor
je
into
lcall
add
cmpsl
and
dec
push
mov
sub
int
xchg
pop
mov
fidivs
cmp
hlt
pop
and
ret
dec
faddl
xchg
ljmp
xchg
dec
cli
mov
add
fstl
out
xchg
mull
dec
and
ds
popl
mov
push
fstl
dec
mov
push
ja
mov
scas
jmp
adc
imul
xlat
aaa
fwait
xorb
int
test
fcmovu
sbb
sbb
sbb
cmp
inc
mov
lods
add
sbb
in
inc
and
movsl
adc
mov
unpcklps
test
popa
cmc
mov
mov
outsl
xchg
push
pop
xchg
adc
inc
jl
ret
insl
push
shrb
call
addl
insl
mov
rorl
pop
mov
jmp
adc
cli
rorl
icebp
adc
mov
or
stos
ljmp
int3
xor
gs
sti
jne
pop
testl
loopne
jne
lea
dec
push
or
mov
scas
push
xor
push
push
div
int
cmp
jg
mov
insl
xchg
sbbb
jmp
clc
jnp
mov
cltd
xor
xor
test
cli
lcall
cli
pop
add
jbe
int
xchg
cmp
testl
push
add
sbb
adc
mov
loopne
and
int3
std
jnp
mov
pushf
adc
or
scas
mov
mov
xor
xorb
push
xchg
ds
xorb
fst
fwait
arpl
push
fwait
test
push
jno
es
in
mov
jl
in
rolb
fldl
shl
ret
ja
inc
in
mov
out
adc
je
push
es
sub
mov
sbb
sub
add
shl
stos
outsb
xchg
xchg
cmp
fst
jno
xchg
fidivrs
ds
test
xcrypt-ctr
cmpsl
fwait
jnp
inc
not
sub
cmp
iret
mov
sti
push
lods
mov
pop
xor
inc
jecxz
jbe
dec
test
dec
and
or
aas
mov
shl
xor
push
push
mov
jnp
dec
pusha
adc
pop
dec
loope
pop
popf
and
push
call
mov
mov
pop
mul
and
inc
jns
cs
lahf
dec
dec
cmp
out
rclb
insl
test
fs
xchg
mov
and
add
scas
or
test
sahf
sbb
sti
stc
mov
sbb
pop
das
lcall
xor
test
dec
fsubrl
sbb
push
mov
stos
cmp
mov
call
roll
fsqrt
test
lret
sub
fmul
and
sbb
inc
es
mov
scas
mov
fs
ds
daa
pushf
xor
jne
push
mov
jg
repnz
push
ds
xor
push
pusha
movsl
nop
test
sbb
fcmovu
or
aam
dec
into
mov
cltd
push
cli
lock
ss
jp
pop
xchg
add
pop
rol
pop
divps
shlb
cmp
repz
sub
add
dec
pop
sub
outsl
inc
mov
jle
mov
fisubrl
inc
jnp
int3
popf
int
sub
xchg
pop
lea
mov
xor
mov
mov
dec
mov
mov
pop
cmpsl
in
sahf
inc
scas
add
pop
adc
les
ret
jg
icebp
mov
mov
jbe
xchg
enter
sub
ja
mov
cwtl
and
cli
mov
sub
pop
repz
cmc
mov
repz
xor
das
cs
xchg
movsl
fs
aad
aad
lahf
dec
xor
mov
push
popf
sub
add
pop
loopne
call
stos
add
or
or
sahf
movsb
or
movsb
push
pop
lods
mov
std
push
xchg
bound
pushf
mov
adc
scas
loop
mov
xchg
cmp
repnz
je
mov
cwtl
pop
fists
sbb
push
add
scas
mov
imul
mov
test
mov
loopne
xchg
out
inc
loope
mov
jle
xor
lods
jns
insl
push
out
pop
shrl
aas
xchg
shrb
movb
sti
xchg
and
fsubs
adc
into
pop
ficoml
xchg
prefetcht2
fwait
aas
push
pop
sbb
mov
dec
jno
and
inc
jns
lock
xchg
shlb
dec
sub
arpl
or
inc
push
lcall
add
into
or
cli
xchg
lock
pop
out
xor
jno
inc
dec
push
cmp
sub
sbb
or
clc
loope
icebp
fadd
enter
test
cwtl
orl
push
cmp
sub
sbb
or
clc
loope
icebp
fadd
enter
test
cwtl
orl
push
cmp
sub
sbb
or
clc
loope
icebp
fadd
enter
test
xchg
js
push
pop
inc
dec
push
cmp
sub
cwtl
add
pop
jb
enter
and
jle
outsb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
movsb
ja
xchg
inc
out
test
inc
stc
pop
imul
out
xlat
pop
addr16
out
xchg
inc
xchg
ja
addr16
xchg
inc
out
mull
pop
xlat
pop
daa
divl
out
xlat
pop
daa
mov
cmpsl
inc
xchg
push
xchg
ja
addr16
aaa
xchg
daa
fsts
xlat
pop
inc
leave
adc
outsl
cmpsl
jb
or
add
xchg
ja
adc
icebp
mul
sbb
jmp
mov
xlat
lcall
sbb
dec
dec
jg
daa
pop
inc
adc
dec
sbb
rorl
xchg
ja
sub
xchg
test
pop
mov
mov
mov
iret
adc
xchg
aaa
sbb
rclb
pop
ja
xor
mov
bound
push
sbb
divl
cmp
xlat
push
les
repnz
cmp
imul
cmpsl
orl
fmuls
push
pop
mov
out
sub
and
loop
xchg
pop
xlat
pop
repnz
sbb
push
and
fsub
adcb
testb
and
inc
adcb
loope
xchg
inc
add
daa
pop
jno
loope
lods
out
xlat
daa
das
mov
cmpsl
jne
push
ror
lds
pop
cltd
data16
xlat
ja
fwait
mov
jb
adc
adc
shrb
mov
or
js
pop
inc
mov
mov
subl
loop,pn
jmp
out
les
mov
mull
pop
xlat
pop
daa
divl
out
xlat
pop
addr16
cmpsl
inc
xchg
push
xchg
push
xchg
inc
out
mull
pop
xlat
pop
daa
divl
out
xlat
pop
addr16
cmpsl
inc
xchg
push
xchg
movsl
push
xchg
sub
mov
aas
jns
cmpl
iret
push
scas
xchg
test
adc
jecxz
sub
ljmp
lcall
dec
add
imul
loopne
imul
cmp
sbb
push
loope
jl
cmp
leave
mov
dec
lock
lcall
push
shl
mov
addr16
daa
jecxz
xchg
nop
push
clc
xorb
push
rcll
xchg
ss
fwait
popf
rolb
jp
out
test
push
push
or
dec
aas
sbb
xor
jle
rorb
test
bound
lods
mov
jae
movsb
jnp
out
add
fcomip
js
mov
mov
fisttpll
ret
iret
sub
mov
mov
cmp
stc
push
roll
into
or
sbbl
int
dec
or
inc
lea
imul
rorl
pop
jno
je
mov
sbb
ret
call
inc
jg
cld
pop
outsb
jns
jns
or
cwtl
push
sbb
add
cmp
push
nop
or
jne
into
mov
aaa
adc
hlt
add
xchg
loope
scas
sarl
mov
lahf
daa
stc
shll
lods
test
lret
stos
inc
adc
mov
cwtl
xor
sbbl
dec
push
je
adc
call
call
imul
lods
and
sbb
push
sbb
jae
fcmovbe
or
mov
aad
rcrl
and
leave
rcrl
sar
stos
sbb
or
fistps
and
lcall
in
popaw
cmpl
clc
sbb
dec
mov
sbb
pop
fwait
pop
adc
sbb
xchg
jbe
fstpl
mov
ljmp
or
mov
cs
xorl
sti
cli
xchg
jmp
cmp
or
lahf
xchg
jno
cld
iret
test
xor
jle
and
add
data16
in
icebp
jle
push
inc
or
and
jns
shlb
mov
fists
test
sti
dec
add
xor
xor
jnp
mov
jl
adc
addl
cmp
lock
ds
sbb
movsb
test
push
add
jle
enter
xchg
scas
mov
mov
cmc
cld
sbbb
pop
out
popa
dec
shlb
repnz
notb
push
xchg
loopne
cmp
std
lret
aam
scas
jne
add
popa
or
pop
mov
ret
push
in
xor
push
in
push
pop
loopne
mov
jbe
ret
cld
mov
push
mov
std
cmp
pop
rcll
das
pop
pop
sbb
notl
outsl
int3
lcall
or
push
fnstcw
popa
add
xchg
lret
daa
xor
jno
popf
cmc
mov
dec
cld
jge
in
adc
push
push
sarb
add
cmpsl
dec
push
pop
xchg
add
int3
or
leave
enter
sbb
or
or
lock
sbb
fs
sbbl
jmp
and
jmp
movb
mov
sahf
imul
loopne
rcr
add
out
movsb
roll
nop
mov
jmp
lret
decb
push
fdivr
out
cmc
jbe
inc
push
leave
sub
in
mov
mov
or
or
es
icebp
cmp
sub
pop
ficompl
dec
xchg
rorl
or
dec
pop
jmp
es
xor
push
push
pop
and
icebp
push
inc
xchg
test
dec
and
pusha
mov
pop
es
jle
mov
pop
out
aad
outsb
inc
fs
movsb
pop
repz
cmp
cmp
dec
sbb
sbb
adc
jo
scas
lods
sbb
mov
aaa
ljmp
mov
xor
adc
inc
leave
pushf
psrad
aam
or
je
dec
fists
test
fs
jnp
or
jns
sbb
adc
sbb
test
push
repnz
fisttpl
test
loop
xchg
pop
or
mov
mov
cmp
gs
rorb
pusha
dec
push
pop
rorb
lret
ss
mov
xor
movsb
into
fwait
mov
fdecstp
ds
fdivr
addr16
push
xchg
adc
loope
sub
inc
mov
cltd
xacquire
das
pop
inc
adc
into
and
and
push
xchg
je
fstps
hlt
jmp
leave
int3
jecxz
insb
sbb
in
je
outsb
sub
lods
jns
sbb
add
hlt
mov
cmpsb
sbb
cli
aad
pushf
fmulp
and
rol
push
adc
int3
inc
push
or
clc
push
jns
mov
inc
into
mov
aad
test
cs
push
sub
shl
lds
dec
sbb
sahf
xlat
in
or
mov
xchg
lds
sbb
inc
push
fsubs
adc
ret
int
scas
loopne
in
push
enter
jne
pop
hlt
mov
push
js
adc
movsb
jl
xchg
iret
lock
popa
and
push
aas
inc
ja
sub
repnz
aaa
mov
sbb
jecxz
xor
xor
xor
cmp
scas
dec
and
into
es
ret
adc
pop
dec
xchg
insl
xchg
out
aaa
push
add
jns
dec
fs
jle
sbb
adc
imul
jnp
push
adc
jp
sub
cmp
lea
in
push
and
mov
mov
cmpsl
push
inc
cmpsb
imul
fldl
aas
pop
mov
cmpl
mov
loope
cmp
add
xor
push
lods
lock
dec
mov
imul
push
jae
sti
in
fwait
xchg
popa
xchg
xchg
jb
test
push
test
and
sub
xor
or
cmp
nop
inc
mov
jbe
mov
ret
test
xor
dec
imul
divl
jmp
ss
mov
icebp
push
or
mov
popa
pop
or
and
mov
mov
repnz
test
lret
insl
adc
movsl
fdiv
adc
int3
fdivs
mov
add
movb
cld
xchg
clc
fbld
clc
adc
adc
push
inc
cli
push
mov
and
dec
sahf
mov
mov
jecxz
adc
sbb
orb
sbb
test
sarl
inc
push
lea
in
sahf
inc
test
stc
push
mov
scas
pop
js
xchg
loope
fsts
push
and
xchg
lcall
jno
cld
cmp
dec
ljmp
sbb
dec
mov
and
pop
in
jle
ja
insl
das
cltd
subl
lea
jg
lretw
lock
mov
data16
dec
int3
inc
in
inc
mov
sub
inc
sbb
imul
xorb
or
sbb
sbb
push
add
dec
jo
adc
dec
jmp
xchg
shlb
adc
mov
dec
or
bts
sbb
xchg
fs
repz
add
sub
pop
or
pop
add
add
adc
lods
out
mov
pop
idiv
insb
pusha
shrb
push
lret
jno,pt
inc
and
loopne
sub
cltd
faddp
inc
iret
outsb
mov
or
push
lea
jnp
xchg
xchg
pop
cmp
adc
add
xor
or
mov
add
das
xchg
cltd
stos
inc
add
jo
into
hlt
inc
aam
imul
jno
inc
stos
int
popf
mov
mov
addr16
lret
inc
mov
jne
mov
mov
jl
jg
xchg
jmp
loopne
jge
sbb
insb
int
push
jmp
jmp
fidivrs
mov
xchg
mov
stos
mov
cmp
sahf
push
xchg
je
mov
fimull
int3
popf
std
pop
cli
mov
pusha
pop
sub
mov
arpl
xor
out
imull
mov
and
je
sub
pop
sbb
faddp
lods
fiaddl
add
aaa
pop
cmp
inc
js
lret
or
xchg
outsb
push
push
xchg
sub
jmp
lahf
cmpsb
jo
rcrb
inc
push
xchg
fdivs
push
or
sub
jge
jl
pop
adc
sub
or
call
clc
pop
mov
cmpsl
cmp
xor
loop
dec
dec
mov
mov
ja
dec
in
out
add
aad
ret
mov
and
cmp
jnp
adc
jg
push
sub
popf
sbb
mov
mov
push
frstor
cmpsb
mov
push
fdivrs
call
add
xchg
mov
rol
jecxz
test
mov
imul
mov
pop
mov
mov
xor
in
stc
outsb
inc
mov
push
in
and
bound
cli
adc
adc
das
arpl
or
jle
lods
movsl
cli
dec
gs
call
mov
aad
cmp
fldln2
les
sub
out
aas
adc
lods
arpl
fdivrs
fnsave
mov
pop
hlt
std
les
mov
nop
mov
xor
mov
cmp
ds
gs
adc
ljmp
mov
jo
negl
outsl
mov
push
add
inc
jae
shl
hlt
mov
subb
into
sbb
xchg
outsb
push
sarb
inc
inc
sbb
sub
cmc
lret
xor
xchg
and
test
inc
dec
push
in
mov
and
aaa
into
xchg
outsl
hlt
sbb
inc
out
xlat
cltd
pop
in
pop
adc
inc
bound
and
fdivrl
out
andl
adc
popa
push
out
ret
and
push
inc
int
cmp
leave
inc
sbb
es
movsb
cmpsb
jecxz
mov
dec
outsl
pop
add
ss
mov
insb
xor
subb
and
notb
push
clc
cmpsb
sub
sub
xchg
shrb
insb
add
pop
aaa
les
lret
in
gs
leave
xor
sub
xchg
lods
and
imul
push
mov
or
jno
xlat
push
jnp
or
adc
pop
jns
xchg
sub
mov
aaa
mov
cli
mov
mov
or
lret
jnp
shlb
dec
sbb
jmp
notb
lahf
xchg
fcmovnu
fimuls
mov
add
cmp
jb
sub
lret
jg
mov
aam
movsl
dec
ss
inc
or
out
mov
stos
or
fsubrs
dec
xor
pop
std
in
int3
aas
push
dec
rcrl
mov
inc
mov
out
cmp
iret
or
pop
jb
fidivl
push
cld
js
and
jnp
dec
jae
sub
lret
in
add
xchg
fists
mov
sbbl
inc
sbbb
sar
rcr
push
sub
sahf
push
int
imul
xchg
leave
lds
jbe
cmpsl
xlat
test
mov
mov
dec
adc
and
aaa
xchg
push
mov
fisubrs
lret
xchg
mov
push
hlt
in
xchg
test
pop
nop
jns
or
xchg
xor
imul
fcmove
loopne
scas
lahf
mov
bound
push
lcall
pop
dec
pop
aad
popa
xchg
pop
and
fldenv
in
dec
xor
push
orb
dec
and
pop
push
mov
push
or
jmp
shr
push
inc
sbb
stos
fwait
xchg
pop
jae
leave
pop
insb
fwait
pop
sbb
stc
sbb
in
nop
aaa
shrb
pop
rcll
push
jmp
fnstsw
mov
ss
mov
sub
mov
xchg
or
pop
shlb
popf
mov
sbb
insl
leave
dec
test
jns
sub
decb
scas
mov
out
mov
das
test
sbb
out
sbb
adc
push
imul
mov
xor
inc
cmp
lea
mov
xchg
cltd
sbb
pop
testl
mov
push
test
push
jns
loop
cmp
loopne
movsl
outsb
xor
mov
jp
dec
jb
loope
sbb
rol
mov
pop
inc
fcomp
push
dec
icebp
jne
mov
jge
dec
cmpsb
adc
jb
sbb
xchg
lods
adc
fs
loope
enter
xchg
mov
jno
xchg
insl
fdivr
push
jmp
in
adc
scas
les
popf
xor
into
push
in
in
sahf
cltd
sbb
and
lcall
cs
or
lock
and
cmp
fmuls
loop
sub
pop
pop
and
jae
inc
pop
int
mov
clc
fcomps
fldl
mov
and
es
stos
movsb
or
shrl
and
xchg
mov
pop
mov
out
shrl
shll
inc
jecxz
popf
stc
sti
xor
or
xorb
sub
xor
lods
fistl
sub
sub
sub
dec
push
push
mov
imulb
push
and
fucomp
cmpsl
mov
pop
in
inc
xor
or
and
inc
fildll
cmp
idiv
inc
adc
js
mov
daa
sub
rcl
lods
orl
xchg
rcrb
mov
mov
dec
movsb
stos
mov
lods
std
clc
add
mov
cld
pusha
push
addr16
inc
xchg
push
mov
cmp
or
outsl
dec
inc
jl
clc
aas
xchg
sbb
nop
aad
xchg
mov
xchg
aaa
sar
dec
rorb
andl
stos
jo
mov
repz
push
addr16
adc
xchg
pop
push
dec
notl
mov
or
mov
dec
and
xor
aas
repnz
inc
inc
mov
add
adc
aam
ja
xchg
lret
xor
xchg
aaa
mov
aam
adc
seto
je
insb
jp
or
xor
push
out
xchg
and
jp
shr
add
push
push
mov
jne
mov
outsl
daa
lock
test
jmp
dec
leave
mov
push
or
xor
sub
ret
rcrb
inc
ret
fcmovb
cli
add
xchg
or
aam
cmpsl
int
xchg
xchg
lret
push
dec
xchg
out
cmpsl
jns
or
roll
les
xchg
mov
mov
insl
dec
adc
je
mov
jo
lods
push
rorb
or
in
cmp
mov
loopne
mov
mov
mov
call
out
frstor
jb
and
arpl
dec
xchg
xchg
js
dec
aad
insl
sbb
repnz
mov
xor
sti
out
fisubrs
push
nop
loope
mov
jb
ret
jbe
leave
cmc
sub
inc
push
jmp
movl
movsb
add
in
dec
clc
mov
dec
movsl
cmp
and
in
addl
mov
movsb
dec
rorl
or
mov
xchg
jnp
or
cmp
ffree
and
xchg
cwtl
insb
inc
popa
push
cmpsb
push
outsb
icebp
pop
orl
mov
cmpsb
scas
mov
loop
in
orb
push
fadd
xor
arpl
in
cs
out
scas
out
movsb
addr16
jl
ljmp
and
mov
mov
xorl
xor
std
aaa
jmp
push
bound
stc
pop
ret
push
fldl
or
cld
outsw
cmp
or
xchg
lea
addl
xchg
clc
leave
sti
push
jnp
call
inc
in
ljmp
mov
push
pop
xchg
pop
imul
pop
sti
xchg
pop
shlb
sub
add
in
push
out
xchg
and
sub
jecxz
lea
inc
mov
dec
outsl
xor
daa
adc
js
xchg
jns
mov
mov
cmp
hlt
or
mov
pop
add
fwait
xchg
mov
sarl
gs
jae
and
push
ficoml
inc
cmp
xchg
data16
adc
xchg
out
test
loope
aaa
adc
inc
mov
lret
int3
cmp
fdivrs
jl
mov
je
mov
int3
call
dec
fildll
sarb
xor
push
test
test
jb
sub
test
add
ret
mov
stos
ret
xchg
out
xlat
and
add
ja
cwtl
popf
jecxz
fst
jl
insl
xorl
sub
dec
push
sti
jae
push
lock
mov
jle
enter
shrl
pop
and
push
xchg
call
lcall
xchg
jecxz
push
add
mov
mov
jmp
fstl
in
cmp
add
ret
cmp
loope
in
jge
pop
or
push
mov
aam
xor
cmp
dec
pop
inc
dec
lock
data16
stos
hlt
std
inc
dec
xchg
mov
jno
jbe
fsubl
je
outsl
es
out
outsb
lods
ja
xor
jmp
adc
adc
add
lret
and
add
mov
push
lds
inc
xlat
lahf
or
mov
mov
cmpsl
fimuls
sbb
cmpl
insb
ss
enter
and
jbe
dec
dec
ds
adc
roll
jbe
ret
cmp
sub
out
cmp
xor
push
add
sbb
pop
mov
leave
mov
mov
sti
pop
call
aam
test
mov
inc
repnz
jns
sub
inc
out
inc
add
or
adc
mov
dec
int
xchg
mov
dec
xor
mov
sahf
test
mov
imul
popl
mov
loopne
pop
mov
mov
dec
pop
nop
imul
ror
pop
clc
inc
shll
fsts
pop
mov
je
jae
out
std
jo
sub
mov
fisttps
or
cld
daa
ret
aad
cli
std
adc
out
push
call
repnz
jecxz
loope
jno
xlat
aas
loope
and
sub
cmp
shr
scas
stc
mov
mov
nop
cli
dec
jg
jl
ret
je
push
pop
ret
mov
lds
mov
lret
sti
mov
test
shl
cmp
in
repz
dec
icebp
sbb
and
ja
out
mov
fwait
test
rclb
outsb
adc
pop
out
sub
push
test
es
jge
loop
pop
icebp
jmp
out
push
dec
push
dec
call
xchg
xor
fimull
loope
repnz
clc
sbb
hlt
sti
ficomps
test
out
lock
mov
jecxz
pop
nop
xchg
fisubl
andb
cmp
mov
dec
push
std
rcll
out
xchg
imul
inc
arpl
push
add
sbb
mov
dec
loope
in
outsb
pop
repz
sbb
icebp
sub
into
sub
test
stos
inc
jae
out
sub
loopne
xchg
mov
fcoms
aas
mov
ret
divb
stc
inc
int3
lods
shlb
iret
shrb
add
scas
shrb
nop
mov
push
jp
call
push
add
mov
in
arpl
sti
gs
xor
popf
mov
and
mov
divl
jbe
push
push
inc
icebp
repz
xor
pop
popa
insl
aad
cmc
push
inc
arpl
and
xchg
testl
outsb
inc
cmpsb
mov
cmpsl
pop
sub
imul
rcrb
adc
shlb
adc
jnp
dec
pop
cmp
imul
mov
sub
inc
adc
ja
and
pop
aas
sbb
jne
lahf
push
and
and
pop
push
dec
sbb
push
or
pop
xor
adc
loopne
mov
xchg
loop
lret
out
jns
sbb
loopne
hlt
jp
sub
std
imul
push
dec
rcrl
sub
int
lahf
repnz
sub
mov
dec
in
into
mov
cmp
arpl
adc
rcrb
int3
hlt
mov
sbb
push
push
push
insb
bound
mov
and
repnz
dec
scas
cmpl
sahf
fbstp
lods
dec
pop
data16
clc
add
in
es
xor
stc
xor
das
mov
jp
das
outsb
stos
fldl
ljmp
dec
mov
jbe
dec
xchg
addr16
ficoml
mov
sub
inc
ficomps
cwtl
dec
mov
mov
divl
sub
cmp
cmp
mull
adc
mov
mov
loopne
mov
pop
fimull
mov
push
popf
push
lret
nop
push
stos
and
ret
nop
dec
mov
test
jmp
fucom
xchg
in
in
repnz
sub
adc
cs
pusha
add
inc
test
js
push
and
sub
cwtl
dec
xor
push
push
adc
xchg
clc
xchg
adc
push
movsl
test
out
and
in
xor
and
push
aam
mov
xor
mov
mov
sti
hlt
das
pop
pop
jmp
shl
sbb
das
icebp
add
gs
nop
lods
jmp
daa
push
imul
test
fildll
imul
cmpsl
les
cmpsl
xor
sub
xchg
scas
rclb
out
mull
pop
xlat
pop
daa
divl
out
xlat
pop
addr16
cmpsl
inc
xchg
push
xchg
push
xchg
inc
out
mull
pop
xlat
pop
daa
divl
out
xlat
pop
addr16
cmpsl
inc
xchg
push
xchg
push
xchg
inc
ja
mull
push
pop
pop
daa
divl
out
xlat
pop
addr16
cmpsl
inc
xchg
mov
fstl
inc
out
out
xchg
push
clc
daa
or
dec
lods
xlat
pop
mov
aas
lcall
push
in
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
