mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
pop
pop
push
inc
mov
xchg
mov
loop
jle
call
add
push
stc
or
sbb
out
pop
push
push
push
not
rol
xchg
or
push
push
lret
call
pop
or
dec
add
and
pop
mov
cld
ljmp
or
call
inc
add
pop
add
enter
add
fadd
iret
in
add
push
insl
movsb
testl
ret
pusha
adc
jecxz
add
pop
adc
cmpsb
xor
cmp
ds
repz
jbe
push
inc
pop
lea
add
dec
sub
xor
push
add
rol
jmp
dec
push
ret
push
inc
xor
adc
loop
popf
push
test
add
inc
or
push
push
adc
sbb
shll
mul
int3
add
pop
xorb
lea
nop
loop
xor
stos
aam
and
add
push
jns
sbb
lcall
shlb
xchg
addr16
inc
jb
or
sahf
in
and
lock
lret
fwait
adc
push
push
lea
mov
ja
push
push
scas
stos
sub
adc
les
int3
das
out
pop
mull
mov
inc
jmp
mov
push
lea
adc
inc
test
cmpsl
cmp
dec
ret
and
sarb
xchg
orb
les
sub
add
push
add
pop
mov
push
cmpb
iret
popf
jnp
in
in
dec
popf
clc
xchg
div
add
fld
lret
insb
mov
sub
dec
mov
push
add
xor
mov
jns
ds
adc
into
xchg
cmpps
pop
pop
enter
mov
jns
and
add
nop
iret
jae
popf
je
add
lock
enter
popa
jmp
inc
lods
ds
mov
negl
push
dec
add
lea
mov
jp
pop
out
mov
xchg
sub
in
jp
add
add
pop
xchg
push
and
out
push
pop
push
das
pusha
push
repnz
test
push
movsb
push
nop
add
xor
sub
sahf
and
xor
test
shrb
mov
mov
sbb
xchg
pop
cmp
push
add
test
dec
sbb
push
rclb
push
cmpsl
and
aad
or
testb
add
orb
lea
shrl
or
push
add
test
orb
dec
iret
lahf
inc
inc
inc
or
nop
push
push
add
leave
inc
add
sbb
pushf
add
fdivrl
sub
dec
pop
ljmp
js
xor
push
in
pop
pop
js
jg
sub
aas
movb
inc
adc
cmp
xchg
scas
add
aad
xor
sbb
fdiv
roll
sbb
fadd
cwtl
dec
dec
fidivs
jnp
jne
add
sahf
jp
push
mov
imul
mov
or
sbb
xchg
addb
mov
pushf
and
lcall
dec
inc
mov
iret
dec
int
stos
mov
or
push
pop
ficoml
or
aam
add
addl
int3
pop
shr
lea
mov
or
inc
cmp
loop
pop
test
add
lea
int3
push
in
movsb
xchg
dec
fnstsw
loop
xor
les
xorb
dec
mov
dec
movsb
pop
or
pop
cmp
xor
inc
mov
fadds
mov
loopne
mov
push
jbe
lcall
inc
cltd
mov
and
xor
pushf
ss
add
push
push
mov
subl
and
lret
nop
adc
ljmp
add
fimuls
aas
xor
sub
sub
xchg
enter
inc
sti
push
lods
inc
sub
pop
rcrb
xor
mov
out
pop
sub
xchg
shrb
push
mov
mov
add
and
or
inc
and
push
push
shrb
and
mov
mov
jle
add
psubsb
xchg
jge
adc
idivl
shrb
ror
push
mov
nop
jmp
icebp
jno
xchg
pop
or
roll
ffree
adc
and
je
add
pop
sub
adc
add
std
xor
xchg
inc
dec
inc
pop
and
or
push
inc
repnz
mov
adc
cwtl
stos
lock
inc
mov
jae
sub
jns
sbb
imul
and
and
in
jle
in
cmp
xor
sbbl
ljmp
je
mov
lea
mov
xchg
sub
xchg
cmova
push
ljmp
js
jns
adc
imul
dec
sbb
push
inc
jge
dec
lea
and
iret
lods
jmp
out
add
ret
not
inc
mov
mov
pop
or
xor
sub
mov
adc
aaa
iret
push
or
out
add
cmp
push
inc
mov
pop
xor
or
sub
or
pop
pop
rorb
jne
push
push
scas
popf
daa
aad
push
jbe
sub
movsb
xor
outsl
adc
pop
stos
rcrb
xor
adc
mov
and
add
fcoml
xor
shr
lea
in
pusha
jl
iret
add
xor
das
cwtl
fisubrl
les
adc
lahf
dec
in
shlb
adc
jae
test
adc
je
adc
loop
pop
push
xchg
push
pusha
inc
mov
inc
and
iret
sub
arpl
xor
rorb
add
sub
mov
inc
xor
jl
add
aam
push
push
aam
rorl
sahf
imul
mull
pop
insl
pusha
xor
sub
add
add
inc
pusha
jg
in
sbb
cmp
or
sbb
test
inc
add
push
push
push
in
int3
dec
adc
adc
outsl
into
movsb
xchg
inc
sbb
sub
mov
rcll
adc
jo
jl
subl
add
or
push
sti
fs
cld
sub
shll
imul
cmp
add
inc
not
sub
in
mov
and
movsl
test
xchg
add
not
add
pop
and
push
sbb
lea
bnd
adc
movsl
mov
or
imul
lea
inc
lret
divl
adcb
pop
movsl
stos
push
sbb
fmulp
push
pusha
shr
lea
mov
mov
cld
adc
movsl
dec
mov
lret
insb
push
add
aam
rol
ljmp
dec
ret
jnp
fmuls
push
push
push
in
pushf
push
push
push
pop
add
or
shr
orl
hlt
leave
add
push
pop
pusha
sub
daa
mov
dec
movsb
mov
mov
into
mov
imul
inc
push
dec
cs
movsl
pop
das
add
cmp
subl
test
js
popf
mov
mov
fwait
sbb
push
mov
pop
arpl
dec
pop
inc
adc
pop
loopne
cmp
call
push
dec
repz
sbb
adc
and
push
push
xor
add
rorl
or
shl
leave
aas
xor
add
push
mov
cmp
test
dec
sarb
xchg
sub
mov
add
sbb
jb
bound
xchg
add
pop
add
pusha
jne
outsl
sbb
sbb
sub
sbb
mov
int
adc
push
addb
inc
por
jmp
xchg
pop
xchg
fwait
sub
xor
push
inc
movsb
jp
xchg
movsl
sarb
out
test
sbb
mov
push
hlt
jo
or
mov
pusha
cltd
xor
inc
push
push
test
inc
lret
stos
shrb
test
xor
rclb
lock
xchg
jae
add
or
dec
cmp
sbb
jg
loop
sub
scas
movsl
mov
xchg
xor
lea
mov
cmovae
xor
push
inc
sarl
and
cmc
add
dec
add
roll
icebp
icebp
and
lea
ret
jne
cmp
int3
dec
adc
roll
inc
loop
das
jnp
cmp
xor
pusha
sub
mov
incb
inc
mov
inc
sub
xchg
cmp
xor
adc
repz
xor
add
shl
jae
push
cltd
add
lea
jne
in
cltd
incl
adc
push
insl
push
push
sbb
inc
enter
pop
cld
add
not
sbb
lods
shr
add
in
subb
xor
mov
mov
das
dec
ret
pop
or
ret
push
push
ret
dec
flds
dec
shl
cld
lahf
pushf
cmpsb
add
sbb
push
lea
add
fwait
hlt
dec
push
int
jns
cld
dec
or
jp
dec
push
ret
sbb
es
rcrb
sarl
xor
and
inc
push
push
push
jo
add
sti
fdivrl
loope
ljmp
mov
mov
mov
xchg
push
xchg
repnz
mov
enter
or
dec
inc
adc
std
mov
ret
lea
pop
push
mov
sub
pushf
clc
xchg
in
ret
push
add
push
push
inc
or
push
push
decl
push
cmpsb
add
xorl
mov
dec
imul
push
push
cli
add
in
lret
push
andb
js
scas
loopne
int3
shl
sbb
add
iret
mov
int
in
jg
dec
clc
aam
mov
mov
mov
in
or
sbb
lea
jge
push
xchg
outsb
ljmp
adc
adc
mov
pop
mov
xchg
out
mov
je
icebp
cmpsl
sub
dec
adc
aam
and
fstpt
mov
jb
cmpb
lsl
add
or
sbb
rep
pop
push
xor
lea
mov
cmpsl
hlt
sub
jmp
add
sarl
lea
leave
or
push
sub
lods
sub
mov
jmp
loopne
fcmovb
push
mov
outsl
add
pop
mov
pusha
push
inc
test
adc
add
push
cmc
lret
push
leave
clc
lock
mov
call
push
push
dec
add
push
fsts
scas
andb
push
pop
mov
and
xor
lea
cld
xchg
loop
aam
xchg
out
xor
add
testb
in
testl
push
inc
add
pop
sub
add
fwait
cmc
push
fadd
shr
jo
cmp
test
incl
add
movsb
xchg
repz
ljmp
imul
mov
mov
mov
int
pusha
aas
jnp
push
mov
push
and
lea
movsl
dec
inc
and
jae
notl
add
daa
add
push
jmp
or
andb
gs
adc
in
sar
test
cmp
pop
aam
sbb
adc
test
pop
pusha
mov
adc
or
xchg
push
and
gs
clc
je
push
add
push
call
stc
add
cmp
cmc
inc
dec
mov
das
xchg
cld
mov
mov
lea
sarl
sbb
sub
push
cli
pop
add
lret
and
rolb
push
daa
pop
fnsave
stos
flds
push
push
pop
pop
sbb
shr
pop
add
ret
loopne
jle
cmp
push
ja
push
or
mov
add
mov
dec
cmp
movsl
rcr
cs
fwait
lfs
sahf
inc
stc
data16
movsb
jmp
lea
add
add
hlt
adc
push
andb
in
iret
daa
lret
jecxz
lock
add
xlat
pop
lahf
pop
cmp
out
cmp
adc
adc
lock
shl
sar
aam
dec
jmp
push
js
flds
mov
lea
rclb
pop
lods
mov
or
add
jmp
ret
mov
into
mov
add
jae
push
push
in
and
pop
jne
testl
add
dec
adc
mov
add
sti
not
dec
inc
add
js
fbld
cmp
ror
inc
je
pop
add
sub
pop
push
stc
push
jb
add
bound
notb
sub
lds
test
pusha
mov
add
lea
push
push
push
jnp
pop
adc
pop
dec
push
mov
jmp
push
jb
mov
add
mov
std
and
add
pop
ret
mov
adc
lret
shl
addb
pop
mov
add
fs
xor
in
out
sbb
pop
cmp
imul
dec
jecxz
aas
jns
jnp
push
mov
add
lret
or
imul
add
pop
dec
cld
jmp
in
jo
or
dec
lea
stc
call
mov
or
je
push
adc
sbb
sub
jp
add
roll
mov
add
jns
rorb
daa
sub
adc
adc
jg
and
movsl
pop
dec
clc
push
push
push
sub
xchg
out
push
dec
fwait
add
mov
dec
shl
int3
in
xchg
add
loope
ret
xchg
scas
inc
icebp
push
pop
inc
add
push
test
movsl
inc
jg
aas
lea
sbb
in
popf
cld
push
scas
stos
push
mov
subb
in
scas
mov
adcb
add
lea
cli
push
cmpsb
adc
and
inc
call
lret
cltd
or
cmpsb
or
testl
mov
cltd
ja
push
mov
adc
mov
fildl
aaa
fnstcw
adc
add
jb
loope
and
inc
in
mov
jns
daa
inc
sbb
jg
fmul
fstps
add
push
add
pop
repz
movsb
int
shrl
push
xor
std
sub
movsl
dec
add
and
rcrb
mov
push
inc
sbb
repz
sub
sbb
xorb
or
lock
inc
sub
rolb
add
xor
mov
shlb
mov
pusha
sub
cmpsl
mov
dec
xor
add
or
mov
pop
lret
push
cmp
and
jnp
pushf
mov
sahf
xor
lea
xchg
inc
dec
adc
out
lcall
jbe
rol
xchg
or
dec
subl
lret
pop
push
push
push
jge
add
add
pop
lock
pop
ja
sbb
adc
push
repnz
call
mov
mov
push
call
addb
ficoml
mov
call
lea
int
xchg
xchg
and
or
sahf
dec
movsb
mov
push
push
mov
sub
pop
xchg
ret
sub
add
cmpsl
and
xorl
push
mov
jne
and
in
inc
das
adc
pop
lahf
stos
jno
add
push
mov
sbb
andb
xchg
add
cwtl
inc
dec
mov
xor
das
and
lea
fisttps
cmp
loopne
sub
mov
dec
xor
add
push
in
inc
add
sti
add
cmp
ds
insb
sbb
fnstenv
jl
pop
push
add
sub
daa
xor
cmpb
ss
insb
add
cmc
mov
repnz
out
loopne
mov
inc
mov
cltd
ss
jp
xchg
inc
push
mov
xor
mov
sub
pop
add
repz
xchg
pop
call
dec
lds
mov
push
xlat
add
or
das
xchg
ret
jmp
call
jle
shl
add
sub
rcrb
decl
adc
cmp
pop
push
out
add
inc
popf
test
insl
test
xchg
dec
cmp
js
dec
cli
and
cmp
rcrl
or
mov
subl
and
shll
imul
sbb
sub
orl
aaa
aas
ljmp
movsb
jl
push
lods
mov
addb
sub
and
push
add
fidivl
jp
jbe
jb
es
imul
add
mov
or
fnstsw
mov
or
mov
and
out
add
not
dec
mov
fstl
mov
pusha
or
inc
fcom
jae
es
lret
sub
push
jg
mov
shl
in
add
mov
pop
inc
mov
lea
mov
or
cmp
pop
pop
dec
mov
es
cmc
jmp
loop
les
addl
in
xchg
es
cmp
add
loopne
int3
mov
into
xor
or
add
mov
popa
je
in
mov
or
lea
or
sahf
inc
xchg
enter
mov
es
mov
and
adc
mov
stos
pop
shr
xor
add
lahf
icebp
loopne
hlt
enter
sbb
daa
cli
sub
clc
sub
cli
jb
mov
pushf
mov
js
call
inc
sarl
mov
sub
pusha
jne
pop
std
into
or
push
stos
pop
stos
xor
inc
ror
call
cs
mov
bound
xchg
fiadds
and
pop
out
lds
mov
inc
mov
lahf
sub
dec
push
scas
pop
rorb
cld
not
sub
pop
nop
mov
scas
in
adc
rol
andb
sub
or
hlt
xor
sahf
cs
pop
sbb
mov
jns
adc
xor
jbe
addr16
or
mov
nop
mov
add
mov
push
rol
sti
pop
insb
adc
jle
outsl
adc
cmc
push
pusha
jmp
pop
pusha
push
push
push
xor
imul
and
sbb
xchg
jecxz
and
push
push
cmpsb
xchg
push
out
pop
test
jg
adcb
add
lea
xchg
call
add
fmuls
mov
adc
popa
push
inc
faddl
mov
inc
sub
sub
jno
add
out
jno
call
cmp
rolb
mov
push
inc
cmp
mov
sti
inc
cmpsl
aad
roll
pop
add
insb
or
out
mov
shlb
cmp
fisttpl
cmp
jne
mov
cli
cmp
sbb
mov
fidivrl
rol
outsl
lahf
push
fnstcw
add
roll
add
mov
insb
popa
das
push
or
dec
sub
push
add
cld
stos
rcrl
jae
outsb
aad
add
orl
gs
fsub
in
pop
nop
nop
mov
inc
mov
mov
pop
mov
rol
push
push
adc
int3
push
push
cs
mov
lret
inc
push
adcb
cmp
pop
jae
movsl
jb
push
pushf
or
push
xchg
mov
mov
cmp
out
dec
dec
rcrl
add
push
mov
ljmp
jo
arpl
imul
inc
pusha
popf
sbb
aad
cmp
xchg
sarb
loopne
jle
and
add
cmp
ror
adc
cmp
xor
pop
inc
sub
lahf
sub
or
loope
jle
mov
cmp
pop
push
hlt
add
xchg
jo
dec
stos
mov
stos
pop
loop
add
mov
pushf
ret
sub
xchg
mov
filds
jne
xor
ret
sub
incl
dec
call
lock
dec
loop
dec
test
rolb
pop
adc
out
in
sub
pop
rclb
jp
and
stos
inc
and
aam
test
xchg
push
lds
mov
js
adcb
lret
pop
add
push
dec
inc
testl
mov
mov
xchg
rcl
shll
xchg
and
add
pop
push
stos
add
mov
cmp
xor
push
pop
hlt
add
lds
pop
dec
or
ficoms
pop
ret
pushf
lea
lahf
outsb
cli
xchg
dec
pop
repz
std
mov
movsb
dec
daa
orb
pop
or
dec
pop
push
push
jmp
ds
call
mov
mov
add
jnp
xor
cmp
cmp
test
xor
aas
shrb
add
add
stos
bound
je
ret
call
mov
push
fs
pop
int
add
lea
mov
es
mov
shlb
lock
ret
mov
push
pusha
mov
dec
xor
inc
ret
or
aad
data16
cmp
xorb
insl
push
call
test
dec
sbb
jmp
xchg
inc
dec
lea
mov
sub
fwait
aas
insl
outsb
mov
adc
ja
dec
dec
sahf
into
lods
add
xchg
fsubp
loope,pn
jmp
mov
push
push
push
test
pop
lea
xchg
jge
outsl
jns
jne
pop
call
sar
mov
sbb
sbb
scas
inc
shr
sub
jb
repnz
pop
ret
add
rorb
pop
test
lds
sub
not
mov
push
sbb
push
es
xchg
push
inc
cmpsb
icebp
mov
adc
add
or
in
xchg
jmp
cmp
ror
lea
popf
add
call
fmuls
xor
mull
push
or
xor
rol
dec
xlat
and
fdivr
push
mov
insb
pop
ret
cmp
xchg
jmp
push
mov
lods
add
ss
pop
shr
xor
dec
or
out
push
pop
je
push
pop
cmpsl
cmpsl
pusha
mov
pop
pushf
mov
add
shrl
pop
dec
fsubp
ret
lea
mov
xor
loop
add
aam
mov
sub
jmp
pop
ja
jecxz
into
popa
scas
cld
dec
xor
fmul
inc
push
push
push
cmp
jge
cmp
movsb
scas
jno
lds
lret
jle
ret
adc
gs
adc
sub
adc
addl
add
jle
pop
mov
inc
xlat
or
test
ret
pop
lock
add
not
lea
sub
dec
or
aas
push
call
push
lret
lods
test
enter
mov
test
adc
or
jle
add
mov
cs
aas
and
popa
xchg
lahf
cmp
pop
push
jge
push
repnz
sub
lea
or
add
jl
popf
pop
sar
push
dec
outsb
jae
loop
dec
inc
icebp
shlb
leave
pop
and
or
dec
cs
repz
stos
push
add
pop
adc
or
insb
xchg
dec
sub
sub
aam
mov
jge
adc
bound
jmp
mov
xchg
leave
shl
pop
aad
addl
lea
and
lret
add
push
cmp
mov
jae
shlb
and
addl
popf
adc
jle
cld
cmpb
sub
out
rclb
jae
out
clc
xchg
loopne
rolb
test
xchg
ja,pt
das
push
xchg
xor
add
les
shlb
mov
dec
outsl
icebp
push
push
push
add
cmc
add
mov
push
call
rorl
in
dec
adc
jb
adc
loop
sub
repz
pop
inc
mov
adc
movsb
push
sub
popf
push
or
dec
adc
fistps
dec
movsb
ret
and
dec
or
fdivl
jb
sub
add
push
push
loopne
shrl
test
jnp
add
jl
shr
bound
jbe
inc
adc
add
mov
sbb
out
fdivrp
jo
leave
pop
jne
push
lea
es
xorb
inc
stos
mov
sub
mov
mov
loope
in
mov
push
cs
inc
sub
popa
pop
jle
pushf
addb
add
bound
add
adc
and
lea
xchg
shlb
mov
aas
add
pushf
loope
ret
cs
shr
cmpsb
adc
push
inc
add
add
or
push
subb
lea
loopne
in
mov
pop
loope
call
push
push
xchg
pop
or
into
fdivr
cwtl
or
and
call
xor
dec
stos
sarb
add
imul
in
push
adc
mov
pushl
mov
rorb
sbb
lea
dec
push
pop
addr16
or
je
addl
mov
add
scas
mov
xchg
sbb
jecxz
nop
sbb
jnp
out
or
pop
pop
pop
adc
sub
aaa
pop
mov
sub
add
or
ljmp
dec
cs
mov
push
shll
repnz
in
jp
mov
push
mov
push
js
or
cmpsl
cwtl
repz
ljmp
add
mov
add
loop
mov
sar
addb
mov
xchg
dec
inc
scas
adc
adc
add
sbb
dec
subb
gs
rclb
pop
nop/reserved
adc
add
fnstcw
mov
push
mov
leave
dec
mov
rclb
aas
add
and
into
sbb
and
stc
pop
sbb
jge
dec
pop
rclb
cmp
sub
std
adcl
jle
loop
rolb
jp
ret
push
inc
dec
out
pop
and
mov
mov
enter
push
push
call
dec
popa
sti
add
ljmp
pop
jecxz
leave
jnp
xor
jecxz
mov
orb
cwtl
clc
pop
imul
sub
and
cmp
enter
mov
mov
lea
pop
sbb
add
mov
jnp
iret
inc
pop
movsb
pop
orb
imul
test
xor
inc
stos
movsb
out
ret
loope
push
outsb
into
inc
adc
mov
push
xchg
mov
dec
loope
xor
and
jnp
stos
cld
popf
cmp
inc
in
lea
js
mov
dec
mov
push
mov
pop
clc
push
adc
mov
push
lea
push
hlt
and
push
clc
jl
enter
ja
sti
xchg
call
dec
adc
sahf
add
adc
cs
lods
jecxz,pn
xchg
push
push
lock
jns
pop
arpl
mov
dec
testl
jne
sbb
jmp
add
xor
scas
sarb
aas
rorb
rcl
inc
add
les
sub
dec
adc
jmp
rolb
shrb
jb
orl
adc
push
les
fptan
fisttpll
ror
pop
fadds
pusha
push
out
dec
stos
cmp
pop
lcall
jp
sbb
push
shr
fs
mov
xor
or
xchg
sbb
xlat
fadds
mov
das
aad
xchg
rcl
pusha
orl
sti
dec
pop
icebp
push
xor
xchg
inc
and
rcr
sub
sbb
scas
loopne
sbb
pushl
push
push
rorb
pop
mov
sbb
xchg
dec
push
push
inc
pop
mov
dec
add
jb
sahf
sbb
or
lea
gs
ljmp
enter
dec
fsubl
add
jo
addr16
mov
lds
sti
xchg
leave
sub
jb
out
popf
add
in
ds
dec
and
pop
dec
mov
rcll
dec
mov
das
out
push
cmp
hlt
mov
int3
cmp
jne
push
rolb
rorb
icebp
loop
test
xor
repz
jae
sbb
inc
mov
jne
push
sub
mov
adc
ja
jecxz
jno
mov
enter
pop
fwait
xchg
in
dec
enter
mov
in
push
lea
das
mov
cli
ja
cmp
pop
nop
sbb
lret
out
std
orb
lea
dec
mov
pop
stos
pop
bound
mov
inc
cmp
add
sub
cmp
inc
cltd
dec
pushf
sub
pusha
outsb
xchg
sub
inc
js
jge
xor
jmp
sbb
js
loope
jecxz
bnd
in
inc
inc
pop
mov
jecxz
cmp
ret
pop
mov
mov
and
push
and
incb
cmp
sub
push
and
mov
je
push
test
dec
in
mov
out
mov
push
mov
enter
add
mov
add
dec
and
fldl
mov
lock
sbb
pop
push
mov
sub
lea
adc
inc
clc
ficoml
negl
jbe
sahf
in
ja
out
jecxz
nop
loopne
or
xchg
xchg
pop
add
mov
mov
and
mov
arpl
push
dec
mov
subb
cmp
les
stos
jmp
or
sub
popf
mov
jmp
push
not
add
cmp
inc
push
movsb
std
mov
sbbb
or
ds
xchg
into
test
mov
add
dec
ja
cmp
into
mov
jbe
push
pop
fisubs
leave
adc
std
orb
inc
adc
shl
pop
mov
push
mov
sbbb
shll
lds
pop
push
sub
add
push
pop
mov
ljmp
aad
sub
loop
popf
lock
jno
push
mov
sub
movsb
lcall
mov
inc
lea
jmp
pusha
loop
push
mov
rol
les
push
nop
sbb
push
adc
pop
es
push
repz
mov
push
sti
pop
dec
or
cmp
or
sbb
movsl
xlat
jmp
mov
loop
or
mov
jmp
or
pop
jne
in
push
ffree
testb
inc
cmpb
jne
cmpsb
std
call
orb
shlb
jnp
mov
or
adc
and
sub
inc
xor
insl
int3
es
loop
push
push
push
sub
cmp
add
mov
adc
cmpl
inc
mov
adc
sbb
inc
sti
mov
ds
pop
push
or
inc
or
xor
pop
sub
shl
jbe
mov
int
pop
or
je
inc
pop
jge
inc
lods
dec
ret
dec
les
mov
add
enter
leave
cmp
dec
add
mov
rcr
add
pop
mov
repz
pushf
and
jne
ret
add
sub
add
ret
mov
dec
mov
jae
mov
jecxz
mov
flds
xchg
nop
xor
cmp
pop
and
push
cmp
push
fcomp
aaa
les
or
mov
pop
ror
jg
loope
mov
insl
adc
dec
in
inc
push
rorb
mov
jl
adc
lea
aam
pushf
ds
or
add
push
push
xchg
jae
bound
cmp
jns
pop
pop
addl
inc
lret
adc
inc
sar
or
dec
add
ja
es
or
mov
jbe
sub
shl
push
sbb
popf
lock
daa
xor
gs
in
ficoms
ljmp
mov
int
outsl
xor
imul
cmp
out
outsb
ss
add
jge
push
push
jle
inc
je
adc
and
or
test
rcrl
dec
lea
xor
orb
mov
imul
adc
into
call
insb
arpl
adc
icebp
rclb
negb
mov
clc
jmp
or
push
das
or
add
push
lea
sahf
sbb
push
ret
incl
jne
jne
iret
mov
sbb
enter
cwtl
in
insb
mov
adc
cmpl
into
or
lods
das
out
push
push
or
push
push
add
cld
bound
jne
loopne
fsubr
aad
jp
pop
call
or
ror
adc
js
out
mov
inc
stos
and
fcomps
mov
cmp
movl
xchg
addr16
add
push
push
loop
pop
mov
cmp
mov
je
cmc
jmp
in
orb
aas
aam
mov
add
clc
adc
push
lods
sar
popf
popa
add
lea
pop
aam
scas
xchg
xlat
pusha
push
rorb
add
cmpl
push
push
mov
push
in
dec
xor
inc
lret
out
pop
aas
adc
loop
pop
loopne
lahf
mov
push
mov
dec
jne
mov
push
push
sbb
jl
mov
test
mov
movsb
stos
jne
test
mov
rorl
test
dec
xor
and
add
push
insl
pop
sub
popa
out
scas
das
xor
in
inc
push
sti
pusha
ret
inc
mov
shll
jmp
mov
rcl
pop
or
dec
in
add
mov
push
in
into
jecxz
enter
mov
mov
add
orl
mov
sub
dec
xchg
shll
rcrb
clc
mov
notb
xchg
ret
mull
push
add
push
js
push
xchg
push
mov
into
lea
add
or
cmpsb
cmp
dec
jb
push
scas
sub
jl
and
not
mov
repz
cmp
sub
in
push
sbb
repnz
shll
or
repz
out
pop
mov
cli
jecxz
push
jnp
xor
add
pop
test
sar
adc
push
mov
in
lret
jmp
xor
mov
pop
aam
pop
das
lods
mov
dec
and
ret
mov
orl
daa
sub
mov
push
sub
psubq
stos
sarb
sub
test
xchg
mov
add
incl
into
push
pop
pop
add
sub
in
mov
test
sbb
rol
mov
call
adc
push
adc
push
cmp
call
or
call
inc
mov
jl
imul
sub
mov
mov
enter
and
stos
loope
leave
pop
pop
and
stc
scas
mov
filds
cmp
push
iret
add
xchg
push
add
lea
test
sub
movsb
sar
movzbl
cwtl
jge
push
mov
leave
inc
push
add
push
push
bound
dec
roll
popf
mov
pop
sub
nop
sbb
mov
xor
icebp
sahf
stc
xor
push
imul
pop
inc
js
stos
loopne
cltd
mov
mov
sub
testl
pop
jge
push
or
pop
cltd
mov
pop
sbb
and
int3
cmc
adc
inc
leave
ja
xchg
mov
cwtl
fwait
cmp
mov
mov
dec
stos
insl
fstpt
cli
aad
mov
cmp
das
or
xchg
fadds
push
xchg
sub
mov
add
popa
mov
div
dec
rcrb
xor
int
sahf
dec
cltd
pushf
mov
add
jb
gs
in
sbb
adc
shlb
cld
cs
push
hlt
adc
fisttpll
push
jb
adc
push
outsb
xchg
iret
xorl
inc
jns
mov
inc
cs
clc
dec
loope
and
push
lea
inc
push
inc
cmp
and
dec
je
call
add
leave
cld
popa
sbb
dec
or
pop
mov
adc
adc
inc
mov
and
fistps
pushf
jbe
nop
push
clc
sbb
push
dec
shl
cmpsb
int
js
sub
fmulp
add
push
sub
xor
ds
cli
nop
jge
test
fisttpl
test
fwait
dec
push
in
or
pop
out
add
out
xor
mov
out
cmp
addb
fisubrl
orb
movsb
leave
js
out
adc
shll
sbb
stos
push
push
mov
push
loop
stos
shrb
mov
jbe
jns
sub
call
out
fwait
jmp
mov
sub
mov
das
xor
mov
imul
mov
int
pop
xchg
or
add
push
sbb
aas
push
sti
sbb
shlb
addr16
mov
mov
andl
xor
leave
out
xlat
mov
dec
jmp
mov
out
insb
mov
repnz
xorb
add
dec
push
and
loope
sub
test
imul
mov
sbb
jno
ror
mov
jo
jecxz
loop
fiadds
pop
jae
fcom
inc
not
add
or
incb
jb
lcall
ja
push
daa
in
inc
or
aad
rcl
aas
add
fiaddl
mov
cld
mov
cmp
add
ss
pusha
pop
sub
rcl
aad
addl
or
int3
mov
into
push
cmpsl
in
scas
shl
fucomip
into
dec
mov
add
pop
adc
lea
jo
clc
in
call
jo
sbb
inc
xor
jmp
xchg
add
cmp
leave
rolb
push
mov
push
push
jb
inc
xchg
pop
stc
in
fisubrl
icebp
and
jle
pop
js
lret
jo
inc
or
add
jp
sbb
push
inc
ror
sub
icebp
pop
add
loope
and
cmp
subb
testb
test
dec
das
arpl
xor
loopne
lods
aad
mov
enter
lea
pop
mov
pop
dec
shrb
cli
mov
icebp
or
pusha
add
push
call
add
test
push
mov
repz
or
sarl
sbb
or
imul
mov
push
pop
enter
in
lret
jl
jb
xchg
jle
loope
adc
dec
xor
push
push
loope
hlt
pop
cld
cs
push
add
xchg
mov
xor
dec
mov
mov
lea
imull
mov
fs
aam
dec
ss
out
fistpl
loopne
mov
in
call
lods
out
adc
dec
popf
mov
inc
xor
cli
orb
adc
mov
imul
aas
loopne
int
lcall
fwait
xor
inc
sbb
pop
push
dec
push
in
xlat
dec
hlt
pop
pop
dec
or
and
popl
mov
fsub
add
dec
jp
and
repz
leave
cmp
enter
mov
test
mov
lret
mov
mov
sbbb
sar
js
and
cmc
imul
mov
stc
ret
xchg
cmp
pop
call
mov
int3
xchg
fimull
or
push
ljmp
xchg
sbb
jb
aas
push
jmp
shrb
dec
mov
pop
push
and
stc
mov
jne
repnz
cmp
pop
pushf
in
xor
je
and
cmp
dec
adc
cwtl
sub
cmc
adc
lea
mov
not
dec
movb
mov
add
push
xchg
mov
push
push
sub
pop
mov
inc
sbbb
xor
add
into
adc
mov
pushf
and
inc
test
and
jle
xchg
out
into
jle
xchg
xchg
fwait
orl
ds
mov
xchg
lock
nop
test
add
xor
subb
push
repz
push
push
call
test
pop
jnp
test
mov
xor
and
in
pusha
hlt
cltd
push
push
push
adc
fisubrl
fsts
dec
cld
xchg
lea
das
fidivs
movsb
call
std
ss
jmp
rcrl
mov
in
xchg
add
imul
out
and
enter
pop
cmp
sbb
xorb
daa
cld
mov
xor
mov
je
push
cmp
sub
mov
rcrb
jbe
add
shr
dec
mov
cltd
dec
push
inc
insb
xchg
pop
lods
push
xchg
mov
addr16
adc
sub
add
push
xchg
xchg
popa
ret
outsb
cmp
push
mov
mov
mov
mov
push
lcall
inc
xor
in
pop
scas
inc
jle
pop
dec
xchg
pusha
push
xchg
subl
jno
les
jnp
inc
and
push
aam
fldcw
ret
adc
sub
add
add
sti
jo
pop
insl
pushw
inc
mov
mov
cwtl
add
and
ds
cmp
out
xor
loopne
cmpsl
out
sahf
dec
inc
aad
jge
dec
or
pop
xchg
add
pop
popa
repnz
add
xor
pop
dec
push
adcl
popf
adc
add
mov
mov
pop
add
sti
inc
pop
pop
push
mov
inc
mov
nop
bound
pop
popl
dec
es
xlat
jmp
add
out
adc
scas
test
mov
xchg
filds
add
dec
lea
add
test
xchg
xchg
sub
hlt
add
mov
pop
jmp
push
faddp
push
repnz
adc
add
sub
dec
dec
xchg
jno
or
in
push
mov
lods
mov
jg
adc
fistps
dec
call
pop
bswap
push
mov
cvtps2pi
jne
in
stos
aad
adc
cld
jnp
pop
mov
mov
cmp
scas
push
and
add
cli
test
jb
imull
ret
mov
push
push
jae
cmp
push
rcrl
mov
xchg
add
out
pushf
push
inc
and
or
loop
fisttps
int
xorb
aam
fistpl
cmpsb
imul
or
mov
ret
shr
fwait
sbb
icebp
in
mov
test
add
xor
jecxz
aas
rorb
fwait
mov
xorb
pop
adc
add
sti
add
push
sbb
loopne
sti
lea
sbb
inc
and
xor
pop
ret
xor
sbb
das
gs
jnp
testl
sub
icebp
push
push
mov
push
sbb
mov
mov
xor
mov
mov
jne
movsl
decb
adc
cmp
dec
jl
pop
imul
jle
jge
scas
addb
sarb
adc
xor
bound
test
pusha
push
scas
adc
clc
in
pop
mov
rorb
mov
xchg
fstpt
cmpsb
scas
dec
out
scas
or
jmp
arpl
jb
cli
lret
inc
or
pop
rcl
test
sub
mov
add
sub
mov
sub
inc
pusha
pop
lea
mov
mov
xlat
popa
push
adc
inc
outsb
lahf
loopne
xchg
adc
je
imul
sbb
shl
push
push
or
scas
mov
cmpsl
lea
rorl
sbb
add
jecxz
mov
fs
jno
gs
xor
dec
mov
push
pop
out
jg
mov
ljmp
ficoml
push
pop
jge
sub
inc
pop
mov
mov
and
dec
fisubrl
cld
pusha
pop
ds
sbb
scas
pop
push
dec
cmc
loop
sbb
adc
and
push
imul
dec
aad
inc
lea
mov
aad
icebp
pop
pusha
xchg
mov
pop
cs
clc
add
sarb
pop
dec
aas
and
or
adc
jecxz,pt
int3
mov
jb
pusha
push
pop
mov
mov
lds
lea
sub
inc
jb
and
icebp
fcomps
push
inc
mov
inc
hlt
xchg
cld
jle
call
std
test
movsl
pop
xchg
jecxz
lahf
daa
or
call
jnp
stc
loop
xor
push
ret
xchg
lods
jg
fcoms
xchg
lea
xchg
das
out
jae
mov
int3
mov
pop
add
ffree
adc
mov
popa
les
aaa
xor
inc
lea
cmp
add
mov
leave
cmpl
enter
dec
push
jb
and
leave
out
add
out
loop
sbb
mov
fcomps
roll
call
cmpsl
add
push
push
push
outsb
sub
in
push
sub
shrb
cs
lods
shrl
cmpsb
lock
or
push
cmp
mov
test
mov
and
sbbb
mov
testb
dec
in
xchg
and
loop
mov
lea
out
or
add
mov
push
cld
scas
add
out
outsb
cmpsl
hlt
addb
dec
add
int3
jmp
out
pop
push
sbb
negb
or
push
ja
mov
mov
add
mov
adc
jecxz
decb
dec
test
xchg
sti
add
mov
cmpsl
and
pop
dec
sbb
int
add
or
aad
bswap
jne
or
push
fists
cmc
pop
incl
jne
push
push
push
inc
add
push
lea
adc
and
jb
inc
push
cmpb
inc
mov
cmp
and
bsr
push
adc
adc
dec
fdivrs
into
rorb
gs
cmp
pop
test
xor
aad
movsl
je
clc
outsl
mov
mov
repnz
popa
push
orl
ret
and
mov
cmp
lret
mov
icebp
sub
add
lea
mov
push
testb
movsb
pop
push
lea
jns
adc
mov
das
jle
in
xchg
fldl
rolb
mov
dec
cli
pop
loope
dec
push
das
ljmp
push
add
mov
flds
jmp
test
not
lock
aaa
push
mov
lret
dec
add
push
cmp
stos
sbb
imulb
pop
sub
sbb
sbb
clc
adc
push
into
add
std
push
lds
test
add
dec
push
loope
enter
add
mov
outsl
mov
xchg
lods
cmp
sbb
aam
push
push
ljmpw
daa
sub
out
into
jle
cltd
rol
pushf
sub
adc
add
orb
mov
mov
adcb
push
scas
lds
cs
mull
add
in
movsb
pop
and
push
outsl
xlat
adc
int3
enter
jnp
mov
cmp
stc
out
xor
aad
stos
dec
lods
aas
je
call
xor
lea
das
movsb
mov
lods
cmpsl
xor
push
sub
xchg
out
js
stc
aam
mov
or
jmp
insl
xchg
or
dec
mov
push
inc
or
outsb
sahf
jge
pop
aas
addr16
xor
jmp
push
xchg
bound
mov
mov
lock
shrb
push
leave
int
add
stos
mov
dec
push
lea
mov
and
psrlw
mov
in
fistps
sbb
push
enter
dec
bound
clc
add
sub
out
add
mov
stc
nop
or
cmpsb
add
rcll
pushf
sub
sbb
je
aas
add
stc
out
ds
insb
pop
shl
add
push
add
inc
fidivs
add
add
or
mov
sahf
outsl
inc
pop
pop
pop
lock
ds
sbb
xchg
pop
aad
je
and
loop
movsl
loop
testb
es
xchg
sub
add
xchg
or
add
sbb
lods
mov
cmp
xor
add
xor
andb
loop
imul
jmp
leave
mov
dec
add
mov
cmp
leave
hlt
or
fidivrs
incl
mov
sub
stos
add
mov
mov
clc
adc
shlb
sbb
outsl
xor
jge
ss
sub
mov
test
lea
push
shrb
add
test
xchg
lods
cmpb
inc
lret
add
add
call
fiaddl
clc
jge
jnp
jp
je
lea
xor
pop
xchg
mov
mov
stos
mov
push
imul
mov
std
iret
mov
insb
pop
daa
jns
ss
add
dec
leave
pop
gs
lock
cmovns
stos
xor
add
adc
push
jb
lret
dec
daa
xchg
add
aam
in
cli
jg
jbe
push
sbb
xor
xchg
pusha
add
iret
inc
xor
xchg
cmp
test
pop
out
out
in
jl
add
sub
aas
cmp
xchg
imull
jne
sbb
insb
sub
ljmp
cmp
push
add
mov
sbb
push
cmp
pushf
jle
fwait
mov
lret
insl
js
jmp
mov
and
or
imul
pop
adc
dec
add
in
jle
and
aam
int
aam
aaa
add
notb
lods
je
push
sbb
test
mov
stos
pop
outsb
subps
push
ret
or
rcrb
push
sbb
lret
cli
stos
push
add
ja
jne
jo
add
mov
test
inc
add
add
lock
inc
xlat
add
out
push
loopne
xchg
push
fcoms
jecxz
rorb
notl
mov
repnz
pop
xchg
daa
cld
jp
lea
dec
mov
addb
sub
cs
out
clc
and
xchg
subl
fwait
xchg
imul
andl
or
dec
movsl
cmp
add
xor
icebp
xchg
add
dec
fwait
push
ds
add
adc
mov
add
push
inc
inc
add
ja
push
dec
repnz
cs
gs
pop
ljmp
add
fldenv
add
arpl
add
push
js
in
cmp
pop
add
fidivrl
add
outsb
popa
ret
daa
jbe
push
lea
pop
inc
mov
add
push
divb
and
cmovo
pop
pop
rorb
push
add
rcll
js
mov
cmp
mov
push
add
es
fdivrl
sub
mov
cmp
dec
pop
test
jae
insb
outsl
add
mov
pop
rorb
push
add
mov
lcall
ss
rcl
jge
add
cmp
arpl
das
outsl
mov
push
dec
and
leave
add
lods
and
test
sub
pop
mov
out
cmpb
gs
push
dec
loop
shll
inc
pop
fstl
mov
cwtl
mov
push
sbb
aaa
add
fldcw
mov
sti
add
mov
inc
push
rorb
mov
ret
dec
mov
jg
dec
or
cmp
mov
cmpsb
out
add
lcall
scas
fildl
or
push
jbe
adc
and
fs
nop
fists
arpl
or
mov
jns
add
add
repnz
fmul
adc
mov
in
hlt
cmc
add
movsb
and
scas
cltd
cmpsl
pop
shlb
sub
and
or
sbb
pop
outsl
test
add
mov
pushf
push
aad
cltd
lods
add
inc
adc
xor
das
cmp
add
jbe
filds
stos
mov
pop
shl
add
and
sbb
jmp
cmpsl
xlat
or
push
push
sbb
sahf
or
xor
sub
dec
jl
repz
sbb
mov
stos
clc
add
pop
xchg
mov
jne
icebp
mov
push
sub
cmpl
mov
dec
imul
jo
mov
adc
xchg
sub
add
jmp
loop
mov
push
add
push
mov
jb
ror
arpl
inc
push
add
stos
bound
xchg
outsl
aaa
sub
repz
add
or
ret
xor
add
sbb
sub
jnp
fistpll
in
std
outsb
loope
jae
ja
add
out
push
pop
and
dec
lret
cli
test
dec
inc
inc
adc
addl
out
fisubs
or
mov
fistl
pop
add
mov
lret
ja
or
addb
les
inc
cmp
add
push
dec
stos
mov
cmp
pop
cmp
shl
lods
pop
cmpsb
and
add
xlat
enter
add
shrl
rcll
mov
mov
push
and
xor
inc
add
outsl
aas
enter
push
add
stos
je
in
adc
movsl
mov
xor
cs
fs
add
add
cmp
sub
fcomp
shl
add
mov
loopne
mov
push
pop
pop
dec
sub
adc
or
push
outsb
lock
shrl
mov
add
ret
ret
js
inc
jb
jmp
push
rolb
pushf
cmp
add
and
int
mov
xchg
enter
repz
adc
adc
push
push
fsubr
inc
jmp
jne
pop
mov
add
push
sub
gs
test
xlat
stos
aas
test
xchg
add
sbb
and
jns
lock
mov
scas
std
lret
adc
arpl
negl
fwait
ljmp
add
sbb
lret
mov
fadds
out
cmp
add
aam
mov
leave
icebp
sti
jns
stos
xchg
lahf
roll
sbb
les
fisubl
add
test
add
out
out
add
dec
adc
jge
add
call
mov
das
fnstenv
pop
scas
or
add
mov
aad
cmp
add
add
jge
enter
ss
lods
dec
cmp
add
call
pop
or
cmpsb
adc
adc
xchg
push
stos
pop
stos
rolb
mov
aad
into
push
popa
cmp
push
nop
in
stc
mov
mov
add
aaa
xor
push
stos
add
push
sub
ja
and
pushf
or
xchg
xor
mov
sahf
movsl
sti
jle
add
sbb
sub
and
ret
mov
insl
and
test
jnp
adc
or
add
sbb
filds
fwait
push
ljmp
cmp
lock
jno
mov
data16
inc
push
aas
roll
arpl
mov
cli
cmpsl
nop
in
add
add
cmpl
xchg
xorb
cmp
sub
addr16
out
mov
add
xor
add
nop
popl
loopne
xchg
add
mov
or
cld
mov
repnz
cli
cmp
in
das
adc
adc
or
popa
sti
ret
mov
cmp
mov
scas
fcmovbe
loopne
in
and
mov
xchg
pop
inc
imul
stos
xchg
mov
dec
in
push
hlt
mov
add
sub
adc
push
fdivr
add
jmp
jae
pop
repz
cmpsl
sbb
adc
or
lcall
js
and
xor
out
adc
dec
jg
cmp
jne
aas
sub
nop
daa
fs
pop
and
adc
mov
inc
add
dec
push
xchg
cmpb
mov
xor
mov
xor
clc
fnstenv
add
fadd
push
sbb
rolb
js
add
xlat
xchg
jo
sub
pushf
add
xchg
add
inc
mov
add
jb
arpl
or
mov
pop
mov
into
or
mov
repnz
xor
cmp
sub
imulb
outsb
add
mov
mov
repnz
jne
fdivs
push
pop
shl
pop
stos
iret
lcall
cmp
xor
out
inc
mov
and
add
jmp
into
nop
push
in
idivl
add
out
rcrl
sbb
ja
add
push
lds
sub
sub
add
out
enter
mov
aad
add
jno
pusha
pop
inc
add
cmp
or
xchg
in
cltd
and
mov
andl
fwait
mov
rcrb
loope
aas
dec
mov
cltd
sbb
jae
dec
stc
xchg
add
push
and
cmp
jnp
add
add
push
jl
or
pop
adc
outsl
pop
mov
sar
shl
call
sbb
sti
lock
pop
push
hlt
lcall
ret
add
xchg
adc
fadd
ret
mov
sti
fs
add
stos
lock
out
and
add
push
imul
js
add
popf
dec
fwait
sbb
jns
cmp
ljmp
push
lahf
add
sbb
incb
cmp
cltd
enter
push
pop
hlt
std
inc
pusha
popf
cld
inc
push
adc
sti
and
add
ds
outsl
ljmp
inc
pushf
data16
into
dec
xor
sahf
inc
sbb
rcl
mov
lea
add
sub
push
dec
fmuls
add
stos
mov
add
cmp
movl
mov
test
xchg
add
push
flds
into
add
sub
call
cmp
mull
jb
push
mov
lds
sub
add
mov
cmp
jmp
add
jbe
dec
xchg
mov
inc
icebp
inc
jp
sbb
add
xor
xor
divl
mov
stc
push
clc
pop
rolb
mov
lret
inc
out
lock
lods
jbe
add
pop
adc
jge
add
xchg
mov
mov
pop
xor
xlat
ja
cmp
dec
lret
enter
and
out
sbb
xlat
scas
fwait
sti
jne
cmp
shl
xchg
pop
cld
std
sbb
mov
inc
loope
fucomp
and
dec
je
inc
add
sub
or
xchg
jne
lcall
fs
jecxz
inc
orl
jo
or
in
js
repz
int
js
mov
mov
and
fwait
or
pop
stos
add
scas
jae
mov
pop
prefetch
into
cmpsb
test
mov
dec
ja
inc
adc
sub
pop
adc
jbe
push
or
clc
or
ss
roll
rolb
lret
sbb
push
shll
xor
std
lods
fstl
decb
cmp
mov
add
fs
mov
push
out
aas
jg
fcomps
movsl
les
push
push
mov
loopne
clc
mov
add
xchg
ja
add
les
cmp
pop
inc
mov
jl
pop
outsl
fnstenv
xchg
ljmp
and
adc
pop
and
add
out
and
lea
lret
int3
adc
pop
shl
loop
repz
add
xchg
mov
inc
add
push
sbbb
or
xor
pop
and
leave
push
dec
inc
js
add
outsl
or
pop
loop
imul
pop
gs
cmp
andb
inc
testl
andl
lods
add
jmp
inc
add
loop
adc
push
ss
scas
and
pop
add
cmpsl
sarl
mov
mov
adc
push
imul
mov
jle
jo
add
popf
pcmpgtd
xchg
ficoml
add
aad
dec
add
sub
mov
jle
pop
push
mov
mov
into
sar
je
push
add
icebp
cwtl
mov
push
jb
in
clc
pop
xchg
dec
mov
rolb
and
add
jb
add
int3
stc
mov
mov
cmpsl
fimull
mov
mov
push
fstps
mov
xchg
ljmp
mov
lock
add
add
and
add
in
cld
mov
es
add
mov
in
add
pop
add
mov
inc
pop
xchg
or
lods
xchg
mov
or
sbb
fisubl
inc
xor
inc
repnz
dec
pusha
lahf
je
test
push
movsb
std
test
and
loope
pusha
adc
push
xor
popf
aas
mov
add
sti
lret
ss
and
shlb
mov
lret
in
arpl
mov
mov
outsb
jg
cmp
test
mov
in
add
lods
arpl
and
rcrl
inc
mov
loopne
sbb
xor
inc
add
aad
orl
insb
or
lcall
inc
stos
add
outsb
mov
gs
int3
add
nop
push
sbb
movsl
adc
dec
add
jae
rclb
ret
cld
sbb
dec
stc
cmpsl
inc
aam
sti
punpckhdq
cmp
rclb
bound
add
adc
inc
lods
inc
out
jnp
jbe
push
add
mov
flds
loop
andb
incl
mov
adc
add
repnz
inc
in
rorb
mov
push
add
push
mull
cmp
arpl
stc
sbb
xor
lds
pop
pop
fbld
xadd
repnz
jns
dec
dec
push
mov
xchg
lcall
je
insl
call
jmp
pop
jmp
and
xchg
lods
add
das
xor
add
ja
sbb
add
jnp
rolb
mov
loop
addl
add
ret
xchg
fs
add
fmull
add
sbb
jmp
repz
pop
jle
mov
test
pop
rclb
movsb
cltd
add
dec
cs
imul
add
lods
movsl
sub
dec
test
into
outsb
jg
add
xor
and
stos
push
jle
add
or
fwait
shll
movsb
or
push
xlat
adc
add
xchg
add
or
sahf
cmp
fisubrs
call
movsb
mov
in
add
dec
sub
ss
xor
cmc
rorb
sub
add
and
push
add
mov
sbb
xlat
test
fs
adc
adc
or
sub
cmp
test
and
xlat
mov
ds
pop
mov
inc
xor
sahf
mov
nop
test
outsl
ja
repnz
in
xchg
or
insl
add
call
cmp
stos
add
pushf
jbe
jae
pop
fst
dec
xor
es
ds
jge
sbb
mov
out
or
pop
out
pop
in
jle
inc
push
jnp
mov
xchg
divb
adc
push
add
or
jmp
js
xchg
aaa
shrl
add
jge
fldl
jne
ljmp
pop
pop
aam
jp
and
test
add
jg
scas
ss
xor
test
add
enter
add
xchg
mov
add
or
cltd
mov
add
clc
cmc
or
aas
ljmp
jo
jno
sbb
dec
rcl
mov
add
and
cld
into
lahf
cmp
test
add
stos
js
pop
push
scas
xchg
addr16
test
popf
jne
adc
daa
xor
add
test
packssdw
cmp
pop
xor
and
mov
mov
jo
jb
add
cmp
push
int3
sbb
jmp
mov
int
pop
pop
adc
loop
call
push
add
sub
pusha
jnp
mov
inc
out
adc
fadds
jp
mov
nop
loopne
lcall
lock
call
xor
xchg
out
add
lock
add
pop
ja
leave
xchg
dec
add
mov
add
add
pop
push
in
xor
jae
or
and
sub
lcall
jge
jg
jne
bound
add
ficomps
insl
dec
imul
push
inc
cli
emms
jecxz
test
pop
add
dec
mov
jno
movsb
add
pop
pop
adc
adc
dec
xlat
xchg
rcrl
sbb
cmp
sub
cli
push
pop
shrl
test
stc
rclb
add
xchg
iret
push
push
fwait
cmp
mov
push
ljmp
add
enter
jno
adc
xor
add
jmp
daa
add
out
jne
inc
add
push
add
lea
adc
pop
add
jno
cmp
ss
popa
imulb
add
fcompl
add
fwait
add
mov
mov
cs
add
or
xchg
mov
add
imul
push
push
out
adc
cmp
mov
outsl
adc
in
jae
add
xor
lret
pop
add
leave
frstor
push
mov
int
mov
add
dec
or
enter
add
dec
unpcklps
sarb
xchg
les
cltd
loop
inc
add
and
ljmp
jo
lds
enter
rdpmc
fistps
and
movsl
xlat
and
and
hlt
sub
out
pop
loope
cmp
fwait
and
xor
mov
mov
lahf
sbb
stc
mov
inc
mov
pop
insl
outsb
adc
jmp
insb
adc
jbe
cmp
sbb
loopne
test
and
stos
mov
sbb
bound
dec
or
cmp
or
adc
or
call
daa
dec
cmp
mov
out
lods
cmp
mov
cwtl
addl
lret
jecxz
push
add
aas
dec
cli
cltd
fcomip
dec
add
pop
adc
sub
out
jl
inc
out
mov
fcoml
je
adc
and
test
test
add
add
xor
jbe
push
cwtl
cwtl
push
mov
adcb
pop
add
and
negl
cmpsl
stos
add
sub
clc
movsb
add
inc
pop
enter
prefetch
or
mov
adc
adc
add
cmpsb
int3
shl
arpl
dec
cli
pop
in
cltd
or
lret
int
loopne
and
mov
out
inc
shlb
add
icebp
in
in
sbb
inc
add
jno
lock
xchg
add
fistps
sub
ret
pop
addr16
fsubrs
adc
sbb
jbe
inc
sub
movb
push
out
movl
outsl
mov
push
cmp
sbb
repz
and
mov
cmc
aaa
cli
inc
dec
jns
nop
cmpsb
jne
push
es
push
shl
mov
xchg
lea
repnz
icebp
adc
jbe
add
mov
test
loop
add
lret
cld
and
mov
cltd
out
mov
pushf
test
sti
mov
aam
test
das
push
aas
add
push
sub
mov
mov
add
daa
add
adc
notb
je
xchg
push
push
inc
aad
rclb
aaa
aas
pop
cmp
add
jns
add
cli
mov
mov
pusha
add
mov
xor
mov
cmc
mov
xchg
hlt
pop
loopne
jle
addl
pop
cmp
jnp
mov
pop
popa
pop
push
movsl
and
cwtl
je
add
bound
mov
sub
add
daa
int
sub
in
mov
je
lret
mov
lahf
outsl
sub
sbb
add
and
push
add
sbbl
call
inc
movsl
imul
test
cmp
dec
jno
ret
mov
pop
outsb
jmp
mov
imul
mov
jb
rclb
enter
les
into
push
and
rcrb
cld
cs
repnz
push
lcall
mov
push
cmc
pop
lahf
inc
shl
push
shlb
rclb
mov
ds
in
bound
push
mov
jb
stc
clc
inc
test
ret
cmp
push
mov
cmpsl
push
lock
rolb
xchg
fs
or
nop
cmp
ljmp
sub
jnp
add
cmpsb
inc
sub
add
in
add
adc
add
pop
enter
mov
mov
aam
addb
add
mov
sub
dec
pop
enter
sub
mov
add
fsubrs
push
add
fisttpll
addr16
adc
cmp
rcr
sahf
hlt
jl
js
arpl
inc
sub
lret
adc
lret
icebp
aaa
xor
or
push
sbb
add
pop
fwait
xor
inc
fstpl
add
ret
lahf
or
push
sub
loopne
mulb
add
or
push
cmpsl
jnp
adc
xor
pop
aaa
mov
mov
add
jo
gs
push
and
sub
stc
add
dec
mov
pop
mov
push
adc
pusha
jae
push
ret
in
aaa
inc
repnz
pop
cmpsb
mov
loop
jecxz
and
add
lahf
mov
push
inc
rolb
imul
mov
add
add
call
lret
int
sub
fimuls
or
cmc
popa
add
inc
out
dec
ret
loopne
in
add
cltd
aam
add
jae
adc
clc
loope
mov
ret
adc
test
gs
cmp
dec
add
add
cwtl
dec
les
push
cmp
and
sub
dec
mov
ljmp
aam
js
cmpsl
mov
decl
in
pop
mov
mov
push
add
adc
or
or
sub
daa
xorl
cli
xor
jg
jge
rcll
call
push
test
js
dec
add
cmp
ds
add
inc
pop
fldcw
lods
add
pop
sub
add
xor
lds
insl
cmp
loope
cmp
cmp
inc
fildl
jbe
das
dec
pop
cmp
orb
ucomiss
xchg
in
jnp
test
int3
pushf
fst
dec
dec
add
add
xchg
push
jno
test
jnp
adc
push
outsl
mov
sbb
jle
lods
mov
pop
inc
add
jbe
inc
clc
cmpb
cld
add
mov
loopne
pop
and
add
cli
xor
pop
pop
add
pop
jae
pop
sarl
add
cltd
je
in
bound
add
test
outsl
dec
aaa
addb
lret
or
loop
xlat
inc
mov
fstl
dec
mov
cwtl
wrmsr
sahf
add
inc
imul
test
inc
adc
stc
iret
imul
adc
push
adc
icebp
cld
call
mov
jne
imul
pop
test
or
add
or
sbb
sbb
fcmovnbe
call
add
imull
add
dec
mov
jo
int
es
in
add
inc
pop
or
mov
jp
push
sti
xchg
sbb
push
push
mov
in
mov
call
push
mov
insl
sbb
jp
pop
js
cli
inc
push
add
fs
cmp
addb
cltd
dec
add
in
mov
add
add
aaa
je
cmp
clc
pop
push
jge
cmovge
push
movsb
pop
push
inc
rcr
dec
ret
xor
imul
mov
inc
push
push
mov
in
push
nop
push
add
mov
cmp
test
sbb
pop
push
lcall
add
mov
xor
cmp
mov
add
fnstenv
dec
dec
or
hlt
int
mov
and
inc
lea
or
into
iret
xor
mov
add
jecxz
std
sub
test
imul
mov
and
cmpsb
pop
dec
pop
jae
xor
pop
ds
add
stc
popl
sti
push
push
pop
push
packuswb
sub
je
xchg
iret
out
jp
lgs
or
sub
add
mov
push
test
pusha
std
inc
aas
mov
xor
int3
mov
mov
or
aas
hlt
mov
fidivl
and
add
cli
jne
sub
std
cwtl
lods
jg
add
mov
cmc
in
add
xchg
inc
cltd
imul
das
push
cmp
loopne
sub
pushf
and
push
leave
pop
js
call
dec
ja
data16
sldt
das
cmp
mov
aas
add
data16
sbb
push
sub
dec
xchg
mov
clc
push
adc
jo
and
fldenv
sbb
dec
push
pushf
adc
js
mov
test
nop
jmp
push
adc
leave
mov
jl
mov
out
add
loop
sub
stos
add
cmp
in
add
sub
add
sbb
ret
pop
daa
sbb
pushf
imul
test
mov
xchg
fildll
imul
mov
stc
adc
stos
and
sbb
lret
adc
add
jb
enter
scas
repnz
xchg
fadds
add
cmp
sahf
xchg
jae
sarb
push
xor
data16
leave
xchg
push
or
add
popf
inc
lods
addb
daa
mov
shrb
add
pop
loopw
and
add
movsl
sub
dec
xchg
enter
push
or
fstpt
out
xchg
out
sti
add
mov
popf
aam
shll
push
pusha
rcr
xchg
cmpsl
add
iret
sbb
add
pop
or
cmp
and
and
fisubl
test
add
add
cmpsb
andl
mov
lcall
push
sahf
test
add
call
nop
lea
fmull
add
xchg
xor
and
scas
movsl
mov
cltd
add
xchg
xchg
adc
cmp
add
mov
stc
or
pop
sub
aaa
push
lods
mov
add
mov
mov
mov
cmpsb
imul
cltd
adc
add
pop
jne
mov
add
xchg
lods
add
xor
loop
cmp
and
pop
stos
subb
imul
push
jl
cld
jle
mov
ja
add
sbb
push
add
add
repnz
ficoml
mov
pop
jecxz
sbb
cwtl
fbld
mov
inc
insl
push
lea
cmpsl
and
addr16
loopne
je
push
pop
fmulp
in
shl
add
mov
cwtd
sbbl
rcr
jo
add
in
adc
out
pop
xchg
mov
cli
clc
mov
lahf
add
imul
xchg
mov
adc
bound
mov
inc
mov
les
pop
push
inc
jns
fdiv
cmp
pop
add
subl
fisubl
cmp
add
fisubs
fsubl
mov
add
sbb
jmp
das
xor
add
aaa
add
cmp
add
pop
jmp
das
notb
add
mov
lock
fwait
add
jae
movsl
xorl
push
cmp
in
pop
lock
setne
add
lcall
pushf
pop
dec
sub
hlt
and
add
push
add
xchg
sarl
mov
push
or
iret
movb
pop
push
add
inc
testb
out
pop
push
push
incb
fdivrs
icebp
fbld
out
mov
and
sub
lea
packuswb
xchg
sub
jne
pop
loopne
out
add
leave
or
out
aaa
outsb
addps
loop
notl
cmp
jae
sbb
ljmp
scas
std
add
data16
les
cli
test
pop
xchg
jae
lods
dec
push
or
in
push
loope
jl
push
pusha
hlt
hlt
sbb
inc
xchg
pop
add
mov
popa
add
adc
dec
stc
dec
add
mov
add
cmp
ss
fdivrs
sub
sub
xchg
sbb
rcrb
pop
mov
adcb
sbb
movsb
sub
xor
pop
sbb
xchg
jno
cs
fbstp
cli
add
mov
mov
inc
fsubrs
jmp
push
test
pop
sahf
pop
iret
push
push
cmc
xchg
cwtl
mov
mov
inc
jo
in
pop
cwtl
push
and
push
cld
test
stos
add
fisttpll
xor
hlt
pusha
daa
ja
test
addr16
pop
jmp
cwtl
pop
add
mov
mov
addr16
pop
clc
jmp
cmp
inc
stos
lock
xchg
push
xchg
cli
add
fsubr
fildl
test
and
inc
push
ljmp
jge
mov
lock
xor
das
repnz
iret
sbb
clc
fists
insb
add
cmpsl
cli
mov
mov
mov
or
aad
les
xchg
xchg
mov
cmp
pop
sub
vpxor
add
mov
add
pushf
mov
pop
jns
clc
ja
mov
push
add
pop
add
ja
stos
xchg
jle
add
inc
mov
pop
add
lock
fisttpll
sub
fdivl
enter
add
cmp
test
push
popa
clc
pop
xor
movsb
jb
inc
adcb
repz
test
adc
cmp
rol
fadds
leave
and
add
jo
imul
mov
cmp
add
insb
scas
push
jle
stos
add
fcmovnb
jno
sub
adc
rcll
xlat
jecxz
adcb
inc
cmp
cld
call
adc
ljmp
sbb
fadds
test
or
adc
add
sbb
push
push
mov
jbe
sbb
mov
adc
out
jle
add
ret
test
into
mov
jne
cltd
jno
xor
aas
add
enter
fistpll
jmp
loopne
lds
push
setp
or
pusha
push
adc
add
dec
jl
add
ret
icebp
nop
in
pop
pop
xor
andb
mov
add
pop
sbb
dec
pop
sti
jp
xchg
adc
rol
pop
cmp
add
scas
xchg
js
outsb
or
cld
dec
add
sub
shrd
add
pop
shr
int
add
std
sbbl
or
cmp
cld
sbb
in
or
and
push
or
sub
cmp
roll
push
popf
idivl
lea
xchg
add
cmp
dec
pop
gs
test
or
pop
add
fcomi
xor
push
push
xlat
add
rcrl
cmp
push
pop
cmc
mov
add
iret
mov
aaa
xor
mov
adc
mov
or
cld
je
dec
add
rcll
add
add
add
jbe
test
scas
push
ret
insb
nop
mov
inc
sub
adc
jmp
rorb
sbb
cmpsl
sbb
jno
cli
inc
bound
add
enter
add
shlb
les
add
loopne
pop
add
in
js
fimull
es
pop
sbb
cmpsb
inc
add
fs
hlt
adc
mov
jp
add
daa
sbb
or
cmp
enter
mov
push
pop
lret
sub
lret
repz
fucomip
scas
loopne
fldl
inc
mov
les
add
lea
mov
loop
repnz
dec
cmp
lods
decb
int3
test
push
stos
sub
ss
mov
push
add
sahf
loop
adc
xchg
sub
ss
outsl
jmp
scas
dec
pop
and
cli
xor
lret
pop
mov
out
fsubl
and
jge
add
popa
testb
adc
inc
in
dec
or
push
cmp
push
fwait
xor
jne
jae
add
decl
mov
jle
add
test
pushf
add
push
ja
pop
adc
ret
dec
out
push
and
icebp
add
sbb
or
or
insl
or
lcall
divl
cmp
xchg
add
or
divb
adc
aad
and
cmp
jb
daa
add
mov
pop
fldcw
rorb
cwtl
add
stos
outsb
ljmp
or
insl
mov
add
inc
push
mov
adc
mov
jae
mov
push
sahf
xchg
xchg
repz
xchg
mov
mov
addb
ret
subl
sbb
fs
add
add
mov
add
mov
and
sti
jo
lcall
pop
mov
add
sbb
add
jmp
push
outsl
pop
inc
dec
nop
sub
adc
fidivs
scas
js
add
sbb
jle
addb
mov
mov
xlat
mov
clc
and
jnp
adc
xchg
cmp
fldt
mov
pop
jp
addb
outsl
rolb
jge
jle
adc
mov
fwait
scas
jo
repnz
push
gs
jae
mov
mov
push
add
push
sub
pushf
psubsb
int3
mov
cmpsb
mov
loopne
lahf
xchg
nop
arpl
movsl
push
je
add
add
or
sub
adc
cmp
inc
clc
int3
add
enter
sub
add
ljmp
imul
dec
xor
in
aam
pop
roll
cmp
cs
and
repz
shr
jecxz
aam
call
cmp
stc
jnp
aas
test
js
adc
adc
dec
add
test
sub
add
cld
inc
jns
mov
hlt
push
jl
add
push
loopne
lcall
add
pop
stos
orb
add
and
jo
xchg
jae
add
jae
ja
mov
jo
push
out
mov
scas
add
mov
aam
rcrl
addr16
test
xchg
sbb
mov
pop
inc
jecxz
int3
test
xorb
mov
pop
pop
sub
outsb
mov
shrb
add
sub
jecxz
stos
add
cmp
js
insl
inc
data16
sub
cmp
add
loopne
sbb
leave
add
lret
cmpl
bound
fnsave
test
ret
cmp
xchg
inc
pop
mov
dec
cmc
loopne
mov
mov
add
lds
clc
sub
divb
stos
scas
pusha
fistl
rcr
or
fistps
add
inc
sub
imul
mov
mov
xor
je
gs
add
fs
fistps
dec
add
cmp
ja
add
jle
lcall
comiss
gs
add
outsb
cs
inc
add
popf
jmp
dec
xchg
xchg
rolb
movsb
gs
rcrb
fldl
mov
xchg
pop
jno
sub
xchg
pop
push
call
dec
xchg
mov
out
sbb
jnp
aad
add
pop
push
xor
icebp
lods
add
lock
mov
push
add
test
in
jmp
in
and
loop
mov
sub
movsb
mov
ja
add
addb
fwait
sbb
or
push
adc
sub
inc
add
test
mov
movups
jmp
fstpl
add
mov
test
mov
xorl
pop
dec
inc
addb
stos
sti
cmpsb
xor
and
cmp
jge
push
jmp
in
lret
mov
aaa
push
add
fsts
cld
dec
mov
jl
movsb
jnp
orb
add
adc
fdivr
dec
popl
icebp
sub
mov
xchg
adc
add
out
fstl
test
mov
mov
cmp
add
mov
jmp
jl
pop
push
add
dec
xchg
inc
add
add
in
call
gs
push
jle
and
mov
mov
mov
lcall
add
in
xchg
adc
mov
jae
sub
jl
add
scas
ret
dec
lods
and
insl
xor
les
outsb
test
mov
add
movsl
test
cmc
stos
mov
lock
sti
add
outsb
pop
mov
push
mov
push
int
scas
cmpsb
and
daa
ja
rcll
inc
lods
push
lret
fiadds
or
ljmp
int
push
xor
pop
mov
cmp
jnp
add
adc
stos
sbb
in
lock
in
in
add
cs
sbb
add
and
insb
sbb
pop
aas
call
ljmp
repz
add
cli
clc
enter
xor
push
sqrtps
sbbb
pop
lods
ret
add
push
jo
mov
pop
push
mov
add
rcrb
dec
add
or
and
and
mov
cs
lcall
addb
jp
add
sub
iret
adc
mov
add
adc
ljmp
test
subl
cmp
rorb
cwtl
add
rorb
mov
fldl2e
adc
add
mov
inc
jns
leave
mov
movsl
fildl
iret
xor
in
cmc
adc
add
push
lods
cmpsb
add
stos
xchg
out
in
sbb
notl
rcrb
sub
add
loop
xchg
add
xchg
notl
or
sbb
pop
sti
add
mov
add
add
cmp
adc
lock
and
add
push
push
insb
leave
pop
adc
push
test
mov
rcrl
sbb
jecxz
and
out
idivb
adc
cmp
pop
ret
inc
hlt
or
ja
inc
mov
rorl
adc
inc
test
jno
mov
xchg
jbe
rolb
ret
test
mov
jg
inc
xchg
adc
xor
add
lahf
je
cmp
jp
ret
adc
lods
push
mov
push
mov
push
or
and
pop
shrl
lea
cmp
add
cmpsl
mov
ret
add
xor
les
bound
aaa
dec
je
lock
adc
pushf
dec
inc
dec
push
xchg
loope
push
cmpsb
cwtl
std
enter
or
shlb
xchg
stos
dec
mov
add
mov
add
add
gs
test
sub
faddl
ucomiss
add
cmp
popa
insl
jg
lock
shrl
orl
jno,pn
mov
add
or
mov
in
stos
subl
mov
nop
and
push
dec
sbb
mov
push
in
mov
jb
add
add
push
mov
add
scas
jns
xor
mov
stos
xchg
mov
clc
call
add
repnz
in
call
xor
ss
popf
jmp
mov
inc
sbb
add
push
sarb
nop
add
xchg
sbb
sti
inc
imul
add
aam
aaa
add
into
adcl
xor
mov
mov
add
fsts
xor
jbe
xor
push
sbb
ja
ds
jmp
popf
xlat
shrl
int3
icebp
add
lock
flds
fsubs
mov
ret
lock
ficoml
xchg
aaa
add
sbb
movsl
add
gs
mov
push
sahf
test
clc
stos
add
jns
jo
int
mov
test
dec
mov
daa
and
jno
jmp
or
inc
dec
clc
int3
inc
dec
pusha
mov
test
add
clc
scas
sbbl
fimuls
sbb
jae
mov
adc
add
xchg
xor
inc
std
sbb
in
mov
mov
arpl
pusha
dec
jne
and
xor
sti
hlt
xor
jmp
inc
pop
add
jns
xchg
aad
mov
das
add
pop
sub
in
cmp
outsl
pop
and
add
mov
add
mov
mov
iret
pop
xchg
call
add
dec
mov
leave
aaa
or
cwtl
fcomip
cmp
icebp
clc
and
mov
sbb
lods
push
xchg
sbb
add
sub
enter
imul
jp
add
mov
push
add
inc
in
data16
push
hlt
loopne
sbbb
lahf
mov
add
mov
decl
sti
add
pop
aas
sbb
loope
inc
mov
xor
mov
aam
add
arpl
mov
adcl
orb
call
cld
es
xlat
add
fcmovne
loopne
fnstcw
add
cmp
fwait
rcrl
imul
hlt
push
jmp
mov
mov
jecxz
cs
adc
int
jns
sbb
imul
jmp
mov
adc
add
sbb
jp
xchg
add
jmp
inc
add
cli
cmp
push
test
and
in
add
mov
mov
addb
mov
rorb
add
pop
xchg
push
std
stos
push
jecxz
das
into
add
sbb
add
jno
lods
movsb
enter
addl
push
add
add
mov
mov
cs
js
add
stc
sub
and
xor
jns
sbb
clc
das
mov
add
inc
and
in
sti
sub
add
mov
mov
aaa
scas
hlt
cmp
mov
into
and
add
mov
sub
cmp
loop
ds
adc
and
add
xchg
push
cmp
mov
stos
imul
jp
and
cmp
aas
add
ja
insb
add
or
dec
pop
xchg
adc
sbb
add
iret
addr16
add
inc
and
xor
add
scas
int
cltd
je
test
xchg
sub
call
dec
daa
sahf
paddw
mov
push
xlat
in
xchg
mov
xchg
idiv
int
xchg
dec
popf
mov
movsl
sahf
out
or
mov
sub
add
icebp
adc
push
push
shrb
push
adc
add
xchg
in
leave
scas
add
imul
mov
fwait
push
js
mov
ret
add
cmp
mov
psllw
xchg
out
mov
popf
lea
dec
add
lods
sub
repnz
fs
rcll
push
jmp
arpl
mov
shl
in
add
mov
mov
lods
lret
mov
repnz
jp
and
xchg
movsb
int
ds
mov
jbe
fsubs
xchg
add
add
sahf
cmpsl
ds
cs
add
jmp
nop
fwait
lahf
dec
push
incb
dec
mov
add
mov
aaa
shrb
pop
dec
jbe
shlb
paddsw
pop
cmp
adc
push
int
mov
sub
add
jb
mov
ljmp
jp
pop
push
mov
jmp
popf
rorl
lret
ds
mov
lcall
sbb
add
and
cld
pusha
pop
enter
idiv
pushf
jecxz
add
cmp
add
ret
cwtl
movsl
inc
push
cmp
add
or
enter
jg
cmp
add
in
add
in
movb
adc
cli
jno
lds
dec
cmpsb
add
ret
or
sub
add
cmpsl
dec
out
sbb
adc
mov
data16
pusha
adc
cs
in
mov
cmc
test
cmp
mov
xchg
add
add
add
jns
test
daa
add
sbb
sarl
xchg
dec
mov
sub
hlt
lcall
xchg
sbb
xchg
mov
dec
int
call
pop
mov
mov
test
ljmp
insb
xor
push
rorl
xlat
cmp
aaa
or
mov
and
sub
out
add
adc
loop
add
xor
and
into
pop
testl
adc
fdivrs
out
mov
add
mov
inc
add
bound
mov
adc
push
mov
add
add
test
cmp
mov
push
add
pop
jnp
inc
dec
sbb
dec
mov
aad
adcb
mov
loope
lret
in
jle
add
stos
pop
jl
dec
cli
rcrl
inc
enter
jecxz
scas
ss
add
testb
jg
cmp
add
cld
mull
add
mov
imul
xchg
xor
jbe
addl
in
pushf
add
or
dec
into
fmul
add
ret
jmp
sbb
movsl
push
aaa
sbb
or
xor
mov
mov
lds
orb
xlat
out
arpl
mov
add
pop
sbb
int
inc
add
mov
fs
gs
fldl
lcall
cmp
add
loopne
jl
add
sub
cwtl
mov
es
mov
cs
es
popf
pop
std
stc
mov
add
add
lahf
inc
mov
add
shrl
je
fdivr
push
inc
imul
add
jns
sbb
add
pop
or
lds
js
jge
adc
inc
add
repz
push
inc
jbe
fmul
roll
hlt
aas
pop
nop
inc
test
pop
lcall
mov
iret
add
lods
adc
and
sbb
inc
cmp
inc
xchg
call
ror
xchg
mov
jnp
add
mov
dec
movsl
push
push
data16
add
cmpsl
sbb
and
add
add
or
shll
and
out
insl
gs
xor
fists
addr16
add
inc
scas
add
pop
sub
cld
addr16
add
xor
pop
add
push
add
shll
mov
inc
call
xor
add
test
dec
mov
loop
pop
mov
je
mull
add
add
mov
and
add
jl
addb
xchg
incl
dec
outsl
cld
jae
pop
sbb
roll
pushf
add
sbb
into
ret
add
loop
inc
pop
cmp
mov
push
out
scas
pop
adc
add
pushf
ss
mov
jmp
adc
mov
xchg
or
add
adc
lea
xor
add
or
pop
test
pusha
jl
dec
js
clc
xchg
and
add
push
xchg
mov
andb
add
mov
les
seta
jge
pop
into
jnp
add
mov
cwtl
dec
scas
call
loop
add
push
and
ret
add
push
clc
ds
std
mov
cmpsl
fisttps
pop
jnp
push
pop
cmp
push
add
shll
repz
mov
out
lahf
or
mov
out
std
mov
and
add
aad
enter
sub
fistpl
cwtl
add
push
mov
dec
cmp
push
cmp
fisttpl
popa
sahf
loopne
jmp
xchg
pop
add
adc
inc
ljmp
jl
mov
dec
mov
add
mov
lret
add
pop
ljmp
or
dec
and
pop
addl
cld
dec
les
inc
mov
mov
push
out
movsb
and
adc
inc
aad
push
aaa
mov
out
popf
mov
cmp
add
xor
cmp
add
sub
cli
ss
lds
push
add
subl
ljmp
int3
add
mov
repz
jne
fwait
je
push
jl
test
cmp
and
and
outsl
mov
dec
jo
jecxz
jmp
jb
int
cmpsb
mov
or
scas
aad
or
xor
jae
cwtl
insb
and
mov
pop
test
and
fcmovb
jnp
add
out
add
pop
xorl
add
push
mov
xor
and
xor
add
add
mov
sbb
out
loopne
add
inc
scas
test
dec
lret
shr
ret
addb
mov
pop
sbb
addl
sbb
add
pop
scas
lock
stc
fwait
js
add
inc
fisttpl
add
pop
push
jb
inc
fbstp
dec
and
ret
cld
fsubp
add
sti
sbb
imul
negb
sar
out
sub
pop
lcall
adc
pop
vmread
add
pop
adc
or
filds
pop
lods
inc
mov
pop
pop
outsb
clc
iret
dec
push
in
add
xor
movb
aam
ja
mov
xor
adc
repz
dec
dec
aas
inc
push
jne
shl
sbb
add
mov
pushf
xchg
ds
xor
xchg
add
or
rcrb
xchg
in
sarb
mov
lret
sub
add
ss
lea
push
jle
cmp
pop
mov
inc
sub
fstps
dec
mov
inc
andl
in
int3
add
adc
nop
outsb
jo
loope
sahf
mov
add
imul
add
mov
leave
adc
fnstcw
enter
mov
add
adc
je
and
jmp
in
mov
repnz
roll
or
mov
shlb
and
fstpt
jl
jg
adc
fs
mov
dec
push
cmp
cs
mov
icebp
add
nop
in
mov
sbb
std
in
in
call
js
xchg
call
lds
ffreep
sbb
xchg
sbb
jo
add
mov
pop
aad
arpl
loopne
mov
add
or
lahf
clts
aam
lea
mov
mov
xchg
gs
loopne
inc
and
add
cmp
in
push
mov
mov
add
lret
jns
std
add
lea
or
mov
xchg
enter
jecxz
push
mov
add
push
les
sub
dec
jae
ja
or
jge
clc
add
xor
sbb
inc
and
arpl
les
mov
adcb
cmp
push
add
orb
pop
dec
add
incb
pop
add
out
cmpl
das
mov
iret
test
sbb
cmp
mov
mov
mov
mov
cli
push
loop
or
xor
mov
mov
clc
lret
in
roll
aaa
roll
mov
test
dec
add
repz
jg
lods
cltd
mov
inc
rcrl
ds
add
add
popf
dec
iret
dec
ret
jbe
mov
repz
sub
cwtl
ljmp
icebp
clc
data16
push
or
repnz
in
testl
and
ja
ds
jns
cmp
jecxz
enter
insl
xadd
pop
test
jo
nop
adc
add
pop
out
jne
sub
add
mov
pusha
adc
out
push
push
adc
lods
call
fwait
pop
in
pop
ja
and
scas
sub
jmp
rclb
imul
data16
push
repnz
cmpb
roll
stc
add
popf
jge
cmp
pop
andl
mov
mov
imul
xor
sti
icebp
movsb
mov
adc
adc
xchg
and
cltd
das
mov
add
jmp
shl
rcll
xor
test
add
add
dec
cld
mov
pop
push
pop
sub
sbb
pop
fidivrl
cmc
mov
xor
jl
xchg
push
pusha
xchg
add
jno
insl
adcb
add
adc
jp
add
andb
cmc
add
mov
enter
clc
add
rolb
sub
cmp
add
das
jecxz,pt
jae
cltd
add
fsubrl
sbb
inc
mov
xchg
mov
mov
pop
sub
sarl
pop
add
dec
popf
popa
stos
or
sbbb
cmp
mov
jp
cmc
sub
jo
aad
shr
mov
leave
add
xlat
sub
cs
or
pop
add
ficoms
test
push
add
pop
dec
fdivrs
bound
sub
rcrl
xchg
sub
dec
fsubl
adc
lock
xchg
add
fisubs
jmp
add
pop
jg
repz
dec
adc
loopne
dec
and
insl
cmpsb
in
dec
add
mov
shlb
or
loopne
add
or
gs
inc
xchg
dec
sbb
xor
cltd
cmp
divb
loopne
popf
push
sbb
cmc
stos
mov
push
push
int
cs
in
pop
js
es
inc
and
or
cwtl
add
out
sub
pop
jecxz
movsb
jno
inc
popa
aaa
mov
add
shlb
add
push
stos
inc
xchg
adc
pop
out
add
lret
add
jnp
scas
add
fisttpl
mov
xchg
cmpsb
dec
stc
repz
xlat
or
lret
pusha
xchg
add
or
rcll
add
lds
adc
adc
cld
aas
das
stc
push
int
sarl
pusha
dec
inc
mov
lahf
inc
add
xchg
mov
pop
movsb
add
js
mov
add
jno
and
mov
es
dec
ljmp
call
mov
jne
loope
cmp
mov
push
push
mov
jns
xchg
pop
mov
add
data16
lret
or
cltd
cld
pop
and
add
inc
jnp
add
enter
pop
pop
inc
mov
mov
popf
mov
or
add
jl
cmpsl
psubw
fsubs
aam
add
pop
and
dec
out
adc
push
sbb
stos
jo
add
daa
xchg
mov
xchg
out
add
aaa
sbb
out
fnstsw
into
xlat
add
mov
add
addr16
sti
xchg
pop
call
sub
fdiv
add
and
sub
fwait
cmp
inc
adcb
out
cmp
mov
mov
xchg
xor
pop
jno
inc
cmp
je
jns
pop
and
push
test
pop
nop
add
fidivl
push
mov
add
andl
fsubrl
fstl
add
cmc
rcll
daa
movsl
and
jle
push
jne
dec
addb
dec
js
mov
add
fbstp
ljmp
add
clc
pop
scas
add
push
test
or
data16
scas
sbb
sub
add
out
mov
or
ret
sub
in
add
inc
mov
shll
push
iret
popf
and
mov
popa
jg
adc
and
dec
fnstsw
sub
push
lahf
cmp
fisubl
add
and
adc
sbb
and
dec
push
dec
test
inc
addb
lret
clc
nop
pop
rcll
lahf
testb
dec
ret
jnp
lods
cmp
and
ret
add
and
xor
add
je
cmc
push
push
xor
add
movl
add
in
pop
sub
add
lret
sub
aas
inc
cmp
inc
push
mov
call
push
test
mov
xchg
dec
adc
mov
inc
adc
push
dec
push
push
lods
insl
gs
sbb
lret
xlat
mov
lock
dec
cmp
mov
lcall
xor
je
sbb
add
mov
rcrb
loopne
and
dec
adc
ret
add
pop
xchg
jbe
fcoml
ret
cld
inc
mov
mov
mov
add
in
jl
add
inc
jmp
fisttps
jbe
adc
push
repz
cwtl
adc
pop
sbb
mov
shlb
rcrl
adc
sbb
mov
cmp
sti
add
xchg
stc
popa
out
shlb
add
sub
mov
mov
inc
loope
push
add
push
shll
ret
loopne
add
cmp
dec
add
mov
xor
mov
and
push
stos
add
cmp
in
dec
int3
add
imul
test
sub
fcmovnb
out
ficoms
mov
mov
fstl
inc
inc
into
les
and
out
cs
int3
roll
or
leave
adcb
es
cmp
xchg
bound
add
test
mov
iret
in
mov
repnz
jg
fbstp
jecxz
es
dec
sbb
sbb
ficoml
mov
mov
cmp
leave
daa
add
mov
fnstsw
dec
xchg
add
jl
in
add
ret
call
rclb
jp
test
sbb
sub
out
sahf
test
arpl
out
cli
add
int
stos
pop
bound
mov
xchg
or
ja
or
xchg
arpl
into
pop
add
out
cmp
sub
mov
pop
scas
add
lods
andl
rcll
xchg
insb
add
cmp
add
mov
add
add
in
addr16
mov
ds
push
add
outsl
insl
cwtl
adc
jne
icebp
mov
push
add
scas
push
imul
sbb
out
add
loopne
xor
add
movsl
aam
decb
add
and
mov
pop
icebp
les
into
mov
shrb
ja
jle
dec
and
cmp
ret
shl
fsubs
sbb
xor
ret
mov
outsl
clc
add
arpl
mov
or
add
inc
shlb
add
pop
stos
in
shlb
add
and
or
hlt
inc
loopne
add
cmp
pop
add
jl
enter
add
jns
es
int
cmp
ficoms
pusha
add
push
sub
jae,pn
loope
test
add
fidivs
push
daa
lcall
xchg
cwtl
ret
mov
jb
push
xor
xchg
cmpb
jne
cwtl
adc
test
jge
in
stos
add
popa
test
int3
out
les
add
add
pop
ret
lret
out
shlb
stos
fldt
scas
sub
aam
das
lea
mov
rorb
mov
stos
push
or
repnz
lcall
mov
mov
movsb
mov
jmp
iret
test
cs
ljmp
pop
pop
fmull
iret
sbb
mov
rol
mov
add
int
lods
out
addr16
pop
add
mov
movsl
mov
lret
xor
lahf
mov
adc
mov
bound
add
hlt
out
in
dec
jns
sbb
fcoml
adc
add
call
push
nop
arpl
adc
xor
inc
imul
str
test
xchg
pop
mov
add
mov
fnstsw
jbe
stos
aaa
ret
pop
dec
cmp
or
push
mov
jecxz
cmp
inc
add
xchg
and
inc
imulb
les
ljmp
push
mov
fucomip
mov
jno
ja
pop
rolb
cmp
or
pop
or
je
mov
movl
and
dec
inc
f2xm1
cmp
ret
or
add
je
imul
mov
jne
add
lock
in
in
sbb
fcompl
dec
frstor
mov
in
add
sbb
add
sub
fwait
repz
adc
cmp
pop
movsb
mov
push
ror
inc
add
adc
hlt
lahf
ret
jns
cmp
data16
cmp
mov
lock
lds
mov
push
js
into
cwtl
mov
int3
out
or
popf
mov
andb
jae
jns
daa
icebp
and
clc
nop
add
lock
push
cmp
inc
ds
cmp
cli
add
cwtl
je
mov
sub
daa
inc
pusha
dec
inc
adc
add
mov
push
or
dec
std
subb
sbb
sar
add
lods
or
out
dec
cli
add
sarl
mov
inc
repz
pop
jg
aam
add
addr16
and
sbb
adc
push
mov
fwait
and
pushf
outsl
mov
jecxz
iret
dec
add
xorl
add
scas
test
pop
lret
push
pop
icebp
add
mov
sub
stc
add
rcl
lods
dec
xor
ja
pop
lcall
gs
adc
mov
das
sub
faddl
sub
pushf
xor
add
mov
inc
testl
in
pop
add
test
sub
jle
add
mov
scas
and
xor
dec
test
add
sub
stc
mov
aad
cmp
seto
fbld
pop
scas
pop
mov
cmp
leave
aad
in
push
bound
inc
jle
add
inc
fidivl
ja
jmp
cmpsb
add
iret
add
ljmp
add
loopne
test
sbb
add
cltd
loop
sbb
pop
orl
push
mov
stos
pop
add
add
dec
fadd
out
ds
jp
adc
mov
inc
add
mov
pop
push
add
mov
push
pop
cmpsb
jmp
andl
mov
xor
fisubs
sysret
aad
scas
scas
add
add
pop
cmpl
pop
out
das
and
mov
int
pop
push
jo
add
mov
add
stos
push
or
pop
cmc
mov
dec
mov
movsl
filds
push
add
test
cwtl
out
movsb
sahf
sbb
xchg
lret
dec
das
inc
ss
and
sbb
pop
test
add
loopne
jecxz
mov
ja
dec
push
mov
xor
cmp
shlb
jne
iret
push
subb
sub
add
iret
inc
gs
or
popl
or
cwtl
dec
aad
add
jne
push
sub
scas
push
and
and
lret
pop
loope
inc
add
jge
pop
fisubrs
add
cmp
jno
mov
pop
jns
in
negb
sub
ds
cltd
outsl
add
es
push
add
aam
cwtl
adc
notb
std
inc
arpl
push
xor
pop
or
adc
dec
mov
xchg
push
and
std
add
out
cmpsb
sub
add
xlat
dec
cmp
mov
js
sub
mov
add
lock
mov
jp
les
outsb
add
out
add
add
arpl
push
pop
adc
aam
out
mov
inc
enter
iret
mov
negl
cli
icebp
and
xor
add
dec
and
pop
or
jno
add
loopne
inc
repz
add
mov
sub
cmpsb
push
imul
mov
imul
loopne
pusha
jae
jg
xchg
inc
bound
decb
pand
dec
clc
popa
xor
test
add
xchg
push
sub
or
add
sub
cmp
call
mov
scas
pop
mov
dec
add
inc
loop
decb
pusha
push
testb
inc
aam
push
or
add
movsl
fisubl
add
out
xor
orb
push
add
jbe
rorb
cmp
test
aam
add
sub
in
mov
jecxz
cs
mov
testl
lea
adc
and
pop
call
jmp
lods
mov
push
or
xchg
call
jbe
faddl
jp
jne
mov
cmp
int3
loopne
inc
dec
aaa
mov
andl
insl
pop
cmp
cs
add
mov
xor
or
aas
fdivl
out
dec
loop
sbb
push
movsb
adc
fsub
mull
popf
je
repz
jle
ss
cmpsl
sar
xor
lock
cmp
movsb
insl
push
add
out
cld
daa
add
decl
or
notb
xchg
out
jbe
mov
jae
sahf
add
and
insl
das
jb
pop
sbb
in
fisttpll
add
mov
gs
add
dec
arpl
xchg
lock
movsb
mov
xor
jno
pop
xor
xchg
inc
push
and
not
insb
xorl
arpl
or
xor
pop
fsubr
aas
add
push
inc
mov
mov
push
stc
or
inc
adc
mov
jnp
add
std
mov
or
pusha
add
pop
sbb
jl
ret
jle
mov
or
js
add
scas
aas
std
pop
jge
addb
xchg
adc
rcr
ljmp
add
mov
mov
jns
pop
cld
mov
scas
mov
into
in
sub
adc
scas
mov
lret
out
add
sub
add
std
xor
outsl
lret
ljmp
call
mov
out
inc
push
pop
mov
mov
jo
loop
dec
add
nop
sbb
inc
aaa
dec
xor
mov
mov
pop
orb
shl
push
push
cmp
xor
in
add
dec
mov
mov
jb
out
repnz
mov
add
pop
lods
add
inc
pop
loop
sub
int3
dec
adcb
fmull
mov
mov
sub
cmpb
cmp
movsl
mov
lret
or
add
cmpsl
shlb
pop
inc
xorb
lods
ljmp
aam
push
mov
add
sbbl
add
loope
ret
out
nop
or
in
sub
cmc
pop
lret
jmp
cmp
or
mov
jge
mov
fwait
sahf
in
cmp
cld
pop
lock
add
add
loop
jge
js
stc
add
shufps
mov
mov
scas
int
mov
in
and
pop
xor
loop
add
je
mov
add
test
add
fsubrl
cli
add
xor
mov
sahf
scas
push
sub
loopne
sbb
fdivs
cmp
jp
cli
filds
xchg
mov
lret
jnp
add
into
mov
ja
push
pop
es
mov
imul
jmp
add
js
idivb
incl
daa
rcr
daa
clc
fsubs
pop
lcall
pop
add
aas
push
push
in
cmp
add
add
dec
jecxz
in
adc
andl
pop
adc
popf
add
daa
xchg
mov
sbb
gs
inc
sub
enter
jnp
jge
imulb
fdivrs
xlat
dec
out
add
aam
fnstcw
testl
sub
sbb
push
adc
jmp
pusha
aam
cmp
jge
nop
mov
dec
str
xor
add
xor
cmpsl
pop
flds
add
ror
inc
add
push
and
jbe
adc
nop
je
xchg
add
mov
add
xlat
iret
mov
insb
cmp
and
cld
dec
or
add
xchg
notl
int
pop
mov
xor
movsl
or
popa
mov
xor
mov
sti
adc
pop
lock
lea
jecxz
xchg
add
loope
or
js,pn
add
sub
add
xchg
push
lods
dec
ret
shll
cmp
sbb
je
add
in
xor
add
fimull
ret
add
dec
call
int3
adc
arpl
orb
adc
aaa
int3
test
out
dec
cmp
cmpsb
add
sbb
fnstsw
add
mov
daa
dec
pop
add
lods
adc
push
jbe
movb
sahf
adc
incl
fldcw
out
xchg
jmp
aaa
je
sahf
das
pop
mov
in
inc
mov
add
into
cltd
or
add
outsl
push
add
in
pop
outsb
dec
sbb
shll
lret
inc
lods
pop
movsb
dec
pop
add
lds
fiadds
push
je
adc
stos
xchg
add
cltd
cmpsl
in
ss
push
call
or
sbb
inc
into
push
pop
sub
jg
push
shll
push
cmp
mov
cmp
inc
sub
test
and
pop
adc
add
push
xchg
pushf
imul
mov
idivb
ja
xor
xchg
add
fs
sub
jnp
add
stos
jne
bound
xchg
and
dec
gs
aad
add
imul
add
cmp
in
std
cltd
arpl
outsb
insl
sbbl
pop
test
mov
fimuls
push
fcomip
into
xchg
add
mov
insb
sbb
aam
add
mov
and
cmp
add
ret
jmp
inc
repnz
xor
push
pop
add
shlb
push
inc
fwait
sbb
push
jo
add
push
pop
popa
mov
std
lret
rolb
in
push
aam
jnp
xchg
clc
js
jmp
enter
pop
add
inc
mov
dec
js
add
mov
xlat
add
aas
adc
mov
jno
add
ljmp
add
mov
cs
ret
push
sub
fisubrs
fadds
lea
dec
data16
mov
pop
add
mov
xor
sub
fdivrp
mov
sbb
stos
cmp
andl
pop
pop
push
cmp
add
sbb
inc
push
cmpsb
testb
push
mov
fs
shll
sbb
insb
adc
cwtl
je
daa
jo
mov
jae
add
mull
mov
cmpsl
sub
cmp
mov
stos
sub
jnp
jne
add
push
fcomi
push
push
cmpsb
pusha
cmc
mov
mov
je
mov
sbb
or
sub
stos
call
pop
lds
es
cmpsb
out
sub
test
ds
sub
add
or
outsb
mov
mov
cld
pop
mov
stos
inc
push
aas
lock
clc
push
add
jbe
movb
mov
add
icebp
cmp
lahf
mov
shll
mov
jae
pop
mov
test
jnp
add
inc
sub
sub
cltd
add
int3
xor
xlat
int
cmpsb
outsl
faddp
add
or
pop
dec
in
xorb
adc
add
cmp
pop
add
shr
testb
scas
mov
imul
arpl
or
add
daa
sub
shlb
add
push
xchg
sbb
cmpsb
ds
cmc
add
movb
aad
jl
scas
jno
add
cli
dec
mov
push
clc
rorl
push
pop
into
and
incl
filds
sbb
call
cld
dec
sub
xchg
loop
addps
xchg
loopne
xor
jp
add
int
and
lods
js
insb
mov
add
push
sub
dec
dec
mov
adc
add
or
inc
cmp
add
icebp
pushf
rolb
xchg
cmpl
add
lods
jg
lock
pop
jae
jne
xchg
lock
pop
add
hlt
mov
scas
outsb
rol
inc
aam
gs
add
pop
xorb
enter
nop
addb
add
insb
outsl
movsb
mov
hlt
cmp
add
int3
push
add
mov
push
fcomp
inc
add
or
push
jae
in
mov
not
ljmp
repz
pop
sbb
ret
sub
icebp
push
aam
mov
xchg
sub
add
pop
js
adc
lahf
adc
xchg
add
adcl
repnz
and
cmp
testb
add
fs
enter
mov
leave
jge
push
add
out
mov
jae
dec
xchg
add
ret
sub
fs
ficoml
dec
push
add
xchg
mov
fldl
pop
rolb
nop
loop
mov
add
movsl
xlat
loope
fwait
dec
out
add
cld
clc
int
mov
in
and
and
fs
addl
outsl
loopne
and
cmp
cmp
fistpl
push
mov
faddp
and
or
int3
fidivrl
xor
and
and
pop
fucomp
mov
dec
call
add
mov
sub
xor
stos
enter
jp
add
pop
push
daa
push
scas
fiaddl
or
lea
setne
sbbb
or
add
sahf
into
cmpsb
inc
sub
jae
add
xor
in
dec
cmp
cs
add
ret
es
cmp
std
lcall
movsl
cs
adc
mov
das
mov
dec
add
call
mov
lcall
daa
push
cmpsl
movlps
icebp
subb
sbb
sub
fists
xor
mov
loop
jle
cltd
aad
jo
add
jecxz
jno
pop
push
int3
in
insb
xor
sbb
hlt
shl
pop
inc
scas
sbb
inc
mov
pop
test
pop
dec
ljmp
push
pusha
fildl
test
sbb
ja
add
xchg
imul
lcall
scas
fdivrs
and
mov
add
scas
jle
es
loop
add
sbb
dec
imul
push
cmpb
jmp
jo
add
dec
popf
addr16
or
loope
inc
addr16
test
stos
push
mov
jae
outsl
add
idivl
aas
xchg
mov
hlt
mov
in
add
xchg
mov
mov
js
adc
loopne
fsts
cmp
and
cmp
das
add
test
xchg
lds
push
sbb
lret
pop
xor
lods
clc
pminsw
xchg
testb
inc
outsl
cwtl
out
out
cmp
subb
incb
lock
movsl
imul
add
outsl
insb
mov
add
xlat
push
add
mov
mov
shld
or
movl
bound
repz
popa
mov
call
pop
pop
sub
call
or
ja
xchg
push
or
adc
fimuls
out
mov
or
sub
hlt
mov
mov
jl
loopne
cs
sub
add
push
add
out
add
gs
mov
or
jmp
in
or
add
cmp
dec
shrl
add
test
xor
aaa
pop
dec
jle
repz
add
out
int3
mov
and
add
cmp
fldcw
jns
mov
ljmp
sub
xor
test
sub
xor
jnp
jl
push
inc
mov
repnz
test
sub
call
mov
add
lods
addb
lock
mov
ss
es
inc
sbb
jle
sbb
stos
mov
add
xchg
pop
add
popf
sub
adc
xlat
adcl
repnz
add
mov
or
mov
dec
push
cs
outsl
dec
popf
lods
orl
push
sub
aas
subb
out
in
add
fcmovu
xor
addl
cmpsb
imul
add
movb
test
jl
inc
lcall
faddl
imul
push
mov
cmpsb
pop
add
or
pop
mov
add
stos
bound
rcl
adcl
sbb
icebp
xor
mov
pop
lods
leave
pop
inc
xlat
cmpsb
jo
pop
cmp
loop
add
popa
xor
out
ja
dec
pmuludq
arpl
push
call
ljmp
push
cmp
push
xorb
out
imul
jg
mov
mov
stos
add
lret
xor
shll
push
stc
dec
pop
add
adc
sub
add
xchg
mov
mov
psubb
fs
in
enter
icebp
mov
out
adc
push
pop
xor
push
xchg
mov
sbb
mov
xchg
fildl
cmp
dec
movsl
int
aas
add
inc
sub
or
cld
mov
pop
add
je
jb
add
mov
lcall
adcb
cmpsl
nop
and
sbb
mov
fwait
push
dec
pop
loopne
and
loope
hlt
sbb
arpl
testl
add
adc
push
xchg
mov
jae
add
push
or
cmpsl
mov
inc
test
es
xor
or
outsb
inc
adc
ljmp
mov
add
add
iret
std
data16
lock
add
add
jp
dec
cld
movsl
sub
mov
add
lods
orb
sbb
jg
and
inc
es
cli
cmp
mov
loop
dec
cvtpi2ps
testb
cmp
es
xchg
inc
pop
add
fldcw
cmpsl
repz
ffreep
inc
inc
and
mov
decb
ljmp
andl
dec
add
enter
mov
out
sbb
xchg
arpl
jae
xchg
add
dec
xchg
mov
adc
js
cmp
adc
pop
jle
add
push
add
xor
add
repz
add
mov
ss
add
enter
cwtl
cs
call
movsl
pop
cmp
in
cwtl
add
add
cld
addl
jno
jmp
pop
jecxz
push
aad
sti
testl
mov
in
adc
add
sub
or
jo
testl
jbe
pop
icebp
sub
cwtl
aas
int3
sub
aam
popf
add
push
add
xchg
sub
int
lock
popa
jmp
mov
leave
inc
add
dec
stos
add
jmp
and
add
or
xor
test
push
ret
sub
sbb
mov
push
push
jg
loope
jne
cwtl
pop
add
inc
fcomps
add
dec
sub
mov
sub
push
mov
imul
addb
cmova
fs
std
inc
mov
shlb
and
adc
push
hlt
dec
xchg
add
adc
xor
into
mov
cmp
add
fnstenv
push
add
scas
xor
xor
xor
mov
cmp
testb
jmp
fwait
jp
sub
add
roll
push
sbb
in
lret
xchg
pop
test
shll
nop
sbb
addl
scas
adc
jge
add
nop
test
cmp
nop
addb
ret
and
cmp
xor
out
cmp
mov
mov
add
xor
push
int3
push
inc
ljmp
std
pop
out
mov
pop
repz
mov
jecxz
xchg
pop
sti
cmpsb
icebp
jg
xchg
cmp
dec
cmp
push
push
adcl
sti
push
stc
ret
add
mov
aas
push
lea
dec
lcall
nop
hlt
out
add
jle
push
add
add
xlat
cwtl
jo
pop
leave
call
add
cltd
xor
add
insb
pop
ja
sub
andb
xchg
add
or
mov
fiaddl
inc
ljmp
pop
sbb
push
shrb
movsl
cld
pop
add
fldcw
das
add
sbb
cmc
fildll
iret
clc
test
cmp
clc
call
sarl
inc
repnz
add
xchg
add
cmp
mov
cmpsb
pop
outsl
pop
sub
popa
mov
mov
in
add
cltd
pusha
aam
test
or
dec
sar
cld
jg
pop
push
outsl
or
dec
lods
add
xchg
movsb
xor
ret
add
insb
addl
add
push
mov
lock
dec
pop
ds
loopne
enter
dec
push
fimull
aas
add
push
in
xor
lret
dec
das
pop
xchg
push
pop
mov
cwtl
push
xlat
adcl
adc
dec
mov
cli
mov
cwtl
js
fwait
push
add
repz
inc
mov
jp
add
pop
cmp
adc
inc
or
add
out
mov
gs
or
mov
inc
mov
faddl
dec
sahf
fs
ret
add
rcrb
mov
add
ja
jns
adc
das
ss
sub
add
loop
xor
into
jle
stos
hlt
mov
dec
aad
pop
shlb
adc
fidivrl
mov
add
ret
sbb
in
subl
push
mov
cld
sahf
cmp
sub
push
jnp
push
iret
xlat
cmp
mov
pop
sub
ror
hlt
vmulsd
int3
sbb
mov
lahf
xor
dec
inc
add
jbe
rcrb
shll
push
inc
adc
mov
stc
xchg
mov
cmc
cmpsl
push
mov
add
cld
lea
add
scas
pop
cltd
mov
add
lock
dec
sti
shrb
mov
add
jb
movsl
in
add
shll
xor
lods
add
cmp
std
sbb
and
incl
push
xlat
jo
xchg
cwtl
mov
xor
mov
push
mov
pop
leave
outsb
push
stc
inc
inc
call
imul
inc
add
jns
or
ds
add
sbb
add
inc
add
jg
add
outsl
ds
lret
xchg
add
cmpsb
jb
pushf
int
popl
push
sbb
dec
test
add
in
pop
mov
rol
hlt
mov
shlb
xchg
push
js
ficoms
xor
add
sarb
adc
dec
rol
and
sub
and
gs
sub
cmp
ss
neg
sbb
mov
outsb
cmp
add
stos
push
dec
cmp
test
push
mov
lea
into
add
xor
repnz
add
sbb
add
add
addr16
jae
les
push
loopne
add
in
repz
xchg
popf
mov
jnp
mov
cwtl
add
bnd
xchg
push
outsl
add
sbb
lods
cld
ficomps
and
fiaddl
call
adc
push
lods
add
cltd
add
out
add
xchg
and
addr16
call
repnz
cmp
iret
test
lods
clc
inc
call
adc
lods
push
fs
add
mov
push
lock
mov
add
insl
push
cmp
fcomps
loop
lar
mov
mov
mov
add
mov
dec
fst
out
add
or
add
mov
dec
add
and
loope
testl
pop
sub
enter
movl
mov
add
add
dec
adcl
mov
mov
or
or
imul
push
ljmp
in
lahf
pop
sbb
mov
dec
lock
push
push
add
inc
inc
pop
jb
add
inc
sub
and
stc
mov
in
jne
add
dec
je
lret
add
shrb
sar
sahf
xor
and
inc
push
das
pop
add
mov
es
push
fisttps
repz
jo
cltd
insb
aas
mov
fwait
xor
in
cmp
push
leave
add
imul
add
jno
test
or
cmp
gs
pop
jmp
aad
in
mov
or
dec
lods
cwtl
pushf
inc
stos
and
clc
bound
test
xor
cwtl
push
add
add
push
add
flds
push
clc
insl
movsl
aas
mov
add
iret
adc
dec
dec
add
aas
shrl
cmc
sti
add
push
arpl
imul
mov
addb
push
enter
inc
aam
sbb
stos
pop
push
adcb
adc
mov
jne
push
jo
enter
or
add
out
jno
add
xor
mov
jne
sbb
xorl
rorb
or
mov
mov
or
in
cmp
mov
push
ret
add
addb
push
push
leave
inc
mov
clc
push
lret
rorb
cmpsb
and
and
and
gs
add
testb
icebp
cld
fidivs
aaa
pop
pop
roll
jo
xchg
in
add
and
mov
add
inc
leave
cmp
xchg
jge
cld
lock
fwait
add
dec
xchg
mov
ret
mov
ljmp
adc
xor
push
pop
sbb
mov
xor
in
add
dec
push
inc
and
jb
or
repnz
sub
fstpt
out
push
mov
add
into
jne
test
loope
rolb
jl
add
insl
xchg
stos
mov
loopne
xorb
ss
movaps
push
dec
cmp
adc
sbb
add
test
add
xchg
gs
sub
int3
jbe
negl
inc
repnz
xchg
sahf
orb
iret
lods
add
jb
pop
lret
dec
add
out
lahf
fstl
fisubl
add
test
and
cli
fadds
mov
shrb
jmp
lods
add
insl
cmp
add
adcl
icebp
imul
arpl
test
cmc
push
push
insl
cli
xchg
add
cld
ret
test
dec
fnstsw
iret
ljmp
add
lcall
das
push
cmpsl
xchg
inc
into
int
pop
stc
std
test
popa
cwtl
fdiv
inc
mov
add
mov
inc
pop
out
add
movsl
scas
imul
in
sub
push
filds
jo
pop
xchg
mov
add
movsl
pop
mov
insb
js
leave
and
testb
sbb
xchg
inc
fidivs
cmp
add
dec
repnz
test
std
cmc
xchg
leave
pusha
enter
mov
mov
fistpll
sub
icebp
outsl
divb
add
add
verr
cmp
outsl
sbb
fnstsw
sbb
inc
fildl
addb
lcall
xchg
clc
mov
pushf
inc
add
mov
add
dec
cmc
jnp
gs
add
ret
xor
rcl
add
shr
pushw
adc
or
push
pushf
and
xchg
add
int3
ss
adc
sbb
add
mov
clc
add
adc
ficoml
testl
cltd
inc
mov
fstpt
add
stc
pop
pop
and
inc
dec
das
push
movsl
and
dec
cmp
xor
push
and
icebp
pop
loope,pn
js
loopne
cmpsl
pop
and
jl
sub
pop
movsl
dec
dec
shrl
shr
pop
loope
sub
inc
and
sbb
jge
mov
mov
imul
loopne
je
add
cmp
repz
addb
mov
imul
jecxz
mov
in
add
pop
adc
popa
hlt
add
inc
pop
shr
pop
dec
cs
sub
pushf
inc
daa
push
sub
inc
inc
andb
nop
int
cmp
icebp
fwait
int3
movsb
jns
add
jo
mov
out
adc
roll
add
mov
adc
xchg
xor
dec
add
pop
fsub
pop
add
int3
fiadds
add
cmp
pop
adc
add
lds
cs
ss
add
mov
insb
cwtl
or
adc
mov
inc
scas
inc
out
lahf
xor
inc
rorl
push
es
popl
mov
sbb
or
or
movsb
push
inc
cmpsb
lcall
fsubrs
mov
or
sbb
cmp
js
std
jo
adcb
mov
dec
sbb
mov
jle
inc
and
stos
xchg
push
add
sbb
mov
outsl
int
cmp
push
pop
sti
push
adc
fsubr
jmp
jmp
mov
dec
add
cmpsl
dec
out
cmp
add
add
leave
cmp
add
mov
mov
add
out
xor
push
add
sti
cli
repz
daa
mov
call
loope
jns
or
dec
stos
adc
sub
mov
repnz
int3
or
lcall
cld
lret
scas
bound
add
inc
pop
cltd
out
std
add
add
push
daa
insl
inc
mov
lock
mov
add
sbb
ja
xchg
mov
add
dec
loope
jno
cltd
test
push
sbb
loopne
xchg
bound
add
xchg
outsl
or
xor
adcl
outsb
insl
and
iret
scas
inc
add
mov
adc
mov
rclb
pusha
adc
cltd
add
push
addb
and
add
xchg
xchg
and
out
mov
push
pop
es
add
mov
mov
fxch
inc
add
out
clc
btl
xlat
sub
add
aam
call
es
xchg
out
add
mov
mov
cmc
mov
test
stc
pusha
add
dec
loopne
sub
fxch
aas
in
addl
shrb
jns
sbb
adcb
sahf
sbb
bound
lods
push
leave
shll
fwait
shlb
cmp
outsl
or
xchg
sub
fnsave
add
inc
in
or
push
pop
adc
jnp
ret
js
movsb
mov
and
push
fisttpl
fisubrl
dec
xlat
inc
arpl
das
ret
sbb
add
pop
nop
shl
xor
add
les
fmul
dec
jbe
orl
push
leave
in
cmp
push
imul
add
sub
adc
mov
aam
test
sbb
jg
jmp
insb
xor
fadds
adc
rol
call
inc
scas
xor
or
add
sti
xchg
pop
lahf
js
icebp
addr16
subb
insb
push
add
mov
or
mov
add
shrl
mov
mov
mov
rol
add
cld
xor
jnp
add
rorl
cs
loopne
push
imul
cmpsb
jbe
aaa
add
push
mov
sbb
aad
lods
dec
adc
and
in
shll
outsl
jae
movb
adc
dec
or
xor
iret
repnz
sbb
add
pop
mov
push
xchg
js
add
xchg
dec
or
sbb
stc
cmc
jp
add
fimuls
jmp
add
push
mov
add
pop
inc
push
sbb
stos
imul
sarl
hlt
cld
leave
add
cmc
xchg
dec
scas
jne
out
daa
stc
imul
ds
mov
fsub
push
jge
cwtl
cld
imul
into
and
in
lds
add
inc
sub
add
lock
xchg
cmp
sbbb
iret
xchg
fwait
outsl
push
add
inc
mov
popf
out
imul
addr16
loopne
in
add
jg
or
pop
rcrl
ss
cld
push
xlat
jl
add
and
mov
pop
orl
setns
add
fwait
sub
pop
fs
lods
in
add
sahf
sub
idivb
daa
int
mov
pop
fsubrs
pop
pushf
jne
add
imulb
sbb
dec
pop
test
sbb
lock
lret
add
orl
addr16
mov
xchg
add
outsb
cmp
ja
adc
les
shl
inc
jne,pt
loopne
in
aaa
mov
or
add
dec
pop
imul
dec
add
dec
jo
push
mov
inc
add
mov
stos
pop
add
into
mov
xor
js
shll
jae
sbb
testl
inc
jnp
dec
js
add
and
adc
jl
pop
jg
movsb
lahf
and
add
push
out
sbb
test
in
loope
movsb
xchg
inc
mov
movsb
push
addb
cmp
std
jnp
rcrb
movsb
andb
add
scas
xor
sub
sbb
jno
in
dec
neg
loopne
push
xor
daa
and
pop
add
jae
mov
dec
cmp
ja,pt
xor
and
in
rsm
insb
inc
scas
pusha
mov
add
cmp
cmpsl
clc
mov
pop
jnp
xor
mov
ja
cmp
push
andb
lahf
add
out
xchg
push
in
in
shr
inc
push
inc
push
enter
mov
jge
fildl
insb
pop
mov
int3
test
push
dec
jmp
fists
pusha
mov
xchg
xor
mov
pop
ret
arpl
adc
in
add
fcomi
mov
scas
clc
mov
inc
cmp
aas
cmp
push
inc
jecxz
sarb
add
xchg
pop
outsl
inc
lcall
add
xchg
cmp
mov
inc
mov
xchg
mov
sbb
fstps
add
pop
cmp
adc
mov
loopnew
push
sub
push
or
into
add
adcb
add
ficomps
mul
cmp
cltd
dec
push
roll
xchg
scas
iret
roll
xchg
add
jno
lahf
mov
add
adc
add
pop
scas
stc
cmp
add
je
lret
sub
mov
add
add
cwtl
adc
xchg
add
jb
jae
jne
pop
jo
adc
loop
mov
sbb
test
inc
lret
shlb
testl
lds
cld
jge
cmp
jle
cmp
pop
call
hlt
lcall
les
add
stc
outsl
orl
adc
mov
sbb
mov
or
hlt
sti
stos
add
jns
popa
push
leave
sbb
aaa
cmp
jmp
mov
jno
add
sub
out
call
push
add
or
movsl
add
sbb
add
mov
insl
cmp
xor
fnstsw
and
sub
jns
inc
add
xchg
repz
inc
fwait
and
add
sub
adc
nop
fsubl
cld
dec
imul
outsb
sub
movsb
cmp
inc
add
mov
js
ret
lcall
mov
xorb
or
add
fdivs
add
mov
int3
bswap
addl
inc
xor
clc
add
xchg
rolb
push
push
push
lea
and
mov
movsb
insb
jmp
add
pusha
dec
pusha
aam
pop
outsb
decb
dec
cmp
mov
mov
in
push
sub
repnz
jae
insl
dec
sub
add
jmp
cmpsb
mov
add
icebp
push
or
add
push
int3
mov
push
clc
inc
add
add
push
in
pop
add
push
data16
movq
mov
cmpl
out
xchg
sub
add
data16
outsl
movsl
push
push
das
or
jns
sbb
pop
cmpsl
test
dec
clc
push
lds
pop
cmp
mov
nop
pop
ds
cs
test
push
shrl
or
enter
imul
aam
lret
cmp
adc
push
xchg
out
sub
add
pop
add
inc
xchg
adc
mov
mov
addl
decb
int3
hlt
add
and
sbb
shr
dec
push
sbb
dec
push
bound
loopne
stos
lds
fidivs
or
push
push
push
in
rcrb
push
add
cmp
add
add
or
xchg
icebp
addb
rol
add
lret
mov
xor
leave
fisubrs
cmpsl
loop
call
add
outsl
jb
out
adc
orb
add
lds
es
pop
insl
nop
hlt
push
pop
out
inc
cld
loopne
inc
scas
stos
aad
stc
cmpsb
mov
add
xor
mov
stc
add
adc
stos
divb
add
loopne
ja
mov
and
andb
cmp
pop
add
or
mov
or
std
jns
lret
outsb
jp
cs
inc
mov
stos
mov
ret
bound
aaa
pop
jp
cmpsl
add
cmp
and
pop
fistpl
data16
xor
call
mov
lock
add
mov
inc
je
pop
or
sbb
cmpb
ror
or
xchg
nop
xchg
sbb
mov
sbb
push
aad
push
adc
insl
push
adc
jbe
test
jg
dec
xchg
fs
dec
loopne
or
fsqrt
sub
leave
outsb
jmp
loope
jge
cwtl
sahf
inc
inc
dec
arpl
stos
mov
rolb
xchg
push
insl
aam
cwtl
or
jecxz
push
iret
adc
push
lea
stc
jne
cmp
jmp
sbb
jl
add
in
pop
nop
push
rorb
jg
aas
push
add
xchg
lock
sbb
test
cmp
mov
into
pop
mov
sbb
sbb
pop
bound
lret
or
jge
pop
nop
xor
bswap
int
and
dec
outsb
jb
inc
subl
sub
incb
rolb
inc
push
dec
je
adc
loop
insl
jl
or
mov
stos
maskmovq
mov
fnstsw
mov
xchg
test
daa
rorl
add
outsl
add
add
push
ja
dec
sub
repnz
rolb
cltd
out
xor
mov
dec
call
add
push
mov
enter
push
sub
add
pushl
cmp
in
add
pop
pusha
hlt
cld
add
dec
rorb
mov
data16
adcl
sbb
aas
add
jno
cld
xchg
mov
leave
dec
xchg
mov
mov
lock
fildl
xor
addl
jmp
cmp
jnp
push
jae
addr16
xor
jl
pop
in
xor
pop
movsl
push
out
rolb
and
outsb
mov
mov
mov
clc
pop
add
xor
pop
iret
sti
add
add
mov
repnz
fldcw
leave
adc
add
push
popa
cmp
pusha
data16
push
mov
mov
xlat
pop
sub
pop
xchg
add
sub
pop
loopne
mov
loope
shr
inc
add
std
pop
mov
fcoms
insb
dec
add
push
insl
add
fcomi
mov
add
adcl
jl
push
push
ljmp
add
lret
loopne
pop
sub
mov
mov
ds
adc
mov
cli
sbb
aaa
add
xchg
outsb
fisubl
pop
add
xchg
sbb
add
sarl
dec
push
dec
fwait
lahf
hlt
xor
add
les
push
add
scas
jge
icebp
in
mov
jl
std
jg
xor
sub
adc
gs
movb
loopne
mov
cld
sbb
in
sub
adc
loope
pop
shll
mov
add
push
shlb
push
fldl
str
arpl
or
dec
add
mov
in
daa
xchg
adc
mov
push
xor
cmp
push
ss
or
iret
add
stc
dec
call
daa
cmp
ja
out
lods
push
cmp
dec
add
rorl
mov
hlt
lcall
pop
jl
mov
imull
add
jg
repz
xor
mov
inc
xchg
push
jl
push
aad
push
xor
test
sbb
dec
add
mov
call
adc
insb
sub
sbb
je
test
in
bound
add
fistpll
shlb
or
ret
ss
jle
cwtl
and
test
push
leave
aas
push
push
sahf
jo
mov
lret
push
jmp
int
mov
sub
fadds
icebp
sar
ret
xchg
pushf
xchg
inc
dec
mov
add
dec
mov
ja
mov
test
aam
mov
inc
lahf
scas
es
mov
mov
pop
cwtl
clc
add
das
push
cmpl
sbb
mov
data16
add
jb
in
lcall
lahf
add
clc
movsl
mov
cmp
xor
pop
mov
inc
mov
inc
mov
xor
adc
and
add
cmpsb
and
push
imul
and
cld
icebp
out
add
push
mov
add
jne
fsubrs
and
rclb
pop
mov
fisttpll
push
lcall
jnp
jle
jns
clc
sub
adc
mov
sub
add
dec
inc
ret
fmul
mov
sub
loopne
add
fisubrs
cmc
rcrl
and
loope
jb
or
gs
jb
insb
xchg
adcl
mov
filds
adc
clc
jmp
xchg
cs
loopne
es
insl
cld
add
push
sarb
ljmp
or
sub
sarb
je
or
out
mov
std
int3
and
inc
add
scas
jns
add
iret
sub
addr16
shll
ret
loopne
movsb
add
lret
ja
bswap
insl
xor
mov
jo
nop
jbe
add
das
mov
add
ficomps
movd
in
jbe
add
lcall
add
cmp
hlt
ss
test
add
mov
add
push
adc
jmp
jo
cmp
mov
iret
xchg
fnstsw
pushf
ss
mov
fs
mov
push
nop
orb
ljmp
pop
adc
cmp
mov
dec
xor
mov
cmp
push
adc
inc
out
iret
lea
pop
add
sarl
add
and
aas
inc
sbb
pop
push
inc
fisubrs
and
add
loope
xchg
aaa
sub
cmp
mov
add
push
cmp
pop
call
push
pop
push
adc
inc
cli
jl
add
cltd
cmp
ret
jmp
add
and
adc
dec
jmp
dec
rcrl
bound
xor
sub
cwtl
cmpsb
inc
nop
addb
clc
xchg
pop
daa
inc
enter
cltd
outsb
xchg
jo
popa
add
pop
mov
movsb
daa
divb
add
mov
sahf
arpl
mov
sbb
out
push
jnp
push
push
or
rorb
and
cmc
cmp
jp
inc
dec
outsb
pop
cltd
lret
or
xlat
jb
fisttps
add
push
mov
jl
add
adc
cmp
add
fdivrl
ljmp
dec
sbb
cmp
pushf
sub
cmc
sbb
jmp
das
insl
fstl
cld
repz
cmpsb
add
lcall
push
push
pop
push
xor
ds
jecxz
add
rorb
mov
mov
jbe
loopne
mov
in
and
ficompl
push
neg
aaa
cmpsl
mov
push
lock
cli
scas
add
push
ja
pop
movsb
add
in
sub
ret
std
das
adc
icebp
cmpsl
mov
add
dec
xlat
test
and
jp
push
lret
xchg
dec
les
cmp
icebp
rcrb
aas
inc
das
pop
add
test
pusha
sahf
mov
into
aas
jne,pn
push
sub
cmc
add
sbb
decb
pop
jo
adc
mov
add
or
insl
add
scas
mov
loop
outsb
pop
mov
pusha
pop
inc
inc
jmp
shrl
or
pusha
pushf
xorb
filds
mov
popl
xor
mov
mov
xchg
js
sub
jecxz
std
add
sbb
bound
nop
ss
push
mov
js
packuswb
fwait
cmp
loopne
xchg
pusha
lahf
ja
mov
add
cmc
add
js
push
inc
and
and
nop
je
add
js
xchg
cmp
pop
aaa
jne
jae
push
in
scas
repz
pop
jnp
daa
or
mov
mov
jge
jae
repnz
loope
int
clc
test
cmpsb
jp
add
bound
movsb
pop
mov
xchg
imul
add
les
mov
sbb
jae
leave
fisubrl
aaa
add
outsb
or
xor
movlps
daa
mov
fimuls
push
add
daa
insl
out
je
sub
add
push
xchg
mull
aas
scas
add
jle
out
out
std
jo
stos
clc
jo
pop
cmp
mov
inc
inc
loop
mov
mov
imul
jb
add
cmp
or
testb
adc
sbb
loope
jp
jge
outsb
cld
sbb
push
in
loop
jae
out
arpl
popa
ss
jg
adc
pop
add
ret
pop
icebp
mov
outsb
mov
jno
out
lods
sbb
leave
std
jle
add
ror
stos
pop
add
jmp
xchg
loopne
lret
jl
rcrl
cmp
jb
data16
fimuls
sbb
xchg
or
imul
mov
add
mov
fsubrs
cmpsb
push
into
jno
mov
inc
sbb
scas
pop
add
sti
pop
and
mov
mov
rcrb
xchg
popa
push
inc
mov
subb
popa
add
xchg
mov
cmp
add
movsb
cwtl
pop
in
push
sarl
cmpsb
jno,pn
and
mov
push
rolb
sti
add
outsl
out
and
aad
imul
fimull
lret
cmpsl
and
add
jns
jae
je
add
push
sarb
mov
xor
add
lcall
shr
repz
xchg
repnz
add
aad
pop
push
mov
mov
pop
xchg
repz
cmp
test
dec
sahf
add
or
and
pop
insl
pop
push
jmp
xchg
mov
movsb
sbb
in
mov
dec
add
sbb
mov
jle
add
jb
push
mov
and
add
loop
popa
mov
push
push
fcomi
or
in
cmc
lcall
mov
mov
or
out
in
pushf
mov
add
pop
bound
dec
mull
add
cld
and
sub
or
mov
leave
add
or
in
push
out
imul
add
push
sar
mov
out
cmp
add
decl
call
mov
xor
add
pop
loopne
je
add
jecxz
add
inc
lods
stc
xchg
dec
fwait
mov
pop
pop
mov
ret
shll
sub
insb
rolb
add
jmp
pushf
mov
sarb
ret
push
out
jne
test
cmp
rcl
push
ret
pop
xor
inc
xchg
enter
add
mov
cmpb
in
cltd
movntq
add
mov
rorl
inc
xchg
add
adc
pop
adc
imul
push
add
fdivrp
add
add
dec
orb
cwtl
popf
inc
push
pop
or
sbb
lods
mov
test
in
mov
push
arpl
push
add
or
and
xchg
jne
sbb
and
mov
xorl
sahf
pop
sub
mov
add
daa
scas
loope
imul
add
push
mov
cmp
xchg
cmpb
jo
adc
jmp
fmuls
and
arpl
add
out
shlb
sub
sbb
orl
push
jnp
add
and
xchg
lea
lds
pop
jecxz
adc
cmp
dec
flds
sbb
data16
adc
dec
pop
shll
adc
cmp
scas
jl
inc
fdivp
jnp
push
iret
lret
mov
inc
pop
sub
imulb
dec
xchg
xor
in
test
jl
and
cmc
pop
or
dec
cmp
add
push
aam
lahf
sub
movsb
xlat
pop
stos
sti
jecxz
xor
push
test
lret
fmull
mov
stos
inc
fsubrs
stos
sbb
lock
add
mov
leave
xchg
dec
jg
andb
add
ds
mov
xor
lock
addb
push
adc
add
adc
sbb
pop
stc
xchg
xchg
push
imul
inc
int3
das
lret
add
mov
hlt
jmp
shl
ds
scas
repnz
std
out
ret
xor
push
mov
inc
mov
hlt
xchg
sub
push
add
add
inc
sar
sbb
inc
imul
pop
add
adc
shll
cld
add
or
dec
push
xlat
into
jo
cmp
jle
insl
pop
clc
in
mov
js
movsb
push
and
push
hlt
add
adc
jbe
unpckhps
lahf
inc
lods
inc
aas
test
add
nop
or
push
fiaddl
es
loopne
add
adc
cwtl
add
add
push
mov
test
pusha
push
aaa
mov
aas
push
loope
lods
add
fdiv
push
das
add
adc
lret
xor
cmp
and
pop
testl
push
das
mov
add
push
outsb
lock
cmp
ret
push
enter
cmp
pusha
adc
in
ljmp
and
fs
push
sarl
ficompl
les
stos
ss
add
dec
xchg
popa
add
xlat
xor
or
jb
xchg
lods
or
push
roll
xchg
add
dec
xchg
jnp
stos
in
enter
cmp
js
push
jae
lcall
std
hlt
inc
add
scas
les
xor
add
addl
dec
cld
add
sbb
cmc
movl
insb
add
inc
mov
shll
and
adc
fadds
adc
mov
add
hlt
pop
stos
inc
add
in
jg
shll
sbb
hlt
js
and
push
es
jbe
sub
xchg
daa
push
orb
cmpsl
cmovle
movsl
out
or
aam
mov
in
mov
add
sub
outsl
ret
enter
jnp
add
aaa
xchg
cmc
pop
lock
pop
shlb
call
movb
adc
jecxz
cmp
aas
or
mov
jae
inc
rclb
add
pop
push
add
mov
std
in
xor
mov
fiadds
jbe
lret
cs
in
testb
cmp
xchg
inc
add
push
add
lds
out
arpl
xor
lret
fs
add
pop
sbb
add
sub
mov
add
push
sub
aas
add
fscale
stos
push
jecxz
push
arpl
xchg
subb
popf
add
sub
and
inc
add
xor
add
mov
and
leave
add
mov
sbb
fldl
push
mov
cli
lahf
mov
add
cmc
mov
add
xor
je
mov
add
cli
mov
jl
mov
adc
mov
addr16
sbb
or
mov
push
xor
mov
cmpb
or
lret
mov
pop
js
adc
clc
iret
xchg
inc
adcb
or
aaa
push
loop
mov
xchg
cmp
mov
lods
add
scas
fidivl
pop
adc
sbb
and
pop
add
add
cld
push
in
mov
xor
jg
popf
inc
and
push
loopne
call
fprem
or
dec
lods
movsb
call
out
jl
xchg
or
lcall
dec
jecxz
stc
sub
dec
lds
daa
sbb
fs
icebp
cld
movsl
add
mov
mov
add
ret
loop
add
mov
mov
mov
out
rclb
add
dec
sub
push
sub
mov
hlt
xchg
cmp
sub
cmpsl
addr16
fwait
js
adc
add
jl
add
mov
mov
rcrl
cli
xor
mov
nop
rorb
mov
sarb
and
jle
or
iret
ja
popa
or
pusha
jmp
xor
adc
push
add
push
jb
clc
call
mov
insb
cld
dec
rolb
pop
jge
in
mov
cmp
adc
pop
jnp
pop
and
pop
mov
xchg
jl
inc
jno
in
add
cwtl
sub
add
in
fs
cmc
pop
add
cmp
pop
sub
inc
cs
ltr
daa
or
loopne
stc
xor
lcall
dec
or
add
les
and
mov
test
lret
or
loop
subb
add
pop
xchg
jns
fs
pop
cmpsl
movsl
add
cs
nop
jp
mov
pushw
mov
jns
dec
and
ss
jae
pop
mov
roll
add
sbbl
pop
in
xor
sbb
cltd
adc
pop
add
lret
mov
push
shrl
cmpb
out
add
cmpsb
and
mov
test
mov
xorl
mov
push
push
fidivl
fwait
sbb
repz
shrl
add
icebp
sbb
in
xchg
fistps
fistpl
aam
push
xlat
sub
in
inc
push
xchg
jle
lea
cmp
dec
add
push
in
add
cmp
sarb
push
pop
movsl
xor
pop
push
add
fsts
ljmp
lock
add
out
mov
daa
mov
cmp
or
mov
mov
inc
push
add
icebp
sub
inc
and
mov
add
stc
cld
inc
popa
pop
les
pop
mov
movsl
in
lock
mov
cltd
ss
outsb
mov
movsb
adc
js
hlt
fldl
or
je
cs
pop
dec
sub
cmp
adc
addb
insl
pop
add
fsub
imul
int3
js
ja
jl
maxps
mov
fiaddl
mov
dec
add
jg
pusha
pop
js
mov
push
out
jmp
mov
test
push
and
dec
and
shrl
xchg
xchg
jge
push
sbb
add
inc
hlt
sbb
fimuls
in
mov
cmp
adc
aaa
jp
test
fisttps
or
inc
data16
in
lods
add
cmp
xchg
cmovns
inc
mov
mov
sub
or
mov
add
push
pop
dec
xchg
cmp
test
mov
enter
push
xchg
pop
add
push
cltd
mov
fsubrs
rolb
data16
mov
shll
pusha
lods
lcall
dec
add
push
adc
aaa
xchg
sbb
xchg
jle
fimuls
fdivrs
subl
cmp
icebp
fcoml
adc
pop
fwait
push
add
shlb
cli
outsl
inc
xor
xchg
xchg
movsb
or
xor
push
andl
xor
in
out
stos
addr16
jl
loope
cs
stc
lods
aad
rcr
sub
loop
add
jbe
lds
xor
rcl
mov
xchg
pop
pushf
dec
dec
call
sbb
adc
inc
mov
jae
incb
mov
pop
insb
push
add
int
loop
sti
push
ficomps
pusha
adc
add
xchg
add
negl
pusha
mov
loope
sbb
iret
sbb
scas
dec
xchg
cwtl
leave
ja
add
push
mov
cmp
aad
sub
pop
push
mov
mov
xor
pop
out
push
rclb
sbb
xor
sti
loopne
inc
sbb
loopne
add
mov
lahf
pop
ret
dec
cwtl
jg
movsb
jb
cmp
mov
dec
mov
js
mov
cld
sti
dec
pop
and
add
cmpsl
test
cmp
mov
call
sub
jle
cmp
mov
adc
cs
xor
cmpsb
or
pusha
stos
adc
jge
ret
xchg
add
sbb
movsb
sarl
inc
pop
data16
ret
jns
jo
add
jmp
mov
dec
sbbl
outsl
popl
mov
inc
das
cs
shl
add
jg
add
aad
clc
in
add
and
cmpsl
add
jl
inc
dec
out
pop
add
sub
in
neg
fnsave
add
mov
mov
pushf
xor
inc
push
sub
loop
sahf
push
cmpb
dec
pop
add
sub
xchg
test
dec
lret
push
fwait
mov
rcr
les
push
repz
mov
inc
mov
test
cmp
out
jl
lock
mov
pop
inc
add
test
mov
jae
add
pop
mov
fisubs
test
dec
cmp
popl
sbb
inc
xchg
js,pt
add
popa
mov
push
icebp
and
push
outsl
roll
in
je
pop
hlt
sar
lods
outsb
add
sbb
fwait
int3
in
int3
loope
push
sub
call
mov
mov
add
push
cmc
push
sbb
test
jbe
add
xor
pop
cltd
movl
divl
sub
gs
out
mov
inc
xor
rclb
fsts
sub
sbbl
or
dec
mov
pop
stos
jle
and
call
lret
fstp
push
jne
cmc
imul
xchg
add
in
cmp
call
popf
mov
add
jb
icebp
lds
sar
xchg
sub
pop
add
push
xor
adc
mov
add
mov
push
or
mov
mov
rcll
add
cld
ss
pop
test
lret
lcall
inc
roll
outsb
add
lret
adc
scas
out
cmpsb
push
in
or
outsb
cmp
dec
inc
pop
push
jno
add
or
in
jle
add
mov
mov
pop
fdivl
int
loopne
aaa
fidivrl
push
jb
sub
pusha
mov
sub
pop
add
aas
repnz
in
dec
leave
int3
jecxz
call
pop
imul
cmp
sbb
add
or
pop
add
cwtl
clc
rcrb
addr16
push
cmp
lock
mov
aaa
outsl
outsb
jo
or
xor
and
sbb
mov
cmpsb
or
mov
add
jge
lock
in
push
mov
mov
outsb
clc
mov
js
add
int3
jl
ret
je
addl
dec
or
add
cli
and
push
in
add
movsl
leave
pop
rorl
sbb
add
das
in
cmp
fimuls
push
not
add
push
pop
mov
push
adc
add
test
mov
fcmovbe
loope
add
add
mov
in
add
add
sbb
cmc
add
dec
mov
ljmp
push
js
add
lahf
mov
in
aad
fcoml
out
inc
cmp
das
pop
xchg
nop
sahf
loopne
xor
fcomps
sbb
pushf
lcall
adc
and
aaa
jle
adc
add
outsl
inc
mov
std
sub
mov
add
imul
jl
add
or
adc
push
aaa
add
scas
lods
cmp
movsb
ret
adc
mov
cmp
in
int
into
ss
dec
rcl
cli
cmp
and
push
stc
push
mov
xchg
leave
push
fwait
stos
fyl2x
in
mov
xor
mull
les
stos
mov
aaa
lret
repnz
sub
cmp
add
pop
or
jns
fisubrl
scas
adc
out
xor
and
xor
fldt
add
mov
cmp
add
daa
nop
fisubl
mov
incb
negb
pop
sub
xor
mov
add
xchg
mov
push
push
and
sti
pop
xor
mov
int3
pop
gs
add
mov
jne
inc
mov
movsl
mov
ds
cmp
inc
insl
arpl
cltd
push
sub
test
jae
pop
jnp
mov
gs
cmpsb
push
aad
mov
xlat
fs
dec
out
in
add
xor
mulb
inc
in
fwait
push
cmp
jns
adc
or
in
ss
jne
inc
mov
je
xorl
ja
aaa
loope
pop
dec
in
inc
jle
sub
sub
je
addr16
sbb
inc
mov
sbb
xchg
cmp
pop
xorl
adc
cld
add
sub
mov
fisubl
out
and
push
adc
mov
xor
xchg
mov
test
or
jle
mov
arpl
xor
add
jl
add
pop
shrl
or
cmp
aam
add
hlt
pop
lock
lret
add
jmp
inc
add
fbstp
out
pop
fmul
dec
out
add
inc
idivb
jmp
bound
cmpsl
cmp
movl
mov
lcall
add
repnz
lahf
cmp
testl
jmp
fucomp
jb
push
and
adcb
stos
stos
push
sub
mov
jae
pop
test
or
add
rorl
ljmp
push
in
scas
xchg
mov
iret
loopne
adc
in
fmull
cmp
fstpl
leave
addr16
or
add
bound
mov
cmp
push
or
push
out
es
jge
or
lea
xchg
loopne
fiaddl
push
push
in
cmp
hlt
enter
push
cmp
push
or
adc
addr16
sbb
cmpsb
add
lahf
jno
les
mov
lret
mov
test
flds
lods
mov
pop
dec
jg
leave
add
dec
xor
xchg
push
mov
imul
jno
push
add
or
add
dec
mov
add
out
and
loop
les
rol
mov
sbb
in
adc
cmp
add
jns
fiaddl
mov
ds
mov
je
clc
cmp
movsb
out
xchg
cmpsl
lcall
gs
sbb
dec
stos
mov
adc
xchg
mov
es
enter
in
cwtl
add
adc
mov
fidivrl
mov
scas
xchg
xor
testb
mov
or
inc
add
pcmpeqb
adcl
sbb
loopne
leave
nop
jo
add
add
movsb
fisubl
or
mov
add
cmp
pop
sti
movsb
rolb
jmp
insl
aaa
add
stos
lahf
das
add
xchg
push
mov
xor
testb
sbb
add
inc
xchg
and
in
cmp
mov
pop
xchg
jne
adcb
add
in
or
test
addr16
in
sbb
pop
or
in
jo
mov
dec
add
mov
pusha
jp
xchg
adcb
out
xchg
enter
xchg
dec
mov
add
orl
add
scas
daa
aad
test
addb
xor
add
dec
push
inc
jle
add
ficompl
and
push
mov
popf
lods
mov
lea
sbb
leave
add
mov
mov
enter
inc
clc
and
add
scas
add
xlat
je
les
add
pop
fisubl
pop
or
sub
jge
and
lahf
sbb
pop
iret
mov
pop
mov
and
fs
jle
mov
into
adc
dec
lahf
add
mov
mov
jnp
adcl
mov
std
loope
loopne
stc
pop
pop
mov
aaa
xchg
add
inc
pusha
arpl
adc
clc
jo
lret
cmp
xchg
or
mov
add
pop
popf
not
imul
sbb
push
jnp
fs
push
mov
pop
push
mov
or
int3
sub
add
mov
and
aam
add
sbb
add
inc
popf
fs
cmp
mov
out
add
mov
fnstsw
imul
mov
flds
or
mov
add
leave
add
adc
lds
xchg
std
add
mov
cli
and
adc
inc
ret
pusha
or
dec
pop
xchg
push
daa
add
insl
icebp
shll
hlt
testl
xlat
jno
adc
push
rolb
jl
adc
sti
add
sub
lret
jns
pop
nop
pop
mov
xor
orb
add
incl
and
popf
push
test
xor
sub
loopne
sub
or
push
add
add
adc
lret
popa
test
pop
add
xchg
movsl
push
jbe
add
pop
icebp
rolb
gs
xor
arpl
hlt
xchg
ja
add
push
fwait
jbe
mov
add
je
jae
call
add
ja
in
int3
loopne
out
pop
sbb
pop
cmp
mov
or
jg
cmp
in
add
ror
pop
cmpb
fstl
jle
incb
dec
add
cld
daa
cwtl
cmpb
addl
ficomps
into
add
or
adc
or
in
inc
pop
gs
icebp
test
push
filds
es
test
push
add
je
arpl
sub
add
mov
cli
add
or
dec
adc
fbld
dec
sub
dec
pop
es
or
push
subb
jg
add
fwait
push
arpl
loopne
push
add
out
mov
addb
or
out
loope
mov
int3
scas
insb
sub
add
cltd
jno
aam
int
jl
outsl
hlt
push
jmp
dec
cli
inc
dec
add
lcall
aad
or
repz
aas
xor
fildl
jb
adc
add
push
push
cmc
mov
sub
sub
sbb
xchg
or
inc
add
or
add
cmp
pushf
cmp
je
int3
cmpb
shlb
cmpb
pop
bound
popf
pop
and
adc
lret
cmp
sbb
pop
es
inc
xor
test
mov
test
cmp
inc
cmp
nop
add
pop
or
cmp
psrad
das
pop
jl
or
data16
movsl
jo
pusha
insl
push
jle
xchg
daa
jg
pop
add
insb
cmp
mov
cmp
dec
in
add
out
cmp
xchg
repnz
cvtdq2ps
xchg
fisubrl
repz
dec
imull
jb
cmp
or
add
call
aaa
dec
push
outsb
fs
movsb
add
pop
shrl
xor
repnz
rcr
ja
mov
inc
mov
pop
nop
or
lss
jl
test
test
sbb
xor
fcoml
rcrl
sbb
dec
add
cld
movsl
add
dec
cmp
pop
mov
xor
jmp
cmpsl
pop
add
fistl
cmp
or
add
fidivrl
sub
shrl
iret
pusha
add
ret
pop
add
std
push
popa
push
add
add
imul
add
push
enter
dec
or
pushf
or
mov
loop
in
mov
pop
add
arpl
bound
dec
orl
loopne
cmc
add
or
repnz
push
and
scas
jecxz
movsl
imul
arpl
stos
inc
fcomp
fwait
mov
mov
dec
out
mov
mov
xor
add
sbb
imul
add
sysexit
jg
rorb
jnp
push
lret
xchg
add
mov
adc
adc
test
testl
jecxz
mov
add
sbb
scas
sub
sbb
cli
and
test
add
aam
mov
dec
fdivs
xchg
pop
ja
dec
xchg
addb
dec
fwait
sbb
lock
xor
insl
inc
mov
push
add
insb
cs
jb
and
adc
arpl
jp
cmpsl
add
insb
pop
jno
add
adc
es
enter
add
mov
jo
fadds
push
xor
inc
jb
iret
hlt
ret
fmull
cmp
xor
sti
insl
mov
adc
push
and
lds
cmp
xchg
add
repz
rolb
and
and
cmp
add
cltd
insb
enter
cmp
inc
lahf
push
add
not
inc
ud2
mov
xchg
rolb
inc
push
jne
mov
mov
or
pop
ds
add
pop
aad
add
and
push
mov
stos
outsl
ja
fstpt
jl
andb
push
jne
daa
jp
push
mov
push
mov
jnp
adc
push
mov
pop
test
inc
dec
lret
dec
pusha
call
paddusw
jne
int3
movsl
lock
or
ljmp
and
lock
cmc
mov
sub
mov
loope
loopne
pop
pop
roll
daa
stos
addr16
mov
in
jns
call
rorl
aam
lock
mov
dec
jae
add
push
dec
lret
mov
inc
lods
xor
jl
xchg
add
pushf
orb
stc
add
xorb
call
lret
sub
in
roll
or
mov
hlt
orl
mov
imulb
mov
and
xor
int3
push
jo
adc
mov
lock
add
loop
sub
jmp
add
icebp
enter
divps
outsl
stos
pop
mov
inc
das
leave
push
data16
jge
cmp
ds
andb
adc
add
les
lcall
dec
xor
shrl
addb
push
dec
push
loopne
adc
in
sub
aad
xor
mov
aaa
xor
ret
adc
repnz
add
call
jmp
xorl
je
ret
xor
adc
xchg
andl
pop
inc
xor
fs
or
jbe
shlb
test
adc
add
iret
mov
add
rcl
mov
jg
cwtl
roll
pop
or
nop
lret
dec
add
push
or
add
wrmsr
addl
adc
add
repnz
dec
pop
call
js
clc
aad
push
gs
adc
mov
jns
inc
add
movsl
out
mov
add
insb
add
push
add
clc
cmp
xchg
jle
pushf
inc
stos
into
inc
repz
cmpsb
ret
push
out
sbb
js
adcb
mov
cmp
ret
mov
adcl
pushf
pop
icebp
xchg
xchg
fwait
hlt
mov
mov
repz
scas
xchg
out
xor
idiv
adc
lock
es
jno
add
adc
outsb
and
test
inc
sahf
das
jecxz
add
jg
dec
sub
stos
xor
lcall
sarb
hlt
cmp
jbe
pop
jmp
repz
mov
dec
sbb
test
adc
lret
pop
cmpsb
mov
orb
aas
push
and
ficoml
lds
int
add
ljmp
cmp
repnz
push
jmp
icebp
pop
cld
sbb
add
or
or
add
bound
enter
iret
inc
inc
dec
ss
pop
hlt
and
leave
aad
add
mov
divb
adc
mov
adc
inc
jmp
test
add
lret
mov
lcall
cmp
dec
add
jg
mov
jle
adc
cli
push
xchg
cltd
outsb
ljmp
aad
daa
mov
jg
add
jae
dec
enter
add
add
xchg
xor
mov
xchg
add
sti
push
lret
outsb
jnp
xchg
push
hlt
add
stos
sub
sbb
jl
cmp
divb
dec
xor
add
mov
or
xabort
dec
sub
stos
cmp
into
and
hlt
add
fsubl
fisubl
popf
stos
rcrl
decb
jge
ret
lea
sub
mov
daa
out
cmp
sbb
cmp
add
pop
fisubl
add
push
idiv
and
push
cld
adc
inc
inc
dec
dec
or
sbb
jbe
jge
jmp
imul
cmp
add
mov
sbb
dec
lds
clts
stos
and
dec
push
popf
out
clc
jmp
adc
xlat
cmp
dec
and
add
push
movsb
lret
rcr
jnp
inc
push
sarl
fisubrs
rcrb
in
shll
xor
test
mov
out
lods
add
lret
cmp
push
mov
jo
sbbl
mov
pop
jl
cmp
repnz
add
add
das
js
sbb
dec
shlb
mov
inc
push
je
jg
test
push
push
ret
out
mov
cmp
xchg
out
xchg
xor
roll
pop
inc
rorl
adc
push
daa
dec
cs
add
iret
les
sbb
in
scas
popa
int3
add
cmp
mov
xchg
loope
jle
and
js
add
shll
push
out
fcoml
mov
pop
cmp
fidivs
xor
sar
nop
and
xchg
divb
xchg
add
sub
popa
add
arpl
mov
out
addb
push
mov
jbe
add
lret
add
les
clc
inc
xchg
pop
outsb
nop
dec
test
ret
add
lock
ljmp
stos
inc
orb
inc
dec
add
lret
push
push
jns
add
dec
xchg
ds
push
inc
inc
xorb
jge
inc
rcrl
aas
jbe
jne
push
test
iret
pop
add
xchg
lods
jns
add
mov
dec
orps
in
cmp
mov
xchg
cmc
mov
sahf
add
roll
xchg
add
repz
testl
jnp
aas
pusha
mov
ljmp
add
into
cmp
clc
lds
add
push
jp
push
cli
iret
sbbl
dec
or
lahf
sahf
add
cmp
xchg
pushl
sbb
shll
add
addr16
mov
loope
or
mov
repz
add
lea
pop
addr16
roll
pop
and
std
loopne
add
xor
jno
roll
addr16
sbb
das
es
adc
pop
mov
outsb
or
sbb
mov
cwtl
or
inc
jp
add
pop
xor
jmp
lcall
xchg
pop
arpl
dec
and
add
into
stos
jmp
push
lock
pop
imul
std
cltd
mov
jae
inc
rorl
add
inc
outsl
add
or
test
std
aas
aad
add
lret
mov
cwtl
pop
loope
sub
pop
inc
cmc
add
pusha
in
pop
mov
push
pushf
pop
sbb
or
sbb
subb
mov
xchg
adc
sahf
push
mov
cmp
je
mov
mov
rorb
mov
xchg
aad
pop
shlb
xorb
xor
je
adc
fldl
cmp
ficoms
shrb
ja
cs
or
cmpsl
dec
adc
cmc
mov
nop
mov
mov
sahf
ds
add
rolb
push
test
sub
dec
xlat
test
roll
mov
dec
ret
rolb
xor
xchg
pop
cmp
test
repnz
inc
add
lea
sub
rdmsr
insl
mov
jnp
negb
fildll
xchg
push
mov
out
xor
roll
add
adc
xor
test
sbb
add
mov
jne
pop
cli
xchg
dec
push
fimull
fnstsw
clc
xchg
pop
pop
mov
je
pop
lods
fcmovne
add
jl
ljmp
mov
push
xor
mull
dec
xor
pop
sub
xchg
or
adcl
dec
icebp
mov
loope
add
cmp
in
mov
add
fdivrl
add
loope
cmc
gs
xchg
jge
scas
cli
push
adc
adc
add
lock
push
pop
ror
stos
xchg
scas
loope
pop
fnstsw
dec
test
pop
jno
les
fmull
lcall
mov
ss
rcrb
lods
mov
test
or
pop
or
dec
xchg
pop
mov
add
scas
inc
lock
inc
jle
wbinvd
push
rcr
and
sub
mov
sbb
jae
cwtl
jmp
add
adc
xor
xlat
sub
setno
or
mov
aam
call
ja
outsl
add
xchg
adc
add
cmp
mov
pop
ss
cwtl
in
fwait
int3
pop
push
add
dec
push
lock
inc
test
out
add
repnz
jg
call
icebp
mov
pop
pusha
testl
out
inc
arpl
movsl
popl
cmp
in
dec
rcrb
int3
lret
jo
add
sbb
es
shll
insl
les
sbb
ja
pop
loopne
adc
pop
xorl
inc
das
pop
pop
sarb
aaa
lret
and
add
cmp
mov
lea
push
add
loopne
jbe
loopne
jns
cmpsl
cmp
loope
mov
sbb
in
push
punpcklwd
jb
or
lcall
lret
std
cs
nop
sahf
add
pop
sbb
xchg
and
negl
inc
mov
roll
sub
inc
ret
divb
add
in
loopne
add
jl
jle
cmpsl
icebp
filds
mov
aaa
ja
pop
shl
add
or
add
mov
hlt
mov
add
ret
nop
lods
loopne
fdecstp
add
jmp
insb
sub
push
push
sub
mov
imul
push
out
pop
xchg
loop
pushf
rolb
popf
mov
arpl
xchg
and
mov
fwait
and
cmp
clc
rsqrtps
sti
das
mov
push
add
pop
pop
adc
filds
adc
sub
jns
dec
je
outsb
add
lcall
add
or
dec
pop
sbb
sbb
xchg
mov
stc
shlb
dec
inc
ret
push
xchg
enter
push
add
je
cli
push
or
inc
pop
xchg
cmpsl
mov
push
gs
add
scas
sbbb
iret
xchg
push
cwtl
mov
fiaddl
frstor
mov
jg
pop
daa
xlat
pop
pop
je
lods
mov
cmp
rclb
add
cmp
std
roll
movsl
bound
sbb
addr16
add
push
int
xchg
cmc
cmp
sbb
adc
test
aas
adc
push
sub
hlt
pop
fiaddl
push
cmp
test
fidivs
lret
mov
shlb
mov
and
inc
add
call
add
inc
mov
imul
notb
xorb
add
popa
jmp
leave
test
shl
sbb
push
adc
inc
add
ss
dec
addl
inc
cmp
fwait
cmp
out
ficoms
test
popa
xchg
pop
aaa
pop
in
fcoms
pop
push
push
xor
add
jg
aam
sbb
xlat
jns
or
add
mov
call
addr16
in
ja
push
stos
add
leave
cmp
add
test
outsb
xor
je
add
mov
adc
pop
jo
pop
mov
dec
lret
inc
fwait
push
cli
gs
cmp
mov
addr16
lock
xchg
fxch
add
adc
jne
call
dec
push
aaa
mov
sbb
xchg
add
loop
in
dec
jo
add
insb
stc
push
and
cli
xchg
shrb
aaa
or
adc
pop
ja
add
out
push
subb
fnstsw
mov
mov
shrl
inc
movsb
add
fisttps
jge
jns
add
aam
or
movhps
inc
fucom
dec
int3
jge
mov
mov
add
dec
stos
cs
jl
je
rclb
das
cmp
roll
cltd
pop
xor
daa
xchg
mov
test
ljmp
in
pop
std
arpl
jg
add
xlat
pop
inc
loope
add
clc
push
mov
out
add
outsb
cs
jnp
cli
loop
mov
add
and
fdivs
dec
add
xchg
xchg
lahf
add
add
sub
call
add
mov
jne
add
leave
in
icebp
pop
loopne
add
dec
jno
add
in
and
out
add
fwait
out
mov
mov
test
and
add
or
sbb
sbb
add
add
and
xchg
arpl
xchg
fstpt
xlat
xchg
into
xor
mov
inc
push
sbbl
and
sub
add
or
add
push
push
into
push
ret
push
loopne
push
faddl
pop
inc
adc
mov
xchg
adc
insl
add
rol
jge
add
pop
jno
and
insb
mov
loopne
xor
jo
push
ja
lahf
in
xor
mov
dec
ds
clc
mov
repnz
test
and
sbb
pop
fdivl
xchg
add
fidivrl
mov
fldl
dec
add
clc
or
lods
add
stc
std
push
pop
push
aaa
shlb
jns
fnstenv
inc
popa
pop
lahf
xchg
add
les
jno
in
add
cmp
out
add
in
fildl
adc
jmp
js
pusha
cltd
cltd
lret
stc
push
dec
add
iret
lds
jecxz
push
sbb
gs
inc
stos
fiaddl
repz
out
aaa
sahf
jl
add
dec
pop
mov
inc
pop
inc
adc
add
js
mov
icebp
xchg
dec
and
mov
xchg
inc
pop
std
fcompl
das
roll
jp
clc
dec
paddsb
outsl
lret
mov
in
and
enter
xchg
stc
cmp
cmp
pop
mov
adc
sbb
fistpl
sub
cltd
mov
subb
sahf
add
inc
mov
push
pop
test
or
add
inc
ja
add
lock
add
sub
xchg
add
xchg
and
xchg
imul
add
jns
outsb
xchg
pushl
push
mov
adc
aas
dec
adc
sbb
pop
testb
add
adc
push
enter
add
decl
add
loop
sbb
leave
sub
scas
dec
sbb
into
or
or
rcl
push
lods
adc
mov
in
inc
or
mov
ljmp
test
jns
movsb
mov
pop
ret
daa
rcll
test
dec
dec
mov
fsubrp
adc
push
push
mov
nop
in
xchg
add
dec
cmp
faddl
sub
jecxz
mov
add
out
cmp
jp
test
push
lret
pop
shlb
mov
mov
out
test
ljmp
cli
inc
stos
fldl
xchg
cmc
push
xchg
sub
jp
js
ljmp
and
push
add
and
jae
insl
mov
jbe
ja
push
nop
xor
add
mov
jecxz
push
cmpsb
mov
dec
fnsave
mov
pop
or
fimull
add
in
lock
cmp
pop
inc
adc
mov
mov
pop
mov
jno
xlat
add
and
add
loope
sub
out
sbb
cmp
add
dec
cmpsb
ss
cmp
add
sub
leave
pop
fdivrl
add
mov
ljmp
add
and
sbb
push
cwtl
test
shll
mov
movsb
add
cmpsb
cmp
pop
cmovae
mov
scas
loopne
jns
clc
adc
out
push
les
sbb
cmp
shrl
dec
jo,pt
jae
add
loop
sub
cwtl
lcall
shlb
mov
shrl
xchg
add
fstpl
add
das
xchg
xor
jns
add
ret
out
fstpl
sub
jmp
nop
in
and
arpl
adc
loopne
lds
push
or
movsl
and
add
sub
sbb
mov
outsl
pop
add
push
xorb
xor
add
and
rcrb
lods
test
call
add
push
push
int3
jne
add
jg
mov
add
sahf
nop
xor
je
mov
shlb
negl
mov
mov
movsl
jno
add
repnz
ljmp
ret
sbb
add
xchg
jp
jne
sbb
mov
mov
aaa
daa
lahf
add
push
repz
jo
fiaddl
es
mov
loopne
add
cmp
clc
push
aas
pop
add
cmpsl
add
cwtl
push
addr16
arpl
lcall
roll
or
rol
adc
pop
add
adc
push
inc
add
mov
jle
mov
mov
cmc
mov
repz
mov
pop
add
push
and
cmp
cmc
pop
lret
scas
test
nop
addr16
adcb
js
or
jmp
sbb
xor
outsb
xor
inc
popf
dec
add
fidivrl
add
int3
test
add
outsb
pop
push
sbb
sahf
jns
push
loop
cmp
add
jge
cmp
cmpsb
jl
jle
xorb
ret
mov
jo
and
add
jne
shll
add
cli
or
xchg
jne
js
add
xor
adc
pop
popa
mov
cmp
push
or
fidivrl
scas
xchg
sahf
cld
aam
jge
fcoml
fstpl
add
cmp
loop
mov
add
js
ficomps
lds
addb
lds
add
dec
lret
rolb
jge
pop
cmp
popa
xchg
add
inc
int3
or
btcl
sti
arpl
pop
jmp
xor
add
adcb
lock
add
cmp
mov
into
push
push
add
mov
xlat
mov
jne
or
shll
negb
insb
clc
fcomps
nop
add
xchg
pop
cld
jno
ret
add
mov
movb
aas
imul
out
jno
int
lea
sbb
jl
movsb
out
xchg
sbb
and
pop
sub
addr16
add
mov
inc
aaa
mov
sbb
dec
icebp
add
jge
push
sub
add
adc
aam
ret
sub
inc
sbb
das
ljmp
inc
jl
jb
push
cmc
mov
dec
and
add
outsb
dec
or
xchg
jl
mov
push
je
pop
adc
add
mov
loopne
pop
mov
stos
imul
repnz
lods
add
mov
inc
loopne
lret
cld
bound
adc
pop
add
stos
mov
jp
or
or
lea
loope
add
xor
lods
pop
add
add
jo
add
push
push
add
in
sbb
jl
dec
lds
sarl
add
movsb
xor
jl
jge
negb
push
push
and
sbbb
in
stc
scas
add
push
mov
enter
ror
mov
pop
xchg
xor
cmp
ffreep
add
xchg
push
mov
jnp
add
mov
adc
test
add
loope
js
or
add
sbb
jg
ja
fisubs
add
popf
add
jg
stos
inc
or
int
enter
add
xor
roll
add
xchg
push
mov
outsl
cmp
add
and
fwait
test
or
xlat
inc
add
sub
push
sbb
aas
in
jb
pop
push
pop
cmc
out
out
loopne
mov
iret
ljmp
add
jno
sub
add
lds
jo,pn
add
decb
mov
out
fildl
test
add
dec
sub
add
in
add
arpl
sbb
pushf
lret
cmp
and
aad
rcrb
push
add
lea
xor
cltd
int
adc
add
cmpsb
rol
test
and
shl
adc
cmp
lret
jo
adc
cwtl
data16
add
pusha
pop
fdivrs
fs
orl
sbb
pushf
rolb
or
adc
sarb
sbb
cmp
ja
mov
pop
fsubrp
inc
push
addl
mov
inc
and
add
dec
mov
mov
rcrl
cmpsl
push
insl
arpl
mov
adc
sti
cld
cmp
addb
pop
gs
icebp
popf
inc
push
negl
nop
in
push
or
sub
adc
repnz
push
jne
es
aad
add
imul
fdivrl
clc
add
xchg
scas
lock
add
push
jg
in
jle
add
mov
fs
imul
add
sti
addr16
add
push
add
fcomps
jl
iret
add
ret
stos
int3
add
xorl
fwait
cwtl
std
mov
mov
add
addr16
lret
sbb
pop
sub
jg
cld
push
push
adc
add
mov
ja
lcall
xchg
int3
std
jbe
and
movsb
cmpb
cmpsb
lcall
lods
sub
adc
add
popa
cmpsl
cmp
iret
add
in
xchg
pop
dec
imul
out
dec
inc
lods
mov
or
js
push
loop
jae
mov
flds
and
shll
lahf
add
push
loopne
sub
sbb
and
movb
fcoms
loop
and
inc
jnp
xor
inc
mov
call
sbb
mov
xor
test
popa
sub
jo
sub
inc
mov
fimull
add
cmp
sbbl
xchg
cmp
mov
pop
and
daa
add
out
fcmove
push
cmp
inc
add
sub
adc
sub
add
jg
leave
xlat
adc
add
dec
cmp
fimuls
out
fwait
adc
add
out
fisttps
arpl
shl
adc
lods
lahf
xchg
out
ljmp
adc
push
and
mov
cmp
lods
sbb
xor
daa
jg
inc
mov
or
scas
aaa
add
pop
xorb
mov
lcall
add
and
pop
out
fimull
mov
adc
sub
inc
add
and
add
push
or
dec
insb
mov
ret
std
ds
nop
xor
push
sbb
popl
out
push
mov
in
adcl
imul
jp
add
mov
sub
cmp
mov
add
aaa
or
push
mov
subl
jb
lock
xchg
pop
aas
inc
add
inc
jno
lret
pop
add
add
push
add
rol
dec
xchg
pop
testl
je
mov
add
sbb
lods
sbb
les
sahf
fcomi
mov
sbb
ret
mov
jno
jbe
mov
stos
pop
push
shl
aaa
or
aam
addb
gs
std
arpl
insb
ss
fidivs
fcompl
jnp
inc
sbb
add
int
and
aad
gs
sbb
inc
dec
flds
or
rorl
xor
lret
pushf
push
cmp
add
pop
out
add
mov
lods
mov
mov
dec
jno
mov
dec
mov
ljmp
jbe
pop
outsl
outsb
gs
stc
icebp
arpl
testb
loopne
cmpb
imul
dec
jmp
cmp
outsl
sub
jnp
or
push
andb
imul
fdivs
ds
and
sub
xor
data16
jmp
adc
sub
adcl
sub
stos
aaa
add
loopne
lahf
push
stos
call
sti
leave
xor
in
movzwl
sbb
add
gs
mov
add
dec
lods
orb
repz
js,pt
sbb
pop
inc
mov
sub
outsb
cli
movsb
lods
mov
aas
mov
dec
cmp
xlat
js
cwtl
mov
xchg
lods
outsb
loope
add
jp
nop
jge
lock
push
shlb
add
sub
adc
jnp
xchg
jp
faddl
hlt
xchg
mov
mov
das
sbb
mov
es
outsl
jne
loope
popf
add
xor
push
repnz
iret
aam
mov
imul
xor
lcall
pop
mov
pop
sub
call
inc
pop
movsb
into
out
add
pop
cmc
jmp
dec
scas
pop
jno
fisubrl
stos
add
clc
popf
loopne
test
mov
andb
inc
outsl
cmp
or
mov
test
stos
add
xor
sub
add
fucom
pop
xchg
cmp
mov
dec
pop
insb
add
inc
xlat
inc
in
call
jp
repz
xchg
in
inc
daa
fs
imul
push
addr16
nop
adc
arpl
fwait
es
and
jmp
rep
das
bound
pop
testb
mov
mov
and
arpl
cmp
ss
out
pop
sbb
sub
inc
out
dec
incl
xchg
sarl
adc
call
mov
dec
add
inc
push
test
push
pushf
shlb
push
xor
ss
sti
inc
sbb
gs
inc
sbb
add
cmp
dec
add
xor
cld
incb
push
sbbb
lock
pop
add
insb
inc
jns
dec
imul
pop
xchg
jge
stc
push
movsl
sbb
add
jo
mov
add
inc
jae
ljmp
push
xor
and
push
test
inc
and
loop
gs
push
pusha
sbb
int3
incb
ljmp
lahf
loope
je
add
int
dec
dec
xor
mov
inc
jb
and
push
mov
pop
mov
or
loopne
add
pop
ljmp
add
mov
cmp
push
add
sti
nop
inc
xor
fisttps
imull
cmp
loop
adc
sub
adcb
jecxz
fldl
or
mov
into
lods
inc
cli
jecxz
rorb
xchg
mov
bound
xchg
push
pop
add
cmp
xchg
cmp
xchg
gs
mov
add
push
mov
add
cmp
jle
and
inc
add
add
adc
je
jo
add
adc
pop
and
scas
xchg
add
mov
repnz
push
int3
add
pop
adc
pop
jo
add
or
dec
js
int
jmp
push
add
jno
arpl
mov
bound
jne
add
inc
ja
push
mov
add
in
cmp
jp
stc
lcall
xlat
lea
mov
dec
ret
xor
add
stos
rcpps
jp
icebp
add
repnz
mov
in
outsb
scas
add
adc
fldenv
sbb
jg
lds
add
rolb
add
out
or
loopne
add
sti
movsb
je
push
or
shll
repz
add
sbb
outsl
in
push
add
loopne
mov
jmp
jns
add
ret
dec
cmp
aaa
jb
xchg
add
pop
fs
add
int3
inc
adc
or
icebp
lods
sahf
cld
daa
inc
jle
push
sub
outsb
imul
mov
mov
mov
sbbb
sub
ret
outsl
stos
inc
mov
sbb
aad
repz
xor
mov
push
subl
inc
mov
fsubr
add
addb
jg
jge
push
cmp
add
sub
test
roll
cmc
imul
mov
cmp
cmpsb
and
sbb
add
add
scas
or
sbb
add
cli
lahf
pop
loopne
mov
int
loopne
cmpsb
sub
add
mov
roll
jmp
icebp
call
mov
jecxz
psubusb
dec
mov
xor
imul
cmpsb
sub
jne
sub
les
dec
decb
fcoms
fucomp
js
add
js
sub
orb
fidivrl
mov
add
mov
faddl
call
inc
lock
add
and
xor
cld
or
sti
xor
or
adc
pop
add
nop
mov
js
fsub
mov
add
in
adc
hlt
lods
out
punpcklwd
push
add
jle
sarb
inc
pusha
rclb
jmp
fiadds
cmp
fisttpll
hlt
mov
add
pop
mov
lods
adc
dec
jnp
sub
cmp
in
lds
rcrl
jle
int3
fcoml
aas
pop
adc
add
pop
div
add
inc
or
jecxz
roll
mov
sbb
mov
xchg
add
leave
loopne
call
xor
push
adc
daa
jp
sbb
dec
orb
loop
mov
mov
mov
pop
xor
pop
popf
mov
jle
push
add
xorb
cmp
pop
ja
popa
sbb
dec
add
dec
jno
pop
adc
mov
mov
add
insl
cmpsl
inc
adc
cmp
imul
insl
jo
in
orb
add
sub
dec
nop
mov
test
dec
pop
mov
pop
or
push
pop
dec
mov
mov
sub
scas
loop
fistpl
mov
fistps
test
inc
pop
fsubs
cld
push
imul
testb
jbe
cmpsl
aaa
lahf
or
iret
ljmp
daa
mov
push
push
push
or
insl
and
in
add
lcall
inc
pushf
dec
and
pop
fwait
pop
dec
add
jno
rorb
mov
push
pop
push
insb
add
popf
xor
jmp
xlat
mov
add
mov
inc
cmp
stos
mov
or
sbb
out
mov
scas
mov
popf
inc
or
ret
call
dec
or
lods
clc
rclb
add
repz
add
sbb
jg
je
jns
mov
idivb
mov
rclb
sbb
jnp
test
sbb
and
add
out
std
jae
add
fildl
push
pop
mov
inc
inc
insb
pop
add
sub
loop
or
inc
cmp
test
lcall
lahf
jl
pop
jge
inc
xor
cmp
ljmp
cwtl
cli
jg
sbb
pop
adc
add
pop
stos
sbb
shlb
in
dec
dec
mov
add
scas
mov
cli
jnp
xor
pop
push
xchg
das
dec
enter
ss
lods
mov
pop
sbb
mov
ds
pushf
jne
int
mov
pop
lods
push
push
adc
adc
mov
rclb
add
adcb
int3
or
xchg
inc
inc
and
mov
jbe
push
scas
dec
mov
sbb
cs
mov
push
jae
rolb
loopne
sub
add
inc
les
pop
addb
inc
jl
xlat
xor
cld
adc
pop
out
add
adc
pop
pop
add
xor
cmp
jecxz
or
adc
ja
test
cmp
mov
call
add
add
sbb
cmp
add
clc
jle
xchg
shll
sahf
iret
mov
push
sub
iret
add
loopne
adc
test
js
out
loop
add
mov
mov
cltd
dec
lods
rcrl
jno
xchg
lock
int3
leave
sub
add
and
pop
add
fwait
shrd
ss
jb
jbe
out
subb
xor
cmpsb
add
mov
and
sub
outsl
jmp
rcrb
rolb
repz
mov
fiadds
es
scas
push
mov
push
enter
jno
jge
cmp
add
cmp
fadd
loopne
cld
bound
pushf
leave
push
shlb
sbb
fst
and
sbb
mov
or
add
dec
mov
pop
push
iret
out
inc
mov
mov
repnz
subl
stos
cmp
push
or
or
lret
add
mov
loop
int3
cmp
inc
add
or
sbb
sub
add
or
add
xchg
xchg
jle
cli
inc
inc
mov
jmp
mov
add
mov
mov
mov
push
mov
inc
cld
mov
sbb
fiaddl
mov
cwtl
data16
push
add
ret
cmpsb
push
sbb
mov
lock
add
mov
inc
adc
cmp
in
mov
push
and
repnz
cld
add
int3
pop
ret
in
jge
pop
jno
mov
cmp
add
or
out
jmp
jb
push
add
fdivrl
jecxz
cli
push
adc
and
add
cmpsb
pop
add
lods
insl
inc
or
and
jno
cld
sbb
rorb
dec
arpl
jne
in
jnp
loopne
aas
xchg
ror
pusha
add
jno
inc
xlat
xchg
flds
mov
repnz
inc
xchg
add
adc
add
jp
cmp
popa
add
xor
mov
aad
push
in
clc
xchg
add
lcall
add
jnp
loopne
mov
add
pushf
mov
pop
xchg
scas
xlat
dec
inc
add
mov
nop
lods
pop
xor
sub
out
ds
movsb
fildll
aam
push
rcll
lock
inc
add
sbb
rcrb
or
and
add
xor
sbb
cmp
mov
pop
outsl
mov
add
out
xchg
push
push
and
negl
loopne
inc
inc
add
data16
gs
mov
test
dec
sub
jo
stos
insb
xor
dec
int3
cwtl
mov
mov
pop
add
aam
lret
mov
test
lea
add
test
shlb
or
jne
inc
call
lahf
loopne
add
add
mov
aas
les
jl
jno
add
iret
inc
repnz
sub
add
into
cmovne
xchg
pop
pop
mov
jge
mov
ja
cmp
push
out
sub
imul
xchg
fsubs
add
cmp
adc
xor
add
or
and
add
cmp
jae
push
pop
negl
pushf
mov
mov
add
inc
ror
add
fistpll
push
mov
cltd
add
dec
mov
xorl
xchg
sub
inc
push
pop
jecxz
into
fimuls
testb
inc
lods
add
jne
cmp
jns
xchg
or
mov
cli
add
mov
sub
out
ja
ret
mov
cs
fstpt
ds
add
xor
imul
xlat
popa
loope
stc
clc
push
add
pop
leave
xchg
scas
adc
mov
into
sbb
aas
cltd
lock
adc
sub
test
clc
sti
mov
daa
fs
push
and
pusha
sub
push
lds
xor
pusha
sbb
in
add
out
in
cmc
fsubs
xchg
add
divl
int
mov
pop
fcomps
adc
cmc
aas
xchg
dec
add
loop
sub
mov
in
pop
dec
add
dec
xchg
rcr
dec
fcom
add
rorb
in
mov
js
testb
daa
aam
add
push
pop
fldl
sahf
push
popf
jo
xor
sti
je
add
lds
iret
imul
push
fidivrl
xchg
push
fldt
sahf
add
and
sti
movsb
ja
add
jg
pop
mov
inc
cli
mov
dec
rclb
iret
cmp
add
test
pushf
push
pop
pop
test
add
inc
adc
pop
sarl
test
lret
add
jecxz
out
pusha
and
sub
add
clc
mov
inc
add
repz
lahf
jge
or
add
addr16
mov
add
fnstsw
out
sbb
lcall
iret
or
add
cmp
repnz
lock
aas
inc
xchg
loopne
add
cltd
xchg
and
into
add
sub
cs
lds
mov
js
add
push
pop
fdivrl
les
xchg
sar
fwait
das
pop
mov
cmp
cmc
add
ffree
loop
mov
jnp
dec
mov
hlt
pop
jbe
add
bound
ds
inc
jb
mov
cld
inc
cmp
aas
and
and
cmp
jg
jae
sbb
enter
stc
test
cld
out
ds
sbb
rcrb
loopne
add
sbb
push
jnp
cltd
dec
add
popf
xor
pushf
loope
add
leave
lods
movsb
lods
sbb
pop
hlt
push
add
xchg
pop
fdivrs
pop
lods
lret
pop
dec
iret
pop
mov
mov
sub
add
cmc
in
nop
popf
imul
outsl
inc
pop
jb
add
lret
pop
pop
mov
fists
jae
pop
add
repnz
push
pop
sti
xchg
add
sbb
adc
jns
add
fists
jmp
add
ret
xchg
xor
mov
in
xor
fnsave
add
mov
jnp
sarb
cwtl
inc
push
adc
clc
and
pop
cmc
xlat
push
loopne
out
xor
jbe
adcl
and
xchg
loope
stos
mov
mov
in
add
bound
jl
xchg
push
mov
or
pusha
cmp
pop
add
sub
cmpsl
stos
in
jl
lock
sbb
mov
dec
xchg
pop
add
and
mov
movsl
dec
sub
shll
filds
xchg
mov
push
xor
cmpb
and
or
loop
push
out
sti
lea
add
cmp
cmp
fnstsw
sub
mov
insb
and
ss
jnp
cltd
aaa
cmpsl
add
orb
popa
mov
xor
sub
jp
in
add
fsubp
push
sbb
fists
pusha
sarb
sbb
add
jp
add
imul
dec
fs
ljmp
add
xor
hlt
test
or
push
sbb
roll
decl
fs
out
jns
std
mov
test
add
mov
cmp
lock
mov
xor
add
jecxz
imul
loopne
sbb
cmp
dec
lock
orb
popf
jge
jae
ds
movsl
sub
add
xor
sub
push
das
add
mov
test
add
jb
cmc
xor
repz
or
add
dec
cmc
aas
pushf
dec
pushf
adc
xchg
inc
mov
insl
add
rorl
adc
cli
fsubrs
in
shl
jae
add
clc
adc
sbb
dec
pop
movsl
jbe
shr
and
shll
mov
mov
pop
repz
pop
mov
fidivl
add
xchg
ja
cmp
movsl
cmc
test
jl
iret
sbb
out
sbb
das
ljmp
inc
push
scas
lds
jno
mov
inc
mov
insb
xchg
mov
mov
xchg
jo
add
leave
icebp
iret
lret
mov
xchg
pop
add
fwait
dec
add
dec
sti
nop
jbe
adc
or
pop
fidivs
add
pop
cmpb
or
aaa
push
ret
repz
into
adc
lods
sarb
pop
insb
adcb
jge
shll
test
xchg
add
ja
jg
in
lret
mov
loope
sar
ds
mov
add
jg
push
out
sbb
xor
das
cmp
add
pop
lds
fdivrs
mov
push
pop
testl
cmpsb
not
push
and
mov
iret
fcompl
add
mov
add
popl
adc
push
lock
mov
mov
fdivr
dec
add
add
imul
xor
mov
in
lods
inc
add
mov
sbb
push
inc
push
pop
jl
arpl
or
add
add
ds
mov
add
cli
lahf
add
int
push
popa
xchg
out
pop
sbb
sub
clc
lret
aaa
out
in
xor
leave
pop
je
push
xor
repnz
cmpsl
mov
push
lds
jl
or
add
pop
inc
fildll
fidivrl
das
pop
sub
mov
aam
lret
add
dec
xor
arpl
add
sub
stos
fildll
and
add
mov
int
leave
lods
add
adc
cld
jge
fiaddl
mov
xor
cwtl
testb
aad
jg
das
jl
add
xlat
xchg
and
pop
jne
push
outsb
cmp
mov
shrb
insl
adc
ret
arpl
jo
jno
add
scas
pop
mov
or
sbb
xor
add
cld
in
or
lahf
data16
mov
mov
sbbb
adc
sbb
mov
mov
es
sub
pop
jb
andps
dec
pop
dec
mull
dec
out
shr
lods
jbe
sub
pop
mov
aas
and
mov
cmpb
lds
cmp
mov
sub
popl
adc
fdivrl
js
cmp
arpl
std
je
add
or
push
add
jle
mov
push
bound
repnz
inc
or
ret
add
jmp
js
pop
sbb
movsl
test
push
outsl
add
xorb
add
popa
ljmp
xchg
dec
ror
mov
repz
das
push
mov
mov
inc
add
shr
jmp
orb
out
fdivs
int3
fucomip
loop
xchg
stos
sbb
push
dec
add
mov
ds
cmp
sub
into
xor
lods
jo
sbb
int
jns
addb
lea
aas
cwtl
fbld
mov
in
adc
xor
mov
push
les
fisttpll
ret
mov
push
push
jno
testl
movsb
fadds
mov
or
add
stc
inc
cmpsb
push
push
addb
imulb
xchg
pop
int3
mov
ss
or
repnz
jae
xor
dec
ljmp
addr16
and
sub
aad
mov
ror
inc
dec
jnp
jae
mov
scas
inc
in
pop
push
or
in
inc
or
aas
cmp
xchg
setge
cmp
add
cmp
aam
sub
mov
js
cmp
push
add
mov
sbb
mov
inc
test
add
in
jae
dec
adc
add
lods
fwait
out
clc
xchg
or
lea
pop
dec
adc
mov
or
inc
push
std
or
leave
enter
adc
add
cmpb
aam
rolb
inc
xlat
sbb
mov
daa
pop
ljmp
into
add
add
cmpsb
pop
jbe
xchg
orb
bound
fwait
add
xor
add
lcall
in
lock
dec
sbb
loop
sbb
jle
or
sub
add
mov
add
insl
push
push
sbb
cli
add
jl
mov
adc
adc
fnstcw
add
cmpl
sbb
add
sbb
fsub
or
add
jns
lock
mov
pop
xor
mov
in
ljmp
or
inc
daa
test
fisubrs
out
jnp
sub
inc
mov
sbb
sub
add
ja
leave
in
add
shl
jmp
cmpsl
addr16
mov
inc
scas
ja
mov
add
movb
mov
jno
das
mov
jae
jle
jb
roll
dec
les
or
pop
das
push
add
cs
pop
loope
jl
push
push
test
mov
add
icebp
ja
jl
add
adc
xlat
add
int3
lahf
in
sub
mov
and
dec
dec
repnz
dec
xchg
push
pop
pop
or
cmp
jecxz
hlt
add
push
adc
add
or
sahf
mov
dec
cmp
jecxz
jl
fs
lcall
add
aam
je
popa
cmc
add
rclb
negl
inc
xchg
cmpsl
pusha
mov
add
dec
fistpll
inc
push
sahf
std
hlt
dec
mov
test
xor
add
sbb
mov
jo
ret
in
lods
push
add
inc
jbe
jns
sbb
cmp
aam
mov
out
cmc
pop
or
add
inc
push
fsubr
fwait
lock
mov
dec
std
fimuls
pop
iret
sbb
add
pop
enter
in
push
mov
add
icebp
xchg
xor
fimuls
sahf
add
lock
in
popf
add
xor
pop
jg
fstpt
leave
ljmp
adc
les
cltd
call
mov
mov
lods
jecxz
pusha
pop
mov
mov
outsl
testl
out
mov
add
lret
data16
xchg
stc
addb
jne
adc
in
mov
add
inc
inc
sti
pop
outsl
call
cmp
movsb
mov
lock
pop
and
cwtl
stos
iret
push
loopne
add
xchg
sub
push
add
test
out
xor
imul
es
sbbl
add
and
je
daa
int
add
push
mov
dec
add
aad
mov
and
xor
xlat
clc
add
mov
testb
sbb
fiaddl
sub
xchg
push
add
sub
cltd
std
pop
call
mov
cmpsb
sub
pop
lret
add
js
fcoms
jne
inc
arpl
lds
or
imul
dec
push
mov
das
shl
std
mov
test
fwait
in
sarb
mov
mov
xlat
sub
add
in
popa
push
ret
add
mov
aas
mov
popa
in
imul
sub
ljmp
fnstcw
sbb
aad
faddl
pop
jb
gs
xor
cmp
fildl
das
adc
cmpsb
enter
pop
add
loopne
xlat
sahf
push
mov
mov
push
or
sub
push
lods
popf
add
xor
add
bound
leave
add
lock
push
lcall
hlt
xor
jns
ja
add
pusha
lods
outsb
sbb
xchg
jae
clc
jle
jne
mov
and
push
jge
hlt
mov
jp
cmp
add
fwait
push
into
outsb
adc
add
xor
add
push
add
in
pop
mov
pop
movsl
add
mov
sbbb
mov
add
xor
pop
cmp
xlat
pop
pop
mov
add
test
jnp
test
sete
popf
adc
clc
xchg
mov
add
sub
repnz
call
out
xor
insl
daa
push
jns
pop
stc
sub
das
lret
dec
mov
and
lret
loope
repz
add
les
add
jp
mov
add
cld
sub
xor
xor
jl
push
jne
jbe
mov
into
cmpsb
addb
imul
or
lret
sbb
xor
add
aad
sub
mov
dec
mov
add
or
add
add
mov
jl
mov
add
jns
xchg
inc
cli
clc
sbb
outsl
cmp
cmpb
dec
add
dec
daa
addr16
lea
xchg
sbb
add
lock
iret
cmpsl
lock
testl
int
shl
cmp
jo
nop
add
jo
jnp
inc
ja
push
mov
cli
out
cli
nop
pop
xor
movsl
jl
push
scas
pop
addl
orb
lods
add
or
lcall
inc
ljmp
cmpsb
add
or
jg
movsb
into
dec
add
imul
add
sti
lds
and
jp
pop
and
sub
xchg
and
add
dec
stos
aaa
lock
and
or
sub
pop
xchg
aad
andb
add
lods
xchg
pushf
add
xor
push
repz
shll
int3
sbb
inc
adc
fneni(8087
ljmp
add
pop
cmp
pop
movlps
mov
push
daa
add
repnz
jae
rclb
add
cmp
dec
lock
mov
jmp
roll
add
sbb
out
push
nop
roll
and
in
ret
inc
roll
repz
cli
sub
xchg
test
adcl
mov
sbb
mov
in
aas
pushf
jp
add
dec
push
cwtl
movsl
sbb
jle
add
cld
or
sar
sbb
testb
icebp
aam
les
stos
shll
fldl
nop
mov
pusha
cmp
notl
stos
adc
sub
add
push
repnz
adc
roll
xorb
push
adc
xchg
mov
sti
add
int3
aas
add
jp
inc
int
iret
add
cmpsb
xor
fimull
inc
add
int3
sbb
cmpsl
inc
add
fbstp
pop
or
in
pop
xorb
mov
mov
aam
in
add
and
add
lcall
mov
lret
leave
je
clc
dec
cmp
jno
add
mov
fucomi
dec
xor
jle
imul
dec
jnp
adc
cli
pusha
dec
sub
fiaddl
mov
dec
inc
push
jno
ret
loop
inc
fdivrs
push
ficompl
mov
and
inc
sbb
pop
sahf
mov
add
mov
lea
mov
dec
add
mov
test
cmp
cmp
xchg
adc
mov
inc
rorb
enter
xor
add
andb
pop
and
aas
cmpsl
popa
test
or
scas
movsb
mov
andl
sar
mov
and
add
aad
pushl
add
and
add
dec
cmp
xchg
fildl
movsl
pop
stos
jnp
push
leave
push
add
insb
out
mov
popf
in
adc
and
add
cli
xor
loop
add
filds
cmp
cmp
add
nop
test
push
jns
push
loopne
sti
pop
bound
dec
popf
pop
clc
shlb
adcb
and
hlt
or
sub
add
xor
pop
or
stc
xor
in
sbb
or
into
or
int
dec
add
mov
fldl
test
ds
ljmp
cmp
inc
jnp
jbe
add
movb
addb
add
push
sti
jp
lea
les
jg
pushf
dec
das
jne
loopne
pop
mov
sub
adc
cmp
or
std
mov
jne
add
test
mov
je
cmp
in
scas
add
leave
cwtl
add
push
pop
int
repz
div
push
out
pandn
sbb
jge
sbb
pop
ds
rcr
aas
add
call
xlat
clc
sbb
add
inc
cltd
add
sub
rcrl
cmp
push
add
xchg
jne
mov
loope
test
popf
dec
ja
pop
sbb
mov
adc
inc
ret
add
fbld
pop
and
inc
inc
test
dec
add
out
cmc
push
pop
xor
in
add
xlat
sbb
rolb
out
add
mov
add
jb
mov
mov
mov
outsb
popa
pusha
add
inc
mov
mov
cltd
add
rcll
outsl
inc
repnz
add
push
cmp
scas
add
inc
out
mov
jle
inc
testb
lods
imul
jnp
add
pop
mov
jo
dec
add
mov
push
cld
pusha
sub
inc
loopne
push
lret
in
aad
add
fadds
and
xchg
mov
mov
mov
sbb
cld
movsl
lea
push
dec
inc
test
pop
xchg
add
inc
push
jne
test
sub
jp
xchg
lds
mov
andl
icebp
mov
push
fiadds
inc
pop
loop
dec
sarb
cltd
add
addb
in
nop
push
inc
add
sub
int
int3
ds
add
jmp
rolb
dec
cli
mov
ljmp
push
loop
xor
inc
or
ret
mov
jbe
inc
add
and
pop
mov
loopne
in
shlb
dec
mov
cwtl
outsb
add
sbb
push
fs
sti
pop
or
repz
adc
mov
xor
lret
or
jge
jbe
aas
test
aaa
add
mov
arpl
popf
addl
sbb
cmp
iret
lcall
lret
xchg
add
xchg
clc
repz
dec
adc
add
mov
add
aas
mov
mov
add
jo
cwtl
jg
add
xchg
push
mov
mov
inc
lods
mov
popf
add
ficomps
mov
adc
call
fdivp
or
pop
dec
dec
add
sub
push
addl
mov
inc
mov
lock
dec
dec
nop
aas
add
cmpb
shrl
adc
pop
jle
shrb
inc
mov
add
pop
dec
leave
cld
mov
push
push
pop
mov
push
adc
xchg
pop
lods
add
cmp
inc
fcom
sub
add
push
lods
movsb
aas
rcr
add
mov
test
hlt
lret
xor
pop
pop
cmp
rol
cmpsb
sub
add
jae
popa
sbb
dec
jp
or
stc
lcall
iret
add
fildl
add
pop
jbe
add
and
add
push
mov
push
pop
icebp
aaa
in
adc
xchg
dec
mov
add
dec
icebp
mov
int3
dec
xor
fwait
xor
in
mov
cmp
sbb
call
fwait
mov
enter
jle
add
sub
mov
imul
cmpsl
and
je
cmp
jns
ljmp
mov
xchg
xlat
imul
loopne
cmc
pop
add
add
cmpsl
in
add
adc
or
xchg
mov
or
pop
inc
add
sarb
insl
add
fists
push
cmc
inc
dec
fs
lods
imul
adcb
je
call
pop
pop
cld
in
jecxz
repnz
bound
fisubs
jmp
popf
nop
test
jp
mov
mov
int3
adc
loopne
jge
jp
add
ret
add
test
jo
mov
fwait
scas
clc
fnstenv
test
inc
mov
add
into
add
dec
fbstp
dec
jle
testl
mov
sub
jbe
loop
jo
in
gs
xchg
leave
mov
jbe
jle
imul
es
in
pop
out
into
inc
popa
cmp
mov
jae
xchg
mov
add
js
adc
movsl
aaa
cmp
jo
ret
xor
roll
mov
xchg
test
add
les
rol
cwtl
add
add
sub
mov
ret
mov
mov
dec
push
enter
arpl
adc
pop
mov
movsl
ret
rcl
pop
mov
dec
xchg
xor
add
jbe
jge
sar
cmp
test
icebp
iret
movsb
add
mov
add
push
into
mov
ljmp
pop
pushf
push
enter
push
cmp
aaa
mov
xchg
sub
push
jmp
xchg
or
repnz
add
sbb
loopne
pusha
aaa
adc
arpl
mov
negb
rcrl
mov
xor
add
xlat
in
and
rorb
add
mov
inc
add
idiv
jbe
cmc
jne
add
dec
push
loop
add
cmpsb
xchg
in
or
mov
enter
add
mov
loope
add
jg
movsl
push
cs
mov
push
and
enter
loop
pop
incb
push
mov
jno
inc
add
inc
push
sub
lahf
ljmp
add
xlat
adc
pop
push
inc
stos
cmpsl
mov
inc
mov
add
xor
dec
pop
push
xor
dec
mov
add
mov
fidivrl
and
lock
clc
imul
jge
xchg
ljmp
fwait
jae
fstl
call
lret
jl
mov
lds
out
push
loop
jnp
mov
cli
pop
test
push
sbb
outsl
mov
gs
rolb
jno
jg
push
xor
stos
mov
jl
jmp
add
popa
and
adc
pop
icebp
loope
jge
loope
pushf
in
roll
lahf
push
outsb
or
data16
mov
mov
lcall
les
scas
sub
pop
mov
push
or
lods
add
in
out
mov
add
push
xor
adc
add
add
add
mov
push
ss
daa
add
pop
movsb
aad
sti
inc
fadds
jne
shlb
and
call
jo
add
out
mov
cmp
add
inc
movsl
pop
insl
scas
sbb
push
sbb
ljmp
mov
mov
add
mov
std
rcr
pop
add
rcrl
adc
xchg
push
jmp
dec
mov
mov
sbb
xor
jnp
daa
aas
popa
leave
push
push
mov
subb
mov
gs
mov
add
sar
xchg
adc
add
push
es
add
mov
and
stos
mov
pop
adc
leave
add
pushf
lcall
fisubs
add
fmull
push
dec
icebp
sbb
pop
inc
push
add
inc
cmpsl
mov
adc
mov
xchg
incb
test
rcll
int3
ret
ds
jae
add
mov
aaa
ljmp
pop
insb
pmulhw
jmp
scas
jecxz
add
and
mov
push
aas
fildl
fyl2xp1
test
add
sub
mov
or
es
adc
aas
add
cmp
add
rcll
lret
push
xchg
cmpsl
iret
inc
add
jbe
ja
mov
int3
popa
xlat
or
into
cld
loopne
ja
pop
mov
rcrb
mov
dec
test
mov
pop
mov
call
xchg
push
cmp
xchg
and
divb
inc
dec
mov
int3
mov
xor
and
or
cmpsl
inc
add
setge
add
nop
hlt
aaa
subl
pop
add
stos
mov
call
cs
imul
fildl
shlb
jmp
or
pop
jbe
lret
jecxz
arpl
add
popf
and
add
xor
or
out
movsb
sbb
add
jmp
cltd
out
add
mov
jecxz
dec
adc
inc
into
pusha
insb
mov
pop
shrl
mov
inc
jl
out
lds
sarl
outsb
enter
add
mov
cmp
int
or
mov
adc
inc
cmp
mov
xchg
add
xor
sub
pusha
pop
add
jns
insb
add
pusha
cmp
pop
aam
xchg
sub
inc
xchg
hlt
pop
xchg
dec
daa
test
add
jb
mov
insl
mov
inc
rcrb
mov
pop
fsubl
testl
mov
add
data16
sti
dec
ret
pop
imul
add
add
cmovnp
pop
addr16
aas
and
fs
push
or
add
test
movsl
mov
ret
inc
sub
mov
inc
pop
out
sbbb
sti
insb
dec
pop
add
call
mov
add
nop
mov
mov
sub
add
jp
inc
add
mov
cmp
sbb
lea
les
inc
xchg
push
and
test
jbe
or
data16
loop
add
sbbl
test
icebp
jo
inc
aad
mov
daa
faddl
pop
sarb
xchg
cwtl
sub
inc
push
clc
xchg
jp
decb
sarb
insb
and
cltd
loope
negb
in
inc
icebp
loopne
inc
mov
pop
lods
xchg
and
mov
pop
out
loopne
sub
mov
inc
fsubrs
push
pop
jno
and
loopne
add
daa
add
push
das
test
xchg
shlb
push
int
cmp
int3
mov
or
add
push
and
enter
add
push
fwait
in
test
add
pop
add
jp
out
mov
rolb
mov
cltd
fsubrl
test
out
clc
cmp
mov
inc
add
sbb
or
mov
fwait
popf
push
push
cld
in
add
add
cli
aam
sbb
hlt
add
aas
ja
loope
int3
sub
les
cld
jl
push
cli
xor
add
loope
std
enter
add
popa
pop
cmp
insl
add
fucomi
lea
cmp
test
loop
daa
popf
les
add
notb
repz
test
ja
roll
orb
inc
dec
fwait
mov
mov
jo
pop
stos
jle
mov
fcoml
sbb
push
daa
xchg
dec
repz
mov
jp
xor
hlt
pusha
adc
or
arpl
mov
icebp
and
test
add
dec
cmp
push
imul
stos
aad
scas
add
in
push
mov
mov
mov
dec
sub
cld
addl
shrb
mov
fidivl
sbb
adc
out
cmpsl
loope
call
jle
dec
adc
push
aad
cmp
xor
add
pop
add
sub
cwtl
and
inc
test
aad
cld
clc
jo
add
lret
and
push
push
stos
pop
sub
addr16
mov
jb
sub
bnd
mulb
in
jb
call
test
addb
pop
jmp
fstp
out
jg
adc
int3
mov
mov
subb
cmp
xorl
dec
leave
movsl
clc
and
sbb
inc
mov
add
inc
call
sub
jge
jmp
add
arpl
inc
fwait
mov
mov
cmp
add
push
xor
int
cmpsb
xchg
shlb
dec
cmc
loop
add
dec
loopne
addl
mov
insl
fisubs
outsb
mov
or
divb
notl
shlb
aam
das
add
test
lsl
je
stos
xchg
addr16
sbb
inc
not
lcall
add
push
sti
pusha
loopne
push
add
pop
xchg
aas
xor
jns
sbbb
add
sbb
lcall
push
mov
add
inc
and
repnz
add
xor
test
imul
out
inc
scas
jae
lods
push
mov
pop
sbb
add
dec
icebp
mov
sbb
inc
pop
xor
cmp
mov
jns
pop
cwtl
jne
add
inc
subb
add
test
cmpsl
rcrb
idivb
test
pop
adc
sub
roll
lcall
fcomps
add
data16
xchg
pushl
pop
dec
cmp
inc
adc
jp
mov
xor
pusha
push
push
jmp
push
xor
xlat
loop
test
xchg
xchg
sbb
fstl
add
sub
add
mov
jns
adc
push
mov
push
fistpl
testb
mov
in
lahf
mov
je
fcomi
int3
add
pop
xor
pop
outsb
jge
add
xchg
imul
mov
test
mov
mov
sbb
adc
sahf
andb
push
xor
and
sub
jo
cmp
add
mov
outsl
add
pop
fwait
jg
push
add
xchg
orl
inc
mov
push
jae
xchg
mov
sbb
pushf
jp
clc
xchg
add
andl
rcll
jg
arpl
push
mov
adc
sbb
xor
xchg
inc
dec
dec
jo
sbb
mov
adc
inc
mov
aaa
xchg
hlt
lock
cmpsb
or
push
add
filds
stos
cmpsl
xchg
cmp
and
add
and
add
mov
fs
or
ret
popf
push
xor
pop
add
bound
lods
enter
sub
jno
rcl
popl
fistps
push
bound
xchg
fcoms
shr
pop
add
ret
add
ds
test
pop
adc
add
jns
into
cltd
jg
add
jno
inc
clc
push
pop
add
test
adc
cmp
dec
pextrw
daa
sbb
cmp
fists
jno
sarl
dec
imul
xor
mov
jns
mov
dec
gs
add
and
jae
sbb
incb
call
adc
roll
lock
or
rolb
dec
push
push
mov
add
icebp
nop
inc
add
jp
sbb
mov
xor
jge
mov
and
lret
movaps
rclb
push
push
or
icebp
xor
js
add
negl
bound
pop
fwait
les
push
nop
lahf
aad
nop
sbb
inc
adc
out
add
sub
fadd
jmp
cmp
sub
pop
rcrb
ja
gs
fisttpl
add
add
pop
fdiv
or
and
call
jnp
out
inc
add
ljmp
orl
jecxz
pop
pop
or
pop
movsb
pop
in
pop
lea
into
sarb
add
sub
cmp
mov
add
jae
pushf
or
add
jg
add
sti
or
lcall
sbb
cmpsl
and
mov
and
mov
sbbb
and
push
add
adc
daa
in
mov
sub
movsb
push
dec
push
movl
lret
sahf
jae
aam
aaa
xchg
inc
xchg
sti
xor
inc
cmp
call
movsl
js
add
shlb
xor
adc
into
out
pop
xor
and
popf
sahf
lds
inc
cmp
sub
or
sub
movb
rolb
cld
lods
arpl
mov
pop
mov
pushf
inc
mov
adc
mov
mov
cmp
mov
or
ss
stos
imul
jno
pop
jle
mov
inc
sar
mov
add
dec
add
cvtps2pi
repnz
add
pop
scas
bound
dec
sbb
xor
cs
roll
cmp
scas
dec
mov
dec
fldl
add
inc
sub
add
mov
sti
xchg
aaa
sbb
cmpsb
int
xchg
push
push
in
and
add
inc
ljmp
nop
fdivs
lret
add
cmp
and
mov
orl
mov
xor
fiadds
inc
js
cmp
sub
repnz
sbb
adc
mov
inc
ret
js
jbe
add
aaa
or
subb
cmp
push
jp
jbe
arpl
push
or
pop
movsl
pop
add
pop
cmpsb
pushf
add
arpl
mov
xchg
add
jp
mov
add
std
fcmovnb
pop
hlt
cmp
pop
sub
mov
sub
ljmp
sbb
loope
jae
cltd
xor
add
mov
cwtl
pop
stc
mov
sub
jle
ljmp
push
add
mov
ret
test
test
mov
icebp
push
inc
cmp
rol
pusha
rclb
notb
pop
in
pop
lds
adc
inc
inc
sbb
push
jo
add
incb
add
xchg
hlt
js
jns
insl
add
aam
adc
jns
add
add
aaa
push
faddl
fidivl
jmp
iret
xor
adcb
roll
shl
add
insb
sub
jmp
cs
out
push
add
loop
jae
sbb
dec
js
xor
xor
loope
bound
test
ja
cmp
mov
xlat
or
mov
xchg
fldt
mov
mov
ja
dec
outsl
pop
lcall
and
sub
xor
shr
cmp
aas
pop
add
cmp
xor
jmp
mov
fisubs
outsb
inc
add
mov
pop
das
push
mov
aas
jbe
sbb
add
cmp
idiv
out
ljmp
repnz
or
xchg
add
pushl
rolb
or
xor
inc
mov
loope
jae
mov
pop
jbe
xchg
cli
sbb
cmp
add
or
hlt
fldenv
lods
scas
inc
cli
xor
jecxz
jnp
test
adc
add
push
mov
mov
push
push
fs
or
add
fst
push
add
sahf
hlt
lret
cmp
andb
cmp
mov
in
add
dec
out
loope
push
add
cmp
arpl
and
add
stos
and
aam
mov
in
cmpsl
hlt
mov
add
lea
call
mov
or
and
jle
add
out
mov
add
cltd
mov
sbb
and
inc
jge
dec
sub
mov
adc
mov
xchg
add
imul
scas
aad
popa
xor
inc
or
xchg
xchg
insl
add
push
jne
add
nop
dec
out
test
das
lock
enter
add
inc
adc
faddl
or
fisubrl
cs
sub
xorb
pushf
mov
push
sbbb
nop
inc
imul
rorb
push
sub
push
cld
and
mov
xor
add
push
test
add
lcall
add
dec
xlat
ret
lods
pop
add
sbb
jne
xor
je
imul
ds
push
addr16
sahf
and
and
add
push
xor
adc
add
das
sub
andl
out
sbb
sub
imul
pop
add
add
iret
add
fstl
jge
cltd
into
add
fisubl
lret
inc
das
rolb
outsb
mov
fcoms
subps
mov
pusha
jne
ja
jp
push
sub
mov
in
lock
dec
sub
pop
jne
xchg
adcb
popl
push
sbb
jmp
mov
shr
push
or
lahf
lret
roll
outsl
cmp
add
fmull
add
movsl
xchg
nop
imul
adcb
add
dec
int3
mov
arpl
add
lock
add
imulb
add
addr16
subl
push
orb
divb
mov
push
adc
stos
rclb
push
or
inc
std
xorb
cmc
pop
add
lret
jp
mov
cmpsl
xchg
in
or
std
bound
jno
dec
and
add
cmpsl
std
adc
jle
hlt
add
and
lret
xchg
leave
push
add
cmpb
xchg
mov
add
test
add
push
xor
pop
mov
push
cmp
cli
add
xor
add
outsb
movsl
mov
aad
movl
jecxz
dec
mov
add
and
sbb
push
daa
add
cltd
push
dec
jo
add
scas
and
add
jb
lcall
fwait
xor
std
es
pop
pusha
sbbl
je
mov
pop
xchg
xchg
mov
jo
pusha
add
imulb
fcmovne
push
out
rolb
test
enter
jmp
push
insb
dec
or
and
aas
mov
mov
add
add
test
nop
adc
cmpsl
stos
add
mov
pushf
push
add
and
xlat
aam
pop
xchg
add
into
lods
in
add
std
call
cli
test
jecxz
fists
add
out
or
addr16
aam
add
loopne
mov
ljmp
sbb
pop
add
jmp
enter
mov
jne
push
mov
push
add
xchg
sub
sub
insb
sub
add
mov
testb
mov
notl
cli
je
and
inc
ss
divb
add
gs
pop
mov
enter
pop
std
shl
lret
add
in
jno
ficomps
add
and
sarl
add
subb
cmp
pusha
fistpll
test
out
xchg
aaa
lds
in
hlt
add
arpl
mov
testl
int
lea
sbb
xor
sar
popa
imul
test
inc
inc
cmp
scas
add
xor
sbb
out
test
stc
popf
test
push
icebp
add
mov
rorb
or
cmp
add
fwait
sti
push
cwtl
gs
ja
inc
mov
jl
dec
mov
mov
rorl
in
int
out
add
inc
out
mov
mov
repz
sti
push
add
and
mov
test
cs
cmovo
adc
insb
jle
pop
push
dec
jns
mov
push
jmp
repz
adc
add
mov
addl
cmp
icebp
cwtl
cmp
stos
sbbb
sub
pop
xor
add
mov
add
mov
mov
push
xlat
js
add
stc
hlt
cld
add
shrl
add
fcomps
mov
mov
lret
jns
out
pusha
cmp
dec
jnp
add
in
xchg
in
mov
in
insb
add
aaa
push
js
add
mov
sub
pop
sarb
mov
add
xor
loopne
divb
add
mov
add
sub
cmp
push
mov
inc
xor
add
or
test
push
test
and
mov
jo
push
pop
mov
stos
mov
fldenv
or
test
daa
or
popf
sub
mov
stc
add
jae
inc
push
mov
sti
mov
xor
fwait
push
push
push
jnp
add
jne
stos
push
rcl
sub
jns
ret
cmp
jb
into
aad
and
loopne
mov
pop
xchg
add
mov
roll
lahf
lret
fldt
mov
fs
insl
lea
pop
test
mov
add
stos
push
xlat
cltd
ret
addl
fiaddl
mov
stos
jbe
dec
lock
inc
add
in
mov
popf
inc
hlt
das
jecxz
sahf
addr16
sti
inc
outsl
adc
lret
les
jecxz
xorb
inc
mov
in
add
sub
mov
pop
ret
jp
add
mov
fbstp
add
cli
addb
push
jae
dec
jecxz
mov
or
insb
mov
add
inc
cmpsl
xchg
jo
lret
jl
std
mov
in
test
and
pop
inc
xchg
mov
outsb
xchg
pop
arpl
cwtl
stos
test
cmp
inc
push
cmc
pushf
pop
negl
adc
and
pop
adc
aam
icebp
loopne
xor
mul
sub
xor
add
cmp
mov
outsl
jp
pusha
insl
adc
xchg
add
pop
lds
adc
jb
add
icebp
mov
cmovle
sbb
pusha
push
addb
mov
inc
inc
add
and
ljmp
je
add
push
xor
dec
leave
and
jb
hlt
push
mov
jo
jle
sub
adc
adc
les
add
sbb
adc
mov
orb
out
mull
push
jns
rolb
imul
sbb
mov
fistl
std
repnz
adc
xchg
cmc
sub
add
movsb
mov
rorl
sub
push
sub
lods
test
cmc
cmpsl
jmp
push
jb
lds
or
cmp
call
adcb
add
jp
out
jo
add
lock
adc
mov
mov
jno
call
lcall
arpl
adc
enter
dec
add
dec
sub
mov
js
insl
fildl
push
addb
adc
inc
inc
jbe
jno
xor
stos
sub
jae
fdivl
clc
mul
xor
test
shll
lock
mov
pop
jb
in
pushf
add
mov
pop
xor
mov
pop
adc
xor
ret
add
icebp
xchg
roll
adc
push
pop
add
xor
jmp
pushf
lock
inc
inc
jae
add
add
outsl
test
push
into
dec
or
cmpsb
shl
lahf
pop
std
add
add
push
mov
lods
fs
sahf
and
cld
adc
ja
mov
add
cmp
xor
xor
ja
pop
jle
push
sti
pop
rorb
xchg
stos
ds
mov
in
aam
push
push
daa
sbb
adcb
inc
jae
add
mov
cmpb
mov
add
into
andl
dec
jno
add
rorl
add
or
or
push
cmp
or
cmp
ret
sub
js
add
cmpsb
jnp
aad
push
fsubrs
shl
fisttpll
lcall
fsubrp
clc
add
mov
dec
jns
leave
lret
nop
pushf
xor
xchg
jg
lds
ljmp
cmp
out
mov
add
mov
jp
jne
adc
stc
mulb
inc
jge
lock
pop
cmpsl
pop
mov
add
push
andb
adc
jno
push
sub
push
push
mov
mov
pusha
stos
adc
jns
push
es
test
sub
in
add
mov
aas
mov
cwtl
add
stos
gs
mov
or
push
add
inc
push
or
cld
push
ret
rcrl
fimull
cmp
add
dec
mov
mul
mov
xchg
inc
orb
mov
into
jne
in
pop
add
inc
test
mov
add
pop
fwait
push
repnz
add
sub
pop
xor
out
cmp
leave
andb
inc
pop
lods
hlt
cmp
cwtl
jo
in
jnp
ja
add
cmp
pop
std
jbe
inc
add
aas
leave
mov
out
cmp
repnz
sub
pop
movsl
das
add
sub
in
add
xchg
and
out
add
loopne
inc
or
xchg
int3
and
add
mov
jmp
or
cmc
in
int3
pop
push
jno
add
mov
sbb
lret
ja
lahf
leave
jb
add
pop
mov
inc
jp
insl
add
bound
xor
push
xchg
sbb
scas
push
ret
push
push
repz
out
leave
movups
cmp
aad
pusha
or
jnp
inc
repz
xor
insl
add
js
and
rolb
add
mov
add
loopne
or
add
lods
rclb
jge
daa
jo
mov
leave
add
dec
pop
push
inc
push
inc
mov
pop
int3
repnz
dec
in
fs
and
loope
rorb
dec
inc
cmp
js
mov
pop
dec
jmp
jo
add
iret
test
sbb
jbe
jge
xor
in
or
push
hlt
dec
out
inc
mov
pop
jge
aam
pusha
push
pop
mov
xor
hlt
adc
dec
sbb
les
mov
cld
cmp
mov
daa
pop
and
or
add
jp
add
inc
test
add
lcall
push
cwtl
sti
rolb
or
test
push
sbb
in
inc
mov
xchg
and
xchg
lret
lds
mov
sbbb
sub
shll
nop
push
and
xchg
dec
out
in
add
ja
mov
cs
jle
add
jbe
or
add
pop
push
jnp
jge
add
hlt
lds
outsb
fdivl
imul
push
pop
xor
add
push
sub
mov
cmp
lock
clc
movsb
enter
dec
pop
and
into
test
push
pop
cs
gs
add
outsl
mov
mov
dec
pop
dec
push
mov
cltd
loop
add
ret
xchg
dec
lds
jl
imul
cld
mov
mov
jmp
imul
in
popf
cs
add
ds
add
pusha
jle
fildl
push
mov
std
mov
rcrb
and
mov
aad
xchg
cld
push
add
push
pop
and
rclb
adc
dec
mov
shll
add
test
jo
rcl
add
js
dec
jg
ja
add
aam
lods
ds
cld
or
ror
and
xchg
icebp
or
push
sub
add
sub
push
sysret
sbb
daa
inc
dec
lods
int
xchg
add
push
push
sbb
iret
mov
jne
cmpsb
clc
add
int3
inc
lahf
dec
lods
out
cltd
add
mov
and
in
dec
sbb
add
push
xchg
xor
sti
add
sub
ja
js
mov
inc
or
cwtl
add
push
clc
bswap
push
sbb
mov
push
test
dec
ret
add
mov
pusha
js
add
xchg
sbb
add
scas
pop
mov
rcrb
notl
add
lret
mov
subb
adc
test
mov
jbe
mov
scas
sti
jp
inc
add
cmpb
xor
pop
xlat
mov
nopl
cmp
leave
sub
shll
jmp
fst
mov
jecxz
jge
pop
add
idiv
decl
lock
sub
jmp
fisttps
add
inc
push
test
pop
fdiv
pop
xor
add
fldcw
xchg
cmp
inc
test
imul
aad
and
add
mov
cmpsb
call
add
lock
cmc
mov
adc
lahf
iret
into
jmp
aaa
repz
adc
icebp
outsl
inc
jg
std
popf
adc
loopne
xchg
add
clc
mov
roll
pop
cmp
fsubs
lret
add
mov
add
add
int3
add
and
dec
pop
push
fsubs
sbb
adc
mov
cmp
sbb
lcall
dec
add
inc
adc
test
add
pop
add
sbb
xor
clc
loopne
js,pn
add
daa
shll
add
popa
jae
xor
mov
add
or
push
mov
cmp
lods
push
arpl
fldcw
cmp
cmp
fcmovbe
add
outsb
xchg
int
add
mov
lea
daa
mov
push
in
into
sbb
jg
add
out
jns
pop
jp
xchg
push
sub
data16
out
and
mov
xor
inc
sbb
add
arpl
mov
mov
add
lret
cmp
in
sub
jp
clc
add
or
add
jecxz
pop
xchg
fucom
pusha
fdivl
adc
addl
and
insl
movsb
mov
jns
ror
ljmp
pop
cmp
inc
out
lock
testl
xor
and
fbld
pop
xor
sbb
inc
mov
arpl
adc
pop
loope
rolb
ret
sub
jae
add
popf
adc
shr
add
and
mov
cmp
test
jecxz
push
mov
daa
add
lahf
dec
push
into
add
test
ficoms
add
sbb
jmp
cmc
test
add
popf
jl
add
or
mov
ljmp
cmp
add
add
mov
mov
mov
inc
add
xor
add
pusha
sahf
rolb
lods
jle
add
add
and
nop
pop
mov
xchg
mov
cltd
sub
lret
or
mov
and
mov
or
adc
fildll
sub
add
sbb
lahf
cmpsl
rcrb
fisttps
jo
add
mov
cmpsl
cmp
xchg
xor
ret
movsb
inc
pop
cmp
pop
fwait
adc
xlat
iret
orb
inc
xchg
mov
pop
adc
imul
xor
and
add
aas
dec
adc
int
xchg
loopne
cltd
shll
fpatan
fdivs
sbb
pop
sub
inc
inc
add
xchg
pop
pop
pop
jo
sbb
adc
insb
sub
mov
mov
adc
or
fdivs
push
add
test
cltd
xor
jle
push
ret
loopne
cmp
dec
push
insl
stc
pushf
xchg
ret
es
fbstp
inc
cli
gs
roll
cwtl
mov
call
aaa
popf
fs
pop
sbb
cmp
loop
daa
inc
adc
add
sbb
ret
mov
fildl
sbb
stos
mov
push
fmull
out
cmp
sub
dec
in
cmp
inc
pop
fstpl
sbb
dec
enter
hlt
xlat
add
repnz
aas
jecxz
adc
push
testl
dec
mov
shrd
mov
inc
outsl
sub
add
pop
dec
cmp
add
push
addl
dec
sahf
adc
je
xchg
mov
pusha
in
lahf
add
and
mov
inc
pop
out
mov
ret
sbb
add
add
fdivs
cmpb
sbb
sbb
leave
add
xchg
inc
ja
inc
imul
cmp
mov
sbb
mov
xor
nop
mov
jle
add
add
add
jmp
or
add
imul
xchg
add
add
inc
or
fldt
frstor
sbb
cltd
scas
pop
ror
adc
push
fs
mov
jmp
es
dec
cmp
pop
or
add
movsl
pushf
stos
pop
mov
inc
add
pop
ljmp
fldt
add
jae
or
int3
adc
or
and
loop
mov
adcb
pop
jle
or
test
lret
add
lea
cmp
pop
pop
arpl
jae
add
or
cwtl
mov
sub
inc
push
je
push
dec
inc
scas
cmp
in
nop
cmp
xor
int3
movsb
mov
imul
rol
inc
add
fxch
fmuls
je
dec
cltd
loopne
cmp
insb
sub
and
push
xor
fcompl
jno
add
ficoml
lods
xor
jmp
aad
pop
ljmp
add
sub
movsl
jns
jle
add
pop
adc
lock
mov
movsb
sub
pushf
lcall
ds
jb
pop
outsl
dec
add
dec
cmp
jne
shrl
rcrb
out
cld
hlt
cli
push
xchg
and
add
mov
movsb
out
dec
clc
add
imul
add
call
pop
lcall
push
aas
dec
add
inc
inc
pop
push
pusha
push
popl
dec
adc
and
lret
popa
insb
mov
dec
sahf
and
jo
add
push
aam
insl
mov
fdivrl
js
leave
loop
mov
clc
or
mov
xchg
cmp
adc
push
jbe
in
sbb
shrb
call
pop
es
mov
sub
xor
and
outsb
add
jmp
repz
loopne
out
add
lret
call
pop
or
out
or
inc
and
arpl
and
pop
leave
add
sarb
xor
pushf
add
cmpsl
pop
movsb
jmp
add
inc
scas
push
loopw
leave
testb
add
xchg
daa
push
icebp
mov
dec
jp
xor
push
push
nop
pop
hlt
jno
cli
mov
push
pop
arpl
mov
jns
stos
add
xchg
les
pop
cs
repnz
test
lret
add
add
mov
sbb
stc
nop
mov
es
hlt
mov
xchg
add
xchg
dec
pop
and
xor
add
xor
nop
mov
and
mov
jmp
add
add
jp
sahf
scas
iret
push
incb
inc
xchg
push
mov
loop
dec
sub
push
adc
jnp
andl
int
mov
xor
bound
jbe
cs
and
leave
js
inc
mov
aam
push
aaa
cmp
inc
cld
mov
shll
lar
push
lcall
mov
shr
pop
add
loop
push
loopne
xor
add
and
jl
mov
jbe
cld
cmp
pop
lods
das
xor
outsl
push
add
lret
cmp
loope
mov
out
xor
ja
push
cmp
add
cltd
xchg
incl
dec
mov
xor
repnz
testb
lret
xchg
and
cmp
mov
add
dec
sar
mov
jecxz
dec
sbb
sub
xchg
jle
add
add
mov
addb
xor
cs
inc
sbb
mov
arpl
or
scas
dec
and
pop
subb
add
jae
jo
negb
add
arpl
pop
out
add
sub
add
inc
frstor
cmp
dec
add
xchg
addb
mov
cmp
cmpsb
andb
add
loope
aam
icebp
xchg
mov
sbb
fldenv
or
or
out
pop
aas
rorl
mov
xchg
mov
sahf
pop
dec
lock
or
pop
inc
fwait
xchg
push
sti
mov
and
shrb
push
loope
icebp
jno
jmp
and
stos
in
add
and
out
mov
mov
flds
add
movsb
in
add
lcall
cli
mov
out
dec
leave
scas
inc
jne
add
mov
outsb
add
rclb
add
push
movsl
inc
add
pop
rol
in
mov
sub
push
hlt
movsl
add
sahf
roll
repnz
sub
pop
xchg
ljmp
sub
add
mov
rol
add
fiaddl
jns
add
pop
sub
xchg
bound
mov
add
sub
les
mov
test
cmp
mov
insb
jb
in
pop
dec
outsl
xchg
ror
push
lcall
mov
pop
cmp
add
shll
lret
repnz
add
dec
mov
outsl
sbb
loope
cmpsb
inc
call
dec
add
cwtl
icebp
push
xchg
lods
lret
sbb
sub
mov
arpl
addl
subl
cmp
cmp
cmp
adc
sbb
pop
pop
stos
loope
add
fisubrs
cltd
nop
sbb
adc
xor
out
sbb
mov
add
mov
add
int3
shlb
mov
sbb
push
mov
aas
mov
push
dec
jmp
sbb
insl
or
loopne
ds
sub
push
es
and
add
loope
push
add
jge
call
sbb
xlat
repnz
pop
hlt
sbb
add
push
or
add
clc
pop
pop
xchg
loopne
mov
or
int3
cmp
shl
imul
inc
xlat
pop
add
sbb
xchg
sti
ret
add
pop
shrb
rdpmc
fwait
cmp
mov
mov
mov
push
adc
pop
or
jle
mov
push
repz
add
jmp
dec
add
mov
and
push
adc
push
xchg
pop
int
dec
sbb
test
test
mov
nop
int3
stc
iret
pop
push
add
cli
xor
es
cmpsw
mov
push
push
adc
and
jnp
mov
add
fisubrl
and
add
stos
and
aas
sub
lcall
dec
push
sarl
mov
dec
rcrb
push
jge
and
sbb
push
mov
and
pop
pusha
in
add
in
xor
mov
bound
test
out
je
jmp
aad
cwtl
arpl
inc
xor
jne
add
cmp
xor
sbb
mov
cld
xor
pop
shll
fs
fldl
sbb
jnp
sub
inc
shl
dec
xor
add
mov
leave
add
inc
bnd
insb
mov
out
add
icebp
inc
add
xor
adc
xchg
inc
test
sbb
dec
into
mov
cmp
jns
add
add
stc
aas
jle
add
mov
xor
hlt
adc
outsl
shl
xor
sti
sbb
adc
add
push
outsb
pushf
xchg
arpl
flds
mov
out
out
int
jne
xor
mov
cli
jmp
mov
inc
and
insl
add
into
push
sub
xor
loope
insb
gs
adc
cwtl
imul
lret
das
nop
cmp
add
xchg
bound
mov
movsl
les
stos
inc
inc
ss
rorb
cwtl
xchg
clc
std
inc
sub
arpl
mov
nop
fstpt
add
mov
cmp
js
pop
mov
xor
jge
jecxz
cli
cwtl
popf
dec
push
add
jae
daa
or
fcomp
iret
loopne
add
hlt
cmpsb
jne
pop
scas
pop
inc
jecxz
add
pop
jp
push
add
add
aaa
sbb
repnz
inc
rolb
sub
adc
add
jns
mov
mov
cld
jle
mov
add
sub
dec
xor
jns
add
push
aas
cmpsb
daa
add
mov
mov
add
xor
xchg
lahf
mov
add
mov
aam
out
lock
mov
scas
or
pushf
in
movsb
jbe
aas
add
test
push
sbb
fadds
sbb
pop
lock
sarl
sti
cmp
bswap
or
jle
sub
pop
sub
lods
or
mov
xor
add
push
jge
add
testl
adc
jns
insl
sbb
fwait
mov
mov
dec
xchg
mov
pop
rol
sub
fisubl
jnp
cmp
aam
pop
fwait
cmpsb
mov
shl
xchg
pop
cmp
bound
clc
add
push
adc
movl
mov
add
shlb
or
add
cmp
jbe
pop
and
and
sbb
xchg
add
sub
or
scas
xor
cmpsb
ss
push
outsl
sub
cli
mov
gs
fnsave
cmp
add
mov
adc
inc
inc
popa
xchg
sbb
jbe
out
dec
addr16
orb
sbb
lahf
inc
js
adc
ja
push
data16
popf
es
and
out
fdivl
add
pop
mov
or
pop
add
vmwrite
divb
lock
dec
adc
add
mov
ret
mov
inc
cmp
addl
cli
inc
xchg
jle
mov
cmp
insb
in
inc
add
rorl
add
dec
or
sub
in
into
jmp
sub
xlat
les
into
push
rclb
lret
and
imul
mov
sub
mov
jns
call
sub
incb
sbb
in
cmc
cmp
mov
das
xlat
add
shl
imul
aaa
jmp
adc
ds
xchg
pop
je
mov
add
inc
xchg
outsl
cmp
mov
lods
jmp
dec
jg
sub
loopne
mov
dec
sbb
or
push
out
ds
movsb
sbbb
mov
pop
jp
lock
pop
dec
arpl
mov
outsb
jns
loope
pop
xlat
push
push
sarl
dec
in
cmp
add
lahf
adc
clc
mov
mov
insb
mov
fdivp
jae
add
nopw
xchg
out
push
inc
insb
aad
push
jle
lods
add
pop
sbb
out
dec
ret
adc
xchg
ret
insl
add
cmp
xor
or
pop
pop
ret
loopne
sub
and
ja
push
xchg
icebp
je
add
fsubs
pop
add
sahf
jae
mov
add
scas
fdivs
pslld
loopne
and
mov
jle
sti
jae
add
ret
mov
enter
fsubs
mov
cmc
add
in
cld
icebp
xor
sbb
cmp
sbb
add
fld
mov
sbb
pop
jle
fst
repnz
add
in
mov
addb
or
mov
add
cmp
sbb
add
sbb
add
or
xchg
mov
xchg
push
add
mov
cmp
sbb
push
inc
mov
xchg
inc
insl
pusha
cld
in
mov
data16
fisttpl
test
xchg
addl
add
shll
and
xchg
add
jnp
test
add
mov
cltd
add
sub
xchg
js
fwait
sahf
cmp
push
pop
seto
add
or
pop
shl
out
add
sub
iret
adc
roll
add
mov
cmpsb
add
rcrb
loop
mov
add
fs
inc
repz
lahf
add
in
jae
cmc
sbb
outsb
adcb
add
gs
sbb
enter
add
cmp
adc
sub
cmp
lods
stc
fistps
mov
push
jle
xchg
cli
push
leave
mov
mov
nop
add
hlt
mov
dec
lahf
addr16
fldcw
sbb
decb
or
call
gs
xor
jno
rcl
sub
js
sbbb
jnp
mov
xor
leave
or
sbb
adc
mov
pop
push
jnp
cmp
pushf
sub
lahf
add
pop
addr16
push
add
dec
rorb
add
mov
pop
push
xchg
add
in
fildl
fcomps
aad
rcrb
sbbl
bound
pop
leave
mov
xor
aam
daa
cmp
or
jle
addb
xchg
repnz
stos
pop
rolb
sbb
clc
mov
inc
fildl
call
into
nop
rolb
adc
popf
dec
arpl
or
sbb
cmp
push
sub
imul
stos
dec
pop
repz
in
out
lock
rolb
xor
xchg
add
or
pop
add
jb
div
or
imul
mov
mov
movsb
mov
jl
rcll
inc
cmp
push
popf
sub
adc
popa
gs
mov
sub
add
pmulhuw
pop
call
mov
dec
add
cli
mov
ljmp
in
popf
add
or
aaa
pop
mov
add
adc
mov
mov
push
or
out
xor
ja
clc
add
pop
insl
rcll
fsubs
add
arpl
add
mov
mov
mov
adc
sub
jno
push
and
insb
add
pop
ret
call
enter
dec
incb
inc
adc
mov
push
adc
jl
add
lahf
push
sarl
push
sbb
insl
inc
je
add
sub
stos
subb
cwtl
int3
add
inc
cmp
mov
push
push
mov
push
fiaddl
adc
dec
inc
mov
jno
cld
mov
add
jo
out
mov
sbb
sub
jp
mul
mov
clc
lea
dec
lret
sahf
add
pop
pushfw
das
sub
push
hlt
adc
call
add
jge
add
jg
ficomps
adc
xchg
div
jnp
rcl
cmp
loope
xchg
jg
xchg
mov
das
or
subb
addr16
mov
add
mov
fistpll
xchg
pop
mov
or
arpl
jnp
push
and
inc
xchg
pop
stos
fcomi
mov
cmpsl
pop
fldcw
sub
movsl
push
cmp
or
sub
pushf
add
sbb
add
lock
ds
cld
fldl
scas
mov
imul
mov
mov
push
test
jecxz,pt
fdivrl
subb
adc
outsl
sti
rcll
pusha
movsb
iret
dec
push
mov
dec
sub
add
mov
add
fnstenv
cs
cwtl
idiv
inc
popf
ja
mov
fisttpll
jmp
lahf
pop
arpl
imul
test
jns
xorl
leave
into
mov
adc
add
sub
push
das
cli
movb
je
xchg
stc
sub
pop
xor
mov
cmpsl
push
and
pop
and
add
dec
pop
in
xchg
int3
add
mov
dec
xchg
mov
xlat
dec
jl
mov
lock
pop
pop
xor
les
movsb
sbb
cmpsb
add
mov
mov
or
push
xchg
xchg
jae
add
lds
loopne
int
add
mov
dec
inc
test
into
pop
jno
loopne
fiaddl
je
and
clc
add
repz
lock
imul
shrb
or
inc
mov
or
sbbl
xchg
adcb
rorb
dec
pop
loope
faddl
into
or
orl
add
out
or
push
add
lods
cld
or
add
push
pop
cmpsl
add
xor
in
inc
iret
fmull
xchg
jg
xchg
xchg
jae
adc
inc
mov
fadd
push
mov
repnz
jg
push
lret
add
mov
xor
or
add
lods
pop
in
mov
pop
pop
sbb
fdivrl
xor
das
mov
data16
shlb
je
outsl
std
int3
mov
cwtl
xchg
testl
bound
pop
push
dec
gs
adc
inc
pop
imul
or
stc
ds
and
mov
arpl
outsb
jno
sarb
iret
mov
add
popl
sbb
das
inc
gs
mov
js
sti
dec
pop
movsl
jnp
rol
das
push
mov
and
dec
sub
loop
sub
ljmp
add
add
add
fldt
add
mov
fdivrs
or
sti
add
add
adc
inc
sbb
push
add
mov
in
add
fnsave
les
incl
sub
sub
add
sbb
xchg
xchg
pop
add
fidivrl
inc
testb
jp
jmp
add
inc
cli
add
js
ret
sarl
jge
fdivrs
or
adc
add
xchg
mov
adc
test
jae
frstor
or
imul
int3
fmuls
add
adc
repnz
add
insb
jns
pop
jo
roll
mov
inc
jmp
add
mov
and
jmp
cmp
icebp
mov
xor
ljmp
add
cmp
ds
test
in
stos
enter
add
add
inc
ss
or
dec
add
bswap
mov
mov
jnp
insb
add
das
inc
and
sub
fldt
cmp
push
popf
mov
loop
repnz
inc
imul
push
add
lods
fcmovu
jmp
push
mov
test
fwait
and
mov
xchg
add
inc
loopne
rolb
stos
ljmp
fs
filds
dec
mov
add
pop
out
xchg
sbb
jo
out
add
bound
cmp
add
pop
mov
sub
fstpl
leave
push
inc
roll
subb
daa
add
loope
add
lock
ficoml
or
push
mov
add
sub
xor
loopne
adc
scas
je
add
pusha
add
std
add
loopne
shr
ret
leave
or
ljmp
push
add
mov
insb
mov
popf
xor
add
add
call
js
iret
pop
xlat
sti
subl
pusha
test
sbb
leave
js
jecxz
mov
cmpsl
xchg
mov
inc
lret
xor
or
pop
dec
aam
mov
add
add
lea
call
pop
mov
sub
pop
xchg
and
mov
aas
or
into
incl
inc
or
rorl
pusha
popa
bound
hlt
movsb
loop
add
mov
in
jbe
aaa
add
sbb
add
aad
mov
inc
ret
mov
sbb
cmp
adc
test
jl
gs
mov
testb
or
mov
jle
sbb
fbstp
hlt
jge
ss
leave
test
sub
pop
cmpsl
add
inc
and
add
cwtl
lcall
add
and
stos
add
sahf
sbbl
dec
insb
fdivl
add
jne
cltd
jge
push
imulb
add
jle
inc
ret
out
mov
pusha
imul
and
cmp
pop
cltd
mov
movb
rorl
out
scas
mov
push
xor
and
jle
mov
mov
into
xor
mov
inc
adc
jnp
pop
ds
xor
idiv
lcall
cli
cwtl
mov
or
pop
cmp
adc
std
in
push
mov
dec
fmul
add
dec
cmp
push
rcrb
in
andl
aam
imul
ja
push
add
in
into
or
add
inc
aam
pop
push
std
sahf
add
icebp
sub
xchg
adc
add
pop
mov
add
incl
adcb
add
jo
out
jno
add
pop
fs
arpl
shll
add
fwait
lahf
mov
cltd
add
xlat
sarl
or
sbb
int3
inc
xor
rclb
adc
lods
les
or
sbb
cmp
pop
inc
pop
mov
add
pop
xchg
push
mov
cmp
mov
or
lods
popf
xlat
xchg
pop
and
shrl
mov
xor
jecxz
dec
add
lret
push
and
push
mov
mov
add
fs
jo
daa
push
xor
pop
pop
push
xor
push
jns
pop
jb
orb
je
add
cmpsb
inc
xor
mov
xchg
lods
push
popa
add
insl
jge
cwtl
lahf
add
add
lcall
mov
pop
lret
add
shl
rcrb
clc
mov
imul
mov
push
mov
ret
add
mov
flds
fstpt
movsl
sbb
add
sbb
outsl
pop
xorb
add
fcoml
dec
xchg
pop
cld
btc
out
pusha
stc
rol
add
dec
pop
and
push
ds
popf
xorl
test
ucomiss
xor
pop
mov
dec
loopne
mov
inc
inc
add
or
arpl
cmp
xchg
cmc
in
push
pop
push
jle
fmuls
cmpsl
pop
cmp
jnp
add
cmc
in
icebp
shll
out
sub
loop
cltd
add
lock
add
jne
es
xchg
cmp
sbb
mov
xor
jno
ret
add
jl
jp
sti
and
pusha
mov
ret
jne
add
and
xchg
xchg
or
test
add
outsb
jae
cmp
xor
jbe
iret
rolb
or
add
cld
add
xchg
aad
add
mov
xor
movaps
cmp
out
stc
out
js
add
es
mov
add
js
and
add
mov
or
add
xchg
ja
arpl
push
add
fwait
or
and
and
pop
jnp
pop
mov
int
ret
push
add
arpl
dec
sub
aam
pop
inc
dec
jl
cs
lret
std
jns
mov
inc
into
out
iret
divl
test
ficoms
push
pop
pop
std
andl
out
dec
cltd
cmp
push
sbb
sbb
xchg
ffreep
push
fsubl
jo
add
cmp
mov
out
es
add
icebp
test
adc
add
out
xchg
dec
sbb
jns
add
and
lret
or
add
ljmp
adcl
movl
fcmove
inc
dec
je
add
leave
jo
pop
outsl
fsub
add
in
cwtl
cmp
rolb
mov
rclb
add
jne
push
int3
loopne
add
push
or
in
idivb
add
in
jns
shrb
sbb
mov
add
repz
inc
iret
jmp
and
hlt
mov
push
sbb
xchg
lcall
add
movsb
fisubrs
daa
add
in
xchg
sub
adc
in
bound
or
mov
int3
add
push
ret
mov
aad
shrb
mov
cmp
popf
add
shll
mov
mov
xlat
sbb
dec
add
dec
add
rcrb
pushf
adc
or
clc
daa
mov
add
stc
dec
jnp
fbstp
push
mov
add
loope
adc
dec
add
mov
rorb
push
fiadds
pushf
dec
and
lods
add
lock
cld
jae
add
push
call
cwtl
add
dec
lods
cltd
subl
sahf
bswap
cmpsl
aas
dec
and
pop
xor
loop
add
js
ret
fbld
je
and
mov
lock
das
test
pushf
xchg
pop
cmpb
les
sbb
jns
push
lods
jecxz
test
cmp
sahf
pop
push
ss
stos
jbe
andb
add
inc
lods
rclb
clc
std
mov
add
add
rcr
inc
and
pusha
pop
xchg
add
adc
scas
add
stc
sbbl
jmp
stos
lea
mov
aam
pop
add
jno,pt
pop
adc
adc
stos
imul
mov
fwait
add
addr16
shr
sahf
mov
fldl
push
out
fldt
jge
mov
rcl
stos
sti
orb
ds
sahf
imul
mov
add
lret
add
jp
add
dec
shl
mov
xchg
mov
addl
jle
xchg
js
jo
incl
inc
rcrb
mov
rorl
aas
inc
sub
out
add
popa
or
mov
hlt
mov
sub
pop
mov
ds
add
sarb
jb
orb
fs
pop
loopne
gs
xor
pop
xor
jle
xor
mov
cmp
sbb
push
add
cmp
xlat
js
jo
enter
inc
outsb
jle
addl
in
sbb
pop
sarb
movsl
sti
outsl
sbb
jns
add
fldcw
dec
add
jg
psubd
ds
scas
or
sbb
inc
mov
inc
push
add
mov
add
and
push
xchg
mov
pop
push
idivb
pop
lods
cwtl
add
test
xor
mov
mov
jp
add
lock
and
cmp
outsb
pop
int
xchg
jne
popf
out
jmp
test
lock
call
ja
mov
xchg
pushf
dec
add
or
jnp
sbb
pop
adc
sub
aas
movb
bound
cmc
cmpsl
loopne
lahf
lea
loopne
shl
jo
insl
das
fsubp
add
jo
into
add
lcall
pushf
inc
in
or
add
test
bound
sbb
jo
inc
jae
jne
mov
add
cwtl
fbld
add
jg
jno
clc
out
imul
mov
ds
ljmp
or
xchg
mov
pushf
jne
shll
shlb
add
iret
mov
adc
sahf
push
jne
repnz
mov
jge
xor
in
hlt
sahf
es
cmc
loop
pop
inc
dec
xor
add
adc
jno
pop
or
jae
mov
aas
repz
add
in
push
pop
add
movsb
dec
sub
mov
inc
ss
jbe
jg
add
sub
cmp
xorb
jb
push
mov
add
orb
cmc
push
jp
scas
lds
fcmovnb
or
jo
loope
es
out
xchg
mov
mov
stc
sbb
icebp
pop
sbb
add
pusha
add
cltd
js
ds
pop
sbbl
int3
fprem
xor
push
sub
sub
stos
incb
or
arpl
and
mov
fwait
add
push
test
add
popa
div
mov
dec
loope
jle
cltd
insl
dec
pusha
mov
out
add
push
and
and
sub
add
cmp
outsb
shlb
cs
sub
insb
or
mov
lret
leave
push
dec
in
add
pop
or
xor
insb
pop
jmp
rorl
add
nop
mov
jo
out
xlat
rorb
in
dec
dec
add
sub
cmp
pop
jl
or
lock
and
std
xchg
sbb
scas
inc
add
push
xlat
jmp
xchg
pusha
jo
push
adc
or
add
sub
dec
pop
lods
xor
fwait
dec
add
inc
push
or
cmp
xchg
pushf
clc
cmp
push
test
add
dec
push
rclb
inc
xor
adc
fwait
pop
mov
add
add
cmp
clc
dec
insl
loop
xchg
jbe
mov
mov
and
inc
inc
push
hlt
mov
mov
fs
add
mov
shll
sub
mov
pusha
call
push
fnstenv
movsb
xchg
add
sbb
sub
dec
sub
mov
and
and
add
mov
out
mov
icebp
orl
push
clc
mov
repnz
add
out
push
movb
jp
cvtps2pd
jo
or
imul
add
mov
and
enter
pop
add
lret
push
or
lret
cwtl
inc
hlt
jns
movsb
mov
cmp
in
xchg
push
or
fildl
mov
mov
and
add
xchg
jg
cwtl
and
adc
add
aam
push
add
lds
mov
inc
movsb
lods
nop
mull
adc
add
inc
adc
sbb
or
rcr
repz
add
pop
in
push
out
pusha
jecxz
dec
add
xorl
adc
add
jae
jns
lret
insb
mov
mov
add
int3
pusha
inc
cmp
mov
inc
xlat
ret
outsl
mov
psubusb
aam
and
mov
es
shlb
test
pusha
dec
ja
add
xchg
arpl
ret
add
jb
push
push
adc
clc
xchg
add
push
jp
aam
ja
mov
das
fsubp
fs
add
sub
mov
push
stc
rclb
cs
pop
inc
movb
call
outsb
cmp
jnp
pop
sub
aas
hlt
fs
pop
cmp
xor
outsl
xchg
push
push
add
mov
inc
add
and
mov
loopne
adc
cmp
aad
dec
ds
cmp
add
adc
pusha
jb
add
mov
lea
add
sub
add
push
inc
pop
add
aam
add
pop
in
cltd
mov
subl
add
mov
push
dec
pop
sbb
loopne
pop
sahf
sub
push
out
xchg
dec
cwtl
rclb
in
and
rol
pop
inc
add
cmp
fcoml
add
sub
xor
aad
xlat
dec
sbb
cmp
jbe
ja
mov
pop
in
jecxz
addb
clc
test
inc
adc
push
lcall
pop
pop
in
lock
adc
ret
sbb
jnp
push
sub
cmp
or
and
imul
jge
push
xchg
mov
ret
push
aaa
mov
adc
pop
inc
mov
mov
shl
add
cmc
pop
mov
hlt
jo
pop
mov
sub
inc
dec
cmp
add
adc
outsl
popf
add
push
jl
or
jae
push
test
insb
inc
add
mov
sbb
dec
das
loopne
mov
cmpsb
cs
and
dec
cmp
mov
add
sub
roll
movsb
out
add
mov
repnz
jne
add
adc
xlat
pop
push
dec
add
xchg
ret
int
push
cmp
adc
mov
pop
add
cmpl
inc
bound
or
mov
and
rol
out
add
mov
inc
jbe
cmp
and
lcall
test
pop
xor
hlt
add
mov
add
cmp
sti
in
pop
add
mov
fwait
lcall
sbbb
or
push
rclb
in
ljmp
roll
les
pop
ds
adcb
jne
sbb
in
sbb
adc
add
xor
jle
add
scas
xchg
out
sbb
jge
adc
les
and
mov
out
push
sbb
in
add
adc
out
dec
add
ds
sub
sbb
push
add
mov
ja
push
jns
xor
in
push
mov
push
mov
or
sub
add
icebp
rcl
scas
lds
mov
cld
pop
popf
push
adc
lods
scas
add
cmpsl
add
ljmp
xchg
addr16
lock
add
push
test
jl
stos
push
adc
cmp
outsl
scas
push
dec
push
add
popa
xlat
idivb
cmpsb
sbb
push
jbe
loop
and
xchg
mov
insb
movb
xor
notb
mov
mov
jnp
pop
jg
cld
pushf
add
repnz
cmp
stos
add
mov
enter
cmp
ljmp
cmp
inc
mov
lods
mov
jns
jecxz
incl
adc
sub
into
pusha
scas
ret
jp
aad
jno
lock
add
add
insl
sbb
and
add
adc
fildl
cwtl
lret
mov
call
imul
sub
xor
test
test
mov
xchg
push
mov
ret
push
xor
stc
pushf
ja
negb
movsl
mov
leave
pop
xor
and
xlat
mov
adc
push
jbe
test
add
cld
loope
cmp
clc
push
cmp
shlb
add
and
mov
add
bound
push
xchg
pusha
sahf
lods
add
dec
sbb
add
pop
inc
cmc
add
fwait
push
and
gs
add
dec
add
cltd
add
clc
bound
out
add
divb
jle
add
dec
decl
stos
adc
add
insb
and
jmp
out
inc
pop
dec
addl
call
movl
fcmovnbe
mov
popf
lahf
add
inc
cmc
pop
xor
sub
add
mov
std
lret
pop
aam
lods
add
xchg
pusha
add
cmpsb
cmp
subb
mov
pusha
fdiv
mov
pop
adc
stos
imul
mov
mov
ror
ret
push
shlb
jno
add
lret
inc
mov
andl
imul
xchg
rol
push
pop
pop
and
inc
dec
jbe
cmp
sbb
inc
cmpsl
pop
outsb
pop
push
shll
dec
pop
rorb
xchg
add
stc
dec
in
insb
or
push
mov
push
xchg
loopne
add
dec
sbb
pushf
sbb
js
pop
jg
add
subl
in
mov
pop
mov
movsl
adc
xor
push
mov
stos
xor
or
ficoml
push
out
movsl
mov
jnp
adc
pop
jmp
mov
mov
in
add
cmp
add
xor
xchg
cld
out
xor
add
mov
in
push
call
jo
adcl
add
imul
adc
xor
inc
sbb
je
inc
outsb
leave
add
push
shrb
mov
enter
add
rorl
pop
dec
jns
frstor
add
loop
cmp
add
mov
sarb
mov
mov
movb
pop
mov
push
shlb
cmc
int3
xchg
sti
setae
sub
arpl
clc
js
imul
add
testb
or
mov
in
xchg
push
push
pop
ficompl
push
mov
ret
movsb
js
cmp
jecxz
sbb
cmp
arpl
mov
or
loop
dec
scas
xor
add
rorb
xlat
or
sub
ret
pop
adc
mov
ljmp
insl
loopne
adcb
sub
add
mov
in
inc
push
out
je
fisubrs
rclb
add
fildl
mov
dec
add
pop
mov
add
adc
movsb
arpl
incl
push
insl
mov
or
lds
and
push
mov
pop
xorl
pop
aas
pusha
xchg
outsl
inc
add
sbb
sbb
jo
add
mov
jg
add
push
out
addr16
aad
sub
add
test
add
add
add
push
mov
dec
add
push
jl
add
cmp
push
cmp
test
cmp
mov
jns
movsb
ljmp
pop
adc
out
cmpsl
xlat
dec
int3
rolb
ja
xor
push
sbb
mov
pop
sqrtps
cmp
add
mov
test
xor
jbe
pop
inc
or
mov
dec
xlat
outsl
jmp
add
jg
inc
test
scas
xor
fisubrs
decl
adc
pushf
adc
test
rorb
and
and
jg
add
cmp
sub
sub
fildl
or
loope
cmc
gs
repz
adc
add
aad
icebp
inc
lahf
int3
cmp
out
add
cli
imul
neg
xchg
or
jo
loopne
xor
loope
inc
fmuls
add
insl
cmp
in
adc
mov
jnp
add
jbe
das
dec
enter
inc
fcomi
insb
jge
imul
in
andb
aad
stos
add
jge
jns
mov
pusha
adc
movsl
add
shlb
add
pop
push
pop
idiv
outsl
add
lea
rcrb
pop
stos
push
dec
push
inc
test
sbb
lea
mov
mov
mov
inc
aas
mov
ret
mov
push
xchg
xchg
inc
sti
fisubrs
xor
xchg
sbb
test
jbe
mov
add
or
push
jo
add
push
jg
ds
lret
xor
or
mov
aad
push
jl
std
mov
pop
sbb
rcll
and
arpl
jecxz
sti
jmp
ret
add
mov
movsl
mov
imul
icebp
add
and
push
in
outsl
cmp
pop
adc
add
jle
rorl
ljmp
inc
xor
bnd
outsb
scas
add
stos
pop
mov
add
or
in
mov
lret
pop
mov
mov
shll
leave
or
ret
hlt
xchg
loope
cmp
add
dec
aas
adc
jge
add
and
std
add
rolb
mov
xor
mov
adc
js
and
sub
add
dec
sub
add
and
adc
imul
dec
add
stos
jb
add
ss
fisubrs
loopne
add
mov
xor
stc
faddl
leave
inc
psubsw
out
icebp
cld
in
addb
push
orb
ret
pop
cmp
mov
add
cmp
pop
add
repnz
cmpl
lret
jl
in
push
cmp
shr
push
mov
sbb
in
fdivs
dec
sarb
fiadds
bound
jno
leave
lea
and
push
xor
inc
inc
dec
mov
inc
xchg
mov
add
into
shlb
or
push
pop
scas
jecxz
inc
sub
jnp
add
insb
test
mov
scas
test
movsl
push
pusha
popw
add
inc
lret
shrl
mov
pop
or
xchg
or
mov
arpl
addr16
adc
add
rcrl
iret
xlat
les
add
and
mov
sub
mov
dec
lsl
mov
jno
pop
test
pop
ja
lods
enter
add
cmpsb
mov
mov
mov
fdivs
and
mov
les
loopne
add
iret
scas
fmull
loopne
mov
and
or
mov
xor
mov
cmp
and
cmp
sub
sbb
insb
adc
fildll
dec
jae
aam
adc
push
add
sub
xor
xchg
xor
call
and
int3
cltd
sbb
sub
sbb
pop
xchg
or
cmp
bound
add
sbb
les
and
xchg
fdivl
and
add
ljmp
je
push
fs
and
add
outsl
jb
cwtl
push
inc
and
add
dec
jo
outsb
popf
imul
outsl
sub
push
divb
cmp
mov
ficomps
shll
jns
xorl
inc
push
dec
cwtl
dec
xor
sbb
fs
ja
into
or
dec
xorb
mov
ja
mulb
mov
lock
mov
outsl
xbegin
enter
bnd
shlb
jne
jg
xor
push
imul
cmp
push
sti
cmp
jne
inc
push
jo
cmpsl
addr16
cmpsb
outsl
es
push
jns
push
push
mov
jne
sbb
push
add
dec
push
cltd
dec
iret
dec
sbb
jbe,pn
adc
mov
cmp
dec
mov
xor
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
push
add
push
add
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
movsb
add
add
add
add
add
add
add
add
bound
xor
add
push
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
popa
add
outsl
add
add
outsb
add
add
data16
arpl
add
add
imul
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
sub
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
dec
add
add
jb
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
add
sub
add
add
add
add
add
bound
add
add
jns
jae
je
add
jae
and
dec
add
arpl
outsl
add
jo
outsl
add
popa
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
inc
add
add
add
add
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
inc
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
sbb
add
inc
add
imul
inc
add
je
add
add
add
add
and
dec
add
jns
and
xor
xor
and
xor
xor
xor
xor
and
xor
xor
cmp
xor
xor
add
add
add
add
or
add
inc
add
imul
push
add
jb
jae
imul
add
xor
cmp
add
add
add
add
xor
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
cld
push
add
hlt
push
add
lock
add
add
add
add
add
push
push
add
lahf
adc
add
add
imul
xchg
push
add
movsb
push
add
mov
push
add
add
add
in
add
add
add
or
add
add
add
adc
add
add
incl
add
and
add
add
add
fcoms
and
add
sub
add
add
add
cld
push
add
sub
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
xor
fs
insb
add
add
dec
gs
popa
addr16
outsl
js
outsb
imul
add
popa
fs
jo
xor
cs
insb
add
add
add
push
gs
jo
outsb
dec
gs
js
add
push
pop
mov
push
pop
push
push
push
out
call
nop
add
loopne
les
add
or
dec
add
mov
cmp
cld
mov
xor
movsb
or
add
insl
sub
leave
push
or
shl
test
ss
mov
icebp
dec
sbb
rol
jne
stos
jmp
aam
dec
sbb
inc
inc
jmp
sub
leave
enter
pop
shl
mov
cmpl
or
cmp
outsb
ja
and
jne
add
sub
rep
pop
jmp
add
shlb
mov
inc
adc
ret
shr
call
xchg
jb
ret
sub
popa
xor
or
push
addb
mov
push
add
shlb
add
adc
or
sbb
dec
xor
push
dec
and
cmp
push
push
xor
inc
sbb
or
ret
mov
repz
adc
cmpb
sbb
jo
mov
rcrl
movsl
movsb
and
xor
or
push
push
adc
push
call
in
dec
adc
lea
inc
cld
add
xchg
das
fisubs
or
jbe
add
or
mov
push
stos
add
nop
cmpl
je
pop
mov
test
jno
mov
jecxz
inc
stos
cli
inc
pop
mov
add
in
addr16
or
out
push
sbb
push
call
add
lea
ret
inc
push
adcl
test
or
add
adc
sbb
insl
xchg
rcll
add
push
dec
dec
add
dec
test
or
cmp
sbb
jnp
mov
lea
mov
cmp
sub
jl
adc
loope
repz
lea
push
aas
inc
pop
add
addb
addr16
aas
rcr
push
rclb
test
dec
inc
xor
jmp
mov
adc
and
icebp
dec
inc
clc
icebp
add
test
add
or
rcll
pop
inc
sahf
or
xorb
mov
bswap
cmpsb
cmp
add
add
pop
pop
pop
push
pop
ret
push
ret
cld
dec
mov
sub
loopne
orl
xchg
and
mov
push
ret
rorl
push
push
roll
push
push
sti
scas
aad
push
mov
xor
add
in
or
push
jne
scas
leave
fcompl
sub
clc
loope
cltd
pushf
inc
sbbb
ret
je,pt
xchg
ja
inc
out
add
enter
jns
mov
cmp
test
sub
xchg
in
movw
jbe
lods
aaa
cmpl
add
add
sti
inc
test
push
setb
call
add
inc
mov
pop
dec
jecxz
shr
push
mov
nop
jae
shll
mov
pop
pop
add
test
and
nop
add
dec
cld
fs
push
aam
pop
and
pop
or
or
or
and
push
sub
pop
mov
movzwl
adc
mov
inc
test
inc
pop
adc
ss
idiv
cmp
cmp
xor
push
inc
imul
dec
mov
xlat
jne
sub
ret
xchg
pop
jae
or
adc
inc
into
into
add
mov
pop
pop
xchg
mov
test
cmp
in
add
jbe
push
push
and
cmpsl
nop
cwtl
pop
mov
mov
dec
push
out
loope
in
inc
pop
pop
fistpll
fimuls
int
in
sub
inc
je
es
push
sbb
dec
or
stc
add
movsl
add
jnp
inc
push
cli
dec
movsb
jno
rcrl
jl
inc
lret
pop
into
ss
cmp
cmp
inc
ret
jne
mov
dec
pushf
mov
push
lock
push
dec
push
xchg
fsubl
sub
mov
outsb
inc
push
adc
enter
test
cltd
and
add
pusha
lret
shlb
push
hlt
push
leave
dec
or
dec
jb
sbb
push
addr16
in
rolb
lret
jae
inc
push
adc
push
adc
mov
pop
lods
sbb
xor
stc
jmp
mov
push
movl
fstpl
in
in
pop
inc
mov
sbb
gs
cmp
scas
pop
fwait
mov
cmpb
pop
inc
mov
push
je
add
or
es
push
cmovle
inc
into
jle
test
sahf
and
push
push
push
push
call
inc
sbb
mov
and
add
jmp
out
pop
insl
jae
bound
mov
in
sbb
mov
rclb
scas
adc
inc
loop
and
pop
inc
or
rorb
cs
xor
dec
adc
and
mov
fimull
push
adc
rorb
scas
int3
testb
mov
idivb
jg
test
and
jmp
mov
pop
inc
cmp
clc
cmp
lret
xor
es
push
dec
push
mov
enter
mov
xchg
test
push
outsl
mov
shrb
sub
insl
mov
call
cmp
andl
xor
xchg
insl
movsl
xchg
sbb
and
inc
mov
dec
adc
jl
prefetchnta
shr
pusha
loope
push
ret
push
jns
mov
adc
pop
test
sbb
adc
sbb
dec
imul
mov
or
and
movsb
fucom
inc
jo
insb
imul
outsb
and
outsb
jl
adc
sti
and
add
test
fs
lea
repz
outsb
mov
ljmp
imul
dec
movl
sub
popa
insb
and
push
pushf
sub
push
dec
int
xchg
fwait
sub
jne
fwait
sbb
xor
popa
xchg
js
pop
ja
xor
data16
adc
cmp
ss
aas
add
push
movsb
dec
loopne
fadd
push
fs
dec
jp
icebp
pop
sbb
je
dec
mov
cmpl
je
sbb
test
xchg
xor
dec
stos
mov
insl
cmp
or
mov
dec
cltd
xor
jno
or
ja
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
nop
push
add
xchg
add
add
add
sbb
sbb
add
add
add
adc
adc
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
