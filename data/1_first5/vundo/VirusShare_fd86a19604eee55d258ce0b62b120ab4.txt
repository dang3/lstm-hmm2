fdivs
push
int3
ret
sub
sarw
sub
xchg
jle
jnp
mov
xchg
mov
testl
mov
inc
pop
fisubs
sbb
sti
iret
push
cmp
sub
push
mov
xorl
or
and
mov
mov
pop
int3
mov
int
lds
in
lahf
daa
mull
inc
or
cli
jg
call
xor
stc
mov
adc
jno
and
adc
jbe
pop
bound
push
xchg
insl
addl
loop
es
mov
adc
pop
sbbb
in
dec
pushf
sbb
movsb
xchg
cmp
ss
dec
or
dec
mov
lret
test
sub
movsb
stos
adc
loopne
cmc
cmp
sub
pop
mov
adc
push
jp
sub
jmp
scas
cmp
je
mov
sub
jae
pop
cmp
cli
inc
iret
mov
cmp
adc
stos
cmp
andl
lret
ficomps
es
out
xlat
jmp
pop
popa
dec
test
mov
fisubrs
sbb
push
stos
out
addb
into
inc
nop
clc
mov
nop
leave
mov
push
mov
nop
loope
leave
arpl
push
leave
dec
or
xchg
xor
push
pop
and
pop
xor
idiv
and
adc
jo
bound
insb
cwtl
fldl
pop
xor
jo
lods
xor
xchg
mov
nop
in
imulb
xchg
aaa
dec
cmp
xlat
test
push
push
fdivl
xor
rcll
mov
jle
mov
rcl
add
nop
test
mov
jnp
inc
dec
mov
and
fidivrl
adc
push
shlb
shlb
xchg
lcall
mov
add
or
add
pop
and
lret
xchg
mov
jns
mov
mov
out
add
sub
mov
lock
sbb
loop
test
test
sub
xchg
mov
shrb
fcmovb
inc
xchg
int3
sbb
xor
aaa
xchg
xor
push
or
xchg
jle
orb
add
enter
push
sahf
fstp
cmpl
mov
mov
dec
jl
or
js
sbb
aas
xadd
outsl
adc
xchg
lods
mov
aad
xchg
out
ljmp
dec
cltd
mov
dec
repz
psadbw
add
push
pop
dec
adc
sbb
push
aaa
xchg
cmpsb
inc
adc
pop
rol
xor
leave
mov
pop
mov
enter
mov
out
jo
bound
sbb
lods
dec
lret
add
pop
gs
mov
pop
push
cmp
mov
lret
add
call
xor
aad
jno,pn
adc
popf
fs
arpl
mov
mov
outsb
add
mov
insb
push
sub
add
icebp
hlt
bswap
push
ja
fistl
data16
cmp
mov
inc
insl
xchg
loop
into
cli
repnz
inc
gs
xor
fmulp
aam
fsubrs
enter
das
sarb
add
scas
dec
in
xchg
cmp
push
pusha
fmul
dec
iret
maskmovq
divl
sahf
gs
xchg
movsl
repnz
rorb
jmp
sbb
in
decl
mov
sbb
in
and
sub
fdivr
call
ja
in
jp
shr
subl
cmpl
sbb
pop
pop
bound
cmp
repnz
jb
inc
daa
inc
xchg
aas
out
outsb
and
mov
pop
mov
cld
pop
dec
xchg
and
sbbl
xchg
enterw
mov
hlt
pop
data16
adc
jnp
lods
mov
sub
mov
or
ficoms
push
dec
in
cmpsl
sbb
fsts
mov
xor
cmpsl
mov
or
fsubrs
movsb
jmp
test
pop
dec
xorb
and
sbb
iret
call
lea
add
xor
insl
repnz
rcl
adc
dec
mov
sub
pop
xchg
pop
mov
pop
cld
sarb
out
mov
movsb
stos
jno
jp
pop
cs
mov
shlb
in
call
in
pop
ffreep
add
je
mull
in
lods
inc
mov
addr16
repnz
or
pusha
in
or
int
sbb
mov
pop
jecxz
cmc
pop
mov
cmp
sub
outsb
xchg
xchg
jnp
cmp
jae
push
insl
fdivrs
dec
and
pop
jmp
xor
push
loopne
sub
push
jp
popf
popa
xchg
dec
pop
add
inc
aaa
out
sbb
enter
add
adc
mul
call
adc
pop
shll
fidivs
cmp
mov
sbb
insb
std
cli
jne
sbb
or
adc
inc
roll
aam
ss
lds
loope
rorb
xchg
test
frstor
addb
and
mov
cmp
test
cld
std
jl
icebp
jno
pop
cs
dec
mov
dec
test
mov
pop
pushf
push
lds
sbb
xchg
nop
cmpsb
cmpsl
in
fdiv
xchg
cltd
xchg
xchg
hlt
push
inc
test
jmp
fcompp
ja
mov
xchg
sbb
push
dec
adcl
push
daa
cltd
mov
sbb
jge
icebp
js,pn
sub
mov
movl
cmp
mov
pop
or
inc
xchg
das
inc
sub
mov
shll
xchg
jb
fists
adc
adc
cmp
xor
xor
cli
jl
inc
mov
notb
xor
mov
ficompl
jg
and
push
fsub
aad
xor
addr16
xor
push
lock
in
xor
andl
lock
sahf
jo
push
lods
stc
xor
movsl
fmulp
in
push
popa
sbb
push
or
cmovl
xor
arpl
outsl
test
sub
mov
cmp
jge
lcall
shl
leave
jecxz
mov
and
stc
lock
push
iret
outsb
xchg
in
shll
or
daa
cmp
inc
fs
push
sub
call
les
jmp
jg
scas
pop
mov
adc
leave
push
addl
or
aad
inc
or
dec
idivb
sbb
xchg
adc
mov
iret
scas
in
stos
shl
push
dec
add
cwtl
push
xor
loope
push
cmp
jno
adc
sbbl
out
xchg
out
ja
cwtl
lret
loope
test
dec
fwait
or
cs
sbb
filds
jmp
fninit
dec
cwtl
fwait
mov
or
mov
push
sub
out
pusha
push
into
xor
in
icebp
loop
pop
pushf
pushf
xor
lahf
pushf
ljmp
sbb
jae
sahf
nop
pop
fwait
adc
das
xlat
and
push
pop
fidivrl
daa
clc
std
cmp
jl
or
aas
pop
xchg
adc
lods
insl
mov
fisttps
and
or
xchg
or
aaa
add
adc
xchg
jno
mov
in
adc
fisttpl
ret
xchg
xor
add
mov
je
dec
int
scas
jno
aad
push
cmp
lahf
jg
mov
dec
mov
int
pop
jb
outsb
loopne
pusha
push
test
and
icebp
out
mov
xlat
stc
push
pop
add
mov
and
inc
dec
xchg
sbb
scas
add
add
mov
jl
lret
lret
mov
or
dec
dec
movsl
gs
mov
fcomip
xor
xor
ret
xchg
mov
dec
push
aad
jl
js
fnstenv
sarb
ljmp
lods
shlb
cmovno
mov
jmp
enter
add
in
clc
jecxz
insl
push
xlat
aam
xor
or
aas
ljmp
hlt
jo
xchg
push
int3
pop
push
arpl
movsl
inc
ss
adc
jbe
add
jns
adc
jne
sub
into
pop
shl
clc
or
mov
loopw
dec
out
lret
movsb
add
inc
imul
cmp
push
das
movsl
pop
ljmp
mulb
lea
pop
ficoms
movsl
in
icebp
lods
mov
pop
mov
aas
sahf
bound
cmp
inc
xchg
and
xchg
or
mov
loope
cli
adc
push
mov
in
inc
jno
sahf
push
xlat
insb
adc
leave
orb
dec
adc
pop
loopne
insb
daa
pop
cli
cmpsl
jbe
inc
rol
adc
xchg
dec
mov
mov
sarl
fstpl
loop
lock
icebp
cmp
cmp
mov
or
mov
cld
or
cmp
outsb
ret
in
push
xchg
dec
inc
faddl
ret
pusha
dec
in
jecxz
fidivs
test
pop
fcoms
sbb
lret
mov
jbe
pusha
inc
test
out
je
les
cli
cld
arpl
push
outsl
loopne
in
mov
js
orl
fs
push
add
das
les
jp
mov
add
outsb
pop
inc
mov
dec
shlb
dec
lret
jbe
subl
dec
and
jbe
data16
cmp
add
jnp
and
lock
jns
pop
add
xchg
push
jecxz
fdivrl
je
xchg
mov
or
inc
sbb
mov
scas
imul
inc
cs
sub
mov
roll
pushf
aas
incl
testl
adc
insl
pop
movsl
sbb
int3
sbb
shll
lret
dec
inc
pop
out
lahf
inc
mov
mov
imul
inc
adc
xor
cmp
aaa
xor
pop
int3
popf
mov
ds
pop
push
arpl
cmpl
test
ljmp
sub
clc
sbb
andl
adc
cmp
jp
fs
and
sub
mov
addl
lds
and
mov
sbb
and
pop
mov
daa
mov
out
dec
add
push
sub
jae
dec
js
lock
cmpsl
cld
jge
data16
out
les
out
and
test
mov
int3
push
imulb
mov
cmp
mov
insb
clc
sti
pushf
je
mov
jb
mov
ljmp
into
xor
int3
jp
adc
movsl
repz
sbbl
cmc
xchg
jae
out
cmpb
and
cmp
fs
cmp
rorl
lds
xchg
push
cmp
dec
imul
icebp
push
inc
sti
xor
iret
addr16
dec
xchg
lods
test
pop
dec
fisubrl
pop
test
mov
mov
xchg
add
xor
cmp
ljmp
int3
in
push
ret
iret
push
dec
jp
inc
fst
jp
in
imul
xor
ds
adc
push
lea
cmp
lock
cwtl
mov
xor
scas
nop
dec
adc
repnz
fdivs
call
rcrl
iret
xchg
lods
mov
lea
jne
cmpsl
shll
lds
push
dec
mov
mov
and
sbb
sahf
out
inc
movsl
push
mov
sub
pop
int
icebp
mov
ss
push
xchg
xlat
inc
scas
addr16
mov
jno
lea
orb
and
stos
pop
in
inc
sub
push
mov
rcrb
ror
mov
xchg
cs
jecxz
mov
fwait
lcall
aad
and
ds
jae
data16
insl
dec
pushf
out
andl
jno
or
lock
pop
adc
lock
je
cmp
into
push
stos
and
js
mov
rolb
adc
stc
mov
inc
jmp
jmp
popa
add
mov
jnp
and
pop
pop
lret
xor
cmp
fisttpll
xchg
sbb
or
adc
insb
push
enter
dec
mov
in
cmp
add
xchg
pop
and
pop
inc
mov
pusha
or
test
neg
out
adc
imul
std
lret
jo
mov
pop
lret
out
xchg
sub
cli
and
filds
mul
cmpsl
jbe
jb
lods
inc
int3
test
mov
sbb
jo
test
and
sbb
push
sbb
fwait
dec
add
enter
fwait
ret
xchg
adc
sub
inc
cmp
std
fmull
sahf
rcr
xchg
inc
xor
mov
out
jb
js
loopne
push
mov
lods
orl
aaa
push
jg
xorb
cmp
pop
test
in
jl
fimuls
ja
lret
cld
xor
and
bound
and
jge
movsl
and
test
cwtl
jmp
insb
push
mov
push
cld
or
es
out
ss
cmp
jecxz
jbe
repz
pusha
pop
sbb
sub
enter
mov
imul
jle
scas
fnstenv
outsb
xorb
shl
mov
or
bnd
fisttpll
jnp
lcall
cli
andb
outsb
fbstp
lds
std
cmp
imul
pop
or
pop
mov
test
fisubs
mov
in
adc
in
js
out
orl
pcmpeqb
cs
in
lcall
jle
or
or
cmpsl
mov
in
lock
push
mov
push
aas
cmp
jge
pop
mov
sub
int
mov
sub
test
cmpsl
outsl
mov
or
enter
test
stos
daa
lds
adc
and
jl
test
push
out
int
and
in
inc
sub
in
fisttps
and
push
inc
fimuls
out
rclb
pushf
jecxz,pn
out
dec
hlt
into
cltd
lock
movsl
mov
icebp
icebp
mov
aaa
outsb
mov
jp
mov
mov
clc
mov
add
jo
sub
pop
aaa
push
popa
cmpsl
cmp
shrb
sub
sbb
pop
into
std
pushf
mov
pop
popf
hlt
scas
leave
and
pop
cwtl
jbe
mov
sbb
iret
push
sub
jns
add
sbb
mov
pop
push
cmc
push
sub
pushf
sbb
fs
jp
imul
inc
ljmp
cli
jns
std
cmp
cmp
mov
mov
and
or
ret
insb
imul
loopne
or
inc
enter
ljmp
or
pop
scas
xchg
test
and
jp
or
fisubrs
subl
das
incb
push
jp
out
cwtl
sub
mov
adc
xchg
mov
jecxz
add
jns
add
cmp
push
call
dec
sbb
mov
push
add
adc
adc
mov
mov
repnz
mov
faddl
xor
cmc
sbb
fistl
popf
fs
mov
frstor
sar
inc
pop
cs
fisubrs
mov
subb
jae
inc
fisttpl
das
loope
fsubrp
add
shr
outsl
popa
mov
outsb
push
adc
add
sbb
mov
loopne
lcall
jge
mov
fstpl
xor
lcall
movsl
mov
loop
dec
outsl
inc
call
inc
mov
or
pusha
jbe
push
movlps
pop
inc
mov
or
mov
mov
outsb
jnp
adc
dec
xor
test
lahf
cmp
jl
call
push
add
jp
pop
xchg
sub
push
movsl
call
push
in
or
outsb
and
mov
scas
aaa
sbb
or
rcrb
cmp
lods
fsubrs
imulb
ss
mov
lret
sbb
in
and
pop
mov
adc
loop
sub
push
mov
push
or
in
movsl
out
inc
inc
sub
xor
adc
adc
test
pop
shlb
sbb
cmpsb
cli
cmp
test
push
mov
scas
dec
jecxz
fs
outsb
sub
dec
enter
cmc
mov
xchg
sub
test
dec
mov
fdivr
ss
adc
rol
cmp
sahf
mov
xor
xchg
cltd
add
call
ficompl
mov
mov
sub
xchg
adc
lret
outsb
call
insl
cmp
and
xor
subl
mov
push
xchg
popf
jo
js
xchg
adc
pop
and
mov
fbld
insb
dec
xchg
pop
jmp
inc
loopne
and
jmp
xor
adcl
fcoms
test
cwtl
sbb
ja
sub
xchg
or
push
aaa
jge
jge
adc
push
movsl
js
mov
data16
adc
sbb
popf
fxch
pop
xor
dec
inc
aaa
pop
mov
in
movsl
inc
push
dec
xchg
pop
jmp
xrstor
mov
test
jae
jno
scas
mov
mov
mov
mov
sub
shll
gs
mov
aas
cmpsb
out
les
data16
pop
popl
es
out
mov
mov
adc
inc
push
xchg
mov
sbb
rcr
push
call
test
add
jno
lds
sub
mov
push
call
mov
or
lcall
sar
mov
sub
js
or
push
call
jnp
mov
gs
testb
push
jmp
add
ds
xor
mov
ffree
pop
jp
aas
mov
loopne
cwtl
int3
cmp
imul
sbbl
mov
sbbb
cli
jns
fisubrs
popf
xchg
mov
test
pop
mov
mov
adcb
mov
adc
scas
adc
ljmp
dec
int
or
mov
mov
mov
fwait
out
jno
loopne
mov
cmc
sti
xor
or
imul
nop
fnstcw
stos
sbb
out
or
rol
xlat
dec
push
lret
mov
das
out
je
xchg
shll
adcb
cmpsl
pushf
lahf
sti
nop
mov
fstl
sbb
cmp
xorb
rclb
adc
cmp
movsl
mov
sahf
jo
lock
jo
fistps
dec
shr
movsb
out
movsl
mov
inc
xor
iret
lds
cmpl
in
inc
adc
cltd
adc
jo
xor
test
push
inc
test
lcall
mov
inc
aas
stc
jg
add
inc
ja
in
push
xchg
icebp
mov
clc
jb
adc
sub
repnz
push
imul
sub
fcoms
cs
xchg
daa
movsl
adc
int3
mov
nop
and
mov
cmp
mov
js
pop
sub
sti
lods
stos
cmpl
fcompl
aas
mov
mov
aad
sbb
sysexit
sub
das
loope
lcall
and
xchg
adc
dec
inc
lea
jnp
ja
setb
lcall
rcrl
mov
jns
cmp
in
push
shlb
add
push
jbe
cwtl
xchg
xlat
inc
loope
mov
cmpsb
push
cmp
imul
xchg
inc
xor
pop
xchg
jo
push
es
and
inc
fs
push
cs
jmp
test
nop
adc
mov
inc
add
jge
mov
lea
jecxz
adc
cltd
lods
add
cmp
ss
out
pop
das
cmp
push
dec
outsb
pop
sbb
das
add
jl
or
scas
mov
imul
cmp
out
roll
inc
jbe
xchg
and
ds
std
hlt
js
sbb
sbb
push
mov
xor
inc
stos
sub
or
mov
pushf
dec
and
cmp
inc
fs
inc
xchg
popf
jp
mov
loop
sarb
dec
dec
xor
jle
pop
adc
sub
mov
data16
fidivrl
ret
shlb
out
test
sub
xor
andb
jl
and
ret
adc
dec
js
mov
js
or
pop
cltd
ficompl
sub
data16
movsb
cmp
andb
sbb
mov
popa
jo
xchg
sbb
mov
arpl
fimuls
shll
push
loop
inc
and
in
push
hlt
std
push
lcall
push
stos
and
out
mov
add
jle
loop
jne
out
in
inc
add
out
iret
jae
leave
out
and
add
test
scas
push
sub
push
jl
sar
add
mov
ljmp
or
jne
shrb
ja
lds
and
inc
sub
popa
push
cltd
dec
pop
pop
in
fildll
imul
rclb
sbb
mov
push
inc
mov
movsb
pop
pop
sbb
add
rol
loop
test
cmpsl
fisttps
lds
ret
sbb
ret
inc
push
dec
mov
jmp
movsb
inc
push
sbb
adc
fisubs
xor
jae
ds
pushf
jmp
cmp
jg
sbb
dec
test
aas
mov
adc
lret
xor
mov
push
pop
dec
jmp
pop
shlb
notl
sub
insl
mov
xchg
mov
and
loope
push
mov
mov
inc
adc
or
add
push
dec
in
sti
push
dec
std
inc
test
jno
addl
xchg
inc
or
xchg
addr16
pop
sub
push
cwtl
push
adc
xlat
int
lock
push
sub
js
sbb
fdivrl
and
mov
into
add
cmp
sub
jmp
int3
push
push
add
fwait
pop
adc
cmp
sbb
adc
jmp
dec
les
ret
fs
lea
pop
sub
and
dec
sub
push
jns
mov
add
test
int3
das
and
fiaddl
inc
lcall
cld
xor
sub
push
inc
cld
push
clc
andb
jl
ljmp
mov
inc
mov
cmp
jp
adc
outsb
bound
insl
imul
mov
adc
mov
add
mov
pusha
pop
mov
jo
adc
cmp
dec
sbb
aam
insb
xor
add
and
sarl
insl
sub
pop
jp
mov
movsl
push
push
js
loop
sbb
cmpsb
flds
inc
adc
jnp
and
xor
stc
clc
xchg
xor
hlt
cmp
or
test
xor
mov
jl
std
push
or
rorl
mov
or
xchg
test
pop
cmp
stos
lea
pop
aaa
imul
xor
cmpsb
sarb
mov
out
pop
mov
leave
movsb
inc
and
shll
sbb
inc
or
pop
xchg
into
rolb
loope
cmp
inc
jno
xchg
or
ds
mov
cmc
push
cmpsl
scas
icebp
repnz
out
mov
lahf
push
mull
push
arpl
rcrl
sub
dec
rclb
xor
xor
adc
mov
clc
aad
xor
scas
daa
xor
int3
inc
push
loopne
ss
pop
movsl
xchg
pop
xor
sbb
adcl
cmp
sahf
lock
pop
stc
sub
pushf
sbb
inc
fidivl
push
stc
add
lock
lcall
mov
in
aad
test
jmp
add
mov
mov
dec
mov
not
les
dec
xor
arpl
and
mov
push
adc
push
cwtl
adc
lock
mov
fisubl
xchg
test
add
xadd
cltd
addr16
push
cmp
dec
outsl
fcomps
int
pop
pop
std
cld
in
mov
cmpsb
mov
dec
cmp
push
or
stc
int3
or
xor
fldt
ret
fnsave
lret
fistps
xchg
jno
rcrb
pop
and
ror
movb
sbb
ljmp
sbb
and
pop
fistl
aas
xchg
add
test
jge
inc
xor
fstps
testl
movsl
sub
add
dec
pop
pop
push
lea
flds
cmp
mov
and
jmp
imul
test
cmpsl
sbbl
add
mov
lea
push
in
xor
xchg
mov
inc
sarl
mov
mov
test
psrlw
sar
cmp
pop
das
lret
dec
xchg
cli
push
push
push
inc
addr16
mov
pop
cmp
sbb
clc
or
out
outsl
addr16
fldcw
in
xchg
push
xor
mov
iret
ja
scas
lods
loop
mov
cli
pop
inc
js
out
and
fwait
fs
lods
je
in
cmp
dec
lahf
movsl
movsl
lahf
arpl
adc
cmp
andl
mov
mov
faddl
jbe
pop
sub
mov
push
pop
outsb
popa
fs
pop
dec
pop
shrl
clc
aaa
js
xor
cmp
dec
call
mov
stos
add
mov
jle
call
add
add
in
int
lret
outsl
mov
bound
jbe
xchg
jmp
and
dec
orl
sbb
cmpsb
ljmp
fadd
test
out
icebp
ljmp
jl
sbb
inc
mov
aam
stos
bound
mov
push
adc
je
inc
fs
js
fiaddl
inc
adc
jp
stos
adc
popa
dec
mov
pop
mov
jnp
jl
fsubp
or
loopne
jl
rolb
mov
mov
xchg
nop
out
inc
add
adc
push
pop
ja
add
stos
daa
xcrypt-ecb
aaa
adc
enter
lock
in
jp
std
mov
lods
xchg
mov
jo
mov
ds
imul
mov
jp
leave
jle
inc
sbb
cmp
lcall
mov
mov
push
lret
mov
int3
addl
jno
outsb
data16
call
stc
xchg
mov
sbb
or
add
xchg
pop
je
sbb
rclb
rorb
mov
push
xchg
push
push
scas
js
cmp
push
mov
imul
pop
addb
jecxz
in
sahf
aad
mov
add
cmp
xor
insb
sub
push
dec
adc
adc
and
jno
mov
mov
mov
adc
enter
shrb
fistps
sbb
ds
mov
push
mov
xor
cmp
fstps
call
add
rorl
mov
dec
pop
xor
pop
imul
cltd
add
cmpsb
ret
xlat
sub
dec
push
testl
ret
pop
addr16
ss
repnz
cmp
bound
pop
sub
mov
out
invlpg
xchg
inc
mov
in
adc
stc
jg
lea
xor
hlt
pop
insl
sub
fisttpl
in
xor
and
mov
clc
inc
test
xchg
mov
test
scas
push
insb
mov
std
sbb
popa
sub
mov
mov
sbb
testb
jbe
pop
lea
stos
dec
loope
push
cmp
fnstenv
fwait
mov
jecxz
sub
sub
adc
test
add
xchg
push
push
inc
mov
pop
call
test
mov
int
les
ds
adc
aad
mov
popa
stc
jo
stc
int3
mov
mov
or
fistl
outsl
movsb
mov
jle
cmp
into
adc
and
adc
aad
xor
or
cmp
scas
mov
cmc
adc
addr16
pop
popf
xchg
je
push
mul
jl
adc
imul
std
je
popa
sub
mov
cmc
jp
cmp
sbb
and
nop
movsl
pop
add
lods
fwait
push
icebp
sub
loop
sar
imul
movsb
jp
movsb
dec
shlb
adc
sti
loope
adc
adc
clc
movb
lcall
mov
inc
enter
adc
sub
popf
sbb
test
ficoml
fmull
insl
insb
push
sbb
or
clc
cltd
and
les
loop
inc
push
mov
enter
dec
mov
mov
clc
faddp
out
mov
jae
sub
xchg
pop
movl
jbe
or
mov
mov
push
nop
call
scas
sahf
std
cmp
xor
sub
push
subl
xor
aam
dec
mov
cmp
into
popf
stos
or
std
add
jecxz
insl
dec
fwait
and
jns
repz
push
cmc
jg
add
sahf
icebp
mov
ss
mov
dec
je
inc
inc
push
and
xor
movsb
std
cmp
test
lret
aad
sahf
nop
sub
xchg
mov
icebp
cmp
arpl
dec
stos
cmpsl
pop
push
and
lahf
in
bound
xorl
cli
gs
outsl
call
idivb
and
in
push
xor
fnstsw
inc
pop
aam
cmp
jno
sub
out
jne
mov
cwtl
call
cs
mov
int
xorb
adc
outsl
ret
jbe
repz
movsl
cmp
call
add
fcmovb
push
cmp
or
dec
ds
push
ret
cmp
add
sub
inc
jmp
int3
aaa
adc
in
mov
jg
mov
ret
aad
mov
jbe
jl
fld
mov
pop
cmp
mov
scas
add
loopne
xchg
dec
outsb
and
adc
xor
push
scas
into
lds
mov
add
dec
jge
mov
pusha
ficompl
adc
xchg
jb
dec
arpl
outsl
stc
in
out
pop
adc
pushf
in
insl
adc
mov
sbb
xchg
shll
cmp
mov
cltd
lock
scas
js
xchg
divb
pop
pop
cmp
jp
pop
scas
jmp
popf
ljmp
stos
loope
pop
mov
es
dec
test
popf
inc
xchg
enter
adc
mov
or
sbb
gs
notb
mov
or
mov
ficoml
adc
jnp
and
lea
notl
icebp
ror
in
push
sub
stos
pop
sub
dec
jns
divl
inc
push
pop
xorl
push
push
push
cmpsb
into
ljmp
dec
call
jo
mov
push
hlt
loopne
in
add
mov
add
loope
mov
je
mov
dec
or
fisubrs
adc
iret
cmc
sbb
lods
sbb
inc
ss
fwait
cmpxchg
std
sub
add
jbe
imul
jo
jp
mov
sbb
sbbb
pop
cwtl
mov
int3
mov
stos
in
xchg
lods
fwait
sbb
add
test
cmp
mov
lcall
sub
pop
daa
loop
dec
nop
add
stos
adc
xchg
mov
repz
dec
xor
lock
fs
neg
fdivr
leave
and
mov
push
dec
leave
arpl
or
mov
or
mov
mov
xor
adc
or
test
test
push
into
dec
sbb
mov
cld
popa
lea
loope
jns
into
jg
jle
mov
hlt
addr16
push
push
jno
cmp
cmp
push
push
sbb
lods
mov
cmp
mov
xchg
sbb
xchg
jnp
xchg
data16
cli
ss
pushf
lea
cwtl
sbb
lea
mov
or
pop
jp
mov
filds
fistl
pusha
jmp
aam
in
sbb
push
pop
icebp
mov
test
in
xor
pusha
gs
lcall
lods
sbb
xlat
sub
xlat
scas
scas
adc
pop
cmp
ret
outsl
push
jbe
mov
mov
dec
movsl
iret
hlt
adc
pop
std
add
inc
push
and
sbb
pusha
shrb
lea
lods
pop
std
mov
inc
and
js
lea
lcall
lock
int
fdivs
sbb
push
push
aad
jle
inc
xor
add
pop
jno
cmp
std
sub
movsl
scas
add
pop
inc
sub
lea
xlat
xchg
dec
mov
in
popa
or
fcomps
scas
cwtl
mov
jbe
xchg
inc
ffree
sub
pcmpeqd
hlt
pop
pop
xchg
jnp
adc
lret
ds
rorb
pop
mov
arpl
inc
mov
cmp
pusha
ret
xchg
arpl
pop
imul
jb
out
pop
stc
scas
pop
adc
in
in
mov
xchg
adc
subb
stc
fsubl
and
cli
mov
stos
mov
push
sbb
inc
in
and
inc
dec
cmp
pusha
mov
cld
mov
mov
mov
jns
pop
or
cmc
cld
flds
adc
sbb
addl
mov
subb
je
imul
jmp
xchg
negl
adc
imul
es
cmp
pusha
and
mov
jns
jne
cmp
add
pushf
mov
out
push
insb
xor
pop
pusha
sbb
adc
mov
or
jne
inc
xchg
outsb
cmp
adc
lret
cmp
adc
mov
rol
insb
adc
sbb
and
ficomps
std
cmp
pop
jbe
push
clc
cmp
add
push
sub
adc
cmp
xchg
movups
cmp
xor
add
push
ss
push
cld
mov
in
shl
add
nop
cli
jge
int
mov
xchg
dec
pop
ss
cmp
cli
pop
push
pop
pop
sbb
and
adc
out
dec
in
repnz
nop
shrb
rcll
inc
mov
mov
mov
cmp
jmp
mov
push
clc
pop
mov
shll
add
nop
adc
test
or
push
call
aas
shl
popf
xchg
jns
mov
mov
push
fs
in
mov
mov
addb
ljmp
je
push
inc
xlat
jbe
jnp
pop
sti
pop
scas
jmp
ftst
sbb
dec
stos
xor
mov
dec
mov
xchg
xor
mov
mov
loopne
pop
inc
mov
xchg
sub
adc
loop
pop
mov
dec
js
pop
aam
xlat
mov
sub
push
int3
jge
push
adc
jl
adc
nop
test
push
or
sub
fisttpl
mov
insl
lcall
mov
push
xchg
mov
xchg
sar
jge
out
mov
and
xchg
mov
repnz
adc
cmc
dec
pop
dec
shl
mov
sub
idiv
mov
adc
leave
adc
pop
jmp
pop
mov
faddl
test
addr16
mov
sahf
push
jecxz
inc
nop
add
mov
mov
sarl
cmp
divb
push
and
testb
stos
icebp
lods
pop
mov
xchg
jnp
cmp
mov
mov
stos
jge
imul
xchg
subl
xor
xchg
dec
xor
sub
leave
adc
sbb
ret
and
call
adc
inc
cmpsl
in
mov
cmp
cmpsl
pop
aad
repz
scas
leave
loope
jmp
in
shrl
pop
divl
adc
testl
stos
fistl
push
cltd
in
jo
lds
lret
in
inc
fldt
je
inc
test
mov
lcall
ds
mov
jbe
pop
push
mulb
sub
loop
jns
xor
xchg
or
pop
data16
mov
cld
into
pop
movsl
push
mov
cmpsl
push
movsb
push
mov
xor
xor
mov
adc
out
mov
pop
mov
xchg
jae
xor
mov
lahf
in
cmpsl
mov
sahf
inc
mov
lret
mov
test
in
je
hlt
mov
mov
or
xchg
loopne
or
inc
mov
nop
jb
cwtl
add
jae
pop
jo
fnsave
ja
lock
insl
cs
sub
or
mov
int3
out
mov
insl
pusha
jno
lods
and
or
push
in
sub
push
incl
push
and
test
imul
repz
insl
and
or
sti
lret
inc
xor
pusha
mov
lock
es
ficompl
fstl
jle
daa
push
or
cmc
leave
mov
testb
call
repnz
dec
inc
jge
dec
iret
push
mov
xchg
test
jge
ret
jp
push
push
push
stc
adc
sub
shr
imul
dec
jp
mov
movsb
and
dec
out
rcll
mov
jno
or
pusha
xchg
pop
jp
js
js
shlb
mov
inc
scas
xor
push
xor
and
in
outsb
dec
jns
mov
out
rclb
sub
mov
xlat
loope
dec
or
xchg
pop
and
cmp
sbb
push
inc
push
sbb
fistps
outsl
adc
lcall
in
out
xor
push
std
ljmp
mov
mov
out
xor
les
call
pop
int
lock
mov
notl
cmp
fstps
fisubs
mov
pop
test
mov
lcall
push
sbb
add
xor
sbb
add
movsb
jb
lret
mov
fldt
es
mov
pop
shlb
inc
mov
call
cmp
cld
shll
test
or
and
jmp
xor
mov
gs
pop
adc
mov
stos
stc
cmp
lea
add
lods
dec
lret
cmp
imul
sbb
pop
into
clc
cmp
mov
popa
xchg
adc
and
sahf
std
fsubp
in
jp,pt
pop
cltd
subb
cmp
dec
add
jae
jmp
xchg
adc
cld
repz
repz
data16
jne
mov
sub
out
or
in
dec
cmp
mov
adc
and
outsl
aam
aas
fmuls
push
mov
mov
movsl
and
shl
push
sub
mov
loop
out
mov
xchg
jge
sub
cmp
test
add
ficoms
fcomi
ds
adc
outsb
lods
pushf
mov
dec
cs
push
adc
and
test
dec
movsb
int
repz
mov
out
mov
js
inc
arpl
gs
bswap
mov
adc
dec
ds
mov
push
repnz
es
xchg
outsb
add
jl
mov
cmp
mov
sub
test
cmp
mov
xor
sub
sub
mov
rcrl
int
repz
movsb
pop
dec
push
mov
mov
and
into
mov
add
sbb
sahf
sub
xor
ljmp
xor
push
xor
pop
sbb
jmp
xorl
lret
insb
std
out
mov
les
jbe
aaa
inc
adc
cmc
ret
push
and
mov
stos
mov
xchg
and
fiaddl
fstpt
push
inc
fdivrs
mov
ja
hlt
stc
ljmp
cmp
les
mov
and
cld
fisubrs
jg
jmp
gs
mov
and
sbb
lds
mov
xlat
repz
in
fildl
lock
or
je
out
js
cwtl
adc
pop
fsubr
adcl
stos
loop
xor
popf
into
js
sub
jno
or
jl
adc
mov
mov
mov
call
mov
or
imul
jle
leave
push
loop
mov
imul
js
mov
out
iret
dec
pop
push
repz
sbb
test
pop
dec
lods
sbbl
push
cmp
dec
pop
lret
sub
push
mov
ja
das
mov
or
sti
jnp
fsubl
mov
dec
xchg
dec
xchg
stos
push
dec
jno
dec
push
dec
adc
cmpsl
push
pop
fcomps
ret
out
push
scas
jecxz
ret
arpl
sub
jmp
jp
inc
rclb
aam
cld
loope
andps
outsb
push
stos
int3
xchg
int3
frstor
imul
daa
int3
mov
pop
jnp
lods
sub
cltd
jns
or
rclb
ret
sub
sarl
xor
adc
xchg
sbb
cli
sub
push
fnstsw
in
adc
add
nop
dec
ljmp
or
jae
mov
shl
dec
nop
addl
aam
jno
mov
mov
clc
push
mov
pop
sbb
jp
lahf
call
adc
fs
cmp
mov
ffree
sbb
pop
mov
cld
rorl
imul
xor
mov
mov
cmp
unpcklps
les
xor
mov
and
sbb
insl
fwait
cmp
inc
xchg
leave
lret
adcb
or
cli
mov
insl
push
mov
push
icebp
xchg
jne
push
push
sbbl
add
sub
xlat
sub
lcall
imul
incl
test
jecxz
out
fwait
fwait
shrb
cwtl
xor
fwait
mov
clc
adc
add
mov
cmp
dec
clc
out
xchg
add
jge
pop
cmp
cld
shl
and
icebp
movsl
adc
xor
rclb
dec
hlt
jb
rcrl
out
int3
rolb
mov
fdivl
es
loopne
sub
dec
aaa
and
jo
inc
add
adc
xor
outsb
pop
jbe
ljmpw
dec
xchg
mov
outsb
push
enter
push
aam
mov
loope
aaa
pop
mov
mov
cmc
mov
mov
push
cmp
pop
mov
xchg
xor
adc
jae
lods
dec
enter
sbb
inc
imul
stos
lea
mov
test
call
cltd
jle
lret
pop
mul
mov
addr16
push
adc
add
pop
or
add
je
jg
fists
repnz
fcmove
cmp
mov
out
pop
mov
xor
out
sbb
cmp
adc
mov
mov
push
jg
sbb
fldl
cmp
std
adc
jbe
xchg
add
xor
adc
shlb
jns
stc
mov
fidivrl
mov
pop
repz
mov
add
adc
cmp
pop
clc
or
adc
inc
xor
mov
pop
popa
dec
lock
dec
mov
das
adcl
pop
cwtl
sbb
pushl
cmpsl
adc
pop
fstpt
ret
jne
out
call
cs
adcl
sbb
push
aas
xor
ret
das
xor
jnp
dec
and
fisttpl
ret
scas
adc
jno
icebp
push
mov
xlat
movl
aaa
or
negb
dec
outsl
cmpsl
idivb
mov
mov
add
fadd
jne
sbbl
outsl
pop
fiadds
out
cmpsb
jp
mov
outsl
mov
jle
test
loop
cltd
sti
inc
fnstcw
pushf
dec
cwtl
pop
sahf
bnd
sbb
mov
lds
ss
stos
sub
jno
mov
stos
shl
rcrb
jmp
mov
mov
push
cmp
inc
mov
add
mov
bound
mov
cs
xchg
hlt
xor
push
lock
inc
lea
inc
das
xchg
clc
cmpsl
sarb
mov
jg
lcall
pop
loop
push
or
push
outsl
inc
iret
xor
and
leave
mov
xchg
jp
movsb
orb
add
sbb
je
pop
adc
js
fldl
xchg
add
cmpb
jns
mov
jl
xchg
push
bound
mov
fcoms
or
imul
and
leave
lret
jmp
jo
jne
pop
or
notb
cmc
repnz
add
add
sbb
lods
aam
or
push
jl
xchg
push
and
inc
pop
adc
fs
orl
fsubs
in
imul
scas
xchg
jp
ret
scas
add
imul
hlt
cmpsb
ds
fs
inc
je
dec
mov
sub
out
dec
inc
mov
daa
ret
add
movsb
dec
mov
push
sub
xchg
mov
pop
ret
pop
js
cmp
leave
sub
mov
ja
push
ds
sub
add
cs
lret
jnp
dec
movsl
nop
imulb
jne
lea
and
mov
mov
adc
mov
dec
call
pop
pop
xchg
or
pop
test
std
mov
jno
pushf
jl
repnz
xchg
mov
sbb
hlt
xor
mov
mov
pop
push
lret
jnp
jb
lahf
hlt
xchg
adc
lret
popf
xor
cmp
jb
inc
adc
jno
out
or
sbb
iret
ds
divl
out
mov
lcall
loopne
xchg
add
lea
stc
jmp
loope
jo
jp
and
insl
xchg
testb
cmp
push
add
mov
add
push
fsubr
andl
jbe
addr16
mov
lock
sbb
or
aaa
mov
stos
out
add
mov
aas
in
test
dec
push
fs
cmovnp
rcll
add
test
sbb
inc
mov
std
add
femms
repnz
cli
lods
cmp
loope
or
lods
push
cwtl
push
xor
inc
push
and
ret
mov
push
or
cmp
xchg
mov
pop
sbbl
inc
dec
pop
mov
push
sbb
and
loopne
stc
ds
sahf
xbegin
lods
jno
sub
ret
adc
mov
jl
sbb
test
push
cs
enter
stos
xor
add
inc
shrl
xor
inc
cs
loopne
idivb
inc
leave
cmp
cltd
sub
stc
repz
dec
inc
mov
int3
aad
xchg
mov
ljmp
cs
fs
jb,pt
push
jbe
push
fsts
test
nop
popf
cltd
test
mov
repz
addb
call
lahf
mov
or
adc
jge
xchg
mov
aad
stos
sbb
mov
xlat
sub
pop
or
add
mov
fmuls
loopne
mov
add
sbb
stc
mov
aam
dec
div
or
pusha
xor
dec
mov
or
inc
push
es
pop
jnp
jmp
stc
out
xchg
mov
cmp
jns
movsl
lret
in
pop
xchg
sarb
lds
out
pop
cmpsb
fnsave
loopne
add
test
fdiv
out
leave
xchg
sub
cltd
insb
mov
fiaddl
adc
loope
popf
sbb
pop
cli
test
outsl
xor
jecxz
jmp
dec
dec
mov
add
outsb
insb
sahf
lds
in
mov
add
push
add
mov
sar
in
mov
jmp
enter
fsubrl
mov
mov
popf
pushf
add
lret
cmp
mov
push
jbe
or
mov
jecxz
and
popa
andl
jmp
mov
jmp
fwait
std
sub
push
adc
test
push
out
sub
test
add
mov
jae
xor
leave
cli
or
cmp
mov
cli
clc
int3
inc
sahf
ss
loop
xchg
mov
ret
mov
and
sub
sbb
push
mov
shrb
aad
mov
scas
adc
pop
inc
xchg
iret
xchg
mov
mov
push
lods
jmp
js
sbb
insb
lcall
push
shl
sbb
jae
int3
cli
jns
xchg
sar
mov
xchg
dec
aaa
jae
sbb
rolb
adc
jbe
sbb
cmp
rorl
inc
cld
xor
dec
dec
loopne
jns
mov
xor
adc
xor
dec
dec
clc
xorb
mov
movsl
icebp
ret
aam
and
xchg
cs
or
rorl
rolb
inc
dec
push
test
add
push
push
enter
jmp
sbb
dec
or
std
mov
sti
push
fldl
xchg
loop
pop
in
cs
mov
mov
mov
sub
dec
mov
pushf
sti
sub
loop
push
insb
xlat
mov
push
push
adc
leave
sti
insl
pop
arpl
inc
test
arpl
cmp
loope
cwtl
pop
das
pop
int
insl
aaa
stc
js
push
dec
and
mov
flds
sbb
mov
cltd
xchg
and
bound
in
inc
and
out
imul
int3
leave
fwait
jo
and
pop
addr16
jne
clc
mov
lret
adc
add
push
or
lock
test
mov
xchg
xor
jle
aad
pop
gs
lds
insl
mov
mov
mov
arpl
mov
or
dec
aam
cmp
subb
mov
xchg
leave
mov
outsb
loopne
jno,pn
mov
pop
xor
push
rcll
nop
pop
or
lcall
fisubs
mov
aas
xchg
and
fs
jbe
test
mov
es
shl
insl
ss
fistps
push
ja
push
test
ret
sub
mov
aas
mov
jmp
adc
movsl
mov
jmp
sub
jmp
xor
push
adc
lahf
pop
sub
insl
mov
fildl
dec
test
cmp
fst
and
lahf
ds
push
arpl
repz
jns
sub
or
xor
or
aas
xorb
mov
adc
cmp
je
adc
push
popa
mov
insb
mov
sub
mov
psubb
rclb
imul
sti
pop
add
mov
jae
mov
add
fisttpll
mov
jo
dec
loope
jne
jo
and
pushf
insb
nop
jne
in
sbb
and
push
and
pop
insb
jmp
add
in
jl
pop
push
xchg
enter
xor
sbb
js
mov
dec
int
or
inc
mov
out
or
int
int
repz
movsl
mov
lahf
adc
add
cli
sub
hlt
sub
push
or
in
mov
out
arpl
sbb
xchg
inc
dec
outsb
rclb
ja
xor
repz
aaa
ds
pop
mov
insl
inc
add
xchg
dec
xchg
dec
xor
loopne
popa
jno
cmp
sbb
subl
cmc
out
inc
pop
cmp
ja
xchg
add
jl
insl
enter
sub
ds
pop
movsl
test
out
arpl
or
ljmp
repz
int3
or
data16
mov
sub
xchg
jge
cli
inc
add
imul
clc
xchg
jge
sub
mov
sbb
push
sbb
sbb
aam
pop
sub
pop
add
pop
pop
dec
sub
push
mov
dec
shrl
frstor
mov
movsb
cmp
out
hlt
mov
scas
lods
stos
and
in
cwtl
pusha
pop
fimuls
mov
or
imul
jecxz
or
ror
inc
xor
adc
xchg
cs
ljmp
adc
inc
jae
dec
push
jns
dec
fs
push
rclb
xchg
mov
sbb
mov
rolb
mov
lcall
inc
mov
popf
mov
dec
out
aas
add
loopne
rcrl
xchg
mov
xchg
shr
jg
sub
xchg
adc
add
push
cmp
std
mov
in
mov
xchg
imull
je
pop
repz
inc
cmpsb
xchg
mov
push
loope
sbb
stos
loop
cwtl
neg
pop
dec
mov
pop
sbb
push
or
push
or
and
mov
out
sahf
mov
ljmp
jno
fdivrl
mov
mov
inc
out
mov
leave
aam
ret
jg
dec
sbb
pop
mov
add
jg
ret
xchg
pop
push
xor
ret
cld
mov
fstpt
shl
mov
and
mov
inc
or
notl
pop
xlat
xchg
or
daa
mov
xor
inc
lods
aaa
cmp
hlt
test
jbe
popf
int
stos
ljmp
push
pop
mov
fcoms
imul
inc
lret
mov
mov
pop
adc
pop
aad
mov
in
xchg
jecxz
jecxz
sub
push
inc
add
ds
test
lods
into
popf
mov
pusha
xor
adc
mov
jb
mov
div
outsl
adc
fisubl
and
push
adc
sbb
dec
xor
stc
adc
xchg
xchg
dec
out
xorb
prefetch
or
mov
xchg
cmp
xchg
cmpsb
and
inc
xchg
and
fnstcw
cmpsl
pop
sarb
stos
add
sub
mov
arpl
je
xorl
add
jg
rorb
lods
adc
add
mov
and
inc
repnz
fistpll
dec
lods
inc
outsl
idivb
mov
daa
mov
pop
ret
inc
mov
cmp
js
mov
lods
sbb
mov
adc
lahf
cmc
pop
push
mov
call
fcompl
xor
inc
sub
fsubl
mov
insl
in
inc
and
push
in
popa
sbb
push
arpl
mov
lcall
into
pop
subb
xlat
push
mov
outsb
leave
imul
pop
hlt
add
mov
mov
and
mov
pop
ret
xchg
add
scas
sub
sub
mov
jno
aas
in
stc
addr16
inc
jbe
dec
mov
sbb
jb
lds
outsb
mov
push
mov
or
movsl
push
fldl2t
fcomi
lods
mov
divb
cvtps2pd
clc
mov
and
jbe
sub
sbb
call
shrl
xchg
dec
sub
imulb
dec
jns
push
dec
mov
loope
bound
addl
xor
sub
jae
popf
sub
xor
loop
test
pop
int3
xchg
sbb
push
and
call
shl
pop
push
rcl
dec
jl
cmpsb
pop
cmp
lock
sbb
ret
or
jmp
pop
mov
mov
jb
pop
lods
lcall
sub
cmc
int
repnz
test
xor
daa
fnstsw
lahf
mov
and
push
sarl
rorl
inc
inc
adc
mov
imul
cmp
add
dec
jbe
lods
push
push
enter
faddl
xor
notl
or
jo
pusha
out
test
shl
fcoms
pop
stos
dec
push
mov
xor
insb
insl
lds
dec
add
leave
gs
in
mov
pop
push
add
mov
pop
shll
pop
outsl
jo
push
aad
movsl
pop
xorb
arpl
inc
loope
adc
sub
pop
aaa
push
clc
imul
sbb
icebp
and
ss
lret
xlat
pop
int
ljmp
aam
push
lahf
arpl
jmp
jb
adc
leave
pop
push
orb
iret
sub
push
pop
dec
loope
jle
outsl
mov
adcl
xchg
mov
mov
xlat
hlt
sbbl
aam
sarl
fwait
push
repz
push
xchg
xchg
lods
scas
mov
test
inc
dec
sub
and
cltd
icebp
xchg
dec
sub
sbb
outsb
cmp
clc
cmpsl
mov
test
js
imul
insl
or
cmp
adc
or
jne
ds
aaa
icebp
pop
adc
aaa
outsb
mov
adc
mov
int3
sbb
xlat
sbb
cmp
mov
sti
scas
dec
enter
cmp
push
sbb
jmp
cmp
sbb
clc
repnz
cmp
push
mov
push
leave
sub
ljmp
dec
pop
sbb
cmp
mov
das
shrb
clc
inc
nop
nop
pop
mov
outsl
stc
scas
sbb
pop
pop
jae
xchg
push
icebp
xchg
mov
mov
mov
lock
ret
sti
cmp
rclb
mov
ffreep
jae
shrb
jecxz
lret
add
xor
inc
pop
dec
loop
loope
push
add
insb
pop
incl
movsl
xor
adcb
lret
xor
jbe
cmpsl
lahf
push
sub
fs
jns
jns
rcl
aaa
cwtl
fistpll
xor
mov
mov
jns
xlat
inc
mov
cmp
lahf
dec
shrl
xor
inc
mov
sbb
movl
out
lret
pop
inc
loopne
cld
lret
aas
aad
divl
addl
inc
mov
mov
mov
xor
pop
push
push
lret
test
cli
dec
stos
lret
test
pushf
mov
out
cltd
ljmp
negb
mov
mov
inc
sbb
mov
push
cmp
inc
pop
dec
aas
mov
nop
scas
add
in
mov
jo
cs
or
sub
mov
cmp
mov
mov
dec
lcall
push
repz
scas
jg
cmc
sub
mov
pop
idivb
xchg
hlt
lret
ds
repz
and
pop
ret
mov
push
cmp
mov
mov
fimuls
lea
push
movsb
adc
push
dec
add
inc
adc
insl
nop
sbb
adc
fs
aaa
fmull
pop
cmp
dec
mov
pop
jo
test
daa
stc
jmp
in
pop
int
pop
cmpsl
roll
inc
das
jne
fwait
cmp
lcall
out
adc
shll
jb
popf
lock
popf
popa
orl
dec
jmp
sbb
sub
mov
lea
negl
sarl
mov
mov
mov
mov
push
push
arpl
mov
sub
sbb
pop
jno
sti
add
inc
xchg
inc
xchg
addl
xchg
stc
cmpsb
testb
mov
jp
mov
mov
push
sbb
jae
push
idiv
push
nop
dec
dec
cmp
cmp
daa
leave
xlat
sub
lea
div
stc
dec
outsl
fisttps
call
cmc
mov
inc
cmp
mov
sub
test
fists
push
inc
aam
sub
scas
jbe
fwait
cmp
jmp
divb
push
loopne
insl
std
pop
js
jmp
xor
pop
ret
mov
push
shll
jbe
cmp
ss
and
imul
xchg
shlb
sbb
xchg
std
popa
imul
fneni(8087
push
and
push
ret
inc
xchg
dec
cli
sub
mov
xchg
rcll
cmp
out
ss
popf
push
frstor
xor
sub
loope
out
into
jne
shll
sub
lret
mov
jns
jp
sub
clc
movsl
fistpll
cltd
in
ds
in
lret
sbb
adc
cmpsb
shll
mov
cmp
jl
ficoml
adc
in
push
mov
push
popa
test
mov
mov
dec
push
xchg
sub
outsb
popa
into
push
fmull
mov
push
push
out
addr16
mov
test
inc
pop
int3
inc
cwtl
ja
adc
mov
xor
pop
pop
jno
insl
jl
push
jl
xchg
dec
cmp
mov
add
push
lahf
and
fisubrl
notl
shll
in
loope
add
jbe
aas
xchg
movq
mov
call
cmpsb
stos
fidivl
push
leave
rorl
and
push
test
stc
insl
cmp
mov
clc
jo
scas
push
mov
loope
mov
mov
ds
outsl
inc
nop
sbb
or
xchg
pop
add
add
lcall
push
ljmp
shl
push
dec
cs
pop
shlb
out
xchg
in
cmp
xor
xor
lcall
push
xor
sub
aas
lods
lock
fsub
or
rcl
aad
js
ja
cmp
cld
subl
loop
dec
test
gs
add
out
out
cltd
sbb
imul
test
mov
loope
je
mov
lret
jmp
and
and
sbb
repz
pop
sbb
jge
movsl
test
add
jg
and
lods
shll
ljmp
ficomps
sbbb
mov
adc
cmp
adc
cwtl
cmpsb
push
xor
mov
xchg
pop
cmc
out
sbb
jne
fdiv
xchg
push
test
dec
mov
sub
and
jne
setae
fistps
mov
mov
repnz
addr16
dec
cmp
xchg
cld
ficompl
insl
mov
cmp
push
mov
jecxz
mov
fnstsw
and
pop
xor
mov
or
add
mov
rclb
mov
sub
aad
xor
lods
pop
pop
push
fcmove
or
mov
iret
cmp
jo
or
sti
test
imull
testb
nop
jo
adcb
sub
jle
cltd
jmp
and
mov
scas
mov
imul
das
pop
mov
fcompp
push
pushf
mov
or
sbb
inc
dec
icebp
cmp
lcall
push
mov
xchg
inc
inc
inc
aam
mov
cwtl
push
mov
je
aaa
fsubp
fisttps
pushf
fadd
sub
sub
xor
imul
cmp
aam
jp
movsl
jns
sub
rcll
icebp
sub
roll
xor
arpl
pop
movsb
es
jno
gs
push
adcl
mov
cmpsb
pop
push
adc
shrb
call
movsl
xchg
pop
scas
iret
xor
jnp
daa
push
xlat
out
movsl
lret
adc
sbb
nop
mov
in
mov
and
cmp
and
aas
inc
int3
fcomps
ss
mov
lea
jl
jecxz
dec
test
sub
mov
cmpsb
in
push
mov
call
mov
mov
shl
in
pop
adc
mov
pop
and
add
loopne
popa
mov
addr16
pushf
mov
or
outsl
add
push
jl
daa
adc
push
lea
inc
ds
mov
add
inc
aad
sbb
movl
cmp
xchg
add
scas
jns
addr16
cmpsb
sbb
jnp
popa
arpl
cwtl
add
sub
leave
add
test
dec
jl
jmp
and
mov
ret
and
andl
pop
jo
aam
xor
sbb
inc
iret
mov
addb
dec
das
inc
or
out
icebp
sbb
ljmp
push
in
cmp
xor
inc
arpl
jmp
clc
mov
add
push
or
repnz
scas
leave
cmp
aas
add
out
test
mov
cmpsl
lret
pop
mov
jp
int3
sub
mov
xchg
sbb
xchg
rorl
lret
in
lock
jb
pop
sti
call
jne
adc
notb
adc
sbb
mov
ja
insl
cltd
jp
lds
xchg
pop
push
fisttpl
sub
sbb
xor
popf
pop
jp
stos
mov
pop
xchg
lods
or
jge
aas
pop
fsubs
int
sti
add
dec
jns
fwait
rcll
fwait
cltd
int3
lcall
adc
jge
or
dec
pop
fldenv
ret
cwtl
xor
adc
in
mov
fidivs
adc
fsts
addb
dec
mov
dec
cmc
mov
pushf
lods
fdivl
into
in
pop
cs
pop
xchg
insl
mov
push
sbb
push
xchg
scas
xchg
adc
or
cmp
cmpsl
ja
mov
iret
es
adc
popf
out
mov
xor
inc
fistpll
xchg
add
shrd
fwait
std
mov
les
inc
jl
xor
addr16
add
mov
dec
inc
aam
jo
sarl
and
push
test
pop
popf
outsb
push
sbb
pushl
pop
mov
and
pop
ffree
cs
ds
roll
cmp
nop
push
pop
repnz
adc
repnz
jne
mov
mov
jg
xor
sub
sub
inc
test
sub
pop
popa
pop
sahf
aas
jmp
sub
icebp
lret
inc
cwtl
adc
mov
dec
jno
lcall
stc
lahf
adc
inc
loopne
xor
mov
mov
sbb
jg
inc
jg
sti
jns
mov
pop
mov
cmp
sbb
mov
sbb
push
dec
push
shlb
imul
or
cmpsb
lea
dec
xor
jb
out
jecxz
xor
or
clc
es
or
test
sub
cmp
leave
pop
mov
lcall
rcrb
fdivrs
inc
dec
divl
adcl
popa
mov
lds
pushf
add
jmp
int3
xchg
pop
pop
in
dec
cmp
in
mov
xchg
mov
inc
pop
cmpsl
dec
cmp
inc
cltd
ljmp
mov
jae
mov
xorl
xor
sbb
iret
adc
push
rolb
mov
insb
inc
int3
adc
jno
adc
fucomp
sbb
pop
aas
jnp
jbe
push
and
lods
filds
sub
fsts
mov
ds
les
sahf
fiaddl
test
sub
push
lcall
out
sub
bound
xchg
rcll
mov
fwait
adc
push
psubd
jg
iret
imul
shrb
xor
cmpsl
mov
sub
add
imul
xchg
clc
jg
enter
add
adc
insb
push
movsl
xlat
leave
sub
fwait
dec
loopne
and
jnp
push
call
or
sbb
xchg
or
adc
stos
xchg
dec
push
iret
lea
xchg
std
les
sbb
add
movsl
fucomp
xor
sub
cmp
or
push
in
cmp
ror
outsb
pusha
clc
or
lret
sbb
loope
test
cmp
popl
daa
cmc
and
dec
sbb
lock
pop
enter
mov
xchg
js
dec
mov
arpl
pusha
push
scas
int
cmp
sahf
arpl
cwtl
push
jge
int
add
inc
and
test
in
push
sub
test
test
cmp
cmp
aaa
test
xchg
pop
xlat
xchg
mov
xor
pop
jmp
pushl
pusha
in
cmpsb
jb
ja
testl
sahf
in
lea
shll
movsb
dec
jo
sbb
mov
call
inc
or
aaa
repz
or
dec
xchg
cltd
test
cwtl
mov
add
test
bound
xchg
push
out
or
or
push
xchg
and
push
sbb
adc
cwtl
ja
lods
sbb
fidivrl
lahf
fs
nop
and
cmpsb
mov
je
shrl
pop
xchg
mov
mov
push
sbb
lcall
enter
pushf
roll
jmp
cmpsb
ffree
lcall
jb
movsb
pop
mov
iret
xor
adc
adc
mov
pop
pop
and
es
stos
pusha
sbb
push
sub
push
mov
or
push
jg
mov
out
lahf
add
cmp
pop
inc
cld
inc
xchg
inc
fcoml
or
andb
dec
lea
stos
jbe
gs
ja
xorl
jle
repnz
inc
sbb
lods
shrb
lods
jmp
es
adc
rolb
push
jp
subb
int3
cmovns
cmp
addr16
xchg
clc
nop
sahf
jns
outsb
iret
adc
pop
imul
cmp
lea
and
icebp
leave
iret
pop
push
mov
lcall
leave
inc
data16
mov
lcall
xor
aad
out
mov
sbb
out
stc
cmc
and
push
sbb
add
imull
mov
sub
shl
mov
push
xchg
stos
dec
dec
ljmp
push
cmp
pop
cli
sbb
mov
loopne
pop
mov
in
cmpsl
stos
scas
push
gs
rcll
aas
cli
test
jbe
shrb
adc
movsb
das
test
test
test
orb
sbb
cltd
js
cmp
lahf
push
mov
shll
jmp
inc
mov
pop
loop
lret
dec
cmp
or
or
enter
sub
clc
pop
mov
dec
cmpsb
mov
loop
lcall
in
sbb
fcompl
scas
lods
push
and
inc
add
dec
mov
loop
xor
xlat
loopne
sbb
add
enter
mov
jl
and
pop
or
jge
sar
aas
icebp
lret
arpl
cmpsb
ss
mov
jecxz
mov
outsl
sub
outsl
mul
sbb
iret
aas
cmp
stos
fucomi
mov
cli
aad
sti
jno
mov
mov
jge,pn
lds
mov
mov
inc
push
pop
out
out
inc
outsl
mov
mov
push
push
dec
fs
and
fwait
mov
push
notl
in
fstpl
outsb
sub
xchg
incl
dec
add
mov
scas
sbb
and
push
jae
fdiv
icebp
or
push
es
cwtl
ljmp
adc
jmp
and
add
adc
stc
jae
jge
ds
push
push
xchg
xor
loope
shr
sti
out
repz
in
in
sbb
xor
aam
add
ljmp
cmpsl
add
sbb
jmp
push
mov
popf
xchg
icebp
jno
cmp
and
jecxz
sub
dec
push
push
roll
ds
xchg
xlat
cltd
out
ljmp
push
mov
inc
inc
or
test
cmpsl
and
dec
mov
cmp
sub
enter
lock
jae
pop
adc
sar
xchg
sub
push
sub
mov
in
call
pop
rcll
movsb
imul
inc
jle
mov
fnstenv
test
pop
in
outsb
adc
stos
lcall
jge
sbb
inc
add
xor
fcomp
loope
sarb
int
sbb
adc
inc
int
fstl
js
addr16
mov
data16
es
adc
inc
arpl
cmp
xor
dec
call
ds
inc
icebp
mov
push
roll
mov
lret
xchg
jle
cmp
out
push
add
xchg
and
repz
orb
repnz
sti
fldenv
pop
fyl2xp1
lds
sbb
jnp
xchg
test
and
xchg
xchg
mov
mov
popf
sub
xor
aam
test
cltd
lods
pop
adc
out
sbb
sti
sti
clc
jp
bound
add
stc
adc
and
pop
add
in
add
inc
push
adc
mov
enter
subl
movsl
shll
fiaddl
pop
bound
mov
fs
mov
in
and
sub
lock
hlt
aam
test
nop
outsb
mov
cwtl
xchg
push
or
mov
dec
adc
mov
testl
mov
mulb
inc
or
lret
jl
jmp
dec
push
pop
jno
std
pusha
cmp
movb
loopne
jne
stos
aam
jp
cmpsb
imul
pop
jne
add
movsb
sub
cmp
fiaddl
decl
iret
aam
jmp
sbbl
imul
push
push
fistps
ss
loope
pop
xor
xchg
nop
inc
inc
loopne
pop
jmp
pushf
fmull
rcrl
adc
scas
test
jge
fxch
ret
int
dec
gs
mov
cmp
mov
das
mov
cwtl
mov
iret
xchg
jge
push
inc
pop
xor
or
jg
loopne
jmp
dec
adc
push
mov
push
inc
movsb
test
cmpsl
dec
dec
xchg
sbb
leave
pop
xchg
arpl
lret
mov
mov
sbb
sti
rclb
cmpsb
int
aam
dec
or
lods
pop
sbb
cmp
stos
jno
xor
jge
inc
outsl
dec
popf
shrl
sahf
xchg
dec
sarb
rcrb
pop
xor
xor
cmp
repnz
les
cmpsl
push
in
repnz
cmp
or
lea
sahf
rorl
mov
dec
fdivs
scas
pop
mov
and
add
sub
out
jae
sub
mov
xor
das
faddl
jg
subb
in
mov
sbb
movsb
std
push
add
dec
sbbb
daa
cmp
inc
and
inc
addl
adc
sbb
data16
addr16
and
cli
cwtl
mov
dec
and
addr16
stos
fsubrl
jnp
inc
insb
pop
xor
fidivs
cmp
adc
in
stc
xchg
xchg
push
in
test
cmc
test
mov
jbe
cwtl
outsl
insb
popf
xor
testl
test
mov
in
sbb
cmp
je
push
lret
test
sub
pop
test
das
leave
sbb
clc
lahf
sub
shl
xchg
hlt
mov
mov
lcall
jl
loope
mov
push
push
sub
jae
popf
shlb
imul
inc
dec
sub
mov
fidivl
cmp
int
or
xchg
iret
mov
push
push
fsubr
test
std
dec
pop
repz
shlb
mov
test
jg
mov
inc
movsl
les
outsl
xchg
xchg
or
test
pop
js
in
arpl
movsl
and
hlt
ss
or
xor
aam
aas
pop
gs
rcrl
add
sti
jg
xor
sub
cmp
mov
mov
and
dec
lods
loopne
insl
add
aas
repnz
ds
aaa
cmp
sbb
jle
lds
jnp
cmpl
add
addr16
leave
ja
cmp
push
loop
push
cltd
stc
mov
mov
mov
cmp
rcrb
or
imul
test
push
popa
subl
adc
pop
add
paddb
mov
in
and
or
out
jo
mov
pop
mov
stc
sbb
ja
das
loop
gs
sbb
or
push
push
cmp
add
cmp
mov
out
mov
test
inc
ds
out
dec
or
push
mov
push
inc
xchg
xlat
movsbl
int3
inc
mov
add
std
mov
add
icebp
or
test
in
adc
out
rol
pop
sahf
insl
add
aaa
aad
fstl
adc
arpl
divb
lods
dec
aas
pop
mov
mov
cli
mov
lock
adc
addl
mov
int
lcall
add
sbb
clc
sti
mov
jb
jmp
xchg
mov
call
mov
mov
addr16
rcpps
lea
and
jmp
push
sbb
pop
addr16
dec
push
mov
clc
jle
mov
scas
call
adc
jb
int3
loopne
fstpt
jo
jae
cwtl
push
mov
ljmp
push
ljmp
pop
xchg
aad
cmp
testb
enter
call
jns
adcl
add
xchg
in
push
push
cmp
addr16
movsb
sbb
push
gs
js
rcll
push
in
mov
or
lds
das
rcrl
jo
lret
pop
jle
sub
bound
sbb
inc
or
xchg
mov
xchg
mov
addl
jo
pop
mov
jecxz
inc
or
pop
inc
push
adc
cld
addb
icebp
sub
fyl2x
fldt
push
int3
mov
inc
xchg
sbb
add
push
scas
push
adc
mov
call
sub
push
xor
popa
add
test
daa
test
xor
dec
cmpsl
scas
push
lods
mov
orl
adc
add
fistpl
jecxz
ds
fucom
scas
fdiv
aas
in
adc
xor
clc
push
mov
push
sub
jecxz
xchg
mov
icebp
fs
or
jb
mov
sub
mov
lods
and
inc
cs
cmp
mov
pop
ds
xchg
std
and
pop
push
xchg
pushf
insl
dec
scas
adc
jns
push
int
sub
mov
inc
mov
add
stc
ret
insb
push
cmpsb
push
orb
mov
cmp
out
pop
pop
xor
or
fcoms
not
mov
cmp
addr16
xor
jp
mov
les
rorb
mov
jge
fisttpll
shl
mov
push
jo
andb
fnstsw
pop
in
clc
add
xchg
xchg
xor
cmc
xchg
roll
jne
inc
jb
and
xchg
push
xor
dec
sub
int3
inc
stc
add
xor
ret
test
scas
mov
lods
int
lcall
jg
dec
cmpsb
xor
xor
xchg
pop
loop
popa
aaa
sub
xchg
pmaxsw
out
fcmovnbe
jb
mov
mov
rcr
dec
mov
out
ljmp
dec
inc
loope
xor
ds
fsubl
or
es
mov
add
js
mov
cmp
test
jae
int3
xor
icebp
mov
in
xchg
mov
fistl
stos
leave
dec
mov
insb
cmp
push
mov
decl
jl
sbb
jg
xchg
ja
and
aas
lahf
ror
fdivs
push
adc
jbe
nop
fcompl
aas
fwait
pop
hlt
dec
jl
and
jp
sbb
push
jae
jae
and
dec
jmp
out
insl
dec
test
cltd
lret
dec
imul
aad
jb
insl
movsb
jb
push
push
mov
das
xchg
mov
shlb
push
xchg
or
inc
aas
pushf
sbb
loopne
bound
pushf
les
pop
dec
sar
and
adc
jmp
out
in
pop
scas
jg
add
xchg
fildll
mov
mov
pop
or
cmpsl
mov
jmp
insb
and
addr16
scas
push
jge
jbe
push
sub
cmpsb
lcall
add
jo
mov
nop
dec
mov
das
movsb
xchg
addr16
in
mov
outsb
jno
mov
mov
andb
mov
in
std
sub
jge
pop
xor
mov
arpl
xchg
xchg
mov
xor
clc
push
jmp
jae
push
xor
push
or
test
icebp
cmpsb
cmp
pop
jns
gs
jnp
push
mov
lods
insb
jecxz
cld
and
stc
fnsave
hlt
cli
push
mov
mov
lock
lcall
adc
adc
negl
sub
jecxz
push
out
test
test
add
ja
lcall
and
loop
lock
add
outsb
inc
lret
aam
and
call
jae
cmp
das
or
push
rclb
mov
dec
jb
shlb
lods
push
out
out
and
movsb
sbb
pop
jp
lret
cwtl
jge
or
sub
push
out
and
das
paddw
adc
scas
jo
cltd
jge
cltd
inc
fidivs
xor
pushf
cmp
pop
dec
popa
bound
dec
inc
sbb
or
je
icebp
icebp
and
ljmp
xchg
cmp
sti
xchg
test
jmp
pop
lret
mov
call
pop
es
push
adc
xor
mov
mov
arpl
push
sahf
inc
sub
test
jp
in
fldcw
mov
pop
repnz
ljmp
loope
in
fistpl
sub
mov
out
pusha
inc
outsb
inc
xchg
jb
xor
aaa
insb
adc
pop
jae
ja
cmp
aam
lret
shll
adc
int3
xlat
xor
xchg
dec
roll
in
call
dec
push
in
cwtl
sti
aaa
dec
jb
sub
iret
or
imul
mov
jno
ret
add
cmpb
hlt
ficompl
cld
testl
pushf
dec
pop
fnstsw
arpl
outsb
inc
imul
in
ret
subl
ds
mov
cmpsl
pop
icebp
jae
xchg
call
sti
inc
cmp
mov
add
sbb
xorb
push
outsb
push
scas
fstpl
mov
ret
lods
cwtl
sbb
loope
insb
je
js
pop
push
dec
out
and
push
jg
data16
jmp
push
dec
pop
cmp
add
xchg
pop
mov
mov
mov
rcrl
mov
ftst
cmp
mov
gs
enter
cmc
xor
sahf
xorl
mov
push
jnp
xor
mov
jb
mov
push
subl
jl
add
inc
xchg
shll
xchg
je
xor
add
and
out
fsts
xchg
or
inc
inc
mov
popf
jmp
pop
inc
test
into
stc
in
shrl
and
add
into
ret
pusha
and
cmp
inc
scas
dec
daa
mov
orb
inc
imul
jns
add
xchg
adc
out
adc
jg
fbstp
xor
inc
inc
inc
insl
push
pop
je
in
add
dec
mov
cmp
aas
dec
mov
stos
push
mov
sbb
push
mov
ret
xchg
and
or
jmp
loop
inc
dec
push
sbb
fst
imull
fisubs
xchg
cmpsl
test
or
jne
cmp
mov
movsb
and
push
cmp
push
jno
fistps
lea
cmp
and
outsl
jecxz
bound
lds
sarl
lods
iret
inc
mov
lods
pushf
pop
push
int
pop
popa
pop
repz
pop
or
ss
fcom
divb
stos
pop
scas
cmpsb
mov
or
fistl
xchg
cmp
push
inc
shl
jle
stc
mov
jg
push
out
push
loope
sub
push
clc
aaa
pop
insl
fwait
or
mov
mov
sbb
hlt
xor
cmc
repnz
ljmp
aaa
int3
push
jmp
jne
ret
push
movsl
sahf
loope
push
shlb
mov
inc
ror
xchg
dec
jge
push
push
sub
aaa
cltd
outsl
fwait
mov
pop
mov
add
stc
xor
pop
adc
jb
pop
inc
mov
lcall
xor
pop
mov
cmp
mov
mov
jae
push
sahf
adc
pop
push
dec
and
ja
je
int3
loopne
dec
push
xlat
jmp
iret
sar
mov
nop
xor
xchg
jb
or
or
cmpsl
xchg
cmp
mov
loop
cmpsb
fisubrl
jns
or
cld
nop
lcall
les
jge
mov
push
test
jne
xor
ret
jnp
jo
xchg
xchg
loop
push
push
mov
jp
jne
jecxz
adc
lahf
adc
ret
rolb
daa
jmp
xchg
mov
mov
cld
pop
insb
clc
int3
or
push
or
mov
push
lahf
mov
mov
mov
mov
shrb
mov
out
pusha
inc
out
or
ret
loop
mov
inc
dec
pop
cld
fnsave
inc
stos
movsb
out
or
das
scas
mov
sub
mov
cmpsl
xchg
mov
inc
loop
push
mov
cmpsl
lret
loope
pop
test
lret
xchg
ret
bound
jns
into
hlt
adc
push
mov
and
test
dec
in
cmp
push
mov
mov
push
dec
rclb
add
aaa
in
jle
mov
loope
sbb
sbb
arpl
adc
sub
shr
pop
mov
dec
in
pop
jmp
testl
lods
lds
mov
cs
push
xor
imul
mov
or
mov
scas
push
jae
mov
cs
test
jmp
ds
iret
fstl
in
push
pusha
ss
loop,pt
pop
repnz
or
add
inc
adc
pop
daa
jmp
lods
mov
pusha
pop
sbb
cmpsb
adcl
outsb
and
push
adc
lock
addb
in
sbb
outsb
mov
pusha
stos
mov
xchg
lods
js
or
je
xchg
xchg
mov
clc
out
sbb
mov
je
out
sbbl
aad
aam
test
aam
icebp
ljmp
cmp
mov
cwtl
rclb
add
jp
xchg
dec
call
dec
repnz
movl
mov
stos
fdivrs
popf
mov
mov
outsb
adc
lret
lds
bound
cwtl
jl
inc
mov
add
jo
out
loop
sub
test
cmc
pusha
aad
push
lahf
push
add
jle
sarl
lods
pop
dec
mov
daa
add
into
or
and
movsb
mov
push
movsl
dec
sarb
cmp
sbb
mov
shlb
mov
sbb
imul
cs
mov
jmp
and
data16
movsl
pop
pop
sub
xchg
jmp
ss
dec
das
push
pop
test
jns
bound
xchg
ret
xor
ss
sbb
pop
dec
mov
inc
clc
aas
imul
pushf
loope
cmp
movsl
iret
push
adc
xor
push
and
mov
pop
inc
insb
pop
fs
jle
dec
aaa
mov
out
popf
sbb
mov
imul
or
push
movsl
sahf
aaa
outsl
sub
aas
dec
sbb
cmp
add
enter
sub
mov
jbe
and
in
push
outsb
xor
int3
mov
lcall
pusha
stos
cmpsb
inc
cmp
movsl
jns
mov
loope
pop
data16
mov
rolb
les
test
in
mov
ss
movsl
stos
in
push
jb
xor
adc
push
retw
push
cs
pop
jmp
daa
adc
mov
cld
bound
sbb
xlat
and
or
jl
xchg
add
sub
stos
test
jmp
gs
test
and
dec
int
stos
bound
add
lea
fldcw
out
add
mov
or
pop
mov
xor
scas
mov
dec
and
adc
mov
rorb
cli
bound
adc
ljmp
stos
or
inc
dec
data16
in
adc
insl
cwtl
stos
jo
mov
shrl
push
imul
dec
add
ljmp
jns
jae
mov
out
jl
mov
jb
sbb
cld
es
mov
andnps
in
mov
aas
dec
jbe
jecxz
mov
stc
mov
mov
out
sub
cmp
or
sub
ret
adc
mov
adc
pusha
pop
subl
adc
imul
xchg
pop
clc
push
pop
dec
ficoms
mov
cmpsb
subl
pop
push
xchg
outsb
or
sub
lods
jge
rcr
xchg
cld
dec
repnz
enter
fcoms
insb
popa
sub
movsb
sub
add
scas
cmpsl
in
pop
jo
int
inc
xor
push
rorb
xor
xor
out
pop
adc
lock
or
pop
pop
fdivrl
mov
sub
sbb
mov
adc
les
inc
xchg
scas
xor
cmpsb
xlat
mov
pop
loop
es
daa
pop
jle
add
pop
fdivrs
cmp
mov
or
test
scas
clc
repnz
pop
lods
push
mov
mov
xchg
push
jnp
and
dec
cmp
movsb
jl
lods
lock
and
cmpsl
mov
sti
rorl
popa
sub
jb
mov
js
pop
dec
mov
cmp
gs
cmp
ja
jp
cli
mov
adc
and
mov
mov
icebp
push
inc
mov
mov
or
insl
pop
inc
divb
dec
arpl
jle
sub
fiaddl
scas
xor
jle
jo
sbbb
jne
sbb
daa
gs
sbb
dec
inc
sbb
jecxz
jecxz
mov
call
xchg
adc
cld
div
test
and
adc
mov
loopne
aad
insl
push
pop
push
add
aad
inc
or
mov
out
mov
in
mov
push
andb
ret
jge
test
inc
out
xchg
pusha
stc
imul
sub
out
sub
test
push
js
ficoms
roll
sti
neg
cmpsl
loope
dec
mov
iret
arpl
xor
data16
pusha
add
cmp
movsl
outsl
jmp
cmp
out
cmp
or
sub
pushf
xlat
cli
je
jl
in
stos
popa
dec
sbb
push
imul
and
adc
call
jb
jnp
cmc
xchg
test
lods
out
pop
shll
xor
dec
pop
outsb
push
fcmovnbe
mov
and
loopne
xchg
mov
leave
ret
push
push
repz
loopne
and
add
js
pop
enter
cmp
or
jecxz
sub
sbb
ret
call
dec
icebp
iret
ljmp
movsb
xchg
pop
es
and
lret
cmovns
std
imul
lahf
adc
lds
adc
lods
and
mov
shl
jne
or
rorl
scas
jb
sbb
adc
or
xchg
mov
mov
xor
xchg
stos
nop
enter
dec
out
cwtl
je
inc
jo
fidivrs
jg
xchg
pop
jp
cmpl
stc
pop
leave
push
mov
pop
movsb
fs
ret
inc
mov
jg
outsl
scas
lahf
jb
nop
lods
pop
js
sbb
shrl
add
jne
inc
stos
in
and
pop
add
or
in
jle
fisubrs
mov
jge
bound
cmp
mov
mov
sbb
lahf
jmp
aad
cmp
jle
sbb
mov
in
incb
add
pop
cltd
or
in
mov
das
pop
ss
or
xchg
in
hlt
xchg
jp
mov
std
hlt
test
xchg
mov
xchg
adc
jno
pop
cmp
sub
inc
push
mov
js
mov
xor
test
aas
pop
and
or
leave
dec
inc
pop
ret
sub
flds
jae
jbe
lea
mov
aaa
sub
out
in
pop
push
lcall
jo
iret
xor
mov
les
fistl
mov
in
cmp
sarb
adc
in
jp
int
pop
imul
fistpll
shlb
jmp
fcomip
rcrl
mov
inc
cltd
repz
jb
inc
or
pop
xor
inc
push
or
xor
jno
mov
xchg
test
rcrb
mov
dec
mov
inc
cli
xor
and
fsubs
fisubs
sbb
and
out
setbe
dec
cld
mov
adc
inc
mov
cmp
mov
jns
mov
insb
into
mov
cwtl
in
jo
push
or
js
lret
imul
mov
int3
inc
test
movsl
mov
ds
stos
jge
inc
sahf
mov
mov
push
mov
in
pop
push
insl
jne,pt
add
and
aas
pop
push
lret
mov
lods
pushf
fidivrl
jg
push
or
js
lods
cmp
mov
and
jmp
add
pop
outsb
pop
fildll
dec
sbbb
loop
xchg
rol
or
push
cmp
into
into
mov
inc
out
mov
mov
outsb
pushf
rorl
rorl
xchg
or
and
aad
sarl
sub
loopw
pusha
daa
xchg
rol
mov
clc
fsubrs
pop
jle
mov
xlat
mov
int
add
mov
xchg
test
fdiv
mov
pop
into
sub
dec
lcall
mov
mov
add
call
test
and
loop
jg
dec
push
or
std
xlat
fisubs
fcomp
rcr
inc
cwtl
das
out
or
repz
lahf
lock
jl
imul
mov
or
outsl
or
cmp
sbb
mov
sub
je
dec
daa
hlt
push
fmull
dec
in
jnp
sti
movsl
xchg
stc
addb
mov
add
gs
xchg
enter
pop
inc
fildll
cld
scas
xchg
push
adc
jae
lcall
inc
cmp
sub
jnp
adc
jge
fstpl
dec
or
mov
loop
cmp
inc
mov
pop
jne
adc
stos
xor
mov
sbb
cmp
mov
fucomp
mov
into
push
lods
fldenv
icebp
inc
repz
std
xchg
out
rcll
imul
sarb
or
jo
int3
jle
or
js
pop
into
in
aaa
or
mov
fisttpll
mov
shll
mov
push
push
pop
les
xchg
cmp
add
popf
int3
adc
cmp
push
pop
ja
insb
shll
fadds
jp
mov
pop
mov
jnp
stc
push
fiadds
lret
pop
lods
pop
aas
dec
lods
sbb
xor
and
out
ds
jmp
jl
lahf
inc
test
mov
fisubrs
ret
roll
insb
lds
xchg
mov
lds
shr
or
out
push
inc
jg
and
pop
push
out
push
mov
aas
or
cmp
jp
rcrl
out
pop
pushf
es
cltd
jmp
xchg
out
inc
pusha
into
fcomp
lret
bound
cmp
andl
inc
mov
jmp
and
fs
pop
mov
dec
pusha
xchg
bound
inc
xor
dec
and
ret
jmp
imul
push
push
lret
jle
inc
aas
or
pop
xorb
add
mov
lods
ret
sbb
clc
fldpi
xor
lds
xchg
xchg
idivb
jbe
fwait
xchg
sub
mov
mov
andl
mov
data16
inc
mov
lea
mov
and
test
test
js
cs
outsl
pushf
loop
jecxz
imul
popa
cmp
jg
nop
test
dec
ja
ret
xchg
mov
bound
data16
or
fadd
push
loopne
mov
xchg
mov
pushf
inc
into
and
or
sbb
sub
jae
leave
outsl
dec
pop
cmp
into
sbb
adc
fldz
aas
stos
mov
add
jg
aaa
jnp
add
test
iret
std
enter
popf
jge
js
jle
and
lcall
or
xorl
pop
loope
into
pushf
mov
repz
mov
das
lret
push
add
xor
pop
pushf
adc
push
nop
jg
ret
sub
pop
insb
cli
cmc
push
fwait
add
mov
mov
stos
xchg
stos
bound
and
jecxz
shl
insl
push
jl
push
int
out
and
movsb
in
fisttpll
jae
and
aam
mov
inc
test
mov
jecxz
pop
xor
std
dec
mov
sbb
out
or
and
stos
je
mov
lcallw
inc
fwait
repz
xlat
jp
sub
inc
push
sarb
lret
lods
int
sarl
push
cmp
pop
or
data16
test
jnp
mov
mov
cli
add
sub
movsl
repz
mov
jo
mov
inc
jmp
out
ljmp
sbb
mov
jae
add
cmp
popf
scas
rclb
out
jge
ficomps
xor
lea
dec
mov
popa
mov
and
jg
cmp
xor
jo
dec
clc
jl
loopne
shll
inc
cs
dec
dec
sub
call
adc
sbb
xchg
dec
lods
push
les
fs
sbb
cmc
clts
ss
pop
jge
mov
add
out
add
mov
mov
aas
rclb
cmpsb
fnsave
sub
stc
loopne
sub
data16
xor
out
xchg
sub
jle
cs
jl
sbb
cwtl
cmp
pop
mov
sbb
push
aaa
sbb
rcr
push
arpl
outsl
and
xchg
mov
xchg
jge
pop
xchg
ss
push
out
jl
lods
push
cmp
dec
mov
sub
lahf
xor
dec
aad
xacquire
sbb
clc
push
pop
jge
mov
mov
dec
shlb
iret
jp
jp
jle
xchg
push
js
dec
mov
xor
lcall
push
fwait
iret
adc
and
fimull
sbb
pop
xchg
data16
cmp
xchg
xor
mov
sub
punpcklwd
imul
stos
in
xor
pop
fiaddl
and
push
or
pop
sub
pop
jg
push
push
in
cld
lahf
inc
jo
jmp
and
xor
mov
divb
inc
fwait
cmp
int3
jl
icebp
loope
mov
sahf
movsb
inc
xor
push
sbb
mov
stos
or
fwait
imul
jmp
dec
jo
pop
mov
mov
nop
jnp
gs
jne
in
and
fsubs
enter
mov
out
add
add
xor
jne
aad
popa
xchg
stos
lods
lret
sahf
fmulp
mov
out
scas
xchg
cltd
pusha
lret
scas
insb
mov
xchg
or
sub
and
adc
push
ja
mov
in
test
or
rol
xor
insl
mov
or
xlat
scas
aam
mov
gs
imul
outsl
mov
ds
lahf
inc
enter
enter
sub
lds
pushf
stos
negb
imul
dec
mov
in
loopne
iret
loope
sbb
mov
lods
pushf
repz
mov
icebp
test
pop
test
fwait
or
les
cmp
xchg
cmp
jmp
xchg
fidivs
popf
adc
pop
xor
jle
mov
repz
xchg
adc
in
lcall
inc
shll
repz
cmp
and
out
xor
jge
arpl
cmp
lahf
jne
mov
rorb
jae
js
inc
stos
lock
cmp
ret
mov
das
loop
inc
lds
aaa
dec
rcrl
or
xchg
jle
into
add
fsub
shll
ret
dec
das
jo
fsts
push
lret
popa
lods
mov
pop
ret
or
ds
inc
pop
cli
stos
sarl
data16
xchg
not
daa
mov
fistpll
fs
out
inc
or
jmp
inc
xor
xchg
out
push
xchg
dec
shrl
fdivl
addr16
jmp
jmp
cmp
push
adc
inc
mov
jne
and
fbld
mov
push
lahf
sbb
fwait
jmp
nop
cmp
out
lods
jnp
clc
adc
dec
mov
pushf
jne
cmp
sub
xor
ljmp
or
inc
pop
cmp
stc
xchg
mov
mov
jmp
shrb
jb
dec
jno
sub
pop
aas
data16
mov
outsb
adc
or
rcl
add
xor
jo
mov
stos
dec
in
and
decb
dec
mov
pop
repz
test
hlt
xchg
jg
clc
push
sti
cmpsl
lahf
mov
imul
inc
jb
rolb
jge
pop
out
add
iret
inc
xchg
fs
jae
ja
inc
test
in
cltd
push
rcrl
sbb
push
nop
ds
in
rcrl
or
rclb
lock
lods
outsb
push
popa
mov
std
in
xor
jmp
dec
fdivrl
test
push
pop
adc
jmp
aam
outsb
fistps
pushf
je
push
icebp
cmc
jb
call
inc
mov
sarl
sti
mov
inc
mov
test
inc
pop
mov
inc
cmp
push
fstl
xor
mov
jmp
cmpsl
cmpsl
ret
mov
xorl
pushf
test
stos
pop
and
adc
push
or
stos
loopne
and
pop
lret
ds
xchg
popf
jp
jp
subl
or
movsl
dec
xchg
test
in
iret
lahf
mov
aam
or
jo
sub
sub
mov
inc
sbbl
dec
push
and
mov
pop
adc
add
xchg
dec
jecxz
mov
ljmp
aam
xchg
out
sbb
mov
shrb
xchg
push
dec
pop
dec
or
popf
mov
mov
xchg
dec
arpl
cmp
jg
fldcw
add
mov
test
or
vsubss
cmp
mov
call
jnp
movsb
int
scas
or
mov
icebp
nop
mov
in
cs
pusha
pushf
test
mov
mov
mov
xchg
cmpsb
and
xchg
mov
inc
jp
pop
fsts
mov
mov
jb
clc
adc
pop
hlt
sti
sub
frstor
bound
mov
jecxz
jmp
mulb
icebp
add
lds
fwait
mov
pop
inc
xchg
jb
jnp
scas
add
inc
cmp
sub
into
xor
lods
xor
xchg
sbb
fcmovnb
inc
add
fdiv
sub
aam
cli
pop
mov
cmp
lds
cs
cmp
xor
cmp
jg
inc
pop
leave
popf
cwtl
and
std
or
adc
mov
inc
sub
test
inc
sahf
sbb
push
lea
xor
sbb
mov
rcrl
push
dec
jae
push
inc
or
fcmovb
shll
jge
mov
push
scas
sub
push
jnp
cmp
fxch
aas
jmp
jl
sti
ficomps
sbb
int
jp
dec
jmp
push
mov
or
movsb
pop
dec
outsb
mov
add
rcll
and
ret
or
scas
pusha
sbb
imul
mov
shlb
roll
or
arpl
xchg
adc
lea
fs
or
iret
cmp
inc
mov
inc
dec
cmp
imul
pop
pop
mov
dec
cmp
cmc
jb
jbe
movsl
inc
flds
mov
movsl
and
cs
rcl
in
dec
gs
mov
scas
cltd
sarb
and
jge
and
push
jl
movsl
or
xchg
gs
cmp
js
push
pop
jb
cmp
xorb
cmp
lods
fsubs
jnp
enter
sub
sub
lock
xor
or
sub
lcall
std
cmp
xlat
xchg
jmp
dec
push
ss
inc
pop
xor
adc
ja
mov
and
in
sbb
cmc
adc
jp
in
adc
in
mov
test
lcall
mov
repnz
fsub
iret
adc
negb
adc
push
testb
mov
xor
xlat
or
sbb
mov
loopne
jnp
orl
ljmp
mov
in
xlat
and
fidivrs
bound
mov
movsl
mov
psllw
add
mov
ret
jle
fmuls
ficoml
mov
sbb
jno
cmp
push
and
lret
mov
or
sarb
pop
mov
cmpsl
shr
inc
lods
dec
mov
push
aas
pop
addr16
vphaddubq
mov
jle
gs
in
jmp
mov
pop
sbb
les
or
push
and
aas
mov
jb
push
cmp
cmp
lock
insl
bound
in
xor
nop
lock
ds
popf
icebp
mov
in
and
adc
aaa
dec
fmuls
lds
sub
sahf
push
pop
mov
aad
inc
mov
aas
mov
mov
hlt
cmp
ret
mov
cs
cmp
insb
into
dec
enter
ja
cli
decl
mov
or
std
inc
dec
mov
hlt
add
dec
mov
test
aaa
lods
pop
push
les
sahf
clc
sar
inc
inc
jns
pop
mov
mov
inc
psubusb
daa
mov
jmp
mov
xchg
mov
lcall
stos
movsl
cmpsb
mov
aam
push
scas
push
xor
cmp
repz
in
mov
jns
in
insb
mov
nop
jp
sbb
imul
clc
pushf
fnstsw
adc
cmpsb
int
jl
and
clc
sti
dec
loop
mov
sub
scas
sbb
mov
idiv
repz
jne
jge
cld
mov
and
dec
mov
out
or
out
cmpsl
xor
push
movsb
call
xchg
daa
mov
push
and
jnp
mov
mov
jge
xor
enter
pop
cmp
sahf
lea
inc
cmp
and
xor
mov
imul
xor
icebp
in
push
sahf
cmpsl
call
repz
inc
js
hlt
dec
inc
sbb
add
outsl
pop
lahf
ret
mov
negl
xor
cmpsb
lods
hlt
jle
xchg
mov
xchg
nop
push
sub
push
xlat
outsl
sbb
push
or
pop
sbb
jae
jl
sub
jbe
test
cmp
frstor
test
je
mov
push
nop
inc
xchg
mov
lahf
movsl
push
sbb
movl
adc
aad
xchg
pop
js
mov
sub
xchg
dec
call
daa
xor
pop
arpl
dec
sbb
add
bound
pop
xor
mov
test
mov
call
enter
sub
outsb
inc
push
jnp
dec
add
dec
mov
cmpsl
out
add
sbb
pop
out
push
clc
sbb
cmp
dec
xor
add
adc
pop
movsl
mov
bound
xchg
pop
push
clc
enter
sub
cltd
clc
jecxz
cwtl
xor
push
cltd
mov
insb
js
cmp
mov
mov
ds
xchg
stos
or
sbb
and
enter
push
cmp
rcrl
rcr
adc
push
add
dec
xchg
out
arpl
fmuls
add
dec
mov
add
jmp
fstl
test
icebp
fisubs
roll
and
int3
mov
or
mov
out
aas
push
push
sbb
push
mov
movsb
outsl
pop
inc
jno
aad
jbe
xchg
xchg
xchg
xchg
addr16
bound
jo
movsb
mov
pop
fsts
mov
sub
cwtl
fists
aas
sub
xchg
sti
test
cmp
adc
test
repnz
data16
in
fidivrs
mov
push
cmc
xor
or
shll
das
xlat
or
jl
dec
icebp
clc
outsl
dec
adc
lods
daa
fsubrl
mov
xchg
push
adc
mov
lods
insb
notb
aad
add
xor
shlb
xor
or
mov
mov
ret
mov
push
out
jnp
dec
ljmp
rorl
mov
push
and
andl
push
push
dec
ret
mov
shrl
cmc
jge
cmp
daa
cmpsb
lea
sbb
jge
in
inc
shrb
sbb
sbbl
xchg
shrb
pop
push
inc
sahf
clc
mov
repz
aaa
cld
adc
jno
add
cmp
push
or
inc
pop
pop
inc
icebp
mov
hlt
sub
mov
jg
dec
jne
add
lret
scas
std
icebp
cmp
push
popf
jne
pop
dec
ss
out
dec
jmp
std
jo
pop
rcrb
push
inc
popa
mov
icebp
or
push
xchg
and
icebp
sbb
mov
cmpsl
pop
pop
or
mov
stos
in
or
jb
and
lods
test
shlb
popf
leave
repnz
fcomi
push
xor
inc
or
stc
jmp
pop
cltd
sub
imul
hlt
adc
int3
outsb
mov
mov
xchg
pop
add
ds
pop
insl
js
mov
pop
arpl
jge
popl
jne
fnstsw
out
and
inc
repz
adc
loop
lret
push
test
rcll
into
imul
adc
dec
add
test
repz
repnz
mov
jns
gs
es
push
adc
test
lcall
gs
shlb
xchg
cmp
cmp
clc
and
gs
dec
js
aam
jmp
cmp
imul
das
ds
inc
lea
mov
inc
cmpsb
loope
pop
nop
dec
and
push
and
movsb
fsubrs
jmp
cmp
jp
lcall
insb
repz
mov
imull
fisttpl
mov
dec
std
jo
pushf
call
add
and
sarl
adc
ret
hlt
and
mov
fcomps
dec
and
pop
popa
mov
cmp
out
mov
xchg
cmpb
mov
xchg
out
fdivrl
sub
jne
mov
das
jmp
imul
or
cld
mov
pushf
pushf
pop
pop
ja
stos
add
mov
aaa
shll
inc
mov
lea
mov
jo
fiaddl
cs
mov
xor
xor
bound
call
cmp
sub
enter
arpl
add
incl
or
xchg
sub
add
jae
inc
cwtl
xchg
inc
cmp
mov
fadds
out
es
mov
inc
loopne
cmp
fmulp
movsl
dec
mov
js
lea
pop
cmpsb
mov
xor
push
mov
test
and
scas
dec
out
lahf
loop
sbb
push
sub
cmp
mov
push
ja
inc
push
mov
outsl
cmp
dec
scas
or
outsl
addr16
sub
mov
fwait
lods
adc
jne
sub
dec
push
xor
jge
cmp
movsb
jo
rclb
push
daa
add
aam
mov
xor
ret
jns
rcll
sbb
nop
push
add
xor
das
mov
and
les
inc
inc
mov
pushf
sbb
push
ficomps
test
imul
es
lods
ret
push
sti
cltd
cmp
push
call
mov
add
dec
insb
push
mov
push
push
jne
cmp
adc
decl
movsl
mov
insb
lods
or
cmp
or
cmp
or
sub
xchg
cmpsb
jmp
lea
icebp
mov
and
mov
add
pushf
addr16
xor
dec
rcll
push
inc
movsl
jg
lock
push
ljmp
jne
out
xor
orb
js
ja
incb
sub
cmc
int3
sbb
mov
popa
movsb
or
mov
pop
jle
xor
pop
daa
sahf
xchg
or
das
cmp
cmp
push
in
mov
sub
and
push
shr
inc
jg
fwait
scas
stos
dec
je
das
mov
push
lea
fs
mul
in
push
push
jo
js
or
mov
mov
scas
mov
mov
pop
mov
mov
js
sbb
mov
and
inc
or
lods
xorl
jecxz
mov
pop
test
add
mov
jno
stc
leave
xchg
jnp
add
pop
push
rcrb
scas
push
cmp
shrl
cwtl
jns
stos
mov
cwtl
sar
mov
xor
xor
lret
jl
test
or
cwtl
pushf
pop
mov
add
cmp
sti
push
test
aaa
aaa
adc
cli
in
jle
dec
mov
arpl
xchg
enter
sub
jns
and
iret
pop
loop
cmp
push
push
out
pop
and
mov
in
lock
shll
fistpll
faddl
stos
xchg
adc
push
rcll
jg
or
adc
rclb
add
dec
mov
xchg
mov
sbb
dec
ficoms
pusha
dec
ret
leave
mov
lret
les
push
push
and
add
mov
push
sbb
gs
mull
lcall
in
inc
sbb
jns
sbb
rclb
push
fs
ficoms
sbb
jae
subb
xor
setbe
add
mov
push
lods
or
cmp
imul
popa
rorb
dec
out
stc
hlt
push
add
add
mov
and
jns
leave
jae
mov
mov
mov
jnp
push
stos
arpl
or
xor
imul
out
or
mov
mov
mov
dec
cmp
pop
xchg
lods
out
daa
js
sbbb
adc
mov
ds
sarl
dec
in
push
adc
fwait
cmp
cli
hlt
mov
dec
sub
pop
nop
adc
adc
dec
inc
or
pop
repz
xlat
out
pop
mov
fs
jecxz
pop
xor
cmp
pop
add
pop
clc
cwtl
call
pop
test
lret
hlt
fs
lret
mov
in
sub
clc
es
jmp
lods
push
outsb
out
mov
mov
pop
testb
jns
inc
sahf
testl
les
inc
outsl
es
and
mov
push
jle
and
loopne
das
sarb
or
mov
or
xchg
cs
inc
rcrl
ficompl
push
or
lea
ss
pop
jnp
xor
and
cwtl
and
xchg
cld
pop
mov
push
punpcklbw
dec
or
push
dec
dec
xor
adc
in
loopne
aad
push
mov
test
pop
and
test
mov
lcall
out
or
mov
ret
int3
movsl
icebp
xchg
and
adc
xchg
jo
fwait
adc
mov
inc
cmp
mov
loope
scas
std
test
mov
leave
int3
popa
dec
mov
cmp
imul
fwait
test
push
dec
mov
mov
shll
sahf
sahf
push
out
clc
addr16
mov
dec
add
push
pop
cld
push
jl
fistpll
shl
out
xchg
jae
cltd
inc
aaa
cmpsb
pop
mov
jno
adcl
push
jle
lret
movsb
cltd
sub
std
mov
out
mov
cmp
test
ds
dec
sbb
out
dec
push
jecxz
icebp
sbb
in
mov
in
sti
add
push
push
lcall
int3
arpl
or
arpl
add
clc
mov
cmp
push
dec
daa
xchg
jge
mov
rclb
xorb
jae
or
mov
inc
nop
fmuls
push
cwtl
add
mov
fldl
cmp
cmp
dec
add
aad
pop
inc
inc
icebp
sarb
iret
sarb
adc
and
mov
in
push
out
dec
push
popa
int
jne
sbb
pop
ja
idivl
xchg
sbb
mov
jne
stos
in
mov
shrl
inc
mov
mov
cmp
or
xor
int3
decl
jbe
adc
std
loop
adc
xor
jecxz
mov
imul
inc
mov
mov
mov
icebp
mov
dec
mov
cmc
mov
jle
fisubrs
lods
mov
shl
jle
nop
adc
push
fabs
xchg
or
ret
xchg
jbe
jp
and
mov
mov
sbb
in
cmp
stc
jbe
scas
jns
cli
int
inc
sub
rcrb
leave
das
popl
sbb
aas
dec
icebp
mov
imul
mov
cmpsb
pop
scas
jg
dec
nop
pop
add
jl
inc
shrl
mov
arpl
cs
xor
inc
rcll
outsb
in
dec
cmpsb
jae
imul
mov
push
enter
inc
jae
mov
or
mov
arpl
pushf
jg
inc
clc
leave
lods
sub
lods
push
xor
je
mov
pop
std
iret
std
lret
push
dec
xchg
mov
stos
ret
xor
dec
jb
or
std
outsb
outsb
xorl
mov
inc
inc
fistps
test
push
in
push
neg
add
outsb
je
mov
jne
movsl
push
out
stc
cwtl
nop
mov
xor
mov
jns
cmc
pop
add
bound
sbb
repz
jo
ljmp
and
xchg
int3
cmp
push
fcoms
pop
lcall
mov
sbb
or
cmp
data16
jo
movb
aad
ds
adc
push
ljmp
cmp
pop
cmc
cs
sti
push
dec
adc
shr
test
in
mov
xor
sub
std
out
addr16
and
les
push
out
loope
sub
sub
orl
xor
xchg
and
or
mov
loop
xor
xlat
in
lock
ljmp
jbe
add
xchg
pop
lret
push
adc
jmp
mov
popa
adc
pushf
aaa
rclb
out
lock
popa
jmp
mov
mov
cmc
enter
aaa
jbe
hlt
adc
daa
aam
mov
daa
ljmp
jo
sbb
movsb
inc
inc
sub
pop
add
je
sti
cmp
sbbb
popa
mov
add
jg
and
push
add
lret
hlt
or
push
sbb
push
pop
mov
or
xchg
pop
imulb
pop
daa
hlt
inc
add
in
mov
mov
and
jg
mov
das
pop
mov
mov
shlb
rclb
mov
add
loopne
fbld
add
xchg
and
add
mov
test
ss
cmc
pop
push
sbb
lds
mul
lret
dec
xlat
jg
call
jbe
add
outsb
xlat
mov
jge
loop
aam
cmp
je
std
movsl
push
sbb
das
ds
add
and
or
mov
jbe
push
insl
inc
jo
out
enter
mov
mov
sahf
ljmp
or
inc
push
push
fistl
scas
sub
push
bound
cld
pop
jnp
inc
test
mov
jle
jl
stc
mov
xlat
icebp
flds
scas
and
add
inc
sbb
mov
out
sbb
test
inc
sbb
outsb
cmpsb
fwait
js
pushf
ret
and
out
sub
lock
xchg
mov
in
mov
out
out
mov
xchg
mov
arpl
shll
lea
lds
data16
dec
adc
call
test
jg
fnstenv
ljmp
fbld
add
jae
push
test
addr16
dec
mov
cmp
sar
sbb
icebp
add
push
jl
mov
or
das
loopne
cmpsb
ret
inc
push
mov
fnstcw
xor
sahf
jle
xlat
ds
mov
loopne
outsb
mov
mov
test
cltd
inc
sub
into
dec
mov
into
xor
push
mov
stc
or
jno
sub
dec
jle
cmp
or
gs
out
pop
push
pop
and
pop
out
imul
lods
data16
jns
in
sbb
adc
rcrb
movsb
add
lret
jno
loope
stc
dec
mov
mov
jge
push
xorb
popf
mov
addb
inc
xor
mov
mov
lock
and
fs
rorl
imul
jg
xchg
dec
icebp
jg
cwtl
ds
das
push
je
ds
adc
arpl
lret
dec
jecxz
scas
pop
aaa
fsubs
jl
sub
push
mov
loopne
adc
test
push
pop
xchg
ret
fwait
pushf
lahf
pop
scas
lcall
leave
incb
lret
mov
jbe
add
jp
adc
add
movsl
push
into
inc
rcll
sbb
call
jecxz
in
mov
repz
pop
into
fdivrp
ds
or
sbb
pop
mov
cmpsb
inc
addr16
xchg
cmc
movsb
fdivl
and
add
xchg
adc
cmp
cmpsb
bound
jge
and
xchg
pop
movlps
iret
xor
or
lea
mov
push
sar
mov
stc
loopne
ljmp
inc
mov
fsubl
mov
pop
xlat
aas
push
in
js
mov
xor
xlat
and
mov
test
push
je
add
scas
notl
jp
movsb
or
xchg
fsubr
in
int
jg
mov
cwtl
xchg
int3
and
cmp
add
adc
int3
mov
cmp
shll
pop
sub
jmp
repnz
cpuid
dec
jmp
andb
sbb
pop
mov
js
mov
add
repnz
emms
pop
inc
jmp
in
sarb
mov
jae
imul
inc
mov
sbb
mov
adc
jecxz
enter
cmp
dec
adc
stos
cmp
push
adc
add
mov
xor
inc
jmp
das
ret
insl
or
lret
testb
sahf
and
mov
into
xchg
mov
add
rorb
int3
mov
sbb
sbb
cmc
mov
dec
jl
call
cmp
clc
or
or
sbb
cmc
jge
push
fistpll
pop
cmpsb
in
test
js
lret
cli
push
and
insl
mov
push
arpl
or
in
sbb
pop
adc
orb
inc
and
iret
mov
sub
cmp
mov
pop
shlb
mov
into
int3
and
test
aam
pop
sbb
add
test
cld
arpl
xor
mov
dec
and
loop
inc
and
jmp
popf
sub
roll
dec
mov
in
out
fmul
pop
jmp
stos
inc
stos
sbb
movq
xchg
stos
cmpb
and
adc
xchg
fst
mov
push
cmp
outsb
mov
stos
leave
or
jno
mov
lock
les
stos
adc
dec
cmp
ds
fidivrs
mov
imul
movsl
add
lret
ss
insb
fwait
jns
xchg
mul
les
mov
hlt
jmp
movsb
xchg
loop
xor
jmp
mov
test
clc
dec
jb
add
push
test
das
loope
or
mov
je
sub
popf
test
and
fdivr
jmp
addr16
movsb
lods
pop
xor
addr16
dec
add
hlt
test
ja
movsl
lods
loop
push
push
inc
cltd
sub
pop
push
bound
fcompl
mov
mov
mov
inc
xor
lods
mov
pop
insb
sub
stc
or
push
and
xchg
jnp
and
sbb
adc
push
mov
pop
push
aam
shl
mov
sbb
hlt
cmp
cli
xor
cmp
into
xchg
adc
test
loop
cmp
sbb
adc
stos
mov
aas
and
xchg
daa
jecxz
mov
call
xchg
scas
mov
mov
xchg
jg
lret
dec
adc
ss
inc
push
cmp
pushf
loop
xchg
mov
fidivrs
pushf
push
fcoms
jo
and
and
lods
sbb
add
in
outsl
rcll
mov
lock
pop
cld
addl
push
sub
into
mov
aaa
pop
adc
aaa
js
aaa
outsb
testl
inc
xchg
mov
xchg
repnz
int3
add
jno
out
jo
outsb
stc
mov
mov
lods
adc
pusha
outsl
call
jge
rcrl
mov
jg
add
daa
cmp
xchg
loope
jae
lock
test
xchg
je
jns
cli
pop
mov
in
pop
add
icebp
jg
mov
mov
dec
adc
mov
dec
jg
mov
and
repz
movsl
sub
pop
movsl
out
jns
dec
push
inc
adc
or
arpl
push
in
shrb
test
outsl
popa
jnp
fstps
mov
add
push
xor
ja
or
sbb
add
push
cmp
or
pop
adc
push
adc
icebp
ret
push
mov
lcall
pop
xor
mov
xor
lret
jecxz
std
push
push
call
xchg
push
dec
lret
daa
inc
mov
cltd
inc
enter
or
shlb
push
daa
pop
ret
ljmp
out
push
pushf
pop
mov
add
xor
andl
sahf
cmpsl
pop
pop
ds
ret
sub
fldl2t
pop
bound
ret
aad
notb
not
xchg
jne
fdivs
test
stos
xchg
cmpsb
mov
aam
aaa
jmp
sub
xor
xor
inc
mov
aas
dec
mov
jg
imul
enter
pop
mov
enter
jle
jle
push
ss
fwait
inc
mov
jbe
jl
cmp
lret
test
jmp
or
int3
cmpsl
sbb
and
movsl
fsubl
adc
mov
jp
xlat
add
and
push
adc
addb
movl
pop
leave
push
test
xchg
push
mov
or
aaa
in
ret
or
fidivrl
movsb
pop
adc
js
mov
popf
jb
add
test
jp
fdecstp
xchg
inc
mov
addb
jl
test
nop
test
push
dec
mov
lahf
mov
mov
xchg
sbb
cmp
fdivrl
inc
lds
leave
dec
cmpl
xchg
out
fldenv
or
mov
lea
out
mov
push
pop
xchg
mov
movsb
mov
mov
cmp
ret
mov
iret
jne
sbb
jo
push
or
addr16
out
shlb
pop
testb
add
mov
call
mov
mov
andl
cmpl
in
push
sub
bound
xchg
add
mov
cmp
adc
push
and
push
daa
xor
sub
mov
inc
xchg
into
mov
aad
mov
sbb
cmp
mov
or
dec
lret
cltd
adc
cmp
lea
xchg
shrb
les
clc
call
outsl
add
xor
fwait
pop
sub
push
pop
mov
outsl
out
iret
popa
shlb
sti
dec
jge
daa
aaa
dec
sbb
push
and
ret
aam
lcall
clc
fdivrl
lret
add
int
out
sbb
mov
pushf
fisttps
cwtl
mov
dec
inc
mov
ljmp
ret
inc
cwtl
clc
xor
cmp
loop
sbb
and
jecxz
dec
test
mov
dec
outsl
push
sbb
adc
es
and
dec
testl
xchg
jp
mov
sti
adc
outsl
fistpl
fsubrs
or
push
dec
daa
aas
push
mov
mov
loop
fimuls
xlat
test
bound
add
fwait
sarl
aam
inc
testl
aad
scas
push
jnp
cmp
cmp
push
sub
and
ret
popf
jb
mov
xchg
repnz
jl
xchg
dec
lahf
dec
sbb
mov
sub
ljmp
test
jnp
sbb
insb
pop
clc
push
insb
cwtl
mov
shrl
push
jb
jmp
xor
fsubr
xchg
test
and
xor
fs
mov
negb
sti
fiaddl
fistps
je
add
adc
in
jne
aad
into
mov
xchg
mov
mov
arpl
push
and
add
push
cmpsl
aam
dec
sbb
and
lods
movsl
and
js
pop
ret
test
cmp
ss
mov
mov
jg
or
leave
jecxz
ds
jg
in
push
push
and
add
pop
flds
sbb
push
mov
push
mov
push
xor
testl
subb
pop
mov
and
push
sti
rolb
fisubrl
and
push
and
popa
lock
fnstcw
test
andl
aam
mov
mov
jb
out
sub
cli
divl
xor
cmp
dec
sti
adc
pop
dec
ss
xchg
pop
cmp
aam
cmp
out
sub
ret
jns
mov
test
mov
mov
push
loope
inc
insl
insl
mov
imul
in
int
shl
das
rorl
imull
mov
imul
jbe
xchg
mov
dec
jmp
xor
xlat
es
add
xor
mov
loop
int
ret
push
adc
test
rcrl
push
arpl
push
sub
cmc
push
test
jnp
hlt
hlt
and
or
outsb
out
fisttps
mov
add
les
shl
push
punpckhdq
lahf
cmc
rclb
or
or
bound
xor
sub
nop
test
jge
push
jbe
or
or
jp
push
fwait
aad
xor
sbb
test
xchg
inc
std
push
dec
xor
popa
test
and
cmc
jp
stc
xchg
pushf
lret
das
dec
mov
jae
cltd
lret
dec
loop
dec
das
inc
push
jmp
or
int3
pop
imull
fisubrl
adc
mov
xor
gs
inc
or
add
mov
xchg
jae
sub
andl
pop
mov
and
int
rolb
push
sarl
arpl
shll
push
daa
pop
jae
adc
mov
sbb
dec
or
incb
pop
xor
add
mov
fistps
and
ss
cs
push
insb
push
push
out
pusha
dec
lahf
jae
icebp
jge
mov
repz
call
ja
cmpb
and
push
xor
leave
pop
sbb
cmp
sub
cmpsl
cmpsb
lods
gs
filds
push
or
stos
pop
xor
repnz
mov
add
sbb
pop
imul
pop
loope
les
movsb
mov
or
adc
mov
xchg
movsb
cmp
icebp
xchg
sub
stos
mov
cwtl
and
lock
sub
lret
addr16
pop
dec
jb
adc
cwtl
icebp
andl
fstpt
mov
push
int
mov
lahf
jecxz
xor
pop
jp
sbb
shlb
lcall
popa
lahf
dec
inc
mov
mov
mov
fcomp
sti
cmpsl
push
test
jecxz
repnz
ret
hlt
sbb
fdivs
ficompl
adc
push
xchg
lcall
xchg
cmp
js
fs
cmpsb
and
add
enter
in
arpl
bound
mov
pop
es
xor
adc
pop
xchg
mov
idivb
movsb
jno
dec
mov
loop
pop
cmpsl
xor
mov
dec
aad
pop
mov
adcl
or
stos
call
adc
int3
xchg
pop
hlt
aas
mov
cs
les
mov
popa
jo
mov
push
jle
push
sub
pushf
sub
adc
loope
mov
scas
je
loopne
pop
mov
pusha
add
repz
inc
lods
jno
lret
sub
mov
cmp
cmpsb
mov
xor
sbb
adc
mov
fildll
jmp
pop
xor
mov
add
dec
add
jno
fsubrp
dec
pop
or
fwait
adc
push
iret
movsb
add
test
pop
pushf
int
int3
xchg
in
adc
pop
arpl
sbb
lcall
setns
xchg
pop
nop
mov
fistpll
or
inc
lods
cmp
imul
xor
dec
clc
stos
gs
xor
xor
xor
add
addl
cmc
and
dec
fwait
je
or
and
xor
inc
cmpsl
sti
xor
mov
pop
fwait
mov
mov
sub
push
sbb
das
in
lds
xor
cmpsl
xchg
lret
cmp
out
ds
faddl
sub
pandn
dec
mov
xlat
insb
push
xchg
es
in
andl
gs
or
call
clc
movsl
repnz
mov
rcll
inc
test
sbb
dec
add
mov
fcoml
test
mov
sub
dec
and
popf
sub
pushf
std
pop
push
push
mov
dec
xchg
pop
jns
nop
xchg
push
mov
sbb
cs
into
jecxz
std
xchg
outsl
mov
int3
dec
js
mov
jecxz
xchg
and
mov
dec
sbb
xchg
xor
mov
fnstcw
ds
std
mov
mov
adc
out
pop
cmp
push
mov
sub
fisttpl
ds
jne
rcrb
shld
cmp
out
cmc
xor
fisttpll
rcrb
ds
inc
jb
pop
mov
adc
or
xchg
iret
clc
sbb
cmp
stos
cwtl
sbb
ja
stos
fwait
push
xchg
mov
insb
dec
aad
fldt
pop
iret
add
fimuls
lods
sbb
or
sbb
sub
dec
cmp
xchg
cwtl
add
pop
mov
dec
adcl
fadds
mov
lret
nop
inc
popf
dec
mov
rcl
out
call
int3
sub
sbb
ljmp
out
sub
les
cmp
pushf
outsb
mov
jp
push
insl
sbbb
pop
rolb
mov
and
xorb
fidivrs
push
sub
jb
push
jno
aaa
add
faddl
cs
sbb
lods
pop
fisttpl
add
mov
ljmp
inc
xchg
mov
xchg
out
or
jle
rcrb
mov
test
pop
insb
lods
enter
jle
and
outsl
hlt
sbb
cmp
jge
mov
ret
out
arpl
mov
jl
dec
sbb
sub
hlt
test
xchg
cmpsl
rorb
dec
mov
adc
test
lea
lods
outsl
cwtl
mov
test
rcl
popf
pop
sub
push
xchg
inc
sbb
or
pop
lahf
movsl
and
aad
xor
out
mov
idivl
or
sti
fdivrs
cld
shr
lcall
scas
xor
mov
jl
add
das
scas
cmp
sbbb
cld
or
xchg
jnp
andl
bound
loope
pop
pop
jp
into
xchg
pop
dec
jbe
mov
and
mov
mov
cmpl
lcall
fidivrl
adc
stc
daa
int
mov
movsb
shlb
xlat
pusha
test
adc
jge
cmp
mov
xchg
and
dec
dec
rcrb
push
sbb
jb
std
lret
mov
jle
mov
fisubrs
shl
xlat
jp
add
or
mov
adc
out
pusha
or
insb
mov
xor
mov
or
pop
mov
xchg
sbb
and
mov
call
fildll
mov
adc
scas
lcall
popf
mov
xchg
ret
aad
pop
enter
sub
sub
add
sub
movsb
jo
xchg
gs
pop
fwait
enter
push
testb
sbb
cmp
push
imul
repz
and
dec
incb
int3
add
inc
test
mov
or
inc
mov
lods
in
sbb
test
inc
pop
push
mov
mov
imul
and
nop
jle
es
or
mov
jp
sbbl
sub
ljmp
es
push
loopne
pop
inc
push
movb
sbbb
and
adc
and
ret
mov
add
imul
stos
push
jmp
xor
ljmp
mov
mov
ss
ror
fcomps
jne
mov
hlt
lcall
push
push
push
or
pop
xchg
xor
xlat
fsubrs
in
fisubl
push
adc
lcall
jbe
aas
pop
ret
dec
pop
inc
repnz
imull
mov
jp
or
aaa
imul
mov
cli
jbe
dec
inc
inc
push
jmp
fsubp
pop
or
test
cs
mov
ret
and
andl
cmp
mov
dec
jbe
scas
mov
mov
popf
dec
inc
cmp
jge
adc
imul
mov
stc
cmp
or
shll
add
dec
push
in
pop
xor
test
imul
push
call
pop
jl
cmp
pop
call
cmp
sbb
lods
xchg
and
rol
adc
out
insl
inc
mov
push
add
test
sti
imul
addl
subl
les
cmp
mov
in
hlt
insl
cmp
sbb
jge
pop
mov
dec
mov
jmp
rcll
add
sub
dec
xchg
cmc
sahf
das
sub
test
sar
loope
dec
out
pop
cmpsl
and
push
xchg
inc
or
ret
cmp
fisubrs
jno
into
mov
push
data16
push
mov
push
into
pop
xor
xor
js
mov
pop
imul
aam
lods
scas
push
cltd
push
mov
in
dec
inc
jp
sbb
pop
xor
repz
push
xor
mov
hlt
scas
mov
and
sbb
decl
push
xchg
mov
pop
sbb
lods
add
xchg
pop
mov
clc
push
push
xchg
movsb
xchg
cmp
pop
test
mov
mov
daa
xchg
adc
fldl
jg
lcall
shrl
cs
mov
popa
cmp
xchg
inc
push
xchg
or
sarl
aas
sbb
ror
cwtl
sbb
push
mov
cltd
dec
mov
fcoms
mov
lcall
in
sahf
pusha
dec
insb
popfw
inc
fnstsw
hlt
pop
lods
es
inc
popa
subl
xchg
sub
ljmp
rol
mov
lret
jbe
sbb
sbb
cmp
mov
les
jecxz
lcall
mov
imul
daa
inc
out
iret
mov
mov
sti
cli
cmp
push
pop
and
lock
jecxz
stc
sbb
or
mov
cmc
jl
pop
mov
dec
pop
pop
mov
xchg
cmpsl
or
js
xchg
push
cmc
mov
mov
inc
mov
cli
add
imul
out
mov
dec
dec
ss
aas
inc
popa
in
lock
xor
data16
or
in
cli
xchg
rcr
int
sub
and
femms
test
cmc
mov
xor
movsl
out
mov
test
rcrl
pop
fcomp
jno
in
into
cmp
idivb
mov
sbb
or
sbb
call
dec
and
int3
pop
les
cmp
mov
cs
dec
add
stc
movsb
jno
fnstenv
in
inc
not
cmp
sub
or
dec
and
push
movsl
dec
fs
mov
jnp
mov
test
imul
or
adc
ret
adc
mov
sbb
push
popf
jmp
scas
das
data16
push
lahf
push
jp
mov
enter
fidivl
xchg
sbb
jae
movsl
icebp
push
mov
shl
xchg
fsubr
xchg
mov
mov
shrl
pop
sbb
push
add
mov
add
aad
mov
ds
adc
incl
lock
loope
fs
xor
popf
loope
ds
stc
mov
push
imul
fcomps
add
dec
pushf
mov
icebp
xchg
mov
jge
sbb
xorl
jecxz
sbb
adcb
rorl
xchg
roll
fisubrs
in
and
ja
ficoml
lods
jns
jecxz
das
ds
add
and
ljmp
xchg
fcompl
ds
mov
lahf
inc
cmpsl
sub
add
mov
scas
cld
jnp
leave
add
sbb
les
gs
mov
lds
iret
iret
out
jbe
out
rcrl
icebp
jg
insb
scas
out
mov
or
pop
pop
dec
sub
shrl
je
xchg
sbb
cmp
add
add
shll
cmpsb
mov
xchg
inc
nop
xchg
fwait
insb
push
rorl
mov
lahf
loop
xorb
call
jno
adc
dec
cmp
iret
repnz
idiv
int3
enter
adc
in
negb
mov
push
cwtl
ret
sub
mov
imul
xchg
push
pop
xchg
lods
mov
xchg
sub
push
mov
stc
jecxz
xchg
sub
inc
mov
and
loop
add
shll
test
adcl
inc
push
inc
push
and
mov
pushf
mov
cmp
or
mov
ret
add
sub
jo
mov
mov
movsb
fdivl
push
int
fmuls
inc
xorb
fsubr
inc
daa
in
mov
and
mov
ret
loop
jns
pop
sub
xchg
cmp
call
cmp
stc
loop
inc
mov
jbe
loope
mov
push
mov
ret
push
test
inc
cmc
mov
xchg
jbe
insb
add
fcom
loope
ret
xchg
sbb
unpcklps
test
mov
xor
bound
xor
adc
ficoms
mov
fcomi
aaa
mov
fsubl
sub
mov
or
data16
jns
ret
adc
loop
jae
shrl
push
aad
jne
inc
int3
mov
mov
out
iret
mov
or
mov
xor
enter
add
aam
xchg
adc
outsb
es
xchg
rolb
aad
out
adc
in
lock
xor
stos
cltd
or
dec
movsl
xor
in
add
mov
rcl
xor
sub
cld
mov
sti
sahf
addr16
sbb
es
mov
and
add
mov
hlt
push
jae
bndldx
popa
mov
push
pushf
adc
mov
shll
push
xlat
ficoms
or
ja
in
sub
xchg
jp
pop
es
mov
into
pop
push
pop
xchg
fsubl
mov
movsl
rorl
sub
fdivrs
mov
rol
dec
ror
sub
sbb
adc
pop
icebp
sub
mov
lock
adc
setle
xlat
jno
popf
out
addr16
adc
pushf
cwtl
xchg
inc
bswap
or
lock
fbld
push
out
and
mov
push
stos
popf
adc
js
pop
dec
sub
popl
cmc
enter
pop
cmp
movsl
xlat
pop
test
sbb
test
and
cwtl
cvtdq2ps
bound
mov
mov
cmpsb
in
push
xor
repz
or
pushf
arpl
imull
mov
lea
pop
inc
xor
sahf
xchg
in
adc
sbb
cmp
aad
pop
xchg
mov
mov
out
jp
jl
shrb
fwait
or
xchg
test
pop
inc
stos
fsts
cwtl
lds
pop
shll
push
outsb
lret
sbb
shll
xlat
xor
mov
add
lock
insl
out
or
adc
inc
fcmovu
cwtl
lock
mov
mov
or
xchg
bnd
out
out
jg
sbb
popa
mov
les
jns
cmp
add
add
xor
adc
jne
ja
rcll
and
fs
jmp
sbb
inc
sub
xchg
imul
aad
sbb
je
lcall
jmp
jo
and
dec
repz
and
push
xor
mov
pusha
jg
pop
idivb
mov
ret
push
push
add
arpl
add
add
ret
stos
mov
push
shll
mov
mov
in
out
add
and
pop
arpl
mov
jle
pop
mov
fwait
cltd
sbb
pop
daa
mov
ss
jmp
inc
jmp
and
lret
shll
sub
fiaddl
daa
filds
xor
sbb
sti
and
push
jnp
sub
cmp
lcall
push
ljmp
adc
sbb
imul
cmp
push
arpl
cmp
fadds
cs
lds
out
lcall
loop
xor
jb
jle
mov
mov
fs
adc
shr
adc
addr16
dec
mov
pushf
or
and
or
push
aad
xor
jo
js
lahf
jl
mov
pop
mov
push
cmpsb
lea
sbb
shrb
inc
popf
mov
adc
aas
mov
shll
or
pop
mov
aad
lds
gs
ljmp
sbb
cmp
loope
test
sbb
data16
sub
imull
imul
mov
cmp
sub
push
push
jle
ss
jmp
xchg
std
cld
lods
lret
push
shlb
dec
mov
add
scas
icebp
dec
inc
xchg
add
insb
jge
scas
push
iret
add
hlt
movsb
rcrl
loopne
lret
frstor
push
mov
into
fistpl
repnz
or
lahf
xor
aad
sbb
mov
sub
pop
fdivp
jge
mov
pop
pop
push
jns
mov
sub
cmp
insb
jnp
dec
mov
xor
lahf
out
xlat
pop
or
pop
push
lcall
adc
movsb
fsubl
inc
cmp
mov
cs
nop
xor
rcl
cmp
jle
into
push
mov
movsb
lods
cmp
mov
mov
icebp
imul
mov
xchg
xchg
inc
imul
mov
out
imul
cmp
enter
jl
aaa
and
push
rcrb
std
sub
insl
jp
xor
push
fildl
push
mov
adc
movsl
mov
insl
push
insl
dec
shrl
ja
rcrl
adc
pop
je
or
movl
cmc
cli
mov
ja
dec
xchg
popf
movsl
movsl
xchg
andb
cmp
inc
mov
stc
clc
je
and
mov
repz
in
loop
mov
lret
in
test
dec
dec
xchg
push
cmpsl
imul
dec
andl
jecxz
or
pop
ss
pop
ds
in
hlt
or
pop
mov
into
in
mov
adcb
nop
jle
js
cmc
lret
out
ljmp
mov
clc
xchg
lds
ja
in
xor
test
add
push
pop
sbb
lret
or
xchg
cmpsl
scas
mulb
cld
mov
cmp
cmp
xor
or
or
mov
loop
es
inc
mov
imull
outsl
jge
das
mov
mov
push
add
xchg
push
in
es
leave
mov
mov
jo
mov
or
test
jl
testl
cltd
mov
aam
xchg
arpl
test
dec
push
mov
fwait
cmp
sahf
or
pop
fwait
push
jl
into
imul
out
imul
mov
or
ja
add
push
outsl
in
mov
sub
int3
and
inc
cmp
push
roll
jo
cmpsb
cmpsl
mov
cwtl
pop
fnstenv
cmp
rcl
cs
cmp
mov
pushf
sarl
jmp
arpl
push
sub
adc
outsl
mov
mov
popa
sbb
scas
cmp
lret
xor
jp
test
xchg
mov
mov
pop
xor
clc
cmp
pop
jae
pop
pop
pop
iret
rorb
adc
jecxz
cwtl
push
xchg
cmp
xor
cmp
push
inc
mov
loop
push
xchg
add
sub
incb
adc
lds
lea
adc
sub
add
add
push
aaa
daa
sbb
push
loope
movsb
xor
in
in
jl
pop
clc
jp
and
pop
frstor
cmp
pop
jmp
sub
insl
orb
sbb
mov
or
add
lock
bound
movsb
enter
jmp
enter
adc
dec
adc
call
mov
out
fdiv
test
nop
outsb
jge
outsl
mov
cmp
inc
test
je
sbb
push
and
test
cld
mov
xor
adc
test
outsb
push
cmp
mov
pusha
pusha
mov
scas
add
xchg
das
in
or
out
adc
xchg
pusha
fcmovnu
adc
pop
cmpsl
dec
mov
shrl
decb
test
call
mul
cmpsl
gs
xchg
jg
mov
aaa
inc
pop
add
ss
jmp
lret
inc
pop
adcl
push
dec
stc
das
jecxz
pusha
mov
push
xor
aad
sahf
and
mov
xor
stos
pop
pop
xchg
mov
movsl
inc
cmp
out
push
push
stc
mov
test
ja
cltd
aam
fadds
mov
shl
add
xchg
test
sub
ja
std
roll
and
jae
gs
mov
adc
aaa
fiadds
rorl
jnp
leave
lret
xor
int
mov
jmp
cli
repnz
sbb
sbb
xchg
mov
mov
inc
mov
and
push
pop
clc
insb
jo
imul
or
mov
hlt
dec
aaa
mov
leave
push
cmp
cmc
pop
fs
jbe
adcl
mov
jmp
aas
cwtl
cmp
out
cmp
icebp
fisubs
xorl
sub
fpatan
loop
adc
sub
xchg
add
cmp
adc
cmpsb
and
inc
gs
dec
stc
aad
mov
mov
test
mov
fisttpl
mov
mov
xor
add
movsb
shrl
dec
cmp
mov
push
xchg
mull
xor
gs
sahf
scas
cwtl
mov
repnz
jnp
arpl
jmp
inc
out
shrl
lods
inc
leave
push
mov
fiaddl
xor
push
xor
add
mov
roll
push
test
cwtl
adc
push
aad
sbb
xchg
test
fmulp
pop
xchg
imul
mov
mov
inc
jo
push
dec
dec
mov
lret
into
nop
or
cs
mov
scas
repnz
mov
loope
in
sbb
pop
cmp
xchg
icebp
or
mov
shl
sub
dec
mov
jp
push
daa
scas
dec
or
pop
cmp
xor
jo
movsb
lahf
xchg
loop
push
jns
xchg
or
jg
fwait
cmp
jo
sbb
xlat
cltd
mov
mov
xlat
pop
rolb
cmpsl
jp
mov
data16
sub
pop
xchg
push
nop
adc
test
push
jb
jae
test
cmp
out
pop
and
out
stos
or
adc
and
repz
or
sub
sbb
filds
ret
iret
add
xchg
hlt
xor
daa
mov
add
fnstenv
inc
xor
mov
push
xlat
fdivs
add
sbb
xor
and
lret
sub
pop
ret
pop
cmp
push
xor
pusha
shlb
mov
into
lahf
cmp
dec
cmp
ss
adc
dec
test
sar
and
pop
jnp
jno
push
mov
adc
and
shll
aas
xor
mov
fdiv
mov
pop
sti
cmp
shrl
lret
jae
pop
pop
shl
jmp
cwtl
mov
stos
or
xor
sti
or
icebp
xchg
jns
jle
call
jne
add
insl
xor
jae
cmp
cmpsl
lahf
xor
cmp
xchg
inc
push
cwtl
mov
and
comiss
xor
pop
lret
mov
pop
lret
bswap
sbb
fdivs
cmp
sbb
shlb
lock
push
shrl
cmp
lcall
jecxz
add
cmpsl
in
jl
sbb
out
xor
sbb
and
add
lret
movsb
loope
mov
scas
imul
mov
mov
cmp
in
mov
pushf
xchg
fldenv
xlat
jnp
popl
and
ret
xor
ljmp
ss
shlb
pop
inc
js
mov
adc
out
or
jae
roll
add
cmp
std
xacquire
add
jb
in
sub
cmp
nop
out
push
or
aas
xchg
out
cwtl
lods
lahf
inc
mov
mov
xchg
adc
push
pop
jbe
cld
test
jno
xchg
les
test
in
popf
dec
jg
cmp
lcall
and
push
ret
mov
add
data16
lock
xor
notb
cmp
in
addl
divl
fwait
lahf
jbe
cmp
push
jl
mov
out
lods
dec
xorl
negb
jl
add
mov
cmp
mov
out
mov
push
in
into
enter
sbb
xor
mov
sub
inc
push
push
and
jecxz
scas
cwtl
fucomip
add
xchg
or
and
dec
cltd
adc
xor
arpl
pusha
mov
pop
lods
pop
hlt
jp
mov
jo
xchg
leave
cld
jmp
adc
and
rclb
ds
jmp
out
push
sub
pop
cs
pop
fs
jne
adc
mov
jl
andl
imul
or
push
test
fsubr
xchg
aaa
mov
xor
aad
push
mov
fisttpl
push
faddp
or
in
mov
push
sub
scas
pop
subb
jnp
inc
dec
mov
mov
xchg
push
xchg
lret
cmp
in
and
pop
insl
clc
cmp
jb
xchg
jno
add
mov
bound
loopne
aam
out
mov
inc
lcall
or
xchg
fstpt
or
shl
mov
jmp
jno
and
xor
lods
sarb
addb
shll
sbb
mov
mov
aad
scas
pop
addl
jbe
adc
clc
xchg
cwtl
cmp
in
shl
dec
push
and
mov
cmp
inc
and
test
sbb
test
mov
shll
out
pop
push
sub
lods
rol
dec
cltd
imul
test
push
ret
insb
push
cmp
aad
or
mov
movsb
pop
mov
xchg
out
fmull
xchg
sbb
dec
sbb
xchg
mov
mov
sub
pusha
mov
jnp
mov
aad
stos
outsl
mov
cmp
dec
popa
cmc
movsl
push
ret
fisubrs
hlt
rcll
xchg
or
mov
stos
cli
movb
ja
mov
notl
in
cmp
pop
mov
pop
ds
bswap
ss
jns
hlt
xchg
ret
or
movl
popf
mov
pop
push
sbb
aaa
rcll
adc
mov
test
cwtl
nop
imul
bound
divb
add
mov
ss
or
into
mov
lock
adc
imul
jg
leave
fidivrl
push
adc
loopne
shll
xor
add
push
lea
cwtl
mov
cwtl
cmp
push
fs
inc
mov
lahf
out
jge
in
push
lock
push
pop
lock
cmp
jmp
push
mov
mov
and
pop
cld
xchg
gs
jns
in
xchg
aad
lods
mov
in
push
test
add
les
fsub
ret
pop
push
insl
jl
filds
xchg
movsl
daa
dec
popf
sbb
xlat
dec
enter
pusha
add
in
inc
adc
and
sbb
cld
pusha
repnz
popa
mov
dec
pop
aam
xor
mov
repnz
fidivl
mov
stos
push
jle
sbb
ljmp
ja
pusha
jmp
or
shl
xor
xorl
lds
ja
sbb
into
adc
call
inc
popf
xchg
lds
jae
mov
mov
mov
jo
push
dec
xchg
mov
cmp
mov
repz
pushf
xchg
and
sahf
aas
fstpl
jns
push
cli
stc
jecxz
in
aaa
mov
mov
dec
jb
cmc
ja
xchg
addr16
loope
mov
js
les
outsl
or
cltd
sub
pop
cmpl
or
pop
addl
gs
popa
sub
jno
jns
cltd
daa
mov
repz
inc
dec
sub
pop
shrl
arpl
pop
repz
test
out
mov
inc
daa
or
testl
cmp
mov
bound
cltd
xchg
pop
push
sub
mov
mov
push
xor
add
cmp
dec
mov
dec
ljmp
xor
push
sahf
orl
cmpsl
jns,pn
jge
dec
inc
push
jae
push
stos
lcall
faddl
outsb
dec
mov
xchg
aam
cmp
dec
jmp
lds
in
dec
aam
mov
dec
mov
jb
nop
adc
dec
div
cmpsb
pandn
inc
xchg
mov
pop
stc
les
out
dec
or
in
pop
mov
pop
pop
jnp
out
jbe
mov
mov
dec
adc
outsb
je
in
cwtl
test
inc
jg
cmp
pop
fcoms
mov
mov
mov
sub
ret
inc
aam
jp
or
adc
push
jb
push
push
mov
sbb
das
sub
mov
out
push
dec
or
inc
mov
pop
lds
xlat
repz
jecxz
and
mov
xchg
mov
dec
or
loop
fldt
mov
in
ljmp
mov
adcb
std
xor
mov
loope
mov
out
scas
adcb
mov
add
xlat
jle
ror
hlt
inc
shlb
xor
dec
pop
mov
out
fwait
xor
cmp
xor
or
jle
cmp
mov
roll
movsb
ss
pop
sbb
shlb
push
jno
jb
mulw
inc
test
aas
insb
sarl
imull
jnp
pop
sub
scas
fs
pop
xor
inc
xor
inc
mov
mov
mov
fisubs
std
xor
jo
cmp
pop
bound
xchg
xlat
sub
push
dec
mov
inc
fbstp
and
xchg
movaps
add
inc
test
mov
aad
mov
push
icebp
push
sub
inc
jmp
out
test
sub
lcall
test
mov
dec
sub
xor
mov
add
push
in
sar
insl
cmpsl
rcrl
movsb
sub
in
cmpsb
push
push
mov
in
insl
call
inc
popf
mov
test
lret
int3
jle
pop
or
in
inc
fldl
inc
sbb
mov
xchg
aad
cmp
add
add
add
and
jge
out
cmp
leave
cs
data16
inc
mov
scas
std
and
jge
scas
test
aas
mov
mov
rorb
push
mov
in
mov
imul
sti
push
sbb
rcrl
imul
fcomps
into
sti
lea
dec
jbe
pop
jo
ljmp
xchg
xchg
xchg
das
sti
add
push
cltd
loopne
inc
dec
in
jle
imul
mov
addr16
lea
jmp
dec
lahf
scas
mov
mov
lea
out
sbbb
fadd
xchg
mov
xor
lock
dec
xor
es
test
test
jg
mov
fmuls
bswap
add
sbb
inc
jge
addr16
cs
push
testl
aas
lret
lds
fisubl
lods
int
xor
jo
imul
xor
scas
mov
sti
jg
adc
xor
inc
cmp
xor
loope
xor
dec
inc
add
push
lock
cmp
mov
jmp
fiaddl
xor
mov
mov
sbb
pop
nop
out
dec
ja
mov
outsb
icebp
push
push
fsubrl
shrl
shlb
mov
subl
aaa
std
icebp
lods
popf
cli
shll
and
arpl
out
repz
cmpb
mov
push
mov
outsl
sub
std
out
xchg
sub
test
dec
test
pop
sub
lcall
xchg
inc
std
es
jae
fs
jae
and
sti
enter
sar
inc
jge
cltd
add
cmp
cltd
lea
and
jl
scas
ficoml
fmul
cmp
shlb
stos
push
mov
sbb
inc
pop
jno
mov
cld
call
jnp
shll
push
sub
jo
insb
fisttps
jg
rcll
sub
xchg
mov
jmp
xchg
mov
jge
xchg
mov
lret
jbe
add
fs
stc
push
lea
sub
mov
xor
lock
adcl
int
dec
sbb
fcoms
iret
test
xchg
jne
test
or
pusha
add
lret
rcrl
mov
add
xor
mov
addr16
or
cli
icebp
mov
or
fcoml
xor
mov
movsl
add
push
fwait
addl
cmp
dec
ud1
imul
out
xor
push
mov
mov
lea
in
in
or
cmp
jp
mov
sbb
dec
mov
cld
push
mov
in
dec
out
pop
lret
pop
rorb
jp
sti
cmp
push
rcrl
xor
pop
or
aam
outsl
xor
clc
and
test
mov
lret
ss
add
insb
add
push
nop
adc
aam
push
fists
sbb
gs
aam
xchg
enter
pop
push
cld
push
sub
lcall
xchg
jmp
cmp
loope
clc
popa
mov
sbb
xchg
sti
inc
maxps
pop
cmpsb
scas
add
les
adc
jle
and
push
pop
lock
mov
aas
jge
dec
cmp
inc
pusha
cmp
xchg
or
cmpsl
push
jg
mov
in
xchg
sar
fcompl
out
loop
test
ficomps
pusha
in
mov
adc
xor
hlt
stos
call
sub
dec
adc
and
mov
addl
les
and
js
sbb
jge
fstl
or
dec
fndisi(8087
mov
mov
push
addr16
mov
stos
test
inc
ljmp
xchg
add
and
mov
imul
sub
shlb
hlt
cmp
addb
lcall
pop
xchg
js
lcall
test
in
mov
pop
lcall
cmp
shrl
xchg
cmp
fs
sbb
push
pop
adc
fsts
bound
sti
inc
or
nop
repnz
repnz
loope
xchg
pop
das
pop
lcall
shll
pop
push
std
xchg
aam
mov
int3
inc
mov
inc
sarb
ret
enter
lds
sahf
sbb
push
mov
out
decb
jae
ret
bnd
xchg
lcall
lret
or
int3
int3
add
jo
push
push
notl
xor
adc
xchg
sbb
dec
mov
xor
out
adcl
mov
insb
lret
sub
xlat
fsubrs
cli
adc
or
cmp
mov
das
inc
scas
fiaddl
mov
mov
andb
clc
push
cltd
divb
push
xlat
aas
cmp
mov
or
sbb
and
rclb
sub
sbb
add
push
xor
imul
sbb
ret
adc
push
aam
cmp
shlb
pop
sub
inc
push
pop
testb
stos
cmpsl
lret
mov
mov
aas
int3
pushf
das
lret
outsb
xor
pop
clc
test
xlat
iret
mov
iret
xchg
mov
cld
mov
movsb
daa
pop
mov
inc
push
push
cwtl
ficomps
push
shrb
es
mov
imul
inc
fwait
push
leave
sti
cmp
aam
add
fsubrs
fcomps
mov
lods
jle
xchg
xor
sbbb
jle
push
add
shrl
lret
adc
dec
loop
aad
mov
mov
xchg
mov
cmpsl
aam
xor
lret
cmpsl
jno
clc
or
imul
xlat
adc
and
int
lahf
fwait
mov
arpl
xchg
outsb
test
or
cwtl
jge
adc
mov
jo
add
sub
outsb
ja
jl
imul
cmpsb
lods
cs
push
pop
mov
stc
xchg
jnp
gs
push
lret
out
add
mov
mov
outsb
ljmp
das
test
push
scas
pop
in
lods
mov
pop
mov
cli
jecxz
lods
les
int3
xlat
lret
or
rcrl
xor
and
jb
xor
sar
dec
or
and
mov
cltd
adc
jle
shlb
stos
dec
push
add
out
sub
add
mov
mov
push
or
mov
inc
cs
jecxz
das
push
ja
rcrb
push
push
xor
mov
xsaveopt
lods
inc
nop
fsubrs
mov
popa
es
inc
shl
nop
jbe
mov
sub
sub
mov
dec
ds
ret
mov
sbb
loopne
cmpl
pop
dec
xchg
mov
daa
mov
mov
mov
xchg
mov
lea
lea
and
aam
jle
addr16
cmp
xor
sub
lods
es
jge
xchg
dec
xor
xchg
mov
insl
in
gs
outsl
add
jno
scas
mov
inc
add
fs
pop
cmp
xchg
mov
nop
add
arpl
xchg
movsl
movsl
xchg
xchg
pushf
iret
xor
int3
out
movsl
fwait
push
fcomi
lcall
mov
xor
mov
jbe
rcrl
xchg
adc
xor
aad
shrb
pop
jae
or
insl
xor
cs
cltd
je
pop
xchg
mov
pop
ret
fldl
mov
pop
int3
lret
insl
sub
dec
repz
out
outsl
jge
dec
or
xchg
iret
lret
add
aam
sub
adc
rcl
aas
and
test
mov
lret
mov
sub
mov
xchg
je
dec
fadds
out
into
lcall
sub
inc
sub
xchg
sub
mov
fidivrl
shrb
adcb
mov
stc
sub
rcrb
jecxz
add
jmp
adc
fsubrp
push
mov
add
subb
xchg
or
outsb
xchg
xor
mov
xor
xchg
push
cmp
mov
sub
adc
lods
push
call
jle
mov
enter
jle
mov
push
pop
xor
xchg
inc
add
cld
repnz
js
inc
test
icebp
rolb
shr
and
inc
mov
cmc
add
inc
dec
sub
dec
std
cmpb
jbe
push
cmp
inc
ljmp
xor
xlat
jne
push
or
adc
lds
inc
xchg
fldcw
sbb
or
push
sub
shr
hlt
or
fidivrs
ffree
fsubr
mov
xor
addr16
pop
adc
movsl
xchg
lcall
mov
jae
dec
and
pop
shrb
fwait
mov
or
lret
add
sub
ror
pop
int
ret
loop
iret
push
enter
push
xchg
inc
inc
inc
fs
sbb
dec
mov
cmp
je
fs
pushf
push
sub
ss
vpxor
mov
sbb
jge
cs
and
pop
into
dec
addr16
jnp
stos
jge
sub
test
lods
jmp
shrl
jb
and
leave
bound
or
inc
and
adc
std
stos
insb
pusha
or
cmp
icebp
adc
popa
xrelease
fs
jmp
leave
push
adc
mov
aam
aaa
andl
sti
xchg
fnstenv
popa
aas
repz
push
pop
movsb
push
rorb
adc
fs
movsl
lock
scas
push
cmc
mov
addr16
pop
adc
inc
fisttpl
shl
addr16
jp
notl
rorb
and
lcall
push
call
cmp
xor
lds
out
or
dec
out
jno
xchg
cld
and
repz
fsubrp
out
dec
xchg
mov
loopne
loope
or
xchg
jbe
loopne
push
outsl
fcomps
fistpl
das
jecxz
sbb
rcll
call
test
es
cmc
fwait
dec
jae
loop
dec
pop
test
xchg
mov
jmp
cmp
ja
clc
mov
cmpsb
pop
pop
xor
fwait
inc
mov
in
add
xorb
dec
cwtl
adc
insb
lods
scas
sarb
rcl
mov
inc
cmpsl
dec
jg
les
scas
add
mov
pop
xchg
fisttpll
jb
stos
rol
pushf
push
aas
mov
clc
push
cmp
mov
loopne
cmpsb
mov
xor
aad
in
addl
rcr
mov
lahf
clc
test
inc
aaa
add
bound
add
std
inc
scas
jmp
addl
rorb
hlt
inc
dec
and
repz
mov
sbb
pop
shll
scas
stos
jp
push
mov
push
adc
popa
nop
or
ror
mov
sti
aaa
adc
xchg
sbb
sub
cmpsb
sub
mov
inc
xorb
imul
add
and
jmp
in
or
mov
pop
xchg
icebp
loop
cltd
and
mov
pop
sbb
jle
jno
or
fldl
dec
mov
sbb
add
inc
movsb
xor
popa
vunpcklps
mov
std
sbb
dec
dec
or
shlb
push
add
add
and
leave
fdiv
pop
fcomps
dec
rorb
hlt
filds
adc
into
pusha
dec
push
js
sub
xchg
or
sub
fsubr
test
sbb
out
cwtl
negb
push
lcall
sub
movsl
push
fidivrs
mov
mov
pop
pop
insl
xchg
pop
enter
jecxz
in
fisttpl
hlt
ss
mov
adc
push
scas
jg
fisubl
mov
inc
filds
rcrl
or
std
push
push
mov
aas
push
repz
xchg
add
mov
and
dec
sbb
fcoml
inc
xor
out
jecxz
aas
adc
enter
xor
mov
pop
in
jmp
aaa
cmp
inc
lret
xchg
leave
pop
mov
sbbb
pusha
loope
mov
jmp
ret
rol
mov
movsb
addr16
rorl
lcall
jo
test
addl
enter
or
dec
pop
xchg
fsubs
in
xchg
pop
mov
mov
sub
push
mov
sub
shrb
push
and
mov
es
inc
fwait
test
push
add
inc
test
mov
push
mov
es
pop
jg
add
mov
jo
mov
push
or
mov
std
jg
mov
loope
inc
sahf
jnp
mov
fneni(8087
pop
pop
fistl
std
sub
stos
outsb
dec
xlat
cmp
or
test
adc
mov
or
mov
call
adc
js
dec
cli
test
movsl
push
pop
or
cmp
fldl
mov
lret
mov
add
pop
rol
mov
aaa
pusha
add
inc
mov
ficoms
pop
jecxz
scas
fwait
mov
insl
add
fsubl
cmpb
lock
lcall
out
fsub
sub
jo
mov
mov
and
cwtl
movsb
lcall
rcr
add
pop
sbb
pop
ja
or
fst
mov
sub
inc
ret
push
dec
inc
xchg
jbe
xchg
and
adc
fisubrs
push
xor
push
loopne
xor
test
in
xchg
adc
icebp
adc
mov
or
or
push
xchg
ret
push
inc
mov
xchg
rorl
inc
xchg
fmull
cli
fnop
fwait
outsb
in
es
pusha
push
or
fs
aaa
mov
enter
add
loopne
cmp
dec
hlt
cmp
das
xchg
pop
gs
inc
lret
and
loopne
int
mov
sbb
sub
loopne
fsubr
mov
xor
sbb
mov
pop
mov
and
sub
dec
dec
fildll
shll
add
js
pop
sub
add
mov
outsb
sti
sbb
scas
hlt
mov
jg
cmpsl
sub
push
in
pop
push
and
aad
std
push
inc
mov
rcrb
sub
jecxz
rorb
xorl
cmp
aas
sub
pusha
shlb
stos
sbbl
push
push
lret
sub
imul
sahf
mov
lock
xor
mov
adc
out
mov
inc
cmp
cmp
cli
adc
mov
shrb
jae
xor
push
loop
xchg
adc
push
add
add
out
cli
rcrl
sub
pop
or
fwait
mov
jno
insl
pop
dec
fsubl
sub
xchg
js
jbe
enter
inc
mov
inc
and
xchg
scas
dec
andl
inc
cld
xchg
es
insb
mov
pop
sbb
mov
vmovlpd
or
loopne
push
mov
cmp
inc
lret
rorb
mov
pop
sub
jbe
pusha
paddsw
stos
bound
push
ja
ret
test
scas
popf
gs
sysret
xchg
mov
push
divl
ltr
daa
mov
stc
mul
dec
stos
mov
mov
movsl
mov
inc
popf
inc
mov
inc
push
repz
push
cmp
sbb
cltd
je
mov
inc
cld
push
push
push
test
mov
add
and
jmp
cwtl
lods
adc
add
int3
test
out
das
jnp
int
cmp
pop
nop
adc
ljmp
add
dec
push
lds
add
loope
cld
fisubs
jno
mov
dec
xor
fwait
jmp
test
das
cmpb
cmc
mov
xor
shrl
test
dec
pop
dec
test
mov
jg
and
cwtl
or
inc
aad
jecxz
ds
push
inc
dec
enter
add
scas
popa
std
into
xlat
pushl
arpl
push
mov
lods
popf
scas
lds
push
lods
movsb
mov
push
dec
mov
pop
ds
push
ficompl
cmpsl
hlt
lahf
lret
mov
adc
push
push
scas
ja
shl
fwait
movsl
cmpsb
jbe
fiadds
or
inc
filds
xorb
popl
inc
mov
mov
pop
cmp
lods
sub
cmpsl
les
xor
cld
loope
hlt
mov
fidivrs
push
mov
jae
in
cld
push
ret
incl
test
fs
mov
sahf
mov
and
mov
dec
enter
push
cmpsl
cmp
ljmp
test
in
movsl
or
mov
inc
sbb
mov
popf
cmp
andl
fcompl
or
mov
mov
jbe
ret
mov
outsl
xchg
push
jecxz
push
jnp
mov
mov
lods
movsb
push
movsb
push
and
xchg
movsb
sahf
dec
sub
adc
in
subl
dec
repz
jnp
add
in
xchg
pop
aas
dec
pushl
mov
add
sahf
gs
loope
push
or
xchg
mov
xchg
popa
xchg
cltd
xor
ficoms
cmp
stc
xchg
dec
loopne
pop
push
dec
and
xlat
loop
inc
sbb
sbb
jne
cmpl
pop
ficoml
dec
mov
jle
inc
inc
push
mov
adc
js
repz
inc
and
cmp
aam
test
xchg
jge
adc
lcall
std
push
jns
push
xor
scas
iret
pop
out
dec
add
ss
xchg
sub
test
dec
aam
popf
and
cmp
push
sbb
sti
bound
lock
into
mov
outsl
movsl
testb
cmp
jne
aad
cmp
jno
adc
add
add
dec
icebp
jno
mov
adc
aam
fucomi
int3
mov
jmp
nop
sub
hlt
cmc
aaa
cwtl
inc
cmp
shrl
xor
out
xor
mov
cmpsb
cmp
addl
stc
fisttps
vpslld
call
add
mov
push
push
sub
cmp
lds
ja
xchg
fsubrl
xchg
inc
jo
inc
scas
lret
or
movsb
mov
or
cli
mov
xor
sub
fwait
sbb
mov
xor
pop
cli
sub
sbb
xchg
add
and
mov
mov
fneni(8087
imul
out
pop
mov
dec
dec
ret
inc
out
xor
gs
xchg
fstps
aam
out
mov
jle
sti
jecxz
out
xchg
and
sub
xchg
mov
sub
inc
and
cmp
pusha
xor
xor
fs
int3
cs
imul
push
add
lods
push
dec
int
mov
or
mov
stc
mov
leave
int
sub
mov
aad
dec
cmc
jbe
aas
pop
scas
add
and
cmp
push
ret
call
fsubp
dec
stc
imul
mov
je
pop
idivb
mov
rcrb
pop
mov
xorb
jl
dec
test
pop
sahf
sub
mov
fcmovnb
lods
xor
sahf
mov
sub
mov
inc
sbb
in
test
mov
pop
in
mov
cmpsb
sub
pop
sub
adcl
inc
push
cmp
mov
inc
nop
test
nop
or
sbb
jns
mov
add
out
push
inc
idivb
pop
cmp
test
iret
ficoml
mov
lret
sub
insb
pop
sbb
inc
inc
std
test
mov
mov
loopne
mov
sti
hlt
xor
sub
adc
inc
fistl
pusha
test
lret
test
or
lock
mov
and
aaa
fistpl
add
pop
mov
mov
jecxz
push
mov
je
stc
push
shlb
call
loopne
movsb
test
xor
add
or
out
fldcw
xchg
movsb
jg
out
mov
inc
mov
inc
jl
push
push
and
insl
sub
fwait
inc
aas
xchg
sbb
push
stos
loope
sub
loopne
cld
enter
jne
add
dec
and
mov
dec
and
add
mov
insb
neg
mov
cld
rclb
pop
les
jmp
xor
pop
mov
iret
push
jecxz
mov
pop
xor
mov
gs
int
pop
ror
pop
sub
pop
add
dec
or
bound
inc
mov
push
mov
xchg
sbb
test
adc
xor
dec
xchg
insl
jns
pop
negb
sbb
sar
push
ljmp
add
sarb
sbb
imul
dec
pop
dec
sti
idivl
ljmp
pop
and
add
jae
clc
or
push
popa
mov
fsts
idivl
adc
jp
in
cli
mov
aaa
jp
fcmovne
inc
test
pop
pushf
fcompl
cmp
fistps
movb
push
push
cmp
jno
or
cmp
repnz
jmp
mov
jno
sub
cmp
adcl
fistpll
scas
push
movd
or
inc
xor
xchg
inc
pop
out
popl
ja
push
push
mov
fsubrl
push
dec
dec
ss
lods
cmp
inc
scas
mov
or
jns
lret
enter
adc
inc
inc
cmpsb
or
sbb
lods
cmp
imulb
jmp
outsl
test
test
das
jl
sbb
daa
jb
jbe
jno
and
sub
and
mov
xchg
popa
dec
mov
xchg
pop
cmpsb
std
loope
cmpsb
shrl
sub
xor
pop
and
shlb
inc
repnz
dec
lods
enter
ret
pop
ret
out
leave
jne
scas
movsl
outsl
sbb
xchg
cmp
push
mov
fstps
adc
xchg
mov
iret
push
sbb
jb
mov
ja
test
mov
push
xor
jmp
stc
in
fidivrl
mov
or
add
mov
outsb
sbb
pop
adc
dec
mov
add
scas
mov
push
imulb
sub
xor
setle
jmp
xchg
ret
popf
cmp
sbb
xchg
add
jmp
fmull
cltd
mov
fs
fcmovnb
cmp
aaa
lds
repnz
pop
sbb
mov
jb
cmpsb
cmpsb
push
xor
pop
fdivrs
loop
scas
or
push
dec
scas
rol
les
cmc
icebp
test
movsl
xorb
mov
pushf
adc
jo
mov
sub
adc
push
scas
cld
dec
rcr
pop
enter
icebp
jno
jne
and
pop
sub
xor
mov
sbb
test
dec
and
adc
outsb
xchg
sub
imul
insl
sbb
xor
aas
test
and
negb
aas
pop
cld
addr16
ror
dec
adc
sub
out
jno
inc
sub
div
pop
mov
add
test
nop
add
xchg
dec
add
fs
mov
xor
mov
adc
imul
pop
jnp
mov
int
and
dec
pusha
call
test
outsb
lods
push
fdiv
fnstcw
xlat
out
mov
ljmp
fmulp
and
inc
jb
ret
lret
shl
xor
mov
stc
bound
sub
fld
ficoms
sti
cltd
add
dec
mov
fwait
cltd
dec
sarl
mov
jo
pop
daa
outsl
adcb
mov
adc
pop
jne
sub
or
inc
mov
push
fsts
push
pop
xor
push
xchg
push
and
orl
sar
fnsave
notl
sub
xlat
or
xor
lcall
push
mov
cs
sbb
fcmovnb
aam
dec
orb
pop
ss
adc
mov
dec
push
and
jmp
cmp
mov
outsb
cmpsl
cmp
cld
les
rcrb
xchg
push
pop
ljmp
fs
xor
into
push
adc
movsl
mov
int3
lcall
call
or
and
lock
les
in
imul
nop
add
test
fwait
mov
push
daa
xchg
call
test
in
xor
add
scas
loope
jbe
or
adc
lods
adcb
add
mov
cmp
xorb
or
aam
insb
js
or
mov
pusha
pop
pushf
out
fisubrs
inc
pop
cmp
sti
xorl
adcl
adc
push
adc
jmp
in
call
sub
cmp
adc
popf
not
jae
inc
jo
aad
push
push
cld
sub
pop
adc
jp
adc
sahf
into
sbb
xor
xor
notl
pop
mov
enter
or
cmpsb
push
push
in
mov
jo
cmp
jne
mov
sarb
std
out
imul
sub
push
fs
xchg
daa
in
ss
add
sub
lret
lock
jbe
movsl
aam
das
inc
push
sbb
xor
sbb
test
fcoms
jo
inc
mov
xchg
cmp
fdiv
fucomp
lret
mov
jle
insl
push
cmp
mov
mov
pop
sbb
adcl
mov
sub
sub
scas
jns
xchg
xchg
dec
sub
and
push
adc
iret
dec
jnp
es
pop
andb
jle
dec
mov
aam
ret
mov
or
aad
fiadds
stos
stc
lret
add
xor
aaa
mov
jle
pop
insl
sahf
mov
push
xor
or
push
mov
push
loop
test
mov
incb
outsl
add
dec
inc
pop
loopne
pop
test
ja
or
aad
sbb
shrb
pop
adc
mov
jecxz
arpl
scas
push
lds
xchg
rcrl
xchg
insb
sbb
in
nop
pop
sbb
insl
cs
insb
sbb
adc
or
shrl
adc
mov
idiv
shrb
sub
fs
jl
dec
mov
mov
push
sub
inc
cs
js
sub
inc
jmp
add
dec
lret
jns
xor
mov
mov
insb
adc
fnstcw
dec
xchg
jg
ret
adc
push
mov
out
insl
rep
xor
sbb
mov
or
testl
sbb
mov
jo
mov
shr
add
scas
out
cmp
adcb
mov
inc
in
jns
sub
push
mov
in
and
cmp
xchg
cld
es
lret
outsl
gs
cs
movsb
lock
jo
jmp
jne
stos
push
xchg
cmpb
dec
and
jns
dec
dec
add
mov
inc
mov
rorb
sub
ja
or
xchg
dec
aam
mov
cmp
inc
or
sub
insl
mov
addb
inc
mov
stos
aas
jecxz
or
fadd
jl
ja
jge
insb
xor
shrl
ds
cwtl
lds
pcmpeqb
jmp
and
sub
push
inc
sub
gs
sbb
inc
jge
dec
loope
mov
in
scas
jne
dec
aad
test
decb
bound
jno
repz
ss
arpl
add
and
or
movsl
cmp
ja
cmpsl
loopne
imul
cmpsl
pushf
cmp
push
js
rol
fwait
or
aad
and
dec
lock
inc
pop
jle
loope
repz
mov
sub
lret
sbb
xchg
jo
xorl
dec
cltd
inc
and
into
lret
sbb
aas
jb
inc
inc
jl
mov
sbb
xchg
cmp
mov
rcll
cmp
stos
or
hlt
ja
dec
xor
stc
mov
mov
mov
lret
xor
adc
sub
xorb
pop
push
and
outsl
decl
jp
cli
jno
dec
stc
lods
push
fldcw
mov
jns
pushf
sbb
ds
xchg
mov
scas
jbe
sbb
push
lea
mov
hlt
inc
cmp
sub
xchg
arpl
faddl
xchg
fimuls
mov
cmpsl
test
jg
aas
fwait
xor
cmpsl
int
sahf
in
testl
loopne
dec
fs
addb
lret
inc
jg
dec
push
int3
outsl
pop
shll
or
or
pop
enter
bound
arpl
mov
lahf
xor
add
xor
popf
inc
fbld
xchg
mov
sbb
mov
insl
mov
dec
call
mov
leave
jne
notb
xchg
jl
sub
jno
ffree
std
and
jle
mov
jb
js
testb
dec
pusha
out
cwtl
pop
adc
xchg
test
movsb
ficoml
int
sbb
iret
dec
push
inc
mov
cmpsl
insl
mov
adc
movsl
pop
call
rclb
xlat
and
ja
lret
mov
jnp
pop
sbb
jecxz
lahf
fndisi(8087
cmc
in
mov
mov
lea
add
mov
add
adc
sbb
push
add
rorb
mov
xor
and
inc
jnp
jmp
lret
mov
inc
add
cld
je
inc
movsl
call
aas
fcomps
mov
inc
inc
xor
cld
fildl
inc
push
sub
shl
adc
sbb
jp
sub
std
mov
push
int3
fsubrs
sub
call
pop
notb
inc
or
jp
cld
mov
add
stos
mov
mov
lret
lahf
mov
xchg
loopne
cmp
sub
mov
shll
inc
or
sbb
inc
ljmp
outsl
cmpsb
mov
adc
pop
mov
add
or
js
sub
and
sbb
xor
cmpsb
decl
aas
xchg
mov
push
out
in
inc
pop
dec
xor
pop
lods
fs
lahf
cmp
insl
mov
cmp
shrb
in
sbb
dec
ss
sarb
push
daa
mov
aad
xor
lock
and
xor
pop
or
mov
and
dec
cmp
jbe
mov
cmpl
frstor
sub
dec
sahf
into
std
pop
push
enter
cmp
ljmp
push
add
aaa
mov
cwtl
insl
push
enter
cmpsb
inc
pop
mull
lret
mov
lock
and
ret
lock
cmpb
jns
xchg
ljmp
sahf
inc
inc
mov
repz
jns
jnp
icebp
cltd
ret
jecxz
lds
ret
shlb
adc
xor
sub
mov
mov
inc
int3
fsubrl
loop
dec
jo
sub
cmp
mov
f2xm1
arpl
sbb
mov
hlt
add
push
in
std
les
mov
and
add
inc
mov
inc
or
jmp
add
cmp
dec
addr16
sub
mov
repnz
cmp
mov
jge,pn
and
rorl
out
mov
xchg
ficoms
inc
adc
fwait
mov
in
mov
xor
xor
aaa
mov
xchg
jle
mov
ja
shl
cmpsl
and
sarl
xor
inc
test
jecxz
xor
adc
pop
jle
xor
add
idivb
ret
inc
mov
adc
test
imul
jne
js
sarl
int
enter
xchg
inc
ss
mov
fmuls
jmp
outsl
into
call
lcall
mov
repnz
lods
ret
push
cmpsb
lret
push
in
aad
push
push
inc
sub
mov
ja
lret
mov
gs
loopne
mov
or
icebp
fists
sub
aas
lds
cmp
bound
mov
pop
loopne
push
or
adc
arpl
es
inc
cmp
enter
mov
sub
shl
fsubl
mov
mulb
negb
push
jmp
mov
inc
xlat
and
mov
push
aam
mov
pusha
push
loop
mov
loope
movsb
lods
cltd
aaa
xchg
idiv
cltd
add
pusha
lock
fdivrl
sub
cli
rorb
push
fwait
cwtl
mov
inc
add
cmp
cld
sub
xorb
jae
xchg
adc
bound
and
or
rorb
push
adc
mov
sub
aam
dec
test
jmp
inc
ss
dec
inc
js
xchg
mov
adc
jne
outsl
ljmp
aam
pop
add
cmp
hlt
cmpsl
cmpsb
inc
and
or
mov
lcall
loopne
jnp
dec
dec
movsl
lock
clc
cmp
sbb
aas
pop
enter
daa
xchg
outsl
pop
hlt
cmpsl
fs
push
mov
mov
jo
test
push
lahf
out
push
and
and
loope
ltr
je
int
sbbb
pop
mov
mov
repz
mov
cmp
mov
mov
dec
rclb
movsl
fsubr
lahf
jl
mov
xchg
pop
xor
pop
push
xlat
out
mov
movsl
and
repnz
cmp
push
jnp
imulb
push
mov
lretw
fsub
js
test
clc
cmp
imul
adc
rolb
int
xor
or
adc
arpl
push
push
mov
xor
adc
fimuls
cld
pop
pop
fs
out
push
sbb
lock
mov
iret
adc
cltd
rorl
ja
xchg
pusha
mov
inc
xlat
mov
cmp
pop
inc
rcl
enter
xor
shlb
outsb
decb
mov
test
jp
hlt
imul
dec
cltd
push
daa
mov
add
push
movsl
ficomps
sahf
inc
xor
gs
ret
jno
aad
xchg
movsb
insb
int
int
aaa
add
stos
sub
repz
repz
xor
push
aam
sbb
mov
cli
ljmp
pop
outsb
pop
mov
push
xchg
leave
pop
shl
movsl
lcall
nop
sbb
xor
xor
xor
jmp
mov
scas
cmp
push
mov
sub
push
rcrl
lock
add
add
add
jb
loop
dec
sbb
jae
push
mov
cmp
cmpsb
mov
push
add
mul
and
mov
mov
jne
push
or
or
mov
push
mov
mov
jbe
out
std
push
and
out
inc
mov
js
aam
mov
mov
btr
popf
inc
xorl
rorl
add
ret
imul
in
and
cmp
std
or
div
out
fimuls
rcrl
lret
mov
rcll
test
loopne
sahf
call
push
sbbl
in
inc
or
push
test
xchg
xchg
adc
mov
inc
sbb
in
jg
xor
int3
add
sbb
cwtl
add
cmpsb
jle
push
or
jo
leave
xchg
xchg
ljmp
dec
cmpsb
sub
sbb
push
mov
test
dec
mov
pushf
jno
cwtl
hlt
cmc
xchg
test
inc
mov
mov
popf
xor
cmp
and
adc
adc
hlt
insb
jb
mov
dec
sub
jmp
fistpll
js
or
inc
mov
shrb
push
sahf
sbb
push
outsl
nop
sub
xchg
or
push
push
sti
push
ret
pop
push
notl
aad
xchg
cltd
sbb
mov
jle
mov
sahf
xor
mov
sahf
jmp
out
aas
lods
push
enter
fwait
sub
popa
sti
xchg
adc
ficomps
sub
scas
leave
fmuls
mov
add
jae
inc
mov
mov
scas
loop
addl
pop
push
and
mov
dec
in
sub
adc
aaa
push
pushf
in
dec
test
ror
cmpb
iret
mov
aas
dec
dec
test
xor
pushl
adc
lea
and
addr16
pop
push
sbbl
and
fisttps
sbb
sbb
jle
stc
jle
and
push
imul
mov
cmp
jns
adcb
ficomps
lods
repz
lea
lds
push
daa
test
xchg
das
inc
enter
xchg
push
scas
mov
scas
rcrl
stos
dec
inc
lret
mov
push
dec
icebp
div
adc
sbb
jnp
mov
xchg
push
and
mov
mov
ffree
or
inc
sbbl
in
cltd
inc
negl
sbb
xor
mov
push
lock
gs
fs
popf
bound
xchg
testl
jmp
outsl
inc
jnp
cmc
inc
pop
outsb
test
mov
cmp
out
testb
lahf
push
out
nop
pop
add
stos
pop
icebp
insb
out
int3
mov
sub
add
mov
xor
push
and
nop
sahf
insl
inc
jg
lods
lret
cmp
aam
inc
ret
cmp
inc
pop
les
mov
es
aaa
and
sbb
mov
fs
mov
negl
xor
pushf
into
push
sbb
sub
das
pop
fdivrp
inc
add
scas
inc
sub
jbe
mov
les
dec
xor
test
addl
aam
fsts
sub
adc
cmpsb
lock
jbe
sbb
arpl
sti
cmp
jg
cwtl
dec
shll
dec
push
and
pop
movsl
addr16
mov
mov
scas
out
scas
inc
and
outsl
xchg
jo
stos
mov
mov
ja
int3
in
insl
test
xchg
adc
int
fmuls
nop
enter
lods
fisttpl
cmc
mov
mov
xchg
push
test
xor
shrl
xchg
mulb
or
adc
outsl
inc
test
imul
mov
mov
adc
cwtd
loope
in
fidivs
js
scas
aam
push
stc
mov
popf
mov
sahf
pop
dec
std
add
mov
jo
test
sbb
push
iret
mov
cs
test
jg
and
insl
imul
dec
dec
pop
bound
pop
or
mov
xor
mov
daa
hlt
movsb
stos
fldcw
je
out
mov
lcall
mov
imul
iret
cmp
test
leave
into
in
test
xor
out
insl
mov
fwait
jne
jp
jnp
or
mov
cmp
shlb
xchg
fdivs
and
jmp
xchg
or
inc
das
pop
dec
cmp
clc
inc
pop
push
cmc
dec
add
insb
xchg
arpl
xchg
add
xor
xchg
sub
xor
jo
xchg
cmp
outsb
mov
push
sti
sbb
pop
pop
or
cld
mov
cld
dec
add
or
aam
lea
jge
out
in
pop
stc
aas
incb
dec
mov
jg
push
sti
or
insl
jmp
adc
pop
xchg
or
and
dec
fcmovnbe
mov
jmp
ss
out
push
filds
daa
jle
sub
lret
inc
sbb
sub
dec
adc
mov
pop
les
and
nop
iret
xchg
ljmp
jg
cmpsl
mov
hlt
mov
in
out
stos
stos
fs
cmp
notl
push
pop
push
mov
or
cwtl
sub
fs
inc
cmp
or
arpl
mov
jne
icebp
mov
in
adc
dec
sbb
aas
inc
jle
js
xchg
test
mov
shll
adcl
mov
lret
push
in
xor
dec
xchg
mov
jnp
mov
dec
fcmove
cmp
pop
cs
jecxz
jne
sbb
int
adc
icebp
test
lret
sub
xchg
cmp
dec
add
xchg
dec
xor
addr16
jae
jae
add
rorl
xchg
jp
fistpll
pushf
jl
int3
and
and
js
cli
daa
push
cmp
in
loop
stc
fimuls
or
ret
xor
mov
aas
ljmp
lea
sub
popa
or
mov
fstpl
cld
or
inc
int
ss
push
lods
xchg
jge
aas
jecxz
cli
ja
mov
pop
adc
jp
dec
adc
sahf
cli
jne
or
jbe
int3
sub
std
pop
lods
pop
loope
dec
lcall
mov
sbb
adc
pop
adc
cmpsb
push
mov
shrb
and
arpl
in
jb
ret
gs
mov
popf
adc
lret
mov
mov
addr16
dec
fxch
sbb
imul
std
sbb
jo
stos
cmpsb
jg
cmp
push
les
sub
adc
rorb
jnp
cmp
sbb
rcr
out
fstpl
adc
mov
sbb
and
mov
add
loope
or
cmp
jne
pushf
aas
xor
movsb
xchg
imul
in
pop
push
cld
mov
sbb
fcmove
clc
lock
adc
sbb
fsubs
sbb
and
jnp
cmp
mov
test
imulb
jnp
cmp
test
push
sub
insl
sbb
mov
subb
jge
pusha
loope
sbb
push
mov
addl
or
lahf
and
in
adc
out
or
or
popf
notb
mov
cmp
push
mov
int3
adc
sbb
jl
mov
lods
mov
addr16
inc
add
mov
adc
xor
adc
pop
cs
mov
jge
mov
pop
pusha
sti
mov
je
and
push
out
cmp
pop
shrl
call
mov
mov
xlat
cmp
mov
push
adc
nop
in
das
stos
cmp
xlat
pop
out
xacquire
adc
cli
push
ja
lret
into
push
nop
enter
cs
sahf
jo
jmp
push
shll
sub
push
sbb
in
xchg
sahf
pop
ds
in
jle
cmp
ret
jbe
mov
mov
mov
fistl
cwtl
adc
fs
add
mov
xor
loope
sub
and
jne
daa
mov
mov
sub
leave
repz
push
sbb
roll
or
rcr
xchg
jp
xchg
jns
inc
mov
in
inc
sub
repz
inc
and
mov
icebp
imul
mov
movl
out
pop
rcrl
fldenv
mov
das
call
shrb
sub
test
or
sub
cmp
inc
dec
leave
jbe
je
clc
mov
adc
mov
imul
pop
es
and
je
inc
xlat
adc
out
mov
lock
lea
test
fcoml
cmpsl
or
mov
test
shrb
cmpsl
mov
add
dec
inc
clc
call
mov
mov
dec
bound
jl
push
xchg
and
add
and
loopne
adc
and
out
push
roll
mov
or
cmpsb
mov
lock
push
out
inc
mov
mov
dec
dec
push
mov
icebp
out
add
fmuls
mov
mov
arpl
xchg
inc
cwtl
and
rcl
sbb
les
mov
mov
push
or
lds
lret
dec
add
lods
push
and
jno
xchg
mov
sbb
stos
out
push
push
lcall
xchg
jl
fbld
sub
mov
pop
mov
xchg
push
mov
push
jne
adc
out
sub
push
mov
adc
mov
sbbb
ljmp
adc
cmp
push
mov
lea
sbb
cld
sub
jmp
and
mov
and
push
lock
sbb
mov
and
fmuls
pop
dec
cmp
fcmovb
arpl
in
inc
movsl
inc
aas
mov
pop
mov
ficoml
int3
jns
mov
adc
shl
in
add
test
xor
inc
lcall
jmp
push
pushf
andb
cmp
inc
adc
js
push
cltd
fnsave
xor
pop
push
xlat
into
inc
daa
mov
repnz
fsts
jmp
movsl
pop
aas
push
xchg
gs
mov
inc
sub
sub
movsb
and
das
cs
rcll
jbe
inc
cld
data16
sahf
xor
xor
popa
cli
pop
bound
ja
fsubrs
lods
aad
pop
fistpl
ja
push
xor
pop
fs
cmp
iret
in
das
or
mov
push
jge
mov
xchg
aas
and
or
fwait
lods
shl
leave
mov
cmp
xchg
rclb
pop
lds
jle
pop
add
mov
shll
sub
aad
inc
lea
setb
jge
push
mov
ret
shl
or
or
push
xlat
lea
inc
mov
into
outsb
mov
aaa
scas
stos
fs
add
cmc
jmp
sarl
js
roll
mov
mov
xchg
mov
test
out
sub
push
dec
and
add
mov
cmpsl
mov
addb
dec
inc
pushf
xor
mov
sub
pusha
xchg
lea
scas
and
icebp
jns
gs
mov
int3
pop
xchg
jo
pop
jmp
out
pop
lret
and
push
mov
inc
hlt
out
push
push
add
and
mov
orb
loop
push
sbb
and
fstpt
bound
cmpsb
ret
pop
stos
imul
adc
and
sarb
xchg
xchg
push
xor
stc
sbb
shlb
jne
and
jo
repz
repz
fcompl
add
jp
lcall
std
aad
lea
mov
and
lcall
int
fnstcw
gs
add
xchg
subb
movsl
in
test
pop
dec
and
dec
pop
sub
ss
mov
popf
cmp
sbb
jne
cs
or
insb
shll
dec
sbb
adc
push
lods
arpl
pop
mov
movsb
xchg
adc
sbb
mov
inc
sti
dec
rcrl
je
mov
ds
mov
push
sub
lods
and
imul
ror
dec
pop
popf
adc
mov
scas
jle
fistpl
test
stos
cltd
jnp
ds
sub
push
jns
xchg
jo
ret
mov
neg
sbb
outsl
loop
mov
clc
repz
or
push
aad
cmpsl
inc
cmpsb
adc
dec
sub
dec
insl
test
push
mov
mov
mov
repnz
mov
incb
sbb
lea
push
arpl
jmp
cwtd
xlat
mov
filds
and
int
push
iret
cld
cmp
js
sub
cmpsl
rclb
inc
xchg
and
mov
push
outsl
mov
dec
xchg
repz
imul
jl
outsl
icebp
push
or
inc
iret
out
les
ds
xchg
mov
push
push
sub
mov
outsl
jns
push
jmp
insl
or
xor
push
insb
cld
push
and
out
das
cmp
or
inc
jle
mov
dec
lret
or
cli
xchg
xchg
int
pop
outsb
inc
outsb
testl
ret
mov
cmpsb
push
jbe
iret
fcmovnbe
pop
into
icebp
popf
mov
les
ja
clc
push
sahf
xor
sub
xor
rolb
stc
cmp
adc
icebp
mov
jmp
cwtl
mov
jns
fs
and
mov
leave
xchg
adc
cmpsb
popf
popl
mov
imul
dec
and
pushf
mov
inc
jnp
pop
or
mov
je
push
inc
push
loope
rsm
push
test
jno
cmpsl
dec
sub
mov
mov
int3
add
jbe
pop
pusha
dec
je
and
push
out
fiadds
in
pop
xchg
int3
push
xor
xor
sbb
iret
mov
pusha
jo
and
stc
xchg
pop
inc
jge
jb
imul
test
sbb
jo
enter
sbb
push
and
push
xchg
xor
push
int
add
add
in
pop
stos
pop
push
jb
push
out
or
jmp
lea
lock
push
mov
sub
ret
subb
nop
loopne
adc
fdivrs
jecxz
daa
push
mov
or
cs
cmp
adc
call
xorl
and
lods
add
xchg
inc
sub
sbb
pop
arpl
pusha
stos
fisubl
fbld
cmp
and
sub
inc
inc
leave
mov
pusha
xchg
leave
and
jb
push
test
jno
enter
pushf
sarb
add
sbb
rep
insb
sbb
enter
lods
xor
out
inc
mov
sahf
and
adc
cmp
mov
mov
cmp
ljmp
xorb
jmp
sub
xor
push
test
jle
inc
out
push
xchg
repz
xchg
xor
add
fsubl
xor
std
or
clc
cmp
jle
mov
dec
cs
cmp
lods
adc
and
pusha
pop
or
cmp
push
cmp
js
push
aam
cmpsl
jmp
aam
add
inc
fsubs
int3
call
jl
bswap
hlt
sub
ret
shlb
call
je
push
ret
stc
jbe
das
aas
test
jno
lock
popa
into
lret
test
and
test
cmp
mov
les
sbb
fisubrs
jnp
jp
jmp
out
push
mov
mov
in
popa
mov
inc
sbb
dec
add
ja
pop
xchg
mov
scas
push
sbb
je
cmp
xor
adc
xchg
pop
cs
pop
fiadds
scas
jns
jno
inc
roll
inc
jae
jbe
xchg
fists
ds
lods
addr16
pop
pop
dec
mov
ja
jnp
mov
aad
xchg
mov
mov
dec
cmc
mov
adc
mov
ficoml
jb
jmp
ljmp
cltd
rorb
inc
push
outsb
daa
pop
pop
sbb
xchg
add
mov
std
dec
addr16
pushf
sub
shl
sbb
scas
push
mov
cmp
add
dec
imul
mov
das
fucomi
dec
testl
imull
ja
and
popf
push
cmp
sbb
mov
sahf
mov
sbb
ja
mov
jle
rorl
ret
pop
sbb
xchg
je
cmp
iret
sbb
imul
scas
negl
xlat
cmp
mov
sbb
mov
dec
cld
sub
inc
xchg
mov
inc
and
inc
cmp
xorb
repnz
cld
aam
xchg
sub
or
lahf
or
out
push
fildl
enter
mov
subl
subb
cmc
cli
mov
cli
les
mov
test
mov
clc
inc
stos
jg
hlt
xchg
cmp
pop
mull
lea
dec
jb
lahf
jl
pushf
insb
fnstcw
cld
or
mov
jo
inc
mov
pop
in
sarb
or
lea
fnstsw
pop
es
cmpsb
inc
aas
imul
jns
and
mov
out
sub
hlt
clc
dec
sbb
or
xchg
in
push
jle
outsl
mov
mov
xchg
mov
push
fadds
pop
icebp
jo
lret
xchg
ret
jb
and
clc
sbb
mov
xor
fidivl
int3
pop
mov
xchg
cmp
insl
ljmp
fisttps
mov
movsl
add
cmpb
or
adc
inc
sbb
sahf
mov
push
movsb
fimuls
push
push
push
out
push
lock
insb
cs
inc
pop
cmp
inc
pop
mov
aaa
iret
and
push
or
test
lds
repz
and
push
push
pusha
mov
lock
rcl
jle
push
lea
xor
and
clc
pushf
fcomi
cmc
pop
pop
sbb
loop
pop
mov
jb
add
add
insb
insl
push
jno
dec
push
decb
call
pop
cltd
int3
loop
cmp
cmc
fstpt
cmp
dec
lock
pop
repz
stc
pop
sbb
fimull
xchg
cltd
fs
add
scas
fldl
xchg
inc
cmp
jae
dec
cmp
lret
repnz
negl
xor
cmp
movsb
pop
jl
jns
adc
xchg
out
dec
loope
insb
sahf
shlb
std
adc
inc
and
adc
pop
es
loope
adc
insl
repnz
sub
push
es
jge
gs
sbb
pop
js
out
and
mov
inc
cmpsb
cs
jne
test
popa
fisttpll
imul
lret
xchg
or
test
push
or
cmp
in
sbb
add
cmp
add
loopne
add
mov
push
inc
scas
jle
pop
cld
sbb
es
dec
and
pop
jno
aam
popa
push
mov
mov
jnp
add
es
push
pop
in
addl
sti
data16
jge
or
cmp
push
pop
push
fnstenv
jbe
jb
outsb
push
mov
jl
sti
ja
repz
sub
push
insl
dec
std
out
scas
and
sub
xchg
and
mov
xchg
sbb
fldt
sbb
add
movsl
int3
imul
pop
andb
inc
roll
lock
icebp
sahf
and
sbb
shrl
xorb
daa
sbb
out
aaa
push
mov
fcomps
inc
dec
imul
push
xor
dec
xchg
ss
out
xor
lahf
xchg
add
mov
addr16
sbb
adc
mov
xor
push
pop
mov
es
rsm
iret
jnp
adcb
jnp
lods
add
push
mov
xchg
and
xor
addl
adc
and
lret
adc
sbb
fmulp
push
jl
out
jle
push
jecxz
cmp
mov
pop
sbbb
push
lcall
and
mov
rcrb
in
pop
xor
cmp
sbb
cs
dec
cs
cs
test
data16
imul
jge
push
pop
movsl
xor
cwtl
int3
les
mov
clc
xor
outsl
mov
aam
sub
pop
cmp
loop
nop
rcrb
test
movsl
dec
mov
and
push
adc
popa
adc
sbb
pop
insl
fldcw
lods
call
scas
lods
fisttps
out
cltd
rorb
push
xor
cmpsb
stos
into
push
movsl
push
mov
mov
and
sbb
mov
repnz
pop
movsl
clc
cmc
add
push
enter
add
inc
sbb
jbe
les
mov
jmp
mov
dec
mov
ficomps
push
push
in
xchg
pop
aas
imul
divb
jecxz
cmp
shll
in
dec
arpl
flds
xchg
popa
fs
cmp
stos
es
mov
fildl
in
in
jge
sbb
dec
dec
pop
fwait
xchg
or
sbb
push
clc
add
mov
rclb
mov
pop
pop
adc
stos
sahf
das
mov
inc
xchg
jns
inc
in
lds
jge
das
xor
inc
cli
xchg
xchg
mov
fdiv
jno
xor
into
xchg
cmp
sti
mov
mov
and
lahf
sbb
and
lcall
adc
xchg
mov
popa
lahf
insl
sub
jg
stos
cld
lret
ljmp
inc
push
mov
sub
mov
inc
out
int
loop
jecxz
cmc
popa
pop
shrl
cmp
dec
push
lret
fbld
xchg
cmp
xor
jg
lret
data16
testl
sarb
daa
inc
pop
fwait
push
mov
outsb
in
cmp
cmp
inc
enter
mov
jo
inc
inc
or
daa
cld
xorl
stc
jle
mov
sub
mov
jg
roll
jo
data16
sbb
bound
sbb
add
or
scas
and
jl
xchg
and
and
add
or
mov
cmpsl
sbb
inc
imul
aam
push
ficomps
fistpll
or
dec
lds
testl
mov
rclb
test
setne
push
mov
dec
mov
mov
push
push
pop
scas
push
push
lock
xor
rolb
push
insl
push
shlb
loope
cs
test
sub
imul
push
mov
leave
das
jg
in
mov
lods
int
push
iret
popa
dec
sub
add
test
mov
pusha
test
xchg
add
popa
ret
mov
ret
sbb
sub
xchg
nop
jae
mov
nop
sbb
pop
stos
jle
dec
sarl
sbb
ds
ss
sub
in
popf
lret
mov
test
scas
sbb
xlat
ds
pop
cmp
test
adc
inc
out
pop
ja
push
mov
stos
rcll
inc
es
enter
mov
sbb
and
clc
push
insb
ret
inc
jne
leave
mov
js
push
popf
xchg
push
js
jle
loop
test
mov
mov
add
fistps
mov
int3
cmpsb
or
adc
xor
add
stc
push
sub
sbb
jno
xchg
ss
out
mov
mov
popa
shlb
push
inc
test
sub
dec
jecxz
dec
or
iret
add
and
sub
lods
cli
dec
xchg
inc
es
xor
jbe
add
push
adc
mov
xor
sbb
aam
add
push
sub
sbb
push
mov
mov
mov
sbb
movsl
fisttps
or
flds
test
and
pop
dec
into
test
sbb
aad
mov
pop
mov
mov
lock
aam
cmpb
sarl
jle
pushf
mov
andl
loopne
or
sbb
data16
push
mov
insb
jns
add
xchg
mov
adc
das
aaa
out
test
lds
pop
pop
fnsave
insb
cmc
xchg
fisttpll
nopl
xchg
dec
idivl
cmp
sub
cmpsb
inc
lods
lcall
cld
mov
push
push
jge
push
lods
test
cmp
repnz
fsts
fwait
mov
jle
loope
inc
sub
mov
and
mov
mov
mov
aam
mov
mov
stc
imul
pop
cmp
push
sub
or
hlt
and
push
shlb
pop
mov
sbbb
dec
mov
sbb
or
pop
out
push
sti
mov
xlat
push
sbbl
icebp
pusha
out
rorl
push
scas
jmp
jns
sbb
lods
cmp
mov
inc
or
test
fisttpll
outsl
cltd
push
push
push
dec
xchg
cmp
cli
incl
movsb
mov
icebp
cli
test
loop
dec
mov
jge
mov
cmp
push
insl
push
dec
push
arpl
dec
arpl
fs
sarl
daa
les
std
mov
sub
push
stc
aam
imul
push
mov
jo
leave
out
pop
sbb
dec
stc
adc
dec
sub
xor
mov
inc
jo
in
lcall
fmull
inc
cmp
movsb
in
cmpsl
jae
and
dec
mov
lahf
stos
aam
pushf
call
divl
loope
and
xor
lret
in
imul
xor
and
add
push
hlt
pop
mov
lret
lock
sub
xorl
add
pop
lea
sbb
and
adc
jns
aad
inc
cmc
jp
lods
push
jbe
xor
clc
cmc
leave
insl
xchg
andl
test
xchg
sarb
lret
and
mov
mov
sub
xchg
idiv
fdivrs
sbb
push
imul
movsl
push
int
idiv
cmp
add
dec
mov
arpl
nop
add
xor
jb
mov
cmp
rorb
or
adc
nop
fwait
push
ljmp
xchg
pop
aas
jmp
pop
push
sub
pop
xlat
jns
adc
dec
cli
pushf
sub
pop
lahf
out
pusha
out
inc
jno
push
scas
fists
iret
stos
or
in
outsl
pop
sub
push
pop
cmpsl
popf
sbb
pop
mov
mov
and
xchg
xchg
inc
mov
mov
stc
pop
loopne
cmp
inc
mov
nop
jns
rcll
push
or
xor
movsl
setnp
xor
leave
aaa
vpmacsdql
sarl
xchg
push
xchg
lahf
xchg
call
sbbb
aam
adc
sub
cltd
test
pushf
and
xchg
add
jl
pop
iret
xor
cmp
gs
in
xchg
cmp
inc
inc
xor
test
push
stos
push
iret
mov
mov
mov
xor
sahf
jl
xchg
inc
mov
lds
xchg
lods
rclb
mov
cmp
arpl
lahf
sbb
mov
jecxz
cmp
aad
jne
jns
loop
ret
addb
out
gs
nop
xchg
dec
fists
and
push
lret
or
xlat
hlt
dec
test
stc
rolb
push
fwait
lret
pop
jl
lahf
jo
scas
aam
xchg
gs
mov
push
jg
push
dec
jl
xchg
ljmp
cs
icebp
loop
push
std
xchg
xchg
out
arpl
mov
jmp
pop
inc
pop
std
outsb
xchg
add
faddl
int3
out
adc
dec
lods
test
mov
mov
in
and
ljmp
xor
arpl
or
pop
xchg
mov
inc
out
subb
hlt
scas
push
add
add
sub
or
lcall
pop
rorb
addb
lock
jbe
jne
not
jecxz
cmp
sub
add
fmuls
cmp
pushf
and
fwait
in
mov
sbb
push
mov
xlat
icebp
mov
cmc
negl
fdivrl
into
pushf
lock
xor
mov
add
xchg
xchg
imul
je
fisttpll
clc
test
lods
push
adc
adc
push
jbe
xchg
out
pop
cs
imul
push
in
cli
addr16
cld
aas
mov
mov
xlat
test
inc
mov
adc
ss
ss
adc
repz
adc
jbe
mov
push
cwtl
rcl
or
pop
popa
outsl
jl
xlat
add
nop
stc
hlt
xchg
and
gs
loop
ss
fbld
jnp
push
xchg
inc
aaa
dec
pop
and
add
xchg
data16
fldcw
std
xor
push
mov
iret
fs
xor
dec
jb
mov
mov
out
lods
test
jae
fsubrs
ret
inc
clc
pop
lret
mov
push
mov
dec
rcll
jae
das
shrb
test
jo
rorb
loope
mov
push
pop
push
dec
mov
or
jp
fmull
pop
jb
cmp
mov
jnp
sbb
gs
fwait
ds
test
sbb
fidivrs
jbe
shrb
je
mov
jns
xor
dec
xchg
mov
jno
mov
rcr
pop
jge
pop
ret
jae
cs
pushf
mov
aas
popl
iret
pop
add
cmpsl
mov
in
lret
dec
add
mov
lret
xlat
sub
aad
jecxz
adc
or
es
das
and
and
pushf
jae
into
or
mov
lea
or
shr
cmc
add
in
jl
dec
mov
add
sub
pop
hlt
or
cmpb
enter
je
iret
pop
adc
pop
shlb
loope
pop
or
and
inc
mov
cmc
lds
push
fdivr
sti
aad
lods
push
pop
or
icebp
mov
insl
enter
scas
shrb
add
fstps
fndisi(8087
ss
or
test
push
jmp
ljmp
test
icebp
out
lret
add
or
jp
and
fstl
jbe
mov
ficomps
mov
cld
mov
jne
pop
stc
mov
icebp
outsl
sbb
pop
or
pop
dec
inc
ds
xor
push
in
js
push
xchg
add
dec
aad
and
or
sub
adc
orl
sbb
jmp
adc
dec
mov
push
ret
dec
popf
dec
cmp
push
jge
sub
sbbw
adc
popa
push
loope
pop
ror
aaa
roll
jl
pop
sub
dec
add
std
dec
sti
mov
cli
or
lahf
push
xchg
xchg
jecxz
aas
push
inc
in
cld
mov
mov
jno
jbe
sub
xchg
insl
xchg
test
pop
ljmp
cmp
dec
popa
mov
mov
jns
dec
xchg
jg
push
rcl
sub
lret
mov
lcall
mov
sub
test
mov
in
add
hlt
mov
mov
push
push
xchg
sub
icebp
cld
ljmp
pop
sbbl
mov
fprem1
mov
add
jle
ret
shlb
rorl
in
lahf
sbb
push
adc
scas
and
mov
pop
flds
mov
sbb
xchg
jge
stos
fwait
out
cmpsl
negb
mov
and
scas
mov
cmp
ds
or
dec
insl
inc
mov
mov
lea
and
push
add
pop
mov
and
mov
lahf
and
das
push
stc
adcl
out
inc
clc
mov
lgs
mov
pop
xchg
jb
loopne
movsl
mov
sbb
lahf
int
sub
cmc
lret
mov
test
rorl
push
sbb
sub
sub
pop
jbe
sbb
sub
sub
mov
mov
mov
ret
mov
or
mov
movsb
xor
rcrb
out
and
xor
cmp
sarl
mov
lret
jle
jns
xchg
adc
jne
mov
mov
ror
dec
inc
fwait
mov
mov
arpl
in
cmpsb
dec
popf
and
mov
xchg
std
mov
sbb
xor
jb
rorb
push
adc
cli
dec
das
sub
mov
adc
jecxz
lahf
jl
mov
adc
xor
pusha
dec
adc
add
mov
pop
idivb
xor
cli
mov
sbb
xor
and
addr16
jg
pushf
fsts
or
in
inc
sbb
push
addr16
dec
stc
add
pop
mov
pop
mov
iret
adc
pop
out
shll
into
pop
test
fidivl
mov
push
cld
mov
dec
jge
mov
test
mov
adc
mov
subb
roll
and
and
leave
loope
xor
cltd
pushf
add
cwtl
dec
fimuls
hlt
lock
mov
inc
adc
mov
push
ljmp
xchg
jns
or
push
mov
jle
mov
popf
or
push
jecxz
push
mov
jae
mov
xchg
sub
xchg
adc
pusha
stc
dec
movsl
and
imul
xor
jnp
cmp
lret
dec
stos
cmp
mov
sub
cmc
gs
push
xchg
lock
pop
and
push
or
icebp
das
xchg
mov
and
xor
out
pop
dec
mov
gs
pop
xchg
sar
call
push
add
mov
jg
in
shll
jne
mov
or
je
sub
rcr
sti
cmp
push
ficomps
mov
cli
adc
mov
sti
jp
popf
scas
inc
bound
add
ret
jne
fisttpl
mov
inc
aaa
dec
out
dec
jmp
cmp
mov
popf
or
push
xor
or
mov
pop
sub
mov
iret
leave
test
negl
arpl
sub
lock
dec
aam
xor
or
jne
lods
cmp
in
sub
loop
mov
addr16
cmpl
cmp
lods
ficoml
pop
fiaddl
dec
adc
cmp
ret
ret
rcrb
push
fcmovu
xor
ret
pop
push
mov
push
aaa
insl
insl
and
xchg
cld
daa
sub
or
xchg
and
ret
mov
push
aam
inc
push
in
pop
subl
or
mov
dec
sar
adc
ljmp
add
incb
jne
jae
jp
fisttpl
push
push
mov
insl
test
test
lret
dec
sub
cwtl
cwtl
inc
addl
into
loope
nop
call
je
clc
call
pop
lea
jl
mov
lret
and
mov
sbbl
repz
pop
inc
ja
lods
iret
dec
mov
or
stos
pop
rclb
and
rolb
pop
adcb
xchg
jnp
aad
and
sti
rcrl
enter
jo
orl
daa
jmp
fmul
jle
add
rcr
mov
xor
iret
jo
mov
or
jbe
and
sub
sbbl
push
add
stos
sub
jecxz
mov
dec
fcomps
jae
push
and
gs
push
mov
adc
xchg
xchg
scas
mov
and
imul
adc
xchg
imul
shlb
cmpsb
adc
adc
mov
add
mov
push
dec
daa
sbb
loope
dec
cli
jle
les
fistl
adc
adc
cmp
dec
pop
outsl
mov
mov
int
add
cmp
daa
dec
out
pop
add
mov
jo
orb
cmp
mov
mov
lods
lret
fcoml
push
arpl
inc
adc
push
stc
pop
dec
test
mov
or
repnz
push
sti
jbe
dec
mov
ljmp
sub
mov
add
sbb
jge
sub
dec
fwait
loop
in
ficoml
mov
aas
lcall
in
sub
push
fcmovne
mov
mov
aad
inc
add
xchg
scas
repz
fidivl
imul
or
call
push
pushf
bnd
outsb
lods
dec
push
sbb
sbb
adc
mov
and
xor
jg
inc
push
add
lret
aas
xor
sbb
loop
dec
and
jb
icebp
int3
pop
push
jl
cmp
out
dec
sbb
xchg
iret
mov
inc
mov
in
sbb
add
stos
push
and
sub
gs
push
fchs
jae
ljmp
dec
aad
jmp
dec
pushf
add
and
dec
dec
fbstp
rolb
repz
sbb
fdivl
enter
fnstcw
negb
xlat
fdivrl
inc
rcrb
cmp
pop
fnstenv
lea
push
jp
mov
cli
std
push
mov
movsb
xchg
push
push
stc
lret
dec
inc
jg
cmp
pop
stos
mov
mov
pop
push
int
jl
xor
xorl
cwtl
xchg
test
fsubrs
xor
push
jle
jecxz
into
fstps
lret
cmp
sahf
pop
inc
call
loop
push
push
cmp
movl
mov
fmull
rorb
mov
inc
rcl
nop
dec
int3
push
fs
popf
out
add
sub
mov
out
jmp
mov
in
sub
xchg
hlt
mov
cld
or
xor
push
adc
test
cmp
lds
fdivl
pop
cmp
cmp
inc
mov
cmp
xor
push
push
clc
push
ljmp
push
data16
inc
out
add
lret
arpl
hlt
nop
or
adc
jg
movsb
or
int3
int3
scas
es
adc
cmpsl
orb
stos
or
add
shlb
addl
orl
popf
out
add
add
ds
mov
test
test
cmpsl
jno
xchg
repnz
push
into
ljmp
pop
cmp
pop
xorl
and
xchg
mov
es
add
cwtl
pop
js
or
dec
inc
push
xchg
cmp
dec
add
outsl
icebp
pop
decb
sub
test
cmpsb
shll
stos
or
dec
sbb
sti
adc
push
data16
in
push
pop
mov
movzwl
test
jg
lea
roll
fdivp
sub
pop
mul
sub
rclb
mov
lods
xor
lcall
lods
adc
pop
popa
add
arpl
dec
sub
int
lds
inc
xchg
inc
loope
mov
int3
int
mov
aam
pushf
clc
and
int3
movsl
insl
jecxz
in
gs
pop
fidivrs
or
dec
iret
fidivrs
cmc
cmpsb
push
or
pop
ret
xchg
mov
inc
sub
cmp
jbe
xor
nop
movsl
inc
loope
fs
push
pop
lret
jg
dec
xor
mov
fwait
pop
xor
stos
mov
addr16
out
lret
imul
mov
mov
je
cmpl
or
adc
mov
jg
add
lods
std
pop
in
jmp
ret
imul
and
mov
shll
inc
rcrl
ficompl
pop
cmp
adc
rcrb
js
repz
push
jg
mov
sub
jmp
and
gs
in
cmp
dec
jp
lret
js
in
stos
xlat
popa
mov
andb
mov
add
sbb
std
push
gs
data16
inc
popf
push
dec
push
out
shll
adc
ljmp
insl
repz
lock
scas
test
int3
mov
push
jp
sahf
cmpl
add
sbb
mov
sub
mov
scas
and
in
pop
test
mov
push
pop
pop
outsl
outsb
fnstenv
sbb
adc
and
fcomps
dec
sahf
jnp
out
adc
ljmp
sti
cli
sbb
xor
pop
xchg
dec
call
std
fmul
aam
push
fists
and
fisttps
push
leave
popa
cmp
and
fmull
inc
add
mov
mov
aad
insl
push
aas
iret
jbe
add
adc
cmc
repnz
and
xchg
aaa
mov
test
lcall
roll
dec
mov
popf
jle
cmp
mov
outsb
out
loopne
loopne,pt
mov
jbe
and
movsl
mov
xchg
lret
jno
test
and
lods
jnp
inc
mov
sbb
aad
lock
cld
stos
cmp
icebp
insl
rcrl
ljmp
mov
movsb
add
mov
call
das
push
jl
push
push
mov
push
or
shll
cmp
fwait
xor
jmp
in
add
ds
ret
mov
outsl
jne
mov
cmp
jecxz
popf
or
icebp
sbb
popl
inc
sti
jl
inc
push
cmpsb
mov
dec
lods
sub
outsb
movhps
pop
lods
xchg
xchg
aaa
mov
int3
fsubs
mov
sarb
stos
out
cmpsb
push
ss
mov
xor
adcl
adc
into
subb
mov
daa
mov
dec
cli
xor
inc
jle
mov
pop
aaa
xchg
sbb
push
and
rolb
data16
mov
ret
out
outsb
pusha
xor
jns
sub
sub
lock
fdivs
push
aaa
sbb
sub
mov
into
mov
pop
hlt
loope
xor
inc
dec
mov
dec
cmc
pop
inc
pushf
ds
xchg
test
jle
aad
mov
popa
pinsrw
loop
and
push
cmp
push
xor
aas
adc
jno
push
lahf
jnp
insl
cltd
sahf
std
leave
aam
or
fstpl
add
mov
test
dec
push
lods
mov
or
loop
loopne
arpl
mov
push
idivb
pop
jecxz
movsl
jbe
and
test
adc
rcrb
sbb
pop
scas
mov
leave
sbb
cli
arpl
jno
dec
push
out
mov
push
pop
mov
inc
push
stos
popf
cmc
dec
dec
cmp
mov
jo
lds
sahf
mov
jl
inc
insb
pop
cmp
pop
imul
cmc
pop
lds
in
ror
mov
daa
out
sbb
pop
pop
pushf
popf
pop
push
jmp
cmpsl
inc
push
jne
xchg
pop
jo
arpl
or
pushf
or
test
sti
inc
lret
pop
lea
mov
xor
dec
or
xchg
cli
jge
ret
mov
and
xorb
and
or
xchg
sub
xor
mov
pop
mov
mov
and
or
push
enter
lahf
repz
mov
iret
inc
dec
icebp
in
popf
push
xchg
mov
fnsave
sbb
push
push
bound
insl
pop
mov
out
add
pop
sub
sub
pusha
jns
cltd
cmp
out
dec
imul
xchg
jmp
ret
xchg
jb
mov
mov
lret
jae
repz
fmuls
stos
push
mov
push
xchg
dec
aas
or
fildl
sub
jle
jmp
push
push
movsl
dec
mov
dec
push
xor
xlat
cmc
cmp
adc
fs
pop
mov
fcmovu
fcmovnb
call
ficoms
je
ds
add
rcll
fiadds
mov
or
and
pop
mov
mov
jns
inc
fstpl
rcrb
push
add
mov
or
mov
inc
stos
add
ret
out
rcrl
fstl
mov
mov
movsl
int
mov
popa
mov
mov
movsb
jae
dec
push
enter
jmp
push
and
je
int
fwait
sub
ljmp
stos
adc
jns
mov
or
xchg
mov
or
cmp
xlat
adc
dec
rcrl
aad
bound
cmpsl
and
incl
je
or
lahf
lods
mov
mov
cmc
out
adc
lods
adc
dec
mov
in
sarl
popf
mov
notl
dec
test
mov
dec
or
xor
and
in
dec
push
aaa
xchg
dec
stos
mov
loope
loop
xor
sbb
push
lods
xlat
jge
scas
lods
cmpb
movsl
inc
push
aas
add
fs
cmp
cmp
cld
lods
lods
sub
inc
mov
xchg
jge
mov
inc
dec
call
jbe
loop
icebp
xor
mov
ds
sub
jge
lods
aad
xchg
cmc
pop
xchg
mov
hlt
jmp
enter
mov
ficoml
stc
pop
mov
aaa
or
int
sarl
cs
icebp
adcl
add
insb
shrl
or
cmp
add
fildl
mov
push
xchg
mov
andb
clc
jae
movsl
arpl
mov
test
xlat
xchg
cmp
fadds
div
in
add
movsb
pop
mov
ljmp
adc
fnstsw
pusha
aad
in
or
jle
jle
sbb
out
xchg
ret
mov
dec
jae
add
xor
lock
cmp
mov
cmp
mov
cmpsb
mov
adc
jle
shll
fstl
sub
cmpb
inc
sahf
dec
pusha
add
mov
lret
lock
inc
mov
mov
mov
movsb
mov
cmc
jne
fwait
stos
fcom
xor
test
call
nop
jo
cmp
or
pop
inc
sbb
mov
inc
sbb
mov
int
sbb
repz
test
dec
lret
sub
mov
xchg
imul
ss
js
aam
pop
push
add
jns
jge
into
filds
mov
or
add
pop
pop
outsl
mov
xchg
push
shlb
mov
stos
mov
test
sub
cmp
test
aaa
cmp
loope
or
in
xchg
and
or
pop
xor
cmpsb
sub
lret
xor
popf
cwtl
lods
ja
or
jo
cmc
test
idivl
rcr
rcl
jl
in
out
lds
insl
xor
push
pop
imul
lock
mov
mov
lret
mov
scas
push
fldcw
inc
dec
addl
dec
pop
fs
and
addr16
iret
dec
xchg
pop
mov
jmp
or
or
mov
pop
mov
xor
xchg
ljmp
dec
outsl
sub
negb
loope
pop
mov
lock
int
pop
out
imul
sarb
dec
lods
pop
lock
add
ret
dec
jb
xor
mov
std
cmp
inc
and
imull
cmp
lret
nop
sub
mov
call
xchg
pop
imul
push
out
pop
xorl
add
inc
in
mov
add
in
js
movsl
xchg
sbb
or
sbb
pop
sbb
mulb
push
loope
mov
movsb
jl
stos
mov
jmp
mov
pop
pop
fcoms
sar
sbb
mov
rorl
pushf
pop
aas
add
cld
sahf
or
fsts
scas
fidivrl
xchg
aad
ret
dec
inc
std
dec
xor
mov
jo
add
call
xor
inc
sarl
and
fwait
aad
mov
sub
mov
sar
jle
std
mov
sbb
call
push
mov
negl
mov
into
data16
adc
inc
mov
push
hlt
icebp
sbb
enter
jbe
dec
adc
jmp
stc
and
vmread
repz
push
dec
add
push
inc
mov
daa
into
cmp
arpl
dec
mov
xchg
push
fidivs
ljmp
and
loope
repnz
pop
in
or
sub
cmpsl
inc
ja
rcll
shll
dec
sub
push
rcrl
jp
mov
sbb
into
jae
stos
mov
add
das
testb
jbe
es
lods
fcmovne
outsb
rcrl
and
or
mov
int3
int3
mov
data16
sarb
andl
inc
fisttpll
enter
cmpsl
pop
xor
or
std
mov
xchg
xor
ljmp
xchg
shlb
xchg
out
ret
xchg
loope
into
pop
pop
in
jno
dec
pop
pop
mov
pop
repnz
jbe
insl
inc
icebp
inc
pop
and
xor
imul
aaa
hlt
flds
stc
adc
and
adc
jge
sti
mov
push
fstp
jo
cmpsl
sbb
jp
cmp
aam
loope
mov
addl
xor
nop
outsb
std
push
mov
das
mov
dec
or
dec
sbb
xor
inc
arpl
outsb
call
dec
push
ljmp
ret
shrl
ds
rcr
sub
xlat
out
cmp
adc
loop
xchg
addb
fwait
inc
add
sub
out
iret
ds
mov
fdivs
jle
add
xlat
sub
mov
shll
lds
xlat
xor
cmp
push
jl
jg
mov
iret
pop
dec
pushf
inc
or
push
sub
mov
iret
and
or
fidivl
xchg
sbb
sub
push
pop
jae
cmp
sub
push
inc
jmp
cmp
dec
loope
ljmp
cmp
mov
adc
mov
add
xchg
jb
jmp
mov
scas
sbb
dec
in
es
popf
int
rcr
in
jbe
cmc
sbb
and
inc
and
lret
shrl
dec
push
adc
mov
xor
mov
jl
xor
pop
ret
push
es
int
jo
out
mov
and
ret
mul
mov
push
cmpb
adc
nop
pop
jmp
lock
mov
cmpsl
in
scas
sbb
jo
add
pop
test
cmp
pop
mov
vmovups
inc
or
inc
mov
lods
lods
jns
leave
out
inc
test
std
sbb
rorl
adc
mov
and
jle
mov
jno
out
push
dec
dec
and
in
xchg
or
push
fists
jb
scas
sub
into
push
cmp
sbb
mov
scas
jge
push
adc
int3
dec
fidivl
lcall
imul
lods
inc
adc
lock
in
arpl
stos
arpl
inc
dec
mov
bound
mov
hlt
rcl
push
xchg
jl
jecxz
sbb
push
push
mov
lea
mov
rcl
inc
cmc
iret
mov
fists
fs
out
out
mov
mov
pusha
push
pop
dec
pop
mov
cld
test
or
in
xorb
enter
push
jne
outsl
frstor
inc
insb
stos
ljmp
lock
pop
mov
int3
sub
cmp
mov
rcll
push
loope
push
lcall
jl
lods
xchg
mov
pop
xchg
mov
mov
das
fs
jns
mov
pop
mov
lret
popa
pushf
bnd
dec
sbb
lcall
pusha
inc
xor
mov
test
mov
addb
lods
cltd
fcomps
jmp
xorl
leave
daa
into
or
adcb
pusha
ljmp
rorb
and
cmpsl
xor
cltd
call
push
in
or
outsb
jmp
adc
xchg
jbe
dec
and
sbb
add
xor
jae
js
gs
xchg
push
jb
fwait
pusha
lahf
shlb
in
jg
jo
fld
enter
mov
in
mov
jmp
insb
inc
dec
inc
pop
rcrl
mov
mov
cmp
mov
repz
cmpsb
mov
inc
rclb
cs
aaa
jno
or
stos
cmp
mov
incb
inc
xchg
dec
jns
xchg
push
jbe
dec
xlat
lahf
fcmovnb
lock
out
loop
mov
mov
sub
push
sarb
push
testl
repnz
push
daa
insb
mov
fstp
xchg
jbe
jns
dec
lock
and
mov
dec
arpl
push
aad
pop
cmp
jmp
sbb
xor
in
shll
leave
out
pop
xchg
push
jle
icebp
movsl
pop
jmp
in
in
adc
xchg
orl
mov
cmc
out
scas
fcmovbe
inc
inc
xchg
das
inc
or
inc
mov
test
xor
in
in
sbb
lods
mov
mov
frstor
cs
jge
xor
bound
xor
pop
fimuls
enter
push
cmp
push
mov
xor
pushf
xchg
rorb
push
adc
fcomps
lret
into
test
jl
clc
add
jno
and
mov
cmpsl
jg
inc
shll
js
nop
pop
insl
pushf
mov
add
xlat
xchg
pop
jg
test
dec
add
mov
pushf
ss
push
pop
js
test
aad
loop
icebp
sub
sbb
fcomps
scas
popa
push
push
imul
aas
rcrb
test
or
int
or
fs
jns
push
imul
scas
out
inc
mov
xorb
jl
outsb
in
fs
push
sub
cmpsl
in
xchg
cmc
lods
cli
adc
add
outsb
add
jno
push
shlb
push
imul
xchg
rcr
jo
addr16
lock
push
jo
jno
jo
pop
loop
lods
adcl
ljmp
je
xchg
push
repnz
bnd
dec
jns
in
pushf
cmp
pop
das
scas
loop
mov
shll
ss
mov
dec
ljmp
insl
pop
fcoms
add
jbe
jb
cmp
push
repnz
lea
cli
shll
cltd
jne
xor
aad
ds
testl
fnstenv
lock
inc
jo
xor
lock
clc
jo
jg
jo
mov
adc
cmp
ss
nop
fisubl
je
bound
cwtl
inc
pop
in
cli
je
out
stos
loope
das
lods
push
pushf
mov
sarl
mov
push
cld
sti
nop
gs
inc
pop
shrb
fs
xchg
ljmp
mov
cmp
fmull
xchg
subb
leave
adc
outsb
mov
push
fisttpll
dec
inc
xchg
add
lock
jo
inc
lock
aas
jo
mov
jo
pop
les
lret
addb
out
clc
scas
mov
or
lods
repnz
or
sub
out
cwtl
in
sbb
stos
hlt
sahf
mov
outsb
cltd
jns
xor
mov
cmc
jmp
mov
pop
inc
fmuls
adc
ljmp
scas
sub
adc
dec
enter
lcall
sbb
add
dec
les
lock
adc
mov
aad
sub
in
push
push
mov
sub
mov
jmp
mov
test
jbe
mov
jmp
cmpl
je
mov
jmp
push
mov
mov
mov
jmp
pop
cmpl
jmp
movb
lea
call
ret
nop
nop
nop
nop
nop
pushl
call
cmpl
je
jmp
je
add
push
jmp
xor
jmp
jne
and
jmp
call
mov
jmp
mov
mov
xor
jmp
je
lea
push
call
jmp
cmpl
sete
jmp
mov
add
push
call
jmp
mov
mov
mov
add
nop
nop
nop
nop
nop
lea
mov
test
je
jmp
add
jmp
pushl
push
jmp
xor
test
je
jmp
mov
leave
ret
nop
nop
nop
nop
nop
mov
mov
test
jle
jmp
test
jmp
call
jmp
nop
nop
nop
mov
mov
test
lea
jmp
andl
push
mov
jmp
je
lea
jmp
xor
jmp
nop
push
push
pop
pushl
jmp
mov
push
push
push
jmp
mov
push
push
jmp
nop
nop
nop
call
push
jmp
mov
xor
push
add
jmp
mov
mov
movl
mov
jmp
call
test
jmp
je
lea
jmp
nop
nop
nop
push
mov
sub
cmpl
jmp
mov
lea
sub
shr
jmp
call
mov
jmp
add
jmp
mov
push
push
jmp
inc
jmp
mov
jmp
add
add
jmp
nop
mov
mov
jmp
nop
nop
nop
nop
mov
jmp
mov
jmp
mov
mov
mov
ret
nop
nop
nop
nop
nop
push
jmp
nop
push
jmp
mov
jne
mov
movzbl
jmp
lea
push
push
jmp
push
push
mov
andl
jmp
xor
push
mov
jmp
push
pushl
call
mov
jmp
mov
mov
mov
add
jmp
nop
nop
nop
push
push
push
jmp
call
pushl
lea
call
jmp
xor
mov
jmp
add
push
jmp
inc
dec
jne
pop
jmp
call
push
jmp
push
jmp
shr
push
jmp
mov
add
lea
mov
jmp
mov
lea
push
lea
jmp
mov
and
incl
jmp
nop
nop
nop
nop
push
jmp
cmpl
je
push
push
jmp
ret
nop
nop
nop
nop
nop
nop
nop
push
jmp
call
jmp
push
jmp
xor
nop
nop
nop
nop
nop
movb
movb
movb
mov
jmp
push
cltd
pop
mov
jmp
shr
and
mov
ret
nop
nop
nop
nop
nop
mov
mov
movb
jmp
push
jmp
mov
xor
jmp
pop
je
cmp
je
jmp
pushl
jmp
pushl
jmp
test
jmp
mov
cmp
mov
jmp
call
mov
jmp
jne
jmp
add
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
push
mov
push
mov
nop
nop
nop
nop
nop
mov
xor
push
jmp
je
push
mov
shr
jmp
pop
jne
mov
pop
jmp
mov
add
jmp
mov
xor
mov
jmp
cmp
je
mov
jmp
test
jmp
nop
push
jmp
test
jmp
pushl
pushl
pop
pop
jmp
mov
jmp
call
test
jmp
jne
cmpb
jmp
add
mov
mov
add
jmp
cmpl
mov
jle
mov
jmp
cmp
jmp
test
pop
jmp
push
jmp
nop
nop
nop
nop
mov
sub
mov
mov
jmp
mov
sub
add
jmp
incl
push
lea
push
jmp
test
jle
jmp
jne
jmp
call
add
pusha
mov
jmp
mov
mov
xor
jmp
test
jne
pop
ret
nop
nop
nop
nop
nop
cmp
pop
jmp
nop
nop
nop
push
mov
push
andl
jmp
pop
test
jmp
movl
push
movl
pushl
jmp
inc
jmp
shl
or
movsbl
jmp
xor
jmp
call
jmp
mov
movzwl
mov
and
jmp
jle
jmp
nop
push
mov
push
jmp
mov
push
push
push
jmp
pushl
jmp
test
pop
je
orb
jmp
mov
mov
push
jmp
call
push
call
jmp
ret
nop
nop
nop
nop
nop
idiv
xor
jmp
push
pushl
nop
nop
nop
nop
nop
push
jmp
nop
nop
nop
nop
nop
nop
add
add
add
add
xor
test
je
jmp
je
incl
jmp
test
jmp
call
mov
test
je
jmp
call
jmp
mov
jmp
pop
lea
push
jmp
call
jmp
sub
jmp
je
call
test
pop
jmp
xor
leave
ret
nop
nop
nop
nop
nop
addl
mov
cmp
jmp
je
movzwl
jmp
jmp
lea
push
jmp
mov
inc
inc
decl
jmp
push
push
mov
call
jmp
jl
xor
jmp
mov
jmp
push
jmp
jne
add
jmp
push
push
jmp
mov
jmp
sub
dec
mov
jmp
je
jmp
jne
sub
jmp
push
xor
jmp
jmp
mov
jmp
add
add
push
push
jmp
pushl
push
call
jmp
cmpl
jne
pop
pop
jmp
mov
jmp
xor
mov
jmp
pushl
mov
sub
jmp
push
pop
jmp
call
push
jmp
mov
add
mov
jmp
decl
jne
mov
jmp
pop
lea
push
jmp
mov
movzwl
jmp
call
test
jmp
mov
add
pop
jmp
je
mov
add
jmp
pushl
push
push
jmp
pop
leave
ret
nop
nop
nop
nop
nop
push
mov
call
push
jmp
popa
jmp
push
call
nop
nop
nop
nop
nop
test
jle
mov
jmp
call
jmp
add
jmp
dec
pop
lea
jmp
pop
pop
leave
ret
nop
nop
nop
nop
nop
add
jmp
jmp
call
push
jmp
add
jmp
jmp
push
call
push
push
jmp
mov
jmp
add
jmp
jne
mov
test
jmp
xor
jmp
push
call
add
jmp
call
add
mov
jmp
dec
jne
mov
test
jmp
je
nop
nop
nop
nop
nop
mov
sub
mov
mov
jmp
jmp
push
pop
jmp
push
push
push
jmp
mov
pop
pop
jmp
jle
mov
nop
nop
nop
nop
nop
shl
shr
or
xor
jmp
jmp
andb
jmp
pop
pop
pop
pop
jmp
call
xor
jmp
jmp
pop
leave
ret
nop
nop
nop
nop
nop
add
dec
jne
jmp
incl
jmp
mov
jmp
ret
nop
nop
nop
nop
nop
add
lea
push
push
nop
nop
nop
nop
nop
pushl
push
call
jmp
pop
pop
pop
leave
jmp
push
jmp
ret
nop
nop
nop
nop
nop
pop
movzbl
incl
mov
jmp
mov
cmp
je
nop
nop
nop
nop
nop
pushl
add
pushl
jmp
and
inc
nop
nop
nop
nop
nop
inc
shr
je
jmp
push
nop
nop
nop
nop
nop
push
jmp
test
nop
nop
nop
nop
nop
je
mov
mov
sub
jmp
call
add
add
nop
nop
nop
nop
nop
cmp
jne
call
jmp
mov
mov
jmp
push
pop
pop
pop
jmp
incl
jmp
pop
leave
ret
jmp
dec
jne
jmp
nop
nop
nop
nop
nop
mov
mov
push
jmp
xor
jmp
nop
nop
nop
nop
nop
pop
jmp
call
nop
nop
nop
nop
nop
test
pop
jne
cmp
nop
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
push
call
test
nop
nop
nop
nop
nop
pop
je
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
incl
dec
nop
nop
nop
nop
nop
jne
jmp
sub
jmp
nop
nop
nop
nop
nop
dec
dec
mov
shl
nop
nop
nop
nop
nop
movzbl
add
incl
nop
nop
nop
nop
nop
mov
lea
push
call
nop
nop
nop
nop
nop
cmp
nop
nop
nop
nop
nop
pop
jb
inc
cmp
nop
nop
nop
nop
nop
jb
inc
cmp
jae
nop
nop
nop
nop
nop
inc
inc
test
nop
nop
nop
nop
nop
je
mov
mov
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
mov
mov
incl
dec
nop
nop
nop
nop
nop
jne
mov
jmp
mov
nop
nop
nop
nop
nop
mov
mov
mov
incl
nop
nop
nop
nop
nop
incl
xor
cmpl
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
mov
pop
sub
nop
nop
nop
nop
nop
pop
pop
leave
ret
nop
nop
nop
nop
nop
add
add
add
add
add
add
and
add
add
inc
pop
add
dec
pop
add
bound
add
add
add
add
loopne
add
adc
add
pop
add
mov
add
add
add
add
add
add
and
add
add
inc
pop
add
dec
pop
add
bound
add
add
add
add
jge
inc
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
incl
inc
gs
gs
je
jo
imul
mov
push
popa
imul
inc
imul
add
xchg
add
jo
je
push
popa
addr16
add
addb
jb
outsb
jae
popa
je
dec
gs
popa
add
xchg
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
inc
push
xor
cs
insb
add
push
aaa
and
pop
lret
xor
out
push
add
add
add
add
add
add
add
add
int
or
add
add
add
add
add
add
fldcw
mov
or
add
add
add
mov
add
pusha
add
add
add
jno
pop
inc
jno
add
add
add
add
add
add
add
and
add
dec
mov
add
add
add
jo
pop
std
stc
leave
xor
in
push
add
add
cmpb
jo
add
out
push
fstpl
xor
inc
sti
pop
push
jl
and
add
add
xor
ss
ss
ss
test
mov
mov
mov
xor
xor
xor
xor
xor
cmpl
lods
fdivs
in
cmp
cmp
cmp
sbb
and
sub
and
xor
cmp
cmp
fwait
cmp
cmp
cmp
xor
ss
cmp
xor
sub
push
cmp
bound
in
in
cmp
push
xor
pop
aaa
data16
fstpt
jo
jbe
sbb
pop
xor
add
dec
dec
imul
inc
inc
sub
cs
js
cs
inc
cmp
dec
push
push
pusha
push
and
push
pop
insl
pop
ja
es
push
push
inc
jae
sub
daa
pop
and
cmp
inc
sub
adc
pop
and
jo
and
dec
jg
jo
push
pusha
outsl
das
cmp
pop
jnp
jp
