jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
leave
jle
mov
outsb
lret
dec
ds
mov
or
xor
add
add
add
push
pop
add
testl
or
add
mov
ret
add
add
add
push
add
add
add
add
add
add
add
add
addl
inc
add
mov
add
add
add
add
add
ret
add
add
add
add
push
add
adc
jge
xchg
add
or
add
add
pop
add
add
add
add
add
add
add
jg
or
add
push
add
add
dec
add
dec
add
add
push
add
adc
jge
js
dec
add
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
or
add
push
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
roll
addl
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
pop
add
add
add
add
add
or
add
add
add
add
add
add
jmp
add
sbb
add
inc
add
add
inc
add
inc
add
add
add
add
add
add
add
mov
add
lcall
add
add
lea
and
add
add
add
addl
add
add
add
adc
add
add
add
add
add
scas
add
add
add
add
xchg
add
nop
add
add
scas
add
add
add
add
add
add
add
cs
add
add
pop
add
add
add
addl
add
add
add
add
add
push
add
add
add
ret
add
add
add
mov
dec
add
add
add
add
add
add
add
jmp
add
add
outsb
add
add
add
add
push
add
add
add
pop
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
jl
test
add
add
add
add
roll
mov
test
add
add
add
add
add
sbb
add
add
add
add
add
jg
fildl
or
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
xchg
add
add
push
mov
fildl
or
add
and
pop
add
add
add
add
test
lcall
add
push
add
add
ret
add
add
lcall
add
add
add
add
inc
or
mov
xor
push
cmp
cmp
repnz
call
mov
push
mov
cmp
dec
std
push
stc
pop
nop
or
stos
add
ja
test
popf
jno
lea
call
das
mov
push
jle
loop
aas
adc
and
les
add
sahf
and
lds
xchg
push
pushf
xlat
cli
adc
mov
test
dec
xor
les
enter
or
jge
add
js
popa
out
leave
sete
cld
adc
inc
push
inc
out
iret
inc
add
scas
sub
mov
fimull
add
fisubrs
sbb
sub
lcall
xchg
out
mov
dec
mov
mov
decb
xchg
lock
int3
dec
lea
adc
mov
cmp
jo
or
lret
ss
int
imul
jno
js
cmp
js
pop
dec
mov
cmpsb
lods
out
push
add
fcmovnbe
int3
sbb
movsl
hlt
inc
cmp
cli
mov
std
or
cmpsb
adc
mov
ds
mov
sub
cltd
das
testb
incl
push
cmpsb
adc
fbstp
xchg
test
bound
shrl
jg
or
jno
adc
dec
dec
jno
movsb
jl
mov
sti
pop
mov
and
cmp
ds
scas
lock
mov
push
insb
aad
enter
jbe
or
pop
pop
out
jbe
nop
lcall
mov
push
sbbb
push
sub
cmp
imul
mov
dec
dec
cmp
clc
push
outsb
jae
xchg
lods
xchg
mov
push
mov
mov
mov
mov
inc
incb
fsubs
pop
movsl
xor
cmp
sub
in
insl
push
roll
dec
and
jp
xlat
test
push
sub
aas
xor
pop
jbe
push
jl
and
or
out
cli
pushf
push
inc
jg
movsb
clc
cmc
test
xchg
and
inc
jmp
mov
lods
lods
and
jo
mov
ret
sbb
out
stos
xor
add
mov
cwtl
cmp
mov
in
js
js
leave
dec
jecxz
outsl
out
xchg
inc
and
jnp
mov
lds
cltd
ja,pn
scas
sbb
and
pop
inc
add
popa
int3
lcall
mov
inc
or
js
out
fs
popf
test
sub
mov
mov
mov
je
daa
fiadds
mov
pop
les
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
and
push
dec
push
and
pop
aas
jbe
bound
cmpsb
out
xchg
pop
push
push
dec
push
aas
jbe
popw
push
punpckhbw
mov
cmpsb
mov
fsubrs
xchg
jbe
inc
mov
es
ss
pop
sbb
in
mov
mov
sub
out
outsl
adc
arpl
jns
lahf
sub
testb
aam
insl
lret
cs
ljmp
loop
pop
bound
clc
arpl
in
out
test
adc
imul
mov
repnz
outsl
jg
dec
divb
cs
or
mov
mov
xchg
xor
add
dec
add
adc
push
sbb
push
notl
xchg
imul
mov
push
jmp
stc
outsl
inc
out
seta
mov
lret
jbe
pushf
scas
repz
outsl
fsts
arpl
cmpb
xchg
jmp
and
add
adc
and
in
jg
mov
lods
mov
bound
das
jbe
popw
push
push
aam
mov
push
xchg
mov
lahf
into
xchg
hlt
or
or
jp
push
roll
sbb
cmc
out
lods
xor
mov
mov
outsl
pusha
cmp
push
and
xor
aas
dec
jne
xlat
out
rcrl
mov
mov
inc
pop
cmp
push
cmp
popw
push
cmovbe
mov
cmpsb
fists
scas
out
pop
jg
outsl
es
push
dec
push
aas
jbe
popw
push
cmovbe
mov
cmpsb
fists
scas
out
pop
jg
lods
jo
imul
adc
mov
sub
mov
adcb
inc
sti
cmc
jbe
and
or
pop
mov
les
sub
aad
lods
sub
xchg
lock
int3
test
adc
gs
clc
rorb
mov
pop
rclb
dec
pop
mov
adc
test
mov
not
or
jno
jge
mov
sarl
and
ds
add
repnz
into
pop
loopne
pop
cmp
inc
add
xchg
outsb
mov
inc
or
orb
push
lea
push
xor
dec
dec
faddp
jae
lahf
sbb
lods
outsl
add
arpl
loope
fwait
and
or
inc
mov
mov
in
ljmp
sti
cmp
lds
ficoms
aad
sbb
inc
loopne
jecxz
jnp
lret
or
cltd
stc
cmp
ja
loopne
pop
fistps
xor
mov
cmpsb
and
ret
fildl
fdivp
adc
jo
sahf
iret
inc
and
adc
std
or
push
ljmp
lahf
insl
pop
xlat
mov
cmp
mov
mov
clc
mov
imulb
daa
xchg
xchg
mov
adcb
pop
and
push
xchg
push
les
leave
sub
jno
sub
cwtl
xchg
push
flds
inc
push
jo
pushf
pop
test
inc
xor
dec
sbb
xor
adc
sbb
ljmp
mov
arpl
xor
xor
in
pop
dec
insb
fmuls
add
pop
jecxz
ja
mov
push
xor
aam
cmp
cmp
or
mov
insl
data16
lret
int
js
enter
mov
dec
jb
cmp
lahf
push
mov
push
and
test
add
and
adc
adc
fwait
push
rol
add
mov
bound
js
xchg
cmp
fcoml
outsb
cmp
lret
inc
add
lock
dec
sbb
faddl
push
stc
dec
mov
mov
sub
mov
adc
cmpsl
fildl
pop
imul
popa
fwait
inc
mov
stos
inc
cmpsl
adc
push
pop
fnstcw
dec
adc
xchg
pop
rorl
and
outsb
dec
push
insl
xor
fwait
ret
sub
lods
arpl
pop
push
xchg
lea
sbb
cltd
fcmovne
cld
mov
icebp
mov
pop
outsb
aam
push
adc
mov
xor
or
jmp
mov
cmp
loope
popf
adc
jo
rorb
cltd
mov
mov
dec
push
add
cwtl
cs
add
xor
scas
bnd
fcmovu
mov
fucom
adcb
xchg
cli
or
or
cltd
xchg
xor
sti
inc
mov
aaa
inc
mov
js
lods
test
inc
mov
inc
mulb
mov
repnz
int3
outsb
aaa
cmp
cmp
pop
adc
xchg
js
imul
push
dec
inc
inc
ss
sbb
fidivs
xor
add
pop
out
xchg
fadds
push
cld
cmp
mov
sub
fists
es
push
lea
aaa
ret
push
test
data16
iret
push
inc
xchg
xor
jl
into
fistpll
push
rol
in
cs
loope
loopne
sbb
sbb
mov
add
lods
test
es
push
outsl
lods
adc
arpl
and
fnstenv
xchg
out
push
adc
sbb
loopne
stc
jne
mov
shlb
sbb
imul
jno
dec
mov
mov
push
imul
shrl
in
dec
outsb
mov
fimull
mov
adc
popf
pop
mov
icebp
sbb
outsb
aam
jg
mov
sbb
repz
sbb
hlt
stos
ss
popa
outsl
scas
fsubr
pushf
scas
pop
pop
shlb
iret
imul
into
mov
loop
lock
ret
addr16
push
push
imul
cmc
add
outsl
push
pop
mov
test
in
dec
pop
or
lock
cmp
ss
xchg
aaa
jae
scas
dec
clc
cmpsb
test
repnz
bound
mov
jb
sub
fwait
jle
pop
in
jge
fisttpl
cmp
insb
adc
add
inc
fsubs
pop
movsl
mov
lods
or
stos
mov
pop
shll
sahf
sbb
test
add
or
fs
sub
leave
insb
and
ror
pusha
sbb
lret
xor
inc
int
mov
imul
mov
xchg
mov
pop
int
adc
xchg
jmp
leave
push
roll
push
shrb
fisubrs
xchg
sbb
lret
mov
mov
add
clc
ss
jecxz
push
or
test
sar
pushf
and
or
add
jle
ljmp
pusha
mov
jg
sbb
iret
gs
loopne
cmpl
xchg
or
and
inc
ljmp
and
enter
fidivs
test
fisubrl
jns
int3
inc
imul
push
mov
xor
inc
sbb
add
push
sbb
in
insl
scas
push
imul
jnp
icebp
push
cld
cmpsb
add
xor
lret
sbb
addr16
jmp
ja
mov
mov
lret
push
and
test
shlb
rcrl
sarl
out
add
jne
or
jnp
jp
push
inc
pop
shll
pop
and
and
test
out
cmpl
inc
or
add
add
push
pop
push
pop
jmp
lret
test
pop
test
cmc
pop
or
imul
and
xchg
cmp
pop
push
xchg
mov
out
scas
cwtl
dec
pop
mov
push
fwait
dec
int
sub
sbb
movsl
pushf
cmp
xchg
fldcw
lahf
nop
sbb
mov
mov
imul
cwtl
adc
cltd
test
lds
andl
adc
cmp
in
es
int
pop
xchg
lcall
shl
jg
jo
xlat
inc
outsl
jmp
orl
xorl
fists
adc
negl
jle
or
int3
jno
outsl
jge
and
push
gs
dec
sbb
xchg
push
add
mov
fisubrs
dec
lahf
push
loope
lcall
xchg
xchg
insl
lea
add
jo
mov
xorb
pop
clc
mov
cli
in
shlb
push
inc
xchg
and
inc
xchg
int3
test
call
sahf
jl
add
sbb
imul
ds
push
loope
mov
mov
cmp
or
int3
loop
ret
aam
movsl
fsts
loope
push
pop
lds
cmpsl
cmp
or
aas
nop
xor
paddsw
mov
int
scas
in
add
ds
outsb
loop
sbb
sub
or
fstl
dec
cmp
push
mov
loope
out
ja
lea
nop
xchg
out
outsl
dec
cmp
push
ror
push
or
sbb
call
add
test
js
outsb
sbb
ret
fistps
mov
gs
cli
mov
stos
push
jmp
push
nop
inc
mov
mov
xor
mov
stos
inc
test
inc
cld
aaa
cmp
pop
push
outsb
xchg
imul
and
lods
shlb
bswap
adc
rorb
jecxz
dec
insl
ret
adc
inc
stos
cmpsb
xchg
arpl
bound
jbe
pop
add
movsl
ljmp
dec
mov
ja
dec
adc
mov
pop
loope
int3
divb
nop
dec
push
shl
int
test
xchg
ljmp
rcll
pop
mov
sub
popa
fsubrl
cmp
mov
mov
jae
gs
out
pop
adc
push
push
mov
inc
ljmp
fldl
cli
xchg
cmp
test
or
pop
cmp
or
lock
mov
mov
out
jne
data16
out
mov
leave
pop
and
xchg
pop
mov
rclb
jg
mov
fucom
lcall
and
xchg
dec
into
mov
sub
push
cli
stc
cltd
fdivrl
pop
inc
sbb
insb
les
cmp
pushl
sarb
movsb
shrb
dec
repz
mov
int3
sub
adc
mov
aaa
push
push
or
jne
fsubrl
inc
gs
daa
pop
stos
xchg
stos
int
add
stos
les
xor
push
imul
bound
jg
leave
or
in
adc
mov
sbb
mov
scas
inc
mov
mov
mov
jge
mov
pop
rclb
movsl
jecxz
cmp
pop
loope
ret
ret
call
pop
and
mov
mov
out
fisubs
and
arpl
mov
or
mov
sub
lret
cmp
clc
in
mov
adc
mov
ja
jg
fs
dec
std
xor
sbb
push
nop
and
jl
push
fdivr
fstpl
dec
mov
pop
or
and
clc
rcrl
mov
xchg
into
clc
popf
mov
push
push
xchg
jmp
adc
jb
cmp
mov
push
xor
jb
sub
or
pop
jecxz
xchg
scas
jne
xor
or
jne
sbb
xor
imul
xchg
jae
inc
scas
lret
repnz
mov
stos
inc
fwait
adc
push
adc
add
push
rcrb
lret
cwtl
lret
inc
fdivs
pop
in
fsubrs
pop
cld
inc
gs
cli
mov
repnz
push
rcrl
mov
mov
or
in
pop
xor
xor
mov
xchg
cmp
cmp
scas
pop
jmp
es
jle
jp
push
xor
outsl
shll
fwait
outsb
inc
or
fucomp
xchg
ror
outsl
loope
out
mov
rolb
fwait
scas
mov
leave
arpl
jbe
xchg
sbb
repnz
mov
inc
test
xchg
popf
mov
lahf
jno
jb
xor
in
loope
shll
mov
cmpsb
out
inc
or
jge
test
mov
sub
test
lahf
div
imull
xchg
xor
rorl
stos
cmp
roll
movsl
mov
insb
cmp
jo
aam
sbbb
add
shrb
js
not
fdivrl
notb
cmp
sbb
mov
inc
es
ljmp
in
cmp
sbb
mov
mov
mov
imul
and
es
sbb
les
dec
mov
fldpi
cmp
in
dec
push
push
stos
mov
fsubs
sbb
sbb
sub
notb
test
push
push
xchg
js
inc
mov
sbb
ds
data16
adc
sub
xchg
call
popa
mov
sbb
movsb
jne
add
inc
mov
pusha
sbb
xchg
mov
or
fldenv
jl
in
cs
jnp
jns
sub
jne
xchg
out
add
mov
cmp
mov
test
cmp
in
xchg
in
mov
mov
mov
stc
cmpsb
add
mov
fdivr
cmp
and
jmp
leave
cs
aad
dec
pop
pop
ss
sbb
imul
adc
mov
movsb
fdivl
push
and
xor
add
fcmovb
call
xchg
sbb
jp
fs
fs
out
mov
jbe
and
and
sub
add
mov
rclb
or
ret
aaa
roll
das
lods
cmp
ret
dec
cld
ds
subb
jnp
inc
cwtl
mov
adc
xor
or
out
mov
lret
and
jo
cltd
rcr
iret
or
stc
lds
lcall
push
inc
add
daa
ss
jne
jp
dec
div
scas
leave
sarl
or
ja
mov
es
jne
xchg
cmp
out
or
cmp
test
lods
cmp
in
cltd
xor
or
es
divl
pop
outsl
pusha
popa
xor
mov
jp
into
jb
lcall
fisubrs
sbb
jl
mov
int3
es
in
cmp
jne
imul
bound
mov
lcall
fidivl
lds
ja
loope
cmp
dec
inc
mov
lds
lahf
sbb
scas
imulb
nop
jne
es
imul
push
mov
xor
shlb
test
stos
cld
addl
shrl
loope
sbb
mov
in
adc
shl
cli
mov
mov
adc
adc
push
rorl
repnz
dec
sarl
call
insb
repnz
adc
pop
xor
jge
mov
ds
imulb
ficomps
push
or
cwtl
mov
mov
loopne
jno,pt
das
repnz
jge
or
je
jecxz
lret
shrl
mov
test
mov
aaa
push
inc
ret
mov
in
mov
jo
ficoms
xchg
adc
push
test
adc
push
cmp
xchg
cltd
mov
fldt
je
pop
sub
jno
cmpsb
fwait
cwtl
test
mov
outsl
mov
iret
mov
jb
scas
inc
sub
sbb
cltd
mov
jg
adc
jl
leave
insb
mov
push
repz
clc
pop
sbb
cmp
push
jo
inc
pop
ret
xorb
std
nop
pop
adc
clc
and
sub
sub
repnz
pop
and
mov
add
js
int3
pcmpgtb
and
cmc
lods
add
mov
rcrb
mov
lock
rol
dec
dec
push
jb
mov
mov
inc
dec
mov
xchg
jno
jmp
jmp
aas
cmp
into
lock
adc
sub
rol
cmpsl
sbb
dec
fidivl
repnz
rolb
dec
and
out
out
lock
and
gs
outsl
jne
outsl
mov
fildll
mov
or
call
ljmp
pop
shll
ret
iret
mov
lds
mov
dec
xchg
or
jle
inc
ja
inc
fs
jnp
add
xor
enter
rcrl
out
mov
popa
sbb
xor
filds
aad
imul
xchg
std
lahf
out
scas
fldl
cmc
cwtl
push
jp
mov
xchg
and
scas
inc
imul
cmp
arpl
cs
out
push
push
mov
fcomps
dec
mov
fnstcw
sbb
jb
pushf
sti
mov
imul
push
inc
xchg
test
xchg
push
jae
clc
push
xor
roll
pop
cmc
or
mov
sub
adc
test
or
out
adc
movsl
call
jg
mov
ja
xor
push
fdivrs
lods
dec
leave
dec
or
cmpsl
and
out
jmp
sarb
jmp
pushf
bound
pusha
int3
pop
mov
cld
loope
rcll
mov
daa
pop
and
or
fstl
fimull
lret
in
push
les
inc
or
dec
jb
dec
push
push
rorb
stc
jge
and
lret
scas
jb
xchg
js
add
pusha
sti
dec
in
stos
lret
mov
and
dec
mov
xchg
and
arpl
cmpl
inc
push
cltd
icebp
adc
in
xchg
jbe
add
push
out
push
push
jle
adc
xchg
test
jg
pop
pop
jbe
mov
test
enter
test
jge
jae
jns
jp
ds
or
out
lcall
xchg
lods
es
sbb
jmp
dec
fadds
xor
push
mov
loop
push
fcomip
vmovups
ret
mov
cmp
adc
lcall
sbb
ss
imul
push
arpl
add
push
sub
jg
movsb
rep
inc
fwait
roll
out
rcrb
out
push
mov
lock
xor
push
jno
or
jl
mov
xor
pop
or
ja
into
or
je
notl
imul
add
or
jmp
lock
testl
and
mov
div
cltd
pop
mov
movsb
test
cmp
fwait
xorl
push
imul
cltd
adc
stos
aaa
and
or
shll
fidivl
imul
jb
fldl
inc
subl
aaa
push
inc
sbb
pop
and
out
loopne
mov
aas
xchg
movsl
stos
andl
fldenv
sub
hlt
mov
cmp
sti
movsb
aad
mov
mov
xchg
xor
pop
fninit
xchg
negb
sub
addr16
jl
lock
push
mov
cmp
lods
mov
pop
sub
fwait
call
sub
inc
mov
clc
and
std
insl
popf
leave
test
into
dec
addb
in
gs
mov
inc
ficoms
inc
int3
lcall
shlb
adc
outsb
lds
mov
insl
stos
movsl
insl
xor
inc
and
dec
add
mov
mov
sahf
fcmovnbe
push
mov
pop
stos
scas
fcmovbe
std
dec
mov
sbb
adc
fwait
out
repz
sbb
push
xor
add
repnz
ja
fnstsw
sub
dec
je
out
jae
sbb
fldt
fidivl
test
add
xor
fidivl
andb
imul
pusha
cmpsl
sub
cmp
imul
sbb
cmp
aaa
ret
mov
cmp
orl
xchg
xchg
jae
in
mov
das
rorb
inc
movsb
lea
mov
adc
rcrb
out
push
xchg
inc
in
enter
mov
imul
lds
push
inc
fiadds
fnstenv
inc
sbb
orl
ds
push
aad
mov
sub
cld
xor
cmp
fs
push
inc
mov
xor
ret
cmp
adcb
lret
mov
arpl
adc
fiadds
pop
mov
cmpsl
mov
jns
push
cmpb
in
adc
jg
sti
cwtl
sub
add
sbb
push
jp
mov
mov
mov
fisubrs
add
gs
stc
fcmovnbe
mov
pop
push
pushf
loope
sti
inc
xchg
ftst
ljmp
imull
inc
lds
mov
lahf
or
xor
cmp
insl
fnstenv
ja
frstor
jecxz
inc
and
mov
push
xor
add
sbb
mov
test
mov
into
xor
push
mov
nop
xor
jae
shll
leave
or
jae
popa
add
or
add
in
loope
in
imul
sub
push
pop
mov
and
shrb
notl
mov
lock
jge
dec
fstpl
mov
and
js
nop
lds
xchg
lahf
faddl
fdivr
movsb
stos
jb
fs
jmp
xchg
movb
pop
test
cli
xchg
cmp
stos
xchg
mov
insl
loope
in
jo
mov
and
jne
or
cs
mov
loopne
pop
pop
loop
lret
lret
mov
enter
out
cmc
cmpsb
adc
xchg
roll
into
cmp
pop
or
les
mov
nop
push
repz
es
repz
aam
outsl
cmp
mov
sub
or
jns
orl
mov
sbb
adc
inc
adc
arpl
xchg
sub
pop
adc
inc
mov
je
lds
icebp
xchg
mov
popa
mov
outsl
xor
stos
push
outsl
xchg
push
mov
mov
sti
adc
cmp
fbstp
shll
cmpsb
in
jl
add
mov
js
jg
arpl
stos
aaa
jle
adc
cmp
or
out
adc
mov
push
inc
into
lods
clc
jl
js
mov
adc
pop
add
movsl
fistps
jns
rolb
shlb
xchg
call
push
movsb
out
scas
mov
ss
xchg
popa
jp
cmp
cld
scas
movsb
in
mov
int
xor
or
sub
mov
push
mov
loope
dec
stos
mov
shrb
in
test
cmp
pop
mov
dec
or
push
adc
mov
xchg
mov
sbb
mov
movsb
mov
aas
je
vmulss
xchg
hlt
sarb
sub
ret
jp
cmp
jmp
aam
mov
add
and
xchg
dec
stc
cltd
push
push
mov
fisubl
dec
inc
ja
paddw
mov
sub
rol
fidivs
sbb
pop
sub
mov
sbb
xchg
jae
dec
fstl
ret
je
mov
out
ret
cmp
mov
pop
mov
cltd
pop
lahf
andnps
or
jg
adc
mov
ret
sbb
cmpsl
lahf
pop
sbb
in
cmc
cmc
loope
mov
lods
ficomps
xor
xor
push
adc
into
imul
insb
mov
in
lret
leave
mov
insl
pop
mov
jl
in
sahf
sbb
jle
dec
push
aas
jbe
popw
push
cmovbe
mov
cmpsb
fists
scas
out
pop
jg
outsl
es
push
dec
push
aas
jbe
popw
push
cmovbe
mov
cmpsb
fists
scas
out
pop
jg
outsl
sub
dec
add
jbe
or
pushl
iret
mov
fistpll
ret
dec
inc
aas
jbe
data16
popl
jne
iret
icebp
enter
pusha
scas
jo
imul
dec
sbb
or
adc
add
push
dec
ljmp
mov
fcompl
sub
sbb
or
jl
insb
or
sti
mov
aad
stos
cld
mov
mov
bound
sbb
or
jl
insb
adc
repnz
lods
xchg
clc
mov
adc
int3
int3
add
jae
jae
pop
js
cmp
insl
and
movsb
inc
leave
orl
cmp
push
ljmp
repz
cmp
outsb
push
rclb
popf
and
add
xchg
mov
icebp
mov
mov
repz
push
jno
std
inc
sub
and
scas
adc
or
jge
insb
hlt
rcrl
mov
addr16
sar
and
push
xchg
mov
inc
cmp
not
cltd
mov
jns
dec
jmp
jmp
cmp
dec
push
in
mov
inc
subl
cmc
aam
cmp
clc
sub
lods
adc
jbe
mov
mov
mov
fwait
int
cmp
sub
sbb
or
jl
insb
or
repnz
ret
cld
mov
movsl
pop
push
push
sub
jne
gs
adc
inc
adc
sbb
fsts
lret
ficomps
add
sbb
and
sub
xor
or
sub
test
sahf
fxch
std
lcall
mov
pop
jg
je
imul
sbb
sti
lods
lret
pushf
fisttpl
fcompl
sub
sbb
or
jl
insb
or
jmp
sti
lods
lret
pushf
fisttpl
fcompl
gs
scas
sub
mov
xchg
rol
mov
imul
aam
adcl
or
retw
dec
mov
dec
pop
dec
sub
xor
mov
cwtl
mov
inc
call
inc
xor
test
out
pop
inc
and
loope
popf
out
sahf
movsl
mov
xor
fidivrl
idiv
test
dec
jg
xchg
imul
js
add
js
lret
sbb
xchg
stc
jne
lret
push
mov
inc
int3
push
xchg
mov
stc
popa
push
sub
imul
mov
outsl
in
fstps
jns
xchg
cmp
mov
dec
sbb
out
cmp
adc
ret
daa
add
repnz
and
lods
push
stos
in
mov
sbb
call
jae
enter
push
mov
add
daa
arpl
je
push
add
dec
test
gs
lods
repnz
xor
mov
mov
into
xchg
mov
cwtl
fs
outsl
sbb
shl
mov
or
or
jnp
or
in
and
out
aaa
sub
outsb
cmc
lahf
xchg
je
test
jp
sub
inc
incl
test
ds
inc
push
pushf
sbb
jmp
add
inc
adc
xchg
inc
cmp
fstl
mov
pop
mov
shrl
fadd
jne
pop
dec
aaa
fistpll
jmp
jbe
mov
fdivp
inc
test
adc
fs
aaa
push
fwait
ja
int3
cmpsb
mov
in
cmc
lcall
cmpsl
sub
insb
lods
adc
jge
xchg
shrl
cmp
and
and
fldcw
das
add
pushf
jns
fcoml
pushf
dec
mov
jae
cmp
sbb
push
popa
lea
push
jnp
inc
sbb
adc
cmp
push
pop
jae
jl
orl
fadd
test
lcall
cwtl
push
jmp
mov
push
ficoml
or
rolb
xlat
cmp
in
xchg
xchg
ljmp
dec
sbb
or
pop
mov
in
testb
xor
filds
fisttps
cli
les
mov
jno
stc
xchg
jbe
or
pop
inc
xchg
sbb
test
test
mov
rolb
arpl
inc
sub
cltd
ficoml
mov
sbb
dec
lcall
and
aam
les
shll
daa
cmp
pop
std
jl
add
fldenv
xor
icebp
jge
mov
lret
int3
jns
fisttpll
bound
jge
popa
popa
sbb
xor
adc
and
lock
psadbw
addb
test
stos
repnz
rolb
dec
jae
or
sbb
jbe
das
adc
jno
iret
je
in
fldcw
mov
movsb
mov
inc
inc
insl
mov
dec
pusha
cmpsl
ss
pop
mov
lods
mov
lcall
out
in
lahf
xchg
movsl
adc
jno
sahf
lods
xlat
dec
add
pop
leavew
pcmpgtd
pop
leave
retw
cmp
lcall
pop
xchg
mov
stc
rolb
push
lcall
adc
sub
sbb
clc
cmpsl
test
out
xchg
das
pop
aas
dec
in
clc
adcb
and
clc
in
cmpsb
jecxz
js
rorl
out
xor
fwait
jae
push
sbb
jo
stos
adc
xchg
xchg
dec
test
adc
mov
inc
aad
arpl
lcall
jae
sub
enter
mov
imul
sbb
and
pop
inc
sub
lods
movsl
ss
sbb
outsl
dec
cmp
ss
int3
ljmp
jecxz
jg
and
cs
jle
loope
mov
xchg
push
addl
arpl
or
push
leave
and
sbb
adc
sarb
inc
dec
addl
add
pop
ljmp
inc
lock
sbb
sti
fcomps
sbb
pop
mov
xor
mov
push
add
frstor
addb
rcll
in
cmpsb
mov
mov
shlb
and
cs
ret
adcb
jb
cmp
or
cli
mov
lods
cmovno
push
test
or
int3
lock
jmp
sbb
movsb
mov
xor
xorl
stc
outsl
ds
xchg
sbb
dec
js
dec
dec
jmp
imul
sbb
mov
jmp
inc
xchg
pushf
in
sbb
pop
adc
and
or
ss
pop
sub
lock
add
jge
cmp
les
inc
cli
int
jle
push
jns
cmpl
mov
out
cmc
xchg
push
ret
daa
fwait
mov
shr
scas
inc
aam
arpl
cmpsb
gs
fwait
outsb
icebp
mov
in
ds
test
push
cmpb
inc
cmp
pop
nop
sbb
sarl
aas
stc
fisubrs
loope
cmp
iret
mov
add
mov
stc
sub
loop
xchg
rclb
paddb
sbb
add
inc
or
adc
je
push
and
add
fiadds
in
xchg
jmp
or
inc
daa
push
mov
pop
jle
das
neg
jle
mov
xchg
fwait
dec
xchg
jecxz
in
jb
imul
test
dec
dec
aas
out
or
push
inc
push
inc
faddl
jae
dec
mov
outsb
push
lcall
mov
out
addr16
cli
aas
push
sub
ja
mov
xlat
push
xchg
mov
negb
scas
orl
mov
jle
dec
push
loope
lock
imul
aas
xor
mov
dec
arpl
pop
mov
mov
sbb
xor
imul
sbb
movsl
decb
loope
sbb
iret
test
flds
sti
xchg
sub
sahf
inc
dec
push
mov
into
and
mov
cs
lcall
jecxz
int
dec
jns
out
mov
pop
icebp
shl
clc
pop
test
mov
aas
fdivp
pop
mov
push
sbb
push
loopne
inc
ss
dec
push
or
or
pcmpeqw
jge
mov
in
movsb
lods
lds
repnz
sbb
cwtl
das
loopne
in
and
out
jle
mov
loope
into
fadds
cmp
pop
mov
test
rorb
mov
out
insb
adcb
dec
int3
xchg
jge
popf
rcrb
mov
sbb
fcoms
jmp
add
fs
jne
std
jp
cmpsb
adc
mov
pop
insl
mov
ljmp
jne
popa
mov
in
jl
mov
mul
lcall
push
shl
and
shrb
test
add
jns
in
jecxz
dec
js
xchg
loope
pop
jecxz
xchg
insl
dec
das
movaps
pop
mov
mov
ds
xchg
imul
mov
xchg
out
add
shll
adc
xchg
je
sarl
pop
dec
add
dec
sbb
mov
push
or
sub
lret
push
jg
filds
in
stc
sbb
fidivl
out
mov
icebp
xlat
mov
pop
popa
aam
sbb
push
mov
lods
outsb
gs
or
push
or
les
add
adc
or
ret
jb
mov
push
sub
outsb
adc
movsb
jecxz
or
sub
sub
mov
mov
sub
data16
aam
push
and
mov
adc
sbb
stos
and
pop
sub
inc
jo
inc
jg
pop
sub
shll
and
daa
jns
test
outsb
and
inc
adc
mov
fwait
insb
sbbb
mov
call
mov
pop
ret
in
cmp
or
iret
pop
mov
jae
ret
adcb
sub
xchg
in
sub
icebp
push
mov
mov
cmp
mov
and
sti
and
pop
add
subl
xchg
scas
mov
ret
in
mov
stos
xor
jecxz
aas
adc
cmp
pop
mov
ss
xor
add
jecxz
js
add
lcall
push
fstl
add
and
jl
xchg
mov
std
test
mov
inc
cmp
add
sarb
arpl
or
shlb
fwait
mov
cs
inc
xor
push
cli
push
inc
jne
ret
sbb
push
xchg
inc
xchg
int
jno
push
jmp
out
lods
cld
cwtl
mov
aad
leave
aaa
push
sub
push
pop
dec
add
mov
ss
adc
mov
negb
cmp
repz
or
mov
js
imul
adc
ss
adc
popa
xor
rclb
out
xchg
xchg
int3
test
loope
leave
mov
xchg
jae
inc
fcmovu
jg
addr16
dec
xlat
pusha
subl
cmpsl
dec
cmp
mov
rcrl
fadds
adc
pop
flds
rcrl
aad
add
add
inc
mov
adc
addr16
xlat
and
or
fmuls
mov
mov
imul
push
addr16
sub
je
inc
xchg
lret
mov
jne
push
push
push
sub
inc
cmp
xor
mov
and
and
aad
icebp
data16
out
enter
lahf
cmp
mov
and
movsl
pushf
jge
jbe
jle
xchg
cltd
ret
jbe
das
mov
pop
add
mov
in
aaa
mov
mov
and
test
aas
jns
into
jge
push
dec
int3
ja
lods
adc
mov
mov
and
inc
xchg
inc
xor
add
adc
pushf
stos
cli
int
cmp
addr16
out
fs
xor
jns
es
jns
dec
in
lea
push
imul
inc
stc
fimuls
xchg
cmpsb
sub
push
xorb
or
mov
ss
lret
sahf
lret
pop
ss
ffreep
ja
stos
cwtl
shlb
loope
mov
xor
sbb
leave
scas
xor
sti
xor
dec
inc
cwtl
xchg
sbb
jo
push
xchg
in
icebp
mov
dec
fucomip
sbb
cli
mov
scas
sub
push
cmp
sbb
jne
mov
fisubl
aas
mov
sbb
push
loopne
stos
mov
test
fildl
dec
mov
cmp
adc
out
dec
cmp
mov
and
dec
pop
pop
pop
sbb
fistl
clc
das
in
lcall
mov
addb
les
leave
pusha
jno
outsb
addl
jbe
test
xchg
shll
mov
or
aas
xchg
icebp
movb
and
push
cmp
sarl
sbb
sub
stc
mov
mov
cmp
dec
insb
pop
rorb
xor
sti
aam
cmpsl
insl
clc
push
pop
push
fisttpl
add
dec
icebp
add
mov
cmc
addr16
sbb
cmp
imul
das
jno
mov
xor
mov
mov
jmp
jmp
inc
mov
dec
push
icebp
addr16
aad
pop
sub
xchg
pop
icebp
aaa
ljmp
xchg
andl
push
arpl
stos
cltd
dec
adc
dec
xchg
sub
or
sbb
sub
cmpsb
or
fisttpll
adc
adc
or
orl
std
ja
push
add
sahf
mov
icebp
fcompl
add
mov
push
shll
aas
pop
call
loop
adc
call
xchg
ret
cmc
jg
and
je
xor
mov
mov
lahf
adc
cmpsl
icebp
push
fistl
clc
inc
xor
and
push
mov
outsl
xor
fnstcw
ss
mov
or
dec
pop
cmp
jg
inc
sbb
cs
mov
ret
sbb
cltd
push
xchg
add
loopne
jno
mov
mov
sti
mov
sbb
repz
jmp
sbb
mov
mov
push
fldenv
mov
movsb
xorl
xor
imul
aaa
das
mov
daa
cwtl
test
in
inc
push
mov
rorb
add
insl
cmp
paddq
std
or
stc
xchg
ret
loop
lret
and
fxch
pop
hlt
push
jge
fisubl
or
mov
pushf
fs
push
mov
ja,pt
lret
jnp
repz
lret
mov
movsl
adc
xchg
insl
gs
icebp
fistpl
stos
shll
and
adc
dec
cli
pop
mov
dec
scas
cmp
or
sti
loop
jge
fsub
lahf
loopne
xor
sbb
dec
push
sub
clc
sbbb
xlat
and
dec
test
dec
decl
movsb
cmp
loope
fldt
fs
mov
xchg
sub
xchg
scas
mov
sub
out
arpl
dec
in
popf
das
adc
push
jecxz
jp
int3
jecxz
into
icebp
lcall
add
test
mov
popf
inc
icebp
aaa
jp
sub
outsb
ljmp
test
cmc
test
xor
mov
jnp
mov
lock
or
cltd
mov
cmp
add
push
add
pop
out
adcb
jo
adc
movsl
cwtl
out
dec
sbb
pop
xor
inc
dec
out
add
dec
xor
mov
inc
sub
add
dec
dec
push
pop
jns
inc
adc
repnz
in
push
jp
loope
mov
aad
cmp
subb
push
mov
cmp
jae
dec
mov
test
xor
mov
cmp
fcoms
adc
in
ficoml
mov
pop
cmpsb
or
fisttpl
loopne
data16
xchg
sub
subb
pop
push
sar
movsb
out
sbb
mov
loop
pop
sbb
daa
pop
cmpsl
and
push
aad
inc
clc
pushf
test
adc
in
rcrl
jb
sbb
popa
mov
sub
out
aam
and
xor
xchg
jecxz
xor
test
arpl
and
xchg
in
fnstenv
fnsave
hlt
flds
lret
sahf
or
sub
add
xchg
mov
lods
mov
xchg
enter
jbe
inc
push
mov
mov
and
add
in
ss
pop
std
sahf
xor
push
stos
imul
dec
push
roll
int3
xchg
or
adc
lahf
adc
fisttpll
inc
and
jo
js
and
add
pop
or
push
dec
jle
test
xchg
mov
push
jecxz
repz
shll
push
sti
sarb
std
rcrb
clc
sbb
push
ret
jo
mov
mov
cmpb
into
mov
pop
or
xor
push
xor
enter
ljmp
leave
fnsave
test
mov
xchg
dec
mov
fstpt
add
cmp
dec
inc
daa
mov
int3
sahf
inc
negb
stos
nop
enter
test
hlt
adc
loope
pop
out
lods
rcr
mov
inc
arpl
dec
fstpt
jo
add
push
rcll
push
imul
addr16
jp
in
sub
xchg
or
inc
add
loop
and
sbb
aam
or
aas
movsl
pop
adc
and
and
inc
xor
lret
jnp
jmp
mov
add
and
jp
xlat
jae
sbb
popa
adc
jns
adc
stos
jnp
imul
fbstp
stos
pop
mov
clc
pop
stos
aas
test
addr16
ss
mov
and
adc
lret
movsl
movsb
ljmp
and
pinsrw
dec
aas
inc
lock
daa
ss
push
test
pop
inc
fs
loopne
jmp
daa
inc
xor
imul
push
icebp
push
shrb
inc
fstpt
cmp
sbb
into
push
jno
js
in
and
repnz
sub
es
push
push
push
sbb
int3
int3
or
lock
cwtl
hlt
call
fadds
jbe
data16
push
dec
or
or
movsb
dec
cmp
sbb
daa
clc
sti
call
bound
in
les
stos
cmc
jecxz
xchg
or
sub
in
aad
sub
gs
xchg
es
pop
iret
enter
je
xchg
add
mov
pop
dec
mov
addr16
mov
pop
jge
sbb
jmp
pop
jnp
sbb
test
dec
sbb
cmpxchg
pop
inc
insb
dec
lcall
add
cmpsb
xor
popa
hlt
clc
dec
pusha
jae
push
repz
mov
out
xchg
sbb
jae
xor
loop
loopne
jp
es
sub
lret
or
sub
or
or
ret
cmp
sub
lds
repz
fildll
sub
divl
cmpsl
mov
aad
js
mov
mov
inc
out
in
adc
jle
jge
jecxz
sub
mov
scas
aad
push
ljmp
lcall
xor
pop
sub
xchg
xchg
out
xchg
jbe
push
es
adc
xor
aaa
xlat
loope
push
mov
cld
inc
cvtdq2ps
jbe
rep
ja
cmpsl
push
mov
popf
mov
call
aad
and
mov
mov
movsb
test
cmc
rorl
lahf
popf
rcll
test
repz
push
cmp
push
rolb
rcl
and
jmp
orl
popl
les
or
clc
xor
fdivrs
icebp
fnstcw
loope
cmp
mov
outsb
and
pop
sar
inc
addr16
mov
int3
dec
jg
or
aas
shrb
scas
cwtl
test
sahf
xchg
and
pop
pushf
inc
pop
mov
pop
into
or
jbe
mov
sbb
and
cmp
subb
insb
popa
sar
push
xchg
into
cmp
cmp
sub
ds
cmc
pop
mov
push
fs
data16
loopne
outsl
outsl
scas
adc
sub
enter
popa
fstps
inc
mov
sub
adc
push
clc
lret
mov
xor
add
add
push
inc
js
mov
shlb
stos
mov
xchg
addb
shll
stc
out
int
bound
cmp
and
ds
dec
pop
outsl
xor
orl
xlat
in
mov
repz
jl
into
and
mov
std
jle
pop
das
fisttpl
fcmove
adc
mov
popf
mov
je
and
dec
push
mov
mov
cmp
sti
popa
or
leave
int
push
add
and
inc
add
jnp
je
inc
aad
rorl
addr16
fs
mov
dec
call
in
add
inc
cmp
lock
xchg
adc
rorb
jne
icebp
repnz
cmp
push
in
call
pop
inc
mov
sub
mov
jmp
ljmp
outsl
xlat
or
inc
jb
jo
out
inc
and
subl
mov
adc
and
insb
dec
icebp
clc
xchg
push
xor
sahf
cmp
lahf
dec
jae
mov
fldenv
mov
fwait
mov
pop
clc
lds
imul
fadds
test
lahf
xor
xchg
inc
xlat
lahf
stos
mov
push
xor
arpl
dec
in
out
cmp
pop
std
into
imul
xlat
xchg
aas
loope
lret
adc
icebp
xchg
arpl
scas
fidivs
stc
sbbb
jns
mov
mov
repz
push
cmp
insl
push
xor
pop
push
xor
iret
enter
mov
and
fstps
lret
popf
jecxz
shl
in
sarl
in
mov
fs
pushf
insl
shrl
daa
clc
aaa
and
push
or
fadd
subb
call
cmc
fxch
fistpll
data16
pop
bound
lahf
dec
movsb
jno
xchg
rcrl
insb
push
enter
fmuls
sti
push
stos
out
inc
xorb
adc
xchg
jb
mov
call
rclb
and
das
sub
push
icebp
neg
mov
mov
xorl
repz
sub
jnp
pusha
pop
mov
jl
inc
mov
insl
hlt
inc
sti
test
ffreep
ret
enter
cmp
push
loopne
outsl
nop
cmc
inc
pop
mov
lret
mov
repz
fidivrs
push
sub
mov
in
shlb
addr16
outsl
sub
push
push
and
pop
fists
stos
dec
push
fisttps
push
and
sub
in
cli
xchg
dec
test
jnp
pop
jp
and
insb
xchg
movsl
and
inc
test
dec
mov
dec
fcomp
movsl
pushf
jne
pop
test
mulb
or
dec
adcb
faddl
dec
es
lea
ret
dec
pop
sbb
sbb
or
jl
insb
or
jmp
sti
lods
lret
pushf
fisttpl
fcompl
sub
sbb
or
jl
insb
or
jmp
sti
lods
lret
pushf
fisttpl
fcompl
lods
dec
pushf
pop
or
jl
in
or
jmp
sti
lods
lret
pushf
fisttpl
fcompl
sub
sbb
or
jl
insb
mov
adc
add
popa
pushf
fdivl
je
xor
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
movsl
add
add
cs
mov
adcb
adcb
loopne
adc
and
push
in
aad
lds
nop
and
mov
push
lock
loopne
adc
and
push
in
aad
lds
scas
and
mov
sbb
movsl
je
push
test
pop
jae
xor
call
fnsave
jne
fdivrs
sub
sbb
inc
pusha
and
test
mov
ret
sub
andb
lock
pop
or
lret
test
sub
xor
mov
pusha
aad
in
repz
test
lock
movsb
add
xor
cmc
push
cmc
push
sub
xor
pop
mov
inc
rorl
cld
jmp
mov
mov
and
dec
mov
mov
push
mov
xchg
popf
clc
shlb
gs
or
mov
dec
xchg
in
mov
mov
push
in
loopne
adc
and
push
in
aad
lds
nop
and
mov
push
lock
cmpsb
repz
shl
jbe
cwtd
aas
lods
add
cld
and
jbe
imul
adc
test
xor
ja
xor
lds
aad
in
push
out
int3
adc
inc
mov
inc
shll
push
cmc
cmp
inc
aad
lds
nop
and
mov
push
lock
loopne
adc
and
push
in
aad
lds
nop
and
mov
push
lock
loopne
adc
adc
das
xchg
sbb
rcll
in
into
jle
pop
fs
jecxz
pop
in
sarb
mov
out
stos
js
push
fidivs
hlt
hlt
mov
xchg
jns
xchg
stc
xchg
pause
jns
adc
inc
inc
clc
pusha
scas
pop
pop
nop
jo
inc
mov
fbld
inc
push
sub
rolb
mov
jb
xchg
outsb
cmp
add
cmpsl
xchg
add
xchg
jle
adc
out
test
aaa
leave
mov
sub
mov
shl
mov
pop
xor
stc
and
in
xor
cmpsl
pop
sbb
jb
cmp
push
fsubrs
in
mov
jb
fstps
sbb
push
pop
out
jbe
imul
mov
aas
pop
out
fistpl
outsl
fsts
imul
iret
pop
xchg
int
test
testb
mov
adc
into
inc
inc
fdivrl
push
test
fcomi
js
cli
in
lods
push
sbb
mov
mov
pop
mov
adc
cmp
xchg
mov
jge
movsl
addr16
insl
sbb
jbe
mov
cmp
lods
int3
lret
pop
imul
mov
aam
pop
rcl
stos
adc
dec
sbb
pop
pop
cwtl
mov
shlb
gs
scas
sbb
fwait
add
stc
ds
lcall
je
adc
enter
pop
xor
mov
mov
popl
sbb
cmp
bound
cltd
jne
sub
mov
add
bound
xchg
out
test
dec
or
fidivs
bound
sbb
fsub
sub
lods
xor
push
aam
fsubr
push
pop
adc
xchg
pop
dec
jae
sahf
mov
addb
rcrb
in
cmp
ja
mov
cmp
xlat
and
xor
sub
sbb
je
ja
enter
imul
adc
outsb
mov
std
add
ldmxcsr
mov
mov
xchg
scas
inc
lods
cltd
fmull
push
cli
out
jecxz
lret
test
test
aam
rcrb
push
mov
push
enter
jnp
fucom
inc
jecxz
mov
movntps
daa
and
add
jns
cmpsl
cmp
mov
lret
in
inc
ret
movsb
repnz
fbstp
loopne
icebp
cld
cltd
cmp
rclb
loope
daa
in
bound
dec
adc
jnp
loopne
adc
mov
test
adc
sti
inc
fmul
rolb
add
add
sbb
sbb
sbb
add
in
sbb
xor
inc
test
cltd
mov
mov
test
orl
dec
or
cmp
std
add
lret
jecxz
push
movsb
psubq
ljmp
cmc
testl
js
out
fists
pushf
add
rcll
outsl
xor
cwtl
mov
mov
push
in
mov
inc
lods
shrl
add
inc
mov
sbb
jg
jle
pop
push
mov
push
mov
addb
cmp
aas
jno
test
test
xchg
in
mov
cmp
pop
mov
mov
adc
sti
ret
add
cmp
or
jg
pop
mov
movsb
add
fimull
insb
in
pop
lods
leave
shrl
xor
loopne
movsl
jmp
neg
sbb
add
mov
scas
mov
cmc
push
push
sub
into
xorb
xchg
sbb
in
push
add
jo
mov
int3
cltd
dec
mov
hlt
xchg
lahf
popf
outsb
int
add
idiv
data16
rol
sub
vmwrite
aad
sbbb
inc
xor
sub
cmp
in
stc
sarl
inc
xchg
pop
data16
imul
fsubrl
arpl
xor
pop
sbb
stos
fidivrl
cmp
xchg
loope
pusha
sbb
fmuls
inc
rolb
orb
je
sub
mov
cmc
mov
arpl
or
sbb
in
addr16
cmp
jb
bound
fwait
push
imul
rcl
sbb
daa
mov
stos
xor
inc
xchg
les
in
lods
mov
fdiv
popa
and
pusha
lahf
inc
imul
jnp
pop
mov
xchg
jne
aaa
sbb
fdivrl
test
js
aaa
mov
popa
sbb
fstpt
int
sub
stc
adc
scas
or
pop
mov
pop
jns
jecxz
repz
pushf
jl
gs
jns
jle
and
mov
negl
mov
mov
leave
sbb
mov
out
out
es
xchg
xor
pop
fnstsw
aad
jp
dec
xchg
inc
popf
lds
test
jmp
xor
xor
aad
or
test
incb
lods
dec
dec
jmp
push
mov
loop
in
mov
adc
sbb
pop
daa
and
dec
lret
xor
fwait
push
xchg
aas
or
cmp
jge
pop
sbb
add
pop
jge
cmpsb
pushf
mov
and
pusha
cmpsl
jmp
xchg
iret
iret
and
xchg
push
ficomps
jle
dec
dec
sub
push
scas
mov
jmp
adc
fisttpl
je
ffree
inc
fwait
cwtl
push
outsb
cmpsb
and
addl
aaa
fs
and
dec
xchg
push
xor
lds
pop
in
cltd
fcmovne
insl
test
cmp
cmp
gs
es
lds
outsb
and
adc
jnp
sar
cmpl
and
add
adc
inc
mov
push
sub
mov
filds
sub
xor
inc
xlat
and
imul
sub
arpl
mov
lods
popa
mov
cmp
sub
cmp
addl
or
loopne
jnp
out
push
mov
aad
lcall
pusha
ljmp
and
add
jns
insl
xorl
mov
inc
inc
cmp
test
cmp
dec
cmc
dec
cmp
addr16
sub
imul
push
xchg
sub
xchg
sahf
and
push
mov
outsl
adcb
leave
jecxz
dec
lret
adc
rep
ret
dec
repz
add
dec
xchg
aas
in
cmp
hlt
cltd
mov
in
movsl
sbb
aam
ret
xor
lcall
movsl
sti
sub
sahf
fsubr
lds
mov
xor
arpl
add
aam
ret
mov
add
cld
outsb
insl
movsl
call
movsb
push
jnp
pusha
iret
adc
outsb
xchg
adc
dec
add
push
adc
sub
jge
lods
mov
aas
cwtl
add
jb
pop
or
cmp
sub
and
imul
in
push
sbb
inc
lret
lock
clc
jp
icebp
aaa
sub
dec
push
lods
add
popa
imul
sub
and
fistpll
mov
test
mov
sbb
pop
ret
mov
cld
fnstcw
ss
lret
add
jmp
rcl
cs
scas
jno
leave
pusha
mov
sub
andl
sub
ret
and
pop
inc
fprem
pusha
mov
dec
inc
dec
out
adc
fnstenv
push
and
insl
cs
jmp
jno
and
adc
lcall
push
pop
imul
jnp
inc
fldl
int
imul
inc
rorb
icebp
cmc
xchg
push
ret
shlb
nop
ret
or
stos
sub
push
pop
int
mov
inc
mov
stos
dec
inc
test
mov
nop
mov
cmpsl
mov
sbb
inc
jbe
adc
movsb
aam
sbb
jo
xor
sub
iret
mov
xor
adc
bnd
loop
fstp
cmp
mov
mov
cwtl
icebp
cmp
sbb
pusha
jge
out
cmpsl
ljmp
sti
leave
lods
mov
jbe
sub
js
mov
push
mov
leave
adc
pop
pop
daa
mov
test
sub
and
js
lods
mov
cld
cmp
mov
jnp
xchg
test
inc
dec
and
dec
scas
outsl
pop
xor
pop
jmp
pop
fmull
sbb
cmovle
jl
test
out
mov
imul
jmp
imul
sub
mov
xchg
ss
add
mov
xchg
xor
icebp
pop
mov
pushf
xchg
fsub
insb
mov
add
test
cmpsb
ret
and
xchg
adc
imul
mov
enter
adc
test
shrb
popa
filds
sub
push
ret
push
jae
cmp
jmp
cmp
jl
inc
fnsave
xchg
inc
dec
mov
cmp
sub
fdivs
mov
and
js
lea
repnz
xchg
inc
test
aaa
pop
dec
lock
mulb
inc
stos
cmp
mov
outsl
push
cmp
gs
mov
mov
xchg
fildll
sbb
pop
in
add
mov
jge
icebp
pop
xlat
jge
pop
or
or
jbe
cmpsl
pop
sbb
xchg
cmp
push
mov
flds
popl
cmpsb
xchg
je
xor
pop
int3
lea
rcrl
xor
dec
sub
inc
test
fistl
rorb
sbb
outsl
pushf
add
nop
lea
lret
daa
adc
bound
xchg
or
push
negl
sub
cmp
push
fwait
int3
movsl
xchg
loope
mov
imul
jmp
addr16
mov
pop
xor
jecxz
or
in
xor
loopne
pushf
bound
mov
pushf
sbb
jecxz
lcall
sub
dec
pop
inc
sub
fdivrs
les
jecxz
lret
mov
subb
push
add
sub
sub
jp
mov
cmpsl
loope
jne
cmpsb
iret
daa
push
pushl
lock
scas
sbb
xor
stos
xchg
call
testl
pop
sub
push
sbb
loope
mov
mov
sbb
mov
insb
movsb
cmp
icebp
mov
xchg
mov
fnstenv
mov
das
cmpsb
mov
inc
dec
mov
pop
pop
nop
or
cmp
and
jnp
cmp
mov
movsb
lret
jmp
cmp
or
push
add
int3
sar
leave
pop
ror
mov
push
divl
mov
sldt
aad
push
popa
testb
scas
xchg
push
xor
mov
shll
mov
dec
ficoms
outsb
out
sbb
lret
fwait
aas
stc
addr16
mov
sarl
sub
adc
insb
jge
lcall
sub
add
lods
sub
sbb
and
fdivp
mov
push
das
lahf
adc
add
jl
imul
adc
subb
sub
loop
jge
sub
cs
xor
imul
cli
sbb
pop
pusha
sub
mov
mov
jbe
xchg
lods
mov
mov
stc
lcall
mov
sbb
sub
dec
sub
add
pushf
outsl
push
push
push
or
ficoml
scas
outsl
mov
call
inc
cmp
aaa
aad
orb
cwtl
ret
ret
xchg
out
imul
xor
sub
sbb
mov
out
add
lods
dec
test
cmp
daa
setl
addr16
aas
pop
ss
sub
xchg
ret
lret
mov
repnz
je
or
xorb
outsl
fimull
popf
xchg
mov
loop
add
rcrl
mov
cwtl
lcall
cmc
mov
lds
pop
and
or
loopne
xorl
es
mov
adc
fcmovnu
pop
xchg
dec
sbb
rolb
test
mov
jge
fiaddl
movsb
and
repnz
xchg
lret
xchg
sub
daa
pop
adc
mov
xor
pop
lods
nop
rclb
push
dec
std
test
mov
outsb
js
xchg
mov
or
cmc
pop
fsubrl
push
dec
inc
gs
negb
or
mov
inc
add
xor
stos
jge
loope
mov
xchg
cmp
inc
popa
or
clc
test
jecxz
inc
movsb
xor
lods
adc
cmp
inc
es
lret
and
roll
in
test
dec
push
mov
imulb
into
popa
inc
sub
push
cltd
cltd
lret
aam
push
dec
fisubrl
pusha
pushf
into
ja
add
rclb
adc
and
stos
ss
out
cltd
jp
dec
data16
loopne
ret
incl
pop
out
movsl
addb
adc
test
dec
inc
add
jne
into
or
ds
jge
mov
rcl
jnp
gs
mov
mov
add
icebp
pop
shlb
pop
lock
fs
dec
pop
mov
jne
mov
inc
add
dec
add
sub
mov
cs
cmpsb
pusha
scas
stos
push
mov
mov
idivb
mov
and
cmp
popa
cmpsl
adc
dec
out
adc
jae
inc
sbb
jbe
aad
push
mov
test
js
sub
ret
in
movsb
fidivs
stos
pusha
pop
dec
sub
sarl
xchg
adc
outsb
popf
jecxz
pop
dec
movsl
mov
mov
mov
and
cli
fldt
jp
and
ljmp
loopne
lcall
mov
stos
or
xor
test
inc
mov
xchg
lret
inc
xor
ds
imulb
jecxz
pusha
push
in
cmp
and
cmp
pop
testl
lods
aad
movlps
mov
testb
ljmp
popa
ret
ffreep
daa
and
mov
mov
push
fidivrl
mov
rorl
xor
in
int3
fsubrp
mov
jnp
popf
cmp
int
jecxz
push
loop
and
sbb
or
sub
cmp
adc
sub
fiadds
xor
aaa
xchg
mov
lds
jno
add
lcall
out
lahf
popf
lret
addr16
les
jl
dec
fwait
mov
add
cmp
aas
aam
sub
dec
sub
lret
sbb
outsl
mov
mov
xor
jecxz
outsl
mov
dec
and
enter
mov
dec
in
sbb
mov
into
aam
shrl
loope
mov
out
push
pop
or
pushf
aaa
ret
call
es
jo
sub
xchg
loopne
loop
xor
dec
nop
or
mov
pop
pusha
fs
xchg
pop
xor
lret
add
jg
and
xchg
loop
add
daa
fistl
xor
xlat
out
ret
mov
inc
inc
stc
aas
dec
gs
mov
sub
inc
push
push
mov
stos
jle
mov
xchg
ret
es
pop
ljmp
aam
mov
jge
cld
push
sbb
sbb
out
xchg
inc
js
rclb
mov
cmp
fdivp
sti
adc
pop
jecxz
loopne
lahf
push
in
loop
test
xor
outsl
xchg
pop
and
sbb
push
adc
mov
ja
fstpl
push
mov
jae
test
shrb
and
mov
scas
cs
push
add
dec
adc
sbb
dec
xchg
add
pop
js
sbb
sub
aam
into
and
pop
push
ficoms
sub
xor
loope
mov
fcmovu
sub
inc
stos
es
mulb
push
movsl
insb
pop
aas
xchg
sbbb
repnz
cmp
pop
ds
mov
xchg
adc
popf
jnp
add
and
mov
lds
adc
aam
arpl
cld
xlat
cltd
js
or
insl
aam
call
or
aas
stc
pop
cmp
mov
test
loop
xor
cwtl
jge
repnz
pusha
rorl
cmpsb
enter
hlt
dec
push
enter
mov
notl
mov
inc
pop
mov
pop
push
int3
xorl
xchg
jno
jl
inc
aad
xchg
mov
lods
dec
sti
movsl
ja
mov
or
inc
pop
inc
cmp
cmp
adc
fwait
hlt
hlt
mov
out
xor
mov
shlb
cmp
idivl
fadd
clc
xor
mov
sub
pop
rorb
mov
push
inc
push
daa
xchg
hlt
xchg
lahf
icebp
fisubl
xchg
fwait
cmpsb
xchg
dec
shlb
testl
xchg
mov
insl
jbe
arpl
push
cmp
mov
dec
out
mov
popa
jns
sbb
ja
pop
mov
jnp
ret
fdivr
mov
stos
stc
std
orl
pop
adc
dec
inc
mov
lret
xchg
stos
and
rcrb
cmp
sbb
pop
test
push
push
jns
xchg
dec
jno
or
fldcw
xor
push
push
and
lea
addr16
insl
push
aaa
adc
dec
sub
mov
adc
lret
xchg
test
js
xor
sub
cmp
mov
stos
pop
test
stos
mov
adc
mov
sbb
dec
in
push
daa
mov
cmp
jp
push
pop
mov
xor
pusha
or
and
out
push
inc
xchg
sbb
inc
push
sub
inc
pop
adc
fnstsw
call
xor
rcrl
or
adc
enter
sbb
mov
fs
adc
cmp
mov
cli
jno,pn
jno
imul
xchg
leave
subl
mov
lods
mov
fwait
mov
cmp
sub
pusha
daa
xlat
pop
arpl
out
je
sti
mov
loope
hlt
dec
data16
aam
scas
lock
jne
movsb
scas
stos
dec
jns
in
adc
mov
jbe
out
popa
ret
jo
mov
in
divb
xor
stos
mov
loopne
jo
sub
repz
jecxz
sahf
mov
adcb
and
dec
jbe
sbb
push
jle
adc
mov
sbb
aam
dec
mov
js
cmp
loopne
cwtl
cmp
xor
popf
xor
inc
inc
enter
repz
mov
push
call
adcb
dec
cmp
or
out
repz
orl
inc
add
pop
dec
dec
aas
aas
int3
call
mov
addl
pusha
push
pop
jne
mov
sbb
push
jns
push
or
clc
push
stos
push
sbb
mov
cld
sahf
jle
lea
lods
outsl
jmp
out
pop
aaa
loop
in
sub
fst
cmpsb
sbb
cmp
and
or
and
dec
rcrb
cwtl
push
shll
fistpl
mov
imul
xchg
pop
sbb
mov
xchg
xchg
pushf
cmpsb
shr
into
mov
dec
add
xor
fcmovnb
ret
mov
leave
mov
lret
pusha
mov
daa
fwait
add
dec
jae
test
mov
jmp
xor
int
gs
nop
pop
add
imul
imulb
xor
hlt
cmp
push
lea
loope
xor
push
loope
push
xchg
push
sahf
fcompl
jmp
sub
sbb
aaa
repnz
pop
push
sbb
inc
insb
repz
loop
scas
cmp
or
pop
repnz
or
std
jecxz
dec
cmp
data16
rep
xchg
sub
test
mov
lods
ret
in
push
dec
and
sbb
sub
pop
or
pop
insl
adc
mov
xor
jmp
scas
ja
mov
xchg
std
insl
jae
jno
sub
inc
rorb
adc
rorb
icebp
insl
clc
adc
int
xchg
push
loope
sarb
mov
movsb
int
xor
push
cld
or
pop
dec
fnstcw
in
inc
stos
xor
jge
outsb
nop
aaa
mov
cwtl
lods
or
nop
mov
stos
testb
sub
xlat
adc
fwait
cltd
pop
xor
je
cmovnp
pop
jnp
dec
mov
mov
clc
jb
out
nop
insb
cmp
sahf
shll
imul
or
push
fisubs
mull
jae
sbb
push
out
insl
cmpsl
xchg
sub
or
mov
std
incl
loop
shrb
or
xchg
cmpsl
dec
dec
cmpsl
les
dec
or
push
xchg
lcall
cmp
int
adc
test
outsl
xchg
loop
mov
xchg
cmp
notl
insb
into
push
mov
sbb
aaa
cmp
sbb
mov
pmaddwd
or
push
and
lds
inc
sub
neg
jo
ss
sbbb
add
jecxz
add
jb
popf
imul
fisttpl
dec
fs
stos
test
or
push
mov
inc
sbb
jns
jne
arpl
xlat
sti
fcompl
outsl
test
clc
shl
mov
aad
fisubrs
decl
or
or
dec
pop
xchg
dec
iret
jbe
inc
lods
leave
pop
mov
stc
xor
inc
aad
lds
nop
and
mov
push
lock
loopne
adc
and
push
in
aad
lds
nop
and
mov
push
lock
loopne
adc
add
push
in
aad
lds
nop
and
mov
push
lock
loopne
adc
and
push
in
aad
lds
mov
pop
in
aas
stos
pop
int
in
ret
test
cli
jmp
xchg
dec
push
pop
jae
push
jge
or
add
repnz
ret
lea
mov
jb
inc
jge
or
add
jmp
lret
popf
stos
lods
lcall
sbb
insl
outsb
inc
outsb
jo
jge
scas
mov
mov
push
jae
popa
ss
mov
jp
sbb
mov
and
and
lret
add
push
jge
insl
icebp
popf
rorb
inc
sbb
ljmp
mov
fsubrs
dec
cltd
addr16
iret
repz
jge
clc
lods
or
xchg
mov
mov
cli
and
idivb
mov
sbb
add
cmp
mov
cli
dec
sahf
push
loopne
imul
pop
and
xchg
icebp
sbb
add
sub
pop
or
sbb
popf
mov
dec
shr
add
adc
cmc
fucom
in
rorb
cmpb
insl
pop
jge
or
sbb
subb
repnz
out
cmp
cmp
inc
cmp
mov
xor
dec
jle
mov
mov
call
push
cmp
adc
jge
cli
push
js
inc
gs
data16
loop
repnz
cmpsb
cwtl
xchg
enter
lods
cmpb
insl
inc
jge
or
add
repnz
ret
lea
mov
jb
inc
jge
or
add
loope
inc
adc
sub
or
ds
pop
imul
mov
push
je
out
iret
rcrb
lcall
stc
cmpsl
fstpt
xchg
das
out
cwtl
out
sbb
mov
and
ret
sarb
imul
xchg
xor
inc
lods
rcr
cld
xor
cmpsl
scas
jecxz
adcb
mov
push
repz
scas
dec
or
or
mov
cli
dec
fucomp
or
cmc
loope
dec
pop
dec
cmpsb
pop
mov
cwtl
mov
andb
adc
clc
sahf
or
aam
dec
loop
cmp
mov
jle
xlat
dec
lahf
push
lret
ds
insb
stos
cmp
les
leave
sub
inc
jns,pn
mov
fsubl
imul
movsl
adc
inc
andps
pop
cmp
popf
fwait
mov
std
jo
jne
aaa
jns
push
push
sub
lds
cmp
scas
push
xchg
in
sub
jg
mov
rcr
aad
mov
jmp
jp
mov
xchg
jp
add
inc
in
ret
pop
sbb
cmp
shll
jp
mov
mov
popf
fidivl
lods
push
pop
pop
xor
pop
mov
sub
cmp
aaa
pop
cmp
or
inc
mov
jne
lret
sub
mov
mov
mov
ret
inc
out
xor
fcoml
int
shll
or
push
push
ret
sbb
jmp
dec
xor
mov
mov
jl
test
push
mov
add
inc
jecxz
cmp
mov
cmp
into
cld
xlat
imulb
adc
inc
cmpsl
ss
repz
jp
sbbb
lock
dec
sbb
testl
cmpsl
xchg
dec
iret
xor
mov
and
mov
jns
fisubl
or
or
out
sbb
pop
sub
inc
ret
fiadds
add
jle
mov
cmp
gs
rol
adc
test
ds
loopne
mov
sbb
loope
push
or
lret
cltd
imul
sbb
inc
call
adc
jl
xchg
push
popf
jns
and
jne
mov
mov
lcall
xor
imul
jns
int
les
ret
sbb
mov
mov
xor
cmp
sbb
out
mov
lods
mov
push
test
lods
mov
fistps
fsubrp
push
fnsave
push
adc
out
mov
dec
xchg
mov
pushf
dec
cmpsb
push
fnstenv
out
mov
rcrb
pop
push
adc
sbb
mov
lods
call
jbe
cmp
mov
jne
xchg
gs
fisttps
cmp
sub
push
jb
inc
push
push
or
mov
out
loope
push
or
icebp
lcall
shrl
repz
daa
sub
jno
pop
shl
mov
fdivs
and
mov
into
add
std
lcall
xchg
or
add
sub
push
stos
mov
jmp
stos
xor
or
sahf
push
sub
jnp
xchg
and
les
cmp
data16
dec
pop
fdivp
pop
popa
pop
mov
adcb
cmp
inc
call
jecxz
bnd
jmp
ret
sub
lods
int
lcall
lods
les
mov
adcb
pop
jg
dec
outsb
mov
dec
lock
subl
sahf
xor
frstor
aam
mov
sub
mov
sub
jbe
inc
sub
fsubs
inc
jg
fnstcw
ljmp
xchg
scas
test
in
rolb
sbb
dec
out
sbb
jns
les
movsb
lds
inc
lcall
arpl
out
jae
sbb
roll
push
cmp
sarl
imul
cli
rcll
sub
movsb
sub
jl
jmp
push
popf
push
cmp
in
push
pop
cli
xor
pop
and
mov
pop
ror
fwait
adc
add
cmp
jns
pop
in
sbb
ret
loopne
sbbl
dec
dec
gs
mov
push
add
mov
mov
cmp
push
roll
sbb
hlt
cmp
hlt
shlb
divb
xchg
jnp
cmp
imull
arpl
or
fmul
adc
xor
push
mov
sub
test
and
push
aad
sbb
inc
lahf
adc
xchg
popf
aam
push
cli
xor
orb
dec
stos
push
jb
mov
xor
stos
xchg
cli
popf
pop
mov
fiadds
hlt
xor
adc
add
sub
orl
dec
mov
in
xor
popf
out
dec
pop
push
cmp
jo
mov
xlat
jmp
lret
nop
dec
push
std
repnz
jp
xor
push
jbe
jns
int3
arpl
cmp
inc
loop
ljmp
xor
xchg
sbb
stos
aam
repnz
or
testb
shlb
call
outsl
jge
incl
test
mov
cmp
pop
xchg
pop
cmp
cwtl
inc
into
fildl
dec
loopne
dec
lret
inc
mov
pop
stos
sbb
mov
std
leave
hlt
dec
js
adc
adc
fcmovb
and
out
sub
xchg
jbe
es
push
aam
pop
xor
stc
popf
adc
and
adc
push
repz
dec
leave
adc
orl
in
add
push
fnsave
push
test
mov
dec
add
out
sbb
and
cmp
ficoms
lods
xchg
pop
pop
pop
mov
mov
orps
pop
and
pushf
pop
mov
lds
xchg
or
cld
outsl
add
add
push
rcr
inc
iret
adc
cli
adc
aam
loope
arpl
xchg
in
js
mulb
cltd
cmp
cmovae
jns
icebp
out
into
test
jnp
mov
stc
inc
cltd
insb
sub
mov
sbb
mov
pmaxub
jne
shlb
jle
aad
jp
lret
shl
jns
push
jl
add
mov
fsubr
aam
mov
jmp
push
push
test
mov
fistps
inc
or
rcl
orb
jl
arpl
cli
cmp
inc
or
in
adcb
movsl
or
mov
sub
testb
xchg
add
lcall
in
enter
std
icebp
into
xchg
mov
cmc
mov
imul
xchg
insl
xor
xchg
and
sub
popf
icebp
idivl
imul
out
sub
je
and
sbb
xchg
xlat
adc
repnz
rolb
sbbl
adc
pop
mov
loopne
mov
and
xor
push
dec
call
mov
mov
mov
cltd
sub
dec
xchg
mov
enter
sub
psrlw
push
push
lahf
add
jae
push
dec
xchg
adc
mov
mov
inc
or
out
fnstenv
loopne
lods
xorl
stos
insb
rcrb
add
xchg
cmpsb
cmp
or
mov
mov
js
xchg
pop
pop
das
pop
and
pop
mov
not
ret
xor
sbb
in
pop
movsb
jbe
test
imul
mov
das
cmpl
jo
dec
xor
dec
mov
jb
loopne
sahf
js
pop
or
mov
insb
jne
in
sub
cwtl
fistps
loope
push
adc
mov
sbb
sbb
xlat
push
jo
fwait
pop
jmp
out
and
push
cmp
sbb
and
push
dec
iret
jo
ljmp
mov
xchg
or
cmp
dec
pop
dec
xchg
movb
jne
hlt
cmp
jl
pop
js
pop
sarb
mov
aaa
mov
imul
jmp
stc
sub
aas
scas
push
and
pop
arpl
repz
mov
js
call
les
pop
mov
pop
scas
or
mov
xor
sbb
fnstcw
push
scas
daa
push
orl
ds
adc
adc
arpl
lea
out
mov
cs
and
pop
jle
clc
adc
dec
jl
ds
movsl
lahf
cmpsl
aas
fisttps
dec
pusha
inc
sub
cmp
xor
inc
add
sbb
clc
push
cwtl
mov
xor
outsl
nop
or
push
sbb
loope
lods
gs
fsubl
out
lret
ret
movsl
push
inc
inc
cs
or
and
lahf
jg
pushf
int
adc
mov
mov
mov
mov
sub
xor
addr16
sbb
sub
push
jmp
mov
xchg
mov
xchg
lea
mov
into
adc
push
xchg
sub
incl
call
cltd
lret
js
or
mov
hlt
push
popa
leave
fcmove
addb
jne
jle
xchg
and
pushf
jnp
sub
sub
adc
mov
pop
mov
addr16
sbb
xor
jl
cmp
bound
jnp
lret
xor
pop
sbb
nop
clc
lea
ficoms
cld
pop
repz
imul
shl
out
mov
or
mov
add
pop
hlt
push
pop
mov
ficoms
dec
lods
mov
jle
scas
xor
lods
int3
pop
jmp
pop
sub
js
push
pop
stc
xchg
xor
shl
clc
mov
lret
jl
inc
xor
push
sbb
roll
jle
adc
lods
lods
fimuls
shrl
js
pop
outsb
pop
dec
enter
loop
pop
divl
xor
xor
addr16
add
shlb
jae
push
sbb
pushf
pushf
cwtl
mov
jnp
pushf
xchg
sahf
push
cwtl
sbb
cmc
cmc
mov
mov
ds
test
test
dec
jle
ret
test
mov
es
mov
insl
sbb
sub
pop
mov
mov
mov
popl
and
xchg
mov
mov
sti
sub
mov
xchg
mov
lsl
pop
sbb
add
leave
jg
test
addb
aaa
xor
push
outsl
je
inc
ss
repz
adc
call
pop
ja
enter
test
pop
push
mov
jne
cmpsl
ja
jecxz
pop
pop
out
lea
cmc
sbb
xchg
scas
rcl
fdivrl
bound
sbbl
cwtl
or
pop
jno
mov
in
dec
sub
mov
jge
xchg
jne
dec
xchg
cmc
push
pop
daa
sub
add
cmc
hlt
out
pop
js
mov
xlat
int3
adc
rcll
sub
es
mov
lock
cmp
out
mov
ror
int3
inc
xchg
and
test
dec
test
sahf
lods
mov
mov
test
push
loop
sub
scas
lret
ret
sub
aas
scas
sub
xchg
dec
mov
cmp
out
insl
xlat
sub
dec
mov
ret
inc
lret
in
pusha
mov
je
mov
pop
ljmp
sbb
mov
leave
cmc
and
cmp
shll
cmp
scas
cli
or
data16
or
insb
dec
mov
movsb
inc
xchg
std
clc
adc
shlb
scas
addl
cmpsb
and
xor
inc
push
scas
out
repnz
aam
cmp
mov
roll
mov
adc
mov
repz
xlat
add
rol
mov
ror
outsl
sbb
sbb
pop
dec
lods
roll
scas
paddd
and
dec
loop
cmpsb
scas
dec
xchg
inc
data16
jo
xchg
shlb
daa
pop
xor
or
insl
fneni(8087
push
inc
subb
cmp
out
call
into
out
mov
fidivrs
push
mov
push
jo
addb
inc
adc
and
inc
rorb
pop
push
out
mulb
lods
mov
mov
arpl
loope
dec
call
or
push
cmpsl
out
test
pop
mov
add
stos
mov
add
lret
cmp
in
arpl
mov
inc
mov
xlat
pop
scas
mov
mov
jl
imul
fs
pusha
pop
imul
sub
adc
popf
xor
das
data16
pop
es
stos
push
push
jg
push
cmpb
imul
push
shlb
xor
call
or
dec
and
xor
clc
push
vpsubq
push
shlb
into
sub
push
stos
sub
cmp
push
fnstsw
bound
out
dec
fs
hlt
hlt
or
xchg
mov
jecxz
dec
xor
rolb
cmp
adc
fildl
push
popf
popa
dec
mov
xorps
jno
scas
rol
push
loope
gs
cmp
push
out
bound
outsb
jmp
or
leave
insb
xchg
and
pushf
lods
add
in
and
mov
xor
aas
sbb
mov
sbb
mov
lds
call
inc
push
flds
adc
int
test
out
test
dec
and
aaa
cwtl
leave
mov
mov
je
stos
mov
jg
sbb
add
nop
push
push
cmc
or
mov
pop
outsb
or
out
jg
fsubs
add
mov
fcmovnu
iret
and
mov
pop
add
and
inc
pop
jecxz
cmp
sbb
in
out
and
mov
cmp
rcrb
push
mov
insl
incl
repz
nop
cs
lret
outsl
or
inc
loope
out
in
inc
inc
cltd
jno
sbb
push
push
push
inc
bound
daa
pop
ffree
or
ja
mov
jg,pt
cwtl
mov
fiadds
push
cwtl
and
push
fs
ret
daa
sbb
rcr
pop
es
cs
xor
push
and
inc
xchg
push
mov
pop
mov
fadd
sti
mov
loop
xchg
and
daa
dec
int
mov
in
lods
inc
pop
dec
lret
stc
xor
xor
pop
adc
inc
nop
shll
mov
test
popf
cmp
in
xor
push
jbe
test
ja
push
rcll
xor
stos
push
add
sbb
loope
stos
sar
inc
inc
xchg
mov
cmp
mov
iret
or
inc
inc
dec
sbb
add
loopne
loopne
pop
shll
aas
and
pushf
jnp
fs
into
xchg
insl
mov
sub
daa
lods
rolb
clc
xor
loope
clc
jbe
push
pop
int
mov
outsl
xchg
sbb
dec
add
xor
push
mulps
dec
fadds
pop
push
pop
test
adc
or
mov
lret
mov
aaa
mov
mov
rorl
loopne
push
jbe
shrl
xor
shrb
inc
roll
fbld
pop
outsl
cmpsb
xchg
les
xchg
jp
ljmp
lods
mov
xchg
cmp
fdivrp
mov
outsb
movsl
jno
jns
in
out
lahf
pop
fcoms
fbstp
xor
dec
data16
outsb
xchg
adc
xor
repnz
outsl
enter
scas
or
inc
je
sbb
std
add
add
add
jp
jl
shrb
shll
or
or
int3
rcr
adc
je
push
repnz
cmp
sub
mov
bnd
aam
pushf
push
fidivrl
mov
xchg
sbb
test
cli
mov
push
sbb
lret
mov
cmpl
sbb
roll
fs
or
lahf
push
mov
stos
jmp
sbb
sbb
lock
xchg
aad
push
popf
mov
pusha
aam
je
icebp
push
test
sub
sub
popf
ret
cmpb
nop
cmp
rcll
mov
movsl
sub
xor
jp
xchg
notb
xor
rclb
data16
xor
in
lret
aas
sbb
aas
fists
dec
push
sbb
mov
adc
cmpsb
aam
rcll
xchg
test
lea
xor
mov
out
mov
jns
mov
xchg
dec
icebp
or
pop
cmp
push
divb
sarl
mov
ds
test
push
nop
sub
sarb
int
insl
fisubrl
pop
fdivrp
inc
xchg
jle
jl
adcl
sub
or
push
int
dec
pop
push
or
cmp
cld
insl
pop
mov
or
insl
mov
mov
pop
xchg
xor
push
fincstp
lods
or
daa
or
pop
push
push
stc
stos
jmp
add
xor
sub
das
ffreep
cld
add
pop
pop
inc
mov
das
cmpsb
loop
jo
inc
mov
rclb
dec
call
loope
fldl
jecxz
scas
outsb
sbb
popf
out
pushf
dec
fucomi
mov
cltd
push
es
test
xlat
xchg
or
push
cld
push
fs
add
popf
mov
inc
mov
sbb
add
movb
cmovae
dec
bswap
in
lret
pop
icebp
adc
adc
sub
pop
aas
adc
outsb
jne
jg
push
xchg
into
and
and
jno
push
inc
sub
idivl
loopne
loope
push
pop
rorb
adc
in
jbe
mov
mov
rolb
mov
push
in
lods
mov
loopne
cmc
clc
outsb
mov
out
xorl
mov
mov
pop
jmp
arpl
mov
incb
mov
mov
lret
ja
or
outsb
pop
cmp
pushf
pop
pop
cmp
loope
push
jns
sbb
jnp
movb
cltd
sub
cmp
je
lahf
ret
iret
in
adc
mov
pop
xor
add
or
mov
sahf
pop
xor
or
inc
cli
xchg
into
jo
nop
sub
dec
std
mov
mov
jge
sbb
ret
or
movsl
adc
hlt
mov
or
roll
xchg
adc
and
cmp
cmpsb
adc
jns
jbe
rolb
rolb
push
addr16
aaa
cmp
cmp
push
sub
out
push
sub
pop
pop
divps
dec
sahf
inc
int3
jne
cli
xor
repz
nop
fsubrp
into
mov
mov
mov
push
pop
sarl
and
jg
inc
mov
stos
loop
clc
je
outsl
and
sbb
in
push
mov
popf
pop
jo
icebp
sub
mov
cmovg
dec
mov
xchg
add
mov
jbe
sbb
lds
xorb
not
aam
dec
cmp
push
dec
inc
push
push
xchg
jno
pop
imul
inc
inc
cld
cmc
pop
xchg
sarb
inc
and
leave
lcall
call
cmp
pop
push
fs
dec
or
testb
pop
sub
bound
mov
and
or
or
mov
push
dec
aaa
ljmp
fsubrs
cwtl
stos
adc
mull
xor
mov
testl
ror
mov
cld
loop
and
pop
pushf
psraw
jne
add
push
rolb
aad
inc
jl
xchg
xchg
movsl
adc
fistpll
mov
cmc
push
sbb
add
jbe,pn
mov
xor
add
int3
cmp
inc
mov
or
jo
bound
lret
fimuls
stos
mov
or
sub
jmp
pop
clc
lods
add
jnp
shl
pop
sbb
daa
pop
pop
dec
push
test
sub
mov
outsl
lret
out
jecxz
sub
in
loop
push
jmp
mov
mov
push
push
out
lret
add
add
cmp
ud1
inc
mov
xor
sti
push
pop
pop
push
jo
subb
pop
jns
bound
js
shrl
outsl
mov
push
leave
jp
cmp
and
fs
dec
sbb
andl
enter
jb
cli
cs
or
mov
add
cmc
sbb
cmp
iret
mov
xchg
cmp
jmp
jecxz
shll
rcll
jae
cld
mov
ror
dec
and
cwtl
cmp
add
xor
mov
or
clc
rorb
adc
lret
sub
sub
iret
aam
repz
shl
icebp
dec
inc
sahf
or
roll
cmp
jo
sbb
fbstp
test
pop
jb
jno
and
add
mov
add
cs
aam
cs
std
push
inc
stos
std
mov
jb
ss
ja
stos
cmp
popl
and
fidivs
cli
sub
ljmp
add
int
rclb
xchg
mov
dec
pop
imul
sbb
jl
sbb
adc
mov
sub
or
aas
and
xchg
rcrl
js
and
mov
stos
mov
rclb
imul
dec
outsl
in
stc
mov
fadds
notl
xchg
mov
xorl
jb
std
aas
mov
fistpll
sbb
std
rorb
cmpb
insl
inc
jge
or
add
repnz
ret
lea
mov
jb
inc
jge
or
add
repnz
ret
lea
mov
jb
inc
jl
or
push
cmp
imul
std
rorb
cmpb
movl
dec
aad
lds
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
dec
mov
jge
shlb
leave
int
fsubrl
in
sbb
or
pop
mov
test
or
fnstcw
sub
sbb
or
popf
imul
cltd
jge
or
fnstcw
or
sub
sarl
adc
cmp
insl
icebp
adc
es
lds
ficoml
pop
sarb
leave
cmp
jns
sarb
and
lds
insb
rcl
rol
dec
pop
adc
insl
jb
pushf
mov
sbb
repz
cmpsb
sub
int
mov
insb
loopne
enter
dec
cld
pop
lea
mov
fisubrs
pop
or
test
cmp
adc
fstl
mov
mov
add
jno
pusha
scas
mov
jmp
push
sub
std
pop
mov
and
mov
leave
iret
clc
out
and
sub
sbb
jns
cmp
pop
cmp
test
or
fnstcw
sub
sbb
or
pop
mov
call
or
lahf
aas
popf
int
mov
jge
cmp
pop
sub
cmp
or
adc
push
mov
lods
test
mov
dec
std
insb
mov
repz
sub
pop
loope
jmp
in
inc
xlat
sbb
leave
int
in
sbb
or
pop
mov
test
or
fnstcw
sub
sbb
or
pop
mov
shl
push
dec
repz
cmc
mov
cmpsl
jg
into
or
loope
xor
dec
dec
orb
xor
mov
pop
ja
bound
testl
dec
add
gs
mov
cs
and
icebp
movl
es
sub
xchg
scas
in
mov
pop
sub
sub
or
stos
stos
ret
inc
inc
push
fimuls
mov
pop
inc
pop
lods
imul
mov
iret
cld
sbb
iret
add
xchg
aad
cmp
push
mov
rorl
and
hlt
pop
icebp
lcall
jmp
js
daa
or
pop
pop
jg
sub
push
cmp
std
sub
and
mov
leave
sbb
loope
stc
fcomip
adc
cmp
push
sbb
push
push
xchg
lret
mov
add
push
repz
pop
orl
mov
inc
aam
jge
dec
push
es
repnz
into
dec
fiadds
push
fimull
dec
fs
mov
fldt
push
es
cmpsl
popf
mov
xchg
lcall
and
pop
and
push
add
push
sbbl
mov
inc
jg
or
sbb
jmp
nop
sbb
popf
xorl
insl
jns
jle,pt
mov
test
jne
ret
rclb
push
push
jecxz
rcrb
dec
jns
push
ja
pop
push
test
sbb
pop
jbe
cmp
jbe
inc
cmc
cmp
push
adc
fdivrl
mov
pop
mov
movb
xor
adc
adc
cld
into
stc
fistpll
push
push
cltd
lahf
scas
adc
nop
sbb
in
lods
pop
adcb
gs
pop
daa
mov
sbb
mov
cli
or
lcall
test
xchg
pop
dec
pop
rcrb
lcall
mov
xchg
cmc
mov
insb
cs
dec
mov
es
adc
cld
mov
daa
xchg
mov
and
lds
je
jbe
sbb
dec
xchg
and
and
cmc
pop
xor
sbb
ja
add
insb
push
push
or
andb
bnd
push
jne
add
aaa
cmc
jns
imul
dec
enter
hlt
enter
mov
ja
daa
mov
out
in
cs
mov
outsb
icebp
mov
addr16
mov
lods
addr16
ret
sub
push
and
adc
pop
lret
fmuls
sbb
fnstcw
repnz
pop
xchg
sti
sahf
xor
mov
add
mov
xchg
push
adc
cmp
enter
inc
les
cmovg
fs
push
movl
dec
mov
ret
jmp
mov
cmc
lock
lds
and
xchg
idivb
xchg
pusha
lds
mov
push
in
subl
jp
sub
cmp
ret
sub
and
sub
cli
arpl
jo
stos
outsb
mov
xlat
das
jno
and
sbb
shlb
ret
lcall
lds
mov
popf
cli
and
scas
addr16
jl
mov
xchg
mov
mov
aaa
fwait
jmp
sub
sub
es
mov
repz
add
test
imul
mov
inc
mov
adcb
push
jl
pop
shlb
inc
sub
jo
xor
dec
subb
and
aad
scas
lret
stc
jae
lods
mov
gs
mov
loop
imul
pop
lods
add
je
cli
jae
mov
inc
clc
xor
sub
inc
pop
mov
fisttps
mov
rcrl
js
push
jo
adc
aaa
dec
jecxz
shr
push
call
xor
in
arpl
or
push
push
mov
dec
rcl
or
jge
cmp
mov
inc
cmp
cmp
les
push
mov
ret
iret
nop
in
xchg
sar
fs
ja
loope
daa
pop
lea
add
xor
lock
test
imul
push
jge
push
sbb
mov
test
add
pop
in
dec
aas
je
in
imul
ljmp
inc
in
adc
adc
mov
lret
sarb
aaa
jb
movsl
out
jp
and
inc
sti
xlat
in
js
pop
cmp
and
ljmp
loope
dec
push
cwtl
into
cltd
push
sbb
dec
sub
cmp
mov
test
sbbb
outsl
inc
dec
call
sub
jecxz
mov
push
jnp
repz
fistps
pop
cltd
or
inc
xorb
mov
fsubrl
sbb
adc
or
and
push
inc
bound
bound
sbb
push
outsb
in
aaa
stc
sahf
and
and
jae
push
cltd
jne
add
enter
imul
stc
xor
pop
sub
push
jecxz
cli
jbe
pop
rcl
xchg
mov
out
les
out
push
cmpl
sarl
imul
popa
sbb
inc
push
scas
mov
mov
stos
xor
pop
cld
mov
jno
scas
push
xchg
jb
sub
test
shrb
rcl
lods
fimull
mov
out
pop
mov
xor
xor
sbb
cmp
inc
ljmp
int3
pop
push
pop
or
js
dec
add
push
daa
cmp
cmp
cmp
outsl
ss
cmp
in
xchg
das
orb
ljmp
xchg
xor
mov
in
jecxz
sti
push
xchg
add
jnp
pop
pop
dec
popf
outsl
xor
fs
rep
leave
pop
shl
out
out
push
push
sub
xor
xchg
ds
leave
pusha
leave
daa
push
test
fdivrl
xchg
sub
xchg
loop
imul
dec
in
mov
and
add
push
xor
in
or
add
mov
sbb
rcll
test
xchg
mov
pop
push
inc
cmp
cltd
dec
lock
or
or
dec
andb
aaa
and
cmpsl
adc
cmp
add
adc
roll
cmp
add
or
sarl
hlt
and
ficoms
mov
fistpll
dec
psubb
xchg
stos
dec
xlat
add
clc
bound
xlat
mov
cmp
fisttps
insl
stos
inc
stc
mov
mov
mov
mov
mov
dec
xor
xor
mov
push
mov
pop
outsb
movsb
ficompl
scas
clc
test
cmp
xchg
mov
call
add
scas
add
jae
daa
mov
shl
pop
repz
pop
adc
xchg
cmpsb
add
bound
dec
or
inc
inc
jne
insl
out
sahf
push
add
push
mov
aam
mov
pop
into
sti
cmpsl
sbb
pop
ret
repnz
mov
pop
push
outsb
fcmove
stc
dec
ss
add
jge
rolb
xchg
outsl
jle
rorb
pop
roll
loop
dec
cmp
loop
pop
stos
cld
testl
dec
pop
jne
cmp
wrmsr
xor
mov
push
sub
popf
dec
jl
inc
clc
cmp
mov
mov
dec
sub
push
inc
loopne
push
inc
bound
push
xor
mul
lea
lahf
jne
and
mov
push
add
pop
lahf
push
jno
add
jmp
mov
scas
lds
add
fs
add
in
out
insl
xchg
imul
test
repz
pop
arpl
and
xor
out
cmp
icebp
int3
and
mov
out
cmpl
jecxz
pop
rol
arpl
and
movsb
pop
cltd
lods
add
add
mov
mov
inc
gs
cmp
adc
add
lods
imul
cmp
scas
sub
add
popf
jg
push
or
shrb
or
pop
stos
mov
adc
call
bound
cld
outsl
inc
fmul
mov
scas
hlt
jbe
test
adc
sub
into
push
dec
call
jmp
mov
add
scas
jne
adc
adc
pop
orb
add
push
lcall
mov
lret
jmp
dec
mov
mov
mov
rcr
mov
inc
imul
xchg
cmp
cmpl
xchg
dec
or
add
and
fs
cmpsl
adc
add
xchg
xorb
mov
cmp
mov
incl
inc
jge
jmp
push
xchg
jnp
mov
adc
dec
jbe
or
cs
js
imul
add
xchg
movsl
addl
pusha
leave
mov
ret
jg
incb
mov
jmp
pop
inc
insl
and
cmpb
cmpsl
dec
test
stc
sbb
insl
and
aas
shll
cltd
push
sub
push
enter
pop
mov
add
sub
mov
outsb
sahf
stc
fsub
sub
xor
mov
sbb
dec
mov
jns
push
loopne
push
sub
xchg
bound
xor
xchg
dec
sti
and
cmp
push
lods
mov
and
inc
out
add
call
adc
dec
push
dec
push
mov
adc
push
outsb
int
pop
mov
xlat
stc
std
loope
jmp
pop
cmp
push
mov
pop
testb
xchg
dec
popa
push
pop
cmc
cmpsb
add
jp
dec
jae
adc
jl
f2xm1
stos
lahf
mov
mull
push
cwtl
cmp
cmp
imul
bound
cs
adc
xchg
arpl
enter
inc
xchg
or
push
test
xchg
sub
xchg
cmp
stc
cmpsl
mov
test
in
adc
push
out
sbb
and
pop
fwait
repz
cmp
aad
xor
js
pop
call
dec
mov
mov
cmp
sub
sub
pop
mov
in
loope
pop
mov
mov
jg
lret
xor
repnz
pop
repnz
jno
mov
sahf
inc
scas
rorl
sub
push
jle
jae
loopne
popf
jno
fbstp
out
lcall
xchg
aas
and
pop
xor
jle
hlt
add
pop
arpl
bnd
pop
addr16
test
push
icebp
or
push
inc
test
adc
push
popf
loop
movsl
inc
arpl
fnstsw
mov
fwait
cmp
sub
dec
jns
lahf
rolb
imul
mov
fldenv
and
sti
imul
lods
add
and
lods
cwtl
je
cmp
popa
xchg
nop
adc
inc
jb
lcall
cmp
out
test
aaa
add
repnz
add
fidivrs
pusha
dec
popf
loopne
cmp
inc
sar
pop
jg
jo
inc
xchg
js
ds
sbb
arpl
hlt
out
xchg
insl
cmp
mov
sbb
mov
sbbb
or
jge
xchg
shl
add
cltd
dec
xor
cli
je
xchg
cmpsb
fldenv
outsb
lret
xchg
xor
sub
pop
movsb
mov
jecxz
ljmp
xor
xor
xchg
sub
sbb
mov
arpl
ss
sbb
or
lahf
lds
loop
insl
lahf
dec
push
sub
mov
punpckldq
lret
adc
ss
push
nop
xchg
ret
lods
rorl
out
sbb
sbb
lds
std
jbe
pop
push
rcrb
pop
insb
sbb
push
cmp
push
repnz
cmp
cmp
fisubrs
daa
pop
and
sbb
xor
imul
xchg
sub
cmp
test
loopne
dec
mov
jmp
addb
sarl
test
pop
sub
lea
lock
jg
cmp
dec
mov
push
adc
sbb
lods
mov
mov
mov
xchg
pop
gs
clc
repz
xor
gs
add
dec
ja
test
loopne
into
nop
in
mov
push
sbb
cwtl
and
xor
and
test
cmp
xchg
xchg
fstl
mov
cmp
loop
in
pusha
mov
stos
js
aad
loopne
push
aaa
dec
or
or
ja
fld1
adc
jne
outsl
or
pushf
jbe
adc
jp
int3
shrl
repnz
pushf
xchg
jo
std
in
lods
bound
mov
cmp
mov
and
jmp
xor
aad
xor
cmp
mov
add
mov
clc
adc
outsl
jmp
push
gs
insb
gs
jns
add
cld
xor
jl
push
mov
iret
xor
jecxz
cmp
insb
mov
aad
daa
and
cmc
push
xlat
in
mov
adc
call
xor
mov
mov
dec
movsb
orl
out
rorl
mov
mov
adc
sub
mov
jge
pop
test
in
jb
sbb
roll
loopne
adc
dec
mov
dec
adc
mov
dec
mov
pop
int
out
push
mov
outsb
dec
out
sahf
mov
xor
inc
dec
ja
cmp
aaa
dec
bound
mov
push
pop
push
dec
add
in
xor
movsl
mov
arpl
jns
mov
cld
adc
xchg
fcmovnu
mov
mov
addr16
push
pop
pop
pop
stos
aaa
pop
shlb
aas
gs
push
fdivrs
das
aad
sahf
outsb
mov
cmp
bound
and
push
outsb
and
adc
mov
cmpsl
loopne
mov
out
jle
fiadds
and
clc
mov
into
add
xor
cltd
mov
ja
stos
jmp
mov
loope
add
imul
push
mov
cli
xor
rclb
insl
es
push
jae
mov
dec
sub
dec
ret
sub
repnz
jno
sahf
ja
push
cmpsl
push
fwait
cmp
iret
push
sub
jmp
xchg
in
sbb
add
in
and
mov
pop
or
lret
mov
mov
jl
and
aam
sub
jmp
aas
mov
fistps
lock
xor
mov
mov
mov
jle
stc
and
push
stos
in
lods
mov
add
divl
cli
jae
or
push
out
adc
imul
sub
fwait
dec
jb
xor
addl
jmp
sub
sbb
loope
mov
flds
sub
in
fstps
mov
repnz
pop
lret
stos
je
test
aaa
rclb
xor
jmp
adc
test
popf
test
sub
sti
sbb
iret
or
cmpsl
mov
dec
cmpsl
ret
push
fstpt
clc
pop
push
negb
int
push
mov
nop
xchg
adc
mov
lods
mov
ds
dec
jge
xor
xchg
mov
jnp
jno
mov
jle
es
fwait
scas
mov
or
xchg
leave
add
xor
push
rolb
pop
push
dec
ds
push
test
cwtl
pop
addr16
pop
loop
int
xchg
inc
and
sti
pop
pop
lock
mov
xchg
hlt
int
mov
push
or
push
jecxz
fs
jge
xor
jle
push
or
loopne
inc
fildll
jo
jo
jecxz
and
mov
dec
mov
mov
mov
popa
jb
lcall
mov
and
outsb
cltd
or
bnd
addr16
adc
in
add
cmpsl
mov
mov
insb
jbe
rcl
push
gs
push
and
adc
insl
dec
mov
add
mov
push
or
mov
inc
sbb
sbb
xchg
loopne,pn
xchg
push
js
clc
ret
xchg
loopne
jl
xchg
pop
cmp
scas
es
loop
lods
sub
xchg
leave
scas
dec
lods
xor
adc
push
cli
and
sti
shrl
fisttpll
ds
jnp
andl
cmpsl
out
movsl
mov
adc
fwait
push
sarl
cmc
sti
loopne
xchg
sbb
daa
js
mov
mov
jne
iret
adc
addr16
pop
xor
mov
add
pop
or
cwtl
mov
mov
je
inc
mov
lret
sub
pop
adc
or
shll
sbb
lret
stos
in
adc
pop
inc
aam
stc
add
inc
cwtl
inc
cmp
or
in
sti
fdivrs
xlat
pop
push
xor
es
aam
notb
and
cmpsb
push
or
pop
cli
in
imul
xor
inc
push
repz
jecxz
add
mov
daa
test
into
fistl
dec
jg
cmp
in
xchg
xchg
dec
add
roll
ljmp
or
out
cltd
sahf
outsl
fiadds
dec
idivb
addr16
mov
and
test
or
push
addr16
insb
jb
xor
fwait
mov
bound
arpl
mov
sti
outsb
mov
fldl
loope
adcl
repz
mov
out
add
jl
and
push
add
jae
add
rclb
cmpsb
xchg
lcall
cmp
push
mov
cmp
movsb
sub
push
aam
fisubrl
in
dec
push
xor
sub
mov
lret
push
push
dec
jp
jg
push
push
lea
imul
sbb
sub
mov
test
rcr
aam
pop
fldl
lret
cs
push
imul
cmp
loopne
xchg
arpl
xchg
xchg
sbb
ljmp
jo
mov
adc
testb
out
adc
inc
mov
in
clc
pop
cmp
stos
mov
jg
xchg
repnz
cmp
sbb
sub
loopne
add
xor
or
xor
ret
jb
mov
out
xchg
pop
xchg
lret
sub
jnp
cs
bound
fisttps
mov
rorb
or
adc
sub
idivb
pop
aas
sub
notl
in
test
add
test
lods
pop
dec
mov
repz
js
mov
xchg
loop
js
pop
shll
mov
test
push
aaa
rcl
sbb
sub
lods
xor
cmp
mov
adc
mov
stos
decl
add
les
stc
leave
or
iret
mov
xchg
jg
xor
pop
loopne
sbb
ljmp
adcl
mov
pop
xor
data16
push
loope
test
int3
mov
and
frstor
arpl
xchg
sub
rorb
pushf
clc
repnz
rclb
fs
sub
test
ret
lea
mov
aad
push
mov
pop
lods
add
and
jmp
movsb
mov
out
ja
out
push
jne
notl
loopne
pop
sbb
enter
imul
cmp
push
cmp
aaa
pop
mov
daa
cli
mov
inc
loope
cmc
mov
data16
in
mov
lret
xchg
inc
mov
stc
aad
adc
mov
pusha
push
adc
inc
pop
jnp
aas
pop
and
xor
mov
adc
jmp
pop
jle
adc
daa
add
enter
mov
dec
jecxz
pop
out
ret
add
xchg
xor
xchg
in
clc
dec
dec
aas
in
fs
scas
inc
mov
jns
xchg
inc
xor
imul
mov
loope
and
dec
in
pop
mov
push
and
test
mov
add
mov
mov
sbb
xor
cmp
push
pop
adc
adc
jg
sub
jmp
lahf
adc
sub
mov
mov
push
sbb
jae
dec
sar
fstpt
enter
aaa
imul
rcrl
mov
sub
jecxz
mov
lods
or
out
test
gs
mov
loop
jmp
in
mov
mov
repz
stos
js
out
das
daa
push
fbstp
xor
dec
iret
dec
shlb
mov
nop
jmp
popf
jg
ret
test
inc
sbb
stc
jl
adcl
or
xchg
inc
xchg
push
xor
loopne
xor
shll
add
and
pushf
mov
adcl
dec
add
es
add
jmp
scas
aad
int3
adc
icebp
out
mov
in
jmp
jnp
loope
lock
filds
fstl
jns
lahf
pop
subb
adc
adc
jno
or
adc
push
sub
mov
mov
mov
es
out
shl
lret
insb
out
mov
jo
inc
pop
or
mov
inc
popf
std
clc
test
mov
pop
in
sti
cmpsb
data16
mov
test
cmp
loope
cwtl
and
cmp
arpl
xor
cli
mov
sub
and
and
or
cmp
lret
or
jecxz
dec
mov
in
sub
popa
sti
sub
sahf
jg
mov
jbe
dec
cwtl
repz
in
jecxz
push
mov
jo
or
ja
and
xor
xor
inc
mov
leave
mov
mov
xor
aaa
xor
or
fnstcw
sub
sbb
or
pop
mov
test
or
fnstcw
sub
sbb
or
pop
mov
test
stc
sbb
leave
int
in
sbb
or
pop
mov
test
or
fnstcw
addl
jle
icebp
in
xchg
frstor
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
test
stc
out
fnsaves
daa
sbb
pop
imul
sbb
rcll
jmp
pop
cltd
mov
xlat
pop
out
idivl
or
jge
sub
cmp
outsl
fistpll
gs
sub
cmp
or
xchg
sub
inc
out
pop
ret
dec
cmpsl
mov
sub
and
mov
aam
jge
xor
pop
or
stc
push
shrl
data16
xorb
int
movsb
xchg
xchg
lahf
xchg
testl
leave
inc
jmp
inc
call
lods
or
inc
xchg
jp
push
mov
xchg
ja
mov
xchg
mov
fisttps
int3
mov
xchg
jns
xchg
test
hlt
dec
inc
and
push
and
loop
xor
inc
in
aas
icebp
daa
mov
out
les
xchg
dec
pop
dec
xchg
fsqrt
push
pop
pop
add
popa
test
inc
or
mov
sub
cli
push
fnstenv
mov
fldl
test
push
lret
add
mov
pop
leave
mov
xor
dec
out
in
push
sub
sbb
pop
idivb
leave
adc
scas
push
xor
js
xor
pop
lret
mov
xchg
or
adc
lret
pop
js
mov
daa
mov
pop
test
xlat
pop
imul
sbb
leave
push
flds
ja
mov
cltd
pop
test
xlat
pop
imul
sbb
leave
push
sbb
dec
lds
mov
les
and
and
lret
movsb
inc
adc
xor
dec
les
fdivrl
adc
jecxz
mov
out
in
aaa
neg
mov
xor
add
ljmp
xchg
cmpsb
and
jl
mov
mov
loop
aas
cwtl
sub
mov
jmp
mov
sbb
rolb
jbe
jecxz
pop
dec
jno
shlb
imul
fbstp
subl
or
aam
jge
mov
sub
das
pminub
das
mov
adc
or
inc
jge
pop
cs
cmp
cmp
int3
mov
lret
jnp
lds
and
aam
and
mov
outsb
cmc
and
cmpsl
xor
xor
inc
and
xor
jg
jmp
adc
test
jle
out
loopne
fmulp
mov
pop
jbe
jns
add
out
mov
xor
push
push
mov
push
sub
jo
cmpsl
jbe
sbb
or
pop
mov
or
cltd
daa
shl
clc
adc
and
stos
push
notb
jb
int3
adc
add
add
mov
cmp
cmp
popa
sbb
sub
dec
shrl
pusha
xchg
sub
or
out
add
das
and
pop
mov
cwtl
jecxz
out
sbb
pusha
iret
jbe
pop
int3
out
lds
sbbb
pop
test
pop
push
mov
mov
and
lahf
in
jp
test
movsb
sub
jne
push
add
jecxz
lcall
pop
xchg
xor
outsb
rcrl
jg
dec
adc
cmp
daa
push
pop
fstl
or
fisubrs
stc
lods
lcall
imul
aas
lret
xchg
or
sub
add
inc
and
push
jnp
pushf
jmp
push
jbe
pop
into
lcall
jae
negb
les
repnz
and
mov
out
ret
sub
xchg
popa
xor
ret
outsl
rcr
sbb
sbb
call
out
imul
lret
daa
sub
xor
and
cmpsl
lahf
je
dec
ret
push
cli
test
loop
xchg
mov
ja
iret
xor
test
cmp
mov
adc
sbbl
push
out
mov
jbe
clc
lahf
mov
or
sub
sbb
add
mov
or
add
xor
jmp
fs
test
add
in
mov
test
and
daa
adc
pop
clc
mov
out
pop
lock
adc
adc
fsub
cs
pop
fwait
pushf
movsl
outsb
in
lods
mov
mov
out
fcoml
test
pop
loopne
mov
das
cmp
cmp
das
xchg
adc
mov
pop
jbe
popf
pop
add
and
imul
out
cmp
repnz
jmp
sub
cmpsb
inc
test
pop
add
std
insl
pop
sbb
enter
sub
xchg
insl
xor
cmc
mov
mov
push
repz
inc
imul
sbb
xchg
adc
jbe
aad
mov
mov
cmp
enter
fists
cmp
sbb
out
xchg
bound
and
inc
cmc
sub
das
dec
fildll
xchg
cs
cmp
sbb
jae
jno
cmpsl
mov
push
ljmp
in
pop
sub
scas
adc
cmp
fsubs
xchg
cmp
fiaddl
clc
xor
jp
int
out
push
rclb
pushf
cmp
push
std
scas
pop
push
inc
lcall
and
negl
jl
pop
jle
ret
push
push
fcom
jb
adc
ds
cmc
sbb
idivb
add
pushf
fbld
push
icebp
std
mov
push
adcl
cmpl
insl
mov
push
sbb
nop
pop
jg
paddsb
jge
or
shrb
xor
jo
inc
je
daa
mov
cmc
std
das
cmpsl
sti
les
std
stos
fdivrs
imul
fcoms
xor
and
hlt
ss
outsl
mov
xchg
push
sub
dec
in
sub
mov
icebp
je
std
adc
adc
sti
int3
mov
pop
into
shll
adc
rcll
push
les
in
dec
addr16
data16
mov
fprem1
xor
mov
push
jecxz
into
addl
adc
lcallw
or
push
push
push
xlat
mov
lods
int3
test
gs
or
dec
outsl
push
pusha
sbb
outsl
dec
rcrb
and
push
insl
pop
mov
cmp
test
lds
dec
add
sub
mov
xchg
and
cmp
int3
test
int3
xor
pop
stos
aas
dec
cmpsl
data16
jo
push
int3
push
inc
pop
cmpsb
pop
scas
mov
shll
subb
ficomps
sub
lahf
and
fs
dec
dec
push
pusha
mov
mov
daa
jge
mov
outsb
fdivs
dec
xchg
subb
dec
sub
dec
sti
xor
les
mov
fdivp
rorb
loopne
jecxz
pop
in
add
jmp
outsl
inc
popa
pop
pop
fsubrl
loop
ret
cli
cld
jbe
testl
dec
js
cmp
in
aam
insl
push
push
push
js
push
push
jecxz
xchg
or
pop
add
mov
testl
in
jp
push
insl
add
pop
sbb
outsb
mov
orb
inc
pop
sub
imul
mov
int
ret
outsb
mov
push
dec
and
pop
mov
insl
mov
ds
je
cwtl
lret
and
or
out
loopne
pusha
or
sbb
add
loopne
xchg
push
mov
ss
add
out
scas
fdivl
lcall
xor
ljmp
sub
mov
xchg
int3
pop
shlb
cmpsl
xlat
add
orb
aam
test
sbb
jmp
mov
mov
cltd
inc
loop
mov
je
pop
sub
fdiv
popa
scas
cmc
movsb
mov
sub
lahf
xor
push
and
out
rorb
and
lret
in
lock
mov
xchg
addr16
xor
inc
cmp
mov
jae
cltd
push
movl
mov
mov
mov
xchg
addr16
xchg
addr16
push
mov
xor
jae
fisubrl
jb
pop
imul
jns
imul
dec
jns
sbb
xor
cmpsb
mov
jle
inc
fstps
cmp
xchg
jbe
popf
data16
jp
push
es
mov
divb
iret
cmpsb
add
loope
pop
adc
sbb
out
xchg
hlt
out
mov
inc
pop
dec
xchg
gs
and
lahf
sub
or
jge
cmc
dec
fs
into
inc
xchg
mov
cmp
pop
sbb
or
popa
mov
mov
jg
jnp
or
sbb
jmp
jne
or
cld
stos
int
aam
out
jne
inc
mov
jecxz
mov
cld
jb
cld
pop
xor
ficompl
inc
jmp
sub
sub
bound
nop
aas
insb
lcall
push
lods
cwtl
loop
and
cmpsl
xor
fiadds
cmc
sub
testl
cwtl
popf
jb
xchg
sub
call
lea
inc
xchg
mov
stos
sub
test
sub
lods
mov
in
jle
daa
pop
pop
push
pop
ret
jns
aaa
jbe
jne
pop
mov
neg
lcall
scas
in
dec
adc
sub
mov
inc
push
and
fisttpll
out
add
jbe
gs
mov
sahf
and
xor
in
add
lahf
inc
jo
sbbb
mov
popa
filds
fucomip
lret
or
jo
mov
cmp
mov
scas
clc
ret
jns
mov
xlat
daa
dec
call
adc
scas
xor
in
sbb
add
test
roll
lret
pop
cmp
pop
push
leave
push
add
xor
or
inc
sbb
insb
xchg
jmp
adc
popf
repz
lret
push
push
subl
aad
jg
xor
ret
orb
lcall
shlb
xchg
add
sub
rcl
jge
mov
add
lods
shlb
rcrl
sub
int
cmp
mov
pop
jo
sub
subb
std
push
test
mov
jmp
sub
pusha
xor
jbe
jle
jns
sbb
movsl
cmp
cltd
iret
int3
aas
mov
mov
cltd
or
add
cltd
in
sub
cmp
xchg
lcall
daa
sub
xchg
mov
push
adc
push
dec
test
adc
arpl
jb
cmp
repz
mov
dec
or
xchg
dec
sbb
inc
ret
in
push
pusha
mov
mov
dec
rorb
inc
fidivrl
mov
out
addl
ja
push
bound
sbb
imul
int3
imul
in
push
inc
jl
sbb
pop
mull
mov
push
and
sub
ss
adc
rcll
sub
sbb
stos
xlat
mov
sub
stos
pop
inc
adc
jb
adc
je
iret
xchg
into
xchg
xlat
ret
mov
add
sub
ss
or
insb
xor
add
mov
cwtl
adc
cltd
xorb
cmpsb
cmp
imul
leave
sahf
push
daa
pop
bound
dec
sub
aam
add
pop
pop
gs
push
xchg
dec
mov
sub
dec
push
scas
adc
daa
in
inc
mov
shr
das
popf
jb
insl
mov
add
mov
push
push
fwait
xchg
add
aam
aaa
nop
pop
push
cmpsb
add
cld
lods
add
out
cmp
jo
xchg
inc
or
rolb
shl
in
mov
add
or
mov
and
ret
addr16
ss
aaa
movb
xor
pushf
in
pop
push
push
aad
jmp
jno
xchg
mov
sbbl
ret
xor
dec
pushf
xchg
sub
xchg
ja
mov
mov
orl
divl
add
inc
sbbl
mov
adc
inc
cmp
xchg
or
mov
and
call
adc
pop
loop
pop
scas
repnz
dec
cltd
je
inc
jbe
mov
lret
pop
mov
out
fcom
pop
add
pop
fldenv
sbb
daa
pop
cltd
fldt
pop
divl
push
xor
test
nop
add
pop
jae
or
iret
mov
movsl
or
sbb
mov
lret
jl
ljmp
mov
adc
inc
popa
pop
mov
cltd
mov
push
lds
mov
negl
cmp
test
push
pminsw
dec
add
push
call
js
push
hlt
dec
iret
loopne
mov
sub
or
mov
xor
cmpsl
cwtl
ja
pop
push
mov
fldcw
add
into
lret
test
nop
push
xor
cmc
and
dec
sub
das
jmp
test
xor
hlt
decl
daa
sub
add
rclb
lret
sti
incl
sbb
sbb
test
xchg
mov
in
mov
das
cmp
ss
cmp
sub
mov
or
cld
pop
or
mov
shll
ror
inc
sbb
or
pop
jnp
adc
xchg
or
aaa
lret
xchg
scas
adc
push
push
adc
fidivl
iret
xlat
mov
xorl
sub
cmc
dec
push
jg
add
or
mov
shr
push
mov
icebp
jg
lcall
dec
int
xchg
or
add
sub
xchg
push
stos
cmp
mov
jle
pop
jl
jl
xchg
test
mov
push
jae
mov
fdivr
aam
cmpb
jae
xchg
mov
pop
jns
or
fistpll
lcall
add
mov
xor
jne
mov
mov
jnp
push
fnstenv
push
dec
push
fld
stc
out
cmp
pop
cld
ljmp
ret
jmp
or
lret
lret
mov
addl
aas
add
cwtl
and
add
cmc
loope
inc
bound
stc
inc
lahf
mov
xor
jmp
imul
push
add
stc
mov
stos
pop
mov
mov
adc
aam
jp
push
add
loopne
clc
je
jo
pop
xchg
xchg
and
sti
push
inc
push
pop
pop
out
sbb
dec
sarl
ficompl
xor
bound
push
in
jbe
push
test
pop
outsl
popa
inc
pop
repnz
sahf
or
mov
and
scas
shlb
mov
xchg
repnz
mov
fistps
mov
push
pop
cmp
push
cmp
repnz
and
push
leave
sti
sbb
inc
pop
or
mov
adc
jns
inc
popf
add
imul
inc
orl
repz
daa
mov
inc
and
fidivl
pop
mov
and
stos
movsl
pushf
cmp
hlt
out
jmp
pushf
cltd
or
es
jl
or
inc
aaa
jne
mov
sbb
xchg
inc
aad
ss
outsl
ret
imul
or
cmp
pop
cltd
aam
mov
jle
pop
addb
ret
or
repnz
cmp
mov
push
adc
int
cmc
jmp
lods
xchg
pop
add
cmpsl
lock
mov
sbb
sbb
fldl2t
rcll
sub
dec
add
repz
mov
lret
vandnpd
cs
call
inc
outsl
or
insl
mov
push
sub
mov
dec
adc
adc
lock
lret
aas
xchg
mov
pop
test
lock
xchg
inc
jno
sbb
movsb
and
jl
in
aaa
arpl
lret
adc
fmul
les
mov
xchg
sti
and
dec
fldcw
les
push
in
cmp
inc
pop
dec
sahf
xor
mov
outsl
add
jl
sbb
xor
pop
sub
pop
mov
mov
stos
cmc
inc
jge,pt
push
lret
lds
ja
mov
push
sbb
dec
call
cwtl
jo
addr16
arpl
mov
outsb
andl
cmp
sbb
or
inc
out
les
dec
inc
xchg
cmp
xor
cmp
movsl
mov
mov
loop
mov
push
subb
or
hlt
and
cmp
test
lea
lahf
xor
or
mov
subb
sahf
push
jne
loop
fldt
cs
pusha
mov
mov
jae
inc
lock
mov
fidivl
test
dec
xor
sub
adc
sbb
and
push
outsl
mov
push
and
adc
mov
pop
ss
rcrl
adc
xlat
inc
pop
jp
fwait
sbb
popf
mov
in
mov
popa
jbe
jns
or
or
push
dec
adc
add
inc
push
cwtl
cmp
rorb
and
mov
push
xchg
sbb
ds
mov
aaa
jbe
iret
sahf
add
jecxz
mov
dec
or
or
popa
pop
shl
das
or
inc
aam
or
lock
test
fistpll
sbb
dec
dec
lods
ljmp
sahf
inc
das
mov
and
stos
mov
jge
xchg
xchg
jbe
stos
outsb
jo
cs
icebp
ja
mov
inc
dec
cmp
mov
les
jnp
mov
fidivrs
and
rolb
sub
sub
lret
data16
mov
pop
mov
mov
popl
pop
cmp
jb
xlat
sub
inc
dec
mov
adc
push
ret
adc
or
sbb
cmp
out
aaa
insl
mov
sub
ret
ds
gs
and
sbb
cmp
aas
xchg
negl
xchg
mov
insb
mov
add
repnz
push
push
mov
in
ret
push
push
mov
xlat
xor
aad
sub
add
sbb
mov
es
roll
shl
mov
pushf
xor
popa
sub
scas
and
xor
sub
clc
xchg
mov
lret
add
dec
and
in
rclb
hlt
jge
jle
scas
sti
outsb
mov
and
sbb
xor
call
es
cmp
push
loope
popf
fsubl
jl
outsl
pop
imul
icebp
pop
js
vmwrite
cmpb
hlt
aad
fwait
sub
add
fcomp
dec
adc
das
je
pop
fs
mov
mov
sub
mov
lcall
repnz
inc
push
pusha
loopne
sbb
push
push
cmp
pop
push
test
out
sbb
in
cli
aaa
push
xchg
add
push
test
cmp
negb
andb
jp
pop
and
pop
insl
stos
roll
leave
mov
jne
divb
clc
pop
push
shll
add
fwait
adc
movsb
testb
pop
scas
dec
adc
mov
stos
out
cli
outsl
cmpsl
test
gs
adc
into
outsb
xor
xor
xor
cwtl
pop
xlat
pop
jnp
pushf
inc
call
popf
add
rcrl
cmp
movsl
ja
repnz
dec
cmpsb
scas
pop
arpl
insl
outsb
hlt
aaa
fld
mov
bound
cmp
and
cmpsb
lods
pop
cwtl
les
push
test
jnp
sub
xor
xor
inc
cld
xchg
jmp
sub
mov
pop
dec
lds
pop
sarl
add
and
mov
mov
inc
adc
inc
mov
pop
add
xor
push
jg
sbb
and
shrb
divb
jg
xor
gs
xor
push
dec
das
in
popf
xchg
adc
shl
out
std
inc
dec
mov
and
arpl
enter
repz
rcrb
xor
sub
mov
xchg
test
sbb
ss
and
in
add
sub
shr
mov
aam
lods
iret
add
ja
cmp
xchg
gs
inc
jge
pushf
lea
jge
pop
test
push
sbb
sub
lret
push
jo
test
sub
xor
add
out
dec
jb
push
movsb
mov
aad
sbb
movsb
ret
orb
mov
out
push
std
push
dec
push
or
mov
fisubs
jge
cli
xor
mov
xorb
or
lret
sub
mov
mov
out
add
pop
sbb
and
fs
lret
ret
scas
adc
std
frstor
jl
pop
loope
add
xor
adc
push
pop
cmp
out
out
xor
jno
loopne
scas
cwtl
xchg
sub
push
mov
sahf
lret
sbb
inc
xchg
xlat
aam
cmp
xor
sti
xor
adcb
fcmovnb
push
hlt
add
adc
repz
test
sbb
std
lcall
xchg
or
sti
lret
xchg
and
cmpb
imulb
xlat
loope
or
inc
xchg
mov
cmpb
mov
in
push
loope
mov
dec
pop
incl
lock
loope
andps
divps
pop
in
pop
sbb
insl
mov
std
pushf
subb
push
aas
dec
in
jnp
push
popf
cli
sbb
repnz
dec
popa
xchg
dec
xchg
rcl
movsb
and
sar
int3
icebp
pop
pusha
mov
mov
sar
in
pusha
pop
lcall
ret
mov
fwait
test
clc
int3
cli
jb
fmuls
push
jo
inc
push
enter
in
popa
jle
push
sbb
mov
data16
xchg
test
sub
cld
stc
mov
and
daa
or
out
cmp
test
fsubrs
fmul
push
das
mov
push
push
lods
inc
adc
xchg
ja
pop
or
adcl
outsl
sar
xchg
ret
sbb
sub
stos
add
aam
xor
mov
sub
enter
shl
dec
push
clc
mov
adc
xchg
popf
jp
insl
out
scas
jge
mov
xchg
mov
fwait
insb
and
xchg
aas
ljmp
sbbl
adc
lds
or
mov
cmpsb
xchg
fs
xchg
mov
push
mov
jnp
cmp
out
cmpsl
cli
or
leave
inc
push
insl
mov
mov
sub
pusha
jns
jns
mov
mov
adc
rcrl
pop
pusha
push
test
imul
jae
adc
inc
in
enter
test
or
data16
cmp
push
dec
inc
lock
mov
cltd
pop
test
xlat
pop
imul
sbb
leave
push
flds
ja
mov
cltd
pop
test
xlat
pop
imul
sbb
leave
push
fimull
stc
psubw
pop
popf
scas
test
mulps
pusha
idivl
or
or
popa
ja
mov
mov
test
sub
nop
jle
xchg
js
dec
pop
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
aam
adc
and
xor
mov
andl
shll
icebp
aaa
icebp
mov
adc
inc
xchg
popa
cmpsl
jno
addl
andl
aaa
loope
icebp
outsl
sbb
sub
jns
imul
fs
pop
aam
mov
xorb
mov
icebp
mov
push
mov
insl
decl
sub
pop
in
xor
cmp
test
pop
scas
cmp
sub
mov
mov
mov
inc
pop
test
loope
mov
cmpb
pop
pop
push
mov
add
push
bound
inc
sar
pop
sbb
or
adc
and
add
xchg
push
roll
repz
cltd
dec
call
imul
sub
lret
fidivrs
imul
cmp
sub
ja
les
push
test
sub
sub
pop
icebp
mulb
sbb
push
pop
xchg
cld
addb
mov
mov
aaa
push
and
mov
xchg
push
divl
out
jae
call
js
push
add
or
xchg
mov
and
aas
ret
or
adc
adc
add
lods
imul
test
xor
xor
arpl
repnz
ja
pop
repnz
mov
mov
mov
inc
mov
les
cmpsl
jno
addl
pop
roll
aaa
loope
icebp
xlat
add
adc
and
xor
popa
cmpsl
jno
addl
pop
roll
aaa
loope
icebp
xlat
add
xor
jl
fnstcw
push
adc
into
dec
pop
fnstcw
and
outsl
and
mov
je
shr
sub
pop
mov
xor
shrl
andl
pop
cmp
lods
push
xchg
mov
shrb
out
daa
push
and
xchg
adc
lcall
pop
xor
sbb
mov
es
adc
fisubrs
cmp
inc
cmp
mov
sub
pop
cmpsl
adc
dec
xor
adc
insl
lds
cmc
repz
fists
mov
mov
popa
fiaddl
mov
std
sarb
les
sub
push
or
jae
pushl
repz
push
mov
push
insb
in
pop
and
ss
lea
add
lock
nop
xlat
cli
cmc
pushf
ss
xchg
mov
shl
fcoms
lcall
adc
mov
imul
aam
test
lcall
jbe
cmpb
mov
xchg
add
stos
inc
inc
push
xor
push
inc
dec
push
pop
ror
popa
xlat
mov
inc
xchg
in
inc
cmp
cmpsb
fadds
xchg
fldt
sahf
fdivs
add
icebp
nop
incl
mov
or
hlt
push
test
sub
nop
idivb
das
out
lcall
mov
outsb
push
sub
stos
fs
aam
lcall
out
fadd
mov
in
xor
and
push
inc
or
les
lods
jmp
es
test
pop
mov
push
inc
repz
fidivs
inc
daa
ds
mov
shlb
mov
mov
sbb
mov
ret
mov
jmp
insb
adc
xor
mov
stc
rcr
push
push
or
out
pop
mov
mov
in
sbb
in
mov
aam
call
mov
inc
fs
xchg
stc
dec
mov
cli
jae
rorb
mov
dec
xor
xchg
jae
shl
jmp
outsb
data16
dec
push
enter
push
jp
ja,pn
cld
outsb
in
xor
sahf
popf
aad
fistl
add
or
pop
inc
inc
sti
nop
insl
test
mov
xchg
pusha
push
sub
repz
fwait
fwait
cld
pop
nopl
scas
jbe
cltd
and
leave
ljmp
jno
mov
xchg
adc
push
cmp
scas
popf
inc
in
out
lods
and
dec
fistps
pusha
out
xor
call
inc
or
sbb
std
ljmp
repz
mov
cmp
cmpsb
cmp
mov
sbb
hlt
adc
dec
pusha
xor
cmp
mov
xchg
test
mov
inc
sbb
cld
into
divl
ds
mov
fstpl
enter
jbe
adc
jmp
fwait
outsb
lahf
cmp
fisttpl
xchg
mov
insb
call
add
xchg
mov
fcoml
push
sbb
lods
leave
and
movsl
mov
lret
xchg
bound
enter
push
push
enter
imul
xchg
int
xor
lods
jnp
push
adc
repz
inc
addr16
mov
jle
dec
pop
cwtl
mov
inc
mov
scas
call
movsb
xchg
insl
adc
jmp
loopne
repnz
mov
adc
orl
xchg
push
inc
or
sbb
push
jbe
cmc
stc
pop
das
test
faddl
inc
xchg
js
sbb
call
popl
mov
sbb
mov
sbb
arpl
sbb
adc
loopne
push
shlb
inc
xchg
pop
stos
xlat
mov
push
adc
stos
fcomi
mov
add
mov
mov
push
xchg
inc
dec
js
xor
scas
outsl
xchg
aaa
mov
xchg
push
jbe
add
in
jl
inc
mov
xorl
addr16
jecxz
mov
mov
fstpt
jge
push
xor
and
dec
outsl
push
jge
test
imul
jnp
xchg
sbb
add
pop
js
pop
inc
pop
jns
in
sub
jg
push
mov
mov
std
sarl
sbb
push
lods
lcall
push
inc
sub
jnp
lods
subb
gs
jns
dec
cmc
dec
scas
xor
and
xor
cmpsl
push
sub
insl
xchg
sbb
xor
dec
push
mov
pusha
lock
mov
push
data16
and
sbb
pop
sub
movb
push
cmc
fildl
ficompl
mov
aad
pop
adc
push
je
jns
push
loopne
ljmp
push
ss
aas
stos
sub
xchg
pop
mov
fistpll
fidivs
push
call
jne
test
push
jle
ljmp
jne
into
mov
pop
js
inc
jmp
xor
xchg
push
fildll
outsb
cmpb
enter
mov
std
push
or
add
loope
xor
pop
inc
mov
mov
xchg
orl
mov
xchg
test
out
mov
fmuls
adcl
xor
mov
mov
jecxz
mov
popa
and
jge
xchg
les
dec
scas
jo
adc
mov
pop
jecxz
add
mov
lea
lcall
and
add
push
dec
add
loop
push
jnp
adc
push
out
cmpsb
imul
mul
inc
rolb
mov
xor
pop
dec
scas
repz
sahf
and
repnz
inc
es
aas
adc
jbe
jo
push
lret
rol
jle
loope
mov
movsb
mov
fsubp
test
dec
dec
enter
mov
or
or
sahf
xchg
or
dec
xchg
inc
inc
data16
cli
sub
jle
jmp
sub
mov
jnp
xorl
mov
das
mov
incb
push
lahf
pop
lea
cmp
xchg
insb
sub
cwtl
int3
xchg
stos
jmp
jbe
js
and
sti
push
xchg
jbe
pop
and
scas
ja
fildll
fucomi
je
and
lds
jo
imul
xlat
pop
fisubl
inc
sbb
incb
in
cmp
xchg
repz
test
xchg
or
ss
flds
scas
scas
xor
inc
and
cmpsl
pop
out
cmp
mov
pop
mov
and
jo
shlb
js
out
les
jl
ficoms
add
jecxz
popa
sub
and
pop
push
aam
mov
xchg
sub
inc
xor
mov
sbb
scas
inc
or
int3
pop
aad
pop
gs
mov
loop
fistps
ret
xor
test
jae
aaa
das
dec
or
mov
mov
mov
xor
loop
push
stc
sbb
pop
repz
jecxz
inc
sbb
test
roll
out
mov
push
int
insl
xchg
out
iret
push
bound
popf
aad
sbb
nop
in
pushf
repnz
push
inc
mov
ret
add
lahf
pop
popa
cmc
pop
out
add
sbb
inc
sub
push
lock
loop
loopne,pn
pop
int3
push
int3
jo
mov
mov
orb
aad
or
mov
fwait
daa
fdivrl
mov
outsb
sti
fidivs
sub
adc
mov
xchg
lcall
push
dec
hlt
lods
mov
movsb
adc
jle
push
inc
mov
adc
rcrl
rclb
fs
pop
int
sub
sub
rcr
clc
repnz
mov
mov
sub
and
cmp
scas
stc
xor
inc
xchg
adc
insl
push
mov
dec
mov
jno
or
xchg
dec
and
mov
sarb
jb
pop
cmp
leave
cli
xchg
sub
lahf
mov
push
lods
imul
gs
xor
inc
xorl
jg
dec
jno
popa
test
sbb
jne
add
ret
icebp
inc
push
or
mov
mov
inc
or
or
data16
ds
arpl
adc
cwtl
lret
lret
inc
sub
sbb
leave
ret
dec
dec
lret
outsb
mov
xchg
aad
add
aaa
sbb
inc
lcall
push
ja
pop
mov
inc
dec
das
or
sbb
inc
stc
fbld
mov
in
ficomps
sahf
adc
roll
out
push
stos
icebp
std
je
xor
pop
das
mov
aam
loopne
popa
mov
idivl
jle
lcall
cld
xor
cli
fcmove
mov
dec
and
dec
jmp
cmpb
adc
pusha
sbb
imul
sub
int3
out
call
xlat
xor
mov
mov
mov
or
push
push
sti
xor
xchg
sbb
dec
repnz
bound
inc
jge
adc
loop
sub
lods
icebp
mov
adc
js
es
out
and
insb
mov
dec
xchg
mov
movsl
inc
xchg
jb
hlt
out
out
mov
sub
jecxz
pop
adc
or
fsubr
ds
loope
mov
in
mov
inc
adc
add
ret
xor
ja
xchg
scas
test
lods
mov
or
repnz
je
push
aam
xchg
sbbb
test
mov
mov
cmpsb
sub
pop
mov
xor
jne
out
pop
lahf
mov
repz
cs
cmp
jnp
adc
int
adc
pusha
call
out
stos
xor
sbb
jb
lock
push
xchg
adc
sbb
pop
mov
rcrb
repz
aaa
pusha
arpl
insb
out
out
leave
in
std
icebp
mov
pop
inc
push
sbbb
mov
sbb
out
inc
test
cli
arpl
mov
scas
push
std
and
push
je
sahf
inc
sub
lods
inc
scas
fmull
fimull
xlat
mov
into
and
dec
push
push
adc
es
sub
outsb
js
xlat
pop
xchg
lahf
div
scas
xor
or
mov
dec
cmc
adc
cld
or
xchg
cmc
xchg
sbb
pop
and
jg
mov
dec
xchg
pop
and
and
sti
xchg
popf
sub
popf
inc
sub
push
outsb
fcmove
sysexit
inc
jae
mov
or
push
jmp
pop
and
mov
hlt
repnz
mov
push
push
stos
push
xor
or
adc
adc
lods
shr
add
aaa
adc
mov
mov
xchg
push
inc
int
leave
xchg
cmpsl
add
es
fcmovnb
daa
dec
or
cs
aas
push
add
xchg
push
adc
shlb
xor
rclb
lds
push
and
fists
cmp
push
je
test
bound
mov
test
jbe
icebp
jl
ret
fldpi
jecxz
loope
xchg
mov
ret
std
test
cmc
mov
gs
es
idivl
jle
mov
loope
dec
cmp
lea
pop
subl
xor
dec
incb
xor
out
mov
add
mov
push
push
faddl
cmc
push
add
lahf
push
rcrb
les
add
aam
sub
push
lods
pop
or
mov
dec
and
test
cli
jae
insb
and
pop
addl
leave
push
and
sbb
sahf
or
cmc
aam
xor
pop
sti
lock
xor
inc
or
fdivl
fs
mov
push
in
stc
movsb
shr
inc
mov
in
add
ss
sarb
jge
movsb
adc
add
add
movsb
ljmp
shrd
arpl
inc
movsl
pop
in
mov
cmc
out
mov
mov
popa
mov
cmc
or
imul
inc
cmp
pop
mov
and
sub
enter
mov
xor
jae
mov
add
fwait
inc
scas
pop
push
sub
and
push
jno
movsb
push
ds
cmp
sub
insb
mov
xchg
popa
inc
jne
inc
imul
sub
sbb
xchg
mov
cmp
into
xchg
iret
add
cmc
and
push
sarl
xchg
push
xchg
pop
pop
adc
gs
and
inc
fcmovnbe
cmpsl
jg
sub
or
fs
lds
sub
pop
jmp
add
notb
testb
mov
fisubrl
inc
ljmp
mov
xchg
adc
mov
cmp
dec
cmp
rcrl
jo
mov
lret
jmp
pushf
pop
and
jmp
dec
loope
sub
pop
jle
pop
unpcklps
fnstsw
andl
out
and
mov
jno
repnz
aaa
sbbb
inc
adc
add
and
roll
cmpsl
jne
test
fcoms
jmp
jl
mov
into
js
lock
mov
push
leave
pop
and
inc
jnp
loopne
lods
inc
cmp
aam
jbe
inc
adc
adc
in
jmp
mov
enter
pop
xor
mov
out
lahf
push
and
jecxz
add
call
arpl
jns
mov
cmp
add
sbb
add
out
or
sar
add
lods
cwtl
push
pop
or
sbb
punpckhbw
es
add
fcmove
dec
sub
icebp
rcr
imul
jbe
leave
les
lods
jge
sahf
movsb
bound
imul
lahf
and
hlt
push
add
clc
or
inc
roll
adc
mov
push
cmp
or
lods
pop
test
in
leave
pop
orl
adc
jbe
mov
push
lcall
and
out
ret
add
cmpsb
push
xchg
and
xchg
or
in
sbb
in
pop
or
ds
cmp
lock
push
insl
nop
xchg
dec
inc
pop
push
fsubrs
jp
cmp
adc
xor
mov
shlb
xor
dec
add
sti
xchg
mov
mov
push
mov
inc
cld
and
and
xchg
lret
andl
sub
dec
imul
mov
fdivs
sbb
movl
mov
cmpsb
jecxz
pop
push
and
mov
arpl
or
add
je
or
sti
std
ljmp
mov
in
ljmp
cli
xchg
das
and
ljmp
sub
sbb
xor
fisubs
add
push
push
fldl
jns
cwtl
pusha
cld
xchg
cmpsl
test
xchg
cwtl
mov
lcall
mov
je
jl
in
fidivrs
dec
clc
pop
js
sub
dec
call
pop
xor
xchg
mov
pop
shll
aam
xor
lcall
inc
mov
add
cld
or
jno
or
fidivrs
icebp
and
mov
xor
sbb
jae
sbb
inc
lcall
sbb
jnp
je
dec
add
dec
xchg
test
loop
mov
push
and
inc
addr16
ds
sti
aas
fimull
sarl
cmp
xchg
push
jecxz
daa
ret
push
adc
xor
lods
jg
inc
or
mov
adc
clc
aaa
xor
xchg
data16
inc
and
mov
ja
add
mov
push
push
decl
lahf
in
pushf
sub
pop
movsl
xchg
fcoms
lods
jnp
add
bound
lret
xchg
das
push
loopne
push
insl
fdivp
daa
or
adc
jmp
adcb
mov
jl
mov
stos
fistps
dec
sbb
jg
lods
retw
add
sarl
mov
mov
insb
lret
mov
je
sbb
cmc
inc
cmp
add
insl
xor
xchg
pusha
lea
sub
scas
xchg
dec
or
or
jbe
xchg
imul
inc
cwtl
pushf
jae
outsl
mov
pop
dec
add
sti
subl
jl
cmp
push
rclb
mov
xchg
fmull
add
test
ds
std
imul
test
mov
or
pushf
hlt
inc
mov
in
xor
or
scas
in
arpl
push
lock
adc
mov
sub
andb
sbb
filds
xchg
fldl
faddl
add
repnz
mov
sahf
out
into
inc
push
movl
sub
jmp
out
int3
into
cmpsb
jo
femms
push
cmp
mov
adc
lods
or
dec
jge
and
mov
xor
mov
push
and
fbstp
test
lcall
inc
xor
outsl
test
out
sbb
mov
ss
mov
loop
ret
xchg
test
in
pop
dec
mov
push
mov
fcomps
testb
cmpsl
xchg
and
push
ret
repnz
idiv
and
pop
ds
dec
nop
mov
push
cmc
pop
push
outsb
push
les
push
cld
mov
iret
lock
push
push
ss
lret
mov
ja
stos
ficoml
ret
push
fisttpl
sti
pop
mov
mov
aad
inc
clc
insl
fidivrl
mov
dec
jge
int
aas
adc
xor
mov
mov
pop
and
sbb
mov
retw
jl
test
cmp
rcll
jmp
fdivl
lods
sub
add
jne
cmp
add
dec
subb
or
es
mov
sti
scas
leave
mov
jnp
rclb
and
cmp
arpl
add
xchg
scas
pushf
stos
push
push
fstpl
lds
rorb
dec
add
and
outsl
jl
mov
adc
mov
mov
and
into
dec
movsl
fimuls
andl
inc
movsl
dec
xchg
dec
mov
das
and
mov
outsb
outsl
fadd
popl
pop
sub
cmp
cwtl
jae
xchg
push
andl
ljmp
daa
jnp
dec
sub
lods
xchg
cmpsl
xchg
icebp
dec
rcrb
adc
inc
sub
mov
add
out
out
test
jae
sbb
xchg
jne
mov
subb
mov
popf
add
sub
shll
xchg
adc
inc
cli
js
aaa
jo
lcall
adc
and
push
or
push
dec
test
mov
xor
pop
test
ret
xor
inc
testl
and
mov
clc
jp
js
shll
push
sarb
jmp
popl
adc
out
fwait
push
ret
int3
xchg
and
idivb
pop
mov
jle
and
pcmpeqw
nop
add
dec
mov
test
xchg
pop
sub
push
cmpsl
xchg
lods
cwtl
das
jecxz
loop
jp
lock
add
test
or
outsb
das
mov
jmp
dec
out
pop
mov
inc
jmp
mov
cmp
cmp
inc
ret
push
pop
sub
mov
out
addr16
adc
sbb
lods
or
dec
sbb
adc
sub
xor
or
clc
out
push
out
loop
push
cmp
xor
in
cwtl
imul
loope
jge
sub
pop
xor
in
jnp
mov
outsl
or
pop
xchg
mov
fucomi
pop
sub
adc
je
in
fisttpl
pop
push
and
mov
mov
mov
mov
cmpsb
fs
adc
dec
dec
add
mov
cmp
mov
test
adc
jae
push
mov
xchg
aam
pop
sbb
mov
dec
mov
jno
cmp
rclb
inc
mov
push
adc
mov
mov
adcl
mov
jbe
or
mov
pushf
and
nop
sbb
test
xor
mov
fstl
test
sbb
dec
icebp
dec
push
xchg
outsl
jmp
std
cmp
imul
mov
push
hlt
sbb
jno
outsb
daa
jno
std
fsubl
xchg
xchg
xchg
or
jno
cld
pop
push
aas
mov
scas
push
xchg
xchg
movsl
mov
pop
sub
je
xchg
fstpt
xchg
and
sbb
shlb
pop
add
sbb
mov
stc
leave
inc
cmp
add
jo
add
xchg
sub
popa
sbb
add
adc
movsl
jnp
scas
xorl
idiv
scas
cmp
xlat
mov
das
push
or
leave
in
loopne
insb
fs
mov
fisttps
or
lcall
add
mov
test
push
ljmp
xor
call
sbb
xchg
inc
add
push
pop
sub
add
fadds
and
pop
mov
sbb
jns
cld
push
arpl
lar
fiadds
jnp
frstor
push
lea
imul
and
pushf
pop
rolb
jbe
movsb
shlb
loopne
lods
in
cli
and
fsubl
adc
xor
xlat
dec
xchg
sbb
into
mov
xorb
pop
fiaddl
out
add
out
adc
inc
xchg
popa
cmpsl
jno
addl
pop
roll
aaa
loope
icebp
xlat
add
adc
and
xor
popa
cmpsl
jno
addl
pop
roll
aaa
loope
icebp
xlat
add
adc
inc
xchg
popa
addr16
addl
pop
rcll
aaa
loopne
icebp
ret
add
xor
popa
daa
jno
cmpl
cs
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
addr16
lret
xlat
sti
jmp
lcall
ja
addr16
push
jnp
imul
or
sub
sub
lret
sti
jmp
fwait
cmpsl
mov
pop
addr16
ss
imul
daa
or
cmp
sub
lret
xlat
sti
jmp
fwait
cmpsl
mov
pop
addr16
push
pop
dec
push
aaa
pop
push
mov
cmp
xchg
mov
neg
fs
and
and
xchg
mov
inc
les
mov
mov
and
dec
cwtl
mov
test
jle
or
push
pop
cmp
jb
out
fsubrs
cmpsb
sub
sub
push
add
xchg
mov
out
xchg
mov
out
push
out
imul
sub
ja
xchg
cmpsl
mov
out
xlat
or
dec
or
xor
add
out
adc
stos
pop
movsb
adc
test
fs
dec
sbb
and
pop
inc
inc
jecxz
aam
add
inc
and
push
lret
or
pop
push
cmp
aam
lret
xlat
sti
jmp
fwait
cmpsl
mov
pop
addr16
push
jnp
imul
daa
or
cmp
insl
sbb
mov
mov
ret
fsubp
fistps
sub
push
cmp
and
inc
outsl
imul
dec
test
movsb
cmpsl
mov
fadd
into
xchg
in
incl
das
sbb
cmp
popf
inc
pop
sbb
lcall
imulb
xchg
push
jnp
imul
daa
or
cmp
sub
lret
xlat
sti
jmp
fwait
cmpsl
mov
pop
addr16
push
jnp
imul
daa
or
cmp
sub
fnclex
jecxz
xchg
xchg
sub
outsb
test
xchg
int
out
lods
pop
rclb
idivl
or
xchg
scas
imul
or
jns
lret
sub
and
mov
mov
in
outsl
push
hlt
pushl
cwtl
mov
repz
xchg
bound
call
das
pop
lods
sbb
or
in
push
lds
or
push
ror
push
lea
popf
push
inc
jl
mov
mov
pop
mov
mov
andb
and
negl
and
popf
fs
push
adc
cmp
ds
stc
fistps
mov
mov
xchg
sbb
xchg
xlat
mov
mov
das
test
sbb
pop
jmp
inc
push
sub
mov
rolb
mov
mov
adc
lcall
hlt
sbb
mov
scas
daa
inc
mov
int3
inc
push
xor
inc
mov
xor
insl
rorb
sarb
enter
mov
xchg
xchg
cmp
insl
shll
rcll
je
xchg
dec
jb
jp
push
icebp
inc
xchg
mov
cmp
outsl
xor
xor
xor
stos
lea
jl
sub
mov
sbb
dec
push
std
jmp
repnz
stc
or
add
and
xor
inc
jp
jecxz
les
arpl
popf
jns
test
xchg
scas
test
movsb
iret
sbb
mov
addb
xchg
ds
scas
jmp
das
fildll
inc
pop
imul
aas
insl
cld
mov
sub
sub
push
adc
popf
add
ja
filds
xchg
fldl
jecxz
lock
arpl
jmp
xor
push
pushf
or
xchg
jp
add
nop
mov
jbe
cmp
sbbl
lahf
in
inc
js
ficoms
lret
stc
jb
dec
aam
shr
push
jmp
pop
mov
aad
jo
dec
sbb
push
adc
jbe
mov
aad
aam
dec
mov
filds
mov
or
outsb
inc
xlat
jns
adc
dec
xor
popa
dec
enter
jnp
cmpsl
leave
mov
stos
mov
fucompp
daa
insl
mov
leave
mov
cmpsb
nop
jae
std
aas
add
adc
fisttps
fcoms
mov
mov
imul
push
dec
insb
dec
or
sbb
inc
popf
cmpsb
sbb
arpl
out
xor
lods
mov
cltd
jmp
mov
testl
add
mov
insb
xchg
mov
jo
mov
and
xchg
push
cwtl
enter
mov
mov
test
andb
pop
repz
mov
cs
es
sbb
xorb
xor
push
dec
mov
bound
dec
inc
gs
pop
jne
inc
leave
mov
cmp
adc
dec
inc
test
and
sub
out
cld
cs
or
loope
lds
cmp
insl
xor
push
pop
insb
pop
out
mov
dec
arpl
jle
jbe
cmp
std
not
mov
fistpll
inc
or
push
cmp
or
sub
and
in
loopne
stos
sbb
xchg
xor
add
fdivl
cmc
inc
outsl
dec
jmp
push
or
scas
aam
push
loope
ret
int
and
pop
pop
cwtl
inc
arpl
fnsave
cmp
xchg
lret
jnp
dec
sbb
adc
enter
xchg
adc
mov
test
inc
out
jmp
adc
adc
mov
subl
in
and
or
mov
mov
inc
mov
lcall
mov
fdivl
jne
push
cltd
xor
sbb
repnz
mov
enter
push
push
pop
pop
outsb
mov
inc
cmpsl
gs
push
mov
inc
mov
jmp
pop
fldt
and
imul
hlt
in
fwait
cmpb
aam
add
in
pop
mov
insl
add
xchg
cmp
push
test
insl
out
add
cmp
aad
pop
fwait
clc
xor
push
decb
xor
add
in
lcall
xchg
xacquire
adc
cmp
push
inc
dec
sbb
fisubl
roll
sbb
dec
cmpsl
pop
jge
popa
and
xor
pop
lahf
inc
insl
decl
js
mov
insl
cli
push
repz
add
out
in
jl
mov
ja
mov
jmp
loop
inc
nop
imul
flds
gs
ret
adcb
jnp
cmc
mov
ss
add
int3
xchg
cmp
test
lock
clc
popa
xor
pusha
ljmp
ljmp
lahf
add
cmp
sub
pop
pop
xchg
adc
loop
pop
arpl
in
pop
add
jno
adc
fwait
add
push
cltd
subl
idivb
mov
lods
and
and
imul
cmp
adc
cmp
mov
pop
pusha
inc
pop
fprem
lea
fimuls
fisubs
pushf
cs
pop
out
sarb
fcomps
popf
or
pop
ret
jns
pop
imulb
adc
push
cmp
outsb
and
es
stos
aas
addr16
or
mov
dec
std
outsl
out
in
dec
rcrl
sub
lcall
cmpsl
sbb
cmp
mov
push
into
gs
in
sub
pop
lods
inc
iret
cmp
shll
adc
pop
mov
inc
call
jp
cld
test
fdivrp
and
mov
mov
xor
aaa
movsl
addr16
arpl
fstpt
sbb
mov
or
push
cltd
mov
ljmp
jge
push
pop
xchg
cmpsl
pop
in
jmp
out
jge
scas
int
rcrl
sbb
pop
and
cmc
data16
addb
out
pop
adc
mov
cmp
pop
pusha
mov
jl
add
lret
and
or
sbb
in
jbe
add
outsw
imul
xchg
pusha
pop
outsb
cmp
xchg
in
xchg
outsb
es
movsb
add
std
adc
mov
sbb
jl
sbb
mov
iret
xchg
addb
xchg
outsl
mov
mov
push
loope
ljmp
adc
xchg
cld
js
clc
mov
iretw
pop
call
cld
stos
add
rcl
ja
jle
mov
lock
jmp
push
jmp
mov
leave
aad
test
mov
jno
sub
in
push
cmp
mov
lock
test
xor
fmuls
and
mov
mov
lret
jge
xchg
xor
add
call
pop
fucom
xchg
aam
sub
mov
cmp
les
fldenv
mov
out
int3
inc
pop
leave
lea
mov
aas
adcl
fstpl
dec
pop
cmp
pop
fsubr
mov
push
jmp
pop
mov
cmc
mov
aas
inc
or
xor
cmovb
lahf
jl
repz
pop
mov
dec
pop
adc
scas
push
sbb
aaa
dec
mov
repnz
push
adc
dec
inc
shlb
dec
addr16
inc
leave
xchg
int3
jb
in
xorb
inc
jmp
mov
clc
push
xchg
mov
addb
dec
out
and
pushf
loopne
arpl
mov
xchg
jl
je
out
lahf
jge
xchg
mov
fildll
hlt
mov
add
js
add
cmp
std
fildl
mov
and
mov
xor
lock
xchg
insl
push
and
je
pop
cmp
push
lret
mov
ja
xlat
mulb
xor
push
lods
inc
sub
inc
mov
xorb
push
jb
and
lret
scas
jle
pusha
and
or
push
mov
les
ficompl
mov
cmp
inc
and
mov
js
sub
jo
imul
test
fs
sbb
out
fsubs
cwtl
push
insl
cmpsb
push
jb
xchg
unpcklps
jl
outsl
popf
es
jecxz
jmp
cmp
das
xchg
outsl
in
stos
data16
daa
hlt
fcomip
aam
cmp
sti
fimull
push
jbe
cmp
js
mov
hlt
stos
outsl
mov
jno
inc
sarl
aaa
pop
push
dec
xor
imul
mov
lods
push
mov
cmp
and
xchg
pop
adc
rcrl
xchg
ficoml
jge
cwtl
jle
mov
add
lock
out
or
mov
enter
or
lods
pop
test
and
js
lcall
mov
ret
mov
ss
iret
je
xchg
dec
dec
les
imul
and
lea
out
sub
sbb
add
cmp
jmp
sbb
pop
adc
xlat
mov
xchg
loopne
push
ljmp
jne
dec
mov
outsb
aad
jle
andb
pop
lods
and
es
sbb
mov
stos
dec
js
inc
push
or
push
shlb
loop
sbb
sub
jb
add
add
pop
cmc
xchg
xchg
dec
add
cwtl
movsb
and
cld
or
lret
dec
insl
add
xor
lret
scas
mov
sbb
jp
mov
lret
lret
daa
cwtl
cmpsl
push
lret
mov
in
add
cmpsl
clc
insl
inc
test
and
adc
lea
imul
sub
insl
int
movsb
js
pop
imul
pop
std
inc
push
leave
jp
fwait
ljmp
sbb
icebp
adc
and
movb
pop
mov
sub
push
jmp
push
pop
inc
dec
or
movsb
insl
mov
data16
rclb
ret
and
jns
xor
inc
test
push
cli
and
arpl
iret
dec
cltd
xor
popf
fstpt
cmpl
scas
jne
in
les
cmp
or
adc
cwtl
mov
imul
addr16
pop
outsl
push
arpl
test
mov
mov
mov
jg
cmp
xor
sub
pop
lahf
sub
xor
iret
xchg
outsl
iret
nop
je
dec
pop
popa
lret
nop
mov
mov
add
testl
nop
sbb
test
ret
or
out
xchg
xchg
test
ja
popa
std
mov
repnz
sub
dec
add
adc
cmp
mov
cwtl
addl
inc
inc
jg
decl
aaa
xchg
orb
test
imul
push
add
cwtl
mov
mov
loopne
cmpsb
sbb
add
sbb
stos
mov
add
xchg
sbb
das
or
aad
scas
mov
decl
add
push
mov
hlt
jp
mov
cmp
ds
adc
scas
ret
fadds
cltd
or
dec
sahf
call
mov
in
mov
iret
fbstp
mov
in
fsub
dec
jns
push
sti
cmpsl
clc
sbb
jge
fwait
cmp
ret
andl
jp
dec
test
sub
push
mov
adc
jmp
dec
mov
popa
dec
mov
xor
add
xchg
loop
cmp
ds
lds
out
mov
inc
movsl
call
xor
cld
pop
pop
int
jne
into
pop
cmp
cmpsl
hlt
push
adc
into
mov
mov
cwtl
mov
fucomp
pop
or
push
push
stos
push
dec
in
adc
arpl
fildl
mov
dec
pop
outsl
sub
mov
sub
and
adc
test
cmp
nop
adc
sub
mov
add
test
jg
and
outsl
mov
dec
cmpsl
popf
imul
pushf
pop
adc
sub
inc
mov
ret
in
fadd
dec
aad
clc
fidivrs
pop
insb
sarl
jb
and
cmp
je
mov
sarb
and
fidivrl
mov
jmp
or
xchg
inc
mov
test
jmp
mov
push
add
xchg
fidivrs
xor
lret
push
sub
dec
or
mov
or
or
push
pop
popa
jle
dec
test
clc
aas
cmpsb
or
loop
jl
sbb
jo
sahf
loopne
test
daa
or
mov
push
mov
sub
xor
ljmp
jg
push
dec
int3
lds
push
lret
stc
outsl
add
data16
xor
ds
outsl
nop
out
mov
jne,pt
inc
push
and
or
mov
test
fbld
and
jb
insb
sti
icebp
cwtl
jno
les
movsb
add
icebp
arpl
and
mov
imul
lods
and
cmp
mov
push
shl
pushf
addr16
xlat
es
cmp
fdivl
sbb
dec
cmp
cmp
shl
fidivrl
imul
inc
sub
push
add
jmp
mov
std
pop
xchg
inc
xor
xor
arpl
nop
je
inc
loope
pushf
imul
jl
aaa
xchg
push
dec
cmpb
je
fidivrl
loopne
add
sbb
xchg
mul
call
lods
sub
stc
popf
xor
cmc
stos
dec
jl
rol
ret
inc
arpl
scas
test
divl
mov
pop
decb
xchg
xor
and
lock
out
or
cltd
xor
fimull
in
lahf
xchg
xor
ret
mov
push
in
inc
cmpsl
cltd
mov
pop
dec
repz
outsb
shrl
lret
outsb
out
push
cmpsl
cmp
bound
fcomps
dec
sub
aam
push
xchg
insb
movsb
stc
sarl
mov
stos
jnp
jp
sub
lock
mov
jmp
cmp
out
cwtl
pop
pop
jmp
outsl
test
jns
push
ficoms
lods
and
add
fcoml
sub
xor
out
sbb
sarl
nop
inc
je
cltd
loope
and
or
fbld
and
outsl
add
inc
pop
mov
cmp
xchg
mov
je
mov
pushf
xchg
xchg
or
sbb
call
xor
add
add
sbb
dec
dec
or
pushf
jno
rcrb
sub
dec
lods
xor
and
shrl
and
imul
mov
lock
hlt
adc
es
mov
fcmove
idivb
cmpl
add
les
mov
fisubrl
sbb
xchg
pop
add
and
in
cli
lods
xchg
inc
scas
shl
pop
push
xor
adc
pop
rol
xor
aaa
dec
nop
test
das
add
push
lock
rcll
xlat
dec
loop
or
push
js
cmp
mov
sub
inc
insl
sub
aam
arpl
jb
or
fstpt
stc
or
dec
cmpb
sbb
or
popf
or
out
mov
xlat
lahf
in
ja
lods
or
pop
mov
aaa
xor
test
cmpsb
dec
and
add
imul
jl
test
int3
mov
push
pop
ret
mov
mov
mov
xchg
push
shlb
xchg
leave
and
mov
loope
push
adc
mov
xchg
jmp
mov
push
cmp
cltd
jecxz
push
adc
pop
push
add
rorb
iret
lds
out
or
inc
stos
or
ljmp
mov
add
add
fxch
ja
dec
add
lods
loopne
mov
xor
mov
in
jl
fisttpl
lods
jge
call
sub
dec
iret
push
pushf
out
pop
sbb
jne
ds
and
sbb
imul
and
xlat
adc
leave
xor
aaa
mov
xchg
sub
push
dec
leave
cltd
inc
xor
xchg
outsb
jge
rclb
cmc
push
xor
in
and
stos
push
test
ret
xchg
call
aad
sbb
ljmp
lods
sbb
jnp
pushf
cmpsl
sbb
negb
enter
dec
sti
mov
xchg
pushf
dec
jg
adc
xchg
dec
cmpsl
lods
jnp
xlat
imul
addl
inc
cmp
lds
push
add
cld
cwtl
adc
loope
iret
call
int3
and
mov
popf
add
push
scas
je
lret
sub
xchg
out
rorl
add
jns
or
andb
pop
inc
adc
jle
mov
insb
xor
aaa
cmpsl
in
inc
loop
sbb
ficompl
lret
cli
rorb
mov
in
cltd
lods
xchg
pop
inc
dec
cwtl
out
aam
pop
jb
mov
shrl
mov
mov
push
cs
in
cmpsl
sub
push
cmp
push
loop
loopne
loope
or
jo
jae
add
cmp
int
int
and
cmpb
into
frstor
cmp
ljmp
loope
aaa
sub
loop
push
sbb
repnz
into
sub
stc
add
mov
jge
jo
popa
lret
mov
mov
cwtl
popa
pop
cmp
mov
push
xchg
lahf
es
jge
xor
mov
sarb
icebp
mov
and
add
sub
sub
hlt
incb
add
mov
in
or
push
jle
popl
inc
add
sub
nop
jns
jno
or
inc
dec
or
nop
adc
dec
fistpll
fs
push
divb
dec
sar
inc
pop
fwait
lret
jl
in
mov
jmp
push
in
in
jp
jne
stc
fisubrl
dec
dec
fs
and
sbb
pop
in
cmc
push
in
push
mov
push
mov
adc
jo
fmuls
mov
mov
lahf
sti
dec
or
rolb
sbb
daa
mov
scas
or
jge
out
adc
dec
mov
add
add
out
out
push
add
mov
and
or
and
mov
stos
jbe
jne
inc
in
fcoms
les
das
pop
mov
push
sbb
stos
lods
movsl
mov
into
ret
into
mov
in
mov
mov
xchg
pop
mov
popf
xchg
int3
add
fs
out
cmp
mov
or
inc
and
repz
sub
ret
xorb
add
fnsave
ljmp
mov
cltd
sbb
jl
jl
xchg
pusha
mov
and
push
loopne
mov
ljmp
leave
pop
test
add
push
test
faddl
pop
add
jg
cltd
pop
cli
xor
mov
mov
enter
hlt
shlb
pinsrw
push
pop
repnz
mov
sahf
or
out
stos
shl
inc
int
xor
pop
add
pop
jp
ficompl
and
movsb
mov
pop
hlt
fnstcw
das
mov
fcompl
mov
adc
movsl
ljmp
mov
fisubrs
jnp
xchg
pop
mov
inc
pop
cmpb
shlb
inc
mov
setle
cs
out
mov
cli
pop
mov
popf
and
imul
clc
cmp
cmp
sbb
xor
loope
in
pop
std
cli
pop
cmp
adc
enter
data16
fimuls
fstp
int3
add
inc
aaa
push
iret
and
or
nop
mov
adc
adc
xchg
mov
jbe
sub
xchg
scas
mov
sar
test
rorb
lret
fcom
repnz
out
dec
lret
ljmp
add
inc
sub
das
or
aam
insl
cmp
out
into
jno
mov
xor
xchg
loop
sub
lret
fiadds
or
cmp
mov
adc
nop
daa
mov
inc
cmpsl
cmp
ss
push
shl
outsl
fiaddl
sub
xchg
xchg
jo
push
addr16
rorl
push
imul
jne
outsb
mov
inc
push
in
cmpsb
jl
mov
push
and
into
lods
jns
orb
pop
mov
dec
dec
jb
stc
add
lret
icebp
ja
stos
js
add
mov
das
rorb
shrb
repnz
les
nop
sbb
cwtl
lret
and
aaa
cmp
das
mov
sbb
fists
in
add
lea
out
cld
adc
test
test
pop
sbb
in
mov
ss
das
or
lods
adc
notb
pop
stos
smsw
jp
pop
or
push
icebp
cmp
neg
mov
cmp
mov
dec
loop
loop
fidivrl
insb
cmp
ljmp
hlt
mov
pop
addb
jns
mov
jle
jnp
ljmp
addr16
or
flds
inc
push
mov
mov
fs
inc
dec
and
mov
lods
cltd
vrcpps
jmp
fwait
cmpsl
mov
pop
addr16
push
jnp
imul
daa
or
cmp
sub
lret
xlat
sti
jmp
fwait
cmpsl
mov
pop
addr16
push
jnp
imul
daa
or
cmp
sub
lret
xlat
sti
jmp
fwait
cmpsl
mov
pop
addr16
push
jnp
imul
daa
or
cmp
sub
lret
sti
jmp
fwait
cmpsl
mov
pop
loopew
jnp
sbb
xchg
scas
hlt
call
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
