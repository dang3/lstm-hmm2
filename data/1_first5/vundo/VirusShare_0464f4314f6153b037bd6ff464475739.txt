jmp
or
jg
in
push
aas
lcall
jg
dec
xchg
lret
sarl
in
repnz
jp
adc
loope
xchg
daa
in
aaa
jae
adc
pop
setbe
jns
mov
pop
pop
jl
outsb
hlt
daa
mov
aas
pop
mov
sbb
xchg
and
xchg
test
cli
data16
sub
cmc
jnp
xchg
inc
or
pop
jno
sub
mov
repnz
xchg
ret
in
fwait
mov
addr16
jne
sub
mov
xor
frstpm(287
xchg
push
aas
sbb
mov
ljmp
rorb
jmp
fldt
mov
sub
dec
mov
ljmp
mov
jnp
cmp
sub
mov
mov
test
imul
les
enter
mov
das
xchg
call
inc
aam
mov
rorl
test
sub
pop
and
xchg
je
aam
loope
jne
push
inc
ljmp
fists
hlt
enter
ret
testb
cmp
or
aaa
outsb
xor
push
and
pop
or
test
xchg
and
das
lock
push
call
jg
inc
adc
jbe
mov
cld
jno
inc
sub
leave
in
jg
jg
sub
sub
mov
loopne
pop
sbb
mov
fisttps
push
push
mov
loope
movsb
adc
jl
sbb
in
pop
push
pop
dec
xchg
add
cmpsb
loop
mov
adc
insl
sub
xor
pop
imul
pop
push
imul
pop
dec
push
push
les
xor
loopne
cltd
xchg
cmp
jno
jmp
or
scas
imul
int3
and
ffreep
and
inc
lock
cmpsl
ljmp
in
std
scas
xor
icebp
adc
jge
pop
lods
sti
cld
loope
jae
test
sti
mov
inc
cmp
xlat
cmp
or
adc
test
movsb
cmpsl
and
and
iret
lock
adc
rcl
xchg
xchg
loope
xchg
test
hlt
mov
inc
pop
pushf
mov
jns
aaa
push
inc
inc
and
aaa
pop
call
fildl
dec
mov
hlt
push
mov
es
sbb
insb
hlt
or
imul
xchg
push
inc
cltd
lret
loop
sbb
jb
cwtl
cmp
in
mov
fwait
into
xor
pop
aaa
mov
and
cwtl
into
push
mov
int
repnz
push
addr16
cmpsb
mov
adc
gs
xchg
fwait
mov
xor
outsl
push
sbb
cmp
aad
adc
dec
xchg
ljmp
nop
out
jo
in
ret
push
inc
enter
out
mov
rclb
imulb
pop
aas
xchg
jae
xor
push
jbe
xor
in
es
cmp
and
pop
testb
jne
pop
insb
push
xchg
dec
imul
cltd
xchg
ljmp
ja
scas
ret
xlat
and
or
mov
jle
hlt
mov
inc
xchg
ss
dec
pop
xor
dec
pop
filds
mov
outsl
popf
cmpl
sub
mov
aas
js
mov
xchg
dec
adc
xchg
stos
dec
mov
add
fisttpll
xchg
xchg
pusha
rcrb
cmp
cmp
cmp
loopne
ret
loope
and
xor
popa
test
flds
jle
inc
out
xchg
push
pop
stos
sub
std
xchg
or
in
jo
dec
jg
jo
scas
cwtl
xor
mov
faddl
cmpsl
or
fwait
ljmp
pop
mov
scas
and
dec
mov
shlb
lods
aaa
jb
jp
push
js
daa
insb
xchg
mov
js
push
jne
mov
jge
jb
popa
xchg
inc
push
and
jmp
mov
scas
roll
push
xor
lcall
push
leave
roll
push
sub
inc
pop
xchg
xchg
ret
fsubrs
aam
movsb
icebp
mov
dec
dec
cmp
cltd
cmp
pop
xchg
pop
and
jnp
mov
cmp
pop
inc
sub
lds
sbb
imul
pop
pop
jne
fcoml
mov
cmp
sub
scas
cmpsb
push
jg
push
pop
fiadds
addb
jns
ret
lea
lock
shll
inc
inc
fistpll
cmp
loope
xchg
inc
jle
pop
and
inc
push
xlat
mov
cmpsl
push
mov
in
adc
shl
jnp
xor
push
call
or
add
sub
inc
repz
lock
or
outsl
mov
dec
push
mov
lods
push
enter
out
or
push
ss
cmp
mulb
push
scas
push
jg
dec
mov
insl
pop
movsl
and
mov
rolb
mov
add
aam
sub
loop
jge
ror
sub
mov
sbb
and
mov
xchg
sbb
gs
das
pop
or
sub
rep
das
daa
icebp
xchg
sub
adc
je
in
dec
addr16
stc
stc
dec
xchg
outsb
mov
scas
std
movsl
lods
mov
sub
fsubrp
push
inc
int
dec
and
call
add
sub
out
add
test
bound
dec
gs
in
in
jb
inc
cwtl
pop
roll
cmc
gs
scas
outsl
xchg
and
and
stos
cmp
jnp
mov
mov
leave
mov
mov
dec
push
hlt
loop
adc
loope
add
mov
sub
mov
lods
loop
in
es
inc
jle
adc
cwtl
hlt
adc
out
jle
and
cmp
add
lock
dec
lods
xchg
xlat
sbb
gs
mulb
sub
pop
stc
cwtl
xchg
pushf
push
fwait
push
int3
cmp
scas
inc
movsb
pop
and
fdivrs
gs
sbb
push
jae
or
push
inc
mov
jge
and
xor
or
sbb
or
cmp
mov
mov
fwait
imul
or
fwait
insb
call
jge
or
dec
paddb
or
aaa
xor
sub
pushf
pop
add
inc
rcrb
movsl
mov
inc
popa
lea
jge
add
aaa
lahf
int3
or
and
and
add
cmp
out
fists
adc
sub
cmp
stos
ret
sub
out
and
fstsw
sbb
mov
arpl
mov
fxch
push
fidivl
popa
aas
js
sub
xlat
je
add
jmp
lods
cmp
xchg
inc
xchg
lahf
popf
stc
loope
or
cwtl
das
mov
push
and
mov
fnstsw
jmp
imul
jg
stos
cmp
out
add
shrl
mov
xchg
xor
adc
adc
andb
fbstp
cmp
mov
dec
sub
arpl
in
ret
and
popf
imul
sub
xor
dec
adc
scas
out
cmp
aas
cmovnp
xchg
adc
or
hlt
std
cwtl
ret
pop
adc
pop
insb
push
push
call
scas
aam
pushf
cltd
inc
cmpsb
inc
mov
xor
pushf
in
in
dec
dec
test
pop
jg
fmull
fisttpl
popf
mov
add
pop
inc
jno
dec
mov
adc
cld
jne
icebp
xchg
cltd
sub
xchg
add
lods
add
or
sub
imul
into
out
mov
jb
sbb
repnz
loop
xlat
rorl
inc
leave
jno
mov
and
dec
xor
mov
sbb
sub
lods
ficompl
sub
jg
sub
popf
sahf
cmc
jmp
mov
fwait
xchg
or
sahf
icebp
mov
lcall
fcmovnbe
mov
mov
lea
cmpsl
sbb
dec
pop
in
push
sub
mov
push
in
sub
ds
xor
movsl
push
mov
adc
insb
inc
mov
mov
push
lret
cmpsb
mov
jle
mov
repnz
cmpsb
movsb
xlat
inc
in
or
or
mov
loop
adc
push
or
fistl
outsb
dec
dec
into
mov
test
fmull
sahf
xor
aaa
xchg
movb
movsb
aad
cmc
jmp
pop
cmp
addr16
js
sbbl
rorb
lock
dec
inc
cmpsl
xchg
jo
jl
incl
in
jmp
insl
testb
mov
into
call
sbb
inc
mov
push
in
stc
cmp
je
inc
xor
and
stos
loop
xor
aad
or
xchg
inc
repnz
roll
lods
jmp
loope
sub
inc
call
xchg
dec
out
nop
stc
xor
mov
adc
pop
jnp
out
dec
jl
xchg
xor
es
test
pop
rol
ja
leave
inc
lock
sub
jae
cmpsl
fldcw
dec
pop
lcall
fstpl
xlat
jecxz
enter
js
mov
push
test
xor
and
xchg
outsb
mov
inc
movsb
inc
int3
in
aas
pushf
out
cli
je
ror
jge
loop
cwtl
pop
sbb
lds
adc
add
shl
mov
test
mov
ss
aaa
out
pop
rolb
cmp
mov
fidivl
outsb
mov
xchg
pop
das
mov
adc
jne
jecxz
in
and
jle
cmp
scas
aas
xlat
adcb
mov
lock
js
aam
xchg
popf
pusha
movsl
data16
ffreep
and
xchg
pusha
sbb
dec
and
ret
lret
pusha
das
loop
icebp
jg
mov
cld
je
jle
fildll
pop
imul
imul
mov
data16
mov
pop
jns
stos
ret
sti
and
inc
test
or
sbb
loope
cmpsl
cmpsl
test
pushf
jge
mov
lods
rorb
push
es
sbb
add
imul
cwtl
xchg
movsb
adc
inc
sbb
mov
cmp
pop
adc
or
push
and
in
add
adc
fildl
ja
popa
and
rorb
sub
arpl
das
mov
in
ljmp
dec
outsl
xchg
pop
inc
imul
daa
sbb
ds
xchg
inc
outsb
outsb
repz
aaa
shlb
xchg
fcmovnu
imul
mov
xchg
imul
imul
inc
cmp
or
bnd
nop
xchg
les
hlt
push
jo
dec
or
clc
ret
in
mov
rorl
inc
jns
loop
es
xchg
lock
or
scas
push
mov
lret
or
aad
mov
mov
xchg
add
nop
std
sub
jne
sahf
and
xchg
sbb
es
cmp
push
popf
add
dec
push
inc
pop
xchg
add
or
add
scas
cwtl
jae
scas
les
cmp
xchg
inc
out
stc
addr16
add
push
ror
add
enter
xchg
lahf
les
jl
bswap
sbbl
mov
push
lcall
fdivl
xchg
in
sbb
push
inc
pop
dec
fwait
ljmp
loop
in
mov
and
icebp
in
xchg
out
sbb
out
push
jns
adc
les
sbb
push
loopne
ja
out
fcompl
xchg
iret
flds
adc
je
pop
pop
cs
fdivl
cltd
jecxz
fcom
jl
shll
sbb
idivl
rolb
mov
sub
dec
cltd
imul
xchg
rolb
inc
inc
lret
mov
xor
cmpsb
call
jo
sbb
cmpsb
ss
mov
inc
xor
and
shr
dec
jnp
test
ret
in
lds
test
add
hlt
adc
mov
and
ja
push
inc
inc
ret
fcoml
cmpsb
cmp
test
mov
leave
iret
out
add
insl
imul
mov
sti
insb
shrb
and
dec
js
adc
cmp
jb
cmp
pop
cld
pusha
ret
lret
and
mov
outsb
mov
xchg
cli
cmpsb
mov
push
push
addr16
push
or
insb
xor
mov
sbb
insb
mov
xchg
sti
push
dec
mov
pop
lahf
out
mov
sub
xor
push
jae
outsl
shlb
lcall
hlt
mov
or
mov
and
int
outsb
imul
sub
test
lret
pop
and
popa
mov
xchg
aad
xchg
or
pop
popa
fstl
mov
clc
push
fcmovne
sub
aas
push
fcmovne
shlb
sbb
daa
dec
ffree
xchg
push
das
xchg
pushf
insl
lea
adc
xchg
test
inc
sbb
pop
xchg
jne
adc
sbb
in
mov
mov
movsb
popa
aad
ds
jnp
shlb
adc
mov
pop
jge
or
cltd
sbb
sub
std
push
add
inc
push
pop
cmpsb
dec
fimull
add
fsubrl
sbb
xchg
sarb
mov
mov
and
inc
ja
mov
cli
jl
push
mov
adc
xchg
inc
sar
fcomps
outsl
mov
adc
adc
mov
shrl
mov
mov
daa
popf
test
and
cld
fisubs
jecxz
shrl
outsl
sub
cs
pop
cmp
push
outsb
lods
iret
add
insb
lods
adc
inc
dec
inc
std
aad
cmc
sbb
ljmp
repz
pop
xlat
xchg
pop
adc
add
mov
mov
out
cmpsb
add
pop
jle
fsubrs
jmp
fcmovu
push
rcll
pop
scas
outsb
add
clc
mov
pop
lret
scas
shl
orb
shlb
sub
jnp
cmp
cmpsb
jmp
or
mov
jmp
outsb
aas
pushf
mov
push
xor
lahf
cli
in
js
adc
xor
bound
or
insl
hlt
aas
stos
inc
loop
ljmp
xchg
xchg
stos
xor
aam
loope
imul
mov
lret
out
rcl
jno
outsl
push
rcr
cmc
scas
mov
push
test
or
xchg
lds
fistl
or
pop
popf
popf
dec
out
popf
cmpb
pop
ja
jg
repnz
gs
rcr
stc
mov
xchg
fs
addr16
mov
sub
xchg
fdivrl
inc
push
xor
sti
sub
push
pop
cmp
and
xor
sub
nop
pop
mov
out
divl
test
cmp
xchg
jge
movl
lock
jnp
out
data16
jno
xor
push
sbb
test
shll
mov
int3
mov
out
mov
out
cmp
fwait
pushf
xchg
xor
loopne
mov
mov
ret
jecxz
imul
int3
call
ljmp
mov
testb
push
xor
loop
in
cmpsb
and
leave
jne
jbe
shl
addr16
lock
mov
mov
inc
out
cmp
inc
mov
dec
sub
aam
jmp
icebp
jecxz
cmp
pop
sahf
xchg
and
jbe
mov
popf
sbb
loop
jp
insb
into
icebp
dec
icebp
cmpsb
xchg
or
sub
cmpsb
sub
stc
inc
pop
not
xchg
mov
arpl
outsb
dec
dec
shrb
int3
xor
leave
mov
pop
push
out
not
lret
or
push
pop
push
clc
bound
inc
out
into
out
push
push
mov
test
add
shlb
jbe
outsl
push
fwait
inc
sbb
lahf
jle
insl
addb
std
repnz
pop
js
mov
push
movsb
adc
and
call
rol
fbld
mov
lret
shlb
dec
push
lods
inc
mov
ds
into
out
add
dec
sub
ret
ljmp
ja
and
out
push
call
mov
mov
push
icebp
xor
cs
je
movsl
inc
mov
mov
xchg
scas
push
jecxz
jns
notb
in
cld
dec
stos
dec
and
xlat
sbb
mov
sub
jg
mov
push
xor
imul
pushf
enter
pop
and
add
push
adc
inc
rcll
subb
mov
mov
fnstenv
mov
js
mov
inc
stos
cli
mov
xchg
in
inc
pop
shrb
or
fildll
in
into
xchg
nop
aas
sti
ljmp
jo
cwtl
data16
ret
xor
mov
out
jp
loopne
pop
outsb
aaa
or
lods
xor
push
adc
ljmp
popf
dec
roll
pop
rorb
rcrl
dec
mov
addb
pop
je
sub
ljmp
jae
or
xchg
jg
mov
cli
call
and
repnz
mov
insl
mov
mov
mov
mov
xchg
sub
adc
mov
in
iret
clc
xchg
leave
in
mov
scas
dec
lret
les
or
and
pop
add
es
nop
int3
mov
add
cmp
mov
fldcw
pushf
mov
jno
jecxz
insb
xor
pushf
sahf
xchg
pop
popf
cmc
clc
dec
push
cmp
iret
nop
addr16
fldenv
in
mov
cmp
outsb
xchg
test
mov
pop
idivl
enter
mov
xchg
dec
sub
shrl
jno
cmc
shr
xlat
aam
pop
or
lret
out
push
mov
cmpsl
cltd
cmp
xchg
test
sbb
mov
mov
lods
inc
popf
idivl
dec
pop
inc
cmpsl
jecxz
jp
push
cli
cmp
addr16
mov
mov
dec
mov
jle
and
stc
in
jle
push
iret
jns
in
jp
xchg
fwait
movsb
mov
popf
sahf
push
mov
leave
jbe
mov
push
sbb
mov
movsl
jp
ja
call
jne
int3
pushf
and
fwait
dec
adc
or
sub
pop
push
push
cmp
push
das
inc
repz
decb
mov
out
mov
loopne
jp
aaa
hlt
adc
pop
mov
xor
setb
lods
cmpsb
push
mov
shl
dec
mov
or
enter
jp
subl
xlat
in
mov
stc
sub
sub
cmpsl
fisubs
pop
clc
xchg
mul
aad
and
lods
sub
jp
sahf
outsb
mov
call
or
insb
mov
push
inc
adc
push
imul
xchg
out
pushf
fsub
or
lret
add
addr16
orb
xchg
je
mov
push
movsb
cmpsb
jle
cmp
in
adc
and
jns
pop
pushf
out
sub
mov
jg
adc
out
stos
pop
pop
movsb
nop
xor
dec
mov
mov
out
mov
or
loopne
jle
loopne
add
pop
and
inc
push
push
out
popf
inc
sti
leave
aam
scas
aam
pushf
mov
xchg
in
jnp
hlt
jp
int3
jne
jbe
jae
cmp
adc
nop
push
popf
xor
aas
shlb
scas
pushf
lock
cmp
subb
movsb
add
or
and
das
xchg
pop
into
sub
dec
test
add
sbb
ja
pop
xchg
movsb
fyl2xp1
lret
inc
sub
je
and
inc
sbb
xor
lock
jns
lret
push
xchg
push
iret
dec
enter
xchg
out
bnd
aaa
std
xor
add
and
in
iret
and
mov
push
xlat
mov
sub
lret
push
jb
add
jae
lods
xchg
xorb
into
cmpsl
lods
mov
cmc
push
or
imul
sub
cmp
inc
lods
cli
jg
pop
fildl
gs
shl
sbb
mov
test
mov
fists
jecxz
lods
pop
es
imul
lcall
out
lods
test
iret
scas
cmp
gs
sub
incl
mov
xor
imul
ljmp
or
mov
mov
cmpsb
mov
leave
scas
mov
loop
lcall
je
pop
pop
fwait
ds
and
sub
jnp
test
push
icebp
mov
fbld
adc
fwait
push
test
scas
adc
or
pop
jge
nop
shlb
das
dec
push
mov
or
and
add
add
xchg
lret
mov
cmp
movsb
cmpsl
ds
in
mov
test
adc
sub
add
test
out
mov
xchg
insb
repnz
ret
mov
sbb
mov
rcl
inc
loop
and
add
pop
sbb
or
and
mov
mov
lods
jnp
insb
movsl
adc
in
xor
jmp
push
outsl
mov
jg
dec
ror
int
mov
ret
je
mov
arpl
cltd
les
bound
xchg
popa
push
mov
sbb
ret
xchg
and
fiaddl
jmp
inc
jmp
adc
ficoml
and
add
clc
xor
insl
cmp
push
outsl
push
pop
push
pop
add
and
mov
xor
sahf
xchg
es
imul
xor
sahf
push
inc
test
cmc
mov
dec
notl
and
jp
add
cmc
jae
es
rcll
cmp
inc
repnz
gs
pop
or
jns
and
dec
lods
hlt
dec
les
mov
add
idivb
jno
sbb
xor
cmp
pop
ds
fimull
cmp
sub
popa
inc
hlt
bound
ljmp
stos
push
mov
movsl
jmp
int3
les
add
fidivl
fnstenv
sbb
mov
jmp
mov
jo
jecxz
xchg
cmp
fwait
loop
or
adc
test
in
pop
dec
jge
jle
mov
dec
int
into
mov
xchg
mov
dec
insl
or
mov
xchg
pop
arpl
jbe
cli
sub
jbe
xchg
mov
push
popf
inc
fwait
testl
mov
inc
ljmp
and
nop
into
leave
not
shr
adc
inc
scas
jo
icebp
inc
movsl
sub
cmp
pop
imulb
popa
rcl
aam
ds
lock
sti
pushw
fnstenv
fstpt
inc
pop
pop
ret
mov
andb
ja
jmp
push
hlt
sub
cld
mov
jmp
dec
lock
arpl
lcall
dec
fidivrl
mov
repnz
mov
leave
fiadds
mov
fistps
fstl
or
jecxz
lods
push
push
jecxz
leave
insb
test
sub
ret
mov
clc
cmpsb
lds
cmp
scas
cmp
mov
lcall
push
jecxz
dec
push
fs
call
mov
jl
mov
xor
leave
sub
inc
out
cs
cmp
xchg
in
fwait
mov
into
xchg
mov
dec
push
in
jmp
or
out
dec
idivl
fisubrs
xchg
sub
mov
enter
mov
gs
out
std
in
pop
dec
inc
test
loop
push
decl
insl
xchg
sub
dec
adc
rcrb
cmc
add
mov
cli
dec
dec
fucomp
sub
xchg
iret
shlb
inc
pop
daa
les
cmpsl
mov
test
mov
push
push
das
mov
jp
lea
push
pop
mov
dec
pop
cmpsl
das
ret
fldenv
adc
jp
outsl
les
jno
jne
xchg
imul
xchg
fldcw
mov
cmc
mov
or
xlat
lock
aad
adc
cmpsl
cmpsl
leave
xor
jo
sub
and
cli
jp
stos
pop
xor
sbb
cmp
stos
add
loope
xchg
lock
and
cmp
adc
mov
mov
xchg
pushf
test
loope
in
cmp
cwtl
cli
pop
and
or
mov
adc
movsl
jno
cld
gs
and
sub
or
xchg
out
rcll
fdivr
push
push
add
testl
fwait
out
xchg
scas
or
push
inc
fildl
sub
sbbb
sahf
mov
popf
repnz
xchg
dec
testl
sub
test
or
pop
loop
push
fwait
jecxz
jne
pop
setg
jle
xchg
ret
repz
xchg
xchg
sbb
mov
loopne
movsl
inc
pushf
sub
and
arpl
xchg
in
ja
cltd
pop
and
outsl
inc
fwait
cmpsl
jmp
ror
dec
sti
xchg
lds
sub
ds
xlat
xchg
cli
cmp
inc
add
aad
test
les
mov
dec
jl
pop
inc
aaa
mov
testb
xlat
bound
lahf
clc
mov
dec
xor
mov
mov
inc
daa
adc
mov
bound
adc
mov
mov
mov
sahf
sbb
sub
xchg
ds
cmp
loopne
cmp
sbb
pop
jae
mov
or
inc
push
cmp
cli
ret
outsl
das
in
push
mov
gs
xlat
cld
and
dec
xor
frstor
fbstp
int3
iret
rcl
inc
jne
out
test
and
pop
mov
fcomp
mov
xchg
cmpsb
xchg
nop
repz
iret
outsb
pop
lods
cwtl
mov
insb
adc
dec
in
sub
test
push
dec
push
les
mov
bound
rcrl
sbbl
fisubrs
and
cmp
xor
sub
negl
push
cmp
ja
push
xor
aas
push
cli
pop
pop
fdivrl
jmp
pop
leave
in
outsl
xchg
mov
and
insb
imul
jmp
mov
xor
mov
lret
fsubr
ljmp
imul
aad
and
lahf
adc
stos
dec
sub
push
pushf
jne
and
cmc
pushf
sbb
cmpsb
mov
xchg
jbe
rol
pop
ja
jmp
sbbb
aad
shl
es
xchg
sbb
nop
ja
mov
lds
jge
imul
jnp
lret
jge
xchg
shrb
dec
mov
icebp
lods
jge
pop
cld
mov
xor
mov
lahf
negl
jo
mov
inc
cmp
xchg
repz
jb
jl
xchg
pop
mov
mov
lcall
mov
dec
rclb
mov
fldenv
hlt
pop
lahf
ja,pt
lahf
addr16
insl
sahf
mov
leave
push
xchg
leave
add
inc
push
mov
adc
jmp
dec
mov
cmp
stos
in
ds
xor
test
movsb
test
int
rol
mov
iret
leave
mov
pop
and
in
test
cmp
mov
mov
rol
push
push
inc
cld
sub
and
insb
sub
mov
pop
jns
xchg
cltd
shr
aas
mov
jg
pop
cmpsb
sub
fcoml
fcmovnb
jle
enter
aam
out
fidivs
shll
mov
popf
into
mov
ljmp
lods
cld
mov
mov
lcall
int
mov
test
stos
mov
lods
or
aam
out
lcall
loopne
jge
jbe
jae
pop
out
lcall
pop
jmp
lods
imul
and
mov
adc
xlat
or
mov
sbb
outsl
pop
faddp
sbb
sub
rorb
xacquire
xchg
mov
sub
pop
out
add
cmpsl
cmpsb
jns
shl
push
sahf
mov
fwait
imul
mov
add
sbb
sbb
add
add
xor
fsts
in
ret
fistl
and
shlb
mov
clc
mov
xor
flds
negb
loope
xor
add
push
movsb
lds
rcll
xchg
ljmp
lds
adc
enter
mov
outsl
mov
les
aas
sbb
scas
sbb
pusha
test
movsl
jne
jbe
inc
or
sub
clc
out
add
out
test
pop
incl
cmp
jb
iret
push
das
bound
mov
aad
cmp
push
or
jo
adc
cmpsb
or
xor
ret
mov
or
xor
push
stos
xor
repz
xchg
xchg
dec
cmp
or
out
pop
inc
repz
dec
adc
sub
stos
pop
mov
mov
jne
mov
sbb
jmp
repz
test
xor
mull
pop
shrb
and
or
ffreep
cwtl
adc
xor
add
and
and
mov
push
sub
fnsave
neg
inc
xchg
stos
fiaddl
lock
cwtl
js
dec
in
lods
or
mov
push
pushl
or
mov
lret
xchg
cs
adc
insb
in
sub
pusha
cli
push
pop
cwtl
movsl
push
cltd
hlt
mov
jge
xchg
in
cmpsl
stos
add
lret
in
js
or
xacquire
dec
pop
js
xor
pushl
xor
repz
mov
fimull
mov
mov
loopne
fidivrs
mov
std
jno
pushf
cs
in
test
aad
fwait
xchg
mov
add
xor
dec
aas
push
lea
loope
mov
stos
add
iret
and
jg
xchg
jns
neg
pushf
popa
xchg
jo
push
sub
mov
lcall
inc
push
repnz
add
sbb
daa
scas
jge
fildl
hlt
rcrb
xor
in
and
inc
lds
push
or
mov
filds
ljmp
out
add
push
xchg
dec
or
xlat
jb
xchg
fsubs
dec
loop
pop
add
lcall
fcmovne
pop
mov
push
test
sarl
js
xorb
imul
push
incl
in
or
xor
or
ljmp
and
cld
lds
shll
lods
mov
push
lret
adc
xor
mov
test
movsb
xchg
in
and
add
jmp
ret
lock
add
mov
cld
mov
cmp
cmp
mov
mull
fs
fstpl
mov
imul
scas
out
loope
fcoms
icebp
xor
cld
outsb
cmp
xchg
dec
ljmp
pop
ret
dec
mov
das
mov
cmc
int
int
test
inc
cwtl
xchg
popf
push
adc
jae
mov
add
scas
cld
cwtl
cli
sbb
dec
jge
push
cwtl
mov
cmpsl
push
pushf
pusha
push
out
ds
and
mov
aas
mov
mov
hlt
xchg
cmpsl
mov
mov
aaa
clc
cmpsb
adc
popf
push
lds
repnz
or
inc
dec
sbb
xor
inc
ja
cmc
mov
arpl
adc
inc
xchg
xor
push
xchg
shll
jno
leave
mov
or
cmc
leave
adc
pop
or
inc
xchg
xor
jb
pushf
sbb
pop
cmp
push
inc
mov
push
pop
xlat
imul
push
inc
cs
dec
lds
ficompl
or
pop
inc
hlt
add
sub
scas
das
mov
jne
daa
mov
test
cmovs
or
adc
and
shlb
pop
xor
shll
cmp
adc
test
imul
dec
xorl
sbb
sbb
xchg
mov
insl
sbb
jno,pt
or
push
les
jbe
jp
pushf
add
cwtl
cmp
dec
xchg
or
out
repz
pop
fucomip
and
cmp
imul
in
mov
ffreep
loope
and
sub
xchg
mov
jne
sahf
xor
jb
jecxz
es
rorb
mov
cmp
mov
xor
mov
mov
dec
into
arpl
xchg
fwait
aam
jecxz
lock
xchg
in
enter
xor
mov
add
sti
inc
mov
jle
sub
lock
or
outsl
inc
out
dec
aad
std
push
enter
xchg
cmp
and
cmp
mov
stos
rolb
xlat
inc
xchg
dec
mov
mov
inc
push
mov
mov
or
mov
pushf
mov
iret
mov
out
sbb
ds
cmp
ljmp
sbb
loopne
or
out
add
dec
mov
xchg
aam
scas
test
addr16
ja
mov
cli
cmp
mov
iret
mov
sbbb
fdivl
int3
xor
ds
inc
inc
lret
scas
push
mov
mov
sbbl
cltd
shll
ret
pop
or
cs
push
loopne
push
mul
icebp
das
enter
imul
or
mov
jne
xchg
mov
pushf
xchg
dec
aas
add
mov
dec
inc
shll
xchg
mov
hlt
jmp
adc
and
aad
outsb
jl
jl
jmp
mov
xlat
jp
dec
sbb
dec
add
sti
sub
xchg
dec
xchg
mov
bndldx
inc
pop
mov
stos
pop
sbb
lock
out
mov
jae
leave
mov
add
inc
into
out
add
jge
clc
test
nop
mov
and
pop
pop
adcb
push
xchg
cld
inc
js
hlt
pop
insl
lock
es
pop
repz
imul
pop
inc
sub
mov
mov
jno
lcall
gs
hlt
mov
add
mov
and
jno
fiaddl
add
add
pop
test
jecxz
pusha
enter
sbb
scas
cmp
lods
jp
push
push
lods
insb
fsubr
iret
scas
aas
xor
xor
sbb
fsts
sbb
mov
mov
mov
sub
outsb
push
test
sti
lods
sahf
ljmp
std
stos
dec
test
rorb
ret
dec
leave
out
inc
out
jp
sti
mov
out
jbe
inc
stos
mov
or
iret
lcall
inc
sub
inc
pushf
xchg
lret
mov
adc
negl
jl
adc
adc
xchg
repz
cmp
stc
dec
enter
push
xchg
data16
pop
out
pop
adc
and
das
mov
xor
fistpll
hlt
dec
or
in
rcrb
jnp
or
shlb
mov
and
sbb
repz
adc
incl
jecxz
scas
jne
outsl
pop
clc
jnp
hlt
xchg
fdivr
popf
mov
ljmp
ret
in
test
dec
sarl
xchg
and
rcrb
lods
outsl
inc
ljmp
loope
lds
pop
pop
cmp
gs
leave
out
cmp
in
jmp
je
or
push
and
or
sub
adc
xchg
shrl
fcmovnb
push
xchg
fdivs
fucom
pop
jmp
inc
scas
xor
icebp
mov
sbb
and
fs
push
scas
adc
daa
out
in
jb
xchg
mov
or
movsb
adc
lock
cmp
loope
xor
lock
add
mov
stc
aas
mov
arpl
das
cmpsl
mov
cwtl
lods
adc
int
xchg
and
mov
iret
rcr
loope
sbb
and
dec
idiv
test
push
mov
dec
pop
xchg
and
out
mov
popf
mov
es
sub
mov
std
jns
test
jae
clc
jle
add
inc
cwtl
outsl
jns
xor
in
scas
idivl
adc
cmpsl
rolb
jg
mov
pop
jns
enter
add
in
jp
cltd
daa
lods
xchg
jnp
inc
sub
icebp
mov
and
pop
cmp
repz
dec
jbe
gs
mov
xor
sub
repz
loopne
mov
mov
adc
aam
mov
adc
and
and
push
and
push
es
xchg
clc
sub
jbe
icebp
scas
and
xorb
pop
dec
push
add
hlt
mov
push
mov
mov
std
rorl
pop
lods
mov
leave
cmp
or
out
jnp
mov
adc
sbb
pop
inc
pop
sbb
loope
pop
pushl
std
or
inc
push
adc
xchg
mov
push
loope
call
pop
xchg
int
lds
jp
imul
lods
jbe,pt
stc
pop
enter
cmp
jns
mov
in
fsubs
lahf
jb
mov
mov
jecxz
mov
bound
flds
push
pop
lds
outsl
push
scas
jecxz
sub
push
xchg
mov
cmp
subb
aad
pop
fldt
leave
hlt
xchg
adc
mov
jg
in
leave
les
cmp
fisttps
test
stos
movsl
stos
jmp
and
repz
push
push
and
aad
out
inc
cmpsb
cmpsl
pop
or
push
mov
repnz
je
jo
push
jne
cmp
sbb
pop
imul
jns
cmp
mov
adc
ljmp
xchg
movsl
cltd
sub
lods
jecxz
outsl
xor
loop
push
lock
xor
and
add
pop
jne
xchg
mov
into
hlt
in
insl
hlt
and
call
cs
ljmp
push
call
icebp
and
or
aas
xor
cmp
nop
lea
xchg
cmpsl
push
xlat
movsl
shlb
or
popf
scas
stos
ret
in
mov
rcr
repz
stos
repz
sarb
xor
or
test
jo
or
xorl
and
add
jae
mov
cmp
inc
jae
xchg
pop
out
mov
xor
mov
loope
imul
jge
jle
insb
int3
ret
inc
addl
mov
movsb
insl
lret
daa
xor
mov
jne
out
gs
repnz
lods
cwtl
ret
sbb
dec
insb
jns
fsubs
xchg
dec
mov
push
ljmp
dec
clc
pop
orl
in
mov
adc
mov
clc
icebp
imul
mov
cmp
out
mov
stc
jns
jl
sub
ja
mov
test
std
fiaddl
pop
bound
ret
leave
xchg
insb
loop
xor
nop
pop
mov
and
sub
push
sbb
lods
xchg
xchg
dec
je
fcoml
push
mov
xor
imul
pop
int3
push
or
mov
mov
xchg
add
out
movsl
adc
movsl
dec
lds
fcoms
fstl
mov
push
test
mov
les
stc
push
sbb
shlb
scas
xor
adc
insb
push
lret
sub
push
lahf
dec
and
pushf
ljmp
xor
or
in
daa
jbe
add
sub
xor
loopne
ja
add
jp
ret
icebp
push
or
inc
loopne
nop
jmp
xchg
adc
cmp
enter
xor
jge
fimull
test
pop
mov
sub
mov
mov
out
xlat
insl
bound
movsl
fnsave
rcr
inc
int3
xor
aas
dec
push
xchg
xor
xchg
gs
cltd
ret
jle
adc
stos
and
push
dec
dec
cwtl
jns,pn
sahf
pop
popf
and
push
cli
xchg
repnz
dec
mov
sbb
push
popl
fimull
pop
push
dec
push
cltd
ret
xchg
imul
outsl
push
jbe
fwait
cmp
push
mov
sbb
and
aad
and
scas
insb
xor
jmp
imul
adc
xchg
test
daa
xchg
dec
out
push
inc
lds
add
loop
push
push
dec
inc
ret
sub
jecxz
adc
outsl
sub
movsb
out
daa
pushf
sub
pushf
lahf
ret
stos
mov
push
dec
adc
jge
fsubrs
stos
xchg
loop
xchg
xlat
leave
in
cli
aas
dec
pop
in
jns
pop
mov
cld
and
loop
mov
in
inc
pop
mull
jp
fadds
ficoms
into
xchg
lock
mov
jge
dec
push
lock
mov
aas
in
cmp
sub
ja
lock
mov
mov
jge
hlt
scas
pushf
test
sbb
jo
es
inc
inc
pop
test
cmpsl
add
adc
jg
lods
mov
cmp
mov
push
sub
and
call
movsl
outsb
scas
adc
pop
std
cli
out
es
mov
jge
mov
inc
and
xchg
cld
adc
pop
adc
movsb
mov
mov
mov
mov
bound
mov
dec
pushf
mov
ja
repz
stc
sahf
orl
mov
jno
and
mov
movsb
pop
inc
pop
sahf
lahf
mov
xchg
mov
adc
cmp
or
sub
sti
sahf
pop
adc
stos
sbb
subb
jb
popf
popf
xchg
sbb
jge
sbb
movsb
out
push
insl
hlt
jmp
and
add
rep
mov
subb
mov
scas
xchg
xor
add
rolb
std
push
or
test
push
pushaw
or
sub
into
push
jecxz
cmp
inc
fists
out
std
xchg
cltd
or
dec
pop
adc
jg
das
leave
out
movsl
lcall
lock
lret
es
push
std
mov
cmp
inc
push
adc
je
or
mov
push
xor
imul
clc
push
flds
dec
in
inc
cltd
std
pop
jl,pt
mov
jbe
sub
mov
add
mov
imul
call
scas
popf
cmpsb
jb
sti
int3
sub
mov
pop
mov
push
lock
jo
mov
add
hlt
sbb
cmp
arpl
outsl
int
xchg
hlt
pop
add
cmpsb
hlt
js
clc
or
ror
pop
mov
pop
inc
inc
sti
mov
les
jno
aas
dec
xor
ja
mov
pop
in
mov
add
mov
sub
mov
std
jno
in
scas
inc
jl
mov
xchg
xlat
aad
and
divb
mov
pop
js
jg
and
out
add
js
and
in
adc
mov
mov
nop
fisttpl
dec
leave
push
mov
jle
sbb
sahf
cld
sbb
frstor
jecxz
imul
adc
movsb
or
andl
inc
clc
popf
dec
inc
out
jp
xor
xchg
cmp
sbb
inc
imul
xor
repnz
test
pop
jmp
pop
xchg
xchg
pop
pop
frstor
sub
and
int
js
dec
in
pop
clc
jnp
push
test
pop
sahf
inc
bnd
std
in
daa
lret
outsb
mov
mov
jno
inc
aas
xchg
cmp
out
or
enter
mov
mov
jae
xlat
and
adc
sbb
jmp
loop
mov
mov
push
inc
outsl
mov
mov
sbb
ficomps
loop
mov
xor
jo
and
insl
cmp
push
mov
sbb
add
ja
rorb
cmp
mov
fnstsw
ljmp
dec
sahf
adc
xchg
es
inc
lahf
mov
pop
sub
xchg
into
sti
xor
insl
sbb
out
add
mov
and
xor
int3
stos
inc
sbb
pushf
sqrtps
ds
sub
sub
lret
ja
push
aam
or
sarl
out
adc
sbb
lods
ss
lock
test
data16
enter
dec
xchg
lds
clc
inc
jno
mov
shll
div
mov
mov
dec
pop
sar
jbe
pop
in
or
call
js
bound
add
pop
cmp
scas
ljmp
mov
icebp
sahf
repz
stos
dec
shl
mov
push
into
push
andl
inc
and
aam
fbld
cmp
aam
jg
sbb
add
insb
aam
sti
into
add
test
adc
sub
xchg
xchg
insb
or
repz
in
sub
cmp
xchg
push
stos
push
mov
pop
push
icebp
ret
mov
sub
jg
sarb
push
aam
hlt
cmpsb
cld
push
and
mov
pop
movsb
fsubrl
xor
xchg
pop
cmpsb
mov
sub
mov
cmpsb
add
or
push
iret
inc
push
add
xbegin
cmpsl
int
out
int3
dec
dec
jecxz
icebp
lret
mov
inc
aas
xor
mov
mov
test
xor
sub
mov
mov
mov
push
cwtl
fcmovnb
jg
jl
lods
addb
pop
fwait
add
fnstsw
inc
lret
into
lds
lock
movsb
xchg
xor
pop
and
adc
and
pop
jmp
pop
xchg
mov
outsb
mov
lahf
mov
scas
mov
pop
and
cltd
add
fucom
sub
sub
into
fstpl
pop
xchg
addr16
and
sar
lret
pop
lret
test
std
push
sbb
and
mov
int3
lcall
mov
fdivl
les
mov
add
jecxz
out
loop
mov
ss
ja
dec
xchg
mov
pop
aas
sub
mov
lods
dec
fidivrs
jle
repz
add
pop
in
outsb
sub
sub
dec
or
jp
ljmp
push
add
int3
push
subb
jle
call
insb
sub
in
xor
repz
inc
and
jecxz
das
pop
push
stc
loopne
and
pop
add
cmp
push
dec
fiadds
pop
test
xchg
mov
sub
fsub
sub
xchg
imul
inc
test
insl
ds
std
xor
add
sarl
call
pop
jp
push
loopne
cmpsl
ret
sub
call
cmp
cmp
xor
xchg
mov
stos
xchg
pusha
dec
scas
insb
bnd
mov
mov
sub
and
rcr
jecxz
push
insl
out
xchg
push
cmpl
or
fcoms
scas
mov
cli
jp
les
and
fwait
popa
cld
push
std
fstps
iret
loopne
fidivrs
adc
outsb
aaa
in
jle
imul
lret
js
mov
adcb
mov
sub
or
mov
bound
push
push
and
ret
fnstenv
notl
xchg
rorb
idivb
pusha
pop
stc
mov
out
arpl
pop
cmp
jae
je
js
pop
xchg
dec
outsb
hlt
das
cmpsl
fmul
cmpsb
xor
or
das
int
lock
and
ljmp
xchg
clc
fdivrl
pop
mov
mov
in
and
jg
push
xor
mov
mov
shll
rcr
lret
daa
pop
leave
sub
xor
xchg
sub
insb
hlt
pop
in
pop
fs
leave
andb
mov
pop
lods
and
pop
adc
scas
loop
mov
pop
xchg
sbbb
mov
push
cmpsb
xchg
movsb
xchg
movsb
aad
inc
movsb
lcall
cmp
jmp
jns
mov
aad
and
repnz
iret
mov
adc
jle
fcmovnbe
ret
rorb
out
popf
jnp
lock
nop
jl
cmpsl
and
das
sbb
out
jp
adc
and
pop
out
call
lds
repz
mov
jg
mov
cmpsb
cltd
sets
pavgw
and
rclb
push
sub
add
or
divl
pop
stc
test
insb
insb
xchg
adc
repz
mov
and
call
aad
xchg
fiadds
and
out
insl
sub
outsl
inc
pop
clc
dec
test
jge
or
mov
xchg
dec
les
inc
std
jno
push
aas
xchg
inc
fs
insl
movsl
fidivl
test
fsts
xchg
sti
adc
push
jno
in
push
cmpsb
mov
addr16
xchg
rorl
cs
loop
ret
and
call
out
mov
aaa
pushf
pop
loop
cmp
xchg
cmp
daa
stos
cli
lds
popf
cmpsb
arpl
sub
pop
imul
xchg
out
mov
pusha
cli
xchg
sub
das
push
dec
dec
xlat
popf
ljmp
jne
rcll
or
je
jmp
ds
mov
xchg
fcmovnbe
popf
repnz
mov
jl
xor
pop
stos
outsl
mov
rol
mov
and
aaa
or
mov
test
mov
mov
ficoml
cmpb
mov
or
mov
cmp
aad
popa
cmp
mov
mov
push
ja
test
add
call
mov
loope
fimuls
scas
sub
arpl
cmp
mov
outsl
sub
push
rcll
int3
es
iret
push
push
sub
test
cli
sbb
ret
push
adc
jno
aas
sub
dec
xor
imul
dec
lock
in
and
test
das
push
mov
repnz
fcoms
mov
cld
pop
or
mov
dec
dec
shlb
loope
inc
in
aad
or
xor
sbb
pop
sub
or
mov
insb
sbb
popf
xchg
mov
cltd
ljmp
jle
push
and
stc
jmp
jnp
cmp
sbbl
std
xor
or
adc
std
test
sub
xor
dec
push
sub
xor
jne
in
lahf
mov
sarb
adc
and
in
in
sahf
xor
es
add
inc
test
cmp
inc
mov
push
sub
or
xchg
pusha
jno
mov
in
aas
test
ljmp
in
idivb
lahf
lods
or
mov
aad
lret
pop
lahf
pop
out
or
jp
push
cli
or
fwait
movsb
pushf
adc
roll
notl
jb
sbb
jns
imul
xchg
ret
inc
pop
outsl
jae
cld
and
cmp
pop
jo
jo
lods
loopne
inc
mov
mov
jmp
int3
cmp
test
mov
jg
mov
push
movsl
loope
pop
pop
aaa
inc
xor
jg
dec
shlb
add
into
sbb
mov
arpl
or
mov
shlb
jp
lret
or
lods
sub
sub
pop
jge
out
cmp
dec
jl
push
mov
inc
jge
outsb
pop
mov
dec
push
sub
mov
pop
outsb
rolb
enter
dec
enter
add
test
or
lahf
cmp
xchg
mov
or
mov
aas
scas
mov
pop
or
adc
or
jno
fldt
sub
outsl
mov
scas
mov
add
in
repnz
and
scas
testl
pop
lds
dec
rorl
into
sub
mov
in
or
fists
insb
cli
jb
mov
add
mov
jecxz
fisttpll
popf
cmp
loop
in
mov
les
adc
roll
cmp
jb
xchg
push
cmpsl
fcomi
add
pop
inc
popa
mov
xchg
out
daa
aad
mov
jae
ret
int
test
dec
insl
sub
outsb
stos
sbb
iret
jae
xchg
repnz
adc
sbb
inc
in
stc
iret
pushf
sarb
jne
cli
sub
test
nop
pop
sub
sbb
testl
or
inc
cli
leave
inc
mov
push
and
mov
pop
mov
mov
add
je
xor
fdivs
repz
jns
scas
cmp
mov
mov
push
jae
push
cmp
popa
mov
sbb
cltd
cmp
test
xchg
out
lahf
xor
bound
scas
stos
pop
insl
in
pusha
cli
xor
testl
jbe
cmp
pop
ljmp
daa
push
pop
jbe
js
sbb
jge
jae
add
or
repnz
cld
aam
outsl
aam
in
jno
dec
mov
jl
test
mov
jge
imul
movsb
sub
or
cwtl
mov
or
sbb
pop
mov
in
divb
xchg
xchg
scas
gs
pop
enter
je
sbb
xor
into
xor
sahf
loop
jp
cmc
inc
add
sub
ljmp
frstor
jb
jmp
loop
fs
xlat
sahf
cmp
lods
xor
ljmp
daa
popl
sbb
lds
mov
and
fimuls
mov
dec
adc
mov
je
jmp
or
addr16
cwtl
rsm
adc
iret
fiadds
ds
mov
lcall
dec
sub
xchg
mov
sub
repz
lret
inc
pop
insb
pop
int
rolb
sahf
pushf
cmp
jns
mov
in
enter
cmp
and
ja
cld
call
add
insb
orb
dec
and
push
or
les
incl
or
pop
dec
add
pop
lods
pop
ret
scas
xchg
pop
aam
xchg
in
psubb
insl
xor
adc
repz
mov
ja
scas
jle
mov
inc
in
mov
sti
scas
pop
cmp
sub
call
and
jo
out
and
jbe
fs
jg
sbb
sbb
mov
add
hlt
aam
popf
data16
shrl
mov
cmpsl
test
sub
mulb
mov
test
insl
cmpb
int
sti
mov
xchg
sti
mov
cmp
add
leave
rcl
adc
hlt
push
sbb
sub
or
or
mov
jae
cltd
xor
ret
cld
iret
std
xor
mov
and
int
or
inc
loope
push
and
push
jno
into
adc
pop
inc
pop
pop
and
cmp
popa
sub
hlt
sub
clc
push
pop
stos
xchg
call
bound
ja
in
out
fs
jnp
cmp
les
clc
push
inc
int3
inc
adc
cmpsb
clc
or
pop
scas
in
insb
ret
add
add
in
jecxz
or
xor
push
lods
xor
js
mov
roll
inc
mov
dec
xchg
nop
movsl
in
repnz
shlb
hlt
repnz
sub
add
add
mov
xchg
arpl
cli
cmp
cmc
cmp
cmp
inc
repnz
push
mov
push
jne
popa
stos
rol
inc
sub
cwtl
pop
xchg
and
stc
jo
sub
push
repnz
test
pop
stos
or
xlat
stos
negb
mov
nop
int3
pop
jmp
aad
xor
leave
xor
je
ss
repnz
jne
je
push
and
adc
outsl
lods
lock
bnd
and
lret
add
dec
popf
negb
inc
xchg
xchg
sub
cmp
loope
dec
insl
xchg
push
sbb
xchg
or
loope
xchg
dec
jge
fucom
arpl
push
filds
enter
arpl
repnz
out
push
sbb
pop
mov
jnp
jecxz
out
sub
mov
and
pushf
push
das
sbb
das
xor
cmp
jl
fidivrl
mov
aam
sub
mov
ud0
data16
je
mov
inc
cld
xor
in
jo
aam
flds
ss
rolb
lret
add
test
jecxz
xor
mov
pop
pop
hlt
xchg
cwtl
push
xor
ss
mov
jne
aam
jnp
mov
and
test
inc
mov
mov
out
xor
leave
mov
jnp
jnp
fisubrl
jne
insb
dec
mov
cmpsl
push
mov
aam
adc
mov
adc
repz
cmpsl
dec
lcall
inc
mov
cmp
or
pop
jmp
out
push
out
fs
mov
adc
mov
adc
ret
lcall
inc
jl
lea
je
lods
mov
mov
fwait
cmp
ss
iret
lea
addr16
ffree
xchg
lea
cmp
or
adc
mov
aam
adc
lods
and
xlat
cld
or
jecxz
mov
lret
imulb
and
pop
js
popf
adc
add
push
push
xor
nop
xchg
incl
add
mov
adc
cwtl
imul
jae
xor
inc
mov
xchg
push
dec
imul
cmp
cli
sbb
or
xor
add
cmp
fldl
mov
int3
outsb
fdivr
jecxz
add
fprem
inc
fcoml
fisubl
pop
xchg
into
jecxz
add
mov
mov
sbb
jecxz
mov
clc
xor
outsl
add
scas
push
mov
mov
inc
sub
dec
int3
push
cli
stos
dec
in
pushf
into
mov
ljmp
stos
out
in
out
add
pop
or
or
pop
jne
enter
pop
mov
xor
scas
xor
lret
cmpsb
subl
mov
adc
in
imul
movsb
fs
jecxz
dec
mov
mov
mov
insl
xchg
fwait
mov
fdivrs
enter
inc
inc
out
aam
push
bt
mov
lods
aad
ret
cmpsb
jbe
scas
jl
subb
jne
jle
lret
lock
inc
dec
xchg
xchg
fs
jo
dec
inc
rolb
std
cmp
jl
mov
adc
xorb
data16
inc
pop
lods
sbb
mov
cli
scas
inc
aas
pop
test
xchg
dec
idivb
jbe
shlb
sbb
add
in
je
lahf
movsb
imul
xchg
xchg
jae
inc
jne
test
movsb
lds
bound
outsb
sarb
inc
and
lcall
xchg
xor
sub
mov
rcpps
mov
jo
mov
xor
dec
mov
movsl
mov
lods
test
outsl
je
fcomi
rorb
mov
fldl
sahf
pop
jle
in
pushf
lahf
aas
xchg
adc
xchg
in
incl
push
sub
fistpll
cld
sarb
mov
xor
add
sahf
icebp
mov
popf
icebp
test
loopne
cmp
mov
loop
pop
aam
adc
or
pop
cmc
add
std
imul
cmc
cmc
int
jmp
mov
sbb
nop
mov
inc
jg
push
mov
xchg
leave
jle
mov
lods
data16
xchg
or
mov
in
test
out
adc
loope
sbb
xchg
mov
sbb
inc
mov
ret
dec
por
fisttpl
add
and
sbb
das
sti
test
or
cmp
sbb
sbbb
ljmp
mov
fstps
das
mov
es
cmc
mov
jg
xor
inc
pushf
std
arpl
mov
and
mov
pop
test
or
and
hlt
push
cmp
sbb
xor
pop
ret
nop
out
cmp
jmp
dec
hlt
in
add
fstpl
mov
ret
mov
or
shl
cltd
mov
mov
push
sub
outsb
mov
and
mov
lahf
push
mov
addr16
js
shl
mov
adc
xchg
pop
stos
xlat
or
inc
fiaddl
mov
js
mov
or
scas
sub
sbb
retw
xor
xchg
dec
or
test
adc
mov
or
jbe
hlt
movsb
add
loope
push
mov
fwait
in
xlat
int
cmc
std
fisubs
cli
sbb
lret
sbb
cli
subb
xor
aad
ftst
stos
jae
lock
stc
outsl
mov
push
jge
xchg
ja
xor
scas
sub
std
push
adc
lret
mov
inc
cmpsb
adc
call
pusha
dec
lcall
sub
and
lea
aad
add
mov
sbb
inc
mov
xchg
jb
inc
out
out
call
mov
sbb
out
je
dec
jmp
ja
int3
pop
mov
daa
xchg
rcll
inc
jg
jnp
out
test
mov
adc
xchg
add
sub
out
daa
lret
clc
shll
inc
sbb
mov
xlat
push
js
push
cltd
mov
jnp
cmp
pop
cltd
mov
bound
out
cmpsb
movsl
sahf
push
jno
insb
mov
jmp
mov
push
movsl
lea
push
outsb
imul
sub
xchg
cli
stos
add
add
cmpb
xchg
movsb
das
rcll
popa
sar
sarl
sbb
ror
adc
test
lods
test
jle
inc
sahf
cmp
iret
jo
push
ja
das
stos
shlb
imull
call
cmovnp
dec
adc
jmp
dec
sub
jbe
pop
xor
inc
and
lock
out
or
push
add
ror
and
leave
clc
mov
in
fnstenv
or
push
inc
add
aas
sub
and
push
clc
sub
mov
lret
cli
mov
inc
cld
dec
int3
cmpsl
mov
or
arpl
aad
mov
mov
jno
jmp
mov
out
inc
mov
mov
in
pop
or
int3
cli
daa
jbe
imul
inc
mov
aam
dec
shll
adcb
rcl
cmp
lcall
push
mov
les
pop
in
jl
adc
mov
aas
jnp
adc
sbbb
sub
push
jl
hlt
push
mov
hlt
stc
in
and
mov
mov
inc
std
aad
leave
jg
push
pop
popf
xor
inc
in
lret
int
rclb
movsl
mov
mov
iret
mov
call
fcoml
mov
pop
mov
xchg
jnp
push
mov
gs
and
and
addl
add
rcll
mov
cld
scas
or
repnz
pop
aam
cmpsb
sti
mov
sub
sbb
adc
lock
rcll
and
stc
jmp
sbb
cwtl
xlat
jp
test
ds
or
mov
mov
ret
dec
mov
arpl
test
mov
imul
jl
pop
add
sahf
sub
mov
iret
mov
pop
cltd
ds
pop
push
cs
xchg
ret
pop
sbb
aas
ljmpw
leave
and
xorl
mov
push
notb
pop
addr16
int3
push
or
push
mov
push
imul
push
xchg
jo
push
sub
xor
lret
cs
out
addr16
mov
sbb
push
push
repnz
dec
xor
cmp
aaa
mov
sub
fsubl
scas
scas
sbb
mov
aad
test
insl
jp
pop
push
mov
stos
and
jle
and
clc
mov
push
lods
push
inc
imul
add
mov
stos
xchg
imulb
shlb
push
xchg
push
rclb
sbb
sbb
push
and
imul
mov
pop
je
pushf
movsl
jle
ljmp
jne
mov
fwait
insb
mov
sub
add
fists
aaa
cmp
dec
outsb
std
xchg
xchg
jl
movsb
in
filds
push
jns,pt
jnp
in
adc
mov
jl
or
or
das
pop
pop
scas
pop
lods
jne
xlat
and
jmp
out
push
lock
dec
fwait
push
fidivrs
mov
popf
out
mov
loop
xchg
aad
idivb
ret
lods
cwtl
xchg
into
xchg
mov
sub
imull
and
push
js
fucomip
xchg
cmp
add
inc
scas
dec
mov
lret
pop
mov
xor
orb
pop
xchg
outsl
mov
push
mov
cmc
loope
ret
sbb
mov
aas
enter
or
mov
icebp
ret
push
xchg
pop
hlt
insb
or
addr16
pop
xchg
jno
movsl
sub
mov
pushf
push
xchg
mov
nop
adcl
ret
cmp
in
push
mov
sbb
inc
mov
push
mov
sti
shlb
popa
out
cmp
shlb
sub
mov
addr16
out
js
xchg
movsb
sahf
shll
js
cld
hlt
ret
scas
hlt
mov
cmp
outsl
sbb
notl
fstp
sbb
ret
shll
cmpsb
cmp
jae
mov
popa
mov
jno
orl
stos
imul
addl
inc
loop
in
outsb
ss
inc
sub
sub
sbb
dec
and
pop
cli
mov
jg
jne
lcall
loopne
mov
dec
testb
push
mov
ficoms
sub
xlat
popa
icebp
cmp
pushf
rclb
sti
std
enter
subb
pop
notl
repnz
into
xor
mov
stos
ret
inc
loope
pop
sbb
gs
mov
shlb
mov
js
ds
ret
cmp
push
and
cltd
xor
xchg
push
fdivrl
leave
inc
mov
jae
scas
sub
sub
pop
mov
in
repz
xchg
lock
cmc
sahf
sub
push
cmp
mov
fwait
mov
mov
mov
and
jno
xor
pop
popf
xor
xchg
mov
aad
jo
scas
xor
or
sub
sub
fnstsw
mov
lock
mov
test
push
pop
repnz
xchg
xor
and
ret
sbb
mov
outsb
pop
rorl
iret
sub
jle
bound
adc
inc
lret
xchg
or
xlat
sbb
sahf
lea
push
pop
inc
xchg
pushf
loop
fsincos
lds
in
lock
pop
ds
in
in
mov
stos
sar
mov
bound
adc
mov
mov
fidivrs
add
mov
xchg
add
ja
dec
cmc
fs
mov
repz
call
mov
ret
test
push
iret
mov
add
pause
sarl
insl
cltd
mov
ljmp
fldenv
ficompl
sbb
fadds
pop
cmp
and
mov
cmp
sbb
loopne
mov
loope
dec
dec
movsl
adc
add
xor
fidivl
mov
int
cmp
icebp
mov
cmc
push
pop
mov
repnz
push
mov
aaa
mov
daa
sbb
cmp
outsl
je
xchg
sahf
xchg
xlat
cmpsl
insb
cmpsl
popf
les
lret
jge
sarb
dec
adc
sub
pop
jg
mov
lret
add
addr16
pop
push
and
jmp
in
leave
sbb
or
mov
xor
lock
add
sub
jne
mov
cmpsb
std
in
in
leave
or
fcoml
lds
mov
repz
pop
into
xchg
xorb
fsts
pop
lret
dec
dec
rorl
jecxz
aaa
ds
ljmp
sbb
push
loop
sarl
xchg
sbb
lret
pop
fldl2e
ss
inc
sbb
dec
cmp
fnsave
push
jno
test
test
push
jge
je
mov
mov
lret
arpl
xchg
in
into
cmp
out
in
cltd
ficomps
mov
aad
inc
dec
jne
dec
xor
inc
addr16
lahf
push
and
pop
stos
or
stos
test
jg
jg
iret
pop
sbb
mov
push
pop
stos
adc
cmp
jg
jp
aas
lret
ljmp
idiv
test
sbb
test
in
int
sarl
dec
cmpsb
jmp
push
test
iret
int
addb
pop
jl
fcompl
mov
cmpsl
hlt
pop
cltd
and
sub
jge
ja
pop
jb
jmp
outsl
sub
ds
pusha
loope
test
jle
int3
aaa
jae
inc
lock
cmp
adc
loop
jno
lret
sub
pavgw
jl
mov
jns
pop
les
adc
jne
push
pop
jmp
jle
and
out
jle
mov
push
repz
jns
jge
insl
cld
daa
jecxz
pop
idivl
dec
imul
icebp
leave
xlat
jo
ret
adc
rclb
cmp
fsts
cmp
shr
test
pop
xchg
insb
test
cld
repz
push
fstpl
jp
out
mull
mov
mov
xor
fstps
ds
insl
sub
shlb
pop
ds
sub
inc
mov
loopne
xor
mov
and
je
rcrb
xchg
push
jg
push
lret
push
jp
insl
sub
je
aas
sub
xor
cwtl
into
dec
lcall
add
fwait
dec
shl
inc
jo
stos
ret
clc
test
sbbb
lahf
and
aam
fucomi
jmp
pushf
pop
jmp
add
jnp
ja
and
add
loopne
jl
movsl
je
fwait
pushf
and
movb
rcl
insl
lods
inc
fisubrs
mov
mov
cmpsb
adc
les
shlb
movsb
or
pop
mov
lea
cwtl
adc
mov
push
lds
xlat
loopne
mov
fnstsw
pop
jb
daa
cltd
adc
mov
int
into
cmpxchg
hlt
cld
icebp
mov
cmovno
or
mov
and
dec
movsl
cmp
or
jnp
mov
or
cli
mov
or
loop
or
adc
cmp
or
sub
orb
mov
sbb
push
sar
mov
lods
mov
xchg
mov
lock
jmp
insl
out
aaa
js
xlat
fbstp
lea
mov
decb
jne
sahf
cmp
fisubs
push
mov
fadds
lock
xor
xor
sbb
pop
jecxz
mov
cwtl
push
sub
xor
xlat
jne
sbb
and
movsl
ficomps
push
push
or
push
fimuls
ja
or
mov
inc
sub
ficompl
jmp
xchg
out
pop
sti
pushf
mov
aas
repnz
mov
xchg
test
jl
push
ds
sbb
pop
ds
push
fisubs
xchg
enter
lods
sbb
inc
mov
jnp
or
jne
cmp
or
jmp
mov
fdivrp
cwtl
popf
jge
mov
pop
mov
sbb
push
lea
mov
dec
lods
push
xlat
mov
dec
and
dec
jecxz
fsubrl
loop
bound
inc
mov
lret
xchg
mov
sub
incl
jg
or
jae
lods
inc
sbb
out
sti
shll
cmp
jnp
dec
fwait
call
jp
les
rcl
js
jno
mov
sbb
pop
mov
out
daa
pop
aam
cmp
insb
mov
push
xlat
add
jmp
int3
icebp
out
cmp
jbe
jmp
or
aaa
imulb
adc
les
shll
decb
nop
fldenv
sbb
add
out
push
sub
pop
pop
push
cmpsb
add
mov
int
lods
mov
test
cmp
outsl
add
movsl
cmp
mov
outsl
push
push
jg
cli
lea
mov
pop
jae
loopne
fidivs
lods
mov
mov
push
out
inc
jbe
loopne
pop
decb
frstor
ja
dec
test
inc
scas
fildl
test
sub
mov
push
and
inc
inc
insb
pop
jae
mov
pop
add
les
push
sbb
add
idivl
ja
rcrl
cmp
loope
lods
das
sub
mov
ss
loope
pop
push
aad
add
sahf
adc
push
rcr
adc
mov
cs
mov
roll
push
lods
lret
xor
sub
jnp
push
mov
lret
xchg
vmread
jecxz
imul
popa
das
cwtl
popf
mov
push
into
aaa
xor
and
push
or
out
repz
aas
pop
xchg
stc
mov
sub
or
outsb
xchg
inc
es
or
push
call
test
imul
fdivs
adc
insl
jo
cmp
fidivs
sbb
cltd
sti
movsl
cmpsb
loope
adc
push
out
push
mov
sub
add
das
pop
repnz
mulb
mov
inc
push
push
mov
jl
aas
pop
push
sahf
push
stos
das
jbe
lds
imul
push
cmp
mov
out
pushf
int
inc
shrb
or
pop
fildl
jp
repnz
ficoml
push
out
xor
and
or
lock
jmp
mov
jle
fdivl
mov
push
adc
repz
or
xchg
sahf
std
aas
or
aad
test
jecxz
rorb
mov
jecxz
push
jp
lahf
xor
into
jae
pop
mov
outsl
es
cmp
loope
lcall
pop
daa
mulb
cmp
xor
mov
fidivs
lock
xor
jl
arpl
mov
ljmp
add
in
je
and
std
lcall
mov
xchg
or
sub
fimuls
cltd
lcall
add
out
jno
lret
dec
movsl
pop
lea
push
mov
adc
es
cmp
mov
pop
in
mov
xchg
pop
xor
jg
cmp
or
and
lods
inc
pop
shlb
add
xlat
jo
roll
push
out
push
or
daa
jns
and
fnstenv
out
fnstenv
loopne
loop
mov
fwait
pushf
or
out
fcomip
rcrl
fimuls
xor
jg
inc
call
sbb
cmovae
stos
aam
push
inc
xlat
lods
hlt
int
shll
sbb
fcomi
aaa
mov
pop
fcoms
pusha
out
sub
push
dec
dec
imul
and
scas
mov
mov
jb
call
mov
mov
sub
insb
or
es
and
jbe
sahf
out
cmp
mov
add
sub
mov
fsubl
es
dec
decl
pusha
xchg
out
fwait
jo
xchg
mov
mov
push
jp
jnp
mov
test
into
xor
xor
clc
pop
cmp
pop
addr16
int
xchg
subb
cmp
mov
inc
inc
cmp
mov
push
inc
push
movsb
sbb
hlt
lock
sub
pop
mov
loopne
jl
xor
push
fwait
xor
xchg
mov
lea
xor
pop
shlb
fwait
hlt
pop
mov
sub
fiadds
xchg
xor
sbb
lods
lods
and
lds
lret
mov
jno
imul
outsl
jl
enter
dec
cmp
mov
ja
mov
test
lods
cwtl
fdivrp
or
xchg
jecxz
icebp
cld
outsl
ja
fiaddl
sbb
scas
inc
sub
dec
loope
push
iret
jo
icebp
mov
sbb
adc
pop
leave
rcrb
ss
int3
fistpll
or
cmpsl
and
into
iret
push
enter
imul
and
sbb
lds
fs
sub
icebp
js
pop
in
fistpll
xor
sbb
push
mov
scas
repz
dec
push
cmpsl
outsb
mov
push
cmp
rorl
cltd
mov
sub
repnz
cld
push
fidivs
or
setge
sbb
mov
orl
test
sub
inc
outsb
stos
adc
jl
mov
ds
cmc
ja
or
ret
bound
jg
pop
enter
jl
jecxz
arpl
jno
lahf
or
rorl
mov
das
shr
test
and
mov
pop
mov
jne
dec
sub
andl
or
pop
dec
jo
clc
push
jne
sar
rolb
lods
or
mov
mov
pop
ret
cwtl
push
jo
cmp
cmp
bound
test
cmp
sti
xor
into
pop
push
mov
mov
shl
in
rorl
mov
je
xchg
add
xor
aam
aad
sbb
mov
test
pop
imul
xchg
rcr
sarl
mulb
out
daa
jecxz
inc
cmp
push
sub
clc
out
repz
dec
fsubl
nop
imull
add
lock
lahf
adc
adc
or
aad
sub
sub
aam
xchg
jmp
add
mov
add
insl
mov
test
sarl
or
push
insb
lea
in
xchg
stos
jle
lea
xor
push
jge
loopne
jmp
sbb
repnz
or
rcrl
out
cmc
pop
sub
dec
xor
sub
pop
ds
xchg
jae
cli
adc
dec
gs
or
push
mov
nop
cmp
movsl
cmp
gs
add
jle
test
repnz
xchg
adc
insl
lret
stos
fwait
jns
shl
jae
push
mov
popa
dec
pop
pop
add
in
mov
icebp
cmp
cmp
int3
or
ja
ret
pusha
and
jge
mov
jecxz
out
int
aas
jle
stc
out
cmpsl
add
mov
int3
sbb
and
std
jp
dec
aad
jl
cli
das
test
mov
mov
jle
data16
xchg
into
add
fstpt
jl
pop
dec
and
dec
cmp
mov
ja
add
in
pop
stc
test
repnz
mov
pop
pop
mov
or
xchg
add
repnz
cmp
xchg
sbb
xor
pop
mov
les
push
pusha
sub
loope
bound
push
js
mov
ret
or
les
add
jmp
shlb
jb
scas
out
int3
lods
pop
cwtl
or
pop
mov
icebp
jge
adc
xchg
xor
inc
xor
xlat
outsb
lods
jne
add
es
out
cli
test
jae
cmpsb
push
aam
ds
cmpsb
out
inc
ja
sub
mov
and
fwait
lock
dec
pop
sbb
push
stos
shrb
sbb
cmp
push
subb
or
cmp
jge
and
js
mov
fstps
sbbb
cmpsb
sub
fldt
dec
mov
insb
jmp
sbb
lods
in
xor
sub
in
cltd
and
dec
cmp
fst
or
jge
push
mov
push
dec
lahf
rclb
repnz
adc
test
xchg
or
xchg
jp
xorl
jp
ret
fs
idivb
pop
fisubrl
rorl
test
je
lahf
into
leave
jae
sbb
pop
lods
or
or
addr16
pop
mov
in
mov
data16
aad
pop
fwait
mov
xchg
push
push
jle
jmp
scas
xchg
dec
mov
fnstcw
pop
sub
push
xchg
and
loope
xchg
sahf
mov
lea
test
call
aad
arpl
shll
in
pop
jecxz
mov
mov
or
in
incb
sbb
lret
push
sub
fwait
mul
mov
into
or
sbb
jge
push
dec
add
and
cmc
movsl
sbb
mov
mov
sbb
push
std
mov
mov
jl
xor
cmpsl
jp
jnp
inc
adc
roll
jb
jne
add
in
lcall
ljmp
push
outsb
sub
or
xchg
popf
sbb
ret
pop
popf
or
sub
nop
inc
lret
fmull
int3
bound
std
lds
lods
scas
or
jle
rcr
cmp
sahf
daa
pop
je
fwait
push
and
jg
and
addb
jge
jl
push
cmp
mov
lods
imul
stos
stos
mov
cltd
xorb
shll
rorl
ljmp
add
jnp
jae
leave
mov
jae
xchg
and
xor
scas
xchg
inc
push
or
dec
sub
jns
loop
repnz
or
rorl
ja
test
jno
dec
sub
lea
push
roll
jp
fstpt
insl
testl
ds
jns
push
icebp
pop
sub
sbb
inc
adc
adcb
popa
push
loop
mov
or
add
lds
jecxz
into
imul
aas
and
test
jno
jmp
and
insl
pop
push
inc
daa
ja
ljmp
repz
sub
fldl
mov
or
jl
lea
or
mov
inc
cltd
aad
cli
mov
cwtl
arpl
pop
dec
call
jmp
mov
sarb
repz
sub
lret
testb
push
adc
add
aaa
xor
test
loopne
mov
jmp
dec
cmc
cmpsl
loope
add
push
into
inc
loope
outsl
test
mov
mov
je
cmpsb
inc
xchg
mov
repz
adc
mov
pop
cli
imul
fwait
adc
inc
xchg
roll
sub
xor
orb
daa
test
xor
insb
mov
psllq
jnp
cmp
mov
sti
mov
jnp
push
loope
jnp
fldt
mov
in
xor
packuswb
mov
cmp
pop
lahf
mov
xchg
in
mov
call
adc
pop
rorl
mov
inc
rolb
jne
xchg
cs
jge
sub
xchg
push
sti
stc
rcll
insb
incl
enter
mov
mull
movsb
ja
cmp
test
push
out
out
stos
aam
mov
fsts
les
mov
mov
test
sub
pop
or
sub
lret
and
aad
adc
mov
or
insb
aas
add
aas
inc
ljmp
push
lahf
xor
inc
mov
outsb
std
leave
ja
call
pop
adc
jno
int
ret
mov
inc
dec
adc
inc
sub
into
adc
mov
or
cmpl
enter
jl
sub
fistpl
sbb
leave
fcmovnbe
sub
sbb
inc
mov
jns
and
add
mov
loope
popa
mov
mov
xor
imul
pop
xchg
sti
mov
in
xchg
and
in
cltd
rep
out
mov
xlat
mov
gs
dec
xor
sbb
popa
divb
push
mov
mov
mov
daa
test
pop
sbb
cmpsl
ljmp
adc
fsubr
test
mov
jmp
xor
mov
imul
jns
movsb
lret
lods
aam
sbb
pushl
js
or
jg
mov
pop
arpl
push
out
scas
mov
sub
mov
out
push
in
pop
cmpsb
shl
cmp
or
lret
cmp
pop
je
push
sarb
lahf
icebp
sub
mov
mov
adc
sti
ljmp
lcall
push
fstpl
or
mov
add
jmp
stos
imul
mov
cltd
push
and
jb
mov
ss
add
jecxz
sub
mov
in
jecxz
push
repz
and
inc
sbb
jp
mov
mov
mov
mov
dec
xchg
mov
ja
cmp
jg
sbb
pop
jbe
cltd
movsb
inc
or
mov
mov
adc
dec
je
xchg
loope
imul
jmp
lods
jbe
jecxz
adc
adc
notl
aas
mov
out
out
xor
xchg
ret
xor
daa
aam
fcomip
add
push
mov
int3
pop
andb
imull
jb
push
push
loopne
jmp
push
insb
push
dec
mov
pop
inc
daa
dec
rcpps
clc
mov
inc
sti
xlat
mov
jge
stos
loopne,pn
std
xchg
cmp
lahf
mov
push
mov
jg
xor
inc
xchg
hlt
inc
dec
dec
or
sbb
rorb
add
cld
mov
aaa
pop
test
xlat
adc
jne
loopne
test
mov
mov
or
fwait
sub
and
call
pusha
cmpsb
pop
stc
pop
adc
cmp
mov
sbb
arpl
sbb
cmc
clc
xchg
rorb
fcoms
cmp
or
sub
push
or
enterw
mov
test
push
xchg
cli
and
sub
test
cmpb
stos
xchg
xchg
jle
pop
adc
out
or
jl
sbb
popa
sbb
pop
and
pusha
in
jp
xchg
outsb
lock
and
outsb
movsb
dec
hlt
mov
mov
mov
xor
aad
out
or
cmp
mov
iret
jbe
les
adc
fisubl
icebp
leave
sbb
rolb
ss
insl
push
dec
sbb
repz
xchg
out
out
xchg
xchg
lcall
arpl
imul
cmc
jl
mov
jbe
stc
cmp
adc
cmovs
dec
mov
and
dec
lods
inc
test
cmovo
loop
mov
outsl
cmc
inc
cwtl
aad
cwtl
pop
es
inc
xor
and
pop
stos
jecxz
scas
xchg
shrl
mov
mov
lods
mov
repz
ljmp
jge
std
add
xchg
mov
cmc
nop
scas
lds
inc
or
xchg
movsl
pop
mov
jb,pt
mov
loop,pn
stos
data16
ja
jmp
jno
pop
aas
cmpsl
sub
rorl
enter
add
xchg
mov
jecxz
dec
fdivrs
and
icebp
lret
int
cs
xchg
call
push
or
fwait
mov
or
mov
mov
pop
cmpsb
dec
jmp
scas
mov
dec
fwait
imulb
lods
int
loope
popa
insl
or
jnp
mov
push
xchg
xchg
notl
xchg
inc
fstp
lcall
jae
test
lret
xor
jle
sbb
shll
xchg
mov
loop
push
mov
jecxz
adc
sub
mov
push
fidivrs
push
or
mov
addb
outsb
sbb
in
jp
fs
xchg
int3
into
mov
and
or
pop
ror
loope
mov
in
sbb
sahf
push
xchg
lea
aaa
sub
in
cwtl
lock
jl
mov
push
sub
sub
mov
les
cli
ret
mov
push
nop
pop
adcl
xor
outsb
ss
js
btr
sbbl
outsb
mov
js
repz
mov
repz
pop
jb
mov
lock
stc
push
or
sbb
mov
sahf
mov
mov
pop
jb
sti
mov
ss
adc
int3
mov
movmskps
sub
lret
mov
mov
sbb
cmp
and
fistps
mov
enter
mov
rolb
inc
sbb
out
cmp
rorb
adc
xor
push
jle
push
shlb
scas
mov
and
jge
fnstenv
ljmp
mov
jg
loopne
xchg
mov
jbe
cmp
push
cmp
icebp
mov
xchg
mov
jge
fisubl
sub
inc
sbb
sahf
sbb
add
mov
aaa
push
inc
fs
mov
mov
adc
mov
inc
xchg
shl
push
inc
xorl
cltd
lret
sahf
lcall
cmpsl
or
xor
sbb
add
mov
cmp
adc
sub
cmpl
dec
movsl
ds
popa
dec
push
clc
call
pop
push
push
mov
std
push
scas
cmp
add
test
xchg
aam
stos
mov
adc
mov
lret
cmc
je
push
push
mov
fcoms
mov
loop
push
call
sub
fildl
push
cwtl
mov
sub
test
ja
xor
push
xchg
pop
cs
mov
mov
test
jns
or
add
mov
ret
cli
sub
jle
sub
data16
fiadds
fldln2
hlt
jle
push
sbb
and
dec
cwtl
sar
push
pop
mov
inc
sub
push
call
loop
inc
xchg
xchg
ljmp
out
push
pop
pop
mov
testb
dec
push
cwtl
pusha
enter
loop
sub
jae
insb
sub
lcall
adc
xchg
mov
out
stc
aad
cmpsb
pop
dec
lret
cmpsl
fs
adc
lret
dec
cwtl
adc
mov
pop
aam
sti
jle
pop
mov
push
in
ficoms
test
push
leave
div
pop
fadds
lock
or
insb
loop
mov
nop
add
or
push
add
sub
fbld
cmc
push
sbb
mov
cwtl
inc
xorb
in
sahf
jge
dec
inc
push
ret
fcomip
in
pop
cmp
bound
jge
aaa
les
push
test
stos
mov
xchg
leave
mov
out
leave
adc
lods
mov
cmp
add
leave
test
dec
loopne
in
xor
loope
pop
mov
mov
push
call
cmpsb
jne
sahf
jle
and
sub
lcall
push
sub
jns
test
call
add
shll
sub
icebp
call
dec
mov
sub
xor
scas
sub
cwtl
ret
sarl
jecxz
ljmp
icebp
aad
in
sbb
sahf
xchg
jo
mov
pushf
sub
into
jecxz
dec
out
jle
addl
xchg
test
adc
mov
rcl
fwait
mov
jne
les
push
notl
sub
jns
cmp
push
test
cmp
loopne
mov
sub
fcmovnbe
jb
push
arpl
cmp
int3
cmp
in
pop
iret
adc
ljmp
fistpl
cmp
or
loope
cmp
aas
cmp
outsl
mov
pop
ljmp
int
xchg
nop
pop
and
mov
pusha
shr
iret
ret
enter
stc
cmp
cmp
je
xor
xchg
jno
pop
cmp
inc
js
sahf
mov
pop
push
fcmovne
pop
push
jno
ljmp
mov
mov
mov
xor
cs
push
mov
mov
and
fwait
mov
bound
xchg
cmp
imul
inc
repz
rclb
sub
ja
mov
bound
push
negl
adc
jle
pop
add
call
lahf
imul
jle
push
aam
jne
enter
mov
addr16
push
or
mov
shl
jno
jl
cs
jmp
call
and
gs
and
adc
test
popf
cmc
cmp
loope
and
or
push
or
pop
inc
pop
stos
daa
lds
sbb
lahf
jno
add
std
stc
adc
mov
jle
ljmp
dec
mov
push
fistl
iret
xchg
scas
fadds
mov
mov
xchg
jl
or
or
shll
popa
xchg
scas
in
idiv
sti
test
adc
mov
pop
adc
jle
stos
xchg
fldl
ret
jbe
pop
mov
ja
sub
cmc
mov
jo
sub
fcmove
add
inc
cwtl
mov
ja
ret
iret
fisttps
xor
stos
mov
jbe
mov
or
push
cld
cld
xor
dec
pop
add
cmpsb
mov
jnp
pop
jne
ja
jge
lock
or
testb
ss
fadd
repnz
pop
push
push
mov
and
dec
iret
fsts
gs
xor
dec
pop
push
sbbb
data16
lret
xor
xlat
sub
imul
movl
in
dec
loopne
cmp
adcl
sbb
cmc
ret
nop
cmc
fwait
xor
pop
clc
ljmp
push
jmp
pop
sub
mov
jl
leave
cmpsb
popf
cmp
ret
cld
xlat
inc
push
pop
xor
or
inc
movsl
loop
imul
test
xchg
loopne
neg
into
mov
pushf
addr16
aas
mov
dec
aam
mov
fs
mov
mov
mov
hlt
roll
jl
and
shll
js
jae
xor
and
xchg
aad
dec
pop
sbb
pop
popa
dec
icebp
scas
das
addb
fdivl
jno
pop
sbb
adc
fbld
pop
arpl
pusha
adc
popl
ja
hlt
mov
mov
sub
mov
xor
repz
add
cld
in
sbb
adc
mov
rcrl
sbbb
or
mov
lods
mov
ret
aam
xacquire
inc
cmpsb
xor
loop
and
repnz
cmpb
lods
xor
movsb
mov
roll
xor
xchg
jg
stos
enter
mov
es
mov
imul
mov
cmp
rorl
add
cmp
jg
xchg
sbb
mov
adc
outsl
lods
into
sub
sub
nop
hlt
inc
aaa
mov
dec
xor
cmpsb
dec
popf
aaa
dec
fwait
sub
jmp
jo
mov
in
stc
and
lret
xor
inc
add
arpl
insb
stos
cmp
xor
mov
ret
test
push
rorb
outsb
int
xor
jae
movsl
mov
mov
lods
cmpsb
das
mov
sub
dec
fwait
scas
mov
mov
arpl
cmp
sub
lret
fldenv
lock
jge,pn
cmp
push
adc
sub
bound
jmp
js
into
adc
or
or
shll
lods
fwait
xchg
bound
jle
pop
or
push
test
xor
xchg
clc
pop
dec
int3
adc
jae
jge
lcall
stos
add
cmp
jmp
out
jne
jnp
shlb
das
jnp
int
cmp
pop
stc
loop
inc
jmp
negb
cmp
jo
mov
aaa
mulb
out
fwait
mov
scas
sub
push
fnstsw
arpl
lret
repz
aas
xchg
loopne
lea
and
mov
mov
mov
mov
je
aas
push
scas
lods
outsl
inc
dec
aam
mov
idivl
idivl
push
fsubrs
ret
dec
xor
into
dec
push
fcomps
jmp
in
cmc
mov
loope
scas
std
lret
xchg
mov
in
test
jl
fwait
stos
cmpsb
pop
aas
repnz
jp
jo
cltd
orb
repz
mov
mov
hlt
and
rcl
and
int
jae
xchg
jae
add
ljmp
out
jmp
das
stos
in
into
ret
clc
mov
es
pop
cmpl
ficomps
arpl
xchg
les
sar
cld
pop
adc
out
mov
jb
call
loope
addr16
push
hlt
lahf
fs
aas
insb
addr16
bound
push
mov
imul
dec
push
and
jbe
fisubrl
xchg
cmp
mov
push
sbb
leave
jmp
out
push
inc
test
sub
cmc
mov
push
jno
mov
rcrl
cmp
xor
xchg
pop
or
popa
jns
filds
decb
ficoms
pop
aas
popf
jecxz
je
dec
in
repz
leave
pushf
add
mov
xor
data16
icebp
cmc
push
bts
dec
rol
repnz
push
jmp
mov
ficoms
pop
stos
in
mov
sub
adc
mov
cmpsb
fs
jns
add
jmp
imul
pusha
pusha
jle
pop
cmp
in
mov
xchg
dec
adc
inc
mov
push
in
sbb
sbb
xor
jns
add
adc
pusha
insb
movsb
cmpsb
inc
outsl
stos
dec
int
mov
sub
jnp
leave
jo
repnz
dec
out
test
rcll
into
fdivrs
jg
imulb
mov
and
pop
test
add
adc
inc
jnp
or
in
das
and
jecxz
out
sbb
jno
push
sbb
xchg
push
enter
insb
arpl
xchg
aas
cmp
push
loope
sbb
dec
pusha
addr16
in
jmp
dec
bnd
sub
sbbl
mov
dec
jnp
mov
clc
mov
movsb
fistps
add
push
fldt
mov
movsl
or
xchg
subb
dec
mov
jnp
stos
and
mov
arpl
bound
icebp
sti
mov
hlt
gs
repz
add
and
xor
das
adc
and
mov
pushf
cmpsb
xor
out
and
sub
push
pop
cmp
sub
pop
stos
into
xorb
es
fnstcw
movsl
out
mov
loop
pop
lds
pop
stos
add
sub
push
cltd
xchg
stos
sub
sbb
movd
test
pop
out
stos
xchg
out
pop
fldl
nop
xor
mov
cwtl
les
or
lret
pop
mov
lods
pop
clc
loopne
xchg
in
dec
out
mov
std
inc
dec
adc
xchg
aas
adc
inc
xchg
movsl
sbb
int
mov
push
push
testl
adc
in
push
scas
push
pop
adcl
mov
out
mov
mov
aaa
add
lds
inc
insl
clc
outsl
jmp
push
mov
push
ljmp
xor
shr
mov
out
jmp
into
decb
or
lret
ljmp
cs
fistps
lds
repnz
das
icebp
in
push
addl
jg
enter
mov
sub
xchg
negb
ja
mov
out
rorl
dec
jge
stos
rorl
dec
dec
pop
or
mov
jle
inc
mov
mov
jge
cmpsb
loop
aad
xor
outsb
scas
fsubrl
in
sbb
and
mov
jne
inc
andb
pop
inc
test
push
jae
scas
add
cmpsb
shr
cmc
flds
adc
scas
cmpsl
cld
movsb
jg
cmc
aas
leave
icebp
sbb
arpl
adc
sub
xlat
and
xchg
adc
sbb
jbe
pop
dec
lods
dec
out
loopne
ja
xchg
or
cltd
mov
mov
loopne
dec
pop
es
fs
lahf
leave
stos
sub
idivl
pop
pop
inc
fcoml
mov
ss
mov
scas
mov
mov
pop
jae
movsb
inc
rol
sahf
stos
not
or
jmp
sbb
jp
push
mov
das
mov
and
mov
sbb
mov
fildl
lds
jp
dec
pushf
cld
push
or
movsl
xor
imul
sub
pushf
iret
fsubr
cmp
shl
shl
xchg
mov
mov
lahf
adc
orb
mov
jne
dec
shr
add
xchg
mov
push
je
cltd
mov
xchg
sub
je
mov
mov
jecxz
inc
je
mov
adc
and
out
xchg
push
clc
insl
pusha
and
dec
gs
lcall
mov
pop
int3
aam
mov
and
mov
mov
push
fisubl
hlt
movsl
add
and
rcll
repnz
cli
sbb
jmp
cmc
push
dec
jg
and
outsb
dec
dec
inc
iret
in
fsubp
les
sub
fisubs
add
ret
lods
cmp
sbb
sub
xlat
sub
pop
jmp
lods
adc
jno
mov
stc
sbb
jno
mov
jge
loopne
xchg
add
insb
mov
xchg
xor
sbb
sti
loop
mov
cmp
jl
mov
adc
push
cmp
jae
cmp
xchg
jle
adc
int
sbb
test
jmp
ret
loope
scas
sbb
and
push
and
lret
pop
daa
inc
aad
pop
test
push
sbb
cmp
mov
cmpsb
xchg
imul
cwtl
inc
push
repnz
fidivl
xchg
pusha
imul
xchg
test
pop
and
mov
mov
loopne
add
icebp
mov
out
in
out
sub
loop
aas
push
mov
and
leave
cmp
inc
je
push
into
xor
push
mov
lods
mov
fcmovnu
int3
jl
jp
push
lods
repz
scas
jle
rdpmc
cmovs
or
xchg
clc
inc
cmpsl
mov
pop
lea
pop
hlt
pop
sub
hlt
call
sub
lock
add
lock
ror
test
testb
xchg
dec
mov
push
mov
push
je
xor
jmp
mov
mov
push
pop
outsb
fcomip
cld
and
lds
push
jnp
orl
fsubs
in
scas
jmp
sub
aad
lock
into
adc
repnz
popf
mov
inc
sbb
jmp
lock
out
jle
je
dec
mov
loope
dec
test
sbb
pop
test
lods
shll
xor
dec
mov
imulb
ss
push
sbb
mov
pop
jnp
dec
into
rclb
hlt
xorb
add
push
data16
dec
dec
lock
fsubs
into
adc
notl
xor
pop
ds
dec
or
add
xchg
fisubl
xor
mov
lock
testl
jl
aad
push
lods
inc
lock
cwtl
sbb
fidivrs
fwait
sti
enter
mov
dec
pushf
out
mov
aas
test
sub
insb
xor
jbe
mov
daa
sbb
dec
sbb
lret
cltd
std
in
mov
lods
enter
xchg
mov
repnz
aas
ljmp
inc
scas
adc
push
jg
call
call
test
test
push
rolb
popf
add
fistpll
push
repz
xchg
aam
and
sbb
jbe
enter
stos
lcall
push
movsb
arpl
pusha
xchg
mov
pop
or
inc
filds
jae
in
movsl
popa
mov
out
mov
movsb
mov
into
or
aas
add
addr16
cmp
xchg
subl
stos
fcmovu
loop
inc
jle
daa
jbe
jnp
mov
dec
pop
cmp
andb
and
xor
push
xor
xor
push
mov
insb
inc
or
lcall
sarb
pushf
arpl
loop
ja
divl
xchg
jns
xchg
mov
xchg
add
pop
and
fwait
mov
data16
repz
comiss
clc
fwait
pop
ret
shrb
push
push
adc
clc
roll
jmp
out
fmuls
jl
gs
push
mov
fcomps
jne
popf
inc
movsl
sub
addb
pop
ficoml
sub
in
loope
addb
in
push
add
xor
sti
loopne
inc
aam
out
hlt
jmp
jne
scas
xchg
cmpsl
data16
sarl
sbb
jge
call
ffree
aad
push
fsubrl
jb
mov
mov
je
pop
stos
cmp
fwait
rclb
push
shll
out
data16
cmpsl
aas
adc
fadds
xor
jbe
xchg
inc
and
cmpsl
movl
cmpsb
jl
fidivrs
ljmp
ja
xlat
cld
xchg
mov
dec
mov
subl
mov
cmp
xchg
sbb
into
stc
sbb
packsswb
mov
cli
add
bound
adc
rorl
fsub
test
std
cmp
testl
das
xchg
lret
pop
mov
daa
cs
mov
ret
mov
inc
je
mov
adc
and
lahf
add
sub
outsb
cmp
push
pop
js
adc
or
adc
and
inc
mov
icebp
push
fnsave
mov
cmpsl
xchg
jecxz
jne
xchg
lds
scas
fcmovbe
mov
cmp
in
mov
dec
push
pop
mov
xchg
or
mov
mov
rol
mov
push
or
pop
dec
daa
in
push
pop
jnp
xchg
callw
ret
jecxz
push
test
out
fdivrl
scas
jle
idivl
out
mov
xor
sbbl
mov
shl
xchg
scas
mov
data16
fisttpl
adc
jp
add
or
inc
lcall
pop
and
cwtl
sub
lahf
push
pushf
movsb
sub
and
push
sbb
cmp
jae
push
inc
movsl
mov
cmp
jae
add
inc
sub
cwtl
cltd
leave
imul
xor
popf
repz
fucomi
dec
xchg
push
inc
stos
aas
cmp
repz
in
dec
stos
inc
xlat
fmull
mov
cmpsb
mov
and
call
test
fwait
insl
inc
xchg
or
jp
mov
stc
and
cmp
sti
mov
push
adc
sahf
mov
mov
and
mov
sbb
lret
outsb
sub
xchg
xchg
rcrl
mov
cli
jp
sarl
cmpb
neg
push
jecxz
or
xchg
repnz
adc
mov
jmp
cmpsl
ror
jo
sti
mov
lahf
cltd
stos
mov
dec
fbld
je
push
mov
adc
mov
lahf
dec
inc
int3
add
in
push
or
jns
sti
int
add
int
pandn
jae
loop
divps
xchg
in
lock
xor
cmp
aad
jmp
test
lock
mov
mov
test
mov
test
stc
xchg
push
mov
pop
pusha
xchg
push
mov
out
in
push
xchg
out
xchg
cmp
push
rcr
xchg
ljmp
adc
adc
sbb
jle
jg
or
cmp
jo
xchg
push
fisubl
inc
or
mov
fcomps
fucomi
sbbb
mov
xchg
repnz
mov
pop
adc
and
lea
lock
xlat
pushf
inc
fidivrl
into
rcrb
popf
xchg
jl
lds
push
mov
and
cmp
aaa
negl
popa
movsl
inc
inc
jns
insl
imul
test
sbb
mov
fistpl
fsubp
movsb
shrl
add
xor
add
or
cmp
jne
fstl
dec
cmp
jb
mov
sbb
push
scas
insb
mov
stos
xchg
xchg
sub
mov
mov
mov
add
and
jb
test
jecxz
fld
daa
clc
xor
movq
pop
xchg
xor
daa
outsb
push
push
pusha
shlb
ds
test
sub
sbb
sahf
pop
les
cmc
dec
into
cmp
sbb
push
or
xlat
testb
mov
sub
ja
pop
jle
push
dec
xor
cmp
sbb
pop
dec
mov
xchg
fwait
pop
jmp
mov
sbb
aam
push
aam
imul
push
xor
add
out
add
or
add
sub
add
subb
stos
add
add
orb
stc
pop
xchg
pop
out
shll
nop
mov
inc
mov
cmpsl
push
scas
dec
mov
fadds
and
movsl
add
stos
dec
gs
mov
dec
scas
nop
add
or
mov
sarb
ror
xchg
xchg
dec
add
lahf
repnz
out
or
sbb
fdivrl
sti
shlb
mov
test
inc
andb
or
out
cli
adc
mov
adc
lods
mov
and
stos
lock
sub
xchg
test
mov
jb
repz
lea
mov
cmp
loopne
mov
xchg
sbb
sub
push
push
clc
stos
sbb
sbb
sub
lcall
xchg
push
iret
ror
xor
cs
pushf
sbbb
pop
imul
push
sbb
sub
mov
je
mov
rcrb
aaa
nop
lret
add
in
int
jle
in
jae
in
push
imul
xor
cmp
ss
int
addl
mov
push
inc
addr16
sub
sub
shll
dec
cld
ja
mov
lock
cmp
fstpl
in
jns
jno
xor
jae
stos
sbb
inc
mov
pusha
adcl
jge
mov
and
outsl
sbb
outsb
cmc
pop
js
adc
rcrb
mov
mov
pusha
bound
jmp
mov
mov
gs
fs
mov
sahf
jnp
decb
stc
push
or
add
pop
hlt
aam
pusha
int
ds
jp
loop
std
ss
insb
stos
jmp
jle
sbb
repz
out
hlt
add
mov
xor
jg
jl
cmp
int
mov
xorb
cmp
fcmovnbe
fcoml
loop
mov
lock
lods
stos
nop
or
addr16
repz
pop
cltd
push
mov
cmp
fld
xor
sti
iret
or
ljmp
mov
lret
popl
mov
jns
clc
ss
push
mov
das
mov
sub
jg
pop
sub
and
jg
jle
mov
les
cwtl
inc
xlat
ss
sar
cwtl
xor
loopne
and
mulb
sbb
leave
aad
push
popa
cmp
mull
pop
sub
mov
int3
cmp
mov
jecxz
pop
or
mov
call
xor
roll
fyl2xp1
fsts
jp
sbb
int3
fmull
mov
arpl
mov
xchg
pop
test
fsubrl
js
add
stc
mov
leave
or
xchg
das
push
jg
xchg
jo
pop
iret
xlat
xchg
push
sbb
mov
sub
call
gs
sarb
inc
cwtl
dec
cmovle
cwtl
fmull
adc
jge
idivl
mov
inc
ret
push
xchg
imul
mov
into
inc
jmp
jae
and
movsl
push
dec
outsl
inc
sbb
ret
fadds
cmp
sbb
add
pop
mov
das
xchg
sahf
test
inc
cmpsb
pop
test
pop
sbb
pop
jb
mov
sti
leave
int
push
pop
jle
ds
cmpsl
xchg
lret
pop
pop
out
clc
and
xor
roll
push
jmp
sahf
inc
dec
pop
stc
adc
fdivrl
sub
fbstp
dec
repz
push
aad
es
xchg
xor
pop
nop
mov
test
fstpl
sub
out
orl
sbb
aaa
dec
test
movsb
adc
mov
jo
push
cmp
xchg
in
and
mov
cmpl
cld
popf
scas
sub
adc
sub
sbb
mov
jge
pop
add
ja
dec
push
test
aam
leave
pop
loope
jmp
sub
jmp
and
into
adc
jecxz
adc
stos
or
push
mov
enter
sbb
sbb
xor
lcall
call
clc
push
int3
inc
mov
mov
dec
out
gs
adc
or
sbb
pop
inc
loopne
aam
push
lret
test
mov
pop
sbb
int3
inc
out
pop
jl
pop
and
xchg
jl
xchg
sub
fcomps
mov
pop
jno
xchg
imull
mov
lret
stc
sub
movsl
pop
cltd
aaa
cmc
cs
or
xor
add
mov
xchg
sbb
std
sbbl
in
ja
scas
cmp
and
xor
pop
or
fisubrl
mov
inc
ret
jl
xor
mov
jg
or
sbb
insb
pop
roll
test
divl
cmpsb
or
inc
jmp
push
fnstenv
repnz
mov
mov
cld
in
fcoml
jl
daa
scas
jle
and
sti
or
int3
sub
lods
imul
push
mov
adc
cmp
je
mov
or
ss
push
jp
dec
dec
sub
scas
mov
loop
out
out
loop
out
pop
je
js
pop
pop
lret
mov
push
xchg
add
dec
add
push
jae
adcb
pop
loopne
cmp
add
ret
test
orl
daa
fwait
das
push
sti
in
daa
add
xchg
mov
push
cmp
pop
popa
jb
dec
mov
pop
jge
fwait
mov
mov
movsl
cli
cmp
jge
pop
int3
pop
and
std
sbb
cmp
jp
test
bound
hlt
daa
std
pusha
mov
in
lods
fistps
jecxz
or
pop
inc
mov
in
xchg
jae
jmp
aad
data16
mov
or
push
mov
xor
test
scas
push
mov
loop
clc
and
out
fcmovnb
hlt
je
dec
push
jb
andb
loope
stos
xchg
clc
out
sbb
das
sub
pop
scas
in
cmp
roll
js
icebp
psllw
in
lcall
insl
lcall
sbbb
push
inc
in
xor
pop
push
mov
cwtl
fsubs
mov
adc
clc
scas
push
out
je
mov
jl
inc
mov
imul
rorl
jmp
mov
loopne
cld
int
ret
cmpsl
add
push
dec
pop
fstpl
in
ret
std
test
xlat
mov
or
cmp
inc
push
rorl
mov
imul
inc
lcall
mov
leave
je
add
out
mov
fsubrl
test
iret
loope
jmp
jecxz
jns
stos
dec
lahf
push
dec
pop
int
inc
scas
pop
adc
lock
mull
out
add
mov
insb
and
addr16
dec
rcl
pop
mov
rolb
mov
cltd
pop
movsb
fs
pusha
xor
mov
dec
xchg
sub
dec
cmpsb
xchg
lds
jl
lods
sub
movsb
sub
ds
movsb
jmp
mov
jg
and
ja
jbe
lcall
jecxz
mov
xchg
and
vmovd
subb
pusha
lea
xchg
add
cmp
mov
mov
jl
adc
lcall
mov
insb
cli
or
test
mov
out
movsb
hlt
mov
xor
or
mov
dec
popa
add
mulb
cwtl
je
xchg
push
mov
adcb
cmp
cwtl
push
jl
dec
cmp
rcl
xor
data16
aaa
cwtl
sub
lods
or
jne
mov
fs
and
mov
std
fisttps
mov
push
xor
arpl
jb
fnstsw
ret
or
pop
sbb
push
lock
mov
or
out
scas
cmp
imul
jl
outsl
into
xchg
popa
push
jns
cmc
dec
stos
push
mov
or
push
push
jne
cmp
jg
sub
mov
sbb
orb
jle
scas
aaa
data16
movsb
mov
mov
stc
pop
adc
inc
jne
xchg
cmp
dec
cmpsb
test
mov
cmpsb
xchg
mov
stos
fisttps
out
fdivrl
fldlg2
jbe
dec
dec
sub
insb
out
mov
iret
xchg
jmp
sahf
xchg
int3
movsl
les
xlat
in
push
stc
das
ss
fld
sbb
roll
imul
cmpsl
outsl
mov
loop
add
sub
js
in
jl
dec
mov
sbb
cmp
out
xchg
mov
rcrb
enter
shrb
popf
cs
stc
in
out
mov
adc
inc
insl
adc
inc
mov
pop
jae
inc
mov
imul
and
add
push
jp
xor
sbb
inc
cs
je
sbb
mov
loopne
aaa
sbb
pop
cmp
pop
dec
push
add
mov
add
push
pusha
mov
inc
pop
xchg
xchg
pop
out
lock
decb
cmp
pushf
push
mov
iret
negb
shl
sbb
mov
call
sbb
or
xchg
xor
jge
add
repz
ja
call
fisubl
cmc
push
fldenv
sbb
xchg
pop
inc
lcall
cmpsl
push
cmp
inc
push
mov
push
jp
jne
fucomip
lods
xchg
jno
dec
das
test
mov
jmp
add
scas
jecxz
ret
scas
sub
xor
ret
iret
jns
cmp
xchg
push
sarb
popf
and
push
inc
pop
dec
stc
clc
mov
jge
sbb
inc
insl
loope
and
adc
add
out
rorb
sahf
inc
ljmp
adc
adc
sbb
adc
sahf
mov
out
stos
sub
fwait
and
xor
mov
rcl
push
enter
adc
jns
fs
pop
cmp
cli
jno
aad
stos
bound
push
mov
outsl
test
outsl
xchg
pop
jo
push
repz
dec
mov
sub
leave
out
sahf
mov
call
adc
or
pop
mov
movsl
add
sub
stc
mov
jmp
sub
sbb
std
subl
test
fistl
jl
out
xchg
push
ljmp
mov
pushf
ja
mov
xor
jecxz
xchg
cmpb
jle
adc
outsb
mov
popa
jecxz
ljmp
mov
jno
add
xchg
adc
add
pop
sti
fidivrs
subl
push
sbb
aaa
inc
cmp
jae,pn
jl
mov
xor
xchg
pop
jecxz
mov
or
jl
jp
pushf
loopne
sbb
push
xchg
pop
sahf
sbb
lcall
lods
cwtl
dec
fistpll
push
xchg
cld
cwtl
js
jge
loop
ror
cmp
mov
ret
xchg
imul
mov
ja
idivl
sbb
or
loopne
mov
push
scas
pushl
stc
jp
sub
es
cmp
xor
cmpb
stos
aam
xchg
xor
je
lcall
jecxz
insb
idivl
push
mov
sbb
lock
or
sub
hlt
cmp
lcall
lock
test
shlb
lock
jg
inc
insl
in
mov
gs
cli
in
das
jmp
or
ret
mov
ret
mov
adc
mov
imul
jecxz
mov
sub
or
incl
inc
and
stos
mov
dec
imul
inc
push
fwait
loop
fisubs
push
movb
das
fdivs
shlb
fidivl
in
stc
xchg
add
and
mov
pop
and
cmp
sub
cmp
mov
cld
fildll
mov
sbb
mov
sysret
push
loop,pt
in
pop
std
mov
shlb
cmp
fdivrl
movsl
scas
pop
sbb
iret
outsb
test
jbe
xor
test
iret
cli
nop
fdiv
scas
data16
in
sub
xchg
jp
jg
cs
test
int3
mov
sbb
fnsave
pop
insl
push
xlat
cmp
adc
js
fildl
lea
sahf
mov
decb
xchg
scas
push
sbb
inc
fxam
inc
pop
mov
das
cmp
andl
push
ds
test
test
sbb
call
xchg
ret
xlat
cmpsl
mov
mov
xchg
mov
mov
mov
andps
mov
mov
out
push
xor
ljmp
stos
into
mov
cmp
push
movsl
jmp
test
xchg
test
pop
jbe
cmp
scas
imul
and
xor
or
jp
sbb
push
jl
cmp
push
xlat
dec
sub
clc
dec
jno
cli
popa
sub
mov
int
mov
push
cmp
xor
adcb
or
rolb
pop
sahf
cmp
cltd
inc
subl
add
push
xchg
in
dec
mov
js
inc
cmp
xchg
and
ljmp
fnsave
fstpt
lret
and
add
dec
inc
sub
adc
rolb
xor
cmc
out
pop
addr16
outsl
clc
aaa
leave
mov
rorl
daa
xchg
scas
push
sbb
lret
js
pop
sub
loope
dec
xchg
test
mov
or
pushf
sub
call
ret
mov
push
pushf
cld
sarb
mov
subb
jb
loop
icebp
inc
bound
mov
dec
icebp
mov
push
sbb
pushf
dec
cmpb
mov
add
mov
rorl
movsl
jno
xchg
es
sub
cmp
data16
or
adc
mov
fiaddl
xchg
int
inc
sarb
or
sbbl
cltd
sbbb
negl
pop
sub
les
stc
enter
dec
push
xor
shll
lret
jae
add
xchg
mov
pop
inc
mov
push
cs
push
fistps
xchg
imul
cwtl
shlb
jp
push
int
movsb
pop
or
movsl
xchg
dec
pusha
push
pop
lods
ror
dec
add
mov
and
aam
xchg
xor
mov
mov
pop
or
sub
jb
adc
mov
ret
sub
int3
divl
ret
adc
push
push
ret
stos
sub
push
inc
and
mov
inc
cli
push
mov
out
popa
inc
and
xchg
dec
aam
lret
rorb
cltd
push
mov
or
daa
pop
sti
lods
cmp
les
pop
scas
inc
jl
fbstp
push
xchg
fsubl
cltd
pop
movsl
mov
out
test
loop
sbb
outsl
push
add
sti
sbb
xor
adc
into
lods
push
mov
and
ljmp
scas
lds
add
out
or
mov
ret
es
inc
stos
movsl
pop
in
add
hlt
mov
jp
xor
aas
ficoms
jb
daa
imul
sahf
enter
mov
inc
mov
jo
push
mov
sub
cmc
dec
mov
mov
pop
lods
out
rcr
mov
cmc
fwait
xchg
inc
movsl
sub
mov
std
mov
adc
outsl
sub
sahf
adc
sub
lods
stos
sub
xchg
ss
fwait
pop
insl
jmp
aas
repz
int
jns
daa
fdiv
mov
test
mov
imull
sub
lds
das
and
dec
pop
dec
jbe
jle
loop
xchg
aam
cmpsl
call
out
fdivr
ffree
cmp
push
xor
push
test
sbb
cmpsl
outsb
mov
mov
cld
shll
add
jp
pop
add
dec
rcl
jae
mov
movsb
cli
out
mov
inc
pop
adc
sbb
mov
aam
jecxz
lock
out
mov
xchg
ret
xlat
or
cmp
aaa
cld
cmp
xor
jb
sub
loop
call
jb
cmp
push
hlt
stc
mov
sbb
sbb
fdivr
leave
ret
mov
add
mov
stc
xchg
dec
pop
cli
popa
mov
mov
inc
aam
adc
fiaddl
xchg
pusha
out
sbb
mov
lock
addr16
cli
xor
sbb
xchg
mov
jecxz
jg
cmp
arpl
cmpsb
fistps
fistpll
out
fucomip
cltd
mov
insb
pop
xor
insb
fidivrs
push
xchg
hlt
test
inc
outsl
ficomps
int
sbb
push
ja
mov
lahf
sbb
mov
sub
mov
sahf
lock
into
xchg
fisubs
mov
sub
pop
dec
sub
shlb
sahf
rcl
jne
repnz
ja
sbb
pop
dec
stos
test
mov
push
pop
jg
add
mov
and
xor
mov
fmull
add
jo
aaa
movsb
dec
push
push
and
pop
jg
sub
shrl
mov
stos
sti
shlb
push
insl
cmp
adc
clc
mov
jo
pop
pushw
mov
jno
out
jb
enter
jae
cmpsb
hlt
jp
jl
push
iret
jmp
lods
and
or
int3
dec
or
dec
sbb
dec
push
inc
cwtl
aas
sub
mov
scas
inc
int3
daa
mov
cmpsb
lock
push
dec
mov
nop
jmp
enter
jb
aad
xor
ljmp
dec
cltd
cmpsl
sbb
dec
icebp
and
or
push
pop
fs
pop
adc
adc
add
imul
cs
aad
push
jo
pop
push
mov
sbb
xlat
gs
cmp
lahf
push
jns
aaa
addr16
sub
cmc
add
fcoms
sbb
fistpl
out
js
sub
sub
sbb
xchg
in
clc
leave
jbe
mov
or
or
das
scas
sahf
hlt
push
iret
add
data16
rolb
je
inc
mov
cmp
xor
jge
icebp
mov
andl
iret
andl
pop
movsb
hlt
pusha
mov
and
jb
push
cmp
lods
jne
jbe
jns
int3
jo
enter
std
jecxz
bnd
push
sbb
or
sbb
push
mov
adc
mov
iret
sbb
jmp
test
enter
sub
dec
daa
dec
xor
xchg
push
mov
cld
shll
aas
add
ret
test
jmp
or
and
push
ficomps
scas
jo
dec
jnp
iret
outsb
pop
cwtl
test
or
xor
sbb
xor
add
dec
add
sub
cmp
jne
shld
ljmp
xor
rorb
movsb
cmp
adc
cs
pusha
das
dec
mov
mov
mov
rcrl
testb
add
rcl
dec
loope
inc
or
int3
sub
xor
jnp
mov
mov
lea
jl
jne
and
shrl
or
sub
shl
scas
jp
lahf
aam
inc
pop
out
xchg
push
std
out
pop
mov
icebp
inc
sbb
test
in
pusha
rorb
cs
sbb
inc
cs
add
aas
xchg
mov
ja
push
fsubl
cmp
mov
stc
jle
mov
pop
cmp
gs
sbb
dec
int
xor
out
mov
pop
shll
adc
cs
movsl
sub
je
scas
scas
push
movsl
adc
push
call
pop
jbe
push
mov
orl
js
dec
fldenv
into
xchg
in
and
andl
movsb
sahf
inc
testl
or
in
inc
mov
xchg
jb
adc
out
push
out
pop
adc
xchg
popf
fcoms
inc
out
inc
mov
nop
into
jle
jb
fwait
stc
sub
fidivrl
jl
push
stos
into
loop
mov
lret
test
or
ret
add
push
xlat
ljmp
cmc
pop
inc
pop
hlt
sbb
lea
std
into
mov
xchg
aad
mov
es
icebp
dec
sub
mov
das
add
outsb
or
inc
movsb
sarl
or
movsl
inc
icebp
mov
outsb
mov
cmp
dec
xor
jb
mov
push
push
sbb
out
pushf
outsb
pop
hlt
rclb
cmpsl
gs
mov
out
icebp
ljmp
fstpt
rcr
pop
ror
adc
mov
shll
aad
imul
shll
test
or
push
test
js
jne
lods
mov
and
ja
out
sbb
test
xlat
mov
jno
push
aas
test
jb
xchg
out
cmp
sbb
lock
mov
or
movsl
fadds
lahf
xchg
or
lret
lods
add
jnp
jmp
jl
push
sub
lods
adc
sub
mov
loopne
xor
xchg
cmp
or
fiaddl
ss
pop
pop
and
jnp
negb
das
push
add
add
cmc
jl
cmc
imul
lds
fstl
hlt
test
test
mov
mov
jae
pop
sbb
call
mov
and
mov
push
es
push
dec
pop
add
jmp
js
into
lcall
pop
aam
shll
lods
mov
les
out
mov
repz
sbb
fsubrl
cld
inc
fwait
aaa
sar
cmc
lret
mov
pop
in
icebp
push
mov
inc
cltd
mov
xor
pusha
push
test
inc
test
cmp
dec
jns
sub
add
jbe
dec
dec
out
adc
mov
jg
imul
testl
jp
dec
mov
mov
or
or
mov
aaa
leave
push
add
int3
mov
shll
or
push
insl
outsb
pop
cmpsb
into
cli
lret
fbstp
in
xor
jle
imul
dec
xor
lods
mov
in
pushf
and
or
arpl
aas
jge
or
iret
imul
mov
sub
lods
testl
testl
xchg
mov
pop
jmp
sbb
mov
es
daa
scas
mov
nop
std
ret
jb
cmp
fiaddl
push
xchg
stos
jp
inc
mov
aam
imul
sarl
pop
aam
xchg
lods
mov
mov
icebp
mov
rclb
lds
jnp
pop
dec
xor
push
dec
imul
cmp
xchg
lods
fsubr
aad
sub
sbb
jl
pop
cmc
jb
dec
mov
pop
mov
arpl
jne
push
fidivrl
sbb
add
mov
outsb
inc
jae
cmp
test
bound
adc
and
pop
cld
jo
xor
movsb
mov
or
jmp
dec
rolb
or
lret
rcrl
dec
add
addr16
sbb
jns
cli
cwtl
adc
sbb
jne
cli
sub
imul
adc
sahf
movsl
jb
aas
lcall
push
jnp
push
ja
sbb
add
pop
jne
sbb
je
xchg
jl
mov
add
shlb
cltd
dec
jnp
sub
fdivs
xchg
mov
loope
mov
jnp
xor
out
inc
adc
xlat
add
inc
jg
and
push
push
add
adc
enter
cmp
inc
inc
lcall
sbb
loope
cmpsb
stc
les
jl
in
inc
pushf
mov
pushf
add
mov
dec
out
gs
cltd
rcrb
xor
or
mov
pop
pop
test
stos
sbb
push
scas
or
inc
lahf
std
mov
pusha
test
cmpsl
dec
lret
jmp
aaa
and
lea
sbb
sbb
int
test
xor
scas
lret
cli
inc
xchg
dec
int3
stos
into
out
imul
cmc
mov
call
xor
mov
mov
sbb
leave
sti
adc
lcall
cmp
fs
jnp
jmp
iret
or
test
sbb
in
or
or
mov
jle
leave
ljmp
mov
outsb
out
cmp
adc
and
push
push
sbb
leave
popa
nop
jo
sti
jmp
or
and
dec
mov
repz
pop
mov
mov
dec
mov
test
xlat
dec
inc
push
jne
loop
leave
add
jo
test
inc
cmpl
out
data16
push
loopne
mov
repz
cmp
jg
shrl
xchg
xchg
jl
jg
xchg
xchg
movsb
out
dec
inc
insb
push
es
jl
ss
mov
pop
repz
jl
mov
fs
imul
mov
or
mov
inc
sub
inc
push
xchg
gs
pop
repnz
mov
jo
mov
xor
jmp
sbb
lret
not
push
mov
dec
jecxz
lahf
mov
jne
mov
popa
mov
iret
jge
adc
push
inc
push
fidivs
jb
inc
loope
popf
jl
jp
mov
inc
ja
dec
sahf
mov
idivl
scas
add
shlb
sbb
cmpsl
mov
fwait
push
gs
adc
push
roll
mov
push
jbe
ficoms
mov
xchg
add
das
in
in
mov
fadd
jbe
das
push
in
mov
add
dec
push
sub
pop
out
jecxz
sbb
sub
scas
bound
push
lock
call
lods
sahf
and
mov
dec
int
mov
loope
pushf
ficoml
js
dec
mov
adc
int3
jp
cwtl
je
adc
and
push
aam
shrb
mov
xor
and
out
push
jae
leave
mov
call
or
mov
xchg
mov
test
repnz
mov
rcrl
or
jne
out
arpl
or
push
repnz
mov
scas
cmp
dec
mov
jp
jo
rcrb
idivl
xor
lods
sub
sbb
out
cwtl
jnp
sar
shrl
and
hlt
mov
repz
aam
xchg
xchg
out
push
push
xchg
push
adc
pop
xchg
lds
mov
mov
adc
jecxz
add
dec
lock
out
in
outsl
loop
xchg
pusha
jb
dec
cmp
sbb
mov
push
sbb
sub
or
or
fadds
jne
test
mov
cmpsl
push
sbb
js
shll
push
mov
out
mov
pop
stos
mov
repz
sbb
mov
lea
daa
inc
pop
iret
int3
es
xor
xlat
jnp
ret
pop
mov
lock
shll
adc
insl
aas
test
out
pop
cwtl
pop
in
scas
aad
lock
cmp
fcmovnbe
jb
lea
std
das
stos
sbb
pop
data16
cld
mov
sbb
dec
xorl
jmp
shr
cltd
dec
jmp
nop
mov
jbe
mov
loop
jno
in
and
loopne
shr
pusha
bound
jae
xchg
aaa
push
mov
aas
dec
sub
rcrl
sahf
cmp
gs
push
jns
repnz
jge
bound
int3
shrl
popf
ret
cltd
out
ret
push
jns
xlat
rcr
ficoms
stos
add
adc
adc
aad
xor
test
cli
sub
xchg
mov
je
xchg
cld
dec
ja
mov
lret
push
or
mov
add
pop
ret
xchg
addr16
in
out
mov
or
popl
dec
push
jecxz
cs
mov
jmp
inc
mov
ljmp
ret
xchg
inc
push
inc
pop
jl
loopne
mov
mov
jae
mov
mov
sbb
mov
sub
orb
mov
in
dec
aaa
sub
cmp
pop
pop
sbbb
adc
sub
sbb
mov
or
add
mov
lock
sub
imul
rcll
test
and
push
fwait
mov
xchg
cmp
sub
inc
pop
xchg
xchg
sub
fidivrs
xlat
dec
out
das
sub
xor
inc
aaa
lods
mov
xor
push
ja
jge
cli
jg
sbb
inc
mov
lds
jns
jno
and
xchg
cltd
cmc
mov
daa
xchg
sub
mov
add
inc
inc
movsb
roll
cs
out
mov
enter
mov
out
clc
or
dec
aad
mov
les
stc
outsl
or
fisttps
shll
sub
jae
push
ror
pop
sub
inc
out
dec
stos
das
inc
shlb
aad
or
push
lea
sbb
jg
ss
mov
jg
mov
jmp
inc
sar
adc
cmp
iret
push
nop
sahf
push
movsb
ret
hlt
pop
mov
add
mov
mov
je
lods
sub
out
sbb
jb
mov
xor
inc
sbb
bound
inc
mov
push
dec
mov
nop
xchg
sub
lret
pop
jnp
call
out
in
add
test
rorb
pusha
test
xchg
insl
add
inc
fwait
cmc
imul
mov
push
pop
lods
fucomi
loop
jne
mov
and
xlat
testb
mov
jno
pop
out
push
mov
mov
es
inc
stos
aaa
pop
mov
jle
jmp
xchg
cmp
cltd
ds
push
ret
lcall
fisttps
jecxz
jnp
call
out
jle
mov
mov
push
xchg
imul
sub
test
mov
in
cmp
xchg
jns
xchg
and
daa
arpl
icebp
xlat
adc
mulb
sbb
or
push
dec
jb
mov
into
xchg
lret
mov
jns
movb
adc
adc
xor
je
pop
pop
or
jno
rorb
clc
popf
sub
or
mov
and
jmp
stc
mov
jle
inc
and
or
nop
jl
clc
jecxz
add
push
sub
push
sbb
cmp
out
cli
js
hlt
and
stos
mov
enter
adcl
and
mov
ds
aas
clc
dec
test
int
sti
jbe
push
scas
and
sub
mov
mov
pusha
sbb
mov
in
shlb
add
test
push
in
test
icebp
xchg
pop
pushl
nop
leave
sti
fildl
push
cmpsb
lods
dec
scas
and
and
popf
roll
rcrl
test
lret
inc
aas
mov
stc
insb
inc
in
das
cmpb
add
mov
mov
popf
and
dec
pop
and
mov
lahf
mov
adc
and
mov
in
pop
call
daa
test
add
loopne
test
imul
push
and
icebp
je
sbb
push
bound
mov
in
xor
in
repnz
xlat
mov
jp
lcall
cmp
shll
in
in
fidivrs
inc
aad
xor
jno
cli
ss
mov
test
or
test
adc
in
or
push
mov
cltd
in
psubsb
aam
imul
flds
dec
lods
and
cmp
das
cwtl
in
out
cmpsl
adc
ffree
and
test
jecxz
movsb
repnz
and
sub
or
cmp
shlb
clc
out
icebp
mov
sub
dec
test
inc
add
cmp
popa
xor
mov
xchg
mov
scas
xor
sub
jg
mov
mov
mov
cmc
jae
mov
adc
icebp
jp
adc
iret
adc
push
loop
xchg
inc
adc
dec
add
clc
jns
add
mov
nop
in
ja
ds
loop
and
adc
xchg
and
sbb
jnp
ja
das
in
push
adc
es
lcall
pop
sbb
mov
lret
arpl
hlt
adc
pusha
ds
pop
cmpsl
lods
js
es
int
aad
jns
xchg
push
pop
mov
sub
mov
fldenv
hlt
push
jae
rcrl
mov
pop
xchg
das
pop
pop
inc
movsl
int
scas
clc
shll
or
stos
jno
sahf
cmpsb
inc
cltd
ret
mov
inc
cli
mov
mov
movb
rclb
push
pop
ret
dec
div
bnd
jmp
shll
scas
test
jge
mov
frstor
shlb
push
add
fs
cmpsl
cmc
mov
inc
enter
sbbb
cmp
out
cmp
dec
jp
stc
sbb
cmp
pushf
mov
or
movsb
sub
pop
ret
lcall
andb
push
inc
or
test
sub
sbb
sub
push
fpatan
nop
stc
shrb
mov
xchg
pop
mov
iret
sbb
push
mov
xlat
mov
fs
out
dec
bound
pushf
clc
adc
mov
add
jns
sub
popf
cmp
fwait
ja
or
shl
in
push
lret
pop
xchg
fs
xor
and
inc
add
and
cwtl
push
subb
pop
push
pop
mulb
mov
fidivrl
cmc
pop
jecxz
imul
lahf
mov
mov
ja
lret
or
enter
push
nop
cmp
mov
inc
dec
dec
stc
addr16
jmp
arpl
pop
lret
push
test
jecxz
xchg
add
push
lods
insb
mov
lds
mov
xor
in
pop
aam
stos
hlt
jae
pop
push
icebp
mov
fucomip
sub
xor
xchg
insl
ret
scas
add
rcrl
in
fstl
cs
jne
push
sti
popf
or
insl
adc
xchg
pop
stos
mov
sbb
ret
aaa
cmp
jg
in
insb
pop
adc
scas
movsl
pop
cmp
sub
jp
nop
jns
dec
or
xor
cmp
sub
repz
xchg
cmpsb
in
inc
lods
adc
lods
sti
mov
xchg
pop
movsl
out
std
adcb
arpl
xchg
or
mov
repz
mov
dec
mov
pop
mov
imul
dec
out
inc
lahf
dec
inc
ret
push
subb
jns
lret
aad
cmpsl
push
lock
fcmovu
ljmp
xchg
repz
out
jmp
lret
loopne
lods
pop
call
inc
ja
gs
popa
mov
add
inc
push
xchg
mov
jl
push
inc
xchg
fidivs
push
lahf
xchg
jecxz
pushf
cmp
pop
and
sbb
jnp
test
rorl
stos
add
call
stos
aas
mov
and
sub
pushf
leave
xchg
pop
sub
add
aad
inc
vcmpss
lret
test
enter
sbbb
push
inc
dec
dec
push
arpl
cmc
fcomps
add
mov
in
shll
pop
sbb
dec
dec
sub
jmp
mov
sbb
test
mov
jle
xchg
in
mov
idiv
inc
jge
shr
xchg
mov
bound
les
mov
cmpsl
aad
mov
cmp
push
hlt
inc
jge
or
ffree
nop
add
ljmp
popa
inc
arpl
push
mov
mov
arpl
lods
mov
ja
sub
push
popa
adc
iret
jg
fldcw
mov
push
scas
jg
push
orl
sti
dec
adc
test
jno
loope
fsubr
or
outsl
pushf
mov
enter
les
cs
xor
rcll
jmp
fwait
dec
roll
cltd
xchg
inc
shll
mov
loope
pop
xchg
jp
subb
pop
into
addr16
mov
dec
jge
pop
inc
adc
stos
mov
shlb
lds
mov
ss
and
loope
repnz
iret
add
fnstenv
fisttpll
cmp
ret
cmp
sub
sahf
inc
xchg
pop
push
sbb
xlat
pop
sbb
push
negb
fcmovnb
add
jns
push
scas
dec
jge
or
adc
push
fs
fcom
and
shrl
pop
dec
push
adc
jmp
cli
shll
jp
xor
xchg
in
dec
pop
mov
mull
xor
das
inc
test
sbb
mov
repz
shll
ret
cmp
pusha
stos
addl
in
mov
sbb
cmpsl
clc
jmp
dec
movsb
lods
push
inc
bound
xchg
sub
idivl
xchg
and
out
add
inc
hlt
mov
push
ret
lcall
push
inc
popa
movl
sarb
arpl
xchg
xor
or
sbb
inc
pop
jnp
in
negl
xchg
inc
mov
or
or
sub
jo
nop
jle
and
jno
pop
cmpsb
ds
xchg
lahf
xchg
jmp
dec
out
nop
out
pop
std
dec
sub
jg
dec
xor
outsl
das
dec
cmpsl
jg
mov
pop
mov
xchg
xlat
test
mov
dec
les
push
cwtl
fstp
scas
xor
cmp
insl
push
mov
and
shll
rsqrtps
in
movsl
add
cwtl
filds
jns
aaa
filds
add
dec
pop
mov
push
out
mov
test
fs
arpl
pop
cmpl
dec
int
scas
dec
das
sbb
sub
stc
clc
xchg
inc
sbb
xor
dec
and
pop
cmpsl
int
jno
sbb
jmp
push
out
jbe
sbb
gs
arpl
mov
aad
dec
enter
aas
decb
inc
insl
sbb
mov
mov
xchg
repz
xchg
les
andb
dec
cmp
shrl
lds
shrl
xor
adc
and
xchg
cltd
or
dec
mov
out
inc
cmp
fists
imul
outsb
or
xlat
push
icebp
insl
sub
adc
mov
mov
popl
hlt
sub
xchg
repz
push
cmpsb
adc
and
xchg
insl
sub
push
lret
and
mov
mov
add
xchg
lods
xor
pushf
fdivrl
jecxz
hlt
sub
lds
push
sub
or
mov
or
add
out
and
clc
pop
movb
mov
sti
lock
xor
inc
and
mov
in
jns
out
lods
inc
mov
repnz
or
jg
out
movd
xchg
aaa
jnp
mov
mov
pushf
pusha
mov
fwait
inc
cmpl
mov
in
jnp
adc
adc
repz
and
mov
xchg
xchg
aad
push
sti
jp
push
sub
and
std
dec
pop
popf
or
jmp
fcmovnb
out
rcll
xchg
cs
stc
and
imul
jne
pop
sub
sahf
or
rcll
imul
mov
rolb
imul
jno
test
ja
and
mov
pop
mov
int3
jbe
sub
xchg
pop
xchg
xchg
mov
cltd
sbb
adc
push
or
into
shl
popf
das
sub
test
xor
out
lcall
loopne
mov
adc
jno
add
test
iret
js
out
or
add
push
lcall
popfw
dec
insl
cmp
pop
jne
mov
jg
dec
fwait
push
sbb
push
jo
dec
test
movsb
int3
into
leave
jle
sbb
test
cli
aad
xor
mov
popf
xchg
inc
arpl
pop
addr16
lods
jge
shl
lcall
push
fs
shrb
cwtl
xchg
adc
push
hlt
inc
popa
imul
add
daa
xor
mov
jp
mov
aam
cmp
js
ljmp
imul
daa
fmull
mov
out
xorl
rolb
jmp
xchg
and
pop
insl
mov
cmp
mov
aaa
idivl
and
js
mov
rcl
ret
jge
lods
mov
adc
int
add
pop
mov
mov
mov
ret
xorl
stos
fists
in
leave
inc
mov
xchg
sbb
js
mov
xor
adc
inc
jb
addl
repnz
imul
lahf
jp
push
leave
add
lds
dec
incl
ljmp
fcmovnb
sub
test
mov
inc
xchg
insb
and
stos
stos
shl
movups
ret
lahf
pop
dec
test
das
jge
sbb
lcall
enter
imul
mov
movsb
sti
fistpll
fsubrl
repz
outsb
data16
ret
add
push
testb
xchg
cmpb
push
loop
xor
and
and
leave
sub
fs
popf
sub
pop
or
add
call
sub
out
pop
mov
ss
out
pop
push
jl
sub
pop
jns
jle
bound
lock
leave
xchg
cs
fadds
lcall
es
and
and
insb
push
mov
mov
rorb
loope
push
adc
jmp
xchg
mov
divb
inc
adc
flds
into
ds
lock
ds
out
out
push
mov
mov
pop
adc
sub
ds
popa
ljmp
gs
sarl
inc
add
xchg
stos
xchg
push
insb
xor
push
sahf
hlt
cwtl
inc
mov
das
pop
push
push
imul
or
sub
mov
add
cmp
dec
andl
inc
mov
in
mov
mov
push
dec
xor
sbb
lcall
mov
sub
cmc
mov
cmp
mov
or
jmp
or
mov
rorl
or
mov
cmp
jns
cmpsl
mov
push
sbb
and
jae
subb
inc
add
jae
xor
jae
bnd
test
movsl
mov
add
sbb
xchg
add
loope
pop
subb
lods
test
in
jae
push
xlat
ret
int
movl
mov
cmc
jg
xlat
sub
mov
dec
fsubrs
es
pop
loop
push
in
movups
mov
cwtl
jecxz
stos
jbe
jb
mov
mov
pop
sbb
lret
and
shll
jg
push
pop
test
in
negb
das
inc
push
mov
xor
fidivs
or
sti
popf
sbb
add
push
mov
arpl
insb
sub
lods
push
dec
gs
push
push
pop
pop
cltd
fistpl
cmpsb
and
jo
into
pop
sarb
insl
and
push
es
sub
sti
cmp
fimuls
mov
loopne
xor
pop
sub
repz
and
std
push
push
cmp
ja
je
loope
cltd
sarb
lea
cmp
inc
dec
cld
aad
ljmp
insl
fists
popf
inc
sub
call
int
and
pop
adc
push
jge
lock
xor
pop
mov
test
push
jae
mov
fnsave
mov
inc
stc
xchg
cli
popf
sub
inc
push
mov
adc
fadds
pop
mov
bnd
cld
pushf
xchg
jg
mov
jge
xchg
scas
sub
cltd
jecxz
iret
pop
jb
mov
mov
adc
inc
cs
inc
fwait
cltd
inc
cmpsb
repz
xchg
fcomps
jns
inc
cli
data16
or
mov
mov
or
cmp
cltd
adc
imul
cmpsl
mov
push
gs
cmp
call
lret
bound
fwait
adc
ds
jmp
mov
push
je
dec
lock
mov
xor
xor
mov
es
out
adc
and
mov
std
fwait
cmp
adc
mov
clc
aam
adc
mov
cmp
inc
lret
insb
sub
jns
fnstenv
pushf
mov
test
sbb
jbe
test
stos
dec
and
push
cmc
adc
lds
out
sbb
mov
iret
aam
pop
and
rclb
popf
xor
mov
out
lea
repz
add
jmp
mov
push
sbb
push
repz
clc
sub
adc
mov
movsl
cs
fnstcw
shlb
out
push
repz
lret
scas
fidivs
adcb
cmc
stos
in
ret
mov
stos
popf
sti
icebp
cmp
or
jae
popf
rolb
xor
mov
or
cmpsl
inc
pop
out
adc
sub
jge
pop
movsb
jne
stos
cltd
fistpll
xor
xchg
test
std
shrl
push
insb
mov
stos
call
xor
test
sti
stos
lock
sub
jbe
jl
pop
cmp
sub
fcmovbe
cmp
mov
jg
fcmovb
jb
xchg
pushf
lcall
cmp
lret
stos
arpl
scas
lea
lods
xor
jp
mov
xlat
push
mov
test
sub
into
jmp
cmp
insb
pop
movsb
outsl
cmpsl
cmp
stc
jns
lret
popa
mov
test
and
mov
cmp
push
mov
cltd
mov
stc
xor
std
xchg
cmpsl
xchg
pusha
sub
inc
xchg
jae
push
push
xchg
cltd
xor
jae
jae
nop
and
adc
dec
cwtl
push
pop
mov
test
mov
sbb
mov
pop
cmp
enter
es
sub
test
mov
pop
movsb
xor
or
dec
ja
daa
fdivs
inc
aas
shrb
pop
arpl
lret
dec
push
test
dec
xchg
or
dec
loope
call
nop
xchg
in
testl
das
shlb
mov
ret
lea
dec
or
mov
jle
or
mov
popf
mov
icebp
js
daa
das
jmp
stc
test
insl
mov
out
jo
adc
xor
sub
leave
xchg
or
jg
pusha
add
xchg
and
or
xor
xchg
xchg
or
pop
aas
int
lret
inc
ficoml
rorl
cmp
into
scas
test
movsl
insb
ss
fsubl
mov
xchg
shrl
call
aad
mov
xor
cmpsb
lods
out
push
pop
pop
and
insl
mov
daa
sbb
in
mov
add
push
sahf
loopne
xor
fwait
mov
lret
ja
push
dec
jge
mov
jb
loope
pop
adc
iret
push
nop
lods
les
push
xchg
adc
leave
dec
rcr
xchg
lods
loope
jo
mov
xchg
outsb
jl
lret
ficoms
addr16
adc
pop
cmpsb
imul
pop
xor
push
scas
sbb
rorb
sbb
call
mov
cmpsl
int3
pop
shll
leave
sbb
mov
popa
into
mov
clc
mov
ror
fndisi(8087
repz
adcl
int3
push
push
and
mov
fstpt
ret
adc
aad
dec
iret
mov
dec
sbb
roll
clc
inc
push
push
mov
mov
pop
adc
iret
scas
xchg
rorl
xor
cmp
lahf
or
sbb
lret
stos
push
and
cmc
test
in
push
sbb
repnz
aad
adc
repz
adc
loop
push
or
xor
mov
in
movsl
xchg
xchg
jno
call
xchg
fwait
adc
cmp
pushf
call
pop
movsl
fmulp
movsl
clc
fs
push
pop
mov
movd
push
sahf
cmp
orl
or
aaa
mov
mov
loop
cltd
and
lret
lret
lock
push
flds
jnp
mov
mov
dec
pop
rolb
xchg
test
cwtl
mov
popf
fcoml
push
test
cli
shlb
push
inc
cmp
dec
lock
ret
repnz
cmp
iret
out
sbb
xor
jmp
or
stos
or
sub
add
fnsave
lret
loope
and
cmpsl
xchg
sbb
push
test
xor
inc
mov
addr16
lcall
push
pop
stc
add
testl
inc
test
fld
movsb
cmpsl
loope
decl
stos
cmp
pop
xor
pop
sahf
mov
je
push
scas
and
js
push
in
mov
push
xchg
test
call
fsubp
jg
xchg
jbe
ljmp
inc
xchg
das
loopne
arpl
loope
push
pop
dec
bt
popa
test
les
adc
in
cmpsb
sbb
ss
cmp
repz
mov
jno
les
out
and
pop
xchg
xchg
sarl
in
nop
lcall
and
std
cmp
mov
ljmp
xchg
xrelease
sub
lock
dec
mov
fisubrs
lock
lahf
les
push
out
adc
and
insb
and
or
adc
jae
out
dec
xor
inc
mov
inc
dec
xchg
sar
jnp
mov
xchg
push
lds
push
fcompl
orl
sub
jl
ljmp
jge
jno
dec
fmulp
dec
mov
mov
pop
jg
adc
hlt
cmp
aaa
lock
fdivs
pop
sbb
test
mov
sbb
push
xor
xor
das
push
les
jnp
cwtl
cld
and
xchg
mov
shl
jae,pn
lock
push
loopne
push
jns
mov
call
movsb
dec
fisubrs
nop
push
adc
rol
lock
sub
push
imul
jp
cli
inc
popf
sti
in
xchg
mov
jno
mov
mov
or
jp
dec
in
sub
ds
jne
lcall
mov
cs
popf
push
sbb
repnz
jmp
cmp
je
jmp
xchg
popa
in
lret
loopne
xor
cmp
iret
fildll
lcall
int3
imul
movsl
outsl
mov
cmpsb
in
jb
cmp
and
add
jb
call
int
mov
int3
jb
cmp
mov
inc
repz
mov
das
inc
cmp
test
inc
aam
mov
faddp
cmp
insl
pop
jne
adc
inc
loope
insl
les
repnz
cwtl
pop
rcr
xlat
js
imul
xchg
push
mov
test
mov
and
mov
dec
jecxz
test
std
ja
cmp
rol
fidivs
insb
jge
inc
ror
push
movsb
iret
bound
popf
stos
jp
lods
fildll
fwait
inc
repnz
mov
mov
aad
fwait
push
jbe
mov
xchg
fs
or
or
imul
sub
and
mov
les
cmp
mov
xchg
and
ss
fwait
out
jmp
lods
xchg
jbe
adc
jmp
les
jae
dec
and
inc
inc
stc
out
decl
mov
test
aas
insb
int
jne
inc
inc
xlat
es
in
add
push
inc
mov
sub
les
jl
dec
push
pushf
and
sbb
dec
pop
cmpsb
xchg
inc
lahf
push
outsl
mov
testl
in
sti
sbb
and
stos
xor
jb
lahf
inc
mulb
rolb
xlat
fwait
xchg
mov
std
enter
and
dec
push
jns
outsb
cmp
adc
xchg
and
sbb
in
enter
pushf
or
and
pop
leave
cli
jecxz
sbb
shrb
add
rclb
dec
insb
out
add
and
or
lret
jge
jecxz
or
shlb
dec
cmpl
push
mov
clc
mov
negl
mov
pop
mov
inc
pusha
lcall
xchg
xor
ja
sbb
xor
inc
sub
out
pop
movsl
adc
mov
in
add
add
add
and
mov
pop
pop
outsb
cltd
lods
fadd
pop
mov
imul
xchg
call
mov
daa
and
sahf
test
mov
out
push
cld
movsb
push
xchg
mov
inc
push
xchg
xchg
jmp
mov
or
push
flds
and
lds
ljmp
rol
loop
movsb
mov
ret
ja
adc
andl
aad
pop
scas
lret
add
xlat
ret
insb
xchg
mov
pop
fsub
sbb
fdivrl
pop
dec
push
xchg
movsb
add
into
push
mov
out
sub
das
or
ljmp
xor
cmp
jge
or
and
add
les
jne
in
adc
cltd
divl
cli
sub
add
cs
fdiv
jge
aad
mov
push
test
sarb
sbbl
jmp
mov
fimull
stc
sub
aaa
push
int
ret
xor
in
mov
xor
jno
call
js
and
ret
test
jmp
aas
cmp
xchg
aaa
icebp
int
jmp
loopne
stos
jmp
add
sbb
out
push
push
push
and
xor
lods
std
dec
mov
call
inc
jae
lcall
sub
insl
push
out
cs
outsb
lock
stos
cs
adc
add
cs
pop
icebp
icebp
pop
addb
mov
jmp
cs
dec
dec
lock
push
fimuls
jne
shll
sbb
sub
je
jp
mov
push
arpl
mov
enter
mov
dec
mov
repnz
xor
mov
int3
xor
dec
sub
fldenv
adc
lret
xchg
push
sti
arpl
cwtl
push
or
mov
roll
repz
fbld
fcom
stc
sub
xchg
xchg
and
addr16
push
inc
lcall
jnp
add
sahf
mov
mov
insl
mov
rclb
and
pop
mov
out
sbb
cld
cmp
adc
js
jl
call
xor
push
jp
or
inc
mov
cs
dec
in
and
jae
mov
pop
loop
mov
stos
rcll
push
sub
cmp
lret
je
adc
or
jnp
cmpsl
xchg
xchg
sub
xor
xchg
daa
jno
dec
sub
pop
add
mov
insl
sbb
pop
xchg
mov
aas
xchg
daa
jns
mov
arpl
cld
or
notb
push
pusha
rcll
andb
pop
popl
mov
hlt
in
outsl
mov
add
test
dec
add
dec
mov
gs
xchg
in
cmp
lock
xchg
add
std
outsb
mov
cmp
xchg
or
loopne
xchg
addr16
jae
mov
sbb
insb
fisubl
xor
sub
pushf
sbb
adc
data16
in
outsl
cld
inc
mov
insl
mov
subb
andb
lods
aam
scas
sbb
cltd
loop
out
jle
xchg
mov
mov
loop
or
rcrb
mov
fnsave
out
mov
rcll
test
psrad
ret
popf
mov
mov
aas
lcall
leave
mov
xchg
pop
adc
nop
pop
scas
jne
fmulp
mov
je
or
cmpl
or
pop
pop
jae
mov
sbb
push
jo
mov
cld
xor
gs
mov
push
inc
jl
loope
push
sahf
or
cmp
mov
xor
lock
mov
js
add
fistpl
rcll
fisubrs
jg
push
lods
jno
mov
icebp
jo
cmc
inc
lret
loope
iret
loopne
sbb
sbb
scas
gs
andb
cmc
add
push
mov
jbe
xchg
in
xor
adc
mov
jbe
das
ljmp
dec
lea
ljmp
insb
rcll
cmp
roll
data16
adc
push
cmp
or
into
push
cmp
pushl
inc
rcrl
push
rcr
mov
lea
adc
jp
cli
adc
xorl
insb
sbb
psrld
fidivs
xor
xchg
jns
mov
mov
adc
shll
sbb
and
mov
sub
adc
mov
mov
adc
test
in
xor
xor
stos
and
les
mov
mov
push
jg
jbe
lcall
movsl
sti
mov
daa
cmp
les
mov
jns
adc
push
sub
aam
xchg
fucomp
mov
xor
lods
imul
and
jbe
or
mov
dec
enter
sar
add
movsl
popa
push
fcomip
lcall
popf
jmp
cwtl
mov
cmp
loope
mov
imul
ljmp
addr16
ret
pop
sbb
or
or
mov
xor
ret
xchg
push
iret
jle
sub
out
adc
js
mov
jmp
xchg
push
and
in
movb
xchg
push
insb
scas
out
inc
mov
cmp
jnp
cmove
lcall
and
jg
ret
pop
in
xor
adc
ss
mov
sub
jp
mov
jmp
lods
addr16
mov
xor
lods
mov
je
and
xlat
enter
out
fistl
mov
stos
adc
out
xchg
cmc
mov
mov
scas
cmc
test
and
outsb
ds
xor
mov
dec
scas
or
xchg
icebp
fsubl
fmull
dec
pusha
mov
sahf
sbb
xchg
mov
mov
into
mov
or
movsl
push
fmull
imul
aad
dec
cmc
adc
ljmp
push
mov
cmpl
and
shll
adc
mov
jne
mov
dec
in
aas
sarl
dec
mov
pop
jne
out
pop
shrb
jmp
push
fld
out
andb
out
sarb
xchg
arpl
inc
imul
clc
repnz
dec
or
inc
cltd
sbb
inc
popfw
xor
into
mov
cmp
pop
cmp
sti
jbe
sbb
rcll
rorl
push
push
mov
lods
cmp
push
int
pop
sbb
pop
cmp
ss
arpl
mov
sub
xchg
fwait
cmp
mov
mov
in
pop
and
iret
fistpll
jo
lahf
adcl
pop
jnp
pop
sub
rcl
lret
sub
push
sub
in
je
sbb
cmp
movsb
stos
inc
int
ss
daa
jl
sub
sub
inc
sub
lahf
ret
sub
subl
push
or
nop
lea
xor
xchg
std
negl
cmp
clc
imul
push
popf
out
and
into
xchg
push
push
repz
pop
sti
adc
xor
mov
and
mov
jp
arpl
aad
dec
pop
mov
mov
inc
push
or
pushl
ror
test
aaa
jne
mov
xchg
jmp
cmp
lods
mov
adc
roll
dec
popa
mov
add
cpuid
nop
pop
lock
add
repz
lcall
xchg
aaa
or
lcall
testl
icebp
test
aad
sbb
ror
shll
xchg
subb
jmp
jbe
std
cmp
lods
add
and
mov
push
leave
add
les
cmp
cmc
testl
jmp
mov
push
and
in
aaa
add
or
addl
scas
out
scas
jle
scas
loope
fisttps
jp
lcall
mov
add
into
fiadds
xchg
xchg
xor
pusha
ret
mov
mov
pop
inc
movsl
push
add
xchg
xchg
jmp
mov
aad
test
enter
in
sub
inc
test
and
mov
xchg
jg
mov
jns
sarb
xchg
dec
out
fists
mov
xlat
mov
sete
dec
sbb
mov
pushl
rcrb
mov
xor
dec
out
mov
fdivs
mov
xor
jle
or
es
imul
popf
stc
icebp
aas
cmp
cmp
adc
mov
adc
jge
mov
push
xchg
aam
inc
sbb
inc
loop
test
pop
icebp
imul
xchg
dec
gs
xorb
jge
lock
sub
imul
outsl
xchg
sbb
iret
mov
xor
stos
stos
adc
pop
dec
in
xchg
adc
pop
cld
push
add
insl
pop
mov
cmp
add
andl
adc
jbe
or
in
jmp
xor
push
pop
loopne
cmp
jge
or
pop
popa
xchg
jp
xor
shrl
out
imul
xor
daa
addb
xchg
push
cmp
sbb
int3
sti
popa
scas
mov
xchg
jnp
test
dec
sub
xchg
lahf
in
sahf
xor
mov
in
fcoml
cli
xlat
xlat
sub
imulb
mov
cmp
mov
xchg
push
pop
fwait
push
dec
jl
loope
dec
lods
sarl
sbb
push
dec
cmpsl
cmp
adc
icebp
inc
repnz
jmp
adc
xchg
and
mov
sarl
lds
or
neg
jg
lret
push
jmp
fnsave
mov
jecxz
in
xchg
mov
scas
xchg
or
mov
jo
es
stos
push
jp
bound
xchg
xchg
sub
rcl
xchg
pusha
shlb
push
pop
out
xorl
dec
add
xchg
inc
dec
push
in
hlt
adc
sub
pop
lock
xchg
daa
jmp
testb
pop
cmpsl
ror
loopne
das
mov
jmp
mov
lret
into
cmp
nop
cmp
push
inc
addr16
sbb
call
mov
fs
ljmp
push
ds
sarl
stc
das
loop
xchg
push
lea
ficompl
or
mov
mov
test
addl
jg
mov
sbb
mov
jg
mov
or
jne
jb
lahf
sub
hlt
push
push
vmovdqu
aaa
xchg
mov
ss
push
push
cmp
jnp
cmp
loop
inc
jne
stos
jle
sbb
nop
into
and
enter
and
popf
sub
jne
lret
mov
pusha
rcl
ss
mov
xchg
inc
jne
sbb
pushf
je
js
icebp
and
mov
lods
jnp
adc
imul
insl
mov
lea
mov
jle
stos
nop
lds
jne
fnstcw
jge
push
bound
mov
sbb
jmp
cwtl
fninit
inc
imul
ret
addr16
cmc
fisubs
fidivs
ja
das
jge
xor
add
mov
cmpsb
push
pop
mov
adc
pushf
call
shrb
ljmp
push
test
iret
out
xchg
js
jnp
sub
stos
mov
sub
jae
sbb
aad
push
repnz
shrl
scas
xchg
inc
iret
es
and
mov
repz
jge
sarl
mov
xor
add
bound
or
jmp
ljmp
pop
inc
xchg
mov
jg
xchg
mov
test
movl
adc
fisttpll
sbb
lods
insb
jne
lock
jb
pushf
xlat
scas
cwtl
ret
sbbb
and
incb
sbb
aaa
add
push
cld
xor
cmp
push
jp
inc
shlb
jmp
pop
mov
out
jecxz
cmp
out
cmc
xchg
ss
movsl
jge
divb
ss
pop
aam
pop
or
js
les
ficomps
sub
movsl
fidivrs
nop
fsubs
xchg
and
flds
jo
roll
push
inc
jo
sbb
outsl
outsl
sbb
shrb
or
fadds
inc
out
shll
sti
or
dec
xchg
and
dec
mov
rorl
sub
roll
fstpl
cld
or
push
sbb
stos
iret
sbb
xchg
or
mov
fdivp
sbbl
cs
jmp
push
mov
sbb
jg
test
shl
es
sbb
adc
xor
daa
jecxz
ljmp
fsubrl
clc
cli
in
out
cmc
iret
push
xchg
fxam
push
lods
push
inc
aaa
lea
aas
inc
inc
ljmp
inc
inc
inc
int
xchg
cmpb
sbb
or
cmp
mov
pop
out
mov
and
mov
ficoml
orl
and
std
pop
out
idivl
jns
xor
adc
loope
add
out
dec
rclb
shll
movsl
add
into
movsl
jbe
add
jbe
ret
pop
push
call
pushf
xchg
sarb
addr16
jne
push
push
jmp
mov
adc
enter
fildll
xchg
int
and
or
dec
lcall
pop
hlt
jp
xchg
xchg
enter
jp
mov
call
xchg
popa
loopne
xchg
sbb
adc
jg
adc
lret
mov
outsl
adc
sbb
inc
push
popa
mov
aaa
or
mov
mov
jl
or
mov
pop
xchg
and
aas
in
call
mov
aad
filds
push
imul
xor
es
mov
mov
xchg
test
sahf
ret
in
bound
bound
adc
std
xchg
sbb
mul
std
cwtl
gs
inc
mov
cltd
pop
and
insb
scas
sub
pop
pop
ret
insb
pop
movsl
mov
fdivrs
sub
mov
or
idivb
mov
int
out
sbbl
test
pop
mov
xor
mov
pop
xchg
sub
sub
imul
pusha
ret
xchg
jmp
lret
in
pop
notl
pop
divl
movsl
stos
pop
mov
inc
std
lods
mov
add
mov
cs
insb
movsb
movl
mov
es
das
dec
xor
mov
lock
repz
inc
jae
add
roll
es
push
dec
mov
cmp
enter
negl
pop
shll
jb
mov
fmul
pop
pop
push
shll
imul
cld
lock
les
sbb
enter
mull
inc
jl
shl
ret
lret
mov
push
scas
rcrl
pop
add
fstpt
or
lods
pop
mov
dec
pusha
lods
jmp
stos
aam
add
dec
lods
pop
pop
test
jl
xchg
pop
dec
xchg
leave
jns
cmp
out
jb
xor
roll
pop
mov
and
xchg
cmc
push
jecxz
mov
int3
and
stos
xor
or
xchg
and
or
mov
popf
mov
test
inc
add
fcmovu
shl
mov
jge
scas
vsqrtps
ror
ljmp
daa
iret
cmp
lret
cwtl
shlb
lret
xor
fwait
cmp
xor
dec
pop
sbb
mov
test
cmp
orl
cs
iret
jge
shlb
or
fwait
push
mov
lcall
adc
lds
lret
loopne
pop
packssdw
les
push
sbb
loope
jns
or
jno
sub
jnp
in
cld
pushf
adc
les
xor
jecxz
sarl
shll
jb
ja
sbb
lods
lahf
loop
test
sbb
mov
addb
sbb
stos
push
int
push
mov
jp
xchg
cltd
add
movsb
es
cld
and
add
insb
xlat
bnd
outsb
push
lock
pop
dec
add
imul
jmp
nop
mov
dec
jnp
popf
add
scas
and
stc
mov
push
lea
scas
sarb
sbb
xor
stos
bound
dec
sub
inc
int
test
and
push
sub
pusha
loope
xchg
dec
dec
ja
pop
outsb
jno
xor
mov
sub
pop
and
into
aam
mov
gs
frstor
mov
pop
mov
fisttpll
lods
insl
add
ja
mov
cmp
mov
lahf
or
cmp
sbb
adc
stos
cli
imul
sbb
mov
in
lds
xchg
flds
push
cmp
mov
cmp
inc
fisubs
xor
or
sub
push
into
loope
sbb
adcl
ffreep
mov
es
mov
add
das
mov
lods
cli
jne
jle
test
cmpsb
addb
xor
adc
nop
inc
dec
repz
lods
push
fdivr
std
add
daa
stc
mov
cmpsb
mov
sub
jmp
sub
jo
and
push
cmpsl
push
xchg
adc
std
ja
pop
inc
and
in
stc
je
in
mov
push
xchg
sub
mov
fwait
sub
sub
aad
popf
dec
orl
mov
push
rcl
push
jl
cltd
jne
outsl
sahf
ret
jnp
dec
imul
jecxz
enter
inc
or
push
add
adc
cmp
repnz
jb
inc
xchg
push
mov
mov
sahf
xchg
fisttps
jg
xchg
movsl
jne
push
jg
out
idivb
jnp
mov
mov
outsl
add
call
out
scas
pop
cs
xchg
flds
dec
rcll
mov
xorl
push
sbbb
nop
mov
sbb
sub
and
lods
popa
int3
add
xchg
pop
mov
nop
jp
clc
xchg
xor
movsl
jne
xor
sarb
dec
dec
add
leave
jbe
jne
adcl
test
pop
pop
or
pop
push
clc
push
iret
mov
and
cmp
push
inc
and
jge
mov
shll
out
daa
xor
push
pextrw
imul
int3
enter
xor
iret
adcb
repz
adcl
jge
or
fcompl
xor
push
ror
out
andl
xchg
test
mov
dec
jmp
lret
xchg
mov
and
fsts
mov
mov
mov
jno
inc
imul
add
and
push
mov
movsb
inc
fildll
mov
call
cli
mov
outsl
mov
stc
dec
fists
and
movsl
lret
les
mov
mov
push
mov
iret
imul
push
xchg
imul
fucomi
fmul
andb
and
sub
dec
daa
mov
lret
jnp
insb
cltd
cld
ljmp
in
pushf
jecxz,pt
dec
xchg
jg
inc
xchg
jle
adc
add
mov
and
data16
push
cmp
lahf
lea
out
mov
in
iret
and
fs
daa
scas
adc
push
loope
loope
shll
outsb
addr16
incb
cmp
repz
stos
lcall
xchg
xchg
ja
pop
mov
jae
push
jmp
sarl
adc
lret
push
sub
repnz
faddp
pop
out
in
mov
cwtl
jl
stos
sbb
add
mov
int3
pusha
daa
test
cmp
and
mov
addr16
jo
frstor
pop
mov
cld
stos
fstl
mov
mov
pop
or
gs
xchg
or
out
leave
out
pop
sub
sub
pop
in
mov
lods
test
pusha
push
jmp
or
pop
or
iret
mov
xor
pushf
jp
mov
mov
lcall
cmp
test
sbb
iret
mov
insl
dec
int3
dec
push
repz
test
fisttpll
fwait
or
das
dec
xchg
xchg
xchg
jnp
sub
outsb
xor
inc
gs
aas
jecxz
push
inc
imul
es
adc
clc
fidivrl
aaa
cmp
jp
cmc
rcl
or
mov
jecxz
leave
mov
adc
cmp
imul
lret
inc
data16
mov
rorb
and
popa
push
jo
lock
fsubrs
clc
pop
push
fs
popa
imul
test
pop
cmp
fildll
in
fstpt
movsl
decb
test
adc
inc
hlt
dec
xchg
out
rolb
stc
mov
outsl
sbb
or
call
pop
lods
adc
out
xchg
mov
sub
sbb
out
pop
test
fstl
or
test
jbe
outsl
mov
mov
icebp
fsubl
or
loopne
icebp
ret
in
fists
jg
mov
cs
dec
shl
arpl
pop
mov
jl,pt
and
or
aas
test
ss
add
pop
adc
push
jbe
and
arpl
cmp
push
cmp
testl
aaa
mov
cmp
js
pop
dec
sbb
out
mov
dec
sub
lods
push
ficoml
mov
lret
test
cmp
pop
test
xlat
mov
js
cmp
rorl
and
or
jge
cltd
dec
mov
xchg
xor
xor
cmpsb
insb
scas
ja
mov
xchg
cwtl
cmpl
push
es
dec
rcr
insb
xor
sub
ret
imul
add
mov
bound
rol
mov
aam
jecxz
stos
dec
push
xchg
pop
cmpsb
dec
push
sub
jmp
jp
mov
or
int
pop
out
pop
cld
xchg
sub
inc
push
adc
sbb
jl
push
bound
stos
or
adc
andb
pop
fbstp
and
inc
lods
test
mov
jne
inc
push
out
fnstenv
and
shrl
mov
mov
xor
inc
out
inc
data16
out
gs
loop
mov
scas
mov
mov
adc
jb
mov
dec
das
mov
inc
pop
and
dec
push
xor
into
fmull
dec
imul
fxtract
push
jge
shlb
inc
cwtl
xor
ds
imul
stc
cmp
popf
int
out
cmpsb
lcall
dec
xchg
pushf
out
notb
lret
outsl
sbb
cmp
adc
ds
mov
adc
adc
lahf
mov
dec
test
or
jns
push
das
add
loope
or
scas
jp
pop
lds
pop
in
inc
lahf
dec
pushf
or
test
jb
adc
dec
sti
and
ja
xor
mov
lods
jb
daa
or
jae
out
push
xchg
cmp
decb
cmpsl
and
in
sbb
or
or
push
mov
and
jne
or
adc
rcll
and
movsl
sub
push
mov
cmp
lods
mov
pop
sub
pop
fadd
jne
pop
rcr
shl
push
xchg
xorb
or
pop
fwait
ret
sub
fimuls
inc
pop
lea
cs
dec
lcall
mov
dec
jmp
mov
cld
sub
fnstenv
xchg
cs
sbb
mov
push
jle
jp
jnp
cmpsl
ljmp
push
jae
sub
test
push
movsb
int
pop
sub
rcrb
cmp
sbb
mov
cmp
adc
stos
rcrl
sub
jbe
ja
hlt
mov
mov
repz
inc
mov
mov
or
add
sbb
int3
mov
add
mov
fsubs
cmp
popl
xchg
lods
xor
xorl
adc
sub
jno,pn
rclb
xchg
ret
inc
ret
and
movl
scas
xchg
loope
rcrl
mov
dec
fcmovne
sbb
sub
int
or
jl
repnz
sbb
imul
adc
aaa
enter
xchg
mov
xor
push
test
in
jbe
fnstsw
clc
mov
adc
in
insb
rcll
scas
in
int3
outsl
mov
std
or
xor
mov
push
jns
lahf
ficomps
in
dec
fnop
movl
adc
inc
and
jg
mov
mov
ficoml
cmp
shll
mov
or
lahf
mov
inc
xchg
xor
mov
pop
movsb
addb
xchg
add
sti
mov
inc
in
mov
jge
and
push
in
mov
cmpsb
lret
jo
fisttps
dec
clc
into
add
push
ret
mov
jp
push
insb
mov
insb
add
pop
adc
cld
mov
loopne
incl
push
fadd
mov
mov
shl
sahf
cmp
or
pop
fcomps
jecxz
push
push
sub
xchg
loop
pushaw
into
push
mov
mov
repnz
inc
pushf
push
nop
xchg
scas
pop
cmc
mov
mov
hlt
cmovs
xor
jbe
mov
in
movsl
ja
ljmp
push
mov
or
push
inc
mov
mov
xchg
sbb
test
je
es
fmull
and
xchg
or
dec
xchg
mov
cld
sub
popf
sbb
mov
insl
jnp
adc
xchg
icebp
addb
les
xchg
push
mov
testb
std
popa
sahf
shrb
xor
mov
mov
add
out
xor
push
insl
push
cmp
dec
in
movl
or
pop
push
pop
mov
das
push
add
mov
sahf
mov
into
cmpsb
adc
mov
and
out
sti
mov
test
jl
inc
ja
rolw
das
jle
movsl
jbe
scas
cmpsb
fwait
leave
inc
ror
inc
or
lret
insl
out
aad
aad
adc
out
jg,pn
or
mov
imull
rcrb
mov
out
and
jmp
jae
cmpsl
js
jmp
push
movsl
mov
cmpsb
in
and
inc
xor
ljmp
and
mov
fwait
stos
in
loopne
xchg
lret
nop
insl
rcll
out
aam
sahf
bsr
lahf
and
fs
sbb
add
mov
xchg
fs
sbb
testl
call
pop
mov
push
xchg
cmpsb
add
pop
iret
mov
test
jl
mov
inc
mov
cmp
cmp
fucomi
dec
cmp
enter
popf
scas
fiadds
and
fstps
pop
adc
mov
add
loop
sub
fldln2
imul
dec
or
pop
sbb
adc
movsb
add
xor
cmp
icebp
fisubs
loop
enter
xchg
into
xchg
adc
pop
incl
clc
jbe
adc
and
sub
jp
cli
inc
aam
movsl
inc
scas
enter
xchg
push
jbe
mov
jne
xor
outsb
movsb
mulb
roll
jmp
cld
xadd
rcrl
pop
xchg
mov
in
add
sub
xchg
push
push
daa
inc
dec
dec
roll
in
add
or
inc
mov
test
fists
enter
mov
or
xchg
push
mov
fs
push
clc
xchg
inc
fldt
aas
mov
pop
testl
cli
xchg
xchg
ret
or
sbb
data16
call
stos
ret
data16
jae
fisttpll
mov
mov
iret
and
data16
xchg
lock
jnp
dec
mov
xchg
inc
pop
mov
add
fsubs
std
int3
dec
cmc
mov
loopne
in
mov
push
push
pop
pop
cmp
lret
cltd
movsb
scas
and
mov
aas
lret
sbb
out
into
fwait
or
shr
sub
inc
mov
mov
xchg
loopne
int3
outsb
or
scas
in
mov
movsb
nop
push
imul
mov
ja
jl
adc
daa
int3
and
or
sbb
ds
cli
xchg
jbe
fnstenv
or
test
scas
shl
cmp
or
pop
jp
sbb
clc
ljmp
fs
scas
lcall
popl
push
ja
in
jg
flds
jb
aad
adc
cmp
jbe
dec
jbe
stos
testb
pop
add
adc
dec
out
or
test
lods
add
mov
mov
pop
mov
ljmp
dec
inc
enter
fwait
xchg
inc
in
js
bound
dec
ret
mov
inc
mov
xchg
jno
fwait
lods
pop
mov
ljmp
inc
jge
push
inc
aad
scas
and
xor
mov
out
lods
mov
stc
ret
call
pop
xor
cmc
int
jb
outsl
cwtl
sbb
push
mov
outsb
inc
or
mov
jmp
mov
mov
addr16
mov
dec
les
jb
sbb
std
out
inc
shlb
clc
mov
adc
notl
gs
cmp
sti
scas
leave
cmpsb
scas
lods
inc
xchg
and
pusha
mov
sbb
roll
popa
mov
pop
scas
or
sub
loopne
iret
ja
in
xor
loop
mov
pop
sub
push
clc
push
push
mov
or
int
xchg
loopne
xor
mov
iret
lcall
repz
and
cld
fs
popf
mov
mov
aam
ret
lods
into
mov
sarl
scas
lock
js
je
fs
lods
imul
outsl
dec
hlt
pushl
jecxz
add
and
push
mov
repz
mov
ror
sbb
lahf
out
mov
enter
stos
jl
dec
js
js
mov
fimuls
push
ret
xchg
aam
adc
push
jecxz
adc
cwtl
fnsave
les
out
int
repz
ljmp
add
jl
cmp
cli
addl
mov
cmpsl
mov
mov
xor
stos
out
lods
jecxz
int3
adc
inc
jl
sub
into
scas
fsubrl
dec
and
add
dec
stc
dec
and
jb
sahf
fsts
cmp
lock
cmp
xchg
push
push
sub
hlt
sub
jo
push
push
cmpsl
xchg
lret
mov
out
and
test
into
test
mov
clc
inc
dec
add
sahf
pop
mov
mov
jb
test
xchg
cmpsl
xchg
cmpsb
mov
iret
hlt
mov
push
daa
ret
cli
fcmove
inc
imul
gs
ret
add
divb
imul
jmp
movsl
mov
add
adc
cmp
lods
rorb
pop
mov
add
mov
jg
repnz
popa
push
dec
push
fidivrs
mov
pop
test
adc
cltd
dec
mov
in
int
out
mov
cli
xor
fbld
xor
lret
jnp
in
lea
sbb
ss
cmp
repz
xchg
ds
daa
adc
jo
push
aaa
adc
mov
mov
repz
mov
adc
mov
push
push
pusha
imul
fs
cs
or
imulb
stos
cmp
inc
outsb
pop
rorb
aas
jp
mov
dec
cmp
popf
pop
jecxz
ds
scas
in
fdiv
mov
mov
mov
stc
or
fs
aam
repz
dec
es
pop
xor
dec
jns
cs
and
sbb
nop
jp
mov
xor
or
mov
jg
je
int3
ljmp
push
mov
add
movsl
jmp
pop
push
dec
adc
push
mov
jg
inc
mov
add
inc
pop
pop
push
mov
adc
ss
inc
enter
lock
jns
jle
shrl
movsl
mul
sbb
outsl
xchg
pop
stos
mov
mov
test
fcomps
stos
cmp
sub
cmpsl
jg
cmp
push
adc
xchg
jecxz
je
mov
ljmp
push
inc
push
call
mov
jg
push
and
mov
nop
lds
dec
inc
mov
addb
shrl
int
add
int
out
sub
xor
repnz
jb
fisubrl
pushf
mov
div
dec
jle
int3
inc
ret
movsb
outsl
hlt
push
andl
xchg
aad
mov
or
cmpb
jno
scas
xchg
cwtl
repnz
mov
test
fldcw
pop
rcrb
out
mov
out
rcrb
sti
aad
adc
shrb
mov
pop
sbb
fsub
or
sbb
xchg
int3
mov
jmp
sahf
mov
subl
jle
dec
mov
cmp
cmp
stos
xor
push
lcall
loop
out
dec
fmulp
fisttpl
inc
xchg
sub
jbe
dec
ljmp
movsb
mov
mov
xor
xor
adc
adc
dec
jne
mov
jmp
cli
xchg
mov
sub
jne
sub
cmpsl
fdiv
cmpsl
es
jle
movsb
dec
mov
std
lock
dec
pop
stos
dec
sbb
sub
daa
mov
cmp
pushf
inc
inc
mov
lret
pop
jle
jbe
and
dec
or
loop
xchg
movsb
xlat
xchg
imul
out
sub
sbb
pop
ds
and
pop
lcall
cli
imulb
cmp
loop
mov
scas
adc
xlat
orl
aad
lods
fsub
into
divb
icebp
rolb
fistps
adc
pop
mov
dec
or
cmp
dec
nop
lock
mov
jne
pop
sub
inc
rol
jge
loopne
cli
adcl
repz
setbe
mov
push
sbb
inc
stc
jecxz
mov
sarb
imul
ljmp
into
mov
adc
addr16
jge
mov
in
gs
outsb
and
outsb
jecxz
jecxz
lock
addr16
mov
mov
stc
test
or
outsl
xchg
push
pop
xchg
mov
jp
inc
cmp
daa
cmp
mov
call
loope
test
in
addr16
push
xchg
jae
popf
je
lods
cmp
mov
in
pop
sub
inc
jg
xchg
insl
mov
xchg
call
add
mov
dec
and
jle
int
lahf
ss
inc
insl
cmpb
stos
arpl
pop
xchg
push
sbb
cmp
cmp
jb
pop
dec
sbb
mov
pop
pop
mov
insl
jo
aam
outsb
mov
and
in
push
or
or
int3
int
loope
in
dec
pop
jmp
push
cmp
push
cmpsl
sti
xchg
or
xor
or
push
lret
xor
mov
or
fnstsw
arpl
jmp
jns
add
add
sbb
mov
sarb
out
jle
mov
mov
cmp
mov
pavgw
ds
movsl
push
and
and
or
dec
jp
sahf
lock
fcoms
sbb
in
and
ror
call
push
lock
push
inc
sbb
sahf
pop
mov
and
stos
paddusb
inc
jae
cmp
sub
mov
dec
push
mov
mov
icebp
xchg
aas
and
dec
cmp
add
pushf
mov
inc
cmp
arpl
cltd
ss
mov
outsb
ret
jp
mov
js
stos
loop
test
test
cltd
push
enter
leave
testl
ljmp
icebp
cmpsl
imul
and
xlat
imul
clc
mov
mov
cmp
ret
or
sbb
jmp
mov
arpl
iret
leave
mov
subl
je
and
xchg
into
push
pushf
shr
scas
xchg
mov
add
push
cmp
pusha
mov
cmpsl
js
shll
sbb
clc
add
orl
fwait
lods
repz
pop
xor
lret
lock
cmp
js
xchg
add
pop
popa
jge
bnd
pop
xchg
in
pusha
js
push
and
mov
divl
jnp
push
ficoms
loopne
adc
pop
jns
ret
cmpsb
sti
xchg
mov
outsb
cmc
sub
ja
hlt
addr16
inc
fdivrs
in
lods
lock
iret
sbb
hlt
sahf
fisubrs
in
push
test
jae
mov
pop
jmp
test
push
clc
outsl
jo,pt
fwait
and
jmp
mov
scas
add
mov
add
inc
testl
push
movsb
mov
stos
cmp
push
xchg
cltd
les
add
icebp
andb
mov
mov
jmp
xchg
jb
pop
movl
and
inc
lret
jl
xchg
cmp
stos
movsl
pop
inc
jecxz
and
loopne
lods
add
sbb
jb
mov
ljmp
cltd
mov
shll
and
aam
mov
inc
jmp
aad
fdiv
jle
int
push
lahf
cmp
lods
cmp
sbb
cwtl
push
das
fisubl
xor
dec
shll
mov
shlb
add
loop
mov
push
clc
sub
xchg
scas
fcmove
icebp
scas
or
sahf
xor
cld
ret
pop
sub
mov
test
mov
enter
add
adc
lea
je
inc
lea
sub
xchg
mov
leave
dec
pop
mov
add
fisubs
mov
out
xchg
fsincos
test
data16
cmp
xchg
add
sbb
subl
cmp
fisttpl
in
xlat
stc
xchg
insb
mov
push
incb
add
out
xor
jb
fsubrl
call
push
daa
pop
icebp
in
jge
or
push
pop
mov
loope
pop
movl
mov
add
pop
js
pop
es
fsubr
lock
mov
jae
fildll
fstps
sub
adc
add
xchg
data16
mov
repnz
mov
rcll
pop
imul
push
pop
push
lret
cld
dec
lahf
sub
inc
aam
dec
push
or
or
pop
addb
jp
inc
xchg
adc
mov
or
std
xchg
mov
push
loop
push
gs
sub
pop
sub
testl
mov
out
fwait
pusha
in
push
adc
ds
fwait
mov
xor
lods
xor
fcomp
sub
adc
dec
mov
ss
and
or
cltd
push
push
scas
lods
xchg
or
mov
jge
dec
mov
mov
negb
fsubrl
jns
pop
idivb
addr16
lods
mov
xchg
outsb
cmp
xchg
ljmp
fwait
dec
mov
lret
int
pushf
cmp
and
cmp
and
in
lea
xchg
leave
xor
mov
lea
call
and
cmc
mov
push
pop
daa
call
xchg
or
leave
imul
xchg
xor
int
in
shrb
xor
pop
mov
xor
mov
loope
mov
movsl
xor
mov
rol
cmp
and
dec
pop
mov
sbb
ja
lods
testl
daa
mov
lcall
loope
les
add
sub
in
mov
pop
pop
add
sub
fcomp
push
jo
loope
aad
dec
mov
jge
cmp
testl
xchg
xchg
cmc
push
testb
jae
pop
pusha
lods
jmp
pop
and
loop
movsl
shll
sarl
cs
arpl
ds
testl
and
out
mov
out
mov
fucomip
jae
btc
lods
mov
fcmovnb
adc
dec
aaa
mov
xchg
dec
ret
out
cmp
out
iret
adc
pop
lret
cwtl
lcall
sub
sub
hlt
mov
jp
cmpsb
ljmp
imul
push
fwait
scas
hlt
xchg
cli
addr16
cmp
iret
test
mov
xchg
mov
mov
insl
clc
scas
xchg
sub
push
mov
inc
fstl
xchg
test
mov
movsl
sbb
scas
std
add
icebp
or
incl
fsubrp
into
out
lods
xchg
jp
lds
cmp
ss
add
ljmp
mov
cld
call
rorl
fs
aam
add
popf
mov
mov
cwtl
clc
lret
and
push
xchg
push
push
pop
add
cmpsb
mov
mov
ret
les
stc
out
dec
and
xchg
mov
rcl
cli
out
int
cmp
mov
enter
iret
in
jns
jb
ds
test
adc
ss
pop
dec
lock
cli
jmp
adc
mov
cmp
pop
push
arpl
mov
cltd
cmp
inc
xor
orb
push
movb
test
adc
dec
lock
movsb
pop
inc
xchg
scas
std
leave
cmp
sar
jle
jle
imul
insb
push
test
push
outsl
jge
sbb
sbb
mov
lock
mov
push
lods
push
xor
rorb
xchg
popa
js
aad
pop
pop
xchg
dec
jg
and
inc
xchg
mov
fisttpll
mov
sbb
dec
push
xchg
into
fs
pop
lods
add
lods
cmp
mov
ljmp
daa
scas
mov
int3
and
and
xchg
xor
test
mov
icebp
push
ret
xchg
push
cmp
divl
les
sar
or
mov
testb
mov
jnp
arpl
lahf
ret
in
mov
pusha
dec
and
loop
dec
lds
xorb
fcoml
pop
sbb
fsub
add
outsl
cmp
add
mov
in
out
std
mov
add
sub
out
mov
scas
lea
xchg
jmp
cmp
sbb
rcr
jns
les
loopne
adc
in
and
mov
inc
mov
insb
aad
mov
fs
inc
cmp
out
xor
dec
and
jb
lds
aam
pop
arpl
add
shlb
dec
cmc
fcomi
js
dec
or
sbb
sbb
sub
and
cli
movsl
mov
test
push
adc
cwtl
mov
dec
cli
cmpsb
xchg
xor
mov
int
cld
sbb
inc
mov
xlat
jns
and
cmc
xor
lods
hlt
ret
adc
cmp
mov
push
dec
in
and
lock
sbb
mov
test
out
dec
jmp
xchg
notl
gs
add
xchg
fnstcw
test
fldt
stos
xchg
xchg
insb
stos
ret
fstpt
mov
pop
imul
push
sbb
sub
jae
jge
fisubrs
cmp
xor
xor
ja
dec
cltd
inc
insl
fs
sti
daa
jge
lds
dec
xor
push
pushf
xchg
inc
lock
jl
jne
cmp
sbb
roll
rcrb
pop
rolb
in
js,pn
jp
orb
adc
sub
test
inc
das
pop
out
jns
into
cs
jle
rcrb
ret
insl
hlt
xchg
icebp
adc
mov
insl
cwtl
lret
fwait
mov
pushf
pop
pop
mov
or
xchg
iret
adc
pop
loopne
imul
sar
popf
inc
les
gs
mov
ss
mov
mov
jge
or
lock
jmp
inc
mov
mov
push
sbb
or
loop
sbb
test
mov
sub
xchg
push
mulb
repz
bound
sub
xchg
pop
mov
lods
sbb
test
xchg
inc
xchg
ret
mov
or
dec
movsb
pop
sbb
add
push
xor
pop
cmp
cli
push
call
and
add
leave
xchg
loop
xchg
cmpsb
fld
loope
in
mov
pop
nop
clc
or
arpl
mov
stc
mov
or
mov
loopne
aaa
cmpsl
jo
jle
in
jp
cmp
xchg
rcll
insl
stc
or
into
mov
mov
in
jmp
xor
xor
xchg
mov
push
mov
inc
cltd
js
or
hlt
les
popa
cmpsb
and
sti
mov
pop
cmpsb
rorl
cmpsl
fldt
clc
adc
xor
add
ret
gs
dec
iret
iret
sbb
xor
jb
push
sub
icebp
pop
pop
test
jno
fiaddl
int3
ret
jae
out
and
xlat
push
mov
xchg
pop
cmpsl
in
xchg
sbb
repnz
rolb
jecxz
sbb
or
mov
sbb
outsl
cmp
insb
pop
rclb
jecxz
jns
xchg
jne
pop
sub
les
lods
repz
sub
stos
sahf
push
insl
sbb
call
mov
fisubrs
stos
sub
mov
push
clc
mov
mov
fwait
test
mov
jmp
mov
jge
lods
cli
or
movsl
mov
inc
ret
int
mov
repz
jmp
xor
ja
pushf
clc
cmp
dec
aam
loopne
add
adc
scas
in
call
xorb
fucomi
je
cli
les
les
pop
push
cmpsl
xor
cmp
jo
mov
sti
js
jno
add
cmp
arpl
cmp
out
inc
lea
aad
dec
fildl
idiv
data16
js
inc
fisubl
mov
push
aad
mov
sbb
hlt
xabort
push
cmpsl
aas
ret
jecxz
dec
out
xchg
xor
push
cmpsl
fnclex
sbb
pop
call
in
inc
pusha
and
jg
sub
adc
sub
pusha
fbstp
inc
sar
daa
add
and
xchg
push
aam
aam
sub
into
adc
dec
jp
ljmp
sbb
inc
lret
adc
mov
inc
ljmp
cmpsb
int
pop
xor
into
mov
fsubl
mov
adc
cli
insl
cmp
cmp
ficomps
pop
cli
jmp
leave
inc
mov
and
mov
rcll
lahf
xchg
andb
out
jp
mov
movsb
enter
lret
pop
add
lcall
sub
bound
jmp
lods
lods
out
xchg
sub
fldcw
xor
ds
sbb
xchg
cwtl
lahf
out
or
sbb
pop
mov
iret
stos
jno
sbbl
imul
lock
adc
das
add
pop
lahf
aam
enter
in
testl
test
js
ljmp
sub
scas
xchg
fbld
mov
mov
xchg
ljmp
cs
mov
xlat
mov
and
sbb
shll
jl
xchg
cmpsl
loop
test
repnz
xchg
mov
add
push
into
test
mov
or
divb
xor
enter
int
scas
mov
mov
jge
imul
mov
movsb
andl
in
push
mov
nop
add
or
popa
xchg
cmpsl
in
into
int
xor
loopne
sub
jp
sub
ret
jnp
xchg
push
add
inc
xchg
push
lea
push
adc
and
adc
mov
sbb
mov
pop
sbb
scas
add
xchg
or
push
movsl
and
pop
jecxz
adc
lcall
out
std
mov
test
dec
in
pop
or
sub
add
cmp
mov
dec
pop
sbb
sbb
sbb
xor
jl
xchg
rcrl
and
mov
fidivrs
push
mov
enter
sbb
or
push
out
sub
pop
bound
dec
lock
pop
or
pop
lahf
imul
sbb
lret
dec
or
push
sub
rclb
in
cmpsb
call
in
fs
iret
nop
xchg
call
mov
addr16
int3
or
lcall
sub
push
inc
push
and
sahf
or
fldcw
mov
out
mov
cld
dec
jl
fmul
addr16
lret
or
mov
mov
xlat
mov
jo
test
loop
inc
xor
mov
daa
test
and
push
test
stos
loop
pop
jbe
jecxz
mov
push
cmpsl
jmp
dec
sbb
mov
ficoml
ss
adcl
or
les
cs
dec
stc
xchg
nop
or
mov
mov
popf
push
mov
mov
mov
cmpsl
jb
outsl
lods
lret
pop
call
hlt
test
mov
push
shl
in
pop
daa
scas
add
jno
loop
and
call
and
add
int
lods
jo
sti
add
sarb
shlb
es
add
jns
shrb
pop
inc
out
stc
push
mov
xchg
scas
xchg
das
mov
mov
adc
push
iret
mov
jae
nop
add
mov
fwait
pusha
sbb
imulb
jbe
scas
mov
xchg
fsubs
jecxz
jbe
jp
mov
and
xor
fistl
and
jle
test
std
dec
push
pop
out
daa
insb
or
daa
adc
loop
cmp
sub
aad
mov
hlt
xor
stc
and
subl
mov
xor
data16
add
sub
pop
jb
data16
push
or
xchg
mov
lret
imul
mov
pop
scas
sti
mov
cmc
std
subl
int3
mov
ds
mov
dec
or
push
lods
aam
push
repz
jae
inc
push
pop
inc
xchg
or
push
mov
je
xchg
adc
cmp
popa
mov
and
int3
xchg
adc
and
iret
je
xlat
mov
aad
leave
sub
fs
loop
and
xor
icebp
cmpsl
pop
xchg
int
mov
lret
inc
mov
jecxz
stos
dec
pop
pop
mov
push
je
add
jns
xor
loopne
sub
inc
inc
mov
fwait
mov
lods
and
inc
lods
pusha
xchg
ficomps
leave
mov
out
fmuls
inc
jl
roll
pop
sub
push
outsl
ficoml
mov
dec
cmp
lret
inc
xchg
pop
cmp
mov
decl
push
repnz
push
sahf
xchg
mov
pop
pop
xchg
xchg
push
cmp
xchg
aaa
ja
and
mov
mov
mov
dec
xor
pop
push
xchg
loop
mov
cmpsb
cmp
clc
nop
sbb
scas
sub
mov
jbe
addr16
dec
and
or
movsb
hlt
jnp
testl
aaa
lcall
xchg
jo
divl
frstor
and
sbb
xchg
xor
sub
and
loope
fisttpl
adc
push
pop
es
test
leave
adc
lock
jbe
xchg
cs
push
xor
fdivrp
stc
fimull
or
aam
sarl
loop
dec
pop
inc
lods
mov
adc
out
cmc
add
add
mov
cwtl
call
sbb
outsb
and
mov
es
les
xchg
and
sub
xchg
pop
lods
jle
mov
pop
pop
or
lahf
addr16
mov
bound
popf
cmp
mov
mov
stos
xchg
jnp
out
sbb
sub
out
pop
cmp
outsb
xchg
mov
lret
outsb
cmp
dec
sub
or
dec
sti
cmpsl
and
push
out
shlb
push
fistpll
lahf
pop
push
or
mov
hlt
fwait
daa
xchg
popf
jne
arpl
adc
pop
enter
jno
mov
mov
pop
out
in
cwtl
imul
shlb
mov
int
dec
mov
or
push
lock
insl
mov
cmpsl
into
cmp
xorl
adc
cmpsl
lea
inc
dec
adc
pop
and
mov
dec
pop
shl
inc
push
push
inc
jb
cltd
icebp
addr16
mov
fcoml
sbbl
xchg
pop
cmpsl
mov
cmp
xor
inc
test
out
mov
mov
push
push
iret
int3
shll
shr
mov
jnp
xor
cmp
cmpsl
jo
daa
xchg
decb
push
sub
pop
icebp
or
pop
arpl
push
jns
and
ret
mov
or
movl
iretw
insl
add
fdivrs
call
bound
in
push
iret
push
jmp
arpl
and
xor
aam
mov
pusha
inc
mov
insl
and
ds
outsb
sbb
into
call
inc
cmpsl
fdecstp
adc
mov
dec
mov
cmp
aas
dec
movl
or
rorl
loopne
pushl
sbb
xchg
mov
pop
fisttpll
es
mov
fsts
aas
cmpsl
jno
lret
cli
test
jecxz
pop
outsb
das
and
jo
xchg
xchg
xchg
mulb
xchg
in
jg
into
mov
mov
das
icebp
jne
pop
mov
stc
mov
pop
addr16
pop
pusha
mov
pop
inc
or
add
gs
cltd
out
clc
divl
lock
mov
dec
in
or
jo
xor
cmp
int3
fwait
pop
rsqrtps
lret
repz
adc
add
cld
lock
outsb
sub
mov
dec
xchg
sub
jnp
push
aam
rol
sub
lcall
outsb
jbe
aaa
sbb
out
mov
outsl
dec
lock
push
sarb
lea
inc
pop
cmpsb
inc
loope
mov
or
fwait
sahf
mov
sbb
mov
add
and
or
mov
pop
push
iret
out
and
imul
jb
jnp
xchg
incl
test
popf
stos
repz
pop
sub
repnz
sbbb
jmp
mov
xchg
hlt
pop
adc
push
call
and
lds
or
ja
dec
out
cmp
in
add
pop
push
cli
fisubrl
xchg
lcall
cli
cmp
xacquire
xchg
dec
jecxz
inc
popa
cmc
lea
fmuls
sub
arpl
gs
and
fldt
sbb
mov
pop
cmp
jecxz
jle
call
decb
scas
in
js
push
inc
inc
mov
mov
mov
dec
xlat
fnstsw
sub
push
sbb
out
sbb
inc
mov
lret
mov
xchg
imul
cmp
imul
pop
sti
roll
jmp
out
stos
inc
hlt
popa
mov
std
mov
pop
scas
imul
pop
lcall
xlat
lahf
cmp
ss
stos
jne
les
dec
ror
scas
sbb
into
adc
add
ret
bswap
ror
aad
xor
xchg
adc
or
adcl
mov
and
and
popa
xor
push
or
daa
jne
jno
pop
ds
nop
adc
jmp
jle
jp
into
pop
mov
int
pop
cmp
sbb
in
push
xchg
inc
cmpl
pop
pop
sub
xor
outsb
inc
ljmp
xchg
scas
shll
insb
lahf
and
sti
mov
in
push
jge,pn
sub
sti
pop
or
repz
lods
push
iret
cmp
rcrb
push
push
loope
sub
rorb
xor
mov
ljmp
out
xchg
testl
rol
cmp
push
add
fwait
or
jge
sbb
lods
into
out
jno
dec
mov
adc
sub
popa
gs
repnz
addr16
xlat
lock
das
add
mov
mov
outsb
push
sbb
and
xchg
xor
adc
ret
out
mov
ret
xchg
xchg
fsts
push
ja
je
sbb
daa
dec
clc
fnstsw
dec
sub
inc
fsubrp
mov
movsl
dec
mov
jb
lahf
lds
cmp
jmp
xchg
ds
into
jo
mov
mov
mov
out
xchg
sbb
jp
pop
iret
iret
in
xchg
mov
sub
inc
xchg
popf
xchg
and
outsl
push
cmp
dec
cmp
imul
and
cld
pop
push
movsl
hlt
inc
xchg
sbb
nop
adc
cmpsl
xor
mov
mov
test
daa
imul
xchg
jecxz
insl
out
daa
lret
jbe
sub
push
pop
icebp
push
mov
push
push
lock
push
out
sub
fmulp
je
pop
xchg
jecxz
fistps
cmc
push
push
mov
xor
lret
pop
jb
pop
stc
inc
lahf
into
jae
rclb
shrl
pop
jno
jl
das
es
jle
jb
fcoml
jo
movsb
sub
fistpll
adc
xor
sub
out
lret
and
int3
cmc
xchg
mov
test
cli
lock
andb
mov
aaa
push
mov
and
lcall
pop
lret
or
in
popa
idivl
movsb
xchg
jge
ret
fisubrl
dec
out
hlt
cmp
xor
mov
jg
jp
stos
dec
ds
into
rolb
jmp
in
cmp
add
push
sub
inc
xchg
daa
cmp
daa
mov
aad
enter
in
iretw
cmpsl
daa
jbe
popa
push
xor
jb
repnz
lods
mov
addl
lahf
imul
ret
adc
jg
xlat
mov
cld
sarb
dec
push
cwtl
xchg
and
jecxz
leave
mov
inc
rclb
xchg
xchg
pop
xchg
in
and
test
jmp
scas
push
mov
cwtl
mov
shl
ds
out
imul
jb
dec
add
and
pop
lock
mov
call
add
jge
pushf
push
rorb
enter
aad
lock
xchg
daa
jbe
scas
inc
mov
push
mov
scas
loopne
mov
mov
jecxz
daa
jb
push
cmpsl
xchg
mov
stc
dec
cltd
loope
ss
pop
push
pop
pop
xlat
xlat
jne
jns
outsb
test
movsl
xor
jnp
ret
mov
inc
iret
mov
leave
testb
out
outsl
cmp
xchg
pop
mov
ficoml
es
lret
data16
addr16
jecxz
sbb
test
jg
cld
movsb
jge
or
adc
jae
mov
jmp
push
shrl
imul
jle
mov
fdivrl
xorl
push
das
dec
imul
jb
push
sbb
fdivl
es
lcall
int
cltd
cs
inc
pusha
mov
sbb
and
int
xchg
jg
es
outsb
addb
push
mov
xrelease
cltd
jecxz
mov
inc
mov
pop
iret
fs
adcb
xor
shlb
das
dec
sub
not
loopne
mov
ficompl
mull
mov
dec
dec
aam
mov
add
lock
ret
lret
ds
xor
sub
enter
mov
shl
xor
shrb
xchg
repz
push
jo
adc
or
mov
sar
out
icebp
mov
jmp
add
pop
cs
jl
test
je
lods
daa
or
and
mov
sbb
lea
xchg
and
test
or
fisubl
push
ret
divb
popa
insb
out
icebp
movsl
push
push
jle
inc
push
mov
lea
jbe
mov
pushf
mov
ds
mov
xorb
loopne
popf
lret
mov
sbb
rorb
add
aas
je
xor
mov
lock
sbb
inc
test
dec
sahf
jae
ret
dec
cmp
xchg
mov
cld
add
jg
or
mov
ss
pop
icebp
shll
jo
rorl
mov
cmp
in
movsl
mov
icebp
add
mov
out
mov
cltd
sub
popf
dec
sarl
loopne
mov
leave
aas
cmp
or
pop
dec
out
cltd
insb
cwtl
into
cs
or
hlt
add
or
xchg
sub
adc
push
adc
stc
pop
mov
mov
jge
jmp
loope
mov
lcall
push
adc
adcb
outsl
xchg
cmp
jg
mov
mov
cmpsl
daa
push
iret
bound
mov
and
pop
pop
nop
cmp
xlat
jns
in
gs
fidivrl
cld
mov
adc
stc
sahf
jl
xchg
xor
cltd
inc
out
xchg
dec
mov
push
add
mov
dec
or
aas
jns
add
xor
xchg
adc
inc
pop
cs
xchg
cld
imulb
and
sub
lahf
negl
cmp
insb
and
test
cld
inc
fwait
sub
in
fcompp
jae
pop
xchg
loope
stos
mov
cmp
push
pop
sub
mov
push
fs
data16
push
cmpsb
std
insb
lahf
aad
push
notb
push
scas
mov
in
lret
mov
push
cmpl
test
imul
cld
fistps
fsubr
sbb
mov
insl
jnp
dec
out
pop
xchg
and
filds
jne
in
sub
pop
sbb
call
mov
bound
mov
out
repz
shlb
pop
js
out
sahf
xorb
outsl
das
dec
pop
push
arpl
cmpw
adc
faddp
dec
cli
mov
adc
fldt
pop
mov
xchg
jp
aam
xor
lret
lcall
insl
add
test
add
push
call
ljmp
push
cltd
or
out
lods
xchg
iret
sbb
enter
cmp
fwait
lret
mov
outsb
cmp
les
pop
jl
xchg
cmpsb
out
test
fdivs
mov
fucomp
and
push
adc
ret
add
xchg
ret
jle
cmp
jp
push
mov
jmp
mov
rorl
xor
jg
ja
hlt
fistpll
xor
pop
icebp
ss
fisttps
aad
xchg
jo
pop
insb
xchg
out
movsl
pop
dec
add
push
insl
cmp
mov
jp
clc
cmp
fisttps
cmpsb
leave
sbb
xchg
xchg
shll
jl
xchg
pop
aam
pop
sub
cmpb
dec
sbb
jbe
cmpsb
test
mov
scas
xor
fimuls
mov
and
mov
push
in
mov
ljmp
push
mov
xchg
mov
cs
addr16
outsb
lods
out
mov
dec
jg
cltd
cmp
lret
mov
mov
out
cmpsb
jge
scas
and
jns
bound
jl
out
into
out
push
icebp
fcos
imul
lahf
hlt
pop
enter
mov
pop
out
pop
mov
rcrb
shlb
pop
jno
or
xchg
xchg
push
sti
and
popf
fwait
xorb
mov
and
push
aam
inc
mov
cwtl
xchg
cmpsb
mov
sahf
test
fs
xor
sbb
outsl
pop
ret
push
divl
les
fidivrl
imul
das
xchg
jl
xchg
sub
and
call
sub
push
pop
adc
and
jl
sub
test
lret
popf
ret
mov
add
js
andb
mov
mov
cmpsl
and
push
fiaddl
xor
dec
jb
inc
add
xorb
cmp
mov
in
jp
in
je
or
xlat
mov
push
dec
popf
inc
into
mov
mov
call
mov
in
pop
jb
cmp
xlat
cmp
pop
push
lahf
and
mov
cmc
fnstenv
cmpl
fldcw
mov
xchg
repz
add
sbb
cwtl
das
mov
cmp
ret
mov
xchg
add
repnz
inc
scas
cmpsb
femms
adc
aas
not
mov
shlb
test
andl
dec
shl
shr
cs
adc
add
sbb
cmc
mov
nop
daa
and
xchg
cmp
and
fisttpl
push
out
xchg
xchg
sub
rclb
dec
cltd
arpl
fstps
aaa
in
jp
je
xchg
dec
add
int
leave
sub
xchg
mov
faddl
dec
fwait
mov
mov
or
xchg
mov
push
insl
dec
xlat
fwait
hlt
jae
cmp
adc
lahf
xchg
fisubrs
imul
int
aam
cwtl
push
jae
scas
xchg
jo
out
xchg
int3
mov
pop
jl
push
jge
jecxz
add
inc
adc
loopne
lret
jno
in
cmpsb
inc
addr16
cmp
rorl
cmc
loop
rol
jge
aas
fs
mov
mov
incb
orb
cmp
jecxz
out
outsl
mov
stos
cwtl
imul
inc
stos
jno
push
fildl
test
cmc
cmp
or
mov
int3
jle
jecxz
xorl
jmp
dec
inc
pusha
push
test
pop
xchg
js
inc
mov
stos
mov
and
xchg
xchg
or
sub
cmp
sub
cmp
sub
and
hlt
xor
pop
mov
push
jecxz
inc
stc
hlt
sub
mov
mov
int
imul
cwtl
adc
jg
pop
xor
cmc
push
sbb
rcr
cmpsl
insl
scas
cltd
in
iret
jg
jl
push
ret
xor
lds
pop
inc
jecxz
nop
rol
sbb
add
and
mov
adc
xchg
mov
mov
loop
cmpb
loopne,pt
jg
aas
lods
push
mov
push
sub
in
and
movsl
mov
fistpll
dec
cwtl
push
hlt
aam
xlat
mov
jp
test
ds
or
das
jns
inc
inc
cmp
adc
enter
sbb
mov
mov
leave
xchg
mov
mov
and
mov
aas
push
cmp
mov
insb
sub
add
ror
fdivr
or
push
call
or
adc
in
stc
addl
mov
ds
out
out
test
fwait
jecxz
ss
jp
popf
inc
daa
mov
or
xor
divl
in
jnp
cltd
mov
divl
jge
outsb
hlt
mov
lret
mov
pop
push
push
push
xchg
or
fists
dec
or
push
scas
cltd
clc
inc
fadds
fadd
lds
xchg
and
jmp
ror
repnz
cmp
cmc
jb
jecxz
push
clc
insb
movsb
mov
add
adc
mov
in
adc
cs
inc
pop
xor
sub
mov
push
lahf
xchg
rorb
mov
mov
xchg
test
addr16
scas
or
jg
adc
dec
inc
add
mov
inc
cmpsl
jns
fidivrl
cmpsb
ret
int
jbe
or
clc
orl
mov
insl
sbb
sub
fsts
inc
lcall
or
and
scas
mov
mov
stos
loopne
movsl
adc
sbbb
lods
hlt
push
add
or
icebp
mov
pusha
out
xchg
pop
inc
scas
nop
push
jns
xor
mov
mov
cld
out
call
movsb
out
xchg
mov
repz
mov
lea
jl
test
mov
add
dec
and
and
sbb
push
dec
or
or
push
testl
loop
cltd
mov
jl
sub
icebp
jmp
mov
ds
outsb
xchg
pop
test
mov
add
xor
add
js
test
cmpsb
int3
xchg
fwait
pushf
stos
dec
dec
ljmp
sub
movsb
adc
ds
dec
mov
xor
cltd
and
sbbb
dec
aam
inc
or
xchg
lea
dec
fsubrp
and
mov
popf
and
rclb
mov
adc
pop
push
inc
les
and
es
jnp
and
pop
leave
popa
jge
or
ja
test
mov
push
mov
inc
movsl
sub
or
jl
cmpsl
push
cwtl
jnp
jecxz
pop
sub
lods
sub
out
jno
or
addr16
aad
cmp
lods
add
mov
jns
xchg
sarl
sbb
jmp
sbbl
xchg
popf
shll
icebp
pop
pop
lcall
aam
jl
repnz
loopne
adc
shlb
wrmsr
cli
jns
mov
scas
hlt
addr16
stos
addr16
mov
adc
mov
add
sub
adc
stc
push
or
pop
mov
xor
ret
ret
push
mov
dec
push
or
dec
lods
add
push
adc
xchg
xchg
cld
or
inc
mov
push
mov
ja
andl
lret
pop
imul
fimuls
xchg
adc
jp
push
jno
mov
sbb
mov
sbb
pushf
inc
test
ret
xchg
mov
stc
jl
inc
and
jle
mov
add
adc
in
xlat
rcr
inc
mov
cmpb
pop
xchg
leave
add
xorl
mov
mov
sahf
fcompl
cmpb
or
nop
daa
popa
and
fadds
movsl
into
cmp
fs
add
mov
dec
sub
fwait
mov
popa
adc
fcoml
movsl
mov
std
mov
xchg
inc
in
int
leave
jle
adc
ljmp
movsl
xchg
movsl
mov
and
lods
mov
mov
xchg
xchg
or
adc
repnz
aas
adc
test
loopne
jnp
sub
in
fldenv
cmp
lods
js
aam
dec
enter
shr
repz
mov
lds
leave
cmpsl
cmp
clc
daa
xor
inc
sbbb
je
xchg
xchg
cmpsl
rcll
mov
xor
push
push
mov
andl
jne
xor
inc
dec
imul
int3
cltd
mov
jnp
lcall
ret
lret
jmp
or
loopne
pop
cmp
fnstcw
sub
ja
dec
pop
insl
fidivrs
test
jb
push
pop
aaa
cmc
sti
dec
repnz
dec
jecxz
mov
push
mov
stos
add
and
xchg
mov
dec
fistpl
aas
mov
push
dec
ljmp
ret
repnz
adc
and
into
adc
pop
mov
or
jns
xchg
pop
daa
iret
xor
cmp
jo
cmpsl
push
mov
int
adc
sbb
add
pusha
cmpsb
rcr
push
dec
or
xchg
fs
inc
scas
jge
mov
xlat
cld
stos
repnz
gs
fdivs
mov
or
cmp
inc
stc
shrl
icebp
jle
cmp
jp
fsubrp
test
fsubrs
shrb
xlat
in
lds
icebp
dec
pop
or
into
inc
sub
mov
clc
pop
cmp
cmp
stc
ret
lret
push
dec
in
xor
addr16
int3
scas
nop
aaa
add
sbb
inc
pop
jo
insb
sub
hlt
leave
cmc
mov
push
or
test
insb
mov
aaa
inc
or
pusha
or
dec
lods
xchg
inc
call
pusha
mov
cmpsl
inc
mov
adc
sub
and
pop
pop
mov
dec
aad
xor
or
das
movsb
dec
push
sbb
setae
adc
inc
lcall
xor
je
subb
mov
xor
jle
mov
adc
mov
aas
sbb
push
add
sbb
mov
jge
aad
mov
hlt
mov
call
popf
aaa
adc
push
mov
leave
leave
pop
scas
and
dec
stos
in
ja
jmp
ret
jne
cmp
push
fcmovbe
push
cld
scas
or
jp
sbb
sub
or
mov
sbb
xlat
and
leave
in
scas
and
outsb
cld
loopne
repnz
divb
sub
xchg
cmc
xchg
fstps
shrb
mov
cmp
mov
fldcw
xlat
and
and
add
mov
push
add
add
sbb
lahf
cwtl
pop
pop
ljmp
fidivl
test
pop
or
loopne
hlt
js
mov
aas
cmpsb
shl
fld1
xchg
subb
and
into
in
fcoml
sbb
sub
adc
in
repz
push
movsl
push
sti
out
jno
xchg
sub
sub
dec
jge
pusha
fdivr
jmp
aad
xchg
jge
xorb
popf
xchg
je
push
xor
addb
lret
iret
xchg
dec
lods
adcb
lock
mov
pop
ljmp
and
iret
mov
or
js
mov
and
mov
lods
inc
imul
jno
adc
and
jg
mov
push
iret
mov
scas
jb
mov
sub
mov
inc
dec
rorl
mov
lods
mov
ljmp
insl
jb
xor
lahf
mov
pop
stc
jp
imul
jno
jnp
loope
xchg
movsl
jns
push
xchg
jl
xchg
mov
jecxz
out
inc
cmp
mov
mov
insl
aad
mov
lcall
push
rorb
push
fcoms
xor
fimull
out
pushf
adcl
sbb
xchg
push
dec
andl
mov
stc
mov
push
dec
sub
cmpsb
push
int
fadds
pop
shll
mov
push
int
out
mov
fnstcw
cltd
dec
out
push
push
pop
test
sub
or
sbb
mov
mov
jns
lods
mov
out
arpl
stos
jecxz
stc
maskmovq
testl
hlt
push
rcrb
test
movsl
adc
loopne
sysenter
sbb
shrl
pop
fs
icebp
ss
xchg
mov
inc
orb
test
pusha
sub
inc
mov
add
sbb
lcall
sti
mov
dec
lods
pop
aas
mov
stos
cmp
loopne
fisubs
pushf
push
dec
xor
cmp
push
aad
cmp
lods
insb
enter
push
push
mov
cs
and
mov
fiadds
shrl
cmpsb
sbbb
mov
jle
push
and
cmp
bts
mov
and
and
loopne
push
mov
push
fstl
push
imul
jmp
cmp
gs
dec
bound
or
daa
hlt
incl
aas
in
lds
xchg
xchg
mov
pop
ss
fldt
mov
mov
js
aaa
and
shrb
cmp
fisttpll
xor
inc
jecxz
xchg
dec
rol
icebp
mov
xchg
lods
lcall
out
mov
icebp
pop
cmp
add
inc
push
xor
movq
dec
push
je
fisttps
dec
fiaddl
insl
repz
inc
xchg
mov
cmp
push
rclb
mov
lcall
cli
mov
xchg
mov
lcall
repz
lcall
iret
mov
jmp
jge
lods
stos
int
mov
lds
cmc
pop
mov
push
sti
icebp
xchg
adcb
xchg
ds
icebp
stc
into
xor
add
sub
js
into
mov
and
sub
inc
cld
int
adc
adc
mov
lods
adc
mov
mov
cltd
jns
inc
pop
ret
mov
mov
xchg
fidivl
lahf
leave
loop
push
cmpsl
inc
mov
xchg
outsl
push
scas
test
testb
inc
repz
xchg
mov
pop
mov
loop
call
xchg
mov
in
sub
hlt
enter
out
cmp
mov
iret
adc
jecxz
das
dec
mov
test
movsl
jb
comiss
fisubs
and
mov
push
dec
mov
std
hlt
faddl
push
shl
push
jle
mov
lret
ljmp
mov
jo
loopne
pop
mov
orb
dec
aaa
or
push
and
mov
push
aas
loop
xor
sub
div
mov
data16
into
xchg
lds
sub
out
sbbl
mov
mov
and
add
fwait
loope
testl
sub
fdivrl
push
mov
adc
js
xchg
pop
lahf
sbb
int
adc
add
inc
mov
in
daa
sub
shl
stc
pushf
pop
inc
adc
mov
mov
jp
pop
push
ret
sub
rcrb
sub
clc
loopne
shrl
mov
dec
cmp
hlt
xlat
inc
call
popa
aam
iret
subl
inc
or
xchg
push
cmc
fmul
pusha
jmp
clc
lds
or
sbb
aaa
or
cmc
cld
jg
lock
xorl
xchg
scas
add
dec
push
pop
jae
xor
popa
mov
pop
cmp
xor
out
jae
ss
mov
scas
jmp
ficompl
jl
mov
cmpsl
xor
std
ds
data16
cmp
sbb
sar
jp
sti
pop
jp
out
insl
stos
mov
pop
jb
pushf
dec
sub
jp
arpl
ret
mov
pop
mov
sahf
mov
hlt
inc
inc
inc
icebp
xchg
mov
add
mov
xchg
or
lcall
sub
sub
scas
mov
jecxz
or
dec
inc
cmp
cld
insl
mov
jecxz
cwtl
cmc
and
cmp
jbe
lods
addr16
mov
dec
and
inc
push
cmp
into
dec
jo
mov
pop
enter
jecxz
mov
jae
mov
in
sti
mov
sub
dec
dec
test
aam
and
dec
scas
sahf
test
movsl
adc
pusha
dec
mov
jl
sbb
lods
xchg
pop
jae
push
in
popa
std
lds
sub
je
or
inc
andl
lcall
in
and
mov
mov
sbb
dec
lods
push
loopne
das
xor
jns
and
jb
nop
ljmp
movsb
mov
mov
and
scas
and
test
je
mov
sbb
loopne
dec
mov
mov
jg
jno
out
lods
fsubr
mov
push
sub
hlt
mov
rorl
cmpsl
sub
mov
inc
fcmovnbe
mov
sahf
push
pop
mov
pop
push
jge
xchg
mov
mov
cmpsb
or
xchg
add
and
lds
push
push
sahf
aam
mov
cmp
inc
inc
in
xor
add
mov
xchg
cmp
ror
mov
mov
lahf
iret
imul
push
and
call
icebp
aaa
out
cmp
add
sub
add
test
shl
arpl
sbb
adc
sbb
mov
mov
mov
aas
daa
aas
int3
movsb
inc
data16
push
xchg
xchg
mov
sub
stos
dec
ficoml
sbb
cmp
and
imul
or
add
cmp
and
dec
sub
cmp
lahf
aad
jns
mov
cmpsl
icebp
cmpsb
pop
lea
faddp
sub
push
scas
outsb
sbb
call
scas
cli
fmuls
xchg
cmp
or
into
nop
int
cmpsb
inc
xchg
cmp
dec
mov
inc
ja
mov
dec
dec
or
mov
and
mov
idivl
jo
cmp
or
mov
xor
clc
outsl
sub
fwait
mov
push
fstpt
out
js
lock
jno
dec
arpl
push
scas
xor
xchg
test
ljmpw
movsb
push
leave
test
sub
sub
pop
jnp
xor
call
stos
jns
in
mov
sbbl
push
pop
out
fnsave
stos
xchg
xchg
shlb
dec
pop
xor
data16
cmpsb
imul
cmp
jmp
cltd
or
push
push
lock
xlat
mov
ds
fldcw
pop
imul
mov
out
adc
lret
outsl
les
mov
add
jbe
sbb
pop
pop
in
js
inc
js
push
mov
ret
xor
lea
es
xchg
jmp
adc
sub
iret
sbb
dec
mov
or
pop
inc
add
add
repz
iret
sub
pop
push
pop
out
jle
mov
xchg
push
mov
rorb
inc
mov
mov
xchg
aad
iret
icebp
fcmovb
lret
mov
gs
mulb
xchg
mov
dec
call
dec
test
lcall
cmpsb
dec
sub
arpl
xor
rorl
or
mov
push
fnstcw
push
out
sbb
pop
xchg
mov
dec
push
pop
out
das
cli
mov
pop
mov
jge
popf
sub
jbe
cmp
xor
out
sbb
jns
or
add
jle
lds
std
adc
fwait
pop
lcall
fsub
push
xchg
push
xchg
outsl
mov
insb
pop
push
lods
mov
or
insb
out
lret
jp
push
aam
mov
inc
mov
sub
mov
cwtl
jns
nop
inc
adc
and
loop
fmull
jne
shr
jecxz
std
clc
sbb
push
lret
mov
cmc
test
je
ja
jle
xchg
pop
or
push
fs
xchg
pop
ret
leave
adc
pop
loop
push
push
sub
mov
into
push
mov
xchg
xchg
sahf
insb
pop
mov
jge
xchg
out
out
push
jae
adc
sbb
fwait
push
dec
cmpb
fists
ret
cmpsb
sub
call
lods
lods
adc
sbb
iret
adc
inc
sbb
dec
fildll
repz
leave
sub
and
push
pop
in
mov
inc
addr16
pop
int
sub
aaa
or
mov
iret
and
fistpl
sbb
xor
lds
xchg
cmpsl
test
lds
and
mov
jmp
outsl
or
in
pop
dec
mov
and
mov
shl
push
packsswb
adc
call
sahf
fidivl
and
and
mov
dec
addr16
insb
fsubrp
and
mov
push
inc
xchg
loope
pushf
inc
jmp
cld
movsl
mov
jg
cmp
loop
xchg
xor
stc
outsl
jle
add
mov
mov
cmpsb
int
push
nop
jae
mov
ret
ret
push
push
pop
xorb
in
xorl
cmp
push
lods
mov
add
mov
sub
cmpb
into
xchg
dec
repz
or
repnz
enter
insl
jecxz
popf
shll
lcall
aaa
cld
test
scas
ficoml
pop
mov
outsb
lds
rcrb
mov
push
jbe
mov
sbb
xor
les
aas
inc
test
pop
inc
cltd
mull
movsl
out
es
out
mov
cmp
jns
lahf
iret
lock
xchg
inc
dec
pop
out
cli
jne
out
mov
dec
mov
sub
xchg
pop
ss
leave
ret
push
mov
mov
inc
pusha
ror
loop
fldenv
mov
sub
xchg
scas
sbb
pop
ss
lea
out
popf
mov
aad
clc
std
pop
int3
fs
divl
add
mov
add
rorb
mov
sti
sub
mov
subl
inc
mov
inc
xchg
cmpsl
stc
adc
xchg
lret
pop
mov
add
icebp
icebp
adc
idivl
or
mov
inc
imul
orb
cmp
iret
cmc
adc
ret
call
fstpl
in
in
jne
out
scas
testl
bound
xchg
imul
inc
adc
test
push
out
loope
mov
jno
mov
jo
push
sbb
incb
push
std
dec
jo
out
ljmp
inc
pop
xchg
movsl
lea
cmpl
jmp
mov
and
push
inc
clc
push
sti
jb
mov
push
push
loopne
subb
lods
rorl
out
shlb
add
sarb
xchg
aas
push
mov
and
movsl
dec
mov
dec
xchg
mov
popf
sub
cmpsl
jmp
outsb
xor
xchg
dec
call
cmp
js
xchg
call
daa
call
lods
mov
aad
fiadds
sbb
dec
fisubrl
scas
int3
pop
cmp
and
jp
mov
mov
fs
push
stos
push
loopne
fidivrl
fidivrs
sub
sbb
mov
nop
inc
test
jae
call
fwait
stos
out
popa
lea
mov
out
mov
dec
cmp
movsb
inc
push
xchg
stc
sub
scas
fwait
or
xchg
scas
fwait
mov
into
and
mov
xchg
aas
xchg
jmp
pop
add
or
mov
loope
and
lods
data16
dec
lcall
iret
aaa
shlb
jno
xchg
push
jmp
jmp
cmp
cmc
out
nop
xchg
push
pushf
fcomip
cmp
movsl
xchg
aaa
addb
movsb
inc
out
jmp
mov
cwtl
in
add
mov
int3
loopne
mov
sub
lds
inc
fistpll
mov
xchg
insb
js
lds
jl
jecxz
fistpll
push
or
or
inc
inc
insl
std
cld
call
movsb
inc
mov
xor
add
cmc
and
jp
xorb
xor
enter
ds
cld
or
out
lods
sub
les
aam
in
cmp
ja
adc
inc
cmpsl
lods
pop
in
stc
aam
adc
xor
shlb
je
imul
scas
pop
cld
push
ret
mov
repnz
dec
mov
popf
mov
jb
pop
popa
push
mov
push
imul
imul
movsb
mov
xchg
mov
inc
aad
lret
jae
and
cs
ja
hlt
add
push
add
movaps
mov
push
jb
dec
pop
sub
pushf
pushf
or
mov
lods
inc
pop
mov
popf
lods
and
ret
mov
lods
loopne
mov
shll
roll
jno
icebp
lock
mov
xlat
mov
cmc
dec
cmpb
fmull
js
pop
add
push
hlt
jb
push
sti
xor
inc
icebp
mov
testl
mov
adc
mov
lock
pop
fwait
adcb
fmulp
test
sub
imul
iret
lret
xchg
add
cmp
into
mov
xchg
addb
stc
mov
les
adcb
jo
mov
cmpsl
and
lcall
in
push
pusha
rcl
sbb
inc
inc
lcall
mov
mov
cmp
jbe
xchg
cmp
jmp
add
inc
and
and
add
jmp
popf
lret
add
mov
testl
and
push
sbb
out
and
sbb
or
in
and
and
imul
add
insl
repz
into
out
jecxz
sub
mov
add
idivb
daa
pop
add
aad
out
push
loope
lods
lods
xor
mov
scas
fisubrl
mov
pusha
sbb
aas
aaa
pop
push
add
enter
cmp
shl
ficompl
adc
jno
das
ss
or
lods
or
sahf
mov
movl
faddp
in
dec
jnp
pop
outsl
les
repz
hlt
iret
cs
mov
fstpl
idivb
mov
push
jecxz
mov
movsl
sbb
daa
sub
jg
jb
fwait
mov
mov
loop
jbe
xlat
scas
dec
orl
sbb
mov
shl
add
std
negl
cmc
js
je
out
fnstsw
stos
insb
add
sahf
jmp
push
cld
sbb
pop
mov
sbb
lock
mulb
scas
pop
xchg
adc
adc
jl
ret
or
cmpsl
insl
jno
or
cmp
cmp
test
and
in
pop
cmpsl
enter
push
jmp
shll
xchg
xchg
data16
sub
sub
cli
mov
movsl
cmp
int3
mov
sub
jl
mov
dec
test
xchg
push
mov
mov
ficoms
pop
sahf
das
dec
cmpsl
jns
popf
clc
sub
scas
outsl
mov
sbb
cmpsb
push
dec
sti
insb
xlat
lahf
in
popf
stos
sbb
js
xchg
push
jb
cld
and
jg
enter
mov
pop
out
jnp
lods
fstpl
push
jnp
mov
das
add
mov
aaa
sub
jecxz
rcll
sbb
mov
nop
fs
mov
cmp
mov
mov
push
cmp
cs
shr
xchg
lcall
repnz
inc
mov
dec
inc
ja
mov
cwtl
fucomp
or
fldl
dec
mov
loopne
cmpsl
xor
imul
xchg
hlt
ljmp
xor
pop
mov
fs
xor
fildll
push
xchg
xchg
iret
in
push
dec
dec
push
ror
fiadds
loopne
lcall
int
ds
insl
ret
lods
lea
pop
sbb
cmp
mov
jp
pop
int
popf
rcl
popa
out
mov
mov
popf
cwtl
adc
mov
pop
pop
stc
mov
and
mov
push
mov
clc
clc
jp
pop
jb
in
sti
xchg
imul
jbe
negb
lods
les
jp
jns
dec
mov
xchg
or
sarl
pop
fists
into
jg
cmp
orb
in
add
cli
add
inc
int3
pop
and
or
sub
hlt
pop
movsl
fimull
xor
inc
jge
pop
mov
inc
sarb
add
cmp
clc
aas
mov
mov
test
outsl
nop
mov
into
push
loope
xchg
push
jg
in
loope
add
shufps
or
shlb
sbb
sbb
mov
or
cltd
xor
shr
mov
push
out
add
movsb
ljmp
cmpsl
push
clc
dec
or
xchg
rorb
std
test
jns
cmove
pop
in
repz
hlt
add
push
sub
jno
cli
scas
mov
cmp
mov
call
mov
push
xchg
push
movsl
outsb
dec
and
dec
mov
xchg
addr16
popf
jbe
dec
stos
in
insb
mov
push
lds
or
shr
scas
push
push
and
push
fs
push
pop
xor
sbb
das
sub
or
xchg
adc
aad
push
inc
jge
lods
xor
ja
into
test
inc
cmpsl
in
js
lock
pop
cmp
rorl
mov
js
mov
std
inc
popl
mov
jle
les
cmp
adc
shlb
ds
and
jae
shl
addr16
inc
ficompl
xchg
pop
adc
repz
push
out
and
int
push
or
or
xchg
mov
lock
mov
scas
xor
clc
mov
cmp
pop
in
lret
mov
idivl
hlt
movsb
pop
pushf
pop
pop
and
out
std
xchg
out
jmp
lahf
push
jp
sti
loope
ror
mov
xor
sbb
add
loop
loope
popa
scas
sbb
and
jo
dec
insb
repz
sarl
stos
inc
push
or
or
icebp
js
mov
sub
dec
mov
inc
fldt
out
jmp
adcl
lret
hlt
add
lds
xchg
fsubrl
popf
movsb
outsl
fnstsw
andb
xchg
and
daa
sub
cli
dec
xchg
aam
xor
lds
cltd
xchg
jae
imul
dec
adc
add
jl
out
scas
push
call
sbb
lods
or
xchg
sub
fchs
std
jmp
aam
in
cli
jne
test
lock
movsb
inc
inc
cmp
daa
fistps
ljmp
pop
adc
mov
mov
sub
aad
jl
pop
jno
push
dec
inc
test
insl
jg
sub
cli
scas
sbb
idivl
push
in
sub
daa
in
pop
jmp
dec
icebp
das
out
jge
jge
in
push
fsubrs
mov
test
ja
cld
std
xchg
dec
mov
or
and
enter
pop
shrb
imul
in
pop
sbb
into
xchg
sub
dec
scas
imul
sbb
loop
xchg
pop
lret
out
decl
inc
movsl
imul
fs
push
cmp
stos
xchg
mov
jne
xchg
lret
test
enter
stos
into
inc
clc
jmp
jecxz
loopne
into
cmp
xchg
or
in
push
adc
mull
ficompl
int
mov
jecxz
ljmp
add
cmpsl
ja
out
int
mov
mov
mov
outsl
movsb
das
and
sbb
nop
aaa
loopne
dec
repnz
dec
mov
jnp
mov
xor
daa
lret
cmpsb
cmpl
aas
out
fidivl
or
push
adc
adc
outsb
adc
jne
scas
adc
or
push
jg
sahf
popf
or
and
fistpll
mov
xchg
rorl
insl
cmp
adc
mov
popa
aam
jne
pop
scas
xor
int3
std
imul
dec
mulb
insl
cmp
out
inc
aas
js
and
aam
sahf
mov
xchg
mov
neg
or
push
push
call
stos
enter
inc
hlt
aad
xchg
fstpt
repnz
cmpsb
into
icebp
or
shrl
mov
jmp
je
xchg
mov
ret
pop
push
xlat
adc
pop
xorb
pushf
and
push
fs
xchg
mov
sub
mov
scas
cmp
add
mov
dec
lret
jbe
in
ficomps
pextrw
out
sub
jbe
lock
outsl
pop
xor
or
or
mov
and
cmp
pop
stos
mov
add
cmpsl
adc
fnstcw
cmc
inc
je
and
xchg
test
push
insb
mov
popa
and
jecxz
inc
movsb
es
mov
gs
pop
int3
pop
mov
mov
push
xchg
push
call
gs
ja
ret
call
sub
cmp
sub
sahf
dec
mov
ljmp
inc
stc
mov
ljmp
scas
or
dec
rcrb
jnp
rcll
fsubrl
mov
ljmp
insl
addr16
cmpsl
pop
jmp
cmp
pop
ljmp
jl
push
adc
fisubrs
add
xchg
dec
mov
fwait
push
lock
mov
and
nop
mov
lahf
cs
scas
in
cmpsb
cmp
dec
and
jmp
mov
jne
xchg
cmp
dec
cmpsb
test
dec
ret
call
and
or
inc
mov
das
sahf
arpl
xchg
sarl
push
xchg
test
sub
test
inc
fcmovne
test
scas
loope
jmp
scas
mov
cwtl
hlt
call
decl
mov
loope
or
outsb
ss
fisubrl
aam
sub
cli
rcl
push
sub
jecxz
stos
test
lods
dec
jge
jbe
lock
sbb
xchg
jns
test
stos
lds
ficomps
mov
das
pop
sahf
xchg
out
movsl
mov
xor
sub
pop
push
imul
sbb
jne
dec
dec
pop
pop
jl
cmp
fucomp
roll
pop
push
clc
rcll
cli
repz
inc
fucomi
push
xchg
in
clc
icebp
stos
sub
clc
jbe
flds
inc
add
mov
jl
cmp
test
inc
test
add
shlb
scas
ret
cmpb
loopne
jl
xlat
xchg
sbb
pop
adcb
ljmp
xor
cmp
xor
jge
cmp
inc
aad
stos
enter
xchg
jbe
dec
outsl
fstpt
jns
lret
push
cli
dec
rcrl
leave
lahf
cltd
stos
mov
mov
xor
scas
lret
sbbl
mov
xchg
xchg
int
lods
mov
xor
mov
inc
cltd
or
loopne
js
scas
push
lods
mov
jge
jnp
xchg
arpl
iret
mov
lea
loop
insb
movsb
popa
mov
aas
lods
das
adc
mov
mov
jmp
xor
inc
push
or
ret
cltd
cmc
push
sbb
push
adcl
push
mov
popf
push
or
aas
jno
cmp
cltd
sar
pop
jnp
xchg
aaa
mov
inc
adc
fisttpl
ss
push
mov
decb
add
shl
loop
mov
test
fcom
adc
aas
pop
cmp
addl
cltd
loope
cmpsb
inc
cmp
jmp
testl
repz
dec
les
pop
cltd
or
lahf
rorl
aas
mov
iret
and
inc
or
shr
cmc
jne
andw
fdivrl
loop
inc
dec
sbb
aaa
ja
push
imul
push
notb
fists
cwtl
jle
fwait
lret
pop
cmpsb
sbb
adc
xchg
and
repnz
adc
loopne
pop
add
push
leave
fwait
push
loopw
rcrb
or
dec
imul
inc
xchg
mov
lds
xlat
mov
nop
repnz
lock
shll
je
cmp
in
xor
inc
lock
lahf
pushf
xchg
xchg
stos
test
push
mov
lods
scas
jmp
push
imul
out
push
clc
stos
dec
in
mov
mov
arpl
jl
pop
inc
and
jecxz
xor
xor
jle
test
arpl
adc
fucomi
sub
push
mov
insl
jge
aaa
sbb
lea
adc
sub
pop
xor
inc
sub
cmp
outsl
iret
adc
jp
push
fdivrs
iret
in
out
dec
or
push
arpl
hlt
jb
pop
je
fsub
sbb
ja
es
fsubrl
inc
movsb
fiadds
inc
test
xchg
cmc
rolb
data16
ss
cmpsb
push
sbb
negb
fwait
sub
jno
enter
cli
cmp
jno
jge
loopne
mov
mov
aam
mov
aaa
lock
push
and
cmpsb
sub
pop
sub
mov
mov
outsb
pushf
dec
sbb
das
inc
es
scas
sbb
loop
popf
repnz
sbb
cmpsb
jmp
pushf
rol
xorl
movsbl
mov
incl
loopne
pop
mov
xchg
enter
rcrl
pushf
jb
test
jno
xchg
in
xchg
pop
pushf
ror
stc
sbb
mov
enter
scas
push
inc
cmp
sbb
movl
adc
insl
sub
fidivrs
mov
sarl
gs
repz
std
aas
mov
jg
sub
jae
addr16
addr16
pusha
adc
in
out
in
cld
inc
psubb
mov
cli
add
xor
fs
mov
jnp
loope
or
sahf
ficoml
mov
or
aam
daa
mov
out
xlat
push
daa
mov
stos
in
aaa
sub
lret
call
mov
jmp
cmpb
xor
test
jp
movswl
sbb
mov
sub
mov
lds
das
mov
push
mov
fmull
rcll
gs
ret
push
ja
xchg
orb
add
repnz
xchg
ja
lahf
add
imul
dec
bound
dec
dec
inc
rcrb
je
or
sbb
sub
xchg
pop
scas
adc
jne
test
pop
pop
push
ret
mov
add
out
loop
rorl
dec
jb
andb
sub
or
add
inc
mov
adc
mov
popf
lods
adc
pop
orl
jns
jnp
loop
les
cli
fistpl
mov
lcall
pushf
dec
pop
and
sarl
push
push
out
push
mov
rcrb
push
sahf
mov
loopne
xor
rolb
jbe
cld
scas
mov
das
pop
xchg
fcoml
mov
sub
aam
xlat
dec
mov
mov
js
xlat
test
ficomps
rcrl
clc
xchg
test
adc
mov
xchg
or
sub
add
lret
push
lock
shll
test
adc
fstpt
jmp
mov
mov
jns
mov
push
adc
jbe
and
cmp
jmp
es
jmp
mov
test
dec
add
bound
mov
adc
scas
inc
push
xchg
mov
dec
imul
lods
les
mov
loopne
pusha
sahf
cld
movsb
xchg
inc
pop
into
mov
insb
movsb
pop
push
cmp
sahf
jl
mov
enter
out
addr16
inc
pop
xchg
ja
sbb
fwait
sbb
xchg
mov
int
call
mov
aam
repnz
cli
test
iret
mov
jl
push
xchg
inc
mov
pop
add
decl
in
lcall
add
pop
sub
xchg
add
and
aam
xchg
imul
mov
push
lret
testl
nop
push
in
sub
xor
mov
xor
mov
pushf
adc
notl
sub
sbb
cmpsl
lods
sbb
sbb
pop
cltd
stc
xor
icebp
into
mov
bound
ret
incb
fisubs
cmp
sub
ja
jo,pt
pop
cmc
out
and
inc
lahf
xchg
adc
cmpsb
jge
aam
and
cltd
inc
xchg
out
clc
stc
push
pop
jbe
mov
inc
jecxz
popa
fists
sbb
int
hlt
pop
xchg
xchg
mov
lods
xchg
mov
inc
stos
cmp
push
cmp
iret
aas
outsl
lods
mov
repnz
and
fs
sub
in
mov
fwait
and
or
xchg
pop
jle
repnz
stos
mov
stos
jle
cmp
lret
jno
cmp
iret
cmc
lock
mov
mov
je
leave
ja
fsubl
das
dec
or
popa
call
push
sub
les
xchg
int3
icebp
cli
jno
push
jne
xor
dec
test
fwait
les
jno
jecxz
fisubs
cmp
push
cmp
mov
dec
dec
dec
cltd
xchg
lret
arpl
jg
ret
movsl
jne
mov
adc
pushf
test
cmp
enter
dec
das
fs
lahf
and
fstpl
in
adc
sub
popa
push
add
bound
rorl
jb
mov
push
rcrl
or
leave
inc
adc
mov
adc
mov
xor
test
adc
shll
xchg
push
xchg
pushf
mov
mov
xchg
xor
cmp
fdivrs
lcall
lods
pushf
mov
mov
jl
ja
adc
jbe
mov
int
adc
imul
mov
in
jns
loope
and
es
xor
dec
ss
xchg
adcb
pop
or
lock
mov
mov
cmp
aas
add
sti
push
fnstenv
add
inc
in
push
shlb
xlat
ret
aas
pusha
fidivrl
mov
imul
hlt
dec
mov
adc
sahf
cld
fwait
lods
cmp
loope
stos
imul
add
das
dec
push
lods
or
xor
mov
hlt
int
xlat
dec
xor
mov
push
sahf
add
sbb
ret
or
mov
scas
out
out
in
movsb
ja
sbb
ficomps
mov
cmp
je
cmp
add
or
or
jns
jmp
jbe
lahf
push
nop
cmp
sub
jno
flds
repnz
adc
int
mov
push
pop
inc
fcoml
pop
cmpsl
jne
rcrl
mov
mov
fmuls
nop
mov
push
mov
push
adc
adc
arpl
clc
dec
movsl
mov
mov
jns
movsb
into
arpl
mov
lcall
mov
jb
out
mov
adcl
repz
sti
inc
dec
cmp
push
fsubrs
cmp
fstpl
mov
and
mov
mov
mov
xor
std
shrb
inc
int
add
popf
sbb
inc
dec
xor
test
push
imul
frstor
ss
movsl
xchg
lds
pop
fcoml
ret
pop
lods
lods
int3
ret
cs
rorl
sbb
push
mov
jnp
sarl
or
mov
jle
lret
test
push
mov
rcll
dec
xlat
jecxz
enter
mov
xchg
sbb
pop
dec
les
adc
xchg
ss
dec
aam
lock
subb
popf
fstl
test
ficoms
arpl
jl
out
out
inc
mov
jmp
sub
cmp
or
imul
loop
jb
rcl
dec
sbb
sub
push
add
aad
inc
sti
sbb
std
pop
sahf
inc
js
sarl
pop
lods
or
mov
ret
sub
dec
push
xor
outsb
mov
dec
lock
cmpsl
lea
dec
scas
aaa
ret
test
mov
mull
out
call
and
dec
push
push
shll
aas
mov
test
jno
jge
push
mov
sahf
adc
pop
call
outsl
inc
int3
mov
cmp
sub
lods
ljmp
lock
pop
test
insb
push
pop
mov
pop
fistpl
pushf
jp
insb
in
lods
mov
sbb
mov
repnz
xchg
xor
popa
or
cmp
loop
movsl
pop
sbb
inc
add
repnz
mov
cli
loop
movsl
jle
test
inc
xchg
dec
aaa
add
ror
jb
pop
fimuls
cwtl
and
jbe
das
lods
jns
mov
js
enter
mov
and
out
out
jle
int3
stc
rcrb
lahf
enter
sahf
push
push
sar
jge
les
mov
cs
and
cmp
mov
inc
sbb
or
mov
jb
in
add
sub
mov
mov
ljmp
inc
mov
scas
cmp
mulps
mov
inc
pop
push
xor
outsb
mov
xor
push
lahf
mov
ret
sub
push
mov
push
adc
fisubrs
inc
into
subl
movl
push
xor
pop
sub
and
popf
push
inc
sub
lahf
outsb
xchg
or
pop
jmp
cwtl
or
lea
jnp
pushf
inc
stos
xor
mov
addr16
ljmp
fimuls
mov
pop
dec
movsl
jmp
mov
pop
xchg
push
out
daa
xchg
ret
add
xor
mov
flds
imul
jp
xchg
lods
jle
cld
xchg
cmp
dec
xchg
cmp
cmp
pop
mov
adc
hlt
jo
push
xor
mov
jl
mov
adc
mov
stos
pop
sbb
sub
mov
mov
aam
leave
sub
es
cmp
mov
out
mov
xchg
or
adc
pushf
mov
pop
addr16
inc
mov
fldcw
mov
fnsave
lods
fsubl
fstpl
xchg
stc
mov
mov
sbb
dec
mov
pop
dec
bound
adc
sbb
jp
jnp
loop
xor
cmp
bound
adc
mov
add
or
inc
cmp
ret
mov
add
mov
mov
adc
hlt
repz
out
je
idivb
mov
or
fdivs
sub
mov
out
cli
cmpsb
or
sbbb
mov
fs
cli
xor
jnp
mov
mov
loope
gs
sahf
mov
add
add
std
jmp
sti
xor
pop
shll
mov
add
push
cmpl
lahf
ret
imul
xor
loop
leave
cmp
arpl
jae
es
sub
loopne
out
add
icebp
pop
add
in
clc
jl
push
sub
mov
mov
test
ret
push
scas
pop
subl
xor
cmp
jge
jle
sahf
inc
not
lret
and
out
dec
in
push
push
sub
imul
stos
cmpsb
push
mov
pop
scas
xor
mov
cwtl
stos
iret
outsb
cli
or
mov
push
push
sub
mov
xor
stos
xchg
pop
loope
enter
xchg
mov
test
jl
cwtl
dec
jge
push
lahf
xchg
rcrl
xchg
and
inc
loopne
lock
outsb
outsl
pop
out
cpuid
inc
or
popf
out
lret
pop
cmpsb
into
stos
mov
das
int
gs
outsb
push
xchg
or
sbb
aam
pop
or
aad
xorb
cmp
or
pop
inc
cltd
loope
xor
add
scas
sub
jnp
call
xchg
sbb
sbb
jle
sarl
jp
push
scas
add
jno
int
into
sbb
lock
push
pop
sub
in
lcall
std
jg
cmp
scas
leave
es
out
ds
adc
cmp
xchg
jle
fs
inc
jle
pusha
or
lock
insb
cmpsl
push
mov
enter
xor
inc
mov
rolb
out
xchg
xchg
fs
cs
jno
or
or
fs
mov
xchg
pop
push
cwtl
pop
out
pushl
jne
test
mov
pop
rorl
jl
repnz
cli
sti
stos
outsl
and
cld
icebp
arpl
cmc
std
jp
icebp
push
pop
xor
cmp
imul
xchg
push
or
inc
bound
clc
or
add
shll
test
adc
jo
pop
pop
add
inc
sub
or
ffreep
imul
xor
fisubs
paddq
or
pop
sub
cmp
add
pop
mov
and
arpl
inc
fcompl
movsl
pop
xchg
pop
test
rorb
cmc
or
add
jae
sbb
or
insb
lret
repnz
fwait
mov
test
cmp
fsubrs
outsl
cli
xor
sarb
jae
out
lds
fnsave
mov
orl
jg
sub
sahf
xor
push
out
mov
rcl
loope
lods
xlat
or
mov
rorl
sahf
lahf
sub
mov
icebp
xlat
sbb
mov
aaa
shlb
sbb
int
mov
loopne
pop
lods
mov
or
push
std
jl
jb
ret
lods
lock
inc
add
adc
cmp
xchg
mov
push
and
popa
js
stos
test
pop
int
jg
sbb
imul
mov
stc
push
jne
mov
dec
push
nop
test
push
or
ljmp
or
repz
idivb
mov
pop
ret
sub
icebp
icebp
shll
dec
jbe
or
aad
int
inc
mov
daa
movsl
pop
mov
cmp
mov
divb
lret
jb
nop
in
adc
add
out
pushf
cmp
movsl
les
sti
mov
mov
cmc
fadd
cmp
mov
adc
repnz
repnz
or
jmp
jle
enter
arpl
mov
inc
iret
cmp
sbb
jae
movsb
shrb
les
push
mov
sub
xchg
cli
inc
and
out
add
jno
adc
push
lea
sub
lock
and
or
mov
mov
mov
aad
stos
jl
push
xor
add
or
lods
sbb
test
std
scas
mov
mov
mov
jge
dec
and
mov
lahf
cmpsb
lods
dec
and
pop
add
insb
cmpsb
sub
mov
ret
data16
or
out
or
iret
sub
mov
xor
arpl
push
cmc
and
mov
push
add
add
ljmp
stos
cmp
fucomip
dec
je
aaa
orb
scas
push
dec
leave
imul
add
rorb
mov
jne
imul
out
xchg
mov
ret
mov
enter
cmp
insl
jecxz
sub
and
sbb
xchg
push
or
leave
sub
arpl
lock
mov
xchg
dec
cmp
mov
clc
jnp
push
les
aam
enter
dec
stos
aam
pop
sub
sahf
push
ds
mov
mov
xchg
in
inc
dec
std
xchg
mov
xchg
adc
or
mov
aas
daa
and
mov
adc
scas
test
push
sub
shrb
push
out
push
test
cltd
test
xchg
inc
leave
lcall
adc
xchg
scas
out
fstpt
lods
lds
push
sbb
enter
imul
lcall
jae
mov
mov
incb
leave
shrb
cmp
cs
mov
xchg
mov
mov
std
jp
fcompl
adc
cmp
es
dec
aaa
xchg
dec
mov
or
loopne
xchg
sub
jb
stos
rol
add
mov
sub
cld
xchg
int3
aaa
test
es
inc
pop
and
jp
mov
mov
dec
nop
aaa
dec
cli
push
ret
xchg
xchg
icebp
ds
inc
mov
xchg
add
repz
cmp
jb
xor
inc
mov
in
ss
push
nop
sahf
out
mov
push
adc
mov
sub
mov
mov
mov
add
iret
es
adc
fwait
cld
cld
sub
shr
test
push
push
xchg
cmp
cli
push
in
loope
int
lods
mov
or
out
into
flds
inc
jl
jg
nop
pop
push
out
cwtl
popf
add
int3
jg
pop
inc
mov
pop
shll
xor
jg
ljmp
xchg
insl
fildll
jp
repz
or
cs
pop
insl
ljmp
in
mov
jnp
mov
add
popa
notl
fdivr
sarl
or
cs
mov
xlat
lock
rcll
mov
cli
dec
negl
into
push
cmp
sahf
int3
sbb
cmp
scas
mov
jns
sub
ja
roll
mov
cmc
mov
fbld
mov
push
movsb
cmpsb
inc
test
jmp
add
negl
mov
sbb
stc
mov
sub
imul
fisubl
lret
xor
aad
jmp
push
jae
fwait
cmp
ret
out
out
jp
pop
rorb
cmp
jno
xor
mov
pushf
xor
lock
enter
popa
add
in
jne
fs
fadd
inc
in
in
in
dec
or
mov
ljmp
mov
inc
mov
xor
pop
int3
and
jl
jns
stos
enter
nop
adc
jb
fiadds
pop
test
rolb
insl
mov
jmp
fninit
mov
imul
jbe
inc
lret
xchg
or
dec
hlt
mov
push
cmc
pop
div
mov
push
mov
adc
stos
cli
push
adc
dec
mov
cmp
lea
scas
mov
sub
inc
sub
stc
movsb
addr16
xchg
ds
cmp
jmp
sti
insl
shl
and
jne
lods
pop
xor
fisubs
push
lods
mov
rorl
sti
push
pop
roll
cwtl
push
sub
mov
push
xchg
pop
sub
shrb
jl
es
sub
int3
mov
mov
leave
sbb
xchg
ss
cmp
ficompl
cmp
aas
cs
sub
xlat
int
lock
lods
data16
lea
adc
fwait
imul
daa
fildl
jb
arpl
movsl
cmp
aam
push
loopne
cmpsb
and
cli
inc
xchg
and
arpl
push
inc
test
add
clc
shll
aam
push
rol
xchg
adc
mov
ret
jp
jo
sub
call
jecxz
pop
dec
pop
loope
fistl
dec
cmp
jno
sbb
sbb
push
enter
cmp
mov
pop
insb
push
pop
mov
test
popf
cmc
icebp
mov
push
mov
xor
and
leave
cmp
sbb
xchg
add
and
cwtl
pop
hlt
jp
movsl
xor
cmc
sub
dec
mov
movsb
and
mov
pop
mov
inc
stc
mov
and
repz
lcall
cwtl
pop
mov
pop
imul
sbb
movsb
inc
addr16
jnp
push
push
shl
push
shlb
pop
cs
jge
sub
dec
fwait
jg
add
sbb
push
and
lahf
mov
or
jl
xchg
push
and
xchg
push
mov
pusha
jo
cmpsb
jnp
aam
popf
pushf
sahf
mov
jg
notl
inc
stos
jp
mov
or
lcall
cmp
pop
jp
fwait
cld
clc
imul
mov
jg
pop
rol
xchg
in
test
mov
pop
call
out
nop
pop
xor
aaa
sbb
xchg
or
xchg
push
out
lret
mov
dec
jno
push
mov
aad
std
insb
or
rcr
push
cmp
addr16
cmpsl
mov
mov
mov
repz
jne
pop
inc
adc
mov
inc
sub
jg
inc
rorl
int3
stos
pop
add
mov
divb
adc
je
add
in
ds
push
xchg
jmp
push
sbb
sbb
addr16
adc
je
shlb
xor
jae,pn
jl
mov
outsb
jg
xorl
fbstp
cmp
mov
or
lods
flds
jecxz
jo
and
jnp
int
xlat
lahf
fnstcw
out
xchg
aam
test
or
mov
pop
out
test
xchg
mov
jge
ds
pop
adc
out
adc
xchg
nop
leave
adc
shrb
mov
xor
stc
sub
outsb
xor
popa
scas
ja
cwtl
xor
or
mov
pop
lea
xchg
dec
cwtl
adc
xor
xor
inc
fildll
dec
pushf
or
gs
decb
cmp
mov
jns
call
lods
jp
fs
sub
sbb
daa
sbb
fldenv
in
out
cltd
sub
mov
xchg
scas
lcall
out
scas
stc
xchg
out
add
lret
aam
adc
insl
insl
add
xchg
xchg
les
nop
jno
inc
popa
aad
pusha
jbe
addr16
aam
in
mov
jne
push
pop
stos
mov
test
push
mov
flds
sbb
adc
and
push
mov
lods
movsl
je
jb
rolb
add
test
ljmp
ja
hlt
ds
sbb
mov
lods
out
add
leave
fnstenv
jne
addr16
push
sub
scas
xor
jp
sbb
add
fs
mov
sbbl
push
pop
mov
and
cli
ficoms
mov
sti
ret
sub
mov
sbb
mov
push
inc
sbb
pop
sbb
or
addr16
mov
loope
cmp
add
movsl
sbb
insl
lret
out
insb
push
test
out
je
push
pop
scas
jmp
xchg
jge
or
gs
fdivl
and
mov
stc
nop
int3
test
insb
push
ret
sbb
xchg
inc
push
pop
sbb
xchg
sbb
lock
or
repz
daa
xor
out
xchg
sub
inc
lock
and
or
fwait
imul
addr16
mov
ficomps
cmc
xchg
jg
pop
lock
aaa
pop
adc
outsl
xor
rcll
cmpsl
cmp
lahf
mov
loop
in
std
jle
addr16
add
mov
cmp
mov
popa
test
and
jl
cli
sub
leave
dec
jno
nop
mov
leave
call
mov
dec
jne
es
cmp
mov
and
inc
dec
movsb
and
jmp
in
ds
or
fiaddl
movsl
incb
js
lahf
mov
pop
or
adc
xor
mov
fsts
lods
scas
jnp
jp
fwait
dec
push
popf
mov
cmp
clc
pop
cld
jo
add
call
cmc
xchg
jge
mov
or
iret
daa
outsl
aam
arpl
repnz
cmpsl
ja
in
rcrb
insl
sarb
or
aad
mov
xchg
dec
mov
movntq
daa
mov
aaa
loopne
adc
add
shrl
clc
inc
inc
stos
mov
mov
and
add
stos
mov
cmc
jl
pusha
fbstp
les
stos
push
mov
and
in
bound
jle
jns
test
inc
daa
inc
rclb
popa
cmpsl
mov
add
repnz
loope
inc
inc
push
sbb
dec
and
inc
jge
sbb
in
bswap
stc
outsl
mov
jb
gs
test
cmc
stc
mov
arpl
xchg
sahf
ret
fprem
setb
bound
stos
adcb
stos
dec
repz
clc
xor
in
clc
adc
int
out
jns
int3
xchg
add
lret
push
and
sbb
cld
mov
pushf
lods
cmp
mov
ljmp
xchg
mov
inc
push
xchg
pop
lret
fistpl
out
push
shlb
pop
movsl
xor
xor
mov
cmpb
push
pop
cmp
out
out
fwait
arpl
test
mov
push
adc
cld
inc
dec
fldt
rcr
testb
int3
into
mov
jbe
mov
push
push
xchg
jne
adc
jmp
jl
and
fcoml
cmp
popf
sahf
lods
cmp
fbld
pop
rolb
pop
inc
mov
test
scas
popf
movsb
push
jne
push
push
add
jne
inc
nop
push
lahf
pop
dec
cmp
rclb
movsb
mov
loopne
ds
push
mov
pop
aas
dec
fldcw
out
add
xchg
or
daa
mov
or
outsb
cs
sub
mov
vmovsldup
es
in
jl
fldt
outsl
push
iret
lahf
mov
xchg
and
scas
sti
mov
dec
pop
test
pop
repnz
fwait
inc
push
cli
xor
scas
jmp
sbb
pop
insl
ss
pop
adc
aad
jl
jmp
test
mov
pop
test
dec
sbb
imul
insb
enter
pop
and
fistps
and
pop
adc
push
cwtl
cmp
push
mov
mov
sbb
test
test
pop
nop
and
push
sub
aas
loope
scas
xchg
repz
sub
push
lods
jmp
xorl
pop
mov
repz
mov
cmp
movsl
xchg
sahf
inc
mov
aad
push
mov
mov
push
lcall
sub
jno
arpl
lret
jle
pop
mov
mov
aam
and
rcr
call
mov
sbb
jmp
cmp
add
cmp
clc
andl
rorb
xchg
sbb
mov
jmp
sbb
enter
cmc
pushf
xchg
cmpxchg
mov
fldt
dec
addr16
lahf
mov
push
xchg
pop
inc
jecxz
xchg
fldl
movsl
in
lock
addb
mov
rorl
cmp
insl
add
stos
xor
enter
pop
inc
jecxz
mov
pushf
enter
sub
cwtl
lds
push
aad
inc
div
lods
jno
roll
dec
scas
addl
adc
rcrb
orb
pusha
enter
mov
inc
or
test
mov
sbb
mov
fs
push
lds
cld
stos
aaa
aam
inc
mov
filds
adc
or
add
mov
mov
fisttpl
jecxz
add
cli
mov
add
adc
in
mov
pop
repz
push
mov
mov
cmp
rsqrtps
sbb
ret
lahf
and
adc
repz
pop
sub
mov
shrb
sbb
ja
dec
ds
icebp
out
stos
inc
ss
sar
out
addr16
hlt
ljmp
stc
lods
mov
mov
shrl
mov
in
jge
mov
loopne,pt
push
mov
repz
jp
mov
mov
into
js
filds
ss
mov
arpl
cld
mov
dec
inc
mov
test
sbb
leave
xchg
cmpsb
into
add
jp
mov
sub
cli
cmp
test
xchg
movsl
sbb
push
mov
out
and
mov
push
js
out
decl
fiadds
shrb
dec
pop
rclb
repz
or
cltd
and
dec
ret
xchg
sub
and
mov
xor
or
pop
pop
sub
insb
std
inc
pop
xor
fs
dec
pop
cmp
pop
mov
adc
fldenv
sbb
cmp
mov
fldenv
sbb
addb
push
repz
out
mov
sub
test
mov
dec
divl
jp
mov
adc
hlt
mov
popa
mov
fstl
sbb
xchg
or
xchg
sbb
sahf
mov
fcoms
push
push
xlat
out
rcll
push
ja
cld
cwtl
cwtl
aas
lea
fstpt
fidivrl
fistpl
pop
dec
cs
out
cmc
pop
scas
cmc
cmp
dec
mov
rclb
pusha
out
pop
cltd
pop
jo
jge
nop
xlat
xor
mov
ficoml
jns
push
xchg
movsb
xchg
outsl
add
addr16
mov
xchg
push
xchg
sarb
pop
sti
xchg
mov
sub
mov
push
outsl
jl
roll
push
mov
in
inc
adc
mov
push
lds
mov
cmc
cmp
mov
mov
js
jle
push
mov
jne
xlat
sti
jmp
jp
stos
pop
dec
loope
or
lds
jp
loope
stos
xchg
adc
inc
scas
mov
mov
test
sub
out
pop
aam
adc
icebp
inc
mov
cmpb
add
fcmovu
xor
and
sbb
mov
sbb
inc
sti
in
shlb
movsl
dec
sub
xchg
pop
dec
hlt
xor
je
movsb
mov
jge
jg
int
adc
push
mov
mov
mov
push
mov
fstpl
jecxz
mov
pop
notb
cmp
cmpsl
cltd
add
fimuls
inc
out
and
in
pushf
subl
or
inc
cld
ja
in
aam
sbb
sub
fcmovnu
nop
mov
icebp
pop
repz
repz
mov
adc
mov
sub
mov
test
or
sbb
cli
out
push
ret
test
out
fadds
xchg
pop
mov
jmp
mov
pop
sbb
shr
jle
ds
pop
stc
aam
jle
sub
pop
mov
icebp
in
test
jbe
dec
ret
xor
enter
and
rclb
mov
cmp
push
inc
jo
jle
ret
jmp
ljmp
lds
xchg
and
dec
xchg
into
add
aam
icebp
xchg
orb
cld
shll
sti
mov
ret
sbb
int
in
push
sahf
add
rclb
jbe
sahf
push
push
xor
stc
jecxz
loop
adcl
mov
sbb
lea
sbb
in
xchg
or
shlb
push
ficomps
dec
mov
test
imul
and
cmpsb
dec
sub
push
pop
push
nop
jae
ja
icebp
xchg
ds
cmpsl
xor
mov
cmp
sub
dec
xchg
rorb
jecxz
into
push
xchg
add
push
enter
repz
sub
test
out
sbb
jae
fwait
pop
cmp
push
stos
cs
or
cmovae
dec
xorl
mov
push
mov
loopne
xchg
clc
rcrb
pop
loope
pavgb
bnd
lea
inc
pop
lea
sbb
lcall
adcb
mov
sarb
lds
subb
or
xchg
mov
push
xchg
jle
mov
fidivrl
fsubrs
xchg
dec
lock
jecxz
inc
ljmp
leave
mov
cwtl
popf
add
stos
adc
adc
mov
into
jne
jo
stc
xor
dec
xor
pop
and
lods
idiv
cltd
dec
or
inc
mov
fs
ds
cmp
jnp
sub
jbe
inc
shll
test
hlt
add
out
adc
and
mov
adc
ret
xor
lods
arpl
mov
adcb
je
push
call
mov
fcoml
loopne
pop
xchg
mov
pop
or
cli
rorb
sbb
lcall
jmp
xor
xor
in
cmp
data16
push
cmp
sbb
mov
in
push
mov
js
pop
mov
sub
mov
inc
ds
fldl
shrb
cmp
pop
adc
gs
lock
mov
out
push
pop
bound
jmp
or
fistpll
loopne
ljmp
inc
jle
push
mov
push
mov
mov
fnstsw
sbb
ret
pop
scas
outsl
mov
sti
int
iret
xchg
aad
cwtl
xor
pushl
xchg
psubw
fwait
xor
mov
mov
or
fdivl
pusha
ljmp
xor
dec
rol
popf
aad
sub
mov
sub
imul
mov
repz
divb
dec
gs
push
in
fidivrs
add
xchg
test
ljmp
sub
push
movsb
shrb
jae
dec
jnp
push
cmpsl
xchg
xchg
push
sub
push
sahf
adc
xor
xchg
aas
out
stos
mov
sub
out
in
pop
outsb
movb
imul
lret
sub
rcll
mov
or
arpl
fs
and
into
sub
lea
daa
jbe
xchg
jno
clc
iret
jnp,pn
adc
push
outsb
dec
adc
pop
inc
in
outsb
in
mov
pminsw
xchg
rclb
push
xchg
sub
cmp
add
cmp
fs
jle
lock
push
fucomp
bound
filds
pop
mov
push
cmpsb
testb
mov
xor
and
mov
aam
cmp
dec
cli
dec
cmp
pop
xchg
mov
xor
or
movsb
xchg
test
and
xchg
imull
push
pop
sub
cmp
pop
out
push
lcall
pusha
mov
or
test
inc
xorb
cmp
pop
and
lahf
push
adc
call
clc
mov
add
in
mov
pop
pop
iret
psraw
xchg
rorb
sti
mov
cmp
sub
cmp
inc
xor
push
out
push
pushf
add
push
in
push
mov
out
and
les
shlb
bound
push
int
scas
fisubrs
les
xor
or
imul
and
xchg
scas
das
push
roll
dec
idiv
loopne
push
imul
and
ret
ss
sub
lods
lock
orb
or
xchg
shrb
data16
dec
xchg
clc
dec
adc
mov
jg
dec
dec
sahf
cmp
push
roll
xchg
mov
fisttpll
imul
pop
mov
mov
sbb
jb
lock
ljmp
in
mov
out
add
mov
mov
push
sub
movsb
or
leave
out
xlat
bound
aam
fbstp
clc
xchg
rolb
out
jg
ret
lds
ja
mov
loopne
xor
lret
cmp
jae
pop
push
or
sbb
or
dec
lods
pop
jmp
sub
inc
xor
mov
das
adc
mov
repz
clc
out
xchg
popa
sub
inc
imul
adcb
icebp
xchg
out
repz
mov
mov
in
pop
mov
push
xchg
outsb
push
clc
ret
dec
loope
mov
lods
inc
add
shlb
pop
hlt
mov
adc
stc
cmpsb
cld
mov
lds
adc
xchg
pop
sub
jae
push
gs
jecxz
sbb
inc
in
cmpsl
pop
push
mov
xchg
std
xor
loop
pushf
cmp
mov
testb
jnp
ss
loopne
fmuls
push
fwait
ss
jmp
jne
and
filds
mov
jmp
movsl
or
shrb
in
add
stc
jne
or
mov
mov
negb
pop
xor
xor
sbb
je
stos
inc
dec
ret
sbb
data16
mov
test
fstps
or
xchg
cmp
stos
int3
stos
push
add
imul
subl
xor
dec
mulw
and
iret
push
adc
enter
push
adc
sbb
lock
sbb
cltd
xchg
sub
cmp
int3
adcb
push
stc
dec
loopne
pop
push
cwtl
push
scas
enter
cli
call
dec
xor
test
aas
clc
jbe
cld
movsb
mov
or
lock
sbb
mov
in
cmc
jb
xor
push
pop
jb
mov
add
test
call
out
xchg
rcrb
incl
jmp
jno
jbe
lds
inc
inc
inc
daa
fsub
jne
sbb
roll
sbb
iret
into
stos
mov
dec
enter
inc
jnp
inc
lock
mov
jg
push
jge
push
adc
dec
je
pop
fstpt
pop
shl
sbb
and
jo
xchg
jae
cli
mov
jb
mov
test
mov
out
sbb
adc
inc
add
and
pop
mov
scas
bound
pop
or
or
xchg
xor
mov
or
dec
stos
stos
and
lock
mov
mov
iret
into
inc
loope
xor
and
sahf
add
mov
popf
pop
insl
xchg
rcrb
shrb
loope
adc
mov
test
mov
out
in
adc
popf
mov
addr16
and
mov
insb
mov
popa
add
add
or
xor
out
dec
xchg
dec
sub
mov
lret
jge
adc
and
cmp
adc
jmp
sbb
stos
imul
orl
push
scas
scas
inc
pop
xor
shlb
xor
sti
icebp
ja
aas
fcoms
stos
imul
pushf
pop
aam
mov
lds
sbb
mov
leave
sub
imul
mov
pop
call
push
xor
test
jg
cmpsb
sub
fidivrs
add
xorl
cmc
div
loope
or
nop
xlat
add
shrb
push
pusha
outsl
jns
repnz
ss
sbb
nop
add
aas
inc
stc
inc
xchg
nop
mov
jns
xchg
xchg
fcmovnb
mov
outsl
xor
xor
fdivrs
pop
mov
xor
test
sbb
cs
inc
jnp
pushf
xchg
mov
insl
push
add
ljmp
xchg
faddl
sbb
mov
xor
inc
loopne
push
mov
mov
or
cmp
shr
dec
dec
sub
iret
sub
nop
jg
xorb
mov
data16
lret
loope
dec
xor
sbb
mov
cwtl
sub
xchg
mov
add
sbb
dec
stc
pop
xor
out
imul
pop
fisubl
cmpsb
mov
xor
cld
mov
pop
aad
stos
xchg
jp
or
xor
mov
prefetch
aas
push
sbb
dec
pop
lock
bound
push
loopne
cmp
dec
xor
or
fsubrs
lods
movsb
pop
inc
push
mov
gs
cmp
inc
enter
push
jg
sbb
dec
imul
mov
add
call
cwtl
nop
sbb
xchg
inc
push
jg
loopne
int
pop
daa
push
xor
mov
push
pop
xchg
aam
ja
cs
xor
rcll
ja
push
test
sti
inc
insb
movsb
jno
lcall
test
mov
mov
mov
xor
mov
fnstsw
das
cmp
fmuls
lcall
xor
cwtl
mov
enter
mov
and
xchg
in
jns
jg
cmp
xchg
jae
loope
xor
and
sub
js
jmp
mov
out
arpl
xor
popf
test
std
or
mov
clc
xchg
adc
mov
pop
arpl
test
sbb
mov
pop
imul
test
inc
push
fistpll
shrl
sbb
xor
cmp
das
lahf
in
cli
adc
inc
out
jl
jne
xchg
push
mov
adc
std
cmp
lods
or
lret
push
cmp
std
mov
or
shll
mov
jmp
cs
in
cli
add
setns
cld
jae
dec
sub
inc
mov
push
xchg
out
out
mov
aaa
xor
or
sbb
or
pop
popf
jbe
out
loope
sub
inc
mov
fisttpl
mov
pop
arpl
xchg
fistpll
add
push
mov
fnstsw
sub
adc
inc
mov
pop
xchg
out
pop
das
sub
lcall
data16
push
dec
inc
fwait
mov
lahf
cwtl
rcrl
jae
mov
dec
pushf
popa
addr16
es
je
or
pop
or
xor
inc
shll
lea
daa
xchg
cwtl
jnp
outsl
inc
mov
ret
icebp
dec
lods
mov
or
cmp
test
inc
insl
adcb
adc
sub
lods
push
xchg
cs
fiadds
mov
push
sbb
in
xlat
stos
pusha
into
out
mov
test
jecxz
sbb
aaa
cld
sbb
push
sbb
push
movsb
out
jbe
je
fimuls
push
inc
data16
xor
inc
mov
dec
or
push
stc
and
in
lods
cltd
pop
out
in
mov
lcall
push
out
ret
sbb
les
scas
and
mov
lods
adc
repz
rcl
adc
int
iret
jns
push
adc
js
adc
mov
or
xchg
lahf
push
inc
idivb
cwtl
jmp
sbb
and
ret
idivb
test
popf
pop
jno
inc
inc
or
repz
inc
xor
sbb
loopne
lds
testb
insl
mov
leave
xchg
rol
xor
loop
inc
inc
push
dec
xor
or
dec
and
dec
dec
js
xor
or
sahf
aas
inc
fnstenv
cmp
or
out
adc
cmpsb
imul
adc
adc
or
mov
adc
rorl
cmp
dec
ds
fistps
push
imul
fldcw
leave
inc
xchg
call
stos
lods
mov
outsb
cmpsb
sbb
rclb
iret
sub
cwtl
daa
or
inc
rcl
xor
push
sti
outsl
lahf
mov
xor
shr
bound
xchg
dec
out
data16
inc
adc
jmp
mov
xor
sbb
push
roll
sbb
add
and
add
xchg
out
dec
mov
shr
jns
iret
add
and
add
lds
xchg
jl
ret
push
inc
cmp
dec
xor
imul
jae
ret
or
sub
jle
or
pop
inc
subl
sub
test
push
lahf
sub
jle
icebp
std
in
mov
shrb
xchg
daa
lcall
int
pop
pop
rcl
jb
dec
cmp
shlb
cmp
repnz
cmp
sbb
cmp
fs
xchg
mov
xor
popa
cwtl
xor
int3
or
dec
sbb
mov
and
dec
fldt
and
hlt
int
stc
outsl
and
jo
mov
loop
lock
std
lret
data16
sbb
xchg
movsb
daa
mov
push
cmp
xchg
and
dec
cli
pop
mov
dec
mov
jge
fcmovu
loop
sbb
in
pop
xchg
adc
cmp
sub
movsl
cmp
mov
xlat
jnp
push
push
or
push
jg
sbb
dec
in
roll
ljmp
lods
sbb
adc
movsb
imul
mov
dec
sbb
addl
sbb
xor
mov
into
sub
clc
add
lret
cmp
sbb
inc
shll
test
and
shll
sqrtps
mov
mov
andb
jmp
inc
xor
jmp
and
mov
ret
add
adc
lret
sbb
cmp
dec
and
fildll
and
shl
test
nop
je
pop
mov
loopne
mov
xchg
cmp
lea
inc
call
mov
hlt
je
mov
mov
cld
stos
mov
ljmp
ljmp
stos
and
mov
inc
push
std
fs
and
ret
sarb
data16
jmp
dec
fdivrs
dec
xchg
insl
daa
push
adc
lahf
push
xor
xchg
pop
add
jo
mov
lcall
xchg
sbb
add
xor
pop
pop
lea
add
cltd
cmp
inc
cltd
in
mov
adcl
jp
fstpt
jae
pop
loope
sbb
mov
push
lods
or
dec
data16
jb
mov
or
jp
mov
incl
cmp
je
stos
xchg
stos
xor
pop
out
pop
xchg
mov
xchg
cwtl
mov
sub
xor
sub
push
sbb
dec
push
cli
cmp
or
out
pop
push
in
addr16
or
pop
sti
or
push
inc
int
inc
cltd
lods
inc
fmull
movsl
out
add
fimuls
gs
and
out
jno
dec
mov
sbb
adc
cwtl
inc
mov
or
push
vmwrite
jge
pop
daa
insl
mov
or
jnp
mov
inc
ficoms
adc
add
dec
je
mov
xchg
sbb
jmp
icebp
aam
inc
aas
push
es
sbb
inc
insl
xor
sbb
sub
add
dec
icebp
fsub
jmp
insb
mov
xchg
xor
lds
fisttps
and
jo
xor
xchg
cmp
inc
jno
cmp
lret
push
repz
mov
sbb
mov
sbb
xchg
lds
xor
jmp
dec
in
lds
sbb
sbb
mov
les
jecxz
dec
or
dec
dec
shr
add
in
out
repnz
shrb
mov
adc
push
loop
adc
push
test
xor
xchg
mov
int3
dec
cmp
push
sahf
scas
mov
mov
xchg
adc
mov
test
add
and
lds
lcall
adc
push
les
sbb
cmc
sbb
out
sbb
test
hlt
mov
cs
lret
imul
mov
push
cmpsl
push
sarb
pop
push
mov
in
rclb
mov
int
pushf
filds
pop
add
je
xchg
or
loope
or
push
mov
shll
jmp
inc
std
and
lret
pushf
lret
push
inc
and
mov
stos
jae
dec
jae
icebp
add
incb
testb
cmc
jae
xor
or
push
mov
jb
and
fnstcw
mov
negl
dec
dec
adc
xchg
sub
addb
pop
and
dec
fildll
sahf
pop
add
inc
mov
push
addr16
out
xor
cmc
aaa
mov
in
aam
cmp
cmp
bound
add
push
inc
xor
xchg
fucom
dec
data16
sub
mov
test
loopne
setne
mov
jle
lcall
sbb
repz
inc
cld
mov
jae
adc
push
sti
gs
gs
and
jecxz
das
out
dec
fs
sbb
mov
push
dec
or
ficoml
lods
shll
jae
adc
int3
in
lret
shrb
sbb
scas
xor
mov
inc
cmpb
test
jae
test
sahf
mov
inc
sbb
lods
movsl
lds
xor
stos
movsb
push
fcmovnu
das
pop
stos
enter
mov
xor
xor
scas
int3
adc
insl
and
jne
subl
pop
jbe
cmpsl
push
mov
loopne
repz
sub
addl
mov
dec
sbb
neg
les
or
pushf
push
call
out
xor
int
shll
sub
ret
and
mov
xor
stc
nop
cwtl
jno
jmp
mov
dec
mov
xchg
push
subl
sub
mov
mov
xchg
into
aas
mov
mov
pop
push
lods
add
sbb
mov
sbb
mov
jae
shll
mov
cwtl
je
push
inc
xor
xchg
iret
dec
addr16
adc
push
fnstsw
repnz
cmp
inc
xchg
pop
or
js
and
pop
jbe
or
sbb
cwtl
cmp
movl
nop
movsb
mov
imul
add
adc
fiaddl
shlb
pop
adc
xor
cli
push
cmpsb
ss
inc
sbb
pushf
xchg
rorb
dec
xchg
icebp
cli
test
sbb
sub
cs
clc
xor
add
sub
cmp
loopne
xchg
sub
pop
cmp
inc
and
lds
sahf
add
mov
or
xchg
xor
fwait
into
js
in
or
and
sbb
sub
aas
jle
sub
icebp
iret
pop
dec
sahf
inc
xor
or
shl
js
push
adc
mov
xchg
outsl
aas
mov
xchg
inc
cmp
cwtl
inc
xor
aas
das
jmp
jb
push
rorb
in
or
nop
push
push
add
sbb
js
ss
xchg
or
add
insl
xor
popf
sub
inc
mov
pop
mov
and
dec
cmc
in
xchg
subb
dec
mov
sub
outsb
fcoml
cmp
out
mov
xchg
sbb
pop
dec
jle
pushf
jmp
adc
mov
sub
addr16
jecxz
rcrb
cmpsl
adc
xchg
adcl
dec
js
dec
xchg
cmpsb
jmp
sbb
sub
insb
xor
sub
mov
or
sub
mov
jp
in
lret
xchg
popf
sub
int
int
mov
sub
mov
push
and
inc
mov
dec
push
jnp
or
or
xor
push
push
sbb
mov
in
push
loope
adc
out
add
push
jmp
or
xor
mov
inc
jb
orl
mov
insl
call
push
or
fldl
jne
aas
popl
decb
jl
test
out
rcrb
jbe
xor
xor
repz
rorl
xor
nop
xlat
aad
inc
mov
mov
out
sbb
vorps
jns
mov
jp
pushf
mov
in
test
xchg
scas
shl
fstl
mov
stc
mov
xchg
int
movsl
sub
push
dec
notl
out
sbb
xchg
xchg
xlat
das
dec
mov
sti
roll
mov
and
xchg
clc
xchg
pop
mov
cs
jge
lock
gs
xchg
jp
xchg
xor
loope
fldln2
or
mov
out
lock
out
hlt
inc
inc
xor
xor
or
cmc
dec
into
fildll
jg
ljmp
add
adc
nop
lahf
xchg
and
and
lea
subl
or
cmp
shrb
mov
call
lea
mov
xchg
les
rolb
test
mov
sbb
jno
sub
xor
xchg
jle
add
mov
or
sub
xor
inc
xor
or
int
jnp
std
cwtl
cld
mov
lret
cli
jle
ds
clc
push
insb
mov
sub
mov
inc
pop
jecxz
addb
or
int
out
cmc
jo
dec
xor
dec
cwtl
jb
jns
subb
xor
fsubl
aam
jb
iret
pop
pop
int3
inc
outsb
and
aam
dec
mov
xchg
mov
cmp
in
pushf
or
push
roll
mov
push
cmp
rorl
stos
or
push
pop
lock
inc
sbb
xchg
inc
jmp
cmp
jge
and
cmp
inc
sbb
and
sub
push
sub
mov
lea
inc
insl
test
mov
scas
sub
inc
push
and
adc
mov
jecxz
pop
movsb
std
jae
jbe
sbb
inc
out
sub
xorb
scas
cmp
cmp
movsl
jp
out
fcom
cmp
cmp
cld
insb
cltd
inc
and
push
das
sarb
pop
inc
fcomps
xlat
pop
inc
movsl
or
push
mov
je
push
dec
cwtl
adc
adc
jp
or
shrb
in
inc
adc
sbb
imul
std
sarl
aaa
scas
or
mov
hlt
rcrl
push
loope
push
dec
mov
daa
test
imul
roll
nop
jo
or
ret
mov
push
sbb
lods
jo
push
lcall
add
lret
push
adc
xor
sub
sub
cltd
inc
push
test
pushl
or
pop
dec
jb
scas
sti
rolb
jno
repnz
push
pop
jmp
sbb
out
pop
jg
mov
mov
mov
push
enter
jns
adcl
inc
or
sbb
lcall
lcall
dec
mov
lods
adc
jle
stc
jg
and
cld
dec
in
mov
es
cmpsb
jb
movsb
add
push
xchg
cmp
mov
inc
adc
mov
fs
pop
mov
je
hlt
mov
dec
dec
test
shrb
cmp
mov
loopne
ss
jb
xlat
loop
and
mov
test
repz
xor
add
scas
xor
iret
push
pop
jbe
mov
test
std
xchg
and
repnz
jno
sbb
cltd
imul
sbb
sbb
out
outsl
fxch
xchg
stos
sub
insb
icebp
pop
loope
xor
inc
js
and
prefetch
cmp
mov
and
xchg
ljmp
mov
push
in
dec
mov
bound
push
int
xchg
dec
addb
jmp
movsb
add
mov
hlt
ss
arpl
sbb
jg
jecxz
mov
daa
mov
addr16
movsl
nop
mov
mov
inc
jge
nop
in
sub
loopne
mov
outsl
je
pop
add
shlb
xor
dec
mov
iret
jl
push
divb
out
pop
jecxz
imul
or
sbb
push
and
out
pop
shrb
shl
pusha
dec
mov
sub
pop
sbbb
out
or
fcomip
xchg
dec
jo
add
mov
int
push
aaa
or
std
cld
out
lods
rcrb
xchg
mov
movsl
mov
sbb
repz
sub
frstor
push
out
inc
lock
out
cmp
sub
mov
cli
mov
out
aas
addl
xchg
jge
aam
test
xor
cmpsb
mov
or
dec
sub
push
scas
imul
fcoms
push
lods
adc
insb
addb
xor
mov
mov
mov
adc
jb
lods
add
inc
mov
xchg
test
or
inc
cmp
and
xor
or
stos
leave
mov
dec
loop
ja
push
cwtl
popf
dec
popfw
sbb
jmp
stos
cmpsl
pop
xor
push
dec
xlat
movsl
sbb
or
jne,pn
xchg
sahf
add
pop
xchg
add
mov
mov
jl
pop
cwtl
lods
cmp
mov
aam
adc
sbb
test
mov
faddl
add
dec
push
repz
or
pop
test
andb
stc
test
repz
push
dec
sahf
cli
or
fwait
jnp
les
and
loopne
ljmp
jecxz
popf
mov
pop
pop
mov
cmp
fisttpl
clc
repz
sub
sub
inc
adc
ss
or
scas
incb
inc
stos
stos
into
pop
pop
fdivl
and
jl
sbb
sub
hlt
mov
mov
lock
outsb
or
fnstsw
or
hlt
aaa
stos
out
jo
adc
pop
test
movsb
sbb
jmp
push
mov
shrb
mov
lods
mov
movsb
aas
dec
clc
push
and
mov
sbb
add
in
or
inc
or
cmc
mov
scas
mov
xlat
push
inc
mov
roll
push
push
subl
dec
pop
imul
push
cmp
mov
jp
sbb
mov
push
insb
enter
out
cmpb
mov
jnp
inc
mov
sbb
jg
cmpsl
xchg
push
das
lods
xlat
push
add
fstpl
push
mov
sbb
mov
xor
fildll
ss
mov
pop
punpckhdq
roll
and
rolb
mov
mov
inc
shr
xor
fistpll
daa
jno
dec
adc
iret
pop
dec
sbb
aas
in
mov
dec
xchg
add
cmp
orl
cmp
add
jno
movsl
mov
sub
sub
dec
loop
and
outsb
das
mov
aaa
cs
idivl
and
fidivl
daa
push
push
cmc
outsl
loope
fnstenv
cld
jno
sbb
lea
lcall
ret
xlat
andb
das
jo
shrl
es
inc
lahf
cld
adc
sub
jge
and
jecxz
mov
cmc
or
add
and
pop
xchg
push
cmp
or
cli
aaa
xchg
pusha
push
jo
jle
cld
filds
dec
addr16
push
lods
mov
jg
mov
mov
jae
pop
test
or
sbb
sbb
or
pop
mov
sbb
ret
add
sbb
add
divb
inc
sbb
inc
mov
sub
mov
movb
cmp
stc
mov
aas
and
das
xchg
jnp
xor
or
adc
std
enter
and
sub
mov
rcrb
xor
cmp
popf
mov
dec
mov
mov
cmp
xlat
fimuls
aaa
xor
push
fldl
push
push
int
sbb
push
push
push
mov
pop
and
cmp
or
subl
or
loop
jns
sub
push
sahf
lods
jp
std
sbb
in
inc
mov
es
fsts
aam
sub
add
hlt
int
aas
dec
loope
mov
das
ja
xchg
shll
dec
sbb
sbb
movsl
dec
bound
cs
xchg
push
cmc
or
sub
pop
or
xchg
xorl
testl
cmp
outsl
pusha
jmp
xor
pop
or
dec
insl
jle
sbb
int
push
push
add
pop
lahf
mov
cmp
lcall
popa
mov
inc
inc
cmpb
decl
roll
fcmovne
shrl
or
sbb
push
mov
adc
xchg
lcall
inc
add
mov
int
jb,pn
xchg
iret
repnz
inc
pop
ljmp
xorl
inc
xor
loopne
movsl
pop
pusha
inc
seto
cmp
or
hlt
leave
mov
xchg
mov
imul
pop
inc
popa
or
cli
ljmp
out
adc
loopne
into
xchg
sarl
sbb
rcl
ror
shlb
pop
loope
jmp
pop
pusha
shl
mov
or
mov
push
xchg
aas
pop
aaa
fs
mov
icebp
test
cld
sbb
into
xchg
or
leave
mov
dec
test
xchg
test
enter
rolb
jno
and
cld
mov
ljmp
or
dec
f2xm1
mov
popf
loope
mov
xchg
sub
sbb
pop
outsl
mov
inc
out
rclb
jp
cmp
andb
pop
mov
lea
or
into
dec
push
add
ljmp
incb
mov
mov
push
xor
jo
push
lahf
jle
push
push
jns
push
hlt
in
fnsetpm(287
cmp
cmpb
shrb
cltd
mov
shrb
jnp
out
mov
mov
lret
lret
scas
cwtl
in
lock
ret
xor
add
push
add
iret
dec
sbb
loope
cmp
or
or
xchg
fldl
sahf
popf
mov
push
icebp
sbb
jnp
pop
and
gs
sbb
inc
cmp
push
pusha
imul
aas
mov
jo
imul
fwait
addr16
insb
lods
sub
es
add
ret
mov
mov
jge
lcall
cli
sub
repnz
dec
and
dec
mov
inc
jnp
out
and
xchg
out
jmp
sub
fs
sbbl
inc
ss
adc
cmp
ss
addr16
lret
pop
pop
dec
lods
bound
movsl
pop
fiaddl
test
dec
jge
xor
or
and
push
push
mov
lret
insl
sub
cmpsb
and
xchg
das
xor
stos
jg
out
pop
nop
xchg
inc
dec
or
stc
std
lock
xchg
mov
sub
xchg
and
adc
xor
or
aas
repz
jecxz
cmp
pop
mov
and
mov
sub
add
mov
fs
repz
ds
lods
mov
adc
xchg
add
sbb
sbb
jno
xor
xor
std
int
mov
push
and
jb
jmp
fdiv
aaa
shrb
add
stos
mov
ds
imul
xor
mov
adc
mov
cwtl
stos
sub
mov
pop
pop
adc
pop
jno
pushf
mov
adc
lret
popa
fsubrs
test
popf
mov
testb
sbb
add
dec
mov
repz
pop
loope
pop
push
js
cmp
cmp
inc
jae
dec
shrl
sbb
popf
div
push
push
fsubrs
fwait
scas
pop
sub
and
mov
dec
or
cwtl
dec
mov
xor
or
mov
stc
adc
daa
ficoms
bound
inc
jb
sti
jge
mov
inc
rcrl
lcall
insb
inc
cmc
lods
or
in
dec
cmp
clc
jecxz
pop
mov
xchg
lahf
xchg
rcr
icebp
xchg
int
sub
xchg
loopne
testb
iret
mov
shl
pop
rol
leave
pop
lret
imul
scas
xchg
dec
btc
out
jb
pop
aas
jle
out
lret
pop
movsb
shll
daa
enter
iret
bound
mov
sub
ret
jle
push
bnd
inc
xchg
pop
sbb
add
aam
lds
push
xchg
les
sbb
cmp
inc
andl
inc
lret
hlt
cmc
push
sbb
inc
jno
push
sbb
test
jge
dec
das
add
fldcw
ljmp
sbb
out
dec
idiv
clc
mov
or
mov
xchg
mov
jmp
cmp
add
push
inc
fwait
shll
push
xor
jg
adc
sub
push
rolb
xor
addr16
sbb
mov
int3
mov
mov
push
lahf
enter
add
int
aam
arpl
imul
mov
repnz
lret
xor
js
push
inc
pop
jg
sbb
or
loop
mov
mov
dec
pusha
repz
mov
fcom
in
sub
jmp
div
mov
hlt
sub
lods
push
aad
in
imul
jne
adc
cld
cs
mov
push
mov
lret
pop
inc
inc
mov
aaa
mov
inc
lods
add
push
and
fsubrp
test
inc
jmp
mov
jnp
fwait
sbb
mov
lret
mov
stos
adc
mov
xor
sub
icebp
shll
cwtl
idivb
in
and
dec
icebp
insl
dec
mov
out
dec
jno
aam
mov
sbb
fisubs
outsl
push
inc
loopne
stc
repnz
movsb
adcl
outsb
lret
adc
sbb
cmp
fwait
lock
shl
sti
mov
adc
sub
lret
sbb
and
int3
inc
push
filds
mov
jmp
inc
mov
jmp
inc
mov
jmp
scas
out
andl
push
test
rolb
mov
jg
jb
xor
pusha
jg,pn
bound
repz
lods
je
popa
jecxz
ss
lods
btl
popa
pop
movsl
int3
push
inc
js
mov
cmp
cmpl
ret
mov
sahf
popf
inc
mov
push
movsl
int3
cwtl
pusha
add
xchg
xor
icebp
rorb
arpl
and
or
xchg
mov
jae
mov
cmc
jecxz
mov
loopne
jns
jno
dec
adc
sub
gs
dec
sub
pop
jo
inc
adcb
mov
jmp
mov
mov
push
mov
mov
out
jbe
inc
push
iret
pop
pop
mov
scas
divb
push
xchg
dec
movsl
mov
mov
mov
ret
pop
out
mov
flds
subl
dec
jecxz
or
cli
stos
mov
jmp
xchg
adc
jae
push
daa
inc
cmc
movsb
mov
pop
cmp
xchg
sbb
cli
xchg
insl
mov
mov
add
into
sti
in
out
dec
sub
dec
mov
cmp
xlat
outsl
fists
adc
xchg
dec
loopne
sbb
inc
in
nop
enter
pop
xchg
movsb
inc
scas
or
cmp
shrl
mov
or
mov
or
or
lret
nop
and
cmp
lret
cmp
ds
icebp
daa
repnz
leave
sub
sub
sbb
add
adcb
outsl
mov
sub
inc
ja
mov
clc
xchg
mov
and
add
xor
call
pop
sbb
mov
jmp
aam
jg
sar
or
je
in
jmp
popa
cmp
xor
lret
ja
xchg
mov
mov
popf
fsubr
iret
es
add
mov
scas
xor
or
and
je
cmp
out
sti
add
inc
or
xchg
popf
stos
mov
fdiv
fucom
in
movsl
inc
sbb
mov
sub
sub
dec
cmpl
je,pt
lods
mov
out
jno
frstor
movsl
ret
rcl
insb
out
in
jns
push
mov
mov
or
mov
loopne
jge
pop
and
xor
cld
mov
jo
cmp
test
dec
push
inc
mov
pop
ss
xor
bound
stos
mov
lods
aad
push
sbb
mull
outsb
lea
ficompl
xlat
inc
or
bound
js
jbe
test
ljmp
mov
adc
xor
fs
in
xor
mov
rorl
adc
mov
push
sbb
sbb
inc
cmovp
inc
ljmp
cmp
push
inc
mov
adc
pusha
xchg
jmp
mov
scas
or
push
sbb
hlt
arpl
insl
lea
ficompl
aam
or
bound
jnp
jne
xchg
ljmp
mov
adc
xor
addr16
out
xor
mov
rorb
rclb
adc
mov
imul
bound
jg
jno
cmp
test
dec
push
inc
mov
push
cmp
xor
arpl
jo
push
and
out
or
and
ljmp
fsubl
xor
push
movsb
sbb
scas
mov
pop
loopne
pop
rorb
mov
xchg
cmpsl
lea
ficompl
imul
ljmp
xchg
sub
test
dec
and
xor
pop
test
mov
call
fimuls
adcb
sbb
gs
jmp
bound
and
and
test
dec
lret
sub
pusha
les
xor
push
mov
stos
mov
loopne
in
pop
mov
cld
mov
mov
cli
insl
out
add
ljmp
nop
sub
test
dec
ret
and
push
movsl
push
sub
stos
cmc
mov
cmpsl
mov
clc
inc
or
les
or
fmuls
xor
jg
dec
enter
enter
aad
in
mov
xchg
lcall
cli
popa
mov
icebp
gs
inc
clc
arpl
mov
mov
mov
aad
and
es
and
int3
repnz
filds
jo
into
loopne
jns
push
mov
jae
decl
shr
fsubrs
mov
inc
mov
icebp
repnz
stos
cmp
shl
ljmp
pop
sbb
stos
std
lock
scas
divl
out
das
mov
jmp
out
sub
insb
stos
sbb
ljmp
ja
lret
xchg
add
and
stc
and
xor
push
aas
adc
xor
push
mov
mov
cld
stos
xchg
jb
cltd
xor
fimull
add
shl
mov
in
and
movsl
sub
adc
pop
cmpb
bswap
imul
lret
icebp
or
push
xor
jecxz
out
push
icebp
add
lret
cmc
mov
mull
push
xor
das
mov
xor
in
sahf
inc
out
xchg
jg
jecxz
subb
and
mov
inc
inc
inc
movsl
adcb
aam
xchg
cmp
cmpsb
sub
push
data16
adc
imul
mov
mov
sbb
jae
lea
add
lds
or
inc
sbb
xchg
adc
in
fmuls
iret
cmp
ret
xor
cmc
stos
push
or
inc
fidivl
andl
addr16
stos
sbb
jae
ljmp
pop
mov
or
xor
pop
or
and
sti
xchg
sub
lods
cs
repz
ret
mov
dec
inc
cmp
inc
or
jg
hlt
mov
add
mov
pop
pop
jg
mov
loopne
xchg
sbb
cmp
mov
cmp
clc
xchg
cmp
daa
xor
movsl
repz
pop
xchg
push
pop
pop
loope
adcl
mov
leave
sbb
mov
pop
lret
in
mov
data16
mov
cwtl
pop
rcrb
or
inc
inc
sub
sbb
pop
aaa
pop
test
jg
into
es
ret
sub
jmp
pop
push
cmp
mov
pop
bound
push
cmp
jecxz
pop
sbb
fbstp
mov
inc
popf
xchg
sbb
aaa
xchg
and
ja
data16
sbb
adc
mov
rcrl
mov
pop
xchg
xor
add
sbb
add
out
data16
getsec
mov
fsts
sbb
adc
mov
push
cld
stc
je
cltd
pushf
inc
dec
jmp
mov
adc
jns
adc
mov
out
jb
push
ds
pusha
sahf
icebp
push
fmul
es
enter
sahf
daa
das
repz
repnz
into
cs
fcmovnb
bound
fsubrl
inc
pushf
pop
mov
js
sbb
lret
cld
cld
jo
xchg
lret
iret
jbe
adc
xor
gs
pop
cmp
pop
das
mov
push
test
inc
jns
out
lock
rorl
push
mov
rcrl
jp
mov
int
push
xchg
jb
mov
xor
dec
mov
lods
lock
inc
sbbl
aad
mov
data16
push
jle
cwtl
mov
xchg
mov
jo
stos
xchg
inc
out
sbb
sti
cmpsb
je
or
sub
mov
sbb
in
mov
mov
lock
mov
jae
aam
test
and
test
jbe
inc
sbb
shlb
mov
rorb
push
sub
in
sub
push
pop
fadd
cmp
orl
popl
push
and
repnz
es
repnz
leave
or
jmp
iret
xchg
and
jae
pusha
ret
mov
mov
pop
ljmp
jl
sbb
clc
ret
mov
packsswb
and
icebp
lods
xchg
in
repnz
int3
dec
pextrw
fstps
adc
jle
popf
std
jle
cmp
imulb
mov
mov
ss
xchg
repz
cs
mov
jle,pt
mov
xor
outsb
mov
movzwl
sbb
mulb
xor
out
mov
jae
pushf
ret
orl
int3
inc
sub
nop
mov
xor
cmp
jno
adc
jle
mov
xchg
mov
lds
in
movsb
lds
test
test
movsl
clc
pop
sub
imul
out
sahf
scas
cmp
inc
add
data16
movsb
cs
sbb
stc
push
cli
xor
in
enter
divb
pushf
mov
pushl
movsb
stos
cmp
add
js
xchg
leave
xor
push
inc
or
jge
pop
sub
mov
xor
mov
idivl
imul
cmp
aad
cs
pop
and
aam
pop
adc
cs
lahf
ljmp
xchg
jae
subl
xchg
sbb
popa
cmpl
push
sti
mov
cwtl
and
ja
sub
ret
imul
push
aaa
in
test
sahf
push
adc
in
pop
scas
mov
cmpsb
xchg
jg
std
in
hlt
rcll
push
pushf
adc
sub
lock
sbb
mov
out
inc
pop
and
ja
jmp
jnp
xor
sbbl
dec
fnstsw
cmp
adc
xchg
or
xchg
xchg
mov
roll
mov
or
sub
mov
cmpsb
sahf
xchg
insl
test
inc
loope
aaa
and
push
pop
test
sbbb
lret
mov
popa
sbb
dec
into
cmpl
inc
mov
out
jecxz
pushf
rcr
cmp
cli
cmp
popa
outsb
inc
scas
mov
hlt
hlt
mov
push
clc
xor
movsl
rcrl
nop
mov
fcomip
mov
mov
and
mov
mov
icebp
xor
testl
subb
jge
sar
pusha
xor
mov
mov
cmpsl
xchg
mov
push
sub
test
mov
jmp
fnsave
sub
test
std
adc
lods
test
sub
push
xchg
insb
repz
loop
jbe
inc
cmp
insb
decl
or
jne
xchg
push
jno
pusha
adc
mov
int
dec
mov
mov
test
test
sbb
jmp
jae
decb
int
and
inc
scas
cltd
and
mov
mov
pop
daa
movsb
pushf
mov
jmp
mov
jle
cld
and
cmp
aad
hlt
jmp
scas
ror
icebp
cli
lahf
mov
cmp
movsb
stc
mov
stos
lcall
mov
jle
cmpb
ja
jg
pop
mov
cmc
dec
xchg
adc
and
les
or
stc
loop
in
das
fcoms
push
dec
jne
pop
mov
mov
jbe
or
arpl
mov
cltd
lret
xor
dec
or
mov
nop
adc
hlt
mov
scas
enter
sbb
mov
lret
mov
sub
test
scas
lods
fs
test
sysexit
test
out
mov
inc
sbb
sub
aaa
int
popa
add
mov
cmp
into
out
inc
inc
adcb
sbb
in
rcll
std
pop
js
cwtl
sahf
jl
sbb
lahf
adc
stos
mov
mov
test
mov
and
mov
fwait
out
stos
orl
lahf
xchg
ret
outsb
insl
push
cmp
push
enter
lods
xchg
imul
jecxz
enter
bound
into
inc
fwait
mov
fnsave
xlat
cld
pop
pop
mov
add
fdivrl
rcr
in
push
stos
ret
sar
push
pop
aad
inc
leave
movsl
and
rcrl
dec
popa
je
dec
fisttpll
mov
or
sub
in
je
jle
pop
scas
or
inc
jmp
iret
enter
sub
xor
xchg
movsl
dec
push
dec
andl
pop
add
inc
sub
mov
cmc
adc
xchg
pop
idivl
inc
cs
movsl
mov
outsb
out
xor
pop
sahf
hlt
dec
ljmp
aad
mov
movsb
test
fscale
adc
int3
xor
fs
pop
in
push
ja
push
pop
jmp
shlb
pop
das
pushf
in
inc
pop
xchg
push
in
out
cmp
shrb
in
add
cmp
filds
insl
mov
scas
fldcw
cltd
ja
sbb
pop
push
adc
inc
push
adcb
cmp
mov
add
sbbb
mov
mov
mov
movsb
adc
jge
nop
jo
dec
pop
test
push
fwait
lahf
nop
sti
xor
imul
mov
sahf
sbb
mov
lods
cmpsl
call
lock
sub
or
data16
cli
xor
popf
rcr
jl
loopne
loop
mov
loop
push
mov
repnz
std
pop
rep
push
jns
mov
daa
lods
arpl
cmpl
and
pop
cli
subl
les
add
addr16
std
mov
pusha
lcall
add
push
adc
movsl
mov
push
mov
mov
jmp
repz
or
add
jo
ret
push
mov
cmc
sub
cmpb
popa
dec
into
xlat
xchg
xchg
mov
repnz
sub
mov
sbb
lahf
jecxz
iret
adc
cwtl
lods
sbbl
mov
xchg
rorl
lock
mov
pop
hlt
scas
fwait
jae
mov
push
xor
fs
popf
xorl
in
dec
mov
repnz
repz
lds
test
insb
pop
rol
mov
mov
sarl
dec
aaa
pop
fsts
mov
push
sub
or
scas
pop
add
sbb
mov
lds
pop
movsb
into
mov
xchg
cmpsl
iret
rorb
or
jo
cmp
pop
cmp
sub
insb
or
test
jne
fwait
dec
lock
push
and
mov
mov
sub
test
xchg
jnp
arpl
andb
ljmp
sub
int
push
fwait
sbb
inc
dec
in
cmp
ret
or
sub
scas
loop
mov
or
mov
sub
sub
sbb
cmp
clc
les
xchg
push
stos
mov
mov
pop
mov
insb
mov
fadds
cmc
mov
push
aas
xor
pop
cmp
lock
push
lea
sahf
pop
scas
adc
adcb
mov
mov
and
aad
bound
dec
adc
daa
sahf
andl
sub
and
js
loop
adc
push
enter
jle
or
sub
or
repz
andl
pop
shr
push
divl
mov
clc
cli
sbb
jp
inc
add
jle
sbb
das
out
mov
aas
lock
test
push
sbb
vmovsldup
subl
aaa
test
xor
popa
cmpsl
nop
mov
dec
stos
dec
xor
mov
shll
sbb
pop
jae
jge
test
dec
adc
mov
imul
sub
cs
fistpll
test
adc
movsl
dec
sbb
xor
int
push
jb
in
push
inc
stc
aas
xchg
loope
sub
out
lea
or
enter
lret
mov
xchg
xor
insb
push
mov
mov
adc
xchg
push
psubw
fidivrs
adc
sub
dec
mov
dec
dec
repz
cmp
and
lea
mov
fstl
push
jne
push
sub
dec
mov
popf
inc
mov
std
movsl
std
mov
mov
add
lds
mov
push
lcall
pop
ljmp
mov
pop
ss
mov
jo
lods
push
gs
insl
je
pushf
fs
inc
pop
ret
mov
dec
les
push
ds
std
sub
cmc
icebp
les
push
add
arpl
out
jnp
out
push
nop
jmp
test
jno
and
sub
mov
enter
xor
mov
int3
pop
insb
inc
ja
xchg
pop
mov
cmp
xchg
pushf
jecxz
mov
adc
add
xor
push
adc
lret
js
aas
loop
pushf
in
lret
sub
or
jbe
cs
jge
xchg
jnp
sub
push
jbe
insb
shlb
ljmp
in
mov
mov
jbe
std
cli
test
in
div
mov
iret
popa
add
sarb
add
and
mov
js
loop
ljmp
fcoms
lahf
and
adc
push
xchg
and
out
mov
push
mov
mov
cwtl
call
repnz
fwait
pushf
xorb
adc
sahf
jp
neg
jbe
insb
fldt
cmp
cltd
test
subb
add
idivb
push
insb
divb
ds
pop
or
push
adcb
dec
jne
gs
jle
rorl
cmpsl
push
adc
daa
and
mov
jmp
stc
xchg
std
mov
jmp
enter
mov
cmpsl
jbe
adc
cwtl
xchg
push
ja
mov
int
xlat
and
addr16
pop
cmc
scas
aas
mov
outsl
rolb
push
sbb
xchg
dec
fs
jne
mov
mov
jg
arpl
rorb
cmp
shl
out
xor
mov
mov
and
mov
leave
inc
push
fmuls
ja
movsb
divb
test
test
push
pop
or
or
adc
fistps
inc
aam
and
mov
aad
es
xchg
adc
movsb
mov
push
loope
mov
sub
jns
decb
ret
cmp
mov
dec
pop
addr16
fnstcw
mov
xchg
rclb
into
add
lock
mov
jp
mov
mov
push
mov
push
movsb
in
sub
add
icebp
js
subb
lock
fdivrs
insl
clc
mov
mov
bound
dec
sbb
mov
dec
out
test
iret
ror
stos
inc
jg
fnstenv
push
mov
sahf
sbb
sub
pushf
nop
xchg
mov
mov
add
sahf
in
std
dec
mov
shr
jnp
mov
les
rcl
pop
mov
pop
lock
aaa
cli
pop
imul
or
es
negl
out
push
push
mov
xor
in
das
push
clc
dec
insb
pmaxsw
ljmp
ror
add
js
out
jmp
add
push
sbb
rolb
nop
xchg
xchg
movsb
mov
imul
pop
lret
jmp
push
push
sarb
inc
fnsave
pop
inc
leave
mov
clc
pop
mov
lock
imull
rol
out
jge
dec
mov
jle
adc
scas
sbb
push
ror
sbb
sub
jge
jg
mov
mov
call
adc
in
stos
push
and
sbb
dec
pop
pushf
xchg
daa
loope
jne
pop
xor
incb
imull
mov
iret
mov
jl
pop
sub
or
adc
jmp
push
jb
int3
xor
push
test
jae
add
pushf
ret
push
mov
pop
fdivrl
xchg
and
mov
push
out
addr16
fildl
jge
mov
ss
mov
je
xchg
lret
mov
addr16
or
test
pop
int
mov
aad
mov
dec
jno
es
fsubs
sbb
pop
sbb
xor
mov
mov
jae
ret
lods
xchg
and
lea
enter
mov
sub
push
jbe
ret
pop
out
test
push
xor
out
in
xchg
fwait
jecxz
pop
pop
lods
scas
arpl
nop
lds
dec
call
cld
mov
aaa
lret
mov
jg
enter
xchg
mov
mov
clc
rcll
xchg
mov
leave
dec
mov
mov
lock
jne
xor
or
loopne
mov
scas
pop
or
jbe
notl
push
in
sub
int
pushf
mov
hlt
test
mov
or
push
cwtl
test
mov
loope
push
add
ret
pextrw
inc
xchg
mov
mov
test
arpl
leave
sub
cmp
mov
jmp
and
sbb
in
outsb
lret
xchg
rolb
lahf
aas
and
in
ds
negb
sub
cmc
cmp
ljmp
mov
sub
sub
cmpsl
pop
movsb
in
sbb
sub
lods
or
fidivs
xchg
dec
or
or
pusha
call
sbb
jbe
lods
insb
fwait
cmp
std
daa
repnz
mov
or
or
fcoms
or
int3
scas
mov
mov
dec
mov
test
ljmp
jae
inc
add
jecxz
fildll
xchg
lret
sub
xchg
pop
ret
mov
leave
test
cmp
add
out
adc
mov
dec
cltd
adc
cmp
xchg
pop
sbb
mov
jecxz
in
dec
pop
push
mov
fdivrl
shll
push
push
mov
test
dec
cmp
sub
cmp
push
xchg
mov
data16
pop
adcb
xor
inc
or
add
movsl
lock
xor
test
js
inc
cli
jb
std
fcoml
add
jne
imulb
nop
js
decb
dec
mov
and
sub
xchg
jo
mov
jle
dec
mov
jnp
pop
pop
xchg
xlat
cmp
cwtl
cmpsl
jl
aas
add
rcrl
lret
daa
cwtl
sbb
cltd
jecxz
inc
rclb
dec
push
and
lods
pop
dec
dec
ss
mov
mov
outsl
adc
stos
int3
movsl
into
push
repz
push
adc
mov
jns
adc
es
inc
ret
jae
and
jecxz
adc
add
lods
xchg
hlt
pop
outsb
fs
lds
out
jno
xchg
fiaddl
sub
out
leave
add
mov
bound
and
mov
jae
cmp
jmp
test
xchg
mov
aas
out
xchg
dec
into
mov
sti
pop
loop
xor
popa
outsb
add
jns
cltd
ss
xor
and
dec
mov
sbb
pop
repnz
call
out
mov
into
and
aaa
or
inc
push
push
xchg
add
pop
mov
mov
or
les
add
lds
or
inc
ds
push
cmpsb
lock
jecxz
sub
test
test
cmc
lds
daa
mov
cld
lret
testl
les
repnz
inc
iret
sbb
cwtl
int
and
add
jmp
addl
ljmp
stc
pop
or
cmpsb
aaa
mov
sbb
sbb
xor
sub
in
stos
insb
addr16
adc
ret
addb
jmp
add
xchg
jae
out
out
mov
add
pop
xchg
mov
je
jl
sub
arpl
lods
test
testl
out
daa
fs
cmp
aad
push
lahf
fsubrl
push
int
int
inc
jmp
insb
stos
sbb
add
pop
push
roll
and
or
imul
jecxz
insb
or
shlb
add
dec
movb
xchg
cmp
int3
stos
repz
mov
inc
pop
rcrl
rorl
aas
mov
ljmp
adc
jae
loop
pop
jmp
xchg
jns
lcall
loop
shrl
inc
push
mov
inc
call
push
inc
repnz
jno
mov
mov
loope
inc
xchg
into
push
js
jno
out
aad
aam
inc
push
daa
out
shr
leave
jb
push
add
scas
pop
and
cmpsl
add
mov
sbb
hlt
pusha
sub
jecxz
pop
shr
je
dec
loopne
mov
jl
sahf
jle
jl
lods
sbb
push
or
sbb
mov
push
out
lret
mov
dec
mov
rcll
cmp
adc
xchg
add
outsb
fsubrl
mov
leave
cs
lret
leave
popf
sarb
pop
jle
daa
mov
add
ljmp
enter
pusha
aad
repz
leave
frstor
andb
jae
mov
xorl
pop
xchg
push
sub
dec
insl
sub
sahf
and
mov
inc
inc
add
mov
int3
pusha
lock
stos
inc
or
dec
daa
insl
aaa
enter
mov
sar
jge
adc
mov
dec
icebp
aaa
add
loope
jno
mov
cmpsb
mov
mov
push
xchg
cmp
push
pusha
outsb
mul
mov
idivl
enter
out
xchg
cmp
test
mov
leave
iret
and
cmc
mov
pop
lock
pop
or
pushf
add
pop
lods
test
mov
leave
mov
scas
pop
pop
loopne
cmp
gs
pop
add
fdivrs
lcallw
pop
jecxz
sbb
jb
stos
or
pop
jbe
xchg
mov
in
adc
xor
cs
jne
hlt
adc
jnp
loope
repz
fs
adc
sahf
mov
rclb
sbb
ja
mov
sbb
in
and
cmc
xor
mov
jle
int
nop
adc
cwtl
or
pop
scas
xchg
push
stc
xchg
jmp
insl
pop
mov
sub
cmp
in
pusha
cld
or
cmp
sub
push
xchg
fyl2x
bnd
mov
repz
pop
cli
imul
pop
sub
faddl
jp
es
lods
hlt
cli
pop
xor
push
popf
pop
jg
mov
out
mov
jge
in
push
pop
stc
adcl
sub
jle
pop
addr16
cwtl
pop
push
mov
pop
jno
mov
xchg
loopne
mov
lods
mov
jne
imul
cmp
mov
fsubr
js
cmp
adc
out
test
jmp
push
ret
jo
loop
jl
leave
push
sub
cmc
imul
mov
push
insl
out
pop
mov
arpl
dec
repz
pop
xchg
into
xor
and
mov
icebp
push
cmpsb
cmp
dec
mov
sub
pop
push
pop
in
fstps
sub
push
cld
fsts
push
push
mov
mov
cmpsl
inc
js
jnp
punpcklbw
push
mov
push
cmp
dec
in
cmpsb
cmp
loopne
ret
lahf
push
mov
jg
and
shll
popa
jp
mov
sbb
cmpsb
xchg
cli
jg
xor
stos
mov
inc
shrl
jp
mov
outsl
je
xchg
mov
adc
cmp
xlat
test
sub
inc
or
jbe
movsl
cmp
jns
xchg
inc
lret
mov
enter
push
mov
pop
mov
cmp
shll
sub
mov
sbbl
aam
xchg
sahf
cmp
int3
xor
movsl
mov
lock
outsl
xchg
aam
jmp
subb
icebp
cmp
mov
push
les
dec
enter
sbb
stos
cli
das
pop
push
mov
rorl
cmpsb
clc
movsb
fistpll
mov
rcr
dec
mov
cmpsb
cmpsb
fisttps
sbb
rorl
sbb
jae
popa
and
xchg
mov
mov
adc
iret
xchg
pop
sub
xchg
cmp
mov
in
sti
mov
std
bound
mov
xorl
pop
xchg
loopne
push
outsl
aad
xchg
pop
adc
sbb
push
xchg
mov
xchg
fsubrl
push
xchg
mov
cmpl
movsb
xchg
cli
xor
xlat
adcl
dec
inc
bound
clc
push
lock
outsl
aam
je
push
jns
stos
fdivrs
dec
enter
pushf
lock
inc
sbb
in
mov
rcrb
mov
fwait
push
aam
pop
mov
fdivrp
iret
scas
stc
enter
sbb
mov
mov
sti
stos
nop
xchg
mov
mov
cmp
sar
mov
out
xchg
sub
fsubrl
jge
jns
mov
test
mov
cmpsl
iret
lea
fistpl
xor
enter
inc
cmp
cmp
enter
add
xchg
test
sub
jno
mov
sub
inc
mov
out
aaa
lcall
and
je
xor
pushf
fimuls
mov
cmc
loope
mov
movsb
in
mov
lcall
jge
std
cmp
js
xchg
shrl
sbb
and
rorb
shll
xlat
xchg
xor
testl
lods
inc
jmp
std
xor
push
or
test
sbb
decw
shl
sbb
sub
push
inc
sub
enter
notb
xchg
pop
push
loop
jbe
xchg
pushf
dec
loopne
mov
xchg
dec
stos
xchg
mov
push
rolb
repnz
shl
xchg
pop
or
and
cmp
in
cmp
and
les
and
sub
mov
push
dec
xor
and
mov
mov
push
ret
push
ret
repz
cmp
fnsave
popl
push
cmp
pop
scas
out
jbe
ja
jne
popf
cli
cmpb
push
push
test
lods
out
dec
incl
push
jae
pop
mov
push
sbb
sub
adc
fs
cld
jmp
push
or
loopne
das
inc
call
jo
add
and
mov
xchg
aas
lods
es
movsl
in
sub
or
ret
pop
test
add
push
ficoms
xchg
leave
xor
stos
mov
cld
push
arpl
adc
sbb
xchg
imul
mov
mov
ss
repz
out
sbb
pop
cmp
fnstenv
and
push
in
shlb
mov
mov
in
bound
nop
out
dec
icebp
sub
sub
cli
xor
inc
sub
shlb
out
xor
pop
lret
imulb
ss
lret
fs
mov
pushw
pop
mov
jle
daa
fstpl
in
loop
push
jbe
testb
ds
subb
mov
imul
aad
and
mov
lods
out
mov
push
test
xchg
push
inc
or
enter
mov
mov
in
imulb
xchg
push
cltd
push
sarl
cmp
dec
xor
push
aaa
push
jge
stos
mov
cld
pop
inc
cltd
xchg
scas
out
sub
xchg
push
cwtl
jle
dec
addb
in
dec
xchg
stc
inc
fcompl
xlat
mov
xchg
cmp
fwait
mov
fcoms
mov
dec
test
jge
add
pop
call
popa
sbb
in
ss
mov
mov
and
mov
push
cmc
std
mov
sarb
jecxz
add
pop
bound
je
sub
xor
mov
outsb
jne
sbb
std
pop
dec
dec
scas
add
or
sub
test
inc
mov
mov
mov
and
cld
jle
or
adc
scas
test
cld
sbb
cld
das
mov
xchg
and
cld
cmpsl
nop
aaa
xor
lods
mov
lods
sbb
into
xchg
push
xlat
movsb
and
cmc
push
fsubp
shlb
pop
cmp
fildl
fdivrl
int3
mov
jl
inc
mov
or
push
test
dec
fs
xchg
dec
cmp
jns
aad
and
or
fs
adc
lret
loopne
scas
sub
aaa
rolb
push
aas
mov
cmp
lret
push
in
lret
xor
leave
dec
add
ret
inc
pop
and
fwait
jb
inc
jnp
and
mov
sbb
ret
outsb
imul
int
cmp
hlt
lock
jo
mov
cmp
lock
cmc
js
sub
out
pushf
aam
lds
xchg
jecxz
lret
push
int
inc
mov
and
test
or
stc
fldenv
inc
jg
add
rolb
stos
xchg
rolb
insb
push
or
mov
mov
jns
shrl
icebp
sub
cld
arpl
inc
arpl
cmp
mov
adc
pop
stos
popa
jecxz
jo
lret
test
test
xchg
add
cmp
mov
mov
xorl
inc
bound
xchg
add
mov
adc
sbb
sub
ret
sbb
and
negb
or
int
push
jno
xchg
jne
ja
inc
mov
roll
mov
xor
jge
cmp
dec
sbb
sahf
fistl
in
int
shrl
dec
fsubs
xchg
hlt
out
cmpsb
ret
mov
xor
or
add
and
lahf
rclb
cmp
sub
or
mov
imul
add
lahf
test
inc
sbb
xchg
push
pushf
aas
push
sti
sbb
lcall
ss
xchg
cmp
out
lods
push
push
mov
les
cltd
pop
xor
sub
or
xor
mov
push
and
into
in
fisttpll
sbb
mov
push
xor
insl
mov
xchg
sub
cmp
sub
das
xlat
mov
pushf
or
push
out
in
sar
dec
imul
cs
sbb
loopne
xchg
repnz
mov
out
movsb
lret
xchg
mov
pushf
jo
and
mov
mov
xchg
lods
in
ret
push
xor
mov
inc
mov
xchg
mov
lcall
jle
adc
xor
stc
xchg
ficomps
stos
mov
cmp
out
xchg
mov
xor
out
pop
sub
push
dec
lahf
jb
push
push
mov
repnz
mov
repz
in
mov
mov
fwait
fwait
or
fnstcw
push
mov
cmp
rcl
sbb
pop
xchg
leave
pop
inc
scas
mov
int3
inc
xchg
mov
outsl
xrelease
aad
xchg
mov
repz
and
fists
out
je
lock
adc
xchg
pusha
lods
sub
popf
sub
and
daa
sub
sub
addr16
scas
or
push
stos
cmp
jbe
jmp
nop
movsb
fidivs
jp
js
sub
mov
dec
repnz
inc
fcmovnb
mov
dec
fdivrp
in
sbb
xor
nop
push
mov
cmpsl
mov
pop
fimuls
dec
roll
aas
and
pop
int3
jbe
je
jle
popa
in
mov
xchg
fs
cli
call
dec
push
mov
and
dec
sarb
push
dec
in
mov
adc
sbb
or
rol
xchg
jmp
jnp
jae
ror
outsl
dec
movsb
sbbl
sbb
fbstp
into
inc
test
dec
adc
movl
mov
ret
js
arpl
and
loop
nop
test
cmp
push
mov
and
sub
dec
shr
add
jbe
inc
adc
xchg
iret
dec
lret
and
aaa
mov
jno
inc
xchg
jl
xchg
push
pop
mov
test
out
add
or
inc
orb
scas
push
cmc
or
call
push
pusha
addr16
fdivl
sbb
xchg
jp
cmp
inc
add
es
push
scas
out
xchg
dec
inc
or
adc
sbb
xchg
xchg
jmp
jbe
ds
lret
jo
and
nop
ljmp
mov
add
sbb
jp
pushf
xchg
rclb
repz
stos
aaa
sti
mov
test
mov
cmp
adc
stos
jne
inc
sbb
mov
or
cs
ror
sbb
cmp
cli
rcrb
pop
shlb
sub
pushf
cs
nop
stos
xchg
loop
cwtl
scas
adc
mov
jecxz
js
cmpl
mov
mov
hlt
jbe
push
jle
jne
mov
pop
sar
test
loopne
js
inc
clc
dec
xor
and
in
stos
add
jg
or
inc
mov
lret
push
clc
xchg
mov
lods
ficoml
or
adc
pop
sbb
lret
adc
push
xchg
dec
imul
xchg
lods
test
xchg
psubusw
pop
jo
loop
leave
cmc
icebp
inc
loop
cmpsl
test
and
rcrb
jmp
fistl
sarl
pop
into
sbb
xor
push
cmp
icebp
cltd
imul
mov
in
sub
inc
add
bnd
fiadds
ljmp
xorb
dec
lret
cmpsl
mov
hlt
out
cwtl
dec
push
fistpl
dec
fwait
adc
cs
cli
cli
fwait
popa
dec
mov
add
pop
pusha
fstpl
mov
rolb
xchg
cmp
push
cmp
dec
dec
mov
sub
scas
pop
push
mov
test
in
mov
pop
mov
pop
dec
enter
jbe
mov
lods
stos
push
fwait
addr16
pop
sbb
mov
ret
mov
and
clc
mov
aad
xchg
mov
xor
jne
enter
loop
and
inc
cmpsl
mov
pop
jnp
cs
cmp
dec
enter
cld
and
push
mov
push
fbld
mov
cmpl
repnz
pop
xchg
or
and
sbb
inc
repnz
xchg
sub
stc
dec
xchg
lret
jmp
test
cmp
jae
mov
outsl
xchg
scas
mov
mov
pop
hlt
scas
imul
pop
xchg
add
xchg
in
jbe
fwait
inc
test
or
sbb
data16
mov
out
xchg
filds
dec
sti
sti
aad
pop
mov
push
sub
fdivr
cmpsb
and
or
hlt
je
mov
mov
xchg
sbb
jg
cmpsb
cmpl
ljmp
pop
lret
repnz
mov
test
fmulp
popa
je
inc
loope
lret
push
push
fsubr
push
sbb
outsl
jp
div
inc
push
sub
and
popa
inc
cld
shrb
stos
dec
or
dec
std
aad
loopne
dec
stos
mov
or
nop
fnstenv
aad
aam
and
shlb
xlat
vmovddup
jnp
out
sarb
arpl
lods
mov
push
pop
fldln2
out
loop
add
add
push
imul
add
repz
daa
or
dec
and
mov
mov
jae
loopne
pop
mov
jb
and
fdivrp
pop
pop
push
daa
lret
imul
inc
inc
daa
cmpsb
loopne
jne
lods
dec
ljmp
outsl
cmp
scas
and
mov
into
sub
std
decb
add
testl
je
es
test
inc
sub
push
stos
loopne
mov
jp
stc
mov
sbb
push
pushf
push
jo
call
out
ljmp
jae
mov
inc
ljmp
pop
or
cmp
push
pop
and
dec
and
sahf
fstpt
mov
daa
jae
into
mov
mov
into
rcrl
sub
xlat
ljmp
lret
pop
xchg
mov
jecxz
or
xchg
push
loope
mov
dec
daa
mov
cli
sub
cmp
lahf
arpl
cltd
push
dec
push
out
and
mov
in
xor
popa
sbb
or
xchg
pop
xchg
loope
imul
cmpsb
fidivs
iret
cld
dec
inc
fs
dec
enter
fld
inc
inc
pop
sub
or
xor
adc
aas
mov
jbe
shrb
add
fldenv
fiaddl
dec
ljmp
sbb
rcr
inc
add
faddl
cltd
sub
sbb
test
gs
cld
cli
call
scas
rolb
mov
xchg
jg
sbb
or
movsb
xchg
adc
nop
jnp
jl
xchg
pop
lock
add
mov
or
aam
dec
sbb
mov
xor
stos
clc
rcrl
sbb
in
mov
je
xor
sbb
xlat
add
mov
fstpt
pop
mov
cmp
out
repnz
jg
iret
jle
scas
lods
in
mov
add
push
cmpsl
push
inc
cmp
movsl
inc
nop
fs
jae
in
pop
xchg
jo
imul
mov
add
push
sub
hlt
je
inc
mov
popl
movsl
push
ret
or
push
pop
andb
xchg
inc
inc
jmp
lods
into
mov
add
cmp
fdivs
sti
jae
aam
insb
clc
mov
lds
pop
les
ret
sub
enter
movsb
pop
sub
push
pop
sub
lahf
nop
and
insb
ficoml
test
clc
pop
jle
mov
in
dec
and
int
jl,pn
sub
adc
pop
subl
dec
and
ffree
popf
xor
das
ret
push
sub
mov
jnp
repnz
adc
push
loopne
hlt
mov
xchg
lods
jns
addr16
or
xor
push
jns
push
ret
sar
scas
mov
out
pop
jmp
repz
popa
jmp
dec
sbb
pusha
mov
das
int
adc
adc
push
leave
xchg
dec
loope
inc
insb
in
insl
cmpsl
cmpsl
sbb
fnstsw
das
or
lcall
std
cmp
leave
inc
dec
ret
mov
sar
aam
ljmp
xchg
bound
sahf
sub
jne
cld
or
int3
in
jno
pop
mov
repnz
sub
push
je
jb
test
adc
hlt
mov
jmp
shll
xchg
xlat
mov
jmp
dec
idivb
out
cmc
out
pushf
push
icebp
push
xor
xor
jecxz
scas
jae
ss
mov
pop
imul
lds
mov
adc
jns
in
pop
rorl
lods
aad
jge
adc
cmp
mov
cmp
pop
stos
enter
jmp
ficoms
insb
pop
mov
out
test
lret
shlb
xchg
xchg
lods
cmpsb
mov
mov
lods
mov
fsts
fistpl
add
popa
insb
flds
xchg
mov
aaa
loopne
cli
data16
hlt
adc
sarb
aam
shll
adc
scas
call
rolb
mov
pop
iret
xchg
xor
sub
push
rclb
data16
adcb
rorb
and
adc
ds
cld
mov
jle
sbb
adcb
xchg
dec
fnstsw
pop
insl
xchg
aam
es
or
sub
mov
fistps
and
push
sbb
movsl
loopne
cmpsb
xchg
push
aad
jp
pushf
add
fwait
dec
xchg
xor
xor
js
in
jo
push
cmpb
push
stos
je
daa
mov
scas
xchg
stc
ds
jae
shrl
iret
dec
add
xlat
sti
in
test
fstps
inc
dec
leave
xlat
xor
dec
inc
cmc
ret
je
stos
aad
shl
sub
dec
leave
or
jne
and
mov
cmp
out
ljmp
push
loope
cmp
out
adc
fsubs
js
mov
test
mov
dec
int3
dec
out
movb
cmp
push
xchg
inc
out
ja
mov
mov
test
sub
mov
sbb
adc
jns
cmp
xor
sbb
outsb
repz
ds
pop
push
mov
stc
lret
and
sub
imul
xor
test
sub
xor
jge
notb
adc
ret
mov
dec
xor
cmp
ret
out
mov
inc
or
pop
pop
scas
dec
leave
jp
adc
testb
cmc
not
pop
or
jb
jmp
ds
stos
pop
aam
int3
or
cmpsl
mov
mov
into
mov
cmp
pop
in
jecxz
sub
mov
rcr
push
dec
adc
pop
pop
shrl
mov
cwtl
mov
inc
xchg
mov
clc
adc
mov
mov
dec
orb
scas
ja
xorl
rcll
lcall
fcoms
adc
cmpsl
push
pushf
je
push
cmpsl
aas
sbb
repnz
stos
adc
adc
cwtl
in
mov
xchg
pop
dec
mov
push
mov
arpl
mov
test
push
mov
mov
jge
fnstenv
jbe
ja
cmp
sbb
pop
push
push
adc
or
bound
ss
dec
in
mov
aaa
or
jbe
pop
addr16
xchg
dec
push
cmp
std
mov
inc
movsb
fisubs
cmp
mov
out
pushf
test
mov
rolb
outsb
or
xor
jbe
int
mov
loop
adc
sbb
mov
fldl2e
enter
jb
cmpsb
fsubl
or
aaa
jne
icebp
clc
imul
cmpsb
ret
and
push
push
mov
mov
push
or
in
pop
fildll
and
aas
pushf
lcall
cmp
adcl
add
xchg
or
sbb
add
ficompl
fs
mull
push
push
sub
dec
or
stos
test
jecxz
dec
fs
bound
cmp
push
rcrb
movsl
cs
jmp
pop
fidivrs
enter
jnp
xchg
xchg
cmp
and
ds
movl
addb
enter
pushf
adcb
in
dec
test
addr16
add
adc
fisttps
lret
icebp
mov
leave
jecxz
cmp
dec
jle
pop
arpl
andb
jo
push
xlat
js
and
inc
inc
xor
dec
insl
in
or
add
mov
call
dec
int
adc
mov
lods
cmc
cld
mov
inc
mov
dec
mov
pop
dec
rcrl
mov
sbb
dec
test
sub
out
popf
push
xor
adc
cmp
add
pop
ficoml
cmpsl
pop
xchg
ljmp
xor
cmp
mov
gs
adc
cmp
adc
out
sub
lahf
or
flds
pop
mov
out
xlat
inc
pushf
mov
jmp
jmp
push
outsl
les
jnp
or
aam
out
inc
into
mov
insb
lahf
xor
adc
loope
sub
test
movsb
pushf
mov
sar
andl
inc
sub
in
or
jmp
mov
mov
lret
inc
rcrl
fnstenv
pop
lods
cmp
int3
mov
fs
jmp
and
int
fwait
xor
and
and
inc
rol
sub
loopne
dec
mov
ja
in
into
fisubrl
movsb
mov
or
in
mov
adc
pop
cmp
lcall
ret
and
sbb
pop
enter
inc
cmp
jb
loop
in
jge
test
loop
jle
push
es
pop
ret
jmp
mov
jae
int3
pop
jg
sub
ficomps
xor
test
andb
xchg
sti
jno
das
mov
mov
cmc
addr16
shr
xchg
imul
int
test
sub
sub
jb
cmp
mov
das
pop
int3
xor
xchg
test
fldcw
add
enter
pop
add
loope
out
xchg
mov
push
ss
nop
push
or
lods
sub
clc
inc
std
add
pop
mov
das
fmull
ds
out
push
lcall
fdivrs
and
lods
icebp
sbb
inc
mov
mov
sbb
add
gs
pop
rclb
mov
xchg
mul
out
insb
out
mov
sub
daa
das
cmpsl
fptan
xlat
and
hlt
xlat
gs
lret
push
cli
push
cmp
jle
inc
or
cltd
pop
jp
scas
leave
ret
pop
cltd
imul
mov
std
push
test
aas
mov
aaa
pop
jp
mov
xchg
inc
add
movsl
push
inc
add
ljmp
inc
mov
cmc
pop
push
mov
lock
scas
push
dec
mov
sub
sbb
jmp
stos
pop
sbb
mov
gs
xchg
int3
stc
cmc
xlat
mov
lcall
ficoms
es
enter
mov
push
fbld
out
push
es
in
in
mov
addr16
sahf
clc
xchg
movsb
scas
inc
xchg
cmp
repnz
push
cld
aad
xor
add
cmpsl
js
jg
adc
loop
pop
mov
and
in
int3
inc
mov
cmp
lock
pop
ret
mov
out
and
inc
call
gs
in
clc
jae
jo
pop
int
adc
sub
outsb
in
aad
jg
addr16
pop
std
pop
aam
hlt
ss
imul
adc
inc
sub
mov
xlat
loopne
push
mov
inc
adc
xchg
jg
jb
mov
stc
clc
jb
push
mov
pop
scas
dec
xor
lods
inc
adc
rclb
push
jle
sar
in
fbstp
insl
push
xchg
into
loopne
or
shr
push
xor
or
lahf
dec
and
mov
and
test
xor
sbb
inc
clc
in
fsubrp
mov
mov
adc
pop
push
mov
lock
sahf
add
test
mov
pushf
adcl
into
add
fbstp
add
xlat
lock
pop
sub
or
mov
enter
inc
shl
mov
cmp
rclb
sub
inc
dec
xchg
cs
cmp
shll
lock
call
sbb
lock
enter
mov
add
pop
hlt
cmc
jns
pop
and
ja
outsb
pop
jo
int
sti
jbe
data16
inc
pushf
inc
loopne
inc
shll
mov
daa
test
cmc
jae
dec
and
outsb
jmp
ljmp
cmp
stc
in
idivl
inc
sub
cmp
and
call
push
mov
stos
pop
aas
or
or
push
movsb
lcall
int3
divl
mov
jmp
jge
inc
shrb
sarb
and
sbb
movsl
je
call
cld
jno
inc
push
fidivrs
outsb
ret
ds
add
out
insb
stc
xor
pop
dec
and
xchg
repz
mov
pop
ficoms
pushf
addb
fdivrl
clc
or
push
sub
pushf
jge
mov
adc
and
push
lods
dec
scas
adc
xchg
pushf
iret
bnd
sbb
fistl
sub
push
outsl
mov
cmp
shrl
aam
cmpsb
dec
push
mov
jmp
and
jae
cld
adc
or
fucomip
call
jns
lds
add
hlt
jno
push
ds
test
and
mov
jns
popf
inc
jecxz
loop
push
push
dec
jge
push
push
sti
push
cmp
xchg
out
iret
jmp
jbe
mov
mov
or
in
and
call
movsl
push
and
push
push
mov
adc
push
jle
adc
sub
leave
cmpsl
mov
stc
pop
pop
cmp
iret
pop
in
or
adc
ja
scas
sbb
jp
and
dec
mov
add
sub
adc
jg
xchg
shll
rorb
sarl
mov
lods
add
call
cld
je
push
aam
lret
push
pusha
in
or
cmp
push
add
cmp
fs
mov
jmp
fs
shr
sub
test
pop
movsb
pusha
push
je
mov
int
gs
pop
mov
fwait
int
xlat
inc
dec
les
mov
dec
lds
jmp
out
mov
xor
scas
pop
mov
pop
and
fists
jb
jge
addr16
int
out
imul
test
push
ficoml
pusha
adc
out
xchg
cmpsb
pop
sbb
arpl
cmpsl
in
and
mov
dec
jl
xchg
in
pop
hlt
sbb
sub
ret
ss
dec
and
out
call
es
repnz
inc
sub
cld
lods
cltd
push
mov
arpl
int3
aad
hlt
std
clc
mov
sub
add
jp
mov
mov
out
incl
push
push
dec
mov
lds
sar
aam
gs
jne
and
or
hlt
data16
mov
clc
add
push
in
lods
jbe
icebp
je
je
sub
cmp
pop
dec
xchg
sub
out
cmp
sbb
lret
adc
mov
fsubp
mov
jmp
cwtl
mov
addr16
mov
cmp
cmp
out
pop
pop
scas
push
xchg
loopne
cmc
mov
out
add
add
xor
jmp
adc
adc
aad
ds
adc
adc
fdiv
or
fdivrp
arpl
dec
je
ss
dec
mov
sti
ss
sahf
xchg
movsl
insb
add
adc
sti
and
stc
into
mov
xor
popa
add
insb
and
sbbb
sbb
stos
sarb
and
popa
mov
gs
xchg
push
xor
ljmp
cmpsl
loopne
mov
mov
adc
addb
movsb
mov
repnz
mov
daa
pop
fldcw
or
jecxz
or
lahf
and
scas
mov
pop
add
insl
into
inc
add
mov
pop
xor
aad
insb
fwait
int3
lret
int3
or
pop
inc
mov
shl
add
jecxz
jb
pop
cmp
sub
ljmp
push
cmp
fdivs
pop
in
mov
or
sub
inc
push
adc
mov
push
lods
icebp
mov
inc
xor
shrl
or
lcall
push
jg
movsb
fcoms
fs
aad
negl
jle
pushf
aas
adc
pushl
xor
push
pop
cs
out
pop
mov
jns
cmpsb
pop
push
push
nop
int3
mov
jle
lock
cli
jmp
or
mov
sub
gs
xchg
jl
sbb
in
shl
lret
daa
mov
rorl
or
shr
mov
iret
adc
fcoml
mov
movsl
bound
sbb
pminub
sti
sbb
jle
or
stos
jne
mov
and
sub
cmpsb
stc
lds
cmp
dec
cmp
push
call
mov
cmp
mov
in
fdivl
daa
sbb
icebp
jbe
mov
mov
jns
mul
loopne
and
daa
mov
fwait
pop
lahf
fwait
cs
out
lret
push
xchg
inc
xchg
jae
mov
cs
mov
fdecstp
mov
push
in
push
jmp
push
push
and
mov
jle
jg
pandn
les
out
fucomp
aam
pushf
pop
orb
ja
sarb
pop
notl
mov
ds
mov
dec
cmp
bound
aaa
test
cli
mull
adc
pop
fwait
movsl
int
jle
repz
pop
cmp
pop
lret
call
fs
fisttps
inc
xor
popf
mov
mov
test
add
dec
mov
and
out
cmp
pop
inc
fisttpl
sbb
fildl
into
enter
push
mov
inc
daa
ljmp
cmp
xchg
and
pop
movsb
pop
mov
les
cli
lods
mov
sbb
dec
in
and
fisttpl
mov
jp
xor
push
cmpsb
push
daa
pop
decl
in
cld
mov
inc
fwait
sarl
adc
call
sahf
out
jecxz
sar
lcall
or
fbld
jns
sub
cmpsb
repz
jno
test
out
xor
sbb
int
jae
inc
adc
lds
fisttps
mov
lret
clc
in
xchg
out
xorl
out
xchg
pop
xchg
inc
jb
pop
in
lret
imul
pop
imul
and
movsl
push
nop
dec
in
jecxz
mov
sub
shlb
out
cwtl
adc
pop
lahf
movsb
rcrl
push
mov
jp
or
dec
sti
cwtl
scas
sbb
xchg
rcrl
push
adc
icebp
imull
push
rcrb
mov
sub
jmp
push
es
and
cmpsl
or
push
dec
roll
mov
push
test
or
ret
inc
gs
js
sar
hlt
outsb
sub
cli
mov
fsubrl
mov
xchg
and
repnz
movsl
dec
sub
test
in
addr16
lahf
mov
lret
dec
mov
outsb
lcall
pop
hlt
cmp
icebp
lds
imul
push
insb
or
inc
sbb
fisubl
movsl
addr16
cmp
xchg
push
push
xchg
insb
out
outsb
push
inc
dec
inc
testl
adc
int3
mov
pop
sub
clc
xlat
in
xlat
and
xchg
mov
sub
sub
jo
or
jmp
jl
push
into
scas
xchg
fdecstp
push
jae
lahf
inc
adc
stos
cmc
xchg
test
dec
loope
lods
sbb
int
xlat
or
inc
and
fs
sahf
in
loope
bnd
mov
push
xchg
lcall
outsl
aam
add
add
jl
pop
lea
mul
mov
adc
add
cmp
lds
xor
and
lahf
jg
fstpt
rolb
and
pop
jnp
dec
xchg
repnz
fwait
xlat
mov
inc
shlb
bound
dec
mov
inc
mov
sbb
dec
push
cmpsl
stc
shl
add
mov
cwtl
loopne
jb
add
pop
inc
xchg
mov
jnp
cwtl
into
loopne
sbb
stos
dec
jge
mov
neg
cmpsb
aam
and
mul
jnp
dec
aaa
test
add
scas
dec
push
xchg
ror
pop
lods
dec
shll
sahf
call
ja
out
xlat
jae
jae
push
nop
xor
push
das
push
xor
in
aam
xorb
cli
ja
rclb
lods
jbe
movsl
and
xor
repz
aaa
xchg
push
cmp
pop
sbb
sbb
jg
cmc
adc
mov
mov
outsl
mov
xchg
or
addr16
jge
int3
enter
cli
jne
push
cmpsb
int
ret
fisubl
icebp
cmc
adc
ljmp
adc
test
lods
push
xlat
popf
or
pop
lods
inc
xlat
xchg
enter
roll
out
das
gs
stos
imul
dec
aas
cmpsl
scas
das
push
xchg
leave
testb
int3
sub
mov
cmp
pop
xor
mov
les
sub
cs
loop
jg
scas
lret
shlb
cs
out
in
fisttpll
out
popa
mov
adc
not
or
fstpt
jecxz
leave
gs
pop
sbb
cmc
arpl
fdivrl
adc
push
add
out
cmp
popf
popa
mov
ret
repz
shlb
cwtl
dec
dec
sti
jmp
jg
outsb
addr16
or
lret
jle
out
nop
or
aas
cmpsl
push
xchg
fdivs
test
mov
stc
or
mov
jg
xchg
mov
repnz
xchg
orb
mov
add
cmp
adc
enter
and
xchg
sub
push
jns
ret
jl
repnz
or
xor
jge
jmp
xchg
cltd
sbb
push
pop
xrelease
pop
jns
iret
mov
inc
push
cld
fistpl
mov
sub
adc
cwtl
lret
adc
inc
dec
scas
pop
xchg
test
cmp
fcoml
mov
in
jge
dec
cltd
add
insl
das
mov
inc
add
ja
and
adc
cli
loopne
pop
pop
and
divb
inc
xlat
pushf
jns
data16
mov
mov
pushf
enter
mov
add
lods
pop
add
shl
push
mov
stc
inc
sbb
fadds
pop
dec
dec
bound
repnz
fsqrt
xor
adc
xor
jge
jno
loopne
rcr
mov
leave
jne
add
lds
xor
lret
adc
inc
jp
push
add
or
cmpsl
enter
and
stos
sub
sbb
loop
clc
mov
sbb
mov
scas
scas
push
xlat
pop
add
in
cltd
int
cmp
fnstcw
and
push
sub
inc
add
add
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
push
pop
jmp
lcall
test
add
add
and
add
repnz
sar
lahf
in
mov
mov
into
pop
xchg
std
loop
notl
push
jbe
lock
decl
pop
adc
add
stos
or
xchg
or
add
add
in
insl
call
sbb
adc
sub
hlt
iret
lods
js
call
jbe
cmp
sbb
add
dec
inc
mov
add
lods
sbb
add
push
add
add
mov
add
cmpb
add
jecxz
pop
push
cltd
sbb
jae
adc
sbb
add
jmp
fsub
lcall
popa
xchg
popf
adc
lcall
or
push
lcall
or
push
lcall
call
jmp
add
out
test
ds
add
mov
add
outsb
adc
adc
sbb
add
xchg
jne
lret
mov
add
jo
outsb
lods
je
push
jo
or
lods
test
sbb
add
xor
add
sbb
add
call
int3
adc
div
fs
xchg
ror
into
into
cmp
jmp
xchg
cmp
lcall
call
jle
int3
sbb
jno
xlat
les
test
add
add
mov
add
scas
cmp
insl
push
lcall
xchg
arpl
fidivrs
js
mov
addl
out
dec
add
push
dec
mov
add
xor
and
jmp
shll
std
repnz
sar
lahf
lcall
xor
xchg
test
lcall
sbb
cli
stos
or
add
add
push
fstl
and
lcall
lcall
jbe
in
add
add
dec
outsl
jl
pop
mov
addb
add
add
call
ds
mov
push
inc
lcall
mov
scas
ret
sbb
pop
xchg
pop
jmp
adc
loopne
pop
aas
lcall
add
jmp
jmp
shll
aaa
movsb
or
fucomip
or
add
jge
addr16
add
add
movb
push
ret
pop
subl
push
ret
add
pop
subl
push
ret
add
or
push
push
ret
pop
movw
push
ret
add
movb
jnp,pn
add
pop
subl
push
ret
add
movb
imul
add
addl
add
pop
addw
push
ret
add
add
or
or
add
movb
xorl
add
xorl
pop
add
xorw
push
ret
add
add
jnp,pn
orl
add
add
add
pop
subl
push
ret
add
add
pop
add
xorw
push
ret
add
add
movb
subl
add
movb
xorl
pop
add
subl
push
ret
add
movb
cmp
add
movb
cs
pop
xchg
push
ret
add
add
add
push
adcl
add
pop
add
xorw
push
ret
add
addl
pop
subl
push
ret
pop
add
subl
push
ret
