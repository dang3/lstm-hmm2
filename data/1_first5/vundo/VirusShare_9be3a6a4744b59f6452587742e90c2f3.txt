jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
and
inc
int
push
lea
xchg
lock
add
add
add
push
add
add
add
add
add
push
add
add
pop
add
add
add
push
add
add
add
add
dec
add
add
add
add
add
lcall
add
add
or
adc
add
add
and
movl
pop
add
add
add
add
add
dec
add
add
pop
add
push
add
add
add
add
add
data16
and
push
dec
add
add
add
add
add
add
add
push
add
and
inc
add
add
add
add
push
add
sub
push
dec
add
dec
add
add
mov
inc
add
pop
add
push
add
add
add
and
push
inc
add
add
add
ret
add
add
xlat
add
add
and
lldt
add
add
popf
add
sub
add
jno
and
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
out
add
add
add
add
pop
add
add
add
add
add
lcall
add
add
lret
add
add
add
add
add
js
sbb
mov
dec
add
push
add
add
add
add
add
add
add
add
jb
cmp
inc
add
adc
adc
add
xor
add
add
addl
add
call
add
add
and
clc
add
add
add
add
add
add
fwait
add
add
movsl
add
add
add
add
add
add
add
add
and
or
inc
add
push
add
add
add
add
add
out
add
xlat
add
outsl
add
out
add
outsl
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
ret
add
add
fiaddl
cmp
mov
add
push
add
add
lods
add
add
call
add
add
and
insl
add
sbb
or
adc
jns
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
push
add
push
add
push
add
inc
add
add
add
add
movl
add
rolb
push
add
add
mov
jno
inc
add
add
dec
add
add
push
add
add
add
sbb
push
add
push
add
add
repnz
add
add
add
jno
test
out
add
add
add
add
add
add
add
add
add
add
jno
and
fildl
rolb
xor
push
add
add
add
jno
lret
add
add
add
add
add
and
clc
add
add
add
add
addl
push
add
add
add
add
add
add
adc
xchg
add
add
add
add
cld
add
add
add
add
push
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
push
add
add
add
add
stos
fadd
and
or
adc
repz
data16
gs
pushf
dec
int3
and
mov
mov
xlat
jl
sti
cltd
pop
ret
sub
imul
scas
pop
push
add
mov
mov
test
lret
sahf
mov
in
xchg
mov
fbld
jno
inc
adc
xor
mov
pop
jae
mov
mov
dec
mov
jns
sub
mov
sbb
lahf
sub
mov
mov
pop
xchg
ss
sbb
mov
std
ficoml
pusha
into
mov
nop
arpl
xlat
or
sbb
scas
rcrb
jno
mov
fisubrs
mov
sbb
push
mov
jo
es
inc
jbe
adc
insl
mov
jg
xor
in
sub
add
inc
pop
cmp
notl
adc
data16
mov
nop
pop
lcall
adc
mov
stos
push
push
inc
push
call
mov
aas
fsubs
pop
push
es
test
pop
push
pop
pop
pop
xorb
fldt
sbb
ror
sbb
dec
icebp
hlt
test
outsl
dec
push
loop
xrelease
fidivl
and
dec
xorl
mov
fildl
sbb
jno
jp
push
imul
nop
fiaddl
or
shrb
test
or
mov
dec
movsb
push
dec
int3
and
mov
lret
xchg
pop
sub
fmulp
adc
or
call
pop
jo
mov
addl
cld
dec
adc
out
xchg
push
xchg
jmp
pop
pop
dec
lahf
jmp
push
mov
fdivs
and
into
pop
sub
add
mov
flds
push
test
add
push
add
mov
xchg
fists
jbe
sub
mov
into
push
imul
xor
stos
add
sub
push
dec
je
fbld
cmp
mov
xor
cmpb
pop
in
je
push
lea
aas
dec
jae
jmp
sbb
jns
cmp
rcll
dec
shrb
jo
in
xlat
ret
mov
shlb
int3
icebp
cmpsl
repz
ficoml
sub
cli
cmp
lcall
mov
xor
or
xchg
xor
and
sbb
add
push
iret
jecxz
or
cmp
mov
ror
insb
or
pushl
iret
out
sbb
lea
pop
mov
jae
lea
movsl
gs
jle
add
mov
orb
js
sub
xchg
cmc
mov
xor
cmp
ljmp
sbb
add
sbb
dec
outsl
cli
fdiv
mov
lret
xor
ljmp
loope
mov
cmp
sub
outsl
data16
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
rorl
int
fadd
cmpl
sub
inc
or
xor
dec
add
mov
rorl
mov
sub
arpl
jae
inc
jns
pop
repz
adc
mov
lret
xchg
stos
icebp
mov
and
jno
jns
push
dec
add
repz
mov
pop
jmp
inc
mov
push
push
adc
sub
push
mov
sarl
jmp
or
testl
adc
fs
iret
cmpsl
cmp
insl
mov
outsb
not
mov
jns
xchg
and
dec
add
shrl
arpl
lret
enter
sub
pusha
imul
jmp
sub
and
xchg
icebp
pop
xchg
ret
cmp
sbb
stc
inc
sbbl
cld
push
cld
dec
add
shll
push
mov
inc
sub
movsb
ja
inc
pop
push
cmp
cmp
in
dec
adc
mov
cltd
ret
mov
out
mov
mov
and
jnp
dec
adc
sub
inc
adc
aad
int3
jecxz
sar
ret
int
dec
out
cmp
inc
sbb
insl
sub
pop
or
sub
and
mov
jecxz
mov
jmp
out
jp
dec
add
daa
dec
add
add
sub
xchg
mov
mov
fucomip
mov
cmp
arpl
push
or
xor
pop
adc
mov
rorl
mov
cmp
arpl
push
or
xor
pop
adc
mov
repnz
rclb
ja
leave
icebp
mov
sbb
mov
scas
ret
rolb
mov
es
lahf
icebp
sub
hlt
lock
push
js
mov
in
pop
jnp
clc
cmp
mov
add
les
dec
arpl
in
mov
pop
ljmp
into
jle
add
sbb
dec
mov
fadds
sbb
ljmp
mov
dec
dec
xor
lock
sbb
jge
int3
lds
sub
and
loope
xor
inc
pop
mov
test
jge
xchg
xor
orl
adc
pop
cmp
push
mov
dec
aam
mov
and
mov
and
jb
xchg
gs
pop
aad
xor
rorb
sub
jbe
mov
xchg
mov
adc
fidivs
and
cmpsl
add
mov
out
popa
out
and
xchg
negl
pop
imul
xchg
sbb
push
sti
jge
sbb
inc
add
or
ror
aam
out
imul
f2xm1
mov
xorb
or
popa
or
lret
jge
mov
mov
cmc
lahf
mov
push
sbb
push
jge
jle
shlb
les
pop
jp
hlt
pushf
push
jbe
das
rcrl
and
fwait
test
aam
jns
rcrl
ljmp
jmp
test
and
cmp
sti
repnz
dec
and
inc
sar
daa
or
dec
andl
loope
xor
pop
xorl
ds
pop
inc
jae
mov
imul
mov
mov
test
lods
sbb
lret
adc
imul
or
jle
aad
adc
lock
xchg
pop
push
mov
mov
fidivs
lods
pop
pusha
fiaddl
or
cmp
out
mov
add
data16
popa
mov
add
nop
aas
adc
jle
mov
shrb
leave
dec
sub
loope
dec
fsubrs
call
insb
inc
cmp
fstl
sub
dec
imul
mov
push
inc
jmp
ds
fwait
notb
fcmovnb
or
pushl
shrb
mov
pop
cmp
int3
divb
jecxz
mov
dec
jnp
pop
jns
inc
stos
or
adc
and
xchg
inc
repnz
mov
aaa
xchg
bnd
dec
mov
loopne
xchg
test
ds
scas
push
in
in
lret
aas
sbb
xor
iret
out
mov
subb
scas
les
and
insb
in
ficompl
sbb
dec
or
fwait
mov
pop
mov
jns
ret
mov
pusha
js
sub
xchg
sahf
stc
xor
ret
lods
popf
subl
jns
mov
andl
and
aad
jg
push
xor
mov
fcmovnbe
cli
scas
push
inc
inc
push
cli
roll
cmp
adc
dec
cmp
dec
add
add
xor
mov
push
cmp
fs
pop
js
bound
scas
xor
mov
push
add
je
outsl
test
scas
mov
push
pop
xor
sub
js
inc
mov
imul
push
mov
mov
pop
add
push
add
or
fcom
cmp
or
jo
jle
and
push
icebp
arpl
xor
xor
mov
mov
pushf
shlb
rorl
sbb
dec
ret
das
mov
or
fidivrl
or
ret
add
pop
out
push
ja
bt
cwtl
xchg
outsb
pop
jecxz
fs
adc
push
xchg
das
daa
mov
or
es
push
and
hlt
enter
pop
rcll
lods
ret
pop
xchg
mov
jmp
jne
inc
push
fwait
popa
fadds
lret
jns
add
fwait
push
bound
jns
xchg
cli
mov
insl
js
fadd
push
and
fldl
movsl
ss
sbb
je
fs
jp
sub
adc
jmp
sub
scas
sub
mov
mov
fstps
inc
pushf
mov
clc
rolb
mov
out
and
mov
push
mov
ja
in
loope
scas
xorb
mov
pop
pop
push
push
cmp
and
jae
ret
mov
add
shll
int
jns
xchg
insb
into
mov
xor
sbbb
ret
in
xchg
scas
push
dec
imul
mov
mov
and
pop
push
xlat
mov
das
lret
lahf
mov
icebp
pusha
pusha
or
dec
outsb
dec
out
mov
push
push
lret
push
push
loopne
jno
and
inc
je
pop
scas
mov
push
lods
sub
jmp
pop
stc
dec
rcl
inc
enter
pop
pop
addl
loop
mov
into
jg
mov
mov
sbb
hlt
mov
jecxz
test
cmp
pop
lret
push
imul
iret
sbb
add
sbb
jns
mov
pushf
mulb
mov
fsubp
nop
jle
mov
jp
js
pop
les
push
xchg
and
cmp
adc
outsl
mov
repz
push
dec
ja
fcomps
mov
icebp
ss
xor
push
popa
mov
outsl
mov
call
jge
inc
scas
imul
adc
movsb
push
cltd
into
pop
neg
push
jge
mov
mov
pushf
pop
movsb
push
sbb
pop
jg
dec
cwtl
rcrl
pop
lcall
loopne
xchg
test
mov
or
lcall
ret
lcall
sti
negl
cmc
push
subl
jbe
adc
or
test
pop
xor
adc
ficoml
into
iret
lcall
sub
xchg
pop
dec
cmpsl
xchg
mov
es
scas
sub
jge
stos
popf
add
push
cmp
mov
in
std
jns
pcmpgtb
pop
sub
add
mov
or
sarb
xchg
dec
cmp
pop
arpl
mov
lret
shl
fiaddl
scas
lret
and
jo
out
xlat
sub
test
pusha
mov
outsl
push
std
movsb
dec
imulb
sbb
insb
or
jg
shrl
nop
sub
jns
leave
into
sbb
in
clc
ja
lods
cmp
push
outsb
out
cmp
mov
pop
aaa
hlt
jmp
lahf
push
mov
xor
mov
cmp
cmp
xchg
xor
dec
push
sub
mov
addl
stos
mov
cmp
test
mov
jg
ja
mov
jno
jns
ret
cmpsb
hlt
cmc
les
push
lcall
and
fstps
xchg
push
ss
out
add
call
scas
jb
push
sbb
adc
sbb
popf
icebp
cmp
loopne
scas
xchg
lahf
push
shlb
mov
es
inc
out
loope
push
cmp
add
into
sbb
je
mov
inc
sub
pop
mov
test
dec
rol
cs
pop
sti
xchg
mov
xchg
sbb
jo
dec
movaps
gs
or
mov
jno
aaa
jns
popf
lods
mov
fwait
rolb
fcompl
test
xchg
lds
daa
mov
test
imulb
outsl
js
incb
pop
jb
lret
push
rol
mov
dec
dec
push
mov
or
cli
outsb
xchg
rcrl
xor
push
push
mov
loopne
nop
aaa
xchg
mull
mov
out
sbb
fimuls
or
dec
mov
inc
fsubr
pop
jge
adc
les
push
lds
mov
xor
lods
movsb
clc
clc
lret
jae
sbb
std
jp
sti
aam
das
pop
stos
leave
and
mov
push
pop
inc
fiadds
xlat
lds
cmp
push
add
lock
dec
imull
pushf
add
fisubrl
lods
notl
pop
xor
xchg
mov
sbb
xor
mov
ja
cmp
mov
call
jb
mov
ds
mov
loopne
movsl
outsl
inc
lods
mov
out
jb
fisubrs
fcmovne
xchg
and
out
jbe
mov
pop
pop
push
fnstcw
inc
mov
sarb
loop
sbb
out
rclb
xor
mov
lret
in
push
nop
lds
mov
xchg
xor
and
pop
xchg
iret
je
dec
xchg
xchg
dec
insl
sub
xchg
jnp
mov
pusha
int
pmaxsw
push
jg
add
test
enter
mov
scas
movsb
adc
filds
mov
add
loope
pop
sub
sub
movhlps
adc
mov
add
movsl
inc
adc
pop
cltd
and
add
insb
and
push
adc
lods
jge
jo
push
popf
push
cmp
ret
push
mov
loope
add
sbb
or
pop
and
push
xchg
mov
jbe
loopne
pushf
aaa
or
jo
dec
jne
lods
fstpt
sub
sbb
pop
jbe
rcrb
mov
lcall
inc
jb
xchg
xor
pop
scas
fnsave
push
mov
add
popa
insl
repz
lcall
ja
cld
jae
rorl
sarl
outsb
dec
pop
sbb
or
out
xchg
scas
cld
les
loope
lcall
push
imul
sub
rcrb
sbb
dec
data16
pop
or
shlb
repnz
loopne
and
xor
sahf
cld
and
ds
mov
insl
sbb
cmp
and
andb
mov
mov
adc
xor
pop
fsubs
mov
lcall
push
push
pop
sub
push
xchg
sub
adc
sbb
andb
fstpl
add
fldl
adc
and
inc
jae
push
sub
mov
rorl
xor
shrb
mov
test
out
dec
xor
bound
bound
cmp
mov
mov
testb
mov
cs
mov
insl
mov
cmpsb
es
scas
stos
lea
outsb
xor
outsb
movsl
add
mov
and
ds
call
push
into
lret
loop
adc
mov
imul
xor
adc
dec
repnz
fwait
xor
arpl
sub
test
and
jp
dec
test
push
ret
mov
dec
xchg
lods
push
xor
adc
sbb
mov
cmp
out
dec
mov
aas
test
jo
mov
add
xor
out
xor
repz
jne
add
lcall
imul
inc
pop
pop
xchg
jmp
jle
xchg
out
cld
sbb
mov
outsb
mov
popf
in
cltd
jae
test
out
lcall
lods
inc
lret
es
add
das
sarb
popf
mov
add
shlb
sbb
pop
aam
mov
enter
pop
push
mov
loop
ljmp
lods
or
fdivrs
ds
ret
movsl
mov
fwait
xchg
in
in
xchg
lods
das
ljmp
add
fwait
jl
adc
loopne
sub
cmp
mov
cmp
adc
dec
clc
pcmpeqb
out
in
add
imull
jle
loop
popf
in
sub
mov
inc
mov
and
mov
sub
sbb
ret
mov
mov
outsl
add
and
mov
lods
inc
jg
je
fldl
pop
jnp
sub
cmp
sbbl
loopne
push
dec
jbe
out
cmp
ds
add
aas
sbb
push
daa
je
xchg
leave
jecxz
out
jmp
push
sub
push
pop
jns
rclb
adc
lahf
cmp
scas
pop
cmc
add
add
inc
add
cmp
fucom
push
dec
repnz
cmp
out
cld
pop
out
fldl
imul
mov
mov
xchg
cld
or
mov
dec
mov
call
popf
inc
jmp
xor
jmp
inc
out
dec
std
cmp
add
jns
leave
dec
push
dec
adc
adc
mov
cmp
mov
test
cld
sbb
insb
daa
push
or
add
sbb
insb
setge
out
mov
pop
fstp
rolb
mov
mov
mov
imul
xor
int3
dec
cli
std
adc
scas
fidivl
inc
jmp
lds
rcll
cmpsb
push
mov
xchg
roll
data16
fstl
push
in
out
je
pop
scas
enter
mov
lock
push
ror
outsb
inc
fnstenv
pusha
les
xor
mov
mov
in
stos
xor
inc
out
shl
test
xchg
in
adc
repz
xchg
and
jne
clc
mov
ret
mov
lahf
fisubs
fsubl
iret
int
push
not
sbbb
push
lods
jb
fsubl
rclb
cwtl
les
lods
pop
inc
pop
add
fbstp
adc
enter
fldenv
and
inc
orl
outsb
iret
dec
loopne
mov
xchg
lret
xchg
mov
jle
add
lods
push
cmp
sub
ret
dec
popa
fidivrl
mov
popf
inc
jns
stos
adc
mov
push
or
into
or
jns
inc
xchg
sahf
mov
jbe
jbe
loope
push
jge
push
sahf
dec
mov
push
sbb
sub
dec
sbb
popf
mov
pop
inc
pop
adc
pop
mov
sbbb
inc
cmp
push
xchg
loope
fcmovbe
sahf
jne
sahf
cmpsl
dec
xor
push
sbb
and
sbb
or
mov
decl
mov
lods
mov
mov
inc
xchg
aaa
dec
cld
test
fwait
dec
xor
xor
cwtl
sub
adc
and
iret
mov
cmc
push
repz
insl
daa
lods
jnp
stos
out
adc
stos
jg
xor
lret
xor
sub
into
sbb
fisubrl
call
inc
push
loopne
data16
pop
xor
mov
les
outsl
lods
jbe
mov
xchg
lcall
and
push
sti
xlat
popf
out
jge
xchg
xchg
ret
pop
push
cmp
stc
adc
xorl
push
scas
or
jae
iret
loope
out
jns
sbb
fwait
popl
xor
popa
and
das
inc
mov
xor
or
push
les
pop
insl
les
sub
movsl
in
add
dec
jo
pop
and
imulb
sub
dec
xor
inc
mov
cmpsb
xchg
fmul
sub
cmpsl
inc
add
xor
sbb
enter
xchg
xor
jecxz
adc
pusha
adc
test
pusha
aas
outsl
sbb
pop
inc
test
and
ror
or
push
imul
or
loope
into
dec
pop
xor
int3
jle
add
mov
xor
and
out
les
leave
leave
mov
push
lret
cmp
push
inc
add
arpl
and
js
xchg
sub
jns
lret
popa
dec
add
inc
jae
call
jmp
or
push
cwtl
das
xchg
dec
ds
int
fstl
dec
bound
sub
lcall
xchg
mov
rcll
lcall
pop
jnp
loopne
mov
push
inc
cmp
test
sub
ja
inc
mov
jmp
xchg
je
or
je
mov
int
sbb
lahf
movsl
pop
or
dec
aaa
push
lahf
outsb
out
insb
cs
cmp
xchg
std
fcmove
jne
xchg
cltd
push
push
jp
push
mov
mov
adc
out
and
test
push
andl
cmp
dec
ljmp
cmp
repz
leave
cmc
addr16
mov
mov
adc
adc
sub
fildl
push
arpl
popa
cmpsb
pop
dec
xchg
xchg
mov
mov
lods
jmp
push
jp
jno
sub
push
mov
mov
push
jnp
stos
fwait
repz
mov
addb
fbld
fstp
ss
push
pushw
or
push
jne
xchg
xchg
jl
dec
sbb
inc
cmp
mov
pop
sbb
mov
pop
jb
daa
std
mov
fcoms
das
je
mov
mov
sub
subb
fisubl
xor
mov
int3
hlt
add
daa
mov
xchg
xchg
shlb
stc
pop
jmp
pop
orb
jae
enter
sbb
inc
push
js
inc
add
and
cmpsb
loopne
xchg
dec
adc
sub
lret
les
xor
xlat
arpl
adc
test
push
mov
push
stos
fdivrl
fldcw
lret
dec
jmp
jle
dec
mov
add
hlt
mov
xor
imull
inc
iret
jbe
into
jb
xchg
cmp
movsl
and
test
jge
cmp
push
shrb
sub
xor
lods
jnp
xlat
lret
adc
cmpsl
ret
and
outsl
scas
adc
sub
scas
loopne
sbb
aas
scas
jns
or
and
mov
mov
adc
loop
push
fisttps
xchg
inc
cli
pusha
inc
mov
jbe
adc
jnp
jne
and
cmc
and
repnz
adc
fwait
loopne
mov
mov
inc
ljmp
fidivs
enter
loopne
and
mov
ret
lahf
movsl
std
or
int3
ja
popa
push
push
sti
add
not
pop
leave
jg
pop
cmp
xchg
or
int
push
adc
xor
mov
in
and
xchg
pop
stc
popa
jle
cmpsl
lret
fisubrs
push
cwtl
or
addb
cmp
cmp
cmp
std
ljmp
mov
add
es
sbb
or
ret
inc
fidivrl
mov
cmp
jbe
enter
dec
shll
jae
pop
mov
pop
xchg
cmp
int
shrl
repz
ds
repnz
cwtl
adc
pop
movsb
adc
daa
pushf
mov
push
lods
mov
outsl
xor
pusha
data16
testb
cwtl
or
mov
push
mov
fstpt
pop
adc
jge
jbe
loope
rcr
adc
mov
push
mov
sti
ljmp
add
shrb
xlat
xor
xchg
icebp
xchg
cwtd
xchg
pushf
loope
std
fstpl
pop
cmp
mov
lock
mov
pushf
pop
adc
cltd
jp
adc
or
in
push
int3
xchg
cmc
aam
sbb
mov
pop
out
ret
jmp
sub
dec
cmp
cli
lret
aam
fnstenv
loope
testl
test
sub
or
jb
test
add
ret
jo
mov
cmp
mov
insb
bound
and
jl
cmpsb
scas
push
sub
gs
les
lock
idivl
int
jbe
aaa
insb
xchg
jnp
clc
and
push
sbb
xor
jno
push
mov
pop
icebp
pushf
stc
add
pop
and
js
das
dec
and
test
pop
push
dec
imul
pop
cmc
mov
add
mov
in
shrb
ret
cltd
loope
pop
call
outsl
push
inc
mov
mov
out
pop
arpl
in
or
jne
and
ds
adc
mov
jg
js
scas
imul
cs
mov
add
ret
push
pop
pop
dec
test
roll
bound
xchg
insb
nop
and
mov
jae
hlt
dec
andb
mov
pop
popf
mov
int3
out
notl
jmp
std
xchg
test
imul
and
adc
pop
repz
jmp
mov
mov
xor
in
out
push
rolb
leave
lret
out
pop
xor
xchg
and
jnp
iret
mov
ret
rcpps
imul
adc
gs
jg
mov
adc
xchg
aam
mov
xchg
in
lahf
test
mov
ret
fstpt
xor
or
lds
push
sarl
div
fcoml
fsubl
fistl
xchg
dec
out
push
dec
jae
jb
cmpsb
dec
pop
mov
shlb
icebp
pop
in
xor
inc
cmp
add
hlt
cmpsl
inc
insb
sbb
jg
mov
jecxz
loop
mov
mov
mov
pushl
jle
jno
aad
out
mov
adc
lock
jge
rorl
pop
addb
je
sbb
ret
cmp
std
in
stc
rclb
icebp
std
xor
insl
xchg
dec
or
aad
or
mov
mov
popf
xchg
cmp
ja
dec
enter
mov
cwtl
subl
ficoml
dec
insl
xchg
out
mov
lahf
scas
ret
xchg
sbb
pushf
inc
jp
jno
or
lea
movsl
xchg
fcomps
js
cmp
sbb
fldl
mov
inc
push
sub
adc
mov
fimuls
iretw
popa
sbb
in
arpl
mov
mov
orb
mov
xor
mov
dec
inc
jmp
sbb
es
std
test
subb
and
cli
sub
fidivs
in
pop
jo
jge
repnz
popa
cld
push
imul
stc
mov
mov
cmp
arpl
push
or
xor
pop
adc
mov
rorl
mov
cmp
arpl
push
or
xor
pop
adc
mov
rorl
mov
cmp
arpl
push
or
xor
pop
adc
mov
rorl
mov
jae
leave
mov
or
mov
mov
lret
mov
xchg
xchg
mov
jmp
mov
mov
pop
or
jbe
push
sub
cmpsl
fnstenv
mov
cltd
imull
daa
pop
aaa
or
jns
dec
add
ja
inc
cmp
cmpsl
sub
xchg
out
divl
daa
jp
add
jns
and
jge
and
aam
repnz
sbb
xchg
rorb
movsb
push
ss
hlt
pop
dec
out
sbb
sub
cmpsl
and
sbb
dec
xor
mov
clc
test
divb
sub
inc
push
aaa
mov
ja
push
out
push
inc
stos
fdivrs
mov
daa
pop
ss
jns
sbb
add
mov
jbe
cltd
notl
mov
enter
xchg
divb
xchg
sub
cmp
addr16
leave
js
lcall
xor
imul
cmp
dec
xor
shrl
xor
mov
jbe
jo
push
dec
mov
daa
pop
xor
jb
call
sub
test
cmpsl
mov
xchg
xchg
insl
out
imull
daa
ret
aaa
pop
pop
dec
pop
inc
adc
inc
cmp
mov
movb
frstor
or
or
sbb
jnp
ja
inc
xor
mov
hlt
loopne
cld
mov
nop
in
stc
cs
or
pusha
add
add
inc
and
movsl
out
in
loop
out
fcmovbe
cltd
imull
daa
pop
aaa
imul
sbb
inc
cmp
cmpsl
fnstenv
mov
cltd
imull
daa
pop
aaa
imul
sbb
inc
cmp
cmpsl
jg
sub
cmp
adc
ds
xor
insb
adc
fs
loope
ror
sbb
arpl
das
clc
jne
sbb
pop
rcrb
stos
mov
in
sub
jge
xchg
pushf
xchg
cmp
je
shrl
and
lock
js
test
inc
xor
cmp
push
jg
scas
xchg
jle
sub
insb
lods
pop
aas
xor
sbb
pop
cwtl
insb
and
call
sbb
sbb
mov
pop
nop
jmp
sbb
les
push
mov
inc
out
mov
inc
rcrl
pushf
mov
adcb
in
pushf
pushf
rcrb
popf
sub
je
ss
hlt
negl
pop
stc
sahf
cmpsb
jnp
int3
xchg
jg
mov
fnstcw
das
insb
sarb
rcl
pop
mov
push
movsb
jle
sbb
inc
add
push
cmp
ret
fst
jl
cmc
dec
adc
jl
add
dec
rorl
cmp
clc
sbb
dec
loope
sub
mov
aam
adc
inc
add
add
jns
ljmp
lock
fdivs
pop
mov
inc
test
sahf
and
pusha
dec
ret
cmovb
test
notl
imul
mov
shll
ljmp
pop
dec
repz
rolb
into
repnz
add
or
or
xor
xorl
lds
xor
pusha
cmp
push
hlt
fyl2x
in
jno
hlt
das
push
lret
lock
test
lret
fwait
test
jg
mov
mov
dec
sbbb
jb
adc
adc
pop
loope
mov
inc
xor
hlt
sti
push
or
out
in
jo
fisubrs
sbb
ds
mov
cli
or
js
int3
arpl
xchg
cmp
iret
xor
lahf
or
out
out
fxch
mov
lret
push
call
out
out
push
nop
adc
sbbl
dec
xchg
push
adc
aaa
mov
jmp
dec
pop
adc
push
orb
jmp
mov
arpl
dec
push
mov
inc
loop
popa
xor
pop
jle
or
mov
jb
mov
gs
jno
int
push
loopne
lds
mov
aam
cmpsb
shrl
pop
sahf
push
out
cmp
or
testb
dec
dec
out
jge
mov
cmp
dec
pop
mov
aaa
std
rcll
sub
divl
nop
xchg
arpl
dec
mov
dec
push
mov
testl
add
cmp
jb
scas
ja
repz
mov
es
dec
mov
nop
or
imul
faddl
xor
push
mov
out
mov
in
loop
mov
rol
popf
cmpsb
mov
dec
aam
and
insb
std
repz
shll
cmp
dec
clc
xlat
scas
cs
test
sub
jns
das
cmpsl
push
sbb
pop
push
iret
addl
sti
rorl
jmp
movsl
mov
mov
mov
out
mulb
jno
loope
int3
dec
mov
push
std
cmp
fstpt
inc
cmpsl
cmp
fwait
popf
inc
outsl
andb
popa
or
dec
mov
stos
cli
ret
ss
loope
ss
pop
fmulp
sub
cmpsb
push
mov
int3
mov
mov
sbb
jge
sbb
stos
pop
sahf
nop
jecxz
cwtl
sbb
rcll
xor
xor
add
mov
jg
loope
daa
inc
hlt
dec
sbb
adc
or
aas
xchg
outsb
sbb
filds
dec
and
outsl
push
addr16
xor
stos
mov
mov
notl
cmp
iret
fs
push
sbb
xchg
sarl
sti
ljmp
inc
xchg
xor
jmp
or
pop
xchg
arpl
adc
cmpsb
or
fcomps
sarl
mov
movsb
fcompl
test
sbb
jae
push
jmp
sbb
or
ret
or
fbstp
mov
test
sbb
lds
push
movsb
out
insl
dec
xor
js
lahf
ret
cmp
in
insb
out
in
in
je
sarl
sbbb
in
or
iret
fiadds
fildll
mov
aas
lock
and
test
push
jge
daa
pop
or
mov
ret
xor
cmp
jb
xor
cmp
xchg
lcall
sub
cmc
sbb
or
xor
xchg
loop
mov
pushf
loopne
adc
xor
arpl
hlt
js
inc
pusha
jbe
sbb
loop
jbe
pop
sbb
je
cmp
stos
into
and
sub
mov
jbe
ret
sub
mov
lahf
sti
mov
cmc
in
mov
test
fstps
hlt
mov
dec
jno
mov
cwtl
in
lea
fabs
jne
test
fs
out
scas
sbb
mov
push
push
fwait
insl
rcrl
test
out
ljmp
pop
add
das
pop
jmp
push
xor
or
cmp
arpl
out
push
lahf
pop
xchg
mov
mov
in
xchg
cltd
add
adc
movsl
inc
cmpsl
jl
loopne
xor
ror
insl
xchg
xorb
loope
xor
std
movsl
sti
lret
pop
in
mov
pusha
mov
inc
or
call
add
xor
fadd
dec
hlt
cli
imull
loop
xor
push
inc
and
fs
jb
rolb
pop
imul
iret
or
mov
add
inc
fsubrp
adc
sbb
inc
shrb
add
js
ja
in
xchg
rcr
xchg
imul
fisttpll
dec
mov
jge
jle
or
mov
sbbb
divl
loopne
ja
dec
xchg
in
popa
pop
push
push
jno
inc
movb
cmp
cmp
and
imul
mov
in
scas
inc
and
pop
stos
mov
cwtl
fs
dec
add
lods
jmp
sarb
mov
xor
add
in
loopne
mov
sbb
mov
sub
adc
sub
and
sbb
popa
inc
adc
gs
arpl
sub
cmp
sbb
mov
jo
add
sti
pop
mov
iret
mov
add
dec
mov
mov
pusha
lret
pop
sti
or
push
or
adc
push
xchg
sub
mov
add
pop
adc
mov
mov
movsb
loope
adc
mov
cmp
mov
ljmp
push
addr16
mov
add
xchg
pop
subb
xchg
into
mov
nop
cli
xor
mov
andb
inc
lcall
jle
aaa
jae
aad
or
mov
add
je
xchg
jae
fdivrs
push
jecxz
das
imul
push
jb
sub
pop
push
adc
jno
lahf
lcall
out
push
icebp
xchg
xchg
add
xchg
sbb
fistl
repnz
and
aas
std
push
iret
lods
sub
dec
mov
aad
mov
xchg
adc
nop
xchg
int3
add
push
mov
xor
dec
das
xchg
rolb
dec
and
rorl
or
jl
lahf
sub
push
push
jae
inc
mov
ljmp
lods
push
cmc
inc
mov
mov
adc
cltd
or
jae
push
xchg
sbb
mov
scas
xor
movsl
pusha
aas
leave
mov
sti
adc
aam
cwtl
outsl
mov
fxam
xor
jg
jecxz
dec
negl
inc
imul
cmp
and
orl
fsubl
aas
jp
xchg
jle
clc
lods
xchg
les
outsl
add
ljmp
enter
scas
push
or
stos
inc
cwtl
mov
mov
imul
cmp
in
add
jne
mov
mov
notl
sbb
adc
pop
enter
mov
mov
sub
mov
ret
sbb
sub
add
dec
push
out
inc
cld
xor
sbb
or
js
push
mov
jge
lahf
xchg
sub
ret
jle
fistps
and
mov
movsb
or
scas
fstp
sti
cmpsb
mov
lahf
lcall
hlt
popa
jp
fwait
mov
sarl
and
mov
mov
repnz
fisubs
sbb
icebp
adc
lea
push
leave
aas
xchg
imul
push
inc
fidivl
ret
jbe
mov
into
hlt
cmp
lods
sub
add
jle
jmp
pop
dec
adcb
mov
imul
pop
jbe
bound
jle
and
pushf
pop
xor
xor
or
add
pop
enter
push
pop
sub
mov
mov
inc
hlt
pop
mov
xchg
dec
test
aam
pop
adc
jg
cmp
push
push
mov
mov
fs
xor
push
insb
pop
pop
xchg
lock
jb
mulb
fdivl
out
aam
pusha
or
push
pop
xchg
sahf
xchg
xchg
push
xchg
jle
xor
aad
adc
lods
push
push
jl
stc
and
inc
push
mov
out
cmp
push
cmp
lahf
or
xchg
and
jno
jno
arpl
loope
in
mov
cmpsl
and
movsl
push
push
cld
dec
lods
out
dec
out
xlat
pushf
push
sbb
testb
xor
ret
dec
aaa
out
dec
jb
pop
cmp
das
repz
lea
push
xor
mov
mov
push
icebp
enter
push
test
mov
imul
cmp
mov
sbb
mov
adc
push
mov
jg
popa
inc
xchg
lret
cmp
loop
int3
enter
mov
frstor
and
xchg
sbb
jne
inc
ljmp
inc
loop,pn
or
add
jns
test
jns
pop
in
fidivrs
dec
xchg
lods
xor
pop
stc
into
les
pop
pushw
daa
add
jbe
and
cli
mov
ja
repz
movsl
fidivrs
sbb
mov
push
xor
outsl
sbb
imul
mov
nop
sbb
pcmpeqb
push
xchg
mov
lahf
adc
inc
pop
inc
in
ret
cmp
fbstp
lahf
jbe
jmp
pop
pop
mov
nop
xor
stos
stc
cmp
xchg
jne
stos
jo
outsb
out
push
pop
mov
daa
div
stos
or
xchg
sub
arpl
pop
push
popl
xchg
pop
and
sub
sbb
mov
or
test
aas
ret
pop
lret
jnp
sbb
jle
sub
adc
popa
shlb
clc
cmp
arpl
fwait
rol
insl
push
data16
lea
ja
jb
dec
xchg
ret
xlat
inc
jno
dec
dec
lahf
lret
jl
and
rolb
dec
out
dec
les
jge
mov
les
mov
mov
adc
xchg
mov
pop
fcoms
xchg
xor
sbb
fadd
mov
adc
adc
ret
mov
ret
imul
pop
mov
mov
and
dec
sub
inc
das
jl
jns
jns,pn
xor
sub
pop
jb
pushf
mov
lahf
and
idivl
ljmp
and
leave
jl
xor
cmpsl
and
xchg
mov
aas
mov
ret
sbb
cmp
arpl
mov
mov
fstps
je
bound
mov
repz
pop
repz
std
stos
cmpsl
mov
sbb
jecxz
gs
pusha
inc
inc
mov
pusha
add
stos
jno
add
or
test
inc
lcall
ds
lock
in
cli
mov
mov
loope
rcl
lahf
inc
sbb
nop
pushf
pop
mov
popf
add
cmp
push
aaa
dec
loope
pop
push
negl
subb
movl
push
pusha
sub
cmpsl
loope
add
add
sbb
push
adc
xor
inc
or
pop
nop
fwait
lock
aas
xchg
and
mov
jle
aas
adc
sub
dec
mov
push
sub
push
inc
xor
jecxz
mov
dec
cmp
jb
xor
fwait
jl
out
or
fstp
cmc
sbb
xor
push
cld
pop
repnz
dec
fimull
loop
inc
movsb
inc
jmp
out
jmp
lea
sub
and
lahf
xchg
arpl
sbb
sbb
cmp
leave
lds
rol
icebp
jle
jge
enter
leave
push
pop
adc
insl
incl
push
mov
mov
mov
mov
inc
fwait
cli
inc
and
shrb
les
xlat
mov
bound
xlat
xlat
pop
shrl
cmpsl
add
icebp
or
add
sub
enter
sub
subl
out
cmp
out
or
xor
movsl
cli
mov
or
jne
pop
mov
push
mov
fldenv
adc
mov
les
mov
into
sub
andb
inc
xor
mov
add
ja
pop
cmp
cmp
movsb
popf
fidivs
inc
dec
in
mov
ret
mov
pushf
jmp
jge
repnz
stos
rcl
cmpsl
shl
push
xchg
inc
dec
adc
in
insl
push
jg
roll
pop
mov
lret
adc
adcb
mov
fdivrs
icebp
rcrb
or
aaa
daa
push
scas
adc
and
lcall
inc
add
push
xchg
or
out
jnp
ficompl
popa
jg
mov
sbb
mov
mov
es
popf
jns
cmp
xchg
ss
scas
dec
popa
stc
inc
in
cmp
xchg
std
push
or
push
pusha
hlt
cltd
or
insl
out
push
dec
mov
xor
adc
stos
ljmp
cmp
pop
clc
sub
popa
daa
dec
add
data16
lods
xor
dec
lods
adc
fisttpl
push
pop
int
mov
mov
outsb
mov
pop
jp
int
mov
push
xor
fildll
pop
xor
dec
and
sub
push
sbb
pop
ds
bound
push
cltd
aam
sbb
daa
push
es
cmp
add
mov
push
mov
push
mov
cmp
insl
lock
jns
in
stos
xorb
stos
nop
pop
popa
push
push
cwtl
mov
push
inc
pop
lret
int
sub
jp
stos
fldenv
stc
add
stc
repnz
mov
sub
adc
lret
test
repnz
push
and
and
inc
cmc
mov
inc
mov
push
cmc
mov
inc
shl
xchg
pop
sar
mov
repz
les
xchg
lock
dec
and
push
fists
lret
insb
outsb
pop
xchg
xorb
loope
iret
leave
sub
sub
popf
mov
and
sarl
fs
or
xchg
mov
cwtl
aaa
bound
push
iret
lret
rol
cmp
dec
imul
cmp
movb
inc
clc
push
cltd
pop
cmp
or
cs
jmp
rclb
iret
js
lods
icebp
push
mov
notl
shll
shll
imul
popf
adc
push
mov
sbb
es
and
add
push
jl
inc
js
cmp
cwtl
aas
mov
sub
pop
jb
repnz
adc
stos
xor
sbb
decb
fcmovb
loopne
jbe
sub
popa
mov
push
aas
xor
jb
setp
js
pushf
inc
in
lock
fnsave
sbb
int
mov
imul
jb
add
pop
ljmp
test
in
fistpl
xor
ss
xchg
inc
mov
pop
xor
pop
bound
popf
mov
push
dec
addr16
pop
fucomp
rcll
xchg
clc
nop
in
das
ljmp
pop
cmp
int
lahf
sub
and
cmc
inc
scas
hlt
or
or
or
push
mov
stc
jb
xor
ds
fdivl
dec
inc
adcl
dec
xchg
inc
stos
xlat
adc
jle
mov
out
push
sub
mov
add
add
nop
xchg
fistpll
xchg
lret
test
int
ficompl
test
outsl
into
dec
pop
jp
sbb
inc
adc
push
mov
mov
mov
outsl
mov
hlt
inc
and
cwtl
jmp
jns,pt
in
ret
es
pop
lret
aam
lcall
jp
imul
xchg
loopne
or
std
insl
xchg
jl
jns
cwtl
pop
add
pop
je
pushf
pop
shld
jb
pop
in
popa
cld
leave
dec
bound
scas
rcrb
push
lahf
test
adc
lods
dec
or
orb
aaa
std
and
cwtl
jae
lret
sbb
cmpl
push
sub
cli
jmp
jnp
lods
pusha
xchg
and
int3
pop
out
mov
cmpsb
jl
fmuls
xor
adc
gs
mov
test
ret
fmul
lock
inc
add
call
lahf
sub
in
pop
dec
xchg
icebp
xchg
lea
push
repz
fisubs
movl
push
ss
or
jp
shr
mov
icebp
jg
xchg
in
inc
add
nop
rcll
iret
ja
xor
xchg
fldt
jo
adc
add
mov
or
jmp
cltd
inc
je
push
inc
cwtl
dec
push
lcall
test
or
xor
push
loopne
cmpsb
sub
mov
add
in
adc
dec
inc
jns
mov
into
loopne
mov
ficoms
jp
loope
jns
jp
push
repz
mov
fs
add
push
or
sahf
adc
out
pop
push
out
sub
imul
out
pop
bound
push
hlt
hlt
adcb
cmp
cmc
and
aas
stos
sbb
sahf
add
mov
scas
push
xchg
inc
pop
mov
push
mov
jl
add
fistl
std
pushf
xor
in
ljmp
add
mov
ss
mov
repz
popa
addb
mov
and
inc
int
pushf
or
les
xor
sub
add
cmp
mov
pop
dec
xor
sbb
in
xor
xchg
push
inc
add
stos
inc
int3
arpl
sub
dec
inc
sbb
or
loopne
mov
cli
icebp
fwait
popa
clc
inc
fnstsw
or
inc
jnp
sti
jb
pop
inc
imul
fcompl
xor
icebp
adc
xchg
leave
mov
pop
je
fwait
xlat
push
jo
int3
xchg
lods
add
cmp
push
andb
add
hlt
sub
ret
ret
nop
insb
loop
jge
aad
imul
mov
les
lds
cld
mov
mov
divb
sbb
in
sub
js
mov
jl
and
lret
mov
inc
mov
scas
test
call
mov
cld
pop
mov
jecxz
stos
and
push
add
jbe
hlt
pop
ljmp
mov
into
shr
stos
dec
mov
xchg
mov
cmc
aaa
adc
adc
pop
mov
rolb
insl
jb
sub
adc
jmp
arpl
push
imul
pop
xor
adc
dec
in
fmull
pop
loop
int
push
or
add
fcmovbe
sub
scas
inc
ljmp
loopne
dec
or
add
pop
fisttps
insb
xchg
jl
sub
outsl
adc
jmp
scas
mov
movsl
int3
in
daa
mov
bound
mov
daa
fdiv
enter
je
adc
test
cltd
pop
push
ret
adcb
push
sbb
addr16
loop
fistl
adc
jno
and
int
and
out
scas
inc
mov
mov
in
cmp
cmp
push
sub
jge
xchg
pop
into
stc
das
outsl
pop
push
je
lods
lret
dec
cli
xor
inc
mov
sub
push
popa
sub
mov
push
shrl
insb
xchg
sbb
pop
push
cld
sub
pop
cmpsb
scas
mov
sbb
bound
add
cli
inc
lret
mov
push
shlb
sub
bound
sub
inc
out
inc
add
mov
jge
bound
add
pop
hlt
cmp
pop
inc
popf
je
jmp
test
and
inc
cmc
daa
and
rcll
in
pusha
lea
jo
inc
dec
push
lea
fisttpll
enter
sbb
xchg
jb
clc
jbe
iret
adc
andl
dec
push
jns
sub
dec
pop
stc
ror
pop
int3
jno
pop
push
dec
or
out
xchg
add
push
or
subl
sbb
into
jns
repnz
and
mov
pop
push
inc
pushl
aas
popa
std
or
adc
and
push
ja
scas
xchg
xchg
mov
cltd
imull
daa
pop
aaa
imul
sbb
inc
cmp
cmpsl
fnstenv
mov
cltd
imull
daa
pop
aaa
imul
sbb
inc
cmp
cmpsl
jmp
xchg
sbb
cltd
imull
daa
pop
aaa
cltd
pop
jns
or
ja
inc
rcll
cmpsl
test
mov
mov
test
daa
cmpsb
popf
ret
pop
jns
jle
xchg
mov
mov
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
movsb
inc
and
adc
add
into
push
inc
jge
jo
xor
test
cmc
and
les
and
adc
add
and
ret
movsb
shl
jecxz
repz
and
aam
les
adc
add
je
adc
xor
loope
xchg
rorl
mov
inc
and
pop
pop
push
lahf
inc
inc
shrb
fbld
movsb
clc
test
subl
jp
dec
test
mov
imul
das
xor
sarl
int
or
or
sbb
mov
and
pop
jo
out
cwtl
fbld
mov
add
sub
dec
andl
pop
xorl
je
dec
add
xchg
sbb
mov
les
xchg
leave
scas
inc
mov
mov
inc
faddl
test
cmpsl
dec
mov
push
mov
and
sahf
bound
adc
jb
loope
or
cmpb
mov
mov
inc
and
adc
add
je
adc
xor
test
hlt
and
aam
cmc
inc
cs
cmpb
xor
adc
inc
fsubrl
loopne
sub
ljmp
sbb
dec
and
data16
out
leave
mov
mov
fcmovnu
inc
adc
daa
ja
and
xor
and
ret
movsb
rcll
in
aam
les
adc
add
je
adc
xor
test
hlt
and
aam
les
cltd
xchg
push
mov
in
dec
xchg
mov
lcall
leave
mov
leave
xlat
stc
loop
xor
rorb
movsl
dec
test
stc
ret
sbb
dec
and
push
movsl
and
cld
into
movsb
repz
push
loope
xchg
xchg
push
pop
add
mov
sbb
mov
mov
xchg
aaa
fdiv
je
cltd
mov
pop
xor
sbb
and
or
rcrl
mov
test
fisttpll
pop
outsl
jmp
cmpsb
enter
daa
out
sbb
pusha
in
mov
dec
mov
imul
pop
iret
pop
xchg
mov
sbb
subps
cs
inc
xor
jmp
inc
xchg
mov
mov
lea
jl
in
xchg
loopne
and
test
mov
xchg
test
adc
lret
cmp
xchg
loop
aaa
leave
int3
fstpl
ret
fmull
sub
mov
mov
cmp
xchg
mov
sbb
xor
les
stc
or
mov
or
daa
xchg
movsl
mov
push
add
outsl
lret
aas
inc
lods
test
jmp
lret
clc
mov
adc
dec
jle
stos
test
adc
les
test
xchg
adc
pop
jnp
add
loop
out
mov
jge
fisttps
icebp
mov
cs
stos
xorb
iret
lods
xchg
mov
sbb
test
jmp
sbb
test
xor
push
pop
lcall
mulb
pop
jle
dec
mov
in
cli
push
xor
mov
cltd
test
out
dec
dec
fdivs
and
mov
sbb
xor
fdivrp
outsl
mov
es
sub
jmp
sahf
daa
ljmp
add
mov
jno
roll
mov
add
adc
out
les
pop
int3
ret
bound
icebp
fs
dec
inc
call
or
mov
daa
clc
sahf
jno
stos
mov
push
inc
and
mov
inc
hlt
gs
stos
xor
push
mov
shrl
lret
cmpb
aam
jmp
sub
fs
bound
jg
in
pop
jl
xchg
push
imul
xor
inc
mov
jecxz
sti
hlt
outsl
decl
addl
test
xchg
jge
lock
pop
imul
add
pop
das
push
out
adc
push
cltd
in
adc
inc
int3
cmc
test
andl
inc
decl
aas
xor
gs
add
push
mov
sbb
stos
pop
jg
xchg
cwtl
into
xor
ret
mov
jmp
fs
popa
out
jecxz
pop
sub
push
sbb
pushf
push
adc
fsubs
test
mov
jae
data16
xchg
xor
pop
xchg
aas
jge
push
lcall
add
mov
call
pop
push
fld
pushf
and
int3
fisttpl
hlt
das
call
xchg
jnp
lods
xchg
jno
movsb
sub
insb
insb
fdivrl
sbb
inc
aas
xchg
sbb
outsl
fdivs
sub
enter
icebp
aad
test
push
push
add
rcrl
into
inc
pushf
in
test
mov
ss
push
cmp
fwait
scas
dec
sarb
or
mov
repnz
mov
or
incl
insb
or
cmp
cli
movntq
out
repz
or
mov
lahf
js
pop
jns
and
roll
ss
test
mov
stos
dec
sbb
outsl
mov
xor
hlt
add
cltd
pop
mov
jae
cmp
mov
pop
pop
outsb
fs
cmpsl
and
insl
jecxz
scas
les
cwtl
iret
test
fdivl
lret
addl
cmp
fisubl
lret
pop
lods
das
orl
fs
pop
ja
lret
sub
jbe
sbb
scas
aaa
push
andb
imul
aaa
inc
xor
mov
mov
cmpsl
mov
push
daa
fcoms
jo
pop
cmpsb
push
loopne
lods
lret
mov
cmp
jnp
enter
shlb
jg
stos
and
fsubrl
and
jecxz
sub
adc
andb
mov
push
sbb
or
das
push
scas
addl
xchg
jl
movsb
bound
add
out
in
hlt
xchg
pop
mov
push
sub
mov
iret
and
rol
push
jae
or
cmp
shl
dec
insl
enter
jl
jle
adc
add
pop
push
aaa
popf
or
mov
mov
mov
filds
sub
cmp
push
dec
loope
in
add
or
dec
loopne
xchg
mov
adc
jo
pop
push
push
cmp
daa
mov
scas
dec
cmp
lcall
sbb
add
or
imul
cmp
pop
mov
test
inc
add
mov
dec
dec
outsl
call
imul
xor
insl
jne
mov
or
xchg
in
mov
and
stos
pushf
data16
inc
negb
pop
mov
pop
scas
neg
fnstsw
xor
mov
dec
lock
push
fisttps
add
pop
cmp
jmp
test
sub
xlat
jg
add
and
sahf
test
dec
xor
sub
stos
movsb
push
imul
xlat
cmp
jo
mov
dec
xchg
adc
mov
lea
loop
cmc
inc
xchg
pop
inc
lahf
cld
loop
call
icebp
mov
cmc
ja
pop
jnp
jecxz
leave
adc
jnp
ljmp
imul
cld
jge
pop
arpl
push
push
add
mov
sub
aad
inc
mov
fcompl
lret
xchg
cwtl
push
stos
sahf
dec
negl
xlat
jo
mov
xchg
adc
push
cmp
addb
jl
xor
out
ja
mov
jecxz
pop
xchg
js
roll
push
mov
and
loopne
orb
inc
pop
pop
fidivs
lret
and
mov
lods
pop
aad
lcall
mov
cltd
shrl
push
adc
stos
cmpsl
jnp
fmuls
pop
push
mov
ds
adc
inc
test
inc
int
mov
sub
or
inc
jmp
sbb
or
fidivrs
xchg
lret
repnz
dec
enter
repnz
sbb
mov
test
xchg
mov
xchg
sar
nop
insl
cmpsb
xor
xchg
jb
mov
or
xchg
shll
shl
push
add
dec
negb
inc
mov
imul
lods
test
imul
push
xlat
inc
mull
jb
inc
xchg
incb
shlb
adc
xchg
lret
bound
or
out
test
roll
jp
push
nop
cmpsl
mov
cmp
mov
cwtl
dec
and
xchg
pusha
aam
testb
popf
jge
mov
adc
pop
jle
mov
mov
adc
out
mov
pop
push
test
mov
arpl
or
js
cmp
sbb
ja
aad
inc
loop
sub
pushf
fnstenv
and
mov
outsl
addr16
pop
fidivl
sbb
push
jge
push
rorl
mov
pop
sub
push
mov
dec
pop
lcall
out
mov
in
sub
add
loope
in
pop
pop
ja
add
daa
push
or
lret
adc
push
out
jge
mov
jne
cmp
mov
inc
repnz
mov
jo
ret
add
cltd
fsubr
xchg
jne
inc
ds
add
imul
ds
mov
lods
pop
dec
inc
cli
int3
lods
jmp
lcall
pop
pop
xchg
mov
rorl
ffree
and
mov
shr
mov
mov
lods
imul
lea
xor
cmp
fsubrl
lock
xchg
jae
jno
inc
jle
mov
push
mov
outsl
cmpl
aas
insl
cmp
adc
add
sbb
fs
mov
ret
mov
push
xchg
jecxz
and
xor
mov
cmp
push
aad
cmp
stc
lahf
pop
mov
jge
rcrb
push
mov
pop
xor
pop
xor
ja
rcr
movsb
test
mov
jb
scas
icebp
jl
lret
mov
mov
sahf
cmpsl
loop
cmp
movsb
subl
pop
sbb
dec
fcomps
lea
adc
je
add
sbbl
icebp
fisttpll
fidivl
or
stc
and
jns
insb
int3
cld
lret
lods
imul
imul
push
fldl
xor
frstor
xor
pop
shll
mov
dec
jge
and
fxch
test
call
es
out
ljmp
jle
fs
repz
mov
pop
aad
out
bnd
fcomps
mov
or
push
mov
lret
sbb
push
add
sbb
sysret
movsb
add
pushf
ret
rcl
xor
in
mov
adc
scas
subl
cmpl
test
dec
out
imul
bound
lock
dec
mov
sti
movsb
fistl
mov
adc
fsubrs
mov
das
mov
sbb
mov
dec
inc
in
dec
mov
call
mov
out
or
add
stos
pop
jnp
lods
jl
popl
pop
inc
cli
fs
fwait
nop
insl
pop
lods
sbb
push
or
and
mov
jmp
lock
daa
outsb
std
out
mov
xchg
dec
mov
sbb
fistpl
cmovns
test
xor
stc
divb
daa
stos
and
pop
add
cmp
adc
shl
cmp
cmp
mov
lret
or
cmp
sahf
pop
nop
mov
inc
scas
pop
adc
mov
cli
mov
in
push
inc
pop
outsl
aas
cltd
les
mov
add
sub
scas
jmp
or
dec
pop
dec
movsb
inc
xor
es
mov
xchg
lods
ret
xchg
fucomip
call
les
and
sub
fwait
popa
sub
ret
inc
popa
jle
sbb
mov
jge
pusha
mov
test
xchg
les
mov
mov
js
jmp
mov
sti
in
sub
xchg
or
adc
pop
sub
xchg
aad
xchg
enter
pop
xchg
jne
and
test
mov
add
jno
jge
stos
or
mov
jle
in
test
sbb
and
fsts
int
stos
jl
cli
sarl
insb
jne
mov
or
mov
xor
out
pop
test
outsb
pop
cltd
inc
push
pusha
roll
and
out
testl
iret
pusha
dec
push
mov
pop
jl
xchg
mov
test
test
add
jmp
subl
pusha
or
pop
test
pop
dec
sahf
outsb
mov
cmc
in
or
mov
aaa
into
dec
push
and
or
pop
daa
jge
push
push
mov
xlat
mov
pop
mov
add
adc
imul
sub
popf
jae
mov
test
in
cmp
lret
or
mov
mov
xor
sub
and
addl
in
and
dec
xchg
inc
mov
shll
jno
cmp
mov
add
or
adc
in
lcall
rorb
pop
sub
xor
lret
out
imul
sub
sbb
jne
cmp
mov
mov
sti
sub
sub
scas
int
out
xor
ja
adc
dec
push
and
xlat
movhps
rcrb
insb
popf
or
idivb
nop
dec
inc
push
jo
dec
ret
lret
or
es
push
cltd
jmp
iret
sub
ljmp
and
mov
cmpsl
les
stos
sbb
std
es
pop
xchg
adc
jecxz
lahf
cmp
out
dec
cli
imul
stc
adc
subb
adc
mov
data16
mov
add
xlat
icebp
lcall
pushf
fstpl
cmc
mov
adc
nop
cmc
push
jns
sbb
sub
push
mov
dec
cmp
rolb
push
jmp
push
pop
fwait
sub
sub
mov
inc
ret
mov
mov
sarb
hlt
fcmovnb
push
add
xor
fwait
loop
add
inc
outsl
repnz
pop
in
add
int
call
inc
adc
mov
xchg
adc
notb
roll
add
mov
lods
or
in
xorb
pop
out
lret
adc
fdiv
fstl
add
mov
jae
dec
sub
inc
fisttps
add
fidivrs
mov
and
loop
push
or
mov
ret
ret
jecxz
inc
orb
in
neg
divb
mov
xchg
fildl
adc
loope
push
enter
daa
mov
mov
cmpsb
cld
and
pop
lock
sbb
dec
cmp
inc
enter
xchg
mov
push
cltd
jnp
xchg
lcall
mov
xchg
stos
mov
adc
push
out
xchg
jb
in
sub
adc
push
jmp
cmp
xchg
fwait
nopl
sbb
imulb
add
jns
hlt
add
pop
mov
mov
xor
cmpsl
and
mov
mov
out
sar
aas
sti
or
sub
dec
pop
pop
mov
xchg
aas
arpl
cmp
in
inc
int3
pop
cmp
push
sbb
mov
dec
jg
pop
addb
mov
sbb
mov
mov
scas
repz
incb
stc
mov
fstl
cmp
mov
sar
es
push
insl
clc
push
lds
add
push
mov
xor
setno
test
in
add
in
std
dec
and
inc
dec
mov
fisttpl
aad
and
mov
stos
insl
sbb
lock
cli
inc
outsb
push
mov
cmp
mov
mov
xor
pop
dec
jecxz
rep
enter
inc
pop
xchg
std
jmp
ret
jge
add
mov
fmull
into
mov
cltd
push
addb
and
xchg
data16
sbb
icebp
adc
insl
mov
shl
leave
lds
push
mov
sub
and
daa
pop
mov
mov
int
insl
adcl
sti
mov
cli
mov
fsubrs
xor
adc
xchg
xor
test
cmpsl
or
xchg
aas
sti
sub
xchg
xchg
add
jl
ret
das
mov
cmp
test
dec
test
mov
lret
fsubrp
call
loope
cmp
mov
mov
mov
cmpsl
dec
stc
ss
fldt
decb
fistpll
iret
lcall
inc
repnz
cmp
or
sub
arpl
mov
out
sub
pop
pop
mov
aaa
addb
in
ja
aas
hlt
xchg
sub
pop
jmp
inc
mov
dec
sar
popf
and
jno
test
pushf
imul
add
mov
xor
cmp
pop
out
enter
loope
xchg
adcl
push
std
mov
rcr
sub
and
mov
push
scas
add
jno
jne
movsb
scas
into
out
mov
aad
jns
mov
inc
mov
shrb
mov
jmp
popa
mov
mov
and
mov
jns
cs
xor
aaa
sbb
or
mov
aam
jne
jge
jnp
mov
test
mov
aad
or
incb
push
pop
xor
imul
inc
mov
ret
popf
mov
pop
bound
js
cmp
jecxz
in
add
daa
add
inc
pop
lcall
cmp
adc
imul
mov
sbb
xchg
push
adc
fsubl
inc
nop
jp
movsl
imul
mov
sub
pop
popf
int
mov
inc
iret
mov
xor
mov
xor
xchg
les
cmc
lret
push
cmc
in
xor
xchg
mov
aaa
out
xchg
push
scas
movsl
mov
xchg
test
int3
in
inc
jb
inc
mov
test
lahf
mov
aas
adc
aaa
sbb
ret
mov
cmp
test
sarl
jle
loop
add
popf
lock
fistl
popf
pop
mov
fcmovu
out
ja
and
inc
pop
imull
dec
scas
xchg
dec
lret
mov
fidivrs
pusha
xor
scas
adc
lss
decl
orl
pop
cmp
cs
in
test
cmp
inc
int3
jl
scas
jge
mov
int3
mov
out
ret
xchg
cmp
insl
dec
sbb
cmc
and
xor
jmp
push
dec
xchg
or
call
jg
addr16
dec
pop
xchg
dec
inc
insb
dec
adc
xor
or
fchs
shlb
in
ja
shrb
dec
mov
or
push
or
jmp
clc
stc
inc
adcl
std
cmc
js
popa
scas
clc
andb
in
adc
imul
leave
push
shl
dec
lahf
jg
dec
mov
cmc
shrb
jne
aas
mov
int3
movsl
lds
xchg
adcb
add
inc
cli
jmp
mov
idiv
mov
cmpl
arpl
push
pop
jle
jg
jb
mov
lret
jo
stos
or
xor
xchg
or
mov
dec
add
xchg
movsb
in
dec
dec
popa
pop
jecxz
xchg
loop
das
jns
or
mov
js
sbb
inc
inc
shll
mov
fmull
xchg
sarl
jecxz
cmp
mov
lea
pop
mov
dec
sub
test
adc
pop
jmp
cli
ds
ret
aad
xor
outsl
mov
outsb
push
sbb
pop
aam
mov
cld
ret
inc
jae
jne
in
dec
lret
cs
or
cmp
mov
mov
and
insl
mov
repnz
or
and
cmp
ja
nop
hlt
push
pop
jmp
aam
fistl
test
mov
jbe
adc
inc
subb
out
push
pop
pusha
leave
cmc
sbbb
mov
insl
sub
adc
stc
in
adc
repnz
push
jp
jb
gs
xor
outsb
dec
jle
ret
ret
and
mov
les
mov
sbb
sub
insb
cmpl
lahf
lods
adc
dec
sub
dec
cltd
cmp
inc
jns
shrb
movsl
or
dec
movsl
jg
shlb
adc
sbb
movsl
and
dec
pop
cmp
test
mov
pusha
cmpsb
jbe
jmp
inc
mov
jne
hlt
gs
popf
jge
push
push
outsl
push
sbb
sbb
jmp
jp
push
or
jge
sbb
mov
jb
loope
push
les
mov
and
pop
adc
pop
jmp
orb
xchg
stc
pop
or
loop
inc
jno
nop
ljmp
fwait
add
and
xor
jae
sub
or
push
xchg
mov
int
pop
jmp
pusha
cmpsl
leave
mov
add
cld
add
fdivs
les
sub
jns
sti
out
repz
mov
fstpl
hlt
es
loope
and
cmpsl
jns
xor
inc
xor
mov
mov
push
cmc
pop
imul
jl
fstl
mov
jl
add
mov
movsl
orb
cwtl
mov
xchg
jno
insb
lcall
xor
out
pop
cmc
notb
and
lret
fs
push
pop
pop
or
or
xor
cmp
push
jns
push
fisubl
mov
mov
and
pop
pop
inc
lock
or
mov
stos
inc
dec
jmp
mov
notl
js
in
loopne
mov
push
xchg
push
aas
sti
lcall
and
in
out
in
movsb
add
lret
or
mov
add
dec
xchg
leave
dec
inc
mov
movsl
inc
imul
aad
out
adc
fisttpll
xchg
mov
sub
push
mov
dec
jge
add
cmp
inc
adc
fwait
pushf
or
mov
movsb
push
and
fistpll
jo,pn
jl
es
xchg
cltd
ljmp
adc
mov
int3
mov
repnz
adc
pop
subb
int
inc
adc
repz
jns
push
mov
push
movsl
xchg
cmp
xor
lret
push
cmp
mov
int
je
jns
out
jbe
into
pop
mov
dec
jecxz
sub
rcrb
lahf
jbe
out
int3
pop
mul
sub
mov
sub
add
pushf
rcrb
fistl
bound
je
adc
xor
test
hlt
and
aam
les
adc
add
je
adc
xor
test
hlt
and
aam
les
adc
add
je
adc
xor
test
hlt
and
aam
lds
adc
add
mov
movsb
jns
jecxz
test
pop
cmp
movsb
jp
dec
test
inc
xchg
push
mov
ljmp
je
fs
push
mov
push
jp
dec
test
sub
cmp
or
sbb
and
adc
add
mov
fs
mov
movsb
jp
dec
test
sub
cmp
or
sbb
pop
cli
js
add
je
or
and
sub
xchg
and
outsl
sarb
push
je
repnz
lahf
lds
insl
and
add
cmp
cli
enter
or
cmp
add
push
mov
gs
add
leave
lret
in
lods
push
jg
xchg
jmp
dec
lcall
or
daa
and
sbb
jne
adc
test
sub
cmp
in
xor
mov
jne
pop
dec
mov
iret
jnp
lods
sub
das
push
pop
sbbl
daa
mov
inc
pop
dec
cld
pop
test
bt
pop
push
mov
jg
cli
arpl
sub
and
jmp
fwait
js
movsb
jp
dec
test
sub
cmp
or
sbb
and
adc
add
je
fs
cmc
add
in
xor
inc
xchg
cmp
popl
adc
jl
jne
fs
aaa
mov
fcmovnbe
push
js
dec
call
pop
lods
jge
sbb
jne
push
stos
add
jne
or
cmp
xor
shll
movsb
sub
and
aas
mov
or
sbb
and
adc
add
je
fs
mov
movsb
jp
dec
test
sub
cmp
or
sbb
and
adc
add
je
fs
mov
xorl
or
xchg
lret
gs
mov
xor
hlt
cmp
xchg
repnz
jle
pop
aas
outsb
mov
ficoml
jo
cltd
in
cmpsl
mov
fstl
cmpsb
adc
ret
into
out
ss
adc
stc
cmpsb
out
outsl
imulb
cmp
push
mov
out
add
jbe
addl
pop
and
int3
cmp
pusha
jecxz
xchg
jle
gs
push
inc
pusha
jne
mull
inc
frstor
sub
cltd
mov
mov
push
adc
fsts
fisubrs
inc
mov
or
push
dec
out
rclb
scas
call
jae
and
inc
outsl
lock
xchg
repnz
adc
adcl
data16
aas
push
sub
mov
add
push
sarb
push
mov
push
dec
mov
pusha
rorb
popf
cltd
xor
out
arpl
scas
outsb
pop
xchg
pop
adc
int3
inc
cmp
out
cwtl
into
cmp
mov
hlt
sti
test
inc
outsl
xlat
cltd
dec
and
mov
outsl
lret
stos
pop
repz
push
adc
xor
sub
dec
aam
test
xchg
lock
mov
xlat
sub
ret
sbb
mov
mov
dec
das
test
mov
sub
jne
jno
test
cmp
pop
push
ret
push
es
mov
sub
dec
push
lahf
out
fsubrs
icebp
xchg
xchg
mov
ljmp
jbe
int3
jp
mov
iret
das
cs
int
ss
rcll
pop
xchg
push
es
mov
and
out
mov
sub
jne
rcr
sub
inc
jae
outsl
fsubrl
popl
sahf
mov
inc
aam
add
orl
arpl
orl
movsl
es
cltd
ss
and
rcrb
leave
jbe
pop
stos
dec
mov
mov
adc
dec
scas
arpl
lods
out
mov
xchg
icebp
repnz
add
or
mov
push
aas
imul
shl
push
cmp
xor
rolb
mov
xchg
fbld
push
sub
out
pop
push
inc
insl
loope
xor
add
fst
push
les
decl
fsubrl
sub
add
fstps
jmp
sbb
std
clc
fcoml
rorl
aam
lcall
call
or
test
aas
sub
maskmovq
testl
call
ljmp
clc
pushf
and
cwtl
jne
push
mov
mov
ljmp
push
pop
insb
jne
jmp
enter
iret
add
xchg
sub
and
mov
aam
rcll
inc
lods
gs
push
adc
imul
xorb
aaa
and
or
insb
pop
rolb
scas
sbb
shll
dec
das
pop
or
dec
push
add
dec
or
sbb
and
in
jnp
xor
popa
sarl
pop
mov
jmp
insl
adc
jns
push
fisubrl
sbb
inc
xchg
daa
shrl
aam
sbb
mov
imul
cmpl
fstl
outsl
sub
and
daa
inc
mov
cmp
push
ss
fidivl
cmc
lret
loop
cmpsl
in
shll
bound
mov
push
lods
xor
lock
dec
sub
insl
lea
andb
or
movb
pop
orl
mov
cmp
or
sub
hlt
xor
xchg
add
add
push
mov
inc
mov
daa
pushl
jne
inc
xor
idivl
imul
pop
cs
pop
push
sti
repnz
js
out
push
cmp
inc
cmc
mov
leave
dec
jo
cwtl
add
jg
icebp
in
in
imul
sub
sbb
pop
mov
js
sbb
gs
lods
lea
int3
xchg
mov
test
or
out
adc
scas
or
add
or
add
mov
mov
aaa
push
lret
data16
and
mov
addr16
and
in
imul
and
add
sbb
scas
es
imul
push
aaa
push
dec
mov
lret
lods
push
adc
stc
ss
loop
lds
daa
and
fs
xor
and
ljmp
mov
pop
cmp
mov
mov
pop
or
adc
ja
mov
fnop
test
inc
adc
out
adc
sub
test
xor
mov
lcall
jne
push
jge
add
icebp
mov
sub
xchg
fistpl
push
ds
sub
notl
xchg
loop
push
add
xchg
insb
mov
jae
dec
adc
inc
adc
inc
repnz
mov
push
idivl
adc
lret
cmp
ficomps
cmp
sub
adcl
add
iret
mov
das
xor
lret
and
xchg
rclb
sbb
add
jae
repnz
mov
sarb
mov
test
data16
fsts
aam
sahf
pushl
and
cld
push
jne
daa
xchg
iret
mov
sar
jo
mov
das
add
idivb
shr
lret
mov
nop
pop
jp
push
jg
cli
lock
dec
popl
xchg
mov
lahf
ljmp
ret
fsts
jle
outsb
ret
xor
lahf
cli
jmp
adc
push
lock
inc
jo
add
cmp
add
popf
cwtl
mov
xchg
bound
data16
xchg
lods
jne
or
in
add
bound
shlb
push
in
jb
outsl
dec
xor
ret
jne
aam
stos
pop
sub
hlt
out
xchg
add
inc
jae
lods
iret
jge
jo
loopne
dec
xchg
sbb
sbb
mov
pop
and
xlat
movl
cmp
rol
iret
cmp
xor
pop
adc
int3
mov
mov
mov
fwait
jns
or
into
jae
inc
repz
sbb
ffreep
push
and
lahf
outsb
out
adc
cmp
test
out
rclb
fldl
inc
adc
jb
pop
mov
fnsave
sub
hlt
sahf
scas
fldt
jmp
xchg
sbb
sub
jg
push
daa
xchg
push
mov
arpl
fists
int
into
inc
sub
sbb
loopne
mov
xchg
xchg
rolb
dec
pop
pusha
vmwrite
aas
cld
mov
mov
cmpsb
add
fiaddl
insb
xchg
fsubrl
push
push
popa
sub
xlat
xchg
lret
ja
adcb
mov
cltd
loopne
push
push
in
scas
icebp
and
jno
std
sbb
cmp
scas
inc
add
out
pop
dec
fsts
cmp
and
into
fisttpl
lahf
mov
xor
lret
and
inc
or
sbb
or
sbb
in
or
xlat
popf
or
das
decb
repnz
mov
sbb
ret
add
sar
inc
mov
in
add
fcoms
jae
iret
xor
xor
hlt
cmp
and
leave
cmpsl
add
int
iret
aam
test
std
mov
repnz
call
cld
fstpt
fdivr
imul
pop
rol
ljmp
pop
add
jns
jb
cmpsb
xchg
imul
cmp
popf
iret
pop
jg
fsubs
mov
push
imul
cmpsb
stc
ja
mov
push
out
call
sub
push
stc
icebp
lock
dec
adc
cld
outsl
jge
psubd
into
mov
inc
push
or
iret
jl
out
cmp
out
aas
or
jg
mov
rclb
sbb
mov
sub
fwait
dec
or
xor
add
insl
jg
pop
pop
nop
addr16
and
test
in
nop
lock
dec
jl
rorl
adc
push
and
iret
xchg
jmp
daa
stos
sti
sahf
imul
or
shll
xor
shrl
mov
imulb
imul
lock
mov
jmp
lea
xchg
inc
inc
xor
mov
imul
mov
adc
repz
cwtl
xor
pop
sub
out
mov
lcall
inc
addl
cli
insb
jae
in
mov
outsl
jle
xor
push
add
cmpsl
jp
jg
popf
stos
adc
ss
push
rcl
jb
xchg
adc
cmp
push
stos
xor
cltd
rcrb
or
jnp
jmp
pop
enter
xor
or
lcall
in
add
mov
emms
sbb
stc
jns
pop
gs
aad
jb
xor
adc
in
lahf
das
cmpsl
cmp
enter
pop
iret
pop
das
pop
add
movsb
pop
or
cmp
xchg
and
inc
stos
push
sub
sbb
push
mov
sbb
adc
ss
subl
or
int
or
clc
sti
movsl
mov
aad
jg
repz
fcompl
dec
iret
idivl
js
dec
lea
repz
mov
and
sbb
inc
lea
or
mov
insl
clc
cmp
mov
popa
inc
test
stos
or
daa
in
loopne
pop
mov
sbb
pop
adc
mov
xchg
mov
addr16
dec
add
test
dec
leave
adc
xor
sbb
arpl
or
dec
ror
sub
xor
in
mov
flds
mov
jbe
push
nop
push
out
lcall
aam
jl
lahf
add
push
add
daa
or
push
mov
in
push
mov
dec
lods
jecxz
dec
pop
pop
cwtl
add
or
or
adc
xchg
stc
popa
push
push
xor
xor
lds
push
std
jecxz
xor
into
push
cmp
pop
jae
lea
scas
jmp
add
lea
lahf
shll
push
sub
or
xchg
clc
add
and
pop
leave
add
pop
in
subl
scas
sub
and
cmpsb
xor
inc
jno
dec
arpl
mov
into
sub
mov
xchg
scas
mull
cli
sahf
mov
pop
lahf
imul
inc
jnp
fsubr
out
cmp
in
test
add
pop
arpl
push
pushf
mov
mov
dec
cmp
xchg
outsb
jbe
out
stc
test
or
push
loop
daa
sub
pop
out
cmp
in
lock
fsubp
or
in
inc
fbstp
out
and
mov
xchg
int3
jp
ss
int
or
call
enter
mov
arpl
mov
sbb
mov
int3
das
rcl
mov
jmp
and
int
das
xor
add
das
cmc
or
out
sbb
lret
shll
lret
fbld
insl
fwait
xlat
adc
outsl
pushf
in
inc
in
out
sub
scas
rcrb
xor
push
insb
adc
dec
arpl
pop
cmp
lods
or
sub
cmp
mov
aad
stc
cmc
xchg
into
sbb
cs
and
pop
outsb
js
or
fcmovnu
pop
ljmp
in
jnp
cmp
sbb
sti
dec
or
pop
xor
scas
in
or
insb
add
pop
push
mov
mov
push
in
xchg
mov
sub
in
sbbb
pushf
dec
xlat
iret
cmpsl
push
stos
cmp
inc
insl
loop
push
sarl
dec
sahf
pop
cli
inc
lahf
xor
mov
lahf
ret
out
dec
rcrb
adc
repz
outsl
xchg
xchg
enter
stc
loop
sbbb
popf
inc
in
lahf
lcall
xchg
leave
sub
and
push
sahf
sbb
fstp
and
xor
mov
add
inc
cwtl
les
lods
js
ret
leave
imul
jno
sub
xor
pusha
mov
lock
imul
inc
into
out
ljmp
dec
dec
cmpb
stc
cld
xchg
mov
pop
sbb
outsl
imul
pushf
lret
stc
dec
pushf
mov
jmp
ss
shll
nop
fmul
dec
adc
inc
std
mov
rol
imul
mov
test
call
loope
xchg
mov
sub
inc
cmp
sub
rcrb
mov
mov
mov
fcmovnu
scas
sub
or
pusha
sbb
push
add
jge
das
bound
mov
out
add
arpl
loopne
stos
rclb
pushf
xor
inc
ds
insb
out
cmp
lahf
push
mov
vmovaps
jne
xor
outsl
adc
pop
lea
push
outsb
mov
call
movsb
pop
pop
in
pop
jo
add
mov
movsl
jp
lock
movsb
push
xchg
je
xor
js
jp
in
aam
fstps
jb
mov
or
push
xor
divl
adc
into
sahf
ljmp
inc
out
or
sbb
inc
int3
push
pusha
cmp
adc
pop
in
or
xchg
mov
add
mov
pop
push
adc
or
and
xlat
push
andl
mov
sar
cmpsb
js
or
stc
aaa
xchg
and
xor
mov
xor
mov
mov
pop
ss
mov
scas
cmp
dec
inc
jp,pt
mov
mov
sub
jno,pt
lahf
out
cmpsl
rclb
cli
fstl
xchg
push
mov
add
pop
dec
dec
mov
call
jmp
or
inc
sbb
pop
repz
cld
push
jno
pop
push
dec
mov
repz
push
jne
dec
insl
dec
cs
out
mov
add
push
cmp
mov
mov
inc
cmp
cmc
and
or
xchg
jo
std
mov
imul
enter
in
mov
lret
mov
aam
popa
adc
in
aaa
push
xor
sub
mov
adcb
subb
jge
jg
lds
cmp
fistl
stos
lcall
mov
sbb
jle
or
mov
jecxz
sahf
sub
outsl
pop
push
jne
xor
mov
cmp
xchg
lcall
pusha
int
jle
inc
mov
scas
adc
jl
int3
mov
inc
sarb
in
aad
and
dec
gs
push
shl
cs
xor
cmpsb
mov
or
out
lahf
lahf
pop
int
add
dec
loope
adc
mov
orl
test
fs
in
jg
jno
es
and
jno
rcl
fsubp
and
push
inc
adc
mov
in
mov
shlb
mov
sti
lods
fdivs
aam
mov
pop
movsb
andb
cld
subl
jns
sarb
dec
add
sahf
dec
sbb
xorl
add
imul
dec
sub
jnp
cmpsb
and
mov
xor
sub
mov
scas
lea
mov
outsb
mov
loope
out
jg
adc
sub
int
repz
cmp
shlb
aam
sbb
incb
sub
jg
sub
bound
inc
ljmp
movsb
cmp
shrl
inc
mov
sbb
mov
push
imul
push
int3
adc
jge
aam
loopne
mov
and
push
test
out
push
mov
and
sub
lcall
fcomp
movsl
pop
jge
adc
add
fwait
pusha
jecxz
imul
popa
lret
mov
mov
or
ljmp
in
sti
jb
sbb
mov
clc
leave
push
pushw
jae
lock
xchg
aad
push
push
fcoms
sbb
repz
adc
sbb
pop
shlb
dec
outsl
xlat
fucomip
les
rcr
cwtl
enter
dec
xor
repz
lret
aam
rol
mov
repz
mov
jmp
and
jmp
das
fs
lods
mov
arpl
xchg
mov
sti
ret
jecxz
je
aad
jg
dec
jno
mov
cli
rorb
movsb
das
xchg
stos
push
orl
pop
scas
xor
out
pop
dec
dec
mov
jo
sub
xchg
xorl
lret
mov
cmp
dec
gs
test
ss
imul
pushf
adc
ds
inc
dec
cmp
fldenv
scas
or
and
sub
xor
pop
outsl
xchg
mov
inc
mov
movl
test
or
mov
jns
fldt
jle
mov
js
sub
cli
pop
lcall
xchg
and
fistpll
insl
cmpsl
sub
xchg
shrl
std
nop
and
cmpsl
das
or
arpl
sub
jl
or
adc
cld
mov
not
lret
test
in
inc
dec
leave
push
test
jb
jb
ret
enter
dec
ficompl
mov
jnp
mov
ljmp
mov
jl
popa
ret
jnp
xchg
scas
mov
inc
jb
and
lock
sahf
cli
jne
or
xchg
mov
data16
fs
call
mov
jae
sarl
jbe
iret
and
in
jmp
jbe
pop
adc
push
in
notb
repnz
jne
push
scas
cmp
nop
and
lds
mov
out
pushf
and
dec
pusha
adc
sub
add
mov
lods
jecxz
iret
stc
ficomps
mov
test
pop
dec
imul
loopne
adc
sub
je
push
arpl
adc
inc
xchg
xlat
cmp
sub
aas
sub
imul
imul
push
fists
stos
daa
inc
inc
into
inc
add
pop
lds
cmp
loopne
jae
test
out
pop
ret
outsb
cwtl
adc
or
sbb
outsb
inc
jl
mov
cmp
and
loop
adc
push
mov
and
xor
cmpl
jmp
adc
sub
sbb
clc
xchg
xchg
call
xlat
xchg
cmp
and
lock
lret
or
or
cmpsl
mov
adc
and
jl
mov
push
xchg
add
iret
cmpb
mov
xchg
mov
mov
dec
mov
rcr
inc
dec
dec
test
xor
shll
stos
jge
inc
aaa
xchg
push
xor
jmp
xchg
add
adc
mov
imul
mov
inc
data16
hlt
jge
jg,pt
popa
fs
jno
pop
fnstcw
inc
scas
sub
mov
aam
xchg
sub
rcrl
into
inc
dec
enter
cli
stc
insl
or
or
or
ss
shll
dec
xchg
sarb
int
xchg
sub
bound
into
sbb
insb
dec
push
movsl
stc
call
pop
push
xor
pop
jae
iret
stos
loop
test
dec
rcll
fs
xor
push
jmp
mov
pushf
les
dec
fldcw
mov
cmp
pop
push
xor
incl
sbb
mov
mov
jg
test
push
jne
je
pop
leave
fwait
or
sbb
sub
and
out
lret
mov
xchg
sbb
push
jmp
xor
dec
in
add
test
mov
movsl
cmp
mov
inc
mov
fstpt
imul
cmp
cmp
mov
scas
cmp
test
jmp
lods
jl
jg
out
enter
je
sahf
mov
lock
cmp
mov
adc
inc
div
cmpsb
xor
cmp
cld
mov
rcrl
dec
negl
adc
xchg
xchg
push
in
imul
xor
imul
cmp
js
xor
cwtl
daa
xchg
sbb
and
gs
xchg
adc
mov
rcrb
mov
mov
addr16
or
inc
cmp
cwtl
fmul
sub
mov
mov
adc
fsts
push
ret
jo
push
inc
xchg
push
stc
clc
dec
push
sub
test
push
addb
daa
jmp
dec
mov
out
bound
push
test
mov
jmp
inc
out
pop
scas
mov
jbe
xchg
mov
jnp
xchg
xor
dec
jne
jge
jno
xchg
lods
adc
sti
lock
stos
push
mov
arpl
lret
ret
in
imul
test
xor
jnp
fisttpl
sbb
pusha
push
xor
mov
bound
rcll
idiv
es
inc
jnp
mov
leave
shrl
in
jl
ret
insl
fxch
lea
repz
jl
cmp
or
lods
fnstenv
add
xchg
mov
out
xor
jecxz
xor
lret
mov
sub
jne
inc
int3
mov
clc
leave
orb
adcb
sub
push
lds
bound
mov
loop
push
pop
scas
inc
mov
add
arpl
fisubs
int3
or
sub
jno
mov
jp
dec
test
sub
cmp
or
sbb
and
adc
add
je
fs
mov
movsb
jp
dec
test
sub
cmp
or
sbb
and
adc
add
je
fs
mov
and
adc
test
sub
mov
xor
and
adc
add
je
fs
mov
movsb
jp
dec
test
sub
cmp
or
sbb
and
mov
and
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
cs
lret
mov
push
test
ja
jle
mov
repz
cmp
sub
jns
imul
push
test
add
adc
in
cmp
sub
jns
imul
fnstcw
das
stc
jmp
jecxz
lahf
sub
or
loopne
and
push
rolb
and
test
jbe
pop
jb
sar
lock
lock
push
js
negb
repnz
add
fisubrl
fxch
dec
sub
xchg
jecxz
insl
push
idivb
cmp
pop
and
xor
shrl
ja
sub
pusha
sub
dec
jo
int3
shll
fmull
lods
ds
push
and
enter
pop
mul
mov
leave
cs
mov
xchg
jae
push
mov
push
mov
inc
xchg
pop
leave
and
mov
sub
sarl
xchg
out
jae
mov
fmul
add
or
pop
ret
cmp
pop
mov
jns
jl
cltd
jae
inc
mov
ja
add
stos
jmp
sbb
int
ret
pop
lods
dec
cmpl
adc
cmp
mov
andb
xchg
pop
mov
lret
sub
add
daa
arpl
sti
in
add
cwtl
test
outsl
nop
pusha
fistl
jo
push
dec
shlb
dec
imulb
rolb
adc
inc
shll
adc
divw
leave
add
adc
jecxz
repz
cmp
sub
jns
imul
push
test
add
adc
jecxz
repz
cmp
sub
jns
imul
or
outsl
lods
adc
mov
pop
hlt
cld
decl
adc
mov
iret
rorb
cmc
push
cld
sbb
push
mov
stos
inc
mov
adc
pushf
pop
insl
shll
iret
addr16
push
lcall
arpl
stos
mov
dec
xchg
mov
jge
loop
pop
insb
inc
mov
lret
adc
repnz
sub
push
or
scas
push
cmp
jp
adc
sarl
push
ja
test
rolb
adc
sub
lock
rcl
xchg
daa
xchg
cmp
stos
sbbb
jbe
cmc
and
mov
xor
dec
pop
gs
mov
int
or
mov
pop
pop
bound
mov
das
add
notl
mov
into
lock
loope
nop
jo
adc
add
dec
sub
roll
xor
xorl
or
jo
test
adc
cmpb
dec
mov
mov
sub
xchg
stos
fidivl
fs
pop
jns
adc
adc
out
shrb
jmp
pop
inc
pop
xlat
mov
lods
cltd
mov
icebp
je
jnp
pushf
push
cmpsb
sbb
ror
dec
mov
adc
or
adc
fistpll
rcr
jmp
pop
enter
sahf
push
pop
xor
dec
mov
adcb
xorb
dec
or
fistl
icebp
js,pt
jns
pop
push
adc
adc
push
mov
lret
fwait
or
or
inc
and
out
cwtl
dec
pushw
cltd
mov
aad
aaa
enter
test
jnp
das
out
inc
cmp
lds
adc
or
and
jae
cmpsl
pop
xor
lds
ss
popa
test
movsb
sahf
lahf
stc
mov
into
cs
je
sub
xor
icebp
sub
mov
inc
push
and
iret
jge
or
and
dec
xor
pop
sbb
jns
lods
gs
inc
push
sub
das
out
sbb
cmp
sti
sti
test
insl
fsubs
jb
lret
shl
cmp
push
push
or
shrb
je
test
pop
cmc
out
push
or
jne
addr16
arpl
add
xchg
imul
sbb
in
pop
popf
sbb
jnp
imul
les
addr16
mov
enter
repz
dec
mov
mov
fs
cmc
stc
mov
loope
je
stc
xlat
mov
bound
cmp
outsb
push
xchg
pop
xor
into
call
xchg
mov
icebp
subb
hlt
and
shll
push
es
cmp
sbb
lret
inc
les
xor
xor
in
inc
addr16
fnstenv
mov
add
arpl
loope
xor
idivl
inc
inc
pop
loope
imul
jnp
and
sbb
bndldx
das
jl
xchg
and
sub
cs
cmovo
test
jg
popa
dec
dec
filds
cwtl
test
sbb
dec
jecxz
mov
pop
xchg
lods
ja
movsl
clc
mov
or
push
adc
add
jecxz
add
xchg
sub
out
loop
mov
inc
dec
or
out
int
in
outsb
mov
add
das
cwtl
imul
inc
jle
adcb
mov
push
mov
push
ds
dec
loop
nop
ljmp
aam
jo
mov
rolb
jbe
mov
add
test
push
aaa
sbb
shrb
cld
faddl
stc
insl
xlat
aaa
fidivrl
outsl
shrb
ljmp
and
rclb
add
pop
clc
into
push
xlat
sub
fildll
shll
out
rorb
mov
icebp
sbb
bound
or
scas
cmp
lahf
mov
inc
rcll
xor
mov
ffree
cmp
ljmp
mov
mov
mov
inc
jbe
mov
jge
cmp
dec
iret
icebp
icebp
push
ds
or
test
negl
sahf
repnz
add
dec
adc
ret
nop
bndstx
mov
adc
sbb
in
test
adc
jmp
mov
jmp
mov
shlb
dec
lret
vpmadcsswd
dec
adc
cmp
outsl
xor
jno
js
xchg
add
incb
adc
cmpsb
fidivl
mov
add
sbb
js
sbb
fstp
xchg
test
test
cmp
arpl
icebp
into
test
mov
subb
inc
or
adc
fisttpl
or
mov
sbb
repz
insb
test
sub
sub
nopl
jb
mov
pop
cwtl
or
add
jbe
inc
ret
je
popf
test
push
xchg
mov
pop
sub
mov
xchg
add
or
insb
inc
mov
das
cwtl
data16
mov
dec
xchg
mov
pop
rcrb
test
sub
add
cmc
dec
or
gs
pop
cmp
setb
addb
push
test
jae
adc
pusha
aas
mov
adc
pop
repz
out
iret
mov
push
data16
pop
stos
inc
mov
clc
xor
std
test
fimuls
dec
push
mov
aam
ds
fnstcw
mov
mov
pop
mov
movsl
push
orb
sti
push
idiv
in
fiadds
lds
jb
lods
loope
jl
aam
setns
iret
int3
ljmp
sub
xchg
pusha
into
mov
and
orb
xor
andb
dec
adc
xorb
bound
jp
cs
andl
dec
pusha
sti
hlt
xchg
bound
mov
cmpsl
sub
stos
jp
call
cmp
or
cmp
test
pop
jbe
cmp
mov
mov
pop
out
mov
ds
jmp
inc
mov
and
or
pushf
lds
shll
push
mov
push
xchg
gs
mov
xchg
or
stc
aam
test
adc
or
or
fcoml
push
ret
mov
dec
out
movsb
je
push
ja
stos
insb
sub
ja
cmp
mov
outsb
shrb
adc
lahf
mov
jle
lret
cmp
loopne
inc
add
repnz
mov
jmp
iret
dec
out
pop
mov
or
and
mov
dec
rol
jbe
aaa
imul
shll
sub
and
xchg
mov
loope
adc
sbb
dec
pop
sub
xor
push
popf
mov
cltd
jmp
jno
sbb
out
div
add
mov
imulb
xor
sub
pop
jno
mov
or
adc
mov
hlt
xor
jecxz
mov
cmpsl
mov
in
push
and
jmp
pop
lock
cmpsl
mov
cld
push
aas
lds
lock
cmp
in
push
gs
cmpb
test
pop
xorps
or
push
dec
sub
lds
repz
mov
pop
sbb
mov
mov
ret
mov
or
xor
cmp
shrl
sbbb
cli
dec
xchg
inc
inc
lods
idivl
mov
mov
mov
cmp
loop
and
or
pusha
sub
push
cmp
jb
xchg
add
test
fdivs
mov
pop
testb
sub
or
mov
jo
enter
mov
jecxz
sbb
repz
jmp
repz
clc
dec
enter
sub
pop
jo
mov
repnz
push
pop
int
mov
xor
cmpsb
pop
or
pop
aad
pop
imul
push
fldcw
sahf
xor
and
xorb
dec
ja
adc
push
sub
xchg
ret
aad
push
push
mov
test
movsb
sahf
mov
shlb
std
sahf
xlat
fildl
pop
imull
cmp
dec
xor
xor
pop
adc
adc
push
and
jae
out
mov
sbb
adc
push
gs
mov
pop
adc
sub
sahf
inc
mov
sahf
dec
jge
movsl
int3
je
add
in
js
aas
icebp
clc
push
mov
xchg
cmpsb
cli
sbb
xchg
data16
mov
jb
add
std
fwait
inc
sbb
push
in
pushf
inc
jecxz
mov
leave
lahf
add
imul
ss
jns
dec
jne
inc
std
es
jmp
inc
pop
shll
ja
or
or
in
and
lret
ljmp
repz
iret
fcomps
fisubrl
push
lods
fimull
mov
pop
cmp
clc
add
bound
dec
pop
out
in
nop
jne
fwait
sbb
paddusw
mov
and
sahf
popa
adc
push
pop
test
or
aad
in
jns
dec
push
stos
int3
imul
add
out
dec
lret
daa
cmpsl
cmp
push
add
sti
test
ret
shl
inc
push
sub
das
pop
es
sub
dec
lret
mov
jae
mov
outsb
shll
push
fmulp
leave
jo
push
rcrl
pop
mov
loop
mov
mov
ret
jbe
mov
mov
or
mov
mov
pop
push
clc
icebp
fs
cli
pop
loope
mov
jg
bndldx
add
mov
mov
inc
jmp
sbb
mov
inc
fbld
repz
xor
in
adc
inc
push
out
out
and
or
mov
xchg
xchg
stos
pop
mov
js
mov
push
adc
aaa
shrb
jns
mov
loope
push
stc
outsb
sbb
es
cwtl
jns
aam
push
inc
sbb
push
push
sbb
aam
out
test
mov
iret
test
or
outsb
add
mov
add
mov
fsubp
inc
inc
mov
in
insl
xor
lcall
jp
mov
cwtl
int3
test
lods
cmp
loop
xchg
stc
push
ljmp
push
cmpsb
fistpll
mov
or
clc
int
push
sbb
les
xchg
ret
mov
dec
add
mov
dec
xor
je
jecxz
pop
mov
sbb
int3
and
cli
xchg
mov
add
pusha
or
mov
imul
mov
sbb
or
xchg
adc
xor
jno
insl
xlat
mov
sahf
jl
mov
add
mov
sub
xchg
or
jecxz
ss
insl
stos
xchg
daa
inc
repz
sub
cli
aaa
pop
in
jae
sub
or
loop
mul
mov
lret
daa
insl
push
hlt
sub
cmp
and
jmp
xchg
add
pop
test
push
add
cmp
out
cmpsb
jnp
cmp
adc
into
gs
cmc
or
lock
jmp
pop
lods
lret
fisubs
sti
inc
mov
nop
push
int3
shrl
iret
rcll
xor
rolb
ret
fcmovnu
adc
cmp
sub
add
mov
imul
loope
fwait
and
addr16
pop
adc
lcall
mov
test
mov
or
jg
or
mov
lcall
fsubs
pop
rorl
or
sub
xchg
mov
lcall
jnp
stc
das
movsb
loope
xchg
call
jp
lcall
pop
arpl
stos
cs
mov
xlat
mov
stc
lock
xchg
add
and
mov
xchg
js
jne
sub
jge
repnz
jbe
ja
pop
cltd
push
dec
inc
repnz
mov
scas
test
out
repz
mov
jmp
add
mov
rorl
mov
arpl
mov
es
pop
scas
insb
ljmp
imull
add
push
repnz
in
xchg
ljmp
popa
cmp
mov
clc
into
jbe
movsl
pop
and
shl
mov
mov
insb
into
shlb
sub
xor
cmpb
in
ret
pop
fstps
push
subb
dec
cmp
mov
aas
mov
push
push
jae
inc
ret
aaa
xchg
pop
mov
int3
jmp
add
test
or
xor
and
jl
push
aaa
mov
sub
mov
loope
mov
gs
jecxz
mov
loopne
mov
ljmp
add
js
push
cmp
fldt
ds
es
in
insl
add
les
mov
cmp
dec
clc
dec
stos
pop
imul
leave
mov
mov
or
mov
popa
xchg
rcrb
cmp
in
push
xchg
or
sub
sti
mov
inc
cltd
adc
mov
xor
imull
push
movsb
mov
mov
sub
mov
mov
sbb
js
aaa
jne
orb
or
idivb
dec
sbb
mov
pop
es
or
cmp
insl
lcall
les
mov
stos
add
dec
lds
pop
roll
in
stos
rcrb
xlat
out
sti
fistpl
fcoml
pop
jb
outsl
ljmp
or
mov
scas
setnp
sub
mov
and
inc
jns
inc
dec
add
pop
push
push
pop
ss
pushf
imul
and
jmp
jle
lds
pop
aaa
insl
pop
std
or
adc
mov
push
int3
jne
and
pop
jno
pop
mov
xchg
ficoms
les
pop
rorb
ret
inc
dec
push
lods
in
xchg
xchg
pop
pop
xchg
jle
pop
bound
jp
sub
shrb
mov
xchg
jge
pop
inc
loopne
lcall
dec
pop
lret
xchg
stc
fdivrl
mov
add
sub
cwtl
xor
and
in
pop
scas
push
iret
hlt
cli
push
aam
sub
aaa
daa
cld
in
cmp
lret
out
pop
mov
pop
dec
lods
adc
insl
push
pop
pushf
dec
sbb
shrb
fbld
loopne
dec
sbb
test
hlt
hlt
pop
and
adc
shlb
test
daa
jne
pop
popf
sbb
fdivl
pushf
mov
jmp
std
rcr
add
or
ret
add
movsb
loop
cmp
lret
movsb
pop
ret
sbb
xchg
pop
inc
mov
div
in
int
test
xchg
cmpsb
mov
clc
xor
push
xor
pop
or
lods
loop
lret
ja
pop
sahf
mov
out
jmp
insb
add
fiaddl
and
clc
mov
cmp
inc
aam
or
in
ja
push
mov
out
cs
lods
icebp
mov
repnz
cmpsl
add
cmp
into
jecxz
hlt
call
cld
inc
les
repz
pop
push
sbb
call
cmp
repz
sub
mov
test
jp
or
mov
rolb
aaa
outsl
mov
lret
fs
outsb
lcall
data16
mov
lcall
inc
inc
push
mov
inc
xchg
lock
in
rcll
out
mov
rcr
pop
or
dec
sbbl
pop
f2xm1
fbstp
dec
cmp
adc
inc
inc
jmp
decb
xchg
jae
mov
lods
sbb
dec
test
pop
jg
push
xorl
test
insl
lds
cmpsb
roll
addr16
mov
xor
imul
push
xchg
inc
jbe
mov
push
pop
test
adcw
or
or
add
add
jmp
add
jo
cs
lret
and
shrb
into
mov
pushf
test
repz
pop
jno
cmp
jp
pop
loop
ja
mov
mov
shr
add
lds
inc
rcrl
outsb
push
xchg
lods
xchg
jg
xor
or
push
or
call
pop
inc
clc
mov
fsubs
xlat
rcl
cmp
out
fnstsw
stos
mov
cs
test
sub
pop
and
lock
in
loop
pusha
sub
jmp
xor
sub
sti
adc
mov
fdivr
loopne
and
xorb
mov
out
cmp
and
dec
rolb
pop
out
sub
lahf
sub
inc
dec
dec
lock
xlat
or
inc
or
test
add
xchg
ja
dec
into
lcall
push
repz
adc
test
cli
cwtl
rclb
adc
push
lea
sub
xor
test
xor
mov
mov
xchg
loopne
scas
or
fimull
cmc
jmp
sub
or
rolb
pop
test
dec
jo
repz
jae
xor
mov
mov
je
jmp
xlat
cmp
outsl
popf
int3
inc
jnp
outsb
sub
push
loope
in
popf
sahf
rorb
fsubrp
jb
cmpb
insl
loopne
push
lods
lahf
loopne
shr
fstps
movl
cmp
cmc
mov
mov
sub
add
xchg
jmp
sub
mov
mov
adc
mov
inc
dec
adc
das
mov
adc
and
cmpsl
sarl
ret
fldl
mov
mov
ret
push
mov
mov
bound
out
and
xor
enter
xor
icebp
enter
sub
imul
pop
out
ret
mov
pushl
or
iret
pop
adc
jge
adc
pop
dec
push
dec
imul
sbb
adc
cwtl
cmc
pop
mov
mov
cmp
lcall
shl
insl
insl
sti
jl
fwait
rclb
sti
or
outsl
inc
jmp
add
fwait
sahf
xlat
mov
hlt
adc
pusha
fxam
dec
sub
cmp
push
lcall
jmp
imul
sbb
mov
dec
push
mov
xchg
dec
push
dec
nop
fisttps
or
cli
add
ja
fdivl
fstpt
push
jae
jae
pushf
inc
xchg
adc
outsb
or
lods
mov
or
or
push
adc
repnz
mov
popa
mov
or
aaa
popw
mov
or
push
cmp
jb
das
test
pop
dec
add
in
pop
mov
push
leave
cmp
aaa
popa
or
cmp
sti
imul
sahf
movsl
xchg
jmp
repz
gs
in
add
mov
aad
push
leave
xchg
jae
clc
rclb
mov
stos
mov
das
jl
and
sbb
jnp
leave
int3
xchg
out
adc
out
jmp
scas
in
stc
lret
cmpsb
or
pusha
or
es
sub
shll
loopne
ficoms
out
adc
outsl
fistpll
add
jns
int3
sbb
lock
mov
pop
mov
iret
aad
mov
std
jbe
das
ret
mov
out
mov
sahf
add
les
cwtl
jo
mov
sub
or
iret
popf
dec
lods
dec
add
cmp
push
or
dec
add
sub
dec
repz
cmpsb
sub
mov
ror
ret
xor
mov
xor
repz
fwait
jge
cli
and
cmp
pop
mov
aas
rcrb
pop
lods
mov
aam
shll
inc
dec
push
cmpsb
sub
xor
pop
jo
sub
pusha
ror
enter
fmull
mov
dec
lods
inc
in
insl
aas
test
add
pushf
xor
sub
movsb
fucomp
mov
jnp
add
jns
popf
mov
jns
push
imul
xchg
rcll
ljmp
cmp
scas
outsl
fs
xchg
arpl
push
movsl
lret
push
pop
stc
pop
into
and
stc
icebp
cmc
test
jecxz
xchg
das
mov
arpl
out
popa
lcall
movsl
inc
call
or
xchg
push
inc
pusha
mov
or
dec
push
push
call
imull
xchg
enter
xor
das
popf
jge
push
add
jmp
xchg
pop
dec
leave
stc
jbe
mov
outsb
arpl
scas
ret
dec
scas
cwtl
pop
pop
adc
nop
int3
fcmovnbe
ret
notb
pop
ret
roll
popf
sbb
mov
and
adc
mov
add
push
in
mov
cltd
rcl
mov
sbb
sti
jns
mov
out
popf
xor
add
sahf
mov
cmp
lods
icebp
js
insb
xchg
push
jae
shl
sub
out
fsts
call
xchg
jnp
ds
mov
call
push
scas
jmp
jge
xchg
adc
and
jns
push
movsb
es
aaa
mov
xchg
call
pop
lods
aas
js
cmp
hlt
mov
mov
adc
ret
cli
insb
pop
add
movsb
xchg
mov
mov
xor
add
adc
jecxz
repz
cmp
sub
jns
imul
push
test
add
adc
jecxz
repz
cmp
sub
jns
imul
push
test
add
adc
out
repz
cmp
sub
jns
imul
jnp
and
and
add
xchg
jmp
imul
cmp
jnp
xor
jp
push
mov
ds
out
mov
sub
cli
loope
mov
sarl
dec
xor
push
sbb
inc
cmp
stos
mov
in
push
ljmp
shrl
sbb
jb
add
pop
and
mov
and
into
aad
mov
mov
cmp
jg
imul
test
pop
add
dec
jge
xchg
bound
shll
pop
mov
cmp
lds
xor
stos
pushf
adc
sub
xor
dec
dec
shll
push
or
mov
nop
outsb
adc
imul
mov
test
sbb
cmp
xor
add
mov
mov
pop
test
xor
mov
push
xor
test
add
lcall
xor
dec
sbbb
cmp
pop
mov
mov
and
shrl
arpl
push
sbb
inc
cmp
mov
jecxz
repz
sub
shll
cmp
syscall
sbb
inc
push
cmp
aad
mov
repz
decl
movsb
aad
and
xor
or
add
sub
scas
mov
les
orb
pop
add
push
adc
sbb
jno
inc
cmp
mov
cli
xchg
ljmp
shrl
add
push
sbb
inc
cmp
mov
cli
xchg
ljmp
shrl
pop
std
jns
dec
xchg
insl
leave
rcr
mov
test
dec
out
pusha
jg
or
sarl
mov
mov
jle
mov
pop
pop
filds
xor
iret
insl
jp
add
sbb
enter
push
pop
jge
mov
es
xor
js
mov
push
pop
mov
testl
fwait
push
loope
mov
andb
cmp
or
xor
cmp
push
daa
pop
movsb
and
mov
lods
xchg
ret
lahf
out
jne
sub
push
popa
sbb
in
nop/reserved
cmpsb
pop
and
clc
sub
xor
test
popa
push
in
mov
mov
lods
sub
fsts
fs
cmp
sbb
fcoms
mov
pop
lods
rcrb
in
push
cmp
lods
xor
scas
dec
push
pop
icebp
pop
int3
stos
push
push
std
xchg
popa
sahf
rol
scas
pop
mov
pop
addr16
pop
sar
outsl
mov
adc
xchg
fisttpl
shll
xchg
test
and
mov
mov
call
sub
js
adc
dec
pushf
xor
shrb
mov
repz
jge
ret
jno
sub
daa
cltd
mov
pop
les
or
pop
pop
dec
cmp
push
or
pop
mov
jecxz
jo
inc
test
mov
xchg
stc
pop
pop
dec
jle
adc
xor
rclb
aam
mov
xchg
sbb
push
bound
and
mov
cmp
xchg
inc
add
jbe
testb
aad
push
pop
pop
mov
aas
shl
add
pop
enter
stc
inc
rcrl
push
mov
mov
mov
movsl
getsec
repz
out
adc
dec
repnz
fistl
add
incb
stc
popa
xor
popa
jne
jns
add
aas
pop
movb
ljmp
ljmp
movsb
les
cld
mov
push
daa
add
inc
fiaddl
sti
div
jo
mov
inc
mov
push
insl
arpl
es
mov
dec
in
gs
push
lgs
ss
insb
push
out
or
xor
dec
divb
xchg
xchg
pop
dec
jae
or
hlt
adc
sahf
popf
inc
cmp
xchg
jle
push
jo
test
cmp
fwait
cmp
mov
mov
jne
out
cs
sti
pop
cli
test
bound
adc
xchg
sub
mov
mov
mov
or
scas
sub
nop
je
sub
push
add
push
mov
fimull
push
push
les
outsl
lods
jnp
test
dec
cltd
mov
pop
inc
push
dec
inc
iret
push
lret
call
jl
push
pushf
aas
push
mov
jg
mov
rorb
stc
mov
cmp
jle
fisttpl
imul
jecxz
jbe
fstpt
out
repnz
adc
scas
and
jbe
xor
and
in
fstpl
adc
mov
sub
push
jl
push
insb
jo
sub
movsb
icebp
mov
pop
popf
mov
imul
push
aaa
jle
lea
arpl
fdivs
dec
sub
mov
pop
repnz
fs
shl
and
fwait
mov
dec
add
stc
jnp
jb
xchg
outsb
int3
into
sti
mov
dec
addb
mov
mov
test
jecxz
sbb
sub
out
add
fstl
adc
insb
scas
stc
sub
sbbb
ja
push
cltd
push
dec
sbb
mov
jle
lds
mov
jge
pop
cld
sti
sub
insl
xor
je
loop
sub
int
jne
lods
rorl
mov
ret
cwtl
out
jno
inc
add
cmpsb
xchg
xchg
jge
outsl
icebp
testl
mov
sub
idiv
adc
repz
mov
jp
das
loope
inc
leave
jo
xor
movsb
stos
pop
pop
adc
bound
cmp
testl
loope
mov
add
add
cs
in
icebp
das
cmp
pop
mov
dec
test
idiv
jb
test
lds
mov
sub
aam
fmulp
pop
hlt
aaa
cmpl
cmc
jp
jp
js
mov
and
jns
inc
pop
clc
push
test
je
pop
repz
dec
adc
lea
shll
fimuls
or
clc
incl
movsb
xchg
shrb
ffree
aam
inc
stos
lahf
or
dec
std
add
andb
ret
movsb
sbb
test
xor
fbstp
push
xchg
sbb
jnp
aam
cs
and
int
inc
fists
pushf
mov
int
push
or
mov
xchg
jne
dec
rcrb
cmp
outsb
mov
xor
pop
pop
daa
pop
mov
push
jno
cmpsl
mov
idivb
test
dec
out
dec
xchg
inc
pop
and
mov
xor
into
cmp
aaa
mov
hlt
inc
xchg
jne
and
sbb
cmp
popa
pop
pop
xchg
or
loopne
nop
lock
jns
or
scas
sti
loopne
jl
jle
ss
fwait
sbb
ret
mov
fmuls
mov
mov
shlb
shl
xchg
lods
sbb
add
add
andl
cwtl
in
dec
jne
jnp
jno
inc
loopne
mov
mov
jl
adc
ficompl
add
push
ja
pop
add
pop
in
add
arpl
push
push
push
daa
and
mov
inc
mov
test
or
add
inc
stos
sti
arpl
cs
adc
xor
or
dec
and
rorl
dec
push
push
xor
mov
lahf
cmpsl
imul
sub
adc
out
push
inc
loopne
pop
data16
or
nop
push
cld
mov
pop
outsb
mov
nop
aad
shrb
push
or
adc
xchg
loope
leave
and
ret
stos
aas
pop
out
in
sbb
add
aas
insb
mov
imulb
pop
enter
push
add
and
xchg
jne
xlat
shr
shrl
sub
test
pop
jae
mov
jge
add
das
mov
iret
enter
das
inc
inc
mov
or
pop
jle
scas
call
hlt
xchg
je
aad
int
push
push
cld
pop
mov
inc
lock
or
aaa
mov
nop
idivb
mov
pop
jmp
push
jmp
push
mov
movsl
fstl
and
push
shlb
lea
cmpsl
bnd
pop
pop
ja
sbb
addr16
dec
idivl
mov
je
shlb
jle
mov
jbe
mov
subl
je
push
je
dec
and
or
push
add
popa
fcmovb
cld
add
lahf
cmp
std
jnp
arpl
mov
xor
lret
das
sbb
lahf
mov
jmp
outsl
aam
cli
es
movsl
or
xchg
inc
sbbb
mov
dec
jge
xchg
pop
adc
aam
mov
mov
sub
test
and
cmp
jmp
fnstcw
shll
daa
jmp
test
jne
push
mov
jg
sbb
add
sub
adc
insl
mov
rorl
mov
rorb
jnp
push
cmc
fists
bound
sbb
test
in
mov
rorb
xor
jbe
push
mov
jle
push
pop
add
rclb
jbe
scas
pop
xor
jmp
lock
xchg
mov
xlat
inc
call
outsl
xbegin
jne
mov
pop
add
call
dec
xchg
bound
aaa
cmp
jno
adc
adc
sub
fbld
dec
push
loope
jecxz
mov
dec
adc
xlat
sbb
out
adc
push
inc
enter
jne
cmp
add
fcomp
fadd
adc
leave
xchg
cld
inc
lret
xchg
jecxz
cltd
and
test
and
cld
sarl
fsubl
dec
pop
push
add
dec
and
add
jg
mov
or
in
pop
fidivrl
test
xorl
mov
scas
sbbl
mov
pop
lods
jle
sub
les
sbb
or
popf
icebp
int3
inc
ret
xchg
jne
cmp
movsl
inc
mov
push
int
aas
sub
stos
aad
stos
or
ret
leave
xchg
jns
cltd
lret
pop
fmull
jns
iret
inc
mov
hlt
sti
sbb
ljmp
mov
sti
cmp
out
inc
cmpsl
scas
jg
fmuls
out
push
scas
jne
es
push
pop
push
jle
scas
sahf
ds
lahf
pop
pop
xor
or
notb
inc
clc
inc
jmp
sub
cli
sbb
cmpsb
not
jp
xchg
jb
sbb
in
subb
mov
add
in
mov
and
mov
fbstp
lock
and
cld
fisubs
insb
sub
popa
lahf
xchg
ja
jae
das
aas
cmc
jno
mov
dec
xor
and
xor
inc
and
ret
add
sub
mov
scas
std
or
movsl
lret
stc
in
or
mov
outsl
mov
push
xchg
out
insb
pusha
cmc
mov
jmp
addr16
stc
mov
lds
pop
jae
js
dec
xor
in
out
cld
inc
sbb
cmpsb
cmp
ljmp
ds
in
xchg
outsb
shll
aaa
push
jbe
adc
xor
out
mov
lret
mov
rclb
and
adc
in
mov
cltd
ret
push
jp
std
adc
fyl2xp1
adc
mov
mov
mov
jo
cmp
mov
inc
jnp
xor
and
ret
repnz
insb
pop
add
push
into
jl
mov
adcw
xor
cmp
jmp
dec
out
push
push
pop
rcrl
outsl
es
push
lcall
xor
push
ret
mov
clc
sbb
rcll
sahf
jno
hlt
mov
push
add
mov
pop
fwait
in
dec
sbb
ds
std
test
fucomip
inc
pop
loop
das
cmpsb
lcall
push
mov
inc
jmp
inc
rcrl
push
movsl
jg
sti
xlat
cli
das
jo
jno
popa
adc
hlt
push
cmp
popa
mov
sub
shlb
jbe
mov
push
cli
mov
inc
cld
cld
or
xchg
leave
xchg
in
mov
xor
add
jne
ljmp
loopne
leave
test
fwait
sub
xor
and
fisttpl
call
mov
mov
sbb
sqrtps
test
aaa
xor
ficomps
mov
add
out
and
popa
mov
icebp
mov
inc
dec
dec
adc
dec
outsb
orb
mov
ljmp
jne
and
arpl
jmp
push
mov
mov
stc
xchg
call
cmp
pusha
add
int3
sahf
push
pop
xchg
pop
sarl
stc
cs
out
push
adc
lret
sub
imul
int3
add
sti
push
ret
imul
imul
insb
inc
lret
jnp
add
insl
xor
xchg
lods
push
roll
je
popa
or
out
ror
xchg
divb
aas
aad
xchg
cmp
in
adc
in
dec
jne
jo
int3
out
xor
push
not
loop
mov
out
rcl
push
out
mov
movb
out
ja
pop
jae
popa
pushl
adc
add
sub
lahf
daa
ja
sub
sbb
scas
insb
or
lahf
scas
adc
jl
inc
mov
mov
lds
daa
and
int3
ret
push
popf
fs
std
popf
xchg
call
cwtl
lods
and
mov
jbe
mov
shlb
hlt
and
test
push
or
mov
pusha
pop
cli
idivl
dec
add
std
ds
call
push
and
mov
jo
push
fwait
add
or
shlb
mov
cmp
sbb
jge
sub
dec
jp
mov
jne
xchg
into
push
cmc
add
aaa
xchg
inc
inc
inc
data16
mov
sbb
ljmp
sarb
into
mov
jl
lods
xlat
or
repnz
mov
jnp
xchg
jg
repnz
shll
xor
xchg
jg
pop
pop
roll
mov
shrl
inc
adc
mov
das
push
fisubl
jp
bound
or
fimuls
je
inc
adc
xor
cmp
lcall
std
cli
popf
jns
outsb
xchg
push
stos
adc
popa
mov
push
js
call
pop
mov
jge
orl
nop
and
notl
mov
pop
push
or
in
mov
rcrl
dec
adcl
sbb
faddl
cmp
push
ds
enter
add
clc
in
cmp
and
mov
inc
in
xchg
inc
xor
and
or
icebp
sti
or
iret
mov
xchg
mov
or
adc
popf
stc
cmpsb
out
inc
scas
dec
rorl
jmp
lds
cmp
repnz
xchg
fsubr
out
mov
mov
mov
mov
jne
lret
inc
jbe
in
pop
insl
aam
jno
fldcw
hlt
repnz
in
and
int3
jmp
push
fbstp
pop
dec
mov
hlt
sbb
mov
mov
jne
fcmovnbe
cs
je
ucomiss
adc
cmc
es
push
sbb
mov
add
ret
cmpsb
adc
jmp
aas
add
popa
cmp
sbb
stos
mov
loop
mov
fwait
add
shr
and
inc
xor
gs
call
sub
and
mov
mov
or
in
jmp
inc
das
ja
pop
xor
out
sbb
imul
lock
jecxz
cmp
sti
ficompl
outsb
xor
jle
pop
nop
imul
jl
sub
jp
add
out
xor
popa
cltd
jmp
xor
out
dec
xchg
mov
movsb
lret
je
in
insl
loopne
js
gs
jbe
imul
or
popf
push
cmp
scas
or
cmp
inc
mov
cld
scas
dec
cmp
push
xorl
dec
mov
out
fldl
movsb
push
test
jg
addr16
mov
jmp
and
sbb
sbbl
movsb
lods
cmp
fwait
jnp
fdivrl
bound
frstor
jmp
int3
std
les
inc
stos
cltd
ja
xor
mov
orl
mov
ret
and
xor
mov
pop
sbb
sarb
cmpsl
repnz
dec
mov
popa
mov
mov
sbb
xchg
gs
mov
hlt
nop
inc
ss
in
cmp
xor
rorl
outsb
push
lea
sub
aad
testb
xchg
lea
scas
pop
inc
mov
and
xchg
shll
adc
add
pop
cmp
and
xor
xor
loopne
dec
jge
and
sub
mov
lea
xor
sti
cmc
push
push
scas
aaa
fsub
test
adc
divl
test
or
into
mov
jge
outsl
ljmp
lods
jo
sahf
hlt
mov
or
out
and
or
addr16
adc
inc
mov
in
mov
or
mov
push
fistps
js
pop
in
xchg
pop
mov
xor
jne
adc
cwtl
loopne
jle
and
movsb
lret
insl
out
pop
stos
outsb
add
xchg
shll
loope
mov
test
call
jnp
add
cltd
xchg
or
xor
xchg
pop
pop
sbb
xlat
stos
sbb
jg
adc
stos
clc
or
loope
ds
jbe
push
cmp
pusha
out
add
push
les
cltd
pushf
mov
aam
inc
mov
adc
cmp
jo
aam
add
stos
rolb
jmp
xchg
push
out
imul
rcr
sub
mov
shll
mov
arpl
add
lods
iret
test
ss
cli
mov
push
mov
not
stc
pop
sub
push
xor
cmp
jne
and
push
clc
int
testl
stc
mov
cmpsl
mov
test
dec
cmp
or
mov
aas
fnstsw
iret
push
bound
push
mov
cmp
mov
xchg
leave
mov
outsl
and
and
xchg
push
mov
push
mov
or
push
loop
sbb
loopne
leave
adcb
and
lds
mov
push
jecxz
in
sar
pushf
add
fsubs
nop
dec
sarb
dec
sub
sbb
inc
cld
cmp
lcall
push
inc
aam
ret
stos
clc
imul
pop
xlat
fmul
out
test
push
xor
outsb
xor
jmp
lcall
sti
pop
mov
repnz
fdiv
daa
in
cs
adc
je
inc
pusha
outsl
leave
xlat
mov
mov
mov
out
add
scas
rclb
xor
add
lret
pop
js
outsb
loop
lods
xor
xor
hlt
ds
cs
jg
pop
and
mov
mov
movb
ljmp
jecxz
popf
sbb
mov
pop
add
leave
mov
xorb
pop
inc
lcall
aad
int3
fwait
jg
jno
sbb
xchg
das
push
popf
test
and
lods
outsb
nop
dec
negb
pop
aas
frstor
jl
in
fadds
pop
bound
add
mov
cmp
xchg
ret
inc
inc
pop
int3
dec
lock
cmp
lahf
mov
xor
je
dec
insl
push
cwtl
das
push
out
loop
adc
in
jnp
push
in
pop
shl
push
pushf
sbb
xchg
xor
sub
jp
mov
jg
aam
lahf
test
xor
cmp
and
loope
inc
jecxz
movsl
aaa
sub
xlat
cmp
xor
mov
mov
cmp
inc
test
in
sahf
inc
outsb
cmp
pop
add
inc
in
push
push
hlt
addr16
sbb
in
in
loop
push
mov
out
sub
dec
xorl
and
xor
push
jb
lahf
xlat
gs
fidivrl
imul
cmp
test
clc
addr16
xchg
mov
lret
or
sub
pusha
pushf
push
cmp
jle
sbb
out
leave
mov
cmc
jle
pop
adc
sub
add
cltd
sbb
mov
dec
mov
cld
xor
fcomps
gs
cmp
inc
out
mov
fsincos
fiadds
inc
push
ret
daa
das
aaa
test
pop
or
fcoms
dec
xor
jl
mov
adc
ficompl
xchg
xchg
sbb
lret
xchg
and
jae
pop
add
mov
push
imul
fwait
into
subl
dec
insb
popa
or
push
cmpsl
cmpsb
pop
xchg
mov
addr16
push
in
inc
scas
push
clc
pop
pop
or
add
fldenv
fucom
xor
add
es
les
mov
lods
xchg
mov
stos
cmp
lds
adc
loope
jle
mov
lret
mov
mov
push
xchg
sub
pop
insl
adc
push
int
and
sti
hlt
cmpsl
std
mov
dec
dec
mov
jg
jb
cmpsb
mov
insl
insl
movsb
xchg
adc
out
fsts
das
pop
aas
jo
daa
bound
shl
mov
clc
dec
mov
ljmp
pop
push
shr
cmp
nop
sub
rolb
ds
inc
mov
add
sbbb
aad
inc
fldenv
cmp
push
scas
ret
cmp
js
adc
mov
les
pop
adc
push
fstl
cmp
insl
and
sarb
add
xor
adc
jae
jne
repz
shll
dec
dec
add
jge
mov
and
sarb
sbb
pop
jns
inc
mov
cli
fucom
loop
push
aam
lret
push
inc
into
add
imul
jl
xchg
sub
je
faddp
dec
add
popf
ret
mov
push
mov
dec
pop
cwtl
cmp
aam
fstl
dec
lods
call
subl
sub
adc
jmp
xor
mov
rcrb
xor
jae
jb
jp,pn
push
sub
jne
push
faddp
mov
jbe
xchg
mov
stos
insb
mov
das
cmp
inc
in
insl
pushf
fwait
and
jno
cmp
aad
std
divb
pop
adc
mov
sub
mov
mov
nop
dec
js
aas
shlb
cs
in
fst
adc
inc
add
dec
mov
mov
add
xor
pop
mov
int
lahf
and
xlat
ret
lods
lock
loope
adc
mov
mov
jp
push
sbb
inc
cmp
mov
cli
xchg
ljmp
shrl
add
push
sbb
inc
cmp
mov
cli
xchg
ljmp
shrl
add
push
sbb
inc
cmp
mov
cli
xchg
out
loope
cmc
mov
mov
add
push
sbb
sarl
ljmp
xchg
popf
xchg
adc
lds
aad
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
inc
add
pusha
fdivl
push
jno
int
fcoms
sarb
pop
lock
cmpb
mov
cld
push
in
pusha
fdivl
add
clc
sarb
pop
lock
adcb
mov
outsb
push
in
pusha
je
into
add
xor
add
aas
call
push
push
adcb
add
stos
or
add
sub
andb
ja
std
xchg
xchg
jo
mov
into
ss
cmp
xor
pop
jg
test
mov
std
fucomi
test
clc
loop
out
add
icebp
mov
shll
sbb
cmp
cld
push
int3
icebp
je
mov
pop
jae
add
insl
imul
shll
jmp
dec
dec
mov
xchg
xor
fwait
jns
or
or
push
idiv
sti
shrl
mov
add
mov
xchg
shll
cld
push
sbb
pop
jo
add
or
cli
shrb
adcb
aam
sbb
bound
scas
cmp
add
enter
cmc
jno
cmpl
pushf
and
in
in
inc
mov
adc
lahf
and
xor
movsl
sbb
cmp
insb
les
jge
sub
or
lods
and
insb
loopne
lock
cmpb
mov
cld
push
in
pusha
fdivl
add
mov
jl
insb
loopne
lock
cmpb
mov
cld
cmc
cmp
jg
loopne
and
adc
lds
das
rolb
sub
cmc
inc
mov
jnp,pn
outsb
aam
add
jmp
out
in
mov
xor
lea
popa
push
sub
xchg
adc
rcll
ljmp
dec
inc
lds
pusha
bnd
je
cmpsb
push
hlt
push
mov
mov
fldt
mov
mov
mov
cmpsl
mov
sbb
xchg
cltd
mov
cmp
push
ret
fcomi
loopne
mov
or
jno
loope
mov
sti
jno
and
mov
jno
xchg
dec
call
addr16
push
sub
cmp
out
scas
mov
pusha
bound
or
pop
stos
sub
insb
add
int
or
lock
adc
cmpsl
ss
xor
ret
jmp
xor
push
scas
and
mov
xchg
adc
xchg
inc
jbe
push
sbbl
or
or
mov
or
push
sub
push
test
push
pop
mov
fisttpl
dec
popf
je
in
adc
dec
andnps
mov
jl
imul
loopne
add
aaa
test
stos
cmp
mov
inc
pop
adc
cmp
lret
div
enter
pop
cmpsb
lret
daa
sbb
xchg
sti
push
adc
or
dec
sub
lret
inc
out
stos
rol
fidivs
in
cmc
xchg
pop
gs
push
mov
push
fsubrp
sbb
mov
mov
lret
xor
mov
push
nop
cmp
mov
stos
rclb
xchg
bound
cmc
inc
mov
jae
lcall
pop
mov
stos
jg
dec
inc
mov
leave
pop
push
jae
adc
in
int
jno
sbb
and
int3
push
movsl
or
lret
call
cltd
mov
sbbb
mov
daa
ljmp
jne
ror
xchg
mov
into
jg
xchg
sti
insl
lret
push
fidivl
add
jl
jecxz
test
adc
rcll
mov
std
inc
rorb
xchg
sub
das
mov
sti
lea
movsl
loope
jnp
movsb
dec
mov
dec
dec
sahf
jae
mov
dec
pop
daa
fcomps
outsl
fnsave
rolb
out
sahf
cmp
push
mov
fbld
fadds
or
in
mov
in
insl
lea
add
outsb
in
mov
iret
mov
cmpsb
dec
or
cli
xchg
popl
xchg
or
ss
jbe
cmp
movsl
loopne
test
rclb
in
fwait
pop
nop
pusha
fildll
out
fiadds
mov
into
loop
lcall
cmp
sbb
push
jg
cmp
adc
xlat
out
jmp
leave
test
jl
or
sbb
adc
call
daa
imul
lret
movsl
mov
pop
adc
sub
imul
pop
nop
ss
and
jb
mov
jle
inc
sbbl
repnz
ret
repz
sub
push
aam
add
push
stos
mov
add
fisttpl
push
lock
add
mov
mov
cli
hlt
sahf
xlat
jecxz
out
adc
ljmp
pminub
mov
pop
nop
xor
bound
dec
ret
insb
outsl
ret
hlt
loope
fildl
jle
dec
cmp
cli
leave
xchg
cmp
cmp
cmp
jmp
sbb
mov
pop
imul
inc
mov
sub
push
sbb
xchg
ja
out
aas
test
sbb
push
or
mov
shll
nop
fstl
sbb
mov
inc
or
shrb
jl
xchg
xor
add
cmp
xchg
push
aas
lods
xlat
std
push
dec
lock
inc
lcall
rolb
imul
scas
jb
jmp
andl
add
xchg
out
mov
aaa
js
xlat
push
push
fxch
inc
sbb
lret
aam
mov
jecxz
int3
mov
nop
push
dec
movsb
andl
and
mov
jp
and
mov
mov
stos
lret
sub
testb
imull
sub
cmp
jmp
and
cltd
mov
int
mov
jo
inc
fs
int3
pop
mov
push
sbb
ret
mov
xchg
mov
push
sbb
xor
ss
cmp
jae
mov
mov
insl
arpl
fidivrs
cmp
inc
rcrl
out
cmp
sahf
clc
shlb
sbb
mov
xchg
cmc
jnp
sbb
dec
lds
xorb
pop
mov
sub
add
into
mov
push
xchg
mov
jb
inc
daa
jecxz
addr16
inc
std
sbb
loopne
in
mov
xchg
sub
jo
xchg
stc
pop
mov
cmp
xchg
ljmp
jnp
jge
add
insb
ret
sub
jl
jl
adc
push
outsb
inc
mov
mov
lahf
pop
movsb
mov
ficoms
dec
inc
dec
aas
out
xor
ljmp
adc
xorl
movsb
mov
icebp
inc
pushf
mov
fldz
inc
add
dec
xchg
mov
loopne
mov
inc
cmp
mov
iret
push
push
in
cmp
lret
jmp
dec
adc
ljmp
in
xor
fs
fsubrl
fldt
xlat
xchg
scas
jecxz
jecxz
outsb
loop
ret
std
adc
adc
sbb
int
sarl
cmp
push
dec
xchg
push
jmp
xorl
test
out
in
popf
data16
imul
arpl
push
and
fcomps
cmp
mov
test
leave
rorb
mov
insb
pusha
cltd
not
sub
xchg
sbb
mov
jno
or
sub
xor
sbb
popf
pushl
ret
leave
and
popa
fidivl
mov
cmp
fwait
push
cmp
adc
add
mov
popf
adc
loopne
ret
je
push
fwait
xor
lret
shrb
inc
fistl
mov
or
pop
test
out
cmc
in
lock
sub
cltd
sarb
bound
pop
les
popa
sbb
dec
mov
out
jl
dec
xchg
or
mov
in
pop
pop
push
adc
xchg
and
sub
movsb
push
push
cmp
xorb
jno
les
cs
les
inc
sub
arpl
sbb
mov
mov
xor
adc
dec
icebp
sbb
clc
push
xor
rcrl
je
stos
stos
mov
scas
sbb
imul
imull
push
inc
sti
ja
mov
lods
mov
fcomip
inc
cmp
cltd
out
int
outsl
repz
in
sahf
lahf
shrb
add
push
mov
sub
in
and
out
stos
pop
pop
cs
inc
xchg
sarb
and
lret
cmp
jae
inc
lret
jmp
xor
mov
inc
or
insl
xor
pop
mov
lret
dec
orl
mov
int3
sahf
xor
and
jno
dec
add
mov
lds
or
mov
mov
inc
mov
or
jae
add
dec
aad
scas
pop
std
mov
pop
dec
sub
sbb
sbb
add
ljmp
or
push
fwait
mov
mov
rolb
dec
test
jg
mov
inc
and
aad
sub
mov
mov
jecxz
aaa
sbbb
cmp
enter
pop
push
jge
jle
jne
rep
in
and
test
scas
mov
cmpsl
ret
cmpsl
jmp
jno
inc
sbb
dec
out
inc
sti
arpl
sbb
sti
adc
push
sbb
out
jnp
sbb
dec
in
jl
imul
add
xor
inc
ljmp
pop
cmp
addr16
add
or
and
ret
rcrl
int
test
fdivl
adc
je
repz
inc
sarb
enter
stos
lret
and
pop
and
mov
mov
adc
cmp
xor
lahf
jo
aas
lods
adc
idivb
push
pop
add
add
mov
mov
cld
addb
mov
ret
push
cmp
js
mov
sub
pushf
inc
pop
and
int
stos
adc
sbbl
mov
or
cwtl
push
jno
mov
test
dec
rol
mov
xor
jge
cmp
notb
jns
or
jmp
mov
enter
pop
ljmp
test
les
push
ds
faddl
mov
pop
mov
bound
out
pop
mov
add
inc
fimuls
or
stc
loopne
rcrb
repnz
or
scas
inc
pop
add
push
out
das
dec
push
inc
jg
lahf
sbb
mov
pop
sub
in
xor
fistl
jle
mov
fucom
jns
fidivrs
inc
data16
mov
loope
mov
sahf
mov
xchg
pop
inc
push
shrb
xorl
fdivl
stos
and
mov
dec
dec
xchg
lcall
clc
movsb
aam
add
rcr
arpl
mov
inc
pop
leave
jp
push
xor
push
inc
jae
shrl
or
jae
push
inc
ret
xor
lods
movsl
aaa
in
aad
mov
cmpsb
mov
cs
sbb
ss
mov
lock
cltd
sti
vpcmov
shrb
lret
lahf
daa
dec
mov
mov
xchg
ret
adc
fcomp
add
sti
cmpsl
sub
stc
jo
clc
sub
fistpl
addb
jmp
aaa
mov
dec
into
jg
aam
aas
inc
dec
ljmp
cltd
or
cmp
inc
je
jbe
mov
lret
out
les
shll
jge
and
jbe
adc
pop
mov
cmpsl
ds
stos
cmc
in
sub
popa
sub
or
mov
mov
jb
xchg
call
xor
push
fstpl
pop
sub
lock
inc
lret
lahf
sub
leave
add
push
xor
into
testb
adc
insl
rclb
test
xor
pop
xchg
xorb
or
fnsave
inc
adc
sbbb
jp
shr
push
xor
inc
sub
cmp
dec
push
test
or
ja
pop
lret
mov
call
xchg
mov
out
std
and
les
dec
pop
out
inc
xchg
mov
dec
xchg
inc
sub
mov
dec
xchg
in
jbe
and
shll
sub
adc
in
rcrb
cmp
and
fists
dec
and
iret
inc
sarl
fs
xchg
lret
nop
mov
clc
repnz
je
lods
pop
mov
xchg
jo
xchg
adc
rcr
cmp
fcmovbe
xor
xchg
int
add
ror
push
subb
lret
popf
jns
test
sahf
pushf
js
popf
cmp
test
mov
mov
pop
test
inc
mov
dec
sub
test
data16
stos
mov
cmpsb
insb
inc
sbb
mov
movd
sub
sbb
jno
add
or
pop
inc
jg
mov
cwtl
lahf
call
insl
cmp
and
mov
mov
mov
push
loop
push
les
fwait
je
shr
mov
dec
xchg
xor
outsb
pop
adc
jno
imulb
sbb
and
pop
movsl
call
pop
mov
stc
or
mov
mov
shrl
hlt
cmpsl
aaa
sbb
dec
cmpsl
push
xor
cmp
adc
xor
lret
inc
xor
int
movsb
fsubl
adc
sbb
outsl
xor
imulb
psubw
add
inc
shll
push
outsb
loope
sbb
push
test
lcall
sub
or
in
lock
scas
popf
jno
push
fidivrs
insb
ret
punpckhwd
pop
adc
loopne
mov
lret
pop
in
dec
xchg
and
xor
mov
xor
leave
shlb
cwtl
sbb
add
jmp
outsb
cmp
inc
inc
imulb
push
sbb
lcall
xchg
jecxz
add
out
fdiv
das
inc
stc
inc
cmp
adcb
ja
pop
or
xor
sub
push
mov
xor
dec
clc
adc
outsl
nop
outsb
out
mov
daa
or
adc
mov
addb
repz
lods
std
dec
lea
inc
adc
pushf
sbb
jae
cli
adc
add
xchg
xchg
faddl
test
xor
dec
or
test
nop
adc
xchg
pushl
xchg
lods
xor
fildll
push
in
ror
xchg
arpl
div
roll
into
fbstp
movsb
adc
ret
aaa
shll
pusha
into
rol
or
pop
decl
cmpl
out
mov
fwait
sbb
jae
gs
push
into
sti
jmp
gs
and
stos
call
stos
add
bound
mov
pop
push
inc
jne
movsb
push
sub
mov
jle
mov
or
in
sub
cmc
lea
nop
pop
in
cmp
or
add
xchg
lret
add
add
notb
adc
into
xchg
mov
mov
div
arpl
push
adc
or
pop
daa
pop
mov
dec
or
jbe
das
mov
movsb
xor
pop
out
std
mov
mov
and
jbe
pop
add
or
insl
scas
or
xor
lea
shrb
in
fstps
dec
add
leave
sarb
lods
pop
xchg
lock
fwait
cmp
inc
or
xchg
jo
mov
xor
icebp
jae
das
xchg
xor
clc
add
jo
mov
adc
or
mov
lret
xchg
lret
push
inc
add
test
insb
inc
sub
lea
scas
dec
cmpsb
adc
sub
je
rorl
movsl
dec
jl
jne
mov
xchg
add
arpl
push
fidivs
jne
inc
sbb
rol
incb
pop
sub
out
out
jae
dec
jmp
sarb
int
cwtl
push
sbb
pop
lods
pop
fdivs
test
jbe
push
cmp
std
or
sahf
movsl
adcl
aam
in
push
fcmovb
lret
lods
repnz
mov
adc
shlb
sub
mov
loop
pop
xchg
xor
and
jle
jp
xor
sbb
xchg
mov
pop
pushf
mov
pop
adc
or
pop
imul
push
outsb
fsts
xorb
cltd
daa
add
rorb
add
cmp
int
bound
rep
pushf
test
xor
mov
jg
popf
js
ret
sbb
inc
xor
jge
cs
push
mov
sbb
sub
ss
loope
call
inc
cmp
mov
out
in
ss
test
sahf
scas
clc
or
mov
jecxz
pop
sbb
xchg
stc
mov
insb
and
loope
imull
fmull
dec
lds
popf
mov
fisubs
je
mov
and
sbb
scas
jg
pop
fisubs
insl
movsl
sub
lret
lds
push
insb
xchg
mov
out
and
lret
imul
iret
stc
and
add
jg
mov
push
sbb
add
sbb
jg
inc
faddl
out
jnp
or
popl
or
cs
add
lods
ret
jns
pop
jle
dec
cld
inc
jb
ret
inc
cmp
mov
sysexit
lcall
jae
adc
je
imul
lds
cmpb
imul
and
fistl
jle
adc
xor
scas
jmp
cmc
pop
xchg
xchg
xor
fstpt
inc
pop
cmp
aaa
fwait
push
movsb
out
pop
outsb
pop
movsb
out
daa
xor
lods
ret
mov
xchg
das
xchg
rorl
dec
pop
adc
test
out
xlat
and
push
cld
sbb
pop
out
mov
pop
daa
jae
lds
mov
ds
sahf
pop
and
mov
dec
and
insl
pusha
icebp
out
adc
pop
imul
push
sti
pop
into
mov
in
pop
push
leave
sbb
loopne
adc
cmp
cltd
pop
cmpsl
xlat
push
pop
movsb
aas
cmp
lea
fisubl
pop
push
and
push
insl
pop
paddd
out
aad
mov
out
ret
shl
adc
icebp
mov
lods
rcll
repz
loop
shlb
push
jge
push
sub
out
xchg
lea
movb
dec
pushf
and
ret
into
adc
cmp
adc
lea
mov
mov
cli
imul
push
push
test
adc
and
xchg
out
lret
pop
pop
repz
rcrb
or
adc
xchg
and
pop
pusha
sbb
mov
arpl
push
andl
push
xchg
sahf
fsub
mov
insb
enter
xchg
or
sar
imul
pop
fstl
fwait
stc
std
adcl
and
mov
mov
mov
adc
sub
pop
push
push
sbb
scas
mov
lds
jg
stos
test
movsl
stc
push
into
test
or
fisubs
es
imul
adc
add
movsb
and
push
loop
int
xor
pop
mov
sbb
icebp
test
mov
inc
push
aaa
pop
cmc
add
pushf
scas
push
dec
rcrl
sbb
data16
out
outsl
stc
and
test
ds
sub
xlat
and
bound
inc
out
stc
dec
dec
mov
jmp
mov
leave
mov
and
or
movsb
jle
mov
out
push
xor
xchg
loop
rorb
or
xor
decb
cmp
xor
xchg
mov
cs
popa
mov
shrb
mov
inc
xchg
xchg
daa
jb
mov
lds
jbe
cwtl
stos
hlt
inc
loope
or
push
push
sbb
in
pop
loop
popf
cwtl
pop
test
sbb
push
imul
arpl
hlt
ret
stc
imul
bound
movsb
sub
mov
dec
pop
dec
sahf
pop
push
fldz
das
out
pop
jmp
fisttps
cs
jno
addr16
or
ss
push
sti
fs
stos
mulb
repz
mov
nop
or
cld
sbb
xchg
ficompl
fisubs
or
pop
ljmp
pop
adc
xchg
add
push
mov
leave
xchg
lret
xchg
cmp
js
add
scas
mov
xor
mov
adc
inc
pushf
nop
fucompp
insl
clc
data16
pop
ret
andl
leave
xor
jge
ljmp
dec
out
add
sbb
mov
cmp
mov
test
xchg
out
add
push
out
lahf
and
pop
int
jo
into
outsl
les
icebp
incl
sub
call
sub
cwtl
sub
mov
push
int
lods
jns
inc
and
inc
sub
imul
ret
and
xchg
jae
adc
push
inc
dec
jl
pop
orb
enter
lahf
cmpsl
inc
call
xor
enter
push
inc
xor
inc
jecxz
or
inc
fstps
xor
add
and
sub
rorl
sub
add
cmpsb
xchg
and
mov
or
sbb
fsub
sbb
jno
mov
xchg
ljmp
clc
sbb
fs
jo
push
leave
cwtl
andb
jmp
nop
lds
add
mov
jge
sahf
cmc
mov
leave
test
popf
jmp
jge
cmp
in
mov
outsl
mov
aad
xchg
cmp
les
xchg
scas
cs
insl
mov
int3
roll
sahf
lcall
or
adc
sub
jno
daa
mov
mov
frstor
sbb
lcall
sbb
pop
mov
ljmp
enter
rorl
add
dec
jl
inc
or
push
inc
bound
repz
lds
int
pop
jmp
mov
out
cmp
stos
in
push
mov
popf
jo
add
jbe
orb
jp
cmpsl
ljmp
or
js
lock
dec
lea
inc
push
outsb
cli
jg
push
ds
xor
ret
and
mov
clc
add
pusha
movsb
mov
mov
test
and
cmp
adc
dec
ss
inc
push
cld
loopne
mov
dec
std
dec
cmp
jo
stc
push
dec
xchg
cmc
test
push
popf
xchg
cmp
dec
pop
outsl
call
mov
xor
sub
add
iret
call
and
cmp
and
mov
xlat
data16
test
jne
jo
add
mov
jl
insb
loopne
lock
cmpb
mov
cld
push
in
pusha
fdivl
add
mov
jl
insb
loopne
lock
cmpb
mov
cld
push
movsb
pusha
movsb
jo
add
mov
movsb
shrb
lock
cmpb
mov
cld
push
in
pusha
fdivl
add
mov
adc
dec
pop
lock
mov
rcrl
dec
repz
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
insb
cmpl
in
mov
lds
shr
sar
int3
adc
mov
jne
test
movsl
pop
mov
lds
in
add
fdivl
mov
jne
and
aas
pop
ret
sub
cmp
or
sbb
in
add
mov
xor
pop
cmc
adc
rcrl
and
imul
xchg
xor
mov
ljmp
aaa
pop
fs
mov
mov
pop
lock
or
jno
xor
and
push
mov
cmp
cld
adc
sub
adc
jmp
lret
lods
mov
test
insb
test
mov
ret
in
and
jno
sub
push
mov
or
push
stc
push
shl
sbb
lock
or
es
inc
inc
lds
cld
das
cmp
jae
pushf
clc
push
jp
push
shlb
es
or
stos
push
mov
pop
dec
sub
sahf
pop
scas
or
rcrl
lds
in
add
fmull
lods
jns
mov
or
sbb
dec
pusha
push
mov
pushf
inc
cltd
gs
add
cmp
adc
sbb
ret
or
das
sbb
xchg
pop
sahf
fs
pusha
mov
faddl
in
testb
idivb
leave
cmp
imul
cld
adc
lods
inc
mov
jne
test
movsl
pop
mov
lds
in
add
fdivl
mov
jne
test
pop
cld
mov
mov
mov
lods
mov
rolb
sbb
mov
test
mov
repz
ja
and
cmpsb
mov
shll
lea
insl
or
xchg
or
push
test
rcll
addr16
and
loope
loope
mov
fisttpl
xor
lods
leave
stc
adc
mov
fisubs
sti
or
jbe
sbb
mov
js
lods
push
adc
jge
sub
mov
mov
rcrb
shr
mov
dec
pushf
jns
in
clc
or
cmp
cwtl
enter
and
rcll
mov
xor
sbb
jmp
scas
scas
out
repnz
sub
mov
sarl
cmpsb
xchg
xchg
cltd
adc
fcomip
jnp
int3
ds
lea
scas
dec
sub
mov
stc
push
lock
fsubrl
mov
mov
stos
push
add
and
imull
hlt
sub
and
cli
mov
and
add
push
adc
in
sti
push
mov
leave
xchg
lods
pop
add
add
jnp
jecxz
scas
popf
ds
mov
sub
divb
mov
je
insb
frstor
icebp
sbbb
aaa
mov
cld
xchg
xlat
ret
mov
lock
lock
xor
icebp
cmp
jo
cmp
mov
pop
scas
mov
or
dec
or
repz
sbb
fcoms
insl
and
or
mov
movsb
mov
xchg
jp
out
jno
jb
imul
bound
jae
ljmp
adc
mov
inc
xchg
insb
fimuls
sbb
rorb
out
sbb
adc
scas
int3
incb
fs
xor
adcb
decl
mov
or
jecxz
xor
fldt
dec
outsl
inc
mov
xor
test
test
lods
es
js
not
stos
push
fwait
int3
sti
add
push
cld
ja
dec
es
scas
aaa
popl
ret
pop
cltd
inc
push
and
sub
out
xchg
push
push
es
mov
jg
mov
clc
fucomi
in
cmp
xchg
xchg
pusha
push
push
divl
pop
scas
movsb
pop
jae
dec
shl
inc
stos
pop
xchg
imul
add
lea
shl
ret
inc
leave
inc
lock
fstl
jne
dec
out
in
loopne
mov
gs
lret
cmpsl
lods
xchg
sbb
nop
add
push
xor
daa
jns
adc
fsubrl
xor
mul
adc
add
jno
pop
je
lret
ret
addr16
and
pop
hlt
xor
cmc
xor
xchg
cld
or
data16
add
fbld
adc
cmp
call
sub
ret
adcl
out
hlt
call
push
sub
int3
pop
mov
iret
stc
and
fsts
sbb
sub
xchg
dec
mov
in
adc
mov
push
fbld
das
lahf
push
mov
mov
mov
addr16
imul
push
and
lods
xchg
stos
scas
decb
inc
sbb
jmp
xchg
sbb
and
dec
arpl
dec
rolb
call
adc
or
inc
jne
xor
inc
sbb
push
loopne
add
rcl
cmp
int3
dec
jge
push
xlat
push
scas
push
int
insb
hlt
adc
in
inc
popf
push
jmp
or
pop
je
sub
jg
add
dec
js
mov
jp
scas
iret
xor
jb
add
push
jmp
cmp
cltd
sti
pop
movsb
ret
xchg
mov
jne
adc
repz
mov
inc
dec
out
mov
push
pop
cmpsb
add
or
adcb
inc
jne
push
mov
jge
faddl
cmp
jne
push
sbb
adc
outsl
repnz
pop
xor
scas
mov
lea
movsb
mov
jl
cmp
push
fdivrl
loope
push
sti
in
add
cld
mov
cmpsl
jge
hlt
jns
add
dec
int
jb
shll
int
add
loop
out
shll
test
pop
lret
insb
out
es
stc
add
mov
mov
leave
aad
adc
imul
rcr
popa
add
loopne
push
fcomip
daa
or
xchg
mov
insl
and
xlat
mov
pop
pop
leave
lea
adc
daa
add
xorb
jns
inc
cmp
add
arpl
test
int
cmc
pop
adc
mov
pop
inc
lcall
ret
or
sbb
nop
mov
mov
jno
out
hlt
or
mov
ret
imul
cmp
lret
pusha
lods
lea
sbb
and
pushf
sbb
addr16
adc
cmp
and
and
ret
popa
mov
psubd
xchg
dec
int3
xchg
jle
rcrb
cwtl
arpl
push
push
xor
orl
and
stos
jo
inc
push
or
mov
xor
aas
movsb
je
scas
mov
ja
xor
call
mov
sub
jnp
adc
jmp
mov
ds
stc
pminsw
xor
add
jl
adc
mov
bnd
mov
aam
jb
outsb
pop
pop
and
ds
aad
adc
inc
std
adc
clc
out
fmuls
popa
aaa
lcall
cmpsb
ja
lods
dec
es
mov
mov
shlb
in
repz
dec
test
sti
xchg
dec
jp
xchg
fsubs
cwtl
xchg
outsl
shll
nop
pop
imul
repnz
sub
popa
mov
clc
out
dec
fiaddl
fwait
and
jnp
les
hlt
js
push
dec
hlt
cltd
les
cltd
sub
xor
in
or
cmp
fnstcw
pop
sub
or
pop
xchg
test
pop
es
inc
pop
jbe
pop
cmp
lds
push
ds
and
pushl
mov
leave
sbb
js
jno
lcall
shl
or
cld
rcrl
ret
lea
ficoml
jmp
mov
mov
lods
lock
mov
jge
fstl
xchg
inc
dec
or
inc
or
jl
and
push
or
push
and
adc
mov
movsl
jne
xor
fadd
adcl
push
sbb
inc
loop
jno
mov
adc
popf
pop
je
std
test
das
jle
movsl
je
xor
sahf
add
pop
lret
sbb
pop
popa
sahf
sbb
mov
rol
jge
pop
into
vrcpss
inc
inc
push
arpl
fsub
in
cltd
shlb
push
in
testb
xchg
imul
fadd
push
push
add
adc
bound
js
loopne
dec
dec
xlat
les
adc
in
cli
cmpsb
push
xchg
aad
push
in
push
mov
pushf
imul
hlt
pop
aaa
sub
decl
inc
adc
into
mov
xlat
xchg
cltd
or
clc
push
inc
adc
cmp
cmp
fsubrp
and
fwait
inc
mov
jb
fwait
add
add
jp
push
lcall
or
jae
mov
arpl
mov
jmp
cltd
addr16
push
dec
mov
mov
push
loope
or
adc
arpl
mov
and
adc
push
ss
mov
pop
dec
xor
sbb
add
mov
into
jecxz
cmpsl
fcomip
lret
lock
fwait
stos
jle
daa
out
inc
mov
hlt
jle
rolb
xchg
sbb
out
cmp
call
sub
jo
xchg
hlt
xorl
xor
mov
mov
insl
ds
pop
lret
aaa
and
sahf
pop
cmpsl
sarb
cld
push
add
lock
add
jae
mov
push
adc
sub
pusha
pop
cmc
cmp
repz
mov
push
mulb
fcmovne
mov
movsl
jp
jg
jno
int
sbb
sub
lds
out
sbb
xchg
cmp
dec
jns
ret
pop
ret
in
adc
dec
cmp
mov
push
jns
ret
pop
inc
mov
mov
bound
sbb
lods
loope
mov
fistpl
in
insb
xor
sub
mov
out
mov
leave
jno
ret
push
push
test
jne
jge
mov
pop
dec
imul
and
xor
out
add
aas
xlat
jle
and
and
and
and
xchg
fyl2x
pusha
aas
xor
pop
pusha
pop
shl
and
push
mov
add
mov
into
inc
lret
and
aad
jnp
cmp
sbb
inc
fisubl
outsl
or
inc
sub
stos
mov
js
movsl
xor
out
jecxz
mov
mov
insl
test
test
mov
ds
add
mov
mov
xchg
xchg
xchg
pop
cmp
push
lods
cld
inc
rcrb
mov
lret
dec
inc
jo
fwait
aas
dec
scas
push
mov
mov
std
fmull
add
pop
nop
out
and
push
add
or
fidivrs
cmpsb
adc
div
lea
and
adc
movsl
jno
pusha
push
rolb
rorb
daa
mov
sbb
adc
notb
push
mov
mov
popw
xchg
movsb
pop
aas
fdiv
testb
test
xor
adc
inc
ja
lea
add
mov
sbb
push
sub
inc
repnz
movsl
out
jp
jg
push
in
pop
mov
add
cmc
xor
mov
xor
sahf
ror
push
sbbl
and
pop
div
sbb
push
in
int3
inc
cmp
mov
into
jne
pop
dec
ljmp
dec
inc
sbb
xchg
jae
gs
lock
arpl
adc
or
dec
addr16
add
mov
xchg
push
movsb
mov
sbb
or
or
inc
cmpsb
mov
or
aam
pop
in
sti
mov
int3
lods
mov
xor
negb
aam
xchg
jns
pop
or
jmp
jne
jae
dec
add
add
or
xchg
adc
cmp
call
ds
cmp
lcall
les
popf
lret
xor
cltd
add
decl
pop
dec
movsb
or
sbb
adc
hlt
loop
lods
cmp
test
ds
ficomps
insl
leave
popf
sbb
mov
jecxz
and
inc
xchg
fsub
lea
bound
js
adc
je
scas
mov
imul
sbb
lods
mov
dec
data16
mov
and
xchg
adc
pusha
xorb
call
addr16
xchg
gs
aad
xor
stc
stos
mov
out
inc
decl
cmpsl
rcl
push
inc
out
roll
jmp
mov
jne,pt
jmp
mov
mov
push
sbb
sbb
push
mov
repz
stos
or
dec
mov
fistpl
js
mov
jae
mov
pushf
xchg
sbb
xchg
pop
sbb
lods
mov
jl
and
sbb
rorb
add
add
mov
hlt
xor
and
jnp
push
add
pop
pop
cmp
andnps
out
push
mov
roll
fwait
cmp
push
test
je
inc
pushf
cmp
icebp
lcall
lea
nop
aas
mov
filds
add
jo
les
sbb
sub
jle
shrl
icebp
call
sbb
mov
loopne
mov
test
push
mov
sub
loope
cmc
bound
repz
pop
inc
or
repnz
jo
repz
or
and
jmp
cmp
and
mov
cmp
dec
out
fbstp
adc
push
sarb
push
dec
aas
sub
mov
or
adc
sub
jnp
mov
test
or
insl
cmp
jo
mov
shll
and
xchg
std
cmc
push
aam
fdivrl
xchg
into
mov
ret
jl
mov
fs
sbb
loop
ret
xorb
cmp
cmp
mov
and
and
loop
stos
aas
stos
bound
scas
xchg
aad
jmp
sub
lcall
dec
enter
sub
and
mov
sub
pop
mov
aam
dec
inc
scas
shl
orb
aad
or
loope
xchg
les
xchg
cmc
dec
pop
or
and
ret
inc
sub
adcl
sbb
jnp
fs
nop
pop
fistl
insl
fistl
sbb
or
cld
sti
jns
cwtl
rorl
jle
mov
mov
adc
jge,pn
cltd
pushf
xchg
mov
add
and
mov
test
sub
scas
sub
mov
nop
icebp
pop
xor
orb
dec
pop
add
icebp
rolb
adc
push
jns
push
jns
mov
cmp
fwait
xchg
mov
test
mov
mov
fcmovnbe
mov
sbb
mov
cmpsb
out
je
adc
adc
es
push
std
mov
test
pop
lcall
lret
adc
dec
clc
xchg
arpl
js
cltd
jo
pop
cld
jne
jg
push
jbe
mov
aam
sbb
xor
inc
orb
fwait
and
adc
jg
jmp
repnz
jnp
push
subl
shl
cmp
out
fwait
cmp
jmp
ret
xor
xchg
out
mov
mov
test
or
ljmp
adc
mov
inc
lret
mov
xlat
xchg
pop
movsb
inc
jle
and
inc
out
aad
cmp
add
stc
outsb
fidivl
xchg
hlt
jns
in
test
repz
sub
bound
pusha
shrl
bts
shlb
mov
iret
sbb
jle
add
or
call
cmpsb
test
fucomp
cmp
xor
ja
xor
lret
push
jl
aad
in
cwtl
jle
call
jl
lea
aad
xor
orl
aas
jno
nop
dec
cmpsb
mov
push
jecxz
push
aas
mov
in
push
loop
xchg
mov
rcll
pop
sbb
xchg
pop
in
insl
mov
out
loop
fadd
lds
stos
dec
sbb
lret
cwtl
or
push
jns
inc
adc
push
push
aam
sbb
adc
ds
mov
xchg
mov
call
out
ret
aad
fcmovne
cmp
jb
in
std
inc
imul
adc
dec
pop
repz
xor
cmp
aam
clc
mov
cmc
jbe
cwtl
outsb
and
cmp
lret
ficomps
dec
or
bnd
call
sbb
xor
push
lock
lret
data16
mov
mov
in
out
push
dec
cmp
add
cwtl
inc
out
xor
test
lods
insl
dec
sub
shrb
xor
lods
push
and
sub
jae
mov
ret
fcomp
or
cmc
inc
add
insl
mov
popa
mov
fwait
testl
stc
loope
jl
cmp
mov
xchg
mov
fmull
fwait
repz
jl
mov
sahf
and
jmp
out
out
mov
pop
cmp
add
cmc
add
push
imulb
jge
cld
addb
mov
mov
arpl
mov
push
jo
jecxz
xor
fldl
data16
insb
mov
mov
mov
mov
xorb
xlat
sti
mov
sbb
dec
and
dec
movsl
mov
xor
leave
leave
scas
dec
pop
mov
sub
pop
adc
xchg
push
je
popf
je
movsl
xlat
jle
add
js
cmc
xor
dec
lahf
sub
xchg
or
popa
lcall
inc
push
xchg
mov
sti
outsl
add
or
je
add
sub
jmp
nop
sbb
ret
jl
sbb
mov
push
fldl
out
add
lock
pushf
in
nop
add
adc
add
mov
imul
sub
add
or
cld
cmp
push
les
and
fists
and
mov
cld
add
or
scas
dec
fimuls
dec
aad
test
adc
popf
fsubl
push
mov
pop
aaa
jns
popf
jne
incb
mov
out
test
pop
push
mov
inc
stos
dec
cmpsl
mov
sbb
xchg
mov
stc
jae
ss
lods
push
inc
out
fisubrl
pop
daa
lods
les
cld
xchg
mov
mov
daa
inc
and
adc
cmp
mov
adc
cltd
inc
and
arpl
or
mov
pop
pushl
mov
aad
loop
dec
mov
xchg
stc
test
sub
lock
mov
pusha
stc
lret
not
pop
or
sahf
sbbb
lcall
es
fcomps
test
mov
cmpsb
xchg
mov
frstor
inc
inc
dec
clc
push
aas
adc
daa
add
pop
ffree
pop
jb
adc
cmp
push
dec
inc
jbe
sub
jp
rcr
sub
xchg
dec
push
rcr
jle
cmp
xchg
ja
stos
pop
sahf
orb
das
fdecstp
repz
adc
notl
jmp
sbb
outsb
and
fs
cmpsb
adc
cli
pop
pop
inc
popf
pop
cld
fisubl
repnz
iret
in
pushf
mov
int3
xor
outsl
mov
mov
lds
jl
push
mov
mov
add
push
pusha
xchg
stc
ficompl
xchg
in
stos
ret
rclb
rcrl
in
add
popa
adc
lret
xchg
adc
inc
xchg
lcall
and
mov
or
ss
pusha
shl
jb
fistl
fs
bound
pop
mov
add
popf
inc
fldenv
cmp
push
std
loop
add
pop
push
push
sbb
ljmp
cmp
xchg
ret
xor
mov
sti
loop
rsqrtps
ds
xchg
add
lahf
scas
iret
add
or
cs
mov
and
mov
das
cmpsb
aaa
cmp
mov
lds
push
push
inc
adc
and
fcmovne
cmp
rcll
mov
cmp
xchg
push
inc
fwait
insl
sbb
pop
xchg
idivl
bound
stos
dec
test
inc
or
push
stc
bound
lock
movsl
push
pop
es
mov
je
cld
mov
lods
repnz
fisubs
hlt
out
sub
ljmp
dec
test
mov
out
inc
in
or
mov
adc
out
or
jo
mov
push
sub
fwait
sub
push
cwtl
into
push
js
test
adc
xlat
sub
nop
scas
lea
mov
loop
mov
fwait
push
arpl
push
pop
stos
pop
add
or
cltd
and
mov
aas
out
pop
test
aas
jbe
add
xchg
pop
pop
popa
add
insl
std
movsl
push
inc
and
adc
and
int
pop
and
jns
cmpsl
aam
fwait
icebp
ret
sti
mov
sbb
mov
adc
lcall
stc
dec
mov
mov
cld
mov
in
add
enter
stc
push
mov
ljmp
adc
into
add
mov
xor
mov
daa
mov
adc
dec
mov
adc
outsl
cmpsl
xchg
push
xor
fldl
pop
xchg
cmc
add
mov
mov
aam
push
pushf
push
adc
dec
cmp
sub
dec
inc
idivb
in
movsb
sbb
and
int3
jne
cltd
cmp
in
cwtl
icebp
test
dec
push
icebp
in
adc
ficoms
fidivl
jbe
lcall
outsb
jl
xchg
aaa
inc
xor
lods
ss
or
push
or
xchg
cmc
lret
inc
add
bound
xchg
inc
sub
mov
daa
mov
and
xchg
repz
test
repnz
cmp
pop
test
daa
imul
repz
pusha
fstl
icebp
xor
popf
push
scas
and
divb
mov
in
pop
xchg
dec
mov
cmp
adc
imul
push
lods
pop
lds
cld
fcoml
mov
icebp
loope
scas
je
out
mov
inc
jge
mov
loop
sahf
fstpl
call
stos
and
dec
frstor
jg
cltd
dec
stos
adcl
cwtl
stos
add
das
daa
test
mov
pop
addr16
cmp
and
outsb
xchg
aad
ret
movsb
notl
cmp
mov
dec
fcomps
enter
lea
mov
xor
mov
stos
jmp
dec
adc
rcrb
cs
jae
pop
mov
lds
in
add
fdivl
mov
jne
test
movsl
pop
mov
lds
in
add
fdivl
mov
jne
cmpl
lds
cmc
in
add
adc
and
mov
xchg
insb
popa
jl
dec
inc
pop
cmc
sub
cmp
mov
xor
and
fstpt
fs
in
sbb
dec
call
add
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
