mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
jo
arpl
pop
inc
dec
xor
dec
xor
add
rcr
ret
int
mov
xchg
lea
jge
insl
aas
pop
inc
dec
xor
add
std
jecxz
mov
ret
int
shll
lret
jge
insl
rcrl
sub
sbb
ror
scas
cmpsb
lods
fsubr
sar
repz
sbb
xor
and
leave
xchg
sub
mov
mov
clc
mov
rcrb
add
enter
test
adc
xchg
adc
aas
test
xchg
popf
jl
lea
pusha
es
push
dec
cli
xor
xor
stos
jecxz
movb
pop
sbb
dec
mov
scas
sbb
sahf
and
ja
repz
adc
cmp
push
xchg
xchg
orl
faddp
iret
mov
movsb
cwtl
ja
sub
shll
xchg
imul
mov
jae
clc
loopne
dec
mov
in
adc
out
pop
and
lock
xchg
popf
sbbb
pop
inc
dec
xlat
cmp
movsl
or
movsl
int
mov
and
jns
sub
pop
cmp
pop
dec
inc
addr16
add
test
mov
cli
in
ret
sbb
or
cmp
dec
pop
push
inc
popa
out
push
imul
int3
lods
cli
lret
ret
cmp
and
pusha
adc
sub
repz
jecxz
rcr
ret
int
mov
orl
pop
inc
dec
xor
add
rcr
ret
int
mov
orl
mov
cld
dec
dec
pop
lcall
inc
js
and
sarb
cli
xchg
mov
jl
sahf
hlt
loope
ss
pop
mov
dec
in
mov
sbb
stc
das
into
fcomip
dec
into
sbb
test
fstps
cltd
in
int3
sub
out
push
out
aam
mov
xchg
shlb
lods
loop
xor
mov
outsb
sbb
and
and
xchg
cwtl
pop
rcr
loopne
adc
cmpsl
outsl
xchg
push
nop
lea
mov
outsb
jmp
fimull
lahf
lret
jb
mov
inc
stos
decl
xchg
add
incb
test
pop
push
mov
lods
mov
outsb
mov
aaa
clc
popf
mov
test
and
dec
divl
or
mov
add
jg
mov
push
mov
jno
mov
aad
and
test
mov
dec
addr16
jbe
and
out
loope
into
sti
or
xor
sub
add
rcll
xor
inc
mov
std
add
test
mov
loope
stc
arpl
cwtl
xor
lods
push
mov
fldenv
daa
mov
inc
sub
jb
clc
stc
aaa
adc
pop
cmp
dec
jno
sbb
or
shrl
add
roll
fsubrs
sub
adc
imull
in
inc
xchg
xor
cmpsb
repz
fildll
and
fidivs
mov
inc
mov
dec
jmp
xor
insb
ljmp
adc
push
outsb
lea
dec
cmp
je
pop
int
mov
roll
aaa
jg
rorl
rclb
xchg
xchg
ror
sbb
pop
xchg
mov
jmp
inc
outsb
push
std
subl
mov
lds
mov
add
test
cmp
add
pop
jbe
xchg
xchg
mov
xor
repnz
add
jg
iret
sahf
mov
xchg
ficoms
rcrl
xchg
test
xor
cmp
clc
inc
out
lcall
cwtl
mov
jle
push
popa
movsl
sub
mov
fwait
sahf
xorl
fmul
jbe
mov
mov
scas
pop
fisubs
pop
jg
dec
fwait
or
jle
stos
test
in
cmpsb
jl
mov
shl
lcall
movsb
fists
jg
insl
add
shll
mov
aam
sti
cmp
mov
push
cli
sarb
aaa
xchg
js
popa
cmp
sti
dec
push
pop
stos
gs
adc
push
ret
mov
aas
add
lea
cltd
in
cmc
add
adc
mov
cld
pop
imul
gs
mov
jb
xor
mov
ja
popa
into
push
insl
mov
add
xchg
out
sub
cmp
out
adc
or
fstps
mov
aam
pop
mov
pop
fnstcw
scas
pop
nop
out
das
add
jge
ljmp
ja
adc
or
mov
fsub
mov
aas
insl
sbb
cld
inc
clc
aas
sbb
sub
in
dec
xor
in
ja
cs
dec
cmp
outsb
test
je
std
mov
adc
ss
cmpsb
pop
fistps
les
adc
stos
addr16
clc
push
jecxz
jmp
add
fidivs
cld
inc
stos
pop
pop
call
addr16
and
stos
jne
std
mov
push
mov
imul
push
loope
scas
cwtl
xchg
cmpsb
mov
scas
scas
in
insl
jne
push
sub
mov
sub
mov
jl
push
mov
add
jae
fistps
jae
loop
ss
sub
stos
fistps
cltd
andb
fimull
sti
cmpsb
xor
jmp
int3
jp
fbstp
jo
xchg
xchg
inc
xor
jmp
repz
inc
int
and
inc
jge
lret
inc
cmc
push
lahf
mov
scas
nop
dec
push
stc
cmpsb
sub
leave
xor
cltd
outsb
adc
mov
mov
push
arpl
xchg
xor
clc
xchg
pop
and
jnp
aas
enter
gs
stos
dec
inc
lods
pop
cmp
nop
loope
mov
and
xor
lret
gs
aaa
pop
ret
imul
pminsw
lock
sti
std
addr16
mov
icebp
in
pop
inc
dec
lock
int
add
cmp
movsl
dec
outsl
call
pusha
rep
dec
jmp
push
xor
aam
lods
pslld
xchg
add
or
sbb
cmc
loopne
inc
adc
shrl
sub
outsl
pop
into
adc
and
sub
jmp
bound
repnz
and
data16
mov
lea
rorl
inc
mov
dec
into
xchg
dec
mov
jne
add
cmc
mov
jecxz
cmc
cmp
xchg
xchg
jecxz
imul
fwait
cmc
imul
cmp
xchg
mov
fisttps
into
dec
inc
aas
enter
push
push
je
in
clc
gs
pop
add
cld
outsl
add
jb
inc
loop
sarb
lret
xor
insl
mov
jae
aaa
cmp
fldcw
fidivrl
inc
cmp
test
push
jns,pt
adc
mov
xlat
cmpsl
mov
mov
jle
les
cmp
mov
cmp
xorb
lret
roll
and
cmp
inc
int3
in
les
cmp
cmc
jns
into
mov
inc
jecxz
inc
add
pop
cs
mov
xlat
cmc
dec
popa
cmpsl
jns
mov
daa
mov
pop
stos
sarl
dec
imul
and
sbb
adc
mov
jae
sbb
adc
mov
test
nop
push
push
icebp
out
fs
sbb
xchg
cwtl
negb
xchg
cmpsl
lret
xor
scas
gs
outsl
outsl
daa
shl
pop
push
subb
jl
enter
in
fcmovne
sbb
and
in
pop
or
pop
arpl
xchg
xor
ljmp
nop
xchg
push
outsl
pop
and
out
cmp
jl
mov
mov
loop
pop
dec
jno
and
xor
xlat
out
sub
and
int3
leave
push
scas
mov
xchg
repz
sarl
cmp
jnp
mov
test
mov
push
lcall
sub
in
push
faddp
push
xchg
mov
inc
jb
sub
sub
xchg
pushf
add
dec
rorb
mov
dec
jae
je
push
imul
dec
dec
cmp
addr16
ret
sbb
xor
shl
icebp
cmc
and
outsb
and
lret
fisubs
test
notl
aad
rcrb
mov
pushf
jbe
dec
add
nop
imul
loope
subl
xchg
mov
mov
js
hlt
bound
stos
fsubl
add
jmp
std
jg
pusha
xchg
push
push
add
pop
loop
aas
mov
lds
or
sbb
dec
xor
popf
jecxz
cmc
cmp
push
push
loopne
dec
enter
cmp
jne
popf
les
cmc
fwait
loop
ja
cmpsl
or
mov
or
mov
addr16
mov
xor
dec
lcall
int
sbb
ja
mov
push
clc
clc
mov
mov
mov
mov
int3
jbe
jno
ret
xchg
repnz
decb
mov
mov
inc
leave
jle
lret
sub
sub
cmp
arpl
cmpsl
pop
testl
subl
imul
pop
push
jp
and
mov
xor
fsubr
pop
fstl
mov
jmp
iret
cli
pop
pop
test
or
rcr
inc
imul
mov
imul
sbb
dec
lods
cltd
mov
insl
adc
jp
adc
lea
add
add
jbe
pop
jo
xor
inc
lods
xor
out
addr16
mov
xlat
jns
cmp
jno
inc
enter
cmp
loopne
mov
lods
inc
inc
sub
xor
xchg
xor
mov
pop
test
jno
out
inc
popa
dec
shlb
add
push
scas
xchg
arpl
push
gs
dec
ficomps
xchg
outsb
movsb
cmp
or
pop
add
jge
inc
or
inc
xor
loop
mov
cmp
jno
mov
inc
imul
fcompl
or
mov
or
adc
test
xor
js
jno
jnp
xor
pop
xor
adc
bound
insb
cmpb
into
xor
imul
xor
pop
jo
or
sbb
xor
pop
shrl
pop
shlb
jnp
push
push
lods
push
cmpl
test
mov
inc
ficompl
jae
dec
xchg
adc
sbb
push
xor
rolb
or
mov
ljmp
adc
aas
rcrb
push
ljmp
xchg
in
jp
ds
xorl
imul
inc
daa
mov
push
xor
mov
fwait
pop
adc
es
in
bound
push
push
inc
mov
add
mov
sbbb
xor
ret
shrl
push
gs
sbb
or
jbe
addl
out
xor
lret
inc
cs
nop
xor
cltd
inc
and
and
push
dec
cmp
cmpsl
push
testl
das
pushf
lods
push
or
and
jmp
mov
js
or
inc
dec
mov
sbb
in
xor
js
mov
or
fstpt
cmp
jae
rorb
movsl
add
out
sbb
shrl
out
mov
push
in
std
cmp
loope
xor
and
push
jbe
mov
push
push
jmp
lea
and
adc
test
shr
pop
sub
pusha
inc
mov
push
pop
cmp
pop
push
adc
push
push
and
test
insb
add
lcall
mov
test
arpl
mov
cmpsb
in
sub
mov
ja
or
add
leave
mov
out
out
cmp
repnz
cmpsl
xor
jnp
jl
rcll
aaa
mov
pop
mov
push
aas
stc
lock
mov
xor
sbb
pop
ljmp
sub
push
fwait
cwtl
cmp
sub
mov
push
add
test
and
inc
or
and
push
pop
mov
rorl
mov
pop
jp
data16
and
nop
jne
std
fstpt
aad
and
in
pop
dec
mov
mov
lods
sbb
adc
das
mov
shlb
push
mov
fidivrl
mov
dec
jno
pop
mov
jae
adc
or
mov
rcrl
and
add
std
ja
sarb
or
xchg
sbb
dec
xchg
sbb
lds
pop
jge
sti
arpl
pusha
push
push
lcall
or
loop
inc
out
cmp
jae
cmpb
imul
ds
or
stos
mov
leave
dec
push
je
cli
sbb
iret
inc
pop
scas
ds
dec
arpl
loopne
daa
arpl
dec
pop
xchg
mov
out
cwtl
sbbl
pop
arpl
dec
enter
jle
mov
add
mov
adc
mov
pop
xlat
test
adc
je
loop
and
out
idivl
loopw
sub
add
lcall
inc
cltd
pop
repnz
jne
aas
push
outsl
sub
scas
mov
fcomp
das
mov
or
jge
outsl
out
rcrb
push
inc
jl
xchg
iret
mov
fsubrs
fs
or
dec
js
or
std
mov
out
xchg
mov
mov
mov
clc
and
fs
add
xchg
mov
xchg
outsb
aaa
sbbb
stos
rorb
fldenv
dec
test
aas
out
xchg
pop
fisubrs
or
inc
fsub
push
test
sub
inc
dec
loop
notl
add
movsl
or
fdivrs
xchg
or
jo
popf
and
sub
pop
addr16
cmp
jp
or
repz
arpl
xor
xchg
and
popa
in
or
ss
sub
pop
leave
pop
fidivl
add
mov
or
pop
mov
push
stos
cwtl
insl
cmp
cltd
cs
inc
fs
dec
push
rcll
push
sbb
int
ss
sub
fstpt
mov
push
xchg
jo
fprem1
mov
popf
mov
movsb
js
sbbl
ja
sbb
fwait
ret
pop
scas
mov
pop
hlt
mov
daa
ja
aas
jge
xchg
loop
insl
mov
xchg
pop
rclb
neg
aas
mov
or
fidivl
call
dec
and
std
xchg
fsubs
pop
push
movsb
mov
mov
inc
or
add
mov
ja
rcll
pop
cmp
mov
leave
aad
sahf
stos
xlat
sbbl
and
or
dec
gs
pop
xor
addb
enter
jl
push
call
sbbb
and
push
xchg
stos
cmp
faddl
mov
xchg
jp
arpl
mov
cwtl
push
ja
cmp
aas
or
and
push
adc
cmp
mov
adc
aaa
shll
call
gs
cmc
jno
jge
in
pop
sbb
out
pop
xchg
sbbl
and
jno
into
fiadds
adc
pusha
test
addl
fildl
loope
fdivl
dec
cmp
push
popa
jno
mov
pop
lret
test
test
jmp
hlt
enter
adc
jp
and
or
sti
push
and
data16
lods
lahf
lods
push
cmp
sbb
dec
inc
insl
push
or
adc
arpl
mov
push
icebp
mov
cld
lret
cmpsb
int3
xchg
arpl
push
shr
lds
hlt
mov
lahf
mov
cmpsl
sar
pop
jg
push
cmp
aad
sahf
shrl
int
mov
push
lret
iret
push
in
mov
adc
pop
or
lcall
clc
sbb
aam
bound
add
inc
jae
dec
push
dec
xchg
fnstsw
nop
jmp
mov
mov
lret
out
mov
scas
or
jl
dec
xor
fnsave
jg
mov
xchg
xor
movsl
mov
mov
pop
dec
int3
mov
leave
inc
cmp
int
rorl
mov
adc
xchg
addl
xor
dec
rcrb
jge
adc
push
mov
pop
jp
sti
ja
inc
or
cmp
cmp
stos
aad
mov
pop
outsb
xchg
inc
mov
cld
pop
cmp
sti
pop
scas
sbb
out
inc
mov
push
sbb
cmpsl
loope
call
repnz
loop
xor
mov
jnp
fsubrp
xor
inc
testb
add
ret
xor
lea
in
mov
jnp
cmp
daa
jmp
dec
out
or
aad
or
push
out
test
data16
mov
push
movsl
mov
iret
sbb
mov
adc
jae
sti
cmpl
aas
stos
bnd
push
and
mov
sahf
jl
mov
push
xchg
sub
lcall
mov
hlt
xchg
in
inc
out
jg
xor
out
mov
or
or
mov
std
mov
and
fildl
mov
ljmp
mov
out
inc
js
jbe
shll
lock
lret
repnz
or
pop
jae
gs
inc
mov
movb
xor
pop
inc
cs
rclb
add
push
mov
cmp
or
jl
loopne
push
sub
icebp
fsubrs
movsl
stos
mov
push
pop
xchg
jmp
dec
cmpsb
sbb
push
arpl
fcompl
inc
jbe
clc
mov
xchg
adc
xlat
mov
xchg
imul
pop
cs
sbb
mov
dec
mov
stc
fidivrl
ja
pop
sub
sub
lea
dec
ljmp
xchg
movsl
out
lock
or
hlt
mov
dec
pusha
jb
fildll
gs
call
cli
roll
jp
or
jg
out
adc
add
lods
int
scas
mov
in
es
insb
and
push
ret
mov
movsb
loope
lgs
cmp
jg
and
cmp
cli
mov
sub
cmp
lock
std
cmp
and
movsb
scas
aam
jmp
cmc
out
pop
xchg
inc
cli
mov
xchg
ret
or
jno
xor
jge
push
cmp
daa
gs
nop
or
sti
cwtl
aad
pop
pop
add
xor
mov
into
jle
out
dec
movsl
fwait
mov
test
mov
std
push
fldcw
inc
sub
pop
cs
repnz
addr16
dec
xchg
lea
jg
inc
data16
das
dec
inc
test
pushf
aas
pop
test
dec
or
cmp
std
fsubrs
pop
ss
push
mov
icebp
jecxz
sbb
roll
dec
jg
pop
lods
adc
and
das
mov
popf
sbb
xchg
dec
xor
out
ljmp
fisttps
pop
or
push
call
mov
mov
outsb
add
rcrl
addr16
sbb
ret
cmc
dec
mov
jp
in
fildll
addr16
pop
push
pop
jmp
sub
mov
inc
scas
jno
xchg
inc
cltd
data16
push
jp
adc
pop
mov
xlat
sub
push
jl
jae
adc
and
push
add
jo
mov
cmc
fucomip
int3
push
arpl
out
notb
dec
push
pop
or
xlat
cmp
sti
cmc
sbb
cmp
jb
int3
dec
mov
mov
adc
jecxz
in
pushf
imul
xchg
adc
sahf
cmp
lret
mov
push
dec
aad
movsb
pushf
iret
testb
jns
mov
stc
std
sbb
dec
sbb
call
dec
imul
je
inc
test
mov
push
pop
cmc
cmpsb
insl
adc
iret
jbe
mov
mov
cli
pop
sub
sbb
sub
pop
mov
fildll
jmp
xor
int
lcall
out
sbb
ljmp
dec
xchg
or
mov
lods
wbinvd
lods
iret
mov
mov
pop
pop
inc
push
adc
sbb
dec
aas
fldt
cs
imul
es
and
and
dec
xor
xchg
pop
xor
in
pop
sub
clc
xchg
dec
inc
orl
aad
cwtl
dec
shll
jecxz
jg
add
sbb
lods
or
push
push
mov
pop
inc
jecxz
ljmp
test
and
gs
rcrl
nop
stos
pop
insl
gs
xchg
and
or
orb
sub
pop
out
out
les
sbbl
popf
enter
xor
adc
into
pop
xor
imul
add
int
movsl
rorl
mov
sbb
cmp
fbstp
inc
cmp
mov
lds
xor
mov
sub
in
lods
mov
xchg
or
sub
rorl
loopne
lret
mov
jbe
addr16
imulb
inc
cltd
mov
xchg
lds
cmp
out
lea
mov
dec
mov
lds
xorb
adc
jl
fdivl
imul
dec
xchg
loop
je
push
cmp
or
pop
test
nop
pop
mov
lods
jmp
sub
leave
lea
cwtl
lock
ret
sahf
dec
and
and
xchg
insb
jne
mov
xchg
aad
xchg
adc
adc
shll
xchg
cs
lcall
dec
sti
pop
mov
jne
push
xchg
or
das
shl
push
and
lock
mov
push
and
pusha
pop
dec
addr16
stos
or
ljmp
lds
lods
enter
aad
ljmp
sti
mov
dec
mov
lret
xor
pusha
mov
ljmp
add
lcall
dec
pop
mov
emms
notl
movsb
in
inc
mov
pop
sub
mov
outsb
repz
push
xchg
dec
sub
pop
add
sbb
cld
dec
iret
movzbl
sarl
pop
push
dec
xor
sbb
fs
lahf
fimull
je
or
popf
cmp
xor
push
pop
stos
lock
mov
test
out
shrl
jbe
jecxz
in
push
jnp
test
call
je
cmp
leave
sbb
push
dec
out
cmp
adc
in
xor
mov
xchg
mov
mov
xlat
mov
sub
xor
sub
test
xor
and
in
imul
imul
loopne
sbb
xor
lahf
pop
cmp
iret
testl
test
adc
pop
repz
nop
sbb
fldcw
sub
bound
cmc
adc
xor
aaa
mov
cs
sub
xor
loop
nop
mov
jmp
and
push
xchg
out
sub
lock
pop
pop
divb
in
mov
enter
or
and
frstor
cmp
inc
inc
xchg
lret
imul
imul
fdivrs
mov
cmp
in
add
cwtl
rolb
xchg
add
mov
xchg
inc
fildl
pop
in
ds
push
xor
popf
out
cmp
packssdw
push
pop
dec
or
ds
fsts
scas
cmp
push
es
daa
or
out
repz
lret
pop
xchg
add
push
xor
inc
mov
lcall
data16
cwtl
lret
in
cmpsb
xor
mov
faddl
adc
pusha
or
xor
lahf
or
lahf
dec
pop
orb
notl
xlat
fistpll
popf
jle
arpl
mov
dec
or
lods
dec
and
pop
mov
dec
pop
pop
push
xchg
mov
mov
lods
cmovae
and
sbb
movsl
xchg
mov
movsb
dec
mov
aad
inc
jns
sub
add
cmp
out
cltd
ljmp
mov
addr16
cmc
and
inc
inc
xchg
sub
mov
push
mov
js
mov
push
adc
cli
ja
in
or
outsb
push
pop
std
mov
push
jae
stc
push
xor
push
movb
out
add
lock
mov
lcall
push
ficomps
ljmp
mov
lods
xor
insl
adc
inc
dec
xor
add
rcr
ret
int
mov
orl
pop
inc
dec
xor
add
rcr
ret
int
mov
orl
pop
inc
dec
mov
sbb
jecxz
and
ret
int
mov
imul
pop
arpl
cmp
orl
ffree
mov
insb
bound
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
dec
cmp
jp
mov
out
mov
inc
ficoml
cli
jb
add
xor
pop
shrb
jp
or
cmp
fiaddl
jb
hlt
jb
insl
stos
adc
push
inc
shlb
lock
cmp
mov
addb
push
cmc
jnp
push
in
xor
ret
push
or
pop
mov
sbb
mov
and
arpl
fwait
lahf
jb
mov
movsl
ret
adc
sbb
loop
lock
repz
fiaddl
mov
stos
and
mov
cmpsb
xlat
cltd
clc
cmp
leave
rcrl
cmp
out
ja
mov
data16
add
mov
sbbb
aad
cmp
mov
add
in
and
mov
cmp
mov
ja
cmpsb
add
stos
lret
adc
jmp
or
push
lcall
add
enter
adc
loop
dec
xor
popf
stos
push
add
in
stos
and
and
jp
sbb
js
xor
jb
cmp
and
rorb
mov
jl
addr16
cmp
lret
pop
cltd
push
sahf
sbb
arpl
push
and
orl
in
sbb
mov
mov
adc
faddl
pop
das
xchg
ss
push
mov
xchg
inc
out
xchg
sub
ficoml
cli
jb
add
xor
pop
shrb
jp
or
cmp
ljmp
adc
ret
aad
or
sbb
orl
mov
call
fwait
push
test
out
mov
jno
in
lea
pop
pusha
mov
and
popa
ss
fdivl
pushf
dec
lea
ds
movsb
pop
xor
add
stos
cmp
mov
lds
insb
dec
bound
ficoml
je
adc
aad
les
inc
mov
rol
bound
movsb
xlat
mov
pop
jge
mov
cmpsl
mov
xor
sub
not
jb
hlt
pop
in
mov
rolb
insb
scas
lret
fs
mov
sbb
imull
clc
xchg
mov
jecxz
xor
dec
imul
xor
mov
cmp
addr16
mov
jbe
cmp
fidivs
xlat
mov
or
pop
sub
mov
mov
xchg
xor
or
cmpsb
mov
jg
push
dec
sbb
jnp
inc
lret
lock
movsl
xchg
fadds
repnz
hlt
mov
ja
pop
push
stos
pop
movl
jb
lods
repz
repz
leave
leave
cli
ja
in
cmp
enter
cltd
loopne
or
cmp
xchg
adc
outsl
int
test
dec
or
lret
pop
movsb
nop
mov
subb
push
fadd
xor
lds
std
inc
les
mov
add
jg
mov
sub
pop
out
sub
jae
jbe
sbb
jne
ret
repnz
push
in
mov
inc
and
imul
lods
adc
adc
enter
push
adc
mov
aam
xor
xor
jge
inc
inc
mov
lods
out
jg
lahf
stos
cmp
xor
lcall
push
jae
push
or
push
outsb
pushf
insb
ds
adc
xchg
lock
es
push
push
fcoml
pop
roll
mov
inc
add
adc
mov
pop
shl
lods
push
dec
xchg
lret
scas
incb
ss
int3
xor
hlt
or
mov
push
lret
repz
aam
cld
sahf
jo
or
jae
push
jns
add
adc
cwtl
sbb
adc
push
mov
mov
mov
add
dec
adc
mov
mov
push
nop
pop
or
cmp
add
je
and
inc
lcall
lret
xchg
fimuls
outsl
popf
stos
pushf
mov
pop
pusha
ret
mov
out
insl
les
dec
in
fbld
cltd
int
and
mov
leave
lret
push
ret
dec
movsb
mov
pop
negb
mov
dec
and
xchg
xchg
cmpsb
mov
popf
push
inc
insl
into
push
clc
push
and
dec
xor
xchg
das
bnd
or
xor
mov
dec
clc
fcomi
pop
call
fcomi
sbbl
or
or
aam
fdivr
mov
xchg
stc
pop
xchg
sub
int
dec
push
dec
sub
xchg
xchg
movsb
cmc
test
lock
mov
xchg
mov
icebp
stc
jne
or
jl
sbb
call
js
scas
std
mov
jae
and
loopne
xor
pop
mov
test
std
mov
mov
shl
aaa
add
test
call
adc
mov
adc
sbb
sarb
jno
int3
xor
mov
lds
fiadds
push
xchg
mov
adc
push
add
orl
add
pop
arpl
arpl
in
mull
jl
cld
popa
inc
jb
sbb
imul
and
addr16
test
sub
and
fisttps
rclb
jl
dec
mov
mov
add
mov
pop
sbb
xor
xchg
mov
or
out
hlt
loop
sbb
adc
push
inc
jae
mov
fnsave
cli
xchg
xchg
push
mov
xlat
pusha
inc
popa
pop
cs
push
dec
hlt
cwtl
mov
das
testl
stc
mov
jae
lds
mov
cmc
popf
in
sarl
sahf
cmp
cwtl
add
sahf
stc
repz
mov
movsb
fiadds
outsl
pop
and
push
idivl
sub
sub
mov
add
or
lock
add
sub
js
add
int3
mov
add
mov
cwtl
pop
xchg
jae
dec
clc
mov
xor
xor
mov
push
test
test
mov
fiaddl
push
mov
insb
leave
rcrl
pop
in
and
mov
cmp
js
or
sahf
imul
dec
repnz
shl
add
gs
ret
fsubrl
ds
hlt
sarb
aam
jne
push
xabort
sbbb
bswap
sub
sahf
cmp
cmp
and
sbb
mov
jle
jecxz
mov
icebp
roll
pop
sub
ja
mov
loope
mov
stc
inc
jl
jle
fucomip
test
lds
mov
or
or
arpl
ds
sub
jge
xchg
jb
mov
adc
out
mov
and
or
jne
inc
stos
push
mov
arpl
test
mov
aas
xchg
jae
jbe
cmp
jb
jo
jge
pushf
or
pop
and
xchg
rcl
outsl
jecxz
out
mov
call
sbb
pop
or
mov
loop
xchg
bound
mov
jmp
mov
mov
shll
inc
dec
fabs
pop
adc
add
out
dec
xchg
clc
out
aas
dec
dec
sbb
cmp
mov
jae
fwait
dec
fsubrl
dec
clc
and
mov
loopne
fimuls
xchg
jae
pop
int3
mov
sub
insb
sub
call
lock
push
mov
xor
dec
sbb
sbb
or
lret
adcb
rcrb
mov
xchg
ja
movsb
jns
int
shll
fmuls
sar
mov
js
mov
mov
xorb
mov
insl
cmp
mov
adcl
into
jae
mov
or
pop
imul
mov
arpl
lahf
mov
mov
decl
arpl
or
jb
pushl
cmpsb
push
and
mov
jecxz
mov
stos
outsb
cltd
pop
cld
mov
clc
xor
outsl
das
pop
or
pop
push
add
push
cmp
js
xor
adc
xor
jae
fcmovb
push
push
loop
xor
test
repnz
nopl
or
loop,pt
das
scas
push
inc
and
inc
mov
and
mov
mov
mov
jo
inc
shl
lcall
arpl
repz
rorl
and
adc
cmp
arpl
and
jl
es
sbb
adc
adc
push
mov
cmp
pop
pop
out
xor
js
dec
cwtl
jle
aad
ljmp
xor
in
xchg
xor
movsb
dec
leave
mov
fidivs
push
repnz
loopne
dec
sub
xchg
sub
ret
test
inc
mov
icebp
push
iret
cmc
adc
insl
mov
add
xchg
loope
mov
push
pop
cltd
sbb
jmp
pop
in
and
jl
sbb
dec
mov
sub
cmp
mov
cs
jno
scas
jne
mov
in
fwait
sub
pop
cmp
or
arpl
and
aaa
inc
in
outsb
mov
and
jle
das
sub
fwait
or
dec
mov
jne
mov
es
jl
loopne
loope
movsl
nop
dec
add
inc
xor
cmc
cmpsl
shlb
push
nop
xchg
sbb
or
xchg
jo
out
push
dec
loop
xchg
mov
int3
loop
add
mov
bound
dec
imul
test
sbb
adc
out
out
out
subb
sub
jnp
lret
orb
addb
jmp
push
sub
adcb
lcall
xchg
hlt
jbe
cmc
out
adc
loope
lret
mov
ljmp
and
xor
push
jae
sti
stc
mov
cltd
dec
std
mov
xchg
xchg
jle
mov
mov
xor
xchg
dec
xchg
fwait
xchg
jle
hlt
pushl
pop
mov
out
call
nop
add
mov
mov
push
je
mov
aas
xchg
and
mov
add
and
aaa
sbb
loopne
push
add
pop
pop
fbstp
pop
test
cmpsb
dec
and
fcmovnu
scas
shr
fidivrl
fimull
mov
xchg
mov
ljmp
dec
inc
xor
lods
push
mov
jl
mov
or
inc
dec
cmp
aas
lods
icebp
jp
add
sahf
pop
inc
outsb
mov
ds
sti
sub
sti
flds
pop
sti
scas
fwait
mov
mov
aad
cmp
jb
or
xor
pop
into
leave
sub
xor
std
out
adc
add
or
dec
test
jge
adc
add
scas
in
push
nop
ret
int
xchg
cmc
mov
mov
lret
fiaddl
mov
push
rcll
dec
icebp
mov
mov
inc
outsl
push
mov
inc
mov
ret
add
add
mov
xchg
or
jno
push
or
lods
dec
add
xlat
pop
cmp
or
and
nop
push
inc
test
cmpsl
jb
and
test
inc
es
pop
shrb
mov
add
loopne
sbb
fucomp
and
mov
mov
stos
lods
dec
xor
xchg
sar
sti
push
sar
or
pop
mov
divl
fidivrl
pop
jp
test
lret
mov
adcl
add
cld
aaa
loope
in
xchg
lcall
popf
mov
loope
push
cmp
bnd
lret
lods
xorl
shrb
sub
pop
inc
sbb
repz
xchg
shr
mov
mov
jge
and
cmpsl
enter
cmpsb
test
lock
dec
pop
sub
lret
leave
push
xor
xchg
sbb
pushf
test
dec
pop
dec
dec
test
out
xchg
sub
lea
fnstcw
pop
fnstcw
xchg
pop
dec
fs
dec
xor
outsl
push
jbe
push
nop
popa
and
mulb
in
and
cmc
fimull
lcall
imul
rcrb
nop
lods
pop
call
sahf
fisubrl
jbe
xor
xorb
fucomp
add
stos
rol
sbb
clc
push
stc
popf
jge
dec
mov
rcrb
aas
sbb
pop
loope
outsb
hlt
dec
mov
xchg
sbb
xchg
mov
or
adc
push
cltd
push
ja
dec
test
fs
cmc
fimuls
xchg
arpl
push
xor
in
jnp
ss
mov
popl
mov
rclb
xchg
mov
and
jns
inc
mov
adc
xor
pop
daa
xor
shll
xchg
cwtl
mov
xlat
or
cmp
xor
rol
out
push
cmpsl
sahf
out
andl
pop
sub
jl
cld
cmp
inc
add
mov
sti
into
jae
out
push
mov
mov
dec
fists
loopne
fabs
adc
mov
sub
mov
in
inc
lcall
adc
push
sbb
add
gs
cmp
jl
ds
mov
lret
cmp
cmpsl
cmp
xchg
pushf
jo
rol
sub
call
cmp
pop
inc
mov
push
ret
mov
fsubp
mov
mov
mov
je
xchg
lret
fincstp
jl
mov
scas
arpl
das
sti
outsl
pop
lock
es
stos
or
repz
jo
sbb
nop
sbb
nop
sub
jp
gs
pop
ret
jo
xchg
mov
addr16
mov
in
add
shll
lret
aaa
cs
fnstsw
inc
fs
mov
ret
push
sarb
dec
dec
in
mov
lahf
movsb
ds
push
and
or
enter
sub
xchg
cld
xor
lock
add
pop
cmc
in
loope
jmp
fwait
fs
in
xor
fdivl
inc
adcl
inc
sbb
cli
inc
fmull
stos
pop
cmp
push
nop
out
dec
sbb
pop
es
sub
subl
mov
ret
rorl
shll
pop
and
fs
rcll
pop
icebp
dec
fsubp
into
iretw
push
push
adc
imul
mov
cld
dec
mulb
mov
andb
cmc
pop
push
int3
push
jo
pop
mulb
mov
jbe
adc
loop
mov
stos
insb
xorb
pop
or
imul
adc
dec
xlat
and
inc
aaa
or
add
pop
push
mov
jl
shrl
cmp
push
xor
mov
icebp
outsl
and
add
daa
xor
cmp
mov
into
lcall
ds
lret
dec
cmc
idivb
call
inc
add
add
adc
add
ds
lcall
add
ret
int3
pop
lock
and
aad
pop
pushf
stos
pop
dec
outsb
jp
inc
add
inc
push
lcall
out
inc
or
out
imul
sarl
ret
jo
dec
xorb
xor
fnsave
mov
mov
xchg
movsl
xorb
adc
jle
pushf
sbb
sti
outsb
imul
jno
addr16
mov
mov
rcrl
dec
add
sahf
lret
jge
ret
xor
jb
add
decl
aam
xchg
inc
xor
and
mov
mov
in
adc
sub
ret
ret
ret
jle
and
fwait
xchg
push
xor
and
add
xor
inc
lods
sbb
out
push
ret
pop
test
adc
ret
dec
push
dec
imul
dec
push
xchg
das
jne
inc
sbb
ret
jle
xchg
xor
add
rclb
mov
mov
or
xor
xor
xlat
pop
xlat
scas
ret
mov
xchg
call
cmpsb
inc
inc
lods
cmp
inc
inc
xor
pop
pushf
push
mov
xchg
jns
lods
or
addr16
jmp
inc
loope
cltd
mulps
ret
xchg
push
xchg
and
out
add
stos
fiadds
adc
fadd
stos
push
scas
inc
gs
sar
loope
push
iret
imul
jle
andb
bound
data16
in
jnp
loop
cs
lods
jle
sub
lcall
sbb
loopne
test
inc
mov
outsb
jb
push
daa
xor
add
jae
xchg
xchg
jp
mov
mov
fisttpl
icebp
add
call
pop
sub
es
push
rcll
lock
cmpsl
and
xor
cmp
sahf
stos
mul
shl
in
adc
mov
pusha
push
mov
addl
jne
push
daa
insb
mov
push
mov
cmp
jne
sarb
aaa
hlt
cmp
and
cli
mov
sbb
sub
outsl
xlat
mov
popa
mov
fwait
cmc
std
or
mov
and
in
ret
lcall
inc
pusha
loop
fsubrs
push
mov
or
fwait
pop
xlat
fs
inc
xchg
loope
lret
mull
cwtl
fnstsw
aas
gs
out
je
les
pop
pop
loop
stc
data16
cs
das
xorl
adc
test
ds
and
popa
fisttpll
pop
push
mov
xor
mov
dec
mov
adc
out
jge
jle
sti
int3
sar
sub
lahf
pop
xor
push
inc
sub
mov
ret
jno
out
push
lret
sub
sub
inc
sub
xor
hlt
pop
jl
mulb
xor
jo
pop
push
jecxz
jnp
fwait
cmp
push
addr16
xchg
and
lret
fldl
cs
dec
andl
xchg
pop
notl
sarb
outsb
pop
test
cmp
jmp
leave
jg
bound
add
dec
or
ret
push
jg
lret
scas
dec
pop
stos
cmp
addb
rcl
add
mov
add
outsl
mov
rorl
jo
cmp
lock
push
xchg
pop
inc
sub
lock
and
mov
loope
imul
pusha
sbb
sub
dec
aad
mov
inc
lods
cli
adc
pop
mov
sub
in
ret
cmp
lret
gs
in
and
out
and
scas
jo
outsb
dec
arpl
push
push
jge
and
sub
and
aam
inc
outsb
imul
fcoms
xor
ficoml
jns
fwait
rclb
mov
pop
or
addr16
or
xchg
or
sti
repnz
xchg
dec
ds
and
xor
loopne
cmp
xchg
je
js
adc
test
clc
lret
jp
inc
ljmp
sbbl
cmp
inc
push
repnz
pop
aaa
daa
ss
mov
mov
int3
sub
cmp
pop
rclb
jno
incb
or
or
add
or
xor
iret
subl
jb
lods
sub
scas
imul
stos
mov
pop
insl
push
jl
fwait
mov
cmp
sbb
outsl
and
insb
jbe
pop
imul
xor
mov
pusha
inc
xchg
or
ret
insb
xchg
scas
jl
adc
and
std
mov
jl
xchg
inc
mov
fsubrs
int3
push
push
ds
dec
push
pop
dec
arpl
test
adc
mov
mov
adc
fisubrs
sub
pop
in
or
mov
lret
pop
movsb
jecxz
test
mov
push
loope
or
sahf
sbb
add
imul
repz
sarb
mov
pop
adc
sbb
inc
push
push
push
call
ds
outsl
test
int3
scas
jp
adc
in
clc
aad
pop
mov
clc
test
mov
outsb
cmp
mov
repnz
jb
adc
lret
push
mov
dec
outsb
test
loope
and
jmp
dec
enter
fstps
int3
xor
outsb
and
ror
mov
xor
xor
lds
cmc
sub
adc
mov
pusha
popf
jb
scas
sub
push
mov
call
fld
sti
push
push
adc
jo
or
mov
or
or
dec
aas
adc
add
jecxz
push
xor
fisubrs
xchg
movsb
lret
jge
dec
ds
sbb
aas
int3
loope
ja
jmp
cmp
xchg
adc
or
mov
jb
xchg
enter
mov
sbb
jmp
hlt
or
imul
lods
inc
jb
mov
adc
xchg
pop
and
pop
jns
imul
or
out
dec
mov
xchg
mov
filds
jg
rclb
cld
stos
aam
add
jle
sbb
jecxz,pn
and
xchg
andl
rcrl
xchg
sub
cmpsl
pop
jae
loopne
pop
add
mov
lahf
int3
js
arpl
xlat
pop
jae
scas
push
and
lret
mov
mov
xor
and
fmul
stos
sti
mov
movsl
mov
xchg
int3
ret
sarl
sub
insb
mov
scas
inc
mov
pop
jmp
or
mov
mov
jns
out
push
add
sahf
mov
push
mov
lea
insl
popf
pop
out
outsb
sbb
lea
adc
jb
push
adc
test
and
pushl
dec
and
jge
jo
push
jns
jns
shll
daa
daa
cltd
fimull
xlat
mov
jns
pop
lods
jae
xor
jne
pop
mov
aam
loopne
iret
ds
push
outsb
movsb
aad
mov
cmp
mov
out
mov
add
jnp
inc
jb
push
jne
imul
iret
xchg
jae
lret
mov
add
mov
addb
jle
enter
jmp
push
xor
add
push
or
notl
dec
je
jnp
cmp
sbb
and
xlat
insb
fs
fstpl
test
mov
inc
ljmp
out
cs
aad
xlat
add
sub
out
stc
mov
sub
stos
lret
fs
fldl
push
jne
pop
add
rcrl
sbb
mov
insb
in
add
dec
loope
sbb
sbb
into
mov
dec
mov
std
ret
jp
push
je
mov
subb
std
gs
jns
jbe
inc
pop
cmp
insb
pop
cmp
scas
pop
inc
lea
mov
ret
in
in
push
mov
pop
div
xchg
ss
cmp
push
adcb
fidivs
loopne
out
xchg
test
loopne
inc
inc
sbb
mov
or
cmpb
test
mov
mov
adc
inc
adc
cmp
sarl
lock
fcoms
test
arpl
scas
xchg
or
repnz
mov
testb
sub
mov
in
mov
mov
popa
fnstcw
ficompl
xor
add
dec
jno
xor
flds
xor
cld
mov
add
loope
cld
xchg
int3
negb
and
je
enter
les
orl
xchg
in
lret
push
add
cmp
push
cmp
mov
mov
bound
lea
or
aaa
inc
leave
lret
lret
insl
adc
or
push
out
mov
test
aad
shll
mov
adc
lret
fscale
shll
cmc
mov
cmc
pop
pusha
push
shrb
sbb
hlt
pop
cltd
inc
bound
lret
mov
add
adc
insb
incl
or
and
outsb
add
sub
mov
jl
mov
dec
xchg
inc
lock
cs
sti
out
es
add
fs
leave
cmpsb
jmp
call
inc
push
and
daa
xor
cmp
and
adcb
or
mov
sbb
sub
stc
cld
inc
stos
sbb
mov
les
stos
sbb
push
shll
sbb
loopne
cmp
mov
int3
sarl
leave
andb
jg
sub
jae
nop
lods
jmp
xchg
mov
adc
xchg
cli
jno
pop
arpl
rolb
fs
sub
cmp
mov
cwtl
xor
ss
icebp
xchg
and
aad
add
enter
mov
jp
or
cmp
ljmp
adc
ret
push
jp
or
cmp
ljmp
adc
ret
push
jp
or
cmp
ljmp
adc
ret
imul
repz
mov
clc
inc
cli
add
push
fldl
int3
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lahf
sbb
sub
loope
and
adc
mov
lods
das
mov
jg
outsl
jmp
mov
pop
iret
pop
jns
sbb
dec
mov
dec
lret
jg
outsl
jmp
mov
inc
iret
push
jmp
jae
cltd
rsm
dec
rolb
aaa
xchg
sub
xor
jns
pop
fisttpll
xchg
iret
mov
xchg
inc
aad
idivl
pop
inc
repnz
das
nop
adc
xor
cmc
sub
hlt
xchg
xchg
jmp
jmp
pop
xchg
jle
xchg
adc
add
ja
daa
jbe
rcr
bound
cltd
gs
roll
jl
jo
stc
scas
lods
fiaddl
test
jp,pn
pop
fistps
or
pop
ja
inc
or
in
dec
jg
insl
stc
pusha
pushf
sti
not
xchg
pop
fs
les
jno
add
gs
inc
cmpsb
adc
fisttpl
lahf
stos
jp
pusha
out
jge
rorl
rorl
in
add
cmp
gs
inc
push
arpl
dec
sub
pop
out
rorl
sbb
pop
iret
dec
jns
jo
cltd
setno
mov
dec
sarl
outsl
call
ficompl
mov
xchg
lcall
mov
int3
cmp
test
lret
pop
mov
pop
jp
or
stos
cmp
outsl
popf
negb
jmp
pop
scas
insb
fildll
dec
jns
imul
mov
dec
leave
jg
outsl
jmp
mov
pop
iret
dec
jns
imul
mov
dec
leave
jg
outsl
jmp
add
mov
add
cld
sti
lods
stc
lock
adc
cmp
andb
movsl
push
sub
dec
add
nop
lock
pop
movsl
sbb
jno
out
es
xchg
sti
pushf
and
xchg
sub
sub
jg
mov
lret
ss
cmp
mov
outsb
mov
xchg
outsl
ljmp
imul
mov
aaa
mov
xchg
aam
inc
gs
push
pop
adc
xor
xor
std
test
in
jns
jo
fldl
cmp
and
jno
add
xor
dec
in
es
push
push
jne
pop
iret
pop
add
cmpsb
push
adc
sti
insb
cmp
arpl
popf
fsts
fbstp
dec
push
sub
lods
adc
mov
push
inc
les
sub
scas
inc
jne
mov
jge
fisttps
fisttpll
xor
jp
pop
pop
rclb
pop
out
movsl
ja
dec
hlt
icebp
jnp
sub
or
mov
into
subl
jp
sub
ret
dec
stos
ret
mov
outsb
cmpsb
shr
dec
movsb
push
cmp
loope
pop
out
scas
test
mov
inc
adc
jno
cmp
mov
xchg
nop
pop
push
mov
loopne
adc
push
sbb
adcl
lods
cmc
pop
xor
lea
inc
stos
push
dec
add
xlat
ret
cld
mov
mov
je
das
in
sbb
out
and
clc
inc
cltd
int3
sub
movsl
out
xlat
pusha
xchg
lret
jnp
and
mov
shrl
je
or
fsub
xor
add
repnz
int3
dec
sub
xor
mov
ret
sub
clc
add
ljmp
test
add
mov
out
or
jb
dec
push
jo
iret
test
xchg
dec
and
int
xor
mov
stos
xor
test
mov
and
xlat
in
lods
add
ljmp
adc
cmp
test
jnp
pop
retw
mov
jo
shll
out
outsb
push
seto
mov
jne
in
jo
test
mov
rcr
mov
test
pop
adc
cli
ror
enter
sub
mov
aad
mov
testb
cmp
adc
dec
inc
int3
mov
fisubrs
mov
mov
xlat
cs
adcl
icebp
xlat
lahf
mov
xlat
js
pushf
das
jge
sub
jne
push
movsb
aad
jo
outsb
xor
push
mov
sti
mov
dec
fcoml
inc
mov
cli
xchg
pop
rorl
push
fidivrl
inc
fadds
lahf
cmp
test
fmull
jnp
mov
mov
mov
jmp
pop
push
cltd
stos
adc
sbb
mov
lods
mov
pusha
stos
mov
jae
or
cmovp
popw
stc
stos
mov
adc
sub
testl
cmp
movsl
leave
adc
lret
dec
test
repnz
cmc
mov
push
rcrb
sbb
iret
add
outsl
sbb
aam
divl
adc
mov
push
ret
xchg
xor
lods
dec
aaa
lret
rclb
adc
mov
sub
out
mov
cmpsl
xor
mov
mov
mov
mov
clc
mov
mov
inc
in
sbb
sbb
adc
and
push
aad
and
stos
ljmp
shr
adc
jecxz
test
xchg
pop
jo
sbb
mov
pop
or
mov
dec
xchg
mov
js
xor
sbb
enter
idivl
inc
jnp
call
loopne
mov
sbb
inc
mov
mov
outsl
jmp
divb
int3
int
pop
into
rorl
pop
shrl
adc
fidivrl
sub
rclb
mov
lock
ja
pop
cmpsl
stos
sbb
push
mov
fcomps
test
scas
mov
mov
lock
cmc
lret
decl
fistl
iret
rcrl
mov
mov
adc
out
dec
pushf
sbb
mov
jae
in
rclb
mov
cli
daa
lahf
sub
cmp
je
lods
add
dec
enter
push
aam
xchg
sbb
xchg
movsl
fisubrs
and
idivl
sti
mov
jge
mov
pop
push
jbe
xchg
aam
jmp
es
mov
rorb
push
mov
mov
lods
addr16
fnstcw
dec
repnz
adc
xlat
xchg
sbb
jno
mov
pop
ds
shlb
pop
dec
mov
mov
lock
sub
lret
popa
cmp
aaa
mov
aam
add
pop
test
mov
or
adc
pushf
andl
sub
push
add
cwtl
mov
rcll
data16
mov
pop
and
inc
test
pop
lcall
jmp
mov
outsl
outsl
fistpll
pop
subb
aaa
mov
pop
adc
fdivr
frstor
jmp
std
mov
daa
sbb
lret
imull
mov
xchg
xchg
inc
xor
rcll
xor
mov
dec
cmc
mov
dec
pop
imul
dec
in
xor
clc
lods
addb
cmp
insl
push
test
imul
jno
inc
movsl
xchg
daa
cltd
mov
movd
punpcklbw
or
loopne
sbb
lahf
pusha
cmp
cmpsl
ret
push
add
testb
add
leave
xchg
mov
adc
mov
jo
mov
stc
in
mov
lea
seto
xchg
and
sbb
icebp
arpl
stc
inc
xchg
dec
dec
aaa
cli
mov
jae
in
cltd
das
xor
idivl
mov
add
inc
xchg
mov
int
sub
or
adc
ja
xorb
or
cmp
or
add
sub
cmp
aaa
mov
fbstp
rcl
jmp
in
cmp
out
adcl
movsl
pusha
ficomps
add
insl
loopne
out
add
cmc
dec
mov
ret
jbe
jno
pop
test
sbb
test
jp
add
sahf
inc
faddl
sbb
xchg
jb
mov
inc
jle
add
arpl
add
mov
and
push
in
hlt
or
mov
mov
lret
pop
xor
cmp
jno
push
out
mov
pop
inc
inc
and
pop
sub
lret
pop
aad
cmp
mov
std
xchg
aam
add
inc
mov
in
xor
add
out
sbb
jmp
aaa
stos
pop
pop
dec
int
and
mov
imul
ret
popf
dec
push
push
adcb
repz
jnp
imul
bound
lods
dec
rcrl
in
sahf
std
aam
inc
push
mov
out
push
xchg
mov
addr16
loopne
add
in
mov
ret
inc
mov
dec
add
inc
push
mov
inc
pop
loopne
divb
in
push
sbb
dec
cmp
sbb
push
pop
fistpll
xchg
dec
push
xchg
push
inc
xchg
sub
sub
fcompl
mov
cltd
push
mov
cltd
call
notl
mov
es
push
cmp
mov
cmp
push
out
sbbb
and
add
inc
je
xchg
js
repz
or
mov
sub
daa
lods
test
or
mov
jnp
std
cli
sbb
inc
xor
push
push
push
sbb
stos
push
push
pushf
stos
dec
loop
repz
jno
add
dec
mov
add
into
sahf
faddl
fsubr
fidivl
mov
mov
mov
sti
jnp
cmp
push
movsb
jge
pop
xchg
mov
lea
mov
sbbb
cmp
xor
daa
xchg
add
rcll
fcomi
mov
cmpsb
dec
icebp
aaa
jb
sub
leave
add
shrl
imul
lcall
sub
mov
mov
inc
pop
dec
mov
rcll
push
push
shrl
ljmp
jecxz
xor
ret
sbb
adc
dec
es
xor
cwtl
ljmp
das
loope
movsl
adc
pop
cmpsb
xchg
lea
mov
mov
adc
imul
fists
push
jmp
fistps
mov
pop
xor
out
pushf
mov
in
sub
add
stc
lgs
mov
movsb
sbb
mov
inc
roll
mov
mov
int
imul
int3
xchg
sahf
fiaddl
sbb
stos
mov
adc
mov
fcmove
fistps
push
lret
jp
and
insl
cmp
lret
mov
outsb
inc
sbb
dec
push
outsb
mov
sub
insb
xchg
sbb
sbb
cmp
pop
or
push
std
xor
xchg
call
mov
xlat
les
mov
inc
out
cmp
dec
mov
xor
int
pop
outsb
sbb
mov
fnstcw
sbb
jnp
and
gs
push
cld
pop
lods
xor
add
and
push
fdivrl
cmp
sbb
ja
jno
bound
push
stc
lods
push
xchg
xchg
imul
les
lret
xor
jno
outsl
cmc
std
push
cld
dec
pop
sub
push
pop
sub
pop
mov
in
xor
cmp
dec
sbb
into
sbb
popa
cld
dec
adc
mov
add
gs
mov
mov
flds
loopne
imul
mov
icebp
outsb
or
mov
inc
cmp
rcrb
lods
enter
jecxz
imul
add
mov
sub
mov
aad
pop
mov
or
mov
lahf
aaa
pushf
dec
jg
inc
insb
add
sbb
inc
mov
out
dec
out
or
dec
lock
or
out
adc
fadds
out
sub
mov
xchg
mov
hlt
add
inc
arpl
mov
sub
jl
adc
xor
ds
mov
inc
xchg
stos
stc
call
fidivl
das
jb
xchg
loop
jb
shlb
sbb
popf
testb
dec
shrb
addb
cmp
cmp
mov
dec
and
rclb
mov
jg
xchg
mov
adc
cwtd
sarl
adc
iret
and
and
or
inc
loopne
ror
jb
mov
lock
incb
sub
fdivrs
inc
pop
daa
dec
jno
lods
cmp
cmp
imul
into
sub
loope
cmpsl
dec
adc
jmp
popf
push
outsl
mov
add
imul
fdiv
shrb
sub
cwtl
lret
imulb
inc
jl
lea
repnz
sub
sub
in
ljmp
mov
mov
jb
dec
sahf
push
je
push
pushf
clc
aas
inc
sub
aaa
leave
jle
cld
pop
pop
and
sub
lret
leave
and
mov
xor
adc
mov
into
imul
inc
fadd
fnstenv
outsl
shll
sbb
sahf
inc
fadd
add
mov
lret
xchg
sbb
frstor
ljmp
dec
mov
inc
mov
inc
push
pop
pop
repz
aaa
decl
sbb
sub
xor
out
fwait
loope
andl
jge
jecxz
cmp
sbb
mov
push
mov
ja
mov
add
cmp
test
outsl
pop
push
sbb
mov
inc
cmp
mov
rol
nop
pop
sub
xlat
lea
mov
loop
sub
pop
sub
cmp
ret
push
adc
push
mov
pop
stc
dec
jbe
mov
les
jmp
je
popf
push
jae
lods
add
mov
call
mov
xor
pop
push
add
pop
mov
push
mov
xchg
cmp
and
inc
mov
sub
adc
dec
inc
pop
js
lret
repnz
sahf
stos
mov
pusha
dec
sbb
out
jg
aaa
adc
xchg
cmp
std
rorl
stos
xor
roll
into
les
movb
ds
pusha
push
xchg
mov
pop
mov
lods
mov
push
push
in
push
mov
outsl
std
push
adc
lea
clc
jno
sbb
adc
pop
shl
fistps
out
mov
xor
imul
and
adc
pusha
lds
lea
mov
pop
cmc
shlb
addr16
mov
stos
push
adcl
fcmove
sbb
pop
xchg
mov
and
ds
push
imul
and
xchg
mov
pop
fs
mov
popa
jb
popa
mov
ret
sbb
repnz
cwtl
cmpsl
dec
je
insb
adc
sub
mov
outsb
testb
sbb
test
rcr
push
in
jo
sbb
sbb
sbb
push
hlt
push
fiaddl
testb
dec
lods
stos
gs
fcomip
and
lods
cltd
mov
ret
push
lret
inc
mov
decb
mov
iret
out
and
sbb
dec
sbb
sahf
out
test
popf
mov
sbb
cmp
fisubs
mov
pop
test
mov
icebp
cmpsl
pop
ret
test
divl
pop
jl
adc
xchg
cmp
push
outsb
sti
aaa
adc
fiadds
jle
icebp
push
xchg
lret
jl
rolb
and
cmp
mov
lock
repz
nop
clc
out
dec
add
inc
sbbl
push
lahf
jecxz
fidivs
jl
ret
in
and
jle
shl
jge
lock
xchg
xor
inc
fs
pop
xor
adc
stos
hlt
nop
jge
fnstcw
fwait
push
add
clc
jg
mov
push
add
sub
pop
jl
adc
lock
xchg
push
inc
xchg
dec
mov
leave
push
cli
les
mov
mov
mov
fdivrl
or
xchg
popf
outsb
pop
and
push
cmp
out
jb
jmp
pop
cmp
and
add
add
in
inc
or
fs
jecxz
or
out
jp
stos
cmp
sub
sub
xor
mov
dec
or
andb
cwtl
xor
movsb
shll
fsts
loope
push
sbb
in
ja
rcll
test
sub
data16
scas
pop
mov
std
test
aaa
imul
int3
push
jbe
jecxz
pop
insl
inc
loope
cmp
lea
dec
inc
xor
ja
sbbl
add
cmp
inc
push
xchg
stc
xchg
pop
andl
jo
repz
sbb
add
fcmovb
xor
or
mov
call
xchg
jbe
pusha
mov
and
int
aas
xchg
mov
inc
adc
sbb
pusha
stos
iret
sub
pop
test
test
data16
mov
rolb
icebp
xor
test
cs
pop
add
test
xor
mov
out
popf
cli
pop
pop
popf
ret
pop
push
add
ret
out
jl
lret
icebp
out
scas
mov
mov
mov
pusha
mov
int
bnd
adc
mov
ret
mov
push
pushf
mov
jle
sub
xchg
inc
in
pop
pop
cmp
fstpt
cld
push
in
or
popf
fsubrl
fistpll
es
movsl
aam
pusha
jae
leave
xor
rcrl
adc
out
sub
ljmp
dec
xchg
dec
out
insl
sti
push
push
outsl
inc
sub
faddl
cwtl
out
pop
in
ficoms
fnstsw
sub
ds
ds
dec
testl
dec
fldcw
mov
movsb
lock
push
xor
cmp
xor
mov
dec
loopne
fists
xchg
or
data16
inc
pop
pop
mov
je
movsl
repnz
mov
jno
sbb
insl
outsb
shlb
push
adc
dec
cwtl
aaa
cmpsb
or
dec
popf
adc
jp
jno
js
inc
jle
fldt
lahf
or
inc
insl
add
loopne
test
sub
leave
xchg
pop
xor
xchg
jp
pop
test
das
ljmp
mov
jns
jno
inc
das
cmp
out
jno
popa
in
sub
dec
sub
adc
or
lock
add
mov
inc
mov
cs
out
mov
outsb
mov
inc
popf
inc
and
fsubl
push
shlb
push
push
pop
pop
shrb
ds
pop
inc
mov
or
cmp
cmp
mov
sbb
dec
imul
aaa
cmp
mov
arpl
test
mov
fsubrs
lods
repnz
negb
imull
mov
cmpsl
mov
sub
data16
or
cs
fwait
xor
ljmp
push
gs
xor
shll
pushf
lock
imul
mov
shl
mov
jns
addb
sti
js
insb
leave
dec
arpl
lret
jb
cmp
repz
inc
addb
adc
pop
fs
jo
xchg
jmp
movsl
es
in
hlt
in
sbb
fcmovb
jne
insl
jp
out
xor
or
adc
iret
sar
and
mov
dec
adc
dec
mov
movsb
jmp
jne
icebp
sub
jl
push
mov
jb
ror
mov
mov
sbb
in
fwait
lods
fstps
dec
inc
daa
push
aas
pop
jecxz
mov
inc
fildll
mov
subb
hlt
sbb
mov
and
add
ror
lret
cmp
jecxz
inc
mov
push
sub
sub
xor
dec
jne
ret
xchg
in
shrl
sub
push
sbb
or
imul
sbb
shrl
fists
pop
mov
pop
pop
imul
add
cs
js
add
pushl
push
mov
sub
sub
push
cmpsb
fcoms
or
movsl
jbe
xchg
sub
cwtl
inc
ret
jbe
test
and
dec
cwtl
rclb
cmp
addps
gs
sub
popf
xor
ret
pop
movsl
and
std
out
cmp
inc
aad
xor
leave
sub
cmp
lea
jnp
jge
xchg
mov
mov
pop
into
cmp
xchg
pop
sub
int3
mov
push
mov
push
fwait
imul
sub
dec
and
seta
mov
les
dec
and
outsb
xchg
jae
jg
jnp
mov
push
cmpsb
or
rcll
xchg
mov
repnz
xor
aam
mov
into
fisttpll
jmp
xor
enter
mov
sub
jo
jmp
loope
iret
mov
add
cmp
daa
add
test
lea
scas
mov
xchg
lcall
mov
jnp
adc
arpl
movsb
mov
jg
in
xchg
cmp
or
push
sarl
inc
cmp
lock
pushf
cmp
roll
jmp
idivb
jo
repnz
outsl
inc
sub
stos
xlat
or
push
jl
iret
int
inc
scas
cmovo
pop
dec
aam
sti
jl
mov
pop
repz
xchg
push
or
pop
imul
push
js
inc
ret
es
adcb
mov
jmp
push
xor
test
out
xor
aad
adc
fstpt
dec
stc
test
aam
or
ljmp
hlt
call
jnp
sbb
sub
adc
push
push
pop
push
add
daa
popa
lds
push
push
subb
jnp
xlat
dec
xchg
jle
jmp
inc
or
in
std
ss
sbb
jne
arpl
jp
jecxz
arpl
or
push
lods
mov
inc
loopne
out
xchg
push
and
mov
and
mov
mov
ja
int
adc
add
lcall
xchg
stc
inc
repz
pop
out
fwait
push
rolb
pop
scas
push
and
mov
xchg
jnp
or
jns
pop
push
out
pop
push
je
icebp
aaa
sub
pushf
cmp
sbb
test
test
sub
inc
mov
nop
and
xlat
jbe
dec
mov
fst
jp
and
shll
jno
data16
sbb
and
ja
sti
mov
out
aad
shr
push
mov
sbb
faddp
stos
rcll
mov
fldcw
add
pop
ja
out
inc
lock
mov
out
jmp
mov
pop
rcll
or
insb
loope
adc
sahf
test
icebp
test
inc
aas
add
xlat
jnp
int3
xchg
dec
ret
add
daa
xchg
ficoms
adc
movsl
je
cmp
cmpl
push
add
mov
and
or
inc
call
push
fisttpll
xor
cmpsl
movsl
xchg
mull
pop
sub
inc
or
sarb
adc
popf
pop
aam
fistps
mov
xor
rorl
adcl
cmp
xchg
pop
and
jecxz
out
cmp
xchg
movsl
push
adc
pop
mov
test
fsubrp
ss
push
jl
push
jnp
cmpsb
aaa
ret
cmp
lock
out
jp
and
loope
roll
sub
pop
push
jge
cltd
adc
cmp
mov
or
cmp
cmp
xchg
shll
mov
push
ficoml
scas
pusha
sub
dec
cli
cli
ror
xor
loope
sti
sbb
shl
out
xor
ret
add
mov
xchg
js
xchg
mov
lret
cwtl
and
movsb
das
xor
fists
je
stos
push
iret
scas
xchg
mov
push
int
sbb
sbb
xor
ret
xchg
rcrb
pop
gs
mov
lahf
pop
in
faddl
xchg
cmp
ret
mov
or
sub
sti
adc
mov
mov
inc
scas
addr16
dec
mov
jne
push
sub
mov
mov
insl
std
mov
pop
add
sbb
xor
dec
dec
repnz
jmp
cwtl
sbb
in
scas
and
jne
fadds
inc
push
shlb
xchg
xor
outsb
or
outsl
and
jne
pusha
in
mov
push
mov
or
push
mov
inc
aad
into
lods
xor
mov
icebp
mov
xchg
aaa
jbe
jg
das
jae
push
pop
cmpsb
iret
rorl
or
loope
sub
pushf
testb
ss
mov
mov
cmpl
int
or
inc
or
xchg
xlat
leave
mov
aad
or
cmp
dec
jns
imul
mov
dec
leave
jg
outsl
jmp
mov
pop
iret
dec
jns
imul
mov
dec
leave
jg
outsl
jmp
mov
pop
iret
dec
jns
imul
mov
dec
leave
jg
outsl
in
lahf
sbb
scas
sub
pop
iret
dec
jns
test
xchg
mov
mov
xchg
int3
int3
out
stos
incl
jne
cmpsb
xor
imul
xchg
and
dec
in
out
xchg
aas
test
movsl
pop
movsl
out
push
incl
jne
gs
adc
lahf
and
dec
aad
in
idivb
lgs
movsl
out
dec
incl
insl
fistpll
mov
aas
outsl
ss
aas
cmpb
das
aam
jmp
jecxz
movsl
fwait
push
sahf
sub
add
fsubl
in
pop
push
dec
inc
icebp
pop
mov
jle
mov
add
add
std
and
jae
ja
rcll
sub
js
aas
rcrb
dec
call
movsl
sub
add
rcll
add
test
out
add
fcoms
xor
lahf
ficompl
adc
aas
jp
aas
xchg
iret
mov
mov
test
lahf
stc
jae
adc
outsb
pop
ja
ret
in
std
mov
pop
rcrl
movsl
cmc
jne
scas
test
xor
sub
cmp
mov
insb
lock
sub
call
fistpll
adc
lahf
cmp
int
fisttpll
pop
cld
das
lea
xchg
lgs
rorl
cltd
fs
imul
sbb
mov
sbb
push
outsl
enter
inc
lods
add
hlt
aaa
lret
dec
sbb
sbbl
fnstenvs
mov
and
jns
add
outsl
aad
lds
pop
in
xchg
aas
test
mov
movsl
out
push
incl
jne
gs
adc
lahf
and
dec
cmc
pop
in
xchg
aas
test
mov
movsl
out
push
sahf
ret
mov
lea
jge
lcall
xchg
mov
or
jp
std
mov
lret
push
add
gs
outsb
inc
test
ret
mov
or
stc
jg
adc
stos
and
callw
xor
xchg
xor
lock
mov
or
aas
ss
dec
dec
jns
in
xor
add
dec
sub
aad
pop
cli
push
xlat
dec
xor
sbb
loop
mov
nop
shl
roll
jae
mov
imul
iret
shlb
push
iret
mov
mov
or
cmp
shll
shlb
insl
js
ret
ret
scas
std
lods
xchg
aaa
sbb
dec
jne
jecxz
rol
loope
dec
fcomp
cmp
daa
xorl
enter
hlt
fwait
xchg
adc
inc
xchg
nop
lret
mov
daa
push
scas
dec
push
mov
cmp
ss
mov
nop
sbb
hlt
fisubrl
lahf
push
stos
push
inc
jnp
sti
les
fisubl
mov
cmp
pop
add
and
xor
sub
push
cmp
popf
xor
fldl
mov
cmp
xor
xchg
sbbl
add
movsl
test
jg
inc
lcall
js
cli
push
mov
lods
mov
shrb
jnp
out
icebp
add
or
add
pop
cmp
push
cmpsb
je
andl
add
bound
pop
cwtl
mov
sbb
fdivrl
clc
shll
dec
gs
mov
inc
loopne
aam
adc
inc
xchg
inc
dec
mov
fdivrl
dec
rcll
loope
outsb
push
sbbl
sbb
pop
cli
popf
addr16
push
pop
fimuls
or
push
xor
pop
data16
mov
cs
fdivrl
xor
pop
xchg
xchg
outsl
xor
gs
pop
fistps
fs
and
xchg
inc
xor
add
in
rcr
pop
aam
cli
ss
pop
and
xchg
int3
inc
sub
mov
push
dec
jmp
aas
jp
iret
inc
xchg
sbb
cli
inc
insl
cli
jno
or
mov
outsb
mov
jmp
mul
add
xchg
mov
xchg
imul
repz
sarb
adc
pop
pushf
pop
nop
xor
inc
inc
outsl
push
dec
pmulhw
push
xlat
jg
xchg
cli
sarb
and
sub
cmpsb
dec
mov
pop
adc
and
movsb
jb
pop
mov
jne
decl
push
mov
jge
push
adc
popf
or
in
inc
test
dec
lods
mov
push
inc
push
xor
int3
cmp
cmpsb
jg
repnz
imul
or
jbe
and
or
jno
ss
or
sbb
cli
adc
xor
das
jmp
jp
addb
mov
pop
mov
inc
pop
inc
cmp
fnstenv
rcr
jmp
shll
lea
repnz
fs
adc
mov
cmc
mov
or
ss
jecxz
adc
divl
je
mov
fbld
rclb
stos
gs
fiaddl
mov
repz
mov
pop
xabort
jl
ret
lds
repnz
push
in
movsb
or
in
insl
jo
nop
xchg
inc
stos
lret
pop
std
imul
sbb
xchg
aad
sub
mov
nop
icebp
or
shll
xchg
mov
xchg
xor
divb
into
sti
loope
scas
test
pushf
fldl
out
popf
ljmp
xor
and
rcl
push
pop
adc
addr16
jl
roll
jne
mov
jno
cmp
xor
push
stos
jl
inc
push
push
rcll
test
loopne
int
aaa
or
lret
sysexit
jmp
ror
and
into
mov
negb
sbb
ja
add
test
mov
out
pop
in
cmp
frstor
sub
cmp
or
scas
aaa
loopne
push
outsb
out
mov
mov
cmp
xchg
xchg
jo
sti
mov
jb
and
mov
xchg
mov
int
in
lret
dec
or
pop
fildll
fldenv
outsl
verr
inc
mov
iret
xchg
mov
leave
mov
xchg
push
adc
xor
mov
push
xchg
mov
sub
cmp
lret
adc
mov
arpl
cmc
jl
js
mov
mov
xchg
and
test
fdivs
fs
andb
xor
daa
xor
cwtl
hlt
mov
fstl
fdivs
xlat
inc
ljmp
cmpl
mov
mov
scas
cmp
imul
test
clc
lods
faddp
leave
fwait
sbb
iret
xchg
ret
test
mov
dec
jbe
or
in
jae
subl
xchg
jae
cltd
js
jbe
fstpl
sti
data16
mov
jmp
test
mov
es
enter
lret
enter
xchg
mov
shlb
pusha
xor
push
scas
pop
cmp
testl
lods
rcrl
mov
cld
rclb
ret
aaa
push
cmpb
movsb
mov
sub
pushl
repnz
adc
leave
mov
pop
xchg
cli
pop
scas
out
xor
out
xchg
jle
fidivs
je
mov
jb
pop
mov
scas
sbb
fwait
lock
loopne
mov
ror
push
out
je
mov
xor
push
sub
enter
dec
orb
jb
cltd
sub
xchg
sbb
xor
jno
ja
aad
dec
gs
dec
push
scas
jo
adc
js
jmp
xchg
mov
addr16
dec
and
dec
cld
addr16
push
daa
adc
ljmp
arpl
xor
mov
test
jae
or
daa
xchg
xlat
sub
mov
lea
xor
cmp
jmp
pop
mov
add
and
pop
add
add
sbb
xor
loope
inc
dec
dec
pop
jle
sbb
push
jno
aas
mov
fstpt
lahf
insb
sbb
cmc
leave
outsb
xchg
negb
jle
lret
mov
add
icebp
std
dec
sub
jecxz
in
shlb
xchg
jb
pop
ds
inc
icebp
data16
push
iret
push
inc
shrl
cmp
xchg
xor
nop
mov
imul
jg
js
add
cwtl
sub
xor
or
fstl
inc
lods
cmpsb
or
mov
leave
std
jp
jnp
mov
pop
clc
adc
adcb
sub
repz
movsb
cld
fbstp
in
ds
cmpsb
pushf
insb
mov
add
push
and
les
jne
and
push
sub
push
sub
pop
ja
sbb
mov
loop
cwtl
and
lds
xor
pop
repnz
or
adc
icebp
xchg
clc
cmp
lods
pop
jmp
scas
push
xlat
shll
jle
or
clc
mov
cwtl
sub
push
pop
and
adc
faddl
movsb
dec
inc
add
mov
adc
xchg
rcl
cmc
or
mov
dec
jge
sub
fimull
mov
xor
push
mov
xchg
mov
or
sub
sub
xchg
sbb
push
out
in
js
inc
sarb
test
mov
jle
lds
mov
cmpl
fbld
fdivrs
iret
stos
mov
daa
push
pop
jbe
or
sub
shll
fiadds
arpl
mov
insb
fists
add
cmova
sbb
xchg
xchg
cmpsb
lods
adc
cmp
iret
btc
in
movsl
mov
pop
jae
sbb
xchg
aas
cmpsl
pop
xchg
push
push
imul
add
or
push
jp
cmp
popa
std
les
bound
sbb
ja
xchg
and
push
fs
sbb
pop
mov
bound
and
mov
mov
pop
xchg
lahf
push
and
out
pop
push
jo
and
repnz
insl
popf
add
add
and
incb
addr16
inc
dec
sbb
das
loope
cmp
sbb
xchg
or
push
bound
adc
movsl
cmp
sbb
sbb
jle
nop
cmp
fwait
shll
decb
push
ficoml
gs
sbb
imul
sbb
fwait
add
pop
and
fildll
das
mov
and
int3
loop
lods
cmp
sbb
cmp
inc
xlat
lods
test
pxor
or
or
das
xor
fwait
daa
aaa
jb
das
add
xlat
mov
in
mov
xchg
adc
fldl
insb
ficompl
repz
xchg
shlb
cs
test
jp
dec
push
xor
out
inc
xor
pop
mov
aaa
push
pop
push
ss
cmp
jmp
jns
fnstenv
inc
mov
mov
or
jbe
vshufps
cmp
inc
pop
leave
xchg
cmc
dec
dec
loopne
add
jo
and
pusha
rclb
or
orl
cld
insl
adc
mov
sub
das
into
jns
sbb
fidivs
cmp
jno
popf
xor
mov
dec
inc
jo
jl
jecxz
std
out
mov
push
push
ret
mov
xor
imul
mov
clc
pop
mov
inc
mov
aaa
inc
dec
addr16
lret
mov
mov
ds
out
inc
xchg
mov
sub
sbb
into
lods
jbe
pop
pop
mov
mov
sub
aas
data16
enter
push
xchg
xchg
stc
pop
mov
fisubrl
xor
cmpsb
inc
mov
xor
notl
lahf
push
add
push
xor
mov
jmp
mov
lock
dec
lret
mov
flds
in
popf
jge
inc
push
jb
and
test
jg
sbb
xor
or
inc
int
jecxz
mov
in
push
push
mov
or
test
movsl
sub
jl
jge
sbb
popf
cwtl
movsl
xchg
add
mov
push
fwait
mov
sbb
movsb
inc
popf
xor
xor
ds
fcompl
pusha
xchg
xchg
cs
push
jns
cmp
jb
stc
jl
inc
in
rclb
jle
ljmp
sti
cmp
sub
or
jmp
jge
pop
mov
mov
xor
xchg
out
pop
push
xor
movsb
lods
dec
out
dec
add
cwtl
or
in
scas
aam
repnz
out
cmp
movsb
inc
lds
shrb
xchg
cmpsl
movsl
sub
dec
in
pop
xchg
lea
add
enter
pop
jo
and
pop
lahf
mov
movsb
dec
mov
push
mov
fistpll
cltd
mov
mov
ror
fs
mov
add
clc
mov
ss
lock
je
mov
std
mov
pop
sahf
cmp
inc
popa
decb
ds
loopne
imulb
cwtl
cmpsl
jg
or
js
xlat
pop
mov
imul
addr16
dec
jg
jnp
inc
cli
shll
cld
cmp
mov
clc
imul
mov
pop
fisubl
mov
call
jae
aas
xchg
enter
jno
jb
cli
and
adc
data16
aad
icebp
loope
js
push
dec
jp
ret
cmp
fdivs
cmp
cld
xor
adc
inc
lret
push
mov
inc
xor
push
loope
sbb
leave
pop
add
ja
faddl
bound
movsl
mov
mov
in
sbb
insb
in
imull
es
stos
enter
insl
cmp
push
inc
popa
insl
test
ffreep
cmp
cmpsb
xor
jno
in
outsl
sbb
les
cmp
pop
xor
adc
ffreep
test
out
cld
pop
xor
dec
xchg
xchg
fsubrl
insl
adc
fcomi
in
xor
test
xchg
and
xor
fmuls
pop
inc
in
shll
pop
mov
jl
sbb
inc
lods
jecxz
out
cwtl
inc
push
mov
dec
pushf
pushl
xchg
xchg
lea
sahf
nop
jg
stos
xor
mov
scas
xchg
mov
inc
sbb
pusha
test
sahf
mov
jnp
icebp
idivl
cmpxchg
jno
stos
pop
or
or
shll
stos
mov
jb
mov
fs
inc
mov
adc
ja
arpl
fwait
push
push
mov
ljmp
lret
bound
mov
pusha
int
xchg
cmp
jno
call
in
fsubrs
adc
test
shrb
xchg
popa
pop
push
sbb
mov
sbb
push
pop
int
add
daa
imul
xchg
in
pop
and
in
adc
loopne
add
jmp
outsl
fisttpl
sbb
movb
and
sub
sub
dec
test
lret
in
jl
add
movsl
push
fwait
ja
movl
daa
inc
inc
daa
xchg
lock
mov
mov
mov
nop
ficoms
aad
and
add
movsl
sub
and
push
mov
jbe
dec
lds
xchg
push
sbb
xor
inc
jp
sub
enter
enter
cmp
lea
data16
xor
pop
std
sahf
popa
push
xchg
stos
pop
adc
pop
imulb
ss
pop
inc
ljmp
push
adc
sub
call
jo
jle
sub
or
cltd
dec
cmp
adc
ss
jge
ret
pop
push
dec
cmpsl
rolb
xor
cltd
dec
add
jmp
call
shl
insb
mov
adc
mov
clc
pushf
int3
fld
outsb
add
pushf
adc
jo
cltd
lods
sub
add
mov
mov
and
xlat
cld
or
in
fiadds
scas
test
push
daa
cmp
test
fwait
add
sarl
push
into
mov
cs
dec
test
cs
jle
pop
std
sub
sub
ja
popa
pop
pop
in
sahf
inc
push
ja
xor
and
pop
int
dec
mov
mov
cmpsb
mov
xor
pop
xchg
imul
cmpsb
das
xor
push
ret
and
jno
and
mov
lea
mov
out
test
fs
mov
dec
inc
push
iret
mov
inc
fs
into
dec
push
jo
sub
scas
cld
pop
xor
push
and
mov
daa
shll
pusha
cmp
adc
sub
roll
mov
lods
or
shl
leave
dec
inc
jecxz
cmp
adc
clc
sub
mov
icebp
cld
pop
xchg
rclb
or
enter
sti
pop
pop
ret
adc
and
addl
sti
sbb
fildll
icebp
cmp
sti
cli
add
adc
shll
pop
pop
insb
push
ja
sbbl
inc
xchg
fsubp
fwait
aas
out
jnp
inc
aaa
cmp
sbb
mov
lods
dec
xchg
das
imul
add
jecxz
subl
sub
cltd
mov
mov
daa
pop
adc
inc
jp
es
out
cs
jnp
inc
ds
add
loope
push
mov
pop
cwtl
rolb
adc
inc
jg
hlt
je
and
loop
mov
lods
inc
adc
pusha
out
in
sbb
popf
mov
pop
andb
and
jns
mov
add
fisubl
sbb
or
stc
int
push
adc
imul
and
aas
mov
xchg
adc
test
inc
popa
adc
and
scas
mov
mov
cmp
adc
xchg
es
in
rol
into
ja
mov
movsl
outsb
mov
lret
stos
lret
fisttpl
mov
insl
adc
in
pop
or
sub
xchg
stos
sbb
addr16
shrb
scas
mov
fldcw
cmc
nop
sbb
out
add
movsl
lea
ljmp
add
push
mov
mov
insb
mov
repz
imulb
pop
pop
sub
jno
pop
in
cmp
mov
mov
stc
fcoms
fldt
sub
arpl
jmp
jmp
cmovns
inc
cmc
and
fidivrs
sbb
xor
das
out
sbb
stos
xlat
sub
jle
jl
pop
sbb
dec
lahf
fcoml
xor
jbe
repnz
jmp
sub
push
les
aam
out
sub
out
adc
xchg
bound
push
pop
call
imul
xor
pop
fdivs
sub
leave
inc
popa
mov
gs
fstpl
shlb
push
lock
pop
and
push
xor
call
loopne
leavew
dec
pushf
std
es
pop
into
sarl
inc
xor
or
gs
cmp
xor
or
stc
cli
and
pop
rorb
inc
mov
lock
mov
rcrl
loop
ljmp
fisubs
orl
inc
fsts
sub
test
push
test
push
sub
lods
fldcw
nop
es
inc
cmp
loope
cli
or
out
adc
sub
in
sub
pop
stos
dec
pop
pop
fdivrs
add
sbb
pop
data16
sarl
call
xlat
rorb
mov
les
mov
in
xlat
jae
inc
movsl
inc
jae
out
mov
and
stc
cmp
add
shl
repz
inc
popa
inc
adc
icebp
pop
add
aas
clc
or
notrack
dec
movsl
add
cmp
mov
test
jno
aaa
fstl
fimull
leave
mov
movsb
notl
into
sub
cmpb
js
xchg
imul
imul
insl
sub
test
jo
test
enter
xor
dec
pushf
jg
int
int3
mov
add
inc
nop
inc
cmpsb
inc
xchg
test
mov
adc
pusha
les
shlb
pop
inc
add
and
inc
das
scas
mov
mov
stos
iret
dec
mov
dec
hlt
xor
iret
cld
adc
jns
and
sub
pop
nop
and
xor
aad
inc
shlb
jae
sarl
sbb
xchg
es
sti
push
push
cmp
popa
insb
hlt
mov
shrl
sub
mov
les
pushf
out
push
or
icebp
nop
cld
mov
cli
test
mov
xor
gs
stos
sub
test
mov
inc
cmc
lahf
rcrl
call
push
jg
and
andl
sbb
pop
popf
aad
or
jae
out
movsl
sub
mov
test
cmp
mov
sbb
or
dec
lock
inc
mov
mov
inc
xchg
inc
mov
mov
outsl
nop
push
mov
jb
les
mov
pop
adc
ss
in
sub
inc
mov
lret
dec
xor
mov
pop
js
lret
and
xchg
cld
repz
ret
inc
outsb
clc
imul
xchg
mov
pop
sub
mov
fdivrl
sar
adc
aas
loopne
sbb
mov
mov
pushf
pop
xor
out
repz
xchg
lock
pop
in
push
inc
xchg
mov
out
xchg
xchg
mov
dec
push
jmp
and
roll
inc
push
or
jmp
sahf
and
or
fisttpll
mov
and
sbb
xor
in
in
add
jl
movsb
push
in
sar
cwtl
stos
cmc
pop
mov
add
mov
fcomp
add
inc
jecxz
or
out
ljmp
sub
and
js
jmp
xor
xor
lods
adc
int
mov
and
sub
jge
cmp
loope
sbb
fwait
es
sbb
sub
cmpsb
mov
das
or
cmp
and
nop
cwtl
push
outsb
sbb
inc
lret
mov
cmc
adc
sub
or
in
enter
mov
inc
mov
fidivrl
je
add
jbe
push
jg
jb
pop
sbb
int3
daa
cmp
jo
shrb
mov
pusha
test
lods
adc
in
call
xor
shl
xor
inc
loopne
test
das
cli
xchg
mov
jae
cwtl
jnp
into
inc
jae
push
or
nop
inc
outsb
iret
cmp
rclb
add
push
ja
lahf
ss
lea
push
xchg
cltd
mov
jnp
dec
iret
xchg
jmp
popa
cmp
mov
push
cmpsb
cmc
fimull
repz
faddp
mov
mov
jbe
cwtl
xchg
mov
and
pop
mov
jae
cmc
aad
cmp
popa
add
xor
add
bound
fsubrl
mov
fiaddl
fstpt
inc
stc
push
pop
push
and
jo
cmpb
pushf
cli
sub
cmpsb
xor
mov
inc
xchg
mov
push
ja
adc
sbb
mov
and
add
cmp
or
xchg
push
dec
movsl
fistpl
loopne
jns
fdivs
call
test
int3
sbb
mov
arpl
inc
jno
dec
aad
mov
jne,pt
loope
mov
insl
xchg
mov
sub
repnz
push
out
fstps
mov
xchg
rorb
cltd
jecxz
out
dec
lret
in
jae
ljmp
jecxz
ds
xchg
dec
je
sarl
push
das
lds
inc
mov
in
push
orb
cmpsb
clc
push
dec
iret
jno
addr16
cmp
lock
int
aas
pop
and
lret
dec
mov
push
mov
insb
mov
pop
dec
pop
inc
and
imul
mov
mov
lret
inc
cmc
insb
scas
mov
and
lea
xchg
movsl
cmp
jp
imul
popf
cmp
add
mov
xchg
add
jmp
jg
lret
mov
mov
lock
jbe
sbb
out
push
add
dec
ds
inc
pushf
scas
pop
jp
ljmp
ret
out
and
cmp
popf
shlb
jmp
fsubrl
pushf
adc
int3
jbe
mov
fisttps
fistl
sub
scas
pop
int
pushf
jno
enter
jecxz
fnstcw
mov
push
in
sbbb
aam
push
mov
sub
xchg
cltd
fisttpll
push
mov
jl
dec
mov
int
lock
xor
jg
dec
cmc
pop
in
xchg
aas
test
mov
movsl
out
push
incl
jne
gs
adc
lahf
and
dec
cmc
pop
in
xchg
aas
test
mov
movsl
out
push
incl
jne
gs
adc
lahf
and
dec
cmc
pop
in
xchg
aas
test
mov
movsl
out
push
incl
jne
gs
adc
pop
and
in
pop
xchg
pop
sbb
out
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
ret
adc
jae
arpl
test
push
inc
pusha
shrl
ret
mov
mov
mov
mov
adc
jb
arpl
adc
inc
xor
add
xchg
mov
mov
mov
mov
add
arpl
adc
inc
xor
pusha
rcll
xchg
lock
ljmp
pop
inc
jo
arpl
inc
cwtl
ljmp
push
adc
jl
jmp
jmp
pop
pop
mov
movaps
adc
adc
pop
and
mov
cmpb
dec
outsb
mov
sarb
pop
mov
add
jl
add
pop
sbb
push
mov
movsl
mov
pop
sub
jge
sub
popf
inc
adc
adc
inc
sarl
add
add
and
mov
sarb
sti
fisttpl
scas
xor
and
outsl
mov
mov
sub
ss
pop
add
mov
sub
pop
lret
lret
lret
cli
in
sub
adc
pop
out
adcl
adc
jae
arpl
adc
inc
xor
pusha
rcll
jecxz
xchg
rolb
cmpsb
daa
adc
jns
jno
popa
push
pop
data16
adc
jno
pushf
jecxz
shl
movsb
iret
xchg
adc
or
add
sub
adc
xor
pop
dec
xor
xchg
fdivs
mov
push
adc
pop
push
bound
inc
xor
pusha
rcll
jecxz
xchg
rolb
loopne
adc
jae
arpl
adc
inc
xor
pusha
rcll
jecxz
xchg
rolb
loopne
adc
pop
xor
pusha
movsl
and
xlat
dec
int3
xchg
imul
pop
and
add
xlat
sahf
dec
mov
add
sub
call
insl
add
jecxz
adc
je
loopne
movsl
das
lret
xor
mov
xchg
adc
dec
dec
call
xchg
out
pop
imul
pop
push
dec
jo
call
jno
mov
mov
pop
pop
push
scas
test
adc
icebp
cltd
mov
inc
cltd
push
out
pushf
mov
mov
dec
shl
or
lods
sbb
push
xor
sub
arpl
imul
xor
inc
xchg
add
insl
jp
xchg
ds
cmp
xorb
repz
ror
mov
pop
mov
push
pop
sub
xchg
psubsb
lcall
push
les
jbe
ja
scas
inc
scas
test
mov
mov
repz
or
add
cmp
imul
adc
mov
cmpsl
jo
xorl
loop
aad
and
inc
dec
dec
or
mov
clc
mov
mov
mov
mov
imul
push
fldenv
out
movsb
pop
lods
movsl
pop
jae
nop
bound
ds
iret
les
shlb
add
std
and
fisttps
lea
add
pop
push
ret
stos
or
xor
xchg
aam
and
test
fwait
and
scas
scas
inc
popa
xchg
shll
inc
fidivrs
mov
cmp
insb
cmp
and
das
lods
mov
adc
cmp
jb
movsl
xor
ds
cmpsl
sbb
push
insb
add
rcr
jge
mov
pop
fidivrs
lock
adc
push
imulb
mov
pop
ss
push
add
adc
inc
inc
cmpsl
insl
and
test
lock
scas
jl
adc
fiadds
cs
addr16
orl
sub
and
clc
xchg
mov
push
aas
sbb
push
sbb
popf
dec
mov
jae
mov
popa
ljmp
cmp
sub
jno
lea
dec
adc
rcrb
lret
adc
scas
mov
jle
aaa
sub
das
test
fdivrs
stc
sahf
or
and
rep
shrb
lcall
jo
lgs
lea
pop
push
mov
xor
pop
inc
data16
loope
loop
stos
push
push
xlat
mov
pusha
xor
xchg
push
and
lret
fst
sub
popf
icebp
dec
add
rolb
shlb
cltd
sti
inc
ja
outsl
or
push
rcll
add
mov
mov
rclb
xchg
adc
lock
sbb
les
daa
sbb
inc
pusha
les
xor
imul
lea
sub
add
xor
jae
or
pop
ss
in
sub
aaa
iret
test
lods
mov
rolb
xor
inc
aad
lock
hlt
or
mov
fdivl
xchg
or
pop
mov
cmp
ds
bound
mov
rolb
jbe
andb
mov
push
mov
or
stos
fwait
lds
pop
mov
es
jo
pop
dec
fidivrl
rolb
adc
outsb
imul
in
or
mov
sub
xchg
jo
cmpsl
push
or
out
imul
jg
adc
cmp
insb
xchg
call
les
inc
cmp
repz
mov
cmp
mov
add
pop
push
xor
pusha
std
imul
insl
xchg
ds
shlb
mov
and
cmp
lcall
imul
out
cwtl
adc
test
xchg
jge
out
xchg
jbe
jns
loop
addb
daa
bnd
xchg
shrb
xor
dec
mov
and
mov
push
sub
or
xchg
add
push
push
test
leave
lret
lock
les
sub
push
push
das
in
testl
fistpll
daa
rorl
or
ret
shl
pop
add
dec
fisttps
mov
lcall
aas
pushl
out
dec
inc
in
inc
sbb
dec
insl
cmp
adc
mov
or
jle
outsl
popa
sbb
inc
or
imul
inc
sub
dec
mov
xchg
scas
or
jle
push
dec
jno
mov
jo
test
movsl
dec
ljmp
add
pop
jecxz
xchg
cmpsb
mov
mov
jbe
and
and
out
mov
aad
faddp
jp
mov
cmp
repnz
repz
push
sub
hlt
xchg
mov
mov
add
dec
xchg
out
or
dec
mov
add
rol
ja
movsb
outsl
or
repz
fistpl
xor
arpl
cmp
xchg
or
cmpsb
push
notb
lods
mov
and
fildl
pop
out
bound
mov
mov
stos
jbe
loope
push
dec
popa
lret
rol
in
clc
push
dec
push
into
push
jnp
xor
mov
mov
sbb
es
pop
add
nop
pop
pushf
sub
sar
jae
loopne
jno
sbb
fwait
mov
jno
stc
mov
mov
pop
out
fstpl
push
sti
fdivl
xchg
adc
push
xor
rorb
xchg
add
lds
mov
push
cmp
cli
cmp
incb
popf
jno
scas
es
testb
cmp
gs
jl
bound
in
cmc
popf
in
dec
push
add
xchg
add
inc
out
cmpsb
mov
and
repnz
xor
cmp
mov
aas
mov
cwtl
cwtl
push
pop
scas
push
stos
add
cmc
sbb
js
loopne
bound
xor
jb
adc
loop
and
push
mov
pop
add
movsl
and
push
shrl
stc
push
popf
mov
push
repnz
xchg
data16
ret
popf
into
scas
add
jbe
lcall
cmp
test
test
es
add
lods
adcb
mov
pop
int
mov
pop
dec
push
aaa
mov
daa
mov
mov
ficomps
fmul
push
xchg
mov
in
test
int3
xchg
adc
jbe
mov
and
push
xchg
dec
jno
cltd
iret
scas
fs
pop
or
dec
rcl
mov
adc
outsl
cwtl
inc
ror
mov
add
adc
push
in
add
inc
jg
xlat
inc
push
mov
sarb
insl
xchg
fcoms
xchg
in
pop
stos
xor
add
out
loope
sbb
adc
sti
xchg
pop
mov
xchg
into
push
inc
daa
out
or
imul
push
cmp
lds
cltd
leave
or
xor
ja
arpl
sub
and
call
psubsb
push
fistpl
gs
mov
mov
movsl
rep
xchg
orl
imul
sbb
sub
imul
mov
lcall
rorb
js
mov
jo
add
mov
push
test
mov
or
jg
aam
leave
lods
aam
push
repz
mov
jae
ljmp
popl
fsts
shrb
ret
cli
adc
dec
lds
std
mul
push
insb
cltd
mov
push
and
sbbl
ret
ficomps
imul
push
add
sbb
mov
pop
cmpsl
adc
add
scas
je
lret
or
lahf
or
push
in
sahf
fs
ret
cmpsl
lods
sbb
out
jl
dec
push
sbb
in
sahf
mov
pop
add
into
inc
jbe
or
sub
int
mov
in
push
out
hlt
sarb
test
pushf
call
and
es
loopne
jns
xorb
pop
inc
cmp
push
lods
pushf
sub
stos
mov
xor
aas
push
imul
pop
mov
faddl
cmpsl
add
mov
std
push
lds
push
aaa
and
clc
fdiv
aam
push
and
jae
xor
mov
sub
add
add
jg
or
shrl
mov
mov
cli
add
cmp
cmc
jmp
fld
jg
in
popf
stc
xchg
int3
pop
xlat
and
fidivrs
aad
xchg
jns
cs
pop
nop
repz
in
dec
test
aad
cmp
das
xor
or
aaa
les
cmpb
xchg
jl
inc
nop
pop
fdivs
pop
xchg
push
aas
cmp
mov
xchg
sub
popa
out
dec
mov
sub
out
push
push
add
xchg
xor
out
adc
lret
jecxz
fidivl
out
test
or
leave
pop
or
cmpsl
insb
mov
xchg
push
and
mov
mov
adcb
cmp
push
fnstenv
push
outsb
sub
cmpsb
cld
and
sub
lods
inc
or
adc
jmp
xor
or
pop
sbb
and
iret
mov
sbb
test
incb
adc
mov
mov
pusha
cmpsb
or
pop
pop
dec
xor
dec
ljmp
icebp
iret
in
jecxz
and
rcrb
cld
pop
shrb
mov
pop
shl
test
in
cmp
or
test
lahf
fdivrl
shlb
test
jmp
inc
push
mov
inc
fiadds
sahf
out
lock
cld
push
in
call
out
iretw
repz
mov
jmp
test
cmp
mov
aam
xchg
push
cli
sub
ret
scas
out
add
jbe
outsl
fmuls
add
pop
add
xchg
leave
call
xchg
and
adc
fiaddl
push
jae
mov
adcl
cmc
je
aas
push
sbb
xor
pop
cmp
cmp
mov
pop
sbb
leave
insl
popa
out
xchg
es
rcl
sub
aad
cwtl
ret
scas
push
and
mov
mov
or
mov
dec
lcall
cltd
fs
push
dec
add
mov
aam
ffreep
jb
mov
cmp
mov
daa
pop
and
int
mov
jnp
add
bound
fucom
fwait
xor
fninit
dec
jp
outsb
mov
ja
mov
and
dec
pop
jo
sbb
orb
mov
icebp
jns
lret
lret
sbbb
hlt
push
imul
mov
imul
ja
fs
fiaddl
add
xor
pop
adc
shl
adc
aas
jo
jae
divl
outsb
test
or
ret
and
stos
jbe
cmp
add
icebp
push
rclb
mov
sub
adc
push
cli
stos
xchg
add
push
jmp
mov
out
fs
xchg
andb
cmp
and
push
xor
pop
cmp
cmpsl
mov
mov
sub
dec
cld
sbb
or
je
adc
aaa
outsl
pushf
sub
xorb
test
mov
fistps
lea
outsl
mov
imulb
jmp
jno
fnstcw
in
lods
and
shll
jbe
lods
bound
je
das
cltd
shrl
loopne
mov
scas
sbb
cmpl
rolb
mov
mov
lahf
or
jl
adc
fs
addr16
subb
int3
cmp
add
pop
adc
je
jne
dec
xlat
std
xor
test
int
adc
mov
lock
push
int
mov
sub
cmp
movsl
mov
out
inc
test
mov
es
clc
sub
dec
leave
or
adc
test
arpl
lret
imul
test
sub
inc
movsl
ror
fwait
and
lock
aam
mov
mov
add
mov
icebp
sbb
sub
dec
sbb
fadd
and
push
dec
dec
and
push
mov
test
jnp
add
cmp
xor
cmpsl
sub
push
inc
pop
pushf
xlat
testb
inc
daa
imul
jbe
add
cmp
cmp
xchg
xor
jg
inc
pop
jbe
inc
in
lcall
adc
out
mov
cltd
jno
mov
add
pusha
push
js
jo
cmpsb
mov
fwait
mov
scas
ja
mov
addr16
ja
popa
xchg
adc
divb
pop
add
arpl
jl
jmp
popf
movsl
dec
mov
rcll
add
adc
sbb
scas
inc
out
call
mov
push
mov
addr16
flds
adc
les
bound
fs
sbb
jno
and
xchg
jecxz
and
je
adc
shll
loopne
dec
mov
mov
stos
rorb
cld
movsb
rclb
dec
cmp
or
cli
xchg
mov
mov
dec
in
into
mov
mov
mov
cmp
and
and
push
or
xor
scas
push
dec
rcll
pop
xchg
shl
xor
fs
in
rolb
inc
roll
inc
test
clc
or
cld
mov
jp
mov
xor
mov
clc
or
aas
mov
xor
pop
push
cmpsb
outsl
fxch
adc
inc
mov
xchg
xchg
pop
stos
lods
inc
fcoml
and
sar
pop
insb
cmp
and
out
addb
loope
cld
pop
iret
jmp
testb
mov
xor
xchg
inc
sub
int
sbb
ficoml
push
popa
and
mov
jmp
bound
cmp
adc
xchg
aam
sarl
clc
ret
dec
cmp
test
stc
push
nop
adc
xor
lcall
test
arpl
hlt
mov
negl
les
sub
cmp
sub
sub
jnp
cmp
push
cmp
and
mov
jmp
mov
jns
xlat
pop
in
test
mov
jae
das
ss
movsl
cmp
jns
adc
jae
push
in
dec
or
outsb
mov
xchg
addr16
clc
cmc
mov
pop
fdivp
inc
add
cmpsb
iret
sbb
xchg
or
lcall
or
mov
push
addr16
repz
inc
es
ljmp
enter
rcl
aaa
mov
push
xchg
mov
cmp
fsub
lods
mov
movsl
or
rclb
pop
mov
psrld
rol
in
xchg
test
jg
bound
pop
stos
cmpsl
std
mov
ds
iret
cs
push
dec
cmpsl
mov
stos
fcmovnbe
add
cs
adc
es
and
and
sub
jl
jmp
icebp
lods
enter
jle
or
scas
insb
and
pop
movsb
lret
pushf
insl
dec
dec
mov
add
cli
jle
outsb
add
das
xor
mov
in
dec
cmpsb
sbb
sub
sbb
insb
je
mov
push
sub
xchg
shlb
add
scas
shll
lods
inc
xchg
xchg
push
mov
fldt
lods
mov
pushf
enter
out
or
mov
lods
test
push
xchg
lds
cmpsl
into
dec
mov
cltd
xor
mov
push
or
jle
xchg
loop
cli
inc
or
stc
jg
jmp
lock
mov
jmp
lea
cmp
xor
js
fildl
testb
jmp
lea
xor
adc
aas
jl
dec
movsl
testb
mov
adc
cltd
imul
imul
add
test
mov
xchg
rcrb
shr
mov
test
and
movsl
test
je
aas
fildl
loop
cmp
add
shrl
xor
out
hlt
fdivrl
push
popa
pop
aas
scas
rep
in
rorl
les
cmc
lds
mov
cmp
cmp
test
shrb
ja
adc
sti
add
push
jne
adc
out
sbb
jp
test
insl
push
sub
sahf
push
inc
es
jae
or
sbb
add
imul
in
into
movsl
mov
mov
mov
add
jecxz
add
or
movb
repz
outsl
cmp
cltd
mov
ret
xchg
popf
sbb
lea
out
pop
lcall
push
push
xor
pop
jg
add
xor
idivb
test
lahf
jle
mov
shrb
push
aam
out
fimuls
push
mov
push
or
sbb
mov
cld
outsb
adcb
in
mov
dec
cs
jp
fdiv
clc
clc
xor
sbb
frstor
out
pop
sbb
jg
repz
xchg
insl
inc
jno
jle
mov
jp
cmp
mov
lds
sbbl
pop
das
imul
popa
sbb
add
loopne
fidivs
loop
imul
nop
fimull
lahf
inc
mov
mov
ret
je
loop
pop
mov
std
dec
mov
loope
cwtl
dec
mov
xchg
mov
xor
xchg
data16
arpl
pop
stc
inc
xor
sbb
sub
adcl
in
stos
mov
xlat
cmp
cmp
cwtl
scas
jbe
lret
popf
push
lea
and
outsb
mov
pop
leave
push
rcl
rorl
addr16
stos
jl
sti
mov
jl
popf
fstl
les
push
xor
pop
inc
mov
jo
add
mov
push
sbb
scas
adc
push
fisttps
outsl
add
scas
rol
mov
xchg
repz
ja
les
push
xor
dec
cmovne
test
in
jp
call
sub
addl
int
sub
leave
lret
repz
daa
jmp
cmp
pop
fcoms
std
out
pop
shl
call
xchg
je
and
push
xchg
dec
insl
lods
mov
lea
addb
ret
jmp
push
decl
ret
xchg
outsb
mov
gs
jg
xchg
stos
dec
mov
sti
mov
mov
or
shll
test
jo
clc
or
js
daa
cmp
lret
lret
sbb
cmpsb
out
mov
mov
xor
insb
test
mov
fchs
insb
ds
shll
adc
xchg
mov
mov
mov
or
lock
jno,pn
dec
and
push
mov
jbe
adc
xor
jae
in
add
inc
xor
or
jno
mov
into
lret
xor
adc
cltd
mov
gs
mov
xor
loope
cwtl
dec
xchg
lods
push
stc
cli
je
imul
add
orb
std
and
push
movsl
stos
pop
stos
inc
in
lods
cmp
lret
inc
cmp
fisttps
sbb
xor
int
imul
or
dec
dec
push
rcrb
and
es
mov
fidivs
push
fdivs
mov
inc
push
imul
int
repz
repnz
outsl
fs
lea
fidivs
dec
sub
sub
xor
xchg
xchg
cmpsl
int3
jns
in
pop
shll
jmp
push
icebp
std
inc
pop
inc
lahf
cmp
push
daa
enter
fisubs
ret
incb
add
cmp
ja
int
arpl
pop
jo
xchg
cmp
mov
jl
xor
dec
jnp
jmp
ret
jo
test
adc
out
cmc
lret
loopne
jmp
jecxz
mov
xchg
push
sti
ret
fs
addr16
xor
pop
ja
add
dec
push
mov
stc
loopne
sub
faddl
aas
lods
inc
sbb
in
int
stos
mov
dec
test
or
push
jl
fxch
and
ss
gs
in
iret
scas
fbld
mov
test
fiadds
ret
shrl
dec
fstpt
cs
or
mov
xor
adc
mov
std
ret
and
out
jnp
pushf
or
int
or
les
xchg
xchg
jecxz
xor
mov
inc
mov
adc
testb
les
fistps
jle
inc
ja
into
inc
ljmp
insl
adc
rclb
fdiv
notb
shll
jns
lods
incb
testl
and
sbb
mov
mov
push
shrb
shll
sti
rclb
pop
sub
icebp
xchg
shll
rcr
dec
cmpl
jae
shrb
paddsb
lock
inc
ja
jns
call
add
push
repnz
decl
adc
ret
inc
add
cmp
fisubrs
mov
faddl
test
js
outsl
mov
fucomi
sub
inc
inc
adc
test
cmpsb
jmp
mov
mov
lret
or
in
data16
jae
add
ss
jb
or
movups
imul
mov
out
out
sub
leave
dec
rorl
xchg
aas
popa
pushf
mov
aas
insb
and
lret
popf
sbb
sbb
push
sub
in
dec
ret
sub
sub
mov
add
inc
cbtw
movsb
pop
clc
jns
outsb
cmp
outsl
inc
out
sbb
mov
and
jecxz
mov
dec
sbb
lret
pop
and
cmpsl
out
mov
movsl
dec
push
xor
mov
xchg
loop
dec
xchg
scas
jge
mov
dec
adc
iret
fwait
xor
sub
lds
push
outsl
mov
dec
aaa
sbb
dec
jnp
shlb
test
int
stc
fadd
adc
filds
add
shr
add
adc
ret
push
ds
fdivs
mov
sbb
std
pop
mov
pop
daa
les
fcomi
inc
mov
mov
pop
xor
shll
pop
repz
mov
aam
imul
add
dec
dec
add
dec
lods
mov
cwtl
das
fwait
test
cmp
xchg
mov
jno
addb
sbb
push
mov
les
jns
push
enter
cmpsl
insb
jno
push
jle
cli
leave
test
jnp
xlat
jbe
adc
jns
or
lahf
scas
mov
fisubrs
or
push
cltd
mov
add
imul
inc
pop
faddp
jns
mov
mov
or
insl
jmp
push
and
or
pop
mov
ret
push
push
sbb
pop
neg
or
inc
into
inc
fnstsw
in
mov
mov
push
push
push
adc
push
lret
mov
xor
xlat
mov
push
push
adc
imulb
lret
mov
test
jno
jbe
push
imul
ret
nop
xor
mov
add
in
mov
ss
lods
imul
leave
jl
add
mov
push
add
jo
pusha
rcll
jecxz
xchg
rolb
loopne
adc
jae
arpl
adc
inc
xor
pusha
rcll
jecxz
xchg
rolb
loopne
adc
jae
arpl
adc
inc
xor
pusha
rcll
jecxz
xchg
rolb
loopne
adc
jb
arpl
adc
inc
xor
mov
pop
mov
xlat
in
or
dec
subps
int3
int3
int3
int3
int3
test
movsl
jl
insb
or
mov
sub
fcoml
and
pushf
push
or
jne
test
movsl
jl
insb
lds
sub
fcoml
in
test
lods
test
movsl
jl
insb
lds
sub
je
int3
dec
cwtl
xor
jecxz
into
sbb
adc
cmp
out
out
sub
les
adc
xor
jno
int
push
int3
stc
sbb
cmp
or
nop
xor
std
lret
jmp
clc
std
aad
popf
pop
mov
xchg
mov
rolb
cmc
adc
inc
jne
test
iret
iret
mov
insb
loop
rorb
cmc
rorl
add
mov
inc
inc
and
jne
inc
stc
dec
xchg
pushf
sbb
mov
in
and
mov
mov
and
push
data16
xchg
pop
imul
int3
push
test
sbb
dec
and
xchg
dec
movsl
jl
insb
lds
sub
fcoml
in
inc
pushf
push
mov
jne
les
loope
int3
adc
cmpsl
or
jb
jl
mov
dec
stos
inc
std
push
incl
mov
lock
sarb
push
nop
push
pusha
movsb
inc
mov
inc
cmp
or
add
loopne
xchg
pop
lret
or
cmp
sub
fcoml
in
inc
pushf
push
mov
jne
test
movsl
jl
insb
lds
sub
fcoml
in
inc
pushf
push
mov
jne
test
cmp
lcall
mov
fisubrs
fsubrl
call
sbb
inc
ret
add
mov
ret
test
pushf
fsubs
popf
push
movsl
test
sbb
sub
cmp
dec
je
sub
es
ret
imul
and
hlt
mov
repnz
enter
xlat
inc
fwait
jnp
push
or
jle
test
stc
test
xchg
push
sub
rcll
cld
movsl
lods
pop
jno
ss
jg
movsl
push
xor
aam
repnz
cld
add
sub
loopne
push
jg
gs
fidivl
lds
jl
fcoml
loope
cmp
adc
jmp
mov
hlt
mov
inc
xor
pop
pop
cmp
sbb
jb
jle
fs
cmpsl
imul
pusha
cmp
inc
xchg
lret
adc
mov
pop
inc
mov
icebp
ljmp
jo
sub
mov
leave
sti
fdivrs
inc
xchg
imul
push
inc
rcrb
lods
test
dec
mov
xchg
cmp
adc
lret
jne
jno
sub
adc
nop
stos
or
jae
imul
mov
inc
test
or
ficoml
test
dec
jbe
das
data16
xor
mov
lea
add
jecxz
mov
not
pop
sbb
push
decl
sbb
push
lock
sbbl
jmp
mov
mov
cli
jno
xor
cmp
push
pop
inc
mov
dec
push
mov
test
cmp
movsb
shlb
push
lods
jl
test
jle
xchg
fdivr
aam
int3
in
lret
pop
inc
les
xor
or
xlat
in
mov
mov
movb
add
push
push
fucomip
cmp
test
xor
lods
repnz
xor
fistpl
xor
or
test
lret
sar
fldl
fsubrl
xor
fs
xchg
in
sbbl
inc
adc
dec
loope
pop
fdivs
jp
mov
adc
push
mov
add
out
stc
xor
push
mov
or
sbb
gs
inc
repnz
push
and
push
inc
adc
into
pushf
jp
cltd
test
xchg
inc
jne
xchg
fisttpl
call
xchg
stos
push
adc
and
repz
pop
scas
mov
fs
insb
sub
and
mov
pop
push
adc
sbb
test
add
cltd
add
dec
test
pop
call
jne
stc
insb
scas
and
cwtl
dec
insl
cmp
shl
add
sub
lar
inc
aaa
andl
jne
push
jl
mov
sbb
xor
dec
stc
pop
rsqrtps
cmpsl
sbb
mov
and
test
jnp
les
push
sub
test
test
pop
mov
xor
je
sbb
les
sub
insb
dec
push
test
pusha
xor
and
lahf
and
inc
and
adc
mov
sub
cmpsb
and
out
xor
aas
testl
pop
cmp
data16
xor
rcrb
or
rcll
xchg
jae
stos
sbbl
mov
ror
loop
mov
std
jge
dec
lea
enter
mov
dec
mov
fsubrs
outsl
and
flds
test
adc
aam
jmp
outsl
mov
test
outsb
add
das
std
loopne
loop
cwtl
shll
jne
xor
test
push
test
popa
or
sbb
push
sub
or
cwtl
adc
rcrb
nop
push
imul
push
jns
pop
pop
idivb
fucomi
mov
aas
jns
stc
sbbb
fwait
sbb
adcl
inc
pop
sub
testb
gs
repz
push
jle
shl
jno
push
push
out
adc
mov
or
lcall
xchg
xchg
or
inc
adc
lcall
fildll
mov
data16
div
mov
cmp
cli
sbb
ljmp
adc
mov
lret
andl
cld
aaa
push
cwtl
out
arpl
add
out
test
shl
xchg
mov
test
mov
insb
and
cmpsl
push
enter
pop
inc
arpl
and
bound
movsb
ficoml
stos
push
pop
pop
and
xor
fistpl
out
jns
in
xor
lret
pop
xchg
pop
pushf
inc
or
push
lods
xor
mov
mov
or
push
add
xorb
jne
pop
xor
cli
aad
ja
rcll
leave
jae
or
mov
outsb
idivl
pusha
add
loop
push
loopne
push
rorb
rcrl
inc
pop
mov
leave
clc
jne
ds
rorb
mov
mov
out
add
addl
pop
mov
stc
push
inc
mov
pop
ficoml
push
push
fnstcw
daa
cmp
inc
dec
into
dec
xchg
sub
xchg
push
mov
loopne
imul
and
ret
stos
push
inc
adcl
cmpb
sarb
mov
dec
cmp
imulb
fidivrs
and
push
in
dec
cmpsb
push
pushf
adc
jmp
fsub
test
cmpb
xchg
lahf
mov
mov
mov
addb
dec
in
int
sub
loope
int3
dec
fucompp
pop
lods
fs
stos
sbb
data16
addr16
mov
add
fwait
mov
ljmp
dec
test
xorl
add
sbb
out
ds
movsl
jp
out
dec
test
push
stc
sbb
mov
mov
popf
leave
les
cmp
pop
ja
aas
pop
lret
push
iret
inc
mov
cmp
pop
xchg
ljmp
mov
fwait
cli
inc
sub
imul
je
js
mov
adc
and
inc
inc
in
and
movsb
or
pushf
xchg
lret
lret
popf
jno
mov
cmp
jle
cmp
out
sti
or
lock
insb
test
scas
xchg
push
lahf
aas
inc
int
jae
loop
sub
das
mov
jnp
jbe
imul
int
lcall
cmp
mov
adc
or
repnz
cli
add
sub
sub
test
les
repz
mov
jne
sub
mov
mov
jb
xchg
sbb
fdiv
out
push
mov
mov
frstor
xchg
xchg
mov
adc
leave
pop
jmp
xchg
insb
jbe
out
daa
popf
fs
or
xor
xchg
push
data16
push
dec
adc
hlt
out
xchg
stos
xchg
bound
cmpsl
push
jl
or
dec
stos
rcl
gs
sub
jle
testl
aaa
ret
das
add
les
sbb
ds
scas
pop
je
mov
mov
int3
sar
lret
pop
adc
stc
fcoml
fcomi
pop
int
cmp
sub
pop
fsubrs
push
je
push
ja
and
jl
js
jno
loopne
mov
add
loopne
repnz
sbbb
mov
pop
lods
sub
push
pushf
test
jp
daa
scas
cmp
sbb
rorl
add
and
xorb
gs
or
push
pop
cmpsb
dec
adc
rcl
cmpsb
and
fmuls
push
mov
lret
mov
jne
fwait
test
jmp
int3
loop
or
adc
and
adc
ja
push
pop
push
iret
xor
sbb
mov
shlb
adc
mov
aam
test
ret
test
push
cmp
pop
sub
pop
jbe
xchg
fdivrs
cmp
jmp
push
das
sbb
pop
rol
inc
xor
addr16
xchg
inc
aam
push
sbbl
inc
testb
ljmp
pop
cmp
lret
or
cmp
addr16
dec
aad
mov
mov
xor
cmp
mov
rcrl
mov
pop
xor
jge
popa
pop
jecxz
mov
sub
aam
or
andl
imulb
mov
scas
lea
or
inc
sbb
mov
rorl
ret
je
adc
push
jmp
in
or
shrb
scas
mov
fldenv
dec
loopne
sbb
mov
sub
jge
sbb
xchg
mov
imul
scas
ret
in
add
ss
mov
push
jne
icebp
ret
push
add
addr16
xor
imul
adc
stc
inc
mov
cwtl
sub
sbb
stos
inc
mov
inc
aaa
jnp
mov
push
xor
add
or
cs
sbb
faddl
jb
sub
in
push
data16
call
sbb
mov
pop
mov
inc
mov
push
mov
test
adc
dec
test
leave
lods
das
push
xor
pushf
rorl
ljmp
subb
scas
out
pop
aaa
push
add
lret
pushf
jge
inc
mov
mov
push
jge
jae
and
stos
dec
sahf
pop
push
push
fsubs
punpcklbw
xchg
ljmp
or
popa
std
pop
ds
push
pop
imul
sub
and
cmpsb
dec
imulb
cmp
jno
aaa
sub
inc
jnp
in
out
jl
ret
cmpsb
cmp
and
lods
mov
or
addb
sbb
hlt
jl
mov
and
mov
mov
shlb
xor
mov
out
push
mov
sbb
shrl
cli
pop
xchg
jne
rcrb
rolb
aaa
das
mov
mov
cmp
bound
in
popa
xor
add
xlat
sbb
cltd
lcall
mov
sbb
adc
adc
rcrl
rcrb
dec
cmp
mov
out
mov
inc
cltd
dec
lahf
pop
test
sub
dec
insb
xchg
sti
sub
jle
pop
hlt
push
jmp
movsb
add
mov
std
shlb
dec
mov
inc
leave
jmp
inc
add
jae
dec
push
ret
in
lret
mov
movsb
out
das
add
popa
mov
mov
lods
cmpsb
or
in
xor
sbb
gs
inc
cmp
sti
push
inc
sbb
or
xchg
popa
sti
loope
ds
not
mov
push
aam
sbb
lock
adc
into
or
fcoms
add
data16
push
icebp
push
mov
ror
call
mov
pop
jmp
pusha
cmp
aad
out
scas
sti
cmp
push
cmp
adc
aas
and
push
sbb
and
and
or
mov
je
sub
aad
fcomp
movsb
repz
mov
pop
jo
add
test
pop
stos
sbb
pop
mov
xor
iret
repnz
call
adc
pop
jg
push
mov
and
cmc
xchg
or
jecxz
sbb
xor
enter
adc
adc
xchg
fidivrs
rclb
arpl
rcll
ret
xchg
es
cs
xchg
sub
daa
add
cs
sbb
mov
fidivrl
mov
inc
lret
xor
add
fcmovb
lds
sub
out
mov
ret
mov
dec
movsb
and
neg
outsb
mov
mov
adcl
ret
adc
inc
push
scas
insb
mov
repnz
jp
and
lea
fiaddl
cmp
sbb
fcmovbe
outsl
push
repnz
aam
insb
push
pop
ds
enter
or
ror
jbe
mov
jp
or
push
sbb
jge
stc
or
insb
mov
push
insl
sub
arpl
push
sahf
mov
out
dec
test
fcmovne
lods
mov
sbb
push
jo
jno
mov
mull
mov
in
popa
aad
xor
pop
dec
mov
xor
fcompl
mov
out
and
popa
add
sbbb
test
dec
xor
scas
pop
jle
rol
loopne
adc
insb
sbb
lods
jne
cmp
pop
testl
fistpl
mov
xchg
bound
inc
int
fsubrl
lods
xchg
mov
in
jecxz
out
lods
clc
jl
test
jno
std
jmp
outsb
sbb
mov
imull
gs
iret
mov
in
loope
je
push
jp
mov
shlb
addb
adc
sub
jmp
dec
xor
add
fiaddl
jmp
insb
mov
inc
inc
xor
lock
inc
call
cltd
mov
push
aas
out
dec
rorl
mov
mov
mov
je
lock
or
loop
adc
test
imul
cmp
mov
int
sub
mov
cmp
push
lret
cmp
sub
jg
sbb
xlat
nop
cmp
and
xchg
mov
scas
pushf
cmc
mov
push
xor
clc
imul
and
mov
or
lret
dec
shl
daa
ljmp
or
loopne
rcrl
call
add
push
dec
jg
cld
mov
test
in
sar
iret
mov
cwtl
jmp
or
mov
mov
or
mov
or
lret
jnp
lret
outsl
cs
pop
std
inc
pop
mov
mov
popa
imul
insl
push
mov
test
mov
jno
sbb
pop
or
bound
mov
inc
movsl
adc
push
add
sbb
orb
cltd
xchg
mov
or
sub
fdivs
jle
sbb
aad
test
scas
jmp
add
mov
outsl
xor
sbb
jo
xor
xor
push
mov
fsub
and
dec
jecxz
sbb
filds
insl
xorb
jge
gs
mov
dec
test
push
cmp
push
enter
in
aad
sub
pop
es
jecxz
push
xlat
aaa
xchg
les
or
sbb
lret
pop
pop
int3
rclb
push
stos
mov
jns,pn
jno
inc
hlt
and
das
sbb
scas
cmp
clc
lock
shll
dec
movsl
cmpsb
dec
cli
rcrl
rclb
push
xor
nop
xorl
out
aad
loope
mov
in
movsb
fistl
lret
aas
cmpsb
push
les
addb
xor
testl
scas
sbbb
lds
push
mov
dec
stos
cli
test
mov
xor
fildl
and
inc
xor
leave
lcall
lret
cmp
mov
fsubl
jl
mov
sbb
sbb
mov
out
sub
test
sub
jp
shlb
adcb
icebp
mov
pop
mov
sub
and
xor
cltd
and
xchg
push
jg
fisubs
pop
cli
fistpll
mov
jbe
xchg
push
sbb
jge
pusha
add
jmp
inc
outsb
mov
sub
out
sti
xchg
sub
pusha
jecxz
adcb
pushf
sbb
jae
inc
int3
adc
out
aas
sbb
dec
gs
stos
out
stos
and
loopne
mov
adc
dec
xchg
jp
jl
insb
cmp
jle
sbb
ret
xchg
ds
or
mul
mov
aam
movsl
xor
cmp
or
mov
push
cmpsl
dec
jl
mov
je
loope
lock
cmpl
call
add
out
pop
push
mov
pushf
add
or
cmp
push
aam
mov
rcll
ds
jbe
xor
imul
sbb
xor
mov
mov
and
and
pop
outsb
mov
es
shlb
cmp
xchg
das
jb
js
mov
fwait
ljmp
mov
mov
out
arpl
stos
mov
pop
hlt
rcl
fistpl
stos
jle
cli
mov
add
xor
jl
cmpb
ss
mov
sub
inc
dec
mov
cmp
lods
push
inc
inc
test
mov
pop
sub
hlt
pop
mov
or
test
mov
cmp
std
add
jmp
xchg
mov
dec
cld
test
adc
jg
fwait
push
inc
mov
mov
adcl
inc
mov
xor
loop
test
add
popa
mov
jmp
mov
jg
cmp
hlt
cld
or
cld
std
test
dec
mov
push
fnstcw
mov
pop
pop
lods
arpl
fucomp
imul
and
je
fsubrl
movsb
test
cld
dec
xchg
xor
and
pop
lret
bound
das
and
stos
aam
xor
bound
hlt
and
sub
dec
sarb
mov
ss
mov
adc
pop
pop
mov
mov
out
clc
push
mov
and
loop
dec
sbb
mov
stos
push
dec
fdivrs
pop
outsl
mov
xchg
test
lds
pushf
mov
cltd
inc
sbb
ret
jmp
mov
jle
or
ss
inc
adc
mov
or
je
call
jmp
xchg
nop
dec
hlt
pop
stos
imul
insb
test
xchg
shrb
rolb
xchg
fmul
mov
shlb
sub
fiadds
jmp
addr16
pop
xchg
les
sti
push
mov
jle
mov
imul
mov
jnp
pop
xchg
movsl
or
repnz
nop
dec
inc
cwtl
mov
mov
lods
sahf
push
pop
ss
outsb
js
std
pop
push
add
sbb
mov
mov
test
push
std
iret
mov
pushf
leave
daa
dec
fcompl
in
and
leave
dec
cmp
out
mov
adc
hlt
ret
push
test
sbb
jp
push
xchg
leave
jne
dec
push
cld
loope
clc
xor
pop
lods
push
dec
aam
testb
lcall
sub
and
mov
xor
lahf
ret
mov
std
nop
repz
xchg
js
pop
test
subl
es
mov
mov
incl
sub
sarl
jne
leave
or
inc
dec
es
test
bound
por
inc
fwait
sub
gs
mov
or
pop
or
lret
sbb
arpl
lock
outsl
add
jg
push
outsl
add
xchg
mov
hlt
add
adc
jns
cmp
pop
pop
inc
ret
lds
adc
out
sbb
pop
sub
scas
pop
xlat
mov
jmp
dec
pop
aad
jnp
xchg
fnstenv
fwait
stos
dec
mov
mov
adc
push
or
adc
jns
sub
movsl
jnp
je
stc
imul
push
pop
ljmp
dec
test
stc
push
lea
pop
sbb
dec
aad
mov
dec
mov
dec
aaa
nop
arpl
dec
sbb
mov
insb
test
fistpl
fsubl
add
push
iret
push
add
and
cmp
inc
add
inc
lock
pop
test
adc
pop
push
add
mov
push
cld
dec
rsqrtps
out
lock
jnp
insb
pop
stos
daa
push
adcl
dec
jb
out
adc
xlat
out
jl
cs
mov
or
mov
mov
adc
lret
xchg
push
sahf
xor
push
test
inc
jecxz
lock
pushf
nop
cmc
inc
mov
xchg
cltd
adc
xchg
pusha
jb
and
adc
mov
aam
ljmp
mov
mov
lret
fldenv
ljmp
divl
call
lcall
bswap
loopne
lea
sub
mov
loope
pop
bound
jmp
paddusb
shrl
add
lret
cmp
pop
daa
shll
jb
mov
sbb
pushf
add
popa
test
stc
je
pop
push
nop
or
outsl
add
imul
stos
comiss
cmp
xchg
dec
daa
int3
or
rcr
rclb
dec
or
pusha
xor
mov
inc
jbe
mov
in
add
push
add
xor
dec
mov
adc
ret
jle
lahf
in
test
into
dec
mov
rclb
add
dec
xchg
cmc
out
into
popa
imul
xlat
jne
aaa
push
scas
dec
mov
xorl
or
push
icebp
inc
mov
cmp
in
jnp
and
mov
mov
dec
inc
mov
loop
and
mov
je
pop
movsl
adc
xor
fs
sbb
dec
shr
mov
mov
test
lds
popf
xchg
loop
cs
test
loopne
int3
shll
cmp
and
jmp
add
aaa
mov
mov
lea
es
inc
mov
aas
xor
aas
lret
xchg
pop
fdivr
sub
call
pop
inc
jle
push
cmc
ljmp
fldl
fldpi
or
jo
pop
std
pop
dec
sub
fisttpl
rolb
push
or
xchg
push
inc
int
xor
call
fldl
jmp
pop
shrl
mov
push
mov
enter
mov
ja
ret
clc
sbb
xor
leave
sahf
mov
es
or
and
addr16
mov
xchg
adc
inc
and
push
pop
pushf
push
or
mov
sbb
inc
ljmp
and
ret
stos
scas
jecxz
and
cmp
je
push
adc
dec
mov
xor
mov
inc
decl
cltd
enterw
mov
and
das
mov
and
adc
pop
cmp
dec
mov
cli
mov
pop
mov
mov
icebp
cmp
inc
push
sub
pushf
inc
cmp
test
adc
jmp
mov
insl
sahf
push
sub
push
leave
pop
inc
test
adc
nop
pop
imul
cwtl
mov
push
sub
idivl
push
xchg
push
fcoml
iret
lret
cmp
loopne
scas
push
add
dec
sbb
pushf
ljmp
jo
insb
xor
pushf
xchg
idiv
lahf
cmp
cli
xchg
es
clc
je
xchg
ret
ja
mov
or
inc
dec
movsb
jl
insb
lds
sub
fcoml
in
inc
pushf
push
mov
jne
test
movsl
jl
insb
lds
sub
fcoml
in
inc
pushf
push
mov
jne
test
and
sbb
mov
cmp
sub
pop
adc
in
inc
pushf
push
mov
jne
test
movsl
jl
insb
lds
sub
fcoml
fwait
xor
inc
add
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
int3
cmp
sub
cs
dec
push
mov
xor
popa
fidivl
mov
xchg
sub
jp
push
pop
icebp
dec
push
mov
xor
popa
fidivl
pop
cmp
sub
sbb
sarl
push
pop
or
test
inc
ljmp
push
mov
mov
in
out
mov
repnz
cs
and
inc
add
or
cmc
xchg
subb
lret
inc
test
in
lret
fimull
loopne
cld
shrl
cmp
dec
sub
leave
lret
inc
jp
push
ficomps
xchg
and
jmp
push
sarb
loopne
repz
inc
mov
int3
test
mov
add
insb
pop
int3
jno
jp,pt
xchg
movsl
movsl
mov
stos
fisubs
mov
xor
add
add
xchg
rcrb
adc
dec
mov
imul
mov
les
popa
lret
xchg
sub
jp
push
pop
dec
dec
repz
das
mov
cli
dec
ljmp
out
in
fisttps
movsb
sub
aas
nop
cmp
push
ret
jno
push
in
xchg
aas
xchg
adc
jnp
pusha
out
jp
test
mov
lea
push
movb
xor
xor
outsb
lock
push
shrl
pop
icebp
dec
add
xor
popa
fidivl
cmpl
mov
sarl
loope
icebp
dec
add
xor
popa
fidivl
cmpl
out
fisttpl
ret
call
fisubl
test
mov
sub
push
movsl
push
stc
push
xchg
loop
dec
bound
mov
test
dec
jecxz
add
adc
mov
pop
and
sti
test
xor
jne
mov
movsl
sub
mov
xor
xlat
out
xchg
or
xor
fwait
and
ret
dec
mov
xchg
cmp
aam
mov
lret
mov
call
fwait
mov
outsl
add
xchg
adc
mov
dec
movsb
adc
into
xchg
adc
in
enter
inc
out
sub
stos
jge
sub
push
xlat
jne
xchg
pusha
jge
dec
mov
push
stos
aad
push
scas
ret
fimull
jecxz
lds
xchg
pop
cwtl
jl
insl
mov
imul
test
push
add
pop
pop
mov
ss
test
dec
adc
dec
loopne
dec
jg
fsubp
int
in
ret
mov
movsb
and
int3
shl
popf
lea
add
dec
sahf
mov
ljmp
lock
loop
jmp
jbe
incb
test
loopne
insb
sub
lea
sti
loope
sbb
or
cmp
scas
adc
jecxz
mov
jnp
add
daa
outsb
sub
rcr
push
hlt
mov
push
lock
jg
and
mov
cmp
lea
mov
ficompl
push
lds
fisubrl
xchg
mov
dec
inc
iret
je
lds
addr16
mov
test
cmp
sub
addb
adc
popf
pop
inc
movsl
jl
mov
jle
or
xchg
insl
adc
pop
adc
add
mov
dec
test
adc
test
inc
popf
hlt
popf
push
sbb
iret
fdivrp
xor
test
movsl
push
xorl
sbb
sti
jg
cld
inc
inc
ljmp
pop
loope
out
aas
dec
inc
xchg
jmp
pusha
cmpl
sbb
jmp
inc
fidivl
notb
jbe
mov
dec
adc
mov
pop
bound
jp
push
out
and
popf
mov
into
mov
and
fsts
or
jl
jbe
insb
fisttpll
xchg
pop
cmc
arpl
in
fwait
cltd
cmp
mov
mov
sti
dec
clc
xchg
push
leave
fsubl
mov
or
stc
iret
mov
rclb
inc
and
pop
pop
add
fnsetpm(287
push
push
fsubrl
cmpsl
cmc
aad
push
and
repz
fistps
inc
movsl
movsl
insl
mov
mov
int3
inc
pop
jbe
pop
shr
jb
lock
xor
push
jnp
add
addr16
fs
mov
ret
std
sbb
movsb
lds
int3
jg
lods
out
sti
adc
or
mov
sahf
inc
je
add
popa
mov
pop
cmp
xor
mov
add
bound
or
adc
test
out
jl
data16
add
loope
test
fisttpl
inc
arpl
add
jo
loop
add
xchg
jecxz
scas
xchg
testb
daa
xor
inc
push
into
and
sbb
stos
mov
mov
cmpsb
mov
loopne
aaa
mov
cmp
test
add
insb
push
fisubl
test
mov
pusha
xchg
fsubp
lock
mov
sub
stos
mov
jb
push
push
fcoms
sbb
adc
cmc
cmp
pop
jmp
inc
xchg
popa
adc
pop
inc
call
sub
and
push
fcompl
pop
dec
pop
jnp
mov
sti
mov
popf
andb
fldl
mov
jns
add
fstpl
out
and
ds
arpl
or
cmp
arpl
es
scas
mov
or
hlt
sub
mov
sbb
jp
stos
stos
xor
jecxz
iret
stos
fwait
add
xlat
xchg
sub
arpl
mul
xor
sbb
nop
add
mov
and
leave
outsl
inc
jge
xchg
movsl
cld
movsb
das
fsts
jne
aad
pop
pushf
call
xlat
mov
ss
push
dec
cmp
dec
loopne
fs
fprem
mov
sub
in
repnz
fists
lret
fstpl
dec
roll
sub
lds
mov
mov
test
cmp
mov
xor
out
int
push
sub
lds
dec
daa
in
shr
mov
mov
jno
sbb
lods
orl
jecxz
mov
push
mov
jbe
mov
inc
loope
repz
push
sbbl
xor
loop
jp
fsubrs
jb
lock
sbb
jmp
rol
jle
push
jmp
adc
shrb
mov
out
ja
insl
pop
add
iret
jp
stos
cmp
mov
shlb
jnp
jle
in
aam
inc
or
rcll
cmp
adc
cli
fsubs
xor
dec
jl
adc
notl
stc
loopne
aam
stos
lock
mov
push
test
cmc
jge
dec
dec
mov
cli
in
and
jb
mov
push
mov
and
test
sub
loopne
out
frstors
jl
aaa
xchg
push
inc
xor
int3
leave
inc
or
pop
outsb
in
push
add
push
add
flds
bound
inc
ss
ss
gs
pop
ja
hlt
pop
incl
inc
loop
mov
jnp
in
pushf
stc
or
push
push
ds
aaa
fs
movsb
mov
or
data16
push
das
sbb
jmp
ljmp
aaa
push
inc
icebp
and
scas
dec
jne
xchg
imul
cmp
jp
push
pop
pop
adc
mov
mov
add
xlat
int3
mov
repnz
mov
pop
pop
cmpsb
xor
les
sbb
int
fiaddl
or
jo
sbb
neg
lcall
cmp
xor
push
adc
dec
ret
mov
mov
mov
mov
and
daa
sti
lods
out
pop
sub
and
cltd
ss
sahf
mov
pop
xchg
mov
dec
cmc
loope
dec
and
xchg
inc
push
daa
mov
xchg
dec
xchg
or
sbb
sbb
xor
jecxz
sbb
xchg
add
inc
subb
pushf
inc
stos
mov
jp
xchg
shl
or
push
in
pop
aam
sti
push
sbb
enter
sub
icebp
cmc
aad
ds
inc
xor
inc
in
jg
mov
cmp
pop
and
xor
gs
cmp
mov
jo
mov
imul
cmp
ja
cmp
xchg
mov
pop
add
adc
inc
push
ret
in
scas
std
sub
int3
out
aam
and
mov
xchg
daa
loopne
mov
sbb
adc
xchg
adc
lret
mov
sti
push
adc
enter
arpl
dec
jge
cmc
sbb
jno
sbb
and
jae
add
daa
xchg
into
in
cmp
push
push
fists
rcr
push
enter
or
repnz
std
pusha
or
hlt
aam
pop
xor
and
lods
pop
cmp
dec
cmpsl
dec
xor
out
ja
dec
adc
sbb
movsb
xchg
data16
or
xor
jbe
shll
fistpll
mov
jnp
dec
add
pushf
sub
jmp
testb
and
lods
cmp
icebp
sub
cmp
dec
push
inc
mov
gs
mov
adc
into
or
and
mov
push
aas
stc
in
inc
mov
movsl
sbb
add
xchg
repz
adc
rcrl
insl
sbb
or
frstor
push
jbe
outsb
mov
inc
popf
cli
mov
push
popa
mov
jmp
stos
jnp
push
fists
fisttpll
fnstenv
outsl
test
fdivrl
or
mov
mov
or
cmp
je
cmp
dec
cld
jl
lea
dec
add
outsb
es
push
fcomi
mov
dec
push
xchg
jnp
clc
jno
call
sub
popa
cmpl
mov
xor
mov
inc
sbbl
or
inc
adc
lock
sub
je
or
jmp
insb
mov
push
inc
mov
data16
int3
adc
bound
test
xchg
and
mov
inc
cmp
pushf
cmp
adc
jmp
sbb
roll
sub
imul
mov
cmp
pop
push
out
cs
lcall
and
sti
mov
cli
xor
add
shll
sbb
sbb
mov
mov
mov
and
sbb
test
mov
xchg
stos
add
pop
push
shll
leave
fdivl
inc
fwait
mov
cwtl
fcom
shll
std
adc
es
aam
xchg
dec
sub
lds
nop
and
lahf
jns
xor
lock
push
push
pop
or
mov
out
jbe
repz
mov
pushf
mov
mov
push
inc
fs
movsl
mov
sbb
sbb
pop
test
rcrl
xor
jge
pop
inc
add
and
jmp
dec
adc
xor
lods
mov
or
out
jle
lods
loope
mov
sbb
xorl
jle
pushf
out
push
xor
sub
add
stos
movsl
fwait
cld
ja
insl
xor
dec
not
jno
cmpsl
in
mull
movsl
lcall
insl
lret
inc
mov
fs
pop
jae
mov
inc
pop
popf
hlt
cmp
movsb
filds
xlat
jns
pop
dec
sbb
subl
mov
stc
pop
inc
dec
or
and
out
push
aaa
sub
push
jns
sar
cld
cli
jle
imul
push
jbe
dec
dec
movsb
mov
add
mov
or
or
dec
insl
icebp
mov
cli
cwtl
popf
rcll
xchg
dec
cmp
jecxz
out
outsl
loope
mov
jl
cmpl
dec
dec
dec
dec
or
gs
rcll
or
mov
xchg
mov
mov
adc
ds
or
scas
arpl
div
dec
add
push
loopne
sarl
jge
imul
mov
or
push
lret
mov
sbb
pop
pop
adc
imul
scas
push
inc
inc
aad
lock
inc
inc
jne
cs
out
cmpsb
pop
mov
js
mov
xor
mov
gs
cmp
sbb
popa
arpl
xchg
stos
jae
inc
push
fnsave
xchg
mov
fwait
cmp
push
sbb
aas
dec
adc
sub
inc
add
mov
push
inc
rcl
xor
notb
inc
lods
mov
jmp
xlat
int3
std
adc
push
dec
cmp
add
and
adc
xor
inc
leave
lcall
sub
sbb
mov
adc
pop
or
cmp
add
xlat
prefetch
or
or
cmp
jbe
xchg
stos
pop
pop
and
ret
dec
out
cs
insb
mov
jg
ja
hlt
lock
outsl
pop
arpl
stos
mov
int
inc
jno
pop
mov
pop
mov
push
mov
ficompl
cmp
add
fbstp
ret
in
icebp
movsb
ficoml
fildl
rcll
loop
xchg
pop
jge
inc
xorb
hlt
sub
adc
xor
xchg
stos
mov
push
xchg
dec
cwtl
xchg
pop
int
and
out
inc
push
pop
and
repnz
pop
scas
jmp
nop
jecxz
add
movsb
xor
mov
mov
stos
mov
nop
add
inc
dec
lret
mov
lret
xor
dec
jnp
pop
outsb
push
dec
sbb
pop
or
lret
xor
in
lods
pop
popa
pop
pop
push
cmp
out
fnstsw
dec
jp
stos
pop
les
adcb
das
xchg
cmc
sub
lea
pop
call
push
mov
loope
aam
xchg
xor
test
push
inc
popf
xor
fdivp
and
fwait
mov
lret
mov
push
xchg
jnp
aam
nop
das
pop
orl
and
jae
mov
adc
cltd
rolb
out
je
dec
cwtl
sub
movsb
loop
adc
aaa
and
cs
mov
jle
pop
jle
pop
jmp
add
bound
leave
add
mov
shl
js
jg
xor
dec
pop
inc
dec
mov
loope,pt
and
push
xor
or
shr
movsl
sbb
sbb
fnclex
cmp
lods
ret
xlat
sbb
es
jp
xchg
cmpsb
ficoml
imul
addr16
add
insb
orb
xchg
sub
ret
es
xor
lods
ds
sahf
outsl
cld
push
add
pop
mov
adc
jp
popf
popa
mov
cmpsb
icebp
test
js
mov
xor
add
cmpsl
enter
mov
push
fcomi
add
pop
je
enter
outsl
arpl
xchg
xlat
clc
ds
rorb
out
jbe
lahf
out
lret
sbb
pop
cmpsl
push
fsub
fiaddl
add
mov
mov
inc
dec
mov
je
add
adc
mov
shlb
decl
cmp
mov
push
inc
sahf
jl
stos
sub
arpl
out
cmpsl
sub
in
jp
adc
sub
ret
cmp
iret
into
data16
and
jmp
jmp
sub
pop
hlt
test
mov
addb
pop
outsl
mov
hlt
aad
shll
add
arpl
xchg
imul
test
and
inc
pop
sbb
cltd
out
addr16
rcrb
clc
xchg
lods
or
mov
adcb
lods
lods
mov
pushf
cltd
clc
adc
cltd
inc
push
mov
push
jbe,pt
outsb
lods
add
sarl
xchg
sub
fstpl
rcrl
xor
adcl
inc
mov
mov
xchg
sbb
dec
mov
cwtl
sub
stc
mov
push
xchg
push
cli
fs
mov
js
imul
pop
xor
out
xor
push
loopne
loope
out
subl
shlb
pop
add
divl
dec
test
xor
ret
fsubrs
pop
mov
adcl
and
pop
adc
mov
std
pop
inc
out
cmp
rorl
psadbw
push
repnz
mov
popf
or
or
scas
aas
inc
and
insb
push
push
cmpsb
mov
lcall
and
mov
call
push
negl
xchg
dec
lods
xchg
lods
ficoml
push
mov
outsl
aad
fmul
add
stc
test
popf
hlt
daa
push
fimull
pop
pop
les
data16
mov
pop
into
add
adc
push
lds
addr16
cli
mul
pop
pop
ret
cmp
mov
pop
inc
inc
rorb
mov
cmpsl
add
mov
xor
scas
fsubrp
in
in
cmp
xchg
fisttpl
mov
xor
or
clc
frstor
xchg
loop
mull
push
ljmp
xor
pop
mov
xchg
scas
jg
std
jnp
pop
mov
hlt
js
xchg
jb
rolb
fsub
push
addr16
mov
loope
test
xchg
loopne
add
daa
cltd
in
sbb
push
cmpsb
sbb
and
push
popf
dec
lret
popa
aaa
push
in
and
adc
push
rolb
mov
ret
popf
gs
xchg
enter
xchg
xchg
fbld
loop
pop
arpl
mov
arpl
rep
add
int3
outsb
decl
jne
pushf
mov
scas
or
nop
sbb
push
mov
push
adc
movsl
cs
and
mov
or
push
mov
jns
add
imul
movsb
stc
push
and
test
mov
mov
gs
or
inc
mov
add
xor
movsb
bound
adcl
xor
lcall
push
xchg
xchg
pop
pusha
arpl
es
and
fidivs
mov
mov
inc
adcb
jg
and
dec
in
xchg
mov
outsl
push
push
ds
adc
jne
rcl
xchg
cld
cltd
loope
loope
lock
insb
or
jecxz
ss
jae
fsubs
add
aam
mov
cmp
gs
inc
daa
ror
scas
mov
cwtl
push
fisttpl
cld
sbb
add
or
cwtl
call
or
shlb
sub
fimuls
mov
test
pop
pop
dec
jmp
jns
sub
repz
dec
pop
outsl
out
push
out
insl
mov
lea
mov
adc
mov
and
sub
xor
mov
addl
mov
je
hlt
adc
xchg
out
imul
leave
and
jnp
pop
rorl
cmp
adc
jbe
fstps
pop
hlt
sahf
out
mov
push
fistps
add
pop
push
outsl
pop
sub
fidivl
pop
sub
pop
mov
out
mov
fs
add
push
and
or
adc
bound
cmc
scas
std
xchg
or
je
jle
xchg
pop
fnstsw
into
mov
push
sbb
or
jg
add
push
mov
arpl
out
lods
out
mov
pcmpgtw
mov
mov
fwait
adc
lods
loope
fs
icebp
lds
push
loop
and
push
rorl
out
dec
mov
cmpsb
int3
arpl
daa
out
cmpsl
jno
pop
mov
jge
adc
xchg
add
inc
in
or
pop
pop
stc
ja
icebp
popa
jge
arpl
insl
mov
mov
push
push
hlt
insl
sbb
lahf
or
call
cmp
mov
mov
xchg
sub
or
push
cmp
ret
xor
lret
fcomps
pop
mov
lcall
adc
mov
je
rcrl
adc
pop
pop
inc
adc
dec
outsb
arpl
movsb
adcb
jb
out
ret
mov
test
xlat
xor
pop
xchg
shrb
movsl
cmc
mov
jmp
cmp
pop
pop
dec
mov
mov
data16
call
fldt
jo
push
jp
dec
mov
das
xchg
fwait
inc
mov
jbe
dec
ja
lret
push
rol
xlat
fxch
xchg
ret
iret
xlat
adc
pop
push
not
lahf
gs
daa
xchg
incl
mov
hlt
fsubs
fwait
test
cwtl
xor
mov
inc
cmp
dec
push
add
imul
mov
jb
in
cld
push
add
iret
add
and
leave
push
jo
vpcmov
in
xlat
aaa
push
movsl
fsubrl
mov
inc
add
xor
adc
cmc
or
testb
mov
add
adc
mov
cmp
push
jne
adc
jo
imul
lret
call
dec
sub
dec
xchg
scas
push
lds
mov
leave
pop
fnstenv
cmp
sbb
aad
in
adc
data16
xchg
je
or
inc
or
cmc
jmp
xor
popa
iret
cmp
ds
sbb
mov
mov
xor
cmc
xor
movsl
bound
std
xor
jnp
xor
dec
or
inc
jns
pop
jb
ja
lret
movsb
addr16
add
add
mov
pop
sbb
popa
pop
jbe
xchg
sbb
fucomp
mov
repz
shrl
aad
sbb
stc
loop
jecxz
pop
and
outsb
inc
add
mov
or
dec
addl
mov
jge
enter
sub
aaa
mov
stos
stc
mov
not
cmp
ljmp
dec
mov
notb
and
in
test
cmpsl
cmp
inc
test
lret
cmp
sub
jns
rcll
icebp
fwait
jns
int3
and
sub
testb
jmp
pop
adc
dec
jge
mov
scas
mov
cmpsb
sbb
mov
mov
or
jl
jecxz
mov
mov
aad
out
out
cmp
or
push
mov
or
loope
adc
mov
pop
jecxz
rcr
daa
hlt
pop
pop
push
add
fistpll
js
pop
test
and
mov
or
loop
xchg
shll
jae
sbb
stos
cmpb
lea
add
repnz
imul
scas
cmp
sub
jmp
ret
and
ret
sub
lahf
mov
sbb
mov
mov
mov
cmp
mov
dec
pandn
jl
mov
xlat
push
shrl
les
rcrl
fld
jbe
in
rclb
or
xor
roll
lods
mov
loopne
pop
aaa
testl
out
or
jge
add
push
fldln2
iret
insl
popf
clc
lcall
leave
cld
fisubs
enter
hlt
push
pop
push
sub
ds
mov
insb
push
movsl
loope
jp
out
lods
out
in
out
mov
sti
into
add
lods
iret
psubusb
std
sti
push
mov
sub
jbe
push
sub
loopne
lret
inc
mov
xchg
inc
lods
dec
lds
mov
dec
jp
mov
sbb
mov
test
and
lcall
xchg
jge
fidivl
sti
jl
cmpsb
loopne
mov
sub
add
xchg
pusha
mov
out
sahf
push
outsb
pop
loopne
repz
orl
adc
adc
movsl
orb
and
ret
jg
bt
add
jmp
arpl
popa
mov
sbb
jle
pop
inc
inc
stc
pop
cmp
dec
jnp
inc
cmc
pop
push
pushf
inc
mov
test
push
arpl
jbe
adc
sub
cmpb
jmp
stos
push
fs
cmp
adc
push
cmp
iret
decl
sub
popa
ss
in
sub
mov
fldenv
and
data16
xor
jbe
xchg
mov
mov
lret
test
test
pusha
mov
lods
push
xlat
and
push
sbb
mov
and
scas
push
xor
adc
idiv
sub
fdivr
inc
addr16
xchg
push
add
scas
aad
outsl
mov
jl
lahf
insb
scas
shlb
mov
fldl
loope
jl
mov
jo
out
push
push
jae
shrb
shl
imul
ret
imul
pop
popf
add
cltd
ffreep
lods
int3
cmc
hlt
push
mov
inc
div
pop
xchg
aad
push
jno
add
mov
andl
in
loop
das
movsb
lods
nop
stc
shrb
mov
mov
mov
imulb
popa
inc
mov
sub
cmc
inc
movsb
and
sahf
mov
xchg
fmul
inc
stos
cs
fiaddl
or
stc
in
out
cld
and
jne
inc
xor
outsl
fbld
lods
adc
stos
adc
sbb
push
pop
icebp
dec
add
xor
popa
fidivl
cmpl
mov
sarl
loope
icebp
dec
add
xor
popa
fidivl
cmpl
mov
sarb
loope
lock
add
lcall
fiaddl
cltd
cmp
push
sarl
loope
jno
add
add
jb
adc
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
push
cmpsl
sbb
xchg
push
ret
dec
jecxz
test
xor
sahf
in
inc
std
push
sbb
cmp
rep
ret
jge
xchg
popf
xor
or
int
fdivl
inc
std
push
adc
add
xor
roll
leave
push
lea
xchg
adc
leave
popa
loop
nop
adc
jge
sbb
testb
or
test
jbe
gs
fs
push
clc
mov
mov
nop
jo
imull
js
cmp
sub
fsubl
push
cld
mov
jno
mov
enter
lret
sbb
arpl
subps
jg
mov
add
xor
cmp
xchg
ret
test
jge
mov
cld
loope
dec
jbe
lods
mov
loop
je
dec
insb
sbb
add
test
bound
mov
pushaw
adc
dec
divb
add
jo
arpl
mov
ss
das
sbb
xchg
pop
jecxz
rep
ret
fs
xchg
and
das
aad
lds
jle
js
dec
out
pop
ljmp
inc
xor
stc
pusha
popf
inc
fbld
mov
cmp
lock
cmp
cmp
popl
inc
call
sub
jae
es
and
push
dec
out
cmp
rep
ret
jge
lea
popf
xor
arpl
jae
inc
std
push
or
cmpl
insl
ret
jge
lea
popf
xor
arpl
jae
inc
std
push
or
push
jge
test
jo
jo
arpl
mov
add
stc
call
cmp
cmp
subb
or
rcrb
mov
stos
orb
in
xchg
jb
orl
lock
inc
imul
sbb
push
bnd
fcoml
dec
ficoml
loopne
out
shll
pop
lcall
test
enter
mov
data16
add
lcall
loope
icebp
xchg
cmp
push
adc
fadds
lahf
outsl
scas
dec
test
in
lret
pop
push
pop
mov
fadds
dec
add
andb
gs
cs
int3
es
mov
popf
sti
outsl
add
mov
inc
mov
dec
lcall
imul
pop
add
mov
sbb
test
adc
ffreep
adc
cwtl
adc
pop
cs
mov
imul
adc
clc
sbb
repnz
pop
out
enter
int
mov
inc
cwtl
gs
imul
xchg
divl
mov
dec
arpl
in
inc
jmp
shl
add
inc
push
and
push
sbb
stos
push
inc
sub
pop
dec
jns
xlat
jb
push
inc
push
dec
sbbb
in
lods
out
test
adc
add
sbb
mov
sub
test
rcrl
cmp
push
rorb
icebp
cmp
imul
xor
popf
or
pop
popa
cwtl
adc
mov
add
push
movsl
mull
pop
pop
lret
das
in
cmp
adc
fmull
adc
mov
shrb
pop
xchg
movsb
in
rorl
lcall
jmp
sub
fistl
sbb
aad
cmp
cmp
push
xor
mov
sub
les
pop
adc
das
test
pop
sub
arpl
in
or
bound
pop
clc
jle
dec
dec
and
loopne
pop
pushf
stos
pcmpeqw
cltd
add
pushf
insb
push
sarl
arpl
orl
sub
cwtl
jo
repnz
lahf
xchg
jle
sub
add
sbb
sti
orb
mov
sbb
loop
mov
filds
in
out
add
into
mov
add
out
push
add
sti
out
xor
sbb
jnp
and
mov
lods
jns
inc
cmpsb
pop
int3
in
xor
test
leave
cmpsl
adc
ss
cmp
dec
aaa
in
mov
xchg
fldt
mov
test
outsb
mov
mov
lcall
cli
dec
mov
xchg
ss
add
imul
jno
cmc
add
cmp
cmp
je
adc
dec
in
enter
lods
mov
out
movsl
les
cmp
jl
mov
aas
pop
cmc
pusha
sub
rdmsr
push
mov
and
jae
ljmp
cmp
dec
push
ret
xchg
push
test
inc
imul
repnz
xor
jl
out
mov
rolb
or
fiadds
cmpsl
push
orb
es
mov
sbb
inc
stos
daa
cwtl
jecxz
fwait
and
shl
jge
mov
repz
call
aaa
or
dec
inc
mov
jae
dec
mov
lret
in
cmp
stos
pushf
xchg
adc
mov
lcall
inc
cld
push
out
push
sbb
push
orb
sub
or
or
lock
aaa
sub
fdivs
nop
and
xchg
int3
mov
push
push
push
inc
adc
pushf
rclb
mov
cmp
pop
shlb
cmpsl
mov
mov
outsl
xchg
sub
mov
mov
mov
jmp
std
dec
mov
sbb
pushf
mov
inc
fucom
pushf
dec
icebp
sub
pop
pushf
jp
jg
sbb
lret
mov
jo
pop
jbe
lds
addr16
popa
mov
lds
in
into
out
andl
jecxz
jo
movsl
fmull
push
or
xchg
jb
mov
orl
popf
test
imul
imul
jno
push
cmp
ja
add
mov
hlt
in
movsl
out
push
mov
fwait
cmp
lock
dec
mov
xchg
inc
xchg
cwtl
hlt
fwait
mov
sbb
or
xor
mov
inc
shll
outsl
loope
fistl
xchg
repnz
mov
sub
mov
orl
dec
loope
inc
dec
fldenv
lods
int3
das
fstps
cs
push
mov
jmp
mov
dec
jle
xor
idivl
mov
jge
add
inc
jg
cld
sbb
xchg
lds
icebp
insb
lods
cmp
cvtpi2ps
gs
repnz
xchg
sarl
daa
sub
fildll
mov
dec
mov
push
or
and
scas
adc
cmp
mov
lea
mov
pop
repz
cmpsl
dec
lock
divb
enter
aaa
addl
ds
int
sub
jae
mov
fs
adc
je
xchg
fnsave
jg
sub
fisubrl
pop
lahf
or
xlat
fs
adc
adc
pop
popa
and
dec
pop
pop
xchg
push
lock
cmpsb
vsubps
clc
push
cli
push
jo
jb
jbe
imul
aad
pop
pop
push
in
lahf
push
mov
add
cld
repnz
roll
adc
xchg
je
fwait
dec
xchg
inc
cmpsb
loope
dec
mov
inc
leave
mov
jl
jnp
int3
or
sarl
push
cmp
aaa
mov
icebp
in
mov
cli
scas
jecxz
jbe
ss
sub
jg
sub
dec
jns
and
sub
pop
ror
in
push
stc
mov
jecxz
stos
lret
movsb
pop
scas
xchg
xchg
push
fnstcw
leave
xor
int
pop
bound
js
cmp
andb
sar
xchg
aas
push
js
xor
lods
pop
lret
pop
int
jle
mov
jbe
dec
dec
mov
xor
cmp
shlb
push
pop
gs
push
ret
adc
testb
ss
pop
adc
inc
loopne
cltd
sbb
jae
insb
dec
jbe
push
mov
pop
out
cmp
push
adc
pop
dec
fcomi
in
test
call
jg
push
nop
outsl
outsb
jae
cld
lods
roll
mov
push
stos
mov
daa
xchg
into
mov
or
fnstsw
sub
lea
sbb
repz
in
push
shlb
sbb
lods
and
and
fnsave
test
inc
comiss
dec
inc
inc
jmp
fsts
xor
mov
inc
cmp
scas
cmp
cmp
ss
aaa
xchg
cmp
int3
popa
dec
es
je
sbb
cmp
jge
sbb
mov
mov
test
dec
mov
jno
int
xchg
xorl
xchg
shll
scas
xor
mov
or
sbb
pop
push
popf
sub
int
fisttpll
xchg
xchg
mov
pop
pop
loope
or
ljmp
inc
fildl
repnz
ljmp
adcb
clc
fiaddl
and
in
lds
and
xchg
loopne
daa
daa
ljmp
dec
adc
mov
add
sbb
xor
pushf
xchg
insl
ljmp
cmp
sub
adc
adc
mov
add
loopne
or
xchg
loope
sbb
imul
lcall
shlb
adc
or
sub
arpl
pop
les
fisubs
fstpl
or
ret
and
rcrl
imul
pop
mov
xchg
fmull
mov
mov
movsb
test
add
inc
cmp
sahf
mov
out
mov
mov
ss
fistps
into
add
dec
addr16
shlb
dec
mov
sub
cmp
enter
rcrl
lret
jno
pushl
jb
es
out
mov
sbb
mov
push
dec
cmpsl
xor
jge
xor
xor
mov
add
adc
inc
ficomps
pop
jp
pop
push
jns
into
fsts
mov
icebp
push
xor
xlat
pop
pop
mov
sti
xor
clc
cmp
cmp
inc
add
int3
pop
sar
adc
mov
or
jae
xchg
dec
pop
insb
jo
fidivrl
jb
inc
loopne
jno
or
das
push
sub
rolb
lods
xchg
aam
out
data16
mov
pop
test
dec
popf
insl
cmp
and
jp
or
and
rcrb
nop
xlat
jno
mov
or
and
pop
sbb
adc
clc
push
in
aad
sub
sub
fisttps
pop
imul
adc
pushf
jecxz
mov
arpl
out
mov
push
mov
je
mov
mov
sarb
dec
sbb
fisubl
lods
lods
cmpsb
imul
push
in
sahf
mov
xor
push
clc
jo
sbb
xor
aaa
lret
fimull
icebp
cmp
or
pop
mov
mov
inc
and
int
mov
cmp
mov
cmp
xchg
push
test
out
movl
push
xor
fucom
aam
sbb
mov
adc
outsb
and
enter
inc
xor
adc
clc
push
mov
xchg
xor
push
and
xchg
jae
arpl
cmc
mov
fiadds
arpl
lods
scas
jns
sbb
stos
inc
iret
or
loop
fwait
leave
dec
add
mov
lods
dec
test
incb
or
mov
movsl
xor
push
jb
lcall
mov
mov
push
jae
xchg
xor
dec
mov
add
xchg
out
mov
inc
movsb
shll
sub
sub
mov
aas
pop
fwait
pop
adc
das
lret
loopne
dec
testb
lret
cli
and
jns
push
insl
fstpl
addr16
mov
push
ja
stc
cmp
jecxz
rcll
lret
jns
fnstsw
jl
js
mov
cli
and
insb
mov
iret
imul
push
dec
jl
hlt
loope
lods
sbbb
into
repz
loop
push
clc
cwtl
fimuls
hlt
outsl
imul
jge
cmp
pop
iret
imul
adc
or
movb
xor
jbe
xchg
push
adc
ret
xchg
push
sti
arpl
cli
fwait
sbb
sbb
xchg
adc
fldenv
jle
pop
fstps
lret
jmp
lods
xchg
hlt
inc
out
popa
push
push
sbb
push
lea
cmpsl
int
fsubrl
dec
jbe
push
and
xor
sbb
mul
cmp
mov
pop
xchg
jp
fsub
inc
loopne
push
mov
jle
mov
fdivl
push
push
dec
or
insb
dec
fistl
sbb
cmp
cmp
pushl
inc
lock
push
mov
fs
xor
popf
mov
or
movsb
or
push
inc
pop
cli
lahf
jmp
cmp
or
pop
out
lret
mov
loop
lcall
mov
jbe
mov
cmp
jne
add
push
pushf
adc
dec
xor
gs
pop
fiaddl
or
daa
mov
lea
je
sarl
adc
inc
in
sbb
push
jns
push
ds
daa
push
out
xor
mov
fwait
ss
sbb
push
dec
std
aas
sbb
sbb
and
push
xor
lods
mulb
daa
add
hlt
cmp
xor
scas
dec
lea
pushf
out
add
mov
lods
add
sub
sbb
stos
dec
inc
cwtl
shl
lock
jb
popa
jnp
jecxz
add
rolb
xor
or
dec
sbb
and
fimuls
out
call
dec
rcrl
out
mov
dec
lods
mov
push
jno
or
mov
jbe
lds
push
int
push
mov
dec
mov
fwait
mov
jp
pop
xor
inc
mov
jno
inc
cmp
je
mov
loop
pop
in
fs
jg
jb
scas
out
andl
cmc
jae
cltd
add
inc
jb
xor
inc
adc
aaa
jge
inc
pop
out
lods
mov
xchg
xchg
sub
pop
daa
into
lret
mov
or
mov
ss
aas
push
add
testb
stc
adc
jge
and
push
jle
cmp
xchg
popf
jne
ds
scas
inc
jecxz
cmpsb
int
inc
jae
sarl
inc
dec
jnp
lahf
xchg
mov
inc
dec
iret
jecxz
pop
addr16
lcall
xchg
jb
add
les
sub
dec
pop
fdivrs
jo
push
xor
les
shll
cli
loope
addl
mov
pop
cmpsb
aam
mov
roll
lds
aad
xchg
push
scas
push
fistpll
add
mov
jle
insb
mov
insl
adc
push
in
js
add
add
add
xlat
push
arpl
push
dec
ljmp
mov
jecxz
fidivs
loop
mov
inc
daa
xchg
idivb
xor
nop
jmp
fwait
mov
push
icebp
xchg
jle
inc
mov
dec
dec
cli
jmp
stc
mov
pop
jo
sahf
outsb
cmc
adc
cmpsb
outsb
or
cmpsb
addr16
pop
add
inc
mov
cmpsl
dec
movsb
insl
xorl
pusha
cmp
adc
jmp
std
add
jg
mov
data16
xlat
cli
and
cwtl
xchg
icebp
push
cs
inc
xor
sub
out
inc
pop
add
loopne
mov
pop
mov
aad
push
jle
shll
fwait
ljmp
dec
popa
add
test
mov
cmp
jb
dec
sbb
jmp
sub
mov
xchg
js
aam
movsb
mov
mov
mov
daa
xor
jo
jns
pop
and
inc
clc
aaa
jnp
rcrl
cmp
mov
adc
in
lds
mov
add
sbb
mov
add
push
mov
jg
sbb
xchg
movsl
scas
popf
fcoml
jle
adc
mov
xchg
cmc
loopne
xchg
aaa
popa
ret
or
inc
lds
mov
and
movsb
sub
jb
bound
adc
es
repnz
mov
das
roll
jns
push
les
out
push
movsb
mov
ds
and
inc
out
or
jecxz
adc
mov
cmp
fnstcw
pop
sahf
mov
push
mov
movsb
daa
sbb
cmp
xchg
or
add
mov
cmp
pop
cmp
xor
mov
adc
inc
repz
fdivr
sub
stc
jge
and
dec
movsl
scas
fwait
mov
adc
ret
lcall
mov
mov
xor
or
jb
mov
jae
ret
or
mov
xchg
lcall
pop
mov
arpl
lods
mov
lock
inc
push
popf
push
sbb
lea
dec
loopne
xchg
std
aas
jp
cmp
or
loope
push
das
mov
jno
add
push
in
jb
cwtl
push
inc
sbb
sub
push
xor
dec
scas
jo
jae
fistps
add
mov
xchg
movsl
mov
int3
and
roll
mov
int3
aaa
sbb
sti
sub
shr
test
sarb
repnz
addr16
sbb
jp
outsb
pop
xchg
scas
fsubs
jg
clc
add
shlb
mov
xchg
sbb
dec
dec
xorb
lods
sub
xor
insb
adc
mov
sar
ds
push
repz
xchg
lods
jmp
ret
sub
mov
sub
jmp
or
xchg
dec
push
and
mov
movsb
into
lock
cmp
xlat
inc
pop
jno
in
dec
xchg
sub
inc
or
xchg
and
iret
cmp
subb
push
sub
push
push
dec
js
nop
repnz
nop
mov
mov
push
pop
orl
push
dec
ror
xor
pushw
mov
in
mov
insb
arpl
add
adcb
adc
cmc
daa
cmp
lods
std
pop
int
cmp
jl
repnz
add
mov
stos
inc
mulps
cld
jbe
or
jbe
cwtl
fsubrs
mov
add
xchg
out
add
xor
dec
or
dec
mov
or
jmp
push
mov
sahf
test
xor
push
inc
add
arpl
out
pop
inc
xchg
ret
adc
cmp
and
ljmp
adc
sub
pusha
das
or
lods
lods
mov
sbb
or
adc
jns
gs
bound
in
lock
rorl
xor
pop
inc
dec
lea
push
not
inc
mov
mov
pop
lds
xor
jns
xchg
fs
lock
jmp
add
insl
cs
mov
mov
and
imul
mov
mov
pop
xlat
inc
loopne
scas
popf
sarb
or
push
adc
int3
add
adc
jg
cmp
lock
sub
fwait
sub
pop
xor
int
int
sub
ret
inc
xor
inc
sbbb
xchg
shr
xchg
push
shrl
mov
in
jg
pop
sbb
mov
iret
das
popf
push
mov
mov
jne
sub
bound
aad
pop
add
and
testl
icebp
das
lret
push
and
or
jno
call
or
cld
fcompl
xchg
mov
aaa
sub
cmc
pop
aaa
mov
and
xchg
inc
dec
das
aas
push
lds
fwait
mov
cmp
pop
lock
jne
jnp
add
addr16
sub
adc
cmp
rolb
adc
fsubp
pushf
mov
inc
popf
movsl
in
or
rcrb
xor
mov
cmc
sub
sahf
in
jmp
es
or
movsl
or
pop
xchg
dec
push
mov
test
cli
insl
push
test
cmp
and
js
loopne
jo
int3
lahf
movsl
mov
stos
dec
jne
lods
fsubr
mov
out
push
xchg
daa
outsl
sahf
fldl
out
data16
inc
adc
fcmovnb
outsb
mov
push
jb
jns
add
negl
pop
int
jp
xchg
jno
je
adc
cli
xchg
push
mov
aas
lods
lcall
mov
or
shll
mov
push
arpl
adc
cli
jmp
cmp
jnp
sbb
adc
cmp
sti
cmp
inc
cmpsb
xchg
xchg
jl
jmp
les
xor
shrl
icebp
fbstp
mov
or
iret
insb
sbb
lods
xchg
cld
mov
cmpsb
mov
aas
mov
add
mov
hlt
lock
mov
mov
in
aaa
jp
repnz
pop
add
dec
mov
xor
jo
dec
or
jp
mov
test
sbb
in
nop
xchg
adc
pop
xor
and
ljmp
sarl
fwait
testl
and
jl
mov
icebp
mov
dec
sub
mov
fisubs
es
faddl
lods
inc
aad
or
jge
sarb
and
cmpsl
mov
in
repz
std
cwtl
shrl
sub
iret
aam
ret
lods
lds
rcr
cmp
sbb
add
push
enter
fwait
xor
cmp
aaa
stc
mov
sub
cmp
mov
cmc
movb
and
movsb
je
fcomip
push
inc
mov
mov
and
adc
jl
adc
xchg
sub
cmp
push
jns
inc
sub
sub
cs
xchg
dec
aaa
loopne
mov
stc
and
push
aad
andb
dec
je
dec
xor
mov
cmp
cmp
sbb
in
sub
out
das
shl
and
and
ret
jb
insl
jl
subb
ljmp
js
jbe
stos
test
cmp
into
sbb
sbbl
jne
xchg
bound
jge
push
dec
scas
nop
call
dec
cwtl
jo
leave
push
cmp
pop
imull
mov
cmp
outsb
lcall
ret
cmp
subb
cmc
inc
out
pop
mov
pop
or
enter
addr16
fsts
popa
fwait
or
bound
shrb
push
adc
jns
cmp
mov
icebp
movsb
or
fisubl
and
mov
xchg
push
shrl
data16
out
cwtl
push
sbb
xchg
call
pushf
insb
inc
and
sub
and
repnz
add
xchg
and
xorb
fsubrs
push
cltd
xor
imul
and
jge
cmpsb
popf
xchg
divb
fstl
fs
dec
fdivp
pcmpeqb
rcrl
es
and
in
dec
dec
fstpt
mov
sti
stc
xlat
movl
jnp
add
in
xchg
sub
push
rcrb
inc
fistpl
scas
xor
mov
clc
outsb
les
adc
addb
divl
inc
stos
cltd
sub
mov
call
scas
js
push
dec
push
fisubs
mov
out
cmp
pushl
inc
fcomps
inc
fnsave
inc
xor
fld
pop
add
insb
pop
cwtl
push
hlt
sub
shll
std
mov
push
popf
rcrb
imul
mov
cmp
nop
imulb
add
or
mov
ss
push
clc
aad
dec
cmp
ret
mov
sbb
mov
insl
rcrb
sti
and
xchg
jmp
lret
push
mov
inc
fsubrs
cltd
mov
sarb
xchg
cli
xlat
mov
xorb
rorl
ret
leave
daa
xchg
mov
lret
shlb
ljmp
cmp
cmp
gs
stc
outsl
or
gs
push
xchg
xor
lds
gs
mov
movsl
cmpsl
in
xor
push
mov
dec
sbb
add
jb
js
sub
or
test
mov
adc
sbb
fnstcw
std
xchg
inc
bound
nop
xchg
mov
loopne
sbbl
rcll
ja
jl
rorb
mov
inc
lcall
jne
stos
sti
popa
cld
cmc
in
pushf
xchg
jmp
add
inc
fs
rolb
cmp
movsb
inc
cmp
insl
adc
xchg
shrb
pop
shl
inc
adc
xchg
dec
jecxz
rep
ret
jge
lea
popf
xor
arpl
jae
inc
std
push
or
cmpl
insl
ret
jge
lea
popf
xor
arpl
jae
inc
std
push
or
fwait
cmp
cwtl
insl
jge
lea
popf
aaa
test
fnstenv
dec
int3
mov
inc
sub
addr16
repz
inc
std
adc
bound
mov
cmp
sub
int3
int3
int3
int3
orl
subb
xor
pop
or
push
or
add
push
push
add
add
add
add
int
and
add
add
cltd
add
add
and
sub
fiaddl
dec
add
add
add
xchg
filds
cmp
test
add
and
out
add
add
repz
add
add
lea
mov
sldt
jne
xchg
add
or
add
cwtl
add
add
add
push
add
sub
add
aas
add
add
add
add
dec
add
jne
filds
inc
add
add
add
add
add
add
inc
add
icebp
add
test
mov
xchg
scas
add
add
add
pop
add
add
add
add
jmp
add
add
xor
pop
add
add
add
add
mov
add
add
add
insl
add
add
jae
sub
and
add
cmp
mov
jl
xchg
inc
add
add
add
imul
pop
add
add
add
add
add
add
fiaddl
out
add
add
dec
add
add
addb
add
add
add
push
addl
repz
addb
add
das
add
insb
add
pop
add
add
add
add
or
add
add
add
add
add
add
pop
add
add
add
arpl
pop
add
add
add
add
jb
fiaddl
adc
pop
add
add
push
add
dec
add
fiaddl
mov
stos
add
addl
repz
add
add
test
sbb
add
mov
sti
add
add
add
scas
add
filds
cmp
pop
add
add
push
add
add
lods
add
add
add
add
add
add
test
lods
add
cld
add
icebp
add
add
add
stc
add
add
add
xchg
mov
verr
add
add
add
add
add
add
add
inc
add
add
add
add
add
in
add
add
add
addl
add
or
push
add
add
das
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
sbb
add
jmp
add
flds
clc
add
ljmp
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
ltr
add
add
add
fwait
add
add
popl
addl
add
cmp
xor
dec
add
mov
add
add
add
pop
add
add
push
add
outsl
add
add
add
mov
add
add
add
stc
add
and
and
sub
mov
add
sbb
lcall
add
mov
dec
add
add
add
xchg
dec
add
add
add
add
dec
add
add
or
add
arpl
filds
add
push
mov
push
mov
xchg
add
add
cmpsl
add
add
add
add
add
xchg
shrb
jp
orl
std
add
add
enter
sti
sbb
push
repnz
xor
xlat
outsb
mov
xor
push
mov
arpl
lock
xor
mov
sbb
fnstsw
adc
ret
pop
adc
and
inc
mov
insb
out
pusha
lods
inc
jns
movsl
nop
sub
pop
pop
lret
fwait
jns
out
xor
lahf
cmpsb
mov
scas
aas
and
test
mov
mov
gs
insb
popa
mov
pusha
cmpsl
addl
lds
xorl
xor
push
fidivrs
jno
aaa
cmc
imul
out
inc
fidivs
xchg
incb
dec
mov
int3
ss
push
daa
add
xchg
mov
jnp
lea
jno
cmpsl
jo
out
push
push
add
and
nop
mov
xchg
jnp
lods
sbb
outsl
pop
mov
sbb
inc
out
push
loope
mov
sub
pop
out
enter
aam
cmp
mov
stc
push
mov
popa
popa
adc
jl
into
add
ret
lret
sarl
add
dec
lcall
das
fs
xchg
sub
pop
push
movsl
and
ljmp
mov
cmc
adc
outsb
xchg
jge
inc
push
mov
or
cli
mov
js
and
ret
in
outsl
mov
arpl
stos
packsswb
jg
xor
jg
mov
mov
movsl
mov
cmp
add
mov
pop
notb
mov
shlb
in
mov
mov
repz
push
add
fbld
lods
adc
test
loop
mov
cmpb
clc
shlb
add
jns
test
int
push
push
xchg
sbb
test
stos
outsl
mov
stos
add
xchg
xor
sub
lods
pop
into
xor
ljmp
fnsave
jp
inc
jae
aaa
push
push
repnz
lods
loopne
stos
leavew
cmp
sbb
push
jbe
and
cwtd
and
pop
adc
pop
fbld
inc
inc
pop
mov
lret
push
and
sbb
adc
gs
push
loop
xor
sbb
cmp
or
sub
cs
jb
pop
or
mov
nop
mov
cli
push
dec
push
sbb
add
sbb
stos
jp
imul
adc
in
cmp
jmp
pop
mov
ds
inc
fcmovne
mov
pop
movsb
loope
jmp
add
mov
fiadds
ret
xchg
out
and
call
scas
int3
jbe
sub
mov
push
shrb
xor
hlt
mov
sbb
jmp
daa
mov
mov
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
