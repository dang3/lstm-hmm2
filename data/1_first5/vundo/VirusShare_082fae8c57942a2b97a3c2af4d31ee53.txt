mov
shr
mov
int3
push
adc
cmpsb
cld
push
adc
cmpsb
fcoml
xlat
or
and
je
push
mov
inc
loop
add
inc
fsubrl
popf
movsb
mov
lods
xlat
dec
xchg
or
mov
mov
mov
jp
lds
mul
hlt
cmp
sub
vmovups
rol
pop
and
jp
lea
and
addr16
jo
xor
cli
lcall
nop
cli
add
adc
or
pushf
shrl
lret
or
hlt
ljmp
test
testl
add
sbb
mov
nop
lods
jp
in
xor
pop
jp
mov
and
stc
iret
lock
or
push
or
adc
xchg
repnz
jecxz
insb
scas
es
jno
insl
fcompl
pop
inc
and
les
mov
mov
std
pop
lds
fmuls
decl
rcr
or
repz
lahf
test
add
repnz
push
cmp
clc
and
lcall
fsubrp
movsl
mov
jmp
adc
mov
mov
mov
cs
mov
or
inc
ja
sub
loope
loope
insl
out
jno
fsubrl
aaa
sti
divb
jle
leave
shrd
aad
mov
rcrb
popa
dec
ja
push
popl
push
xor
mov
popl
mov
mov
call
sub
mov
and
and
mov
pushl
popl
and
and
mov
mov
and
addw
jmp
addw
sub
mov
push
sub
xor
popl
mov
and
or
cmp
jne
lea
push
add
mov
popl
mov
mov
mov
pushl
popl
and
cmp
je
subl
xor
push
popl
pushl
popl
ret
xor
push
push
popl
pushl
popl
xor
and
push
popl
pushl
popl
mov
and
push
add
and
popl
mov
mov
push
popl
and
and
mov
addl
and
andb
lods
andl
and
mov
orw
pop
push
popl
pushl
popl
ret
push
popl
push
mov
push
mov
sub
popl
mov
add
push
push
xor
sub
popl
mov
push
and
push
push
sub
push
subb
mov
push
popl
pushl
popl
mov
movb
add
pushl
pushl
popl
mov
or
add
add
addl
mov
push
popl
pushl
popl
add
xor
push
or
or
popl
mov
lea
addl
mov
add
push
add
sub
popl
mov
mov
xor
xor
rol
movb
xor
inc
pushl
popl
cmpb
jne
cmp
je
sub
inc
cmp
jb
pushl
popl
mov
add
pushl
popl
movzwl
subw
mov
andb
add
push
popl
mov
add
push
and
or
popl
mov
pop
cmp
jbe
push
popl
pushl
popl
cmp
jae
pushl
sbbl
pushl
sub
push
xor
and
popl
mov
movl
addl
sub
pushl
call
subw
call
add
pop
pop
sbbb
pop
andw
pop
push
and
sub
popl
mov
pop
leave
subl
ret
pop
andw
xor
subl
call
pushl
popl
test
jne
push
popl
pushl
popl
ret
push
addb
push
push
add
add
popl
mov
mov
pusha
orl
call
mov
push
popl
pushl
popl
sub
and
movl
addl
push
popl
pushl
popl
push
call
push
popl
cmpl
je
cmpl
je
sbbl
cmpl
jne
push
popl
pushl
popl
call
subb
popa
call
movl
sub
pushl
popl
movl
addl
subb
push
xorb
call
push
push
push
inc
sub
ror
mov
mov
mov
xor
pop
push
popl
pushl
popl
mov
shl
push
popl
push
push
and
add
popl
mov
xor
push
push
and
and
popl
mov
call
push
popl
pushl
popl
push
push
popl
mov
push
push
popl
pushl
popl
jmp
subb
pop
push
popl
pushl
popl
mov
subw
push
push
pushl
popl
push
mov
xorl
mov
andb
rep
orb
pop
pop
push
add
not
mov
mov
add
xchg
push
dec
lea
rol
xor
mov
add
xchg
push
xor
xor
popl
mov
xor
push
popl
pushl
popl
jmp
sub
pushl
popl
mov
sub
orl
sub
orb
mov
sub
xorb
or
jne
add
andw
jmp
pushl
popl
call
imull
mov
nop
popl
insb
dec
cld
in
add
inc
mov
push
xchg
arpl
lock
pop
mov
negb
and
out
xor
push
jmp
add
push
in
fs
mov
cwtl
fdivrs
mov
popf
subl
sub
or
add
cli
fdivs
js
mov
and
mov
cmpsl
ljmp
xor
aad
in
and
lods
cli
pop
repz
jbe
pop
xchg
push
sahf
push
xchg
mov
stos
mov
sarl
pop
jo
adcl
into
sarl
mov
ficoms
push
pusha
lret
cmp
call
xor
cmp
fnstenv
cmpsl
inc
jbe
cwtl
rol
inc
push
xchg
inc
sbb
das
test
dec
incl
aad
mov
pop
outsb
ja
scas
jnp
lods
rorb
mov
fdivs
push
sbb
fiaddl
lods
lea
xor
mov
sbbl
inc
fstps
xor
adc
pop
xchg
add
push
cmp
jb
xlat
mov
dec
sahf
pop
mov
into
inc
les
xor
lcall
pop
sahf
or
add
mov
in
sub
je
and
icebp
mov
jl
lds
xchg
mov
stos
nop
mov
sti
sub
xchg
test
add
fcoms
lcall
xchg
xchg
pop
sub
and
hlt
sub
and
inc
mov
inc
cmpsl
lret
mov
jmp
xor
sbb
push
cmc
cmpsl
ljmp
cmpsl
dec
jecxz
scas
jnp
test
data16
fdivs
xor
out
mov
shll
jne
inc
inc
and
imul
xchg
clc
cmp
int3
mov
xchg
loopne
lock
mov
add
or
pop
cli
fdivs
sbb
jbe
or
mov
outsl
push
sbb
xchg
rclb
mov
fcomp
insl
arpl
testb
and
xchg
and
call
adc
pop
pop
pop
xchg
fmul
mov
lea
mov
mov
jnp
dec
and
repnz
add
jb
or
mov
adc
inc
push
sbb
inc
repz
pop
cwtl
lods
stos
mov
cmp
xlat
xor
add
mov
mov
xor
dec
sub
xchg
jb
xlat
push
jo
lods
ss
xchg
fldl
pop
pop
mov
enter
dec
hlt
roll
dec
out
int3
icebp
inc
lods
cmp
inc
mov
inc
or
nop
xor
jne
pop
or
ss
mov
pop
pop
cmpsl
ljmp
xchg
pmulhw
mov
test
mov
imul
rcrl
sbb
add
pop
dec
fs
mov
stc
adc
inc
into
int3
repnz
push
mov
inc
adc
and
fmull
aam
daa
and
xchg
lret
pop
repz
jmp
cmpsb
mov
mov
sbb
lahf
inc
adc
fsubl
js
and
ja
mov
inc
adc
outsl
fwait
stos
sub
jge
xchg
inc
push
xor
shlb
push
out
push
xor
pusha
test
nop
pop
ja
pop
icebp
sub
movsb
shr
std
dec
sbb
and
insb
int3
pop
jmp
inc
xchg
mov
pop
xchg
outsb
fcoms
dec
sbb
add
ja
push
jbe
and
les
pop
fmull
std
aas
dec
fsubs
movsl
mov
shlb
push
mov
adcb
lds
test
pop
cli
sub
daa
outsb
aad
jg
andb
scas
push
test
scas
mov
mov
cmpsb
loope
fldl
xor
sarl
ljmp
xchg
loop
sarb
mov
jle
aaa
xchg
in
movsl
aas
push
fs
out
mov
icebp
push
imul
insb
jb
stos
lcall
loop
fnstsw
sbb
pop
xchg
les
push
ret
inc
sbb
std
xchg
push
sbb
shrb
mov
ljmp
clc
mov
dec
imul
lret
cmp
inc
sti
fdivs
cmpsl
pop
hlt
xchg
xchg
mov
pop
sbb
std
outsl
sbb
lcall
rcll
push
sbb
outsb
movb
call
ljmp
pusha
pop
xchg
pop
lock
adcb
sbb
add
mov
or
sahf
mov
repz
cwtl
adc
jns
and
jl
mov
mov
ja
add
fs
aad
xchg
push
fs
in
push
daa
and
fnstenv
cmpsl
movsb
ljmp
or
fbstp
cmpsl
ljmp
add
xchg
iret
aad
and
rcrb
ret
xor
inc
mov
cld
imul
scas
ljmp
xchg
sti
out
arpl
sbb
dec
outsb
push
stos
dec
std
lods
and
dec
sub
aam
pop
xchg
shl
lcall
lcall
inc
in
push
xor
ret
dec
sub
cmp
jo
add
jns
and
jg
loopne
xor
sbb
ror
push
sbb
pusha
xor
subb
jmp
call
inc
testb
dec
cs
jnp
and
fdivl
cmpsl
ljmp
gs
push
imul
sbb
dec
fdiv
xor
fdiv
pop
mov
imul
sub
out
dec
pusha
push
std
mov
mov
das
mov
es
outsb
aad
xchg
loopne
xchg
lods
popf
aaa
test
scas
add
idivl
cld
sbb
dec
mov
jnp
mov
jb
xor
test
je
out
sarl
mov
adcb
jno
les
and
andl
pop
cli
mov
insl
arpl
fisubrs
add
jo
sbb
stc
xchg
dec
cs
mov
dec
or
pop
les
xor
mov
les
xchg
jle
dec
mov
cmp
xorb
xor
jbe
and
andl
orb
fs
cli
fadds
int
cs
adc
lret
imul
cmpsl
ljmp
cmp
repnz
xchg
fdivr
or
int3
and
adc
mov
push
or
aam
inc
sbb
shrb
xchg
dec
push
mov
ljmp
fs
ja
outsb
aad
jl
subb
fwait
cwtl
test
scas
add
popf
in
cld
inc
fstps
mov
mov
xor
mov
jmp
sub
add
aaa
scas
movsb
outsb
jbe
cli
mov
cmpsb
pop
test
repz
adc
arpl
sbb
cmc
nop
sbb
push
dec
push
pushf
or
subb
cld
push
mov
sbb
lcall
in
sub
arpl
cmovge
mov
adc
add
iret
add
mov
and
jmp
testb
mov
test
sbb
in
bnd
shrb
dec
xchg
lret
ljmp
add
jecxz
jo
and
decb
stos
jae
and
mov
out
jnp
cmc
jae
repz
and
xor
jnp
andl
mov
fdivs
xor
or
sti
jmp
loop
lcall
cmpsb
shr
pop
fdivrl
xor
dec
stos
xor
out
test
jnp
aas
icebp
loopne
cmpsl
xchg
push
aaa
nop
clc
in
dec
imull
negl
shl
lcall
mov
ljmp
ljmp
fstpt
cld
mov
fdivs
add
adc
dec
add
xchg
fcoms
insl
dec
lods
dec
add
jmp
stc
mov
test
mov
repz
test
repnz
xor
dec
cs
push
mov
in
lret
inc
push
jns
push
sbb
adc
adc
or
pop
sti
out
es
arpl
push
and
pop
movsb
mov
xchg
or
rcpps
dec
inc
shll
adc
dec
sbb
aas
and
decb
inc
push
ljmp
sub
mov
sub
and
repz
mov
lahf
mov
mov
mov
leave
cmp
mov
aam
les
out
fnstcw
jo
lods
movl
inc
pop
into
jbe
cmc
fsub
clc
cmovno
and
push
stos
stc
in
sbb
inc
inc
leave
repnz
fs
and
cli
lea
ror
mov
lahf
jmp
cmpsb
loope
fldl
pop
cli
dec
mov
ss
cmpsl
fs
loope
sub
dec
cs
push
int3
in
lret
inc
scas
add
movsb
push
fs
cli
inc
movsl
xchg
aad
decb
xor
push
sbb
push
sub
cli
cmp
pop
notl
dec
jbe
jnp
dec
inc
cmp
mov
shll
push
xor
add
jge
negb
ljmp
ljmp
imul
popf
pusha
popa
xchg
subl
cmpb
push
int
mov
stos
rcrb
sbb
cmp
roll
cmpsl
sbb
enter
jns
je
xchg
cmp
test
inc
loope
fldl
add
out
insb
mov
ficompl
into
cmpsl
xchg
push
aaa
nop
sbb
xchg
cmpsl
out
xor
dec
cs
fistl
loope
mov
mov
cmp
fs
push
icebp
mov
in
aad
decb
mov
test
pop
fcoms
add
into
popa
mov
mov
xlat
in
mov
jle
add
add
js
or
or
push
sbb
inc
aam
push
sbb
mov
xor
je
mov
in
xorl
xor
xchg
jmpw
mov
mov
sbb
cld
out
pop
push
fnstcw
jo
lods
mov
ffreep
dec
fst
aad
pop
ja
movsb
les
mov
int
and
decb
daa
adc
int
ret
loop
dec
cmpsl
ljmp
js
mov
jle
ljmp
dec
push
jbe
loop
cmpsl
ljmp
pop
rorl
adcb
lret
cmpsb
lret
outsb
mov
cltd
xor
repnz
testl
imul
out
xchg
cmpsl
pushf
dec
xor
dec
cs
loopne
sub
mov
mov
xor
fstl
sbb
test
dec
xchg
sub
pop
sbb
les
mov
fimull
inc
out
mov
xchg
inc
and
mov
insb
jno
sbb
dec
lret
inc
out
fs
fnstenv
add
add
sub
dec
push
and
add
add
jae
incb
add
dec
push
xchg
imul
jno
jbe
and
adc
jg
add
sbb
jbe
pop
mov
xchg
and
inc
jecxz
and
inc
dec
adc
mov
mov
push
cmp
shlb
aaa
mov
ljmp
sbbl
push
stc
xor
inc
call
xor
imul
ljmp
dec
cwtl
add
std
pop
push
sub
fcomps
push
push
mov
mov
xor
pop
cltd
pop
test
negb
pop
xchg
subl
scas
push
das
lock
negb
xlat
push
mov
xor
push
jmp
mov
sbb
test
loop
xor
in
lea
ds
xchg
addr16
in
fadds
lea
xlat
push
push
push
pop
cs
mov
call
cmpsl
xchg
push
dec
adc
sbb
negb
aad
mov
mov
lahf
jecxz
jne
jecxz
xor
out
nop
xchg
lock
sbb
lds
icebp
lret
icebp
adc
sub
adc
pop
dec
pop
sub
out
add
add
xor
xchg
add
xchg
lock
adc
push
xlat
and
lods
leave
xor
xor
je
lcall
push
sbb
pop
sub
add
xor
in
mov
fnstenv
adc
push
push
jb
mov
cmp
fcomip
daa
adc
lods
pop
cli
fsub
adc
push
les
into
int3
jns
loop
fstpl
not
ss
stos
jmp
fidivs
cmpsl
inc
loope
mov
stos
sbb
out
insb
inc
jl
cmp
aaa
cmpsb
and
jmp
push
pop
xor
sbb
add
xor
pop
arpl
xchg
cld
call
clc
scas
aad
push
add
mov
loop
fnsave
fidivrs
sahf
loop
fisttpll
xor
dec
cs
enter
mov
push
and
test
loopne
cmpsl
ljmp
roll
aas
jne
test
es
mov
testl
xchg
dec
pop
sub
fdivs
cmpsl
lock
jae
les
xor
mov
adc
sbb
inc
sbb
dec
jle
cmpsb
and
notb
jle
add
xchg
sbbb
ljmp
jns
xchg
loop
fldl
push
sarl
ljmp
adc
fnstsw
outsb
sbb
and
les
inc
push
fs
lahf
inc
or
push
cmp
cmc
mov
adc
or
add
repnz
xchg
repnz
mov
out
insl
push
scas
dec
add
lock
fcoms
add
dec
xchg
push
xchg
mov
int3
das
sub
fimull
inc
out
pop
or
xor
fdivs
idivl
or
push
sbb
pop
repnz
mov
fucomp
idivl
js
and
les
and
push
shr
sub
out
flds
cmpsl
lea
sub
add
add
mov
mov
movsb
decl
xorb
jge
cmp
nop
lahf
enter
xchg
adc
imul
mov
fdivs
andl
jnp
arpl
loopne
pushf
orb
fs
push
ja
sbb
inc
pop
fsubl
pop
cli
fdivs
sbb
jbe
or
add
fstps
sbb
hlt
insl
cmpsb
push
xor
clc
decb
rorb
cmp
movsb
out
arpl
mov
in
add
clc
jae
cmpsb
mov
test
lea
and
mov
popa
add
xchg
pop
or
test
aas
lds
pop
cli
dec
adc
adc
lea
arpl
mov
or
inc
sub
add
sbb
inc
sbb
iret
sarb
add
pop
jne
movsl
pushf
je
lcall
loopne
xor
and
daa
nop
scas
mov
dec
add
push
sbb
lds
pusha
and
mov
movsl
xchg
xlat
or
pop
imul
sbb
jb
data16
mov
scas
add
cli
sub
sbb
cmp
ljmp
nop
clc
pop
xchg
jb
les
cmp
test
mov
mov
repz
xor
fcomps
push
push
mov
xor
fdiv
pop
pop
pop
add
sbb
repz
stc
xlat
mov
push
std
mov
inc
loope
lret
xor
repnz
jae
pop
cli
fadds
shrb
xchg
shrb
and
xor
inc
push
ror
ljmp
xor
xor
clc
xchg
les
jae
pop
cli
fmul
push
loopne
mov
stc
dec
lods
xchg
loop
fcompl
pop
stc
mov
clc
scas
sub
scas
sbb
mov
xchg
and
out
popf
xor
inc
cmp
dec
mov
pop
insl
mov
or
xchg
xchg
int
pop
and
xor
jnp
mov
jecxz
pop
jo
mov
jmp
sahf
loopne
rclb
pop
jo
lods
ret
cmc
mov
sbb
shr
dec
movsb
sub
lods
push
aaa
mov
and
pop
dec
pop
push
add
xor
jne
lret
loope
inc
xchg
xor
cli
inc
xor
imul
lods
ljmp
mov
jge
xor
das
jno
xor
push
fnstenv
or
sahf
scas
jnp
mov
inc
xor
gs
fdivs
mov
push
xor
ljmp
mov
mov
jmp
stc
dec
and
insl
jno
sarl
les
les
sub
sbb
mov
dec
adc
sbb
jae
cmp
lods
add
shl
fcmovu
xchg
loop
mov
out
sbb
mov
pusha
xchg
mov
rolb
addr16
fdivs
or
dec
les
mov
inc
mov
cmc
lods
aad
or
xor
into
cld
mov
test
dec
cs
or
jmp
lret
fdivrs
cmp
movsb
dec
js
xor
pop
incb
outsb
xchg
cld
jecxz
fs
xor
addr16
in
adc
inc
sarl
cli
fcoms
les
sahf
repz
fisttpl
xchg
jae
les
sbb
insb
gs
and
rolb
push
aas
xor
cli
sub
cmpsb
pop
cli
dec
pusha
xchg
adc
scas
js
int
sbb
imul
push
jbe
jo
adc
pop
inc
loopne
adc
fs
sbb
cmp
movsl
fxam
mov
xchg
mov
mov
sbb
in
adc
negl
or
sbb
add
loopne
divb
dec
jl
push
js
lcall
inc
cli
and
shrb
movsb
jnp
mov
pop
fadds
das
dec
jne
inc
or
adc
pop
push
sub
dec
daa
push
rcl
aas
imul
loopne
jno
adc
add
stos
sti
xchg
dec
adc
stos
jl
out
aas
div
sbb
enter
and
decb
gs
andl
sub
pop
fs
jne
mov
jnp
pop
call
cli
fdivs
test
je
jno
les
iret
push
addr16
in
popf
add
stc
mov
popf
xor
lcall
cli
dec
fs
adc
jg
inc
out
out
jne
mov
and
sahf
jecxz
negl
es
dec
push
data16
stos
mov
jne
cs
int3
mov
mov
xchg
cmpsb
mov
pop
xor
in
dec
inc
add
xor
in
mov
xchg
stos
dec
rep
mov
insl
add
out
test
imul
dec
or
stos
fimuls
jge
incb
stc
xchg
aad
or
cwtl
or
sbb
cmp
in
or
aam
sbb
push
push
or
aaa
stos
mov
mulb
shrl
jae
mov
rolb
push
cmc
mov
int
or
sbb
cs
fcoml
in
push
pop
das
push
xor
inc
add
xor
sbbl
ljmp
or
in
call
cmpsb
popa
mov
lahf
stc
iret
loop
xor
movb
mov
cli
repnz
lock
ja
inc
xor
jnp
xor
out
cli
adc
clc
push
scas
dec
fsub
add
fsts
sti
push
dec
sbb
cwtl
sarl
cwtl
xchg
sub
and
mov
xchg
sub
fs
and
push
push
cmp
xchg
arpl
fstl
pop
out
loopne
cld
inc
fstps
cmpsl
int3
aad
add
nop
sbb
sbb
push
jo
lods
mov
mov
cmp
dec
lahf
ret
arpl
in
mov
loopne
mov
mov
mov
ljmp
cmpsl
jmp
pop
mov
mov
ficoms
and
sbb
data16
adc
push
dec
fdivrp
fcomip
fldt
shll
cli
fcomps
or
mov
movsb
mov
cmp
aad
sarl
outsb
ja
and
fs
daa
arpl
in
fs
mov
outsl
push
das
lock
jbe
xchg
shl
lcall
int3
mov
add
aas
add
cmpsl
jmp
mov
cmpsb
pop
push
pop
das
pop
rcll
cmpsl
xchg
and
aad
jl
mov
adc
scas
dec
std
shl
shr
xor
inc
outsb
jmp
mov
mov
cmc
jae
inc
mov
addr16
psrlw
fdivrs
pop
xor
xchg
cmpsb
pop
cli
and
dec
push
xor
sbb
jne
shlb
mov
aas
sarl
push
pop
stos
adc
out
data16
jnp
addr16
push
xor
pop
push
pop
sub
fucomip
inc
add
xor
jae
inc
push
mov
loop
pop
stc
lods
aad
or
ss
mov
fcomi
das
mov
jmp
out
dec
daa
push
cmpsl
jo
aas
push
sbb
fcoms
dec
popf
dec
sti
out
adc
jle
xor
stos
mov
dec
adc
jnp
sub
decb
loope
mov
inc
int3
jne
pop
pop
or
pop
cli
iret
cmc
cmpsl
ljmp
cmpsl
ljmp
pop
rcll
push
xchg
lock
out
xchg
lock
pop
mov
xor
inc
and
fs
pop
into
stos
ja
outsb
aad
outsl
data16
push
nop
push
adc
jnp
xor
jo
mov
out
fcmovnbe
daa
jo
sbb
nop
ret
dec
cmp
push
sti
lds
hlt
sbb
jno
imul
loopne
fadds
jae
cmpsb
mov
push
sbb
sbb
push
cmpl
addr16
sub
scas
mov
sbb
sti
dec
lea
fisttpl
sbb
mov
jb
jno
popf
sbb
lcall
mov
and
mov
loope
jmp
in
fs
and
xor
pop
shll
movsl
das
dec
pop
das
inc
pushf
adc
inc
add
xor
pop
ds
mov
loope
ficomps
mov
sub
sub
ljmp
pop
xchg
add
cmp
push
jne
gs
mov
sub
sti
fdivs
std
imul
mov
mov
sti
xor
xchg
insb
pop
les
and
lods
dec
std
lock
cmpsl
shr
popf
and
fdivs
daa
cli
movswl
fsubs
cmp
stos
add
out
mov
jl
lahf
and
cmpsl
jb
xor
jp
mov
out
mov
sub
mov
push
lcall
jmp
jp
xor
test
xor
add
pop
xlat
fdivl
push
and
mov
adc
icebp
adc
test
negb
mov
jecxz
ljmp
or
std
fcomip
or
divl
pop
cli
fdivs
xchg
jmp
movsl
pop
outsb
push
cmpsl
dec
add
jb
loop
xor
arpl
mov
jmp
cmpsb
pop
outsl
lcall
xor
mov
mov
dec
aam
xor
push
imul
das
insl
movsl
stos
nop
gs
mov
pop
jne
sbb
pusha
push
jnp
pop
and
lods
or
out
iret
mov
cmpsl
ljmp
test
cli
xor
xor
les
lret
fwait
loop
ficomps
pushf
pop
push
xor
pop
sub
daa
outsb
aad
jg
or
inc
cs
test
scas
mov
mov
sti
sbb
xchg
pop
ljmp
clc
ficompl
std
popl
sbb
push
dec
inc
ss
imul
scas
ljmp
not
movsb
add
xchg
sbb
mov
pop
dec
cmp
mov
sub
lret
adc
cmpsl
ljmp
xchg
repz
lcall
push
imul
int
les
out
in
mov
cmpsl
pop
cli
das
mov
jle
pop
and
imul
dec
jbe
bound
nop
xchg
popa
jmp
xor
jge
ss
scas
cld
mov
nop
inc
js
mov
test
mov
dec
cmp
loop
repnz
leave
test
mov
push
xlat
push
mov
lock
dec
cmp
outsb
add
fnstenv
cmpsl
insl
dec
stos
loope
shll
cld
imul
ljmp
sbb
mov
sbb
mov
mov
xchg
arpl
into
jns
ljmp
cmpsl
outsb
push
mov
es
movsl
mov
cmpsl
mov
inc
and
xchg
cltd
lret
xchg
nop
out
adc
or
sti
adc
popa
xchg
jnp
pop
or
test
inc
mov
aaa
dec
xchg
mov
lods
shll
stos
jne
and
stos
jp
mov
std
push
xor
shlb
or
js
mov
fcoml
and
push
pop
push
push
ja
lock
dec
xor
stc
jge
lret
out
sbb
and
imul
and
jbe
push
cmp
and
mov
pop
mov
lahf
add
dec
adc
stos
dec
add
addr16
mov
sti
jmp
ljmp
js
mov
mov
sti
hlt
push
add
xchg
arpl
or
cltd
xchg
cmp
mov
negl
sbb
int
orb
inc
adc
stc
and
cli
dec
xchg
and
movsb
adc
arpl
fucomi
arpl
out
mov
rclb
ficompl
outsb
out
scas
in
fwait
cmpsb
xorb
cld
sub
test
jge
xor
clc
xor
dec
mov
dec
adc
dec
dec
xchg
or
rclb
push
ljmp
fimull
dec
data16
xlat
or
fcomps
in
and
je
and
pop
decb
sbb
dec
inc
cli
imul
mov
mov
fdivrs
xor
stos
and
mov
imul
mov
movsl
aam
fadds
jno
loope
jns
test
mov
jecxz
cmpsl
xchg
push
aaa
nop
imul
xor
dec
and
insb
ret
sbb
jle
rolb
ret
pop
xor
fisttps
dec
mov
rorb
fdiv
pop
add
shl
sub
adc
push
sbb
int3
std
push
pop
cli
pop
push
lods
cmp
pop
push
stos
adc
out
sahf
jo
leave
in
inc
mov
bound
xor
xchg
inc
inc
mov
push
lahf
fcoms
jmp
aas
dec
and
push
lcall
outsb
sbb
outsb
sti
mov
pop
push
rcrb
int
adc
movsb
int
insb
cli
push
pusha
push
aas
sbb
fildll
test
and
or
aad
or
cli
fdivs
mov
rdpmc
sbb
and
ret
cmp
xchg
jnp
xchg
push
fsubs
pop
jo
test
mov
sub
sub
aad
arpl
fisubs
js
dec
inc
pop
stc
jne
sbb
cld
rolb
inc
or
repnz
inc
sbb
lahf
mov
test
lods
xchg
cmp
jne
add
in
das
les
stc
sbb
xchg
sbbl
in
and
pusha
push
std
lea
jbe
mov
sbb
xor
xlat
std
mov
cli
mov
mov
outsb
inc
in
sar
push
push
dec
push
stos
addb
fildll
lret
or
cmp
hlt
lret
mov
mov
lret
mov
push
xor
pop
dec
pop
cs
inc
add
test
lods
pop
and
popf
add
fldenv
enter
mov
rep
inc
pop
fsubs
mov
xchg
mov
mov
fwait
test
mov
fiaddl
inc
in
aam
fadds
jno
mov
aam
les
sub
cli
inc
mov
ljmp
loopne
rorb
xchg
scas
mov
in
rorl
adc
and
and
decl
lcall
or
cmp
inc
dec
mov
dec
sub
mov
loop
xor
mov
out
gs
fildll
and
les
jns
and
jnp
xor
mov
xchg
adc
and
stos
ljmp
xchg
repz
pop
mov
cmpsb
into
out
lods
push
cmpsl
scas
cmp
test
movsl
xor
pusha
sbb
jg
fbld
xchg
movsl
dec
mov
adc
mov
inc
mov
pop
adc
out
cmpsb
mov
inc
cmp
mov
lds
test
push
fsubrl
movsb
imulb
gs
js
test
push
sbb
je
inc
jne
sti
xlat
dec
sbb
mov
cwtl
leave
pusha
out
rclb
decl
push
ljmp
lret
outsb
fisubrs
push
inc
insb
roll
mov
scas
fstpl
scas
dec
xchg
enter
sbb
rcr
sub
rcr
xor
inc
jecxz
aam
rol
ljmp
pop
mov
stos
cmp
les
ds
inc
in
repnz
cmpsl
cmp
neg
stc
mov
dec
xchg
jae
pop
cli
fmuls
sub
jbe
mov
fistl
push
outsb
dec
test
out
insb
incl
jmp
cmpsl
push
push
lods
scas
aas
aaa
sti
cld
imul
cli
fsubs
pop
mov
pop
fcmovbe
add
sbb
out
lret
sbb
enter
add
std
es
sub
add
pop
insl
imul
bound
and
pop
popa
xor
sbb
cli
das
mov
inc
ja
outsb
aad
xchg
jne
jge
jge
into
test
scas
add
incb
daa
push
in
fwait
jae
xchg
cmpsb
pop
cli
fs
dec
adc
sbb
xor
insl
push
lods
dec
add
inc
adc
dec
ds
loope
test
pusha
xchg
cld
mov
jle
jns
mov
jge
test
sti
or
add
mov
and
pushw
test
repz
or
movsl
and
add
stc
cmp
mov
lret
shll
loopne
push
mov
and
adc
outsb
mov
or
mov
repnz
pop
repz
mov
mov
ficomps
call
mov
pushaw
xor
mov
push
sbbb
cmpsl
inc
push
mov
xor
insl
pop
scas
sbb
lods
mov
mov
push
xor
sub
mov
xchg
adc
sub
fwait
rorb
lods
shlb
inc
pop
loopne
ja
jmp
cmp
test
push
das
add
shl
adcl
andl
sub
ljmp
inc
dec
sbb
lret
lahf
movsl
mov
rcr
cs
mov
xor
loop
faddl
cs
jmp
dec
and
push
sbb
movsb
xchg
mov
jo
rcrl
push
insl
fsubrs
jp
xchg
pushf
cmp
add
shl
cmp
andl
stc
fcoml
xor
adc
lock
aad
cs
bound
sahf
lret
fs
cmp
fdivs
sbb
jbe
mov
push
sbb
je
iret
or
test
loopne
mov
jbe
jno
sbb
adc
sbb
mov
inc
lcall
cmovbe
or
popa
clc
cmpsb
stos
add
adc
pushf
mov
jp
xor
jo
cmpsb
mov
lds
pop
cli
dec
lea
sub
test
mov
divl
adc
and
pop
outsb
and
dec
insl
mov
inc
xchg
and
inc
mov
insl
call
xchg
jmp
add
xlat
ljmp
lock
mov
xor
jle
insl
push
les
test
fistpl
ljmp
pop
neg
daa
pop
xor
cmpsl
rorb
sbb
fwait
int3
add
adc
sub
cld
ret
xor
insb
jmp
out
fadd
popf
sarl
ljmp
rcl
fwait
add
mov
sub
shrb
jns
jo
dec
std
fdivs
cmpsl
jne
loope
adc
mov
ljmp
sub
or
adc
aaa
cmpsl
ljmp
push
mov
icebp
xor
xchg
ds
andb
mov
push
cmp
stos
adc
out
mov
jnp
inc
and
push
xor
push
pop
sub
inc
add
xor
jo
mov
cli
call
mov
bnd
inc
add
xor
dec
sub
daa
cmp
negb
data16
xchg
ret
push
out
loop
aad
cmp
les
imul
ljmp
or
xchg
pop
cmp
cmpsl
outsl
sbb
ljmpw
push
xchg
mov
fcmove
enter
outsb
daa
iret
fwait
bound
and
cld
cmp
push
les
inc
loope
outsb
adc
insl
arpl
pop
outsl
push
xchg
fdivrp
sbb
add
outsb
pop
sbb
pusha
push
std
lea
insb
or
cmp
stos
cmc
sbb
dec
jns
jnp
add
push
xor
cmp
adc
pop
xchg
xor
cmp
cs
cmpsl
add
mov
sti
aad
lret
or
rep
mov
std
fmul
xor
add
mov
mov
stos
push
sti
outsb
icebp
fwait
xor
fnstenv
cmpsl
cmp
pop
or
ret
dec
sub
or
test
pop
add
ret
sbb
jae
rcrl
repnz
aas
dec
push
mov
cli
decb
mov
inc
jl
sub
outsl
icebp
fwait
xor
inc
fnstenv
cmpsl
cmp
js
sti
ret
pop
mov
call
pop
sbb
add
push
sbb
shlb
sbb
add
and
decb
dec
push
jae
dec
bound
and
pop
lcall
dec
cmpsb
pop
cli
pop
inc
sub
mov
sub
fwait
mov
and
xor
lret
out
mov
add
mov
loope
ficompl
mov
mov
cmpsb
pop
jecxz
xor
or
cmpsl
ljmp
stc
imul
scas
ljmp
icebp
aad
add
push
and
je
sub
add
xor
mov
mov
ljmp
cmpsl
ljmp
cli
cmp
mov
mov
lds
sti
movsl
mov
adcb
push
jmp
cmpsb
loope
fildl
aaa
mov
cmpsl
ljmp
sub
mov
xchg
adc
sbb
and
push
fsts
lods
mov
jns
xchg
xchg
add
test
lea
hlt
jns
pop
mov
dec
into
outsb
outsl
xor
add
inc
add
jg
xor
sti
dec
fstl
or
rorl
or
lahf
test
pop
sbb
xchg
cmpsl
or
les
fisubrs
clc
mov
dec
out
mov
std
popa
or
or
or
stos
pop
out
arpl
fdivs
sub
testl
ret
sahf
pop
in
mov
inc
push
call
push
and
add
pop
or
inc
aas
je
cmpsb
xchg
adc
fsubrs
jno
test
arpl
das
mov
das
ja
outsb
aad
xchg
pushf
or
cmpsl
in
clc
test
scas
add
dec
sub
loop
xor
sbb
shl
mov
shlb
pop
pop
push
push
in
addr16
stos
lret
adc
test
add
mov
jmp
cmpsb
pop
outsl
sub
xchg
lock
add
pop
stos
dec
pusha
xchg
pop
sbb
insl
aam
xchg
dec
inc
cmp
add
nop
adc
jecxz
fnstcw
or
faddl
xor
jmp
mov
jmp
cmpsb
pop
outsl
mov
xchg
pop
or
sti
fnstenv
jo
lods
ret
mov
push
sbb
add
dec
adc
aam
out
sub
out
mov
or
push
das
cmp
lret
pusha
adc
shrl
mov
out
call
xchg
cli
fdivs
mov
fyl2xp1
dec
or
sbb
and
ret
xor
inc
push
xor
imul
pop
cli
cld
out
scas
pop
cli
fdivs
xor
ret
inc
call
mov
mov
icebp
fcomps
xor
fcmove
mov
mov
jmp
xchg
push
xor
pop
jo
add
adc
mov
stos
aas
pusha
push
std
mov
inc
loop
push
xchg
ds
cmp
lret
stos
movsl
mov
mov
mov
and
jge
mov
xor
xor
in
fwait
aam
or
cltd
and
xor
push
xchg
jnp
mov
xlat
dec
sub
out
jne
fisubl
dec
jmp
subl
and
cmp
bound
mov
ret
lds
arpl
fsubl
mov
pusha
fistl
jns
dec
sbb
je
rol
fisubl
fwait
pop
in
jp
xlat
xor
sbb
stos
xchg
jle
xlat
or
dec
icebp
pop
nopl
mov
lahf
mov
xchg
loop
aad
sub
outsl
adc
rol
xor
dec
push
xor
mov
aad
into
pop
pop
xor
push
cwtl
inc
lret
sbb
mov
mov
stos
fisubrl
dec
ljmp
ljmp
iret
rclb
push
cs
xor
in
nop
xchg
repz
mov
sahf
push
insb
in
and
ljmp
stos
push
shl
or
mov
add
shlb
adc
inc
mov
inc
inc
lods
push
in
into
xor
inc
loop
pop
sbb
roll
shr
sbb
jns
test
movsl
popa
in
orb
roll
dec
xlat
shll
ljmp
xchg
repz
iret
inc
outsb
or
popa
in
ss
in
pop
fdivl
mov
pop
cmp
scas
and
cmpsb
pop
cli
pop
cli
xchg
add
xchg
fs
push
insb
popa
in
das
adc
call
add
insl
mov
test
adc
dec
sbb
mov
xchg
dec
or
arpl
sub
fcomps
pop
insb
push
sahf
pop
cli
fdivrs
mov
mov
sbb
xor
movsl
cmp
sbb
je
ja
test
adc
test
cmpsb
imul
stos
hlt
mov
mov
cmovge
jns
and
sub
cmp
cmc
mov
rolb
int3
ret
ljmp
bound
ja
outsb
aad
mov
sub
pop
xor
flds
ljmp
xchg
xor
fadds
lahf
add
add
jns
arpl
loop
fistpl
std
stc
mov
movsl
pop
xchg
stc
sbb
xchg
push
pop
sub
pop
push
std
lea
sub
pop
ret
mov
and
call
scas
scas
dec
xchg
insl
test
push
sahf
stos
insl
mov
lret
inc
jecxz
dec
jmp
lret
cmp
pop
xor
stos
and
out
jns
lcall
push
xor
mov
fsubs
testb
outsb
sbb
sbb
jne
aad
jnp
addr16
mov
dec
subl
loop
js
mov
je
fs
sbb
xchg
pop
and
dec
lret
arpl
mov
jne
xchg
std
jmp
xor
mov
mov
dec
or
sbb
and
ret
ss
jmp
pop
fnsave
mov
dec
cmp
sbb
xchg
in
rcrl
sbb
xchg
lock
cmpsl
jb
mov
pop
movsb
imul
sbb
shlb
xor
fcomps
daa
sbb
push
std
test
in
das
rorl
mov
daa
sub
in
mov
push
cmp
pop
fs
stos
repz
dec
addr16
icebp
lcall
push
xor
sbb
xchg
push
sub
push
pushaw
push
std
mov
cmp
jmp
test
pusha
or
xchg
and
and
xor
in
xchg
xchg
out
hlt
nop
cltd
pop
stc
stos
aad
lcall
jb
sbb
fnstenv
cmpsl
cmp
xlat
push
jo
sbb
dec
ja
jmp
dec
cmp
push
jo
lods
shll
imul
inc
mov
pusha
mov
std
rcl
inc
loope
pushf
pop
je
mov
sbb
nop
stos
xchg
push
push
sub
fstpt
xor
enter
cmpsl
test
shr
pop
adc
lcall
sbb
xor
push
call
mov
lods
sbb
xchg
loope
cmpsl
ljmp
xchg
cli
call
lcall
std
xor
test
dec
stos
les
cmpsl
cltd
mov
and
inc
fcmovu
xlat
add
or
xchg
xorb
sbb
and
aam
mov
sti
gs
je
cmpsb
xchg
repnz
push
dec
scas
sbb
dec
test
jp
and
jo
lods
mov
jns
mov
jmp
arpl
xchg
ret
mov
ja
xchg
push
xchg
sahf
aad
mov
loope
movsb
scas
sub
and
cltd
fsubrs
es
sahf
fwait
xchg
repz
pop
mov
xor
jo
mov
fsub
push
mov
in
add
lahf
jl
ljmp
in
xor
aam
les
icebp
addb
mov
gs
pop
sbb
jne
loop
xor
jle
sti
jne
aas
in
es
test
xor
pop
pop
mov
shl
and
inc
mov
into
sbb
sub
inc
ljmp
mov
sbb
outsb
aad
jbe
or
sbb
es
add
clc
cmp
lret
shlb
loopne
call
mov
push
xor
inc
push
jg
nop
hlt
mov
jl
leave
push
dec
or
sbb
push
jle
cmp
pop
or
std
adc
add
pushf
xor
dec
jo
lods
lahf
cli
xchg
ljmp
lret
test
rorl
adc
inc
dec
add
xchg
sub
arpl
ficoms
push
xlat
fidivrs
mov
xchg
and
mov
stc
fcomip
cmp
shll
pop
cli
fmuls
lea
sub
in
int
pop
xlat
test
add
fdivs
xor
fisubs
inc
sti
fdivs
cmpsl
pop
mov
mov
orb
or
sbb
mov
mov
addr16
pop
cmp
dec
xor
fmuls
dec
sbb
jne
sub
lock
inc
xor
add
daa
pop
inc
lds
rorb
sbb
mov
add
mov
in
sub
cld
ret
cmp
ljmp
int3
in
sub
fisubs
icebp
stos
sub
lods
jnp
movsb
dec
push
sbb
xor
loop
fcomip
movsb
es
mov
fdivs
in
arpl
mov
dec
jbe
pop
lea
insb
addr16
inc
jge
shlb
ffree
xor
mov
stc
jmp
inc
or
inc
pop
mov
out
mov
add
jns
mov
jne
stc
test
lea
xchg
bound
fisubl
aas
sti
fdivs
cmpsl
pop
dec
xchg
mov
push
jl
cltd
cmpsl
mov
cmpsb
lea
dec
xchg
or
pop
cmp
dec
mov
xlat
loope
not
sbb
inc
sbb
out
mov
loope
mov
inc
orb
ljmp
outsl
inc
or
call
cmc
mov
push
mov
call
jmp
sub
mov
repz
push
jo
sbb
movsb
sub
cmpsl
lea
cmpsb
jnp
or
or
dec
push
mov
dec
sbb
mov
iret
arpl
enter
repz
inc
inc
sub
add
mov
xor
mov
ja
mov
mov
xchg
or
fwait
out
sti
fcoml
inc
mov
ja
dec
inc
cld
insl
jo
rcl
les
dec
jl
stos
and
push
pop
and
xchg
aam
push
dec
test
mov
mov
into
jbe
jns
movsb
sub
enter
jmp
or
jne
ret
cmp
leave
mov
and
mov
into
loopne
add
jmp
clc
mov
mov
mov
mov
sti
in
push
add
sbb
add
ja
outsb
aad
jbe
subb
cld
fldt
loop
sub
ljmp
loopne
loopne
sbb
mov
jne
xchg
dec
pop
pop
mov
addr16
pusha
es
popl
je
insl
jg
xor
hlt
cwtl
xorb
lods
pop
cli
fcoms
lahf
lahf
popf
out
adc
sbb
pop
jle
aaa
xchg
rep
sub
in
xchg
imul
scas
ljmp
xchg
add
xchg
gs
cmp
pop
xchg
sub
inc
aaa
cmp
cli
mov
sti
scas
jnp
cmpsl
and
mov
fdivs
movsl
adc
mov
fcmovnb
add
test
cld
adc
mov
xchg
mov
aam
cmpsb
and
xor
pop
scas
sbb
jp
ret
bnd
and
scas
cmp
xor
jnp
inc
loop
add
xor
movsb
jbe
mov
or
sub
std
ret
xor
jmp
das
lock
jmp
lcall
test
xor
push
jmp
mov
inc
sti
fdivs
cmpsl
pop
fcoml
mov
mov
xchg
je
hlt
mov
push
or
and
pop
ljmp
cmp
jbe
or
lds
dec
sbb
cmp
jge
push
push
mov
jnp
pop
loope
sub
push
imul
pop
pop
das
sbb
cmc
inc
pop
clc
scas
aad
cmc
xlat
test
jmp
mov
test
sub
mov
add
mov
test
in
pop
add
dec
fdivrs
aas
sti
dec
push
xchg
adc
test
mov
dec
imul
les
jae
ds
push
sbb
xchg
mov
sbb
mov
lods
cwtl
je
and
daa
movd
rcr
mov
mov
lcall
in
loope
pop
add
nop
cmpsb
pop
cli
xchg
xor
pushf
add
outsb
out
jne
mov
loopne
lea
jae
scas
out
sub
pusha
pop
xchg
xchg
cmpl
adc
out
js
mov
rcll
jmp
xchg
and
jecxz
lds
xor
lret
jb
shlb
mov
call
pshufw
mov
dec
add
fdivs
xor
xor
mov
inc
cmp
test
mov
xchg
cmpsl
addr16
mov
jns
frstor
push
sbb
out
mov
fwait
and
jb
xor
testb
cli
jb
pop
cli
fadds
pop
mov
pop
xchg
push
sbb
and
pop
clc
scas
aad
std
dec
cli
mov
imul
out
mov
andb
sub
lret
add
sahf
cmp
sbb
jnp
dec
add
dec
js
jae
pushf
pop
filds
push
or
cmp
mov
hlt
mov
ret
loopne
repnz
adc
sbb
and
jbe
sub
xchg
ljmp
cmpsl
js
push
mov
pop
lret
mov
fdivs
adc
in
insl
push
test
add
fcompl
rep
pmovmskb
mov
movsl
pop
sbbb
pop
push
pop
sub
inc
add
xor
inc
cmp
es
mov
push
lods
dec
add
daa
fucomip
xor
loope
mov
mov
xchg
mov
insl
sbb
mov
enter
inc
lret
inc
in
dec
jle
inc
cld
imul
cli
fsubs
mov
xlat
add
fsts
in
xchg
test
and
push
sbb
test
mov
mov
inc
hlt
lahf
add
shl
jo
fmulp
push
js
loope
xchg
movsl
jmp
std
pop
sbb
add
shrb
pusha
mov
aad
jo
or
lods
in
rolb
mov
sub
dec
pop
sub
fdivs
cmpsl
inc
jecxz
jbe
les
mov
out
sub
push
les
mov
leave
pop
xchg
push
xor
xchg
bound
negb
pushf
xchg
cmp
xor
push
ljmp
jae
xchg
mov
xchg
into
mov
mov
lods
jl
ds
inc
in
movsb
out
jg
roll
test
push
ja
outsb
aad
xchg
xchg
outsl
test
jbe
scas
add
stos
xchg
cmpsb
pop
push
xor
xor
lcall
fsts
xor
push
ljmp
jo
mov
sbb
cmpsl
sarb
mov
movsl
xor
dec
push
loopne
cmpsl
ljmp
mov
jbe
adc
xchg
movsb
sub
fcomps
pop
jo
mov
push
xor
mov
sarb
mov
addr16
fcoml
inc
mov
push
incl
dec
pushf
lret
shlb
test
sbbb
cmc
out
movsl
mov
iret
cmpsl
fs
mov
das
bound
out
sub
movsl
sub
subb
cmp
ficoms
leave
shlb
push
pop
lock
icebp
mov
in
cmpsb
mov
das
sub
dec
push
jbe
and
dec
sbb
in
cs
xorl
mov
aad
jle
or
popf
xchg
cmpsb
hlt
test
scas
add
sub
cli
fdivs
xor
jnp
fcomip
jg
xor
jae
pop
cli
fsubr
mov
in
mov
ljmp
out
mov
cmpsb
out
sub
daa
jecxz
xor
cmp
mov
popf
add
pop
fs
add
imul
cmp
cmpsl
ljmp
xchg
fisubs
sbb
mov
or
mov
lea
dec
or
sbb
pop
jo
add
pop
sbb
and
pop
rcrb
xchg
je
jb
push
pop
xor
adc
outsb
ret
stos
push
lret
fld1
dec
ja
in
je
lret
sbb
add
xchg
outsb
mov
subb
out
jge
sarl
ljmp
xchg
add
xchg
lods
or
pop
lret
dec
loop
ficomps
ffree
fcoms
add
rclb
outsl
ds
xor
push
les
pop
inc
cmp
mov
out
mov
fcoms
add
push
sti
mov
fisttpll
jns
mov
pushf
dec
repnz
sti
add
add
int3
xor
loopne
or
repnz
aam
push
dec
jl
dec
jb
mov
add
insb
sbb
jbe
push
inc
sbb
in
cmp
mov
adc
jmp
inc
sub
mov
sub
nop
cmpsb
pop
push
das
lock
pop
je
negb
adc
push
jmp
mov
test
leave
das
jmp
add
and
jmp
lret
add
incb
gs
int3
mov
mov
rorl
cs
sbbb
and
adc
xor
out
mov
fildll
lods
mov
sbb
xchg
push
jb
cld
fcomps
sub
movsb
je
insl
push
fcmovnu
xchg
imul
movsb
popf
jp
cltd
jne
jl
adc
add
push
fs
add
jmp
lock
outsl
and
pop
cli
das
mov
ss
hlt
cmp
fdivl
cmpsl
ljmp
add
mov
mov
ljmp
xchg
sbb
call
fisubrl
mov
rcr
call
and
xchg
jbe
out
out
clc
lea
xchg
int
ljmp
std
arpl
rcrl
jl
jae
mov
cmpsl
shrb
mov
mov
pushl
sub
xchg
aam
push
push
dec
inc
es
lods
add
js
pop
sti
push
dec
sbb
gs
arpl
movsb
sbb
cwtl
repnz
push
jl
cld
pop
ja
mov
mov
xor
add
in
sub
push
pop
sub
cli
pop
sub
cli
fdivrs
pop
cli
fadds
xchg
mov
cmpsl
ljmp
xchg
lock
out
push
ret
mov
add
out
pop
or
stos
ljmp
scas
jne
xchg
mov
shll
stos
lea
add
les
and
xchg
imul
jne
cmpsl
les
cmpsb
shr
xor
push
and
inc
dec
and
mov
sarl
js
fiaddl
imul
cli
fsubs
in
or
or
sbb
repnz
pop
dec
iret
adc
dec
faddl
push
sbb
repz
xor
mov
mov
mov
mov
mov
fdivrp
push
jmp
shlb
mov
enter
xchg
movsb
lea
jmp
add
xor
cmp
inc
add
xchg
pop
jmp
and
xor
insl
add
loop
sbb
ljmp
mov
loop
xor
fdivrl
dec
pop
sub
decl
xchg
aas
dec
popa
mov
lods
pusha
cmp
out
inc
jmp
adcb
pop
hlt
inc
sti
fdivs
cmpsl
pop
rclb
ds
int3
lea
mov
mov
pop
add
pop
iret
in
les
mov
xchg
xchg
insb
inc
and
decb
enter
ftst
jp
inc
lret
icebp
leave
mov
mov
or
ljmp
xchg
stc
out
pusha
pop
pop
imull
xlat
pop
add
out
jg
cmp
pop
repz
stos
sub
out
mov
push
loope
jo
push
xor
push
cli
fadds
in
aaa
cmpsl
ljmp
add
xor
sbb
imul
ret
xor
ja
xor
cli
cs
cmp
aas
jecxz
xor
in
nop
xchg
out
add
aaa
jle
xor
mov
sbb
sub
pop
fdivs
mov
mov
pop
cli
sub
sub
loope
cmpsl
ljmp
xchg
cli
loop
pusha
adc
repnz
aad
xor
inc
lret
daa
pop
jnp
xor
cli
fdivs
cmp
pushf
movsl
mov
cmc
pop
adcb
ret
xor
sub
lcall
aas
dec
push
or
movsl
mov
out
xchg
cwtl
inc
mov
adcb
hlt
fcmovu
notb
in
cmpsb
add
xor
adc
cld
mov
adc
sub
mov
mov
sarl
pop
cmpsl
adc
pusha
jbe
jl
jge
and
pop
imul
push
mov
lods
sti
lret
pop
push
pop
inc
jae
jmp
shl
shlw
and
add
sub
push
arpl
imul
mov
mov
lds
xchg
insb
push
les
sub
fimull
cmpsl
into
out
movsb
ljmp
pop
cli
dec
popf
xchg
adc
dec
dec
jo
arpl
pop
and
lock
bound
fadds
les
xlat
popf
ret
fcomps
push
js
sahf
lods
jg
ljmp
fimull
sbb
jp
inc
adc
cmpsb
ljmp
cli
cmp
jbe
int3
lret
movsl
mov
in
shlb
push
xor
lcall
xor
jnp
mov
and
mov
add
in
push
add
cmpsb
mov
shlb
ljmp
pop
and
repnz
ljmp
xlat
shlb
pop
add
cmp
jg
es
stos
mov
jae,pt
sub
and
decl
sbb
xchg
add
mov
loop
ds
xchg
test
ljmp
jae
std
mov
ret
ret
and
mov
call
push
dec
mov
mov
stos
pop
mov
fdivs
fwait
int
or
in
sbb
and
les
and
ja
xor
cli
fs
dec
fcomi
push
jecxz
add
jae
sbb
push
xor
cld
mov
dec
loop
sbb
pop
xchg
sub
adc
xor
xchg
push
push
dec
add
mov
dec
fs
lret
movsl
mov
mov
rolb
stos
out
xor
jmp
sarl
mov
push
hlt
ret
xchg
jb
les
mov
pop
add
adc
test
and
lret
mov
test
push
inc
or
insl
cld
xor
nop
out
mov
push
lea
xchg
repz
lcall
jb
jp
daa
pop
mov
push
fcmovbe
mov
mov
jle
xor
add
je
into
out
and
mov
jmp
mov
and
loop
jecxz
mov
stos
add
cmp
mov
call
fsub
mov
pop
outsl
outsb
lds
dec
mov
sbb
sub
fs
sub
xchg
cld
lds
test
or
out
fidivl
lret
inc
jecxz
mov
fs
scas
aas
or
push
pop
rorl
add
xchg
arpl
push
test
mov
pop
fs
stos
inc
xbegin
push
popf
jae
pop
cli
fcoms
rcrl
cmpsb
cwtl
inc
sub
mov
pop
in
xor
add
push
mov
mov
aad
movsl
popa
xchg
mov
fdivs
xchg
push
jb
mov
les
mov
mov
cmp
js
jmp
std
mov
inc
sti
dec
cmp
icebp
xchg
subb
imul
xchg
rolb
fbstp
rcll
dec
decb
daa
and
mov
int
or
inc
sbb
xchg
dec
int
das
inc
jne
pop
xchg
or
iret
mov
sbb
fiadds
movsl
pop
xchg
out
pop
hlt
cmp
mov
add
popf
stc
mov
lods
pop
cli
fdivrs
ja
mov
aaa
pop
lock
std
jge
ss
out
insl
mov
stos
mov
loop
or
xchg
cmpsb
pop
cli
and
in
xchg
dec
les
mov
loope
loope
lods
push
pop
imul
je
mov
sub
outsb
aad
mov
or
cmpsb
adc
jmp
push
scas
add
imul
lods
ljmp
add
xchg
aaa
loope
cmp
and
loope
mov
push
xor
dec
pop
adc
pinsrw
in
lret
ja
mov
mov
adc
js
movsl
lret
mov
enter
arpl
jbe
push
inc
sbb
or
or
lret
mov
addb
lds
cmpsl
ljmp
cmpsl
ljmp
js
mov
je
hlt
loop
cld
add
add
shl
rcll
call
movsl
mov
xchg
mov
pop
mov
xchg
add
pop
lret
inc
call
add
jnp
xor
in
adc
les
int
or
push
xchg
ss
cmp
les
mov
cmp
pop
mov
pushf
sbb
adc
sub
test
lods
jns
mov
stos
push
stos
out
dec
add
sbb
push
lret
mov
lock
add
mov
push
es
sbb
jl
cmp
lret
arpl
lret
add
inc
xchg
filds
out
dec
ljmp
adc
arpl
fdivs
push
cmp
mov
cmc
dec
push
addr16
in
sbb
push
dec
and
xor
cli
adc
push
cli
fdivs
sbb
dec
add
sbb
jbe
sub
xor
cmp
mov
xchg
mov
dec
mov
scas
push
aam
adc
sub
fldt
mov
jle
mov
dec
sbb
mov
test
scas
out
das
sub
shlb
xor
adc
rol
or
pusha
xchg
neg
fcmovnu
xor
das
xor
xchg
sub
mov
push
cmpb
pop
std
cmp
xchg
cwtl
ret
sub
in
cwtl
jmp
mov
mov
jge
and
incb
jo
jae
daa
fbstp
pop
js
add
mov
stc
cmpl
pop
cli
fcoms
ret
mov
in
outsb
sub
into
adc
decb
xchg
add
sbb
add
xchg
imul
push
arpl
pop
push
std
lea
inc
push
cld
fnstsw
fnstenv
cmpsl
ljmp
dec
aad
pushf
aam
push
dec
fsubr
test
sti
rcrb
xchg
ja
test
out
jbe
inc
pop
sti
push
shll
sbb
lcall
xorl
adc
hlt
scas
.byte
.byte
