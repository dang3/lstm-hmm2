push
jmp
mov
push
jmp
pop
pop
not
not
and
push
pushf
jmp
fs
xchg
add
fidivrs
jo
jbe
popf
inc
and
xchg
dec
out
fldlg2
jbe
scas
push
movsb
sbbb
mov
stc
inc
inc
dec
sbb
adc
addr16
in
cmc
lcall
insb
jns
mov
jecxz
ss
into
xor
in
push
inc
popf
shl
fldlg2
jbe
je
gs
movsb
pop
dec
in
mov
out
lea
dec
sti
mov
popf
cmp
es
pop
sbb
sub
lods
std
jne
mov
test
data16
in
mov
and
das
adc
pop
aam
dec
cltd
inc
addr16
cs
aas
sbb
addr16
adc
xor
adc
fsubrs
not
popf
into
data16
cltd
lcall
mov
lods
mov
sar
pusha
in
mov
ret
ljmp
std
cmpsl
jb
jmp
cmp
dec
pop
mov
sbb
xchg
mov
outsb
dec
jl
xor
fidivrl
in
lock
mov
pop
fs
mov
repnz
addr16
add
jmp
xor
push
cltd
jle
enter
push
stos
jp
pop
shl
fldlg2
jbe
pop
inc
mov
mov
xor
mov
bound
mov
sbb
out
adc
add
jne
cwtl
dec
adc
mulb
in
jbe
popf
inc
xor
call
out
mov
fdivs
in
stos
push
xchg
data16
sbb
aaa
jns
adc
addr16
das
jbe
popf
dec
adc
into
dec
test
or
mov
mov
bound
mov
bound
loop
sbbb
mov
cltd
addr16
test
mull
es
shlw
cwtl
dec
mov
mov
sbb
cwtl
dec
es
std
mov
loopne
mov
cltd
in
pusha
xchg
sub
fwait
cmp
mov
out
lock
aas
xchg
and
pop
addr16
test
mull
es
shlw
xor
jmp
leave
in
and
lahf
jne
xor
aaa
adc
ja
pop
clc
std
outsb
xchg
daa
cltd
dec
adc
mov
cmp
addr16
addr16
push
mov
in
stos
outsb
mov
int
xchg
loopne
push
aaa
jmp
pop
out
std
loopne
aas
ret
jo
rorl
mov
das
push
shll
sub
jecxz
add
jmp
push
fs
popf
into
andb
mov
lahf
jle
out
ret
std
test
inc
xor
adc
ja
stos
cmc
clc
mov
cwtl
mov
cmp
out
lds
sub
addr16
pop
adc
lcall
arpl
sahf
movq
out
rcr
xor
cmp
xchg
aas
mov
test
cltd
into
add
mov
and
mov
gs
adc
mov
into
in
repz
push
aaa
lret
stos
lods
push
lcall
in
ja
mov
stos
push
lcall
ficoml
adc
addr16
arpl
jbe
sahf
sbb
jno
test
lcall
pop
jne
cltd
dec
es
cwtl
push
lods
pop
xor
dec
jmp
xchg
mov
std
sbb
ffree
js
jp
bound
insl
sbb
cmovge
jmp
or
cmp
xchg
call
pop
shl
push
pushf
jmp
mov
push
jmp
pop
pop
shl
push
pushf
jmp
pop
pop
shr
push
pushf
jmp
pop
mov
push
jmp
fldlg2
jmp
pop
pop
pop
shrd
push
pushf
jmp
pop
pushw
jmp
pop
mov
jmp
pop
popl
jmp
pop
jmp
pop
not
notl
and
pushf
jmp
mov
xor
dec
add
bswap
dec
xor
xor
push
jmp
pop
popw
jmp
and
pushl
jmp
mov
add
not
rol
add
xchg
ror
not
add
add
cwtl
push
jmp
pop
pop
mov
jmp
push
push
push
pushf
push
push
push
push
push
push
mov
mov
mov
add
mov
add
sub
ror
add
add
rol
add
movzbl
lea
jmp
push
jmp
pop
mov
jmp
movzbl
add
ror
sub
inc
neg
ror
add
xchg
cbtw
cwtl
push
jmp
in
or
pop
out
adc
in
adc
or
in
or
stc
in
adc
in
adc
loopne
adc
out
adc
in
adc
loopne
adc
out
adc
in
adc
or
in
or
sbb
or
out
in
adc
loopne
adc
or
out
in
adc
out
adc
loopne
adc
in
adc
out
adc
loopne
adc
in
adc
in
adc
loopne
adc
loopne
adc
out
adc
in
adc
out
adc
loopne
adc
out
adc
in
adc
in
adc
loopne
adc
adc
adc
in
adc
loopne
adc
out
adc
in
adc
out
adc
loopne
adc
or
out
in
adc
loopne
adc
out
adc
in
adc
loopne
adc
out
adc
in
adc
or
in
or
add
or
out
in
adc
loopne
adc
or
inc
loopne
adc
loopne
adc
out
adc
in
adc
or
pop
loope
adc
or
sbb
or
shl
or
cs
adc
or
fs
adc
or
lock
adc
or
inc
out
adc
or
push
out
adc
loopne
adc
out
adc
or
cmpsb
loopne
adc
out
adc
or
shl
or
adc
add
xchg
or
sahf
loopne
adc
out
adc
in
adc
out
adc
out
adc
out
adc
or
sbb
or
scas
loopne
adc
out
adc
out
adc
loope
adc
out
adc
or
int3
in
adc
or
xchg
or
loopnew
adc
out
adc
or
or
or
scas
loopne
adc
or
pop
loope
adc
loopne
adc
out
adc
or
sahf
loopne
adc
or
addr16
adc
or
xchg
loopne
adc
out
adc
or
and
or
scas
loopne
adc
out
adc
out
adc
or
add
or
movsl
in
adc
loopne
adc
or
lock
adc
or
add
or
mov
or
mov
or
add
or
or
add
scas
loopne
adc
loopne
adc
out
adc
out
adc
adc
adc
loope
adc
out
adc
out
adc
out
adc
adc
or
dec
loopne
adc
out
adc
out
adc
out
adc
or
jne
or
push
out
adc
loope
adc
loopne
adc
loope
adc
out
adc
loopne
adc
loopne
adc
loopne
adc
or
and
or
lock
adc
out
adc
loopne
adc
or
shl
or
sbb
or
loope
or
popf
out
adc
in
adc
or
sub
or
stc
in
adc
out
adc
or
shl
or
add
or
xchg
or
adc
or
xchg
loopne
adc
out
adc
out
adc
out
adc
out
adc
loopne
adc
out
adc
out
adc
out
adc
out
adc
or
inc
out
adc
out
adc
out
adc
or
mov
or
jne
or
or
add
mov
or
sbb
or
adc
add
cs
adc
in
adc
in
adc
out
adc
out
adc
out
adc
in
adc
out
adc
loopne
adc
out
adc
or
sbb
or
or
add
or
loopnew
adc
loope
adc
or
addr16
adc
in
adc
in
adc
out
adc
out
adc
loope
adc
adc
adc
loopne
adc
loopne
adc
enter
neg
inc
xor
inc
mov
push
jmp
pop
add
pushf
jmp
movzbl
xor
ror
inc
dec
neg
inc
xor
pop
mov
jmp
pop
popw
jmp
pop
add
pushf
jmp
pop
xor
mov
push
jmp
and
popl
jmp
pop
popl
jmp
pop
mov
push
jmp
pop
pop
pop
shld
push
pushf
jmp
pop
pop
pop
pop
pop
pop
popf
pop
pop
pop
ret
pop
add
pushf
jmp
pop
pop
mov
jmp
pop
pop
shl
push
pushf
jmp
movzbl
add
ror
sub
neg
ror
add
push
inc
jmp
pop
pushl
jmp
pop
pop
div
push
pushf
jmp
movzwl
add
not
rol
xchg
ror
not
add
add
add
push
jmp
mov
add
inc
xor
inc
ror
not
add
popw
jmp
pop
pop
shr
push
pushf
jmp
pop
pop
shr
push
pushf
jmp
pop
pushl
jmp
pop
pushw
jmp
movzbl
add
inc
lea
xor
ror
not
add
pushw
jmp
popf
jmp
pop
mov
jmp
pop
pop
mov
jmp
notl
pop
and
pushf
jmp
mov
push
jmp
jp
push
inc
push
inc
push
int3
jbe
push
hlt
cmp
shlb
loop
mov
arpl
aas
jno
test
test
jmp
add
adc
mov
or
xchg
cmp
jns
or
fisttpl
out
sbb
push
sub
sub
add
mov
mov
movsl
cmp
xchg
lods
push
in
mov
sub
movsl
test
imul
bound
jno
mov
and
pop
push
jb
test
inc
insb
sub
jl
mov
sti
test
push
std
pop
dec
daa
and
dec
xor
dec
push
xor
or
mov
dec
frstor
das
pop
or
jb
nop
pop
stc
psubd
fs
pushf
mov
cmpsb
pop
cmp
stc
outsl
fisubrl
mov
xor
mov
xchg
or
pop
xorl
ret
inc
aas
add
cmp
sub
or
jmp
repz
jne
adc
lea
arpl
sbb
mov
enter
add
pop
notb
lcall
adc
cwtl
mov
jle
bound
lret
loope
cmp
test
shll
xchg
stos
rorl
push
push
loop
cmp
movsb
les
xorb
adc
cmp
mov
xchg
pop
int
push
dec
je
mov
mov
fstl
or
and
scas
scas
into
mov
ret
sbb
cmp
or
and
xchg
jae
mov
fcomip
fildl
and
xor
add
push
sub
add
aam
mov
sub
push
mov
clc
lahf
mov
es
sub
push
pop
push
leave
adc
sub
test
aaa
push
ljmp
mov
dec
adc
outsb
mov
sbb
test
inc
and
xchg
mov
lahf
orb
xor
sub
out
mov
cltd
mov
push
jle
jae
stos
xor
dec
and
movsb
mov
push
iret
mov
lahf
inc
loop
push
xor
xlat
pop
pop
addl
xlat
mov
cmc
imul
jb
enter
cmp
lahf
sbbb
sbb
add
imul
dec
mov
loope
repnz
push
sub
cmp
push
in
cltd
mov
jp
shlb
mov
out
pop
lcall
das
rcrb
xlat
dec
cli
and
arpl
cwtl
pop
pop
mov
ret
aam
jne
jge
stos
into
fdiv
ja
sub
dec
xor
adc
push
jns
sbb
adcb
push
insb
cwtl
das
out
repz
into
sbb
dec
mov
lods
decl
jmp
in
mov
cmp
aam
adc
sub
mov
mov
push
das
pop
jle
scas
cmpsb
xchg
stc
test
scas
push
les
in
pop
and
xchg
inc
mov
mov
lahf
mov
dec
iret
rolb
cmp
sbb
inc
or
lcall
aaa
dec
adc
jmp
lret
js
lret
xchg
shr
std
dec
in
sub
imul
or
inc
push
mov
arpl
sbb
mov
inc
jecxz
call
cltd
or
jle
inc
push
jl
inc
int
lods
movsl
sete
leave
outsb
and
mov
mov
cmp
jmp
jno
inc
je
sub
imul
jp
sub
movsb
push
stc
mov
int3
inc
aas
pop
mov
jle
test
cmp
jg
xor
es
imul
dec
inc
pushf
mov
or
mov
push
cwtl
cmp
or
mov
xchg
ret
cli
jmp
cmp
div
divb
and
push
data16
dec
daa
lds
test
adc
push
sbb
jb
mov
mov
pop
pop
ss
lret
imul
adc
roll
js
stc
iret
mov
pop
mov
es
pop
adc
iret
and
shrb
inc
push
cmpsl
test
jmp
push
add
jae
je
pop
cmp
das
inc
jecxz
out
sub
add
adc
stc
mov
push
int
mov
enter
cwtl
push
iret
mov
hlt
cld
cmp
pop
fs
lcall
add
mov
jmp
ja
cmpsb
ret
test
jno
bound
adc
xchg
arpl
or
out
iret
dec
xchg
sar
mov
and
mov
das
push
gs
xchg
or
and
cld
cwtl
lods
in
movsb
mov
sub
push
jmp
lods
push
jmp
cmpsl
push
jmp
mov
in
xor
sar
cld
pop
.byte
