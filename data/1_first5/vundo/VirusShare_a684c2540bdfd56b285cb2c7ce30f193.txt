jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
inc
and
jne
mov
xor
ja
outsl
add
add
add
add
add
add
add
add
adc
adc
movsb
add
in
dec
add
add
add
and
flds
push
add
jae
pusha
add
add
push
add
pop
or
add
lret
add
add
push
add
push
add
add
add
add
add
add
add
add
pop
add
mov
loop
adc
les
xor
add
ret
add
pop
add
pushf
add
cmp
add
add
add
aaa
add
or
mov
add
imul
aas
add
add
add
sbb
push
add
add
mov
sbb
adc
les
xor
xchg
add
add
pushf
add
add
flds
cmp
xchg
add
les
imul
xchg
add
add
add
add
push
add
add
mov
add
add
add
mov
push
add
add
inc
add
add
add
cmp
les
in
dec
add
add
add
add
sub
mov
in
les
pop
add
add
add
add
add
add
sbb
add
js
or
push
add
stos
add
add
add
push
add
sub
xor
xchg
add
push
add
jne
faddl
enter
mov
add
add
add
sub
add
inc
add
or
push
add
add
add
add
add
add
test
scas
add
add
push
add
add
ljmp
add
mov
add
add
mov
add
add
cmp
test
xchg
add
add
add
add
add
add
push
add
add
add
or
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
loop
scas
add
add
add
das
add
mov
add
add
add
add
inc
add
add
add
inc
add
in
les
push
add
add
add
lret
add
add
add
add
nop
add
add
add
enter
mov
in
les
xor
add
add
and
xchg
xchg
add
add
inc
add
add
add
add
add
sbb
push
add
add
xchg
add
add
add
movsb
add
add
add
rolb
add
add
int3
add
add
add
add
add
inc
add
xchg
add
add
les
adc
add
add
add
add
mov
add
add
add
add
add
add
and
dec
add
stos
add
les
les
adc
jb
mov
add
lods
add
add
add
add
mov
pop
add
add
add
add
add
add
add
add
and
pushf
add
add
add
add
add
add
push
add
add
add
add
cltd
add
faddl
inc
add
add
add
or
inc
add
add
pushf
add
push
add
add
test
pushf
add
add
adc
loop
push
jp
pusha
inc
fs
in
dec
or
mov
cmpsl
pusha
cwtl
aad
xor
pop
add
mov
add
add
push
cmpsb
xchg
cmp
or
sbb
out
pushf
add
movsb
sub
jae
sub
stc
in
aad
jae
aam
jecxz
fucom
bound
lahf
outsl
arpl
shlb
push
pop
sbb
in
in
pop
push
mov
jle
cmpsb
sbb
sub
fidivrs
sbb
shlb
xor
mov
stos
dec
jb
rcrb
add
lret
hlt
mov
outsb
loopne
fmuls
push
add
sbb
and
xchg
repz
icebp
movsb
mov
decb
lahf
lret
or
or
and
out
loopne
mov
std
mov
pusha
cmp
pop
xchg
loope
lock
ret
faddl
aam
mov
and
pop
int3
imul
cmp
test
and
cmp
push
cltd
mov
ja
in
push
mov
and
aas
ret
inc
je
ret
rcrb
add
hlt
xlat
push
pop
arpl
mov
pop
adc
pop
jae
jmp
mov
sbb
sub
mov
fcmovnb
add
sbb
and
mov
and
mov
in
adc
add
in
jno
pop
push
cli
lret
in
movsl
add
data16
mov
jg
cli
cmp
mov
je
pop
push
lcall
push
sbb
add
sub
pop
shll
arpl
dec
cld
mov
xchg
lods
ficoms
arpl
out
xchg
and
sub
icebp
cli
push
cmp
push
add
pop
or
das
addr16
sqrtps
lods
mov
loop
test
fldt
aad
shlb
mov
ret
mov
adc
adc
xor
pop
push
dec
push
inc
pushf
repnz
pop
pop
mov
jecxz
mov
fnstcw
dec
sbb
clc
ss
les
sbb
lea
and
clc
fwait
xchg
xchg
sti
shrl
mov
fistpl
mov
shrb
sbb
push
pop
and
jmp
adc
mov
pop
popa
pop
mov
mov
arpl
cmp
push
test
mov
mov
ss
test
faddl
test
xor
dec
adc
jge
sti
xchg
test
es
adc
shl
xchg
mov
xchg
mov
out
rcl
mov
into
div
btc
lds
loope
loopne
stos
mov
inc
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
ret
push
pop
icebp
dec
sbbl
lahf
or
lret
add
and
lea
dec
cmpl
mov
inc
clc
push
ljmp
adc
lcall
jae
sub
and
xor
sbb
or
arpl
jne
insl
mov
cs
roll
lcall
fdivrp
pushf
inc
push
adc
sub
shlb
mov
aam
nop
cmp
mov
and
lret
dec
jmp
lcall
xchg
add
shrb
test
jg
sub
dec
adc
or
push
pop
sbb
ljmp
push
adc
jmp
xor
ds
fmull
jge
sbb
sub
or
shr
popa
lahf
xor
inc
rclb
daa
fstps
dec
mov
pop
jno
pop
and
call
jmp
xor
loope
icebp
push
gs
sub
loop
repnz
ret
inc
rorl
sbb
test
mov
dec
out
insb
incl
mov
inc
xchg
add
jae
jg
dec
lcall
xchg
sub
sbb
addw
popa
scas
or
dec
divb
lods
cmp
aas
rclb
sub
cli
push
ljmp
adc
sarl
loope
icebp
dec
cmpl
mov
inc
cli
push
ljmp
adc
sarl
and
pop
dec
pop
std
mov
fists
outsb
fdivs
div
out
pop
pop
adc
lods
xor
out
test
pushf
mov
popf
push
mov
pop
xchg
mov
shlb
or
pop
jbe
pop
inc
pop
sub
mov
jmp
cmp
adc
scas
xor
mov
add
decl
test
adc
test
lret
jnp
incb
xchg
rcl
inc
icebp
fnop
mov
testl
mov
clc
inc
out
mov
shlb
xor
cmpb
stos
ljmp
inc
mov
jl
or
push
mov
in
into
das
sti
in
dec
cmp
mov
leave
xor
sub
xorb
lret
sub
mov
mov
push
ret
xor
mov
sub
mov
and
sbb
xchg
sar
jmp
jmp
cwtl
push
pop
ss
push
inc
dec
out
add
push
in
jp
rclb
repnz
push
data16
addr16
lods
shrl
or
cltd
mov
out
sbb
ret
mov
stos
andb
pop
fnstcw
xchg
pushf
xchg
ss
push
and
dec
adc
je
push
ret
sti
pop
insl
xchg
push
roll
xchg
and
mov
aad
push
ljmp
out
inc
lcall
lds
lret
mov
fldl
negb
out
xor
xchg
test
int3
or
xor
pop
rcl
test
lods
push
rcl
lea
cli
sbb
loopne
popl
sbb
imul
add
jmp
outsl
js
mov
adc
lret
pop
sahf
call
test
int3
or
movntq
cmc
insb
outsb
insb
inc
hlt
push
push
lock
add
hlt
cmp
popf
in
call
lret
pop
cmp
sbb
in
cs
mov
movlps
or
rorl
sub
jno
xchg
push
inc
enter
rolb
push
add
bound
in
aas
adc
cmp
mov
clc
push
fsqrt
fcoms
lcall
mov
add
and
adc
outsb
in
and
pushf
lds
pop
js
hlt
and
push
cmp
push
sbb
imul
mov
in
dec
aaa
and
sbb
cld
and
shll
repnz
sub
ss
ljmp
push
mov
jg
leave
or
hlt
jmp
xchg
jnp
andl
and
and
fistps
aaa
sub
or
pop
mov
ds
movsb
enter
xchg
mov
xlat
fstps
lock
mulb
in
jae
addr16
dec
es
push
out
out
decb
into
ds
xchg
bound
fs
and
jl
fneni(8087
int3
dec
push
popa
or
sbb
jno
stos
xchg
sub
xor
add
fidivl
lock
sub
and
mov
arpl
push
jns
xor
pop
cwtl
inc
out
cmpsb
or
or
in
pop
call
xchg
popf
xchg
dec
push
sbb
outsl
clc
lods
jge
test
sub
and
add
je
mov
push
negl
leave
xor
lea
xchg
mov
sbb
inc
fistps
fldt
jg
pop
fldcw
jmp
out
xor
adc
or
or
or
jmp
mov
dec
sub
inc
sarl
inc
xchg
inc
mov
or
or
mov
out
pop
insl
lret
inc
daa
int
cmp
inc
inc
fs
repnz
pop
ret
rolb
and
push
and
xchg
cmp
das
lcall
add
jmp
das
jmp
jmp
dec
fwait
sbb
or
fidivl
or
jnp
push
out
mov
or
in
mov
movsl
xor
pop
leave
jmp
jo
dec
mov
pushl
shr
loop
adc
in
dec
int
xchg
imul
inc
mov
mov
push
cltd
filds
cmp
cld
ds
mov
pop
icebp
out
scas
add
cmp
ja
jg
pushf
out
inc
ss
daa
sub
imul
aas
popf
jo
sbb
scas
mov
gs
push
aas
sbb
popf
lea
shll
push
pop
nop
dec
stos
mov
push
pop
out
push
aaa
jno
mov
testb
sub
in
cmpsb
and
pop
or
mov
lea
ljmp
jmp
push
cmpsl
sub
xchg
mov
or
cmpsb
pushf
sbb
fs
fdivrp
sbb
test
mov
aad
lahf
inc
mov
sub
and
xchg
pop
push
dec
daa
mov
in
imul
mov
mov
lret
mov
push
xor
cmp
out
out
repnz
iret
adc
out
mov
roll
mov
dec
lahf
cmpsb
cld
inc
lret
mov
pop
ja
sbb
inc
loop
adc
or
and
add
fwait
in
inc
out
lret
jne
nop
or
adc
jmp
mov
pop
mov
cmc
cld
xor
das
movsl
sbb
pop
xchg
pop
adc
aam
pop
jp
push
inc
daa
pop
push
push
dec
je
jmp
cmc
inc
cmc
pop
xlat
jmp
or
in
jmp
push
jbe
cs
dec
js
fldcw
pop
out
mov
pop
in
xchg
shrb
mov
adc
daa
insl
mov
cmp
sub
ret
test
insb
push
mov
add
sbb
bswap
mov
ja
pop
test
dec
sub
mov
xchg
cmp
pusha
in
cmp
mov
ds
daa
push
dec
fidivrl
mov
fsubrs
imulb
lods
mov
out
xorl
push
sub
cmp
or
and
lcall
sahf
cmp
test
push
pop
test
shl
lret
ficoml
call
fsubp
outsl
jbe
cmpb
fdivrl
adc
or
push
push
rolb
cmp
loopne
inc
or
mov
fs
into
dec
loopne
loopne
and
pop
lods
xor
add
and
fldt
xchg
out
mov
dec
sub
insb
jae
rcrl
cmp
lahf
shrl
xor
ja
fnsave
fdivrs
stos
aaa
mov
addr16
pop
push
pop
jp
push
jle
cltd
or
lret
cmp
adc
or
push
gs
pop
adc
sarb
imull
je
jl
insb
mov
aaa
aaa
sub
push
mov
cltd
lahf
xchg
push
clc
out
nop
das
or
in
push
aas
push
xchg
and
scas
stos
mov
fldenv
call
std
sub
or
popf
cld
pop
sarb
xchg
inc
pop
pusha
sbb
mov
pop
daa
pop
call
sti
mov
xor
mov
test
push
xchg
in
lock
lds
in
jecxz
mov
out
les
daa
xchg
cmc
mov
push
loop
outsl
or
hlt
inc
inc
pusha
sub
mov
push
xchg
lock
jb
aad
mov
inc
cmp
xor
mov
mov
or
iret
xor
cli
mov
out
pop
dec
adc
popf
xchg
adc
cmp
and
jbe
pusha
roll
sar
stc
shrl
and
push
cmp
idivb
mov
adc
adc
loopne
jp
sbb
push
sarl
pop
jle
ficompl
out
arpl
xchg
push
mov
lahf
sub
gs
push
xchg
test
movsl
test
mov
loopne
mov
jbe
out
aas
jne
xchg
dec
sarb
mov
xor
jne
lods
in
xorb
mov
fs
jae
push
sar
add
push
xor
lods
xchg
inc
int3
fimuls
call
aaa
icebp
out
push
xchg
inc
jecxz
inc
fcmovne
sub
hlt
jnp
ja
add
xchg
xchg
loop
notl
or
popf
dec
aas
daa
pop
repnz
ja
jnp
repnz
mov
incb
mov
in
movsb
mov
fsubl
adc
mov
les
jns
adc
fiadds
mov
mov
lret
jge
imul
mov
xchg
std
dec
adc
cmp
ljmp
in
lods
mov
push
mov
rcll
das
scas
pusha
lret
xchg
and
and
addr16
mov
dec
ja
inc
inc
out
mov
fiaddl
out
lods
addl
or
pop
mov
xchg
loop
push
fwait
jae
xchg
sbb
inc
cmp
fdivs
fdivrl
mov
int
inc
jp
jp
sbbb
les
std
add
adc
or
mov
pop
pop
push
rorb
sti
jns
aam
das
inc
cmp
add
pop
les
sahf
or
sbb
mov
lret
jnp
repnz
cld
sub
sub
sahf
jo
rorb
test
jnp
push
lret
out
lods
jae
mov
jbe
cld
adc
xor
adc
call
pop
xchg
jecxz
out
cli
add
pop
jecxz
push
jb
cltd
je
fdivrl
xchg
xchg
loop
inc
or
out
add
sbb
call
packuswb
xchg
daa
dec
shlb
inc
or
push
out
jmp
sub
push
shrb
push
mov
pop
dec
fwait
cmp
loope
xlat
xor
nop
setne
pop
repz
test
xor
jnp
cmp
push
add
jno
add
cmp
testb
dec
jb
mov
sbb
gs
xor
aad
add
sub
loopne
lahf
lret
cmp
std
popf
aas
in
and
fildl
mov
push
shrl
fwait
enter
inc
mov
call
daa
call
rolb
mov
out
xchg
call
stos
test
cmpsb
aam
mov
js
adc
sbb
hlt
mov
hlt
cmp
outsb
inc
cmc
rolb
jb
mov
mov
fs
lcall
push
gs
adc
mov
lods
lcall
arpl
cmpsb
sahf
or
mov
dec
jbe
dec
popf
ret
mov
sub
cmp
mov
stc
nop
test
add
jle
inc
mov
mov
lcall
inc
repnz
adc
sti
adc
mov
sbb
lods
mov
push
fidivrs
push
mov
pop
or
cmpsl
adc
jle
cmpsl
scas
dec
in
inc
mov
lahf
mov
loope
push
sti
cmove
lods
jmp
cmp
adc
add
aaa
out
popa
mov
lods
sbb
xlat
push
adc
popf
lret
jbe
adc
jae
je
cltd
daa
sbb
repnz
jl
lcall
arpl
loop
cmpsl
lahf
aas
imul
adc
in
dec
jns
or
sbb
xchg
insb
mulb
cmp
test
cmp
xorb
sub
add
loop
xchg
xor
lret
cld
mov
mov
cmp
mov
and
xchg
std
roll
xchg
cltd
mov
lret
and
in
mov
adc
orl
call
xchg
out
data16
repz
test
or
mov
cmpsb
movl
adc
mov
int3
ja
call
xor
xchg
dec
inc
hlt
ror
adc
xchg
push
and
ret
sahf
scas
jnp
lods
jg
out
test
sub
int3
mov
sub
repnz
daa
dec
push
dec
dec
mov
add
dec
cmp
cmp
dec
mov
call
push
ret
jne
or
test
iret
and
fadds
pop
in
push
das
push
xchg
and
hlt
popa
cld
mov
xchg
xor
out
pop
push
das
push
repz
lods
mov
push
mov
inc
inc
add
add
jge
bound
pop
cmpsb
mov
push
nop
pop
je
dec
mov
add
lods
mov
push
fs
push
sbb
scas
push
pushf
mov
aas
and
add
les
in
or
jo
sub
push
outsb
int
cmpsb
dec
fnsave
pop
lret
or
gs
push
mov
in
ljmp
fdiv
dec
push
xor
loopne
ljmp
pop
xor
clc
mov
mov
fcmovnb
adc
fmuls
hlt
mov
push
xor
add
sbb
xchg
push
mov
test
sahf
mov
dec
clc
sbb
jl
add
dec
ds
out
jmp
cmp
loop
gs
xchg
rorb
add
inc
sahf
lahf
es
jns
pop
dec
mov
add
lock
mov
push
lods
push
and
fcompl
xchg
adc
adc
scas
decb
or
xchg
addr16
stos
movsb
lret
add
je
test
mov
aas
iret
pusha
andl
stos
pop
add
fsubs
and
add
dec
sub
aam
movsl
and
je
adc
pop
mov
jecxz
enter
outsl
sub
or
decb
movsb
sub
jp
nop
pop
into
lahf
xchg
and
lods
cld
mov
adc
cmpsl
jge
mov
lret
jbe
sub
fwait
into
test
adc
and
jns
rorl
test
adc
mov
cld
xlat
shrb
aam
out
sti
pop
pop
pushf
mov
mov
int
dec
call
adc
outsl
mov
scas
ds
jno
push
cs
fisttps
xor
inc
cli
in
aam
push
xlat
xchg
and
dec
xchg
sbb
sbbl
pop
cmp
mov
or
and
push
pop
std
loopne
out
adc
push
xor
shlb
adc
xor
aad
sahf
into
in
push
push
icebp
aas
push
into
sbb
mov
mov
jnp
fsts
sahf
mov
into
mov
or
or
cli
cmp
mov
lahf
mov
fists
stc
ja
and
pusha
jmp
ficomps
es
int
and
rorb
fsub
cmp
push
cld
mov
lret
mov
leave
lahf
call
enter
sub
mov
mov
xchg
mov
rcll
dec
push
jge
jg
add
leave
mov
cmpsl
clc
or
ret
lret
cmc
jnp
movsb
and
iret
mov
jecxz
add
sarb
out
lret
mov
inc
sar
pop
xor
popf
scas
das
test
loope
leave
xchg
pop
cld
ja
jno
mulb
loope
fildll
dec
out
loope
inc
andl
lret
das
loopne
cmp
add
movsl
insl
mov
iret
into
push
jns
cli
mov
jge
clc
xchg
dec
fsubrl
jg
pusha
xchg
cmpsl
cmp
push
mov
cmp
lds
adc
jne
mov
cmpsl
inc
mov
mov
sub
inc
mov
in
out
mov
scas
faddl
mov
add
sub
and
adc
mov
scas
dec
mov
mov
and
scas
cmc
je
adc
daa
xlat
ror
mov
and
popa
and
out
mov
out
mov
add
mulb
sbb
mov
ret
dec
cs
mov
sbb
pop
gs
inc
lret
cs
aam
rorl
sub
and
mov
lods
cmpsl
iret
adc
pop
jbe
pusha
xchg
je
ds
shrl
mov
hlt
hlt
sarb
jmp
add
ret
movsb
filds
jae
imul
and
pop
imul
add
les
jge
xchg
outsl
push
jb
iret
push
rcrl
pop
mov
xlat
cld
ficomps
or
subps
push
cmp
or
xor
dec
mov
repz
out
leave
aas
rorl
add
loope
mov
data16
jne
dec
insb
jne
mov
sbb
pop
add
ffreep
test
js
mov
fistpll
cmp
popf
adc
sub
push
xchg
push
mov
or
cmp
movsb
ret
jae
out
mov
in
xor
test
int
push
mov
xor
inc
stos
mov
imul
loop
push
iret
das
add
lcall
add
popa
inc
aas
mov
add
xchg
arpl
lret
xor
jns
and
and
andb
repz
add
inc
pop
adc
pushf
adc
cli
stos
lods
stos
je
mov
dec
jge
ja
xchg
sbb
mov
jp
sub
in
mov
mov
leave
adcb
into
ljmp
mov
fisttpll
aad
inc
lea
jbe
test
data16
pop
xor
cmp
imul
and
icebp
mov
out
hlt
push
iret
pop
enter
loop
cmp
aas
mov
mov
hlt
fdivr
negl
dec
fsts
and
dec
pop
inc
mulb
iret
das
test
jbe
subb
scas
shlb
pop
push
mov
fbstp
mov
fmull
outsb
lock
idivb
icebp
xchg
cmp
lret
jg
and
data16
ss
push
sbb
int
enter
leave
lret
dec
xor
xor
leave
shrl
xor
mov
xchg
test
add
jns
push
and
push
ss
out
addb
adc
arpl
je
imul
dec
loop
mov
loop
dec
push
mov
dec
jge
cmp
ja
ret
xchg
shlb
cmp
aas
pop
pop
je
shrb
inc
xchg
add
add
jmp
outsl
pushf
pop
shrb
or
aam
jnp
jp
push
push
loop
pop
xchg
in
pop
mov
sub
push
inc
daa
add
jmp
pop
int
or
jo
xor
bts
xchg
pop
push
std
psubd
xchg
flds
sbb
and
jl
les
dec
or
fisubs
cmpsb
dec
addr16
cmp
test
ret
sarl
pop
dec
notb
add
jge
je
adc
xor
and
ja
mov
ja
imul
sbb
sti
pop
jbe
mov
xchg
mov
or
xor
repz
out
xchg
out
dec
mov
mov
xorb
loopne
sub
movsb
push
push
into
aas
in
push
inc
dec
fistps
stos
mov
int3
jne
mov
jmp
aas
stc
mov
mov
shr
mov
aas
sti
xor
push
xor
push
cmp
dec
mov
push
lret
dec
sarl
pop
lahf
loop
cwtl
das
inc
push
ljmp
inc
fldcw
sbb
cmp
cmpsl
add
inc
jl
in
and
ss
and
in
fisubl
adc
inc
notb
xor
stos
fcmovnu
xor
or
mov
adc
pop
add
imul
loope
in
js
dec
dec
jno
in
mov
jmp
insl
sarb
dec
pop
pop
or
ss
neg
add
add
jo
outsl
mov
fbld
inc
xchg
inc
sbb
mov
mov
xor
int3
adc
and
fst
in
pop
aaa
ret
pop
pop
mov
sbb
mov
xchg
jle
aaa
mov
sub
add
stc
lret
fmul
icebp
mov
leave
dec
lods
mov
outsl
sbb
loope
adc
loopne
imul
cwtl
mov
xchg
andl
adc
mov
cmpb
mov
test
lcall
aam
jl
leave
jnp
jo
scas
rcrl
test
mov
lcall
inc
xchg
push
adc
hlt
jae
mov
scas
pandn
cmp
iret
cmp
jmp
ljmp
xchg
push
jle
gs
out
mulb
pop
loopne
dec
fld
gs
xchg
in
sbb
outsb
cmp
xor
push
daa
jo
in
pop
or
inc
lea
pop
fld
lods
and
hlt
mov
or
ds
push
movsb
test
sahf
aad
adc
cmpsb
mov
pop
insb
in
add
mov
fldenv
stc
test
loopne
mov
nop
aam
sbb
jg
shrb
or
icebp
sub
pop
popf
mov
cmpsl
pop
and
push
xchg
mov
pushf
insb
xchg
inc
nop
pusha
sub
xor
push
jge
lds
inc
movsl
dec
fcom
pushf
mov
outsl
cmp
push
dec
les
test
xchg
xchg
fmull
and
lds
dec
jb
shl
aad
popa
xor
ficoms
les
sbb
in
push
pusha
dec
andb
push
mov
push
sub
aas
cmp
xor
aas
mov
sbb
cmp
sbb
rclb
js
adc
mov
xchg
enter
lock
xor
sub
pushf
xchg
pop
sbbb
pop
int3
jne
lock
shll
xor
lret
mov
icebp
dec
cmpl
mov
inc
cli
push
ljmp
adc
sarl
loope
icebp
dec
cmpl
mov
inc
cli
push
ljmp
adc
sarl
sbbl
sub
cli
push
ljmp
add
aad
lea
pop
rorl
cmp
or
scas
inc
lret
fidivl
jbe
cltd
push
fisubs
jne
aas
out
das
addr16
ja
or
jle
push
jg
dec
xchg
icebp
xlat
scas
out
testl
dec
aas
push
das
addr16
ja
pop
jg
outsl
daa
pop
aaa
aaa
xchg
mov
testl
popf
aas
xlat
das
loope
mov
pop
jg
outsl
or
dec
mov
xchg
out
cmpsl
stos
lret
mov
push
dec
ja
and
jl
aam
hlt
pop
aam
call
mov
xchg
pop
inc
decb
or
mov
inc
lret
sub
mov
add
push
es
sahf
pop
aas
inc
and
testl
push
lods
bndldx
or
js
sbb
push
pop
call
or
aaa
and
fsubr
outsb
es
test
sbb
outsl
or
xchg
adc
dec
stos
jg
dec
mov
clc
notl
pop
inc
xchg
sbb
mov
out
neg
ret
mov
rorb
jle
cmpsl
mov
scas
das
cld
out
negl
loop
cmpsl
fidivl
das
addr16
sbb
pop
jg
outsl
daa
pop
dec
xor
lahf
jmp
out
cmpsl
cmpsb
xor
pop
sbb
imul
push
sbb
cli
xchg
sti
out
mov
lock
mov
and
inc
sub
hlt
xchg
or
ljmp
mulb
pop
insl
ss
push
pop
outsl
daa
pop
aaa
dec
mov
testl
inc
aas
push
das
addr16
ja
pop
jg
outsl
daa
pop
aaa
dec
mov
testl
inc
aas
xchg
inc
iret
repnz
dec
or
in
gs
fnstenv
dec
mov
xchg
xchg
cld
rcrl
jge
in
pop
mov
iret
add
dec
sub
jecxz
pop
xchg
lods
dec
jb
scas
es
lds
pop
cltd
xor
mov
rclb
icebp
push
mov
lods
fsubrl
leave
push
mov
lods
jg
leave
sti
mov
mov
clc
vmwrite
mov
rcll
divb
xor
lds
cli
aaa
sub
in
dec
scas
test
or
adc
js
xchg
pushf
enter
das
xchg
xor
push
push
or
inc
repnz
mov
lods
dec
jae
mov
and
aas
add
mov
rcrb
mov
repz
jmp
mov
mov
rorb
sbb
rorb
loopne
xchg
inc
adc
rcrl
loope
xlat
sub
int3
fdivs
enter
out
repz
out
jle
jmp
cmpb
daa
ret
data16
out
popa
mov
xchg
sbb
aas
sbbl
mov
cwtl
stc
inc
and
mov
push
lcall
dec
fwait
shr
sbb
jno
fs
dec
pop
xchg
jl
or
pop
ret
and
shlb
xor
jbe
lds
cmp
push
ljmp
cmp
push
sub
xchg
and
mov
frstor
gs
jl
sub
push
mov
ret
jno
push
sub
pop
fs
xor
fdivrs
dec
mov
or
addr16
leave
loope
test
xlat
ljmp
xorl
mov
inc
jne
and
and
jge
pop
fsubs
xorb
dec
xchg
lcall
int3
cmp
add
or
fbstp
pusha
sbb
stos
shrd
sub
shll
mov
xchg
sbb
adc
jne
fsubrs
cmp
aam
outsl
pop
xchg
daa
xchg
roll
sub
movsl
inc
push
leave
sbb
icebp
fs
add
jbe
dec
pop
bound
mov
ja
xchg
xchg
mov
lret
inc
mov
sarl
mov
out
cmp
cmp
jbe
mov
mov
sub
dec
mov
nop
in
daa
adc
clc
cmpsb
mov
lods
ljmp
push
inc
or
std
fprem1
aad
aad
pop
and
ret
stos
or
adc
sbb
mov
lret
std
add
xchg
std
sub
adc
lret
mov
fstpl
mov
mov
lahf
mov
dec
mov
mov
outsl
fmulp
movsl
cs
std
sbb
notl
pop
and
testb
movsl
lock
adcl
push
sub
xor
mov
inc
adc
dec
cmc
xorl
inc
xchg
mov
cmpsb
roll
push
inc
sbb
ficoml
in
ffreep
sub
ja
test
xor
gs
push
insb
insl
aad
inc
sbb
loope
mov
mov
scas
xchg
inc
and
mov
jns
push
dec
xchg
iret
xchg
push
sub
xor
sbb
stos
xor
mov
and
add
xor
arpl
nop
xchg
push
loope
clc
adc
rcrl
daa
or
ret
jae
pop
lods
xchg
mov
sbb
lea
xor
adc
dec
aas
mov
movsl
daa
inc
int3
push
lcall
sub
jge
adc
inc
cs
insl
aad
subb
bound
hlt
push
ret
negb
mov
in
mov
ds
cltd
xor
push
push
inc
push
push
jmp
cmp
mov
call
pop
idivb
shrl
pusha
sti
ret
scas
sbb
or
adc
test
insb
dec
xchg
and
clc
pop
mov
mov
nopl
sbb
arpl
addb
lds
jmp
xor
lret
inc
fwait
cmp
add
fistps
lret
dec
mov
lret
lds
repz
fwait
les
and
imul
leave
insl
mov
inc
jo
in
int
ja
shrl
add
mov
je
jns
das
inc
xlat
jb
mov
xchg
aam
xchg
mov
out
push
push
addr16
jae
pop
sub
mov
inc
dec
xchg
insl
pop
dec
syscall
mov
clc
gs
std
pop
push
jae
shrb
popa
jg
pushf
ljmp
adc
mov
pop
leave
shlb
cmp
and
sahf
outsl
dec
pop
lea
xor
inc
out
popa
sti
mov
gs
sahf
fcomip
icebp
jle
mov
jne
mov
mov
and
jno
lahf
jbe
jbe
jns
mov
mov
and
inc
mov
pop
jo
mov
lret
aas
in
das
add
pop
mov
sbb
and
std
adc
and
add
stos
ds
stc
push
call
or
fs
dec
mov
dec
jbe
lds
in
adc
js
mov
das
mov
pop
pusha
jno
xchg
loop
jmp
lods
mov
mov
cmpsl
outsb
es
imul
mov
jo
pop
dec
sbb
mov
ror
mov
mov
xor
clc
dec
fcompl
xor
insb
fisubs
jp
hlt
inc
iret
mov
xlat
ret
rorb
mov
jecxz,pt
jbe
and
cli
mov
add
lods
xchg
shll
sbb
mov
daa
jle
rorb
add
push
in
pop
or
pop
aad
sbb
push
add
jbe
mov
lahf
inc
dec
ret
fcoms
cmc
dec
lods
mov
xchg
mov
popa
out
mov
loope
jno
cmpsl
inc
rorb
mov
mov
dec
mov
push
bound
sub
cmpsl
int3
repz
bound
sub
cwtl
fisubrs
sub
out
cmpsl
cmp
ja
and
cmpsl
shr
sub
out
loopne
imul
xchg
mov
pop
inc
insb
mov
push
or
add
fsubrl
push
sub
clc
xor
iret
popl
mov
add
test
hlt
inc
test
and
sbb
push
repz
outsb
sub
pop
outsb
sti
xchg
xlat
outsb
leave
rcrb
add
dec
sbb
negl
sbb
sbb
push
pop
daa
pusha
in
mov
mov
mov
fisubrs
lahf
xor
imul
lods
cmp
jp
movsl
test
test
fnsave
sarb
mov
add
aaa
sub
aam
jmp
std
jge
lahf
rcl
pop
adc
mov
jg
pop
test
xchg
push
loopne
aam
lcall
dec
bound
aad
lret
xchg
aam
stos
add
sub
and
push
sbb
rcr
lods
jmp
add
push
mov
inc
adc
dec
add
xchg
inc
insb
rcr
xchg
xchg
clc
mov
sub
adc
scas
mov
jle
cmp
hlt
icebp
testl
mull
mov
aas
xor
int
jb
push
xor
stos
pusha
subb
dec
sbb
cmpsl
aam
in
jno
inc
stos
iret
orb
inc
mov
push
xchg
mov
cvttps2pi
dec
out
int3
lret
scas
cwtl
pop
xor
pcmpgtw
std
add
mov
ret
push
mov
and
cwtl
cmpb
popl
es
xchg
aad
xor
pop
inc
sahf
mov
lret
xor
push
mov
mov
inc
fcmovnb
pop
xchg
jne
sbb
dec
enter
sub
ror
mov
aad
les
push
dec
add
and
sbb
loope
dec
icebp
cmp
out
adc
test
sub
push
push
push
sub
or
mov
aas
stos
ficompl
leave
arpl
cmp
lahf
mul
pusha
xchg
shll
inc
xor
pusha
push
xchg
or
jmp
xchg
aas
sti
jge
push
shrl
loopne
or
mov
push
mov
int3
nop
mov
fcoml
jle
stc
xchg
mov
fnstsw
in
in
rcrb
mov
aaa
out
in
lahf
lock
jnp
jbe
pop
jge,pt
mov
filds
andl
jecxz,pn
inc
pop
test
sbb
int
mov
ror
lods
xor
and
mov
mov
repz
movsl
jns
jnp
out
push
mov
fs
out
in
mov
rol
in
add
push
nop
ret
outsl
loop
mov
push
mov
fstps
jnp
cs
fwait
enter
adc
shrb
xor
xchg
movsl
mov
push
and
push
mov
mov
es
faddp
ljmp
jmp
out
add
call
inc
fisttps
and
fs
outsl
dec
jb
imul
out
push
cmpsb
push
cwtl
loopne
inc
sbb
addr16
jbe
pop
test
int
xchg
ds
adc
aad
and
jnp
or
mov
mov
hlt
xchg
shl
or
xchg
jo
push
and
cli
stos
int3
les
leave
push
fwait
or
ficoml
mov
mov
mov
push
jmp
shlb
insl
stc
inc
mov
shrl
call
daa
cs
pop
stc
sbb
and
repz
imul
std
fsubrp
sbb
cltd
adc
mov
jmp
iret
les
pop
call
sbb
sbbb
mov
loopne
cmc
mov
imul
je
cmp
dec
jae
and
lock
and
mov
stos
sahf
cmp
sbb
dec
mov
mov
jnp
pushf
pop
push
sbb
xchg
jge
pop
pushf
inc
push
movsl
adcl
jmp
fldcw
lods
jbe
mov
popf
aas
sub
mov
jp
aad
mov
mov
in
jnp
inc
cmpsl
and
fldcw
sbb
addr16
mov
leave
nop
adc
lods
mov
iret
aam
add
lock
das
mov
iret
jbe
mov
mov
mov
mov
leave
xor
xorl
xchg
xor
sbb
xor
push
and
or
mov
scas
cs
lock
aad
adc
ljmp
push
imul
das
pop
jmp
cmp
cmc
sti
sub
ret
into
or
lods
inc
or
sub
mov
scas
movsb
cmpsl
sbb
lahf
leave
scas
sbb
aas
inc
xor
dec
std
xchg
xchg
or
cli
xchg
jp
je
daa
pop
mov
or
mov
jns
testl
xchg
in
ss
out
xchg
mov
icebp
jge
cmp
repnz
ficoms
data16
inc
cltd
adc
fnsave
mov
inc
jo
cmp
jmp
fmulp
outsb
pop
jae
adcb
outsl
push
stos
popf
mov
ljmp
cmp
inc
xchg
mov
xchg
cmp
or
mov
cmpsb
out
fimuls
inc
mov
cmp
mov
out
js
call
and
cltd
dec
jb
dec
push
jmp
dec
leave
mov
aad
push
lea
ret
mov
lret
jae
iret
popa
loopne
pop
xchg
fsubs
mov
das
das
ficompl
or
into
cli
xchg
cs
mov
dec
in
xchg
mov
fidivrl
xchg
aad
add
and
stos
ret
test
jnp
mov
jno
aaa
popf
mov
cmpsb
int
cltd
pop
mov
icebp
add
bound
hlt
add
cmp
and
shlb
push
fisubrl
es
rcll
cmc
xchg
sbb
imul
or
imul
ret
enter
push
mov
inc
inc
insl
in
inc
setp
cld
pop
les
mov
xchg
mov
mov
and
int
adc
adc
mov
decl
push
scas
push
xor
and
and
xchg
jle
and
mov
sub
fldenv
lea
popf
outsb
inc
stc
mov
testb
xchg
sub
sub
fldl
mov
loope
push
pop
sarb
rcrb
xchg
pop
mov
sahf
jo
imul
stos
adc
jg
push
out
add
out
mov
dec
xor
popa
jl
lret
in
hlt
mov
dec
jbe
out
push
xor
ret
add
jnp
dec
mov
sti
cs
pop
push
outsb
push
push
imul
or
daa
xchg
sar
mov
fiaddl
mov
dec
sbbl
cmp
fisubs
stos
mov
inc
xor
fcoms
sbb
cmpsb
pop
les
mov
jmp
in
and
call
ss
lret
shll
push
loope
je
aaa
adc
fucomp
lcall
jo
mov
les
dec
sub
ficomps
pop
pop
push
mov
ficoml
xchg
add
mov
mov
push
inc
dec
shrb
data16
lret
or
out
or
insb
repz
jmp
sbb
into
mov
ss
push
testb
ffreep
arpl
or
imul
mov
cwtl
dec
into
sbb
xor
std
mov
jecxz
movsl
pushl
rorb
inc
enter
hlt
xor
movsb
adc
mov
xchg
mov
out
lods
push
push
pop
inc
add
inc
or
cmp
push
into
jl
mov
xor
stos
decb
aam
or
sub
mov
mov
sbb
adc
scas
stos
jb
in
add
out
cmp
push
inc
jl
aam
cltd
addb
pop
pop
leave
xchg
mov
jmp
inc
ljmp
fnstcw
sti
push
xchg
xchg
ffreep
int
aam
pop
lock
fs
mov
mov
lcall
out
movsl
in
outsb
mov
dec
sahf
cmp
test
fcomps
mov
jnp
adc
out
aad
fisubs
inc
lret
mov
cs
ja
out
mov
and
outsl
gs
pop
out
rolb
xchg
jnp
arpl
xchg
push
mov
xor
jno
stc
sbb
lcall
incb
sbb
arpl
jle
out
test
xchg
add
pop
mov
ret
scas
jns
and
jnp
arpl
aas
aam
sub
into
stc
mov
dec
imul
ljmp
lods
call
not
inc
pop
pop
push
nop
dec
ja
repnz
push
mov
inc
pop
gs
and
out
jo
inc
pop
dec
in
sbb
mov
xor
push
mov
addb
push
mov
adc
push
outsl
popa
pop
inc
fisubl
push
mov
fadds
mov
jge
and
gs
ljmp
xchg
cld
jl
push
jnp
add
sub
jbe
movsl
xchg
and
mov
mov
inc
inc
sub
scas
cmp
das
into
mov
gs
push
xchg
cmpl
test
mov
or
inc
jae
or
xor
mov
or
jno
aaa
leave
jns
xlat
push
sub
adc
jb
dec
cmpsb
inc
arpl
cmp
jo
js
ret
push
jl
push
lcall
call
xchg
xchg
mov
push
orl
aam
push
jnp
repnz
dec
ret
std
inc
xchg
inc
mov
push
xor
aaa
int
movsb
in
popf
sub
push
xor
stos
pop
jnp
loopne
outsb
mov
mov
mov
pcmpeqb
cli
repz
cmp
cltd
or
xor
mov
push
imul
iret
std
add
addl
ret
mov
pop
mov
hlt
fs
int3
jo
and
test
xchg
stos
mov
push
es
mov
dec
iret
out
adc
adc
inc
pop
jp
in
dec
inc
adc
mov
mov
mov
add
aam
xchg
push
pop
push
sub
inc
dec
popf
fwait
mov
stc
loop
dec
testl
scas
addb
dec
xchg
add
shll
std
dec
gs
push
or
sbb
sahf
repnz
xchg
sbb
sarl
sub
arpl
add
movsb
xor
jmp
dec
adc
mov
pop
insl
or
jae
adc
fidivl
popa
fisttps
test
shll
shll
lea
pop
pop
jle
cmc
jnp
xchg
into
lods
imul
mov
lods
mov
cmp
popa
mov
nop/reserved
shlb
shll
dec
outsb
adcb
cmp
add
mov
jns
inc
aad
out
fsubs
and
iret
pop
mov
dec
cli
sub
insl
lcall
or
cmp
pop
cld
sbb
dec
popa
pop
cmp
incl
xlat
lods
sbb
jge
leave
orl
adc
shl
push
xchg
jg
mov
add
out
lods
test
adc
xlat
std
mov
xchg
int
mov
mov
pop
sbb
sahf
sbb
int
iret
insl
and
xchg
jecxz
ljmp
inc
leave
jo
push
mov
push
and
cmp
iret
pop
inc
inc
popa
popf
hlt
jle
or
add
jno
jae
fs
out
sbbb
ficoms
outsb
sbb
sbb
lods
aaa
inc
inc
xlat
mov
imul
inc
ffree
aas
sbb
bnd
daa
out
imul
loopne
and
xor
out
stc
std
in
shlb
add
mov
pop
cmpsb
add
sub
jnp
or
jbe
pushl
sar
mov
nop
mov
xchg
lcall
mov
mov
fwait
andb
ficomps
fidivrl
iret
pop
jmp
sbb
lahf
out
mov
pop
das
or
and
sub
or
adc
pop
test
xchg
inc
xor
mov
dec
and
xor
inc
push
mov
or
or
inc
gs
jne
xchg
aas
sub
bound
test
jg
or
or
in
fsubl
test
nop
xor
push
loop
std
mov
outsl
mov
std
cmpsl
mov
add
jp
xlat
icebp
mov
inc
pusha
sub
sbb
imul
push
out
mov
jp
cmp
add
push
pop
fisubl
adcl
bound
sub
dec
roll
xchg
test
dec
push
mov
jne
or
jmp
inc
mov
xchg
arpl
mov
insb
push
sub
jno
cmp
sub
ret
mov
iret
out
adc
pusha
mov
and
fldl2e
inc
scas
int3
lret
iret
mov
lds
cmp
ret
imul
inc
xchg
mov
ljmp
jge
leave
and
jb
aaa
mov
and
or
in
lcall
bound
cmpsb
cmp
ret
mov
cmp
sti
pop
fdivrs
mov
movl
dec
call
push
enter
int3
int
push
dec
adc
or
mov
xor
mov
mov
add
cs
mov
ret
lods
mov
or
icebp
outsl
out
push
cmp
jne
pop
daa
loope
mov
mov
insl
fimuls
insb
jg
xchg
ret
adc
rorb
xchg
out
fdivr
cmp
jns
popa
sti
popf
dec
cmp
xchg
sub
sahf
imul
ret
and
pop
inc
or
in
ja
sbb
scas
pop
mov
and
out
mov
outsl
aaa
daa
and
mov
push
xorl
adc
and
mov
stc
push
or
jns
push
mov
js
add
fimuls
in
jl
xor
fnstenv
cmp
sub
popw
and
jae
ljmp
mov
dec
jnp
in
rorl
stos
jae
pop
pusha
into
inc
mov
jp
inc
cli
bound
inc
jle
cwtl
mov
jbe
int
test
imul
mov
out
sub
jb
aas
dec
ss
out
test
sub
enter
cmp
scas
mov
or
inc
sbb
cmp
aaa
push
xlat
and
jne
clc
dec
mov
xor
insl
scas
add
cmp
pop
mov
pushl
inc
dec
dec
mov
out
push
xor
mov
sbb
hlt
and
inc
push
mov
jmp
es
jp
push
xlat
sti
repnz
inc
sahf
mov
cmpsl
daa
adc
in
fmuls
pop
movsl
xor
inc
aam
hlt
cwtl
enter
push
pop
ret
mov
adc
notb
pop
dec
out
sti
mov
in
test
jecxz
push
lret
adc
push
lret
js
jnp
and
inc
add
rorl
mov
xchg
push
bound
mov
sysret
jg
outsl
daa
pop
aaa
dec
mov
testl
inc
aas
push
das
addr16
ja
pop
jg
outsl
daa
pop
aaa
dec
mov
testl
inc
aas
push
das
ja
ja
push
jg
outsl
daa
pop
ss
ret
mov
repz
filds
das
out
pop
pop
sysret
jg
outsl
daa
pop
mov
mov
idiv
lock
adc
dec
xor
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
add
test
inc
movsb
push
outsb
add
xorb
and
xor
mov
fs
xchg
test
movsb
push
aam
les
add
cmp
add
push
int3
and
push
mov
test
ret
mov
movsb
and
adc
jl
push
in
adc
add
push
movsl
inc
cmpsb
aaa
imull
lock
test
pop
sub
int
xchg
aad
outsl
pop
or
xchg
pop
jl
mov
shll
shll
stos
aad
lret
mov
popa
sbb
or
test
jmp
setl
adc
movsb
ror
dec
int
hlt
xchg
dec
adc
push
in
vcvtsi2sd
push
test
push
and
test
dec
push
aam
call
cltd
add
ret
cmp
aad
mov
cmp
call
out
mov
cmp
int3
xor
jl
jno
fs
and
into
sub
icebp
xlat
fwait
sbb
mov
xor
test
or
or
and
inc
adc
icebp
jne
gs
call
movsb
push
aam
les
add
xchg
add
xor
and
push
cwtl
inc
pop
je
cmpsb
loopne
rcrb
sub
cmp
jno
push
jl
mov
pop
popa
inc
mov
jecxz
fistpl
lock
lret
and
xor
aaa
in
cmp
insl
pushf
daa
inc
test
dec
xchg
inc
in
jmp
mov
loope
out
pop
stos
xchg
xlat
sub
hlt
add
adc
in
hlt
xor
and
push
movsb
inc
mov
test
test
movsb
push
aam
les
add
adc
in
hlt
xor
and
push
movsb
inc
mov
test
andl
cmpsl
inc
out
adc
js
faddl
lahf
inc
test
xchg
pop
jnp
mov
shll
or
mov
out
jnp
add
dec
xchg
pop
inc
cmpsb
jmp
mov
test
and
cs
xor
rcl
mov
pushf
inc
fsub
push
jae
xlat
cmp
bound
data16
nop
mov
add
xor
sbb
jmp
das
mov
mov
adc
out
xorl
pop
adc
jmp
push
mov
repz
add
pushf
inc
sbbb
addr16
mov
dec
movb
inc
mov
xchg
and
pop
fmull
fdivrl
out
push
repz
loope
test
add
inc
cmp
mov
test
pop
push
adc
rcrb
inc
jmp
cli
iret
ret
int
push
or
jmp
in
push
jae
add
lock
fcoms
inc
popf
fwait
out
add
mov
push
cmpsl
daa
sbb
pushf
call
les
pop
test
fsubr
movsb
jecxz
jnp
mov
jne
jo
ret
jo
aam
jae
std
imul
jmp
xor
mov
fisubrl
mov
dec
rcll
push
adc
xor
push
inc
jle
mulb
bnd
int
sbb
int3
sbb
fwait
out
pop
cld
rorl
aaa
xor
pop
clc
adc
push
clc
aas
or
pusha
jge
call
aam
xchg
pop
call
loopne
hlt
mov
push
xor
push
mov
jne
imul
xor
fsts
mov
jecxz
fs
push
inc
outsl
addr16
bound
cmp
fidivrs
sub
jnp
arpl
mov
dec
and
and
iret
stc
lcall
js
dec
xchg
cli
inc
aam
and
in
and
hlt
int
loop
dec
mov
ficomps
dec
sub
push
shll
jl
mov
push
shld
mov
cmpsb
jg
out
push
clc
das
push
lret
mov
outsl
dec
adc
push
xchg
imul
xchg
dec
dec
je
leave
lods
or
cltd
mov
mov
jae
repz
dec
sub
aam
pop
cmp
stc
jge
jmp
and
jle
dec
orb
in
mov
xchg
cmp
mov
push
xor
stos
iret
insl
iret
dec
cmc
outsb
daa
jecxz
ficomps
push
inc
jecxz
mov
add
in
lock
adcl
shl
inc
sahf
and
sbb
jb
movl
fsubp
pop
clc
dec
adc
fdivrs
stos
mov
outsb
lret
outsl
ret
or
push
ret
inc
mov
pop
mov
pop
hlt
adc
rclb
pop
adc
test
dec
mov
jle
push
mov
test
aas
mov
loope
xor
clc
sub
or
inc
xchg
sub
push
push
sbb
aaa
cwtl
pop
lods
cli
popf
adc
ret
cld
xchg
fadds
stc
outsb
xor
shrl
mov
and
push
push
and
shrl
and
pop
mov
lock
cmp
nop
or
in
cmp
or
aaa
repz
stc
stos
and
xchg
outsb
fs
fs
cmpsl
jne
jecxz
inc
pop
pop
push
scas
subl
mov
and
sti
or
imul
mov
fdivs
xlat
out
out
addr16
movsl
xchg
mov
movsb
cld
mov
hlt
aad
shl
xchg
push
fbld
jle
in
lds
scas
fwait
mov
mov
mov
adc
push
clc
stos
mov
test
inc
inc
gs
test
stos
clc
or
add
dec
scas
js
into
mov
out
or
sub
lcall
out
ss
call
sub
sub
prefetch
aad
inc
aam
out
test
xchg
adc
fldcw
mov
jmp
push
pop
jnp
xchg
jb
call
jno
xchg
dec
sub
lret
sbb
push
shll
adc
fadd
and
pop
aaa
movsl
push
dec
or
clc
and
push
enter
fwait
push
xchg
mov
sub
iret
push
pop
mov
and
gs
dec
dec
ds
sub
sahf
sub
repz
sahf
ds
ljmp
or
xor
xchg
mov
add
aas
push
push
pop
lcall
mov
mov
add
xlat
pop
cmp
aad
popf
mov
sub
je
andl
fcmovbe
or
sbb
sub
add
adcl
mov
iret
das
cmp
fs
aaa
or
sti
pushf
incl
pop
dec
cmpl
in
push
sub
push
out
pop
out
mov
mov
push
enter
or
inc
int
pop
movsb
inc
xchg
enter
mov
ret
sub
push
and
ret
xor
xchg
shlb
stos
mov
mov
fwait
dec
scas
jo
loopne
jno
test
out
jnp
mov
mov
mov
nop
jne
das
movsb
ja
leave
pusha
ja
cli
ds
cmp
movsb
mov
sbb
xchg
cli
cld
popf
ja
movsb
loope
fildl
jge
adc
ds
adc
dec
adc
push
inc
fcomip
mov
mov
or
out
xor
xchg
or
scas
fwait
sbb
push
sub
insl
xor
daa
mov
mov
mov
test
lret
mov
pop
test
inc
pop
cltd
jmp
int3
mov
imul
mov
xor
inc
dec
push
cmc
push
lods
aas
pop
fnstcw
out
and
fnstcw
insl
test
fcmovnbe
or
es
mov
mov
pop
sti
fwait
push
fcmovnbe
sub
movsb
adc
rorb
pop
loope
lods
mov
push
je
and
repnz
divb
xchg
inc
nop
jae
sbb
mov
mov
or
iret
shlb
xor
test
sbb
mov
repnz
arpl
mov
add
mov
xchg
xchg
int3
inc
mov
push
fidivrl
jecxz
loope
out
pushf
test
stos
stos
fwait
sbb
or
in
push
aaa
icebp
sbb
cli
xchg
jbe
mov
and
push
out
xor
pop
loopne
dec
jne
and
pop
mov
in
iret
push
xchg
push
lcall
cwtl
adc
shlb
and
sbb
mov
test
mov
cs
out
xchg
cmp
test
pop
jecxz
aas
cli
mov
arpl
xchg
out
mov
js
lret
mov
arpl
shlb
testl
xor
push
divl
jg
xlat
dec
lcall
lahf
fldcw
in
mov
inc
movsl
pushf
fnstenv
leave
sub
aad
adc
mov
push
dec
iret
xor
inc
dec
cmp
in
faddl
xor
mov
or
js
inc
pop
lcall
xchg
lret
shrb
xor
or
jbe
movsb
int3
push
jecxz
test
rcrl
push
jnp
negl
mov
sbb
xor
sarb
cmc
in
je
sbb
test
xorb
xor
cmp
lods
sarl
xchg
cmpsb
sub
andl
pusha
push
mov
lods
or
sbb
shr
inc
rcr
lds
sbb
in
dec
inc
jnp
pop
addr16
or
sahf
in
repz
popf
addr16
daa
mov
adc
pop
jae
sbb
sbb
dec
pop
call
ljmp
pop
adc
mov
push
mov
and
lds
jb
mov
pop
mov
stos
inc
loop
dec
mov
add
lahf
push
negl
fsub
xor
fdivl
jecxz
jecxz
in
inc
sbb
cli
in
jnp
sbb
sub
mov
out
push
push
lea
add
add
scas
stos
std
fndisi(8087
cmp
push
mov
sub
rorb
mov
mov
mov
xadd
push
pop
adc
push
xor
scas
xor
cli
add
stos
pop
inc
cmpsl
cmp
push
lods
inc
mov
inc
stc
testl
aad
mov
outsl
in
fbstp
mov
pop
fndisi(8087
pop
cltd
call
cwtl
shrl
scas
fdivrs
inc
push
add
lea
int3
test
pusha
lret
dec
sub
ja
call
ss
jecxz
dec
xor
in
dec
mov
sub
add
push
stc
cmp
cmc
lahf
mov
push
mov
push
leave
push
ret
call
out
and
out
xchg
pushf
pop
xchg
xor
daa
inc
inc
repz
fsubr
insl
and
pushf
sbb
fmull
pop
sub
xor
jg
cs
sahf
jo
xchg
lock
cmpsl
mov
ficoml
fwait
xor
and
ljmp
xchg
and
push
fdiv
cmp
and
orb
stc
xor
fcomip
cmpsb
xor
lcall
je
jns
pop
jb
jp
int3
push
xor
cmpsl
cmc
mov
jbe
addb
pop
push
or
inc
jmp
mov
sbb
stc
pusha
push
mov
mov
je
dec
mov
hlt
cmp
stos
in
cltd
sub
imul
add
push
int3
outsb
dec
pop
mov
mov
test
enter
adc
mov
xchg
out
mov
adc
jge
lods
cli
dec
jp
jge
dec
movsb
push
loopne
inc
xlat
push
flds
jg
nop
xchg
aas
notb
stos
xchg
push
push
sub
movl
jns
or
dec
in
mov
xchg
pop
push
and
shrl
pop
leave
add
test
fdivr
test
push
mov
stc
inc
add
lcall
in
das
mov
lcall
scas
pop
cld
mov
rcl
inc
aas
std
mov
in
shr
je
pop
push
jb
mov
add
rorl
pop
cld
xchg
push
mov
inc
pop
or
addr16
jbe
cltd
outsb
pushf
loopne
jae
scas
outsl
cmp
pop
adc
push
aas
cmpsb
or
cld
movsl
scas
and
sbb
ret
ss
dec
sbb
inc
div
cmpsb
mov
lea
fwait
add
sbb
arpl
push
jb
lcall
iret
pop
cmc
cltd
orl
mov
inc
or
stc
mov
cmp
arpl
mov
dec
sbb
loop
inc
dec
and
pop
xlat
push
aas
xorl
andb
inc
jnp
insb
out
mov
into
decb
ss
js
test
dec
ret
add
push
mov
pop
hlt
std
pusha
mov
scas
sbb
xchg
in
aas
cld
jl
insl
cmp
xchg
outsl
daa
jmp
hlt
fwait
and
pop
addr16
inc
fildll
jnp
imul
inc
nop
mov
inc
test
test
int3
iret
ret
out
add
add
nop
ret
or
popa
pushw
add
adcl
aam
in
insl
dec
pop
shlb
mov
add
ja
fwait
mov
pop
push
aas
in
adcb
mov
add
call
mov
cmp
or
lahf
and
push
daa
xchg
aad
jb
jmp
in
mov
dec
pop
shlb
nop
test
pusha
fsts
pop
add
aaa
mov
shll
mov
subb
cs
jp
sbb
clc
sbb
aaa
imulb
ja
cld
das
add
test
pop
and
push
pop
dec
adc
aas
bound
out
fidivs
decb
pop
es
movsl
dec
and
push
mov
cmc
clc
xor
in
popf
adc
jp
sbb
add
lds
insl
and
ds
hlt
push
mov
enter
mov
push
daa
jb
imul
emms
xor
fwait
cmp
mov
sub
sarb
or
jbe
push
rcll
inc
xchg
lret
mov
imul
or
pop
aaa
xchg
neg
xchg
xor
leave
fistpl
and
leave
dec
and
add
leave
sub
inc
popf
imul
ret
aam
adc
in
inc
pop
sub
cmp
pop
mov
sbb
mov
imul
jne
out
inc
dec
dec
inc
inc
cld
bound
out
rorb
and
dec
loopne
push
mov
or
sbb
stos
ljmp
ds
jmp
mov
adc
lock
push
xor
cs
inc
insb
hlt
mov
fwait
sub
cmp
cld
push
add
push
sbb
push
fists
or
repz
and
test
pop
ss
in
adc
dec
fs
pop
or
ds
or
jge
insb
aaa
or
aas
cmpsl
dec
add
mov
xchg
lods
fnsave
adc
cmp
xlat
inc
sti
popa
pop
cmp
shll
cmp
xor
mov
inc
cld
aad
pop
int
mov
fisttps
imul
inc
or
mov
sbb
or
jg
or
shr
xor
or
loope
bound
and
out
js
out
sub
popf
mov
and
icebp
out
imul
adc
arpl
push
lcall
stos
stos
sbb
orl
icebp
xchg
jmp
dec
cltd
lock
mov
int
mov
push
pusha
push
xchg
imul
inc
lds
sub
jmp
mov
mov
push
stos
cmpsl
push
aad
insb
inc
std
pop
push
cwtl
int
xchg
aas
inc
xchg
and
sbb
pop
xchg
call
adc
or
imul
and
mov
inc
and
rclb
xchg
push
mov
mov
push
sub
xor
mov
lods
and
int
push
and
jecxz
mov
in
insb
scas
jne
daa
dec
imul
inc
hlt
cmc
popa
into
push
jp
lahf
xchg
lahf
into
mov
push
xchg
xor
jno
lods
push
jl
cwtl
outsb
in
and
scas
dec
jb
outsl
adc
inc
iret
sarl
dec
ret
test
xchg
std
add
mov
sbb
adc
popf
jbe
pop
mov
pop
push
dec
and
cmp
imul
mov
mov
xor
xor
xorl
pop
hlt
fucomi
fnstenv
dec
je
dec
jne
fdivl
mov
mov
add
xchg
jmp
push
fadd
in
cmp
mov
dec
out
arpl
lods
stos
pop
in
stos
dec
fidivrs
daa
lods
xlat
sub
cmpsl
pop
sarb
mov
movsb
mov
push
out
and
or
call
pop
pop
rol
cmp
cmpsb
and
imul
fsubr
mov
dec
pop
pusha
and
pop
push
imul
in
rolb
xchg
mov
jl
scas
mov
inc
push
push
sub
subl
mov
pop
adcb
sbb
pop
cmpsl
sub
ljmp
gs
imul
loope
and
lea
push
arpl
xor
mov
cmp
addr16
cmp
mov
test
enter
test
test
popf
push
sbb
lea
movsl
or
inc
loop
dec
push
jae
int3
pop
lcall
cs
cmpsl
jne
lods
mov
xchg
pushl
jno
repnz
sub
inc
loope
cwtl
mov
xor
adc
gs
test
sbb
xchg
call
data16
scas
jmp
mov
adc
arpl
cs
ljmp
inc
inc
cmp
aad
inc
xor
push
add
cmc
repz
xchg
push
int
pusha
incl
or
xchg
repnz
in
sbb
loopne
flds
mov
sbb
out
inc
in
popa
pop
pop
insl
in
clc
fcmovbe
or
in
pop
mov
xor
notb
or
and
mov
push
cltd
xor
cmp
inc
stos
jne
fwait
xor
sbb
in
push
mov
cmc
in
mov
cmpsb
mov
in
out
icebp
mov
lods
xchg
shlb
popl
pop
pop
or
or
adc
test
test
mov
mov
add
jge
add
mov
das
lock
cmp
testl
push
int
sbb
repnz
mov
clc
out
mov
cli
push
ret
call
inc
add
leave
fstpl
ret
jp
xor
ret
into
icebp
cmpsb
adc
inc
pop
adc
sub
out
mov
jmp
push
jp
add
repz
insl
nopl
dec
push
mov
xlat
fwait
or
test
vunpckhps
cmp
inc
inc
test
in
jne
cmp
stos
loop
rcl
ja
pop
mov
lock
call
push
dec
lcall
mov
push
xor
push
inc
mov
aad
insl
mov
shll
xchg
dec
mov
jmp
jo
push
pop
jae
les
lods
cld
lock
sub
cli
xchg
leave
iret
cwtl
pusha
push
inc
mov
mov
fwait
xchg
and
sub
pop
push
cmp
jmp
test
cmpsl
jl
sub
sbb
cs
dec
data16
fisubs
push
sti
ficomps
in
xchg
jge
cs
push
push
xor
enter
jbe
mov
stc
shlb
loop
push
sub
daa
aas
movsb
mov
iret
into
pop
nop
in
cmc
js
cmp
pop
jmp
cmp
xor
call
aam
pop
mov
repz
pop
out
arpl
mov
jbe
pop
mov
mov
repnz
sub
sbb
ja
ret
jbe
jno
push
inc
mov
aad
xor
daa
sub
fs
nop
aad
sub
aad
nop
push
lret
adc
into
scas
mov
addl
adc
cmp
lret
mov
into
adc
lods
stos
ds
adc
out
ja
int3
ds
popl
int
mov
loop,pt
call
inc
loop
xchg
fdivl
pop
lret
dec
outsl
out
inc
cmp
or
test
adc
ret
scas
insb
stos
cmp
xchg
je
push
cli
xchg
pop
mov
inc
es
lret
mov
sub
cld
fsubrl
sbb
in
mov
out
jo
pop
test
outsb
ficomps
mov
icebp
shl
cmp
jmp
pop
sub
stos
stos
fistpll
inc
and
cltd
insl
xchg
fnstcw
daa
mov
aas
xchg
add
dec
jns
inc
imul
sbb
xchg
ds
ret
insb
xchg
push
fdivs
add
inc
loop
in
cmp
and
test
repz
xor
mov
dec
insb
jge
or
ljmp
mov
jae
leave
stc
mov
nop
mov
pop
pop
xchg
popa
jmp
mov
sbb
push
lahf
xchg
pop
repnz
aaa
sbb
shr
fdivp
push
jg
popf
daa
sbb
lret
mov
xchg
ds
stc
movsl
aam
xor
pop
sbb
pop
sbb
xor
loope
pusha
cmp
test
lret
scas
inc
add
adc
in
jnp
cmpsl
fsubl
int3
pop
adc
inc
mov
mov
out
cmc
mov
mov
push
enter
iret
sarl
imul
in
xor
and
adc
pop
loope
shrl
xchg
xor
dec
idivl
fstps
es
mov
hlt
dec
ret
ljmp
sbbl
lea
mov
jg
and
gs
dec
fcoms
add
imul
mov
movsb
sbb
push
mov
lret
jns
in
push
xlat
ss
fwait
xchg
test
cmc
andl
add
stc
jno
adc
push
dec
inc
dec
lret
mov
push
in
push
inc
xchg
aas
and
out
stos
clc
scas
test
cmp
sub
sbb
pop
outsl
scas
push
daa
mov
bound
aas
ljmp
inc
xchg
test
xor
mov
fidivs
psubq
xchg
lods
inc
inc
ds
mov
mov
clc
call
mov
out
jmp
ret
xor
sub
js
xchg
sub
pop
mov
rolb
sub
sbb
int
icebp
fstp
pop
mov
xchg
add
sbb
mov
movsl
sbb
testb
or
push
or
cld
jp
and
ja
mov
push
pop
mov
lret
jae
not
into
std
and
jno
xchg
in
add
movsb
cli
loop
mov
mov
xchg
or
sbb
movsb
push
aam
les
add
adc
in
hlt
xor
and
push
movsb
inc
mov
test
test
movsb
push
aam
les
add
adc
in
hlt
xor
and
push
movsb
inc
mov
test
pusha
test
pop
movsb
push
aam
les
add
adc
in
lock
and
push
mov
gs
addb
aam
les
test
aam
sbb
sahf
les
and
int3
int3
mov
fwait
in
imul
pop
sbb
push
adc
ljmp
cltd
test
fstps
cmp
pop
sbb
imul
cmp
test
fstps
mov
cltd
fldcw
jns
dec
or
sub
jns
dec
sbb
test
mov
movsl
lret
scas
sbb
pop
xor
outsb
xchg
loop
xchg
pop
and
rolb
rcr
shlb
xor
sub
xchg
sub
hlt
cmc
shl
push
mov
es
stc
mov
mov
fistl
fidivrs
mov
xchg
inc
lcall
pop
data16
xor
or
imul
jns
inc
sbb
sub
sbb
stc
mov
fnstcw
jmp
movsb
adc
loop
xchg
cmc
sbb
lods
inc
jbe
cltd
stc
mov
cltd
cmp
subl
add
mov
lods
ret
or
scas
test
mov
dec
clc
ljmp
sub
dec
or
sub
jns
dec
sbb
test
fstps
mov
cltd
lahf
or
sbb
dec
pop
pop
dec
cs
or
cltd
fstps
das
popf
clc
mov
pop
inc
or
jp
sub
dec
push
pop
ja
int3
sahf
lret
mov
fxch
pop
mov
outsl
loopne
repz
push
cmp
insb
pop
cmp
dec
sbb
test
fstps
mov
cltd
fldcw
jns
dec
or
sub
jns
dec
sbb
test
fstps
mov
cltd
fldcw
sbb
aam
es
pushf
cmp
pop
jne
lods
ret
and
lds
ret
es
les
mov
push
jmp
adc
or
add
jb
jecxz
xchg
jnp
sbb
aam
or
xchg
je
int3
hlt
popa
cmp
test
lcall
aam
push
mov
pop
hlt
sahf
daa
and
sub
adc
add
sub
and
mov
pop
cmp
cmp
adc
inc
adcl
mov
cmc
xor
or
push
aad
test
dec
mov
mov
scas
in
jl
insl
test
fnstsw
mov
stc
mov
xchg
xor
cmp
fimull
xchg
lea
pop
jmp
leave
out
jge
sbb
lcall
pop
sub
cmpsb
popa
in
pushf
mov
xor
jmp
mov
adc
pop
xchg
mov
push
out
movsb
cmp
outsb
push
mov
mov
cltd
cmp
outsb
mov
sub
sub
bound
mov
call
outsb
xchg
xchg
pop
pop
int
lret
jge
xor
mov
fmul
scas
push
pushf
jge
cmp
cmp
push
mov
movsl
cmp
or
les
sbb
aam
lcall
notl
pop
cmp
push
test
bound
sti
cmp
out
test
lock
inc
fsts
pop
out
jo
sbb
lods
movb
xchg
std
stos
push
lcall
out
adc
adc
xor
fnsave
and
xor
and
sbb
popa
xor
add
pop
lods
pop
cmp
inc
popa
ja
sbb
xor
push
xor
inc
jp
lcall
sbb
adc
or
movsb
cmp
iret
scas
add
xchg
test
ds
push
aam
and
xchg
adc
movsb
cli
lock
xor
jp
push
jae
mov
rcll
fcomip
aam
int
jl
loopne
mov
or
fidivs
ja
in
out
stc
cld
adc
ret
ja
pop
arpl
movsb
xor
xor
jge
nop
dec
lods
mov
push
mov
orb
popf
sbb
mov
xchg
int3
mov
hlt
stos
movsb
and
in
imul
pop
cmp
enter
cmp
das
mov
and
sbb
mov
pusha
xchg
aas
mov
hlt
push
jmp
fstpt
xchg
dec
adc
cmp
jb
pushf
fmul
es
fdivrl
aad
jle
arpl
int
pop
repnz
enter
fstl
rcl
adc
xor
cltd
aad
cmpb
xchg
xor
inc
fdivl
cli
mov
movsb
out
push
xor
adc
arpl
dec
xor
jl
pusha
xchg
mov
mov
insl
mov
adc
push
stc
dec
add
lods
test
cmp
xor
jb
cmpsb
jecxz
and
pusha
push
scas
andl
jns
inc
stc
adc
adc
aaa
xor
jmp
outsl
insb
and
stc
inc
or
and
inc
xchg
scas
jmp
andl
pushf
xchg
fdivl
jge
pop
xchg
add
dec
mov
inc
or
fcom
adc
cmp
and
sbb
xor
or
sub
cli
cmpsl
adcl
xor
loopne
cmpsb
mov
pop
adc
mov
ja
sbb
or
enter
jnp
dec
fldt
lock
or
mov
sub
addr16
push
pop
in
dec
call
sub
dec
push
mov
orb
and
mov
sbb
xor
dec
js
icebp
xor
dec
push
arpl
daa
or
pop
dec
cmp
sti
adc
mov
aas
jge
and
adc
rcl
andl
stc
adc
sub
mov
inc
and
adc
or
push
sbbb
push
nop
push
popa
hlt
in
ret
in
test
adc
pop
in
pop
outsl
sub
or
leave
divb
and
mov
aas
sti
jp
cmpsb
jb
insb
xchg
pop
cli
or
pop
lahf
dec
pop
or
sar
dec
sbb
sub
mov
scas
mov
push
mov
mov
out
jns
ja
add
dec
imul
aad
mov
adc
jl
fidivs
jns
int
dec
cmp
notb
cwtl
lahf
xor
or
movsb
into
and
mov
pop
cmp
negl
gs
add
fucomp
outsl
sarb
sub
test
insl
stos
or
jae
lock
lret
cmpsb
ret
adcl
inc
dec
inc
jno
popa
jle
into
jae
or
decl
xchg
push
cmpsb
das
push
test
dec
add
imul
andl
dec
mov
es
sub
pop
data16
arpl
add
enter
loop
cmp
aaa
and
jmp
jecxz
lret
daa
dec
ret
pop
sub
loopne
mov
mov
cmp
adc
fdivl
sbb
je
divb
leave
adc
fsubrs
das
add
lret
roll
jne
gs
mov
push
mov
mov
cltd
sub
lret
xor
xor
and
pop
cmp
sbb
aad
add
pushf
xor
jns
jns
cmpb
inc
adc
ficoms
shll
test
sub
adc
popl
js
xchg
or
jp
add
push
jmp
cmpl
ljmp
and
stos
sbb
ja
sub
or
pushl
fwait
or
sbb
pop
sub
inc
xchg
bndldx
adc
mov
sub
stc
push
or
ds
mov
xlat
mov
sub
adc
xor
test
int3
js
mov
mov
cmp
in
jnp
out
mov
lret
cmp
adc
pop
ffree
sub
iret
les
mov
mov
repnz
push
outsl
cmp
add
rol
mov
pop
fisttpll
jg
sub
xchg
loope
sbb
jns
fs
cs
ja
add
or
stc
pushf
inc
inc
cmp
xchg
xchg
mov
jecxz
icebp
mov
enter
cmp
mov
out
inc
hlt
push
adc
xlat
and
cmp
scas
or
sti
push
scas
insb
xchg
lock
jno
hlt
mov
fsub
ds
popf
dec
cmc
adcb
xor
in
pop
popa
dec
int
cmpsb
lret
js
stos
test
mov
out
scas
testb
iret
enter
adc
or
xchg
aad
pop
or
pop
mov
jo
xor
xlat
mov
mov
out
inc
dec
or
dec
adcb
sub
xchg
fcoms
outsb
or
jnp
jle
add
js
pop
xor
aaa
push
or
mov
pushf
add
imul
mov
mov
or
sti
out
cmpsl
data16
lods
leave
push
or
dec
es
hlt
sub
testl
fwait
daa
cmp
add
je
xchg
lds
out
repnz
cmc
rcrb
clc
leave
loopne
rorb
adc
push
mov
push
test
mov
jb
jns
mov
out
loope
cmc
fsubs
call
hlt
pop
icebp
cmp
or
fs
xchg
push
sbb
and
sbb
inc
arpl
and
pop
data16
clc
xchg
cmpb
jp
fildl
js
sbb
dec
xor
xlat
cmp
out
jns
data16
push
ja
cmp
in
cmpsl
insl
movsb
pusha
jg
dec
mov
hlt
or
or
fisttps
bound
gs
mov
pop
push
or
mov
adc
mov
mov
inc
mov
mov
mov
int
repz
jmp
into
adc
mov
ret
aam
sub
sub
dec
lods
into
movsb
daa
or
xlat
addr16
imul
jmp
mov
push
or
jb
lret
cmp
cltd
jle
sub
pop
jmp
repz
dec
dec
int3
xor
mov
pop
mov
xchg
or
stos
cltd
bndldx
jne
stos
dec
xor
jecxz
and
jbe
lea
push
mov
lds
fiaddl
lods
xor
je
cmp
or
js
lds
repz
xor
movsl
push
test
lock
add
lret
popa
stos
xchg
push
ja
sub
pop
dec
repnz
popf
into
xor
inc
xchg
adc
inc
pop
inc
and
mov
leave
dec
and
movsb
into
pop
pop
add
jb
push
in
or
cmp
ret
lods
dec
dec
or
cwtl
adcl
pop
arpl
add
mov
bound
call
ja
or
jp
popf
ds
push
pusha
lret
sbb
cmpsl
sub
repnz
mov
mov
push
mov
and
dec
xchg
jle
out
jbe
and
lods
lods
shlb
or
mov
pop
ss
shrl
push
divb
xchg
add
lock
add
push
dec
repz
adc
aaa
mov
lods
fnstcw
sub
pop
and
cmp
divb
or
pop
cs
notl
lahf
dec
test
xor
mov
mov
cltd
push
add
push
rep
flds
sbb
pusha
movsb
xchg
add
jmp
jg
jp
outsb
and
stos
scas
mov
adc
gs
aas
xor
pop
jmp
adcb
popa
les
mov
sub
jl
xchg
sti
jmp
mov
or
add
inc
arpl
lret
mov
call
cltd
loop
cmp
push
lods
mov
je
testl
mov
cmpsb
ret
inc
and
push
mov
mov
and
movsb
push
push
jg
xchg
or
fisttps
mov
and
jb
enter
sti
daa
gs
ds
es
lods
sbb
adc
adc
leave
pop
add
jmp
aam
insb
outsb
lods
adc
fucomip
mov
arpl
sti
xchg
sahf
ljmp
shrl
xchg
dec
fcomps
cmpsb
jo
adc
jbe
cmp
and
les
cmp
adc
testl
inc
add
cld
and
adc
xlat
or
xor
fs
pop
push
xor
ftst
lea
mov
call
dec
and
imul
mov
hlt
xchg
dec
or
mov
fwait
add
pop
xchg
sahf
lock
push
lds
nop
xor
xchg
or
pop
adc
adc
loop
mov
aad
test
cmp
push
mov
jo
mov
xchg
addr16
sahf
arpl
sbb
xor
sbb
inc
ret
and
popa
inc
add
mov
push
and
xchg
imul
sbb
pop
out
dec
add
sub
xchg
scas
or
pop
push
add
cmpsl
jl
sub
fmul
leave
adc
enter
in
mov
rclb
dec
aam
push
push
sub
adc
lods
mov
dec
push
into
aas
data16
jecxz
or
mov
pop
sbb
fcomps
or
mov
loopne
dec
fidivl
inc
inc
sub
xor
pop
xchg
repnz
inc
inc
cmp
in
push
into
fsubs
or
icebp
sbb
sbb
adc
nop
and
mov
dec
sbb
popf
cmp
shlb
fdivr
jno
jnp
mov
pop
int
jl
mov
mov
dec
outsl
cmp
sbb
sbb
push
fdivr
jns
fdivrl
pop
mov
pop
lods
insb
mov
jae
aas
fdivrp
push
push
test
popa
fcompl
inc
pop
pop
fildl
add
std
mov
test
sub
and
sub
cltd
stc
or
out
dec
fdiv
or
mov
push
fsub
mov
insl
dec
jp
mov
ror
data16
pop
sbb
sbb
mov
cmp
xor
dec
leave
in
and
adc
in
sahf
movsl
inc
testl
or
adc
rcll
cmpsb
jo
mov
xor
inc
add
xor
and
inc
aam
xchg
test
loope
pop
push
mov
ficoml
jbe
test
add
out
pushf
add
out
or
push
mov
or
sbb
mov
scas
adc
push
xchg
inc
or
int3
enter
mov
push
xchg
pop
out
mov
adc
call
mov
and
xor
in
mov
insb
mov
pop
xchg
in
push
add
or
jg
sbb
sbb
push
iret
popf
adc
imul
rcrl
stos
mov
je,pt
and
and
repnz
movsl
cmpsb
gs
pop
pop
loope
scas
jbe
adc
in
xor
pop
pop
push
outsl
inc
sbb
scas
nop
je
inc
cmp
mov
add
int3
sbb
pop
test
pop
sti
imul
aam
shrl
mov
insl
scas
cmp
stc
aas
mov
lret
dec
sarb
cmp
testb
adc
mov
daa
pop
imull
add
lea
mov
int3
pop
fsub
add
or
orb
mov
dec
mov
jne
push
adc
inc
in
jg
shll
out
lods
popf
ds
ficompl
adc
sbb
cwtl
lcall
and
sbb
aas
push
out
dec
and
aaa
push
or
pushf
jl
xor
xchg
pop
mov
mov
or
jg
and
xor
lods
rcr
aam
hlt
mov
outsl
add
inc
sbb
push
cltd
push
mov
xor
jmp
lods
out
fdivl
xchg
into
pusha
cmp
push
mov
hlt
sbb
xor
gs
rorl
mov
scas
das
xor
repnz
stos
push
lret
ja
in
sahf
ret
cmp
mov
push
cmp
sub
mov
mov
fwait
clc
andl
cwtl
int3
aaa
das
inc
mov
inc
jecxz
adc
in
in
mov
xchg
xchg
fldcw
sarl
test
and
push
sahf
andb
cmp
mov
xor
jecxz
fcomps
movsb
lods
jne
mov
xor
jmp
into
test
shlb
jecxz
push
imul
xchg
add
mov
fbstp
dec
movl
inc
daa
mov
inc
xchg
jno
push
sbb
imul
filds
scas
mov
fcoms
mov
mov
mov
popf
repnz
inc
bound
pop
push
inc
or
add
js
sub
xor
jbe
cmp
out
into
sbb
loope
test
inc
dec
jns
shl
movsl
and
int
or
mov
dec
push
ficoms
sbb
dec
inc
and
test
lea
les
ja
add
rol
ret
and
lds
push
nop
cmpsl
add
repz
or
in
dec
xor
test
jbe
xor
xlat
scas
nop
les
or
adc
flds
es
jmp
jno
mov
jmp
add
push
jb
fwait
xchg
and
and
fcmovb
loop
out
lock
and
ljmp
mov
sbb
cmp
pop
and
adc
addb
mov
jo
rcrb
sub
pop
jns
pop
xchg
or
popf
mov
les
test
mov
mov
sbb
lahf
pop
or
xchg
out
shrl
cmp
movsl
std
andl
test
jns
sbb
sub
mov
mov
xchg
fimuls
pushf
or
jno
mov
inc
dec
mov
jns
push
xchg
and
test
inc
aaa
add
stc
rcll
push
push
cmpsl
xor
add
ret
mov
add
hlt
cltd
test
mov
adc
xchg
arpl
and
gs
add
je
or
pop
dec
jecxz
out
jns
inc
int
bound
test
call
jae
ret
or
stos
jecxz
sbbl
sbb
lahf
xor
dec
push
xor
inc
xchg
loop
cs
jno
call
inc
ljmp
mov
pop
out
mov
loopne
insl
hlt
jp
inc
ret
inc
mov
jae
mov
adc
jb
cmp
shrb
and
icebp
adc
js
mov
jp
or
gs
xor
pop
insl
inc
mov
or
fcmovne
popa
dec
ljmp
lret
or
in
mov
scas
cmc
mov
js
sub
daa
pop
cmc
cld
dec
orb
rcll
insb
jmp
data16
nop
rclb
and
adc
repz
mov
inc
inc
cmpsb
and
or
adc
pop
ja
test
pop
sub
pop
mov
mov
mov
cmc
mull
les
jge
sub
fiadds
dec
cmc
push
mov
push
bswap
dec
jg
cltd
pushf
add
xor
clc
dec
add
mov
testb
loopne
cld
jne
mov
pop
test
add
lock
daa
or
fwait
mov
ss
daa
jno
jl
xchg
dec
subb
dec
fisttps
mov
pop
arpl
sbb
mov
cli
sbb
adcb
bound
mov
ds
jae
dec
sahf
jmp
shlb
outsl
sbb
xchg
js
fstpt
rclb
dec
test
cmp
leave
mov
inc
mov
xchg
inc
xor
test
repnz
stos
push
adc
test
fsubr
mov
imul
sbb
pop
fisubs
mov
push
imul
std
push
cmp
rcl
imul
je
push
mov
into
mov
js
in
mov
shll
ljmp
stos
jae
mov
xchg
in
or
push
loop
insb
insl
sub
xchg
or
push
mov
mov
das
jb
inc
movsl
stos
pop
jg
mov
adc
and
jle
cmp
sti
jle
fwait
jo
jecxz
out
imul
addl
or
push
imul
aaa
dec
xorl
movsl
jge
jp
inc
lods
cs
xor
fwait
xchg
push
cmc
out
mov
push
aam
pop
dec
lea
or
mov
ja
cmp
add
fdivs
iret
pusha
lret
lods
loope
mov
outsl
adc
push
dec
push
repz
cmpsb
in
test
fldenv
mov
xchg
sbb
cmpsb
mov
imul
pop
out
ss
fidivs
das
scas
pop
in
jl
hlt
xchg
lahf
jno
outsl
jnp
into
inc
pop
scas
dec
cmp
dec
mov
or
mov
push
insl
xor
arpl
lcall
sbb
scas
jo
push
ds
fs
leave
jnp
pmulhuw
popa
and
lret
pusha
or
jp
cmp
cli
adc
xchg
add
or
ja
in
xor
or
add
cmpb
xchg
adc
cwtl
test
adc
mov
test
mov
in
mov
mov
mov
addl
and
xchg
add
les
push
jae
push
sahf
idivb
mov
push
mov
aam
cmp
inc
adc
xchg
fldl
xchg
ret
pushf
xor
jae
mov
and
add
outsb
jae
xchg
push
or
mov
xor
or
or
mov
fists
enter
jle
pop
adcb
and
mov
cltd
in
inc
adc
xchg
aam
inc
jmp
sbb
or
mov
jecxz
std
test
or
int
ss
mov
outsl
push
ljmp
lahf
out
mov
sub
pop
jbe
mov
fidivs
or
cld
mul
inc
scas
adc
inc
enter
hlt
fstpl
fwait
lret
fcoml
ss
out
movb
icebp
push
push
ja
dec
ror
adc
cmp
xlat
outsl
call
or
xchg
dec
jmp
popa
roll
jge
ret
add
dec
sub
mov
adc
jae
aas
idivb
add
loop
pusha
rcrb
push
aad
add
ret
pop
push
jge
xchg
lds
rorb
test
mov
aaa
ds
xor
adc
pop
cmp
pop
sbb
imul
pop
jmp
mov
cltd
test
leave
cltd
fldcw
jns
dec
or
sub
jns
dec
sbb
test
fstps
mov
cltd
fldcw
jns
dec
or
sub
jns
dec
sbb
test
fcomps
mov
cltd
fldcw
jns
dec
or
sub
jns
dec
cltd
cltd
push
test
fldz
fisubs
push
jno
popa
es
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sarl
jecxz
popf
lret
repz
ss
movb
out
notb
xchg
xchg
xor
ret
push
repz
xchg
push
sbbl
movb
out
notb
jmp
and
repz
jecxz
xchg
cmp
cs
sbb
add
pusha
jge
dec
mov
inc
ret
cmp
xor
out
xchg
lds
mov
jp
sbb
int
inc
push
cmp
lret
pop
ljmp
insl
xchg
mov
out
xchg
push
xor
dec
push
cmp
int
xchg
cs
orb
dec
sub
imul
mov
mov
xchg
xchg
inc
test
into
xchg
push
xchg
jle
leave
push
cmp
roll
in
xchg
xor
in
push
mov
cltd
xor
mov
mov
arpl
ljmp
mov
dec
sub
sti
jmp
ja
dec
imul
dec
data16
add
sub
das
xchg
imul
inc
ret
cmpsb
repz
jl
push
adcl
cld
mov
adc
arpl
xor
stos
push
xchg
and
lret
dec
loop
adc
setg
push
ja
ja
rolb
mov
mov
imul
pop
mov
es
jbe
push
fiaddl
and
mov
ss
xchg
bound
ss
movb
out
notb
xchg
xchg
xor
ret
push
repz
xchg
push
adcl
mov
jae
arpl
adc
and
dec
vcvtsd2ss
jge
shlb
jne
xchg
jne
test
test
add
mov
fnsave
pop
jecxz
push
cmp
es
sti
or
data16
mov
ds
aaa
jae
and
mov
leave
sbbb
mov
adc
add
inc
in
sbb
sbb
xor
mov
mov
dec
outsl
inc
stos
jnp
and
pushf
insb
push
rcr
cmp
gs
jge
mov
mov
lcall
and
cltd
pop
xor
mov
popf
ret
xchg
pop
jle
daa
mov
sbb
out
push
mov
pop
shrl
loopne
or
aam
loop
fsubr
jecxz
push
loop
sbb
hlt
das
sub
lods
mov
push
jle
fdivrs
mov
mov
cmc
stos
cmpsb
hlt
testb
dec
rorl
add
dec
xor
stos
sti
sbb
xor
fistpll
xor
cmp
adc
iret
lea
ret
icebp
adc
pop
and
xchg
cli
sbb
inc
in
scas
or
pop
jne
sti
xchg
and
sub
add
loop
dec
inc
fs
jecxz
stc
lods
nop
loope
clc
cmp
lret
rol
cmpsb
xor
jp
mov
adc
xor
push
mov
xchg
aam
mov
or
xchg
mov
xchg
aaa
ficompl
lahf
imul
jmp
push
loopne
loop
out
adc
bound
inc
in
gs
bound
mov
or
cld
popa
mov
jmp
loope
loopne
repz
pop
fbstp
and
push
sub
cmp
stos
cwtl
lret
and
jg
mov
sbb
ficoml
xor
aas
or
ljmp
stc
fsubr
cmp
test
mov
jns
test
movl
jne
push
mov
popa
push
adc
mov
cmpb
mov
push
scas
mov
repz
out
mov
scas
cmp
fistps
jnp
ret
ret
pop
or
sbb
cwtl
and
dec
inc
sbbl
sub
fsubs
jb
add
test
pusha
int3
cld
shr
xchg
stc
ss
iret
dec
in
in
xor
adc
dec
mov
mov
add
jns
add
pop
mov
mov
dec
push
je
lcall
lahf
sbb
pmaxub
xor
mov
popa
jnp
jp
mov
sbb
aam
popa
xchg
gs
adc
mov
push
lcall
aaa
shrl
loopne
pop
movsl
js
das
sbb
dec
bound
movsl
add
scas
daa
leave
pushf
scas
gs
inc
adc
cmp
adc
fldl
adc
push
add
mov
jmp
mov
mov
hlt
je
leave
lahf
cwtl
shlb
enter
sub
cs
je
aaa
into
cmp
push
es
and
pop
mov
add
and
insl
add
mov
addr16
cmp
jns
push
int
xor
mov
out
popa
pop
pop
mov
dec
out
in
or
dec
pop
sub
xchg
mov
push
sbb
sarl
repz
push
sahf
out
inc
add
cmpl
outsb
divl
insb
mov
pusha
fs
ret
sbb
lods
das
dec
dec
into
jno
aas
push
gs
out
add
and
ljmp
fistpl
nop
cmc
lret
inc
push
bound
jge
jp
enter
ljmp
in
inc
inc
decb
push
add
xchg
aas
sbb
fisubrl
xchg
jg
fs
das
movsl
imul
mov
sub
sub
sub
cmp
lcall
push
std
sub
inc
sub
cmp
in
je
mov
and
mov
add
enter
jmp
decb
inc
push
aad
nop
xor
cmc
sub
push
cmp
and
add
mov
or
lahf
cmp
lret
bound
cmp
std
inc
and
or
lods
iret
lcall
fcoml
xchg
in
dec
jge
shl
push
iret
add
jecxz
and
in
test
inc
incl
mov
inc
push
std
lahf
fcompl
cmp
inc
dec
mov
pusha
sbb
jecxz
jge
adc
std
dec
in
sub
lret
xor
jae
out
jno
lods
movsb
jb
mov
push
xor
pop
in
aam
lret
inc
jmp
cmp
arpl
sbb
and
jge
pop
popf
mov
or
mov
xor
jmp
leave
mov
sbb
lcall
or
sbb
pop
jno
loope
fcoml
lods
sub
sub
out
hlt
cli
imul
mov
pop
mov
jmp
add
inc
sbb
lods
or
shll
push
mov
es
shlb
sahf
cmpsl
dec
lret
adc
das
lahf
hlt
inc
int
sub
scas
sbb
lock
pusha
add
outsl
dec
jp
xor
popa
dec
mov
orl
aam
sbb
sub
cmp
sbb
dec
mov
movsl
jle
cs
xchg
pop
push
push
xlat
jbe
std
add
push
out
in
icebp
xlat
xor
add
mov
stos
notb
dec
cmp
divb
pop
fwait
add
and
adc
in
lcall
in
jb
push
mov
mov
sbbl
in
xchg
test
mov
movsb
mov
and
mov
mov
into
into
xchg
arpl
and
mov
add
pushf
jno
pop
adc
and
jo
or
xor
jmp
adc
into
xor
mov
and
repz
nop
cli
sub
testb
lock
xchg
aam
fisubrs
sub
hlt
mov
or
jb
lahf
cli
in
push
push
or
pop
ds
sub
dec
mov
loop
sub
pusha
mov
push
push
push
cmp
sbb
les
inc
mov
xlat
cmp
push
loope
sbb
popa
inc
and
dec
mov
cs
sahf
adc
mov
jge
bound
and
add
mov
shlb
les
sub
pop
loopne
lahf
les
sub
lock
xchg
xchg
push
add
push
cmc
les
arpl
mov
out
rorb
frstor
mov
mov
fmuls
sbb
mov
jg
and
pop
xor
in
pop
or
mov
pushf
xchg
cmp
aam
cmpsl
aad
stc
lock
push
jle
cwtl
testl
movsw
jno
dec
mov
cld
mov
cmp
aam
pop
sbb
sbb
lds
mov
sub
lahf
dec
cmp
mov
sahf
add
std
jmp
push
insb
out
push
add
push
frstor
push
shll
test
push
mov
xchg
lods
subb
pop
xor
xor
in
in
sub
movsl
mov
in
xchg
push
mov
js
js
cmp
xchg
push
idiv
xchg
adc
adc
popf
movsl
or
sbb
ljmp
mov
sub
into
mov
ljmp
mov
mov
sbb
mov
xchg
in
test
in
xchg
and
inc
jo
mov
pop
xchg
fwait
ljmp
je
mov
aad
inc
push
xor
dec
cmpsb
and
add
and
in
xchg
in
into
hlt
xchg
sub
pop
popf
ror
push
repnz
mov
dec
ja
pop
rorb
in
jle
sub
fldcw
rcrl
mov
sbb
mov
std
aas
ds
test
pop
sbb
jno
rorb
xor
mov
aad
addr16
in
popa
loopne
fistps
int
punpckhwd
mov
xor
xchg
cvtss2si
xor
clc
icebp
push
and
insl
loope
adc
pop
xchg
fsubl
adc
jl
dec
xor
mov
mov
mov
cmp
xor
je
sub
mov
dec
fmuls
addr16
inc
test
cs
stos
mov
das
pop
ljmp
push
popf
pop
decl
flds
and
cmp
jl
lea
dec
mov
aaa
xor
add
sbb
jecxz
pop
dec
mov
into
cwtl
in
push
cld
jmp
jp
scas
sub
mov
js
pop
mov
push
adc
sub
test
outsb
jp
sub
pop
mov
test
outsb
add
xchg
pop
push
cmp
add
sarb
lret
dec
mov
addr16
jo,pt
and
mov
test
nop
jmp
lahf
mov
js
cli
ljmp
test
dec
fcompp
cmp
jb
push
leave
rcll
push
sub
daa
sbb
ficoml
push
add
nop
xchg
jne
not
mov
add
inc
inc
loop
push
inc
loope
mov
mov
dec
mov
daa
cld
lock
sbb
rclb
sbb
decb
sbb
lretw
xchg
cmp
icebp
push
and
ror
pop
addr16
iret
add
fsubs
mov
pop
dec
adc
movb
mov
jl
xlat
test
jb
xchg
cld
dec
jo
mov
mov
add
jmp
push
int3
fisttps
mov
xchg
addl
sub
fisttpll
ret
out
lea
iret
int3
jmp
adc
mov
test
popa
ret
cmp
and
cmp
rep
jecxz
pop
ljmp
scas
or
jl
les
testl
mov
mov
push
mov
xchg
or
push
mov
fdivrl
lds
sub
enter
shrb
in
pop
out
arpl
xor
popa
mov
sti
out
stos
out
es
mov
xchg
es
jg
xor
cltd
sar
dec
dec
mov
fists
or
and
sahf
ss
andb
fisttpl
mov
jmp
loopne
inc
outsl
add
imul
testl
add
adc
jle
mov
fists
aaa
aas
stos
ret
xchg
lods
insl
daa
pushf
xchg
and
movsb
dec
push
cld
dec
dec
rcr
mov
add
out
push
cmpl
sub
pop
leave
inc
add
dec
or
sbb
divl
imul
into
clc
add
sbb
sub
mov
pop
add
jecxz
cli
push
inc
xor
push
cmp
mov
cmp
insb
aad
pusha
push
in
mov
dec
iret
sahf
clc
mov
jns
sub
faddl
movsb
jne
pop
fsubs
idivb
jg
adc
in
seto
lret
out
pop
xlat
adc
add
popf
sbb
cs
scas
sti
mov
fmulp
cmp
imul
and
gs
xor
cmp
insb
inc
cmp
dec
in
lret
sti
mov
test
cli
addb
fdivr
push
mov
dec
sub
pusha
mov
jle
out
jmp
aam
fnsave
pop
int3
add
fistpll
movsl
repnz
xchg
lds
xchg
mov
insb
xchg
mov
and
or
imul
lods
mov
mov
add
test
lret
clc
divb
lret
imul
jne
and
dec
or
mov
addr16
inc
sbb
fsubr
push
int3
adc
wrmsr
or
push
stos
je
das
lods
arpl
sub
mov
stos
imul
ret
cmp
call
xor
popa
pushf
testl
xor
jo
push
push
and
loope
pop
mov
mov
mov
mov
push
pop
inc
testb
mov
fisubrs
xor
roll
lods
insb
fstpl
sub
cld
shrb
adc
add
lock
pop
loop
xchg
lret
outsb
cmp
aas
fimull
push
shlb
push
shlb
push
cs
mov
mov
std
xorb
fiadds
insb
and
ss
cmp
push
mov
int
ret
iret
lods
sbb
pop
fisubl
or
pop
pop
pop
inc
add
push
pop
leave
or
aaa
sahf
push
iret
xor
sarl
lahf
cmp
fcomps
adc
xor
cmp
out
hlt
andl
jg
pushf
call
or
aad
test
push
jbe
cmp
lret
pop
jg
pop
out
pop
dec
cmpsb
out
lds
xor
mov
cmp
int3
mov
sbb
pop
jb
add
and
hlt
fxam
ret
sub
cmp
test
sub
mov
pop
sub
add
adc
scas
xlat
jge
mov
xor
jmp
loop
repnz
std
push
fnstcw
jle
xchg
jbe
mov
mov
sbb
insl
adc
mov
pop
scas
cmp
and
sbb
cmc
gs
sub
daa
js
sub
cmp
int
add
or
and
mov
loopne
testb
fiadds
ret
mov
shrb
push
mov
inc
lods
int
lds
jns
iret
inc
scas
mov
inc
xchg
cmp
sub
or
mov
mov
scas
and
rcll
rolb
cmp
xor
mov
pop
nop
arpl
mov
xchg
pop
push
jp
popf
lret
jg
cmp
cmp
lret
das
test
rolb
pop
inc
mov
jle
test
mov
push
mov
pop
jae
mov
push
push
insl
mov
mov
out
pop
loop
push
sub
pusha
out
leave
mov
stos
imul
ljmp
popa
out
addr16
cld
adcl
xor
jge
or
das
rol
jl
out
jb
mov
jp
jg
mov
cli
outsl
das
inc
sbb
mov
fsubrs
negb
fs
stos
fistps
cmp
fcomip
in
add
insb
ja
xchg
sahf
sbb
icebp
addr16
call
out
xor
cld
clc
xchg
dec
jp
enter
jmp
es
push
icebp
or
iret
and
jns
cmpsb
out
aad
fwait
dec
push
inc
mov
fidivrl
sub
clc
out
outsb
repnz
icebp
pop
test
mov
and
ficomps
out
inc
popf
loope
sub
jge
dec
xchg
add
xchg
mov
imul
cmp
rcpps
or
xor
mov
movsb
mov
jno
ret
mov
loope
arpl
add
insb
enter
cs
je
scas
and
mov
adc
ja
out
call
dec
xchg
xchg
nop
pusha
pop
mov
adc
mov
ret
mov
push
scas
mov
mov
push
test
or
pop
mov
jmp
xchg
cld
in
push
jbe
jp
xlat
or
inc
pop
scas
inc
fidivrs
sbbb
sub
dec
jne
inc
aad
outsl
push
mov
je
imul
jnp
push
pusha
test
sbb
mov
mov
push
mov
sbb
ss
inc
inc
das
adc
popf
or
fcoml
addr16
lds
mov
mov
sbb
rcl
gs
mov
mov
inc
jnp
xor
enter
outsb
xchg
js
fldenv
fisubs
loopne
rcrb
in
add
shlb
jle
bound
mov
int
mov
cwtl
xchg
mov
dec
sbb
cwtl
mov
lcall
arpl
cwtl
enter
iret
pop
add
jns
xchg
repnz
add
and
push
push
and
je
jb
aas
pop
insb
mov
jae
pop
lret
jmp
icebp
inc
lret
ret
jmp
xor
fstp
jle
rol
pusha
inc
in
and
add
sbb
mov
inc
pop
adc
mov
fistl
rcll
scas
jecxz
and
fmuls
jle
es
or
xchg
outsb
mov
out
bswap
sub
mov
incb
cmp
mov
jne
les
rorb
inc
xor
pop
ss
outsb
xor
mov
jg
xchg
mov
inc
push
lcall
daa
push
sub
xor
aaa
sarl
push
fwait
adc
daa
push
ror
adc
pop
pop
add
out
jecxz
push
or
shl
mov
xor
insl
adc
push
adc
push
int
xchg
mov
sahf
loope
push
or
add
not
mov
sub
add
loop
xor
lret
aaa
fiaddl
iret
std
repnz
adc
cmpsl
push
pop
xchg
test
and
or
movsb
icebp
jo
addr16
pop
add
aaa
nop
in
out
adc
pop
push
mov
fisttpl
pop
iret
jbe
cmpsl
shlb
lahf
add
and
xchg
add
and
scas
sbb
cmpsb
mov
sbbb
or
movsb
mov
jecxz
push
and
imulb
sub
cmpl
mov
sbb
or
push
dec
fdivrs
sub
dec
cmp
imul
jb
mov
test
xor
popf
dec
push
lcall
ret
test
test
mov
aaa
inc
mov
cli
jmp
pushf
std
andl
push
jmp
repz
shrl
jno
xchg
cld
xchg
fists
cmp
test
mov
lods
lods
sub
dec
or
jno
cmp
and
cmc
js
lcall
sti
test
inc
stc
and
cmp
add
outsl
jbe
dec
jae
sub
int3
mov
sahf
lods
loop
negl
rcrb
inc
dec
test
jecxz
mov
movsl
xchg
mov
enter
pop
inc
push
cmp
jg
sbb
cltd
ret
xchg
pop
inc
sti
jb
sub
jnp
pop
lods
ret
daa
movsl
dec
push
mov
sahf
dec
bound
jae
xchg
mov
std
out
add
push
and
cmpl
and
and
jne
adc
ss
mov
mov
sub
jne
mov
cwtl
mov
sbb
shll
cmpl
outsl
lds
stos
sub
or
xor
mov
mov
cmp
jle
push
jbe
pop
push
mov
ret
fs
subb
test
cmp
sub
jno
mov
scas
addr16
fmuls
cmpsb
pushf
in
xor
jle
out
inc
mov
stos
jno
jns
push
loopne
jg
bndldx
mov
pop
inc
movsl
cmp
outsb
nop
stc
hlt
push
add
jnp
jmp
push
aas
jge
jmp
lret
cmp
movsl
jecxz
fmuls
adc
jae
int
push
mov
push
leave
cmp
fucomi
cmp
pop
or
test
gs
xchg
cmp
cmp
pop
cmp
adc
mov
inc
daa
xor
in
stos
jg
std
in
mov
mov
repz
daa
cmp
jne
mov
dec
popf
inc
fldl
pop
push
sti
push
outsl
sub
xor
jb
into
mov
push
repnz
adc
fisttps
cmp
negb
jb
xchg
cwtl
repz
pusha
inc
gs
rcrl
mov
add
repz
in
push
testb
sbb
orl
push
sbb
rclb
out
push
in
ljmp
mov
aad
outsb
and
mov
fisttpl
das
sahf
inc
jg
dec
inc
push
and
cmp
in
stos
add
cmp
in
adc
mov
xlat
in
dec
pushf
je
mov
fs
movl
jmp
ja
sbb
push
out
sub
stc
push
inc
or
inc
xorl
icebp
push
xor
enter
stos
es
pop
dec
push
inc
or
mov
mov
out
mov
mov
mov
xchg
jne
mov
cwtl
bound
imul
outsb
insl
ds
mov
add
negl
xchg
daa
or
lret
mov
sbb
push
clc
out
dec
xchg
xchg
sbb
push
pop
lock
ret
inc
dec
hlt
lods
shll
leave
int
mov
mov
add
pusha
dec
repnz
push
mov
cmpsb
jg
mov
pop
fcomi
stc
jle
cltd
cli
in
cmpsl
adc
sbb
pusha
inc
mov
out
movsb
out
out
movsl
rorb
gs
mov
jnp
cmp
sbb
sub
and
add
mov
pop
mov
lods
adc
or
outsl
cmp
fstps
adc
xchg
push
lock
cmp
sub
pop
add
stos
aaa
imul
sub
jb
in
jg
dec
add
adcb
mov
pop
sbb
in
mov
cmp
push
or
icebp
xchg
mov
bound
call
sarl
push
adc
jecxz
xchg
push
adcl
mov
jae
arpl
adc
and
repz
xchg
push
adcl
mov
jae
arpl
adc
and
repz
jecxz
xchg
push
cmpl
push
inc
jae
arpl
adc
and
repz
xchg
push
adcl
cmpsb
mov
jl
out
andl
dec
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
jb
bound
inc
inc
push
decl
pop
jl
or
repnz
lock
ret
shlb
addb
push
inc
inc
push
xor
and
adc
add
repnz
nop
rol
ret
mov
adcb
inc
inc
push
xor
and
adc
add
repnz
shl
movsb
ret
in
repnz
nop
sub
das
cs
out
rcrl
adc
jle
clc
pop
xchg
add
addr16
ret
mov
lock
es
iret
in
push
call
or
sub
aad
pop
shll
push
push
mov
cmp
lods
push
loope
inc
pop
cld
repnz
add
idivl
sbb
cmp
xor
cmp
sub
test
dec
lret
adc
sbb
mov
mov
and
sbb
cmpsl
push
aas
mov
dec
ret
sbb
xchg
es
test
lahf
jne
lock
xchg
adc
sub
mov
ja
xchg
add
push
inc
inc
push
xor
and
adc
add
repnz
lock
ret
mov
cmp
movhps
sub
cmp
dec
push
xor
add
test
xchg
mov
mov
rcll
pusha
pop
jb
inc
and
push
push
adc
mov
int3
in
rclb
bound
cmp
and
xor
add
adc
loopne
lock
ret
mov
adcb
inc
inc
push
xor
and
adc
add
repnz
lock
ret
mov
adcb
repnz
pop
int3
in
xchg
dec
mov
pushf
mov
and
les
icebp
xor
jg
fdivrp
push
fdivrl
popa
mov
sbb
cmp
inc
cmp
pushf
ja
cmp
sub
inc
lahf
in
enter
jo
stos
xchg
add
imul
mov
mov
sbb
inc
mov
jo
or
xchg
pop
mov
andl
das
mov
xor
mov
xlat
sbb
dec
pop
jmp
cltd
xlat
dec
pop
movsl
dec
xchg
xchg
xorl
ret
add
mov
scas
cltd
mov
add
test
dec
ljmp
dec
mov
adc
jo
or
push
jbe
push
push
mov
mov
lahf
jns
adc
push
cwtl
addl
mov
or
sub
inc
cmpsb
or
jno
faddl
cmpsb
sar
xor
xchg
enter
dec
enter
mov
fisttpl
jb
out
mov
mov
sbb
jnp
or
out
out
in
arpl
sbb
clc
popf
xor
inc
shl
sub
gs
sub
fcmovbe
jmp
and
or
cmp
mov
sub
fucomp
shr
loop
scas
das
push
gs
jbe
ss
cmp
adc
mov
xchg
fldt
jg
repz
insl
sub
cmp
mov
mov
or
and
loope
rol
xor
push
fisttps
xor
scas
loop
cmpsb
jecxz
pushf
fldcw
pop
and
lds
push
out
stc
xchg
add
cmp
scas
loope
dec
jl
cmp
fsubs
or
add
js
imul
cltd
repz
test
movlps
lcall
daa
dec
cmp
ljmp
ja
dec
lea
test
aaa
je
sbb
push
xchg
and
inc
ljmp
arpl
repnz
lock
inc
movsb
push
out
hlt
mov
adc
fbstp
shrl
jge
push
sub
jnp
cmpb
adc
fs
sbb
mov
ret
shr
inc
bound
das
push
mov
xor
nop
jne
jmp
icebp
cmc
fucomp
outsl
or
or
jmp
inc
or
mov
bound
xchg
mov
sete
xchg
jne
lock
dec
mov
sbb
das
mov
les
push
sub
dec
fucomp
cmpl
xor
sub
jae
gs
test
cmp
test
loop,pt
sub
jae
xlat
dec
fidivl
dec
push
dec
mov
jae
sti
fcmovnu
inc
xchg
dec
jmp
cmp
lods
scas
xchg
mov
inc
xor
lods
stc
mov
test
add
push
enter
arpl
lods
popa
stc
flds
mov
push
pusha
rorl
pop
xor
and
jb
push
inc
test
jmp
insb
ds
aad
aad
jno
ljmp
not
fucomip
jp
adc
jbe
fwait
jmp
imul
inc
xor
loopne
cmp
test
push
jne
les
cld
xor
iret
mov
repnz
jnp
adc
lock
sbb
ret
jmp
cmpsl
cmp
call
jns
sbb
mov
ret
stos
jne
aaa
stos
pop
movsl
loopne
jo
and
les
mov
cmp
push
call
xor
dec
into
mov
enter
push
dec
xchg
sub
jns
pop
mov
or
cmp
mov
lock
shrl
jge
mov
mov
icebp
movsb
sbb
rcr
mov
mov
inc
push
mov
xor
push
jnp
cmpb
lahf
vpaddusb
mov
dec
shll
mov
xchg
cmpsb
bound
push
xor
add
cmp
in
jns
cmp
inc
pop
in
test
jbe
inc
push
test
mov
ret
stos
or
lahf
cld
push
adc
dec
repz
out
call
popf
lret
test
sub
pop
je
lret
push
add
fmuls
jo
push
jbe
es
jecxz
mov
lcall
aad
sbb
fldcw
jns
push
xchg
adc
stos
loop
repz
leave
pop
mov
inc
imul
test
jno
scas
xchg
in
push
es
lock
xchg
mov
and
enter
mov
scas
sbb
out
mov
call
add
imul
in
bound
add
roll
notb
pushf
daa
mov
and
test
rcll
cwtl
adc
mov
cmp
dec
pop
and
jp
repz
xor
cmpb
mov
outsl
or
and
adc
movsl
lret
jp
shl
add
sbb
imul
stos
push
sbb
mov
dec
lds
ss
push
mov
jl
dec
and
in
sub
into
out
hlt
adc
and
ret
dec
mov
adc
das
test
lea
push
outsb
sub
xchg
xlat
lds
mov
icebp
cmpsb
les
out
negl
push
lahf
adc
iret
rcrb
dec
xor
in
mov
sbb
inc
sbb
mov
mov
int
adc
ret
xor
or
gs
lahf
mov
xor
cmp
push
ja
adc
lods
and
insl
movsl
aaa
mov
ljmp
inc
inc
mov
aas
xchg
arpl
pushf
mov
fndisi(8087
cmpsb
mov
push
sub
test
jge
mov
in
jmp
fidivrs
out
xor
xchg
push
aam
push
in
xor
movsb
mov
jns
push
jmp
add
pop
mov
icebp
jbe
imul
xchg
lret
aas
adc
imul
dec
or
scas
push
or
jge
pushf
call
fs
and
out
icebp
pushf
push
test
enter
pop
rclb
sbb
test
lods
loope
push
pop
hlt
xlat
movsb
stos
cmp
push
movsb
int
dec
xor
cmpl
cmc
jl
adc
cmc
insl
adc
xchg
daa
xorb
mov
pop
jp
mov
sub
enter
std
xorb
test
fldt
loope
mov
lods
mov
jg
sub
xchg
ss
lret
and
cmp
ret
push
pop
popf
jns
mov
fbld
add
dec
aaa
out
mov
test
sub
xchg
mov
xor
xor
nop
push
jne
sarb
sbb
mov
ret
popl
push
lock
divl
jnp
out
jp
sbb
xchg
push
addr16
or
out
ret
pop
mov
or
xchg
cs
xor
push
pop
movsb
mov
push
aad
add
int3
cmp
pop
and
lahf
fadds
rorb
add
mov
aaa
xchg
scas
push
icebp
ds
sbb
pop
daa
dec
mov
jg
cmpsl
mov
lea
jmp
adc
cmp
pop
jns
ret
dec
pop
push
cli
aam
jmp
rcll
divb
orl
cwtl
cmp
out
arpl
aam
xchg
and
mov
inc
mov
adc
xchg
jle
xor
incb
push
fisubs
sbb
in
cmp
lods
mov
pop
jle
outsb
xchg
sub
cli
hlt
fimull
dec
or
pop
cld
das
jnp
and
in
aad
dec
adc
add
mov
inc
and
push
push
cmc
mov
jl
mov
insl
sub
testb
aas
ficoms
mov
add
pop
cmp
inc
fwait
iret
sbb
xchg
xchg
cs
roll
jnp,pn
push
ret
lret
push
outsl
jp
shll
jmp
lret
cltd
inc
xchg
xor
int
jne
mov
fistps
sub
aaa
cltd
aam
rcrl
inc
lahf
cmp
lds
stos
cltd
inc
inc
test
sub
gs
push
pop
push
pop
jmp
jnp
in
stos
popa
xchg
sub
scas
js
ljmp
and
cmpsl
sbb
lock
xchg
mov
xorl
rorb
jecxz
mov
jnp
inc
imul
push
sarw
push
jno
pop
out
scas
mov
cmpsb
lds
cmc
push
popa
mov
nop
push
cmp
stc
lahf
xor
insb
ss
dec
lds
add
mov
inc
and
imul
aad
sub
and
push
mov
scas
push
loope
dec
mov
add
call
fstps
aas
add
push
jge
mov
xchg
dec
mov
mov
add
push
test
push
or
mov
mov
sahf
arpl
fucomip
adc
mov
mov
insl
movsb
call
pop
mov
icebp
outsb
jne
in
push
addr16
mov
push
movsb
mov
pushf
inc
std
fistl
pop
mov
loopne
add
into
jne
cli
scas
test
jo
aam
jp
jle
scas
daa
pushf
push
stos
int
mov
pop
xchg
mov
dec
mulb
pop
xor
pop
stos
xchg
xchg
test
sub
mov
arpl
sub
std
lcall
or
mov
add
or
iret
mov
push
and
mov
int3
xchg
xchg
adc
add
stc
jae
mov
xchg
lods
inc
enter
pop
or
ljmp
lods
stc
mov
ficompl
mov
fstpt
xchg
xchg
loope
bound
mov
imul
andb
popa
fildll
cs
je
inc
pop
fwait
or
mov
gs
sub
cmp
push
jmp
and
jno
std
aaa
mov
mov
push
inc
dec
xchg
mov
aas
jle
ficoml
addr16
hlt
ds
and
loop
repz
or
or
jo
out
loopne
push
jecxz
fcmove
pop
mov
mov
jae
mov
xor
inc
dec
push
rcll
fiaddl
ret
sub
xor
aad
pop
test
mov
jg
dec
icebp
or
jmp
push
sbb
lret
jne
sar
inc
cmp
add
pop
pusha
pop
lea
adc
mov
mov
or
lret
sbb
mov
mov
orl
jl
mov
sub
popa
sbb
inc
mov
pop
loop
in
inc
inc
and
inc
jns
shl
pop
repnz
xchg
mov
sub
lods
lcall
inc
push
js
sbb
test
adc
fbld
adc
rolb
and
call
loopne
pop
lds
out
shll
ja
arpl
inc
cld
cld
mov
push
test
or
and
scas
scas
mov
dec
push
aam
mov
pushf
xor
pop
or
shlb
cmpsb
cwtl
xor
andb
push
fisubrl
jecxz
sub
in
sub
je
push
mov
add
shl
mov
cmp
or
mov
lahf
std
repz
dec
ds
cmc
enter
mov
mov
jge
stc
cmp
mov
cmp
or
mov
fs
mov
stos
pop
push
inc
or
sub
xor
xor
mov
or
movsb
add
inc
stc
mov
mov
jne
repz
add
mulb
lock
jmp
dec
cmpsl
mov
shlb
and
cmp
dec
mov
mov
mov
in
sbb
xchg
push
mov
cld
fiadds
test
inc
pop
lds
xchg
xchg
xor
lock
cmp
pop
xor
push
and
push
leave
mov
lea
xchg
outsl
push
pop
test
mov
out
sub
test
repnz
push
lahf
loope
mov
daa
js
xor
add
adc
pop
xchg
xchg
nop
cwtl
lret
fwait
cmpsb
mov
stc
mov
jl
lea
jp
pop
sahf
sahf
insb
dec
push
push
xor
lock
push
dec
pop
imul
mov
mov
or
xor
sub
adc
shll
in
pop
xor
xchg
dec
in
lods
push
shrl
xor
xchg
int
fisttpll
rep
mov
loope
cltd
flds
push
movsb
out
pop
rorl
fsts
cmp
repz
shll
inc
sub
pop
xchg
pop
enter
movsb
inc
and
cli
js
rolb
add
pop
aad
clc
and
ss
aaa
mov
mov
xchg
in
shl
push
xor
or
or
mov
ja
in
pop
jp
les
and
jl
lret
mov
scas
push
mov
notl
hlt
negb
iret
mov
xchg
sarb
stos
test
mov
jne
cmpsb
outsb
call
mov
test
or
xor
in
lea
stc
setbe
lcall
add
aas
mov
rcr
sbb
mov
dec
in
adc
mov
repnz
fsincos
jle
or
jbe
adc
dec
out
aas
mov
hlt
push
xor
pop
loop
shll
lcall
mov
and
sub
je
in
fsubr
cmp
cmp
cmpsl
pop
mov
fistpl
mov
and
pop
cmp
cmc
lret
inc
or
inc
test
mov
inc
ret
insb
into
nop
arpl
movsb
inc
jmp
arpl
cmc
cmp
imul
into
dec
dec
pop
ds
imul
leave
cmp
mov
adc
sub
fcmovne
mov
push
popf
out
or
fstps
jg
mov
jns
fistpl
in
clc
inc
outsb
sub
test
shll
pop
orl
mov
imul
std
mov
pop
jo
clc
and
jge
push
inc
test
push
les
sub
loopne
cwtl
mov
xchg
movups
sti
cld
arpl
sbb
xchg
mov
ret
cvttps2pi
inc
insb
mov
sti
mov
dec
mov
es
sbb
ror
ja
ret
lret
in
pop
js
fcmovu
jecxz
ret
cmpsb
lds
ljmp
lret
push
pusha
dec
scas
push
arpl
mov
imull
stos
outsb
stc
inc
testb
mov
icebp
dec
sbb
cld
sub
add
fadds
popf
push
lock
sahf
sub
outsb
pop
loopne
xor
shl
lock
out
sub
std
and
or
push
daa
xchg
push
nop
mov
rorb
cmp
mov
adc
aaa
mov
shll
shrl
dec
aad
cmpsb
sbb
fnstcw
xchg
mov
or
sub
fstl
push
mov
lcall
imul
inc
adc
mov
sbbl
scas
mov
or
shlb
stos
insl
add
lcall
add
push
cli
out
push
scas
es
xor
mov
aaa
sbb
out
rolb
dec
out
mov
mov
daa
stos
cld
add
fdivrl
xchg
inc
sahf
ret
or
mov
adc
ljmp
out
fcmovne
shrb
xlat
xchg
rcrb
sbb
sarb
cmp
push
mov
test
orl
mov
push
pop
fisubs
inc
cmp
test
shlb
lea
arpl
push
or
pop
scas
jb
in
mov
pop
or
ret
cmpsb
or
movsb
rorl
dec
mov
shrb
xchg
xlat
fisubs
test
int
mov
ljmp
ljmp
into
xor
mov
sbb
mov
cmpsb
or
out
pushl
out
cli
mov
movsb
cmp
fwait
push
dec
sbb
mov
popa
mov
popa
cmpl
add
or
fnclex
adc
repnz
leave
popf
aas
or
adc
out
adc
bound
inc
adc
lahf
adc
push
dec
pop
adc
cmp
or
push
xchg
xor
jae
adc
pop
xchg
cld
cli
or
stos
shll
cmp
stos
shll
movsb
popa
cmp
aaa
divb
ret
shll
mov
mov
pop
mov
mulb
mov
inc
xchg
add
sahf
xchg
gs
push
rclb
sbb
pop
leave
sarb
jnp
negl
mov
jb
sbb
and
jno
das
rcll
dec
dec
mov
mov
jo
aam
ret
ret
sbb
mov
jle
mov
jo
scas
gs
shll
jecxz
repnz
rolb
mov
mov
fists
mov
cmpsb
or
test
idivb
pop
mov
mov
shll
cmp
and
fistpll
je
mov
cli
adc
push
icebp
sbb
sub
js
mov
lret
inc
aam
out
xchg
test
inc
mov
add
mov
dec
sub
add
lods
or
push
clc
enter
xchg
fildl
repnz
inc
inc
push
stos
pop
mov
out
test
dec
mov
adc
add
push
mov
stos
das
sbb
add
in
pop
das
mov
fildll
mov
mov
push
stc
pop
cmpsb
mov
pop
push
xchg
sbb
lret
insl
rcll
aad
outsl
cmp
add
xor
out
pop
fistpl
and
jns
xchg
ret
data16
xor
insb
rcll
mov
xor
cs
fmul
xor
ss
hlt
outsb
xchg
in
mov
lods
jno
push
test
cmp
sahf
push
idivl
inc
std
stc
das
dec
dec
inc
std
outsb
mov
dec
or
jecxz
mov
test
sub
outsl
cmp
ljmp
cmp
call
outsb
pop
stos
stc
sarb
ss
sbb
shll
mov
xchg
and
push
movsb
push
and
add
in
mov
inc
or
cmp
or
fstpt
cwtl
outsb
es
sub
pop
in
lcall
pop
lods
rclb
bound
and
addr16
mov
dec
insb
fstps
add
call
arpl
sub
jo
cltd
mov
cmpsb
mov
mov
pop
iret
inc
scas
in
test
movsb
dec
lods
cmpl
out
fcomps
pop
xlat
sub
dec
shrb
loop
pop
or
xchg
sbb
cmpsl
daa
sbb
mov
add
lods
and
mov
lret
sbb
movsb
add
in
insl
sub
mov
fs
sub
loopne
and
cmp
add
xlat
push
data16
and
push
insl
or
sbb
bound
adc
shlb
jecxz
mov
and
ficoml
les
inc
in
dec
fistps
insb
inc
xchg
call
sahf
mov
test
cmp
dec
adc
cs
std
push
inc
adc
js
xor
cmpsl
sti
jno
test
fwait
sbb
sbb
lret
test
je
in
push
dec
out
jmp
nopl
adc
ds
inc
cmp
mov
mov
aam
add
adc
push
test
cmpl
xchg
jno
push
pop
mov
mov
aam
pop
push
cmpsb
pusha
or
mov
out
mov
repz
cmp
leave
xor
sbb
push
mov
test
mov
ret
idivl
decl
dec
or
call
mov
dec
or
mov
and
and
movsl
or
sbb
and
mov
mov
push
es
inc
popa
push
ja
pop
or
cmp
loop
jae
jg
js
xchg
xor
lds
pusha
add
mov
pusha
jae
sub
and
and
outsl
lods
jbe
mov
mov
rcll
jp
stc
mov
adc
xor
aad
jnp
cmp
mov
pop
pop
scas
int
das
sub
mov
mov
xchg
out
inc
iret
pop
lea
mov
sbb
jo
arpl
iret
fistps
cs
sbb
ds
in
xor
cmpsb
push
clc
jmp
sarb
jo
enter
fyl2x
rcrl
pushf
dec
and
out
clc
push
and
cli
mov
int3
mov
adc
outsb
mov
push
test
cmp
xor
and
xor
xchg
lock
sar
push
xchg
negl
jb
lret
mov
pop
out
mov
pop
js
push
in
repnz
fstps
mov
enter
in
test
mov
sbb
xchg
into
push
stos
stos
movsb
test
xchg
jge
cmp
lds
mov
mov
mov
pop
dec
out
jno
jo
stos
or
mov
xchg
mov
ds
adc
and
push
testb
cmpsb
das
jne
cmp
push
das
loopne
mov
sbb
jo
mov
sub
int3
movsb
or
mov
std
and
xchg
cwtl
pop
adc
fdivrs
jo
inc
inc
push
xor
and
adc
add
repnz
lock
ret
mov
adcb
inc
inc
push
xor
and
adc
add
repnz
lock
ret
mov
adcb
rolb
and
mov
add
lock
ret
mov
adcb
inc
inc
push
xor
and
adc
add
repnz
pop
js
ret
sub
dec
loop
repnz
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
jns
xor
add
adc
jl
add
arpl
cmp
out
mov
orl
jg
psrlq
xor
xor
xor
adc
arpl
push
lahf
test
dec
push
pop
jecxz
repnz
ret
psrlq
cmp
sub
sbb
or
jp
push
pop
popl
push
mov
pop
int3
jge
pop
mov
mov
mov
jge
imul
jo
stos
jl
jae
sub
jg
xchg
sub
out
test
and
mov
and
lcall
dec
sahf
pop
pop
out
movsb
mov
divps
scas
cli
xor
dec
cmp
mov
clc
jb
push
mov
mov
dec
insb
lahf
sbb
mov
imul
and
jecxz
cwtl
lret
inc
scas
scas
stos
push
iret
xchg
pop
fldt
mov
mov
xor
ds
jb
add
and
scas
mov
push
jo
leave
stos
sub
mov
insb
dec
out
jp
push
sub
push
pop
dec
into
sahf
stos
fisubs
mov
nop
dec
outsb
jl
xchg
pop
and
jecxz
and
rcrl
jecxz
xor
add
add
jae
imul
fwait
dec
mov
das
jmp
ret
bswap
pop
push
adcb
mov
pop
rcrb
inc
ljmp
icebp
and
xor
lea
mov
iret
adc
das
loopne
lahf
mov
sbb
xor
jp
jno
mov
adc
inc
push
lahf
mov
dec
xchg
pop
jecxz
repz
ret
psrlq
and
xor
add
adc
arpl
push
lahf
mov
dec
xchg
pop
jecxz
repz
ret
psrlq
and
lock
in
test
pop
pop
dec
stos
popf
adc
cmpl
adc
mov
adc
mov
ja
cmp
fisttpll
stos
sti
pop
pop
gs
pop
dec
and
lock
xchg
test
mov
push
aaa
aaa
cmc
xlat
and
xchg
clc
adc
jne
push
xchg
out
mov
adc
mov
inc
sub
pop
sti
insb
jp
inc
inc
mov
test
inc
adc
dec
rorl
push
repz
and
push
dec
or
jbe
jae
je
mov
jb
popa
jle
in
push
xchg
stos
sub
add
in
stos
xchg
xchg
test
dec
lods
inc
ficomps
imul
mov
push
push
aaa
pop
mov
inc
jnp
fdivs
int
je
pop
cwtl
dec
gs
push
ljmp
jae
pop
xchg
cmp
xchg
daa
movsb
ret
xlat
mov
mov
add
mov
jne
ret
dec
xchg
sub
xchg
add
ja
gs
popa
jne
in
ret
mov
in
into
les
add
sbb
jl
dec
dec
sub
inc
data16
xor
icebp
jl
in
inc
adc
jb
mov
cmp
gs
fwait
sarl
mov
mov
sbb
xlat
push
xchg
push
rolb
fsubs
jns
xor
lods
xchg
in
out
dec
xchg
push
cmp
int3
sbb
idiv
or
push
inc
inc
adc
imul
jne
aaa
inc
inc
lret
push
add
std
mov
push
cmp
mov
fldt
cmp
loop
xchg
cmc
cli
cwtl
sbb
daa
data16
in
leave
cmp
or
aaa
bound
sub
adc
cwtl
ret
out
push
rorl
cmpsl
enter
xchg
cmp
out
jl
out
int3
pop
cmpsb
add
iret
mov
pop
jno
fadds
fdivp
imul
repnz
mov
pushf
cmp
mov
fwait
push
jl
cmp
push
sbb
sub
mov
test
jp
hlt
sub
dec
adc
mov
add
dec
jle
stos
sub
das
fidivs
pop
iret
cmp
jg
adc
xchg
fmul
ret
sbb
pop
jmp
les
add
and
jle
adc
push
cmpsl
in
and
loopne
popa
std
pop
scas
fwait
lahf
and
mov
pop
lret
lods
mov
std
aaa
jb
jmp
push
adc
jno
adc
mov
lret
xchg
addr16
stos
sub
inc
jbe
aas
mov
mov
ds
jo
imul
sbb
aad
push
fisttpl
fisubrl
sub
cmpb
mov
mov
outsb
push
add
mov
mov
mov
rcll
mov
shrl
sbb
in
xlat
pop
imulb
imul
idiv
aaa
add
jg
sub
mov
adc
add
addr16
adc
in
test
loop
xlat
dec
xchg
into
mov
or
daa
pop
jge
jge
loop
adcl
mov
pusha
xchg
cmp
inc
out
loope
inc
jbe
dec
test
bnd
jbe
popa
push
pusha
xor
push
imul
jns
pop
fs
out
pop
cld
rcrb
cmp
rcll
ljmp
and
leave
or
pop
xchg
or
pop
lret
stos
mov
and
or
pop
or
jb
add
mov
adc
jge
dec
push
pop
xor
jae
xchg
pop
aaa
and
leave
adcb
xlat
aam
inc
mov
lret
jno
pop
xchg
addr16
fucomip
nop
inc
outsl
mov
notb
xor
push
mov
lds
les
mov
mov
cmpsl
nop
js
sbb
int
cmc
adc
inc
xchg
push
repz
sbb
mov
jle
inc
xor
lock
xor
shll
jle
divl
inc
cmpsb
dec
push
test
sub
mov
int3
outsb
cmc
adc
push
mov
imul
adc
shl
out
fisttpl
push
jmp
loop
mov
test
mov
dec
fucomp
inc
mov
jg
lret
lock
mov
cmp
xor
xchg
and
push
and
dec
jmp
fiadds
bound
movsb
repnz
mov
ret
ret
out
jbe
push
int
daa
ljmp
cmpsl
test
add
inc
test
mov
pop
or
sub
push
out
xor
push
popa
inc
jns
pop
sti
or
movsb
mov
cmc
xchg
push
cs
jg
not
lcall
imul
aad
dec
or
jb
aaa
cmp
out
cmp
push
jg
inc
pusha
push
fwait
daa
mov
push
popf
sahf
sahf
jo
xchg
outsl
cmpsl
push
add
icebp
jge
push
arpl
xor
mov
dec
cmpsl
pop
popa
lods
mov
shlb
popf
and
fisubs
das
pop
bound
jge
push
ljmp
in
mulb
repz
outsl
mov
test
jl
mov
fwait
jl
dec
fld
into
jle
mov
adc
fdiv
jmp
mov
push
pop
adc
repnz
imull
popf
xchg
pushf
mov
stos
dec
pop
out
gs
xchg
out
dec
dec
inc
mov
jbe
or
sub
push
mov
scas
in
loopne
push
mov
dec
jb
or
and
mov
pop
nop
popf
inc
sub
or
mov
mov
cmc
push
mov
push
sub
mov
out
ret
add
xor
xchg
in
gs
cmpl
jo
call
mov
pop
cmp
xchg
jge
ljmp
inc
shlb
xchg
or
pop
dec
iret
mov
dec
mov
loope
je
call
push
jo
cltd
daa
out
sarb
shl
rcl
das
cmp
stos
and
adc
fildll
mov
jecxz
pop
mov
jl
cld
jae
inc
dec
shlb
add
xchg
xchg
mov
adc
mov
aaa
dec
pushf
xchg
out
cmp
inc
push
call
hlt
lock
dec
xor
inc
lds
mov
sbb
inc
push
push
mov
ret
int
cld
xor
stc
add
inc
call
inc
fsub
sub
mov
sarb
call
mov
sti
push
shll
sbbb
jne
nop
mov
les
adc
lods
imull
dec
and
and
scas
lret
cld
fimuls
notl
icebp
sub
mov
into
lret
jg
bnd
ret
jae
fwait
mov
aas
jb
jnp
mov
pop
xchg
data16
je
ds
cmp
int3
call
in
add
rcl
jno
mov
inc
xorl
fsubrs
jmp
jo
insl
jmp
insb
and
jg
pusha
mov
jl
insb
mov
inc
jmp
std
cmp
inc
les
xchg
leave
icebp
mov
pop
adcl
xor
cmpsl
dec
test
notl
mov
popa
lcall
xchg
scas
shrl
cmpsb
testb
mov
push
cwtl
lock
sub
sub
sub
out
mov
adcb
mov
cmc
aam
jns
rol
stc
cmpsl
sub
stos
pop
mov
mov
insl
xchg
jb
cld
lods
roll
adc
popf
push
mov
movsl
repnz
pop
daa
mov
mov
jne
mov
push
shll
xor
into
sti
loop
xchg
inc
inc
data16
jbe
sub
cmpsl
je
std
test
pop
push
fdivs
push
pop
enter
push
or
inc
xchg
pop
imul
cmp
in
push
cli
xchg
jl
test
inc
scas
jb
ficompl
data16
std
jnp
pop
or
jbe
jmp
mov
mov
cmc
sub
dec
out
jns
pusha
fs
ffreep
or
out
dec
leave
pop
call
cli
test
dec
xchg
push
subb
or
mov
sbb
add
xchg
adc
fiaddl
add
sub
fsub
or
filds
cltd
icebp
in
movsb
dec
lock
add
lea
push
xchg
dec
repnz
adcl
inc
out
negl
cmp
fsubrp
add
lea
mov
push
sbb
cmc
cmp
mov
sahf
and
push
test
mov
mov
cmp
cli
jle
andb
mov
add
jns
xchg
sbbl
out
xlat
movsb
xchg
lock
mov
shl
and
mov
inc
or
pusha
dec
push
mov
pusha
xchg
dec
and
nop
pop
daa
test
jne
pop
lret
mov
shlb
push
stos
xchg
daa
adc
pop
xlat
lock
nop
mov
mov
sub
in
fbld
mov
std
add
dec
scas
sbb
dec
pop
outsb
jnp
int
sub
dec
jo
xor
mov
mov
movsl
push
mov
das
icebp
inc
inc
dec
mov
push
jbe
movsl
jo
shrb
dec
or
or
out
xchg
sar
movsb
sti
hlt
inc
lcall
cmp
ret
lcall
repz
dec
aas
fwait
mov
and
jnp
push
jmp
pop
ljmp
pop
sub
test
cld
arpl
out
popf
rcrb
add
cmp
lods
xstore-rng
and
fwait
xchg
jecxz
je
lahf
cmp
stos
stos
inc
fnsave
out
push
lcall
mov
xchg
lds
sahf
sbb
mov
mov
jmp
in
loopne
mov
sub
add
int
rolb
add
dec
adc
dec
push
cld
adc
mov
mov
pop
dec
imul
outsb
ret
push
mov
test
mov
shlb
jl
arpl
sti
pop
mov
mov
push
sbb
dec
xchg
push
ret
mov
ret
mov
xchg
adc
xchg
sahf
mov
mov
cmpsl
sub
adc
loop
mov
movsb
pop
cmpsb
push
add
push
decl
rcll
dec
aaa
sub
adc
scas
test
cltd
inc
mov
adc
fisttpl
push
push
out
sub
jge
scas
fistpl
mov
ja
inc
pop
jo
or
in
imull
outsl
cltd
sub
jbe
pop
lods
pop
mov
testb
mov
test
push
bound
cwtl
cwtl
cmp
aad
sbb
xchg
adc
mov
or
dec
mov
shlb
mov
test
leave
push
pop
shll
push
pop
in
sbbl
sub
int
push
aas
pop
ret
scas
outsb
sub
lret
fsub
daa
in
pop
cmp
fwait
cmp
dec
mov
insb
push
mov
enter
mov
mov
jmp
loop
psubb
jnp
xchg
or
adc
push
sbb
add
pop
jp
sub
insl
stos
pop
mov
inc
incl
pop
push
shrb
pop
mov
mov
sti
imul
sub
adc
push
xacquire
xchg
repnz
fdivl
adc
out
gs
cmc
sub
mov
adc
xlat
jae
imul
ljmp
jne
out
jb
in
add
test
add
sub
in
or
jns
stos
pop
add
mov
lahf
jge
xchg
xchg
sahf
inc
add
pop
enter
mov
xchg
int3
sbbb
or
dec
mov
pop
mov
ror
pop
jne
les
mov
ss
mov
cltd
pop
jo
sbb
pushf
inc
loop
sub
in
test
jmp
lahf
push
adc
mov
mov
fsubrs
sub
jmp
loopne
loop
mov
fisubrl
leave
dec
int3
pop
cwtl
xor
scas
adc
xchg
ja
xor
orl
cmp
adc
xor
pop
insb
mov
xor
sub
xor
and
adc
insl
push
rcrb
inc
mov
pop
inc
add
std
daa
lods
fnstsw
bound
stc
vrsqrtss
loop
xchg
jg
xchg
iret
mov
push
xor
jle
jne
mov
aaa
shll
dec
sahf
push
rclb
stos
pop
push
shrl
push
mov
leave
mov
mov
adc
jl
fucomip
pop
push
sbb
loope
int
sbb
negl
mov
clc
dec
inc
fdivrs
imul
pushf
cmp
pop
imul
jb
cmpsl
clc
ja
mov
out
notb
into
cmp
push
pop
es
repz
inc
dec
mov
sbb
xor
cltd
adc
test
test
xor
mov
popa
adc
pop
cmp
sbb
mov
cmp
loopne
cmp
mov
mov
or
mov
shlb
mov
popa
ss
movsb
rorb
std
lcall
dec
cmp
movsb
lcall
sub
jns
inc
mov
push
jnp
int3
pushw
sbb
jne
daa
fwait
add
imulb
in
stos
hlt
adc
ret
inc
out
mov
fnstenv
fistpl
adc
cwtl
fcomps
dec
sub
ficoml
ja
test
sbb
bound
dec
repnz
jno
mov
aaa
lods
std
jns
pop
pop
int3
adc
xchg
mov
into
pop
sub
gs
call
icebp
sti
pop
pushf
bound
sbb
pusha
sahf
bnd
xchg
testb
nop
jmp
inc
ja
lock
sub
enter
frstor
rolb
cmp
test
bound
mov
jp
aam
int
jne
mov
mov
adc
jle
dec
xor
sub
xor
dec
fld1
fidivrs
and
das
adc
shlb
pop
popa
sbb
mov
push
int
xlat
popf
pop
xchg
rorb
aas
mov
sub
sub
push
stos
ja
lret
mov
dec
pusha
lret
aas
sub
movsb
out
xchg
push
lret
xchg
and
adc
push
inc
adc
xchg
xchg
xchg
nop
icebp
inc
pop
xchg
sub
xor
dec
inc
mov
dec
pop
popf
js
push
xor
movsb
enter
mov
out
push
adc
mov
or
orl
imul
xchg
or
push
sarb
sub
cwtl
insl
sub
cmpsl
insb
ret
sub
add
jns
rorb
push
inc
xchg
pop
and
jmp
or
xchg
pop
jno
rolb
cmpsl
mov
mov
int
pop
or
aam
loopne
cmpsb
hlt
dec
mov
dec
in
loope,pt
pop
hlt
lahf
sbb
cmp
cmp
in
lss
fldl
push
mov
push
insl
cld
jae
fadd
mov
dec
enter
scas
ret
aam
sbb
and
dec
mov
mov
repnz
int3
outsl
adc
jns
sbbb
rclb
mov
jbe
pop
inc
scas
mov
mulb
inc
enter
daa
lret
insl
xchg
xor
lret
fistpll
popa
mov
clc
fbstp
sbb
cli
rcrl
cmp
outsb
push
cmpsl
repnz
xor
fs
call
stc
lds
push
adc
dec
stc
xchg
ds
xor
loopne
scas
in
or
push
xor
ror
inc
clc
or
fcmove
mov
lock
pop
cmp
sar
or
pop
mov
dec
pop
stos
dec
add
out
jne
popa
adc
jo
int
or
test
fbld
jae
push
mov
add
xchg
or
xor
inc
outsb
addr16
xor
push
loop
pop
aad
adc
pop
aaa
mov
fcmove
movsl
mov
enter
fcoml
adc
mov
mov
sbb
lods
or
xor
rorl
jne
fsubrl
mov
inc
sbb
push
add
xor
fsubrs
fsubl
leave
leave
hlt
jo
and
mov
cld
xchg
adc
xchg
data16
mov
push
ret
rol
jno
ret
mull
test
mov
out
std
push
inc
test
in
out
mov
dec
dec
jb
icebp
push
out
push
movsl
or
jge
fdivr
and
pop
not
filds
repz
je
ja
outsb
mov
nop
xor
mov
xchg
add
jo
sbb
dec
enter
mov
prefetcht0
loop
or
or
inc
lahf
pop
or
jl
incl
adc
or
xchg
cwtl
test
add
add
pop
inc
mov
push
pcmpeqw
je
out
fadd
mov
mov
in
bound
xchg
dec
sbb
lds
pop
fldenv
mov
pop
xchg
cltd
loopne
leave
mov
stc
push
mov
cltd
adc
xor
insl
sub
push
lahf
pop
cltd
call
stos
icebp
push
loop
mov
aaa
fadds
scas
out
iret
inc
pusha
lods
xchg
bound
das
sbb
push
stos
push
outsl
lcall
xlat
jno
pop
fldt
faddp
paddb
push
cs
jbe
iret
sub
pop
mov
push
adc
jle
xchg
ja
loop
sbb
add
or
jno
xor
jp
pushf
push
inc
mov
mov
push
mov
adcb
xchg
jle
jb
push
xor
stc
add
popf
data16
add
mov
jns
mov
sbb
insb
stos
mov
pop
jecxz
xor
xor
in
sbb
shl
addr16
es
sub
lret
add
pusha
mov
cs
fisttpl
and
popf
push
push
xor
mov
cltd
sub
jns
mov
push
sbb
in
mov
jl
mov
dec
mov
aad
xchg
fmuls
outsb
pop
cwtl
in
and
js
es
sti
lods
in
icebp
jno
xchg
notl
cmp
sub
popf
cmp
push
out
sti
mov
or
jecxz
daa
inc
fwait
into
testb
adc
rorb
cld
inc
cmpsb
pop
jns
push
adc
xor
dec
cmovs
rorb
cwtl
jne
inc
mov
cmp
loope
fstpl
sub
sar
mov
bound
jecxz
pop
and
fisttpll
popf
leave
addr16
shlb
arpl
sub
lahf
sbb
bound
cmc
add
adc
sarl
out
lret
jnp
fwait
jecxz
out
dec
mov
sub
aaa
and
cmp
or
add
mov
js
test
jge
popf
push
jns
pop
cltd
jae
sti
sbb
push
cltd
out
imul
push
or
nop
or
ret
jg
ljmp
repz
and
into
cmpsb
push
arpl
arpl
and
add
pop
fnsave
test
sbb
xchg
lods
data16
inc
dec
pop
cmc
sbb
cmp
lahf
setns
pop
xchg
iret
loop
dec
pop
stc
dec
hlt
stc
lret
jne
lock
cmp
ljmp
inc
mov
fildl
fimuls
outsl
lret
lods
ret
or
add
sbb
push
test
lods
sbb
rol
xchg
test
fnstenv
pop
dec
pop
addb
inc
cli
mov
in
rorl
inc
pop
xchg
inc
lret
in
ja
aad
or
or
push
call
jge
lea
outsl
aad
lahf
into
and
add
xorl
bound
push
mov
or
push
xor
pop
add
aam
mov
lret
cmp
cmp
dec
push
jae
aam
in
cld
and
push
mov
jge
lcall
xor
scas
xchg
int
cmp
jns
int
gs
xor
iret
mov
pop
sub
mov
sub
xor
dec
shrb
aaa
addl
sub
lods
mov
fidivs
loope,pn
sub
sbb
js
xchg
jnp
pop
sub
ljmp
add
adc
pop
imul
jecxz
fldt
js
iret
in
je
jo
cmp
cltd
inc
fdivp
mov
and
enter
jl
lea
and
divl
js
scas
mov
icebp
xor
insb
scas
out
notb
fwait
or
inc
xchg
out
scas
in
in
mov
inc
jge
mov
dec
outsl
push
cli
xor
hlt
mov
add
cld
stos
xor
loop
and
mov
movq
int
mov
mov
mov
push
orb
push
and
mov
out
orl
imul
mov
out
pop
adc
fdiv
or
mov
jmp
gs
movsb
mov
push
sbb
fsubp
adc
test
jmp
addr16
into
in
push
cwtl
dec
mov
xchg
push
and
clc
inc
movsl
movsb
adc
lret
imul
and
ret
call
into
adc
arpl
push
lahf
mov
dec
xchg
pop
jecxz
repz
ret
psrlq
and
xor
add
adc
arpl
push
lahf
mov
dec
xchg
pop
jecxz
repz
ret
psrlq
and
xor
add
adc
arpl
push
lahf
mov
dec
xchg
pop
jecxz
idivl
ret
psrad
pop
out
pop
pushl
scas
jae
ret
psrlq
nop
dec
aad
dec
xchg
sub
sub
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
idivb
popl
inc
leave
and
mov
ja
cs
or
ss
loopne
pop
push
dec
idivb
mov
cmpsb
call
xor
push
pop
dec
or
push
dec
out
cmpsb
pushl
scas
out
testl
data16
xor
dec
sub
mov
cli
mov
in
cmpsb
cs
cmp
and
in
fistps
push
or
xchg
in
mov
sbb
pushf
cmpsb
sbb
and
xor
rorb
dec
mov
xor
scas
stc
mov
and
les
je
les
aas
cltd
das
outsb
jne
lock
push
pop
push
or
loope
push
pop
pusha
loop
dec
jmp
dec
std
fbld
arpl
mov
ljmp
imul
es
dec
aas
mov
cmpsl
jbe
mov
mov
jge
jg
or
lret
push
fistl
jne
dec
fimuls
inc
sub
push
lock
jne
push
pop
push
dec
aas
test
mov
mov
fistps
aaa
dec
push
pop
push
cs
inc
push
dec
lcall
ljmp
xchg
and
sbb
xor
cltd
xchg
mov
jmp
std
xor
jp
or
pusha
cmp
xchg
mov
scas
lret
cmpsb
out
xchg
filds
das
push
pop
inc
jg
outsl
push
pop
push
dec
idivb
mov
cmpsb
out
xchg
filds
das
push
pop
inc
jg
outsl
push
pop
push
dec
idivb
mov
fidivl
mov
pop
or
sbb
idivb
iret
leave
xor
daa
call
and
sti
call
insb
jno
lret
cmp
mov
jp
push
scas
sub
or
or
pop
test
push
dec
loop
sbb
jge
inc
cmp
mov
adc
add
ret
lods
xchg
movl
int3
sbb
rclb
cmpsl
push
lods
add
hlt
mul
data16
data16
xor
push
out
jl
aam
mov
outsb
push
stos
lods
dec
out
push
nop
dec
lret
bound
inc
mov
bnd
push
and
jmp
fnstcw
bound
insl
fnstcw
xchg
cmp
xor
mov
imul
adc
lahf
ljmp
sub
pop
loop
out
inc
lcall
imul
shrl
xchg
movsl
in
mov
in
adc
sahf
bound
fdivs
out
clc
and
cmp
jp
jnp
xchg
test
call
iret
add
xchg
pop
inc
dec
outsb
orb
cmp
mov
mov
cltd
mov
inc
popf
bnd
fwait
mov
in
and
aad
inc
loopne
xchg
xor
fildl
push
les
stos
jp
xchg
ja
xchg
movsl
mov
jp
cwtl
jb
out
push
into
lea
dec
enter
xchg
dec
cld
and
mov
insl
sub
jbe
sbb
or
or
subb
dec
mov
jp
js
shl
outsl
hlt
mov
int
divb
pushf
call
stc
cld
mov
data16
arpl
jbe
iret
or
pop
sbb
jb
inc
lods
lods
and
inc
scas
xchg
scas
rcl
mov
in
mov
push
jo
std
aaa
ss
imul
add
xchg
adc
mov
pop
jb
scas
push
std
lahf
add
add
pushf
out
push
fucomip
imul
dec
in
jge
int3
push
push
xor
mov
pop
xlat
jno
dec
xor
dec
insb
jge
js
jle
ret
enter
sub
std
pusha
jno
mov
lods
iret
pop
aaa
scas
push
sub
mov
and
xchg
lds
sub
jp
mov
les
pop
fcoms
mov
push
cmp
stc
adc
fbld
hlt
shll
lds
xor
test
adc
inc
or
fucomi
or
aad
imul
jae
push
mov
sbbb
pop
or
cmp
sbb
lock
and
imul
adc
sbb
ja
or
lods
xchg
xchg
inc
sbb
lock
fsubrp
mov
pusha
push
xchg
imul
dec
push
jl
push
std
cltd
test
jge
and
add
fisttpll
das
xchg
clc
push
aad
inc
add
vunpckhps
inc
adc
in
pop
mov
bound
movsl
jae
movsb
aas
in
adc
mov
mov
stos
ja
insb
mov
push
mov
xchg
aaa
lea
pop
push
test
jno
push
lret
jb
gs
ljmp
dec
ret
xor
sbb
add
sahf
jle
cld
adc
sub
push
jg
or
dec
mov
movsl
and
cwtl
mov
xchg
and
push
sub
enter
in
loopne
or
lods
dec
lcall
fisubrs
jnp
repnz
mov
inc
mov
xor
dec
or
mov
lock
bound
mov
cmc
shll
int3
in
fildl
xchg
mov
arpl
ss
xor
insb
cmpsb
fmuls
xor
xchg
xchg
mov
dec
stos
mov
std
mov
jb
shrl
adc
arpl
dec
pop
lock
outsb
xchg
lods
adc
divl
iret
stos
lret
jecxz
mov
std
mov
cmp
es
repnz
hlt
fldl
out
ret
lds
dec
add
sahf
inc
arpl
jle
jb
sbb
ficompl
icebp
sbb
icebp
push
push
sahf
push
ja
hlt
jb
sahf
jb
jle
xchg
and
sub
sarb
jp
call
mov
push
popf
lods
mov
jge
add
jno
out
insl
and
inc
dec
xchg
lcall
lret
adc
adcb
repnz
add
iret
movsl
jge
ljmp
rorb
ret
pop
adc
xor
imul
or
xlat
xchg
mov
and
testl
cmc
dec
pushf
sbb
out
sti
sub
jle
in
fs
or
data16
in
bound
pop
dec
je
mul
mov
push
pop
movsl
inc
in
cmp
mov
mov
sbbb
out
xor
add
push
rcll
mov
cmp
icebp
pop
fwait
mov
fiadds
adc
daa
hlt
out
inc
cld
cmp
dec
or
lcall
xchg
adc
stos
mov
stos
xchg
mov
in
xchg
out
pusha
mov
sbb
push
jmp
add
and
popf
push
mov
jo
mov
sbb
mov
mov
mov
repz
mov
das
dec
cs
adcl
jge
pop
sti
clc
ret
mov
or
ss
and
cmp
mov
enter
dec
push
dec
movsl
jl
fdivrl
mov
sbb
push
lods
adc
inc
fdivrs
push
dec
loopne
mov
test
data16
icebp
dec
jg
xor
out
inc
xchg
jecxz
cs
and
fcoml
mov
pop
sub
xchg
inc
or
pop
mov
imul
cmpl
fldt
push
out
inc
and
loopne
push
js
jmp
xchg
push
testl
xor
and
xor
push
mov
jmp
push
lret
ret
push
stos
in
push
mov
rcll
jns
repz
scas
pop
mov
stos
shlb
push
jae
jg
dec
xchg
jbe
out
and
jbe
call
in
sti
mov
mov
les
gs
inc
or
jle
icebp
out
out
fisubrs
or
mov
adc
adc
sub
push
cli
loop
jb
out
xor
lahf
enter
lahf
dec
daa
decb
push
mov
aam
ja
sub
ret
pop
imul
fldt
stos
rorl
xor
cli
and
std
lcall
movsb
dec
imull
inc
cmp
test
das
xchg
andl
mov
test
nop
in
ja
dec
je
hlt
xchg
pusha
aas
mov
mov
sub
dec
adc
es
iret
xchg
repnz
dec
adc
scas
shrl
pop
shrl
and
outsl
cmp
jno
cmp
pop
addl
pop
sahf
in
int3
mov
stos
scas
stos
sbb
sbb
insb
fnsave
xor
lcall
cli
jmp
and
mov
inc
mov
bound
iret
ljmp
ds
cmp
scas
cmp
sub
xchg
popf
aas
lahf
jecxz
stos
test
push
jl
push
mov
cmp
jno
add
loop
adcb
es
add
xor
mov
ret
or
lods
or
push
sti
lret
sbb
mov
movsl
jecxz
lahf
push
sbb
or
add
mov
pop
call
add
popf
out
punpckhbw
xlat
pushf
daa
push
pop
in
rorb
cmpb
scas
lahf
pop
divpd
js
mov
adc
or
jno
cmp
sub
les
dec
mul
rol
popf
out
ret
lds
stc
mov
push
lahf
imul
imul
je
mov
mov
dec
sti
sbb
push
cmp
stos
xchg
xchg
adc
push
cmp
cmp
movsl
mov
pop
xor
lcall
das
jbe
xor
sbb
je
jbe
in
inc
xchg
cltd
sarb
test
mov
mov
jno
or
jecxz
loop
out
out
dec
leave
scas
jle
mov
pop
dec
jnp
push
add
test
mov
mov
fwait
xchg
in
fistl
sbb
out
les
fnsave
sbb
hlt
cmp
pop
jge
push
push
jne
xor
pop
inc
sbb
arpl
adc
jo
cmp
arpl
mov
cmpsb
cltd
js
mov
arpl
jecxz
aam
out
and
aad
push
in
push
imulb
jmp
inc
jbe
mov
int3
pop
add
lods
int3
sub
int3
jne
data16
fidivl
movsb
sbb
xor
xchg
jge
arpl
outsb
mov
mov
xchg
test
inc
mov
add
js
imull
or
adc
dec
mov
mov
scas
inc
xor
pop
scas
cltd
mov
cmp
loop
lcall
push
adc
insb
add
mov
and
test
insl
add
push
cli
add
mov
mov
xchg
adc
cli
adc
out
in
mov
repnz
fsubrl
sbb
inc
data16
pop
pushl
sub
and
push
repz
xor
mov
mov
ds
mov
jmp
cld
mov
arpl
add
push
js
xchg
xchg
int3
aad
mov
aas
cltd
mov
cmp
out
sbb
adc
dec
mov
jne
repnz
xlat
mov
ja
stc
inc
rcrl
mov
int
cld
push
test
and
addr16
and
cmpsl
inc
inc
icebp
pop
push
push
stos
jmp
adc
mov
call
out
xor
imul
adc
jns
cmc
push
out
sbb
jmp
scas
and
jns
neg
out
loope
sbb
or
xor
loopne
clc
xchg
jecxz
push
lcall
xchg
and
je
adc
mov
sub
fdivl
xor
incb
fstp
xchg
adc
cltd
push
mov
jns
fmul
pop
inc
in
push
jmp
repz
xlat
cmp
pop
pop
push
test
mov
jns
xchg
xchg
jge
jmp
incl
mov
xor
in
pop
mov
cmc
arpl
dec
lods
call
ds
mov
mov
cmp
jb
pop
push
dec
inc
cmp
xchg
rorl
aam
inc
adc
movsl
mov
mov
scas
pop
cmp
xor
sbb
cmp
xchg
xor
movsl
loope
inc
and
int
lahf
stos
mov
mov
add
or
fidivs
xor
cmp
jmp
xor
mov
and
test
mov
imul
cmpsl
pop
out
jl
sub
mov
inc
sbb
call
clc
fldcw
jge
pop
mov
xor
mov
cmp
inc
addr16
pop
pushf
mov
orb
add
cld
fsubl
ss
mov
cmpsb
dec
mov
ja
inc
inc
int3
loop
in
add
sti
shl
pop
push
das
xor
push
dec
int3
add
or
push
sbb
sar
insl
iret
mov
movb
lahf
xchg
sar
data16
mov
js
scas
clc
mov
ret
bound
repnz
pusha
fldenv
faddp
cmp
and
mov
adc
xor
divb
mov
pop
cmc
mov
add
and
jg
jns
xchg
and
insl
scas
movl
adc
mov
xor
sarl
xchg
test
ret
arpl
dec
in
into
bound
aad
movsl
inc
std
movl
in
xchg
pop
fcos
xchg
cmp
data16
int3
xor
pop
sbb
in
xor
mov
and
arpl
mov
adc
dec
mov
sbb
jns
sti
mov
int
jb
mov
lcall
add
repnz
cli
push
dec
shlb
jae
push
mov
mov
mov
xchg
sahf
out
mov
lret
push
xchg
scas
dec
jmp
outsl
stos
sbb
rcll
nop
mov
cmpsl
cmp
fldcw
lret
cmc
or
push
xor
xor
mov
ja
out
xchg
cmp
cmpsl
jg
mov
lcall
out
jecxz
jo
mov
imul
stos
jg
iret
shll
xchg
mov
repz
cmpsl
mov
and
xor
mov
cmpsl
xor
test
or
nop
adc
mov
mov
ds
sahf
mov
sub
push
lds
jg
push
jmp
pop
gs
out
inc
xor
mov
xchg
imul
xchg
mov
and
cli
sub
dec
cmp
and
pop
in
inc
cwtl
pop
lea
shll
mov
adc
outsb
bsf
dec
enter
in
inc
notb
xchg
push
xor
std
or
and
xor
mov
popf
popa
inc
jmp
adc
idiv
mov
loopne
iret
or
lcall
outsl
fildll
xchg
or
mov
push
mov
shlb
outsl
in
xor
fisubrl
mov
mov
jg
fists
adc
xchg
fsubs
dec
shrl
cmp
xchg
mov
and
pop
lods
rolb
push
out
cs
push
inc
jae
ljmp
push
lods
scas
and
jo
loop
outsl
aas
jp
iret
sub
cmp
dec
jecxz
clc
mov
in
lods
fisubs
aaa
out
cmp
mov
push
fcoms
out
mov
loop
ss
mov
cmc
outsb
call
icebp
jbe
fmuls
sub
cli
pop
test
dec
push
nop
inc
pop
add
jecxz
jl
out
jne
test
jae
xchg
adc
hlt
test
dec
adc
sahf
das
jno
pop
and
cmp
setg
pop
xor
mov
push
pop
cmpsb
fimull
xchg
shll
ret
aad
add
flds
call
mov
xchg
push
pop
fistpl
sbb
cmp
pop
sub
data16
daa
out
repz
mov
arpl
fdivrs
pop
lcall
andb
scas
sbb
cmp
inc
sbb
push
dec
add
movsl
xor
inc
jo
xchg
mov
inc
outsl
push
pop
xor
push
xor
cmpsl
jnp
inc
cs
ss
sbb
lea
test
xchg
jmp
mov
mov
sti
icebp
out
mov
xor
mov
loope
imul
shlb
pop
mov
int3
in
sbb
xchg
cmpl
xor
in
mov
cltd
pop
pop
dec
imul
jg
fstl
or
in
pop
and
popf
sarb
int3
sbb
add
std
adc
lahf
mov
push
jle
lahf
sahf
fsubrs
adc
jmp
mov
repz
sbb
sbb
mov
out
inc
push
mov
pop
jne
shr
outsl
xchg
push
xchg
add
mov
repz
jp
cmpl
sub
inc
sbb
fsubrl
clc
les
pop
aad
inc
inc
mov
mov
lea
out
out
stc
leave
xchg
cmp
cwtl
push
inc
es
sbb
adc
loopne
pop
or
sbb
decl
or
test
mov
loop
sub
lret
leave
das
fwait
pop
fstps
inc
xor
mov
lea
pop
data16
gs
sti
rorb
popf
mov
jnp,pt
sbb
rcrl
ds
xor
in
std
dec
mov
dec
adc
inc
pop
and
lret
xchg
xchg
cltd
sub
push
add
sub
pop
cmp
shll
divl
mov
add
xchg
test
cld
push
lret
lods
jge
sub
or
int3
loop
mov
mov
nop
dec
mov
sbb
jne
adc
imul
shrb
fisttps
cmp
sub
sub
ffree
mov
faddl
sarb
sbb
inc
popa
and
mov
or
ds
cltd
shl
call
inc
dec
xchg
pushf
std
fwait
mov
mov
out
jno
fs
cmp
pop
adc
insl
movsl
cs
jns
out
add
mov
pop
and
xchg
xor
popf
sub
pop
dec
xor
or
out
repz
mov
pop
div
adc
out
add
in
mov
out
lcall
stc
idivb
pop
xlat
sbbl
and
cmp
fdivr
fs
or
enter
or
cld
adc
mov
push
sbb
aaa
mov
test
inc
lods
rorl
mov
adc
idivl
mov
push
mov
mov
mov
int
out
or
jb
xor
mov
jb
xor
ret
xor
cli
hlt
inc
clc
mov
sub
shlb
sahf
fidivrs
cs
xchg
movsl
mov
cmp
sbb
cmpsl
inc
pop
lods
cmp
pop
or
addl
mov
push
lock
loopne
push
rol
cld
scas
dec
push
mov
outsl
mov
sbb
jle
jae
jo
pop
pop
imul
fstpl
push
mov
xor
insl
aad
cmp
out
es
in
sub
mov
in
jae
std
mov
inc
xor
pop
rcr
repnz
push
cmp
es
jecxz,pt
mov
cmp
rorb
pop
ja
ss
and
jl,pn
leave
les
mov
jmp
leave
pushf
fistpl
cwtl
adc
pushf
test
sub
push
adc
inc
mov
pop
jmp
rolb
fnstenv
lock
jle
sbb
add
inc
int3
stos
in
xchg
jae
testl
cmp
xchg
adc
pop
mov
mov
jecxz
mov
inc
or
push
sub
jg
fiadds
jmp
stc
notb
movsb
gs
int
pop
push
mov
cmp
jge
push
xchg
sbb
cwtl
dec
dec
sub
push
dec
push
icebp
int
test
imul
pop
pusha
je
inc
add
and
scas
lds
std
aam
push
pop
jo
lea
test
or
sbb
push
dec
into
sbb
xchg
sti
aaa
enter
add
lcall
xchg
jmp
rcl
clc
jbe
mov
stc
inc
in
push
lret
or
imul
lea
mov
lret
mov
push
idiv
dec
roll
push
cmp
fwait
jne
in
les
rol
and
jl
push
pop
cwtl
dec
inc
mov
bound
bound
jae
mov
or
inc
sti
and
loope
divl
or
imul
repnz
and
lods
mov
sbb
pusha
mov
fs
daa
xchg
add
ss
sub
mov
adc
dec
xchg
inc
adc
mov
dec
push
sub
inc
mov
repz
popf
sbb
mov
cmp
mov
pushf
mov
outsl
mov
add
cmp
iret
mov
pop
xchg
insb
and
mov
sub
xor
cmpsb
and
dec
cmp
addb
test
in
add
or
mov
shll
dec
mov
and
out
es
adc
in
xorb
cli
add
xchg
pop
pop
loopne
pushf
outsb
iret
out
pop
xchg
push
inc
cmp
popa
es
cld
sub
sahf
orb
jo
sbbl
gs
lods
fs
or
dec
js
dec
xor
imul
or
and
jle
jle
xor
testl
mov
ret
lahf
add
scas
dec
lret
test
out
sbb
sbb
sbb
add
xor
ror
or
or
mov
xchg
out
sbb
add
std
xchg
in
pop
gs
mov
xor
and
xchg
jne
aam
int
dec
js
lods
mov
es
xor
cltd
outsb
lret
and
mov
fstps
and
call
cld
inc
fdivs
test
mov
sahf
mov
insb
mov
lret
add
imul
lods
or
mov
stos
adc
cmpsb
icebp
jecxz
int3
imul
push
int
ret
xchg
fdiv
mov
push
incl
lcall
mov
sbb
aam
sti
arpl
jmp
insb
lods
outsb
std
push
add
into
sub
pop
ror
rcll
mov
push
fisubs
in
lret
movl
andb
xchg
arpl
jp
push
push
xchg
testb
fwait
jecxz
xchg
repnz
sub
jp
dec
cmp
cmp
push
mov
mov
push
ss
mov
mov
inc
je
adc
pop
popf
ds
pop
aas
inc
mov
mov
lcall
lahf
sub
lret
rolb
popa
loope
fcompl
cmpsb
out
xchg
filds
das
push
pop
inc
jg
outsl
push
pop
push
dec
idivb
mov
cmpsb
out
xchg
filds
das
push
pop
inc
jg
outsl
push
pop
push
dec
idivb
mov
cmpsb
out
xchg
filds
das
push
pop
inc
or
jg
outsl
push
pop
add
idivb
mov
cmpsb
out
push
filds
jns
pop
inc
js
imull
xor
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
