ljmp
and
add
sub
xor
loopne
cmp
nopl
insb
mov
ljmp
imul
pop
cs
cmp
mov
add
inc
scas
ds
sub
jecxz
pushl
push
or
lock
dec
icebp
pop
xor
sbb
fldenv
pop
jp
fs
pop
shr
incl
out
push
push
push
sub
inc
add
pop
push
push
inc
rol
mov
sub
jg
fildl
lcall
popa
or
mov
dec
rorb
sbb
pushl
cwtl
jae
test
sbb
mov
add
ret
ret
aaa
es
jmp
lret
mov
mov
xchg
mov
fimull
dec
arpl
cmc
or
inc
mov
mov
decl
into
jno
mov
pop
push
push
push
push
push
call
jmp
iret
fiadds
add
xchg
sub
sub
sub
std
je
out
adc
push
adc
jbe
test
inc
jnp
int
outsl
loope
mov
xchg
push
lret
sub
sbb
add
ret
and
incl
or
test
hlt
lahf
outsb
xchg
js
xchg
in
inc
idivb
xor
loope
sti
lcall
or
xor
cmp
je
mov
ret
push
push
push
call
test
sub
pushf
sub
pop
jle
test
mov
jl
sbb
mov
mov
sub
pop
pop
pop
jmp
xor
xor
loope
jmp
xor
adc
leave
cmc
sbb
lea
gs
add
cmp
add
pusha
sbb
xor
inc
inc
jmp
shrb
dec
in
dec
jmp
jg
punpcklwd
pop
and
add
pop
add
repz
or
incl
cmp
std
inc
sbb
test
mov
sti
rcr
adc
xor
or
jo
push
lea
shr
pop
lods
ljmp
or
lret
push
add
mov
add
pop
push
push
push
push
push
xchg
loope
call
add
loope
jge
adc
push
stc
frstpm(287
add
push
call
fs
test
push
adc
fs
lock
or
and
popa
adc
cli
mov
and
test
add
not
xor
insl
call
push
sub
not
pop
cmp
outsb
cmpb
dec
adc
les
or
test
in
pop
and
ret
push
dec
sub
pop
pop
jmp
mov
cld
push
cmp
cmp
ret
loop
add
not
pop
pop
cmp
add
test
sub
stos
sub
sbb
jmp
xchg
jmp
sub
jmp
xchg
cld
or
inc
cwtl
jmp
mov
jg
xchg
outsb
popa
into
push
add
sub
sub
jle
call
fcmovb
jecxz
add
inc
pop
pop
lods
rcrl
cmp
stos
addl
daa
incl
nop
push
lea
pop
push
ror
dec
mov
jo
or
inc
sub
xchg
pop
push
sbb
xchg
push
push
xchg
movsb
mov
sub
fwait
nop
pop
push
dec
add
pop
nop
pop
nop
pop
push
add
inc
pop
incl
rolb
dec
inc
push
add
add
pop
ret
jg
or
cmp
addr16
push
lea
mov
add
sbb
pop
push
jmp
cmpsl
jmp
adc
push
pop
pop
jmp
out
sbb
cmp
ss
push
dec
mov
push
push
call
ret
dec
das
cld
jb
and
push
add
cmp
addb
mov
mov
imul
pop
bound
add
mov
push
push
add
mov
xor
add
jg
addr16
out
push
call
pop
sbb
jbe
loope
movzbl
push
pop
ljmp
fsubrl
sub
push
push
xor
mov
aaa
lods
insl
data16
mov
addb
or
out
or
les
xchg
cmp
cwtl
in
and
mov
test
lret
sbb
jne
sbb
clc
sub
push
adcl
leave
xor
jmp
or
out
dec
mov
shl
jb
movsb
and
fsubrl
push
sbb
mov
push
mov
add
pushl
push
push
push
push
call
jbe
add
adc
mov
sub
push
stos
push
jp
sbb
push
pop
fsubrs
std
cmpsb
xor
or
mov
imul
ret
mov
stos
icebp
lock
out
outsl
hlt
scas
out
push
push
in
movsl
mov
loope
adc
call
and
data16
mov
push
sbb
mov
and
rcr
mov
cmp
pop
pusha
pop
jmp
ret
aam
mov
add
icebp
xor
inc
mov
jmp
int
movups
push
push
shl
pop
call
mov
or
push
push
sbbb
add
push
push
call
sbb
push
or
sub
adc
not
pop
sub
sub
add
mov
aam
test
xchg
jmp
dec
dec
pusha
inc
mov
sub
gs
or
xchg
aam
aad
push
push
or
orb
push
cld
mov
int3
push
sub
ror
add
mov
add
pop
mov
stos
inc
ret
icebp
pop
mov
lea
lea
cld
psllw
rol
pop
ljmp
mov
dec
lea
jp
pop
jmp
jmp
sbb
sbb
dec
xchg
push
xor
pop
mov
rcl
or
xchg
push
insb
lock
push
xchg
mov
mov
decb
push
push
push
call
cmp
adc
push
ljmp
pop
push
push
cmpsl
mov
cmpsb
push
mov
xor
jg
adc
push
xor
add
jmp
ret
adc
mov
and
loopne
pushl
jp
jmp
ror
xor
pop
pop
mov
jmp
push
sbb
popa
lret
inc
pop
js
xor
sub
jmp
xor
add
push
push
push
push
push
call
and
movl
iret
pop
push
mov
lret
ret
add
js
sub
xor
pop
xchg
adc
xor
sbb
pop
mov
mov
ror
pop
add
push
pushl
push
push
push
in
push
push
lods
or
jl
push
pop
js
pop
add
dec
decl
fcos
jae
popl
mov
push
dec
inc
push
xchg
pop
call
testb
add
adc
sarl
xlat
mov
shll
rolb
xchg
cld
pop
inc
nop
nop
xor
push
xor
adc
loope
push
mov
ljmp
inc
nop
push
lea
pop
nop
cmpb
and
lcall
std
and
push
push
call
and
shl
inc
or
test
mov
mov
push
dec
pop
ljmp
xchg
or
lret
xor
adc
mov
nop
cmp
jb
push
and
cmp
pop
lret
push
xor
add
not
mov
mov
push
xchg
icebp
fistpll
add
and
ja
lcall
mov
push
xor
dec
sub
pop
or
fistpl
inc
adc
stos
pop
dec
adc
mov
test
rcll
jmp
inc
sub
sbb
icebp
sbb
sbb
and
inc
jmp
xchg
pop
pop
leave
ret
js
pop
lcall
and
add
loopne
push
jmp
sub
pop
pusha
shr
sbb
xlat
mov
shll
cmc
xor
filds
push
lock
testl
xor
mov
inc
outsb
jmp
dec
and
in
or
out
and
jmp
es
mov
pop
and
jmp
pop
push
push
push
push
push
push
add
xor
push
push
call
adc
xchg
sub
test
mov
jae
push
fisubs
xchg
lods
sbb
add
sub
ljmp
add
andl
leave
outsb
lcall
loopne
cmp
sbb
xor
add
jmp
std
cmpsb
pusha
xchg
fidivrs
add
pop
imul
or
or
adc
sbb
adc
push
js
sbb
and
fwait
sub
repz
jmp
das
inc
xorb
jmp
mov
push
cld
and
test
lea
mov
add
ljmp
pop
push
push
lea
sub
ror
mov
sar
push
mov
aas
pusha
lret
xchg
int
pop
add
inc
out
mov
sub
push
aam
int
add
xor
sub
pop
add
fistpll
gs
in
mov
push
push
movsb
sub
fimull
repz
pop
decl
enter
jmp
sbbl
jmp
gs
jne
cli
push
jmp
in
cld
mov
mov
push
sub
rol
mov
jbe
add
gs
inc
pop
sub
push
clc
ss
inc
and
cmp
lock
add
push
pop
push
push
inc
mov
mulb
push
cltd
dec
out
sbb
push
push
push
push
lods
and
jp
stc
leave
jg
cmpsb
jg
push
call
and
add
mov
loopne,pn
mov
js
sahf
pop
dec
mov
push
dec
push
sbb
aaa
out
push
test
test
lods
push
add
push
mov
dec
dec
sbb
aas
mov
push
je
jmp
imulb
or
mov
jmp
pop
sub
out
push
push
push
lods
dec
inc
sbb
cmp
movsl
jmp
adc
cmc
push
sub
not
mov
adc
cmpsl
dec
mov
inc
inc
mov
incl
adc
add
xchg
xchg
and
sbbb
lcall
jg
push
add
pop
cmp
lcall
test
in
decl
mov
xor
popa
or
xchg
ja
mov
in
push
xlat
pop
pop
out
loopne
ja
out
inc
mov
sub
sub
push
push
fstpt
and
cmpsl
cmp
or
std
inc
add
sbb
add
bound
and
cs
dec
addr16
pop
out
or
incl
add
rclb
testb
inc
mov
sub
or
movsl
sub
mov
add
sub
test
mov
in
xchg
cmp
and
jg
push
lea
sub
shr
pop
mov
popf
fnstenv
outsl
iret
iret
mov
adc
fidivrs
mov
mov
mov
lock
pusha
sub
cmp
sbb
cmc
imul
or
cld
sub
mov
add
jmp
sub
aad
movsl
inc
ud0
popa
push
dec
sbb
std
mov
testb
jg
mov
jmp
and
inc
xchg
nop
cmp
inc
jmp
bound
xchg
mov
xchg
inc
les
pop
jp
fdivrs
xlat
sbbb
mov
inc
arpl
push
dec
stos
jmp
dec
mov
cmp
mov
push
mov
dec
js
les
xor
loopne
incl
inc
inc
push
ror
shr
jge
not
mov
dec
jge
sbb
daa
push
push
inc
pusha
add
add
orl
or
inc
cs
dec
add
add
aad
sub
repz
inc
adc
hlt
scas
incb
in
xchg
jns
cmp
out
test
test
push
and
cmpsb
and
addl
jmp
ss
aad
push
lea
test
clc
cmp
pop
gs
cmp
jle
sub
mov
add
scas
pop
mov
sbbl
add
inc
shl
add
int
push
inc
rcll
xor
pop
adc
and
ljmp
pop
mov
pusha
xchg
inc
push
sub
xor
pop
or
push
mov
mov
push
push
add
mov
add
adc
mov
xor
imul
cli
rep
pop
imul
pusha
and
or
sub
jmp
cs
dec
or
popa
inc
mov
movsb
inc
jmp
inc
push
mov
inc
mov
xchg
inc
jmp
dec
loope
adcb
ljmp
add
int
add
fistpll
fisttps
repz
and
push
lea
rorl
mov
ret
inc
inc
jl
or
or
mov
sarl
and
jae
xlat
add
push
pop
pop
aad
sub
jmp
mov
jg
push
push
push
push
bound
pop
sub
add
stos
ljmp
push
mov
dec
inc
shl
ror
mov
pop
dec
push
in
rorl
push
out
call
sub
push
bound
testb
pop
and
and
loope
scas
sub
lcall
and
push
and
fs
je
je
adc
mul
mov
dec
cmp
and
sti
push
sub
arpl
mov
dec
lret
shlb
add
xlat
divl
inc
loope
popf
pop
sbb
or
push
cmp
mov
enter
jno
rorb
movsl
push
nop
dec
loopne
push
cmpsb
or
call
lds
rcll
inc
cmp
shll
roll
ret
dec
jmp
adc
mov
dec
add
push
arpl
inc
outsb
dec
dec
movsb
dec
ljmp
rep
pop
mov
add
jg
test
out
push
out
push
push
push
dec
adc
sbb
dec
loopne
in
dec
mov
dec
push
add
lock
inc
adc
aaa
ret
outsl
push
nop
inc
shl
inc
shrb
or
incb
cmp
push
inc
dec
cli
sbb
std
mov
push
inc
movsb
subb
imul
rcrl
cmpsb
dec
pop
push
hlt
scas
and
push
inc
pop
fidivl
dec
shll
add
les
and
pop
mov
push
pop
dec
adc
pusha
lods
push
lock
ret
std
repz
xor
inc
adc
dec
aad
pop
push
xchg
mov
dec
std
decl
leave
jne
push
shl
add
add
pop
pop
push
inc
add
ja
mov
hlt
mov
sub
dec
imul
daa
cmp
push
push
push
cli
adc
add
addb
inc
mov
add
sbb
push
addl
mov
fbstp
xor
cs
pop
rcrl
jb
sbb
sub
repz
inc
cli
or
lahf
pop
fs
test
in
push
jmp
sub
out
ljmp
jmp
mov
xor
gs
ds
dec
and
or
push
push
jbe
ljmp
push
add
pop
pushl
push
add
in
and
add
adc
sub
or
or
mov
lock
in
and
pop
pop
add
fdivrs
repz
sub
roll
inc
xchg
sbbb
inc
stos
repnz
subl
xor
pop
fisttps
mov
and
inc
sbb
movsb
movsl
clc
jmp
add
push
or
outsl
push
inc
jmp
xor
js
adc
add
and
add
bnd
push
push
push
jo
xor
push
push
call
pop
arpl
mov
pop
adc
cs
push
add
sbb
cmpsb
je
adcb
jmp
das
repnz
ficoms
push
and
inc
add
mov
shl
sbb
adc
mov
orb
jle
and
add
add
into
addl
sbb
or
hlt
cli
push
jmp
neg
push
lock
xor
shrl
sbbl
test
aas
pop
clc
mov
adc
pop
sbb
data16
adc
pop
jmp
sub
jmp
pop
loopne
push
insb
test
testb
mov
inc
mov
enter
push
xor
inc
jmp
cltd
sub
sbb
sub
xor
andb
decl
push
ljmp
adc
adc
pop
js
push
push
push
mov
or
mov
xor
pop
adc
lock
aam
sub
pop
jmp
jnp
mov
inc
dec
dec
pop
or
jmp
addr16
shlb
repnz
jmp
pop
pop
sarl
mov
push
movl
enter
out
movsb
js
push
loope
jmp
push
sbb
sub
clc
push
sub
inc
jmp
fwait
sub
leave
hlt
nop
cltd
jmp
fwait
test
or
dec
out
fildll
iret
and
add
jmp
adc
jmp
push
push
pop
inc
and
ss
cmp
add
push
push
add
rcll
lcall
jne
lods
push
and
jmp
roll
jo
push
fwait
push
call
adc
mov
xchg
jmp
and
lock
in
addl
pushl
stos
jg
or
and
push
push
call
or
or
sub
rol
adc
cmp
loop
pop
add
push
push
push
sbb
enter
xorb
pop
cmpsb
pop
push
mov
out
cli
cs
call
int3
pop
push
sub
mov
pusha
sbb
xor
jmp
sub
mov
dec
mov
and
add
push
sahf
js
push
dec
sbb
lcall
lods
sahf
mov
push
push
push
push
iret
dec
inc
and
mov
cli
push
addb
pop
dec
add
mov
sbb
cmp
xlat
mov
cltd
repz
jl
xchg
mov
scas
pop
mov
cvtdq2ps
push
pusha
cmp
clc
sub
inc
pop
mov
or
push
xor
loop
inc
and
add
and
outsl
sbb
push
push
std
mov
sub
lcall
loope
aas
sub
mov
rcr
cwtl
mov
std
add
std
pop
mov
mov
push
ret
pop
push
repnz
call
pop
mov
xchg
jmp
push
push
push
push
call
scas
popa
aas
adc
and
push
sti
fwait
insb
call
or
dec
mov
cmp
push
rclb
mov
test
cs
add
push
rolb
jg
rcll
xchg
rorb
cltd
incb
enter
inc
jp
push
call
push
nop
or
aaa
push
pop
pop
cmp
or
int
ss
js
inc
rcl
mov
dec
adcb
xor
xor
dec
sbb
pop
mov
je
jge
hlt
mov
xor
std
pop
rolb
fcomp
shr
or
mov
aas
lods
in
loope
call
mov
inc
inc
mov
rcrb
or
inc
push
adc
lea
sarl
sub
mov
inc
sub
sub
sbb
das
sub
rorb
stc
sub
inc
pop
ljmp
push
xchg
pop
jo
leave
adc
push
pusha
push
xor
jmp
fmuls
mov
mov
outsl
cli
pop
and
inc
pop
sub
je
push
rol
lds
pop
mov
mov
push
push
imul
mov
cmc
jne
push
insb
cs
add
cmpl
inc
sbb
dec
add
inc
movsl
cmp
pop
sub
shr
mov
push
add
jmp
sarl
jge
or
or
mov
cli
inc
movsl
sbb
add
add
outsl
cmc
mov
mov
test
loope
push
push
add
mov
rcll
nop
inc
sti
andl
lret
add
cmpsb
mov
lods
lea
shl
dec
pop
cmp
and
jmp
jo
repnz
divl
decl
jno
add
jmp
pop
loopne
leave
jp
movb
sbb
sbb
adc
push
inc
sub
sub
pop
sbb
shll
lods
adc
adc
push
in
add
dec
repz
incb
loopne
jmp
lods
push
repz
stos
pop
pop
add
shr
ret
mov
mov
inc
and
mov
sub
das
sub
ljmp
or
push
push
lea
add
cmpsl
nop
push
loop
mov
push
push
fbld
push
push
sahf
fwait
lret
pop
cmp
call
pop
sub
push
push
push
inc
pop
decb
push
mov
mov
jmp
push
xor
fildl
es
mov
mov
lret
fbstp
test
and
out
loop
dec
add
mov
push
testl
cmp
jo
or
mov
sbb
movb
pop
faddl
xlat
sub
pop
test
mov
add
mov
sub
sbb
add
mov
push
xchg
cmp
adc
hlt
mov
and
sub
popa
call
inc
inc
mov
rol
in
dec
push
add
lds
es
inc
xor
ja
aam
call
mov
leave
push
inc
addb
movsb
call
add
push
pop
std
and
cld
movl
xor
push
push
stos
int3
ljmp
idiv
lcall
das
push
push
push
push
call
mov
pop
xchg
push
push
inc
mov
push
push
push
push
call
add
jg
pop
xchg
sub
xchg
jo
lfs
fistl
std
mov
add
push
push
gs
cli
push
lea
das
cmp
push
add
icebp
mov
push
xor
adc
cli
fprem
push
dec
pop
test
inc
std
push
lds
orb
sbb
bound
add
loopne
dec
test
mov
inc
divl
shlb
jno
sbb
insb
ds
inc
mov
mov
loopne
mov
push
pop
xchg
add
push
call
add
jne
jg
inc
mov
aas
sbb
rclb
or
push
jg
mov
mov
mov
popa
add
call
shlb
stos
lahf
dec
popf
sub
add
push
nop
inc
cmc
ljmp
sbb
push
push
push
call
cmpsl
mov
mov
jo
dec
xchg
rol
pop
push
push
push
push
mov
push
testl
jp
hlt
push
add
das
shl
jmp
ret
jmp
std
push
jmp
jg
xor
testb
and
pop
sub
repz
bound
mov
incb
cmc
jno
lcall
add
push
xor
sub
pop
xchg
jmp
loope
dec
aas
push
call
lock
incl
negb
add
pop
into
xchg
movsl
call
lods
pop
push
dec
mov
test
pop
dec
hlt
or
push
lret
mov
in
push
sub
ljmp
push
call
pusha
les
pop
push
testl
out
add
divl
stos
lds
imul
sub
ss
test
sahf
add
cmc
lds
mov
stos
push
test
jl
cmp
adc
incb
mov
push
call
pusha
add
push
fldcw
mov
sysexit
aam
shrb
test
inc
test
mov
inc
hlt
inc
xchg
nop
push
aaa
clc
push
std
dec
inc
pop
nop
shrl
or
inc
ljmp
addb
cmp
cwtl
dec
jmp
mov
dec
or
cmp
aad
dec
rorb
sub
repz
push
pop
adc
js
jmp
les
mov
jbe
jmp
adc
mov
pop
push
loopne
cmovne
xorw
movsl
sbb
add
aaa
adc
inc
xchg
push
inc
gs
call
in
jae
jb
mov
je
adc
arpl
shll
inc
fldenv
jnp
xchg
add
das
mov
xor
sub
xor
pop
pop
push
push
add
call
sti
out
call
and
mov
push
dec
pop
mov
sub
and
pop
add
aaa
or
enter
gs
dec
inc
mov
xor
jb
movsl
sbb
or
mov
xchg
movsl
jbe
repz
pop
or
mov
adc
adc
sqrtps
dec
adc
call
mov
sub
pop
mov
mov
mov
in
pop
and
adc
in
fcom
xchg
push
push
cmpsl
mov
movsb
cld
pop
cld
inc
mov
shr
or
movsb
and
or
push
fwait
add
mov
shl
lret
ljmp
sbb
jmp
sub
jmp
sub
add
sub
push
push
roll
inc
xor
jnp
mov
inc
lea
jle
sub
jl
testl
or
push
lret
adc
out
add
shlb
xlat
scas
loop
pop
stos
adc
call
inc
adc
add
or
data16
fidivrs
mov
sbb
and
dec
push
hlt
push
mov
mov
push
lea
sbb
les
fwait
ud0
sbb
push
add
enter
roll
mov
fsub
popa
pop
dec
push
dec
sti
scas
cs
xchg
inc
daa
test
stos
mov
xchg
pop
mov
pop
sub
jp
sbb
loope
mov
pop
inc
loopne
mov
cld
push
push
push
call
add
fst
incl
xchg
repz
push
call
jo
lock
call
push
sub
inc
ret
shr
subb
dec
pop
pop
pusha
lock
idiv
mov
push
push
push
call
add
test
sahf
push
and
push
mov
push
push
push
push
push
dec
lock
call
adc
sub
shlb
push
jmp
jl
inc
sub
push
or
push
xor
mov
push
push
call
push
nop
inc
gs
loop
inc
shr
push
inc
rol
lahf
dec
lea
sub
or
neg
mov
rorl
out
push
push
call
subl
push
add
mov
fwait
push
rol
pop
pushl
mov
flds
sbb
aaa
inc
and
adc
sbb
test
and
and
cmp
jmp
adc
bnd
subl
cld
aas
gs
pushl
push
call
enter
xchg
call
call
adc
dec
xchg
xchg
ret
push
call
inc
dec
mov
test
mov
mov
lds
inc
mov
xchg
add
inc
and
ss
pop
aaa
lret
pcmpeqd
lcall
int3
mov
mov
pop
jp
fidivrs
repnz
sbb
add
xor
mov
xor
push
fsubr
xor
or
dec
mov
lods
dec
xor
out
sub
cmpl
insl
or
addb
fldenv
inc
imul
mov
push
mov
lods
pop
ljmp
ror
push
mov
jae
imul
loopne
lret
inc
dec
sar
xchg
aas
out
jbe
ja
idivl
dec
inc
cmpsb
js
cli
mov
ret
mov
cmpsb
int3
push
xchg
incl
in
jp
xchg
mov
ret
inc
inc
pusha
adc
adc
sahf
xchg
insb
iret
add
jmp
ljmp
cmp
scas
cmp
out
pop
jmp
pop
ja
push
xor
jae
fnstenv
int
loop
xchg
clc
dec
insb
movsb
daa
sbb
incl
popa
jmp
cs
aas
inc
mov
int
mov
ljmp
mov
in
fsubrs
inc
sub
in
xchg
add
or
sbb
sbb
push
cwtl
mov
shr
mov
jg
push
jnp
xchg
ss
pop
adc
scas
adc
scas
xchg
push
lcall
sbbl
push
push
pop
aad
adcl
insb
mov
or
pop
in
jg
call
mov
lds
add
jg
adc
les
inc
aaa
mov
loopne
pop
movsl
sub
loopne
push
jle
sarl
decl
shll
ds
mov
inc
jae
repnz
dec
sbb
or
xor
adc
stos
cmpsb
out
dec
adc
pop
sub
incl
or
insl
xor
inc
rolb
std
mov
std
add
jae
fstps
aam
out
push
jo
arpl
pop
mov
xchg
pop
adc
rol
or
dec
out
mov
jb
lods
inc
subb
add
nop
les
pusha
insl
mov
mov
and
mov
push
inc
scas
ljmp
shll
fsts
pop
jg
out
jmp
cmp
decl
ljmp
push
hlt
dec
test
scas
outsb
sahf
lcall
cmp
pushl
repnz
sarb
mov
mov
sbb
ljmp
int
adc
mov
push
bnd
aad
mov
add
dec
xor
sub
pushl
lcall
into
sahf
jns
xchg
bound
in
sti
repnz
stc
out
incl
clc
jo
pop
dec
push
and
or
sti
adc
decl
mov
fnstcw
push
loope
mov
pop
mov
incl
push
or
in
cmp
fsubl
push
testb
adc
stos
or
mov
out
fdiv
jp
sub
incl
adc
jge
ret
xor
aam
sbb
lods
cltd
cmpsb
sbb
je,pn
incl
call
jge
repz
xlat
sti
sbb
bound
ljmp
sub
cmp
outsb
mov
stos
fdivr
insw
xor
jno
dec
dec
dec
mov
negl
and
pop
decl
cltd
jbe
test
nop
loop
jo
popf
jne
push
in
bound
scas
movsb
popl
mov
push
sbb
ja
fdivr
incl
pop
loopne
lea
dec
out
dec
iret
insb
loope
je
sbb
pushl
clc
scas
das
sti
pop
or
push
and
xchg
std
push
inc
out
jle
inc
mov
fdivr
lcall
aas
es
push
cmc
mov
push
xor
sub
jns
jl
repnz
rcr
mov
popa
cld
call
into
and
mov
xchg
loop
dec
cmp
jp
mov
jnp
or
shlb
outsl
rclb
adc
mov
xchg
iret
or
mov
jne
pushl
sub
ja
pop
andl
xchg
sti
push
pop
rol
stos
add
call
mov
setp
das
mov
xchg
lds
faddl
push
out
push
jne
push
nop
push
incl
dec
shl
call
mov
cmpsl
aas
in
or
popa
add
jne
notb
out
add
sub
sarb
jg
dec
cwtl
xchg
xor
xlat
xchg
test
dec
repnz
cs
or
aam
xchg
daa
push
pop
clc
outsb
add
cmp
hlt
xchg
enter
iret
mov
les
pop
lea
in
ret
adc
dec
sub
xchg
int
in
xor
xchg
push
popa
cmp
aad
stc
dec
shlb
leave
call
fidivrl
dec
cmp
ss
mov
fdivrs
in
movsl
xor
mov
popa
jnp
inc
addr16
ss
add
push
je
imul
fptan
lret
cld
or
test
movsb
in
dec
jne
lcall
nop
ret
push
sti
imul
cmp
repnz
adc
xchg
call
and
pop
adc
cmp
cmp
decl
jns
jl
push
divl
mov
xor
sub
push
adc
mov
xor
aam
aaa
jecxz
mov
mov
push
pop
movsl
dec
jb
adc
sbb
dec
xchg
cmp
jmp
cwtl
ljmp
inc
xchg
pop
jae
pushf
mov
cli
repnz
or
por
cmp
fisubrs
inc
loope
and
mov
cltd
dec
pushl
aas
into
lea
fisubrs
sbb
fwait
mov
ja
sbb
testb
push
push
jle
insl
mov
inc
dec
lock
xchg
cmp
cmp
cmpsl
xchg
popa
ud0
jmp
out
cld
lret
ds
imul
pop
sub
test
lcall
fisttpll
jecxz
fdivp
jge
jnp
xor
pop
insb
sub
push
dec
push
jmp
push
adc
ljmp
xlat
lods
dec
cmp
test
fwait
jle
test
in
ss
icebp
push
loopne
jmp
sub
leave
add
and
dec
data16
clc
nop
fdivs
inc
cwtl
out
cmc
icebp
jg
incl
testl
mov
movsl
out
in
push
dec
sbb
movsl
sub
test
pushl
jne
daa
add
add
adc
outsb
in
pushf
xor
sarl
lcall
mov
mov
mov
xchg
add
hlt
das
std
mov
lock
or
fldt
hlt
int3
mov
fildll
gs
pop
loopne
xchg
cmp
loope
pop
jge
or
in
outsl
jle
rcrb
aas
mov
jmp
popa
fs
push
mov
incl
or
push
push
add
sub
jb
out
ljmp
rolb
jb
pop
jo
cli
push
jp
xor
inc
inc
mov
leave
pusha
or
cmc
out
mov
std
add
push
sbb
cmp
xorb
fidivs
test
pushl
mov
gs
dec
lcall
lea
out
dec
lds
addb
jmp
and
test
bound
xchg
pop
int3
in
mov
mov
lea
lcall
cwtl
scas
add
push
cmc
es
xchg
lock
sbbb
fwait
mov
push
jmp
dec
imul
mov
sub
ds
xchg
std
hlt
shl
mov
call
add
xchg
lret
mov
in
xchg
pop
pop
fstl
mov
incl
mov
scas
mov
dec
jae
ds
mov
push
fwait
inc
jo
ljmp
rcll
jge
lahf
repz
jns
cmp
in
xlat
movsl
test
jecxz
out
sub
cmpsb
mov
pop
mov
jmp
xchg
out
sbb
cmp
sbb
mov
push
and
das
jecxz
js
jg
decl
and
jmp
and
test
mov
loop
push
icebp
ss
movsl
jne
popf
leave
push
push
pop
incl
lahf
ja
sbb
lea
test
es
sub
pop
mov
xchg
push
or
sar
repnz
ljmp
push
xchg
xchg
mov
push
shll
dec
cmpsl
cmp
fwait
test
jg
jg
mov
add
rclb
aam
mov
xor
fucomi
mov
incl
sbb
and
in
leave
cmpsb
inc
call
loopne
inc
or
incl
or
aam
jp
gs
sub
add
sbbl
test
in
mov
jl
mov
mov
push
mov
jmp
push
jae
or
sub
addr16
dec
lea
jb
mov
dec
jbe
in
sub
push
mov
mov
jl
in
dec
cs
decl
ss
push
jnp
aaa
xor
push
pop
addr16
repnz
xchg
cmp
jl
and
sti
jns
jl
loop
push
inc
loopne
cwtl
mov
ret
ret
sti
push
sarl
fistpl
lcall
inc
hlt
test
orl
das
fwait
adc
loopne
clc
mov
in
dec
int
sub
or
cmpsl
jno
jecxz
mov
mov
sub
sarl
push
repz
xor
xchg
cmpl
dec
adc
hlt
mov
andb
loop
dec
jl
jp
dec
mov
repnz
shr
pop
into
dec
lods
out
and
jo
arpl
out
cmp
lock
jmp
add
lock
xchg
test
add
add
leave
jmp
mov
pop
sub
enter
sarb
rolb
mov
jmp
and
test
jno
pop
inc
sub
adc
push
cmp
xor
inc
mov
fadds
pushl
test
ret
cwtl
mov
mov
sub
test
mov
call
dec
cmp
push
mov
mov
pushf
popf
in
xor
or
lock
scas
sub
adc
mov
call
xor
dec
push
das
mov
fxch
add
xchg
mov
push
jno
xor
daa
popf
and
sar
decl
push
sbb
out
mov
popa
arpl
lcall
jg
lcall
mov
lds
repnz
sub
mov
cli
stos
cmp
call
insb
data16
lods
movsb
into
adc
fdivrs
mov
xchg
jle
das
pop
hlt
or
mov
pushl
mov
xchg
jecxz
shll
xor
add
iret
popa
inc
pop
and
stos
mov
mov
jmp
or
ds
xchg
jo
push
stos
push
xor
movsb
int
iret
mov
mov
mov
pop
adc
mov
cltd
xchg
xor
push
push
mov
mov
mov
call
or
pop
and
cs
mov
andl
repz
push
les
js
jg
pop
jle
les
sub
cmp
add
or
mov
mov
cs
sbb
cmp
jnp
outsl
hlt
cmp
mov
jmp
ljmp
lahf
ss
mov
movsb
cmpsb
scas
repnz
adcb
pop
ljmp
lods
test
push
notb
sbb
divl
xchg
and
cwtl
sbb
mov
cmpsb
jle
add
mov
gs
scas
aam
lea
ljmp
sti
ljmp
lods
adc
aam
stc
jecxz
jae
mov
push
mov
incl
sub
cli
scas
mov
ss
iret
push
pop
les
flds
and
les
in
arpl
aas
adc
push
lcall
rorb
inc
lds
fildll
mov
add
mov
pop
jmp
jecxz
push
mov
das
push
negl
sbb
cld
and
leave
imul
inc
xchg
sub
jmp
mov
mov
scas
incb
mov
jae
lds
arpl
lods
addr16
or
decl
icebp
xchg
or
mov
xlat
push
into
icebp
movl
sti
or
pop
add
mov
aas
aam
gs
int
shll
cmp
xchg
pop
inc
xchg
das
pusha
pushl
adc
sub
movsb
mov
cmp
jno
je
inc
hlt
fildll
push
fstpl
decb
ja
pop
std
jmp
jg
cpuid
aaa
std
mov
push
idiv
test
inc
maxps
push
push
jae
sub
dec
sti
sbb
sar
call
jp
sbb
mov
jp
call
sahf
sbb
js
nop
rcrl
decl
lcall
mov
push
or
xchg
das
shll
sahf
sbb
inc
fisubl
incl
cld
sti
aas
xchg
test
xor
outsl
dec
mov
loope
sub
ljmp
inc
and
lret
dec
jmp
mov
std
insb
jg
ja
jp
pop
sub
jmp
setns
lret
jns
gs
push
insl
jbe
mov
mov
ljmp
jge
iret
or
stc
bound
mov
je
dec
sub
inc
addr16
inc
mov
dec
xor
std
jge
inc
dec
iret
popf
cmpsb
repnz
movsl
bound
push
jge
lret
scas
adc
ss
push
aam
mov
je
mov
fdiv
ret
std
popw
sbb
mov
jo
pushl
sbbl
data16
les
aam
inc
push
jne
int
sbb
sbb
add
scas
pop
insb
cltd
fs
decl
ret
scas
stos
imul
mov
iret
jnp
adcb
mov
dec
mov
and
mov
mov
stos
ret
lock
aam
xchg
pusha
cli
ljmp
sti
push
push
xchg
add
adc
fildll
inc
lahf
arpl
in
jmp
movsb
fildll
ljmp
inc
xchg
jnp
fstpl
mov
in
xchg
adc
fcompl
rorb
jge
mov
mov
jp
mov
scas
pop
pop
dec
shll
pop
mov
in
push
les
cs
jp
jg
popa
ds
ljmp
outsb
test
jl
add
test
pushl
dec
and
cltd
pop
iret
inc
dec
test
filds
push
test
mov
jl
jg
das
dec
push
mov
jle
push
mov
inc
cmpl
mov
ret
push
cmpsb
xchg
cltd
popf
sbb
ljmp
iret
fnstenv
and
mov
mov
inc
repz
jg
push
es
xchg
cmc
xor
sbb
xor
shrl
jbe
push
xchg
jb
popa
cwtl
or
call
mov
mov
ljmp
pushf
lods
mov
inc
jp
mov
pop
lds
cld
jmp
addl
inc
jmp
adc
rolb
cs
or
outsl
icebp
lcall
mov
ja
pcmpgtd
data16
mov
adc
mov
das
xchg
insl
inc
add
mov
jns
lcall
incl
daa
nop
sbb
dec
insl
repnz
mov
push
dec
out
shrb
jmp
cmp
repz
mov
loope
push
loopne
outsb
mov
pop
or
ja
stc
cmc
jecxz
xchg
push
mov
outsb
loope
jle
dec
iret
or
outsl
mov
sub
pop
call
bound
mov
sub
ljmp
shlb
sub
mov
and
test
lcall
inc
bound
hlt
pop
mov
inc
sub
xor
idivb
xor
int3
sub
mov
or
lret
ljmp
xor
pushl
pop
insb
add
mov
xor
xor
pushf
cmp
mov
aam
xor
jp
in
mov
mov
je
mov
stos
psubq
sbb
out
xor
lcall
mov
cmpl
fnsave
movsb
xchg
push
mov
stc
loop
clc
xlat
push
jecxz
lret
sbb
shlb
inc
movsl
pop
movsb
test
push
or
incl
and
xchg
mov
stc
inc
or
push
jmp
dec
sbb
imul
cmp
imul
xchg
and
aam
dec
insl
mov
je
clc
jg
mov
push
ror
stos
adc
pusha
or
jo
mov
mov
aaa
cli
pushl
mov
repz
or
rcll
shll
cmp
xchg
cmp
push
xlat
push
pusha
ret
xor
roll
outsl
mov
mov
sar
call
nop
lock
pop
push
sub
iret
call
int
dec
pop
ret
cmpb
fsubrp
xlat
sub
pop
fistps
push
call
mov
fwait
sbb
hlt
jbe
pop
dec
popf
ljmp
aas
push
lcall
jae
jo
add
adc
ja
sub
incl
incl
daa
sbb
jl
add
adc
ljmp
cli
push
loop
cmp
mov
and
fcmovnb
inc
pop
xor
add
cltd
inc
fildll
add
xchg
xlat
pop
inc
adc
sbbl
in
std
push
push
ljmp
filds
movsl
cmp
dec
int
jae
enter
mov
aam
mov
push
mov
jmp
movsb
jl
mov
shll
inc
outsl
push
pop
test
mov
fistpl
push
push
mov
repz
insl
cmpsb
push
dec
push
leave
call
outsl
dec
xchg
dec
clc
dec
push
pusha
and
jns
pop
pop
cmp
pop
outsl
ljmp
cmp
mov
jg
and
ljmp
scas
mov
pushl
mov
jle
sbb
icebp
daa
push
and
adc
daa
ror
mov
pop
lock
sbb
xchg
inc
aaa
mov
into
hlt
adc
enter
add
add
fidivrs
ja
mov
mov
sbb
sub
clc
sub
shrb
pop
shlb
movsl
popl
dec
xchg
mov
xchg
out
mov
push
mov
lcall
sub
pop
fcmovu
add
pop
cwtl
call
scas
out
xor
lret
sub
mov
gs
in
ljmp
cmp
mov
enter
jnp
insl
jl
mov
rcr
je
jmp
inc
jge
fbstp
repz
cmp
int
imul
imul
mov
inc
mull
jle
std
and
pushl
mov
inc
add
mov
pop
sub
push
or
adc
push
mov
jmp
sub
dec
adc
fwait
addr16
mov
aas
movsb
pop
loop
std
hlt
in
adc
test
mov
sub
pop
ss
clc
mov
xchg
es
arpl
andb
stos
mov
pop
call
rcr
jo
rorl
negb
sti
xchg
sub
push
inc
cmp
or
jl
dec
add
mov
std
jecxz
or
xor
insb
xchg
or
jg
repnz
jp
cmp
and
cmp
leave
add
add
repz
push
fistl
call
pushl
jae
mov
stos
daa
jp
xchg
xor
sbb
decl
inc
shll
lock
icebp
inc
inc
imul
jl
fistps
loop
movsl
daa
call
dec
cmc
fstpl
mov
into
ret
push
ffreep
roll
pusha
lcall
loop
push
xchg
insl
adc
add
mov
lcall
lods
rolb
repnz
xor
pop
arpl
in
lea
out
mov
push
pop
or
clc
ret
push
jns
negb
lds
add
popf
pop
mov
dec
nop
push
sarl
fs
cmp
sbb
inc
lds
jge
add
xor
mov
mov
cwtl
movsl
add
jge
jecxz
inc
and
pop
cli
decl
aas
imulb
arpl
aas
push
and
fcompl
dec
xlat
mov
mov
scas
sub
mov
scas
sub
into
rcl
ret
inc
pushl
xlat
cltd
adc
and
pop
pop
sub
decl
jmp
inc
fsubrl
pop
add
pop
jl
ss
ds
iret
pop
mov
cmp
add
lods
test
add
test
push
ja
lds
decl
pop
xchg
out
mov
dec
fs
lods
jns
sbb
push
inc
jns
fsubp
out
or
mov
cld
inc
push
mov
repz
adcl
repz
sub
imul
mov
mov
cmp
push
call
lcall
inc
add
sub
or
cmp
sahf
mov
push
mov
aaa
and
cmp
out
jecxz
xor
jns
xor
cmp
lret
fstps
pop
jae
push
inc
loopne
ljmp
ja
in
and
nop
je
in
test
fwait
lcall
arpl
pop
cli
lods
fimuls
ljmp
sub
lcall
scas
cmp
or
insb
stos
test
lock
das
iret
xchg
movsl
xlat
outsb
cltd
push
incl
xorl
insl
xor
out
cmpsb
sbbb
and
and
fnstsw
flds
jmp
jecxz
lahf
in
xchg
jo
and
fstpt
push
stos
cmp
inc
call
hlt
mov
inc
add
daa
jg
sub
leave
dec
cmp
mov
std
jl
aas
cmp
fldcw
mov
adc
test
add
decl
insb
cmpsb
test
test
sbb
pusha
je
decl
add
rolb
pop
push
lcall
lods
pop
enter
fistl
mov
das
sub
sub
mov
mov
cmpsl
adc
inc
xchg
ljmp
je
fidivl
or
call
loop
aaa
mov
xchg
xor
cmp
stos
dec
jmp
lcall
pop
nop
call
cmp
andb
enter
xor
out
pop
std
lcall
jmp
inc
or
cmp
pop
and
sbb
ljmp
ret
mov
pop
call
mov
jae
mov
or
test
decl
xor
push
jmp
mov
mov
lret
push
add
scas
mov
insl
aam
inc
and
aaa
lahf
mov
inc
das
nop
adc
in
mov
mov
imul
add
cld
pop
fcomip
out
int3
leave
mov
std
sub
fstpl
xcrypt-ctr
cmpsl
fldl
ret
movsb
popf
repnz
xlat
aam
ljmp
cmp
push
push
dec
loop
in
xor
push
sub
imul
jg
movsl
inc
mov
in
ds
push
or
fisubrs
clc
incl
enter
jp
loop
test
imul
fwait
movsl
cmp
mov
sbb
ret
cld
stos
loope
lds
mov
cmp
cli
lcall
pusha
outsl
cld
popa
shrl
int
or
push
jmp
data16
fbstp
call
push
mov
cwtl
in
lock
andl
stc
mov
nop
xor
loop
call
push
jno
mov
mov
jg
test
bound
or
inc
mov
mov
arpl
decl
in
stc
repz
pusha
loope
pop
xchg
lods
ret
repz
jbe
scas
icebp
out
fistpll
inc
or
fistpl
mov
inc
cmp
scas
scas
jo
jne
jbe
xchg
rcr
cmp
mov
mov
shll
adc
into
mov
shl
lcall
sar
mov
jp
fstl
mov
pusha
push
clc
mov
adc
pop
sub
mov
loopne
mov
fidivrs
cmc
push
stc
jmp
push
lcall
lcall
shlb
inc
xchg
fisttpl
adc
mov
mov
cmp
jns
sahf
push
cmpb
in
popa
xor
out
lret
adc
push
mov
or
scas
inc
xchg
std
fucomip
lcall
mov
mov
dec
inc
push
fwait
repz
pop
dec
lcall
ja
pop
push
rcl
pop
inc
lods
pop
mov
out
xchg
lock
cmp
std
out
jae
mov
sbb
inc
or
dec
sub
sub
scas
es
lock
lcall
ljmp
pushf
push
or
pop
stc
cli
in
loopne
add
aaa
int
out
fsubrl
inc
jmp
jne
loope
lret
jae
mov
adc
ret
pop
fs
add
dec
into
xchg
xchg
push
out
cmp
mov
push
cmp
lahf
mov
ret
jnp
dec
cld
push
fs
imul
jge
push
shrb
decl
pop
jo
out
pushf
jnp
jl
fimull
push
inc
jne
fucomip
ret
outsl
decl
sbb
fisubl
xchg
pop
sub
mov
ret
call
out
mov
test
sbb
insl
out
jmp
clc
int3
aad
mov
incl
pushf
ds
subl
xchg
in
pop
fwait
stos
ss
push
div
xor
mov
cmpsl
dec
xchg
jp
test
pop
cmc
xchg
lods
imul
jg
popf
push
xor
popf
ljmp
sub
jg
add
adc
or
pushl
xor
enter
and
fiaddl
jb
stc
inc
into
mov
and
mov
int
xchg
mov
outsb
mov
addr16
mov
les
add
lcall
dec
adc
lahf
pop
jnp
pop
sub
out
out
mov
push
inc
aam
mov
incl
pushf
adc
nop
mov
mov
add
daa
outsl
push
xor
mov
add
movsb
mov
mov
and
inc
ret
fwait
fs
scas
std
out
lcall
sub
int
add
cmpsb
inc
loop
fisttpll
adc
push
and
int
sar
call
mov
mov
cmp
sub
jle
lods
or
dec
pushf
inc
incl
dec
add
cmp
sti
jp
xor
aaa
cmp
jp
jg
in
iret
lods
repnz
inc
adc
or
rorl
jle
stc
decl
imul
jno
lret
fldt
lcall
sahf
dec
xchg
aad
roll
cmp
andb
shll
xchg
rol
cmp
and
dec
ja
jecxz
imul
out
dec
dec
cmpsl
mov
mov
mov
mov
incl
adc
and
ds
shrb
mov
js
lcall
divb
enter
sbb
loop
lods
cmp
ljmp
pop
inc
add
call
das
mov
std
je
mov
ret
push
sub
lcall
ljmp
push
testl
push
fadds
cmp
int
mov
or
or
cmp
out
and
push
mov
jl
lods
rcrl
cmp
pushl
or
sub
fdivrl
lret
jbe
sbb
std
xchg
loopne
shrb
cmpsb
and
push
ss
lods
and
mov
aaa
jmp
mov
aas
fistpll
xchg
imul
pop
mov
fsubrl
pop
addb
iret
pushf
incb
xlat
sbb
mov
fmuls
in
lds
aam
sbb
pop
and
pushl
rcll
shl
xchg
std
mov
pusha
stc
push
push
hlt
pushl
xchg
pop
pop
clc
fsubl
subb
dec
les
ja
pop
mov
push
push
jge
das
test
pop
loope
fs
ret
jg
repnz
xchg
cli
outsl
lock
lahf
out
fwait
mov
sub
test
enter
ret
lahf
jae
mov
subb
and
ss
call
pop
mov
pusha
aam
cmpsl
pop
inc
loope
inc
stos
nop
and
pop
repz
and
jb
cmpb
or
fdivl
aam
adc
and
in
lods
pop
cmc
shrb
icebp
mov
repnz
jmp
mov
outsl
mov
ljmp
cmp
lock
in
iret
pop
aam
mov
orb
pushf
dec
out
jnp
aas
aam
jns
incl
or
icebp
xlat
bound
mov
inc
jns
sbb
sub
cmp
das
adc
pushl
es
push
xor
jns
sbb
mov
hlt
in
cmp
jg
mov
or
mov
dec
hlt
cli
jbe
in
ljmp
sbb
and
pop
mov
or
mov
adc
pushl
jle
jmp
jg
int3
lods
push
sub
movsl
out
cmpsb
cmpl
int
rorb
cmp
fsubr
inc
jbe
icebp
aad
out
fstps
sbb
adc
ret
push
sbb
lcall
lods
dec
push
xchg
push
lcall
dec
push
cmp
adc
xor
scas
pop
pop
pop
pop
jae
ror
daa
cmc
incl
inc
and
dec
jb
pop
sub
cmp
sub
jns
cld
jmp
jae
std
mov
mov
jecxz
rcll
adc
rcr
jg
je
lcall
jecxz
imul
cmpsl
lods
fs
cmpsb
push
mov
sbb
decl
bound
push
out
push
xchg
insb
dec
das
roll
mov
lret
pop
mov
push
mov
jae
nop
mov
outsl
aad
pushl
movsb
fwait
pop
pop
and
xlat
xchg
xchg
inc
sarb
sbb
ljmp
lock
xor
cld
jb
mov
xor
je
mov
shrb
cmc
incl
ljmp
cs
test
jp
push
mov
jecxz
ficomps
inc
or
mov
mov
aas
rorb
sub
inc
adc
add
pop
cli
out
lods
mov
jbe
aam
imull
insl
and
leave
push
ja
daa
and
ds
pop
ljmp
and
out
aaa
push
jge
adc
add
mov
ljmp
mov
adc
xchg
sbb
insb
adc
cld
mov
fbstp
sbb
jns
xchg
inc
sbb
push
fs
push
fwait
adc
add
push
mov
and
ljmp
push
and
sub
jmp
adc
stc
rorl
ret
jecxz
pushf
cs
lea
les
lahf
adc
mov
loopne
call
ds
push
ret
mov
rcl
inc
push
cmpsl
dec
outsl
sub
orb
and
and
lcall
xor
push
ficomps
into
std
gs
inc
dec
roll
or
pop
or
ficoml
lods
sub
push
cli
sub
andl
mov
xchg
js
xor
adc
stc
pop
cmpsl
adc
jmp
and
jns
push
sub
ljmp
dec
rorl
add
scas
lods
call
mov
dec
repz
adc
test
repnz
mov
sbb
pop
outsl
int3
push
mov
xchg
stos
idiv
xchg
xor
sti
addr16
cmp
sbb
test
cmp
xchg
clc
stos
imul
rcrb
call
int3
cmp
cmp
mov
or
lret
ljmp
cmpsl
nop
sbb
dec
and
or
loop
cltd
xchg
inc
pop
dec
add
pushf
lds
test
sub
xchg
mov
movsl
or
cmp
add
fimull
mov
rol
push
adc
std
cmp
dec
test
and
js
aaa
movsl
sar
lret
movsl
scas
sub
incl
pop
mov
xor
je
ret
je
out
call
dec
inc
mov
mov
xchg
pusha
lret
mov
mov
pusha
xchg
lcall
ljmp
dec
jo
pop
jb
or
int3
stos
push
dec
gs
js
hlt
pushl
fbstp
or
in
jecxz
stos
push
xor
lcall
pop
jb
and
stc
xor
adc
push
dec
xor
jg
aaa
jge
mov
add
dec
push
push
xchg
insl
in
dec
outsl
loop
aas
and
mov
jmp
sub
mov
test
test
xchg
decl
dec
mov
sub
inc
pushl
mov
and
sub
out
push
outsb
jnp
rolb
sahf
mov
jg
call
les
push
dec
sahf
and
aas
xor
daa
mov
call
xchg
mov
mov
imul
sbb
xchg
popf
jg
mov
xchg
push
aaa
mov
jg
lcall
lods
popf
cwtl
pop
rcl
jg
and
popa
ja
lret
imul
ret
subl
adc
lcall
aaa
xor
and
cmc
dec
movl
pop
jp
add
pushl
test
xchg
mov
shll
and
mov
in
arpl
jmp
jnp
sahf
mov
jnp
fwait
stos
imul
add
cmpsb
pushl
jae
inc
push
lahf
sarb
pushf
pushf
jp
mov
imul
sub
ret
jmp
mov
js
iret
jle
jo
mov
addb
mov
sbb
sub
out
jecxz
das
cmc
mov
mov
xorb
mov
or
incl
xchg
test
push
mov
or
jb
mov
lahf
lcall
cld
mov
repnz
and
jnp
test
popf
push
mov
lea
jae
mov
hlt
loope
mov
xchg
ss
sub
inc
pop
mov
pushw
push
or
lret
lock
xchg
out
fwait
xlat
xchg
in
or
mov
bound
call
lea
rclb
lret
ret
imul
adc
pop
out
in
fwait
movsl
call
xchg
add
pusha
pop
mulb
popa
cs
aaa
outsb
inc
test
xlat
daa
inc
pop
outsb
adc
adc
add
incl
or
sahf
test
in
xchg
push
ds
mov
ret
stos
lea
inc
repz
dec
aaa
outsl
scas
pop
das
hlt
jnp
daa
inc
and
jg
cmp
aaa
mov
aam
test
jle
outsb
add
xchg
je
imulb
dec
out
mov
mov
fadds
outsl
adc
lods
decl
ljmp
insl
repnz
jmp
add
leave
pop
adc
lcall
rcr
xchg
icebp
mov
ljmp
fistps
popf
adc
or
add
das
mov
xchg
repnz
mov
mov
das
hlt
aas
mov
inc
push
inc
xchg
and
loop
incl
pop
jp
push
outsb
pop
mov
iret
xchg
mov
dec
addr16
sbb
add
nop
mov
imul
sub
orb
adc
in
jg
xorb
pop
jnp
adc
push
in
push
xchg
cmp
fnstcw
je
shll
hlt
lret
xor
inc
and
mov
test
adc
ljmp
hlt
add
test
fwait
in
add
les
lcall
addb
enter
int
fcomp
add
fidivs
rol
and
iret
push
or
push
xchg
adc
invd
mov
jp
xchg
enter
std
stos
mov
out
cmc
fcomps
mov
mov
push
dec
adc
aaa
pop
push
cmpl
jmp
fcmovnb
pop
dec
ljmp
mov
dec
mov
xchg
push
xor
in
clc
test
inc
popa
sub
add
mulb
xor
popa
repnz
sub
inc
lds
adc
mov
iret
mov
dec
dec
daa
std
sbb
push
adc
ffree
pop
cli
ljmp
rolb
cmp
xchg
mov
rorb
cs
icebp
or
cmpsb
jo
ljmp
cmp
stos
fwait
mov
sbb
jg
dec
iret
lods
cltd
stc
js
mov
mov
into
xchg
mov
mov
lcall
mov
std
es
sbb
dec
lea
mov
push
jb
loop
inc
ficoml
jo
mov
mov
idivl
in
add
inc
xor
test
push
ljmp
iret
xchg
push
or
mov
adc
decl
pop
push
movsl
cwtl
call
adc
sbb
ret
mov
push
mov
stc
or
scas
cmp
sahf
xor
clc
aaa
clc
xchg
cli
mov
xor
cmp
lcall
push
ds
fcoms
adc
lea
and
sub
leave
dec
mov
imul
lods
int3
mov
push
lcall
inc
pop
addr16
and
or
or
incl
jl
mov
daa
addr16
imul
jb
insb
or
mov
sbb
clc
notl
loopnew
xorl
stos
jg
out
ja
push
mov
jp
out
in
mov
jo
sbb
lock
decb
jb
out
jl
addr16
mov
mov
xchg
inc
cmp
test
addl
and
popa
movsb
out
mov
lret
sbb
bnd
adc
xchg
jg
pop
add
cmp
fidivl
jne
clc
fadds
mov
pop
pop
jp
dec
in
mov
cmp
insb
pusha
mov
ret
xchg
arpl
repnz
fdivr
ljmp
jno
lods
es
cli
mov
push
rolb
xchg
cli
in
jmp
push
jmp
cmp
push
lock
push
testb
mov
push
std
lock
ret
rolb
mov
aas
int
pop
cmc
mov
ljmp
je
roll
pop
cld
lods
mov
mov
push
lock
in
divl
pushl
xorl
sub
jmp
jecxz
and
rorb
mov
mov
add
bound
xor
incl
xchg
and
add
cmpsl
inc
hlt
adc
cmp
enter
test
lcall
out
int3
lock
test
xor
xchg
lret
mov
outsb
jo
cli
fldl
leave
xor
movsb
or
out
sti
test
pushl
xor
fistl
out
push
pop
in
or
cs
mov
es
icebp
dec
or
inc
push
mov
fnstcw
loop,pn
mov
pop
sub
pusha
lock
and
into
aam
jg
cli
inc
cwtl
add
outsb
xor
fisubl
pop
mov
fbld
sub
dec
jmp
sub
pop
lahf
in
xchg
rcll
mov
mov
pop
loope
sbb
mov
jns
les
fwait
sbb
sbb
decl
dec
lods
es
and
dec
add
js
clc
int3
loope
mov
ljmp
das
fldcw
jl
dec
jmp
dec
fnsave
add
pop
ss
jmp
xchg
mov
es
test
adc
insb
inc
mov
stc
lcall
fisttpl
jnp
mov
xor
ljmp
pop
les
out
jmp
pusha
sarb
mov
dec
test
adc
push
or
leave
int
incl
xor
add
insb
adc
jge
add
cmp
mov
inc
adc
ret
insb
std
lahf
fs
pop
stos
cmp
outsl
lcall
in
inc
jnp
out
xor
fwait
loopne
rcl
lea
out
push
lods
daa
add
test
cli
fildll
arpl
mov
rcrl
pushl
xlat
lods
jl
fiadds
cs
mov
js
fstpt
jns
inc
pushl
fdivrl
mov
aam
xchg
mov
xor
jno,pn
jle
fnstsw
decl
xor
jecxz
mov
xor
sub
loopne
xchg
and
je
je
int
or
lcall
jmp
imul
ja
adc
into
mov
inc
enter
lahf
jle
cwtl
mov
movsb
aas
sub
pop
les
stc
shl
sti
push
xor
mov
rol
jecxz
movsb
mov
out
dec
inc
inc
sub
mov
sub
int3
or
ljmp
mov
in
dec
sbb
out
inc
cli
mov
sbb
or
xor
mov
inc
fucomip
jmp
in
or
or
sti
ss
pushf
lret
or
ljmp
jmp
mov
mov
and
incl
mov
adc
xchg
adc
addr16
cli
mov
jg
imul
mov
dec
dec
jae
cmp
jl
imul
ret
push
call
or
jl
aas
mov
std
pushl
jmp
xchg
in
fimull
decl
sti
imul
sub
repnz
in
cltd
pusha
imul
ficoml
pop
add
outsl
lock
jmp
or
ljmp
js
add
decl
mov
incb
sbb
jp
inc
nop
fdiv
loope
lcall
pop
xor
mov
sub
cmp
lcall
call
test
push
ss
mov
clc
mov
push
dec
pop
xchg
jg
js
das
xor
mov
cmpsl
sbb
sub
and
repnz
xchg
jmp
fsub
cmpsl
xor
repnz
std
outsl
lock
pop
int
gs
movsb
mov
lahf
pop
cli
decl
or
and
rcrb
ficompl
lods
lahf
sbb
lcall
cld
jg
dec
jp
aas
mov
mov
jns
aas
jp
rcll
std
jg
decl
ret
repz
sti
mov
popa
ret
leave
add
lcall
jno
sbb
jge
adc
dec
loop
rcl
mov
push
cmpb
dec
cmp
imul
xor
mov
xchg
jp
ja
mov
aaa
lds
lret
aas
lods
incl
outsl
adc
mov
hlt
pop
xor
shlb
sti
stos
les
pusha
adc
lods
inc
sahf
cli
push
lret
mov
js
call
repnz
push
cmp
ret
sub
and
pop
pop
dec
mov
dec
fsubrl
andl
ljmp
iret
in
sbb
dec
in
jne
cmp
iret
les
aam
and
add
jg
inc
xchg
adc
and
sbb
pop
nop
mov
sub
or
sbb
fisttpl
imul
inc
loopne
into
or
sub
ret
add
dec
inc
in
xchg
pop
sub
pop
add
cmpsl
dec
pop
xor
fnstsw
ljmp
jns
or
das
jp
shlb
jno
je
xor
xchg
out
test
ljmp
mov
add
sti
adc
push
repnz
jge
insl
jg
mov
ret
popa
pop
xor
fcmovb
fs
iret
fwait
jg
int
pusha
outsl
fucomp
push
push
jo
movsl
in
inc
lds
jecxz
shlb
in
hlt
sti
jne
or
xorl
mov
sahf
mov
ret
les
ljmp
xchg
lods
mov
lock
out
cmp
sbb
stc
fnstcw
arpl
call
insb
test
dec
aas
mov
adc
fucomip
decl
in
clc
movsb
adc
jmp
pop
jno
fists
pop
sbb
jbe
jmp
sarl
decl
fildll
out
cltd
cmp
call
xorb
aad
sbb
mov
sub
sub
jae
bound
and
jmp
repnz
pop
jno
xchg
sarl
pop
push
fistpll
fistps
sbb
outsl
mov
jno
ljmp
pushl
sub
xchg
test
leave
xchg
sbb
jae
std
lcall
lcall
int
movsb
mov
mov
ficomps
mov
pop
fimuls
cmp
insb
dec
aaa
test
jno
cmpsb
ljmp
fldcw
arpl
ja
dec
popa
in
sub
cwtl
pushf
test
sub
ljmp
std
mov
mov
fnsave
jno
or
sbb
pop
dec
jmp
scas
xchg
jnp
shlb
clc
fsubrl
iret
outsb
test
insb
jmp
out
xchg
pop
mov
shl
rcrl
add
movsb
and
mov
imul
lcall
lahf
pusha
mov
in
inc
xor
pop
insb
sub
mov
sti
ljmp
cmpb
and
dec
push
jle
arpl
mov
mov
jmp
xchg
andl
push
dec
clc
movsb
rolb
movl
jmp
outsl
lea
cmp
cld
jb
mov
push
cmp
call
mov
jmp
mov
dec
out
or
jmp
adc
clc
jns
inc
push
in
xor
and
jns
ljmp
jne
rorb
pop
adc
add
or
xor
leave
gs
cmp
lds
push
sarb
push
pop
adc
jmp
and
vcvtdq2ps
pop
movsl
jb
jecxz
rcll
ljmp
fnstsw
call
pop
outsb
xchg
test
cmp
xor
lcall
lock
xchg
push
add
stc
xor
call
out
das
lret
insb
iret
repz
mov
lock
and
fdivr
cli
loop
push
es
call
insl
push
adc
push
incb
in
pop
mov
push
push
xor
nop
outsb
sti
add
mull
ljmp
cwtl
enter
neg
xchg
pushf
pop
push
add
in
ljmp
shll
push
push
ficomps
sbb
jge
jo
adc
or
loop
imul
fldl
jp
push
leave
mov
jge
xchg
pop
xlat
jno
mov
ficomps
dec
insl
les
mov
fcomi
sar
ljmp
xchg
nop
ret
arpl
mov
outsl
dec
call
xor
xor
jecxz
cmp
in
repz
push
subl
arpl
enter
lret
mov
lcall
jge
inc
push
pop
add
push
cmp
enter
adc
mov
ret
push
das
push
pop
lcall
stos
adc
outsb
push
dec
xor
ret
cmp
loope
adc
iret
add
xor
and
andb
jg
cmp
out
lods
ljmp
aam
sti
sbb
add
push
ljmp
add
pop
dec
cmp
loope
fs
pop
nop
and
push
lret
das
lock
call
test
in
lcallw
add
clc
in
and
mov
lea
pop
dec
adc
ljmp
roll
xchg
xlat
ljmp
jo
out
inc
pop
jg,pn
imul
lcall
cmp
repz
mov
fdivl
test
movlps
xchg
dec
das
call
shlb
cli
outsl
and
xorl
jge
sbb
cltd
loop
mov
std
andb
mov
imul
sub
mov
rorl
dec
mov
push
pop
xchg
pop
adc
out
mov
cld
dec
inc
mov
lahf
mov
das
dec
clc
je
push
and
ljmp
or
and
mov
xor
pop
lods
ja
mov
jmp
mov
mov
int
dec
add
imul
pop
mov
outsl
mov
pop
jno
les
sub
in
and
enter
push
inc
fdivrl
sub
movsl
jl
lret
fsubl
add
push
out
seta
fldt
add
das
cmc
ljmp
xor
mov
cmp
push
mov
call
loopne
xchg
in
adc
mov
es
add
adc
out
push
dec
mov
cmc
xor
popa
shrb
std
les
mov
je
adc
pop
xchg
in
aas
in
sahf
outsb
adc
fnstsw
mov
cwtl
mov
or
jle
pushl
call
lods
loopne
shl
ss
add
in
incl
jecxz
int
fmuls
out
dec
cmc
ret
outsl
sarb
icebp
sarl
bt
push
pop
scas
int3
icebp
fs
clc
adc
mov
das
cmc
call
push
loopne
mov
les
or
xor
hlt
add
sar
in
xor
lret
jns
loopne
ret
mov
lods
dec
push
pop
outsb
jo
xchg
outsl
cmc
inc
mov
fcomip
loop
out
sbb
ljmp
inc
mov
dec
pop
insb
dec
mov
fdivl
xor
sbb
insb
ds
sbb
pop
call
rcrb
ljmp
push
xchg
lcall
cwtl
inc
xor
jmp
mov
sbb
pop
movsl
ror
jbe
in
jne
mov
imul
andb
shr
sbb
or
jns
lret
scas
adc
dec
andb
cmp
popf
fmull
lret
jmp
clc
lcall
cld
jg
sti
lret
sbb
pop
jns
push
movsb
ljmp
bound
div
cmp
ljmp
int3
popa
mov
push
jecxz
xchg
decb
paddusb
push
f2xm1
loop
cwtl
dec
hlt
mov
loopne
xor
lock
pop
push
in
mov
adc
ljmp
add
les
xor
loope
mov
enter
dec
std
lcall
and
sbb
notl
mov
insl
loope
adcb
sub
arpl
push
inc
cmp
dec
mov
and
jno
incl
arpl
test
inc
lea
ljmp
lods
mov
add
sub
cli
call
aad
sub
js
fldcw
movsl
inc
fs
sub
aad
inc
jg
sti
ljmp
mov
hlt
lock
jl
jae
inc
pusha
and
sti
xchg
xor
jge
pushl
mov
stos
je
mov
add
add
arpl
loope
lea
loope
add
and
lds
and
fcmovnbe
jg
lahf
fbstp
adc
xchg
xorl
out
sub
mov
pushf
sti
sbb
mov
stos
mov
hlt
call
call
je
iret
mov
pop
mov
inc
mov
test
ja
out
add
adc
ljmp
lock
test
mov
shll
nop
into
loopne
incl
dec
pusha
shlb
fwait
js
fs
dec
lcall
incl
or
fiadds
push
cmc
xchg
stos
out
pushl
bound
fisubs
and
test
xchg
pop
hlt
lret
push
xchg
fnstenv
pop
cld
sbb
incl
in
adcb
mov
inc
and
ret
fmulp
roll
jmp
xchg
adc
aaa
sbb
xlat
in
inc
mov
shlb
dec
jmp
aaa
dec
mov
pushl
sbb
mov
aad
xchg
ret
jecxz
push
cld
pop
das
hlt
popf
shl
stc
ret
push
add
mov
loop
dec
lret
cmp
dec
ss
jecxz
je
pop
decl
dec
mov
inc
sbb
mov
pop
jge
mov
xchg
test
outsb
sub
cmc
fadd
lret
pop
sahf
mov
idivl
movsl
imul
ljmp
pop
inc
add
and
rolb
lcall
daa
adc
jno
mov
test
sbb
out
inc
lods
icebp
mov
and
or
xchg
lds
mov
xchg
inc
push
aam
pusha
mov
and
repz
xor
mov
call
mov
jbe
push
adc
enter
xchg
stos
or
outsb
jbe
popf
js
mov
cli
sub
mov
sbb
scas
jb
mov
xchg
mov
lock
scas
enter
sbb
aaa
scas
jb
push
mov
lahf
lcall
das
ss
and
cmp
fistl
xchg
call
popf
inc
mov
lods
pushf
cli
ret
mov
pop
fwait
loope
lea
incl
cmc
fmuls
or
jne
lea
xchg
jle
push
loop
mov
jae
mov
jg
jne
add
cmc
mov
and
andb
aaa
and
push
cmp
inc
inc
mov
ljmp
test
jno
inc
imul
xor
jbe
decl
sbb
shlb
inc
pop
pop
inc
loop
or
inc
lcall
push
out
dec
dec
loope
xchg
xor
sbb
add
mov
lret
mov
xor
add
sub
push
aas
jbe
mov
sub
mov
test
icebp
jno
sbb
xor
or
mov
call
add
xor
xchg
xor
in
mov
call
mov
mov
iret
inc
lret
or
inc
lods
out
ljmp
jbe
pop
mov
scas
sarb
lahf
fildl
sahf
adc
inc
leave
in
mov
jmp
repz
rcrb
dec
cmp
das
push
nop
das
std
pushl
dec
sub
arpl
push
shufps
ret
bound
jg
xchg
dec
loopne
je
lret
loopne
sub
push
repnz
mov
popf
mov
call
push
dec
push
adc
and
loope
pop
push
dec
and
in
aam
bound
mov
pop
cld
clc
mov
es
mov
shr
and
loopne
mov
outsl
cld
pop
clc
test
mov
dec
adc
push
movsl
daa
xchg
test
ljmp
ret
sbb
inc
je
subb
dec
and
stos
dec
jne
push
dec
leave
movsb
in
clc
mov
rcl
das
mov
or
int3
xchg
out
xchg
or
pushf
mov
or
mov
pop
ljmp
jmp
inc
mov
insl
ret
xor
pushl
adc
cs
mov
jl
bound
int
mov
int
nop
jnp
aas
push
lcall
hlt
outsl
test
jmp
sbbl
mov
stc
add
push
repnz
rorb
repz
push
or
jns
mov
jb
sbb
aam
jne
in
sub
jp
xor
ss
sub
loopne
or
lret
ljmp
shll
xlat
sar
sbb
scas
inc
int
insb
xchg
mov
in
mov
adc
loopne
mov
fwait
and
mov
push
lcall
mov
sbb
cld
push
test
jg
jb
ss
adc
and
fwait
adc
enter
std
incl
mov
mov
je
adc
pop
xor
jbe
cmp
or
call
in
add
push
fisttps
mov
jecxz
push
pop
xor
aas
mov
test
outsl
sub
fs
xchg
jne
in
fnstsw
cmp
lock
bound
inc
xchg
mov
test
push
test
sbb
das
lock
call
xchg
and
icebp
mov
mov
sub
add
ljmp
cld
adc
imul
sub
adc
add
std
popa
loope
ficoms
sbb
push
xlat
stc
jns
push
push
je
mov
mov
cli
jg
subl
jae
mov
lock
in
mov
push
incl
inc
clc
divl
dec
das
cmp
test
jl
bswap
dec
iret
and
decl
adc
aas
ljmp
negb
and
ror
push
sbb
incl
adc
pop
into
clc
out
mov
mov
mov
push
fnstsw
sub
xor
in
adc
push
and
test
fwait
call
dec
sahf
inc
repz
out
cs
decb
jmp
inc
pop
mov
dec
lcall
outsb
out
dec
rcr
push
xchg
insl
mov
sub
adc
xor
mov
mov
pushl
mov
cwtl
add
cmp
and
xchg
mov
fdivrl
mov
lods
popa
jo
sbb
decl
leave
aad
lret
mov
pop
jmp
xor
mov
pushl
mov
jge
mov
add
xchg
pop
clc
shrl
or
cmp
sub
negl
jmp
loopne
xchg
outsb
shr
scas
cwtl
add
sub
je
jmp
mov
push
jmp
xchg
inc
sbbl
inc
pop
xor
jg
jg
cli
out
sub
mov
pop
jg
fldlg2
cmp
aaa
clc
ret
lcall
push
lretw
out
xchg
sbb
push
pushl
cli
jmp
ficomps
pop
test
iret
sub
mov
insb
hlt
dec
int
xchg
xor
pop
xor
mov
mov
jbe
js
adcl
inc
jge
jmp
jg
out
outsb
fldl
in
loop
test
insl
in
mov
sub
lea
test
lret
lds
mov
sub
lods
xor
cmc
ljmp
pop
mov
mov
jno
fiadds
lcall
decl
ret
mov
sub
inc
cs
sahf
dec
cmp
repnz
lea
jbe
fwait
pop
pop
push
cmp
ror
or
scas
jne
lcall
repnz
push
mov
int3
das
adc
rorb
mov
cltd
add
outsl
std
incl
mov
sbbl
cmp
ja
lods
ljmp
mov
roll
inc
dec
jno
pop
cmp
mov
popf
test
mov
lock
mov
fmul
cmc
jg
inc
dec
rolb
aaa
push
xchg
int3
dec
sub
cmp
insb
dec
xor
ds
ljmp
in
pop
stc
cmpsb
cmp
addr16
lds
lock
jmp
loope
and
shlb
sub
pop
xchg
inc
mov
lret
cli
lcall
xchg
add
dec
divl
cmc
repz
stc
es
incl
pop
mov
std
aas
inc
mull
cli
dec
or
jmp
lret
iret
pop
cmp
push
test
pop
in
cmp
push
push
mov
xorb
jo,pn
ss
mov
jbe
fildll
mov
outsl
jmp
shl
sub
jmp
jae
lret
sbb
xor
xchg
std
jbe
or
or
sbb
pop
loop
push
sbb
jg
mov
stc
ljmp
mov
les
das
enter
inc
cmp
icebp
insl
push
movsl
pop
jns
sbb
mov
xchg
call
in
mov
rcll
sub
sti
jle
mov
xchg
enter
addr16
aaa
int
jg
je
pop
aad
xor
adc
ret
xchg
add
sub
adc
sub
inc
fcomi
dec
push
int
and
xor
add
fcomip
int3
push
gs
insb
lods
pop
insb
mov
popf
pop
lds
add
dec
sub
pushl
daa
push
add
mov
push
xlat
push
xor
idivb
push
or
std
mov
dec
push
sbb
xor
clc
inc
iret
outsl
sbb
push
and
rcrl
imul
incl
mov
jmp
cltd
out
jp
xor
dec
push
push
mov
out
outsb
jge
jbe
ds
xchg
fimuls
call
jns
sbb
je
rol
test
iret
xchg
lahf
std
stos
push
add
ljmp
mov
sbb
jnp
out
jbe
inc
adc
sbb
stos
pushl
xchg
xchg
add
inc
iret
sbb
aas
xor
stos
mov
inc
testb
mov
xchg
jae
xchg
lahf
mov
add
sahf
fwait
push
stos
stos
mov
das
jge
pop
cmp
ret
xchg
mov
and
mov
cli
jg
pop
mov
sahf
inc
mov
dec
lret
lret
inc
shll
stos
jmp
addr16
xchg
and
xchg
data16
leave
mull
adc
leave
out
jnp
cwtl
mov
movsb
fistpll
pop
insl
mov
or
test
adc
sbb
out
incb
mov
xor
pushf
jge
sbb
xchg
pushl
jo
sti
enter
mov
and
lcall
sahf
xchg
mov
sbb
sbb
mov
inc
dec
shr
cld
push
rorl
sbb
andb
leave
lcall
aam
inc
js
fstpt
je
dec
jns
aaa
jge
mov
jle
incl
inc
scas
or
lret
push
data16
movb
cmp
lods
cwtl
push
add
out
inc
lahf
add
add
inc
cld
xchg
daa
mov
dec
nop
aad
pop
ss
cli
mov
inc
jo
pushl
ret
les
xchg
inc
gs
aad
in
sti
leave
push
inc
in
push
iret
mov
cmp
lods
js
popa
rolb
and
pop
mov
mov
xchg
gs
icebp
incb
xor
loop
je
or
mov
pushl
xlat
fcmovnbe
std
mov
mov
jb
ljmp
push
jb
rorl
test
mov
cmp
mov
cmp
repz
or
jmp
add
mov
dec
shll
fwait
ret
roll
pushf
xchg
adc
mulb
fyl2x
dec
call
mov
subl
stos
sarl
sti
movsl
mov
outsb
sbb
fdivrs
andb
pop
cmp
in
insb
pop
jbe
or
mov
imull
push
lret
mov
call
push
cmp
sbb
or
addr16
xlat
mov
cmc
inc
insb
lods
jne
mov
das
lock
jge
jns
fcmovnu
and
pop
cltd
fwait
pop
std
or
cmp
mov
pop
sub
xchg
loope
cli
hlt
xchg
mov
mov
inc
js
out
ret
lcall
imul
sub
push
mov
das
loope
sub
mov
hlt
sar
mov
pop
pushf
popf
inc
icebp
mov
out
jno
inc
int3
jl
notl
mov
xor
mov
int
jb
ret
out
sub
out
imul
call
sub
fcmovb
add
shl
lahf
popa
cmc
push
outsb
into
and
lcall
imul
push
jg
push
pop
jle
cmp
iret
enter
test
call
xchg
xchg
push
insl
jns
pop
daa
lret
aam
and
jo
add
lcall
xor
fdivrl
imul
jmp
jg
scas
sbb
hlt
ficomps
adc
scas
jecxz
push
clc
frstor
iret
ss
lods
jmp
cld
addr16
data16
jle
pop
and
dec
hlt
pushf
inc
fldenv
xchg
out
dec
gs
fucomip
jg
push
repz
xchg
or
sbb
loop
dec
lret
incl
lds
mov
xchg
and
cwtl
decl
je
int3
aad
jecxz
dec
xor
or
mov
or
mov
movsl
cmp
fisubs
lcall
fldcw
cmpsl
xchg
jmp
mov
lock
stc
push
cltd
jg
xor
push
call
add
cli
sbb
or
out
push
das
repnz
push
gs
push
pushl
push
push
xchg
hlt
xchg
test
test
out
cld
decl
sbb
mov
pop
incb
mov
mov
mov
data16
pop
nop
movsb
mov
repnz
xchg
and
dec
cld
in
outsb
jns
enter
dec
lods
and
adcl
loopne
outsl
cmpsb
add
je
adc
mov
dec
jmp
lahf
mov
mov
or
add
jnp
aam
call
jae
ret
and
popa
adc
xor
imul
jmp
addr16
jle
loop
push
push
sbb
rcrb
sub
lret
cwtl
sub
lock
fnstenv
ja
sar
cli
xchg
inc
sub
pop
add
adc
pop
rcrl
push
jae
jg
dec
rolb
std
mul
jnp
iret
push
push
mov
pushf
test
lcall
int
mov
jecxz
and
out
cmp
aaa
and
mov
inc
mov
or
fcoms
test
sbb
cmp
jns
sub
decl
xlat
or
pop
lock
in
popa
adc
dec
jmp
dec
lods
fnstcw
clc
jg
push
and
addb
sahf
es
pushf
cli
xchg
cmp
push
out
mov
call
sub
sub
adcb
dec
outsl
lock
xor
or
wbinvd
mov
xor
jmp
mov
jae
daa
mov
jge
pop
arpl
mov
xchg
dec
or
add
push
aas
cmc
lock
ds
sub
push
xchg
mov
mov
dec
or
aad
imul
jle
push
sbb
mov
cld
mov
or
out
out
dec
test
gs
push
jmp
adc
ds
movsl
mov
mov
je
stos
and
loopne
push
stos
jbe
and
cli
ret
push
enter
es
add
inc
sub
call
decl
cwtl
inc
xchg
jle
fwait
in
cmp
push
push
arpl
lret
loop
das
hlt
es
out
out
js
dec
stos
into
mov
incl
inc
dec
aas
add
sarl
daa
fwait
adc
xchg
pop
mov
cmp
das
pushf
mov
push
push
dec
jns
jae
cltd
mov
jmp
mov
jecxz
mov
dec
pop
add
in
repz
and
mov
ljmp
adc
inc
inc
adc
test
fs
jmp
pushf
mov
repz
and
adc
sub
dec
sub
lods
movsb
jno
adc
push
ljmp
imull
dec
sbb
dec
cmpsb
push
cmp
stos
movsl
sbb
sbb
xchg
lret
add
arpl
fidivrl
jne
call
and
sahf
je
mov
adc
insl
jnp
xor
adc
jns
inc
mov
pop
jmp
iret
imul
mov
jle
out
ficomps
loop
fs
add
and
jg
xchg
shlb
mov
fistl
or
jmp
lcall
ljmp
loopne
call
int3
scas
xchg
mov
or
cmp
jbe
pushl
sub
scas
jmp
inc
les
lods
jno
xor
outsl
icebp
icebp
mov
push
out
movsl
daa
sahf
lcall
lcall
push
fcoml
idiv
decl
sbb
push
stc
adc
inc
push
imul
pop
adc
lcall
inc
out
loope
jmp
fisttpl
outsb
xchg
jae
mov
jno
pop
sub
cmc
mov
jmp
jmp
pop
or
jl
mov
fildll
xor
pop
je
leave
rcrl
cmp
jno
out
mov
int
sar
add
jg
jno
lods
add
lcall
std
jmp
mov
stc
inc
jge
cld
inc
push
inc
xchg
xchg
jge
jle
mov
bswap
out
rclb
pusha
pop
jae
mov
sbb
subb
std
lods
daa
sub
adc
pop
incl
fwait
jmp
or
jns
test
int3
mov
pop
or
xchg
add
cli
mov
repnz
mov
jmp
hlt
std
pop
mov
mov
fcmovu
push
pop
push
push
mov
nop
mov
pop
jg
jmp
sbb
stc
test
sarb
ljmp
lea
mov
fisubs
sbb
aam
push
or
addr16
xchg
lcall
mov
out
xor
neg
pop
popl
das
mov
call
test
adc
mulb
push
xchg
push
cld
pop
inc
enter
sub
mov
add
mov
stos
insl
inc
mov
adc
mov
cmpsl
xchg
mov
shlb
dec
adc
fistps
xor
sarl
jnp
push
imul
and
dec
mov
inc
xor
out
push
mov
daa
aaa
call
inc
jbe
sub
dec
dec
aad
repz
push
decl
cltd
lock
fnstsw
push
scas
pop
cmc
es
lcall
mov
repz
and
mov
mov
into
add
dec
pop
xlat
in
pop
scas
mov
call
out
hlt
adc
dec
insl
jecxz
xorl
out
ds
jmp
lahf
lds
outsl
into
es
push
jbe
jnp
xchg
inc
pop
loop
xchg
in
cwtl
pop
lahf
sub
loope
push
subb
ret
ljmp
mov
jg
jo
dec
ss
iret
cld
mov
jle
add
mov
outsb
dec
add
ja
decl
xor
das
les
popf
mov
fists
pop
xchg
xlat
ficomps
mov
jnp
xor
sbb
cld
jno
mov
cltd
cmpsl
flds
dec
adc
dec
mov
ret
sar
sub
sti
jmp
or
jns
fs
repz
out
inc
pop
xchg
or
xchg
jno
jle
sbb
jecxz
les
jmp
jg
adc
mov
lea
les
rcrl
js
outsl
cld
pushf
xchg
fs
pop
test
test
mov
push
popf
xor
repz
mov
pop
cli
inc
or
push
nop
push
jb
les
inc
in
in
cmp
cltd
out
inc
push
shl
sbb
cli
pop
loopne
mov
jmp
enter
jp
mov
mov
jle
into
push
les
repz
or
loope
int
pop
int3
and
xor
cld
loop
push
xchg
rorb
loop
add
iret
imul
cmp
loop
mov
outsl
cld
incl
push
aaa
aaa
fcoml
je
add
out
pushl
mov
adc
sahf
aam
enter
cmc
xchg
cmp
int3
sbb
nop
sarl
jmp
pop
enter
nop
push
cli
pop
dec
sub
jno
call
jle
mov
cld
in
mov
mov
js
ljmp
aas
sbb
dec
out
shll
rorl
sub
addr16
mov
dec
incl
jecxz
push
jno
sbb
dec
je
add
nop
xchg
cmc
or
push
adc
into
fsubs
incb
or
pop
lret
fmulp
outsl
std
sbb
jmp
hlt
jbe
mov
and
dec
loope
jb
mov
sub
repz
aaa
in
and
daa
mov
ljmp
faddp
scas
cmp
push
aaa
pop
jge
push
adc
lods
mov
mov
dec
sub
cmpsb
cli
fwait
inc
clc
or
enter
fisttps
add
pop
std
scas
lcall
movsb
daa
cmpsl
test
and
decl
stos
mov
or
pop
mov
loope
jg
shll
sbb
xchg
imul
rcl
sub
mov
aaa
inc
fists
aas
or
inc
rcl
das
sbb
fists
jmp
insl
push
icebp
mov
xchg
test
sbb
pop
push
inc
fimull
in
test
decl
loopne
mov
nop
scas
sub
or
inc
scas
cmp
pushl
sbb
das
sub
xchg
inc
popa
add
fsubrs
aad
orl
call
pusha
movsl
xor
test
pop
decl
add
popa
outsl
add
stos
clc
adc
loop
insb
cmp
push
fcmovne
sub
add
or
jl
clc
ljmp
insl
icebp
inc
push
mov
cmp
mov
mov
ljmp
xchg
out
or
jo
dec
les
out
sbb
lret
sub
or
call
dec
add
loopne
sbb
xchg
mov
inc
sti
pushf
out
mov
push
clc
push
jg
decl
and
add
inc
xlat
outsl
sbb
lcall
repz
xchg
push
jp
aas
lods
sahf
or
lock
jg
cmp
inc
xor
gs
sarl
cmp
lcall
and
jg
pusha
push
sub
xchg
sub
int
mov
push
nop
es
in
popa
ljmp
adc
push
mov
xor
bnd
test
push
int3
add
daa
sub
lret
mov
pop
xchg
sbb
xchg
fcmovnb
das
andl
lods
push
test
test
outsl
sbb
loope
push
mov
lds
mov
inc
ret
cmp
cmpsb
add
call
fildl
or
mov
push
repnz
mov
jp
jg
stos
test
jmp
mov
lcall
in
jns
insb
mov
fisubrl
jmp
lea
mov
jbe
mov
push
xchg
cmp
ficoml
pop
cmp
push
sbb
xchg
xchg
cmp
lods
add
sbb
cmp
mov
jmp
jg
pop
call
inc
adc
push
sub
pusha
xchg
sbbb
fdivrl
or
nop
aaa
or
repz
jo
jg
lods
mov
lods
push
addr16
pop
stos
mov
inc
xchg
scas
push
dec
dec
cmc
popf
idivl
mov
fsub
add
pop
call
lea
xchg
pop
cwtl
add
addr16
stc
mov
aam
add
addr16
push
adc
mov
clc
clc
sbb
mov
test
pop
add
mov
imul
pushl
and
sub
xchg
ds
sub
cmp
call
pop
pushf
aam
ja
push
cmc
incl
fadds
lret
jg
cmpsb
mov
cmp
sbb
ljmp
rorl
inc
add
mov
cmp
xchg
aas
fs
xchg
imul
push
lds
add
addr16
mov
scas
jge
mov
mov
daa
or
decl
cmpsl
add
repnz
xor
pop
sbb
mov
cld
pop
sbb
outsl
push
pop
mov
out
cltd
mov
cmp
mov
imul
add
in
adc
test
cli
pop
call
fwait
sbbb
push
out
cld
ljmp
repnz
pushl
in
leave
repnz
lds
or
push
fistpl
dec
sahf
aad
stos
ss
call
xchg
clc
adc
inc
out
xchg
dec
push
mov
pop
mov
inc
jno
fdivr
jmp
cmp
mul
lret
pop
xlat
fistps
sub
jecxz
inc
imulb
lds
cmp
arpl
ja
dec
add
mov
mov
jp
hlt
pushl
stc
push
ds
jne
pop
test
sahf
pop
test
cltd
out
sbb
sbb
mov
push
test
stos
or
cwtl
mov
xchg
dec
lcall
aaa
jp
call
in
sub
push
mov
pushl
rcrl
jl
dec
cmp
dec
jnp
scas
xlat
pop
xchg
lcall
lret
fsub
cli
jmp
sbb
mov
out
fcomp
ljmp
loop
leave
xor
mov
lret
test
jecxz
adc
lret
hlt
fildl
fimuls
xchg
shr
pop
push
movsb
jmp
int3
in
xor
sub
cli
outsl
jns
sbb
je
and
nop
xor
fildl
xlat
cmp
call
int
mov
test
xor
mov
pop
mov
lods
clc
jg
adc
adc
fcoml
adc
fs
stc
in
push
xor
lcall
or
cltd
sub
repz
sbb
jl
lea
and
dec
mov
movsb
or
incl
adc
cmpsl
popf
ret
sbb
jmp
out
cmp
add
icebp
in
and
xchg
mov
loope
sub
jns
loope
push
mov
loopne
xchg
jbe
stos
dec
xor
aas
cmp
xlat
cmpsb
sti
mov
insl
pop
inc
sbb
jb
jmp
sub
jbe
mov
push
lds
and
ds
pop
fisttps
dec
das
inc
jge
cld
jg
inc
inc
inc
adc
mov
lods
mov
push
int3
rcll
inc
lds
sub
jg
addr16
adc
scas
add
pop
dec
shll
or
or
mov
xchg
out
adc
xor
outsb
mov
test
daa
int3
je
movsb
xchg
out
xor
lret
mov
movsb
nop
outsb
ud0
call
ss
ret
inc
icebp
jns
pop
int3
xchg
shrb
stos
xchg
gs
les
mov
icebp
loop
add
dec
int3
pop
in
xor
push
std
lcall
shrb
ret
lods
aam
cld
sub
lahf
jbe
jo
cmc
inc
repz
cmp
jg
sbb
inc
inc
lahf
push
jp
adc
movsl
xor
lcall
and
lock
cld
fcomip
cmp
mov
jbe
repnz
fptan
dec
dec
std
jmp
mov
cmpsb
jo
push
dec
stc
xlat
xor
out
cmp
call
clc
call
sti
stos
popf
xchg
and
movsb
or
call
adc
testl
nop
dec
cmpsl
lock
mov
sub
or
out
add
pushl
les
lret
push
pop
lret
inc
and
jbe
loopne
xchg
movsl
out
decl
icebp
jp
sub
cmpsb
push
cmpsb
leave
adc
pop
repnz
cli
sar
dec
jle
lds
ljmp
lock
scas
loopne
mov
jb
xchg
pop
es
imul
cmpsb
mov
lcall
pop
popa
arpl
xchg
test
mov
mov
mov
loope
mov
mov
stos
pop
sbb
sub
push
fsubrl
arpl
test
out
cli
ljmp
outsl
fmuls
int
inc
mov
sarb
test
cmp
sbb
cwtl
movsw
sbb
dec
pop
lds
dec
loope
scas
pusha
fcomps
xor
test
xor
icebp
push
out
xchg
pop
jmp
sub
js
and
pushl
outsb
xchg
pop
mov
lret
mov
fmull
mov
movsl
inc
xor
leave
cmp
dec
add
ljmp
icebp
lcall
add
dec
add
cli
inc
int
mov
and
or
ret
or
fucomip
pushl
jo
out
les
xor
mov
fcos
jmp
jmp
mov
inc
rcr
int3
inc
iret
push
nop
xchg
pop
pop
cwtl
lret
ja
mov
sar
hlt
cmpsb
cwtl
fsubs
cmp
pop
or
mov
repz
pushl
maxps
or
dec
pop
push
out
sarl
push
fnstsw
imul
in
mov
fcmovne
das
fiadds
gs
sub
and
sbb
decl
mov
dec
fs
in
push
xchg
push
lods
dec
mov
sbb
aad
test
incl
sub
dec
cwtl
call
mov
xchg
add
icebp
inc
cmp
stc
sub
testb
ljmp
jle
pop
inc
push
jmp
imulb
mov
je
fwait
cmpsb
pinsrw
lea
popf
out
cmp
sub
sbb
dec
or
pushl
rclb
xchg
iret
pop
data16
xchg
cwtl
jne
hlt
lret
enter
int
int
in
pushl
lods
cmpsl
xchg
inc
sbb
jb
out
pop
or
ljmp
arpl
cmp
or
jnp
lods
cmp
movsl
rcrl
imul
lcall
ret
enter
mov
inc
cmp
test
cmp
test
fbstp
shr
in
lcall
xor
testl
movsl
shlb
call
sti
test
jne
xor
fnsave
sub
bound
lods
sub
mov
jns
mov
jmp
loopne
cmpsb
and
sub
pop
movsl
gs
and
sbb
and
or
outsl
mov
pop
push
scas
xor
loop
pop
out
ficoml
jmp
out
mov
mov
mov
cmc
test
push
es
sub
loopne
jmp
jo
pop
cmpl
lahf
or
and
daa
decl
decl
fisttpll
inc
add
jmp
inc
xchg
and
jmp
jae
aad
cwtl
add
nop
pop
mov
ret
mov
incb
dec
repz
and
ja
int
pop
xchg
fcompl
mov
dec
repz
pusha
or
lcall
stos
mov
sub
cmpsl
addl
mov
dec
sub
mov
inc
push
push
in
icebp
call
sbb
sti
popf
ss
fs
clc
insl
arpl
ljmp
jge
or
sbb
test
lods
rcrb
pop
shlb
inc
jg
incl
stos
fists
ds
mov
jecxz
decl
shl
sbb
dec
push
pop
xor
xor
or
and
or
lcall
inc
inc
aad
inc
pop
mov
sub
and
xor
sub
pushl
mov
lock
addr16
stos
jno
stos
mov
push
outsl
pop
add
and
ljmp
shlb
ss
xchg
ljmp
hlt
pop
out
dec
sarb
inc
decl
std
outsb
scas
inc
jl
cmc
pusha
xchg
mov
mov
mov
inc
mov
cltd
pusha
inc
jmp
fmull
std
call
adc
pop
aaa
mov
lcall
dec
cmc
dec
call
out
dec
mov
hlt
aaa
xchg
sbb
flds
lock
nop
mov
in
mov
mov
xor
and
pop
out
add
addb
xor
lds
lea
pop
loop
lcall
call
subb
xor
sbb
mov
out
adc
negb
pop
das
jae
xchg
shll
cli
mov
pop
pop
cmp
fwait
shrl
push
dec
aad
std
add
mov
dec
pop
cmpsl
mov
sbb
xor
cli
lret
push
mov
popa
jp
jo
pop
mov
or
lcall
loop
dec
jne
jbe
jae
into
dec
clc
test
shll
cs
lods
sbb
out
push
ss
sub
xlat
subl
leave
mov
pop
pushf
cltd
shl
outsb
mov
xor
xchg
incb
xchg
cmp
repnz
fs
cmp
fwait
add
inc
out
mov
pop
pop
or
adc
scas
xchg
xlat
xlat
pushl
cwtl
lcall
push
mov
add
sub
out
ret
dec
std
jg
incl
xchg
inc
aaa
addr16
bound
dec
mov
shll
jg
or
repz
add
in
daa
pop
ficompl
mov
push
xor
sbb
decb
lcall
inc
mov
es
mov
ljmp
insb
lret
mov
jle
cwtl
mov
mov
pushf
imul
loopne
fstpl
test
lock
insb
in
add
xor
outsl
cld
jg
xchg
push
mov
icebp
fistps
dec
testl
lock
clc
call
dec
push
clc
xor
push
pop
lahf
arpl
mov
popa
jne
adc
mov
stos
inc
pushf
js
cmp
out
incl
xchg
jmp
cmc
inc
daa
pop
movsb
sub
rclb
pusha
out
add
popf
lock
mov
rol
xor
inc
xor
cmp
int3
je
cvtps2pd
jg
enter
xor
test
inc
mov
or
loopne
ljmp
inc
adc
push
sub
daa
inc
mov
pop
cmpsl
pop
add
addl
decl
pop
jne
ret
xor
mov
mov
movsb
insl
mov
incl
adc
add
mov
push
sub
loop
cmp
mov
sub
push
lods
inc
hlt
jg
adc
test
outsb
mov
pop
push
jle
lcall
jo
dec
mov
loopne
sti
shlb
mov
fisubrs
popf
or
sbb
jne
movsl
push
sarb
inc
dec
xor
pushf
push
mov
jle
or
fidivl
call
mov
std
fnstsw
fistps
pop
cld
incl
push
dec
adc
aad
push
or
rolb
sbb
fnsetpm(287
adc
mov
psubd
pop
imulb
test
cs
cltd
fdivrl
pop
add
jecxz
xchg
xor
push
push
lcall
jecxz
xor
and
icebp
lcall
sub
inc
mov
inc
xor
ljmp
fcomip
ja
adc
mov
push
cmp
inc
mov
std
and
test
add
scas
cmp
mov
sub
mov
sub
push
loop
out
fisubrs
xchg
rcr
sub
or
jns
call
clc
ja
je
insb
pop
jb
lds
jmp
add
rcrb
cmc
pop
mov
scas
pop
pop
adc
mov
int3
lret
xchg
sbb
cltd
scas
dec
cmpps
mov
ds
xor
push
dec
xchg
lret
negb
add
orb
ljmp
cmc
xchg
jge
out
xor
leave
mov
sub
pushf
les
mov
jmp
inc
sbbb
popf
sbb
cmovb
ficomps
cmc
dec
sub
pop
cmp
sbb
hlt
aaa
fcmove
add
mov
dec
push
inc
adc
das
cld
call
mov
imul
jp
fs
mov
decl
adc
mov
and
movsb
mov
arpl
mov
xor
int
es
ljmp
lock
cmpsl
loope
lock
adc
ficompl
rorl
and
sbb
out
pop
ljmp
shll
lret
popf
rorl
adc
pop
adc
dec
add
or
dec
out
shrl
jmp
lahf
mulb
xor
and
adc
pop
popa
mov
fsubrl
mov
jg
gs
call
jne
in
es
das
dec
pop
xlat
dec
sahf
jno
fcmovbe
xchg
push
jnp
sti
xchg
ljmp
cld
aaa
cmp
test
xchg
pop
xchg
sti
bound
add
mov
sub
incl
cmp
dec
fadd
enter
mov
pop
mov
and
xchg
jbe
xchg
pop
xchg
xor
mov
cmp
stos
cmp
les
data16
fdivrl
add
sbb
lahf
decl
call
inc
sarb
in
adc
daa
ja
shlb
mov
sub
loop
lods
incl
pop
adc
jecxz
sarb
xchg
mov
pushf
test
aas
xchg
loop
mov
inc
sub
jmp
cmp
icebp
test
repz
in
clc
loope
sahf
sub
pop
cmp
call
stc
sbb
xchg
mov
and
outsl
call
js
stc
sbb
cmpl
xchg
xchg
mov
pop
in
dec
call
cli
call
lds
cmp
fidivrl
insb
sar
jb
pop
cmc
or
insb
push
mov
add
outsb
shl
jo
lods
lods
jp
xor
cmp
push
incl
or
lcall
popf
jbe
or
movsl
int
xor
pushl
mov
stc
shrb
std
mov
clc
sub
jbe
mov
xchg
or
jg
mov
or
push
mov
les
jmp
popf
hlt
dec
arpl
push
test
movb
inc
xchg
sbb
jne
push
jge
xchg
xorb
out
hlt
push
enter
outsl
cld
inc
dec
jmp
das
dec
movsl
and
and
or
pop
clc
jmp
xchg
sub
aaa
xlat
fmulp
fists
in
fcoml
cmp
jge
in
mov
jae
jecxz
nop
push
sbb
push
loopne
xchg
pop
jle
mov
jmp
ds
pop
jo
sbb
into
add
clc
xchg
pop
lock
popf
decl
pop
sbb
or
mov
loope
repnz
call
das
lock
lods
es
ret
pop
mov
stc
pushl
jae
ljmp
loope
lea
popa
lock
not
in
xor
pop
or
fiaddl
jg
xchg
nop
movsl
xchg
mov
and
xor
jle
das
lock
cld
and
out
mov
jge
xchg
pop
sahf
test
notl
pushf
mov
xchg
loope
lock
daa
xor
loopne
mull
imul
rol
mov
call
xor
xchg
dec
ds
pop
repz
inc
push
test
call
dec
scas
xchg
mov
aam
add
aas
sarl
das
lock
icebp
xchg
mov
pop
stos
arpl
add
stos
ljmp
cmc
and
mulb
jo
pop
lret
pop
jp
into
xchg
data16
or
jmp
into
ljmp
xchg
shll
faddl
xor
fstpt
movsb
jbe
mov
call
fidivrl
ret
scas
mov
jle
dec
add
push
push
js
push
jnp
xchg
dec
push
orb
sbb
andb
in
xlat
aad
into
nop
mov
cmp
mov
mov
sub
jmp
loop
fbld
cmp
lock
add
or
pushl
ds
sbbl
fldz
mov
sbb
pop
xchg
xor
sub
lods
xchg
jg
incl
mov
mov
mov
ret
mov
sbb
incl
leave
rorb
pop
cs
add
lds
push
push
pushf
cmp
xor
fdivrl
dec
lock
pop
fnsave
insl
jnp
jns
mov
sbb
call
sti
pushf
notb
pop
xchg
out
mov
push
sbb
loop
jnp
pop
cli
lcall
aam
ja
imul
daa
pushf
sub
icebp
xchg
jle
test
jmp
mov
adc
negl
ror
stc
cmp
ret
sbb
or
sub
xchg
jle
sub
jmp
dec
insb
add
push
pop
mov
cmp
icebp
repz
pop
leave
push
mov
daa
cmpsl
arpl
roll
xor
int
enter
inc
push
stos
call
test
aam
adc
push
addb
cmpsb
mov
dec
inc
lret
or
decl
xor
and
pop
pop
cmp
cwtl
gs
cmp
fisubl
cmc
into
mov
call
xchg
sahf
imul
push
clc
andl
push
inc
rolb
mov
in
subl
mov
bound
nop
sub
lods
sub
mov
xor
ror
jb
inc
lcall
cli
push
mov
jmp
and
xchg
inc
sti
movsl
lods
adc
sbb
mov
ds
xchg
mov
incl
lock
mov
cltd
or
or
test
and
xchg
adc
sahf
aam
mov
call
cld
add
or
repnz
lods
push
call
xor
add
outsb
cmpsb
dec
rol
cli
jmp
cwtl
lahf
aad
std
push
sub
outsl
add
inc
pushl
stos
bound
mov
jmp
or
jns
jp
out
cmp
nop
push
inc
iret
iret
ja
stos
jmp
addr16
xchg
xor
pop
inc
dec
popa
inc
ljmp
push
outsl
hlt
incl
push
adc
adc
pushf
mov
cld
fbld
dec
lcall
decl
add
call
ljmp
clc
inc
inc
jmp
push
dec
xor
adc
shll
in
or
mov
mov
call
mov
shll
sbb
pop
sub
outsl
inc
mov
push
jle
push
mov
ljmp
popf
loope
ror
push
dec
mov
test
dec
inc
dec
call
jg
sub
jp
outsl
mov
in
xor
xor
cwtl
mov
lcall
mov
jae
dec
mov
cmp
xchg
nop
cmpsb
ds
push
fmull
inc
je
pop
mov
jg
dec
dec
div
mov
test
lock
pop
pop
sub
cli
lcall
sbb
and
push
iret
inc
movl
test
fbstp
int3
jmp
inc
out
xor
enter
xchg
rorl
sbb
jne
xchg
int
decl
std
pop
jno
pop
lds
lret
push
in
push
call
pushl
int3
aas
mov
mov
sahf
jl
call
pop
inc
ds
lcall
xor
mov
iret
mov
jmp
add
orl
or
mov
or
mov
in
icebp
mov
adcb
push
inc
xor
sub
mov
bound
in
cmpsb
popf
pop
lahf
bound
jecxz
lcall
xchg
in
push
mov
inc
xor
pop
jge
mov
inc
xchg
jg
mov
adc
mov
mov
lcall
mov
pop
cmc
call
pushl
xchg
movsl
xlat
fucomp
rclb
lret
xlat
sub
fimull
aas
xlat
fbld
test
sbb
mov
xor
mov
iret
mov
xchg
ljmp
js
pop
ja
fbld
fs
jg
jmp
jbe
xchg
popl
jmp
ret
jno
or
in
dec
inc
dec
imul
addl
pushl
inc
fnstenv
jnp,pt
xor
nop
jl
jecxz
hlt
fs
pushl
stos
mov
out
cmp
bound
dec
xchg
jne
ljmp
rcrb
add
mov
jmp
cwtl
xchg
fistl
sbb
add
mov
add
ljmp
fs
add
and
cmpsb
aam
dec
notb
jns
mov
xchg
cmc
adc
cld
mov
xchg
xor
aaa
push
or
pop
ljmp
hlt
pushl
insl
mulb
cmp
cwtl
repnz
ljmp
lcall
or
adcb
push
cmp
aas
loope
movsl
push
outsl
lock
cli
adc
fstpl
pushf
sub
xlat
pop
test
push
out
adcb
adc
into
in
cmp
sbb
cmc
decl
push
fcoms
xor
in
or
xchg
mov
enter
jae
lock
repnz
inc
push
xor
dec
xlat
aas
mov
loopne
stos
jmp
cltd
mov
lret
add
insl
std
lahf
cwtl
ljmp
call
pop
fistps
ljmp
sub
and
pop
lret
dec
incl
out
fdivs
nop
mov
sbbb
jecxz
mov
shrb
adc
lcall
xor
mov
fistpl
sub
daa
or
imul
das
cld
ds
fcom
add
jge
rdmsr
jns
adc
jge
ret
jo
stc
push
xor
or
pop
les
pop
xchg
pop
push
jecxz
mov
aad
sbb
add
ljmp
js
inc
aam
and
xchg
icebp
ret
pop
xchg
pop
mov
jecxz
sar
scas
mov
fwait
push
add
fxch
stc
nop
shr
test
pop
inc
cmp
and
inc
xchg
cmp
out
adcl
or
sbb
aas
addr16
dec
adc
shrl
sbb
outsl
xchg
out
pop
xchg
pop
sbb
sar
bound
adcl
mov
repnz
push
mov
jecxz
repz
push
hlt
jmp
aas
pushf
jb
ror
sbb
dec
jmp
cltd
push
sar
out
cmpsl
loopne
pop
push
movsl
jno
je
nop
fisubrs
test
sub
xchg
xlat
inc
mov
js
call
cmp
ret
push
inc
imul
adc
mov
sbb
pop
lods
jge
imulb
xor
sti
call
inc
cmp
fcmovnb
jg
das
cmc
push
jp
mov
fstp
push
in
sahf
outsl
mov
mov
das
xchg
iret
movl
callw
or
cmpl
in
push
in
cli
or
cmp
mov
pop
pop
and
mov
fildll
mov
push
dec
push
mov
jmp
andl
add
add
dec
inc
add
sbb
outsb
mov
xor
cmpsb
jae
lcall
push
test
add
or
mov
dec
int
std
and
add
cltd
xchg
test
mov
jns
inc
ljmp
xchg
mov
cmp
aas
jp
pop
jmp
iret
or
adc
push
aam
std
xor
jg
or
mov
lahf
mov
fcomps
pusha
lcall
jg
mov
push
lods
xchg
mov
push
fists
out
adc
cli
pushl
mov
adc
push
in
leave
int
sub
ret
jmp
mov
mov
xchg
lds
ror
iret
ss
fiadds
fildl
inc
push
xor
add
and
repz
and
clc
call
pushf
adc
dec
imul
push
mov
mov
and
dec
pop
loopne
mov
call
outsb
dec
jge
mov
lret
aaa
adcl
sub
xor
mov
mov
push
xchg
add
notb
aas
ljmp
mov
popa
in
or
push
bound
mov
ret
dec
insl
xchg
lcall
mov
addb
mov
push
std
or
push
mov
scas
dec
jg
call
inc
dec
or
call
dec
push
xorb
jg
dec
and
push
sbb
sub
jo
cmp
mov
int
mov
faddl
mov
syscall
mov
aam
mov
pop
clc
sub
cmpsb
dec
decl
daa
and
ljmp
cmpb
test
xor
shll
add
lret
lock
rorb
decl
mov
outsl
dec
push
jo
mov
stos
lss
pop
ljmp
subb
int3
das
ds
mov
adc
adc
out
pushl
hlt
and
scas
inc
test
pop
jb
dec
shll
xor
aaa
cli
or
jbe
ret
mov
inc
adc
movsb
scas
jmp
inc
sub
call
dec
sub
adc
dec
cmpsl
mov
sarl
out
pop
loop
jmp
cmp
sbb
or
inc
mov
add
inc
cld
push
rcr
sarb
inc
dec
or
sub
loopne
lds
fadds
xchg
and
cld
mov
fldt
dec
add
mov
pushf
or
mov
idiv
mov
sbb
jnp
fiaddl
jg
push
lahf
stc
pop
inc
bnd
jp
mov
out
fdivrs
jmp
call
dec
cmc
test
dec
jg
shl
fst
mov
cwtl
adc
jg
loopne
negl
xor
and
mov
or
mov
fsubs
ficompl
lock
pushl
sbb
adc
xchg
pop
sbb
movsl
mov
xchg
or
push
notl
dec
pop
sbb
mov
mov
hlt
fcoml
rcll
enter
test
pop
jp
cmpsb
push
mov
sub
cmc
out
call
hlt
jl
push
je
dec
add
pop
cmpsl
insl
shlb
mov
xchg
pop
fisttps
ret
jae
aaa
jb
jno
insb
lea
hlt
jne
push
push
dec
loopne
jmp
push
das
mov
xor
push
das
and
scas
cmpsl
cmp
std
push
jmp
inc
adc
outsb
mov
aaa
cmpsb
andl
jl
call
pop
push
negb
movsb
pop
jne
xchg
mov
mov
mov
jle
sar
jmp
scas
adc
lret
icebp
and
sahf
or
shr
scas
add
enter
out
jnp
pop
ljmp
pusha
mov
ja
dec
fistps
adc
cld
cmpsb
push
push
mov
push
into
cli
insb
pop
sub
decl
xchg
xor
addb
sti
add
pushl
mov
mov
mov
dec
inc
sbb
js
push
scas
shr
shll
pushl
add
leave
adcl
aaa
xchg
jge
stc
add
cld
push
clc
loopne
mov
in
pusha
xlat
push
popf
cmp
xor
add
mov
xor
inc
out
call
ljmp
outsl
out
mov
scas
out
pop
dec
fidivrs
cmc
cmpsb
mov
fucomp
and
call
cld
add
nop
pop
xchg
loope
sub
jmp
jnp
cmp
mov
mov
shrb
fwait
int3
insl
sbb
rcll
adc
mov
pop
or
mov
test
sub
sbb
and
notb
rcll
cmp
sar
decl
outsl
lcall
add
imul
loopne
pusha
inc
adc
call
subb
movsl
popa
int
jle
mov
insb
test
xchg
decb
std
pop
cmp
out
mov
imull
add
jg
mov
stc
mov
inc
cmpsl
pushf
sbbl
xchg
stos
push
jae
dec
call
xchg
insb
rcrl
int
xchg
mov
xor
push
xchg
jb
jge
ffreep
lods
jle
lods
and
cmpsb
jl
fucomip
lcall
sbb
pop
je
mov
and
fsub
pushl
dec
mov
fiaddl
test
dec
adc
imul
mov
mov
sub
call
add
rcll
aaa
hlt
icebp
movsb
push
aad
das
idivl
leave
iret
shr
fucom
inc
adc
xor
rcrb
lea
in
push
sub
ljmp
jnp
xchg
into
flds
lods
mov
jecxz
inc
sbb
inc
stos
test
xor
int3
cwtl
cmp
std
lcall
out
xor
push
adc
test
adc
enter
jmp
lcall
xchg
push
adc
mov
lret
add
stos
shlb
mov
adc
and
mov
outsl
xor
pop
cli
lods
inc
daa
loop
or
pop
in
das
adc
push
xor
lcall
std
lahf
push
loope
push
mov
jb
inc
sub
ret
ljmp
outsl
jg
fidivs
xchg
mov
mov
call
out
push
adc
mov
in
mov
mov
das
and
jge
xchg
pop
sbb
adc
sbb
push
jnp
scas
outsl
lods
ss
std
mov
xchg
hlt
movsl
mov
popa
jg
mov
inc
cld
das
std
jg
xchg
stos
mov
jle
mov
paddsb
or
mov
lcall
cmc
or
aam
jo
je
mov
dec
add
sar
andl
lods
mov
cmc
push
scas
arpl
lcall
cld
jg
pop
xor
adc
sbb
es
inc
lcall
xchg
mov
idivl
stos
mov
test
add
fistpl
ljmp
int
add
cltd
into
mov
or
call
mov
jg
push
test
mov
fidivl
push
or
movsl
cmovo
and
lcall
gs
fldl
or
sub
mov
ss
decl
sub
lret
imul
dec
out
aam
and
scas
cmp
add
adc
pushl
xchg
jecxz
xlat
ds
sub
fsubrp
int3
xor
cmp
iret
mov
nop
push
xchg
aaa
clc
jp
lds
cmp
adc
fwait
mov
or
xchg
lahf
xor
fisubs
decl
sti
adc
jno
sbb
call
jg
dec
pop
push
mov
into
cmpsl
mov
dec
sbb
xchg
mov
pop
aam
cmp
push
repz
call
ss
pop
clc
inc
out
adc
mov
test
mov
es
decl
mov
mov
mov
in
lea
pop
sub
lcall
cltd
push
jmp
stos
repnz
push
or
dec
sbb
int
xlat
mov
xchg
pop
lahf
jo
add
ljmp
jge
sbb
pop
std
leave
inc
clc
mov
into
adc
aad
push
push
gs
popf
adc
jnp
push
inc
jmp
repz
cmp
pop
dec
push
adc
lcall
insl
mov
cld
sarb
jo
imul
aaa
or
xor
call
fsts
ret
out
lret
xchg
dec
cmp
cltd
cmp
xor
ljmp
lock
adc
jb
call
push
mov
mov
into
cmp
aam
scas
cmp
lcall
filds
imul
fistl
enter
jns
das
mov
js
stos
arpl
or
dec
in
pop
adc
inc
mov
mov
in
mov
mov
fcmovnbe
inc
lock
ss
jle
cmc
sub
int3
jmp
outsb
xchg
mov
push
lock
fisttpll
add
lods
fiaddl
pop
sub
in
sbb
sbb
add
out
ret
loop
sbb
add
lret
pop
call
fmul
es
push
rorb
dec
push
adc
loopne
call
decb
push
dec
gs
mov
and
divl
movsl
rol
lods
inc
out
mov
push
hlt
lahf
sub
stos
outsl
inc
push
mov
mov
adcl
dec
mov
mov
cwtl
mov
int3
test
cld
cvtps2pd
cmc
aam
dec
hlt
push
cmp
aaa
add
call
and
add
and
mov
xchg
jbe
adc
mov
ljmp
lock
dec
cmpsl
aaa
in
push
fisttps
sub
orl
mov
out
mov
sub
pushf
push
int
fucomip
mov
xchg
mov
clc
sbb
fistps
mov
mull
outsb
push
cmpsb
xor
incl
clc
dec
out
mov
out
dec
mov
jbe
and
mov
cmp
push
ljmp
jg
shll
subb
pusha
out
jmp
loopne
jp
out
jae
test
sub
ljmp
xchg
cli
call
mov
xchg
and
sarb
fiaddl
mov
hlt
int
and
negb
nop
cmp
mov
jnp
test
mov
push
adc
cld
fstpl
js
and
stc
dec
imul
mov
inc
cwtl
out
mov
popa
and
pushl
repnz
push
xor
sub
or
enter
test
add
in
mov
movl
aam
icebp
xor
ljmp
pop
cmp
dec
jmp
mov
or
dec
inc
dec
test
sbb
test
sub
mov
loope
adc
sub
int
pushl
sti
pop
mulb
test
jecxz
xchg
sub
stos
test
jg
call
jmp
mov
loop
mov
scas
hlt
call
int
leave
mov
and
dec
or
pop
test
push
mov
cmp
jno
leave
push
mov
ljmp
cmpsb
pop
mov
pop
xlat
insl
outsb
dec
mov
jnp
add
es
dec
lret
hlt
fucomip
ljmp
inc
pop
dec
xchg
sub
stos
fisttpll
or
ljmp
jg
cwtl
pop
sbb
adc
lods
fidivrs
sub
or
mov
sbb
xchg
push
jae
mov
loopne
inc
fmuls
daa
popf
gs
pop
jmp
mov
bound
add
mov
data16
or
push
lods
inc
mov
insb
jno
sbb
sbb
outsl
shl
sbb
jg
xchg
mov
call
loop
jmp
push
cmp
aad
mov
lret
sub
popa
or
mov
incl
leave
dec
notb
es
ret
lcall
pop
dec
add
and
pop
mov
ss
push
mov
iret
sbb
cwtl
mov
sbb
pop
call
sub
and
pop
fldenv
jge
test
lods
and
push
or
fmull
bound
mov
test
movsb
inc
mov
pusha
xchg
enter
jmp
cltd
dec
xchg
ljmp
lret
std
sub
xchg
pop
push
add
fimull
lcall
test
pushf
pop
call
push
jecxz
inc
push
imul
jg
incl
loopne
push
aad
xchg
or
jne
stos
shll
jecxz
or
std
incl
negb
and
mov
imul
xchg
jge
loope
jne
decl
and
popa
shl
or
cltd
and
pop
sub
jg
xchg
xchg
dec
es
les
fcmovnu
loopne
pop
das
xchg
movsl
and
cld
call
insb
push
inc
and
notl
lret
push
xor
loop
fidivs
jns
or
loop
rcr
dec
jp
pop
addr16
mov
jnp,pt
adc
mov
sub
int
mov
jb
je
inc
cltd
repz
out
in
ds
shlb
sbb
sub
sub
xor
mov
jmp
pushl
inc
enter
lds
inc
xchg
pop
add
test
sbb
jge,pn
sbb
pop
pop
push
lahf
sub
faddl
mov
xor
aam
or
outsl
or
jp
xchg
sbb
push
mov
inc
call
mov
test
push
mov
aaa
ja
pop
mov
negb
inc
imul
push
push
aas
push
dec
stos
inc
xchg
incl
push
inc
repz
or
or
popf
pusha
or
frstor
in
jg
pushl
cmp
adc
loope
cmp
dec
push
dec
sbb
pushf
lods
jmp
arpl
jmp
in
add
inc
out
adc
in
jmp
data16
xchg
incl
push
stos
imul
jns
or
dec
rclb
pop
xchg
int3
sub
iret
sub
mov
push
andl
push
jae
addr16
mov
sbb
aam
jg
or
sub
pop
subl
aam
ljmp
adc
or
xchg
or
roll
fsts
or
or
jp
sub
sbb
je
and
xchg
ret
adc
adc
sbb
lcall
clc
mov
ja
movsl
bound
jmp
inc
or
xor
ljmp
sub
rorl
cmpb
loopne
sub
or
js
scas
inc
mov
mov
dec
fadds
ljmp
jg
fnsave
pusha
idiv
int
add
mov
mov
mov
stos
les
sub
decb
sbb
ds
icebp
shlb
std
incl
ss
mov
jp
jns
ds
sbb
mov
push
sbb
pop
cmpsb
in
push
push
inc
jg
jg
jmp
add
gs
inc
orl
js
fcmovnbe
mov
adc
xor
mov
jp
movsb
push
stc
xchg
jle
cli
add
hlt
movsl
pop
out
inc
push
lret
je
cmpsl
cmpsl
and
mov
mov
adc
sahf
fwait
jb
int
inc
pop
cld
jg
mov
pop
jo
mov
aad
popf
xchg
push
sub
and
add
decl
popa
orb
xor
in
aam
mov
and
and
rcrl
mov
lcall
lods
pop
gs
rol
push
mov
jmp
mov
lret
pop
mov
jne
cmpsl
mov
leave
rorb
push
inc
mov
int
pop
shlb
mov
sbb
ljmp
xchg
sub
lahf
lock
test
jae
inc
scas
cmc
sbb
jmp
xor
mov
mov
js
cltd
fldenv
lock
test
lock
push
clc
dec
sar
lcall
mov
cmp
aaa
fwait
ss
mov
add
sbb
lea
fwait
jae
data16
cltd
in
rorb
jbe
pop
ss
mov
xor
and
loopne
xor
inc
mov
xchg
or
xor
adc
adc
subb
push
mov
inc
fcoml
inc
push
fs
gs
enter
iret
or
cs
stc
fmull
incl
dec
imul
shll
int3
and
out
lcall
xchg
sahf
mov
xchg
cltd
rcrb
mov
adc
xchg
pushf
xchg
jg
out
push
mov
clc
mov
jmp
pop
stos
xor
xchg
decl
lods
and
cs
pusha
scas
xchg
stos
imul
pusha
and
bound
scas
lret
jns
xor
push
dec
xchg
clc
cmpsb
lcall
out
sbb
jo
loope
cs
mov
repnz
sub
sbb
call
xchg
fwait
insb
lahf
mov
shll
sub
mov
sbb
scas
mov
or
jae
mov
sbb
repz
and
add
mov
push
push
dec
xchg
cmpsb
jp
fnstsw
jg
mov
inc
inc
xor
mov
mov
add
push
jmp
cmp
add
mov
scas
out
outsl
pop
mov
cmp
jmp
dec
jno
xchg
into
xor
jae
cmc
jmp
xchg
les
sub
in
jo
mov
hlt
adc
out
pop
xchg
push
cmp
fmul
icebp
xchg
mov
les
jae
test
cltd
pop
mov
ljmp
icebp
xchg
jb
sbb
xor
int3
ljmp
ret
int
lcall
ficompl
jnp
insl
mov
cmp
gs
repz
sti
mov
data16
sub
movb
pop
mov
movsl
add
pop
mov
jp
es
scas
imul
cmpsb
loope
nop
push
mov
pushl
out
out
mov
sbb
std
dec
clc
inc
push
jnp
sub
leave
mov
jg
jmp
and
loope
dec
or
cwtl
push
mov
fnsave
lea
mov
outsb
mov
cs
sub
jle
jmp
call
cmpsb
jne
or
jmp
cmp
xchg
aam
icebp
pop
loopne
xchg
or
sub
ret
jnp
lock
sub
adc
jge
jns,pt
xlat
jg
xorb
in
inc
insb
loopne
jmp
hlt
xor
add
addr16
call
or
insb
jecxz
rcl
je
pop
loop
xchg
clc
cld
incl
scas
ljmp
loop
dec
push
jb
mov
lcall
pop
mov
outsl
adc
mov
cmp
mov
and
and
in
mov
aaa
push
lcall
in
or
add
jle
xacquire
cs
add
ljmp
arpl
stc
mov
mov
push
and
call
pop
xor
in
xor
jno
xchg
sbb
mov
test
lcallw
shrb
ret
mov
cmpsb
sbb
cmp
push
orl
lahf
dec
out
cmp
in
std
mov
inc
int
in
int
pop
and
clc
xor
adcl
mov
pushl
negl
jle
inc
sbb
or
lahf
repnz
xor
ret
js
push
sub
hlt
fldenv
pop
in
or
mov
push
imul
shll
jnp
inc
das
jg
jl
out
xchg
pop
jae
inc
lahf
incb
xor
fwait
decl
inc
andb
jmp
cmp
inc
inc
jns
jg
lcall
stc
dec
pop
mov
leave
push
mov
pop
pop
cwtl
in
fucomip
or
hlt
lcall
jns
imul
adcb
or
das
cli
sarl
dec
xchg
sti
mov
xchg
insb
push
xor
mov
mov
in
sbb
jge
shl
xor
push
pop
mov
ljmp
das
mov
xor
popf
mov
mov
pusha
xchg
data16
incl
fwait
iret
leave
arpl
jg
jae
inc
scas
xor
mov
mov
mov
dec
ljmp
test
jnp
into
adcl
test
xor
mov
pop
jmp
in
clc
aaa
clc
ljmp
cmpsl
icebp
pop
data16
inc
mov
shrb
ret
and
nop
sub
lcall
pop
adc
ss
rcrl
scas
in
sub
jecxz
ljmp
lock
insl
pop
mov
pop
jmp
ljmp
je
push
stc
xor
adc
fwait
sbb
movsl
incl
incl
movsb
sub
sbb
mov
sub
fldcw
stos
inc
pop
out
aas
sub
mov
fcoms
ss
sti
fcoms
lods
fisttpll
mov
jns,pn
jle
inc
mov
push
inc
ljmp
push
push
adc
fidivrs
cmpsb
mov
push
shll
mov
popf
cmp
in
aad
lods
out
cmp
jg
pushl
aaa
xchg
insl
pop
mov
mov
jecxz
xchg
fimuls
idiv
das
cmc
pushl
aad
hlt
jmp
out
push
lret
or
jae
shr
cmp
push
call
sbb
xor
add
arpl
cmpb
shl
xchg
sarb
shrl
xor
or
sar
incl
mov
mov
pop
cli
movl
fisttps
fcoms
pop
jo
add
pop
xor
sbb
pushl
mov
negb
int3
je
les
frstor
test
in
cmp
inc
add
outsl
lock
call
inc
leavew
pop
cs
fmuls
push
rcrl
sub
add
decl
insb
cmp
out
xchg
jle
in
lret
adc
inc
cmp
cwtl
lds
cli
inc
and
push
and
out
lcall
jne
push
push
fisubs
inc
dec
cwtl
xchg
jbe
pop
push
pop
pushl
clc
pop
sbb
shrl
lahf
push
xor
inc
push
lret
in
ja
mov
cmp
mov
sub
cmp
pop
cli
mov
or
cmp
insl
push
cmp
and
jl
sub
shlb
loop
pop
mov
mov
pop
push
lret
pop
push
push
add
sub
loopne
movsl
and
xchg
push
mov
testb
pop
imul
add
sub
xor
insb
pop
mov
fstps
dec
ljmp
cld
sbb
into
cmp
xchg
scas
mov
mov
scas
stos
mov
xchg
fucomp
lock
sbb
insb
jbe
pop
jecxz
jl
es
arpl
mov
push
lcall
rol
dec
dec
sti
push
dec
mov
pop
leave
cwtl
push
in
popa
push
mov
inc
pop
mov
outsl
insb
test
mov
inc
or
push
test
orl
pop
xchg
xor
cltd
stc
pop
clc
ljmp
sub
xor
push
ja
repz
inc
sub
inc
or
add
stc
or
ret
sti
addr16
xchg
rorl
mov
jb
pop
jmp
in
mov
lock
jp
stos
push
arpl
sub
outsb
rep
enter
dec
mov
cmpsb
mov
fmull
cmpsl
inc
mov
bound
fildll
and
inc
stos
jmp
dec
jge
push
and
repz
sub
addr16
shlb
mov
xchg
or
call
inc
or
test
dec
cld
stos
test
dec
mov
mov
sub
aas
aaa
sbb
fucomip
decl
loope
inc
dec
test
add
in
pop
xchg
lahf
jno
test
clc
cmp
mov
dec
mov
popa
pop
and
adc
add
mov
mov
subb
repnz
pop
scas
loop
jmp
pop
jno
sbb
mov
xchg
adc
fmull
jae
pushw
jb
jge
xchg
cwtl
inc
sub
outsl
cmc
jg
or
aas
fwait
push
xlat
outsl
rcr
das
aaa
push
ljmp
jnp
adc
stos
ljmp
push
ret
out
cld
fdivr
xor
add
scas
pop
pusha
jecxz
push
sbbb
xor
mov
lcall
or
or
js
sarl
xorb
jecxz
hlt
fnstsw
loopne
inc
data16
ds
lock
ja
sub
ljmp
or
pusha
subb
dec
shlb
mov
ljmp
or
out
mov
mov
mov
inc
out
xchg
insl
mov
incl
ljmp
sbb
ds
in
inc
pusha
sahf
mov
sbb
mov
adc
movlhps
lcall
ljmp
out
mov
mov
rclb
xor
ljmp
ljmp
hlt
mov
lods
icebp
dec
scas
adc
dec
je
mov
call
out
push
dec
inc
out
push
jmp
cmc
in
leave
push
mov
jmp
jb
orl
mov
loop
test
insl
icebp
xchg
test
mov
ljmp
mov
aam
dec
faddl
dec
addr16
pop
and
mov
mov
ja
fldt
xchg
test
jne
jecxz
lods
lcall
xchg
mov
jmp
dec
sbb
xchg
in
xlat
adc
mov
mov
dec
repz
add
dec
dec
push
mov
dec
repnz
.byte
.byte
lods
.byte
.byte
ljmp
and
add
sub
xor
loopne
cmp
nopl
insb
mov
ljmp
imul
pop
cs
cmp
mov
add
inc
scas
ds
sub
jecxz
pushl
push
or
lock
dec
icebp
pop
xor
sbb
fldenv
pop
jp
fs
pop
shr
incl
out
push
push
push
sub
inc
add
pop
push
push
inc
rol
mov
sub
jg
fildl
lcall
popa
or
mov
dec
rorb
sbb
pushl
cwtl
jae
test
sbb
mov
add
ret
ret
aaa
es
jmp
lret
mov
mov
xchg
mov
fimull
dec
arpl
cmc
or
inc
mov
mov
decl
into
jno
mov
pop
push
push
push
push
push
call
jmp
iret
fiadds
add
xchg
sub
sub
sub
std
je
out
adc
push
adc
jbe
test
inc
jnp
int
outsl
loope
mov
xchg
push
lret
sub
sbb
add
ret
and
incl
or
test
hlt
lahf
outsb
xchg
js
xchg
in
inc
idivb
xor
loope
sti
lcall
or
xor
cmp
je
mov
ret
push
push
push
call
test
sub
pushf
sub
pop
jle
test
mov
jl
sbb
mov
mov
sub
pop
pop
pop
jmp
xor
xor
loope
jmp
xor
adc
leave
cmc
sbb
lea
gs
add
cmp
add
pusha
sbb
xor
inc
inc
jmp
shrb
dec
in
dec
jmp
jg
punpcklwd
pop
and
add
pop
add
repz
or
incl
cmp
std
inc
sbb
test
mov
sti
rcr
adc
xor
or
jo
push
lea
shr
pop
lods
ljmp
or
lret
push
add
mov
add
pop
push
push
push
push
push
xchg
loope
call
add
loope
jge
adc
push
stc
frstpm(287
add
push
call
fs
test
push
adc
fs
lock
or
and
popa
adc
cli
mov
and
test
add
not
xor
insl
call
push
sub
not
pop
cmp
outsb
cmpb
dec
adc
les
or
test
in
pop
and
ret
push
dec
sub
pop
pop
jmp
mov
cld
push
cmp
cmp
ret
loop
add
not
pop
pop
cmp
add
test
sub
stos
sub
sbb
jmp
xchg
jmp
sub
jmp
xchg
cld
or
inc
cwtl
jmp
mov
jg
xchg
outsb
popa
into
push
add
sub
sub
jle
call
fcmovb
jecxz
add
inc
pop
pop
lods
rcrl
cmp
stos
addl
daa
incl
nop
push
lea
pop
push
ror
dec
mov
jo
or
inc
sub
xchg
pop
push
sbb
xchg
push
push
xchg
movsb
mov
sub
fwait
nop
pop
push
dec
add
pop
nop
pop
nop
pop
push
add
inc
pop
incl
rolb
dec
inc
push
add
add
pop
ret
jg
or
cmp
addr16
push
lea
mov
add
sbb
pop
push
jmp
cmpsl
jmp
adc
push
pop
pop
jmp
out
sbb
cmp
ss
push
dec
mov
push
push
call
ret
dec
das
cld
jb
and
push
add
cmp
addb
mov
mov
imul
pop
bound
add
mov
push
push
add
mov
xor
add
jg
addr16
out
push
call
pop
sbb
jbe
loope
movzbl
push
pop
ljmp
fsubrl
sub
push
push
xor
mov
aaa
lods
insl
data16
mov
addb
or
out
or
les
xchg
cmp
cwtl
in
and
mov
test
lret
sbb
jne
sbb
clc
sub
push
adcl
leave
xor
jmp
or
out
dec
mov
shl
jb
movsb
and
fsubrl
push
sbb
mov
push
mov
add
pushl
push
push
push
push
call
jbe
add
adc
mov
sub
push
stos
push
jp
sbb
push
pop
fsubrs
std
cmpsb
xor
or
mov
imul
ret
mov
stos
icebp
lock
out
outsl
hlt
scas
out
push
push
in
movsl
mov
loope
adc
call
and
data16
mov
push
sbb
mov
and
rcr
mov
cmp
pop
pusha
pop
jmp
ret
aam
mov
add
icebp
xor
inc
mov
jmp
int
movups
push
push
shl
pop
call
mov
or
push
push
sbbb
add
push
push
call
sbb
push
or
sub
adc
not
pop
sub
sub
add
mov
aam
test
xchg
jmp
dec
dec
pusha
inc
mov
sub
gs
or
xchg
aam
aad
push
push
or
orb
push
cld
mov
int3
push
sub
ror
add
mov
add
pop
mov
stos
inc
ret
icebp
pop
mov
lea
lea
cld
psllw
rol
pop
ljmp
mov
dec
lea
jp
pop
jmp
jmp
sbb
sbb
dec
xchg
push
xor
pop
mov
rcl
or
xchg
push
insb
lock
push
xchg
mov
mov
decb
push
push
push
call
cmp
adc
push
ljmp
pop
push
push
cmpsl
mov
cmpsb
push
mov
xor
jg
adc
push
xor
add
jmp
ret
adc
mov
and
loopne
pushl
jp
jmp
ror
xor
pop
pop
mov
jmp
push
sbb
popa
lret
inc
pop
js
xor
sub
jmp
xor
add
push
push
push
push
push
call
and
movl
iret
pop
push
mov
lret
ret
add
js
sub
xor
pop
xchg
adc
xor
sbb
pop
mov
mov
ror
pop
add
push
pushl
push
push
push
in
push
push
lods
or
jl
push
pop
js
pop
add
dec
decl
fcos
jae
popl
mov
push
dec
inc
push
xchg
pop
call
testb
add
adc
sarl
xlat
mov
shll
rolb
xchg
cld
pop
inc
nop
nop
xor
push
xor
adc
loope
push
mov
ljmp
inc
nop
push
lea
pop
nop
cmpb
and
lcall
std
and
push
push
call
and
shl
inc
or
test
mov
mov
push
dec
pop
ljmp
xchg
or
lret
xor
adc
mov
nop
cmp
jb
push
and
cmp
pop
lret
push
xor
add
not
mov
mov
push
xchg
icebp
fistpll
add
and
ja
lcall
mov
push
xor
dec
sub
pop
or
fistpl
inc
adc
stos
pop
dec
adc
mov
test
rcll
jmp
inc
sub
sbb
icebp
sbb
sbb
and
inc
jmp
xchg
pop
pop
leave
ret
js
pop
lcall
and
add
loopne
push
jmp
sub
pop
pusha
shr
sbb
xlat
mov
shll
cmc
xor
filds
push
lock
testl
xor
mov
inc
outsb
jmp
dec
and
in
or
out
and
jmp
es
mov
pop
and
jmp
pop
push
push
push
push
push
push
add
xor
push
push
call
adc
xchg
sub
test
mov
jae
push
fisubs
xchg
lods
sbb
add
sub
ljmp
add
andl
leave
outsb
lcall
loopne
cmp
sbb
xor
add
jmp
std
cmpsb
pusha
xchg
fidivrs
add
pop
imul
or
or
adc
sbb
adc
push
js
sbb
and
fwait
sub
repz
jmp
das
inc
xorb
jmp
mov
push
cld
and
test
lea
mov
add
ljmp
pop
push
push
lea
sub
ror
mov
sar
push
mov
aas
pusha
lret
xchg
int
pop
add
inc
out
mov
sub
push
aam
int
add
xor
sub
pop
add
fistpll
gs
in
mov
push
push
movsb
sub
fimull
repz
pop
decl
enter
jmp
sbbl
jmp
gs
jne
cli
push
jmp
in
cld
mov
mov
push
sub
rol
mov
jbe
add
gs
inc
pop
sub
push
clc
ss
inc
and
cmp
lock
add
push
pop
push
push
inc
mov
mulb
push
cltd
dec
out
sbb
push
push
push
push
lods
and
jp
stc
leave
jg
cmpsb
jg
push
call
and
add
mov
loopne,pn
mov
js
sahf
pop
dec
mov
push
dec
push
sbb
aaa
out
push
test
test
lods
push
add
push
mov
dec
dec
sbb
aas
mov
push
je
jmp
imulb
or
mov
jmp
pop
sub
out
push
push
push
lods
dec
inc
sbb
cmp
movsl
jmp
adc
cmc
push
sub
not
mov
adc
cmpsl
dec
mov
inc
inc
mov
incl
adc
add
xchg
xchg
and
sbbb
lcall
jg
push
add
pop
cmp
lcall
test
in
decl
mov
xor
popa
or
xchg
ja
mov
in
push
xlat
pop
pop
out
loopne
ja
out
inc
mov
sub
sub
push
push
fstpt
and
cmpsl
cmp
or
std
inc
add
sbb
add
bound
and
cs
dec
addr16
pop
out
or
incl
add
rclb
testb
inc
mov
sub
or
movsl
sub
mov
add
sub
test
mov
in
xchg
cmp
and
jg
push
lea
sub
shr
pop
mov
popf
fnstenv
outsl
iret
iret
mov
adc
fidivrs
mov
mov
mov
lock
pusha
sub
cmp
sbb
cmc
imul
or
cld
sub
mov
add
jmp
sub
aad
movsl
inc
ud0
popa
push
dec
sbb
std
mov
testb
jg
mov
jmp
and
inc
xchg
nop
cmp
inc
jmp
bound
xchg
mov
xchg
inc
les
pop
jp
fdivrs
xlat
sbbb
mov
inc
arpl
push
dec
stos
jmp
dec
mov
cmp
mov
push
mov
dec
js
les
xor
loopne
incl
inc
inc
push
ror
shr
jge
not
mov
dec
jge
sbb
daa
push
push
inc
pusha
add
add
orl
or
inc
cs
dec
add
add
aad
sub
repz
inc
adc
hlt
scas
incb
in
xchg
jns
cmp
out
test
test
push
and
cmpsb
and
addl
jmp
ss
aad
push
lea
test
clc
cmp
pop
gs
cmp
jle
sub
mov
add
scas
pop
mov
sbbl
add
inc
shl
add
int
push
inc
rcll
xor
pop
adc
and
ljmp
pop
mov
pusha
xchg
inc
push
sub
xor
pop
or
push
mov
mov
push
push
add
mov
add
adc
mov
xor
imul
cli
rep
pop
imul
pusha
and
or
sub
jmp
cs
dec
or
popa
inc
mov
movsb
inc
jmp
inc
push
mov
inc
mov
xchg
inc
jmp
dec
loope
adcb
ljmp
add
int
add
fistpll
fisttps
repz
and
push
lea
rorl
mov
ret
inc
inc
jl
or
or
mov
sarl
and
jae
xlat
add
push
pop
pop
aad
sub
jmp
mov
jg
push
push
push
push
bound
pop
sub
add
stos
ljmp
push
mov
dec
inc
shl
ror
mov
pop
dec
push
in
rorl
push
out
call
sub
push
bound
testb
pop
and
and
loope
scas
sub
lcall
and
push
and
fs
je
je
adc
mul
mov
dec
cmp
and
sti
push
sub
arpl
mov
dec
lret
shlb
add
xlat
divl
inc
loope
popf
pop
sbb
or
push
cmp
mov
enter
jno
rorb
movsl
push
nop
dec
loopne
push
cmpsb
or
call
lds
rcll
inc
cmp
shll
roll
ret
dec
jmp
adc
mov
dec
add
push
arpl
inc
outsb
dec
dec
movsb
dec
ljmp
rep
pop
mov
add
jg
test
out
push
out
push
push
push
dec
adc
sbb
dec
loopne
in
dec
mov
dec
push
add
lock
inc
adc
aaa
ret
outsl
push
nop
inc
shl
inc
shrb
or
incb
cmp
push
inc
dec
cli
sbb
std
mov
push
inc
movsb
subb
imul
rcrl
cmpsb
dec
pop
push
hlt
scas
and
push
inc
pop
fidivl
dec
shll
add
les
and
pop
mov
push
pop
dec
adc
pusha
lods
push
lock
ret
std
repz
xor
inc
adc
dec
aad
pop
push
xchg
mov
dec
std
decl
leave
jne
push
shl
add
add
pop
pop
push
inc
add
ja
mov
hlt
mov
sub
dec
imul
daa
cmp
push
push
push
cli
adc
add
addb
inc
mov
add
sbb
push
addl
mov
fbstp
xor
cs
pop
rcrl
jb
sbb
sub
repz
inc
cli
or
lahf
pop
fs
test
in
push
jmp
sub
out
ljmp
jmp
mov
xor
gs
ds
dec
and
or
push
push
jbe
ljmp
push
add
pop
pushl
push
add
in
and
add
adc
sub
or
or
mov
lock
in
and
pop
pop
add
fdivrs
repz
sub
roll
inc
xchg
sbbb
inc
stos
repnz
subl
xor
pop
fisttps
mov
and
inc
sbb
movsb
movsl
clc
jmp
add
push
or
outsl
push
inc
jmp
xor
js
adc
add
and
add
bnd
push
push
push
jo
xor
push
push
call
pop
arpl
mov
pop
adc
cs
push
add
sbb
cmpsb
je
adcb
jmp
das
repnz
ficoms
push
and
inc
add
mov
shl
sbb
adc
mov
orb
jle
and
add
add
into
addl
sbb
or
hlt
cli
push
jmp
neg
push
lock
xor
shrl
sbbl
test
aas
pop
clc
mov
adc
pop
sbb
data16
adc
pop
jmp
sub
jmp
pop
loopne
push
insb
test
testb
mov
inc
mov
enter
push
xor
inc
jmp
cltd
sub
sbb
sub
xor
andb
decl
push
ljmp
adc
adc
pop
js
push
push
push
mov
or
mov
xor
pop
adc
lock
aam
sub
pop
jmp
jnp
mov
inc
dec
dec
pop
or
jmp
addr16
shlb
repnz
jmp
pop
pop
sarl
mov
push
movl
enter
out
movsb
js
push
loope
jmp
push
sbb
sub
clc
push
sub
inc
jmp
fwait
sub
leave
hlt
nop
cltd
jmp
fwait
test
or
dec
out
fildll
iret
and
add
jmp
adc
jmp
push
push
pop
inc
and
ss
cmp
add
push
push
add
rcll
lcall
jne
lods
push
and
jmp
roll
jo
push
fwait
push
call
adc
mov
xchg
jmp
and
lock
in
addl
pushl
stos
jg
or
and
push
push
call
or
or
sub
rol
adc
cmp
loop
pop
add
push
push
push
sbb
enter
xorb
pop
cmpsb
pop
push
mov
out
cli
cs
call
int3
pop
push
sub
mov
pusha
sbb
xor
jmp
sub
mov
dec
mov
and
add
push
sahf
js
push
dec
sbb
lcall
lods
sahf
mov
push
push
push
push
iret
dec
inc
and
mov
cli
push
addb
pop
dec
add
mov
sbb
cmp
xlat
mov
cltd
repz
jl
xchg
mov
scas
pop
mov
cvtdq2ps
push
pusha
cmp
clc
sub
inc
pop
mov
or
push
xor
loop
inc
and
add
and
outsl
sbb
push
push
std
mov
sub
lcall
loope
aas
sub
mov
rcr
cwtl
mov
std
add
std
pop
mov
mov
push
ret
pop
push
repnz
call
pop
mov
xchg
jmp
push
push
push
push
call
scas
popa
aas
adc
and
push
sti
fwait
insb
call
or
dec
mov
cmp
push
rclb
mov
test
cs
add
push
rolb
jg
rcll
xchg
rorb
cltd
incb
enter
inc
jp
push
call
push
nop
or
aaa
push
pop
pop
cmp
or
int
ss
js
inc
rcl
mov
dec
adcb
xor
xor
dec
sbb
pop
mov
je
jge
hlt
mov
xor
std
pop
rolb
fcomp
shr
or
mov
aas
lods
in
loope
call
mov
inc
inc
mov
rcrb
or
inc
push
adc
lea
sarl
sub
mov
inc
sub
sub
sbb
das
sub
rorb
stc
sub
inc
pop
ljmp
push
xchg
pop
jo
leave
adc
push
pusha
push
xor
jmp
fmuls
mov
mov
outsl
cli
pop
and
inc
pop
sub
je
push
rol
lds
pop
mov
mov
push
push
imul
mov
cmc
jne
push
insb
cs
add
cmpl
inc
sbb
dec
add
inc
movsl
cmp
pop
sub
shr
mov
push
add
jmp
sarl
jge
or
or
mov
cli
inc
movsl
sbb
add
add
outsl
cmc
mov
mov
test
loope
push
push
add
mov
rcll
nop
inc
sti
andl
lret
add
cmpsb
mov
lods
lea
shl
dec
pop
cmp
and
jmp
jo
repnz
divl
decl
jno
add
jmp
pop
loopne
leave
jp
movb
sbb
sbb
adc
push
inc
sub
sub
pop
sbb
shll
lods
adc
adc
push
in
add
dec
repz
incb
loopne
jmp
lods
push
repz
stos
pop
pop
add
shr
ret
mov
mov
inc
and
mov
sub
das
sub
ljmp
or
push
push
lea
add
cmpsl
nop
push
loop
mov
push
push
fbld
push
push
sahf
fwait
lret
pop
cmp
call
pop
sub
push
push
push
inc
pop
decb
push
mov
mov
jmp
push
xor
fildl
es
mov
mov
lret
fbstp
test
and
out
loop
dec
add
mov
push
testl
cmp
jo
or
mov
sbb
movb
pop
faddl
xlat
sub
pop
test
mov
add
mov
sub
sbb
add
mov
push
xchg
cmp
adc
hlt
mov
and
sub
popa
call
inc
inc
mov
rol
in
dec
push
add
lds
es
inc
xor
ja
aam
call
mov
leave
push
inc
addb
movsb
call
add
push
pop
std
and
cld
movl
xor
push
push
stos
int3
ljmp
idiv
lcall
das
push
push
push
push
call
mov
pop
xchg
push
push
inc
mov
push
push
push
push
call
add
jg
pop
xchg
sub
xchg
jo
lfs
fistl
std
mov
add
push
push
gs
cli
push
lea
das
cmp
push
add
icebp
mov
push
xor
adc
cli
fprem
push
dec
pop
test
inc
std
push
lds
orb
sbb
bound
add
loopne
dec
test
mov
inc
divl
shlb
jno
sbb
insb
ds
inc
mov
mov
loopne
mov
push
pop
xchg
add
push
call
add
jne
jg
inc
mov
aas
sbb
rclb
or
push
jg
mov
mov
mov
popa
add
call
shlb
stos
lahf
dec
popf
sub
add
push
nop
inc
cmc
ljmp
sbb
push
push
push
call
cmpsl
mov
mov
jo
dec
xchg
rol
pop
push
push
push
push
mov
push
testl
jp
hlt
push
add
das
shl
jmp
ret
jmp
std
push
jmp
jg
xor
testb
and
pop
sub
repz
bound
mov
incb
cmc
jno
lcall
add
push
xor
sub
pop
xchg
jmp
loope
dec
aas
push
call
lock
incl
negb
add
pop
into
xchg
movsl
call
lods
pop
push
dec
mov
test
pop
dec
hlt
or
push
lret
mov
in
push
sub
ljmp
push
call
pusha
les
pop
push
testl
out
add
divl
stos
lds
imul
sub
ss
test
sahf
add
cmc
lds
mov
stos
push
test
jl
cmp
adc
incb
mov
push
call
pusha
add
push
fldcw
mov
sysexit
aam
shrb
test
inc
test
mov
inc
hlt
inc
xchg
nop
push
aaa
clc
push
std
dec
inc
pop
nop
shrl
or
inc
ljmp
addb
cmp
cwtl
dec
jmp
mov
dec
or
cmp
aad
dec
rorb
sub
repz
push
pop
adc
js
jmp
les
mov
jbe
jmp
adc
mov
pop
push
loopne
cmovne
xorw
movsl
sbb
add
aaa
adc
inc
xchg
push
inc
gs
call
in
jae
jb
mov
je
adc
arpl
shll
inc
fldenv
jnp
xchg
add
das
mov
xor
sub
xor
pop
pop
push
push
add
call
sti
out
call
and
mov
push
dec
pop
mov
sub
and
pop
add
aaa
or
enter
gs
dec
inc
mov
xor
jb
movsl
sbb
or
mov
xchg
movsl
jbe
repz
pop
or
mov
adc
adc
sqrtps
dec
adc
call
mov
sub
pop
mov
mov
mov
in
pop
and
adc
in
fcom
xchg
push
push
cmpsl
mov
movsb
cld
pop
cld
inc
mov
shr
or
movsb
and
or
push
fwait
add
mov
shl
lret
ljmp
sbb
jmp
sub
jmp
sub
add
sub
push
push
roll
inc
xor
jnp
mov
inc
lea
jle
sub
jl
testl
or
push
lret
adc
out
add
shlb
xlat
scas
loop
pop
stos
adc
call
inc
adc
add
or
data16
fidivrs
mov
sbb
and
dec
push
hlt
push
mov
mov
push
lea
sbb
les
fwait
ud0
sbb
push
add
enter
roll
mov
fsub
popa
pop
dec
push
dec
sti
scas
cs
xchg
inc
daa
test
stos
mov
xchg
pop
mov
pop
sub
jp
sbb
loope
mov
pop
inc
loopne
mov
cld
push
push
push
call
add
fst
incl
xchg
repz
push
call
jo
lock
call
push
sub
inc
ret
shr
subb
dec
pop
pop
pusha
lock
idiv
mov
push
push
push
call
add
test
sahf
push
and
push
mov
push
push
push
push
push
dec
lock
call
adc
sub
shlb
push
jmp
jl
inc
sub
push
or
push
xor
mov
push
push
call
push
nop
inc
gs
loop
inc
shr
push
inc
rol
lahf
dec
lea
sub
or
neg
mov
rorl
out
push
push
call
subl
push
add
mov
fwait
push
rol
pop
pushl
mov
flds
sbb
aaa
inc
and
adc
sbb
test
and
and
cmp
jmp
adc
bnd
subl
cld
aas
gs
pushl
push
call
enter
xchg
call
call
adc
dec
xchg
xchg
ret
push
call
inc
dec
mov
test
mov
mov
lds
inc
mov
xchg
add
inc
and
ss
pop
aaa
lret
pcmpeqd
lcall
int3
mov
mov
pop
jp
fidivrs
repnz
sbb
add
xor
mov
xor
push
fsubr
xor
or
dec
mov
lods
dec
xor
out
sub
cmpl
insl
or
addb
fldenv
inc
imul
mov
push
mov
lods
pop
ljmp
ror
push
mov
jae
imul
loopne
lret
inc
dec
sar
xchg
aas
out
jbe
ja
idivl
dec
inc
cmpsb
js
cli
mov
ret
mov
cmpsb
int3
push
xchg
incl
in
jp
xchg
mov
ret
inc
inc
pusha
adc
adc
sahf
xchg
insb
iret
add
jmp
ljmp
cmp
scas
cmp
out
pop
jmp
pop
ja
push
xor
jae
fnstenv
int
loop
xchg
clc
dec
insb
movsb
daa
sbb
incl
popa
jmp
cs
aas
inc
mov
int
mov
ljmp
mov
in
fsubrs
inc
sub
in
xchg
add
or
sbb
sbb
push
cwtl
mov
shr
mov
jg
push
jnp
xchg
ss
pop
adc
scas
adc
scas
xchg
push
lcall
sbbl
push
push
pop
aad
adcl
insb
mov
or
pop
in
jg
call
mov
lds
add
jg
adc
les
inc
aaa
mov
loopne
pop
movsl
sub
loopne
push
jle
sarl
decl
shll
ds
mov
inc
jae
repnz
dec
sbb
or
xor
adc
stos
cmpsb
out
dec
adc
pop
sub
incl
or
insl
xor
inc
rolb
std
mov
std
add
jae
fstps
aam
out
push
jo
arpl
pop
mov
xchg
pop
adc
rol
or
dec
out
mov
jb
lods
inc
subb
add
nop
les
pusha
insl
mov
mov
and
mov
push
inc
scas
ljmp
shll
fsts
pop
jg
out
jmp
cmp
decl
ljmp
push
hlt
dec
test
scas
outsb
sahf
lcall
cmp
pushl
repnz
sarb
mov
mov
sbb
ljmp
int
adc
mov
push
bnd
aad
mov
add
dec
xor
sub
pushl
lcall
into
sahf
jns
xchg
bound
in
sti
repnz
stc
out
incl
clc
jo
pop
dec
push
and
or
sti
adc
decl
mov
fnstcw
push
loope
mov
pop
mov
incl
push
or
in
cmp
fsubl
push
testb
adc
stos
or
mov
out
fdiv
jp
sub
incl
adc
jge
ret
xor
aam
sbb
lods
cltd
cmpsb
sbb
je,pn
incl
call
jge
repz
xlat
sti
sbb
bound
ljmp
sub
cmp
outsb
mov
stos
fdivr
insw
xor
jno
dec
dec
dec
mov
negl
and
pop
decl
cltd
jbe
test
nop
loop
jo
popf
jne
push
in
bound
scas
movsb
popl
mov
push
sbb
ja
fdivr
incl
pop
loopne
lea
dec
out
dec
iret
insb
loope
je
sbb
pushl
clc
scas
das
sti
pop
or
push
and
xchg
std
push
inc
out
jle
inc
mov
fdivr
lcall
aas
es
push
cmc
mov
push
xor
sub
jns
jl
repnz
rcr
mov
popa
cld
call
into
and
mov
xchg
loop
dec
cmp
jp
mov
jnp
or
shlb
outsl
rclb
adc
mov
xchg
iret
or
mov
jne
pushl
sub
ja
pop
andl
xchg
sti
push
pop
rol
stos
add
call
mov
setp
das
mov
xchg
lds
faddl
push
out
push
jne
push
nop
push
incl
dec
shl
call
mov
cmpsl
aas
in
or
popa
add
jne
notb
out
add
sub
sarb
jg
dec
cwtl
xchg
xor
xlat
xchg
test
dec
repnz
cs
or
aam
xchg
daa
push
pop
clc
outsb
add
cmp
hlt
xchg
enter
iret
mov
les
pop
lea
in
ret
adc
dec
sub
xchg
int
in
xor
xchg
push
popa
cmp
aad
stc
dec
shlb
leave
call
fidivrl
dec
cmp
ss
mov
fdivrs
in
movsl
xor
mov
popa
jnp
inc
addr16
ss
add
push
je
imul
fptan
lret
cld
or
test
movsb
in
dec
jne
lcall
nop
ret
push
sti
imul
cmp
repnz
adc
xchg
call
and
pop
adc
cmp
cmp
decl
jns
jl
push
divl
mov
xor
sub
push
adc
mov
xor
aam
aaa
jecxz
mov
mov
push
pop
movsl
dec
jb
adc
sbb
dec
xchg
cmp
jmp
cwtl
ljmp
inc
xchg
pop
jae
pushf
mov
cli
repnz
or
por
cmp
fisubrs
inc
loope
and
mov
cltd
dec
pushl
aas
into
lea
fisubrs
sbb
fwait
mov
ja
sbb
testb
push
push
jle
insl
mov
inc
dec
lock
xchg
cmp
cmp
cmpsl
xchg
popa
ud0
jmp
out
cld
lret
ds
imul
pop
sub
test
lcall
fisttpll
jecxz
fdivp
jge
jnp
xor
pop
insb
sub
push
dec
push
jmp
push
adc
ljmp
xlat
lods
dec
cmp
test
fwait
jle
test
in
ss
icebp
push
loopne
jmp
sub
leave
add
and
dec
data16
clc
nop
fdivs
inc
cwtl
out
cmc
icebp
jg
incl
testl
mov
movsl
out
in
push
dec
sbb
movsl
sub
test
pushl
jne
daa
add
add
adc
outsb
in
pushf
xor
sarl
lcall
mov
mov
mov
xchg
add
hlt
das
std
mov
lock
or
fldt
hlt
int3
mov
fildll
gs
pop
loopne
xchg
cmp
loope
pop
jge
or
in
outsl
jle
rcrb
aas
mov
jmp
popa
fs
push
mov
incl
or
push
push
add
sub
jb
out
ljmp
rolb
jb
pop
jo
cli
push
jp
xor
inc
inc
mov
leave
pusha
or
cmc
out
mov
std
add
push
sbb
cmp
xorb
fidivs
test
pushl
mov
gs
dec
lcall
lea
out
dec
lds
addb
jmp
and
test
bound
xchg
pop
int3
in
mov
mov
lea
lcall
cwtl
scas
add
push
cmc
es
xchg
lock
sbbb
fwait
mov
push
jmp
dec
imul
mov
sub
ds
xchg
std
hlt
shl
mov
call
add
xchg
lret
mov
in
xchg
pop
pop
fstl
mov
incl
mov
scas
mov
dec
jae
ds
mov
push
fwait
inc
jo
ljmp
rcll
jge
lahf
repz
jns
cmp
in
xlat
movsl
test
jecxz
out
sub
cmpsb
mov
pop
mov
jmp
xchg
out
sbb
cmp
sbb
mov
push
and
das
jecxz
js
jg
decl
and
jmp
and
test
mov
loop
push
icebp
ss
movsl
jne
popf
leave
push
push
pop
incl
lahf
ja
sbb
lea
test
es
sub
pop
mov
xchg
push
or
sar
repnz
ljmp
push
xchg
xchg
mov
push
shll
dec
cmpsl
cmp
fwait
test
jg
jg
mov
add
rclb
aam
mov
xor
fucomi
mov
incl
sbb
and
in
leave
cmpsb
inc
call
loopne
inc
or
incl
or
aam
jp
gs
sub
add
sbbl
test
in
mov
jl
mov
mov
push
mov
jmp
push
jae
or
sub
addr16
dec
lea
jb
mov
dec
jbe
in
sub
push
mov
mov
jl
in
dec
cs
decl
ss
push
jnp
aaa
xor
push
pop
addr16
repnz
xchg
cmp
jl
and
sti
jns
jl
loop
push
inc
loopne
cwtl
mov
ret
ret
sti
push
sarl
fistpl
lcall
inc
hlt
test
orl
das
fwait
adc
loopne
clc
mov
in
dec
int
sub
or
cmpsl
jno
jecxz
mov
mov
sub
sarl
push
repz
xor
xchg
cmpl
dec
adc
hlt
mov
andb
loop
dec
jl
jp
dec
mov
repnz
shr
pop
into
dec
lods
out
and
jo
arpl
out
cmp
lock
jmp
add
lock
xchg
test
add
add
leave
jmp
mov
pop
sub
enter
sarb
rolb
mov
jmp
and
test
jno
pop
inc
sub
adc
push
cmp
xor
inc
mov
fadds
pushl
test
ret
cwtl
mov
mov
sub
test
mov
call
dec
cmp
push
mov
mov
pushf
popf
in
xor
or
lock
scas
sub
adc
mov
call
xor
dec
push
das
mov
fxch
add
xchg
mov
push
jno
xor
daa
popf
and
sar
decl
push
sbb
out
mov
popa
arpl
lcall
jg
lcall
mov
lds
repnz
sub
mov
cli
stos
cmp
call
insb
data16
lods
movsb
into
adc
fdivrs
mov
xchg
jle
das
pop
hlt
or
mov
pushl
mov
xchg
jecxz
shll
xor
add
iret
popa
inc
pop
and
stos
mov
mov
jmp
or
ds
xchg
jo
push
stos
push
xor
movsb
int
iret
mov
mov
mov
pop
adc
mov
cltd
xchg
xor
push
push
mov
mov
mov
call
or
pop
and
cs
mov
andl
repz
push
les
js
jg
pop
jle
les
sub
cmp
add
or
mov
mov
cs
sbb
cmp
jnp
outsl
hlt
cmp
mov
jmp
ljmp
lahf
ss
mov
movsb
cmpsb
scas
repnz
adcb
pop
ljmp
lods
test
push
notb
sbb
divl
xchg
and
cwtl
sbb
mov
cmpsb
jle
add
mov
gs
scas
aam
lea
ljmp
sti
ljmp
lods
adc
aam
stc
jecxz
jae
mov
push
mov
incl
sub
cli
scas
mov
ss
iret
push
pop
les
flds
and
les
in
arpl
aas
adc
push
lcall
rorb
inc
lds
fildll
mov
add
mov
pop
jmp
jecxz
push
mov
das
push
negl
sbb
cld
and
leave
imul
inc
xchg
sub
jmp
mov
mov
scas
incb
mov
jae
lds
arpl
lods
addr16
or
decl
icebp
xchg
or
mov
xlat
push
into
icebp
movl
sti
or
pop
add
mov
aas
aam
gs
int
shll
cmp
xchg
pop
inc
xchg
das
pusha
pushl
adc
sub
movsb
mov
cmp
jno
je
inc
hlt
fildll
push
fstpl
decb
ja
pop
std
jmp
jg
cpuid
aaa
std
mov
push
idiv
test
inc
maxps
push
push
jae
sub
dec
sti
sbb
sar
call
jp
sbb
mov
jp
call
sahf
sbb
js
nop
rcrl
decl
lcall
mov
push
or
xchg
das
shll
sahf
sbb
inc
fisubl
incl
cld
sti
aas
xchg
test
xor
outsl
dec
mov
loope
sub
ljmp
inc
and
lret
dec
jmp
mov
std
insb
jg
ja
jp
pop
sub
jmp
setns
lret
jns
gs
push
insl
jbe
mov
mov
ljmp
jge
iret
or
stc
bound
mov
je
dec
sub
inc
addr16
inc
mov
dec
xor
std
jge
inc
dec
iret
popf
cmpsb
repnz
movsl
bound
push
jge
lret
scas
adc
ss
push
aam
mov
je
mov
fdiv
ret
std
popw
sbb
mov
jo
pushl
sbbl
data16
les
aam
inc
push
jne
int
sbb
sbb
add
scas
pop
insb
cltd
fs
decl
ret
scas
stos
imul
mov
iret
jnp
adcb
mov
dec
mov
and
mov
mov
stos
ret
lock
aam
xchg
pusha
cli
ljmp
sti
push
push
xchg
add
adc
fildll
inc
lahf
arpl
in
jmp
movsb
fildll
ljmp
inc
xchg
jnp
fstpl
mov
in
xchg
adc
fcompl
rorb
jge
mov
mov
jp
mov
scas
pop
pop
dec
shll
pop
mov
in
push
les
cs
jp
jg
popa
ds
ljmp
outsb
test
jl
add
test
pushl
dec
and
cltd
pop
iret
inc
dec
test
filds
push
test
mov
jl
jg
das
dec
push
mov
jle
push
mov
inc
cmpl
mov
ret
push
cmpsb
xchg
cltd
popf
sbb
ljmp
iret
fnstenv
and
mov
mov
inc
repz
jg
push
es
xchg
cmc
xor
sbb
xor
shrl
jbe
push
xchg
jb
popa
cwtl
or
call
mov
mov
ljmp
pushf
lods
mov
inc
jp
mov
pop
lds
cld
jmp
addl
inc
jmp
adc
rolb
cs
or
outsl
icebp
lcall
mov
ja
pcmpgtd
data16
mov
adc
mov
das
xchg
insl
inc
add
mov
jns
lcall
incl
daa
nop
sbb
dec
insl
repnz
mov
push
dec
out
shrb
jmp
cmp
repz
mov
loope
push
loopne
outsb
mov
pop
or
ja
stc
cmc
jecxz
xchg
push
mov
outsb
loope
jle
dec
iret
or
outsl
mov
sub
pop
call
bound
mov
sub
ljmp
shlb
sub
mov
and
test
lcall
inc
bound
hlt
pop
mov
inc
sub
xor
idivb
xor
int3
sub
mov
or
lret
ljmp
xor
pushl
pop
insb
add
mov
xor
xor
pushf
cmp
mov
aam
xor
jp
in
mov
mov
je
mov
stos
psubq
sbb
out
xor
lcall
mov
cmpl
fnsave
movsb
xchg
push
mov
stc
loop
clc
xlat
push
jecxz
lret
sbb
shlb
inc
movsl
pop
movsb
test
push
or
incl
and
xchg
mov
stc
inc
or
push
jmp
dec
sbb
imul
cmp
imul
xchg
and
aam
dec
insl
mov
je
clc
jg
mov
push
ror
stos
adc
pusha
or
jo
mov
mov
aaa
cli
pushl
mov
repz
or
rcll
shll
cmp
xchg
cmp
push
xlat
push
pusha
ret
xor
roll
outsl
mov
mov
sar
call
nop
lock
pop
push
sub
iret
call
int
dec
pop
ret
cmpb
fsubrp
xlat
sub
pop
fistps
push
call
mov
fwait
sbb
hlt
jbe
pop
dec
popf
ljmp
aas
push
lcall
jae
jo
add
adc
ja
sub
incl
incl
daa
sbb
jl
add
adc
ljmp
cli
push
loop
cmp
mov
and
fcmovnb
inc
pop
xor
add
cltd
inc
fildll
add
xchg
xlat
pop
inc
adc
sbbl
in
std
push
push
ljmp
filds
movsl
cmp
dec
int
jae
enter
mov
aam
mov
push
mov
jmp
movsb
jl
mov
shll
inc
outsl
push
pop
test
mov
fistpl
push
push
mov
repz
insl
cmpsb
push
dec
push
leave
call
outsl
dec
xchg
dec
clc
dec
push
pusha
and
jns
pop
pop
cmp
pop
outsl
ljmp
cmp
mov
jg
and
ljmp
scas
mov
pushl
mov
jle
sbb
icebp
daa
push
and
adc
daa
ror
mov
pop
lock
sbb
xchg
inc
aaa
mov
into
hlt
adc
enter
add
add
fidivrs
ja
mov
mov
sbb
sub
clc
sub
shrb
pop
shlb
movsl
popl
dec
xchg
mov
xchg
out
mov
push
mov
lcall
sub
pop
fcmovu
add
pop
cwtl
call
scas
out
xor
lret
sub
mov
gs
in
ljmp
cmp
mov
enter
jnp
insl
jl
mov
rcr
je
jmp
inc
jge
fbstp
repz
cmp
int
imul
imul
mov
inc
mull
jle
std
and
pushl
mov
inc
add
mov
pop
sub
push
or
adc
push
mov
jmp
sub
dec
adc
fwait
addr16
mov
aas
movsb
pop
loop
std
hlt
in
adc
test
mov
sub
pop
ss
clc
mov
xchg
es
arpl
andb
stos
mov
pop
call
rcr
jo
rorl
negb
sti
xchg
sub
push
inc
cmp
or
jl
dec
add
mov
std
jecxz
or
xor
insb
xchg
or
jg
repnz
jp
cmp
and
cmp
leave
add
add
repz
push
fistl
call
pushl
jae
mov
stos
daa
jp
xchg
xor
sbb
decl
inc
shll
lock
icebp
inc
inc
imul
jl
fistps
loop
movsl
daa
call
dec
cmc
fstpl
mov
into
ret
push
ffreep
roll
pusha
lcall
loop
push
xchg
insl
adc
add
mov
lcall
lods
rolb
repnz
xor
pop
arpl
in
lea
out
mov
push
pop
or
clc
ret
push
jns
negb
lds
add
popf
pop
mov
dec
nop
push
sarl
fs
cmp
sbb
inc
lds
jge
add
xor
mov
mov
cwtl
movsl
add
jge
jecxz
inc
and
pop
cli
decl
aas
imulb
arpl
aas
push
and
fcompl
dec
xlat
mov
mov
scas
sub
mov
scas
sub
into
rcl
ret
inc
pushl
xlat
cltd
adc
and
pop
pop
sub
decl
jmp
inc
fsubrl
pop
add
pop
jl
ss
ds
iret
pop
mov
cmp
add
lods
test
add
test
push
ja
lds
decl
pop
xchg
out
mov
dec
fs
lods
jns
sbb
push
inc
jns
fsubp
out
or
mov
cld
inc
push
mov
repz
adcl
repz
sub
imul
mov
mov
cmp
push
call
lcall
inc
add
sub
or
cmp
sahf
mov
push
mov
aaa
and
cmp
out
jecxz
xor
jns
xor
cmp
lret
fstps
pop
jae
push
inc
loopne
ljmp
ja
in
and
nop
je
in
test
fwait
lcall
arpl
pop
cli
lods
fimuls
ljmp
sub
lcall
scas
cmp
or
insb
stos
test
lock
das
iret
xchg
movsl
xlat
outsb
cltd
push
incl
xorl
insl
xor
out
cmpsb
sbbb
and
and
fnstsw
flds
jmp
jecxz
lahf
in
xchg
jo
and
fstpt
push
stos
cmp
inc
call
hlt
mov
inc
add
daa
jg
sub
leave
dec
cmp
mov
std
jl
aas
cmp
fldcw
mov
adc
test
add
decl
insb
cmpsb
test
test
sbb
pusha
je
decl
add
rolb
pop
push
lcall
lods
pop
enter
fistl
mov
das
sub
sub
mov
mov
cmpsl
adc
inc
xchg
ljmp
je
fidivl
or
call
loop
aaa
mov
xchg
xor
cmp
stos
dec
jmp
lcall
pop
nop
call
cmp
andb
enter
xor
out
pop
std
lcall
jmp
inc
or
cmp
pop
and
sbb
ljmp
ret
mov
pop
call
mov
jae
mov
or
test
decl
xor
push
jmp
mov
mov
lret
push
add
scas
mov
insl
aam
inc
and
aaa
lahf
mov
inc
das
nop
adc
in
mov
mov
imul
add
cld
pop
fcomip
out
int3
leave
mov
std
sub
fstpl
xcrypt-ctr
cmpsl
fldl
ret
movsb
popf
repnz
xlat
aam
ljmp
cmp
push
push
dec
loop
in
xor
push
sub
imul
jg
movsl
inc
mov
in
ds
push
or
fisubrs
clc
incl
enter
jp
loop
test
imul
fwait
movsl
cmp
mov
sbb
ret
cld
stos
loope
lds
mov
cmp
cli
lcall
pusha
outsl
cld
popa
shrl
int
or
push
jmp
data16
fbstp
call
push
mov
cwtl
in
lock
andl
stc
mov
nop
xor
loop
call
push
jno
mov
mov
jg
test
bound
or
inc
mov
mov
arpl
decl
in
stc
repz
pusha
loope
pop
xchg
lods
ret
repz
jbe
scas
icebp
out
fistpll
inc
or
fistpl
mov
inc
cmp
scas
scas
jo
jne
jbe
xchg
rcr
cmp
mov
mov
shll
adc
into
mov
shl
lcall
sar
mov
jp
fstl
mov
pusha
push
clc
mov
adc
pop
sub
mov
loopne
mov
fidivrs
cmc
push
stc
jmp
push
lcall
lcall
shlb
inc
xchg
fisttpl
adc
mov
mov
cmp
jns
sahf
push
cmpb
in
popa
xor
out
lret
adc
push
mov
or
scas
inc
xchg
std
fucomip
lcall
mov
mov
dec
inc
push
fwait
repz
pop
dec
lcall
ja
pop
push
rcl
pop
inc
lods
pop
mov
out
xchg
lock
cmp
std
out
jae
mov
sbb
inc
or
dec
sub
sub
scas
es
lock
lcall
ljmp
pushf
push
or
pop
stc
cli
in
loopne
add
aaa
int
out
fsubrl
inc
jmp
jne
loope
lret
jae
mov
adc
ret
pop
fs
add
dec
into
xchg
xchg
push
out
cmp
mov
push
cmp
lahf
mov
ret
jnp
dec
cld
push
fs
imul
jge
push
shrb
decl
pop
jo
out
pushf
jnp
jl
fimull
push
inc
jne
fucomip
ret
outsl
decl
sbb
fisubl
xchg
pop
sub
mov
ret
call
out
mov
test
sbb
insl
out
jmp
clc
int3
aad
mov
incl
pushf
ds
subl
xchg
in
pop
fwait
stos
ss
push
div
xor
mov
cmpsl
dec
xchg
jp
test
pop
cmc
xchg
lods
imul
jg
popf
push
xor
popf
ljmp
sub
jg
add
adc
or
pushl
xor
enter
and
fiaddl
jb
stc
inc
into
mov
and
mov
int
xchg
mov
outsb
mov
addr16
mov
les
add
lcall
dec
adc
lahf
pop
jnp
pop
sub
out
out
mov
push
inc
aam
mov
incl
pushf
adc
nop
mov
mov
add
daa
outsl
push
xor
mov
add
movsb
mov
mov
and
inc
ret
fwait
fs
scas
std
out
lcall
sub
int
add
cmpsb
inc
loop
fisttpll
adc
push
and
int
sar
call
mov
mov
cmp
sub
jle
lods
or
dec
pushf
inc
incl
dec
add
cmp
sti
jp
xor
aaa
cmp
jp
jg
in
iret
lods
repnz
inc
adc
or
rorl
jle
stc
decl
imul
jno
lret
fldt
lcall
sahf
dec
xchg
aad
roll
cmp
andb
shll
xchg
rol
cmp
and
dec
ja
jecxz
imul
out
dec
dec
cmpsl
mov
mov
mov
mov
incl
adc
and
ds
shrb
mov
js
lcall
divb
enter
sbb
loop
lods
cmp
ljmp
pop
inc
add
call
das
mov
std
je
mov
ret
push
sub
lcall
ljmp
push
testl
push
fadds
cmp
int
mov
or
or
cmp
out
and
push
mov
jl
lods
rcrl
cmp
pushl
or
sub
fdivrl
lret
jbe
sbb
std
xchg
loopne
shrb
cmpsb
and
push
ss
lods
and
mov
aaa
jmp
mov
aas
fistpll
xchg
imul
pop
mov
fsubrl
pop
addb
iret
pushf
incb
xlat
sbb
mov
fmuls
in
lds
aam
sbb
pop
and
pushl
rcll
shl
xchg
std
mov
pusha
stc
push
push
hlt
pushl
xchg
pop
pop
clc
fsubl
subb
dec
les
ja
pop
mov
push
push
jge
das
test
pop
loope
fs
ret
jg
repnz
xchg
cli
outsl
lock
lahf
out
fwait
mov
sub
test
enter
ret
lahf
jae
mov
subb
and
ss
call
pop
mov
pusha
aam
cmpsl
pop
inc
loope
inc
stos
nop
and
pop
repz
and
jb
cmpb
or
fdivl
aam
adc
and
in
lods
pop
cmc
shrb
icebp
mov
repnz
jmp
mov
outsl
mov
ljmp
cmp
lock
in
iret
pop
aam
mov
orb
pushf
dec
out
jnp
aas
aam
jns
incl
or
icebp
xlat
bound
mov
inc
jns
sbb
sub
cmp
das
adc
pushl
es
push
xor
jns
sbb
mov
hlt
in
cmp
jg
mov
or
mov
dec
hlt
cli
jbe
in
ljmp
sbb
and
pop
mov
or
mov
adc
pushl
jle
jmp
jg
int3
lods
push
sub
movsl
out
cmpsb
cmpl
int
rorb
cmp
fsubr
inc
jbe
icebp
aad
out
fstps
sbb
adc
ret
push
sbb
lcall
lods
dec
push
xchg
push
lcall
dec
push
cmp
adc
xor
scas
pop
pop
pop
pop
jae
ror
daa
cmc
incl
inc
and
dec
jb
pop
sub
cmp
sub
jns
cld
jmp
jae
std
mov
mov
jecxz
rcll
adc
rcr
jg
je
lcall
jecxz
imul
cmpsl
lods
fs
cmpsb
push
mov
sbb
decl
bound
push
out
push
xchg
insb
dec
das
roll
mov
lret
pop
mov
push
mov
jae
nop
mov
outsl
aad
pushl
movsb
fwait
pop
pop
and
xlat
xchg
xchg
inc
sarb
sbb
ljmp
lock
xor
cld
jb
mov
xor
je
mov
shrb
cmc
incl
ljmp
cs
test
jp
push
mov
jecxz
ficomps
inc
or
mov
mov
aas
rorb
sub
inc
adc
add
pop
cli
out
lods
mov
jbe
aam
imull
insl
and
leave
push
ja
daa
and
ds
pop
ljmp
and
out
aaa
push
jge
adc
add
mov
ljmp
mov
adc
xchg
sbb
insb
adc
cld
mov
fbstp
sbb
jns
xchg
inc
sbb
push
fs
push
fwait
adc
add
push
mov
and
ljmp
push
and
sub
jmp
adc
stc
rorl
ret
jecxz
pushf
cs
lea
les
lahf
adc
mov
loopne
call
ds
push
ret
mov
rcl
inc
push
cmpsl
dec
outsl
sub
orb
and
and
lcall
xor
push
ficomps
into
std
gs
inc
dec
roll
or
pop
or
ficoml
lods
sub
push
cli
sub
andl
mov
xchg
js
xor
adc
stc
pop
cmpsl
adc
jmp
and
jns
push
sub
ljmp
dec
rorl
add
scas
lods
call
mov
dec
repz
adc
test
repnz
mov
sbb
pop
outsl
int3
push
mov
xchg
stos
idiv
xchg
xor
sti
addr16
cmp
sbb
test
cmp
xchg
clc
stos
imul
rcrb
call
int3
cmp
cmp
mov
or
lret
ljmp
cmpsl
nop
sbb
dec
and
or
loop
cltd
xchg
inc
pop
dec
add
pushf
lds
test
sub
xchg
mov
movsl
or
cmp
add
fimull
mov
rol
push
adc
std
cmp
dec
test
and
js
aaa
movsl
sar
lret
movsl
scas
sub
incl
pop
mov
xor
je
ret
je
out
call
dec
inc
mov
mov
xchg
pusha
lret
mov
mov
pusha
xchg
lcall
ljmp
dec
jo
pop
jb
or
int3
stos
push
dec
gs
js
hlt
pushl
fbstp
or
in
jecxz
stos
push
xor
lcall
pop
jb
and
stc
xor
adc
push
dec
xor
jg
aaa
jge
mov
add
dec
push
push
xchg
insl
in
dec
outsl
loop
aas
and
mov
jmp
sub
mov
test
test
xchg
decl
dec
mov
sub
inc
pushl
mov
and
sub
out
push
outsb
jnp
rolb
sahf
mov
jg
call
les
push
dec
sahf
and
aas
xor
daa
mov
call
xchg
mov
mov
imul
sbb
xchg
popf
jg
mov
xchg
push
aaa
mov
jg
lcall
lods
popf
cwtl
pop
rcl
jg
and
popa
ja
lret
imul
ret
subl
adc
lcall
aaa
xor
and
cmc
dec
movl
pop
jp
add
pushl
test
xchg
mov
shll
and
mov
in
arpl
jmp
jnp
sahf
mov
jnp
fwait
stos
imul
add
cmpsb
pushl
jae
inc
push
lahf
sarb
pushf
pushf
jp
mov
imul
sub
ret
jmp
mov
js
iret
jle
jo
mov
addb
mov
sbb
sub
out
jecxz
das
cmc
mov
mov
xorb
mov
or
incl
xchg
test
push
mov
or
jb
mov
lahf
lcall
cld
mov
repnz
and
jnp
test
popf
push
mov
lea
jae
mov
hlt
loope
mov
xchg
ss
sub
inc
pop
mov
pushw
push
or
lret
lock
xchg
out
fwait
xlat
xchg
in
or
mov
bound
call
lea
rclb
lret
ret
imul
adc
pop
out
in
fwait
movsl
call
xchg
add
pusha
pop
mulb
popa
cs
aaa
outsb
inc
test
xlat
daa
inc
pop
outsb
adc
adc
add
incl
or
sahf
test
in
xchg
push
ds
mov
ret
stos
lea
inc
repz
dec
aaa
outsl
scas
pop
das
hlt
jnp
daa
inc
and
jg
cmp
aaa
mov
aam
test
jle
outsb
add
xchg
je
imulb
dec
out
mov
mov
fadds
outsl
adc
lods
decl
ljmp
insl
repnz
jmp
add
leave
pop
adc
lcall
rcr
xchg
icebp
mov
ljmp
fistps
popf
adc
or
add
das
mov
xchg
repnz
mov
mov
das
hlt
aas
mov
inc
push
inc
xchg
and
loop
incl
pop
jp
push
outsb
pop
mov
iret
xchg
mov
dec
addr16
sbb
add
nop
mov
imul
sub
orb
adc
in
jg
xorb
pop
jnp
adc
push
in
push
xchg
cmp
fnstcw
je
shll
hlt
lret
xor
inc
and
mov
test
adc
ljmp
hlt
add
test
fwait
in
add
les
lcall
addb
enter
int
fcomp
add
fidivs
rol
and
iret
push
or
push
xchg
adc
invd
mov
jp
xchg
enter
std
stos
mov
out
cmc
fcomps
mov
mov
push
dec
adc
aaa
pop
push
cmpl
jmp
fcmovnb
pop
dec
ljmp
mov
dec
mov
xchg
push
xor
in
clc
test
inc
popa
sub
add
mulb
xor
popa
repnz
sub
inc
lds
adc
mov
iret
mov
dec
dec
daa
std
sbb
push
adc
ffree
pop
cli
ljmp
rolb
cmp
xchg
mov
rorb
cs
icebp
or
cmpsb
jo
ljmp
cmp
stos
fwait
mov
sbb
jg
dec
iret
lods
cltd
stc
js
mov
mov
into
xchg
mov
mov
lcall
mov
std
es
sbb
dec
lea
mov
push
jb
loop
inc
ficoml
jo
mov
mov
idivl
in
add
inc
xor
test
push
ljmp
iret
xchg
push
or
mov
adc
decl
pop
push
movsl
cwtl
call
adc
sbb
ret
mov
push
mov
stc
or
scas
cmp
sahf
xor
clc
aaa
clc
xchg
cli
mov
xor
cmp
lcall
push
ds
fcoms
adc
lea
and
sub
leave
dec
mov
imul
lods
int3
mov
push
lcall
inc
pop
addr16
and
or
or
incl
jl
mov
daa
addr16
imul
jb
insb
or
mov
sbb
clc
notl
loopnew
xorl
stos
jg
out
ja
push
mov
jp
out
in
mov
jo
sbb
lock
decb
jb
out
jl
addr16
mov
mov
xchg
inc
cmp
test
addl
and
popa
movsb
out
mov
lret
sbb
bnd
adc
xchg
jg
pop
add
cmp
fidivl
jne
clc
fadds
mov
pop
pop
jp
dec
in
mov
cmp
insb
pusha
mov
ret
xchg
arpl
repnz
fdivr
ljmp
jno
lods
es
cli
mov
push
rolb
xchg
cli
in
jmp
push
jmp
cmp
push
lock
push
testb
mov
push
std
lock
ret
rolb
mov
aas
int
pop
cmc
mov
ljmp
je
roll
pop
cld
lods
mov
mov
push
lock
in
divl
pushl
xorl
sub
jmp
jecxz
and
rorb
mov
mov
add
bound
xor
incl
xchg
and
add
cmpsl
inc
hlt
adc
cmp
enter
test
lcall
out
int3
lock
test
xor
xchg
lret
mov
outsb
jo
cli
fldl
leave
xor
movsb
or
out
sti
test
pushl
xor
fistl
out
push
pop
in
or
cs
mov
es
icebp
dec
or
inc
push
mov
fnstcw
loop,pn
mov
pop
sub
pusha
lock
and
into
aam
jg
cli
inc
cwtl
add
outsb
xor
fisubl
pop
mov
fbld
sub
dec
jmp
sub
pop
lahf
in
xchg
rcll
mov
mov
pop
loope
sbb
mov
jns
les
fwait
sbb
sbb
decl
dec
lods
es
and
dec
add
js
clc
int3
loope
mov
ljmp
das
fldcw
jl
dec
jmp
dec
fnsave
add
pop
ss
jmp
xchg
mov
es
test
adc
insb
inc
mov
stc
lcall
fisttpl
jnp
mov
xor
ljmp
pop
les
out
jmp
pusha
sarb
mov
dec
test
adc
push
or
leave
int
incl
xor
add
insb
adc
jge
add
cmp
mov
inc
adc
ret
insb
std
lahf
fs
pop
stos
cmp
outsl
lcall
in
inc
jnp
out
xor
fwait
loopne
rcl
lea
out
push
lods
daa
add
test
cli
fildll
arpl
mov
rcrl
pushl
xlat
lods
jl
fiadds
cs
mov
js
fstpt
jns
inc
pushl
fdivrl
mov
aam
xchg
mov
xor
jno,pn
jle
fnstsw
decl
xor
jecxz
mov
xor
sub
loopne
xchg
and
je
je
int
or
lcall
jmp
imul
ja
adc
into
mov
inc
enter
lahf
jle
cwtl
mov
movsb
aas
sub
pop
les
stc
shl
sti
push
xor
mov
rol
jecxz
movsb
mov
out
dec
inc
inc
sub
mov
sub
int3
or
ljmp
mov
in
dec
sbb
out
inc
cli
mov
sbb
or
xor
mov
inc
fucomip
jmp
in
or
or
sti
ss
pushf
lret
or
ljmp
jmp
mov
mov
and
incl
mov
adc
xchg
adc
addr16
cli
mov
jg
imul
mov
dec
dec
jae
cmp
jl
imul
ret
push
call
or
jl
aas
mov
std
pushl
jmp
xchg
in
fimull
decl
sti
imul
sub
repnz
in
cltd
pusha
imul
ficoml
pop
add
outsl
lock
jmp
or
ljmp
js
add
decl
mov
incb
sbb
jp
inc
nop
fdiv
loope
lcall
pop
xor
mov
sub
cmp
lcall
call
test
push
ss
mov
clc
mov
push
dec
pop
xchg
jg
js
das
xor
mov
cmpsl
sbb
sub
and
repnz
xchg
jmp
fsub
cmpsl
xor
repnz
std
outsl
lock
pop
int
gs
movsb
mov
lahf
pop
cli
decl
or
and
rcrb
ficompl
lods
lahf
sbb
lcall
cld
jg
dec
jp
aas
mov
mov
jns
aas
jp
rcll
std
jg
decl
ret
repz
sti
mov
popa
ret
leave
add
lcall
jno
sbb
jge
adc
dec
loop
rcl
mov
push
cmpb
dec
cmp
imul
xor
mov
xchg
jp
ja
mov
aaa
lds
lret
aas
lods
incl
outsl
adc
mov
hlt
pop
xor
shlb
sti
stos
les
pusha
adc
lods
inc
sahf
cli
push
lret
mov
js
call
repnz
push
cmp
ret
sub
and
pop
pop
dec
mov
dec
fsubrl
andl
ljmp
iret
in
sbb
dec
in
jne
cmp
iret
les
aam
and
add
jg
inc
xchg
adc
and
sbb
pop
nop
mov
sub
or
sbb
fisttpl
imul
inc
loopne
into
or
sub
ret
add
dec
inc
in
xchg
pop
sub
pop
add
cmpsl
dec
pop
xor
fnstsw
ljmp
jns
or
das
jp
shlb
jno
je
xor
xchg
out
test
ljmp
mov
add
sti
adc
push
repnz
jge
insl
jg
mov
ret
popa
pop
xor
fcmovb
fs
iret
fwait
jg
int
pusha
outsl
fucomp
push
push
jo
movsl
in
inc
lds
jecxz
shlb
in
hlt
sti
jne
or
xorl
mov
sahf
mov
ret
les
ljmp
xchg
lods
mov
lock
out
cmp
sbb
stc
fnstcw
arpl
call
insb
test
dec
aas
mov
adc
fucomip
decl
in
clc
movsb
adc
jmp
pop
jno
fists
pop
sbb
jbe
jmp
sarl
decl
fildll
out
cltd
cmp
call
xorb
aad
sbb
mov
sub
sub
jae
bound
and
jmp
repnz
pop
jno
xchg
sarl
pop
push
fistpll
fistps
sbb
outsl
mov
jno
ljmp
pushl
sub
xchg
test
leave
xchg
sbb
jae
std
lcall
lcall
int
movsb
mov
mov
ficomps
mov
pop
fimuls
cmp
insb
dec
aaa
test
jno
cmpsb
ljmp
fldcw
arpl
ja
dec
popa
in
sub
cwtl
pushf
test
sub
ljmp
std
mov
mov
fnsave
jno
or
sbb
pop
dec
jmp
scas
xchg
jnp
shlb
clc
fsubrl
iret
outsb
test
insb
jmp
out
xchg
pop
mov
shl
rcrl
add
movsb
and
mov
imul
lcall
lahf
pusha
mov
in
inc
xor
pop
insb
sub
mov
sti
ljmp
cmpb
and
dec
push
jle
arpl
mov
mov
jmp
xchg
andl
push
dec
clc
movsb
rolb
movl
jmp
outsl
lea
cmp
cld
jb
mov
push
cmp
call
mov
jmp
mov
dec
out
or
jmp
adc
clc
jns
inc
push
in
xor
and
jns
ljmp
jne
rorb
pop
adc
add
or
xor
leave
gs
cmp
lds
push
sarb
push
pop
adc
jmp
and
vcvtdq2ps
pop
movsl
jb
jecxz
rcll
ljmp
fnstsw
call
pop
outsb
xchg
test
cmp
xor
lcall
lock
xchg
push
add
stc
xor
call
out
das
lret
insb
iret
repz
mov
lock
and
fdivr
cli
loop
push
es
call
insl
push
adc
push
incb
in
pop
mov
push
push
xor
nop
outsb
sti
add
mull
ljmp
cwtl
enter
neg
xchg
pushf
pop
push
add
in
ljmp
shll
push
push
ficomps
sbb
jge
jo
adc
or
loop
imul
fldl
jp
push
leave
mov
jge
xchg
pop
xlat
jno
mov
ficomps
dec
insl
les
mov
fcomi
sar
ljmp
xchg
nop
ret
arpl
mov
outsl
dec
call
xor
xor
jecxz
cmp
in
repz
push
subl
arpl
enter
lret
mov
lcall
jge
inc
push
pop
add
push
cmp
enter
adc
mov
ret
push
das
push
pop
lcall
stos
adc
outsb
push
dec
xor
ret
cmp
loope
adc
iret
add
xor
and
andb
jg
cmp
out
lods
ljmp
aam
sti
sbb
add
push
ljmp
add
pop
dec
cmp
loope
fs
pop
nop
and
push
lret
das
lock
call
test
in
lcallw
add
clc
in
and
mov
lea
pop
dec
adc
ljmp
roll
xchg
xlat
ljmp
jo
out
inc
pop
jg,pn
imul
lcall
cmp
repz
mov
fdivl
test
movlps
xchg
dec
das
call
shlb
cli
outsl
and
xorl
jge
sbb
cltd
loop
mov
std
andb
mov
imul
sub
mov
rorl
dec
mov
push
pop
xchg
pop
adc
out
mov
cld
dec
inc
mov
lahf
mov
das
dec
clc
je
push
and
ljmp
or
and
mov
xor
pop
lods
ja
mov
jmp
mov
mov
int
dec
add
imul
pop
mov
outsl
mov
pop
jno
les
sub
in
and
enter
push
inc
fdivrl
sub
movsl
jl
lret
fsubl
add
push
out
seta
fldt
add
das
cmc
ljmp
xor
mov
cmp
push
mov
call
loopne
xchg
in
adc
mov
es
add
adc
out
push
dec
mov
cmc
xor
popa
shrb
std
les
mov
je
adc
pop
xchg
in
aas
in
sahf
outsb
adc
fnstsw
mov
cwtl
mov
or
jle
pushl
call
lods
loopne
shl
ss
add
in
incl
jecxz
int
fmuls
out
dec
cmc
ret
outsl
sarb
icebp
sarl
bt
push
pop
scas
int3
icebp
fs
clc
adc
mov
das
cmc
call
push
loopne
mov
les
or
xor
hlt
add
sar
in
xor
lret
jns
loopne
ret
mov
lods
dec
push
pop
outsb
jo
xchg
outsl
cmc
inc
mov
fcomip
loop
out
sbb
ljmp
inc
mov
dec
pop
insb
dec
mov
fdivl
xor
sbb
insb
ds
sbb
pop
call
rcrb
ljmp
push
xchg
lcall
cwtl
inc
xor
jmp
mov
sbb
pop
movsl
ror
jbe
in
jne
mov
imul
andb
shr
sbb
or
jns
lret
scas
adc
dec
andb
cmp
popf
fmull
lret
jmp
clc
lcall
cld
jg
sti
lret
sbb
pop
jns
push
movsb
ljmp
bound
div
cmp
ljmp
int3
popa
mov
push
jecxz
xchg
decb
paddusb
push
f2xm1
loop
cwtl
dec
hlt
mov
loopne
xor
lock
pop
push
in
mov
adc
ljmp
add
les
xor
loope
mov
enter
dec
std
lcall
and
sbb
notl
mov
insl
loope
adcb
sub
arpl
push
inc
cmp
dec
mov
and
jno
incl
arpl
test
inc
lea
ljmp
lods
mov
add
sub
cli
call
aad
sub
js
fldcw
movsl
inc
fs
sub
aad
inc
jg
sti
ljmp
mov
hlt
lock
jl
jae
inc
pusha
and
sti
xchg
xor
jge
pushl
mov
stos
je
mov
add
add
arpl
loope
lea
loope
add
and
lds
and
fcmovnbe
jg
lahf
fbstp
adc
xchg
xorl
out
sub
mov
pushf
sti
sbb
mov
stos
mov
hlt
call
call
je
iret
mov
pop
mov
inc
mov
test
ja
out
add
adc
ljmp
lock
test
mov
shll
nop
into
loopne
incl
dec
pusha
shlb
fwait
js
fs
dec
lcall
incl
or
fiadds
push
cmc
xchg
stos
out
pushl
bound
fisubs
and
test
xchg
pop
hlt
lret
push
xchg
fnstenv
pop
cld
sbb
incl
in
adcb
mov
inc
and
ret
fmulp
roll
jmp
xchg
adc
aaa
sbb
xlat
in
inc
mov
shlb
dec
jmp
aaa
dec
mov
pushl
sbb
mov
aad
xchg
ret
jecxz
push
cld
pop
das
hlt
popf
shl
stc
ret
push
add
mov
loop
dec
lret
cmp
dec
ss
jecxz
je
pop
decl
dec
mov
inc
sbb
mov
pop
jge
mov
xchg
test
outsb
sub
cmc
fadd
lret
pop
sahf
mov
idivl
movsl
imul
ljmp
pop
inc
add
and
rolb
lcall
daa
adc
jno
mov
test
sbb
out
inc
lods
icebp
mov
and
or
xchg
lds
mov
xchg
inc
push
aam
pusha
mov
and
repz
xor
mov
call
mov
jbe
push
adc
enter
xchg
stos
or
outsb
jbe
popf
js
mov
cli
sub
mov
sbb
scas
jb
mov
xchg
mov
lock
scas
enter
sbb
aaa
scas
jb
push
mov
lahf
lcall
das
ss
and
cmp
fistl
xchg
call
popf
inc
mov
lods
pushf
cli
ret
mov
pop
fwait
loope
lea
incl
cmc
fmuls
or
jne
lea
xchg
jle
push
loop
mov
jae
mov
jg
jne
add
cmc
mov
and
andb
aaa
and
push
cmp
inc
inc
mov
ljmp
test
jno
inc
imul
xor
jbe
decl
sbb
shlb
inc
pop
pop
inc
loop
or
inc
lcall
push
out
dec
dec
loope
xchg
xor
sbb
add
mov
lret
mov
xor
add
sub
push
aas
jbe
mov
sub
mov
test
icebp
jno
sbb
xor
or
mov
call
add
xor
xchg
xor
in
mov
call
mov
mov
iret
inc
lret
or
inc
lods
out
ljmp
jbe
pop
mov
scas
sarb
lahf
fildl
sahf
adc
inc
leave
in
mov
jmp
repz
rcrb
dec
cmp
das
push
nop
das
std
pushl
dec
sub
arpl
push
shufps
ret
bound
jg
xchg
dec
loopne
je
lret
loopne
sub
push
repnz
mov
popf
mov
call
push
dec
push
adc
and
loope
pop
push
dec
and
in
aam
bound
mov
pop
cld
clc
mov
es
mov
shr
and
loopne
mov
outsl
cld
pop
clc
test
mov
dec
adc
push
movsl
daa
xchg
test
ljmp
ret
sbb
inc
je
subb
dec
and
stos
dec
jne
push
dec
leave
movsb
in
clc
mov
rcl
das
mov
or
int3
xchg
out
xchg
or
pushf
mov
or
mov
pop
ljmp
jmp
inc
mov
insl
ret
xor
pushl
adc
cs
mov
jl
bound
int
mov
int
nop
jnp
aas
push
lcall
hlt
outsl
test
jmp
sbbl
mov
stc
add
push
repnz
rorb
repz
push
or
jns
mov
jb
sbb
aam
jne
in
sub
jp
xor
ss
sub
loopne
or
lret
ljmp
shll
xlat
sar
sbb
scas
inc
int
insb
xchg
mov
in
mov
adc
loopne
mov
fwait
and
mov
push
lcall
mov
sbb
cld
push
test
jg
jb
ss
adc
and
fwait
adc
enter
std
incl
mov
mov
je
adc
pop
xor
jbe
cmp
or
call
in
add
push
fisttps
mov
jecxz
push
pop
xor
aas
mov
test
outsl
sub
fs
xchg
jne
in
fnstsw
cmp
lock
bound
inc
xchg
mov
test
push
test
sbb
das
lock
call
xchg
and
icebp
mov
mov
sub
add
ljmp
cld
adc
imul
sub
adc
add
std
popa
loope
ficoms
sbb
push
xlat
stc
jns
push
push
je
mov
mov
cli
jg
subl
jae
mov
lock
in
mov
push
incl
inc
clc
divl
dec
das
cmp
test
jl
bswap
dec
iret
and
decl
adc
aas
ljmp
negb
and
ror
push
sbb
incl
adc
pop
into
clc
out
mov
mov
mov
push
fnstsw
sub
xor
in
adc
push
and
test
fwait
call
dec
sahf
inc
repz
out
cs
decb
jmp
inc
pop
mov
dec
lcall
outsb
out
dec
rcr
push
xchg
insl
mov
sub
adc
xor
mov
mov
pushl
mov
cwtl
add
cmp
and
xchg
mov
fdivrl
mov
lods
popa
jo
sbb
decl
leave
aad
lret
mov
pop
jmp
xor
mov
pushl
mov
jge
mov
add
xchg
pop
clc
shrl
or
cmp
sub
negl
jmp
loopne
xchg
outsb
shr
scas
cwtl
add
sub
je
jmp
mov
push
jmp
xchg
inc
sbbl
inc
pop
xor
jg
jg
cli
out
sub
mov
pop
jg
fldlg2
cmp
aaa
clc
ret
lcall
push
lretw
out
xchg
sbb
push
pushl
cli
jmp
ficomps
pop
test
iret
sub
mov
insb
hlt
dec
int
xchg
xor
pop
xor
mov
mov
jbe
js
adcl
inc
jge
jmp
jg
out
outsb
fldl
in
loop
test
insl
in
mov
sub
lea
test
lret
lds
mov
sub
lods
xor
cmc
ljmp
pop
mov
mov
jno
fiadds
lcall
decl
ret
mov
sub
inc
cs
sahf
dec
cmp
repnz
lea
jbe
fwait
pop
pop
push
cmp
ror
or
scas
jne
lcall
repnz
push
mov
int3
das
adc
rorb
mov
cltd
add
outsl
std
incl
mov
sbbl
cmp
ja
lods
ljmp
mov
roll
inc
dec
jno
pop
cmp
mov
popf
test
mov
lock
mov
fmul
cmc
jg
inc
dec
rolb
aaa
push
xchg
int3
dec
sub
cmp
insb
dec
xor
ds
ljmp
in
pop
stc
cmpsb
cmp
addr16
lds
lock
jmp
loope
and
shlb
sub
pop
xchg
inc
mov
lret
cli
lcall
xchg
add
dec
divl
cmc
repz
stc
es
incl
pop
mov
std
aas
inc
mull
cli
dec
or
jmp
lret
iret
pop
cmp
push
test
pop
in
cmp
push
push
mov
xorb
jo,pn
ss
mov
jbe
fildll
mov
outsl
jmp
shl
sub
jmp
jae
lret
sbb
xor
xchg
std
jbe
or
or
sbb
pop
loop
push
sbb
jg
mov
stc
ljmp
mov
les
das
enter
inc
cmp
icebp
insl
push
movsl
pop
jns
sbb
mov
xchg
call
in
mov
rcll
sub
sti
jle
mov
xchg
enter
addr16
aaa
int
jg
je
pop
aad
xor
adc
ret
xchg
add
sub
adc
sub
inc
fcomi
dec
push
int
and
xor
add
fcomip
int3
push
gs
insb
lods
pop
insb
mov
popf
pop
lds
add
dec
sub
pushl
daa
push
add
mov
push
xlat
push
xor
idivb
push
or
std
mov
dec
push
sbb
xor
clc
inc
iret
outsl
sbb
push
and
rcrl
imul
incl
mov
jmp
cltd
out
jp
xor
dec
push
push
mov
out
outsb
jge
jbe
ds
xchg
fimuls
call
jns
sbb
je
rol
test
iret
xchg
lahf
std
stos
push
add
ljmp
mov
sbb
jnp
out
jbe
inc
adc
sbb
stos
pushl
xchg
xchg
add
inc
iret
sbb
aas
xor
stos
mov
inc
testb
mov
xchg
jae
xchg
lahf
mov
add
sahf
fwait
push
stos
stos
mov
das
jge
pop
cmp
ret
xchg
mov
and
mov
cli
jg
pop
mov
sahf
inc
mov
dec
lret
lret
inc
shll
stos
jmp
addr16
xchg
and
xchg
data16
leave
mull
adc
leave
out
jnp
cwtl
mov
movsb
fistpll
pop
insl
mov
or
test
adc
sbb
out
incb
mov
xor
pushf
jge
sbb
xchg
pushl
jo
sti
enter
mov
and
lcall
sahf
xchg
mov
sbb
sbb
mov
inc
dec
shr
cld
push
rorl
sbb
andb
leave
lcall
aam
inc
js
fstpt
je
dec
jns
aaa
jge
mov
jle
incl
inc
scas
or
lret
push
data16
movb
cmp
lods
cwtl
push
add
out
inc
lahf
add
add
inc
cld
xchg
daa
mov
dec
nop
aad
pop
ss
cli
mov
inc
jo
pushl
ret
les
xchg
inc
gs
aad
in
sti
leave
push
inc
in
push
iret
mov
cmp
lods
js
popa
rolb
and
pop
mov
mov
xchg
gs
icebp
incb
xor
loop
je
or
mov
pushl
xlat
fcmovnbe
std
mov
mov
jb
ljmp
push
jb
rorl
test
mov
cmp
mov
cmp
repz
or
jmp
add
mov
dec
shll
fwait
ret
roll
pushf
xchg
adc
mulb
fyl2x
dec
call
mov
subl
stos
sarl
sti
movsl
mov
outsb
sbb
fdivrs
andb
pop
cmp
in
insb
pop
jbe
or
mov
imull
push
lret
mov
call
push
cmp
sbb
or
addr16
xlat
mov
cmc
inc
insb
lods
jne
mov
das
lock
jge
jns
fcmovnu
and
pop
cltd
fwait
pop
std
or
cmp
mov
pop
sub
xchg
loope
cli
hlt
xchg
mov
mov
inc
js
out
ret
lcall
imul
sub
push
mov
das
loope
sub
mov
hlt
sar
mov
pop
pushf
popf
inc
icebp
mov
out
jno
inc
int3
jl
notl
mov
xor
mov
int
jb
ret
out
sub
out
imul
call
sub
fcmovb
add
shl
lahf
popa
cmc
push
outsb
into
and
lcall
imul
push
jg
push
pop
jle
cmp
iret
enter
test
call
xchg
xchg
push
insl
jns
pop
daa
lret
aam
and
jo
add
lcall
xor
fdivrl
imul
jmp
jg
scas
sbb
hlt
ficomps
adc
scas
jecxz
push
clc
frstor
iret
ss
lods
jmp
cld
addr16
data16
jle
pop
and
dec
hlt
pushf
inc
fldenv
xchg
out
dec
gs
fucomip
jg
push
repz
xchg
or
sbb
loop
dec
lret
incl
lds
mov
xchg
and
cwtl
decl
je
int3
aad
jecxz
dec
xor
or
mov
or
mov
movsl
cmp
fisubs
lcall
fldcw
cmpsl
xchg
jmp
mov
lock
stc
push
cltd
jg
xor
push
call
add
cli
sbb
or
out
push
das
repnz
push
gs
push
pushl
push
push
xchg
hlt
xchg
test
test
out
cld
decl
sbb
mov
pop
incb
mov
mov
mov
data16
pop
nop
movsb
mov
repnz
xchg
and
dec
cld
in
outsb
jns
enter
dec
lods
and
adcl
loopne
outsl
cmpsb
add
je
adc
mov
dec
jmp
lahf
mov
mov
or
add
jnp
aam
call
jae
ret
and
popa
adc
xor
imul
jmp
addr16
jle
loop
push
push
sbb
rcrb
sub
lret
cwtl
sub
lock
fnstenv
ja
sar
cli
xchg
inc
sub
pop
add
adc
pop
rcrl
push
jae
jg
dec
rolb
std
mul
jnp
iret
push
push
mov
pushf
test
lcall
int
mov
jecxz
and
out
cmp
aaa
and
mov
inc
mov
or
fcoms
test
sbb
cmp
jns
sub
decl
xlat
or
pop
lock
in
popa
adc
dec
jmp
dec
lods
fnstcw
clc
jg
push
and
addb
sahf
es
pushf
cli
xchg
cmp
push
out
mov
call
sub
sub
adcb
dec
outsl
lock
xor
or
wbinvd
mov
xor
jmp
mov
jae
daa
mov
jge
pop
arpl
mov
xchg
dec
or
add
push
aas
cmc
lock
ds
sub
push
xchg
mov
mov
dec
or
aad
imul
jle
push
sbb
mov
cld
mov
or
out
out
dec
test
gs
push
jmp
adc
ds
movsl
mov
mov
je
stos
and
loopne
push
stos
jbe
and
cli
ret
push
enter
es
add
inc
sub
call
decl
cwtl
inc
xchg
jle
fwait
in
cmp
push
push
arpl
lret
loop
das
hlt
es
out
out
js
dec
stos
into
mov
incl
inc
dec
aas
add
sarl
daa
fwait
adc
xchg
pop
mov
cmp
das
pushf
mov
push
push
dec
jns
jae
cltd
mov
jmp
mov
jecxz
mov
dec
pop
add
in
repz
and
mov
ljmp
adc
inc
inc
adc
test
fs
jmp
pushf
mov
repz
and
adc
sub
dec
sub
lods
movsb
jno
adc
push
ljmp
imull
dec
sbb
dec
cmpsb
push
cmp
stos
movsl
sbb
sbb
xchg
lret
add
arpl
fidivrl
jne
call
and
sahf
je
mov
adc
insl
jnp
xor
adc
jns
inc
mov
pop
jmp
iret
imul
mov
jle
out
ficomps
loop
fs
add
and
jg
xchg
shlb
mov
fistl
or
jmp
lcall
ljmp
loopne
call
int3
scas
xchg
mov
or
cmp
jbe
pushl
sub
scas
jmp
inc
les
lods
jno
xor
outsl
icebp
icebp
mov
push
out
movsl
daa
sahf
lcall
lcall
push
fcoml
idiv
decl
sbb
push
stc
adc
inc
push
imul
pop
adc
lcall
inc
out
loope
jmp
fisttpl
outsb
xchg
jae
mov
jno
pop
sub
cmc
mov
jmp
jmp
pop
or
jl
mov
fildll
xor
pop
je
leave
rcrl
cmp
jno
out
mov
int
sar
add
jg
jno
lods
add
lcall
std
jmp
mov
stc
inc
jge
cld
inc
push
inc
xchg
xchg
jge
jle
mov
bswap
out
rclb
pusha
pop
jae
mov
sbb
subb
std
lods
daa
sub
adc
pop
incl
fwait
jmp
or
jns
test
int3
mov
pop
or
xchg
add
cli
mov
repnz
mov
jmp
hlt
std
pop
mov
mov
fcmovu
push
pop
push
push
mov
nop
mov
pop
jg
jmp
sbb
stc
test
sarb
ljmp
lea
mov
fisubs
sbb
aam
push
or
addr16
xchg
lcall
mov
out
xor
neg
pop
popl
das
mov
call
test
adc
mulb
push
xchg
push
cld
pop
inc
enter
sub
mov
add
mov
stos
insl
inc
mov
adc
mov
cmpsl
xchg
mov
shlb
dec
adc
fistps
xor
sarl
jnp
push
imul
and
dec
mov
inc
xor
out
push
mov
daa
aaa
call
inc
jbe
sub
dec
dec
aad
repz
push
decl
cltd
lock
fnstsw
push
scas
pop
cmc
es
lcall
mov
repz
and
mov
mov
into
add
dec
pop
xlat
in
pop
scas
mov
call
out
hlt
adc
dec
insl
jecxz
xorl
out
ds
jmp
lahf
lds
outsl
into
es
push
jbe
jnp
xchg
inc
pop
loop
xchg
in
cwtl
pop
lahf
sub
loope
push
subb
ret
ljmp
mov
jg
jo
dec
ss
iret
cld
mov
jle
add
mov
outsb
dec
add
ja
decl
xor
das
les
popf
mov
fists
pop
xchg
xlat
ficomps
mov
jnp
xor
sbb
cld
jno
mov
cltd
cmpsl
flds
dec
adc
dec
mov
ret
sar
sub
sti
jmp
or
jns
fs
repz
out
inc
pop
xchg
or
xchg
jno
jle
sbb
jecxz
les
jmp
jg
adc
mov
lea
les
rcrl
js
outsl
cld
pushf
xchg
fs
pop
test
test
mov
push
popf
xor
repz
mov
pop
cli
inc
or
push
nop
push
jb
les
inc
in
in
cmp
cltd
out
inc
push
shl
sbb
cli
pop
loopne
mov
jmp
enter
jp
mov
mov
jle
into
push
les
repz
or
loope
int
pop
int3
and
xor
cld
loop
push
xchg
rorb
loop
add
iret
imul
cmp
loop
mov
outsl
cld
incl
push
aaa
aaa
fcoml
je
add
out
pushl
mov
adc
sahf
aam
enter
cmc
xchg
cmp
int3
sbb
nop
sarl
jmp
pop
enter
nop
push
cli
pop
dec
sub
jno
call
jle
mov
cld
in
mov
mov
js
ljmp
aas
sbb
dec
out
shll
rorl
sub
addr16
mov
dec
incl
jecxz
push
jno
sbb
dec
je
add
nop
xchg
cmc
or
push
adc
into
fsubs
incb
or
pop
lret
fmulp
outsl
std
sbb
jmp
hlt
jbe
mov
and
dec
loope
jb
mov
sub
repz
aaa
in
and
daa
mov
ljmp
faddp
scas
cmp
push
aaa
pop
jge
push
adc
lods
mov
mov
dec
sub
cmpsb
cli
fwait
inc
clc
or
enter
fisttps
add
pop
std
scas
lcall
movsb
daa
cmpsl
test
and
decl
stos
mov
or
pop
mov
loope
jg
shll
sbb
xchg
imul
rcl
sub
mov
aaa
inc
fists
aas
or
inc
rcl
das
sbb
fists
jmp
insl
push
icebp
mov
xchg
test
sbb
pop
push
inc
fimull
in
test
decl
loopne
mov
nop
scas
sub
or
inc
scas
cmp
pushl
sbb
das
sub
xchg
inc
popa
add
fsubrs
aad
orl
call
pusha
movsl
xor
test
pop
decl
add
popa
outsl
add
stos
clc
adc
loop
insb
cmp
push
fcmovne
sub
add
or
jl
clc
ljmp
insl
icebp
inc
push
mov
cmp
mov
mov
ljmp
xchg
out
or
jo
dec
les
out
sbb
lret
sub
or
call
dec
add
loopne
sbb
xchg
mov
inc
sti
pushf
out
mov
push
clc
push
jg
decl
and
add
inc
xlat
outsl
sbb
lcall
repz
xchg
push
jp
aas
lods
sahf
or
lock
jg
cmp
inc
xor
gs
sarl
cmp
lcall
and
jg
pusha
push
sub
xchg
sub
int
mov
push
nop
es
in
popa
ljmp
adc
push
mov
xor
bnd
test
push
int3
add
daa
sub
lret
mov
pop
xchg
sbb
xchg
fcmovnb
das
andl
lods
push
test
test
outsl
sbb
loope
push
mov
lds
mov
inc
ret
cmp
cmpsb
add
call
fildl
or
mov
push
repnz
mov
jp
jg
stos
test
jmp
mov
lcall
in
jns
insb
mov
fisubrl
jmp
lea
mov
jbe
mov
push
xchg
cmp
ficoml
pop
cmp
push
sbb
xchg
xchg
cmp
lods
add
sbb
cmp
mov
jmp
jg
pop
call
inc
adc
push
sub
pusha
xchg
sbbb
fdivrl
or
nop
aaa
or
repz
jo
jg
lods
mov
lods
push
addr16
pop
stos
mov
inc
xchg
scas
push
dec
dec
cmc
popf
idivl
mov
fsub
add
pop
call
lea
xchg
pop
cwtl
add
addr16
stc
mov
aam
add
addr16
push
adc
mov
clc
clc
sbb
mov
test
pop
add
mov
imul
pushl
and
sub
xchg
ds
sub
cmp
call
pop
pushf
aam
ja
push
cmc
incl
fadds
lret
jg
cmpsb
mov
cmp
sbb
ljmp
rorl
inc
add
mov
cmp
xchg
aas
fs
xchg
imul
push
lds
add
addr16
mov
scas
jge
mov
mov
daa
or
decl
cmpsl
add
repnz
xor
pop
sbb
mov
cld
pop
sbb
outsl
push
pop
mov
out
cltd
mov
cmp
mov
imul
add
in
adc
test
cli
pop
call
fwait
sbbb
push
out
cld
ljmp
repnz
pushl
in
leave
repnz
lds
or
push
fistpl
dec
sahf
aad
stos
ss
call
xchg
clc
adc
inc
out
xchg
dec
push
mov
pop
mov
inc
jno
fdivr
jmp
cmp
mul
lret
pop
xlat
fistps
sub
jecxz
inc
imulb
lds
cmp
arpl
ja
dec
add
mov
mov
jp
hlt
pushl
stc
push
ds
jne
pop
test
sahf
pop
test
cltd
out
sbb
sbb
mov
push
test
stos
or
cwtl
mov
xchg
dec
lcall
aaa
jp
call
in
sub
push
mov
pushl
rcrl
jl
dec
cmp
dec
jnp
scas
xlat
pop
xchg
lcall
lret
fsub
cli
jmp
sbb
mov
out
fcomp
ljmp
loop
leave
xor
mov
lret
test
jecxz
adc
lret
hlt
fildl
fimuls
xchg
shr
pop
push
movsb
jmp
int3
in
xor
sub
cli
outsl
jns
sbb
je
and
nop
xor
fildl
xlat
cmp
call
int
mov
test
xor
mov
pop
mov
lods
clc
jg
adc
adc
fcoml
adc
fs
stc
in
push
xor
lcall
or
cltd
sub
repz
sbb
jl
lea
and
dec
mov
movsb
or
incl
adc
cmpsl
popf
ret
sbb
jmp
out
cmp
add
icebp
in
and
xchg
mov
loope
sub
jns
loope
push
mov
loopne
xchg
jbe
stos
dec
xor
aas
cmp
xlat
cmpsb
sti
mov
insl
pop
inc
sbb
jb
jmp
sub
jbe
mov
push
lds
and
ds
pop
fisttps
dec
das
inc
jge
cld
jg
inc
inc
inc
adc
mov
lods
mov
push
int3
rcll
inc
lds
sub
jg
addr16
adc
scas
add
pop
dec
shll
or
or
mov
xchg
out
adc
xor
outsb
mov
test
daa
int3
je
movsb
xchg
out
xor
lret
mov
movsb
nop
outsb
ud0
call
ss
ret
inc
icebp
jns
pop
int3
xchg
shrb
stos
xchg
gs
les
mov
icebp
loop
add
dec
int3
pop
in
xor
push
std
lcall
shrb
ret
lods
aam
cld
sub
lahf
jbe
jo
cmc
inc
repz
cmp
jg
sbb
inc
inc
lahf
push
jp
adc
movsl
xor
lcall
and
lock
cld
fcomip
cmp
mov
jbe
repnz
fptan
dec
dec
std
jmp
mov
cmpsb
jo
push
dec
stc
xlat
xor
out
cmp
call
clc
call
sti
stos
popf
xchg
and
movsb
or
call
adc
testl
nop
dec
cmpsl
lock
mov
sub
or
out
add
pushl
les
lret
push
pop
lret
inc
and
jbe
loopne
xchg
movsl
out
decl
icebp
jp
sub
cmpsb
push
cmpsb
leave
adc
pop
repnz
cli
sar
dec
jle
lds
ljmp
lock
scas
loopne
mov
jb
xchg
pop
es
imul
cmpsb
mov
lcall
pop
popa
arpl
xchg
test
mov
mov
mov
loope
mov
mov
stos
pop
sbb
sub
push
fsubrl
arpl
test
out
cli
ljmp
outsl
fmuls
int
inc
mov
sarb
test
cmp
sbb
cwtl
movsw
sbb
dec
pop
lds
dec
loope
scas
pusha
fcomps
xor
test
xor
icebp
push
out
xchg
pop
jmp
sub
js
and
pushl
outsb
xchg
pop
mov
lret
mov
fmull
mov
movsl
inc
xor
leave
cmp
dec
add
ljmp
icebp
lcall
add
dec
add
cli
inc
int
mov
and
or
ret
or
fucomip
pushl
jo
out
les
xor
mov
fcos
jmp
jmp
mov
inc
rcr
int3
inc
iret
push
nop
xchg
pop
pop
cwtl
lret
ja
mov
sar
hlt
cmpsb
cwtl
fsubs
cmp
pop
or
mov
repz
pushl
maxps
or
dec
pop
push
out
sarl
push
fnstsw
imul
in
mov
fcmovne
das
fiadds
gs
sub
and
sbb
decl
mov
dec
fs
in
push
xchg
push
lods
dec
mov
sbb
aad
test
incl
sub
dec
cwtl
call
mov
xchg
add
icebp
inc
cmp
stc
sub
testb
ljmp
jle
pop
inc
push
jmp
imulb
mov
je
fwait
cmpsb
pinsrw
lea
popf
out
cmp
sub
sbb
dec
or
pushl
rclb
xchg
iret
pop
data16
xchg
cwtl
jne
hlt
lret
enter
int
int
in
pushl
lods
cmpsl
xchg
inc
sbb
jb
out
pop
or
ljmp
arpl
cmp
or
jnp
lods
cmp
movsl
rcrl
imul
lcall
ret
enter
mov
inc
cmp
test
cmp
test
fbstp
shr
in
lcall
xor
testl
movsl
shlb
call
sti
test
jne
xor
fnsave
sub
bound
lods
sub
mov
jns
mov
jmp
loopne
cmpsb
and
sub
pop
movsl
gs
and
sbb
and
or
outsl
mov
pop
push
scas
xor
loop
pop
out
ficoml
jmp
out
mov
mov
mov
cmc
test
push
es
sub
loopne
jmp
jo
pop
cmpl
lahf
or
and
daa
decl
decl
fisttpll
inc
add
jmp
inc
xchg
and
jmp
jae
aad
cwtl
add
nop
pop
mov
ret
mov
incb
dec
repz
and
ja
int
pop
xchg
fcompl
mov
dec
repz
pusha
or
lcall
stos
mov
sub
cmpsl
addl
mov
dec
sub
mov
inc
push
push
in
icebp
call
sbb
sti
popf
ss
fs
clc
insl
arpl
ljmp
jge
or
sbb
test
lods
rcrb
pop
shlb
inc
jg
incl
stos
fists
ds
mov
jecxz
decl
shl
sbb
dec
push
pop
xor
xor
or
and
or
lcall
inc
inc
aad
inc
pop
mov
sub
and
xor
sub
pushl
mov
lock
addr16
stos
jno
stos
mov
push
outsl
pop
add
and
ljmp
shlb
ss
xchg
ljmp
hlt
pop
out
dec
sarb
inc
decl
std
outsb
scas
inc
jl
cmc
pusha
xchg
mov
mov
mov
inc
mov
cltd
pusha
inc
jmp
fmull
std
call
adc
pop
aaa
mov
lcall
dec
cmc
dec
call
out
dec
mov
hlt
aaa
xchg
sbb
flds
lock
nop
mov
in
mov
mov
xor
and
pop
out
add
addb
xor
lds
lea
pop
loop
lcall
call
subb
xor
sbb
mov
out
adc
negb
pop
das
jae
xchg
shll
cli
mov
pop
pop
cmp
fwait
shrl
push
dec
aad
std
add
mov
dec
pop
cmpsl
mov
sbb
xor
cli
lret
push
mov
popa
jp
jo
pop
mov
or
lcall
loop
dec
jne
jbe
jae
into
dec
clc
test
shll
cs
lods
sbb
out
push
ss
sub
xlat
subl
leave
mov
pop
pushf
cltd
shl
outsb
mov
xor
xchg
incb
xchg
cmp
repnz
fs
cmp
fwait
add
inc
out
mov
pop
pop
or
adc
scas
xchg
xlat
xlat
pushl
cwtl
lcall
push
mov
add
sub
out
ret
dec
std
jg
incl
xchg
inc
aaa
addr16
bound
dec
mov
shll
jg
or
repz
add
in
daa
pop
ficompl
mov
push
xor
sbb
decb
lcall
inc
mov
es
mov
ljmp
insb
lret
mov
jle
cwtl
mov
mov
pushf
imul
loopne
fstpl
test
lock
insb
in
add
xor
outsl
cld
jg
xchg
push
mov
icebp
fistps
dec
testl
lock
clc
call
dec
push
clc
xor
push
pop
lahf
arpl
mov
popa
jne
adc
mov
stos
inc
pushf
js
cmp
out
incl
xchg
jmp
cmc
inc
daa
pop
movsb
sub
rclb
pusha
out
add
popf
lock
mov
rol
xor
inc
xor
cmp
int3
je
cvtps2pd
jg
enter
xor
test
inc
mov
or
loopne
ljmp
inc
adc
push
sub
daa
inc
mov
pop
cmpsl
pop
add
addl
decl
pop
jne
ret
xor
mov
mov
movsb
insl
mov
incl
adc
add
mov
push
sub
loop
cmp
mov
sub
push
lods
inc
hlt
jg
adc
test
outsb
mov
pop
push
jle
lcall
jo
dec
mov
loopne
sti
shlb
mov
fisubrs
popf
or
sbb
jne
movsl
push
sarb
inc
dec
xor
pushf
push
mov
jle
or
fidivl
call
mov
std
fnstsw
fistps
pop
cld
incl
push
dec
adc
aad
push
or
rolb
sbb
fnsetpm(287
adc
mov
psubd
pop
imulb
test
cs
cltd
fdivrl
pop
add
jecxz
xchg
xor
push
push
lcall
jecxz
xor
and
icebp
lcall
sub
inc
mov
inc
xor
ljmp
fcomip
ja
adc
mov
push
cmp
inc
mov
std
and
test
add
scas
cmp
mov
sub
mov
sub
push
loop
out
fisubrs
xchg
rcr
sub
or
jns
call
clc
ja
je
insb
pop
jb
lds
jmp
add
rcrb
cmc
pop
mov
scas
pop
pop
adc
mov
int3
lret
xchg
sbb
cltd
scas
dec
cmpps
mov
ds
xor
push
dec
xchg
lret
negb
add
orb
ljmp
cmc
xchg
jge
out
xor
leave
mov
sub
pushf
les
mov
jmp
inc
sbbb
popf
sbb
cmovb
ficomps
cmc
dec
sub
pop
cmp
sbb
hlt
aaa
fcmove
add
mov
dec
push
inc
adc
das
cld
call
mov
imul
jp
fs
mov
decl
adc
mov
and
movsb
mov
arpl
mov
xor
int
es
ljmp
lock
cmpsl
loope
lock
adc
ficompl
rorl
and
sbb
out
pop
ljmp
shll
lret
popf
rorl
adc
pop
adc
dec
add
or
dec
out
shrl
jmp
lahf
mulb
xor
and
adc
pop
popa
mov
fsubrl
mov
jg
gs
call
jne
in
es
das
dec
pop
xlat
dec
sahf
jno
fcmovbe
xchg
push
jnp
sti
xchg
ljmp
cld
aaa
cmp
test
xchg
pop
xchg
sti
bound
add
mov
sub
incl
cmp
dec
fadd
enter
mov
pop
mov
and
xchg
jbe
xchg
pop
xchg
xor
mov
cmp
stos
cmp
les
data16
fdivrl
add
sbb
lahf
decl
call
inc
sarb
in
adc
daa
ja
shlb
mov
sub
loop
lods
incl
pop
adc
jecxz
sarb
xchg
mov
pushf
test
aas
xchg
loop
mov
inc
sub
jmp
cmp
icebp
test
repz
in
clc
loope
sahf
sub
pop
cmp
call
stc
sbb
xchg
mov
and
outsl
call
js
stc
sbb
cmpl
xchg
xchg
mov
pop
in
dec
call
cli
call
lds
cmp
fidivrl
insb
sar
jb
pop
cmc
or
insb
push
mov
add
outsb
shl
jo
lods
lods
jp
xor
cmp
push
incl
or
lcall
popf
jbe
or
movsl
int
xor
pushl
mov
stc
shrb
std
mov
clc
sub
jbe
mov
xchg
or
jg
mov
or
push
mov
les
jmp
popf
hlt
dec
arpl
push
test
movb
inc
xchg
sbb
jne
push
jge
xchg
xorb
out
hlt
push
enter
outsl
cld
inc
dec
jmp
das
dec
movsl
and
and
or
pop
clc
jmp
xchg
sub
aaa
xlat
fmulp
fists
in
fcoml
cmp
jge
in
mov
jae
jecxz
nop
push
sbb
push
loopne
xchg
pop
jle
mov
jmp
ds
pop
jo
sbb
into
add
clc
xchg
pop
lock
popf
decl
pop
sbb
or
mov
loope
repnz
call
das
lock
lods
es
ret
pop
mov
stc
pushl
jae
ljmp
loope
lea
popa
lock
not
in
xor
pop
or
fiaddl
jg
xchg
nop
movsl
xchg
mov
and
xor
jle
das
lock
cld
and
out
mov
jge
xchg
pop
sahf
test
notl
pushf
mov
xchg
loope
lock
daa
xor
loopne
mull
imul
rol
mov
call
xor
xchg
dec
ds
pop
repz
inc
push
test
call
dec
scas
xchg
mov
aam
add
aas
sarl
das
lock
icebp
xchg
mov
pop
stos
arpl
add
stos
ljmp
cmc
and
mulb
jo
pop
lret
pop
jp
into
xchg
data16
or
jmp
into
ljmp
xchg
shll
faddl
xor
fstpt
movsb
jbe
mov
call
fidivrl
ret
scas
mov
jle
dec
add
push
push
js
push
jnp
xchg
dec
push
orb
sbb
andb
in
xlat
aad
into
nop
mov
cmp
mov
mov
sub
jmp
loop
fbld
cmp
lock
add
or
pushl
ds
sbbl
fldz
mov
sbb
pop
xchg
xor
sub
lods
xchg
jg
incl
mov
mov
mov
ret
mov
sbb
incl
leave
rorb
pop
cs
add
lds
push
push
pushf
cmp
xor
fdivrl
dec
lock
pop
fnsave
insl
jnp
jns
mov
sbb
call
sti
pushf
notb
pop
xchg
out
mov
push
sbb
loop
jnp
pop
cli
lcall
aam
ja
imul
daa
pushf
sub
icebp
xchg
jle
test
jmp
mov
adc
negl
ror
stc
cmp
ret
sbb
or
sub
xchg
jle
sub
jmp
dec
insb
add
push
pop
mov
cmp
icebp
repz
pop
leave
push
mov
daa
cmpsl
arpl
roll
xor
int
enter
inc
push
stos
call
test
aam
adc
push
addb
cmpsb
mov
dec
inc
lret
or
decl
xor
and
pop
pop
cmp
cwtl
gs
cmp
fisubl
cmc
into
mov
call
xchg
sahf
imul
push
clc
andl
push
inc
rolb
mov
in
subl
mov
bound
nop
sub
lods
sub
mov
xor
ror
jb
inc
lcall
cli
push
mov
jmp
and
xchg
inc
sti
movsl
lods
adc
sbb
mov
ds
xchg
mov
incl
lock
mov
cltd
or
or
test
and
xchg
adc
sahf
aam
mov
call
cld
add
or
repnz
lods
push
call
xor
add
outsb
cmpsb
dec
rol
cli
jmp
cwtl
lahf
aad
std
push
sub
outsl
add
inc
pushl
stos
bound
mov
jmp
or
jns
jp
out
cmp
nop
push
inc
iret
iret
ja
stos
jmp
addr16
xchg
xor
pop
inc
dec
popa
inc
ljmp
push
outsl
hlt
incl
push
adc
adc
pushf
mov
cld
fbld
dec
lcall
decl
add
call
ljmp
clc
inc
inc
jmp
push
dec
xor
adc
shll
in
or
mov
mov
call
mov
shll
sbb
pop
sub
outsl
inc
mov
push
jle
push
mov
ljmp
popf
loope
ror
push
dec
mov
test
dec
inc
dec
call
jg
sub
jp
outsl
mov
in
xor
xor
cwtl
mov
lcall
mov
jae
dec
mov
cmp
xchg
nop
cmpsb
ds
push
fmull
inc
je
pop
mov
jg
dec
dec
div
mov
test
lock
pop
pop
sub
cli
lcall
sbb
and
push
iret
inc
movl
test
fbstp
int3
jmp
inc
out
xor
enter
xchg
rorl
sbb
jne
xchg
int
decl
std
pop
jno
pop
lds
lret
push
in
push
call
pushl
int3
aas
mov
mov
sahf
jl
call
pop
inc
ds
lcall
xor
mov
iret
mov
jmp
add
orl
or
mov
or
mov
in
icebp
mov
adcb
push
inc
xor
sub
mov
bound
in
cmpsb
popf
pop
lahf
bound
jecxz
lcall
xchg
in
push
mov
inc
xor
pop
jge
mov
inc
xchg
jg
mov
adc
mov
mov
lcall
mov
pop
cmc
call
pushl
xchg
movsl
xlat
fucomp
rclb
lret
xlat
sub
fimull
aas
xlat
fbld
test
sbb
mov
xor
mov
iret
mov
xchg
ljmp
js
pop
ja
fbld
fs
jg
jmp
jbe
xchg
popl
jmp
ret
jno
or
in
dec
inc
dec
imul
addl
pushl
inc
fnstenv
jnp,pt
xor
nop
jl
jecxz
hlt
fs
pushl
stos
mov
out
cmp
bound
dec
xchg
jne
ljmp
rcrb
add
mov
jmp
cwtl
xchg
fistl
sbb
add
mov
add
ljmp
fs
add
and
cmpsb
aam
dec
notb
jns
mov
xchg
cmc
adc
cld
mov
xchg
xor
aaa
push
or
pop
ljmp
hlt
pushl
insl
mulb
cmp
cwtl
repnz
ljmp
lcall
or
adcb
push
cmp
aas
loope
movsl
push
outsl
lock
cli
adc
fstpl
pushf
sub
xlat
pop
test
push
out
adcb
adc
into
in
cmp
sbb
cmc
decl
push
fcoms
xor
in
or
xchg
mov
enter
jae
lock
repnz
inc
push
xor
dec
xlat
aas
mov
loopne
stos
jmp
cltd
mov
lret
add
insl
std
lahf
cwtl
ljmp
call
pop
fistps
ljmp
sub
and
pop
lret
dec
incl
out
fdivs
nop
mov
sbbb
jecxz
mov
shrb
adc
lcall
xor
mov
fistpl
sub
daa
or
imul
das
cld
ds
fcom
add
jge
rdmsr
jns
adc
jge
ret
jo
stc
push
xor
or
pop
les
pop
xchg
pop
push
jecxz
mov
aad
sbb
add
ljmp
js
inc
aam
and
xchg
icebp
ret
pop
xchg
pop
mov
jecxz
sar
scas
mov
fwait
push
add
fxch
stc
nop
shr
test
pop
inc
cmp
and
inc
xchg
cmp
out
adcl
or
sbb
aas
addr16
dec
adc
shrl
sbb
outsl
xchg
out
pop
xchg
pop
sbb
sar
bound
adcl
mov
repnz
push
mov
jecxz
repz
push
hlt
jmp
aas
pushf
jb
ror
sbb
dec
jmp
cltd
push
sar
out
cmpsl
loopne
pop
push
movsl
jno
je
nop
fisubrs
test
sub
xchg
xlat
inc
mov
js
call
cmp
ret
push
inc
imul
adc
mov
sbb
pop
lods
jge
imulb
xor
sti
call
inc
cmp
fcmovnb
jg
das
cmc
push
jp
mov
fstp
push
in
sahf
outsl
mov
mov
das
xchg
iret
movl
callw
or
cmpl
in
push
in
cli
or
cmp
mov
pop
pop
and
mov
fildll
mov
push
dec
push
mov
jmp
andl
add
add
dec
inc
add
sbb
outsb
mov
xor
cmpsb
jae
lcall
push
test
add
or
mov
dec
int
std
and
add
cltd
xchg
test
mov
jns
inc
ljmp
xchg
mov
cmp
aas
jp
pop
jmp
iret
or
adc
push
aam
std
xor
jg
or
mov
lahf
mov
fcomps
pusha
lcall
jg
mov
push
lods
xchg
mov
push
fists
out
adc
cli
pushl
mov
adc
push
in
leave
int
sub
ret
jmp
mov
mov
xchg
lds
ror
iret
ss
fiadds
fildl
inc
push
xor
add
and
repz
and
clc
call
pushf
adc
dec
imul
push
mov
mov
and
dec
pop
loopne
mov
call
outsb
dec
jge
mov
lret
aaa
adcl
sub
xor
mov
mov
push
xchg
add
notb
aas
ljmp
mov
popa
in
or
push
bound
mov
ret
dec
insl
xchg
lcall
mov
addb
mov
push
std
or
push
mov
scas
dec
jg
call
inc
dec
or
call
dec
push
xorb
jg
dec
and
push
sbb
sub
jo
cmp
mov
int
mov
faddl
mov
syscall
mov
aam
mov
pop
clc
sub
cmpsb
dec
decl
daa
and
ljmp
cmpb
test
xor
shll
add
lret
lock
rorb
decl
mov
outsl
dec
push
jo
mov
stos
lss
pop
ljmp
subb
int3
das
ds
mov
adc
adc
out
pushl
hlt
and
scas
inc
test
pop
jb
dec
shll
xor
aaa
cli
or
jbe
ret
mov
inc
adc
movsb
scas
jmp
inc
sub
call
dec
sub
adc
dec
cmpsl
mov
sarl
out
pop
loop
jmp
cmp
sbb
or
inc
mov
add
inc
cld
push
rcr
sarb
inc
dec
or
sub
loopne
lds
fadds
xchg
and
cld
mov
fldt
dec
add
mov
pushf
or
mov
idiv
mov
sbb
jnp
fiaddl
jg
push
lahf
stc
pop
inc
bnd
jp
mov
out
fdivrs
jmp
call
dec
cmc
test
dec
jg
shl
fst
mov
cwtl
adc
jg
loopne
negl
xor
and
mov
or
mov
fsubs
ficompl
lock
pushl
sbb
adc
xchg
pop
sbb
movsl
mov
xchg
or
push
notl
dec
pop
sbb
mov
mov
hlt
fcoml
rcll
enter
test
pop
jp
cmpsb
push
mov
sub
cmc
out
call
hlt
jl
push
je
dec
add
pop
cmpsl
insl
shlb
mov
xchg
pop
fisttps
ret
jae
aaa
jb
jno
insb
lea
hlt
jne
push
push
dec
loopne
jmp
push
das
mov
xor
push
das
and
scas
cmpsl
cmp
std
push
jmp
inc
adc
outsb
mov
aaa
cmpsb
andl
jl
call
pop
push
negb
movsb
pop
jne
xchg
mov
mov
mov
jle
sar
jmp
scas
adc
lret
icebp
and
sahf
or
shr
scas
add
enter
out
jnp
pop
ljmp
pusha
mov
ja
dec
fistps
adc
cld
cmpsb
push
push
mov
push
into
cli
insb
pop
sub
decl
xchg
xor
addb
sti
add
pushl
mov
mov
mov
dec
inc
sbb
js
push
scas
shr
shll
pushl
add
leave
adcl
aaa
xchg
jge
stc
add
cld
push
clc
loopne
mov
in
pusha
xlat
push
popf
cmp
xor
add
mov
xor
inc
out
call
ljmp
outsl
out
mov
scas
out
pop
dec
fidivrs
cmc
cmpsb
mov
fucomp
and
call
cld
add
nop
pop
xchg
loope
sub
jmp
jnp
cmp
mov
mov
shrb
fwait
int3
insl
sbb
rcll
adc
mov
pop
or
mov
test
sub
sbb
and
notb
rcll
cmp
sar
decl
outsl
lcall
add
imul
loopne
pusha
inc
adc
call
subb
movsl
popa
int
jle
mov
insb
test
xchg
decb
std
pop
cmp
out
mov
imull
add
jg
mov
stc
mov
inc
cmpsl
pushf
sbbl
xchg
stos
push
jae
dec
call
xchg
insb
rcrl
int
xchg
mov
xor
push
xchg
jb
jge
ffreep
lods
jle
lods
and
cmpsb
jl
fucomip
lcall
sbb
pop
je
mov
and
fsub
pushl
dec
mov
fiaddl
test
dec
adc
imul
mov
mov
sub
call
add
rcll
aaa
hlt
icebp
movsb
push
aad
das
idivl
leave
iret
shr
fucom
inc
adc
xor
rcrb
lea
in
push
sub
ljmp
jnp
xchg
into
flds
lods
mov
jecxz
inc
sbb
inc
stos
test
xor
int3
cwtl
cmp
std
lcall
out
xor
push
adc
test
adc
enter
jmp
lcall
xchg
push
adc
mov
lret
add
stos
shlb
mov
adc
and
mov
outsl
xor
pop
cli
lods
inc
daa
loop
or
pop
in
das
adc
push
xor
lcall
std
lahf
push
loope
push
mov
jb
inc
sub
ret
ljmp
outsl
jg
fidivs
xchg
mov
mov
call
out
push
adc
mov
in
mov
mov
das
and
jge
xchg
pop
sbb
adc
sbb
push
jnp
scas
outsl
lods
ss
std
mov
xchg
hlt
movsl
mov
popa
jg
mov
inc
cld
das
std
jg
xchg
stos
mov
jle
mov
paddsb
or
mov
lcall
cmc
or
aam
jo
je
mov
dec
add
sar
andl
lods
mov
cmc
push
scas
arpl
lcall
cld
jg
pop
xor
adc
sbb
es
inc
lcall
xchg
mov
idivl
stos
mov
test
add
fistpl
ljmp
int
add
cltd
into
mov
or
call
mov
jg
push
test
mov
fidivl
push
or
movsl
cmovo
and
lcall
gs
fldl
or
sub
mov
ss
decl
sub
lret
imul
dec
out
aam
and
scas
cmp
add
adc
pushl
xchg
jecxz
xlat
ds
sub
fsubrp
int3
xor
cmp
iret
mov
nop
push
xchg
aaa
clc
jp
lds
cmp
adc
fwait
mov
or
xchg
lahf
xor
fisubs
decl
sti
adc
jno
sbb
call
jg
dec
pop
push
mov
into
cmpsl
mov
dec
sbb
xchg
mov
pop
aam
cmp
push
repz
call
ss
pop
clc
inc
out
adc
mov
test
mov
es
decl
mov
mov
mov
in
lea
pop
sub
lcall
cltd
push
jmp
stos
repnz
push
or
dec
sbb
int
xlat
mov
xchg
pop
lahf
jo
add
ljmp
jge
sbb
pop
std
leave
inc
clc
mov
into
adc
aad
push
push
gs
popf
adc
jnp
push
inc
jmp
repz
cmp
pop
dec
push
adc
lcall
insl
mov
cld
sarb
jo
imul
aaa
or
xor
call
fsts
ret
out
lret
xchg
dec
cmp
cltd
cmp
xor
ljmp
lock
adc
jb
call
push
mov
mov
into
cmp
aam
scas
cmp
lcall
filds
imul
fistl
enter
jns
das
mov
js
stos
arpl
or
dec
in
pop
adc
inc
mov
mov
in
mov
mov
fcmovnbe
inc
lock
ss
jle
cmc
sub
int3
jmp
outsb
xchg
mov
push
lock
fisttpll
add
lods
fiaddl
pop
sub
in
sbb
sbb
add
out
ret
loop
sbb
add
lret
pop
call
fmul
es
push
rorb
dec
push
adc
loopne
call
decb
push
dec
gs
mov
and
divl
movsl
rol
lods
inc
out
mov
push
hlt
lahf
sub
stos
outsl
inc
push
mov
mov
adcl
dec
mov
mov
cwtl
mov
int3
test
cld
cvtps2pd
cmc
aam
dec
hlt
push
cmp
aaa
add
call
and
add
and
mov
xchg
jbe
adc
mov
ljmp
lock
dec
cmpsl
aaa
in
push
fisttps
sub
orl
mov
out
mov
sub
pushf
push
int
fucomip
mov
xchg
mov
clc
sbb
fistps
mov
mull
outsb
push
cmpsb
xor
incl
clc
dec
out
mov
out
dec
mov
jbe
and
mov
cmp
push
ljmp
jg
shll
subb
pusha
out
jmp
loopne
jp
out
jae
test
sub
ljmp
xchg
cli
call
mov
xchg
and
sarb
fiaddl
mov
hlt
int
and
negb
nop
cmp
mov
jnp
test
mov
push
adc
cld
fstpl
js
and
stc
dec
imul
mov
inc
cwtl
out
mov
popa
and
pushl
repnz
push
xor
sub
or
enter
test
add
in
mov
movl
aam
icebp
xor
ljmp
pop
cmp
dec
jmp
mov
or
dec
inc
dec
test
sbb
test
sub
mov
loope
adc
sub
int
pushl
sti
pop
mulb
test
jecxz
xchg
sub
stos
test
jg
call
jmp
mov
loop
mov
scas
hlt
call
int
leave
mov
and
dec
or
pop
test
push
mov
cmp
jno
leave
push
mov
ljmp
cmpsb
pop
mov
pop
xlat
insl
outsb
dec
mov
jnp
add
es
dec
lret
hlt
fucomip
ljmp
inc
pop
dec
xchg
sub
stos
fisttpll
or
ljmp
jg
cwtl
pop
sbb
adc
lods
fidivrs
sub
or
mov
sbb
xchg
push
jae
mov
loopne
inc
fmuls
daa
popf
gs
pop
jmp
mov
bound
add
mov
data16
or
push
lods
inc
mov
insb
jno
sbb
sbb
outsl
shl
sbb
jg
xchg
mov
call
loop
jmp
push
cmp
aad
mov
lret
sub
popa
or
mov
incl
leave
dec
notb
es
ret
lcall
pop
dec
add
and
pop
mov
ss
push
mov
iret
sbb
cwtl
mov
sbb
pop
call
sub
and
pop
fldenv
jge
test
lods
and
push
or
fmull
bound
mov
test
movsb
inc
mov
pusha
xchg
enter
jmp
cltd
dec
xchg
ljmp
lret
std
sub
xchg
pop
push
add
fimull
lcall
test
pushf
pop
call
push
jecxz
inc
push
imul
jg
incl
loopne
push
aad
xchg
or
jne
stos
shll
jecxz
or
std
incl
negb
and
mov
imul
xchg
jge
loope
jne
decl
and
popa
shl
or
cltd
and
pop
sub
jg
xchg
xchg
dec
es
les
fcmovnu
loopne
pop
das
xchg
movsl
and
cld
call
insb
push
inc
and
notl
lret
push
xor
loop
fidivs
jns
or
loop
rcr
dec
jp
pop
addr16
mov
jnp,pt
adc
mov
sub
int
mov
jb
je
inc
cltd
repz
out
in
ds
shlb
sbb
sub
sub
xor
mov
jmp
pushl
inc
enter
lds
inc
xchg
pop
add
test
sbb
jge,pn
sbb
pop
pop
push
lahf
sub
faddl
mov
xor
aam
or
outsl
or
jp
xchg
sbb
push
mov
inc
call
mov
test
push
mov
aaa
ja
pop
mov
negb
inc
imul
push
push
aas
push
dec
stos
inc
xchg
incl
push
inc
repz
or
or
popf
pusha
or
frstor
in
jg
pushl
cmp
adc
loope
cmp
dec
push
dec
sbb
pushf
lods
jmp
arpl
jmp
in
add
inc
out
adc
in
jmp
data16
xchg
incl
push
stos
imul
jns
or
dec
rclb
pop
xchg
int3
sub
iret
sub
mov
push
andl
push
jae
addr16
mov
sbb
aam
jg
or
sub
pop
subl
aam
ljmp
adc
or
xchg
or
roll
fsts
or
or
jp
sub
sbb
je
and
xchg
ret
adc
adc
sbb
lcall
clc
mov
ja
movsl
bound
jmp
inc
or
xor
ljmp
sub
rorl
cmpb
loopne
sub
or
js
scas
inc
mov
mov
dec
fadds
ljmp
jg
fnsave
pusha
idiv
int
add
mov
mov
mov
stos
les
sub
decb
sbb
ds
icebp
shlb
std
incl
ss
mov
jp
jns
ds
sbb
mov
push
sbb
pop
cmpsb
in
push
push
inc
jg
jg
jmp
add
gs
inc
orl
js
fcmovnbe
mov
adc
xor
mov
jp
movsb
push
stc
xchg
jle
cli
add
hlt
movsl
pop
out
inc
push
lret
je
cmpsl
cmpsl
and
mov
mov
adc
sahf
fwait
jb
int
inc
pop
cld
jg
mov
pop
jo
mov
aad
popf
xchg
push
sub
and
add
decl
popa
orb
xor
in
aam
mov
and
and
rcrl
mov
lcall
lods
pop
gs
rol
push
mov
jmp
mov
lret
pop
mov
jne
cmpsl
mov
leave
rorb
push
inc
mov
int
pop
shlb
mov
sbb
ljmp
xchg
sub
lahf
lock
test
jae
inc
scas
cmc
sbb
jmp
xor
mov
mov
js
cltd
fldenv
lock
test
lock
push
clc
dec
sar
lcall
mov
cmp
aaa
fwait
ss
mov
add
sbb
lea
fwait
jae
data16
cltd
in
rorb
jbe
pop
ss
mov
xor
and
loopne
xor
inc
mov
xchg
or
xor
adc
adc
subb
push
mov
inc
fcoml
inc
push
fs
gs
enter
iret
or
cs
stc
fmull
incl
dec
imul
shll
int3
and
out
lcall
xchg
sahf
mov
xchg
cltd
rcrb
mov
adc
xchg
pushf
xchg
jg
out
push
mov
clc
mov
jmp
pop
stos
xor
xchg
decl
lods
and
cs
pusha
scas
xchg
stos
imul
pusha
and
bound
scas
lret
jns
xor
push
dec
xchg
clc
cmpsb
lcall
out
sbb
jo
loope
cs
mov
repnz
sub
sbb
call
xchg
fwait
insb
lahf
mov
shll
sub
mov
sbb
scas
mov
or
jae
mov
sbb
repz
and
add
mov
push
push
dec
xchg
cmpsb
jp
fnstsw
jg
mov
inc
inc
xor
mov
mov
add
push
jmp
cmp
add
mov
scas
out
outsl
pop
mov
cmp
jmp
dec
jno
xchg
into
xor
jae
cmc
jmp
xchg
les
sub
in
jo
mov
hlt
adc
out
pop
xchg
push
cmp
fmul
icebp
xchg
mov
les
jae
test
cltd
pop
mov
ljmp
icebp
xchg
jb
sbb
xor
int3
ljmp
ret
int
lcall
ficompl
jnp
insl
mov
cmp
gs
repz
sti
mov
data16
sub
movb
pop
mov
movsl
add
pop
mov
jp
es
scas
imul
cmpsb
loope
nop
push
mov
pushl
out
out
mov
sbb
std
dec
clc
inc
push
jnp
sub
leave
mov
jg
jmp
and
loope
dec
or
cwtl
push
mov
fnsave
lea
mov
outsb
mov
cs
sub
jle
jmp
call
cmpsb
jne
or
jmp
cmp
xchg
aam
icebp
pop
loopne
xchg
or
sub
ret
jnp
lock
sub
adc
jge
jns,pt
xlat
jg
xorb
in
inc
insb
loopne
jmp
hlt
xor
add
addr16
call
or
insb
jecxz
rcl
je
pop
loop
xchg
clc
cld
incl
scas
ljmp
loop
dec
push
jb
mov
lcall
pop
mov
outsl
adc
mov
cmp
mov
and
and
in
mov
aaa
push
lcall
in
or
add
jle
xacquire
cs
add
ljmp
arpl
stc
mov
mov
push
and
call
pop
xor
in
xor
jno
xchg
sbb
mov
test
lcallw
shrb
ret
mov
cmpsb
sbb
cmp
push
orl
lahf
dec
out
cmp
in
std
mov
inc
int
in
int
pop
and
clc
xor
adcl
mov
pushl
negl
jle
inc
sbb
or
lahf
repnz
xor
ret
js
push
sub
hlt
fldenv
pop
in
or
mov
push
imul
shll
jnp
inc
das
jg
jl
out
xchg
pop
jae
inc
lahf
incb
xor
fwait
decl
inc
andb
jmp
cmp
inc
inc
jns
jg
lcall
stc
dec
pop
mov
leave
push
mov
pop
pop
cwtl
in
fucomip
or
hlt
lcall
jns
imul
adcb
or
das
cli
sarl
dec
xchg
sti
mov
xchg
insb
push
xor
mov
mov
in
sbb
jge
shl
xor
push
pop
mov
ljmp
das
mov
xor
popf
mov
mov
pusha
xchg
data16
incl
fwait
iret
leave
arpl
jg
jae
inc
scas
xor
mov
mov
mov
dec
ljmp
test
jnp
into
adcl
test
xor
mov
pop
jmp
in
clc
aaa
clc
ljmp
cmpsl
icebp
pop
data16
inc
mov
shrb
ret
and
nop
sub
lcall
pop
adc
ss
rcrl
scas
in
sub
jecxz
ljmp
lock
insl
pop
mov
pop
jmp
ljmp
je
push
stc
xor
adc
fwait
sbb
movsl
incl
incl
movsb
sub
sbb
mov
sub
fldcw
stos
inc
pop
out
aas
sub
mov
fcoms
ss
sti
fcoms
lods
fisttpll
mov
jns,pn
jle
inc
mov
push
inc
ljmp
push
push
adc
fidivrs
cmpsb
mov
push
shll
mov
popf
cmp
in
aad
lods
out
cmp
jg
pushl
aaa
xchg
insl
pop
mov
mov
jecxz
xchg
fimuls
idiv
das
cmc
pushl
aad
hlt
jmp
out
push
lret
or
jae
shr
cmp
push
call
sbb
xor
add
arpl
cmpb
shl
xchg
sarb
shrl
xor
or
sar
incl
mov
mov
pop
cli
movl
fisttps
fcoms
pop
jo
add
pop
xor
sbb
pushl
mov
negb
int3
je
les
frstor
test
in
cmp
inc
add
outsl
lock
call
inc
leavew
pop
cs
fmuls
push
rcrl
sub
add
decl
insb
cmp
out
xchg
jle
in
lret
adc
inc
cmp
cwtl
lds
cli
inc
and
push
and
out
lcall
jne
push
push
fisubs
inc
dec
cwtl
xchg
jbe
pop
push
pop
pushl
clc
pop
sbb
shrl
lahf
push
xor
inc
push
lret
in
ja
mov
cmp
mov
sub
cmp
pop
cli
mov
or
cmp
insl
push
cmp
and
jl
sub
shlb
loop
pop
mov
mov
pop
push
lret
pop
push
push
add
sub
loopne
movsl
and
xchg
push
mov
testb
pop
imul
add
sub
xor
insb
pop
mov
fstps
dec
ljmp
cld
sbb
into
cmp
xchg
scas
mov
mov
scas
stos
mov
xchg
fucomp
lock
sbb
insb
jbe
pop
jecxz
jl
es
arpl
mov
push
lcall
rol
dec
dec
sti
push
dec
mov
pop
leave
cwtl
push
in
popa
push
mov
inc
pop
mov
outsl
insb
test
mov
inc
or
push
test
orl
pop
xchg
xor
cltd
stc
pop
clc
ljmp
sub
xor
push
ja
repz
inc
sub
inc
or
add
stc
or
ret
sti
addr16
xchg
rorl
mov
jb
pop
jmp
in
mov
lock
jp
stos
push
arpl
sub
outsb
rep
enter
dec
mov
cmpsb
mov
fmull
cmpsl
inc
mov
bound
fildll
and
inc
stos
jmp
dec
jge
push
and
repz
sub
addr16
shlb
mov
xchg
or
call
inc
or
test
dec
cld
stos
test
dec
mov
mov
sub
aas
aaa
sbb
fucomip
decl
loope
inc
dec
test
add
in
pop
xchg
lahf
jno
test
clc
cmp
mov
dec
mov
popa
pop
and
adc
add
mov
mov
subb
repnz
pop
scas
loop
jmp
pop
jno
sbb
mov
xchg
adc
fmull
jae
pushw
jb
jge
xchg
cwtl
inc
sub
outsl
cmc
jg
or
aas
fwait
push
xlat
outsl
rcr
das
aaa
push
ljmp
jnp
adc
stos
ljmp
push
ret
out
cld
fdivr
xor
add
scas
pop
pusha
jecxz
push
sbbb
xor
mov
lcall
or
or
js
sarl
xorb
jecxz
hlt
fnstsw
loopne
inc
data16
ds
lock
ja
sub
ljmp
or
pusha
subb
dec
shlb
mov
ljmp
or
out
mov
mov
mov
inc
out
xchg
insl
mov
incl
ljmp
sbb
ds
in
inc
pusha
sahf
mov
sbb
mov
adc
movlhps
lcall
ljmp
out
mov
mov
rclb
xor
ljmp
ljmp
hlt
mov
lods
icebp
dec
scas
adc
dec
je
mov
call
out
push
dec
inc
out
push
jmp
cmc
in
leave
push
mov
jmp
jb
orl
mov
loop
test
insl
icebp
xchg
test
mov
ljmp
mov
aam
dec
faddl
dec
addr16
pop
and
mov
mov
ja
fldt
xchg
test
jne
jecxz
lods
lcall
xchg
mov
jmp
dec
sbb
xchg
in
xlat
adc
mov
mov
dec
repz
add
dec
dec
push
mov
dec
repnz
ljmp
pushf
xor
push
in
push
adc
es
sbb
sbb
stc
jne
jo
out
repnz
ljmp
ds
cwtl
roll
icebp
cmpsb
mov
sbb
das
fidivs
shlb
sub
sub
inc
pop
orb
lea
imul
adc
out
xor
sub
push
ja
jmp
xchg
adcl
mov
jmp
addr16
sbb
shlb
jp
jae
xor
mov
icebp
cmp
or
adc
push
daa
adc
lods
push
lods
xor
inc
and
or
cmpsl
jle
dec
mov
mov
call
xor
adc
testb
imul
jae
push
xchg
add
in
out
aas
dec
movzwl
std
add
iret
cli
mov
mov
lods
movaps
pushl
shl
dec
in
xor
mov
outsl
jns
ret
jge
scas
pop
test
dec
ljmp
mov
popf
testb
shl
imull
adc
lcall
fists
adc
mov
xchg
imul
mov
sub
test
mov
push
fwait
push
stc
imul
push
push
xor
lods
leave
mov
mov
incl
xor
insb
mov
lea
or
xor
push
aad
call
lcall
mov
push
pop
cld
mov
mov
jge
jo
dec
sar
fnstsw
cmp
mov
push
mov
jmp
stos
in
addb
adc
pop
clc
mov
pop
xor
adc
out
sbb
loop,pn
dec
or
call
adc
cld
mov
mov
push
std
sahf
dec
dec
enter
call
mov
test
cmpsb
fisttps
pop
push
clc
add
sti
push
mov
inc
pushf
mov
or
or
lcall
std
inc
adc
dec
sbb
fwait
jo
dec
mov
test
data16
incl
lds
jmp
js
or
dec
cmpsl
xor
addr16
in
clc
addr16
in
lret
pushf
mov
pushl
pop
insl
or
aaa
add
aam
negb
inc
decl
testl
xor
insl
xor
mov
mov
fisubrs
mov
pop
xchg
cmp
call
clc
xchg
cld
pop
sbb
imul
rcr
subl
xchg
mov
mov
and
mov
nop
xchg
jnp
pop
pop
push
mov
or
jmp
sbb
clc
push
inc
sbb
sbb
adc
mov
repnz
clc
call
mov
in
in
notl
cmpb
lcall
test
pushf
cmp
push
test
rcrb
dec
mov
mov
xor
lcall
dec
leave
xor
shl
and
xor
push
jmp
stc
into
out
loop
add
jmp
mov
xchg
cld
sbb
cmc
cmp
ror
adc
sbb
cli
cmpsl
dec
mov
mov
mov
fisttpl
gs
push
js
inc
push
jno
and
add
std
decl
mov
popl
test
daa
mov
jo
fiadds
mov
or
mov
sbb
int3
cmpsb
push
cmp
or
ljmp
cmp
cmp
mov
push
jne,pt
into
jmp
adc
daa
mov
fbld
and
and
xchg
mov
dec
push
jmp
das
xor
js
mov
push
arpl
sahf
into
pop
idiv
jg
jbe
shrb
dec
jno
mov
aas
jns
movb
repnz
fstps
jmp
add
or
or
ljmp
xchg
xor
mov
xor
inc
mov
mov
std
pushl
push
push
and
push
jb
in
push
in
dec
inc
std
ljmp
xorb
sbb
clc
stc
bnd
rorl
aad
lcall
push
mov
adc
mov
pop
into
scas
mov
push
imul
loopne
jg
test
movsb
or
mov
pop
shrb
sarl
rclb
or
pop
stc
fcoms
sub
stc
fs
inc
jnp
xchg
dec
sbb
or
out
lcall
cli
fbstp
inc
cmpl
movsb
push
xchg
imul
jne
push
fnstsw
daa
adc
cmpsl
call
ljmp
or
fwait
xchg
test
mov
sub
sahf
int3
inc
data16
sti
pop
cmp
scas
dec
dec
out
add
cmp
inc
pop
xchg
jge
pop
test
mov
ljmp
shl
mov
xor
aaa
inc
repnz
jg
loop
ljmp
lcall
test
fists
xchg
ljmp
push
sbb
int3
xchg
cmpsb
into
pop
addr16
mov
repnz
push
sti
push
into
lcall
enter
xchg
lock
std
ret
data16
rcll
orl
xor
jl
push
mov
cmp
aad
call
movsl
jmp
mov
xor
out
fldt
test
xchg
fs
or
pop
pop
jae
pop
pop
jne
cmp
jmp
or
mov
cmp
lcall
inc
mov
mov
int
addr16
xor
test
sub
into
inc
jmp
sub
jnp
mov
mov
stc
test
test
loop
inc
pusha
dec
push
popa
mov
movb
loopne
mov
rorb
cmp
testl
mov
pop
xchg
cmp
or
or
cld
xchg
rcll
lcall
xchg
ds
sti
lcall
fmuls
jnp
lahf
sbb
inc
lods
les
jnp
loopne
loopne
xchg
lcall
call
sbbl
adc
icebp
mov
pop
sub
mov
std
call
pushf
mov
cmp
enter
lds
jmp
fcmovnbe
mov
mov
or
inc
and
in
call
fistpl
sub
scas
fnsave
out
inc
fucom
popf
push
sar
das
xchg
sbb
sti
dec
call
sbb
test
leave
dec
pop
jae
lret
incl
cmp
push
mov
dec
mov
aad
aaa
mov
test
cld
and
loopne
cmp
adc
jae
and
test
subb
dec
loop
ss
mov
inc
sub
mov
xchg
cli
jg
mov
xchg
sub
inc
xchg
roll
inc
jg
add
ljmp
ds
sub
inc
pop
leave
fwait
push
popa
inc
lcall
mov
and
mov
or
jae
fdivl
jmp
mov
mov
mov
inc
push
clc
xor
fistpl
and
adc
jg
xor
lds
ds
push
sbb
mov
xchg
repz
xchg
xlat
fwait
pop
adc
mov
decl
scas
push
inc
mov
jne
lods
enter
inc
cwtl
das
imul
test
push
loopne
cwtl
roll
push
and
sbb
dec
mov
push
pop
sub
shlb
test
sbb
iret
cs
test
test
das
mov
sbb
stos
sbb
repz
cmp
mov
incl
into
bound
jns
sti
xchg
add
fistps
negl
jg
decl
rorb
rcr
sbb
xor
mov
push
pushl
or
test
pop
push
popa
gs
xor
xchg
pop
or
arpl
mov
stc
cmp
xlat
imul
out
scas
dec
mov
mov
movsl
sbb
aad
pushl
jg
addr16
lahf
sbb
jmp
adc
mov
inc
mov
xchg
fwait
sbb
pop
pop
stc
sub
lods
mov
lcall
imul
je
stc
mov
add
jnp
jo
jge
inc
mov
call
sub
js
fcompl
clc
cmp
int
fwait
cs
cmpsl
orb
lods
xchg
int
fimuls
stos
sarb
stc
sub
pop
lahf
and
pushl
es
iret
fnclex
in
push
jl
enter
out
nop
xor
mov
dec
adc
jg
push
push
push
rol
gs
in
lahf
pop
insl
push
or
add
fdecstp
jmp
or
gs
enter
das
pop
push
ret
ljmp
xchg
cmp
in
xor
jb
jle
jg
fucomip
sbb
cmp
adcl
stc
rorl
push
decl
lahf
push
xchg
pop
or
cmpsl
cmc
cmp
mov
sub
in
loope
jge
or
es
lock
pop
daa
jg
ja
sub
push
ljmp
lods
pop
clc
jle
inc
xor
jle
xchg
or
adc
adc
stc
jae
pop
loopne
xchg
sbb
aaa
jecxz
lret
xor
lods
outsl
in
pop
push
je
jmp
xchg
pop
mov
adc
jne
pushl
fstps
jge
out
std
push
pop
dec
or
push
in
sub
call
jb
or
xor
fnstcw
jbe
push
mov
data16
mov
add
imul
ffreep
pop
push
out
idivb
repnz
out
jl
pop
mov
ljmp
movsl
das
lock
push
and
clc
pop
lds
stos
ret
mov
push
and
push
pop
stc
mov
clc
mov
jmp
rclb
push
jnp
mov
adc
add
loop
arpl
icebp
call
mov
test
xchg
out
aad
aad
and
dec
mov
push
xchg
ljmp
mov
jbe
jae
or
mov
or
loop
outsl
hlt
cmpsl
addr16
push
mov
loopne
mov
out
dec
cmpl
fisttps
pushf
leave
test
jmp
je
test
outsb
adc
test
xlat
add
sbb
loopne
sub
xrelease
sbb
pcmpgtw
mov
unpckhps
inc
decl
ljmp
mov
or
outsl
icebp
inc
out
pop
add
icebp
xchg
jne
into
or
loop
dec
ljmp
addb
inc
repnz
sbb
in
add
and
push
les
mov
aas
ljmp
pop
popf
aad
jl
cs
dec
iret
add
dec
gs
lods
outsb
adcb
popf
pushl
out
push
jae
mov
push
aaa
jle
les
sar
lcall
pop
add
inc
jg
or
cmp
jp
incl
ret
aas
call
lahf
push
adc
sub
in
call
sub
mov
int
cs
lods
mov
xlat
add
outsb
cmpb
lcall
fmuls
xchg
enter
xchg
pop
adc
cltd
mov
loop
jg
sbb
mov
outsl
sbb
xor
mov
pushl
inc
mov
and
mov
dec
sbb
jae
outsl
pop
rol
incl
out
cmp
and
jnp
clc
dec
cmpsb
push
mov
ror
ficoms
cmpsb
and
push
sbb
xchg
pop
cmc
std
xchg
mov
test
fstps
rcrb
xchg
scas
sub
data16
xchg
jg
in
nop
lahf
arpl
fidivrl
lods
mov
xor
xor
xchg
dec
jne
xchg
add
stc
test
call
jns
in
lret
or
jge
xchg
lcall
incl
mov
inc
lods
pop
inc
popa
xchg
cmpsb
dec
sub
jmp
iret
into
insl
neg
sbb
jne
decl
jno
jle
idivl
scas
rcr
f2xm1
jecxz
test
mov
mov
mov
jmp
scas
adc
insl
imul
adc
mov
mov
popa
sbb
cli
push
xor
xchg
cmp
cli
call
xorb
mov
test
add
imul
std
jg
fistpll
out
pop
and
sahf
add
jecxz
fs
adc
sub
dec
lods
aas
mov
ljmp
mov
jecxz
repz
rolb
popf
push
inc
and
jne
test
fbstp
pop
jb
inc
jp
cwtl
shr
aam
inc
scas
xchg
test
cli
pop
data16
clc
movsl
dec
cs
lret
ljmp
testb
sbb
lods
ljmp
mov
mov
ret
ljmp
sbb
xchg
or
stos
or
add
dec
jbe
orl
loopne
pop
loopne
inc
mov
jb
mov
scas
lcall
fcomip
mov
scas
sub
repz
and
and
sti
jmp
loope
lcall
ds
rcll
leave
lea
adc
adcb
add
call
imul
pushw
push
lahf
fstl
xlat
xchg
sub
ss
add
inc
fisubl
cmpsl
dec
sahf
movsb
mov
std
mov
push
sbb
mov
and
nop
dec
dec
icebp
mov
xor
mov
movsb
pop
pop
loop
jno
sar
jmp
sahf
cmp
loope
cld
mov
and
xchg
mov
lods
call
dec
cmp
and
mov
stos
inc
sti
stos
out
push
xchg
insl
mov
test
outsl
hlt
ret
test
insl
and
sub
fs
hlt
jg
mov
add
sahf
push
repnz
movsb
sub
and
cmp
ds
ljmp
push
cmpsl
clc
fidivl
add
sub
decb
fcompl
push
cwtl
pop
call
cmp
dec
push
push
jge
and
sub
in
lods
jmp
lcall
shrb
cmpsb
ds
popf
daa
cmp
lcall
leave
fisttps
ja
inc
loopne
fldpi
sarb
push
lds
dec
out
jecxz
dec
sbb
pushf
aaa
iret
lds
ljmp
sbb
mov
dec
xor
jg
decl
jbe
push
xchg
push
mov
mulb
xor
mov
in
jb
push
mov
orb
cmc
test
jo
push
cmc
incl
pop
std
add
mov
cli
roll
inc
sub
lods
mov
jg
mov
outsl
push
inc
pushf
out
and
mov
cltd
inc
fsubrs
dec
and
fwait
push
xor
loop
cltd
push
sbb
inc
scas
xor
jmp
ja
jp
mov
dec
cmp
vpandn
in
scas
iret
sub
mov
decl
mov
and
enter
mov
sub
call
gs
or
leave
mov
outsl
xchg
std
cmp
pop
cmp
cmp
shlb
loopne
pop
cli
ljmp
xchg
fisttps
add
and
inc
movsl
add
incl
mov
shlb
cmp
xor
in
jnp
sbb
call
and
fstpt
daa
push
cmpsb
out
mov
push
lcall
xchg
sub
xchg
push
pop
iret
or
inc
lret
inc
test
and
inc
lea
mov
cmp
test
sbb
inc
cmp
sbb
insb
je
cli
jle
xchg
bound
stos
ss
ljmp
inc
mov
push
jp
xchg
dec
jb
jo
cmp
jae
negb
paddq
xchg
cli
ljmp
sub
cmp
movsb
cmp
in
scas
mov
pop
mov
inc
mov
imul
jle
leave
imul
cmpsb
sbbb
xchg
add
andb
je
dec
das
jg
jmp
jns
test
push
in
and
out
xchg
js
pop
inc
enter
jmp
mov
mov
push
push
repz
inc
ftst
pop
scas
test
sub
mov
decl
mov
dec
ret
push
loop
shll
adc
cld
lahf
xchg
in
pushl
cli
xor
out
mov
xchg
mov
mov
insl
xchg
or
mov
aad
jp
cmp
and
rcrb
add
or
mov
push
mov
fildll
adc
pop
sbb
aaa
sub
test
jae
cli
incl
xchg
leave
jp
push
push
int3
sbb
xor
xchg
sahf
js
icebp
aad
insl
cmpb
loope
lcall
divb
push
pop
sub
xor
icebp
aam
cli
adc
test
xor
cmp
cli
xchg
cmp
sbbb
ret
add
call
add
dec
clc
fmull
out
xchg
ret
test
push
insl
int3
or
aam
mov
out
or
mov
lcall
jmp
movsb
xor
dec
xlat
sub
pop
mulb
adc
jne
sub
into
nop
xchg
mov
sbb
xor
inc
or
fcoms
sbb
push
loope
ret
iret
dec
ja
stc
lret
xor
stos
push
loope
ret
jmp
imul
inc
sub
or
mov
add
sbb
xchg
xor
mov
add
inc
jno
dec
repz
mov
popa
inc
inc
fstps
dec
xor
scas
es
ret
lods
decl
dec
sti
clc
dec
pusha
in
enter
sub
out
mov
lcall
hlt
sahf
jnp
push
movsb
loopne
cltd
test
test
jge
or
sbb
jg
xor
stos
in
sub
sub
cmpsb
scas
adc
mov
pop
xchg
fldl
insb
push
pop
jb
or
stos
cs
mov
fisubrs
lea
ret
decl
cmp
jmp
test
cltd
fmull
lret
lock
ret
push
and
jg
mov
cmpl
ret
stc
xchg
xorl
dec
test
nop
dec
fnstcw
mov
decl
outsl
jb
push
ds
jge
pop
dec
jno
je
call
lods
add
pop
xlat
scas
mov
leave
cmpb
pcmpgtb
ret
cmp
adc
mov
mov
sti
ljmp
incl
lahf
jl
lods
adc
dec
xor
mov
jle
add
add
and
cmp
incl
xor
adc
push
pop
lock
popf
jno
add
out
ss
cmp
clc
xchg
xor
outsb
addr16
xor
jge
adc
adcl
mov
shr
fstps
sbb
mov
adc
adc
aaa
cmp
lods
jnp
xchg
nop
push
lea
adc
mov
cmc
mov
jno
mov
push
or
jle
and
sti
xchg
inc
fucomip
call
adc
les
sbb
mov
pop
mov
jg
xchg
jp
cmpsl
pop
mov
sbb
inc
cmp
jl
int3
jecxz
test
sbb
pop
push
mov
cwtl
popf
fsubs
jmp
push
mov
icebp
jo
or
dec
incl
cmp
sbb
shll
adc
rorl
cs
or
cmp
inc
or
sahf
push
adc
ljmp
jecxz
cmp
call
push
lds
stc
sub
or
add
and
call
lods
pop
xor
std
cmpsb
pop
iret
repnz
push
das
arpl
mov
aaa
insl
mov
imulb
call
incl
inc
int
inc
mov
icebp
xchg
imul
inc
sbb
jl
xchg
cmpsl
stos
push
les
sbb
xor
imul
jns
cld
out
jl
dec
in
sub
and
push
cmp
movsl
mov
jle
dec
in
gs
jo
lods
mov
sub
push
ss
das
cld
lds
push
out
push
div
daa
add
outsl
insl
incl
cltd
stos
pop
mov
jno
movsb
push
xor
fbstp
data16
xor
xchg
or
and
adc
add
adc
rcll
scas
mov
clc
dec
sbb
insl
mov
or
je
ss
data16
call
or
dec
sub
pop
fwait
aam
inc
mov
mov
sub
test
jg
pop
enter
lods
inc
jo
mov
sub
mov
test
in
ljmp
sub
push
push
inc
sbb
jno
les
jno
adc
mov
mov
mov
push
iret
cld
push
push
into
incl
push
out
loop
add
push
test
lcall
push
xchg
jmp
insl
cmp
dec
hlt
movsb
or
xchg
lea
mov
mov
loope
incl
in
mov
sbb
mov
incb
add
or
lcall
in
cmpsb
jecxz
inc
pushf
sbb
js
gs
divb
jge
mov
incl
adc
adcl
sub
fidivrs
lcall
push
stos
outsl
sbb
mov
decl
dec
or
xor
frstor
jae
and
sbb
ljmp
pop
popa
xor
in
add
in
sub
xchg
lret
fists
pop
pop
ss
data16
xchg
sub
cld
jbe
stc
xchg
sub
pop
sahf
push
mov
mov
pop
ds
and
jg
hlt
add
cwtl
xlat
arpl
or
mov
push
inc
push
lods
pop
das
data16
iret
pop
adcl
out
out
pop
btr
dec
push
pushl
mov
pop
test
cmc
clc
out
jbe
or
incl
inc
cltd
cmpsb
add
rorb
fsubrl
jmp
ss
mov
ljmp
cld
sarl
jns
test
test
sub
bound
xlat
es
ljmp
loop
mov
xchg
mov
fldl
outsb
add
lcall
push
mov
addb
add
inc
js
test
incl
shll
push
shrb
sub
sub
mov
test
push
push
lods
in
and
mov
sub
lds
xor
scas
imul
jge
mov
call
pop
sahf
adc
xchg
scas
push
in
mov
add
jne
ja
in
jmp
sbb
decl
adc
push
pop
add
ss
fldenv
cli
mov
jne
cltd
subl
in
mov
outsl
mov
in
nop
inc
push
fildll
sti
aam
divb
call
ja
jmp
es
mov
loopne
jo
int3
inc
sub
adc
xchg
into
sub
pushf
stos
inc
lea
mov
enter
ret
pushl
sarl
pop
faddl
cli
dec
inc
rcrb
add
mov
decl
xor
jnp
mov
inc
lods
lret
pop
daa
mov
pop
push
fwait
jns
mull
jg
lret
add
fisubrs
push
fs
pop
jno
or
fbstp
loope
adc
scas
fstpt
frstor
lret
lea
std
mov
ret
call
das
mov
int3
cmp
pop
call
ja
jg
bound
mov
mov
mov
icebp
jnp
mov
dec
or
pushl
jne
and
adc
push
mov
fists
stc
into
cmpb
inc
popf
push
pushf
mov
lea
sbb
movl
incl
leave
pushf
incb
hlt
xlat
rolb
shll
sbb
shl
cmp
mov
add
xchg
sub
loopne
decl
lds
pause
xor
xchg
dec
jne
push
xor
in
rcrb
sti
push
dec
fstl
adc
aad
inc
imul
sbb
lcall
scas
cmp
call
jle
xor
add
dec
das
add
pop
or
cmc
pop
mov
imul
jnp
aam
cwtl
mov
and
and
ss
xchg
jne
movsb
mov
loope
pop
jle
repz
into
cmp
mov
sarl
mov
or
in
into
jp
mov
jb
adc
ljmp
pop
pop
cltd
aaa
jecxz
mov
mov
hlt
or
repz
ljmp
lcall
leave
cmc
add
lcall
push
imul
lods
jp
popa
call
sti
decl
add
imul
les
or
mov
movsl
fcompl
addr16
xor
loopne
lea
dec
js
push
inc
lret
fxtract
cmp
andl
dec
incl
call
mov
dec
xor
loope
popa
pop
sbb
push
mov
jns
in
pushl
out
scas
gs
jmpw
cmpsl
jbe
dec
pop
sbb
mov
loope
push
jmp
sub
test
adc
jnp
sti
mov
icebp
stc
dec
in
inc
cli
pushl
bound
jmp
xchg
andb
mov
push
xchg
mov
call
or
jnp
mov
xor
xor
repz
adc
and
movsb
test
sbb
fistl
orb
push
jle
mov
xchg
loopne
cmp
movsb
das
hlt
call
xlat
outsb
scas
iret
stos
addr16
addb
in
inc
jmp
incl
std
sbb
push
xchg
or
xchg
push
mov
subl
pop
mov
ss
add
dec
inc
or
mov
jbe
movsl
pop
imul
fwait
push
mov
sarl
adc
leave
outsl
jmp
pop
subl
mov
outsl
out
sti
xchg
inc
popa
jnp
ret
sub
mov
negl
cld
mov
dec
out
or
cs
lock
sti
mov
shrl
cli
sub
rolb
adc
push
pop
fnsave
push
xor
mov
jno
jb
pop
dec
dec
sub
mov
push
lds
jnp
cmp
pop
inc
call
icebp
lahf
rclb
inc
mov
inc
push
sub
dec
aad
xchg
mov
int
sbbl
and
pop
in
subb
and
icebp
ja
arpl
cmp
or
mov
push
or
jne
jb
push
mov
and
mov
xchg
push
ficoml
movsl
sub
movq
scas
jb
sbb
dec
in
fucomip
jl
lock
and
imul
jmp
cmp
lcall
aad
inc
push
cli
hlt
roll
cmpsb
sbb
dec
cwtl
cmpsl
inc
xor
fcmovb
cld
movsb
pop
clc
incl
xor
inc
shrl
xchg
mov
adc
mov
jl
inc
cmp
aaa
imul
push
and
push
pop
stos
pop
mov
mov
sbb
or
cmpsl
xchg
movsb
mov
or
in
inc
inc
sbb
pushf
ljmp
jg
sbb
cld
fdivrl
in
js
dec
pop
sbb
cmc
ficoms
aam
inc
xchg
orb
or
arpl
outsb
mov
les
cld
test
xor
push
sub
xchg
decl
std
dec
xor
push
inc
push
push
cmp
fldenvs
mov
outsl
nop
stos
cmp
call
decl
jbe
fucomip
in
push
lock
test
pop
icebp
lea
arpl
inc
lock
jecxz
movsb
adc
mov
mov
pop
or
sub
ret
in
push
mov
jg
or
ret
mov
lret
out
clc
push
sub
inc
and
or
jge
sahf
push
lods
cmp
pop
cli
call
jne
fstpt
out
dec
dec
das
xlat
test
in
shrl
cli
inc
xchg
hlt
cmp
out
pop
jae
mov
in
std
add
xchg
in
or
ud0
sub
ret
lahf
test
clc
test
mov
dec
xchg
jg
jmp
popf
call
lret
mov
jae
int
and
es
xchg
or
nop
loop
fwait
pop
mov
sahf
stos
or
rcrl
andl
dec
and
mov
rorl
out
into
push
cmpsb
sub
imul
incl
mov
loopne
jno
aaa
dec
mov
mov
inc
test
out
popw
and
testb
cmc
dec
ljmp
and
jb
or
add
fs
pusha
pop
mov
shr
add
dec
out
push
dec
test
jp
mov
jp
notl
fucomip
jmp
movsl
sub
loope
jle
xchg
das
add
orb
mov
add
sbb
add
inc
dec
jmp
cs
or
addr16
jg
jmp
mov
or
sbb
outsb
inc
in
aam
enter
call
out
cmp
dec
xor
insb
gs
sar
mov
out
into
and
cwtl
or
xchg
dec
adc
push
add
lcall
scas
rcrb
outsl
ds
jbe
inc
dec
shr
sub
cmc
mov
movsl
push
out
sub
pop
test
xor
mov
jae
jl
cmpsl
inc
xchg
pop
inc
jg
fwait
lds
fildl
cmpb
cltd
adc
fbld
aam
ret
call
mov
fadds
test
pop
cmp
iret
jno
jle
ficoms
outsb
jmp
incl
vmwrite
cmp
push
aas
fnsave
lret
xlat
mov
ljmp
adc
jmp
xchg
ljmp
sub
ja
ljmp
fdivrs
dec
pop
sub
inc
mov
psubw
xor
pop
dec
mov
ljmp
xchg
xchg
dec
pop
pop
mov
cs
rcrl
jmp
jl
xchg
rorl
daa
pop
mov
push
cmpsb
ljmp
mov
je
cmp
in
xor
and
and
ja
fs
dec
jecxz
sahf
jge
push
into
add
sub
int3
xor
lret
mov
push
push
incl
int3
in
sub
fldcw
cld
adcl
test
scas
xchg
pop
decl
dec
pop
ret
es
je
shlb
out
enter
testl
decl
jnp
lahf
mov
imul
sub
mov
mov
fidivs
or
inc
pushl
jmp
or
movsb
cmp
aam
popf
ret
cmp
loopne
mov
and
mov
pop
push
dec
mov
push
dec
addb
push
pop
mov
sub
lea
add
int
stos
mov
cld
in
dec
stc
fistpl
dec
push
jo
popf
stc
pop
xlat
sbb
mov
sub
call
ljmp
std
sbb
push
mov
dec
stc
xor
in
out
pop
xlat
insb
dec
jo
ljmp
cld
push
fimull
mov
insl
sbb
divb
leave
ljmp
xchg
push
pop
cli
pusha
mov
xchg
fdivrl
jmp
mov
add
into
mov
or
mov
notl
dec
or
jo
inc
pushl
fisttpl
fcoml
repz
imul
xchg
xor
decl
aad
pop
pushf
jo
and
movsl
decl
pop
call
dec
cmp
add
sub
mov
push
stos
push
sub
roll
inc
inc
push
push
or
ljmp
push
leave
test
in
push
loop
lret
mov
cli
enter
xor
mov
test
ss
jle
mov
jmp
jge
pop
pushl
stos
sub
adc
cmpsl
jl
inc
mov
inc
and
fsubr
adc
leave
lcall
icebp
sub
inc
in
ret
xchg
sbb
sub
mov
dec
add
cmp
mov
mul
dec
aam
popa
jb
pop
imul
inc
add
sbb
call
dec
push
mov
cmc
loopne
sub
in
dec
dec
mov
lds
push
testb
movsl
sahf
cmpxchg
nop
jo
std
cmpxchg
jg
mov
sarl
jnp
in
in
arpl
or
jge
mov
testb
push
arpl
and
dec
cli
lods
cmp
mov
cmp
repz
jg
nop
aas
xchg
stos
jge
cld
das
cmp
pop
mov
or
cmp
mov
jg
aad
movsb
fistpll
mov
jle
ljmp
xchg
fcompp
out
jmp
ja
lcall
dec
call
mov
ljmp
subb
add
mov
push
push
push
inc
fucom
aad
lcall
iret
divl
sti
add
ret
cmp
sbb
call
mov
sub
push
or
adc
int3
adc
test
adc
outsl
cmc
clc
cmp
mov
jnp
mov
jmp
mov
and
cmp
rcr
mov
xchg
pushf
sbbb
lea
jge
arpl
xchg
clc
jmp
ret
popl
mov
lret
cwtl
movsl
mov
stos
lahf
icebp
mov
sarl
aas
out
pushl
or
sub
fs
add
adc
out
test
jle
cmpsb
xor
lock
and
cmp
sub
cmp
rcll
aam
xlat
or
ret
dec
mov
addr16
mov
mov
adc
inc
add
cmp
ljmp
add
ret
into
push
sbb
ret
mov
xor
pop
jmp
pop
js
ljmp
adcl
enter
lcall
sahf
xchg
lods
jnp
dec
xchg
lock
ja
ja
cmpsb
stos
add
stos
xor
out
out
xchg
dec
mov
lret
jne
adc
push
punpckhbw
mov
and
movsb
sub
jne
cld
inc
push
lds
xlat
pop
shlb
sarb
out
and
shrl
sbb
dec
mov
std
jnp
popa
das
sub
daa
aam
lcall
pushl
and
es
or
inc
or
aam
or
decl
sahf
or
imul
ja
fmulp
pop
punpckldq
mov
xchg
cmp
in
nop
jmp
loope
arpl
std
mov
cmp
shr
ret
loop
push
call
fisubl
cmp
lret
into
push
push
push
gs
loope
push
mov
lds
aaa
xchg
push
std
cmpsb
sbb
push
pop
arpl
inc
xchg
clc
das
inc
jge
das
cld
pushl
das
pop
in
jge
ja
sarl
add
add
mov
jo
push
xchg
mov
cmpl
decl
into
push
rolb
imul
xchg
jge
shrb
les
pushl
dec
xor
inc
dec
adc
and
roll
sbb
push
fcompl
ljmp
pushf
cltd
jnp
xchg
cmp
xchg
mov
sub
mov
repnz
jg
cld
test
sti
pop
xor
fdivs
in
out
scas
inc
sbb
call
scas
or
rcrb
sbbl
add
data16
pop
push
sub
lcall
inc
scas
imull
lcall
mov
je
inc
sbb
jns
xor
dec
lcall
das
leave
push
fsubl
sub
shll
add
addr16
mov
outsl
std
lcall
fsubrs
cmpsb
pop
mov
hlt
cmpb
rorb
add
pop
clc
call
nop
imul
shll
push
pop
in
sub
mov
incl
or
mov
in
adc
cs
pop
add
pop
and
call
mov
mov
mov
rcrl
dec
jge
leave
arpl
incl
pop
xor
cmp
sahf
sarl
iret
movsb
insl
fdivrp
cmp
mov
jo
arpl
ljmp
std
cmp
cs
dec
or
lret
sub
cs
add
call
mov
sarb
or
push
xchg
call
adc
std
call
adc
sti
adc
xor
ss
lahf
dec
sarb
js
lds
push
jo
ljmp
into
mov
incl
addr16
in
insb
dec
clc
add
daa
mov
das
ljmp
xor
sti
pop
lock
addb
decl
push
cmpsb
lret
lcall
shrb
jp
icebp
and
jbe
ss
inc
inc
repnz
call
enter
arpl
icebp
mov
ret
inc
xor
adc
jge
mov
das
std
outsl
ret
je
jo
imul
push
jl
negb
cmp
lods
dec
jl
cmp
jne
rorb
cmc
push
pushl
pop
insl
push
aas
push
mov
ljmp
xchg
pop
data16
ja
or
cmpsl
mov
push
imul
jmp
add
aam
icebp
icebp
mull
fsubs
fbld
inc
stc
push
stos
dec
mov
fwait
jle
adc
sbb
or
mov
xchg
shll
decl
shll
push
fisttpll
popa
insb
ret
lea
gs
orl
mov
cmc
mov
sbb
les
xchg
or
call
mov
movb
cwtl
jg
jmp
in
dec
push
lcall
sahf
xor
pop
xchg
mov
ljmp
repz
mov
mov
out
sub
inc
xor
cmpsl
or
jmp
loopne
into
push
jge
mov
mov
imul
test
mov
bound
pushf
lods
xor
add
mov
push
hlt
mov
lcall
dec
arpl
pop
cld
mov
xor
fnstcw
xchg
mov
mov
jmp
cmp
lods
ss
sahf
je
imul
dec
push
mov
and
jg
or
int3
movsl
jge
mov
pminub
xor
and
fsubs
aam
ljmp
jg
inc
fwait
adc
jbe
std
pop
hlt
dec
jnp,pn
and
pop
sbb
xor
call
or
test
or
pop
std
decl
cwtl
adc
fnstsw
lret
xchg
jbe
call
mov
cld
mov
or
adc
repnz
xchg
lret
inc
arpl
movsb
mov
jg
cmp
fs
lods
pop
push
dec
aad
mov
xchg
aas
or
jg
jle
mov
in
pushf
bound
cld
mov
or
jns
push
mov
pop
xchg
scas
jmp
cmp
mov
add
sarl
pushf
sub
shr
fdivrp
push
fbstp
push
jecxz
lock
xchg
out
sub
or
or
dec
and
push
iret
lock
jmp
xchg
pop
repz
testl
mov
cmp
push
hlt
decl
decl
popf
fadds
xchg
jae
sbb
add
mov
decl
sahf
shlb
shrl
pop
sub
xor
xchg
adc
mov
mov
lods
mov
and
test
sub
lret
ret
push
jl
fnsave
jecxz
xorb
xor
or
xchg
clc
js
sarb
cwtl
jl
and
xor
mov
push
clc
fbld
add
loopne
jg
jmp
sub
call
inc
mov
imul
or
pop
fldt
jnp
xlat
cs
ljmp
inc
leave
pop
sbb
daa
scas
pop
xchg
xor
adc
xchg
jle
dec
das
icebp
jg
out
and
dec
xor
aad
push
sahf
mov
cmp
hlt
lock
call
jp
rolb
cmc
dec
imul
mov
andb
hlt
mov
cmp
data16
aam
dec
cltd
inc
test
pushl
scas
pop
lcall
movsl
or
xchg
lock
push
lods
mov
lcall
jp
data16
pop
dec
or
mov
cmc
popf
loop
dec
fldt
scas
mov
inc
jl
jns
nop
adcb
pop
fwait
inc
test
sbb
dec
cmpsl
xlat
xor
mov
fnstenv
insb
inc
push
add
and
insb
or
call
add
inc
js
je
jb
arpl
jae
gs
je
jb
jne
in
xchg
jg
dec
outsb
outsw
inc
sbb
gs
js
je
outsl
outsb
sub
push
insb
jae
insb
insb
or
es
insb
inc
jb
gs
jnp
pop
adc
je
inc
outsl
insl
jo
gs
lcall
outsb
addr16
mov
push
gs
outsl
popa
fs
gs
dec
repnz
or
outsb
jne
inc
push
data16
xchg
xor
fcmovu
jge
jb
ja
je
pop
push
or
jo
sti
scas
fstpl
gs
insb
addr16
lcall
insl
popa
addr16
push
inc
dec
add
add
clc
dec
adc
add
add
or
lcall
adc
rolb
ds
fmull
add
add
leave
or
cmp
pop
repnz
dec
jo
aaa
sbbb
insb
add
and
and
jle
rcll
pusha
sarl
dec
popa
lahf
mulb
jb
mov
shrb
sub
and
imul
sti
and
add
inc
arpl
jae
sub
mov
daa
inc
sbb
inc
add
add
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
