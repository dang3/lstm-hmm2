mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
pushf
mov
aas
mov
es
or
add
iret
push
or
cmp
sub
pop
iret
dec
jl
insb
pop
pushf
jl
pop
fmull
jg
outsl
xchg
iret
sbb
or
cmp
sub
xor
insb
lds
lods
dec
faddl
int3
push
cld
xchg
in
lahf
sbb
das
dec
decl
xchg
sbb
out
das
lds
pop
lods
aam
or
jnp
insb
lods
decl
add
mov
fidivs
adc
pop
add
loopne
sub
fdivl
out
push
inc
dec
pop
pop
pop
test
bound
aas
scas
stos
xlat
aam
dec
or
push
mov
inc
gs
jl
dec
inc
dec
or
mov
pop
fnstenv
inc
xchg
jp
pop
jg
int
xchg
insl
adc
mov
int
ljmp
fadd
in
out
and
xchg
daa
int3
pop
jecxz
inc
inc
ret
lods
sub
iret
dec
scas
jl
xchg
lcall
in
rcr
mov
cli
hlt
xchg
test
mov
pop
iret
pop
mov
pushf
jl
pop
fmull
int3
jg
xlat
in
insl
sbb
or
cmp
sub
pop
rorl
mov
jnp
inc
lods
xor
push
mov
out
pop
into
pop
mov
mov
and
stc
xchg
js
in
ss
adcb
sbb
cmpsl
push
into
jne
outsl
ret
dec
lods
xor
add
cmp
dec
into
outsb
leave
sbb
dec
int3
jg
outsl
in
lahf
sbb
or
cmp
sub
pop
iret
dec
jl
insb
pop
pushf
jl
pop
fmull
jg
outsl
in
lahf
sbb
or
cmp
sub
pop
iret
dec
jl
insb
pop
pushf
lret
in
push
jo
adc
jbe
push
jp
movsl
cmp
aaa
cmp
fidivrs
sbb
push
dec
sahf
or
jg
inc
or
xchg
test
icebp
mov
dec
sbb
imul
sti
adc
sbb
xlat
cmc
cli
or
daa
and
cwtl
mov
jmp
pop
mov
arpl
sbb
sbb
sub
test
aaa
push
daa
lea
push
add
sbb
sbb
testb
sbb
adc
jmp
repz
inc
sub
add
xor
mov
in
mov
adc
pop
push
fsub
mov
ja
mov
pop
enter
sbb
es
adc
cltd
xor
rcrb
pop
hlt
jne
pop
roll
jne
push
daa
stos
test
shl
cmp
ljmp
scas
adc
test
aad
arpl
idivb
push
ret
mov
out
jae
sub
xor
stos
sub
mov
jnp
das
or
out
shrd
jno
mov
inc
popf
ds
lret
lock
clc
in
add
cmp
js
adc
jle
test
xor
or
xchg
adc
faddp
and
mov
test
xor
leave
xchg
push
lods
sbb
lods
aad
jecxz
les
pop
lahf
cli
bound
mov
sub
cltd
xchg
into
lock
lock
mov
dec
movsb
cmpsb
mov
orb
js
aam
shrl
aad
test
std
mov
or
xchg
ficoml
and
decl
stos
ljmp
je
lret
mov
xchg
scas
jo
jae
jb
and
outsb
mov
fisttps
ret
inc
xchg
fcmovnbe
popa
sbb
dec
inc
dec
dec
or
loope
call
inc
clc
cwtl
lahf
cmp
pop
icebp
cmpsl
ret
popf
adc
cld
sbb
mov
or
sub
aad
sub
nop
push
stos
int3
gs
adc
in
leave
jl
icebp
clc
mov
pop
icebp
popa
addr16
xchg
inc
lcall
and
mov
lcall
jb
push
mov
addr16
arpl
arpl
xchg
adc
fsubl
in
lret
rclb
in
fldcw
push
push
push
inc
inc
xor
inc
in
sub
sbb
cmp
mov
out
out
jbe
sbb
jg
cmpl
xchg
inc
lods
jo
adc
movsl
sbb
jg
lea
mov
push
fldenv
mov
out
out
lea
scas
xchg
add
clc
adc
lahf
or
addr16
gs
mov
addr16
xor
adc
xchg
push
fwait
pop
and
addr16
andb
or
clc
mov
lcall
ja
orb
jb
lds
cmp
cmpl
sahf
inc
enter
movsb
ss
xchg
movb
push
adc
fs
push
push
adc
popf
data16
push
mov
rcr
xchg
mov
mov
shr
in
subl
dec
shll
loopne
ret
aam
fidivl
jmp
sbb
pop
fs
dec
ret
int
add
lcall
sbb
dec
sbb
call
mov
xchg
mov
jmp
sub
xor
les
aaa
sti
jmp
into
pop
cmp
sbb
xchg
gs
call
dec
push
jb
jo
pop
pusha
int3
jne
je
pop
adc
test
pop
mov
aam
mov
je
lcall
jo
bound
jno
mov
push
movsb
xor
inc
js
sbb
xchg
inc
xchg
lods
xor
xchg
popf
nop
sahf
mov
sub
aas
aas
popa
push
dec
and
cmc
jno
xlat
push
cmpsl
cld
hlt
sbb
adc
addr16
fidivrs
or
ss
adc
jns
adc
jno
or
add
cmpsl
cmp
push
mov
or
pop
jmp
push
mov
ss
mov
ljmp
jno
cli
stc
xor
fsincos
stc
cmpl
xchg
sub
or
sbb
sub
dec
in
imul
mov
dec
bound
cwtl
pop
jns
pop
mov
jmp
jne
and
mov
scas
pop
and
cmp
jnp
mov
add
push
mov
mov
xor
jno
pop
cmp
add
push
sarb
mov
adc
jns
mov
jge
jmp
push
sti
dec
mov
cwtl
adc
add
adc
pop
mov
pop
push
mov
xchg
das
pop
popa
rcrl
ja
mov
mov
pop
push
bound
bound
sub
cmp
adc
cli
push
stc
jns
in
push
ja
mov
add
ja
inc
push
addb
push
mov
add
cmpsl
cs
jo
push
and
lods
and
pop
push
xor
mov
sbb
fwait
xchg
sub
lods
outsb
inc
aas
sbbl
hlt
pop
adc
stc
fnstsw
sbb
push
lea
lret
sbb
in
stos
ret
add
xor
mov
cmp
mov
push
mov
into
lret
cmp
ss
jne
mov
sbbb
push
sub
je
pop
bound
add
mov
arpl
pop
or
stos
inc
mov
shrb
cltd
jo
or
cld
cmp
xchg
adc
fcmovu
loopne
mov
sti
cs
icebp
sub
inc
pusha
fisubrl
jg
insb
pop
ds
sub
scas
dec
push
scas
sahf
sub
movsb
ror
lock
es
dec
xor
sbbl
cs
pop
pop
inc
xor
pushf
jg
rcrb
pushf
and
std
inc
fiaddl
xchg
cmpsb
imul
fcmovnb
push
add
inc
test
xor
fucomip
inc
and
push
adc
xchg
out
sbb
hlt
inc
mov
clc
lea
add
icebp
and
mov
cmp
into
pop
inc
mov
jae
lretw
pushf
js
stc
mov
sub
nop
or
fwait
push
cmpsb
adc
mov
pop
dec
std
jno
les
pusha
or
negl
in
push
and
pop
lock
frstor
jp
cmp
js
cld
js
cwtl
test
sbb
push
dec
jo
int
pushf
scas
mov
jo
pop
jb
movsl
xchg
inc
pop
in
xorb
and
jne
pusha
and
push
imul
popfw
loope
xchg
lock
jle
rclb
inc
and
or
sbb
lret
cmpsl
push
xchg
or
sbb
or
aam
int
fstpl
outsl
dec
inc
and
call
adc
mov
add
mov
into
ret
repz
outsl
outsl
push
cld
cmp
jecxz
push
sbb
dec
mov
jle
or
in
inc
fdivp
ret
dec
test
cmpb
ja
adc
sub
push
out
bswap
repnz
ret
jle
mov
arpl
dec
xchg
cmp
sbb
mov
scas
pop
fdivrl
pop
jge
inc
sub
test
adc
pushf
sub
jmp
dec
jns
icebp
mov
push
shll
add
add
jl
sbb
dec
sti
xchg
rorl
mov
xor
fwait
es
mov
push
sub
jnp
out
inc
push
enter
jb
aad
pop
jg
mov
sub
incb
lods
outsb
arpl
cmpsl
mov
or
ret
addr16
push
lods
mov
cwtl
fisubs
add
and
mov
cmc
xchg
aas
inc
mov
test
aad
xor
dec
pop
and
mov
jge
fldt
cltd
and
jb
scas
mov
outsl
pop
xchg
jnp
inc
outsl
push
bound
fistps
pop
jns
dec
andl
jae
insb
sub
inc
insb
popa
fs
and
pop
jne
jmp
shrb
dec
arpl
adc
add
mov
stos
rol
pop
je
js
jbe
or
jb
pop
aaa
jp
sbb
insb
stos
sbb
mov
es
mov
pop
xchg
dec
xor
push
jbe
mov
pushf
push
or
sbb
inc
ret
test
ficompl
inc
loopne
les
push
jbe
mov
mov
sbb
mov
test
mov
ret
sub
inc
pushf
cmp
push
fstpl
rol
pop
fcompl
jo
imul
loope
fidivrl
in
lret
lret
jb
xchg
push
mov
in
xor
mov
test
cli
mov
leave
push
loop
sbb
inc
push
out
mov
jbe
ficoml
pusha
add
mov
inc
add
push
cwtl
xor
adc
sub
aaa
loop
cli
sbbl
sti
btr
into
lret
loope
pop
arpl
lods
pop
insb
insb
xchg
cmpsl
mul
mov
jne
push
aaa
and
dec
popa
or
fs
adc
sub
ljmp
sbb
outsb
pop
sahf
push
and
jmp
push
push
cmpb
and
ljmp
mov
pop
and
gs
cld
jnp
imul
mov
xlat
push
and
xchg
pop
pop
mov
xchg
xor
nop
ret
scas
cmp
lds
test
rorb
jae
data16
repz
stos
pushf
cwtl
fs
xchg
pop
enter
fptan
sub
jl
fmulp
push
and
inc
testb
inc
mov
iret
rep
sub
push
push
test
inc
mov
push
inc
xchg
lret
imul
pop
sbb
mov
xchg
lds
mov
xchg
dec
ss
dec
in
xor
in
ds
loop
inc
out
mov
daa
cmp
or
popf
addb
mov
fsubrp
movb
xor
push
xchg
sub
and
inc
push
dec
adc
sbb
xchg
xchg
loope
rcll
cmpsb
test
pushf
and
adc
dec
in
adc
addb
push
stc
xor
inc
retw
cs
push
mov
add
jmp
jmp
roll
jg
push
std
and
mov
mov
bound
sub
inc
cmp
inc
clc
not
pop
xchg
or
movsb
bound
leave
js
adc
xchg
aas
popa
mov
lods
repz
add
push
inc
out
and
stos
jbe
les
sub
sbb
add
cltd
nop
sarb
loopne
stc
sub
lods
mov
leave
inc
jo
inc
add
sub
dec
inc
cmc
aad
rcl
mov
push
test
mov
cli
mov
rclb
xor
cli
jns,pt
nop
or
mov
fidivl
or
test
and
shll
jl
repnz
jp
les
xchg
ja
add
or
popf
enter
fsubrp
shrb
imul
test
test
dec
mov
scas
js
into
mov
arpl
std
scas
pop
loop
loope
xchg
jne
stc
mov
dec
xchg
jmp
lret
push
sub
pop
rcrb
sub
fisubs
mov
mov
mov
ret
jge
push
dec
pop
add
fisubs
pop
fisttpl
scas
lcall
cmp
loop
movsb
inc
clc
mov
insl
idivb
and
pop
add
xor
je
jg
add
sbb
mov
pop
std
add
stc
jge
fdivl
cmp
test
je
jge
ja
mov
fisubs
cmpsl
pop
mov
fisubrs
sbb
sahf
sub
mov
scas
mov
outsb
das
mov
push
pop
ds
fists
pushf
pusha
push
sub
fstpl
les
mov
cli
out
ret
jecxz
xor
test
pop
in
sbb
mov
das
mov
ljmp
aam
imul
lds
fcompl
jno
sbb
sbb
sub
outsl
and
dec
push
add
fiaddl
adc
outsl
xor
dec
aad
movsl
sahf
pop
xor
data16
mov
and
test
addl
cld
dec
es
mov
add
jl
les
mov
movsl
fwait
inc
jae
out
test
insb
loopne
sub
out
sbb
outsl
nop
es
jbe
inc
jmp
cld
mov
es
pop
push
data16
mov
loope
ljmp
and
cmp
jno
iret
inc
subb
call
xchg
sbb
xchg
test
std
cmpsb
inc
into
clc
mov
ds
sub
insl
out
stos
notl
cmc
outsb
mov
out
cmp
adc
adc
mov
xor
adc
das
test
xchg
add
hlt
adc
movsb
sahf
pop
sbb
lock
arpl
rorb
out
aad
dec
in
xchg
int3
mov
mov
call
or
rorb
push
out
enter
xlat
dec
pushf
xchg
daa
orl
sbb
mov
fsubs
int
sbb
ret
push
jp
inc
fdivs
fldenv
xchg
fmuls
les
mov
lock
xchg
test
fiadds
mov
mov
inc
sbb
xor
and
call
mov
mov
and
mov
ret
sub
in
scas
mov
int
outsb
mov
rorl
jecxz
inc
mov
loopne
int3
pop
inc
outsl
add
jle
jns
scas
mov
add
cld
inc
divb
lea
shr
xchg
jbe
sbb
in
cmp
xor
pop
sti
lods
mov
mov
and
jle
push
adc
pop
daa
and
out
repz
int3
add
pop
loopne
cld
xor
int
xchg
pop
jns
cmp
dec
dec
sub
in
inc
rcrl
dec
dec
test
push
push
pop
mov
push
inc
inc
mov
bound
jp
stc
les
cmp
jns
sub
dec
mov
aad
pop
sbb
dec
lea
push
and
das
xchg
sbb
fisubrs
jbe
push
fbstp
and
pop
adc
sbb
sub
scas
dec
xchg
cmpsl
cmpl
jmp
lahf
adcb
inc
mov
dec
icebp
cli
cmpsb
filds
mov
mov
cmp
pop
jns
adc
sahf
pop
push
push
pusha
out
ret
mov
jne
cmp
mov
call
and
ljmp
sarb
idivl
push
push
mov
scas
or
jge
js
loop
xlat
or
cltd
mov
pop
xor
add
xor
xlat
add
mov
pop
out
cmp
add
lods
cmp
into
imul
xchg
hlt
sbb
pop
pop
into
mov
push
daa
jbe
adc
jle
cli
cltd
push
inc
call
or
xor
orl
pop
and
inc
out
icebp
lahf
fnstsw
in
mov
mov
ss
pop
sbb
aam
cmc
aaa
mov
divl
mov
jp
call
and
into
cmp
add
sub
mov
imul
out
jns
adc
shll
out
and
orb
stos
ljmp
xchg
mov
xor
std
ds
outsb
jmp
aaa
dec
cltd
jne
lahf
mov
movsb
xchg
les
out
aam
hlt
mov
insl
mov
popa
jecxz
jb
nop
insb
mov
cmp
jnp
mov
stos
test
bound
inc
adc
lock
insb
ss
int
jns
adc
ret
mov
insl
pop
in
sahf
xchg
clc
cmp
lea
js
lea
push
jle
stc
jl
xchg
iret
cmp
stos
xor
imul
mov
data16
test
cmp
pop
pop
test
fcomi
sbb
fdivl
stos
or
mov
xlat
pusha
sar
rol
xor
jl
imul
cmpsl
mov
push
mov
popf
jo
icebp
sub
repnz
aas
adc
jo
fistpl
mov
inc
shll
push
pusha
fcoms
mov
push
sahf
cli
ret
imul
push
mov
jl
stos
dec
js
pop
pushf
push
outsl
movsl
movsb
xor
cmp
cmpsb
sbb
jmp
dec
lods
test
xchg
dec
bound
cmp
fldpi
pop
imul
push
out
mov
adc
andl
inc
mov
in
fnsave
pop
jb
pop
pop
daa
dec
cs
divb
fidivrl
bound
push
jl
test
jg
aas
je
test
sub
dec
leave
mov
daa
loop
push
outsl
adc
fldenv
shrl
lcall
out
mov
mov
push
push
popf
rclb
bound
mov
dec
push
xchg
and
fnstsw
stos
out
xchg
push
mulb
mov
shrb
xchg
xor
cmp
mov
cs
icebp
out
fsubs
mov
mov
fs
pop
sub
cmova
sbb
mov
sbb
aam
repnz
iret
jecxz
push
cwtl
dec
adc
mov
pop
or
test
or
or
pop
add
push
cmp
push
jns
lahf
data16
lret
inc
clc
orb
push
out
mov
into
add
ds
cmp
rcrl
mov
push
leave
nop
push
adc
push
outsb
mov
sub
push
and
mov
pop
and
addb
and
ja
mov
lods
mov
inc
dec
dec
mov
fldenv
sbb
rolb
adcl
sbb
lea
jnp
cmp
out
fnstenv
hlt
dec
pop
sahf
or
pop
or
inc
lret
sbb
sbb
in
mov
iret
mov
lods
jno
js
lret
ret
mov
clc
or
cmp
add
repz
rorb
push
rcll
xor
xor
in
adc
push
imul
daa
cmpsl
cmpxchg
arpl
mov
aas
jo
jg
cmp
outsl
stos
or
test
or
testb
fstpl
and
out
cmp
scas
cmp
mov
in
dec
mov
dec
push
jno
and
sub
call
xor
push
xorb
sub
cs
cmp
xor
jns
add
mov
imul
xchg
shll
ret
push
jns
xor
fdivl
add
push
bound
call
pushf
adc
xor
test
les
sub
outsl
xchg
movsl
ret
loopne
out
ret
aas
dec
mov
lods
loopne
mov
add
lret
ljmp
jbe
or
jnp
pop
cld
jnp
adc
pop
xorl
cmp
fwait
cltd
ja,pt
or
pop
je
mov
xor
fidivrs
mov
cmp
call
and
call
mov
imul
fdivr
pop
int
rep
add
rcll
jae
std
inc
ja
dec
adc
pop
enter
sbb
fdivrl
add
jbe
sar
das
fsubrp
mov
cmp
inc
pop
out
fwait
sarl
je
sbb
sbb
pop
enter
outsb
mov
sti
inc
push
sahf
in
lods
jo
push
sbb
cmp
adc
sbb
pop
xchg
cmp
xlat
sbb
pop
mov
into
arpl
pop
gs
lret
push
repnz
shlb
jle
mov
or
push
bound
sub
popf
sbb
in
in
shll
lahf
push
jmp
mov
dec
in
sbb
xor
dec
and
cmp
xchg
leave
jne
adc
sub
mov
cld
jo
pusha
dec
lret
fbld
or
mov
gs
stos
les
inc
jl
cmp
adc
pusha
mov
flds
insl
jmp
jae
mulb
xchg
out
ljmp
scas
popa
push
xchg
out
xchg
or
fwait
mov
jns
sti
in
outsl
pop
mov
mov
loope
push
fidivrs
dec
jno
jecxz
inc
add
fneni(8087
pop
jns
gs
cmp
call
insl
fstps
dec
aas
add
sbbb
mov
cmp
clc
cli
jge
mov
pop
mov
adc
out
lret
cli
xchg
outsl
sarl
inc
jbe
scas
jnp
dec
or
roll
scas
and
sbb
cmp
inc
xchg
rcrb
cmp
fbld
lcall
mov
mov
fistps
push
test
dec
in
adcb
and
dec
fcmovnb
mov
cmp
and
stos
pop
sbb
filds
lock
dec
add
jecxz
fs
stc
fs
or
cmpsb
cmp
fisttpl
dec
mov
inc
mov
push
push
inc
fmul
mov
mov
mov
imul
int
mov
jns
iret
dec
bound
je
ss
loope
cmp
sub
xor
xchg
mov
jbe
mov
es
dec
mov
dec
add
hlt
add
pop
inc
enter
inc
out
dec
xchg
gs
inc
pop
jb
xor
pop
fdivs
and
insb
pop
jg
pop
adc
imul
arpl
ss
mov
fxch
clc
fwait
outsl
mov
mov
adc
scas
mov
nop
cmp
cltd
sbb
hlt
jb
lods
cltd
mov
add
mov
pop
ja
test
popa
inc
or
rcr
mov
push
fidivrs
cmp
dec
add
jecxz
xor
nop
cwtl
gs
mov
pop
add
lret
popa
popa
pop
shl
pop
mov
lret
dec
js
xchg
mov
dec
cmp
push
mov
dec
add
cmpsb
adc
fildll
mov
js
pop
sub
sub
lahf
inc
fldl
xor
mov
int
inc
hlt
jg
xchg
and
pop
movsl
mov
cs
mov
adc
mov
pop
xlat
les
loop
add
popf
mov
xor
inc
fcmovne
mov
stos
fdivp
or
in
dec
int3
jne
decb
fimull
sub
mov
mov
insb
hlt
lahf
mov
flds
xor
and
dec
mov
xor
es
mov
sub
ret
gs
inc
adc
add
outsl
sub
sub
mov
or
inc
lret
xor
dec
cwtl
daa
int3
pushf
mov
sbb
cmp
insb
out
sub
lret
push
pop
test
inc
jge
fdivl
aaa
addr16
xchg
jnp
push
mov
test
fidivrl
sub
jns
mov
mov
out
enter
cmp
adc
xor
lahf
fs
jmp
call
mov
dec
int3
jg
outsl
in
lahf
sbb
or
cmp
sub
pop
iret
dec
jl
insb
pop
pushf
jl
pop
fmull
jg
outsl
in
lahf
sbb
or
cmp
sub
pop
iret
dec
jl
insb
pop
pushf
or
das
mov
dec
int3
jg
outsb
in
fwait
sbb
or
cmp
sub
pop
dec
sti
jl
insb
pop
pushf
and
fcompl
jg
out
in
lahf
sbb
cmpsb
adc
aam
mov
adcl
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
pop
sbb
repz
insl
shrl
int3
and
std
push
in
push
popf
and
adc
dec
repz
insl
rcrl
subl
std
arpl
push
popf
inc
mov
adc
repz
add
adc
mov
sub
mov
cli
adc
and
dec
dec
or
push
pop
call
mov
xchg
enter
lcall
add
sub
sbb
in
add
push
int
popf
mov
pop
mov
pushf
sub
mov
in
jg
out
mov
jmp
popf
xor
mov
mov
repz
dec
jecxz
orl
fldt
push
xor
mov
mov
int3
mov
adc
cmp
xor
adcl
fucomp
or
push
sbb
mov
mov
lods
adc
ret
xchg
sbb
cltd
rsqrtps
mov
inc
adcb
fdivs
inc
mov
jecxz
in
shrl
or
xor
les
imul
hlt
dec
test
xchg
and
add
repz
sbb
outsb
cmc
imul
out
sub
or
dec
call
jle
fwait
sub
adc
or
lcall
aaa
lods
adc
outsl
leave
jbe
mov
add
mov
subl
std
inc
in
push
popf
and
adc
dec
repz
insl
rcrl
subl
std
inc
in
push
popf
and
adc
bound
push
shlb
cmp
mov
in
jmp
loop
pop
xchg
mov
xchg
xchg
sbb
and
jbe
imul
mov
pop
sbb
pop
dec
push
movb
and
add
dec
xchg
in
mov
imul
pushf
jne
fldcw
cmc
pop
jge
inc
or
push
int
inc
in
add
push
faddl
dec
xchg
push
xor
icebp
xchg
sub
fidivl
dec
pop
outsb
gs
jl
lea
ror
adc
push
xor
sti
scas
dec
sti
mov
fidivrs
sub
xor
xchg
out
mov
sub
roll
xor
push
dec
fcom
rcrb
test
mov
gs
jbe
insl
cmp
sub
ss
decl
jl
cwtl
push
or
scas
aas
mov
cltd
add
scas
push
cmpsb
jp
pop
mov
jo
sub
xchg
pop
inc
jecxz
jb
testb
xchg
mov
add
xor
xor
push
cwtl
loop
sbb
out
push
push
jb
pop
aas
aad
out
outsb
jg
out
test
mov
xor
ficoms
push
mov
push
mov
pop
adcl
adc
mov
inc
stc
mov
leave
out
mov
sbb
cmpsb
xchg
sub
xor
or
or
loopne
jp
popf
sbb
lcall
pop
test
pop
rorl
filds
xor
icebp
push
lahf
das
shlb
arpl
push
dec
enter
push
inc
pop
sbb
icebp
push
jno
test
cld
prefetcht0
out
and
inc
push
lods
ds
sub
pop
stc
cli
popa
sbbb
mov
rcl
sbb
mov
in
xor
mov
pop
enter
jne
fnstcw
ret
add
mov
sbb
jb
push
mov
add
or
jno
add
dec
stc
sbb
clc
movsb
rcrl
rorl
idiv
jl
fistpll
sbb
scas
outsb
push
mov
sbb
add
xchg
imulb
xor
adc
pop
pop
mov
jp,pt
or
imul
xor
pop
shll
dec
gs
enter
scas
sbb
pmaxsw
icebp
cmp
fdivrl
out
jle
inc
dec
test
jne
mov
add
mov
je
mov
inc
bound
lahf
icebp
jne
in
fldcw
test
add
mov
lods
scas
lods
add
sub
shr
mov
pop
in
push
mov
movsb
add
repnz
js
sub
js
cld
sbbb
sbbb
sahf
shlb
imul
fsubs
xchg
in
aaa
fwait
lock
sub
or
cmp
aad
in
das
mov
divl
scas
cwtl
jnp
jno
inc
jae
pop
mov
sarl
sub
sbb
popf
aam
inc
or
mov
mov
sub
push
push
sub
sbb
mov
sub
sub
mov
out
clc
add
push
dec
add
ds
push
fsubl
mov
test
push
aaa
test
ds
lock
divl
lods
push
ret
test
outsb
data16
dec
mov
stos
jo
sti
jns
les
lcall
lret
and
xor
add
or
jecxz
sub
je
ja
sub
jb
cmpl
push
sub
add
push
stc
sarl
imul
or
adc
lods
pusha
push
jo
xchg
addr16
test
xor
jecxz
xorb
pop
add
icebp
enter
pop
push
dec
outsl
outsl
and
jp
sbb
loopne
push
fdivrl
enter
mov
dec
xor
cmpsl
out
inc
dec
push
push
adc
incl
and
dec
sarl
mov
movsb
inc
push
jmp
mov
xchg
cltd
jae
sbb
sub
xor
dec
loope
pop
or
xor
jb
sbb
rep
data16
and
lcall
adc
pop
shlb
xchg
sbb
cltd
inc
cltd
std
add
xchg
inc
jbe
fmul
faddl
jne
sbb
dec
in
jnp
shll
or
cli
pop
push
pop
mov
mov
out
jns
jmp
or
enter
jne
arpl
movsb
stos
or
cmp
cmp
mov
sti
addb
es
cmc
xor
dec
das
pusha
jb
mov
jmp
sub
inc
das
jp
les
mov
hlt
hlt
addr16
daa
fmulp
popa
icebp
pop
sti
aam
mov
mov
xor
cwtl
sub
push
sub
rcl
and
inc
or
mov
out
inc
or
aas
ljmp
orl
sub
inc
xor
cmp
pop
jle
js
daa
mov
andl
dec
daa
xchg
out
push
pusha
add
rorb
and
jno
push
lods
mov
push
in
faddl
add
add
mov
xchg
bound
mov
jno
loop
bound
popf
mov
ret
and
dec
mov
mov
rcrl
dec
inc
ss
call
lods
shrl
addr16
jecxz
sbb
adc
sbb
or
imul
and
inc
jle
mov
fsubl
xor
cld
bound
cltd
mov
adc
and
fiadds
xchg
dec
mov
pop
inc
mov
mov
stos
das
add
sbb
rcll
mov
xor
out
aad
inc
jae
xchg
out
or
push
push
sti
mov
xor
je
cmc
push
stos
sbb
push
mov
xchg
cmpsl
sub
cs
sbb
mov
test
adc
and
add
pop
iret
mov
mov
jns
add
mov
aaa
imul
ficoml
sbb
sub
test
mov
or
out
cmpsb
jmp
hlt
fwait
or
sbb
inc
adc
mov
decl
xchg
cmp
adc
leave
dec
imul
or
mov
test
leave
insb
or
cmpsl
pop
stc
mov
lds
bound
mov
pop
jg
mov
jb
add
sti
int
cld
mov
jnp
test
pop
mov
lods
add
test
repnz
ljmp
dec
fcom
and
loopne
push
hlt
xor
push
push
xor
adc
jae
stos
fadd
xchg
inc
dec
in
inc
push
clc
in
push
repnz
test
incl
loope
arpl
xchg
das
xchg
mov
out
pop
jno
push
mov
or
jl
push
xor
cmpsb
add
insl
movsl
divb
push
in
rcll
xchg
add
jae
jmp
testl
stos
imul
mov
push
pop
cmpsl
fldl
sarl
cwtl
clc
jl
dec
enter
jmp
mov
jmp
in
lock
dec
mov
dec
filds
sbb
fs
andb
cwtl
mov
test
fs
sahf
test
rcr
or
fsubs
mov
bound
or
data16
lock
out
add
and
pop
aas
inc
mull
sahf
cmp
icebp
in
out
out
cmp
repz
sar
lock
in
nopl
stc
pmulhw
std
mov
inc
pop
imul
xchg
and
repz
mov
pop
mov
and
sarl
lds
xorb
rorb
loopne
es
scas
lods
cmp
jne
inc
pop
leave
add
imul
lods
hlt
icebp
test
pop
test
jp
lret
or
je
aas
int
dec
stos
mov
mov
adc
dec
jecxz
add
xor
repnz
fbld
mov
enter
cld
cld
not
rclb
movsl
jne
mov
outsl
jb
fcmove
xchg
push
in
insb
fwait
inc
adc
xchg
xlat
add
ret
push
sub
leave
movsb
idivb
leave
popa
xchg
aad
cs
fldenv
out
cmc
nop
in
arpl
or
das
push
lahf
jae
jns
dec
xchg
mov
push
push
js
or
cld
lret
into
or
test
inc
movsb
lret
push
mov
sti
and
data16
cmpsl
scas
jle
xchg
test
arpl
mov
rcll
inc
push
xchg
xchg
pusha
sub
push
gs
mov
dec
lea
orb
aam
cmpl
adc
into
jns
and
repz
xor
cmp
cwtl
bound
iret
adc
or
xor
jmp
add
dec
add
sub
addl
add
or
add
jle
or
cmovg
daa
daa
fdivr
pop
jns,pt
jae
mov
pop
mov
jnp
push
addb
incl
xchg
insb
dec
cmpsl
add
fstl
fstpl
popa
outsl
cmp
cmc
jnp
or
mov
out
ds
xchg
incl
lret
pop
sahf
or
nop
es
xchg
jecxz
es
mov
inc
jns
or
ljmp
push
shll
and
and
xor
mov
mov
paddw
lcall
adcw
push
jnp
lods
stos
push
pop
dec
insl
sbb
or
mov
mov
push
cmp
cmpsb
outsb
xorl
cmp
xchg
and
les
dec
sbb
jbe
sbb
subl
push
pop
in
cmpsl
gs
sarb
sbb
xchg
or
sub
and
xchg
add
loop
mov
sub
movzbl
loope
sub
stos
cmp
mov
insl
push
lahf
fldenv
dec
xorl
adc
mov
jae
test
push
adc
fisubrl
in
notb
dec
xchg
xchg
repz
jae
xchg
icebp
adc
addr16
mov
fisubrl
cmpsl
in
mov
mov
sbb
fisttpll
or
jl
dec
mov
lds
mov
adc
mov
mov
movsb
xchg
ja
lods
leave
cmc
sahf
decb
gs
mov
les
leave
sub
xchg
sbb
jo
ret
jp
gs
cmp
rcr
push
jae
aaa
fisubrs
call
pop
stc
xchg
es
and
inc
in
or
bound
lcall
jns
fdivrl
dec
jno
add
call
sbb
ljmp
insl
cmp
ja
add
rcrl
ja
xchg
mov
push
mov
push
or
xchg
insl
jg
inc
pop
std
pop
je
push
sbb
ficompl
popa
fisubs
je
xchg
mov
add
in
cmp
testb
add
aaa
nop
mov
push
outsb
cmp
testl
mov
jbe
fwait
xlat
cmp
cmc
lcall
enter
fbld
sbb
mov
lret
jo
xchg
lcall
addr16
popa
lods
jno
pop
inc
adc
pop
lods
pop
sbb
js
sarb
adc
stc
cmpsl
mov
or
dec
mov
mov
and
enter
stos
mov
push
mov
out
mov
cmpsb
mov
test
icebp
test
add
lea
fsts
push
add
and
xchg
xor
loop
cli
fistl
aas
lea
xchg
pop
xor
lea
ret
push
test
scas
lea
insl
or
int3
movsl
fidivrs
sbb
push
lock
ret
jecxz
xor
test
mov
mov
stc
sbb
jmp
cwtl
loope
fdivrs
adcb
rcl
pop
sub
sbb
fisubs
leave
or
test
sub
jmp
stos
lahf
aad
aad
repz
orl
cmp
fldenv
insl
or
pop
dec
imul
mov
mov
fists
icebp
nop
sub
sub
aam
inc
push
xchg
icebp
pop
iret
push
mov
cmp
xor
jns
mov
push
and
pop
jnp
jmp
lock
ja
ljmp
cltd
filds
mov
xchg
aaa
mov
push
adc
cmp
xor
or
xchg
mov
mov
cmp
subl
mov
mov
jne
adcb
mov
packssdw
xchg
lret
movsl
decb
dec
filds
xchg
les
inc
test
out
pop
addr16
mov
xchg
imul
mov
cmp
jbe
cli
pusha
adc
or
in
pop
fisubs
fcompl
or
pop
pop
test
fidivrl
and
int
inc
jo
jnp
xor
jnp
int3
lahf
test
jnp
lock
rcl
mov
in
test
dec
xchg
mov
xchg
rorl
ficompl
adc
ficompl
in
pop
loope
testl
mov
cmp
push
in
adc
loop
test
jle
mov
dec
aam
xchg
popf
enter
cmpsb
mov
cmp
or
adc
pop
push
push
lds
add
dec
std
ja
inc
add
scas
shll
in
xchg
movsb
xchg
ss
fwait
rorb
stos
lds
push
push
jl
test
add
fiaddl
jae
jbe
or
and
les
inc
mov
movsl
push
jl
push
or
in
jne
jle
out
jb
mov
cmp
data16
mov
notb
jge
ret
and
xchg
dec
xchg
add
mov
inc
jae
mov
add
inc
rorl
xchg
mov
lcall
dec
arpl
bound
stos
fsts
xor
cmpsb
mov
push
dec
movsb
mov
mov
lcall
add
movsb
or
mov
and
xor
lahf
ret
in
cmpb
pop
lret
pop
pop
mov
aad
cmp
adc
lea
jmp
std
movsb
pop
out
add
and
loope
js
mov
dec
in
mov
sub
ficompl
insl
pop
subb
test
dec
enter
inc
and
nop
scas
or
xor
aad
iret
clc
subb
mov
out
and
mov
mov
insl
ja
xor
into
pop
fistps
ret
push
pop
gs
mov
into
push
std
fistpll
dec
mov
adc
out
fpatan
inc
cwtl
sahf
bound
out
es
ficoms
adcl
or
ret
pop
mov
lods
mov
in
rsm
popf
push
add
push
sub
xor
push
lret
inc
insb
in
mov
pop
cwtl
loopne
mov
insb
push
mov
pop
test
aas
cmp
fcompl
push
jo
inc
in
je
sbb
or
fs
ljmp
pop
shlb
lret
enter
pop
sbb
xchg
jnp
mov
dec
aam
jmp
adc
mov
movsl
lods
sub
addr16
mov
in
mov
add
xchg
fcmovnb
ss
mov
inc
mov
pop
ficoms
scas
add
in
and
xchg
test
aam
scas
pop
cmp
or
popa
fdivrl
lods
popa
fmuls
cmc
sbb
das
adc
or
push
push
jge
pop
fninit
movsb
push
cmp
xchg
dec
adc
cmp
out
cmp
insl
lret
and
xchg
dec
xchg
mov
loopne
xchg
mov
xchg
sbb
je
and
movsl
cwtl
mov
sub
dec
out
repz
or
ss
cmp
cmc
outsb
cwtl
lock
out
sub
scas
scas
jno
jge
es
lea
icebp
sbb
cmp
int3
mov
or
fiaddl
pop
push
sub
lret
inc
pop
xlat
js
add
test
loope
lods
mov
dec
data16
pusha
cmp
dec
or
cltd
mov
test
out
add
xchg
in
jae
adc
ja
ja
cwtl
adc
jns
mov
pop
subl
sbb
sub
mov
les
mov
repz
cmp
ret
sub
ret
push
xor
pop
mov
arpl
adc
sub
sub
lcall
lret
mov
out
repz
cs
jae
out
push
mov
pop
insb
cli
aad
inc
lods
cmpsl
aas
push
ss
mov
outsl
das
mov
js
pop
jg
or
mov
aaa
in
aaa
sar
popf
adc
lea
fs
insl
mov
jns
pop
fwait
loop
jge
jne
sbb
pop
lcall
jo
loopne
mov
lea
dec
shll
and
insl
mov
out
inc
and
or
pop
fs
xchg
jno
fs
mov
fcmovnu
dec
into
pop
fmul
xchg
push
push
ficomps
cmp
mov
jmp
add
mov
sub
enter
xchg
arpl
jno,pt
aaa
inc
lock
xchg
repz
add
cld
mov
mov
unpckhps
inc
mov
js
inc
nop
dec
lods
jbe
mov
mov
test
jno
sbb
inc
mov
add
jmp
fnstenv
xchg
mov
out
dec
xchg
ret
pop
lods
daa
outsb
push
inc
test
lfs
pop
inc
aad
push
into
sbb
push
fs
sbb
out
mov
arpl
ret
ljmp
mov
in
popa
out
and
or
dec
lahf
cwtl
and
mov
and
movsb
sub
rol
movsl
enter
ds
out
imul
test
mov
aas
mov
inc
jae
xor
es
test
and
stc
cld
dec
xor
push
push
jl
add
pop
xchg
imul
test
push
jbe
out
xor
adc
add
xchg
and
and
or
in
out
loope
into
cmp
add
mov
lods
lea
adc
lret
xchg
test
jle
into
repz
mov
pop
test
sbb
mov
push
xchg
adc
into
stc
adc
bound
or
loope
xchg
sbb
or
shlb
mov
push
xlat
push
scas
inc
stc
ret
inc
sbb
scas
xor
dec
ficoml
fnstcw
xor
pop
fisubrl
test
cmp
mov
push
inc
sub
rcrb
jle
adc
js
lret
fidivl
jmp
sub
in
pop
pop
rcll
jmp
cwtl
push
fcmovbe
aaa
ret
setg
andl
rcrl
jns
popa
fists
xor
ja
or
loope
fstp
jb
lods
push
rorl
jp
fisubrs
push
inc
mov
xchg
enter
cmp
aam
int3
cmp
shll
daa
nop
push
mov
jmp
daa
out
stos
fisubs
call
push
ret
mov
popa
jmp
push
out
jmp
movsl
xor
test
sahf
inc
xchg
sahf
inc
out
loope
rcrb
inc
mov
aas
xor
xchg
jb
ret
jge
ljmp
cmp
imul
lods
jg
cmp
jmp
mov
imul
mov
mov
sahf
pop
adc
jne
stos
shl
or
fisubrs
loopne
xchg
inc
stos
subl
imul
mov
testb
pop
adcl
push
and
or
xor
ret
mov
js
mov
dec
pop
jmp
mov
sub
mov
adc
cwtl
jg
inc
inc
lds
fbstp
fldenv
jmp
fs
gs
sahf
inc
push
fistpl
adc
orl
outsl
adc
inc
jp
les
sbbl
int3
ror
lods
mov
cltd
and
stc
pop
fsubl
jle
mov
cmp
sahf
jg
mov
push
test
les
jl
shlb
arpl
test
fcom
test
repnz
fs
mov
mov
jle
clc
jo
hlt
and
outsb
adc
out
sahf
pushf
mov
ljmp
ret
imul
push
lret
adc
aaa
sbb
lds
sub
jg
push
pop
std
cli
jge
dec
add
xor
je
mov
push
ljmp
popf
add
hlt
mov
ss
repz
scas
icebp
fnstcw
shrb
mov
or
push
jne
push
sbb
leave
cmp
jp
subl
push
xchg
xchg
lahf
ret
pop
fwait
dec
cltd
or
xchg
icebp
jbe
ja
or
int3
pop
jecxz
sarb
mov
sub
shlb
xchg
push
xchg
cmp
xchg
xchg
add
xchg
inc
stc
xor
add
out
add
pop
sbb
push
xor
leave
xchg
mov
and
mov
inc
inc
sarl
sub
adc
pop
or
cmpsb
vmaxss
add
bound
mov
sti
dec
adc
fldt
mov
cld
stos
jle,pn
xorl
inc
mov
push
fisubrl
inc
sahf
imul
sbb
cmp
dec
push
jecxz
mov
filds
jne
cltd
mov
std
das
xchg
addb
pop
jecxz
mov
xor
test
add
inc
xchg
stc
jbe
pop
iret
dec
mov
addr16
in
inc
sub
sahf
insl
aam
xchg
das
xchg
push
inc
jnp
adc
jl
sahf
mul
dec
jne
andb
dec
pop
xchg
repz
ljmp
sub
inc
xchg
inc
loope
xor
pusha
mov
daa
insb
mov
iret
jl
xor
test
pop
pop
inc
fsubl
ja
in
sub
inc
es
add
sti
subl
pop
loop
leave
pushf
mov
mov
pop
or
pushf
pop
scas
test
mov
jecxz
fs
push
ret
clc
jnp
pop
inc
adc
jns
scas
push
lcall
pop
xchg
lods
jmp
xor
shl
jecxz
and
lods
fmuls
jbe
lea
inc
push
and
add
jne
repz
mov
pusha
jmp
sbb
lods
jo
xchg
popl
ljmp
out
lahf
loop
cld
lcall
gs
sub
xchg
sub
jge
mov
rcrb
outsb
repnz
sbb
jnp
lahf
std
push
dec
leave
add
cmc
fld
jmp
int
add
ret
xor
loopne
imul
adc
cmp
outsb
outsl
xor
nop
jbe
push
subb
cmp
adc
jg
mov
test
outsb
jl
push
std
shr
insb
mov
cs
idivb
cmp
leave
adc
lds
lock
adc
push
jae
pop
xchg
add
cmp
jb
neg
inc
inc
cmpsl
iret
repz
insl
rcrl
subl
std
inc
in
push
popf
and
adc
dec
repz
insl
rcrl
subl
std
inc
in
push
popf
and
adc
dec
repz
insl
rcrl
subl
std
inc
in
push
popf
and
pop
jecxz
repz
insl
rcrl
mov
lods
xchg
and
fsts
in
and
stos
add
in
int3
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jns
imul
ja
add
stc
ss
and
arpl
xchg
pop
mov
sub
sbb
or
fldenv
leave
xor
test
jae
lcall
cmp
sub
sbb
or
stc
add
xor
or
daa
in
adc
sbb
iret
or
aam
or
sbb
fldenv
pop
push
daa
or
std
mov
lea
xor
mov
mov
and
sbb
or
cld
insb
in
es
int3
inc
and
mov
pop
popa
clc
pop
nop
cmp
mov
pop
clc
xchg
rclb
stc
add
int3
jmp
arpl
insb
xor
push
ret
cmp
pushf
xchg
or
jecxz
in
daa
fsubl
sbb
insb
mov
add
cmpsb
lcall
in
pop
leave
xor
out
pop
ret
dec
loop
mov
es
int3
jmp
popa
or
xchg
imul
sbb
or
stc
add
or
cmp
sub
jns
jb
sbbl
cmp
pop
mov
or
fldenv
mov
mov
or
pop
sbb
or
cmp
and
popf
popa
xchg
pop
rcrl
xor
add
pop
sbb
imul
sbb
or
stc
add
adc
and
xor
arpl
xchg
pop
mov
sub
sbb
or
stc
add
adc
and
xor
arpl
add
data16
dec
mov
inc
data16
ss
push
movsl
popa
mov
sbb
js
aas
aas
add
sbb
cli
out
mov
test
scas
mov
test
xchg
insb
jo
mov
sbb
add
aad
sbb
xchg
call
push
mov
cmp
jns
lret
ljmp
and
mov
xor
add
adc
lret
or
std
in
pop
pop
fdivrs
cld
push
test
inc
push
cmc
cltd
ret
lock
dec
inc
or
fnstenv
hlt
cld
fcmove
jne
or
dec
xchg
inc
outsl
int3
push
cmpb
cmp
inc
sbb
lods
aaa
and
or
shlb
nop
fdivl
pmaxsw
shl
inc
sbb
adcl
sbb
cs
int3
sub
lock
sbb
pop
das
pusha
sbb
pop
lret
xchg
out
push
outsl
xor
cmp
hlt
push
push
pop
sbb
xchg
mov
insb
jno
clc
cmpsb
sar
mov
push
test
das
or
cli
xor
mov
lds
jno
jecxz
out
mov
sub
test
sub
push
mov
adc
shll
add
adc
cmp
test
add
mov
mov
mull
mov
cmc
xor
test
push
mov
push
cmc
xchg
ret
sahf
jp
div
inc
cwtl
dec
cwtl
dec
cmp
les
cmp
adc
call
mov
xlat
or
cmp
inc
popa
add
xor
jns
mov
cwtl
and
adc
push
fidivrl
mov
pushf
cmpsb
jno
scas
sub
xchg
jbe
xor
pop
out
mov
in
xchg
jb
adcb
mov
fmulp
pcmpgtb
pop
push
xor
add
es
sbb
or
jbe
int
or
sbb
dec
insl
ljmp
or
push
add
fisubrl
pop
jo
cmovg
fwait
and
je
aaa
pop
mov
and
in
mov
dec
mov
mov
mov
jecxz
leave
psubd
pop
data16
mov
adc
rorb
test
dec
les
arpl
add
enter
clc
cmpsb
test
dec
mov
rorl
xor
jp
add
adc
inc
jp
lds
lret
jmp
scas
mov
out
gs
out
icebp
cmp
push
cmp
icebp
outsl
out
cltd
or
adc
mov
icebp
outsl
dec
and
inc
sbb
inc
adc
push
lret
int
pop
push
xchg
leave
aam
pop
fwait
in
pop
lods
in
aad
aad
iret
ret
mov
mov
std
push
add
sub
loope
or
inc
xchg
lcall
cmp
mov
test
sub
pop
sti
loopne
mov
push
lods
xlat
mov
hlt
pop
mov
jge
push
pop
xchg
dec
dec
mov
lret
lcall
pcmpeqd
scas
lret
mov
inc
fs
jle
add
rcl
fidivrl
stos
nop
sarl
aam
hlt
sbb
and
push
fcmovu
dec
enter
sbb
push
xchg
rolb
push
xchg
jnp
rclb
testl
pop
mov
mov
and
adc
insl
push
pusha
fldcw
popa
xchg
fcomip
add
scas
movsl
ret
imul
sub
jb
test
clc
dec
cltd
insl
lret
call
sahf
jbe
pop
lds
call
and
inc
addl
push
addr16
mov
sub
orb
jnp
push
mov
push
loopne
scas
push
push
lret
xor
pop
mov
imul
das
sbb
adc
pushf
sbb
inc
or
insl
jbe
inc
jecxz
mov
insl
mov
dec
loop
in
test
adc
pop
xlat
scas
pop
xchg
mov
push
mov
push
loopne
adc
push
rcrb
sti
push
ja
jne
insb
xchg
scas
xor
xor
jo
adc
mov
cwtl
popa
jne
xor
sub
mov
add
call
orb
mov
push
add
and
cmp
repnz
imul
movsl
jno
out
mov
jbe
pop
push
xchg
test
sbb
test
out
inc
mov
outsb
stos
inc
adc
or
rclb
out
es
loopne
add
ljmp
sarb
xchg
inc
andl
xlat
mov
or
add
xchg
pop
mov
nop
mov
cmp
shlb
mov
mov
mov
sub
xor
mov
call
das
mov
fmuls
testb
dec
inc
cmp
lea
loopne
push
adc
cli
sarb
adc
jmp
lahf
pop
sub
lea
pop
movsl
xchg
jno
xor
cli
outsb
and
sarl
push
push
lea
push
pop
dec
loop
popa
xchg
inc
jl
add
pop
push
push
mov
pop
xchg
add
sub
mov
cmc
or
pop
fisubl
sti
push
das
cltd
loop
movsb
es
sarl
dec
iret
cwtl
dec
lahf
adc
push
in
mov
stc
sbb
cmp
lods
test
jp
xchg
cmpsb
sub
mov
movl
jae
imul
icebp
pop
inc
jb
fistpl
jbe
cmp
shrl
aad
cmp
jno
mov
sub
push
inc
fstpl
sub
rorb
dec
mov
inc
jle
or
add
dec
add
inc
add
out
adc
lods
movsb
sub
imul
stos
push
subb
pop
sbb
xlat
adc
fidivs
test
push
sub
int3
inc
pusha
or
scas
sbb
sub
add
outsl
push
add
arpl
or
sbb
fistpll
daa
shl
xor
push
xchg
dec
dec
ret
mov
push
cmp
and
sub
dec
push
pop
mov
cmp
jp
shr
dec
jo
repnz
ficompl
ljmp
xor
scas
addr16
xor
adc
jmp
cwtl
in
xchg
mov
inc
outsl
leave
mov
pop
jle
out
int3
xchg
movups
test
lret
mov
scas
push
pop
push
adc
sahf
sahf
scas
or
movsl
mov
js
dec
add
xchg
inc
add
adc
push
dec
sbb
xor
into
lods
mov
js
pop
or
hlt
mov
jno
pop
shlb
sbb
sbb
xchg
push
cmc
mov
test
incb
sti
inc
arpl
ja
push
popa
gs
inc
in
sbb
jae
cmp
mov
loopne
lock
cs
lret
jmp
inc
pop
outsb
into
fs
xchg
imul
shrl
cli
pop
mov
lods
adc
es
and
sub
lds
pusha
cmp
outsb
push
xchg
pop
mov
aas
add
pop
dec
fxch
inc
cld
loopne
jno
arpl
std
sub
out
test
ja
shll
jge
inc
outsl
fisubrl
adc
adc
cmc
jg
lds
es
sbb
add
test
inc
adc
cmp
and
repz
jno
jb
jo
mov
pop
add
dec
lret
popa
xlat
out
jo
jbe
add
popf
jmp
fisubl
xchg
daa
fmulp
inc
aas
push
out
mov
ret
and
jnp
out
cmp
adc
call
push
out
cmpsb
mov
test
js
aaa
lahf
fistpl
cmpsb
call
faddl
xor
jmp
sub
inc
adc
jne
inc
adc
outsl
subb
or
push
pop
cmp
sub
push
imul
cmpsb
jnp
sub
jbe
stos
xor
pop
fdivrs
dec
jecxz
xor
push
mov
mov
rcll
cmp
call
jb
data16
shlb
jp
sbb
or
lcall
inc
loopne
or
xor
stc
bound
xlat
fimuls
lcall
dec
jmp
int
push
outsb
sub
xchg
loopne
xor
cli
cmp
mov
test
in
jbe
lahf
fisubrs
jo
or
and
or
rorb
mov
adc
sub
sahf
rcr
inc
sbb
cmp
cltd
adc
push
sarl
jne
add
jl
sbb
or
mov
jae
inc
jo
and
jae
push
mov
in
repnz
arpl
mov
or
in
mov
mov
movsl
inc
das
ret
test
mov
fldt
xor
inc
or
ror
fwait
aam
add
rol
mov
mul
sub
and
into
and
popf
lock
rorl
inc
xchg
mov
clc
imul
pop
mov
adc
cltd
cwtl
mov
xor
add
cli
sub
je
fsubs
iret
loopne
out
push
leave
xchg
xchg
fisubl
pop
vcmppd
outsl
adc
aas
clc
dec
lods
aam
pop
mov
adc
xchg
aam
push
push
or
adc
pop
dec
test
mov
adc
outsb
int
fistl
sub
pop
pusha
aam
xchg
inc
adcb
leave
fwait
push
adcb
ljmp
jl
aaa
mov
pop
stos
mulb
pop
stos
clc
out
push
jge
gs
cmpsb
ret
ljmp
and
adc
pusha
jp
pop
in
daa
cmpsl
repz
inc
fcoms
sbb
adc
adc
mov
aam
arpl
test
cmpsl
stos
movsb
outsl
aam
jb
inc
dec
in
push
or
cmp
jmp
adc
sbb
fidivrs
xor
mov
xchg
rcr
or
jns
jp
push
mov
pop
inc
nop
mov
cltd
push
xor
mov
xorl
pop
aad
sub
sub
xor
rorl
hlt
dec
push
loop
shl
pop
test
and
jmp
lret
lret
mov
ret
add
lods
cmpsb
ss
iret
xor
mov
dec
cwtl
sar
xchg
imul
lahf
arpl
xor
sar
scas
add
sub
out
clc
sbb
inc
out
adc
jo
pushf
sti
inc
loope
lea
push
sbb
inc
jge
cmpsb
jns
adc
inc
jmp
and
mov
sub
out
jo
mov
ljmp
std
ljmp
pop
xorl
enter
in
out
or
add
add
aam
mov
dec
aaa
jbe
pop
jb
shrb
dec
lret
add
jns
jecxz
aad
mov
pop
xchg
fnstenv
sti
test
shlb
lods
add
test
inc
and
repz
movsb
and
cmp
inc
xchg
and
repz
pushf
pop
sub
loopne
mov
pop
mov
stos
cmp
jle
enter
aas
xlat
inc
or
js
outsb
jns
ret
cwtl
dec
pop
mov
jne
dec
fucomi
adc
arpl
dec
or
ja
lahf
movsb
mov
jb
adc
add
pop
stos
loope
test
stos
pop
bound
adc
pushf
adc
dec
repnz
or
scas
sbb
out
cmp
push
mov
dec
fsubl
repnz
sar
jecxz
loope
jecxz
ss
orl
sbb
mov
out
ljmp
sbb
sub
mov
lds
insl
push
stos
add
ja
or
mov
sub
cwtl
inc
pop
ss
push
call
mov
in
xchg
jo
pop
cmp
or
push
mov
mov
mov
adc
push
dec
int3
push
push
test
outsl
and
jb
imul
outsb
pop
dec
mov
lods
xor
adc
bound
movsl
mov
xchg
push
add
adc
dec
es
push
and
cmp
or
cmpsl
and
test
sbb
fisubrs
push
aas
inc
cmp
rol
lods
fwait
mov
mov
inc
mov
add
jnp
mov
mov
add
cli
add
cmp
sbb
pop
lods
inc
inc
inc
ds
cmp
stos
adc
push
stc
add
fidivrs
xor
mov
mov
cmp
fcmovb
ljmp
pop
enter
sbb
sbb
adc
sub
lock
dec
cmpsl
xlat
clc
and
add
push
add
clc
in
test
ja
mov
in
inc
dec
or
fwait
adc
js
daa
aam
ja
stos
xchg
ret
out
xlat
std
aam
lahf
loope
popf
mov
dec
popa
popf
xorl
repz
es
sub
mov
add
jle
cld
jb
adc
int3
sub
ror
outsb
hlt
femms
push
inc
aam
xor
jo
fmuls
inc
push
in
popf
jl
lahf
mov
and
clc
fcomi
sub
mov
aad
dec
rcrl
insl
mov
out
cmpb
mov
mov
fmulp
andb
fimuls
pop
sahf
out
mov
cmp
pushl
inc
loopne
std
lret
out
mov
jecxz
push
scas
xor
lret
or
cltd
pusha
out
jmp
push
pop
mov
cld
fucomp
lods
push
adc
fldl
shll
and
pop
rcr
sarb
rolb
add
in
mov
sub
sub
cmp
jb
adc
ljmp
jno
or
sbb
loopne
pushf
daa
paddusw
sbb
les
hlt
fadd
push
gs
push
xor
xorl
and
idivl
jns
xchg
xor
rorb
xchg
out
into
cmp
fxch
lea
outsl
sbb
mov
dec
mov
push
or
dec
mov
popf
iret
fstp
loop
xchg
imul
mov
mov
push
lods
ret
movsb
lret
insb
les
adc
movsb
pop
in
insl
push
jecxz
adc
add
in
jp
cmp
outsb
mov
mov
xchg
jl
sbb
gs
xchg
hlt
ficoml
sbb
xchg
pop
add
scas
das
je
mov
sbb
xor
xlat
mov
idivb
in
rorb
cltd
mov
aas
pop
inc
xor
mov
xchg
movsb
stos
dec
int
aas
jp
mov
cli
xor
adcl
xchg
sub
int3
lds
cmp
leave
in
sarl
cmp
and
or
gs
aam
cmp
inc
lds
xchg
push
inc
add
cmpsl
mov
mov
adc
rolb
icebp
arpl
call
pop
sbb
and
and
rcl
dec
hlt
or
mov
adc
je
movsb
inc
sti
mov
fbld
negb
xchg
mov
nop/reserved
mov
fsubrl
std
fcomps
jmp
popa
jns
xchg
dec
in
mov
inc
sbb
lcall
arpl
mov
daa
adc
std
loopne
sbb
in
mov
dec
cld
nop
aad
int
push
loop
mov
jge
pop
daa
icebp
addr16
lret
imul
in
or
cmp
les
xchg
jnp
out
inc
stc
in
in
cwtl
mov
xchg
and
sbb
in
mov
xchg
sbb
lret
ret
and
mov
or
mov
or
push
mov
inc
mov
and
inc
push
in
sub
int
in
add
es
sarb
aaa
mov
push
mov
dec
outsb
push
and
inc
xchg
mov
sbb
stos
sub
fstps
fsubl
jg
rcrl
adc
push
inc
and
push
push
test
push
and
cmpsb
pop
cmp
xchg
hlt
mov
cmpsl
je
mov
push
enter
adc
fs
cmp
jns
inc
imul
mov
movsb
fiadds
lea
jne
ljmp
xchg
add
test
cmpsb
sbb
inc
xacquire
mov
stos
mov
leave
add
inc
mov
hlt
fisubrl
inc
add
cmpsl
test
pusha
cmp
repz
iret
jae
mov
pop
fldcw
in
enter
lods
jle
and
aam
cld
das
aam
push
add
xor
xchg
sbb
and
hlt
jge
shrl
in
and
dec
insl
mov
push
pop
push
gs
xchg
and
pop
jle
les
adc
icebp
lods
in
add
push
xchg
mov
mov
hlt
or
cwtl
cmp
addr16
mov
mov
cmpsb
xchg
and
int3
cwtl
sub
fwait
dec
add
sub
mov
jmp
rcll
inc
lret
repz
daa
mov
scas
fimuls
jbe
das
ja
cld
xchg
xor
xor
lods
sub
push
inc
jb
pusha
adc
add
mov
scas
cltd
xor
pop
std
fs
icebp
jge
icebp
pusha
fistpll
or
xchg
test
dec
xchg
stc
xor
jl
cmp
int3
pop
stos
sub
insl
pop
pop
or
dec
js
cmp
cmp
adcb
xor
xchg
imul
lcall
xchg
call
imul
pop
fisttpll
testl
nop
sbb
sub
mov
jo
jl
sub
outsl
sub
push
aas
or
lds
das
movsb
in
loop
out
mov
lcall
inc
jg
aaa
jg
xchg
sbbl
jno
cltd
or
mov
jg
or
push
les
lahf
lret
xchg
repnz
mov
out
mov
mov
push
ret
stc
cli
test
inc
dec
cmc
rclb
sti
js
fisubrs
mov
dec
jp
sub
adc
push
dec
xchg
addb
in
inc
push
inc
sbb
cmp
xchg
test
or
aas
xchg
mov
cli
cmc
cwtl
sub
jge
dec
add
imull
jae
jno
xor
fs
in
test
aam
dec
add
mov
xchg
cli
push
addr16
sbbb
in
js
lahf
jbe
mov
push
mov
xchg
push
or
jae
loope
cs
inc
movsb
cmp
adc
iret
outsb
insl
jae
xor
mov
jecxz
and
mov
leave
mov
xlat
cmp
xchg
sub
pushf
imul
cmp
hlt
cmp
push
pop
std
outsb
sub
dec
rclb
push
mov
faddp
or
push
pop
loope
add
jmp
push
in
shl
ljmp
jb
lds
xchg
jg
lods
fsubs
jmp
push
sbb
or
icebp
adc
xor
jmp
test
fmul
shl
enter
into
adc
mov
xchg
add
fstpt
pop
adc
adc
mov
and
mov
scas
pop
mov
lods
push
pushw
jl
sbb
stos
xchg
cmp
inc
xchg
add
movsl
mov
or
jnp
in
mov
mov
es
imul
cmp
icebp
enter
sbb
fxam
and
popa
testl
arpl
sub
mov
push
loope
popa
inc
aad
outsb
cmp
fisubs
sub
jns
sub
and
sbb
xchg
idivl
dec
mov
sub
fildl
cltd
and
push
jnp
xchg
and
push
xchg
psllq
sub
ret
aad
mov
adc
mov
mov
jle
or
cmp
and
popa
repz
rclb
fsubl
xor
jns
rol
mov
mov
fldcw
sbb
push
stc
in
and
sbb
or
daa
dec
jge
loop
lods
in
pop
pop
popa
mov
or
xchg
lret
mov
into
stos
loope
mov
mov
xor
add
sarb
shlb
add
testl
jg,pt
pushf
mov
in
jg
insl
iret
cmp
out
xor
xor
outsb
inc
addr16
icebp
in
subb
mov
rorl
or
adcb
xchg
and
mov
add
adc
mov
lock
mov
push
jle
bound
mov
out
js
mov
dec
xor
daa
jmp
mov
orl
test
push
push
rcrb
negl
xorb
mov
out
cmp
out
mov
hlt
mov
sti
call
sub
mov
inc
xor
jo
sarl
int
std
fs
mov
cmc
jmp
xor
fildl
push
fistps
stos
or
mov
scas
les
xchg
or
jns
add
pusha
jp
sbb
inc
dec
js
leave
cli
iret
inc
addr16
hlt
push
fwait
aad
out
out
push
stos
js
stos
jmp
rcr
xor
cld
push
pop
mov
push
aas
mov
mov
xor
lcall
repnz
pop
ljmp
cmpsl
in
call
imul
jmp
jge
cmc
mov
dec
adc
aam
fs
std
adc
and
sarb
and
hlt
adc
aam
push
or
push
jns
and
shlb
adc
leave
dec
mov
jge
mov
shrb
icebp
cmp
nop
repnz
pop
ss
jno
and
dec
mov
imul
leave
add
popa
mov
inc
lods
pushf
sub
fstps
lea
xchg
lahf
pop
pop
rcrl
and
pop
es
popf
cmp
repnz
mov
test
mov
push
call
cli
or
daa
int3
sbb
rclb
adc
lods
push
into
insl
outsb
mov
xlat
jo
jecxz
jnp
ljmp
sub
cltd
cli
sub
stos
ds
xor
jnp
rcl
out
sbb
sub
cmp
movsl
jbe
pop
pop
cwtl
dec
pop
fistpll
pop
int
push
aaa
ret
pop
push
lret
jg
hlt
hlt
imul
popa
les
or
les
aad
inc
pusha
adc
inc
cmpsl
pop
push
pop
shlb
cmp
bswap
add
jo
and
insl
dec
leave
rcr
dec
add
lret
loop
cltd
add
pop
xchg
movsl
xor
lock
ljmp
add
ret
or
popf
jg
mov
fstp
dec
jo
fxch
fwait
jae
movzbl
cld
xchg
adc
fcompl
or
cmp
jns
test
xchg
cmc
or
inc
fs
les
ror
in
jo
pop
inc
loop
cmp
xchg
push
and
and
mov
popa
and
xchg
popf
pop
pop
sub
stc
push
ret
add
adc
xor
fnstcw
xor
gs
jne
std
sar
xchg
sbb
aad
mov
iret
jp
cmpsl
adc
inc
xchg
pop
mov
sub
sbb
or
stc
add
adc
and
xor
arpl
xchg
pop
mov
sub
sbb
or
stc
add
adc
and
xor
arpl
xchg
fldenv
sub
sbb
mov
stc
add
adc
and
aaa
mov
mov
xchg
pop
cmpsl
dec
mov
ret
sub
sbb
or
stc
add
mov
leave
lret
fldcw
sbb
or
int3
int3
int3
int3
or
jbe
inc
stos
push
popa
dec
jmp
cltd
es
push
sbb
or
cmp
sub
pop
cmpsb
dec
xor
imul
inc
stos
push
lret
ss
push
jmp
sbb
or
pop
cmpsb
dec
mov
les
fwait
mov
inc
stos
push
lret
ss
push
jmp
sbb
negb
dec
cmp
and
pop
hlt
add
jmp
mov
imull
sti
pop
push
loope
aad
adc
xchg
jp
push
popa
fistpll
into
xor
test
ljmp
add
or
cmpsb
pop
cmpsb
shll
push
mov
lret
stos
inc
out
inc
sahf
cli
sbb
pop
or
aam
in
mov
jns
pop
pop
jae
cmc
fwait
mov
out
sbb
int
cmp
ret
xchg
jns
sbb
je
call
daa
ret
and
adc
xchg
jae
jle
imul
push
or
xchg
sbb
mov
cmp
mov
in
dec
cmpsb
xlat
das
mov
jno
xchg
push
les
jbe
inc
stos
push
lret
ss
push
jmp
sbb
or
cmp
sub
pop
cmpsb
dec
mov
xchg
out
or
jbe
das
in
cwtl
dec
scas
ss
cmpl
das
movl
xlat
les
je
inc
jecxz
mov
jno
push
dec
sahf
addw
mov
sub
je
in
das
movsl
and
lcall
push
sbb
or
cmp
sub
pop
cmpsb
dec
mov
xchg
fwait
mov
inc
stos
push
lret
ss
push
jmp
sbb
or
cmp
sub
pop
cmpsb
dec
mov
xchg
fwait
data16
ss
stc
adc
mov
mov
rclb
pop
lret
jns
sbb
fisttps
mov
cmp
roll
push
stos
bound
mov
xchg
or
fcomi
popl
cld
xor
daa
stos
xor
dec
clc
ret
loopne
jnp
nop
outsb
lret
fs
cli
inc
mov
pusha
sbb
mov
pushf
push
addr16
mov
jecxz
in
mov
adc
cs
pop
mov
stos
pop
js
jecxz
shl
mov
xor
cmp
mov
fdivrl
mov
lods
sbb
sbb
jae
sbb
jg
gs
jb
rcll
mov
pop
testb
sti
pop
test
and
pop
cmp
or
inc
or
lahf
sub
push
jo
aaa
dec
in
mov
jg
out
inc
repnz
xlat
xchg
jp
push
imul
lds
fldenv
scas
jbe
loope
imul
lret
or
sub
xlat
movsb
fdivs
jns
sbb
pop
sbb
add
fldcw
pusha
cmp
int
push
aas
sub
lock
sub
mov
mov
enter
cltd
xchg
jbe
push
push
movsl
pushf
pop
out
jl
xchg
aam
xchg
lret
lock
shll
data16
mov
ljmp
pusha
xor
push
andl
add
and
dec
pop
mov
push
repnz
cmp
push
mov
push
jmp
aam
xchg
jp
mov
xchg
push
cmp
xchg
mov
mov
add
imul
ds
mov
movsl
repz
and
and
hlt
scas
cmp
pop
xchg
mov
and
add
xor
and
lods
mov
mov
push
jns
inc
add
inc
data16
inc
push
push
lods
shlb
jecxz
lret
sahf
cmc
jns
gs
mov
cmp
arpl
sub
add
addr16
xchg
pop
mov
adc
stc
mov
dec
sbb
sbb
sbb
cs
jl
mov
aam
cli
es
cmpsb
cmpsb
lcall
pop
jne
aam
or
xor
jno
sahf
insb
push
jbe
dec
test
mov
xchg
aas
mov
mov
lahf
in
fwait
int
mov
mov
mov
arpl
pop
pop
aaa
push
push
and
xchg
lret
inc
add
outsb
dec
stos
out
cmpsl
test
ljmp
int3
sub
add
daa
orl
xchg
adc
fistpll
test
mov
mov
inc
push
shl
out
xchg
popf
mov
addr16
pop
mov
loopne
jmp
in
dec
jl
xlat
push
push
mov
mov
mov
out
pushf
or
xor
cmp
sahf
jne
pop
je
dec
or
popa
hlt
jmp
dec
dec
dec
dec
hlt
jne
icebp
mov
xchg
repz
mov
or
sub
jl
out
inc
or
shl
sub
jecxz
fs
sti
and
fs
sub
aam
and
addr16
sub
inc
add
mov
xchg
popa
test
shl
sub
adcl
or
iret
jge
cli
ret
popa
test
mov
cmp
les
lahf
mov
shll
xchg
in
ja
xchg
lret
aad
mov
cmpsb
mov
jg
aas
cmp
imul
push
aaa
sbb
push
pop
psubusw
lcall
push
or
or
cld
inc
cmc
push
jg
cmc
mull
and
test
cmp
jno
xchg
mov
adc
js
push
pushf
mov
dec
into
mov
and
fsubrs
fdivr
lods
sahf
loope
mov
ds
in
xchg
out
pop
fsubl
pop
mov
es
out
jg
sbb
notl
rol
fsubs
cmpsl
sbb
sbb
pop
jle
jns
aam
icebp
xor
mov
enter
add
mov
mov
mov
int
add
push
gs
stc
mov
js
ss
cmpsl
push
lods
outsb
mov
mov
and
cltd
xor
dec
cmp
repnz
push
push
and
xor
stos
dec
addr16
ffreep
mov
or
sub
xlat
aam
int
pop
or
ds
xlat
pop
mov
jnp
aas
sub
sub
mov
mov
mov
adc
pop
ja,pt
push
mov
in
sub
shl
mov
lds
dec
lock
push
cmp
fildl
movsb
in
mov
cmpsl
push
pop
movsl
js
sbbl
rcr
cmp
mov
loop
stos
and
lahf
popf
int3
pop
sub
sarb
hlt
jo
insb
jns
cmp
clc
sti
sbb
fwait
push
cmp
cs
add
mov
pop
xchg
nop
test
pusha
aam
lret
loopne
or
push
inc
lcall
fisttps
mov
orl
push
mov
jbe
sbb
mov
jb
lret
dec
jmp
xchg
jns
add
scas
xchg
adc
push
ficomps
inc
jp
push
ret
xor
test
invd
jl
jecxz
pop
loope
in
sbb
inc
mov
fstl
xchg
xor
fcmovne
stc
jbe
pop
test
mov
lods
or
inc
xor
lock
pop
xor
add
push
xor
fsubl
scas
js
push
jmp
sub
fs
dec
xor
xchg
adc
insb
in
in
xor
in
or
movsb
lea
dec
cld
push
je
fwait
std
mov
jmp
pop
dec
mov
and
popf
test
adc
dec
aas
iret
cli
pop
push
mov
orb
cmp
pop
dec
xor
adc
rclb
movsb
mov
cld
mov
xor
push
inc
insl
cwtl
ret
int
adc
les
pop
pop
lock
adc
std
and
pop
mov
and
xor
test
fisttps
sti
nop
lret
or
sahf
outsb
lock
add
inc
rcr
cmp
push
iret
jb
and
aam
cmpsb
inc
sti
push
add
xor
pop
xchg
es
or
mov
xor
scas
insb
sbb
jns
rcl
fwait
rorb
std
cs
inc
mov
add
daa
add
push
std
push
jecxz
fwait
divb
mov
fldenv
cli
pop
push
cmp
notb
pop
std
int3
xor
mov
jo
push
les
mov
mov
sar
mov
mov
and
stos
cmc
add
cwtl
loop
inc
xchg
adc
mov
ss
lods
out
push
push
pop
cmp
test
inc
add
and
roll
xchg
mov
or
or
xchg
stos
test
loopne
popf
xchg
aas
xchg
ret
mov
or
scas
lds
addr16
out
icebp
pop
mov
push
bound
mov
iret
jb
sti
aas
and
adc
and
inc
xchg
xchg
jl
xor
mov
sbb
or
adc
dec
sbb
inc
sub
sub
outsl
aam
or
mov
imul
cld
dec
and
jae
fst
push
scas
dec
dec
inc
adc
cs
roll
jle
sarl
dec
and
stc
idivl
out
inc
fdivrl
mov
mov
inc
outsl
dec
pop
stc
subl
les
push
fidivl
pop
mov
outsb
mov
dec
rcr
cmpsb
sub
adc
fdivs
xor
mov
loopne
jmp
jno
sub
and
add
mov
hlt
clc
mov
or
inc
sbb
cmc
pop
scas
lea
outsb
loop
mov
insl
inc
push
imul
lret
leave
push
push
mov
pushf
dec
rcr
xchg
fiadds
push
loope
pop
add
daa
push
sbb
xor
aam
jnp
pop
adc
xchg
int3
cmp
outsb
xor
xchg
add
pop
mov
dec
mov
ss
mov
loope
push
add
loop
rcll
xchg
loop
lea
outsb
and
aad
outsb
dec
mov
jae
add
jnp
xchg
xor
mov
mov
and
adc
push
sbb
stc
incl
cmp
int
imulb
and
mov
lahf
jns
xor
push
mov
jno
mov
lods
sub
pop
xchg
add
imulb
xor
inc
int3
sub
or
mov
inc
xchg
aam
push
mov
out
jle
fists
repz
jae
mov
pop
adcl
mov
or
and
mov
and
xor
adc
aam
popa
dec
sbb
insb
pushf
or
sarb
stos
sti
mov
out
in
xlat
fbstp
mov
xor
daa
pop
clc
add
cmpsb
das
f2xm1
insl
out
or
loopne
push
outsb
push
imul
rcll
or
mov
adc
dec
pusha
mov
mov
daa
out
mov
jnp
jbe
rcll
enter
pop
fdiv
repnz
xchg
shrl
mov
xchg
dec
mov
xor
push
outsb
jp
mov
ja
lcall
jp
sub
outsb
pop
repz
add
cltd
mov
clc
aam
orb
or
adc
arpl
outsl
xchg
or
inc
jo
andb
mov
and
icebp
bound
push
rcrb
jnp
inc
test
subb
cmp
xchg
xchg
imul
aad
fwait
sub
mov
mov
inc
add
fadds
xchg
xor
shlb
dec
add
loope
jno
xor
hlt
mov
and
and
jl
hlt
xor
add
arpl
ss
pop
and
or
or
fucom
inc
fyl2x
push
mov
pushl
jmp
pop
adc
or
out
idivb
jns
hlt
add
insb
jmp
punpckhbw
cs
rcrb
xchg
push
and
ret
dec
jb
mov
jle
fs
fs
scas
inc
or
cli
mov
out
xchg
ljmp
repz
add
and
xchg
stos
fadds
lds
gs
cld
loope
push
in
pop
pop
sub
daa
sbb
orb
xchg
xor
dec
push
ret
jbe
call
fdivrl
fwait
lcall
or
ret
cmp
nop
push
orb
inc
pop
or
push
sbb
push
dec
dec
rcrl
pushf
lcall
js
pusha
aas
fildl
sub
dec
adc
aam
js
add
repz
inc
mov
add
ret
enter
ficoml
sbb
add
pop
jb
cmp
mov
aam
cmc
in
and
push
dec
andb
clc
fsubs
sub
loope
inc
mov
push
jge
sarl
or
sub
cmp
les
add
aam
sbb
jno
or
test
and
testl
lret
int3
daa
pop
mov
push
int
lret
adc
push
leave
add
rolb
nop
cmp
xor
pop
hlt
insb
hlt
out
jge
enter
orb
xchg
add
mov
in
in
sub
js
dec
mov
out
scas
in
adcl
adc
sub
xor
fnsave
mov
bound
push
outsb
and
adcl
loopne
xlat
mov
pop
icebp
or
push
cmp
mov
cltd
xchg
aad
jbe
fs
bound
repnz
rolb
pop
cltd
xchg
add
push
or
cmp
leave
out
out
frstor
testb
adc
into
add
data16
icebp
int
fidivrl
mov
ljmpw
repnz
mov
cld
inc
jns
lods
xor
jl
cmpsb
adc
sbb
lods
push
mov
movsl
sbb
mov
aad
cmp
jmp
ficoml
lea
lret
das
aam
ljmp
xor
xchg
jle
cwtl
testb
lahf
lahf
lock
subl
cmp
fisttps
mov
adc
jb
jmp
rorl
inc
mov
nop
sub
rol
mov
xchg
dec
adc
dec
imul
cltd
ret
cli
inc
jle
push
sbb
sbb
dec
adc
loopne
mov
cmp
dec
xchg
sub
popf
sub
in
das
jne
outsb
cmp
inc
jp
mov
cmp
cmp
jae
pop
pusha
sub
xchg
lock
arpl
mov
out
aaa
add
lret
xchg
fimuls
mov
adc
push
xchg
xor
lret
inc
push
call
pop
lret
cs
pop
hlt
adc
cmp
inc
jecxz
mov
sub
sar
shl
popa
pop
xor
add
stos
jo
mov
int
cmp
mov
xchg
sbb
cmpsl
popa
ja
cmp
mov
sti
sub
enter
xchg
fsubrl
test
jno
testl
mov
xlat
arpl
stos
sti
push
cs
xchg
sahf
adc
sub
mov
cmp
out
shl
xor
jecxz
rcl
mov
mov
mov
inc
sbb
sub
push
push
rcrl
jb
mov
pop
sub
or
or
xor
out
out
aam
test
dec
outsb
icebp
pop
insb
pop
ss
inc
push
fldenv
xchg
mov
incl
jl
std
icebp
call
test
pop
shlb
or
lds
jmp
fwait
and
jno
loope
imul
xchg
insl
iret
ljmp
mov
rcrl
je
inc
add
fistl
xchg
add
movsb
fdivrp
ret
mov
fnstsw
sub
push
push
cmp
sahf
loop
addb
dec
int3
jg
adc
or
out
mov
inc
sahf
out
jae
inc
mov
sub
aad
jns
shl
lds
orl
and
push
or
out
pop
sbb
andl
pusha
aas
lods
xor
mov
test
mov
cmp
dec
aas
mov
hlt
rcll
sub
sub
mov
xchg
popl
sbb
cmp
ss
les
mov
mov
outsl
cmp
xchg
dec
jno
pusha
jp
loop
or
add
shll
sbb
mov
stos
loop
sub
je
ds
jge
fildl
inc
mov
mov
aad
loop
cmp
iret
dec
cmp
or
setb
leave
ss
loopne
or
mov
mov
adc
cmpb
out
sub
mov
in
test
inc
aad
or
popf
orl
inc
leave
or
in
xchg
mov
pop
icebp
push
es
mov
sub
xlat
push
out
or
add
arpl
lret
lea
out
iret
ffree
outsb
or
sbb
jmp
int
in
mov
lret
bound
faddl
mov
sahf
xor
lcall
lcall
mov
adc
mov
or
test
lods
lods
push
and
mov
pop
insb
or
pop
es
jbe
std
fidivrl
pop
mov
int3
ljmp
int3
lods
cmpsb
xchg
xor
pop
or
mov
push
test
pop
xor
jmp
mov
lds
movsl
inc
cwtl
jns
lret
inc
cmpsl
lods
jl
outsl
sbb
addr16
jnp
mov
jl
and
out
add
jmp
jge
sub
sbb
push
and
out
sbb
push
mov
into
xchg
xchg
pmaxub
xchg
cmp
fwait
jmp
jne
mov
mov
adcb
in
stos
insb
dec
and
ljmp
jbe
leave
pop
mov
cwtl
sbb
fnstenv
popf
into
pop
xor
xor
cmpsl
outsl
mov
pop
jo
and
rcll
lods
xchg
stc
stc
jp
xor
outsb
add
mov
pop
iret
xchg
mov
cmp
pop
ret
add
fs
pusha
sarb
xor
adc
std
jb
cmpsl
sahf
dec
inc
insl
lret
aas
jnp
push
adc
insb
aad
imul
or
cmpl
rorl
mov
xchg
das
cli
cmp
mov
dec
xchg
mov
adc
jno
jg
jmp
mov
lcall
cmpl
adc
outsl
cmpsb
cmp
jmp
enter
mov
in
stos
fistps
fsubrs
lahf
inc
or
xor
ds
inc
sub
jae
add
and
ss
iret
push
mov
inc
lcall
in
mov
inc
mov
sbb
pop
or
jnp
in
daa
mov
mov
fildl
xor
mov
lds
test
xchg
adc
loopne
fcmovb
out
popa
mov
mov
loop
mov
adc
xor
mov
pop
imul
mov
pop
cmp
test
and
and
push
test
ss
xchg
push
adc
test
out
add
pop
popf
mov
ja
popf
popf
push
xchg
add
and
cltd
int
lret
xchg
dec
sbb
xor
jne
jne
mov
pop
frstor
dec
and
mov
sub
inc
push
sbb
popa
add
sub
sahf
cli
or
sbb
rcll
or
ret
cli
pop
jbe
inc
stos
jnp
push
cmpsb
dec
dec
add
mov
repnz
movsb
adc
cmp
lahf
aam
pop
jne
cmp
out
mov
js
inc
arpl
push
clc
cmp
xchg
push
mulb
jge
iret
xlat
sbb
mov
imul
inc
pop
xor
pop
cld
lret
add
pop
ljmp
mov
testl
xchg
jg
outsb
xchg
out
xchg
xchg
sarl
fsubrs
enter
cmp
ffree
iret
sbb
jns
fcmovb
jo
sub
jae
cmpps
push
cmc
xchg
push
cmpsb
mov
jnp
daa
or
jb
push
fwait
out
mov
lods
jmp
mov
arpl
xlat
imull
in
shll
sti
adc
mov
or
push
adc
xor
pop
push
jmp
lret
xchg
cld
push
sub
daa
int
mov
sti
cmp
mov
jnp
aad
fwait
shr
stos
push
loop
jp
sub
into
jecxz
pop
mov
or
mov
insl
ss
xor
scas
cld
mov
daa
adc
je
add
filds
mov
push
pop
dec
mov
dec
jbe
cltd
sbb
out
out
test
loope
sub
cwtl
call
inc
aam
xchg
xchg
push
cmp
pusha
pop
repnz
mov
inc
jnp
ds
js
iret
test
icebp
pop
repz
fdivrs
hlt
pusha
fildl
addl
mov
fsubrs
aas
shl
adc
sbb
aas
mov
mov
rol
pop
inc
jl
sahf
xchg
call
dec
mov
dec
in
jge
adc
push
and
jle
cmove
int3
sbb
into
hlt
test
stc
pop
or
jecxz
bound
dec
adc
jl
mulb
lahf
repnz
push
iret
mov
int
int3
pop
add
xchg
cmp
add
push
nop
ja
pop
cmp
add
popa
cmp
test
insl
add
pop
pop
sti
jmp
cmp
cmpl
into
xchg
mov
mov
mov
loop
jb
fwait
mov
pusha
lret
test
jle
stos
imul
idivb
popf
or
dec
faddl
jne
clc
pop
push
jmp
lods
jmp
sub
dec
fst
add
incb
push
arpl
lret
insb
push
push
mov
mov
and
push
push
jb
jg
push
fistpl
lods
rcrl
aad
inc
xor
jns
or
jg
mov
mov
dec
fbstp
jg
mov
mov
stc
cmp
mov
sti
js
fisttpl
inc
xchg
xchg
add
push
test
sbb
stos
les
mov
fidivs
stos
jne
pop
sub
clc
imul
cld
aad
jmp
or
sub
push
inc
or
xchg
sub
fldenv
or
out
or
imul
and
xchg
jo
es
or
mov
xor
dec
inc
sbb
jb
push
xchg
pop
inc
stc
mov
incl
pop
test
or
lahf
test
aam
test
and
add
sub
xchg
inc
jge
pop
dec
daa
imul
test
dec
sbb
fisttpl
pop
stos
adc
roll
and
and
fstl
sbb
cmp
fistpll
int
xchg
mov
sbb
mov
inc
movsl
popf
push
ljmp
clc
mov
mov
daa
pop
and
int3
xchg
xchg
jmp
mov
mov
pop
insl
aad
imul
lcall
mov
enter
out
int3
push
push
cmp
jecxz
jne
fimuls
mov
pop
arpl
push
xlat
or
push
lods
outsl
pop
lds
sarl
scas
cmp
pop
adc
jmp
pop
flds
sbb
dec
popf
lcall
mov
clc
js
and
rolb
lods
mov
jae
dec
dec
pusha
xor
inc
lea
dec
pextrw
out
scas
rorb
adc
and
rcrl
arpl
and
push
push
and
xchg
loopne
aad
shl
push
inc
adc
mov
lds
mov
jp
lods
in
sub
out
mov
xchg
dec
lds
shl
jp
lods
movsl
adc
inc
cmp
or
xor
fisttpll
and
inc
xor
jne
lds
or
movl
mov
cmc
adc
inc
aas
das
or
sub
rclb
adc
or
fs
push
scas
iret
push
xor
lea
je
push
adc
mov
and
xor
roll
test
and
mov
jecxz
xchg
xor
repz
scas
inc
subl
push
mov
es
push
push
cmp
cmp
nop
xchg
jno
std
xor
daa
incl
or
sub
sub
dec
jbe
inc
stos
push
lret
ss
push
jmp
sbb
or
cmp
sub
pop
cmpsb
dec
mov
xchg
fwait
mov
inc
stos
push
lret
ss
push
jmp
sbb
or
cmp
sub
pop
cmpsb
dec
mov
xchg
fwait
mov
mov
es
mov
push
jmp
sbb
idivb
sub
pop
cmpsb
dec
mov
xchg
lcall
push
lret
ss
push
jmp
sbb
or
sub
test
imul
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xchg
clc
test
mov
movsl
enter
mov
movb
xor
cmp
jne
or
fsubs
test
cwtl
in
adc
pop
and
sub
or
fsubs
test
cwtl
in
adc
cmp
ss
jge
jg
mov
cwtl
mov
int3
lods
fiaddl
xchg
inc
push
fwait
outsb
cs
aas
add
add
mov
pop
popf
out
int3
jns
jp
dec
mov
inc
aad
lds
test
cmpsl
ficompl
sub
and
out
sub
or
jo
inc
mov
imul
xchg
les
int
sahf
mov
nop
in
in
mov
add
insl
out
or
cmp
pop
xor
pop
lds
xor
inc
or
outsb
mov
or
dec
add
jo
call
pop
sar
dec
and
cmc
add
inc
insb
lds
push
js
sbb
push
clc
test
mov
movsl
enter
test
cwtl
in
adc
pop
and
sub
gs
lock
out
repz
jecxz
mov
stos
fcompl
or
inc
or
rorl
adc
insl
jecxz
icebp
test
nop
in
mov
mov
mov
mov
sbb
and
mov
repnz
shlb
cwtl
in
adc
pop
and
sub
or
fsubs
test
cwtl
in
adc
pop
and
sub
or
mov
syscall
dec
les
jmp
push
jl
icebp
xor
jnp
inc
int
cmp
xchg
ret
mov
decb
repz
cmp
add
xchg
mov
inc
pop
cmp
add
pop
into
adc
xchg
fldcw
callw
jp
pop
fdivrs
jl
jmp
rorb
add
loope
push
fwait
jge
out
and
inc
lahf
mov
repz
movsl
and
or
mov
lret
cli
pop
inc
rcrl
cld
scas
lds
data16
mov
aas
xor
or
and
mov
test
test
ret
mov
pop
dec
dec
mov
jg
xor
neg
xchg
adc
jle
idivl
sti
inc
daa
inc
or
inc
jnp
mov
inc
sub
and
xchg
shll
mov
and
test
jnp
ss
shll
xor
inc
aas
inc
dec
sbb
out
int
jne
pop
loopne
fwait
lds
data16
inc
mov
jbe
dec
or
insl
stc
add
loop
mov
ss
mov
pop
arpl
cmp
cmp
xchg
lods
mov
iret
gs
dec
pop
mov
adc
sarb
mov
push
rorl
mov
fs
lea
mov
roll
jns
mov
aad
xor
mov
hlt
and
mov
xchg
lods
push
lret
fidivrl
pop
adc
push
xchg
cmp
mov
dec
sub
mov
fistl
popf
cld
or
cli
add
mov
fcompp
enter
outsb
sub
jae
fs
mov
mov
ljmp
and
pop
outsl
jg
seta
push
jmp
add
jg
xchg
adc
add
mov
sbb
adc
xchg
lods
and
push
test
popf
cmpsb
pop
xor
dec
and
adc
xchg
xchg
daa
xchg
dec
xor
mov
sbb
lock
iret
sbb
lds
inc
xchg
out
mov
andb
push
dec
or
stos
mov
mov
xchg
sti
test
je
loopne
mov
add
jns
stc
aaa
lahf
push
ret
and
xchg
das
or
call
repnz
jle
and
or
insb
xchg
mov
jmp
fwait
inc
or
xor
js
lds
jl
cmp
cmp
jnp
outsl
cltd
xor
mov
mov
dec
mov
xlat
dec
mov
jne
mov
jbe
sbb
cmpb
lahf
push
sbb
jecxz
sbb
iret
cmp
push
and
test
cmp
or
repnz
shl
jb
mov
mov
ret
sti
pop
and
je
mov
aad
mov
adcb
dec
jl
jno
shrl
sbb
addr16
movsl
jne
outsb
cmp
mov
imul
push
mov
mov
mulb
cmp
lahf
lods
inc
mov
xor
ret
into
clc
mov
sbb
xchg
lcall
push
sub
sti
cwtl
pushf
lahf
fdivr
mov
cmp
mov
mov
maskmovq
popl
add
inc
adc
insl
or
movsb
sub
out
fcomps
sbb
repz
fsubrl
or
pop
jne
push
dec
rol
ljmp
ss
mov
push
mov
jae
dec
shl
adc
jo
and
xor
mov
mov
pop
mov
jb
sub
pop
push
cmp
aas
adc
into
sub
repz
mov
xchg
jbe
sbb
and
inc
fs
pop
sarb
mov
daa
mov
or
jbe
fnsave
shrb
repnz
xor
cwtl
sti
push
xor
adc
push
mov
ret
jecxz
sbb
xchg
adc
dec
add
mov
or
xor
pop
jae
lret
lret
pushl
push
dec
frstor
add
pop
sbb
pushf
arpl
mov
jge
pop
fucomp
jp
xchg
fldcw
pusha
fidivrs
ret
adc
vmulpd
sbb
testl
or
mov
xchg
insl
dec
push
cs
cmpsl
cli
jge
inc
push
pop
arpl
in
call
and
clc
in
xor
cltd
loop
lret
call
jge
and
dec
inc
out
pop
mov
je
idivb
inc
leave
fcomp
xchg
lahf
sub
vhsubps
test
mov
push
pop
sub
and
cmp
sub
fwait
mov
pop
pop
iret
cld
ljmp
ret
dec
xor
and
and
add
add
and
out
and
push
scas
dec
fists
mov
xchg
inc
mov
add
mov
icebp
mov
xor
jecxz
clc
mov
push
jno
std
repz
push
lcall
sbb
rcl
jnp
push
notb
mov
call
pop
in
mov
call
imul
or
push
lret
and
iret
add
sbb
lods
cs
outsl
lahf
xchg
adc
sar
adc
aad
lods
popa
lret
inc
cmp
fcoms
pop
fadds
aaa
ror
push
in
lahf
sub
int3
jp
sub
cltd
pop
pop
jno
inc
inc
sti
movsl
jnp
out
scas
mov
std
or
push
cmpsb
or
ja
shl
xchg
cltd
or
add
lret
shl
xchg
xlat
push
xor
add
hlt
xor
jp
jbe
xchg
xchg
jns
jne
mov
mov
inc
test
out
into
and
imul
xchg
das
xchg
and
mov
jl
mov
sar
lea
mov
lea
add
fsubl
xchg
pop
adc
stc
stos
or
jecxz
fstpt
scas
fcoml
push
icebp
dec
and
add
jno
xor
in
stc
push
mov
scas
push
mov
push
push
xchg
sub
inc
mov
popa
pop
mov
lcall
movzbl
or
mov
sahf
push
inc
pop
push
pop
leave
clc
loopne
les
lret
lret
dec
in
ret
or
sub
inc
jae
pop
adc
push
cmp
lds
mov
insb
das
mov
fldt
cmpsb
popf
jb
xor
rcrl
xchg
movsb
sub
sbb
repnz
cmp
cmp
xchg
ret
add
mov
orb
xor
xchg
es
or
cmpl
cmp
mov
dec
push
xchg
lret
xchg
ror
jns
dec
je
jo
mov
mov
pop
clc
fisttpll
fwait
adc
sub
and
aas
and
ret
fsubr
clc
sbb
lods
jge
push
inc
push
rcll
insb
jg
test
lret
pop
call
in
pop
fldt
jns
jns
stc
jge
add
lock
flds
arpl
mov
in
push
add
fsubr
jb
xlat
ljmp
cmp
lret
sbb
and
pop
jmp
jae
adc
fs
cli
xchg
fistpl
jp
jb
call
xchg
push
xchg
ljmp
jnp
neg
addr16
ljmp
mov
es
es
jns
dec
pop
push
frstor
xadd
jbe
shr
into
cmp
sti
mov
leave
fcompl
insl
or
push
add
dec
jns
inc
cld
pop
pop
sti
insl
xlat
push
inc
push
or
sti
lret
pop
cmpsb
pusha
hlt
sbb
movsb
xchg
sbb
xchg
andl
mov
leave
mov
movsb
xor
or
mov
pop
lea
xchg
sub
add
add
sub
xchg
pushf
sbb
call
adc
and
jo
cld
or
xor
push
cmc
jne
jmp
ret
fsubl
out
cwtl
lock
push
mov
sub
pop
lret
xor
or
inc
ror
cmp
fisubrl
mov
cld
shrl
push
scas
test
shrl
std
in
call
testl
les
loop
outsl
in
xor
or
mov
out
inc
enter
mov
lcall
sub
xlat
xlat
inc
js
out
int
sahf
repz
push
mov
mov
int3
cmpsl
dec
pop
icebp
mov
and
icebp
cwtl
jge
inc
inc
xchg
cmp
adc
pop
out
lods
shl
insb
out
jl
imul
sbb
sbb
xor
push
stc
mov
stc
mov
bswap
push
imul
ja
xor
pop
xchg
jo
and
sti
pop
or
nop
ficoms
or
mov
jp
idivb
test
iret
xor
cmpsl
insl
add
aad
cmpsb
inc
mov
push
cmp
pop
mov
inc
mov
xor
cmp
sub
push
mov
frstor
stos
pop
fbstp
cld
cmp
push
cmp
out
sbb
mov
xor
int3
insb
loop
mov
call
mov
adc
fucomp
sub
int3
jg
aam
xor
sbb
rorl
pop
xchg
ja
and
scas
xchg
inc
mov
xor
in
int
jecxz
loope
jb
mov
jmp
sbb
push
mov
xchg
xchg
lret
xor
imul
loope
cmpsb
rclb
cmp
cmpsb
push
mov
mov
lcall
dec
mov
push
rcll
fstl
sbb
or
sub
into
fldcw
cwtl
mov
lahf
jle
and
shrb
call
xchg
pop
push
adc
pop
lahf
pop
pushl
dec
lods
movsb
adc
pop
pop
xchg
adcb
mov
sub
add
or
rcrl
std
mov
adc
mov
sbb
test
les
mov
adc
lcall
daa
pusha
fdivrl
xchg
jb
mov
xchg
lret
test
mov
mov
outsb
add
push
xchg
cwtl
testb
popf
mov
fcmovbe
decb
aas
rcl
loope
cld
push
pop
fdivrl
pop
fwait
push
mov
repz
push
icebp
mov
aaa
rclb
movsb
arpl
mov
aad
and
stos
cmp
mov
cmp
cmpsb
mov
inc
addb
loop
ds
pop
bound
xchg
cmc
mov
ficoms
sbb
sub
leave
rcrb
inc
pop
adc
je
andb
pushf
std
nop
push
jne
jb
cmp
inc
jle
popf
sub
leave
outsl
subb
inc
loope
pop
lret
fdivl
jae
push
inc
or
lock
mull
dec
fimull
aam
sbb
data16
inc
aas
mov
loop
stos
cmp
cmp
pop
adc
call
addr16
and
addr16
cwtl
push
mov
lds
outsb
les
xor
adc
lock
loope
add
adc
les
loopne
iret
nop
hlt
or
mov
lock
mov
xchg
test
adc
xlat
ss
pushf
cmp
pushf
lods
push
movsb
cmp
push
xorb
add
imul
push
das
mov
pop
cmp
xor
int
pop
sbb
add
test
dec
lahf
add
jmp
pop
mov
mov
mov
cmp
sbb
jp
jae
sbb
arpl
cmp
loope
aad
das
lahf
js
dec
pop
adcb
cmp
loop
sbb
or
inc
push
in
in
insb
xchg
cwtl
sbb
pop
lods
mov
mov
nop
jle
xor
cltd
jl
sub
sub
jp
jle
data16
cld
inc
cltd
cwtl
adc
out
into
xlat
hlt
inc
stc
jnp
dec
lret
mov
jno
enter
xlat
cmp
scas
inc
cmpsl
pop
pop
stc
inc
sub
xor
es
pop
sti
push
ret
push
leave
fldenv
mov
sbb
movsl
sahf
in
push
push
xor
insl
add
scas
xor
jo
loope
fcompl
adc
inc
int
inc
adc
imul
jge
sub
popa
mov
out
sbb
hlt
fsubrl
xchg
das
mov
test
jecxz
sbb
dec
inc
mov
mov
inc
add
hlt
inc
xchg
aad
cwtl
add
mov
data16
js
pop
and
aad
mov
sbb
nop
arpl
xlat
clc
mov
mov
lret
push
clc
cmpsl
hlt
loope
mov
repnz
inc
xlat
cld
sbb
inc
aaa
mov
js
repnz
sub
push
xchg
jp
clc
inc
imul
jecxz
mov
or
into
inc
loopne
and
cmp
in
sti
aad
bsr
add
mov
in
test
jle
lea
jb
mov
xorl
mov
pop
push
jge
daa
adc
or
cmp
into
jg,pt
arpl
mov
outsb
sbb
push
popa
push
mov
or
stc
pop
nop
gs
sbb
arpl
imul
ss
lahf
test
push
sbb
jecxz
inc
mov
jbe
inc
xchg
pop
sbb
shlb
cltd
ja
filds
movsl
push
push
push
lcall
lods
pop
jno
and
xor
pop
or
mov
lds
mov
inc
jae
fcoml
dec
cmp
jp
mov
daa
imul
jp
adc
xchg
leave
fcompl
sahf
scas
lods
inc
mov
pop
mov
bound
das
xor
aad
pop
and
orl
adc
inc
fdivs
xchg
pop
add
out
lret
xchg
scas
and
xor
iret
or
pop
orb
xchg
xchg
in
leave
inc
xor
dec
lret
ret
pop
aad
or
sub
mov
sti
and
imul
daa
cli
adc
or
or
clc
add
add
or
imul
sbb
clc
mov
lea
xchg
gs
or
test
into
into
aaa
mov
jp
inc
fld
mov
testl
mov
mov
scas
addr16
dec
rcll
xor
push
xchg
bound
notl
and
sbb
mov
daa
cld
sahf
pop
fld
xchg
inc
aas
bound
icebp
in
bound
inc
fcmove
idiv
sbb
xchg
inc
push
cmp
xchg
mov
nop
jo
sub
add
shl
inc
mov
mov
outsb
cmc
add
mov
fmuls
push
mov
jno
adc
jg
imul
mov
fcoml
cwtl
dec
mov
jle
int
lods
lret
shrb
fwait
mov
es
jle
jge
pop
lods
inc
or
clc
jo
imull
scas
or
sub
xchg
ret
in
mov
adc
jno
pop
mov
jp
inc
cmpb
fstp
cmp
jne
fwait
test
dec
cmp
mov
push
cmpsl
dec
repz
push
nop
or
sbb
fnsave
fmuls
mov
dec
stos
aam
and
loop
push
repz
aaa
repz
jge
xchg
stos
movsb
sub
popf
movsl
dec
mov
pushf
pop
cmp
inc
adc
mov
cmpsb
jns
loope
inc
jecxz
cmpsl
dec
andl
mov
inc
xchg
fldcw
pushf
cmp
sub
cmp
add
add
pop
mov
push
mov
adc
mov
addr16
xchg
mov
cmp
stos
cli
cmpsl
dec
xchg
jg
mov
mov
in
sbb
adc
shlb
dec
inc
xchg
test
push
popf
sub
add
jo
test
arpl
push
cmc
mov
inc
das
xchg
aad
popf
popf
ss
test
jnp
pushf
cld
or
sub
lret
jae
pop
push
fs
inc
sbb
fstl
sub
loopne
xchg
sahf
push
loop
test
or
movsl
push
jno
sbb
adc
mov
fs
or
stos
push
sub
test
gs
rorb
mov
cmp
xor
add
dec
mov
xor
add
xchg
stos
and
push
cli
sub
mov
orb
pop
adc
adc
inc
mov
push
addb
or
imul
dec
sbb
aam
fwait
sub
pop
rcrb
mov
ja
sub
and
push
xchg
pop
das
stos
in
add
call
xchg
daa
arpl
mov
xor
add
loope
lods
leave
lods
loop
mov
cmp
jb
push
es
js
add
adc
mov
mov
sar
xchg
lock
stos
sarl
push
imul
scas
mov
dec
mov
scas
and
aas
bound
push
sbb
jp
or
ret
loop
rol
fwait
and
in
push
mov
jmp
push
in
imulb
inc
mov
add
ret
lcall
cld
mov
js
and
loopne
sbb
cmp
roll
lods
repz
push
dec
jg
push
xor
divb
out
and
ret
lcall
and
fisubrs
xor
inc
cli
push
xor
jo
mov
scas
sub
pop
pop
jo
push
pop
sahf
dec
cmp
mov
into
adc
mov
sub
pop
xor
mov
out
repz
ret
ss
fisttpll
mov
and
push
hlt
stc
mov
sub
ja
das
inc
scas
and
and
xor
pop
adc
mov
pop
insb
pop
jecxz
sti
push
mov
mov
mov
jle
loop
mov
xchg
cmp
mov
shlb
xchg
fs
push
lds
int3
out
jns
repnz
cmp
ds
mov
cmp
mov
mov
xchg
aad
aas
and
addr16
movsl
mov
xor
add
das
inc
inc
in
dec
out
das
mov
dec
cmpps
adc
push
inc
sub
nop
leave
insl
ss
sbb
cli
faddl
jbe
lds
movsb
test
fisubrl
daa
mov
mov
lahf
and
sbb
cmp
xor
fiadds
hlt
fcoml
pusha
outsl
sub
rcr
data16
fisttpl
jnp
jp
hlt
jmp
or
jnp
jl
cmp
int3
movhps
jg
mov
push
or
out
xor
arpl
into
inc
jne
stc
or
inc
inc
xchg
ret
into
mov
jp
aaa
mov
into
ljmp
xor
movsb
add
jo
mov
ret
cmpsb
cmp
out
jno,pt
aam
sub
popf
repnz
adc
popl
mov
push
mov
sbb
negl
mov
in
xchg
adc
bound
nop
shll
adc
inc
mov
push
aad
inc
xchg
loopne
imul
pop
cmpb
pop
aad
push
ret
dec
clc
sbb
pusha
sub
sub
dec
cmpl
repz
and
pop
mov
fistpll
movsb
out
lret
in
mov
mov
cmpsl
sbb
shlb
push
loopne
mov
gs
repz
inc
and
mov
xor
push
dec
push
loope
pushf
sahf
icebp
insb
pop
push
add
fsts
mov
dec
cmp
test
ret
xorl
repnz
out
add
pusha
dec
cmp
sub
push
push
cwtl
cwtl
sti
dec
js
dec
mov
xor
mov
lcall
and
mov
sub
pop
pop
push
movsl
fsubrs
or
add
xchg
mov
in
push
mov
cmp
push
mov
jecxz
push
aas
enter
xchg
ss
ret
and
pop
mov
adc
and
jae
mov
jecxz
js
xchg
arpl
sahf
dec
cmp
or
mov
outsl
inc
add
js
icebp
sbb
mov
or
push
out
adc
mov
dec
imul
or
adc
les
in
icebp
subl
ret
punpcklwd
mov
dec
cmpsb
or
loope
into
cmp
cmpsb
out
inc
or
enter
xchg
cmp
jae
cmp
or
leave
dec
adc
mov
cmc
mov
mov
xor
lret
pop
lahf
cmpb
sbb
divb
inc
and
sarl
jb
mov
jne
js
push
or
jmp
mov
mov
xor
mov
and
icebp
jo
or
outsb
mov
inc
nop
in
pop
jmp
or
mulb
pushf
test
mov
mov
aam
add
sbb
pop
pop
jl
les
add
mov
jmp
cmp
leave
scas
push
or
cwtl
add
mov
stos
and
shll
int
push
push
sti
shrl
rolb
aas
dec
fnstsw
mov
repz
out
sub
mov
add
add
cld
add
jle
jge
mov
imul
call
lret
out
and
jbe
lea
shrb
push
mov
xchg
lret
xchg
xlat
nop
ds
mov
or
inc
push
jo
xchg
sbbb
test
add
pop
lds
aaa
movsb
mov
inc
ljmp
push
jmp
push
sub
mov
adc
into
test
iret
cltd
adc
cld
inc
jne
xchg
push
ds
rcl
inc
sahf
or
fwait
push
jbe
cltd
pop
fiadds
aaa
sbb
inc
aaa
out
and
xchg
das
adc
rcl
dec
xlat
shll
sub
not
cli
mull
mov
cmp
and
repz
mov
xor
and
adc
cmp
les
in
push
sbb
lret
cmpsl
popf
imul
adc
push
ret
lret
sbb
jl
aad
shrl
lret
out
filds
aad
gs
xor
repnz
ja
sbb
sbb
sbb
xchg
lea
cmp
mov
mov
and
add
shr
jns
xchg
js
mov
mov
sbb
jl
ljmp
ss
movsl
mov
in
push
ljmp
cmp
xlat
xchg
mov
nopl
cld
in
mov
add
push
jecxz
adc
aad
sbb
es
int3
jnp
loop
pop
or
cltd
jns
cmp
stos
sbb
mov
in
stc
cmp
jle
or
movl
inc
clc
sub
fld1
mov
movsl
enter
test
cwtl
in
adc
pop
and
sub
or
fsubs
test
cwtl
in
adc
pop
and
sub
or
fsubs
test
cwtl
in
adc
add
dec
push
cmp
je
or
fsubs
test
cwtl
gs
ljmp
aas
and
popf
test
sub
jnp
dec
sbb
jg
push
sub
cmp
test
lret
cltd
fucomi
stos
stc
sti
leave
mov
fwait
sub
jnp
dec
sbb
sub
dec
or
test
lret
cltd
fucomi
stos
stc
mov
sub
jnp
dec
sbb
sub
dec
or
test
mov
lcall
imul
jp
imul
or
scas
inc
lret
lret
lods
jmp
push
mov
pop
xchg
movsb
inc
sar
les
scas
adc
xchg
fwait
add
sbb
push
imul
enter
sarl
lods
sarl
xor
mov
test
into
repz
jo
lods
je
lcall
cwtl
dec
imul
xor
fsubrs
and
clc
xchg
jmp
jne
mov
arpl
jb
dec
hlt
pop
dec
mov
aaa
adc
fs
sub
add
xchg
loopne
cmp
adc
ljmp
clc
dec
leave
sahf
mov
ja
cmp
dec
sbb
sub
dec
or
test
lret
cltd
fucomi
stos
stc
mov
outsl
push
push
test
or
xor
outsb
sbb
xchg
mov
nop
ret
sub
dec
xor
jl
das
dec
adc
sbb
scas
mov
mov
les
cmc
inc
cmp
pusha
aas
sbb
imul
sbb
lret
cltd
fucomi
stos
stc
mov
sub
jnp
dec
sbb
sub
dec
or
test
lret
cltd
fucomi
stos
stc
mov
sub
outsb
mov
cmp
lock
dec
fimull
and
lea
inc
ja
pop
leave
xlat
dec
pusha
in
jg
push
es
dec
inc
sub
cmp
shlb
movsb
movl
scas
mov
and
push
insl
or
dec
push
adc
in
mov
dec
cltd
rolb
add
ret
stos
jmp
push
out
cwtl
out
lret
push
not
lock
pop
jb
xlat
inc
icebp
inc
mov
cmp
or
xchg
xchg
or
sti
dec
addr16
sub
out
dec
test
data16
mov
gs
loop
mov
les
cmp
mov
xchg
call
ja
jp
mov
xchg
mov
mov
sub
movsl
lahf
fs
jb
jge
jp
rcl
push
push
and
dec
or
mov
lock
out
out
aam
daa
jmp
add
push
cmp
ret
ja
mov
inc
bound
or
mov
sbb
or
cmp
add
xor
xor
mov
ret
lcall
push
mov
shlb
mov
lret
jb
adc
cmp
mov
test
cs
xchg
sti
hlt
xchg
sub
imul
cmp
js
pop
les
insb
out
mov
jp
sti
sub
sbb
std
or
push
and
iret
cmc
xor
mov
popa
std
mov
repz
pop
mov
les
out
int3
mov
push
fwait
push
icebp
pop
fidivs
add
push
movsl
lret
push
cld
cld
lods
cmpsb
out
bound
sbb
xchg
push
loopne
pop
push
repnz
xor
dec
repz
cmpsb
add
out
movsb
mov
popa
lock
hlt
into
inc
test
stos
jmp
in
xor
lahf
fdivrl
sub
popf
push
out
cmpsb
push
mov
inc
xchg
jns
stos
insl
iret
aaa
mull
inc
lea
out
cli
mov
daa
jmp
push
inc
sub
adc
mov
adc
dec
bound
mov
adc
sub
mov
stos
adc
pusha
ljmp
loope
push
push
cld
or
mov
int3
mov
aas
dec
xor
sub
adc
cmpsb
xchg
repz
jo
sub
mov
stos
call
add
xor
jns
rorl
ds
icebp
out
and
pusha
icebp
sub
fstpt
push
jns
movsl
xor
sub
adcb
cmp
imul
pop
int3
dec
dec
inc
imul
lods
mov
xchg
stc
xor
ljmp
fistpll
xlat
cli
pushf
enter
cld
test
mov
xlat
adc
negb
push
outsl
fmull
mov
push
pop
outsb
jmp
mov
and
inc
scas
fstpt
sar
push
lret
push
xor
sbb
jmp
xor
aaa
insl
enter
popa
sbbl
mov
mov
fcmovnu
mov
dec
push
je
xchg
inc
js
outsl
pop
loope
sbb
repnz
dec
ljmp
jae
or
or
dec
inc
jo
mov
mov
inc
xor
adc
fwait
mov
push
and
out
xor
cmp
punpckhbw
andb
call
jecxz
inc
xchg
sub
pop
push
inc
mov
bound
sbb
mov
pop
hlt
aas
xor
jmp
test
jns
pop
nop
cmpsl
sub
sbb
mov
or
out
cld
add
mov
mov
push
test
cmpsl
pop
mov
popf
leave
loop
jge
ror
aad
pusha
in
pushf
jmp
push
repz
mov
data16
mov
call
pop
xchg
setae
mov
cmp
ljmp
lret
push
cmp
aas
stos
imul
rcrb
mov
inc
pop
int3
push
sub
mov
inc
push
sub
adc
push
out
xchg
dec
movsl
aaa
les
test
add
jb
ss
xchg
out
das
cmpsl
mov
lods
adc
push
ds
shll
lret
add
mov
arpl
mov
mov
xor
sbb
push
rol
mov
or
cmp
lds
and
pop
add
call
iret
lods
inc
clc
pop
and
fsts
add
jae
test
cmpsl
test
popf
je
jp
push
lahf
pop
int3
mov
sbb
push
xchg
jl
add
fnsave
je
or
mov
mov
sbbl
icebp
movl
mov
mov
mull
or
mov
jecxz
inc
cli
insl
cs
outsl
rcl
xlat
gs
or
and
imul
pop
pop
lea
sarl
scas
das
jl
ljmp
mov
cmpsl
out
and
sbb
pop
imul
sarl
nop
movsb
or
pop
push
leave
inc
or
cmp
cmpsb
fwait
push
scas
repnz
int
dec
shlb
fmulp
pop
inc
adc
cwtl
mov
popf
jmp
cs
dec
orb
jne
lods
test
mov
out
mov
js
or
js
mov
mov
jmp
stc
lea
pop
lret
cmp
insl
jecxz
mov
or
mov
ret
lea
mov
sbb
rclb
cltd
add
mov
stos
xor
mov
sbb
test
inc
loop
mov
sarl
into
push
fbstp
jnp
lds
push
addr16
pop
insl
sbb
pusha
cmp
mov
cmp
rcrl
popa
add
stc
cmp
adc
add
fnsetpm(287
pop
mov
jno
mov
test
js
mov
aad
sbb
cmc
mov
cld
pop
shlb
mov
mov
test
xchg
arpl
repz
insb
aaa
or
add
push
fidivs
test
or
xchg
mov
mov
pushf
pop
sahf
nop
jno
xchg
and
nop
nop
shr
mov
or
sbb
jle
xor
push
mov
in
xlat
lds
hlt
mov
cli
mov
mov
dec
dec
mov
xchg
inc
lock
in
push
mov
jae
mov
inc
mov
xor
pop
mov
int3
xor
mov
loopne
jle
mov
fwait
sub
int3
or
push
push
push
shlb
test
xor
pushf
sbb
push
mov
or
mov
pop
add
andl
movsl
xchg
xchg
sub
jg
jmp
imulb
or
cmp
cmp
pop
xlat
frstor
or
addr16
mov
aaa
xchg
lahf
mov
inc
push
pop
xlat
loop
pop
icebp
pop
sbbl
je
mov
sub
call
cli
enter
decb
lea
push
roll
clc
mov
jno
sbb
mov
xchg
ljmp
jbe
imul
push
mov
push
mov
shll
jno
adc
xchg
out
cli
cmp
insl
iret
inc
xor
sbbl
movsl
decb
xor
test
pop
xchg
lods
inc
and
push
idivb
lret
xor
loop
pop
lods
into
cltd
sub
adc
mov
stos
sti
fstpt
aad
ss
enter
jo
sub
adc
loop
lods
xorb
test
lods
addr16
sbb
std
pop
into
mov
movsl
sbb
stos
test
mov
loopne
sub
rcrb
repnz
cmp
sub
add
push
mov
pop
or
xchg
mov
scas
or
outsl
pop
mov
add
ss
xchg
cmp
add
jo
ret
ljmp
into
dec
pop
add
mov
push
dec
mov
pop
stc
iret
mov
sub
mov
fcoml
pusha
leave
out
jno
pop
mov
push
add
dec
push
imul
sbb
aam
test
mov
popa
pushf
or
xchg
sbb
xchg
imul
outsb
aaa
pop
data16
loop
sbb
shll
cltd
std
sub
cld
or
xchg
fs
inc
jge
and
dec
xchg
push
xchg
pop
push
leave
sub
push
popf
push
xchg
add
pop
clc
xor
scas
ds
cmp
inc
sbb
adc
test
push
bsr
add
cmp
gs
repz
pop
mov
ljmp
mov
mov
mov
mov
ljmp
addr16
lret
nop
lods
cmpsl
test
les
mov
arpl
mov
jns
fdiv
sub
out
cs
addr16
jne
sub
fidivs
loopne
cmp
jle
pop
lret
fwait
test
or
jns
xchg
mov
jl
and
pushf
dec
cmpsl
xlat
sub
mov
lea
int3
testl
ja
cmc
mov
test
xchg
outsb
mov
out
dec
iret
fwait
adc
push
scas
push
inc
repnz
popf
dec
bound
repz
xchg
sub
mov
fstpt
adc
dec
leave
lock
cmc
add
xchg
aam
stos
xchg
ss
out
rcl
leave
mul
cltd
cmp
icebp
dec
push
enter
pop
mov
cli
add
pop
and
insl
mov
sub
daa
jae
xor
dec
or
cmp
pushf
neg
xor
call
push
dec
add
pop
std
adc
pop
push
cmc
jno
call
imul
cwtl
xchg
sub
inc
cmpb
mov
adc
test
inc
mov
push
or
adc
loope
jl
jae
sub
cs
cmp
and
fisttpll
xchg
xor
or
fnstsw
or
dec
xor
jb
pop
ds
adc
xchg
add
jae
insb
sahf
sarb
cmp
and
mov
mov
pop
sti
divb
lds
sub
cmp
mov
leave
xor
mov
mov
loopne
sahf
push
sub
call
test
sbbl
push
cmp
cli
roll
or
in
inc
scas
rcl
aaa
daa
xchg
fldt
mov
in
inc
mov
cltd
xlat
push
cmp
test
or
adc
jne
out
pop
filds
das
inc
sbb
sub
jecxz
test
jns
js
popf
push
mov
xchg
jns
xlat
xorb
cmpsb
scas
daa
mov
mov
in
push
stos
cmc
sub
cmpl
ljmp
mov
jp
inc
sbb
jne
nop
mov
sbb
jle
out
push
pop
mov
sbb
mov
in
mov
stos
xchg
mov
and
roll
pop
dec
xchg
ret
xor
test
xorb
sbb
ss
xor
push
jns
add
mov
fs
dec
sbb
hlt
fisubl
mov
cmp
or
outsb
xor
jae
mov
sub
jp
or
lret
arpl
call
push
and
shlb
sub
std
xor
loopne
imul
mov
ja
jb
shl
xor
jecxz
frstor
mov
clc
negb
loope
mov
mov
in
mov
stos
les
inc
idivl
or
arpl
cli
xor
push
cmc
cltd
sbb
mov
or
jmp
ret
ror
or
cwtl
cmp
push
shrb
into
mov
inc
mov
jmp
aad
pop
xchg
jmp
jge
cmp
rorb
into
stos
jae
jno
adc
lods
dec
arpl
pusha
xchg
ficoml
sub
cmp
mov
cmp
daa
rclb
les
jae
dec
and
jns
loop
popl
insb
mov
cmp
nop
imul
mov
nop
imul
jmp
push
loop
clc
xchg
aam
stos
aas
fdivrp
aam
pop
outsb
add
mov
jno
fnstenv
ret
bound
iret
adc
mov
jmp
sahf
ja
in
rcl
adc
xchg
xchg
dec
les
out
arpl
xor
outsl
repz
loop
xchg
cmp
or
adcl
and
std
sbb
in
roll
ret
jg
scas
xor
xchg
push
jmp
sub
cwtl
lret
xchg
pusha
fdivs
lahf
cmc
lret
in
inc
aaa
mov
imul
icebp
push
je
fisubl
in
sub
xchg
leave
ljmp
iret
dec
push
pop
mov
movsl
lods
movsb
cmp
ljmp
loope
push
stos
add
aam
mov
sbb
push
pushf
sub
and
clc
cld
cmpsb
cwtl
cmpsl
shll
add
out
shlb
push
test
and
sti
and
xorb
mov
push
bound
arpl
ljmp
inc
psubd
imul
add
xchg
and
rcrl
scas
cmpsl
xchg
cmp
jmp
es
push
mov
mov
pop
movsb
mov
xlat
or
sbb
repnz
jae
in
fdivl
xchg
mov
ds
das
cwtl
mov
addr16
cmpsl
add
outsl
xchg
shr
loope
jecxz
gs
add
pop
ja
aam
xor
push
dec
dec
jo
jns
jmp
fists
out
mov
loope
xor
je
lods
cmp
mov
arpl
daa
inc
orl
xchg
ja
outsl
cmp
cltd
jb
mov
sti
cld
jle
jnp
push
aam
iret
cmc
jo
dec
aad
dec
add
push
pop
ret
adcb
sbb
sub
out
ficoms
inc
lds
sbb
loopne
sub
dec
xor
sbb
sub
orb
lea
pushf
cmpsl
leave
sbb
push
xchg
loope
aad
mov
jmp
xor
cmp
sbb
stos
push
cmp
repz
pop
mov
xchg
xchg
cld
aam
int3
rcrb
scas
push
adc
out
and
js
jle
sbb
adc
pop
dec
divl
fnsave
scas
and
inc
add
ja
mov
mov
add
xor
test
arpl
nop
mov
add
pop
fs
and
sbb
sbb
sti
and
les
out
roll
or
lods
lods
cli
adc
mov
xor
push
sbb
int3
mov
das
cmpsl
mov
ret
cmpsb
arpl
mov
icebp
nop
adc
scas
cwtl
push
sub
mov
idiv
sbb
sbb
xor
cli
sbb
std
ret
decb
jb
hlt
inc
xor
test
pop
nop
add
into
cmc
or
pop
push
sbb
sub
push
jmp
adc
or
loopne
mov
out
sbb
loop
in
cmp
sub
shrl
addr16
push
mov
sbb
dec
cmpsl
push
addr16
out
stos
out
xor
sub
das
or
fistpl
daa
add
das
lods
sub
sbb
out
cmc
mov
pop
outsb
mov
xor
hlt
sbb
fdivl
adc
lahf
lods
adc
enter
fisubrs
lds
scas
dec
cli
push
cld
out
icebp
imul
test
inc
sbb
dec
xchg
inc
add
inc
or
or
mov
cltd
xor
inc
sbb
lds
into
andl
stos
push
xor
cmp
cld
push
pop
mov
movsb
adc
mov
fistps
inc
jl
xchg
add
pop
push
call
jl
sbb
sub
decb
jmp
push
outsl
out
aad
jb
std
sarb
dec
sti
int3
andl
jmp
ret
pop
or
push
rcr
xor
adc
fisubrs
scas
iret
adc
mov
adc
push
adc
pop
xor
sub
lods
and
repnz
mov
in
out
pop
push
cmp
ret
imulb
fs
push
out
push
xchg
fbld
xchg
fcmove
int3
cli
xor
aas
cmpb
movsl
xchg
ss
and
out
fistps
mov
pop
dec
adc
in
mov
mov
aad
popa
inc
fdiv
pop
daa
or
pop
std
push
add
sahf
xor
les
pop
inc
ret
or
push
xor
shlb
jae
mov
enter
pop
fdivrs
fisttps
inc
sub
fcoml
shrl
sarb
stos
xchg
mov
mov
jnp
sub
out
xor
jne
pusha
pop
lcall
dec
xor
xchg
ljmp
xchg
xlat
add
ret
sbb
ds
addr16
rolb
js
mov
icebp
jg
inc
inc
movsb
loope
es
jle
or
ret
xor
fisubl
cmc
gs
pop
or
repz
lcall
add
cmc
cmc
add
xchg
lock
fmuls
mov
or
and
adc
in
jg
cmpsl
arpl
int
dec
sub
push
cwtl
and
sub
cmpsb
jae
jp
push
imul
push
xchg
notb
push
out
arpl
xchg
test
cmp
xchg
dec
jmp
adc
or
lret
xchg
dec
scas
xor
fsubs
mov
xchg
push
inc
sub
sti
es
push
mov
pop
cmc
inc
repz
sbb
insb
int3
fs
addr16
add
mov
dec
in
int
inc
lea
inc
xor
inc
cli
sbb
fcmove
repz
lock
cmp
daa
int
xchg
in
inc
jmp
mov
pusha
jno
jne
movsl
xchg
jge
pusha
loope
adc
pop
loop
and
stos
pop
mov
ficompl
out
mov
out
lock
and
dec
sti
adc
push
jb
jo
testb
or
jne
dec
push
pop
inc
inc
push
insl
arpl
pop
or
cmp
cmc
in
sub
sbb
insb
push
rolb
out
adc
lahf
outsl
mov
clc
xor
aas
pop
ja
rcl
dec
jmp
in
mov
mov
cmp
pusha
mov
rcrb
push
loop
add
aas
jecxz
stos
fcmovnbe
and
sub
fxch
lds
subl
lcall
jb
jnp
xor
fs
dec
ds
stos
imul
pop
jle
adc
cmpsl
lods
mov
inc
lds
inc
lcall
mov
mov
lret
cmpsl
daa
lret
jecxz
aas
add
gs
add
jg
into
movsb
fisubl
subl
ret
push
pop
fidivs
test
sub
dec
sub
xor
leave
cmp
xchg
imulb
sbb
mov
nop
pop
add
add
cmpsl
test
and
xor
adc
cmp
sti
add
sbb
sub
or
inc
xorb
pop
sub
pop
lods
or
xor
cmp
jl
ss
insl
js
mov
imul
lcall
ds
xor
xorb
and
inc
pop
data16
and
sub
sub
pop
rcll
push
pop
push
xchg
mov
lds
cmp
pop
and
pop
stos
jno
add
xlat
sbb
mov
mov
xchg
pushf
outsl
cmp
push
das
sub
loopne
arpl
xchg
xchg
xor
aaa
in
stos
cmc
das
into
fisubs
pushl
lds
cmp
dec
xor
lahf
out
jo
in
outsb
pop
jnp
cmc
pusha
add
xchg
mov
iret
std
aam
xor
and
or
cli
sbb
sahf
inc
pusha
jmp
lock
enter
jle
aaa
or
push
and
push
daa
fnstcw
clc
and
mov
dec
xor
gs
sbbl
lds
movsb
pop
pop
sbb
into
or
cmpsb
push
sbb
dec
mov
mov
mov
mov
cs
add
xchg
push
cmpsl
or
out
cli
or
cmp
js
xchg
mov
push
add
pop
or
test
push
xchg
aaa
imul
jae
xor
ja
mov
stc
xor
push
fwait
data16
push
aad
xor
sub
mov
popa
fisttps
cmp
or
in
sbb
sbb
push
js
and
pop
xor
lods
xor
xor
sbb
sub
pop
sbb
push
mov
pop
int3
cmp
daa
push
push
mov
notb
subl
test
or
pop
sub
adc
fimuls
cmp
scas
jl
hlt
xchg
pusha
sahf
xchg
sub
leave
jl
sti
dec
pop
sbb
pop
inc
push
add
addb
lods
jns
cmp
mov
xlat
jmp
sbb
push
xchg
xchg
fldenv
lods
sub
test
pop
and
sbb
repnz
dec
sarl
lock
popa
pusha
aas
dec
pusha
push
sbb
test
inc
mov
call
lock
inc
xor
daa
pop
cmpsb
mov
mov
movsb
add
add
jl
pop
xchg
push
inc
lock
push
cmpsl
xor
sbb
inc
mov
push
xchg
xchg
adc
mov
and
push
push
and
and
inc
ljmp
mov
cmp
add
add
pop
adc
insl
mov
lahf
daa
add
rcll
xor
sbb
pop
lahf
mov
inc
lret
daa
rcrb
jl
outsl
shll
adcb
in
dec
sbb
pop
mov
cmpsb
pop
xor
outsl
lock
inc
das
test
xor
movsl
jmp
cli
ljmp
ret
and
pop
jmp
push
daa
sub
ljmp
out
push
and
mov
or
insb
sbb
hlt
ljmp
jns
push
add
divl
je
test
ja
jb
adc
mov
sbb
ret
pop
mov
in
jns
out
push
into
sar
stc
xor
lods
push
mov
xchg
insb
cmp
dec
inc
outsb
mov
jno
mov
divl
ja
add
jle
xor
xchg
popf
popa
xor
pop
lds
fs
sbb
ror
pop
lock
add
pop
and
test
pop
sbb
aaa
cwtl
dec
ds
push
nop
cmp
xchg
mov
imul
lods
dec
movsb
pop
jg
sbb
ret
in
test
daa
mov
push
xor
and
loopne
sub
pop
adc
xchg
xor
test
in
jne
adc
pop
mov
leave
insl
test
outsl
mov
sahf
pop
arpl
leave
push
lock
mov
push
adcb
mov
lods
enter
cmc
cmpl
lds
ljmp
xor
js
sti
nop
mov
and
inc
in
test
sbb
sub
dec
or
test
lret
cltd
fucomi
stos
stc
mov
sub
jnp
dec
sbb
sub
dec
or
test
lret
cltd
fucomi
stos
stc
mov
sub
jnp
dec
sbb
sub
dec
or
test
lret
cltd
fucomi
stos
stc
mov
sub
jnp
dec
sbb
sub
dec
mov
test
lret
cltd
lods
sahf
and
ss
fs
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
mov
clc
sbb
mov
lret
cmp
sub
jge
lea
dec
lods
js
sub
js
or
sbb
decl
fdivrs
mov
or
js
sub
mov
or
loope
rolb
mov
gs
repnz
pop
lcall
cwtl
or
mov
mov
jno
movsl
xchg
mov
std
pop
xor
push
add
jne
enter
outsl
dec
inc
mov
mov
lds
xchg
int3
outsl
push
in
xchg
jo
or
sbb
push
mov
imulb
xchg
sbb
cmpsl
xor
in
jge
mov
int
or
lea
xor
pop
jb
int
cwtl
add
lods
int3
imul
add
pop
cmc
xchg
jle
mov
cwtl
mov
fiadds
mov
test
loopne
or
clc
mov
adc
sub
xchg
mov
pop
movsl
call
in
sbb
or
iret
aaa
mov
mov
std
jno
pusha
pop
push
mov
and
fwait
pop
popf
sbb
int3
cmp
xor
lret
js
cmp
ss
mov
jge
call
dec
ficompl
fsubl
outsb
in
fstl
push
js
or
popf
dec
xchg
js
sbb
lods
jge
pop
shrb
mov
jge
lea
dec
lods
pop
mov
or
sbb
call
sub
mov
jge
lea
dec
lods
pop
mov
or
sbb
call
mov
dec
dec
fwait
xchg
add
sbb
dec
mov
pushf
call
inc
mov
cmp
fnstenv
sbb
loopne
ret
aad
jns
das
push
cmp
push
pop
scas
ret
pop
jae
ror
jnp
adc
and
mov
test
push
in
adc
and
iret
push
mov
das
movsb
cmp
push
jne
in
adc
cmp
push
or
or
add
rorl
aam
inc
cld
sub
push
and
movd
jnp
mov
jb
loope
and
movsl
jns
test
cmp
dec
popf
into
addr16
pushf
pop
cmpsb
pop
mov
shl
dec
jmp
cmp
jb
cltd
pop
imul
cmp
sub
add
std
xor
inc
into
scas
add
int
sub
popf
push
sbb
repz
aas
in
fstps
adc
popf
xor
inc
cmpsl
sbb
sub
jg
cmp
pop
xor
scas
out
and
ret
dec
xorl
mov
movsl
inc
scas
outsb
lcall
pushf
jp
jg
or
data16
push
xor
mul
rcr
fistps
mov
roll
mov
jge
push
insb
fiaddl
incl
popa
fstpt
jae
cltd
jnp
jb
fnstcw
cmp
or
sub
divl
mov
pop
or
imul
lret
jnp
or
imul
jno
movsb
lods
jl
mov
sbb
or
mov
sti
adc
jae
pop
out
nop
pusha
push
stos
mov
or
arpl
mov
add
xchg
out
jle
in
and
movsb
cwtl
xlat
aad
pop
pop
jo
repz
test
frstor
cmpsb
push
lds
jecxz
dec
roll
push
mov
sub
mov
mov
dec
arpl
popf
or
or
jg
cli
cmp
outsb
cmp
lods
jge
adc
cmp
clc
imul
lcall
enter
or
dec
jmp
neg
popa
pop
lahf
lods
jne
iret
pop
insl
jp
outsb
dec
sti
xchg
daa
mov
mov
mov
mov
push
aas
mov
mov
cltd
stc
mov
mov
cmp
aas
sahf
shrb
add
das
xchg
xchg
push
xchg
and
nop
mov
cwtl
rcr
pop
ja
and
mov
lods
xchg
pop
loop
mov
cmp
hlt
add
jg
mov
outsb
mov
shll
imul
xor
xor
lret
jmp
shll
test
xchg
mov
movsl
lds
push
or
sub
aad
repz
rolb
push
stos
data16
push
ja
cld
sbb
test
outsb
adc
and
and
scas
add
mov
dec
insl
jno
aaa
test
lock
test
pop
test
dec
aad
cli
adc
mov
dec
lea
or
xchg
adc
push
jg
mov
enter
ja
add
dec
xor
dec
or
fdivrl
cld
js
lcall
jb
cmc
dec
jge
and
enter
mov
mov
ret
int
xchg
mov
fsts
push
push
dec
icebp
add
jp
fcoms
test
dec
or
adcl
test
xchg
and
sub
push
cmp
test
push
scas
bound
mov
mov
push
push
out
and
sbb
mov
inc
dec
mov
out
iret
in
cmpsb
xchg
mov
in
ret
add
stos
shr
jg
jo
xor
iret
and
repnz
inc
lcall
testl
pop
push
test
mov
pop
sbb
scas
imulb
inc
fidivrl
repnz
cltd
push
sti
push
gs
pushf
mov
mov
xchg
or
lret
push
mov
push
cmp
adc
inc
mov
arpl
iret
dec
xor
fwait
int3
out
enter
lahf
mov
push
aas
jle
push
sbb
scas
ficomps
jmp
jl
mov
cli
dec
cmpl
inc
xchg
jbe
arpl
loopne
dec
popf
sbb
rorb
pop
pop
push
sub
out
fs
push
stos
dec
repnz
add
in
pusha
out
sbb
pop
or
fwait
jl
dec
test
mov
in
shl
jle
ss
sbbb
daa
xchg
sbb
lret
sarb
out
std
sti
arpl
in
scas
sbbl
or
in
adc
sub
imul
xchg
pop
xlat
scas
iret
fldenv
into
rorl
xor
lret
outsb
mov
icebp
popf
and
movsb
mov
das
icebp
inc
cld
add
lds
mov
mov
in
sti
sbb
inc
pop
fs
xor
pushl
out
cli
and
ficoms
or
push
cmpsb
pop
mov
lcall
cwtl
inc
filds
jae
and
enter
in
dec
xchg
in
xchg
icebp
and
xchg
xchg
dec
imulb
movsl
lds
or
mov
stos
xchg
add
mov
lds
inc
push
jns
popf
ficoms
clc
lahf
adc
xchg
shlb
adc
loop
or
aas
ret
jns
pop
or
mov
xchg
xorl
fldl
sbb
and
fstl
int
push
cld
dec
subb
pop
mov
jecxz
pop
pop
daa
cs
mov
in
mov
addb
mov
imul
sbb
push
or
mov
mov
fisubl
stc
cmp
mov
les
pop
pop
nop
lret
jle
aam
sub
je
jbe
int
mov
add
clc
mov
jg
out
ds
mov
dec
nop
sub
bound
mov
scas
and
push
loope
icebp
outsb
dec
in
push
pop
stos
dec
jbe
cmc
dec
add
out
in
dec
xorl
push
mov
cmp
sbbl
xchg
and
mov
xchg
inc
cli
insb
lahf
mov
cmpsb
mov
jmp
stos
jns
leave
xchg
push
xchg
aaa
in
test
mov
icebp
mov
inc
dec
mov
inc
and
or
xor
jmp
push
xor
out
sub
push
push
lahf
out
repnz
mov
sbb
mov
pop
mov
insb
les
add
pop
sahf
fsubl
xorb
dec
adc
cmp
decb
call
cld
dec
dec
push
add
call
nop
inc
loop
push
sub
lahf
dec
push
addl
inc
imul
xchg
in
cmpsb
mov
sub
js
xor
push
fcompl
sub
imul
andl
test
adc
sbb
idivl
xor
mov
cmp
les
sub
push
lcall
pop
xchg
sub
or
insl
ss
sahf
mov
push
lret
stc
sbb
insb
sub
mov
fwait
int3
inc
add
jno
sahf
mov
pop
xor
pop
enter
mov
xchg
fwait
iret
jp
out
adc
cld
inc
call
and
movsb
mov
js
cmp
insl
rclb
addr16
dec
mov
fs
into
sbb
add
aaa
out
stos
stc
or
repz
or
aaa
stc
jnp
jmp
int3
aad
push
arpl
xor
outsb
pop
add
mov
cmp
sbb
ret
cmp
fnstenv
pop
xchg
mov
xor
sbb
out
lods
dec
mov
jae
jnp
sub
dec
mov
adcl
loop
cmp
jl
gs
xchg
cmpsb
mov
popl
inc
aad
scas
lods
loop
push
adc
cmp
mov
mov
mull
scas
inc
cmp
add
lock
icebp
jmp
sahf
pop
js
pop
sbb
mov
rcll
pop
sbb
jnp
dec
dec
xor
leave
js
sbb
dec
sub
outsb
fidivrl
movsb
adc
je
mov
outsl
inc
add
mov
sub
adc
push
mov
in
cmp
movsl
addr16
and
lcall
jno
popa
cmpsl
jbe
mov
scas
and
arpl
adc
test
stc
jl
xchg
pushf
mov
imul
clc
sub
int3
pop
fwait
pop
out
push
lret
inc
movsb
cltd
pop
out
loope
or
xor
addr16
shrb
pop
popa
dec
adc
push
ljmp
jno
jns
jge
sbb
mov
int
lcall
lds
sbb
push
and
jge
sub
xchg
clc
pop
sbb
out
or
shlb
scas
cmp
test
xchg
inc
xor
adc
stos
cvtpi2ps
mov
pushl
mov
or
jno
mov
btr
add
jmp
lret
stos
dec
cmc
jb
push
es
es
dec
xor
out
cmpsb
adc
loope
mov
push
in
mov
mov
mov
bound
popf
xchg
sti
fcoms
xor
push
jno
aaa
les
cmp
pushf
enter
ja
cmp
bound
movsl
jmp
es
out
fwait
icebp
push
popf
mov
ss
inc
sbb
sbb
addb
test
sarl
hlt
xchg
xor
mov
pop
and
and
shrb
jae
sbb
cmpsb
add
sbb
test
cli
lahf
decl
in
cmpsl
jno
sbb
sub
movsl
sbb
mov
jns
mov
push
xor
iret
enter
add
lahf
mov
repz
sahf
mov
or
jbe
xor
inc
lahf
adc
mov
push
sbb
mov
leave
add
test
or
inc
jnp
adc
push
xchg
fsubl
push
in
inc
jae
pop
data16
shlb
mov
jg
frstor
xor
in
xchg
cli
xor
mov
and
incl
push
mov
push
cmp
pop
xor
and
xor
popa
insl
pop
push
je
cmp
and
jp
shll
mov
rorb
addr16
icebp
imul
insl
xchg
sbb
dec
inc
push
leave
pop
mov
sub
mov
xchg
jmp
dec
aaa
sbb
adc
insl
sub
xlat
popf
add
xchg
add
fisttpll
jne
test
out
iret
sub
inc
int3
xchg
shrl
stc
test
das
rorb
mov
and
cmp
jmp
push
lods
adc
out
decb
stc
outsb
mov
inc
movl
adc
xchg
push
scas
adc
popl
cmp
repnz
mov
popa
jae
negb
movsl
out
and
mov
sbb
out
sub
lods
out
ret
pop
dec
sar
test
js
adc
xchg
dec
mov
sub
bound
xorb
aad
xchg
sub
sub
pop
js
mov
mov
sbb
daa
out
mov
mov
pop
sahf
sahf
cmpsb
rcrl
sbb
pop
jp
test
aad
mov
aas
lret
mov
shlb
mov
pop
pop
xor
sub
loop
and
jg
adc
in
aam
daa
dec
xor
push
loopne
adc
test
adc
sub
test
andb
rcrb
inc
out
cmp
addb
push
ds
adc
jnp
pop
dec
in
dec
cmp
lods
mov
push
inc
cmp
adc
and
and
mulb
sub
stos
xchg
and
sub
mov
xor
push
adc
inc
sahf
fs
and
xchg
stc
mov
dec
xchg
je
fstp
lahf
mov
dec
mov
fwait
fsubs
xchg
or
shll
into
insb
fiaddl
pop
mov
dec
je
jno
loope
sub
pop
cmpsb
or
pop
inc
les
fs
add
aas
popa
shll
icebp
outsb
sarl
mov
pop
dec
loop
jo
push
pop
push
scas
enter
xor
or
out
xor
and
loop
xchg
xchg
push
fdivrs
pop
sbb
pop
mov
faddl
xchg
data16
mov
xor
sub
jmp
and
mov
in
mov
lods
lahf
mov
xor
xchg
fdivp
and
pop
enter
mov
push
imulb
into
cmp
push
jmp
mov
inc
dec
sub
cld
add
call
dec
cmp
mov
ret
cmp
and
mov
in
pop
jb
push
inc
mov
dec
in
pop
xor
outsb
mov
jg
push
out
iret
aad
cmp
cli
mov
mul
xor
sub
stos
cmp
pop
mov
or
mov
int3
dec
xchg
loop
or
fsubr
test
push
mov
push
dec
adc
and
jbe
pushl
sbb
add
and
pop
shl
cld
adc
aaa
and
push
xchg
mov
adc
jl
shll
bound
add
sbb
add
jns
out
sub
test
sbb
addb
addb
sbb
repnz
fbld
bound
xchg
push
and
push
push
test
inc
stc
pusha
movsl
adc
push
sub
fxam
cmp
mov
nop
fistl
xchg
aad
mov
cltd
xlat
dec
fs
jno
rcr
cmc
add
sub
sub
ret
cld
push
into
mov
mov
imul
fdivrl
mov
fs
xchg
shlb
cmp
xor
jno
movsl
in
icebp
add
jnp
lock
mov
cmp
repz
push
mov
pop
xor
mov
xor
push
lock
dec
ljmp
loope
aaa
sbb
dec
roll
lret
loopne
dec
fs
xchg
inc
pop
jg
sbb
add
adc
out
in
movsb
jbe
mov
enter
xchg
mov
mov
mov
fmuls
je
xchg
xchg
lds
or
or
rcrl
jbe
outsl
in
outsl
or
adc
sub
pop
int3
mov
jnp
dec
xchg
lret
sbb
outsb
and
bound
ret
test
or
insl
lret
cmp
xchg
inc
sahf
push
mov
adc
jmp
push
call
mov
pop
mov
mov
repz
xchg
fstl
or
xchg
push
clc
sbb
jno
mov
jnp
std
dec
ret
les
adcb
jne
daa
loopnew
cmpsl
sahf
pop
sbbl
ds
mov
ljmp
clc
inc
push
xorb
and
jb
movsl
xchg
sub
and
out
mov
mov
fwait
lods
mov
icebp
rolb
mov
pop
dec
mov
shlb
pop
mov
mov
hlt
loop
or
icebp
into
pop
dec
jb
addr16
and
ljmp
inc
daa
cwtl
push
mov
mov
scas
xor
jg
lahf
jle
mov
fiaddl
lret
mov
push
and
or
sub
push
lock
gs
enter
xchg
in
and
idivb
xor
adc
lea
inc
dec
sub
push
xor
fiadds
scas
sbb
test
sbb
mov
in
and
movsb
jae
imul
pop
out
in
push
lret
in
iret
ficompl
mov
fistl
addl
nop
jno
jbe
fimuls
jl
mov
out
pop
mov
sbb
lea
mov
movsb
mov
faddl
inc
jo
jp
jo
repnz
gs
xlat
dec
sbb
pop
sbb
cmpsl
pop
into
sbb
stos
mov
jo
pop
movsb
mov
es
stos
popf
das
call
xchg
inc
pop
xlat
leave
test
add
or
cli
adc
mov
popf
fmull
sbb
push
mov
cmp
ret
cmp
lcall
mov
adc
into
movsb
lea
test
sbb
orb
pop
xchg
dec
or
jo
adc
aas
es
xchg
sub
xchg
sbb
mov
loop
sarb
sub
or
mov
xor
mov
gs
loope
imulb
jno
in
push
pop
xorl
sbb
jecxz
pop
int
lock
les
ljmp
js
das
push
or
icebp
outsb
and
jl
cmp
xlat
push
in
dec
jns
mov
in
mov
in
aaa
mov
fcompl
pop
xchg
inc
sub
ljmp
lret
test
aam
insb
scas
ja
xor
jge
in
popf
fcoml
inc
das
inc
scas
cld
add
sbb
fimuls
out
jb
in
add
mov
imul
xor
xlat
pop
insl
arpl
in
push
dec
push
icebp
and
pop
push
mov
inc
add
pop
xchg
push
insb
je
jmp
cmpsb
test
insl
jo
adc
sti
push
loop
push
pop
lods
xor
mov
popf
and
fdivr
ret
xor
std
mov
out
jb
fsubrl
jmp
gs
add
dec
jnp
inc
aam
dec
sub
out
mov
jge
push
adc
lods
cmc
or
outsl
std
mov
cmp
inc
nop
jmp
jle
outsl
inc
jns
insl
out
fstp
hlt
adc
movups
adc
addr16
dec
mov
iret
cmpsb
js
int3
mov
push
or
adc
fildl
das
inc
jle
xchg
lods
or
jns,pn
and
movsl
jb
sub
mov
jle
bnd
insl
int
lcall
cmpsl
add
in
pop
std
sbb
jno
enter
xor
imul
pop
ss
in
cwtl
xor
rcr
adc
dec
imul
rcl
inc
xchg
or
and
adc
jne
das
dec
xchg
jl
ljmp
test
mov
xor
stos
add
pop
cmp
inc
dec
mov
arpl
test
mov
xchg
outsb
scas
sub
andb
adc
cmp
test
inc
xchg
xor
lds
test
adc
out
cltd
stos
ficomps
lock
dec
lahf
mov
orl
addr16
push
outsl
pop
cmc
jl
sbb
and
les
jb
and
jmp
mov
je
loope
ds
adc
out
and
movsl
push
mov
mov
outsb
mov
into
out
hlt
mulb
outsb
mov
jbe
in
cmp
addl
mov
xchg
inc
jp
repnz
add
or
add
push
cld
sbb
lds
out
and
add
hlt
inc
jecxz
sbb
scas
sbb
in
jge
ficompl
shl
nop
cwtl
mov
incb
hlt
mov
aam
in
stos
clc
nop
rcr
enter
aaa
mov
fcom
mov
sbb
jg
sbb
cld
loop
bound
fmull
add
ljmp
js
in
pop
rclb
jmp
movsl
test
lret
fsubrs
lret
test
icebp
pusha
push
xchg
mov
inc
es
fisttpll
adc
xlat
push
dec
jo
xor
mov
call
jb
loope
xchg
push
push
pop
xorb
cs
in
xchg
fwait
pushf
sub
sarb
daa
mov
popa
lods
inc
outsb
out
lds
cltd
sbb
and
xchg
scas
das
std
lret
push
pusha
mov
push
aam
bound
in
pop
mov
jb
push
xor
or
jno
pusha
ljmp
stos
mov
inc
jecxz
mov
lds
das
xor
lock
or
jb
jnp
cmp
sub
adcb
cwtl
jnp
sub
push
push
jae
je
outsl
xchg
xor
out
sub
xor
pop
and
fldcw
movsl
xchg
inc
sub
cmp
xor
bound
lahf
cli
test
jo
cmpsb
mov
movsb
mov
cmp
inc
xchg
add
repz
movsb
mov
jg
int3
cwtl
cwtl
xchg
mov
jnp
scas
push
pop
dec
call
sbb
out
mov
push
pop
lock
shrl
cmpsb
divl
lcall
inc
loop
adc
add
test
into
cwtl
sub
enter
jnp
push
in
or
sbb
add
fidivs
test
and
scas
mov
insl
subl
nop
out
and
pop
pushf
ljmp
xchg
repnz
jbe
int3
popa
stos
hlt
jae
in
add
lods
cmp
inc
xchg
add
addl
sbb
sbb
add
fisttpll
js
pop
mov
aas
fists
add
pop
lds
mov
shl
push
fs
outsl
push
lahf
jns
movsb
mov
ds
inc
fiaddl
into
jmp
add
lods
repnz
std
shll
inc
imul
xchg
push
sub
cmpsb
mov
out
sbb
cltd
fists
mov
inc
mov
aaa
test
lahf
cs
repnz
mov
je
cmpl
shrl
sti
xor
cs
cmc
xchg
cmp
pop
arpl
adcl
mov
imul
jecxz
in
popl
add
mov
cmp
mull
push
movsl
scas
sahf
lock
push
jp
aaa
jbe
testl
cwtl
lods
or
out
pop
jl
cmpsl
pop
pushf
sub
inc
flds
aad
subl
rcrl
test
push
outsb
out
stos
jp
jnp
int
and
clc
adc
fisttpll
cwtl
cwtl
into
push
sub
jle
lcall
or
mov
add
push
xchg
sbb
fs
pop
lock
jmp
dec
and
lock
imull
jnp
or
add
loop
adc
leave
xor
sti
int
or
xor
xlat
das
xchg
cmp
dec
pop
adc
xchg
icebp
mov
push
cmp
pop
dec
enter
dec
mov
lea
fiadds
icebp
push
out
dec
mov
add
xor
mov
jge
dec
push
dec
add
mov
xor
loop
sbb
frndint
or
inc
dec
arpl
mov
inc
lret
mov
pushf
testb
fldt
mov
adc
sar
mov
aas
and
aas
and
add
pushf
inc
inc
ljmp
lret
add
mov
insb
subb
push
movsb
shrb
xchg
test
and
sbb
test
data16
adc
pop
movsl
inc
mov
inc
mov
push
sbb
test
mov
jge
lea
dec
lods
pop
mov
or
sbb
call
sub
mov
jge
lea
dec
lods
pop
mov
or
sbb
call
push
fdivrs
mov
jge
push
js
dec
lods
pop
mov
or
sub
fmull
fdivrs
dec
mov
jge
jb
aaa
loop
pop
lret
mov
notl
out
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
mov
cmpsb
sub
sbb
jp
loope
ljmp
push
lcall
cli
pop
xchg
cmp
sub
sbb
and
cli
es
data16
push
lcall
add
pop
cmp
or
cmp
add
mov
add
sbb
fdivrs
ljmp
xor
in
lret
jno
adc
and
bound
push
gs
rcrl
test
fsubrs
mov
rolb
lcall
mov
xor
add
rcr
ljmp
add
push
xor
dec
and
dec
jp
push
into
push
pop
push
or
out
sub
movb
and
data16
push
gs
testb
xchg
mov
sbb
pop
fisttpl
push
fldenv
cmp
shlb
scas
leave
dec
pop
dec
test
xchg
xchg
das
js
or
fldcw
push
or
or
mov
push
jbe
loopne
div
dec
xchg
xchg
cmp
cwtl
lock
mov
idivb
xchg
addb
jp
add
cltd
lahf
mov
outsl
dec
ss
arpl
aas
out
and
sti
cmp
sub
sub
es
push
xchg
cmp
je
push
mov
pmaddwd
stos
aas
incl
stc
fimull
lret
ss
movsl
jbe
sub
sbb
or
cli
es
data16
push
lcall
xchg
pop
xchg
cmp
sub
sbb
or
cli
es
data16
push
lcall
push
daa
inc
movsb
cmp
test
test
jne
mov
test
es
or
jl
dec
ds
xchg
dec
mov
lods
scas
add
insb
not
lret
les
mov
jge
lock
outsl
and
mov
cmpl
xor
outsb
fstpl
mov
pop
push
inc
lock
pop
push
mov
fnstenv
loopne
pop
jne
xlat
mulb
fwait
test
stos
inc
xlat
outsb
mov
xchg
xlat
movsl
addr16
insb
lcall
sub
xlat
lods
sub
divl
sbb
add
sti
movsb
repnz
shlb
ds
sub
icebp
pop
leave
jae
dec
or
jge
js
inc
xchg
fisttps
test
das
mov
cmp
movsb
jge
popa
and
pop
lahf
lock
out
ret
add
pop
ret
outsb
ja
sbb
inc
or
mov
jge
jbe
in
push
call
js
sbb
sbb
in
fwait
and
sbb
aam
fstl
inc
adc
push
sub
stc
bound
mov
add
rep
icebp
jmp
outsl
ja
scas
stos
rcrb
fwait
mov
push
adc
jnp
dec
or
push
test
ja
outsb
mov
xchg
fimuls
ret
data16
flds
lret
lds
add
call
addr16
dec
or
cmp
jb
and
out
xchg
xchg
fcoml
ret
inc
inc
jl
inc
push
fwait
in
test
std
lock
push
bound
ret
cli
negb
xor
jmp
mov
mov
add
pop
sub
roll
mov
jbe
test
push
fbstp
sub
dec
sbb
push
sbb
addr16
fcmovnbe
mov
subb
sbb
push
lret
mov
cmp
push
movsl
icebp
aad
sub
es
jno
mov
out
mov
cwtl
xor
nop
pop
mov
mov
mov
mov
movsl
cwtl
fsubl
dec
sub
je
jl
js
fsubrl
sbb
cmp
jb
push
dec
or
outsb
jo
insl
add
mov
mov
dec
movsbl
popf
test
rcrb
lods
mov
jp
roll
icebp
lcall
imul
les
pop
xchg
cmc
cld
or
add
sahf
in
mov
xchg
ret
xlat
xchg
iret
repz
dec
shrl
xor
imul
mov
std
aam
mov
push
addr16
sbb
cltd
mov
dec
cmp
mov
stc
in
je
cld
in
data16
insl
test
or
in
jno
cmp
xorl
pop
rcrb
jne
jmp
daa
jo
mov
jns
icebp
xor
mov
scas
push
mov
loopne
pop
insb
pop
sti
fcmovu
lcall
mov
sbb
add
ss
mov
outsl
fs
add
xor
jg
icebp
mov
cltd
lret
mov
orb
mov
mov
dec
call
fimull
mov
popf
fsubrs
mov
pushf
or
ret
xlat
inc
adc
sti
js
stos
inc
cs
jmp
leave
adc
out
cli
in
out
mov
or
mov
inc
and
mov
shr
jns
into
inc
dec
push
bound
roll
jg
stos
fimull
xor
sbb
cld
xchg
int3
test
dec
or
pushf
push
jmp
cmpsb
mov
adc
mov
mov
loope
push
mov
inc
add
sahf
adc
xchg
cmp
mov
sub
add
xchg
dec
inc
nop
cmp
sub
pop
push
repnz
out
xchg
or
ja
sub
test
xchg
rcrl
sub
out
mov
dec
pushf
inc
xchg
push
stos
sbb
xor
jno
jg
gs
xorb
in
fdivrp
leave
sahf
imulb
mov
cmc
mov
push
or
jl
scas
push
dec
in
mov
insl
cmp
jg
mov
enter
je
or
inc
fisubl
test
xor
lea
std
cwtl
cmp
mov
aaa
lds
rolb
repz
or
sbb
repnz
iret
test
popf
inc
jns
int3
adc
in
mov
fildll
pushf
cld
pop
es
in
sbb
incl
pop
aad
push
in
sub
mov
cmc
push
cmpsl
xor
jbe
aaa
and
pop
ljmp
sub
dec
or
sub
cmc
cmp
std
pop
dec
sub
test
push
cmp
mov
insl
mov
aam
ds
gs
inc
pop
pop
sbb
not
clc
jno
fisubrs
int3
daa
xchg
push
add
jecxz
xor
inc
aam
insl
cs
inc
push
push
push
sbb
stos
or
into
jne
push
orl
push
adc
in
mov
pop
icebp
cmp
push
cltd
jns
fidivl
cmp
jge
jecxz
mov
mov
mov
aad
bound
xchg
jo
lret
cwtl
mov
cmpsl
xchg
notl
or
add
mov
mov
rcr
frstor
xchg
xchg
adc
inc
xchg
js
jle
leave
mov
dec
jns
ljmp
cmpsl
cmp
bound
in
cmp
cmp
fdivs
xchg
add
scas
sub
adc
sarl
mov
mov
push
out
daa
push
cmc
adc
adc
adc
scas
xor
xchg
outsb
cmpsl
or
dec
aad
push
test
cs
adc
movsl
add
xchg
std
nop
dec
pop
imul
jg
popf
aaa
or
arpl
lods
fistpll
shll
push
loop
fdivs
xor
and
adc
sahf
sbb
sub
sbb
iret
popa
shrl
aas
into
cmpsb
cmpsb
aas
adc
icebp
or
sub
js
popa
iret
fucomip
adc
push
dec
pop
add
or
test
out
sbb
push
fcoms
sub
xchg
insb
mov
repnz
dec
pop
lods
test
mov
ss
cmp
lahf
mov
adc
jl
ret
xlat
dec
xchg
sbb
pop
loop
cwtl
adc
cld
sub
sub
add
pop
ret
idiv
inc
decl
xchg
arpl
jb
push
push
inc
hlt
repz
and
fisubs
jp
clc
sbb
sub
or
sbb
fs
xor
aaa
outsb
pop
arpl
ss
dec
nop
sahf
icebp
out
leave
rcr
lods
add
std
xchg
jns
dec
and
or
hlt
rorb
xor
fimull
ja
test
ss
inc
cmpsb
adc
cwtl
inc
and
nop
push
sub
inc
xor
push
les
jne
jg
into
hlt
out
sbb
cmc
fistpll
pop
outsl
xchg
incl
insl
jge
push
das
xchg
ds
jg
jecxz
into
jp
jbe
fldt
call
mov
imul
xor
jle
int
add
test
insb
sub
sti
mov
jmp
outsb
mov
fcomi
xor
jne
incb
aad
pop
dec
mov
popa
imull
or
fcmovnb
ja
mov
cmpsb
icebp
in
pop
push
test
dec
or
dec
lods
int3
aam
or
mov
es
jp
mov
fs
sbb
mov
fidivs
push
lods
mov
mov
mov
movsl
leave
js
dec
lock
mov
cmp
ss
xor
mov
fcomps
ss
icebp
cmpsb
lea
mov
and
outsb
shrl
dec
cmpsl
outsl
xorl
or
mov
imul
int
out
mov
fldenv
std
loope
lods
mov
ss
sub
lods
add
sbb
dec
and
sub
xor
mov
shll
int3
scas
ja
fnstenv
pop
adc
clc
pop
fcoms
dec
dec
ss
mov
repnz
in
loopne
sbb
push
mov
inc
stos
mov
popf
mov
pop
lret
inc
add
andb
mov
xchg
add
adc
je
and
cmp
mov
and
inc
add
lock
int
shl
inc
xchg
inc
cmc
xchg
xor
mov
mov
popa
inc
outsb
aad
dec
lods
insb
push
movsb
jnp
push
in
fwait
pop
outsl
jns
mov
in
test
enter
dec
push
mov
std
xchg
adc
in
fldenv
pushf
outsl
fbstp
pop
pop
and
insl
jecxz
cmpsb
sbb
mov
nop
into
inc
sbb
mov
cwtl
imul
testb
mov
aam
movsb
icebp
xor
inc
adc
xor
dec
jmp
fsubr
arpl
iret
out
movsl
push
lret
loope
je
popa
fldcw
pop
fcmovu
or
imul
iret
shll
sub
lahf
test
lods
add
in
dec
pop
pusha
inc
roll
lods
dec
fsts
mov
inc
ret
sbb
ljmp
cs
jae
ficomps
jp
fcompl
imul
lcall
loope
imul
add
or
fnsave
fcmovbe
aad
and
pop
rolb
push
add
ficoms
sbb
cmpsl
aad
mov
mov
pop
adc
pop
inc
shll
fldl
in
outsl
add
call
cmpsb
repnz
je
je
je
loopne
cs
push
dec
aad
dec
stc
es
add
scas
pop
push
mov
dec
data16
mov
inc
imul
leave
jp
cmp
inc
in
xchg
bound
daa
mov
xchg
add
xchg
fwait
in
xor
dec
jle
dec
sbb
ret
sahf
in
xchg
call
lahf
popa
ljmp
and
sub
scas
lock
packsswb
pop
hlt
arpl
inc
orb
adc
dec
bound
inc
fsubl
jle
ret
dec
arpl
mov
gs
inc
dec
in
pop
sub
dec
jecxz
sub
je
enter
mov
push
cmpsl
pop
lea
stc
in
xchg
jne
xchg
cmp
sbb
insl
pushf
std
cmc
xor
andl
mov
jge
cmpsb
or
pusha
testb
and
jns
cmc
clc
pop
adcl
shlb
bound
sarb
dec
mov
jno
pop
incb
rcl
pop
add
fists
scas
pop
adcl
sahf
sbbb
inc
ret
dec
mov
cs
rclb
mov
jge
ficoml
push
push
push
mov
je
push
mov
popf
mov
in
test
cmp
cltd
out
cmp
push
iret
cmp
adc
and
dec
lea
int3
add
shrb
inc
std
mov
pop
add
pop
fnstsw
mov
dec
sbb
xor
leave
cwtl
clc
add
sbb
mov
dec
inc
jbe
jno
hlt
mov
in
in
ljmp
jo
into
ficoml
jne
sub
dec
arpl
outsl
les
hlt
ret
mov
jmp
fisttps
mov
pop
call
leave
push
mov
xor
ljmp
fwait
jecxz
xchg
adc
lods
and
add
pop
nop
mov
repz
aam
pop
mov
push
mov
sub
push
mov
mov
sub
imul
sub
xchg
fsts
add
mov
xor
jnp
jo
insl
sub
ret
dec
testb
mov
push
mov
sbb
aas
jno
popa
stos
push
inc
and
rorb
pop
cmc
sub
xchg
std
dec
cwtl
inc
bound
hlt
out
cmp
push
insl
repnz
mov
and
ret
push
fsubs
shrl
mov
lahf
cs
les
adc
mov
add
hlt
xchg
sbb
push
incb
sub
jg
sub
loop
jecxz
into
in
cli
cmp
and
pop
add
enter
popf
push
out
mov
scas
pushf
ret
xlat
and
icebp
scas
aad
cs
xchg
and
roll
lods
or
dec
inc
test
mov
mov
mov
mov
mov
sub
repz
pop
sbb
idivb
dec
scas
lret
push
xchg
push
sbb
inc
sbb
mov
add
mov
ret
and
data16
mov
mov
mov
pushl
dec
rolb
xor
cmp
jmp
enter
jmp
es
daa
loop
fistps
sahf
in
loop
push
in
cmp
add
pop
ja
outsb
mov
iret
loop
jne
les
pop
adc
fcompl
mov
outsl
xchg
ljmp
sbb
sub
fisubs
pop
jg
rcrb
pop
jbe
mov
aas
and
xor
sbb
cmp
lods
push
sub
cwtl
lahf
pop
repz
or
inc
jle
clc
and
or
rorb
mov
mov
movsb
fistpll
lahf
rcrb
mov
or
jo
jle
xor
mov
adc
xchg
ja
jge
or
aaa
mov
inc
rcrl
jp
add
sbb
pop
add
pop
test
adc
stos
fadds
lock
cmp
lods
dec
cld
bound
stos
out
mov
mov
test
mov
loopne
xlat
iret
out
test
sub
hlt
fmull
xchg
outsb
sbb
insb
cmc
push
mov
pop
ret
jmp
push
xorl
jp
pusha
jg
ret
gs
roll
push
js
loopne
jge
sarb
fbld
loope
pusha
arpl
push
pop
cltd
jecxz
sbb
inc
adc
lcall
loop
push
pusha
lods
testl
cmp
into
xor
dec
pop
xor
push
cld
xchg
cs
outsl
xchg
mov
in
lret
jg
sbb
mov
stos
adcl
jg
add
mov
in
jns
add
mov
jmp
mov
ret
js
adc
fisttpl
jns,pn
fidivl
lret
shll
jp
pop
cmpsb
or
xor
mov
xor
jbe
pop
cs
dec
dec
pop
fs
inc
ret
test
or
push
sbb
repz
dec
cmp
in
int
shll
and
in
jp
pop
lea
xchg
add
push
call
cwtl
testl
pop
sbb
cmc
dec
fmuls
pushf
adc
mov
or
shl
inc
ds
add
adc
pop
mov
push
arpl
sub
aad
dec
xchg
and
or
dec
xchg
sbb
pop
add
pop
sbb
adc
mov
or
dec
mov
and
out
mov
sbb
fnstcw
aam
pop
jecxz
fisubs
dec
in
movsb
pop
cmp
dec
movsb
dec
adc
xchg
leave
ficoms
adc
loopne
and
rcrb
scas
cmp
jge
addr16
add
push
or
fisubrl
mov
inc
test
shrl
bound
les
lea
or
lds
lds
in
xchg
call
lock
mov
sub
les
popa
mov
sbb
xor
or
push
and
enter
jecxz
adcl
ja
loopne
arpl
cli
inc
mov
sub
inc
or
cwtl
push
clc
fistpll
inc
ret
jbe
imul
hlt
sbb
loope
xchg
clc
iret
out
popf
sahf
sub
xchg
ds
adc
les
mov
test
push
cmc
mov
test
push
and
mov
xchg
mov
test
popl
insb
aaa
jb
and
aam
add
jmp
cmpsl
mov
insl
faddl
push
adc
pop
movsl
push
add
and
dec
dec
jge
and
je
push
test
hlt
enter
aam
mov
inc
pop
in
mov
fadds
test
adc
mov
pop
lock
or
and
and
mov
test
xor
icebp
and
in
bound
mov
xor
inc
jnp
push
inc
out
jg
shrl
mov
ss
loope
js
push
or
mov
out
loope
lods
sbb
imul
mov
sti
mov
inc
cltd
test
fs
mov
imul
test
mov
ficoms
jge
cmp
mov
jo
iret
mov
sti
int3
adc
jg
shlb
pop
ljmp
sbb
cmp
test
test
sbb
repnz
rcl
les
scas
adc
jg
test
ret
xor
enter
jb
lock
cltd
push
cltd
push
mov
shlb
dec
cmp
push
call
test
lock
jnp
sub
fadd
xlat
xchg
push
dec
push
into
dec
and
add
and
or
mov
mov
movsb
scas
lods
cmpsb
insb
mov
outsl
and
test
xor
mov
cmp
pusha
xchg
mov
xorb
pop
mov
mov
cmpb
pop
dec
jne
mov
out
cwtl
fnstenv
pop
jnp
xor
pusha
daa
mov
popa
cmp
lock
fcmovu
fdivs
adc
ret
test
lahf
aad
push
orl
push
cmp
sub
xor
popa
xor
mov
push
xchg
enter
nop
cmpsl
gs
add
xchg
into
mov
es
ret
inc
loope
cld
sti
add
push
rorb
sbb
push
ret
dec
not
daa
xchg
sub
rcrb
push
mov
jae
push
xchg
push
sbb
mov
daa
loop
xor
mov
or
test
fdivl
or
add
scas
lcall
scas
aam
push
shr
sbb
aad
xchg
adc
adc
cmp
jg
adc
stos
pushf
nop
push
ret
adc
fmuls
stc
xor
mov
jl
or
je
jp
in
in
scas
xorl
adc
add
out
fildl
loopne
int
aas
inc
shll
add
loope
pop
xchg
iret
pop
dec
loop
pop
jb
ljmp
ljmp
adc
dec
aaa
int3
cmp
push
pcmpgtd
push
std
pop
insl
jb
and
shlb
xchg
enter
enter
repnz
loope
out
cld
cmp
xchg
sbb
lret
js
mov
sub
mov
mov
sbb
pop
add
mov
and
icebp
dec
int3
icebp
fwait
xor
daa
mov
push
nop
cmp
xchg
xor
psubw
subb
push
and
test
popf
adc
std
in
out
mov
fstl
test
aad
inc
mov
xlat
cmc
xchg
cmp
or
add
sbbl
clc
stc
fwait
pusha
in
xor
arpl
dec
xchg
jae
iret
push
inc
cmp
mov
nop
test
outsb
dec
and
fnsave
push
push
rclb
sbb
mov
ds
mov
cmp
les
sub
push
out
add
pushf
fstpt
stos
mov
outsl
in
adc
cmc
mov
xor
mov
mov
inc
push
sbb
pop
adc
sub
movsl
aas
fcompl
pop
gs
ljmp
xchg
test
or
pop
lcall
sbb
mov
sbb
mov
sbbb
sarb
lahf
loopne
inc
mov
movsl
pop
rcrb
push
fwait
arpl
jne
sbb
dec
and
cmc
ret
mov
sbb
dec
dec
sub
ret
jecxz
fmull
cmp
mov
inc
shl
xchg
les
mov
gs
arpl
in
fs
lret
pop
repnz
sbb
in
pop
mov
out
int3
popa
lahf
inc
nop
inc
sbb
aad
jo
jne
inc
pushf
cli
and
adc
andl
jno
mov
sbb
add
mov
std
cmpsb
movl
jle
outsl
test
xlat
rcrb
call
sub
inc
dec
add
cltd
fstpl
loop
mov
das
int3
jle
movsb
add
jnp
call
cmp
xchg
xchg
push
pop
cmp
push
cli
xor
jmp
add
clc
cmp
pop
rorb
push
ret
sub
addr16
mov
sbb
bound
add
or
mov
andb
jmp
jle
xlat
shrl
cmpb
aad
js
mov
insb
push
xchg
pop
mov
xor
ja
out
test
icebp
pop
sti
sub
scas
ss
and
push
gs
add
cli
push
aam
mov
out
pop
jecxz
mov
test
jp
mov
cmp
jle
aas
aas
xlat
in
pop
testl
scas
or
push
adc
repz
ljmp
mov
sub
sub
adc
in
dec
clc
and
jae
sbb
cld
push
sbb
mov
jp
aam
stos
jecxz
xchg
jo
lahf
gs
nop
sbb
push
sarb
bound
out
sub
and
add
jl
test
inc
xchg
dec
or
dec
cmp
aaa
iret
fs
imull
dec
lods
and
fisubl
stos
fisttpll
cmp
pop
inc
push
sub
sbb
sbb
dec
jge
dec
cltd
popl
roll
dec
push
sub
cli
mov
add
pop
ljmp
mov
jo
fcomi
xchg
pop
iret
lret
ss
nop
scas
divl
or
and
cmp
hlt
push
sub
aad
sbb
popa
dec
aas
orb
and
inc
jbe
aaa
sub
sbb
std
pop
fwait
jae
push
cltd
jg
dec
aam
xlat
lret
js
testl
insl
aad
sub
pushf
inc
sbb
aad
mov
push
out
std
cmp
in
ljmp
inc
xchg
jp
setbe
and
and
pusha
jl
sub
xchg
inc
lds
adc
sti
and
les
sbb
adc
lea
push
sbb
dec
stc
xchg
popl
iret
fst
arpl
ss
xor
push
and
nop
popa
ja
and
aad
clc
and
loopne
jnp
aam
mov
mov
out
aaa
imul
das
je
sub
cmp
or
adc
iret
ss
mov
aam
loope
mov
je
xchg
insl
jle
roll
xor
fndisi(8087
pop
cmp
mov
cmp
dec
push
jg
xchg
pop
cmp
pop
jnp
inc
mov
imul
mov
clc
mov
je
loope
cld
hlt
popf
in
inc
clc
mov
ret
and
repz
add
mov
jb
push
mov
adc
lahf
mov
dec
xor
cmp
sub
push
pop
xchg
cmp
sub
sbb
or
cli
es
data16
push
lcall
xchg
pop
xchg
cmp
sub
sbb
or
cli
es
data16
push
lcall
testb
data16
inc
push
push
or
sti
es
out
push
ret
jbe
jbe
push
xchg
scas
outsb
mov
mov
imulb
lcall
mov
ret
test
int3
int3
int3
int3
pop
jmp
xchg
jle
mov
xchg
add
imul
add
add
add
add
add
xchg
add
add
add
add
add
bound
popa
add
add
add
add
add
lods
add
add
add
add
add
sub
add
add
add
insl
add
sub
push
add
add
add
add
adc
inc
add
loope
pop
add
add
js
jb
push
add
add
add
add
add
lret
add
add
add
add
sbb
push
add
add
add
or
cmp
jmp
pop
add
int
add
push
add
movsl
add
add
add
xchg
add
aam
inc
add
add
fiaddl
loope
add
and
xchg
add
mov
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
push
add
add
add
add
add
lret
add
add
add
add
add
add
jne
cmp
mov
xchg
add
mov
and
fildl
test
roll
add
pop
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
push
add
add
add
lcall
add
jo
call
add
add
add
add
add
add
clc
add
push
add
add
add
add
add
add
add
add
add
insl
add
or
call
add
insl
add
fadds
clc
add
add
add
add
add
add
add
or
add
add
add
daa
add
add
bound
insl
add
add
inc
add
imul
sbb
nop
add
add
add
add
xchg
loopne
movsl
add
add
bound
sbb
imul
add
fwait
add
add
add
xchg
add
jo
xor
daa
add
add
movsl
add
add
add
lret
add
add
add
add
scas
add
add
imul
add
inc
add
add
add
add
add
add
testl
adc
sti
add
add
add
add
add
add
mov
js
push
add
add
and
fadds
out
sbb
add
add
lods
add
sbb
add
sub
and
or
add
add
jo
dec
add
add
int
xchg
add
mov
add
add
xor
adc
das
add
add
mov
add
add
dec
add
add
add
sub
add
xor
sub
add
add
add
add
add
inc
add
add
add
push
add
cld
add
add
add
add
inc
add
add
or
add
add
add
add
add
add
add
add
test
adc
lret
add
ret
add
flds
push
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
add
add
add
aaa
add
add
add
add
add
sbb
inc
add
add
ja
pop
cmp
cmp
shrb
popw
scas
xor
xchg
js
add
sub
data16
leave
test
push
shl
xor
sti
stos
xchg
cld
nop
ret
popf
pop
lahf
and
lods
sub
push
or
sub
std
cmp
jne
rcrl
fldt
outsl
dec
and
cld
pop
in
aam
out
repnz
pop
dec
mov
mov
add
sub
ja
lea
outsb
push
cmc
pusha
inc
and
popa
out
leave
cld
icebp
pop
jns
xor
repnz
movsl
mov
stc
lahf
pop
jmp
popa
jae
mov
sbb
rcll
into
xchg
sarb
ss
iret
shld
mov
mov
dec
push
dec
ret
push
test
movsl
mov
sub
sti
out
subb
lock
iret
lahf
sub
lcall
xchg
hlt
push
mov
mov
xchg
repnz
jnp
push
mov
add
sub
xchg
jae
push
pusha
mov
mov
lods
sub
sub
cmpsb
inc
inc
sub
int
clc
imul
mov
push
push
pop
test
and
xchg
fidivrl
lret
sub
dec
mov
nop
fldenv
xor
jo
jge
xlat
cmp
adc
jnp
arpl
insb
fiadds
js
add
test
sbb
es
jp
sub
ljmp
add
pop
jne
mov
jbe
lods
data16
iret
sarl
enter
xchg
add
or
inc
sub
adc
sbb
cmpsb
cmpsb
lahf
lret
push
rcrb
inc
sub
leave
cmp
and
pop
sub
mov
and
outsb
imul
push
test
sub
ficomps
jns
jmp
mov
dec
int
and
push
shlb
inc
xor
mov
mov
pop
mov
ds
lods
cmpsl
mov
push
inc
ss
rcrb
loopne
adc
int
in
and
in
cmp
mov
cmp
cmp
mov
in
pusha
adc
div
js
adc
xlat
adc
xchg
outsb
mov
stc
cmpb
fs
in
dec
ret
and
mov
cmp
inc
mov
sbb
in
and
or
push
inc
jmp
cwtl
inc
movsl
lcall
mov
popf
add
cmp
das
push
aas
int
ret
dec
sub
stos
pop
inc
sub
lea
mov
mov
push
mov
loop
jge
stos
inc
call
jp
sahf
jbe
in
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
