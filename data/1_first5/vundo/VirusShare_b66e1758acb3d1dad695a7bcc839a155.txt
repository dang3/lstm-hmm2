add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
out
pop
subl
jae
add
and
jl
add
add
add
push
or
add
add
add
add
add
mov
add
xor
push
add
add
add
add
add
add
add
add
add
add
in
push
add
add
add
add
add
add
add
sti
add
add
add
push
add
add
mov
cmp
xor
add
add
add
add
add
add
add
das
add
add
add
add
add
ljmp
add
jno
stos
add
add
add
add
add
add
add
jae
inc
add
add
stos
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
fadds
and
pop
add
add
mov
add
add
add
add
add
mov
add
roll
incl
flds
ret
add
add
add
push
add
add
add
add
mov
add
jl
mov
adc
mov
add
add
mov
add
add
add
add
add
add
add
add
add
push
add
add
add
xor
add
add
add
add
add
add
add
add
jne
xor
add
add
add
add
add
add
push
add
add
dec
add
xor
add
add
add
add
add
xchg
mov
sti
add
inc
add
add
add
push
add
xor
add
add
add
add
add
sbb
inc
add
add
add
add
xor
add
add
add
xor
add
add
add
add
add
add
add
add
add
mov
in
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
je
push
mov
push
mov
add
add
push
add
add
iret
add
add
add
add
add
add
add
add
add
push
add
add
inc
add
add
jno
nop
add
push
add
add
add
add
add
stos
add
add
add
fadds
add
add
xor
add
add
add
add
add
add
add
xor
add
stos
add
add
or
xor
add
pop
add
add
add
add
xor
add
add
mov
add
add
ljmp
add
add
add
push
add
add
add
add
add
add
mov
add
add
push
out
notl
enter
jge
out
sbb
notb
lret
mov
js
jne
xor
push
push
aam
rolb
jge
xchg
cmpsb
icebp
stos
push
add
test
inc
loop
pop
jne
and
stos
cmpb
sub
and
sbb
out
mov
add
outsl
xchg
push
ja
cmpsl
mov
push
sub
xchg
inc
or
cs
aad
and
or
xchg
into
dec
xchg
bound
xor
rcr
xor
es
pop
jbe
jae
daa
leave
sbb
add
pop
jecxz
and
std
lods
imul
cld
scas
xchg
fsubr
lret
int3
inc
sub
je
add
mov
jmp
add
lcall
sarb
dec
and
scas
inc
and
adc
ret
mov
lods
mov
cmp
popf
ret
mov
pop
sbb
dec
rcrb
ret
jle
in
xor
dec
enter
xchg
ror
pop
pushf
imul
pushf
popf
pop
push
hlt
xor
jecxz
andb
and
dec
ljmp
or
pusha
adc
dec
movsb
sbb
push
add
ss
dec
mov
stos
add
int
out
mov
fcoms
loope
push
shl
into
mov
lock
mov
icebp
into
inc
xor
pop
pop
xchg
arpl
rcll
lret
pop
lret
subl
pop
xchg
shrl
mov
jns
add
ret
lret
je
cmp
decl
and
out
aaa
mov
test
test
mov
cmp
or
push
adc
push
enter
lret
aad
lret
daa
mov
adc
fwait
lock
aad
inc
fs
lret
in
xor
ret
nopl
pop
inc
test
or
push
pop
adc
lds
outsb
dec
push
pop
into
adc
and
jns
cmc
pushf
cli
stos
dec
hlt
sub
jl
mov
cmp
imul
arpl
insl
cmpsb
dec
dec
int3
out
push
add
xchg
mov
cmpsb
mov
dec
inc
ljmp
sbb
aas
and
lods
in
mov
cmp
mov
xchg
add
xor
and
fldl
icebp
test
jg
adc
ja
rol
sbb
mov
mov
stc
ret
jns
xor
cmc
xor
dec
clc
xor
mov
and
jge
adc
int
or
mov
enter
test
sub
ficompl
lods
mov
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
pop
fisttps
adc
sti
jae
or
iret
jg
dec
into
pop
fisubrl
mov
pop
mov
jp
push
pop
fisttps
cmp
jle
idivb
popa
ficompl
das
enter
lcall
dec
inc
sbb
and
xor
cli
adc
sub
arpl
js
insb
in
fistps
mov
test
and
cli
jmp
stc
pushf
in
and
leave
hlt
inc
jp
dec
gs
test
notl
sbb
dec
inc
fldenv
adcb
mov
stos
fisubrl
jb
out
add
imul
sti
sub
ljmp
mov
cld
lcall
mov
mov
scas
cmp
mov
jp
sub
pop
and
cmp
lcall
pop
ds
cli
cmp
lret
adc
bound
and
mov
push
push
lcall
xor
inc
pop
xchg
xchg
xchg
stos
xchg
aas
dec
dec
cwtl
jl
iret
inc
mov
scas
cmp
sub
cli
in
repnz
ret
inc
rorl
and
popf
jp
sbb
cmp
dec
pushf
jbe
outsl
push
xchg
ds
push
test
cmc
pop
out
adc
mov
adc
cmp
fs
in
cmp
ds
enter
stos
jp
pop
popf
jp
push
ds
pminsw
mov
or
jg
dec
ficompl
das
mov
pop
mov
jp
push
pop
fisttps
cmp
or
jg
dec
ficompl
das
mov
pop
mov
jp
jns
fldl
jmp
les
sarl
jae
stc
push
inc
scas
lds
loope
sbb
pop
add
jo
sub
or
xchg
mov
pop
mov
jecxz
or
lret
push
fs
outsl
push
lret
cmp
jns
hlt
inc
dec
push
hlt
sarl
mov
jae
push
inc
cmpb
add
sub
sbb
call
movsb
jmp
fcomps
les
ret
push
test
rcll
rolb
cmp
loope
test
cld
lock
ss
clc
dec
adc
adc
sahf
push
inc
repnz
pop
add
mov
popa
imul
mov
loope
out
cmp
inc
stos
movsb
icebp
and
hlt
inc
movsl
rcr
dec
xorl
mov
rcll
inc
push
mov
push
test
push
int
xor
jl
adc
pop
mov
mov
in
and
jl
push
movsb
inc
jle
aaa
stc
mov
dec
fsub
adc
mov
and
stc
fisttps
insl
out
repnz
fstl
fs
stc
cmp
add
adc
jp
addr16
fmuls
pushf
mov
ret
bound
adc
mov
adc
sahf
roll
mov
inc
xor
xchg
dec
xchg
out
and
sub
mov
push
sbb
mov
stos
arpl
inc
mov
xchg
ret
mov
icebp
jle
leave
or
pop
or
movsl
lret
add
xchg
popa
sbb
push
mov
into
add
decl
jno
stc
mov
loop
push
shrl
pushf
pop
cmp
scas
popa
cmp
ljmp
test
in
popa
xorb
sti
shrb
ret
cmp
pop
push
or
mov
jae
jle
or
or
shll
push
pusha
mov
scas
pop
cmp
mov
sub
js
fiadds
and
pop
dec
adc
dec
cmp
push
inc
gs
inc
js
mov
flds
inc
jle
aaa
xchg
pop
scas
push
iret
scas
ja
pusha
cmp
and
adc
mov
addb
loopne
imul
pop
mov
mov
xor
xor
cld
pop
sbb
dec
adc
popf
and
aaa
pop
lret
or
ret
fisttpll
and
in
cld
cltd
aas
insb
mov
aaa
push
cld
xor
insl
xor
in
rolb
mov
idivl
xchg
xor
sub
nop
mov
fdivl
mov
andb
add
mov
dec
lock
mov
inc
ficoms
je
mov
lods
and
setne
adc
scas
push
loopne
ljmp
jge
xor
movsl
cmpsb
dec
fwait
inc
fstl
sbb
jb
mov
pop
shl
jge
mov
mov
icebp
std
es
mov
clc
lret
and
mov
enter
mov
popa
push
mov
and
cs
dec
imul
ret
call
push
xchg
mov
mov
popa
add
leave
dec
cmp
xor
mov
push
sbbb
pop
int
mov
out
xchg
nop
xor
dec
shlb
aam
fwait
xchg
xor
jb
sub
pop
fwait
bound
cwtl
mov
inc
lea
and
add
das
cld
fmul
pop
mov
dec
mov
cmp
push
fcom
mov
xchg
fdiv
enter
xor
jbe
imul
inc
rolb
icebp
push
int3
ljmp
pop
mov
imul
and
jle
ret
sub
jg
dec
movsl
pop
pop
leave
mov
idivb
iret
or
mov
imul
aas
mov
out
jb
jl
enter
addb
add
imul
and
sahf
push
sub
add
adc
sub
imul
mov
sub
loope
sub
mov
sbb
mov
stos
test
push
lods
pop
insb
lds
jno
xchg
stos
dec
call
ret
mov
dec
dec
test
popf
rol
cltd
leave
mov
call
push
jae
sub
or
xchg
cmp
pusha
lods
cltd
add
mov
pmaxsw
add
mov
pop
jle
pusha
cltd
xor
or
cmp
test
pop
lods
stos
test
out
mov
inc
std
leave
jmp
sub
push
push
out
inc
aas
mov
xchg
out
mov
jo
in
fildl
mov
sbb
jp
rorl
sbbl
lea
jb
les
push
leave
mov
inc
ss
jmp
es
addr16
mov
lret
mov
cmp
jae
daa
push
bound
out
test
data16
xchg
test
push
fcompl
stc
pop
fwait
pop
jno
popf
fdivs
ja
fmul
fldcw
lret
sbb
addr16
sub
and
lock
and
cmp
cmpsl
loopne
sbb
stos
pop
mov
pop
push
jno
outsl
shrl
or
push
pop
and
xchg
out
xchg
insb
inc
lock
fs
pop
pop
push
push
cld
push
loop
sbb
push
scas
and
jno
out
jne
negl
sbb
mov
push
xlat
sub
xor
test
add
ja
push
mov
orb
pushf
inc
mov
into
sub
mov
jecxz
mov
shlb
ss
mov
inc
mov
imul
daa
scas
and
mov
xchg
cli
jecxz
leave
in
inc
insl
lock
pop
mov
push
sbb
imul
sub
adc
mov
js
adc
stos
mov
negb
int
mov
aas
dec
jno
jo
in
aam
aas
mov
dec
jno
nop
int
add
out
push
scas
subl
add
scas
pop
mov
xorl
and
mov
iret
push
dec
icebp
cmp
cwtl
push
sti
loop
xor
cmpsl
leave
mov
inc
movsl
insb
and
es
add
out
jecxz
inc
cmp
mov
fstpl
mov
dec
adc
aam
outsl
fwait
push
mov
dec
scas
inc
sbb
mov
jno
jb
inc
cmp
into
mov
mov
popf
push
sarb
test
sbb
jae
ss
js
dec
js
movsb
jle
or
hlt
and
pop
cmpsb
aaa
add
mov
pushf
or
mov
mov
lods
push
iret
jns
insl
and
test
xchg
push
jb
imul
in
jne
ja
popf
in
jp
and
test
sarb
or
aad
out
pop
ja
lahf
xchg
adc
push
test
add
mov
or
outsb
or
inc
repnz
jne
pop
mov
pusha
clc
lahf
into
mov
mov
dec
xor
sbb
mov
fbstp
and
jno
call
mov
pusha
in
add
lret
pop
movb
into
pop
dec
mov
xor
xchg
ds
xchg
sbb
sub
faddl
das
in
iret
int
mov
mov
pop
jno
pop
sbbl
mov
xchg
mov
aam
inc
or
push
push
xchg
dec
mov
inc
sbb
aas
sub
in
and
mov
mov
fcoml
cmp
clc
pusha
push
sub
lcall
sahf
insb
jbe
cs
inc
int3
sbb
cmp
je
int
dec
pop
ret
jno
sub
cmpsb
mov
arpl
ret
sub
push
jecxz
sti
lds
pop
dec
jmp
cwtl
xor
lds
roll
pop
mov
addr16
rcr
or
outsl
cmc
jmp
xor
push
out
add
movsb
push
ret
push
pop
movsb
xchg
jns
xchg
fmuls
shrl
add
roll
inc
xchg
sub
ds
push
add
aas
loope
in
jo
subb
shl
mov
jns
lds
mov
aas
out
insl
fisubs
sbb
mov
ss
js
adc
jo
fwait
adc
roll
inc
ret
xor
leave
pop
popa
int3
rorb
fdivrp
andb
pop
daa
jge
sub
adcb
or
and
orb
sub
pop
sbb
mov
adc
push
jp
out
dec
es
or
rolb
shrb
aad
mov
jl
push
pop
inc
repnz
stos
stos
push
test
pop
pop
jmp
xor
fiadds
inc
notl
int
pop
jbe
addr16
inc
add
xor
push
sarl
mov
test
push
jge
sbb
jl
mov
push
or
mov
dec
cmpsl
or
sub
repnz
cmp
push
sub
subl
pop
sarb
mov
dec
and
jb
xchg
insl
out
stos
jbe
mov
mov
movsl
out
mov
loope
fsubs
push
mov
xor
les
iret
push
push
outsl
ja
or
cmp
or
and
in
pop
jne
icebp
mov
mov
push
cmp
cmp
dec
lods
aam
daa
out
fwait
sbb
loope
inc
push
rorb
imul
xorl
push
leave
cmp
add
pmulhw
test
in
mov
in
cwtl
push
sub
into
push
mov
inc
shrd
cmp
or
nop
imul
dec
outsb
mov
fisttpl
cld
test
xor
add
outsl
icebp
and
mov
shlb
and
test
inc
mov
movsb
xor
ret
dec
pop
mov
ret
jae
adc
pop
mov
int
mov
ror
sub
popf
cmp
test
dec
sti
bound
repz
aaa
and
mov
and
pusha
fsubl
mov
dec
dec
cmp
loop
xor
push
cmp
ja
cmp
jne
cmpsl
negb
out
ja
call
outsb
inc
stc
hlt
xchg
jmp
sub
call
add
jl
mov
mov
sub
frstor
cld
dec
sti
andl
dec
aaa
enter
mov
stos
and
push
mov
xchg
test
loope
push
imul
outsl
test
mov
and
insb
push
imul
xor
cmp
aam
adc
and
mov
mov
xor
aaa
das
in
js
xchg
mov
decb
popa
test
sub
in
mov
lods
int
add
sbb
adc
in
add
popa
fimuls
and
in
mov
sbb
mov
cmc
mov
jmp
cmc
fnsave
mov
inc
ffree
cmpb
xchg
pop
subb
push
imul
xor
cmpsb
or
sbb
push
cmpsb
stc
sub
in
jg
sbb
mov
cmpsb
pop
push
add
xor
adc
jbe
mov
sub
in
add
pusha
repz
jg
cmp
inc
jnp
popf
jecxz
pop
mov
lock
rcr
rorl
loope
das
repz
adc
xor
mov
jg
mov
jns
or
jmp
mov
lods
mov
jg,pn
sbb
jns
pop
and
paddw
test
fldenv
jp
dec
stc
lret
push
out
push
jbe
lds
or
and
pop
sahf
mov
push
jns
sahf
sub
push
lds
lds
cmovg
stos
mov
loop
xchg
inc
sti
xchg
dec
lods
mov
mov
enter
dec
aaa
nop
adc
jp
push
mov
aaa
inc
call
sbb
and
sbb
stos
cli
push
xlat
push
mov
push
jle
jne
or
cli
shll
std
xor
sub
imul
push
rclb
cs
pop
jmp
cli
mov
sub
mov
push
loope
sarl
nop
fimull
shll
mov
addr16
inc
pop
push
mov
ds
into
gs
das
gs
mov
mov
test
add
and
mov
push
jno
adc
pop
imul
lret
es
pusha
xchg
jl
nop
popa
lods
xor
aaa
dec
add
insb
jg
pushf
pop
aas
pop
pushf
in
fidivrl
jae
cld
push
cmp
xchg
fsubl
iret
xor
adc
mov
xor
inc
mov
add
lea
shll
sbb
xor
dec
in
sbbl
xor
js
adc
xor
test
jle
add
mov
cli
xor
add
ljmp
sub
sub
push
inc
xlat
rorl
inc
aas
outsl
push
aas
imul
mov
or
pop
enter
add
mov
ds
dec
sub
jo
into
pop
sbb
xchg
loope
pushf
cmp
dec
enter
xlat
aad
jae
ret
and
sub
inc
mov
pop
in
in
adc
pop
and
fbld
mov
movsl
jno
adc
sub
push
test
scas
add
pop
xchg
or
in
xchg
jge
mov
xor
sbb
jo
rolb
frndint
push
shr
outsb
lea
adc
ret
adc
hlt
test
dec
addr16
sbb
add
lahf
jmp
dec
mov
stos
mov
pushf
aaa
jb
shl
xchg
in
push
inc
mov
stos
jl
and
outsl
ret
test
push
repz
inc
jge
lahf
push
stos
data16
loop,pt
pushf
aad
inc
gs
popf
jb
or
pop
fsts
dec
mov
scas
aad
xor
mov
and
add
or
jge
jno
dec
icebp
lods
xchg
ja
push
push
and
jmp
decb
inc
sbb
adc
inc
jo
push
popf
ficomps
lock
dec
stc
js
jb
test
push
jb
arpl
jae
leave
popf
popa
add
out
clc
push
in
jo
xor
xor
and
cmpsl
fidivrl
cmpsl
mov
or
addb
fcoms
and
icebp
cmpps
fwait
inc
lret
negl
mov
les
lret
add
cmp
inc
and
dec
xor
ret
xor
dec
push
push
add
mov
pushl
mov
insl
inc
xor
dec
adc
addr16
jne
jae
jo
dec
movsb
dec
pushf
test
test
inc
pop
mov
gs
lods
gs
call
test
push
cli
cld
or
cmp
insb
mov
dec
lret
aas
and
pushf
clc
sbb
inc
adc
aad
cmp
or
jg
jle
lret
es
sbb
fwait
cmp
outsb
adc
inc
sub
aaa
scas
pop
imul
sub
bound
ss
andl
sub
out
sub
jl
dec
mov
adc
sbb
mov
cmp
push
incl
xor
jl
jecxz
fwait
jmp
xor
xchg
bound
lea
push
and
lods
pop
xchg
sbb
fadds
lret
js
add
loop
sub
lahf
cmp
nop
pop
inc
leave
sti
fmull
addb
jle
push
add
ret
sbbl
cmpsb
pop
sub
aam
xchg
mov
popl
cli
jb
adc
push
cs
hlt
loope
sbb
lahf
das
std
dec
sbb
call
pop
insl
jnp
cmp
stos
mov
mov
cld
movsb
sub
and
lea
lea
pop
sub
aaa
add
xor
ja
add
mov
push
shr
and
or
popa
dec
sub
jp
je
out
and
push
and
mov
fwait
pop
sti
imul
or
loop
repnz
nop
push
adc
outsl
daa
pop
ljmp
xchg
jle
jb
cmc
mov
or
xor
andb
in
fldenv
sub
push
fwait
movsl
pop
clc
rcrl
sub
pop
or
int
ret
xor
mov
fidivrl
xor
or
adc
pop
fimuls
loop
stos
scas
mov
mov
sti
test
addr16
nop
adc
jge
dec
jne
out
sub
jns
test
inc
xor
add
popa
xchg
testl
sub
lahf
add
xchg
pop
div
pusha
lret
sbb
or
arpl
xlat
cmp
shlb
stos
mov
dec
in
insb
push
push
jge
insl
mov
mov
add
xchg
and
stc
aaa
pusha
fsubs
jl
lret
lret
fidivrs
xchg
add
ja
cmp
lcall
dec
push
arpl
loopne
test
or
out
movsl
fucomi
dec
arpl
cmp
push
cmp
mov
jns
xchg
jo
loop,pn
ljmp
mov
fbld
inc
push
stos
mov
hlt
js
hlt
jg
cltd
out
mov
lahf
mov
and
xchg
in
jmp
and
cltd
pop
push
popa
mov
dec
xchg
sti
loopne
cmp
xchg
andl
hlt
lea
nop
sbb
add
push
push
sahf
loop
adc
sub
es
in
xchg
inc
xchg
jmp
mov
and
dec
mov
pop
pop
aad
sahf
mov
push
testb
lds
or
loop
pop
lea
enter
sub
xchg
jbe
xor
push
adc
jno
jmp
decl
push
movsb
int
loopne
jecxz
out
push
push
dec
or
lcall
pop
or
js
cmpsl
idivl
xor
mov
pop
sub
popl
mov
pushw
xor
inc
loope
lea
fsub
roll
dec
jo
jno
mov
jbe
ficompl
jbe
and
addr16
mov
adc
jl
and
fidivrl
rcl
ds
mov
ror
aam
push
jae
mov
pop
insl
cli
push
mov
je
xchg
loop
xchg
lret
pop
push
cwtl
adc
xor
inc
dec
jnp
or
dec
inc
sub
lock
or
and
shlb
insl
mov
bswap
lahf
or
fsubrl
sbb
fsubrs
xchg
movsb
xor
test
dec
hlt
push
sar
fists
mov
ljmp
xor
std
shl
test
mov
js
lods
adc
pop
cmpsb
pop
nop
dec
test
imul
lahf
adc
jge
dec
inc
inc
jb
pop
out
jo
push
push
out
repz
dec
lcall
xor
inc
xchg
mov
es
out
popa
inc
imul
insl
popa
mov
test
loop
enter
aaa
mov
jo
sbb
adc
add
out
xchg
in
pop
sub
adc
jbe
push
lcall
xchg
xchg
jecxz
xor
dec
lret
cli
adc
xor
mov
hlt
shlb
sub
scas
adc
inc
cmp
dec
repz
imul
test
push
mov
mov
call
pop
sbb
dec
sub
cmpsb
mov
or
in
inc
mov
mov
jo
xchg
sarl
dec
mov
lods
mov
mov
pop
add
js
inc
mov
and
ret
aaa
dec
cwtl
xchg
lds
push
insb
pop
orl
xor
lods
dec
xor
rcr
jp
inc
pop
mov
sbb
sub
pop
bound
std
sarl
leave
inc
int3
gs
push
clc
pop
cmc
sbb
inc
and
test
ds
out
cmp
jno
mov
mov
in
mov
les
mov
jg
push
mov
insb
aad
inc
adc
je
scas
push
jp
daa
jno
repz
inc
mov
push
push
scas
shr
mov
sti
inc
dec
jae
testl
xchg
aam
mov
aad
jnp
pop
inc
sub
jns
dec
test
jp
sti
loopne
pop
inc
stos
mov
pop
jecxz
mov
inc
clc
repz
jbe
out
xchg
out
lret
iret
dec
cltd
dec
sbb
pop
add
aad
mov
pop
fadd
daa
sub
pop
cs
dec
std
xor
in
adc
in
mov
lret
mov
subb
sti
lret
pusha
fistpl
lds
sbb
lock
addl
mov
xchg
paddq
push
lret
mov
xchg
xchg
add
fst
aaa
movsl
cli
out
daa
pushl
scas
test
jecxz
xchg
insb
push
shr
and
inc
push
dec
loope
stc
sub
aam
outsl
and
in
xor
xchg
mov
out
mov
lret
mov
xor
and
and
int3
jecxz
stos
jne
jbe
jae
mov
sbb
jge
and
pop
pop
inc
popa
stos
push
test
inc
aaa
jb
or
sub
lcall
int
aas
push
fwait
dec
mov
idivb
or
pop
xchg
cli
out
mov
les
arpl
dec
sub
push
cmp
movsl
insl
outsb
mov
inc
stos
fmul
int3
push
and
int
or
jbe
jmp
scas
inc
lds
shll
sbb
add
dec
movl
xchg
push
pop
ret
dec
scas
cmp
or
jg
dec
ficompl
das
mov
pop
mov
jp
push
pop
fisttps
cmp
or
jg
dec
ficompl
das
mov
pop
mov
jp
push
pop
fisttps
cmp
or
jg
inc
ficompl
das
mov
das
mov
jle
outsb
inc
pop
testl
sbb
lret
addb
pop
mov
lock
cmc
pop
pop
dec
or
insl
imul
sbb
cwtl
sbb
int
popf
pushf
int
mov
pop
dec
dec
dec
jns
imul
fxch
leave
cltd
icebp
das
jmp
mov
call
jecxz
pop
add
adc
and
fld
ljmp
shr
lret
int
sbb
add
mov
xor
add
inc
jno
mov
mov
mov
jge
fimull
or
in
adc
xor
and
in
xor
xor
scas
cltd
push
cmc
or
das
leave
xor
fldcw
push
jne
insl
push
lea
dec
popf
jge
imul
stc
sub
sub
push
mov
sbb
aad
mov
and
sbb
sub
cli
xor
aaa
repz
cmpsb
dec
mov
or
mov
fisttpll
sub
mov
cltd
add
in
sbbl
int3
pop
push
lods
ret
popf
aad
imul
pop
or
popa
in
hlt
aad
movsl
xchg
addr16
pop
sub
sbb
pusha
fs
dec
inc
outsb
test
pop
orl
int
rcrb
prefetcht0
outsl
add
push
push
push
mov
clc
decb
xor
jg
sbb
or
sub
fxch
leave
std
stc
in
jmp
mov
pop
dec
dec
jge
insl
imul
fxch
leave
std
stc
in
jmp
mov
pop
mov
and
add
ljmp
mov
jno
lcall
sbb
hlt
and
aam
mov
and
lahf
mov
xor
jo
cmc
pop
push
lods
push
cmpl
jnp
dec
test
imulb
push
test
sub
adc
mov
cmp
or
mov
pop
xor
push
aaa
out
jae
pushf
jecxz
mov
jb
jae
mov
insb
pop
xchg
push
xlat
or
mov
xchg
push
pusha
jb,pn
call
jl
fists
test
sub
hlt
push
inc
stos
jl
popf
pop
fmul
pop
addr16
in
in
scas
jne
jns
mov
and
cmpsl
mov
ss
js
mov
addr16
pusha
pop
pop
mov
stos
and
or
mov
cltd
push
xchg
sub
dec
test
inc
fldenv
loopne
hlt
mov
loop
adc
add
xchg
cs
cmpb
and
push
mov
cmpsl
into
jmp
test
dec
test
mov
cwtl
xor
add
shrb
jge
mov
push
iret
stos
mov
loope
lret
scas
lret
push
pop
mov
mov
lahf
push
sub
mov
imul
dec
inc
icebp
and
ror
std
jg
arpl
imul
filds
adc
lds
adc
repnz
mov
mov
dec
sbb
outsb
popf
dec
js
xchg
aaa
mov
ret
pop
stc
mov
imul
xchg
pop
jl
jno
sti
cmp
add
je
pop
outsb
clc
push
pop
dec
out
int3
cwtl
fucomip
sub
or
pop
mov
mov
push
inc
and
add
inc
fdivrl
push
cwtl
sub
cmp
sub
sub
dec
lret
notb
mov
and
lcall
popa
daa
mov
jmp
xchg
sbb
fdivrp
and
pop
dec
mov
inc
notb
ret
adc
xchg
fwait
or
loop
push
sub
or
jb
orb
inc
mov
inc
loop
inc
mov
pushf
mov
adc
roll
or
sbb
movsb
loop
stc
mov
imul
fstps
rcr
fs
cld
sbb
repnz
lret
push
sbb
insl
dec
dec
push
dec
sbb
insl
jns
add
test
repnz
mov
mov
mov
xor
xchg
mov
mov
daa
arpl
orb
int
sub
jbe
rcl
mov
minps
mov
outsb
mov
pop
fwait
adc
jmp
jnp
xchg
ret
in
ss
xorb
push
sbb
or
mov
sbb
dec
jbe
and
jae
xchg
mov
aaa
es
sub
sub
outsb
push
jnp
ss
iret
bound
lahf
jg
ret
mov
dec
adc
xchg
int3
dec
imull
and
and
inc
inc
mov
push
aad
push
pop
aad
and
fnstcw
out
pop
notl
cs
push
add
call
and
int3
pop
popa
sar
iret
ljmp
jl
flds
mov
sub
ret
repz
jbe
cmp
push
jmp
mov
xchg
pop
lcall
in
sub
fstpl
lock
cmpl
dec
mov
jmp
popf
mov
and
push
rorl
scas
clc
cmpb
cmp
cli
rol
and
pop
adc
inc
pop
insb
test
ljmp
ret
ret
cmp
push
ss
mov
mov
xlat
sbb
in
pop
lea
jnp
mov
ljmp
mov
out
mov
pop
stos
push
or
push
ret
cld
push
inc
rclb
add
fsubrs
inc
mov
dec
jmp
sarb
adc
ret
push
mov
pop
scas
fidivrs
ds
cmp
mov
push
push
jp
jp
into
mov
xor
faddp
stos
cs
cmp
mov
cmp
loope
sbb
call
xchg
mov
insb
dec
sbb
das
insl
or
popa
outsb
jb
push
sbb
aam
aas
xchg
cmp
mov
mov
sub
or
fldt
aad
push
push
cs
xchg
mov
fdivl
mov
popf
test
fisubrs
loope
sbb
outsl
dec
add
xor
mov
popf
scas
jmp
adc
dec
push
sub
bound
fdivrl
xchg
roll
cwtl
inc
and
cmp
pop
jne
movsl
popa
pusha
jg
sbb
xchg
jmp
inc
add
push
sub
xchg
sbb
rcrb
jecxz
mov
daa
gs
call
mov
test
inc
imul
xor
nop
cmc
push
and
lret
xchg
xchg
popf
fdivrp
loop
int
jne
jg
test
sbb
not
fwait
out
pop
pusha
stos
cmc
test
add
push
pusha
push
in
lret
movsl
pop
or
push
daa
daa
insb
or
or
mov
enter
and
loope
test
mov
dec
mov
xchg
and
dec
out
nop
dec
and
clc
mov
jns
out
testb
movsl
push
rcl
adc
fidivl
shrl
imul
jmp
push
push
sub
xchg
jle
push
sahf
fwait
movsb
negb
arpl
cld
fstps
push
stc
sbb
nop
cmp
je
mov
mov
mov
leave
sub
addr16
dec
std
fwait
loope
lahf
fldcw
push
jge
test
dec
nop
mov
inc
cmp
add
dec
dec
aaa
or
add
shl
adc
and
mov
das
dec
adc
movsl
xlat
mov
sbb
test
push
cld
jp
mov
sbb
sbb
icebp
cmc
arpl
and
sbb
popa
mov
aas
xor
sbb
fidivrl
push
dec
repnz
or
es
sub
pop
jns
and
xor
lahf
cld
mov
mov
test
push
or
pop
pop
frstor
scas
pop
or
cmpb
ss
dec
adc
mov
sti
jle
dec
in
sub
xlat
pushf
pop
inc
inc
sarb
cltd
push
movntq
out
addb
sbb
and
out
out
or
shll
pop
lock
inc
popf
popa
mov
mov
loopne
add
sbb
ljmp
movsb
dec
adc
decb
lret
popf
or
adc
mov
push
sub
sahf
ljmp
xchg
lretw
in
mov
aaa
dec
push
add
outsl
xorb
dec
dec
adc
je
mov
pop
lret
arpl
push
scas
sub
mov
adcl
rorl
mov
fiadds
xlat
lods
jns
dec
pop
shlb
aad
fwait
popa
jb
inc
push
fmulp
call
ret
and
mov
push
jae
jne
in
xor
or
stc
pop
shll
sub
cli
fistl
mov
out
popf
xchg
loop
or
add
repz
xor
pusha
fs
shlb
cmp
jmp
jp
push
xor
test
adc
jge
cmpsb
push
shr
jecxz
dec
popf
imul
cmp
jbe
push
je
add
shl
adc
sbb
jnp
call
xchg
pop
sbb
and
sub
lods
aad
xchg
mov
out
pop
mov
xchg
adc
inc
insl
mov
push
scas
cltd
fninit
insl
mov
jg
pop
call
or
loopne
sbb
cmp
jp
or
mov
sbb
ret
push
jp
lcall
push
fbld
or
mov
mov
xor
add
xor
sbb
xchg
jp
mov
cwtl
xchg
lods
leave
dec
mov
test
in
mov
inc
movsl
sbb
ja
add
pop
loope
add
push
cmp
jae
clc
and
rcrl
jbe
cli
je
xchg
mov
inc
xchg
flds
cmp
add
in
push
stos
sbbl
adc
mov
jl
mov
test
les
jmp
loopne
jbe
ret
imul
push
sti
outsb
lods
repnz
sbb
scas
pop
repnz
mov
pop
loop
repz
mov
in
adc
sbb
in
out
push
push
push
mov
imul
jo
dec
roll
jecxz
xchg
cmp
insl
cmp
js
mov
repz
xor
mov
adc
stos
mov
inc
xchg
lret
xor
icebp
mov
or
in
pop
add
xor
mov
aaa
jns
fcoms
adc
icebp
jl
pop
leave
dec
pop
pop
push
and
and
add
mov
lahf
adc
movsb
pushf
sarl
add
jg
nop
xchg
mov
or
je
push
loop
pop
or
call
insb
in
mov
fildll
xchg
test
imul
cmpsl
shrb
inc
mov
mov
xchg
and
popa
xchg
shrl
loop
adc
in
clc
cmpsl
mov
pusha
pop
ja
mov
xchg
insl
mov
mov
outsb
mov
dec
jl
ret
stc
jmp
xorb
lea
mov
cmp
aam
mov
sarl
mov
sahf
push
ja
and
gs
pop
cmp
repz
in
adc
inc
jmp
sbb
js
cmp
cwtl
pop
dec
pop
cmp
xchg
in
stc
lahf
cmpb
or
adc
sahf
insl
xor
pop
in
pop
cwtl
ljmp
pushf
ss
aad
adc
ret
mov
in
cs
xor
mov
pop
scas
mov
out
sti
or
les
mov
test
or
sub
into
clc
xor
jae
adc
fldt
push
adc
fnstenv
cmpsl
jle
sbbl
in
insb
push
add
imul
inc
push
shr
and
lret
js
push
xor
mov
mov
mov
cmp
addb
and
adc
test
sarl
iret
push
in
bound
pushf
jae
orl
add
add
xchg
mov
jno
dec
mov
outsl
inc
mov
adc
push
jp
enter
das
popf
or
imul
push
insb
add
cmp
dec
adc
aaa
loopne
sahf
cmp
mov
call
fwait
or
fnstcw
pop
popf
popa
and
rcrb
inc
sbb
out
mov
mov
push
xchg
or
dec
int
push
cwtl
jmp
dec
cmp
dec
jae
and
jg
lahf
lock
mov
sub
mov
popa
in
add
or
in
adc
xchg
adc
jecxz
sbb
testl
jbe
sbb
fwait
call
int
insb
adc
out
ficompl
push
fisubrl
mov
cld
inc
std
decl
lret
sub
mov
jl
dec
inc
dec
fimuls
jp
xchg
sub
and
mov
incl
mov
aad
xor
mov
pop
lods
jp
lcall
push
add
rcrb
cmp
jno
subl
dec
pop
xorb
jno
add
xchg
jo
aas
sbb
inc
or
leave
jg
pop
xchg
addb
pop
mov
in
jbe
and
movsb
or
jo
insb
mov
xchg
pop
mov
or
and
xchg
xchg
mov
mulb
pop
js
icebp
adc
dec
lock
cmpsl
les
dec
mov
lcall
jge
fucomp
call
inc
cmpsl
subb
inc
jae
push
xor
rolb
clc
fiadds
mov
xorl
clc
push
xor
cwtl
repnz
cmp
dec
or
jg
mov
fnstcw
lods
sub
cmpsl
dec
cld
xchg
xor
pop
cmpsl
dec
fsub
les
dec
push
xchg
test
pushf
xchg
mov
push
sub
inc
movsb
mov
add
dec
mov
scas
push
js
adc
jmp
daa
iret
fs
add
and
mov
lahf
cmp
shlb
repz
or
cmpsb
add
fldcw
inc
and
rcll
push
rorl
lahf
sbb
push
inc
mov
sub
sbb
xor
sahf
ja
sahf
and
pop
repz
out
dec
cmp
clc
pop
push
push
popa
js
aas
mov
stc
leave
daa
mov
call
xchg
and
scas
and
stos
cmc
icebp
cmp
bnd
aam
mov
movsb
scas
mov
je
dec
push
lret
inc
cltd
jns
adc
xor
cmp
sbb
xchg
lret
daa
or
pop
ret
add
cli
mov
jle
mov
sahf
addr16
mov
fsubr
stos
mov
stos
orl
add
rol
xchg
imul
bound
lret
dec
jo
int
mov
jecxz
popa
or
lods
xchg
fisubs
mov
dec
or
jb
fiadds
push
hlt
pop
jbe
mov
xor
add
aam
loope
jecxz
or
push
addr16
es
popa
cmc
jge
mov
or
lret
std
pop
aam
sahf
sbb
or
or
cld
adc
xlat
popf
stc
aad
cli
sbb
sahf
sbb
pop
decl
cmp
fisubs
dec
push
xor
sub
out
adc
fcoms
xor
xor
add
addr16
or
ja
addr16
pop
pop
inc
or
inc
xchg
shlb
adc
test
loopne
jp
sbb
fs
pushl
push
imul
inc
jbe
add
inc
sub
dec
lods
sarl
mov
jle
push
leave
arpl
jno
fwait
cmp
das
and
inc
aad
inc
dec
xlat
dec
sahf
rcll
mov
imul
pop
lds
mov
lcall
inc
popf
pop
lods
xchg
gs
enter
push
nop
out
cmp
aam
jb
jnp
filds
fildl
hlt
shlb
xchg
cs
jo
mov
rcrb
jl
aas
add
imul
dec
or
and
mov
push
jmp
popf
fstpt
sub
push
cld
into
sub
dec
xor
sub
mov
shl
aas
add
jne
dec
and
sbb
pop
push
push
xchg
stos
push
cmpsb
xchg
je
sbb
xor
cmovp
or
push
js
mov
repnz
fldl
xchg
mov
out
adc
push
sub
add
inc
cmp
loope
add
rolb
xchg
push
lret
inc
push
cmp
xor
aaa
jb
jnp
cli
sti
int3
push
xlat
inc
pop
sbb
jg
pop
mov
push
lock
dec
jbe
mov
sbb
push
dec
inc
mov
cmc
pusha
mov
mov
ret
add
dec
jo
push
ja
cli
mov
insl
ret
or
mov
add
das
cmp
ds
adc
dec
jl
lds
jmp
fists
xchg
repz
pop
sub
stos
popf
cmp
hlt
cwtl
mov
pop
lret
jbe
rcrl
mov
inc
faddl
ljmp
mov
shll
adc
stos
jb
hlt
add
jbe
mov
adc
sub
shl
jl
xchg
test
push
mov
enter
das
loop
jb
sahf
movsb
cmp
movsb
pop
rolb
mov
dec
cmc
mov
push
xor
jg
fcomps
cwtl
push
xchg
or
jecxz
sub
xchg
mov
scas
jg
mov
jl
sub
cmova
test
mov
lret
out
nop
rcrl
lods
in
imul
sbb
jne
ds
inc
jp
mov
fcoms
push
dec
cmp
icebp
insb
mov
pop
int
dec
or
ss
test
int
push
into
mov
outsb
mov
mov
fcoml
cmp
mov
fbstp
mov
add
sbb
sbb
jns
jb
xor
jb
arpl
test
std
lds
sub
aam
sub
imul
push
jmp
push
in
push
pop
push
xor
sbb
jo
cmpl
and
cmp
lods
mov
cmp
iret
sbb
scas
dec
xchg
xchg
out
inc
data16
inc
mov
xor
add
inc
xor
dec
sub
mov
scas
mov
scas
push
jge
adc
aas
ss
and
cmp
cmpsb
push
sbb
mov
rol
movsb
jns
mov
jnp
mov
cmpsb
push
inc
xchg
sti
mov
push
loope
xor
xor
and
in
mov
lcall
xor
mov
scas
scas
mov
dec
out
inc
and
loope
inc
mov
scas
adc
cs
xor
xchg
cmp
out
xlat
pop
lcall
in
mov
mov
push
out
xor
es
cltd
and
lock
cli
adc
jae
addl
sbb
push
test
je
cmp
lods
lcall
dec
ss
xor
sbb
out
mov
jg
outsb
jg
xlat
pop
push
mov
lods
lock
ds
xchg
jo
test
pop
sarb
scas
jg
xor
fwait
cmpsl
lock
cs
imul
mov
and
and
ds
jb
mov
xchg
test
fnsave
mov
addr16
lcall
dec
inc
jl
xor
ljmp
loop
jne
stos
aam
pop
xor
ret
popf
jne
push
mov
test
lcall
daa
mov
ds
xor
ljmp
pop
push
test
pop
sub
jmp
insl
xchg
mov
push
insb
stos
pop
roll
shl
icebp
inc
jb
or
loopne
popa
fsub
sbb
sbb
mov
lods
ljmp
sub
jge
fs
imul
inc
adc
sbb
std
js
ss
lds
sbb
xchg
pop
ss
sbb
xchg
pop
addb
lods
lahf
int3
loop
inc
pop
lock
fdivr
loopne
jo
lock
xor
push
mov
daa
xor
fs
jp
and
dec
enter
or
cmp
int3
test
or
sub
pop
add
jnp
or
rcrl
lods
sahf
ret
push
inc
sbb
mov
mov
lret
mov
jecxz
push
cmpsb
std
cld
adc
xor
lret
fidivrs
repz
xchg
incb
aad
xor
dec
mov
mov
xor
push
loop
mov
adc
sub
dec
xchg
sub
in
lret
adc
and
pop
movsb
jle
mov
xchg
in
loop
xchg
fisttpl
mov
mov
es
jo
xchg
mov
jmp
pop
stos
loop
in
adc
sub
pusha
outsb
mov
mov
dec
rolb
xor
pop
push
pop
ljmp
pop
pop
cmc
jecxz
notb
test
shr
xor
push
das
sub
repnz
jnp
xchg
out
inc
sbbb
mov
popa
lock
stc
popf
iret
dec
xchg
pop
adc
popa
pop
adc
sbb
lahf
push
out
aam
inc
cmp
pop
mov
sub
inc
and
mov
and
mov
int
add
jbe
xchg
fists
or
adc
lods
cmp
cli
sub
ss
nop
cmp
sti
loope
push
lock
les
je
repnz
in
shlb
fldt
cmp
mov
adc
bound
xchg
bound
ss
loopne
dec
sbb
adc
pop
push
cs
adc
jge
iret
xchg
cmp
sbb
shrl
xchg
pop
inc
or
stos
out
das
adc
xor
cmpsl
mov
pop
adc
arpl
mov
pop
lods
jo
rol
nop
and
cmp
pop
mov
sub
mov
pop
rolb
outsb
add
xor
xor
pop
adc
inc
dec
xchg
fcoms
jp
lahf
in
cwtl
inc
xchg
push
loop
cs
outsl
adc
xchg
cmp
mov
push
mov
lcall
fistps
dec
nop
cwtl
adc
imul
push
repz
adc
push
jne
fwait
cli
jno
cli
fmull
mov
and
push
lods
pop
push
mov
xlat
mov
mov
jecxz
xlat
and
outsb
jnp
sbbb
lret
dec
cmp
popf
inc
inc
or
push
lahf
in
cmp
mov
adc
aam
push
and
add
or
xor
push
mov
mov
ss
xchg
int3
cmovno
or
test
lret
or
cwtl
in
lret
adc
pop
lods
xchg
loope
mov
notl
les
jo
cmp
and
lods
mov
add
das
mov
mov
notb
cmpsb
orb
cli
cmp
inc
imul
push
sbb
ret
ret
pusha
jge
pop
inc
sti
shlb
push
inc
push
dec
adc
xor
insl
imul
fxch
leave
std
stc
in
jmp
mov
pop
dec
dec
jge
insl
imul
fxch
leave
std
stc
in
jmp
mov
pop
dec
inc
jge
insl
insl
sbb
cmp
int
stc
stc
in
loopne
popf
mov
imul
or
jmp
push
stc
in
sahf
ljmp
rcll
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
shlb
arpl
push
jecxz
xchg
pop
icebp
dec
xchg
xor
jecxz
shll
adc
xor
lahf
push
jecxz
xchg
xor
add
inc
adcl
arpl
push
mov
mov
imul
popa
push
cmp
xor
and
pop
pusha
jecxz
mov
ret
js
jno
loopew
cmpl
mov
xchg
hlt
add
leave
mov
adc
jo
sub
out
inc
push
je
sub
fwait
daa
inc
aas
and
mov
add
ds
aaa
sbb
rcrb
dec
xor
sub
movsb
cmc
das
pop
mov
nop
out
add
adc
add
pop
or
stos
loopne
lahf
cmovae
and
cld
push
sub
imull
pop
xor
sub
into
pushf
rcl
jle
outsl
xor
cmp
sub
jae
add
add
insb
das
push
sub
pop
pushf
repnz
push
dec
xchg
jecxz
xchg
cli
ret
xchg
ret
push
xor
xchg
arpl
push
jecxz
ja
sti
and
repz
add
mov
mov
mov
cmp
and
pop
mov
xchg
push
mov
insl
rcrb
inc
ret
cmpsb
popa
adcl
inc
inc
testb
mov
xchg
jae
sbb
mulb
mov
cmp
and
repz
jecxz
shll
adc
and
repz
jecxz
xchg
xor
add
inc
jecxz
shll
adc
and
xor
and
cld
rorb
je
push
sub
sti
adc
pop
frstor
cltd
leave
loop
add
sub
push
inc
idivl
xlat
shrb
int3
push
push
xchg
pop
addr16
push
sbb
dec
enter
bound
mov
inc
adc
pop
aam
xchg
in
sub
add
addr16
xchg
lahf
outsl
pusha
popf
push
nop
in
adc
xchg
push
enter
popf
add
popf
scas
adc
jns
sub
shll
or
or
pop
inc
jl
movsb
cli
xor
popf
mov
clc
sbb
in
faddl
xchg
mov
jle
xor
push
add
pushf
movsb
xor
sbbl
add
xchg
out
aam
add
mov
leave
mov
and
dec
cmc
sbb
mov
fs
js
es
rorl
notl
mov
sub
orl
insl
xchg
cmp
popf
xchg
das
sub
jno
aad
dec
les
sub
push
pop
xor
rol
push
jecxz
mov
xor
xor
adc
jp
rorb
adc
mov
pop
inc
mov
xor
lock
add
mov
outsl
mov
mov
flds
push
mov
hlt
jno
sub
aaa
xor
and
pop
jmp
jmp
or
or
dec
ret
dec
mov
fidivl
scas
sarb
inc
cmpsb
xor
fisttpll
add
mov
decb
int3
cld
xor
xchg
incl
std
repnz
xor
pop
push
rolb
mov
shlb
mov
gs
xor
dec
inc
mov
or
dec
out
push
jns
dec
mov
jo
xlat
and
ljmp
repnz
sub
fwait
jge
lret
out
adc
ds
lret
pop
cmp
daa
in
xchg
push
aaa
jp
cmp
jg
mov
divl
inc
leave
mov
add
sub
stos
addr16
push
es
call
or
je
dec
das
add
cmp
push
in
call
push
push
xchg
xchg
les
cmp
mov
pop
xchg
pop
xchg
pusha
mov
mov
inc
hlt
lea
insb
mov
mov
shrb
inc
aad
mov
into
notl
dec
loope
mov
xchg
lods
punpckhwd
sarb
roll
pop
popf
pop
lahf
lcall
add
scas
shlb
inc
ret
int
add
aad
cs
jecxz
push
and
enter
ret
out
jmp
sti
pusha
dec
lds
out
push
add
xor
mov
cmc
pop
adc
out
xchg
incb
mov
mov
shll
aad
xchg
fsub
pop
or
dec
lds
inc
ds
mov
and
pop
sub
pop
repz
call
fwait
cmp
push
mov
pop
cmp
sahf
and
sahf
insb
ds
xchg
xchg
jmp
cmp
fmul
dec
arpl
stc
adc
sbb
int3
test
jecxz
pop
inc
std
data16
notl
lret
push
push
cmpl
push
push
iret
popa
pop
in
pop
xor
ficompl
push
jae
push
je
push
shlb
mov
test
lret
push
in
adc
cltd
jne
pop
or
jo
cmc
ljmp
mov
mov
mov
test
ja
xchg
mov
mov
test
enter
shll
in
push
xchg
and
loop
stos
jbe
mov
adc
fucomi
cltd
orb
jnp
adc
lcall
insb
fistl
das
ja
pop
fdivrs
mov
and
pop
fs
sub
jbe
or
lret
popf
jmp
or
cmp
cmp
dec
sbb
scas
clc
adc
jbe
mov
inc
js
or
cmovge
imul
mov
adc
adc
enter
lods
loopne
aas
push
or
imul
xchg
or
dec
rcll
sbb
mov
mov
adc
cmp
jl
sti
sub
outsb
jp
jb
cmc
rolb
aad
inc
out
or
cmp
lcall
fs
and
or
add
add
sbb
fcoms
orl
mov
andb
push
inc
mov
push
push
or
clc
jnp
addr16
pop
inc
xchg
loope
mov
xchg
repz
or
xor
fnstcw
mov
jns
imul
imulb
hlt
fcmovbe
leave
pop
push
negl
ret
arpl
or
xchg
lret
and
ja
aad
fs
and
cmp
and
sbb
jge
xor
fwait
or
add
lret
add
lahf
addr16
lods
aaa
xchg
inc
pop
das
cmp
ss
lods
shll
push
rclb
faddl
sahf
js
jb
ljmp
mov
test
fistpll
xorb
movsl
pop
adc
dec
cmp
pop
and
jecxz
out
mov
pusha
and
das
lcall
loop
and
mov
sub
xchg
and
fildll
mov
fadds
sbb
push
rclb
sbb
in
inc
xor
rorb
clc
out
push
mov
pop
mov
dec
inc
btr
sbb
ja
inc
repz
push
sbb
mov
push
inc
dec
nop
push
mov
pop
aaa
mov
aam
cwtl
adc
out
xor
loopne
fldenv
iret
and
movsb
lods
mov
xchg
sbb
sub
xchg
sub
xchg
or
js
lret
out
push
cli
test
adc
repnz
xor
es
push
jns
mov
adc
cmp
push
xchg
mov
push
or
jbe
sahf
pop
notb
lret
arpl
icebp
je
lea
scas
addr16
adc
mov
sahf
xchg
mov
push
call
jns
adc
sbb
push
ljmp
sub
negb
push
push
mov
jl
lret
mov
dec
movzbl
adc
cmc
jb
ficoml
out
mov
arpl
sbb
xor
sti
addr16
adc
and
xchg
loopne
xchg
pop
daa
cs
cltd
sbb
sub
adc
sbb
scas
sbb
and
enter
pop
popf
enter
call
dec
mov
mov
jp
gs
icebp
insl
push
lods
adc
scas
popa
scas
orb
jecxz
cmp
ret
das
jle
clc
and
push
adc
push
aas
push
loope
in
repnz
rol
mov
push
xchg
sub
bound
adc
cs
jmp
lahf
xor
movsl
adc
xor
subb
cld
repnz
rcrl
mov
shlb
jg
sub
sub
jbe
and
cmp
fcomps
sub
fcmovnbe
aam
sub
js
rorl
mov
cmc
add
cmpsl
inc
outsb
subb
ss
mov
ja
push
pusha
lahf
ja
push
call
dec
mov
inc
mov
cmpsl
mov
push
jge
sbb
test
xchg
xchg
arpl
add
test
jb
fdivl
test
pop
jmp
dec
cmpsl
push
fstpt
stos
gs
negb
sbb
popa
mov
aam
pop
scas
mov
pop
scas
mov
shl
int
sbb
stc
fbstp
mov
ss
lock
aas
pop
pop
enter
insb
sbb
leave
xchg
push
mov
xchg
and
pop
jns
cwtl
mov
call
test
and
jns
mov
ret
int
comiss
stos
subl
out
cmpsb
adc
jmp
mov
test
lea
pop
movsl
push
notb
out
cli
call
or
jge
dec
jp
jecxz
sbb
sti
test
jno
add
ret
add
pop
jl
mov
cmp
push
dec
jge
lods
insb
pop
mov
xchg
lahf
sbb
loopne
addr16
and
lods
jae
test
inc
inc
mov
xchg
adc
por
or
mov
bound
cli
mov
mov
mov
pop
push
mov
and
xchg
push
lahf
add
sub
jne
shll
xor
mov
or
jo
jge
sbb
rcrb
sahf
adc
mov
jo
repnz
inc
mov
aas
ret
mov
nop
push
fcomps
dec
push
push
jne
out
movsl
mov
inc
es
gs
leave
mov
mov
and
int3
data16
jl
jno
ficompl
cmp
or
cmc
clc
insb
call
repz
pop
imull
sbb
sbb
notl
movl
xchg
std
mov
imulb
scas
scas
or
xchg
mulb
fcoms
mov
jecxz
inc
lret
call
push
push
sti
loope
mov
dec
cmpl
aam
xor
add
mov
cld
sbb
sub
mov
into
push
das
ret
inc
xchg
stos
insl
sub
jge
pop
pop
dec
test
pop
and
mov
jbe
xor
cmc
cmp
imul
ret
push
fwait
adc
sub
into
push
jb
out
outsl
mov
mov
rclb
add
out
inc
mov
jmp
sub
ret
inc
xchg
xor
out
mov
jmp
iret
jmp
and
lock
idivl
ror
loop
aas
and
push
add
xor
sub
pop
add
test
shlb
in
sbb
sub
out
loop
xor
sub
fldl
ds
stos
test
pop
xchg
sbbl
adc
cmp
out
xor
ret
jmp
ja
sub
sub
and
xor
cli
mov
fistpll
xor
lahf
outsb
add
xor
xchg
les
faddl
inc
add
jg
subl
insl
pusha
mov
arpl
xchg
lret
sub
push
shll
cld
mov
cmp
js
addr16
sti
popf
pop
loop
jge
mov
inc
scas
mov
cmp
jbe
negb
leave
add
sbb
sub
int3
mov
aas
nop
mov
xchg
mov
insl
push
push
out
stos
adc
xlat
stos
test
push
out
jo
or
adc
mov
in
out
scas
fdivrs
xchg
scas
cli
add
push
pop
xchg
sbb
add
adc
sub
xor
nop
adc
iret
ja
dec
ficomps
xor
jno
fs
scas
mov
or
xor
cltd
hlt
add
xchg
mov
sbb
aad
dec
je
xor
mov
xchg
inc
pop
push
cmp
adc
ljmp
iret
mov
fwait
ja
movsb
xor
sub
lods
inc
xor
rcll
mov
sbb
cmpsb
or
push
aam
push
loop
push
pushf
inc
sub
add
sbb
adc
xchg
pop
inc
push
lahf
mov
daa
pushf
jb
and
add
push
fimuls
jecxz
mov
and
and
push
xor
xor
pop
out
sbb
out
sub
or
ljmp
mov
mov
out
cmp
ja
fcomip
aas
jge
adc
sbb
cmp
fmull
cltd
jno
pop
adc
push
sahf
rol
pop
addb
aam
loop
cmpsl
sahf
add
add
lds
lahf
fldenv
jne
jo
sahf
scas
cmp
addr16
sbb
pop
lds
std
fnsave
pop
pusha
mov
lock
or
sub
jb
addr16
cltd
pop
outsl
dec
gs
or
addb
mov
int3
mov
pop
or
cmp
lods
scas
imul
aam
pop
push
out
mov
lea
jbe
fsubl
and
lods
lds
fcmovb
mov
xlat
jmp
xor
cwtl
movsl
into
or
lcall
dec
xor
xchg
aam
scas
movsl
push
ficomps
xor
clc
push
mov
mov
push
jmp
sbb
repnz
mov
std
adc
out
mov
jg
int
shll
sbb
xor
imul
push
xor
dec
iret
enter
pop
cld
mov
incb
or
lds
cmc
sbb
xchg
mov
dec
fcom
jg
bound
push
xor
lret
xor
adc
push
mov
mov
dec
push
popa
cld
mov
cs
fstps
loope
cmc
push
sub
cmp
jns
in
sbb
aam
std
or
repz
dec
dec
sbb
out
decl
adc
roll
or
pop
test
addr16
mov
add
sbb
fwait
push
hlt
xor
pop
scas
xor
ret
jne
loop
rolb
cmp
shll
inc
outsb
mov
loopne
loop
lds
mov
aas
jae
movsl
push
test
push
cmp
add
divb
clc
push
dec
xor
stc
add
clc
jle
stc
add
loop
outsb
cli
pop
sub
ret
int3
in
aaa
mulb
clc
xor
mov
mov
stc
out
jmp
jecxz
stos
ficoms
sub
rorl
test
dec
divl
cmp
jns
sub
insb
mov
sub
inc
adc
ret
das
xor
xchg
rolb
inc
pop
or
mov
pop
mov
mov
xor
loopne
mov
and
mov
sub
or
cmp
xlat
adcl
cmp
mov
lods
in
xor
adc
push
dec
add
ret
add
jno
subb
jns
cmp
nop
and
lret
pop
xor
jge
xor
add
cmp
sbb
pop
js
pop
jl
jp
mov
lods
adc
inc
or
faddl
scas
xor
pop
dec
popl
daa
out
gs
push
jmp
cmp
in
xor
mov
add
testl
cmp
inc
jmp
sbb
push
cmp
das
in
mov
mov
xchg
int
dec
stc
adc
mov
pop
adc
ret
ja
inc
mov
ret
sbbb
adc
inc
popa
incb
in
mov
loope
lret
les
ljmp
dec
mov
mov
lock
push
xor
jmp
adc
out
adc
xor
jmp
hlt
testb
int
add
call
jl
movsb
sbb
imul
icebp
or
mov
rorl
inc
adc
pop
cmp
fsts
cmp
andl
mov
js
xchg
icebp
mov
mov
cs
cmpsl
jbe
int3
inc
sbb
mov
add
and
mov
sub
ffreep
std
sub
and
add
xchg
ss
add
inc
dec
je
push
push
dec
stos
xor
mov
mov
into
into
cmp
xchg
movlps
dec
push
sbb
lods
shrb
mov
repz
cmp
or
push
std
lea
mov
and
ja
mov
add
icebp
xchg
xor
and
and
xchg
mov
cmc
je
lods
sub
adc
dec
dec
mov
or
fdivrs
ror
xor
inc
dec
add
mov
sub
pushf
cmpsl
es
das
inc
fnstenv
mov
mov
jecxz
pushf
inc
mov
pushf
cmp
loop
lock
test
fstps
cmp
loop
xor
out
jns
mov
sbb
add
test
ret
cld
ret
jle,pn
push
sahf
mov
sbb
mov
lcall
into
mov
lods
jo
leave
orl
out
lret
inc
adcb
push
int
movsb
dec
ja
rcr
add
subl
rorl
ret
jnp
add
xchg
lret
dec
push
pop
push
cmpl
repnz
xchg
out
lods
mov
repz
xorb
adc
sbb
sub
inc
adc
mov
subl
stc
inc
aam
xor
lea
xchg
mov
out
xchg
out
aad
jl
and
and
loop
aaa
mov
lcall
out
push
test
pop
mov
push
mov
cmp
mov
arpl
jo
add
xor
inc
lds
imul
sbb
imulb
mov
pop
pushf
dec
fwait
push
test
sub
or
aam
mov
aam
mov
jecxz
out
mov
mov
mov
mov
shlb
insb
pusha
xchg
jae
add
or
xor
cmpsb
cld
lods
negl
ffreep
xchg
sub
mov
pop
or
in
push
push
test
pop
cs
ja
jne
or
repz
roll
repz
mov
shlb
jne
shr
shrb
pusha
in
lcall
inc
sbb
sub
cltd
add
pop
xor
sub
sub
fsubrl
popa
imull
jmp
xor
sub
test
or
lret
adc
jp
cmp
push
xchg
clc
mov
xchg
das
mov
and
rorl
jp
xchg
cwtl
mov
jg
outsb
mov
lock
cmc
js
sub
mov
aas
adc
xor
test
leave
scas
xchg
fists
xor
repz
test
sbb
shlb
xor
mov
rcr
jns
iret
inc
outsb
and
adc
xchg
or
jnp
pop
mov
push
loop
mov
js
sbb
scas
rorl
cs
xchg
pop
mov
and
movsb
cmp
movsb
lods
loop
add
inc
cmp
adc
icebp
dec
xor
fistpl
div
push
add
sub
pop
sbb
add
sbb
sub
jl
leave
sti
xchg
add
iret
inc
push
push
je
rorl
scas
pusha
push
push
push
dec
push
daa
lret
xor
adc
jmp
xor
mov
and
mov
adc
je
ljmp
xor
xor
or
push
outsl
clc
nop
sbb
aam
push
adc
pop
cs
cmc
mov
dec
and
inc
pop
jne
es
mov
sub
mov
lea
sub
addl
jbe
push
test
rcrl
mov
in
push
roll
push
mov
stos
scas
sbb
xorb
imulb
sbb
and
mov
xchg
cmc
xchg
sub
sub
cmpsl
int
and
inc
mov
and
cmp
movsl
push
dec
xor
sti
push
adc
lcall
mov
in
inc
shrl
outsb
shlb
bnd
stos
fsubrp
in
cmp
sbb
push
push
aas
mov
adc
pop
jb
arpl
sub
or
cmp
iret
fbstp
insb
mov
jne
lea
mov
inc
sti
lret
fstl
in
adcl
cld
and
push
mov
lcall
dec
insl
sub
mov
cwtl
mov
mov
xor
lret
nop
mov
or
lcall
pop
add
xlat
in
sbb
outsb
mov
shl
divl
cmp
xor
pop
xor
out
or
repnz
jns
mov
jo
imul
sarb
adc
inc
add
ficoml
jge
out
add
ror
cmp
lods
mov
mov
sub
sub
sbb
inc
hlt
hlt
cmp
xchg
shrl
ret
test
add
nop
and
sbb
pusha
sub
shlb
cmpsb
aaa
push
push
mov
aam
rcr
stos
ss
adc
mov
aaa
jb
or
fldenv
jg
loope
xchg
inc
xor
push
pop
lods
shl
ficoml
dec
gs
mov
aad
inc
pop
js
adc
sarl
ret
fistpl
mov
push
lea
into
add
fstl
dec
jmp
pop
test
pop
rclb
cmp
ss
jo
pop
mov
pusha
call
cmp
loop
es
rcrb
and
jmp
push
dec
test
adc
rcrl
add
subb
mov
xchg
cs
mov
fistps
mov
jo
jle
inc
jae
mov
push
cmp
inc
inc
fwait
outsb
shll
stos
xlat
mov
das
fcmovnbe
jo
xchg
inc
cltd
lock
andl
adc
jecxz
shll
adc
and
repz
jecxz
xchg
xor
add
inc
jecxz
shll
adc
and
xchg
shl
inc
add
andl
jae
jecxz
shll
adc
lret
add
lahf
arpl
xor
add
mov
mov
cmp
jl
shlb
pop
push
sub
push
push
jo
sbb
mov
aad
movsl
pushl
iret
gs
jne
inc
pop
push
jg
jecxz
pop
adc
pop
lahf
aad
movsl
nop
mov
test
jne
inc
mov
or
add
pusha
int3
mov
mov
movsl
test
xchg
stos
cld
iret
adc
adc
inc
push
pop
sub
in
inc
sahf
xchg
sub
pop
ror
sub
bound
rclb
mov
jle
xchg
stc
pop
std
or
cmp
sub
rcr
les
ds
sub
add
out
iret
stc
dec
les
loopne
aad
push
add
xchg
fbld
push
aas
xchg
push
mov
jg
pop
pop
movsb
adc
jmp
sub
mov
jge
push
pushf
ss
mov
pop
adc
dec
in
std
mov
cmc
lods
xor
xor
lea
push
cmp
mov
mov
mov
adc
xchg
dec
cmpsb
aas
jne
inc
fwait
push
add
add
cmp
imul
shll
mov
add
inc
or
push
xchg
sub
jmp
out
nop
hlt
fwait
loopne
in
adc
outsb
es
sub
jle
inc
xor
xchg
ficoml
call
in
mov
jne
add
insb
pusha
sbb
dec
in
cmc
scas
lds
mov
test
xchg
iret
gs
jne
inc
pop
push
jg
outsl
add
mov
aad
movsl
pushl
iret
gs
adc
fdivrs
mov
stc
push
cmp
ljmp
and
mov
add
outsb
push
in
mov
dec
and
push
test
and
dec
push
lds
push
hlt
jl
adc
fadd
push
sub
shl
iret
pop
inc
es
je
hlt
xchg
and
inc
push
push
popa
loopne
jp
mov
addb
hlt
inc
js
cmp
pop
neg
jae
aad
lods
jg
add
jmp
mov
inc
mov
aam
cmpsb
dec
mov
or
xchg
push
in
mov
adc
out
das
fdivl
inc
pop
scas
addl
lods
push
mov
addr16
mov
addr16
fsubrs
rcrb
add
mov
test
sub
jg
sbb
imul
mov
push
cwtl
add
mov
xchg
mov
cs
lds
popa
cmp
and
or
push
xor
mov
cmc
imul
mov
or
ljmp
xchg
fsubrl
push
inc
jge
fmuls
or
pop
push
or
fwait
xor
pop
or
xchg
pop
fdivl
sub
test
das
addr16
aaa
out
add
jl
and
jo
inc
lret
xor
sub
inc
and
xor
and
push
and
lahf
aaa
xchg
js
repz
push
out
mov
jle
sbb
mov
dec
fpatan
lahf
jg
repz
outsb
xchg
pusha
aam
in
shll
andl
into
jb
adc
in
pusha
fiadds
out
fsubr
mov
push
sbb
inc
stos
cltd
pop
shl
xorb
pop
fcmovnbe
inc
fldcw
clc
add
out
icebp
inc
sub
lahf
push
lea
mov
rcl
xchg
cmpsl
xchg
stos
movsb
and
jp
jl
or
push
mov
mov
mov
mov
jbe
and
adc
xchg
out
cmp
jmp
aas
js
iret
cmpsl
mov
cmc
jnp
inc
jae
mov
jb
dec
ljmp
inc
out
jl
es
mov
cmp
adcl
pop
test
xor
or
icebp
jmp
mov
and
push
mov
xor
ret
mov
cmp
jb
mov
sbb
pop
fisubrl
push
mov
pop
mov
mov
sahf
lods
adc
ret
inc
ljmp
cmpsb
lret
rcrb
jb
fldt
ljmp
dec
jne,pt
mov
shl
paddsw
int
jno
test
js
xor
lret
jb
jge
repz
dec
fildl
ljmp
jecxz
adc
ja
xchg
test
sub
jle
insl
mov
sbb
sub
dec
insb
bound
call
ja
ds
adc
mov
pop
gs
sub
outsl
sbb
decl
jno
mov
cmpsl
cltd
inc
add
cmp
fadd
cmpsl
add
jbe
mov
mov
dec
fwait
mov
movsl
jmp
std
pop
xor
jg
jle
dec
xchg
mov
inc
sub
scas
push
mov
dec
lock
out
xchg
shrl
aam
outsl
shlb
jle
mov
in
loopne
aad
out
adc
push
sub
and
jecxz
add
push
push
test
fstpl
jp
xchg
push
lods
mov
cld
js
adc
sbb
add
sub
repz
ljmp
bound
sbb
imul
int
pushf
jae
test
cmp
hlt
shlb
cmp
and
fsubrs
mov
frstor
jle
fsubr
aaa
aam
push
insl
cmp
enter
push
xor
dec
outsl
dec
cmp
jo
and
pop
test
int3
outsb
mov
popf
cmp
jecxz
lods
ret
lret
dec
setns
inc
out
mov
pop
mov
inc
inc
xchg
fisttpl
cmp
push
pop
stos
mov
adc
lahf
in
cmp
jae
pop
movsb
and
outsl
rolb
fcompl
out
inc
popa
sub
xor
mov
sarb
bound
jne
push
cwtl
pusha
xchg
dec
dec
pop
sbb
xor
hlt
sahf
add
cmp
and
in
pushf
mov
insl
xchg
xchg
fwait
mov
mov
jmp
imul
popf
push
cmp
out
aas
pop
cmp
xor
std
repz
and
mov
int
scas
cwtl
sub
adc
add
sbb
push
leave
pop
notl
cmpsb
and
pop
xor
xchg
or
pop
sbb
and
out
mov
xor
push
insl
sub
jge
popf
push
sbb
xchg
in
shlb
push
push
lcall
cmpsl
sub
in
mov
and
out
cld
push
adc
ja
sbb
call
inc
add
sbb
adc
jne
pop
clc
lahf
jl
xlat
lds
and
mov
cmpsl
stos
fdivrl
ficompl
mov
xlat
mov
cmp
pop
inc
mov
xchg
andl
enter
sub
xor
xor
sbb
ds
aaa
jge
inc
arpl
xlat
repnz
mov
inc
xchg
sub
popf
call
scas
jbe
rcr
mov
imul
cmp
rorl
jl
insl
xchg
insl
pop
push
outsl
lock
push
push
gs
test
and
loop
stc
jl
lods
roll
add
lock
adc
cmc
or
pop
loope
sbb
loopne
stos
sar
and
ficoms
fwait
jno
dec
into
jl
and
dec
adc
cli
shll
adc
test
mov
enter
push
mov
adc
in
jo
cmp
mov
xchg
scas
in
mov
xchg
cmp
clc
push
stos
mov
loopne
outsb
ds
push
iret
mov
mov
or
pop
jmp
xchg
aad
cld
sub
inc
gs
scas
shrb
mov
dec
lcall
clc
adc
mov
lea
or
inc
adc
lret
inc
push
mov
aas
sbb
mov
enter
cmp
rol
cwtl
test
lret
cmp
cli
mov
pop
inc
les
adc
xchg
inc
ja
sub
fisttps
mov
scas
movsl
jns
add
mov
or
imul
lods
ficoms
inc
pop
fdivrs
into
inc
cmp
subb
test
push
xchg
mov
pop
push
pop
sub
shll
add
dec
bound
data16
jne
fucom
push
daa
scas
dec
cmp
out
std
dec
jbe
enter
jecxz
inc
sbb
dec
ja
in
and
pop
outsl
lcall
push
mov
inc
dec
xchg
jbe
fdivs
cmp
xor
add
shll
xchg
fsubs
xchg
bound
xor
and
cmp
mov
or
cld
mov
aam
dec
clc
js
stos
jle
mov
stc
pop
int3
inc
rolb
mov
das
jo
and
adc
cmp
divps
dec
ret
dec
insl
test
xchg
pusha
and
xor
repz
sub
xor
push
or
or
repz
scas
mov
mov
sub
mov
int3
push
push
pop
xlat
mov
out
xor
int
or
sub
or
outsb
or
sarl
dec
gs
lret
add
cmp
pop
jae
pop
pop
and
dec
mov
inc
mov
out
mov
nop
jecxz
outsl
loopne,pn
in
jp
dec
lds
mov
mov
cmc
sbb
xor
int
je
jecxz
xor
pop
mov
cltd
lahf
movsl
jo
insl
scas
out
sbb
nop
pop
repnz
mov
cltd
or
in
mov
shll
mov
push
xchg
pop
push
mov
lds
jg
xchg
dec
shrl
gs
xchg
jecxz
and
gs
fwait
jge
out
jle
aam
mov
or
mov
or
outsb
pushf
fistl
enter
outsl
fstl
dec
and
or
mov
push
jle
push
inc
mov
dec
mov
cs
ret
pop
push
gs
dec
mov
dec
dec
adc
sub
sub
xlat
stos
sbb
jp
lods
push
mov
dec
in
loop
mov
ja
pop
daa
pusha
sub
mov
mov
in
and
mov
ljmp
inc
and
xchg
xor
push
fbstp
frstor
fidivrs
or
orl
cld
push
das
jmp
pop
into
lret
pop
jnp
in
repnz
add
push
icebp
cmp
mov
lock
push
sbb
ret
and
loop
aad
dec
mov
lea
xchg
cmp
jbe
fcoms
mov
mov
mov
fsts
and
rcrl
pop
push
int3
or
dec
int3
pop
mov
and
aam
movsb
sahf
fcom
fdivr
xchg
nop
out
in
cmp
scas
or
lods
rolb
jmp
mov
add
add
fstl
lods
loopne
cmpsl
cmc
sub
dec
insb
push
pop
insb
mov
adc
dec
xchg
test
mov
mov
sub
xchg
mov
push
push
mov
pop
sysexit
jmp
mov
dec
mov
cmp
jecxz
push
push
sbb
push
jp
fistpl
scas
mov
cmpsb
cmp
push
xchg
adc
fidivs
xchg
pop
lds
pop
mov
sbb
movsl
mov
push
or
sub
imulb
push
addr16
adc
jmp
add
add
adc
mov
cmp
add
sub
arpl
shlb
dec
mov
inc
mov
pop
pop
fsubr
push
nop
outsb
test
pop
adc
push
push
xchg
ljmp
mov
mov
nop
out
jns
mov
sbb
cmpsl
mov
rorb
sub
cmp
xchg
insl
adc
pop
mov
jmp
bound
add
adc
sbb
push
xlat
push
ss
push
mov
cmp
jmp
add
loop
rclb
sub
dec
sbbb
push
inc
test
sub
sub
jecxz
mov
pop
xor
pusha
mov
pop
push
and
and
out
cli
inc
mov
jbe
push
push
and
push
sar
stos
enter
push
sub
outsl
pop
mov
lds
add
xlat
pop
ret
fsubr
xchg
sbb
or
xchg
lods
test
negl
and
stc
inc
mov
cmp
inc
cltd
push
inc
rclb
daa
jnp
iret
xchg
jbe
pop
jo
sarl
int
sbb
insb
call
hlt
and
inc
or
pop
jg
imul
repnz
and
fbstp
addr16
and
and
xchg
pop
test
fs
xchg
push
gs
push
int3
sbb
push
jns
pop
or
in
mov
cli
adc
imul
fbstp
scas
pop
add
ss
pushf
pop
mov
mov
xchg
into
lods
mov
int3
sbb
int
dec
jno
add
mov
shrb
fisubl
xchg
imul
push
xlat
cltd
mov
cld
ret
jo
mov
jle
jge
pusha
in
in
and
mov
cltd
sbbl
int
in
sbb
mov
out
sbbb
lahf
sub
mov
push
mov
dec
enter
ljmp
negb
cld
push
in
adc
stos
inc
loope
cmpsb
mov
push
ja
xchg
mov
test
dec
lret
cmp
pop
pusha
scas
js
dec
pop
jae
xor
adc
mov
sub
rcll
in
cmp
cmpsb
aaa
pop
nop
ja
xor
jbe
inc
cmp
andb
push
sbb
fwait
sahf
lcall
in
jecxz
mov
std
daa
loopne
int
mov
sbb
ret
push
insl
fisubl
cmpb
and
push
xor
inc
jae
int3
xchg
cmpsl
pop
mov
mov
adc
or
loopne
adc
inc
pop
dec
xchg
sbb
mov
test
add
insb
ret
xor
sub
fnstsw
hlt
cs
in
or
pop
shrl
adc
ds
or
test
cmpsb
ss
jb
daa
sub
push
pusha
push
lds
xchg
pop
xorb
sub
jg
add
mov
movsb
imul
push
jp
mov
scas
imul
aad
les
mov
sbbb
pop
mov
lea
stos
out
fsubr
test
cmpsb
xor
mov
push
lods
push
out
ja
and
cmp
inc
lret
pop
inc
dec
sub
aas
jno
adc
sbb
testb
fs
fcmovbe
or
test
mov
scas
xlat
sbb
adc
xchg
sub
jl
dec
adcl
sahf
dec
dec
pop
push
movsb
idivb
cmp
cwtl
jmp
pusha
iret
sub
jno
cli
aam
add
fadd
pop
subb
insb
sub
test
mov
les
cmp
inc
push
or
pop
in
cltd
cmp
bound
pop
in
jnp
mov
std
jb
jno
pop
in
dec
mov
or
xor
pop
jo
cmp
std
mov
xchg
subl
adc
movb
cltd
inc
mov
and
gs
mov
mov
loopne
inc
clc
js
gs
icebp
ljmp
cli
rorb
jne
cltd
push
fisttps
push
movsl
mov
ss
or
sbb
mov
jecxz
shll
imulb
pop
pop
mov
push
data16
lcall
push
lods
cwtl
cmp
inc
movsl
fcmovbe
xchg
jo
sbb
xchg
ret
mov
lret
sti
outsb
dec
dec
cmp
mov
jmp
les
jbe
mov
out
jbe
jp
ja
test
lods
shl
enter
inc
push
mov
inc
xchg
push
xlat
push
daa
adc
push
mov
mov
add
jge
orb
pop
shrl
popf
push
sub
xchg
subl
orb
pushf
lock
arpl
mov
add
dec
les
mov
ficoml
sbb
les
push
test
mov
repz
andl
rcrb
bound
sub
or
mov
xchg
int
insl
pop
adc
jmp
sbb
adcb
inc
decb
fwait
inc
incl
stos
inc
xor
loopne
inc
fdivp
push
jno
sahf
lds
mov
gs
xor
enter
aas
test
and
dec
cli
mov
ss
jo
mov
add
mov
stc
jb
mov
leave
lcall
xchg
cmc
or
inc
xor
int3
les
jno
mov
inc
out
add
mov
lret
xor
fs
sbb
dec
sbb
call
int3
and
frstor
in
pop
cs
and
xchg
jno
cld
pop
data16
out
pop
call
xchg
and
cmpsl
outsl
lock
mov
mov
js
notl
cmp
stos
jno
orl
pusha
and
das
int
rcr
sub
rorl
pop
cltd
stos
in
adc
shrb
jl
inc
stos
cmp
xor
or
cmp
inc
ret
data16
adc
push
push
jns
add
out
jg
in
mov
mov
in
push
or
inc
jmp
sbb
mov
stos
je
clc
mov
js
lcall
xor
lret
mov
std
std
jmp
cmp
ficoml
sbb
jmp
jb
cmp
xchg
add
inc
xchg
jge
cmpsl
or
add
repnz
cld
out
cld
mov
fsubr
mov
add
pop
rcll
add
xchg
push
shlb
shrl
dec
inc
fisttpll
dec
sbb
sbb
fiadds
adc
xor
out
sbb
adc
dec
mov
stos
fldt
loope
mov
mov
roll
ret
insl
cs
adc
pusha
es
dec
and
and
scas
out
pop
sbb
xchg
jb
or
repz
mov
pop
and
xlat
enter
push
std
loopne
subl
pushf
add
out
mov
adc
pushf
dec
popf
dec
scas
cmp
sub
jle
ja
jns
fsubr
jns
push
xor
push
and
pushl
data16
jno
jb
cmp
shlb
jbe
rcr
pushf
mov
xchg
dec
mov
xchg
xor
mov
dec
test
fnsave
cmc
mov
mov
xor
enter
cmp
scas
cmp
mov
xchg
mov
add
insb
add
fldenv
jo
mov
stos
int3
scas
push
dec
or
rcrl
out
test
pop
lds
bound
fistps
shr
inc
int
addr16
cli
cmp
adc
nop
cmp
dec
xorl
mov
and
mov
jbe
pop
inc
ret
push
sbb
sarl
gs
scas
icebp
push
lcall
dec
imul
mull
xor
arpl
pop
scas
sahf
push
ret
out
push
jae
jmp
call
pop
or
mov
iret
lods
stc
fildl
dec
xchg
divb
mov
fcom
xchg
add
lods
mov
push
push
or
xchg
mov
add
stos
mov
stos
pop
pop
dec
test
xor
mov
arpl
loopne
mov
outsb
jnp,pn
sub
sub
stc
mov
xor
sub
mov
in
js
mov
pop
repnz
push
xor
jg
jmp
push
jmp
in
and
cmp
clc
adc
xchg
loop
outsl
dec
std
cld
mov
sbb
cmc
jnp
or
gs
push
sbb
adc
xchg
add
daa
or
int3
lods
cs
cli
jp
into
inc
shlb
test
call
movsl
pop
mov
xchg
pop
pop
cmpsl
jo
lods
sub
inc
dec
gs
ss
outsl
lds
xor
mov
mov
popa
mov
lret
push
or
iret
xchg
pop
and
int3
push
xorps
jmp
mov
xor
lahf
imulb
push
movsb
pop
cli
lahf
aaa
mov
nop
xorb
adc
daa
lcall
std
test
mov
ret
adc
test
adc
ret
scas
mov
pop
cmp
orb
jmp
fimull
push
mov
scas
es
sbb
icebp
cmp
jne
jb
outsl
test
out
sub
sbb
pop
aam
or
xor
inc
cld
jge
stos
cmpsl
lods
sub
and
in
imulb
fcmovbe
test
add
mul
xor
gs
lds
int
pusha
mov
stos
sbb
addr16
xchg
mov
sbb
nop
jl
andb
int3
push
loope
push
inc
push
push
mov
iret
int3
enter
mov
out
pushf
ljmp
dec
lcall
sub
jne
xchg
popf
mov
pop
add
add
or
mov
or
aas
xchg
dec
push
dec
adc
ficoms
adc
mov
popf
lcall
decl
xor
arpl
lcall
sub
sysenter
or
rolb
mov
in
push
push
dec
adc
out
fcomp
adc
adcl
subl
scas
add
and
and
aam
sbb
push
rcr
mov
jl
test
xchg
insb
push
push
jge
push
xchg
dec
imul
das
jb
sub
push
mov
push
incb
push
int3
jmp
xchg
hlt
sbb
jns
adc
imul
nop
inc
sbb
mov
mov
aas
movsl
or
add
pop
lcall
testl
sbb
sbb
mov
stc
inc
rcr
push
movsb
mov
ret
mov
jge
inc
test
push
ds
xchg
cmc
adc
repz
lahf
add
sub
mov
mov
fcmovnb
adc
enter
imul
aaa
sub
repz
addr16
mov
stos
lock
inc
add
scas
sbbb
jo
push
rcrb
jecxz
stos
cmp
sub
jno
push
jns
push
ret
fcomps
inc
gs
in
roll
xchg
mov
push
pop
ds
pop
mov
ds
push
iret
push
int
test
rorb
cmpsb
std
faddl
imul
fstpt
adc
xchg
jb
sbb
aaa
stos
pcmpeqw
sbb
lahf
jne
hlt
dec
cmc
fisttpll
adcl
and
shll
xchg
movsl
sub
mov
jns
and
sahf
into
std
bound
dec
jo
and
pop
jae
int
aaa
lds
lar
inc
mov
sahf
push
sbb
fwait
stc
imul
scas
pop
dec
xor
es
fwait
movsl
push
imul
in
mov
orb
jae
das
jp
push
jg
outsl
add
mov
aad
movsl
pushl
iret
gs
jne
inc
pop
push
jg
outsl
add
mov
aad
movsl
pushl
iret
gs
jne
inc
addr16
jg
movl
lahf
aam
movsl
pushl
iret
gs
jne
inc
pop
push
push
and
fists
add
shlb
adc
insl
xor
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
das
cmp
pop
or
sub
cmp
mov
lahf
out
std
ljmp
das
cmp
pop
or
dec
pop
pop
dec
scas
mov
lahf
out
std
in
iret
fstp
int
cmp
pop
or
dec
pop
pop
dec
scas
cmpl
xchg
mov
cmp
jl
insl
loope
mov
movsb
scas
insl
mov
int3
fisubl
xor
movsb
xor
xchg
repnz
test
xchg
inc
push
test
int
popf
sbb
frstor
xor
sub
xor
outsb
out
pop
mov
scas
jge
push
jo
cmc
dec
dec
std
jbe
stos
and
int3
push
ds
sbb
sbb
outsl
jge
mov
sbb
add
jb
scas
xchg
mov
shlb
daa
lock
je
dec
mov
inc
lods
lahf
popa
push
mov
das
fmul
popf
sarb
js
mov
outsb
mov
aam
incl
mov
roll
sbb
enter
cmp
pop
or
dec
pop
pop
dec
scas
mov
lahf
out
std
in
iret
fstp
mov
push
push
jp
add
ss
cmp
cmp
in
repz
nop
xchg
xchg
mov
test
jl
addr16
sbb
adc
xor
lret
ror
mov
fbld
imul
adc
dec
pop
pop
dec
scas
mov
lahf
out
std
in
iret
fstp
int
cmp
pop
or
dec
pop
pop
dec
scas
mov
lahf
out
std
in
iret
fstp
int
cmp
cmp
mov
out
jo
jge
and
pop
test
fmul
aam
pop
lcall
rcrb
loop
ret
fwait
mov
xchg
sahf
aas
mov
and
int
mov
inc
lods
int
jecxz
push
sbb
xor
rolb
sbb
das
ss
cmp
lds
pop
fildll
test
xorl
popa
test
in
aam
js
cmpsb
int
sti
in
xchg
testl
pop
push
pop
shr
icebp
mov
sbb
mov
add
test
xchg
jmp
movsl
outsl
cmp
or
icebp
and
movsl
mov
lahf
ja
push
lea
iret
pop
mov
lret
lahf
sahf
and
jp
sub
dec
adc
scas
lea
out
lahf
push
jne
mov
cwtl
add
mov
cmp
inc
jg
adcb
test
sbb
lds
push
mov
pop
test
sbb
iret
adc
mov
pop
or
addr16
imul
lcall
cltd
mov
mov
mov
push
and
adc
and
push
out
test
xchg
xchg
enter
cmpsl
mov
data16
pop
inc
and
xor
lds
cmp
cmpsl
aam
sbb
jl
or
jp
jb
sbb
call
rclb
mov
out
leave
cli
or
push
dec
cli
addr16
push
int
int
cmpsl
subb
ficomps
lret
push
out
ficoml
pop
sub
fildl
jecxz
sti
aaa
push
or
push
xchg
negb
jne
fwait
dec
out
dec
pop
jge
aas
xchg
xor
adc
les
xchg
mov
int3
fsts
lcall
dec
jbe
lock
stos
repz
fwait
and
inc
dec
adc
cld
jl
sub
into
dec
pop
jmp
aaa
dec
aad
sbb
xchg
data16
pop
mov
in
push
xlat
mov
incb
aad
movb
jno
or
cmc
mov
xchg
out
sub
fwait
lret
rol
data16
and
je
cli
mov
shlb
lahf
je
das
xlat
pop
dec
push
ja
jnp
hlt
das
xchg
mov
data16
das
sbb
and
insb
jg
mov
loopne
mov
and
std
mov
lods
sub
dec
sbb
push
or
bound
xor
sub
stos
push
test
lret
leave
fwait
lret
xchg
les
clc
jg
cmp
push
adc
insl
movsb
out
xor
and
divb
and
ljmp
cmp
xor
cmp
fistpll
shrb
cltd
push
xchg
ret
mov
dec
mov
sub
nop
sahf
dec
aas
xor
aaa
ljmp
iret
pushf
adc
fdivrs
xchg
cmp
dec
dec
addl
pop
mov
pop
push
mov
inc
sbb
dec
aam
mov
lret
and
mov
fsubrs
push
clc
pop
mov
xchg
icebp
dec
push
adc
vpunpckhwd
add
mov
test
jmp
data16
pop
in
pop
push
mov
mov
fs
mov
js
cmpsb
dec
xor
jb
inc
push
call
mov
sbb
push
stos
out
jbe
nop
in
jle
sub
shrl
mov
xor
add
add
or
fsub
rcrb
mov
cs
rcll
jbe
shrl
in
sarl
lret
pushf
fsub
shrl
cmpsl
imul
cmp
addr16
stc
loope
aad
mov
aad
mov
mov
sti
hlt
movsl
xchg
mov
cmp
stc
mov
lcall
push
push
push
outsb
jne
jmp
out
push
dec
and
inc
dec
or
adc
std
test
xchg
leave
xchg
divl
movsb
mov
xlat
in
pop
cmp
mov
push
push
xor
fsts
cmp
mov
push
push
paddd
test
ret
adc
push
adc
mov
xlat
or
or
sbbl
lret
jecxz
sub
sbb
mov
push
adc
shr
mov
mov
xor
adc
xchg
repz
fs
cmp
popf
mov
popa
inc
lock
xchg
xchg
mov
mov
inc
cmpsl
dec
mov
xlat
adc
mov
daa
mov
adc
addr16
or
jne
in
mov
push
mov
loop
dec
push
adc
iret
out
fisttpll
repz
popa
test
mov
in
jge
pop
stos
cmpsl
sbbb
inc
jle
push
out
rcll
hlt
dec
jge
adc
in
sbb
push
fbstp
je
pop
icebp
dec
adc
jge
and
cmp
icebp
cli
rcrl
inc
imull
pop
cmp
popf
mov
ret
sub
repnz
inc
jmp
xchg
aas
mov
lret
push
mov
add
aam
or
pop
add
loope
in
icebp
daa
ficomps
rorb
sahf
dec
daa
fldt
movsl
add
mov
adc
popa
popa
cmp
add
pop
repz
ss
fnstsw
add
std
je
or
mov
or
add
push
mov
cmc
loope
ds
mov
in
jle
sbb
test
and
test
mov
cmp
jae
push
push
outsb
adc
add
scas
insl
es
jle
shrl
clc
pop
mov
popa
xlat
repnz
subl
sahf
rcrb
mul
scas
add
inc
sub
rclb
dec
cmp
icebp
stc
mov
movsl
mov
pop
mov
and
adc
leave
mov
add
xchg
addb
xrelease
dec
gs
adc
data16
xchg
orb
lods
adc
mov
adc
sbb
into
push
shlb
jae
repnz
xor
in
shr
xor
push
mov
out
mov
cmp
ret
push
xor
jl
enter
push
cmpsb
push
pop
bound
dec
mov
ds
pop
mov
mov
outsl
adc
dec
lods
adc
pop
mov
fprem1
xor
out
jbe
cmpsb
fidivrs
push
js
mov
adc
fstps
das
ja
dec
xchg
mov
pop
lret
lock
jnp
jb
mov
popa
je
das
sub
push
and
mov
jb
nop
xor
jo
mov
movsb
or
shlb
stc
sbb
shlb
sbb
add
xchg
mov
push
ret
imul
cwtl
push
inc
jb
xor
mov
or
adc
inc
dec
dec
stos
mov
or
shl
stos
ds
mov
and
shll
pop
push
jnp
pop
test
dec
xor
out
push
rcr
mov
imul
and
xor
fistpll
mov
dec
mov
gs
jecxz
add
mov
push
fisubl
add
jns
rol
dec
ja
pop
popa
movsb
jae
out
mov
ret
mull
push
dec
dec
aaa
ja
push
dec
and
addr16
mov
js
test
jmp
ret
es
rorl
test
xlat
jnp
loopne
sarl
sbb
pop
pop
inc
cmpsb
in
push
clc
push
hlt
jbe
ficomps
les
cwtl
lods
and
idivl
push
cmp
daa
sbbl
mov
push
es
mov
fcmovne
pop
and
jns
mov
repnz
add
pushf
mov
cld
enter
shrb
jle
loopne
shll
dec
dec
pop
push
or
inc
cmp
jge
jl
dec
xchg
arpl
mov
jmp
mov
push
jne
test
push
mov
sbb
jl
popfw
xchg
inc
push
lcall
jle
iret
arpl
iret
std
sbb
enter
addr16
push
adc
stos
push
add
push
and
movsl
xchg
add
jo
sbb
das
mov
int3
cmp
or
fistpll
add
repnz
mov
shrb
xchg
cld
sti
sub
ret
repz
sub
mov
jae
push
mov
iret
in
ret
xor
stos
ret
sarl
incl
mov
andl
xchg
dec
repnz
cmpsb
mov
mov
into
mov
into
scas
add
sbb
loope
sub
dec
je
inc
mov
mov
sub
rcll
sub
cmp
adc
out
sti
dec
mov
sarl
adc
mov
ret
push
jbe
sbb
leave
insb
jno
add
mov
pop
cmc
out
or
push
scas
stc
pop
mov
bound
div
pop
test
jno
mov
lods
dec
scas
xchg
and
sub
mov
out
hlt
mov
add
shrb
cmp
dec
in
icebp
ss
cmp
or
cmp
adc
popa
and
popf
or
cmp
daa
xchg
es
test
push
shl
mov
loopne
adc
fs
out
sbb
dec
in
cmp
iret
in
sbbl
ret
rclb
pop
fstl
push
dec
mov
sarb
mov
push
icebp
insb
cltd
lret
jb
cmpsl
out
add
ret
jg
mov
cmpsl
daa
divps
in
or
pop
and
aas
outsl
sbb
push
int
insb
fistpl
mov
lahf
mov
pushf
cmpsl
mov
and
loop
fists
jecxz
repz
adc
adcl
pop
mov
sub
popa
sub
mov
popa
sub
jo
lock
push
or
inc
out
leave
je
pop
mov
fcomip
adc
fdiv
sub
mov
ss
rcrl
aas
test
add
push
repnz
xchg
xchg
fwait
pop
sbb
jb
pop
inc
push
push
outsb
int3
push
add
outsb
sbb
jno
fwait
outsb
pop
mov
mov
pop
xchg
adcl
imul
cmp
inc
movsl
out
sbb
repz
mov
mov
rorb
add
fwait
inc
push
cmp
pop
fs
ljmp
jge
mov
iret
jo
pop
mov
and
mov
int3
repz
out
repnz
scas
pop
inc
test
adc
push
jmp
out
sbb
xchg
nop
sub
mov
mov
popl
push
push
leave
enter
repnz
add
inc
fdivs
clc
sbb
jecxz
gs
mov
cmpsb
fst
das
inc
push
mov
dec
fcmovne
iret
add
jle
sub
lret
test
inc
in
cmp
pushf
cmp
das
push
fwait
stos
push
scas
jns
sub
pusha
movl
cwtl
addl
roll
inc
and
cli
cltd
int
cmpsl
or
cltd
sbb
mov
xchg
mov
sub
mov
cmpsl
les
out
mov
dec
mov
jno
stc
jge
adc
std
mov
xor
lret
pop
or
scas
pop
xchg
xchg
push
outsl
cld
lret
add
cmp
inc
jg
inc
shlb
lods
push
xor
cld
fbld
push
mov
dec
sub
mov
loopne
mov
sbb
pop
inc
pop
dec
mov
add
loope
jl
or
divl
lret
fisubrl
loope
sarl
add
jle
test
call
aaa
or
scas
mov
lahf
xlat
test
pop
out
add
test
int
clc
mov
stos
gs
outsl
cld
fldl
mov
ja
and
cli
mulb
push
sarl
enter
mov
pop
jbe
mov
out
mov
mov
aaa
mov
in
lret
dec
jne
call
imul
sub
cmp
jle
cwtl
enter
mov
and
jbe
lret
add
pop
mov
das
dec
sbb
xor
lret
mov
data16
std
jmp
sbb
cmp
push
int
stc
andb
jne
sahf
insl
pusha
lods
cmp
lock
inc
mov
or
lea
xor
outsl
sub
add
push
pushf
mov
out
test
sub
ljmp
data16
int
addr16
mov
mov
mov
cmpsb
repnz
xor
ret
loopne
rcll
add
mull
cmp
mov
lock
int3
mov
mov
pusha
adc
adc
scas
outsb
xlat
lods
dec
fndisi(8087
xorl
iret
sahf
push
jne
push
data16
int
int
inc
ljmp
call
in
or
mov
dec
jle
add
xor
into
jecxz
mov
jmp
inc
mov
jae
in
mov
in
decl
or
push
mov
push
xor
pop
pop
add
jae
popf
ja
lahf
sbbl
es
jl
repz
push
andl
pop
push
aas
arpl
hlt
lret
out
fcomps
adc
nop
inc
xlat
pop
pop
xchg
loop
dec
push
xor
fcmovnu
ret
mov
out
push
cli
cmpsl
mov
test
popa
loope
and
sbb
add
inc
fisubrs
push
add
sub
sub
outsb
shrl
cld
add
xor
inc
dec
ret
xor
pop
jl
xlat
jg
xchg
fisubl
push
inc
out
dec
dec
and
sub
and
and
dec
push
pushf
xchg
push
and
ret
sti
mov
xor
les
push
neg
sbb
lock
inc
xchg
fiaddl
push
data16
pop
sub
lods
mov
xchg
cmp
xchg
hlt
push
sahf
clc
jl
mov
outsb
scas
scas
push
bound
inc
jne
add
inc
aas
out
jle
andl
scas
mov
lds
iret
mov
outsb
pop
sti
mov
jbe
cmp
xor
aas
jnp
mov
int
inc
jl
jno
loop
sub
outsl
xchg
shll
test
add
arpl
fldcw
push
gs
dec
pop
xor
add
div
out
mov
cmp
jg
into
scas
movsl
mov
das
loop
ret
cmp
shlb
push
fisttpll
push
mov
gs
push
sbb
imul
repz
mov
in
dec
fnstsw
orb
jbe
ja
test
xor
add
ds
push
cli
and
sbb
jp
adc
add
int
cmpsb
les
sub
or
lock
stc
movsb
cmp
int3
stc
inc
pop
test
adc
test
xor
sub
and
xchg
push
push
clc
add
test
andb
jmp
mov
dec
or
jmp
das
loop
jbe
in
sbb
scas
inc
dec
mov
jno
mov
mov
adc
pop
setle
imull
cmp
out
fs
adc
adc
lods
and
mov
fwait
cmp
inc
add
xor
cltd
pop
insl
insl
push
mov
lock
pop
jmp
pop
xor
mov
inc
jecxz
cmp
mov
rcl
adc
mov
fwait
jl
mov
scas
inc
pop
cmp
int
add
jne
insb
cltd
stos
insl
leave
std
repz
push
in
jmp
aaa
loop
int
cwtl
fists
lahf
cmpl
sti
cmovb
leave
outsb
scas
inc
cltd
aas
test
cmp
jmp
jo
pop
dec
or
insl
mov
rcrb
test
pop
and
jmp
cmp
add
mov
dec
xchg
data16
outsb
mov
bound
scas
test
sarb
mov
mov
inc
ss
inc
sbb
jns
pusha
arpl
fucomi
div
fistpll
or
pop
ficomps
jge
mov
or
pop
insb
loop
sbb
sub
cmp
arpl
sbb
loope
ret
icebp
rcrb
cmp
cmpsb
pop
sbb
lods
mov
cld
sbb
sub
stos
cltd
stc
pop
adc
lcall
shlb
je
mov
xor
gs
loopne
sbbl
stos
cmpsl
cmpsb
ds
imul
jle
mov
xchg
es
xorl
ljmp
mov
lret
inc
in
push
mov
mov
inc
pusha
adc
shll
push
push
inc
pop
and
pop
je
test
push
sub
les
pop
out
outsl
mov
fstl
push
out
ljmp
test
xchg
idiv
shrl
dec
in
sub
in
into
mov
orb
std
adc
push
es
cmp
les
rcrb
lock
cmp
pop
stc
and
test
dec
push
mov
test
sub
loopne
cmp
sub
and
mov
dec
add
scas
popa
jmp
adc
pop
mov
and
sub
sti
lret
push
xchg
divl
mov
push
loop
sub
lods
popa
cmp
es
pop
jge
cmp
cmpsb
sbb
pop
out
mov
mov
add
dec
mov
add
lock
std
sub
or
shll
rolb
inc
inc
pop
and
in
push
and
movsb
cmp
cmpsb
and
test
push
and
sti
mov
pop
inc
mov
add
jb
aam
adc
jmp
mov
scas
imull
lahf
outsl
hlt
aam
aaa
mov
cwtl
adc
jo
or
imul
and
lahf
flds
jbe
das
mov
xor
sbb
aad
dec
push
cwtl
jl
sbb
sub
arpl
mov
lcall
sbb
adc
gs
jl
popf
sbb
push
mov
out
cmpsl
dec
fdivrl
sahf
mov
cmpsl
cmc
test
jae
push
inc
int
jecxz
outsb
aaa
lcall
sar
sbb
pop
add
mov
sub
xlat
sub
dec
sti
mov
leave
popf
mov
loope
xchg
lock
stos
xchg
in
rol
idivb
xorl
lds
jo
xor
mov
mov
jns
jl
sahf
icebp
scas
fwait
xor
repz
adc
and
dec
xchg
jnp
xor
aaa
add
pop
loopne
ds
test
pop
inc
gs
jle
les
inc
xor
push
fimuls
mov
incb
and
jmp
hlt
cli
cmc
insl
repz
xlat
mov
loopne,pt
push
cmp
pop
sbbl
adc
out
loopne
xchg
sub
xor
inc
xchg
jae
and
repz
xlat
jnp
les
jge
stc
jge
sahf
inc
mov
popf
fdivrl
sbb
cmp
add
fnstenv
addl
push
pop
jmp
and
or
push
repz
js
adc
xchg
out
dec
and
mov
sbb
sub
inc
xchg
push
shrb
sti
add
add
cmpsl
out
sub
push
dec
xor
pop
sahf
mov
add
add
add
mov
xchg
and
jecxz
dec
loop
addr16
cmpsl
fidivs
test
inc
mov
int
or
add
insl
jo
pop
jbe
pushf
jmp
js
inc
dec
xor
pop
fcmovnu
xor
cmp
mov
mov
enter
das
out
push
mov
cmp
das
xor
in
test
popa
xchg
stos
xor
adc
lahf
inc
je
and
sbb
pop
xor
stos
add
mov
push
sbb
outsl
sbb
ja
ds
movsb
sti
into
sbb
and
pusha
push
popf
xchg
xor
stos
sub
sti
fists
dec
fimuls
sarb
pop
xlat
ret
arpl
xchg
sub
pop
cmp
pop
pushf
or
sub
add
push
pushf
jne
fstps
jl
cmp
mov
inc
inc
add
jno
lods
hlt
lcall
fwait
aas
fisubs
ja
sahf
out
shrl
sti
ss
adc
stos
push
adc
imul
into
lock
enter
adc
mov
inc
xor
hlt
lret
mov
out
arpl
add
pop
push
xor
leave
jno
inc
jno
in
add
loope
add
mov
pop
aad
fcompl
movl
clc
sbb
push
ss
xlat
or
mov
cmp
fcmovnu
imul
push
scas
repnz
jge
popa
adc
mov
imull
pop
icebp
push
push
adc
stos
mov
mov
sbb
cmc
mov
xor
jo
sbb
int
sub
and
and
mov
faddl
push
pop
insb
cmpsl
xlat
in
sahf
adc
es
fs
pusha
sarl
sub
scas
cmpsl
cs
and
lea
cmp
sub
sub
dec
push
dec
mov
daa
adc
dec
sub
fcom
aas
mov
sbbb
loopne
pop
outsl
pop
cmpsl
jb
dec
or
push
jg
sub
outsl
jge
insl
dec
pop
pop
dec
scas
mov
lahf
out
std
in
iret
fstp
int
cmp
pop
or
dec
pop
pop
dec
scas
mov
lahf
out
std
in
iret
fstp
int
cmp
sub
outsl
jge
insl
dec
pop
pop
dec
scas
mov
lahf
out
cld
in
iret
fstp
int
cmp
pop
or
jg
dec
fstpl
scas
inc
mov
cli
cwtl
jne
adc
and
xor
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
mov
scas
aas
fists
out
xor
add
jb
bound
outsb
inc
outsb
mov
mov
scas
repnz
into
sar
ret
push
and
adc
add
mov
bound
jle
outsb
mov
mov
scas
repnz
into
sar
ret
push
add
jb
or
sbb
rol
xchg
in
out
lret
cmp
fscale
cmp
push
popf
in
repnz
gs
gs
daa
cmp
addl
into
aam
and
jbe
fs
push
cmpsl
icebp
in
sar
lea
adc
loop
stos
dec
xchg
insb
imull
xchg
xchg
add
pushf
sub
adc
ret
mov
inc
mov
clc
stos
cmp
fcomip
into
push
test
mov
clc
push
scas
rorl
ja
dec
pop
inc
jno
inc
jge
stos
push
loop
push
scas
xchg
je
xchg
sarl
or
inc
mov
pop
cwtl
push
add
cmpsb
xor
ret
push
rorb
in
dec
sub
and
push
pop
jle
xchg
jle
mov
scas
repnz
into
sar
ret
push
and
adc
add
jb
bound
jle
sub
sahf
idiv
jmp
repnz
nop
mov
xor
pop
adc
pop
jae
bound
xor
or
repnz
loop
imul
int
popf
cmpsl
mov
jnp
jl
pop
add
or
sbb
cmp
fbld
mov
inc
out
xor
and
adc
add
jb
bound
jle
outsb
mov
mov
scas
repnz
into
sar
ret
push
and
adc
add
jb
bound
jle
outsb
mov
xchg
or
nop
pop
arpl
ss
cmp
xor
outsl
js
add
aaa
lds
xor
daa
push
scas
out
adc
inc
fcompl
fnstcw
mov
push
push
adc
test
mov
jge
mov
fildll
jns
adc
sarl
lods
fwait
xor
jae
mov
std
dec
imul
pushf
test
repz
sbb
cmp
inc
jnp
xlat
xchg
lret
jle
and
xchg
or
inc
mov
push
ss
sbb
clc
imul
pop
xorl
data16
mov
xchg
xlat
bswap
cli
pop
xchg
inc
cwtl
loopne
push
inc
mull
adc
es
ja
hlt
test
inc
je
aad
pop
imul
pop
dec
popa
xor
mov
pop
mov
mov
mov
mov
out
imul
fcoml
mov
pop
jb
insl
sub
jle
in
pop
lret
scas
or
fcomps
ds
sti
dec
fisubs
cmp
push
aaa
fld
mov
lods
shll
fisubrs
lds
lock
call
nop
push
inc
lahf
outsl
add
les
aad
dec
and
sbb
pop
cvttps2pi
push
test
mov
push
mov
dec
mov
sub
xchg
inc
cmc
lret
std
push
movsl
mov
rorb
sbb
ret
stos
or
push
push
push
sub
shlb
ret
lods
push
bound
mov
jne
sbb
aam
cs
inc
repnz
push
push
mov
sub
mov
push
loopne
sbb
out
mov
std
hlt
aad
shll
jecxz
mov
and
and
aaa
fsubs
dec
mov
dec
adcl
mov
dec
into
ror
sbb
inc
mov
jae
rcrb
and
add
push
xor
stc
js
lahf
jns
mov
jnp
repz
xchg
xor
shl
outsl
outsb
daa
ret
mov
lret
inc
cmp
mov
fisttps
jecxz
dec
popf
xchg
fistps
inc
push
mov
sub
xchg
push
cld
leave
cmp
and
clc
imul
mov
inc
jo
loop
cmc
in
mov
mov
xchg
push
cmp
sbb
outsb
sti
scas
mov
daa
push
jno
jae
mov
insb
pop
fsubrp
xorb
rorl
push
cmp
push
scas
dec
cwtl
jle
cmp
imul
clc
out
negl
sub
cmpl
fmulp
inc
jnp
mov
popa
js
xor
scas
int
test
jae
xchg
inc
in
mov
push
push
rcl
push
ljmp
inc
into
popl
mov
out
and
xor
rcll
test
std
inc
dec
test
ret
adc
adc
lret
mov
rcrb
in
cmp
mov
test
push
cmp
cltd
push
pop
adc
push
adc
test
dec
out
cmp
lahf
orb
jg
jnp
mov
mov
cmp
and
sub
add
test
cmp
and
sub
popa
pop
and
stos
dec
fcoms
pop
pop
adc
xchg
mov
adc
fdivrl
xor
arpl
mov
arpl
xchg
movsl
and
mov
test
lods
rcrb
movsl
rcll
in
int
add
ljmp
popf
sub
inc
dec
jg
hlt
pand
sub
adc
fisttps
push
sbb
mov
or
adc
or
aad
push
pop
call
mov
loop
cmp
push
or
and
cmp
das
test
or
das
mov
imulb
sbb
push
sub
cmp
inc
cmpb
inc
sbb
fwait
pusha
or
pop
rolb
jmp
sub
mov
xor
fdivr
mov
add
outsb
push
rorb
sbb
mov
and
xor
outsb
jnp
insb
xor
test
lahf
jae
and
add
jp
lcall
mov
in
repz
mov
sbb
clc
cmp
aam
mov
mov
and
insl
in
lods
pop
mov
pop
out
fistpll
mov
or
fcom
outsl
jbe
adc
cmp
sti
adc
sarl
lret
leave
aad
inc
inc
out
mov
shlb
or
imul
enter
and
xor
mov
popa
or
push
test
inc
aaa
push
push
xorl
stc
push
test
test
lock
push
lds
mov
inc
inc
inc
dec
inc
mov
xchg
fidivl
testb
cmc
jge
or
adc
dec
xchg
mov
js
inc
sbb
aam
cmpsl
jge
aas
mov
fiaddl
stos
or
mov
shlb
push
mov
pushf
push
sub
ljmp
cld
sbb
sbb
ja
dec
mov
xor
repz
ss
dec
xchg
sbb
pop
xchg
orb
les
fcoms
repnz
leave
test
iret
push
or
shll
mov
xor
push
and
sub
stos
jg
fstpl
lret
cmc
ja
push
sub
push
pushf
xchg
enter
sbb
lahf
int3
xchg
inc
iret
repz
repnz
inc
mul
jge
out
push
fiaddl
in
fbstp
xor
mov
jno
xlat
push
lret
jae
add
pop
add
jns
data16
data16
cmp
gs
es
sbb
push
jge
scas
sub
add
xchg
push
je
ret
outsl
jb
repnz
or
cmp
jecxz
test
out
inc
icebp
adc
push
cmp
or
dec
push
pop
add
hlt
mov
ss
inc
push
bound
ljmp
nop
data16
fimull
repnz
outsb
fwait
arpl
or
sbb
mov
mov
mov
loop
fldcw
mov
push
nop
popa
movsl
jnp
dec
push
and
lret
or
cmpsb
gs
aad
aad
aam
mov
popa
lds
ficoml
mov
fdivrp
cmp
std
adc
sbbb
mov
add
sub
cmc
push
testl
cmpsb
xchg
lds
sarb
call
stos
sub
fadd
js
out
fsubs
and
push
aaa
xor
and
mov
xor
mov
aas
sbb
push
out
mov
sbb
fyl2x
clc
xor
daa
adc
mov
xor
adc
imul
jne
pop
push
arpl
add
mov
mov
subl
arpl
mov
or
test
jge
push
inc
mov
or
cmc
mov
push
stos
loop
icebp
and
cltd
int3
cmp
xlat
fsubrs
movsb
mov
lret
outsl
roll
push
jb
out
dec
notl
xchg
adc
mov
pop
imul
aas
add
inc
push
out
pop
xchg
add
mov
cmpsl
out
or
and
push
and
push
cltd
mov
inc
dec
or
xchg
lods
ljmp
lods
bound
or
rolb
adc
mov
int
push
sub
stos
mov
cli
test
scas
rolb
movsl
xor
jge
cmp
xor
cvtps2pi
iret
imul
ret
xor
jno
in
stos
jns
in
mov
dec
mov
shll
push
mov
add
rcr
and
int3
into
popf
insb
pushl
stos
ds
jbe
sbb
pop
or
jge
orb
xchg
mov
jb
inc
sub
test
outsb
scas
out
and
lea
mov
orb
mov
sbb
push
xchg
pop
inc
inc
mov
or
mov
fs
mov
cwtl
sti
lahf
imul
popa
xchg
clc
inc
es
mov
out
loope
pusha
mov
out
mov
xchg
aaa
jge
in
sub
ja
xchg
inc
push
addr16
xor
ss
mov
mov
loope,pn
xchg
jne
test
fucom
das
jo
jecxz
shll
testl
andps
xchg
fcoml
sub
mov
and
xchg
dec
cld
stos
rcll
fs
int
pop
sub
pop
lods
mov
mov
mov
lock
sbb
dec
mov
arpl
jl
scas
sub
mov
dec
cmp
popf
cmpsl
push
push
pop
or
addl
xor
xor
push
stos
mov
stc
imul
dec
imul
mov
cld
inc
sub
jo
pop
pop
sub
jge
mov
mov
rcrl
mov
stos
xor
pusha
stos
iret
add
stos
inc
inc
decb
call
adc
lahf
dec
lret
stos
dec
or
hlt
lcall
outsl
sub
cmpb
shll
adc
pushf
add
sbb
mov
repz
mov
adc
and
je
pop
pop
add
jg
and
mov
stos
push
xor
mov
sbb
sahf
dec
stos
add
lret
cs
dec
pop
mov
fmuls
mov
loop
in
fadd
inc
pop
outsl
push
les
pop
out
loopne
jge
icebp
or
cltd
push
adc
shr
adc
or
outsl
pop
cs
fadd
jmp
sarb
xchg
push
adc
sub
testb
xor
imul
pop
pop
lds
xchg
inc
inc
lock
mov
sbbb
fs
jne
stos
js
add
fstpt
adc
dec
gs
idivl
fisttpl
sub
cli
push
mov
push
inc
bound
fidivrl
lock
ljmp
mov
loop
cmc
enter
mov
jnp
ds
dec
rclb
pusha
jl
insl
cmp
jb
out
shlb
cwtl
loop
inc
mov
mov
xchg
hlt
movsl
sub
add
rolb
mov
and
pop
or
popf
scas
aas
mov
inc
jb
fidivl
mov
jle
sbb
and
scas
mov
mov
bound
out
jne
pop
xchg
shll
call
sbb
adc
je
int
sahf
in
cltd
lods
adc
scas
add
add
aad
and
mov
ljmp
fwait
lcall
or
insb
shl
xchg
roll
out
xchg
call
rcrl
pop
push
lret
ss
das
jg
testl
sbb
fndisi(8087
daa
adc
add
inc
xchg
enter
ljmp
lods
lock
aaa
lock
in
inc
shlb
aam
jne
les
outsl
mov
shll
xor
jl
ljmp
out
cmp
jae
cmp
push
fsubrl
pop
btl
ds
push
rol
inc
pop
outsl
cmp
std
mov
sbb
mov
dec
xchg
dec
rclb
cli
repz
mov
dec
mov
and
add
sti
jbe
ja
sti
mov
sbb
mov
dec
xchg
test
aad
scas
aas
cmp
into
jbe
pop
or
lods
leave
repnz
jle
jnp
stc
inc
pop
push
mov
xchg
and
mov
adc
popa
push
add
popa
pop
and
outsb
call
jmp
mov
sti
jmp
rcrb
xchg
subl
rcr
xchg
cmpsb
pop
sub
pop
sbb
lret
cld
cwtd
mov
popf
inc
mov
add
fcomps
pusha
push
popf
xor
into
test
orb
pop
jecxz
mov
dec
ret
xchg
mov
add
rcll
sub
test
scas
outsl
jmp
push
mov
and
push
mov
repnz
and
sbb
ret
adc
rcr
lret
jmp
jp
xchg
inc
scas
pop
pop
in
cs
lods
arpl
mov
sub
inc
fcom
mov
enter
or
jnp
das
inc
inc
mov
scas
ss
xor
jl
and
and
lods
int3
xor
inc
dec
mov
dec
cmp
adc
int3
mov
mov
iret
pop
jbe
fbld
mov
mov
or
jae
and
loop
cmpsb
add
pop
pop
aam
xchg
sbb
mov
imulb
out
cmp
ret
cmpsl
mov
add
je
pcmpeqd
stos
adc
mov
mov
cmc
mov
nop
pop
out
pop
mov
jl
lahf
cmp
rcll
fstpt
insl
jnp
jb
in
add
dec
je
jno
jbe
das
daa
xchg
push
sahf
das
mov
push
loop
mov
cli
into
insl
repnz
out
sub
dec
sbbb
xor
cltd
mov
in
lock
repnz
mov
mov
int
aas
pushf
out
sub
cs
js
fildl
imulb
mov
ret
js
inc
pop
out
cmp
and
loopne
sub
cmpsb
and
add
xchg
push
jae
pusha
pop
mov
scas
pop
scas
dec
inc
int
xchg
inc
pop
stos
mov
movb
xlat
daa
movsb
jbe
or
dec
cld
or
push
mov
push
inc
data16
inc
sub
xchg
imul
cmp
stos
loopne
lret
push
test
push
cwtl
shlb
xchg
sub
in
adc
adc
jmp
add
pop
ds
ss
fwait
pop
mov
jmp
pop
sbb
filds
cwtl
test
aaa
insl
xor
push
and
aad
ds
adc
out
mov
rolb
gs
or
es
mov
mov
mov
int3
add
sub
xchg
xchg
sbb
inc
cli
js
aad
inc
popa
popf
mov
into
push
push
cwtl
mov
pop
cmpl
fadd
sbb
push
fwait
ljmp
pop
aad
mov
in
dec
mov
inc
jne
aaa
out
sbb
jg
ss
jnp
insl
mov
shrb
and
xor
or
fbstp
orl
decl
sti
cld
imul
out
popf
sti
shrl
jle
pusha
xchg
inc
bound
pop
aad
iret
lods
pop
shr
pop
test
mov
repz
idiv
shlb
andb
and
xor
jne
cmc
pop
fs
dec
or
pushf
push
loopne
pushf
mov
fdivr
mov
pop
ljmp
pop
mov
mov
sub
addr16
lea
xchg
mov
pop
jp
adc
out
sub
and
call
dec
xor
lea
sub
repz
pop
rorl
loope
adc
shrl
or
imul
and
pop
dec
xor
les
sbb
add
das
or
sbb
add
and
mov
inc
mov
pop
or
cld
test
mov
lret
std
xchg
in
shrb
scas
dec
push
and
fisubl
lret
and
pushl
idiv
stc
xchg
aaa
sbb
notl
inc
arpl
push
test
sbbb
add
test
int3
push
imul
stos
out
sbb
xchg
mov
daa
repz
addr16
pop
int3
sub
mov
jb
fstl
add
pop
outsb
fistpl
lds
mov
cmp
bound
sub
jge
cmp
pop
mov
jge
shrb
popa
inc
mov
loope
fcomps
mov
ja
push
mov
pop
jge
and
pushf
jne
pop
mov
ret
loope
mov
jae
add
add
sbb
stos
push
xorb
or
scas
iret
or
push
pop
inc
jb
mov
mov
sbbl
clc
imul
ja
push
rol
sti
shlb
inc
aad
jbe
stc
popf
jae
push
dec
push
je
mov
inc
jb
bound
cmp
adc
xchg
mov
push
push
lods
aad
js
jp
int3
xchg
sbb
sub
imul
mov
pop
loopne
and
scas
iret
pop
pop
sbb
push
push
sti
cwtl
int3
out
inc
pop
out
sub
mull
out
test
push
add
popf
and
jb
test
add
or
mov
add
xchg
mov
into
js
push
or
or
and
cmp
xchg
lcall
cld
mov
aas
mov
push
add
jo
std
fistpl
push
and
push
push
popa
push
mov
add
loopne
and
jmp
pop
stos
stc
jg
and
cwtl
mov
inc
popf
scas
sbbb
repnz
lret
xchg
cmp
cmp
call
mov
popf
cmpsl
adc
outsb
adc
mov
mov
pop
mov
test
sbb
or
jp
je
into
ds
cltd
ja
jb
rcll
add
arpl
in
loope
pop
hlt
std
mov
pop
push
mov
rorb
pop
adc
fdivs
ficoms
mov
pop
add
mov
in
lock
inc
mov
jge
inc
mov
adc
mov
out
or
ljmp
imul
sbb
inc
cmpsb
xor
fptan
aam
cli
xor
cwtl
xchg
jg
jns
xor
call
sti
jnp
mov
mul
jb
pop
dec
cmp
cwtl
repz
push
sub
mov
lds
idivb
leave
icebp
clc
inc
pop
mov
sub
test
jp
popl
or
out
and
insb
movsl
cli
dec
out
cld
adc
les
adc
fbld
xchg
inc
adc
fadds
call
fisubs
push
inc
sbbl
or
movsl
sub
jmp
cld
mov
mov
scas
inc
loopne
add
mov
mov
pushf
enter
ficomps
mov
push
cmp
pop
shl
pop
pop
mov
adc
call
inc
data16
gs
imul
mov
int3
inc
jb
aaa
fnstenv
popf
test
cmp
outsb
cmpsb
shll
jae
inc
mov
je
xor
shll
jno
cmp
mov
mov
test
mov
test
ret
imul
xor
jecxz
test
xor
or
mov
pop
adc
xor
mov
jle
movl
jp
fcoml
mov
cmp
cltd
aam
pop
sarb
inc
jnp
shlb
stos
pop
in
addl
push
or
add
addr16
loope
sub
and
rcr
pop
sub
test
out
adc
roll
shrl
in
scas
mov
dec
or
mov
mov
fildll
push
ret
sbb
movsl
jb
scas
adc
add
xchg
std
inc
sbb
inc
fnstenv
xorl
mov
fs
or
xchg
lds
aaa
lret
add
out
fistps
push
dec
add
lods
or
mov
mov
jmp
sub
pop
lea
mov
jbe
jnp
mov
cmpl
push
adc
mov
mov
lds
xchg
ret
mov
xlat
pusha
fildll
enter
adc
ret
xchg
and
test
mov
or
stc
sbb
mov
add
je
sub
cmp
ficoml
sub
fbld
xchg
call
sub
mov
bound
lock
sahf
mov
icebp
sbb
iret
push
and
into
mov
outsl
or
scas
cld
cmp
loopne
or
adc
sbb
mov
jno
sub
in
mov
cmpsl
adc
adc
dec
xor
dec
fyl2xp1
sub
mov
sbbl
cmpl
test
dec
jge
ss
pop
int
and
pop
daa
adc
xchg
mov
nop
sub
jnp
sbb
lds
pop
mull
or
in
add
mov
lods
rcrb
ds
je
xchg
xchg
xchg
out
sbb
mov
inc
adc
sti
stos
xchg
push
or
mov
lods
lods
mov
cld
lds
adc
sub
rcrb
pop
jbe
bt
stos
and
outsb
jmp
aaa
add
dec
pop
xchg
mov
test
mov
xchg
out
inc
stos
cs
pop
dec
neg
sub
inc
dec
and
mov
sbb
roll
stos
arpl
mov
lds
lock
mov
inc
xor
push
into
addr16
adc
mov
fsubp
into
sar
ret
push
and
adc
add
jb
bound
jle
outsb
mov
mov
scas
repnz
into
sar
ret
push
and
adc
add
jb
bound
jle
outsb
mov
and
jb
loop
sar
inc
out
xor
and
adc
add
jb
bound
jle
outsb
mov
mov
scas
repnz
into
sar
ret
push
and
adc
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
xor
and
or
sbb
dec
push
adc
add
lods
mov
sahf
icebp
in
jecxz
rcr
fdivl
sub
cmp
or
sbb
insb
popa
jl
dec
inc
pop
mov
lods
pushf
icebp
shrl
int3
rcr
xor
sbb
dec
push
inc
inc
test
addb
lods
mov
pop
sub
push
adc
xchg
and
xchg
sbb
loopne
or
lock
test
adc
aam
xor
mov
jg
mov
int3
ds
into
rcr
mov
mov
in
fidivrl
xorl
icebp
cld
sbb
fdivl
jl
cmp
or
sub
dec
pusha
mov
cmp
mov
arpl
mov
shll
repz
mov
sbb
mov
mov
addr16
or
and
and
fcoml
xlat
mov
popf
mov
lods
sub
in
cltd
rorl
xor
int3
clc
sub
sub
sbb
push
data16
jno
push
push
pop
inc
test
mov
test
hlt
stc
jmp
int3
sarl
or
pop
adc
inc
xor
fxam
repz
addl
jle
jno
sbb
sub
xor
aad
fstl
sahf
mov
push
insl
dec
pop
jge
imul
dec
inc
pop
mov
mov
pushf
icebp
in
loope
ror
rcr
sub
cmp
or
sbb
insb
popa
jl
dec
inc
pop
mov
mov
pushf
icebp
in
loope
ror
rcr
sub
mov
sbb
test
push
jns
add
cmc
sbb
xor
loop
jo
push
cmc
xchg
fnstsw
inc
pop
clc
add
adc
insb
xchg
mov
enter
adc
pop
testl
mov
adc
loopne
fbstp
push
insb
cltd
sbb
int
daa
ret
jp
divl
filds
mov
cmp
adc
xor
cmp
xchg
or
sub
sub
and
lcall
cs
sub
jo
icebp
pop
pusha
sqrtps
out
or
jle
push
stos
sub
sub
enter
insb
push
and
push
out
out
mov
insl
aam
inc
add
stos
sbb
xor
ret
jecxz
repnz
fadds
call
test
xchg
jno
bound
push
sbb
and
dec
rcrb
cmpl
leave
fptan
fstl
push
aad
pop
ljmp
sahf
fidivrl
stos
push
cmp
cmp
outsb
cmp
mov
out
fucomp
xor
aam
cmpsl
add
test
stos
je
inc
popa
mov
lods
adc
sub
lret
movsb
mov
xchg
lahf
mov
cmp
pop
pop
lcall
enter
jo
mov
aas
sbb
ds
push
imul
pop
in
dec
inc
loope
xor
push
jmp
sbb
cld
js
in
cmp
adc
loop
ss
icebp
lcall
sub
lret
sub
scas
push
push
add
xchg
dec
mov
dec
aad
cs
loope
xor
xlat
mov
dec
into
gs
testb
popl
push
mov
lea
jb
adc
add
lret
adc
into
dec
sbb
mov
jecxz
xor
loop
call
fiadds
cmp
std
adc
cmp
cwtl
bound
add
inc
dec
push
xor
jmp
std
mov
push
daa
xchg
sbb
sub
lock
jge
cmpsb
mov
sbb
or
mov
pop
push
insb
cli
mov
out
and
mov
test
test
push
lret
addb
leave
xorb
dec
les
xchg
arpl
mov
fcoms
xlat
cmp
cmp
shl
in
mov
std
mov
inc
jecxz
lods
and
add
stos
clc
hlt
xchg
lcall
cmp
out
jl
movsb
sub
mov
cltd
mov
and
pop
jge
sarl
call
sbb
xchg
mov
jae
sti
mov
ret
loopne
cs
cmp
pop
incb
stc
movsb
ja
mov
pop
cmp
add
shll
mov
mov
add
inc
out
fs
dec
cmpsb
cli
xchg
inc
sub
out
nop
and
sti
add
jnp
pop
xchg
cwtl
and
repz
sbb
mov
xchg
std
gs
push
cmpsb
divl
mov
mov
xchg
push
insb
pusha
cld
in
xchg
idivl
cmp
std
push
add
mov
add
fdivp
ljmp
push
das
inc
into
pop
cld
add
adc
lea
jno
sub
fmuls
rcrl
add
or
push
xlat
mov
std
or
dec
pop
mov
mov
push
xchg
mov
push
fisttps
call
mov
in
pop
xchg
xor
sbb
dec
adc
or
jg
std
push
into
pushf
cld
mov
mov
add
and
push
imul
cmc
fs
and
rcr
inc
push
jae
fsub
mov
stc
addl
inc
mov
test
pop
push
movsl
rolb
xor
push
jmp
sub
mov
sbb
or
das
mov
pop
mov
pop
sbb
push
mov
adc
and
and
call
popa
pop
loop
call
mov
repz
test
mov
add
les
xchg
clc
cmpsb
insb
push
mov
repnz
call
sbb
enter
mov
xor
dec
cmp
lods
loope
cmc
add
ja
fmulp
jecxz
sub
mov
int3
imul
leave
lcall
ljmp
aam
rep
mov
enter
sbb
xchg
gs
or
xchg
mov
adc
xchg
out
mov
ljmp
jg
test
nop
pop
cld
pop
jge
les
out
fdivs
stos
inc
jne
movsb
inc
insb
jns
sub
in
dec
cmp
adc
fprem
mov
jge
inc
push
mov
mov
sub
addl
sub
or
dec
movsb
leave
or
fisubrs
or
pop
syscall
cltd
outsl
sbb
push
out
imul
mov
in
lret
adc
loope
sbb
sub
xchg
jge
int3
jne
cmp
add
pop
xor
mov
daa
mov
push
mov
sbb
into
dec
ret
push
int
rcrb
jne
fsubl
filds
js
stos
and
addr16
cmp
iret
incb
test
cmpsb
jb
or
adc
shrb
push
mov
push
push
jbe
std
xchg
pop
sbb
jne
dec
xor
sub
repnz
adc
add
mov
ds
adc
inc
inc
ret
ret
or
pushf
mov
mov
orb
or
out
out
aaa
add
mov
clc
pop
fldl
in
or
xchg
add
fadds
loope
fimuls
mov
sub
or
cmpsb
mov
pop
movb
pusha
test
cltd
leave
or
test
sub
stc
sub
into
cmp
adc
cmp
daa
test
push
jle
sarb
cwtl
xchg
icebp
outsb
in
filds
scas
fnstsw
insl
push
sbb
cmp
mov
inc
loope
pop
mov
repz
push
test
push
push
stos
outsb
mov
push
clc
bswap
testb
or
inc
adc
sub
hlt
sub
movsl
mov
push
dec
adc
mov
cmpsb
fisubs
lods
ror
insb
scas
dec
mov
adc
mov
je
out
sbb
pop
adc
outsb
sbb
mov
xor
notl
or
mov
mov
test
loop
xlat
xor
es
and
inc
popa
cmp
int3
cmp
jp
mov
adc
sbb
enter
rclb
or
mov
ds
push
repz
stos
jg
fdivrs
bnd
mov
mov
sub
dec
aam
mov
cmp
popl
repz
ret
sub
mov
aas
ret
aam
jp
mov
js
mov
and
js
addr16
vpsllw
addr16
mov
iret
fidivl
jns
or
test
mov
and
clc
pop
jnp
mov
repnz
push
inc
ja
cmp
cmp
mov
sbb
pop
inc
out
xor
icebp
mov
iret
sarl
fcomps
testb
cmp
xlat
outsl
movl
fstps
push
jns
add
aad
cmp
divb
test
daa
enter
mov
ret
adc
jbe
loopne
and
xchg
inc
mov
shlb
xor
rcrl
mov
sbb
mov
push
mov
mov
bound
inc
ror
sbbl
xor
mov
sbb
or
arpl
sbb
das
mov
cmp
movsb
nop
sbb
std
jecxz
nop
out
mov
pop
add
dec
adc
stos
fsubl
loope
repnz
popa
pop
sbb
pop
outsb
jp
pop
sbb
int3
inc
repnz
dec
mov
xchg
jle
or
or
xor
insb
push
getsec
roll
test
sti
dec
sbbl
and
or
sbb
ss
push
enter
xchg
test
pop
mov
fwait
rolb
or
mov
in
add
fldt
popa
pop
std
xchg
popf
xorb
lret
or
imul
pop
pop
stos
test
fdivrl
fistpll
cwtl
daa
aad
jnp
push
int
xor
neg
push
ret
inc
repnz
jne
sbb
fs
sbbl
xchg
mov
adc
mov
mov
xchg
xor
push
dec
mov
nop
ja
fdivl
les
iret
pushf
gs
pop
lock
cwtl
and
jae
and
mov
push
and
and
je
cmpsb
sbb
xchg
push
leave
loop
in
mov
add
cmc
push
adc
mov
mov
mov
jbe
or
dec
xlat
jl
mov
mov
pop
jbe
loopne
scas
xorb
lods
jge
sbbb
sbb
leave
lret
xor
cmpsb
xor
xor
scas
push
pop
or
jae
out
movsb
int
inc
fiadds
and
sbb
or
mov
xor
cltd
lahf
mov
test
lret
xor
dec
jmp
enter
imul
scas
fcoml
add
outsl
jge
xor
mov
push
sub
add
pop
push
fisttpll
mov
mov
xchg
jne
mov
cmpsb
addr16
mov
lcall
test
push
inc
shrl
call
dec
inc
orl
test
push
push
pop
test
shrl
icebp
push
push
subb
test
pop
lock
push
cs
enter
movl
mull
xchg
nop
cmp
and
call
loop
jl
adc
or
push
dec
mov
cmp
data16
sbb
xcrypt-cbc
cmpsl
sarl
dec
lret
jle
arpl
lret
cmp
gs
sub
mov
dec
in
mov
lret
xchg
repz
xlat
fdivr
pop
pusha
adc
and
hlt
out
xchg
les
sbb
and
ds
push
outsl
xchg
push
pop
xor
imul
cltd
dec
adc
shrb
stc
lret
add
lahf
mov
xchg
scas
cli
imul
xchg
add
xchg
imul
decl
data16
int
sub
or
mov
bound
in
pop
ja
into
xchg
xchg
xchg
dec
xlat
mov
adc
rorb
divl
sub
mov
fwait
mov
fildll
lock
dec
js
pop
jno
inc
std
add
movsl
fmul
inc
fidivl
adc
enter
xlat
aad
inc
scas
fbstp
or
int
int3
test
data16
lods
les
and
movsl
test
jbe
ret
js
inc
xchg
outsl
push
jnp
sahf
add
sub
or
fisubs
push
outsl
push
jge
inc
add
fcmovnu
dec
push
cwtl
insl
xlat
outsb
xchg
push
mov
test
mov
popf
sub
fmulp
xchg
lods
add
jnp
sbb
or
out
loop
imul
pop
xor
icebp
cmpsl
jae
and
mov
xchg
outsl
das
fsubrs
xchg
push
jle
pop
loop
loop
sbb
add
pop
insl
subb
jge
dec
adc
push
pop
mov
mov
jb
orl
mov
push
nop
dec
leave
mov
movsb
pop
cmpsl
jbe
lds
lds
mov
xchg
xor
call
jno
mov
cmp
and
cmp
mov
jae
cmpsb
test
jbe
cmp
int3
mov
mov
cwtl
or
mov
xor
lds
xor
inc
add
xchg
inc
xchg
xorb
shlb
push
adc
andb
and
gs
sti
test
inc
jg
cli
test
adcl
pop
adc
xchg
ret
stc
xlat
xor
nop
data16
xor
and
push
imul
ret
in
rorb
sbb
xchg
out
hlt
mov
cltd
dec
xchg
mov
cld
cmp
lcall
sbb
scas
dec
inc
icebp
add
daa
xchg
push
mov
in
push
dec
dec
inc
divl
sbb
sub
test
pop
jmp
in
iret
mov
sbb
xchg
icebp
lea
lret
adc
test
scas
dec
fmull
rol
dec
aaa
cmp
mov
cmp
mov
xchg
push
mov
sbb
insb
jnp
inc
notb
xor
loopne
lock
xchg
jge
insl
loope
outsb
lahf
jle
lret
and
mov
mov
pop
mov
mov
sarb
lods
push
outsl
fs
jnp
inc
mov
rcr
jmp
pop
iret
jb
inc
and
cmp
in
xlat
shlb
insl
push
lret
xor
je
lock
push
lea
repnz
sbb
sub
xor
incl
inc
pusha
add
lods
test
mov
loopne
jecxz
cmp
cltd
mov
stos
adc
sarl
imul
in
daa
stc
push
dec
sub
adc
cmp
bound
dec
xor
lret
shl
pop
rcr
mov
or
insl
dec
insl
ja
sbb
inc
test
sub
mov
movsl
inc
pop
out
mov
repz
push
mov
pop
gs
mov
pop
and
adc
pop
movsl
jg
and
push
sbbb
mov
sbb
lcall
inc
adc
test
mov
stos
int3
push
or
jmp
das
cmp
leave
mov
test
ljmp
fcoml
pop
or
push
outsb
int3
cmpsb
rorb
js
shlb
xorl
int3
push
xchg
jge
test
pop
dec
js
out
mov
jl
xchg
pop
jmp
in
and
pop
and
and
in
sub
dec
stos
mov
and
stos
cmpsb
jp
lcall
ss
mul
lods
dec
loop
or
fistpl
or
and
sbb
rcl
fnstenv
adc
inc
popl
xor
rcr
jbe
ret
lcall
dec
jle
sbb
sbb
mov
jbe
dec
shrl
lods
movsl
test
xor
mov
pop
xchg
psubsw
pop
insl
mov
mov
cmpsb
jb
mov
jns
sbb
rcrb
dec
xor
mov
pop
or
cmpsb
xchg
test
cwtl
les
fistpll
push
sahf
or
sbb
sbb
jge
negl
in
push
sub
aad
jmp
pop
hlt
xchg
in
pop
int3
jae
mov
mov
cmpsb
test
in
mov
aaa
aad
sub
int3
aas
push
xchg
fstps
xor
mov
and
pop
mov
int
insl
nop
sahf
setb
xor
pop
and
push
jb
iret
adc
mov
inc
xchg
xchg
sub
push
mov
addr16
jl
add
jge
enter
pop
adc
cld
inc
sub
mov
xor
adc
jmp
pop
jb
test
movsb
mov
xchg
add
jmp
xchg
and
test
stos
mov
inc
mov
cwtl
shll
fildll
icebp
arpl
insb
push
or
sub
add
movsb
push
gs
adc
cmp
mov
push
cmp
sub
scas
pop
jge
jecxz
jle
xchg
adc
pmulhw
pop
add
sub
push
in
into
rorb
mov
dec
xlat
shl
adc
daa
leave
jo
popa
mov
cmp
or
or
xchg
mov
in
cmp
rorl
adc
ss
int3
leave
mov
sbb
xor
out
call
jl
outsb
jo
shlb
and
xchg
pop
adc
cmpsb
ss
sysenter
aaa
es
std
stos
addr16
das
sbb
mov
repnz
cld
push
pop
jb
push
push
cmp
test
push
cmpsl
loop
loope
les
hlt
fs
push
mov
adc
cmp
in
push
lret
mov
ficomps
mov
add
push
mov
push
popf
jne
popa
testb
adc
lcall
dec
pusha
xlat
cwtl
and
dec
sbb
icebp
adcb
sub
xor
mov
and
inc
sub
loope
add
lahf
mov
xor
lods
cmp
call
movl
cltd
scas
insl
not
jg
mov
add
cmc
add
andl
or
enter
mov
adc
cltd
jo
popf
sub
in
mov
sbb
jo
and
je
lcall
inc
pop
pushf
outsb
sbb
popa
call
sub
mov
mull
push
push
xor
fs
cltd
sub
daa
lds
sub
or
push
push
pop
mov
fstps
jns
scas
pop
add
call
or
jecxz
pop
flds
adc
out
push
stc
push
jne
push
jle
sbb
pop
stos
sbb
imul
sbb
test
jne
sub
xchg
dec
shr
shl
int
lock
fcmovnbe
mov
pop
mov
push
mov
js
lret
dec
xor
hlt
sbb
jo
mov
loop
mov
fbld
cmp
in
sub
int3
roll
mov
inc
mov
add
mov
add
add
sbb
lahf
lcall
add
shr
aas
movsl
or
hlt
adc
mov
push
cmpsl
xchg
movsb
mov
cs
loopne
mov
in
es
cmc
cmpsl
sbb
fnstcw
sub
loop
test
notb
sti
jae
lahf
add
inc
mov
cmp
mov
sub
dec
jb
xor
dec
xor
cmp
repz
aaa
jno
cld
into
mov
int3
and
leave
das
cwtl
sub
sub
pop
push
add
jbe
or
sahf
fwait
pop
sbb
or
or
xchg
lock
mov
pop
sbb
outsl
xor
sbb
jecxz
or
mov
lahf
dec
gs
add
mov
pop
bound
add
into
ret
jmp
fldcw
and
sub
xchg
fstpt
lods
inc
adc
mov
xor
dec
pop
lret
or
and
daa
pop
lret
decb
mov
jp
jmp
jns
xchg
cmpsl
lret
adc
gs
push
xor
popa
andb
lds
mov
sbb
mov
jns
test
jle
sbb
cmp
fidivrs
lahf
or
and
stos
lods
mov
jnp
mov
repnz
les
test
adc
ljmp
lods
xchg
fldt
fidivl
push
sbbl
aaa
adc
out
dec
out
inc
aas
sbb
inc
adc
fsubrp
inc
xor
push
insb
loop
ret
adc
cmpsb
faddp
sbb
seta
in
add
adc
dec
mov
cmp
cmpsb
sbb
outsb
pop
jmp
mov
mov
lock
xchg
es
dec
das
loope
lods
and
and
mov
mov
test
in
xchg
pop
xchg
xor
mov
int3
insb
in
mov
add
adcb
fwait
push
lea
test
add
call
repnz
movsl
test
sbb
in
mov
adc
es
lods
jle
imul
subl
mov
imul
loop
cli
leave
cmp
test
xchg
jne
out
sub
dec
xchg
dec
pop
xlat
dec
ja
or
gs
loope
int3
mov
cmpsb
mov
js
shll
lods
fcomps
ds
insl
xor
xor
inc
sub
push
xchg
xchg
test
shrb
mov
push
jbe
cli
pop
cwtl
inc
pop
xchg
xchg
push
sbb
push
sti
push
icebp
jecxz
inc
aaa
inc
xor
outsb
pop
xchg
mov
inc
add
pop
out
fdivl
cmp
pop
ret
ljmp
mov
cmp
xchg
jo
andl
mov
aas
mov
cmp
cmc
std
dec
outsl
jns
push
test
mov
mov
iret
das
xor
sbb
ficoml
aaa
or
pop
shl
cmp
and
push
cmp
dec
icebp
sbb
mov
sbb
dec
stos
test
sbb
adc
cmp
enter
jnp
std
in
loopne
dec
cmp
push
ss
pop
xlat
push
loope
lret
mov
inc
xor
mov
xchg
xor
mov
sti
aaa
dec
jb
movsb
xchg
popa
ret
sub
popf
repz
cltd
mov
test
mov
stos
add
int
push
out
ljmp
push
sbb
insb
popa
jl
dec
inc
pop
mov
mov
pushf
icebp
in
loope
ror
rcr
sub
cmp
or
sbb
insb
popa
jl
dec
inc
pop
mov
mov
pushf
icebp
in
loope
ror
rcr
sub
cmp
or
sbb
insb
popa
jl
dec
inc
pop
mov
mov
popf
icebp
in
loopne
ror
ret
fdivl
sub
cmp
or
sbb
insb
popa
jl
dec
rcrl
push
cmp
add
xor
and
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
adc
xchg
sbb
pop
repz
lds
fwait
and
push
jae
orl
sbb
dec
rcrl
imul
add
xor
arpl
jae
orl
sbb
dec
rcrl
imul
add
push
fisubl
lahf
cmp
js
push
out
inc
jecxz
dec
imul
sbb
shl
push
lret
xor
clc
movsb
pop
push
xchg
ja
mov
imul
fs
mov
adc
mov
lods
inc
sarb
push
fldl
jne
int3
jmp
ficoms
inc
inc
dec
xchg
aas
addl
insb
ret
call
repz
je
and
fistpl
lret
add
jle
insb
dec
lock
mov
ret
fcmovnbe
jecxz
repz
imul
push
xor
out
mov
sub
ss
dec
sbb
cld
lcall
aaa
lret
push
mov
jb
fmull
xchg
sbb
dec
rcrl
imul
add
xor
arpl
jae
testl
std
cmp
sub
mov
iret
aaa
mov
mov
fsubrl
jle
dec
sti
cmp
add
loop
clc
push
fimuls
movsl
and
xor
mov
pop
andb
jecxz
repz
mov
fwait
and
push
jae
orl
sbb
dec
rcrl
imul
add
xor
arpl
jae
orl
jae
loope
mov
cmpsl
pop
xchg
and
loop
inc
sbbb
sub
jle
pusha
andb
shrl
sbb
daa
pop
cmp
inc
notb
cli
or
in
ret
pop
repz
das
or
xchg
nop
test
leave
push
je
les
mov
cmc
jnp
movsl
imul
pop
dec
out
nop
in
push
jo
adcb
cmp
push
jl
es
or
lret
jmp
inc
das
stos
adc
cmc
call
popa
xchg
pop
stc
mov
cmc
es
popa
bound
movsl
mov
mov
push
lret
fsubrs
les
sbbb
push
ss
add
lea
mov
and
sar
inc
cmp
pop
cmp
js
arpl
in
enter
adc
test
add
test
pop
dec
mov
mov
dec
jo
insb
movsb
mov
jg
xor
push
mov
int
test
nop
ja
out
xchg
test
fldt
jo
dec
imul
jmp
cmpsl
add
sbb
js
daa
outsl
adcb
je
ss
xlat
inc
fldcw
jmp
xchg
in
push
pop
dec
adc
cmpsl
andb
lcall
popa
leave
and
sub
lods
imul
push
scas
sbb
mov
into
aaa
mov
mov
xorl
and
dec
jo
or
xchg
decl
leave
in
int3
mov
adc
insb
enter
add
outsb
mov
in
notb
mov
js
in
popf
ret
movsl
dec
add
cmp
xchg
mov
adc
lods
jo
dec
out
mov
repnz
push
push
adc
scas
push
cwtl
test
mov
pop
testl
mov
rcll
outsb
inc
aad
add
or
and
popf
adc
lds
movsb
and
fimull
and
or
sbb
icebp
cmp
and
inc
xor
add
imul
add
sahf
pop
out
ljmp
repz
xor
jecxz
mov
sbb
dec
out
sbb
sbb
jne
push
xchg
mov
mov
sbb
push
xor
mov
test
into
jo
mov
dec
jle
cmp
pushf
dec
mov
lds
cwtl
fs
push
dec
lcall
pop
js
push
xchg
call
call
aad
push
addr16
call
movsl
jnp
in
test
ja
aad
fcmovnbe
repnz
leave
mov
fistpl
cmp
adc
mov
adc
push
sub
ja
hlt
movsl
ja
aad
das
icebp
xor
das
rclb
nop
aam
and
push
jno
sbb
movsl
movsl
movsb
mov
in
cmp
pop
fbld
xor
mov
mov
or
sbbb
add
and
lods
cmp
rol
mov
pop
pop
aaa
jnp
pop
adc
outsb
je
aas
xchg
pop
pop
les
pop
dec
movsb
cmp
mov
push
mov
adc
cmpsb
xchg
popa
jg
sbb
data16
out
mov
subl
pusha
pop
mov
push
or
fldl
ficomps
lea
out
insb
rorl
push
aaa
stos
shrl
call
or
and
push
sub
xlat
xchg
mov
xchg
xchg
stos
cmpsl
inc
test
push
pop
add
jnp
js
push
je
and
call
dec
pop
add
mov
fsts
dec
jne
fld
shrl
aaa
iret
inc
testl
ja
xor
mov
sub
sar
lret
in
lea
mov
out
sbb
or
jne
loopne
mov
push
les
lds
stos
lods
insl
sbb
outsb
fcomi
icebp
outsl
rcrl
jnp
pop
sbb
rclb
fwait
xchg
cwtl
cmpb
jg
cld
lock
inc
sub
lea
push
sbb
add
call
push
popa
cmp
cltd
inc
jp
dec
jb
adc
xchg
imul
xor
cmpsl
notb
std
lods
inc
rorl
movsb
xchg
sbb
aam
cmp
mov
cwtl
lds
fbld
pop
inc
dec
sbb
mov
mov
or
sbb
add
mov
fdivl
lahf
inc
cmpl
mov
lret
cs
pop
inc
mov
int
rcrl
ja
loope
mov
lds
mov
ret
gs
loop
stc
inc
or
or
lock
dec
ret
lret
push
inc
cltd
mov
lods
dec
inc
out
mov
fdivrl
dec
cmp
add
movsl
inc
pop
scas
daa
jle
xchg
stos
fstpl
gs
mov
outsb
jle
mov
faddp
testl
lahf
mov
and
outsl
popf
push
scas
jle
xchg
jmp
imul
push
lods
repnz
mov
mov
shrl
inc
adc
cmc
in
mov
xchg
mov
lcall
dec
xor
loopne
jecxz
pusha
ret
push
nop
loop
and
cmp
into
repnz
mov
pop
stos
mov
inc
adc
test
shrl
mov
test
ret
dec
gs
and
and
xchg
xchg
jns
fmul
imul
test
test
mov
mov
jo
lret
mov
push
out
lds
lret
imul
cmpsb
repnz
xchg
ficomps
sub
iret
mov
fsub
ret
ret
sbb
jae
push
push
mov
call
test
jp
sbb
cld
aaa
test
cmc
rcll
add
cmp
in
or
jbe
int3
fs
cli
rclb
mov
int
test
jecxz
pop
mov
mov
movsl
repz
mull
inc
in
gs
dec
push
pop
mov
ljmp
push
xorl
insl
cmp
fistpll
pushf
aas
dec
aad
daa
sbb
mov
push
or
imul
hlt
into
mov
pop
jl
sti
xor
jb
and
mov
lcall
push
jge
xchg
adc
fsts
test
cmpsb
pop
inc
mov
lcall
in
int
xchg
negb
sub
ds
add
add
jg
aam
fcmovne
mov
push
add
pop
add
sub
mov
push
stos
xchg
and
int3
sub
mov
jbe
xor
dec
dec
cmp
in
popf
daa
es
popa
mov
leave
out
pop
lcall
mov
popf
cld
fists
fcmovnb
inc
pushl
test
lods
fstl
lret
mov
pop
sti
add
sub
call
mov
mov
mov
jae
xlat
imul
or
mov
pushf
sbb
pop
popf
in
test
imul
fstps
rclb
mov
popa
mov
ret
cmovp
xchg
fsts
js
cmp
add
repz
mov
cs
cmpsb
daa
xor
jno
and
es
mov
sarl
jge
leave
jne
xchg
jg
mov
mov
stos
xchg
push
or
divps
cs
lcall
ss
orl
dec
aad
into
loop
inc
mov
shlb
and
dec
mov
out
mov
xchg
ret
jmp
fcmovnb
lret
das
pop
add
js
sahf
mov
hlt
ffree
pop
shl
pop
shl
in
jge
daa
sub
mov
push
andl
xor
sti
cli
mov
test
inc
test
adc
and
sub
lret
dec
sbb
cwtl
jl
cmp
verw
mov
sub
push
jo
loope
mov
jge
dec
pushf
arpl
add
popa
shll
jne
jbe
cmp
mov
sbb
dec
mov
sbb
fldl
push
pop
rcrb
ficomps
sub
xor
add
inc
mov
or
and
inc
xchg
inc
cwtl
adc
lods
setle
xor
out
insl
loop
mov
pop
stc
jmp
sbb
sub
mov
clc
cwtl
icebp
xor
das
or
sub
andl
xchg
fcomi
cmc
and
in
sub
inc
adc
mov
push
sti
popf
mov
push
and
and
adc
ret
sti
lods
xchg
xor
jb
movsb
rcl
cmp
jns
sbb
imul
mov
imul
out
adc
pop
in
in
pcmpgtd
out
adc
adc
cs
dec
data16
jae
pop
push
js
sub
call
test
or
pop
iret
jp
sub
ljmp
jbe
pop
jae
sarb
push
out
and
jp
adc
xchg
dec
decl
dec
jle
xchg
mov
in
or
jne
mov
mov
mov
out
mov
xchg
ds
push
sub
loopne
pusha
pop
les
sbb
jae
mov
xor
les
sub
lods
mov
ljmp
ds
outsb
call
mov
jae
mov
cmp
jmp
xor
stos
bound
stos
scas
inc
jae
push
push
and
xchg
jl
pop
sbb
pop
or
pop
mov
in
stc
ficomps
inc
fstsw
xchg
mov
lds
cwtl
xor
lods
rcl
xor
aad
lods
call
jae
in
push
sti
mov
inc
cmp
addb
xorl
xchg
into
dec
xchg
xchg
mov
test
add
mov
add
sete
addb
xchg
jge
fwait
sahf
push
and
xchg
stc
or
mov
xchg
xchg
mov
pusha
out
ret
add
ror
inc
cmpsl
sub
adc
std
xchg
popf
xchg
fucomip
cmp
mov
add
or
daa
or
or
xor
pop
adc
sahf
xchg
sbb
inc
xor
stos
adc
pop
xchg
jge
push
into
test
ret
mov
ficoms
rol
scas
lds
mul
in
hlt
mov
ljmp
mov
mov
fiadds
sub
jg
xchg
mov
adc
push
pop
ss
mov
orb
js
or
inc
push
inc
adc
lods
rcrl
dec
pop
mov
pop
sub
scas
dec
lds
xor
jns
sarb
pop
dec
sbb
pop
mov
dec
jmp
cltd
mov
inc
out
jne
in
pop
in
clc
xor
sbb
cmp
loopne
fcomi
add
inc
sbb
in
mov
sbb
cmp
mov
xchg
push
enter
out
mov
scas
add
xchg
add
iret
inc
dec
dec
bound
push
pop
repnz
jl
daa
xchg
hlt
or
sahf
test
mov
insb
mov
fcomip
out
or
mov
mov
in
dec
add
into
pop
movsl
scas
dec
sbb
cmp
sub
xor
xchg
test
sti
and
adc
add
sub
orb
ror
push
push
cs
inc
pop
out
fmull
test
xor
repz
add
repz
pop
loope
pop
cmp
popf
stos
push
inc
push
push
and
fsubs
call
cld
push
dec
mov
and
scas
lret
sub
sti
or
adc
mov
mov
aad
mov
and
jbe
mov
adc
aas
dec
cld
dec
rcrb
mov
xchg
adc
negl
sbb
or
faddp
jbe
jne
cmp
xor
cltd
adc
mov
movsl
sbb
pop
cmp
mov
lcall
fsubrp
lds
lret
pop
sub
adcb
or
out
es
push
inc
xor
mov
jne
push
mov
push
sti
int
int
lcall
gs
or
repnz
fbld
pop
xorl
hlt
inc
insb
mov
or
adc
pop
scas
jnp
and
sub
sub
clc
mov
or
mov
cli
mov
fcomps
je
jge
dec
rcr
jae
dec
insl
push
out
hlt
and
insl
cmpsb
inc
testl
inc
arpl
addb
les
addr16
decl
pop
mov
mov
dec
jl
inc
aad
xorb
and
js
fdivrl
je
clc
adc
jb
mov
jl
xchg
ss
movsb
mov
dec
pop
je
std
lods
jmp
mov
repz
mov
imul
iret
jne
pop
sub
jo
ret
in
cmc
clc
adc
out
push
mov
fdivl
std
sub
sbb
mov
les
mov
dec
movsl
scas
push
fs
push
adc
pop
rorl
or
and
call
add
mov
push
cld
in
mov
iret
addb
and
cmp
call
and
inc
jnp
jmp
or
mov
in
mov
xor
lahf
jmp
push
cs
inc
mov
push
xlat
lret
fs
xor
dec
or
push
xchg
jp
push
jl
fdivr
addr16
out
xchg
outsl
arpl
icebp
bound
dec
sub
out
mov
xor
xor
xchg
inc
push
neg
sub
ss
rorb
pop
jl
orb
outsb
mov
and
out
fcoml
mov
mov
test
cmp
jg
jnp
xchg
stos
fbstp
jne
aas
pusha
enter
mov
mov
bound
jecxz
ret
push
push
push
push
adc
push
cmpsl
or
test
iret
mov
xorl
mov
mov
sbb
xorl
inc
and
pushf
cmp
pop
pop
orl
in
fidivrl
lds
cli
je
pop
xchg
jo
cltd
lods
ficoms
and
mov
imul
xchg
pop
jnp
jae
cmp
lds
fisubl
lods
mov
push
pusha
adc
incb
inc
mov
xor
aam
jg
insb
xlat
out
mov
cmpsb
lea
pop
xchg
test
les
xchg
cmpsb
test
dec
cmp
out
push
jne
xlat
out
sbb
or
shrb
mov
pop
insb
and
testl
cmpsl
pop
xchg
gs
iret
movsb
cmp
push
push
int
iret
stos
stc
dec
sub
sbb
gs
xchg
mov
iret
inc
hlt
out
jae
dec
pop
mov
cmp
ljmp
js
aaa
add
ja
rcl
lahf
loopne
pop
add
mov
dec
mov
insb
inc
push
outsb
lsl
mov
in
rcrl
dec
inc
test
les
dec
ds
ss
or
push
dec
fistpll
fsubs
sub
lcall
daa
xchg
or
pushf
push
lods
or
in
outsb
imul
outsl
xchg
daa
and
in
popf
fsin
xchg
repz
in
mov
mov
fmuls
outsb
in
xchg
rcrl
ret
pop
fcmove
mov
push
xor
jne
xchg
pop
fdivs
mov
and
sbb
inc
lret
jb
mulb
pop
shll
sub
sub
ljmp
inc
mov
outsb
sbb
fsub
movsb
xlat
cld
push
mov
adc
stc
andl
add
nop
popf
popa
push
enter
jne
adc
jne
inc
out
int3
ret
pop
imul
jle
xchg
cmc
sti
mov
lds
cmp
int3
inc
gs
add
std
pop
outsb
xchg
mov
stc
enter
adc
outsb
repz
or
and
pop
mov
cmp
syscall
mov
add
mov
arpl
jbe
fwait
jge
in
push
push
in
and
adc
mov
loope
cli
sbb
rorl
dec
sub
adc
iret
pop
movsb
iret
push
lea
dec
inc
lret
addb
test
ret
out
out
das
icebp
and
sbb
jb
push
mov
test
ror
add
jns
adc
xchg
sub
stos
xor
xchg
int3
ja
cwtl
push
add
inc
aaa
pushl
cmpsb
mov
in
cwtl
cmp
sahf
cmp
push
mov
sti
mov
cmp
jecxz
or
aas
mov
aaa
mov
jle
aas
lock
nop
dec
dec
in
mov
mov
xchg
clc
insb
pushf
loope
aaa
les
pop
dec
lock
in
pop
pushf
and
push
and
inc
push
ret
jle
mov
sbbl
sub
out
inc
cmpsl
sub
cmp
mov
adc
mov
scas
push
clc
movsb
sbb
xchg
push
call
dec
scas
mov
mov
xor
jns
fwait
mov
or
cmpsl
clc
movsl
loope
pop
repnz
in
aas
std
xchg
into
mov
in
shr
jns
out
ret
mov
rcll
jb
cli
xchg
stos
cmp
and
test
addl
enter
lret
push
addb
insl
cmp
sub
sar
xchg
jmp
xchg
mov
mov
in
rorl
mov
pop
test
pop
mov
pop
mov
push
int3
scas
test
imul
mov
test
sbb
xor
mov
in
jg
xchg
testb
xor
cltd
in
adc
push
mov
sbb
insl
jecxz
lods
or
jbe
inc
and
mov
lahf
sbb
dec
mov
adc
fisttpl
into
or
les
cmc
jbe
jno
aas
fwait
dec
or
cmp
and
ret
jns
adc
popl
sub
subl
jno
cmpsb
push
mov
jl
cwtl
das
mov
cmp
aam
loope
add
mov
xor
jl
aas
or
xor
int
and
xor
ret
sahf
inc
bound
adc
test
fadds
sbb
ret
dec
fcompl
dec
jecxz
mov
mov
fwait
mov
mov
out
test
lods
add
je
movsb
cs
daa
inc
ret
xor
cld
pushf
adc
daa
cld
lea
mov
leave
je
leave
shlb
mov
cmp
jae
imul
adc
mov
mov
cmpsl
in
int3
dec
add
cld
sub
pop
sub
roll
cmpsl
out
sbb
icebp
scas
out
aam
inc
ret
js
or
es
int
aas
mov
or
repz
outsb
mov
sti
loop
xchg
imul
out
pop
adcl
sub
out
out
hlt
testb
sub
jl
stos
daa
mov
mov
sbb
cs
test
xlat
sbb
inc
inc
call
insl
sub
stc
dec
and
mov
push
icebp
repnz
popa
jne
cltd
and
cli
repnz
sub
clc
ja
ret
cs
mov
add
inc
pop
dec
inc
out
lret
repnz
xchg
cli
sub
cld
push
addr16
pop
sar
pushf
pop
inc
mov
out
pop
int
dec
pop
test
add
dec
jmp
cmpb
xor
in
dec
dec
loop
arpl
inc
mov
test
lcall
filds
dec
movsl
mov
xor
xor
movsl
lret
cli
mov
push
sub
jmp
push
rcll
xchg
mov
push
mov
out
sar
add
mov
push
cmp
adc
push
pop
movsb
mov
ljmp
cmp
pop
and
pxor
popf
shl
rorl
mov
jp
inc
jae
sub
pop
or
stc
lahf
mov
or
push
jo
ja
or
mov
sbb
inc
shl
adc
push
in
cwtl
and
por
sub
shrl
jle
mov
fucomp
xor
cmpsb
xor
pop
sub
pop
mov
outsb
cltd
or
xchg
mov
mov
dec
repz
stos
and
aam
out
adc
stos
jg
adc
cmpsb
inc
mov
sbb
mov
sahf
outsb
jmp
mov
push
push
sbb
iret
int3
jo
jge
push
shlb
enter
icebp
leave
mov
mov
test
or
ret
adc
mov
mov
jle
mov
adc
jno
inc
js
mov
pop
xchg
enter
notb
push
test
sahf
sub
xor
les
shl
jnp
orb
sub
push
sbb
negl
cmp
cmp
dec
jno
bound
insl
pop
sub
mov
cmp
dec
rcrl
imul
add
xor
arpl
jae
orl
sbb
dec
rcrl
imul
add
xor
arpl
jae
orl
sbb
dec
rcrl
imul
add
xor
arpl
jb
orb
sbb
dec
rcrl
imul
add
xor
xor
adc
add
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
