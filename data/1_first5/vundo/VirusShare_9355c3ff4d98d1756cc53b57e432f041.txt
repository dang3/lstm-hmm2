add
add
outsb
add
add
push
add
ja
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
jb
outsl
add
out
jb
lock
mov
jle
push
add
add
add
add
filds
dec
add
add
add
and
add
mov
add
add
add
add
add
fiaddl
jg
imul
add
jo
xor
jecxz
sbb
jo
jo
jg
movl
sbb
jae
sbb
fildl
outsl
add
add
add
lea
jnp
jo
mov
add
add
jo
testl
fiadds
mov
add
clc
add
xchg
add
add
add
and
cmp
testl
jg
cmp
sbb
xchg
add
pop
add
add
add
dec
add
add
add
add
jo
mov
jg
fwait
add
add
add
adc
jo
mov
jg
jnp
sbb
jo
jo
and
cwtl
add
jo
cltd
add
and
sbb
jo
jo
sbb
add
add
int3
add
add
jo
dec
add
add
add
add
jo
lock
add
add
in
add
add
sti
add
add
add
roll
add
add
jo
fildl
sub
add
add
mov
push
add
add
add
jo
sbb
daa
add
add
add
flds
push
add
add
add
jo
jecxz
fwait
add
add
add
add
add
add
add
add
add
add
sbb
inc
add
sti
add
or
add
add
add
add
xchg
add
pop
push
add
add
add
add
jg
sti
add
add
add
add
loopne
add
aas
add
jo
dec
add
inc
add
add
add
loope
jnp
cli
add
jo
scas
add
add
mov
add
add
add
add
add
add
add
lret
add
add
add
push
add
cli
add
add
testl
scas
add
add
push
add
add
add
add
sub
jo
sub
fldl
movsl
add
filds
mov
add
dec
add
pusha
add
add
add
sbb
in
add
cli
add
add
cmp
cli
add
jo
jns
data16
add
add
cltd
add
add
add
flds
ja
call
add
add
sbb
mov
sub
add
pop
daa
add
add
add
add
add
add
add
dec
add
add
dec
add
add
add
inc
add
add
add
add
pop
add
add
add
add
add
add
add
scas
add
add
add
add
cwtl
add
add
add
add
add
add
add
mov
add
add
add
add
fildl
mov
jo
add
add
add
add
filds
imul
add
addl
add
add
add
jo
jo
push
add
add
add
jo
pop
add
ltr
add
add
add
add
add
push
add
cli
add
add
sub
mov
add
mov
cmp
lret
add
jo
flds
mov
dec
add
add
add
cmp
sbb
flds
jo
and
filds
out
add
add
jo
popa
add
add
add
addl
gs
add
xchg
mov
add
add
add
add
adc
flds
sub
mov
add
add
adc
dec
jbe
mov
pop
mov
jge
pop
fsubrs
jno
mov
mov
mov
mov
jno
or
cmpb
xor
frstor
adc
nop
loopne
or
push
int3
ret
cmpsl
add
cld
hlt
les
xchg
mov
repz
jl
jg
jo
push
cmc
xlat
push
inc
sahf
xlat
and
pop
cmc
jne
jmp
xchg
and
in
or
cmc
insl
xchg
divb
jmp
mov
roll
pop
ja
clc
ja
mov
lods
test
xor
sti
add
xor
pusha
adc
mov
insb
loope
mov
push
aam
pop
mov
and
out
repz
xlat
pop
mov
lret
cmovs
xor
push
fidivrl
cmpsl
xor
dec
or
sbbl
fwait
mov
dec
xchg
mov
add
jl
mov
outsb
adc
or
xchg
scas
sbb
sub
ja
mov
cmpb
movsl
fldl
lock
das
ds
push
sub
mov
xchg
iret
jl
in
inc
pop
mov
fwait
sbb
cli
test
lods
fidivs
xchg
push
leave
xor
or
and
and
or
js
sbbb
mov
mov
arpl
inc
push
push
sub
inc
out
call
hlt
push
xchg
adc
fidivrs
je
out
or
xchg
ja
sbb
mov
addr16
bound
sbbl
mov
cmp
insl
inc
pcmpeqb
sbb
int3
lahf
iret
lret
jnp
loop
stos
jl
arpl
cmp
adc
xlat
ja
and
xchg
xor
mov
mov
or
sahf
lret
mov
sub
ja
notl
inc
mov
fstl
nop
repnz
mov
cmp
cmc
and
scas
pop
dec
cli
xlat
mov
xor
mov
mov
aam
and
subb
inc
xchg
test
adc
aas
pop
mov
scas
xchg
es
movsb
aaa
jp
cs
jb
lds
jmp
hlt
pop
push
inc
testl
push
repz
std
add
js
aad
pop
adc
add
xorb
sbb
icebp
push
out
scas
push
cmc
movsl
or
ret
jae
das
test
push
enter
dec
jno
lods
adc
mov
in
insl
adc
mov
je
rcl
cmp
sbbb
mov
aad
inc
ret
popa
pop
mulb
mov
lds
and
lret
pop
cmc
sahf
push
sbb
xchg
mov
dec
jle
pop
repnz
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
in
hlt
jp
dec
aam
stos
or
push
loope
icebp
sbb
testb
and
xor
add
adc
in
hlt
jp
dec
aam
movsb
sub
fs
push
fisubl
xor
add
adc
in
hlt
jp
push
aam
movsb
xor
or
mov
push
aam
fdivrl
lods
push
adc
lds
cmpsb
popa
scas
jno
into
pop
mov
jbe
shrl
cmp
ret
mov
bound
leave
fcmovbe
fcmovu
das
and
add
xchg
jg
or
pop
ds
jl
cmp
jle
mulb
cmp
mov
aam
mov
dec
push
push
or
fs
jb
pop
inc
add
push
lock
fwait
scas
mov
mov
test
sbb
cli
push
fstp
test
mov
sbb
lcall
jne
jnp
pop
xchg
xor
push
out
mov
stc
xor
mov
pop
aam
movsb
sub
fs
inc
rcll
mov
lods
add
adc
mov
dec
mov
enter
loope
aad
and
lahf
cmp
inc
mov
out
xchg
cmp
or
jbe
add
fsubs
jbe
adc
lea
nop
pop
lods
sub
das
movsb
inc
mov
test
xchg
sbb
cli
inc
lret
and
xor
add
adc
in
hlt
jp
dec
aam
movsb
sub
fs
and
xor
add
adc
in
push
std
jg
lock
jle
sub
mov
adc
mov
subl
push
jmp
sarl
outsb
xchg
pop
fnstcw
dec
mov
andb
jo
inc
mov
js
daa
inc
mov
cltd
subl
ror
lret
jae
out
xlat
sbb
addr16
or
dec
imull
subl
dec
ja
sub
cmp
inc
sahf
mov
incb
nop
mov
data16
stos
or
pmulhw
sub
push
loopne
imull
xor
dec
xor
sahf
push
sub
ljmp
pop
or
jg
inc
xor
push
repz
xchg
jns
test
fsubrs
ds
dec
popa
out
xor
jns
inc
sbb
push
sbb
sub
int
mov
add
hlt
or
xchg
and
or
inc
hlt
mov
push
fldenv
sbb
pop
jne
dec
lock
xchg
xor
push
mov
adc
lods
add
dec
sbb
leave
lret
outsb
and
sub
daa
sahf
out
fnstsw
dec
jo
mov
jns
xor
mov
es
xor
mov
ds
push
repnz
mov
mov
push
ja
mov
inc
popf
sbb
ja
repnz
xchg
and
adc
jbe
mov
stc
loop
popf
fistpll
jp
sbb
into
data16
scas
sarl
inc
stc
cmpsb
idivb
xchg
jne
cli
sub
mov
int3
jne
int
jne
jae,pt
arpl
movsb
xchg
mov
cwtl
es
jp
in
mov
les
les
and
push
lret
pop
or
insb
cmp
cmp
hlt
cmp
mov
cld
sub
std
mov
fdivrl
fcmovne
add
dec
and
cmc
pop
and
push
cmp
jbe
pushf
mov
xor
xchg
in
lods
loop
mov
cmp
imul
or
stos
into
adc
cld
sub
mov
mov
jne
hlt
jl
cltd
stos
mov
jp
das
ss
jge
clc
movsl
jp
pop
ret
push
mov
jp
dec
cmp
roll
push
and
aas
es
out
xchg
pop
in
mov
add
sbb
mov
ss
mov
adc
cmp
negb
add
fimuls
int
ret
int3
sub
push
inc
lahf
sub
sbb
sub
cltd
and
mov
sbb
mov
sub
pop
sahf
fucom
or
jg
push
add
xchg
dec
lret
push
pop
mov
sbb
adc
stc
adc
cld
sbb
jnp
push
into
jo
pop
int
dec
push
pop
xchg
or
fisttpl
dec
xchg
xor
loop
js
je
out
adc
inc
out
xor
lcall
outsl
leave
adc
leave
lods
xlat
gs
jl
ret
pop
adc
add
mov
dec
std
js,pn
test
jne
xor
shrb
push
mov
add
negl
add
test
addr16
pop
int
mov
sub
outsl
add
push
adc
cmpsl
mov
das
push
pusha
and
mov
arpl
or
shll
adc
mov
popa
rcl
sbb
jp
out
dec
inc
jae
pop
cld
cwtl
lahf
inc
mov
jo
int
popf
in
xchg
mov
add
lret
or
scas
push
pop
cmp
shll
push
jae
inc
dec
call
mov
add
movsl
dec
push
push
jae
sub
add
repnz
insb
fidivs
ds
xor
jmp
test
jmp
dec
mov
push
mov
xchg
jge
ja
jmp
mov
mov
jmp
mov
xchg
fs
iret
dec
lds
fsubp
call
divl
inc
and
sub
pop
jnp
inc
mov
fs
jle
xor
lods
push
push
les
xchg
pop
jbe
xchg
adc
inc
and
and
test
loope
imul
mov
out
pop
aad
mov
jl
mov
das
cltd
xchg
shll
and
test
inc
dec
mov
test
inc
insl
xor
stos
fs
sub
sub
cmpsb
ss
add
dec
icebp
mov
sub
pop
fiadds
and
mov
fisubs
rorb
data16
mov
adc
jmp
in
gs
mov
ja
or
adc
push
mov
and
outsb
fmull
test
out
sti
and
mov
jle
sbb
mov
push
pop
fildl
into
adc
and
aas
repnz
aaa
sti
test
movsb
lret
push
xor
adc
or
iret
jnp
dec
jle
aaa
push
adc
push
popa
lods
pusha
push
jmp
pop
jns
in
add
xchg
add
fsub
lret
out
bound
or
inc
out
ss
jns
rorl
ja
mov
adc
into
mov
inc
cmpsl
sahf
idiv
popa
fisubl
hlt
mov
rorb
mov
mov
fs
pop
adc
pop
clc
jg
rcrb
xchg
jmp
daa
mov
mov
mov
push
cmc
jb
leave
mov
jp
pop
fimuls
push
lock
in
sbb
sub
cli
cs
mov
jge
movsb
and
ljmp
js
xchg
jecxz
dec
or
jb
mov
lret
es
cmc
popa
in
jno
mov
cltd
mov
push
std
lock
stos
jmp
ljmp
add
xchg
imul
fcmove
jbe
xchg
mov
pop
fidivrs
ret
pop
push
lea
mov
sbb
push
shr
and
adc
daa
out
jnp
xor
mov
nop
sbb
outsl
jmp
subl
lods
fwait
push
xchg
bound
jne
jge
mov
sub
pop
roll
fsubrs
adc
test
in
and
push
pop
lcall
jg,pt
scas
mov
sahf
xchg
int
mov
sub
mov
sahf
add
cmpxchg
aad
aam
ret
lahf
push
jb
push
fst
and
cmp
or
pop
rorl
clc
add
xchg
push
lret
jns
cli
enter
mov
add
lret
push
mov
scas
add
pop
sbbb
test
out
test
push
jnp
adc
outsl
adcl
repz
in
arpl
in
mov
mov
or
pop
push
push
push
nop
mov
es
mov
jne
cld
push
sbb
pop
push
mov
das
das
sahf
lahf
mov
push
sbb
icebp
je
fadds
mov
dec
in
jle
mov
push
mov
ret
mov
and
movsl
insl
jmp
push
pop
in
sahf
jb
xor
push
lds
sbb
mov
push
pop
xchg
lahf
std
outsl
hlt
add
dec
leave
mov
scas
dec
sub
xor
pop
rorb
sub
pop
jbe
in
in
mov
add
and
add
test
mov
in
pop
xchg
adcb
stc
push
adc
mov
sti
mov
jl
ljmp
cmp
sub
mov
lret
lret
dec
mov
js
or
lahf
das
divl
inc
leave
pop
xchg
adc
js
and
sbb
sub
or
adc
push
xchg
add
sbb
repnz
jo
daa
adcb
mov
add
stc
xor
lea
out
xor
push
dec
cld
stos
xor
fsubrp
dec
negl
cmp
inc
sbb
pop
das
jge
push
aas
cmpsb
sbb
jnp
repz
fnsave
fistps
jbe
stc
xor
mov
dec
jbe
mov
scas
ss
fwait
lret
push
loope
pop
or
push
pop
cmp
sub
jnp
shlb
add
and
sti
nop
dec
fucomp
fisttpll
cmp
add
xlat
loop
call
pop
jne
jbe
dec
add
lock
sarl
leave
push
mov
push
xchg
mov
xchg
ret
jb
xchg
pop
mov
sbb
daa
rclb
xor
dec
mov
dec
jl
and
mov
or
aas
mov
out
stc
cmp
arpl
insb
fildl
push
pop
xor
dec
xor
imul
mov
hlt
scas
fstpt
cmpsl
cmp
and
lahf
sub
push
inc
dec
fwait
mov
adc
and
jo
mov
pop
push
fbld
ljmp
or
and
imul
push
mov
arpl
outsl
mov
xcrypt-ecb
cmpsl
lret
push
sti
adcl
out
cmp
jnp
fisubrs
das
out
push
aaa
and
cmc
pop
lods
adc
outsb
movsb
cmc
xor
cmp
nop
ror
and
in
xchg
mov
push
pop
jno
imul
mov
xorb
pop
test
ljmp
lock
call
clc
aad
movsb
lcall
jg
jmp
cmpsb
mov
push
sub
xor
pop
pushl
les
or
xorl
out
sub
dec
divl
sbb
cs
fiadds
std
add
mov
pushf
fwait
push
mov
push
out
ja
inc
jnp
or
push
xchg
mov
xor
cmp
or
filds
ljmp
shrb
jg
xchg
push
sub
adc
mov
loop
mov
out
int
fcmove
mov
push
or
and
xor
outsb
adc
lods
lcall
jg
dec
sub
cmp
xchg
jecxz
xchg
lods
dec
sub
add
aam
jle
jne
into
xchg
sub
sub
inc
out
fisubrl
sahf
fimull
mov
adc
jnp
mov
xchg
sbb
mov
leave
jae
outsl
mov
xor
loopne
test
dec
inc
xchg
xor
shl
sahf
add
rcrb
or
cmpsl
mov
sbb
mov
pop
inc
lahf
imul
rcll
xchg
insb
fadd
jmp
lods
int
mov
pop
andb
test
es
hlt
push
loop
pop
int3
xchg
stc
daa
cltd
and
sbbb
add
mov
fildll
decb
adc
pop
jno
pop
sub
sub
xor
lock
dec
hlt
fwait
outsb
into
dec
enter
fldcw
mov
inc
sub
repz
xor
cmp
mov
add
mov
xchg
adc
mov
fcmove
in
popa
stc
ljmp
mov
pop
enter
cs
mov
mull
inc
and
pop
shll
shrb
hlt
mov
xor
mov
mov
daa
dec
mov
xor
out
inc
mov
cmp
sahf
enter
gs
cld
xor
sti
fucomi
fwait
cmpsl
add
dec
out
xchg
movsb
add
inc
add
push
lds
mov
int3
jecxz
dec
add
stos
cmp
xchg
sbb
push
pop
inc
test
cmp
push
mov
aad
mov
rorl
jb
jecxz
and
scas
or
icebp
leave
fyl2x
cwtl
and
push
sub
xchg
xlat
aam
push
push
call
ljmp
mov
scas
call
push
ret
add
fcoml
test
int3
push
dec
dec
stc
fcom
mov
adc
fisubrl
test
and
pusha
cs
xchg
cmp
jp
adc
pop
mov
jne
inc
fwait
cli
repz
mov
lcall
add
jbe
lods
mov
add
lock
dec
popa
mov
pop
xchg
xchg
mov
fcmovnu
and
mov
test
scas
cmc
jecxz
cmp
lods
mov
psllq
and
mov
lock
or
pop
and
fsubs
add
lcall
je
push
lret
xchg
clc
mov
iret
add
outsb
xchg
in
std
mov
rolb
mov
pusha
outsl
add
test
inc
dec
push
cmpsb
mov
inc
xchg
loope
dec
fwait
mov
xchg
dec
or
ret
push
mov
loope
out
pop
idiv
mov
aam
mov
push
pushf
mov
xchg
pusha
adc
cli
mov
jle
adc
cltd
fstpl
inc
aas
mov
add
sti
mov
sbb
mov
aas
dec
daa
std
cmp
inc
sahf
sti
cld
adc
cltd
xor
push
clc
fisubl
sub
rclb
xorb
lea
pop
roll
xor
movsl
cmp
movsb
mov
in
test
push
cmp
pop
lahf
test
sbb
ljmp
lods
shl
cld
pop
add
cmp
repnz
mov
pop
dec
xchg
xor
subb
int3
int3
mov
loope
add
lahf
in
sub
scas
jbe
jae
aad
lret
xor
insl
mov
cli
ss
and
jo
adc
dec
xchg
pop
sti
js
cwtl
sub
push
mov
lock
dec
mov
add
or
jmp
test
int3
dec
insb
mov
inc
and
pushf
push
ficomps
lods
in
inc
xchg
stos
subb
jp
loop
aaa
mov
lcall
and
sbb
orb
cwtl
pop
popa
dec
pop
xchg
mov
loop
push
mov
mov
pop
scas
inc
mov
cli
repz
negl
mov
scas
dec
in
or
insb
jno
xor
push
into
loop
lock
mov
jle
dec
xor
xchg
dec
test
mov
fsubrp
in
push
dec
inc
cmpsb
cmc
test
mov
xor
stc
push
mov
mov
das
lret
cmpsl
lahf
bound
cmpsl
cwtl
mov
jne
jge
mov
test
aas
stos
jno
test
loopne
mov
pushw
fisubrs
jnp
mov
xchg
loope
jmp
push
roll
mov
lea
mov
adc
outsl
aaa
jbe
xor
mov
fstl
insb
sarl
adc
xor
bound
fmuls
repnz
mov
dec
xlat
insl
cmp
mov
push
and
ja
ret
jne
popf
xchg
das
fwait
loope
inc
mov
in
sub
faddl
inc
ja
xor
ljmp
lock
pusha
mov
fucomip
lret
sbb
xchg
lret
clc
test
outsl
shrb
xchg
sbb
fstps
daa
shll
xchg
xchg
mov
pop
jo
divl
sub
shlb
sbb
or
sti
lock
js
icebp
dec
push
pop
xor
cmpsb
push
adc
push
rcrl
adc
aas
add
xchg
pop
xchg
les
repz
and
add
mov
es
daa
inc
jmp
cmpsb
mov
add
cmp
sbb
cmp
ds
sub
lahf
cltd
dec
push
das
sbb
jle
imul
inc
pop
lret
pop
jl
testl
icebp
imul
and
addl
mov
mov
cmp
jb
jp
xchg
mov
je
inc
add
test
adc
dec
pop
lds
gs
loop
jp
arpl
and
inc
shlb
ds
fsubp
stos
push
mov
clc
push
push
xor
aam
sbb
push
cld
push
lret
ffreep
enter
add
xchg
lods
pop
mov
stos
outsl
shlb
inc
mov
fs
adc
jg
jo
out
les
repz
pusha
push
enter
fisttpll
sbb
sub
scas
inc
mov
icebp
aaa
jl
mov
xor
pusha
rclb
repz
pop
cmpsb
push
loop
arpl
dec
outsb
cmp
insb
out
ja
xor
jae
sahf
mov
xchg
cmc
cmc
int
mov
mov
pop
adc
stos
mov
mov
xchg
jle
or
dec
jmp
loop
push
mov
stc
repz
cmp
and
jb
pop
insl
dec
in
subb
das
int
and
mov
mov
sbb
mov
push
fstpt
pop
fsts
ljmp
jne,pn
or
stos
inc
pop
jns
andb
mov
cmc
cmp
pop
xor
pushf
add
mov
inc
aam
cmpl
loop
dec
jg
es
shrl
sub
inc
roll
lds
or
push
and
pop
lret
icebp
and
push
fs
mov
push
sub
notb
cmp
fnstcw
push
and
fwait
jecxz
cmp
mov
jne
jbe
mov
adc
adc
dec
sub
addr16
fwait
js
cmp
rcl
arpl
nop
mov
push
fistpl
push
std
jbe
xchg
outsl
popf
sbb
out
cmp
mov
stc
pop
aas
xor
mov
xor
cmp
outsl
int
hlt
in
push
in
xchg
and
movl
aam
adc
xchg
call
ja
xchg
cs
adc
push
mov
pushf
sbb
fldt
repz
adc
xchg
popl
int
bswap
inc
add
push
rorl
mov
adc
xchg
popa
ss
adc
inc
push
stos
jp
pop
xchg
push
sahf
and
mov
adc
cmc
add
sbb
push
js
xchg
scas
xchg
push
not
fstps
pusha
cmp
xor
mov
stc
lock
in
push
in
test
out
lods
xor
cmc
data16
add
inc
dec
sub
loope
sarl
mov
fsub
cmpsl
das
jo
jb
inc
lods
out
sti
out
pushf
pop
lock
push
sbb
loopne
in
ret
sub
nop
push
pop
lods
mov
and
rcl
and
jl
shll
push
aas
push
out
ja
test
ds
out
pop
inc
out
ljmp
add
xchg
push
inc
sbb
inc
mov
in
div
negl
push
repz
in
outsl
jge
cmp
pop
loopne
jae
xor
adcb
mov
fsubrl
mov
ret
cmp
or
pop
seta
or
into
in
or
xor
cmpsb
cwtl
pop
out
out
pop
xchg
cwtl
arpl
mov
sbb
pop
inc
push
ret
mov
adc
mov
xor
cld
jmp
in
enter
faddl
aad
call
clc
push
mov
cmp
push
adc
inc
cld
jl
and
adc
sbb
xchg
aad
pop
xchg
add
scas
mov
movsb
lcall
jg
pop
in
jl
xor
or
inc
sbb
adc
cli
std
push
adc
xchg
jg
loop
test
inc
xor
cmp
lret
and
rcll
rcrb
dec
push
lds
xchg
push
jecxz
imul
jle
dec
mov
xor
ja
pop
push
icebp
int
insl
or
sbb
xor
nop
loope
inc
lret
mov
pop
call
mov
xchg
adc
cmc
mov
mov
mov
inc
sub
test
mov
test
xchg
fnclex
ret
mov
inc
ret
fdivl
mov
add
sbb
aaa
sub
std
inc
addl
xor
push
repnz
sbb
leave
clc
mov
mov
mov
cmp
movsb
insl
mov
or
inc
push
cmc
insb
sub
in
out
push
rcl
dec
mov
bound
adc
pop
out
repnz
mov
idiv
jl
out
xchg
mov
dec
out
push
xchg
dec
pushf
aam
or
inc
jno
dec
jo
xor
loop
xchg
rcll
mov
mov
push
loopne
mov
or
aad
or
sub
outsl
mov
mov
int
out
adc
fs
mov
lock
pop
push
sub
adc
add
mov
jle
aas
add
cli
or
js
cmpsb
mov
push
jge
jbe
lret
loop
push
stc
sbb
xchg
mov
sbb
mov
add
pushf
jnp
sbb
xlat
inc
idivb
and
add
xor
mov
sbb
dec
mov
fs
xor
xor
pop
insl
mov
jnp
lea
sbbl
or
lahf
int3
stos
mov
aaa
mov
aam
js
mov
aam
cmc
inc
jl
and
imul
cmp
test
mov
sub
test
dec
jo
push
int
mov
ljmp
aam
pop
aaa
mov
or
sbb
repnz
gs
movsl
aam
movsb
sub
fs
and
xor
add
adc
in
hlt
jp
dec
aam
movsb
sub
fs
and
xor
add
adc
in
hlt
jp
dec
aam
movsb
sub
fs
and
xor
add
adc
in
hlt
jp
dec
aam
movsb
sub
fs
push
and
ja
addr16
push
push
inc
inc
sbbl
xor
add
icebp
out
xlat
rol
shll
xchg
push
push
inc
inc
aaa
xor
and
adc
add
icebp
out
xlat
ror
shll
xchg
dec
push
pop
inc
xor
and
adc
add
pop
mov
into
lret
jecxz
sbbl
xor
mulb
ret
rolb
test
sub
mov
mulb
cwtl
loope
aaa
sti
mov
xchg
pop
xchg
inc
jb
into
push
sub
cmp
mov
xchg
sarl
sub
sub
pushf
push
in
mov
adc
mov
pop
popa
xchg
outsb
xchg
jbe
ja
sahf
popf
arpl
xor
and
sahf
push
jl
out
loop
cmp
sbb
xchg
xchg
ljmp
xor
xor
add
xor
and
dec
mov
xchg
or
out
sahf
adc
mov
lods
in
psraw
test
stos
rcll
xchg
test
popa
push
push
inc
inc
and
aaa
and
adc
add
icebp
jmp
iret
rcr
shrl
xchg
sbb
add
cmp
sub
and
pop
push
notl
xchg
xchg
ljmp
push
aaa
xor
daa
inc
pop
push
add
xchg
loope
jecxz
adc
or
cmp
das
and
xor
and
adc
add
icebp
out
xlat
rol
shll
xchg
push
push
inc
inc
aaa
xor
and
adc
add
icebp
out
xlat
rol
shll
xchg
call
std
push
shlb
ds
sub
mov
in
scas
adc
mov
sbb
push
std
out
out
mov
test
repnz
divl
addl
xor
mov
xchg
and
adc
mov
sahf
jl
imull
or
jg
add
dec
push
cmp
movsl
xchg
xchg
adc
and
ds
xor
aad
adc
test
movb
ljmp
cs
sbb
mov
add
xchg
movsl
push
add
loop
fisttps
push
cmp
xlat
push
pop
sbb
inc
push
stos
sahf
dec
fcomps
iret
js
inc
pushf
or
cmp
xchg
mov
inc
sbb
or
test
inc
xchg
outsl
es
mov
nop
rcll
subb
xadd
jb
bound
mov
and
popf
cwtl
sbb
aam
xchg
cmp
ss
fs
sti
sbb
aas
cwtl
lea
sub
stos
mov
dec
adc
les
cmc
jo
push
test
xchg
add
jo
jecxz
mov
or
jne
push
or
mov
xchg
inc
and
dec
push
jo
inc
nop
insl
push
pop
jns
movsl
push
into
ljmp
data16
add
push
fnsave
xchg
and
cmp
sbb
sbb
arpl
xchg
imul
aad
dec
mov
cmc
add
enter
lock
inc
sti
jno
jbe
mov
adc
ret
aas
lods
out
cltd
ret
mov
sbb
sub
adc
repz
cs
adc
roll
pop
inc
lret
xchg
js
ss
sbb
xchg
pop
outsl
ds
stos
adc
sbb
cmp
sbb
xchg
adc
stc
mov
inc
dec
add
outsb
add
pop
jg
or
pushf
mov
sahf
adc
adc
mov
imul
sbb
jp
mov
push
cmp
int
daa
mov
xchg
iret
insl
stc
push
lahf
xor
sub
xlat
add
push
push
pop
aas
addr16
inc
mov
fcom
push
adc
loopnew
fisubl
cmp
jmp
dec
cmp
out
inc
out
ljmp
mov
jno
cmpsl
or
cmpsb
mov
fists
jbe
jo
fs
xor
adc
mov
out
inc
cmp
cmp
dec
into
cwtl
rcrb
fisttps
iret
pop
push
lods
jb
mov
lcall
aaa
inc
iret
push
test
fcomps
or
push
ljmp
addl
and
adc
mov
add
mov
sub
or
mov
stc
cmp
jl
or
ror
scas
cli
inc
push
inc
mov
jmp
out
mov
arpl
pop
inc
xchg
cwtl
out
int3
out
cs
inc
scas
cmc
pop
imul
fcomip
mov
jbe
fsubl
xor
sub
imul
das
pop
jg
cwtl
sub
xchg
and
fwait
push
cmp
cmp
jbe
sbb
sbb
jb
lret
xchg
aas
stos
fstl
shll
xor
adc
cmpsb
cmp
mov
movsb
mov
sub
pop
mov
mov
push
and
add
and
test
jo
push
aas
pushf
add
or
lock
add
insl
sub
lea
loop
inc
pop
inc
xor
fwait
sub
jge
outsl
sub
xchg
xor
dec
jge
jne
repz
fs
mov
sub
loope
cli
andl
sbb
add
test
mov
lds
inc
add
inc
pop
xchg
in
or
frstor
test
or
bound
and
xlat
mov
mov
fistl
aam
mov
sub
ljmp
fsubrl
sar
fwait
adc
lret
lret
sub
mov
daa
push
push
push
or
mov
jp
aas
cmpsb
aam
xchg
add
fbld
test
out
lock
sub
dec
add
ds
push
jne
sub
loop
xor
adc
cmp
xchg
xchg
xchg
les
sub
mov
cmp
push
mov
and
mov
inc
inc
adc
stos
ljmp
sub
jle
inc
xchg
cwtl
mov
cli
stc
pushf
xchg
shrl
xor
fs
push
pop
jbe
js
and
lods
enter
loopne
lea
push
ret
sub
outsb
out
cmp
and
lret
add
js
fisttps
ret
popa
int
sbb
add
shll
adc
xchg
enter
or
jns
into
ss
mov
stc
loopne
cltd
loopne
push
cmp
cmpsb
add
fdivrp
ret
das
mov
testl
int
push
inc
adc
sbb
push
push
fbld
out
adc
add
push
dec
data16
jle
scas
mov
and
stos
add
cmp
sbb
cmc
and
hlt
sarb
rol
stos
mov
and
lea
pop
jb
aas
sbb
xchg
add
xor
sub
push
or
jo
idivl
ljmp
mov
and
subl
or
cmp
out
mov
mov
cmp
cwtl
fcoms
mov
fiaddl
lea
jns
into
lea
xchg
pop
dec
xchg
add
add
sub
scas
mov
addl
bound
int3
lcall
adc
stos
xor
mov
jo
jo
mov
push
push
push
or
es
push
in
lret
xor
add
push
rcl
dec
add
cld
inc
retw
out
cmpsb
pop
push
in
fisubs
jb
pusha
inc
mov
outsl
fwait
push
ret
push
out
jmp
jmp
roll
xchg
mov
enter
enter
fstps
jmp
mov
jb
jnp
mov
cmp
movsb
mov
mov
jecxz
or
cltd
lcall
add
inc
jp
inc
adc
stos
insb
dec
movsl
or
outsb
inc
xor
je
jno
pop
jbe
mov
pop
cmp
sti
push
push
fidivrl
in
mov
jne
jo
fistps
int
mov
test
out
dec
fidivl
popf
sahf
xorb
cmc
js
jp
xor
add
je
mov
add
leave
jmp
dec
mov
inc
jb
dec
pusha
imul
or
sub
mov
xor
fsubrs
test
ljmp
mov
cmp
outsl
call
mov
jbe,pt
stos
cmc
cs
rorb
int
je
sub
xchg
or
lret
icebp
xchg
fsubs
aaa
mov
and
xor
in
adc
rcrl
fcoml
test
push
loopne,pn
pushf
fs
and
adcl
dec
cmpsb
mov
inc
add
jge
scas
sbbb
dec
sub
dec
mov
mov
int3
push
dec
lcall
test
xchg
into
in
cvtps2pi
sbb
xchg
mov
adc
loope
or
xchg
mov
or
inc
je
mov
je
cmp
aas
in
pop
jns
cwtl
add
shll
jb
fs
aaa
out
adc
mov
in
icebp
cli
or
ja
imul
sub
ds
push
lret
jns
sub
fisttpl
ret
or
mov
dec
inc
rcll
roll
sub
sub
pop
or
xchg
ret
jne
scas
xor
incb
mov
cmp
add
inc
pop
je
outsl
outsb
dec
faddp
sub
faddl
mov
daa
inc
push
cmp
sub
movsb
xchg
fsubrl
inc
into
iret
cld
mov
enter
fiadds
das
movsb
les
in
mov
jb
adc
lea
inc
inc
inc
fidivrl
psraw
add
mov
stos
test
mov
push
rclb
jp
mov
xchg
rorl
cs
adc
jl
or
pushf
dec
arpl
in
jo
adc
fwait
je
loopne
jg
shlb
inc
sbbl
ja
scas
inc
jnp
push
adc
gs
mov
fdivl
ljmp
gs
lret
push
es
push
pop
mov
inc
aam
jl
sub
int3
cwtl
adc
mov
lcall
scas
xor
int3
mov
inc
lds
xchg
idivl
push
in
cmc
cltd
mov
push
jns
pop
test
lea
inc
and
xchg
push
outsb
cs
xchg
and
pop
add
int3
push
call
fdiv
dec
jno
out
stc
xor
mov
scas
stos
popa
cmp
xlat
xor
jae
or
mov
mov
pop
into
jg
dec
rolb
cld
mov
loopne
je
jl
cltd
push
leave
mov
lcall
enter
inc
iret
test
sbb
mov
inc
aaa
test
xchg
imul
scas
mov
imull
ret
dec
sbb
mov
sub
ret
push
push
lods
sbb
push
int
sub
cmc
dec
data16
mov
stos
dec
enter
hlt
mov
imul
push
pop
and
add
frstor
ret
jle
lods
mov
out
and
sub
insl
rorl
add
arpl
xchg
cli
adcb
push
fisubl
mov
add
sbb
aaa
inc
dec
sbbl
push
sub
xor
mov
fcomip
jnp
loop
test
nop
call
fldl
roll
aad
xorl
push
jmp
adc
or
and
das
int
pop
mov
mov
push
imul
xchg
cld
outsb
adc
add
mov
push
and
rcrl
in
jns
loopne
jecxz
mov
pop
js
nop
pop
push
pop
es
mov
icebp
ljmp
mov
sub
add
sbb
sbb
test
cli
cwtl
shlb
sub
cli
decb
add
int3
sbb
adc
in
mov
sbb
insb
test
xor
xchg
sti
mov
adc
xor
mov
lock
mov
sbb
mov
pop
jne
cmpsl
cmp
and
scas
sub
jnp
icebp
mov
jae
repz
dec
dec
cmp
cmp
pusha
and
and
inc
or
leave
addr16
xchg
inc
test
mov
mov
push
popa
push
cltd
add
fimull
loope
cmpsb
out
out
cmp
pusha
sbb
int3
ja
out
push
jns
popf
add
sbb
mov
mov
jl
cs
or
cmp
mov
sti
lcall
lds
mov
jl
jb
inc
push
negl
xor
jo
sti
fimull
jns
imul
loopne
daa
jb
adc
or
dec
mov
loope
jne
iret
dec
inc
bound
repz
inc
lret
pushf
int
addr16
iret
jg
mov
mov
xchg
vphaddudq
lcall
adc
pushf
daa
popf
subl
cli
pusha
stos
cltd
js
mov
and
sub
lret
push
sub
adc
out
sbb
fs
lret
test
pop
rcl
not
pop
outsb
pop
push
jecxz
sub
push
call
mov
sbb
dec
mov
leave
enter
sub
cmpsl
pop
pushf
inc
pop
out
sahf
mov
mov
mov
jno
adc
inc
test
cmpsb
popa
arpl
mov
xor
mov
or
insl
pop
rcrl
dec
and
pop
fimuls
xor
cmp
or
or
cmp
push
pop
lret
daa
jne
push
jmp
mov
mov
mov
daa
sub
daa
xlat
cmp
pop
push
mov
outsl
mov
stos
xor
scas
or
pusha
pop
and
jge
mov
aas
inc
add
movsl
xlat
and
fldcw
sub
out
in
call
fwait
hlt
xchg
mov
mov
dec
mov
pop
xlat
push
mov
test
test
fsubrp
shrl
fbstp
daa
mov
and
and
rorb
test
rorl
mov
imul
xchg
and
pushf
divl
jns
movsb
mov
sub
dec
jmp
movsb
out
loope
cld
bound
adc
cwtl
icebp
cmc
adc
cmp
or
xchg
std
cmp
sbb
dec
iret
cs
sub
mov
fistl
inc
in
cmpsb
test
sbb
dec
adc
xchg
lahf
jns
and
orb
cli
cmp
sbb
pusha
cmpsb
inc
out
and
mov
sbb
mov
lret
pop
pop
push
pop
outsl
mov
sbb
stos
push
or
imul
jnp
adc
or
mov
in
in
inc
xchg
mov
test
ljmp
jne
xlat
push
cmp
out
mov
jp
ljmp
inc
sbb
aaa
sbb
push
es
out
test
adc
outsl
nop
loope,pn
daa
jno
into
pop
inc
sbb
adc
or
mov
pushf
fisubs
jns
iret
add
popa
dec
cmc
sbb
mov
imul
mov
or
incb
jno
adc
jge
movsb
adc
in
xchg
test
cld
pop
insl
dec
mov
mov
lret
xor
xchg
pop
jle
mov
cmp
jecxz
fs
add
jne
fbld
add
jno
mov
test
stos
sar
leave
lock
test
pop
loope
inc
es
xor
push
outsb
aam
xchg
mov
jmp
cwtl
cmp
and
out
sbb
jno
pop
mov
leave
int3
out
stc
mov
fdivs
jmp
neg
xlat
dec
adc
and
nop
cmpsb
fildl
push
out
push
mov
and
push
loop
ljmp
arpl
push
jp
popf
and
or
pop
iret
mov
inc
xchg
xlat
negb
push
jbe,pt
jnp
push
dec
push
xchg
jmp
mov
repnz
jg
pop
leave
dec
fistps
cmpsb
dec
cmp
and
mov
fwait
adc
add
int3
dec
add
mov
decb
cltd
dec
mov
in
sbb
and
mov
mov
inc
mov
xchg
cmp
xchg
mov
adc
insl
dec
xchg
xchg
dec
cmc
or
scas
pop
pop
mov
xor
inc
xchg
mov
cltd
pop
xor
iret
push
push
clc
fwait
test
jecxz
call
mov
ficompl
sbb
cmp
mov
es
mov
lcall
cmp
xor
iretw
dec
mov
adc
sbb
dec
push
dec
pop
lcall
sub
test
sub
sub
iret
test
mov
mov
xor
cmp
pop
daa
imul
xor
cmpsl
xor
aad
push
pop
outsb
orb
rorb
jmp
jmp
sub
imul
dec
test
push
jb
sbb
das
mov
js
popa
leave
jbe
out
cmp
inc
shlb
sub
pop
iret
cmp
sub
negl
mov
fistpll
push
pop
dec
xchg
roll
daa
pop
shlb
pop
inc
stc
icebp
cwtl
cli
lods
repnz
cmp
sti
add
push
cmp
inc
mov
mov
push
mov
fs
sbb
stc
pop
shl
jns
enter
in
mov
jg
ficompl
or
mov
gs
dec
inc
clc
into
sarb
mov
pop
pop
inc
mov
and
leave
rcr
popf
sbb
push
rcr
das
bound
sub
and
jae
cmp
jbe
inc
es
or
mulb
inc
ss
and
mov
xlat
sbb
test
dec
test
dec
pusha
mov
sbb
cmc
fisubs
push
les
push
or
ss
std
push
cmpsl
mov
adc
lcall
inc
std
cmovg
mov
cmp
test
loopne
or
add
jo
sub
xchg
push
and
dec
pop
div
icebp
mov
cmpsb
movsb
stos
jge
hlt
pop
out
push
iret
mov
bound
movsl
jne
mov
mov
hlt
inc
daa
js
shl
mov
sub
push
jno
btc
sbb
cwtl
xchg
inc
mov
in
adcl
add
pop
sti
xchg
mov
addr16
js
adc
enter
lea
and
mov
lret
dec
lret
dec
iret
std
rorb
pushf
std
loopne
push
cmp
cld
jo
jge
add
xchg
mov
loop
or
sub
cs
push
andl
ja
out
cmp
ss
jl
cmp
fstpt
pop
test
push
cmp
test
int
call
cmp
aaa
mov
inc
call
idiv
mov
enter
lret
cmp
mov
xchg
xchg
stc
xchg
xchg
xor
xor
xor
in
ficomps
insb
insl
mov
xchg
fcmovnb
jno
movsl
jp
xchg
fidivs
js
pop
rcll
cmc
cmp
aad
test
out
or
loopne
pop
push
daa
outsb
int
lods
or
ficomps
inc
xor
das
mov
hlt
cmp
imul
lret
inc
xchg
dec
fistps
sbb
mov
push
xchg
cmp
xor
insb
cmpsl
mov
sub
fs
pusha
sbb
or
xor
pop
jmp
jnp
daa
cmpsb
gs
adc
mov
push
and
stos
cwtl
lea
or
nop
sub
mov
sbb
fsubrs
pop
cmp
xchg
out
mov
jg
mov
loope
pusha
fisttps
mov
dec
cmp
cmp
push
mov
fsub
sahf
sti
mov
lods
jnp
loopne
loop
shl
pop
sub
xchg
adc
pop
ss
lret
in
fists
push
scas
push
sbb
addl
sub
mov
fsub
insb
arpl
cli
into
ds
jmp
xor
jb
sub
and
jbe
cli
jecxz
add
cmpb
and
and
fwait
imulb
jae
inc
fsubrl
pop
jge
jp
iret
add
cs
pop
mov
push
bound
jnp
add
mov
js
inc
adc
mov
testl
push
sub
pop
mov
mov
test
imull
xchg
cmpsb
cld
inc
scas
orb
jp
sarl
mov
les
arpl
jmp
sbb
or
push
ficoml
add
mov
iret
daa
loope
mov
lret
or
xchg
and
jns
inc
mov
ss
adc
mov
cmp
dec
jmp
stos
mov
lds
push
roll
jmp
jle
iret
xchg
pop
rcll
jbe
fiadds
push
xor
popa
jnp
stc
pop
stos
pop
adc
daa
test
std
lods
pop
lret
movsb
dec
popf
xor
dec
and
addr16
xor
cmp
jmp
pop
mov
imul
push
jno
arpl
leave
aam
aas
or
adc
xor
adc
addl
outsb
into
dec
jns
fisubrl
xchg
xor
xor
add
nop
or
lcall
and
lods
rorl
xchg
mov
push
jmp
ret
insb
daa
pop
jb
mov
xchg
aas
cmp
int3
jecxz
test
add
aad
jp
mov
sbb
in
mov
sub
call
test
lcall
jecxz
sbb
xchg
inc
shrl
adc
nop
js
std
aaa
js
ficomps
into
xor
es
stos
dec
push
inc
inc
cmp
test
xchg
mov
pop
daa
push
je
push
pop
cwtl
sahf
lods
aam
add
sub
fists
fbstp
pop
jmp
add
sti
bound
or
push
insb
mov
xchg
mov
cltd
dec
test
leave
rcrb
xor
out
dec
loope
test
dec
fsubrs
mov
push
add
dec
bound
dec
mov
inc
xor
test
xchg
in
ret
loop
or
mov
mov
gs
cs
mov
inc
loopne
push
addb
adc
adc
jecxz
insb
pop
sub
rorl
es
addr16
pop
out
outsl
loopne
push
pop
and
icebp
inc
inc
fs
pop
push
sub
cltd
mov
cmc
or
mov
and
clc
movsb
sarl
leave
pop
shrb
mov
insb
mov
shr
aas
and
adc
adcl
fldcw
mov
dec
push
hlt
xchg
pop
rol
jne
push
aad
add
orl
clc
mov
shl
repz
lods
mov
pop
mov
fnstcw
adc
ret
out
jg
push
push
ret
mov
addr16
popf
dec
xchg
leave
cmpsb
add
sbbb
sbb
sbb
cmp
in
es
popa
pop
push
inc
inc
aaa
xor
and
adc
add
icebp
out
xlat
rol
shll
xchg
push
push
inc
inc
aaa
xor
and
adc
add
icebp
out
xlat
rol
shll
xchg
push
roll
aaa
xor
mov
divl
loope
rol
shll
test
push
push
inc
inc
xor
adc
dec
jge
mov
cmp
pop
push
mov
sub
push
push
mov
push
pushl
movl
movl
movb
push
push
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
mov
mov
lea
push
movl
movb
movl
movb
movb
movb
movl
call
pop
pop
leave
ret
push
int3
out
imul
cmp
mov
out
shrb
jl
insb
pop
sbb
dec
ss
sub
int3
out
imul
xchg
lods
inc
pop
push
dec
pop
jl
insb
push
sbb
or
cmp
sub
int3
out
imul
xchg
lods
inc
bound
pop
or
insb
gs
jg
push
pop
pop
sub
mov
or
mov
push
sbb
daa
cmp
sbb
in
aam
mov
fs
jae
mov
movsb
xor
test
insl
sti
fsubr
xchg
cmp
rolb
xlat
sbb
or
pop
sub
pushf
push
mov
jns
lods
mov
ret
jae
add
int
std
sbb
xchg
mov
push
outsl
nop
pop
sbbb
inc
pop
ss
cmp
xor
pushf
sahf
jae
inc
mov
sbb
dec
xorb
aam
dec
mov
pop
xor
std
jae
push
pop
pop
ja
sub
js
insb
jb
push
clc
daa
sub
sub
int3
out
imul
xchg
lods
inc
pop
push
dec
data16
insb
push
sbb
or
cmp
push
mov
pop
mov
repz
fsubrl
xor
and
jb
pop
jne
mov
xchg
xchg
stc
repnz
adc
cmp
push
sub
add
arpl
sub
mov
mov
lock
mov
pop
push
dec
data16
insb
push
sbb
or
cmp
sub
int3
out
imul
xchg
lods
inc
pop
push
dec
data16
insb
push
sbb
or
cmp
sub
fldcw
movsb
cmp
pop
shlb
cmpsl
add
imul
in
addl
adc
cmp
xchg
jb
xor
mov
cmp
enter
movsb
dec
or
test
clc
pop
mov
add
pop
sbb
add
xchg
inc
into
rol
stos
stos
inc
lcall
ljmp
push
das
mov
pop
jg
jnp
mov
or
cmp
xchg
xor
or
sbb
std
fcomi
test
or
inc
subl
das
mov
movsl
jbe
out
pop
stos
mov
mov
cmpsl
mov
loope
mov
sbbb
dec
aam
sbb
aaa
mov
test
push
dec
push
test
adcl
xchg
mov
scas
mov
xchg
stos
fldcw
cmp
jecxz
in
pop
call
xchg
lods
mov
imul
add
xor
pop
mov
jns
aam
xor
lcall
adc
fisubrl
imul
mov
out
stc
pop
enter
cltd
pushf
lret
pop
sbb
adc
cli
ja
jae
jo
rcll
enter
popaw
push
inc
push
pop
jecxz
test
fstpl
sub
xchg
jg
mov
dec
cmp
stos
imul
rcrl
icebp
xchg
sub
sbb
xchg
xor
push
loopne
mov
xchg
pop
xchg
out
sbb
jbe
sbb
dec
add
push
xor
fucomp
and
lds
mov
enter
leave
pop
push
sbbb
jp
mov
jbe
stos
xchg
mov
cmp
imul
jle
jp
dec
xchg
or
push
lret
mov
std
adc
add
inc
xor
pop
icebp
adc
je
ret
cmc
mov
jae
and
cmp
pusha
mov
in
or
mov
push
lret
call
xor
inc
push
scas
push
scas
push
stc
xor
mov
or
scas
je
mov
jle
xchg
xlat
sti
jns
pop
dec
sub
jb
dec
lods
sub
imul
mov
and
ret
and
sahf
out
cmpsl
mov
cmc
cmp
push
ja
xchg
clc
jmp
ret
dec
jo
dec
sarb
aas
test
mov
dec
or
mov
add
stos
adc
iret
subb
adcl
je
push
jmp
les
dec
fldcw
inc
sbb
inc
scas
bound
cwtl
ds
mov
inc
out
dec
lret
sbb
movsl
jo
dec
or
cmp
dec
jge
lret
out
pop
push
mov
pusha
in
add
test
idivl
sbb
adc
or
jbe
clc
inc
mov
jno
xor
hlt
rolb
fstl
add
cmp
leave
mov
and
test
dec
pop
dec
xchg
rcrl
adc
lock
push
gs
push
inc
neg
mov
cld
testl
dec
leave
push
ret
jns
repz
push
enter
testb
ds
xchg
xchg
ss
mov
mov
rcr
jne
inc
mov
movsb
cmp
aam
pop
inc
adc
dec
lds
insb
loopne
or
nop
arpl
xchg
pop
adc
enter
dec
addl
inc
lahf
ljmp
enter
je
adc
dec
mov
push
sarl
pop
jae
in
outsl
fstpl
jmp
int3
push
adc
cmp
loop
mov
add
mov
push
mov
stc
dec
mov
sbb
xlat
int3
push
loope
add
pushf
int
lcall
jp
std
inc
cmc
and
lret
add
fisubl
mov
lds
outsl
mov
out
lea
call
add
inc
push
sti
cs
xor
int3
xchg
sub
cmc
cmpsl
test
in
fcom
pop
sbb
cmpsl
push
fidivrs
adc
mov
dec
sbb
int
mov
push
jno
ja
aas
pop
jns
loopne
hlt
cwtl
leave
inc
jae
cmp
adcl
outsl
and
push
and
cld
divl
dec
mov
mov
stos
fmull
sub
js
adc
xchg
xor
add
jge
addr16
dec
pop
lea
mov
cli
movsl
inc
mov
pop
cmp
xor
mov
xor
je
ljmp
stos
sahf
fnstsw
mov
push
mov
lret
fdivl
jbe
fidivs
xchg
out
or
mov
into
jmp
mov
inc
ljmp
sbb
sbb
xchg
adc
xchg
cwtl
pop
cmp
inc
add
lods
xor
jecxz
push
fmul
cmpsb
lds
into
mov
scas
adc
and
fs
hlt
pop
jbe
pushf
aam
adc
cmp
jmp
int
pusha
scas
popa
in
jl
or
push
xor
push
mov
mov
int
rcrl
add
xchg
jno
and
sbb
and
mov
push
loopne
lea
pop
out
jge
xor
call
sbb
sub
jo
hlt
xor
idivl
mov
lods
sbb
push
push
inc
mull
xchg
mov
sub
arpl
int
incb
sti
cmc
ret
inc
sbb
cwtl
dec
in
pushf
rorl
pop
dec
inc
jecxz
pushf
mov
xchg
sub
mov
or
ljmp
adc
dec
sbb
sbb
jmp
inc
push
and
js
mov
jns
adc
push
stc
sbb
scas
pop
jae
pop
cmp
xor
in
out
mov
shr
imul
dec
sub
inc
mov
mov
fstp
stos
jo
bound
pusha
rcr
mov
mov
cmp
ss
add
pusha
jecxz
xor
jp
inc
cmp
cs
pushf
add
and
xor
and
mov
mov
push
xlat
dec
jo
aas
sbb
mov
jnp
out
inc
divl
adc
addr16
pmaddwd
fisttps
stos
mov
repnz
inc
push
inc
cmp
xor
pop
mov
call
mov
mov
mov
inc
loop
ret
dec
inc
cmp
xchg
int
push
xor
adc
rcl
cmp
push
pop
and
and
add
hlt
mov
cs
cwtl
std
and
jg
and
mov
in
pop
out
nop
mov
pop
and
test
fwait
and
jle
push
lret
fidivs
scas
and
jbe
xor
std
leave
xchg
and
dec
fidivrl
xlat
and
push
lods
inc
leave
mov
xchg
lret
or
and
xadd
mov
xor
jb
divl
xor
xchg
stos
cmpsb
jecxz
mov
adc
mov
les
push
add
loop
cmp
xchg
pop
jnp
jle
fs
mov
inc
xchg
and
aam
stos
jmp
outsb
mulb
mov
lcall
and
in
lahf
stc
pop
lds
jne
cli
jbe
test
mov
mul
mov
pop
dec
dec
or
cmpsl
push
xor
pop
pop
rorb
pop
sbb
pop
push
dec
cmp
xchg
jb
mov
fmul
jno
imul
lea
inc
mov
test
mov
pop
pop
xor
sbb
adc
sub
mov
movsl
jp
dec
jae
in
cmp
adc
fstpt
dec
lds
sub
shll
mov
call
testl
sti
mov
mov
adc
cmp
inc
repz
jecxz
push
add
out
insb
ds
in
or
jle
shrl
pop
push
lcall
push
stos
pop
jle
sbb
fisubrl
notl
out
das
in
loopne
pop
jmp
dec
and
mov
pop
nop
mov
cltd
outsl
jno
stos
push
xchg
mov
xor
jmp
jno
fldenv
lcall
leave
mov
cli
inc
dec
insb
mov
and
in
xor
movsl
sahf
or
in
jle
in
add
cs
les
sahf
fdivs
cld
sub
sti
mov
loope
cltd
call
mov
pusha
int3
dec
and
outsb
push
jno
sbb
js
jl
scas
dec
inc
push
mov
fadd
lcall
adc
jl
data16
mov
lods
pop
cli
inc
out
mov
and
test
sub
lods
lds
adc
dec
xchg
mov
out
xchg
xchg
dec
pop
out
mov
arpl
jmp
cmp
xor
into
xor
loope
sbb
or
daa
adc
addl
or
and
rclb
cmp
cwtl
jge
hlt
pusha
stos
xor
into
dec
pop
mov
cwtl
cmp
pusha
into
and
imul
sar
jbe
add
jnp
mov
shll
dec
stos
inc
bound
inc
or
or
lods
pop
ja
leave
repz
mov
mov
cmpsb
imul
jnp
xchg
leave
test
lea
mov
cmpsb
add
adc
pop
test
jp
lea
lcall
out
mov
xchg
push
jb
mov
or
mov
and
inc
cwtl
mov
cmp
sub
or
mov
cltd
fsubrs
mov
lea
ret
andl
das
push
stc
sub
mov
xor
mov
pop
pusha
inc
jp
xchg
les
sub
test
jg
sub
sarb
loop
cmpsl
push
pusha
shll
dec
sbb
add
gs
push
stos
mov
rcrb
add
insl
pushl
add
mov
cwtl
in
mov
nop
fsubs
icebp
push
repz
pop
mov
mov
xor
out
push
xchg
lcall
add
cmp
xchg
mov
scas
cmc
cltd
jl
movsl
fidivl
sbb
ja
gs
and
ss
sub
dec
xchg
bswap
lock
mov
mov
popa
cmp
pop
fistpll
push
lret
mov
or
xchg
lret
cmp
sahf
fadd
call
cmc
push
adc
add
scas
xor
jo
or
ffreep
repz
jecxz
add
mov
push
gs
dec
sbb
pop
jge
jno
mov
cld
adc
out
jns
fs
ss
adc
fstpl
push
add
or
sbb
push
aaa
mov
subl
rcrl
jbe
out
cmp
les
sub
or
pop
mov
cmp
sbb
sub
mov
inc
inc
xor
mov
les
adc
call
sarl
iret
outsb
push
in
mov
loope
jo
addr16
add
sub
and
sub
mov
cmpl
cmp
jno
pop
mov
test
xchg
addl
inc
mov
adc
mov
mov
xchg
pusha
ja
rep
pusha
dec
fbstp
jb
cmp
enter
xchg
adcb
in
mov
loopne
push
in
pusha
dec
mov
xor
cmp
inc
xor
aas
fisttps
and
cli
pushf
dec
dec
xor
mov
fs
xor
jg
out
aas
push
cwtl
outsl
push
gs
cltd
push
sahf
pushf
and
insl
das
aam
cmp
mov
rcrb
fiadds
push
scas
sbb
mov
xor
mov
movsl
dec
pop
add
mov
mov
dec
outsb
xchg
cmpsb
push
mov
sub
and
mov
movsb
in
lcall
fstps
cs
mov
cld
cmc
sbb
mov
add
in
xlat
xchg
loopne
dec
mov
loop
fprem
jge
add
mov
int
lret
pop
jae
dec
out
dec
neg
xor
add
in
xor
push
cmp
stos
popf
fwait
lcall
add
mov
mov
or
cmp
jne
fcompl
pop
ds
leave
arpl
adc
inc
subl
movsl
fnstcw
test
cmc
mov
jecxz
test
add
jns
mov
movsl
popf
loopne
add
cs
or
push
mov
inc
sti
jle
repnz
popf
or
sbb
fwait
add
pop
nop
dec
push
sbb
sub
jg
pop
mov
jae
fisttpl
pop
cmp
or
mov
dec
js
add
mov
in
push
fsubr
stos
scas
xor
subb
les
jecxz
sub
and
cwtl
push
cwtl
push
dec
int3
fsubl
sub
push
jo
rcrb
shl
stos
add
inc
add
test
leave
nop
es
into
pusha
cmp
mov
fs
xorb
mov
ljmp
jmp
mov
lea
mov
or
xor
jae
mov
lret
xor
sbb
psubb
rcr
mov
into
xchg
push
inc
xor
jl
and
out
out
push
mov
mull
mov
push
inc
fsubl
xor
repz
mov
pop
ficoml
and
stos
test
sarl
shr
add
xor
mov
cmpb
push
sbb
sub
enter
sbb
jb
lcall
pop
sbb
out
adc
cmp
clc
fstl
data16
pushf
mov
inc
cmp
sbb
add
adcl
enter
mov
cmc
call
xor
mov
mov
addl
insl
push
mov
mov
test
insl
repnz
xchg
mov
jg
xor
jne
cmc
mov
jnp
mov
enter
scas
dec
out
sub
aaa
fldl
movsl
xchg
sarb
stc
push
cmp
test
in
jnp
les
push
dec
lcall
jbe
fldcw
enter
sbb
dec
and
mov
push
cs
mov
xor
mov
iret
insl
push
adcl
dec
int
adc
cmp
in
scas
leave
and
xchg
pop
fs
xor
sbb
adc
mov
shlb
dec
test
mov
nop
out
out
and
mov
xor
xchg
sbb
xchg
ds
cld
jo
arpl
mov
imul
cmp
dec
mov
xor
adc
clc
jecxz
lret
pop
mov
mov
aam
adc
xor
dec
mov
test
loop
out
sbb
mov
sysenter
scas
mov
jl
lds
sbb
mov
mov
sahf
lea
pusha
pop
pushl
cmp
sub
sbb
cld
fstpl
sbbl
push
pop
sub
adc
xchg
sti
jno
int
fdivs
sbb
lahf
pushf
movb
lods
stos
pushf
add
ret
int3
jmp
adc
in
adc
jo
dec
pop
push
and
arpl
std
mov
sti
call
lahf
add
bound
mov
ja
push
loope
jecxz
and
pop
mov
repz
mull
fidivl
pop
jnp
cmp
and
xchg
mov
push
mov
sti
cmp
pushf
cmpsl
outsl
out
pop
jecxz
out
pusha
scas
cmc
lcall
dec
imul
in
cmp
icebp
add
xor
in
add
push
ret
cltd
add
rorb
jl
adc
leave
leave
push
push
dec
xor
pop
inc
pop
das
test
pop
pop
and
inc
pop
mov
pop
arpl
inc
or
or
mov
mov
popf
fsubs
push
sti
insb
or
fsubr
and
lret
and
pushf
cmp
movsb
mov
add
stos
mov
pop
out
ja,pn
pop
jge
inc
cli
out
push
aam
mov
rcr
dec
addr16
fnstcw
xchg
cmp
adc
push
test
inc
xor
mov
dec
xor
mov
push
dec
aam
add
js
add
pop
xchg
insl
rcrb
pop
and
out
xorb
pop
jbe
sub
aad
push
mov
popf
cmp
mov
jge
movsl
mov
fstpt
loope
cmpsl
daa
cmpsb
fcmovbe
adc
pop
xchg
insb
scas
and
stos
adc
ja
jae
adc
xorl
mov
sub
hlt
push
fdivrl
mov
scas
and
cltd
mov
das
sbb
cmp
jge
mov
insb
push
and
inc
adc
psrlw
les
xchg
repnz
out
popa
cmp
pop
push
dec
add
sub
je
ret
pushf
js
lcall
mov
hlt
sbb
stos
xor
enter
lahf
mov
ljmp
lock
sbb
or
xlat
dec
jbe
or
cltd
or
lods
push
lret
lret
or
mov
mov
loope
and
imul
in
js
xlat
and
mov
andb
mull
loope
in
and
inc
xor
xor
pop
adcb
cs
bound
enter
mov
out
dec
cmpsb
popa
push
cmp
or
jb
mov
or
sub
mov
les
cmpsb
cmpsb
push
loope
xor
cltd
jle
lock
out
lret
push
jl
inc
add
jbe
lods
mov
fstpl
sahf
mov
sbbb
mov
fsubr
jp
jmp
xchg
mov
jle
fdivrl
jl
lret
mov
shlb
loop
xchg
inc
mov
sub
in
and
dec
mul
in
out
out
bound
xchg
mov
or
cli
cmc
and
pop
jno
mov
pop
jno
mov
lcall
scas
into
in
cmp
add
pop
cli
fiaddl
cwtl
jmp
dec
dec
pop
cmc
push
jle
stc
sub
les
in
jge
mov
imul
cmp
aam
movsb
push
add
cmpb
aas
enter
int3
out
mov
dec
call
jne
inc
adc
scas
jns
sub
or
dec
movsl
repnz
sub
inc
xor
outsb
mov
push
add
clc
into
jo
inc
packssdw
mov
enter
jmp
mov
push
popf
dec
dec
pop
sbb
mov
add
sbb
mov
jns
adc
aaa
jo
sbb
pusha
xchg
xchg
cmpsb
test
cs
mov
mov
inc
dec
sub
dec
fwait
pusha
gs
shrl
sub
insb
aad
test
popa
sbb
and
sbb
out
add
push
out
xor
mov
jmp
push
pop
push
push
stc
int
mov
jle
call
adc
dec
mov
loopne
pop
cltd
lea
mov
cmp
test
stc
enter
test
cmp
imul
xchg
push
cmp
ja
pop
leave
jne
cmp
cmpsb
xchg
push
add
cld
sub
js
jp
push
nop
pop
fadds
or
out
xor
pop
inc
es
std
pop
mov
add
mov
inc
sarl
mov
outsb
pop
inc
cmc
lcall
movsb
ljmp
xor
adc
test
addr16
mov
and
jle
xchg
insl
lret
clc
dec
dec
loope
test
pop
xlat
mov
arpl
outsl
je
mov
xchg
mov
mov
lret
mulb
mov
cld
cli
stc
movsl
cmp
mov
sahf
add
lock
mov
cmc
dec
jp
out
or
jp
int
shrd
and
nop
pop
pop
inc
lock
jle
loope
frstor
xchg
repnz
shrb
lret
mov
out
xor
mov
inc
and
cmp
shrl
fwait
pop
dec
int3
out
dec
into
cmp
je
lcall
loop
push
jp
pop
gs
or
mov
decl
push
in
inc
sub
lock
repz
sbb
sbb
jns
cmp
sbb
test
imul
sbb
cli
adc
lcall
hlt
ret
jb
xor
adc
jns
or
icebp
sub
aaa
imul
orl
dec
push
jne
mov
xor
inc
cmp
repz
hlt
xchg
in
std
add
mov
mov
and
fs
push
push
and
std
or
inc
jl
in
sub
mov
sub
lret
adc
fisubrs
scas
testl
call
pusha
out
mov
int3
add
sahf
push
shrl
xchg
arpl
mov
mov
shl
cmp
add
push
cmpsl
cmpsb
test
jecxz
or
adc
dec
insl
ror
jae
iret
gs
lahf
add
outsl
xor
ljmp
movsl
or
pop
je
test
cmpb
jbe
fcoms
sub
ffree
fcoms
fs
pop
push
and
sub
das
and
out
and
cmc
fcomip
cmp
push
sub
aaa
inc
stos
add
jle
push
ja
mov
aam
jmp
in
xchg
lods
inc
pop
push
dec
data16
insb
push
sbb
or
cmp
sub
int3
out
imul
xchg
lods
inc
pop
push
dec
data16
insb
push
sbb
or
cmp
sub
fcom
int3
out
imul
xchg
lods
inc
pop
push
dec
data16
insb
push
sbb
aaa
sub
int3
out
imul
xchg
push
inc
mov
jbe
jno
sahf
repz
leave
shl
shl
rcl
loopne
jecxz
nop
lea
push
jo
pusha
aaa
adc
add
xor
and
shl
rcl
loopne
nop
cmpsl
adcb
addr16
push
jo
pusha
idivl
pop
xor
and
shl
rcl
loopne
nop
cmpsl
adcb
inc
arpl
add
aaa
inc
dec
push
bound
push
test
orl
mov
test
test
fidivrs
bound
inc
mov
insb
dec
mov
add
mov
mov
enter
inc
xor
int
lcall
sbb
fprem1
ja
xor
push
sub
add
pop
cwtl
notl
mov
xor
pop
cli
scas
loop
test
adc
xchg
cmp
and
movsb
pop
nop
aaa
mov
cmpsl
or
ret
scas
xor
cmp
fadds
inc
xor
fimuls
push
sbb
loopne
mov
sbb
xchg
adc
adc
xor
xlat
lock
loopne
nop
cmpsl
adcb
addr16
push
jo
pusha
aaa
adc
add
xor
dec
mov
xchg
cmpl
testb
push
adc
daa
gs
inc
outsb
xchg
mov
movsl
mov
stos
loopne
cld
loop
out
les
sbb
cmp
inc
add
jnp
jb
xchg
xchg
out
mov
mov
xchg
push
jo
pusha
aaa
adc
add
xor
and
shl
rcl
loopne
nop
cmpsl
adcb
addr16
push
jo
pusha
aaa
adc
add
xor
and
rol
test
sbb
aad
es
mov
enter
sbb
jl
clc
mov
mov
push
nop
repz
call
dec
movsl
repz
dec
dec
out
sub
ss
mov
mov
test
testl
xchg
fwait
shlb
mov
ds
ja
dec
adc
aad
mov
test
adc
sub
cld
es
fiaddl
aas
outsb
cwtl
or
pop
pop
fstl
jo
mov
aam
out
dec
loope
dec
mov
adc
adc
adc
out
bound
cpuid
and
sbb
push
call
jp
repnz
sbbl
sbb
push
out
hlt
cmpsl
gs
cltd
jge
push
lods
lar
dec
addb
cmp
add
pop
adc
notl
cmpsb
daa
or
xor
mov
cmp
jp
mov
cmpl
xorl
sub
cmp
or
out
cmc
mov
jecxz
adc
mov
or
dec
or
mov
mov
dec
sbb
add
mov
fnstsw
lea
mov
scas
mov
and
cwtl
push
outsb
mov
bound
lcall
mov
xchg
dec
inc
sub
loope
mov
xchg
clc
jl
movsb
lret
dec
outsl
fisttps
fcoml
push
sbb
jmp
int
lods
xchg
mov
unpcklps
jp
addb
dec
lcall
mov
pop
leave
in
pop
sub
sarb
rolb
pop
std
outsb
and
in
gs
daa
jne
add
lods
pop
loop
out
jno
cwtl
cmp
mov
cmp
or
mov
mov
enter
pop
cmp
xor
dec
xlat
push
jne
int
gs
or
jle
mov
out
loopne
fsubs
adc
sub
push
push
dec
popa
sbb
pop
mov
mov
cwtl
xchg
stc
subl
in
ja
leave
dec
mov
fisubl
push
popf
arpl
mov
rep
outsb
or
dec
push
shl
mov
pop
jb
sub
in
es
cmp
add
xchg
push
cmpsl
jge
pop
rcrl
and
and
pop
push
mov
and
test
inc
std
or
rorb
out
mov
divl
xchg
fildl
lahf
ret
andl
lock
and
mov
pop
jbe
rclb
arpl
ret
cmp
push
subb
push
push
pop
push
fnstsw
lods
inc
jo
add
test
es
out
popa
add
pop
mov
add
inc
jmp
mov
jae
iret
sarb
and
mov
and
lods
lock
ja
mov
mov
bswap
inc
gs
repz
mov
adc
fisttpll
or
out
sbb
fimull
pop
int
jp
or
sbb
aad
xor
push
pop
sti
pop
xchg
mov
adc
cmpsb
lcall
or
outsb
les
cmp
add
xor
jo,pt
pop
cmp
dec
nop
out
stos
ds
mov
pop
repz
xchg
aaa
dec
mov
sbb
mov
test
cwtl
lods
dec
jecxz
rclb
inc
in
clc
mov
ljmp
gs
popf
dec
mov
cmc
ret
lods
cmp
mov
fildl
sbb
push
mov
push
jnp
push
sbbb
mov
xchg
push
lcall
sahf
push
jno
mov
jne
out
adc
addr16
aas
test
insb
nop
aad
jno
jnp
push
std
xchg
mov
push
xor
pop
ret
mov
cmpsl
cld
jo
mov
cmp
cmpsl
mov
mov
add
mov
xor
insl
test
in
cli
das
sub
aas
or
out
push
mul
mov
and
int3
jle
dec
lea
stos
cmpb
addr16
fiaddl
bnd
cwtl
into
xchg
sbb
mov
cwtl
mov
arpl
ja
shll
jl
out
lods
stc
adc
pushl
pop
fcoms
gs
and
fcmovu
and
ret
or
test
aas
mov
fstpl
out
dec
lods
lahf
pop
xchg
mov
cmc
push
das
pusha
mov
push
jo
mov
dec
push
insl
sbb
mov
leave
push
jmp
push
xor
std
outsl
lock
imul
mov
cmp
fs
dec
fdivp
mov
sub
mov
bound
fs
outsl
shlb
jno
hlt
and
ret
mov
adc
push
iret
sub
aaa
cld
sub
stc
pusha
out
push
and
mov
aad
push
in
inc
sbb
repz
xchg
mov
mov
push
lods
and
test
jmp
adc
xchg
arpl
inc
inc
or
daa
rcpps
push
pushf
andb
and
or
pop
into
hlt
mov
adc
xchg
js
push
popa
jmp
sbb
fiaddl
mov
jo
mov
jp,pt
lea
or
mov
jno
add
std
in
hlt
lcall
in
mov
sub
mov
popf
nop
or
fadds
js
push
mov
aas
jb
mov
in
hlt
pusha
mov
push
inc
sbb
in
adc
imul
sbb
pusha
addb
fwait
test
addr16
imul
adc
lea
or
mov
jae
popa
data16
cltd
sub
shlb
fwait
lods
dec
mov
and
lret
mov
push
sub
dec
iret
dec
inc
icebp
shll
add
bound
push
test
pop
into
sub
in
mov
sub
fcoml
popa
sbb
cmp
movsb
inc
xorl
push
xchg
pusha
data16
in
ret
shrb
push
mov
testb
andl
add
clc
inc
jns
mov
push
sbb
xlat
or
insl
xor
jns
insl
out
push
popa
out
pop
mov
push
jl
push
daa
cmp
pop
mov
dec
popf
jnp
mov
out
loope
jbe
inc
ror
lcall
insl
cs
in
sub
int3
inc
sbb
mov
in
mov
or
add
inc
pop
in
push
outsb
or
inc
cmp
or
pop
push
pop
int
pop
rcll
xor
lahf
xchg
nop
xchg
sti
ret
movsb
das
subl
ljmp
lahf
xchg
loopne
jbe
rcrb
pop
or
dec
xchg
movsb
lods
xor
nop
insl
cmp
adc
cli
rorl
dec
clc
aad
sbb
or
outsb
and
outsb
popf
rclb
cltd
stos
ret
dec
mov
aaa
lret
out
mov
out
push
into
xchg
sbb
mov
addr16
fcompl
sub
mov
sbb
lret
sub
clc
clc
push
push
sub
dec
stos
test
adc
pop
and
cmpsl
shlb
popf
pop
xor
dec
sar
sti
jnp
or
push
push
sahf
pop
stos
sub
addl
pop
pop
sbb
or
call
dec
stos
sub
xor
fcmovb
fdivrp
xchg
outsl
in
jge
xor
cmpsl
xor
in
sarb
popa
sbb
inc
fwait
shlb
xchg
arpl
lds
add
pop
cmp
mov
aas
mov
jnp
mov
push
sbb
xor
xchg
nop
add
sbb
rcrb
jb
je
push
hlt
les
fwait
jp
jecxz
jle
dec
movsl
push
in
xchg
out
pop
pop
sbb
add
mov
scas
add
loopne
or
jnp
sbb
bound
add
mov
sub
and
shll
jl
adc
lods
shrb
test
xor
repz
mov
inc
ffreep
sub
sbb
add
cmp
inc
in
adc
dec
test
mov
lods
loope
cmpsb
aaa
mov
or
iret
pop
sub
imul
adc
popa
dec
in
in
in
pop
call
fidivl
fisubrs
xchg
mov
xchg
sahf
ljmp
std
push
xchg
or
inc
cld
imul
xor
ja
mov
sbb
dec
shlb
push
add
push
out
mov
les
hlt
lods
inc
mov
test
mov
sti
ret
in
mov
mov
adc
pushf
jno
sbb
adc
jns
cmp
cmp
lds
leave
push
cmpsb
inc
xor
sub
cmp
mov
nop
cmpsl
add
adc
pop
cmpsb
lds
shr
push
jg
jnp
push
pop
xorl
jmp
jb
pop
mov
xor
mov
imul
or
mov
dec
mov
xor
ret
fisubl
mov
adc
jmp
xor
inc
inc
or
sub
loopne
xchg
inc
mov
aam
jbe
negb
repz
and
inc
out
adc
or
das
repnz
or
mov
pop
dec
mov
inc
sbb
stos
dec
testb
push
push
cmpsl
mov
push
iret
pop
cmpsb
addr16
fs
stc
mov
fisubrs
add
cmp
cmp
cmpsl
data16
cs
fildl
inc
in
jl
divb
xchg
push
int
adc
out
jmp
ss
cmp
jg
les
inc
test
call
jne
in
or
roll
addr16
mov
aad
out
and
or
cmp
cmp
call
inc
jge
jmp
xor
mov
and
push
xor
jp
fstpl
xchg
iret
jmp
icebp
dec
sub
mov
inc
dec
test
inc
inc
dec
add
cld
ret
mov
or
add
pusha
mov
jno
lret
and
daa
popf
ljmp
jo
push
xchg
cmp
mov
test
or
shr
add
xchg
and
jle
icebp
arpl
sub
cmp
or
out
pop
fbld
loope
in
aaa
cs
call
inc
ljmp
call
mov
pop
aad
jnp
icebp
psubusw
cmp
push
sub
stos
imul
push
push
and
dec
mov
lock
push
mov
sbb
xor
aam
mov
fsubs
add
ljmp
ret
je
add
out
xchg
adc
push
or
cmp
xor
ss
stos
jp
outsb
stos
add
jne
inc
inc
cmp
pop
lret
mov
cmc
mov
fstl
aad
inc
decl
push
xor
movb
xlat
icebp
and
xor
fwait
cmp
push
ja
lret
popf
add
aaa
jg
dec
cmpsb
pop
rcrl
or
and
jnp
mov
jne
loopne
test
xor
out
in
movhps
sbb
daa
nop
jo
in
ss
pop
call
sub
push
addr16
pop
and
std
cmp
jbe
neg
jmp
or
enter
ret
lock
pop
or
mov
dec
xchg
cwtl
repz
jb
leave
jge
stos
imul
push
push
jns
aaa
mov
pop
adc
xor
dec
imul
nop
popf
lds
jp
scas
dec
mov
leave
popl
cld
out
add
movsl
adc
out
push
xor
cmpsb
xor
mov
cmp
pop
pop
or
sbb
arpl
cs
fnstcw
das
sbb
and
sub
ds
mov
push
add
or
mov
adc
idivb
loop
mov
psubusb
out
iret
push
test
sbb
shll
adc
call
fs
int3
in
lret
test
inc
mov
jns
les
or
outsb
fldcw
mov
fcomps
call
push
sub
inc
scas
dec
mov
sub
movsb
fistpl
sbb
inc
and
in
enter
lods
dec
mov
stos
mov
jns
cmpsl
shl
pop
push
shl
mov
cmpsb
addb
leave
mov
lret
push
xchg
inc
stos
mov
ja
cmp
int
pop
outsl
push
lahf
rolb
pop
lods
fcomip
mov
mov
jne
sub
pop
and
cmpsb
xchg
fidivl
cli
fwait
and
scas
jle
mov
pushl
pop
daa
bound
jbe
fwait
jmp
gs
shll
data16
and
jg
sub
jb
jo
sub
cmp
iret
std
push
rclb
cmp
js
push
insl
mov
inc
aam
push
adc
jle
and
cmp
leave
sbbl
das
dec
mov
sti
and
or
popa
xchg
cwtl
xchg
push
imul
push
nop
push
fisubs
rorl
test
movsb
push
ja
pop
pop
dec
inc
scas
int3
imul
xchg
mov
add
outsb
stos
adc
and
rcrl
cmp
cwtl
sub
inc
xchg
xor
iret
lret
cmpsb
test
inc
repz
xor
xor
add
shlb
xor
es
movsl
sub
repz
and
and
pusha
js
mov
std
clc
sbbl
imul
lret
or
xlat
inc
push
push
shll
cs
and
fcoms
xor
loop
imul
pop
fs
gs
jge
push
insl
adc
push
test
aad
mov
pop
js
and
push
popa
sahf
pop
lahf
jg
mov
lock
imul
push
imul
add
push
lock
sbb
dec
dec
and
loop
sbbb
stos
inc
rorl
pop
mov
hlt
adc
mov
push
inc
jg
notb
adc
jbe
add
dec
hlt
int
xor
dec
xchg
jmp
pop
jo
shl
cmp
std
out
ss
jmp
cmp
mov
repz
out
cmp
out
add
push
daa
pop
sub
pop
push
pop
loope
shll
icebp
add
mov
jle
je
out
les
mov
mov
xor
out
out
jae
mov
int
jb
add
lahf
add
adc
pop
mov
out
ret
ss
pop
in
cmp
mov
sti
adc
push
inc
into
bound
jl
aam
insl
fs
sbb
sub
mov
pop
ret
xchg
call
mov
fsubl
cmp
leave
insl
int3
out
cli
fs
scas
in
cmpsb
popf
cwtl
xchg
test
shlb
nop
inc
lock
pop
jmp
pop
cmc
int3
pop
jnp
repz
cmp
push
mov
call
or
xchg
data16
push
jp
orl
lcall
test
addr16
sti
call
in
mov
jle
sbbb
adc
addb
cwtl
pushf
mov
fwait
and
idivl
addr16
or
in
pop
adc
cmp
mov
cmpsl
xchg
jecxz
xchg
ficompl
lds
inc
xchg
pop
xchg
addr16
or
mov
arpl
push
push
and
enter
add
cmp
fs
push
repnz
je
inc
jecxz
sub
fcmovnb
nop
pop
pop
sbb
outsl
pop
idivl
mov
mov
scas
mov
loopne
int3
shrl
push
sahf
pop
mov
jb
pop
icebp
outsb
sbb
daa
add
mov
cmp
movsb
js
jg
mov
xchg
add
or
mov
sbb
imul
add
jb
push
mov
in
push
test
mov
in
dec
fnstcw
popa
flds
jo
jl
or
jmp
and
jnp
popa
pop
push
and
sbb
fwait
in
jge
loopne
mov
dec
outsb
shl
jbe
cmp
out
mulb
cli
mov
mov
ficomps
aad
pop
imul
sub
or
nop
cmp
lret
mov
mov
jo
pushl
xchg
insb
jb
mov
fcmovnu
add
adc
movswl
sbb
movsl
insl
fldenv
clc
xorl
out
and
jmp
ss
pop
xchg
cmp
ds
jmp
addr16
pop
mov
xor
xlat
hlt
adc
inc
popf
subb
xchg
test
mov
sti
and
dec
mov
ret
xchg
arpl
je
adc
scas
sub
xchg
fdivs
xchg
xchg
adc
pushf
mov
sub
andb
or
dec
cld
add
pusha
popf
push
mov
dec
ds
jmp
into
xchg
add
xchg
ret
xor
scas
mov
mov
sub
insb
lods
pcmpeqd
xor
out
pop
jne
and
std
add
mov
pop
dec
in
mov
aaa
adc
or
mov
cmp
int3
out
mov
push
fwait
inc
rorl
stos
outsl
pop
xchg
stos
arpl
pop
inc
addr16
lea
data16
shrl
or
dec
iret
add
fimuls
sbb
aaa
xlat
addr16
test
aas
inc
push
dec
push
insl
sub
fisubs
in
pusha
xor
fwait
aas
in
lahf
mov
insb
mov
pop
loope
flds
mov
push
mov
cmp
mov
mov
fsubl
cmp
scas
out
mov
mov
roll
enter
outsb
adc
mov
adcl
shlb
add
cmpsl
stc
mov
xchg
pusha
inc
pop
das
or
xchg
push
fistps
add
inc
scas
push
mov
pop
cwtl
rcr
mov
xlat
loope
negb
mov
jo
les
jbe
inc
jl
xor
pop
test
inc
sub
dec
add
xor
and
aad
jb
stos
mov
scas
mov
jle
in
fsubl
rorl
sub
and
dec
mov
test
adc
out
adc
cltd
dec
mov
and
enter
dec
ljmp
xor
jecxz
fidivl
xor
les
jge
adc
andb
sub
repz
cwtl
inc
add
pop
or
cmp
add
pop
in
or
sub
add
inc
xor
fmul
pop
xor
push
dec
or
aaa
loope
dec
sbb
into
pop
cmc
icebp
xor
jl
or
imul
inc
cmp
gs
mov
ret
mov
xor
std
psubb
dec
jle
dec
roll
loop
jae
fdivr
outsb
mov
sahf
xor
sub
mov
in
insb
sti
dec
jmp
push
pop
jnp
negb
ss
push
pop
jg
push
push
mov
mov
shll
andb
xor
pusha
mov
adc
or
pop
cmp
adc
push
sub
lock
or
movsl
adcb
ds
push
push
mov
lahf
add
mov
cmp
jp
xor
jle
repnz
cmp
add
ds
orb
jnp
les
mov
add
mov
mov
xchg
push
jge
push
sarb
or
and
xchg
push
mov
stos
adcb
cmc
clc
and
popa
cltd
scas
push
movsb
mov
test
ret
in
popa
mov
fs
test
cltd
or
xchg
in
fcomps
sbb
xchg
imul
scas
adc
mov
dec
aaa
icebp
add
enter
mov
adc
repz
divb
jbe
imul
ret
mov
repnz
mov
stc
mov
outsb
ljmp
and
sbb
fiaddl
popa
add
push
sbb
xchg
xchg
mov
xor
loopne
scas
cmc
jnp
inc
cli
push
xlat
sub
adc
pop
call
or
adc
sub
jp
es
push
pop
or
mov
mov
or
arpl
cmp
add
xchg
push
movsl
in
sub
adc
shl
add
lods
xor
jb
mov
out
scas
out
mov
popa
mov
aad
pop
sbb
push
dec
sub
lret
andb
je
mov
lods
fwait
pop
lods
out
daa
add
data16
movsb
jecxz
push
shll
adc
cmp
popf
mov
mov
jg
fisubl
fdivr
fisubs
fs
arpl
pop
cmp
ljmp
or
cmp
mov
je
jecxz
dec
outsl
mov
scas
push
xchg
int3
xor
mov
ret
enter
mov
cmpsl
fcmovnbe
sbb
pop
and
xor
push
push
aaa
pinsrw
jbe
insl
lock
xlat
inc
pop
fwait
add
aam
loopne
and
icebp
xchg
dec
rcl
loopne
nop
cmpsl
adcb
addr16
push
jo
pusha
aaa
adc
add
xor
and
shl
rcl
loopne
nop
cmpsl
adcb
addr16
push
jo
pusha
aaa
adc
add
xor
and
shlb
push
lock
loopne
nop
cmpsl
adcb
addr16
push
jo
pusha
aaa
adc
add
xor
and
shl
rcl
loopne
nop
cmpsl
adcb
addr16
push
jmp
ja
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
addr16
inc
push
push
push
and
inc
adc
cmp
fwait
adc
les
mov
test
test
add
je
sub
push
push
and
xor
add
adc
in
hlt
mov
in
mov
test
xchg
aaa
xchg
push
mov
cmp
data16
inc
subb
jmp
mov
enter
cmp
imul
fisubrs
repz
mov
loope
mov
xorb
cmpsl
mov
mov
push
mov
mov
addb
sub
mov
mov
lcall
inc
in
in
push
or
daa
add
in
popa
mov
icebp
inc
dec
into
test
mov
icebp
mov
outsb
sti
cmp
in
hlt
inc
inc
jno
adc
mov
test
xchg
into
fwait
stos
jns
fs
leave
push
scas
mov
les
inc
les
daa
loope
mov
jl
cwtl
pop
fwait
shr
dec
inc
imulb
dec
and
xlat
lock
jno
popa
sub
out
test
xchg
fdivrs
cmp
cs
pop
push
push
shrb
add
mov
and
in
in
idivb
fisttps
imul
insb
pop
pop
jo
adc
in
cmpsl
mov
mov
cld
in
mov
adc
jge
jno
outsb
push
xor
cmp
sbb
fcmovnb
jmp
pushf
fstpl
aad
or
sbb
and
pop
xor
add
adc
in
hlt
mov
movsb
out
mov
test
xchg
fisubs
ds
push
push
push
and
xor
add
adc
in
hlt
mov
movsb
out
mov
test
xchg
fisubs
sub
jmp
dec
mov
mov
cmpsl
sub
fildll
inc
pop
das
adc
lcall
dec
pop
jnp
jg
mov
iret
pmulhw
xchg
adc
pop
aad
xor
sbb
faddl
fbld
mov
pop
aas
std
add
orl
test
std
adc
pop
dec
popf
add
sbb
test
lret
mov
mov
xchg
xchg
xor
stos
rorl
xor
adc
cmc
icebp
and
ljmp
sbb
inc
and
sti
imul
xor
adc
dec
xchg
xchg
and
testb
and
mov
popf
mov
add
xchg
les
adc
or
aam
imul
clc
lds
clc
fnstenv
and
add
mov
xchg
enter
movsb
stos
mov
and
call
jp
fwait
cmpsb
sub
push
loopne
dec
jns
es
lock
imul
mov
mov
pop
and
mov
fcomps
andl
pop
adc
xor
push
pushf
pop
aam
mov
clc
push
xchg
cli
lcall
popf
ljmp
cmc
dec
cltd
idivl
popa
cmpsl
mov
aad
adc
push
pop
mov
sub
das
out
test
jle
lret
mov
xorl
fbld
loope
insl
mov
push
adc
cmpsb
rcrb
orb
push
daa
lahf
fildll
repz
fsubp
xchg
rclb
push
push
cmp
aas
mov
in
pushf
adc
out
jmp
lret
sub
mov
jno
insl
js
aaa
lret
call
cmp
mov
jmp
daa
js
cmp
sbb
rcr
sub
mull
in
test
push
repz
cmp
mov
pusha
pop
sub
jg
bound
jns
cmpsb
sbb
mov
scas
add
pop
jnp
inc
loopne
fnstsw
jo
inc
in
mov
insl
fs
push
lods
sti
andl
sub
add
xchg
lahf
and
dec
js
and
mov
pop
repnz
or
popf
scas
cs
mov
shr
cmc
in
fldenv
mov
scas
or
rcll
into
xchg
mov
or
js
mov
into
cld
push
fists
or
movsl
lea
lret
push
enter
rorl
sti
inc
ret
push
jb
jbe
sbb
mov
sti
jns
or
filds
les
jecxz
out
repnz
pop
arpl
push
dec
push
inc
or
mov
cmpb
scas
jl
lret
std
xor
add
out
movsl
rcl
push
cmpsb
xchg
cmpsb
or
fdivl
pop
pop
in
daa
lcall
xor
loop
and
imul
andb
sbb
or
jge
jns
or
in
xchg
or
dec
dec
mov
cmp
fs
push
and
mov
sahf
xchg
arpl
clc
cmp
decl
mov
mov
outsl
aas
test
xor
or
sub
xchg
andb
loopne
mov
outsb
ds
lock
mov
jno
dec
jecxz
cmp
in
or
test
shrl
sub
imul
loop
mov
setp
mov
dec
mov
mov
push
push
mov
push
lock
out
dec
push
out
test
add
mov
pop
cmc
sub
mov
xchg
sbb
push
push
inc
fcmove
dec
xor
call
lods
inc
jns
push
fsubrl
cmc
xorb
cli
icebp
pop
xchg
sbb
mov
add
jp
lock
sbb
cmc
scas
stos
scas
adc
mov
insl
xchg
and
mov
mov
mov
cmp
add
lret
xor
push
in
pop
mov
and
and
test
xor
xor
inc
xor
enter
lods
lret
jmp
push
bound
mov
repnz
bound
xchg
sti
bound
xchg
and
inc
xorb
ja
popf
sarl
jo
rcll
add
pop
in
xor
decb
test
xor
hlt
icebp
mov
dec
nop
fmuls
pop
clc
stos
das
adc
xor
stc
dec
setp
sbb
cmc
mov
insb
mov
mov
mov
mov
xchg
xchg
shl
lret
jbe
pop
fwait
jle
rorb
lcall
in
outsb
and
or
aas
xchg
test
xchg
out
cltd
add
cmp
xchg
pop
decl
iret
mov
shll
dec
push
mov
and
adc
lret
fisubrl
fimull
mov
lea
push
stc
xor
pop
mov
mov
mov
lock
cmp
icebp
dec
sbbb
xchg
es
in
ds
push
imul
loopne
jp
cwtl
bndstx
das
mov
scas
pushl
gs
mov
push
mov
push
outsb
div
push
add
inc
hlt
fidivrl
jmp
fadds
insl
data16
loop
inc
push
ja
push
fwait
ja
xchg
lahf
xor
test
jno
mov
dec
xchg
dec
fwait
add
pop
mov
xor
test
sub
add
mov
or
push
or
test
add
sbb
mov
sbb
sub
stos
sub
mov
inc
jle
outsl
imul
pop
inc
movsl
out
movsl
xchg
adc
pop
icebp
daa
xchg
adc
inc
cwtl
or
nop
push
and
or
cmp
mov
cs
leave
xor
clc
mov
scas
adc
mov
xchg
mov
xor
add
push
cmpsl
adcb
jg
lods
clc
xor
cld
xor
dec
repz
lods
xor
lcall
push
aaa
push
mov
in
push
and
insl
lds
or
pop
sahf
sbb
cmp
cwtl
mov
ffreep
call
aaa
mov
inc
xor
mov
imul
repz
outsl
imul
test
cmc
lds
sbb
cmp
cltd
loope
sub
or
inc
xor
cmp
dec
adc
call
mov
sbb
lret
and
cmpsb
daa
push
xchg
pop
adcb
dec
popf
pop
imul
push
cld
repz
inc
xchg
psadbw
mov
stc
jge
sub
adc
cmp
jge
cli
loopne
shll
bound
scas
jmp
std
inc
fiaddl
push
adc
std
xchg
or
arpl
xchg
mov
adc
les
insl
enter
int3
ja
outsb
sub
out
cmpsb
cli
mov
dec
push
lock
mov
jmp
dec
mov
or
jecxz
pop
cmp
das
mov
mov
out
cmp
mov
sub
std
mov
mov
mov
mov
fstpl
rolb
xor
leave
or
and
mov
leave
jmp
sbb
or
cmp
mov
out
xor
mov
lods
mov
push
xor
stos
xchg
xchg
xchg
enter
das
stos
aad
xchg
adc
sub
or
jb
lret
fs
adcb
fsts
lea
lods
call
pop
outsl
jge
mov
push
and
cmp
xchg
cmpsb
lods
test
xchg
js
int
push
sbb
xchg
cmp
xchg
adc
orb
faddl
or
mov
aad
mov
or
push
test
outsb
inc
cltd
inc
jp
call
test
fs
dec
push
add
sub
adc
push
out
das
pop
adc
aam
movsl
stos
or
fildl
aas
sub
aad
lods
push
frstor
pop
jno
gs
jb
mov
out
shl
add
sahf
int3
inc
xlat
jg
dec
loope
scas
into
popf
dec
aas
mov
imul
xchg
jmp
leave
enter
lock
stos
or
ficoms
sub
test
sub
les
dec
shlb
jne
bound
adc
cmp
push
add
mov
or
das
gs
lea
loopew
lahf
les
xor
inc
xchg
fsubrl
pop
outsl
jb,pn
cmp
iret
lret
shll
sahf
mov
faddl
mov
inc
loop
xchg
sbb
cld
jno
in
jmp
enter
aaa
push
xchg
and
xor
cmp
popa
push
hlt
lea
insl
dec
mov
push
add
pop
xchg
inc
lods
pop
mov
cmp
bound
sbb
and
jae
mov
inc
shrb
out
mov
and
fstpl
cmpsl
das
sbb
test
and
push
pop
outsl
and
enter
jg
sub
dec
sbb
lret
and
sub
fildll
push
pop
sbb
adc
push
xchg
add
pop
not
vmread
sbb
adc
ror
dec
pop
pusha
inc
lret
test
jne
jmp
dec
xchg
dec
ret
iret
jo
pop
les
xor
xor
fiadds
xor
push
fcompl
mov
jb
inc
int
jbe
push
lret
in
cli
ror
xor
pop
out
in
aas
and
scas
das
std
loopne
ds
xorb
xchg
lods
jmp
mov
xchg
adc
insl
mov
push
aaa
or
sbb
nop
dec
xor
push
dec
jl
jg
xchg
cmpsb
jge
add
insb
xor
lock
ret
inc
xor
inc
inc
jnp
xchg
das
xor
dec
add
gs
jge
repz
pop
jo
scas
insl
adc
es
jecxz
push
shll
sbb
les
sbbb
or
push
xor
cs
jno
pop
inc
ljmp
ja
sarb
sbb
xor
popa
jecxz
mov
cmpsb
push
cmp
mov
jb
pop
jnp
xor
aas
stos
mov
mov
jno
ds
aad
jo
and
inc
push
adc
adc
jb
lcall
arpl
mov
orb
es
adc
mov
pop
out
es
adc
xchg
into
fsub
stc
push
pop
dec
pop
out
mov
pop
cmp
push
mov
sub
jle
arpl
push
cld
stos
xor
pop
cmp
xchg
fisttpl
mov
xchg
lods
sub
mov
xor
mov
fldenv
loop
inc
fiaddl
push
add
mov
xor
cmp
lea
and
adc
mov
icebp
or
lcall
dec
jl
dec
mov
push
test
test
imulb
in
cmp
jo
add
cmp
jns
repz
mov
mov
cs
jecxz
cmpb
pop
pusha
or
pop
dec
subl
movsb
mov
icebp
mov
or
bound
in
es
mov
add
ror
push
mov
mov
or
repz
fcoml
roll
cvttps2pi
out
pop
divb
enter
jg
imul
fldt
inc
andb
jp
mov
push
cmp
pop
or
lods
push
and
cmp
pop
scas
lcall
out
das
mov
jge
xchg
ja
adc
cmp
dec
jl
divb
insl
cmpb
push
xchg
fldenv
popf
out
lods
rcl
nop
out
xor
addr16
jge
repnz
mov
scas
or
cmpsb
ror
movsl
xor
jb
and
dec
or
mov
cwtl
xor
mov
xchg
mov
cmp
dec
inc
daa
push
ds
pop
adc
cmp
lea
shrb
scas
add
lds
fidivs
shrl
cmc
stos
test
push
pop
dec
stos
sub
inc
stos
test
pop
or
ror
jb
mov
push
dec
icebp
mov
das
test
ljmp
xchg
jmp
xchg
ja
xchg
or
outsb
lahf
lds
cmp
pop
rcrl
stc
mov
xlat
cmp
pop
lret
mov
jae
shlb
inc
or
mov
pop
mov
or
dec
js
rorl
bt
mov
pop
testb
push
cmpsb
xor
cld
ss
push
in
sub
in
fisttpll
dec
and
aaa
mov
dec
les
aaa
js
lds
pop
cs
xchg
cmp
iret
mov
cmp
jl
inc
js
ss
sub
xchg
jb
repz
dec
rcrl
scas
xor
inc
jp
jp
xor
mov
xor
pop
jecxz
xor
adc
sbb
hlt
aad
cmp
lock
mov
mov
ljmp
jle
imul
inc
test
loopne
sub
jl
stc
or
pusha
adc
sbb
iret
test
sub
mov
xchg
cwtl
mov
dec
push
testl
add
fldenv
pop
negl
out
ficompl
in
out
mov
shl
add
dec
and
push
mov
stos
stos
js
sbb
out
data16
and
sub
sbb
mov
paddd
inc
jo
je
mov
dec
xlat
mov
xor
or
pop
je
cmp
popf
and
lods
adc
sbb
push
mov
jo
cmp
enter
mov
stc
pop
inc
stc
cmp
jno
addr16
xor
and
mov
fdivrl
sub
and
push
mov
sbb
pop
mov
dec
mov
sbb
mov
pop
jno
shlb
jge
jne
incl
sub
jb
outsl
loope
ficompl
push
popl
stos
in
add
xchg
mov
xchg
into
leave
xor
xorl
in
enter
les
and
fisubrs
xchg
mov
popf
js
mov
inc
insl
movsl
es
aam
pop
mov
xchg
and
lds
data16
xor
xchg
mov
or
push
test
or
mov
sbb
mov
push
roll
push
sbb
aas
scas
mov
and
push
cmpsb
mov
imul
mulb
mov
sbb
cli
inc
stos
dec
xchg
cmp
push
call
push
xchg
ja
jecxz
xor
lcall
sbb
daa
push
pop
mov
outsl
or
adc
sub
bound
out
push
rcrb
cmp
popaw
outsb
adc
xor
js
sbb
inc
inc
mov
sub
jecxz
pushf
int
mov
pop
pop
mov
add
stc
cli
out
adc
jae
popf
iret
pop
repnz
or
fstpl
jecxz
int
loope
lods
push
outsl
xchg
xor
xchg
sahf
mov
xor
push
xlat
or
push
mov
pop
jnp
push
std
testl
repz
jp
and
sbb
lea
pop
dec
jge
sbb
cmpsb
mov
inc
or
hlt
or
ds
or
jns
jne
mov
ss
pop
jns
fistpl
ljmp
cld
fsubrl
sbb
jmp
dec
cmp
nop
sub
lcall
test
shrb
jne
leave
push
mov
sub
adc
push
and
mov
cwtl
hlt
xchg
test
push
dec
xchg
sub
fnsave
cmp
outsb
outsb
or
ret
push
cmp
jmp
scas
pusha
push
cli
lcall
in
sbb
fildll
push
cmpsb
adc
shl
call
cmp
jle
mov
dec
imul
xchg
jle
xor
scas
sub
aam
mov
stc
xor
sub
dec
mov
fs
add
imull
les
xchg
push
and
cli
jnp
in
mov
mov
rcll
cmc
and
jnp
dec
sbb
adc
mov
adc
rcr
jl
popa
sub
fildll
data16
pop
cmpsb
sti
xchg
pop
dec
cmp
pop
lds
pop
xor
add
and
sti
jno
dec
push
mov
add
sub
fcomps
fdivrp
lea
push
or
mov
push
dec
push
xchg
mov
mov
pop
es
je
push
jle
jecxz
aad
ljmp
stos
mov
fwait
lret
dec
idiv
dec
or
ljmp
dec
pop
daa
cmc
sub
push
adc
cmp
movsl
mov
fcomps
stc
popf
ss
ret
scas
aam
adc
pop
and
sbb
ljmp
shr
in
sbb
jnp
movsl
test
xchg
pop
sbb
adc
dec
dec
add
cld
out
adc
inc
add
sbb
add
mov
sti
leave
push
adc
lret
loop
and
xchg
mov
std
mov
iret
push
in
lds
push
repnz
push
ljmp
decl
shlb
out
sbb
out
xchg
aaa
push
fisubrs
repz
and
std
jg,pn
mov
mov
out
in
cmc
xor
pop
xor
sbb
les
stos
mov
dec
frstpm(287
test
jp
mov
lret
aad
out
popa
add
pop
mov
ret
loope
cmp
mov
sbb
out
fildl
lods
outsl
cmpl
pop
out
sbb
adc
repz
arpl
mov
bound
sub
cli
nop
add
addr16
andl
mov
cmp
cmc
sbb
cltd
dec
stos
aad
dec
es
js
cmp
and
jecxz
add
mov
pushf
xor
push
sbb
shrb
cmp
pop
jg
dec
mov
outsb
mov
lret
subl
xor
dec
out
cmp
mov
insl
in
fcmovnu
out
insb
push
sbb
movsl
mov
jecxz
xchg
enter
sbb
mulb
aam
rorb
ret
jle
xor
mov
mov
dec
cli
inc
or
into
loope
dec
mov
mov
frstor
shrl
xchg
adc
cli
mov
mov
cmpsb
gs
je
xor
xchg
pop
aas
mov
and
xor
pop
scas
imul
out
sub
add
ds
xchg
xchg
int3
xchg
popa
xchg
xlat
pop
inc
fsub
cmpb
insb
stc
xchg
enter
scas
push
cmp
mov
rclb
adc
shlb
cmp
xchg
sub
fsubs
orb
add
jno
xchg
pop
and
or
in
cmp
mov
add
push
jne
stos
xchg
mov
fmulp
js
push
add
mov
imull
sbb
subl
mov
fdivrs
push
ds
cmp
fwait
push
xchg
pop
out
call
testb
jp
add
lock
pop
int
aaa
inc
sub
andb
push
jmp
mov
cmpsl
mov
cld
adc
pop
add
sti
add
fsubrl
adcl
faddl
bound
gs
xchg
gs
sbb
lea
pop
or
jnp
nop
shr
fcomps
cmpb
jne
in
inc
out
and
ret
cld
xchg
pop
mov
movsl
filds
xor
inc
add
and
pop
add
add
mov
push
jno
jnp
lea
in
out
and
add
pop
xlat
cltd
cwtl
les
adc
sub
mov
in
push
pop
or
gs
imul
and
cmc
negl
or
ds
test
xor
aad
loop
adc
movsb
in
lods
lea
cli
cmpsb
sarb
cmpsl
adc
xor
xor
dec
mov
movb
mov
or
lret
daa
lods
and
outsb
sarb
clc
sub
adc
call
lcall
dec
popf
iret
outsl
push
sub
es
mov
fs
cmp
int3
addr16
iret
inc
daa
pop
je
popf
xchg
sub
sbb
mov
jge
enter
fwait
sub
sbb
leave
es
fdivrs
sarl
and
hlt
idivl
popf
jns
sbb
xchg
adc
repz
jmp
cli
imul
aas
andb
push
sub
lds
jmp
std
ss
loop
or
push
jbe
insl
xchg
mov
lret
inc
scas
fdivr
xchg
lcall
stos
daa
aas
cld
pop
mov
hlt
adcl
pushf
mov
mov
nop
rclb
dec
mov
loop
lret
dec
in
mov
push
push
and
xor
add
adc
in
hlt
mov
movsb
out
mov
test
xchg
fisubs
ds
push
push
push
and
xor
add
adc
in
hlt
mov
movsb
out
mov
test
xchg
fisubs
ds
push
push
mov
xor
add
aam
in
hlt
mov
movsb
out
movsb
incb
sub
push
or
outsb
and
add
xchg
sahf
in
or
mov
jmp
jnp
imul
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
cmpsl
adc
std
int
mov
leave
loop
cmp
jge
dec
insl
pop
cmp
or
in
std
in
int
fnstsw
lea
pop
cmp
pop
cmp
dec
or
std
lds
fbld
lcall
adc
adc
push
outsb
jns
sbb
xchg
mov
push
ss
xchg
je
xchg
xchg
mov
mov
dec
add
pushaw
in
fstl
push
inc
insl
int
fbstp
inc
dec
subl
nop
jo
in
clc
xchg
xlat
psllq
lods
test
loopne
clc
or
or
lret
sub
inc
gs
lods
mov
bound
add
mov
pop
in
dec
sbb
sahf
mov
clc
lea
xchg
insl
dec
mov
xchg
jle
cmp
sbb
loop
sub
inc
out
ljmp
subb
mov
sub
ret
or
or
lods
lods
mov
popf
push
xchg
sbb
inc
pop
push
adc
sbb
mov
test
rcrb
sub
das
cmp
xor
inc
dec
dec
js
push
mov
leave
ret
icebp
jecxz
icebp
jg
insl
sub
sub
cmp
pop
jno
insb
or
mov
mov
jge
insl
jge
dec
dec
pop
cmp
or
in
std
int
mov
lea
jge
dec
dec
pop
cmp
or
sub
mov
sbb
aam
xchg
ret
mov
mov
push
sub
loop
and
insb
push
daa
sub
scas
clc
dec
jnp
rcr
stos
add
or
aaa
hlt
outsb
push
mov
aam
cmp
and
jae
je
nop
adc
nop
xchg
cmp
lods
mov
das
stos
ss
sub
fs
xchg
sbb
in
pop
es
in
lds
inc
mov
loope
int3
js
rorb
xor
fwait
adc
jbe
neg
sti
sbbb
arpl
fdivrl
lret
sub
or
jno
and
push
mov
add
outsb
sbb
xchg
repz
lock
add
inc
and
mov
jge
pop
testb
pop
and
cli
mov
dec
test
lea
cmp
lods
dec
data16
cmpb
int3
iret
or
sbb
sbb
fbstp
pushf
add
pop
cli
rorb
xor
xchg
pushf
cld
repz
inc
mov
mov
pusha
lahf
sub
fiadds
cmp
pop
or
test
gs
inc
or
or
sbb
and
stos
data16
jnp
orl
cld
mov
mov
and
lods
lods
mov
push
mov
push
inc
fdivrp
xlat
out
sbb
jo
pop
imul
or
mov
rorl
inc
mov
push
mov
pop
or
call
sarb
xchg
inc
push
jle
add
mov
push
in
arpl
movsb
dec
stc
pop
sbb
pop
lods
push
jb
jmp
fmul
leave
rep
mov
lods
shlb
rclb
lret
mov
popf
and
and
adc
aam
jns
mov
add
inc
sbb
cmp
shll
es
arpl
lock
lea
mov
inc
xor
jge
dec
adc
cmp
xlat
loop
jge
jmp
ljmp
insl
or
mov
sub
inc
and
dec
push
scas
sar
jns
xor
lock
ret
imul
fsts
cmpsb
repnz
and
xor
inc
fadd
shl
jns
fimull
push
outsl
dec
sbbb
lods
cltd
and
in
inc
sbb
getsec
in
mov
add
scas
ljmp
lahf
push
imul
leave
inc
mov
xor
adc
cmp
add
push
xor
dec
adc
popl
popa
cmp
mov
push
xlat
jge
push
mov
fadd
lods
pop
in
lock
pop
mov
sbb
clc
pop
adcb
jo
jle
adc
mov
insl
inc
pop
and
outsl
pop
xchg
rcll
xor
jge
lods
push
ja
mov
or
mov
es
jne
pushf
inc
adc
jge
add
xchg
adc
mov
fcoml
imul
xchg
xor
jmp
and
jge
jecxz
jp
rolb
jno
push
repz
cmpb
mov
push
shrb
jl
sub
or
xchg
inc
push
and
jbe
inc
jecxz
jmp
out
inc
adc
std
daa
and
pop
sbb
ficomps
test
jns
mov
mov
mov
mov
inc
mov
mov
insl
xchg
pop
cmc
xchg
pop
in
xor
sbb
dec
push
fcmovnbe
adc
push
stc
in
inc
add
scas
rclb
push
push
sbb
subb
mov
lea
mov
faddl
push
pop
lcall
mov
popa
pop
lret
xor
imul
dec
sub
inc
call
enter
cli
sahf
into
xchg
incb
jp
sbb
add
or
sbb
sub
leave
mov
sarb
dec
aad
mov
pop
lock
roll
daa
dec
jo
fs
dec
add
inc
out
pop
sub
addr16
cmc
xor
ret
out
int
lods
cmp
pop
leave
imul
jmp
rclb
mov
pop
das
out
push
jno
ljmp
aaa
lea
movb
lds
cld
mov
out
sbb
aad
pop
adc
imul
pop
and
adc
clc
leave
outsl
scas
mov
inc
bound
and
jle
mov
mull
das
cmpsb
movsl
cmpsl
arpl
dec
ds
ret
xchg
cmp
int3
xlat
push
pusha
bnd
rclb
test
push
pop
add
push
mov
rclb
jp
in
insb
inc
jg
mov
dec
loopne
imul
jp
mov
cmpsl
and
loopne
mov
shlb
dec
mov
lahf
je
call
lock
push
lcall
dec
cli
jno
mov
add
sti
and
dec
inc
mov
xchg
mov
jae
test
in
shrb
add
pop
jo
cltd
loopne
mov
imul
jp
lret
add
cmp
lahf
pushf
repz
fucomp
fldl
repnz
cwtl
lds
and
push
addr16
rorl
xor
ret
outsl
push
pop
aaa
jge
cmpsb
add
or
adc
bound
push
xchg
xor
lret
scas
push
jbe
xorb
cmp
cvttps2pi
fsubrs
shll
and
push
inc
nop
xchg
cwtl
ds
adc
add
ret
jns
out
fcomp
iret
clc
outsl
aaa
inc
or
jnp
popf
int3
lods
in
movsb
mov
mov
pop
addr16
fs
cltd
lret
push
mov
pop
xor
les
or
dec
mov
jle
rcrb
ja
xchg
adc
pop
sub
ror
daa
add
cmp
jo
inc
add
aad
inc
js
enter
lret
repnz
call
adc
lock
testb
mov
sbb
loopne
mov
inc
cmpsb
shrb
xchg
push
pop
gs
cmp
pop
xchg
adc
mov
inc
sbb
mov
pop
rcll
pop
cs
sti
insl
js
leave
dec
push
lret
lock
clc
scas
push
aaa
xchg
enter
cmp
test
lret
xor
or
xchg
into
unpckhps
sbb
mull
cs
dec
xchg
fwait
add
sub
loope
popa
mov
les
mov
test
adc
fbstp
shlb
mov
popa
sub
pop
subb
pop
rorb
cmc
stos
adc
pushf
scas
jle
mov
jg
and
sbbl
xchg
int3
xchg
je
lods
jno
and
cld
push
push
push
push
lea
loopne
cs
push
xchg
push
fmul
aad
xor
xchg
mov
add
or
addr16
insl
daa
or
xchg
aad
push
fs
int3
in
in
pop
int3
mov
jecxz
mov
cwtl
jne
jae
add
add
jne
dec
outsl
in
xor
lds
adcb
in
in
jae
roll
mov
popf
pushf
sarb
enter
sbb
push
dec
push
inc
stc
les
xchg
mov
into
rol
loope
lock
ret
fwait
inc
lds
mulb
test
lcall
mov
aad
xchg
not
cli
push
ds
sbb
imul
enter
mov
loope
ljmp
ja
jae
lret
insl
sbb
cmp
mov
inc
in
jmp
loopne
testl
add
ja
lock
sti
or
ja
icebp
loopne
shrb
popa
xchg
and
or
fdivrs
insb
mov
cmc
xor
in
xor
sub
test
loopne
in
xchg
inc
xor
jle
cmp
shrb
scas
push
cld
test
out
inc
xchg
js
fsubrs
gs
iret
inc
std
mov
adcl
adc
cmp
jbe
addr16
imul
addb
dec
mov
addr16
pop
mov
out
xchg
testl
leave
inc
daa
xchg
insl
xor
int3
adc
jg
es
or
cmpsb
int
cmp
cmp
push
jb
outsl
mov
jge
je
iret
xor
xlat
cmpsb
push
sbb
cmp
sub
pop
movsb
fcomps
outsb
inc
adc
sar
xlat
lret
lcall
decl
jae
push
pop
roll
sub
js
lock
stos
insl
ret
push
xor
pop
dec
mov
xor
lcall
stos
xchg
push
addr16
push
sub
insl
jmp
cmp
aaa
sarl
cld
adc
dec
mov
stos
inc
divl
sbb
sub
mov
cmp
inc
bound
sti
mov
out
cmpsb
ljmp
ljmp
ficomps
mov
incb
movsl
test
fldcw
ret
outsl
leave
mov
loop
xchg
jns
and
jp
xor
mov
enter
push
dec
pop
push
pop
xchg
sbbb
push
call
mov
xlat
pop
mov
sbb
push
imul
loop,pn
orl
fisttpll
stc
scas
inc
adcl
out
push
pop
dec
mov
stos
sbb
cmp
pop
inc
jne
adc
inc
sahf
test
inc
jl
movsb
ret
mov
outsb
adc
ds
push
jnp
push
in
out
out
mov
cmpsl
lahf
cmp
sti
dec
andb
add
int3
sub
inc
mov
paddusw
ficompl
cmp
cmpsb
inc
and
mov
lods
add
les
cmp
aam
jbe
shl
mov
ss
xorl
fimull
pop
pop
pop
ficomps
dec
dec
lret
mov
inc
mov
jmp
frstor
xor
jne
roll
cmp
fidivl
adcl
jl
adc
mov
ret
mov
sbb
mov
jo
je
or
mov
mov
and
out
add
daa
push
imull
add
xor
cmp
addr16
shrb
adc
repnz
jae
mov
mov
or
jmp
mov
aaa
ljmp
pop
rclb
aas
leave
fs
lea
mov
divb
stc
cmp
les
jecxz
leave
cmp
test
aam
into
test
xor
cli
mov
pop
mov
scas
adc
jae
popf
ss
mov
leave
mov
jbe
mov
ret
inc
mov
cmp
into
push
and
sbb
ss
pusha
pop
test
add
fnstenv
test
dec
mov
inc
mov
out
add
test
cmp
imul
pop
andb
inc
sub
cli
mov
sbb
push
jb
jo
jmp
repnz
mov
inc
mov
jle
xchg
sti
or
pop
push
sarl
cmpsl
in
rolb
mov
int
jb
repz
loop
int3
and
pop
loope
out
addr16
jmp
jmp
int3
adc
adc
pop
xor
dec
test
clc
dec
mov
icebp
popa
ds
xlat
push
lods
xchg
rclb
or
scas
test
mov
daa
and
dec
jle
mov
add
into
sbb
hlt
test
pusha
pop
push
mov
cmp
fbld
sbb
mov
dec
push
fstpl
sbb
adc
pushf
push
clc
cmp
stos
and
fimull
popa
scas
aad
pop
sbb
scas
or
mov
pop
sub
mov
and
sti
outsl
cmp
lock
mov
mov
pop
add
in
mov
or
orl
repz
sub
loopne
inc
scas
ret
cmp
mov
pop
in
mov
es
or
stos
stos
int
stc
ja
adcl
in
repz
push
sub
cmpsl
jno
mov
out
xchg
sarb
jbe
out
inc
aaa
dec
and
pop
xchg
ja
insb
imul
in
mov
iret
add
dec
push
scas
hlt
xchg
xor
movsb
loop
adc
push
cmc
xchg
outsl
inc
hlt
sub
roll
pop
stos
loope
fisttpll
mov
cmp
mov
pop
lods
mov
lods
sarb
jnp
imul
js
pop
cmp
cmp
jmp
out
test
xor
std
mov
push
loopne
jae
adc
push
fldl
enter
jo
scas
push
adc
cwtl
stos
mov
rcll
pop
adc
inc
and
ret
fwait
add
push
xlat
fwait
lds
cli
out
test
lret
xor
fs
inc
add
hlt
sbb
or
lds
pop
jae
jnp
or
popf
in
bound
xchg
ljmp
es
aam
rolb
pop
mov
pop
clc
push
clc
push
mov
sub
sub
cli
out
push
sub
sbb
bound
lahf
xchg
sbb
pop
or
dec
mov
push
lock
aad
or
repnz
mov
sub
mov
jae
arpl
sub
in
jb
rorl
pop
shrl
test
push
mov
cmp
loop
ds
stos
mov
push
jp
gs
jg
cs
sub
btr
outsb
add
dec
lahf
xchg
dec
fs
faddl
andl
bound
adc
or
and
mov
fwait
add
stc
push
loop
cmp
sub
je
sbb
int
or
xchg
out
dec
jge
sub
cmpsb
pop
dec
dec
pop
dec
fisubl
or
aaa
in
ret
lahf
dec
repz
lcall
insl
cld
and
sbb
leave
xchg
mov
lcall
data16
jbe
add
mov
or
les
in
hlt
inc
jecxz
mov
cmp
push
lods
jno
mov
cmp
push
xor
push
pop
push
daa
adc
ja
jge
in
scas
sbb
iret
jbe
clc
xchg
inc
cmp
xor
add
xlat
push
xchg
mov
insb
pop
xor
test
js
stos
jl
gs
pusha
mov
pop
dec
imul
push
dec
sarb
rorb
pop
nop
jle
inc
pop
inc
or
out
sub
mov
popa
jecxz
dec
sub
stos
mov
sub
sub
jp
xor
push
mov
sbb
int3
push
out
inc
or
stos
jb
pop
mov
daa
es
mov
ds
mov
xor
stc
sbb
lea
mov
or
sbb
sbb
out
ret
inc
adc
xchg
xor
sbb
mov
inc
fdiv
lock
push
ret
dec
das
mov
mov
adc
sub
lcall
lret
adc
in
push
dec
outsb
pop
sub
pop
fiaddl
add
les
cmc
sbb
mov
icebp
push
mov
icebp
sbb
dec
iret
ljmp
mov
stc
inc
jle
sti
lods
sarb
push
and
inc
data16
pop
sbb
push
jmp
jge
lock
call
push
cs
pop
pop
fidivrs
xchg
sbb
mov
cmpsb
imul
push
insb
movsl
jl
test
adc
push
sbb
jmp
cld
popf
adc
sub
nop
flds
xchg
testb
jecxz
inc
out
insl
fxch
das
pop
gs
adc
inc
mov
mov
and
cltd
push
insl
jns
aam
daa
lods
aad
int
arpl
push
sarb
or
dec
int
aas
dec
inc
out
hlt
roll
dec
sarb
mov
test
add
cli
and
popf
rolb
add
or
scas
pop
rorl
filds
lcall
pushf
andl
cmc
cmpsb
or
loopne
add
or
ret
pop
aam
sarb
outsb
mov
sub
int3
sahf
jnp
addr16
cmpsb
pop
idiv
pop
inc
sahf
jb
hlt
inc
pop
popf
decb
ret
out
scas
test
pop
stc
ficoms
jl
cmp
dec
xchg
jno
hlt
imull
popf
jge
int3
cmpl
in
out
xchg
popf
mov
or
jle
add
add
in
xchg
xor
jp
mov
pop
enter
je
cmp
aam
push
jb
jg
adc
cmpsb
leave
inc
lret
add
pop
xor
xor
std
adc
fmuls
jl
sub
fildll
stos
test
mov
xchg
dec
sub
mov
inc
cmp
adc
loop
fistl
add
ror
add
stos
dec
loopne
mov
in
xlat
jne
loope
mov
pusha
adc
icebp
es
xor
and
lret
jb
dec
pop
daa
mov
roll
xlat
add
add
mov
cmp
sahf
or
pop
mov
xor
push
ror
test
inc
jo
outsl
add
lcall
in
inc
jmp
outsl
test
mov
add
adc
push
in
xlat
int3
mov
mov
xchg
das
insb
or
out
lret
mov
adc
subb
je
jp
xchg
fwait
dec
jne
mov
sbb
in
shll
cwtl
hlt
push
sub
data16
mov
adc
xor
add
out
lret
inc
mov
in
add
jns
xor
mov
mov
and
push
icebp
mov
and
mov
mov
xor
or
ds
cltd
add
fbstp
mov
mov
aas
movsb
push
and
mov
xchg
shrb
mov
mov
test
xor
arpl
fs
punpcklwd
mov
adc
movsl
jmp
pop
cld
pop
push
outsl
andl
movsb
orl
xor
js
mov
xchg
dec
mov
ret
sub
mov
mov
mov
add
fs
mov
push
aam
push
mov
enter
jecxz
int3
cli
jl
mov
roll
pusha
int
test
pushf
movsb
jecxz
dec
add
mov
sti
sbb
lock
jge
jno
mov
scas
mov
jg
add
dec
filds
cmp
xchg
rclb
xor
js
xor
iret
push
repnz
cmp
fidivrl
and
in
pop
dec
xchg
push
repnz
sub
clc
ja
sbb
mov
in
dec
cltd
stos
arpl
lock
shll
push
xor
jae
push
pop
movl
stos
out
dec
popf
jne
mov
cmp
imul
cmp
mov
push
lea
aas
sti
adc
movsb
and
loop
mov
push
cwtl
push
int
ss
xchg
cmpsb
mov
jb
mov
imul
jecxz
seto
xor
loope
xchg
mov
xchg
dec
mov
lods
repz
ret
jno
bnd
gs
movhps
test
out
outsl
xor
fcoms
cmp
ljmp
sahf
out
vunpckhps
insb
divb
cmc
sub
add
fbstp
xorl
repnz
clc
sbb
push
insl
or
leave
cmpsb
push
ss
sbb
shlb
arpl
and
insl
shrb
jp
inc
cmp
mov
fcmovbe
or
cltd
popf
das
mov
fldt
sub
xchg
jl
and
rolb
lret
or
fs
js
pop
xor
pop
out
push
out
xor
and
cmpsl
adc
ja
movsb
loopne
add
scas
cmp
std
mov
jp
call
dec
testl
adc
in
pop
xor
cmp
fsubrl
mov
jp
pop
push
stos
jo
lds
dec
xlat
mov
mov
lret
adcl
mov
movl
mov
pushf
cmpsb
inc
sti
push
xchg
add
push
sysexit
sub
in
dec
fldl
cwtl
lahf
shr
inc
gs
jns
jno
dec
cmpsb
repnz
test
pushf
sbb
mov
sbb
pushf
sbb
jmp
rcl
xor
mov
add
dec
rolb
sub
movsb
add
inc
mov
adc
mov
xchg
es
pop
pop
ds
ss
xrelease
cmp
call
sub
call
je
arpl
cmc
flds
xor
cmpsl
xchg
pop
sbb
pop
sub
das
push
push
inc
je
xor
mov
outsb
mov
hlt
inc
mov
shlb
or
and
or
test
cmp
out
pop
adc
divb
rclb
shrl
stos
movsl
push
sahf
sti
mov
mull
pop
repz
xchg
test
or
xor
test
aas
loope
xchg
imul
dec
in
dec
add
push
add
mov
imul
jnp
aam
sar
jecxz
push
sbb
out
mov
mov
ret
test
inc
aam
push
out
xchg
out
mov
int
sbb
es
or
cld
std
xchg
mov
lods
mov
jge
insl
jge
dec
dec
pop
cmp
or
in
std
int
mov
lea
jge
dec
dec
pop
cmp
or
in
mov
mov
fnstsw
lea
jge
dec
dec
pop
cmp
sub
fscale
jmp
int
mov
or
xchg
xlat
testl
ret
repnz
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
push
mov
mov
push
repz
ret
mov
mov
jae
arpl
inc
in
inc
adc
or
cmp
sub
pop
repnz
loop
shrb
xor
fcoml
test
cld
push
in
inc
mov
mov
dec
repnz
push
rclb
fidivl
insb
cld
xor
mov
lahf
xor
js
pop
out
dec
or
scas
mov
fidivs
sti
mov
mov
mov
mov
clc
movsl
loop
outsl
push
pop
call
fldl
inc
pop
pop
bound
jge
popa
adc
bound
lods
inc
aam
cmp
add
xor
inc
adc
std
and
mov
pop
aas
je
inc
xchg
pop
repz
jge
outsb
and
aam
xchg
into
sub
adc
jb
pop
ret
insl
in
mov
andl
int
aaa
inc
in
scas
add
and
jb
cmp
mov
sub
mov
mov
xchg
dec
xor
lods
std
pop
arpl
xor
mov
mov
pop
repnz
jl
aam
outsb
xor
and
add
mov
mov
fstpt
inc
ret
xor
or
cmp
inc
int
mov
mov
daa
sbb
test
jnp
out
xor
test
in
movsb
push
int
fnstenv
push
scas
pop
test
push
outsb
repz
icebp
dec
imull
sbb
dec
loop
shrb
xor
fdivl
cld
push
in
inc
sbb
or
cmp
sub
pop
repnz
loop
shrb
xor
fdivl
cld
push
in
inc
sbb
enter
jae
adc
outsl
sub
icebp
jns
pushf
lahf
or
inc
xchg
ja
lcall
push
fsubrl
push
pop
sub
jmp
fnsave
xor
mov
pop
inc
add
adc
xor
push
sub
mov
xor
sub
xor
pop
mov
adc
add
lcall
cs
cmpsb
mov
adc
sbb
inc
inc
pop
xchg
mov
jne
sbb
mov
aas
fcomp
xchg
push
fs
cmpsl
arpl
mov
jge
out
popf
sbb
and
orb
in
das
dec
inc
stos
add
das
cmpsl
andl
sbb
mov
xchg
fdivrl
test
fwait
or
dec
roll
mov
cmp
mov
lds
sub
mov
les
xor
push
mov
jne
out
mov
rcrb
out
push
jp
mov
jge
xchg
sarl
sub
cmp
jmp
sub
iret
iret
xor
xor
cmp
mov
dec
mov
xor
das
xchg
test
add
dec
stos
stc
stc
stos
je
ja
sbb
adc
pop
jmp
add
xor
aas
sub
cmpsb
dec
aam
sti
call
adc
or
mov
outsl
rcr
inc
and
adc
test
sub
fbld
je
adc
xchg
ret
cmc
negb
fbld
testl
xlat
test
cmp
stos
add
pop
outsb
xorl
push
repnz
lds
test
bnd
lret
push
jl
sbb
jno
xor
loopne
and
mov
rcrl
sbbb
push
sub
pop
es
add
jo
cmp
mov
ud2
out
in
ja
jmp
pop
add
push
mov
cmp
flds
xor
xchg
mov
leave
push
das
sbb
lea
testb
cld
ljmp
sbb
loopne
aam
jns
in
ljmp
enter
pop
pop
dec
cmp
add
mov
adc
clc
cwtl
cmpsl
mov
adc
mov
fidivrs
jmp
lock
lret
cld
cltd
xor
pop
subl
scas
xor
aas
sub
orb
loope
xlat
or
sub
movsl
addr16
daa
sbb
add
push
push
lock
jb
lret
push
sbb
stos
inc
xor
scas
insl
adc
add
pop
hlt
pop
xchg
add
cld
je
or
inc
mov
rorl
fisubrs
jmp
push
sbb
mov
loopne
sbb
push
push
ret
insb
test
xor
or
lods
call
and
lds
pop
mov
add
cmp
dec
pop
rorb
movsb
xchg
inc
sbb
mov
inc
addb
insl
or
jnp
loopne
hlt
sub
stc
push
ja
pop
push
fbld
out
sub
outsb
ret
sub
insb
pop
add
fs
nop
loopne
nop
arpl
xchg
sub
mov
add
push
or
mov
sub
push
scas
aad
daa
popa
adc
lea
adc
loopne
adc
lcall
jp
jecxz
pop
insb
ret
andl
jecxz
mov
aas
nop
lds
mov
sbb
testb
flds
cmp
and
pop
add
mov
mov
xor
and
dec
loop
incl
loop
outsl
out
fwait
cwtl
ret
sub
cmp
mov
test
cmpsl
cld
adcb
cld
xchg
icebp
aad
jmp
into
fistl
and
and
test
mov
cmp
xor
mov
push
es
xchg
pop
ret
pushf
sub
add
inc
pop
xchg
jg
ja
fidivrs
jle
mov
lret
pop
mov
inc
int
mov
lods
in
repnz
aam
or
mov
cwtl
add
sub
sub
cmp
jmp
nop
xchg
imul
cld
xchg
fiadds
insb
popa
in
sbb
sub
enter
cmp
or
lods
inc
xchg
mov
jnp
inc
pop
xchg
pop
xor
enter
mov
xor
hlt
lahf
movsl
pop
pop
sub
je
mov
mov
push
jae
sub
sbb
das
fiadds
cmpb
cli
hlt
lret
jns
popa
jg
inc
mov
sub
nop
mov
insb
lcall
movsl
or
push
std
pop
out
ret
xor
mov
mov
cmp
push
sbb
push
ljmp
bound
aas
pop
and
in
xlat
mov
call
stc
in
adc
mov
lods
adc
jb
jmp
adc
or
pop
fdiv
dec
call
sarl
pop
lret
shll
shrb
pop
scas
mov
fsubs
sub
dec
and
push
inc
fmull
cld
das
shll
dec
cmp
mov
xor
fs
das
cmp
test
pop
mov
mov
jnp
and
fnstcw
cmp
scas
cmp
rclb
mov
sbb
loope
mov
pop
jg
xchg
jns
dec
inc
je
sar
mov
push
inc
int
sbb
add
mov
jmp
mov
adc
fistps
jle
in
shl
push
jp
shrl
lret
sahf
inc
fisubl
jnp
dec
stos
clc
push
mov
or
xor
xchg
testl
test
loop
daa
jne
repnz
jecxz
hlt
xchg
cwtl
ret
xchg
inc
jbe
outsl
aam
movsb
mov
lds
pop
and
leave
mov
sub
lcall
aas
jmp
sahf
push
cld
and
and
dec
nop
xor
fiadds
pusha
pop
fs
cmp
lea
sti
mov
cmp
sub
fstps
js
adc
adc
test
xor
xor
fstp
lds
or
xor
sbb
mov
and
inc
push
mov
sbb
xchg
adc
and
ret
and
xchg
pop
xchg
lret
ja
fstl
jbe
ficoms
xor
cltd
mov
js
mov
pop
ss
pop
xlat
rclb
je
rcr
or
repz
xchg
xor
jmp
test
je
daa
int3
int3
fimull
cmp
das
adc
leave
lret
imul
xor
sub
cs
ljmp
mov
adc
mov
repz
in
lcall
xchg
ljmp
mov
pop
mov
inc
mov
push
and
movsl
adc
adc
mov
pop
push
jmp
aad
push
das
cltd
and
xor
mov
pop
mov
ja
add
jl
dec
out
jae
inc
in
shl
cmpsl
int
sub
test
cmp
in
xchg
sub
xchg
push
repz
js
cmpsb
pop
out
or
mov
adc
and
mov
arpl
sahf
pop
jb
push
mov
xchg
mov
add
aad
push
rolb
stc
xor
pop
xorl
in
push
sti
or
loope
sahf
cli
lds
or
mov
inc
mov
mov
jnp
enter
dec
insb
dec
add
jbe
pop
pop
lret
jp
dec
lods
lods
in
movsb
mov
cltd
pop
call
es
out
xchg
int3
and
pop
fildll
flds
mov
sti
cs
imul
xchg
imul
les
mov
cmp
movsl
cmp
fistpll
insl
loope
cs
or
imul
xchg
inc
sub
push
les
or
sub
sub
shlb
ret
push
ja
xchg
and
or
add
jl
xor
int3
sub
js
xchg
adc
or
inc
add
mov
jmp
push
sub
jbe
cmp
in
rcll
jnp
xor
cmp
ret
adc
jo
mov
shll
stos
jns
test
jne
dec
push
sub
sub
push
xchg
pop
lods
mov
pop
nop
loop
jmp
pop
std
jno
out
sub
daa
or
ds
imul
fadds
in
push
jno
daa
mov
mov
fsubrs
adc
sub
shlb
clc
add
jmp
gs
lret
fdivp
lahf
dec
subl
dec
inc
lcall
xchg
push
pop
call
jnp
cld
inc
xor
inc
or
xor
push
or
jp
jno
fmulp
mov
test
and
rcl
mov
add
pop
outsb
xor
push
or
mov
sub
cltd
push
nop
loope
and
int
popa
pushf
lods
cwtl
enter
and
shlb
cmp
fwait
jno
dec
cmp
mov
push
jmp
incl
xorb
jns
xchg
mov
or
sub
pop
iret
push
dec
cmp
mov
and
dec
int3
test
outsl
gs
test
mov
jmp
repnz
sub
icebp
mov
adc
imul
ss
aas
call
orb
in
fwait
fwait
and
lret
into
sbb
jge
ja
sbb
mov
mov
mov
mov
pop
in
inc
in
pop
jecxz
cmpsb
jl
data16
adc
bnd
mov
xchg
xchg
cmp
jnp
push
push
mov
push
mov
cmp
jp
pusha
and
cmpsb
sbbb
sahf
and
rcll
out
fildl
push
or
stos
out
mov
push
pop
dec
mov
mov
popa
dec
repz
jmp
adc
repnz
jecxz
pop
cwtl
adc
ret
frstpm(287
lea
push
loopne
push
lcall
ret
andl
cs
jno
outsb
int3
jo
cmpsb
adc
jmp
sti
cmpsb
arpl
fisttps
cmp
jg
fs
xlat
pop
lock
push
jae
hlt
aad
pop
test
inc
pushf
inc
mov
test
inc
scas
mov
inc
cmpsl
pusha
and
sahf
js
pop
adcl
xor
sub
jns
arpl
movsb
cmc
xchg
sahf
mov
xchg
cmp
fndisi(8087
jp
jnp
repnz
or
mov
mov
jmp
push
je
loop
jae
out
fildll
mov
dec
xchg
dec
cmc
mov
jp
jbe
xor
adc
sub
cmp
das
aas
icebp
push
mul
push
mov
aaa
out
loopne
inc
std
mov
xor
ja
das
es
push
pop
pop
or
lds
pop
push
dec
xor
cmp
xor
bound
and
xor
insl
sub
xor
cmp
daa
cs
adc
leave
test
sbb
addl
cld
dec
int
test
pop
dec
xchg
ds
mov
xor
pop
inc
xor
ffree
sub
loopne
mov
mov
adc
jmp
push
in
xlat
dec
subl
jmp
cmp
ljmp
ss
aad
mov
outsb
fildll
push
xor
sub
mov
mov
int
sub
push
mov
mov
icebp
jge
xor
adc
mov
flds
or
mov
dec
leave
stos
les
mov
testb
test
test
inc
jns
loopne
jmp
adc
rol
iret
xor
mov
sub
stos
cmc
sub
cmpsl
inc
lock
mov
and
pop
or
cltd
pusha
ror
xor
add
fbstp
nop
lods
inc
aas
cmp
aam
sbb
mov
imul
jg
faddl
sbb
pushf
add
aas
mov
and
std
call
sahf
xchg
pop
ret
loopne
cmp
mov
push
in
or
xchg
js
or
pop
rolb
ret
jne
enter
mov
cmp
sub
mov
inc
shll
push
inc
pop
leave
sub
jae
or
aad
leave
popa
sahf
mov
sbb
jl
movsb
pop
inc
jecxz
test
xor
adcb
mov
notl
loopne
jne
fisttps
test
lahf
xor
les
repz
xchg
mov
cmp
cwtl
jne
dec
inc
xchg
inc
sbb
push
inc
cmpsl
sub
sub
int
mov
in
inc
fidivl
jle
sbb
not
xchg
add
jle
lret
push
xor
sub
rorl
xor
cmp
or
roll
sub
aas
outsl
jg
mov
sbb
inc
cmp
push
test
pushf
cli
in
hlt
out
inc
outsb
jle
inc
inc
shrl
pusha
or
mov
sbb
int3
push
mov
das
test
pop
out
fwait
inc
pushl
add
mov
shrl
push
js
nop
daa
insb
std
and
cmp
addl
stos
test
test
leave
aam
sub
lods
nop
sbb
xchg
lret
mov
shll
inc
mov
or
or
daa
orb
test
hlt
movsb
aas
pop
jne
repnz
sub
iret
or
or
jo
lcall
ljmp
push
xchg
in
push
push
jecxz
mov
dec
dec
push
scas
movsb
mov
adc
mov
sbb
mov
pop
lea
xchg
cmp
adc
mov
jecxz
dec
lods
push
jno
cltd
lret
adc
sub
negl
das
mov
dec
int3
roll
inc
movsb
push
repnz
outsl
sub
dec
and
cld
sti
push
dec
imul
xchg
imul
jle
jo
enter
bound
pop
das
adc
xor
push
sbb
testb
mov
xchg
fiaddl
mov
notb
outsb
addr16
test
iret
jb
jg
sub
cli
cltd
btc
mov
mov
leave
xchg
jge
push
jbe
fdiv
dec
addr16
jo
out
test
fildll
inc
std
repz
xchg
and
push
mov
mov
sbb
fdivl
push
jne
mov
leave
out
sbb
jp
inc
mov
nop
stos
movsb
inc
adcb
push
cmp
mov
push
adc
and
adc
mov
pop
mov
data16
push
sub
and
test
push
add
jno
mov
imul
loop
xchg
lods
adc
xor
movsl
xchg
mov
fwait
stc
js
iret
sbb
addr16
outsb
ds
mov
cmc
inc
mov
mov
cmp
ficomps
push
add
imul
std
into
test
test
les
push
bound
cld
fisubs
fldl
out
sbb
mov
movsl
sub
sbb
push
lcall
add
dec
insb
push
faddp
xchg
pop
sub
add
mov
xchg
mov
push
out
stos
clc
je
cli
in
fcomps
add
xchg
cmpb
addr16
shll
dec
mov
sbb
cltd
mov
lds
jb
push
idivb
mov
lds
jecxz
adc
or
dec
in
ret
loop
fcompl
and
mov
out
mov
mov
xor
jmp
cmp
test
cmp
ljmp
push
outsb
shlb
loop
push
cld
xchg
or
mov
mov
test
adc
xchg
call
sti
push
aad
mov
ds
jle
repnz
fsincos
adc
cmp
fsubp
xchg
mov
aad
push
xor
pushf
sub
into
jl
shufps
push
push
inc
out
dec
call
and
dec
gs
mov
mov
mov
jns
mov
ja
movsl
mov
stc
sub
lret
enter
ja
push
push
sub
incb
pop
cmp
lahf
pop
out
mov
and
sub
dec
shll
icebp
ss
call
mov
data16
fldenv
sbb
and
dec
je
mov
fdivs
sub
sbb
arpl
ret
and
mov
sahf
stos
sub
lcall
lods
adc
in
sbb
ror
pop
lods
out
adc
call
xchg
jnp
inc
ret
in
mov
in
gs
pop
ret
je
xor
ds
shr
pop
jle
jle
lock
mov
inc
inc
xlat
mulps
xchg
mov
hlt
add
push
dec
xor
or
and
outsb
mov
mov
subb
xchg
xor
std
scas
divl
cmp
cmp
shl
lods
dec
nop
out
xor
dec
or
out
dec
or
xchg
hlt
jmp
pop
jle
pop
sbb
push
mov
push
movsb
dec
and
xchg
mov
mov
jo
cmp
and
push
push
aaa
in
cmp
loopne
jge
sub
pop
cli
mov
xchg
lahf
lods
xor
bswap
mov
movsl
mov
xor
jb
fstpl
fcmovu
icebp
push
mov
push
out
or
insb
in
sbb
xlat
xor
add
shl
mov
les
jne
jp
fld
inc
inc
adc
in
int
je
mov
and
cli
sahf
inc
mov
adcl
cmpl
stos
lea
popa
sar
or
in
dec
out
add
inc
add
shrb
rolb
sbb
nop
imul
pop
mov
cmpsb
data16
push
sti
movsw
dec
xchg
stos
daa
sahf
sbb
xchg
lret
push
int3
inc
mov
or
pop
dec
out
rclb
jp
pop
fsubl
xchg
cmp
aaa
cmpsb
sub
ficompl
aad
push
loope
jle
sub
daa
or
xchg
cmpsl
and
scas
cwtl
add
aad
fdivl
jne
ret
push
cmpl
xchg
sub
fnstcw
arpl
jnp
pop
push
ja
mov
cmc
mov
pop
mov
out
test
xorl
orl
xor
and
movsl
xchg
rol
mov
jecxz
sbb
cs
fnstcw
and
xor
outsb
xchg
out
or
xchg
aad
dec
outsl
inc
hlt
mov
lret
sub
pop
aaa
pop
adc
xchg
mov
rolb
xchg
fs
mov
test
mov
ljmp
cmp
cmp
jge
test
adc
lods
jns
pop
jmp
pop
pop
stos
mov
mov
int3
adc
mov
pop
mov
ljmp
lds
inc
push
pusha
subl
out
jnp
jg
cli
push
shll
and
les
popf
xchg
cli
scas
lds
sti
rol
sub
cmpsb
xchg
incl
inc
add
fldcw
adc
mov
dec
outsb
iret
xchg
mov
call
scas
jne
add
mov
sbb
mov
in
das
into
mov
mov
and
lcall
mov
adc
dec
push
sti
loope
sub
lahf
xor
inc
movsb
sbb
shll
icebp
sbb
cmpl
cmp
rcrb
mov
jb
dec
mov
cmp
insl
xor
adc
jns
mov
dec
cwtl
fwait
add
ret
mov
xor
lahf
xlat
dec
sub
xor
call
and
cwtl
rolb
scas
mov
sar
mov
movsl
jne
test
stc
fldenv
inc
push
add
rorb
or
out
stc
clc
mov
mov
dec
in
cmp
inc
movsl
push
mov
or
repnz
jle
push
jg
inc
negl
cs
icebp
cli
pop
xor
fsts
imul
sub
cs
mov
inc
fstpt
fsts
lcall
lret
push
dec
lods
mov
enter
iret
jp
icebp
insb
jmp
or
sbb
inc
movsb
jl
fs
call
ret
cwtl
data16
mov
sar
push
fstl
and
std
pop
cli
mov
xor
enter
orps
int3
dec
ljmp
adc
leave
push
sti
cltd
lods
les
xor
mov
movsb
rolb
nop
movsb
test
dec
dec
adc
cmp
xor
cld
sub
push
ljmp
inc
jg
inc
push
gs
movsb
sbb
mov
jb
ja
movsl
int
sbb
pushf
in
xlat
hlt
and
pop
push
push
sbb
in
mov
push
loope
cli
gs
inc
xchg
sti
in
lea
jns
push
mov
pop
jmp
lds
and
jnp
imul
shll
or
int
sbb
les
in
test
rcrl
cmpsb
jmp
or
jae
mov
xchg
mov
shll
jmp
out
xor
jl
insb
ret
mov
mov
jb
cld
push
in
inc
sbb
or
cmp
sub
pop
repnz
loop
shrb
xor
fdivl
cld
push
in
inc
sbb
cpuid
sub
sub
pop
repnz
loop
shrb
cwtl
xor
fdivl
clc
push
faddl
mov
mov
pop
repnz
loop
shr
add
lods
jne
cli
inc
popf
add
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
xchg
push
test
xor
adcl
mov
and
push
xlat
inc
das
je
fs
adc
aam
les
jb
dec
adc
add
xor
and
push
cld
inc
ret
fs
mov
les
les
hlt
js
push
adc
daa
mov
push
xorl
xchg
push
in
mov
int
fistpl
mov
fcompl
das
jge
lock
or
into
pushf
or
jnp
dec
inc
pop
fst
inc
leave
or
mov
dec
fcomi
add
inc
popf
and
scas
imul
fisubrs
rolb
cmpb
and
mov
mull
fs
ja
mov
jb
mov
out
in
mov
dec
mov
add
xor
pop
popa
in
or
or
mov
mov
outsl
test
jl
mov
repnz
hlt
arpl
inc
rol
fs
enter
xchg
sahf
test
mov
movsb
and
push
les
jb
lock
add
xor
and
push
out
inc
sub
ljmp
repnz
loop
mov
stos
das
fwait
pop
pusha
and
inc
pop
popa
rcl
add
mov
push
lock
xlat
inc
in
mov
adc
repz
dec
loopne
xchg
mov
xchg
push
xchg
repz
test
repnz
rorl
les
jb
bound
add
xor
and
push
rolb
repnz
adc
aam
les
jb
bound
add
xor
and
push
rolb
repnz
adc
push
sub
int3
add
stc
mov
or
int3
bound
jle
jmp
xchg
mov
push
add
adc
aaa
mov
push
lahf
outsl
lock
lret
stos
ja
aas
inc
push
jg
lods
sub
cmp
es
xchg
xor
hlt
jns
cli
sti
jae
push
stos
inc
add
lret
in
dec
push
mov
sub
in
mov
daa
xchg
incb
mov
cmpsl
cs
dec
enter
mov
xor
lcall
ljmp
test
dec
mov
cmp
lret
xor
cmp
jo
jmp
jo
in
pop
in
daa
xor
lods
adcl
mov
jecxz
jl
lret
lret
inc
lods
sahf
push
orl
aas
xchg
lods
pop
ja
inc
out
add
orb
out
dec
inc
xchg
xlat
jbe
lret
cld
mov
sub
in
mov
rcll
jle
das
ffree
inc
fcomp
es
add
adc
cmpsb
xorb
lods
or
cmp
imull
movsb
outsb
out
dec
push
dec
fs
xchg
jno
int3
test
test
pusha
dec
mov
xor
jb
ja
sub
mov
cmp
mov
subl
mov
push
aas
adc
xchg
iret
popa
jb
out
call
xchg
push
jnp
adc
xor
xor
das
cltd
jb
mov
jle
frstor
cmp
fcoml
xlat
ja
hlt
test
or
dec
roll
les
xchg
and
dec
in
mov
rcrb
in
cld
xchg
mov
clc
rcrl
mov
scas
jns
and
cmp
fyl2x
or
dec
push
jb
outsl
mov
mov
ja
jbe
outsb
add
xor
sub
test
inc
jg
addb
test
loope
add
pop
data16
push
or
lock
popa
sbb
sbb
mov
es
lods
lcall
repz
lds
ret
shr
ja
mov
push
cltd
pusha
adc
mov
lret
loope
adc
adc
lods
pop
stos
ss
cmp
add
dec
xor
pop
xchg
imul
pusha
lcall
xor
sbb
lea
bound
jae
aas
jle
or
je
fmul
dec
push
mov
ja
fs
adc
aam
into
or
dec
pop
addr16
mov
rorl
lcall
cmpsb
xchg
stos
es
xor
xor
mov
dec
addb
push
ss
add
ficoms
fs
cld
and
out
int3
out
or
xchg
out
lret
mov
into
sub
test
mov
int3
fsubs
in
and
and
lret
cmp
jecxz
pop
push
out
fbld
push
mov
pop
scas
xchg
sahf
sbb
daa
push
sub
mov
andb
and
fstpt
xorb
adc
mov
lods
in
xchg
shr
add
enter
pop
adc
in
sti
add
rol
out
fdivl
test
push
and
sbb
aaa
mov
and
loope
and
insl
xchg
or
push
out
xlat
add
push
or
lock
or
fisubs
or
mov
mov
adc
xchg
sub
cltd
sub
movl
push
sub
dec
dec
dec
push
jno
xchg
shll
fisttpl
sbb
mov
fcomip
cmp
dec
movsl
pop
inc
or
test
iret
loope
or
dec
shrb
inc
lret
adc
loopne
outsl
popa
jmp
out
fisttps
mov
jno
aas
cld
std
fwait
lret
fs
out
xor
test
ret
ss
mov
push
jnp
jmp
push
push
fsts
test
addb
mov
enter
xorl
xor
outsb
xchg
mov
testl
pop
arpl
jb
sub
cltd
and
je
loope
fistps
xchg
xor
ficoms
sti
rorb
mov
movsl
sbbb
mov
dec
jae
ror
gs
mov
cmp
mov
ss
jmp
and
sub
nop
jmp
xor
js
sub
adc
je
xor
xchg
inc
mov
mov
faddp
sbb
or
inc
jmp
xlat
dec
and
cs
into
push
mov
test
in
mov
adc
dec
xor
mov
mov
mov
mov
inc
lea
push
cmp
sub
cs
jns
xchg
push
sub
pop
inc
cmc
jnp
orl
mov
lock
push
stc
loope
test
notb
adc
mov
fldl
hlt
and
jnp
lret
push
inc
mov
fistps
jp
lret
dec
mov
fsubs
orl
shrl
add
pop
ljmp
xor
and
xor
stos
inc
test
mov
push
dec
cld
mov
lods
adc
inc
push
out
shll
lahf
idivl
push
push
inc
lcall
adc
dec
test
push
cmp
jne
sbb
imul
loop
iret
mov
in
push
clc
hlt
repz
lret
push
cli
inc
scas
and
add
pop
outsb
leave
ret
mov
push
pop
stc
ror
mov
in
xchg
xor
jecxz
lea
add
xlat
subb
jnp
sub
add
xor
inc
mov
cmp
loope
mov
js
and
mov
mov
mov
inc
pop
sar
jecxz
adc
imul
enter
bsf
cmp
jae
push
xchg
shrb
stos
mov
out
scas
lods
lahf
data16
mov
fldt
jmp
add
or
dec
ret
xchg
jl
sbbl
push
fcoms
sbb
adc
mov
adc
xchg
sbb
mov
addl
fsts
adc
das
ja
out
out
pcmpeqb
or
mov
cmp
cli
rcrb
mov
mov
xchg
mov
inc
popa
repz
mov
int
pop
mov
in
jnp
js
inc
lock
sbb
adc
arpl
mov
sahf
jnp
ret
xor
mov
pushf
dec
je
ds
insb
loop
mov
add
out
cltd
jbe
cmp
loopne
scas
xor
or
ljmp
pop
xchg
cmp
fucomp
and
sarb
int
pushl
mov
jge
xchg
rclb
or
dec
fldl
push
aas
pop
push
pop
je
add
jp
jp
adc
push
xchg
adc
in
fldt
cmc
daa
outsl
xchg
movsb
cmpsl
enter
cwtl
cmp
lcall
dec
sbb
sbb
inc
popl
sbb
xchg
mov
cmovs
jg
fisubs
addr16
adc
push
add
test
sub
int3
sub
popf
mov
xchg
pop
daa
rcl
inc
adc
jne
mov
dec
lds
scas
mov
std
mov
jmp
in
mov
sbb
loop
jnp
push
pop
sti
ret
and
mov
divl
lahf
imul
dec
add
dec
ja
mov
movsb
push
loope
test
popa
loope
stos
je
xor
push
push
adc
dec
pop
xchg
sti
jns
sbb
inc
inc
xchg
jg
std
cmp
mov
lret
inc
adc
pop
pop
pusha
push
sub
pop
stos
loope
fbld
test
lret
push
cwtl
sub
push
shlb
sahf
icebp
cmp
out
inc
inc
xchg
inc
movsl
orb
mov
cmp
fs
movsl
stc
sbb
fwait
ret
test
rcrl
inc
mov
movsl
dec
cmp
mov
dec
lods
insb
xchg
jnp
jae
push
xchg
rorb
lods
out
fs
dec
mov
pop
icebp
sub
adc
sbb
sbb
xor
aaa
push
sub
les
jae
mov
pop
psrlw
mov
aas
add
push
fiadds
andb
sub
or
mov
mov
xchg
adc
push
icebp
mov
adc
ljmp
adc
es
sub
enter
mov
push
xchg
xchg
mov
cmpsl
bound
mov
sub
movsl
push
add
call
and
xchg
pop
xchg
in
imul
add
mov
shrb
ja
les
inc
mov
sub
adc
in
add
and
stc
xchg
dec
add
lcall
ret
je
or
jle
mov
nop
mov
mov
dec
test
rcll
adc
loopne
repz
xlat
jmp
loop
push
jg
jmp
push
or
sbb
popf
adc
inc
out
or
insb
sub
lods
and
cld
repz
lock
js
push
stos
mov
mov
jle
iret
sub
xor
cmp
stos
jb
call
sub
arpl
mov
push
jnp,pn
fwait
imul
mov
adc
add
imul
test
shrl
mov
xchg
adc
add
push
jl
sub
sub
inc
push
test
xchg
push
outsb
mov
gs
les
scas
pop
inc
push
dec
mov
mov
cmp
inc
mov
lret
stos
add
int
addr16
aam
cmp
ret
pop
mov
pop
fsub
jecxz
idivb
in
sbb
test
xchg
clc
lock
js
and
push
clc
inc
fldt
mov
subb
pop
cmp
pushl
ja
jno
lret
xor
jns
pushf
int
lret
pop
dec
orb
stc
adc
jnp
sarl
jge
test
insb
test
pusha
mov
add
je
mov
lea
mov
aam
push
in
sbb
push
cmpsb
in
mov
inc
in
leave
pop
dec
push
in
inc
adcl
mull
mov
xor
adc
xor
out
inc
insb
cmpsl
inc
add
outsb
addr16
cmp
mov
stc
mov
iret
cmp
mov
insl
inc
test
cmp
cmc
popf
ss
aaa
dec
rcrb
sub
inc
pushf
inc
push
mov
movsl
aad
les
movsl
stc
sarb
adc
jbe
push
add
pop
stos
inc
mov
jg
xchg
divl
ja
rcrb
xchg
xor
inc
lods
movsl
movsb
xor
out
and
cwtl
sbb
push
out
stos
sub
icebp
cmp
xor
lods
sub
xor
mov
jmp
xchg
lcall
and
xor
mov
insb
mov
pop
inc
js
add
sti
stos
push
ds
mov
loop
xchg
mov
mov
sub
mov
add
movq
jle
pop
stc
add
shll
pop
xchg
movsl
movsb
loop
pop
adc
push
mov
jns
movl
mov
and
mov
pop
int3
push
movb
xor
xchg
and
pop
lods
out
cltd
addr16
sub
xor
not
push
popa
and
ror
xchg
xchg
insl
adc
int
mov
mov
mov
lods
and
icebp
and
jmp
xchg
ret
rcrb
adc
cmp
mov
jmp
inc
test
cmp
lret
jp
in
sbb
xchg
dec
test
js
dec
jmp
aad
xor
jmp
hlt
notl
xchg
popf
scas
push
jae
out
arpl
lock
js
repnz
inc
fidivrl
push
loopne
cmp
ret
push
or
daa
repnz
pop
add
xor
inc
mov
xchg
arpl
test
ljmp
add
lock
insl
jl
cmp
jmp
push
and
push
and
mov
adc
mov
add
mov
pop
loop
cli
pop
cmp
insb
adc
mov
sahf
mov
lods
mov
insl
cmpsl
mov
inc
jae
or
mov
cli
push
repnz
sbb
and
icebp
ljmp
shrb
pop
sub
inc
pop
leave
xor
cmp
sub
stos
mov
xor
xlat
movsl
cmp
mov
ficompl
xchg
pop
lods
mov
xor
rcrl
sbb
sub
and
mov
inc
xchg
sti
pusha
mov
mov
cmpsb
outsb
push
cs
sub
jnp
clc
mov
lods
stc
fwait
lcall
adc
jbe
loop
shll
shlb
adc
fisubrl
addb
jo
stos
dec
inc
movsb
xlat
ret
insb
add
aaa
js
or
cmpsl
xchg
imul
xor
scas
pop
movsb
cmc
popf
cmp
ja
push
in
jmp
pop
test
inc
inc
int3
inc
iret
jp
xor
int
mov
enter
mov
pop
aam
pop
subl
sbb
movsb
mov
jne
shll
or
out
inc
push
mov
rorb
xor
push
test
adc
icebp
adc
cmp
ja
ljmp
ljmp
jae
lret
sub
sub
and
xor
adc
jns
pop
lahf
pop
daa
lret
sbb
sbb
js
int
int3
lock
mov
aas
mov
repz
sub
loopw
cmp
push
mov
mov
mov
push
sub
gs
sbb
cmc
push
push
mov
mov
mov
or
inc
out
fistpl
mov
and
fcom
scas
pop
test
and
push
and
out
in
push
ret
adc
jmp
mov
ret
sahf
inc
notb
sub
xchg
sbb
call
daa
push
in
pop
xchg
push
and
call
iret
dec
push
js
int
fdiv
int
test
adc
mov
mov
and
jb
push
mov
clc
cmp
hlt
andl
pop
cmc
mov
test
or
daa
cmp
incb
fiaddl
loop
lock
sbb
mov
repz
outsb
enter
sub
sub
sub
ss
aaa
and
xor
popf
movl
mov
incb
jmp
adc
inc
sbb
pop
mov
cli
stc
mov
in
lcall
sbb
sahf
ja
mov
sbb
push
push
stos
add
adc
in
adc
mov
rcrl
jge
push
sub
aaa
or
xchg
or
pop
lods
aam
jbe
adc
rcrl
xchg
push
jecxz
cmp
ss
hlt
pop
sbb
test
lods
sbb
push
inc
clc
mov
pusha
lds
mov
push
test
hlt
mov
test
xor
dec
std
and
jbe
sbb
and
decl
dec
dec
gs
or
outsl
adc
mov
sbb
pusha
mov
and
in
hlt
cmp
sbb
daa
dec
ret
addl
and
pop
add
mov
cmp
ljmp
dec
xchg
xchg
movsl
push
push
sar
gs
scas
adc
add
out
outsb
lret
mov
sahf
and
hlt
je
fsubs
andb
cltd
jmp
popa
mov
mov
sbb
lcall
jbe
cs
push
into
leave
pop
mov
in
jne
icebp
xor
in
les
insb
jmp
cli
pop
jb
sti
and
sub
dec
sbb
lock
cmpsb
shrl
inc
jecxz
nop
xchg
adc
and
jge
aaa
jle
xchg
fisttps
add
inc
test
pop
mov
push
dec
clc
loop
mov
ljmp
sbb
popa
push
xor
jb
pop
les
mov
imul
xchg
jae
push
jae
push
mov
repz
cmpsl
sub
sbb
jecxz
imul
lcall
cwtl
lahf
lahf
lea
in
mov
dec
jmp
mov
jg
jge
sbb
lods
jne
into
cmp
inc
out
pop
sbb
push
sbb
lcall
les
in
mov
push
lds
shll
pop
adc
mov
xchg
and
sbb
add
es
mov
mov
ret
dec
cmp
int3
ljmp
jle
pop
enter
sub
jp
mov
lret
dec
adc
les
cmp
inc
cli
push
jnp
mov
std
sarl
jle
cmp
in
sti
test
sbb
add
sub
test
loopne
pop
dec
cmp
mov
out
pop
shrb
add
std
and
mov
imul
stos
push
ret
cli
pop
push
push
lcall
mov
mov
dec
push
mov
pop
xchg
xchg
lock
mov
ret
fimuls
ret
loop
sbb
clc
into
adcb
jae
mov
and
enter
cwtl
push
hlt
imul
jecxz
adc
negb
mov
js
dec
inc
imul
repz
jne
pop
sahf
jns
outsl
jbe
dec
mov
shl
pop
xchg
sub
mov
and
and
jmp
lahf
inc
jo
enter
sbb
push
xor
xor
filds
lock
leave
out
cmp
roll
or
lahf
mov
and
sahf
sbb
sbb
xchg
outsb
sub
sub
push
inc
push
adc
jmp
push
repz
push
sahf
jb
out
and
dec
in
sub
adc
hlt
int
dec
mov
neg
cmp
shl
mov
stos
xchg
sub
sub
into
pop
mov
in
push
icebp
mov
push
popa
iret
repz
push
mov
je
stos
push
sub
int
fsub
cwtl
loop
sbb
and
inc
aam
dec
loop
cmpb
fldl
scas
add
xor
addb
add
sub
mov
push
dec
into
xchg
add
or
jge
adc
test
hlt
mov
adc
xchg
mov
mov
test
xchg
sbb
and
iret
inc
push
push
jbe
addr16
scas
sub
hlt
inc
xor
test
mov
movb
adc
push
scas
cmpsl
decb
mov
pop
jnp
cwtl
into
lods
and
insb
mov
push
out
adc
ja
or
cltd
xor
adc
xchg
sbb
mov
stos
rcll
ret
and
int
mov
push
adc
loop
pop
aad
andb
bsr
outsb
addb
test
int3
fdivrs
out
iret
lret
lock
cltd
and
pop
lret
add
push
mov
addb
addr16
dec
jnp
adc
sbb
cltd
imul
sbb
scas
xchg
in
adc
xchg
test
cmp
loopne
mov
adc
jo
pop
cmpsb
sub
adc
fisubrl
ljmp
fs
scas
std
sbbl
push
jno
xchg
sub
add
cmp
cmp
lcall
lods
into
push
cmpsl
popa
or
push
dec
mov
sahf
cmc
leave
imul
jae
jno
rcr
iret
xlat
add
jecxz
cmp
divb
jmp
push
fldenv
and
push
daa
pushf
scas
jno
cltd
lret
add
stos
out
add
sahf
mov
cmp
and
mov
mov
das
repz
mov
aad
xchg
in
inc
push
mov
scas
js
ja
mov
aam
rcrl
add
inc
lock
iret
in
mov
mov
cmp
jmp
stos
add
or
popf
in
mov
adc
int
fidivl
dec
mov
addr16
shl
inc
daa
mov
adc
imul
scas
and
jno
xor
jecxz
ficompl
inc
les
js
fisubrs
addl
sbb
cmp
subl
mulb
sbb
xchg
sbb
rcll
lret
sub
shll
movsl
xchg
pop
testb
rorb
repnz
xchg
lods
enter
arpl
dec
data16
faddp
ss
mov
push
mov
stc
dec
lea
jp
cld
push
cmp
sub
dec
pop
jmp
aad
push
push
inc
ds
sub
hlt
dec
aaa
sbb
aad
fnop
cmpsb
cmp
repnz
adc
adc
xchg
push
cwtl
jb
inc
insb
or
hlt
cmpsb
jae
pop
test
cmp
ret
test
mov
add
adc
add
hlt
fstps
lods
test
fnstsw
insl
adc
call
and
cmc
sbb
add
push
les
jb
bound
add
xor
and
push
rolb
repnz
adc
aam
les
jb
bound
add
xor
and
push
rolb
repnz
push
test
sub
hlt
jbe
bound
mov
stos
push
inc
ret
fs
xchg
testb
push
les
repnz
sahf
mov
aad
stos
int3
mov
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
