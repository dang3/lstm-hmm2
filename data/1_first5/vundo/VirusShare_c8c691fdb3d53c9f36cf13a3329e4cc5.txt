add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
or
push
data16
or
jbe
add
aad
in
cmc
addl
mov
inc
push
push
data16
push
add
ss
xchg
enter
xchg
repnz
cmpsb
movsl
mov
pushf
inc
push
loopne
mov
push
add
into
xor
adcb
ret
ss
and
push
adc
scas
xor
mov
pop
rcl
jecxz
xchg
dec
push
add
pop
cmp
lock
add
mov
inc
mov
sub
lock
pop
daa
movsl
cmp
push
inc
inc
pop
psadbw
or
push
pusha
xchg
or
push
and
or
sbb
and
cmpsb
jmp
lret
sarl
test
mulb
adc
mov
dec
mov
xor
clc
stc
lea
adc
sbb
cmc
icebp
jne
xchg
xchg
mulb
push
fcomps
add
frstor
aam
xchg
sbb
xchg
jecxz
cmpsb
mov
data16
add
mov
ds
cmc
out
mov
xor
and
sbb
pusha
arpl
push
popa
cmpsl
mov
xchg
sub
fdiv
sti
inc
and
xor
add
pop
dec
dec
inc
push
decb
lcall
repz
xor
gs
inc
sub
adc
mov
aad
in
cmc
xchg
mov
inc
inc
push
push
data16
push
add
ss
out
div
xchg
mov
inc
inc
xchg
cmp
dec
jno
data16
pop
das
or
mov
xchg
enter
cmovno
xor
cltd
out
aas
in
movsl
jns
adc
jg
jge
dec
pop
aam
stos
cmpsb
fldenv
decl
cmp
popf
clc
dec
mov
mov
cmp
xchg
pop
insb
shl
adcb
popf
sti
fsubr
push
mov
lods
stos
cmp
and
jle
iret
xlat
xchg
push
mov
xchg
jo
clc
pop
ficompl
rcrl
pop
out
popf
xchg
repnz
fimuls
adc
and
popa
daa
dec
das
xchg
jge
dec
stos
adc
sub
mov
mov
rclb
jnp
fiadds
in
imul
and
sbb
lock
xchg
in
or
inc
add
cmp
sbb
xchg
and
cltd
cmp
test
inc
mov
mov
ja
aam
imul
or
insb
cs
out
cmpsl
loopne
xchg
xor
add
inc
out
mov
stos
daa
js
jae
push
fwait
sarl
jno
icebp
out
cmpsl
dec
xchg
xlat
and
scas
sub
das
hlt
in
insl
xor
je
fcoml
dec
scas
and
and
and
adc
push
aas
daa
add
dec
aas
lods
pop
aam
pop
cmp
js
or
and
outsl
popf
les
movsl
dec
adc
xchg
jecxz
filds
inc
cmp
popf
leave
dec
dec
in
xor
imul
jl
dec
mov
popf
jnp
clc
mov
jl
xchg
jb
repz
xorl
movsl
mov
fidivrl
and
cwtl
cmp
sbb
mov
lret
aaa
lret
repnz
cli
mov
jo
insl
push
aaa
pop
mov
hlt
xor
lods
testb
push
or
fmul
mov
xchg
pop
push
cmp
mov
mov
cmp
fidivrl
rcr
xchg
and
push
adc
and
xor
daa
in
cltd
jae
xor
jmp
xchg
loope
mov
push
sti
lea
cld
inc
push
loop
xlat
jne
jp
inc
outsl
jns
jo
mov
jno
jle
inc
iret
aaa
enter
stos
pop
xor
pop
shrl
sbb
cs
push
shrb
mov
int
stos
or
xchg
adc
sub
push
inc
mov
ja
enter
adc
mov
cmpsb
das
imul
or
popa
mov
in
push
inc
test
or
into
cmp
mov
xchg
lret
xor
jp
sub
sbb
dec
xchg
or
imul
add
cs
push
push
jl
test
movsl
shlb
repz
xor
loope
out
xchg
cmp
dec
xor
call
adc
imul
call
dec
out
rclb
or
mov
dec
mov
cmp
out
dec
dec
jbe
rcrl
sub
das
cli
xchg
jne
pop
jecxz
into
arpl
popf
add
dec
add
push
int3
clc
enter
push
repz
movsl
push
pushf
ficompl
sub
subb
jae
ja
add
movsl
out
ret
push
mov
xchg
sub
mov
sti
sbb
mov
shr
mov
sub
std
test
jp
push
aam
cmp
sbb
stos
in
adc
pop
movsb
movsb
push
pusha
mov
mov
mov
test
mov
das
jp
pusha
dec
std
decl
xchg
aad
stos
in
fildl
call
loop
adc
mov
rcll
push
dec
jp
mov
pop
xor
pushf
mov
pop
cmp
aam
or
mov
je
mov
xor
addl
repnz
or
sbb
sahf
jb
testl
insb
adc
movsb
jo
add
mov
inc
add
in
or
std
xchg
jnp
dec
out
mov
pushf
jg
ret
rol
test
ret
sbb
sub
les
fldenv
mov
pop
xor
add
jecxz
in
mov
addl
push
inc
inc
mov
sbb
add
jo
inc
pop
testl
push
es
mov
mov
fsts
add
data16
jns
xchg
popf
sbb
mov
iret
adc
imull
xchg
gs
dec
inc
shll
push
mov
repz
fmull
push
sbb
ret
xchg
or
jnp
loop
mov
and
xchg
add
pminub
shl
loop
decl
jns
repnz
test
popa
int
movsb
jmp
pop
lea
jo
add
adc
int
sbb
jbe
pushf
je
jg
js
nop
sub
pop
pop
push
mov
and
clc
push
fwait
aad
int
cmpl
int
adc
or
sbb
xor
insl
outsb
sub
xor
int3
cltd
jp
adcl
mov
pop
push
xchg
sbb
lret
sarl
mov
daa
mov
pop
dec
mov
push
negb
cs
stos
push
adcb
push
add
and
stos
aaa
adc
dec
adc
cmpsl
sub
pop
mov
std
ds
cmp
nop
pop
pop
inc
xchg
adc
lahf
xor
or
movsl
mov
leave
daa
adc
sti
in
jae
mov
mov
mov
mov
mov
pop
les
cmp
adc
in
orl
and
stos
aas
xchg
add
cmp
xor
enter
test
pop
aam
cmp
xor
imul
fiadds
dec
jno
js
or
test
in
inc
jmp
int
lock
adc
jle
jl
push
adc
xlat
mov
cmc
aaa
mov
notb
push
movsl
in
ja
movsl
fcomps
pop
add
cwtl
clc
fwait
cwtl
jae
pop
mov
hlt
aaa
add
and
repnz
inc
mov
push
sahf
popa
pop
mov
rclb
test
cmp
jmp
mov
sbb
push
shlb
adc
sbb
insb
inc
test
out
cmp
cmpsl
pop
fidivs
mov
mov
xchg
mov
test
movsb
adc
test
add
lcall
int3
xor
or
sub
andb
mov
jmp
insl
push
in
xor
stos
rclb
jno
shl
out
das
fistps
push
xor
das
cmc
jnp
jecxz
jo
das
add
add
rcr
and
addr16
rcrl
cmp
jb
mov
roll
jge
cmc
push
scas
mov
call
xor
and
mov
aam
mov
push
mov
scas
inc
lret
into
add
mov
xchg
outsl
sbb
adc
aas
pop
and
add
adc
je
push
xchg
imul
ret
push
inc
in
push
cwtl
mov
cltd
xlat
mov
dec
pop
sub
sahf
stos
mov
xchg
es
es
cmpsl
xchg
push
lret
jl
cmp
pop
sahf
mov
cmp
xchg
sbb
loop
pop
mov
orb
or
shl
push
mov
ret
enter
and
xchg
aad
je
clc
test
xchg
shrb
push
cs
loop
push
rcrl
addr16
enter
popw
cmc
rcrl
shlb
loop
jmp
jne,pn
out
pop
cli
xor
insl
fwait
mov
mov
inc
lcall
cmp
cmc
cmp
js
jg
scas
lcall
cmp
int3
movsb
mov
adc
cmc
or
cmp
jge
data16
sarb
pop
push
test
adc
leave
xchg
sbb
mov
lods
inc
test
rclb
std
icebp
sbb
insb
jno
xchg
mov
outsb
sbb
inc
lods
imul
jns
jg
jmp
dec
loop
xor
cmp
and
mov
and
iret
and
rcrb
daa
mov
add
fnstsw
outsb
mov
inc
outsl
aad
movsl
mov
push
cmp
and
and
jbe
lods
add
arpl
mov
jo
mov
cmp
inc
cmpsl
loope
pop
enter
and
mov
mov
xchg
inc
adc
fstl
add
and
jl
lea
xchg
rolb
fadd
loope
movsl
into
call
xor
inc
into
mov
adc
adc
aad
add
or
aad
sbb
and
mov
sub
mov
incl
push
insb
mov
dec
fistps
or
mov
jae
mov
insb
bound
lret
push
rcl
mov
push
leave
cmp
enter
flds
fnstenv
movsb
das
push
js
xor
ja
xor
add
add
enter
add
fwait
iret
jle
faddl
out
in
mov
shll
pop
push
gs
negl
xchg
or
cmp
sub
mov
xor
hlt
inc
mov
and
sbb
repz
pop
add
mov
and
fldl
int3
dec
push
outsl
mov
mov
sbb
test
insl
fwait
data16
sbb
jmp
in
xor
inc
bound
or
aas
pushf
fwait
ja
xchg
push
lahf
pop
out
leave
popa
sub
cmpsl
daa
pop
in
xchg
iret
jp
aaa
xor
test
jns
dec
pushf
movb
in
sbb
mov
inc
insl
out
cmp
jb
push
aaa
movsb
in
push
sub
outsb
pop
mov
mov
xor
sub
cmpsl
popf
add
xor
mov
rcrb
or
data16
and
sub
ds
int3
and
dec
pusha
jnp
pop
aas
movsl
mov
mov
push
loop
add
outsl
cld
ja
sub
pop
sbb
insb
and
mov
jecxz
shll
roll
xor
pop
jae
outsb
pop
push
xchg
sub
out
sbb
xor
cmp
stos
jo
daa
mov
inc
lret
in
and
fcmove
cs
and
sub
add
push
pop
mov
pop
into
test
push
aaa
push
fldt
test
adc
push
mov
push
mov
negb
cld
adc
lea
cmpb
inc
repnz
dec
mov
fists
out
test
shl
fisttps
mov
mov
jge
sub
xchg
fldl
mov
pop
stc
cmp
sub
push
mov
movsl
sahf
pusha
call
cltd
lods
adc
push
scas
xchg
adc
adc
add
insl
adc
out
adc
jne
cmp
sbb
sub
sub
mov
and
aam
aad
push
xor
push
pop
jle
sbbb
js
xor
test
lret
test
leave
fiadds
xchg
lea
or
fcoms
mov
or
fcoms
jns
ret
mov
sub
mov
and
xchg
mov
cld
int3
jp
stc
and
add
pop
push
pushf
jae
cmp
mov
loop
pop
mov
push
out
cmpsb
mov
sbb
sbbl
sbbb
xor
mov
movsl
push
fcomi
cmp
sub
push
jle
call
inc
mov
sub
add
lds
add
jo
nop
xchg
loope
repz
add
jge
pusha
pop
pop
mov
xchg
mov
push
mov
cmpsb
xchg
ret
push
rcrb
pop
aam
lahf
xchg
adc
sub
je
inc
inc
inc
mov
lret
addl
mov
xchg
cmpsb
incl
pop
mov
push
xor
pop
aad
fld
movsb
ss
cmp
pop
adc
xor
les
and
cmp
push
fildl
and
fidivl
adc
popf
xchg
jno
mov
outsl
lret
rclb
cmp
xor
push
jp
fsubl
pop
adc
std
das
nop
int
mov
xor
lods
sub
mov
aad
dec
test
lea
aaa
pop
sbb
jp
jl
push
addr16
xchg
xor
mov
xchg
push
inc
imul
std
ret
and
inc
xlat
aam
jg
mov
lods
sahf
pop
ret
jb
jo
xor
test
ret
cld
mov
jge
aad
pop
cmp
dec
cmp
inc
imul
xor
sub
xor
in
insb
loopne
stos
movsb
cld
or
or
add
xor
leave
mov
dec
jo
repz
fisttps
cld
jns
cs
sub
out
push
popa
in
push
fdivrl
imul
jb
add
in
loope
testl
add
xchg
jecxz
test
rcrl
lock
cmp
add
adc
sar
lds
sti
pushf
push
push
repnz
inc
cmc
int
push
mov
stos
push
pop
xchg
or
or
mov
call
mov
sbb
int
iret
negl
jge
cltd
decl
nop
add
jmp
jmp
js
adc
punpckldq
mov
test
push
inc
mov
ret
sti
mov
inc
ds
jmp
push
sub
daa
sti
adc
jo
and
push
lahf
dec
mov
cmp
in
loop
and
sbb
mov
add
out
lods
dec
pop
mov
scas
dec
xchg
fcmove
jne
xchg
repnz
pop
loopne
mov
addb
not
or
mov
ficompl
xchg
hlt
repnz
xor
movsb
data16
jns
idivb
sbb
pop
ds
dec
test
lods
jne
and
dec
ja
xchg
fstl
jb
addr16
out
jg
mov
movsl
and
pop
mov
sub
xchg
xor
or
xchg
pop
popa
lds
es
gs
mov
jmp
movsb
cltd
lret
iret
cmpsl
or
bswap
xchg
pop
enter
lcall
ret
push
inc
test
cltd
dec
cmc
cmp
mov
ficomps
lret
ja
pop
into
xchg
in
inc
clc
jne
or
mov
int3
les
dec
sub
sub
popf
arpl
mov
out
scas
lea
test
mov
cmp
mov
les
cmp
test
fwait
pop
addr16
fucomp
push
mov
popf
jo
shll
cmp
aam
jl
mov
dec
cmp
cmp
mov
les
rclb
and
popa
ja
inc
outsl
cmp
mov
mov
push
inc
notl
sub
push
lcall
mov
push
xlat
arpl
push
xlat
pop
push
push
cmp
repz
xchg
cli
sbb
pusha
out
mov
ljmp
xor
into
jle
dec
sub
xchg
inc
jmp
jae
pop
add
ljmp
mov
test
mov
negl
jle
js
and
xlat
fisttpll
jmp
rep
mov
and
andb
call
mov
arpl
rorl
inc
pop
out
jp
sub
js
shlb
push
jbe
loop
sbb
stc
add
fbld
repnz
testb
or
dec
mov
cmpsb
lods
xchg
ss
sub
mov
fisubrl
out
pop
outsb
data16
insb
icebp
mov
in
push
cs
daa
rcr
mov
scas
push
outsl
ret
daa
idiv
push
push
jl
icebp
or
push
shll
pop
inc
ljmp
popa
andl
add
mov
mov
fcmovnbe
or
sub
push
sahf
push
mov
lods
loope
mov
clc
mov
in
in
push
stos
add
adc
mov
out
cltd
sub
into
arpl
mov
push
idivl
push
lcall
adc
into
push
add
mov
aad
or
call
je
sahf
call
lcall
out
dec
test
jbe
ds
js
lret
fldcw
adc
aam
xchg
xlat
add
sub
sub
and
sti
ja
pop
js
fwait
repnz
into
aam
negb
aas
cmp
gs
rcrl
sarl
pop
jge
dec
stos
rcrb
cmp
popf
jo
inc
mov
clc
inc
rclb
pop
jp
jmp
cmp
xor
mov
mov
jle
or
cld
shrb
aas
mov
lahf
cmp
repnz
add
push
xor
pop
jl
popl
fcoml
pop
xchg
loopne
enter
push
xchg
sub
push
pop
shll
jne
adc
fs
cmc
cmp
mov
loop
sub
and
inc
orb
loop
dec
jnp
cltd
test
or
mov
and
les
cs
jecxz
push
sub
daa
out
popa
dec
inc
out
test
ds
lea
mov
mov
mov
out
inc
xchg
inc
push
scas
mov
dec
shrl
cld
lahf
int3
ret
inc
dec
or
add
aas
mov
mov
sub
jge
pusha
xchg
fnstsw
pop
pop
aam
les
fstps
stos
adc
xchg
out
push
sbb
bound
out
ret
dec
cli
inc
push
or
sub
outsl
mov
or
mov
fwait
mov
mov
dec
enter
stos
and
and
push
sub
ror
in
in
rclb
cmp
dec
cmp
lcall
and
lret
addr16
test
rorb
jno
xchg
leave
inc
and
std
int3
enter
repnz
loopne
sbb
test
adc
dec
mov
pop
add
repnz
push
dec
add
lahf
repz
jp
cmp
push
cmc
clc
les
or
push
sbb
fiaddl
jecxz
arpl
arpl
or
cwtl
pop
outsl
adc
es
lds
test
ret
imul
sbb
push
rdtsc
jp
mov
push
sub
pop
ljmp
add
mov
sti
add
or
inc
push
xchg
ret
nop
lock
aad
inc
mov
aam
pusha
xor
dec
pop
jge
aam
jle
or
jl
mov
in
je
mov
fsubrs
sub
inc
mov
inc
xlat
fs
out
rorb
push
clc
ds
xchg
mov
xchg
outsb
mov
arpl
icebp
mov
xor
push
mov
mov
clc
mov
mov
jl
imul
pop
imul
mov
mov
push
xlat
dec
fwait
or
icebp
scas
stc
push
cmpsl
add
imul
ja
jne
fdivrp
push
adc
jmp
push
xchg
push
jno
push
pop
rclb
adcl
push
cmp
mov
inc
aad
lret
je
or
add
imul
lahf
test
mov
jg
jae
xchg
mov
into
inc
test
push
push
jno
lret
out
cmpsl
lea
sbb
mov
js
mov
fwait
inc
add
aad
dec
xor
sbb
push
sub
fistpll
sub
sub
and
dec
pop
cwtl
in
cmc
push
and
mov
popa
xchg
push
mov
es
mov
xchg
mov
cmp
shl
mov
pushf
pop
jge
loop
xor
lock
cmp
dec
test
mov
nop
call
ja
ja
dec
jne
sbb
jns
xor
ret
rcrl
ret
lock
and
mov
pop
push
add
leave
fldenv
xor
mov
cmc
outsl
call
call
lcall
movsl
leave
xor
sarb
out
or
repz
or
mov
jge
ret
popf
add
or
gs
sbb
repz
cmpsl
movsb
sbb
jl
pop
mov
int
lods
lock
stos
push
sarb
adc
fisubs
jg
das
jae
add
mov
addb
test
sbb
mov
jb
mov
icebp
stos
and
jne
sbb
enter
fwait
sub
js
popa
sarb
pop
mov
lret
call
lock
cld
cmp
add
sub
ja
int3
out
popa
jmp
shll
fadds
and
pusha
pop
jbe
cltd
aam
xor
or
ficoml
push
movsl
adc
cmp
adc
ss
mov
cmp
jo
inc
test
mov
stos
adc
push
cli
mov
dec
push
pop
rcrl
negl
addr16
xor
test
cmp
or
cmpsl
sub
adc
fimull
insl
pop
cwtl
mov
push
ret
xchg
pop
pop
sbb
pop
fisttpl
mov
je
out
cwtl
cli
mov
daa
sub
dec
test
and
xlat
push
call
mov
mov
fsts
pop
out
push
cmpxchg
mov
lods
inc
inc
rcrb
dec
hlt
adc
pushf
inc
lcall
xchg
pop
addr16
fwait
jp
dec
dec
mov
addr16
jmp
in
cmp
sbb
les
adc
jnp
out
faddp
push
push
jns
cmpsb
inc
cmp
push
push
add
ss
out
div
xchg
mov
inc
inc
push
push
data16
push
add
ss
out
div
xchg
mov
inc
inc
push
push
jbe
jbe
pop
add
aaa
xor
out
in
cmc
xchg
xchg
out
gs
jne
add
mov
mov
jg
in
xor
push
push
pop
dec
dec
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
and
mov
rorl
iret
mov
movsl
xorl
inc
add
xor
inc
add
mov
mov
shl
loope
rcll
and
jno
inc
jno
popa
icebp
push
adc
mov
mov
fdiv
test
mov
xor
fs
adc
dec
jno
cs
icebp
mov
dec
jp
sarl
repnz
mov
and
push
push
push
pop
jge
cmc
sbb
in
sub
in
sarb
sbb
dec
inc
mov
mov
je
adc
data16
mov
movsl
cmc
out
mov
xor
jno
inc
in
inc
iret
and
add
mov
icebp
icebp
xchg
int
xor
sarl
out
adc
xor
inc
fwait
dec
imul
ret
and
xchg
jmp
sbbb
popa
inc
adc
inc
and
lods
aam
mov
add
roll
adc
pop
or
jo
jne
inc
mov
bound
push
out
inc
adc
icebp
mov
fcomi
mov
mov
xor
jns
dec
add
sub
push
adc
lds
shlb
movsb
in
pop
sbb
cs
adc
loope
mov
test
arpl
dec
add
add
inc
adc
jge
fs
mov
test
mov
mov
fucom
mov
xor
popa
adc
inc
jno
popa
and
inc
add
roll
mov
xor
popa
adc
inc
jno
popa
and
inc
add
lock
orb
mov
mov
pusha
mov
aam
ljmp
sub
inc
addw
adc
and
sbb
inc
jb
adc
mov
sub
rolb
sub
adc
ss
jbe
inc
pandn
enter
and
ss
ljmp
and
in
sub
pushf
xchg
shl
sbb
pop
rorb
mov
in
mov
lea
mov
jae
mov
adc
dec
sahf
and
std
and
jge
cmp
js
fdivl
repz
mov
in
sub
ljmp
std
shl
mov
sahf
popa
mov
nop
testl
cwtl
fwait
pop
mov
mov
jb
arpl
mov
ret
shrb
jge
xchg
imul
inc
jbe
dec
and
movsb
jl
xchg
cmpsl
scas
fmul
imulb
negl
jecxz
cmpsl
dec
sub
mov
shrl
test
jge
lods
cmp
fwait
lret
jle
dec
pusha
lret
pushf
jbe
loopne
movb
mov
sub
mov
movl
shlb
mov
or
mov
cld
vmovaps
loope
ret
xor
idivb
rcl
adc
div
push
sbb
xor
popf
cmc
movsl
add
add
sub
mov
jge
popf
in
jmp
adc
add
dec
sbb
dec
icebp
mov
jae
xchg
lret
pop
add
sub
lods
push
or
pop
adc
cltd
jne
int3
test
nop
cmp
lcall
mov
lret
mov
inc
pop
testl
mov
movsb
pop
shrl
pop
cltd
add
jmp
pop
pushf
jl
push
arpl
jnp
fstps
callw
cwtl
sub
jl
mov
push
adc
cmpsb
dec
inc
cmp
mov
xor
ja
push
mov
jbe,pn
mov
lea
push
adc
insb
push
fstpt
sbb
cmp
imul
cmpsl
inc
fucomi
bound
mov
xchg
push
arpl
dec
jecxz
xor
xor
jo
mov
mov
jns
cmp
dec
jle
testl
or
inc
xchg
dec
mov
jp
les
movsl
push
cmp
cmp
int
add
pop
loopne
cwtl
mov
mov
and
stos
pop
push
cld
pop
dec
mov
mov
jb
or
jno
mov
push
imul
das
in
or
fsubs
xor
test
in
mov
xorb
xchg
call
dec
adc
cmp
cmovns
lret
mov
or
lds
mov
xchg
mov
pop
test
adc
iret
push
pushf
jbe
push
mov
adc
filds
imul
pop
arpl
dec
xchg
hlt
sbb
or
popf
repnz
inc
mov
ffreep
or
orb
cmpsb
add
adc
test
sub
jno
in
xchg
cmp
movsl
stc
pusha
outsb
push
mov
sub
scas
inc
enter
xor
adc
nop
dec
xor
rol
inc
out
adc
xor
jl
jno
nop
loopne
mov
testl
xor
jmp
popa
lcall
xchg
lds
mov
xor
clc
test
xchg
push
fldcw
lret
and
cmp
mov
ds
xchg
in
cmp
pop
mov
mov
pop
mov
testb
xchg
cmp
das
addl
out
out
cmpb
xchg
stc
cs
sub
or
ds
inc
jmp
mov
std
pop
dec
xor
inc
inc
lock
push
or
mov
mov
and
xchg
mov
jle
xor
popa
iret
cmp
jns
test
and
or
test
hlt
stc
aaa
cld
test
subl
aad
xor
sbb
out
fstl
sbb
or
imul
pop
aam
xor
imul
stos
pusha
mov
decb
add
push
xchg
add
adc
lahf
add
mov
push
mov
pop
mov
mov
mov
cmp
frstpm(287
cs
mov
ja
push
test
movsb
dec
int3
push
in
repnz
mov
lahf
mov
adc
fbld
adc
adc
push
cmp
and
adc
push
cmp
out
test
xchg
cmpl
jp
dec
ljmp
xchg
scas
rclb
xor
xchg
and
jne,pt
inc
in
test
and
leave
jae
mov
and
subb
in
xor
push
cli
pop
ret
or
pop
icebp
movsl
adc
rorb
or
push
pop
ds
lock
cmp
xor
push
inc
aam
arpl
out
imul
decl
mov
xlat
lahf
lock
das
cmc
fmuls
xchg
outsb
lea
cmp
hlt
adc
xchg
dec
mov
into
ja
push
inc
sbb
mov
or
adc
mov
sbb
jae
mov
jmp
fstpt
addb
jmp
mov
std
pop
arpl
fs
cmp
cmp
push
bound
add
aas
jae
loop
pop
enter
push
inc
jecxz
out
cmpsl
mov
fisttpl
add
xor
dec
sub
lcall
jg
inc
jb
cwtl
loope
test
fistl
hlt
xchg
cmpsl
dec
push
xor
pop
frstor
pop
and
sbb
push
dec
scas
aam
ud1
std
push
xlat
ljmp
fs
loope
push
mov
stos
xchg
stc
out
outsl
pop
aaa
xor
mov
inc
nop
add
inc
pop
mov
adc
dec
pop
pop
add
sub
lret
loope
mov
xor
les
js
cmp
xchg
mov
xor
sar
dec
enter
cs
push
pop
ds
push
out
enter
mov
icebp
lods
nop
leave
rorl
sub
add
shrb
push
inc
fdivrs
add
inc
cwtl
cmp
addr16
push
inc
mov
sbb
sub
arpl
jmp
nop
pop
movsb
cmc
and
mov
sub
sarb
icebp
or
in
add
fidivrl
jns
fdivrs
andps
inc
inc
bt
inc
negb
in
cwtl
jge
adc
mov
fcmovnb
shll
scas
lahf
xchg
in
js
imul
int
rcr
adc
mov
data16
ret
shl
lcall
pop
mov
mov
imul
dec
rclb
lahf
leave
push
mov
mov
ds
push
pop
stos
pop
push
cld
sbb
mov
xchg
adc
bound
add
cmp
and
testl
mov
out
jbe
pop
xchg
xor
cmp
sbb
leave
aas
xchg
insb
clc
fnstenv
test
mov
mov
xchg
mov
testl
movsb
ret
das
ljmp
aaa
pusha
jb
movsl
inc
arpl
loope
dec
popa
or
lret
out
arpl
cmc
push
fwait
or
insl
and
addb
jle
push
jp
rolb
jmp
push
mov
pop
inc
lret
cltd
sub
mov
sarb
pop
addr16
fnstsw
cmpsl
or
outsl
push
rcll
pusha
add
jns
addr16
notb
repz
xchg
pop
push
stos
dec
push
add
mov
sbb
mov
mov
in
push
cltd
ds
movsl
or
push
add
jle
iret
adc
xchg
ja
rolb
mov
mov
lods
popa
pop
call
fcmovnb
iret
pushf
or
sub
mov
cmp
repnz
addr16
push
lock
sbb
jg
push
lret
int
lret
cwtl
pop
jl
inc
pop
xchg
lret
lock
cmp
in
icebp
imul
and
insb
cli
and
push
add
adc
movw
push
aaa
xor
repz
mull
pop
jns
outsl
and
push
xlat
arpl
mov
cmp
inc
mov
sahf
sbb
scas
clc
fnstenv
mov
es
fisubrs
aaa
inc
jecxz
insb
cli
movsl
mov
xchg
dec
jne
loopne
repz
nop
aam
dec
lahf
cmp
divb
xor
loope
sbb
movsl
jne
test
out
jp
mov
or
sub
ret
lahf
iret
mov
lcall
pop
movd
jg
sub
jg
fwait
mov
mov
sub
sbb
scas
clc
jbe
sbb
in
mov
sti
xchg
add
int3
pushf
insl
outsl
sbb
mov
arpl
jg
std
sti
xor
push
cmp
cmp
mov
outsb
xchg
push
push
mov
add
jecxz
xchg
fidivs
mov
int
xchg
aaa
mov
xchg
fucomip
mov
sbb
push
mov
pop
test
xchg
es
das
sbb
xor
iret
jbe
cmp
leave
lds
aas
clc
stos
lods
stos
mov
mov
add
mov
adc
into
or
movsb
sahf
imul
rol
daa
fadd
fld
movsl
jo
and
mov
fs
sub
sbb
stos
mov
ret
dec
mov
fmull
sbb
sub
out
sub
or
movsb
fwait
push
add
stc
andl
test
popl
add
xor
insl
jo
dec
incl
popa
aam
or
out
jmp
or
in
fcompl
stos
or
cmc
mov
fwait
or
inc
out
add
cwtl
jmp
ficompl
pusha
pop
sub
push
aad
jae
stos
cmpsb
xor
inc
out
dec
pop
cwtl
les
lahf
imul
adc
mov
ds
jecxz
popf
ljmp
das
add
xor
pushf
in
xchg
sbb
adc
pop
inc
push
in
in
jb
mov
je
or
inc
mov
clc
rolb
mov
cs
jmp
es
ror
xor
xchg
cld
push
sbb
mov
xchg
cmp
decb
jmp
subl
pop
int
cmp
sbb
sub
insb
xchg
icebp
dec
fs
divl
pandn
cmp
icebp
and
xchg
push
mov
mov
adc
dec
xor
aam
xchg
cmc
sbb
inc
lret
lcall
inc
addr16
fnstenv
movzwl
lcall
xchg
mov
daa
stc
mov
cmpsb
int3
mov
leave
test
pop
cltd
das
xor
fs
jle
into
jo
mov
jp
mov
movl
and
popf
lahf
mov
push
subl
leave
push
daa
add
js
frndint
xchg
ss
add
rorb
out
inc
or
push
cmp
rol
insb
mov
mov
outsl
mov
mov
insb
out
loopne
dec
sbb
loope
xchg
pop
repnz
int
mov
lcall
mov
je
or
mov
addr16
sub
pop
xlat
ffree
mov
sbb
fld
dec
pop
and
mov
pushf
in
xor
fstps
mov
pop
or
into
mov
shlb
sub
cltd
inc
loopne
sbb
lds
jge
xor
pop
mov
adc
and
scas
call
jl
addr16
ljmp
data16
or
or
testb
je
cmp
mov
add
ja
ret
and
push
loope
iret
fistps
insb
mov
in
test
xchg
test
jp
mov
inc
insb
sub
push
movsl
into
aaa
pop
in
inc
push
cmp
jo
push
inc
lret
fwait
inc
inc
mov
lcall
int3
or
ret
clc
mov
aas
movsl
mov
pop
xchg
in
fcoms
mov
out
cmp
lods
inc
or
dec
inc
cmp
std
hlt
test
push
les
clc
sbb
inc
pop
sub
push
std
stos
mov
fistps
incl
lcall
sub
sub
jg
mov
mov
jle
push
enter
in
call
inc
cwtl
cmpsb
icebp
in
stc
lock
dec
xor
in
rcl
jmp
and
lock
loope
push
xor
dec
xchg
push
fiaddl
push
lods
je
repnz
ret
cmp
push
ret
clc
push
repnz
mov
or
dec
ss
mov
out
xorl
aad
jae
pop
in
jg
rclb
push
sbb
adc
jnp
fdivrl
cli
or
xor
mov
pushl
jno
out
ja
lock
jmp
cld
push
or
iret
mov
dec
xchg
sub
lret
out
mov
arpl
adc
jle
add
xchg
jae
add
mov
sbb
sbb
repnz
xor
mov
bound
push
cld
mov
fmull
inc
jnp
jmp
pushf
mov
add
fucomi
jp
insl
gs
adc
scas
adc
shrb
in
mov
push
jle
negl
mov
ret
int
mov
gs
imul
daa
jo
in
mov
and
iret
sti
scas
sahf
cli
int
inc
call
and
cmp
dec
jae
rcrl
lods
add
in
xor
out
xchg
mov
test
push
hlt
and
dec
loopne
mov
popf
and
pop
leave
xchg
mov
cmp
dec
bound
lds
cld
and
jecxz
jns
mov
ljmp
add
ror
mov
seta
xchg
lods
andnps
cmp
loopne
shrb
jmp
test
imul
stos
sub
fldcw
cmpsl
add
js
pop
jle
dec
sub
cwtl
neg
and
lahf
xor
sbb
out
je
mov
test
add
jg
mov
jecxz
bound
das
lea
jle
sti
das
fistpl
int
sbb
mov
movsb
push
test
mov
jecxz
xor
gs
pop
stc
popf
xchg
jmp
scas
adc
in
sti
inc
loopne
add
mov
fldl
clc
mov
shl
and
pop
jns
and
jecxz
lea
fmull
add
or
movsb
dec
mov
and
add
mov
or
dec
mov
sub
pop
jb
addl
loope
adc
mov
push
data16
negb
add
adc
mov
repz
mov
shlb
mov
daa
jae
sbb
movb
push
scas
sbb
lock
push
testb
sbb
scas
pusha
cld
loope
add
aaa
sbb
inc
and
xchg
dec
stos
pusha
push
in
adc
unpckhps
dec
sbb
sub
aad
pop
call
dec
aas
jns
ja
repnz
xchg
mov
insl
cmp
mov
fs
std
push
mov
ja
cld
mov
roll
in
and
call
leave
push
mov
inc
test
repz
fsubl
test
outsl
mov
xchg
or
je
and
int
lods
cmp
add
cld
adc
sar
pop
sbb
out
fucomi
mov
pop
ficomps
emms
jns
push
stc
cmpsb
lock
pop
pushw
pop
movsb
test
test
push
aaa
and
sbb
adc
cmpsb
jge
scas
or
daa
out
in
xchg
test
jnp
imul
xchg
sbb
xor
pushf
mov
decb
cmpl
push
mov
fmull
sbb
sub
dec
movsl
repnz
in
iret
cmpl
cmpsl
scas
mov
dec
mov
mov
out
loop
mov
xchg
mov
sub
outsb
aaa
test
subl
clc
push
test
daa
push
das
mov
sti
jns
bound
sarl
test
repnz
adc
es
mov
out
cmp
cmp
pop
ret
orb
loopne
scas
sahf
shrb
stos
stos
test
and
movl
iret
xchg
lea
neg
mov
xor
cwtl
add
out
lods
test
mov
mov
sbb
mov
lock
push
add
iret
fs
int3
jmp
cmpsb
pop
das
or
fistpl
dec
mov
mov
xor
push
popf
cmpsb
mov
push
js
sub
lock
subl
stos
js
mov
jns
lahf
inc
iret
or
das
js
jb
or
lds
lret
rolb
movsb
pop
push
std
sarb
jb
mov
dec
sub
pop
ret
pop
mov
mov
xor
lret
arpl
mov
fs
hlt
push
mov
adc
stos
bound
inc
mov
dec
add
out
cld
mov
out
clc
xorb
inc
cld
mov
jo
pop
inc
stc
mov
cmp
mov
mov
loope
lcall
pusha
dec
and
fdivl
adc
leave
dec
stos
cmp
sbb
fwait
or
mov
dec
daa
bound
pop
popa
push
adc
jp
shl
cmp
test
cltd
aas
or
das
scas
add
nop
sbb
fiadds
aad
icebp
xor
popa
or
dec
out
outsl
popa
ljmp
push
scas
mov
xor
pop
in
push
jb
xor
ljmp
outsb
jb
jae
test
jg
loope
enter
in
ss
sub
mov
addl
lret
mov
inc
dec
neg
lods
test
shrl
adcl
pop
bswap
lods
jnp
mull
xor
enter
shr
mov
test
mov
fdivr
add
jl
cli
inc
outsb
pop
movsb
mov
es
jb
mov
push
cmp
cmc
aaa
jns
xchg
or
mov
lds
mov
push
cltd
dec
into
sub
inc
cwtl
cmp
test
and
sub
rcrl
push
int
push
je
jno
out
jae
add
adcl
xchg
xor
ja
imul
lcall
mov
sub
pop
insb
icebp
repnz
dec
mov
fcomp
mov
or
mov
and
cs
es
mov
mov
sub
loop
xchg
fstpl
movsb
std
loop
jmp
into
mov
popa
xchg
lods
cltd
rcrb
adc
ret
or
repz
loopne
out
sbb
jecxz
ds
pop
cmp
and
add
push
sbb
jmp
outsb
mov
jbe
sbb
mov
stos
add
xchg
adc
pop
in
and
jecxz
and
or
ss
inc
insb
in
jg
sub
test
lret
dec
adc
jmp
aam
lods
inc
adc
int
rol
adc
popl
cmp
sbb
jmp
in
inc
lret
mov
mov
pusha
sub
xchg
sbb
cmp
call
out
add
fisubl
adc
mov
jmp
jl
adc
cmpsb
xor
repz
out
push
or
hlt
in
fyl2xp1
lcall
jge
jl
int
inc
inc
aas
sahf
loop
adc
mov
rorb
xchg
das
int
mov
outsb
mov
adc
push
sub
in
aad
int
movsl
pop
adc
cmc
mov
cmpl
into
testl
push
call
mov
mov
jo
and
inc
push
adc
xor
or
dec
mov
clc
subl
adc
in
mov
and
fucomi
clc
inc
mov
movsb
mov
xchg
xor
out
xchg
ss
loopne
mov
aam
in
aam
mov
stc
sbb
roll
call
jns
mov
inc
cltd
jne
pop
and
pop
dec
dec
lahf
push
add
in
push
icebp
lds
fildl
push
jge
js
push
aas
and
cld
adc
test
icebp
les
fildll
mov
in
rolb
outsl
xor
scas
je
inc
in
aam
fwait
fs
popa
lods
xchg
push
xor
dec
aas
enter
dec
std
jl
stc
repz
shll
shlb
arpl
mov
shlb
adc
mov
lret
mov
or
xchg
rorb
cwtl
int
aam
mov
mov
mov
add
pinsrw
imul
pop
popa
or
pusha
lods
jno
mov
lods
insb
notb
jo
xchg
daa
inc
push
and
mov
into
insb
mov
mov
push
mov
cmp
lret
xor
mov
test
pushf
inc
aas
add
fiaddl
pop
push
push
jo
mov
stos
xor
in
pop
call
or
inc
mov
xor
popf
mov
mov
mov
iret
lods
lcall
cmpl
shl
loope
rcll
and
push
add
xor
push
adc
mov
mov
shl
loope
rcll
and
push
add
xor
push
adc
mov
mov
shl
loope
rcll
and
push
add
xor
push
adc
mov
mov
shl
loope
rcll
and
mov
mov
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
mov
out
lret
out
inc
mov
cmp
dec
pop
pop
dec
push
push
out
sahf
lcall
into
ljmp
push
dec
aas
cmp
or
pop
dec
push
jp
xor
bound
hlt
cli
out
outsb
push
cmp
and
sub
sbb
sbb
rcl
stos
in
ror
into
fisubl
xor
shr
dec
popf
sub
jne
mov
pop
cmp
jle
data16
data16
sub
aas
and
into
pop
inc
addr16
fs
push
outsb
icebp
scas
rol
mov
push
adc
je
fisttps
insb
lods
imul
and
sbb
aas
cmp
rcrl
pop
jb
repz
mov
dec
stos
push
clc
xor
idiv
push
or
sbb
scas
clc
les
imul
outsb
jne
xchg
jno
inc
daa
mov
popa
scas
jno
sub
cltd
sbb
sarl
or
jbe
jne
pop
cwtl
stos
add
xchg
xor
je
cmp
mov
dec
or
push
jns
rcrl
mov
into
ljmp
push
pop
or
add
dec
pop
jle
sub
sahf
call
out
movsl
cltd
mov
sahf
fwait
cli
lcall
pop
pop
cmp
xor
add
or
bnd
fdiv
fcmovne
mov
test
dec
jl
pop
inc
jl
cmp
cmp
fcomip
fucomi
cltd
in
fcmove
ljmp
push
sub
cmp
dec
pop
pop
dec
push
jp
mov
mov
into
ljmp
push
sub
cmp
dec
pop
pop
dec
push
jp
mov
jp
add
ret
xchg
xchg
dec
mov
fsubrs
pop
dec
mov
xchg
popa
cmpsl
xor
sbb
pop
inc
out
iret
cmp
faddp
stos
cwtl
push
sbb
es
fcomps
repz
iret
cmpsl
xchg
dec
gs
subb
test
scas
mov
and
mov
out
add
cld
or
cmpsl
mov
inc
lret
negl
mov
imul
mov
out
popf
iret
pop
push
sub
notl
out
push
or
mov
push
notb
mov
push
mov
aaa
cltd
cmp
sbb
stos
cwtl
repnz
lcall
cmc
adc
sti
push
add
in
ret
out
sbb
add
fstpt
cmp
mov
pop
jb
aas
test
mov
pop
mov
pop
negl
subl
imul
les
mov
aad
lock
lret
pop
fcmovu
pop
test
or
in
ja
or
std
mov
add
in
add
sarb
dec
mov
aas
pop
dec
mov
repnz
inc
test
fimuls
leave
sub
mov
mov
std
popa
sub
out
mov
xchg
nop
inc
jo
and
sbb
icebp
and
cwtl
into
scas
add
or
scas
add
lods
and
xor
inc
adc
sbb
outsb
inc
mull
scas
add
xchg
ja
movsb
push
pop
dec
movsb
cmp
stc
lods
pop
lods
xor
loop
lret
adc
insb
and
lret
xchg
pop
and
lret
jecxz
rcrb
pop
push
adc
aam
pushf
and
lock
jle
sbb
add
xor
and
aaa
cmp
shrb
lret
jae
adc
and
xor
cmp
xchg
mov
sti
sahf
pushf
lods
stos
or
jbe
xchg
pop
pushf
cli
dec
sbb
and
sub
insl
testl
int3
test
pop
das
inc
cmpl
lods
lods
and
inc
data16
mov
test
push
mov
popf
jp
xchg
je
rorb
dec
adc
gs
mov
fcomp
or
sub
push
push
mov
jno
test
test
or
icebp
lds
loope
push
sub
fsubrs
mov
lds
push
test
and
addr16
and
pop
dec
je
mov
rorl
andb
shlb
adcl
adc
jno
pushf
in
and
stc
outsb
inc
cltd
pop
int3
pop
fs
add
sub
inc
add
stos
stc
xchg
pop
xchg
xlat
cs
in
cmp
xlat
jge
jmp
sub
mov
mov
pop
xor
rolb
jp
push
xchg
int
pop
int3
test
sbb
js
mov
arpl
cmpsb
xlat
lock
jne
cmp
pushf
outsl
imul
xchg
pop
movsb
ss
lods
push
jmp
jecxz
shlb
test
lods
pop
int3
mov
add
add
xchg
xchg
scas
ret
pop
sahf
daa
jb
push
jne
xchg
loop
movsl
fbld
repnz
inc
xor
leave
or
and
cmp
insl
je
sar
call
bnd
mov
stos
loop
sub
push
add
cwtl
or
cld
test
mov
xor
fnclex
test
inc
lea
jno
ja
push
popa
push
mov
mov
and
jae
mov
loope
pop
icebp
aaa
ljmp
sbb
aaa
sub
push
lea
ljmp
pushf
sbb
sahf
adc
gs
into
add
jmp
inc
mov
mov
mov
cmc
imul
push
inc
fs
rcr
pop
push
sbb
mov
es
js
incb
sbb
icebp
push
in
testb
mov
adc
test
out
xchg
xchg
stc
push
xchg
adc
pusha
mov
in
test
arpl
stc
mov
int3
jo
fs
jae
push
pop
inc
sbb
jbe
dec
insb
int
add
out
icebp
cmp
adcb
and
adc
dec
out
fidivs
pop
into
sahf
mov
data16
mov
inc
push
out
ljmp
jo
mov
into
aaa
aaa
push
cld
sub
jle
cld
aad
into
jnp
das
xchg
dec
lahf
pop
xchg
out
dec
fmull
jp
jecxz
push
cltd
mov
jg
push
enter
jp
out
inc
jae
push
adc
fildll
push
out
test
or
loope
mov
stos
jbe
mov
gs
int
rorl
lret
dec
inc
jle
rcrb
dec
adc
ficoml
add
enter
jno
mov
xchg
lcall
xlat
adc
and
fcmovnbe
adcl
dec
xchg
out
clc
pushf
jnp
dec
jb
mov
mov
and
jl
into
or
mov
cmpsb
in
mov
or
out
pop
pop
jg
mov
lahf
jb
xor
or
lods
test
xorb
lcall
aad
pushl
fs
fstpt
in
mov
icebp
hlt
adc
add
mov
and
fadds
jmp
add
xchg
out
sub
push
cmp
mov
in
arpl
test
xor
mov
jno
add
subl
xor
ret
popa
fdivl
imul
sbb
pop
xor
fiadds
ds
fwait
mov
mov
push
jmp
xchg
repnz
int3
lret
mov
jg
cmp
stos
push
pop
sub
adc
xor
stos
mov
pop
xchg
mov
mov
push
fstpl
jbe
stos
out
inc
xor
add
repz
push
pop
and
sbb
rcr
test
outsl
sbb
pusha
ljmp
imul
mov
dec
rclb
loope
mov
mov
adc
jnp
in
mov
jns
dec
cmpsb
add
dec
push
rcr
cmpsl
jns
xlat
xlat
mov
xchg
icebp
xchg
dec
jl
movsb
rcrl
dec
add
adc
sti
push
mov
movl
in
jle
jle
clc
sbb
push
mov
jmp
sub
and
ffreep
cmp
sbb
repz
aam
sbb
or
mov
icebp
push
push
or
mov
xchg
mov
or
les
lret
xor
imul
and
mov
sub
xor
sub
aas
lahf
xchg
sub
lods
loop
stos
test
cld
mov
add
jge
repnz
rcl
pop
dec
xlat
jecxz
cmpsb
sub
lret
push
or
fisttpll
out
dec
out
decl
jle
std
adc
rolb
cwtl
xchg
int3
dec
lea
adc
jae
xor
fcmove
dec
cmpsb
jmp
inc
shrb
icebp
xchg
in
mov
inc
push
ja
sub
jecxz
sarl
and
imul
roll
andb
mov
orb
sub
or
cltd
mov
icebp
sub
jns
ja
cmp
scas
jge
mov
jbe
imul
xchg
cli
mov
cwtl
jnp
hlt
jle
arpl
xchg
mov
cmpb
cmp
mov
cmp
jns
xor
loope
adc
imul
inc
and
inc
inc
xor
jl
xchg
and
push
sub
pop
inc
dec
stos
pop
aas
repnz
cltd
mov
cmp
sub
push
out
mov
fldl
dec
fidivrs
push
jbe
fnstcw
arpl
insb
sub
imul
popf
push
aad
adc
push
push
add
popf
cmp
insb
por
daa
test
dec
lret
or
xchg
out
js
push
xchg
pop
or
xchg
std
mov
jne
pusha
jne
popf
xchg
in
mov
dec
in
xchg
test
shll
adc
sahf
jle
xchg
movl
jl
xchg
jmp
mov
inc
mov
js
mov
push
movsb
sub
mov
mov
pop
cmc
mov
dec
pop
xor
nop
xchg
mov
out
pusha
xor
adc
cmpsb
mov
loopne
sarb
andl
pop
push
iret
fdivrp
dec
xchg
adc
js
dec
mov
stos
ss
insb
cmp
outsb
rorb
lret
daa
pop
push
lahf
lods
lcall
push
inc
jne
push
and
add
cs
mov
jns
enter
jnp
std
adc
sub
hlt
push
pop
test
mov
mov
je
ficoml
xchg
inc
sahf
xor
sub
or
pop
sbb
pop
fs
adc
add
jae
pushf
popf
loope
xor
pop
es
lds
clc
cmpsl
or
sub
or
lods
mov
sti
or
push
pusha
flds
push
add
jecxz
rcl
outsb
cwtl
std
subb
es
scas
fildll
rorb
mov
add
cmpsl
loop
pushf
mov
or
mov
adc
xchg
leave
mov
iret
and
lods
mov
mov
sbb
in
xchg
add
into
mov
sbb
or
sub
add
stos
scas
push
jno
fwait
add
pop
lods
imul
decb
xor
and
sbb
sub
imul
shll
lret
mov
daa
sbb
fstl
outsl
push
jno
fmuls
sbb
fs
sbb
sub
dec
or
mov
scas
int3
lds
and
xlat
jl
andb
lea
adc
dec
sub
mov
add
mov
sbb
xchg
test
inc
xchg
mov
xchg
cltd
ja
daa
dec
test
ds
and
call
mov
out
mov
mov
stos
pop
sub
into
cmpb
mov
cmp
dec
push
mov
push
mov
aad
push
stc
dec
xorl
jns
je
es
add
ffreep
xor
dec
outsb
arpl
arpl
aas
and
out
xlat
and
fs
call
movsw
jmp
sbb
pop
lea
shl
xor
push
push
lods
rorb
in
sub
ljmp
sbb
popa
in
jecxz
xor
lret
xor
ret
sub
dec
dec
std
cltd
jbe
sbb
and
jle
enter
cs
ds
mov
sbb
insl
cmpsl
imul
sbb
add
cmc
mov
sbb
adc
jno
cmpsl
cld
enter
mov
ljmp
inc
mov
mov
test
pusha
jecxz
sbb
arpl
xor
lods
inc
lea
inc
push
xchg
jp
lret
iret
push
sub
mov
push
jae
xchg
jnp
fxch
test
out
push
xor
fists
leave
jae
imul
lret
xlat
sbb
jb
fidivrs
mov
sub
jbe
int3
push
movb
jl
pop
add
call
lock
ljmp
and
jge
fs
pusha
popf
xlat
inc
std
adc
jle
pop
sub
sti
jge
xchg
xchg
repz
aas
mov
dec
jnp
rorl
in
and
jmp
inc
add
mov
dec
ss
xor
ret
and
fstpt
push
in
xchg
cld
and
adc
lret
inc
rclb
mov
imul
int
or
aaa
jnp
jmp
adc
inc
cltd
repnz
in
fisubrs
inc
jnp
add
loopne
movsl
popa
mov
add
enter
jns
sbb
pop
mov
pop
dec
rcl
insl
icebp
jne
push
dec
jb
aam
outsl
push
popf
mov
push
outsb
xor
adc
dec
inc
jp
jmp
mov
jmp
insb
sub
xchg
and
imul
ret
ret
mov
adc
pop
daa
mov
fildll
or
mov
push
and
outsl
rcll
pop
push
stos
and
sub
sub
sbb
rcr
cmp
mov
jle
dec
in
jne
pushf
pop
inc
push
jl
xchg
jl
xchg
in
sbb
mov
mov
addr16
repnz
cmp
in
push
push
ja
test
push
pop
xor
and
jp
out
cmc
dec
imul
inc
loope
or
movsl
mov
out
fwait
push
leave
aaa
ja
fcoms
enter
inc
adc
add
jg
jo
add
sahf
push
testb
add
mov
adc
xchg
fcomip
in
pop
push
fmul
ficoms
stc
loop
adc
fbstp
push
mov
nop
sbb
cmc
orb
mov
xchg
and
or
cltd
outsl
sbb
inc
adc
adcl
insl
dec
es
adc
jne
jp
mov
push
mov
xor
cmc
mov
pushf
mov
stc
mov
fldl
adc
mov
cmp
pushf
dec
out
mov
fnsave
lds
add
and
push
mov
out
scas
data16
xchg
cmc
inc
adc
push
test
pop
rorl
je
pop
inc
xchg
inc
sub
xchg
call
mov
jae
shl
inc
jmp
xchg
sbb
mov
fsubl
and
and
lret
imul
push
out
jnp
push
or
xchg
aas
nop
insl
push
gs
je
fsubs
and
popf
jmp
and
adc
dec
and
add
dec
jae
mov
and
adc
clc
data16
call
movsb
sub
or
push
lds
jge
jge
ja
dec
icebp
add
mov
jo
cmp
push
stc
xchg
int
addl
in
ljmp
test
sbb
bound
xor
adc
call
or
add
push
mov
push
es
fistps
xor
in
int
sub
mov
sbb
add
shrb
je
pop
xor
clc
sbb
sub
or
out
adc
xor
cmp
adcl
dec
pop
data16
enter
enter
push
add
pop
mov
popf
xor
subb
fs
cmp
mov
xor
or
mov
cmpsb
enter
daa
mov
and
mov
les
xor
mov
scas
faddl
rcr
decb
pusha
mov
sti
js
fldenv
mov
xor
dec
mov
out
out
jns
jbe
or
iret
mov
inc
insl
cmpsl
shrb
mov
inc
pop
push
mov
cmp
add
cmp
inc
dec
dec
pop
mov
xchg
mov
les
ljmp
pop
push
adc
mov
push
jl
fidivl
call
jo
pushf
cltd
repz
inc
xchg
shlb
lds
and
pop
js
ret
sub
aaa
cmp
dec
leave
and
jg
das
das
jg
pop
sbb
leave
xchg
jl
inc
ss
pop
sub
pop
fldt
mov
int
lahf
jae
fscale
sub
rcll
inc
push
fisttpll
ret
jmp
add
mov
into
sbb
arpl
test
sub
xchg
cmpsb
dec
jmp
fdivrs
aas
testl
or
je
je
cwtl
ret
dec
in
sub
sbb
fs
in
pushf
lods
lods
popa
in
out
or
leave
fs
or
scas
test
int3
cltd
push
pop
adc
neg
fucomip
dec
jns
lret
or
sbb
xchg
adc
mov
push
dec
push
push
popa
stos
data16
jle
inc
rcl
rorb
idivl
decl
stos
rcrb
pop
cltd
ljmp
mov
adc
ds
xchg
cli
xor
xor
cmpsb
jecxz
insl
stos
jo
xor
mov
pop
int
es
sahf
pop
decb
push
idivl
dec
jecxz
sub
push
cmpb
neg
clc
mov
shrb
ja
jo
not
paddusb
mov
fmull
sub
fistpll
in
ss
xor
enter
int3
pop
fsubl
or
push
out
sbb
ficoml
das
sbb
push
xor
mov
lea
test
sbb
lods
repz
int
pop
xor
mov
enter
sub
js
aam
lret
or
mov
inc
add
xor
pop
push
mov
jae
mov
stc
sbb
mov
xor
push
or
mov
jl
jb
push
stos
cld
subb
imul
xchg
push
test
mov
pop
aam
ret
and
adc
sahf
lea
push
and
add
adc
jp
cld
mov
sarb
outsl
push
ficompl
je
mov
mov
loopne
mov
jg
push
mov
std
cmp
pusha
or
sub
jo
movsl
inc
cmpsl
mov
ljmp
les
ret
add
fstps
imul
mov
pop
xchg
cmpsb
and
es
dec
and
pop
sub
enter
and
adc
fsubs
adc
mov
adc
add
cmp
cwtl
lcall
stos
pop
lods
and
jns
push
inc
dec
mov
inc
out
les
iret
push
dec
test
dec
out
inc
add
out
lret
pop
xor
les
pop
sbb
mov
pushf
test
dec
or
sub
popa
lahf
dec
fbstp
in
sub
arpl
mov
lret
sbb
les
push
clc
mov
xchg
jb
and
imul
iret
js
sub
add
insb
dec
jne
or
xchg
imul
xchg
inc
mov
jge
lea
pusha
pop
sub
dec
movsl
outsb
insl
mov
or
fs
mov
push
aaa
lock
pop
movsl
mov
cmc
in
ljmp
dec
mov
add
cwtl
or
pop
iret
jne
cmp
lods
jle
ds
push
scas
hlt
mov
mov
cltd
and
outsb
pop
movl
pop
ja
dec
inc
aam
jnp
sahf
mov
mov
test
fcomps
shlb
push
leave
sbb
and
mov
cli
inc
mov
scas
mov
cmpsb
jbe
mov
fdivrl
imul
pop
popf
js
xlat
jg
in
jge
xchg
scas
sbb
mov
mov
lret
xor
cmp
roll
cwtl
adc
cmp
push
add
sahf
fwait
and
xchg
ret
call
mov
inc
mov
push
lods
das
inc
mov
mov
cmpsl
pop
adc
pop
call
jno
pop
inc
scas
mov
inc
nopl
loope
xor
shrb
and
pop
cld
jb
add
outsb
mov
jbe
jecxz
test
push
pop
xchg
ret
fmul
outsb
scas
iret
add
mov
sbb
adc
inc
pop
vxorps
in
sahf
and
gs
out
or
inc
jecxz
dec
shufps
pop
xchg
jns
inc
loop
lods
sub
les
xor
lea
mov
test
pop
or
lret
lcall
rol
add
mov
mov
cli
lcall
push
loop
jae
or
repz
arpl
cmpsb
insb
imul
lret
je
xor
jbe
jo
rclb
mov
je
jmp
xchg
fmul
pop
cmp
push
jbe
lods
shll
pop
call
lcall
xchg
outsl
ljmp
xor
idivb
ss
jle
cmp
scas
mov
xchg
dec
cmp
addr16
pop
mov
xor
cwtl
fsubrl
fdivs
pop
mov
sbb
out
cli
and
clc
xor
in
xlat
jp
add
ret
or
push
push
xorl
mov
test
fwait
xor
stos
ss
cmpsb
sti
pop
test
fstl
push
dec
sub
das
jle
mov
mov
test
das
shrb
or
cmp
sbb
pop
pop
in
mov
xchg
xchg
adc
jl
xchg
sbb
dec
jo
add
xor
addr16
mov
std
fs
clc
int3
pop
mov
mov
in
sbb
mov
sub
sbb
aas
xchg
mov
lret
enter
cmc
divl
jl
pushf
insb
adc
push
push
mov
or
lods
stc
sub
adc
or
rorb
jnp
and
test
sub
mov
pusha
adc
jl
pushf
loope
out
std
inc
add
cmp
add
push
dec
mov
jae
aas
or
and
int3
ret
xor
stc
je
sub
or
or
out
sahf
cmp
jae
and
js
lods
ljmp
add
cmc
icebp
sbb
push
test
aaa
lcall
test
mov
int
imul
ficompl
xchg
test
push
lcall
mov
test
mov
inc
movsb
pop
repz
pop
stos
inc
in
mov
add
daa
stos
sbb
stc
mov
xchg
sti
arpl
dec
loope
lahf
jmp
jae
sub
mov
fcmove
ljmp
push
sub
cmp
dec
pop
pop
dec
push
jp
mov
mov
into
ljmp
push
sub
cmp
dec
pop
pop
dec
push
jp
mov
mov
into
ljmp
push
fidivrl
cmp
dec
pop
dec
dec
push
xchg
outsb
sahf
sahf
mov
mov
lret
jp
or
in
cmpb
pop
cmp
addl
jg
pop
or
jl,pn
aas
mov
out
mov
sti
jmp
fldt
sub
outsl
or
packssdw
pop
das
dec
aas
mov
out
mov
sti
scas
lret
mov
sbb
jg
packssdw
pop
das
dec
aas
mov
lahf
out
sti
fstpl
mov
sbb
bound
mov
rcr
roll
test
mov
xor
jbe
inc
aam
in
testb
and
mov
lods
dec
jmp
lea
inc
mov
inc
adc
pop
mov
mov
mov
push
aas
cli
pusha
lods
pop
push
lret
mov
fsubrs
imul
xchg
lar
dec
outsl
dec
cld
es
je
stos
fsubr
iret
and
sahf
push
mov
dec
loopne
rol
imul
inc
imul
scas
lret
out
pop
lret
and
or
loopne
jmp
pop
mov
imul
lcall
jo
imul
mov
sbb
jg
packssdw
pop
das
dec
aas
mov
out
mov
sti
jmp
fldt
dec
mov
dec
cmp
pusha
add
xor
iret
dec
lret
mov
into
xchg
jge
stos
out
sub
pop
adc
push
push
xor
inc
push
aas
leave
mov
mov
mov
mov
mov
mov
sub
outsb
or
arpl
pop
das
dec
aas
mov
out
mov
sti
jmp
fldt
sub
outsl
or
packssdw
pop
das
dec
aas
mov
out
mov
sti
jmp
fldt
dec
dec
xchg
push
inc
mov
xchg
or
jo
test
pop
dec
pop
enter
loopne
les
fdivp
sahf
decb
lahf
fimull
and
scas
inc
outsl
push
dec
fadds
aas
les
add
std
data16
jno
jns
lock
inc
es
fcomi
sbb
xchg
xchg
xchg
in
sub
out
sti
xchg
cmpsb
add
daa
xchg
add
je
sbbl
out
addr16
mov
inc
or
dec
sahf
jp
in
test
lret
test
outsl
stos
cltd
pop
stc
fwait
stos
dec
push
adc
adc
mov
popa
out
xchg
pop
push
mov
xor
cmpl
repz
outsl
cli
pop
ss
test
dec
cli
mov
xchg
cs
push
mov
outsb
dec
stos
shrl
repz
inc
inc
or
xor
int
push
xor
aaa
jae
dec
xchg
xor
xor
adc
popf
notb
into
insb
or
jb
ljmp
sbb
stc
imul
cltd
mov
add
fdiv
or
dec
mov
jmp
rcr
test
sti
jmp
jno
xlat
jl
daa
fwait
outsb
xlat
sub
jp
pusha
loopne
push
scas
call
push
xor
or
mov
enter
lds
xor
cwtl
cmp
xchg
jae
pop
sub
in
ret
loop
sahf
mov
cmpsl
pop
push
aas
sub
sbb
fwait
pop
add
lods
sbb
pop
and
xor
jl
dec
call
mov
das
gs
imul
repnz
inc
mov
rorb
inc
imul
push
cs
ret
in
cli
xchg
push
add
out
mov
adc
insb
push
aas
sti
push
cmp
xor
loopne
nop
mov
xorl
out
fadd
pop
pop
xor
inc
testl
jle
and
data16
mov
sub
cltd
dec
dec
les
inc
inc
cld
mov
test
or
fdivl
cwtl
dec
push
sub
sub
outsb
sbbl
or
dec
lock
ja
push
xor
dec
sbb
cmp
push
and
cmp
cmp
dec
ljmp
pop
push
lods
and
mov
mov
or
insl
inc
ss
add
and
sub
adc
add
or
add
add
rcrb
push
lahf
movsl
aas
leave
xchg
clc
or
lods
call
adc
repz
mov
sbb
jne
push
lcall
bswap
pushf
add
mov
fwait
jg
sub
xor
scas
mov
sub
mov
ss
hlt
adc
lahf
mov
add
inc
loope
xor
sub
stos
inc
mov
bound
mov
ljmp
pop
fnstenv
push
std
xchg
xor
pop
ret
shrl
adc
lds
sbb
sub
xor
sub
fmuls
sbb
jmp
jmp
cmp
jp
div
xchg
jb
in
push
jl
fbstp
pop
add
mov
sub
popl
stos
fsubrl
lea
jnp
mov
std
sbb
mov
push
sbb
xor
sub
insl
lret
push
dec
push
push
movsb
data16
dec
jbe
sbb
xor
mov
fisubrl
out
hlt
adc
clc
lock
je
mov
hlt
inc
jl
rol
mov
jg
xor
push
ret
jp
shrl
outsl
mov
or
cmpsl
mov
or
daa
js
fidivs
xor
mov
sahf
mov
push
test
bound
jp
cltd
lds
sub
and
push
loop
pop
outsl
mov
push
out
pop
leave
mov
xchg
xlat
pop
and
jmp
jnp
adc
pop
jnp
pop
sbb
or
cmp
cmp
mov
push
mov
xor
jae
fiaddl
push
movsb
mov
fstpl
fwait
pop
cli
add
add
jmp
mov
and
pop
fdivr
cmp
ds
test
test
cltd
cld
add
mov
cmpsl
inc
push
cmp
xlat
push
ds
shll
cmp
lods
nop
mov
stos
cwtl
adcb
lret
ds
stc
and
cltd
rclb
or
ret
xor
loop
pusha
or
rsm
into
jg
out
push
hlt
xlat
push
cli
pop
cmp
dec
popf
jns
daa
or
dec
sub
test
mov
add
cmc
xor
enter
test
sbb
push
xchg
push
scas
dec
mov
je
sub
lods
or
sbb
mov
imul
ret
shrl
push
dec
mov
inc
mov
or
enter
and
stos
fldcw
jno
iret
cmpsb
addr16
push
sbb
imul
inc
enter
repnz
aas
sbb
and
push
cmp
cwtl
inc
jae
cmp
cmp
fimuls
data16
dec
jbe
mov
psraw
sti
mov
cmp
test
scas
mov
and
dec
sub
popa
out
adc
push
xchg
mov
jne
testb
lods
fcoml
xchg
push
xor
cmp
js
mov
hlt
repnz
sub
pop
sub
sbbb
into
adc
adc
in
out
into
inc
loopne
out
sub
ret
clc
aam
mov
pop
xchg
sti
adc
fldcw
mov
xchg
and
stos
mov
xor
mov
je
xchg
neg
dec
rorb
jb
es
mov
aaa
dec
adc
add
popf
push
test
hlt
mov
jns
fs
icebp
std
out
fsubrl
out
rcr
jns
lahf
adc
pop
stos
dec
outsb
sub
je
jg
orl
testl
mov
push
iret
pop
mov
fdivs
mov
fldenv
xor
popa
fs
and
cmp
or
xchg
sarl
int3
mov
sub
movups
data16
lret
xchg
adc
jmp
mov
cmpsl
or
dec
iret
dec
pusha
push
sbb
add
xchg
daa
inc
jecxz
and
inc
das
push
pop
mov
adc
mov
xchg
mov
in
pop
aaa
test
gs
rcll
inc
and
jmp
xor
inc
mov
ret
out
jbe
test
cmc
jmp
jbe
cmc
scas
cmp
xor
ja
cs
jae
loope
sahf
pop
in
iret
aad
clc
rorb
sub
inc
xchg
add
lahf
mov
insb
xchg
std
repnz
cmp
inc
iret
pop
jne
xor
into
push
sbb
push
cmp
mov
xor
test
aaa
lcall
ret
popf
sub
push
test
ljmp
mov
mov
mov
pop
inc
jg
bound
mov
aam
jns
add
in
lock
test
fs
test
test
in
jbe
outsl
insb
iret
xor
pop
and
sub
ret
dec
out
jmp
xchg
jecxz
mov
pop
stc
gs
inc
push
imul
xchg
icebp
sbb
and
movsl
adc
insl
jmp
push
mov
test
ljmp
loop,pn
cmp
inc
cmpsb
dec
sbb
arpl
div
gs
push
aad
inc
cmp
xchg
aad
cmp
nop
lds
movl
add
lret
rolb
pop
sbb
into
jmp
push
and
stos
xor
xor
repnz
jge
cmp
notb
mov
xchg
test
cmp
jnp
add
or
pop
and
andb
arpl
psubsb
cmp
in
ficoms
insb
std
das
flds
mov
mov
push
jae
adc
out
dec
jae
adc
and
scas
push
addr16
dec
jb
insl
mov
mov
aad
cmc
xlat
inc
cltd
sub
mov
xlat
inc
inc
pop
iret
push
repz
div
insl
mov
mov
adc
test
lods
test
mov
sbbl
outsb
jne
fwait
jmp
pop
sahf
jmp
mov
sbb
cmp
and
adc
sub
arpl
pop
jg
pop
into
jge
ljmp
fsub
cmp
jle
fwait
sahf
cmp
inc
adc
cmp
cmp
sub
and
or
and
xor
sbb
leave
xor
lds
iret
jo
js
inc
out
iret
push
mov
stos
xchg
push
insb
xchg
std
imull
outsb
repnz
inc
adc
test
dec
and
in
rclb
mov
pop
test
shlb
xchg
xchg
cmp
pop
flds
imul
pop
sub
cs
xchg
fistl
add
lds
cld
pop
ja
jo
popa
adc
jb
shrl
jl
push
mov
lea
or
dec
sub
fwait
mov
call
xor
sbb
outsb
repnz
lods
adc
fst
insb
out
push
gs
pop
inc
lret
sub
mov
stos
mov
mov
test
gs
mov
out
sbb
xor
out
sahf
movsb
ds
std
adc
pop
add
pop
stos
into
ss
aas
jecxz
lret
jle
inc
fdiv
xchg
pop
add
jb
inc
mov
sbb
inc
mov
mov
test
imul
stc
jge
addr16
push
or
mov
add
mov
fistpll
jmp
sub
lahf
int
sub
mov
mov
pop
or
mov
cmp
mov
jbe
mov
lahf
push
and
inc
sub
sbb
jne
add
test
ss
and
vhaddps
mov
xchg
addl
jge
addl
pop
xor
lods
pop
fbld
out
scas
inc
mov
adc
sbb
inc
data16
or
mov
nop
xor
xor
cwtl
cmp
testl
pop
ficomps
cmpsb
jp
inc
std
lret
in
and
dec
pop
js
cmpb
push
cmp
xlat
shll
bound
mov
cld
sbb
mov
jmp
sub
push
and
fcmovu
xchg
adc
jns
jnp
or
push
pop
adc
aam
push
sti
ds
fistpl
add
cmp
lea
scas
xor
stc
or
mov
imul
dec
mov
jmp
and
pop
dec
pop
mov
inc
xchg
int3
jecxz
sub
int3
mov
std
leave
push
fwait
adc
mov
push
sub
cmp
or
xor
push
mov
sbb
mov
scas
addr16
push
push
push
fistpl
jbe
sbb
xor
cmp
test
dec
les
push
rcrl
jecxz
out
into
int3
es
and
cwtl
mov
cli
mov
cwtl
hlt
jmp
cld
stos
popa
ret
imul
sbb
xchg
imul
movsl
xchg
add
addb
sub
add
adc
gs
pop
roll
icebp
xchg
jle
lcall
pop
stc
xor
adc
sub
xlat
sbb
cmp
inc
leave
cld
xchg
lret
les
xchg
jecxz
mov
push
push
mov
add
jno
daa
sub
mov
and
adc
dec
sarb
movsl
rol
std
gs
orl
ror
xchg
insb
fsubrp
mov
and
sub
test
movsl
or
and
xor
mov
mov
mov
lahf
lock
jecxz
xor
push
aaa
xor
movsl
mov
sbb
loopne
dec
fstps
xchg
call
lods
jg
sub
xor
push
inc
fists
xor
lea
jge
imull
call
jge
fimuls
jg
dec
loop
xor
in
xchg
leave
and
mov
popa
jp
cld
sub
cmp
adc
adc
or
scas
cld
sub
pusha
sbb
mov
repz
xchg
shrb
push
dec
stos
dec
lret
or
fiaddl
in
jo
inc
sub
add
or
adc
movsl
aas
in
test
out
mov
cmp
sbb
jecxz,pn
mov
push
add
cmp
pop
pop
xchg
bound
mov
int
pushf
out
xchg
sub
test
inc
jb
jne,pt
scas
ja
idivl
add
xchg
jl
std
inc
test
jne
pop
or
mov
ret
adc
xor
andl
in
shlb
jnp
repz
pop
pop
fdiv
inc
stos
inc
imul
adc
sti
jbe
popf
xor
gs
rclb
push
mov
ja
loop
lcall
xchg
and
jne
and
mov
sbb
mov
loopne
xchg
xchg
lods
ds
mov
jnp
mov
pusha
sub
add
adc
xchg
push
jns
or
sub
or
inc
jecxz
push
scas
inc
insl
dec
scas
push
cld
mov
ja
outsl
xor
aad
lahf
aad
popa
loop
scas
and
stos
cltd
stos
mov
cld
fstps
xor
sub
jmp
stos
in
jo
xlat
inc
dec
xor
neg
rol
mov
and
ds
mov
push
inc
aad
pop
test
xor
dec
mov
push
and
cmpsl
testl
push
or
xchg
fimull
jb
das
scas
in
cmp
pop
mov
and
cli
add
lret
sbb
into
fdivp
jp
leave
mov
dec
orl
and
adc
popf
in
pop
and
mov
enter
push
paddusb
and
lret
sbb
pop
cwtl
adc
jge
and
jmp
ficomps
inc
push
adcb
roll
pop
lahf
jnp
xchg
enter
jmp
das
xchg
adc
ficompl
jnp
mov
sub
xor
mov
sbb
add
test
cs
or
xchg
push
rcll
fs
lcall
pop
mov
mov
std
lret
push
mov
sbb
and
mov
or
lea
das
push
lock
imul
cmp
jns
cmp
cs
imul
xchg
jp,pn
adc
add
push
out
xor
dec
jg
inc
dec
push
pusha
push
pop
add
lcall
adc
sub
push
cmp
cmpsl
adc
mov
dec
push
dec
cld
cmp
int
mov
sub
int3
jae
mov
pop
out
aaa
cmp
lret
mov
std
mov
add
iret
push
mov
pop
out
hlt
mov
negb
fldt
mov
cmp
pushw
jbe
add
jmp
fistpll
xlat
mov
js
push
pop
push
in
icebp
fsubl
in
and
pop
pop
sub
mov
adc
scas
mov
lock
lods
pop
or
xchg
push
push
or
sbb
outsl
pop
imul
cmp
lahf
mov
ret
mov
fdivrl
cmpb
xorl
mov
xchg
adc
adc
cmpsb
aad
sti
xor
outsb
test
jbe
addr16
sub
add
ss
outsl
lret
dec
cmp
loopne
loopne
or
adc
jo
mov
gs
mul
or
mov
mov
test
mov
jge
inc
inc
dec
mov
mov
je
sub
add
outsb
jmp
outsb
cs
pop
cmp
cmp
sub
ret
inc
mov
in
cmp
mov
xor
sahf
mov
mov
xchg
nop
jae
cmp
lahf
jno
lods
ret
hlt
push
popa
pop
xor
pop
lcall
pop
mov
pop
test
sahf
xchg
sbb
rcrl
mov
sbb
ret
adc
or
shll
xchg
shll
jp
in
adc
ljmp
sub
mov
imul
pop
mov
jmp
imul
and
arpl
mov
lods
stos
fisubs
sahf
mov
push
rcrl
push
add
cmc
lds
cmpsl
mov
das
loope
das
imul
push
nop
aas
xchg
or
add
lods
push
lret
shlb
jb
jb
xchg
enter
imulb
rcrl
push
nop
mov
jp
jbe
mov
stc
ror
insb
pusha
repz
or
xor
ljmp
dec
repnz
pop
outsb
loop
adc
sahf
xlat
push
and
aad
or
push
xchg
push
adc
adc
lcall
loopne
nop
mov
mov
inc
cmpsb
aas
mov
pop
insl
push
cmp
mov
xorl
jecxz
test
jns
sbbl
js
int3
gs
pop
or
cmp
mov
gs
xchg
fwait
cmp
testb
mov
das
mov
lahf
and
pop
push
pop
xor
push
xor
xchg
sbb
test
cltd
xor
pop
cltd
imul
pushf
movsb
and
aas
fists
push
lea
jo
icebp
adc
mov
popf
or
daa
adc
out
int3
sahf
sbb
xchg
ja
push
pop
or
and
das
int3
addr16
pop
aam
das
pop
stos
lods
test
hlt
bound
inc
loop
addr16
xchg
fnstcw
test
jge
fstpl
adc
pop
jp
xchg
rcr
ficomps
lahf
jne
lds
jp
lods
cli
imul
cmp
pop
daa
and
mov
pushf
aad
pusha
cmp
imul
or
mov
jns
stos
dec
popf
mov
pusha
cmp
sub
cmpsb
cmp
dec
lods
add
dec
ss
push
pop
in
stos
fucomp
or
push
and
push
jnp
loopne
fcomi
pusha
in
xlat
mov
in
push
and
aaa
shrl
cmpsl
sub
and
push
jecxz
add
and
dec
cmpsb
aam
fstpl
pop
fldl
mov
ljmp
movsb
jae
xor
out
jecxz
fists
adcl
dec
mov
push
ja
mov
push
inc
pop
cmpsl
popf
test
mov
stos
loop
lods
or
push
mov
and
loop
adcl
inc
add
pop
or
lret
mov
ljmp
jle
fdivl
cwtl
xchg
cmc
call
int
icebp
xchg
add
out
xchg
movsl
je
mov
or
mov
jbe
mov
nop
ret
sbb
enter
xor
clc
std
loop
cli
mov
jo
lods
sub
fstpt
scas
or
xchg
push
mov
pop
shrl
dec
call
ds
stos
sub
jge
loopne
nop
push
mov
sbb
fdivr
mov
jo
out
fdivr
mov
adc
filds
andb
cmp
sub
punpcklwd
sbb
sub
fchs
addb
movsb
rorb
mov
in
gs
jnp
sub
adc
lcall
dec
ds
data16
add
imul
mov
in
das
pop
addr16
mov
pop
push
xchg
in
xchg
inc
nop
pop
aad
aas
pop
or
das
js
adc
nop
or
mov
jns
lahf
xor
lret
mov
out
dec
arpl
push
es
scas
push
popf
push
mov
lods
push
cmp
and
andb
and
loopne
outsl
mov
cmp
iret
jp
xor
popa
lock
repz
inc
outsl
andb
add
insb
pushf
lret
mov
mov
push
xchg
call
sarl
fidivl
pop
mov
mov
cmp
push
and
daa
inc
inc
xchg
mov
cmp
movsb
sbb
test
rorb
or
sbb
pop
cmp
xchg
or
test
adc
jmp
and
stos
lods
cli
outsl
bound
xchg
mov
jbe
adc
aam
je
mov
jecxz
pushf
popa
cmpl
push
pop
dec
ljmp
roll
test
push
ret
inc
cmpsl
imul
mulb
and
pop
sbb
sub
sub
mov
xorl
jecxz
out
lock
pushl
jnp
push
out
popa
and
mov
mov
and
cli
or
ja
dec
rcrb
mov
dec
adc
push
lods
add
daa
into
pusha
mov
sub
scas
lds
jae
clc
mov
mov
jge
out
push
stos
ds
and
inc
add
test
out
cmp
fbstp
jb
loope
outsb
adc
in
xchg
in
fcomi
cmp
ret
mov
out
xchg
push
fldt
pop
push
lock
test
clc
loope
insl
bound
cmp
icebp
mov
loope
and
pop
push
xor
arpl
sbb
cwtl
jecxz
faddl
aas
sub
inc
or
outsb
or
packssdw
pop
das
dec
aas
mov
out
mov
sti
jmp
fldt
sub
outsl
or
packssdw
pop
das
dec
aas
mov
out
mov
sti
jmp
fldt
sub
outsl
or
punpckhdq
pop
cs
aas
mov
out
mov
sti
mov
lahf
fisubrl
sub
outsl
or
packssdw
inc
xor
out
mov
and
inc
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
aas
outsb
das
jle
dec
divps
cs
push
mov
into
mov
ljmp
iret
sahf
aas
outsb
das
jle
dec
divps
outsl
ds
push
dec
push
mov
into
fidivrs
scas
out
mov
aas
outsb
das
jle
dec
divps
outsl
ds
push
dec
push
mov
stos
fdivrp
jmp
shrl
outsb
dec
and
and
mov
in
push
aam
sbb
jo
notb
fwait
dec
pop
mov
xchg
pop
ja
movsb
incb
lock
mov
push
sub
pusha
iret
jo
add
out
push
mov
inc
iret
outsl
ss
insb
sbb
sbb
aam
adc
mov
push
dec
and
jno
pop
aas
jnp
std
jne
divps
jp
fiaddl
sub
add
scas
inc
pop
jno
adc
mov
cmp
das
outsl
sub
sbb
popf
push
adc
test
lods
mov
into
adc
clc
rolb
mov
jnp
call
fisubs
jns
lcall
pop
dec
divps
outsl
ds
push
dec
push
mov
into
fdivrp
scas
out
mov
jle
pop
jle
daa
data16
jg
sbb
dec
mov
cmpsb
negl
mov
outsb
dec
jl
dec
arpl
data16
jns
push
ficoml
mov
int
aad
jmp
into
pop
daa
das
sub
xor
outsl
ds
push
dec
push
mov
into
fdivrp
scas
out
mov
aas
outsb
das
jle
dec
divps
outsl
ds
push
dec
push
mov
into
fdivrp
scas
out
mov
aas
outsb
or
cmp
sbb
andb
mov
cmp
pop
push
enter
cmp
mov
or
or
pop
cld
lahf
daa
push
cmp
pop
loop
dec
inc
sahf
and
cmpsb
mov
int
add
dec
sbb
or
and
fiadds
push
xchg
jmp
mov
sahf
outsb
adc
jno
test
add
cli
xor
or
mov
pop
sub
mov
adc
push
inc
xor
out
out
lcall
mov
and
sbb
jno
or
mov
lds
outsb
pop
xchg
cmp
js
aas
lea
sbb
sahf
inc
inc
inc
cs
dec
add
or
inc
jo
jle
mov
clc
pusha
jge
dec
test
int3
mov
repnz
popa
pmaxsw
mov
ds
pop
push
andb
sar
cmpsl
repz
lods
pop
mov
jo
jmp
mov
mov
xor
outsl
jp
ror
xor
push
ja
int
and
shrb
mov
rolb
popf
int3
inc
scas
sbb
es
and
pop
inc
mov
mov
das
add
lahf
jmp
popf
sbb
jns
adc
pop
sbb
scas
xchg
cmp
cmp
inc
lea
in
sub
mov
xchg
mov
jnp
hlt
je
scas
out
add
add
mov
loop
cmpsl
pushf
int3
movsb
out
das
fadds
sub
ficomps
pop
dec
std
dec
push
jb
insb
sub
pshufw
cmpl
icebp
leave
push
loopne
mov
dec
pop
or
scas
add
dec
and
cmp
out
jne
push
xor
sub
cmc
dec
outsb
hlt
sbb
sti
xchg
or
mov
cwtl
push
aaa
aad
mov
adc
shlb
mov
or
in
fisttpl
mov
clc
push
pop
dec
xchg
cmp
xchg
mov
dec
andb
pusha
rorb
stc
and
gs
lcall
jo
lcall
push
pop
aaa
sub
cmp
mov
fucomip
cmpsl
jo
push
aad
jo
push
mov
movsb
jo
lret
ffree
js
mov
jmp
jecxz
inc
jge
pop
mov
into
aad
adc
pavgw
xchg
mov
add
xchg
in
cmpsl
out
jbe
jbe
push
jl
bound
dec
insl
mov
fcmovb
aas
dec
shrl
push
dec
shl
lods
xchg
cli
push
or
rcll
mov
lock
pop
xchg
adc
iret
movsb
mov
jno
out
pop
ljmp
adc
dec
jmp
mov
rcrl
je
mov
or
out
pop
sbb
rcrb
movsb
xor
pop
xchg
xchg
dec
mov
iret
jmp
hlt
jno
cmp
stos
mov
push
sbb
in
andb
mov
pop
or
mov
shll
sbb
cmc
dec
cmp
adc
movb
in
stos
pop
testb
in
fistpl
jb
aad
enter
jge
mov
ret
sub
xchg
cli
cs
add
or
mov
pop
in
adcb
jmp
jne
xor
mov
enter
and
pop
add
fisttps
dec
sub
dec
add
push
je
xchg
psrlq
sbb
jp
ss
jnp
sbb
stos
push
andb
test
decb
adcb
insl
insb
fwait
in
jo
adc
jle
add
aas
sbb
ss
jae
out
mov
lds
sub
push
inc
sbbb
mov
adc
xchg
push
movsb
sbbl
fisttps
cs
and
arpl
mov
leave
fidivs
fcoms
dec
push
loop
cmp
mov
mul
sbb
mov
scas
out
jne
frstor
add
in
mov
and
add
jns
ficomps
ret
rclb
neg
mov
mov
adcb
aad
dec
lods
cmp
ljmp
push
aaa
imul
jbe
mov
pop
xchg
enter
mov
xchg
cmp
mov
jp
cmpl
inc
jecxz
sbb
sarb
xorl
es
lock
fs
lret
int
fidivrs
fs
ljmp
out
mov
ret
fisubrs
sbb
xchg
popa
or
arpl
fnstcw
fs
add
into
inc
jmp
ret
ficoms
mov
lcall
aad
add
or
add
clc
ds
scas
push
xlat
cwtl
lret
jp
movsl
repz
pop
aam
add
ficoms
sbb
enter
pop
aaa
and
or
cld
xlat
jbe
imul
jno
outsl
hlt
inc
out
add
adc
das
mov
mov
jl
xor
cwtl
test
dec
inc
rolb
sbb
iret
in
mov
jno
adc
or
movsb
aas
rcrb
push
cwtl
mov
aas
xor
imull
imul
sub
lods
orl
fcmovu
add
xchg
sbb
lret
in
xchg
fidivl
icebp
adc
jg
add
add
cmpsl
pop
popf
sub
movsb
dec
icebp
mov
je
push
cmc
shld
push
leave
dec
fcompl
out
mov
inc
dec
aad
or
jne
dec
mov
xchg
int
xor
or
mov
addr16
and
ret
out
fwait
xorb
scas
pop
lar
enter
mov
push
divb
cli
int3
mov
pop
sbb
jge
or
lret
out
stc
pop
push
pop
mov
scas
mov
cs
ret
push
cmp
fisubs
xor
test
rcrb
xor
mov
xchg
call
imul
pop
pop
push
out
test
int3
vshufps
pop
out
dec
into
mov
adc
ljmp
pop
shl
push
mov
sub
mov
nop
or
mov
in
adc
push
repnz
lcall
jl
pop
divb
add
mov
and
adc
adc
or
lods
sti
icebp
in
xchg
mov
mov
or
shrl
mov
mov
ss
jns
inc
add
jmp
xchg
les
icebp
mov
lds
test
loope
or
int3
cmp
mov
cmpsl
arpl
addr16
lahf
dec
and
sbb
in
movsb
sbb
push
jnp
inc
mov
xchg
sub
mov
sub
pop
ret
loope
push
sbb
dec
pop
xor
insb
xchg
pusha
add
psrad
add
hlt
bound
ds
push
ja
mov
repnz
out
je
jne
lret
popa
pop
inc
xchg
xchg
dec
nop
cmc
sub
cmp
outsl
loope
dec
popfw
push
cmp
iret
mov
adc
movsb
sbb
jecxz
push
in
insb
leave
iret
ficoml
pop
add
add
and
arpl
ss
mov
mov
pusha
or
ficoms
add
xor
push
pop
mov
adc
add
xchg
xchg
xchg
in
ds
out
adc
aad
push
pushf
imul
add
sbb
sahf
jl
ret
mov
shl
sti
insb
pop
add
and
cld
fcmovnb
xchg
jp
pop
addb
pop
dec
mov
dec
and
xchg
xchg
cmp
xor
lock
loopne
lret
leave
imul
arpl
je
int3
mov
pusha
aad
xchg
js
aad
rorl
aaa
mov
adc
fildll
cwtl
daa
nop
mov
popf
idivl
or
in
cs
test
xor
sbb
out
inc
out
mov
std
mov
xlat
popa
xor
negl
js
inc
je
lret
adc
xchg
sbb
std
insb
mov
jns
inc
loop
xor
shlb
sub
insl
mov
pop
sub
mov
scas
scas
cmp
push
cli
dec
adc
or
lea
test
dec
sub
cmp
jnp
ss
lcall
popf
mov
jmp
ja
insl
enter
sti
mov
pop
mov
mov
fsubs
mov
enter
pop
stos
fldcw
jnp
hlt
xchg
iret
repz
dec
inc
call
ds
insb
sub
out
sub
jg
clc
push
sub
jle
cmp
xchg
neg
xchg
or
ficoms
pop
outsb
repz
cs
xor
shl
sti
inc
jp
stc
cmp
popa
pop
test
jecxz
xor
sbb
inc
cmp
insb
jg
mov
test
movsb
jnp
jbe
dec
int3
mov
push
inc
inc
fsubrp
loop
xchg
fisttpll
ss
xor
inc
mov
adc
outsb
jecxz
fstpl
mov
jo
dec
test
cmp
repz
insl
mov
inc
mov
orb
and
xchg
cmpsl
inc
stc
addb
xor
mov
adc
ja
xchg
insl
out
lret
pop
lcall
pop
cli
cmpsl
inc
push
push
mov
adc
ret
cmp
jge
sub
lea
mov
sahf
mov
ds
ss
xor
js
cwtl
jne
lds
push
addl
jnp
out
icebp
sub
stos
sub
pop
icebp
and
ret
add
mov
sub
addr16
out
cmp
mov
clc
int
test
xlat
mov
push
xchg
loope
xlat
dec
mov
mov
in
into
ror
sahf
push
sbb
sbb
ss
cltd
loope
mov
push
mov
dec
sbb
or
sub
cmp
mov
shrl
mov
pop
or
or
clc
out
and
enter
int3
bound
mov
lret
push
addr16
pop
xor
push
cmp
sti
mov
out
inc
cmp
and
inc
pop
inc
jbe
jnp
inc
lds
jns
cs
loopne
xchg
pop
jecxz
fadd
aaa
and
add
push
stos
dec
lret
nop
lahf
imul
ficomps
sub
inc
sar
std
addr16
arpl
dec
xchg
enter
scas
push
cli
jb
mov
dec
sbb
jb
mov
cmpsl
out
mov
or
and
push
mov
mov
add
sbb
ja
ss
xchg
mov
mov
push
ss
ja
push
ljmp
sbb
mov
jns
ss
pop
out
scas
outsb
test
push
push
add
inc
and
mov
fbld
cmp
jno
cmp
sub
push
imul
test
imul
pop
mov
faddl
mov
stc
add
cmp
enter
inc
loope
hlt
insl
mov
out
mov
std
sub
jg
mov
push
pop
or
div
adc
dec
cmpl
cmp
fildl
fwait
inc
mov
aaa
jmp
iret
je
orl
repz
mov
xchg
mov
xor
mov
in
ljmp
xor
inc
sbb
cli
add
stc
mov
cld
bound
push
pop
sbb
jne
push
sub
push
rcll
les
xor
sti
lahf
cmpsl
pop
addr16
into
les
jnp
add
sbb
pop
jp
insb
sti
sub
jp
out
push
out
push
sbb
inc
lods
cmp
add
loopne
fsubs
inc
out
cmp
mov
fstps
ret
sbb
shll
push
jbe
aam
test
aaa
adc
cmp
cmp
lea
mov
pop
add
jecxz
mov
bound
vmread
sub
movq
mov
fwait
enter
out
bswap
fsub
mov
sbb
out
cmc
ja
mov
xchg
in
data16
jecxz
out
pop
rcll
out
push
stc
in
test
stc
popf
mov
inc
int3
jl
pop
pop
addr16
shrl
jns
cwtl
xchg
pop
rolb
xor
out
cmp
out
push
cld
popf
test
ds
insl
jle
std
test
cmc
jbe
sub
add
xchg
and
leave
fldcw
sub
fsub
test
cmp
adc
dec
cmp
repz
xor
mov
add
cmp
dec
sub
nop
xor
jmp
out
push
jb
cmp
test
jmp
or
gs
push
inc
push
adc
stc
lods
push
aam
push
or
pop
jl
dec
mov
xchg
inc
leave
add
in
shll
out
sub
mov
or
jae
xchg
cli
mov
and
jno
imul
stos
sahf
cli
and
mov
jo
das
iret
xchg
jecxz
enter
cltd
adc
ss
and
mov
scas
cld
mov
mov
test
mov
sub
dec
rcrb
inc
and
fwait
scas
sarl
cwtl
xchg
push
pop
pop
pop
sbb
cmpl
inc
lods
jl
push
jae
dec
pushf
xor
jg
sarb
jg
bound
xchg
fs
shrl
mov
pop
xchg
mov
lods
arpl
dec
add
test
pand
pop
scas
cmp
adc
adc
cmp
dec
int
mov
shlb
out
sbb
xchg
mov
int
inc
fs
mov
ret
mov
mov
pop
int
mov
add
mov
imul
mov
dec
push
cmpsl
rcrb
test
dec
inc
pop
jecxz
fsubr
mov
and
sbb
fstp
jns
push
pop
push
popa
int
dec
test
inc
popl
dec
repnz
xchg
cmp
jnp
push
stos
and
sbb
loopne
lea
xchg
bound
inc
in
dec
int3
out
lea
pop
cmovbe
jl
test
xor
imul
push
pop
loope
fs
push
dec
fadd
mov
imul
xchg
lret
push
mov
push
mov
pop
add
xor
xor
sub
mov
add
sbb
clc
inc
pop
cltd
ljmp
xchg
call
lods
int
pusha
inc
adc
dec
lcall
push
shlb
xorl
cmp
and
mov
inc
jns
xor
push
int3
fdecstp
lret
ja,pn
adc
fldl
inc
sub
jmp
dec
hlt
jge
fcmove
pop
loopne,pt
add
mov
jb
cld
mov
xor
inc
call
fists
adc
test
cmc
dec
xchg
or
fnsave
add
pop
push
jno
out
mov
ficompl
imull
cmp
push
out
unpcklps
lcall
fisubs
jl
jb
mov
jno
fwait
test
leave
clc
je
stos
xor
data16
shlb
call
ljmp
xchg
insl
into
pushf
cmp
xorl
and
jo
sub
dec
rorl
sub
int
rcll
xchg
xchg
jae
jns
aam
jge
loopne
std
sub
roll
jne
imul
pop
inc
push
iret
jmp
mov
fstpl
lahf
rolb
out
fiaddl
jmp
int3
jg
insb
leave
rcrb
xor
lea
ss
fisubs
pop
ljmp
sub
jle
push
cltd
pop
in
mov
and
in
sbb
push
xchg
add
adc
sub
cld
jae
pop
movsb
popa
push
sub
mov
loop
push
rclb
push
add
insb
dec
iret
push
lock
sar
mov
psraw
das
fnsave
push
jno
fidivrl
jno
bound
incb
xor
mov
xchg
xchg
ficomps
cs
jge
inc
pop
test
push
clc
pushw
sti
sbb
mov
cmp
fldcw
ss
sarl
mov
sbb
outsl
icebp
jns
call
mov
andl
sbb
jmp
inc
out
sbb
icebp
or
addr16
mov
cwtl
sahf
jns
fcoms
in
mov
loop
fstl
scas
mov
iret
outsl
sub
jg
jae
cli
inc
xor
xchg
push
adc
and
js
inc
xor
sbb
sti
lcall
add
ss
test
push
lea
mov
mov
sub
cmpsb
dec
fnstcw
xor
enter
pusha
fisubl
lods
inc
mov
popa
jl
xchg
push
sub
sbb
add
or
dec
xchg
add
ret
jns
ss
jmp
orl
pop
add
cmpsl
jo
movsl
cmpsb
mov
push
cmpsl
adcb
and
pop
cwtl
aam
out
dec
xor
sbb
mov
fstpl
outsl
jnp
mov
sub
into
enter
fcoms
xor
dec
xor
push
sbb
pop
inc
jmp
aaa
imul
mov
inc
outsb
pop
mov
popa
mov
jb
inc
mov
xchg
xchg
das
adc
pushf
fadds
sub
imul
ljmp
popa
jno
sbbl
inc
xor
shrb
cmpb
push
dec
push
sahf
std
jnp
cmc
in
xor
iret
outsb
jecxz
push
in
mov
and
and
pop
lods
lret
pop
ret
sbb
adc
push
mov
lea
enter
shl
adc
jmp
adc
ret
pusha
mov
jmp
rorl
xchg
pop
leave
mov
lcall
inc
or
or
pop
sub
xchg
jmp
shll
and
shlb
inc
xchg
and
xchg
cwtl
xchg
call
or
ret
cmp
xchg
pusha
movsb
pop
mov
or
and
roll
adc
mov
xor
sbb
cmp
jp
cmp
ficoml
loopne
sbb
sti
xchg
lock
xchg
sbb
jl
hlt
xchg
xor
imul
mov
jmp
ficoms
dec
dec
jne
mov
inc
sub
int
sti
imul
in
sub
add
nop
mov
or
mov
cmpsl
sbb
mov
adc
mov
pcmpgtw
pusha
ljmp
xchg
mov
cwtl
sti
add
adc
mov
add
into
adc
sub
fsubrl
enter
imul
xlat
pop
test
inc
fwait
fs
dec
mov
inc
cmp
in
mov
pop
sbb
cmc
push
or
push
mov
xorl
or
cmc
jecxz
lods
lret
mov
mov
inc
ja
in
inc
xchg
imul
inc
push
lea
sbb
inc
and
xor
test
jp
cmp
xorb
pop
iret
inc
and
xor
push
mov
xlat
aad
adc
push
aaa
jno
sub
mov
test
dec
fiadds
cmp
mov
stos
dec
insl
lret
mov
stos
push
jno
push
in
lock
aaa
pop
add
daa
sub
in
cmp
jg
roll
cs
lahf
fidivrs
adc
dec
xchg
mov
lods
and
lds
or
and
sbb
shr
cmpl
movsb
in
mov
pop
dec
inc
fnsave
mov
jns
add
enter
adc
fmull
adc
shll
dec
mov
lcall
inc
js
push
adc
dec
sub
icebp
bsr
lcall
jg
pop
lahf
mov
aam
out
inc
fists
ja
pop
sbb
ds
arpl
dec
xor
cmp
push
mov
ret
xchg
insl
lcall
add
cmpsl
adc
loopne
js
dec
or
jns
out
mov
test
xor
aaa
cmpsl
xchg
xchg
push
xchg
xchg
vrsqrtps
aas
movb
xor
xor
mov
int
ret
push
inc
test
jo
fdivs
mov
jne
mov
inc
pop
adc
shlb
fwait
mov
mov
jp
aas
dec
popf
call
lcall
movsl
or
cmp
mov
out
push
dec
sub
fldl
jmp
xor
dec
mov
ret
sub
aam
and
adcb
pop
cmpsb
aas
mov
and
int
xlat
push
cmp
and
icebp
dec
addr16
loope
push
adc
mov
adc
pop
lret
push
cmc
popa
inc
add
icebp
xlat
ret
cmpsb
js
mov
sbb
loopne
xor
test
mov
mov
popf
lret
dec
insl
inc
cli
pop
pop
xchg
and
add
aad
cltd
sub
push
test
sbb
dec
movsl
add
mov
stos
es
enter
adc
lret
aaa
fnstsw
dec
ficoml
pop
jbe
dec
inc
leave
jns
ja
push
rcrl
lret
push
xchg
mov
push
orl
push
fildll
jnp
aad
pop
or
nop
test
popa
fadd
lret
mov
inc
xchg
mov
mov
cwtl
xchg
sarl
out
and
push
pop
arpl
outsb
xchg
aam
outsl
push
dec
lcall
pop
les
mov
incb
sub
mov
cld
sub
push
dec
divps
outsl
ds
push
dec
push
mov
into
fdivrp
scas
out
mov
aas
outsb
das
jle
dec
divps
outsl
ds
push
dec
push
mov
into
fdivrp
scas
out
mov
aas
outsb
scas
lahf
into
divps
outsl
mov
mov
into
fdivrp
scas
out
mov
aas
outsb
das
jle
dec
divps
outsl
ds
push
dec
push
mov
into
lahf
inc
scas
jno
popa
bnd
ret
adc
aad
loope
cwtl
jb
bound
pop
inc
dec
xor
and
bnd
ret
test
test
mov
js
dec
inc
pop
xor
cmp
or
sbb
icebp
loop
rcl
ret
mov
mov
jb
bound
xor
addr16
dec
pop
jp
ja
movsb
loop
mov
pusha
mov
ja
mov
xor
mov
testl
daa
rorl
fsubs
dec
cltd
ja
test
fistps
cmpsl
int
aaa
adc
cld
loopne
je
xchg
sbb
dec
xchg
and
lds
or
and
cmpsl
xchg
lea
pop
mov
jecxz
movsb
aaa
inc
mov
cld
ljmp
mov
aad
adc
mov
or
aaa
cli
lods
or
int
addb
inc
mov
loope
sub
sub
pop
pop
popf
or
xor
push
dec
and
insl
mov
enter
adc
add
fcoms
or
lods
jmp
call
mov
mov
xorl
inc
inc
xor
and
adc
add
mov
mov
fisubrs
ret
std
xor
data16
dec
cs
push
addr16
je
adcl
notb
sbb
sbb
push
pop
jbe
pusha
outsl
add
xchg
mov
fwait
mov
cwtl
jb
bound
dec
inc
pop
xor
and
adc
add
bnd
ret
test
mov
jb
bound
dec
inc
pop
xor
and
adc
add
bnd
out
push
or
stc
xchg
xchg
cmp
xchg
dec
pop
pop
arpl
and
pop
outsw
repnz
flds
lret
aas
jecxz
lahf
incb
pop
sub
sti
cmpb
mov
icebp
clc
insb
movsb
scas
int
mov
adc
scas
stc
lcall
mov
mov
dec
movsb
xchg
pop
sbb
lods
movsb
aad
jle
cld
pop
scas
leave
inc
clc
or
dec
in
inc
add
std
stos
loopne
test
ljmp
testl
cmp
push
jne
lock
pop
mov
jp
incb
loope
mov
mov
push
imul
cmp
pushf
xor
xchg
outsb
or
sbb
sbb
pop
ds
jg
pusha
and
aad
inc
lahf
xor
insl
loop
push
mov
addl
nop
scas
jl
sahf
dec
jo
or
xchg
sti
roll
jbe
push
test
jns
mov
adcl
add
dec
mov
xor
inc
and
mov
or
adc
mov
mov
inc
or
cmp
inc
call
push
je
repnz
test
add
cmp
sbb
ljmp
xchg
push
and
int3
iret
test
mov
sbb
pop
bound
push
mov
out
and
imul
stos
lret
jle
imul
aam
xor
jns
xor
je
jecxz
xchg
pusha
cmp
lock
leave
repnz
jnp
inc
dec
xchg
gs
push
in
add
leave
pop
leave
addb
adc
add
movsb
movsl
inc
shrb
pop
xchg
adc
xor
ljmp
aam
sub
cli
mov
adc
xchg
jne
add
inc
add
adc
das
mov
sbb
shrl
xor
xchg
adc
sti
push
fldpi
xor
sub
adc
int
xor
aad
movsl
fsubrl
mov
in
inc
sub
cmc
xor
fisubl
stc
out
aad
aam
mov
cmc
push
shrb
and
pop
mov
mov
push
pop
pop
addr16
js
push
sbb
sbb
rcrb
sbb
into
sbb
inc
and
lods
loopne
jnp
inc
mov
iret
xchg
insb
push
mov
and
or
sbb
icebp
out
mov
cmpsl
cmp
xchg
aam
push
lds
dec
dec
xchg
rcrl
sub
jo
repz
inc
sbb
mov
xchg
shlb
mov
and
push
lods
popa
mov
in
mov
xchg
movsb
repz
insb
daa
aad
int3
push
shll
test
dec
in
fstpl
lea
les
xor
not
ficomps
mov
rclb
dec
adc
dec
or
jp
dec
add
rolb
fwait
ss
push
add
xbegin
and
scas
fdivl
pusha
push
mov
pop
xchg
cmpsb
add
mov
shrl
mov
pop
push
add
scas
sbb
sbb
jns
jb
out
dec
gs
mov
jge
int
cmp
jg
push
pop
arpl
ficomps
adc
loop,pn
sbb
mov
bound
pop
ja
jo
frstor
mov
add
xor
sbb
sub
test
add
les
test
mov
das
adc
xor
loope
mov
inc
jle
cmpsb
sbb
cmp
ljmp
mov
loopne
adc
xchg
pushf
sarl
jecxz
pop
mov
fsubrs
xor
and
out
mov
sbb
lea
push
sbb
fst
and
lods
pop
xchg
xor
fsubp
xor
mov
pop
gs
inc
js
fisttpl
ja
pop
pop
cmc
clc
icebp
xchg
dec
xchg
stos
adc
jecxz
nop
lock
pop
mov
or
fwait
jo
mov
loopne
xchg
jg
loope
dec
adc
loope
or
mov
sti
add
pop
and
pop
nop
cli
stc
movsl
addr16
mov
out
or
push
inc
mov
pop
xor
sti
lret
shlb
and
add
hlt
or
clc
dec
out
cmpsl
sub
xor
mov
daa
mov
sub
fsubrl
jg
in
xor
add
push
push
out
sub
popf
ja
add
stc
mov
pop
test
bound
and
xchg
push
push
sti
jns
movsb
bound
repnz
outsl
hlt
stc
int3
insl
adc
cli
jae
add
ss
push
add
or
sbb
xchg
std
int3
pushf
or
mov
inc
int
jecxz
xor
inc
xchg
fnstsw
inc
das
ficomps
mov
bound
pop
test
inc
mulb
lock
dec
lock
sbb
mov
adc
ret
and
jne
fldenv
or
jbe
adc
ret
roll
jb
or
popa
xchg
adc
outsl
cld
jnp
sub
sub
pushf
loopne
and
mov
in
pop
xor
out
mov
fbstp
mov
push
sbb
int
mov
or
das
cld
jns
push
scas
xchg
sub
xchg
and
cmc
push
in
xchg
dec
lahf
lock
sub
inc
in
movsl
int
lea
test
nop
push
or
lahf
jne
out
out
and
icebp
pop
popf
insl
cwtl
call
flds
test
mov
xlat
cmp
mov
mov
xchg
popf
or
lock
or
rcll
add
add
in
js
fdivs
aas
lods
out
push
hlt
std
fwait
pop
add
scas
adc
add
pop
call
push
imul
clc
or
adc
inc
nop
sub
lds
shlb
sbbb
dec
push
insl
data16
cmp
mov
jecxz
les
insb
jecxz
js
push
add
ret
cmpsl
pop
cmp
out
icebp
mov
sbb
jle
xchg
cld
push
ja
pop
jbe
jl
xchg
jge
mov
je
ss
repnz
sbbl
popa
bound
inc
cmp
push
int3
loope
not
adc
push
mov
add
imul
pop
out
dec
sbb
roll
mov
xchg
shll
push
sahf
js
adc
jo
xor
ret
mov
mov
sbb
nop
lods
test
mov
inc
mov
imul
rorb
xchg
xchg
push
fwait
adcl
flds
xchg
popf
fs
dec
stos
push
mov
xchg
scas
hlt
ss
dec
adc
cmp
dec
cmp
push
lods
sbb
xchg
loopne
add
out
dec
cmpb
cmp
mov
mov
push
iret
js
jno
popa
insl
xor
push
jg
sbb
xchg
and
loop
pop
push
popa
outsl
orb
inc
lock
lret
push
ljmp
bound
enter
mov
fcoms
rcrl
mov
icebp
mov
push
pop
push
hlt
xchg
and
loope
lods
ljmp
and
pusha
pop
mov
rolb
jmp
mov
ror
adc
mov
cmc
mov
xor
or
enter
jmp
mov
outsl
sbb
push
pushf
push
orl
cmpsb
adc
das
jecxz
jne
mov
pop
xchg
stc
sbb
xor
in
push
sub
cmp
aad
adc
test
lock
daa
and
mov
sahf
scas
xchg
dec
aam
dec
addb
xor
scas
popa
stc
lods
dec
push
lcall
push
loopne
dec
test
cmp
mov
pop
mov
int
mulb
mov
pop
push
cmp
lcall
or
mov
pushf
mov
ficompl
das
cmpsb
sbb
push
mov
mov
inc
push
or
sbb
mov
xor
jg
subl
add
mov
mov
add
incl
in
sbb
stos
movsl
popa
roll
enter
push
data16
out
test
out
sbb
andb
cmp
call
mov
mov
mov
dec
dec
mov
and
adc
into
pop
jb
push
dec
stc
shll
mov
das
fisubrs
push
insb
xchg
ds
push
outsl
bound
cmpsl
inc
lock
sbb
mov
inc
fsub
in
icebp
lret
adc
xlat
fcomp
cwtl
mov
fld
sub
stos
and
push
icebp
mov
pop
dec
add
xor
jno
xchg
sub
out
add
push
popa
push
mov
aas
mov
mov
lock
popl
arpl
jecxz
test
cmpsl
pushf
loopne
cmp
shlb
push
fldt
lret
and
and
clc
sbb
pop
icebp
in
popf
pusha
pop
xchg
push
or
sub
ljmp
cmp
mov
jae
ficompl
test
in
lret
mov
xor
or
sbb
xrelease
add
adc
pop
js
jns
xchg
sbb
into
enter
push
call
sub
inc
push
out
and
mov
test
add
or
and
dec
dec
cmp
mov
or
ds
enter
aaa
and
adcl
push
mov
mov
mov
jmp
xor
je
mov
inc
mov
das
inc
negb
push
lods
popf
aas
nop
stos
pop
add
stc
jl
es
cmp
jmp
cwtl
daa
and
sub
sbb
xchg
btc
jl
pop
sub
jnp
jg
fldenv
push
add
jnp
cmpsb
test
in
dec
and
fdivl
mov
aas
and
jbe
push
sub
stc
clc
dec
fwait
mov
outsw
clc
hlt
adc
stos
hlt
jo
cmp
cmp
pop
gs
fwait
dec
inc
movsb
das
jp
dec
xchg
shll
jnp
xchg
mov
inc
out
inc
lds
add
xchg
std
lock
sub
adc
popa
cmp
sbb
add
scas
inc
in
repnz
push
push
mov
out
and
addb
outsl
push
push
mov
push
std
cld
outsl
mov
adc
xchg
adc
ja
loopne
pop
and
sbb
lcall
mov
inc
mov
mov
sbb
ficoml
sub
mov
out
jle
pop
les
jbe
jg
adc
cltd
xchg
std
in
xchg
fistpll
loop
sub
fwait
mov
out
adc
loopne
sar
mov
mov
adc
sub
inc
or
dec
out
sbb
in
mov
das
gs
jo
sbb
cltd
aad
push
loop
sub
lret
fnstcw
dec
jp
fcmovb
sti
fadd
mov
popa
addb
scas
jge
xchg
dec
out
clc
sti
push
add
dec
add
add
jle
shlb
xchg
repz
pop
std
scas
or
add
fidivrl
out
xchg
add
dec
stos
fmuls
jmp
cmp
mov
out
jnp
gs
jg
xchg
ja
or
mov
decb
loop
cmpsb
mov
and
and
lods
pop
roll
popa
cmovp
popa
mov
jl
fldenv
pusha
sbb
jnp
push
jno
inc
pop
insb
pop
dec
jp
jle
loopne
cwtl
sbb
add
imul
mov
mov
dec
int3
in
jns
lcall
ret
and
and
inc
fistps
adc
jge
fists
inc
xor
hlt
ds
adc
fwait
cmpsl
sbb
imul
cmp
mov
add
inc
xchg
in
dec
andl
aam
mov
jno
imul
mov
lea
sbb
aaa
data16
call
pop
adc
movsl
xchg
aaa
into
push
jns
sub
push
lea
mov
xor
and
testb
mov
movsl
fs
shrb
shrl
sbb
and
lods
lds
jle
ja
adc
dec
jo
xor
mov
mov
push
jle
ret
popa
cmc
mov
pushf
insb
mov
mov
jo
sub
cmp
out
loope
push
xlat
mov
pusha
es
movsl
outsb
ljmp
adc
pop
and
loopne
pop
fistpl
mov
into
jge
adc
shrb
xchg
push
pop
stos
loope
stc
sarb
mov
jl
inc
adc
movsb
jl
sti
mov
in
mov
ret
add
mov
mov
inc
fnstcw
add
pop
xor
lahf
cmp
in
inc
jg
and
popa
jo
in
xor
cmp
cmc
call
call
sbb
adc
sbb
test
or
add
sbb
push
pop
dec
enter
xchg
scas
rolb
push
xchg
xor
xchg
xchg
lds
int3
jae
mov
xor
cmp
shll
loopne
pop
or
push
sub
stos
add
pop
xchg
mov
out
add
adc
jl
mov
inc
fsubs
and
dec
push
shlb
imul
arpl
mov
pop
lds
icebp
sbb
std
add
cs
add
push
dec
cmp
and
scas
daa
rclb
subb
ret
dec
add
cmpsl
ss
or
jne
push
cmpsl
fdivrl
jno
or
inc
out
lret
adc
push
adc
or
xor
jg
ud0
or
cmp
inc
shrb
adc
sbb
add
test
adc
cmpsb
push
cmc
xor
mov
stc
lock
cmp
or
imul
xchg
xchg
jno
mov
adc
cmc
ds
mov
and
in
mov
sub
jge
bound
cmc
fmull
jne
mov
jae
rclb
sbb
and
rcr
add
xchg
adc
rcr
xorl
lods
jl
xchg
or
roll
test
mov
sbb
add
movsb
ja
sbb
mov
dec
pop
mov
nop
jp
les
iret
mov
push
lods
les
pop
push
lahf
dec
test
adc
call
xor
pop
sub
lods
dec
outsb
js
jo
testl
xor
daa
mov
adc
push
in
mov
int3
mov
jns
test
fucomi
fcomps
jne
jne
adc
jecxz
cmp
push
jge
and
inc
push
mov
es
and
test
sub
cmp
inc
sub
ja
push
push
mov
into
loopne
add
xchg
xchg
cltd
lods
mov
in
add
in
mov
or
cmp
mov
lds
xor
jns
and
lret
or
sahf
inc
mov
cmpsl
test
rcl
stos
and
daa
mov
sbb
mov
fwait
out
xchg
jbe
xchg
dec
ret
mov
fwait
pushf
out
test
or
sub
push
imul
lahf
jbe
add
adc
jle
sti
push
leave
shll
addb
jbe
mov
loopne
out
jle
stc
fs
push
jns
cmpl
mov
xlat
filds
cmc
jne
inc
dec
loope
pop
sub
in
sub
enter
mov
jae
jnp
stc
ror
arpl
inc
mov
movsb
or
in
add
mov
pop
call
in
sub
sti
xchg
adcl
mov
sbb
add
imul
cmp
adcl
dec
add
ja
sbb
adc
mov
jnp
shll
mov
mov
jmp
and
lcall
xor
out
fidivs
push
ljmp
cmp
fwait
out
hlt
mov
or
test
sahf
aad
xchg
cmp
push
popf
lret
ja
cwtl
addr16
out
dec
rolb
test
or
mov
fildll
jge
fwait
cmp
hlt
dec
imul
out
ss
dec
mov
mov
movsb
cmp
clc
loope
xor
fistl
and
mov
iret
dec
xor
imul
les
jge
sub
in
imul
push
add
sbb
inc
dec
ds
push
cmp
in
mull
mov
sub
sarb
inc
or
das
pop
dec
jbe
and
test
test
and
push
add
andb
popf
insb
test
mov
nop
sbb
sub
aas
push
shlb
test
enter
push
sbb
orb
pop
add
data16
nop
aaa
cwtl
dec
pop
xor
arpl
sbb
xor
loop
mov
rcr
jg
pop
into
ja
addb
stc
loopne
rorb
pusha
mov
sub
test
mov
xor
dec
stos
pop
inc
rclb
imull
add
sahf
pop
mov
pop
stos
ja
dec
xor
sub
pop
enter
xor
out
clc
int
mov
mov
jecxz
das
mov
test
jmp
pop
dec
add
xchg
idivb
or
daa
jo
add
adcb
jae
std
loop
inc
jmp
push
popf
cmp
dec
inc
aas
sub
and
xchg
js
movsb
sbb
fwait
gs
stos
cmp
je
jg
xchg
sub
jp
or
mov
pushf
pushf
mov
lcall
fildl
fidivrl
fmuls
mov
adc
or
push
jbe
xor
icebp
lock
add
ret
pop
movsb
sahf
inc
mov
pop
dec
inc
lret
hlt
push
mov
sub
sbb
lds
sti
repnz
push
push
jmp
hlt
bound
mov
mov
icebp
scas
mov
lahf
cli
mov
hlt
in
push
cmpsb
mov
cli
les
fbstp
push
adc
dec
movsb
int
sbb
dec
sahf
lock
mov
daa
stc
arpl
dec
cld
push
repnz
pop
scas
adc
push
sbb
imul
or
adc
xorb
or
jmp
push
test
or
sub
jge
jge
inc
scas
adc
pop
jp
int
add
std
cmpsb
les
sub
addb
or
mov
cs
imul
dec
outsb
xchg
cwtl
std
and
adc
stos
pop
and
shll
fidivl
std
out
inc
icebp
mov
les
pop
lea
ret
or
xchg
and
lret
cmpl
lds
std
fdivr
and
fs
sbb
sti
shlb
adc
aaa
inc
ret
push
push
xlat
mov
xchg
adc
outsl
jmp
dec
rcl
pusha
pop
mov
push
call
push
lods
push
xchg
sbb
arpl
push
inc
push
fbld
xchg
mov
sub
inc
inc
inc
dec
xchg
scas
sbb
insl
or
les
pop
fwait
leave
fwait
cmp
cmp
loopne
jg
or
lret
fadds
shl
xor
push
insb
subb
test
cli
fimuls
dec
cmp
cmp
fsub
sbb
sub
mov
fwait
sahf
andb
andl
push
cmp
mov
mov
or
rcrb
cs
sub
xchg
xor
sub
in
push
repz
inc
lock
fnstenv
push
roll
cmc
iret
repz
mov
repnz
mov
in
out
fcomp
insl
fildl
sbb
inc
int3
aam
sbb
lock
bound
int
out
mov
sbb
jb
sub
sbb
push
add
arpl
leave
sbb
or
dec
xchg
rol
into
lds
push
cs
jecxz
fdivrl
and
cmc
mov
adc
imul
mov
jl
xabort
lret
mov
aam
divl
cltd
pusha
sub
jns
imul
cmp
add
imul
add
pop
aam
push
outsl
iret
je
sub
add
and
lods
lea
aam
or
and
out
and
jg
fldenv
adc
or
mov
cmp
push
dec
lret
dec
pop
fdivrp
add
test
addr16
in
rcrl
pushf
shll
imul
in
test
sub
outsl
loope
stos
adc
cmovbe
inc
in
repnz
cmp
add
mov
test
decl
pop
shufps
jp
or
mov
xor
js
outsb
int
push
call
sarb
out
fs
mov
dec
mov
pop
mov
das
aaa
loope
into
or
mov
jb
cmpsl
xchg
popl
cmpsl
or
jge
mov
jg
jle
stos
int3
notb
mov
mov
inc
xlat
ja
jl
call
ficoml
mov
lret
insb
sub
idiv
pusha
into
mov
not
adc
sahf
lahf
pop
lcall
xor
ret
dec
jns
pop
xor
out
pop
dec
adc
or
data16
sub
or
clc
pop
enter
test
mov
jb
bound
dec
inc
pop
xor
and
adc
add
bnd
ret
test
mov
jb
bound
dec
inc
pop
xor
and
adc
add
bnd
ret
test
mov
jb
bound
dec
inc
pop
xor
and
adc
sbb
in
loop
ror
ret
test
mov
jb
clc
dec
inc
das
inc
mov
std
addr16
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
add
xor
and
loopne
sub
cmp
xchg
popf
test
aam
iret
in
in
adc
add
xor
and
push
pop
inc
shll
test
stos
lods
aam
hlt
int
mov
sbb
das
dec
popa
pop
jno
xchg
fs
inc
cmpsl
out
jmp
aam
stos
movsb
test
mov
jge
imul
push
js
push
mov
mov
aaa
cmp
and
inc
sub
aad
xchg
xchg
sti
sbb
addr16
xchg
jle
inc
mov
cmp
lods
fisttpll
pop
mov
hlt
cld
sbb
sbb
or
daa
bound
xchg
push
shlb
movsb
out
adc
mov
sub
aam
cmp
hlt
cmp
adc
std
sub
inc
and
pop
bound
push
sub
les
jg
in
inc
or
test
jns
or
jne
insl
xchg
into
inc
popf
mov
push
lods
sub
int3
or
hlt
adc
fucom
mov
sub
pop
stos
sbb
xchg
or
leave
inc
hlt
mov
fcoml
imul
mov
push
dec
je
jge
lea
pushf
dec
lods
lods
mov
xor
js
popa
or
daa
sub
and
adc
or
rol
mov
mov
jnp
gs
pop
pop
push
or
xor
adc
add
clc
loope
mov
in
aam
scas
addl
insl
dec
dec
sbb
inc
dec
je
fs
xchg
popf
test
aam
int
std
in
adc
add
xor
and
push
pop
inc
dec
je
fs
xchg
popf
test
aam
int
std
in
adc
sub
mov
inc
pop
push
mov
loopne
xchg
jbe
jmp
fmuls
mov
sbb
fmulp
jp
pop
roll
jae
fdivp
hlt
inc
call
push
inc
push
cli
mov
mov
mov
push
inc
xor
dec
sarl
inc
mov
fmuls
mov
mov
or
mov
fwait
mov
xchg
xor
sub
leave
pusha
cmp
jo
rorl
in
je
insl
fdivl
xchg
push
xchg
mov
mov
test
cmp
mov
and
es
outsb
sub
loopne
cs
je
inc
jle
xchg
jge
pop
scas
clc
cmp
inc
test
jp
rcll
dec
xor
int
add
mov
or
out
call
xchg
dec
jg
mov
outsl
xchg
movsl
cmp
fdivp
mov
add
pop
inc
pop
daa
mov
jae
push
outsl
adc
jbe
fdivl
mov
andb
jo
pop
cmp
push
test
jae
mov
stc
hlt
inc
jp
sbb
pop
popa
into
jae
out
jl
ja
adc
mov
and
inc
fneni(8087
std
mov
and
imul
fildl
fwait
sbb
push
outsl
loope
lcall
sbb
sbb
aam
jo
lds
xchg
aas
inc
pop
lret
jnp
push
inc
or
dec
daa
or
push
dec
inc
popa
lret
out
pop
mov
jns
ss
fadds
hlt
push
fcompl
mov
cltd
xchg
test
xchg
andb
xor
imul
or
add
and
xchg
fxtract
mov
fstl
dec
scas
cmp
push
push
mov
mov
jnp
xor
arpl
cmc
in
cmp
popl
ret
and
inc
mov
out
xor
js
mov
adc
sub
cs
cmp
and
inc
push
cmp
and
mov
cmpsb
pop
add
jl
loopne
sbb
daa
add
or
rcll
filds
das
repz
xorb
push
adc
or
in
cmpsb
lret
rorl
dec
sahf
sub
lds
mov
adc
cmp
addb
cmp
je
fisubl
test
and
xchg
test
mov
jg
mov
loop
xor
ja
shrb
cmp
mov
insl
into
xchg
push
lods
add
adc
push
mov
lahf
mov
mov
pop
xor
shl
dec
mov
les
push
xor
xor
mov
push
sub
data16
sub
sub
in
jle
push
jecxz
sti
push
pop
in
rclb
cmp
hlt
fldenv
cmc
add
jo
and
mov
mov
cmp
fimuls
cmp
in
inc
stos
sbb
inc
test
jb
cs
je
add
jne
push
jp
dec
cld
aad
xchg
pop
push
sub
in
inc
adc
out
mov
adc
call
add
rorl
push
pusha
lods
lcall
dec
push
dec
adc
inc
lret
push
xor
pop
mov
out
xor
jecxz
shlb
xor
adc
sbb
mov
add
shrb
cmpsl
xchg
pop
xchg
jecxz
xor
in
lds
enter
add
imul
sub
or
repnz
push
stos
mov
fcomps
sahf
sbb
stc
sub
or
in
adc
mov
mov
and
andl
ja
fidivrs
dec
imul
mulb
sahf
or
popa
mov
push
sbb
cmc
mov
or
mov
stc
jle
stos
repnz
outsl
mov
mov
inc
xor
daa
mov
jecxz
cmpl
sub
xchg
in
jle
dec
add
fists
js
lahf
add
aas
stc
mov
lds
push
mov
cmp
add
sub
ret
mov
clc
out
xlat
es
mov
xor
cmc
loopne
cmp
adc
idivl
repnz
lock
rorl
aaa
hlt
aad
mov
fidivs
and
in
lods
gs
sti
loopne
mov
cmp
pushf
aad
dec
xchg
pop
imul
aad
movsl
jnp
clc
int3
nop
hlt
insl
lods
or
push
test
mov
mov
fiadds
jno
dec
imull
stos
mov
jns
ds
pushf
jg
mov
aas
xor
xor
arpl
mov
xchg
and
sbb
pop
fcmovnbe
push
push
jno
cmp
lds
pop
out
jp
and
leave
test
cmp
dec
inc
jb
stc
xchg
bound
out
ds
inc
imul
stc
pop
icebp
ljmp
add
sub
mov
leave
xchg
mov
dec
and
lock
loope
mov
mov
shl
in
addl
push
cmp
xor
add
fistl
adc
test
lahf
mov
sub
pop
iret
and
nop
xorl
inc
mov
ss
shlb
cmpsb
cmpsb
pop
punpckhdq
fmuls
jmp
divl
cli
mov
adc
push
adc
fcmove
add
and
js
dec
js
fwait
or
inc
push
xor
sbb
cmpsb
test
sub
inc
sbb
inc
dec
add
and
pop
loope
push
movsl
pop
es
jae
stos
dec
cmc
xor
cmp
adc
call
std
outsl
fstps
ja
loope
in
jp
add
and
cmp
inc
cmp
loop
mov
in
add
aas
cmp
add
dec
pop
stc
hlt
aam
and
js
jae
imul
loopne
sti
jnp
dec
or
pop
outsb
fcompl
mov
fmuls
ja
pop
in
inc
int3
ds
inc
shr
bound
cs
inc
add
inc
push
mull
push
pop
fidivrl
push
lahf
mov
scas
repz
popf
cmp
out
rcll
lods
ljmp
bound
adc
jecxz
sub
mov
sbb
sub
dec
aas
aaa
arpl
cltd
int3
cmp
or
cmp
xor
push
stos
movl
pop
inc
pop
bnd
pop
in
dec
and
jno
inc
scas
and
es
mov
aas
rclb
pop
or
xchg
out
out
pushf
scas
mov
notb
sbb
ds
or
mov
loop
pop
and
mov
mull
sahf
mov
cs
mov
mov
mov
and
ret
dec
popa
bound
adc
pop
loope
ja
popf
push
lret
and
gs
andb
mov
pop
sets
loopne
pop
jge
add
repz
repz
cmpsl
movsb
and
mov
pop
stc
rcrb
xor
cs
enter
test
cli
in
pop
xor
mov
out
dec
test
or
decb
je
test
cmp
pop
jge
fcomip
inc
push
xor
sbb
mov
push
inc
add
or
adc
mov
jg
xchg
push
push
xchg
jecxz
cmp
add
test
mov
out
mov
mov
lock
popf
add
jae
ret
arpl
in
out
add
push
in
mov
popa
lock
aaa
adc
add
fisubs
mov
jg
cmp
in
push
pop
sbb
jne
aaa
adc
dec
push
adc
dec
cmpsl
xor
bound
ljmp
lahf
xor
pop
fwait
lock
jno
movsb
fstps
loopne
push
adc
or
in
mov
push
push
clc
push
mov
xchg
out
and
lods
mov
jmp
inc
pop
fists
pushf
pop
insb
inc
cmpsl
cmp
sub
aas
cmp
inc
test
rorl
xlat
xlat
enter
sbb
and
fadd
sbb
lret
jl
pushf
ret
int3
into
sti
fs
sub
xor
mov
adc
mov
insl
jmp
fwait
sub
push
cltd
add
push
mov
mov
sbb
dec
cs
and
cmpsb
pop
mov
jb
adc
loopne
pushf
stos
dec
adc
mov
xchg
nop
cmp
cmc
in
pop
dec
fwait
inc
dec
adc
inc
out
inc
stos
cmpsb
xlat
loopne
into
fcmovnb
insl
outsl
xchg
sub
or
push
int
fbstp
leave
js
addb
outsb
lret
ror
outsb
cmp
movsl
sarl
xor
int
loopne
push
sarb
and
xchg
in
mov
cwtl
sub
repnz
outsl
sbb
fstpt
test
movsb
mov
ds
popa
outsl
add
loop
in
mov
addr16
sub
jp
rcr
icebp
sbb
imul
and
stos
adc
imul
into
sbb
mov
jnp
inc
xchg
aad
push
cld
jns
mov
sbb
mov
mov
roll
mov
lods
push
popa
dec
jbe
insb
jecxz
inc
fisubrl
adc
es
sub
dec
decb
in
dec
dec
out
shl
or
dec
ffree
dec
arpl
jbe
int3
cs
insl
ljmp
xchg
sub
xchg
mov
aas
jne
in
mov
insl
mov
lret
xchg
push
sbb
andb
and
imul
sahf
icebp
sahf
pop
bound
lods
xor
mov
sub
insl
mov
xor
lods
jg
je
fcoms
push
enter
adc
popa
shll
push
add
sub
jns
xor
insb
aad
mov
cwtl
xor
es
mov
shlb
adc
stos
ds
sub
add
lea
adc
cmp
jno
xor
sti
psubsb
adc
lahf
inc
push
cmpsl
mov
out
movsb
cmp
in
repnz
addr16
fisubrs
lods
rcll
aam
inc
push
aas
out
pop
dec
stc
mov
push
add
and
test
pushf
adcl
mov
push
dec
cmc
clc
cmp
push
bnd
outsl
sahf
pushf
xor
inc
adc
lret
inc
insl
popf
fidivl
cwtl
fiadds
hlt
xor
push
add
das
test
and
sti
test
mov
jg
repnz
cld
jge
jl
mov
and
jp
adc
mov
std
stc
jns
pushf
iret
cs
or
in
xor
or
fnstcw
xadd
fsubs
mov
sbb
mov
jmp
sub
pop
dec
jmp
call
inc
push
faddl
loopne
mov
pop
jnp
sub
sub
loopne
cwtl
cmp
lcall
hlt
lret
sbb
fmulp
sub
pop
xchg
xchg
cmc
mov
sub
call
lds
ljmp
out
dec
int3
cs
iret
loopne
test
cs
js
inc
cltd
out
push
cmp
sbb
mov
bound
jns
ds
out
sbb
dec
inc
mov
or
dec
cmpsb
inc
hlt
sbb
and
stos
pop
leave
jle
mov
fucom
pusha
test
cmpl
test
or
pop
push
lock
cli
push
push
int
dec
push
lock
jbe
xchg
dec
dec
xor
outsl
cmp
outsb
in
push
fwait
pop
xor
jae
xchg
push
scas
sub
adc
inc
orb
adc
jle
out
cmp
add
lods
loop
mov
xor
test
jo
enter
mov
das
imul
into
sub
test
out
sub
and
push
lret
dec
dec
fstpt
mov
les
pop
add
adc
mov
lea
mov
adc
sbb
dec
into
mov
and
aaa
cmp
xor
jg
repz
into
neg
mov
shll
in
dec
fmull
dec
push
shlb
mov
leave
sub
sub
push
popa
mov
lods
enter
push
and
mov
jno
or
mov
jns
jg
push
int
sbb
cmp
mov
pop
loope
cltd
cmp
test
mov
and
or
shll
pushf
jg
jae
cli
sahf
js
xchg
or
fsubs
movsl
cmp
adc
mov
cmp
incl
imul
rorl
xor
lock
popa
icebp
pop
mov
xor
aam
test
iret
outsb
mov
sar
leave
daa
sub
popa
push
mov
or
sub
arpl
loop
aam
mov
and
fildll
cmp
mov
cmp
jl
adc
mov
push
subb
inc
nop
fwait
or
and
push
data16
jmp
push
icebp
or
adc
rolb
mov
sub
xchg
aas
es
mov
inc
sbb
cmpsl
and
out
adc
int3
sbb
pop
xchg
imul
fnsave
xchg
mov
mov
shr
mov
xchg
idiv
jmp
cmp
cmp
adc
push
inc
and
adc
mov
push
popa
pop
adc
loop
xor
outsl
stos
push
popf
or
out
hlt
repnz
out
in
popf
xor
pop
add
scas
xor
jns
in
dec
sub
fisttpl
clc
mov
dec
mov
cmp
xchg
mov
ret
fwait
in
in
cmpsl
and
xor
mov
or
roll
pop
test
xor
int3
dec
or
adc
cmp
pop
push
pop
dec
xchg
lds
add
mov
lahf
nop
cwtl
adc
repz
xchg
in
jg
test
or
fs
jp
lahf
loop
roll
xor
nop
es
mov
pushf
add
cmpsb
leave
jns
in
ja
cmpsb
inc
cli
inc
fdivrs
jno
iret
into
add
mov
add
sub
mov
fildll
adc
adc
lods
sbbb
mov
jno
inc
mov
movsb
add
sub
pop
pop
pop
arpl
mov
jb
mov
adc
and
adc
xchg
es
lea
add
and
push
cmp
sub
mov
fldcw
push
mov
into
das
scas
add
inc
or
subb
xchg
fwait
cli
pop
scas
leave
jmp
mov
mov
dec
ja
mov
roll
bound
mov
mov
data16
jnp
fcomps
call
mov
sti
repz
xchg
daa
add
fwait
xor
sbbb
mov
insl
lods
dec
mov
test
rcr
push
test
jecxz
inc
lahf
shrb
jg
bound
sbbb
mov
lods
rcll
xchg
inc
rcrl
subb
lea
pop
pop
fdivs
xlat
daa
sbb
mov
xor
pop
push
insl
arpl
add
lock
mov
das
ret
cld
sub
fimull
das
cmp
add
pop
mov
cmp
xchg
hlt
inc
pop
mov
shll
pop
shrb
adc
testl
rclb
loopne
sub
push
cs
sbb
or
mov
movb
and
mov
shrb
push
sub
sbb
sbb
adc
mov
test
mov
aaa
repnz
push
push
stos
sahf
xchg
popf
mov
or
test
js
aad
shlb
adc
pop
xchg
imul
dec
mov
bound
and
dec
call
rcrb
repnz
aam
push
xor
cmp
pop
repz
mov
fstps
aad
dec
sub
xor
xor
mov
dec
xchg
outsl
lret
mov
rorb
push
fisubs
orl
mov
gs
shlb
xchg
mov
jne
mov
dec
mov
lret
mov
pop
test
mov
pop
aad
lods
cli
xor
imul
push
in
lret
pop
pushf
mov
aam
jne
push
xor
jb
or
es
mov
comiss
pop
xor
repz
push
ds
sbb
adc
jge
dec
pop
mov
scas
fstl
cmp
movsb
fnstenv
stos
and
test
push
filds
push
int
test
xchg
in
or
dec
mov
sbb
movsl
jb
fwait
push
mov
in
xor
and
push
aaa
aam
inc
in
or
xor
ja
loope
aaa
lods
mov
inc
out
inc
sahf
add
mov
add
sub
in
js
push
adc
mov
jbe
in
or
rolb
dec
icebp
and
lods
imul
popf
sub
lock
mov
lds
js
or
lods
sbb
and
hlt
and
iret
or
repz
pop
call
mov
pop
pop
or
push
mov
sahf
sub
orl
xchg
lcall
mov
adc
int3
fildl
ja
xchg
push
popf
into
add
in
aad
adc
jle
xchg
inc
xor
dec
mov
push
jns
dec
and
js
js
cwtl
pop
fucom
out
in
test
movsb
movsl
mov
or
fistpl
fwait
iret
mov
xor
test
push
xlat
in
ret
mov
hlt
add
cld
inc
mov
cmp
movsl
jmp
aaa
cmp
lock
repnz
clc
mov
out
orb
pop
je
push
leave
or
jne
movsl
mov
es
pop
mov
fistpll
ss
outsl
loop
es
adc
cld
call
mov
push
xchg
ljmp
cmp
push
lcall
int3
outsl
psrlq
sbb
inc
jecxz
pop
test
icebp
pop
or
repnz
and
dec
adc
and
insl
xorb
mov
inc
xchg
push
out
and
int3
nop
mov
in
out
int3
dec
add
xchg
test
pop
push
add
adc
pushf
push
bound
dec
orb
and
ds
sti
jp
sbb
jg
mov
pop
sub
ret
pusha
rorl
imul
push
or
cwtl
ss
add
pop
out
pop
sub
dec
dec
mov
loopne
adc
mov
lods
sbb
test
jae
dec
fildll
and
fwait
gs
xor
add
aam
sub
add
sti
mov
or
call
loope
add
push
xchg
push
popa
testl
rorb
jl
xchg
push
jge
sbb
sbb
sti
ss
daa
jb
or
data16
or
mov
iret
mov
jbe
mov
lods
adc
subl
popa
std
inc
push
fcmovnb
xorb
push
or
subb
leave
es
cmpsb
nop
test
dec
clc
pusha
addr16
inc
sbb
ljmp
jae
or
and
aas
xor
rorb
xchg
imulb
sti
jae
sub
sbb
cmc
mov
mov
jle
sub
mov
pop
lcall
rorb
sbb
sti
mov
pusha
loopne
bound
loopne
jmp
push
push
mov
cltd
or
jnp
incl
mov
mov
adc
movsl
xor
and
adc
xor
fs
lcall
andl
lahf
cld
pop
and
arpl
call
divl
scas
jno
xchg
jnp
cs
adc
sbb
pushf
dec
pop
pusha
adc
mov
es
inc
jg
push
lret
xor
mov
in
ds
pop
inc
inc
aaa
ss
pop
pop
inc
inc
push
loop
std
mov
jb
lea
mov
cli
jp
lcall
adc
xor
xor
dec
lret
cmpsb
aas
adc
xor
test
loope
popf
sahf
mov
decl
cmp
je
icebp
sbb
pushf
mov
fwait
dec
push
fcom
inc
cmc
enter
dec
test
jns
adc
pushf
mov
std
xor
test
scas
fwait
iret
and
cmp
dec
pop
mov
sbb
mov
push
fsub
cmp
dec
in
xor
lds
jle
push
in
add
sub
icebp
cmpsb
push
cmp
rorl
out
dec
addr16
sbb
stc
cmpsb
data16
repnz
sbbl
imul
xor
mov
pop
mov
lods
and
sahf
fisubrl
xchg
ds
cs
xchg
ljmp
sbb
out
and
sub
cmp
lock
js
fcmovb
and
cmpb
or
fdivp
sbb
in
push
xor
and
mov
push
mov
and
leave
test
loopne
push
cltd
xchg
pop
and
je
mov
adc
int
sbb
inc
clc
adc
dec
nop
in
repz
jle
mov
dec
jge
nop
mov
rclb
dec
ret
mov
je
jb
and
lock
inc
cmp
jo
outsb
movsl
xor
cmpl
mov
push
and
push
pop
inc
dec
je
fs
xchg
popf
test
aam
int
std
in
adc
add
xor
and
push
pop
inc
dec
je
fs
xchg
popf
test
aam
int
std
in
adc
add
xor
and
push
pop
inc
in
jge
insl
xchg
inc
test
aam
vpmuludq
out
adc
push
or
push
pop
inc
dec
hlt
std
in
imul
push
mov
dec
xor
add
adc
cmp
ja
or
aaa
cmp
sub
fucomp
test
push
enter
aas
insl
cmp
dec
sbb
sub
pop
xor
lds
call
fcomps
adc
add
jno
popa
jne
pop
dec
das
test
mov
in
in
scas
mov
mov
sub
cmp
push
jbe
pusha
and
push
inc
add
je
pushf
jne
mov
jb
sub
mov
scas
cmp
loop
adc
ja
xchg
lea
loop
push
push
shlb
adc
lods
sarl
std
inc
inc
stos
in
inc
in
fmul
and
pop
mov
pop
clc
insl
sub
dec
xchg
pop
dec
cmp
mov
push
fsubrl
stos
xor
mov
insb
mov
pop
int3
dec
loope
into
inc
stos
popf
sub
stc
test
fisubs
adc
xchg
cmp
aad
repz
test
jae
push
mov
cltd
mov
sub
imul
loope
pop
or
minps
bound
mov
mov
loope
xchg
loopne
enter
pop
insl
pop
adc
jl
or
adc
pop
fsubrl
idivb
lods
stc
mov
cmp
sbb
sbb
push
outsl
and
sbb
mov
lahf
in
in
loop
mov
inc
push
or
adc
cmp
test
mov
fucomp
lods
clc
mov
sub
jge
dec
sbb
sub
pop
sbb
mov
cwtl
fucomp
lods
clc
mov
sub
sub
jo
inc
dec
out
mov
inc
aad
sub
inc
fisttps
stos
jne
das
jecxz
or
inc
mov
loop
sub
push
cltd
int
out
mov
cwtl
xchg
in
mov
mov
mov
inc
cmpsl
fs
in
bound
mov
add
push
enter
sahf
xor
test
pop
sub
add
mov
cmc
and
mov
daa
imul
lea
and
cmp
inc
or
popa
or
roll
insl
movsb
popa
notl
fisttpl
lret
pop
mov
lods
cmp
and
and
xchg
int3
xor
pop
dec
pop
lcall
xchg
movntq
sbb
clc
fisttps
inc
cld
mov
cs
into
jo
jp
xchg
loop
stos
mov
stc
jmp
in
or
test
pop
loope
mov
mov
inc
les
push
insl
sar
sub
pop
push
cmpsb
or
dec
mov
xchg
fwait
xor
jp
fdivl
mov
hlt
mov
xchg
push
and
push
gs
cmp
int3
aaa
cs
mov
push
bound
xor
jp
out
lcall
cmp
xchg
loope
xchg
filds
jbe
pop
jne
fimuls
hlt
pop
add
cli
mov
jns
js
lcall
sbb
push
and
dec
mov
adc
xchg
je
pop
mov
fs
shl
xchg
adc
cmpsb
mov
lods
xor
inc
cmpsl
push
push
data16
cmp
and
dec
adc
xchg
je
das
mov
int
loopne
push
push
addl
inc
std
cmp
jge
stc
leave
push
mov
ret
lods
xchg
push
jg
test
mov
jle
or
pop
adc
and
fsubrl
pop
stos
sbb
push
mov
xor
out
or
jbe
sbb
in
mov
mov
int3
sub
add
pop
mov
std
lahf
jns
cmp
and
nop
mov
cli
push
int
clc
fwait
pop
cltd
fistl
insb
aaa
outsl
mov
pop
inc
ljmp
xor
mov
lods
cs
lock
enter
repz
dec
enter
mov
test
addr16
rorl
adc
sub
push
stos
mov
daa
gs
add
fs
sbb
mov
out
sarb
dec
leave
ret
adc
sub
mov
or
arpl
loopne
mov
adc
lods
lret
inc
add
dec
shrl
cvtps2pi
inc
fwait
xor
inc
or
adc
xchg
pop
lret
inc
xor
repz
push
sti
adc
daa
or
xchg
adc
mov
aam
ret
push
int3
lret
lea
cmp
mov
and
or
inc
cmc
jle
cmpl
mov
test
dec
xor
ret
std
pop
call
dec
hlt
mov
in
adc
push
push
pushf
sbb
push
pushl
pop
xchg
into
jmp
mov
in
testl
sbb
les
cmp
adc
jne
cld
mov
ja
mov
push
arpl
mov
imul
and
xchg
call
jne
movsb
insb
jne
sub
xor
sbb
or
push
cwtl
shll
fdivr
lcall
fmuls
dec
xchg
mov
push
add
scas
aad
mov
mov
mov
popf
adc
jl
mov
cmp
lods
sbb
ret
xor
scas
pop
daa
mov
cltd
enter
inc
std
pop
cmp
in
lret
lods
gs
loope
insl
push
add
xor
and
arpl
lods
push
scas
fcomip
sahf
push
mov
lret
xchg
mov
mov
lcall
in
scas
mov
les
mov
add
cld
push
cmc
add
out
mov
fs
pop
in
jo
add
popf
call
aaa
pop
out
dec
mov
in
nop
movsl
int3
mov
hlt
addr16
lahf
lock
out
sub
es
cmp
jne
pop
sbb
mov
lahf
int3
notb
fisubrs
and
aam
fcomps
xchg
dec
and
push
pop
movsb
mov
lahf
iret
imul
or
in
cvttps2pi
repnz
xchg
repnz
scas
movsl
pop
icebp
mov
data16
push
and
mov
rcll
xchg
test
or
push
pop
inc
mov
push
mov
loopne
and
insl
push
js
sbbl
inc
xor
adc
scas
jne
jae
pop
neg
mov
scas
add
push
cltd
dec
jae
lock
sub
ds
pop
ret
jecxz
jae
or
cmp
push
and
lea
das
mov
xor
fistpl
push
jo
je
xchg
mov
aas
imulb
mov
jo
jmp
xlat
push
jbe
mov
mov
mov
clc
xchg
cli
lret
repz
int
daa
pop
sbb
sarb
lahf
je
cmp
rolb
xor
outsl
test
rolb
lods
xchg
test
in
jp
test
push
arpl
jecxz
les
mov
lods
dec
dec
xchg
in
popl
mov
push
jae
pop
dec
inc
repnz
mov
andl
in
dec
xchg
xlat
psrad
cmp
scas
sbb
add
in
bound
push
fcoms
sub
movl
push
pop
les
mov
xchg
enter
movsb
cmp
push
and
cmp
pop
mov
idiv
mov
stc
dec
mov
pushf
jp
sarb
scas
cmp
repnz
jo
sahf
sti
imul
xor
or
mov
out
in
jns
les
cmpsl
xchg
sub
stos
shrl
jl
push
xor
fiaddl
imulb
cmc
mov
jo
clc
aaa
dec
loop
jne
enter
into
test
xchg
int
adc
pop
inc
cmp
das
das
xchg
add
test
mov
push
jecxz
std
sahf
test
cmp
in
mov
js
jnp
jae
adc
dec
mov
jecxz
outsl
jb
aaa
sub
rcrl
shll
aaa
cwtl
xor
xlat
push
es
pop
pop
mov
fnstenv
fimuls
aas
xchg
loopne
adcl
push
testb
popa
scas
add
pop
xchg
xlat
xchg
icebp
jno
lods
sbb
mov
sub
pop
dec
and
mov
xchg
fldt
xchg
or
jmp
add
je
stos
cmp
icebp
mov
iret
out
push
mov
sarb
fwait
jecxz
popa
jle
dec
gs
mov
sar
inc
sbb
ja
xchg
push
iret
sub
pop
dec
add
adc
xchg
cmp
xor
pushf
repnz
jno
insl
insl
add
xor
aaa
je
insb
out
mov
cltd
xor
pusha
cmp
loopne
xlat
stc
mov
movsl
int3
mov
pushf
inc
cmc
out
mov
out
outsl
gs
imul
dec
mov
cmp
les
dec
std
push
push
pop
out
or
ja
in
cmp
testl
or
mov
jmp
and
subb
push
pop
adc
jp
aas
jnp
ret
aam
inc
jl
test
and
lds
outsl
std
and
gs
inc
insl
nop
pop
clc
sub
outsl
adc
pop
lods
cltd
addr16
or
dec
cs
lock
cmp
push
popa
mov
std
repnz
js
xor
cmp
lea
ret
adc
stos
stc
pop
js
push
movsb
lods
scas
or
push
ficomps
pop
arpl
clc
add
push
std
push
out
sbbl
add
and
pop
mov
pop
or
pop
or
ror
push
add
inc
add
sbb
and
fwait
iret
test
lock
and
rorb
lret
push
jne
add
cmp
call
xchg
cltd
sub
pop
xchg
cmc
push
loope
sub
loopne
cs
push
insl
inc
push
push
stos
mov
xor
xchg
mov
and
sbb
mov
repz
sub
cwtl
and
popa
aad
pop
xor
imul
sbb
scas
add
hlt
sub
mov
ds
mov
jbe
nop
cld
ret
jnp
pop
or
popf
add
push
push
imul
cwtl
lahf
jecxz
enter
fldcw
js
and
pop
mov
aam
in
adc
xchg
push
add
and
jle
loope
mov
fs
jmp
movsl
push
sub
cmp
lods
insl
lea
js
inc
packsswb
adc
std
xor
inc
and
mov
call
icebp
out
inc
icebp
pop
push
cmpsl
xor
cmp
sbb
sbb
jbe
imul
negb
pop
add
ret
cmp
outsl
sbb
dec
faddl
and
mov
insl
ss
mov
scas
sti
sub
sbb
mov
std
shrb
sar
stos
push
clc
test
cmp
and
rorb
aam
dec
jle
mov
scas
cltd
rcr
xchg
insb
insl
pop
jbe
aaa
push
fiaddl
mov
jne
push
xchg
outsl
icebp
xchg
inc
pop
inc
aad
repz
xchg
hlt
ds
mov
loop
icebp
bound
sarb
fsubs
fidivs
mov
inc
pop
sbbb
mov
lcall
pop
movsb
push
fs
fildl
test
or
fbstp
xchg
mov
lock
out
sbb
leave
in
cmpsl
inc
pop
lock
mov
mov
adc
pop
pushf
xor
adc
inc
mov
popf
out
mov
xchg
pop
out
addb
adc
xchg
adc
push
mov
cwtl
and
or
mov
add
pusha
cld
cmp
ficoml
push
loop
dec
mov
sahf
stos
mov
xor
add
xchg
data16
cmp
cmpsb
adc
mov
andb
jbe
and
push
push
pop
fs
call
sbb
jnp
popl
xchg
add
aad
fwait
dec
mov
daa
vpsrlq
je
push
xchg
xor
jg
xor
mov
cmp
jecxz
inc
inc
test
fmuls
sti
jle
mov
test
mov
or
inc
out
pop
xor
mov
cmp
jl
sarl
mov
mov
jmp
fcoms
lret
je
mov
cmp
sub
pop
ljmp
fwait
lcall
add
pop
test
jecxz
insb
lock
psubsb
add
fdivrl
out
sub
cmpsb
pop
ljmp
dec
stos
in
loop
stos
cwtl
aad
sub
jmp
sahf
ds
jecxz
or
sub
push
bt
mov
jnp
js
xchg
inc
icebp
lods
std
cli
loop
cmc
sahf
bound
cli
std
sbb
xchg
int3
cmp
push
out
out
cmp
loopne
pop
mov
scas
xchg
ja
cmc
xchg
push
or
repz
mov
pop
enter
lock
lret
dec
jecxz
cmp
adc
pop
sub
push
jg
cli
insb
mov
mov
imul
rolb
push
pop
clc
adc
imul
jp
popa
rcll
es
dec
outsb
movsl
pop
pop
popf
rcrl
fdivrl
fstpt
dec
cmp
and
or
sbb
out
add
mov
stc
test
fdiv
gs
cltd
nop
call
mov
push
inc
and
sahf
fsubrs
in
or
jg
pop
and
fdivs
mov
or
jmp
mull
jl
mov
pop
into
lcall
cmp
cld
insb
mov
pusha
mov
sub
cwtl
adc
scas
add
lahf
push
jb
pop
outsb
sub
mov
lds
movsb
and
lock
std
int
movsl
or
into
fcmovne
mov
out
lods
cld
inc
inc
jp
test
jns,pt
push
mov
mov
ja
dec
shr
pop
lret
repnz
insb
fisttpll
aad
dec
cs
adc
push
xchg
aam
xor
xchg
xchg
mov
in
sub
pop
imul
pop
dec
enter
fcmovne
cmp
xchg
sbb
addl
xorl
xlat
sub
ror
loop
sti
repnz
call
pop
or
xlat
mov
mov
icebp
repz
out
fbstp
cwtl
jb
incl
mov
ret
pop
mov
adc
sub
mov
cmp
mov
dec
dec
jne
scas
in
xchg
xor
mov
popf
mov
cs
cmpl
push
cmp
jns
das
lods
push
shr
call
pop
lret
repz
mov
pushf
out
fistpl
mov
aas
pop
pop
adc
xor
pop
cli
gs
aas
sub
jge
sub
xchg
xchg
sarl
mov
pusha
jge
add
scas
rorl
shr
cli
aas
and
sti
inc
mov
arpl
ficoml
and
cli
addr16
enter
psubsw
adc
or
shlb
sub
aaa
into
sub
mov
pop
repz
repz
inc
cwtl
xchg
and
sbb
adcb
fcoms
imul
xchg
dec
xchg
test
lret
xchg
and
movsl
sub
pop
sub
rol
or
ljmp
xchg
andb
mov
mull
adc
lods
jbe
ds
sti
mov
cmp
ja
in
push
iret
movsl
dec
outsl
addr16
outsl
test
addr16
push
movsb
or
push
addl
pop
cs
push
idivl
ss
inc
cs
mov
popf
in
and
and
add
fstps
xchg
into
pop
int3
dec
iret
or
pop
mov
mov
lcall
stos
shlb
test
dec
out
popf
push
cmp
mov
shrl
dec
repz
mov
sub
std
dec
push
dec
or
aad
fdivr
mov
jae
std
data16
testb
cmp
cmp
mov
fwait
xchg
cmp
test
gs
fstpl
inc
dec
sub
sbb
shrb
das
cmp
sbb
nop
pop
add
in
insl
cli
pop
cwtl
add
inc
loop
xor
ss
pop
adc
cs
aas
pusha
enter
lret
mov
jne
cli
inc
leave
gs
inc
inc
push
pop
in
cmpsb
cmp
sub
xor
jb
outsb
cmpsb
dec
mov
lcall
les
xchg
aaa
adc
sub
mov
push
gs
scas
lea
mov
pop
rcrb
leave
add
or
scas
xchg
sub
les
and
push
bound
adc
mov
pop
stos
lock
in
mov
and
out
in
pop
insb
in
mov
pop
cltd
cld
pop
sub
movups
xchg
push
jl
push
lods
std
shll
and
adc
dec
jbe
push
cmp
adc
insl
sub
outsb
lret
cli
gs
cmp
pop
arpl
loope
enter
push
aam
xor
int
inc
loopne
clc
sbb
xor
aam
sbbb
lcall
sub
movsl
into
jl
addr16
mov
cld
daa
push
test
jb
adc
or
lret
jb
xorb
idivl
ret
negb
imul
cmp
inc
xor
adc
push
imul
loopne
movaps
adc
jp
pop
or
push
xchg
mov
shll
cmp
fstpl
push
cmpsb
lds
outsl
dec
dec
adc
fisubl
movsb
pop
mov
adc
ret
sbb
adc
and
jb
stos
pop
das
mov
mov
leave
or
imul
adc
or
xlat
mov
js
add
jmp
jp
jnp
or
xchg
fcmovb
sti
scas
fbstp
mov
and
test
inc
xchg
mov
arpl
ljmp
fidivrl
xor
sbb
inc
sbb
test
sbb
andb
jns
mov
adcl
shlb
sbb
mov
out
lds
nop
lret
jp
mov
movsb
scas
add
sbb
lahf
cmp
add
xor
stos
pop
jns
lock
lret
sti
lahf
sbb
nop
subb
mov
and
repnz
cld
sti
test
outsl
pop
or
or
mov
es
out
dec
jg
inc
std
ds
arpl
xor
sbb
pop
das
cmp
jmp
ficoml
sub
inc
xchg
mov
xor
dec
mov
sub
outsb
popa
cmc
rolb
jecxz
or
jg
and
les
jne
push
cmpsb
mov
dec
fs
pop
movsl
into
imul
and
pop
scas
pop
addr16
lret
arpl
scas
nop
leave
adc
movsb
lods
sbb
xor
js
adc
xor
shll
or
add
push
cmc
pop
cmp
in
inc
cld
idivb
mov
pop
or
inc
pop
ja
hlt
addb
sub
add
movsb
add
cmpsl
jnp
dec
dec
cmp
pop
sti
xchg
dec
push
rorl
mov
cld
cmp
xlat
mov
xchg
push
fldcw
or
adc
nop
adc
xor
jmp
xor
ss
in
fdivr
mov
inc
imulb
pop
xor
ja
rcrb
dec
mov
pop
jg
ds
js
ss
inc
xchg
mov
aam
sbb
int
inc
imul
mov
cs
mov
sbb
fwait
test
push
dec
lods
push
clc
cmp
mov
inc
xor
mov
cld
push
jge
loop
and
mov
jo
adc
jp
imull
sbb
por
xchg
cmc
cmp
dec
loopne
adc
jge
movsl
sub
rcl
sbb
jo
add
cmpsb
cmp
mov
out
mov
in
ljmp
add
mov
pop
add
inc
cmc
lcall
push
mov
fs
dec
insl
sbb
sbb
loope
nop
cmp
cmp
mov
popf
xchg
scas
pushf
mov
jbe
cmp
fucompp
and
mov
loop
icebp
xor
imul
inc
bound
movsb
push
push
icebp
dec
scas
xor
cmp
pop
lds
shlb
mov
lcall
pop
fsubl
sub
add
pop
cmp
mov
dec
inc
add
stos
jle
aas
bnd
loopne
rolb
xor
lds
inc
and
and
pop
jnp
pop
adc
je
push
insb
popf
or
sbb
sahf
cli
lock
enter
mov
lahf
xchg
nop
push
xor
lahf
aad
push
mov
or
xchg
arpl
lds
mov
or
aaa
push
inc
mov
aaa
xorl
jb
sbb
lock
insl
pop
adc
xor
les
ds
outsb
fnsave
in
test
lret
jb
xchg
fistps
movsb
ret
adc
pop
xchg
je
leave
jbe
ds
int3
sbb
mov
sahf
and
enter
inc
mov
test
sub
xchg
shrb
jns
pop
pop
mov
push
daa
mov
sbb
pop
and
mov
jno
lds
das
mov
jg
movsb
jge
bnd
aad
jl
push
mov
fmuls
xchg
neg
test
lahf
enter
das
lods
and
dec
add
lds
lock
cmpsb
mov
fdivrs
jns
dec
movb
lods
in
test
mov
inc
sub
out
ljmp
popa
divb
sbb
jo
inc
inc
in
fldt
addr16
das
test
xor
in
loop
push
fisubl
das
ljmp
iret
les
adc
mov
test
or
dec
scas
in
pushf
andb
or
push
imul
fdivrs
xchg
mov
lea
mov
aad
push
aad
mov
inc
xchg
pop
ret
daa
inc
mov
mov
movsl
jb
jg
cmpl
adc
insl
lcall
jne
mov
push
fcoml
xor
jae
dec
xchg
fs
subl
test
and
dec
call
mov
mov
out
sub
icebp
subl
push
sbb
lahf
dec
push
and
dec
xor
out
cmp
xchg
fucomi
add
cmpsl
cltd
sub
lds
rcll
or
mov
addl
sbb
sahf
sub
add
shr
fiaddl
xlat
aam
movsb
mov
idivl
cmp
or
mov
jnp
sbb
mov
pop
in
cmp
in
inc
ds
dec
or
jnp
aam
xor
in
add
cltd
es
lea
mov
or
in
ret
pop
ret
testl
cmp
test
mov
fucomp
lods
clc
mov
sub
jge
dec
sbb
sub
pop
sbb
mov
cwtl
fucomp
lods
clc
mov
sub
jae
push
sbb
sub
pop
sbb
mov
cwtl
aam
test
jmp
cltd
ds
js
enter
push
adc
and
cwtl
stos
lahf
aad
lds
cmc
daa
in
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
inc
sub
cmp
xchg
dec
adc
inc
popa
add
add
add
add
or
add
pop
add
stos
add
add
add
add
push
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
xor
and
roll
add
add
add
add
add
add
xchg
fadds
mov
sub
mov
mov
add
add
add
jg
mov
pusha
add
stos
add
add
add
add
cmp
aam
mov
rolb
pop
or
xor
sub
roll
add
push
add
add
add
add
add
add
xor
mov
roll
add
add
add
add
add
add
add
add
mov
lea
loopne
loopne
xor
leave
add
add
mov
pusha
add
das
add
add
add
add
add
add
add
add
add
jl
mov
mov
add
add
popa
add
add
xor
in
add
mov
add
add
out
add
add
mov
add
add
add
add
add
add
or
xor
and
leave
add
xor
xor
fadds
imul
add
inc
add
add
add
sbb
out
add
add
mov
hlt
add
add
pop
add
add
lea
outsb
add
mov
pusha
add
imul
add
mov
pop
add
adc
push
add
lods
add
add
jl
mov
add
add
rolb
add
inc
add
add
push
add
jnp
mov
add
add
add
sbb
add
fadds
mov
mov
mov
add
add
add
dec
add
mov
rolb
mov
add
mov
flds
push
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
jnp
fadds
stos
add
add
add
add
add
add
add
add
add
dec
add
xchg
jns
dec
add
add
inc
add
add
add
and
add
add
add
add
add
add
push
add
add
add
movsb
add
or
rolb
or
add
add
add
add
jno
pushf
add
mov
add
add
leave
add
roll
rolb
add
add
xor
test
dec
add
adc
jo
stos
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
or
sbb
or
add
add
add
add
add
add
stos
add
add
add
add
add
jnp
add
add
movsl
add
mov
in
add
add
add
add
add
add
add
add
add
rolb
mov
sub
push
add
dec
add
test
add
add
add
add
add
add
add
add
mov
mov
popa
mov
movd
push
xlat
scas
xor
inc
int3
ljmp
cltd
fdivrp
adc
lea
jmp
mov
dec
call
hlt
fnstenv
xchg
negb
out
xchg
daa
fisubrl
jnp
jp
fwait
in
addr16
js
cmc
push
add
jmp
stos
lret
add
daa
xor
pop
fdivs
test
loop
pop
test
sbb
cwtl
adc
or
lods
mov
dec
sbb
xchg
xchg
subb
stos
inc
push
dec
cltd
stc
push
mov
jno
push
mov
add
add
push
dec
adc
add
mov
jo
movsb
imul
mov
jbe
aam
mov
jl
in
adc
int3
popa
jecxz
mov
lcall
inc
sbb
fdiv
dec
outsl
mov
fidivl
dec
ss
shll
mov
pusha
lea
sbb
mov
adc
outsb
and
sub
adc
add
imul
mov
push
xchg
gs
insl
mov
mov
dec
jne
out
les
or
push
jecxz
mov
push
je
in
ljmp
js
enter
lahf
mov
pushf
dec
xchg
pop
sub
cwtl
jmp
pop
aam
mov
mov
dec
xchg
repnz
gs
fadd
adc
aaa
icebp
dec
pushf
mov
adcb
dec
bound
sub
andb
add
in
pusha
cwtl
movsb
mov
jmp
push
sub
pop
jl
cmc
es
stos
push
sarb
xor
fstl
rclb
xorl
int
fidivl
sbb
call
mov
pop
cmpsl
add
icebp
in
inc
ret
pushf
pop
out
idivl
mov
cli
loop
mov
mov
pop
out
sbb
sub
aas
cmpsb
stos
dec
in
cmp
sub
adc
sbb
dec
lret
inc
out
rcrl
dec
cmc
addr16
ret
orb
outsb
add
mov
cmp
push
pop
sub
fstps
xchg
out
mov
push
inc
sub
mov
ljmp
fiaddl
roll
loop
mov
sbb
push
inc
jp
rcrl
jmp
rcrl
ret
ljmp
insb
mov
movsl
bound
mov
dec
dec
cmc
ss
cmp
lfs
xor
shr
jecxz
sub
enter
rolb
xchg
mov
frstor
fsub
lea
dec
sbb
mov
test
test
pushf
mov
sahf
push
lret
ljmp
mov
jmp
fs
in
inc
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
