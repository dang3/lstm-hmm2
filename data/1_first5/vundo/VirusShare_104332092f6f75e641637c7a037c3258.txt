sbb
add
mov
scas
sbb
insb
lcall
inc
scas
xchg
jg
push
sbb
cltd
mov
jmp
dec
mov
push
mov
lret
and
repz
push
push
stos
or
sub
mov
jmp
or
cmp
sbb
push
dec
std
mov
add
sbb
test
mov
jmp
jae
pop
push
push
fs
xor
adc
movsl
sarb
loopne
fisubrs
int3
ds
fwait
lods
jg
add
adc
loope
notl
aas
xchg
faddp
fildl
push
jg
test
jmp
mov
lahf
mov
xorl
jle
mov
iret
or
sbb
sbb
notl
push
out
push
inc
or
outsl
ret
adc
in
pop
mov
test
movsb
pop
fidivrl
xchg
mov
fdivl
orl
test
pop
std
pop
xor
and
jbe
addr16
inc
pop
mov
test
pop
pop
lahf
sbb
sarb
xor
out
movsl
leave
imulb
movsb
jae
dec
loope
sub
sbb
nop
cli
inc
and
loop
ds
pop
movb
je
int3
scas
mov
insb
xor
rcll
xchg
loope,pt
cmp
pushf
test
test
fistl
xchg
in
adc
popf
mov
and
outsl
xchg
jecxz
int3
mov
push
fisubrs
repnz
sub
fcoml
es
jns
pop
cmpsb
or
add
fwait
pop
xlat
stc
icebp
pusha
jp
shr
push
sbb
add
jle
dec
pop
sahf
lods
dec
and
cmp
into
jmp
fs
outsb
inc
nop
and
dec
pop
jl
jecxz
dec
push
call
dec
testb
subl
je
or
loope
arpl
push
dec
testb
add
xchg
inc
jno
inc
xlat
mov
or
mov
push
add
xchg
scas
fnsave
sbb
divl
stos
or
nop
repnz
cmc
dec
adc
mov
lds
lds
add
stos
push
pop
int3
cvtps2pi
shrl
inc
ljmp
es
xchg
movl
aas
push
js
add
test
sub
or
pop
repnz
ret
push
rcl
lods
lods
shlb
into
loop
jle
cld
cs
adc
inc
bnd
out
mov
scas
adc
mov
jbe
xor
jle
out
dec
push
dec
ss
bound
adc
push
dec
dec
jle
mov
idivl
xchg
cmp
out
inc
push
cld
frstpm(287
inc
or
popaw
hlt
add
mov
jp
dec
sub
inc
cs
pop
gs
inc
dec
imul
les
mov
cltd
ret
adc
call
lret
xlat
jns
pop
jge
lahf
insl
inc
cmc
push
loop
xchg
gs
jmp
les
push
add
lret
or
xchg
xlat
jg
mov
mov
les
in
adc
sarb
add
rol
fldenv
fildll
and
cmpsb
dec
cmpsl
enter
rcrl
scas
ja
mov
mov
jecxz
mov
movsb
sub
gs
sub
inc
dec
jmp
subb
sub
psubq
mov
idiv
popa
lahf
sbb
call
test
push
hlt
mov
mov
out
sub
test
mov
in
ljmp
fsubrp
nop
mov
roll
mov
repz
sarb
pop
jae
js
mov
lock
adc
push
mov
fidivrl
ljmp
inc
jl
adc
adc
sbb
test
jno
ja
and
mov
lods
aad
dec
pushl
mov
ret
dec
lods
pop
xchg
cmpsb
xchg
xlat
add
and
push
jl
jne
cmp
cmpsb
sub
adc
popf
jbe
ljmp
mov
int3
or
lahf
xchg
push
and
nop
lret
mov
mov
das
daa
shrb
cmp
jnp
xor
push
xchg
cwtl
xchg
mov
arpl
cmp
fmuls
xchg
aaa
sub
insl
or
jge
mov
sub
jecxz
addr16
jbe
fidivl
iret
jnp
ss
loope
dec
sub
jmp
dec
push
adc
int3
mov
mov
enter
out
adc
mov
add
fwait
in
ljmp
repz
pop
pushf
mov
into
in
push
or
and
push
or
pop
push
test
pop
roll
jl
and
ret
mov
cmpsl
insb
mov
xor
aam
mov
int
mov
xchg
push
cld
lds
add
iret
sub
aaa
imul
mov
ret
loopne
add
push
mov
mov
push
pusha
lcall
push
mov
icebp
mov
fsubrs
cmc
test
in
hlt
incb
push
sbb
addr16
loopne
and
lock
jle
ljmp
cmovnp
repz
fsts
cmp
fidivs
mov
in
jge
sub
fsubrs
xor
loopne
cs
xor
es
rorb
out
push
ja
mov
jno
jmp
adc
out
cwtl
pop
lret
scas
cld
pop
cli
shrb
push
cld
jg
xor
ret
mov
ljmp
add
repnz
inc
cmp
or
sub
hlt
sahf
sbb
fsubrs
pop
adc
call
and
test
imul
in
ret
fcmovne
xor
pop
sbb
push
arpl
repnz
fidivrl
outsb
popf
enter
insl
movsl
pop
mov
mov
outsl
stos
lea
test
subb
dec
xlat
inc
jb
movsb
movsb
cwtl
sbb
test
adc
push
mov
int3
int3
fmuls
push
andb
xchg
shll
mov
lods
sbb
jmp
cmp
sub
ds
inc
or
xchg
mov
xchg
fucom
std
pop
jl
mov
call
mov
cmp
pop
pop
sub
stos
lds
shll
mov
repnz
call
dec
jle
pop
mov
jns
xchg
inc
jb
sub
arpl
cmc
pop
fsubrp
loop
xor
inc
xchg
das
enter
insb
add
stos
cmpsb
xor
arpl
test
push
inc
push
add
ds
cmpsb
jnp
xor
adc
imul
add
sub
or
dec
dec
leave
cmp
mov
xor
test
cmp
gs
push
aas
icebp
add
fisubl
xchg
and
int
and
scas
loop
leave
inc
mov
mov
xchg
jno
push
xchg
cmp
ret
lcall
add
sub
push
js
jl
mov
andl
cwtl
xchg
push
xchg
sub
pop
test
jge
mov
mov
out
or
adc
stos
mov
sub
aad
cld
call
pop
stos
cmc
mov
fstpl
aas
mov
cltd
pop
mov
cmp
mov
mov
addr16
dec
sbb
int
adc
mov
ret
or
jb
sbb
hlt
repnz
mov
test
dec
insb
imul
lret
ljmp
hlt
lods
lock
inc
mov
mov
mov
and
inc
lahf
xor
daa
sbb
dec
and
adc
pop
lods
mov
sbb
repz
inc
cmc
imul
out
stos
divl
mov
nop
jbe
pop
mov
mov
xchg
or
out
sbb
pop
pusha
loopne
sahf
mov
mov
or
pop
mov
pop
std
es
in
jmp
call
fs
cwtl
nop
lds
and
mov
push
fidivs
jp
lcall
hlt
and
repz
ljmp
push
mov
movsl
sbb
push
xor
sbb
sbb
orb
dec
testb
aaa
inc
mov
dec
fldcw
ss
adc
movsl
xchg
lret
pop
push
lock
fisubrs
insl
push
inc
movsw
clc
push
cmp
dec
push
roll
addr16
idivl
ret
stos
jle
xor
pop
push
lcall
cmc
mov
int
mov
int
dec
or
jg
stc
jno
cmpsb
adc
sbb
test
out
mov
lock
ss
in
sbb
ds
lods
dec
sub
adc
mov
clc
xor
dec
pop
pop
movsb
mov
or
stos
test
fildll
movsl
out
dec
dec
hlt
icebp
daa
push
inc
es
push
cmp
add
filds
leave
mov
jns
fnstsw
lock
lock
pop
jl
into
jg
pop
inc
test
xchg
cmpl
pop
sbb
lcall
into
out
lock
and
sbb
push
bnd
ret
push
xor
movsl
inc
fdivrs
test
dec
int3
add
mov
jbe
inc
icebp
orb
mov
or
mov
push
mov
jne
shl
cmc
testb
jmp
fnstsw
xor
lock
jo
xor
inc
jp
xor
std
and
push
xor
mov
mov
adc
cli
cs
or
lea
inc
mov
data16
jle
jge
dec
movsb
adc
jp
inc
dec
cmp
pushf
in
inc
dec
sbb
push
stc
test
mov
std
push
addr16
aad
mov
or
sub
test
mov
popf
push
js
ret
movsb
mov
std
cmc
call
dec
push
push
repz
stc
loope
dec
or
pop
adc
add
repnz
movsb
mov
pop
outsb
sub
popa
xchg
inc
pop
subb
fs
sub
push
xchg
mov
jl
nop
dec
mov
add
subb
pop
hlt
jl
push
imul
jp
imul
test
adc
int3
mov
pop
cld
in
aas
mov
enter
mov
xlat
inc
add
stos
fistps
mov
mov
or
jmp
inc
dec
divb
in
adcl
dec
or
pop
lods
sbb
rclb
mov
bound
adc
xchg
std
mov
es
pop
jmp
xchg
xor
nop
mov
call
sub
pop
dec
hlt
in
subl
nop
je
inc
pop
mov
cmc
stos
cmp
mov
inc
out
jns
jno
mov
iret
or
test
repz
out
movsl
jmp
cltd
lcall
xor
ret
insl
rorl
sub
cmc
fsts
mov
xchg
mov
fwait
jae
push
fbld
mov
mov
arpl
xor
and
pop
je
pop
dec
loop
sub
rcll
sub
stos
and
cwtl
into
xor
es
ret
sub
adc
push
push
pop
mov
adc
jno
js
andb
imul
fcomps
lea
pop
add
scas
imul
imul
arpl
mov
test
popa
jmp
or
bound
imul
outsl
cwtl
test
xchg
and
adc
fsubrs
fadds
in
and
mov
push
inc
mov
enter
mov
mov
dec
lea
sti
les
pushf
xor
sub
out
movsb
jecxz
daa
sbb
adc
xor
lea
sbb
insb
sahf
adc
mov
imul
in
hlt
hlt
cmp
pusha
push
mov
mov
pusha
adc
ja
dec
lea
ja
int
jb
lcall
jle
and
scas
std
data16
cmpsb
mov
sti
adc
jg
test
cmc
mov
imul
sbb
insb
daa
jo
arpl
pusha
popa
or
hlt
test
ret
mov
decb
and
sbb
add
stc
xor
out
in
xor
pop
push
cmp
inc
sbbb
std
mulb
cmpsb
and
das
xchg
stos
or
movsb
lods
sti
jle
cs
in
xchg
push
mov
cmp
or
rorl
mov
je
sub
ljmp
neg
mov
sbb
fisttpll
notb
mov
jmp
dec
iret
dec
in
add
out
mov
cld
outsl
add
cmp
ret
or
rcrl
inc
adcl
flds
scas
sbb
insl
cmp
xchg
add
int
adc
jecxz
push
ds
and
loopne
orb
in
stc
add
xor
xchg
aam
in
and
dec
es
push
movsl
stos
mov
clc
loopne
shl
out
jge
aas
roll
xchg
sbb
push
shlb
xor
sbb
or
mov
or
pop
and
mov
cld
test
fs
dec
lods
push
mov
pop
mov
scas
add
adc
mov
sysenter
xchg
sbb
testl
out
lahf
ljmp
dec
lret
cltd
dec
mov
aad
int3
xchg
enter
jge
daa
aaa
sbb
push
popf
mov
fs
test
icebp
mov
jge
cmp
insl
dec
insb
inc
push
cld
arpl
sub
pop
jecxz
scas
or
xchg
pop
std
xor
insl
lahf
imul
movsb
add
sbb
test
mov
or
lods
rcrb
out
frstor
in
dec
and
push
out
lods
lods
add
xchg
cmp
adcl
inc
mov
xor
pop
lock
inc
scas
ljmp
cmp
dec
ja
cmp
jmp
fisubl
push
adc
jnp
jae
fcoml
loopew
dec
mov
pop
add
push
loop
xchg
add
pop
pop
pop
mov
stos
mov
adc
jns
xor
add
mov
xchg
dec
mov
push
mov
mov
mov
mov
xor
sbb
rcr
and
rcl
dec
jno
or
rorl
int
mov
jecxz
outsb
imul
pop
nop
mov
push
sub
enter
pushl
pop
inc
clc
imul
adc
pop
into
enter
jb
insb
addr16
popa
dec
in
pop
out
sbb
or
into
insl
dec
and
mov
cs
into
cmp
xchg
push
inc
dec
and
les
cli
fneni(8087
test
ret
dec
imull
mov
fwait
sbb
mov
inc
inc
mov
pop
xor
mov
add
pusha
lds
insl
js
arpl
mov
loope
and
mov
rcrl
adc
ljmp
rorl
xlat
or
add
jbe
bound
mov
cmp
idiv
pop
jle
aaa
and
sbb
xor
shrb
mov
mov
in
or
int
jnp
dec
pushl
jp
adc
inc
fidivl
movsb
fisttps
loope
and
imul
dec
test
faddp
jl
out
in
cld
imul
addr16
xor
cmp
mov
pop
inc
lcall
xchg
idivl
addr16
stos
pop
fdivp
fwait
orb
ljmp
std
push
or
repz
das
popa
mov
mov
and
call
add
test
and
leave
enter
push
aaa
jbe
adc
jns
xchg
scas
push
mov
mov
dec
stos
mov
mov
rcl
scas
int3
push
push
mov
insb
int
scas
pusha
push
push
xor
loop
int
sbb
inc
sub
icebp
je
ss
jnp
jne
jns
lea
imul
scas
mov
mov
inc
dec
adc
movsb
add
mov
outsl
inc
andb
push
leave
fwait
push
subl
xor
dec
insb
lea
xchg
cmp
xor
dec
mov
mov
pushl
dec
popf
push
into
out
mov
push
mov
loopne
mov
mulb
sub
adc
mov
dec
adc
std
insl
jge
fiadds
fmulp
and
dec
mov
lcall
mov
mov
jle
ljmp
imul
jge
repnz
aas
mov
pop
mov
inc
stc
addr16
pop
sub
pop
dec
pop
outsb
or
shl
jl
and
scas
push
dec
inc
cmc
movsl
mov
sub
xor
sarb
les
add
ja
push
jle
push
js
adc
cli
popa
mov
cmp
std
mov
jge
scas
ret
adc
jecxz
mov
mov
push
cmp
jp
push
push
stos
cmp
pop
cmc
rcl
cmp
mov
fucomi
dec
dec
add
fxch
mov
pop
and
je
je
fdivrs
add
sbb
pusha
sbbl
in
aad
fs
cli
testb
pop
mov
pop
lock
and
cmc
popf
xchg
cltd
fstps
and
out
xorl
or
sub
adc
mov
outsb
enter
into
fldcw
add
cmpsl
cwtl
xlat
mov
je
sbb
dec
push
lock
and
movsb
mov
add
ret
jnp
jle
imul
cmc
mov
shll
enter
das
sbb
mov
pop
test
xchg
imul
movsb
sti
xchg
call
shrl
xor
mov
andb
das
adc
in
mov
or
sbb
pushf
sbb
mov
push
and
ljmp
xchg
xchg
call
hlt
mov
ret
popa
inc
fs
sbb
inc
mov
sbb
pop
jle
sbb
out
dec
add
jnp,pn
sbb
mov
aad
inc
scas
test
stos
cmpsb
loop
fidivl
or
jae
sub
mov
rclb
pusha
test
les
cmp
insb
imul
and
pop
outsl
xchg
sbb
mov
push
pusha
mov
xchg
mov
mov
lods
inc
por
insl
mov
mov
cli
xlat
test
mov
addr16
popa
jecxz
lods
lods
lret
popa
jg
push
cmp
fisttpll
mov
loopne
pop
and
cs
push
and
es
repz
in
daa
lods
or
popa
jno
pop
divb
lret
shrb
cmp
int3
gs
xchg
mov
out
cmc
dec
jb
leave
pop
aad
sbb
and
or
ljmp
pop
xchg
and
lock
cwtl
inc
rcll
out
test
inc
nop
cmpl
das
fisttpll
scas
adc
and
test
std
setnp
xchg
jo
mov
movsl
sbb
sub
cwtl
cmpb
lds
sbb
pushf
xor
out
mov
jecxz
and
lret
push
popa
in
movsb
hlt
mov
div
xchg
fmul
loope
xchg
pop
push
dec
cmp
dec
mov
xchg
out
xor
je
mov
repz
pop
adc
pinsrw
mov
cmc
iret
shll
mov
xchg
sub
jae
and
mov
cmp
adc
adc
pop
jo
stos
cmp
xchg
shlb
fcoml
sub
push
push
dec
adc
in
pop
mov
je
rclb
sarl
or
rcl
jne
fwait
nop
notb
mov
scas
hlt
xor
ret
xchg
jbe
mov
push
mov
not
mov
mov
mov
mov
test
mov
push
pop
mov
push
xchg
inc
sar
jb
enter
jp
jle
and
jo
shrl
mov
xchg
das
arpl
pop
jo
mov
pop
and
daa
pop
xchg
aas
cmovg
jnp
fisubs
lret
xchg
jbe
xchg
add
mov
cmpsl
ja
mov
sbb
aaa
mov
repnz
sub
xchg
xor
fs
mov
pop
pop
push
mov
jno
mov
inc
les
xchg
scas
inc
inc
rcr
ret
push
mov
sti
dec
sbb
lcall
sar
add
pop
jp
sub
data16
in
outsb
add
sub
outsl
ret
int
sub
sahf
in
sub
shrb
sarl
stos
lcallw
cmpsl
add
adc
mov
aas
int
dec
push
out
push
mov
jecxz
push
push
mov
movb
mov
dec
mov
in
imul
pusha
xchg
out
mull
fcomps
fiadds
fbstp
gs
inc
std
jno
fadds
imul
sbb
ljmp
sbb
adc
outsb
sub
cmp
pusha
cmpsl
out
pop
clc
mov
js
lea
ret
addr16
sbb
cwtl
mov
jg
js
mov
mov
int
test
cmc
cmp
dec
sub
xor
mov
rcll
cli
leave
inc
lock
and
mov
push
enter
fnsave
movsl
and
fisubl
arpl
stc
aas
pop
test
push
sub
imul
rclb
push
dec
idiv
push
cmp
and
call
mov
cmc
dec
clc
ljmp
cld
js
adc
and
push
js
jl
adc
dec
pusha
popa
cmp
dec
or
inc
and
or
loope
popf
push
mov
jns
mov
pop
push
inc
or
sub
inc
fildll
imul
fstpl
pop
jmp
mov
cmc
mov
lret
dec
push
gs
cs
sbb
imul
fidivl
fcoml
outsb
sbb
stos
out
lods
adc
fwait
pop
daa
sub
jecxz
mov
cmp
test
lods
decb
jl
inc
lock
add
jg
xor
dec
inc
sub
ds
jno
push
jmp
push
iret
push
sbb
cmp
xchg
xchg
xlat
enter
lock
daa
aam
iret
add
insl
jge
push
cmp
xchg
fldt
insl
xchg
push
and
out
push
rcrl
jl
lcall
stos
cmp
pushf
add
inc
pop
imul
fimull
dec
icebp
in
aad
in
xchg
aad
shlb
dec
in
push
fmuls
xchg
test
jnp
stos
add
je
int3
das
out
cltd
sbb
repnz
xchg
lahf
mov
mov
xchg
lods
sbb
rorl
clc
sub
pusha
pop
and
lahf
mov
test
nop
cmp
jb
push
pop
and
sub
rclb
test
imul
jns
insb
pop
rclb
pop
lods
lcall
testb
inc
push
xor
adc
mov
or
sbb
sub
cmp
inc
mov
pop
push
jno
and
pop
sub
loope
cmp
lret
cmp
push
mov
rcrb
lahf
push
jge
add
sub
lret
and
arpl
jnp
test
cmpsl
outsl
mov
imul
scas
test
jbe
les
pop
sarl
mov
adc
shl
stos
jns
cmp
ficoms
xor
cmp
les
adc
stos
and
xchg
les
lods
xchg
cmp
rcr
add
lahf
mov
dec
jo
pop
lods
out
jge
rcl
inc
mov
and
sbb
xchg
pop
je
cmp
mov
inc
out
rol
xchg
insl
mov
daa
and
out
or
test
sbb
jbe
test
insl
xchg
or
je
sbb
mov
jmp
les
lret
in
sti
mov
and
cmp
aaa
mov
scas
shlb
dec
mov
repz
insb
jns
daa
out
imul
nop
inc
mov
sti
testb
cmpsb
inc
jl
sbb
mov
xor
cmc
mov
sub
pop
xor
das
jmp
fwait
into
mov
sti
fcoml
and
popa
pop
movsl
rol
push
xor
xchg
jo
js
or
and
stc
aam
xchg
mov
cmp
addr16
add
test
cmp
xor
inc
ret
dec
movsb
imul
pop
loopne
bound
inc
sbb
imul
jnp
jno
sbb
addr16
cmc
add
loop
sahf
push
push
rolb
stc
jg
cmp
pop
nop
jae
mov
sarl
scas
pop
mov
or
sbb
inc
sbb
out
dec
mov
fsts
dec
ficomps
pop
mov
ds
aam
pusha
lret
sti
xlat
out
test
lods
int
ss
add
test
out
inc
sbb
stos
push
push
dec
cwtl
lahf
insl
xor
mov
add
sbb
lods
inc
and
pushf
testl
and
ret
adc
mov
sbb
add
movsb
lahf
xchg
in
and
call
pop
jg
pop
shll
enter
daa
sbbb
aad
jne
mov
jns
js
fdivl
pop
jno
insb
es
and
out
in
push
cmpsl
sub
sti
popf
mov
imul
fildll
les
aam
cli
icebp
das
jg
pop
andb
psraw
sbbb
pop
lods
jle
inc
cwtl
dec
push
cmp
sbb
mov
rorb
add
pop
sub
sbb
mov
mulb
fnsave
pusha
ret
dec
jp
jbe
mov
xchg
jnp
addb
dec
dec
mov
mov
pop
push
pop
cmp
repz
loopne
scas
adc
addr16
push
sbb
jnp
sub
testb
scas
jmp
aad
in
push
fdivp
adc
and
push
subb
and
dec
add
aad
sarl
mov
out
aad
push
mov
xchg
pusha
inc
mov
cmp
sbb
repz
and
sub
les
out
jnp
push
stos
fs
mov
ds
in
xor
xchg
cltd
repnz
xchg
dec
jns
jae
mov
jp
xchg
aad
dec
mov
test
mov
xchg
pop
dec
jae
xbegin
inc
xchg
pop
cwtl
push
iret
push
xor
push
mov
sbb
lock
bound
push
repnz
sbb
add
mov
outsb
fldpi
push
jge
dec
mov
cmp
out
scas
dec
or
out
bndstx
pop
imul
xor
shlw
cmp
shlb
rcr
jmp
adc
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
add
add
add
add
add
addb
add
sbb
add
add
insb
mov
add
pop
add
add
inc
add
add
imul
add
add
sub
add
mov
add
outsl
mov
add
jp
add
mov
add
test
add
mov
add
les
add
shlb
add
loopne
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
xor
cs
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsl
dec
outsb
imul
add
inc
gs
outsl
arpl
add
dec
pop
nop
add
add
add
add
incl
add
add
add
add
rolb
add
push
pop
mov
int
mov
push
push
add
imul
inc
outsb
outsl
je
bound
jb
outsb
and
and
and
fs
add
add
add
xlat
stos
js
xchg
lret
push
ds
lret
push
ds
lret
push
ds
lret
push
ds
lret
push
ds
lret
push
outsl
jmp
ds
lret
push
ds
int
ds
lret
push
ds
imul
push
inc
add
dec
add
add
add
add
add
add
add
and
add
add
adc
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
fsub
add
add
add
add
add
faddl
add
fsub
add
or
add
push
push
pop
xor
add
add
jo
add
adc
add
add
add
add
add
push
pop
xor
add
add
pusha
add
add
add
add
add
add
jb,pn
jb
add
add
adc
add
loopne
add
add
add
pop
add
inc
add
rolb
add
xor
add
pop
and
mov
mov
add
add
add
add
add
cmpsl
sbb
add
jl
in
fcoms
xor
test
xchg
push
xchg
ss
xchg
inc
cmp
inc
inc
xchg
push
sub
inc
addl
jne
stos
mov
aas
scas
ret
cmc
adc
stos
mov
leave
or
dec
cmp
ret
or
inc
adc
mov
push
pop
inc
rol
and
fisttps
insb
stos
mov
lods
xchg
sub
adc
nop
xchg
dec
jp
pusha
jae
mov
nop
dec
cwtl
mov
add
xchg
lret
add
testb
adc
movl
mov
push
mov
mov
sbb
inc
mov
ss
inc
push
mov
scas
lds
mov
or
out
push
or
shll
leave
add
jg
dec
into
sahf
lret
pop
xchg
hlt
mov
cmp
mov
push
push
insb
addb
cmp
cs
iret
xchg
daa
aam
shl
lahf
cmpsl
flds
xchg
mov
add
mov
sbb
cmp
jp
dec
jno
std
lods
adc
aas
sub
xchg
dec
pop
cld
pop
sub
adc
aas
sub
test
push
sub
xchg
xchg
mov
sub
cmp
and
lods
cmpb
add
lret
sti
arpl
inc
xor
daa
bound
addr16
lret
out
xchg
mov
in
int3
in
mov
lcall
sub
cli
nop
pop
filds
ds
test
scas
sbb
xor
mov
and
push
or
mov
lds
ficompl
adc
sub
dec
fs
pop
xor
dec
je
inc
sbb
inc
pop
cmpl
push
push
mov
lods
push
sti
leave
ds
jne
push
push
jne
jmp
testb
push
fs
and
mov
addr16
jne
jl
call
iret
fisubs
or
xchg
mov
fwait
cmpsl
in
or
pushf
xchg
push
mov
fnstcw
add
inc
adc
clc
fsubrp
in
scas
xor
aas
mov
ds
jge
cmp
aaa
aam
jae
sti
cmp
inc
jno
out
push
stos
sub
fisttpl
in
clc
jb
fwait
cmp
cmp
andb
sub
jno
jno
adc
sub
movsl
push
sbb
adc
in
xor
lret
cmc
shrb
cmpsl
das
or
enter
dec
daa
insb
dec
das
or
and
orl
jle
push
outsb
sahf
xchg
insl
sbb
lods
push
test
cmpl
dec
adc
mov
fs
mov
add
add
incb
arpl
fstp
test
adc
add
divb
adc
arpl
mov
pop
inc
xor
sub
pop
xchg
shlb
mov
sub
push
xchg
dec
ljmp
pop
add
fstps
out
adc
scas
ja
cmpb
dec
xchg
jae
sub
je
sti
mov
fstps
pmaxub
hlt
test
jle
mov
jmp
jnp
inc
inc
pop
jno
sti
jbe
js
xchg
lea
sub
rcll
add
shll
xor
pop
jle
fsubl
mov
mov
fimull
mov
add
test
aaa
arpl
add
jp
xor
fcmovu
push
push
std
jae
mov
pop
sti
inc
xor
fwait
add
out
fs
insl
pop
add
fldt
mov
mov
popa
sub
inc
stos
into
outsb
insb
and
test
and
jl
cmp
mov
ror
adc
imulb
sub
lock
pop
hlt
dec
inc
js
rclb
push
xchg
arpl
mov
in
push
lcall
push
out
lods
or
mov
sub
jecxz
pop
lret
sbb
mov
pop
jg
or
mov
cli
int3
stc
call
mov
aad
push
sub
mov
loope
ret
insl
test
pop
stc
out
inc
push
cs
push
mov
pop
fdivrs
push
adc
xlat
loopne
mov
outsb
xor
push
stc
in
in
pop
mov
popf
cs
scas
add
inc
rcll
pop
movl
cwtl
out
adc
inc
and
mov
inc
cmp
cli
cld
mov
dec
lea
decl
scas
mov
into
fstps
push
mov
push
int3
dec
testb
in
xchg
mov
xchg
xchg
stos
cmp
lods
repz
lds
sti
dec
pusha
mov
scas
shrl
sbb
and
jl
pop
arpl
stos
and
or
sbb
int
push
mov
jmp
in
roll
mov
imulb
out
mov
ljmp
bound
insl
mov
push
daa
jns
xor
popa
test
push
or
out
stc
mov
mov
xorl
movsb
mov
mov
dec
add
shrb
mov
pop
arpl
negl
adc
stos
lds
pushf
dec
push
ret
jo
out
lahf
jne
aad
xchg
mov
stos
inc
addr16
mov
lret
movsb
mov
int
xor
cmp
adc
adc
jo
or
xchg
sub
addr16
cmp
pop
add
jge
movsl
or
scas
loopne
or
xor
push
add
ja
gs
shl
cltd
ljmp
or
addr16
lock
lods
movb
push
xchg
les
arpl
jb
adc
inc
sbb
push
cwtl
xchg
pusha
das
mov
mov
lds
dec
call
mov
push
shl
inc
inc
fstpt
scas
or
arpl
les
and
icebp
pop
or
adc
and
cwtl
add
pusha
cmp
dec
add
mov
mov
and
sub
in
jae
pop
pop
filds
data16
pop
add
or
add
or
jmp
xchg
stc
test
jno
xor
add
inc
dec
xor
xlat
sub
and
xlat
ss
andb
cmp
mov
int
mov
mov
xlat
sub
xchg
xchg
in
push
jecxz
xchg
jmp
push
in
out
xchg
cmc
repz
bound
push
lods
loop
sbb
jmp
jle
loope
aaa
mov
mov
loop
js
push
lret
and
psubusb
jo
xor
ret
stc
mov
popf
mov
subb
mov
and
lds
and
fbstp
pop
cmp
popf
cmp
cltd
push
mov
xchg
lahf
xor
imul
sub
cltd
lret
pushf
in
out
dec
mov
xchg
ds
rorw
mov
xor
jo
mov
sbb
ljmp
pusha
inc
scas
fadds
hlt
cmp
dec
movsl
incb
push
xchg
xchg
add
or
xchg
add
movsb
mov
push
pusha
sub
pop
sbb
mov
fsubrl
enter
mov
mov
out
push
mov
enter
jecxz
xor
mov
mov
push
xchg
xchg
insb
push
dec
dec
sti
ja
push
push
push
lds
addr16
jmp
mov
sbbl
test
scas
xchg
int3
sarl
pop
xor
shlb
push
mov
jl
bound
xchg
push
xchg
hlt
inc
pop
mov
popf
lods
int
rcrb
or
fs
faddl
shlb
cmpsl
stos
sub
jp
aaa
loopne
sahf
xchg
leave
scas
mov
stos
cltd
cmp
and
pusha
arpl
stos
jno
pop
lods
cmp
loop
and
fstps
mov
inc
sarl
loop
fs
lahf
mov
lods
insl
js
insl
adc
lea
loope
fldenv
scas
leave
jmp
ja
hlt
adc
xor
iret
push
push
mov
into
mov
jb
add
add
sbb
cmc
in
push
pop
test
imul
loopne
rcll
fldt
test
hlt
push
psrlw
andb
inc
or
or
jno
insl
outsb
std
mov
cmp
dec
pop
pop
lea
insl
push
repnz
sbb
fwait
pop
push
sub
outsl
scas
in
add
inc
lds
gs
and
popf
pop
mov
push
imul
sub
adc
jmp
jo
adc
jnp
mov
test
rorb
adc
stos
mov
xchg
add
imul
das
movsb
int
inc
jnp
movsl
in
mov
int
outsb
outsb
push
aad
mov
in
inc
dec
xor
mov
rcrl
push
iret
inc
fmuls
jl
push
or
cmc
dec
inc
cmp
andb
cli
hlt
leave
imul
xor
mov
les
pop
xchg
in
jecxz
ss
or
mov
das
mov
mov
fs
insb
cmp
aas
pop
ror
outsb
shrl
test
push
xchg
jge
pop
rcl
icebp
xor
aad
jle
or
push
aas
sahf
flds
leave
or
mov
or
push
test
xchg
mov
pop
xchg
xor
or
sbb
xor
aaa
xchg
cmpsb
and
inc
jmp
cmp
sub
nop
push
cltd
das
test
xchg
pushf
insb
jo
inc
cmp
sbb
ret
cld
scas
and
push
mov
pushf
sub
mov
daa
push
in
clc
pop
inc
sti
mov
in
mov
fwait
popa
sub
test
mov
sbb
in
cmc
es
fcmovb
dec
pop
popf
push
lret
pop
mov
out
hlt
dec
dec
xchg
pop
dec
xor
pop
jge
sbb
lods
inc
push
sbb
sub
clc
leave
or
mov
lea
in
scas
shlb
stos
push
test
imul
add
sbb
fmull
icebp
movl
arpl
shl
sbb
dec
xchg
repnz
bsr
sbb
push
cmp
stos
lcall
or
push
ret
scas
xchg
jnp
je
cmpsl
jg
and
inc
fcoml
sahf
mov
test
dec
push
insl
and
pusha
push
xchg
ret
lock
mov
sub
stos
lds
je
fstpt
sub
adc
pusha
popf
pop
or
lret
icebp
mov
sub
sbb
shlb
fbstp
les
fcmovbe
inc
mov
sti
xor
loop
cwtl
stos
stc
mov
ss
scas
jecxz
xor
mov
or
sbb
lods
push
ljmp
adc
sbb
dec
addr16
add
cmp
addl
fldenv
imul
adc
cmovb
pop
out
pop
repz
sub
fucomp
imul
lahf
mov
xchg
xchg
pcmpeqw
add
out
add
adc
outsl
mov
push
mov
mov
inc
fisubrl
cmc
es
mov
fdivs
mov
push
lea
in
ja
pop
mov
or
mov
cmpsb
pusha
sbb
dec
jno
imul
aaa
insl
mov
mov
mov
pushf
push
pop
cmp
cmp
mov
out
call
pop
fildl
xor
std
addr16
movsb
in
mov
sti
pushf
or
mov
aas
inc
lods
push
loop
cmp
dec
ja
sahf
test
mov
sbb
popf
xchg
jno
ds
fnstcw
jae
lahf
fnstcw
xor
adc
imul
mov
mov
and
or
lret
les
pop
lea
jae
or
jbe
xlat
adc
sbb
pop
mov
loope
sub
shlb
inc
xor
lret
fwait
loop
rcr
jecxz
xchg
daa
push
inc
rorl
ja
jno
pop
dec
sbb
dec
pop
fnsave
or
mov
testb
and
fcoms
into
mov
in
xchg
push
addl
xchg
gs
pop
or
push
add
or
jecxz
fwait
je
daa
mov
xchg
xchg
into
sub
jne
outsb
inc
sbb
inc
jo
gs
cwtl
inc
imul
sar
and
mov
and
sti
mov
les
jecxz
xor
aad
iret
addr16
jne
aad
cli
pop
adc
in
jnp
mov
loope
and
xor
or
pop
pop
imul
mov
int
xchg
adc
test
xchg
add
pushf
shll
cmp
popf
bound
test
adc
call
aad
test
push
inc
jge
pushf
push
push
sti
xorb
mov
mov
sbbb
fsubrs
jae
sub
mov
pop
mov
mov
sahf
add
add
jb
and
xor
or
push
push
icebp
and
ret
rclb
jg
mov
xchg
add
test
add
adc
adc
loopne
or
fidivl
push
sahf
dec
push
sub
xchg
dec
xchg
scas
out
pop
sbb
sbb
fistpll
jl
pop
int3
or
addl
mov
push
ljmp
leave
subl
push
aam
ljmp
xor
sub
dec
dec
scas
scas
mov
cmp
hlt
stos
pop
mov
xchg
insl
jmp
je
iret
or
in
xchg
rolb
sub
adc
xchg
sbb
xor
ss
jnp
mov
pop
lret
pop
fcomps
pop
adc
mov
ja
sar
movsb
or
lods
pop
sub
idivl
dec
push
mov
add
subl
dec
pop
insb
mov
cld
lret
adc
mov
mov
pop
clc
cmp
lea
jne
inc
or
jbe
mov
fidivl
dec
cmp
mov
cmp
fdivl
lds
pop
cmp
push
xor
sub
lret
mov
sub
lea
ss
adc
and
sbb
les
fcoml
in
iret
testl
add
cli
mov
lds
es
cltd
mov
nop
decb
jno
xlat
sub
popf
pusha
add
imul
push
ljmp
cld
sbb
out
lods
mov
and
repz
sub
mov
fcompl
pop
cs
dec
mov
sub
inc
and
push
das
sti
adc
lods
aad
pop
sbb
lret
test
inc
cmp
test
sbb
subl
outsb
pop
gs
insb
jmp
rcl
xchg
mov
scas
xor
ret
push
inc
xchg
sbbl
cli
popl
in
lds
pop
sub
lea
in
pop
mov
loope
xchg
lds
or
in
dec
mov
lret
cmp
ljmp
and
mov
ret
or
jns
pushf
addr16
sbb
inc
decb
cmp
imulb
add
xchg
sub
scas
jne
je
xchg
rolb
inc
lea
in
lods
aaa
mov
inc
dec
outsb
and
gs
push
fdiv
addr16
xchg
adc
inc
mov
scas
pushl
mov
icebp
dec
dec
and
sbb
mov
pop
adc
pop
mov
stos
mov
mov
mov
test
js
and
push
mov
cmp
jns
xchg
jl
xchg
sbb
lds
cmpsl
inc
neg
insl
lahf
push
stos
jns
adc
xor
lods
mov
push
enter
mov
mov
mov
cmp
or
push
sbb
pop
or
fs
cmp
fldt
jae
inc
pop
mov
cld
aas
mov
jnp
jmp
sub
cltd
sbb
movsl
test
and
and
dec
out
push
sbb
inc
lret
mov
xor
clc
xlat
xlat
fwait
cmp
inc
daa
inc
insb
iret
inc
and
cmc
or
jbe
iret
mov
das
jns
adc
mov
iret
pop
sub
and
mov
into
and
adc
mov
sub
cmp
adc
insl
sbb
jbe
daa
bound
ret
leave
cld
and
hlt
daa
xor
shll
int
dec
sbb
dec
icebp
js
nop
adc
xor
insl
imul
insb
mov
ret
clc
arpl
add
int
call
xchg
sub
fstl
leave
std
insb
add
xchg
leave
push
xor
cmpsl
add
sti
shl
insb
das
mov
and
xor
xchg
insb
xchg
pop
and
pop
repz
mov
mov
dec
scas
xor
mov
push
fwait
jae
inc
in
scas
mov
es
out
mov
adc
sub
inc
push
insl
or
xor
fists
in
test
add
jle
rol
or
cs
pop
sub
dec
xor
jno
iret
rcl
test
mov
mov
mov
push
outsb
pop
inc
jne
xor
bound
leave
fmull
cmp
xchg
pushf
push
inc
xor
dec
and
dec
jge
sbb
jno
push
inc
fnstenv
clc
mov
jb
sbb
xchg
dec
aad
call
jge
jmp
xchg
lock
lret
sub
in
cmp
fs
shlb
leave
and
mov
inc
sti
in
in
stc
add
mov
xor
in
fwait
cmc
fistl
pusha
mov
jno
cmpsb
into
in
push
bswap
in
jno
pop
adc
mov
jmp
mov
es
xchg
js
out
adc
dec
incb
divb
test
xor
adc
adc
testb
sbb
stos
pushf
sub
aaa
outsl
test
mov
mov
sub
pop
pop
in
inc
push
pop
mov
andl
stos
aaa
fwait
xor
lods
lock
adc
icebp
mov
sbb
lret
nop
or
pop
mov
jecxz
out
or
add
inc
xor
xor
adc
inc
cmpsl
add
cmpsb
jge
and
sbb
sub
jp
mov
and
lds
xlat
clc
insb
mov
stos
sbb
xor
xchg
dec
mov
mov
pop
dec
insb
lahf
cmp
test
add
les
cmpsb
aad
dec
add
out
mov
push
fimull
shlb
sub
into
shrl
loope
scas
cmp
test
jg
jae
shll
cmp
test
pop
ss
xchg
adc
or
jo
pop
mov
dec
dec
push
outsb
push
loop
idivb
movsl
cmp
and
or
gs
fcmovnbe
inc
enter
or
cmp
sti
fs
inc
stos
mov
add
adc
xchg
icebp
sahf
loopne
jae
gs
in
fcmove
fcoms
mov
ja
or
sub
mov
pop
inc
cs
loopne
jb
xchg
pop
insl
sbb
leave
inc
dec
orl
xchg
ja
pop
fisttpll
pop
shlb
popa
push
sub
insl
push
jle
mov
lock
inc
cmp
push
jge
pop
jp
lds
push
aam
ret
fimull
add
mov
repz
adc
out
das
add
jne
push
dec
test
fdiv
out
stc
mov
lods
pop
cmc
jne
sti
adc
xchg
ja
xlat
or
std
fstpl
sub
jbe
xchg
dec
jno
sarl
sbb
sub
pop
push
mov
aas
scas
arpl
adc
dec
xor
xor
inc
lahf
lea
jmp
addr16
hlt
inc
subb
imull
ljmp
fwait
dec
mov
sbb
mov
hlt
fmull
jno
adc
xchg
inc
sub
pop
cli
movsl
mov
push
je
repz
test
popf
movsb
pusha
mov
adc
in
sbb
xor
lahf
pop
das
cmpsb
adc
movsb
inc
cmp
jge
and
inc
loope
dec
scas
movsl
and
mov
jbe
sbb
mov
ds
pop
lock
into
ret
in
leave
ror
repnz
push
push
cmp
lret
sbb
inc
jns
inc
or
movl
mov
push
in
push
fimull
mov
add
dec
repz
loop
imulb
imul
mov
inc
mov
push
lods
mov
mov
and
mov
xchg
sahf
or
sbb
bound
mov
aas
mov
xor
test
add
decl
jb
dec
push
inc
xchg
movsl
adc
mov
mov
loop
mov
lahf
inc
popa
cmp
mov
pop
add
cmp
xor
jg
mov
jns
popa
stos
cmp
jl
mov
or
mov
mov
mov
mov
aas
loop
out
movsl
scas
and
outsb
pusha
xor
outsb
insl
fs
mov
push
pop
push
sbb
fisubrs
xchg
xor
push
and
sub
xchg
mov
dec
imul
int3
orl
mov
out
scas
inc
iret
lds
ficompl
sub
xchg
dec
inc
inc
mov
jmp
stos
xchg
jp
scas
je
fsub
pop
outsl
jl
jge
mov
pop
xchg
lock
and
cmp
mov
jge
mov
or
jmp
jmp
test
xchg
adc
sbb
out
sbb
and
aas
or
outsl
xor
pop
stc
enter
pop
mov
xchg
test
in
adc
add
jmp
pushf
mov
mov
setnp
inc
inc
filds
popa
dec
cmp
mov
push
xor
pop
fwait
cli
xor
dec
ja
imul
out
test
loopne
sbb
out
lea
daa
ljmp
cmc
scas
dec
jb
outsl
enter
sbb
aas
mov
movsb
mov
sub
sub
mov
pop
mov
pop
iret
xor
mov
add
mov
jno
fsubrs
jne
xor
out
and
inc
sbb
mov
ret
or
insb
pushf
mov
mov
roll
mov
xor
sub
lods
pop
mov
pop
add
movsl
add
insl
xchg
push
in
sbb
xchg
and
mov
lods
nop
or
cld
mov
test
sbb
inc
mov
test
ret
push
imul
std
adc
dec
int
mov
sbb
pop
in
inc
mov
cmpsl
ljmp
out
xchg
adc
ficoml
outsl
and
int3
add
insb
sub
lret
adc
imul
adc
loopne
add
outsb
and
jb
inc
adc
cmp
dec
mov
jbe
mov
inc
nop
int
cmp
fwait
je
push
add
xor
inc
daa
out
dec
sbb
or
cltd
xchg
jge
bound
pop
mov
jo
sbb
jno
push
lods
add
inc
add
push
in
mov
or
jmp
std
rorl
in
mov
cwtl
inc
dec
sti
dec
jle
mov
iret
mov
cli
jmp
dec
lret
outsl
inc
xchg
jne
incl
cmp
test
out
adc
pop
lds
outsb
mov
jbe
push
xchg
pop
iret
and
xchg
or
mov
dec
mov
into
pop
mov
pop
and
into
and
xchg
daa
pop
cmpsl
pop
jmp
gs
imul
lret
push
adc
and
xchg
cmc
aam
and
xchg
jnp
aam
enter
shl
pop
inc
jg
mov
push
sub
jb
sub
out
aas
repz
pop
in
aas
pop
negl
sbb
and
and
fimull
aaa
movsb
push
sbb
cmp
jno
clc
lds
sarb
mov
jle
lret
ret
cmp
lcall
aad
mov
stc
out
movsl
xchg
adc
jb
pop
or
cmp
fildll
adc
imul
jb
testl
push
stos
xor
sub
xchg
notl
fs
arpl
cmp
mov
cmpsl
sub
and
cli
lea
mov
mov
xchg
xchg
mov
aad
mov
enter
mov
push
ret
xchg
mov
ret
arpl
xchg
dec
sbb
scas
xor
popw
imul
inc
pop
aad
pop
mov
cmpsb
testb
add
int3
or
jmp
xchg
add
inc
inc
enter
pop
cmp
push
and
aad
push
jle
sti
push
aam
sti
sbb
orl
pop
inc
roll
movsb
push
arpl
inc
push
ret
movsl
sbb
shlb
mov
idiv
mov
aam
adc
xchg
ds
dec
mov
cmp
call
cmc
and
xchg
fldl
add
mov
mov
lahf
shl
inc
or
std
leave
push
cs
dec
inc
cmp
out
es
and
jbe
movsb
add
ja
fcmove
dec
dec
adc
mov
je
mov
mov
clc
sub
dec
loop
fbstp
xchg
mov
mov
xchg
cmp
jmp
lea
jb
sbb
push
cmp
fsubrl
hlt
dec
cmpsb
outsb
mov
cmpsb
dec
fchs
adc
sbb
into
xchg
insb
jle
pusha
mov
les
xor
cwtl
and
out
in
mov
out
add
imul
push
aam
faddl
ficoml
or
fcmovnu
cmp
add
fsubrs
inc
addb
mov
jle
mov
mov
mov
fsubrs
sarl
mov
imul
mov
jp
jns
adc
xchg
insl
push
adcl
repz
fs
sub
pop
movsb
lcall
cmp
arpl
lea
popf
int3
into
xorl
fisubrs
inc
adcb
xorb
inc
sbb
and
ret
pop
out
dec
shrl
dec
add
add
lea
scas
sub
daa
push
jnp
fstps
sub
mov
mov
testb
push
hlt
sub
pop
inc
cmpsl
cmpsb
int3
cmp
lea
ret
dec
outsl
mov
jg
mov
fwait
pop
fdivrp
andb
pop
xchg
mov
xor
pusha
and
push
iret
push
idivb
mov
add
inc
ljmp
cmp
pop
or
aaa
lds
sbb
lahf
out
sub
xchg
mov
cwtl
xor
pop
lret
ja
or
sbb
bound
pushl
xchg
pusha
sbb
in
std
xchg
nop
or
mov
xchg
fildl
jo
out
in
enter
divl
xchg
repnz
and
ss
sbb
cmpsl
fbld
cmc
insb
out
dec
adc
jl
int
or
iret
dec
fdivrl
in
sahf
mov
popf
fwait
rorl
pop
pop
adc
in
xor
sti
imul
addl
mov
movsb
sub
adc
test
icebp
lea
ret
jmp
pop
cmp
mov
push
dec
movl
jb
mov
jns
jno
clc
or
sub
cmpl
icebp
jb
xorb
cmp
into
jg
cmp
add
adc
pop
mov
mov
lds
sbb
clc
aaa
sbb
rorl
xchg
clc
or
pop
dec
add
into
into
mov
jns
dec
jb
cmp
loope
cli
adc
stc
lods
arpl
jno
test
jae
out
pop
cmp
pop
je
cmp
arpl
and
mov
sahf
outsl
stos
je
aas
test
decl
lahf
xchg
fucomip
enter
nop
ds
shll
shlb
ljmp
xchg
inc
ror
and
dec
addb
mov
dec
lret
mov
and
call
jns
shr
test
test
mov
cmp
mov
addr16
xchg
cmc
cltd
enter
mov
ret
sub
aam
aam
fisubrl
popa
xlat
mov
sbb
cmpsb
xor
xchg
fsubr
add
sbb
inc
sub
jo
lods
mov
push
insl
outsl
push
inc
nop
rclb
mov
fldl
movsl
jg
lock
rcl
mov
sarb
out
repnz
adc
daa
movsl
shlb
dec
push
stc
pop
mov
imul
repz
adc
inc
repz
xchg
nop
scas
dec
outsb
andb
out
aad
clc
out
stos
push
inc
fidivl
pushf
daa
cmp
int
sub
call
push
and
or
rcr
pop
adcl
cmp
je
leave
mov
imul
shlb
andl
hlt
ss
and
mov
aad
cli
dec
cmp
in
imul
in
lods
scas
xchg
add
or
sbb
cmp
ss
push
fsubl
pop
jecxz
dec
arpl
bound
scas
nop
fldcw
fs
mov
add
std
add
or
pop
jbe
push
outsb
xchg
push
adc
out
cs
mov
cmc
pop
mov
mov
cmpsl
int
mov
inc
push
call
sub
imul
push
mov
lea
cwtl
push
repz
not
add
cli
enter
shl
sbb
jnp
cmc
dec
or
mov
ds
test
aas
shrb
mov
pop
xchg
add
outsl
cwtl
xor
jmp
push
add
fstpl
lret
xchg
je
cmp
sub
shll
jnp
andl
xchg
jb
mov
lock
jl
cld
jmp
push
into
call
fiadds
inc
movsb
gs
sbb
jge
adc
xor
mov
jns
jmp
mov
jge
or
mul
xchg
fdivrs
and
mov
data16
cld
icebp
adc
lahf
sti
les
or
dec
mov
mov
rdmsr
loop
mov
insl
pop
adc
xchg
xchg
sbb
jbe
je
rorb
arpl
loop
and
lret
inc
or
push
sub
or
stos
xchg
push
dec
clc
movsb
sahf
insl
sub
cmpsb
movsl
xor
shl
dec
idiv
clc
or
push
or
cmpsb
jno
imul
sub
sahf
pop
cltd
daa
js
sub
fstps
faddp
scas
mov
leave
popf
and
es
adcl
jo
fcompl
inc
fs
sbb
les
in
mov
fisubl
cmp
scas
add
jns
sub
out
pusha
pusha
cli
jo
jb
pop
test
sbb
mov
mov
movl
pop
lahf
push
and
sub
or
inc
mov
cmp
mov
fwait
aam
pusha
pop
xchg
inc
and
dec
cmp
insl
cmp
aaa
sar
sbb
lods
mov
inc
cmc
mov
jne
repz
push
sbb
mov
bound
jnp
pop
cmp
sbb
xchg
xchg
lret
inc
push
ss
in
inc
int3
and
loopne
outsl
xchg
outsl
jne
clc
jle
aas
into
mov
scas
test
mov
sti
andb
ds
jae
cli
jo
push
imulb
ret
mov
inc
xchg
xor
lds
xadd
cmpsl
fs
cltd
push
adc
pop
imul
arpl
mov
mov
xchg
xchg
fidivrl
add
sbb
outsl
shll
xor
or
push
pushf
sbbl
jnp
push
pop
imul
subb
cltd
or
sbb
ljmp
mov
into
ficompl
jae
nop
bound
xchg
jecxz
xchg
jecxz
sbb
add
add
dec
mov
xlat
mov
ss
test
push
xor
clc
sub
cmpsb
xor
stos
xchg
push
pop
inc
mov
into
add
les
xlat
jcxz
push
adc
hlt
push
fsubrp
mov
stos
inc
and
xor
stos
popa
lcall
add
inc
lret
adc
sti
cmp
dec
in
addl
pop
scas
cmpb
mov
ljmp
sarl
sub
push
xor
test
mov
mov
jle
int
mov
xchg
ret
ja
sahf
fcompp
aam
adc
loopne
imul
rorl
nop
jecxz
xor
cmpsb
fmuls
popf
ljmpw
push
pop
test
pop
imul
xchg
adc
mov
adc
test
ja
push
in
jb
hlt
aaa
pop
mov
test
pop
popa
sti
ljmp
cmp
mov
imulb
sub
std
cmp
xor
stos
mov
or
and
dec
nopl
loop
fisubs
xchg
ja
xchg
in
pop
mov
or
pusha
scas
pop
sbb
fldl
pop
popa
inc
insb
lds
jmp
ss
dec
mull
inc
dec
cltd
imul
aaa
mov
shrl
xor
cmc
clc
xchg
or
and
imul
fstl
push
out
and
mov
into
xchg
lods
inc
or
fnsave
fdivs
cld
out
cmpsb
or
aaa
mov
addb
stos
xchg
test
ds
push
adc
das
sbbl
cmc
lock
iret
out
push
xchg
xchg
jge
adc
rclb
or
xchg
and
nop
mov
lods
xchg
xor
ss
xchg
xor
cmp
cwtl
mull
add
insl
adc
fwait
aaa
and
mov
cltd
lcall
inc
dec
insb
dec
xor
xchg
push
enter
or
sbb
je
cmp
push
push
negb
adc
pop
jl
xchg
je
mov
or
loope
hlt
add
pusha
cmp
sbb
cmpl
inc
inc
add
pusha
adc
pop
movsl
push
pop
mov
outsb
sub
inc
xchg
pop
push
les
daa
lock
sbb
xchg
push
lods
rcl
dec
dec
in
mov
clc
in
xor
arpl
cmp
out
aam
aaa
cmp
push
xchg
jno
cmp
out
push
iret
lock
push
ret
pop
mov
aad
testl
mov
loopne
mov
push
cs
xchg
sbb
dec
jb
mov
lods
jae
call
stos
sahf
xlat
pusha
dec
jb
and
xchg
aam
add
inc
in
or
inc
roll
inc
subb
adc
mov
aam
cmp
lcall
aas
and
add
in
shl
add
les
add
int3
gs
sub
add
out
sar
jmp
int
mov
push
jecxz
push
dec
jp
mov
sbb
or
sbb
lret
orb
or
lret
jge
lock
outsl
std
mov
pusha
mov
mov
cmp
stos
mov
aaa
nop
scas
arpl
mov
idiv
je
dec
mov
sarb
nop
mov
dec
test
sub
leave
out
xchg
adc
adc
psllq
or
mov
lods
inc
ds
mov
push
movsl
pop
mov
mov
pop
dec
push
adc
jmp
mov
add
jbe
imul
adc
imul
and
mov
test
ds
fstps
inc
ljmp
sti
scas
data16
jp
fldcw
adc
ds
xchg
lods
je
dec
int
dec
inc
mov
sbb
mov
call
jno
push
mov
into
cmpsl
adc
mov
inc
hlt
push
loope
mov
adc
bound
xlat
mov
inc
test
push
jl
dec
sbb
sbb
mov
movb
idivl
cmp
push
lods
mov
fsubrs
stc
mov
and
pop
outsb
subl
mov
cltd
mov
orl
xchg
or
xor
ljmp
shl
shrb
pop
push
inc
cwtl
pop
pop
stc
inc
pop
in
lods
mov
mov
sbb
ja
std
adc
inc
pop
xorb
adc
cmp
and
dec
xchg
inc
add
fucom
adcb
sbb
sbb
adc
iret
or
push
cmp
enter
mov
lods
insl
sub
lret
mov
sti
xchg
jb
ds
loopne
pop
or
jl
insl
rcrb
es
ja
sbb
jo
mov
aas
mov
sti
sub
popf
fwait
test
cli
or
dec
rolb
lret
enter
cmp
cmpsl
lods
mov
and
cmp
adc
imul
add
ljmp
test
ret
mov
ljmp
push
movsl
pop
xchg
lret
test
loope
aad
pop
dec
out
popf
cli
sub
jmp
jg
in
pop
mov
mov
cmp
dec
mov
out
and
cmp
or
mov
jmp
sub
cmc
dec
xchg
cld
arpl
mov
inc
divb
jbe
inc
lea
mov
les
out
xorb
fstl
mov
dec
sahf
cmp
jle
lahf
in
out
inc
xchg
xor
jecxz
popa
aam
in
cld
cwtl
sub
xor
fildl
in
add
jo
int
cmpsb
mov
repnz
push
mov
ret
xchg
mov
insb
gs
mov
mov
mov
lret
cmp
xchg
xor
insb
dec
outsb
rolb
push
arpl
xchg
inc
test
inc
adc
fs
movsl
popa
mov
pushf
mov
imul
sbb
add
cmp
pushf
xchg
mov
in
inc
or
dec
test
mov
ja
js
ret
fstl
in
aad
mov
int3
push
sub
pop
int3
lcall
lret
std
mov
imul
shl
js
testb
leave
xchg
and
xchg
cli
cmpsb
fs
pop
push
xor
xor
xchg
call
inc
mov
adc
fucomip
sahf
jmp
cmp
cltd
in
jmp
inc
jb
jae
push
push
push
dec
and
inc
push
aam
in
insb
adc
loopne
cmpsb
xchg
or
loopne
jae
mov
mov
ret
call
xor
repz
adc
pause
pop
mov
aaa
add
push
push
negb
popf
rorl
xor
nop
sbb
cld
stc
sub
sbb
andl
sub
dec
pusha
cmp
adc
sub
repz
mov
fstp
adc
mov
push
call
test
jno
in
pop
xchg
aad
mov
lret
lods
icebp
jbe
jno
cld
push
arpl
adc
adc
sbb
sbb
rcrb
sbb
lods
cmp
or
repnz
data16
cmp
xlat
mov
fcomps
insl
imul
lock
sub
sub
xchg
push
pop
icebp
mov
rclb
xchg
dec
push
jo
cltd
outsb
sbb
popf
inc
jp
sub
sahf
fcmovnbe
scas
fidivrs
cmp
scas
mov
xchg
shll
adc
popa
push
dec
fs
add
sbbb
mov
cmp
std
lahf
jecxz
sbbl
or
pushf
cmpsb
pusha
leave
inc
mov
and
test
es
mov
arpl
dec
pop
mov
sbb
scas
mov
cmpsl
les
jnp
int
lds
adc
cli
test
out
clc
clc
pop
or
jp
and
cli
jl
mov
scas
cmp
les
scas
xor
fimuls
pusha
test
pop
pop
fs
mov
and
or
fcomps
in
js
ret
arpl
je
pop
stc
sbb
dec
pop
inc
imul
add
pop
and
xchg
lret
dec
pop
jmp
out
push
and
inc
or
lret
mov
mov
int
mov
xor
xor
adc
mov
cltd
or
mov
cmp
cmpsl
xor
mov
mov
loope
adc
ret
add
sarb
iret
imul
jecxz
stos
pop
xchg
push
adc
cltd
dec
addr16
cmp
mov
mov
push
in
dec
dec
int
in
rcrb
addb
xchg
push
fmull
scas
mov
mov
shrl
test
xchg
out
push
jl
mov
xchg
mov
dec
cmp
cmp
lea
stc
rcll
cmp
adc
.byte
sbb
add
mov
scas
sbb
insb
lcall
inc
scas
xchg
jg
push
sbb
cltd
mov
jmp
dec
mov
push
mov
lret
and
repz
push
push
stos
or
sub
mov
jmp
or
cmp
sbb
push
dec
std
mov
add
sbb
test
mov
jmp
jae
pop
push
push
fs
xor
adc
movsl
sarb
loopne
fisubrs
int3
ds
fwait
lods
jg
add
adc
loope
notl
aas
xchg
faddp
fildl
push
jg
test
jmp
mov
lahf
mov
xorl
jle
mov
iret
or
sbb
sbb
notl
push
out
push
inc
or
outsl
ret
adc
in
pop
mov
test
movsb
pop
fidivrl
xchg
mov
fdivl
orl
test
pop
std
pop
xor
and
jbe
addr16
inc
pop
mov
test
pop
pop
lahf
sbb
sarb
xor
out
movsl
leave
imulb
movsb
jae
dec
loope
sub
sbb
nop
cli
inc
and
loop
ds
pop
movb
je
int3
scas
mov
insb
xor
rcll
xchg
loope,pt
cmp
pushf
test
test
fistl
xchg
in
adc
popf
mov
and
outsl
xchg
jecxz
int3
mov
push
fisubrs
repnz
sub
fcoml
es
jns
pop
cmpsb
or
add
fwait
pop
xlat
stc
icebp
pusha
jp
shr
push
sbb
add
jle
dec
pop
sahf
lods
dec
and
cmp
into
jmp
fs
outsb
inc
nop
and
dec
pop
jl
jecxz
dec
push
call
dec
testb
subl
je
or
loope
arpl
push
dec
testb
add
xchg
inc
jno
inc
xlat
mov
or
mov
push
add
xchg
scas
fnsave
sbb
divl
stos
or
nop
repnz
cmc
dec
adc
mov
lds
lds
add
stos
push
pop
int3
cvtps2pi
shrl
inc
ljmp
es
xchg
movl
aas
push
js
add
test
sub
or
pop
repnz
ret
push
rcl
lods
lods
shlb
into
loop
jle
cld
cs
adc
inc
bnd
out
mov
scas
adc
mov
jbe
xor
jle
out
dec
push
dec
ss
bound
adc
push
dec
dec
jle
mov
idivl
xchg
cmp
out
inc
push
cld
frstpm(287
inc
or
popaw
hlt
add
mov
jp
dec
sub
inc
cs
pop
gs
inc
dec
imul
les
mov
cltd
ret
adc
call
lret
xlat
jns
pop
jge
lahf
insl
inc
cmc
push
loop
xchg
gs
jmp
les
push
add
lret
or
xchg
xlat
jg
mov
mov
les
in
adc
sarb
add
rol
fldenv
fildll
and
cmpsb
dec
cmpsl
enter
rcrl
scas
ja
mov
mov
jecxz
mov
movsb
sub
gs
sub
inc
dec
jmp
subb
sub
psubq
mov
idiv
popa
lahf
sbb
call
test
push
hlt
mov
mov
out
sub
test
mov
in
ljmp
fsubrp
nop
mov
roll
mov
repz
sarb
pop
jae
js
mov
lock
adc
push
mov
fidivrl
ljmp
inc
jl
adc
adc
sbb
test
jno
ja
and
mov
lods
aad
dec
pushl
mov
ret
dec
lods
pop
xchg
cmpsb
xchg
xlat
add
and
push
jl
jne
cmp
cmpsb
sub
adc
popf
jbe
ljmp
mov
int3
or
lahf
xchg
push
and
nop
lret
mov
mov
das
daa
shrb
cmp
jnp
xor
push
xchg
cwtl
xchg
mov
arpl
cmp
fmuls
xchg
aaa
sub
insl
or
jge
mov
sub
jecxz
addr16
jbe
fidivl
iret
jnp
ss
loope
dec
sub
jmp
dec
push
adc
int3
mov
mov
enter
out
adc
mov
add
fwait
in
ljmp
repz
pop
pushf
mov
into
in
push
or
and
push
or
pop
push
test
pop
roll
jl
and
ret
mov
cmpsl
insb
mov
xor
aam
mov
int
mov
xchg
push
cld
lds
add
iret
sub
aaa
imul
mov
ret
loopne
add
push
mov
mov
push
pusha
lcall
push
mov
icebp
mov
fsubrs
cmc
test
in
hlt
incb
push
sbb
addr16
loopne
and
lock
jle
ljmp
cmovnp
repz
fsts
cmp
fidivs
mov
in
jge
sub
fsubrs
xor
loopne
cs
xor
es
rorb
out
push
ja
mov
jno
jmp
adc
out
cwtl
pop
lret
scas
cld
pop
cli
shrb
push
cld
jg
xor
ret
mov
ljmp
add
repnz
inc
cmp
or
sub
hlt
sahf
sbb
fsubrs
pop
adc
call
and
test
imul
in
ret
fcmovne
xor
pop
sbb
push
arpl
repnz
fidivrl
outsb
popf
enter
insl
movsl
pop
mov
mov
outsl
stos
lea
test
subb
dec
xlat
inc
jb
movsb
movsb
cwtl
sbb
test
adc
push
mov
int3
int3
fmuls
push
andb
xchg
shll
mov
lods
sbb
jmp
cmp
sub
ds
inc
or
xchg
mov
xchg
fucom
std
pop
jl
mov
call
mov
cmp
pop
pop
sub
stos
lds
shll
mov
repnz
call
dec
jle
pop
mov
jns
xchg
inc
jb
sub
arpl
cmc
pop
fsubrp
loop
xor
inc
xchg
das
enter
insb
add
stos
cmpsb
xor
arpl
test
push
inc
push
add
ds
cmpsb
jnp
xor
adc
imul
add
sub
or
dec
dec
leave
cmp
mov
xor
test
cmp
gs
push
aas
icebp
add
fisubl
xchg
and
int
and
scas
loop
leave
inc
mov
mov
xchg
jno
push
xchg
cmp
ret
lcall
add
sub
push
js
jl
mov
andl
cwtl
xchg
push
xchg
sub
pop
test
jge
mov
mov
out
or
adc
stos
mov
sub
aad
cld
call
pop
stos
cmc
mov
fstpl
aas
mov
cltd
pop
mov
cmp
mov
mov
addr16
dec
sbb
int
adc
mov
ret
or
jb
sbb
hlt
repnz
mov
test
dec
insb
imul
lret
ljmp
hlt
lods
lock
inc
mov
mov
mov
and
inc
lahf
xor
daa
sbb
dec
and
adc
pop
lods
mov
sbb
repz
inc
cmc
imul
out
stos
divl
mov
nop
jbe
pop
mov
mov
xchg
or
out
sbb
pop
pusha
loopne
sahf
mov
mov
or
pop
mov
pop
std
es
in
jmp
call
fs
cwtl
nop
lds
and
mov
push
fidivs
jp
lcall
hlt
and
repz
ljmp
push
mov
movsl
sbb
push
xor
sbb
sbb
orb
dec
testb
aaa
inc
mov
dec
fldcw
ss
adc
movsl
xchg
lret
pop
push
lock
fisubrs
insl
push
inc
movsw
clc
push
cmp
dec
push
roll
addr16
idivl
ret
stos
jle
xor
pop
push
lcall
cmc
mov
int
mov
int
dec
or
jg
stc
jno
cmpsb
adc
sbb
test
out
mov
lock
ss
in
sbb
ds
lods
dec
sub
adc
mov
clc
xor
dec
pop
pop
movsb
mov
or
stos
test
fildll
movsl
out
dec
dec
hlt
icebp
daa
push
inc
es
push
cmp
add
filds
leave
mov
jns
fnstsw
lock
lock
pop
jl
into
jg
pop
inc
test
xchg
cmpl
pop
sbb
lcall
into
out
lock
and
sbb
push
bnd
ret
push
xor
movsl
inc
fdivrs
test
dec
int3
add
mov
jbe
inc
icebp
orb
mov
or
mov
push
mov
jne
shl
cmc
testb
jmp
fnstsw
xor
lock
jo
xor
inc
jp
xor
std
and
push
xor
mov
mov
adc
cli
cs
or
lea
inc
mov
data16
jle
jge
dec
movsb
adc
jp
inc
dec
cmp
pushf
in
inc
dec
sbb
push
stc
test
mov
std
push
addr16
aad
mov
or
sub
test
mov
popf
push
js
ret
movsb
mov
std
cmc
call
dec
push
push
repz
stc
loope
dec
or
pop
adc
add
repnz
movsb
mov
pop
outsb
sub
popa
xchg
inc
pop
subb
fs
sub
push
xchg
mov
jl
nop
dec
mov
add
subb
pop
hlt
jl
push
imul
jp
imul
test
adc
int3
mov
pop
cld
in
aas
mov
enter
mov
xlat
inc
add
stos
fistps
mov
mov
or
jmp
inc
dec
divb
in
adcl
dec
or
pop
lods
sbb
rclb
mov
bound
adc
xchg
std
mov
es
pop
jmp
xchg
xor
nop
mov
call
sub
pop
dec
hlt
in
subl
nop
je
inc
pop
mov
cmc
stos
cmp
mov
inc
out
jns
jno
mov
iret
or
test
repz
out
movsl
jmp
cltd
lcall
xor
ret
insl
rorl
sub
cmc
fsts
mov
xchg
mov
fwait
jae
push
fbld
mov
mov
arpl
xor
and
pop
je
pop
dec
loop
sub
rcll
sub
stos
and
cwtl
into
xor
es
ret
sub
adc
push
push
pop
mov
adc
jno
js
andb
imul
fcomps
lea
pop
add
scas
imul
imul
arpl
mov
test
popa
jmp
or
bound
imul
outsl
cwtl
test
xchg
and
adc
fsubrs
fadds
in
and
mov
push
inc
mov
enter
mov
mov
dec
lea
sti
les
pushf
xor
sub
out
movsb
jecxz
daa
sbb
adc
xor
lea
sbb
insb
sahf
adc
mov
imul
in
hlt
hlt
cmp
pusha
push
mov
mov
pusha
adc
ja
dec
lea
ja
int
jb
lcall
jle
and
scas
std
data16
cmpsb
mov
sti
adc
jg
test
cmc
mov
imul
sbb
insb
daa
jo
arpl
pusha
popa
or
hlt
test
ret
mov
decb
and
sbb
add
stc
xor
out
in
xor
pop
push
cmp
inc
sbbb
std
mulb
cmpsb
and
das
xchg
stos
or
movsb
lods
sti
jle
cs
in
xchg
push
mov
cmp
or
rorl
mov
je
sub
ljmp
neg
mov
sbb
fisttpll
notb
mov
jmp
dec
iret
dec
in
add
out
mov
cld
outsl
add
cmp
ret
or
rcrl
inc
adcl
flds
scas
sbb
insl
cmp
xchg
add
int
adc
jecxz
push
ds
and
loopne
orb
in
stc
add
xor
xchg
aam
in
and
dec
es
push
movsl
stos
mov
clc
loopne
shl
out
jge
aas
roll
xchg
sbb
push
shlb
xor
sbb
or
mov
or
pop
and
mov
cld
test
fs
dec
lods
push
mov
pop
mov
scas
add
adc
mov
sysenter
xchg
sbb
testl
out
lahf
ljmp
dec
lret
cltd
dec
mov
aad
int3
xchg
enter
jge
daa
aaa
sbb
push
popf
mov
fs
test
icebp
mov
jge
cmp
insl
dec
insb
inc
push
cld
arpl
sub
pop
jecxz
scas
or
xchg
pop
std
xor
insl
lahf
imul
movsb
add
sbb
test
mov
or
lods
rcrb
out
frstor
in
dec
and
push
out
lods
lods
add
xchg
cmp
adcl
inc
mov
xor
pop
lock
inc
scas
ljmp
cmp
dec
ja
cmp
jmp
fisubl
push
adc
jnp
jae
fcoml
loopew
dec
mov
pop
add
push
loop
xchg
add
pop
pop
pop
mov
stos
mov
adc
jns
xor
add
mov
xchg
dec
mov
push
mov
mov
mov
mov
xor
sbb
rcr
and
rcl
dec
jno
or
rorl
int
mov
jecxz
outsb
imul
pop
nop
mov
push
sub
enter
pushl
pop
inc
clc
imul
adc
pop
into
enter
jb
insb
addr16
popa
dec
in
pop
out
sbb
or
into
insl
dec
and
mov
cs
into
cmp
xchg
push
inc
dec
and
les
cli
fneni(8087
test
ret
dec
imull
mov
fwait
sbb
mov
inc
inc
mov
pop
xor
mov
add
pusha
lds
insl
js
arpl
mov
loope
and
mov
rcrl
adc
ljmp
rorl
xlat
or
add
jbe
bound
mov
cmp
idiv
pop
jle
aaa
and
sbb
xor
shrb
mov
mov
in
or
int
jnp
dec
pushl
jp
adc
inc
fidivl
movsb
fisttps
loope
and
imul
dec
test
faddp
jl
out
in
cld
imul
addr16
xor
cmp
mov
pop
inc
lcall
xchg
idivl
addr16
stos
pop
fdivp
fwait
orb
ljmp
std
push
or
repz
das
popa
mov
mov
and
call
add
test
and
leave
enter
push
aaa
jbe
adc
jns
xchg
scas
push
mov
mov
dec
stos
mov
mov
rcl
scas
int3
push
push
mov
insb
int
scas
pusha
push
push
xor
loop
int
sbb
inc
sub
icebp
je
ss
jnp
jne
jns
lea
imul
scas
mov
mov
inc
dec
adc
movsb
add
mov
outsl
inc
andb
push
leave
fwait
push
subl
xor
dec
insb
lea
xchg
cmp
xor
dec
mov
mov
pushl
dec
popf
push
into
out
mov
push
mov
loopne
mov
mulb
sub
adc
mov
dec
adc
std
insl
jge
fiadds
fmulp
and
dec
mov
lcall
mov
mov
jle
ljmp
imul
jge
repnz
aas
mov
pop
mov
inc
stc
addr16
pop
sub
pop
dec
pop
outsb
or
shl
jl
and
scas
push
dec
inc
cmc
movsl
mov
sub
xor
sarb
les
add
ja
push
jle
push
js
adc
cli
popa
mov
cmp
std
mov
jge
scas
ret
adc
jecxz
mov
mov
push
cmp
jp
push
push
stos
cmp
pop
cmc
rcl
cmp
mov
fucomi
dec
dec
add
fxch
mov
pop
and
je
je
fdivrs
add
sbb
pusha
sbbl
in
aad
fs
cli
testb
pop
mov
pop
lock
and
cmc
popf
xchg
cltd
fstps
and
out
xorl
or
sub
adc
mov
outsb
enter
into
fldcw
add
cmpsl
cwtl
xlat
mov
je
sbb
dec
push
lock
and
movsb
mov
add
ret
jnp
jle
imul
cmc
mov
shll
enter
das
sbb
mov
pop
test
xchg
imul
movsb
sti
xchg
call
shrl
xor
mov
andb
das
adc
in
mov
or
sbb
pushf
sbb
mov
push
and
ljmp
xchg
xchg
call
hlt
mov
ret
popa
inc
fs
sbb
inc
mov
sbb
pop
jle
sbb
out
dec
add
jnp,pn
sbb
mov
aad
inc
scas
test
stos
cmpsb
loop
fidivl
or
jae
sub
mov
rclb
pusha
test
les
cmp
insb
imul
and
pop
outsl
xchg
sbb
mov
push
pusha
mov
xchg
mov
mov
lods
inc
por
insl
mov
mov
cli
xlat
test
mov
addr16
popa
jecxz
lods
lods
lret
popa
jg
push
cmp
fisttpll
mov
loopne
pop
and
cs
push
and
es
repz
in
daa
lods
or
popa
jno
pop
divb
lret
shrb
cmp
int3
gs
xchg
mov
out
cmc
dec
jb
leave
pop
aad
sbb
and
or
ljmp
pop
xchg
and
lock
cwtl
inc
rcll
out
test
inc
nop
cmpl
das
fisttpll
scas
adc
and
test
std
setnp
xchg
jo
mov
movsl
sbb
sub
cwtl
cmpb
lds
sbb
pushf
xor
out
mov
jecxz
and
lret
push
popa
in
movsb
hlt
mov
div
xchg
fmul
loope
xchg
pop
push
dec
cmp
dec
mov
xchg
out
xor
je
mov
repz
pop
adc
pinsrw
mov
cmc
iret
shll
mov
xchg
sub
jae
and
mov
cmp
adc
adc
pop
jo
stos
cmp
xchg
shlb
fcoml
sub
push
push
dec
adc
in
pop
mov
je
rclb
sarl
or
rcl
jne
fwait
nop
notb
mov
scas
hlt
xor
ret
xchg
jbe
mov
push
mov
not
mov
mov
mov
mov
test
mov
push
pop
mov
push
xchg
inc
sar
jb
enter
jp
jle
and
jo
shrl
mov
xchg
das
arpl
pop
jo
mov
pop
and
daa
pop
xchg
aas
cmovg
jnp
fisubs
lret
xchg
jbe
xchg
add
mov
cmpsl
ja
mov
sbb
aaa
mov
repnz
sub
xchg
xor
fs
mov
pop
pop
push
mov
jno
mov
inc
les
xchg
scas
inc
inc
rcr
ret
push
mov
sti
dec
sbb
lcall
sar
add
pop
jp
sub
data16
in
outsb
add
sub
outsl
ret
int
sub
sahf
in
sub
shrb
sarl
stos
lcallw
cmpsl
add
adc
mov
aas
int
dec
push
out
push
mov
jecxz
push
push
mov
movb
mov
dec
mov
in
imul
pusha
xchg
out
mull
fcomps
fiadds
fbstp
gs
inc
std
jno
fadds
imul
sbb
ljmp
sbb
adc
outsb
sub
cmp
pusha
cmpsl
out
pop
clc
mov
js
lea
ret
addr16
sbb
cwtl
mov
jg
js
mov
mov
int
test
cmc
cmp
dec
sub
xor
mov
rcll
cli
leave
inc
lock
and
mov
push
enter
fnsave
movsl
and
fisubl
arpl
stc
aas
pop
test
push
sub
imul
rclb
push
dec
idiv
push
cmp
and
call
mov
cmc
dec
clc
ljmp
cld
js
adc
and
push
js
jl
adc
dec
pusha
popa
cmp
dec
or
inc
and
or
loope
popf
push
mov
jns
mov
pop
push
inc
or
sub
inc
fildll
imul
fstpl
pop
jmp
mov
cmc
mov
lret
dec
push
gs
cs
sbb
imul
fidivl
fcoml
outsb
sbb
stos
out
lods
adc
fwait
pop
daa
sub
jecxz
mov
cmp
test
lods
decb
jl
inc
lock
add
jg
xor
dec
inc
sub
ds
jno
push
jmp
push
iret
push
sbb
cmp
xchg
xchg
xlat
enter
lock
daa
aam
iret
add
insl
jge
push
cmp
xchg
fldt
insl
xchg
push
and
out
push
rcrl
jl
lcall
stos
cmp
pushf
add
inc
pop
imul
fimull
dec
icebp
in
aad
in
xchg
aad
shlb
dec
in
push
fmuls
xchg
test
jnp
stos
add
je
int3
das
out
cltd
sbb
repnz
xchg
lahf
mov
mov
xchg
lods
sbb
rorl
clc
sub
pusha
pop
and
lahf
mov
test
nop
cmp
jb
push
pop
and
sub
rclb
test
imul
jns
insb
pop
rclb
pop
lods
lcall
testb
inc
push
xor
adc
mov
or
sbb
sub
cmp
inc
mov
pop
push
jno
and
pop
sub
loope
cmp
lret
cmp
push
mov
rcrb
lahf
push
jge
add
sub
lret
and
arpl
jnp
test
cmpsl
outsl
mov
imul
scas
test
jbe
les
pop
sarl
mov
adc
shl
stos
jns
cmp
ficoms
xor
cmp
les
adc
stos
and
xchg
les
lods
xchg
cmp
rcr
add
lahf
mov
dec
jo
pop
lods
out
jge
rcl
inc
mov
and
sbb
xchg
pop
je
cmp
mov
inc
out
rol
xchg
insl
mov
daa
and
out
or
test
sbb
jbe
test
insl
xchg
or
je
sbb
mov
jmp
les
lret
in
sti
mov
and
cmp
aaa
mov
scas
shlb
dec
mov
repz
insb
jns
daa
out
imul
nop
inc
mov
sti
testb
cmpsb
inc
jl
sbb
mov
xor
cmc
mov
sub
pop
xor
das
jmp
fwait
into
mov
sti
fcoml
and
popa
pop
movsl
rol
push
xor
xchg
jo
js
or
and
stc
aam
xchg
mov
cmp
addr16
add
test
cmp
xor
inc
ret
dec
movsb
imul
pop
loopne
bound
inc
sbb
imul
jnp
jno
sbb
addr16
cmc
add
loop
sahf
push
push
rolb
stc
jg
cmp
pop
nop
jae
mov
sarl
scas
pop
mov
or
sbb
inc
sbb
out
dec
mov
fsts
dec
ficomps
pop
mov
ds
aam
pusha
lret
sti
xlat
out
test
lods
int
ss
add
test
out
inc
sbb
stos
push
push
dec
cwtl
lahf
insl
xor
mov
add
sbb
lods
inc
and
pushf
testl
and
ret
adc
mov
sbb
add
movsb
lahf
xchg
in
and
call
pop
jg
pop
shll
enter
daa
sbbb
aad
jne
mov
jns
js
fdivl
pop
jno
insb
es
and
out
in
push
cmpsl
sub
sti
popf
mov
imul
fildll
les
aam
cli
icebp
das
jg
pop
andb
psraw
sbbb
pop
lods
jle
inc
cwtl
dec
push
cmp
sbb
mov
rorb
add
pop
sub
sbb
mov
mulb
fnsave
pusha
ret
dec
jp
jbe
mov
xchg
jnp
addb
dec
dec
mov
mov
pop
push
pop
cmp
repz
loopne
scas
adc
addr16
push
sbb
jnp
sub
testb
scas
jmp
aad
in
push
fdivp
adc
and
push
subb
and
dec
add
aad
sarl
mov
out
aad
push
mov
xchg
pusha
inc
mov
cmp
sbb
repz
and
sub
les
out
jnp
push
stos
fs
mov
ds
in
xor
xchg
cltd
repnz
xchg
dec
jns
jae
mov
jp
xchg
aad
dec
mov
test
mov
xchg
pop
dec
jae
xbegin
inc
xchg
pop
cwtl
push
iret
push
xor
push
mov
sbb
lock
bound
push
repnz
sbb
add
mov
outsb
fldpi
push
jge
dec
mov
cmp
out
scas
dec
or
out
bndstx
pop
imul
xor
shlw
cmp
shlb
rcr
jmp
adc
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
