add
and
sub
add
je
jb
popa
add
add
add
add
sub
add
push
add
outsb
add
add
jae
and
inc
add
add
imul
add
add
add
add
sub
add
push
add
outsb
add
add
jae
and
inc
add
add
imul
add
add
add
imul
outsl
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
add
add
js
add
call
pop
pop
ret
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
call
mov
call
push
movl
pushl
call
mov
sub
movzbl
cmp
mov
je
movl
mov
movl
mov
call
mov
mov
sub
movzbl
movzbl
sub
je
push
pushl
pushl
call
andl
mov
call
call
mov
push
push
call
pushl
mov
call
pushl
pushl
call
mov
jmp
movl
call
pushl
pushl
pushl
pushl
call
jmp
push
lea
push
push
pushl
call
mov
lea
push
call
pop
xor
push
lea
push
push
push
push
call
push
push
push
push
pushl
call
mov
lea
push
pushl
call
pop
pop
jmp
push
call
xor
leave
ret
xor
mov
xchg
xchg
jl
adc
mov
mov
adc
rclb
push
xor
add
push
movl
out
adcb
add
cmpsl
rolb
push
xor
add
push
filds
mov
mov
pop
lcall
push
jnp
and
popa
repz
xor
bound
fstps
push
jo
js
pop
add
inc
jns
repnz
pop
mov
sahf
mul
jg
or
mov
inc
cmpsl
mov
pop
pop
pop
pop
or
inc
cmp
lret
xor
fmuls
imull
mov
cmp
mov
imul
add
mull
mov
xchg
aaa
lods
lahf
sub
mov
mov
pop
out
call
ror
sarb
js
ja
imul
mov
inc
or
jg
loopne
xor
test
test
push
push
xchg
pop
mov
mov
pop
loop
enter
movl
sarb
and
jb
notl
inc
into
mov
mov
push
bnd
pusha
rolb
xor
mov
xchg
push
mov
cltd
aaa
stos
add
icebp
push
out
js
or
cmp
fists
inc
mull
xor
push
lds
inc
mov
shll
push
xchg
adc
ret
out
sarb
add
jb
notl
inc
xlat
mov
mov
pop
repnz
rolb
push
xor
add
push
movl
xchg
pop
adcb
loopw
rolb
push
xor
test
and
aas
fadds
mov
das
cmp
mov
notb
out
ret
loopne
dec
fdivl
mov
enter
sub
nop
outsl
xchg
mov
cmp
mov
mov
inc
push
pop
out
in
xor
cld
pushf
ffreep
es
or
or
xchg
stc
dec
mov
jp
hlt
mov
xchg
mov
xlat
pop
pop
movsl
adc
cmp
in
cmp
mov
popf
rclb
xchg
dec
jns
xchg
fnstcw
push
or
sub
insb
addr16
lahf
lret
add
inc
out
stc
push
pop
or
mov
in
call
scas
mov
jmp
xchg
sahf
call
mov
jo
std
fadds
sub
push
cltd
cli
lcall
inc
scas
stos
add
push
fcmovnbe
outsb
and
pop
aam
adc
xlat
and
ror
xchg
and
jmp
test
cmp
mov
mov
push
jne
jmp
mov
mov
sub
adc
pop
daa
jbe
adc
jo
pushf
mov
mov
out
or
mov
jae
cltd
push
cmp
test
ret
cmp
adc
pop
push
xor
lock
adc
xor
sub
jl
push
xchg
das
data16
sub
xor
push
pop
in
pop
sub
sub
rclb
inc
xor
xor
jmp
or
xor
pop
rcll
fldcw
sahf
pop
std
scas
rolb
push
mull
fadd
cmpsl
fnstenv
rorl
lea
dec
test
ret
jno
and
push
pop
fldenv
sbb
jg
xchg
lock
das
mov
movsb
inc
mov
pop
mov
dec
fldl
dec
popa
mov
mov
xor
jbe
push
mov
aad
sahf
xor
int3
mov
aad
jle
repnz
outsb
lahf
in
inc
cltd
cmp
push
push
jmp
xchg
lods
and
xor
bound
in
dec
ds
leave
inc
daa
repz
insl
notb
or
filds
or
fcoml
jp
add
mov
hlt
xor
sub
into
push
mov
iret
or
push
mov
nop
or
cmp
mov
fstpl
jno
mov
add
xchg
inc
xchg
fstpt
daa
std
or
ljmp
sahf
nop
bnd
add
and
cmp
adc
xor
out
gs
sbb
mov
inc
and
xchg
dec
enter
or
je
je
imul
outsl
mov
rcrb
inc
js
test
sbb
into
push
shll
push
cli
adc
mov
or
mov
xor
add
lret
dec
imul
mov
cwtl
mov
and
sbb
ja
xchg
test
dec
sub
data16
enter
in
movsl
mov
test
jmp
out
sbb
stos
cltd
pop
dec
cs
call
in
pop
cli
jmp
mov
push
sub
mov
xlat
push
push
cmpb
insl
push
test
daa
mov
js
cltd
jo
das
call
call
mov
xchg
cltd
sbb
and
mov
sub
mov
rcll
je
mov
pop
inc
pop
push
sti
mov
mov
xor
jb
stos
pop
out
stos
xchg
pushf
jbe
pop
jno
jle
push
jb
mov
out
mov
cmp
pusha
and
cld
lods
and
inc
mov
push
fucomp
fcomps
mov
imul
divb
jle
and
pushf
lods
dec
mov
xchg
rcrl
pop
test
call
mov
jle
je
cmovp
jno
lods
int3
mov
pop
or
orl
jno
iret
inc
inc
xor
les
mov
stc
lods
push
clc
jp
ret
or
dec
fcomip
pop
push
roll
sub
dec
imul
or
setge
out
xlat
and
rol
sahf
dec
bound
cmpsb
add
adc
clc
jmp
add
mov
and
xorb
fdivs
loop,pn
or
jno
mov
mov
xchg
cmc
cmp
xchg
les
call
fs
inc
mov
cmp
sbb
insl
jg
lds
ffree
lods
insl
ds
pop
mov
mov
and
jbe
fcompl
sub
push
shll
jg
int
loop
subl
jbe
xchg
scas
jne
call
mov
mov
imul
orl
out
dec
pop
mov
jbe
scas
stos
addl
shl
je
pushf
ljmp
scas
xor
ret
mov
add
xchg
shll
pop
jecxz
inc
fnstsw
out
clc
or
mov
inc
scas
mov
push
mov
xchg
cld
pop
mov
pusha
lret
mov
fldcw
inc
cmp
std
push
inc
xchg
jecxz
sbb
into
mov
push
jnp
jo
mov
sub
sub
int3
sahf
add
mov
sbb
sbb
mov
jle
xchg
adc
popf
scas
cmpsb
jb
push
mov
adc
fldl
pop
xchg
rclb
sahf
pushf
fiadds
mull
mov
jle
in
sbb
xchg
testl
loop
in
fildll
scas
mov
imul
add
shl
adc
and
outsl
call
inc
or
in
ret
cmp
repnz
add
outsl
push
mov
in
sbb
mov
xchg
movsl
sub
cltd
in
xchg
jnp
pushf
or
push
fsub
cmp
mov
ror
cmpsb
adc
movsb
aas
out
push
shrl
popa
sub
pop
cmp
jl
fidivl
stos
dec
pop
and
mov
push
push
and
mov
repz
and
sbb
pushf
adcb
jge
loopne
fidivrs
jno
fistl
and
mov
and
mov
and
add
xrelease
mov
and
int3
cmp
fisubl
push
movsb
test
cmp
fldz
jge
cli
xor
in
xor
mov
je
push
mov
sbbb
inc
inc
cmp
sbb
iret
xor
cmpl
or
jmp
rcrl
test
dec
pop
adc
loop
sbb
mov
test
pusha
mov
push
inc
push
cmp
sti
push
cmpb
cmpb
inc
out
push
mov
or
mov
test
jp
insl
sti
sbb
cmp
into
mov
scas
aad
jge
xchg
jo
add
xlat
imul
pop
dec
inc
xchg
dec
out
ret
jne
shlb
fmul
cld
jle
sbb
dec
es
ja
shll
push
outsb
mov
inc
push
xchg
in
orb
sub
je
int
je
lcall
and
psubw
and
xor
cmpxchg
xchg
mov
mov
mov
aaa
in
imul
cmc
push
push
xor
stc
popl
lcall
push
test
cwtl
mov
nop
adc
lds
in
or
pop
xchg
outsb
mov
das
sti
fcoms
sub
fistpl
fnstcw
sbb
sub
sub
jmp
adc
mov
cmpsb
out
sub
in
push
or
das
js
enter
cmp
dec
mov
icebp
mov
stos
out
insl
dec
mov
mov
jmp
xchg
sbb
sub
clc
jg
mov
sub
int3
mov
mov
inc
add
into
push
mov
pushf
adc
push
mov
iret
mov
sbbb
and
ja
imul
aad
jl
les
push
mov
jae
or
push
stos
pop
popa
pop
xor
add
cmc
cmp
mov
or
or
fwait
outsb
ja
jae
outsl
aaa
jae
or
jmp
push
inc
inc
pop
mov
clc
add
ss
outsb
jb
sbb
out
cs
jecxz
fwait
xorb
push
mov
cli
aad
pop
mov
adc
sbb
hlt
jo
pop
addr16
add
imul
inc
repnz
enter
call
inc
test
lea
or
movsb
mov
shll
in
sti
fldl
daa
jne
stos
pop
mov
cmp
xor
jns
sub
das
adc
dec
in
xchg
clc
mov
inc
dec
sub
sub
mov
fsubs
loopne
orl
and
and
loop
arpl
movsl
enter
cld
bound
leave
lahf
stc
pop
in
dec
jae
jns
and
mov
sub
sub
adc
pop
dec
cs
mov
sbb
repnz
repnz
dec
cmpl
cmpl
inc
popf
mov
fmull
adc
push
mov
das
cmpsl
out
inc
ret
sub
sub
or
cli
xor
pop
sbb
sub
nop
push
mov
jns
sub
mov
aad
xchg
sub
lea
and
aas
inc
aad
push
daa
subb
adc
fbstp
jecxz
mov
or
adc
decl
fyl2xp1
and
movsl
imul
fwait
adc
mov
mov
push
test
push
xor
sub
jns
xchg
fstpl
mov
push
rol
out
and
pop
sub
cmp
rclb
pop
jmp
out
mov
rcl
ss
pop
pop
pop
cwtl
pop
sbb
stc
lcall
outsb
dec
jo
adc
cld
aad
dec
jle
int
shlb
hlt
pop
ret
pop
cld
and
fstl
testl
xchg
sarl
jbe
arpl
enter
xlat
lahf
and
popf
adc
cld
in
mov
cmp
adc
pop
popf
cmp
cwtl
in
aad
je
ja
push
mov
shll
dec
jle
sahf
jecxz
mov
nop
jecxz
fimull
xchg
cmpsl
mov
inc
int3
jl
addr16
add
lods
sahf
lds
xor
sub
les
loop
ret
add
mov
cmpsb
int
lock
in
mov
add
mov
rolb
inc
imul
aaa
imul
lcall
and
mov
push
sub
repz
stc
pusha
js
mov
into
stc
in
mov
aaa
cmpsb
mov
pop
mov
xchg
ficoms
add
mov
xlat
addl
xor
mov
cmp
fistl
dec
daa
out
aam
loop
cld
vprotd
push
add
push
push
xchg
and
mov
stc
fistpl
mov
push
rorb
add
out
loopne
fdivrl
hlt
ret
mov
mov
shl
or
adc
lea
lds
pop
imul
push
ss
iret
adc
pop
test
adc
outsl
cld
xor
mov
shlb
cmp
loope
ret
int3
in
xlat
sbb
inc
fs
dec
xchg
sbb
lea
lds
mov
aas
enter
adc
push
lods
into
xor
sub
add
shlb
test
dec
push
add
mov
scas
mov
inc
cmp
jmp
and
ja
xor
ds
insb
dec
shrb
cld
xchg
mov
test
and
imul
jg
rcr
and
mov
pop
dec
pop
test
xor
xor
add
fsub
cmp
enter
popa
jne
and
repz
nop
jo
data16
mov
jle
movb
in
fisttpl
push
lea
push
xchg
mov
mov
pop
or
pushl
cli
movsb
pop
xchg
sub
mov
xor
adc
mov
ja
jl
add
or
shlb
cmp
repnz
cmp
stc
cwtl
inc
mov
imul
popl
roll
dec
addr16
cli
rol
repnz
push
rcr
push
mov
pop
scas
cmp
mov
mov
rorl
jp
addl
inc
and
pop
lcall
push
test
push
mov
push
stos
mov
ja
or
nop
lret
jle
in
cs
adc
inc
and
jl
test
outsb
imul
sbb
jb
xchg
mov
sub
popa
popw
andl
xor
ss
popf
outsb
and
push
or
lods
mov
xchg
xor
rcl
test
jns
dec
divl
inc
mov
lahf
shlb
cmc
test
jae
jbe
push
adc
test
inc
aad
sub
adc
in
in
jbe
xchg
pusha
lret
xchg
cmp
fwait
sbb
sbb
cmp
mov
mov
pusha
cmp
and
bound
push
jp
cmp
mov
lret
fwait
adc
pushf
mov
cltd
cmp
sub
movsl
pop
sub
lret
mov
lock
add
pop
dec
ljmp
inc
mov
pushf
rolb
sbb
popf
jg
inc
xchg
xor
pop
lds
and
mov
pop
sub
fadds
aad
jne
outsb
repnz
aam
repz
sub
jbe
mov
lret
or
adc
mov
mov
je
push
lods
gs
mov
cmpsb
mov
mov
jl
scas
mov
enter
sub
xor
lods
hlt
add
lock
out
incl
adc
pusha
es
jge
test
iret
ja
pop
mov
add
and
test
push
fists
inc
sub
push
pop
push
sbb
scas
lcall
push
jp
mov
ror
and
movsl
inc
lock
repnz
adc
js
loop
testb
sub
ret
ja
jle
cwtl
add
ret
aaa
dec
ds
or
dec
xchg
pop
xor
popa
lahf
stc
ja
icebp
pop
cmp
cmp
iret
mov
cmp
clc
aas
or
das
cmp
add
sbb
add
cmp
aas
add
rorb
mov
sarb
and
dec
lods
or
pop
mov
ror
jecxz
fwait
pushl
mov
iret
or
in
xor
das
mov
mov
pop
inc
loop
cli
xchg
push
adc
lea
je
inc
pop
pop
mov
loope
aad
rcrb
lea
dec
pop
sbb
lea
pusha
bound
stc
jg
mov
sub
pop
xchg
jle
repz
test
imul
call
int
mov
cmc
sbb
lret
fisubrl
mov
popf
xor
in
out
insl
lds
adc
sub
xor
pop
mov
inc
cmp
js
fadds
mov
mov
addr16
mov
ret
lock
sti
adc
push
dec
and
jg
cld
adc
push
aad
add
loop
xchg
je
movsl
xor
cltd
aam
call
rcl
ja
stc
jns
adc
jnp
add
sub
cmc
push
test
ja
subb
fisttpll
sti
scas
pop
dec
int
xchg
xor
pop
sti
lret
mov
jnp
or
cmpsb
pop
mov
xchg
gs
test
push
cs
popf
mov
fcoml
xor
pusha
icebp
loopne
lods
out
cwtl
rolb
das
inc
pop
inc
test
cmpsl
push
scas
bound
or
jp
sete
stos
xchg
cmpsb
mov
lret
imul
jne
inc
adc
mov
mov
icebp
cmpsb
cmp
push
test
sub
or
je
xchg
stos
lds
push
lahf
and
jmp
inc
in
test
add
xor
mov
cmp
add
cmp
pop
xor
fsts
dec
jmp
pop
test
xchg
xchg
roll
call
lcall
mov
fisttpll
dec
fmull
cmp
mov
cmp
inc
mov
sbb
insl
out
xor
lods
jno
cmp
ficomps
mov
sbb
add
lcall
imul
aad
dec
in
testb
dec
pop
cmp
pusha
pop
push
pop
pop
jg
aad
and
scas
mov
aad
pop
out
xchg
andl
add
cli
mov
jecxz
addr16
addr16
pop
pop
cltd
mov
jns
mov
or
dec
jne
lods
mov
cld
inc
cs
gs
sub
dec
xor
or
inc
push
xchg
loop
or
xor
or
outsb
cltd
test
adc
add
mov
push
add
jge
ds
stos
negb
mov
repz
lahf
int3
outsl
and
shll
pop
aas
mov
pop
pop
in
dec
cltd
or
push
cmp
dec
lcall
gs
xchg
decb
iret
mov
adcb
lea
fwait
and
adc
push
push
push
mov
push
aam
jge
mov
aam
nop
pop
xor
sbb
mov
movsl
in
aam
stos
pop
jecxz
dec
lods
jno
pop
mov
xor
aaa
pop
push
inc
xor
outsb
aas
sub
das
inc
addb
in
inc
loop
inc
mov
shll
pop
test
movsb
int
lret
mov
or
mov
out
mov
rcr
and
out
add
pop
je
mov
dec
subl
popf
jno
les
add
mov
cli
enter
cmp
mov
loope
push
dec
lods
xchg
xchg
fwait
loopne
xchg
cli
jp
fildl
fwait
imul
mov
jno
pop
fwait
lods
sarb
cmp
repnz
sbb
nop
pop
int3
lret
push
cmp
jp
sahf
mov
mov
mov
xor
lods
les
int3
sub
cmp
iret
mov
xchg
cmp
popf
loope
mov
sbb
lods
add
sub
nop
clc
iret
addr16
rolb
hlt
inc
dec
jnp
adc
je
cmp
int
sbb
std
dec
nop
lahf
lods
sub
sub
lds
loope
push
jns
mov
cmp
jmp
xchg
push
int
je
push
outsb
dec
sahf
arpl
clc
repnz
jo
cmp
loope
push
loop
mov
sbb
dec
lock
adc
fdivl
add
in
jae
push
es
adc
mov
mulb
xchg
scas
mov
cmp
in
cmp
in
loop
fistl
xchg
dec
jb
xchg
vandnpd
rorl
jb
dec
mov
and
mov
push
dec
jnp
mov
push
jg
gs
push
ja
ds
and
sbb
xchg
jae
add
stos
dec
and
push
cmp
mov
jg
push
ja
lock
ljmp
test
mov
push
sub
nop
repnz
xchg
les
call
and
stc
adc
icebp
daa
loopne
and
stos
ds
leave
scas
shll
insb
inc
sub
cmp
mov
mov
mov
mov
rclb
shll
push
add
call
xchg
nop
sahf
sbb
mov
and
xor
mov
imul
iret
aad
and
push
xchg
adc
std
hlt
popf
and
sbb
ljmp
mov
ss
ja
xchg
push
sbb
movsl
and
inc
add
xchg
lock
mov
jbe
push
loop
int
or
js
mov
xchg
cwtl
push
loope
add
push
cltd
ret
sub
pop
push
cltd
icebp
leave
xchg
pushf
adc
or
adc
fcmovne
mov
hlt
pop
push
sbb
rcrl
add
xchg
addr16
push
shlb
pop
hlt
jp
mov
jp
adc
test
add
ficompl
pop
out
arpl
sbb
lods
mov
sub
int
jnp
mov
clc
test
mov
jnp
loopne
adc
or
sar
mov
std
mov
mov
popf
or
sarb
adc
mov
ja
je
push
fiaddl
subb
into
mov
mov
std
in
imul
mov
or
int
or
ret
xchg
test
add
mov
iret
push
aad
dec
pop
negl
xchg
jnp
nop
cld
scas
jne
out
push
ja
leave
pop
dec
pop
imul
or
stc
popa
adc
lret
nop
rclb
fistpl
je
jmp
xchg
sbb
lahf
push
xchg
out
ljmp
xchg
mov
mov
je
dec
lea
mov
push
xor
mov
iret
and
lea
sub
stos
xchg
xchg
cli
shll
push
shr
mov
shl
cmp
int3
xor
xchg
cmp
jno
dec
lea
cmc
push
notl
inc
xlat
mov
mov
pop
repnz
rolb
push
xor
add
push
movl
xchg
pop
adcb
loopw
rolb
push
xor
add
push
movl
xchg
pop
adcb
loopw
rolb
push
xor
add
push
movl
cmp
andb
push
sub
inc
and
andl
andl
mov
mov
push
movl
movl
movl
movl
movl
movl
mov
movl
call
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
push
mov
push
movb
call
push
mov
call
pushl
mov
call
pushl
movl
movb
movl
pushl
movb
movl
movb
movl
movl
movb
movl
movb
movb
movb
movb
movb
movb
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
push
call
push
mov
call
cmpl
mov
je
cmpl
je
call
mov
xor
xor
call
mov
mov
xor
mov
call
xor
mov
call
movzbl
push
pop
cmp
sbb
xor
and
add
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
pop
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
pushl
call
push
push
push
mov
pushl
call
push
pop
pop
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
movb
push
pushl
call
mov
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
push
pushl
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
mov
movzbl
mov
sub
movzbl
sub
test
je
call
call
movl
movl
movl
call
push
push
push
pushl
call
andl
jmp
movl
movl
andl
jmp
mov
inc
mov
mov
sub
mov
add
mov
movzwl
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
mov
xchg
xor
xchg
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
cmpl
jb
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
xor
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
xor
add
add
add
cld
xor
add
xor
add
xor
add
xor
add
xor
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
dec
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdivs
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
add
pushf
add
movsb
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shlb
add
fdivs
add
call
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
cmp
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fistpll
add
int3
cmp
add
cmp
add
add
lods
cmp
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
cmp
add
cmp
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
cmp
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cmp
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cmp
add
cmp
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
nop
movzbl
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
mov
jae
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
cmp
mov
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
push
andl
mov
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
lea
cmpb
jne
mov
jmp
mov
xor
mov
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
nop
nop
nop
nop
nop
nop
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
mov
cmp
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
xor
mov
mov
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
mov
cmp
es
les
cwtl
das
mov
mov
outsb
mov
dec
call
sahf
cmp
dec
fidivrs
push
push
mov
outsb
enter
call
sahf
cmp
dec
fidivrs
push
jb
push
test
mov
lods
sub
lret
pop
loop
aaa
sahf
gs
jnp
mov
loope
xchg
mov
sub
dec
and
adc
xlat
add
xor
and
icebp
test
or
ret
adc
or
sti
inc
jne
fwait
ret
push
jg
jmp
push
mov
adc
cmp
dec
jmp
hlt
cmp
pop
pop
xchg
into
cmp
inc
fs
orl
dec
hlt
jle
jno
cmpsl
pop
out
mov
xchg
mov
adc
mov
pop
cmp
dec
push
mov
in
imul
test
daa
jecxz
sbb
into
call
sahf
cmp
dec
fidivrs
push
push
mov
outsb
enter
scas
pushl
fcomi
jle
outsb
aaa
pushf
or
hlt
dec
loope
jbe
jg
outsb
mov
jp
fistpl
inc
sti
cmp
jg
cmp
pushf
push
sbb
push
les
add
fisttpl
jl
dec
loop
mov
out
dec
fidivrs
push
push
mov
outsb
enter
call
sahf
cmp
dec
fidivrs
push
push
mov
outsb
enter
call
add
mov
mov
push
sarl
test
pop
aam
inc
jae
xchg
xor
jne
fidivl
imul
xchg
cmp
cld
adc
xchg
outsb
jmp
enter
insb
jb
xor
cmp
push
lds
repz
xor
sub
sbb
movsb
jl
int3
ds
push
cmpsl
pop
dec
leave
aaa
push
xorb
push
mov
inc
into
lret
mov
push
gs
cmpsb
das
or
sbb
scas
pop
xchg
xor
adc
cmpsl
aaa
pop
std
and
out
insl
cmp
aad
pop
cmp
in
repz
fsubrs
addl
pusha
arpl
int
dec
lea
lcall
cli
jge
in
sbb
in
push
xor
cmp
call
popf
dec
dec
pop
cmpsl
les
dec
jmp
jno
movsl
popa
push
fildl
pcmpgtw
mov
lea
test
ds
add
ds
cmp
outsl
ret
pop
sbbl
mov
adc
cmp
sbb
les
cmp
jbe
xorb
mov
lods
lods
pop
push
dec
mov
and
or
cli
inc
add
pop
test
hlt
dec
jns
sub
bsr
stos
outsb
push
loop
repz
jecxz
test
cmp
cmp
push
sub
mov
pop
jp
imul
inc
xorl
ret
imul
aam
add
int
inc
cmp
lahf
xor
push
ficomps
stos
sbb
jle
movsl
inc
cmpsb
dec
inc
xchg
mov
ljmp
pop
sub
dec
rcll
inc
or
push
push
xorb
lods
sarl
push
add
outsb
jne
sbb
fwait
mov
nop
ds
mov
test
xlat
lret
pop
push
dec
xor
sub
fwait
icebp
jmp
add
and
push
pop
pusha
mov
fsubr
pop
stc
faddp
mov
fsts
insl
inc
push
jmp
jb
xlat
mov
xchg
or
adc
push
test
icebp
sub
adc
lret
push
negb
inc
pop
rolb
ja
mov
mov
popa
add
xchg
fadd
xchg
in
imul
jae
pop
test
dec
mov
xchg
add
and
cmp
or
or
xchg
cmpsb
add
push
cmc
xchg
scas
mov
mov
and
ljmp
fistpl
rcrb
and
sub
pop
lret
or
popa
lcall
bound
fsubrl
mov
cs
out
sbb
pop
pop
jg
imull
jmp
push
les
push
adc
sbb
mov
jo
lahf
sbb
lret
dec
lods
lcall
and
sti
loope,pn
repnz
out
ret
enter
push
fstpt
daa
stc
into
dec
mov
or
int
popf
ja
push
ret
jo
inc
dec
aas
dec
es
push
inc
sti
mov
or
sbb
pop
xchg
pop
cltd
or
jne
movsb
or
mov
xor
lret
sahf
jb
xchg
fildl
fcoms
sub
adc
lds
into
jns
out
sub
pmuludq
pusha
cmp
xlat
xchg
and
cmp
xor
and
sub
jg
push
test
out
xchg
ljmp
cmp
sub
fnstsw
stos
leave
xlat
cli
and
repnz
xor
mov
pop
cmp
mov
mov
sbb
mov
lods
leave
mov
or
lea
push
push
aas
pop
pop
adc
pop
hlt
test
mov
bnd
pop
xchg
cld
inc
cld
mov
mov
lea
es
imul
lea
push
or
mov
cmp
neg
jo
sahf
es
pop
push
xchg
call
mov
lea
sbb
movsb
es
mov
jb
push
dec
mov
out
addr16
aam
rcrl
mov
push
sbb
nop
lret
gs
loop
or
mov
add
dec
bound
inc
xchg
xchg
scas
pusha
push
xchg
dec
stos
cld
test
fs
add
sahf
xchg
jmp
xchg
in
sbb
xchg
push
mov
add
fidivl
lods
sbb
inc
adc
xlat
fs
sbb
sub
mov
jg
lret
pop
push
das
mov
nop
cmc
cli
sub
xchg
cli
inc
push
xchg
fnstenv
out
xor
hlt
xchg
popl
pop
insl
push
mov
fxtract
pop
lds
mov
cltd
cmpsl
sbb
popa
repnz
pusha
test
cmp
repnz
std
gs
cli
nop
imull
pop
clc
push
sbb
insb
movsb
pop
and
mov
loop
jp
mov
cld
pop
mov
rcll
clc
add
lea
arpl
test
lcall
push
leave
xchg
call
mov
scas
sub
push
pop
jo
jbe
xor
pop
stc
xor
test
sbb
adc
inc
and
in
mov
dec
mov
cmpsl
test
fwait
in
push
dec
mov
scas
push
jl
inc
xor
into
jp
mov
movsl
sarb
scas
inc
jle
ja
orb
int
xchg
decb
jl
cmpxchg
int
pushf
jecxz
fcompl
outsl
xor
out
aaa
add
mov
popf
gs
and
aaa
ds
push
lods
inc
push
sti
sti
outsb
aad
sub
popf
inc
in
hlt
shll
jg
bound
jge
pop
aam
mulb
stos
push
stc
push
out
sbb
push
mov
and
dec
mov
je
rorl
xchg
sbb
xchg
stc
test
cld
lcall
test
xlat
push
inc
pushf
pushf
std
xchg
daa
mov
jae
xor
mov
mov
test
ret
fisubrl
popf
adc
cwtl
pushf
movsl
cmpsb
scas
inc
fsubrl
loop
xor
cmp
adc
inc
sbb
sub
repnz
jne
out
mov
lret
fsubrs
add
repnz
mov
mov
repnz
jo
mov
movsl
inc
inc
adc
loope
xchg
call
mov
iret
dec
mov
dec
mov
cs
hlt
faddl
jmp
repz
cmc
fsubl
aad
lret
roll
mov
pushl
dec
pop
pop
mov
xor
loope
sub
pop
mov
cli
movsb
mov
int3
fidivrs
shl
and
inc
xchg
dec
push
sbb
lods
pop
cmc
aad
cmp
sahf
mov
lock
movb
fidivrl
ror
add
cltd
cs
xchg
js
outsl
push
dec
cmp
jns
scas
loop
shlb
lret
hlt
or
fiaddl
push
inc
dec
sub
or
cli
out
mov
inc
fs
pushf
pop
jecxz
mov
and
mov
add
lahf
mov
pop
loop
aam
hlt
mov
fmuls
sbb
adc
sub
nop
das
mov
or
adc
dec
iret
imul
mov
out
shlb
mov
or
pop
cmp
and
imul
add
jl
fisubs
mov
cwtl
lcall
push
aaa
fs
xor
xchg
jle
and
push
lds
aaa
int3
push
mov
je
and
addb
cltd
mov
inc
or
rol
cmp
xor
repz
jg
aam
dec
push
jns
add
cmp
in
icebp
or
cltd
iret
in
add
pop
cld
or
mov
pop
add
cmpsl
loopne
push
sub
add
es
fiadds
clc
fildll
and
pop
jmp
mull
icebp
loopne
add
cmovge
mov
sbb
ficompl
pushf
sub
mov
bndldx
dec
daa
mov
outsl
orb
and
outsl
ds
xor
mov
inc
fmulp
leave
cltd
ljmp
sti
xor
clc
lds
jmp
test
mov
jl
cmp
xchg
stos
xchg
adc
mov
add
and
dec
shll
push
and
pop
fidivs
mov
enter
std
test
adc
out
fdivl
mov
dec
mov
cmp
jg
int
fdivrs
xchg
les
ret
lods
pushf
insb
aaa
cs
pop
movsb
push
js
xor
into
ds
mov
in
push
inc
call
push
sub
push
adc
or
dec
xor
mov
sub
rcll
sub
out
or
cld
adc
outsl
fbstp
lock
pop
inc
pushf
fmull
test
lds
mov
push
xor
sti
out
aaa
pop
imul
arpl
ds
jae
mov
sbb
xlat
mov
fadds
mov
xor
nop
fcoms
enter
xchg
and
jle
add
fldenv
inc
dec
shl
sti
scas
ljmp
mov
stos
je
idivb
add
daa
jne
orb
adc
jg
out
sub
mov
cltd
sbb
mov
popf
mov
jns
jnp
js
stc
sub
mov
sar
outsb
jmp
cli
and
shll
mov
jae
shl
sub
xor
nop
sbb
add
scas
movsl
mov
jnp
mov
call
cmp
and
fwait
or
adc
lret
idivb
mov
std
and
or
jne
nop
outsb
push
cmp
jle
xchg
dec
cwtl
sub
push
jl
mov
push
push
orl
xchg
jge
leave
outsb
pop
pop
test
sar
xchg
pushl
inc
das
stc
lcall
xchg
pop
mov
ds
leave
iret
pop
push
dec
gs
ljmp
and
jle
mov
repz
arpl
push
inc
add
repnz
mov
xchg
push
out
fldenv
and
shrl
cmp
gs
adc
insl
inc
pop
xchg
push
jmp
xchg
wrmsr
inc
pop
imulb
addr16
mov
jge
mov
cmc
dec
push
leave
cmp
pop
mov
out
cmp
jnp
call
fldcw
cmp
inc
mov
lea
pop
fcoms
test
clc
stos
fimull
xchg
dec
xchg
imul
lret
jg
push
push
jl
dec
xchg
fwait
xchg
push
lods
add
shrl
adc
xchg
int
mov
push
das
add
lock
cli
and
leave
and
fildll
leave
push
adc
cmp
mov
jmp
and
nop
mov
insl
mov
arpl
ljmp
fcomps
cmpsl
lods
cmovp
dec
adc
out
es
mov
push
insb
dec
aaa
outsl
xor
pop
cwtl
in
ficompl
lcall
mov
xchg
mov
xor
inc
inc
popf
inc
loop
orb
mov
test
pushf
xor
js
pop
add
stos
xor
sbb
jae
push
lea
mov
rclb
xchg
dec
or
inc
push
xor
bound
dec
xchg
xor
push
daa
mov
add
leave
mov
pusha
jo
xchg
cld
fwait
jns
jbe
mov
in
xor
psllw
cvtdq2ps
push
push
dec
bound
mov
in
adc
and
pop
stc
scas
push
std
or
cmpsl
xor
in
in
hlt
cmpsb
xchg
push
pop
add
testb
cli
inc
addr16
lret
leave
les
jb
push
in
push
mov
das
cmp
and
jg
lahf
cmp
jle
inc
stos
sbb
imul
data16
outsb
jmp
sub
or
shl
and
shlb
inc
faddl
fs
pop
jge
stos
imul
push
ja
pop
jecxz
js
mov
jg
inc
fwait
sbb
sbb
sbb
push
adc
jle
jno
test
xchg
and
push
and
es
cli
fsubrl
nop
lcall
int3
mov
stos
std
lahf
xor
rcl
in
jo
testb
leave
jecxz
add
jbe
xor
ret
icebp
daa
pop
lahf
mov
dec
cmp
loope
enter
mov
cmp
es
mov
xor
es
lds
xor
movsb
xchg
sbb
pop
xchg
adc
lcall
fcompl
mov
sub
mov
and
mov
cld
clc
pop
inc
xchg
inc
push
push
movsb
rorb
mov
adc
mov
add
inc
ret
push
add
xchg
add
sbb
aad
stos
pop
push
sahf
inc
test
push
mov
add
fmuls
dec
addb
xchg
sbb
dec
push
xor
pop
lods
jae
cmp
js
mov
mov
pop
pop
sub
test
add
into
popf
push
test
insl
faddl
jmp
mov
xchg
es
mov
or
mov
loop
and
dec
inc
xchg
out
iret
lcall
pushf
scas
loope
sbb
push
pop
jp
mov
mov
rcll
hlt
push
sbb
pop
call
arpl
mov
roll
adc
cwtl
jno
test
cmp
test
dec
push
push
sub
les
into
mov
mov
mov
inc
xor
rcr
mov
mov
mov
lods
sti
pop
sti
aad
dec
frstor
jnp
mov
movsl
cli
dec
repnz
test
push
and
mov
adc
mov
ljmp
mov
dec
aaa
fbld
xchg
nop
in
mov
sub
mov
add
add
dec
sbb
jns
inc
hlt
xcrypt-cfb
cmpsl
in
push
pop
cli
push
repz
jmp
jp
push
adc
sub
cmp
and
js
dec
outsb
hlt
in
push
aaa
ss
jno
insl
lock
xor
mov
arpl
pop
mov
pushf
jle
push
dec
mov
sub
insl
ja
int
pop
aad
cmp
jns
and
mov
frstor
test
test
push
mov
add
sub
loopne
inc
jg
loopne
cmc
mov
or
add
push
cmp
aad
ret
add
or
scas
and
adc
lea
jmp
mov
scas
push
call
lret
decb
icebp
scas
mov
test
lock
push
dec
rolb
dec
sti
std
push
rol
mov
inc
mov
test
mov
movsb
xchg
push
shll
lcall
mov
outsb
test
pop
imul
xor
jae
mov
lret
pop
inc
or
aad
xchg
jl
dec
je
cmp
push
subb
mov
jae
fnsave
and
add
jno
loopne
pop
and
mov
cmpsl
inc
in
lock
call
ss
sbb
jg
lods
rcll
jmp
je
push
das
cmpl
add
xchg
sbb
sbb
jno
and
cmp
hlt
sbb
loop
testb
push
jmp
jae
jmp
ljmp
loope
pop
jo
mov
arpl
out
add
aam
clc
dec
in
sbb
inc
les
in
jo
push
in
mov
sub
ror
int3
ror
mov
inc
inc
fsub
mov
push
stos
scas
mov
jo
and
imul
mov
pop
push
fsts
int
repz
pop
pushf
xchg
gs
adc
fistps
or
movsb
fwait
sbb
test
xchg
in
sub
loope
and
rcr
push
scas
arpl
sub
in
or
addr16
in
jmp
gs
sub
add
adc
mov
mov
or
push
scas
mov
xchg
sbb
enter
jo
jecxz
inc
sti
push
popf
cmp
scas
out
mov
scas
out
mov
xchg
xor
mov
ja
ret
or
test
lods
in
idivb
outsb
mov
mov
pop
loope
cmpl
jo
or
mov
cmpl
in
mov
cmp
lods
mov
mov
test
js
lret
add
or
clc
mov
pop
stos
sbb
mov
stos
xchg
dec
push
movsb
arpl
push
add
or
jg
outsl
inc
leave
mov
sahf
mov
dec
mov
and
jae
or
roll
imul
sub
sbb
dec
adc
out
aam
push
pop
and
mov
xor
sub
xchg
andb
daa
loop
xchg
mov
jmp
adc
rcrl
inc
xchg
inc
inc
dec
rol
xchg
popa
sub
sbb
push
mov
xor
jae
ljmp
lahf
addr16
sub
loope
jae
shr
das
jne
nop
lods
or
test
shll
addl
cmp
mov
repz
es
push
dec
jo
pop
mov
daa
sbb
in
pop
jnp
mov
jg
dec
mov
cmpl
mov
out
insb
xorb
cwtl
adc
pop
shrl
mov
fwait
test
ja
mov
mov
icebp
imul
shl
lods
sbb
test
push
mov
cmp
mov
mov
adc
add
sub
jns
sbb
push
fdivl
xor
test
add
insl
cmp
inc
pop
andnps
sarl
lock
or
add
push
mov
call
in
push
rorb
jnp
mov
add
mov
iret
in
xor
jl
test
pop
lods
movl
jl
das
sub
icebp
cld
rcl
jnp
dec
outsb
cmpb
test
ror
mov
stos
out
push
scas
ret
rol
dec
pop
sub
xor
repz
jbe
jg
push
sahf
popf
cltd
sbb
sub
or
cs
gs
jae
cmp
ss
js
pop
daa
out
cmp
jp
stos
jg
lods
sbb
xor
cmc
sahf
ljmp
add
movsb
mov
cmc
push
scas
movsb
in
std
sub
jno
jl
and
xchg
imul
sbb
rol
sti
jae
or
mov
js
xchg
lods
imul
imul
jnp
jg
mov
xchg
xlat
pop
fcompl
mov
xchg
iret
fnstcw
pop
idivb
ror
or
insl
in
cmp
pushf
dec
cli
orl
shll
push
cld
inc
mov
lods
fcmove
sub
lds
icebp
out
and
mov
fists
out
sbb
das
mov
frstor
mov
bound
or
sbb
rcr
outsl
push
ret
jg
push
cmp
cmp
push
fdivrl
shll
jp
and
sbb
arpl
pop
push
add
sub
push
add
xchg
xor
mov
roll
sub
push
dec
pop
push
incl
cmp
push
aam
mov
ja
leave
adc
sarl
stc
push
out
dec
mov
mov
insb
leave
movsb
mov
push
clc
ljmp
xchg
addr16
xlat
inc
xorb
fidivl
push
or
mov
push
dec
mov
mov
cltd
ja
add
sahf
hlt
push
mov
adc
cmc
pop
inc
jge
mov
out
sbb
ret
and
addl
sbb
xor
mov
imul
sbb
dec
inc
xlat
lock
or
sbb
enter
fwait
lcall
test
lods
fistps
into
inc
icebp
mov
push
out
pop
mov
stos
sbb
test
jno
sub
gs
pop
inc
hlt
fnstenv
ret
dec
mov
dec
ljmp
xchg
add
push
ror
pop
sbb
mov
cmp
mov
in
ret
aaa
in
inc
es
adc
loope
jb
test
mov
out
sbb
clc
aad
mov
scas
lock
xchg
dec
test
dec
aad
mov
adc
bound
xchg
fs
out
sti
cltd
int
sub
and
orl
push
jp
xorl
push
xchg
ss
xchg
das
shrb
add
add
dec
mov
mov
xor
xchg
xchg
icebp
frstor
mov
bound
fldl
incl
and
sbb
cwtl
divl
jne
pop
leave
gs
es
insb
jb
jo
mov
fsubl
movsl
leave
sbb
jmp
loopne
ds
sub
ja
mov
pop
shl
lods
ss
xor
test
icebp
mov
pusha
fdivs
cmc
notb
out
jae
sahf
xor
xor
frstor
dec
fdivs
sub
pop
add
imul
iret
add
mov
dec
inc
and
mov
test
movb
je
push
aaa
pop
pop
sbb
add
lret
lds
je
sbb
lahf
dec
loope
xor
imul
outsb
cmc
lock
add
sub
movsl
mov
jo
sub
repnz
sbb
cmp
dec
fidivrs
push
push
mov
outsb
enter
call
sahf
cmp
dec
fidivrs
push
push
mov
outsb
enter
call
push
cmp
dec
fidivrs
push
push
mov
outsb
enter
call
sahf
cmp
enter
xchg
ds
fisttps
push
push
aaa
cs
ds
inc
fwait
push
je
inc
jne
or
jb
push
inc
cmp
in
hlt
in
cmc
aam
movsb
xchg
mov
test
je
inc
jne
add
add
pusha
aam
cmc
aam
lret
xchg
mov
les
je
in
jne
add
ljmp
xchg
fwait
nop
cmpsl
test
out
out
fcoml
xor
or
inc
mov
or
push
repnz
or
cmp
repnz
stos
gs
enter
push
jns
pop
movsb
sbb
ja
test
sbb
pop
cmp
push
ja
or
mov
shlb
jo
test
test
jb
cmpsb
push
jb
insl
and
pop
jl
xor
movsb
add
or
aad
xchg
dec
pop
insb
ds
push
jno
pushf
loopne
mov
cli
add
adc
mov
in
add
aad
adc
imul
leave
pop
push
mov
arpl
call
adc
movsl
dec
bound
test
jne
add
fidivs
xor
aam
pushf
test
mov
and
ss
pop
xor
push
jp
dec
insl
mov
mov
mov
xchg
mov
mov
rol
cmc
xor
and
pusha
dec
pop
pop
pusha
push
js
xorl
clc
int3
in
jmp
xor
and
aaa
inc
inc
adc
adc
in
hlt
in
cmc
aam
movsb
xchg
mov
test
je
inc
jne
add
add
adc
in
hlt
in
cmc
aam
movsb
xchg
mov
test
mov
aad
sub
jno
enter
mov
lock
inc
aam
clc
outsl
js
andl
std
push
leave
cmc
sahf
and
dec
rcrb
mov
or
pop
or
sbb
mov
xlat
ss
lcall
mov
ljmp
push
push
mov
or
mov
iret
inc
inc
icebp
push
jnp
mov
mov
je
xchg
cmp
mov
mov
adc
test
push
aaa
mov
mov
sahf
lcall
inc
clc
imul
cmpsl
sub
sub
or
nop
movsl
mov
jno
mov
push
dec
rcll
cmp
mov
mov
outsb
andb
movsl
jbe
push
or
push
movsl
pop
nop
xor
fdivrs
ljmp
sbb
outsl
cmp
iret
mov
jo
pop
sti
je
dec
daa
mov
jb
pop
cltd
std
sub
sub
test
mov
adc
leave
mov
jbe
adc
cli
popa
ret
cltd
stos
jnp
and
jl
rorl
mov
in
clc
adc
scas
fsubl
push
into
in
lret
inc
mov
push
xor
jne
pop
or
fldl2e
jo
push
cli
mov
xchg
mov
or
xor
mov
sub
dec
mov
nop
and
scas
dec
add
icebp
cmp
icebp
cmp
orl
repz
jns
enter
cmp
ds
lds
lods
dec
and
fs
sti
pop
insb
lcall
mov
jnp
cmpsl
push
push
pop
push
or
and
jl
lcall
hlt
cmc
gs
inc
enter
sub
xchg
ret
jne
bound
in
repz
repz
xchg
roll
cmp
popf
stos
sub
push
in
mov
int3
and
pop
jnp
and
mov
xchg
fdivrs
dec
mov
fisubrs
push
lea
cmp
fisttps
cmpsl
add
dec
aad
push
cmp
rclb
daa
inc
pop
and
mov
push
in
lock
ss
pop
xchg
push
sahf
adc
repnz
hlt
inc
scas
inc
push
or
outsb
test
and
mov
out
daa
cmp
mov
stos
cmpsl
pop
jmp
sbb
das
mov
jge
jg
and
push
cmp
sub
dec
cmp
mov
adc
cmc
pop
out
loope
rclb
mov
mov
lock
and
cs
test
mov
and
adc
jp
add
cmp
stos
mov
aas
out
sbb
ds
mov
sub
add
aad
sub
jge
adc
int3
stos
dec
sub
jle
popf
add
push
add
dec
mov
movsl
ret
dec
lret
sbb
cmpsl
mov
loope
pop
lret
inc
movsl
pop
stc
mov
sbb
dec
outsb
sbb
push
push
sbb
adc
pop
loope
bound
fimull
push
repz
inc
loopne
mull
je
lcall
xchg
and
pop
mov
push
cmc
push
nop
sbb
mov
and
mov
mov
dec
cmp
lahf
adc
imul
inc
mov
out
mov
mov
ss
inc
ljmp
fisttps
adc
push
cmp
jbe
sbb
dec
lods
shrb
shr
gs
ja
and
push
ret
dec
imul
sub
mov
push
loop
sub
scas
xor
repnz
lcall
int
aas
add
test
inc
add
adc
add
les
sti
inc
pushf
dec
xchg
repnz
ror
sbb
inc
aas
stos
sbb
dec
aaa
mov
dec
jno
roll
dec
sub
imul
movsb
and
orl
adc
mov
add
jbe
test
movsb
outsb
test
cmp
push
nop
dec
xchg
mov
pop
sub
mov
loop
nop
adc
lcall
dec
shll
test
scas
inc
jns
push
ret
insb
test
inc
pushf
insb
push
popa
fiadds
pushl
iret
cmp
xchg
xchg
lds
sbb
inc
test
mov
mov
sub
icebp
pop
aam
mov
jl
xchg
stc
add
mov
inc
xchg
repz
cli
cmpsl
adc
dec
orb
cmpsb
pop
adc
ja
ljmp
sbb
and
rcr
sbbb
sti
xchg
xor
and
fstl
xchg
sub
movsb
test
test
mov
jmp
or
jnp
push
push
aas
xor
lret
dec
in
das
pop
or
xor
fxch
lahf
scas
das
push
mov
mov
mov
mov
das
mov
fsub
adc
data16
cmp
or
jno
aad
pop
mov
dec
push
pop
in
insb
ja
imulb
imul
in
inc
xchg
mov
fildl
xor
or
enter
inc
jecxz
sbb
xchg
repz
pop
arpl
sbb
imul
push
sbb
xor
sub
inc
mov
adc
adc
mov
xchg
fs
sbb
pop
inc
sahf
ja
ret
insb
iret
xchg
loope
cmp
movsb
outsb
cli
push
int3
cli
mov
dec
jp
js
test
and
stos
sub
je
mov
jmp
xchg
testb
in
mov
ljmp
push
insl
push
xchg
sbb
test
loope
int
sbb
add
sbb
sbb
daa
inc
push
adc
sbbb
sbb
push
sub
cmp
dec
shlb
adc
add
and
ljmp
fcompl
cmp
lea
in
mov
icebp
int
shrb
push
cld
aad
les
cmpl
sahf
jg
fadds
add
mov
loop
daa
push
mov
hlt
movsb
mov
leave
repz
cmp
test
pop
ds
cli
outsl
adc
roll
and
gs
jne
cmpb
mov
push
fs
adcb
cmp
bnd
fucomi
adcl
std
mov
cltd
mov
idivb
outsb
jae
jnp
in
inc
sbb
shll
enter
lock
add
mov
pushf
shlb
pushf
aas
pop
les
mov
sub
mov
jmp
pushl
scas
aam
lahf
cmpb
jl
lds
movsl
and
jbe
or
addr16
sbb
cmpsl
xchg
mov
or
xor
adc
jne
insb
xor
les
xor
fisttpl
jns
ds
jmp
mov
scas
mov
mov
fimull
movsl
ret
pop
dec
pop
movsl
movsl
lret
out
xchg
xchg
add
sub
adc
jg
dec
sbb
mov
jl
cmp
jle
and
mov
addr16
pop
mov
add
push
test
adc
lock
stos
mov
inc
xchg
in
inc
xchg
add
cmp
mov
loope
mov
mov
jp
lea
jmp
repz
jbe
rcrb
and
push
outsb
inc
loope
repz
scas
pop
push
out
cwtl
insl
dec
or
jecxz
dec
lods
add
test
add
mov
push
hlt
jae
mov
call
es
pop
push
adc
mov
push
xchg
jge
ss
fnsave
adc
or
aaa
nop
fdivrp
pop
jno
fs
xchg
test
sbb
jge
cs
repnz
push
xchg
sarl
rorl
fisttps
jne
dec
jnp
cltd
xchg
xchg
inc
ljmp
and
arpl
lods
pop
daa
mov
dec
and
mov
inc
je
mov
clc
call
jmp
fistps
clc
repnz
xor
test
jle
cli
mov
shrl
dec
xchg
add
aaa
js
leave
and
clc
insl
faddl
push
sbb
enter
sbb
outsl
jp
add
mov
push
jbe
mov
lret
pop
cli
fsubrs
scas
mov
test
in
push
and
cli
jmp
xchg
sti
loop
push
sbb
popf
cmc
mov
in
jl
xor
divb
sub
aad
js
cwtl
clc
xchg
mov
je
fadds
and
adc
adc
sub
and
out
mov
fstpt
rolb
or
and
add
cmp
mov
dec
pop
xchg
push
addl
fiaddl
dec
stos
cli
icebp
sub
sbb
cwtl
cmp
daa
and
push
fldcw
rcrb
rcrb
xor
and
dec
xor
mov
mov
pop
adcl
sub
or
push
adc
lahf
xchg
sub
xchg
or
out
les
mov
mov
lret
pop
pop
push
bound
cli
pusha
lock
jmp
fstpl
jo
mov
popf
int
dec
fistpl
mov
sbb
in
inc
es
pusha
lods
incb
lcall
xchg
add
cmp
fsts
sub
jns
dec
inc
mov
dec
jb
xor
cmp
divl
stos
cmc
push
fisttpl
mov
jp
xor
inc
cmp
xlat
inc
cmp
push
adc
pop
push
push
mov
push
int3
push
and
xor
sbb
jae
popa
mulb
inc
dec
shlb
jo
int
or
mov
es
lret
xor
push
sahf
shll
add
insl
std
cltd
push
mov
cmp
loop
fildl
sbb
bound
add
inc
mov
jecxz
sub
aam
add
sub
es
enter
enter
clc
lahf
sbb
cmpsl
add
bound
ljmp
and
sbb
xor
aad
dec
push
pop
cld
inc
inc
inc
mov
aad
decb
sub
stc
xchg
insb
aaa
dec
xor
lds
and
jnp
imul
adc
inc
xchg
out
mov
mov
lcall
lret
pop
inc
cs
enter
test
mov
and
dec
outsl
lods
sub
cmp
sub
in
pop
scas
jne
add
into
cmp
xchg
xor
int
sub
js
test
pusha
xchg
test
fstl
pop
pop
rcr
push
cmpsb
mov
xor
push
shll
int3
mov
int3
cmpsb
add
add
leave
mov
loopne
ljmp
inc
lea
test
and
and
and
cmc
hlt
push
cmpsb
push
jmp
mov
jb
xchg
jb
sti
lret
bound
xor
dec
mov
dec
mov
sahf
aam
adc
cwtl
sub
mov
jb
nop
loope
dec
jg
adc
xchg
dec
sub
mov
andl
in
test
inc
rol
stos
adc
push
sarb
frstor
jmp
cmp
call
cmp
xor
ret
jno
insb
jl
add
ljmp
sbb
pop
mov
idivl
aad
and
and
insb
aaa
cmpsl
push
mov
ds
inc
test
test
xchg
inc
push
stos
es
xchg
push
and
and
push
sub
mov
xchg
aam
aad
sbb
mov
adc
les
sub
bound
pop
and
dec
or
inc
outsb
aaa
lds
pushf
repnz
xor
push
aad
sub
hlt
pop
jae
and
push
or
int3
jecxz
rcll
out
repnz
jo
and
ret
in
and
mov
mov
lods
shlb
xchg
mov
dec
fcoml
mov
loope
inc
xor
mov
or
mov
sbb
scas
pop
lock
fidivrl
lock
mov
cmc
gs
add
andl
inc
loopne
repz
cltd
lea
pop
shlw
pop
cs
out
inc
loop
and
sub
pop
cmp
pusha
mov
pusha
push
fsubl
repz
jae
mov
in
test
push
sbb
lret
mov
popf
push
incb
rcll
dec
cltd
popf
clc
loop
dec
fnstcw
push
mov
sbbb
popf
add
sar
sub
inc
mov
jle
bound
or
sbb
jo
clc
pop
cli
sub
cmp
xor
mov
mov
hlt
jg
adc
cmpsl
add
xor
mov
jmp
push
pop
in
cmp
lds
clc
push
or
imul
mov
insb
xchg
popf
mov
jmp
out
jg
repz
out
jl
rcrl
test
jl
fsubrs
xor
out
mov
push
push
es
mov
push
cwtl
jo
subl
xor
add
or
push
cltd
push
xchg
ret
pop
or
mov
hlt
js
push
imul
lods
jnp
xchg
push
add
std
popa
jge
cmpsl
int
pop
daa
mov
push
sub
mov
insl
iret
xchg
loopne
dec
iret
popa
add
cmpsl
adc
push
sti
fsubp
mov
jo
icebp
xor
fs
pop
mov
call
pop
lods
cmc
lds
enter
mov
sti
push
xchg
sarl
sbbl
mov
push
mov
xor
dec
jg
or
jg
mov
lods
cmp
int
add
xchg
add
in
xor
pusha
inc
push
add
bound
jne
lods
stc
shr
js
or
adc
test
imul
mov
test
inc
mov
sahf
lea
in
inc
xchg
adc
push
mov
fildll
dec
mov
pop
rorl
outsl
mov
push
loope
iret
aam
imul
lcall
nop
fidivl
fldl
push
daa
es
cld
pop
clc
scas
rclb
in
mov
movsb
scas
mov
inc
scas
pusha
adcb
cwtl
xor
pop
aam
scas
mov
ret
pop
add
ret
int3
jmp
leave
push
fcmovb
cwtl
inc
jo
mov
jbe
movsb
push
loopne
in
fnstcw
push
or
mov
cmpsl
adc
cli
andb
dec
and
xor
iret
mov
add
test
sub
sub
pop
and
xlat
jne
inc
jne
mov
or
imul
pop
jle
push
ret
pop
cmp
xchg
adc
adc
mov
sub
xchg
mov
pop
xor
inc
aaa
jae
shrb
pop
push
sbb
arpl
sbb
lcall
pop
cmp
xchg
inc
aam
and
rol
movsb
sub
repz
and
lea
xor
pop
int3
mov
cmc
lods
pop
cs
push
test
xchg
add
lods
lock
and
shl
and
sub
fnstsw
lcall
sbb
clc
imul
nop
cmc
xchg
mov
je
mov
sub
mov
jno
mov
mov
push
jmp
ror
aam
push
out
outsb
cltd
xchg
cli
mov
divl
ret
sbb
clc
sti
lods
sbb
push
xchg
leave
sbbb
xor
ret
int3
int3
dec
repz
push
in
or
xor
pusha
xor
pop
jp
scas
mov
or
mov
fcos
lods
pushl
jb
dec
cmp
push
mov
out
dec
gs
push
push
lock
scas
call
jp
jo
push
lret
dec
push
add
mov
js
xchg
sub
lret
daa
cltd
xor
push
mov
jae
adc
movsl
or
outsl
rcr
scas
ficoml
pop
xchg
scas
mov
mov
stos
loop
fsts
jnp
xor
add
pop
xchg
xor
push
mov
xchg
in
xchg
cmpsl
pop
sbb
add
push
mov
repnz
out
cltd
stc
cmp
push
int3
in
push
mov
add
test
shll
push
jmp
jae
std
out
fidivrl
mov
xor
movsl
stos
pop
das
dec
pop
adc
js
and
mov
and
sahf
cwtl
jl
clc
icebp
lods
cltd
jne
cld
lahf
pop
adc
addr16
out
add
mov
fisubrl
lea
fdivr
aaa
lret
hlt
ljmp
push
fdivl
adc
popf
mov
cmpsl
jg
mov
outsl
jmp
jg
or
xchg
and
icebp
icebp
xor
jg
ret
fcmovbe
cmpsl
inc
lret
sbbb
das
mov
jno
xlat
inc
push
mov
lret
cmpsb
sbb
rclb
dec
repz
stos
js
mov
out
insb
jne
int
icebp
fstp
scas
repz
js
push
movsb
mov
lret
ds
jae
stos
nop
test
shlb
adc
scas
rorb
cwtl
repz
adc
hlt
gs
clc
rcrl
ret
pop
adc
std
cli
push
nop
sub
fmuls
inc
andl
xchg
and
push
inc
xchg
cmpsl
bound
add
sub
orl
mov
lahf
mov
ljmp
popf
mov
enter
stos
pushf
loope
data16
std
fidivl
arpl
or
push
sub
lcall
mov
bound
call
pop
int
mov
sub
dec
add
call
xor
push
loop
lods
cmpl
push
mov
dec
loope
loope
xor
jge
mov
inc
push
pop
aam
je
mov
cmp
mov
hlt
and
jnp
imul
lea
out
xor
push
inc
negl
jbe
ret
or
add
push
lds
jno
cli
dec
lea
loopne
inc
and
sbb
adc
adc
xor
subl
aam
cmp
xlat
lods
test
push
lret
loope
xchg
pushf
push
inc
push
mov
push
sub
outsl
punpcklbw
gs
push
xor
or
in
movsl
dec
call
xlat
mov
das
addr16
jecxz
lock
fistl
push
dec
inc
mov
fistl
or
stos
psubsb
cmp
fwait
mov
bswap
jno
movsl
sub
rcr
push
cltd
dec
sbb
xchg
test
scas
stos
xorl
frstor
add
andb
lahf
xchg
add
enter
rcrl
cmp
fwait
cwtl
imul
sar
es
testl
gs
addb
or
mov
inc
je
mov
fnstenv
sbb
out
test
pop
div
mov
or
in
xor
xor
inc
aad
inc
inc
dec
jmp
push
jns
and
inc
and
shll
and
mov
and
mov
leave
push
pop
fs
sarb
add
repz
pop
fidivrl
xor
mov
or
push
jae
pusha
inc
add
inc
nop
or
int3
cwtl
daa
push
and
out
repz
jmp
dec
mov
repz
jnp
push
loopne
mov
mov
dec
mov
pop
pusha
pusha
nop
cld
adc
ret
push
idiv
pop
add
mov
ret
add
inc
lds
fidivrs
cld
mov
js
sahf
fcoms
andl
fs
lods
jbe
cwtl
stos
cli
jmp
adc
icebp
pop
test
xchg
ficoml
lods
int
jle
cmp
call
xor
fildll
lret
mov
sub
push
push
jae
push
inc
pop
jle
movsl
icebp
mov
xchg
mov
arpl
popf
xchg
in
and
jl
lret
das
int
xor
stos
repnz
les
fists
lods
out
outsl
outsl
mov
ss
mov
fnstsw
adc
mov
js
push
pop
xor
push
jecxz
sbb
hlt
stos
repnz
jge
mov
dec
xchg
sub
rclb
rcl
push
push
and
arpl
mov
shrb
xchg
pop
ljmp
cmp
aam
cmp
inc
imul
iret
rcrl
adc
out
xchg
mov
and
mov
pusha
imul
outsl
mov
out
xor
dec
push
adc
mov
sub
inc
shlb
push
hlt
pmulhw
sar
bound
aaa
insb
arpl
inc
lds
fmul
dec
xor
out
mov
cmpsb
adc
jbe
daa
xchg
sbb
adc
xchg
repnz
dec
push
ss
sub
sti
sarb
or
rcrl
or
ja
or
push
out
sbb
test
cmpsl
shll
fdivrs
mov
dec
jne
pushf
push
cmp
pop
imul
int3
call
sbb
mov
dec
xchg
mov
je
sub
add
add
adc
in
hlt
in
cmc
aam
movsb
xchg
mov
test
je
inc
jne
add
add
adc
in
hlt
in
cmc
aam
movsb
xchg
mov
test
cmp
cmp
push
add
add
adc
cmp
hlt
in
hlt
aam
movsb
xchg
mov
movsb
mov
inc
fs
je
inc
jne
add
test
pop
dec
cmc
mov
pop
jnp
imul
push
xor
jae
sbb
pusha
push
add
pop
xchg
sar
loope
rcl
andl
xchg
push
bound
push
inc
jae
add
adc
and
xor
loop
repnz
xor
orl
pop
les
jnp
imul
or
or
ret
loop
rorl
icebp
shl
xor
push
xor
adc
lret
adc
sub
idivl
mov
inc
popa
fidivs
les
in
mov
or
incb
dec
or
or
sub
mov
dec
into
adc
xor
sub
jecxz
loop
ret
or
jl
dec
or
push
xchg
bound
addl
es
add
ret
mull
adc
cmp
sarb
jge
out
mov
mov
shll
xor
and
lret
shrl
enter
rorl
mov
aaa
incb
ret
jb
adc
sub
sbb
repnz
inc
outsb
mov
sub
push
arpl
fs
adc
or
and
sub
sti
shr
fwait
sahf
mov
stos
mov
push
cs
xchg
and
push
mov
roll
out
in
ffree
not
sti
inc
and
xor
xor
ja
jge
dec
imul
adc
cmpsb
nop
xchg
out
loopne
shl
mov
sub
popa
xchg
push
jae,pn
jnp
adc
and
xor
ret
loop
repnz
repz
xorb
arpl
push
add
adc
and
xor
ret
loop
repnz
repz
xorb
cmp
sbb
ret
rcll
out
stos
into
cmpsl
sarb
inc
pop
dec
sbb
xchg
sbb
dec
jle
shl
pop
mov
outsl
test
loopne
les
xor
xchg
or
xchg
gs
and
loopne
add
insb
pop
adc
lds
adc
xor
ret
inc
mov
push
lahf
test
xchg
enter
mov
js
xchg
jo
ret
mov
inc
mov
jo
sbb
or
pop
fcoml
mov
inc
cmpsl
mov
fs
stc
out
inc
push
dec
push
inc
sub
pop
iret
mov
mov
loop
xchg
and
outsb
push
ljmp
sbb
dec
shll
adc
scas
jecxz
hlt
mov
add
test
push
mov
dec
int
dec
pop
rorb
dec
aas
mov
push
pop
xor
icebp
scas
mov
lret
in
mov
mov
lcall
test
push
mov
mov
rcll
imull
sub
and
jae
jmp
fdivrs
mov
mov
test
arpl
test
inc
mov
push
fstpt
jecxz
mov
lock
ret
push
loop
dec
xchg
lods
jle
jo
dec
scas
sti
adc
xchg
mov
inc
push
add
jmp
pop
in
and
xchg
lcall
lea
jnp
push
dec
jg
xchg
ret
fisubs
xor
out
outsl
pop
cmp
mov
mov
push
and
leave
adc
inc
addr16
icebp
cmp
and
jo
sub
xor
xlat
dec
add
cmpsb
int3
push
mov
or
ret
pop
pop
jb
test
cmp
mov
leave
pop
dec
xchg
leave
jmp
xlat
add
in
sub
dec
movsb
mov
sub
xchg
movb
pop
jb
into
enter
dec
mov
cltd
push
pop
repz
or
push
pushf
inc
lock
mov
push
inc
loope
loopne
push
inc
cli
jecxz
lods
sub
test
outsl
insb
std
and
xchg
add
xor
lret
bound
rcrb
aam
jge
sub
int
cld
mov
pop
mov
cmpsb
repnz
aam
divl
negb
sub
mov
leave
add
add
mov
aad
mov
dec
scas
mov
das
sbb
pop
mov
scas
jb
out
mov
mov
sbbb
sub
je
mov
fidivrs
jl
lds
push
add
and
and
pop
sarl
rolb
inc
xchg
or
shll
hlt
add
sbbl
out
cmp
mov
jp
mov
aam
adc
dec
fcoms
mov
ljmp
jo
xchg
popl
sahf
int
or
out
inc
cmp
mov
loope
mov
mov
jne
mov
aam
inc
cs
cld
ret
or
or
pop
ds
in
mov
sbbl
fmul
lock
dec
arpl
mov
jp
push
nop
dec
sub
mov
jp
in
xorl
xor
arpl
mov
xchg
dec
jns
sub
lock
test
shrl
lods
or
pop
sbb
nop
lods
jge,pt
dec
jns
jno
mov
loope
repnz
gs
and
movsb
cmpb
mov
out
inc
or
xchg
xchg
cmp
shlb
scas
jp
jg
lea
adc
xchg
fcompl
sbb
in
cli
js
fldt
inc
rclb
add
fstpl
mov
mov
jne
test
data16
sbbb
call
push
xchg
aas
outsb
outsl
out
or
sub
pop
mov
andl
pop
push
outsb
cmpsb
popf
ret
mov
test
add
fwait
pop
xchg
and
mov
in
sub
idivl
xchg
xchg
cltd
in
jge
xlat
popa
cmp
aam
das
into
in
dec
push
fisttpll
ja
outsb
scas
stos
jns
and
and
mov
adc
jmp
mov
mov
or
hlt
add
cmc
sti
mov
int
fwait
js
sbb
or
sti
sbb
fs
outsb
out
mov
add
and
psubusw
movsl
testl
scas
jle
jg
cwtl
popf
mov
test
xchg
cmp
rol
fnstsw
test
bound
addr16
insl
push
sub
cmp
and
xchg
scas
dec
push
pushf
jae
mov
and
adc
leave
adc
adc
or
cmp
mov
and
inc
xor
lret
mov
js
ret
cltd
cmp
shll
sub
mov
lahf
pushf
pop
arpl
mov
pslld
scas
push
inc
jne
push
and
sub
jp
loopne
aaa
cmp
sub
adc
ret
and
dec
insl
sub
fdivrs
adc
mov
mov
or
push
out
xor
or
stos
lock
pop
hlt
jmp
pop
inc
pop
xor
push
sbb
jg
out
movsl
iret
dec
cmp
shufps
cmp
cmp
movsb
and
or
dec
addl
inc
clc
add
fwait
shrb
mov
push
fisttpll
sub
addl
adc
mov
jb
dec
push
inc
bound
mov
inc
fadds
lock
fldt
daa
leave
ret
stos
js
jg
dec
xchg
mov
movsb
add
rcr
mov
mov
push
mov
sahf
cmp
insb
jns
shrb
test
mov
jo
and
mov
pusha
mov
mov
adc
mov
sub
stos
mov
pop
dec
jns
jbe
and
mov
pop
add
add
gs
sbb
sbb
test
inc
push
or
icebp
lods
pop
fs
jno
cmc
or
adc
sbb
push
notl
leave
sbb
dec
xchg
sub
pop
push
rolb
inc
adcl
stos
mov
dec
and
and
inc
iret
xor
arpl
jecxz
rcrl
shlb
movsb
pop
adc
jae
dec
js
repnz
push
jo
push
jl
mov
mov
xor
lcall
aaa
adc
jns
dec
adc
enter
inc
sub
xchg
adc
subb
lods
jb
or
aas
cmp
xor
or
dec
push
sbb
movsl
in
faddp
add
pop
cmp
in
hlt
stos
adc
push
in
pop
sbb
jmp
xchg
push
cmc
push
xchg
jle
sti
pop
int3
mov
shrb
test
cmpsb
pusha
dec
mov
adc
mov
and
shl
jno
imul
inc
cli
dec
pop
test
mov
call
mov
aad
dec
rolb
cmp
jbe
jns
xchg
rorb
cwtl
cmc
std
jge
push
mov
sahf
xor
push
push
or
rcrl
sarb
xor
ret
movsl
inc
push
mov
mov
sub
push
pusha
inc
add
pop
int3
aaa
aad
cmp
mov
mov
das
xchg
pop
das
xchg
shl
xchg
in
popf
outsl
sub
psubq
or
xchg
or
clc
inc
dec
mov
push
iret
push
xorb
lcall
mov
shr
popa
adc
test
mov
bound
mov
xchg
sbb
jle
cmpsl
push
icebp
pop
in
inc
adc
inc
jmp
cmp
adc
mov
decl
and
leave
fsubrs
push
cmp
or
adc
ss
ss
inc
sub
mov
test
in
mov
adc
or
adc
mov
jl
cmpsb
inc
jmp
outsb
dec
adc
cmp
hlt
fs
jnp
shlb
mov
adc
fdiv
add
push
sub
xchg
push
fdivrs
fldcw
push
int
inc
adc
and
popa
lods
out
mov
scas
nop
test
scas
or
call
jecxz
addl
popf
dec
mov
sarb
nop
aad
jns
rcrb
jbe
mov
pop
sbb
adc
mov
mov
xlat
lock
pop
jo
lds
arpl
emms
aaa
or
aad
or
push
js
dec
lods
nop
inc
push
push
inc
into
push
sub
cmpsl
lea
lret
jbe
testb
pop
adc
pop
aad
push
popa
sbb
add
push
mov
push
std
push
in
or
xor
and
inc
push
lret
mov
cmpsl
sti
lahf
rolb
mov
rcr
scas
and
test
jae
and
pop
xor
gs
or
fdivrl
popa
or
push
shlw
cmc
hlt
adc
push
jae
cmc
outsl
in
clc
movsl
in
inc
push
mov
out
xlat
enter
loopne
cmc
jae
mov
je
sti
in
in
cmp
je
movsb
movsb
loopw
mov
mov
xchg
fisubl
dec
pop
in
pop
or
jo
cmpsb
cltd
xchg
inc
xor
stos
push
mul
movl
test
jns
xchg
ja
lods
xchg
mov
jge
jecxz
mov
movzwl
notl
imul
inc
gs
pop
lds
in
out
movb
mov
mov
push
popf
addl
aaa
dec
std
lods
gs
pop
pop
popa
cmp
dec
mov
ss
ficoml
js
cmp
iret
stc
add
ja
sarb
stc
mov
aas
inc
das
jnp
and
std
lds
pop
cli
sbb
add
testb
les
lds
or
or
shlb
mov
js
adc
mov
add
and
sub
scas
mov
xor
stc
mov
xor
adc
pop
ret
outsw
insb
push
jge
mov
loope
and
and
es
iret
push
out
mov
loopne
cmpsl
jmp
lods
mov
lods
fstpt
push
push
mov
xor
xchg
xchg
fiaddl
je
mov
js
loop
rolb
jb
adc
sub
inc
stos
inc
mov
mov
mov
out
mov
mov
dec
out
add
and
and
mov
xchg
sbb
rcr
in
mov
pop
and
xchg
xlat
push
or
mov
sub
out
aam
mov
mov
jecxz
pop
mov
outsb
inc
adc
insb
leave
xor
xchg
push
jb
out
out
dec
insb
pop
pop
data16
cmp
pop
jnp
push
dec
fistpl
push
mov
shl
mov
jbe
lcall
icebp
add
dec
jnp
shl
addr16
popa
pop
les
dec
movl
inc
es
mov
in
iret
cmp
scas
mov
fmull
push
sahf
enter
cltd
cmp
aam
loope
sub
arpl
pop
mov
in
jns
mov
adc
mov
mov
cmpsl
outsl
stos
mov
and
jno
lret
mov
xchg
push
dec
push
cmpsb
jecxz
sub
in
pop
std
mov
mov
std
sbb
shlw
inc
pop
push
lahf
cltd
push
xor
imul
gs
cld
cmp
ret
ljmp
push
icebp
lds
in
mov
sub
lods
sbbl
add
dec
mov
and
push
jbe
fidivrs
hlt
loopne
inc
js
xchg
lods
mov
sub
add
pop
imulb
dec
repz
mov
and
jno
mov
jae
out
rcll
cmc
std
or
int3
fiadds
and
mov
xor
sbb
mov
mov
aaa
sbb
nop
jmp
jno
sub
dec
push
or
fstp
ret
ljmp
dec
lcall
pop
push
mov
das
xor
add
inc
mov
xchg
adc
mov
cs
pop
mov
jb
adc
push
rorl
je
aam
fsubr
ljmp
scas
in
cmp
lods
or
icebp
dec
mov
sub
adc
push
mov
or
mov
sahf
daa
shll
xchg
jmp
repnz
fdivrl
hlt
lods
mov
or
cltd
dec
orb
push
inc
add
test
dec
push
loopne
jo
jne
shll
xchg
adc
inc
adc
xor
int3
ret
pop
pop
pop
xchg
daa
je
inc
jae
les
jnp
mov
scas
or
das
jecxz
in
jle
mov
cli
add
cmpl
in
jp
icebp
cmp
test
sbb
mov
push
mov
fmulp
dec
jo
adc
inc
xchg
inc
adcb
test
push
imul
xorl
pop
xor
cmp
sti
dec
aad
jbe
adc
mov
xchg
mov
gs
inc
jns
pop
arpl
push
divb
mov
xor
lds
xchg
xchg
jnp
hlt
cmc
xchg
xchg
je
xor
imul
cmp
neg
inc
and
aam
int
sub
lea
pop
pop
pop
mov
add
push
cmp
adc
add
cltd
adc
in
or
stc
jg
sub
cmc
lods
or
shrb
mov
or
add
sbb
jp
aad
out
add
jmp
cli
adc
imul
jecxz
inc
test
lahf
movl
movsl
test
xchg
subl
mov
aas
out
out
pop
std
ss
rcrb
jle
orb
xchg
iret
dec
sbb
pop
sbb
es
dec
sub
addb
out
inc
jae
repz
inc
ret
add
sub
das
test
pop
cmpl
xor
rorl
xchg
and
and
movsb
lret
mov
dec
adc
mov
or
xchg
test
push
add
out
push
stos
xrelease
inc
cs
mov
pop
stos
incl
lods
int
leave
jmp
lahf
mov
lods
push
pop
clc
rolb
ljmp
jns
inc
dec
or
call
nop
int3
lock
ja
mov
jo
pop
mov
or
cwtl
add
sbb
push
lret
in
mov
insl
push
pusha
je
icebp
sub
cmp
pop
test
push
enter
test
adc
push
js
dec
sub
sub
fnstenv
mov
inc
and
and
push
add
pop
popf
rclb
mov
sbb
loope
xor
adc
jmp
fstps
xor
add
out
pop
cmp
or
xchg
fiaddl
inc
or
lret
and
lock
pop
lock
sbb
scas
insl
das
xchg
sub
cmp
adc
mov
outsl
lds
push
ja
sti
nop
nop
mov
fisttpll
mov
jae
pop
jg
jmp
adc
ret
mov
push
cmp
push
pop
hlt
das
and
cmp
stos
push
sbb
and
rcrb
fsubs
jl
lret
popa
cltd
bnd
sub
sbb
xor
cli
sub
fs
iret
xchg
or
mulb
mov
enter
hlt
xor
mov
mov
inc
jne
fnop
clc
push
sbb
push
mov
dec
mov
outsl
mov
jae
mov
xor
xor
sub
xchg
xor
xor
xchg
cmpsl
cmp
insb
into
dec
lock
cmpsl
lret
mov
dec
mov
and
push
add
in
mov
cld
mov
nop
push
cld
repnz
fstps
push
or
aas
les
imul
mov
ret
popf
les
pop
push
addr16
flds
pop
fld
mov
or
pop
test
push
mov
into
cmp
repz
std
test
cmpsb
lcall
sub
out
ret
ret
adc
pop
in
cmp
cmp
adc
mov
das
lret
loope
pop
testl
mov
pop
or
and
push
ja
in
fcomp
stos
xor
dec
jp
and
fbstp
and
dec
cmp
mov
rorb
out
pop
sarl
or
dec
mov
stos
lea
or
cld
push
cmpl
sub
cmpsl
mov
pop
sub
cmc
outsb
repnz
inc
mov
in
push
rcrb
addr16
adc
xor
inc
stc
pop
mov
push
mov
pop
imul
insl
in
in
adc
aaa
adc
cmp
out
inc
xchg
jno
lods
clc
cmpsl
js
or
dec
inc
stc
cs
mov
jl
xor
mov
xorl
clc
or
stc
aas
sub
push
insb
lahf
adc
es
push
divb
out
out
cmp
ret
enter
pop
imul
jno
es
mov
xchg
test
sti
or
or
rcrb
mov
repnz
push
ljmp
push
xchg
movzwl
add
mov
add
pop
movsl
adc
sbb
mov
mov
ret
cld
mov
and
adcb
pop
xorl
xchg
incb
mov
and
sub
jp
repz
lods
lret
enter
pop
aaa
bound
lcall
dec
sbbb
fstps
ret
sahf
ljmp
aaa
jle
fimull
fs
es
inc
inc
pop
daa
imul
jbe
xlat
mov
and
pop
cmp
xor
sahf
push
stos
sarb
add
iret
sub
stos
enter
xor
enter
sub
mov
mov
mov
shll
clc
inc
pop
pop
inc
cmpsb
cmpb
mov
pop
jl
sub
movsb
cmpsb
fsubrs
push
pop
pop
sub
dec
push
icebp
stos
les
adcb
in
sbb
sbb
push
dec
mov
test
cmp
or
mov
nop
sub
imull
mov
mov
or
test
add
fstpt
popf
in
mov
sub
pop
shrb
fs
push
movsb
mov
out
aaa
fcom
xor
repnz
adc
test
dec
out
cmp
and
insb
mov
fwait
sub
push
sbb
sahf
cld
jge
add
mov
sbb
mov
cwtl
aad
enter
inc
xchg
push
dec
js
clc
xchg
lahf
xchg
movsl
pop
daa
cmpsb
sbb
adc
pop
test
pushf
cmp
and
xlat
mov
out
inc
mov
mov
xchg
out
adc
add
xchg
in
add
lret
daa
out
jnp
push
jmp
and
sbb
loopne
inc
outsb
mov
cmp
pop
sub
jbe
push
ja
sub
movsl
movsl
std
aam
iret
jp
push
xor
fdivr
repz
fdiv
dec
or
sbbl
sub
js
push
shl
bound
insl
loop
push
xchg
aaa
je
addr16
cmp
mov
xor
xchg
xchg
rcr
aam
lret
sti
lods
adc
add
out
dec
rol
jb
dec
push
sub
lcall
imull
scas
dec
stc
pop
mov
and
mov
xor
cmp
mov
cmp
mov
ds
mov
lods
cli
fsubs
pop
push
dec
and
lcall
inc
sub
cmp
cmpsb
sahf
pop
xor
lcall
xchg
ja
lock
or
cmp
adc
or
dec
or
aad
pop
popf
sti
loope
call
pop
sub
sub
into
mov
pop
ret
call
mov
mov
into
cmp
stc
inc
test
fmull
xor
inc
into
push
dec
mov
inc
int
jg
pop
xchg
dec
fldenv
dec
lock
in
fdiv
nop
jb
pop
jnp
test
popf
ljmp
inc
pop
aam
mov
cmpsl
adc
and
scas
pop
icebp
inc
rcrl
push
lock
or
pinsrw
pop
mov
movsl
pop
mov
push
jle
shl
sub
add
cmp
fisttpl
aaa
sbb
lods
and
gs
jle
sbb
and
push
scas
xchg
cmpsb
adc
jmp
or
adc
adc
cmpsb
dec
js
inc
push
jno
mov
loopne
mov
push
cmp
and
and
xchg
jbe
sub
sbb
push
adc
sbb
mov
mov
sub
pop
pop
add
sub
xor
call
lret
adc
inc
inc
movsb
popa
stos
push
subb
test
cwtl
cmc
call
mov
push
and
dec
imul
and
lds
cwtl
fmull
aas
stc
xor
adc
jle
fs
xor
adc
out
enter
pop
fsubs
xor
push
fnsave
cmc
test
push
inc
cld
and
add
int
hlt
xchg
lods
pushf
add
fidivrl
int
pop
xchg
xchg
mov
int3
xor
fwait
out
jae
or
in
loopne
jl
inc
jb
inc
jae
add
adc
and
xor
ret
loop
repnz
repz
xorb
arpl
push
add
adc
and
xor
ret
loop
repnz
repz
xorb
arpl
push
add
adc
push
xor
ret
jecxz
mul
ret
andl
jbe
xchg
push
cmpsb
jae
add
adc
mov
sbb
rep
hlt
ficompl
lret
dec
ljmp
xor
mov
mov
push
add
push
mov
pop
mov
add
mov
mov
mov
movzbl
movzbl
sub
je
call
call
call
push
pushl
call
pop
pop
push
push
push
push
pushl
push
call
push
push
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
ret
mov
dec
sbb
sub
sub
sbb
lret
fucomi
stos
cli
mov
sub
jnp
dec
sbb
sub
dec
or
stos
jmp
sti
ljmp
mov
sub
jnp
dec
sbb
sub
dec
or
stos
jmp
fsubr
scas
mov
in
xchg
out
out
mov
pop
daa
cmp
inc
sbb
loopne
pop
aam
or
sub
pop
test
outsl
into
pushf
je
pop
jle
mov
jle
pop
push
je
roll
add
xor
into
push
mov
and
scas
jnp
mov
outsl
data16
cmc
rcl
fsubrs
int
and
push
cmp
in
out
outsb
sub
or
stos
add
mov
or
test
rcrl
pop
mov
push
andl
sbb
adc
out
fstpt
jecxz
jnp
xor
insl
xor
mov
mov
popf
xchg
push
jmp
mov
sti
jmp
mov
fs
cmp
dec
sbb
sub
dec
or
stos
jmp
sti
mov
fucomi
stos
sti
mov
pop
imul
or
sub
or
outsl
ret
fwait
or
in
ljmp
cmpsb
stc
scas
je
js
jg
push
cmp
push
and
rep
decb
fwait
out
iret
pop
sub
and
sbb
dec
or
stos
jmp
sti
mov
fucomi
stos
sti
mov
sub
jnp
dec
sbb
sub
dec
or
stos
jmp
sti
mov
fucomi
stos
sti
mov
sub
push
xchg
pushf
sbb
pslld
clc
mov
test
scas
loope
outsl
inc
sahf
popf
sbb
push
ss
icebp
inc
enter
movsl
lock
mov
dec
pop
divb
jne
push
es
test
xor
sub
or
pop
lock
outsl
std
mull
dec
and
dec
daa
add
jmp
in
sub
jns
push
inc
xor
inc
mov
lock
or
cmp
push
into
repz
add
mov
xchg
and
xchg
add
cmpsb
add
jbe
add
mov
jbe
inc
into
sbb
dec
pop
loop
pop
dec
xchg
mov
mov
push
cmp
mov
xchg
movsb
sti
popa
lret
jnp
pop
jl
add
repz
sarb
xchg
push
xchg
dec
stos
outsb
fdivrp
add
sarl
stos
std
arpl
int3
aaa
pop
scas
fildll
fs
pop
test
cmp
out
or
mov
out
shrl
lods
or
fcomp
pop
and
cmp
push
sub
scas
add
stc
and
mov
inc
add
sbb
stos
cmpl
lcall
out
and
xlat
jae
lods
in
jl
fisttpll
mov
faddl
leave
ret
out
push
loope
negl
mov
hlt
or
in
and
mov
int3
mov
pop
lea
inc
fwait
dec
scas
dec
adc
push
incl
adc
lahf
add
das
pusha
xchg
mov
fisubrs
mov
push
int
pop
mov
addb
test
mov
xchg
xor
sub
fisttpl
mov
aam
pop
jecxz
cmpsl
std
push
dec
enter
pop
sub
xchg
mov
dec
sub
sti
mov
pop
test
or
popf
sbb
inc
in
pop
xlat
iret
adc
cmp
mov
push
das
imul
sub
mov
jbe
inc
outsb
sub
out
pop
jle
sti
ret
in
push
gs
stos
dec
sbb
and
daa
in
test
aam
mov
aas
or
mov
mov
gs
sub
pop
pop
out
push
scas
jmp
xor
jle
push
push
add
lret
adc
jmp
cli
xor
adc
sub
lret
adc
clc
mov
xchg
add
lahf
push
dec
xchg
cs
dec
add
adc
jecxz
test
ss
fwait
repnz
imul
mov
lahf
insl
jo
nop
or
push
aam
ficomps
lods
sbb
pop
push
jno
int
xchg
ss
jmp
fsubr
sbb
addb
mov
mov
push
add
iret
movsb
xor
sti
sbb
and
push
jge
in
mov
add
or
repz
inc
mov
mov
jo
pushf
mov
pop
je
lea
add
push
or
and
outsl
rcl
rcll
push
std
adc
pop
std
push
mov
jl
bound
mov
rorl
push
push
shll
mov
sub
inc
dec
dec
jle
dec
stc
mov
addl
push
fidivl
call
push
aas
mov
roll
lret
mov
push
sub
mov
push
mov
xchg
jmp
push
cmp
inc
out
insb
mov
jecxz
mov
es
lret
jb
sbb
push
pop
xchg
sti
xor
mov
xchg
popf
clc
sbb
in
dec
in
repz
es
addr16
mov
push
sbb
repnz
pop
sbbl
xchg
and
jo
xchg
sub
cmovnp
sub
cld
scas
pop
shl
out
rcl
loopne
ja
xchg
mov
push
notb
adc
and
jbe
and
pop
outsw
in
nop
mov
aam
jae
in
jnp
int3
cltd
test
push
stc
imul
add
dec
jo
push
sub
pop
mov
fwait
jmp
cmp
jecxz
xchg
sub
loop
loope
dec
mov
xor
add
testl
sbb
xchg
sub
daa
gs
adc
cmpsb
dec
imul
pop
fmuls
shrl
jnp
adc
xchg
xchg
push
xchg
dec
pop
cmp
lds
mov
das
in
cmp
sarb
fistpll
movsl
jae
push
cmp
mov
mov
cmp
loopne
add
add
dec
mov
nop
or
mov
push
int3
mov
xchg
pop
fstpl
mov
pushf
ss
repz
sub
cmp
dec
jg
pop
lods
int3
jp
mov
dec
loope
aaa
jp
mov
mov
xlat
lahf
mov
movsl
scas
cmpsb
or
psrad
ret
mov
rorb
lcall
imul
adc
sbbl
repz
mov
icebp
cmovo
push
dec
pusha
jo
dec
add
mov
ss
jecxz
adc
cs
cmp
jbe
push
mov
stc
popa
cmpsb
out
int
push
pushf
sub
mov
dec
in
call
rep
aad
mov
and
rol
scas
add
inc
jb
xchg
jne
jnp
lcall
enter
bound
inc
lock
ja
shlb
push
icebp
jae
scas
cmc
mov
fnsave
mov
aaa
fdivl
add
fs
dec
mov
add
popa
sbb
lahf
int3
stc
ss
mov
sbb
cli
mov
add
xchg
rcll
and
cltd
mov
inc
gs
bnd
test
adc
jge
lahf
ljmp
outsb
mov
in
scas
jecxz
ss
sub
data16
sbb
and
mov
ret
push
add
cld
cmp
mov
or
or
rorl
ret
lahf
pop
jg
pop
sbb
leave
pop
mov
push
test
fsubr
mov
fstl
pop
dec
popa
pop
xadd
add
sbb
es
mov
cmp
mov
in
add
push
adc
jg
jmp
imul
pop
loope
jne
xor
or
mov
je
push
sub
imul
push
out
push
push
mov
xor
call
inc
jg
sbb
mov
outsb
adc
ret
fisubrs
sub
pop
mov
xchg
hlt
fcmovb
loop
mov
xchg
xchg
fs
rcr
pop
jl
cwtl
xor
xor
push
gs
nop
sbb
test
sub
add
sahf
aas
fdivrs
or
jl
mov
das
and
nop
shl
dec
je
mov
addr16
xchg
ret
xor
xchg
jno
cmp
das
mov
xchg
jbe
mov
fists
push
sbb
push
fisubrs
inc
push
ja
popf
xchg
sahf
pop
fldt
lea
arpl
lds
inc
lea
mov
or
mov
cmp
and
xlat
ret
xchg
fnsave
aas
push
imul
subb
inc
pop
into
xor
pop
dec
dec
adc
or
xor
test
xchg
cmp
cmc
sub
les
popa
lods
outsl
add
cmpb
mov
jmp
inc
sub
data16
inc
push
icebp
std
decl
repnz
adc
pop
sahf
pop
bound
cltd
adc
mov
dec
mov
cmpsl
fwait
push
jl
outsb
push
inc
jp
out
sub
push
out
inc
jno
mov
ret
fsubl
mov
mov
and
sub
mov
or
stos
jns
push
xor
inc
mov
xor
bswap
adc
mov
rcrl
stc
std
dec
and
aas
mov
fcmovu
popf
jo
imul
fists
shl
or
mov
mov
lret
les
add
and
xchg
lods
stos
lcall
arpl
imul
in
inc
popf
lcall
loopne
pop
faddl
cmpsl
jp
push
add
xchg
xchg
repnz
xchg
push
cmp
inc
jmp
rorb
jecxz
cli
mov
pop
out
insb
js
ja
push
sbb
scas
clc
cwtl
sbb
negl
les
or
dec
in
cs
jo
xor
dec
or
fldl
push
leave
outsb
lcall
jno
aad
ds
hlt
mov
lods
ljmp
leave
mov
push
mov
push
pop
cld
call
xor
xor
mov
mov
ja
jmp
pop
popa
xend
sub
rcr
jne
push
in
popf
lods
ljmp
cmp
push
mov
mov
push
aad
es
fdivrs
and
cmp
cmp
push
pop
mov
cld
cmp
mov
mov
cltd
xchg
scas
mov
and
jbe
les
push
jle
int3
in
daa
ljmp
inc
lret
test
arpl
xchg
scas
out
jbe
pop
pop
push
icebp
fadds
dec
dec
adc
jecxz
push
cmpsb
xor
push
fldenv
mov
aas
xor
mov
sub
push
mov
cmp
loopne
adc
clc
or
test
mov
ja
mov
in
adc
hlt
shll
mov
repz
dec
or
sub
xor
movsl
mov
daa
pop
movsl
adc
inc
aas
jecxz
lahf
int
sub
pop
push
jns
adc
inc
add
xor
cmp
icebp
jge
jecxz
rcr
mov
icebp
leave
popa
xor
aaa
ljmp
pushf
movsb
sbb
fimuls
pop
cltd
inc
test
sbb
push
in
pop
adc
jo
jns
jne
iret
mov
dec
dec
xor
stc
and
dec
push
dec
dec
jb
xlat
lods
stos
mov
mov
mov
aam
adc
cwtl
shl
add
mov
xorb
daa
xchg
stos
cmp
xchg
icebp
das
aas
mov
mov
push
push
mov
stc
adc
stos
lahf
test
sti
jo
inc
mov
and
lret
sbb
sub
sahf
mov
fcmovu
rorb
mov
xchg
dec
arpl
and
fcompl
push
sbb
gs
stos
xchg
cltd
mov
push
mov
dec
stos
fimull
push
mov
arpl
jg
int3
xchg
xor
mov
test
xchg
and
lret
repz
push
pop
jbe
adc
repz
fwait
adc
mov
fimull
scas
jge
outsb
jns
xor
stc
popa
pusha
int3
test
js
sbb
lcall
mov
ljmp
mov
push
xchg
fstl
cmp
xor
and
int3
loope
pop
mov
mov
sub
hlt
sbb
nop
mov
idiv
fildll
mov
je
test
inc
mov
mov
insl
daa
mov
sub
mov
add
repz
cli
pop
and
scas
loopne
fwait
mov
mov
mov
adc
cwtl
popa
push
ret
or
fwait
mov
movsb
ja
out
bnd
shlb
stos
mov
pop
xor
movsl
hlt
sbb
outsb
into
cmp
js
cmc
jne
and
jno
dec
mov
ret
sti
scas
pop
lds
enter
subb
shr
dec
les
sarb
mov
add
lods
pusha
lahf
fwait
lods
sbb
mov
xor
addr16
mov
sti
sub
cmp
jae
add
xor
out
sbb
mov
sbb
lods
xor
mov
stc
sbb
inc
xor
mov
jmp
dec
push
ss
dec
sbb
pop
mov
sub
mov
test
jp
insl
ret
push
mov
stos
popf
adc
xchg
loopne
xchg
sbb
add
dec
sub
lret
mov
lret
adcb
ja
push
add
aas
sbbb
loopnew
dec
push
rcrb
mov
js
popa
incl
roll
dec
adc
mov
jl
inc
insb
pop
jl
movsl
outsb
idivb
in
lea
roll
xchg
jo
loope
aad
mov
sarl
bound
mov
xchg
xor
pop
fucomi
gs
aam
repnz
fmull
fistl
in
in
jle
insb
mov
mov
jl
mov
mov
shlb
pop
insl
mov
pop
or
loopne
insb
int3
push
outsb
fldcw
test
cltd
sbb
out
fidivrl
mov
bound
addb
stos
lret
mov
pop
adc
lock
jne
mov
mov
leave
insl
ss
fs
lcall
pop
pop
lods
inc
stos
addr16
sub
add
sub
dec
xchg
inc
or
mov
dec
lods
sub
sahf
dec
inc
gs
movsl
cltd
mov
js
in
popl
addr16
scas
mov
xchg
jo
dec
outsl
cs
pop
xchg
jo
cld
mov
into
lock
icebp
addr16
jae
push
cltd
pop
inc
jl
mov
imull
pop
and
lsl
clc
mov
inc
cld
xorb
dec
subl
inc
or
and
mov
pop
push
push
stc
pop
insb
jbe
cmp
mov
insb
or
aad
test
adc
sbb
jmp
outsl
inc
or
insl
fidivs
pop
inc
push
lret
cmp
jge
push
fimull
and
jno
outsb
and
sbb
in
sarl
xchg
pop
cmc
fcom
repnz
ret
stc
mov
mov
pop
aaa
in
jecxz
xor
cmp
mov
push
sub
stc
popf
dec
push
dec
inc
sarb
addr16
sub
inc
mov
in
lea
jno
mov
jnp
mov
xor
iret
push
dec
bound
cmp
sbb
ds
pop
shll
pop
xor
jmp
fnsave
into
cmpsb
bnd
push
mov
push
dec
fsubrl
iret
repz
xchg
cmp
inc
js
sub
loop
lods
or
shll
stc
inc
mov
cmp
test
jp
pop
addr16
mov
out
insb
hlt
mov
jae
mov
hlt
mov
test
dec
pop
sub
or
mov
xchg
ss
std
lcall
maxps
sti
sbb
xchg
inc
mov
js
xor
out
sbb
andl
rol
cmp
test
stos
mov
in
mov
das
in
xor
test
xor
dec
out
shll
add
out
mov
dec
sub
mov
xchg
enter
mov
test
cs
lea
push
fs
mov
in
int
aaa
fdivs
subb
imul
mov
cmp
adc
push
xchg
into
xor
sub
jmp
aad
mov
addr16
gs
cmp
jne
inc
sbb
sbb
jae
sub
testb
fwait
dec
lds
test
or
mov
inc
mov
jp
jo
pop
jle
sti
out
call
je
out
fcmovbe
leave
cmp
push
dec
mov
or
mov
push
pop
xchg
push
jae
ret
jns
jl
xchg
icebp
dec
jg
stos
pusha
leave
mov
cwtl
arpl
fnstsw
pop
add
mov
cmpsb
or
imulb
fists
dec
and
loopne
jg
cld
push
out
dec
data16
jb
bound
test
sub
sub
xchg
call
ffree
lods
outsb
adc
and
lock
enter
mov
dec
push
push
mov
sub
lds
iret
cli
mov
sub
ss
pop
and
int
jne
dec
shlb
and
jmp
ret
xlat
adc
sub
sbb
mov
lods
es
mov
es
cmp
xchg
movsl
dec
add
cmp
int3
and
repz
in
cmp
cld
stos
es
icebp
jmp
xor
add
adcb
add
lods
gs
mov
dec
mov
les
in
mov
loop
lea
mov
cld
adc
and
leave
enter
add
sbb
sbb
into
cmc
lds
add
add
imull
daa
sbb
xor
fidivrl
xchg
xor
call
inc
pop
mov
sbb
jmp
xchg
mov
les
imul
cs
push
or
dec
ficoml
inc
adc
jbe
inc
pop
pop
scas
dec
outsl
test
js
push
or
pusha
sarb
and
iret
mov
or
sub
aam
dec
mov
mov
inc
cmpsb
cmp
or
push
and
rclb
mov
jp
out
das
inc
xorb
xor
inc
mov
jg
sbb
mov
dec
out
mull
stc
aad
push
add
jo
pop
jl
sbb
pop
aaa
cmp
add
out
jg
rcr
mov
test
pop
es
ja
fcmovnb
ret
cmp
or
xchg
jae
in
fmul
lret
js
pop
mov
ret
mov
jns
inc
test
jg
int3
in
pop
mov
lds
sub
push
push
lods
mov
sahf
pushf
cmp
cs
push
aaa
jle
shlb
je
mov
ljmp
daa
xor
outsb
test
jmp
add
pushl
int3
xchg
icebp
push
fsubp
dec
mov
repz
subl
sub
push
pop
pop
movsl
cltd
jle
and
xor
iret
xchg
mov
insb
in
xor
add
jne
and
jle
pop
lea
ja
hlt
cmp
pop
mov
jecxz
push
lock
pop
outsb
lcall
cmp
adc
dec
ret
stos
xor
loopne
mov
mov
xor
inc
inc
xor
aam
ret
scas
jnp
dec
stos
mov
inc
mov
jle
fnstsw
xchg
push
sub
loopne
dec
jb
xor
pusha
pop
mov
mov
inc
aaa
mov
ret
inc
pop
push
cmc
lahf
pop
jo
or
xor
ja
call
dec
shlb
push
je
jge
mov
pop
ds
andl
dec
popa
pop
cmc
cwtl
and
xor
sbb
and
add
xor
ja
rcrl
jns
fiaddl
shrl
in
or
in
bound
pop
loopne
repnz
cltd
aaa
into
inc
and
fwait
adc
mov
sbb
jp
mov
pop
shll
inc
add
xor
mov
jnp
jb
test
jns
mov
mov
aaa
sbb
inc
sbb
pop
popa
xor
add
leave
adc
movsb
push
or
cs
lods
cmp
push
arpl
add
rclb
fnsave
jge
incl
sub
popa
xor
in
shr
daa
cmp
nop
sbb
aam
mov
sub
fs
add
jne
ljmp
xchg
into
inc
xchg
push
in
mov
lock
rcrb
imul
push
xchg
ret
ret
pop
xchg
ficompl
shl
jge
xor
subb
inc
inc
outsb
loop
xor
and
pop
mov
jbe
xchg
enter
mov
push
fstpt
jecxz
aam
js
inc
cld
insl
cmp
and
ret
xchg
repz
mov
int3
mov
add
pop
adc
sub
lret
leave
xchg
ds
cmc
add
pop
outsl
mov
int3
fisubl
xor
lock
fsubl
jnp
nop
xor
sbb
push
ljmp
enter
insb
int
mov
xor
push
jnp
ret
dec
xor
mov
btr
call
data16
dec
pop
push
cmp
mul
in
jnp
sbb
ret
cwtl
pusha
daa
insl
jb
lods
and
xchg
push
test
fistl
and
mov
xchg
sub
outsl
out
lock
lahf
movsl
in
aad
adc
inc
add
jg
adc
jb
dec
call
inc
cmc
das
xchg
lret
xlat
add
mov
fisttps
pushf
xchg
jb
pop
ss
decb
data16
cmp
xchg
movsl
lods
push
test
inc
stos
fstl
ds
aaa
rcll
xor
mov
test
xor
push
sub
std
pop
push
jl
add
fwait
mov
mov
cmp
scas
push
ficomps
cmp
cli
push
sub
adc
ror
and
xchg
repnz
sub
sub
jb
cwtl
insl
popa
adc
pop
mov
sub
cmp
inc
mov
in
out
xchg
in
icebp
push
mov
in
inc
add
jmp
pop
js
mov
out
outsb
mov
test
sub
js
xchg
popf
negl
xchg
leave
aam
inc
shlb
dec
mov
jle
leave
sub
pushf
lods
dec
lock
fdivrp
mov
xchg
inc
cmp
push
xchg
lahf
sub
outsl
cmp
mov
dec
pop
ficompl
imul
jns
add
inc
int
mov
insb
xchg
data16
pop
pop
outsl
in
fdivrp
mov
jne
shlb
or
sub
sbb
mov
dec
xor
mov
push
lock
pop
mov
lock
sbb
cld
test
notb
xor
jge
fldenv
sub
xor
cli
cld
rcll
cmp
out
aaa
inc
jg
lea
loop
jnp
dec
sbb
sub
dec
or
stos
jmp
sti
mov
fucomi
stos
sti
mov
sub
jnp
dec
sbb
sub
dec
or
stos
jmp
sti
mov
fucomi
stos
sti
mov
sub
jnp
dec
sbb
sub
dec
or
stos
jmp
sti
mov
fucomi
stos
sti
mov
sub
jnp
dec
sbb
sub
dec
or
stos
jmp
push
and
fwait
lods
pushf
and
xor
and
ljmp
mov
mov
clc
xchg
into
imul
dec
push
pop
push
sub
outsb
sbb
dec
ljmp
mov
ficomps
cs
push
push
push
sub
or
pop
sbb
mov
ret
mov
into
jae
pop
or
sub
push
cmp
dec
cmp
lret
mov
fidivrs
inc
in
fldl
jbe
cmp
jle
aad
adc
add
or
pinsrw
push
shll
jle
cmpsl
or
pop
adc
hlt
pushf
mov
outsb
add
test
sub
outsb
or
sbb
jmp
ljmp
pop
mov
xor
sarl
lcall
adcl
inc
into
cmp
push
jbe
addr16
mov
out
push
mov
or
sub
or
lea
mov
mov
out
sbb
imul
lret
mov
fiadds
cs
push
inc
push
xor
outsb
adc
daa
xchg
scas
mov
faddl
push
push
das
cmp
jp
cmp
ja
test
fwait
lret
movsl
sti
stos
mov
xchg
mov
stos
sub
push
dec
dec
sbb
adc
jl
jle
cli
xchg
out
in
mov
loop
mov
into
push
jp
dec
push
pop
push
sub
outsb
or
dec
ljmp
mov
ficomps
cs
push
pop
push
sub
outsb
or
dec
ljmp
dec
mov
jae
daa
mov
testl
and
cmp
imul
das
repz
xchg
mov
icebp
ljmp
movsb
mov
stos
pusha
stos
out
sub
jno
xchg
cmc
or
and
pusha
mov
jmp
insl
sbb
mov
cmp
pop
jae
shrb
mov
pop
fsubrs
pop
and
xchg
pop
sub
pop
imul
mov
mov
int3
mov
das
mov
mov
fidivs
daa
mov
into
jmp
jp
or
pop
int3
mov
lret
mov
xchg
inc
out
add
movsl
lods
push
pop
fs
stos
and
popa
or
mov
adc
jl
jne
xchg
pop
sbb
hlt
fldt
lods
and
std
shrl
or
or
xchg
mov
jecxz
push
dec
bound
cmp
mov
popf
mov
test
mov
jmp
outsb
pusha
mov
pop
jmp
loope
cltd
push
inc
repnz
jmp
pextrw
and
xor
ficompl
outsb
outsl
pop
lea
idivb
mov
adc
cwtl
mov
stc
inc
mov
das
int3
cmpsb
pop
jno
ss
subl
icebp
jo
aaa
imul
cmpsl
ret
lods
push
in
adc
sub
inc
inc
loopne
andl
sbbl
push
add
mov
fs
decl
mov
fstps
fists
lret
sbbb
cmp
push
pop
and
pop
xor
dec
shll
dec
pop
cmc
add
and
or
imul
add
sbb
mov
add
movsb
jae
mov
and
lea
xchg
jns
xchg
mov
andl
push
or
sbb
mov
mov
idivl
push
in
xlat
aam
add
inc
rorl
int
mov
add
mov
mov
lods
pop
lods
fildll
or
lcall
xor
and
cmp
push
lahf
dec
ret
and
sahf
fs
shll
sbb
aas
gs
lock
dec
out
xor
inc
scas
out
loope
jp
adc
lods
add
aaa
adc
iret
in
jg
cmc
sub
shll
test
lods
lock
jnp
sub
cld
bound
mov
stos
jb
mov
into
cmpsb
pop
xchg
adc
pop
cs
xlat
dec
ljmp
xlat
out
cmp
aad
push
adcb
and
insl
insl
scas
push
scas
and
popf
cs
pop
jns
nop
sbb
incb
popf
cmc
xor
xchg
xor
shlb
movnti
rcll
sub
or
sbb
pop
adc
loopne
pop
test
pop
outsl
test
out
mov
xchg
imul
push
mov
dec
sub
jg
mov
mov
and
mov
pop
insl
lea
mov
notb
pop
popf
sbb
faddl
mov
popf
fists
rol
pop
jnp
xor
les
pop
jecxz
inc
rorl
pop
sub
xor
dec
into
js
roll
testb
cltd
mov
jno
cmovg
in
add
or
fsubl
and
push
jb
int3
xor
sub
rcll
xchg
pop
lods
or
into
sbb
mul
and
mov
sbb
pushf
mov
adc
aaa
pusha
mov
insb
mov
xor
insl
inc
push
gs
push
sti
test
push
cmc
aad
aam
dec
jp
frstor
testl
adc
cmp
sbb
fstps
mov
mov
lods
lret
fsubs
outsl
pusha
dec
xchg
bnd
pop
hlt
cmp
outsl
mov
fildl
push
xchg
outsb
arpl
outsb
mov
in
out
lret
mov
std
jo
sahf
sub
jns
sbb
outsb
adc
loop
aas
je
test
imulb
sub
es
gs
shrl
push
andb
or
add
stos
js
push
call
lahf
lret
dec
xchg
push
lcall
mov
lret
cmpsl
loope
fs
ret
xor
adc
loop
roll
enter
xor
int
ja
rcll
xchg
cwtl
mov
mov
insl
fstpt
pop
das
insl
xchg
sbb
adc
adc
fsubrs
cmp
or
int
cli
arpl
xor
enter
call
mov
fdivr
xchg
xchg
movsl
fisubs
cmp
adc
pop
nop
jp
mov
adc
test
cld
bound
and
orb
xchg
loop
add
adc
call
pushf
and
sbb
sub
cmpsb
mov
pop
sub
addr16
jecxz
shr
movsl
sub
xor
cltd
ror
jg
clc
xchg
in
dec
mov
or
inc
hlt
or
sti
xchg
inc
dec
repnz
mov
mov
inc
rcrb
dec
jb
mov
sub
fldcw
aad
pop
outsl
inc
stos
push
sub
fnsave
jb
add
jns
hlt
push
lcall
sub
lahf
scas
and
xchg
mov
jge
dec
mov
pop
xchg
mov
or
movsb
or
add
lahf
pop
out
repz
mov
and
jp
inc
cld
lcall
in
adc
dec
push
jecxz
push
lea
jbe
insb
or
jae
adc
inc
cmp
mov
mov
add
or
scas
xor
jns
inc
xchg
subl
xchg
xchg
fs
sub
adc
divb
xchg
fcomps
pop
in
aam
lret
mov
mov
jns
test
push
mov
sbb
and
out
ja
out
push
pop
sub
aas
and
lods
fistpll
cmc
addr16
inc
and
cwtl
mov
pop
and
mov
inc
and
adc
rclb
jmp
xchg
mov
scas
xor
test
mov
inc
push
loope
ret
or
int3
or
ss
or
adc
jle
xor
cmc
pop
xchg
xchg
popa
popa
mov
aas
xlat
mov
in
ss
lods
add
gs
xor
lea
jmp
ja
std
jne
or
rcrl
pop
pop
mov
xlat
jl
out
fstpt
movsl
call
ror
fdivl
ljmp
lahf
adc
repnz
push
in
clc
sarl
push
js
push
push
dec
fadds
aad
lds
insb
sub
sbb
std
jno
inc
sub
xor
xor
push
jbe
loop
packsswb
sub
jp
mov
pop
dec
sub
xchg
fisubrs
sub
mov
nop
jge
sarl
test
sbb
sub
mov
xor
pushf
imul
stc
aam
imul
stc
pop
xlat
sarb
push
xchg
inc
je
add
filds
imul
push
mov
dec
hlt
aam
push
sub
xchg
mov
fldt
pop
push
adc
scas
pop
add
jmp
push
push
sbb
std
dec
sarl
inc
cwtl
jp
cmp
or
add
push
push
sub
cld
mov
inc
cmp
adc
and
sub
arpl
out
jmp
sub
adc
xor
sbb
xchg
jmp
pop
in
xchg
test
xchg
test
xchg
mov
xlat
mov
mov
jp
inc
test
fsts
daa
js
pop
push
sub
mov
imul
leave
scas
sbb
ja
psubb
and
pusha
sar
aam
pop
lret
scas
cmp
push
xlat
ljmp
sub
cmpsl
insb
out
insl
xlat
push
jmp
xchg
xchg
outsl
or
add
pop
jnp
sbb
nop
and
mov
sbb
insb
jne
mov
cmp
dec
out
cld
imul
add
int3
dec
jbe
gs
icebp
adc
mov
nop
orb
sbb
adcl
lock
xor
outsl
cwtl
sbb
les
add
sub
mov
scas
mov
sbb
scas
addl
fimull
imul
rcll
frstor
mov
ja
pusha
cmp
sub
mov
addr16
mov
dec
push
xor
outsl
imull
inc
int
pusha
xlat
mov
push
mov
int
or
mov
and
mov
dec
and
sbb
aaa
scas
cmp
xchg
sub
notb
into
icebp
repz
pop
jae
cmp
stos
ja
dec
fbstp
and
popa
mov
push
lcall
cld
into
loopne
jbe
iret
out
jmp
push
jnp
leave
jnp
sbb
lds
mov
fwait
loop
push
pop
scas
push
xor
scas
jmp
ja
xchg
lret
mov
or
ficoms
add
lahf
fstp
sbb
shl
out
push
shll
push
xchg
add
inc
add
xchg
div
and
insb
xchg
les
lds
and
xchg
mov
pop
ja
mov
push
aam
fadds
push
ja
fcoml
iret
fadd
push
inc
fsubrs
sahf
dec
push
or
imul
xchg
fstps
cmpsl
imul
add
daa
adc
test
mov
jge
dec
sbb
inc
and
ss
adc
mov
cltd
jge
ss
sub
xor
pop
mov
jb
sub
fsubs
movsl
mov
jo
outsb
xchg
lock
push
ljmp
and
mov
dec
ret
and
inc
sub
fcomp
mov
jmp
pop
sbb
fdivrp
xor
in
aam
enter
mov
and
dec
jl
cmp
inc
sub
xor
cmp
outsl
sbb
stos
mov
ret
insb
mov
mov
jo
test
popf
lahf
es
mov
lds
sub
or
push
xor
stos
push
mov
arpl
pop
lods
mov
add
das
pop
out
ljmp
mov
sbb
push
push
sbb
in
lods
jne
leave
outsl
add
dec
and
scas
xchg
out
mov
jmp
cmp
mov
mov
movsb
ljmp
insl
orb
pop
aaa
enter
mov
out
stc
pop
lods
bound
jmp
xchg
scas
lret
mov
mov
testb
loope
xor
mov
push
shrb
mov
fbstp
sub
inc
lahf
or
lcall
add
lret
fnstsw
sbb
mov
mov
dec
xchg
pop
adc
dec
jnp
push
push
mov
pop
inc
out
and
aaa
int3
push
mov
mov
aas
icebp
push
pop
out
cmp
ds
lock
inc
ds
ss
mov
mov
mov
pop
mov
add
xchg
xor
sarl
sbb
in
adc
aam
imul
mull
gs
mov
jns
pop
jb
cmc
push
cmp
or
das
ret
mov
push
cmpb
cltd
jge
push
jge
fnsave
add
xor
push
ficompl
xor
sub
pop
mov
mov
dec
push
xchg
xchg
push
jl
nop
jne
inc
adc
cmpsb
addb
ljmp
fistl
stos
ret
and
add
fldl
je
cmp
fimull
inc
test
aaa
mov
sub
pop
les
fcmovb
xlat
push
fs
jns
push
push
enter
ja
lock
jge
xchg
push
fidivs
loopne
xor
jnp
std
enter
outsl
or
ret
pop
cmp
jns
pop
clc
ljmp
ret
mov
mov
test
xchg
stos
adc
push
xlat
dec
out
rcl
loop
and
and
dec
lret
in
lds
loopne
sbb
aam
imul
lcall
push
ljmp
or
pushf
fs
out
add
dec
jne
cs
inc
add
pop
rclb
or
xor
pop
jle
pop
movsl
or
mov
inc
es
push
push
push
sbb
mov
roll
fildll
pop
xor
pushf
out
mov
in
js
sbb
adc
add
insb
ja
cmp
pushf
or
fyl2xp1
mov
pop
cltd
inc
adc
sub
dec
sub
pushf
mov
mov
sub
negb
leave
pop
imul
loop
insb
jle
mov
mov
mov
jge
push
inc
ja
mov
sub
mov
inc
into
adc
add
mov
aaa
push
cmpsl
sub
cmp
xorb
aaa
into
pop
or
or
call
les
fwait
push
dec
scas
sbb
or
cltd
into
inc
outsb
add
jg
xor
pop
cli
adc
gs
cmp
out
ds
pop
pop
inc
xor
mov
aas
xor
pop
jo
in
fwait
pop
popa
sarb
or
mov
cmp
push
out
inc
inc
sub
inc
dec
push
inc
add
test
cmp
dec
push
shrb
cmc
xchg
ds
jnp
jne
cmp
cltd
sub
lods
pop
enter
loope
lret
rol
cwtl
cs
mov
pop
test
lcall
fs
fildll
dec
mov
pop
mov
push
cmp
adcl
sti
shrl
shlb
add
mov
mov
mov
call
cld
lods
lds
mov
aam
test
lds
mov
outsl
rcr
in
dec
insb
xchg
imul
jae
call
mov
in
dec
nop
repnz
cli
stc
notb
icebp
mov
mov
push
iret
outsb
sbb
loop
repnz
or
inc
adc
mov
leave
or
xchg
and
out
and
pop
jbe
inc
aad
mov
stc
fnstsw
int3
push
mov
sbb
add
scas
cli
in
push
mov
cmp
and
sub
xlat
push
popf
in
xor
pop
push
cmpsl
dec
sti
adc
jae
xchg
sub
hlt
or
or
mov
jae
lret
adc
fisubrl
lods
cmp
dec
sbb
cmp
pop
in
test
cmp
adc
xchg
mov
push
push
ret
nop
sub
xchg
cmp
sub
xor
jecxz
ret
inc
addr16
sbb
dec
mov
mov
inc
mov
lret
fdivl
enter
add
mov
ss
loopne
xchg
loope
popa
mov
mov
jg
xor
jnp
push
shl
fwait
push
add
cmp
mov
and
add
movl
bound
popfw
sbb
cmpsb
lods
out
sub
cwtl
xchg
pop
fnstenv
sub
pusha
inc
mov
pop
mov
pop
sbb
mov
cmp
testl
shrl
fsub
mov
loop
pop
push
jl
xchg
cmp
dec
push
adc
lods
lock
and
sub
fistps
and
jae
push
dec
jle
mov
xchg
xchg
imul
leave
movsl
and
movsb
inc
in
jb
mov
je
nop
lcall
lret
cmp
jns
push
ret
stos
jns
insb
pop
sbb
mov
inc
cmp
cmp
cmp
jns
loope
inc
fwait
inc
call
testl
jo
std
mov
das
pop
cmp
ds
sub
cmpsl
push
inc
test
jmp
push
outsb
cltd
imul
cltd
sbb
imul
pop
push
mov
push
pushf
add
mov
sarb
or
adc
inc
or
insl
dec
fdivrl
insb
xor
xor
and
and
pop
test
ret
ret
ret
aad
fcoms
seto
pushf
sbb
enter
ds
pop
adc
mov
pop
add
gs
shlb
dec
test
xor
jnp
scas
jmp
hlt
pop
pop
jae
cld
xor
test
inc
addr16
mov
mov
push
rclb
mov
and
push
xchg
pop
out
data16
add
mov
iret
mov
sub
stos
dec
push
jb
loop
fdivp
out
push
lahf
push
les
mov
jg
fmuls
mov
and
mov
dec
mov
mov
adc
add
lds
cmp
xchg
negl
pop
lcall
jle
mov
dec
scas
push
fadd
sub
pop
enter
test
mov
idiv
sbb
mov
push
and
or
fnsave
cs
in
enter
xchg
sub
add
clc
push
imul
pusha
fs
js
call
and
ljmp
lret
repz
push
aam
sub
out
shll
movsl
dec
push
mov
cmp
inc
or
bnd
scas
and
roll
dec
mov
push
les
inc
shl
xorl
mov
int3
aaa
dec
aam
pop
jle
jp
and
push
test
negb
das
popa
movsb
push
popa
daa
mov
mov
shrl
mov
pop
inc
xchg
xor
rcll
push
ret
lcall
xchg
fdivrl
add
and
adc
mov
insl
mov
roll
mov
sbb
xchg
cmc
in
fwait
pusha
add
repnz
outsb
cmp
dec
popf
ja
xchg
jmp
mov
jge
push
sbb
push
mov
xor
xorb
and
sbb
gs
pop
repz
push
and
js
push
cmpsl
xlat
inc
and
loope,pn
cli
adc
loope
dec
in
out
and
pop
iret
scas
fwait
cmp
rcr
add
repnz
fstl
xchg
jns
es
arpl
mov
rol
mov
in
sub
movntq
dec
sbb
mov
rolb
rcrl
sbb
add
cmp
out
inc
cmp
mov
rcll
mov
lea
lods
les
cmp
les
and
xor
shr
push
jne
fs
adc
xchg
push
test
cli
push
pop
arpl
and
bound
test
lods
jbe
stos
cmc
sbb
ret
shrb
pusha
testb
ret
fiaddl
pop
lock
push
mov
dec
repnz
roll
sti
stos
out
outsl
add
push
dec
sub
in
xor
push
shlb
inc
xor
orb
loop
jle
jecxz
push
scas
jmp
mov
popf
add
cs
lods
add
aas
mov
sbb
xchg
mov
mov
dec
in
loope
mul
xor
orl
ja
sbb
pop
pop
jns
xor
or
repz
adc
adc
sub
pop
je
xor
ljmp
xor
or
mov
loop
dec
and
dec
and
cmpsb
push
arpl
stos
xchg
out
imul
cmp
int3
jmp
pop
cltd
push
add
mov
inc
add
out
int
loop
mov
daa
int3
cmp
jno
mov
jae
lods
mov
js
mov
mov
scas
dec
xchg
inc
mov
cli
add
mov
outsb
inc
loop
inc
ja
push
push
fcomps
inc
in
or
mull
shufps
aaa
stc
dec
pop
enter
pop
arpl
fwait
jg
xchg
mov
movsl
sti
addr16
push
negb
add
dec
jp
loop
lea
adc
daa
js
mov
inc
movsl
cli
mov
sbb
lods
in
mov
adc
mov
hlt
test
jbe
loope
sbb
lea
les
xchg
push
xchg
push
mov
shrb
xor
js
jb
xchg
out
mov
shl
pushf
mov
cmc
out
cmp
xor
mov
mov
and
mov
add
call
sub
jge
stos
leave
dec
iret
push
push
dec
iret
nop
cmp
ror
push
add
arpl
adc
mov
push
idivl
sbbb
test
out
and
sti
add
jae
jnp
push
insl
push
sub
mov
pusha
and
ss
outsb
push
les
repnz
xchg
push
sbb
inc
xor
push
ret
push
push
cs
and
fmull
or
sub
sbb
sbb
repnz
out
xor
ja
mov
lods
mov
adc
fsts
or
mov
nop
mov
cwtl
or
inc
frstor
sub
addb
xchg
std
jne
push
pop
in
add
dec
jp
dec
xor
push
xchg
lret
xchg
mov
dec
jbe
insl
mov
ds
sub
mov
mov
ficomps
cs
push
pop
push
sub
outsb
or
dec
ljmp
mov
ficomps
cs
push
pop
push
sub
outsb
or
dec
ljmp
mov
ficomps
cs
push
pop
push
sub
outsb
or
dec
ljmp
mov
ficomps
into
xchg
test
divb
mov
int3
xor
mov
in
repz
pop
cmp
pop
or
cltd
jns
imul
in
test
pushf
stc
lods
jmp
cmp
insb
sub
sub
cmp
int3
or
aas
in
outsl
cld
leave
mov
mov
pop
or
jns
adc
cmp
int3
test
lods
push
dec
mov
jbe
mov
cmp
xchg
cmp
pop
xchg
lcall
mov
ss
stos
insl
cld
popf
movsb
hlt
mov
fdivrl
lock
jl
insl
leave
xchg
cltd
into
mov
add
push
pop
mov
mov
cmpsb
or
ss
fyl2x
pop
les
cld
cld
fmuls
jmp
or
pop
xor
xchg
sub
dec
jecxz
rcll
and
imul
mov
mov
or
xchg
sub
rcrl
sbb
mov
inc
mov
jl
adc
icebp
pop
cmp
fcompl
dec
fstpt
jns
stos
int3
mov
mov
mov
mov
loope
aaa
jl
or
sbb
sub
push
jmp
fdivr
test
xchg
mov
mov
in
js
dec
sub
dec
cmp
insl
daa
outsl
or
int3
add
in
bound
xchg
fistpl
sub
adc
outsl
sub
or
sub
mov
cltd
pushf
mov
pushf
stc
lods
jmp
pop
cmp
pop
or
sbb
sub
cmp
int3
mov
mov
mov
pushf
stc
lods
jmp
pop
cmp
pop
or
sbb
sub
cmp
int3
dec
xchg
adc
mov
sbb
inc
add
inc
out
fisubl
and
adc
add
mov
jae
jnp
mov
out
mov
popa
outsb
gs
or
fistpl
dec
adc
ljmp
arpl
cmp
icebp
xor
aas
jecxz
loope
push
lods
scas
ds
sbb
vpunpcklbw
into
push
lahf
adc
addr16
cld
pop
fcoms
mov
or
sbbb
mov
popl
fwait
pop
mov
ret
iret
aad
filds
call
push
sub
and
sub
mov
imul
adc
rol
repz
cli
ds
sbb
sbb
repz
lahf
insl
mov
hlt
xor
outsl
or
cmp
xor
jle
sbb
mov
lock
push
in
shrb
js
push
cmp
es
data16
and
das
or
adc
sbb
mov
leave
pop
fimuls
sbb
imul
outsl
data16
add
cmp
sbb
fstpl
std
js
stos
sbb
jecxz
push
hlt
sbb
xor
pop
test
jle
leave
cmp
xrelease
jbe
xor
xchg
mov
pop
and
ss
xchg
adc
cltd
enter
jle
jg
paddw
pop
mov
bound
scas
sbb
jp
loope
dec
loope
bound
adc
jl
jecxz
cmpsb
ret
mov
fsubrs
clc
cmc
movsb
push
lahf
sub
xchg
jg
and
test
push
test
sub
jns
dec
test
and
mov
xchg
dec
lret
adc
fcmove
out
rolb
push
cld
dec
in
inc
shll
sti
ror
inc
ret
fistpll
sbb
cmc
mov
test
test
mov
mov
jp
mov
and
xchg
or
ljmp
addr16
aaa
push
iret
inc
jmp
in
es
jae
dec
pop
xchg
pop
cld
stc
aad
out
cmc
daa
push
sub
sub
inc
fistpl
inc
mov
and
sub
loopne
aad
inc
lret
fprem
int
rcrb
js
idiv
mov
jo
push
insb
inc
lfs
inc
cltd
push
int
hlt
push
xchg
inc
mov
xchg
pop
and
lock
mov
test
es
fidivl
test
mov
hlt
xchg
movsb
jo
addl
dec
xchg
cmp
pushf
push
xchg
xchg
mov
and
mov
sub
outsl
aas
out
js
movsl
loope
loop
ret
jo
icebp
iret
cltd
std
loopnew
jmp
ffree
nop
ss
pop
xor
pop
sub
or
imul
jne
emms
int3
out
rcll
data16
jp
mov
int3
sar
int3
addr16
mov
add
fstl
sub
sbb
sahf
lods
sti
ret
mov
iret
out
std
inc
stos
ffree
pusha
mov
pop
jge
mov
test
sbb
nop
push
push
jle
sahf
ffree
mov
xchg
rcrb
iret
imul
sti
pop
cmpsl
and
imul
int
jbe
xor
outsb
jae
jo
rorl
rcl
inc
dec
xchg
mov
adc
sbb
imul
mov
sbb
je
in
gs
jae
shlb
shlb
xchg
jmp
cltd
in
jnp
fnstenv
cmp
dec
cmp
je
mov
mov
ficomps
mov
call
mov
lea
cmp
inc
cmp
mov
in
sbb
out
icebp
add
or
mov
out
dec
xor
lock
push
ja
loop
rorb
adc
aam
lds
sbb
inc
sbb
cmp
ljmp
test
int3
test
ljmp
gs
ret
out
in
xchg
jb
int
jns
shlb
mov
enter
jb
xrelease
push
or
sbbl
inc
shll
test
jbe
arpl
jmp
arpl
in
cwtl
add
imul
mov
push
inc
add
mov
xchg
aad
jp
stc
bound
repz
lret
inc
popa
and
push
pop
add
nop
pop
pop
scas
mov
xlat
push
pop
cli
scas
pop
dec
int
and
stos
mov
mov
or
repnz
mov
iret
fwait
lods
sahf
fmuls
iret
lcall
out
outsb
mov
inc
add
fidivrs
popa
stos
jg
push
movsl
hlt
xor
jns
fs
push
jmp
inc
mov
in
inc
sub
into
jnp
cmp
mov
jp
addb
divb
push
pushf
das
cmc
das
pop
push
xchg
ds
push
push
add
mov
xor
aaa
cld
aas
mov
push
repnz
je
or
loopne
jg
push
imul
add
xchg
mov
repnz
adc
jns
pop
test
mov
mov
push
cld
test
xor
adc
pop
scas
je
sahf
xchg
lock
adc
js
add
mov
xchg
add
dec
fstp
in
lods
mov
in
js
or
addl
push
jecxz
in
popf
lret
addl
xchg
sbb
or
mov
mov
pop
mov
loope
shlb
in
push
inc
lea
and
mov
push
and
mov
in
fwait
test
pop
mov
cmpsb
jmp
and
sub
lds
lds
pushl
pop
cmc
mov
mov
mov
flds
sub
push
cmp
and
sbb
aam
int3
sub
jne
jle
mov
add
push
lret
cmpsl
ljmp
iret
stc
and
inc
prefetch
jmp
sbb
mov
push
sti
decl
sbb
loop
sahf
mov
cli
cs
cmp
jo
fwait
xchg
lods
and
sbb
cmp
mov
lock
dec
xchg
bound
dec
sbb
ja
call
faddl
lret
pop
push
dec
loope
ja
pop
xchg
fwait
lea
daa
xor
jo
nop
sbb
and
dec
jecxz
lret
pop
xchg
cmpsb
loop
inc
lock
jge
rol
rcr
inc
rcll
aam
fwait
xchg
aas
sub
add
fwait
xchg
enter
push
mov
push
aam
cmp
in
sub
pop
data16
hlt
xlat
std
push
pop
test
movsb
fmuls
or
ror
mov
and
push
daa
xorl
xchg
sbb
dec
jmp
clc
cmp
jae
xlat
js
xchg
rolb
lret
pop
push
jmp
fmuls
cmc
and
loop
test
jg
pop
in
int
cmp
mov
dec
pop
jbe
pop
fists
mov
pop
shrl
mov
xlat
or
cltd
bound
mov
sub
dec
adc
cltd
lcall
rcl
leave
addr16
cmp
fbld
add
mov
pop
sub
pop
dec
and
imul
inc
cmp
mov
push
lahf
mov
out
xor
push
fwait
data16
into
or
pop
test
fwait
test
pop
es
push
adc
repnz
aad
outsl
bnd
fdivr
add
sar
dec
pop
inc
add
inc
inc
mov
sahf
cld
pop
lcall
call
push
out
mov
fcoms
nop
subb
lcall
imul
outsl
lcall
into
add
xor
push
gs
and
pop
or
and
scas
mov
ljmp
test
sbb
loope
adc
mov
xor
push
ljmp
leave
cld
cmp
mov
push
sbb
xchg
jecxz
adc
ret
pop
cmp
xor
push
mov
cltd
adc
outsl
xchg
sub
sub
cwtl
imul
mov
xchg
ljmp
and
mov
adc
int
es
add
and
mov
das
xchg
push
div
js
mov
jbe
popa
rorb
cmpsb
mov
xor
cli
jae
xchg
cli
pop
sahf
jb
out
dec
rcrb
cmp
xchg
data16
dec
pop
mov
mov
ljmp
push
inc
adc
adc
mov
mov
add
sti
insl
loope
fwait
icebp
fdivrl
dec
and
pop
repz
push
mov
movsb
insb
and
loopne
lcall
jno
pop
ret
lods
testb
dec
adc
push
or
pop
vmwrite
add
scas
nop
jno
xchg
or
stos
mov
sub
cmp
test
inc
xor
testb
mov
cmp
sbb
cmpsb
and
addl
adc
jle
jg
in
mov
sti
fxch
mov
testb
or
pop
cs
cmpsb
xor
or
lss
js
xchg
add
mov
testl
pop
mov
movsl
and
leave
test
lret
pop
mov
sub
mov
imul
leave
jne
out
lcall
popf
adc
pop
sbb
sub
outsl
nop
subl
stc
xor
sbb
mov
add
adc
mov
pop
xor
mov
push
ja
xlat
inc
dec
or
mov
xchg
dec
jbe
adc
inc
or
in
pusha
jl
add
cmc
mov
adc
adcl
mov
and
xor
push
arpl
push
std
adc
ret
cmc
nop
mov
enter
or
enter
cld
loop
ja
inc
jb
and
fwait
mov
fnstsw
imul
scas
inc
ret
in
nop
push
jp
insl
scas
push
in
mov
jbe
sub
xchg
out
imul
das
add
and
fisttps
add
jbe
test
adc
leave
pop
cld
add
jns
je
stos
mov
loope
gs
das
pop
mov
mov
imul
cmc
push
cs
dec
idiv
inc
and
mov
dec
pop
fiaddl
mov
ljmp
pop
les
cmc
jecxz
dec
cmp
adc
iret
leave
sub
mov
push
or
ror
imul
fwait
std
cwtl
stc
mov
ds
dec
add
xor
mov
iret
and
ja
sarb
imul
sar
push
fwait
arpl
jecxz
addb
ljmp
pop
jne
add
jns
adc
cmp
xor
mov
xor
cld
xchg
jecxz
cmpsl
jbe
sbb
xor
and
adc
adc
cmp
jp
fwait
cmp
mov
scas
sbb
and
sub
mov
add
jecxz
adc
sub
ss
mov
out
stc
fdivrl
pop
push
outsl
inc
pop
or
es
add
stc
pushf
adc
roll
adcl
divl
addr16
dec
es
pop
stc
mov
xchg
sub
push
rcr
xor
outsb
call
fs
lds
mov
aad
lds
outsb
fiadds
dec
andb
adc
and
xchg
rorl
jmp
adc
sbb
cmp
sbb
mov
jno
cmp
push
cmp
adc
push
jno
sbb
vmread
push
dec
int
test
mov
aaa
aaa
testb
or
inc
es
xchg
test
sub
xorb
mov
rcl
icebp
cmpsl
out
test
repnz
dec
mov
dec
jle
jp
std
sub
icebp
pop
call
mov
ljmp
mov
mov
lret
cmp
or
movsb
popf
jp
loope
push
mov
stos
loope
lds
jl
movq
jecxz
push
ffreep
add
sub
lock
jns
push
lea
repnz
xor
das
jno
xor
jns
and
insl
add
sahf
outsl
mov
in
jl
fwait
cltd
adc
sbb
dec
gs
cmp
stc
adc
sub
or
leave
xlat
mov
shr
les
hlt
and
stc
cmp
push
shr
scas
add
and
add
out
cwtl
imul
pushf
add
test
pop
pop
push
pop
mov
xor
jae
xor
in
int3
ljmp
mov
jno
or
or
incb
das
mov
aas
mov
dec
xchg
pop
das
iret
iret
mov
sub
xor
fmull
ja
inc
mov
inc
repnz
hlt
xor
mov
and
addb
dec
in
mov
inc
mov
les
pop
jne
pmulhuw
cli
mov
add
int3
test
mov
xor
stc
subl
inc
adc
pushf
repz
adc
scas
push
push
pop
aas
mov
jns
push
mov
xlat
fstps
out
xchg
je
xor
add
sub
movsl
xor
push
ljmp
cmp
jge
fwait
push
inc
mov
scas
shlb
mov
aaa
add
ret
sbb
dec
push
or
add
or
mov
pop
pop
cmp
dec
xchg
sbb
push
shr
popf
mov
les
pop
lea
inc
daa
mov
je
lahf
xchg
fcoms
loopne
repz
je
outsl
iret
xchg
pushf
and
repz
fs
in
mov
sub
ret
movsl
test
push
iret
fiadds
sub
adc
rcrb
xchg
ds
jnp
insl
mov
int3
sub
sbb
dec
xlat
or
pushf
lock
ret
mov
dec
scas
cli
add
xor
xchg
or
fildll
or
pop
jae
and
ss
into
shll
addr16
xlat
mov
mov
adc
das
adc
clc
xchg
inc
adc
mov
outsl
dec
cld
or
dec
dec
inc
lods
sub
mov
fists
xor
push
mov
cld
push
mov
lea
jb
inc
inc
test
imul
mov
add
cmp
push
add
js
mov
popf
sahf
dec
cld
out
out
dec
data16
roll
jl
stc
add
leave
sbb
inc
mov
pop
repnz
jo
data16
lret
inc
int
lock
sbb
imul
roll
inc
divl
lock
push
sahf
pop
push
pop
mov
add
ja
cmovae
dec
sub
into
sub
cmpsb
sub
insl
inc
rcrl
adc
rclb
inc
cltd
sub
or
leave
push
lods
gs
sbb
mov
test
xor
arpl
bound
in
or
scas
adc
mov
in
mov
or
dec
popa
mov
popf
in
mov
lods
push
loop
push
fdivrs
lahf
mov
fistpl
lods
mov
jnp
ret
adc
test
rcrb
repnz
into
loope
movsl
fwait
and
adc
enter
movsb
scas
add
test
js
mov
cmp
js
inc
cltd
std
nop
mov
xor
fisttps
dec
daa
jbe
out
or
rolb
xchg
ret
add
cli
jo
data16
inc
adc
out
js
fcomp
inc
cmp
js
inc
push
in
sub
push
inc
sub
repnz
push
sub
cmp
stc
insl
clc
fidivrl
in
loope
adc
out
mov
imulb
mov
dec
scas
lds
enter
mov
mov
jle
xor
stos
shlb
test
pop
dec
add
fwait
sti
mov
in
ds
mov
lods
sbbl
repz
mov
xorb
clc
ljmp
jmp
fbstp
imul
icebp
mov
nop
pop
inc
mov
lcall
jp
sub
cs
xchg
adc
lea
mov
jo
push
leave
mov
ds
out
or
or
mov
gs
xor
inc
or
loop
cmp
inc
adc
cmpsl
movsl
cmp
stc
pop
mov
cmpsb
dec
mov
fldcw
mov
or
xchg
stc
push
fwait
and
mov
push
adc
add
in
inc
mov
lret
add
push
out
andl
dec
inc
pushf
adc
jno
inc
jge
stos
arpl
cmp
dec
jp
out
mov
std
les
mov
mov
cmc
cmp
sub
or
jp
add
sahf
or
jmp
aam
in
ficompl
mov
stc
aas
fcomp
xchg
cmpsb
jne
pop
bound
incl
ret
hlt
cmp
cmpsb
stc
sub
scas
xor
jl
call
adc
out
sarb
mov
push
inc
mov
or
movsl
mov
sub
scas
pop
aam
cmc
xor
sbb
sub
push
pop
cmp
lahf
xor
add
loop
add
or
dec
je
fcomps
xlat
mov
or
inc
add
xor
sahf
xor
add
inc
xchg
shrb
ret
inc
into
test
ret
ret
shll
mov
aas
pop
cmp
xor
push
mov
aam
lret
das
adc
cmpsl
loopne
sbb
mov
and
adc
ss
icebp
pop
sbb
sti
push
mov
jae
jecxz
sbb
sbb
cmpsb
xchg
xor
cmp
pop
xchg
imul
repnz
pop
inc
stos
inc
lea
jmp
shrb
out
push
cli
xchg
pop
pop
mov
lahf
inc
lock
pusha
pop
add
sbb
outsb
or
movzbl
fildl
es
adc
cmp
es
je
adc
dec
dec
fidivrl
adc
inc
add
pop
cmp
popa
push
inc
clc
imul
jmp
popl
jb
lahf
shlb
dec
mov
lock
imul
aas
lcall
xchg
push
test
out
cwtl
mov
mov
stos
mov
xor
ljmp
test
or
movsl
mov
add
cmpsl
push
or
cwtl
fdivs
pop
out
inc
xchg
push
cmp
sub
imul
cld
pushf
roll
mov
inc
xchg
xchg
test
sub
aad
add
pop
adc
cmp
adc
xor
pop
mov
jl
jb
pop
and
push
dec
xchg
xor
push
lret
in
pop
add
cltd
ret
sub
pop
add
cld
xchg
ret
or
cmp
cld
pop
push
xor
cltd
cmpsb
pop
push
aas
sbb
lahf
addr16
cmp
cwtd
mov
xor
es
mov
stc
rclb
fs
je
mov
lcall
push
pushl
in
mov
mov
movsb
mov
push
je
incl
pop
inc
fstl
cmp
mov
mov
mov
cmovae
add
shr
jge
dec
cmp
xchg
sbb
xchg
subb
mov
pop
xorl
bound
fisttps
cmp
hlt
adc
push
iret
out
ds
xlat
pop
leave
fistpl
jbe
pushf
add
addr16
jne
sahf
inc
xchg
sti
mov
dec
popf
adc
sub
add
out
push
ljmp
and
mov
mov
xor
jno
icebp
adc
pop
aad
xchg
add
cmp
loope
ja
jbe
lret
jnp
mov
lds
cmc
das
fs
push
orb
sub
lock
sbb
fisubrs
scas
inc
aaa
jnp
lret
in
sahf
ret
in
out
mov
leave
call
and
jns
cmc
dec
cmp
add
pop
mov
mov
popf
ret
ret
add
xchg
daa
sub
mov
stc
push
xor
xor
cli
add
mov
xchg
loope
pop
pop
inc
mov
out
push
or
pop
cmp
fwait
aas
jnp
lds
mov
lcall
mov
outsl
fsts
jp
les
mov
or
push
js
push
push
scas
push
push
dec
cmp
cmc
lahf
sub
stc
outsb
imul
sub
xorb
mull
add
gs
sahf
aam
lcall
flds
mov
test
mov
xor
jne
sub
mov
out
inc
or
ss
mov
add
lock
cmp
mov
test
lcall
xchg
test
loop
mov
loopne
xchg
lock
ss
iret
stc
cli
stc
mov
sub
dec
mov
jnp
int
movsl
fwait
pushf
sbb
pop
std
rcrl
push
push
inc
push
in
test
cmp
add
adc
lret
mov
fwait
insl
jle
sbb
xor
sub
mov
aaa
mov
es
call
clc
mov
lret
pop
add
aad
sbb
jp
es
test
arpl
hlt
sub
sub
mov
mov
cmp
pop
or
sbb
sub
cmp
int3
mov
mov
mov
pushf
stc
lods
jmp
pop
cmp
pop
or
sbb
sub
cmp
int3
mov
test
sbb
lods
call
pop
xor
pop
or
sbb
sub
cmp
int3
movsl
fdivl
in
cmp
stc
lods
imul
test
jecxz
rcll
leave
movsb
stc
mov
les
cmpsb
in
rcr
test
and
xor
inc
sbb
cmp
fsts
les
hlt
fldl
xor
add
push
or
sub
data16
loope
icebp
fiaddl
hlt
mov
pop
aaa
push
add
das
push
es
dec
sub
xchg
fdivrs
rclb
ds
filds
andl
jnp
mov
andb
push
push
lock
imul
mov
sub
xchg
mov
leave
mov
jp
shll
or
mov
hlt
push
pop
adc
xor
xor
push
mov
dec
insb
pop
xchg
ss
push
pop
mov
sbb
hlt
sub
mov
lret
and
je
jnp
cltd
test
sub
outsl
mov
shll
rolb
sbb
push
lods
jnp
or
cmp
cmp
stc
aaa
xor
and
xor
jmp
ret
loopne
jmp
in
push
mov
pop
mov
pusha
add
or
pop
adc
je
in
mov
stos
fwait
mov
int3
add
inc
dec
inc
jge
or
jl
or
mov
mov
lods
cltd
mov
adc
mov
sub
sbb
imul
xor
leave
lds
aam
in
hlt
test
and
xor
inc
sbb
cmp
fsts
les
hlt
test
and
xor
inc
sbb
cmp
fnstenv
fisubl
je
or
stos
dec
sbb
and
lock
js
lock
in
out
or
jb
pop
lods
mov
xchg
or
fs
inc
mov
or
fdivs
clc
cli
mov
jmp
pop
int
fucomi
jae
xchg
inc
mov
mov
arpl
sbb
ret
pop
push
dec
mov
call
pop
loope
cwtl
lea
add
stos
outsb
popw
jbe
push
sbb
loope
adc
inc
cmpsl
icebp
std
sbb
and
loop
sbb
mov
push
movsl
pushf
pushf
testl
jle
xchg
in
xchg
sbb
mov
lret
loope
into
arpl
repz
and
sub
faddl
cmp
jle
gs
js
or
ljmp
or
jno
pop
xor
inc
xor
mov
inc
adc
imul
push
xchg
addl
insb
pushf
mov
in
jle,pt
out
adc
in
xchg
mov
sahf
dec
stc
jg
or
movsb
int3
mov
std
xor
out
mov
insb
jle
push
mov
hlt
fwait
sub
or
shlb
dec
push
mov
pop
mov
jnp
mov
inc
dec
int3
sbb
add
insl
jnp
test
int
push
adc
or
lret
incb
and
xor
scas
mov
movsl
add
xchg
sub
fwait
das
mov
sub
jmp
jns
push
iret
sti
std
out
mov
xchg
or
push
xor
pop
xchg
pop
jns
mov
xchg
adc
repnz
push
xor
mov
mov
inc
into
cmp
sbb
stos
mov
and
mov
lcall
ss
jle
xlat
leave
hlt
rorl
and
cltd
xor
push
pop
mov
lahf
aas
pop
js
lds
xchg
push
mov
pop
cmp
jne
cmp
les
push
mov
push
mov
jmp
int3
movsl
sub
sub
xchg
dec
stc
mov
call
xor
lods
fsts
js
or
sbb
sbb
jo
xor
cltd
cli
in
or
cmc
lods
and
add
fs
gs
jbe
xchg
shrl
aad
sbb
movsl
xchg
lcall
inc
sbb
dec
pop
dec
into
xor
sbb
xchg
pop
or
jle
push
outsb
imul
sbb
mov
cmp
cmp
ja
jnp
ljmp
sbb
jb
lods
sbb
lahf
inc
cmc
inc
out
pop
ljmp
mov
push
inc
sbb
push
stos
xchg
sbb
ja
cmpb
dec
adc
ljmp
iret
mov
xchg
mov
mov
es
inc
sub
arpl
mov
ret
mov
repz
add
mov
mov
mov
lret
push
decl
inc
xchg
sbb
test
int
cmp
jmp
ficomps
ljmp
test
stc
outsb
cmp
mov
add
repnz
ja
adc
dec
add
scas
inc
addb
insb
lret
cmp
loop
add
pop
push
and
inc
dec
sbb
cltd
test
test
mov
mov
lds
mov
pop
xor
xlat
cmc
add
fnstsw
push
adc
frstor
jecxz
out
hlt
call
stc
fwait
sbb
and
cmp
fisttpl
shrl
ja
xchg
xchg
orl
xchg
fdivrs
out
mov
out
jns
lock
pop
fisttps
jmp
mov
xor
sbbl
cs
or
mov
mov
ficoms
bound
add
jbe
iret
sti
sbb
and
rcrl
hlt
cmp
or
cmpsb
cwtl
stos
lods
ret
xchg
or
aad
dec
push
inc
and
dec
cvttps2pi
or
or
xchg
fidivs
aad
cld
mov
adc
nop
push
jne
push
mov
jge
cli
cmp
sbb
clc
insb
les
ja
pop
test
jecxz
outsb
insl
sub
pop
inc
stc
mov
push
mov
mov
popf
gs
ss
cmpsl
imul
adc
cwtl
xchg
xchg
arpl
outsl
xor
xchg
je
mov
leave
repz
dec
movsl
or
mov
out
cmp
int3
into
xor
shll
pop
js
out
xor
cmp
adc
stos
test
fists
mov
cltd
test
xchg
lahf
dec
jnp
imul
add
mov
pop
mov
cmp
fstpt
stc
add
and
psrad
pop
shrb
dec
pop
push
mov
mov
lods
sub
clc
lret
push
pop
pusha
fsubrl
jle
loope
inc
rcll
cmp
adc
popf
arpl
jmp
jns
gs
rorl
aad
repnz
fistpll
mov
cmp
pushl
xor
and
dec
cmpsl
adc
fcmovnb
test
jl
or
add
add
outsb
es
pop
fmuls
fcoml
lods
movsl
out
test
aaa
pusha
dec
jnp
ret
stos
xchg
push
pop
jns
test
pop
out
or
lds
mov
or
int3
jle
xchg
pop
aam
test
cmp
sub
in
insl
add
add
push
pop
jb
mov
in
dec
mov
xchg
fnstcw
or
mov
and
les
inc
lods
jl
xchg
xlat
mov
dec
push
dec
cmpl
lods
cli
lds
inc
jno
jbe
mov
mov
mov
xchg
cmpsl
add
rorb
daa
incl
fwait
mov
push
icebp
scas
stos
mov
push
sbb
icebp
ficoms
les
push
subb
add
popa
in
jne
mov
and
insl
push
dec
cmp
sub
jns
lods
mov
ds
add
xlat
mov
cli
addr16
mov
xchg
cli
xchg
lcall
cmp
int3
leave
cs
popl
in
push
fsubrl
mov
fcoms
inc
inc
xor
sbb
popa
xlat
pop
or
cwtl
xlat
shr
frstor
pop
mov
or
rclb
imul
movsl
dec
push
loope
std
inc
fcomps
loop
mulb
xor
or
pop
and
mov
test
inc
daa
push
pushf
test
fnsave
mov
shrb
outsl
mov
jp
fstps
in
jp
dec
push
sbb
dec
mov
int
popa
push
xchg
out
cmpsb
xor
movsb
cmp
lahf
and
into
pop
mov
xor
movsb
repnz
pop
in
mov
orb
push
push
mov
sub
jp
inc
in
or
dec
mov
pop
and
sub
cmp
divl
or
cmpsb
ret
mov
mov
fidivrl
addr16
dec
jp
dec
xchg
adc
cltd
and
cmp
inc
into
std
jae
dec
adc
aam
cltd
daa
cmp
mov
out
repnz
call
daa
and
ss
sbb
xor
loope
pushf
in
andb
filds
mov
loope
jbe
testb
push
mov
fcompl
cld
pop
cmp
mov
pop
cmp
and
inc
inc
decb
mov
ja
cmpsl
repz
xchg
in
test
icebp
xchg
dec
jle
jge
jl
push
adc
push
jbe
shlb
test
insb
xchg
lea
push
push
sti
push
lcall
adc
dec
loop
cs
pop
pop
jbe
out
xchg
jbe
xchg
rol
test
stc
and
adc
sub
js
cmpsl
and
xchg
or
dec
das
daa
sub
mov
mov
pop
ret
dec
mov
sbb
mov
sbbl
rorb
popa
and
imul
mov
mov
sahf
mov
mov
lds
clc
shl
sbb
sbb
bound
xor
icebp
mov
mov
xchg
adc
hlt
sbb
dec
je
adc
push
mov
push
jo
repz
test
aam
lret
mov
xor
movsl
dec
pop
push
jb
in
inc
sub
cmp
adc
add
testl
roll
rcll
add
gs
pop
jo
jbe
js
fidivrl
aaa
push
cld
jp
pop
movsb
and
xchg
mov
pop
push
imul
adc
xchg
pop
mov
xor
fnstsw
cmp
mov
xchg
dec
dec
lods
lea
outsb
xchg
insl
ja
push
cmp
sbb
jno
add
imul
dec
and
jno
lods
or
push
adc
std
xchg
sbb
hlt
movsl
stos
inc
jle
jno
shlb
int3
repz
aam
insl
push
and
sbb
sbb
clc
jecxz
xchg
mov
sti
jae
inc
mov
adc
and
push
dec
cmp
cltd
imul
pop
daa
cld
enter
and
fistpll
call
or
cltd
jne
jno
out
addr16
jb
enter
jg
lods
xlat
sbb
inc
clc
ror
pop
sub
adc
lahf
outsb
push
rclb
inc
out
jnp
xchg
cmp
mov
inc
cmpsl
mov
xor
mov
adc
lock
lahf
push
push
add
lods
rep
xchg
aam
xchg
or
stos
aam
popf
jne
mov
mov
cmp
push
popf
mov
cli
ret
hlt
or
sahf
lret
push
mov
mov
adc
cmp
adc
mov
and
in
push
in
addl
repz
mov
dec
into
sbb
in
xchg
xor
jbe
xchg
cmp
aam
daa
sbb
or
ds
fnsave
movsb
cmpsb
and
fcomi
adc
cwtl
hlt
cwtl
data16
popf
cmc
push
dec
mov
xor
fmuls
mov
mov
sbb
adc
push
sub
mov
cmpl
pusha
mov
faddl
gs
in
jo
inc
std
push
outsl
push
and
inc
mov
sbb
stos
jae
sahf
jmp
sub
popf
les
inc
je
rorb
and
out
mov
push
push
cmp
pop
cwtl
dec
nop
fdivl
jb
out
aam
xor
rorb
sbb
cmp
icebp
pop
sub
aas
fs
pop
xchg
add
into
test
pop
mov
clc
sbb
fidivl
stos
mov
sbb
pop
pop
pop
test
pop
int3
jl
or
mov
add
imul
add
xchg
lock
mov
loope
xchg
adc
jae
push
sbb
subb
popf
and
clc
scas
clc
add
xor
push
jnp
sub
sbb
fnstsw
fldt
pop
out
push
add
lock
and
pop
xchg
inc
and
loopne
dec
test
nop
mov
lret
cs
mov
ljmp
scas
mov
xlat
sbb
pop
sbb
fs
mov
xchg
jb
mov
popa
fstpt
call
cs
hlt
jle
sahf
loope
lods
jae
sarb
and
es
xchg
lahf
sbb
mov
mov
hlt
mov
mov
leave
gs
roll
pushf
repnz
cli
out
test
xchg
mov
insb
xchg
xchg
mov
out
data16
mov
aas
cld
xlat
cmp
sub
sar
pop
pop
pusha
cmp
mov
inc
test
imulb
mov
test
adc
mov
mov
ret
or
out
icebp
cmp
add
pop
cmc
push
or
call
push
sub
adcb
mov
cld
scas
scas
sbb
add
xchg
dec
push
jnp
call
sti
xchg
push
sahf
inc
or
jmp
rcll
mov
sbb
sub
cmp
mov
pop
cmpsb
xchg
sbb
cmpsl
xlat
xor
imul
dec
push
push
lea
nop
addr16
insb
insl
or
add
je
mov
push
cmpsl
cmc
pop
into
adc
xor
lods
addr16
mov
jae
pop
dec
adc
int3
add
mov
xchg
out
fsts
mov
push
fstpt
push
in
ret
loope
pop
lds
add
repz
add
repnz
paddw
xchg
in
mov
js
push
and
lods
pop
or
stos
test
shll
add
pop
sub
push
lret
pop
pop
call
pop
xor
das
adc
jnp
xor
sti
cmpsl
test
pop
cmpsb
push
aad
lock
sbb
sub
sbb
ljmp
imul
aad
inc
es
inc
call
or
or
testl
push
stos
faddl
mov
mov
push
mov
imulb
repz
test
retw
lcall
add
dec
fwait
inc
and
sbb
enter
mov
rolb
xchg
add
repz
push
scas
and
sub
mov
lahf
inc
mov
cmp
ss
adc
sbb
popf
sub
popa
push
aas
add
jmp
mov
xor
outsb
iret
in
or
daa
pop
lds
test
adc
in
xchg
sarl
and
push
cmpsl
jne
lret
jne
imul
push
dec
loopne
incb
mov
pop
aas
mov
pop
rclb
jae
into
test
jp
inc
call
leave
jmp
data16
pushf
add
icebp
mov
push
push
xor
pop
sub
pop
lock
dec
pop
or
out
cmp
jnp
add
sbb
je
or
shrl
dec
pop
cmp
out
sub
data16
outsb
outsl
idivl
xorl
jne
cs
mov
fidivrs
mov
xchg
jecxz
insl
test
mov
or
xchg
pop
scas
mov
cmpsb
cs
pop
popf
sub
xor
mov
stc
xchg
nop
xor
adc
cli
fdivrp
aas
dec
lock
dec
in
jg
mov
inc
decl
outsl
imul
das
or
push
mov
daa
mov
jmp
mov
adc
cs
add
sbb
mov
xchg
sbb
jg
sahf
jo
je
jnp
out
test
fwait
test
jae
mov
mov
cmpb
xorb
add
leave
xor
pop
lods
icebp
inc
aam
rorb
xchg
inc
mov
cmp
in
or
test
aam
iret
sub
cmpb
mov
jp
sbb
xchg
mov
dec
lods
out
sbb
imull
xchg
movsl
sbb
stos
fsts
js
cmp
fdivrp
andl
loope
jmp
or
ss
leave
addb
xor
xchg
sub
icebp
add
test
js
test
shll
push
shl
pop
les
lods
aas
push
outsb
dec
lret
std
push
addr16
dec
xor
mov
cmp
test
jl
mov
jmp
or
push
dec
mov
and
es
iret
sti
xor
mov
jb
mov
out
fstpt
mov
stos
jg
bound
mov
sub
insl
mov
mov
inc
movsl
les
ljmp
aas
or
out
fimuls
or
inc
std
mov
rcrl
shrl
arpl
mov
repz
mov
lahf
int
leave
adc
movsl
cmp
stos
xor
push
jl
inc
or
xchg
inc
sub
mov
outsb
fsts
adc
insl
sub
cmp
cli
iret
ja
sub
into
cmp
inc
jno
in
call
popa
mov
xlat
clc
jae
movsb
inc
jge
jns
aas
in
inc
xchg
and
ds
xchg
xchg
sub
es
xchg
or
notb
or
add
xchg
daa
mov
movsb
andb
jecxz
orb
and
stc
std
dec
pop
jmp
lods
out
rcr
sbb
insb
fimuls
mov
gs
sub
and
fucomp
pushf
sub
mov
dec
sub
or
mov
mov
je
mov
pop
ljmp
sbb
nop
push
cld
loop
mov
leave
aaa
les
outsl
in
xchg
nop
dec
enter
sahf
lock
ficoms
movsl
icebp
icebp
lods
icebp
stos
mov
addb
loopne
jbe
enter
pop
push
rcl
lret
xchg
pop
mov
clc
add
inc
mov
mov
jbe
imul
add
sub
dec
inc
aas
jp
loop
inc
add
jle
out
ds
lahf
popa
aad
xchg
mov
xor
jp
lds
cmp
push
lods
pushf
inc
imul
addr16
mov
and
flds
loopne
and
sbbb
xchg
adc
jb
or
xchg
xlat
clc
out
fadd
mov
roll
mov
mov
rol
add
pop
inc
mov
pusha
inc
sub
cmpsl
imul
test
stos
leave
or
mov
pop
xchg
cmpsb
cmp
or
or
outsb
hlt
xlat
fmulp
mov
add
sub
imulb
hlt
xor
sbb
xchg
loopne
mov
cs
sbb
pop
dec
jb
ds
pushf
and
lcall
test
scas
pop
call
ret
jmp
das
mov
push
mov
icebp
add
sti
xor
mov
cmp
fwait
pop
xchg
mov
jns
pop
jmp
add
sbb
and
rorl
lret
mov
mov
push
aas
fnstenv
in
clc
and
roll
outsl
das
test
mov
test
pop
fs
mov
fstp
mov
aaa
js
mov
sub
test
scas
mov
pop
shrl
sarl
pop
inc
rcr
popf
lahf
fsubl
in
inc
and
cmp
xchg
sahf
mov
jge
loop
sub
aam
or
adc
mov
dec
dec
testb
fwait
jmp
lahf
mov
xchg
popf
insl
mov
ret
int
mov
xor
lea
jne
nop
test
daa
mov
xlat
cmpsl
ret
outsb
inc
cmp
mov
adc
inc
dec
loop
jmp
repnz
mov
rorl
or
les
cmpsl
adc
les
jg
ja
mov
xchg
mov
pop
xchg
xchg
scas
enter
mov
pop
jg
movsb
js
mov
lods
push
rcll
cmp
or
jl
mov
idiv
out
jns
mov
lea
mov
jmp
mov
jge
cmpsb
stos
push
arpl
cmpsl
in
inc
xlat
int3
cltd
scas
jg
inc
enter
jmp
pop
std
or
jmp
inc
adc
sub
push
leave
jne
shlb
inc
cmp
insb
iret
add
insl
gs
pop
xchg
loopne
enter
int
jns
add
int3
sbb
cmp
aam
test
cmp
push
imul
jmp
call
fs
cltd
pop
mov
jge
push
jnp
int
imul
daa
daa
fucom
jp
mov
pop
nop
push
pop
es
mov
push
dec
aas
cmp
add
pop
test
and
iret
pusha
push
inc
lods
into
outsl
lret
add
xchg
xor
dec
mov
ss
xchg
test
jbe
sbb
cli
jo
mov
and
fs
dec
sub
mov
sbb
jl
test
outsl
into
add
mov
lods
pushf
mov
stos
xor
ret
jae
rorb
ja
sbb
das
sti
add
hlt
pop
into
xchg
fistl
idivl
pop
fsub
xlat
push
fwait
dec
fidivs
loope
jne
pop
jo
mov
fidivl
mov
cmp
dec
aad
leave
lock
ljmp
ljmp
cmp
cmp
mov
pop
xchg
lahf
push
and
mov
stos
stos
shll
push
pop
cmp
ud1
sti
lahf
lret
aad
push
sub
push
pop
sbb
mov
hlt
cld
cs
and
mov
pop
sbbb
and
or
jo
jecxz
xchg
jo
push
jbe
loopne
pop
push
push
jae
and
and
sahf
or
addl
xlat
jmp
iret
dec
leave
inc
sub
insl
sub
jae
push
frstor
mov
enter
movsl
cmp
js
inc
and
pushf
jno
mov
mov
fistpl
dec
cmp
mov
cmp
scas
sub
push
jo
xchg
mov
cmp
mov
in
xor
inc
push
mov
mov
ficomps
cwtl
fsts
sti
out
jecxz
mov
les
hlt
test
and
xor
inc
sbb
cmp
fsts
les
hlt
test
and
xor
inc
sbb
cmp
fldenv
push
cltd
aam
in
xor
add
adc
aam
xor
inc
sbb
cmp
enter
xchg
jmp
in
je
add
jmp
mov
push
xor
.byte
push
