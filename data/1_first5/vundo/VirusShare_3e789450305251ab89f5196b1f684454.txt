add
insb
add
add
popa
add
add
add
arpl
arpl
add
jae
imul
insb
add
je
jns
pop
add
imul
inc
add
outsb
add
add
jae
je
add
add
push
add
insb
add
arpl
je
add
add
jp
add
add
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jo
jo
add
jb
popa
add
arpl
add
add
ja
and
push
add
push
add
jae
add
add
xor
add
xor
add
push
add
insb
add
arpl
je
add
add
add
add
add
add
add
add
add
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
add
sub
add
add
add
add
add
mov
add
das
add
jl
add
jl
add
in
add
pushl
add
add
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
mov
add
add
add
add
add
add
mov
add
das
add
jl
add
jl
add
insb
mov
add
jl
add
dec
or
outsl
jne
or
test
add
add
add
pusha
mov
add
add
inc
sub
add
add
add
test
add
gs
ret
jae
inc
jb
add
pop
add
push
xrstors
cmc
jmp
mov
sahf
sub
or
test
scas
inc
ret
incl
add
test
call
decl
push
push
push
push
loop
push
push
dec
insb
push
rcl
lret
in
mov
rolb
cmp
mov
adc
pop
add
incl
pop
popl
push
fisttpl
cmpsb
push
push
clc
decl
incl
pop
and
add
or
decl
push
incl
lea
clc
cmp
stc
sub
fsts
loopne
jne
add
adc
in
push
mov
add
add
add
imul
inc
imul
test
gs
mov
xchg
jae
add
jbe
je
arpl
insb
add
dec
dec
fs
ja
add
addr16
popa
add
in
imul
push
addr16
add
push
dec
push
std
cmpsb
insl
add
add
sbb
mov
inc
ror
repnz
mov
pop
inc
out
cli
or
and
lahf
fsubrs
inc
fcomps
pop
push
inc
decb
cltd
cmp
lret
sti
mov
lcall
jne
sti
jp
ljmp
add
sbb
mov
in
mov
adc
lahf
jle
or
sbb
fstps
gs
or
cltd
jg
xchg
scas
std
test
ret
cmp
add
dec
pop
lcall
push
jne
cld
loop
mov
outsl
mov
je
or
push
inc
jb
jnp
loop
ds
add
shlb
sub
out
ret
xor
hlt
popf
std
in
jno
unpcklps
xchg
iret
and
inc
into
ret
cld
arpl
js
pop
test
push
call
pop
popa
inc
shll
sub
stc
pushf
xchg
pushf
push
jno
mov
mov
ss
inc
mov
data16
adc
cmpl
sub
mov
out
js
orl
xchg
sar
mov
cmpsl
or
adc
mov
push
jle
das
test
dec
loop
xlat
mov
xor
xchg
jmp
das
testl
sub
jmp
aaa
in
lcall
push
jecxz
sub
data16
xchg
sti
xchg
outsl
sub
xchg
inc
adc
add
hlt
ja
or
add
lret
inc
adc
nop
fcomip
out
pop
push
int3
inc
xlat
add
das
dec
decb
adc
fsubl
notb
adc
icebp
movsl
add
nop
mov
and
add
xchg
inc
mov
jp
push
mov
xchg
test
jle
mov
inc
jne
stos
jb
push
xchg
sub
dec
mov
sbb
jp
andl
lods
clc
add
sbbl
cli
cltd
jmp
mov
add
stos
cmpsl
aad
ja
stc
outsl
lcall
lds
addl
sbb
jnp
int
xor
cmc
loopne
out
js
test
sbb
mov
movsb
insb
out
mov
add
paddb
adc
ret
cmp
shlb
inc
or
pavgw
sbb
add
push
cld
cmpsb
push
pop
and
xchg
stos
mov
add
sarb
adc
cmp
lods
push
add
cmp
sahf
cmp
cmp
jns
sub
ret
fisttps
cmpsb
inc
xchg
mov
aam
pop
insl
sbb
jmp
stos
stc
jbe
subb
add
repz
xchg
xchg
jns
dec
rol
push
loop
lcall
inc
xchg
scas
push
sbb
shll
add
pop
roll
xchg
and
sub
xor
xor
lcall
pop
xchg
or
jb
loope
jb
aad
imulb
xor
flds
mov
add
mov
pop
cmc
cmp
fcomp
jb
adc
and
mov
ss
xchg
imul
cmp
lods
fisttpl
inc
stos
mov
push
daa
fwait
jl
in
xchg
leave
rcrb
sbb
pushl
sub
jb
xor
or
cs
add
xchg
test
scas
add
div
inc
jl
and
fldl2e
xchg
cmp
arpl
sarb
imul
std
ljmp
fcmovu
pop
pusha
outsb
cmp
push
pop
push
rorl
nop
and
dec
cmp
pop
inc
cmp
mov
fidivrl
pop
and
fisubrs
xor
cmp
jl
jmp
aas
xchg
mov
xchg
mov
sub
fstpt
imulb
sti
adc
es
or
inc
xchg
or
push
inc
jo
frstor
push
fisubl
and
daa
push
cmp
cmp
push
add
xor
movups
clc
xchg
mov
xor
xchg
jmp
jno
js
ret
sbbb
mov
jnp
out
in
mov
call
mov
call
test
xchg
outsb
ret
ljmp
xor
inc
mov
xlat
es
xor
xchg
outsl
imull
xor
repnz
add
out
nop
pop
divb
cmp
jge
iretw
inc
iret
and
xor
out
xor
addr16
test
or
lcall
jge
xlat
in
xchg
inc
inc
test
mov
xchg
fsts
lea
jo
out
mov
inc
pusha
ja
sarb
addb
lods
mov
xchg
lock
sbb
rcr
pop
xchg
std
aam
int
push
outsl
in
sub
or
adc
dec
adc
push
add
clc
mov
inc
js
addr16
test
lea
enter
movsl
cmp
inc
mov
bound
fs
sbb
movsl
lea
jge
scas
or
les
hlt
fstpt
or
stos
xor
jecxz
popf
imul
pop
dec
inc
mov
iret
jg
sub
xchg
fistps
lret
jno
jge
insl
and
and
push
shrl
popa
push
xchg
mov
add
jmp
repz
sti
jb
adc
mov
lret
jle
je
scas
arpl
data16
inc
mov
push
out
fs
push
ret
cmp
dec
add
ret
jl
sub
dec
mov
pusha
jg
pushf
push
push
lcall
and
std
in
and
and
test
jp
subl
sub
jmp
fildl
and
shlb
xlat
clc
jl,pn
aas
jbe
push
lret
pop
cmp
test
loopne
int
mov
xchg
pushf
push
dec
lods
mov
xor
nop
jns
idiv
pop
popa
iret
adc
xlat
outsb
dec
mov
mov
mull
jg
inc
sbb
in
sub
mov
stc
shrl
aad
test
repnz
cmp
cs
and
sub
loop
scas
cld
stos
sub
sub
pop
notb
pop
bound
sub
add
fisttpll
mov
jno
lea
add
scas
mov
mov
and
push
mov
and
fwait
sbb
sub
mov
mov
adc
int
stos
cmp
pop
mov
movb
jl
lahf
adc
in
add
cmp
cmc
cmp
mov
in
dec
fcmovu
lahf
cmp
inc
inc
mov
sbb
xor
and
negb
mov
push
dec
clc
fists
leave
cmp
mov
mov
pusha
imul
jne
negb
dec
popf
inc
mov
data16
out
inc
lahf
mov
and
mov
add
adc
loop
cmp
mov
add
loop
dec
fiaddl
lahf
shlb
cmp
add
cli
xchg
lds
xor
xlat
cli
and
xor
push
jnp
rclb
inc
fwait
sbb
cmc
jno
inc
or
add
or
cwtl
lds
cli
xor
jne
jb
xor
mov
mov
repnz
add
outsb
mov
jl
and
sti
mov
jns
dec
inc
lahf
push
imul
sarb
push
and
test
add
dec
sbb
sbb
xor
je
fidivs
movsb
xchg
push
or
cli
push
or
pop
mul
cmp
stos
and
into
sub
xor
icebp
push
rcr
cltd
jl
add
jnp
or
test
and
call
sbb
test
into
popa
notb
mov
mov
repz
js
ljmp
add
xchg
adc
ja
int
push
mov
in
rorb
fucomi
xchg
outsl
lds
add
fwait
mov
jmp
lods
mov
dec
adc
jbe
dec
jmp
jns
lahf
adc
ret
mov
pusha
jno
popa
push
in
movb
and
mov
rcll
xor
push
sub
sub
mov
stos
inc
std
clc
mov
leave
mov
adc
call
and
int
out
xchg
adc
sub
sbb
aaa
mov
pop
mov
xor
ficoms
or
lods
mov
mov
icebp
push
andl
sahf
test
in
sub
and
fidivrs
shrl
mov
mov
adc
in
push
pop
jo
cltd
sub
or
testl
push
daa
mov
add
adc
xor
test
add
popl
aam
imulb
mov
adc
hlt
sbb
xor
out
pop
add
icebp
dec
insl
aas
popf
in
dec
in
mov
addr16
add
int3
pop
fnsave
inc
negb
pushf
fiaddl
xchg
fwait
inc
out
insb
cltd
ret
mov
sbb
gs
sahf
stos
and
jbe
xor
sub
aad
test
roll
push
pop
or
out
je
push
leave
mov
cmp
or
cmp
nop
ja
leave
aam
fstps
add
les
or
mov
or
loopne
mov
scas
mov
pop
dec
mov
cmp
dec
dec
xchg
add
dec
cmp
sbb
popa
jb
lea
push
sbbl
insl
mov
sbb
cmp
jmp
add
lds
jge
dec
add
sub
add
xor
xchg
in
sub
pop
stos
push
xor
adc
sub
jne
arpl
push
repnz
inc
mov
inc
jl
jecxz
fdivs
jne
fistpl
jp
cmp
pusha
fistpll
and
mov
loop
adc
call
lds
ds
scas
xlat
test
daa
jae
in
mov
xchg
and
add
lds
cmp
int3
or
inc
js
shll
out
lods
lahf
xor
jp
add
sub
push
xor
call
loopne
ja
dec
outsb
aad
insl
out
stos
xchg
xchg
into
mov
xchg
dec
inc
dec
and
pop
mov
cmp
repnz
lods
add
jge
popa
mov
sub
inc
push
pop
adc
mov
mov
sub
jmp
out
xchg
pop
add
add
out
or
shl
ret
add
jmp
mov
fs
mov
rcrl
push
idivl
push
push
mov
mov
sti
pop
stos
xor
aaa
in
jbe
int3
push
loope
push
rcrb
xchg
imul
ficompl
ja
int
ror
jl
outsl
in
mov
repz
test
sbb
nop
hlt
mov
test
sub
mov
push
pop
inc
push
pop
xor
aam
popa
add
sbb
xchg
loope
out
sbb
aaa
sub
jmp
pop
cmp
sahf
push
rolb
push
xchg
adc
mov
xor
mov
popf
add
push
das
adc
fmuls
cmpsl
push
fstl
movsb
jecxz
dec
sbbl
mov
mov
popa
pop
jae
hlt
push
ret
je
ret
lods
in
adc
sub
mov
pop
jmp
popf
mov
jge
shrb
cmp
lahf
in
popa
adc
xchg
inc
stc
push
push
xchg
mov
jbe
mov
jle
lahf
insl
test
int3
ja
lods
notb
sub
scas
int3
mov
ficoms
or
jle
sub
mov
add
mov
mov
push
movb
jnp
movsl
mov
mov
ror
insb
fsubrl
jno
mov
sub
mov
pop
cmpb
xor
jb
sub
dec
mov
sbb
xchg
pop
lods
cmp
inc
inc
cld
mov
pop
inc
movntps
sti
dec
dec
pop
fnstcw
sbb
xchg
js
xchg
lea
and
sbb
dec
or
add
ja
mov
mov
fsubr
inc
mov
stos
fisttps
mov
xchg
mov
test
cmp
inc
inc
jo
xor
push
cmp
icebp
dec
jne
adc
xorb
outsl
insl
bound
enter
push
pop
mov
test
in
mov
lret
cwtl
test
les
fidivrs
repz
mov
into
jle
cmp
cmpsl
enter
cmp
pop
xor
pop
rcr
or
adc
mov
iret
sub
ljmp
out
daa
mov
xor
in
ret
scas
dec
loopne
fs
mov
lret
lret
shr
xchg
or
sbb
mov
fstps
paddsb
inc
ds
daa
addr16
sbb
mov
aas
sbb
ljmp
cmpsb
mov
jl
or
adc
lods
xlat
pop
cmp
push
lahf
sbb
push
nop
sahf
rclb
mov
dec
pushf
mov
add
or
pop
sbb
cmp
mov
adc
push
xchg
cmpsl
outsb
pop
out
iret
xchg
xchg
mov
or
insb
cmp
jno
pop
pop
xchg
scas
pop
xor
lods
add
pop
cltd
push
and
out
inc
push
mov
add
imul
xchg
mov
andb
mov
shlb
popa
popf
aas
in
pop
rcrb
scas
ficomps
bound
test
js
jnp
mov
sbb
push
test
dec
pop
fcmovne
mov
mov
cmp
inc
imul
pushf
cltd
scas
stc
jno
cld
idivl
call
ficompl
jns
mov
test
jns
sbbl
pop
lret
sub
push
add
scas
jns
subb
push
imul
enter
push
push
inc
loop
jb
mov
pushf
dec
mov
pusha
xchg
mov
test
rcrl
pusha
adc
sbbb
and
test
mov
daa
jo
test
or
pop
clc
loopne
dec
rclb
mov
jb
and
adc
pop
testb
xchg
ja
lods
iret
mov
adc
mov
sub
mov
push
in
push
movaps
fwait
or
orl
dec
pop
adc
xchg
lds
fs
test
ret
or
cli
mov
adc
movsb
add
out
sbbl
aam
repnz
aad
inc
lret
data16
loopw
in
sbb
std
cmp
cmpsb
dec
sub
shl
mov
test
fs
xor
push
dec
cmp
lock
out
lea
lahf
and
cmp
les
aad
xor
and
fdivs
cld
arpl
mov
rorl
sarb
sbbb
add
adc
xchg
stos
mov
mov
cmp
dec
scas
fbld
test
push
das
mov
push
or
mov
ja
loopne
cmp
leave
mov
sub
and
jmp
mov
sub
enter
cmpsl
sub
ret
jmp
arpl
push
mov
push
xor
cmpb
or
mov
dec
icebp
jnp
jge
outsl
clc
out
sbb
mov
fsub
mov
out
int
mov
pusha
mov
mov
mov
dec
jo
insb
scas
push
lret
sub
gs
jmp
cmp
and
es
lods
jmp
call
xchg
shlb
lods
es
shl
dec
loop
xchg
or
fildl
xor
add
and
push
ss
pop
push
out
sub
clc
inc
pop
jne
insl
and
jl
pusha
jle
push
jae
inc
pop
lahf
add
mov
lods
inc
xchg
ljmp
lcall
filds
and
cs
mull
jo
popf
push
and
jp
test
test
xor
fildll
out
xchg
and
pop
mov
dec
aaa
in
xchg
sti
inc
daa
jmp
inc
mov
mov
mov
jno
push
pushf
lea
push
jns
ja
in
insl
stos
xor
jbe
int
xor
dec
pop
outsb
push
adc
fmull
and
adc
or
lods
dec
or
int3
sub
aas
jmp
in
das
lea
test
xchg
aad
dec
cmp
dec
adc
sub
das
sarl
jle
adc
dec
mov
dec
subl
sub
les
jno
shlb
jo
lcall
inc
jno
push
sub
lahf
xchg
out
push
cmp
sar
loop
fnsave
into
mov
jnp
insb
push
scas
xchg
cs
adc
push
rcl
sbb
jmp
or
inc
pop
mov
mov
push
mov
mov
lds
shlb
ret
test
sbb
jns
sbbb
call
lds
stc
sub
cmpsb
sarb
jo
lret
inc
movsl
mov
mov
and
pop
fimull
pop
filds
mov
xchg
leave
clc
std
movsb
mov
outsl
sbb
mov
rclb
xchg
jp
sbb
inc
mov
xchg
rcr
mov
dec
mov
pop
jecxz
in
adc
add
xchg
es
rcr
xorb
outsb
clc
push
xor
scas
xor
pushl
inc
push
sbb
pop
mov
stos
rcrb
cld
mov
push
lea
data16
cmp
out
loop
push
inc
or
je
push
pop
lcall
fldl2t
or
sahf
fdivl
jle
ret
sbb
aad
jg
movsl
jbe
adc
and
xchg
pop
lock
stos
or
adc
or
xchg
testl
mov
in
lcall
jb
jbe
and
xor
xchg
and
scas
lret
mov
push
and
xchg
add
lcall
icebp
and
inc
shll
ljmp
mov
orb
push
cs
fdivl
sub
fildll
xchg
repnz
or
mov
push
lret
or
or
cmpsl
jo
mov
push
cld
xchg
mov
movsl
mov
sbb
mov
mov
dec
mov
adcl
scas
xchg
fs
dec
pop
in
mov
add
seto
jle
repz
loop
and
aad
xchg
jo
xchg
les
dec
dec
lret
mov
imul
push
into
inc
aam
inc
mov
fmull
xchg
std
pop
dec
jecxz
pop
sbb
outsb
insb
mov
inc
out
cld
daa
jo,pt
ss
ret
mov
pop
ss
lret
jnp
leave
or
cmp
shr
cmpsb
push
or
insl
cltd
test
insb
insl
mov
outsb
dec
ret
mov
mov
jl
mov
push
sahf
add
sarb
in
xor
jno
mov
xchg
rcl
arpl
push
fstp
pop
cmpsl
data16
jge
push
mov
jmp
add
sbb
add
cmpb
add
add
lods
testb
add
add
add
pop
push
add
addb
add
add
stos
stos
add
ja
mov
clc
clc
call
in
sub
lea
push
push
push
pushl
call
cmpl
je
mov
cmp
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
mov
push
push
push
push
push
pushl
call
pushl
call
call
pushl
call
jmp
lea
push
push
pushl
call
mov
xor
push
push
push
push
pushl
call
mov
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
xor
leave
ret
pop
clc
add
add
add
and
and
rolb
or
adc
add
add
add
add
pop
mov
add
add
add
add
and
add
arpl
mov
sbb
sbb
sbb
mov
sbb
jecxz
cmp
add
inc
dec
outsb
jnp
imul
dec
je
mov
pop
cld
fnstenv
sahf
popa
sar
clc
mov
add
push
je
cld
pop
or
cvtdq2ps
pop
lea
mov
cld
mov
lock
leave
mov
addb
mov
add
xchg
push
add
adc
add
cmpsl
test
adc
stos
inc
add
push
adc
lea
adc
pushl
push
incl
mov
push
cmp
loope
pushl
and
cld
cwtl
push
adc
or
add
stos
sbb
lea
verr
dec
add
add
cmp
lea
adc
adc
scas
add
rolb
pop
add
pop
sbb
add
add
sbb
fstps
sbb
sbb
sbb
sbb
sbb
add
sbb
add
mov
outsb
add
je
add
push
outsb
outsl
inc
insl
fs
add
add
add
add
insb
fs
insb
add
popa
inc
je
inc
gs
outsl
js
add
inc
xor
popa
add
pushf
add
add
cwtl
pusha
add
add
call
rolb
add
add
add
add
add
xchg
cmp
pop
call
or
sub
mov
test
test
out
rcrl
fidivrs
cmp
inc
xor
movsb
push
cmpsl
jbe
mov
jae
jbe
inc
fsubs
fsubp
add
dec
sbb
cmp
pusha
shlb
xor
cld
jno
call
lods
jo
or
jns
fwait
hlt
addr16
xchg
addr16
shlb
into
fadd
mov
shrb
or
jnp
sub
push
rcr
inc
cmpsl
loop
adc
xchg
xor
jmp
iret
push
push
sbb
aas
std
rcl
inc
lahf
and
rorl
in
and
push
loope
gs
mov
daa
sahf
test
sbb
lods
das
leave
sbb
test
adc
or
or
pop
cld
dec
and
sub
lret
lret
or
sub
jecxz
jmp
pop
ret
pop
add
xchg
mul
jno
movsl
je
mov
mov
test
sbb
push
out
ds
jmp
out
jo
mov
add
and
mov
cld
test
ror
popf
stos
jne
adc
mov
outsl
jb
mov
inc
push
dec
outsl
in
sti
mov
shlb
sub
inc
or
pop
shlb
dec
pop
scas
jnp
out
loop
dec
cld
lea
jo
mov
ljmp
mov
ja
insl
clc
cmc
jno
and
hlt
fs
push
fwait
push
jo
inc
fs
mov
mov
nop
sub
repz
pushf
inc
pop
mov
cmpsl
add
arpl
jnp
jg
in
js
ret
cmpsb
in
cmp
add
xorb
subl
scas
mov
pop
dec
sub
shr
nop
jb
push
add
addr16
lahf
lea
xchg
scas
or
push
es
cmpsl
test
dec
mov
jae
xor
movsb
pusha
mov
lcall
xor
inc
mov
jle
xchg
mov
pop
popa
ja
ret
push
cmp
cmpl
pop
adc
add
ds
cwtl
add
int
mov
pop
lods
lahf
inc
adcl
push
push
data16
loop
ret
lret
aad
and
cltd
sbb
das
or
cwtl
cld
xchg
mov
sbb
mov
sbb
xchg
cmpsl
adc
aaa
aam
out
sub
xchg
sub
push
mov
push
pop
inc
clc
sub
pop
clc
orl
mov
gs
pusha
clc
jb
adc
in
jge
pop
pushf
es
jnp
and
pop
jae
call
ss
mov
icebp
xchg
int3
jne
iret
push
jo
lret
xchg
and
and
test
adc
inc
cltd
shl
add
lcall
incl
and
ret
pop
out
fwait
mov
adc
scas
push
fwait
sbb
js
call
mov
pop
shrb
ret
pop
rcr
frstor
sub
scas
stos
jg
insb
int
icebp
nop
jg
add
sub
sub
scas
lods
inc
movsb
mov
ja
lock
mov
repnz
push
mov
iret
pop
mov
fsubrl
aas
repnz
daa
pushf
out
push
into
in
jno
xchg
movsb
es
icebp
ret
xchg
fwait
orb
xor
add
lea
andl
mov
or
loop
mov
jle
mov
mov
cli
fists
ficompl
mov
mov
das
add
cmp
pop
xchg
shll
jge
orl
inc
adc
aaa
jb
jb
mov
loope
sub
cmpsl
repnz
sub
cmp
lea
or
pop
data16
stos
or
push
push
jge
and
cmp
and
movsbl
jbe
int
mov
data16
ljmp
xchg
aas
cmp
mov
lods
jmp
loop
adc
inc
inc
push
mov
repz
movsl
pop
int3
xchg
xchg
ja
and
out
test
mov
mov
push
in
negb
sbb
cld
xor
ljmp
nop
pushf
test
cmp
std
mov
sub
pop
lods
xchg
clc
fcoms
notl
stc
pusha
jg
xchg
pop
xchg
fnstenv
imul
mov
adc
jg
mov
iret
lea
clc
stc
mov
sbb
sahf
out
mov
js
aad
arpl
jecxz
cld
cwtl
scas
jge
lret
jno
in
cmp
sub
daa
andl
nop
scas
push
xchg
mov
push
jmp
lahf
lods
repz
fnstsw
rcl
xor
arpl
add
cmp
enter
and
mov
shrb
test
cmp
movsl
add
sub
sti
push
and
pop
add
decb
bound
fbld
popf
xor
mov
cmp
stos
shll
inc
repz
icebp
hlt
sub
es
pushf
xchg
notl
jb
sub
arpl
pop
fs
cmp
repnz
ljmp
push
sub
lods
ret
or
pop
fistps
or
xor
pop
mov
ds
dec
mov
popf
cld
adc
pop
mov
add
jl
push
ljmp
pop
enter
stc
jo
fdivrs
fnstcw
ss
push
add
add
inc
and
fdivrs
pusha
jbe
scas
jb
in
test
loopne
inc
in
cld
fstpt
mov
push
aas
pop
lea
dec
jmp
shlb
out
and
jp
mov
xchg
xchg
mov
int
icebp
iret
je
fdivrl
jno
push
adc
xor
cmp
push
in
aam
pusha
sti
xlat
adcb
pop
jno
movsl
lahf
jno
shll
pop
mov
in
pop
cmp
sbb
ficompl
xor
inc
lods
pop
push
je
lods
daa
mov
cmpsl
lock
cli
dec
pop
stos
loope
js
adc
fdivrs
dec
ljmp
pop
xchg
pop
xchg
mov
and
mov
call
sub
sub
test
cmpsb
imul
ljmp
aaa
mov
cmp
pop
mov
adc
dec
fisubl
add
insl
mov
jb
mov
lret
enter
shll
jo
lcall
mov
out
add
inc
gs
pop
cmp
aam
sar
sbb
and
inc
adc
adc
test
stc
mov
xchg
test
xchg
in
sbb
sbb
js
stos
repz
jg
xchg
sub
out
pop
jle
mov
mov
or
or
add
dec
add
mov
sahf
out
inc
lret
add
mov
add
add
pusha
sub
lahf
ja
std
in
push
sub
notl
out
pusha
mov
aad
jo
dec
fistpll
sbb
mov
stos
fwait
mov
mov
enter
shll
dec
not
scas
cmp
lods
in
scas
mov
ret
loop
cmpsl
pop
jp
fidivrs
dec
inc
fs
push
das
lds
xor
fistl
push
xor
dec
je
repz
cwtl
cmp
sbb
cwtl
testb
adc
cmpsl
mov
push
inc
inc
jae
cmpxchg
fwait
movsl
mov
into
ret
inc
scas
loopne
mov
dec
mov
sub
in
xchg
cltd
pop
cltd
pop
mov
lret
xchg
rolb
cltd
jmp
pop
fisttpl
fimull
in
xchg
push
daa
mov
neg
push
dec
out
push
cmp
test
in
ja
es
loopne
sbb
int3
std
repnz
mov
lret
mov
pop
push
xchg
out
pop
sub
cli
inc
mov
sahf
aaa
fcomps
add
sbb
xchg
mov
jnp
jo
fistps
subl
or
movl
sahf
mov
test
push
add
cltd
mov
adc
mov
stos
sub
es
and
or
dec
cmp
jecxz
hlt
mov
in
in
jmp
inc
add
sbb
jne
mov
jecxz
xchg
add
ret
iret
mov
jnp
aaa
fmulp
stos
inc
shll
mov
in
jmp
push
lret
insb
fidivs
rcr
call
cmpsb
addl
out
out
xlat
jae
ljmp
scas
or
and
push
popa
dec
xchg
stos
out
pop
xor
or
xchg
out
mov
lret
and
jmp
lods
jo
ljmp
push
jno
outsl
sbb
or
dec
jp
and
scas
dec
xorl
mov
inc
cmp
in
push
sahf
lods
stos
xchg
jns
test
add
cs
dec
cmc
adc
out
push
out
jo
jns
inc
pop
jae
jp
mov
sbb
call
mov
shlb
idiv
ror
add
lcall
jle
rol
xor
push
inc
mov
sbb
fwait
mov
jg
jnp
and
xor
inc
fbld
push
pop
insl
and
add
push
xchg
iret
push
and
pop
stos
outsb
mov
data16
stos
or
es
push
pushf
ss
jmp
xchg
push
mov
add
shl
lret
jl
enter
push
rclb
fidivrl
rcrl
insl
shll
daa
xor
or
cwtl
outsl
out
or
or
mov
adc
mov
popa
inc
stos
and
cmpl
and
loope
mov
and
inc
popf
push
mov
dec
push
xchg
mov
adc
insb
sbb
pop
dec
lea
push
andl
mov
lcall
cmpsl
mov
xor
pop
lcall
sub
jnp
insb
out
in
cmpl
ja
pop
lret
mov
xchg
add
dec
inc
pop
std
lretw
sub
sbbl
push
cmp
popf
icebp
or
outsb
pop
out
or
insb
xchg
test
fisttpll
addb
lcall
fmull
cmp
xchg
idivb
mov
idiv
sarl
mov
aad
mov
xor
lahf
andb
jne
cmp
das
ds
call
shll
sub
stos
adcl
lcall
cmpsl
shlb
dec
mov
mov
dec
push
jg
bound
dec
jne
int
sub
mov
mov
cmp
mov
ret
push
mov
scas
in
je
rolb
lret
inc
jp
or
imul
add
xor
jbe
inc
out
adc
lahf
mov
mov
push
dec
clc
rcrl
adc
ds
loop
sub
lcall
cmp
into
hlt
sbb
sub
mov
push
cmp
pop
dec
mov
pop
cmp
mov
repz
stos
lods
dec
xchg
pusha
flds
rolb
cmc
pop
andb
pop
xchg
lds
cmp
pop
adc
dec
add
fs
dec
lret
in
jns
dec
jmp
cltd
sbb
xorl
cmp
push
mov
and
push
lea
and
or
sbb
jl
mov
shrb
pop
mov
dec
loope
sub
in
pop
dec
mov
xor
dec
in
mov
xchg
cmpsb
out
mov
mov
fildl
cltd
mov
xor
ds
bound
lods
test
or
push
cmp
out
jo
aad
sub
imul
aas
aas
mov
sub
call
lret
adc
ficomps
pop
jle
rol
mov
xor
cwtl
stos
xchg
cmp
dec
mov
cltd
cmpsl
mov
test
cmp
mov
xchg
mov
cmp
jg
into
push
in
lcall
cmp
aas
test
inc
fmuls
pop
mov
jecxz
imul
scas
addr16
pop
in
ss
jb
mov
imul
jp
cld
lret
jle
loope
xchg
and
xchg
andl
les
sti
loopne
or
push
add
pop
mov
lock
push
cmp
mov
fnstenv
mov
pop
mov
dec
out
fwait
cli
add
cmp
adc
dec
mov
inc
add
int3
insb
js
les
jge
lcall
pop
enter
loopne
cmpsl
xlat
jns
fsts
movsl
or
push
test
repz
cmpsb
adc
rorb
vminss
sarl
mov
pop
enter
sbb
clc
jae
sbb
mov
dec
and
push
add
shll
mov
pop
xchg
mov
sbb
cmp
in
mov
mov
gs
fistpll
movsl
subb
ja
dec
xchg
mov
mov
push
daa
push
loopne
mov
insl
fwait
cmovb
jno
sahf
sbbl
and
push
repnz
inc
pop
fistpll
inc
mov
stos
sub
out
stos
es
adc
dec
lret
push
and
xlat
push
ret
insl
loopne
lods
sti
push
sub
repz
xchg
sti
mov
sbb
loopne
pop
xchg
mov
cmp
fisubrs
xchg
mov
rcrl
stos
cltd
pop
sbb
pop
out
stos
out
jo
mov
fsts
push
scas
dec
jg
jp
out
lods
inc
arpl
in
or
movsl
sbb
xchg
cmp
adc
int3
aaa
and
add
jo
in
mov
add
int
pusha
iret
jae
sbb
xchg
lods
fwait
pushf
iret
fimuls
sbb
lock
fcmovnb
repz
cltd
fnstsw
lcall
adc
ljmp
aad
xchg
loop
stc
mov
pmaddwd
clc
dec
or
mov
fstpt
and
div
lahf
rcll
ficoml
push
mov
xchg
aad
xor
fcmovne
in
notb
into
xor
push
or
jp
test
adc
inc
test
repz
fwait
lock
dec
mov
xor
into
pop
int
lods
test
push
mov
and
arpl
xchg
mov
xlat
loope
mov
clc
xlat
inc
out
jae
sub
or
xor
inc
lcall
pop
mov
pop
jecxz
dec
xchg
adc
in
out
lret
sti
inc
std
loopne
pop
shrb
sub
insb
inc
jge
jp
cmp
adc
sbbb
aaa
xchg
push
cmpl
out
testl
push
adc
push
fldl
adc
lret
sahf
leave
loopne
test
subl
jmp
xchg
stc
xlat
pop
outsl
jnp
mov
xor
cld
imul
sub
ret
pop
inc
mov
lea
lock
pop
xor
fadd
add
loope
xor
jne
cwtl
aaa
sbb
pop
test
testb
inc
dec
pop
shll
ljmp
iret
test
daa
mov
sub
mov
add
push
out
hlt
fbstp
bound
dec
sbb
dec
jmp
test
and
movsb
lret
cmp
inc
or
adc
or
fidivl
pop
into
leave
cmp
cmp
dec
inc
setg
mov
mov
xor
mov
xchg
sbb
jbe
aas
mov
leave
mov
xor
mov
push
xchg
mov
mov
xchg
mov
popa
push
mov
test
sub
adc
fs
xor
adc
repnz
xor
sub
xor
adc
test
mov
push
int3
pop
scas
addr16
or
in
out
mov
mov
mov
inc
std
xchg
pop
loopne
repnz
xchg
jnp
mov
out
xchg
xor
jmp
ja
jb
test
in
dec
mov
aaa
lret
xchg
es
jl
idivl
divl
jb
scas
stos
xlat
in
shlb
push
aam
cmp
cmc
xchg
adc
rcl
gs
xchg
push
and
lahf
jl
adc
mov
jle
xchg
mov
les
push
push
pop
mov
pop
sahf
outsb
movsl
repnz
adc
shrl
sbb
cmp
fimull
daa
jp
xor
pop
pop
push
mov
ja
jo
mov
inc
lahf
mov
and
push
sbb
sti
mov
ficoml
movsb
icebp
mov
xor
call
cmpsl
sub
xchg
jl
decb
data16
jb
sbb
jg
cmp
pop
inc
icebp
mov
jle
mov
lcall
aam
dec
bnd
or
sti
fistpll
ret
call
loop
jo
cmp
jge
mov
mov
mov
into
or
fildl
ds
inc
add
outsb
lea
aaa
or
mov
mov
jne
push
and
sbb
shlb
cltd
arpl
mov
das
push
cs
mov
inc
lds
jbe
pop
jmp
inc
and
sbb
add
sti
jg
mov
mov
cltd
dec
out
imul
pop
mov
fs
ja
stos
in
movb
push
les
mov
ja
pop
adc
cs
fnsave
add
insl
ss
insb
movsl
scas
fidivs
cwtl
push
xchg
push
loopne
add
test
jge
enter
cmp
stos
mov
out
pop
jl
mov
bound
stos
fistps
and
xor
push
int3
imull
push
lods
jl
leave
dec
rcrl
pop
jle
mov
pop
mov
lds
loopne
pop
push
stc
push
into
push
or
loop
dec
jns
sahf
mov
negl
aam
xchg
sarl
push
cmp
lea
push
and
or
in
inc
shrl
xchg
push
iret
sub
imul
out
sahf
push
cmp
rol
dec
mov
into
std
arpl
sbb
cmpsl
lock
repnz
inc
jo
mov
xorb
test
mov
and
mov
dec
in
xchg
push
sbb
jo
ds
ds
dec
lret
mov
lret
fiaddl
frstor
and
mov
or
pop
sbb
xchg
mov
les
add
push
test
je
add
out
add
add
add
add
add
add
js
add
add
add
add
xor
add
add
add
add
test
add
add
add
add
cmp
add
xor
xor
xor
add
addb
add
or
addb
add
stos
stos
add
ja
clc
mov
jmp
call
add
add
imul
adc
adc
add
adc
add
add
add
add
add
add
adc
add
mov
add
add
jb
add
add
add
xchg
xor
add
add
add
add
add
add
add
add
jns
jne
dec
imul
add
lret
mov
and
sti
jecxz
out
sbb
push
cmp
clc
xchg
mov
mov
add
push
add
jne
jne
pop
push
std
pusha
incl
enter
test
pop
add
mov
mov
and
add
mov
add
out
add
and
in
push
add
sub
loopne
add
add
call
test
decl
adc
test
pusha
push
call
jne
or
push
push
xlat
nop
mov
test
test
incl
je
clc
test
clc
add
push
ljmp
push
decl
loopne
add
push
pop
pop
add
add
add
add
add
inc
add
sbb
add
sbb
sbb
sbb
sbb
sbb
jne
add
jb
gs
gs
add
inc
insb
gs
fs
dec
add
je
pop
out
imul
dec
add
push
je
jp
gs
jae
push
addr16
je
add
add
xor
xor
aas
loopne
add
add
jo
add
add
add
add
add
add
or
pop
cltd
pop
adc
dec
xchg
bound
popf
or
ljmp
cmp
add
test
xor
es
decl
and
xor
lahf
sbb
mov
into
push
jno
sbb
sbb
dec
bound
push
and
lcall
xchg
pusha
jl
inc
in
fisubrs
push
stos
dec
aaa
xchg
dec
dec
push
in
in
fistl
jns
cmp
xor
jmp
mov
fidivl
adc
pop
les
xor
imul
lretw
iret
clc
pop
mov
jg
xchg
pop
fnstenv
aas
pop
mov
xchg
push
shll
mov
sbb
les
ret
jg
gs
out
mov
cli
ret
fists
jge
sti
add
sbb
icebp
adc
fstps
lods
and
sahf
iret
inc
out
xchg
stos
mov
inc
cmpsb
push
inc
cmp
pushf
push
lock
dec
outsl
pop
mov
test
lcall
xchg
pop
insl
mov
je
fwait
lea
pop
pop
mov
and
insb
sub
push
stos
jae
cld
xchg
les
and
orl
stos
int3
cld
lcall
push
popf
pop
arpl
or
loop
shlb
lcall
cltd
cwtl
sub
in
in
arpl
pop
notb
imul
xchg
sbb
push
lea
daa
dec
outsl
int3
rol
push
hlt
popf
sub
xchg
add
jl
imul
inc
aam
icebp
and
xchg
add
pushf
add
lret
lcall
loop
outsl
addb
mov
inc
cmpsb
std
ja
xchg
ljmp
or
sub
adc
nop
sti
fwait
mov
xchg
pushf
sub
ret
sub
aaa
mov
fdivrl
hlt
dec
pop
fnstsw
sbb
test
pop
mov
imul
js
aam
mov
add
xchg
dec
adc
sti
sbb
xor
neg
cltd
push
pop
in
lea
fsubrl
mov
mov
loop
leave
loope
pop
adc
inc
mov
enter
jecxz
iret
sbb
andb
xor
jns
mov
inc
sub
ficoms
xchg
mov
and
and
inc
push
or
inc
sahf
mov
adc
adc
jns
mov
sahf
fsubr
cmp
xchg
shll
adc
mov
outsl
pop
outsl
sbb
sub
stos
or
push
mov
add
sti
dec
ss
insl
hlt
je
mov
mov
fs
clc
and
lcall
and
mov
add
ret
mov
pop
adc
lret
sub
sub
push
mov
into
daa
fs
inc
mov
xor
into
lret
into
jbe
mov
cs
lcall
in
sub
adc
cmp
filds
cli
outsl
cld
mov
jg
lcall
mov
or
push
lret
xor
push
mov
mov
mov
insb
mov
pop
or
jl
mov
or
lds
adc
xor
pop
sub
sbb
std
cmp
xchg
outsb
popf
clc
lods
shll
sbb
dec
fsubrl
xor
jge
jbe
mov
sub
scas
inc
mov
leave
inc
mov
aad
add
mov
xchg
mov
mov
sbb
mov
nop
aam
mov
testb
cmc
cmp
add
jl
mov
stos
push
lcall
dec
adc
pop
mov
mov
add
adc
mov
mov
and
push
aas
or
cmp
nop
mov
jo
repz
fidivrs
push
hlt
insb
sar
jmp
push
jmp
sub
in
mov
mov
fmuls
loopne
js
arpl
sbb
leave
data16
dec
test
cmpsb
mov
sub
xor
jecxz
cs
push
in
mov
popf
mov
adcb
lahf
in
mov
scas
adc
xchg
nop
jg
jp
ret
test
popf
pop
jmp
jmp
lahf
xchg
push
in
sbb
fisttpl
jle
dec
insb
sbb
jns
mov
daa
outsl
pop
outsl
adc
lea
push
lds
roll
ljmp
out
cmpsl
ja
andl
sub
cmp
mov
mov
dec
insl
ss
icebp
outsl
xor
lea
xlat
sarl
push
addr16
mov
fisubs
xchg
fildll
xor
xor
jb
mov
in
mov
dec
pushl
cmpsb
xor
mov
test
mov
daa
outsb
imul
lock
jo
adc
inc
out
lret
xor
lcall
xor
adc
and
and
dec
sbb
test
jp
sub
xchg
xor
scas
sbb
and
fs
sub
mov
mov
mov
inc
mov
xchg
mov
pop
jo
sarl
arpl
cmp
pop
outsb
inc
cmpsb
pushf
arpl
dec
int3
add
mov
imul
cmc
rclb
out
test
mov
ret
or
lods
cmpsl
adc
mov
push
test
xor
inc
or
mov
add
scas
mov
sub
icebp
pop
aam
push
push
xlat
mov
mov
test
mov
lea
jl
bound
addr16
push
mov
js
jge
inc
loope
push
adc
cli
fldl
sub
int
outsl
in
pusha
xor
mov
ret
ljmp
call
fwait
xor
or
pusha
dec
jge
mov
sub
int3
les
mov
dec
cmp
mov
xor
lea
testl
push
mov
jne
js
xlat
ljmp
cmp
loope
xorb
cmpb
and
nop
aas
push
and
jae
cmpsb
out
insb
jae
rcrl
pop
leave
xlat
jnp
xor
mov
pushl
mov
iret
fdivrs
xor
addb
mov
repnz
aam
and
das
int
mov
mov
in
fs
and
insb
sub
movsb
nop
gs
int
xchg
je
aam
sti
cld
sbb
push
inc
insb
xor
outsb
cli
pushf
fs
fisttpll
xor
mov
jg
and
pop
add
popa
xchg
pusha
mov
mov
out
push
lret
in
ja,pt
arpl
and
push
scas
out
cmc
ret
xor
add
sahf
inc
fwait
xor
push
stos
push
stc
test
xchg
fisubrl
stos
sahf
addb
sub
jo
lods
xlat
shr
shll
clc
fwait
xlat
push
and
sbbl
ss
fwait
adc
add
dec
repz
push
cwtl
inc
aam
adc
mov
loop
and
mov
add
paddusw
lds
arpl
repnz
mov
xlat
mov
int
mulps
and
add
lea
xchg
xchg
test
out
sub
cmp
ldmxcsr
testb
adc
pop
fsts
outsl
adc
dec
or
or
adc
test
bound
jae
xor
xor
orb
inc
jb
mov
fmuls
das
xchg
dec
pop
cmp
fidivrl
push
fsubs
and
add
xchg
shrb
int3
testb
mov
cld
int
pop
mov
inc
jbe
hlt
cmp
inc
daa
not
add
shr
cmp
cwtl
adc
fwait
ror
or
daa
lods
pushf
loop
push
jmp
dec
jecxz
aaa
or
add
inc
lods
fldcw
orb
popa
lea
outsl
repnz
push
inc
xor
fs
xchg
mov
lock
iret
pusha
push
mul
jns
repz
push
xchg
dec
addr16
and
cmp
rclb
aad
cmp
pushf
mov
lahf
xor
imul
cmp
enter
sbb
aas
adc
xchg
pop
jge
inc
gs
inc
pop
cmp
fldt
scas
repnz
dec
ret
pop
shrb
dec
aas
mov
es
add
mov
mov
push
aad
sbb
mov
imul
rclb
dec
fs
addr16
bound
mov
loope
push
lret
repnz
ljmp
dec
pop
cmc
popl
shl
outsl
xor
push
add
aaa
outsl
popa
cmpxchg
xlat
mov
div
add
test
movl
cmp
out
add
test
movsb
cmp
add
or
ja
sub
pop
in
inc
sbb
insl
sbb
mov
push
ljmp
aad
mov
mov
xor
jnp
xchg
out
jl
mov
loope
jle
out
fcmovbe
mov
iret
mov
scas
jle
add
cmp
dec
push
sub
sub
loopne
add
mov
mov
data16
pusha
cmpsl
cs
daa
out
add
insl
mov
std
adc
loop
push
stos
xchg
ss
adc
je
mov
mov
or
adc
pop
fsubl
packsswb
jb
jp
movsl
add
xchg
xchg
icebp
push
mov
add
push
popf
jp
sbb
or
push
add
daa
sti
data16
jle
mov
sbb
and
xchg
lret
call
adc
xchg
sbb
xor
iret
jp
pushf
inc
out
insb
cmp
fs
insb
movsl
pop
aad
adc
cmp
and
jns
mov
loope
dec
cmp
cmp
ljmp
sub
pop
jecxz
out
adc
icebp
xchg
sbb
test
jge
rol
in
sti
and
clc
mov
stc
mov
jae
test
inc
fwait
mov
cld
sub
mov
ret
push
fidivl
sub
out
lea
stos
mov
sbb
in
pop
roll
pop
in
mov
inc
mov
lods
xchg
push
xor
xchg
mov
outsl
and
cltd
cmp
or
mov
jno
mov
enter
jno
or
pop
sarl
sub
stos
pop
mov
pushf
addr16
lcall
js
xchg
rorl
popa
cmc
test
aam
and
fisttpll
xchg
std
xchg
stos
mov
daa
adc
gs
and
mov
xchg
xorl
fmuls
scas
sub
cltd
adc
lods
fcoms
sbb
cmpb
std
xor
sbb
mov
push
cmpsb
cmpsb
imul
fsubrp
es
push
inc
lea
sti
imul
in
xor
cli
xchg
push
leave
cmp
repz
or
jp
rol
cmp
xor
push
gs
fucomi
mov
fwait
cwtl
push
ljmp
outsb
lahf
push
mov
call
xchg
jecxz
adc
pop
add
in
or
pop
push
fwait
pusha
push
orl
or
sub
mov
xor
mov
pop
xchg
mov
push
jp
mov
scas
xchg
sbbl
and
sbb
in
call
dec
xchg
std
xchg
dec
jge
enter
cltd
or
mov
test
and
leave
stc
sbb
xchg
outsl
sub
into
pop
dec
inc
scas
push
stc
lret
mull
pop
into
pop
outsb
loop
dec
dec
es
or
or
push
fists
outsb
sbb
adc
cmp
fbld
mov
sti
sti
je
das
xor
and
mov
mov
push
jle
pop
dec
pop
clc
sti
out
aaa
and
ret
ror
iret
js
loopne
out
push
push
out
out
and
jecxz
sbb
fnsave
int3
mov
aam
sub
lret
aad
adc
shr
mov
cmp
xor
or
xlat
call
mov
mov
addr16
shrb
cltd
into
rcll
mov
nop
sub
sbbl
loop
cmpsb
pop
push
sub
std
cltd
pusha
add
lds
xlat
insl
jecxz
push
xor
loope
dec
pop
in
xor
popf
andl
sub
sbb
xchg
and
repz
aam
cmp
in
push
fisubs
jg
and
sbb
push
sub
outsb
cmp
in
imul
js
adc
test
fsubrs
or
jo
push
fiadds
jbe
dec
mov
stc
mov
xchg
fistl
sbb
loop
dec
push
xor
movsb
or
clc
xchg
dec
adc
sbb
cltd
push
outsl
ds
xchg
xlat
pop
jne
add
pop
sbb
cli
daa
jae
lods
jmp
aad
adc
jl
xor
sahf
add
jb
mov
dec
imul
movsb
fistpl
xchg
mov
adc
adc
sub
xlat
or
je
mov
sahf
mov
aad
xchg
aaa
xchg
or
rorb
add
imul
adc
xor
fadds
adc
scas
add
lret
or
sarl
xchg
mov
mov
pop
xchg
icebp
pop
pop
in
pop
push
adc
sub
loope
inc
mov
cmp
scas
gs
or
inc
out
inc
push
test
adc
xchg
and
leave
cmp
mov
dec
imul
and
xlat
add
xchg
scas
mov
push
xchg
pop
lods
and
mov
xlat
push
cs
pavgb
pusha
xor
inc
sbb
in
clc
fs
test
outsb
inc
lret
xor
add
mov
inc
scas
gs
test
and
call
sbb
or
ret
inc
shll
int
outsb
test
nop
add
sub
test
scas
cmp
or
dec
or
adc
add
pop
aaa
lret
mov
jo
ss
inc
js
inc
cmp
push
pop
xchg
movsb
adc
dec
jecxz
fxch
xor
pushf
xchg
frstor
xchg
xchg
pop
sbbl
jae
inc
sbb
fisubrs
dec
outsl
pop
fdivs
dec
xchg
shrl
fldcw
xor
mov
decb
ljmp
lods
cmp
in
adc
inc
mov
push
daa
xchg
filds
push
push
mov
ds
pop
jb
dec
jp
test
mov
bound
insb
mov
adc
in
arpl
xchg
push
mov
lods
mul
inc
and
cmpsl
test
outsl
mov
imul
mov
jb
push
push
jae
inc
cmp
xor
mov
add
imul
pusha
mov
fwait
movq
into
xchg
xchg
mov
test
fists
adc
pusha
sbb
inc
fs
movsl
fcmovne
rcl
lock
inc
xor
jne
cmp
push
mov
mov
outsb
jmp
xchg
jb
sub
mov
cmp
jne
jbe
mov
jmp
sub
scas
in
xlat
ss
add
xlat
popa
mov
fcmove
adc
xor
and
lret
pop
js
popa
xor
pop
xor
mov
and
cmp
xor
inc
cltd
test
loopne
sbb
cmp
push
sbb
movsb
mov
je
imul
cmp
fdivrl
xlat
int3
movl
sub
dec
xchg
jmp
jl
jge
out
ja
jo
int
stc
aam
push
cld
cmc
repnz
inc
cmpsb
or
loopne
inc
sub
push
out
push
add
ret
les
jno
dec
call
data16
scas
jno
fsubrs
mov
fwait
pop
in
scas
add
gs
and
outsb
sub
cmpsl
pop
mov
jae
test
xchg
add
push
mov
insb
push
xchg
popf
xor
test
jne
rcll
push
shll
jne
cmpsl
pop
shlb
and
inc
push
aad
popa
sub
and
mov
inc
fcomi
sar
sbb
sarl
push
mov
data16
adc
rcll
xchg
mov
cmpsb
push
add
add
pop
shlb
xchg
xchg
adc
daa
inc
adc
into
mov
or
sbb
aad
add
lods
jae
scas
jecxz
mov
je
sub
jmp
push
inc
imul
cmp
add
inc
gs
mov
aad
int
adc
sub
lods
mov
arpl
push
imul
lcall
lods
xor
adc
cmp
or
stc
push
pusha
adc
adc
push
fldt
add
xchg
dec
cmp
cli
scas
hlt
push
cs
repz
mov
scas
loope
stos
adc
in
dec
aad
stos
loope
or
sarl
sub
push
jno
aas
lahf
icebp
dec
mov
add
xor
ror
shl
xor
mov
sbb
mov
push
jns
and
xchg
repz
push
arpl
lea
and
inc
mov
rep
into
cwtl
movsb
mov
js
clc
jmp
rorb
cmpsl
push
lock
add
inc
sbb
jno
das
in
call
ja
jp
pop
lahf
push
roll
or
test
scas
mov
add
and
xchg
add
mov
sbb
in
jle
mov
xor
in
ret
mov
add
or
popl
fs
adc
add
ret
clc
mov
and
push
in
sub
jmp
pop
cmc
aad
mov
add
icebp
cmp
cmpsl
push
call
les
andl
mov
ss
push
mov
insl
orb
ret
cmp
xor
and
ret
pop
add
add
or
adc
mov
mov
pop
in
cmp
and
shlb
data16
adc
xor
aas
push
or
adc
int3
loopw
jmp
inc
or
test
js
mov
lods
mov
dec
mov
sub
cmpsb
dec
and
fmul
push
in
jne
xorb
nop
pop
daa
and
cmpl
or
fdivrl
mov
fimull
pusha
fstl
pop
mov
add
add
add
iret
jo
add
add
out
push
jg
cmpxchg
add
add
add
add
add
add
add
fwait
add
rolb
add
ja
mov
jg
jg
mov
sub
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
call
mov
add
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
call
call
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
mov
leave
ret
add
add
add
add
outsb
inc
or
add
add
add
add
add
add
movsl
add
add
and
add
add
outsl
add
add
add
add
cmp
imul
neg
and
pop
add
push
outsl
imul
add
jne
push
leave
aaa
mov
popa
iretw
mov
inc
cld
inc
lea
add
dec
mov
mov
incb
inc
std
and
call
dec
add
ret
push
add
add
mov
cmp
lea
rorb
rolb
add
add
push
add
test
push
decl
xor
inc
incl
adc
incl
orl
xchg
call
jge
push
push
incl
push
adc
std
and
mov
ret
orl
lock
push
add
test
add
lock
or
add
add
fiaddl
addb
add
add
add
add
add
push
je
imul
outsl
jb
add
inc
gs
add
add
inc
arpl
popa
gs
gs
gs
insb
and
js
push
insb
xchg
gs
push
add
add
dec
insb
popa
jne
gs
inc
outsl
push
insb
arpl
add
add
add
add
add
cmc
add
inc
add
inc
add
mov
and
stc
cltd
and
jmp
testl
push
pop
inc
in
jo
mov
xchg
mov
loope
nop
or
ds
fs
clc
dec
xchg
jp
leave
or
xchg
mov
dec
outsl
in
pusha
in
fildll
pop
cmp
subb
dec
cld
les
in
xor
xchg
dec
inc
pushf
das
addb
inc
mov
xor
pop
test
dec
xor
cs
imul
xchg
and
sub
jno
mull
jo
adc
or
push
push
and
jg
outsb
cmp
repz
shlb
adc
fwait
int3
lahf
cmpsl
dec
movsl
fwait
nop
into
xchg
mov
lods
pop
mov
and
pop
push
xchg
push
sub
add
scas
loop
fcompl
clc
mov
ds
data16
mov
lcall
into
add
sbb
xor
jg
loop
sbbl
pop
cli
dec
jmp
adc
test
jl
dec
mov
ret
push
dec
mov
sbbl
and
rcrl
imul
fwait
xor
sarb
xlat
push
mov
movsb
jp
and
push
cmp
cltd
mov
or
scas
aam
pop
lahf
outsb
jnp
add
fidivrs
add
mov
out
cli
mov
dec
sub
or
test
rorl
fmulp
mov
test
shll
outsb
or
cli
lds
imul
stc
adc
xor
add
stos
xchg
loopne
sub
repnz
and
aam
mov
jnp
icebp
arpl
fadds
push
ja
out
push
mov
ret
ja
in
aad
sti
dec
popf
mov
test
stos
addl
in
ja
lret
adc
fcomp
mov
orl
int3
sahf
mov
cmp
push
adc
xor
push
sub
cmp
jne
scas
mov
jno
jecxz
je
cld
cmp
outsl
dec
push
sbb
xor
sbb
pusha
mov
popf
pop
rolb
lret
mov
test
xchg
into
sub
ficomps
sub
test
adc
and
push
fldl
icebp
out
or
sbb
adc
cmp
or
insb
scas
pop
and
jecxz
or
fs
fnstcw
addr16
push
imul
mov
mov
mov
scas
pop
outsl
mov
cmp
mov
mov
jge
stos
mov
popf
repz
shlb
dec
push
shlb
push
das
jle
xlat
out
es
mul
mov
xchg
ds
push
pop
outsb
cmc
arpl
xchg
dec
sub
pop
pop
popa
in
xlat
lahf
imul
mov
add
icebp
push
xchg
sub
mov
fmuls
fdivrl
leave
iret
xchg
xor
es
daa
cmpsb
in
sbb
and
addb
cmc
cltd
out
insb
cld
mov
je
movb
xchg
cltd
xchg
pushf
xor
sbb
imull
cs
mov
jl
gs
js
pusha
mov
and
scas
clc
or
insl
shlb
icebp
mov
ljmp
movsb
or
nop
or
ffree
xchg
add
sub
dec
dec
dec
inc
shrl
xchg
test
xor
aaa
mov
test
in
adc
sti
pop
lock
jns
sbb
decl
cmp
hlt
jb
inc
push
xchg
or
mov
dec
popa
fisubrs
or
sbb
pop
pop
fidivrs
mov
iret
in
pop
daa
pop
cmpsb
cmc
dec
push
loopne
gs
cmpsb
xlat
lahf
mov
inc
rcl
aam
push
jno
cmp
push
clc
scas
jmp
jge
xlat
push
pop
mov
out
orb
lcall
jae
mov
adc
mov
xor
bnd
in
mov
jmp
add
into
sbb
pop
jmp
stc
mov
data16
xor
in
sbb
xor
das
repz
sti
imul
pop
jns
sbb
fstpl
sbb
aam
pop
sbb
pushf
mov
mov
jnp
adc
lods
aad
int
mov
mov
scas
mov
cmpsl
in
or
mov
je
and
jmp
add
adcl
iret
fbstp
jl
sub
popa
sbb
loopne
hlt
cmp
mov
adc
xchg
xchg
dec
push
sbb
dec
aaa
jecxz
xchg
mov
sbb
push
fists
leave
xor
add
scas
sahf
push
lods
dec
mov
in
jecxz
sub
inc
xchg
sub
jmp
repnz
iret
call
sbb
jg
insl
or
scas
in
adc
aas
pop
pop
cmp
dec
pusha
pusha
stos
fisttpll
lock
sahf
out
into
jle
jmp
or
mov
addb
xor
push
sub
adc
call
aas
and
lcall
outsl
pop
out
and
clc
bound
dec
jae
or
test
and
or
xor
and
mov
out
or
push
and
xor
movsb
lret
sbb
adc
sub
jbe
imul
mov
sbb
je
pop
movsl
arpl
add
or
test
shlb
sbb
dec
jl
mov
xor
in
ljmp
add
or
adc
inc
scas
outsl
push
mov
mov
dec
add
pop
inc
in
mov
fwait
test
jnp
mov
cmp
sbb
imul
sahf
mov
inc
xor
jo
fdivrp
jmp
cmp
repnz
in
inc
mov
sbb
dec
mov
add
xchg
out
out
and
xor
rcrl
mov
dec
int
dec
int
add
push
mov
mov
inc
lods
loopne
xchg
fstl
in
insb
fidivrs
add
mov
push
jle
push
out
mov
lock
nop
ret
cmp
sbb
fisttpll
jae
icebp
jmp
pop
ret
add
js
push
add
cmpsb
add
pop
add
mov
jns
or
fnstcw
push
aad
xor
add
loope
fs
clc
mov
aaa
add
jnp
jle
jns
cli
xchg
jnp
xor
adc
movsl
add
jb
xor
jb
xchg
rcl
sub
adc
inc
jge
adc
pushf
das
or
xor
stos
add
test
or
xchg
inc
mov
pop
lea
mov
sahf
inc
je
outsb
bound
adc
dec
dec
scas
cmp
js
mov
jmp
addr16
jge
cmp
or
cmp
icebp
add
mov
imul
xchg
or
pop
mov
aad
pop
hlt
loop
jne
imul
int
pop
mov
test
sbb
ds
insl
bound
popa
ret
push
jecxz
lret
xor
pop
sahf
aam
or
pop
push
jbe
hlt
rclb
sub
popa
xor
pop
movl
sub
sbb
jle
pusha
mov
add
dec
es
xlat
adc
xor
stc
std
inc
mov
inc
and
inc
sub
imul
in
dec
add
xor
inc
add
test
stos
mov
mov
or
stc
mov
jo
cmp
aas
icebp
ret
fisttpl
fdiv
and
add
cmpsl
shrb
clc
lods
jmp
aas
adc
sahf
push
add
mov
mov
push
and
fs
sub
mov
add
mov
sahf
push
pop
popa
out
pop
mov
pop
jo
push
shrb
cmpxchg8b
enter
xor
or
xor
lods
in
jle
test
jne
adc
and
or
adc
inc
pop
lods
ds
mov
stos
push
pop
pop
mov
lock
add
mov
xor
mov
sub
sub
lods
lods
mov
test
mov
std
add
lcall
and
or
sbb
dec
dec
inc
or
xor
out
cmpsl
sub
jmp
sahf
lahf
jp
sbb
fs
xchg
lret
push
lahf
mov
pop
xor
enter
pop
ss
pop
mov
int
mov
lcall
dec
mov
sti
in
xor
imul
ficoms
test
push
xor
mov
inc
mov
mov
lahf
or
or
add
in
sub
and
lret
inc
iret
test
pop
cmp
outsb
js
test
mov
icebp
jecxz
inc
aam
test
notb
add
stos
aad
jae
cmp
fldl
inc
jecxz
lret
icebp
aam
push
cmpsl
pop
inc
xchg
mov
dec
inc
pop
outsb
enter
xchg
jmp
rorl
and
pop
xchg
stc
andl
mov
sbbl
data16
mov
loopne
mov
fimull
loopne
into
hlt
xor
popf
andb
fs
mov
xor
cmpsb
cmpsb
outsb
jbe
adc
dec
ret
push
mov
mov
push
and
cmp
imul
push
push
mov
movsb
dec
xor
jb
cmp
jo
xlat
lret
add
insb
inc
testb
insb
stos
mov
imul
stos
cld
inc
xchg
xor
fwait
xlat
cmp
test
roll
addb
cmp
repnz
inc
jnp
adc
lods
adc
xchg
xchg
inc
fcomps
aad
push
dec
pop
mov
xchg
add
shll
call
int
jmp
dec
out
push
cmpsb
aam
or
lret
cli
ja
mov
xor
xchg
les
int
aad
nop
xchg
xchg
dec
stos
add
or
xchg
jle
jnp
adc
mov
ljmp
jbe
scas
fadds
cmpsl
mull
int
adc
cmp
sub
inc
mov
fstpt
mov
das
add
fwait
lock
jmp
repz
add
lahf
fisubl
cmp
inc
dec
pusha
cwtl
jnp
cmc
sub
push
cld
inc
loope
std
cs
sub
addr16
and
or
add
cmp
and
push
std
jns
lretw
inc
les
pop
mov
dec
das
or
mov
ds
lods
mov
cmp
adc
test
add
push
push
add
mov
pop
and
je
jns
mov
out
and
pop
sar
mov
push
push
in
lods
xchg
sbb
inc
imulb
mov
sub
mov
data16
mov
cltd
mov
mov
inc
pop
sbbb
xchg
or
xchg
sub
cmc
xor
cmp
mov
mov
in
push
cwtl
jns
je
addl
adc
icebp
ja
insl
add
mov
je
lock
lret
cmp
mov
js
mov
sub
jmp
scas
loope
cltd
ss
pusha
and
xchg
into
or
inc
ljmp
stos
or
sti
cs
xorps
test
sti
ds
insb
dec
fmul
mov
test
pause
or
shlb
movsl
cmp
or
lahf
sbb
push
xchg
pusha
push
adc
ss
mov
or
ja
cmp
jmp
mov
ds
dec
fprem
pushf
movsb
push
rcl
pushf
add
lahf
push
lods
stos
jns
fsubrs
push
push
and
imul
sbb
dec
xor
arpl
sbb
enter
bound
and
inc
dec
sbbl
sbb
arpl
or
xlat
lcall
out
xlat
adc
xchg
jb
decb
mov
call
stos
adc
and
dec
and
das
jle
jae
and
mov
or
push
xor
and
in
xchg
es
jmp
cltd
test
sub
lret
sbb
cmp
repz
xchg
clc
xchg
xor
sbb
or
mov
sbb
pop
nop
or
cmpsl
sti
cmp
stos
adcl
iret
icebp
jnp
cmp
mov
add
negl
pop
xchg
lods
xor
or
push
jbe
mov
or
jo
and
test
cmp
pop
xchg
sti
dec
pop
stos
mov
dec
pop
stos
jge
pop
fisubs
sub
xchg
dec
lahf
adc
jecxz
fisubrs
add
shlb
or
mov
ljmp
loopne
xchg
gs
mov
xor
cmp
rolb
in
push
aad
lods
ljmp
jg
insl
lcall
mov
jae
pusha
cld
in
or
test
mov
sub
mov
popa
xor
imul
arpl
stos
jae
icebp
jns
fadds
movq
leave
jle
cmp
mov
cmc
out
sbb
push
jo
xor
xchg
mov
sbb
std
and
aad
xchg
test
mov
and
arpl
mov
xchg
xor
repnz
cmp
sub
pop
lret
rcll
cmp
cmpsl
test
inc
mov
mov
sub
inc
mov
aam
rcl
jp
cli
out
in
aam
lahf
idivb
or
fsubrl
test
insl
call
jmp
cmp
loop
mov
mov
arpl
mov
mov
mov
xchg
leave
xlat
inc
pop
push
shlb
push
inc
and
mov
lods
or
dec
mov
mov
fists
jp
mov
cs
mov
shrl
push
cmp
sbb
mov
jg
jb
outsb
inc
jmp
sub
push
jmp
push
arpl
jae
stc
pop
push
mov
push
mov
enter
xor
pop
jbe
dec
sbb
and
rcl
push
mov
add
dec
clc
outsb
test
rorl
sbb
jle
xchg
test
outsl
jp
test
mov
and
jne
sbb
pop
mov
cmp
or
in
pop
fcoml
ss
addr16
idivb
xchg
or
or
jnp
jae
mov
mov
push
sbb
or
andnps
aad
sub
loope
sbb
fbld
out
cwtl
lret
fmull
lret
andl
test
aaa
mov
cmp
push
mov
dec
fisttpll
loope
push
stc
ss
fisttpll
popa
stc
and
pop
addb
mov
mov
daa
test
sub
jl
stc
pop
jno
pop
xlat
icebp
pop
mov
pop
dec
mov
xchg
push
lret
cmp
or
test
pushf
nop
nop
loope
lea
clc
cmp
sub
jbe
cmpsb
push
aad
call
fbld
mov
lock
jne
sbb
mov
lret
fidivl
hlt
test
rcrb
int
dec
jns
imul
xchg
idiv
stc
mov
sbb
sub
js
xchg
xchg
js
add
cltd
cltd
incb
push
push
xchg
mov
jo
jbe
pop
test
rol
xchg
ss
push
adc
cmp
push
aas
push
loope
adc
divl
stos
stos
add
shlb
iret
pop
inc
adc
mov
xchg
pushf
adc
pop
mov
add
ss
push
lret
mov
das
movsb
jl
and
jb
jns
cld
movsb
mov
xor
inc
and
stc
jae
ret
xor
cli
pop
js
mov
out
fs
or
mov
push
leave
testb
fistps
dec
pop
js
daa
inc
jp
pushl
daa
es
adc
dec
cmp
inc
mov
and
or
in
fwait
sbb
pusha
stc
or
mulb
pop
rolb
psrld
cltd
mov
stos
test
cwtl
or
xchg
push
push
mov
test
ret
stos
mov
jno
push
aam
cld
sub
sbb
test
lretw
and
xchg
sbb
test
cld
push
addr16
leave
fimull
test
inc
or
mov
mov
mov
jne
hlt
xchg
cltd
fidivrl
cmpsb
addb
cmp
xlat
inc
cmpsb
push
jb
jnp
xchg
incl
stc
cmp
xor
sbb
shrl
addl
dec
repz
arpl
xchg
jle
movsb
lea
cmpsb
shrd
cltd
loop
imul
push
mov
jle
xorb
notb
pusha
das
lret
and
dec
jbe
adc
mov
mov
sub
dec
push
sti
jns
mov
ret
and
rorb
test
popa
jmp
lods
ss
jbe
incb
mov
adc
and
in
das
add
and
push
mov
pusha
mov
cmp
lea
call
gs
xor
and
cmp
pop
mov
sub
adcb
jns
sub
inc
mov
mov
in
mov
mov
setns
cmc
popf
add
cmp
xchg
sub
sub
mov
push
xor
add
scas
xchg
mov
imul
mov
fbld
arpl
ret
mov
sub
xor
mov
lods
jb
pop
xor
in
cmp
sbb
xchg
push
out
mov
int3
push
es
rcrb
cvttps2pi
js
push
cmpsb
daa
pop
inc
push
out
stos
push
jno
ret
mov
insb
sub
pop
cmpsb
push
leave
push
scas
jb
inc
adc
out
pop
cltd
lods
inc
adc
mov
cli
jp
mov
push
push
jbe
cld
gs
into
inc
cmpsb
and
enter
test
sub
test
aad
jo
repnz
aas
mov
xchg
cwtl
pop
cli
sbb
js
cmp
nop
idivb
subb
rcll
ja
jl
mov
inc
pusha
xchg
jecxz
add
out
leave
add
stos
xchg
xlat
push
iret
cmp
sub
cwtl
mov
or
test
andb
pop
pop
mov
hlt
or
adc
shrb
pop
fsubrs
testl
push
pop
dec
ja
pop
test
add
cmpsl
jno
push
or
test
stos
mul
imul
insb
inc
loope
in
shl
sub
les
or
push
push
arpl
mov
inc
inc
push
push
xchg
jno
jl
jbe
clc
iret
pop
mov
scas
popf
ds
push
mov
fisttpl
xchg
adc
and
or
loope
push
sbb
mov
shll
sub
lret
lods
sub
jl
mov
add
add
add
add
aad
add
add
and
add
add
orb
add
addb
sbb
add
add
add
add
add
add
add
add
add
out
stos
add
ja
mov
jo
jo
push
mov
sub
mov
push
mov
push
movzbl
mov
sub
je
call
mov
incl
movzbl
jmp
cmpl
je
cmpl
je
call
mov
xor
call
mov
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
or
mov
call
mov
pop
pop
leave
ret
push
mov
mov
mov
mov
push
add
pushl
mov
mov
add
mov
mov
mov
call
mov
call
mov
mov
mov
movzbl
movzbl
sub
je
addl
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
mov
pop
movl
push
andb
call
mov
mov
andb
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
movl
movl
movl
pushl
movl
call
pop
test
pop
jne
push
pop
jmp
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
jae
jb
jo
add
sbb
add
xor
call
push
push
push
call
push
imul
jb
je
arpl
sldt
add
mov
outsl
popa
jb
or
nop
add
add
mov
add
adc
add
add
add
add
add
add
and
adc
add
add
push
mov
xchg
add
add
cmpsb
sbb
sbb
sbb
or
and
js
add
mov
sbb
outsl
inc
add
gs
stc
shr
roll
pop
jmp
fadds
or
pushl
mov
add
ret
sub
adc
xchg
incl
cmp
adc
decl
push
inc
lock
test
mov
rcrb
call
cmp
pop
cld
add
add
add
adc
leave
add
cmp
adc
xor
rolb
mov
incl
fiadds
lea
std
std
loopne
pushl
sbb
shl
cmc
and
push
add
lock
push
adc
call
jne
sar
dec
add
repz
jp
push
lea
push
push
push
add
xchg
and
je
add
add
add
add
xchg
sbb
sbb
sbb
sbb
sbb
xor
outsl
gs
je
jae
inc
insl
dec
jne
inc
add
jo
movsl
fadds
inc
outsl
out
insl
imul
jo
insb
sbb
push
add
xor
gs
push
inc
xor
dec
imul
gs
jae
loopne
insb
push
add
imul
add
in
add
add
add
add
push
mov
add
add
add
add
dec
mov
bound
add
inc
stos
pop
arpl
jle
pushf
dec
jle
pushf
out
push
aam
and
pop
cli
subl
pushf
sbb
or
inc
sub
js
mov
insb
sub
ja
dec
fldt
add
scas
and
loope
jnp
and
sub
movsl
pop
sub
arpl
rclb
mov
mov
shrl
xchg
scas
push
outsb
minps
inc
xorb
pop
stc
inc
mov
sub
dec
xchg
and
mov
ffree
jge
sahf
cmp
sbb
jne
mov
mov
cmpsl
loop
mov
mov
xchg
daa
adc
or
add
mov
decb
sahf
cltd
xor
jno
mov
ds
orl
mov
xchg
sub
fcomp
inc
or
jg
std
cltd
cmpsb
or
jg
sub
jle
xor
pop
push
cmp
fmuls
add
sub
lds
xchg
inc
jae
pop
faddp
jnp
mov
lahf
scas
jns
stc
push
fdivr
ret
adc
mov
pop
xor
sti
ja
stos
add
icebp
addr16
add
mov
pop
hlt
inc
outsl
pop
fcmovbe
dec
adc
fscale
inc
jp
push
loope
aad
int
sub
sti
and
or
sbb
mov
jmp
in
popa
pop
and
loop
in
adc
push
dec
push
and
lods
xchg
movsb
loopne
es
xchg
iret
fistpl
inc
pusha
cmpsb
pop
add
xchg
cmp
lcall
mov
loope
sub
frndint
push
cmpsb
push
bound
and
dec
pop
jge
sub
shlb
fnstcw
insb
test
pop
loopne
jae
mov
or
inc
adc
push
mov
mov
mov
adc
push
mov
fwait
ss
js
rcr
cmp
scas
jge
sbb
leave
add
mov
nop
std
mulb
ret
lret
iret
jecxz
cwtl
in
call
sahf
sub
mov
mov
ljmp
sub
cs
jp
fisubrs
fisubl
or
bound
adc
shlb
pop
and
daa
mov
xor
test
sahf
sub
test
lds
inc
std
push
iret
sub
ja
notl
std
cmp
mov
cli
sahf
rcrl
add
xchg
ja
mov
push
clc
mov
arpl
cltd
mov
push
out
mov
stos
call
xchg
cmp
dec
lods
das
pushf
dec
mov
mov
xchg
gs
adc
push
pop
mov
outsl
or
jne
mov
push
jecxz
dec
and
shll
pop
pop
mov
lock
or
inc
call
and
mov
dec
and
sub
mov
pop
xorl
test
xchg
aas
out
pop
test
sahf
sub
and
popf
daa
mov
and
stos
std
dec
int
cmp
xchg
mov
fsubs
hlt
loop
sub
jecxz
mov
mov
mov
pop
cmp
add
mov
pop
cld
repnz
pusha
pop
push
push
or
push
les
pop
xchg
test
testl
xlat
ljmp
mov
mov
test
mov
test
test
inc
inc
rorb
fwait
xchg
dec
sahf
cmp
test
addl
dec
movsl
adc
push
lret
shll
xor
stos
in
mov
out
inc
repz
pusha
sarl
xor
mov
movsb
dec
dec
jb
xchg
xchg
pop
sbb
cld
add
test
ja
sub
aam
jbe
arpl
loopne
mov
gs
inc
in
je
add
or
int
cli
and
fdivl
and
mov
jmp
pop
arpl
sub
sti
adc
jae
lods
pop
pop
jg
sbb
lret
shrb
push
ds
fisttpll
rcl
pop
in
aas
mov
inc
bound
out
fsubr
mov
xchg
adc
daa
sub
roll
inc
js
inc
xchg
fildll
icebp
mov
mov
jmp
pop
mov
jnp
sbb
sbb
je
dec
sub
inc
lock
mov
movsb
cmp
lahf
outsb
js
jne
lcall
hlt
mov
xor
inc
fwait
ljmp
xchg
cmp
xchg
adc
push
pop
setbe
enter
ds
mov
adc
decl
mov
ret
jb
fidivs
inc
xchg
ret
hlt
pop
or
bound
mov
jmp
inc
enter
out
bound
arpl
and
mov
add
fldl
inc
xor
sub
fdivr
sahf
out
push
pop
xor
test
aaa
and
pop
push
mov
xchg
mov
fcoml
mov
mov
mov
jne
leave
sbb
mov
in
adc
bswap
popf
test
sub
lcall
sbb
imul
adc
cmp
or
mov
cmp
outsb
pop
pushf
xchg
mov
adc
pop
jg
adcb
xor
std
pop
fmull
sbb
mov
ljmp
stos
xchg
nop
add
std
aas
stos
inc
loope
cmpsb
xor
inc
sub
mov
gs
rclb
out
popf
sub
les
mov
inc
adc
arpl
jnp
mov
sub
and
push
ljmp
sbb
cmp
add
jo
loope
filds
pop
sbb
ret
sarl
call
push
mov
repnz
loopne
sub
addr16
jge
xchg
xchg
xchg
stos
out
bnd
cwtl
push
jb
inc
or
imul
adc
mov
shrw
jp
dec
xor
and
addr16
and
mov
stos
lds
mov
jge
push
or
push
lock
sti
jo
jo
cs
sbb
adc
mov
pop
movsl
cmp
stc
cld
test
fisttps
loopne
ficoml
mov
jg
shlb
leave
outsb
cwtd
push
push
movsl
cli
pusha
dec
or
les
push
jo
jecxz
jge
les
pop
pop
xchg
dec
mov
cld
xchg
sub
inc
jl
push
jno
icebp
jo
imul
lret
mov
push
push
add
push
xchg
or
mov
cmp
dec
mov
and
ret
testb
mov
push
addl
lods
test
gs
imul
loopne
inc
mov
jne
mov
fisubs
fwait
dec
cwtl
aad
outsb
roll
add
xlat
lfs
clc
je
dec
lret
xchg
mov
sbb
inc
test
cmp
mov
aad
mov
es
sub
jle
sbb
int3
fdivrl
enter
dec
popf
dec
int
push
push
xor
out
mov
add
dec
adc
std
push
nop
adc
lock
jle
sbbl
lea
aaa
lret
mov
or
je
jecxz
aam
dec
movsb
cmp
sub
push
dec
add
mov
xlat
jne
mov
les
dec
pusha
lcall
mov
jne
inc
arpl
xchg
xchg
add
pushf
into
vcvtss2sd
imul
mov
mov
sub
int
cmp
test
dec
fwait
sbbb
xchg
mov
stos
mov
rorb
xchg
les
punpckhbw
imul
cmp
imul
fwait
int3
out
ss
insl
test
in
je
mov
sub
aad
and
out
ret
insl
xor
sub
push
dec
mov
mov
cmp
mov
pop
mov
outsb
js
repnz
pop
lods
push
aam
mov
movsb
mov
jle
pushf
test
inc
cmp
adc
mov
sub
xchg
int3
testb
fdiv
int
add
cmpsb
ret
in
sahf
loope
repnz
int3
fisubs
mov
mov
rcrb
jmp
loop
std
fidivrs
inc
xlat
adc
xor
fwait
jns,pn
cmp
pop
fwait
sbbl
jle
icebp
scas
lea
jecxz
sub
xor
or
push
and
fiaddl
aaa
push
fwait
jge
dec
jno
loope
mulb
stos
push
inc
or
dec
enter
pop
ljmp
lock
pop
mov
push
jb
or
mov
int
dec
sbb
or
lret
push
xor
dec
jp
xor
ret
pop
je
filds
cwtl
sbb
jae
ljmp
leave
sub
in
xor
xchg
pop
lret
lea
or
addr16
rcl
call
xchg
push
clc
xor
test
xchg
roll
mov
push
xchg
andb
ret
bound
mov
pop
push
stos
sub
inc
or
jmp
and
jl
cmpsl
mov
fdivl
adc
push
mov
cmp
decb
jp
inc
int
and
ljmp
pop
xlat
out
test
jo
mov
aad
and
pop
test
movsb
into
push
das
xlat
fsts
popa
mov
and
or
jecxz
aas
in
sarb
sub
pop
addr16
in
lahf
jle
mov
movsb
pop
divl
mov
or
test
int3
out
add
lods
mov
add
and
loope
sbb
stc
dec
or
les
fdivrs
lods
cmp
or
jae
pop
mov
mov
sbbb
cmp
sub
jne
xor
xlat
gs
sbb
lcall
aad
pop
je
sbb
adc
inc
pusha
push
sub
dec
mov
shll
adc
testl
jno
ret
add
push
shrb
insb
and
add
scas
xchg
sbb
stc
popa
mov
out
stc
mov
or
and
and
movsl
sahf
rolb
fsts
shll
add
push
mov
cmpsl
jbe
dec
addb
jg
fwait
xor
fadds
std
aas
fidivrs
test
stos
leave
sub
clc
fdivl
cmp
mov
jb
adc
fisubs
enter
mov
stos
mov
xchg
add
jo
lock
lds
imul
aam
or
loopne
adc
xchg
or
test
mov
sbb
mov
or
jbe
inc
std
testb
jmp
and
jp
lea
add
inc
inc
adc
mov
adc
movsl
incb
outsl
call
cmpsl
std
arpl
hlt
arpl
aaa
fisttps
push
inc
mov
cltd
cmp
or
jl
pop
inc
xor
idiv
ja
lret
dec
imul
pop
scas
xchg
jne,pt
cmp
or
stos
push
mov
mov
in
in
fdivs
inc
mov
jmp
dec
and
cld
add
mov
push
push
mov
addb
fcmovb
and
popf
jl
jge
out
aaa
cmp
shr
mov
loop
inc
daa
add
mov
ljmp
add
and
pop
daa
movsl
cli
fmulp
and
faddl
cmp
xor
out
std
or
gs
adcb
pop
bound
test
adc
addl
mov
xchg
pushf
rorl
pop
fcmovbe
fildl
addr16
fsubl
dec
setns
mov
test
andl
pop
sub
movq
rcr
jb
mov
or
ret
out
xor
fmuls
out
pop
xor
pop
mov
cmp
bound
jmp
cmp
gs
mov
inc
dec
repz
sbb
lock
fildll
mov
ret
lods
inc
xor
cmp
cwtl
out
bound
xorl
adc
push
sbbl
jmp
inc
pop
popl
push
pop
clc
insl
mov
mov
cmp
pusha
lods
mov
inc
imul
xor
and
or
mov
and
mov
pop
pop
xor
mov
mov
jl
pushf
aad
push
popf
fmuls
incl
push
mov
adcb
xchg
fsts
inc
cld
sbb
cld
aam
add
cmp
mov
sub
push
jne
push
testb
sub
hlt
icebp
jbe
sbb
test
pusha
mov
popa
xor
jns
in
push
xchg
insb
test
loop
mov
rcrl
pop
into
jl
add
push
mov
fsubs
adc
scas
jnp
xchg
sub
into
sbb
call
jne
sub
in
addl
dec
std
adc
adc
add
je
shlb
cwtl
jo
jns
out
idivb
fstpl
fsubr
ljmp
hlt
movsl
ljmp
stc
cmp
pop
jge
aas
jg
out
add
add
jg
outsl
jle
sub
sbb
sub
inc
mov
adc
add
testb
aas
orl
rcl
jg
mov
cli
je
mov
mov
mov
jge
or
pop
arpl
adc
cld
dec
arpl
push
mov
mov
das
mov
push
rorb
sbb
push
jnp
shrl
add
rolb
xor
outsl
in
and
pop
daa
out
dec
jg
inc
aam
pop
loopne
sti
movsb
in
ret
cmp
adc
and
repz
pop
inc
jg
push
enter
shlb
test
sbb
cmp
push
add
add
ja
fidivrs
mov
and
inc
push
mov
and
data16
sub
mov
dec
addr16
shlb
idiv
xchg
inc
outsb
repnz
jle
scas
lret
push
scas
hlt
mov
ret
pop
inc
xchg
mov
ss
push
mov
pop
pusha
mov
stos
in
lods
sbb
mov
pop
sbb
dec
inc
push
repnz
xchg
push
push
ljmp
repz
add
sub
and
ret
sub
lods
sbb
mov
loope
bound
adc
int
sub
mov
popa
inc
imul
cltd
in
ss
dec
sahf
inc
mov
dec
adc
pop
pusha
icebp
add
inc
pop
out
popa
jg
mov
cli
faddl
scas
sbb
lret
fwait
pop
mov
cltd
in
dec
inc
les
insl
sti
sub
and
adcl
ljmp
ss
jmp
xor
sbb
jne
sbb
and
xchg
das
push
push
sub
cmp
pop
leave
cwtl
sub
mov
les
pushl
add
mov
orl
fs
aas
clc
jmp
mov
adc
int
sbb
repnz
mov
fdivs
movsb
inc
icebp
push
mov
sub
dec
aas
shlb
xor
dec
mov
mov
inc
inc
in
xchg
sbb
push
fwait
popf
xchg
jg
push
xchg
clc
sub
cli
sahf
jbe
jae
xchg
ret
sti
nop
mov
loop
dec
outsb
popf
sbb
mov
cli
insb
add
and
cld
imul
inc
mov
dec
and
pusha
xor
cmpsl
jb
or
imul
mov
xchg
movsb
or
sub
mov
insl
pop
inc
cmp
mov
pop
cmpsb
fnstsw
sbb
add
mov
push
ljmp
jle
icebp
adc
inc
mov
xor
inc
mov
popf
push
jle,pn
aaa
xchg
mov
push
xlat
xchg
jns
add
adc
cmp
test
mov
xchg
mov
jecxz
fadd
lret
fldcw
int3
fsubrs
inc
jne
xchg
adc
adc
xchg
insl
sub
and
push
imul
push
or
lock
in
add
xchg
shl
push
aas
sbb
add
push
movsb
aaa
cmp
dec
xchg
dec
jb
movsb
mov
cmp
sbb
roll
cmpsl
pusha
mov
mov
shrl
xchg
pushf
inc
dec
xor
scas
adc
dec
sub
mov
jg
shrl
sti
adc
int
outsb
shlb
add
fistpll
adcb
sub
repz
scas
sbb
dec
test
or
xchg
fsts
mov
lret
jle
jne
mov
cmp
imul
cli
loope
fidivs
mov
lea
call
add
mov
push
adc
push
or
pop
adc
mov
shl
xor
loopne
jge
rorl
adc
xor
mov
lcall
add
sarb
xor
pop
push
les
pusha
inc
addr16
cli
push
pop
sbb
movsb
mov
xchg
test
shrb
scas
mov
xor
sti
pop
shrl
sub
dec
aaa
xchg
jl
clc
mov
stos
jnp
mov
repz
xchg
mov
iret
add
mov
sub
sbb
movsb
jmp
xchg
loope
pop
daa
jl
or
lock
inc
sbbb
loop
sub
imul
and
and
mov
mov
jno
repnz
jmp
push
das
xchg
lahf
mov
int3
lods
or
inc
sub
cmp
xchg
enter
test
scas
sub
hlt
xchg
push
mov
fcmovnb
in
stc
daa
in
and
sub
repnz
shlb
sbb
aam
test
and
and
jge
push
pop
bnd
inc
sub
xchg
mov
jmp
or
imul
jl
xor
cmp
mov
lret
cli
ret
js,pn
fs
jo
push
or
lcall
aaa
icebp
sti
and
xchg
pop
out
das
neg
fdivrs
sub
adc
fbstp
daa
lock
in
rclb
mov
lcall
mov
fdivrl
adc
pusha
notb
push
cmp
push
push
push
insl
jl
jns
pop
inc
call
pop
int3
out
popa
jg
xor
fucomip
ret
rorb
jecxz
add
and
dec
pop
adc
pop
push
dec
nop
xchg
rolb
mov
es
adc
xchg
mov
outsl
add
jle
std
mov
data16
pop
cmpsb
add
repnz
mov
cmc
mov
add
add
add
lds
add
add
add
add
xor
stos
add
add
movsl
add
add
add
add
push
add
add
add
add
add
add
add
add
add
or
iret
add
add
xchg
add
add
add
add
add
pop
addb
stos
stos
add
ja
js
js
xchg
js
add
add
add
sti
add
and
add
add
add
add
or
inc
add
adc
pop
add
add
add
add
fwait
add
add
add
scas
add
add
inc
add
add
sub
add
add
add
add
push
add
mov
push
push
jb
push
gs
add
dec
je
fs
fiaddl
sub
inc
sbb
push
pop
add
fadds
add
in
or
inc
cmp
ljmp
clc
cmp
or
or
mov
cld
jp
rcrb
xor
adc
push
insb
leave
faddl
or
xor
adc
add
enter
fdivr
inc
add
add
adc
add
adc
inc
add
xor
adc
call
push
add
add
lcall
xchg
std
cld
add
push
and
addl
cld
inc
xor
add
incl
jne
lret
xchg
dec
xor
adc
call
fists
push
add
add
sti
in
js
add
jmp
add
xor
dec
or
add
add
inc
push
insl
jb
je
js
outsl
outsl
outsb
fidivl
jo
insb
cld
imul
outsb
jns
test
gs
insl
add
imul
mov
add
insb
jns
outsl
outsl
imul
je
je
je
insb
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
ror
dec
call
jle
sbb
pop
outsb
mov
and
push
cmpl
push
in
xchg
ds
sbb
push
gs
enter
call
stc
cli
sub
mov
mov
std
fidivl
jg
or
lahf
loope
cltd
les
mov
mov
xchg
cmpsl
and
sarl
shl
and
add
add
or
roll
sub
jge
xor
mov
inc
xor
repnz
in
out
inc
adc
push
sub
jle
les
shrl
add
sbb
mov
int3
pusha
aad
add
jl
xchg
int3
pop
leave
and
inc
push
pop
pusha
daa
stos
gs
inc
sub
push
aas
cmp
mov
xchg
fbstp
stos
pushf
xchg
pop
shll
aad
lds
xchg
int
add
cmp
xchg
bound
daa
inc
jo
and
bound
push
data16
mov
or
rcr
xor
or
sti
push
loopne
or
push
sub
daa
ss
daa
or
dec
mov
lds
adc
or
cmpsb
or
insb
test
jl
jl
movsb
ret
jnp
scas
int3
mov
cmp
mov
mov
out
mov
sub
iret
xchg
pop
shl
rclb
jno
and
push
fmull
jp
or
scas
and
inc
fildll
dec
push
fs
cld
cli
xchg
cmpsb
jo
and
or
out
cmc
fwait
cli
pop
pop
pop
add
xchg
mov
inc
jge
ljmp
mov
jns
sbbl
mov
in
adc
loop
jmp
cmc
adc
mov
xchg
cli
cs
cld
cmp
sbb
sbb
mov
add
js
nop
shrl
das
push
adc
fs
lahf
insl
xchg
xchg
push
xor
roll
mov
xor
lock
mov
push
out
and
jmp
pop
enter
stc
jl
iret
movsb
adc
xchg
stos
mov
rcl
inc
xchg
pop
sub
leave
xchg
xchg
int
adc
mov
mov
js
adc
out
inc
ret
shufps
arpl
mov
inc
mov
lret
iret
or
push
lea
xchg
icebp
rorb
xchg
add
icebp
adc
lods
or
pushf
push
scas
movsb
inc
cmpsl
ljmp
dec
push
xor
clc
lret
inc
xchg
aam
cwtl
stos
jo
fcoml
inc
jns
movsl
jp
jge
mov
jp
inc
arpl
mov
pop
sub
mov
sub
xchg
sahf
ljmp
cli
sti
lods
es
cmp
inc
dec
pop
pop
sbb
or
jg
sub
jnp
or
sub
ret
dec
jae
adc
scas
addb
jg
fmuls
out
xchg
lcall
in
lods
mov
pop
or
in
dec
es
out
mov
jmp
push
adc
sbb
stos
adc
bnd
iret
mov
hlt
adc
outsb
insb
imul
cltd
clc
adc
mov
sbb
lcall
popa
inc
std
aad
add
insl
jle
pop
mov
cmp
sbb
inc
jo
or
jb
xchg
add
cli
inc
repnz
cmpsb
stc
insl
mov
in
arpl
sub
jnp
xchg
call
daa
jae
xor
xor
addl
out
lods
add
in
sti
push
push
stos
gs
push
inc
in
mov
inc
xchg
mov
loopnew
ljmp
cmp
and
mov
out
inc
mov
jecxz
mov
or
xchg
setne
push
sub
mov
es
pop
inc
sahf
push
xchg
adc
push
lret
test
outsl
arpl
imulb
test
mov
mov
inc
jb
cmp
sbb
sbbl
loope
jae
outsb
adc
push
data16
dec
cmc
inc
loop
xor
pop
outsb
pop
enter
insl
inc
mov
jp
jecxz
add
xchg
cld
scas
out
bound
sub
mov
sub
push
popa
jle
stos
lret
pop
repz
and
push
ss
int
pop
enter
fsubl
jb
add
pop
adc
cmp
adc
sbb
push
adc
mov
int3
aas
inc
mov
movsl
jge
push
pusha
jb
lods
mov
push
iret
mov
imul
dec
inc
pop
adc
int3
xchg
mov
hlt
mov
fstl
sbb
mov
lea
iret
lods
lret
adc
pop
pop
lea
les
sbb
mov
ss
movsb
cmp
test
and
popf
lahf
mov
xor
sub
in
cmc
dec
inc
ja
ss
mov
mov
mov
push
sub
divb
push
mov
mov
aad
addr16
xchg
in
mov
add
sti
addr16
pop
das
mov
out
arpl
add
jno
sub
imul
rorl
push
adc
cmp
mov
ret
ret
adc
out
addr16
jle
pop
sbb
adc
adc
xchg
cmpsb
mov
jmp
mov
adc
ret
mov
cmp
cltd
mov
lock
jmp
pop
sbb
in
je
mov
xor
mov
inc
push
leave
test
lahf
lret
in
xor
cwtl
sbb
pushl
leave
lret
pusha
adc
jb
pop
add
nop
ds
js
fisttpll
das
imul
dec
cld
fidivrs
xor
fbstp
push
fimuls
in
outsb
mov
push
out
mov
test
adc
mov
idiv
xor
imul
xor
stos
add
fucomi
out
dec
pop
mov
es
mov
movsl
ss
test
xor
repz
imul
mov
dec
or
bswap
notb
pop
mov
or
fcom
cmp
sub
jae
into
dec
add
out
fdivrp
sbb
pusha
fisttpl
aam
dec
fimull
cwtl
outsb
jge
inc
mov
jecxz
push
mov
outsb
in
icebp
jnp
rcl
pusha
sbb
fwait
imul
fidivl
cmc
push
aaa
xchg
ljmp
sub
sub
notl
daa
and
ljmp
out
fiaddl
and
cmp
ret
mov
jp
mov
xchg
push
rolb
fsubrs
or
int
dec
mov
xchg
adc
mov
sbb
mov
push
fadds
pop
bnd
mov
mov
adc
loope
mov
bound
xchg
int
mov
mov
cmp
add
ljmp
and
cmpsl
ret
inc
add
aam
ds
outsb
jns,pt
push
mov
push
xchg
push
frstor
push
insl
pop
sbb
psraw
jo
cld
icebp
lea
orb
rcrl
out
inc
out
add
insb
jmp
cld
adc
imul
sbb
popf
sti
mov
or
sti
mov
fmull
inc
repz
lahf
aam
sahf
movsb
scas
loope
and
jge
inc
outsb
fs
rcll
nop
lock
xchg
sahf
adc
nop
push
fisubrs
scas
cmp
mov
push
jbe
cmp
hlt
lds
fs
into
push
dec
cwtl
mov
mov
mov
pop
icebp
call
mov
sbb
cmc
loope
inc
enter
fdivl
pop
bsr
sbb
adc
sub
stos
push
jo
add
jns
mov
and
adc
ret
repnz
imul
xchg
push
movsl
fidivs
jp
jmp
addr16
cmp
aam
jp
aas
mov
jecxz
xchg
roll
leave
addr16
xchg
ds
and
and
mov
negl
jmp
ljmp
std
lods
or
pop
incb
mov
test
push
or
std
xchg
push
push
jbe
mov
fs
mov
inc
insb
lds
jb
cmp
mov
cmp
mov
lods
mov
lods
pop
sbb
andl
roll
lods
je
adc
sbb
loop
mov
ret
inc
movsb
pop
jecxz
dec
fs
mov
into
das
stos
hlt
mov
cmp
ret
xchg
adc
cmpsl
sbb
gs
mov
push
imul
jae
in
mov
jne
jg
insb
arpl
sbb
push
adc
daa
cli
adc
repz
jle
orl
movsb
sbb
xor
mov
cli
mov
mov
test
sbb
xchg
adc
adc
xlat
add
adc
xlat
in
mov
lds
test
aaa
outsb
cmp
sub
rcll
ret
pop
fwait
cltd
jns
adc
lcall
popa
stc
pop
mov
lret
popf
jg
sbb
push
mov
or
je
out
mov
mov
fstpl
leave
out
loopne
sbb
mov
mov
add
and
xchg
adc
or
cmp
rcrl
addr16
rorl
cmpsb
mov
movsl
push
mov
fldcw
cmpsl
cmp
xchg
pop
add
dec
fwait
pop
ss
in
mov
sahf
adc
add
pop
and
mov
mov
fiadds
or
cmp
mov
flds
ret
mov
sbb
push
xchg
js
mov
scas
les
outsl
mov
cmp
xchg
lcall
shll
push
push
mov
fcompl
xchg
fimull
aam
in
sub
xor
test
fldt
add
dec
mov
cmp
into
lock
inc
repz
mov
jp
cli
push
shll
mov
cmp
pusha
sub
jle
pop
lret
notb
call
pop
mov
pusha
adc
into
hlt
fs
xchg
mov
sahf
adc
sti
jecxz
stc
push
idivl
sbb
push
sub
inc
cmpl
dec
xlat
mov
xor
dec
sbb
sbb
cld
cmp
inc
lret
movsb
lock
fbstp
pusha
xor
inc
fs
lea
dec
imul
xor
mov
push
push
inc
shlb
pusha
data16
jne
jmp
mov
gs
lret
inc
mov
jo
outsb
rorb
mov
push
pop
add
out
lods
inc
imul
test
cmp
xor
cmp
inc
sub
outsl
cmpsb
add
sarl
cmpsl
sub
cmp
mov
cmp
mov
jmp
out
mov
mov
popa
movsb
cli
pop
push
xchg
and
lds
ret
xor
mov
ret
cmc
jne
or
jbe
cmp
and
mov
push
stos
xor
add
dec
cmp
and
in
sbb
mov
xor
sahf
out
in
mov
ret
movsl
mov
out
or
and
sti
ret
popa
dec
add
xchg
pop
movsb
push
mov
aas
repz
xor
inc
add
adc
sub
aaa
stos
mov
mov
data16
les
scas
push
sahf
or
movl
mov
test
or
out
loopne
lret
movsb
add
rcrb
call
inc
leave
repz
lret
fdiv
jecxz
jb
das
hlt
gs
repz
pop
loop
repnz
pop
pop
push
mov
fistpll
leave
jns
xchg
fimuls
sbb
push
outsl
icebp
push
xor
push
and
call
pushf
repnz
mov
icebp
out
cmp
shrl
push
jno
adc
push
xor
leave
xchg
push
loope
cmpl
jns
daa
sbb
add
xchg
dec
pop
fistpl
cmp
cmp
push
int3
inc
sub
pop
loopne
popl
push
jmp
je
icebp
pop
inc
imul
or
jle
sbb
ss
push
cmpb
hlt
sbb
test
addr16
test
or
inc
lret
mov
adc
mov
adc
xchg
jmp
int
rcrb
adc
lret
xor
out
xor
lock
cmp
mov
push
fsubrl
outsb
mov
bound
xor
aas
loop
mov
ljmp
add
mov
xchg
xorl
push
divb
fsubs
lea
push
fsubrl
mov
inc
dec
mov
sub
xchg
xchg
fnsave
xor
xor
int
icebp
rorl
es
mov
stc
push
aad
sub
cmp
imul
inc
mov
lods
lods
push
bound
xor
jb
rorl
jae
add
repnz
and
mov
ja
jl
dec
out
and
cmp
sbb
mov
lock
mov
xlat
dec
pop
cmp
adc
enter
sbb
mov
pop
push
mov
movsb
pop
lock
sub
lahf
inc
test
bswap
mov
pusha
push
xchg
mov
daa
jo
movsl
mov
cmpsb
mov
mov
add
int3
jp
sub
es
push
in
and
call
and
fstl
and
pusha
sub
add
xchg
adc
add
loopne
pusha
inc
nop
adc
out
adc
jnp
adc
inc
xchg
cli
insb
mov
mov
jl
jl
js
sbb
in
rcll
pop
sub
lcall
daa
mov
ret
imul
rolb
mov
das
std
stc
sub
loope
fnstsw
ret
push
bound
cmp
out
mov
sahf
mov
add
out
cltd
add
xchg
sub
xchg
in
adc
jb
cs
xchg
dec
pop
scas
icebp
test
pushf
pop
icebp
test
dec
ret
jp
icebp
cmp
inc
pop
pop
push
pop
and
jmp
add
dec
mov
mov
jb
lea
and
fidivl
jg
push
loope
popf
mov
in
xor
cmp
xchg
daa
int
jg
imul
movl
sbb
int3
loopne
lret
aam
or
pop
xchg
rorl
scas
mov
push
pop
mov
or
movsb
jb
add
aaa
add
mov
jnp
lahf
jg
int3
inc
das
fs
push
in
subl
mov
and
inc
aaa
inc
or
cmp
jge
data16
outsb
add
lods
dec
and
in
lahf
dec
dec
cmp
jb
das
mov
sub
arpl
mov
xor
in
aad
imulb
imul
cltd
rcrl
nop
roll
in
std
dec
sti
rol
inc
xor
cwtl
jmp
push
adc
int3
pop
dec
ror
pop
xchg
pop
call
lahf
fwait
mov
jecxz
aaa
jno
inc
fdivs
outsb
xor
insl
xor
iret
push
xorb
sbb
frstor
out
sub
test
cs
outsb
jmp
arpl
mov
testl
leave
fcmovb
dec
cmp
enter
push
cltd
jnp
cs
mov
imul
in
dec
push
fists
loopne
mov
pop
clc
cli
xor
mov
dec
pop
xchg
sub
scas
int3
jo
xor
loopne
inc
xchg
inc
ret
add
fwait
movnti
loop
sti
sbb
add
test
leave
mov
jno
aaa
enter
shr
and
pop
ljmp
sub
add
dec
fnstcw
inc
mov
jp
frstor
ljmp
lock
test
jmp
or
xchg
repz
xlat
jmp
xchg
mov
add
lods
stos
inc
call
push
sbb
jle
lahf
mov
xchg
sub
insl
out
mov
pusha
daa
int
mov
cli
fnstenv
pop
das
nop
push
pop
cld
mov
decb
push
enter
lods
clc
add
addb
push
std
xchg
das
pop
mov
inc
clc
xor
jle
xchg
push
addb
sbb
daa
mov
addr16
xchg
dec
sbb
cmp
loopne
mov
movb
cmp
mov
sub
and
repnz
movsb
xor
push
iret
nop
mov
test
sbb
test
test
mov
test
mov
or
jmp
fptan
and
movsl
mov
js
xchg
push
mov
test
xor
fcom
sbb
fisttpl
sub
cmp
adc
mov
and
lcall
imul
jnp
popa
out
pop
sti
jg
xchg
push
mov
cmp
inc
dec
mov
pop
subb
jmp
push
aad
push
fisttps
mov
xchg
lock
ficoms
sbb
pushf
cmpb
xor
dec
push
jecxz
cwtl
cmp
jle
and
dec
rcl
fstps
sbb
xor
inc
inc
dec
icebp
fnstcw
jmp
stos
sbb
int
loope
into
mov
and
mov
ds
and
pop
inc
sarl
push
and
sub
mov
or
sub
mov
daa
jp
push
mov
cmpsl
mov
int3
cmpsb
mov
fcmovbe
lods
inc
and
stos
loop
xchg
sub
call
daa
cmp
jne
mov
jmp
inc
xchg
adc
sbb
pop
leave
or
jp,pn
dec
xchg
and
mov
mov
lret
sbb
imul
cmp
xor
orl
gs
xchg
xchg
mov
add
inc
data16
mov
inc
outsl
cmpsb
shlb
int3
jp
push
nop
adc
xor
lds
inc
fmull
adc
xor
jmp
jecxz,pn
jecxz
cmp
addr16
or
lea
xchg
sbb
mov
stos
and
dec
sbb
sub
push
xor
xor
stos
lock
dec
mov
push
inc
iret
push
testl
push
mov
das
rorl
stc
xchg
mov
mov
scas
jnp
and
sbb
mov
subb
lcall
pop
loopne
sub
addl
mov
int
cli
ds
call
loope
mov
push
imul
das
pop
jl
xchg
and
add
imul
jp
xor
insb
xor
xor
add
add
add
add
pop
add
jnp
add
add
add
add
mov
add
add
add
add
add
add
sbb
add
add
add
add
add
nop
add
add
stos
rolb
add
add
add
add
adc
add
call
add
das
add
add
addb
cmp
mov
stos
stos
add
ja
mov
incl
add
or
add
push
add
outsb
add
mov
fwait
add
add
add
adc
push
imul
add
add
add
add
je
add
add
add
add
add
add
and
outsb
push
mov
add
push
jb
inc
mov
sti
dec
imul
adc
incl
mov
xchg
cmc
push
lea
adc
notb
cs
push
incl
pop
add
mov
enter
pop
dec
adc
jge
out
ret
add
push
incl
push
dec
decl
int3
inc
lea
adc
add
add
or
add
adc
es
adc
lret
jne
add
shlb
cmp
add
pop
add
cld
adc
lea
adc
push
cmp
inc
mov
rorl
mov
inc
cmp
add
add
pop
add
or
add
add
add
add
add
add
gs
gs
pop
inc
dec
je
gs
je
jo
sbb
insb
jo
mov
add
push
dec
arpl
insb
sub
add
gs
addr16
push
gs
xchg
jb
fistl
fs
imul
add
add
dec
stos
cmp
add
add
add
movsl
sub
cmc
lods
cmpl
ja
dec
nop
xchg
xor
das
dec
jnp,pt
add
rolb
mov
insb
sbb
icebp
mov
imul
dec
push
shll
dec
push
incb
aam
popa
push
nop
mov
imul
pop
test
jge
mov
jp
cmp
and
push
xchg
iret
loopne
add
insl
int
mov
xor
lods
mov
out
or
push
out
pop
aad
or
andb
sbb
jl
aaa
insl
push
pop
pop
push
mov
add
insl
popf
jne
pop
jae
call
jb
movsb
pusha
mov
into
sbb
out
xor
lods
fcomps
lea
pop
lea
in
fwait
cmp
mov
dec
ljmp
push
xchg
pmuludq
mov
sbb
js
pop
pop
xchg
adc
mov
fwait
rcrb
ret
jne
inc
test
fsubr
push
xor
insl
cwtl
in
dec
loop
mov
nop
insl
sbb
pop
out
jb
enter
push
jl
mov
or
das
cmpsl
xor
jns
inc
xor
pop
inc
pop
dec
in
xor
fcmovnu
rorb
insb
mov
jns
mov
mov
jo
scas
cmp
fbld
push
mov
sub
pop
adc
ja
shr
jl
sbb
adc
xchg
mov
loope
cmp
pop
cmp
loop
in
xchg
pop
sbb
movsl
xchg
loopne
and
sbb
icebp
inc
xorl
cmpsb
mov
std
lock
mov
negl
mov
or
pop
gs
lret
mov
sti
imull
cmpsb
pusha
std
mov
subl
and
or
jnp
cmp
ss
repz
inc
pushf
addb
xor
stc
aad
decb
adc
push
cmp
mov
jns
dec
and
lods
inc
pushf
mov
sub
ret
sub
add
and
adc
pop
mov
and
sbb
outsl
gs
fxch
cmp
inc
mov
pop
call
in
cmpsb
pop
je
out
add
xchg
xchg
mov
and
dec
jmp
aad
repz
sbb
shrl
xlat
adc
sti
lret
sub
and
add
pusha
xor
add
jnp
pushf
sti
adc
push
jb
faddl
pop
xor
push
dec
pushl
adc
mov
leave
hlt
cmpl
cmc
pop
ss
js
lret
mov
test
inc
mov
iret
jecxz
xchg
lret
xor
and
fisttpl
arpl
mov
push
jno
xchg
mov
jg
ficompl
and
jmp
addr16
es
sbb
push
imull
mov
or
sbb
xor
or
aaa
mov
dec
xor
repz
mov
mov
inc
daa
add
pop
aas
mov
imul
into
fistpl
xchg
aaa
cli
lret
push
mov
ljmp
pop
jnp
inc
aaa
lret
leave
aam
es
push
cmp
lsl
sbb
sub
sub
pop
adc
or
jo
and
pop
fidivrl
sub
jo
dec
add
std
fstpt
aas
test
pusha
je
sub
pop
rcrl
ror
or
movsb
ljmp
jg
cli
loopne
cmpsb
icebp
mov
push
push
xchg
inc
outsb
pushf
psadbw
mov
in
add
add
lock
xchg
lret
mov
sub
inc
adc
repnz
xchg
int3
mov
dec
mov
mov
mov
mov
sub
adc
addb
xchg
or
fwait
cmp
ss
mov
lods
cmc
inc
mov
repnz
jnp
pop
bnd
mov
mov
adc
cmpsl
fwait
pop
lahf
push
aam
mov
push
dec
jge
out
int
xchg
loop
stos
adc
arpl
in
cmp
mov
lods
inc
add
pop
pop
mov
dec
xchg
orl
data16
adc
rcl
inc
pop
insb
add
sub
hlt
sarl
inc
mov
adcb
push
or
fisubrs
testb
je
jle
iret
in
xlat
pop
cld
mov
test
sub
inc
rclb
iret
push
scas
aas
dec
movsl
or
mov
sahf
sbb
lea
test
lock
imul
mov
dec
daa
lods
mov
inc
dec
push
sbbb
int3
gs
and
psrad
mov
in
dec
mov
cmp
pmullw
loope
cs
dec
or
inc
ja
les
add
mov
jb
ss
arpl
iret
mov
ret
aaa
sbb
mov
out
sub
jecxz
stos
lret
cmpsb
add
xchg
mov
mov
mov
sti
loop
push
cmpsl
outsb
sbb
sub
xchg
sbbl
cmc
out
clc
adc
add
fs
sbb
mov
pop
ljmp
out
add
pop
push
pop
push
fists
adc
mov
mov
into
repz
dec
clc
push
lret
pop
push
out
insl
cltd
roll
packssdw
pop
pop
mov
out
jmp
lods
test
or
cltd
pop
je
jnp
fcmovnbe
mov
fldenv
mov
movsb
mov
add
pop
lahf
shll
cmpb
sub
loopne
mov
or
repz
loope
inc
xor
es
push
inc
pop
adc
dec
add
push
jp
dec
cwtl
ja
mov
push
cs
cmp
fldcw
and
lods
inc
pop
fcoms
push
xchg
mov
inc
fists
dec
pop
dec
aam
cld
cmp
and
jo
ds
dec
repz
add
fisttpll
xchg
rolb
insl
loop
sub
or
lret
fcmovb
in
sub
jb
ficomps
inc
cld
jmp
xor
leave
fidivrs
pop
pushf
cld
sbb
mov
mov
test
ret
or
int3
outsl
jl
test
push
loopne
sub
cmpsb
add
lahf
into
cmp
jge
inc
mov
test
pop
xchg
into
inc
cmp
outsl
inc
mov
cmp
xlat
jne
mov
and
pop
mov
jns
jmp
xchg
les
fs
dec
push
iret
cmp
mov
xor
cld
test
jbe
ret
cld
loop
das
in
lods
fcmovbe
inc
movsl
jne
add
enter
jo
jno
es
les
arpl
lret
sbb
jo
pusha
cmpsl
adc
cmp
mov
mov
or
xchg
xchg
dec
pusha
mov
scas
int3
pusha
and
pushf
cli
ds
sub
stc
sbb
push
cli
fstl
jo
test
fdivrp
xorl
push
mov
jne
pop
sbb
addr16
sbb
mov
dec
cmpsb
fstps
cmp
rcrl
bound
mov
pop
adc
fsub
push
mov
adc
xor
jp
in
addr16
call
movsl
cmpsb
scas
ds
mov
rolb
cld
pop
and
daa
pushf
cmp
push
xor
and
outsl
stc
call
mov
and
push
push
in
sbb
nop
mov
inc
aad
gs
leave
dec
pop
out
pusha
repnz
add
fs
shll
adc
es
movsb
push
push
inc
clc
adc
out
fnstcw
out
inc
mov
or
mov
fiaddl
xchg
iret
mov
adc
mov
lock
lahf
daa
mov
push
sahf
inc
fidivs
mov
notl
mov
push
or
sub
push
repz
sbb
jno
xor
repnz
inc
sbb
adc
mov
sub
adc
pop
sub
test
in
testb
test
mov
out
xchg
xchg
arpl
mov
shrl
cmp
xchg
add
cmp
cmc
outsl
imul
pop
xchg
pop
aam
icebp
xor
mov
sbb
lds
daa
std
dec
into
std
adc
aas
mov
lods
cmp
into
or
repz
pop
or
into
cmc
leave
bound
popf
xor
mov
cmpsb
push
adc
mov
in
jg
insb
pop
add
jns
dec
int
arpl
cli
jne
out
sub
adc
das
popa
fwait
cmpsb
adc
mov
cmp
stos
enter
pop
fistl
sbb
loope
aad
jp
push
ficoms
jno
and
xchg
mov
mov
jne
test
ss
mov
and
push
xchg
push
mov
imul
sbb
test
jno
sub
mov
sti
cli
data16
push
outsb
sahf
sbb
push
scas
cmp
xlat
cmp
cmp
cmp
or
mov
mov
xchg
ret
jbe
enter
decl
out
loopne
ds
push
xchg
lock
jmp
pop
pushf
lds
inc
inc
fs
or
in
cmp
test
ret
aaa
jb
sbb
xchg
xor
pop
and
repnz
mov
aaa
cwtl
sub
sbb
in
dec
jnp
or
dec
xchg
js
in
mov
hlt
pusha
mov
inc
stos
ret
call
add
pushf
xchg
das
cli
shlb
or
push
outsl
pop
stc
cmp
imul
mov
or
pop
dec
out
mov
jbe
push
leave
inc
xor
fistl
scas
jo
call
xchg
data16
jmp
jns
cmpsb
test
xchg
mov
call
enter
lret
jp
fnstsw
pop
xchg
pusha
into
sub
adc
imul
call
adc
dec
mov
mov
adc
cmc
idiv
jno
xchg
cmp
cmp
stc
jge
add
xchg
mov
lahf
add
jb
xor
aam
stos
fildl
hlt
push
fwait
push
cmp
daa
pushf
sub
jns
fbstp
lds
imul
jmp
dec
mov
mov
lods
mov
mull
cld
push
dec
sub
jne
cmp
stos
xchg
test
clc
cmpb
sbb
pusha
in
pushf
adc
sbb
push
aaa
xor
lds
jb
cmc
cli
aad
addl
xchg
xor
or
push
add
xchg
adc
push
adc
dec
adc
jo
push
fs
lods
inc
xor
add
mov
xlat
xchg
int
movsl
xchg
jns
xchg
add
addl
sub
mov
into
out
and
xchg
ficompl
inc
cmpsl
add
mov
mov
mov
and
lret
pop
test
lea
lret
ljmp
imul
cmp
add
push
je
mov
ja
ror
loopne
adcl
adc
and
push
add
jge
xchg
cmp
mov
into
mov
cmp
cld
xchg
xchg
push
incl
fdiv
mov
test
addr16
push
adc
shll
sahf
or
xor
scas
insl
iret
mov
ljmp
add
jle
stos
sbb
lcall
in
xchg
push
inc
push
or
arpl
sub
test
sahf
jecxz
sub
cltd
add
hlt
orl
fs
arpl
adc
pop
in
cmp
shlb
testl
cli
roll
jnp
stc
jmp
sub
cltd
int
ljmp
lods
in
cmp
sub
push
fwait
cmp
adc
fnstsw
sti
inc
mov
mov
dec
and
inc
pop
daa
cmp
test
sub
cli
ret
pop
loopne
xor
jb
loop
push
xchg
mov
or
push
hlt
cmp
paddb
lret
push
sbb
xor
inc
dec
cmp
cmpb
div
icebp
rolb
and
inc
adc
push
pop
xor
filds
hlt
icebp
mov
push
pop
dec
inc
fisubrl
cmp
cmp
outsb
nop
scas
das
sbb
ret
and
dec
cli
sub
idivl
fdivs
inc
cs
lcall
cmc
pusha
repz
jmp
sub
inc
push
pushf
pop
mov
int
and
cmp
mov
cmp
enter
test
iret
jmp
mov
pop
jmp
inc
xor
testl
xlat
add
das
sbb
sbb
pop
mov
nopl
pop
fcmovnb
inc
add
in
fmull
and
cmp
xorl
movsl
inc
jae
ret
mov
or
dec
adc
scas
cmpb
jno
jge
jmp
scas
addl
xchg
jae
stos
aas
mov
xchg
fs
ret
rclb
insl
adcl
push
mov
bound
pushl
js
mov
inc
outsb
and
es
sahf
adc
inc
roll
sbb
or
jbe
out
popfw
nop
ret
adcl
push
rorb
cmp
dec
gs
pop
jb
and
ret
inc
out
sub
lcall
aas
xlat
into
in
jmp
mov
ret
into
pop
add
int
popa
mov
push
push
mov
ljmp
jmp
jl
mov
jo
iret
jns
out
in
jnp
into
lea
hlt
add
in
push
aam
cmp
xor
inc
sub
push
xchg
xchg
mov
enter
repnz
or
enter
push
mov
leave
xchg
sbb
mov
arpl
xlat
push
mov
mov
mov
repnz
mov
scas
shrb
sbb
idiv
xorb
mov
out
push
cs
jo
jmp
es
out
nop
cmpl
pop
enter
in
mull
in
mov
pushf
out
pop
out
imull
and
addr16
jae
fistl
dec
xchg
push
pushf
inc
xor
or
jne
cs
popa
and
push
arpl
adc
outsb
test
in
ss
cmc
xchg
fldt
ljmp
push
hlt
inc
cmpl
jmp
push
xchg
daa
pop
ret
ret
nop
jnp
jmp
mov
add
call
lahf
adc
or
jmp
addb
ret
inc
fisubrl
std
mov
add
mov
add
dec
mov
jno
inc
ja
sbb
adc
mov
stos
hlt
xor
and
int
iret
sbb
mov
ret
or
addb
fsubrs
jl
clc
push
dec
inc
es
test
cmp
std
jmp
iret
jbe
hlt
push
cmp
pop
dec
das
sub
mov
neg
sub
shrb
inc
mov
movsb
push
mov
call
pop
mov
mov
les
sub
clc
lcall
adc
jl
pop
psubusw
in
mov
movsl
popa
pop
xchg
mov
ljmp
cltd
nop
bound
mov
cmp
enter
fsubrl
xchg
into
out
lock
pushf
jl
inc
mov
jbe
adc
and
mov
fimull
scas
test
loop
lods
pop
sbbb
sbb
mov
mov
decl
add
dec
mov
add
mov
add
xor
inc
and
pop
fcompp
or
mov
or
jbe
sub
movsb
jbe
mov
mov
stos
dec
cmpsl
pop
es
pop
jb
sub
or
shll
xchg
cmp
in
push
nop
fwait
divb
test
cmp
int
mov
les
lret
add
imul
pop
imul
mov
popa
fiadds
push
push
pop
push
fisubs
jmp
inc
lret
dec
jp
mov
pushf
fidivs
hlt
add
or
ret
pop
cmc
in
jge
cmpsb
jge
int
xor
fidivrl
jl
mov
jae
fildl
rclb
repz
ror
mov
push
loop
push
or
ss
or
or
push
movl
in
add
or
sbb
xchg
pop
movsl
sbbb
xor
out
jae
sbb
clc
fsubs
stos
cmp
hlt
outsl
and
lds
in
add
movsb
enter
adc
lea
jne
and
cmp
cs
fsubs
std
int3
add
ret
mov
cmpsb
push
push
jae
in
jl
sub
jno
xchg
sub
push
cmp
lods
xor
mov
jb
push
mov
push
fmuls
and
inc
or
and
roll
lret
mov
dec
and
xchg
fnstenv
popf
cmpl
add
dec
push
into
xchg
and
push
push
and
test
cwtl
ret
aas
xchg
shlb
ret
mov
add
pushf
fs
inc
repnz
jecxz
mov
and
and
pushf
lret
in
mov
mov
dec
xorl
xor
fstpt
in
sub
jnp
mov
in
sahf
push
jecxz
adc
imul
xchg
mov
outsb
push
inc
mov
bound
mov
shlb
jg
push
je
pop
xor
fs
mov
sub
xchg
xor
mov
dec
sbb
sub
jns
and
movsb
jnp
cmp
ficompl
sar
subb
lret
shrl
int
jg
cmp
xor
adc
lahf
and
xchg
sbb
loope
adc
test
xor
repnz
sub
push
addl
push
or
and
jmp
push
xchg
daa
fdivl
pop
xor
jbe
fildl
add
sbb
fdivl
cli
fwait
aam
or
mov
insl
lret
add
mov
dec
mov
inc
jne
jns
cmp
jns
inc
jg
xchg
in
shrb
push
mov
sbbl
mov
xchg
insl
ljmp
adc
adc
xchg
addr16
jmp
dec
push
lods
push
inc
movsl
or
mov
xor
inc
xchg
stc
cmp
aam
fcmove
nop
xchg
push
xchg
repnz
xor
aam
sahf
mov
sub
pop
dec
fs
fstps
sub
jo
outsb
popa
mov
lds
outsb
jl
mov
clc
dec
int
jmp
add
dec
xchg
or
es
bound
add
add
or
daa
push
ficomps
push
or
jecxz
inc
sbb
rcll
mov
jecxz
ret
fs
daa
fldenv
jle
sbb
iret
jge
or
cmp
test
add
cld
loope
or
jae
or
inc
xor
dec
add
mov
bound
add
add
sbb
add
add
add
out
lret
pop
pop
rolb
add
ja
mov
pushl
dec
add
add
dec
jmp
add
add
add
add
add
add
mov
add
add
add
add
insb
add
add
add
add
add
add
sub
clc
add
add
xchg
popa
popa
and
ja
jae
inc
jae
dec
mov
ja
mov
inc
add
xor
add
leave
jmp
fcmovnb
inc
adc
xor
push
push
mov
pop
mov
sub
test
test
call
xchg
leave
andl
addb
or
repz
push
decl
call
jg
inc
push
js
jge
push
push
add
add
inc
call
adc
adc
je
push
pushl
rorb
push
and
call
incl
div
push
add
push
add
test
inc
inc
lea
clc
enter
inc
clc
adc
push
add
add
inc
add
adc
add
insb
add
add
add
and
add
add
add
push
add
add
add
inc
inc
add
outsb
gs
adc
push
popa
mov
popa
je
inc
outsb
gs
inc
dec
shlb
ss
gs
add
popa
dec
insb
imul
gs
gs
add
inc
outsl
jb
xor
jb
push
inc
add
add
pusha
add
addl
nop
add
adc
mov
les
in
pop
ret
outsl
out
rorb
mov
lock
sbb
aaa
int3
enter
jns
push
push
ret
aad
aaa
aam
or
scas
pusha
add
and
add
lcall
cmp
test
icebp
sub
mov
sbb
mov
subb
cmp
aad
sti
repz
andl
out
inc
call
cmp
xor
mov
imul
xor
enter
int
out
sbb
shlw
cmp
out
sbb
add
dec
mov
fnstenv
in
xchg
push
and
jns
arpl
dec
inc
jecxz
aaa
mov
pop
shrb
adc
push
in
lods
in
sub
cwtl
dec
bound
xchg
mov
test
addr16
cmp
inc
inc
push
movsb
push
mov
nop
cmpsb
mov
outsl
int
pop
add
outsb
nop
out
arpl
inc
push
insb
or
xchg
imul
dec
loope
add
out
pop
int3
push
mov
inc
sbb
test
sub
sub
call
mov
daa
push
in
dec
leave
pop
jge
popa
fs
jle
arpl
ds
sub
sbb
gs
loopne
sub
ret
and
stos
imul
sahf
mov
xor
mov
bound
mov
shll
mov
cmpsb
dec
mov
lock
cld
popf
add
repnz
punpcklwd
pop
loopne
push
xchg
pushf
mov
xor
jb
push
fiadds
xlat
arpl
push
fsubp
xor
mov
arpl
sub
mov
xchg
or
and
test
dec
out
addr16
adc
fldl
xchg
ret
imul
addl
inc
popf
xlat
stos
adc
xchg
into
aam
xchg
aad
jne
sub
and
push
jle
icebp
adc
filds
icebp
sub
pop
rclb
sub
mov
or
call
lock
ret
fmuls
lods
addb
mov
enter
cwtl
push
out
fwait
iret
xchg
jnp
sbb
mov
rorb
ret
scas
popa
clc
ret
xorb
or
sub
jge
jle
inc
push
das
aam
ret
and
push
mov
push
cmp
sub
cs
xchg
cltd
or
fisubrl
test
inc
xchg
mov
aam
dec
stos
test
mov
js
rorl
mov
sbb
jno
jno
pop
xor
data16
aas
scas
dec
adc
xchg
leave
push
cmc
adc
dec
and
inc
mov
movsb
mov
or
cli
push
jno
mov
xchg
xchg
mov
mov
shrb
out
jge
xchg
sub
inc
pop
ja
xchg
mov
xor
shlb
xchg
jmp
adc
jmp
pop
mov
xor
shll
xor
jmp
adc
mov
mov
xor
sub
movsl
ror
cmp
xor
arpl
xchg
add
jecxz
adc
and
push
push
mov
sbb
into
mov
cwtl
cmp
pop
mov
call
inc
cmp
pushf
fwait
test
or
incb
fs
inc
inc
xor
icebp
xchg
cmp
jne
test
push
jmp
sbb
xor
out
test
jne
lea
and
mov
stos
cmp
shl
xor
push
add
ret
mov
dec
sahf
and
into
ror
xor
jns
nop
jp
enter
stc
sbbb
jbe
testl
mov
aad
sub
push
repz
lds
and
sub
cmp
lret
sub
push
xchg
or
inc
scas
lret
dec
outsl
mov
mov
and
mov
int
jmp
jle
and
idivb
fwait
lea
dec
dec
sbb
mov
add
pop
cmpsl
jbe
gs
aad
jo
rorb
insl
pop
add
inc
mov
dec
pop
or
inc
inc
inc
jnp
and
cmp
addr16
nop
repnz
cmp
lods
mov
ljmp
test
push
pop
lds
fs
stos
pop
jbe
es
shl
mov
inc
leave
fdivrs
nop
inc
daa
loopne
adc
frstor
sub
add
pop
mov
ds
pop
mov
xchg
or
xchg
dec
cmpb
pop
popf
lret
addr16
lds
cmp
and
xor
add
jbe
jnp
imul
sub
decb
testl
fsubs
xor
pop
sahf
sahf
gs
push
xchg
cmp
ds
mov
jge
mov
sub
shr
stos
sbb
xchg
or
pop
js
icebp
scas
dec
cmp
lahf
xchg
jno
lcall
rolb
adc
leave
imul
pop
jecxz
stos
jne
movsl
lea
add
xchg
arpl
dec
or
mov
stos
les
mov
pop
jne
and
xor
sub
iret
pop
cmp
outsl
adc
fisttpl
rcr
xlat
fwait
mov
mov
das
mov
cmp
push
mov
es
lcall
mov
sbb
dec
lods
iret
repnz
cli
popa
jno
mov
pavgb
adc
mov
mov
hlt
xor
xchg
stos
sub
pop
mov
jmp
jg
bound
aaa
mov
pop
xor
mov
popl
movsb
ret
dec
sub
inc
lret
scas
bound
adc
or
in
test
inc
in
gs
loop
xor
lock
lock
or
lods
mov
scas
stos
enterw
arpl
push
and
jnp
adc
mov
mov
sub
std
stos
iret
jl
cmc
sbb
dec
bound
push
dec
subl
and
xlat
lds
sbb
mov
xchg
mov
or
mov
pop
repnz
xchg
mov
or
dec
pop
out
es
lock
cld
inc
stos
mov
fisttpll
mov
je
mov
lret
pushl
xchg
jge
lret
in
sbb
out
pop
dec
xlat
jl
pop
or
mov
dec
cmpsb
sti
clc
loopne
lahf
sub
sbb
or
push
call
add
dec
in
adc
add
fxch
xor
mov
push
add
lock
cmc
mov
dec
mov
movl
fxch
outsl
in
sub
out
xor
rorb
mov
sub
add
stos
cmc
mov
je
push
cltd
jb
add
inc
lret
xchg
sub
and
jbe,pt
test
out
and
test
push
push
pushl
pop
dec
inc
sub
lods
ret
jle
xor
dec
insb
fs
or
push
dec
pop
xchg
test
pop
ret
scas
inc
ret
pushl
xor
sahf
lret
add
jp
out
enter
sub
in
test
xchg
sbb
mov
mov
xchg
fcmovu
dec
lds
int
and
out
xchg
dec
mov
pop
push
ret
pop
jne
cli
pop
outsb
adc
jno
push
sub
fistl
dec
or
dec
adc
mov
xchg
les
insl
mov
push
fs
inc
xchg
clc
out
jmp
dec
in
xor
cltd
int3
and
dec
gs
shll
scas
test
mov
pop
jg
inc
push
mov
mov
mov
dec
cmc
sbb
int
popa
cmp
pop
outsb
outsb
dec
insl
xchg
jg
pop
std
cmp
popf
xchg
pop
push
mov
test
imul
push
sbb
mov
jbe
xor
stos
sbb
mov
and
and
out
xor
sub
xchg
test
cmp
sbb
mov
sahf
mov
subl
jae
mov
imul
int3
pop
movb
sbb
cmp
mov
gs
out
sub
ficompl
int
or
dec
jecxz
les
lods
testl
dec
dec
jecxz
aas
dec
sbb
std
push
mov
mov
adc
popf
and
mov
push
jp
stos
addb
adcl
xorl
idivl
adc
inc
jae
xor
bound
pushf
lret
dec
cs
cmp
inc
pusha
adc
mov
pop
sbb
mov
cld
in
pop
stos
push
inc
out
xchg
arpl
js
loopne
mov
lods
test
fidivs
pushf
dec
fcmovu
push
xchg
lcall
push
adc
out
or
ja
icebp
rcll
mov
xor
sub
or
mov
cwtl
in
cmp
xor
pop
inc
jmp
ljmp
cmpsl
adc
sub
xorl
mov
or
jns
push
dec
js
int
cmp
sti
adc
mov
stc
and
or
shll
xorl
jno
jl
mov
pusha
stos
sub
je
cmp
xchg
dec
sub
mov
and
xor
cmc
icebp
and
mov
sbb
addr16
scas
js
ret
ljmp
jb
cmp
call
int
aad
in
adc
faddl
pushf
leave
mov
stc
pusha
pop
ds
inc
movsl
in
sub
inc
push
xchg
fsubrs
jge
shrb
aad
push
int
or
addb
imul
sbb
ss
xchg
mov
jg
outsl
cwtl
push
sub
insb
sbb
jbe
inc
or
repz
out
mov
adc
test
cmpsl
inc
insb
fdivr
adc
push
add
push
xchg
sbb
arpl
inc
xchg
adc
jmp
aaa
leave
cltd
push
enter
leave
and
xchg
movsb
push
mov
and
adc
in
outsb
incl
pushf
mov
and
adc
adc
push
repnz
rcll
xchg
dec
jecxz
in
mov
or
xchg
jno
push
andb
xchg
jne
lea
es
aas
adc
movsb
adc
push
bound
xchg
xor
lds
loopne
inc
jo
cmp
xor
mov
push
bound
pop
jmp
movsb
sub
mov
push
filds
test
loopne
lcall
inc
repz
jmp
inc
xchg
cmp
jnp
scas
xor
popf
pop
aas
xor
movl
mov
adc
ss
cwtl
sbb
fs
add
dec
mov
xor
sub
pop
or
push
imul
mov
cmp
in
test
inc
out
mov
adc
mov
scas
jle
and
sarb
push
add
push
inc
cmp
addb
jge
adc
outsb
pop
je
lahf
fnsave
ret
leave
dec
cltd
insb
xor
inc
mov
sti
adc
insl
ja
jl
adc
ja
ljmp
adc
inc
jp
ret
dec
aad
leave
add
inc
or
int3
inc
bound
aad
xchg
and
movsb
cli
ss
rclb
shlb
dec
dec
imul
push
pop
pop
sub
cs
dec
int3
pop
mov
mov
inc
mov
pop
dec
pop
iret
aad
jge
nop
inc
mov
mov
enter
xchg
jb
sub
push
sub
insl
aam
dec
in
cmp
outsb
or
dec
or
push
sub
into
mull
add
icebp
cmc
clc
mov
xor
pop
inc
xchg
xor
cmp
ja
repz
adc
mov
rclb
push
ret
mov
or
sub
push
rorb
out
int
xchg
cli
push
arpl
addr16
int
outsl
pop
or
push
int3
jl
and
and
lods
test
cmp
push
es
daa
sbb
fistpl
ffree
lret
das
dec
mov
pop
bound
and
imul
aas
xchg
popa
add
rolb
xchg
mov
xor
push
xchg
xor
loopne
ret
fsubrp
push
xchg
xor
push
lret
add
add
call
add
inc
incb
lret
pop
push
sbb
fwait
nop
popa
testl
and
push
pop
mov
shll
cmpsb
push
sub
pop
jmp
js
into
mov
dec
sti
pop
mov
dec
loop
adc
mov
mov
cmp
dec
sub
jg
test
xor
push
mov
sar
xchg
call
out
adc
push
sti
andb
xchg
cwtl
in
aad
pop
push
dec
adc
negb
pop
fildl
lcall
inc
and
lea
enter
mov
sub
push
adc
xor
dec
xchg
ffreep
add
mov
pop
int
or
in
das
sbb
adc
add
pushf
test
adc
adc
xor
lods
ja
sahf
das
mov
dec
cmp
sub
mov
push
pop
cmp
shlb
outsl
enter
mov
movsl
jns
add
aam
ret
into
cmp
lahf
stos
aam
rclb
mov
push
or
fisubrs
jbe
add
xor
sub
incl
dec
lock
jbe
data16
xchg
or
arpl
scas
lea
dec
stos
push
cmpsb
push
inc
jp
in
xchg
in
lock
dec
sub
mov
pop
and
out
in
or
arpl
lret
sti
add
js
loopne
loopne
inc
jle
cs
repz
sbb
xor
sti
je
out
xor
cmp
pop
sub
xchg
cmp
mov
inc
rolb
add
push
lods
pop
add
dec
fst
fildll
lea
scas
stos
cmpsl
in
xchg
sbb
rcrl
xchg
mov
fwait
imul
mov
mov
adc
inc
dec
dec
pop
sbb
mov
add
dec
jp
popa
fdivrs
mov
jo
pop
scas
sahf
push
push
nop
or
push
jae
dec
leave
scas
mov
lock
jo
xor
pop
outsb
mov
jg
call
ret
inc
and
xchg
xlat
std
nop
rcr
sbb
stos
leave
push
xchg
and
test
jecxz
adc
and
cmp
dec
xor
js
mov
jno
leave
jg
fwait
xor
imul
adc
decl
inc
sub
push
dec
mov
ffreep
shr
loop
sub
dec
in
ja
xor
insl
xchg
jp
arpl
jne
jmp
lods
push
push
outsl
push
jb
push
sub
out
movsb
ds
dec
sub
sbbl
lret
daa
lock
in
mov
mov
cs
sti
inc
imull
jns
imul
cmc
cmp
pop
rol
pop
mov
hlt
lock
cmp
adc
cli
sub
sbb
outsb
cwtl
sbb
inc
lods
or
dec
push
inc
push
dec
pop
rclb
xchg
shll
leave
pop
mov
cmpb
cmc
stc
xor
xchg
jmp
out
fldcw
xchg
push
daa
pop
add
sub
das
mov
out
test
ja
sbb
xor
into
jl
sbbb
xlat
sub
and
cld
sbb
mov
gs
imul
mov
fbstp
xor
clc
xchg
insb
cmp
sbb
iret
cmc
movsb
in
jmp
mov
pop
js
sub
cmp
loope
and
out
xchg
repz
mov
push
mov
cmp
sub
push
sbbb
sub
mov
mov
jae
inc
out
or
imul
stc
mov
cmp
out
pop
std
cmp
push
stos
inc
cmp
stc
je
cmp
lret
mov
mov
lods
mov
jmp
jge
push
nop
bound
test
fs
pop
push
into
test
popa
das
adc
jno
sub
je
ss
push
les
mov
ljmp
mov
mov
xchg
xchg
fsts
xor
lcall
cmp
jecxz
jno
in
ds
scas
xchg
inc
sbb
test
mov
jg
testb
lcall
sub
inc
clc
add
cmpsl
out
cwtl
or
je
and
inc
gs
repz
mov
mov
je
cmp
xchg
push
inc
sub
mov
jg
sub
repnz
jo
js
cmp
test
xchg
jecxz
test
cld
lcall
mov
ds
sub
fsubrl
lret
push
hlt
or
push
xor
cmp
sub
pop
cmp
cmpsl
cs
cmpsb
xlat
pop
lret
orl
pop
iret
and
dec
push
mov
aad
stc
cmp
icebp
mov
rclb
xorl
fadds
push
push
xchg
rcrl
repnz
xchg
dec
lock
inc
jecxz,pn
push
xor
das
flds
nop
jmp
arpl
bound
test
pop
and
cli
jae
jg
data16
loop
mov
mov
jne
lret
adc
test
xlat
mov
cwtl
push
in
xchg
ror
jge
push
shrl
sti
push
js
into
adc
cmc
testl
mov
mov
add
cmpsb
sub
outsb
addr16
cli
movsl
inc
std
jle
ret
lds
jns
cmpsb
insl
in
pop
sbb
sbb
in
das
out
or
pop
jp
pop
iret
cmp
roll
test
daa
mov
imul
sbb
data16
addr16
scas
and
sbb
cmpsb
xor
and
pop
fnsave
pushf
dec
inc
inc
inc
movsl
fistpl
test
mov
jmp
hlt
fwait
or
outsl
outsl
pusha
mov
adc
and
lods
jmp
xor
in
ljmp
xor
jb
ja
out
insl
adc
mov
mov
jmp
mov
and
xchg
mov
iret
sbbb
sub
and
inc
xlat
add
mov
fimuls
adc
jl
mov
jg
in
aas
imul
rolb
adc
shll
jbe
or
xchg
xor
int3
mov
fcmovnb
sub
mov
sub
xchg
mov
daa
sbb
fstpl
shll
xor
xchg
sbb
movsb
lcall
push
add
aam
popf
push
adc
inc
jp
es
jbe
fdivrl
out
les
xchg
adc
sub
push
xchg
pop
xor
call
icebp
jge
mov
sub
scas
popa
loope
jne
movl
fdivl
jne
js
xchg
cmpsb
loop
repnz
xchg
hlt
add
jnp
mov
stc
add
nop
add
adc
mov
add
mov
add
add
and
add
add
add
add
add
add
add
push
add
rorl
add
add
sbb
add
xor
sbb
in
add
add
add
add
stos
fiaddl
add
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rcl
add
cld
aad
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
mov
add
test
add
jl
add
je
add
insb
add
fs
add
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
int3
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
xlat
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
xlat
add
cld
xlat
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
fadds
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
fadds
add
add
push
fadds
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rcr
add
flds
add
fiaddl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fiaddl
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
fiaddl
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
fildl
add
add
nop
fildl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
fildl
add
fildl
add
fildl
add
add
or
add
adc
add
daa
faddl
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
faddl
add
add
pop
faddl
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
