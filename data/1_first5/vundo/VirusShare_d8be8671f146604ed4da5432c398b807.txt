rol
and
rol
sub
mov
jmp
aaa
inc
xor
xor
mov
jmp
test
je
mov
add
cmpl
je
jmp
mov
mov
mov
movb
movb
jmp
add
add
add
push
jmp
add
add
jmp
shl
mov
mov
push
lea
mov
mov
mov
add
mov
jmp
push
jmp
subl
push
push
jmp
push
call
int3
xorl
jmp
xchg
lcall
out
sub
mov
sub
jmp
jne
push
jmp
push
addl
jmp
jne
mov
sub
dec
rol
shr
mov
mov
xor
and
cmp
sete
mov
ret
add
add
add
add
push
mov
jmp
call
mov
or
and
add
add
or
mov
movzwl
movzwl
add
shr
add
sub
mov
jmp
cmpl
lea
je
push
push
add
add
add
mov
sub
shr
jmp
cmp
je
sub
xor
shl
mov
jmp
mov
adc
pop
and
movb
call
cmp
push
jae
call
jmp
inc
lods
pop
mov
movb
call
test
je
jmp
lea
test
jne
xor
xor
dec
mov
jmp
push
jmp
nop
call
call
dec
subl
push
jmp
jmp
call
push
inc
push
call
addl
call
push
jmp
nop
push
int3
int3
jmp
call
call
xorl
call
lea
jmp
lea
cmp
je
xor
ret
shr
mov
pop
ret
add
add
add
inc
ror
mov
add
sub
test
jne
xor
rol
mov
xor
mov
jmp
mov
add
jne
add
ret
mov
jmp
add
push
and
mov
sub
test
jmp
or
pop
jne
push
jmp
push
call
call
ret
pop
push
push
subl
call
shl
or
shl
mov
and
mov
push
push
mov
mov
mov
jmp
shr
ror
mov
sub
mov
sub
mov
push
push
push
push
jmp
nop
jmp
push
xorl
jmp
mov
movb
mov
jmp
add
add
mov
jmp
leave
mov
push
mov
mov
jmp
rorb
test
decl
decl
pushl
add
movl
movl
call
lea
addl
call
mov
rol
sub
dec
or
add
mov
jmp
sub
test
jne
dec
and
mov
movzbl
add
jmp
ror
xor
rol
mov
jmp
pushl
jmp
movzbl
add
mov
lea
inc
add
xor
add
or
mov
jmp
test
jne
movzbl
add
mov
lea
xor
sub
mov
shr
and
jmp
mov
mov
movl
jle
jmp
and
add
sar
test
jmp
add
add
add
cmpsl
add
add
and
jmp
add
add
mov
jmp
mov
lea
or
dec
mov
shr
jmp
test
jmp
lea
nop
movzwl
xor
and
mov
and
cmp
jmp
mov
ror
mov
lea
sub
xor
ror
mov
jmp
inc
mov
shr
and
jmp
add
add
pop
and
ror
rol
or
or
mov
jmp
test
je
push
push
mov
jmp
lea
sub
test
mov
jmp
mov
mov
mov
sub
or
mov
sub
jmp
ret
add
sub
mov
shr
mov
shr
lea
jmp
test
jne
jmp
add
add
int
in
sub
push
push
and
sub
shr
inc
mov
mov
test
push
mov
jmp
lea
push
movb
mov
jmp
mov
call
call
cmpl
jne
cmpb
jne
nop
nop
jmp
xor
rol
and
mov
add
add
xor
cmp
jmp
xor
xor
sub
mov
jmp
nop
push
nop
jmp
popa
jmp
mov
ret
add
push
rol
shl
or
mov
sub
mov
push
mov
movl
mov
push
jmp
push
push
push
lea
mov
rol
ror
or
or
mov
add
push
call
add
xor
dec
mov
jmp
test
lea
jle
rol
sub
or
xor
xor
mov
jmp
jmp
jne
add
ret
and
mov
or
shl
add
add
rol
mov
jmp
push
lea
push
movb
mov
movb
movb
movb
jmp
jmp
pushl
call
add
pusha
mov
call
jmp
add
jmp
add
add
xlat
clc
call
jo
add
jmp
movl
mov
jne
xor
ret
test
jmp
mov
mov
jle
jmp
or
or
xor
sub
mov
jmp
call
test
je
cmp
jne
addl
pop
add
ret
jmp
shr
and
add
test
jne
mov
mov
pop
ret
add
add
add
mov
add
add
lock
add
add
in
pop
push
mov
sub
mov
jmp
and
sub
mov
or
mov
push
push
xor
mov
mov
xor
jmp
add
test
je
shr
add
ror
or
dec
mov
sub
test
jmp
add
jmp
call
call
push
subl
push
jmp
subl
push
jmp
jmp
push
push
xorl
call
test
je
add
ret
jmp
call
ret
add
add
add
add
add
add
add
pop
add
pop
jmp
cmpw
je
jmp
lea
and
or
sub
add
dec
mov
sub
cmpw
jmp
call
pushl
jmp
add
test
je
jmp
add
inc
sti
incl
add
add
add
xor
test
je
movsbl
rol
add
xor
mov
jmp
add
jmp
mov
mov
dec
or
mov
mov
or
mov
mov
jmp
jne
and
add
add
add
add
sub
jne
add
jmp
aaa
int
cmpl
jne
pop
pop
pop
mov
pop
jmp
add
ret
xor
mov
push
jmp
jmp
leave
pop
jmp
leave
push
inc
int3
xorl
call
mov
sub
shr
mov
add
jmp
subl
pop
add
ret
add
add
add
test
cli
decl
mov
add
or
rol
xor
or
mov
mov
mov
jmp
test
jne
cmp
je
add
cmp
jl
pop
jmp
jne
mov
mov
sub
mov
add
dec
shr
add
mov
mov
mov
xor
or
mov
rep
movzwl
sub
mov
add
jmp
xor
pop
mov
shl
shr
and
and
mov
pop
ret
sub
mov
movzwl
xor
shl
mov
mov
jmp
cmp
ret
pop
mov
pop
ret
mov
ret
add
add
add
mov
push
jmp
mov
lea
push
push
call
jmp
or
inc
jle
jmp
popfw
mov
xor
or
xor
or
mov
lea
push
push
jmp
dec
jmp
jmp
subl
push
push
jmp
pop
sub
pop
add
pop
sub
dec
rol
and
shr
mov
pop
ret
add
add
add
sub
jl
cmp
add
mov
mov
mov
add
jmp
jne
xor
lret
xor
add
mov
sub
add
and
mov
xor
mov
jmp
ret
pop
push
call
push
jmp
xorl
mov
call
push
jmp
call
pop
int3
call
push
xorl
mov
call
jmp
dec
mov
inc
out
cmp
mov
jmp
icebp
add
test
jne
add
cmpl
jne
pop
jmp
test
jle
mov
or
xor
mov
sub
sub
sub
mov
jmp
sub
jmp
xorl
mov
call
jmp
mov
je
dec
inc
xor
and
mov
mov
sub
test
jmp
mov
jl
xor
add
and
and
ror
mov
mov
jmp
pop
pop
mov
pop
ret
add
add
add
test
incl
add
test
incl
mov
jle
rol
inc
and
mov
jmp
push
jmp
call
call
push
int3
xorl
mov
call
add
mov
call
push
jmp
dec
call
push
ret
ret
pop
push
push
addl
jmp
pop
hlt
test
jmp
ret
jmp
subl
push
jmp
jmp
call
push
int3
addl
call
test
jmp
jne
jmp
mov
movsl
mov
push
mov
push
add
and
or
add
or
mov
call
jmp
stos
lods
mov
xor
sub
inc
mov
add
jmp
movzbl
add
mov
lea
mov
or
or
mov
shr
and
add
test
jmp
add
sub
or
sub
mov
and
mov
call
push
jmp
dec
pop
call
call
ret
int3
int3
push
ret
addl
push
jmp
call
call
ret
leave
call
xorl
jmp
add
sub
jne
jmp
jne
fs
add
ret
pop
pop
mov
pop
sub
mov
mov
jmp
adcl
mov
add
add
adc
push
and
shr
add
mov
lea
push
dec
and
sub
shl
sub
mov
ror
mov
jmp
pop
ret
add
add
add
test
add
add
inc
inc
and
add
add
and
add
xor
xor
mov
sub
jmp
divl
jo
add
sub
dec
add
xor
mov
jmp
lahf
hlt
push
test
jne
movzbl
add
lea
rol
sub
mov
shr
and
jmp
les
sbb
jle
decl
enter
call
and
ret
call
jmp
cmpsl
lea
mov
mov
and
mov
mov
xor
add
sub
jmp
sub
add
rolb
lea
jne
test
mov
je
ror
and
ror
mov
jmp
dec
outsb
lods
movl
lea
jmp
mov
sti
lcall
pop
or
mov
pop
ret
add
add
add
mov
mov
jmp
in
out
rorb
shlb
ljmp
and
rcl
and
sub
mov
mov
mov
mov
jmp
mov
sbb
add
add
add
add
jmp
movzbl
and
sub
sub
xor
or
mov
and
add
jmp
jl
cmpb
sbb
test
pop
sub
fstps
sbb
mov
pop
jmp
xor
push
add
shr
mov
jmp
punpckhdq
mov
pop
ror
or
add
xor
mov
pop
ret
add
add
add
test
add
test
je
and
dec
mov
sub
add
sub
jmp
aas
xor
mov
mov
jne
shr
and
mov
mov
mov
movl
jmp
xchg
cmp
scas
add
add
inc
and
add
add
mov
movl
jmp
jmp
pop
lds
lea
call
cmpl
jne
cmp
jne
jmp
push
incl
sbb
add
sbb
test
add
add
roll
and
ror
mov
mov
sub
add
jmp
lea
sub
mov
mov
jne
jmp
sub
sbb
movb
add
add
inc
sub
jmp
sub
and
mov
movzbl
shl
add
jmp
cmpsb
cmp
add
jmp
jbe
les
mov
pop
inc
inc
xor
mov
mov
call
cmp
jb
add
jmp
mov
add
add
add
add
cmp
jae
add
test
mov
jmp
aad
fisttpll
test
add
add
add
fidivl
rolb
loop
lret
sub
mov
jmp
inc
loop
mov
add
sub
jmp
add
xor
test
decl
add
or
adc
ror
add
mov
jmp
push
pushf
shl
mov
ror
add
add
add
shr
mov
movl
jmp
mov
mov
add
add
mov
jmp
push
in
sbb
inc
and
add
add
mov
cmpl
jmp
cmpsb
out
mov
lcall
mov
call
sarb
popa
add
pop
pop
add
sub
shl
inc
mov
pop
ret
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
push
popa
add
inc
popa
add
es
add
xor
add
add
add
pusha
add
out
pusha
add
add
add
add
add
pusha
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
outsb
popa
insl
gs
js
outsb
jae
outsl
outsb
inc
add
imul
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
pop
arpl
add
add
mov
add
add
xor
cmp
ds
aas
aad
scas
aaa
das
xor
cmp
imul
or
and
push
cmp
ds
ds
pop
aas
push
xor
xor
xor
xor
cmp
insl
cmp
xor
cmp
ss
dec
cmp
lahf
cmp
cmp
cmp
add
add
add
xor
xor
xor
xor
scas
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
fidivrl
add
push
add
pop
push
push
sub
imul
push
pop
cld
adc
in
mov
dec
or
aas
jle,pn
jg
jg
jno
pop
pushf
jmp
add
aaa
clc
imulb
loopne
adc
scas
add
leave
pushf
sahf
notb
daa
jbe
mov
fisttps
or
cld
out
shlb
cwtl
test
push
out
jnp
add
in
adc
xchg
xchg
and
in
mov
add
cmp
push
cmp
sti
aaa
in
jnp
or
or
xor
nop
mov
push
sbb
out
push
cmp
adc
jb
dec
mov
jmp
daa
enter
pop
imul
aam
or
arpl
in
popf
in
xchg
mov
loope
xor
ja
lcall
loope
stc
add
mov
xchg
ret
jns
jo
.byte
