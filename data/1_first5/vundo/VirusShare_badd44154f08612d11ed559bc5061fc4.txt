jmp
test
xor
imul
and
movb
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
xlat
push
sub
pop
jmp
lods
jmp
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
pop
jmp
lds
dec
sub
daa
jmp
aam
jb
inc
jmp
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
add
sub
adcb
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
jmp
gs
dec
jmp
loope
hlt
sbb
fidivrs
jmp
js
mov
and
jmp
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
jmp
lahf
in
mov
mov
test
xor
imul
stos
pop
jmp
jmp
push
and
jmp
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
icebp
jmp
push
inc
sub
scas
dec
jmp
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
adc
jmp
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
sub
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
jmp
adc
mov
int
xchg
ror
into
out
jmp
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
add
sub
cmp
jmp
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
jmp
std
jmp
repnz
sar
lahf
in
mov
mov
jmp
test
xor
imul
stos
or
push
and
fstps
add
jbe
cmp
dec
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
jmp
dec
fsub
mov
inc
je
adc
loopne
pop
aas
add
dec
jne
jmp
ss
movsb
jmp
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
jmp
movsl
jmp
jp
mov
inc
pop
xor
shlb
jmp
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
mov
sub
push
jmp
adc
cmp
sub
mov
mov
xor
mov
mov
mov
add
xor
sub
xor
or
sub
and
sub
sub
ror
sub
xor
dec
sub
xor
or
xor
add
sub
dec
shr
or
xor
dec
jne
mov
mov
and
and
or
sub
add
xchg
subl
mov
movl
sub
xor
leave
ret
push
mov
sub
push
push
jmp
xor
xchg
pop
add
add
xor
mov
mov
mov
or
push
movb
push
addb
pop
add
sub
orb
pop
xor
shr
xor
sub
or
sub
or
add
sub
lea
lea
xor
dec
jne
mov
mov
mov
rorb
mov
subb
add
xchg
sub
mov
andl
sub
add
leave
ret
push
mov
sub
push
jmp
aas
or
push
clc
shll
add
push
xor
mov
mov
mov
add
add
sub
shl
sub
push
roll
sub
or
add
sub
sub
and
add
xor
or
add
dec
jne
mov
mov
pop
xchg
rorl
mov
add
add
sub
leave
ret
push
mov
sub
push
push
xor
mov
mov
mov
xor
lea
shr
push
add
add
andl
add
sub
or
sub
inc
add
and
xor
add
or
add
and
sub
rol
or
or
rol
sub
sub
dec
jne
mov
mov
mov
jmp
imul
cmp
jmp
popa
xchg
popf
adc
roll
mov
andb
add
add
leave
ret
call
adcl
inc
jmp
pop
cli
arpl
inc
ljmp
decl
test
or
adc
or
jo
mov
or
jae
aaa
mov
pusha
cltd
pop
cmp
lret
cmp
add
repnz
adc
sbb
stos
mov
add
hlt
aad
mov
push
movb
ds
mov
mov
imul
and
addr16
cli
pop
or
aad
fdivrp
ss
lcall
cmc
pop
jg
fldcw
push
adc
or
ljmp
lods
adc
cmp
hlt
lods
xor
xor
jbe
aas
xchg
lcall
sub
dec
cmp
js
mov
insl
imul
pop
push
jecxz
cmc
fisubrs
call
sbb
in
push
lcall
movsl
stc
aad
scas
cmp
adc
cmp
xchg
insb
test
dec
shlb
iret
inc
push
fiadds
jns
hlt
popf
sub
add
mov
cmpb
icebp
insl
mov
hlt
inc
inc
mov
inc
fmuls
adcb
mov
stos
sub
mov
ljmp
cmp
inc
loope
xor
or
cmp
or
shl
or
or
in
jle
aad
add
xor
jmp
sbb
jo
mov
fucomi
jae
sub
pusha
cltd
jg
xor
cmp
popf
inc
adc
int
gs
clc
scas
sub
cmp
fs
pop
xchg
push
fcompl
dec
cmpsb
les
jbe
inc
arpl
imul
sub
push
xor
fdivl
mov
stos
xor
mov
mov
inc
imul
movsl
adc
pop
xchg
mov
out
inc
jo
xor
cmovg
push
je
ja
xchg
xor
outsl
in
pop
test
mov
mov
xchg
and
test
mov
xor
testl
sub
fwait
xor
adc
mov
push
adc
xor
mov
or
pop
test
xchg
iret
mov
rorl
inc
movsl
inc
vpaddd
icebp
cmpb
mov
push
push
lea
adc
xor
xchg
mov
sub
aas
mov
scas
pop
xchg
xor
jecxz
xchg
xchg
and
mov
push
push
ret
mov
xchg
fstpt
dec
pusha
push
mov
std
lock
mov
stos
cmpsl
addb
shll
add
mov
and
push
push
push
jmp
test
movsl
nop
add
xchg
sbbb
fnstcw
jmp
fbstp
mov
outsl
aad
jns
and
push
lcall
xor
test
outsl
hlt
cmp
data16
cmp
std
in
scas
fimuls
push
xchg
adc
ljmp
push
rolb
jb
or
or
in
and
xor
mov
xchg
inc
imul
jnp
aad
add
and
cmp
les
fdivl
movsb
jge
sbb
shrl
bound
inc
call
mov
pop
sahf
in
xor
mov
xchg
lcall
push
insb
cmpsb
jb
mov
js
cmp
cmp
and
sbbl
mov
push
dec
lret
add
mov
mov
lods
fisubl
icebp
int3
jne
cmp
sub
pop
enter
pop
js
sub
xchg
and
scas
dec
cmc
es
mov
scas
mov
mov
in
or
mov
lcall
mov
xor
push
xor
pop
lret
fstpt
inc
push
pop
int3
xor
scas
sub
and
lcall
test
dec
cmp
in
cwtl
cwtl
and
es
test
js
outsl
nop
push
mov
and
into
ss
aaa
shrb
nop
cmp
cmp
xchg
cmpl
adc
into
mov
inc
add
and
lods
jl
add
mov
pop
inc
rcll
lea
addr16
fsubs
xor
sub
sub
add
pop
and
xchg
lahf
mov
fucomi
jae
cs
sub
inc
mov
sub
and
adc
mov
push
sbb
or
frstor
in
and
std
fisttpll
push
xchg
pop
sti
insl
scas
orb
jle
out
cmp
fstp
fistpll
in
jmp
dec
inc
sahf
repnz
lods
pop
jecxz
sbb
xchg
cmp
aam
xor
lods
cltd
test
xchg
cmp
mov
mov
adc
dec
push
jb
loopne
sub
imul
and
int3
mov
xor
mov
jle
xorl
mov
cs
bound
fwait
sub
in
jecxz
and
test
jno
insb
hlt
sarb
or
jmp
push
add
cmp
cwtl
adc
mov
sti
testb
mov
mov
and
push
imul
movsb
dec
jne
insl
pop
push
popf
shrb
push
mov
mov
imul
rcrb
cmpb
jg
inc
sbb
int3
push
mov
test
ret
sahf
mov
xchg
mov
lea
xor
test
int3
enter
and
jmp
push
cmp
and
jns
sbb
addr16
add
loope
cmp
inc
push
and
mov
mov
aam
dec
pop
xor
lret
xchg
repz
aas
add
or
inc
xor
pop
ds
xchg
out
xchg
xor
mov
jmp
scas
test
mov
and
iret
cmp
or
mov
lret
jp
cmp
sbb
mov
push
arpl
pop
cwtl
or
sbb
loopne
cld
sub
inc
pop
xor
fucom
cli
jae
imul
jbe
dec
pop
inc
xchg
repnz
xchg
dec
int
xor
xor
or
add
push
ret
xor
mov
shrb
test
inc
push
mov
cmp
test
pop
jno
imul
pop
or
test
lock
shl
push
jb
xchg
negl
adcl
pop
cmpsl
pop
arpl
ds
jp
jbe
iret
xchg
mov
mov
xchg
jno
jl
mov
jecxz,pt
aaa
addr16
call
sub
xchg
xchg
sub
out
mov
or
je
mov
lea
dec
inc
stos
fwait
lahf
arpl
pop
push
pop
mov
outsl
in
movsb
mov
lods
pop
mov
inc
jo
inc
cmp
mov
enter
iret
lock
add
jns
adc
inc
ds
add
icebp
pop
add
jge
xchg
and
mov
add
fs
in
ror
negl
aam
out
inc
and
push
cmpsb
test
movsl
out
mov
mov
xor
nop
stos
cltd
mov
sbb
jg
inc
mov
pushf
dec
pop
push
outsb
mov
sub
movsl
aas
pop
shl
mov
shlb
icebp
not
shr
repz
imul
mov
push
sub
sub
cmp
adc
pop
ljmp
mov
popf
cmpsl
test
xor
lds
aaa
in
xchg
data16
test
jbe
fsubl
push
xchg
adc
adc
ss
sbb
andb
test
imul
pop
mov
or
jno
xor
mov
sub
inc
mov
cltd
adc
stos
xor
pop
adc
mov
lahf
cmp
jnp
xor
ljmp
push
mov
out
add
test
in
jmp
mov
push
outsl
dec
jle
ret
add
rorb
fptan
fwait
mov
push
dec
pop
cmp
or
inc
sbb
sbb
mov
and
negl
in
jl
int3
addb
push
lret
fcomps
inc
adc
icebp
addb
add
bound
int
push
inc
ja
in
jne
mov
push
xor
pop
movb
icebp
pop
xchg
push
sbb
imull
cld
movsb
and
fldt
inc
add
popf
das
mov
pop
jmp
mov
imul
pop
shrb
sub
mov
adc
xchg
push
sarl
int3
fstpt
mov
loopne
addr16
inc
mov
clc
adc
push
mov
and
xchg
into
aam
shlb
lods
cmc
jmp
jecxz
aaa
xchg
cmpsb
adc
in
mov
or
pop
mov
mov
scas
fidivs
dec
mov
inc
cmp
dec
into
mov
inc
mov
mov
mov
lcall
mov
mov
dec
jnp
adcl
mov
into
cmp
inc
or
int
negl
dec
and
xorl
into
addl
xchg
adc
pop
js
ficomps
mov
fstl
push
ljmp
cs
and
in
ds
lret
daa
aam
mov
loop
movsb
jle
nop
and
fwait
gs
in
mov
cmp
jb
pop
dec
sub
inc
add
dec
dec
push
push
push
sbb
cmc
push
movsb
sub
movsl
into
pop
shl
mov
cmp
mov
xor
int
cmp
push
jmp
or
or
sub
cmp
xchg
cmp
test
xor
xor
stos
aaa
cmpsl
test
xor
lds
mov
aad
hlt
mov
and
stos
push
roll
mov
fildll
push
pop
xchg
shll
stc
push
mov
push
aas
dec
aad
movsl
in
in
pop
gs
mov
cmpsb
xor
pop
aaa
out
mov
lea
pop
dec
xchg
hlt
inc
int3
and
push
inc
mov
out
gs
daa
add
divl
aaa
insl
aad
std
repnz
adc
mov
stc
stos
data16
daa
cmp
push
mov
ret
cmpsb
scas
mov
mov
mov
andl
adc
in
shlb
ljmp
sbb
mov
pushf
cmpsl
dec
xlat
clc
out
dec
scas
pop
ss
cmp
push
leave
jle
aaa
push
imul
ret
push
negb
out
add
xchg
adc
xor
push
cmpsb
pop
in
rcr
push
addr16
rep
mov
mov
and
cvtps2pd
imul
rcll
mov
out
adcb
shll
xchg
iret
add
ds
mov
adc
mov
stos
fldcw
out
into
mov
mov
xor
or
loop
jge
and
inc
out
rcll
je
xchg
add
imul
mov
mov
xchg
lods
sub
cmp
lea
stos
fnsave
clc
clc
lods
shll
test
inc
pop
imul
movsb
cmp
int
dec
ret
xchg
cmpsl
mov
xchg
or
and
inc
insl
jmp
pushf
ss
mov
xlat
inc
sbb
push
lds
mov
jp
push
repz
testl
sub
sub
sub
mov
in
loop
movsl
in
push
and
or
gs
xor
push
xchg
cli
loope
jb
movsb
dec
jge
mov
ds
push
xchg
jmp
or
xor
sbb
aam
cmp
dec
js
dec
xchg
cmp
xchg
outsb
push
jno
ljmp
rclb
cmp
outsl
in
arpl
scas
adc
push
imul
call
rsm
int
cmp
push
sub
lea
and
dec
ljmp
jg
fistpl
stos
stos
mov
jae
dec
mov
push
pushf
daa
push
mov
sahf
pop
jg
loopne
or
mov
lahf
test
sbb
pushl
popl
movsl
mov
icebp
push
sub
ljmp
dec
pop
xchg
pop
imulb
mov
in
rcl
addr16
ficomps
out
or
pslld
movsb
dec
mov
call
shl
loopne
aas
mov
int
aad
jge
ficoms
push
loopne
mov
fs
test
pop
repnz
sbb
pop
loopne
mov
push
pop
push
sub
push
and
aas
outsl
fcoml
dec
stos
sbb
mov
or
sar
lods
cmp
leave
cld
outsl
jb
pop
mov
lcall
dec
xchg
adc
stos
js
aad
lods
sub
das
clc
pop
sub
movsb
jns
pop
dec
mov
add
jecxz
fsubrp
in
xchg
lcall
nop
xchg
push
jns
mov
push
ss
fildl
fidivl
xchg
sti
or
inc
and
fmul
pop
mov
push
rorb
out
jns
add
cmp
mov
nop
sub
jg
mov
push
dec
fists
jmp
rclb
loop
push
movb
xchg
push
call
ficoml
sub
jp
dec
mov
push
xchg
push
lods
das
pop
dec
nop
es
push
shll
ds
movsb
shrb
test
sub
sbb
stos
cs
roll
cmp
rcll
cmp
dec
jl
cmp
in
adc
negb
lods
jg
shr
rcr
xchg
jae
in
rclb
ret
jns
lods
xor
lcall
or
sahf
and
sub
mov
cmp
inc
stos
inc
stos
sub
push
ret
jge
std
out
repnz
fnstenv
dec
int
push
push
ror
xchg
mov
fistpl
push
lahf
lea
cltd
addr16
out
pop
mov
or
xor
mov
lods
adc
rcll
push
out
mov
push
or
pop
xchg
mov
je
mov
fisttpll
xor
jmp
ret
shrl
mov
inc
in
shlb
daa
mov
cs
fs
push
and
mov
mov
shlb
push
sti
mov
push
cli
jno
fsubrs
mov
outsl
fiaddl
jmp
mov
push
scas
cld
mov
subl
jnp
lret
enter
xor
bound
outsl
aaa
in
sahf
xor
sbb
sub
push
pop
mov
adc
push
and
fwait
dec
dec
inc
cli
pop
mov
out
xorb
movsb
dec
cmp
jnp
jg
fnstsw
sub
repz
pop
dec
pop
mov
fwait
movsl
push
daa
xchg
lods
add
aam
rolb
sbb
xchg
int
pop
stos
xchg
dec
jle
popa
sub
stos
mov
das
out
gs
and
loopne
fists
sub
or
pop
leave
test
cmp
push
shrb
pop
pop
mov
push
sbb
jg
data16
add
dec
inc
in
push
inc
enter
xchg
dec
in
xor
loope
dec
mov
cmp
xchg
lret
pop
aaa
rorb
iret
dec
roll
pop
push
dec
jg
mov
push
add
int3
cmc
adc
insb
shlb
jecxz
dec
inc
jae
decb
fidivrl
lock
insl
sub
push
jb
scas
negl
mov
xchg
data16
lods
nop
jecxz
pusha
in
dec
mov
mov
add
and
rcr
jnp
push
jbe
inc
dec
mov
les
and
test
lahf
push
add
and
fdivs
paddusb
cmp
jp
mov
popf
repz
cmp
cs
jbe
mov
dec
sbb
push
jae
insl
fnstcw
inc
sbb
sub
jns
push
das
mov
add
mov
push
or
icebp
dec
jne
mov
push
mov
cwtl
pop
xor
push
mov
mov
sbb
sahf
iret
rcrb
pop
mov
test
push
stos
pop
repz
jge
roll
hlt
aad
sbbb
arpl
cld
add
ffree
fcoml
push
pop
fcom
fdivp
and
sub
sti
add
sbb
rolb
cmp
iret
imul
jne
fs
fimuls
mov
hlt
jns
pop
lods
and
shrb
cmp
xchg
in
mulb
testl
lcall
mov
jge,pn
sbb
pushf
xor
and
inc
in
push
mov
lret
test
movsl
outsl
push
mov
sub
movsb
fldcw
dec
or
cli
xchg
cmp
imul
cwtl
xchg
jg
sbb
ret
inc
cmpsb
mov
jo
shlb
mov
out
add
mov
pop
iret
mov
test
inc
out
pop
mov
xlat
pop
mov
rorl
push
movsl
inc
push
faddl
jns
pop
mov
insl
fildll
daa
ss
hlt
repz
imul
in
inc
lahf
jbe
test
adc
add
and
int3
bound
cmp
popa
add
jle
stos
sti
mov
jg
fiaddl
ss
inc
lcall
jle
jle
js
shlb
mov
xchg
sub
pop
add
sbb
dec
push
scas
cld
mov
sti
dec
mov
or
lods
inc
mov
mov
lret
lds
adc
push
jg
and
cld
jmp
dec
pusha
cmp
xor
sub
aad
mov
cmovs
inc
call
pop
mov
sahf
stos
int3
sbbl
cli
jae
pop
ja
sbb
rorl
pop
pop
mov
push
stos
jo
test
nop
sub
and
cs
mov
popf
jg
sbb
gs
mov
fwait
leave
mov
xchg
inc
imul
ret
test
test
icebp
ret
dec
movsb
mov
pop
sbb
popa
mov
aam
cwtl
fisubrs
pop
mov
cmpsb
inc
push
shlb
cwtl
xor
jae
and
je
fisubrs
inc
in
push
add
ljmpw
inc
popf
outsl
aad
add
jg
push
sbb
sub
cmp
mov
aaa
xchg
mov
xchg
cwtl
sbb
xchg
mov
outsb
cmp
mov
sbb
into
in
xchg
rcrb
mov
sub
mov
fisubl
jle
jle
js
aas
mov
outsl
test
mov
out
push
pop
xchg
enter
sbb
fidivs
sub
add
outsl
ret
push
jmp
or
add
lods
jb
add
or
aad
ficompl
jb
lret
xchg
jmp
xlat
cmp
cmpsb
data16
mov
test
or
sti
daa
pop
xchg
adc
jno
cli
fs
sbb
shlb
adc
andl
sub
out
mov
loope
add
dec
dec
push
push
push
cmp
ja
fstps
out
mov
imulb
jns
test
inc
jecxz
outsb
les
pop
lahf
pop
sti
cli
jl
test
fadd
lea
fstl
push
mov
scas
push
xor
fistpl
insb
push
xchg
xor
pushf
push
into
out
jl,pn
mov
cltd
push
icebp
pop
inc
cmp
mov
mov
cmpsl
mov
cmp
dec
cmp
push
out
mov
mov
sub
jbe
test
scas
add
jae
mov
cs
xor
scas
lcall
inc
and
ds
pop
orl
movsl
sahf
hlt
xor
push
mov
add
cmp
in
gs
sti
xor
repz
test
inc
xchg
clc
es
xor
testb
jecxz
clc
push
add
mov
sbbb
outsb
mov
lds
cmp
mov
cltd
push
cs
lret
test
movl
mov
sub
js
hlt
adc
scas
xchg
stos
mov
pop
dec
fwait
pop
outsb
mov
pop
lds
jp
xchg
mov
push
and
dec
xor
outsl
jmp
push
pop
data16
adc
mov
push
jl
mov
xor
aaa
or
ret
mov
outsb
push
mov
out
push
push
arpl
das
or
inc
mov
sub
out
das
adc
pop
ret
mov
cmp
mov
mov
jp
icebp
sbb
out
ds
out
mov
sbb
ds
sti
scas
out
mov
pop
push
mov
pop
aam
mov
outsb
js
testb
xchg
emms
and
jecxz
xor
mov
incb
push
loope
or
addr16
test
xchg
movsl
ljmp
xchg
bound
cmc
dec
in
pop
loop
pop
aad
ss
arpl
sti
mov
push
scas
cmp
cmp
iret
lcall
stos
inc
ljmp
xchg
lahf
mov
adc
pop
daa
jmp
pop
push
sub
pop
outsl
aad
pop
movsl
mov
aaa
xchg
dec
push
sub
fisubrs
push
push
cltd
jl
lods
mov
push
fisubrl
fiaddl
shrb
sbb
lods
fcompl
loop
aas
mov
in
in
lret
xor
mov
jp
shrb
dec
cmpsb
clc
xchg
dec
roll
pop
lods
fistpll
push
dec
jne
sbb
subl
in
cmp
mov
aad
fs
mov
daa
filds
mov
out
rorb
fptan
fwait
mov
push
dec
pop
cmp
or
inc
sbb
es
lds
sbb
lcall
jecxz
out
jbe
mull
push
push
mov
rorl
daa
ljmp
stc
sub
mov
mov
test
push
jnp
fisubl
lcall
stos
popf
cli
or
pushf
je
mov
xchg
cmp
subl
stos
jmp
stos
mov
aad
dec
nop
bound
push
push
fwait
hlt
lods
jae
dec
jae
adcb
jne
loope
ja
fildll
shlb
dec
minps
push
inc
cmc
fisubl
dec
testl
sub
xchg
dec
xor
sub
add
roll
aam
sub
mov
push
ret
xor
cmp
loope
into
incb
fdivp
and
push
jge
lods
jbe
test
sbb
dec
out
mov
or
test
lock
pop
fimuls
mov
hlt
jns
cmp
cmc
jge
adc
lcall
dec
mov
and
jg
es
mov
xchg
imul
fisubl
push
scas
pop
js
pop
bound
xor
mov
xchg
rcrl
push
jp
jl
xor
xchg
pop
inc
pop
pop
lea
test
xchg
xchg
fcomps
pop
ja
mov
popa
add
icebp
bound
lahf
insb
push
lcall
sbb
cmp
test
ret
jnp
pop
sti
xchg
outsb
push
mov
call
jge
addl
sub
out
das
adc
inc
ret
mov
cmp
pop
mov
add
push
imul
sbb
fisttpl
lds
leave
subb
xchg
aas
pop
shrb
sub
cmp
lock
icebp
not
int
repz
sbbb
sub
sub
addr16
mov
je
ja
xchg
push
jge
outsl
sbb
int
mov
loop
mov
test
stc
pop
or
outsb
insb
mov
das
push
cli
push
lods
out
push
sarb
xlat
shll
pop
lea
jns
push
les
jb
stos
aad
ss
sbb
xchg
mov
ds
adc
lods
sarl
adc
jg
or
mov
jl
rcll
pop
adcb
notb
sub
sub
add
or
call
mov
sub
cmp
xor
in
xor
add
fucomi
push
daa
jecxz
jge
cs
or
test
popf
aas
adc
inc
cmp
xchg
enter
test
mov
mov
jge
jg
pop
icebp
mov
cmc
dec
fildll
xor
push
rorl
test
pop
mov
icebp
push
jg
repz
test
cli
push
inc
xchg
mov
in
push
inc
fisubrl
xchg
jmp
stos
sub
and
push
mov
in
xor
cmovg
xorb
xor
jge
pop
in
ss
mov
rorb
call
imul
cmp
gs
das
leave
xchg
mov
mov
push
movsl
cmp
sub
ds
lret
rcrb
movl
jle
or
and
xor
rclb
sub
leave
jae
push
rolb
push
mov
pop
nop
sub
dec
out
repnz
add
lock
jo
sbb
or
arpl
in
adc
nop
movsl
out
or
shrl
xchg
lds
or
rcr
int3
xchg
pop
mov
mov
mov
nop
sbb
mov
js
push
jo
pop
fisttps
cmp
out
out
xlat
test
dec
bound
inc
add
inc
stos
dec
push
mov
pop
cmp
imul
push
sbb
movsl
push
stos
icebp
push
pop
pop
adc
and
outsb
sbb
movsl
mov
lea
es
mov
jne
mov
sti
add
pop
imul
jmp
dec
call
jb
int
jp
inc
xor
xor
pop
inc
mov
data16
incb
cmpsl
shrl
jno
into
adc
or
fs
enter
ret
and
dec
mov
in
and
sbb
pop
dec
adc
movsl
cwtl
fmul
repz
mov
stos
and
pop
pop
inc
in
mov
sahf
mov
or
mov
mov
sbb
mov
inc
lock
cwtl
loopne
test
adcl
mov
fs
repz
jg
pop
movsl
fildl
dec
es
xor
jecxz
clc
pop
add
std
mov
ficompl
dec
lods
pop
cmp
leave
pop
dec
xchg
push
push
movsl
cmp
mov
and
scas
das
adc
mov
lds
cmp
pop
sti
call
push
mov
aas
mov
test
add
sbb
pop
inc
stos
out
out
xor
mov
jmp
cmp
aad
add
leave
pop
pop
cmp
aaa
aam
dec
sahf
sbb
xchg
aam
stc
inc
xlat
jmp
stos
mov
add
mov
mov
xlat
mov
ret
clc
push
int
or
sub
xor
movsl
insl
mov
and
adc
jg
adc
sbb
jno
mov
out
mov
movsb
push
dec
jge
jbe
lahf
mov
mov
pop
into
cmc
sub
xchg
iret
adc
test
dec
shr
jns
jecxz
lea
mov
gs
sub
pop
not
push
ljmp
pusha
and
dec
pop
outsl
stos
xlat
lds
xor
and
xor
pop
push
mov
mov
sub
movsb
sub
push
xchg
fs
jb
push
xor
add
mov
push
pop
movb
icebp
pop
xchg
push
sbb
js
push
cld
enter
scas
dec
jmp
fwait
mov
push
movsl
adc
shlb
push
sub
cmpsl
pop
adc
push
mov
fistps
sub
dec
mov
incl
imul
js
xor
xor
mov
jecxz
fldenv
std
xor
out
ja
test
hlt
dec
xchg
sub
mov
test
nop
sub
push
cmp
fnsave
and
mov
push
mov
lcall
scas
mov
out
dec
or
ja
add
popa
jae
dec
pop
add
in
push
enter
outsl
push
or
mov
add
bound
jmp
shlb
cmp
mov
push
shrb
aaa
cmpb
dec
mov
stc
mov
into
mov
out
clc
jns
mov
mov
mov
imul
outsb
pushf
movsl
js
fists
mov
outsl
fildl
lock
mov
fwait
mov
jnp
lods
pop
xchg
bound
cmp
sub
scas
leave
mov
sub
and
sti
pop
jmp
cmp
jno
mov
mov
xchg
adc
jecxz
out
and
mov
dec
in
shlb
mov
push
jp
sbb
cmp
sub
mov
ret
lret
xchg
repz
xlat
add
cmp
mov
popf
repz
cmp
iret
jnp
xor
sub
je
jbe
inc
xchg
xorl
xor
call
rcll
bound
mov
fwait
subb
mov
inc
xor
or
and
pop
fwait
xchg
or
mov
push
out
adc
push
sti
std
rorl
bound
cmp
int
sub
inc
pop
xor
fucom
cli
jae
imul
jbe
dec
enter
into
push
xchg
sub
cmpsl
jl
addr16
xchg
xchg
mov
push
ret
xor
mov
shrb
test
inc
push
mov
and
add
and
mov
or
mov
cmp
xor
pop
cltd
push
jle
or
shll
add
dec
fbstp
lods
insl
inc
cli
andb
sahf
repnz
icebp
cli
add
mov
and
push
mov
xchg
rorl
inc
mov
sbb
push
daa
push
scas
xor
cmp
out
outsl
call
in
popa
dec
pop
test
leave
in
cmpb
pop
ss
push
xor
ja
dec
and
push
lods
push
mov
ret
dec
add
loope
shlb
in
ficoml
cmc
xlat
ret
jg
inc
imul
push
lahf
int3
ds
adc
push
fbld
push
mov
into
mov
sbb
inc
add
loop
jge
and
inc
out
rcll
je
icebp
stc
mov
imul
or
add
sete
stos
adc
in
xor
ret
dec
js
inc
jbe
in
pop
pmulhw
addr16
les
les
in
cmpsl
test
xor
pop
inc
sub
jmp
push
mov
xor
scas
rorb
stos
loop
les
inc
sti
testb
mov
mov
and
test
and
out
pop
imul
scas
mov
adc
push
adc
mov
xchg
enter
inc
xchg
enter
fwait
cwtl
cmc
punpcklwd
add
pop
dec
and
mov
cmp
scas
icebp
cmc
mov
dec
or
push
and
sub
inc
popf
repz
clc
and
xchg
push
xchg
push
add
and
fcomps
fists
pop
dec
jb
call
sub
mov
dec
add
push
dec
sbb
push
aad
pop
mov
ljmp
mov
push
das
mov
add
mov
add
mov
js
out
fnsave
add
inc
jo
cmp
mov
xlat
mov
adc
sbb
pop
or
scas
ja
stc
fidivs
gs
fidivl
cli
push
clc
rcrl
pop
add
inc
mov
push
jmp
ljmp
jne
jp
inc
jmp
push
rcrl
cmp
xor
dec
mov
loop
int3
inc
test
mov
ljmp
jmp
mov
xor
pop
enter
lods
jo
mov
cmp
subb
xchg
xlat
xchg
jecxz
fadd
jp
mov
in
mov
movsl
inc
or
fldcw
sub
sub
xor
fs
in
sahf
jno
push
push
pop
cli
aam
push
outsb
cmp
aad
out
push
mov
fisttpll
cmp
and
mov
rcrl
bound
lods
mov
add
dec
fildll
sub
push
stos
hlt
lods
rol
dec
lds
mov
push
add
pop
pop
imul
int
gs
adc
mov
push
mov
dec
lea
loop
subl
addr16
imul
imul
movsl
outsl
push
bound
push
push
stos
xchg
popf
cmp
dec
push
sahf
movsb
xor
push
jno
loop
cs
jb
int
and
adc
fcoml
push
scas
repnz
inc
lea
lds
aad
les
ds
sbb
cltd
icebp
mov
andl
int3
add
jecxz
les
popa
cld
sti
daa
imull
test
sahf
ret
push
fdivr
jp
stos
mov
daa
aas
ljmp
in
mov
add
xchg
icebp
dec
jne
mov
push
mov
cwtl
es
mov
push
push
push
inc
jle
fimull
mov
rcrl
pop
bound
dec
fwait
sub
in
cmpsl
xor
dec
test
xor
repnz
push
xchg
lods
sbb
xchg
aad
inc
sub
addb
fisttpl
jl
es
fwait
cmp
ljmp
xor
shr
dec
push
rorb
xchg
push
scas
add
sbb
cmpsl
mov
pusha
into
xadd
inc
cltd
in
cmp
pop
fildll
push
pop
outsb
xchg
sahf
push
loopne
mov
jp
rorl
ljmp
lcall
jno
scas
lds
sub
adcb
sub
fildl
iret
rcr
mov
mov
mov
test
push
andl
insl
mov
fldenv
sub
out
inc
adc
stc
shlb
cmp
enter
adc
in
mov
push
mov
bound
addr16
leave
outsb
rcrb
rorb
push
orl
sbb
es
shlb
loop
cld
xchg
pop
iret
and
aam
je
push
les
xor
xchg
or
push
ljmp
repnz
push
sbb
xchg
inc
dec
ficompl
jle
fcom
in
pop
fsubl
inc
dec
adc
fisttps
jbe
sub
jg
inc
mov
xchg
movsb
test
sbb
mov
fucomip
mov
inc
inc
scas
fiaddl
xchg
mov
inc
xor
push
sub
sbb
xchg
or
test
inc
les
cmp
mov
mov
xchg
jp
xor
mov
pushf
sbbb
mov
stos
js
pop
inc
xlat
push
test
test
push
punpckhbw
rol
subl
aas
xchg
fsub
push
cmp
hlt
pushf
jp
mov
clc
adc
xchg
adc
and
push
pop
cmp
mov
addr16
call
sarl
hlt
pop
add
movsb
es
mov
xor
insl
mov
out
fidivl
repnz
cld
pop
pop
fadds
into
pop
movsl
xor
lods
pop
mov
data16
popa
mov
add
pusha
push
movsb
dec
rcrb
xchg
and
or
xor
repz
adcb
xchg
and
stos
mov
sub
dec
sbb
ds
fwait
jg
mov
adc
mov
stos
fldcw
out
into
mov
mov
xor
or
cmp
cmpsl
repz
ds
rcll
sahf
push
xchg
lret
cli
jecxz
pop
xchg
mov
and
sbb
ljmp
xor
push
pop
lods
push
push
mov
sarb
sub
outsl
aad
adc
in
and
mov
dec
xchg
push
repz
xchg
push
add
stos
sub
ret
sub
lods
push
mov
and
inc
pop
cld
subb
cmp
std
out
dec
pop
adc
cli
fcoms
repnz
add
mov
add
mov
push
scas
das
pop
scas
inc
mov
jae
push
loope
fnsave
outsl
outsl
arpl
push
lret
stc
adc
push
insb
or
das
cmp
xchg
insb
test
mov
cmp
adcb
pop
stos
jge,pn
and
shlb
pop
sub
pop
xchg
sbb
jg
sbb
cld
xor
aas
js
dec
jp
xor
dec
mov
out
aaa
cmp
jg
cld
pop
pusha
nop
call
mov
aas
fninit
pushf
xchg
add
js
repnz
push
jb
mov
fwait
mov
dec
xor
mov
cs
out
out
and
shll
pusha
jle
sbb
and
testb
out
outsl
pop
sti
sub
push
xor
or
jae
aam
mov
xchg
lea
icebp
jp
roll
decb
icebp
cmpsl
jl
lds
cwtl
xchg
mov
push
ret
xor
imul
lret
pop
shrb
sub
mov
adc
xchg
push
inc
arpl
pop
int3
fstpt
js
pop
int3
xor
xor
xor
loopne
fnstcw
pop
movsb
jb
xchg
mov
lahf
sub
cltd
adcl
dec
lret
movsl
in
lds
mov
std
sbb
adc
mov
pop
fidivs
mov
lret
add
and
xor
inc
das
fwait
das
into
sub
dec
mov
mov
pop
push
fiaddl
add
jecxz
sbb
mov
mov
loop
inc
pop
push
jl
xchg
xchg
mov
mov
sub
insb
and
push
test
mov
lods
xchg
pusha
mov
aad
add
leave
xor
cmp
and
adc
nop
inc
outsb
cmp
mov
push
mov
sbb
or
sub
sub
or
ljmp
pop
inc
mov
stos
mov
pop
sub
pushf
rcrb
out
js
idiv
movsb
xor
in
sarl
pop
jmp
push
xchg
in
add
cmp
dec
jge
xchg
sbbl
test
sub
jmp
dec
in
cmp
mov
sub
pusha
into
cmpsl
mov
cmp
jmp
mov
mov
pop
fidivl
xorb
stos
std
mov
gs
ljmp
xchg
push
cmp
loope
std
cmpb
lret
pusha
dec
jg
sbbb
mov
mov
push
jmp
mov
ss
leave
psubq
mov
sub
cmp
clc
outsl
jge
lods
pop
dec
jns
leave
fs
loope
mov
in
and
ja
sbb
xchg
sub
xor
test
out
adc
rcrl
inc
sbb
jne
mov
cmpsl
sti
add
jb
pop
adc
inc
ds
add
and
add
daa
sub
out
inc
mov
adc
in
mov
dec
int3
and
orb
pop
jns
test
fs
cmp
jp
fidivrl
in
and
sbb
pop
stc
adc
call
repz
fxch
xor
gs
shl
or
xchg
int3
mov
aam
adc
rclb
cmp
test
clc
xor
xchg
add
dec
pand
mov
mov
jle
xor
mov
lea
inc
xlat
pop
push
sbb
mov
loop
out
mov
mov
mov
sbb
cmp
jb
dec
mov
mov
shr
jnp
push
mov
jae
xchg
mov
pop
dec
outsl
aad
xchg
and
mov
jl
in
push
test
push
inc
inc
pushf
repz
sub
xchg
dec
xchg
push
add
xlat
mov
jb
jb
adc
jl
and
and
pop
sbb
jae
fs
rorb
push
dec
sbb
push
aad
imul
rcrb
idiv
pop
mov
pop
arpl
push
jns
test
addr16
in
stos
fidivs
imul
push
sbb
ret
cld
inc
xchg
mov
push
jmp
sub
into
cmp
call
or
lahf
addl
sarb
lods
xchg
mov
cmp
hlt
lods
jae
xchg
dec
cmc
add
aam
mov
sub
dec
stos
pop
jecxz
arpl
ljmp
fsub
push
shlb
hlt
lahf
pop
pop
mov
mov
orl
shlb
push
lret
pop
add
dec
sti
in
mov
inc
hlt
mov
movl
adc
insl
inc
mov
andb
sahf
repnz
cmp
fwait
imul
in
fcomps
mov
sub
sbb
cltd
fsubl
mov
sahf
dec
sbb
pop
btr
in
cli
popa
testb
test
loopne
push
repz
mov
ret
xor
aam
mov
xor
mov
ret
dec
add
es
rorb
push
mov
ja
mov
jb
add
outsb
push
jbe
addr16
push
jp
out
lret
cmp
inc
push
lock
xchg
mov
xchg
gs
xchg
xchg
lret
push
and
inc
stos
adc
inc
sbb
pop
push
pop
or
xor
push
imul
pop
icebp
movsl
jmp
mov
dec
int3
inc
pop
adc
stc
add
aas
jl
loopne
push
xchg
inc
mov
mov
sbb
cmpb
fcmovb
jl
mov
add
cmp
dec
enter
jo
pop
dec
in
fists
daa
jl
int
loopne
fs
mov
push
xor
std
jno
movsb
in
cmp
addb
js
mov
iret
or
xor
push
imull
lahf
sub
mov
call
lcall
mov
imul
and
loopne
mov
std
xchg
push
mov
jno
sbb
pop
push
push
movsl
pop
aas
adc
mov
lds
add
addl
insb
push
lcall
xchg
int
rcrb
dec
jo
jg
add
sbb
fistl
repnz
adc
sub
cmpb
sbb
adc
inc
ret
mov
fwait
mov
test
mov
icebp
mov
imul
xchg
pop
pop
test
inc
fldt
push
daa
out
shl
fabs
mov
dec
push
push
cld
sbb
iret
pop
cmc
sbb
aad
lds
cmpb
jl
mov
sbb
mov
push
xchg
jo
pop
cltd
loopne
or
pop
dec
mov
mov
enter
mov
mov
push
inc
jbe
xchg
mov
xchg
xchg
push
inc
lods
lock
xor
vpcmpeqw
iret
pop
push
mov
dec
lock
pop
lret
dec
cmpsl
adcb
cwtl
mov
incl
mov
push
xor
js
rcll
lea
andl
xchg
and
inc
and
mov
js
jno
or
test
icebp
add
and
xchg
lahf
mov
cmp
in
or
cmp
in
cmpsb
lock
sti
daa
imull
in
outsb
adc
pop
push
fstl
daa
push
sub
xlat
inc
xor
pop
adc
scas
out
mov
outsb
or
add
dec
insl
adc
pushf
and
or
and
jecxz
xor
mov
test
cmp
fwait
push
inc
and
push
push
int
lock
imul
mov
inc
add
cmpsl
test
adc
pop
ljmp
mov
push
jnp
movsb
sbb
mov
xlat
pop
mov
mov
loopne
fisubl
inc
incl
jnp
jl
mov
fcompl
xchg
mov
jge
adc
xor
cmpb
mov
mov
jl
cmp
and
inc
and
and
dec
add
loope
cmp
inc
push
and
mov
jno
rorl
jo
jmp
cwtl
xor
mov
mov
int
adc
bound
pushf
lods
adc
mov
hlt
fidivrl
and
mov
push
stc
cmpsl
cmp
repz
in
je
dec
inc
inc
pop
and
cmp
fldl
int
sub
inc
pop
xor
fucom
cli
jae
xorb
pop
push
xor
sub
add
roll
aam
sub
mov
push
ret
xor
imul
insb
pop
or
mov
and
add
and
push
cmp
inc
and
jno
mov
lcall
dec
jp
sub
mov
add
stc
ret
inc
into
lds
inc
rcr
mov
inc
sub
mov
cmpb
and
lds
sbbb
js
dec
jp
xor
push
fsubrs
add
push
xchg
adc
add
jecxz
pop
inc
lcall
mov
lea
add
add
daa
add
or
pop
sbb
int
fadds
repnz
push
xchg
or
xchg
daa
cltd
gs
call
pop
adc
xchg
out
mov
mov
mov
adc
je
and
or
scas
ja
stc
fidivs
jmp
fidivrl
add
lea
pop
loop
sub
pop
sub
dec
mov
adc
add
mov
ret
mov
clc
or
pop
mov
bound
sbbl
in
ror
enter
ret
in
pop
in
mov
fdivrp
mov
hlt
jns
adc
data16
push
jne
repnz
sub
mov
push
mov
jg
push
sbb
cmp
mov
aad
xor
inc
pop
lods
loop
mov
xchg
inc
sti
sbb
subb
fs
dec
inc
cmp
clc
jno
pop
adc
dec
nop
outsl
jns
aam
push
jae
sti
lea
aaa
test
and
dec
add
push
mov
dec
aas
mov
jae
add
mov
lock
hlt
std
mov
push
jecxz
mov
pusha
into
pop
pop
insb
xchg
popf
jmp
outsb
sbb
popf
jbe
push
outsl
xchg
aam
imulb
jne
lcall
pop
subl
stos
int3
sbbl
cli
jae
pop
ja
push
sbb
pop
mov
xchg
inc
ja
and
leave
cmc
loop
inc
add
and
cmp
mov
insl
pop
stos
xor
fcoms
insb
and
repnz
dec
mov
pop
inc
adc
mov
sahf
int3
fcomi
push
jo
mov
push
loopne
mov
testl
movsb
dec
and
pop
inc
popf
xchg
arpl
loope
xorb
jg
lock
test
mov
aaa
cmpb
mov
in
cmp
or
das
inc
jl
sbb
pop
mov
push
or
ret
inc
pop
xchg
addr16
ja
mov
jle
pushf
movsl
js
stos
inc
jno
ljmp
loop
imul
mov
mov
push
mov
push
mov
xchg
jecxz
out
pushf
inc
imul
push
mov
push
adc
gs
out
in
lds
and
or
nop
inc
mov
pop
dec
cld
loope
sbb
jne
loope
mov
sbb
or
leave
pop
xor
add
adc
rcrb
adc
mov
mov
fdivs
xlat
jae
rcr
lret
mov
jmp
popa
jl
and
add
mov
int
js
xchg
mov
aam
adc
shr
or
jmp
loopne
jl
dec
mov
jle
imul
imul
mov
scas
push
jg
sub
test
repz
cs
int
dec
xor
cmp
gs
das
inc
pop
mov
rorb
andb
inc
or
aaa
aam
lea
xor
mov
push
cmc
or
div
fisubl
pop
pop
add
cmpsb
loop
mov
int
adc
bound
rclb
pushf
lods
adc
inc
daa
adc
push
js
and
mov
push
subb
cmp
lahf
aas
pusha
jle
sbb
and
testb
inc
std
std
shll
cmp
push
out
int3
sbbl
cli
jae
imul
jbe
ret
enter
into
push
xchg
sub
cmc
es
lds
ds
pop
mov
pop
jmp
pop
jp
adc
push
dec
pop
cli
fwait
dec
adc
loope
movsb
push
and
jbe
push
sbb
testl
lret
pop
loopne
inc
jne
xor
add
sbb
stos
aaa
dec
sbb
mov
fwait
insl
pop
stc
pop
or
outsb
insb
mov
inc
addr16
sahf
notl
push
int
pop
pop
test
or
fimuls
pop
xchg
push
mov
mov
adc
popa
sbb
scas
fidivs
mov
xchg
jnp
add
mov
lock
pop
adc
insb
adc
xchg
int
repz
sbbl
xchg
adc
cmp
mov
jmp
mov
dec
xchg
int3
add
jecxz
lds
lods
xchg
or
cld
sti
daa
imull
test
adc
pop
push
fstl
daa
push
sub
xlat
inc
xor
pop
adc
scas
out
mov
outsb
add
pop
cmpsb
inc
mov
pop
fnstsw
xchg
adc
mov
loope
push
int
ret
rcrl
in
aam
rolb
sbb
mov
cli
fcomp
int3
repnz
add
mov
jnp
jns
and
mov
fs
cmp
add
push
ds
and
es
xor
out
mov
fwait
push
addr16
add
jle
out
in
repnz
add
adc
test
lret
in
push
push
add
dec
and
jp
sbb
scas
icebp
sub
inc
inc
mov
push
jmp
mov
ss
xchg
psubq
dec
xor
cmp
and
xchg
jge
in
aas
stos
mov
push
cmc
add
add
mov
push
mov
xchg
jecxz
out
pushf
inc
imul
push
mov
shrl
xorb
out
and
shrl
shrb
inc
add
repz
dec
decb
hlt
pop
push
cmp
jl
pop
shrb
dec
sub
mov
ficoms
stc
cmc
jle
loopne
or
xchg
dec
xor
sub
jl
iret
adc
lret
rcrl
xor
mov
aaa
fisubl
loop
clc
pop
jmp
ret
xchg
aas
mov
hlt
lods
fimull
jge,pn
lea
mov
dec
jb
push
cmp
stos
jnp
lock
cs
cmp
sbb
out
movsl
push
mov
mulb
push
mov
xchg
dec
mov
mov
lock
push
into
add
jge
pop
lock
out
movsl
repz
dec
xchg
in
test
jnp
aam
pop
nop
sub
pop
out
and
dec
mov
push
test
push
mov
adc
cmp
lahf
pop
and
stos
fsts
shr
mov
mov
mov
scas
xchg
jns
lahf
popl
dec
pop
fidivrl
cs
mov
lret
pop
cli
push
test
mov
xchg
push
pop
sbbb
push
test
xlat
and
lcall
jns
push
sbb
push
in
icebp
lcall
or
push
cmp
jge,pn
inc
and
clc
mov
out
jno
mov
sub
xor
xor
inc
sub
dec
mov
lods
rolb
xchg
adc
stos
inc
or
pop
pop
out
cli
mov
scas
fists
pop
push
mov
rolb
leave
fs
imul
inc
nop
sub
and
shrb
jge
testl
inc
jo
je
mov
test
sbb
outsl
cs
pop
dec
cmp
mov
push
in
xchg
jbe
push
mov
jl
mov
lret
jno
cmpsl
repnz
call
sti
fists
rep
cmp
sub
addr16
xchg
dec
mov
pop
dec
mov
push
insb
outsl
scas
adc
mov
lds
scas
inc
nop
sub
cmp
roll
or
sbb
hlt
cwtl
jl
arpl
inc
mov
sub
mul
andb
int3
rorl
mov
pop
dec
mov
jle
jne
fisubs
push
dec
jg
mov
push
arpl
xchg
test
adc
cmp
mov
pop
nop
sub
test
pop
inc
in
scas
mov
pop
loop
sbb
pop
loopne
mov
and
cld
push
lock
mov
mov
push
xchg
adc
out
push
movsl
inc
jne
cmp
daa
call
test
and
add
xchg
adc
inc
jg
es
jg
xchg
aam
xchg
mov
mov
imul
ret
test
mov
inc
js
ss
inc
mov
mov
pop
mov
jo
fildll
sub
testb
inc
out
and
mov
and
mov
and
mov
add
or
popa
je
in
mov
fdivl
jp
push
sbb
mov
add
mov
inc
or
je
mov
aad
mov
in
scas
stc
lea
adc
outsb
outsb
mov
nop
sbb
scas
adc
ss
lds
and
xor
add
cmp
jo
pop
mov
xor
cmpsl
sbb
stos
icebp
lock
pop
cltd
mov
ljmp
cli
clc
cmp
ret
lock
inc
push
cmpsl
xchg
sbb
lea
int3
xor
shrb
add
sar
aad
out
cmc
add
adc
clc
or
sbb
scas
arpl
lods
or
push
aam
mov
and
mov
and
mov
and
mov
sahf
lret
jp
in
cmp
ret
push
movsl
ffree
jl
dec
or
cmp
mov
xor
outsl
jge
pushf
sti
stos
xor
imul
sub
jo
iret
pop
adc
jne
cmp
inc
sbbb
ja
sbb
into
ja
sbb
and
add
loope
orl
push
pop
ss
fisttps
xor
dec
shl
test
xchg
lds
in
bound
push
lock
rclb
cmc
cltd
and
ljmp
jle
out
and
mov
and
mov
mov
pop
nop
sbb
jle
out
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
rcl
sarb
and
mov
and
mov
aad
xor
cmp
ja
jb
aas
outsl
mov
fnstsw
and
mov
lahf
rcl
jle
testl
in
fs
enter
call
cld
jl
out
jle
out
and
mov
mov
mov
sbb
in
stc
aad
rcr
ror
les
mov
xchg
test
int3
ror
out
jle
out
and
mov
jo
lods
not
idivl
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
inc
lods
adc
or
js
enter
xor
mov
int
cmp
push
cmp
push
push
in
dec
test
cmc
fcmovbe
cwtl
inc
mov
cli
cmp
js
ljmp
std
inc
jmp
data16
in
mov
sbb
add
mov
fldl
cmp
in
lret
dec
jg
sub
ljmp
movsl
or
in
or
fwait
fwait
inc
jecxz
aam
mov
test
inc
lahf
jb
xchg
xchg
imulb
add
in
push
imul
and
sti
test
ja
cmp
or
cmp
pop
cli
movsb
inc
xchg
in
add
cmpsb
or
dec
adc
js
int
test
pop
sbb
repnz
nop
leave
insl
push
pop
adc
data16
jmp
test
push
movsl
lock
push
lcallw
ja
stos
pop
jne
mov
mov
pop
jecxz
xchg
rol
adc
inc
clc
stc
lds
add
pushf
and
jl
xchg
jb
jae
jg
or
mov
add
ss
push
sbb
jle
cli
shr
mov
roll
mov
addr16
mov
test
lods
out
jns
or
sbb
outsb
sub
cmpl
je
movsl
movq
out
ja
imul
xor
ficompl
sub
ds
dec
aas
mov
stos
ds
popa
nop
and
rcr
xchg
divl
hlt
shrl
inc
mov
push
insb
jno
add
pop
call
jnp
aam
sarb
cli
sub
pop
pusha
dec
push
lock
out
lea
xchg
dec
cmpsl
lea
mov
in
or
fs
pop
mov
adc
cli
test
out
inc
inc
fnstcw
xchg
scas
add
insb
mov
and
sbb
test
xor
lret
pop
adc
gs
in
sub
inc
dec
fldpi
sub
les
jmp
pop
scas
lods
sbb
add
adc
sub
fisubrs
test
inc
std
ljmp
add
sti
pop
cld
lahf
pop
rolb
xchg
icebp
xor
inc
pop
int3
xor
cld
pop
cmpsb
out
in
adc
inc
shrb
inc
lods
jge
xor
or
adc
mov
cmp
or
cmp
pop
adc
sbb
shlb
mov
and
nop
ds
mov
aam
hlt
mov
shr
xlat
pop
or
cmp
out
xchg
je
dec
pop
or
imul
pop
dec
cwtl
pop
mov
out
cmp
mov
rcr
js
mov
sub
aam
xor
add
ljmp
pop
scas
push
push
lcall
leave
out
dec
in
roll
mov
xchg
inc
enter
sub
xchg
xor
dec
sub
sbb
lods
dec
jns
dec
icebp
push
jecxz
add
or
mov
add
lock
addr16
sbb
cmp
lock
insb
movb
and
scas
fdivrs
stc
lret
add
push
jbe
mov
mov
pop
mov
sub
adc
and
inc
ret
fildl
add
xor
nop
sbb
mov
cs
inc
sbb
inc
into
leave
pushf
push
lods
enter
and
add
pop
loopne
inc
mov
rolb
aam
and
jecxz
scas
xchg
js
xlat
dec
mov
inc
mov
movsb
clc
test
rcll
inc
cmc
sar
add
xchg
insb
dec
scas
mov
adc
call
das
and
xor
jg
repnz
jmp
sub
cltd
cmp
add
pushf
or
dec
sub
out
push
adc
sbb
jl
call
out
cli
push
push
arpl
jg
cltd
jo
aas
cwtl
pusha
mov
or
ja
pop
outsb
popf
das
pop
mov
fcmovnu
dec
test
cld
pop
subb
cmp
shlb
adc
jbe
std
shll
jo
fisubs
jno
sbb
push
mov
lds
scas
cwtl
and
xchg
jnp
xchg
in
push
pop
push
out
xchg
nop
and
ret
aaa
mov
sub
pop
inc
push
mov
sbb
xchg
cltd
fdivs
and
or
push
adc
pop
fwait
pop
sbb
mov
xor
or
or
out
xor
inc
sub
cmpb
push
subl
push
outsl
daa
or
repnz
or
cmp
mov
and
mov
jp
aas
push
test
outsb
push
fcompl
sbb
enter
stc
and
in
push
mov
ljmp
dec
popa
ret
jl
mov
gs
mov
add
daa
push
inc
rcll
incb
mov
test
push
lret
test
mov
in
lret
pop
and
xchg
insb
mov
inc
pop
lcall
adc
dec
sti
pushl
pop
test
add
sbb
inc
xchg
adc
in
xchg
out
repz
in
dec
mov
stc
pop
jmp
jns
adc
pop
sub
loopne
incl
dec
xchg
lods
dec
push
insb
inc
cltd
je
adc
cmp
int
pusha
cmp
and
loopne
jbe
rorb
cmp
inc
xchg
stc
push
sub
fdivrs
ficoml
les
clc
sahf
sbb
adc
daa
push
push
adc
adc
xchg
mov
mov
ss
adc
add
mov
pop
leave
js
movsl
sbb
ficomps
mov
cmp
push
dec
add
lods
cmp
test
divl
bound
daa
in
daa
fld
inc
and
outsb
popa
push
mov
push
negl
xchg
xchg
mov
mov
jl
cmp
jge
dec
cltd
rclb
arpl
push
lods
fadd
xchg
lods
subb
jnp
pop
loop
mov
mov
dec
jmp
int3
and
loopne
enter
add
incl
lret
sbb
lcall
std
mov
ret
jnp
ret
hlt
xor
sub
outsl
pop
adc
lds
cmp
pop
fdiv
pop
pop
pusha
sbb
fidivrs
lret
pop
jbe
sahf
add
nop
pop
sbb
aam
dec
xor
sbb
das
in
fadd
scas
mov
xor
fcoml
cltd
test
push
adc
stos
pusha
jnp
push
std
fxch
lret
fidivs
sti
aam
mov
data16
syscall
adc
daa
insl
cmp
sarb
fwait
ss
fidivl
adc
scas
jmp
dec
and
insb
lahf
insl
pop
inc
gs
test
inc
cli
pushf
and
dec
jne
push
nopl
pushf
mov
jbe
inc
sti
push
mov
fxch
fnstcw
gs
dec
or
sahf
mov
push
mov
push
paddb
fisubl
add
cmp
and
adc
clc
sbb
jl
outsl
pop
mov
cld
xor
das
mov
cmpsb
aad
jg
cmpsb
mov
sub
fldl2t
mov
std
aaa
mov
dec
push
pop
cmp
push
mov
loope
in
in
push
cmpsb
dec
ja
icebp
pop
sbb
or
jecxz
dec
lods
mov
ja
push
sbb
mov
jg
imul
add
popf
roll
cmp
scas
ds
scas
ds
scas
xchg
test
stc
push
sub
fbstp
nop
push
sahf
cwtl
xor
jo
add
ja
mov
pop
or
adc
push
cld
mov
push
pop
or
mov
sarl
xchg
bound
addr16
popf
sahf
stos
rclb
adc
and
add
test
xor
aad
mov
popa
fsubr
lods
sbb
insb
adc
push
in
adcb
xchg
push
rorb
andl
stos
add
dec
xchg
push
fisttpll
rolb
std
mov
cwtl
mov
add
pop
jmp
jno
aam
stos
adc
add
add
mov
mov
mov
inc
push
in
insl
fistl
mov
aad
xchg
push
sbb
clc
paddq
movsl
mov
mov
gs
stos
clc
inc
lods
jno
lea
pop
test
mov
rcll
pop
inc
mov
xchg
jmp
sub
cmp
mov
test
or
pop
inc
push
sbb
hlt
mov
mov
xor
out
pop
jmp
btl
mov
cli
cmpsl
mov
lock
mov
stos
cmp
xchg
ss
pop
lock
mov
push
jb
repz
shlb
aad
out
xor
adc
and
scas
or
leave
lea
loop
mov
ret
lret
push
or
mov
jmp
jmp
mov
ret
aas
cmp
xchg
lcall
cwtl
inc
dec
ficoms
adc
add
pop
pop
inc
and
outsl
dec
mov
daa
mov
and
and
cmp
inc
xlat
mov
or
popf
sbb
std
push
mov
das
bnd
mov
xchg
cmp
loopne
in
sub
daa
repz
arpl
mov
mov
mov
add
push
pop
jl
iret
mov
mov
xorl
cmp
ja
sub
push
int3
ret
bound
sub
jnp
mov
loop
pop
xor
cmp
addr16
or
into
arpl
mov
mov
adc
ds
ds
inc
gs
adc
js
pop
out
jg
rolb
sub
insb
sub
jo
inc
and
imull
sub
shll
sub
push
add
add
add
test
pop
in
daa
sbb
gs
sahf
xor
icebp
lcall
dec
and
and
pop
jmp
jle
inc
subb
iret
mov
inc
mov
push
jnp
sub
cs
dec
shlb
nop
stc
pop
fcmovbe
ja
inc
or
push
repz
push
xor
lret
xlat
xchg
in
pop
cwtl
mov
push
addr16
sbb
cli
sbb
add
sbb
mov
xchg
and
dec
in
adc
cli
pop
adc
dec
fcompl
das
shrb
mov
lahf
cmpsb
iret
out
movsl
bound
cmpsb
jo
into
push
and
mov
lock
and
ljmp
jae
insl
test
push
jmp
mov
retw
testl
cmp
inc
lods
and
xchg
sbb
xchg
mov
leave
lret
push
or
je
pop
jo
nop
cld
dec
nop
aaa
pop
ja
sbbb
fcoml
lea
sbb
lds
psllq
lods
mulb
dec
jae
sub
les
sub
pop
mov
sub
mov
mov
leave
xor
out
lea
push
subb
jae
dec
adc
mov
js
push
movsb
push
push
sbb
mov
dec
js
inc
and
cld
xor
mov
es
pushf
pop
sub
push
lock
mov
es
xchg
test
sub
jo
jae
mov
and
mov
sbb
shl
sub
cld
pusha
mov
fdivrs
mov
xchg
sbb
ljmp
nop
test
jmp
pop
jb
pop
push
out
or
rcr
mov
jecxz
test
mov
lahf
xlat
testl
mov
outsb
mov
push
jge
xchg
xor
or
popl
and
cmp
mov
push
inc
dec
lcall
and
iret
and
mov
daa
inc
imul
or
std
mov
or
jmp
shlb
add
push
lods
pop
or
imull
addr16
fcmove
sub
lcall
push
fldt
scas
dec
inc
xchg
pop
les
addr16
xchg
sub
mov
sbb
mov
jecxz
pop
frstor
mov
lea
mov
sub
popa
insl
and
ret
jbe
xchg
enter
loopne
popa
mov
push
add
xchg
mov
cmc
arpl
mov
pushf
or
std
int
xor
xor
adc
mov
les
and
shll
int3
mov
xchg
in
stos
loope
push
inc
and
jg
xchg
dec
out
adc
dec
and
xchg
sti
into
cmp
sahf
cld
dec
jge
or
push
add
int
cs
or
sbb
sahf
inc
xorl
arpl
add
and
inc
jb
sub
into
push
dec
addr16
sub
imul
sarl
leave
jno
xor
xchg
adc
popa
mov
sub
std
and
mov
fcoml
jecxz
ret
paddusw
xchg
fwait
iret
push
or
inc
mov
push
sbb
stos
aas
mov
sbb
pop
iret
sub
adc
pop
jle
mov
adc
cltd
jo
in
or
ja
jnp
or
mov
aad
mov
lea
mov
mov
imul
out
cmp
xor
jb
out
ret
or
stos
mov
or
jg
mov
popa
inc
mov
xchg
addl
push
notb
and
jae
mov
mov
sahf
cltd
jle
rclb
in
data16
xlat
mov
lods
stc
jmp
daa
fbld
lods
in
pop
aaa
mov
imul
aas
mov
mov
add
js
fs
jne
mov
lea
mov
lret
mov
xor
jne
xor
dec
aam
adc
outsl
cmpb
ss
mov
cmp
notl
ret
cmpsl
cwtl
push
mov
in
lea
repnz
and
xor
lcall
cwtl
clc
pop
sub
sbb
out
stos
jnp
mov
cmp
ljmp
inc
shlb
mov
pop
inc
subb
mov
mov
sahf
stos
xor
jnp
fwait
pop
xchg
movsl
cmpb
mov
aad
fidivrs
popa
lahf
addr16
cmp
add
adc
notl
pop
repz
shrl
lcall
xchg
and
in
fwait
pop
dec
psllq
nop
or
stos
cmp
jne
icebp
lods
xorl
fildl
pop
cld
je
xor
xchg
jl
out
fsubrl
jle
hlt
add
stc
dec
clc
loop
hlt
xor
lods
inc
pop
pop
mov
xchg
sbb
cmp
dec
mov
cs
mov
cli
xchg
or
lods
popa
and
jge
lret
stos
js
nop
int
dec
aaa
push
mov
nop
icebp
fdivrl
or
daa
sahf
and
or
movsb
notl
jecxz
and
fwait
cli
nop
popl
bound
dec
pop
dec
mov
cwtl
add
jmp
fidivrs
mov
sub
popf
mov
ja
mov
mov
gs
clc
dec
leave
movsl
push
shl
rcrl
ret
testl
fldcw
push
mov
push
or
cs
mov
cmpsb
sbb
mov
push
mov
mov
cmp
jae
ja
lea
stos
pop
loop
insl
jge
dec
cs
int3
xor
cmp
cmp
loopne
fidivs
add
iret
xlat
lret
pop
insl
mov
sti
aad
movsl
cmpsl
mov
in
sbb
cmp
xor
sub
and
loopne
enter
stos
cmpsb
jo
loope
jecxz
xor
adcb
ss
xor
mov
sbb
and
mov
int3
das
pop
jns
dec
push
cmp
push
adc
or
sub
out
es
add
mov
pop
adc
lret
mov
mov
adc
lret
dec
popf
xor
mov
cmpb
pop
mov
popa
pop
xchg
test
or
xchg
in
jns
stos
mov
or
pop
xchg
jl
cmpl
cmpsl
push
push
cmp
in
fwait
in
sar
vphsubbw
xor
mov
sbb
imull
arpl
cmp
add
leave
adc
aaa
push
push
add
or
jp
lock
aas
xchg
sbb
fs
fldt
std
fistl
mov
sub
jmp
pop
mov
je
icebp
imul
pop
test
push
aad
incl
adc
sub
lret
clc
push
or
sbb
mov
faddl
stos
lahf
mov
gs
lock
aad
test
and
cli
mov
pushf
out
jae
sub
inc
pop
push
daa
mov
leave
stc
incb
jecxz
cmp
movsl
xchg
ss
adc
or
inc
inc
je
mov
loop
cmp
sub
inc
enter
mov
orl
xchg
push
and
aas
sbb
adc
sarl
xchg
mov
or
dec
roll
imul
fisttps
xchg
ret
lea
lahf
mov
fldt
in
xchg
push
lock
fcomip
cltd
daa
lret
andb
int3
fwait
pop
pushf
movsl
in
pcmpgtd
ret
testl
pop
sarl
mov
mov
xor
mov
cs
cmp
xor
inc
gs
sti
test
test
nop
mov
add
fcoms
fucomp
repz
lds
xchg
mov
cmpsb
int
sub
add
adc
push
xor
jbe
jno
push
leave
shlb
fnsave
or
dec
outsl
nop
dec
aas
adc
fwait
jmp
ljmp
inc
push
lret
popa
pusha
sub
movl
pushf
jae
inc
pop
dec
arpl
test
push
mov
cmp
sbb
mov
dec
in
mov
add
ss
test
pusha
aas
mov
add
mov
or
xor
lea
mov
daa
jns
cltd
sbb
daa
hlt
fists
ja
push
imul
shl
sbb
dec
mov
and
stos
test
push
pop
ss
fimull
stc
xchg
cmpsb
push
cli
enter
testl
jno
cmp
or
cmp
ljmp
fsts
in
sti
push
mov
inc
or
rcl
cmpsb
nop
dec
dec
dec
xchg
mov
mov
lds
pusha
lret
test
pop
call
mov
add
ss
cwtl
mov
pop
pop
push
and
or
mov
mov
test
add
mov
mov
call
mull
js
mov
je
faddl
leave
cmp
fs
imul
sub
lock
mov
ja
pop
add
mov
jle
loop
dec
loopne
aas
pop
fiaddl
fnsave
int3
xchg
xchg
arpl
mov
mov
push
testb
jbe
addr16
jge
jnp
in
shrl
cli
mov
inc
lcall
or
push
sub
out
mov
xor
std
or
push
out
jno
sbbb
das
addr16
jecxz
mov
pushf
jae
jb
xchg
add
mov
xlat
into
loope
test
jo
xor
hlt
mov
es
cltd
and
lods
adc
or
adcb
or
mov
mov
call
stos
dec
and
and
pop
int
ret
jne
jbe
push
adc
std
and
push
in
insl
or
jle
inc
mov
jle
xor
rcl
fwait
insl
js
mov
int3
and
dec
xor
push
jbe
enter
imul
popf
ljmp
repnz
mov
and
push
xorl
or
cmpsb
mov
and
pop
inc
pop
dec
clc
lods
xor
int
movsb
fwait
push
lret
test
or
stos
mov
cmpsb
out
das
cltd
paddb
push
mov
es
xor
shlb
mov
out
fdiv
pop
pop
adc
pop
add
adc
push
xchg
add
repz
cmp
or
fistl
jnp
cmpsb
push
jmp
mov
xor
pop
sub
sub
mov
nop
insb
cmp
sub
stos
out
sbb
cmp
dec
pop
insl
push
pop
cmp
sbb
ja
or
scas
lret
lea
cmp
add
xchg
add
lahf
mov
lcall
adc
leave
add
cmpsb
shld
stos
xchg
ja
lcall
sti
data16
jge
insl
mov
sub
popf
aam
mov
enter
in
arpl
outsb
pushf
bswap
pop
ds
cld
pinsrw
out
pushf
or
and
pop
push
and
stc
xor
mov
sub
sub
mov
adc
dec
push
enter
sarb
stos
add
sti
bound
adc
sbb
movsl
xor
fsubrl
imul
cmc
add
pop
sti
popa
data16
cmp
in
adc
xchg
pop
push
into
xchg
or
pushf
mov
or
adc
dec
and
push
mov
inc
or
or
pushf
inc
loop
fbstp
inc
xchg
mov
pop
mov
or
test
stos
ret
xchg
jnp
ja
fwait
xor
pop
and
loop
mov
in
int
sub
xor
fidivrs
cs
add
jge
repnz
mov
fcmovne
addr16
and
test
pop
popf
or
push
xor
lret
mov
push
push
and
mov
rol
scas
addr16
movb
out
add
pop
mov
xchg
adc
jmp
adc
mov
ret
push
push
dec
jo
xchg
push
cmp
sarl
fcomps
frstor
sbb
int
mov
enter
fnstcw
in
jecxz
and
adc
std
repz
std
pop
mov
int3
out
push
ss
popf
aas
push
ficompl
inc
ds
push
daa
xor
xor
out
or
cmc
mov
test
rcr
insl
addr16
xlat
inc
insl
mov
repnz
add
nop
sub
mov
imul
icebp
fisttps
out
mov
jnp
inc
aas
pop
mov
xchg
subl
add
jo
inc
adc
push
mov
add
hlt
push
imulb
rorb
or
popa
pop
pop
aad
add
and
or
pop
outsl
push
out
jle
push
sbb
xor
mov
pusha
cwtl
hlt
stos
pop
xlat
cmp
pop
in
lcall
lret
push
jl
sahf
fnstsw
inc
pop
adc
lods
pop
pushf
into
or
cltd
ss
pop
jno
outsl
xchg
pop
repz
lret
pop
adc
fcoms
imul
or
adc
and
inc
or
pop
push
stos
xor
filds
add
sub
ss
lds
sub
jl
adc
outsb
pop
inc
sbb
mov
rorb
mov
dec
in
ja
mov
rcrb
or
inc
lcall
les
push
insb
aaa
xchg
daa
mov
adc
je
addl
daa
sbb
inc
xchg
rorb
std
dec
jbe
fcmovbe
in
out
pushf
and
in
stc
jmp
stos
pop
imull
or
sbb
adc
or
sub
add
jmp
sbb
pusha
cmp
sahf
arpl
adc
aas
pop
mov
jle
dec
jle
push
cmpsl
sbb
ljmp
dec
pop
sarb
decl
fsubs
data16
xchg
shrl
shl
xchg
mov
mov
out
lret
dec
out
cmp
sub
adc
cmpsl
xchg
pop
inc
adc
mov
inc
and
sti
push
xlat
sbb
lahf
mov
mov
pop
insb
xor
dec
xor
sbb
je
add
cmpsl
pop
jae
rorb
inc
pop
push
sbb
call
ja
jno
enter
ret
daa
out
add
and
pop
test
int3
repnz
jae
push
imul
dec
test
or
mov
clc
push
rorl
stos
inc
pop
cld
sub
repnz
fs
xlat
nop
mov
pop
ja
je
cmp
fs
adc
mov
mov
fistps
decb
xlat
cmp
dec
mov
xchg
fimull
std
jecxz
or
data16
and
in
push
les
loopne
gs
es
push
into
scas
movsb
xchg
and
jle
cmpsl
pop
dec
frstor
jns
lahf
or
out
outsl
jecxz
fwait
push
lock
mov
jle
sub
inc
sub
jb
mov
hlt
pop
xchg
sub
sbb
dec
movsb
arpl
mov
jno
dec
fdivs
jb
shl
sub
pop
ret
pop
imul
fiadds
and
xor
cld
inc
xlat
loop
mov
mov
or
jo
arpl
mov
mov
imul
test
aam
push
mov
lods
lahf
lea
aaa
mov
mov
outsb
in
cwtl
xchg
mov
pop
hlt
imul
jle
lret
inc
ja
test
cmp
lretw
mov
fwait
sahf
dec
pusha
dec
in
shrl
rorl
cltd
adc
mov
xlat
lods
scas
or
adc
jmp
mov
mov
test
out
sub
negl
clc
cmp
mov
pushf
xchg
xchg
lcall
inc
scas
sub
jae
cmp
jo
cmp
add
xchg
rorl
or
into
rcr
cmp
repz
mov
sti
test
adc
adc
hlt
mov
push
test
push
icebp
scas
xchg
bound
fcomip
or
push
xor
xchg
add
ret
add
mov
add
ret
icebp
ficompl
pop
out
in
dec
in
xor
daa
xlat
add
std
scas
das
lahf
das
fldenv
insb
sub
stos
or
sub
mov
sub
xchg
adc
xor
lock
loope
mov
iret
or
or
lea
shl
mov
fs
mov
jecxz
das
jno
sub
add
lock
sbb
test
cmpl
jmp
or
pop
lods
jb
in
in
in
inc
fwait
imul
lret
xor
ficomps
lods
fmuls
and
shl
mov
bound
inc
and
jle
mov
pop
cmpsl
inc
fldt
imul
pop
sbb
xchg
xchg
arpl
xchg
or
es
clc
test
adc
pop
ret
sti
push
out
cmp
movsb
fwait
test
fcmovu
or
daa
sub
dec
push
and
cmp
loop
in
xor
ret
or
jae
adc
sbb
mov
sbb
xchg
push
repnz
mov
mov
cmp
dec
pushf
nop
into
sub
fldenv
mov
or
std
and
adc
push
cmc
stc
sub
add
push
and
mov
cmp
cli
addr16
push
mov
outsb
call
dec
and
push
mov
je
sub
push
mov
pop
xchg
in
cmp
add
loopne
insb
sbb
cli
shl
in
add
adc
in
jnp
imul
push
adc
mov
sbb
push
add
adcl
shlb
loope
lret
sbb
mov
and
movsb
je
push
pop
add
pusha
push
adc
inc
and
aam
fwait
add
jle
and
mov
jo
fimuls
rcl
xor
cmp
aam
int
lods
rorb
and
out
scas
pusha
enter
xor
xchg
mov
test
dec
xor
xchg
fldt
add
pop
lock
call
sbb
dec
xor
aad
pop
push
fimuls
out
adcl
pop
ret
repnz
mov
outsl
rcrl
mov
in
dec
push
xchg
xlat
pop
cmpsl
iret
mov
daa
pop
pop
adc
shlb
inc
dec
ja
cmpsb
jnp
push
ret
push
call
fistl
push
lea
movsl
lahf
sub
ds
jg
insb
mov
hlt
mov
icebp
mov
jns
jnp
call
xor
and
in
jle
mov
mov
sarl
sbb
scas
shr
mov
mov
push
cld
mov
lods
push
xor
aaa
sbb
jb
and
push
or
jns
movsl
xchg
andb
lock
mov
sbb
mov
movsl
js
sub
sahf
stos
xchg
jg
mov
and
mov
fldl
mov
hlt
push
and
pop
into
les
ja
xchg
and
mov
mov
xor
cs
in
add
inc
sti
leave
je
in
sub
xor
imul
in
fs
insl
cmpsb
dec
out
xor
addr16
pop
xlat
cmpsb
cmp
xchg
xor
inc
lcall
pop
lods
xchg
outsl
mov
add
jg
xchg
addr16
mov
pop
cld
lcall
imul
cld
inc
xor
out
push
add
sti
out
sub
pushf
in
sbb
cmp
push
jle
mov
sbb
add
jo
and
ljmp
imul
in
xlat
gs
adc
sbb
clc
cmovns
xchg
shrl
pop
fcompl
add
movsl
outsl
bound
cmp
push
pop
test
std
stos
xor
jo
mov
test
push
dec
mov
xchg
xor
lock
outsl
cmp
add
pusha
sbb
jns
addr16
insb
and
or
xchg
aas
push
int3
mov
xchg
aad
ljmp
pop
cmp
push
movsl
jle
pop
sub
or
daa
sbb
je
rorl
jno
hlt
fs
dec
cmc
mov
pop
jecxz
idiv
out
addr16
xchg
je
lret
dec
or
lea
cli
xchg
cmp
in
dec
cmc
pop
std
pop
and
xlat
xchg
fs
imul
adc
inc
mov
add
sub
arpl
lock
into
jo
gs
sbb
adc
int
inc
jbe
popa
sub
cmp
mov
ja
ret
je
xchg
hlt
sub
jmp
sbbb
aad
cmpsb
push
xchg
adc
je
xor
repz
cmp
outsb
or
std
ja
mov
xor
shl
iret
mov
aad
inc
dec
pop
lods
stos
sbb
movsb
in
push
cli
fs
adcb
lods
cmp
and
mov
adc
jecxz
int3
repz
xor
aam
shl
jne
add
in
int
in
lods
sub
idivl
adc
fmuls
xchg
rolb
jae
scas
rcpps
add
cli
int
jge
orl
lret
xor
pop
or
fcomi
pop
fwait
lds
push
jno
ljmp
dec
dec
enter
out
fwait
stos
shlb
inc
mov
push
leave
imul
add
popf
lahf
pmaxub
xor
stc
and
cmc
and
fbld
fcoml
jge
sbb
aas
sahf
daa
or
xor
cmpsl
loope
in
sbb
dec
pop
iret
jnp
mov
lcall
adc
mov
jns
enter
lods
inc
mov
dec
mov
es
jecxz
pop
repnz
jl
pop
jmp
in
sub
into
dec
pop
adc
cli
push
loopne
pop
push
das
out
int
cs
push
xchg
jl
dec
lods
mov
or
mov
cs
stos
push
cli
pop
jl
and
fwait
mov
dec
aam
inc
adc
nop
jg
adc
mov
popf
movsb
nop
lds
or
xor
test
cmp
shlb
sub
cmpsb
jo
dec
mov
pusha
imul
xchg
adc
push
imulb
mov
mov
iret
fdivrl
adc
sarl
sbb
sub
icebp
sub
xor
les
or
leave
loope
cltd
xchg
pop
nop
lds
sbb
jnp
fcomi
lcall
xchg
pop
jnp
cmp
fwait
pop
enter
out
movsb
adc
mov
addl
jne
pop
add
das
mov
int3
movsb
vmovhpd
mov
popf
pop
mov
out
dec
mov
in
loop
mov
dec
ss
xchg
jbe
popa
mov
stos
clc
test
push
outsb
xor
and
xchg
add
call
into
sti
loop
sbb
ret
xchg
stos
addr16
fstl
mov
repnz
mov
in
xor
out
in
adc
xlat
jnp
aaa
adc
shll
push
aad
mov
cld
dec
jae
sar
sub
xchg
ljmp
aas
jo
push
sub
inc
stos
fcomp
push
jne
aaa
pusha
into
add
adcl
jge
daa
scas
or
jecxz
rolb
xor
push
dec
cmpsl
shrb
cmp
nop
aam
cmp
cmpsl
xor
adc
fidivs
insb
push
stc
jp
inc
xchg
push
hlt
lea
hlt
into
pop
xchg
lahf
or
xlat
cmc
push
outsl
xor
adc
out
in
inc
cmpsb
cmp
loopne
jecxz
pop
and
mov
dec
nop
mov
push
test
jle
notb
xchg
nop
repnz
cltd
in
xchg
dec
inc
dec
or
and
lcall
sbb
add
adc
mov
jp
xchg
aam
shr
xchg
and
test
outsl
mov
sub
mov
setns
aam
cmp
pushf
js
jns
mov
pop
mov
xor
out
or
ljmp
push
jbe
inc
mov
mov
roll
mov
cwtl
dec
dec
incl
cli
or
test
mov
sbb
ja
fnstenv
mov
clc
lcall
arpl
lds
sarb
cmp
sahf
sti
xchg
repz
jle
ret
out
cwtl
mov
mov
jecxz
fcmove
sub
out
inc
pop
sti
and
cltd
mov
push
cmpl
aam
cld
fs
xor
sbb
and
mov
adc
xchg
outsb
sahf
jmp
xchg
xchg
jnp
push
cmpsb
push
jbe
orb
sbb
jb
lea
ja
inc
popa
mov
call
mov
rol
inc
popf
daa
mov
lcall
scas
mov
mov
xchg
ja
push
popa
pop
and
in
shll
pop
lods
mov
pushf
cli
les
pop
and
mov
pop
jns
sbb
cs
cltd
cmpsl
xchg
jge
mov
push
sbbb
cld
add
aad
shll
sub
lret
dec
cmp
repz
ds
push
daa
cmpsl
sub
rcrl
adc
loopne
je
lret
xchg
shr
scas
cwtl
pop
scas
pop
or
push
insl
sbb
mov
pop
ret
inc
in
bound
out
sbb
xor
mov
out
pop
pop
xchg
xchg
mov
out
push
pop
xor
xchg
lock
or
shrl
shll
clc
jp
repz
nop
roll
dec
or
add
scas
mov
push
or
loopne
jle
cltd
cmp
icebp
cltd
pop
arpl
inc
pop
push
jne
push
insb
shl
mov
add
and
add
jno
sub
sbb
test
stos
insb
idiv
stc
cmpsb
je
scas
sti
fbstp
xchg
in
cmp
adc
jg
daa
inc
sti
ja
icebp
push
jp
mov
out
test
notb
jle
clc
aam
jns
clc
fsubp
mov
dec
fldenv
add
xchg
sub
fstl
pop
repnz
add
inc
scas
push
std
movsb
push
mov
rcl
ds
das
ss
xchg
in
je
dec
hlt
inc
cmovne
inc
rol
sub
or
loopne
popf
aad
pop
cli
testl
les
pop
clc
pop
shll
ret
into
jg
bswap
lret
cmc
lahf
cmp
inc
cltd
std
dec
mov
fsts
lcall
stc
mov
stos
jne
in
xchg
mov
add
push
or
add
push
scas
lahf
in
push
fwait
mov
mov
lahf
mov
add
mov
les
jmp
popa
mov
leave
iret
mov
mov
inc
mov
imul
jl
fcomps
loopne
rol
aam
or
mov
inc
mov
add
add
sbb
xchg
sub
pop
sub
sub
xchg
clc
and
mov
sub
fdivs
add
push
pop
pop
pop
movsl
dec
and
lahf
dec
call
adc
fisubrs
out
stc
hlt
adc
out
pusha
lret
aas
mov
mov
push
push
rcrb
or
out
cmp
adc
loope
rolb
in
into
push
push
mov
push
out
movsb
mov
dec
pop
enter
push
in
inc
shlb
mov
loope
divb
xor
mov
mov
ja
cltd
xchg
mul
mov
ret
daa
in
negl
test
xor
xor
mov
repz
cmp
jle
addr16
icebp
gs
mov
lods
ret
push
push
and
pop
jl
cmc
sahf
push
sub
cmp
and
mov
dec
lcall
outsb
mov
xlat
daa
xchg
mov
test
mov
add
adc
loop
insb
xlat
das
sub
mov
and
mov
aaa
xor
sub
cli
adc
inc
aad
xchg
dec
fistpll
xchg
bound
jo
inc
lods
mov
outsb
cmp
cld
mov
push
call
dec
mov
imul
shrd
inc
push
dec
ret
fmull
loopne
cmp
in
push
dec
mov
jb
jo
inc
jne
mov
icebp
call
negl
inc
int3
orb
cld
imull
fwait
lea
pusha
sahf
push
cmpsl
dec
xchg
ds
pop
and
aad
lcall
jbe
mov
mov
cmp
inc
mov
mov
test
repnz
xchg
or
push
inc
pop
xchg
movsl
scas
mov
movsb
sbb
pushaw
pushf
cmp
ss
xor
pop
or
xor
or
mov
jae
jge
sub
mov
test
fs
jmp
movsl
and
xchg
push
out
sbbl
das
bound
cli
sub
movsb
adc
outsl
xor
stos
mov
xchg
popa
cwtl
insb
cmpsb
and
pop
sub
jp
lods
or
imull
mov
outsb
addl
jecxz
pop
arpl
inc
or
aam
outsb
mov
pop
lcall
imul
cld
testb
dec
rclb
or
xchg
das
fadd
mov
scas
mov
out
stc
sbb
bound
push
bound
pop
sbb
xchg
aaa
sar
roll
test
bound
pusha
or
and
add
lahf
lahf
add
and
jp
inc
mov
mov
mov
inc
sub
mov
cs
stc
dec
adc
xchg
mov
jnp
ficomps
rcrb
mov
out
pop
popa
xlat
mov
sbb
std
leave
pop
in
cmp
push
push
or
cmp
mov
andl
fcoml
fdivl
repnz
mov
push
lds
fdivl
icebp
and
and
cld
xchg
pop
jb
mov
ret
nop
enter
movsb
pop
insl
sub
add
jns
push
add
mov
jbe
dec
js
xchg
adc
add
lahf
insb
adc
loop
andl
popa
int3
int
lret
mov
xchg
lea
dec
adc
out
pop
std
push
dec
icebp
lret
arpl
and
push
cmpsb
dec
add
imul
pushf
add
movsb
popf
adc
push
cwtl
icebp
or
adcb
add
push
push
sub
in
icebp
cmpsb
test
or
xlat
adc
je
flds
sbb
mov
sub
push
mov
sbb
push
cmp
addl
mov
adc
xchg
push
in
adc
adc
pop
int
push
push
pusha
mov
dec
jp
xor
mov
mov
out
push
icebp
mov
scas
or
repnz
in
leave
mov
pop
pop
inc
daa
mov
mov
js
out
or
outsb
ret
mov
negl
sbb
cmp
push
pushl
jo
iret
mov
inc
and
rorb
push
mov
lahf
in
lods
stc
idivb
scas
shrb
xor
cvtps2pi
cltd
shll
call
add
aas
aam
mov
out
push
in
pop
data16
in
xor
add
inc
int
sbb
stos
sbb
adcb
enter
sbb
push
sbb
leave
adc
push
cmpsl
fcoml
es
sbb
movsl
outsb
ljmp
dec
imul
sbb
in
cmp
enter
rolb
popf
cli
and
xor
nop
lret
add
add
clc
dec
dec
into
push
cli
pop
jno
push
mov
pop
fiadds
fnsave
adcl
or
pop
mov
xlat
in
push
test
aaa
push
sub
mov
lods
fcmovnbe
lds
cmp
loop
inc
pop
jns
jnp
iret
in
sar
out
adc
mov
loope
cmpsb
ret
dec
inc
mov
dec
std
bound
call
test
cmc
and
mov
push
stos
mov
jecxz
pusha
push
sahf
in
jmp
jg
lcall
inc
and
ljmp
and
adc
xchg
scas
xchg
or
mov
cmp
enter
mov
push
xchg
xchg
jno
pop
bound
or
ds
out
pop
imul
cmp
paddsw
imul
cmc
je
mov
dec
xor
adc
push
test
movsb
or
popf
aam
jl
adc
in
pop
jnp
inc
ja
mov
sub
jae
jmp
jns
cmp
aam
push
lods
scas
popa
lea
sbb
pop
mov
scas
sub
rolb
stc
sbb
scas
addr16
sbb
nop
dec
sbb
pop
pop
leave
jg
daa
pop
xlat
push
push
imul
xchg
ficoml
pusha
icebp
test
sbb
sti
or
pmulhw
mov
rclb
cmp
je
ret
movsl
shll
icebp
pop
sbbl
out
sub
adc
push
das
and
lahf
mov
xchg
cmpsl
lret
in
add
fwait
pop
out
int3
neg
and
out
pop
sti
popa
into
dec
push
fistps
dec
std
lret
pusha
ficoms
jge
mov
pop
sub
stos
cmc
mov
mov
adc
insl
jle
adc
mov
loop
jl
xchg
sub
sub
inc
inc
jbe
repnz
dec
in
int3
pop
sub
les
arpl
sbb
int
movsb
mov
and
mov
scas
in
arpl
sbb
aaa
fildll
rcrb
lret
mov
mov
and
aaa
or
scas
test
outsl
adc
adcl
or
push
mov
loopne
inc
das
mov
mov
aad
jno
sbb
cmp
loop
inc
cwtl
bound
stos
sahf
jb
dec
pusha
cs
mov
stc
sbb
mov
scas
addr16
mov
jg
or
outsb
push
or
jne
mov
int3
jmp
mov
or
mov
mov
jns
les
or
mov
mov
mov
dec
push
int3
mov
and
mov
aas
jmp
iret
dec
out
loope
dec
fcomps
xchg
es
sub
andl
add
flds
inc
repz
sti
std
inc
mov
lock
ljmp
push
and
adc
fdiv
sub
add
shlb
aas
xor
mov
hlt
scas
ja
in
sub
xchg
ljmp
add
push
js
push
push
jecxz
adc
int3
insl
mov
cwtl
xor
inc
das
lock
mov
inc
dec
loope
out
fs
pop
rcll
adc
dec
xchg
popf
popf
adc
xlat
cmp
gs
adc
out
add
jne
nop
rclb
jno
adc
addr16
pop
sub
inc
jg
clc
push
lds
lock
jbe
je
mull
sub
mov
push
and
repnz
popf
jmp
mov
lret
adc
jmp
dec
jo
jae
add
inc
dec
hlt
xchg
loop
das
imul
nop
cmp
pop
ret
mov
jge
in
inc
inc
pop
fdiv
xor
and
jo
int3
mov
dec
and
mov
es
lds
repz
fdivrl
mov
dec
loopne
fistpl
adc
push
adc
insl
cld
ja
roll
test
shlb
xchg
test
scas
pop
push
fildl
mov
sbb
je
push
push
cmp
sub
insb
or
aas
mov
insl
aaa
bound
pop
rolb
pop
push
mov
fcomps
mov
dec
lret
movsl
arpl
mov
xchg
fldcw
cmp
dec
mov
mov
jge
jae
mov
ljmp
test
sub
lods
xor
mov
out
push
sbb
stos
xor
adcl
pop
jo
pop
fcomp
cld
popf
dec
inc
or
shll
enter
aaa
push
cmc
push
pop
adc
mov
movsl
popf
push
shlb
sub
shl
sbb
int3
ss
sub
mov
mov
mov
mov
cld
nop
push
xchg
cli
xor
out
push
mov
cmc
dec
aad
lods
dec
pop
cmp
or
shrl
fistpll
aad
cltd
sbb
xchg
xor
sub
ljmp
jns
pop
mov
cmp
int3
xchg
into
mov
rorb
lea
mov
xchg
dec
lahf
jbe
pop
push
cmc
jno
stc
push
push
xor
xor
cmpsl
push
sbb
std
cmpsb
push
ret
pop
aaa
lahf
lea
dec
sbb
add
jge
inc
ret
jl
push
aaa
push
mov
lret
fcoms
sbb
lea
cmp
add
or
daa
fisubl
movsl
adc
cwtl
add
test
sub
stc
and
in
jae
cmp
popf
push
mov
sub
jb
inc
hlt
mov
add
ss
mov
mov
int3
aam
sbb
lea
adc
dec
mov
sahf
sbb
jno
mov
es
or
mov
adc
and
in
lds
mov
pop
repz
in
imul
pusha
imul
sub
cli
xchg
inc
push
stos
mov
out
shlb
ja
xlat
das
jo
mov
adc
and
push
xchg
ret
add
cmc
mov
pop
mov
loop
adc
call
xor
pushf
mov
insb
sar
mov
and
cmp
jne
fmul
mov
out
loopne
in
orb
hlt
cmp
push
rcrl
fstps
push
jg
mov
call
roll
out
jne
cld
ret
jecxz
sub
out
ret
mov
add
stos
or
sbb
gs
mov
in
loop
mov
scas
in
frstor
add
mov
sbb
sub
lcall
lret
xchg
loope
sub
xlat
dec
shlb
cltd
rol
out
in
jle
jb
add
shr
jl
mov
fnsave
mov
rol
push
imul
add
fisubrl
lahf
sahf
cmpb
cmp
outsb
inc
enter
mov
shrb
push
mov
push
jnp
or
dec
pop
xor
pop
inc
sbb
ret
sbbb
or
fstpt
aaa
in
mov
pop
cmpl
addr16
popl
fmuls
loope
jbe
ret
jge
js
pop
inc
ficoms
popa
insl
shlb
bound
subb
jbe
or
mov
arpl
sub
cmpsb
fildl
mov
mov
cs
stos
sbb
lock
jle
int
mov
ret
lods
bound
pop
cmc
jg
jge
shrb
adcl
jp
dec
sub
add
mov
cmp
lds
and
add
mov
popf
mov
adc
imul
cmp
jne
orl
inc
adc
fld
jb
xor
cli
xchg
outsb
mov
jmp
mov
cwtl
mov
sub
pop
adc
push
xor
ror
sbb
push
addr16
xor
jne
push
pop
lds
cltd
jecxz
mov
lret
add
cmpsl
gs
popa
fbld
xchg
push
push
add
sbb
arpl
mov
aad
aaa
hlt
loop
xchg
dec
lock
push
dec
mov
std
loopne
bound
mov
addl
dec
and
sbb
lahf
add
ja
inc
pop
sub
rorb
shlb
pop
jo
lcall
pop
clc
jae
inc
mov
sbb
xor
fisubl
push
xchg
jecxz
and
xchg
js
fstl
adc
dec
cltd
mov
shrl
mov
cmp
movsl
lds
sbb
xorb
outsb
mov
ret
cmc
jmp
aad
in
and
push
ret
mov
std
mov
dec
loopne
movsb
je
test
ret
push
cmp
dec
sbb
jb
sub
sbb
sbb
loopne
enter
or
xchg
int
lcall
inc
mov
fiaddl
add
and
pop
es
cs
inc
add
and
add
std
jp
popa
pop
xchg
scas
movsb
xchg
cmp
das
rorl
pop
mov
xchg
jae
je
sbb
pop
jge
imul
cmpsl
scas
shlb
push
scas
xlat
das
loopne
add
sbb
sub
rol
inc
mov
mov
inc
sbb
aas
xor
pop
repnz
cmp
sahf
and
inc
aaa
std
pop
xor
mov
xchg
cltd
lahf
xchg
shll
add
sti
and
out
ret
leave
add
mov
insl
or
mov
repz
ret
mov
out
std
push
inc
clc
push
xchg
nop
sbb
jb
addr16
fnstcw
jae
lahf
pushf
xor
add
fdivrs
in
mov
scas
insl
cmp
xchg
addr16
std
fs
adcb
rcr
mov
xor
dec
add
sub
and
jmp
jno
lcall
push
loopne
mov
xor
or
jae
inc
fcmovnu
xchg
ret
adc
loop
sub
aam
dec
inc
push
jecxz
sub
pop
fidivl
fdivrs
mov
push
inc
pop
in
or
inc
cli
fsubs
pop
add
mov
lods
mov
fisubl
cs
jge
aaa
jecxz
adc
add
dec
in
mov
inc
in
pusha
sti
xchg
fwait
pop
js
decl
sbb
inc
sub
mov
scas
jnp
push
adc
in
pop
fimull
std
inc
out
xor
les
jo
cmp
adcb
bound
push
imul
pop
jecxz
addl
idivl
outsl
mov
fldl
or
mov
stc
dec
mov
das
add
jnp
aaa
pushf
jg
fucomp
cmp
pop
pop
adc
sbb
addr16
jecxz
sbb
push
sub
call
sbb
fcmovnb
cwtl
out
mov
xchg
pop
mov
shr
dec
xchg
mov
mov
stos
andps
xchg
loope
lds
push
in
js
xlat
add
cwtl
push
lahf
pop
add
adc
mov
xchg
sbb
dec
push
scas
loop
lcall
inc
xor
repz
mov
jl
jns
icebp
and
jbe
or
xor
push
sbb
clc
xor
xchg
cmp
scas
in
in
xchg
sti
mov
jmp
into
sbb
adc
jl
sub
in
mov
ret
push
jecxz
in
loop
pop
repnz
sahf
aaa
mov
lea
repnz
scas
cli
out
daa
fiaddl
adc
addr16
mov
mov
sti
lock
ja
je
movsb
fcomi
dec
and
inc
lock
test
sub
dec
ret
sub
mov
add
addr16
je
pop
cmc
xor
jno
adc
in
arpl
mov
xorl
inc
inc
shlb
rcl
jl
daa
jmp
das
sub
mov
shll
sub
push
cmp
fs
pop
into
ret
movb
fldenv
sbb
xor
mov
mov
lea
ljmp
mov
pop
outsl
lahf
imul
xchg
in
in
mov
repnz
lret
xchg
cmp
sti
cwtl
pop
xchg
pop
push
mov
and
sahf
add
dec
aaa
shlb
or
cwtl
sbb
jae
stc
rorb
dec
movsl
xor
add
in
in
fstpl
add
test
mov
sub
add
nop
les
in
add
inc
xchg
xchg
inc
imul
jb
jne
jns
xchg
es
adc
xchg
aas
cmpl
mov
push
adc
sub
mov
push
add
add
push
sbb
int3
xchg
sbb
sahf
mov
in
xchg
add
gs
dec
pushf
add
icebp
rolb
xor
nop
xor
loop
rol
cmp
data16
cmp
jnp
jecxz
jp
fnstsw
mov
xor
stos
push
clc
fnstcw
ss
out
pop
insl
push
pop
jmp
add
leave
into
lcall
call
shlb
and
cmc
sub
xchg
fldenv
xor
roll
or
int
mov
mov
mov
daa
sysexit
mov
test
jmp
daa
mov
sub
jl
dec
shlb
std
jl
add
mov
ss
adc
jl
pop
leave
xchg
mov
aad
mov
and
jp
gs
xchg
out
insb
loope
loopne
sub
xchg
jmp
sub
jmp
test
push
fsubrs
push
dec
lds
mov
or
pop
sti
add
cmpsb
mov
jl
clc
jp
pop
adc
imul
sub
push
ljmp
ja
adc
lea
fs
cmp
or
xchg
mov
es
repz
ds
popf
addl
jmp
dec
repnz
or
shrl
adc
and
mov
mov
push
shl
loop
addr16
fs
or
fstpt
and
pop
cld
subb
inc
sub
cmpb
or
fcmovne
lods
dec
jl
jl
ret
stc
mov
mov
add
filds
lahf
xor
enter
scas
cmp
push
fidivrl
jbe
mov
xlat
push
and
lea
push
pop
pop
pop
lahf
dec
cli
mov
mov
inc
aad
ja
mov
lea
dec
xchg
cmp
adc
xchg
andb
ljmp
clc
add
push
mov
movsb
dec
shl
nop
sti
movsl
sub
mov
cmp
sub
rcll
xor
movsb
hlt
ret
mov
push
mov
test
imul
push
add
sti
dec
sub
pop
pop
xchg
inc
and
lret
fidivs
lock
cld
push
shrl
fidivl
push
inc
shlb
filds
push
and
popf
int
sbb
cwtl
cmp
pop
je
push
and
push
rcll
aas
add
stos
jmp
xlat
hlt
adc
adc
add
movsl
test
mov
addb
xor
lds
aaa
fucomip
imul
pop
ret
imul
mov
jne
iret
pop
xchg
push
or
jmp
xlat
mov
xor
lods
rorb
notb
and
xchg
pop
adc
pop
or
icebp
sub
mov
int3
insl
inc
mov
or
sti
les
decb
add
popf
pop
xor
cmp
xchg
sub
mov
mov
scas
sub
leave
adc
notb
fidivrs
jmp
push
dec
in
shl
push
leave
mov
hlt
push
rcrl
in
lcall
push
sti
push
xor
pop
pop
cmp
arpl
jp
mov
andb
rol
movsb
or
mov
jg
iret
cltd
std
enter
mov
adc
insb
add
call
dec
inc
rolb
in
mov
ja
jbe
sbb
or
loopne
adcl
jge
fldenv
insl
data16
xlat
mov
jb
flds
ror
mov
lods
sub
pop
movsl
jns
xlat
mov
loope
cmp
add
adc
lea
bound
outsl
rorb
stos
jp
insb
jne
or
cmp
jne
jl
and
ds
and
in
rcll
mov
push
push
nop
imul
loopne
adc
les
fcomps
cs
in
jecxz
pop
jae
sbb
test
sub
add
repnz
fcmovbe
or
mov
imul
iret
movsb
mov
nop
mov
arpl
scas
int3
pop
xor
orb
lcall
aam
loope
or
shl
or
dec
leave
push
cmp
dec
mov
js
stos
cmp
das
cmc
xchg
sub
fdivs
jp
cld
outsl
les
cmp
sub
jl
repnz
fdivrl
pop
xor
inc
inc
add
mov
fs
inc
mov
insb
adc
lds
mov
mov
or
jl
out
pop
jmp
test
fwait
popf
mov
adcl
fdivl
ret
push
push
jno
xor
adc
stc
fcom
daa
mov
pop
mov
add
mov
cmpsb
and
mov
and
mov
loope
jg
and
or
in
sti
mov
jno
rcr
sub
mov
xor
mov
sahf
inc
pop
movsb
xor
mov
pop
es
repz
and
call
mov
repz
mov
fiaddl
js
sahf
and
shrb
adc
loop
xchg
or
mov
cmp
jl
in
or
gs
cld
sbb
dec
push
testb
mov
pop
jge
imul
scas
adc
or
out
sbb
adc
je
test
add
imul
pop
cmp
scas
loopne
clc
push
movsl
mov
cwtl
xor
popf
fbstp
push
jae
push
push
adc
jno
inc
mov
cmp
push
sub
iret
lahf
mov
rolb
scas
cmpb
adc
add
add
mov
ret
scas
push
inc
sub
cmp
ja
xor
cmpsl
pop
adc
mov
or
ja
lods
dec
dec
in
add
nop
nop
jbe
xor
or
mov
jno
push
mov
lds
sahf
shlb
push
jae
popf
rcl
mov
lcall
adc
xlat
add
or
sbb
sub
cmp
jns
lods
lods
and
or
jmp
orl
in
repz
sub
adc
cs
lock
fwait
mov
imul
inc
inc
fwait
wrmsr
cmpsb
xor
aad
test
test
icebp
cld
cmp
jo
enter
sbb
mov
cmpl
decl
insl
push
push
scas
xchg
fstpt
ds
jp
jle
jne
hlt
adc
dec
pop
arpl
mov
test
push
dec
clc
outsb
cwtl
jmp
ds
stc
dec
in
rclb
in
xchg
jo
outsl
adc
mov
jnp
test
cmc
leave
cmp
icebp
inc
aas
dec
lock
daa
mov
shrl
or
mov
cmp
nop
leave
push
pushf
sti
int3
or
cltd
push
cmp
stos
lods
int
jae
lret
imul
adc
and
les
in
sbbb
shl
stc
lds
xor
mov
fadds
sbb
fcmovbe
js
mov
out
in
push
lret
xor
jmp
sub
or
xchg
fnstcw
and
lods
mov
sahf
stos
nop
cmp
mov
test
inc
pop
mov
scas
xchg
outsb
insb
iret
sbb
cmp
icebp
dec
cmp
cmc
mov
int
and
lret
out
add
notb
xchg
sahf
fmul
les
pop
in
mov
xchg
lret
pop
adc
mov
push
mov
sti
jle
lret
mov
test
sti
pop
cltd
test
pop
add
popa
inc
loope
mov
data16
mov
call
jno
test
rolb
mov
fwait
inc
pop
push
dec
insl
repz
aad
xor
cli
outsl
lea
xchg
leave
mov
bound
jmp
adc
or
or
aaa
inc
roll
pop
cld
pop
mov
sbb
fisttpl
lahf
loope
cmp
and
cmp
jo
enter
imul
xchg
inc
das
jbe
pushf
mov
xchg
lods
aam
jae,pn
and
cmp
cmp
out
mov
lods
push
xchg
out
inc
mov
shll
jno
testl
sub
sbb
int3
push
jo
cld
cmp
lock
adc
pop
xor
lcall
lcall
push
repnz
pushf
fbstp
mov
stos
in
xchg
and
pop
adc
arpl
jno
popa
mov
std
call
jns
push
pop
xchg
mov
mov
mov
pop
test
popf
mov
jbe
and
mov
std
cld
xor
inc
aam
cmp
adc
imul
jecxz
ficoml
cmpsb
aas
imul
pop
mov
xchg
xchg
fldenv
pop
push
aam
xor
push
cmc
orl
aad
clc
outsl
jne
xchg
popa
out
jno
mov
jno
sub
fisttpll
inc
lods
fmulp
adc
ret
inc
adc
jne
or
xor
xchg
mov
mov
cwtl
jnp
ret
out
pop
inc
mov
cmpsb
pop
push
mov
xor
or
test
enter
and
lods
gs
jg
sti
cmp
test
inc
nop
jg
test
ficoml
int
mov
outsl
push
lods
ja
mov
aam
cs
or
adc
cwtl
out
sub
inc
fimuls
xlat
ljmp
fld
mov
in
rclb
dec
inc
icebp
mov
jl
ds
add
jmp
pop
inc
outsl
or
arpl
in
push
sti
cmpsl
cmpsl
xchg
jne
push
inc
call
pusha
jecxz
int3
jmp
ret
fsubr
daa
ds
outsl
enter
cli
in
outsl
mov
mov
xchg
mov
fsubr
mov
scas
jle
std
in
daa
jl
mov
sarl
lods
inc
cli
sub
mov
add
cmp
cmp
loope
icebp
repz
inc
bound
jle
pop
mov
cmpsb
lcall
mov
mov
jmp
mov
test
mov
mov
or
push
scas
and
dec
in
push
xchg
adc
iret
int3
mov
push
fisubrs
or
hlt
movsl
out
sub
repz
cmpl
xor
shl
js
pushf
je
pop
adc
adc
loopne
ret
push
outsb
adc
out
pusha
sub
sub
push
stc
dec
and
lods
lret
arpl
popf
loop
push
addr16
pusha
stos
push
mov
push
adc
nop
xor
test
fiadds
sub
jns
aam
les
add
xchg
cmpsl
push
inc
lret
jmp
mov
mov
dec
int
mov
mov
scas
mov
jge
jno
inc
sbb
fnsave
adcb
stc
in
out
sub
inc
loop
popa
pop
repnz
xor
xchg
leave
scas
pop
test
pusha
pop
cmpsb
xor
pop
jae
lahf
mov
andl
fwait
inc
and
sahf
in
sub
test
jno
pop
or
sti
pushf
pop
dec
bound
in
lcall
sbb
cli
inc
aaa
push
push
pop
scas
rcr
or
nop
or
cmp
inc
test
rcl
xchg
push
xchg
jmp
inc
repz
mov
or
test
jb
cld
mov
jo
rcl
add
push
and
ja
fs
lahf
mov
pop
inc
insl
and
sub
sub
cld
insb
mov
xor
aaa
pop
pop
movsl
out
std
das
loope
leave
add
jns
inc
pop
pop
out
scas
jb
jo,pt
adc
lods
lods
or
fs
and
pop
xlat
inc
xor
xor
adc
out
fadd
push
push
ss
pushf
test
mov
add
mov
lds
mov
mov
jecxz
jo
repz
sbb
je
jecxz
mov
sti
stc
xor
or
pop
int
jecxz
loope
mov
mov
sub
lahf
and
push
or
or
push
out
and
repz
xor
sub
or
andb
sbb
les
pop
bound
or
insl
mov
rorl
dec
xor
add
js
fwait
cmp
sbb
call
jge
enter
shll
orl
mov
dec
out
leave
in
arpl
add
stos
xchg
jae
inc
mov
inc
into
mov
sub
insb
pusha
std
loopne
out
or
mov
xchg
jl
je
cmpsb
rorb
int
add
push
mov
push
mov
out
dec
push
or
mov
fiadds
shl
and
lcall
fisubrl
or
sub
mov
jns
out
cmpb
jns
jp
nop
jnp
jne
inc
inc
mov
stos
lds
cli
subb
in
mov
or
std
or
jl,pn
cmpsb
fldln2
mov
xor
jecxz
mov
xchg
mov
mov
add
push
add
mov
std
and
enter
inc
xor
mov
jmp
fadds
adc
pop
ds
add
inc
xchg
sti
or
scas
jne
xchg
or
ljmp
fisttpll
mov
insl
mov
xorb
pop
mov
pop
insb
xchg
and
jae
or
dec
js
test
inc
add
and
mov
push
sub
je
push
enter
frstor
sbb
xor
push
paddq
cmp
loopne
insl
push
jge
push
cmpsl
les
lock
and
rcl
into
mov
pop
sub
xor
mov
adc
les
ror
cmpsb
aas
cmp
popa
in
mov
mov
rcll
lcall
call
mov
setp
sahf
int3
xchg
pop
outsl
out
mov
lock
jae
lret
add
sbb
mov
cmpsl
gs
mov
and
pop
movsl
rcl
stc
push
in
sbb
loopne
push
loope
rcl
dec
mov
ljmp
adc
mov
cmp
lds
dec
dec
xor
movsl
dec
out
sub
sub
pop
addr16
aas
add
stos
into
int3
or
pushf
mov
push
aas
mov
test
or
jmp
or
fmull
les
dec
enter
imul
fdivrl
sahf
mov
or
in
out
mov
ljmp
mov
pop
push
into
jb
jmp
add
cmpsb
jo
jge
push
jb
and
jmp
mov
sbb
jl
addr16
pusha
xchg
adc
and
icebp
pop
ss
popl
testb
sbb
out
push
xchg
push
xor
cmp
push
fisttpll
sbb
mov
jmp
jbe
adc
mov
sbb
lcall
sarb
in
mov
out
ljmp
outsb
inc
fbstp
mov
ficoms
fwait
in
add
lea
dec
xor
in
test
fldcw
fiaddl
imul
jne
inc
or
or
orl
in
andl
mov
sbb
pop
jl
outsb
aad
and
lock
cmpl
pop
xor
or
lods
fwait
ret
pusha
sub
mov
gs
aad
and
adc
lahf
nop
or
and
pop
or
mov
cmp
sub
mov
call
rorb
adc
xor
ds
lcall
roll
into
fwait
outsl
push
into
jge
xor
jg
mov
push
pop
repz
out
inc
cmp
xchg
mov
jle
lods
ss
xlat
or
int3
aaa
or
push
xor
mov
daa
sbb
lahf
rorb
lock
push
sbb
sarb
dec
popa
cmpb
mov
ret
mov
icebp
outsl
sub
ffree
cmc
mov
mov
inc
push
or
or
or
sub
and
enter
std
mov
movsl
aas
imul
cmp
cld
jnp
dec
jnp
sahf
in
mov
dec
out
lds
test
orl
nopl
jle
mov
insl
dec
insl
adc
add
mov
pop
mov
and
lcall
data16
ret
incb
arpl
xorb
mov
insb
subl
cli
enter
lds
in
les
dec
mov
test
fidivrl
push
cmc
jb
mov
movsl
dec
adc
popa
leave
lcall
adc
out
push
das
mov
ret
cmp
ljmp
into
add
enter
cli
bound
sbb
adc
inc
mov
fwait
inc
clc
xchg
and
and
outsl
push
mov
fsubr
mov
jnp
pop
fst
xchg
cmp
sub
daa
out
jle
imul
adc
jno
jne
mov
or
lods
shl
outsb
fiaddl
push
pop
call
pop
lea
stos
jns
lret
adc
lock
pop
pusha
mov
mov
lcall
or
bound
mov
pop
mov
clc
and
fsubr
ret
imul
popa
test
sub
push
stos
adc
icebp
addr16
xor
mov
stos
mov
cmpsb
cmp
sub
std
mov
test
cmp
xchg
pop
add
movsb
cmc
inc
dec
xchg
repnz
jge
add
aaa
inc
cmp
mov
adc
int
movsl
push
fdivrs
notl
jp
cli
fcmovu
push
fwait
lods
out
jae
add
in
cmp
or
pop
arpl
inc
enter
cwtl
mov
pop
scas
shlb
lock
adc
cs
push
int3
iret
leave
mov
sbb
cmp
sar
jnp
test
aam
stc
pushl
nop
in
and
xchg
out
push
jl
and
xor
pop
jmp
fdivrl
data16
sub
int3
test
dec
or
mov
or
adc
mov
dec
cmp
adc
sbb
clc
and
les
adc
fbstp
aad
push
inc
lahf
xor
rorl
adc
mov
jp
xchg
pop
dec
sub
add
sbb
inc
adc
jge
mov
fwait
hlt
sub
sbb
xchg
xor
xor
or
sar
and
lcall
inc
aad
int3
fsts
sbb
pop
add
aas
sahf
and
loopne
fs
xor
in
inc
mov
mov
push
dec
decl
inc
or
out
cli
xor
idivl
das
fnstenv
lock
into
aaa
gs
jmp
sub
pop
fisubl
xchg
push
mov
inc
addb
cmp
dec
das
test
das
mov
jb
mov
pop
ret
or
pop
pusha
and
jnp
test
mov
add
lock
mov
sub
add
pop
out
incl
lcall
insb
bound
dec
int3
lock
cmc
and
leave
xlat
xor
xor
cli
roll
jns
fsubr
sbb
jns
xchg
arpl
lcall
jmp
push
lcall
pop
mov
sarb
and
push
cmpsb
jae
shrb
loop
pop
jl
xor
lcall
ret
cmp
mov
xchg
lods
inc
popf
out
sbb
cmp
nop
andb
sub
mov
fcomps
stos
sbb
cli
in
adc
fisubrl
mov
push
sbb
inc
sbb
ljmp
mov
sbbl
stc
pushf
jnp
cmp
pop
sub
movsl
pop
mov
std
outsl
ficoms
xchg
push
pop
xchg
jge
cmpb
mov
jnp
test
imull
mov
sahf
jg
push
fisubl
pop
sub
pop
push
outsb
inc
lcall
sarl
iret
sub
sbb
hlt
add
outsb
jae
xchg
mov
ret
mov
in
mov
inc
movsb
pop
cltd
xor
jp
sbb
fsubl
xor
xlat
popa
xor
cmp
and
out
mov
test
stos
mov
sahf
dec
mov
or
ss
mov
mov
and
pop
ficompl
xchg
enter
jae
jno
and
out
add
arpl
gs
and
cmp
mov
push
loopne
das
push
jmp
jne
aam
mov
adc
mov
mov
mov
in
es
pop
push
bound
inc
xor
adc
clc
xchg
mov
pop
mov
mov
dec
scas
into
daa
fldcw
incl
shll
mov
call
pop
sub
aam
add
push
imul
dec
mov
mov
ja
loope
or
or
cwtl
scas
aas
cmpsb
test
addl
ja
stos
das
or
or
and
jns
fdivl
push
and
lock
jecxz
jmp
ss
add
dec
xchg
insb
cwtl
jmp
sahf
shll
mov
jle
pop
test
jno
adc
dec
lret
mov
test
rclb
push
sbb
fs
rol
cmp
popf
popa
adc
gs
jecxz
jnp
test
sub
xchg
xchg
fisttpl
hlt
pusha
adc
or
call
fwait
mov
cmp
cmp
xor
inc
movsl
popf
add
aas
sub
jg
inc
mull
idivb
mov
test
bound
mov
and
push
movsl
add
push
cmc
imul
xor
cmpsb
and
xchg
je
leave
mov
xchg
fs
or
pusha
cmpsb
and
mov
mov
push
push
xor
fldcw
and
sbbl
inc
add
adc
jne
movsl
cli
xchg
lret
inc
xchg
inc
dec
ss
pop
out
inc
mov
call
stc
shlb
stos
mov
cmp
out
sahf
lcall
add
cmp
jle
mov
rorl
dec
cmp
sti
pop
int
ljmp
lahf
xor
inc
test
and
sbb
xchg
push
add
repnz
stos
jne
add
mov
push
lds
mov
aas
xchg
sbb
pop
mov
mov
mov
push
shlb
adc
mov
enter
cwtl
aas
divb
fwait
rol
enter
sub
andb
enter
push
pop
add
das
sti
hlt
ret
or
lret
stos
int3
mulb
loop
or
mov
mov
sub
notb
je
outsl
sub
sub
popf
add
lods
pop
pushf
dec
and
les
fwait
out
dec
dec
ja
stc
jbe
pop
or
add
pop
sbb
push
xchg
mov
clc
sub
cmp
jl
sub
lahf
inc
pop
mov
addb
mov
push
dec
push
inc
outsb
inc
mov
cmp
xlat
aam
xchg
inc
std
call
adc
mov
lods
and
pop
mov
pop
addl
push
push
push
jno
testb
les
test
rolb
lret
in
dec
jmp
outsl
xor
fcomps
add
or
sbb
jp
sbb
dec
mov
in
mov
add
jmp
sbb
inc
imul
or
gs
jne
das
iret
cwtl
push
sbb
add
xor
rcrb
int3
mov
mov
je
dec
or
fisttpl
mov
test
imul
sub
push
and
imul
fcompl
cmpsl
dec
sbb
ror
jmp
ljmp
adc
jle
jnp
jp
mov
pop
pop
in
in
imul
movsl
xor
sbb
hlt
aas
aas
mov
loope
cltd
cmp
int
xor
mov
jle
dec
scas
lds
loopne
pop
mov
imul
loope
rcl
icebp
fldl
lret
ja
ret
sub
loopne
sub
inc
push
jmp
je
sub
sbb
test
or
fildl
mov
sahf
insl
mov
out
dec
dec
adc
mov
adc
out
mov
dec
icebp
add
test
mov
out
clc
cmp
adc
repz
addr16
addr16
fwait
xchg
dec
pusha
in
jno
cltd
out
test
sbb
add
cmpsl
mov
mov
enter
cs
adc
push
dec
lcall
lods
pop
add
scas
idiv
jae
pop
or
mov
dec
ror
push
ret
in
xchg
vmovsd
mov
in
sub
cwtl
push
cs
mov
mov
push
enter
mov
out
leave
shll
ljmp
ja
loope
sub
push
les
sarl
test
lcall
jecxz
test
in
sub
fiaddl
mov
dec
mov
xor
out
push
mov
jns
and
xor
popa
mov
pop
cltd
dec
jb
repz
stos
pusha
iret
aas
push
test
jp
je
shlb
in
xchg
lds
mov
jl
out
fcoms
xchg
dec
jae
bound
mull
jle
xchg
movsl
xchg
addr16
inc
ds
xor
push
cmc
push
aaa
fcom
int3
mov
sub
movsb
rcrb
xorb
push
cmp
aas
or
add
xchg
lock
dec
adc
mov
cmp
iret
test
or
int3
and
sbb
sub
mov
pop
int
xchg
xor
push
mov
cmp
out
shll
std
pop
enter
rcrb
adc
add
ja
fs
mov
xchg
xlat
and
mov
imul
fidivrl
je
dec
cltd
fiadds
dec
insb
not
cwtl
imul
xor
sub
in
je
cltd
jb,pt
adc
ret
pop
jmp
notl
pop
mov
sbb
rcl
cmp
jg
and
pop
mov
jle
adc
cmp
hlt
xchg
imul
rcrb
inc
lcall
cmp
lret
cmp
je
xchg
js
lods
cmp
hlt
or
sarl
mov
adc
gs
in
push
pop
rol
sbb
or
aaa
jge
and
loopne
push
xchg
cmp
mov
sahf
pusha
dec
fadds
in
push
ret
xlat
mov
dec
aas
iret
rcrl
out
cmp
xor
addr16
pop
aaa
test
insl
and
xchg
xchg
popa
stc
or
xchg
mov
icebp
fldenv
cmp
test
pop
js
pop
jb
in
pop
fimull
sub
dec
into
sbb
dec
imul
test
movsl
jp
mov
pushf
push
clc
mov
lcall
repz
and
mov
jge
mov
insb
push
or
mov
mov
mov
fdiv
std
mov
enter
xchg
leave
ljmp
sahf
push
js
filds
jle
data16
jecxz
leave
clc
clc
sbb
sti
dec
out
cmp
mov
mov
out
cmpsl
repz
ljmp
mov
mov
and
jp
cmc
dec
movsl
in
rolb
testl
lods
lds
mov
rclb
popa
cmp
sub
ss
mov
out
add
pop
xor
and
dec
sub
add
lret
cmpsl
ja
cltd
icebp
lahf
aad
cld
cli
out
int3
mov
xchg
cli
push
mov
xchg
add
xor
test
enter
loopne
int
xchg
xor
nop
orl
mov
xorl
jge
testl
mov
roll
dec
mov
cmpsl
adc
dec
lds
xor
add
repnz
sbb
push
pop
fcomps
mov
fbld
jp
mov
sub
dec
ret
std
shrb
cmpl
push
adc
in
movsl
mov
push
push
negb
rclb
loope
push
jge
loopne
shrl
ljmp
inc
mov
je
sub
push
jge
or
xchg
mul
ljmp
fcomps
imul
ljmp
mov
dec
lods
mov
es
ss
scas
mov
sub
pop
ret
sub
into
aas
test
mov
imulb
out
iret
fs
fbstp
dec
xchg
aad
mov
mov
shll
mov
lods
sbb
test
icebp
sbb
sub
lods
int
mov
xchg
sbb
cmp
inc
cwtl
mov
inc
mov
lcall
push
add
cmp
test
xchg
gs
nop
push
sbb
gs
mov
cmp
daa
jb
mov
test
add
loop
and
cmp
iret
dec
nop
cwtl
out
cmpsl
in
mov
cmp
enter
std
popf
sub
mov
xchg
scas
xchg
mov
mov
lods
cmpb
cmp
xchg
sub
mov
in
idivl
or
shll
mov
lcall
mull
in
mov
add
dec
das
mov
aam
or
movsb
jne
xchg
out
insl
jo
mov
aas
notl
imul
sub
inc
jle
and
sti
std
xlat
fldenv
fmulp
stc
mov
dec
mov
mov
jb
popa
xchg
mov
sub
repz
xchg
fdivrl
out
lock
test
xchg
add
ds
cltd
mulb
into
xchg
shlb
das
jmp
stos
int3
dec
inc
dec
xlat
xor
mov
or
xchg
xchg
adc
xlat
leave
add
dec
lret
cltd
mulb
jmp
inc
movsl
sub
repz
dec
dec
xor
inc
jmp
fwait
ret
xchg
fwait
bound
es
lea
insl
sub
pop
cltd
xchg
xchg
sbbl
adc
mov
dec
fisttps
push
add
add
push
add
out
aad
adc
sbb
cmpsb
out
and
mov
fcomip
sarb
leave
and
sub
imul
and
sub
insb
cmpb
add
fiadds
dec
push
ja
repz
jns
sahf
ljmp
cltd
cmc
lcall
mov
xorb
xchg
rcrl
mov
mov
add
inc
and
loope
xor
popf
cmp
xchg
testb
jbe
icebp
arpl
pop
arpl
and
loopne
mov
stos
mov
fcomi
test
sbb
lea
call
pusha
sbb
mov
fimull
cld
jo
mov
rorl
je
mov
icebp
cmp
sub
push
and
aas
push
movsl
enter
fidivrs
jno
or
negl
sbb
cli
fwait
stos
pop
ljmp
call
imul
loope
scas
xchg
imul
lock
dec
xorl
cmp
ja
push
ret
xor
outsb
fsubrl
xchg
pusha
int3
xchg
aad
mov
push
adc
and
gs
or
stos
adc
lods
sub
and
ja
xlat
dec
dec
jns
bound
add
cmpsb
cmp
jp
ljmp
fisubrs
ljmp
std
jne
aas
lret
lods
aad
pop
and
mov
subl
xor
mov
cmp
in
shrb
in
ficoml
add
movsb
xchg
stos
out
xor
out
inc
and
push
adcl
dec
mov
push
sbb
ljmp
test
adcb
mov
es
pop
fisubrl
pusha
adc
ret
cmp
or
outsl
mov
push
mov
sub
ffreep
jp
mov
leave
dec
add
xor
imul
add
or
jnp
bound
js
fs
ret
movsb
jae
aas
sub
sub
push
mov
in
xor
xchg
push
arpl
or
inc
in
sbb
push
sti
sub
loope
push
push
pop
test
sub
clc
adc
sbb
ja
stos
mov
stos
mull
add
sub
loopne
cs
jecxz
cmp
scas
daa
daa
xchg
nop
cmp
lods
push
and
rcrl
sbb
jge
lds
jnp
stos
cmpsb
add
and
cmp
mov
xchg
mov
pushf
pusha
sbb
cli
das
push
xchg
pop
jns
imul
xor
repnz
ror
dec
jne
push
push
repnz
dec
push
leave
outsl
push
in
xchg
cmp
or
xchg
cmpsb
out
adc
mov
mov
xchg
pop
rorb
jne
std
jecxz
idivb
adc
jl
int
cmc
test
stc
xchg
lds
icebp
push
sub
rclb
ds
or
in
dec
cmp
xor
jne
mov
cmp
pop
sub
mov
jbe
push
rclb
insb
in
mov
pop
push
mov
in
pop
cmp
fcmovnb
pop
dec
sub
sbb
mov
cmpl
stos
lods
pop
fbld
mov
popa
mov
mov
inc
pop
and
insb
pop
and
mov
imul
stc
xchg
mov
jae
aaa
stos
scas
leave
xor
or
insb
orl
insb
sbb
mov
into
adc
sbb
add
mov
pop
pop
jle
lods
inc
pusha
dec
adc
int
mov
xor
popf
leave
popa
outsl
add
in
mov
fsubl
adc
mov
stos
xchg
pushf
xlat
and
sub
xchg
faddl
or
pop
jbe
push
ret
stc
mov
dec
bound
insl
inc
jbe
pushf
add
add
ja
push
je
inc
push
fldt
lds
call
xor
ret
push
jg
pop
pop
mov
inc
rolb
pop
rol
sbb
hlt
xchg
bound
std
and
daa
out
push
fsubl
push
ret
mov
icebp
xor
orl
cli
or
repnz
jnp
mov
les
dec
ja
fwait
pop
je
jecxz
clc
or
sbb
ds
jb
mov
imul
shr
ljmp
lcall
clc
xchg
xchg
addr16
flds
xor
inc
xchg
mov
ja
fmulp
jb
dec
neg
push
jge
xchg
jl
clc
mov
dec
ret
mov
cmp
sub
test
pop
sub
cmp
xor
mov
test
les
lock
ret
out
jns
dec
loopne
adc
dec
cmpsl
fnstsw
mov
pop
inc
or
and
adc
push
add
lret
push
rcl
imul
xchg
mov
or
jnp
mov
push
fwait
roll
loopne
in
and
mov
xchg
filds
bound
push
push
push
dec
pop
add
js
mov
pop
push
test
popa
cli
mov
out
pop
in
lods
ljmp
lds
pop
jp
shlb
jmp
out
pop
jmp
scas
jmp
aas
mov
mov
jbe
pop
cld
iret
or
cmp
mov
sbb
adc
jb
js
sub
enter
popa
jns
dec
adc
pop
sbb
xlat
mov
xor
fcomps
add
arpl
inc
mov
imul
dec
adc
xchg
push
and
xchg
push
mov
jge
clc
movb
ja
jns
or
jb
cmp
push
test
xorb
in
shl
sub
les
mov
adc
repnz
push
dec
mov
stc
test
stos
aad
xchg
and
movsl
cmp
pop
data16
push
stc
mov
push
mov
mov
andb
je
xlat
shl
push
add
add
mov
push
push
pushf
mov
jae
jg
loop
fmul
fimuls
mov
cmp
jne
or
movsb
in
sarl
aam
dec
out
sub
iret
add
ja
mov
movsl
xor
jb
sbb
lods
out
decb
mov
movsb
cmpsb
and
cmp
xor
sbb
jmp
std
arpl
or
jb
or
negl
mov
push
and
out
and
movsl
in
fdivs
mulb
test
aam
mov
inc
push
or
pop
scas
and
repnz
sub
bound
fdivr
mov
mov
mov
push
mov
sbb
inc
cld
push
cmc
jg
stos
xchg
xchg
repz
leave
xchg
test
pushf
rcrb
scas
jmp
stos
push
repz
mov
push
push
adc
shll
mov
and
dec
lds
in
push
inc
or
and
pop
ja
mov
stc
xchg
enter
add
mov
call
aad
mov
xchg
andb
inc
sub
scas
fs
xor
xchg
jo
nop
fiadds
cmp
inc
inc
mov
fdivp
xor
pop
dec
es
mov
stos
and
into
dec
pop
stos
sub
cltd
aad
sbb
xchg
xchg
cmpsb
bound
sub
in
mov
test
mov
xor
push
sbb
pop
testl
in
std
or
in
adc
mov
xchg
shr
mov
push
je
sub
ja
add
repz
and
hlt
jns
mov
sbb
add
cmc
stos
add
leave
sarb
push
or
sti
popl
lret
adc
data16
pop
popa
push
xchg
cmp
outsb
cltd
nop
mov
add
push
pop
pop
cmp
cmpsl
cs
mov
fidivrl
adc
popa
sbb
pop
mov
inc
les
pop
sbb
sbb
add
push
js
jecxz
dec
lret
arpl
sbb
xlat
xchg
shrb
jle
aam
dec
xchg
mov
out
movsl
cmp
lcall
or
fsubs
cmp
dec
pop
add
sbb
xor
dec
mov
mov
mov
clc
movsb
popa
ss
cld
scas
or
pop
jmp
dec
mov
inc
jle
fwait
arpl
cmpsb
mov
js
clc
jo
out
clc
fsubs
jmp
pop
ljmp
mov
fdivp
icebp
pop
inc
loop
shl
arpl
dec
pop
bound
dec
cli
adc
ret
test
adc
and
arpl
or
imul
xchg
outsb
daa
push
cli
xor
in
shll
in
pop
stos
jns
cmc
xor
or
mov
das
jns
outsb
popf
jnp
repz
and
mov
or
cmp
dec
sub
rclb
es
jecxz
cmpb
add
mov
xchg
pop
push
in
cmpsb
mov
mov
rcl
popa
sbb
xchg
mov
pop
xor
xor
sbb
inc
leave
mov
xor
aad
shr
dec
sbb
add
sbb
frstor
aas
mov
sub
insb
movsb
imul
xchg
imul
fldt
cwtl
sti
shr
jb
hlt
pusha
lahf
jnp
aad
dec
cmp
mov
xorb
mov
adc
mov
jmp
adc
pop
adc
sbbb
add
adc
fistps
je
and
in
cld
addr16
js
rorb
js
pop
jge
xor
insl
sbb
push
lods
cmc
mov
shll
andl
negb
aaa
movsb
cmp
mov
js
test
pop
das
std
into
cmp
ljmp
add
lret
test
push
lret
sub
or
jp
movsl
stos
mov
in
lds
or
in
int
pop
into
sti
jbe
rclb
cli
xor
loopne
add
rolb
clc
pop
pop
shlb
jnp
jae
lock
enter
push
sbb
aam
xchg
mov
negl
or
mov
mov
sbb
bound
loopne
outsl
xchg
enter
popl
push
loopne
je
stc
sbb
inc
mov
mov
je
cmp
adc
mov
cmp
cwtl
dec
rorl
mov
and
inc
mov
mov
or
push
xchg
ret
movl
xor
rclb
mov
cmp
xchg
push
mov
push
sbb
or
jge
xchg
das
arpl
int
xor
sub
xchg
out
push
enter
int
add
add
std
js
xchg
fdivl
cltd
mov
and
cltd
stos
aaa
xchg
imull
ja
jnp
mov
fcompl
ret
jge
dec
mov
jb
in
mov
imul
shlb
sbb
enter
jnp
or
sbb
stc
out
mov
push
mov
sub
mov
mulb
sbb
ljmp
push
inc
cmp
xor
xor
adc
xchg
xchg
lahf
mov
adc
pop
or
mov
pop
push
outsb
fdivrs
sub
repnz
push
hlt
insl
xchg
pop
add
imul
mov
in
insl
mov
orl
dec
dec
std
cs
movsb
sub
pop
mov
jo
mov
movsl
or
or
lock
in
popa
lods
and
sarl
leave
pop
in
shll
mov
les
cli
and
cmpsl
cmc
jo
fwait
cmp
insl
lahf
test
mov
nop
add
in
loope
aad
popf
repnz
mov
xor
mov
mov
out
push
dec
add
js
dec
xchg
int
rolb
popf
flds
outsb
rcl
push
xor
lea
cmpl
pop
jo
scas
int
fsub
mov
fidivrs
stc
mov
mov
mov
in
push
adc
std
xchg
push
lds
pop
les
ret
std
insb
cmpsl
inc
mov
jp
jns
shll
add
stos
cmp
jnp
jae
push
xorl
sbb
mov
fimuls
loope
std
push
jg
jle
pushf
mov
jle
popa
lea
mov
popf
fisubs
add
loopne
pop
rorl
add
inc
or
sub
mov
pop
mov
push
fdivl
ljmp
xchg
das
push
mov
rorl
out
fcomps
je
sar
das
xchg
add
es
mov
and
mov
mov
roll
mulb
loopne
cld
lret
push
mov
mov
pushaw
call
fidivs
std
mov
mov
adc
sub
aaa
data16
push
cmp
xchg
xchg
inc
pop
jp
inc
stc
mov
or
cmp
push
mov
dec
stos
add
and
imul
push
scas
add
mov
ja
jge
xchg
stos
xchg
daa
xchg
pop
f2xm1
cmp
andl
add
xor
and
in
pop
rep
data16
or
loopne
insl
imulb
push
ljmp
adc
leave
andl
cmp
cmp
sub
insb
and
jge
shll
lcall
insb
xor
jp
sbb
add
lret
jle
mov
pop
mulb
shll
js
pushf
xchg
sbb
jno
mov
xchg
test
shr
rcrb
testb
int3
xchg
hlt
adc
push
fdivs
imul
pop
addr16
jl
push
nop
ret
pop
ret
mov
dec
stc
addr16
push
or
clc
inc
fsin
cltd
shll
sub
adc
jb
sbb
mov
mov
xchg
out
ret
lahf
push
mov
mov
mov
fsubp
lods
arpl
dec
push
cli
cwtl
cs
mov
out
jg
sbb
fmuls
jle
xchg
cltd
cmpsl
jnp
mov
or
scas
mov
jae
mov
jl
cmp
jl
in
js
xor
loope
mov
popa
pop
push
loop,pt
sbb
mov
pushf
sbb
bound
out
mov
pop
xor
lods
jns
decl
or
lds
and
iret
jae
out
jo
lret
shlb
out
es
sti
pop
sbbb
in
mov
or
jg
push
mov
arpl
mov
adc
popf
lcall
scas
jge
jge
and
aaa
pop
lea
data16
adc
inc
sub
fcmovnbe
je
call
push
imul
in
add
xor
ljmp
cmp
sbb
outsb
and
cmc
or
and
pop
test
cmpsb
cs
movsb
push
or
testl
xchg
popl
lcall
sub
repnz
test
sub
sub
and
ss
xchg
pop
push
jo
push
inc
push
xchg
dec
xchg
data16
cmpsb
dec
xchg
push
xor
mov
mov
push
dec
js
les
push
sbb
iret
sbb
jo
jg
ljmp
and
xor
fwait
jae
mov
shrl
into
arpl
iret
arpl
aam
hlt
xor
iret
push
jl
add
push
mov
xor
adc
js
movsb
fldenv
mov
cmc
test
and
cmp
fldl
lock
mov
adcl
cmp
xchg
jecxz
mov
jge
cmp
into
shrb
xor
inc
fdivl
mov
sbb
imul
testb
mov
xor
push
xchg
mov
shll
pop
cmp
or
dec
push
dec
adc
mov
cld
mov
mov
mov
push
pushf
js
cmp
in
sub
insl
hlt
xor
xor
dec
push
xchg
ljmp
cmpsb
push
or
sbb
leave
out
cmp
mov
xchg
negb
in
dec
xor
pop
push
aaa
mov
imul
jmp
addr16
mov
cli
dec
repnz
cli
cmp
mov
dec
adc
jmp
aad
aas
mov
inc
xchg
dec
outsb
dec
push
sbb
cmpsb
push
lret
cwtl
lahf
clc
out
mov
push
out
xor
cmp
imul
jmp
fisubrl
push
mov
arpl
lret
nop
jo
add
jae
mov
jb
pop
sbb
mov
fwait
push
adc
pop
stos
adc
or
or
dec
loop
mov
movb
outsl
imul
sbb
jnp
jmp
xchg
cmp
mov
mov
jns
lock
or
dec
jmp
repz
nop
push
jp
or
lds
cmpsb
in
cmp
cmp
outsl
repz
test
gs
and
mov
sti
stc
aad
xor
imul
push
cmc
pop
divl
mov
push
cli
roll
je
mov
nop
and
das
repz
jno
pmulhw
mov
jno
std
cli
pusha
and
mov
divl
mov
mov
jge
mov
in
push
scas
outsb
jmp
cltd
or
xchg
jne
adc
scas
imul
lock
cwtl
or
lods
call
xchg
ja
inc
pop
jbe
das
enter
fwait
mov
push
pop
in
sbb
mov
inc
shl
lds
out
int
shll
pusha
jns
scas
shlb
xor
inc
or
adc
hlt
push
cli
mov
mov
mov
adc
sbb
mov
mov
or
adc
addr16
cmpsb
pop
xchg
scas
notl
pop
sub
push
fstps
in
cmp
sub
fcmove
add
arpl
dec
negl
cmpsl
push
lea
mov
aas
xor
mov
int3
movsb
jnp
lahf
fsub
sarl
mov
and
inc
inc
add
rol
cmpsl
stos
xor
and
pop
test
repz
jns
mov
mov
lret
roll
adc
mov
int
popf
lcall
cli
xor
jge
popf
sbbl
sub
test
loope
inc
mov
jno
cmp
xchg
out
pop
mov
mov
pop
adc
arpl
inc
and
or
xchg
mov
iret
and
ss
jmp
in
mov
andb
sbb
sub
int
mov
cmp
cwtl
inc
add
scas
test
dec
inc
pop
xor
cltd
cltd
mov
pop
pushf
stos
xchg
fnstsw
push
and
and
mov
sahf
mov
cmp
cmp
xchg
lret
sub
mov
sbb
mov
xchg
dec
ljmp
rcr
jmp
in
into
out
add
test
mov
popl
pop
and
dec
lret
stc
test
call
fptan
cmc
test
add
cs
jg
push
out
pop
enter
xchg
mov
lods
mov
cmp
insl
jle
mov
jg
sub
cwtl
cld
push
iret
add
outsl
mov
xlat
push
mov
inc
push
xchg
in
insb
rcrl
sbb
and
bound
fnstenv
aaa
fisubs
xor
adc
sub
and
aad
data16
rcll
iret
mov
pop
rolb
and
cmc
addl
loopne
std
rorl
cmp
idiv
inc
mov
test
pop
bound
mov
xor
lret
das
or
sub
idivb
or
pusha
or
sub
jns
and
into
cmp
adc
mov
out
int
repz
push
in
addl
inc
pop
lahf
arpl
mov
ja
inc
movsl
cwtl
sar
xchg
std
das
and
push
jecxz
sarb
xor
mov
addl
mov
dec
test
mov
test
pop
adc
push
sub
sbb
mov
adc
cld
jecxz
pop
out
xor
xchg
xchg
lret
mov
xchg
inc
adc
mov
adc
cmp
imul
pop
clc
into
jns
xor
add
fs
lds
aad
jge
sahf
std
call
mov
cli
dec
sahf
adc
test
jp
pop
in
and
push
movsl
aaa
push
jne
sahf
test
dec
cmc
aas
pop
add
loope
clc
lcall
sub
add
shr
les
inc
add
mov
inc
or
sbb
jno
pop
sbb
nop
negb
das
arpl
jb
pop
adc
xchg
push
push
mov
jle
insb
sub
std
sahf
rcr
fists
mov
int3
je
xchg
push
popf
jne
int3
shll
daa
ja
mov
sahf
fsubl
or
and
cmpsb
mov
inc
test
sbb
lods
add
cmp
fsub
subb
jmp
mov
shl
xchg
dec
clc
aaa
arpl
xor
xchg
or
popf
sbb
xchg
add
mov
lret
jns
and
xchg
fstl
imul
fidivrl
jl
mov
test
xor
push
gs
and
fs
sub
stos
inc
xchg
or
stos
push
je
pop
cmp
lahf
mov
jae
mov
jge
xorb
test
arpl
mov
pop
push
cmc
mov
lahf
xchg
clc
sbb
push
or
mov
xlat
and
mov
outsl
pop
js
or
or
aaa
cs
test
je
pop
mov
sbb
fs
insl
push
stos
test
cld
pop
sub
sbb
test
into
into
mov
popf
loopne
or
fnsave
xlat
mov
outsl
aaa
pop
mov
push
sbb
lcall
dec
mov
sbb
stc
push
shrb
fcom
pop
mov
push
out
and
pop
arpl
cs
push
aad
hlt
cmp
out
icebp
mov
push
loop
fcomp
test
dec
xlat
leave
mov
add
sbb
das
mov
int3
and
mov
mov
jge
jmp
sbb
mov
sbb
cs
pushf
pop
sbb
xor
sbb
cs
xchg
das
add
inc
loope
mov
out
pop
cli
scas
dec
pop
xchg
dec
scas
cld
xchg
cwtl
sbb
in
pushf
mov
cmc
and
mov
jo
push
enter
jecxz
stos
xor
aaa
dec
mov
mov
outsb
test
inc
and
inc
cltd
pop
mov
inc
imul
mov
sub
push
fidivl
jno
xlat
ja
adc
mov
cmc
push
and
in
outsl
fnstcw
popa
cmp
xor
fiaddl
jno
repnz
cmp
xor
xchg
les
aad
add
jae
shll
xchg
fs
mov
xchg
sub
aas
int
inc
xchg
add
loop
mov
es
xchg
mov
jns
xchg
xchg
and
and
or
cld
out
dec
repnz
and
in
call
sbb
cli
test
adcl
mov
push
cmp
mov
mov
iret
lcall
add
imul
and
cmpsb
repz
inc
cmp
popa
jmp
rclb
jno
push
dec
add
push
das
sbb
or
jae
lret
lahf
fstps
mov
inc
sbb
stc
ret
mov
lods
mov
mov
hlt
js
out
mov
shrl
out
push
xchg
inc
int
jbe
dec
mov
int
daa
xlat
push
rorb
jnp
test
outsb
mov
daa
add
cli
fdivrl
inc
cli
out
push
mov
sahf
lcall
jp
loopne
add
xor
shrb
adc
or
mov
cs
mov
dec
int
jge
pop
aaa
fstps
shlb
ret
xchg
or
cmp
das
push
andl
scas
push
jb
mov
fsubl
inc
sub
mov
and
iret
dec
cmpsl
xchg
xchg
test
outsb
inc
stos
ficomps
xchg
cmp
sti
mov
fistps
mov
mov
fildl
mov
js
testb
xchg
mov
scas
outsb
imul
sti
pop
outsb
addr16
xchg
dec
cmp
mov
popa
rolb
sbb
cltd
mov
jnp
inc
mov
fcmovne
loopne
inc
dec
fadd
in
and
mov
and
cmp
jne
cld
inc
lods
test
inc
loop
roll
inc
int
add
rcll
sti
les
and
out
ss
aas
jb
jmp
jo
movsb
mov
sbb
aad
mov
mov
xchg
es
sub
xor
mov
je
subl
xchg
push
insb
sbb
data16
pusha
and
push
push
pop
clc
in
inc
inc
mov
addr16
jo
lahf
dec
fidivrs
sbb
cmp
mov
xor
ss
sub
jne
sbb
pop
cmp
push
into
push
pop
adc
ja
fisttpll
add
sbb
cltd
sub
out
insl
sub
aam
ret
mov
push
cmp
fisttpl
adc
pop
and
les
or
out
dec
rcll
add
and
idivb
dec
or
scas
adc
mov
cmp
jg
and
sbb
movsb
cltd
dec
jbe
movsl
xchg
jnp
js
mov
dec
je
cmpsl
enter
negl
jnp
aaa
xchg
aaa
int
and
popa
jmp
jmp
jl
adc
movsb
xchg
cltd
pop
imul
cli
mov
sbb
and
loop
mov
add
mov
sarl
and
gs
sub
or
mov
cmp
add
ja
fs
sub
sbb
push
in
sbb
je
cs
loop
pop
pop
mov
inc
pop
and
mov
enter
xchg
ds
rorl
sbb
rcll
and
mov
xchg
mov
addb
sbb
std
enter
orb
aad
sub
jecxz
xchg
or
fs
addl
jns
mov
jge
movsb
sbb
jnp
add
outsl
mov
mov
cmpsb
mov
jmp
gs
test
jg
das
xchg
mov
imul
xchg
ret
and
mov
mov
cmp
leave
mov
push
cltd
mov
imul
fs
mov
mov
rolb
cmp
cmp
inc
repz
pusha
arpl
ss
mov
daa
or
ss
shl
sub
cs
lds
lods
loop
sub
je
adc
cmp
push
xlat
sbbb
mov
cmp
pusha
cmp
fbstp
ja
scas
xor
pop
mov
subl
insl
stc
mov
ret
cmpsb
in
pop
pop
loopne
pop
inc
cltd
mov
mov
aam
pop
stos
add
jp
add
mov
sbb
jbe,pt
aad
jmp
in
cmp
into
jae
jnp
inc
xor
cmpb
insl
imul
jl
out
nop
push
mov
mov
dec
aas
mov
inc
test
dec
xchg
fisubs
pop
or
adc
mov
push
xor
iret
ds
popa
push
inc
clc
xor
dec
xchg
stos
jmp
imull
bound
std
fidivrs
fsubr
fidivrs
andl
das
es
addl
mov
mov
rolb
aaa
mov
dec
pushf
stos
out
es
iret
jnp
scas
pop
jecxz
int3
add
xchg
jae
cmc
dec
and
xor
mov
addr16
xorb
push
pop
xchg
jb
data16
gs
out
or
add
bound
jp
adc
loopne
movsl
mov
clc
in
fistpll
adc
ja
ljmp
sub
mov
xchg
fstl
addr16
jp
dec
stos
hlt
stos
enter
or
lcall
clc
outsl
jmp
aad
clc
mov
lock
and
and
int
lods
rorb
cs
hlt
or
xchg
sbb
xor
jae
inc
jecxz
cmp
mov
sub
mov
mov
mov
ss
xor
mov
andb
hlt
adc
fucomp
push
mov
nop
lret
cmp
hlt
push
popa
ffreep
mov
test
test
lds
ret
mov
mull
or
xchg
dec
xor
jb
lcall
stc
adcl
out
dec
test
shll
into
jae
pushf
mov
inc
loopne
jae
and
shlb
or
push
mov
inc
sbb
sub
mov
mov
mov
iret
aas
loop
je
pop
shlb
sbb
cmp
popf
enter
cltd
sbb
dec
fistps
xor
push
dec
rcll
hlt
xor
pusha
pop
out
stc
inc
popf
jo
aad
sti
pop
test
sbb
xchg
mov
sub
dec
mov
mov
mov
jae
add
xchg
add
mov
mov
je
cmp
insl
scas
je
inc
add
add
lock
sbb
inc
testb
mov
popa
sbb
loope
push
xor
xchg
mov
xchg
mov
xchg
pop
out
push
sbb
mov
or
clc
movsl
cmp
sahf
add
fcomps
cmp
cli
mov
inc
rcrl
enter
xchg
ficoms
sub
imul
push
cmpsb
insl
test
xchg
mov
imul
jecxz
repz
mov
inc
jl
xchg
inc
cmp
push
xchg
rorl
pop
pop
sub
pop
aaa
sub
pushf
cs
mov
setbe
popf
insw
xchg
push
mov
enter
pop
push
mov
xchg
xor
aam
cmp
sub
data16
cli
inc
and
sbb
and
and
dec
dec
adc
divb
test
nop
shl
adc
dec
int
addr16
out
cld
push
sub
in
sbb
pop
jecxz
mov
dec
push
out
push
push
adc
add
sti
sub
cmp
or
xchg
test
dec
jno
mov
jp
popl
sub
sbb
cmpsl
inc
jo
xchg
cli
subb
mov
xchg
fst
mov
mov
mov
ss
add
pop
in
repz
cmp
nop
pop
cmp
pop
faddl
dec
cwtl
xor
out
jecxz
jnp
mov
not
adc
scas
call
dec
adc
mov
adc
cmpsb
and
pop
sbb
movsl
jecxz
pop
rclb
mov
loopne
inc
jle
shrl
sub
push
jns
mov
adc
test
bound
call
sbb
out
sbb
insb
aam
ds
fnsave
icebp
hlt
inc
mov
jne
and
pop
dec
in
add
sbb
in
dec
pop
inc
sub
mov
andb
adc
add
fistpll
cmp
adc
pop
daa
mov
mov
ss
xchg
imul
cld
jnp
movsl
push
pusha
cli
or
xor
lret
stos
jecxz
addb
sub
pop
jo
cmpsl
mov
fidivl
fs
fsubl
shr
mov
jno
addr16
inc
lcall
xorb
fistpll
sbb
in
pop
add
xor
data16
mov
inc
into
mov
mov
add
out
mov
js
out
insb
xor
or
dec
adc
cld
subl
push
shlb
fnstsw
mov
jp
rol
loope
or
jl
mov
rorl
jge
in
out
add
xchg
mov
mov
sub
in
mov
xor
rorb
jecxz
repz
pop
sbb
in
dec
xor
scas
les
mov
cmpb
cmp
imul
ss
mov
push
rcr
add
jne
jmp
pop
inc
cmp
dec
ficoms
movsl
ret
insl
xchg
mov
dec
mov
xchg
cmp
pop
mov
inc
rorl
adc
mov
fcmovb
iret
mov
mov
mov
or
clc
sti
shl
mov
push
popa
add
call
add
jg
and
add
jecxz
mov
xchg
decb
dec
inc
aam
in
cmpsl
xchg
ret
dec
insl
inc
daa
pop
sbb
xor
repnz
push
scas
fnsave
adc
xor
push
lock
mov
xchg
ds
pop
jl
mov
dec
jecxz
xchg
movsl
pop
in
enter
aaa
mov
fld
push
fcoms
mov
jnp
js
out
pusha
je
iret
or
shl
popf
push
fimuls
gs
rolb
pushf
psrad
mov
jmp
push
pop
push
jno
repz
inc
xor
aas
pop
push
adc
into
jo
cltd
pop
sub
jnp
jno
pop
popf
jp
sbb
inc
stos
inc
xchg
out
push
mov
loopne
xor
push
daa
inc
sub
sar
fsubrl
hlt
push
bound
int
dec
roll
adc
or
movsb
dec
push
and
das
int3
jg
movsl
push
pop
xor
sub
inc
adc
pushf
push
fisttpl
push
pop
jnp
push
dec
xor
roll
stos
xchg
jae
sub
push
add
in
rcrl
cld
in
and
aam
out
sub
hlt
mov
lret
ss
jge
push
add
dec
out
repnz
out
push
std
cmc
sbb
sahf
xor
push
imul
dec
mov
and
dec
push
inc
mov
add
out
cmp
mov
shll
stc
xor
mov
int3
insl
adc
clc
adc
push
sub
adcl
idivb
idivl
sbb
pop
dec
sub
loope
dec
popf
loopne
fcmovbe
stos
outsl
iret
lds
sbb
lret
scas
paddw
test
jo
stc
push
dec
lahf
cs
aas
outsl
sub
dec
orb
aaa
push
popa
mov
mov
aas
mov
cmp
mov
fisttps
sbb
lea
ret
fwait
xor
push
ja
xchg
es
jge
jle
fcmovnu
xorb
popa
jns
filds
pushf
addb
adc
int3
jns
sub
addl
scas
ljmp
jp
loopne
mov
sub
and
add
cmp
popf
xchg
inc
mov
loopnew
pop
data16
push
and
pop
jne
pop
inc
fcmovne
xchg
mov
adc
jge
mov
movsb
popf
mov
mov
daa
popa
add
add
push
inc
adc
out
movsb
sarb
stc
sbb
fisttps
cmpsl
ret
mov
in
dec
push
ret
and
leave
push
xlat
sbb
dec
mov
add
mov
cltd
stos
sar
ljmp
sub
loop
insb
xor
ret
lea
push
insb
popf
jo
jbe
lea
jnp
jns
out
fs
push
add
sub
push
iret
cmp
movsl
mov
mov
fdivrp
imul
mov
xor
insl
ds
fs
mov
inc
sub
dec
pop
inc
sbb
sbb
cmp
inc
jl
outsl
cld
add
call
gs
mov
mov
adc
or
cwtl
mov
mov
clc
call
mov
mov
or
inc
push
shlb
cld
or
mov
sub
dec
add
inc
mov
pop
pop
repnz
jb
stos
inc
aam
dec
xor
add
fdivr
aam
pop
xor
push
ror
pusha
out
push
out
inc
stos
aas
mov
and
push
push
je
mov
sbb
sti
enter
sub
add
stos
inc
test
xor
mov
xchg
jo
mov
icebp
lret
into
mov
sub
push
xor
scas
push
mov
insl
cmp
mov
iret
adc
aad
aas
shlb
xor
test
jno
fwait
pop
cmp
je
inc
cmpsl
out
push
lret
sub
dec
add
and
adc
mov
cmp
sub
or
jg
mov
orb
mov
stos
leave
mov
jae
mov
jns
or
stos
out
jns
int
loop
fsubl
push
arpl
jno
cmp
push
xor
mov
dec
sbb
pop
dec
test
jae
jg
adc
in
inc
nop
loopne
mov
pop
inc
andb
fidivrs
sub
lock
pop
mov
shll
shrb
cmp
jno
pop
mov
and
inc
xchg
mov
outsl
shrl
mov
bound
movsl
stc
js
inc
mov
push
pop
and
push
sar
xchg
fsubr
jo
jns
movsl
adc
and
sub
adc
add
in
in
mov
cmc
aad
and
js
insl
jo
adc
in
outsl
sbb
nop
popf
add
dec
mov
sbb
sbb
fwait
push
or
lock
and
push
mov
xchg
mov
pop
inc
xor
jbe
mov
addr16
mov
dec
arpl
push
jge
or
fstp
ss
xlat
sub
add
int
push
pop
cmp
fcmovbe
into
dec
out
std
sbb
mov
scas
sbb
jecxz
mov
xchg
test
aaa
dec
cmp
rcll
out
test
jbe
sub
jmp
adc
add
outsb
sub
inc
hlt
jge
clc
or
inc
mov
sbb
and
test
loop
cmp
lds
aad
mov
sub
push
pop
dec
pop
dec
cmp
xor
das
in
in
cwtl
movsb
lock
imul
iret
movsl
icebp
push
mov
mov
orl
push
call
xchg
negb
add
sahf
mov
sub
loope
mov
aaa
dec
push
pusha
imul
into
or
scas
xor
sbb
xor
fidivrs
jmp
pushf
push
xchg
pop
or
sub
jbe
push
and
mov
dec
pop
and
dec
subl
rclb
mov
dec
or
leave
jg
jl
pop
xor
shl
sbb
movsb
das
mov
repz
adc
in
test
test
adc
cltd
mov
push
cmp
adc
out
ljmp
pop
bound
cmpsl
stos
mov
into
sub
shlb
fdivrl
fildll
repnz
movsl
lahf
mov
jg
mov
cs
popa
inc
mov
pop
dec
jg
stc
mov
repz
lods
sbb
test
and
pop
ja
push
xchg
adc
cmpsl
pop
leave
mov
test
inc
push
ret
adc
cmpl
dec
cld
and
call
jmp
sub
adc
push
test
cmpsb
or
nop
xchg
movsb
jle
push
sbb
repnz
pushf
aam
add
insl
mov
and
sub
cmp
lret
rep
ljmp
pop
sti
ljmp
adc
icebp
sub
adc
xorl
test
fadd
add
in
rolb
mov
scas
outsb
imul
ds
push
push
cmp
insb
sbb
lcall
imul
lret
jl
dec
jb
cmp
dec
sbb
inc
aam
clc
mov
pop
mov
inc
mov
mov
mov
cmp
es
cmp
pop
lcall
cltd
int3
mov
jb
js
cmpsl
inc
pusha
and
jmp
xchg
jno
push
dec
pop
lock
fcoms
jmp
lahf
ljmp
xor
sub
leave
cmp
outsb
xlat
mov
or
inc
mov
push
stos
jmp
mov
push
andl
aas
dec
lret
mov
out
adc
movsb
icebp
inc
call
loope
movsb
lods
jge
xchg
jb
pop
inc
imul
pop
cltd
xorb
jg
stc
lods
xchg
pop
lret
bts
push
sbb
xchg
rorb
push
sub
iret
shl
nop
ja
mov
push
push
push
sbb
stos
cld
or
cwtl
cmp
repz
lds
test
pop
or
arpl
mov
dec
imull
push
fimull
daa
jge
outsb
bnd
lcall
jb
rorb
jp
sbb
rcr
jle
xchg
add
cmp
and
out
cmpsl
cs
mov
cmpsb
inc
je
frstor
inc
pop
mov
dec
push
adc
push
movsl
lods
add
imul
cld
dec
xor
leave
repnz
xchg
fcoml
loope
daa
sub
aam
loope
jns
sub
das
or
adc
icebp
pop
mov
movl
out
loopne
int
mov
push
mov
loop
xor
fmul
lcall
sub
and
mov
pop
jmp
inc
enter
addl
xor
mov
loopne
test
push
dec
xchg
jecxz
inc
jmp
dec
mov
inc
jl
dec
out
mov
ret
push
push
data16
sub
jle,pt
mov
scas
inc
popf
scas
mov
cmpsl
or
cwtl
mov
lea
hlt
roll
or
add
mov
rcl
ficoms
fs
loope
jg
out
mov
pop
movl
popa
mov
pop
addr16
mov
movsb
insl
add
xchg
ja
fdivl
cmp
in
mov
aaa
jge
lea
fdivs
pop
or
aam
or
test
imul
dec
xor
xor
mov
sub
hlt
out
mov
call
in
push
xchg
mov
push
sbb
jg
sbb
or
pop
lahf
popf
push
mov
pop
push
aam
and
mov
jle
test
insb
pop
ljmp
jge
mov
mov
mov
adc
std
insl
xor
rcl
jmp
adc
mov
push
lahf
cmpsb
and
clc
jecxz
out
push
repz
jp
mov
mov
popa
xor
pop
mov
add
jns
ds
push
pop
cmp
cmc
adc
cmpsl
xchg
mov
dec
mov
push
aad
ret
and
dec
shl
jmp
bound
je
fwait
and
adc
pop
inc
sarb
cmp
sbb
inc
inc
imul
test
stc
add
push
jge
mov
arpl
stos
stc
ja
nop
aam
sub
int3
leave
cmp
jge
repz
pop
or
jmp
pop
movsb
jle
sub
shrl
or
xor
rcrb
testl
test
lcall
inc
fisubrl
out
push
cmp
or
xchg
scas
xchg
lock
or
cmp
andl
enter
adc
adc
mov
jl
inc
lahf
lcall
jge
hlt
jmp
xor
int
jp
hlt
jb
mov
jp
cwtl
xchg
loop
fimuls
mov
push
popa
mov
rcrl
rol
xor
jne
inc
dec
outsl
xchg
jbe
push
xor
out
adc
ss
mov
mov
jbe,pn
in
mov
xchg
xchg
push
movsl
les
xchg
ret
and
dec
cmp
hlt
mov
push
clc
sbb
hlt
jecxz
inc
cltd
inc
mov
and
ret
inc
mov
xchg
popf
out
rclb
pop
scas
das
or
mov
jne
adc
jmp
jecxz
mov
jno
divb
or
jle
xchg
inc
loop
mov
lahf
jecxz
cmpsl
stc
test
data16
add
push
dec
cmc
dec
mov
fsubp
push
xor
jnp
cmpsl
lock
into
mov
jnp
or
dec
aaa
pop
iret
add
repnz
pop
dec
sub
nop
and
mov
scas
push
cs
pop
push
subl
and
sbb
mov
push
cltd
fs
sbb
cmp
pop
push
mov
adc
push
hlt
lret
insl
push
xchg
sbb
jp
dec
shr
out
arpl
mov
push
mov
add
inc
inc
xor
jb
sahf
pop
mov
inc
adc
and
stos
sbb
sbb
mov
test
push
loop
jnp
and
shlb
lods
pusha
or
aad
push
xchg
jle
iret
push
sub
rolb
cmpsb
mov
push
mov
jmp
icebp
stos
cmpsl
and
arpl
pop
dec
adc
lds
push
das
testl
cmc
xchg
out
jmp
sar
push
sbb
scas
fucom
fidivl
enter
cwtl
fbld
ficompl
sbb
out
jb
sarb
dec
add
testl
mov
jne
sarl
incb
push
dec
lahf
push
sti
xlat
adc
fcompl
cmc
dec
fidivrl
lock
cmp
inc
lea
pop
in
or
cmp
jg
xchg
mov
inc
adc
or
jnp
mov
dec
push
jmp
jno
mov
add
movsl
xchg
adc
mov
sub
lods
stc
jge
add
in
or
rclb
scas
adc
shrl
inc
mov
out
xor
mov
xor
cmpsb
mov
xor
jge
cmc
push
push
insb
push
fs
adc
inc
loopne
ja
outsb
pushf
cld
outsl
or
repnz
popa
sub
sbb
jae
ret
nop
dec
frstor
jns
repz
shrb
decb
xchg
js
push
lcall
pop
inc
loop
dec
and
mov
sub
push
jbe
lcall
lret
sbb
jg
mov
sbb
dec
aaa
mov
shrl
and
xchg
adc
mov
lds
push
jg
pop
sbb
xchg
cmp
dec
adc
jmp
push
pop
push
movsb
negb
and
or
xor
stc
and
push
sub
jo
mov
out
push
cld
xor
lcall
and
movsl
pop
ds
xchg
mov
test
jp
push
mov
insl
inc
xchg
push
xacquire
pop
mov
divb
xor
scas
testl
xchg
mov
cltd
inc
loope
les
sbb
and
loopne
mov
movsb
sbb
cmp
inc
sub
inc
push
jo
push
enter
or
push
imul
stos
sbb
jecxz
dec
addb
out
subl
gs
int
movsl
xbegin
and
in
pushl
pop
adc
mov
lahf
adc
cld
jg
jo
push
jns
insb
popf
call
aaa
sub
lods
popf
fsub
das
push
cwtl
pop
xor
test
pop
into
cld
pop
loope
and
repnz
mov
mov
into
lods
jae
and
ljmp
push
mov
roll
aas
ds
in
mov
in
daa
out
pop
lds
imul
pop
push
mov
lahf
ds
push
std
test
inc
in
jg
sub
jne
add
xor
adc
enter
and
je
push
lds
ljmp
clc
jae
pop
inc
imul
xlat
cmp
cmp
aam
in
mov
test
imul
jg
mov
mov
aam
or
shlb
jo
jne
pop
out
sbb
dec
pop
add
decl
pushf
inc
jnp
out
test
in
rep
mov
push
xor
out
std
push
adc
rcll
xlat
mov
dec
cmpsl
jl
inc
or
fldcw
cmp
into
adc
mov
jle
outsb
js
xlat
scas
or
ffreep
mov
jnp
ja
loop
cmc
add
scas
push
pop
and
in
hlt
std
leave
xchg
push
or
mov
cmp
adc
adc
test
shll
xchg
scas
mov
in
std
pop
cmp
leave
leave
fwait
jle
clc
inc
xor
cld
xchg
dec
jp
sbb
insb
imul
std
jl
pop
sub
mov
jbe
xor
aaa
fists
cmc
sub
aam
ja
scas
cmp
inc
cmp
pusha
and
cwtl
mov
sub
in
xorb
lods
stos
movsl
cwtl
faddl
mov
push
es
mov
cmpb
xor
outsb
les
inc
or
dec
aad
dec
into
mov
push
push
xor
imul
sahf
sbb
mov
orl
pop
daa
xchg
sbb
push
cmc
pop
mov
mov
imulb
test
or
xor
loopne
decb
cld
dec
in
jae
or
in
sti
jmp
pop
sub
push
cld
icebp
mov
mov
and
push
cwtl
or
xchg
cltd
push
push
cmc
pop
movsb
xchg
sbb
insl
jp
fmull
inc
sbb
sub
mov
mov
or
loope
mov
lcall
scas
iret
xor
in
hlt
es
lods
fcmovnb
pushf
or
xchg
iret
jne
mov
xor
mov
or
setl
enter
lods
push
mov
jmp
pop
push
xchg
cwtl
pop
jge
push
ret
je
fldt
adc
cmpsl
or
test
cmp
dec
cmpsb
sub
dec
mov
pop
sbb
mov
pop
lahf
xchg
mov
ds
imulb
out
push
rcrl
aaa
mov
or
lods
jns
inc
mov
push
lods
xchg
mov
sub
test
pusha
outsl
dec
pop
inc
jae
std
std
cmp
testb
xor
push
popa
stos
dec
add
push
or
ret
arpl
xlat
int3
jae
and
daa
cwtl
and
cmp
mov
clc
adc
shll
sbb
xchg
test
mov
and
inc
dec
inc
jg
icebp
pop
popa
cmp
mov
xchg
daa
xor
lret
aas
leave
stc
lret
bound
inc
hlt
in
inc
lock
add
adc
mov
cmp
sub
mov
inc
in
aad
fstps
push
lods
scas
pop
adc
cmp
repnz
sbb
xchg
loope
mov
or
ss
movl
pop
cmc
adc
imul
xor
sub
jns
jo
inc
fwait
push
cmp
cli
cmpsl
imull
lahf
daa
jg
aad
repnz
mov
sbb
shrb
cmpsl
aam
xchg
adc
pushf
jb
mov
mov
pop
xlat
cmp
xchg
push
inc
adc
filds
push
sub
mov
fwait
stos
clc
shlb
lcall
dec
mov
dec
outsb
ss
shlb
add
insl
roll
pop
jne
and
pop
loopne
test
es
movsb
xchg
mov
and
sub
jbe
xchg
inc
ror
cmp
scas
and
adc
rorl
push
pop
ja
jo
int3
push
mov
bound
repz
cld
nop
fwait
in
ljmp
stos
out
xor
gs
fstps
je
adc
hlt
sub
popf
push
sbb
lock
cmp
cmc
mov
imul
in
push
test
ds
adc
xorl
xchg
or
insl
xor
mov
daa
out
incl
cmp
lods
xchg
mov
mov
test
jns
xorb
inc
push
mov
lret
jp
test
sub
jle
pop
mov
jns
pop
sub
xor
sbb
jb
mov
mov
xchg
adc
xchg
or
pop
imul
dec
das
fnstcw
xlat
lret
mov
stos
mov
in
repz
and
and
mov
nop
test
adc
xrelease
mov
push
sub
mov
push
in
popa
push
ljmp
das
lds
mov
mov
loope
push
fsubrl
xor
or
dec
data16
sti
fisttps
jbe
outsl
addr16
adc
ss
insb
in
push
inc
lret
aad
add
and
in
int3
mov
adc
dec
stos
rsqrtps
fcmovne
les
push
ds
push
sbb
test
roll
dec
pop
mov
xlat
in
xchg
pop
pop
roll
rcrl
aam
inc
mov
mov
add
dec
aas
fsts
xchg
mov
iret
addr16
test
pop
in
inc
in
sub
ret
mov
insb
adc
sahf
dec
aam
aad
pop
mov
in
cmovg
and
or
cwtl
cmp
jb
cmp
jecxz
fucomi
cwtl
or
movsl
mov
hlt
add
daa
xlat
repnz
fidivrs
mov
mov
add
xor
scas
lock
pop
sarb
outsl
cwtl
fiaddl
and
cli
xlat
jl
cmc
xor
pop
movsb
push
out
data16
and
sub
mov
and
mov
insl
xchg
ss
sbbb
inc
xchg
test
dec
cmc
outsl
adc
push
xchg
ret
mov
push
dec
push
adc
cmp
adc
adc
fcomi
orl
mov
daa
arpl
lods
or
daa
mov
inc
dec
mov
fidivl
insl
jbe
inc
pop
or
pusha
cmp
inc
cmp
int
xor
add
push
add
pop
dec
cmc
xor
mov
int3
or
push
xchg
dec
rep
cmp
jbe
sbb
ljmp
push
inc
pop
and
aaa
mov
mov
movsb
cmp
aaa
daa
sbb
push
push
pop
rol
sub
ljmp
sbb
xchg
inc
mov
fsubrp
mov
xor
dec
jnp
leave
nop
xchg
dec
cmp
insb
inc
out
jle
xchg
and
dec
enter
or
je
pop
adcl
cmp
pop
jbe
xor
dec
popa
pop
sub
xchg
lret
xlat
adc
mov
add
std
add
cmp
cmp
shll
dec
cltd
and
or
and
jl
sbb
rorl
mov
or
jl
adc
daa
inc
push
clc
dec
adc
notl
sti
imull
into
add
repz
mov
sub
lods
sub
test
insb
das
push
xchg
adc
lock
pushf
stos
add
bnd
fsubrs
mov
cld
rcrb
into
pop
fadd
in
xor
icebp
bound
add
daa
sub
insl
xchg
pop
xor
add
andl
mov
es
aas
push
maskmovq
testl
lea
jns
mov
mov
fsubs
insb
inc
ss
jbe
push
fnstsw
fwait
push
fs
movb
andb
nop
stc
popf
xchg
fidivl
push
inc
pushf
jp
out
cmpsl
jmp
call
ret
sbb
xchg
push
sub
xor
cld
or
mov
stos
dec
dec
inc
mov
mov
popa
in
clc
dec
and
add
add
xchg
cmpsb
stos
dec
mov
lock
cmp
pop
jno
inc
mov
mov
push
mov
daa
daa
sub
xchg
in
inc
xchg
push
push
push
mov
mov
stos
adc
cltd
incl
jno
lahf
out
iret
jl
jge
xor
rolb
call
inc
push
es
mov
sbb
xchg
enter
jge
imul
push
or
adc
mov
cmpsl
cmp
push
cld
mov
aas
lahf
add
loopne
fwait
rcrb
xchg
pop
pop
arpl
pop
jno
dec
insb
loop
in
loopne
pop
popf
ret
mov
and
jo
sbb
or
aad
sbb
jmp
mov
and
loope
sarl
and
lods
or
imul
jne,pt
in
lds
lods
loopne
inc
lcall
hlt
lahf
jecxz
dec
cmp
mov
mov
aad
push
dec
jl
mov
bnd
pusha
dec
aad
mov
aaa
push
aaa
enter
mov
lock
inc
gs
sub
pop
xor
out
outsb
or
jae
dec
shll
es
ss
sub
ret
xor
imul
inc
scas
dec
test
andl
push
jmp
xchg
cmp
and
cmc
addr16
mov
push
mov
testb
pusha
lret
mov
inc
scas
inc
jmp
faddl
inc
int
je
test
jl
xorb
lahf
jb
push
jp
fucomi
push
mov
jns
bswap
out
mov
sbb
aam
push
mov
xor
popf
shr
call
push
and
adc
jo
out
cmc
mov
adc
fcoml
cmc
frstor
xchg
pushf
fildl
mov
jle
mov
das
ja
mov
shl
xchg
push
pushf
arpl
mov
pop
sub
xchg
test
popf
dec
xlat
and
movsb
movsb
pushf
or
sub
ljmp
outsl
lcall
fwait
popf
pop
daa
insb
scas
mov
mov
dec
outsb
pop
mov
cmpsb
dec
mov
adc
pop
sti
stos
dec
mov
out
mov
std
in
mov
inc
sahf
inc
lds
cmpsl
bound
imul
push
push
jmp
insb
inc
and
fwait
and
and
adc
mov
lahf
xchg
lea
pop
cmp
push
lahf
and
push
lods
pop
push
add
push
out
imul
loop
and
xlat
imul
sbb
nop
push
mov
xor
ds
mov
repz
gs
xchg
mov
mov
jns
sbb
mov
lahf
test
mull
pop
mov
pop
inc
pushf
or
pop
jmp
iret
mov
mov
iret
jl
mov
xlat
mov
into
push
stos
aam
aas
xlat
jno
xchg
add
xchg
imul
jge
cltd
aaa
mov
pop
push
push
sub
lret
jge
and
xchg
inc
mov
loop
push
popf
mov
aad
jbe
mov
inc
in
fidivl
orb
loopne
and
fimuls
jp
ret
xor
push
push
data16
xor
iret
les
fsubs
leave
pop
mov
add
dec
pop
fisubl
adc
lea
notl
adc
or
loopne
cmp
adcl
std
mov
in
mov
ja
flds
push
icebp
jno
push
aas
pop
adc
nop
mov
out
mov
inc
mov
ret
mov
lret
pushl
inc
add
xor
or
xchg
push
mov
mov
sbb
insl
push
mov
push
pmuludq
fdivl
cli
inc
cmp
and
mov
push
sbb
inc
mov
and
jnp
adc
pop
xchg
notl
into
or
es
sbb
sbb
jno
and
shl
orb
in
enter
cmp
sbb
aaa
sti
loope
pop
cli
in
xchg
iret
adc
lahf
xchg
test
pop
push
int3
inc
jge
outsb
mov
sbb
dec
loop
pushl
dec
pop
xor
adc
scas
xlat
mov
pop
add
sbb
xchg
add
dec
cmpsb
dec
push
mov
mov
xor
in
std
in
loope
fs
pop
mov
sub
push
push
jbe
and
push
lods
xchg
cs
ds
mov
mov
imull
dec
in
sub
mov
negb
push
fwait
pop
or
fidivl
test
es
lds
push
pop
cltd
adc
sub
xchg
xchg
mov
insl
cmp
sub
jge
mov
cli
bound
sub
rorl
and
sbb
dec
out
xchg
push
mov
and
or
lods
and
mov
cli
mov
ss
adc
nop
loop
mov
nop
xchg
jnp
push
rcrl
inc
cmp
lods
inc
sahf
iret
ds
and
lret
sbb
cs
pop
shlb
notl
repnz
jl
cs
fchs
loop
jo
and
scas
fidivrs
cmp
mov
or
cmc
lret
cmp
or
push
aaa
or
js
daa
popf
cltd
adc
xor
loopne
push
jecxz
aam
add
xor
and
hlt
inc
lea
xor
or
lahf
jmp
mov
popa
push
jl
mov
enter
out
cmp
popf
test
stos
jo
test
std
iret
mov
dec
popa
hlt
adcl
aad
push
ret
mov
xchg
fsubrp
enterw
fiaddl
push
mov
sbb
jnp
jmp
leave
lahf
add
ret
push
loope
lret
mov
aaa
fstpt
mov
test
cmp
sti
mov
popa
int
pop
sub
push
mov
add
jae
fsubl
cmp
xchg
imul
in
jmp
mov
hlt
add
shl
mov
mov
adc
pop
or
stos
mov
sbb
or
aam
and
imul
loope
ret
mov
jg
cs
pop
leave
sub
cmpsl
mov
div
ror
or
rcrb
add
mov
jmp
lahf
loope
sub
add
cmp
and
xchg
sub
lcall
add
sbb
jg
sub
shrb
sub
shrb
outsl
ds
xorl
add
jge
aad
fiaddl
sub
or
mov
lods
jle
out
pop
jnp
movb
adc
rorb
xchg
and
shll
push
dec
stc
inc
sbb
loope
cmp
sbb
int3
idiv
xor
push
lock
movsl
repz
push
scas
mov
movsb
leave
test
cmpsl
sbb
push
jae
in
mov
cmp
gs
jb
adc
inc
dec
jns
cmp
pop
adc
xchg
pop
rcll
and
sbb
push
add
scas
clc
lahf
pop
adc
push
cmp
dec
xchg
inc
sbb
sbb
outsb
jmp
xor
jge
outsb
lret
scas
stos
fisttps
fisubl
mov
ror
sbb
pop
mov
jbe
xchg
gs
push
pop
imul
jo
xchg
jge
jne
or
imul
fs
dec
cli
xor
sbb
adc
outsb
mov
adc
iret
cmp
xchg
sbb
fisttps
mov
lahf
push
inc
aad
or
xchg
fwait
mov
push
inc
pop
mov
arpl
mov
or
ss
jo
or
sbb
mov
shll
in
mov
popa
add
ret
sbb
arpl
loope
and
cmpsb
mov
fnstenv
pop
and
inc
and
push
jno
mov
or
pusha
xor
out
sub
leave
xor
lret
fbld
pusha
or
xlat
stc
sub
push
mov
repz
xchg
cltd
sbbb
and
loopne
sbb
push
lret
xchg
inc
add
jmp
stos
sbbl
ffreep
ss
lea
out
mov
pop
inc
rdpmc
pop
idivl
data16
cs
mov
jae
sub
xor
into
sbbl
clc
jp
cmpsb
and
or
scas
aad
sub
es
fs
enter
xchg
daa
jno
addr16
fs
stc
jbe
pop
sbb
stos
ljmp
jo
xor
test
push
xor
add
ja
lds
outsb
push
jo
pop
mov
dec
dec
clc
cmp
ret
loopne
jo
mov
les
pop
xchg
lahf
lret
in
cmpsb
in
xchg
cltd
ffree
stc
sbb
adc
fcoms
data16
fnstsw
test
in
jge
loopne
mov
loope
pop
jl
mov
cmp
push
adc
jmp
or
fucomp
or
mov
lcall
aad
inc
out
jns
jbe
int
fldcw
orb
sbb
in
jle
test
aaa
push
cmp
andl
xorl
cmp
pop
lods
xor
mov
cmp
pop
adc
clc
push
sahf
aas
xchg
bnd
fistl
cmpsl
aaa
xchg
dec
mov
mov
pop
jb
or
or
inc
mov
out
xor
add
lods
push
jbe
xchg
aaa
cltd
sub
and
mov
push
gs
mov
mov
mov
mov
fsubs
movsl
mov
lret
xchg
ljmp
shll
and
shl
push
popf
sbb
add
mov
loopne
scas
sti
int
push
insl
pop
mov
or
inc
and
push
das
or
and
dec
add
loopne
imul
rcll
mov
xlat
ror
fsubrl
repz
jne
mov
fwait
xchg
sbb
dec
mov
mov
adc
in
pop
mov
fldt
adc
pop
ss
cwtl
jb
dec
jecxz
xchg
orl
stos
adc
aad
mov
xchg
add
adc
sbb
loope
sub
outsl
push
repz
adc
xchg
sbb
fdivrs
sub
or
and
rol
mov
fistpl
jle
aam
push
xchg
fcmove
pop
jbe
fldt
cmp
pusha
add
sbb
xlat
sbb
xor
popf
xchg
pop
push
jb
lock
in
fadd
popa
push
or
sub
fwait
jno
test
outsb
inc
out
and
out
popf
out
adc
mov
dec
push
aaa
xor
dec
xor
adc
into
xlat
jle
sahf
mov
fiaddl
mov
sub
adc
inc
dec
rclb
xchg
xor
lahf
loop
mov
xchg
testl
ss
mov
iret
lahf
cmc
lds
in
sbb
aam
mov
xor
xchg
cld
mov
insl
sub
aad
or
adc
push
lret
push
rcll
std
mov
xchg
stos
xchg
hlt
jl
pop
or
sub
inc
idivb
loope
rolb
ljmp
push
cmpsb
sub
mov
push
jge
mov
js
in
outsb
out
outsb
adcl
aaa
jnp
push
lret
call
pop
dec
xchg
pop
mov
xor
in
leave
lahf
imul
pop
cli
rcrl
xor
sar
sub
cmpb
sub
lcall
cld
mov
xchg
jns
mov
fiadds
jge
cwtl
out
mov
push
call
test
push
cs
in
and
inc
mov
je
shll
cmp
xchg
cmp
popa
sbb
and
jle
sbb
add
das
dec
pushf
stc
imul
mov
cli
ret
adc
je
add
in
ja
cmp
dec
lea
and
mov
xchg
push
adc
cwtl
dec
fisubs
dec
ja
add
dec
adc
mov
lcall
adcb
xlat
push
sub
mov
xchg
jno
sbb
in
sbb
push
imul
insb
popf
jbe
add
cmp
in
adcl
ror
fldenv
lods
pop
adc
adc
gs
mov
sbb
cltd
inc
mov
pop
pop
clc
inc
mov
js
enter
inc
cmpsl
arpl
jne
pop
adc
mov
lock
scas
push
fiaddl
ja
insl
testb
cltd
jae
call
mov
lret
adc
popf
mov
xor
xchg
in
mov
jp
xchg
into
xlat
cmpsl
jmp
add
adc
mov
and
sti
decl
inc
and
xchg
out
pusha
xchg
cld
cmp
inc
mov
insl
scas
aaa
pushf
mov
rorl
stos
mov
mov
mov
pop
xchg
cmpsb
cmc
push
pop
aam
pop
lret
sbb
push
shlb
pop
icebp
mov
je
inc
mov
pusha
jge
dec
sub
aas
cmp
cmpsl
rcrb
mov
mov
mov
out
or
push
loop
xchg
decb
addl
push
loopew
mov
cmp
ljmp
inc
xor
push
cwtl
call
insl
test
add
test
jle
xor
testl
pop
mov
movb
xor
xchg
out
mov
cltd
out
fidivrl
cli
test
dec
cmp
or
sub
jbe
cmp
jnp
sub
and
int3
sub
mov
arpl
fs
lahf
fs
push
test
jmp
das
pop
mov
push
mov
xchg
daa
lds
or
cs
lods
xor
mov
call
ret
aas
push
xchg
or
shlb
sub
xchg
push
hlt
mov
mov
cmp
jns
repnz
and
cmp
inc
stos
sub
or
jns
lock
adc
jle
push
mov
mov
stos
cmp
inc
inc
movsb
mov
pop
add
mov
adc
jle
inc
and
jo
adc
shlb
fidivl
bound
flds
push
fimuls
fwait
or
lock
loopne
vunpcklps
aaa
es
adc
sbb
jmp
jbe
push
mov
sarb
pop
or
fs
outsl
inc
ficomps
idivb
pop
arpl
jnp
cmp
xor
pop
nop
or
or
fisubl
cmc
mov
adc
mov
scas
mov
in
test
dec
dec
pop
sbb
hlt
inc
dec
xchg
xchg
and
push
adc
stos
out
pop
popa
lods
adc
xor
fwait
scas
cmp
repz
ucomiss
mov
nop
mov
jbe
in
inc
push
movsl
insl
repz
jmp
mov
daa
popa
push
dec
mov
out
mov
out
cli
jecxz
push
lds
test
and
pop
xor
test
mov
mov
lock
fisubrl
jns
fldl
xchg
xor
pop
test
mov
mov
mov
shrb
testb
xchg
dec
xchg
ret
or
dec
jmp
push
daa
inc
push
popa
mov
and
sbb
lods
jns
lods
pop
lds
js
sbb
and
and
hlt
loopne
popa
repz
cltd
and
push
fists
int3
andb
fwait
push
in
push
and
push
insb
movl
xchg
cwtl
push
xchg
pushf
aad
push
ljmp
cli
push
ret
mov
lret
push
les
scas
sub
fistps
xor
loope
js
out
mull
adc
pop
cmpsb
xchg
scas
pop
loop
xchg
psrlq
sbb
xor
cmpsl
push
inc
or
xchg
xorb
push
int
or
les
je
mov
inc
mov
cmp
mov
test
push
call
addr16
xor
add
jb
ljmp
dec
mov
jbe
ss
push
mov
scas
push
jae
mov
cld
xlat
xor
cwtl
or
or
mov
imul
lock
push
sbb
out
cld
mov
mov
gs
lcall
es
and
mov
jae
insl
out
or
mov
and
pushf
imul
out
stc
test
inc
shlb
cmp
aad
outsl
push
leave
pushf
xorb
cmpsb
sub
leave
aaa
mov
sbb
add
and
xor
lods
sub
mov
xchg
clc
or
lret
mov
xor
leave
sub
lods
xchg
or
fwait
push
aas
or
rep
mov
push
pop
leave
push
push
xchg
frstor
lds
aaa
aas
adc
mov
call
out
fistl
addr16
push
aaa
push
dec
das
stc
int3
xor
ja
js
pop
xor
in
jbe
mov
dec
ljmp
addb
pop
dec
sub
sti
cli
and
xor
cmpsl
sbbb
mov
xchg
sub
aam
mov
js
jae
inc
insb
fists
mov
mov
or
inc
mov
add
or
std
mov
popa
es
addr16
arpl
xor
inc
pusha
add
mov
cld
cs
mov
scas
lods
test
push
jbe
orb
sub
xor
pop
sbb
lock
dec
sub
push
dec
fcoms
int3
adc
mov
sbb
mov
mov
gs
add
and
je
xchg
int
shr
rcrl
push
ret
int
and
lret
mov
and
xor
mov
sub
arpl
test
in
jmp
sbb
into
or
ret
sub
pushf
push
pop
insb
pop
imul
inc
pop
inc
push
xchg
add
das
test
dec
or
jecxz
enter
mov
jb
ljmp
push
mov
stos
mov
test
outsb
pop
mov
add
dec
add
push
add
ret
jge
cmp
cmc
jg
in
adc
imul
pop
pop
fildll
aad
lods
mov
rcrb
inc
xor
lret
addb
ds
test
mov
mov
shlb
hlt
fs
movsl
outsb
std
adc
scas
pushf
into
aaa
pop
cltd
pushf
arpl
aam
adc
pushf
stos
or
call
jno
ljmp
sbb
mov
jo
cli
xchg
enter
sbb
adc
ror
outsb
inc
imul
int
xchg
add
lods
sarl
push
jecxz
push
dec
sbb
stos
popf
add
incb
jg
push
fwait
mov
rcr
out
push
repz
adc
dec
push
inc
mov
add
sbb
xchg
dec
sub
mov
push
pop
inc
jmp
mov
mov
mov
adc
mov
or
fidivrl
push
imul
cmc
push
cltd
mov
push
subl
mov
mov
xchg
inc
jge
pop
popa
test
and
scas
das
pop
mov
sub
push
pop
cmp
insb
out
in
fists
cltd
add
mov
lods
xchg
xchg
mov
sarl
pop
dec
ds
cli
mov
outsl
jecxz
movsl
adc
cmp
pop
cs
add
cmp
lods
pop
daa
jg,pt
rorb
icebp
call
mov
jns
aam
flds
xor
lahf
mov
push
fs
fsubrl
jb
ret
xchg
and
jne
fimuls
lret
pop
in
lods
jbe
add
and
scas
stos
mov
arpl
and
bound
stos
imull
cmpsb
jne
out
inc
shr
cmp
loope
sbb
xchg
jne
dec
cmp
dec
mulb
jl
popa
push
inc
scas
das
out
neg
fsubrl
mov
jne
sub
fidivl
inc
and
mov
and
pop
sbb
lcall
jle
popa
pop
je
cmpsb
lret
mov
aad
xchg
std
xlat
fidivrs
sbb
cmp
std
jmp
clc
loop
and
mov
jmp
cmp
fbstp
imul
ret
sbb
sbb
das
mov
xor
nop
dec
int
daa
inc
mov
mov
xor
push
sub
jmp
nop
repnz
mov
and
fmull
lahf
inc
arpl
popf
imull
jne
push
mov
inc
in
or
cmp
mov
push
pop
cmp
push
pushl
aas
and
stc
or
icebp
cmpsl
cmp
sub
js
call
and
mov
inc
cmpsb
mov
lods
inc
int3
jbe
adc
lds
inc
shll
fbld
mov
idivb
test
test
xorb
xchg
xlat
insl
stos
loop
out
fwait
inc
stos
sub
jg
xchg
aad
push
mov
loopne
sub
pop
hlt
cmpl
cld
movsl
ss
sbb
xchg
jno
shrl
lahf
dec
fcmove
cmp
push
mov
xor
test
in
popa
pop
sub
dec
fucom
out
add
sub
loope
sub
aad
into
iret
or
test
jl
ds
sahf
xor
movsb
xchg
lcall
bound
roll
in
aam
push
cmp
ss
scas
adc
lret
ffree
xor
ljmp
and
call
jle
ja
xor
mov
ss
and
fcmovb
xor
jns
inc
and
das
and
subl
repz
les
hlt
ret
pop
movsl
ja
int3
cmp
insl
jnp
push
mov
push
dec
cmp
fs
pushf
ss
movsl
fstps
subl
mov
movsl
test
int
mov
mov
and
push
nop
adc
adc
stos
add
pop
jns
sahf
pop
xor
fldcw
fs
xchg
or
add
jo
lret
cmc
inc
push
sub
sti
mov
hlt
dec
and
and
jle
icebp
lret
push
int
lea
jg
fucom
mov
push
adc
pop
add
aaa
dec
lock
adc
push
subl
xchg
dec
sub
roll
mov
loope
lea
js
outsl
pop
or
bound
ds
pushf
sub
xorb
outsl
adc
mov
ret
sub
jecxz
enter
sar
pop
lret
inc
loopne
push
imul
sub
pop
xchg
mov
xor
xchg
addr16
push
xchg
push
jle
jl
mov
mov
fwait
jnp
xorb
pusha
sbb
add
push
repz
je
ficoms
dec
insb
rolb
out
mov
insb
inc
int
dec
inc
out
push
shll
add
out
loop
jle
into
xor
ret
xorb
push
cld
aad
aad
imul
sti
subl
sub
adc
das
in
fmul
aam
xchg
lahf
and
pushf
add
fucomi
jbe
shlb
andl
imul
xchg
jo
ror
lds
cld
sti
mov
ficomps
dec
jns
outsb
pusha
loope
repnz
xrelease
in
mov
sbb
lds
out
cltd
xchg
add
pop
mov
add
lret
jne
xchg
sub
push
sbbl
sub
imul
scas
jno
push
mov
and
adc
movsl
movsl
fwait
aas
push
dec
sbbl
mov
outsb
jns
adc
scas
push
testl
mov
cmpsb
push
fisttpl
dec
loope
jle
insb
bound
cld
test
or
js
mov
adc
js
lods
clc
movsl
loop
imul
mov
xor
aaa
pusha
cmp
cmp
adc
pop
fidivl
mov
je
mov
xchg
xchg
cmp
sub
test
clc
mov
mov
dec
adc
adc
imul
out
inc
movsb
pop
push
in
bnd
ja
pop
outsl
pop
aaa
lods
or
int3
incl
or
cmp
pop
je
insb
mov
cmp
adc
xchg
rol
add
mov
divl
or
mov
dec
gs
adcl
into
mov
test
fldenv
lock
in
loopne
sub
pop
adc
repnz
jge
jecxz
adc
push
sub
mov
pop
inc
and
fildll
xor
push
daa
icebp
xchg
rcrb
insb
add
lods
jl
aas
pop
cmp
mov
das
adc
je
or
sbbl
add
fidivl
xor
dec
in
aad
outsl
aad
ss
jno
stos
xor
mov
clc
hlt
shll
mov
and
gs
rorb
hlt
mov
xor
das
xor
add
pop
lahf
xchg
loope
fdiv
jo
jmp
dec
adc
jae
xchg
push
xor
cmpsb
ss
or
in
mov
das
data16
cmp
sbb
out
dec
and
dec
mov
jbe
sbb
and
and
stc
fs
jmp
cmp
xchg
out
mov
mov
inc
mov
sub
dec
or
sbbl
das
bound
in
push
sub
mov
or
xor
out
adc
aad
mov
adc
xchg
xchg
popa
adc
aaa
jle
pop
dec
cltd
mov
mov
gs
lret
sahf
xchg
adc
push
cmpsb
repz
nop
lret
dec
dec
inc
push
inc
hlt
sti
movsl
cmp
and
inc
pop
stos
or
push
xor
test
inc
mov
inc
fistps
jecxz
stos
cld
inc
pop
dec
xchg
lods
xchg
imul
jbe
xchg
outsl
imul
adc
cli
mov
and
imul
jne
out
imul
and
les
jmp
sbb
rcll
sub
fcmovu
xor
stos
inc
sbb
aas
add
xchg
adc
mov
add
aas
lods
sbb
ss
dec
fldcw
sub
loopne
ret
mov
dec
dec
dec
stos
std
je
fcomip
dec
push
imul
sbb
jg
mov
cmc
add
xchg
mov
adc
push
mov
sahf
ret
jl
mov
pop
rclb
and
int3
push
sub
dec
aad
or
shll
iret
jno
int
rcr
mov
test
ja
shl
pop
mov
outsb
out
pop
stc
xchg
add
bound
mov
pop
cmp
cmpsl
cmp
dec
std
popf
std
or
int
inc
subb
fldt
iret
or
mov
in
mov
scas
jbe
scas
fcmovnbe
jne
and
out
push
subb
inc
std
cld
je
cltd
mov
pop
out
push
in
outsb
mov
mov
stos
mov
or
push
mov
arpl
mov
mov
mov
fsub
and
in
xor
cld
pop
mov
sahf
mov
adc
pop
pop
movsl
jns
sahf
addl
push
push
or
mov
inc
mov
mov
fisubrl
fsubl
pop
mov
cmp
adc
call
aas
sbb
and
mov
lret
pop
mov
adc
mov
ja
pop
push
pop
sub
pop
mov
adc
or
cmp
push
hlt
int3
dec
imul
lods
fnstcw
add
outsl
xchg
insb
mov
aam
xor
stos
sbb
cmpsl
dec
rclb
add
imul
fistps
xchg
mov
popaw
xlat
inc
push
lods
mov
inc
outsl
pop
daa
out
push
adc
mov
mov
xchg
mov
mov
sahf
mov
je
xlat
jg
popa
xchg
fwait
pushf
popf
xchg
adc
sub
jns
inc
or
aas
cmp
loope
jo
push
inc
int3
notb
xor
sahf
jle
movsl
rcrb
jnp
fs
je
fs
popf
hlt
adc
xchg
cwtl
adc
out
das
mov
insl
insl
sub
adc
dec
mov
push
fwait
push
inc
enter
mov
cmp
cmp
mov
and
inc
imul
jle
js
jae
mov
mov
jnp
mov
pop
ja
push
aas
pop
xchg
orl
or
mov
jno
cmp
rcl
fstpt
jge
icebp
aaa
mov
ret
jge
sub
das
popf
xor
rcrb
jbe
mov
bound
jp
and
dec
sub
push
pop
out
lahf
cmp
xchg
sub
sub
ss
adc
mov
clc
daa
or
jp
mov
lret
ret
int
out
pushf
jb
js
sub
cmp
adc
ds
mov
pop
mov
int
sbbl
out
push
mov
sub
mov
adc
mov
sbb
popf
movb
and
scas
ds
sbb
dec
fdivrp
jne
mov
fidivrs
cmp
inc
std
pop
jge
mov
aad
sbb
xor
arpl
and
jb
rcll
or
shl
lock
mov
imul
push
pop
lods
out
adc
jmp
push
outsl
xchg
push
push
inc
mulb
gs
je
fnstcw
lods
push
adc
daa
and
and
or
xor
ret
mov
cmpsb
test
imul
fisttpl
pushf
pop
cmpsb
out
hlt
call
xor
js
call
xchg
out
cmp
mov
sub
outsl
adc
and
fidivl
dec
lahf
int3
ja
mov
test
ss
mov
popa
loopne
clc
inc
mov
cmp
data16
mov
xchg
adc
arpl
les
mov
mov
dec
push
movsb
jno
frstor
xor
push
mov
xchg
pop
rolb
ja
ds
stos
mov
push
lcall
enter
jmp
adc
push
lret
rcr
mov
lcall
mov
in
fimuls
rorb
push
loopne
enter
nop
dec
inc
jge
mov
cld
cwtl
negb
adc
dec
jge
idivl
ss
pop
in
xor
popf
dec
jle
cmp
int
push
inc
xchg
jns
aaa
dec
sbb
daa
mov
fidivrs
cmpsl
xlat
lret
aas
pushf
repnz
sbb
in
inc
subl
cltd
push
lods
test
sbb
shll
adc
out
mov
or
xor
mov
jae
mov
dec
shr
mov
cwtl
jb
aad
cmpsb
or
leave
dec
leave
ds
push
dec
xor
cmc
gs
push
popf
mov
sub
adc
add
mov
loope
dec
les
fs
push
ret
orb
lock
or
jns
cltd
mov
xlat
xlat
push
push
sbb
inc
jns
jb
icebp
pop
jae
cwtl
jl
enter
fld
into
aaa
add
pop
and
std
lock
sbb
fisttps
stos
adc
repnz
orb
jl
sbb
dec
sbb
add
aas
add
arpl
rorl
ja
out
fs
jae
push
cmpsl
test
enterw
fbstp
add
call
push
sub
dec
cli
push
cmp
adc
ret
push
les
out
mov
pop
movl
xor
test
pop
lahf
mov
test
sbb
test
loop
xchg
ds
sbb
and
into
push
push
or
shll
xlat
out
sbb
cmpsl
jecxz
xorb
loop
stos
pop
loop
sahf
sbb
rorb
pusha
imul
shrl
sti
int3
jb
js
lcall
outsl
sub
inc
popl
dec
cmp
mov
jle
mulb
mov
sahf
repnz
pop
push
out
mov
mov
push
cmp
sbb
mov
test
push
mov
sbb
adc
bound
push
dec
pop
mov
mov
ja
stos
fs
ss
pusha
or
pop
outsl
lods
push
and
sub
int3
lcall
cmp
outsb
repz
adc
shufps
lahf
pop
ja
jno
push
je
cs
jne
les
fcoml
mov
out
lds
jnp
adc
add
nop
push
and
xor
push
scas
dec
jl
cmp
sub
mov
mov
insl
and
adc
dec
xchg
pop
mov
xchg
mov
mov
lock
add
aaa
stos
cmc
and
out
jge
cmpsl
shrl
inc
dec
paddw
lods
jae
mov
inc
pop
adc
xorb
imul
in
fwait
mov
and
or
push
sbb
xor
add
cmc
mov
dec
mov
mov
mov
inc
adc
out
in
jmp
pop
inc
cwtl
out
or
pop
xor
and
dec
stos
sbb
iret
inc
pop
cltd
fildl
jl
shlw
ljmp
dec
mov
scas
das
cltd
inc
or
cltd
cmp
and
daa
jbe
mov
pushf
fstpt
insl
outsb
pop
imul
mov
pop
push
dec
aad
mov
enter
push
cmpsl
cmp
mov
aad
insl
adc
pop
inc
lea
mov
cs
sbb
and
icebp
adc
call
sub
shll
jbe
cwtl
pop
out
sub
sbb
pop
push
in
outsb
leave
fldenv
sbb
repz
out
ret
ret
not
repnz
fs
out
mov
out
loop
mov
sbbl
mov
mov
dec
mov
mov
pop
push
xchg
jg
test
mov
enter
sbb
and
jae
pop
dec
imul
mov
mov
mov
dec
xchg
or
add
repz
scas
jecxz
add
sahf
or
stos
out
scas
gs
add
ljmp
cmp
inc
idiv
push
int3
or
std
subb
stos
jecxz
mov
xchg
fisubs
stos
cmp
xor
fldl
adc
inc
mov
lock
push
lret
lcall
xchg
aaa
push
cmp
loopne
repnz
cmp
dec
xor
add
lea
add
mov
hlt
ljmp
fs
mov
inc
xlat
lret
test
popa
lret
in
pop
xor
inc
cmp
arpl
push
and
dec
sub
sbb
aad
mov
loope
mov
aas
ret
out
xchg
roll
add
out
push
pop
xor
cmp
mov
cmp
and
inc
push
cmc
pop
push
jo
bound
cmp
fmull
mov
sub
cmp
adc
out
push
pop
xchg
clc
ja
enter
adc
sarl
scas
cmpsl
add
cmp
inc
xchg
pop
inc
lea
push
jbe
in
adc
movsl
mov
adc
aas
js
or
and
and
push
sbb
xlat
mov
adcb
sub
cwtl
insl
pop
testl
in
add
fbld
movb
enter
fiaddl
adc
ret
xchg
xchg
inc
mov
lds
mov
adc
inc
push
ja
inc
mov
xor
aad
mov
xchg
adc
cmp
jp
jno
fcomp
les
xor
lock
ficompl
and
ret
xor
jne
fdivs
testb
fistl
out
imul
xchg
out
shl
scas
cmpl
xor
cmp
adc
stos
xchg
adc
mov
rol
fcomps
repz
das
cmp
cwtl
cmpb
cli
jecxz
hlt
pop
not
sbbb
sub
inc
jle
mov
dec
pushf
xchg
xor
mov
jbe
nop
push
int
subl
shll
repz
fs
out
sbb
inc
out
or
xchg
adc
mov
pop
adc
popf
aas
inc
rol
push
jle,pn
mov
mov
cmpsl
adc
xor
mov
xlat
cmp
xchg
scas
imul
inc
out
dec
fs
push
push
pop
shll
outsl
pushf
cmpb
lret
jle
pop
loopne
insl
ja
leave
mov
outsl
dec
sub
out
lcall
sub
and
fs
ss
fistl
popf
add
leave
and
pop
push
xor
jns
jg
jae
fst
mov
mov
sub
cltd
scas
test
out
add
into
inc
scas
pop
mov
mov
sbb
into
loopne
mov
pushf
lds
inc
xchg
imul
inc
ret
add
adc
push
jp
xchg
push
dec
ficoms
fsubp
mov
adc
xor
fs
mov
fsubrs
and
cmp
bound
xchg
addr16
or
fimuls
pop
loopne
test
sahf
push
mov
and
hlt
xor
pop
jno
rolb
inc
mov
dec
out
inc
sub
cli
mov
push
setle
sti
add
test
or
dec
paddq
loopne
test
shr
xchg
arpl
stc
xor
aam
jle
mov
adc
sbb
push
imul
repnz
xchg
roll
push
dec
dec
inc
fwait
icebp
sar
fs
jb
mov
add
jo
lods
out
sbb
cmp
mov
pop
xlat
adc
or
icebp
and
leave
dec
cwtl
bound
stos
mov
adc
lahf
sub
inc
inc
push
out
decl
je
das
je
ds
add
mov
in
mov
dec
mov
xchg
pop
adc
cmc
cmpsl
or
dec
push
push
mov
ljmp
stos
or
cmc
hlt
cmp
dec
pop
push
pushf
fcmovu
iret
icebp
add
subl
imul
fbstp
das
in
jbe
scas
imul
out
add
and
imul
inc
insb
test
rclb
mov
out
pop
xchg
nop
test
clc
leave
sbb
cmp
or
sbb
sub
push
cmc
stc
xchg
movsb
mov
mov
jmp
fsubrs
pop
adc
sbb
xor
lock
jle
enter
ja
sub
jg
bound
sbb
arpl
jecxz
sub
mov
nop
push
xlat
or
test
fidivl
loope
pop
into
dec
push
insl
cltd
mov
or
inc
das
iret
push
mov
cwtl
cmp
scas
add
jo
mov
sub
cmpsb
mov
sub
leave
pop
mov
jb
cmp
push
js
inc
xchg
mov
inc
ss
in
inc
lds
adc
mov
add
push
inc
xor
sub
leave
jae
and
test
rcrl
cmp
ss
push
hlt
js
daa
ja
dec
push
sbb
mov
pusha
xchg
stc
pop
pop
sub
movsb
fmull
or
and
dec
push
scas
int
sbb
repz
cmpsb
out
pop
jno
mov
add
inc
push
sbb
mov
out
cltd
xchg
mov
and
xchg
rorb
test
lods
dec
push
imul
push
sti
sbb
xor
stos
inc
jge
test
movb
cmp
inc
mov
leave
jnp
in
scas
add
test
data16
jae
sbb
mov
cmpsl
mov
push
int
lea
or
sbb
inc
push
outsl
mov
xchg
mov
sub
dec
loopne
xor
mov
sub
push
inc
sbb
jno
jecxz
insl
pusha
or
daa
jo
imul
cmp
int
sysret
cmp
push
cmp
lods
aam
sub
xlat
loopne
sbb
sbb
mov
test
fwait
subl
in
push
daa
or
inc
jp
add
fmuls
imul
scas
dec
sub
cmp
bound
lcall
dec
inc
data16
jae
jp
adc
sub
aaa
daa
sbb
pop
in
mov
xor
adc
sbbb
xlat
ja
stos
out
imul
dec
xchg
int
xchg
lock
pop
add
in
cmp
aaa
and
gs
mov
dec
add
or
mov
clc
sbbl
daa
nop
sbb
mov
insb
sbb
jmp
orb
out
movb
adc
aas
mov
push
mov
inc
add
pop
loopne
dec
les
mov
imul
test
xor
lret
lea
mov
push
in
gs
cmp
adc
data16
mov
stos
push
and
and
aas
and
fs
fwait
in
push
add
push
repz
in
fcoms
into
mov
das
test
mov
adc
xor
jg
sub
idiv
cmp
insl
dec
icebp
xchg
rcrl
test
sbb
leave
clc
imul
sub
sub
call
or
xor
sbb
mov
xchg
pop
mov
ljmp
movsl
jmp
fildll
or
je
inc
fwait
mov
lcall
test
sub
add
repnz
mov
mov
or
scas
dec
or
int3
inc
sub
jno
movsb
push
ret
and
push
leave
or
cltd
sti
orl
popa
mov
push
shlb
mov
and
xchg
mov
lahf
adc
mov
push
mov
shr
les
iret
out
mov
adc
inc
mov
std
mov
pop
jecxz
inc
ljmp
leave
jmp
inc
xchg
movq
lods
inc
scas
daa
cwtl
pop
into
test
sub
rolb
jae
inc
pushf
adc
ss
push
fsubrp
xchg
pop
or
in
cs
in
xor
sub
fimull
adc
test
jae
cmpsl
dec
jns
je
xchg
enter
cmp
push
jle
push
mov
mov
inc
and
ds
inc
xor
stc
test
sub
jb
jge
aad
sub
jns
pop
push
out
out
inc
xchg
enter
cld
inc
or
in
jle
inc
xchg
sub
lea
addr16
xor
mov
adc
aad
mov
xchg
add
test
fistpll
sti
push
enter
outsb
xlat
mov
jbe
sub
pop
std
scas
pushf
dec
inc
roll
mov
fisubs
movsb
add
cmpb
imul
jecxz
ss
leave
pop
rorb
jmp
pop
sub
pop
add
mov
jne
cmpsb
adc
test
lcall
or
pop
cld
mov
or
and
imul
sub
jle
xchg
pop
jbe
fisttpll
pop
std
fistpl
jns
call
xor
pop
push
in
scas
lret
repnz
into
rcrb
fistpll
mov
cmp
add
inc
xchg
jae
mov
sub
push
jns
fsub
xor
in
aam
repz
sbb
cmp
xchg
int
sar
adc
stc
shl
and
push
mov
mov
rolb
icebp
out
mov
rcrb
pop
xlat
enter
add
int3
mov
test
call
bound
ja
xchg
mov
jo
and
add
jns
cmp
out
lock
arpl
sbb
or
xor
lds
and
pop
pop
dec
push
cmp
orl
or
les
dec
mov
cmpsb
inc
in
mov
or
dec
or
arpl
call
imul
xchg
push
add
add
mov
sub
cmp
call
xchg
fbstp
and
push
or
sbbb
add
icebp
in
and
gs
mov
sub
test
out
jp
lsl
jge
sub
xor
fbstp
iret
or
xchg
mov
lcall
cmp
mov
repz
rcrb
sahf
pop
cmp
and
cmp
movsl
sbb
push
mov
cwtl
mov
loopne
mov
movb
hlt
aaa
push
sbb
mov
xor
sbb
jp
jnp
cwtl
xchg
cmpsl
out
fdivl
push
or
loop
pop
push
ds
pop
pop
imul
incb
lret
xchg
outsl
mov
loopne
xor
dec
dec
or
add
stos
loopne
add
mov
jl
sarl
stc
les
pop
sub
jl
mov
sbb
or
cmp
dec
mov
cld
dec
push
loopne
mov
rclb
jl
dec
sbbb
arpl
xor
movsl
ret
push
insl
popa
sbb
sub
divb
jl
pusha
aad
clc
adc
push
das
push
sub
jp
cltd
lahf
jle
cld
xlat
pop
push
inc
jbe
sar
addr16
sub
mov
clc
pop
pop
and
repnz
add
inc
repnz
pusha
mov
inc
add
pop
test
push
mov
mov
icebp
add
ss
xchg
shll
pop
mov
in
lcall
imul
jae
inc
stos
xor
inc
sbb
jp
loope
inc
and
ret
jmp
test
int3
jo
cltd
push
fdivs
clc
push
enter
cmpsb
es
inc
add
cwtl
inc
loope
xor
pop
pop
sbbl
sbb
xchg
int3
push
fdivs
cli
jl
arpl
pusha
mov
std
subps
adc
push
dec
mov
xor
jb
xchg
lods
in
mov
or
mov
jo
xchg
scas
fwait
sbb
lea
inc
jecxz,pt
and
xor
pop
lds
in
aam
js
xor
loopne
dec
dec
dec
cld
pop
and
clc
lock
cmpsb
push
loopne
adc
int
sbbb
dec
paddsb
xchg
adc
mov
clc
je
push
cs
idivl
adc
push
sub
xlat
pusha
pop
sub
push
jo
dec
pop
es
addb
lock
mov
xchg
push
push
jae
pop
fldenv
lea
sbb
and
je
repz
mov
mov
jecxz
cmp
in
rcll
and
aad
and
dec
push
leave
outsl
push
mov
enter
and
sti
mov
int
data16
mov
and
cmpsl
addl
xor
and
mov
push
daa
or
inc
cmp
mov
lcall
and
or
test
ja
xor
insb
data16
sub
xchg
add
mov
mov
stos
pop
and
mov
shrl
cmp
cld
mov
inc
fildl
or
jp
cld
sub
push
fildll
rorb
cmp
push
pusha
mov
fmul
xchg
push
xor
test
adc
fs
mov
add
inc
pushf
xor
daa
fistl
xchg
mov
push
notb
movsb
repnz
dec
inc
and
or
sub
sbb
cmp
mov
jae
fucomp
not
loopne
xor
lret
mov
xor
into
add
xchg
in
pop
mov
ja
ret
push
mov
sbb
push
jl
movsl
mov
jo
pusha
pusha
es
or
xchg
jmp
sub
mov
mov
gs
lds
aaa
lret
sbb
icebp
out
gs
scas
stc
dec
pop
pushl
stos
and
clc
sbb
lods
int
push
xor
decl
cmpsl
push
in
and
adc
cmp
lret
jae
adc
xor
push
lea
nop
mov
icebp
imul
push
in
add
cld
or
sbb
sbb
pop
and
inc
jl
cmp
cwtl
jecxz
and
mov
push
or
xlat
add
mov
or
fildl
mov
or
dec
dec
inc
mov
test
enter
push
in
mov
push
outsl
cli
addr16
test
push
jnp
dec
jg
leave
cwtl
popf
adc
loopne
jne
repnz
mov
subb
xor
and
mov
push
loope
xor
cwtl
std
sub
test
ljmp
je
shrl
dec
dec
inc
and
or
mov
fdivs
and
idivl
sub
push
fistpll
add
fsub
sbbb
mov
or
mov
dec
inc
mov
mov
add
mov
jg
or
je
push
jg
pop
push
jb
in
mov
dec
or
and
adc
rep
es
cmp
dec
test
js
test
cli
push
sub
and
xchg
scas
adc
nop
and
jo
adc
ja
and
inc
in
cmp
clc
cmp
ret
jge
sbb
inc
mov
out
sbb
mov
inc
insb
mov
dec
pop
nop
aad
inc
xchg
fisubl
or
or
mov
cmpsl
movsb
inc
mov
and
pop
mov
push
pop
push
jae
mov
push
mov
in
or
call
fdivl
test
mov
xor
jl
or
shrl
push
xchg
xchg
mov
adc
loopne
jg
lret
cmp
insb
loopne
and
cwtl
fdivl
mov
pusha
mov
loop
jb
cmp
sbb
adc
bnd
push
sbb
adc
xorl
jne
loop
and
mov
inc
shlb
sarb
xlat
sub
sbb
hlt
add
xor
lcall
ret
sub
pop
test
jle
pop
shrb
icebp
sub
xchg
inc
popa
mov
cmp
cs
mov
dec
stos
xchg
subb
mov
je
xchg
fistpl
arpl
sub
inc
sub
adc
sbb
arpl
xor
hlt
inc
enter
jp
mov
jbe
sbb
adc
repnz
push
jnp
jns
sbb
dec
sbb
sahf
xchg
aas
aaa
cltd
hlt
in
fucomi
jnp
dec
add
mov
lcall
shrb
nop
xchg
xchg
or
inc
sbb
ret
jne
lret
ljmp
xchg
scas
mov
mov
or
inc
inc
scas
mov
repnz
cmp
test
mov
mov
mov
out
or
pop
in
sti
adc
les
adc
push
push
xchg
fcmovnb
mov
jp
cwtl
mov
hlt
push
aas
or
jge
cli
adc
ret
dec
cmovs
pcmpeqb
jge
sahf
arpl
fiadds
dec
imul
into
jns
jg
out
fstl
pop
add
fldt
dec
rcr
push
imul
add
and
pushf
fistl
push
insl
dec
ror
in
jo
loop
loop
mov
sbb
test
hlt
shrl
in
jmp
clc
push
push
and
popf
cli
stos
xchg
and
inc
daa
mov
inc
sub
test
xchg
fildl
popf
xchg
fdivrl
fiadds
jle
mov
jge
add
bound
iret
insl
lock
arpl
push
adc
out
mov
std
jb
push
jp
xor
and
inc
pushf
repz
sub
jb
imul
adc
push
push
mov
fldcw
cs
inc
jbe
push
daa
lock
xor
cmpsb
js
jle
fs
xor
aas
mov
add
pop
or
mov
test
test
pusha
es
cmpsl
mov
mov
insb
add
xchg
sbb
add
cmc
icebp
or
arpl
ret
fdivs
cld
pop
jp
test
cmc
push
hlt
and
mov
fucomp
std
cmp
out
cld
pop
sub
nop
cmp
sub
gs
imul
pop
push
pop
lods
push
or
cs
push
xlat
aaa
sbb
inc
and
pop
rclb
in
mov
push
pop
iret
add
and
mov
mov
jo
bound
mov
xor
addr16
sbb
clc
sub
cld
ret
addb
cld
mov
cli
jmp
add
dec
jae
test
mov
mov
pop
sbb
sbb
xor
daa
cmp
jle
hlt
inc
pop
aad
pop
dec
mov
jbe
xlat
out
add
cltd
pushf
dec
mov
icebp
in
adc
insl
lods
and
xchg
push
mov
cmpsb
daa
aas
aam
xor
mov
test
dec
xor
cmpsl
mov
addb
das
movsb
aaa
and
xchg
cli
fimull
outsb
jb
sbbb
add
pop
and
scas
repz
mov
add
test
dec
push
xor
icebp
psubusw
popa
lea
dec
clc
out
ljmp
ss
jecxz
jl
lahf
jno
aad
decl
stos
rcrl
hlt
flds
leave
into
cli
sbb
add
mov
xor
out
inc
in
and
mov
pop
mov
scas
mov
jno
in
cwtl
sbb
dec
mov
mov
jb
push
loope
push
or
ds
bound
pop
jb
push
divps
shrl
inc
and
bnd
pop
sub
mov
mov
outsl
hlt
jmp
ja
pusha
cmp
sar
sub
out
pop
sbb
jo
stos
sbb
daa
push
push
mov
loop
rorl
and
in
mov
insl
ret
push
xchg
ds
mov
sbb
push
jo
pop
jge
mov
ret
mov
mov
psrld
add
pop
mov
lea
mov
je
pusha
push
aaa
mov
xor
jl
test
adc
xchg
pop
xor
fldenv
push
ds
pop
adc
arpl
into
sub
fucomp
insl
movsb
mov
fidivrs
and
js
in
add
dec
test
enter
scas
xchg
dec
mov
std
faddp
and
jbe
scas
rcll
lds
lret
stos
lcall
pop
fs
mov
sbb
fsubs
ret
sbb
inc
dec
adc
and
shll
jbe
in
imul
test
dec
negl
push
pop
shl
das
sbb
xchg
sub
lea
js
dec
std
push
outsl
inc
adc
and
dec
adc
lods
aam
xchg
cmp
aaa
inc
cltd
ret
inc
andl
push
sub
dec
insb
nop
fwait
pop
nop
jp
add
cmpsb
cmpl
lods
adc
cwtl
ljmp
xchg
mov
les
add
cmpsl
or
das
and
mov
and
jp
divb
mov
cmp
xchg
mov
dec
les
dec
sub
faddl
push
sbb
pop
cs
dec
test
inc
sub
push
loope
dec
pop
imulb
mov
pop
rcll
arpl
cli
cmp
in
jle
mov
mov
rcll
adc
insb
imul
push
jo
fdiv
mov
loope
adc
cmpsb
scas
xchg
push
xor
xchg
jo
push
daa
pushl
sub
mov
sub
inc
dec
in
lods
test
outsl
push
out
adc
mov
dec
mov
scas
fsubr
xchg
cmc
push
jno
pop
add
cwtl
fs
xchg
push
cmp
rcrl
inc
or
fs
insb
insl
call
inc
mov
sbb
insl
ret
test
mov
lock
xor
out
int
dec
rorb
dec
jo
add
pop
dec
out
stos
mov
ret
mov
sti
adc
mov
out
iret
jp
push
adc
scas
stos
loope
cmp
outsl
mov
mov
cmp
push
imul
out
daa
in
das
jno
andl
push
jp
outsl
xor
dec
jmp
das
iret
xchg
std
fldcw
mov
dec
dec
popf
adc
xchg
ror
xchg
fcomi
aas
cmpsl
cmpsb
cmp
cltd
xor
inc
xchg
jnp
imul
dec
insb
fldcw
hlt
outsb
lods
fnstsw
jle
shlb
in
scas
mulps
rclb
cmp
xchg
ss
fs
cmp
mov
pop
xchg
adc
cmp
cld
inc
cmp
sub
popf
add
scas
es
cli
lock
push
push
iret
idivl
fisubs
das
mov
jae
push
push
je
sbb
mov
pop
jbe
enter
jge
pop
lret
aas
sub
mov
cmp
jns
jne
mov
xchg
or
sahf
xor
jbe
inc
sub
sahf
test
cmp
cli
mov
in
fistpll
jp
dec
iret
roll
mov
sbb
push
push
push
jg
inc
sub
push
pop
scas
std
fisubrs
or
inc
sahf
add
lcall
xor
add
rcll
loop
xor
xchg
dec
xlat
fisubs
lcall
rorl
or
out
or
fisttps
repz
outsb
int
adc
into
or
out
sbb
sbb
test
cmpb
cmc
and
push
add
clc
imul
aaa
push
imul
into
jmp
xchg
ljmp
push
sub
jle
push
sub
add
out
es
jae
das
cmp
push
inc
popa
testl
lcall
xchg
out
and
add
bound
jns
xor
dec
or
mov
cld
cmpb
add
xor
sub
fimull
mov
cmc
out
hlt
push
aas
xchg
into
loopne
jnp
cmc
out
cmp
mov
add
jns
jge
mov
mov
inc
push
mov
mov
ret
mov
jp
jmp
popf
fisttpll
push
or
push
xor
jne
test
cmp
mov
or
dec
push
icebp
pop
or
xor
xchg
pop
pop
stos
outsb
xchg
xchg
add
sub
cmp
jle
sub
cmp
inc
xchg
adc
and
xchg
push
adc
bound
xchg
in
mov
push
aas
xchg
ja
loop
pop
xor
movsb
mov
daa
pop
xlat
sbb
mov
fucom
in
pop
ficompl
xorb
sub
stos
mov
xchg
mov
push
popa
sub
sbb
addw
or
xor
xor
pop
push
sub
fnsave
cmp
lea
andb
mov
clc
popa
mov
jge
sbb
jnp
out
push
mov
stos
lds
adc
jb
fisubs
mov
sbb
and
add
or
push
add
or
and
jle
and
sbb
shrl
and
ret
in
insb
or
cmp
test
notb
push
xor
jns
and
and
or
in
xchg
cli
arpl
push
xchg
jnp
and
clc
mov
lods
inc
lods
sbb
cmpl
jmp
inc
mov
out
add
stc
pushf
xor
arpl
insb
mov
cmp
out
push
mov
in
push
addl
add
ss
data16
mov
shlb
push
push
mov
add
dec
lcall
in
cs
inc
repnz
adc
les
arpl
not
leave
sbb
cmpsb
iret
xchg
hlt
std
int
mov
and
lret
stc
or
mov
xlat
aaa
jo
push
jb
in
mov
sub
sbb
clc
cmp
jb
cmp
clc
dec
xor
ljmp
push
inc
sbb
addr16
dec
stos
cmpl
mov
fndisi(8087
jns
mov
pusha
or
sbb
xor
test
and
mov
add
test
ret
decb
lcall
iret
imul
gs
add
push
inc
sub
fdivrl
fnstsw
xchg
addr16
aaa
in
in
mov
lret
add
inc
divb
mov
call
push
mov
pop
cwtl
adc
or
bound
inc
pop
xor
inc
mov
out
mov
cli
mov
adc
int3
dec
jmp
ret
movsl
and
out
cmp
pusha
lods
xor
outsl
ror
subb
cs
stos
scas
test
mov
bound
or
adc
xor
shlb
call
les
lea
aam
mov
divl
mov
cmp
inc
jo
pop
push
repz
popw
mov
push
push
lock
jecxz
fdivs
push
movsl
xchg
xor
or
xor
xlat
das
dec
ljmp
incl
xchg
xor
fldcw
adc
add
add
in
cmp
mov
sub
inc
jmp
cli
idivb
jmp
lods
or
inc
jle
cmp
adc
and
fsubl
or
adc
je
pop
xor
dec
leave
ja
cld
cmp
test
int
mov
jb
mov
icebp
les
pop
daa
fstp
popa
fstpt
sub
inc
out
dec
push
push
ja
mov
and
pop
jg
lock
jmp
xor
push
adc
adc
daa
and
xchg
orb
pop
fwait
popa
dec
inc
imul
clc
and
std
inc
jo
and
cli
cmpsl
addl
in
inc
pop
adc
lcall
shrl
sti
lret
push
cmc
insb
xlat
dec
push
xchg
dec
imulb
shl
leave
push
adc
aad
ljmp
mov
or
in
jbe
clc
adc
fsubp
and
mov
and
xor
or
and
dec
stc
xor
or
pop
xchg
jae
out
pop
xchg
inc
cmp
shl
or
aas
enter
leave
outsl
out
xchg
lods
xchg
push
push
ss
pop
fildll
cmc
lea
sti
sbbb
cmp
fs
adc
xchg
mov
xchg
cmpsl
out
decb
and
dec
xor
jle
stos
pusha
popf
mov
icebp
mov
repz
lock
jecxz
cmp
and
daa
pop
movsb
mov
cld
stos
xchg
and
mov
cmpsl
bound
rcrb
add
mov
lds
ljmp
aam
pop
loope
pop
adc
lds
mov
cmpsl
cld
es
addr16
sub
add
or
out
test
xchg
xor
adc
out
xchg
lods
stos
cmc
cmp
js
xor
xorb
sarl
push
inc
dec
sub
ds
jmp
in
mov
movsl
ds
add
leave
fdivl
push
xlat
inc
push
shrb
fnsave
fimull
dec
push
ds
fidivrl
sbb
jno,pt
mov
les
fcmove
sub
fists
fdivl
in
and
cli
adcb
testb
xor
loope
cmpsl
mov
push
cwtl
cmc
push
xchg
mov
xchg
or
jg
lahf
push
dec
es
loope
inc
push
ret
xchg
jg
out
xor
arpl
fdivp
and
aaa
iret
push
scas
mov
mov
sahf
lret
push
pop
xor
iret
add
jl
or
imul
lret
dec
icebp
stos
push
mov
fcmovnu
ds
xor
mov
pop
mov
std
xor
les
loopne
sbb
xchg
push
xabort
js
pop
js
ffree
mov
filds
mov
xor
xchg
xor
fwait
push
lods
jo
push
out
xchg
adc
xchg
rcrl
data16
sbb
cwtl
cli
ret
mov
pop
and
fnstcw
lods
adc
fs
pop
gs
cmp
sub
jmp
pop
das
sub
aad
dec
out
leave
sti
ss
fdiv
daa
sbb
in
outsb
mov
in
fbstp
mov
inc
jl
out
mov
gs
test
ret
daa
loop
mov
out
cwtl
mov
fildl
xor
lret
lods
push
xchg
xlat
ja
jno
pop
std
leave
cmc
pop
dec
addr16
and
mov
loopne
arpl
aaa
sbb
push
pop
stc
inc
sbb
fucomi
js
mov
das
jno
int3
jge
scas
cmp
inc
add
inc
xor
outsw
inc
xor
jp
test
rorl
inc
outsl
sbb
inc
mov
jns
out
xchg
push
ljmp
out
xor
cmpsb
push
add
sbb
lock
lods
fs
xor
cwtl
mov
inc
xchg
add
shll
xchg
cmpsl
enter
outsl
aaa
ret
gs
mov
xchg
jle
fs
push
repz
adc
jo
xchg
sbb
sub
lock
xchg
fcomps
push
aaa
mov
gs
mov
outsl
sahf
ffreep
aaa
adc
mov
dec
dec
mov
mov
mov
clc
pmullw
push
pusha
dec
xor
cli
cmp
adc
and
mov
fs
mov
and
ja
lods
xchg
sub
outsl
lahf
fidivs
inc
pop
lds
arpl
sub
inc
cmp
push
and
cwtl
shll
ds
or
outsl
enter
adc
clc
mov
add
in
sbb
push
cmp
sbb
ss
mov
pop
and
mov
jns
xchg
xor
xor
cli
aas
and
dec
test
xchg
dec
cmp
rcll
sub
mov
out
inc
lahf
pop
mov
inc
xor
into
daa
sbb
enter
sbb
mov
mulb
mov
add
dec
into
xor
push
movsb
mov
test
insb
sub
test
bound
ja
sub
out
mov
add
pop
test
adc
faddp
xchg
mov
or
ja
loop
push
sub
data16
jns
in
or
int
add
ljmp
mov
nop
cli
flds
inc
mov
and
adc
jecxz
mov
push
inc
rolb
add
cs
insb
mov
jecxz,pn
pusha
aam
push
xchg
mov
cmc
pop
scas
mov
aam
fdivrs
mov
mov
lret
int3
jo
mov
fadds
mov
lods
bndldx
jecxz
pop
lods
test
mov
cmpsl
nop
aam
mov
mov
add
icebp
xor
fidivl
xchg
sub
clc
pop
mov
test
or
test
and
fists
jmp
inc
out
les
cmp
push
lahf
std
nop
lea
aam
dec
stc
jnp
fcoms
jl
jl
gs
xchg
std
js
mov
sarb
pushf
cmp
xchg
push
aad
arpl
loopne
xor
test
lods
pop
pop
pop
pop
sbb
add
mov
dec
fcompl
repnz
xchg
loope
imul
adc
add
pop
sub
popa
hlt
sbb
idivl
lods
mov
xor
lds
and
scas
sahf
add
sub
mov
add
jne
out
cwtl
cmpsb
push
inc
js
mov
lcall
sbb
or
clc
movsb
leave
xchg
jge
sbb
inc
jp
popl
add
mov
fcoms
inc
jne
out
adc
insb
lods
jp
imul
aam
jl
and
inc
in
stos
mov
push
cmpsb
jle
jb
data16
aaa
and
or
cs
shl
loope
std
insl
insl
cmp
sub
andb
sti
xor
ljmp
sub
jnp
test
sub
sahf
mov
xor
sub
mov
push
xor
in
jbe
lahf
dec
push
adc
jl
push
add
cli
mov
rclb
out
mov
js
mov
pop
insl
jne
cld
icebp
mov
sub
je
xor
pop
inc
pusha
dec
jns
inc
pop
cltd
sbb
mov
jbe
mov
cmp
pop
inc
in
rcll
mov
popa
andl
bound
add
xchg
inc
shl
sub
stos
mov
insb
pop
xlat
dec
loop
movsl
sbbb
push
movsb
or
jmp
mov
xor
push
push
popf
sub
cmpsl
out
push
push
fwait
sub
out
push
mov
in
lea
xchg
cmp
or
adc
pop
jbe
jl
mull
jge
cltd
cltd
push
sub
cmp
stc
sbb
push
push
cmp
cld
cmp
mov
out
mov
push
stos
sub
fdiv
adc
jae
xchg
jns
scas
outsb
movsb
ja
stos
ja
mov
jl
mov
mov
push
cwtl
adc
pop
mov
pop
mov
nop
shr
out
clc
fwait
scas
sbb
jnp
out
push
cmp
pop
lret
sbb
jo
test
and
cmp
sahf
jecxz
lcall
add
jmp
sub
push
sbb
and
xor
pusha
nop
inc
mov
lret
pusha
add
xor
int3
push
inc
xchg
push
scas
fnstsw
in
aas
imul
fstpt
and
pop
repz
mov
les
and
sub
and
cltd
cmp
mov
push
sbb
je
xor
mov
inc
fists
int
mov
pop
jnp
adc
lds
pop
push
inc
sbb
inc
add
add
push
adc
and
jbe
fisubrl
lcall
mov
adc
mov
or
popa
cmp
cmp
filds
adc
sbbb
sbb
adc
dec
dec
and
or
std
jns
in
pop
ljmp
mov
dec
inc
push
shll
test
pop
aas
sarl
fldl
les
inc
mov
cmp
adc
das
fs
or
dec
mov
dec
push
imul
daa
mov
xor
stos
jno
loope
dec
add
mov
mov
stc
add
add
push
inc
insb
int3
pop
cmpsl
mov
add
mov
jnp
insl
out
lods
mov
add
inc
mov
lock
jle
mov
lahf
sarl
dec
movsl
stos
mov
or
repnz
lods
xlat
push
sbb
and
fwait
jbe
xlat
lds
sarb
daa
cs
pusha
xor
push
imul
stos
push
jo
cmp
outsl
inc
cmp
xlat
and
inc
cmp
out
or
test
jg
mov
sub
stc
sbb
mov
jo
jne
js
ja
out
dec
xor
and
in
das
jns
or
loope
arpl
cmp
mov
push
dec
repz
cmp
lret
out
icebp
mov
out
roll
insl
xor
pop
jl
in
sub
loop
dec
out
and
outsl
cs
jmp
fistpll
push
setp
mov
inc
roll
dec
jnp
cltd
rcll
jne
cld
pop
movsl
popa
mov
fisubs
jmp
nop
dec
lcall
xchg
lret
jp
loopne
inc
clc
jmp
cltd
sarl
mov
fidivrs
sub
in
or
stc
outsl
sbb
xor
push
jp
fcoms
arpl
pop
pusha
pop
push
imul
xchg
cmpb
jne
xor
sbb
cmc
gs
adc
jg
clc
aas
test
pusha
xchg
fcomi
mov
jp
dec
push
cli
sbb
aas
aad
adc
testb
and
movsl
push
fistpll
jmp
into
pusha
cmp
jge
ret
inc
loop
xorl
fnstcw
push
mov
xor
mov
dec
insl
lret
rcrl
mov
push
cmpsb
movsb
jae
inc
pop
pushf
repz
fwait
loope
loope
xchg
sub
pushf
sbb
scas
mov
data16
push
test
pop
loopne
insb
idivb
das
aam
push
sbb
jo
xchg
lds
and
js
cmpsb
xchg
pop
mov
dec
add
push
std
fisubl
jg
mov
mov
xor
inc
cld
fists
movsl
and
movsl
dec
sbb
test
inc
jne
jg
push
fstps
iret
lock
push
xchg
or
fistpll
xor
int3
loopne
inc
into
mov
cmp
xchg
mov
aas
sub
and
inc
mov
les
jge
inc
fisubl
lcall
jb
add
dec
stos
mov
cmc
jne
dec
inc
hlt
and
and
sahf
mov
leave
mov
test
and
fs
scas
and
pop
movsl
cmp
movsb
cltd
pop
xlat
arpl
jp
ret
fimuls
insb
js
iret
xchg
mov
push
mov
mov
add
addr16
sub
push
inc
sbb
mov
out
ja
push
cmp
jge
mov
push
sahf
xor
and
inc
lods
sub
xchg
and
pushf
xchg
jae
sub
sarb
cmc
pop
add
adc
push
pop
dec
cmp
fstpt
jb
in
jns
pushf
fldcw
ficomps
popa
stc
jae
mov
dec
dec
daa
mov
mov
xor
inc
and
sub
dec
scas
fs
sbb
adc
es
ljmp
dec
dec
xor
inc
push
dec
adc
popf
pushf
pop
rorl
lds
xchg
mov
sub
je
lahf
fptan
mov
inc
cmp
jmp
les
jecxz
xor
jecxz
add
xor
mov
mov
sti
mov
push
push
inc
popf
stc
sbb
daa
mov
or
lods
jns
leave
or
lock
lock
push
mov
pop
inc
rclb
cmp
jecxz
mov
ret
and
addb
dec
loop
pand
sub
xor
mov
mov
call
adc
pop
dec
in
icebp
mov
pusha
and
subb
and
inc
or
pop
jp
out
pusha
arpl
pop
sbb
mov
lods
inc
inc
loop
sub
in
xchg
imul
pop
repz
ret
aaa
push
cmp
hlt
adcl
push
or
jmp
icebp
testl
cmp
push
mov
mov
sbb
push
adc
sub
loope
outsb
xchg
rolb
cs
jecxz,pn
out
fnstsw
or
dec
lock
add
je
cmp
dec
ljmp
shr
fsubr
leave
cmp
xchg
jnp
xchg
fidivs
fisttpl
jns
or
push
lods
and
push
xor
adc
loopne
shl
jle
mov
in
push
cli
cld
aas
lods
sub
mov
sub
mov
adc
mov
or
ljmp
pop
or
push
popf
adc
xchg
jg
pop
test
jne
xor
lahf
pop
decl
push
gs
loop
or
fidivrs
ffreep
loope
mov
in
cmp
mov
loopne
push
sbb
sbb
mov
divps
and
cmc
adcl
mov
push
out
mov
sti
int
mov
mov
adc
push
mov
cmc
movsb
dec
push
push
mov
insb
cs
fsts
stc
jle
mov
cmc
aas
cmc
ss
push
bound
or
xchg
pop
aaa
dec
out
test
fwait
add
scas
xchg
je
cmp
cmp
mov
and
movsl
or
aam
aad
sti
into
xchg
shlb
sbb
mov
test
sti
xchg
mov
jne
pop
fs
hlt
jmp
xlat
push
sbb
xchg
ljmp
jecxz
push
adcl
int
adc
call
sub
cmp
mov
mov
and
out
lret
clc
inc
dec
add
jne
sbb
sbbb
push
sbb
and
push
aad
arpl
inc
adc
ret
pop
jns
loopne
scas
out
sub
xlat
add
and
cli
pop
out
pop
mov
ret
rorl
jge
xchg
scas
stos
pop
insb
mov
cmp
adc
aam
shl
adc
dec
mov
dec
lock
jecxz
xchg
popa
rorb
xor
xor
add
dec
fsts
js
pop
aas
inc
cmp
arpl
lret
push
lret
clc
cmpl
sub
out
fidivs
ffree
push
dec
pop
pop
hlt
fsubr
into
jno
shlb
loop
fnsave
shlb
xchg
aam
sbb
repnz
dec
testl
xchg
inc
es
fmull
and
sbb
je
sti
jle
pop
inc
insb
fistps
lahf
jmp
ljmp
aad
jae
lds
cltd
out
or
bnd
aad
and
sub
lock
cmpsb
aad
mov
and
fs
dec
xorb
jp
mov
cltd
sbb
mov
rorb
lea
clc
fwait
out
mov
aam
je
xchg
mov
pop
sti
in
call
scas
insb
int3
dec
or
push
mov
fists
inc
insl
jns
stos
xchg
stos
adc
pop
xchg
cld
adc
inc
push
imul
xchg
nop
sub
jbe
jmp
xlat
pop
divl
jp
out
xor
xor
imul
rclb
fscale
dec
pop
jbe
pop
ss
push
push
push
lret
mov
adc
xor
add
jmp
push
sbb
inc
xor
test
rcr
mov
in
fdivl
push
inc
mov
aas
jl
jnp
inc
subb
popf
nop
lock
outsl
sahf
xchg
mov
add
in
mov
testb
out
inc
cltd
sbb
sbbb
adc
std
addr16
mov
xchg
jecxz
lret
sub
lahf
data16
jg
lret
sar
mov
leave
jno
js
je
data16
addr16
xchg
jge,pt
mov
push
or
and
xchg
aas
popa
push
arpl
inc
loopne
cmp
mov
pop
pusha
sti
fwait
dec
ret
dec
pop
add
push
xchg
mov
pusha
test
ret
jb
or
daa
fisubs
push
test
adc
in
xlat
and
and
in
mov
dec
add
mov
fwait
push
add
push
testl
idivb
cmp
lea
inc
pop
into
adc
dec
cmpsl
fdivrs
pop
test
or
jno
adc
add
stos
imull
mov
xlat
arpl
test
and
sbb
int3
daa
cmpsl
mov
loope
mov
out
loopne
mov
xchg
mov
mov
popf
dec
call
insl
lahf
sub
cs
repnz
ret
cmp
ret
push
jae
xor
pop
movsb
add
cmc
shll
sbb
sbb
daa
cmpxchg
out
push
je
leave
repz
out
push
in
in
sbb
inc
cld
xor
into
push
push
cld
mov
push
pop
jl
int3
out
push
shll
pop
rclb
and
add
cli
data16
sbb
xor
pop
sub
pop
sbb
loope
pop
sub
and
ret
sub
mov
push
sbb
loop
sbb
pop
inc
adc
rclb
insl
sbb
or
sbb
fmull
add
jne
sbb
pop
inc
mov
inc
cmpsl
or
push
aad
flds
mov
sub
push
add
pop
xor
xchg
or
and
xchg
sub
popf
loop
push
pop
testb
cmp
fs
mov
mov
add
enter
cmp
jg
jp
inc
fcomp
pop
leave
std
popf
in
or
out
je
jmp
arpl
sub
sbb
adc
mov
adc
arpl
ss
mov
xchg
subb
les
out
in
lds
leave
fwait
movsl
xchg
push
mov
ds
add
xor
mov
xor
repnz
jb
or
cmp
into
rcr
jb
fimuls
stos
sbb
pushf
add
int
cmp
daa
xchg
mov
xor
hlt
jle
inc
push
outsl
xchg
and
pop
mov
inc
pop
mov
sub
xchg
sti
xor
mov
push
fisttpl
cmp
jae
mov
or
xchg
ret
xor
xchg
push
xchg
cmp
dec
arpl
je
jbe
mov
fstp
subl
movsb
push
shrl
fcom
cmc
mov
sahf
and
add
ret
pop
lcall
test
data16
call
lret
dec
push
pop
js
shlb
pusha
and
loopne
out
inc
mov
imul
mov
inc
xacquire
fisubrs
dec
adc
testl
out
and
call
std
arpl
jne
js
cmp
jmp
ja
sbb
and
push
push
inc
pop
and
idivl
nop
pop
in
inc
outsb
in
inc
and
pop
ret
lea
sub
sahf
pushf
lds
cmpsl
inc
pop
pop
stc
aas
enter
movb
stc
stos
adc
mov
nop
lds
test
fisubrl
mov
push
in
inc
std
movl
pop
enter
and
sti
rcll
inc
cld
xlat
push
gs
gs
cmp
or
push
jns
rcll
adc
pop
hlt
push
and
wbinvd
sbb
xchg
call
out
jne
jnp
mov
cmpl
adc
jl
mov
cmp
in
mov
push
fcmovb
jb
loop
lods
pusha
leave
jno
sbbb
adc
cmpsb
fdiv
pop
addb
mov
shll
dec
imul
and
data16
sub
imul
aaa
pop
inc
jle
jb
fs
repz
adcb
mov
imul
push
add
cltd
ljmp
psrad
sbb
jns
jno
outsb
popf
pop
mov
sbb
loop
int3
push
mov
test
lahf
fdivrl
movsb
push
push
inc
pop
sbb
testb
xor
das
in
pushf
roll
js
sbb
dec
out
sbb
push
or
lahf
fucomip
popa
sbb
xchg
test
in
mov
jle
jg
and
sbb
jg
cltd
mov
movsl
fstpt
push
pop
aam
cmpl
mov
add
sub
cmp
stos
rclb
push
pusha
js
mov
andl
ljmp
mov
jnp
xchg
lea
andl
negb
ret
leave
push
or
or
movl
scas
adc
addr16
aas
pushf
inc
popf
mov
dec
mov
push
mov
out
xchg
clc
cmp
push
mov
hlt
mov
scas
dec
jo
adc
fdiv
jne
push
or
idivl
aam
or
aas
rcll
jo
cmpsb
fsubrl
cmp
mov
ret
out
mov
adc
inc
jg
xor
push
push
icebp
fisttps
loope
imul
mov
push
lods
rcl
test
mov
les
xor
in
xchg
fnstcw
cmpsb
xchg
into
add
int3
cmp
and
mov
movsl
push
pop
cmpl
jge
xorl
jns
xchg
xchg
addl
call
cmp
push
sti
push
xchg
mov
and
pop
xchg
or
aas
shl
sub
jo
and
inc
mov
jne
push
jge
int3
mov
dec
das
xchg
push
sarb
mov
add
fisttps
sub
pop
mov
jl
xchg
cwtl
jb
bound
stos
lret
mov
loop
mov
cmp
imul
stos
pop
shrb
cli
fprem1
ds
divl
pop
sbb
jg
mov
jmp
and
or
add
xchg
jbe
push
outsl
push
cmc
stos
orl
jnp
push
sbb
push
cmp
pop
loopne
movsb
or
jno
lock
xor
sub
xchg
jecxz
sbb
fistpll
mov
pushl
into
ret
and
fdivs
inc
mov
out
insl
imul
xchg
mov
xor
out
inc
inc
lret
dec
pop
repz
xchg
shlb
outsb
in
mov
xchg
je
adc
adc
mov
mov
mov
fisttpll
addr16
mov
lods
hlt
and
icebp
cmp
scas
lods
mov
sahf
outsl
insl
cmpsb
js
pop
les
fsts
mov
les
pusha
mov
test
mov
js
sbb
leave
fisttpll
sbb
adc
mov
and
jle
jns
or
jp
xor
and
lea
daa
fildll
mov
dec
dec
pushl
iret
in
clc
rolb
addr16
int3
test
dec
jo
add
lret
mov
jb
dec
jb
cmp
loope
mov
les
push
pushf
pop
xchg
mov
sbb
leave
pop
or
test
cmp
pop
arpl
add
addr16
mov
mov
arpl
jmp
pop
ret
jmp
xor
scas
inc
imulb
fs
imul
mov
in
mov
movsl
cmp
jae
or
or
xchg
testb
addr16
dec
fldenv
fwait
movsl
inc
fcmovnbe
loop
sub
jg
insl
push
cmpsb
sbb
xor
dec
inc
rclb
inc
cmpsl
sbb
js
mov
loopne
push
mov
mov
fs
pushf
add
xchg
mov
in
add
ss
iret
imul
test
xchg
xchg
pop
gs
push
in
rcl
lret
call
dec
jns
into
fisttpll
sbbb
jmp
dec
add
cs
idivl
in
push
pusha
aam
popa
adcl
negl
mov
and
mov
cmp
mov
dec
xchg
pushf
popa
sbb
and
jae
lea
sub
cli
push
or
mov
ljmp
push
jo
movl
roll
dec
adcb
mov
cmp
jmp
push
push
iret
jp
push
rcrl
arpl
out
xchg
push
push
adcl
out
rclb
test
call
scas
shll
enter
sbb
shll
jno
and
mov
es
jae
aaa
push
push
lcall
lock
into
cmp
loope
jnp
xchg
sub
jno
mov
adc
xchg
dec
mov
subb
repz
and
jae
jmp
xor
push
adc
arpl
sbb
cmp
push
decl
push
mov
in
push
loope
pop
jns
addl
lock
bound
xchg
dec
sub
imul
sub
sahf
subb
xorb
sahf
dec
dec
push
sub
pop
clc
push
and
mov
fwait
out
mov
mov
subl
mov
lret
push
jmp
rorb
dec
xorl
or
sbb
push
loop
movl
and
sti
adc
stos
je
pop
iret
mov
fmul
out
movsb
mov
test
push
push
cwtl
call
mov
cmp
lret
inc
and
adc
mov
jecxz
stc
inc
jno
mull
dec
iret
out
jb
test
pusha
pusha
push
adc
lahf
pop
cmpsl
repnz
inc
movsb
xchg
sub
adc
sbb
out
mov
imul
jg
sahf
imul
inc
push
or
out
xor
xor
mov
outsl
jne
mov
mov
imul
adc
mov
push
mov
out
and
inc
sbbl
push
scas
mov
add
stos
sbbb
or
push
add
repnz
sub
xchg
js
pushf
and
pop
pop
push
dec
popa
out
roll
or
push
outsb
enter
imul
repnz
stos
pusha
mov
pop
movsl
adc
and
or
clc
jnp
es
test
out
jl
cmp
cmpsb
fiadds
das
lahf
call
out
rorl
orl
mov
insl
pop
ljmp
pusha
divl
or
cmp
nop
faddp
inc
inc
jge
outsl
insl
mov
in
lods
lahf
jno
xchg
sbb
daa
fwait
pop
je
aad
sub
in
lods
and
aad
pushf
push
orl
pop
mov
push
inc
aam
mov
test
leave
mov
test
adc
leave
mov
ds
mov
lahf
sbb
or
imul
shrb
push
aaa
cld
repnz
jnp
movsl
push
cmp
fdivl
rcll
cs
xorl
lock
mov
imul
aaa
enter
and
jp
sti
call
mov
pop
lcall
lret
pop
ret
faddp
push
testb
cmc
repnz
mov
mov
inc
scas
sahf
leave
mov
jg
cmp
pop
dec
mov
or
xor
xchg
test
cmpl
incl
out
ret
outsl
stos
and
mov
lea
jecxz
pop
ret
sbb
cmp
dec
jbe
dec
aad
testb
and
mov
in
adc
std
add
in
adc
data16
sub
call
xchg
es
mov
in
mov
mov
popl
inc
push
shrb
stos
pop
jg
fldenv
sub
mov
ljmp
push
test
mov
pop
sub
nop
arpl
jge
jg
mov
lret
insb
lods
and
test
lahf
int3
arpl
fs
inc
aam
pop
in
mov
stos
sbb
add
cmp
push
or
js
jmp
loopne
or
sti
jbe
and
and
subb
mov
in
xor
mov
cmp
add
xlat
and
sbb
sbb
xchg
frstor
in
cs
sub
cmp
cmc
ss
pop
xor
sub
mov
rcrb
in
sbb
mov
pop
xchg
popf
mov
testl
mov
and
outsl
cmpsb
rcrl
jnp
out
push
sub
in
in
sbb
repz
or
push
cmp
lods
jle
call
pop
std
or
roll
sub
sbb
aad
lret
pop
cli
dec
in
cs
adc
inc
xchg
xor
iret
cmpsl
push
jmp
in
adc
jmp
lsl
or
mov
sbb
outsl
mov
and
dec
aam
add
stos
lds
add
pop
jns
and
jecxz
xor
out
stc
aaa
mov
aam
fwait
add
loope
and
rcrb
push
xor
int
rcll
addr16
jecxz
test
loope
cmp
mov
stos
jle
add
jo
lock
mov
fistpl
je
jne
dec
dec
mov
mov
push
inc
jmp
mov
test
lods
out
pusha
aam
inc
mov
inc
xchg
lods
scas
dec
inc
call
ret
popa
pop
rcrb
loopne
addl
inc
mov
adc
leave
ret
outsb
inc
into
mov
add
dec
outsb
xor
aam
loope
sub
rorb
or
fadd
push
sub
lods
outsb
dec
shrb
mov
loopne
je
adc
lods
js
imulb
push
iret
pop
inc
sbb
dec
cwtl
scas
mov
xlat
add
cmp
sbb
stc
sub
cltd
and
aad
rcr
xchg
ret
xlat
xchg
cmp
aaa
mov
popa
nop
aad
dec
fwait
mov
pushf
push
inc
add
fsubl
pushf
outsl
sub
lret
icebp
iret
jns
adc
add
inc
cmp
and
xor
jecxz
movsb
loop
rol
stos
ret
push
int
and
push
mov
mov
pop
inc
pushl
rcll
aam
bound
jno
pop
lahf
ja
xchg
mov
cmc
mov
inc
insb
and
pop
mov
pushf
adc
dec
push
btc
gs
jbe
loopne
push
iret
mov
stc
and
cli
push
jne
mov
inc
xchg
sbb
test
or
sbb
inc
add
jl
cmp
lcall
js
shlb
movsb
hlt
sub
mov
jb
jle
sub
adc
sbb
shll
xchg
sub
cwtl
andb
sbb
out
fstps
into
push
add
mulb
mov
add
ror
cltd
pop
sti
in
scas
nop
cmp
inc
cmpsl
or
popf
jo
mov
and
sbb
cmpsl
sbb
data16
xchg
lret
mov
rorb
andl
sub
inc
sbb
mov
pop
cld
adc
and
mov
out
ja,pn
mov
pop
xchg
ljmp
les
scas
les
ds
mov
push
sub
dec
out
lock
out
jl
les
push
outsb
inc
pushf
enter
xchg
loopne
out
testb
popf
or
xchg
jecxz
lods
pop
pop
call
repz
fs
dec
lret
fiadds
dec
fisubrs
sub
inc
xchg
mov
push
movsl
add
adc
gs
fs
js
sbb
sbb
imul
jmp
mov
fiadds
scas
movsb
loop
mov
inc
jno
inc
xor
call
cmp
dec
push
pop
and
sbb
adc
pop
std
mov
daa
clc
or
cmpsb
das
push
mov
and
pop
ret
xor
adc
pop
jnp
test
leave
mov
sub
jno
cmpsl
aaa
andl
lock
loopne
les
ret
pusha
sti
push
pop
mov
out
pop
dec
jns
mov
or
pop
push
jo
push
adc
and
arpl
inc
mov
lea
ret
out
call
adc
mov
ja
pusha
jb
rcll
adc
aam
icebp
insb
mov
xchg
or
xlat
mov
fnstcw
out
outsl
sbb
inc
rcrl
mov
scas
mov
stc
leave
mov
lods
mov
fldt
lcall
mov
repnz
xchg
sahf
xchg
cmp
sbb
pop
and
xchg
cmp
fsts
pop
sub
lods
nop
pop
fnstenv
and
cmpl
xchg
hlt
aad
mov
pop
push
lahf
jge
inc
jecxz
dec
ja
mov
inc
imul
jno
adc
in
or
xchg
xchg
sub
inc
and
cmp
mov
insl
test
pop
stc
nop
bound
int
push
inc
imul
sub
mov
int
mov
pop
fbstp
mov
pop
imul
or
inc
fmul
out
jbe
inc
sarl
push
cltd
mov
jmp
stc
ds
lock
lea
gs
fmull
sbb
loopne
sub
dec
inc
repnz
xchg
jg
dec
mov
divb
xor
mov
sti
stos
pop
jnp
mov
inc
push
ror
shlb
xchg
scas
inc
lds
sub
push
mov
lret
jae
mov
iret
sub
popf
movsl
hlt
xor
inc
or
mov
push
or
ret
lea
aad
leave
push
pop
rcrl
mov
push
nopl
gs
xor
out
rcrl
xchg
sbb
pop
sbb
je
and
dec
xchg
pop
imul
xchg
jno
jbe
mov
test
push
or
pushf
xchg
neg
packuswb
lds
pop
sub
jo
xchg
cmc
cld
fstl
stos
sbb
nop
mov
mov
adc
mov
cmp
push
movsl
mov
sbb
mov
xor
jno
dec
and
icebp
leave
inc
repz
mov
jl
enter
outsl
mov
sub
cmp
clc
inc
fs
mov
pop
cmp
mov
add
popa
daa
mov
fcomps
imul
popf
popa
das
mov
sbb
jae
jo
std
inc
loop
push
cmp
dec
addr16
mov
aad
mov
or
filds
js
shll
adc
loop
rcrl
ljmp
lods
fs
stos
stos
bound
jbe
outsl
loopne
movsl
stos
fsts
push
cs
or
cmp
stos
xchg
inc
clc
call
sub
out
lds
sub
daa
jne
movsb
adc
dec
cltd
aaa
stc
mov
xchg
push
ds
out
scas
sub
mov
mov
jp
push
inc
mov
aaa
in
mov
fistps
inc
add
pushf
movsb
mov
pusha
pusha
jo
cmp
jae
sub
xchg
enter
pop
jmp
dec
int
cmpb
sub
sub
push
jp
bound
insb
jb
fldcw
pop
mov
aas
pop
inc
xlat
and
imul
sub
pop
or
jne
sbbl
cmpsl
push
dec
cmpsl
cli
mov
repz
aaa
push
jbe
lret
out
clc
cmp
push
mov
dec
push
pop
jg
sbb
fmull
leave
roll
movsl
cmp
dec
int3
mov
add
pop
and
pop
dec
rcll
arpl
and
insb
loopne
pop
sub
loopne
sub
jne
bound
lods
mov
ds
ljmp
mov
fistpll
mov
fisttps
out
inc
and
mov
aad
subb
jmp
test
add
inc
movsl
test
insl
int3
rol
data16
dec
pop
mov
mov
mov
scas
daa
xchg
lods
pop
data16
out
mov
jns
vpsubd
cmpsb
iret
ss
xchg
dec
mov
push
std
xor
fwait
aas
xchg
cmpb
jmp
jo
packuswb
jno
jbe
outsl
aad
mov
xchg
mov
insb
xchg
adc
xor
pop
sub
sbb
subb
cmpsl
pop
fldenv
cmpsb
dec
cmpsb
xor
fs
push
shrl
inc
inc
mov
aam
shl
dec
rorl
sbb
stos
aas
testb
mov
adc
add
and
pushf
pop
and
test
mov
jle
xor
xor
repnz
popa
das
sub
pop
sub
and
stos
add
jle
sub
sub
dec
dec
jae
push
xchg
or
in
les
add
jge
xor
mov
adc
push
inc
mov
dec
imulb
clc
and
sbb
movsb
shl
mov
rorb
shll
in
dec
ficoml
test
stc
xchg
daa
pop
test
notl
loopne
ljmp
inc
lods
inc
stc
loope
mov
sbb
push
lea
insl
push
xchg
es
mov
call
lods
mov
pop
xor
mov
sbb
call
ds
lret
loopne
pushf
or
mulb
mov
xchg
aas
mov
cmp
ret
xchg
fdivrs
or
add
sub
jo
adc
dec
inc
loopne,pt
or
je
ret
jmp
notb
pop
insb
jg
out
xchg
and
pop
fcoms
xor
cli
push
sahf
ret
mov
dec
enter
std
lock
cmp
sti
cmp
and
inc
mov
enter
fwait
loop
ret
xchg
movsb
fsubl
sbb
lret
mov
mov
int
xor
cmp
loopne
std
xchg
pusha
stos
imul
mov
or
inc
shlb
cli
xor
popa
pop
scas
pop
popa
xorl
and
jmp
gs
daa
jecxz
scas
fcompl
jmp
adc
int3
jno
fldl
dec
inc
imul
xchg
imull
mov
dec
and
sbb
mov
cwtl
push
adc
cmp
daa
enter
jb
inc
mov
push
jne
test
inc
loope
nop
repz
and
movsb
pop
sbbb
xchg
out
cli
fldl
fdivs
sti
adc
push
pop
cmp
fcom
gs
hlt
jnp
inc
daa
push
xchg
mov
sbb
adc
sub
sahf
negl
ror
mov
imul
cli
mov
xor
cmc
mov
push
push
xor
adc
inc
jo
push
or
es
cmpsl
popa
pop
jns,pn
movsl
sub
pop
mov
outsl
in
or
lcall
test
adc
mov
jnp
test
rcr
popa
rolb
jnp
loope
mov
rep
jle
pop
mov
mov
xor
cwtl
out
cli
out
rcrb
mov
mov
jns
dec
cmpb
adc
jl
sar
js
fldl
into
pop
sub
jmp
push
adc
xchg
rcl
dec
divl
ret
pop
int
add
inc
xchg
fstps
pop
out
insb
fcmovb
pop
enter
add
mov
mov
sub
into
sbb
addl
sbb
and
jge
int3
mov
cmp
imul
lahf
movl
loope
fstpt
js
cli
jnp
add
sbb
mulb
xchg
movsl
push
inc
lock
xchg
bound
sar
cmpsb
adc
mov
mov
and
push
iret
xor
mov
push
cld
lcall
fnsave
xlat
lods
jp
js
cmp
and
ds
xor
mov
jl
jae
out
xchg
sub
cvttps2pi
frstor
sbb
pop
push
fildll
push
jno
fstl
lods
pop
repz
push
xor
fimuls
mov
out
and
jne
std
mov
jae
repnz
pop
repnz
mov
movsl
stc
mov
test
xchg
dec
sbb
push
xchg
andl
test
sbb
imul
add
mov
sub
sub
push
mov
aas
mov
mov
pop
cltd
leave
mov
fsubrs
inc
cmp
cmpsb
jg
cmp
jecxz
imul
sbb
adc
shrl
lods
or
fsubr
jne
or
pop
jo
mov
xchg
clc
xor
addb
jge
in
xor
inc
sbb
pop
mov
xchg
sar
in
test
sarb
insb
sbbb
add
mov
mov
pop
pop
xchg
out
mov
add
xchg
lret
test
cmp
push
arpl
dec
jnp
mov
js
mov
pop
jnp
je
fistpll
sub
mov
jnp
lods
in
push
add
push
dec
fsubrs
jp
sbb
push
mov
mov
adcl
dec
notl
jns
roll
xor
out
cmc
ret
and
iret
dec
enter
jge
es
mov
and
push
out
push
call
mov
sbb
std
enter
bswap
lds
imul
push
imul
dec
and
loopne
loope
test
xlat
xchg
cmpsb
pop
test
dec
sub
or
rclb
pusha
aas
lcall
mov
sahf
scas
pop
jae
sarl
gs
addr16
mov
iret
dec
sub
enter
or
sub
add
xchg
leave
and
dec
cmp
inc
repnz
mov
loop
scas
andl
sbb
mov
lret
clc
les
outsb
lcall
shlb
aaa
cltd
xor
ds
fidivl
mov
mov
xchg
daa
mov
aas
cwtl
es
test
fmuls
ret
outsl
shll
das
fwait
aam
iret
add
mov
mov
daa
aad
int3
fs
adc
inc
shrb
je
dec
cmp
or
daa
pop
fidivrs
lods
add
cmp
and
rol
sbb
dec
or
daa
lahf
push
cld
cmpsl
xchg
ja
jbe
push
push
mov
sbb
pop
aas
push
stos
inc
and
sahf
adc
test
inc
xor
cmpsb
seto
lods
mov
fucomip
lahf
cltd
in
cmp
icebp
bound
fistpl
mov
pop
imull
pop
xor
xor
jo
mov
lcall
mov
std
repz
push
imul
out
in
sub
push
fsubrs
outsl
xchg
fstl
testl
dec
or
xchg
aaa
addr16
iret
pop
gs
sub
dec
imul
out
ja
sub
inc
mov
sti
sbb
stos
mov
dec
and
sbb
out
xlat
shll
adc
dec
std
cld
mov
enter
lock
mov
js
and
in
inc
int
sbbb
repz
cmp
daa
insl
shrb
add
xchg
fsub
lcall
sub
push
jl
rcrl
push
xor
cmp
and
cmpsb
std
xchg
push
add
into
in
pusha
lock
sti
rcll
push
push
xchg
and
cld
sub
in
xor
add
popa
pop
jecxz
int3
adc
popa
xor
sbb
out
jp
xorl
outsl
shll
leave
jb
pop
lock
iret
insl
adc
mov
gs
xor
in
adc
movsb
cmp
mov
dec
pop
jae
and
push
sub
sti
and
cmp
sub
cmp
fdivl
aaa
mov
push
lea
xchg
xor
js
or
add
ficomps
jb
mov
hlt
hlt
sbb
nop
test
outsb
cmc
mov
test
cltd
fnstenv
inc
xor
loop
ljmp
add
outsb
push
imul
call
and
push
push
xor
pop
push
xlat
fnstsw
push
dec
in
popa
shrb
iret
mov
in
stos
stc
and
aam
repz
cli
push
mov
adc
mov
pop
cmp
xor
mov
mov
pop
sub
ror
ret
popa
add
ds
shl
jb
out
out
ret
aas
or
jg
xchg
int
xor
jmp
je
cmpsb
iret
mov
pop
pop
push
loope
sbb
push
pusha
popa
pop
mov
pop
xchg
sbb
mov
adc
xchg
sbb
add
mov
sub
popf
imul
mov
pop
add
gs
loop
call
xadd
les
leave
test
xor
jo
out
stc
lods
add
test
mov
int
pop
jae
ja
dec
lods
mov
jne
add
xor
adc
cs
mov
mov
jo
push
stos
jnp
mov
pop
mov
jmp
xor
cltd
test
sbb
xchg
mov
sbb
sbb
push
or
push
mov
jecxz
mov
push
in
pop
leave
pop
cs
popl
das
stc
into
xor
inc
cmp
pop
xchg
xor
in
push
cmc
repnz
test
mov
jmp
inc
loope
cltd
pop
inc
xchg
pusha
test
xchg
sbb
adc
clc
adc
ret
ss
add
popf
sub
sub
fbstp
adc
pop
dec
imul
xor
cmp
and
sub
or
xchg
subb
xchg
adc
rcl
or
xchg
and
lcall
ja
fcoms
or
call
cmp
jnp
mov
adc
sub
jb
sbb
int
pop
sub
out
aaa
mov
jb
sbb
loopne
and
pop
cmc
aas
cs
jne
ja
pushf
mov
push
fucomip
or
xchg
fcmovnbe
shll
cmpsl
movsl
jg
jmp
movsb
xor
fsubr
jno
or
cmp
aam
cmc
xchg
hlt
lahf
lock
pop
ds
mov
ret
pusha
cli
loop
adc
sbb
out
pop
mov
sti
stos
test
sbb
cmp
sbb
inc
xor
mov
bound
sbb
lcall
shlb
cmp
adc
int
fs
and
dec
inc
out
into
mov
fldl
push
nop/reserved
icebp
and
fwait
roll
push
loop
pop
lods
push
sbb
xchg
arpl
jle
repz
imul
jmp
lods
mov
push
lock
cmpl
mov
divl
loope
push
pop
addr16
mov
pop
push
push
aad
lret
mov
fistpl
cmc
jbe
repz
leave
test
cmpsl
sub
cmp
fistpll
imul
aas
dec
filds
lds
dec
jle
push
pop
imul
or
xor
jbe
call
in
cwtl
and
out
xacquire
lock
lea
stos
aad
in
in
and
call
sub
mov
sub
aam
inc
ss
je
and
inc
loopne
push
jnp
sbb
test
out
sbb
xor
enter
pop
es
fwait
shrb
stos
xor
leave
fsts
arpl
popa
mov
ret
sub
pop
xlat
shlb
movsl
mov
mov
push
sub
mov
pop
test
aam
js
sbb
enter
dec
aaa
add
bound
out
xchg
stc
daa
push
mov
ds
mov
in
mov
das
cmp
adc
idivl
cltd
jne
jp
jae
shl
pushf
ret
clc
sub
push
or
add
jl
and
packssdw
ret
daa
adc
push
sub
lods
clc
sti
jmp
movsb
mov
js
in
or
fcomi
sub
repnz
cmp
es
add
test
movsb
jge
mov
mov
mov
jg
dec
push
ret
rorl
adcl
mov
cld
movsb
cmp
pop
cmp
test
dec
adc
push
sbb
movsl
add
insl
sbb
mov
lea
aaa
dec
mov
shll
xchg
pop
adc
jle
add
mov
sbb
pop
sub
sbb
jne
push
dec
jl
shlb
loop
inc
add
mov
out
jb
push
mov
add
repz
adc
aas
adc
rclb
xchg
xchg
lret
inc
cwtl
cmp
push
movsb
das
cwtl
add
mov
ret
fists
inc
push
xlat
push
mov
movsb
xchg
sub
xchg
jecxz
hlt
cld
jo
push
add
push
jle
xor
clc
cmp
lock
and
lea
push
daa
shl
ret
scas
mov
movsl
mov
addb
fwait
stos
scas
sbb
lods
test
mov
pop
leave
cmp
push
lods
movl
cwtl
pop
lret
jae
idivb
aas
xor
in
sti
mov
out
out
inc
movl
leave
adc
mov
arpl
add
mov
lret
mov
sti
pop
cmp
js
mov
jae
repz
jo
mulps
in
aaa
sbb
test
xchg
daa
add
into
jae
push
nop
popa
sbb
into
add
pop
mov
mov
insl
xor
add
fwait
xchg
aaa
mov
mov
cmp
rol
sbb
dec
scas
pop
push
fiadds
xchg
sbb
push
mov
jae
dec
out
fidivrs
call
pop
pop
imul
mov
push
pop
cmpsl
daa
adc
subb
je
and
xor
sti
dec
lods
push
xchg
cmp
in
sub
roll
dec
pop
push
mov
pop
cmp
iret
data16
cwtl
push
and
rorl
punpckhwd
pop
dec
push
es
out
into
dec
cmp
dec
mov
inc
mov
ds
outsl
cli
sub
jmp
pop
sbb
nop
in
fs
mov
sahf
mov
push
pop
sub
in
repnz
or
fildl
jb
movsl
std
jno
push
sbb
cmc
in
ja
std
inc
mov
sub
cmpsb
cmp
fidivs
sbb
xchg
es
or
xchg
add
sbb
xchg
into
call
mov
ljmp
push
jb
clc
iret
dec
and
jmp
dec
ja
jo
jecxz
lods
movsl
out
ss
mov
or
ljmp
clc
adc
mov
mov
dec
push
xchg
cmp
ret
leave
ror
xor
xchg
out
mov
shr
push
or
xlat
mov
ljmp
pop
lret
lcall
ss
mov
inc
ja
xchg
and
sub
sarb
xlat
pop
sbb
aad
mov
lods
inc
sbb
xchg
jo
inc
out
stos
lret
sbb
roll
insb
adc
mov
sbb
mov
sub
lods
outsl
movsl
push
dec
xchg
fcoms
cli
cmp
push
mov
dec
outsl
cmc
sub
sbb
mov
lret
xchg
ja
push
testl
inc
stc
loopne
jbe
sub
mov
lahf
repnz
inc
stos
into
sub
mov
nop
jmp
pop
xor
paddusw
mov
xchg
mov
mov
push
imul
test
sbb
pushl
call
call
std
dec
push
sub
pop
leave
jp
popl
sub
cltd
lock
jmp
sub
stos
inc
rcr
jnp
lret
outsl
push
ret
cmp
scas
dec
dec
sbb
inc
xchg
leave
push
int
xchg
clc
in
pop
mov
push
mov
icebp
fucomi
xchg
loop
pop
shll
mov
adc
adc
loopne
push
xchg
loopne
test
xchg
pop
aad
in
je
fnstsw
push
push
or
xor
pop
mov
xchg
mov
sub
ret
push
cmc
dec
imul
cld
jg
pusha
inc
neg
sbb
jno
cltd
subb
xor
or
or
fs
sub
adc
add
pop
lret
push
cmp
lds
mov
and
in
push
xor
jle
lods
push
inc
sub
and
mov
icebp
mov
or
fadds
pop
jae
arpl
test
jp
pop
repnz
cwtl
aas
aas
imul
pop
mov
sub
inc
or
jae
iret
fucom
or
ss
and
fwait
cli
dec
js
aas
inc
gs
maxps
jno
jmp
outsl
je
arpl
icebp
sbb
test
andl
shll
out
js
and
xchg
stos
and
xchg
or
cmpl
inc
xchg
pop
jb
jb
mov
dec
mov
xchg
je
nop
sub
jb
pop
pop
adc
out
xchg
in
and
xchg
enter
xor
jp
add
lret
imulb
xor
add
jge
pop
lret
ret
mov
mov
xor
xchg
xchg
mov
bound
movsb
push
push
dec
bound
or
or
aad
cmp
in
pop
dec
sub
mov
add
adc
pop
stos
push
cmp
sbb
or
aas
lock
jns
sub
mov
adcl
stc
scas
mov
mov
fsubrs
leave
mov
inc
lret
push
in
pop
adc
fcmovnu
pusha
std
adc
xor
dec
xor
and
imul
add
cltd
xchg
fisubrs
xor
nop
mov
int3
xor
dec
cld
addr16
add
cmp
clc
lods
mov
fildll
xor
pop
ss
xchg
or
fldt
mov
adc
mov
mov
push
stc
fnclex
add
daa
inc
int3
dec
shl
ret
test
sub
cmpsb
xor
test
xchg
push
les
and
lods
lds
cltd
fsub
cmc
dec
sub
in
call
shll
dec
pop
jo
jge
pop
test
mov
and
xchg
fs
sbbb
popf
adc
add
lds
inc
jle
aad
inc
mov
fimull
outsl
dec
push
sbb
sbb
enter
fisttpl
adc
inc
dec
sti
and
mov
mov
cmp
lcall
fstl
pop
sub
adc
lcall
push
mov
mov
sti
sbb
movsl
addr16
ja
ja
cs
or
dec
xchg
sbb
out
test
adc
push
arpl
and
dec
and
mov
icebp
sbb
or
hlt
stos
or
jb
push
add
push
mov
or
push
idivb
pop
scas
xchg
push
jge
popf
adc
cmpsl
adc
add
cmp
xor
arpl
xchg
push
sbb
repz
pusha
test
dec
mov
repz
xor
push
pop
shr
dec
pop
xor
push
adc
push
lds
test
shr
ds
add
push
jb
js
pop
mov
test
test
xchg
mov
cmp
adc
jp
dec
scas
dec
cmp
xorb
push
in
into
rcrb
push
add
xchg
adc
enter
pop
add
mov
mov
shrl
jmp
ror
mov
jge
nop
test
mov
stc
mov
leave
cmpsl
push
fisttpl
jbe
dec
daa
movsl
out
je
pushf
push
mov
cmc
dec
jl
cmc
adc
sahf
mov
jmp
cli
fsubr
pop
xor
sahf
imul
or
jl
mov
mov
lret
call
mov
lods
mov
repz
push
mov
cmp
xlat
jne
movsl
ret
and
xchg
xchg
inc
imul
pop
pushf
xor
cmpsb
cltd
lock
pop
or
pop
ret
rcll
lock
sub
stos
les
push
sti
jp
movsl
stos
fistl
cmp
lock
mov
and
jmp
jbe
sbb
cli
mov
arpl
sbb
add
test
loope
jp
pop
fists
inc
push
mov
sbb
pop
call
scas
out
int3
test
shrl
xchg
push
jbe
fbld
rol
push
jne
subb
dec
insl
mov
or
dec
bound
pop
mov
imul
push
dec
pop
pop
mov
sub
mov
popa
inc
jp
cmp
xchg
insb
pop
or
aad
bswap
and
and
mov
mov
jo
or
sbb
into
into
cmpl
daa
sub
adc
sbbl
xlat
inc
and
jo
je
shl
xchg
xor
mov
lds
in
scas
popf
and
fstl
cmpsb
pop
mov
cld
int3
outsb
cld
imul
dec
jo
and
push
xor
mov
mov
jb
xchg
mov
push
popf
sbb
dec
js
out
ret
ds
mov
es
lea
insl
sub
arpl
dec
push
into
cmp
test
xchg
jle
stc
jg
xchg
ss
push
rep
iret
jmp
sub
xadd
mov
out
adc
mov
pop
jnp
sar
pop
scas
mov
inc
push
sbb
mov
add
sub
xchg
mov
mov
enter
mov
and
sub
fadd
test
dec
sub
mov
and
ss
mov
adc
shrb
decl
and
int3
ret
cmp
jno
mov
or
mov
pop
outsb
stos
stc
lds
outsb
jno
mov
sbb
and
pop
sbb
and
inc
push
sbb
sarl
push
pop
leave
xor
pop
mov
out
lock
pop
lcall
mov
sldt
xchg
in
push
push
stos
pushf
movsb
test
sub
loope
aaa
lock
std
clc
lcall
out
fcoml
lds
mov
add
aam
pop
cmpsl
pop
leave
jno
cmp
lcall
imul
pop
mov
xchg
ffreep
cmpsb
mov
insb
les
pop
and
xor
adc
pop
in
das
out
mov
ror
rcrl
pusha
into
movb
aad
imul
push
xor
ja
add
adc
jmp
jecxz
lds
repz
cmc
not
xchg
aaa
fsubl
jnp
pop
mov
test
pop
les
adcl
or
mov
xchg
inc
fnstcw
mov
lods
imul
xchg
xchg
xchg
out
mov
and
cld
sbb
sub
ljmp
arpl
cmpsb
into
cmc
mov
outsl
shrl
rorb
sub
sub
add
jae
in
jmp
xchg
jnp
into
dec
push
sub
jmp
xchg
sub
adc
stc
mov
ljmp
push
jmp
push
push
adc
dec
xor
push
jno
arpl
sbb
mov
mov
push
add
cmp
sub
gs
out
sti
add
pop
add
cmpsb
pop
aad
xchg
jmp
mov
xchg
pop
xor
in
sti
jge
xlat
out
stos
popf
scas
push
sub
mov
shrb
jl
or
test
jl
mov
push
gs
pushf
push
sti
icebp
or
int
es
lds
pop
into
scas
xlat
xor
faddp
and
xlat
or
pop
cmp
xor
push
call
jp
push
cwtl
stos
xchg
pop
mov
nop
mov
clc
mov
outsl
jp
inc
les
jns
mov
icebp
ja
lret
addr16
cmp
stos
sub
inc
cmc
xchg
stc
cmp
mov
idivb
movsl
xor
inc
inc
in
mov
stc
popa
sbb
push
popa
jne
jle
mov
xchg
xchg
cli
iret
inc
lds
inc
div
and
popf
and
repnz
dec
hlt
imul
sub
aam
fstp
sub
enter
or
test
outsb
adc
push
mov
or
test
cmp
cwtl
sbb
cmc
jle
int3
mov
sbb
mov
ljmp
icebp
xor
adc
sbb
loopne
pop
jg
mov
sub
jmp
inc
fwait
jl
mov
pop
pop
int
jns
lea
mov
cmp
xlat
fabs
dec
clc
and
inc
out
divl
lods
push
lea
or
call
push
push
sub
test
pop
movsb
jmp
push
fnstcw
inc
mov
movsl
mov
or
jecxz
jecxz
mov
push
movsb
testb
scas
lahf
push
daa
push
test
jle
xchg
insl
and
ds
pop
mov
xchg
outsb
jecxz
mov
and
loop
popa
pop
ret
mov
pop
pop
mov
sar
sbb
pop
push
pop
jbe
and
mov
and
loopne
lcall
call
in
into
push
test
dec
inc
xchg
cmpsl
arpl
mov
hlt
addr16
popf
sbb
sub
mov
inc
les
lahf
fcom
sub
cmpsl
xor
push
mov
adc
orb
sbb
mov
pop
or
jecxz
nop
sarl
test
movsl
pop
rcll
sarb
aam
loop
pop
and
pop
or
xor
fistl
xchg
xchg
push
or
fists
stos
repz
pop
add
repnz
dec
aad
addl
cmp
and
adc
adc
test
add
mov
fs
inc
fnstenv
iret
pop
inc
shrl
lea
pop
xchg
mov
push
pop
lods
icebp
bound
add
fstl
scas
sbbb
cmp
orb
loop
scas
push
mov
cmp
mov
sub
inc
xor
movl
jbe
mov
xchg
pushf
neg
xlat
cltd
pushf
and
xchg
push
mul
xchg
inc
xchg
xor
or
sub
popf
je
jg
sbb
mov
mov
xor
push
push
fldenv
xor
bound
mov
pslld
lret
pop
add
sbb
aas
mov
mov
xchg
mov
or
in
imul
call
test
xchg
xchg
in
and
inc
and
scas
das
jle
paddw
pop
xchg
cmpsl
push
inc
ret
test
dec
mov
cmp
and
push
sahf
or
popa
mov
cmp
mov
push
dec
xchg
imul
lds
rorl
xor
aad
cmp
mov
enter
in
pop
push
les
cmp
or
cwtl
mov
lds
fisubs
pushw
in
fs
and
mov
pop
in
stc
out
xor
rcrb
outsl
mov
inc
dec
add
sbb
movsb
add
inc
out
pop
and
and
test
in
je
aaa
lcall
jne
jp
popa
daa
cmovl
mov
shr
mov
jp
sub
sub
cld
jae
fldcw
xchg
into
adc
arpl
and
mov
mov
jg
enter
cs
fwait
out
jnp
inc
stc
dec
mov
das
sub
sarl
mov
cwtl
jmp
ret
jl
sub
aas
pop
mov
cmpsb
add
shlb
jnp
mov
jno
ss
out
fs
mov
in
pop
pop
popf
stos
bound
mov
aam
push
std
add
xor
cmp
fcom
push
pop
xchg
das
test
jmp
fcoml
and
mov
xchg
out
xor
jge
je
cmp
cwtl
stos
and
dec
ds
and
in
xchg
dec
inc
enter
cld
or
std
les
pop
les
xchg
adc
pop
mov
mov
shrl
push
mov
cmp
dec
jle
dec
std
sub
shl
loope
ds
rclb
stc
dec
mov
rcrb
jbe
adc
rcrl
cmp
add
faddp
out
sbb
mov
sub
mov
dec
inc
test
cltd
orl
push
push
sub
push
lahf
es
cmpsb
not
sub
push
fiaddl
pop
insl
push
jg
push
decl
mov
mov
dec
lea
jno
push
adc
xor
or
mov
mov
sbb
fcompl
add
or
movsb
mov
shlb
sbb
fsts
adc
mov
mov
and
push
test
sbb
push
xchg
sahf
insb
or
pop
dec
std
jnp
arpl
test
gs
add
shl
xor
sub
out
mov
inc
xor
or
int3
xor
insb
rcl
idivb
ja
iret
pop
mov
ret
fidivs
ret
aad
testl
ds
adc
pop
mov
div
shr
into
pop
cmp
dec
sahf
pushf
mov
sub
and
dec
daa
js
fsts
aaa
mov
xchg
pop
push
xchg
dec
pushf
dec
mov
enter
adc
fs
mov
addr16
ret
daa
cmp
gs
sahf
cmpsb
xor
stos
add
sahf
xchg
lods
test
movsl
mov
cmpsl
sub
push
in
adc
aad
add
mov
movsb
les
and
das
stc
daa
add
jp
jae
or
fstpl
push
dec
out
sub
popa
jle
dec
fistpll
fwait
jge
iret
sub
fcomip
movsb
add
add
mov
popf
push
pop
in
pop
aaa
stos
loopne
loop
lea
int
aam
pop
xor
sub
inc
ja
sti
popa
xchg
repnz
sbb
add
sub
mov
or
inc
lret
cmp
ror
aaa
imul
sbb
in
scas
push
jle
xchg
jnp
test
xchg
pop
pop
decb
jnp
ljmp
jmp
notl
xchg
and
ret
push
dec
push
jg
mov
mov
push
shll
stos
mov
shrb
loop
jbe
jge
addl
lahf
adc
lahf
adc
jae
or
lock
xlat
mov
pop
outsb
fnstenv
insl
mov
ds
mov
inc
xor
fadds
xchg
jecxz
in
cwtl
cltd
adc
rol
in
xchg
inc
dec
xlat
enter
pop
ficompl
pop
pusha
xchg
shrl
mov
loop
dec
iret
lds
stos
sbb
cli
lahf
pushf
lods
lods
lahf
stc
sbb
cs
mov
je
fwait
fisubrl
das
hlt
lds
and
lahf
notl
leave
movsb
dec
cmp
popf
dec
mov
rcll
and
into
mov
in
mov
sub
cmp
fsubrl
xchg
jbe
cwtl
xchg
clc
mov
fiadds
dec
rolb
jmp
cwtl
rorb
mov
out
in
fwait
push
add
xor
xor
xchg
ja
iret
cmp
hlt
push
mov
addr16
xchg
pop
jb
dec
call
lcall
adc
fs
add
lods
dec
mov
adc
add
pop
mov
push
mov
imul
addr16
lcall
jecxz
lcall
pop
pop
bound
sub
adc
lret
pop
pop
xorb
cli
jg
xchg
sahf
addr16
add
jp
fcoml
xchg
lahf
and
lahf
cltd
sub
pop
test
mov
fstpt
mov
stc
pop
test
rcrl
out
cmp
or
insl
out
testl
adc
mov
jle
sbb
cmp
clc
cli
andb
ret
imull
jmp
cmp
mov
daa
mov
pop
inc
subb
sub
mov
divb
sbb
sahf
jge
lock
and
push
add
aas
out
test
xor
inc
mov
sub
mov
sarl
cmpsl
push
test
jecxz
pop
movsl
je
dec
pop
mov
xor
cmpsl
das
pop
mov
out
sbb
adc
xchg
insb
scas
in
test
mov
add
insb
loope
imul
dec
mov
inc
nop
push
and
jmp
fs
aam
in
inc
xor
iret
sbb
add
out
jecxz
dec
sbb
clc
xchg
xor
fbld
cmpsl
sbb
sbb
dec
cmp
xchg
and
jne
dec
je
lret
andl
stos
mov
mov
gs
pushf
ss
insb
xor
dec
inc
ret
inc
in
add
inc
jno
push
aad
xchg
cmp
ss
add
push
subb
dec
jbe
mov
fnstcw
dec
inc
xlat
mov
mov
fists
out
mov
call
pop
sub
mov
push
xchg
lret
jg
fwait
das
sbb
mov
push
add
sti
dec
test
div
lods
and
js
jp
mov
push
inc
push
add
push
sub
pop
call
or
ret
addr16
int3
rcrl
mov
je
pop
divb
sbb
cmpl
popa
shll
leave
and
sub
inc
sahf
out
rcrb
mul
cmp
or
xor
mov
inc
in
shll
pop
push
js
outsl
inc
lcall
push
mov
jmp
movsb
pop
jne
lahf
fcmove
ficoms
sub
lods
sub
stos
cmp
inc
ret
out
stos
sub
fistpl
sar
addl
and
mov
xor
mov
stos
jmp
jge
hlt
mov
mov
es
inc
fs
aas
lods
popa
adc
lods
pop
sbb
aas
nop
repz
xchg
decl
push
insl
pushf
les
mov
dec
cltd
movb
out
cmpsl
jno
lcall
mov
push
mov
repz
mov
jno
add
clc
notb
push
xchg
and
sub
scas
dec
mov
clc
mov
sub
clc
xlat
movsb
push
mov
stc
aas
jmp
fsub
and
ljmp
add
adc
jecxz
call
movsb
test
pop
fwait
mov
pop
lds
add
imul
dec
je
cmovg
sub
mov
loope
sti
xlat
push
sbb
cld
jno
iret
daa
out
inc
sbb
divb
popf
andl
inc
xchg
cmpsb
dec
mov
test
jmp
inc
push
push
les
imul
mov
stos
sub
sub
test
or
mov
jnp
xor
mov
sti
iret
cmpsb
popa
pop
iret
or
xchg
sub
call
cli
out
inc
push
xchg
daa
push
lret
mov
lods
mov
cltd
gs
movl
stos
aam
and
mov
lds
push
loop
jo
dec
les
daa
adc
stos
sbb
sbbl
nop
mov
lods
xchg
or
in
cltd
lds
and
jl
js
push
stc
popa
addl
sarl
inc
push
or
jne
pop
shl
out
pushf
jmp
xor
psubw
mov
dec
and
not
mov
fadds
adc
cmove
lret
daa
or
les
xlat
pop
pop
and
pusha
pop
gs
in
push
adc
loopne
pusha
addr16
add
sub
sub
jge
xchg
outsl
in
cmp
frstor
mov
jne
fnstcw
filds
movsb
add
lods
rcrl
jmp
dec
add
and
dec
scas
mov
push
cmpsl
inc
push
push
cmp
push
xchg
loope
mov
inc
mov
dec
or
fdivrl
cmp
stos
clc
sub
ds
mov
and
or
push
pop
jnp
mov
movsl
aam
gs
popl
lahf
dec
loop
adc
lcall
xchg
clc
jmp
jge
movb
and
js
lods
or
cmp
inc
lods
ficompl
xor
push
lcall
addr16
enter
aam
mov
add
fbstp
aad
push
ds
mov
movsb
sub
inc
push
mov
mov
or
xor
loope
ret
aad
cli
cltd
sub
out
add
outsb
mov
sbb
sahf
scas
movsb
xchg
inc
lahf
add
inc
ds
in
outsb
push
push
pop
sahf
pop
scas
add
sub
push
out
sbb
pop
hlt
mov
clc
repz
pusha
mov
ret
enter
push
popa
imul
cmpsl
xor
add
fidivrs
in
ljmp
mov
hlt
ljmp
push
jno
xchg
fbld
movsb
sub
dec
xor
aam
shll
or
imul
fcompl
jns
mov
cltd
cmpsl
sahf
inc
neg
xor
add
bound
cmp
or
fistps
ret
testl
add
adc
mov
push
push
mov
scas
leave
add
fwait
xor
js
sbb
xchg
or
je
lock
jle
mov
push
aaa
mov
mov
cmp
in
inc
xchg
sarb
hlt
jmp
dec
ffreep
lods
cmpsb
inc
pop
rcr
add
dec
rorb
mov
pop
fwait
insb
xchg
jo
mov
inc
popf
cmp
clc
loope
outsl
iret
pop
decb
push
sahf
inc
stos
mov
aas
das
mov
adc
andb
xchg
sub
push
push
adc
adc
mov
cmp
pop
xor
adc
mov
stc
scas
xlat
mov
in
inc
in
push
cmp
add
add
jecxz
enter
push
pop
stc
mov
pop
lahf
adc
and
ss
jo
pop
cmpsl
dec
std
lock
mov
jbe
push
imulb
test
xorl
fcomip
jl
shlb
pop
mov
and
xchg
dec
push
jge
sbb
mov
jge
movsl
subl
push
dec
mov
cmp
pop
negb
inc
mov
xchg
inc
xchg
pusha
pop
sub
mov
mov
xchg
mov
inc
push
xor
jecxz
andb
pop
cmp
push
xlat
out
movsb
push
xchg
mov
rolb
xorb
sbb
clc
aaa
shll
and
lods
mov
roll
xchg
out
xor
leave
xor
scas
iret
jns
pop
rorb
push
ffreep
divb
mov
ja
ret
testb
jae
mov
and
iret
cmp
mov
pop
scas
mov
lahf
ljmp
pushf
mov
lret
mov
testb
cmpsl
sub
mov
push
shl
pop
or
jmp
sub
daa
into
fsubr
hlt
xchg
xor
lea
idivl
and
mov
lcall
lods
clc
mov
bound
xor
or
fcomps
cmp
loope
push
xchg
dec
add
sub
jno
sub
ss
xor
out
pop
cmp
into
out
in
jno
sbb
mov
lods
mov
leave
adc
and
fisubl
push
xchg
leave
in
sbb
ds
ja
in
rcrb
pop
adc
xor
loop,pn
stc
jnp
dec
sbb
pop
xchg
sbb
mov
popf
sub
push
lods
mov
aaa
push
and
mov
add
xor
push
and
gs
pop
call
mov
movsb
xlat
cmp
rolb
cmp
pop
xchg
or
push
pop
jl
jl
push
sbb
sub
je
sbb
mov
push
mov
cmp
test
xchg
adc
pslld
jmp
sbb
mov
mov
adc
shll
movsb
push
jle
pushf
mov
dec
add
jg
xchg
shrl
mov
sbb
cmc
jb
enter
sar
imul
lcall
dec
repz
push
mov
push
rcrl
loopne
jno
add
bound
or
inc
lea
fildll
outsb
shl
mov
and
or
lret
dec
xor
push
xchg
mov
es
dec
sahf
cmpb
sbb
and
cmpsl
out
sub
jmp
rcrb
mov
jecxz
popf
fiadds
cmp
push
jne
addr16
adc
xchg
xchg
fstpt
or
sti
mov
mov
and
mov
sub
fwait
lea
mov
out
and
cmp
ljmp
sarl
dec
addr16
jmp
aad
and
mov
cltd
mov
sbb
notb
mov
xor
popa
in
filds
add
gs
or
xor
sub
pop
icebp
pushw
loop
test
arpl
aam
das
into
lahf
loopne
xchg
inc
shlb
pop
mov
sbb
fildl
mov
push
daa
xchg
xchg
adc
or
xchg
dec
add
inc
loopne
ret
out
enter
adc
sti
jge
sub
addr16
cmp
sbb
dec
or
mov
es
es
add
pop
sub
jmp
test
data16
fwait
push
dec
sbb
sbb
call
out
fs
ret
xchg
popa
jne
in
pop
aad
hlt
mov
pop
mov
and
cmpsl
xor
push
inc
into
xlat
mov
lcall
adc
fsubrs
pop
call
shrl
inc
in
xor
mov
xor
jmp
push
lods
inc
cmc
cmp
and
enter
xlat
cmp
ret
fstps
xchg
dec
aaa
icebp
int3
sub
mov
mov
push
adc
call
jmp
sub
popf
arpl
jmp
push
mov
xor
or
sbb
shrl
add
pop
or
pop
ret
in
push
leave
ret
sahf
lods
aas
pusha
cmp
jno
push
sbb
sbb
inc
loopne
std
scas
jno
sbb
imul
mov
adc
push
insl
arpl
shlb
pop
out
jae
mov
sbb
test
xchg
mov
call
push
push
loopne
stos
lcall
cltd
xor
and
cmc
and
pop
lods
jnp
cltd
mov
pop
je
xchg
adc
mov
cmpsl
ret
mov
das
enter
lods
sarb
jae
sbb
ret
mov
cli
shr
dec
push
push
jae
pop
cmc
mov
sub
ficoml
jp,pt
and
push
fnstenv
add
enter
mov
clc
outsb
inc
jmp
ss
hlt
insb
cmp
add
outsb
push
mov
das
cmp
ret
push
inc
or
ss
clc
mov
adc
loope
dec
loop
mov
jg
push
dec
mov
ja
ds
inc
xchg
aaa
popa
pop
or
ret
into
call
inc
push
cltd
sbb
and
inc
mov
adc
jg
pop
sub
popf
in
sbb
loopne
xor
hlt
mov
jns
imul
repz
arpl
fs
std
mulb
stc
sub
enter
mov
loopne
xchg
jecxz
or
adc
cli
insl
flds
fisubs
sbb
jmp
add
test
push
add
mov
das
inc
pop
dec
push
adc
loopne
fsts
ds
fmul
inc
in
add
xchg
fs
push
cmp
aam
fcoml
imul
xlat
add
xchg
mov
int3
call
and
jge
iret
xchg
mov
ja
mov
push
and
ss
fistps
lods
fsin
mov
aam
icebp
mov
push
in
aad
xor
notl
add
or
xor
pop
imul
cmp
pusha
mov
sub
sbb
adc
scas
push
into
sub
add
addr16
test
mov
les
adc
adc
or
into
adc
cmpsl
xchg
xlat
mov
fcomi
xor
into
data16
pop
push
and
int3
cmp
mov
lea
cmp
mov
sbb
mov
data16
or
iret
ja
sarb
or
out
or
sub
popf
test
enter
inc
in
in
mov
pop
jp
pop
or
mov
mov
enter
ficoml
popl
ljmp
js
orl
rcr
sub
mov
out
sbb
cmp
ljmp
sub
je
fwait
aaa
xchg
enter
lret
xchg
repnz
repz
in
sub
mov
mov
jp
into
mov
lea
pop
jo
sbb
xlat
scas
ret
sbb
ss
je
inc
lret
aaa
data16
mov
pusha
cmpsl
daa
andl
inc
cli
mov
jne
and
pop
std
arpl
jmp
pop
dec
outsl
push
push
push
pusha
add
xchg
or
inc
sub
in
jnp
lret
sub
loope
sarb
test
inc
lret
fs
fnstsw
sbb
cmp
out
mov
call
test
cmp
xchg
ret
or
inc
jae
fstl
or
leave
shrb
shrb
mov
sub
sahf
sahf
data16
bound
adc
inc
lods
out
mov
out
cmpsb
mov
xchg
sbbl
push
mov
and
lret
movsb
or
inc
in
xchg
aaa
inc
mov
push
adc
sbb
sbb
push
push
xor
or
test
adc
jmp
negl
mov
addl
mov
mov
aad
xchg
pop
pop
test
aad
loopne
cmp
mov
out
mov
mov
push
xor
push
add
cmc
shll
popa
xchg
lea
movl
js
mov
adc
dec
jmp
pop
jnp
decb
aam
xchg
push
orl
or
mov
xchg
adc
je
imul
into
pop
loop
repz
pop
sub
stc
adc
das
sub
fs
pop
pop
sarl
mov
ret
lds
cli
xor
cli
inc
fs
dec
into
into
in
dec
xchg
fimuls
imul
nop
cmpb
jp
inc
jae
test
loopne
jge
aas
add
imul
ds
ja
stc
inc
mov
xor
pop
mov
int
cs
out
push
fstpt
xchg
mov
mov
dec
orl
fwait
out
or
adc
cmp
mov
sbb
add
mov
adc
pop
pop
mov
mov
dec
and
pop
xchg
addr16
lret
repnz
cmp
imul
cmp
pop
imul
or
nop
mov
out
aaa
push
add
ret
in
jl
stos
inc
lds
and
adc
push
inc
mov
out
pop
divl
adcb
leave
xor
cli
gs
cmpsl
sbb
mov
outsl
jae
jmp
push
mov
xchg
ror
insb
dec
je
shr
mov
pop
jbe
cmp
pop
adcl
sub
xchg
movsl
xchg
shl
push
cld
or
mov
mov
push
into
leave
inc
lods
mov
mov
movsb
pop
cli
aad
lea
fnstsw
mov
mov
rolb
fdivrl
xchg
mov
sahf
pop
shr
lret
mov
cmp
outsb
mov
pop
sub
call
sti
test
adc
push
lods
mov
roll
pop
xchg
pop
mov
cmc
mov
bound
outsl
inc
lcall
dec
xchg
sbb
icebp
adc
or
mov
add
mov
sti
xor
mov
push
aad
inc
fimull
sbb
sub
sahf
scas
mov
dec
or
nop
push
adc
arpl
or
cmpsb
std
sbb
sahf
sarb
imul
sbb
cs
outsl
or
clc
fidivs
mov
sub
mov
add
push
fld
fisubl
and
aaa
and
gs
movsl
mov
jae
js
in
inc
and
lcall
mov
pop
lods
mov
xchg
je
iret
and
sbb
cmpsb
xor
fcompl
fistpl
pop
es
pop
push
and
sub
in
jno
adc
add
leave
lock
dec
push
mov
jle
xor
pop
add
and
jge
mov
cltd
mov
lock
cmpb
out
push
pop
les
out
sbb
sbb
popl
jo
fwait
push
xrstor
and
xor
int3
xor
inc
sub
jg
outsl
ljmp
push
nop
lcall
popf
adc
ljmp
mov
lods
fisttpl
push
sbb
cmpsb
mov
add
or
arpl
pop
js
and
cs
mov
jns
mov
mov
bound
sbb
or
stos
je
sbb
in
or
bound
ljmp
test
ljmp
test
cmp
pop
decl
mov
jbe
pop
mov
mov
vsqrtsd
mov
das
lods
push
cmp
sub
mov
cs
aad
aam
ss
jnp
xchg
and
stc
je
jnp
test
adc
mov
stos
pop
fistl
cmc
sbb
push
cld
xchg
mov
xchg
cld
xchg
sbb
pop
sarb
sub
adc
pop
mov
bound
fimuls
lds
inc
ficomps
mov
lds
and
sbb
mov
jg
sbb
imul
orl
xor
mov
and
add
iret
mov
xchg
pushl
mov
roll
sbb
testl
and
repnz
cmp
sub
push
fsub
jne
ret
add
loope
enter
loope
xchg
imul
mov
inc
popf
mov
movsb
shl
cmp
mov
cmp
fstpl
jle
mov
lods
xor
push
cwtl
fldcw
sahf
or
push
pop
mull
shl
add
jecxz
mov
sub
mov
into
ss
aad
popa
push
cli
dec
dec
js
jbe
pop
imul
inc
idivl
jmp
jno
je
addb
aaa
shrl
sahf
les
les
xor
xchg
mov
add
push
adc
jae
jg
out
xor
lds
sbb
mov
out
cli
jge
insl
roll
iret
jb
fstpt
and
and
mov
dec
jg
mov
cmp
and
mov
xchg
dec
adcb
addr16
push
ret
mov
push
into
inc
pushf
push
push
mov
cwtl
aam
sub
popl
mov
xlat
xchg
xor
xor
pop
int3
cmp
mov
jb
fimuls
sub
xchg
hlt
leave
rclb
mov
repnz
mov
jecxz
jno
mov
dec
xor
push
or
xchg
mov
mov
jge
fs
pushf
pop
dec
xorb
stc
mov
lds
sar
cmc
mov
push
mov
push
std
cli
lea
pop
scas
shll
iret
arpl
xchg
roll
add
xor
cmp
je
mov
jle
clc
mov
push
jbe
inc
aaa
mov
icebp
jmp
pusha
dec
jb
pop
test
in
aaa
jo
sbb
push
xor
push
divl
insl
dec
movsl
popf
inc
cmpsl
mov
mov
out
dec
mov
inc
add
jg
push
pop
mov
push
out
and
hlt
cmp
loop
or
mov
sub
adc
fiaddl
loopne
xor
and
subb
movzbl
in
jl
into
mov
mov
push
outsl
icebp
pop
push
dec
jle
xchg
sbb
pop
pusha
lods
icebp
mov
lret
sbb
notb
push
jmp
or
pop
imul
inc
popa
or
dec
repnz
data16
enter
iret
and
push
jge
mov
lock
push
rcrl
std
outsl
std
das
dec
mov
xchg
test
adc
or
popa
sti
out
mov
divb
sbb
sti
outsb
inc
or
mov
mov
inc
or
lods
ds
std
insb
sbbb
add
cs
shrb
int
fidivs
sbb
out
fcmovne
rcl
mov
sbbb
lods
pop
sti
adc
cltd
scas
pop
xchg
inc
repz
mov
in
sbb
hlt
xor
out
jae
cmp
aaa
enter
sub
inc
and
mov
xor
jp
jp
shll
outsb
inc
flds
les
adc
fs
mov
dec
mov
lret
pop
leave
dec
imul
mov
dec
jnp
fdivs
stc
and
push
inc
lret
add
jmp
push
ja
fstpl
fidivs
cmp
mov
mov
inc
mov
movsl
jne
aad
stos
xor
mov
xor
lods
jbe,pn
test
lahf
dec
lods
nop
dec
adc
xchg
xchg
test
pop
cs
inc
sub
jbe
mov
mov
jno
insb
push
scas
sbb
inc
inc
mov
mov
cmp
fidivs
movsl
jmp
dec
stos
in
stos
scas
mov
lds
adc
jne
sbb
and
fadd
mov
enter
insb
outsl
mov
push
clc
or
and
cltd
daa
shll
lods
and
scas
cmc
decb
adc
adc
shlb
sub
inc
xchg
mov
or
add
out
or
cmpsl
mov
pop
push
cmpb
xor
push
xor
aaa
ss
sbb
ds
loope
scas
nop
int
mov
jns
ss
xchg
jecxz
cmp
pop
aam
out
inc
pop
sbb
and
xchg
orb
mov
sub
rclb
fcomps
or
jbe
adc
sti
nop
dec
and
jg,pn
fcomp
jnp
gs
cmpsl
push
call
cmp
mov
sub
hlt
ds
arpl
or
pop
or
inc
scas
xor
and
fsubl
mov
xchg
data16
mov
es
cmpsl
or
add
ds
mov
pop
lcall
fcmovb
pop
sbb
ljmp
imul
or
outsl
pop
sbb
inc
jle,pt
and
jp
pop
fdiv
rcll
cmpsb
pop
jmp
cmc
mov
es
cmpsl
fucom
lret
inc
mov
push
sub
adc
icebp
bound
movsb
adc
xor
rclb
dec
cltd
aad
adc
sbb
pop
jns
clc
adc
hlt
or
or
xchg
roll
xchg
or
dec
fcoms
daa
cltd
inc
stos
inc
sub
fs
mov
mov
pusha
sbb
gs
sbb
in
add
mov
pop
lods
push
push
outsb
sub
adc
aad
pop
pop
shll
adc
ljmp
or
imul
mov
and
sti
aas
fdivrl
or
dec
mov
je
lds
in
clc
gs
popf
mov
dec
pshufw
cmp
and
js
mov
fildll
lcall
mov
jno
sti
mov
mov
mov
les
in
pop
adc
mov
jo
and
sub
push
mov
xchg
pop
push
push
mov
cmp
mov
mov
push
roll
ja
sti
push
fidivrl
loopne
fists
pop
pop
ret
outsb
jb
pop
stos
pusha
out
repnz
arpl
sbb
dec
js
mov
sub
lcall
pop
xor
int3
push
jb
data16
sub
popa
dec
int3
gs
sbb
int3
and
adc
scas
cmp
cmp
out
sbb
mov
dec
ljmp
inc
xchg
je
ljmp
push
and
adc
jno
sub
mov
ret
ret
inc
int
lahf
mov
sbb
call
rolb
imul
mov
addr16
jbe
stos
loop
fwait
push
das
scas
mov
in
inc
sub
pop
loope
je
jmp
ljmp
adc
mov
in
mov
cltd
mov
fwait
cmp
cmpsl
push
aam
mov
pop
dec
inc
and
adc
mov
pop
ret
mov
fstpt
push
push
dec
movsl
jae
jno
or
stos
mov
pop
ja
mov
xor
and
inc
cmpsb
testb
ja
mov
push
pop
shrl
aaa
or
std
movb
xchg
iret
sbb
inc
inc
add
add
iret
fsubl
iret
mov
outsb
add
push
lret
inc
pop
pop
divb
inc
push
dec
movsl
cmp
push
aad
mov
cmc
out
fs
jg
fsubl
dec
jae
clc
adc
jecxz
jmp
xlat
and
sub
sub
subb
std
xchg
or
mov
adc
jbe
mov
repz
cmc
adc
cmc
mov
fs
cmp
fidivrl
gs
adc
and
xchg
sbb
and
repz
paddusb
jecxz
mov
bound
hlt
sub
xor
sbb
mov
cmp
ljmp
add
shlb
idiv
out
scas
ret
loop
ret
outsb
sub
loope
mov
push
xchg
add
pop
ret
lahf
adc
mov
nop
sbb
mov
nop
xor
fs
shlb
test
imul
or
xchg
push
cmp
xor
hlt
hlt
xchg
mov
call
mov
iret
sbb
cmp
repz
cltd
cmp
leave
nop
leave
jne
mov
lret
out
pop
jbe
sbb
je
lahf
daa
add
fwait
and
inc
xor
pop
inc
pop
and
add
aas
or
sub
dec
dec
jno
jnp
scas
pop
mov
imul
testl
push
loopne
dec
das
mov
cmp
adc
xor
ja
sub
cmp
pop
mov
lods
sub
pop
lea
jo
xchg
lds
je
mov
bound
aam
rcll
xchg
inc
in
mov
pushf
push
push
lea
or
sarl
dec
mov
ja
std
inc
js
test
mov
adc
push
flds
scas
imul
lcall
dec
pop
pop
aas
stos
ret
scas
fiadds
fwait
and
dec
fsubl
inc
nop
lds
cs
icebp
loop
mull
mov
ljmp
sbb
push
imul
pop
xlat
xchg
outsb
cmp
jl
sbb
fcompl
cmp
fisttpl
cmp
arpl
pop
pusha
inc
push
mov
push
aaa
mov
pop
lcall
fwait
pusha
jg
aad
push
das
jae
xchg
cmp
xchg
loope
es
fisttps
mov
and
jae
cli
xchg
shl
enter
leave
xor
cmp
and
xor
test
add
daa
or
push
arpl
push
inc
pop
loope
and
inc
pop
test
jecxz
pcmpeqd
aaa
jne
outsb
push
xchg
ja
stos
or
in
mov
mov
xor
push
sbb
repz
cli
mov
sub
out
shl
ret
push
mov
pop
leave
add
rorb
je
cmpsl
mov
ljmp
jmp
lods
push
stc
sub
fbstp
cmp
hlt
sub
inc
or
add
mov
dec
addr16
aas
cmc
push
filds
dec
and
dec
mov
stc
xlat
and
sub
xor
jl
push
cmp
inc
fucom
adc
outsb
push
sbb
cltd
gs
xchg
xchg
push
mov
mov
stos
ficoml
cmp
rolb
push
out
push
jle
fnstcw
add
add
sbb
push
stos
xchg
pop
jecxz
fcomps
fsubrp
jmp
out
fbld
and
mov
sti
das
testl
std
arpl
push
imul
jg
dec
jae
shlb
jns
dec
sub
push
nop
xor
mov
sbb
ret
shrb
jge
aam
aaa
popf
scas
in
jmp
adc
xor
ljmp
fprem
and
jno
mov
pusha
inc
push
pop
div
cwtl
ss
addl
cltd
in
mov
inc
movsl
repnz
jne
jbe
and
mov
mov
mov
pop
insb
xor
ret
in
les
imul
push
in
xchg
call
test
loop
inc
test
xchg
add
sbb
je
xchg
sti
dec
outsb
jns
adc
add
mov
mov
mov
ret
loop
and
dec
xchg
cwtl
jl
insl
pop
shlb
cld
pop
sbbb
ljmp
mov
xchg
cld
mov
pop
jg
xchg
out
mov
jb
xor
and
lcall
int3
lods
or
adc
cmpsb
dec
cld
int
inc
xchg
into
adc
dec
add
jecxz
jne
les
push
add
addr16
inc
ds
pop
mov
ljmp
test
mov
sti
mov
leave
cli
mov
out
jmp
pop
or
mov
fidivl
clc
fcomip
jg
cmp
adc
jl
xchg
flds
xor
loope
mov
dec
lock
cmp
mov
xchg
dec
push
shll
mov
mov
and
sbb
loopne
dec
popf
daa
repnz
lcall
cmp
cltd
imul
into
loope
or
push
lock
ficoml
xor
or
or
jl,pt
fdivrl
cmp
jge
rorl
mulb
cmpsl
sub
int
out
rcrl
adc
jecxz
ljmp
sbb
and
pop
cmpl
cmc
sub
mov
sbb
mov
dec
push
sub
inc
sbb
rcr
test
out
or
ret
mov
lcall
int3
mov
loopne
js
pop
push
rorb
jle
jbe
mov
fadds
ljmp
xchg
or
push
jge
fisttps
inc
repnz
int
sbb
push
mov
inc
clc
fadds
mov
push
add
lods
std
ja
in
jg
cmp
rorl
pop
scas
je
movd
es
pop
stos
movhps
dec
aas
push
jmp
or
jle
rcl
lock
lcall
cmp
pop
aad
pop
pop
add
ret
inc
sbb
inc
xchg
dec
jge
out
jle
mov
daa
inc
pop
mov
mov
xchg
push
shll
and
dec
jg
leave
movups
fdivl
into
inc
stc
adc
mov
in
daa
and
lcall
mov
push
jp
clc
sbb
xchg
jne
stos
push
xchg
jbe
in
fwait
push
ss
sbb
int
ret
cmp
movsb
fcomip
cmp
test
dec
mov
xchg
lods
pop
cmp
insl
pop
fsub
push
js
rorb
mov
mov
lret
jg
dec
inc
orl
dec
rcll
cwtl
insl
stos
pop
fimull
outsb
outsl
lock
xchg
into
orl
sti
fdivl
sbbl
int3
adc
push
and
jo
adc
push
jne
sbb
push
sbb
mov
fildl
mov
aaa
jle
flds
sbb
fisubl
inc
dec
sbb
fmull
addb
mov
nop
push
repnz
repz
mov
mov
lea
push
inc
mov
push
ljmp
rorb
shl
jmp
push
inc
call
cmp
arpl
pop
sub
mov
shr
sub
pop
xchg
cmp
into
pop
fnsave
insb
pop
sbb
and
aad
das
bound
cmp
mov
aad
es
jae
add
out
dec
ret
iret
adc
adc
adcb
icebp
clc
stc
or
mov
sub
jbe
loope
lahf
fcomps
shll
int
ds
rcll
sbb
sahf
dec
enter
jmp
jge
rcll
out
mov
pop
jnp
aad
mov
dec
test
das
push
cs
in
mov
movsl
subb
add
mov
dec
ljmp
sbb
mov
xchg
cli
xchg
popa
stos
clc
insb
addr16
ficoml
xchg
mov
mov
lock
pushf
or
pop
mov
insl
enter
adc
shlb
jle
mov
inc
xchg
xor
cltd
push
test
jmp
sub
jb
scas
sub
shrb
push
ret
xor
lock
add
je
pop
enter
push
lds
sub
xchg
aam
pop
lods
icebp
cltd
fwait
stos
adc
hlt
jl
and
inc
movsl
mov
outsb
jge
repnz
rcrb
mov
add
jp
mov
shl
es
shll
jnp
lock
sub
push
into
sub
int3
cmp
cli
sub
push
mov
adc
lret
mov
enter
mov
mov
daa
push
fists
push
shlb
pop
movsl
xchg
shr
lods
lret
ja
or
ret
and
insb
push
xchg
scas
and
std
cli
scas
pop
mov
sbb
out
out
mov
push
inc
sbb
mov
pop
adc
mov
fisubs
adc
sti
or
sub
xor
sbb
xchg
jecxz
cmp
das
ret
fs
lcall
cmp
scas
mov
dec
testb
mov
fidivrl
mov
movd
pop
xchg
push
cmp
gs
mov
ljmp
add
ret
sub
push
and
mov
sub
jne
jecxz
xchg
loopne
call
stos
js
and
data16
in
lret
pop
out
push
pop
sbb
push
pusha
cmp
leave
mov
testb
stc
jl
sti
inc
jne
fs
pop
xchg
es
xlat
adc
pusha
xchg
sbb
mul
or
gs
ror
fstps
cld
cmp
jae
push
dec
test
outsb
sbb
pop
out
sub
cld
push
lcall
cmc
adc
push
ret
mov
inc
loopne
mov
dec
aam
clc
cmpb
bound
popf
lds
and
fnstcw
lods
fstl
les
inc
popf
lock
sbb
fistpl
pop
std
xchg
bound
fnsave
sahf
ljmp
test
fldenv
xchg
dec
insl
or
out
pushf
add
and
add
cs
nop
cmp
out
ss
sbb
fidivrs
shrl
pop
lods
mov
shlb
lods
ljmp
in
js
xor
addr16
xor
add
cmp
xor
xchg
adc
mov
aas
movsl
stos
ds
clc
jnp
fs
lret
sub
movsl
fwait
sti
jp
idiv
loop
ret
adc
cmp
mov
dec
mov
aad
ljmp
stc
or
jp
mov
popa
pop
iret
lret
mov
jg
add
lahf
arpl
sub
and
out
xor
mov
pop
scas
clc
iret
add
in
mov
pusha
inc
adc
int
pop
in
adc
dec
cmpsl
inc
mov
push
popf
dec
dec
dec
test
inc
stos
dec
inc
dec
lcall
sub
dec
jne
mov
insl
pop
cwtl
and
jg
sar
cmp
out
cli
mov
ss
inc
roll
push
fisttpl
arpl
icebp
mov
add
out
sbb
or
push
test
bound
push
sub
fbld
repz
jmp
cmpsl
mov
pop
fidivs
pop
sub
int3
int3
or
enter
notb
push
int3
xor
dec
sub
push
mov
mov
cmpsb
shrb
cmp
insb
mov
mov
dec
dec
mov
lods
push
aaa
movsb
cmc
mov
ja
cmp
stos
shl
fsubrl
inc
ljmp
sub
jmp
mov
mov
xor
pop
pop
mov
out
push
fdivs
and
loop
sti
mov
mov
or
xor
bound
out
mov
push
push
cld
pop
lahf
cld
xor
mov
adc
push
adc
fnstsw
dec
fdiv
test
je
pushw
scas
and
and
xchg
jo
dec
xor
pop
inc
fs
ljmp
xchg
aaa
and
int
ljmp
and
call
daa
bound
mov
or
push
out
shlb
test
mov
int
call
fcmovu
out
inc
mov
aaa
scas
cmp
fnstcw
push
xor
rorl
mov
insb
add
shll
cmpsl
clc
pop
test
push
fmull
repnz
ds
rolb
sub
adc
pushf
mov
imul
outsl
and
std
popf
sbb
pop
stos
pop
mov
dec
js
fisubrl
outsb
subb
sub
cmpb
mov
jne
lds
xchg
inc
or
lock
sbb
insl
out
add
xor
dec
sub
insb
mov
add
pusha
roll
nop
iret
lret
lcall
adc
mov
aad
test
mov
inc
push
cmp
in
sbb
ljmp
in
pop
mov
jmp
adc
call
mov
test
jb
cmpsb
out
int
je
push
pop
xchg
aad
stc
es
icebp
inc
and
shlb
hlt
xor
xor
xchg
inc
xor
xor
mov
test
xorb
adc
sarl
ljmp
jno
aad
push
xchg
push
jp
imul
out
mov
add
lahf
pop
fadd
icebp
mov
pop
cmp
int3
adcb
adc
cwtl
lea
mov
movsl
cs
aad
test
outsb
push
arpl
outsb
xor
xchg
push
sbb
or
mov
shlb
cmp
push
orl
leave
mov
mov
pop
or
or
test
gs
add
push
pop
pop
push
ja
int3
filds
inc
xchg
or
xor
jno
sarl
cmpsl
test
sub
push
push
lea
test
in
loop
stc
enter
adc
mov
lret
test
loope
int3
imul
cmpsb
jmp
pop
repz
adc
andl
pop
pop
sub
dec
sub
mov
lret
pop
cwtl
cltd
xor
jl
test
push
jae
dec
jge
outsl
ret
mov
xchg
fwait
sbb
mov
outsb
int3
dec
into
fwait
test
push
shl
jns
aad
sbb
cmpsb
cmp
push
sbb
test
mov
sahf
scas
stc
int3
push
sub
outsb
inc
aas
mov
jp
sahf
ds
adc
out
lcall
jge
dec
mov
aam
jno
stos
inc
pop
sahf
fldl2e
into
fstps
inc
fwait
movb
aas
xor
inc
push
pushf
inc
mov
and
test
pop
nop
popf
addr16
adc
sarl
mov
out
or
xchg
mov
shrb
inc
rcrb
add
adc
mov
dec
rol
por
lods
in
outsl
cmp
xchg
lret
sub
lret
mov
fisubl
outsl
cmp
or
mov
fnsave
push
pop
mov
pop
clc
rclb
test
and
mov
ficoms
mov
sbb
pop
mov
xchg
out
lods
and
stc
test
jno
popf
call
mov
test
adc
repz
lods
sub
es
or
adc
xchg
outsl
and
stc
insb
aaa
repz
fimull
stc
xor
inc
add
repz
jp
push
mov
incl
lock
mov
mov
je
push
jecxz
xor
arpl
fisubl
imul
inc
sbb
shlb
mov
add
pop
and
inc
xor
les
cmc
push
lods
test
in
in
xor
jbe
push
xchg
test
pop
mov
mov
repz
push
mov
xchg
mov
shl
out
and
cmp
or
mov
xchg
in
sub
add
scas
ret
and
pop
loope
jmp
and
and
stc
mov
test
xchg
addr16
cmc
pop
popa
out
mov
mov
addr16
xchg
sub
jo
xchg
je
loopne
fstpl
shlb
js
push
xchg
mov
aad
mov
inc
pop
pop
and
jle
cmp
jecxz
push
mov
jb
push
ja
xor
scas
stos
and
jle
popa
pusha
test
jmp
jb
mov
jp
jl
dec
insl
cmpsb
daa
inc
test
pop
in
or
nop
ret
push
or
arpl
imul
cli
pop
jge
or
ss
cmp
movsl
shlb
lahf
fs
cmpsl
int3
add
sub
cmp
stos
jno
test
scas
aam
dec
jno
jge
sahf
ja
std
cmp
popa
std
mov
ds
sbb
jecxz
adcl
jp
mov
leave
mov
js
orl
ds
sahf
lods
test
test
pop
outsb
and
ja
fdivp
es
pop
pop
lret
icebp
shlb
inc
rolb
mov
jb
loop
xchg
sbb
stc
popf
push
mov
sti
leave
sbb
sbb
xor
jne
push
je
adc
xor
pop
cmpsb
clc
add
cmpsb
mov
mov
lcall
fisttps
jne
nop
add
xor
rclb
mov
loopne
pop
jecxz
repnz
insl
cmpl
xorl
fdivl
jbe
in
xor
faddl
xchg
inc
xor
xchg
jo
and
jmp
cmpsb
testb
jno
test
fwait
sub
int
jns
lcall
dec
gs
sbb
out
dec
jge
dec
aad
aas
vpackuswb
and
and
sub
dec
push
mov
pushf
repz
add
shrl
je
mov
or
and
sbb
hlt
out
cmpsl
shll
outsb
arpl
adc
ficomps
pop
ds
jmp
ja
inc
push
mov
aad
ror
xor
push
ja
cltd
out
fstpt
jle
xchg
arpl
adc
dec
xchg
or
aad
mov
xor
sub
inc
insb
mov
addr16
imul
test
xor
xor
and
adc
test
fsubrp
data16
jae
vcvtsi2sd
adc
mov
outsl
sub
sub
test
and
mov
frstor
pop
faddl
mov
subb
xor
es
popf
jno
and
outsb
dec
ficompl
lods
push
sub
int
xchg
mov
in
adc
sbb
pop
add
ss
enter
and
cltd
or
push
lods
and
sbb
fsubrl
or
jne
pop
mov
add
enter
fs
loope
sti
and
in
mov
adc
inc
flds
mov
mov
loope
mov
inc
aaa
jo
dec
shrb
fsubrs
mov
loop
testb
imull
pop
out
aam
jae
enter
incb
push
out
inc
mov
cmpl
mov
dec
lods
push
into
fimull
cmp
sub
aam
test
push
push
fidivrl
add
adc
sbb
mov
mov
lahf
pop
out
and
roll
push
outsl
insb
dec
adc
pop
out
popf
insl
mov
pop
jl
xlat
xor
fnsave
mov
imul
jmp
xchg
fidivs
cmpsl
inc
inc
loopne
sub
mov
adc
lahf
hlt
mov
mov
fisubs
jecxz
rcrb
ret
fcoml
aas
sub
push
sub
mov
out
or
mov
adc
js
cld
int3
aas
scas
sub
mov
test
test
test
and
popa
sbb
add
movsl
shlb
out
add
xor
or
mov
addr16
jns
in
lock
cli
repz
and
adc
push
or
clc
pop
and
jl
or
xor
mov
push
mov
int
scas
pop
push
adcb
xchg
mov
adc
imul
fistl
sbb
test
js
rorb
sub
push
int
xchg
push
sbb
les
jg
xchg
adc
pushf
repnz
prefetchw
xor
pop
fldl
dec
mov
cmp
adc
mov
inc
xor
jle
cmc
adc
inc
pop
jns
xor
mov
adc
jbe
xchg
push
mov
insb
sub
xlat
adcb
ret
popa
and
mov
out
fstl
add
cmp
idivl
fcompl
and
jnp
mov
sbbb
pop
sub
flds
adc
int3
js
sbb
xchg
scas
and
mov
add
clc
and
dec
cmp
leave
popa
rcr
sub
sbb
das
test
jle
mov
add
lods
out
fiadds
bound
mov
lret
or
mov
sahf
mov
adc
push
pusha
cli
out
push
pop
pop
sub
jno
lea
ret
clc
sarl
loopne
xor
scas
outsl
aam
cs
mov
pop
pop
mov
std
mov
lcall
adc
push
sbb
cmp
mov
inc
xchg
fnstcw
fdivr
insb
cltd
xchg
push
sbb
outsb
ja
shlb
jle
mov
mov
jmp
dec
and
sub
pop
xchg
pop
jle
jle
ret
jo
stos
stos
lret
nop
pushf
aad
xor
cmp
cmp
mov
das
cld
test
push
mov
aaa
xchg
mov
mov
or
xor
nop
push
rep
or
imul
sub
lret
iret
outsl
rcrl
in
mov
sbb
test
jno
je
mov
dec
inc
pop
ret
inc
sbb
aas
dec
lods
and
pop
mov
sub
push
inc
jp
data16
repnz
push
jl
ds
stos
xor
roll
mov
push
mov
push
clc
push
test
inc
inc
mov
pop
sub
mov
mov
in
lret
cld
xchg
jno
mov
fcmovne
out
inc
lea
xchg
loop
pop
in
jns
adc
add
sbb
test
jmp
xor
lock
fistpl
mov
mov
stos
jp
xchg
mov
xchg
dec
movsl
les
mov
xchg
iret
mov
mov
jge
pop
pushf
mov
lret
lds
push
adc
push
in
hlt
mov
ljmp
xchg
imul
arpl
shrd
xchg
xor
imul
and
popa
push
push
flds
mov
mov
aam
xchg
lock
jb
lods
adc
inc
pop
into
out
xlat
popa
jecxz
adc
out
out
or
das
or
dec
out
or
ljmp
add
and
xorb
sbbb
dec
and
inc
push
cld
mov
dec
inc
jg
pushf
leave
arpl
repnz
lahf
jo
fdivrl
leave
addr16
in
mov
mov
loope
divl
sbb
inc
dec
add
sbb
loopne
lahf
mov
test
add
pop
push
cwtl
adc
data16
sbb
pop
imul
jne
test
cmc
pop
stc
push
nop
mov
ljmp
jae
sbb
sbb
dec
cld
mov
xchg
leave
mov
fcomps
shlb
sub
mov
pop
les
lret
inc
addb
hlt
pop
sbb
data16
mov
aaa
inc
es
xchg
shlb
sbb
xchg
xchg
push
icebp
aaa
and
and
movsl
mov
jns
loopne
lock
or
sbb
xchg
sbb
in
xchg
mov
ljmp
std
jno
xchg
inc
in
inc
jge
cltd
xor
imul
cmc
ret
sahf
std
xor
fwait
dec
and
shll
or
sbb
mov
sbb
xchg
test
mov
jnp
xchg
add
mov
fs
outsb
and
or
jae
sub
push
pop
sub
bound
pop
cmpsl
cmp
rolb
cmpsb
outsl
lret
sar
in
xchg
insl
popf
mov
lahf
add
test
mov
dec
ffreep
xor
pop
movsb
fwait
test
lods
xchg
push
loope
repnz
imul
cs
enter
mov
cmpsl
cmp
data16
sub
jmp
xor
xchg
pop
icebp
in
data16
jmp
mov
imul
dec
sbb
ss
mov
cmp
pop
and
out
mov
and
xchg
std
adc
mov
xchg
test
mov
out
cltd
push
xor
mov
jge
mov
int
mov
mov
hlt
movsb
outsb
jne
loop
adc
xchg
nop
adc
lcall
add
push
inc
jbe
pop
xor
outsb
adc
cs
fdiv
gs
mov
cmpb
ljmp
pop
dec
mov
popa
and
pusha
popf
cmp
gs
lret
cmp
adc
pop
inc
loopne
int
xchg
inc
pusha
fstpt
shll
push
sub
les
lods
and
iret
das
jg
into
cltd
cmpb
pop
lcall
mov
mov
pop
in
sbb
xchg
out
jnp
outsl
pop
repz
scas
pop
mov
pop
pop
fnstcw
int3
sub
xchg
or
out
fbstp
call
mov
adc
push
decb
jae
dec
fnstenv
les
cld
repnz
fimuls
sub
test
and
int
nop
jmp
push
and
out
push
push
enter
out
mov
dec
mov
mov
out
std
sub
dec
stc
inc
int
adc
.byte
mov
push
.byte
