sbb
add
jo
jnp
pusha
add
and
mov
or
std
push
inc
add
push
nop
add
add
pusha
add
add
add
jo
add
add
add
add
pop
or
add
or
or
add
add
or
add
or
jo
add
loopne
cltd
add
or
addb
add
jo
mov
pop
nop
add
or
add
mov
add
push
add
or
add
or
cmp
pusha
add
loopne
int
mov
mov
add
add
test
lock
push
adc
inc
add
add
or
add
or
sbb
push
add
or
adc
adc
jo
push
xor
cmp
add
or
add
pusha
add
or
add
or
add
rolb
xchg
or
nop
add
xor
mov
mov
mov
adc
add
nop
add
seto
test
and
outsl
add
add
push
add
cli
or
xor
sub
mov
add
add
add
add
add
or
mov
add
xor
sub
pusha
add
nop
add
add
add
add
adc
add
add
sbb
add
jp
add
sbb
add
jp
add
sbb
loopne
sbb
and
roll
adc
pop
or
mov
nop
add
or
add
add
add
pop
mov
jl
pusha
add
or
nop
add
pop
pusha
add
or
sbb
jo
and
push
add
rolb
add
add
or
loope
loopne
flds
mov
mov
push
inc
add
add
cmpsl
push
loopne
mov
push
rolb
or
add
wrmsr
add
push
lock
or
and
push
or
add
add
nop
add
or
nop
add
add
rolb
add
dec
or
add
add
add
add
add
push
nop
add
add
mov
mov
loopne
adc
add
stc
or
add
push
push
add
adc
in
add
mov
mov
add
mov
mov
add
loopne
xchg
pop
add
add
or
add
add
add
mov
movl
push
popl
mov
push
popl
push
popl
mov
push
popl
call
movw
mov
cmp
jne
movw
ret
push
popl
movl
push
movb
push
movl
and
mov
push
popl
pusha
addl
call
subl
mov
push
popl
addl
push
addw
push
popl
xorl
addw
addb
addl
xorb
push
popl
push
orl
xorl
call
addl
orw
cmpl
jne
addb
call
and
ret
push
popl
addw
jmp
sub
push
popl
xor
add
add
mov
add
shl
sub
mov
push
popl
push
popl
shl
sub
orb
mov
push
popl
movb
cmp
jne
push
popl
mov
subb
sub
andw
call
subl
popa
sub
subb
pusha
push
popl
call
xorl
addb
mov
push
popl
push
addw
sub
xorl
addw
xorw
addl
and
andw
push
or
call
push
popl
orl
push
xor
xorl
xorl
push
popl
andb
addl
push
popl
addw
pop
mov
cmp
jne
push
popl
ret
sub
push
popl
popa
and
call
movb
push
subl
xorl
push
popl
push
popl
addl
push
popl
sbbl
push
push
popl
call
andl
push
push
inc
dec
mov
xor
xchg
andl
mov
sub
push
popl
shl
push
popl
mov
push
push
popl
xor
addl
push
orl
call
addl
push
popl
push
xorw
mov
xorl
push
mov
push
popl
jmp
or
sbbb
pop
addw
add
mov
push
popl
andw
push
xorl
subb
push
and
push
mov
mov
sbbl
mov
orb
push
popl
rep
push
popl
pop
xor
push
popl
pop
push
sub
rol
mov
xor
xchg
push
push
mov
mov
xor
pop
push
popl
push
popl
xor
xorl
jmp
push
popl
sub
xor
orw
mov
push
popl
sub
push
popl
push
popl
sub
xorw
and
mov
push
popl
sub
sbbl
or
jne
push
popl
add
push
popl
jmp
sbbw
mov
push
popl
shr
andb
shl
orb
mov
orw
push
popl
add
push
popl
jmp
sub
sub
push
popl
mov
push
popl
add
add
addb
cmp
jne
xorb
mov
xorb
add
push
popl
mov
subw
add
orl
cmp
jne
addw
andw
ret
add
push
orl
xor
push
popl
add
pushl
xorb
pop
sbbb
lea
orw
or
push
popl
mov
orw
mov
subb
push
popl
lods
xorl
subw
mov
sbbw
push
popl
pop
movl
sub
ret
push
popl
push
andl
andw
mov
andw
add
push
popl
push
push
popl
sbbl
push
subb
push
subb
sbbw
push
subw
or
push
push
popl
push
popl
mov
andl
mov
xorb
xorw
add
push
popl
orw
pushl
push
popl
mov
addw
add
movl
movw
add
subb
subw
mov
xorb
add
subl
xor
push
popl
lea
sbbb
push
popl
mov
orl
xorl
add
push
popl
mov
addb
xor
or
subb
rol
push
popl
xor
push
popl
mov
inc
push
popl
push
popl
cmpb
jne
push
popl
cmp
je
xor
inc
subb
cmp
jb
orw
push
popl
mov
push
popl
add
orw
sbbb
movzwl
push
popl
mov
or
push
popl
add
sub
push
popl
mov
xorw
push
popl
add
push
popl
pop
push
popl
cmp
jbe
addl
push
popl
cmp
jae
sbbb
push
popl
pushl
andb
push
popl
pushl
or
sbbw
push
push
popl
xorl
sub
addl
addl
push
popl
pushl
orw
push
popl
call
orb
call
push
popl
push
popl
pop
subw
pop
addw
pop
andb
subb
pop
and
push
popl
pop
mov
xor
leave
and
push
popl
ret
addl
xorl
call
cmc
sub
push
into
ljmp
lods
ss
adc
inc
imul
int
bound
fsubs
inc
push
jmp
sbb
cmp
cmp
cmp
clc
sub
loop
xlat
mov
nop
mov
shlb
cmc
xchg
xchg
testb
movsb
divl
scas
popl
adc
test
xchg
sarb
xor
cmpsb
sbb
and
sbb
in
push
push
sub
dec
test
mov
pop
inc
stos
inc
add
cmc
pop
cmpsl
mov
xchg
fwait
int
push
sub
pop
faddl
scas
sbb
addr16
adc
sub
push
pushf
dec
mov
mov
jmp
lret
lea
jae
mov
dec
mov
fcmovnb
fcoml
cmp
xchg
mov
rcl
enter
ret
adc
daa
loopne
test
mov
lods
xlat
sbb
pop
and
data16
cli
imul
inc
imul
xor
push
xor
push
lods
out
loop
mov
mov
aaa
push
into
shr
mov
lea
push
sub
pop
into
hlt
mov
mov
sub
scas
add
lahf
mov
sbb
adc
iret
push
push
mov
idivb
mov
sahf
bound
xchg
out
aaa
sbb
lret
je
mov
rcr
mov
das
mov
lea
xchg
out
pusha
lret
lret
shll
mov
aas
stc
sahf
mov
lods
pop
jg
mov
es
xchg
xor
sbb
sbb
sub
pop
lahf
lock
loopne
test
vpmacsww
inc
xchg
cmpsb
loop
xchg
incl
lahf
jecxz
push
enter
mov
adc
test
sbbb
cmc
xor
test
or
mov
in
cli
imul
movsb
dec
xor
sub
ret
in
adc
xchg
cmp
mov
test
mov
lahf
int
push
mov
call
ja
xor
clc
mov
xchg
hlt
rolb
jecxz
shll
xchg
out
dec
jle
daa
rorl
add
cld
sub
sbb
mov
nop
mov
cmp
add
popf
int3
sbb
dec
ret
dec
lods
loope
jecxz
xchg
inc
mov
push
sahf
stos
cmp
cmpsl
xor
push
pop
sub
fistpll
adc
inc
xchg
cmpsb
loop
dec
fs
mov
push
adc
mov
scas
sbb
and
jnp
in
enter
imul
shlb
jp
stos
stos
jae
sti
cltd
adc
out
adc
xor
sbb
loop
frstor
sbb
sub
mov
mov
lds
or
mov
sbb
idivl
arpl
pop
mov
dec
lods
in
loop
insb
or
aam
imul
mov
pop
mov
xor
lcall
lcall
or
push
or
sar
dec
add
mov
hlt
jne
jge
mov
stos
inc
pop
sbb
cmpsl
mov
lea
mul
inc
xchg
shll
cli
loopne
mul
sub
cmpb
mov
xchg
add
jnp
cmpl
sbb
iret
fnstsw
jb
pop
inc
push
jno
jne
add
dec
mov
les
xor
mov
addb
aad
xor
in
cmp
jl
mov
or
inc
aas
jb
out
sub
js
mov
in
add
push
jne
daa
cmpsb
imulb
dec
push
in
cmc
std
push
adc
push
aaa
inc
int
adc
rcl
mov
ja
mov
movsb
mov
in
or
test
js
sub
jecxz
cmp
pop
shll
stc
sbb
pushl
rcll
into
in
bound
mov
xor
sbb
lods
stos
je
divl
mov
into
daa
cmpsb
mul
cmp
inc
idivb
and
cmc
add
xchg
cmp
imulb
xchg
lods
sti
aad
cmc
jno
mov
inc
scas
cld
test
pop
sbb
push
cltd
pop
mov
xor
dec
mov
out
adc
dec
mov
out
das
mov
push
insb
rorb
and
std
mov
das
sub
fstpt
std
inc
mov
test
jns
in
enter
movsl
xchg
or
loope
aad
dec
or
cmp
pop
sub
movsb
jnp
push
mov
jno
cmp
or
mov
xor
adc
test
adcb
pop
not
test
or
mov
shrb
and
inc
shlb
popa
push
pop
jne
mov
and
adc
and
inc
add
pushf
scas
add
sub
cmp
test
push
adc
testl
rorb
out
jns
mov
jecxz
stos
negb
push
gs
test
and
test
sub
inc
xchg
shrl
outsb
or
idivb
dec
int
push
test
cld
jo
sbb
xchg
movsl
loop
ss
mov
jle
mulb
shll
push
add
or
mov
repnz
sbb
movl
repnz
and
xlat
scas
add
or
stos
gs
inc
lods
jo
fwait
and
adc
sbb
movsb
out
dec
test
mov
icebp
ret
das
mov
adc
cli
dec
jb
cld
mov
inc
mov
roll
adc
pop
and
dec
jae
mov
rolb
xchg
sub
mov
cli
sbb
inc
and
hlt
fistps
call
test
mov
xor
imul
imul
loop
ret
loop
addr16
mov
sbb
xor
cltd
sub
cmp
mov
out
adc
fmul
fnstsw
leave
xchg
test
pop
cld
dec
push
add
jecxz
push
or
out
jp
mov
ss
loop
sbb
mov
gs
cld
mov
lock
ret
jnp
mov
mov
orl
sub
push
mov
mov
mov
idiv
jne
mov
outsb
lock
pushf
mov
jecxz
jl
cmc
nop
add
into
shrb
std
fcomps
jae
push
push
sahf
lods
add
sarb
jecxz
pop
mov
test
pop
or
inc
js
mov
jae
adc
fdivr
nop
lods
jp
mov
inc
pop
mov
jne
cmc
xor
jnp
test
shlb
cmp
scas
mov
push
lahf
xor
shll
lods
shl
jp
stos
and
or
lods
pop
inc
xchg
cmpl
and
push
out
jmp
inc
and
sbb
dec
insb
add
mov
aaa
add
rorb
jecxz
pop
je
mov
mov
out
push
leave
mov
sarb
push
flds
cmp
jge
mov
pop
xchg
pop
aaa
pop
inc
stos
dec
or
adc
mov
mov
test
neg
in
xor
mov
cli
push
mov
ljmp
stc
int
cmp
inc
cmp
shlb
cmpsb
rcrb
and
aaa
pcmpgtd
pop
sbb
scas
inc
xorb
jae
mov
adc
into
icebp
or
push
sub
mov
pop
pop
sbb
push
mov
xchg
in
adcb
mov
shlb
mov
sub
xchg
test
fistpl
iret
fdivs
std
pop
inc
push
or
mov
mov
dec
xor
push
test
or
test
inc
mov
mov
popa
fs
xchg
cmp
rcl
sub
sbb
mov
cld
sahf
mov
lods
nop
stos
imul
js
jl
xchg
cmpl
fildll
cmpsl
sbb
daa
mov
add
push
dec
loop
xor
pop
xchg
test
repnz
shrb
divl
out
jecxz
mov
mov
into
lds
push
loopne
sbb
daa
pop
in
add
cmc
pop
xor
jecxz
xlat
mov
adc
test
and
jecxz
dec
test
test
mov
mov
cwtl
lahf
ret
hlt
outsl
cmp
jecxz
fsubrs
mov
and
cmp
scas
mov
sub
cmpsl
lea
or
cmp
xor
mov
gs
mov
dec
mov
xchg
inc
inc
mov
shrb
fbstp
lahf
adc
js
xchg
adc
cli
mov
mov
movsl
adc
shlb
icebp
loope
xor
sbb
pop
fadds
insb
jno
insb
or
push
or
jno,pn
push
lahf
shll
cmpsl
mov
jbe
push
xchg
pushf
scas
xor
xchg
es
int
mov
and
gs
rorl
push
addl
mov
mov
xchg
scas
std
push
mov
xchg
adc
call
jno
jle
test
sub
push
jne
mov
insb
xchg
dec
mov
sbb
test
jns
xchg
leave
xchg
sbb
and
or
aad
dec
or
mov
test
jecxz
rcrl
xor
jno
shrb
cld
mov
xchg
test
leave
push
sub
sub
lods
pushl
adc
rcrl
sbbb
inc
jo
rcrb
add
or
xchg
lods
sub
mov
sub
loope
fmull
inc
ljmp
add
outsb
sbb
pop
mov
les
punpckhwd
scas
in
das
out
cs
adc
jl
add
sbb
mov
xchg
add
pop
xlat
jle
bound
add
int
insb
pop
cmp
out
sbb
add
pop
push
aaa
lods
sarb
fstps
push
mov
addr16
push
or
mov
cli
and
les
mov
roll
mov
dec
sub
dec
xor
push
mov
mov
xor
scas
xchg
dec
aas
cmp
cmpsb
mov
xor
movsb
sub
xor
fidivl
and
jae
xlat
loop
dec
out
sub
sbb
fisubs
and
je
cmp
es
scas
into
loope
int3
repnz
scas
clc
xor
or
scas
dec
movsb
push
loopne
pop
icebp
in
mov
add
rcll
daa
and
fldcw
repz
adc
lret
jmp
xchg
es
xchg
std
xchg
iret
push
mov
rorl
add
sar
js
stos
xor
loop
cmpsb
ret
aaa
sahf
movsl
or
push
push
out
jns
repz
sub
pop
sbb
pop
cmpsb
xchg
movsl
adc
mov
xor
mov
or
mov
insb
repnz
fs
dec
loope
xor
push
push
jae
mov
mov
jo
xor
mov
clc
test
filds
mov
ror
shrb
cmp
movsb
divl
pushl
jecxz
jno
dec
cmpsl
out
stos
lds
in
push
into
sbb
lret
dec
xchg
push
addr16
xchg
es
push
push
push
jns
and
stos
inc
sub
pop
pop
scas
and
and
popf
pop
xor
dec
xor
rcrl
setg
mov
sub
jmp
fiadds
xor
push
push
adc
lahf
lds
cmpsl
push
push
inc
add
loop
mov
std
scas
cmc
xor
sbb
pop
jae
xchg
jb
dec
xor
mov
std
dec
pushf
insb
cmp
shrb
mov
add
iret
mov
testb
add
in
inc
loopne
mov
pop
push
fs
xchg
test
les
mov
shrb
jnp
lret
testl
test
or
mov
sti
gs
loop
xor
ret
roll
jecxz
cmpsb
ljmp
mov
sbb
lahf
mov
cwtl
sbb
scas
push
je
sbb
sbb
pop
cmpsb
arpl
push
and
or
mov
call
mov
sarb
mov
mov
add
pop
sub
xor
sub
aas
jnp
push
mov
jo
aas
daa
jmp
adc
mov
jg
jae
mov
xor
call
add
clc
out
push
das
cmp
stc
test
daa
cmpsb
divb
xchg
cmc
cld
dec
mov
test
pop
push
mov
sub
and
push
mov
cmp
jecxz
lcall
jno
inc
insb
movsl
sahf
lods
jmp
inc
push
test
popf
inc
mov
fmuls
loop
add
add
idivb
movl
movsb
dec
or
sbb
rcl
insb
dec
xchg
pop
xchg
xlat
pop
sub
push
dec
out
mov
add
lret
mov
xor
dec
mov
and
imul
sahf
fcomps
rol
mov
push
sahf
and
xchg
xor
enter
mov
mov
or
inc
dec
lret
ss
sub
dec
push
aad
pop
dec
mov
adc
sub
std
es
push
xchg
out
arpl
mov
pop
push
iret
dec
mov
jno
sbb
mov
or
cmp
es
push
pushf
cwtl
jnp
shlb
fdivs
pop
jb
pop
xor
call
loop
push
and
and
pop
mov
inc
mov
dec
xchg
xor
and
daa
add
popa
dec
lods
push
jecxz
pop
sub
push
clc
xor
pop
out
ficoml
mov
xor
ds
jmp
lods
divl
test
inc
lods
aam
dec
aaa
insl
cmp
adc
xor
sbb
mov
ljmp
mov
xchg
sahf
mov
mov
jb
sbb
out
cmc
rcrl
mov
jecxz
xchg
push
shrl
dec
push
sbb
jmp
fnstcw
adc
cmp
mov
mov
jg
decl
push
sub
inc
test
test
pop
push
sbb
xchg
mov
lock
push
into
in
jae
mov
push
imull
push
pop
add
push
pop
flds
pushf
out
out
xor
mov
adc
xchg
call
adc
mov
mov
rcl
jge
scas
mov
dec
dec
or
xchg
cmp
jp
and
and
pop
std
stc
shlb
pop
sub
in
pop
fisubl
sbb
jb,pn
ss
sub
pop
mov
xor
mov
mov
pop
lods
bound
and
push
xchg
dec
shll
inc
insb
fstps
xchg
inc
mov
xor
cmp
and
dec
xor
cmp
int3
inc
pop
lahf
mov
daa
mov
and
pop
insl
push
addr16
add
cmc
pop
lret
mov
mov
daa
jae
popa
rep
mov
sbb
into
frstor
out
fisttpll
push
mov
mov
xor
push
mov
inc
sbb
cmc
pop
stos
xchg
mov
xor
mov
mov
mov
mov
pushf
mov
jecxz
mov
scas
rcll
jmp
jne
and
sub
test
outsb
sbb
mov
insb
push
mov
repz
inc
push
lcall
hlt
xchg
idivl
call
mov
ror
fisubrl
add
jns
pop
inc
repz
aaa
insl
ss
enter
sti
push
incl
mov
fnsave
mov
int
ret
adc
inc
les
cmp
jnp
xor
mov
int
int
push
fcmovne
sbb
add
mov
scas
int
and
cwtl
or
jecxz
pop
inc
xor
es
repz
ljmp
jmp
loop
xorl
call
jle
sub
roll
inc
int
push
mov
movsb
daa
es
les
loop
mov
stc
imul
xor
sub
dec
lret
lods
fadds
dec
and
pop
adc
jmp
jge
ret
pushl
imul
dec
mov
fisttpl
pop
mov
shl
in
xchg
movsl
mov
xchg
mov
rcl
sub
xchg
dec
inc
lods
aad
outsl
cwtl
sub
mov
mov
push
xchg
mov
jnp
scas
xor
adc
movsl
sbb
xchg
xchg
xor
or
jb
lret
mov
mov
divl
cmc
mov
in
and
push
sets
push
mov
mov
sbb
mov
in
stc
mulb
jno
sbb
xlat
cmp
mov
popa
lea
xor
mov
stos
stos
sahf
lods
and
jae
sub
pop
cmp
loop
test
fs
mov
bound
and
jne
xchg
adc
dec
push
movsl
ja
mov
sub
cmpsl
dec
adc
sub
fiadds
stos
xor
gs
mov
pop
or
out
int
inc
inc
cwtl
test
ljmp
pop
xchg
jnp
push
mov
orl
repnz
add
add
jne
lods
mov
adc
fs
push
xchg
pop
and
cmp
xchg
sbb
imul
adc
jg
fidivl
mov
mov
cmpsl
mov
xchg
pop
fadds
mov
sub
popf
arpl
out
cs
jmp
and
stos
fisubl
xor
sbb
movsb
pop
mov
xchg
xchg
and
stc
shl
push
push
test
test
lret
movsb
imull
aas
and
test
loop
push
adc
ja
adc
push
repz
movsl
fldcw
cmpsl
in
mov
jbe
jmp
pop
roll
loopne
mov
jbe
test
sti
push
add
mov
pop
or
rcl
jg
xchg
dec
inc
lods
iret
cmp
mov
jae
mov
xchg
lret
add
test
inc
addr16
sub
mov
int
mov
testl
lods
shll
ja
and
dec
aaa
sub
mov
shlb
pop
lods
mov
arpl
push
add
push
dec
rclb
jecxz
mov
xchg
fstpl
ja
mov
fs
mov
dec
mov
xchg
gs
cvtps2pi
jb
jmp
pop
daa
jb
lea
test
add
mov
shl
popa
arpl
std
mov
push
imul
scas
dec
mov
pop
negl
push
and
mov
mov
dec
aaa
mov
pop
sbbb
cs
je
xor
xchg
push
in
xor
sbb
push
and
xchg
pop
jns
jae
cld
in
inc
push
mov
mov
push
xor
pop
lahf
fsubrp
outsl
pop
in
xor
lods
sbb
int3
mov
mov
loop
stos
xor
jge
cmpsb
outsb
cltd
push
ret
aam
loope
imul
pusha
arpl
add
mov
je
add
iret
imulb
add
adc
mov
xlat
imulb
jecxz
decb
mov
dec
gs
mov
sbb
out
fmulp
push
push
out
in
mov
xchg
xchg
arpl
xor
xchg
push
js
test
fdivrs
push
jne
daa
cmpsb
mul
push
push
xchg
inc
pop
arpl
hlt
cmc
add
scas
mov
jl
sbb
and
sti
shr
push
movlps
popa
mov
pusha
mov
pushf
and
push
sbb
pop
cmp
ss
push
adc
sbb
ds
cld
jge
and
xchg
iret
movsb
push
lds
sbb
inc
scas
repnz
mov
sbb
jecxz
repz
cmp
mov
mov
xchg
add
jecxz
mov
xor
shrl
inc
jo
inc
test
mov
test
mov
and
stos
sbb
and
ffreep
or
mov
inc
lret
int3
xorb
movsb
and
inc
lods
aad
das
xchg
adc
cltd
pop
sbb
imulb
mov
xor
jle
xor
dec
mov
enter
mov
rcl
dec
mov
mov
inc
push
or
sbb
cs
sbb
gs
setg
mov
cmp
xor
in
mov
xchg
adc
rorb
pusha
pop
jno
sarb
mov
cmp
cmp
cmp
leave
and
dec
outsl
sub
mov
inc
mov
daa
mov
cltd
mov
pop
ds
cmc
dec
insl
jp
mov
inc
mov
les
inc
and
sbb
sbb
pop
sub
clc
xor
xor
sbbb
daa
mov
xlat
movsb
stos
notb
shll
push
sti
lcall
loopne
sub
jg
ret
movsl
adc
inc
lds
mov
mov
adc
xchg
mov
xor
insb
mov
mov
cld
clc
push
xchg
dec
dec
sbb
jecxz
sti
fs
fists
ja
sub
cmpsb
call
and
jecxz
mov
fbld
dec
lea
cmpsl
cmp
scas
clc
xor
sub
add
mov
mov
and
loop
notl
jne
daa
cmpsb
not
lcall
in
cmc
call
out
sub
push
xchg
add
jb
xchg
in
xchg
xchg
dec
gs
jae
xchg
minps
mov
emms
ret
lcall
sub
add
loop
ret
mov
mov
daa
cmpsb
not
insb
push
ja
jg
adc
fdiv
call
xchg
push
cld
rcl
insb
mov
fisttpll
sub
lcall
xor
and
and
inc
or
fnsave
fldl
inc
inc
jno
adc
push
fs
and
pop
test
test
mov
lret
shll
shrb
sti
lret
data16
cld
js
test
add
jbe
mov
mov
rcrb
push
lahf
aam
mov
sbb
rcrb
push
cs
sub
push
int
push
push
add
ret
fsubl
cmc
xor
aad
movsb
or
mov
je
sbb
dec
insl
add
sub
push
or
jle
mov
jge
repz
xchg
inc
cmp
ror
jp
scas
and
lcall
cmp
push
movsb
divl
sub
data16
cli
daa
pusha
xor
sbb
mov
andb
leave
jnp
xor
dec
sub
enter
and
pop
cmp
popf
pop
hlt
jne
fs
jecxz
dec
stos
push
pop
sbb
das
inc
sar
lods
xor
or
shlb
roll
out
sub
mov
aad
divl
mov
sti
in
aam
xchg
mov
xchg
ficoml
push
sbb
mov
sub
inc
mov
cmp
in
add
add
in
inc
ja
imul
pop
jg
push
ss
sub
mov
lods
sub
fildll
dec
jbe
fnstenv
decb
push
das
adcb
mov
sbb
jge
loop,pt
xor
mov
mov
xchg
cmp
rcl
pop
pop
sub
into
cs
incb
dec
loope
mov
daa
mov
or
xchg
mov
xchg
cmp
in
lret
xchg
imul
push
pop
das
mov
cld
orb
cmp
dec
sbb
dec
xchg
rclb
hlt
jne
mov
mov
push
rcrb
stos
imul
ret
sub
cmpsl
mov
cmpsb
mov
push
sbb
push
fadds
inc
mov
inc
enter
inc
gs
push
mov
into
aaa
into
xchg
xchg
sbb
jne
sub
mov
aam
divl
dec
push
loope
je
lds
sub
stc
js
in
pop
movsl
mov
mov
add
fucom
enter
inc
sub
mov
jb
data16
sti
xchg
loop
das
and
cld
pop
push
test
or
test
dec
or
pop
xchg
mov
cmp
ljmp
xor
xchg
and
fidivl
inc
ficoms
dec
xchg
xchg
std
pop
ficoml
notl
and
dec
jecxz
jle
adc
ja
xchg
sub
mov
or
xchg
mov
mov
cld
ret
jno
lret
cmp
outsb
stos
xor
mov
inc
push
into
xor
fidivrl
jbe
ljmp
sub
and
sbb
pop
push
mov
into
gs
ret
pop
int
inc
inc
enter
cmp
ss
lcall
int
jle
sbb
jae
mov
or
xchg
cmp
lret
ljmp
xchg
loop
and
leave
sub
jle
xor
adc
sub
cmp
push
add
adc
push
lret
cltd
test
mov
adc
and
mov
cmp
enter
pushf
mov
jecxz
push
pop
mov
call
mov
pop
clc
inc
pop
jnp
mov
jmp
subb
clc
mov
xor
decb
sub
and
in
ljmp
and
add
jg
xor
add
stos
popa
es
or
ror
or
sub
lret
and
out
cmp
pusha
bnd
push
ret
ficoms
push
push
ds
out
sub
cltd
test
mov
push
adc
fldl
ret
mov
fwait
mov
nop
pusha
sarb
sti
dec
push
mov
or
adc
lahf
cmpsb
fs
inc
sbb
das
cmpsl
icebp
mov
sub
mov
inc
iret
mov
rcl
fistps
sub
xlat
das
cld
sub
test
mov
mov
dec
nop
test
movsb
divl
shlb
adc
test
sbbb
neg
shrb
cmp
pop
es
sbb
or
inc
jo
in
jecxz
aaa
outsl
cmp
ret
sbb
negl
shll
movsb
shlb
hlt
out
cltd
sbb
xchg
add
inc
and
cmp
push
scas
push
mov
movsl
mov
into
ds
jle
loope
jo
ljmp
pop
cli
jno
adc
mov
int
test
mov
int3
insb
scas
dec
test
outsb
pop
out
pop
mov
test
jbe
xlat
xchg
adc
fwait
mov
dec
adc
jbe
imul
gs
adc
icebp
cmpsb
push
pop
es
cmpsl
cmp
ss
fstpl
mov
mov
mov
cwtl
fistl
add
shl
movsb
add
jecxz
push
enter
dec
xor
rolb
in
sbb
mov
movb
mov
arpl
jmp
or
shl
mov
std
mov
daa
iret
in
sub
and
scas
fs
sub
lock
mov
rcrl
xor
popa
xchg
add
imul
sbb
cmpsl
lock
sbb
or
push
pushf
dec
lea
push
jecxz
lcall
and
mov
clc
push
xor
sarb
sub
aas
or
ret
int
cmp
mov
xchg
cmpsb
neg
jnp
jne
cltd
lret
adc
int3
cmc
std
push
mov
nop
push
mov
xor
into
lahf
into
adc
sahf
scas
adc
imul
cmp
mov
and
lret
cmp
sbb
dec
or
outsl
rorb
adcb
xor
mov
and
cmp
xor
dec
xor
mov
add
lret
adc
hlt
sbb
jp
sbb
cli
push
and
mov
mov
inc
clc
test
mov
mov
rcl
imull
out
and
dec
int3
stos
push
pop
dec
ljmp
test
fdivrs
loope
pop
sbb
into
fistpl
pop
sbb
pop
test
push
cwtl
mov
push
arpl
sbb
je
xor
sbb
mov
add
sub
push
scas
lds
scas
imul
rcl
sbb
pop
mov
inc
mov
divl
stc
and
nop
int
xor
cmp
push
into
fsubl
add
xor
pop
fadds
ds
inc
test
ds
ds
push
testl
mov
fidivrs
test
daa
cmp
aaa
subl
jns
jnp
inc
sbb
mov
movl
dec
cmp
dec
mov
xchg
cmp
dec
nop
cmpsl
fdivrl
sub
pushl
dec
pushf
mov
jecxz
fs
add
push
lahf
lods
rol
inc
cwtl
lods
loop
gs
push
sub
mov
mov
outsb
push
into
das
jae
add
ss
sbb
incb
insl
adc
dec
stc
pop
inc
adc
lahf
ret
int3
aad
gs
jmp
cmp
ficomps
mov
out
outsb
mov
pop
das
cmpsb
pushf
dec
jp
das
je
and
aas
loopne
das
cld
int
test
daa
cmpsb
neg
xor
or
cmc
cld
dec
mov
xor
push
mov
lret
notl
mov
repz
aaa
into
lds
cmpsb
mov
test
movsb
divl
mov
dec
pushf
repnz
mov
sbb
mov
sti
js
dec
inc
cmpsb
sbb
pop
test
jns
sub
rcr
aam
dec
insb
mov
or
push
pop
push
out
nop
xor
mov
stos
push
lods
add
add
std
add
add
pop
aaa
lock
and
and
push
push
daa
int
inc
xor
add
adc
or
scas
repnz
fs
sub
fcompl
mov
insl
dec
or
cld
xchg
rcll
jne
and
add
pop
stos
jno
and
data16
decl
mulb
cmpsb
test
push
lcall
cmc
add
aaa
jp
sbb
clc
mov
xor
xor
repz
rolb
leave
xchg
out
xor
push
enter
and
push
inc
sub
sbb
xchg
negl
sub
cs
ljmp
mov
xchg
cmp
rcl
in
cltd
movsl
out
into
sub
incl
jns
adc
and
xlat
test
jg
lea
dec
or
es
sahf
jmp
jb
fisubrl
pop
jg
rorl
adc
aaa
lahf
ret
jmp
mov
fldenv
stos
scas
enter
pusha
mov
xor
cmp
sbb
sub
insb
orl
mov
add
int3
stos
xor
out
cmp
lret
enter
stos
mov
sarb
mov
ret
ljmp
fmuls
cmp
mov
mov
negb
movsb
divl
sub
and
test
insb
aaa
into
lds
jle
test
enter
sub
mov
pop
cmpb
pop
jbe
mov
push
fwait
mov
outsl
xorb
sbb
cld
jo
cmp
mov
pop
test
jns
xchg
stc
adc
sbb
dec
pushf
sbb
jecxz
es
sub
and
xor
iret
inc
frstor
pop
pop
dec
mov
jnp
repz
adcl
xchg
jno
test
enter
pop
insb
and
cmpsb
xor
orb
xchg
insl
aas
push
sbbl
pop
mov
out
mov
shl
dec
outsb
dec
fdivl
jae
mov
mov
pop
cmp
or
and
add
daa
hlt
rcrb
cmp
enter
cmp
sbb
pop
imul
inc
xor
faddl
fwait
mov
sub
lds
insl
pushf
dec
mov
xchg
outsb
push
fimuls
aaa
inc
lret
bound
out
rcl
test
sub
stc
push
jmp
push
sub
push
dec
fsubrs
and
jecxz
inc
push
mov
lock
repnz
add
les
shll
movsl
xor
das
out
inc
cld
jo
shlb
and
out
loop
cmp
cmpb
xlat
daa
or
inc
pop
fwait
cli
jp
stos
stos
lods
cli
pusha
push
loope
cmc
jne
inc
rcll
call
jbe
fsub
xor
mov
push
or
push
xchg
adc
sbb
jbe
push
cmpsl
dec
lods
push
jecxz
mov
sti
cmp
insb
inc
jecxz
and
scas
xchg
xchg
push
fdivl
rcrb
and
stc
mov
lea
dec
mov
lods
out
dec
mov
mov
cmp
jecxz
nop
popa
and
sbb
lret
sub
lahf
scas
jg
imul
add
shll
ljmp
jno
xchg
imul
inc
mov
ss
sub
js
int
cmp
jae
daa
iret
mov
dec
into
shrb
stc
dec
sub
stos
mov
shlb
rcl
insb
les
in
popa
scas
std
jb
dec
insb
pop
sbb
mov
jge
jbe
mov
icebp
and
sub
jbe
sahf
mov
or
jae
xchg
lret
jle
movsb
testl
lods
nop
loopne
test
mov
lahf
scas
sti
pushf
inc
jp
stos
and
inc
hlt
dec
negl
rcrb
or
int3
mov
in
rcl
add
jb
xor
xlat
lods
imul
addr16
push
into
lds
adc
testb
leave
jg
xor
fmull
xchg
sub
inc
jecxz
pop
nop
dec
add
or
pop
hlt
jne
gs
stos
cmp
sbb
mov
loop
xor
js
shlb
cs
mov
push
adc
movsl
lods
aam
pusha
jecxz
adc
cmp
pop
cmpsb
mov
test
lahf
dec
add
jb
out
aad
test
popa
mov
imul
or
xor
fmulp
rcr
mov
movsl
xchg
mov
lods
in
jecxz
rcrb
add
ja
ficoms
sub
pop
adc
shll
icebp
mov
mov
rolb
flds
fcomp
lahf
dec
sub
push
pusha
mov
lcall
sbb
dec
jo
hlt
and
sbb
inc
cmpsl
iret
add
mov
mov
setg
xor
push
pushf
jp
sbb
imul
inc
push
mov
mov
hlt
lods
jp
scas
and
sbb
push
shl
mov
mov
daa
cmpsb
imulb
stos
jg
in
cmc
call
pop
dec
loop
loop
sub
pop
add
dec
je
push
pop
es
sub
scas
cli
lcall
adcb
sahf
xorl
sbb
pop
roll
setp
mov
in
sub
push
adc
mov
jmp
push
mov
sub
adcl
rcrb
mov
out
push
daa
cmpsb
sub
mov
dec
popa
push
das
mov
lods
mov
mov
repnz
lock
shll
test
shrl
mov
popf
roll
xchg
sub
push
test
pushf
mov
jecxz
pop
and
fwait
neg
sub
dec
dec
inc
inc
cwtl
stos
loop
push
je,pn
shl
or
cmp
imull
mov
movsb
mov
das
xchg
fsub
les
and
sub
jae
aaa
jno
into
ret
jge
negl
es
js
stos
xor
jecxz
jg
xor
stos
pop
adc
mov
ljmp
adc
cmp
leave
jo
push
jno
dec
mov
and
test
call
int3
push
cmp
adcl
and
insb
movsb
negl
mov
cmp
rcl
rorb
dec
cmp
sbb
lods
mov
shrl
notl
fdivrl
pop
adc
sub
mov
mov
loopne
test
cmpsl
mov
jno
repnz
imul
stos
aam
shll
push
mov
sub
and
jl
mov
xchg
xchg
cmp
mov
shll
xor
adc
fstpt
push
and
jno
sbb
xor
cmp
stc
xlat
pushf
or
movsb
divl
fdivrp
js
adc
divl
lcall
jecxz
pop
and
pop
jne
jnp
scas
and
mov
lea
rolb
test
fs
movsb
divl
cltd
dec
xchg
mov
inc
dec
jb
sbb
jle
scas
adc
in
sbb
imull
and
dec
mov
outsl
out
and
into
jbe
sub
sbb
inc
add
push
ljmp
shrb
loop
in
adc
lahf
stos
fidivrs
in
dec
pop
aas
jns
cmp
in
adc
adc
es
adc
mov
xlat
and
test
adc
cmp
pop
mov
stc
dec
aaa
mov
mov
mov
add
jge
mov
mov
cmp
and
lahf
and
push
and
cli
cmc
adc
sub
pop
xchg
mov
cmp
jbe
lcall
jnp
cmpsb
mov
inc
shll
cs
cmp
xchg
inc
cmp
into
je
xchg
cmpsb
loop
fs
mov
xor
jmp
sub
lods
jnp
push
mov
test
cld
fcomps
xchg
out
push
cmc
and
mov
out
jmp
push
mov
jno
outsl
divl
loope
adc
testl
cmp
inc
push
test
push
enter
cmp
xchg
test
js
adc
mov
jo
into
stc
dec
jno
push
mov
inc
mov
shl
lret
aad
inc
push
and
cld
sbb
daa
fidivl
aas
inc
aas
inc
lahf
rcrb
sub
dec
ret
mov
xor
pop
cmpsl
and
mov
and
insb
lds
scas
cli
xor
sub
sbb
sbb
stos
and
fcomps
xor
rolb
xor
xor
pop
and
shrb
and
mov
dec
shll
punpckhbw
xchg
cmp
stc
dec
xchg
xor
loope
fildll
fwait
push
jecxz
push
in
imul
test
lret
loopne
mov
mov
xor
loop
add
ljmp
mov
mov
roll
jecxz
and
dec
fnsave
dec
lods
add
mov
jge
fstpl
sbb
movsl
mov
icebp
add
pop
mov
push
xchg
inc
and
movsl
mov
cmpb
sbb
and
xor
jb
mov
outsl
popa
outsl
or
mov
shlb
sub
and
pop
adc
cmp
mov
sub
sub
lock
push
pop
push
dec
mov
pop
xlat
mov
and
cmpsb
pop
jnp
or
push
add
inc
daa
cltd
stos
inc
stc
pop
xchg
jge,pt
xchg
cmp
loopne
hlt
mov
lods
jecxz
loop
xor
sbb
std
add
insb
ret
push
jge
cmp
xchg
std
jp
push
mov
jg
push
sbb
xchg
cmp
dec
aaa
mov
aam
sub
inc
pop
inc
xlat
shrb
scas
incl
syscall
into
rcrb
mov
call
mov
xor
adc
movsb
ja
lcall
xchg
nop
mov
mov
adc
sbb
sub
imul
xchg
mov
cmp
into
ret
mov
ss
mov
cmp
push
fsubp
leave
sbb
push
mov
xchg
cmp
paddw
scas
sub
xor
mov
xchg
push
adcl
jecxz
pop
add
add
mov
push
adc
aad
stos
ret
loopne
and
and
test
inc
push
jno
push
jge
xlat
lret
sbb
cmc
xor
or
daa
dec
movsl
das
sbb
jb
aaa
test
xor
cwtl
inc
fstl
mov
shll
push
lahf
scas
leave
push
xor
imul
stc
jp
je
mov
addl
cmp
cld
fsubl
in
shll
cmp
out
cmp
icebp
sbb
cs
dec
je
fwait
loope
shrb
jnp
adc
push
jl
inc
push
jno
xchg
or
add
xor
test
mov
shll
pop
test
cmp
xchg
xor
mov
adc
jne
daa
cmpsb
test
push
mov
in
cmc
add
imul
mov
dec
das
roll
mov
or
shlb
cmpsl
xor
mov
or
test
rcl
out
sub
popa
into
das
std
lret
sbb
cld
inc
push
push
sahf
mov
push
inc
cmp
mov
xchg
lods
pop
push
mov
sub
and
sbb
shll
lahf
stos
adc
repnz
pop
adc
adc
lahf
int3
fistpl
dec
add
xor
or
xor
sbb
dec
out
iret
cs
fnsave
call
fadds
add
jnp
mov
movsl
fwait
mov
jb
ret
push
push
inc
iret
push
push
mov
lret
idivl
mov
adc
mov
cmp
sbb
mov
pusha
leave
aam
xor
sub
fistpll
js
aam
jb
inc
lods
out
loop
and
mov
ret
jmp
aam
add
push
add
movsb
fdivrl
mov
mov
mov
xor
push
adcl
mov
inc
in
push
xor
sbb
data16
mov
mov
rcrb
xor
bound
mov
adc
lret
dec
ret
mov
bound
ss
pop
jno
pop
push
jmp
sub
insl
lods
pop
jnp
and
imul
dec
add
cmc
pop
push
in
fwait
adc
inc
pop
jb
call
sub
push
hlt
mov
test
mov
cmp
ret
ds
add
cmp
sbb
mov
inc
imul
jb
cltd
test
shll
inc
lret
aad
sbb
cmpsl
or
and
sbb
mov
fs
xor
sbb
add
out
cmp
testl
mov
or
imul
xor
mov
fsts
jecxz
adc
xor
lods
jg
sbb
xor
jnp
scas
and
loop
push
dec
cmp
arpl
mov
xor
roll
mov
movsl
pop
mov
add
inc
leave
mov
fidivl
pop
in
add
jns
jg
jl
xor
cltd
ret
dec
or
jl
pop
and
xor
and
adc
shrb
cli
scas
std
jg
xchg
int
push
inc
push
in
mov
mov
fidivrs
stos
sbb
lock
jb
jmp
pusha
cli
lods
add
mov
in
rcl
mov
lods
xchg
scas
out
or
xchg
ss
inc
xchg
stos
loop
loope
imul
shlb
and
stos
test
fldl
lods
out
jecxz
loopne
inc
test
cmp
out
aad
jmp
sbb
dec
pop
std
lock
jo
imul
xchg
fadd
xchg
ss
sub
andb
hlt
scas
and
aam
into
sarb
mov
mov
lea
sbb
mov
dec
push
cmpsb
xor
fidivrl
cmp
cmp
mov
test
repnz
rcrl
daa
mov
movsl
stc
iret
outsb
jnp,pn
lret
and
and
daa
fsubrs
ds
sub
cwtl
sub
pop
adc
push
pop
inc
cmp
sbb
mov
mov
xadd
and
mov
arpl
xchg
xor
inc
push
pushf
loopne
jecxz
cmp
jmp
mov
mov
xor
loop
sub
xchg
aaa
insl
ss
xchg
subl
popf
loop
sub
dec
dec
arpl
daa
fbstp
mov
insb
fisubrs
sub
mov
test
movsl
lods
icebp
mov
pop
push
push
hlt
test
test
lcall
pop
rolb
pop
or
ja
rcrb
jb
mov
push
rolb
jns
int
cmp
cwtl
daa
sbb
mov
movsb
shlb
or
shrb
out
aad
mov
adc
and
jecxz
lcall
mov
jno
out
lret
xor
shr
adc
add
xchg
test
mov
sbb
pop
outsb
jge
cmp
dec
adc
cmpsb
cmp
insb
inc
sub
push
into
testb
jnp
fwait
inc
mov
mov
sahf
in
jo
mov
orl
mov
imul
jecxz,pt
roll
subb
add
lahf
mov
sarb
es
outsl
cmp
int3
pop
lods
test
push
loop
das
fwait
mov
rclb
divl
rcrb
inc
lahf
int
sbb
jns
data16
ja
or
sub
and
mov
das
pop
xlat
inc
xchg
sub
test
orb
jno
insb
pushf
ds
inc
lcall
add
sub
mov
xor
js
in
adc
sarl
mov
adc
xchg
cmp
push
lret
cmp
stos
notl
scas
mov
jecxz
shll
cmp
xor
cld
add
in
inc
imul
cmp
push
pushl
out
sub
jp
mov
movsb
imull
xor
clc
mov
xchg
sub
rcl
dec
dec
fdivrl
inc
mov
xchg
mov
dec
sbb
call
inc
fsubrs
in
notl
loopne
dec
mov
xor
testl
test
and
stos
dec
into
into
sub
ljmp
int3
lahf
shlb
test
test
cmp
lahf
mov
pop
mov
jnp
movsb
lds
jecxz
sub
lock
push
rcl
mov
test
sahf
dec
inc
lret
shll
shrb
stc
pop
sub
xchg
subb
leave
push
mov
mov
sbb
movsb
testl
mov
add
inc
mov
inc
jmp
ss
in
add
push
stos
xor
push
cmp
xor
mov
clc
and
push
mov
aam
add
fs
and
std
jno
and
dec
xor
cmp
es
scas
int3
sub
cmp
and
test
jmp
mov
push
loopne
sub
out
clc
or
rcl
in
cmp
pop
push
mov
mov
xor
data16
fnstenvs
cmp
or
lds
fwait
inc
sbb
leave
xchg
mov
dec
sbb
pop
fadds
movsl
cwtl
push
shl
sub
cmp
imul
imulb
mov
push
rolb
fdivp
fisubrs
sub
mov
mov
rcrl
mov
sbb
int
add
xchg
xor
lods
sub
and
inc
push
movsb
test
lahf
out
shrb
xchg
loop
fisubl
out
push
mov
lret
leave
shll
adc
pop
adc
stos
loop
cmp
pop
rorl
xor
push
leave
jl
xor
ret
sbb
aad
dec
or
movsl
int
cmc
jp
stos
stos
push
lods
divl
adc
inc
jno
mov
adc
cmp
popa
pop
or
push
cmp
dec
push
test
iret
jecxz
and
jl
xchg
jb
xchg
lret
aam
cmp
sbb
push
sub
dec
test
push
add
movsb
imul
leave
push
pop
pusha
inc
clc
int3
repnz
push
push
sahf
lods
xchg
mov
mov
rcl
imull
andl
cld
imul
outsb
add
dec
xchg
mov
inc
popf
sub
iret
jmp
xor
push
and
dec
mov
fdivrp
dec
std
sbbb
mov
scas
mov
push
sbb
cli
inc
add
call
hlt
jne
jb
cltd
dec
lods
dec
popf
stos
cmp
sbb
sti
sub
out
pop
push
mov
lret
lret
divl
loopne
add
or
ljmp
mov
js
popf
repz
adc
cli
dec
jb
jecxz
mov
mov
test
mov
pop
inc
pop
xor
push
or
xor
mov
xor
cmp
popf
or
xor
sub
adc
into
mov
test
lods
testl
cltd
jne
daa
cmpsb
imulb
pop
roll
cmc
cld
dec
aas
xchg
mov
inc
insb
sbb
mov
stos
jmp
jp
mov
pop
cmp
sub
dec
fistps
and
repnz
sbb
cs
loope
pop
jecxz
stc
adc
xchg
sbb
pop
test
mov
lds
push
movsb
sub
sarb
mov
xchg
xor
cmp
int3
testl
mov
aaa
into
stos
jmp
sahf
sbb
sbb
test
fcomps
mov
push
mov
mov
xor
pop
mov
lcall
jnp
or
fidivs
rcrb
jae
mov
pop
js
push
popf
mov
adc
mov
cwtl
rolb
and
mov
sub
scas
pop
aaa
pop
inc
stos
inc
pushf
lcall
mov
mov
add
in
in
inc
and
shrb
ss
not
add
and
and
lahf
add
imul
mov
and
daa
inc
pop
andl
push
negl
pop
pushf
subl
cmp
and
shrb
and
leave
dec
xchg
pusha
jo
popl
mov
push
mov
xor
movsl
mov
jmp
cmp
push
outsl
pop
inc
dec
jno
clc
xchg
dec
or
sbb
popa
mov
pop
inc
shll
inc
mov
lods
stos
xor
dec
xor
out
mov
mov
xor
push
or
cmp
mov
aaa
push
into
enter
cld
xorb
shlb
int
shlb
xor
cli
inc
outsb
hlt
sbb
les
ret
dec
push
scas
cltd
int
sub
pop
test
lcall
in
fists
jb
xorl
mov
push
adc
mov
mov
xchg
mov
enter
movsl
subb
adc
daa
ret
push
or
shrl
shlb
pop
ss
lret
pop
test
shll
sub
call
aaa
insl
cmp
fisttpl
in
jo
mov
test
dec
sub
sbb
aam
call
jecxz
fiaddl
loop
push
mov
negl
loope
idivl
pop
cmp
js
fstpl
divl
sub
sbb
arpl
mov
jp
xchg
scas
pop
xor
push
mov
mov
xor
xor
fisubl
testb
jle
push
push
sub
adc
push
mov
icebp
xchg
jge
cmpsl
fimuls
add
push
or
dec
testb
xchg
cs
into
lret
addb
inc
fldcw
inc
sub
stc
js
sbb
js
stos
divl
mov
and
adc
int3
mov
fcoms
fst
jl
ret
shlb
adc
filds
jnp
mov
sarb
cmpsl
lds
and
jecxz
fisttps
sahf
movb
inc
and
add
pushf
adc
lahf
lret
push
into
in
stos
mov
test
andl
sbb
jnp
jmp
dec
xchg
xor
or
jl
enter
movsl
sbbl
dec
ret
push
push
or
cmp
sbb
daa
sub
sub
addl
push
push
bound
mov
and
sbb
mov
or
xchg
negl
aas
mov
pop
mov
pop
xchg
test
or
push
sbb
leave
push
push
mov
shrb
scas
stc
mov
andb
jmp
sub
jae
rclb
mov
sarb
fisubs
dec
xor
mov
mov
xor
jecxz
add
ljmp
mov
jecxz
dec
mov
imul
fisttpl
add
pop
arpl
pop
dec
std
loop
lds
push
mov
dec
arpl
xchg
add
out
test
cmpl
pop
jo
rcr
sbb
or
dec
xor
jl
pushl
adc
into
movl
data16
std
mov
push
sub
roll
pushf
loope
xchg
mov
xor
jg
xchg
push
aam
je
mov
cld
push
das
xchg
inc
xchg
aas
push
pop
sub
imul
sahf
push
sahf
dec
and
pop
idivl
mov
lcall
divl
mov
mull
cmpsb
neg
insb
push
jnp
icebp
icebp
je
cld
cmc
add
xor
hlt
js
stos
xor
loop
fistpl
and
mov
cmp
push
lret
daa
cmp
dec
push
scas
mov
imul
addl
test
mov
lods
xor
daa
and
lods
test
inc
mov
pushl
lahf
push
jnp
lods
and
mov
xchg
movsb
movsb
testb
dec
mov
inc
mov
mov
push
imul
fildl
pop
push
mov
cmp
leave
sub
negb
mov
xchg
dec
inc
pop
imul
loope
es
sbb
movl
pop
jg
fists
std
xlat
out
sub
pop
out
and
mov
aas
push
fnsave
shll
mov
mov
int3
cli
sub
jle
mov
aas
add
sub
xchg
adc
and
and
pushl
cmpsl
pop
stos
fcoms
lock
xor
pop
xchg
jb
push
out
jge
xor
fdivl
aaa
inc
int
in
sbb
cli
das
popa
xor
add
out
popa
sbb
out
xchg
mov
ss
mov
xlat
je
add
les
push
rclb
mov
jo
ret
cs
add
pop
out
leave
sbb
ret
hlt
mov
mov
inc
push
sbb
mov
and
adc
pop
fwait
dec
jnp
push
mov
lcall
xlat
add
repnz
sub
in
shll
jb
aad
sub
fsubs
xchg
push
fmul
ljmp
xor
sbb
jle
loop
fbld
and
das
shrl
cld
sahf
adcb
pop
mov
mov
movsl
sub
fadds
outsb
push
loop
sub
into
lock
xor
inc
push
jb
clc
sub
aam
in
push
out
rorb
sahf
push
pop
in
mov
call
xor
icebp
xchg
clc
add
mov
jne
mov
scas
std
mov
daa
cmpsb
neg
mov
mov
in
cmc
call
movb
into
adc
mov
shll
dec
mov
or
xchg
cmp
mov
mov
daa
movsb
jp
mov
xchg
push
mov
daa
jge
xlat
movsb
divl
in
jecxz
pop
call
jmp
loope
bts
stos
adc
arpl
test
stc
faddp
adc
mov
adc
pop
mov
jae
pop
pop
scas
std
push
adc
jge
push
scas
add
inc
stos
mov
jo
sbb
inc
rol
ret
dec
xchg
push
aad
je
push
sbb
mov
or
pop
or
and
mov
push
fnsave
test
in
inc
scas
stc
dec
inc
iret
addr16
mov
sub
jne
cmp
scas
cmc
xor
add
and
jp
pop
fidivrs
add
mov
mov
xor
jne
cmp
cs
in
stos
jno
and
das
into
or
xor
jnp
in
mov
decl
roll
adc
dec
das
test
negl
sub
cmp
fsubs
cmp
mov
lahf
scas
enter
jp
scas
and
nop
rorl
filds
scas
xor
sub
ret
xlat
jp
lods
and
movsb
pop
mov
sti
shrb
imulb
stc
and
imul
jno
hlt
pop
popf
jp
jecxz
xlat
jle
pusha
and
and
dec
or
outsb
xchg
xor
insl
fcoms
imul
sub
pop
mov
and
pop
stos
xor
outsb
lods
sub
mov
fiaddl
ret
xor
gs
sbb
loop
clc
out
int
inc
sbb
daa
fnstenv
call
xchg
insl
insl
out
dec
mov
xchg
sub
or
mov
push
jg
adc
mov
inc
push
scas
add
cmp
and
mov
adc
pop
lea
push
mov
insl
shll
add
outsb
push
fisubrs
ret
add
adc
insb
mov
gs
out
stos
pushf
cmp
hlt
add
testb
inc
ds
hlt
rcrb
loop
movsb
test
fisttpl
mov
xchg
jg
and
ret
mov
jl
enter
xor
ret
jnp
pop
hlt
cld
mov
rcl
inc
add
jo
xchg
mov
hlt
jne
and
push
mov
pop
sbb
fucomi
push
addr16
movsb
testl
adc
add
xchg
inc
pop
fldt
gs
loope
xchg
xor
stc
js
stos
jo
sbb
jg
adc
cmpsl
out
pop
jbe
xchg
mov
sbb
ds
mov
sub
bnd
cmp
rcl
testl
fbstp
lock
mov
stc
xlat
negb
inc
rorb
loope
in
mov
mov
xor
push
lahf
stos
int
test
stc
pop
test
mov
pop
shll
or
sub
push
adc
inc
jmp
and
hlt
sarl
adc
fstpt
cmpsl
scas
divb
cmp
das
shrl
lret
sub
mov
data16
add
xchg
pop
adc
popf
mov
mov
xor
adc
aas
push
jnp
clc
sbb
xchg
lcall
push
test
daa
clc
test
repz
mov
fsubl
int3
sahf
xor
imulb
int3
adc
mov
rorb
test
mov
xor
mov
shrl
stc
jbe
cmc
ljmp
push
loop
sub
aaa
cli
leave
cli
js
mov
stos
divl
imul
movl
daa
mov
push
cmpsl
xor
push
xor
pop
push
lea
ret
cs
rcl
push
push
fildl
pop
mov
lret
sbb
mov
or
emms
add
into
fstpl
jecxz
test
xlat
xor
cwtl
dec
cmp
sbb
mov
iret
push
wrmsr
xor
mov
inc
mov
fiaddl
imul
inc
pushf
pop
xchg
lcall
dec
aas
xchg
xchg
movsl
xchg
mov
cmc
orb
add
push
int3
jns
push
daa
cli
loop
js
inc
ret
loop
mov
and
scas
cmp
push
test
lods
sub
pop
insl
jb
cmpsb
pop
or
lcall
sbb
or
mov
negl
in
jecxz
mov
call
leave
jnp
in
push
negb
pop
and
aas
pop
inc
cmp
mov
filds
std
cmpsl
mov
rcl
sbb
pop
sub
sub
xchg
into
shrb
cld
adc
loopne
inc
xchg
cmpsl
loop
and
lds
xor
push
add
in
sbb
imul
mov
sub
rorb
xor
mov
push
pop
cld
sahf
mov
into
ret
mov
sarb
and
and
icebp
push
push
jl
test
or
loop
add
jmp
and
jb
and
xor
sbb
hlt
idivb
loope
lahf
mov
xor
insb
jg
arpl
scas
add
xchg
insb
pop
jecxz
leave
rclb
mov
mov
mov
sbb
pop
mov
nop
sbb
mov
int
adc
addr16
push
fstps
ljmp
sbb
or
stc
test
daa
cmpsb
divb
scas
or
in
cmc
cld
dec
cmp
mov
mov
int3
lret
js
push
psadbw
sarb
in
adc
ss
lds
or
jns
jnp
ja
rol
sbb
add
and
mov
mov
lods
cs
adc
xchg
cmp
in
jl
arpl
xlat
cmp
negb
mov
mov
jecxz
fscale
jne
xlat
shrb
scas
and
cmpb
mov
xchg
push
xor
sbb
jmp
les
inc
int3
add
mov
push
sti
add
pushl
test
daa
cmpsb
test
push
jl
xchg
xchg
and
cmc
cld
dec
or
sub
sbb
test
cmpb
or
adc
jnp
repnz
sbb
mov
cmc
push
pop
xchg
fcmovne
sbb
loopne
nop
ret
xor
xor
imul
jno
sbb
js
ds
xchg
dec
xchg
push
fmull
scas
mov
or
sbb
test
sbb
dec
xor
ret
mov
mov
xor
cmpsb
addr16
inc
cmp
aaa
insb
cmp
ret
fimull
das
cmc
repnz
fwait
mov
inc
adc
clc
sub
or
xchg
sub
pop
fsubrl
sbb
adc
lahf
ret
jecxz
mov
stos
mov
mov
mov
and
mov
pop
mov
lods
xchg
sub
aas
xchg
test
jns
jmp
movsl
mov
fwait
mov
ret
dec
or
and
adc
mov
movsb
negl
xor
popf
mov
xor
inc
xchg
test
sub
and
jmp
fisubl
pop
lods
stos
mov
cli
pusha
push
shrl
mov
call
lods
cmp
loop
enter
xchg
sbb
xchg
add
cli
dec
xor
mov
xor
mov
sbb
mov
aas
cmpsb
test
cmc
jp
stos
stos
sub
popf
push
mov
jb
sbb
jecxz
mov
jecxz
push
mov
aaa
jno
sbb
into
std
test
jg
xchg
imul
sbb
cmpsb
mov
inc
fs
rcl
adc
mov
adc
inc
aas
jb
popf
and
in
xchg
xchg
fildl
pop
in
cmp
sbb
cld
cmp
and
and
iret
aam
mov
jb
jnp
adc
rcll
xor
or
idivb
stos
xor
loop
jae
push
inc
ret
sbb
push
adc
pop
adc
lods
add
push
fldt
push
in
jecxz
xor
pop
iret
inc
mov
cltd
pop
insb
mov
xchg
inc
cmp
push
cs
sub
mov
ret
into
aam
std
in
lret
xchg
mov
sahf
scas
mov
fstl
add
enter
movsl
pushf
addr16
lcall
adc
pop
nop
test
xchg
xchg
fldcw
rcl
xorl
mov
mov
xchg
xchg
sub
int
xchg
test
lahf
divl
leave
lods
divl
shll
daa
cmpsb
divb
sub
je
aam
push
pushf
aaa
xor
rclb
cmp
sarb
data16
rorb
xlat
out
stos
mov
in
or
adc
mov
adc
inc
loopne
fwait
cmp
mov
sub
xor
mov
xchg
shlb
mov
je
mov
popa
mov
ja
daa
cmpsb
test
push
fwait
addl
cmc
add
lahf
xchg
jo
mov
shll
mov
repnz
mov
pop
ds
pushf
repnz
ret
and
jecxz
std
jbe
cwtl
xchg
pop
mov
out
stos
xor
in
xchg
sub
mov
ds
repnz
lea
xchg
dec
push
dec
sbb
sub
or
mov
cmp
outsb
push
ret
mov
mov
divl
aam
jecxz
add
ljmp
mov
outsb
scas
cli
sahf
daa
fdivr
mov
repz
mov
adc
push
xchg
mov
xor
jmp
cmp
push
pushf
inc
lret
jno
call
add
mov
ret
enter
and
jno
sbb
jne
sti
xor
pop
stos
idivl
mov
sbb
push
xor
test
xor
mov
xlat
sub
popf
pop
push
add
and
mov
dec
shl
js
mov
into
dec
mov
pop
cld
stos
jmp
mov
mov
fiaddl
iret
loop
sub
add
xchg
mov
sub
std
out
pop
inc
push
stos
push
jnp
mov
mov
loope
push
and
sbb
sub
lret
cmp
dec
mov
push
xchg
cmp
rcl
clc
mov
jp
adc
pushf
clc
xchg
test
lret
shll
lods
in
loop
das
inc
sbb
aaa
insl
cmp
ret
fisttpl
xchg
jns
rcl
cmp
ss
cmp
mov
lds
out
std
sbb
fcompl
sti
ss
sbb
cmp
dec
mov
pushf
in
int
xor
scas
lret
xchg
frstor
mov
mov
mov
daa
cmpsb
mul
pop
leave
imul
in
cmc
add
jb
outsb
xchg
int
sub
xchg
stos
lcall
dec
pop
aas
jb
ja
adc
lahf
int3
mov
cld
sbb
push
aam
gs
mov
shrl
int3
sbb
or
push
fisttps
pop
adc
mov
add
pop
sub
mov
or
xchg
jp
xor
mov
sub
pop
xchg
and
and
lods
popf
test
adc
cli
xor
mov
mov
out
sub
sub
rcl
inc
movsb
sti
push
and
inc
in
cmp
mov
jge
pop
fiadds
sbb
pop
push
mov
loopne
icebp
xchg
repnz
mov
pop
mov
scas
sti
xor
out
int3
xchg
mov
lods
aas
mov
pop
outsb
mov
sbb
jb
xor
mov
sub
fisttpl
xchg
xlat
in
push
scas
stc
lods
push
cmpl
inc
xor
or
dec
mov
rcrb
scas
and
pop
lods
ss
stc
cltd
jbe
in
xchg
sbb
lahf
aam
loope
add
and
ss
mov
cmp
cmpsl
sbb
or
mov
cmp
mov
dec
fwait
push
fstpl
mov
push
cmp
mov
scas
inc
mov
sub
xchg
insl
push
and
xchg
iret
add
dec
dec
cwtl
frstor
inc
mov
push
subb
jmp
in
imul
and
rolb
mov
and
inc
lret
push
push
test
pop
jge
inc
lock
call
mov
mov
daa
cmpsb
mul
push
push
add
in
cmc
add
jne
jecxz
sub
cmc
test
movsb
divl
mov
aaa
sbb
lods
stc
mov
add
arpl
mov
or
mov
xchg
fbld
sbb
push
mov
xor
dec
test
sti
out
jns
dec
cmpsb
pop
rcl
sbb
pop
mov
bound
lret
pop
sbb
clc
sti
xchg
dec
cmp
fisubrl
pop
jg
test
mov
aaa
lcall
push
inc
mull
int3
mov
push
addr16
shll
pop
mov
sbb
pop
loop
loopne
cs
cltd
scas
adc
adc
lahf
int3
jecxz
mov
adc
xchg
push
shrl
bound
ljmp
out
dec
mov
fcomps
sahf
inc
dec
pop
xchg
and
mov
cmp
sub
lcall
mov
add
stos
rcll
add
pop
jb
mov
leave
sub
add
push
pop
sub
jecxz
jle
repnz
cltd
out
push
sbb
fimull
xor
xor
sub
fnstsw
mov
dec
xor
fisttpll
les
lahf
mov
movsb
movsb
test
test
push
sarb
imul
and
xchg
test
cmc
push
lock
xlat
mov
data16
stc
shrl
sub
test
movsb
testl
loopne
test
or
xchg
cmp
imul
ja
sub
push
mov
add
out
pop
andl
mov
ss
in
std
loopne
test
stc
jp
stos
stos
adc
stc
cld
mov
inc
dec
pop
stos
out
stos
jp
out
mov
xchg
movsl
xchg
lods
in
out
mov
xchg
movsb
sbb
pop
flds
into
mov
enter
lret
sub
pop
push
das
das
inc
mov
sub
push
jnp
push
mov
mov
pop
inc
jge
xor
or
mov
and
mov
sbb
enter
jae
mov
push
setae
jmp
js
push
cmp
xor
xchg
mov
mov
xor
test
lods
fdivs
addr16
sbb
xchg
stos
loop
mov
clc
gs
mov
nop
outsb
mov
pop
in
mov
mov
rorl
ret
jecxz
sar
dec
jno
jb
sahf
inc
mov
mov
push
xorl
aad
inc
push
adc
and
test
mov
int
adc
fbld
jecxz,pt
sahf
lahf
mov
test
xor
xchg
lods
xchg
clc
in
mov
sbb
shlb
xor
push
divl
jp
stos
stos
aaa
lods
add
cmc
dec
inc
pushf
iret
push
mov
mov
imul
subb
cmc
ficoms
add
mov
stc
in
xchg
pusha
sbb
fldl
push
sub
push
imul
inc
shlb
rcl
js
lret
dec
pop
stos
mov
xchg
jp
jno
loop
mov
xor
inc
imul
mov
roll
rclb
clc
mov
mov
movsb
divl
and
negl
rcrb
loopne
les
adc
adc
lahf
ret
insb
stc
jnp
adc
je
fcoms
dec
mov
cmp
sbb
aas
pushf
sbb
xor
daa
fildl
adc
stc
dec
jno
scas
mov
inc
mov
test
push
xchg
lcall
and
or
repz
mov
and
sti
mov
pop
in
add
adc
clc
sub
and
jno
aam
mov
data16
ds
pop
in
cmpsb
scas
pop
test
sub
sbb
xchg
nop
sbb
pop
cmpsb
stos
dec
jge
mov
daa
out
mov
nop
pop
push
scas
cmpb
sbb
lcall
rclb
divl
shlb
out
idiv
pusha
xlat
pop
ret
mov
sar
imul
cs
fistpl
jns
cmpsl
aas
cmp
and
mov
mov
enter
addl
loopne
cmp
mov
divl
std
lret
fldt
mov
xchg
stos
jno
jmp
jecxz
sbb
cmpsb
and
and
xor
push
and
out
in
imul
and
or
arpl
shlb
cmc
je
hlt
ljmp
push
mov
lret
leave
shll
lret
pswapd
dec
mov
fstps
dec
bswap
push
jl
roll
outsl
push
ret
add
push
in
lods
push
pushf
or
leave
pop
jl
mov
jmp
leave
movsl
jmp
xchg
inc
jo
inc
shrl
in
in
jo
cmp
das
out
cs
jnp
ss
pop
orb
nop
dec
xor
xchg
mov
mov
xor
aam
test
cmc
push
mov
mov
ljmp
sub
push
sub
popf
push
fdivs
mov
xor
push
lahf
lods
jns
fists
sahf
scas
xor
ret
je
notl
dec
mov
fadd
shl
and
pop
jb
sbb
pop
pop
dec
dec
les
xor
fildl
sbb
pop
movsl
mov
jb
adc
leave
sbb
pop
jmp
imul
xchg
inc
lcall
xchg
xor
mov
divl
add
cmp
push
fs
cmp
out
stos
lea
repnz
xchg
mov
sbb
mov
insb
lret
and
push
jl
cmpsl
pop
movsb
dec
mov
mov
loope
push
sub
pop
aas
test
and
sub
push
pop
xchg
std
push
push
sub
ds
sub
mov
cmpsb
testb
and
sbb
icebp
sbb
cld
mov
or
mov
and
push
and
bnd
add
xor
push
mov
sbb
push
ja
lcall
or
or
add
dec
push
movsb
pop
jle
jl
movb
out
mov
push
jge
cmp
clc
sub
and
popa
mov
push
adc
push
mov
jbe
push
movsb
rorb
mov
dec
xchg
adc
push
pop
inc
mov
mov
xorl
jno
or
or
mov
xchg
cmp
rcl
cwtl
and
cli
test
mov
adc
adc
mov
std
mov
rcl
imull
aad
adc
push
mov
cli
out
jg
imul
and
test
and
mov
add
xchg
mov
mov
movsb
inc
out
inc
insb
orl
out
lahf
incl
xor
idivb
std
pop
popa
jmp
stos
divl
dec
push
jecxz
add
out
fcmovb
jp
scas
and
sbb
mov
cmp
push
movsl
lahf
lcall
ret
push
adc
shlb
sub
das
test
cmp
mov
xchg
cmp
sbb
fdivrs
scas
and
push
rorl
cmp
mov
pop
daa
or
cmp
icebp
stos
loop
sub
and
hlt
xchg
mov
and
mov
push
icebp
mov
xchg
push
xchg
mov
jl
movb
imul
adc
pop
sub
shr
inc
jle
mov
test
jmp
mov
xor
sbb
push
fs
xchg
cmp
rcl
xor
xchg
inc
inc
lods
aam
and
jno
into
movsl
adc
loop
xor
dec
aas
pop
cmp
xchg
lahf
into
dec
aaa
add
imulb
aad
sti
stc
mov
lods
call
mov
cmpsl
xor
cmp
sbb
scas
cmp
fcomip
lock
pusha
xor
cltd
ljmp
and
pop
test
mov
xor
in
sti
xchg
xchg
dec
cmp
inc
sub
daa
mov
not
xchg
add
loop
dec
cli
js
stos
xor
jecxz
imulb
sbb
lahf
stos
mov
adc
adc
lahf
lret
mov
nop
outsb
adc
cmp
lods
cmp
sbb
push
jle
scas
ret
clc
mov
mov
mov
pop
ljmp
orb
mov
fisubl
mov
add
push
pop
dec
dec
les
xor
fisubrl
mov
push
test
lret
test
and
and
push
cmp
adc
aaa
loope
xor
int3
imul
daa
fmuls
cs
cltd
jmp
mov
mov
rcrb
fs
iret
or
push
lods
je
mov
adc
dec
mov
cmp
enter
bound
pushf
andl
lahf
mov
push
in
call
aas
inc
sub
xor
xor
inc
loopne
test
sbbl
leave
daa
mov
xor
sahf
les
out
dec
aaa
lea
lcall
aad
sub
scas
cld
inc
popa
cmp
xchg
push
push
sbb
and
in
or
ljmp
dec
mov
lods
dec
les
and
test
dec
rorl
sti
sub
icebp
fdivrs
test
jge
jmp
insb
lock
xchg
push
sti
mov
push
xchg
xor
lcall
arpl
jo
sbb
sbbl
lret
mov
rcrb
lcall
out
dec
mov
mov
mov
sub
ficomps
xor
shrl
stc
ja
imul
stos
xlat
hlt
mov
sbb
loop
sub
mov
push
out
cmp
imul
mov
sbb
pmulhw
add
adc
xchg
addr16
cbtw
xor
insb
mov
xchg
insl
test
addl
mov
jmp
mov
push
pusha
test
mov
xchg
sahf
dec
je
movsb
push
fst
and
in
xor
movsb
push
cmp
shlb
cmpsl
xor
gs
sub
fnstsw
adc
nop
ds
push
mov
cmp
xor
push
mov
mov
xchg
sbb
mov
mov
xor
test
push
aaa
lods
inc
cwtl
test
xchg
shlb
adc
mov
lret
leave
shll
mov
xchg
cmp
xlat
stos
mov
stos
aam
inc
mov
nop
out
loope
or
xor
mov
lret
shll
lods
out
jecxz
test
fwait
inc
cltd
test
mov
xor
inc
les
test
daa
cmpsb
neg
push
leave
and
cmc
cld
dec
mov
mov
jne
and
jecxz,pt
shl
lea
icebp
ret
sub
lahf
mov
sub
dec
ja
ficompl
mov
dec
mov
mov
push
out
insb
inc
imul
movsb
testl
dec
cld
fistpll
dec
popl
adc
cmpsb
loop
rcrl
push
mov
xor
fimull
clc
add
pop
cli
mov
mov
aaa
out
stos
jne
call
movsl
stos
ljmp
movsl
inc
out
jo
les
push
cmp
sbb
and
mov
fsubrl
xchg
rorb
mov
pop
in
cmp
cmp
adc
sub
add
jmp
mov
inc
adc
mov
lods
loope
loop
loope
movsl
leave
mov
loop
mov
sti
mov
dec
aaa
sbbb
das
stc
jmp
fdivp
mov
pop
sbb
cli
mov
xor
sbb
mov
addb
movsl
mov
and
in
or
add
ljmp
imul
jns
or
cli
movsl
xor
or
mov
xor
cmpsl
imul
dec
lea
out
stos
dec
cmp
mov
jns
aas
inc
leave
and
and
sub
bound
push
cmpsl
sub
adc
xor
into
inc
outsb
xchg
dec
mov
sub
push
jge
mov
imul
or
scas
xor
loop
add
jmp
loope
mul
stos
sar
notb
.byte
