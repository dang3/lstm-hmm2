aaa
sahf
into
fs
push
xor
mov
lahf
cmp
sub
or
cmc
dec
jl
pop
fsubrs
sti
push
xchg
mov
sub
mov
pop
jmp
aad
lock
pop
jno
jne
inc
fsubs
sub
cmc
mov
jge
sbb
cmp
lahf
xchg
mov
dec
mov
in
in
push
rcrb
add
dec
dec
addl
ret
sub
aam
popa
push
jo
push
lret
fcmovb
adc
je
and
shlb
sub
xchg
jo
daa
inc
xor
inc
add
out
test
mov
inc
pop
xor
inc
xchg
push
dec
inc
jno
jge
push
add
sub
out
pusha
arpl
test
mov
or
add
popa
hlt
mov
add
out
shll
jo
push
iret
sahf
insb
xchg
jecxz
cli
lods
ss
lods
adc
sub
fdivr
and
adc
cmp
sahf
out
push
fildll
inc
or
lret
jmp
and
jns
arpl
pop
dec
test
xor
movsb
lods
mov
cmp
lock
dec
inc
or
jle
sahf
xor
ja
ja
inc
mov
cmp
sbb
shlb
loopne
xchg
mov
test
sar
call
cld
in
xchg
ret
cmpl
repnz
mov
mov
aaa
adc
push
aad
pop
push
pop
in
inc
aas
cmc
push
hlt
and
movsl
int
cs
ljmp
jp
cmp
adc
out
cmc
dec
faddp
inc
outsl
or
pop
pop
push
fdivrs
shlb
in
mov
push
fdivrs
movsb
rorb
cld
testl
es
outsl
mov
xor
mov
inc
stos
jno
sub
iret
adc
cmp
inc
mov
or
cmp
stos
mov
mov
sbb
out
push
xchg
clc
icebp
pop
lahf
xlat
xchg
inc
je
addr16
dec
out
cmp
lock
popf
sub
and
xchg
sbb
js
xchg
adc
jp
and
movsb
lock
dec
and
xlat
jae
add
out
shll
in
scas
jne
xor
shl
cmp
mov
mov
mov
stc
out
nop
outsl
add
insl
fs
inc
sbb
dec
mov
and
inc
sahf
outsl
xor
aad
lock
dec
push
cwtl
push
inc
lret
fsubrs
lcall
adc
mov
mov
test
cmp
mov
icebp
mov
inc
lret
sbb
add
mov
ret
testl
dec
into
cmp
xchg
int3
ja
mov
jg
je
cld
pop
outsl
push
xor
and
cmp
pop
and
fnstsw
pop
fistpl
jns
jno
pop
int3
push
call
sub
out
cmp
jmp
mov
or
test
ret
xor
sbb
cmp
xchg
cmpsb
jo
fs
insl
test
adc
cmp
adcb
lods
jo
dec
push
mov
push
add
shlb
pusha
push
icebp
jb
or
test
mov
pop
xor
push
cmp
in
adc
xor
push
pop
adc
cli
lret
jmp
cmp
lock
mov
ret
int3
push
test
push
xor
shlb
andb
js
loope
push
pop
push
or
aaa
cwtl
imul
dec
lret
push
lock
add
mov
sbb
lea
test
pop
dec
jecxz
es
or
sbb
xor
mov
lret
mov
das
jecxz
rcrb
sub
xchg
dec
iret
int3
jne
cmp
mov
jl
ret
jno
loopne
sub
cmp
out
push
jp
adc
ret
lret
sbb
sub
inc
out
imull
lock
xchg
and
sahf
add
sbb
test
sub
cmp
add
mov
aaa
nop
icebp
inc
and
dec
mov
xlat
jle
iret
xor
loope
aaa
test
adc
mov
cmc
std
out
pop
add
xchg
out
push
add
jp
das
mov
xor
pop
fs
arpl
cmpsb
dec
push
and
fsubrl
insl
pop
adc
dec
mov
sti
mov
jno
in
add
xlat
pop
push
imul
hlt
and
movsl
xchg
push
sahf
cmp
lock
cwtl
or
push
mov
mov
and
pop
mov
xor
push
adc
roll
adc
lods
xor
mov
lock
xchg
mov
dec
out
out
mov
lods
int3
adc
mov
xorl
pop
push
and
mov
cs
int
or
cld
testl
push
push
dec
inc
jno
jge
push
ficomps
iret
inc
cltd
xor
sub
clc
dec
sbb
jecxz
push
sbb
pop
nopl
mov
push
pop
push
or
push
dec
cmp
lods
sbb
pop
mov
push
mov
sbb
and
sbb
pop
cmp
ja
js
jecxz
pop
sub
int3
frstor
or
add
inc
xlat
jns
mov
push
or
jne
or
mov
and
sub
leave
cmp
scas
stos
outsl
hlt
or
aaa
jns
dec
inc
add
sbb
pop
mov
mov
jmp
mov
fwait
dec
adc
push
mov
mov
jmp
hlt
push
dec
cs
and
bound
add
jne
cltd
testl
cli
mov
pop
pop
mov
xchg
sub
xchg
push
pop
mov
dec
cmpsb
pop
inc
mov
push
ja
mov
and
fs
pop
pop
push
mov
insl
lods
int3
adc
insb
fisubrl
icebp
push
push
lret
dec
orb
xchg
jbe
mov
jne
pop
mov
int3
out
xor
sarl
push
mov
nop
jmp
add
cltd
or
icebp
rcrb
jno
outsb
jecxz
fcoms
jmp
mov
sbb
ret
insb
push
xor
pushf
repnz
adcl
sub
out
jg
push
xchg
push
stc
pusha
push
orb
cmpsl
mov
sub
clc
dec
sbb
adc
xchg
ficoms
pop
jl
enter
pop
in
test
and
inc
adc
cmp
inc
cmp
pop
je
andb
add
or
es
scas
add
int3
inc
mov
js
icebp
stos
mov
sbb
xlat
xor
outsb
adc
pop
xlat
jno
and
in
sbb
mov
inc
dec
lods
xchg
push
call
movsb
mov
mov
push
mov
movsl
dec
adc
adc
xchg
add
in
fnsave
insl
ret
into
shl
std
sub
sub
subb
mov
mov
pop
pop
push
jbe
leave
clc
aad
xchg
repnz
mov
xlat
jle
pop
fistpl
jns
jno
pop
int3
push
jmp
iret
aam
adc
lcall
xlat
push
movsl
push
xor
and
sub
mov
or
es
dec
mov
xor
jb
dec
pop
dec
or
aas
int
rcrl
bnd
imul
cs
pushf
push
jb
dec
mov
std
xor
xchg
jmp
sbb
lds
mov
xchg
jg
xchg
aaa
sub
mov
movsb
dec
jnp
adc
out
xchg
cld
mov
fcomip
ret
cmp
xor
xchg
push
sbb
xchg
andb
push
mov
cmp
ja
xor
lcall
adc
cmp
or
pop
in
ljmp
lret
sbb
divl
aaa
enter
jnp
jmp
test
or
enter
add
mov
jp
dec
out
fxch
bound
push
out
cmp
inc
mov
sbb
mov
filds
sub
xorl
jb
imul
mov
jae
mov
in
mov
imul
les
das
add
in
test
push
pop
adc
sbb
push
jns
fdivrs
or
test
adc
mov
xor
scas
or
insl
aas
cmp
cmpsl
push
pop
and
loopne
es
cltd
int
arpl
add
adc
pop
sbb
and
imul
xchg
shlb
std
insb
inc
inc
mov
outsb
inc
xor
mov
pop
cmp
jb
scas
mov
jno
daa
add
push
pop
sbb
push
fsts
cmc
scas
frstor
lcall
fistl
out
jo
addr16
sahf
mov
shll
fdivrl
push
cmc
and
lret
or
push
inc
rorl
xorl
cmpl
cmp
push
stc
add
dec
ret
fsubrs
jl
dec
cld
stos
mov
popa
addb
sbb
loopne
in
push
push
mov
jb
mov
mov
push
icebp
aaa
inc
pop
subl
aad
lock
ret
jnp
cmp
and
out
shll
push
and
adcl
es
push
pop
cmp
sbb
pop
push
fiadds
pop
int3
or
pop
mov
mov
cltd
les
mov
enter
jp
or
js
ret
xchg
hlt
mov
stos
mov
mul
jecxz
add
cmp
inc
cli
stos
sbb
leave
clc
aad
xchg
repnz
mov
mov
movsb
data16
cltd
call
sbb
repz
xchg
cli
ss
cltd
xor
sbb
mov
jbe
inc
sub
cs
cmp
adc
cld
pop
loope
test
inc
negb
xor
inc
jb
fsubs
cmpsl
fistps
movsb
sbb
sti
push
out
cmpsl
lods
mov
xchg
adc
fsts
adc
shll
jnp
jo
sub
es
cmp
icebp
ds
scas
cmp
idiv
jo
lea
mov
inc
loope
mov
inc
adc
ljmp
push
mov
xchg
insl
mov
sub
and
cmp
adc
icebp
sub
out
pusha
arpl
or
lea
xor
movsl
stos
cmp
repnz
adc
add
add
or
iret
sahf
cmp
adc
lods
inc
xchg
addr16
xor
push
xor
mov
outsb
and
and
js
dec
and
iret
sahf
jnp
insb
icebp
xchg
ss
inc
addl
test
or
inc
cltd
xor
pop
out
push
fildll
and
loope
cmpsb
sub
cmc
cmp
inc
dec
jae
out
arpl
je
jecxz
loope
push
mov
xchg
pop
ljmp
mov
addr16
loop
cltd
xor
mov
in
cltd
in
add
std
xchg
and
iret
in
xchg
in
sbb
or
fsubrs
lods
mov
xchg
jns
test
icebp
sar
adc
sub
jns
inc
ret
pusha
mov
jmp
mov
stos
mov
jbe
leave
clc
aad
xchg
repnz
or
lds
lcall
xchg
and
xchg
sbb
fisubrl
xor
xor
inc
shl
out
jecxz
add
push
inc
aas
mov
or
xchg
push
pop
mov
dec
cmpsb
pop
xor
xchg
sub
dec
addl
push
push
mov
jbe
in
dec
cltd
xor
pop
lds
setns
mov
test
das
sub
repz
orb
arpl
or
pop
jmp
dec
popf
addb
ficoms
jp
xchg
jg
ret
and
xchg
push
add
mov
pinsrw
inc
xlat
lods
pop
xchg
enter
int
dec
fs
cld
iret
enter
push
decl
loopne
inc
jnp
cs
adc
mov
popa
loop
clc
cmp
mov
leave
and
fimuls
daa
pop
fisubrl
cwtl
pushf
or
cmp
and
movsb
out
addr16
dec
inc
xor
or
outsl
hlt
or
aaa
jns
dec
inc
add
aad
icebp
jecxz
divl
mov
movsb
scas
inc
gs
ss
or
cmp
das
dec
cltd
xor
bound
cmovae
cmp
dec
out
fdiv
fsub
addr16
and
add
fadds
ss
jno
jecxz
clc
jnp
or
mov
cmp
sbb
ret
sbb
int
aam
and
pusha
mov
jmp
orb
add
jle
jmp
pop
add
adc
pop
add
lods
and
in
lea
push
sbbl
popf
jge
popa
cs
jmp
cltd
jae
pop
sahf
sub
fidivl
stc
pop
lds
push
lods
icebp
jle
jle
xchg
fmuls
xor
mov
sbb
xor
fcmove
push
dec
dec
cmc
lret
mov
cld
popf
lret
loopne
es
cltd
xchg
push
aas
not
imul
cmp
adc
adc
out
cmp
lock
xchg
insb
push
xor
or
inc
push
push
cmp
inc
jno
jge
push
add
sub
insb
dec
push
lds
mov
hlt
or
cmp
mov
mov
test
aaa
jl
sub
mov
gs
cmp
mov
les
lods
push
in
mov
imul
lret
xchg
lret
sbb
roll
inc
xchg
adcb
or
movsl
push
cmp
inc
lret
mov
add
add
cmp
movhps
addr16
sahf
sub
jne
repz
subb
push
mov
scas
adc
inc
cltd
xor
fdivrs
dec
lods
xor
inc
sub
mov
xchg
xlat
jns
mov
mulb
bound
sub
mov
mov
mov
call
mov
dec
add
xlat
mov
sti
filds
addr16
xchg
outsl
pop
loop
sbb
dec
push
jecxz
pop
sbb
fsubrl
js
imul
popa
es
cli
std
pop
cld
or
ds
sbb
js
aas
into
ret
fadds
xchg
mov
pop
cmp
mov
mov
inc
addl
test
cmp
sub
lds
inc
cmp
xor
int
cmpsb
cmpsl
jmp
jmp
pushf
fs
aas
test
sub
repz
fdivr
and
in
gs
lret
jmp
pushf
mov
dec
push
push
cmc
push
lods
hlt
out
out
sub
repnz
push
inc
push
js
test
cmp
xor
mov
leave
fnsave
insl
ret
into
shl
mov
int3
push
mov
cltd
or
adc
mov
int
lds
shll
sub
xchg
mov
push
mov
stc
sub
sbb
sbb
cmp
lahf
xchg
mov
dec
movsb
pop
dec
mov
xchg
mov
lret
mov
aas
mov
fcomp
lcall
jae
dec
add
fsub
jb
outsl
outsb
pop
mov
lods
ret
stos
pop
pushf
xor
pop
push
insl
sub
cmp
dec
loopne
es
cltd
mov
popf
lds
out
xor
pop
js
jno
jecxz
mov
outsw
and
adc
es
cmp
icebp
lds
push
sbb
fisubs
or
es
push
mov
xor
push
mov
test
movsl
movsb
add
xchg
add
lods
add
ret
lret
push
and
enter
xor
shlb
mov
or
int
jno
push
outsl
pop
cmp
mov
adc
icebp
ret
and
jne
cmp
mov
jl
ret
jno
loopne
sub
cmp
dec
inc
mov
adc
mov
push
stos
call
mov
test
push
lcall
or
jae
and
fs
out
xchg
cmp
or
test
insl
stc
pusha
insb
mov
push
jae
lea
fbld
fs
arpl
cmpsb
xor
and
out
loope
clc
outsb
lods
sbb
arpl
aaa
add
fldt
xchg
xor
inc
ret
and
mov
or
sbb
xlat
jp
jae
inc
repz
mov
dec
test
shlb
xchg
hlt
loope
int
test
mov
xlat
jno
mov
pop
push
andl
mov
jmp
fs
sahf
cmp
push
and
shrb
dec
jo
ljmp
sahf
mov
mov
test
faddp
outsl
sub
out
sbb
adc
dec
sti
push
inc
mov
clc
mov
mov
jmp
adc
jne
and
sub
les
icebp
inc
nop
or
xchg
loop
arpl
and
cld
iret
enter
push
decl
ja
in
cs
adc
outsl
es
sbb
push
fdivr
and
in
dec
stos
inc
sbb
ficompl
pushf
mov
dec
push
push
cmc
push
lods
hlt
out
out
sub
divl
idiv
push
inc
mov
cld
mov
testb
xor
push
sbb
inc
repz
mov
scas
inc
and
and
mov
lods
mov
xchg
jns
inc
addl
std
sub
inc
inc
or
int3
xor
push
sti
icebp
fidivrl
push
daa
push
addl
lcall
jmp
xchg
mov
jp
mov
sub
imul
pop
test
pop
jge
xchg
adc
popf
mov
mov
xchg
inc
sub
xchg
pusha
mov
repnz
push
inc
stos
jns
cmp
push
aas
not
imul
cmp
adc
shll
daa
in
in
lods
push
cs
sub
cmp
xlat
sub
lea
and
cmp
in
push
stc
xchg
push
or
cmp
sahf
sub
inc
loopne
xor
imul
cli
test
adc
loopne
aaa
inc
inc
or
bound
pop
mov
push
mov
jae
insl
sub
and
js
dec
jbe
icebp
mov
hlt
mov
jecxz
lea
mov
adc
stos
loopne
inc
je
sti
nop
clc
jo
addr16
sahf
xor
fs
sbb
inc
addr16
jle
int3
pop
inc
out
testl
sbb
jae
lret
orl
adc
sub
add
push
int3
lahf
fsubrs
fbstp
data16
jae
push
inc
aam
xchg
movsl
mov
rol
in
loop
and
push
sub
inc
aas
aam
repnz
mov
mov
dec
pop
fucomip
or
ss
sub
pusha
push
in
sbb
icebp
sub
call
cmpsb
xchg
xchg
testb
jecxz
pop
sbb
popa
in
xchg
fldt
xor
mov
mov
xor
cld
sbb
cmpsb
insb
testl
fcmovb
adc
sub
dec
and
fmul
cltd
mov
xchg
insb
push
xor
cmp
jecxz
data16
ret
lock
insb
jnp
inc
mov
jno
movsl
nop
mov
and
arpl
add
adc
icebp
sbb
test
fwait
sub
cmp
test
jne
loope
fmul
fdivs
nop
add
fmull
xor
outsl
out
or
fcom
inc
sbb
dec
mov
jbe
mov
push
outsl
ds
js
or
cmpsb
mov
scas
ret
orl
pusha
pop
loopne
out
mov
aad
bound
jl
mov
cmp
mov
dec
push
cld
push
xor
jb
jno
cmc
inc
sub
push
imul
push
loope
push
mov
jbe
outsb
in
in
xor
jecxz
and
faddl
test
in
clc
lock
adc
push
push
sub
insl
fisubs
bound
sub
mov
mov
mov
call
mov
dec
add
pop
xchg
and
sub
loopne
mov
xchg
outsl
pop
loop
jl
sub
inc
nop
cmpsl
jne
inc
inc
fsubrl
js
imul
popa
es
cli
std
pop
cld
or
test
mov
popa
xor
inc
xchg
push
arpl
jno
outsb
loope
pop
push
roll
js
sbb
fimuls
addr16
push
xchg
jle
xchg
add
cmp
mov
mov
inc
addl
test
mov
rcrl
mov
cmp
movsl
data16
add
mov
ficoml
sbb
push
out
push
dec
cmp
lods
dec
sar
aad
lock
ds
jnp
shl
enter
ds
loopne
fs
xor
shlb
xor
imul
int
iret
dec
cltd
xor
test
das
xchg
xor
fimuls
daa
pop
ficompl
sbbb
clc
and
xor
jecxz
int
mov
xchg
mov
cmp
cwtl
or
fadd
dec
iret
dec
cltd
xor
out
aad
jg
pop
icebp
xor
stos
mov
mov
aad
lock
and
or
jl
bswap
xchg
cs
push
movsl
fldl2t
mov
ror
shll
test
out
mov
setno
fisttps
daa
jle
iret
nop
xchg
cltd
lret
mov
or
mov
les
fdivrp
dec
jecxz
jge
xor
pop
inc
sbb
cmp
cli
push
jle
and
fsubrl
ret
push
in
and
mov
pop
pop
xchg
ret
in
push
rcrb
clc
adc
andl
xchg
andl
mov
jmp
xor
subb
sbb
sarb
mov
sbb
outsb
sahf
mov
mov
inc
orl
jecxz
lea
jnp
jmp
push
xchg
push
stc
xchg
int3
and
outsl
fwait
dec
daa
sbb
cmp
mov
bound
inc
and
pop
or
xor
mov
or
popf
jns
mov
mov
cltd
mov
push
adc
iret
in
xchg
out
push
jmp
jp
sbb
xor
test
jmp
sub
or
cmp
ljmp
jmp
daa
mov
and
repz
and
mov
insb
and
inc
mov
dec
lods
outsb
mov
ds
das
shll
ja
jbe
lret
in
mov
push
ds
sbb
imul
lea
mov
mov
mov
call
xchg
sub
mov
xchg
std
dec
and
sub
mov
xchg
fprem
sbb
test
int3
xchg
loope
sarl
mov
mov
mov
mov
xor
cld
sbb
cmp
stc
rorl
outsb
addr16
xchg
pop
and
scas
push
pop
and
mov
fnstenv
data16
pop
xor
xchg
pop
dec
sub
cmpsl
inc
loopne
mov
push
orl
adc
call
jge
push
add
lea
xchg
lods
cltd
push
testl
xchg
aaa
sub
js
shll
in
scas
jne
popf
inc
sbbb
lods
loop
pop
out
stos
mov
xor
sahf
inc
cmp
mov
jl
dec
cld
stos
mov
ss
test
and
decl
pop
sbb
dec
mov
data16
lret
movsb
lds
sahf
call
push
push
rcr
mov
jmp
lahf
gs
push
sbb
pop
or
out
adc
sbb
push
sub
clc
sbb
add
pop
inc
sbb
jne
ret
and
mov
sub
mov
loop
aaa
or
mov
adc
icebp
inc
iret
out
out
push
sub
test
cmpsl
mov
jno
sbb
ret
arpl
dec
and
cmpb
loop
xchg
insb
push
xor
pushf
mov
jp
lods
movsl
mov
add
setle
std
fs
test
cmp
icebp
sub
out
pusha
xlat
dec
scas
dec
mov
popa
lods
cltd
push
testl
xchg
aaa
sub
js
shll
in
scas
jne
jle
es
or
mov
xor
adc
lea
cmp
mov
sbb
mov
xchg
mov
cmp
sar
fbstp
sti
stos
popa
stos
push
inc
lahf
xchg
in
jge
mov
imul
jmp
sub
cmc
xchg
cld
inc
jno
shrl
add
or
icebp
push
push
scas
jg
je
cld
pop
outsl
push
sbb
push
sub
and
aas
test
pop
inc
sbb
jne
ret
and
xchg
adc
mov
rcr
testl
or
xchg
dec
insb
mov
xchg
sahf
xchg
dec
out
stos
ret
push
and
and
dec
into
sub
mov
or
cltd
jo
test
bnd
ljmp
xlat
xlat
push
mov
mov
cmpsl
adc
pop
popf
sub
aam
in
mov
push
mov
mov
in
add
sbb
repz
sbb
int
pop
idivb
aas
ret
ret
stos
ljmp
xor
mov
loope
add
or
push
push
xor
and
imul
sbb
push
cltd
in
add
adc
sbb
rcl
inc
in
fnstcw
in
sub
pop
push
repnz
or
xor
mov
pop
ss
jecxz
add
inc
icebp
mov
lret
fimuls
rorl
inc
push
push
cmp
mov
ljmp
mov
repz
inc
dec
ss
sbb
mov
push
add
fwait
aam
inc
mov
dec
test
popa
ret
in
ja
add
stos
mov
cmpsb
dec
leave
lcall
nop
repnz
dec
cmp
xchg
sahf
xchg
dec
out
stos
ret
push
and
and
dec
into
sub
mov
or
cltd
jo
xlat
scas
gs
pop
outsl
sub
cmp
xlat
sub
lea
mov
pop
enter
adc
pop
popf
sub
aam
in
mov
push
sub
sub
xlat
jl
addb
ret
cmpsb
pop
dec
mov
sahf
cmp
test
or
adc
call
popa
dec
xor
dec
ret
stc
test
test
push
sti
arpl
lahf
cld
inc
jmp
outsb
push
shl
or
notl
ss
mov
test
cmp
xor
push
ljmp
push
xor
cmc
out
loope
subb
xlat
mov
popf
sbb
rcll
push
stos
in
insl
or
fisubrs
sahf
loope
clc
outsb
lods
lahf
hlt
xchg
shlb
sahf
push
sbb
test
decl
out
mov
int3
jge
jo
addr16
sahf
outsl
call
pop
scas
mov
icebp
inc
iret
out
out
push
mov
shll
xor
icebp
mov
xchg
hlt
jecxz
lea
imul
nopl
push
outsb
fisubs
dec
bound
test
adc
out
and
jns
pop
push
inc
xlat
push
sarb
pop
sti
inc
xchg
call
aad
push
jp
lods
movsl
sbb
imul
loop
cmp
xchg
dec
ds
imul
fisttps
mov
into
mov
xlat
mov
addb
xor
jns
cmp
xchg
imul
sub
push
add
or
mov
js
sbb
ret
les
bound
and
mov
faddl
mov
ljmp
mov
jl
in
xchg
sbb
shrb
jmp
arpl
push
pop
lret
outsb
sub
mov
lahf
mov
fsubs
inc
or
imul
dec
lods
mov
xor
and
and
inc
lret
sbb
addr16
in
mov
fisttps
cmc
xchg
cld
inc
jno
shrl
add
jecxz
repz
popf
pop
pop
pop
lock
ror
mov
or
dec
in
dec
push
jbe
cmpsl
rcr
mov
cwtl
sti
mov
jno
in
add
xlat
pop
jne
pop
jnp
mov
adc
jnp
inc
dec
lds
hlt
xchg
ja
js
jecxz
xor
mov
call
test
mov
lret
mov
loope
lea
pop
and
scas
push
pop
and
mov
fnstenv
data16
or
ffreep
fisubl
sahf
cmp
mov
pop
dec
or
aas
int
lods
xchg
es
out
or
sub
cltd
xor
int
insb
xor
mov
push
or
push
cmp
in
jo
mov
insl
mov
imul
call
jbe
pop
out
cmp
lock
test
cmp
test
pop
bound
xor
mov
imul
xor
and
adc
sub
pop
and
dec
iret
int3
jne
cmp
mov
jl
ret
jno
loopne
int
xchg
scas
ret
mov
mov
repnz
xchg
enter
add
clc
lock
cmpsl
gs
repz
int
std
jbe
sahf
lret
scas
mov
mov
aam
inc
jmp
aad
lock
jae
fisubs
adc
cmc
enter
test
movsl
loopne
and
push
inc
in
test
cli
sub
iret
cmpsl
inc
cmpsl
fstl
dec
jbe
inc
xor
stos
inc
addl
lcall
loop
sbb
imulb
loope
sti
add
dec
out
sub
mov
pop
pop
cmp
adc
outsl
movsb
add
jb
and
pop
pop
adcl
pushf
test
icebp
inc
iret
out
out
push
mov
shll
xor
sbb
push
xchg
jle
jecxz
mov
mov
mov
pop
cmc
pop
pop
sarb
pop
sti
inc
xchg
cmpsb
sub
sahf
iret
cmp
pop
mov
sbb
in
jo
mov
mov
xchg
inc
loopne
xor
fwait
pusha
mov
into
push
push
pop
push
lret
stos
xchg
pop
xchg
into
cmc
dec
jge
dec
fmuls
jge
loope
fmul
sub
mov
mov
mov
stc
out
in
mov
fcom
inc
sbb
dec
mov
jbe
orl
outsl
dec
cmp
mov
jl
ret
jno
loopne
and
adc
ret
imul
daa
shlb
loopne
xchg
mov
jb
scas
add
std
sub
mov
cmpl
mov
loope
test
in
lea
es
mov
repz
mov
pop
outsl
push
xor
and
cmp
inc
cltd
xor
movsb
xlat
xor
in
jns
cmpsb
add
repnz
pop
in
add
pop
popa
cs
dec
push
jecxz
pop
sbb
sub
sbb
in
jmp
aad
lock
and
aam
pop
pusha
in
adc
or
mov
mov
add
cmp
loope
cmpl
dec
mov
jne
sbbb
dec
popf
xorb
add
push
loop,pn
mov
sub
imul
xor
shll
clc
dec
pop
popf
sub
aam
in
pop
leave
js
xchg
adc
mov
mov
sbb
dec
bound
sbb
mov
sbb
aad
or
and
les
fsub
js
scas
outsl
mov
sbb
scas
or
test
adc
mov
sub
mov
adc
sub
leave
cmp
inc
outsb
adc
iret
inc
cltd
xor
jae
lret
orl
adc
sub
ljmp
and
and
loope
outsl
and
mov
cmp
push
mov
dec
fs
and
aam
dec
mov
and
ljmp
cmp
repnz
or
xchg
pmaddwd
sub
imul
mov
stos
cmpb
in
inc
cmpsl
fcoml
jg
xlat
and
and
pop
xor
aad
icebp
jecxz
mov
mov
and
xchg
icebp
iret
cwtl
prefetchw
int
rcl
popa
and
sti
mov
jno
in
add
xlat
pop
jne
pop
jnp
mov
mov
or
add
iret
push
clc
fwait
sub
adc
cmp
xchg
xor
mov
sbb
inc
jmp
ja
mov
sbbb
pop
jmp
dec
popf
xorb
js
mov
repz
pop
and
leave
jp
mov
mov
push
shll
mov
divl
cmp
insb
lret
xchg
enter
subl
mov
mov
aas
sub
repnz
push
dec
shlb
add
icebp
or
cmc
sub
sti
cmp
cwtl
jne
xor
lea
cmp
mov
sbb
mov
xchg
mov
cmp
jns
dec
inc
jb
sti
push
pop
lock
xor
sbb
arpl
xor
insl
fisubs
bound
sub
mov
adcl
test
adc
jne
in
dec
cmp
pusha
xorb
cmpsl
and
push
xchg
lcall
jo
vpcmpgtw
jne
inc
sbb
jne
ret
and
aad
lock
push
jecxz
pop
sbb
fsubrl
js
imul
dec
inc
cmp
push
and
jecxz
insl
push
adc
dec
shll
add
jp
in
fwait
icebp
cmp
pop
xor
cwtl
lcall
loopne
es
cltd
pop
push
es
xchg
data16
xchg
jnp
loope
test
cmp
sbb
jbe
mov
add
jbe
jmp
xchg
les
aad
lret
jmp
or
mov
jns
in
cmp
outsl
ljmp
ljmp
movsl
push
xorb
and
or
cmp
addb
jae
dec
mov
popa
lcall
sbb
mov
mov
mov
outsb
shll
int3
cld
adc
inc
jbe
and
xor
fimull
push
lret
orl
inc
jne
imul
inc
or
popa
stos
push
inc
fwait
lcall
idivb
imul
lret
aas
pop
lds
out
push
mov
adc
popa
adc
in
mov
cmpsl
fstl
dec
jbe
inc
ds
fs
arpl
or
sbb
lock
repnz
popf
xor
ja
js
jecxz
call
cmpsb
xchg
pop
pop
divl
js
loope
or
stc
std
xor
test
jmp
jle
popa
push
lea
sbb
cmpsl
into
cs
push
aas
or
inc
outsl
mov
mov
jo
mov
dec
mov
sub
sbb
pop
mov
xchg
loop
or
pushf
pop
dec
jmp
int
and
jl
jecxz
or
pop
orb
es
movsb
push
popf
mov
sub
dec
pop
sahf
mov
js
jecxz
adc
std
jp
js
jne
and
xlat
jbe
lods
rclb
ss
sbb
cmp
jl
jno
inc
loop
daa
jns
sub
add
mov
mov
cmp
xorl
mov
xchg
fldenv
aad
or
lcall
sub
idivb
or
mov
out
xor
xor
lock
fiadds
out
repz
and
mov
insb
and
inc
mov
dec
lods
outsb
mov
ds
std
or
xchg
mov
lea
nop
xlat
cmc
adc
add
daa
ljmp
inc
cmp
js
iret
jo
notb
cld
dec
dec
pop
iret
sub
jb
xchg
pop
enter
push
out
jp
mov
sub
imul
pop
test
pop
jge
xchg
adc
popf
mov
fsubrl
icebp
mov
xchg
fistpl
mov
pop
fld
shlb
bound
pop
clc
and
es
sbb
das
sbb
lcall
das
sub
je
pusha
mov
jp
ret
shll
enter
pop
das
sbb
push
daa
inc
ret
outsb
pop
sarb
pop
sti
inc
xchg
sahf
cmp
push
xlat
sti
inc
mov
enter
and
stos
push
add
sub
out
pusha
arpl
test
mov
xchg
lea
jb
mov
mov
in
push
push
shll
jne
jle
es
or
orl
mov
in
cld
adc
stos
loopne
int3
stos
xor
jb
call
mov
pop
sbb
or
push
lret
orb
shl
in
fxch
pop
scas
in
fidivs
jns
mov
sbbb
push
mov
mov
lret
fnstcw
jb
fistps
lret
push
add
lret
xor
sbb
leave
loopne
mov
insl
movlps
dec
jno
shrl
add
and
push
arpl
sahf
repz
adc
lock
mov
mov
push
pusha
sub
call
mov
addr16
xchg
outsl
pop
loop
jp
xor
loopne
es
cltd
mov
sbb
mov
jbe
or
addl
negb
xchg
ret
adc
fmuls
addr16
sbb
mov
mov
add
push
xchg
jg
out
mov
xchg
outsl
pushf
mov
mov
push
rcl
push
jecxz
sbb
xchg
and
adc
xchg
cmpsl
pop
sbb
in
je
lcall
js
dec
imul
imul
jp
sub
test
sbb
xor
mov
lret
mov
das
jecxz
rcrb
sub
xchg
movsb
sub
pop
mov
in
cmpsb
mov
scas
ret
inc
push
jns
orb
sbb
sub
pop
push
jb
ja
into
or
scas
add
xchg
sbb
xor
mov
pop
ss
jecxz
add
inc
icebp
mov
mov
ret
sbb
scas
and
shl
arpl
shll
mov
rcr
testl
or
cmp
scas
push
cli
std
pop
cld
or
test
mov
sbb
ret
arpl
dec
and
cmpb
pop
sti
inc
xchg
int
fisubs
jns
ret
lock
insb
jnp
inc
mov
fucomi
sub
icebp
mov
dec
pop
cmp
jge
aad
mov
js
addr16
sbb
ret
data16
add
xor
jge
mov
mov
mov
cld
scas
adc
ds
fildl
fisubrl
sahf
cmp
test
outsb
cli
lods
ss
lods
roll
nopl
cmpsl
rcrb
jae
xchg
stc
pop
gs
cmp
jne
dec
movb
pop
idivb
aas
ret
adc
push
push
stc
jnp
xor
or
push
pop
and
rorl
dec
cs
or
rolb
push
xor
popf
dec
icebp
jecxz
ss
or
and
push
lret
loop
mov
out
xchg
jle
xor
mov
cmpsl
fstl
dec
jbe
inc
ds
fs
arpl
cmpsb
xor
and
or
add
xor
sbb
loope
or
stc
push
mov
cmc
adc
xchg
adc
popf
mov
fsubrl
fbld
int
cmp
insl
mov
mov
or
es
dec
mov
xor
scas
dec
xchg
repz
mov
pop
push
and
mov
mov
mov
mov
jno
mov
xor
mov
outsl
mov
pop
adc
insb
add
pop
and
fs
daa
ret
sub
stos
cmp
jl
repz
xchg
shlb
cmpsl
stos
pop
test
ds
pop
daa
xor
push
cmp
dec
mov
in
push
push
rorl
add
fsubs
push
shlb
cmp
push
and
ss
xchg
sbb
or
pop
addr16
cmp
lds
sub
mov
mov
icebp
out
scas
test
stos
mov
es
sbb
and
test
es
aam
lods
mov
xchg
jns
mov
pop
lcall
sub
mov
mov
adc
pusha
xorb
xor
jo
sub
xchg
mov
repnz
and
rorl
pop
fs
push
lahf
xchg
mov
sbb
jle
xchg
fmuls
xor
or
fidivs
loopne
rcrl
add
ds
xlat
jbe
jbe
jmp
ja
jnp
fs
repz
aaa
pusha
jno
sbb
out
jp
xlat
jbe
ret
xchg
insb
push
xor
sub
sub
ret
lock
insb
jnp
inc
mov
jno
jo
or
movsl
fwait
xor
mov
shlb
test
call
add
dec
insb
fcoml
bound
cmp
jge
cmp
sbb
push
repz
push
inc
sub
mov
scas
push
in
xchg
lahf
jae
ret
sub
mov
enter
mov
mov
sub
push
in
xlat
je
add
ss
jae
ret
stc
popf
call
sub
push
mov
xor
mov
add
mov
into
sahf
cmp
sbb
add
mov
mov
or
xchg
dec
pushf
mov
lcall
mov
enter
xor
rorb
jb
sbb
sbb
ret
dec
hlt
dec
imul
iret
sahf
cmp
push
mov
inc
lret
sbb
ja
arpl
outsb
das
jge
int3
adc
adc
sbb
push
aaa
aam
xchg
cmc
mov
pop
pop
nop
test
xchg
outsl
push
mov
fsubs
cmpsl
fstl
dec
jbe
mov
or
nopl
daa
and
bound
cmp
ds
popa
xor
insb
jle
adc
loop
mov
and
mov
add
les
outsb
jmp
or
add
push
or
add
mov
push
xchg
mov
call
test
push
xchg
sbb
leave
adc
pop
push
mov
insl
lods
pop
mov
out
ss
mov
mov
xchg
sbb
leave
outsl
or
call
out
aaa
inc
pop
xlat
jo
dec
pop
mov
inc
pop
xor
lock
pop
pmaddwd
xor
inc
jl
dec
ret
mov
stc
xlat
test
xor
pop
sub
cmp
lock
add
mov
js
xchg
adc
mov
mov
sbb
dec
bound
fistps
pop
jns
mov
add
addr16
popf
data16
stos
add
lret
mov
or
or
in
cmp
xor
pushf
mov
xchg
fistl
sub
cmp
dec
inc
mov
adc
mov
push
stos
sbb
cmp
mov
jmp
jns
add
cmpsl
mov
pop
push
mov
cli
xchg
xchg
add
mov
mov
aaa
adc
push
aad
pop
push
pop
adc
push
cmc
aad
dec
insl
pop
outsb
shrb
cli
cs
ljmp
jp
cmp
cmp
pop
jecxz
cmp
sbb
sbb
jnp
and
mov
sahf
cmp
out
inc
loopne
pop
cwtl
mov
std
movsb
push
outsb
repz
ret
test
adc
iret
sahf
xlat
jb
fs
dec
pop
dec
or
aas
fucomi
add
push
cmp
gs
pop
pop
int
jne
inc
pop
clc
jae
xlat
jbe
pop
mov
iret
cmp
pop
mov
aad
lock
add
sub
out
pusha
arpl
test
dec
push
sbb
xor
mov
push
inc
push
dec
das
jp
or
dec
cltd
xor
clc
xchg
mov
outsl
ss
adc
dec
out
mov
imul
lret
inc
lods
nop
decl
ljmp
pop
pushf
jp
inc
jle
pushf
fs
sbb
mov
sbb
aad
or
lcall
sub
idivb
aas
ret
adc
push
sub
outsb
push
out
and
sub
data16
insb
flds
inc
insb
and
inc
mov
dec
lods
outsb
mov
ds
das
shll
outsl
mov
outsl
sub
jno
push
aas
mov
iret
inc
cltd
xor
push
mov
out
insb
hlt
dec
insl
imul
in
int
inc
test
insl
stc
pusha
insb
mov
scas
xor
popf
inc
pop
cld
and
sbb
mov
jae
in
int
cwtl
es
sub
loop
pop
addr16
pop
notb
xor
into
xchg
dec
ss
insl
or
es
iret
cmp
sbb
mov
fwait
out
cmc
dec
faddp
inc
outsl
or
pop
pop
push
mov
insl
lods
int3
adc
insb
fisubrl
data16
xor
in
sbb
mov
sub
imul
jmp
sub
js
pusha
in
sbb
mov
mov
pop
mov
test
dec
js
xchg
adc
cmpsl
pop
or
sub
mov
mov
call
add
pop
dec
std
cwtl
lcall
ret
addr16
sub
jbe
cmc
xchg
mov
and
push
push
push
xchg
loop
sub
inc
enter
xchg
jecxz
iret
adc
add
mov
in
aas
sub
lea
cmp
mov
jne
push
mov
loope
addr16
stos
nop
fsin
sahf
outsl
xor
and
imul
cmp
push
xlat
movsl
fisubrl
lret
sbb
loopne
sbb
mov
fstpl
loopne
es
cltd
mov
cli
jo
shll
loope
sbb
nop
dec
int
repz
out
lds
notb
jecxz
add
xchg
out
xor
ss
and
inc
test
lds
imul
push
or
lea
xor
inc
popf
jb
add
jno
adc
adc
and
cltd
xor
cltd
int3
aad
icebp
jecxz
sub
les
xor
and
fldt
int3
call
leave
mov
sahf
cmp
in
jno
in
add
xlat
pop
jne
shrb
loopne
shll
sbb
ret
movsl
xchg
push
pop
mov
dec
cmpsb
xchg
pushw
scas
mov
push
cli
std
pop
cld
cmpl
and
pop
push
jb
xor
dec
pop
dec
mov
into
dec
push
mov
in
out
cmp
gs
xor
jb
dec
pop
dec
or
lret
jne
add
sub
mov
add
jge
gs
jne
scas
mov
daa
je
sbb
lret
jmp
subl
or
es
lcall
icebp
jecxz
pushw
imul
stos
sbb
pop
nopl
add
inc
inc
or
shll
popa
ret
xchg
fisubrs
mov
jae
or
cwtl
imul
push
imul
mov
mov
addr16
jb
call
loop
cmp
lods
stc
pop
xchg
das
stos
outsl
cmc
push
in
push
push
fisttps
sbb
adc
shll
test
shrb
dec
jb
jp
stc
ljmp
loopne
mov
and
xchg
jle
xor
inc
ret
test
mov
inc
leave
movsb
push
dec
loop
push
jl
lret
sbb
rcrl
std
fwait
imul
mov
lods
adcl
ja
add
adc
or
xor
addr16
inc
xor
push
xor
rcrb
jae
pop
sahf
sub
sbb
ret
mov
in
cmpsb
mov
and
fidivl
sahf
cmp
xor
clc
adc
andl
xchg
andl
mov
stc
jp
ret
test
popf
fs
popf
and
pop
xchg
fsubl
int
lea
pop
cmp
fstl
scas
dec
cltd
xor
mov
das
xchg
xor
repz
cmpsl
inc
jno
jbe
insb
and
dec
cltd
xor
call
shrb
sbb
xchg
addb
into
mov
jno
ds
xchg
jmp
pop
mov
and
pop
jmp
mov
mov
dec
mov
mov
jns
in
cmp
inc
aad
icebp
jecxz
adc
lea
jb
cs
dec
addb
mov
or
es
and
adc
mov
gs
pop
mov
js
jae
pop
mov
mov
sbb
mov
adc
jno
insl
jmp
movsl
roll
in
push
xlat
jae
mov
addb
ja
ja
js
jecxz
xchg
push
sbb
xchg
gs
lcall
push
cmc
push
lods
hlt
out
out
pop
fs
push
mov
out
xor
push
fwait
jmp
pushf
jb
jns
push
sub
pop
push
jnp
push
movsl
push
xor
fwait
out
sbb
arpl
or
adc
sub
adc
stos
jbe
xor
insl
or
fisubrs
sahf
loope
clc
outsb
lods
lahf
hlt
xchg
rorb
sbb
cmp
mov
icebp
divb
daa
mov
lods
xchg
sub
sub
clc
iret
push
clc
fwait
sub
adc
xchg
out
aas
lods
xor
mov
je
pusha
mov
jp
ret
test
popf
fs
popf
mov
cmp
andl
js
loope
sti
inc
xchg
sarl
imul
xor
movsb
or
insb
jnp
aad
lock
adcl
jae
sub
clc
dec
mov
aas
xchg
lea
jb
cs
xchg
aaa
sub
js
shll
in
scas
jne
jle
es
out
xchg
out
int3
mov
rcl
pop
xor
and
outsl
ficomps
or
dec
inc
or
mov
ja
mov
leave
cmp
scas
stos
outsl
hlt
or
aaa
jns
dec
inc
add
sbb
pop
mov
pop
jle
adc
push
cmpsb
dec
mov
data16
arpl
xor
shlb
aad
aam
push
push
push
mov
out
pop
jmp
outsl
sub
aad
inc
and
rorb
xor
adc
xchg
int3
cltd
iret
cmp
enter
adc
fs
jle
dec
int3
xchg
xchg
and
pop
popa
ret
out
pop
fisttpl
add
mov
mov
cmp
pop
xchg
into
fdivs
test
inc
push
xor
sbb
sbb
pushf
int
and
sbb
mov
jmp
xor
mov
cmp
mov
push
ja
insl
aad
cmc
dec
faddp
inc
outsl
or
popf
xchg
test
lock
jne
adc
hlt
mov
mov
sub
rcrl
jbe
int
or
cld
testl
es
and
jne
aas
stos
xchg
fisttpll
jg
lret
dec
daa
ret
mov
lock
lds
gs
scas
adc
ds
fildl
fiadds
fnstsw
loope
fmul
fdivs
mov
pop
xchg
mov
in
and
lret
mov
das
jecxz
imul
out
ficompl
or
lock
pop
in
ss
inc
out
out
das
cmpsb
mov
scas
mov
cmp
jns
orb
sbb
daa
shlb
aam
jne
movsl
sarb
mov
xchg
ja
cmp
fwait
out
ret
ljmp
stos
mov
mul
jecxz
add
cmp
adc
mov
shll
lret
gs
and
and
rcrl
das
mov
nopl
jge
xchg
adc
popf
mov
fcompl
or
lea
scas
mov
push
cli
std
xor
ret
rcr
jb
push
lret
jp
add
add
and
mull
mov
aad
imul
mov
mov
xor
cmp
xchg
popa
jo
pop
jp
xchg
cli
and
pop
fsubrp
dec
pushf
mov
and
mov
sbb
in
xchg
in
mov
fwait
pusha
jb
cltd
nop
xor
mov
push
ficomps
push
cmp
pop
pop
adc
jno
movb
dec
popa
shl
popf
dec
mov
insl
mov
inc
call
fwait
adc
xchg
clc
and
or
out
push
cmp
xchg
xchg
call
inc
xor
cmc
add
out
addr16
or
inc
test
movsb
lods
mov
xor
push
fwait
sub
fwait
pop
cmpsl
mov
pusha
sti
ret
out
fistl
fdivs
and
xchg
icebp
in
lret
sbb
arpl
rcr
mov
jmp
lahf
gs
push
sbb
arpl
hlt
push
dec
cs
and
bound
jecxz
ret
sahf
cmp
ds
mov
addr16
xchg
in
pop
jge
popa
cs
dec
push
jecxz
pop
sbb
jo
jae
add
orl
js
inc
xchg
pmullw
and
xor
insb
jg
or
dec
mov
xor
cmp
inc
movsl
in
sbb
ret
and
fistpl
push
xchg
jle
jecxz
cltd
lock
or
dec
xor
mov
adc
ljmp
jmp
push
cmp
jns
fdivs
inc
jl
push
adc
mov
mov
jae
add
cli
fwait
neg
dec
js
xchg
adc
cmpsl
pop
cli
test
sbb
insb
icebp
and
cmp
scas
rsqrtps
les
lret
ror
mov
imul
lret
xchg
loopne
mov
sbb
testb
push
xchg
or
xor
leave
push
ja
lea
mov
xchg
dec
loop
daa
jno
cmp
inc
mov
icebp
jecxz
add
std
push
push
sub
pop
push
jb
ja
into
or
punpckhdq
cli
cmp
xor
push
mov
fwait
out
sbb
arpl
insl
push
xor
js
jecxz
repz
popf
pop
pop
pop
lock
jne
xchg
cld
xchg
repnz
mov
outsb
repz
sub
mov
pop
pop
mov
repnz
loope
test
adc
pop
sahf
sub
add
inc
addl
cmp
bound
iret
push
clc
fwait
sub
sub
sbbb
push
cli
cmp
cmp
xchg
sahf
dec
jne
mov
call
stc
or
sub
mov
or
cltd
jo
test
bnd
imul
cs
scas
or
push
orl
std
xor
xchg
dec
mov
jb
rcl
push
pop
mov
push
mov
jae
or
cwtl
imul
inc
cltd
into
dec
jl
pop
rol
mov
popa
jmp
sub
inc
jle
insl
fisubl
sahf
cmp
push
stos
xor
jp
mov
ret
jle
or
pusha
add
xchg
sbb
or
pop
addr16
cmp
out
or
decb
and
int
cmc
push
lods
hlt
out
out
sub
mov
jg
push
ja
inc
mov
es
dec
xchg
dec
lahf
fsubrs
push
jae
xor
in
mov
push
ds
sbb
dec
aas
aam
repnz
mov
data16
hlt
jbe
leave
clc
aad
xchg
repnz
mov
sti
mov
jno
in
add
xlat
pop
jne
pop
jnp
mov
jno
test
inc
int
ss
and
push
icebp
rclb
cltd
aad
cmp
adc
out
cmc
dec
faddp
inc
outsl
or
iret
dec
cltd
xor
inc
or
or
mov
test
pop
pmaxsw
jg
outsl
adc
out
xor
sub
rorl
mul
dec
or
or
jmp
clc
or
mov
insb
dec
push
lds
aad
push
jl
out
ljmp
cmp
movsb
push
pop
mov
pop
lahf
stc
aam
mov
push
xor
fcomip
ret
cmp
loopne
lock
push
push
xor
rorb
xchg
or
and
jo
and
iret
and
imul
arpl
sahf
cmp
sbb
lea
je
outsb
mov
push
scas
stos
outsl
hlt
pop
std
jbe
int
je
aam
ja
ja
inc
in
dec
icebp
cmp
sti
sub
add
push
int3
lahf
fsubrs
pusha
sub
into
cmp
int3
sahf
cmp
mov
inc
outsb
pop
push
jae
hlt
shrb
and
or
pushf
test
test
icebp
jecxz
jnp
push
movsl
push
xor
fwait
adcb
mov
add
sub
pop
mov
cwtl
fmull
xor
imul
cmp
stos
mov
es
cltd
or
adc
das
mov
xor
mov
ret
mov
iret
or
add
xor
mov
sbb
mov
sahf
ds
shl
lds
push
out
dec
inc
ja
lahf
xor
push
mov
pop
pop
addl
aaa
push
mov
addl
mov
sti
dec
ja
test
divb
inc
outsb
seta
mov
push
cmc
xor
dec
cmp
xchg
sahf
xchg
dec
out
stos
ret
push
xchg
jbe
mov
popf
negb
pushf
mov
push
or
call
ficoml
ror
cltd
jne
jo
and
and
xor
nop
sub
rcrl
jbe
mov
add
jbe
jmp
lret
daa
cmp
pop
test
adc
stos
ficoms
loopne
es
cltd
andl
int3
testb
dec
ljmp
xorl
and
or
popf
lods
jl
jecxz
adc
rol
mov
lcall
ret
mov
xchg
or
in
dec
movb
fwait
lock
shlb
mov
xor
orl
arpl
jge
sbb
mov
outsb
mov
push
scas
stos
outsl
hlt
mov
adc
xor
jae
lret
orl
adc
sub
add
and
aad
lock
mov
adc
jne
jmp
cwtl
cmpsl
mov
xchg
add
cmp
mov
clc
or
mov
mov
jmp
cltd
mov
out
rolb
xchg
fldt
int3
call
mov
jge
sub
adcl
pop
mov
push
ret
sub
addr16
add
imul
xor
cwtl
lcall
xchg
add
sbb
push
test
inc
or
mov
jno
jecxz
mov
loop
dec
xor
pop
in
je
lcall
or
sub
ret
xchg
out
jle
lret
rcrl
mov
push
minps
mov
lds
sub
in
scas
jne
jle
es
out
in
dec
repz
mov
fisubrs
or
std
and
xchg
push
xchg
out
lcall
icebp
es
xor
imull
mov
gs
ja
and
jae
leave
sti
or
ds
push
fistpll
pop
cmp
sbb
fstl
in
ljmp
lret
sbb
popa
jns
dec
test
cmpsb
rcll
leave
loopne
pop
scas
sbb
ret
xchg
cld
inc
jno
shrl
add
jecxz
rorb
outsl
scas
jg
je
cld
pop
cmc
xor
cmpsb
ss
sub
pusha
push
in
cld
cmp
cwtl
cmp
icebp
xchg
push
aad
cmp
sti
add
cmp
int3
mov
out
into
inc
dec
iret
dec
movsb
loope
paddb
cltd
mov
xor
push
int
int
pop
push
rcrb
clc
adc
xorl
sbb
in
mov
in
out
and
xchg
icebp
jecxz
ja
cmp
push
enter
mov
xor
lock
xor
inc
add
fwait
mov
xchg
xlat
fucomi
les
mov
jbe
xchg
dec
jnp
add
xchg
fisubrl
sahf
cmp
loopne
mov
push
ss
xchg
fs
add
push
stc
xchg
mov
sbb
jb
jnp
pop
dec
jo
mov
lock
dec
sar
xchg
cmp
xor
jns
cmp
add
popf
jne
sbb
rcl
pop
xor
and
imul
push
or
in
cmp
push
mov
xchg
pop
ljmp
sub
mov
mov
ds
das
shll
xor
xor
or
cmc
xchg
cld
inc
jno
shrl
add
jecxz
repz
popf
cmp
and
pop
outsl
push
xor
and
cmp
mov
in
jns
cmpsb
or
shl
stos
cld
xchg
mov
xchg
adc
cli
mov
add
dec
iret
dec
pop
mov
lods
inc
addl
les
jne
sbb
popa
movzwl
jp
das
mov
xor
adc
push
out
add
cmc
xor
mov
test
iret
sahf
cmp
repz
cmc
xlat
in
jmp
xchg
out
or
cmp
in
les
das
add
mov
icebp
jecxz
scas
cmp
imulb
aas
push
push
roll
in
lret
sahf
cmp
sbb
lea
ss
jmp
push
xchg
push
stc
stos
or
test
adc
sub
test
popa
lods
jmp
movsb
ret
inc
pop
in
es
adc
pop
in
test
and
jp
mov
popa
add
mov
stc
out
in
mov
rcrb
sub
mov
pop
dec
iret
int3
jne
icebp
int
inc
out
out
sub
jo
push
jns
orb
sbb
sub
pop
push
jb
ja
into
or
scas
add
std
jp
sub
inc
popf
jb
add
jno
adc
pop
inc
push
data16
and
fldcw
addr16
xchg
outsl
cmc
iret
popa
cs
dec
push
jecxz
pop
sbb
fsubrl
js
imul
popa
es
cli
std
pop
cld
or
push
sbb
and
mov
cmp
xor
aaa
in
mov
sub
xchg
es
mov
xor
cmp
mov
push
jl
adc
dec
push
out
jl
sbb
iretw
sahf
sub
jne
lea
cmp
jb
lret
push
pop
pop
inc
pop
ja
xchg
fisttpll
jg
adc
cmpsl
hlt
mov
mov
test
adc
mov
mov
push
xor
or
out
xor
mov
or
sub
lds
inc
cmp
xchg
dec
ds
imul
xor
or
cli
ljmp
loop
and
mov
xchg
or
andb
icebp
sub
idivb
or
mov
out
xor
xor
lock
mov
and
sub
aad
mov
xor
popa
cmc
loope
insb
inc
mov
dec
lods
outsb
mov
ds
lea
cmp
sahf
call
xor
cltd
loopne
mov
mov
cli
pop
ficoms
aad
test
adc
pop
xchg
mov
iret
sahf
cmp
cmpsb
movsb
jle
xorb
mov
mov
push
int
sbb
insb
daa
lahf
lcall
cmp
add
cmp
lds
lods
and
enter
jmp
pop
add
mov
jp
dec
out
fxch
bound
stos
cltd
jae
pop
sahf
sub
mov
dec
movsb
loope
paddb
cltd
int3
cmpsl
fistps
jg
dec
test
adc
adc
in
add
mov
jno
xor
ss
inc
adcb
xchg
lock
cli
loope
test
mov
stc
rorl
jnp
or
lea
xor
mov
jmp
hlt
or
test
adc
mov
cmp
or
sub
repz
adc
std
jp
js
jne
jmp
imul
jge
sahf
jp
mov
enter
pop
jmp
add
imul
mov
cld
iret
enter
push
movsb
and
dec
hlt
stos
xchg
mov
fistpl
sub
leave
fdivs
aam
data16
stos
add
lret
bound
cmc
add
out
addr16
or
inc
test
movsb
lods
mov
xor
push
fwait
jmp
or
pusha
sti
ret
out
fistl
fdivs
fistps
xchg
icebp
clc
jp
cli
arpl
or
out
mov
imul
mov
jmp
and
aad
ficoms
int
les
test
mov
sub
sub
ljmp
jle
xchg
leave
aas
jge
fdivr
std
xor
test
jmp
jle
popa
push
and
and
jg
or
pop
push
dec
jmp
mov
in
filds
mov
movsb
push
popf
mov
aam
add
orl
jecxz
repnz
jns
ret
lock
insb
jnp
inc
mov
jno
movsl
nop
mov
cld
lcall
sti
cwtl
pop
jl
arpl
jno
in
iret
enter
pop
in
test
and
lret
sbb
xor
fistpll
pop
je
dec
test
ficompl
mov
xchg
xchg
mov
ret
scas
xchg
xchg
mov
lahf
cld
fdivl
adc
dec
pop
popa
mov
nop
xchg
jno
adc
sbb
or
inc
or
mov
int
xchg
add
hlt
pushf
gs
sub
aaa
or
int
lods
imul
mul
repnz
xchg
enter
push
gs
fstpl
add
jno
mov
sahf
cmp
pop
loopne
pushw
ret
or
and
jle
in
and
roll
sti
daa
ljmp
inc
cmp
js
iret
jo
notb
cs
push
aas
mov
dec
jb
mov
xchg
cli
sbb
xchg
loope
or
adc
mov
lret
sbb
cmp
dec
cltd
pusha
testl
or
hlt
orb
push
mov
inc
fcomps
mov
jge
int3
test
cltd
mov
xchg
insb
push
xor
pushf
mov
and
push
out
jg
push
xchg
push
stc
xchg
cmp
jecxz
dec
sbb
aam
jmp
aas
xchg
lea
jb
mov
mov
in
push
push
cmpsl
jnp
jne
jle
es
out
xchg
out
int3
mov
push
out
add
cmp
xor
rorb
cmpl
js
mov
icebp
xor
sahf
outsl
xor
and
mov
inc
mov
mov
sub
pop
sub
fwait
cmp
or
popa
stos
stos
or
cmp
cltd
xor
ds
icebp
jecxz
aam
lret
movsb
lds
pop
jbe
in
push
es
push
mov
int3
dec
xlat
jg
sub
out
mov
lock
xorl
mov
mov
test
adc
jne
in
dec
cmp
pusha
xorb
adc
mov
dec
outsb
sub
add
decl
lods
repz
push
jmp
inc
and
lret
dec
lcall
dec
xlat
push
lret
outsl
xor
and
and
rorl
pop
fs
push
lahf
xchg
mov
dec
movsb
pop
dec
mov
into
xchg
mov
inc
sbb
pop
popa
scas
jle
or
lods
sub
cmp
testb
or
outsb
or
mov
xorl
and
test
iret
pop
mov
lods
ret
stos
pop
pushf
xor
jns
push
jo
jbe
fucom
sbb
sub
lea
mov
push
mov
push
sbb
in
fwait
xchg
jnp
xchg
movsb
ss
cmp
icebp
pop
cmp
test
rolb
mov
adc
loopne
aaa
xchg
sarb
add
pop
jmp
push
mov
sbb
lea
test
out
pushf
fs
scas
test
rolb
inc
lret
imul
pushf
cltd
sbb
sub
jae
and
sub
out
fidivl
pop
jae
icebp
rolb
jecxz
xchg
sti
mov
int3
frstor
xchg
sub
out
cmp
lock
jle
pop
rolb
jecxz
jbe
add
stos
nop
fsin
sahf
outsl
xor
divb
jne
loope
shrl
mov
je
lods
clc
icebp
pop
dec
and
pop
pop
fiaddl
lcall
fsubp
adc
inc
jl
aad
jo
ja
fucom
sbb
fsubl
sub
aas
jp
in
nop
ds
shll
and
push
das
shll
push
and
xor
or
cli
sbb
ret
xchg
mov
push
std
mov
sbb
jae
loop
push
and
popa
push
push
in
mov
test
jnp
dec
jbe
aas
es
cmp
icebp
imul
inc
and
inc
xlat
jbe
shrl
dec
inc
jbe
jnp
leave
pop
enter
lea
ljmp
int3
das
cmc
sub
sub
stos
push
lret
inc
xor
mov
xor
dec
imul
mov
xchg
nop
or
repz
icebp
add
nop
call
addr16
add
or
xor
push
xchg
shll
pop
cwtl
mov
sbb
in
jo
daa
inc
xor
inc
add
orl
jecxz
repnz
jns
ret
lock
insb
jnp
inc
mov
sbb
mov
lcall
sti
push
lcall
pop
inc
outsb
es
pop
ror
cmp
push
xor
addr16
adcb
fsubl
mov
add
out
shll
popf
xor
mov
cwtl
push
shll
cmp
xor
pop
mov
push
jmp
sbb
loop
xor
xchg
cld
inc
lret
dec
leave
and
fimuls
daa
jbe
jb
mov
dec
fcom
inc
sbb
dec
dec
mov
ret
frstor
mov
lds
in
jo
movsl
inc
ret
iret
sahf
cmp
rcll
fs
inc
and
addl
push
js
test
cmp
or
cmp
sti
or
inc
nopl
xor
loope
xchg
loopne
adc
cld
fcmove
inc
cmp
int3
shrl
dec
inc
add
enter
inc
mov
out
jno
call
cmpsb
add
pop
push
sbb
mov
mov
cmpsl
mov
jp
dec
out
fxch
dec
xor
fists
enter
js
mov
mov
mov
mov
sbb
sbb
jne
sub
stos
das
icebp
ficompl
leave
scas
push
pop
and
xor
sar
inc
add
mov
ljmp
fcmovnbe
sti
icebp
rcrl
xor
inc
xchg
push
dec
inc
jno
jge
push
add
sub
das
lahf
leave
mov
inc
loop
aaa
mov
mov
or
add
xchg
shlb
cld
mov
sub
jnp
adc
addb
test
fistpll
pop
je
andb
cmc
and
cmc
pop
nop
cmp
mov
cld
adc
mov
fdivrl
lret
outsb
jb
aam
ja
ja
inc
mov
xlat
xchg
sbb
add
mov
lret
fnstcw
in
sub
pop
push
xlat
mov
sarb
roll
cmpsl
adc
sahf
sub
cwtl
inc
inc
mov
cmp
and
sbb
mov
fs
arpl
xor
push
aas
mov
dec
pop
jp
std
pop
popa
das
pop
dec
pop
lock
adc
inc
pop
mov
cmp
cmpsl
mov
cmpsb
test
mov
push
dec
dec
cmc
lret
mov
cld
popf
inc
icebp
je
std
test
aas
cli
incl
xchg
scas
cmp
stc
cwtl
push
imul
xor
jno
jecxz
mov
outsw
and
adc
jmp
loopne
xor
imul
stos
cmp
repnz
adc
sbb
xor
mov
xorb
sbb
mov
icebp
jp
inc
cmp
in
imul
ds
mov
outsb
shll
int3
cld
adc
inc
jbe
and
test
dec
je
popf
rcrb
js
jecxz
scas
mov
push
xchg
aaa
cmp
fistl
fdivrl
push
or
and
cli
bound
cmovae
enter
lcall
lahf
fs
pop
or
pop
xchg
mov
in
xor
shll
mov
dec
mov
sbb
or
pop
in
push
xchg
mov
push
mov
stc
sub
and
sbb
hlt
sub
xorl
jb
imul
xchg
mov
fdivl
gs
dec
stos
out
mov
movsl
in
out
inc
jmp
adc
dec
into
jne
xchg
jle
jecxz
mov
leave
push
fs
push
rorl
xchg
in
aaa
push
pop
mov
loope
in
pop
js
pushf
insb
inc
mov
cmpsl
test
push
mov
xchg
inc
jns
je
ja
sahf
outsl
sub
xlat
popf
out
test
mov
xor
mov
pop
xor
ficoms
out
pop
imul
loopne
push
mov
shll
stc
jg
stos
jp
inc
sub
loopne
aas
push
add
jo
addr16
sahf
js
xchg
adc
xor
sbb
dec
sar
xchg
cmp
jge
popa
xor
cmp
mov
addl
shlb
cmp
imulb
push
es
cltd
icebp
mov
xchg
xor
es
xor
sti
js
mov
jb
cmp
fstps
pop
stos
rcll
mov
stos
lods
cmpsb
jge
xchg
sbb
push
stos
clc
push
in
shrb
dec
jb
jp
stc
ljmp
mov
aaa
nop
icebp
inc
and
cmpsl
inc
xor
inc
adc
add
pop
dec
mov
scas
in
cs
push
aas
mov
dec
pop
jp
std
pop
popa
sbb
sbb
xchg
loope
or
adc
mov
sbbb
jno
or
fwait
cmpsb
test
mov
test
sti
pop
xor
cwtl
xchg
jl
mov
pop
fistpll
jno
push
aad
and
pop
xchg
stos
mov
popf
mov
sub
call
out
repnz
and
sbb
cmp
pop
test
pop
sbb
movsl
nop
mov
and
arpl
add
adc
dec
bound
daa
jo
jge
pop
xor
and
jne
ret
clc
or
stc
and
mov
gs
cmp
mov
les
lret
shlb
xchg
sbb
or
data16
loopne
mov
sbb
testb
inc
inc
or
xlat
adc
rcrl
xchg
inc
addr16
mov
dec
inc
addl
jmp
lds
mov
shlb
xchg
fisubl
lds
pop
push
xchg
jnp
cmpsb
mov
pop
pop
dec
ja
movsl
lret
sub
jae
xchg
xlat
xchg
and
int3
and
pop
pop
sbbb
xor
stos
in
idiv
sub
mov
ds
das
shll
push
and
call
test
leave
insb
or
cltd
and
fucomi
int3
shr
inc
icebp
ss
clc
test
dec
insb
sub
sbb
mov
or
cltd
mov
pop
push
xlat
xor
out
jo
addl
dec
mov
ds
shrd
dec
add
scas
clc
or
packuswb
out
pop
sub
push
mov
mov
add
push
xchg
jg
out
mov
xchg
outsl
pushf
mov
mov
mov
test
adc
cmp
xlat
sub
lea
jecxz
lea
pop
lods
movsl
sbb
imul
loope
test
cmp
add
adc
icebp
xor
sti
jo
or
daa
scas
fsqrt
daa
dec
cltd
xor
xchg
leave
adcl
mov
sbb
shl
xor
ljmp
add
sbb
repz
test
hlt
cltd
data16
int3
sub
xchg
into
jle
inc
test
push
sub
cmp
scas
mov
aas
xchg
hlt
pop
aam
lock
arpl
jnp
not
loop
push
or
in
cmp
nop
aaa
cmp
or
push
dec
cmp
popf
in
adc
jo
addr16
sahf
sub
adc
sub
pop
out
cmp
lock
mov
addr16
jmp
ja
js
jecxz
lret
sbb
loopne
sbb
mov
popa
jmp
mov
bswap
xchg
cs
arpl
pop
xor
pop
lea
mulb
cltd
fcompl
lock
and
dec
fbld
ficomps
push
dec
cs
and
das
inc
jb
test
mov
cmp
sbb
and
sbb
xchg
push
pop
inc
xor
or
hlt
imull
mov
insl
pop
adc
dec
adc
mov
and
cli
adc
inc
xchg
shrb
add
xchg
ljmp
into
mov
aaa
mov
fucomi
cmp
sub
je
pusha
mov
jp
ret
test
popf
fs
popf
mov
cmp
dec
fisttps
test
unpcklps
sbb
or
jbe
jb
sub
mov
jge
lcall
icebp
inc
nop
or
filds
sti
rcl
xor
adc
lods
inc
jnp
das
movsb
and
rcl
mov
jmp
outsl
movsl
lahf
xor
jle
es
out
xchg
or
adc
xchg
mov
ds
sahf
cmp
push
cmpsl
ficoml
int
scas
add
ret
mov
xor
push
and
xchg
sti
pushf
mov
dec
push
push
cmc
push
lods
hlt
enter
xchg
das
jecxz
test
stos
mov
mov
pop
es
ret
push
and
loope
or
fistl
fdivs
and
sbb
ja
arpl
inc
pop
mov
or
imul
cld
inc
jno
shrl
add
jecxz
rep
in
jecxz
stos
sbb
and
xlat
jle
imul
js
js
pop
jecxz
cld
jg
jnp
nop
testb
imul
mov
xor
out
jo
dec
push
jecxz
insl
mov
sahf
cmp
in
jno
in
add
xlat
pop
mov
push
jmp
xor
mov
stc
xor
shlb
movsb
push
repnz
jg
or
pop
push
clc
fsubrs
mov
jge
int3
test
ror
xchg
sbb
pop
sub
call
out
repnz
sub
pop
je
mov
pop
push
cmp
repnz
int
jl
dec
ret
mov
insb
dec
mov
cmpb
inc
addl
loopne
mov
inc
loop
lock
push
add
jns
lea
fbld
out
pushf
fs
aas
test
loopne
es
cltd
rolb
movsb
mov
je
roll
nop
mov
enter
mov
stc
bound
xor
push
inc
gs
add
mov
adc
fsubs
les
test
out
xor
dec
jns
lahf
mov
mov
neg
stos
fidivl
jmp
imul
loopne
arpl
cmp
jno
mov
mul
jecxz
add
cmp
xchg
stos
stos
in
insl
or
fisubrs
sahf
loope
clc
outsb
lods
lahf
hlt
xchg
rorb
sbb
cmp
xorl
cmp
mov
sub
dec
sub
test
ja
js
jecxz
sub
lcall
pop
xchg
loopne
jmp
ret
pop
popf
xchg
test
lock
repz
dec
add
insb
shlb
sub
xchg
jo
daa
inc
xor
inc
add
push
add
fs
pop
mov
inc
pop
push
fs
addl
iret
ror
outsl
or
arpl
sahf
lahf
ret
xlat
xchg
pop
jmp
pop
in
add
pop
insb
dec
push
roll
jns
in
cmp
enter
lret
rcl
cmp
dec
push
push
add
ss
jae
ret
stc
test
test
push
adc
loope
lret
and
lods
cmp
movsl
fs
addr16
ret
xchg
cmp
stos
ljmp
imul
sahf
cmp
insl
jle
in
ret
xorl
lea
nop
xlat
rcl
test
leave
insb
or
fwait
add
ja
and
sbb
jmp
in
or
leave
repnz
mov
push
xchg
in
test
popa
es
cmp
icebp
add
imul
fstps
icebp
dec
cmc
dec
jle
aad
jg
jne
inc
sbb
xor
cmpsl
add
pop
nop
sub
mov
xchg
sub
cmp
in
sub
bound
addr16
ret
push
xchg
xchg
outsl
and
fstpt
addr16
sbb
add
and
mull
mov
aad
imul
mov
data16
scas
cmp
push
divl
sbb
sub
clc
enter
mov
pop
sbb
in
je
lcall
js
dec
imul
out
out
mov
xorb
sbb
mov
or
mov
jg
push
mov
cmc
adc
mov
mov
xadd
arpl
sub
out
dec
fwait
dec
das
dec
clc
sbb
adc
cmpsl
cwtl
inc
cmp
repz
and
mov
insb
and
or
test
adc
idivl
aas
jne
in
cltd
in
add
test
or
sub
push
inc
fwait
lcall
in
jne
jmp
sbb
rclb
ljmp
sub
cmc
xchg
dec
inc
shl
nop
ja
js
jecxz
xchg
xor
mov
pop
ss
jecxz
fistl
sub
xor
or
xchg
xor
jge
xor
pop
inc
jnp
jmp
dec
cltd
fsubrs
cs
sti
mov
jno
in
add
jmp
add
add
mov
rcr
ds
imul
rorb
push
dec
pop
icebp
xor
sbb
addl
inc
inc
or
xor
addr16
sbb
add
or
sbb
dec
das
adc
sahf
cmp
or
mov
inc
outsb
pop
aam
adc
xor
pop
inc
add
mov
out
xchg
iret
ds
xlat
xlat
push
or
sub
push
adc
shll
daa
addb
dec
pop
mov
aam
je
xlat
jb
out
push
jb
dec
mov
stos
pop
mov
xchg
aad
popf
sub
aam
in
and
js
xchg
adc
mov
mov
sbb
dec
bound
adc
pop
fidivl
pop
or
sub
pushf
cwtl
mulb
outsb
es
or
shlb
mov
or
int
jno
into
incb
pop
push
dec
inc
fsubrs
js
lods
mov
ja
xchg
mov
imul
xchg
repz
sbbb
cmpsl
mov
inc
jl
aad
jg
divl
mov
stos
fwait
add
push
cmp
cmc
mov
jle
popf
sub
mov
mov
dec
adcl
adc
jl
aam
repnz
mov
mov
rcll
push
stos
in
insl
or
fimuls
and
jbe
cmpsl
mov
das
cs
sti
mov
jno
in
add
xlat
pop
jne
insb
jmp
iret
aam
adc
lcall
ss
push
push
mov
jg
hlt
xchg
out
movsl
and
mov
mov
jp
ret
test
popf
fs
popf
mov
cmp
dec
fisttps
test
unpcklps
and
ss
jo
mov
cmp
mov
adc
lock
push
add
mov
cld
or
xor
adc
out
xchg
cld
mov
outsl
xlat
dec
ficomps
pop
out
push
fistps
xchg
aas
dec
add
das
mov
pop
in
je
in
enter
stos
testb
out
and
fnsave
cmp
loop
xor
jge
rol
push
cmpsb
pop
jecxz
push
shlb
xor
sbb
arpl
xor
insl
fisubs
bound
sub
mov
mov
adc
pop
inc
push
data16
and
fldcw
xchg
shll
push
mov
js
dec
out
lods
bound
jbe
repz
icebp
addr16
jno
insl
push
adc
push
mov
hlt
xlat
dec
sub
stos
push
lret
inc
xor
dec
jl
cmp
push
add
cmp
cmp
xchg
sahf
xchg
int
jb
or
int3
adc
insb
fisubrl
push
loope
test
sub
enter
je
inc
adc
sarl
imul
xor
shl
xor
test
xchg
insl
or
xor
jbe
mov
sbb
lea
lret
aad
stos
cmp
push
inc
loopne
aaa
xchg
shlb
cld
mov
sub
jnp
and
shrb
out
adc
inc
jnp
frstor
je
inc
popf
jae
flds
pushf
push
and
int3
mov
pop
in
pop
mov
lret
mov
dec
cmpsl
mov
xor
fldenv
sbb
loopne
aas
sbb
push
cmc
adc
out
das
cmpsb
mov
pop
push
jns
orb
sbb
daa
shlb
loopne
xchg
mov
push
std
mov
sar
call
into
aaa
xor
mov
in
stc
push
add
push
repnz
dec
test
fildll
call
cmpsb
xchg
xchg
insb
jle
mov
mov
mov
xchg
std
inc
dec
mov
push
dec
movsb
inc
sub
jno
outsl
pop
adc
ja
mov
dec
inc
mov
pop
pushf
fisttpl
test
out
sub
pop
jle
out
mov
movsl
in
out
inc
jmp
ja
jnp
dec
sbb
popf
filds
jge
mov
xlat
mov
push
cmp
gs
jne
sahf
lahf
ret
xlat
xchg
pop
jmp
mov
cmpsl
ret
and
int
ds
loop
iret
enter
push
decl
ja
sbb
fmulp
shll
ficomps
cmp
mov
icebp
rolb
pop
lret
jmp
and
jns
or
jle
sub
jne
repz
addr16
pop
xchg
insl
push
pop
push
jl
or
lcall
fs
push
daa
mov
jno
inc
jb
or
push
xor
loop
and
sub
loopne
es
cltd
outsb
mov
ds
das
shll
push
and
inc
xchg
sbb
xlat
jbe
arpl
rcr
mov
jmp
push
add
lea
xor
mov
xchg
xchg
adc
cmc
cmp
lock
inc
gs
sahf
cmp
jmp
cltd
mov
pop
mov
sbb
test
adc
jb
xchg
pop
pop
cmpsb
sbb
xor
jle
or
insl
into
scas
pusha
add
sub
adc
clc
std
mov
mov
xchg
mov
push
cli
std
jbe
sarl
popf
outsl
add
mov
lods
mov
pop
cmpsl
sbb
lea
mov
mov
add
push
xchg
jg
out
mov
mov
adc
mov
aas
cli
incl
xchg
scas
cmp
imulb
aas
and
xchg
int
enter
jp
rorb
jno
insl
test
aaa
stos
scas
jg
push
cmc
add
cwtl
pusha
in
sbb
mov
mov
pop
dec
jo
mov
lock
dec
sar
xchg
cmp
xor
jns
mov
rolb
movsb
mov
out
in
rcl
in
sub
dec
sub
mov
sub
mov
pop
sbb
or
push
lret
orb
outsl
aam
mov
out
fdivrs
dec
lods
xor
outsb
cmp
push
stos
sbb
cmp
ret
out
xorb
adc
add
mov
mov
jmp
hlt
push
dec
sbb
adc
jl
sbb
xchg
mov
add
cmp
mov
loope
popf
xlat
lods
stos
cltd
jae
pop
pushf
jne
pop
jl
scas
pop
and
mov
sub
outsl
cmp
movsl
mov
addr16
cmp
add
test
sti
pop
xor
push
sub
mov
xlat
lods
mov
stc
insl
adc
int
cmp
insb
shlb
adc
cmp
push
inc
sahf
jg
mov
js
fs
dec
pop
dec
or
aas
rorl
in
pop
jp
scas
sbb
dec
cltd
xor
call
aad
pop
push
fisubrs
outsl
mov
pop
insb
dec
or
or
adc
in
mov
mov
mov
push
minps
mov
mov
pop
xchg
ljmp
sbb
push
and
xor
ss
frstor
xchg
or
and
stc
bound
cmc
add
out
addr16
or
inc
test
movsb
lods
mov
aad
sbb
int
lods
imul
push
mov
inc
lret
sbb
ja
arpl
pushf
scas
test
das
sub
jns
imul
sbb
shlb
rcll
jp
pop
inc
push
je
incl
or
lea
xor
outsl
sbb
cmp
inc
call
stos
sbb
ret
adc
add
xchg
jge
jmp
and
adc
mov
addb
ret
inc
jg
cli
cmpsb
dec
movsl
cmpsb
sub
cwtl
mov
notb
mov
inc
repz
bound
adc
cli
cs
ljmp
scas
pop
inc
sbb
inc
mov
cmp
movb
dec
jbe
cmp
icebp
or
lea
xor
dec
dec
cmc
lret
mov
cld
popf
inc
icebp
je
dec
iret
inc
cltd
xor
adc
pop
or
sub
mov
or
add
push
test
rolb
stos
es
cmp
icebp
dec
pop
mov
inc
imul
addl
js
add
es
cltd
xor
cmp
jmp
pop
lods
movsl
sbb
imul
pop
jo
mov
insl
mov
int
cmpsb
cmpsl
jmp
jmp
pushf
fs
aas
test
jmp
or
lcall
sub
idivb
aas
ret
jbe
ljmp
push
jb
or
push
pop
and
rorl
dec
mov
push
js
in
movsl
dec
adc
adc
xchg
add
in
frstor
mov
es
and
call
mov
push
ds
sbb
dec
aas
aam
repnz
mov
push
sbb
push
ror
mov
or
dec
in
dec
push
jbe
cmpsl
incl
inc
bswap
insb
cmc
in
adc
pusha
int
or
and
out
jle
pop
sti
dec
and
xor
or
rorl
pop
fs
push
lahf
xchg
mov
dec
movsb
pop
dec
mov
into
xchg
mov
inc
outsb
mov
in
mov
adc
outsb
fisubs
xchg
xchg
mov
sbb
in
xor
mov
fisttps
test
unpcklps
and
ss
xchg
idivl
les
fisubrs
mov
mov
lret
jmp
jb
leave
cmpsl
insl
mov
popf
push
call
loopne
inc
jnp
cs
adc
scas
cli
clc
sub
or
in
dec
movb
inc
shll
and
icebp
call
push
mov
in
je
and
pop
std
mov
or
cmp
and
mov
out
xor
push
fwait
jmp
js
loope
outsl
and
mov
lea
nop
in
xlat
into
xlat
push
cmp
sub
movsb
cwtl
xchg
andb
inc
sbb
hlt
push
sbb
or
pop
jle
jmp
pop
add
adc
or
and
nop
mov
leave
jle
or
insl
into
inc
int3
std
sbb
push
add
rcrb
enter
pusha
xchg
and
cmpb
jecxz
jbe
sub
aam
lea
jg
pop
mov
frstor
insl
test
hlt
pop
push
and
call
mov
mov
inc
addl
test
mov
mov
cmp
and
add
push
ds
imul
xor
or
cli
ljmp
loop
and
repz
fcompl
cmp
dec
leave
and
cmp
adc
sub
outsb
push
shl
or
or
xor
or
rolb
pusha
xor
ret
jno
outsl
pop
aam
stos
stos
sbb
insl
jp
jmp
inc
sbbl
roll
xchg
popl
add
jno,pt
adc
pop
clc
lock
pop
sahf
test
mov
or
sti
loope
xchg
fdivrl
jge
fdivr
std
xor
test
jmp
jle
popa
or
add
fwait
aam
cmp
dec
rorl
call
xlat
cltd
jne
fs
dec
iret
popf
es
movsb
cmc
lret
daa
inc
xor
inc
add
orl
jecxz
mov
push
push
rorl
pusha
bound
and
inc
mov
and
fs
daa
ret
xchg
int3
testb
jecxz
mov
mov
movsb
adc
xchg
popa
adc
loopne
lods
in
jg
inc
lea
mov
pop
pop
push
cmc
loope,pn
fmulp
shll
int
popa
loop
clc
cmp
mov
adc
inc
in
gs
lret
jmp
and
jns
or
jle
sub
jne
repz
addr16
add
pusha
call
pop
add
jmp
mov
int3
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
push
push
stc
mov
mov
xchg
mov
cld
pop
pop
push
push
push
jmp
hlt
sbb
fidivrs
insl
mov
or
mov
and
inc
push
nop
mov
pop
jmp
cmpsl
push
std
jmp
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
jmp
cmp
jbe
in
add
sub
push
dec
dec
outsl
jl
pop
jmp
mov
cs
mov
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
jmp
mov
inc
je
adc
loopne
pop
aas
pop
push
push
ror
test
clc
push
pop
push
pop
mov
xchg
mov
cld
pop
pop
xor
push
push
pop
jmp
movsb
or
mov
jmp
or
das
cmp
sbb
inc
out
aam
jb
ds
jmp
ret
inc
jns
pop
insb
xor
xchg
pop
push
push
mov
jmp
jo
outsb
setl
inc
pop
xor
cmp
pop
add
add
mov
add
jmp
int3
adc
div
fs
xchg
pop
cmp
je
push
push
inc
inc
mov
inc
cld
pop
pop
mov
jmp
add
sub
add
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
ljmp
mov
lea
nop
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
mov
push
push
pop
jmp
xchg
sahf
push
mov
jmp
jg
xchg
stos
fwait
cmp
jbe
in
add
sub
pop
jmp
push
dec
dec
outsl
jl
pop
pop
add
jmp
addr16
mov
cmpb
adc
add
loope
mov
lods
aas
and
add
and
push
jno
clc
mov
mov
dec
cld
pop
pop
pop
push
mov
jmp
mov
scas
dec
fsub
mov
sub
sldt
add
inc
je
adc
loopne
pop
aas
or
push
xchg
push
push
dec
js
xor
xor
jns
cmp
clc
mov
mov
shl
inc
cld
pop
pop
pop
push
push
jb
test
cmp
mov
mov
mov
push
pop
cld
pop
pop
xor
push
jmp
adc
push
das
cmp
sbb
inc
out
ret
daa
pop
jmp
daa
aam
jb
inc
jns
pop
sub
jmp
insb
xor
xchg
pop
add
and
push
mov
jmp
mov
inc
add
jmp
pop
xor
shlb
xor
jmp
dec
adc
add
jmp
adcb
push
jmp
call
cmp
mov
jmp
jle
sub
mov
sbb
xlat
les
sub
jmp
cs
pop
gs
dec
loope
hlt
sbb
rol
jmp
sbb
add
add
fidivrs
cmp
push
push
mov
and
inc
push
mov
jmp
push
nop
mov
lret
test
cmpsw
push
std
repnz
jmp
inc
sar
lahf
pop
jmp
in
mov
mov
test
xor
add
push
push
mov
jmp
sbb
cli
stos
or
push
and
flds
xor
add
stos
add
jmp
fwait
cmp
jbe
pop
inc
add
jmp
push
dec
push
mov
jmp
add
es
mov
jmp
mov
pop
lods
jne
jnp
icebp
push
sub
pop
jmp
inc
sub
dec
jne
jmp
enter
aaa
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
fadd
inc
jns
pop
jmp
insb
xor
xchg
pop
add
jmp
and
pushf
jmp
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
int
xchg
ror
into
out
cld
test
or
add
lds
cmp
mov
cld
pop
pop
add
jmp
jmp
cmc
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
jmp
and
inc
push
nop
mov
sub
scas
mov
shll
std
bnd
inc
sar
lahf
in
mov
mov
test
xor
imul
stos
or
sub
xchg
stos
fwait
cmp
jbe
xor
adc
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
mov
scas
dec
fsub
mov
inc
jmp
je
adc
das
jecxz
cltd
pop
aas
or
push
clc
shll
aaa
movsb
or
push
jmp
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
push
jmp
jmp
jp
mov
inc
pop
jmp
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
