stos
jne
stos
lds
xor
mov
int
xor
push
adc
fistpll
push
adc
pop
insb
and
test
mov
push
adc
ss
jne
cmp
push
adc
pop
push
push
adc
les
int3
lret
cmpsl
std
add
mov
push
push
push
adc
adc
mov
inc
push
push
adc
mov
dec
push
test
pop
jge
lods
add
inc
adc
adc
sbb
jge
sarb
push
push
adc
outsb
cmp
fs
push
lods
adc
enter
xor
fisubl
push
outsl
insb
mov
rorb
mov
out
mov
jbe
or
arpl
lret
cmpsl
sbb
popf
loopne
mov
rol
jmp
pushf
add
fldt
mov
sub
test
fs
mov
mov
xrelease
inc
push
sbb
push
adc
aaa
loop
inc
inc
aaa
dec
xor
sbbb
lea
adc
and
adc
adc
mulb
pop
adc
sub
adc
out
cmp
xor
adc
ret
jmp
jl
mov
mov
adc
sbb
push
adc
mov
push
dec
std
push
mov
lea
adc
push
adc
out
sub
bound
adc
and
adc
xchg
pop
adc
scas
movsb
mov
xor
push
adc
outsl
push
aam
adc
adc
lret
xchg
fxam
add
mov
icebp
shr
sbb
pop
rcll
insb
dec
test
cld
inc
sbbb
adc
adc
or
test
pop
test
shlb
mov
rcrb
fdivrs
adc
adc
cmpb
push
nop
dec
ret
cmp
push
jp
jo,pn
cltd
add
andl
lock
pop
push
lds
orb
add
out
cmp
loopnew
mov
cmpl
dec
scas
loope
push
scas
mov
mov
loope
decb
add
shlb
dec
dec
cmpl
mov
push
fisubs
cmp
rorl
push
xor
push
dec
lret
jo
pop
adc
shrb
fcom
ds
adc
adc
or
in
data16
cli
movsb
cmp
mov
push
adc
bound
mov
aad
inc
icebp
cs
test
out
cmp
mov
mov
adc
inc
es
or
mov
mov
ret
nop
mov
jae,pn
aas
mov
pop
adc
sub
push
mov
mov
mov
sbb
adc
adc
ret
add
cwtl
aad
shlb
jbe
adc
adc
add
xlat
jl
pop
adc
jmp
adc
adc
jl
pop
adc
xor
mov
shrl
enter
push
lret
aas
les
mov
ret
scas
test
jp
cwtl
test
mov
das
mov
je
push
adc
daa
in
fidivrs
xor
inc
jno
lcall
add
out
jae
loopne
scas
add
fstl
sbb
adc
adc
insb
das
cld
jns
std
int3
aas
mov
mov
mov
mov
cmpsb
or
inc
int
cmc
das
fstpt
adc
adc
xchg
rcll
out
lcall
mull
test
xor
xchg
ljmp
imulb
mov
cltd
jmp
js
push
adc
stos
lock
cmp
lret
add
test
push
adc
push
mov
jns
mov
adc
jne
mov
mov
aas
lock
outsl
fstpt
insl
mov
mov
leave
jmp
jl
je
pop
push
add
xchg
and
xor
pop
sub
mov
lret
adcb
adc
xor
or
fnstenv
jno
inc
fistpl
outsb
adc
inc
mov
mov
std
cli
jge
add
adc
adc
out
testb
hlt
cltd
dec
jp
aam
dec
sbb
aaa
dec
fistpll
or
sbb
out
push
enter
nop
push
ret
or
pop
mov
pusha
sub
sub
push
out
loop
adc
adc
mov
arpl
sub
lea
sub
aas
xchg
imul
add
or
stos
mov
outsl
jae
add
cmp
mov
rol
cmpsb
data16
and
movsb
iret
add
sbb
push
adc
pop
js
lods
or
jns
cwtl
dec
xchg
cld
jmp
frstor
dec
inc
xorl
orl
fmull
aad
or
pop
fcoml
push
adc
imul
in
fs
jge
test
jg
or
lahf
cmp
add
int3
cld
mov
jle
sti
test
es
or
pop
xchg
cmc
arpl
scas
test
cwtl
icebp
das
xchg
adc
push
adc
imulb
loop
sub
sahf
push
push
push
aas
dec
enter
xchg
test
mov
push
insl
dec
mov
adc
adc
adc
xchg
jb
test
lahf
push
cmp
nop
adc
adc
pop
insl
fdivr
and
into
sti
lock
sbb
push
adc
ljmp
call
mov
push
adc
loop
call
mov
int3
and
sbb
data16
push
inc
sub
dec
dec
dec
out
daa
ja
inc
and
jge
cmp
and
inc
add
frstor
pop
fisubrl
adc
in
call
sub
push
cwtl
and
jo
jecxz
push
xchg
adc
adc
push
loope
fnstcw
push
fldenv
aaa
push
sbb
jl
shll
sub
push
sub
pop
adc
stos
mov
dec
ljmp
inc
pop
adc
sbb
in
dec
jnp
cwtl
repz
xor
outsb
insl
leave
sub
push
adc
pop
cmp
inc
mov
mov
andb
addr16
jnp
test
adc
push
mov
or
sti
test
out
mov
je
dec
sbb
lret
mov
jg
pop
add
cwtl
adc
adc
sbb
jns
sbb
nop
adc
adc
ja
std
jns
cli
adc
std
jbe
add
mov
push
mov
push
adc
push
xorl
fistpll
jb
std
sti
idivb
das
or
ficompl
cli
jnp
jge
dec
popf
mov
imul
add
adc
push
adc
pusha
push
sub
out
sarb
pop
rclb
and
jb
std
stc
jge
pop
ja
pop
pop
test
sub
cmp
sub
push
addb
icebp
scas
xchg
mov
push
adc
or
insb
bound
sbb
adc
bound
sbb
xchg
fwait
imul
fstpt
sub
adc
push
jne
je
sbbl
adc
adc
hlt
stc
mov
xchg
mov
nop
pop
push
adc
and
xorl
sarb
pop
pop
adc
add
nop
and
jle
int3
popf
cmp
gs
sbb
pushl
cmp
jbe
shl
mov
stc
inc
fstpt
mov
imul
aas
ja
cltd
mov
lret
inc
pop
bound
cli
mov
movsb
mov
jg
lret
je
mov
sub
mov
fidivs
ret
fadd
int
ret
mov
fwait
shll
xor
mov
adc
adc
sbb
in
jae
fidivrs
adc
jmp
mov
stos
push
mov
std
jge
divl
imull
jnp
into
xchg
cmp
test
mov
mov
sub
cli
je
sub
ja
push
jecxz
mov
pop
inc
jmp
cli
inc
ds
jecxz
sti
data16
push
filds
xchg
dec
int
lcall
or
test
notl
sti
xlat
push
mov
daa
sub
jle
mov
int
xchg
out
sbb
inc
cmpsl
adc
mov
mov
pop
bound
aam
sti
push
jmp
jl
mov
mov
inc
lock
fstps
and
mov
imul
jl
pop
adc
xchg
mov
sbb
jno
cld
arpl
mov
add
jge
jno
in
ret
jo
cs
cmp
xchg
jl
push
adc
jnp
insl
icebp
inc
fldl
loope
ret
dec
cmp
mov
dec
pop
test
cli
cmpsb
lea
xchg
cmp
or
int
inc
lds
dec
call
mov
push
add
push
pop
in
pop
inc
lock
adc
add
jl
enter
sbb
xchg
and
mov
pushl
xchg
mov
lret
push
mov
scas
push
xchg
adc
xlat
mov
xchg
mov
or
adcl
inc
les
rorb
xchg
andl
or
lret
out
pop
sbb
push
test
xchg
pop
add
jns
int3
imul
stos
sbb
push
adc
sub
test
popa
sub
sub
push
sub
scas
lcall
adc
sub
mov
cmp
mov
adc
sub
mov
sysenter
jo
sbb
das
sarb
mov
iret
fcos
hlt
fstl
cmpsw
pop
push
cli
dec
inc
inc
mov
adc
mul
in
mov
push
adc
loop
lods
orl
and
aas
jg
mov
les
out
enter
mov
cmpsb
mov
in
mov
fistpll
repz
std
sti
mov
fmull
jg
mov
int
add
pop
loop
bound
mov
scas
jg
sbb
jbe
cmp
adc
jl
mov
jbe
mov
xor
push
dec
xchg
addb
add
mov
mov
ss
shl
xchg
push
cld
sub
xlat
cmpsl
sbb
sub
je
mov
stos
xchg
adcl
xchg
ret
jns
xlat
cmpsl
mov
mov
inc
sti
jmp
clc
push
jns
or
adc
cmp
negl
loope
cmp
or
mov
push
mov
fidivrl
rcrb
xlat
cmpsl
lret
pop
bound
fwait
les
jns
mov
push
in
nop
test
xchg
loope
lret
mov
mov
dec
scas
sti
pushf
hlt
and
pop
repz
add
fisttps
push
lret
xor
jl
adc
adc
ja
push
dec
hlt
mov
cmp
stos
mov
sahf
mov
jmp
cld
into
jmp
cmp
jbe
bnd
and
mov
nop
lret
je
mov
sub
mov
and
jbe
jl
lock
push
sti
gs
mov
sbb
cltd
loopne
push
adc
mov
cli
and
jmp
sti
clc
pop
push
adc
or
and
and
sbb
cltd
repz
outsl
dec
je
fdivr
jnp
adc
out
lea
jnp
adc
cs
imul
or
mov
push
adc
cltd
iret
repnz
das
lods
out
jb
stc
sub
fisubs
in
mov
fsubrl
sbbl
push
dec
and
aam
adc
out
repz
subb
mov
dec
popa
lret
xor
and
dec
mov
xor
addl
out
inc
xchg
mov
decl
cmpsb
stos
sbb
incb
push
jno
xchg
dec
xchg
loopne
push
or
ss
xor
aam
inc
fdivrl
push
push
or
inc
lahf
movsl
mov
insl
lret
jno
inc
lret
mov
pushf
scas
scas
xchg
push
repz
pusha
mov
mov
adc
aas
jl
call
enter
gs
ret
mov
fbld
push
jecxz
pop
cltd
and
nop
adc
adc
or
bound
adcb
jno
cmpsb
cmp
pop
inc
ret
dec
xchg
dec
test
mov
sti
icebp
xchg
jnp
mov
add
int3
aam
mov
out
or
fisubl
loopne
lea
lahf
add
pop
sbb
dec
sarb
loop
pop
in
loop
vphaddbd
mov
lods
jp
roll
test
mov
mov
or
sbb
outsb
out
pusha
sbb
adc
lea
cmp
out
dec
pop
adc
push
xchg
dec
repz
xchg
xchg
sbb
pop
cltd
dec
xor
push
lock
ffreep
pop
xchg
js
outsl
lods
jo
mov
add
xchg
nop
adc
adc
or
push
mov
sub
or
fmuls
jle
ljmp
mov
push
adc
adc
lds
pop
sub
push
out
or
mov
adcb
pop
imul
mov
mov
mov
inc
scas
jne
jp
js
daa
cli
movsb
aas
fisubs
dec
inc
loop
adc
adc
xor
jne
fistps
and
mov
cmpsl
mov
insl
mov
decl
add
sbb
inc
test
mov
dec
jbe
and
and
mov
bound
adc
sbb
jg
leave
test
and
test
push
call
inc
xorb
or
mov
loopne
out
inc
or
add
jno
cli
mov
add
les
mov
jne
fld
popa
pop
inc
jp
out
sahf
jne
adcb
inc
gs
adc
xchg
pop
packuswb
jo
or
aaa
mov
ss
pop
dec
int
sub
mov
jb
fxsave
mov
fisubs
sbb
xor
insl
mov
sbb
push
mov
and
les
xor
mov
push
inc
inc
mov
push
jp
lods
mov
rol
ss
cmp
bnd
loopne
std
stos
stos
or
inc
xchg
mov
adc
dec
push
jle
fs
mov
test
test
scas
add
nop
and
mov
adc
cmp
cltd
cmp
pop
out
dec
addb
adc
jb
or
movsl
inc
mov
in
jge
lods
mov
push
pop
aad
adc
push
inc
fidivrl
std
cld
pop
jo
pop
adc
cmp
and
pop
xchg
jne
pusha
cld
jo
dec
addb
mov
ja
inc
add
pop
insb
mov
sbb
adc
les
sub
ret
cli
jbe
dec
test
data16
or
js
dec
cwtl
sub
cli
std
adc
jge
test
and
ret
and
sbbb
dec
jno
jae
in
in
push
sub
sub
adc
test
dec
mull
adc
cmp
mov
dec
scas
sub
arpl
ret
or
xchg
enter
add
in
push
cmp
inc
dec
mov
std
mov
sub
add
lret
adc
and
xor
popa
or
sbb
popa
enter
clc
lret
xchg
scas
push
or
xchg
ljmp
pop
stos
sub
daa
and
std
push
xchg
mov
repz
femms
jg
cmp
pop
add
pop
ds
xor
push
mov
das
dec
popl
adc
pop
jp
roll
test
jl
addb
scas
mov
push
sahf
push
pushf
rorb
xor
push
insl
out
leave
inc
add
clc
mov
sub
stos
insl
enter
fisttpl
rclb
std
mov
shl
mov
pop
and
mov
xchg
movsb
xchg
sti
icebp
mov
test
cld
repnz
cmpsl
mov
xlat
shll
dec
jnp
jge
push
pop
xor
mov
cltd
adc
sahf
lods
jge
fcompl
push
fmull
dec
pop
add
movsl
insl
in
in
cmpsl
icebp
rcr
fisubs
sti
ss
pop
xor
int3
xor
lret
sub
sub
dec
mov
nop
jbe
loope
sbb
sti
fcomp
popa
pop
add
xchg
jle
sbb
push
jbe
dec
and
lea
cwtl
push
inc
push
or
es
ficomps
sbb
sti
aam
mov
rorl
xchg
stc
test
loope
popa
imul
andl
ljmp
sahf
lods
test
sti
mov
mov
loopne
mov
mov
and
mov
inc
xor
jne
shlb
dec
mov
add
sbb
test
arpl
rolb
mov
adc
rcr
dec
or
inc
or
inc
mov
stos
mov
jge
or
and
out
enter
stc
fisubs
mov
add
shl
in
loop
jae
cmp
out
movsb
cmpsl
lods
push
sub
movb
adcb
lret
mov
or
adc
xchg
insb
inc
dec
int
push
pop
and
push
cmp
add
scas
add
add
and
repnz
xchg
mov
and
mov
cmpsb
aaa
sbb
inc
mulb
or
add
sbb
out
lock
inc
add
adcl
rcll
mov
aaa
sbb
ja
aaa
add
and
pop
out
lods
add
xor
or
add
bound
subb
add
adc
cwtl
and
xchg
es
rorb
les
add
mov
jne
and
adc
insb
push
stc
jno
push
push
mov
sbb
lret
inc
int3
mov
stos
mov
add
les
sbb
sbb
aaa
cld
cmp
xor
mov
fldcw
fxch
mov
xor
dec
aas
xchg
scas
scas
jo
sub
and
xchg
xchg
cmpsb
sar
mov
dec
push
bound
mov
add
xor
popa
sahf
inc
xchg
and
data16
adc
cmpsb
or
jbe
out
popf
or
add
sbb
dec
loopne
bound
mov
sub
push
sub
jo
ret
or
fdivs
clc
outsl
sahf
jo,pt
dec
jnp
data16
cmp
mov
jl
std
jp
cmp
xor
mov
mov
sub
push
add
adc
or
notb
sahf
sbb
push
adc
push
cmp
rcrl
cwtl
add
stos
sbb
adc
xor
mov
and
sub
addr16
mov
lods
xchg
lret
pusha
mov
inc
xchg
sub
shll
or
lret
insl
orb
dec
inc
inc
sub
sti
and
xchg
cmpsl
fs
jmp
fwait
mov
test
xor
ret
ja
mov
aas
test
push
xor
movsb
imul
nop
adc
adc
pop
popl
pop
test
jl
add
sbb
pop
pop
or
jns,pt
ret
ja
add
push
mov
sti
jne
pop
push
pop
fsubs
das
mov
stos
jno
mov
andl
add
in
sub
mov
adc
adc
sbb
xor
pop
lret
nop
jb
pop
arpl
pop
stc
mov
jne,pt
cmp
xchg
nop
adc
adc
dec
call
sbb
mov
mov
push
adc
inc
jge
hlt
mov
in
sarb
cli
out
jg
lret
or
fcmovbe
fs
xor
adc
test
xchg
in
jmp
jge
outsb
sti
rol
lods
and
add
fcmovu
stos
lods
lock
in
fmuls
das
test
out
incb
fnsave
test
xchg
mov
jmp
test
xor
xchg
fidivs
fs
or
out
das
mov
jnp
popa
or
xor
sub
mov
xchg
rorl
sbb
ds
xchg
xchg
xchg
movsb
imul
inc
test
adc
sub
mov
bnd
pop
aam
push
xor
fcom
mov
xchg
mov
xor
xchg
add
sarl
mov
mov
lcall
xor
push
pop
fs
dec
adc
dec
sub
orl
and
or
inc
push
repz
jge
repz
js
ret
stc
dec
or
inc
jp
add
add
std
jbe
mov
cmp
mul
jo
cmp
cmp
dec
popf
cmp
ret
mov
jmp
pusha
and
adc
repnz
ficoms
jg
pusha
push
jg
les
add
jbe
xchg
or
fs
fistpl
xchg
cmp
std
je
push
mov
mov
imul
xorb
or
add
stc
push
xor
sub
jle
movhps
inc
and
push
mov
mov
clc
icebp
imul
nop
and
bound
subb
loopne
or
pushl
or
pusha
pop
or
bound
test
sar
sbb
inc
sub
inc
pop
adc
sbb
in
add
dec
jb
push
iret
mov
push
cmp
cli
into
cmp
sub
or
nop
adc
adc
loopne
cltd
add
das
fdivrl
add
mov
xchg
sbb
pusha
mov
cltd
bound
push
jne
pushf
adc
xor
or
add
into
mov
xor
push
int
push
scas
pop
adc
sub
jb
or
fstpt
sbb
jnp
shlb
adc
ret
arpl
or
add
lcall
pusha
es
and
adc
mov
add
mov
adc
push
and
out
push
dec
orb
push
dec
leave
adc
test
push
js
mov
add
sbb
mov
sub
xchg
mov
mov
sub
jp
add
adc
pop
hlt
ss
xchg
push
add
fwait
sti
cmp
push
fcompl
adc
bound
sub
and
adc
mov
leave
inc
testl
xor
and
push
aam
dec
push
ret
pop
dec
pushf
std
cmp
lret
outsl
xchg
add
leave
push
adc
dec
inc
inc
xchg
xchg
xchg
xchg
mov
dec
push
xor
add
imulb
mov
sti
cli
cld
enter
xchg
es
pop
pop
ss
arpl
test
pop
in
pop
daa
jle
sbb
pop
jnp
gs
adc
xchg
mov
and
fcompl
ret
xchg
pop
sub
push
or
xor
aaa
pop
cwtl
fs
je
xchg
jle
push
stos
jl
loop
adc
push
insb
fs
aas
cmp
sbb
adc
outsl
dec
push
clc
mov
stos
data16
jae
cmp
insb
mov
or
dec
jp
pop
ret
xchg
mov
cmp
mov
insl
and
repz
inc
cwtl
jae
jnp
idivl
mov
icebp
out
push
push
pop
call
inc
add
fidivs
in
out
jmp
jge
inc
nop
adc
adc
adc
mov
imul
roll
loopne
in
popf
pop
aad
lods
pop
push
mov
push
inc
pusha
mov
test
mov
mov
out
int3
cmp
adc
je
movsb
loop
jnp
mov
push
shrl
jbe
pop
and
pop
fildll
xchg
xchg
hlt
mov
std
jle
idivl
sub
push
rcl
and
sub
dec
and
cmp
xchg
push
fdivl
mov
mov
add
mov
mov
fisttpl
lcall
cmp
sub
fs
lret
and
adc
mov
pop
sti
push
add
into
dec
pop
pop
inc
mov
push
insb
cltd
push
push
idiv
pop
pusha
add
call
out
roll
jmp
inc
or
and
xchg
ss
cwtl
mov
xchg
add
jbe
sbb
in
aas
mov
dec
push
jo
clc
insl
pushf
jge
jo
pop
ja
add
je
or
pop
jae
and
pop
ficoms
int
push
scas
xchg
ja
out
adcb
lret
dec
je
das
or
add
push
sub
nop
mov
cld
jg
xor
mov
mov
les
pushl
pop
lea
add
xor
add
aam
arpl
insb
inc
inc
int
push
cmp
arpl
add
cmp
clc
jbe
jp
and
nop
imul
sbb
sub
dec
into
imul
lret
push
adc
cmp
pusha
inc
add
and
sub
push
sbb
xor
mov
push
and
mov
lret
lahf
mov
jp
add
add
jae
and
stos
mov
jle
xor
cmp
adc
xchg
dec
jae
pushl
add
and
in
inc
xchg
jp
push
mov
int3
mov
push
xor
or
add
hlt
adc
or
pop
xchg
and
jbe
xor
pop
sub
pop
push
addb
jb
or
add
test
outsl
push
xor
add
xor
sub
mov
or
add
adc
or
movsl
pop
sub
mov
pop
mov
or
add
cs
xchg
xor
xchg
push
sbb
mov
ret
es
mov
je
mov
std
std
std
jo
adc
mov
test
mov
sti
lret
add
iret
and
adc
and
adc
add
mov
add
inc
and
adc
add
clc
and
adc
and
adc
daa
add
cmp
add
mov
or
xor
cmp
movsb
push
inc
int3
std
ret
out
aad
jne
sti
iret
and
insb
jmp
pop
mov
outsl
aad
adc
dec
add
push
sbb
xor
add
mov
cwtl
jge
and
push
adc
fisttps
add
mov
sarl
scas
sahf
aaa
cld
mov
or
aad
enter
mov
xor
fcmovnu
mov
add
mull
pop
pop
adc
imul
fdivl
ret
mov
fsubr
cs
jae
aam
jg
fnsave
push
adc
outsb
rclb
adc
add
pop
lds
xchg
call
and
jmp
cld
inc
mov
pop
pop
adc
pop
xor
mov
add
rcrb
jbe
jle
ljmp
adc
push
mov
dec
shl
addb
aad
dec
scas
in
inc
repnz
mov
lret
xchg
sub
out
xchg
movsb
dec
pop
nop
mov
push
inc
sbb
mov
iret
mov
sub
hlt
or
or
sbb
xorb
xchg
inc
sub
in
push
mov
nop
mov
nop
pop
rcrb
cmp
push
sbb
push
xor
and
dec
xchg
mov
sub
leave
mov
ss
jne
cmp
xor
clc
or
sub
xchg
lret
mov
rolb
dec
je
mov
adc
fs
and
or
lods
repz
and
push
jl
xchg
jp
and
scas
mov
add
or
scas
jnp,pt
stc
mov
pop
pop
add
nop
adc
sub
push
mov
push
adc
inc
lret
shll
push
adc
mov
icebp
loopne
push
adc
popa
xchg
and
push
mov
push
bound
sarb
sbb
adc
adc
adc
cmc
xchg
add
inc
frstpm(287
xor
pop
jae
ss
mov
in
cwtl
jge
cmpsl
lret
add
pop
mov
bound
jecxz
inc
insl
adc
jl
incb
mov
pop
jne
fidivs
cmp
ljmp
mov
lret
fildl
repz
lock
scas
mov
js
mov
push
cld
sub
xlat
cmpsl
mov
pop
jnp
stos
fwait
jae
lods
sbb
adc
sar
xor
xchg
and
jmp
cwtl
push
lret
pushf
std
shll
out
lret
js
pop
inc
pop
cli
std
mov
imul
repnz
enter
adc
inc
sbb
adc
stc
jae
aas
jne
cmp
adc
and
jno
sub
sub
and
inc
addb
xchg
cmc
adc
cwtl
jge
push
stos
lds
jno
hlt
xchg
xlat
mov
mov
xor
cltd
xchg
cmp
sub
hlt
mov
sahf
adc
mov
or
jl
add
mov
inc
rep
test
inc
or
mov
sub
xchg
les
call
mov
scas
je
add
aaa
aas
ss
mov
and
aam
adc
out
push
jle
lahf
sti
jge
lock
jl
mov
fnstsw
sbb
adc
fdivl
rcrb
push
adc
aam
mov
fidivs
mov
adc
lock
enter
pusha
fprem1
mov
xor
fyl2x
jbe
fdivp
je
in
dec
xor
sbb
pop
xor
pop
push
mov
sub
lock
shl
in
adc
mov
out
inc
stc
push
js
xor
int3
cld
mov
mov
push
outsb
or
adc
ret
dec
loopne
push
xchg
mov
xor
jo
lock
rol
mov
push
adc
cs
scas
and
cmpsl
ja
cmpsb
sub
sub
sub
pop
push
adc
clc
sbb
adc
sbb
aaa
xor
inc
dec
fsts
push
pop
pop
adc
and
adc
addb
push
adc
adc
add
aam
out
mov
xor
aad
adc
nop
les
dec
pop
adc
repz
sahf
lret
xor
pop
adc
jns
mov
scas
pop
in
adc
adc
adcl
mov
arpl
bound
adc
test
insl
scas
jmp
jno
ljmp
es
fcomps
mov
lret
sub
mov
nop
xchg
aas
push
pop
shl
mov
cmp
push
adc
int
aad
mov
flds
into
xchg
stos
push
push
push
adc
imul
movsb
adc
adc
adc
adc
pop
leave
js
xor
jns
nop
adc
inc
add
in
xor
push
mov
sbb
push
adc
aam
add
cmpsb
cmp
fadds
adc
xlat
jno
ds
mov
gs
add
sub
lea
in
fstpt
testb
dec
push
fstpl
movsl
and
inc
int3
cmp
outsl
ja
loope
ror
sub
faddp
outsb
cmpsl
dec
movsb
jmp
ret
jecxz
aad
adc
adc
mov
pop
pop
jo
pop
adc
mov
idivb
ficompl
loopne
sbb
push
jmp
test
cmp
adc
xlat
mov
arpl
out
nop
push
jg
jb
mov
adc
xchg
jb
pop
mov
int3
fwait
stc
adc
sahf
xchg
dec
call
pop
jo
pop
mov
mov
jne
outsl
pop
jno
inc
cmp
push
out
paddusw
mov
test
jnp
clc
xorb
mov
adc
mov
adcl
xchg
mov
pop
pop
adc
aaa
jae
jp
std
sti
testb
jbe
sub
popf
cmp
push
xor
sub
mov
stos
jbe
add
dec
call
popa
mov
clc
js
addr16
lock
cli
imul
and
jl
pop
adc
sub
mov
mov
les
data16
adc
mov
fisttps
pause
ror
rcl
aaa
sub
lret
add
push
mov
jl
add
jb,pn
mov
sbb
jle
icebp
int
cmp
cmp
stos
les
add
adc
add
mov
inc
xchg
and
mov
loope
enter
leave
loope
mov
jo
sub
and
mov
rclb
adc
cmpsb
arpl
mov
xchg
pop
addb
fidivl
and
sbb
mov
insb
adcb
add
mov
push
adc
push
add
aam
pop
xchg
and
jg
into
popf
cmp
je
pop
mov
mov
xor
inc
xorb
push
add
mov
inc
js
sbb
push
dec
mov
les
dec
mov
push
add
add
stos
mov
cli
mov
int
insl
xor
arpl
xorl
push
or
adc
aaa
mov
outsb
adc
inc
adc
jo
cmc
adc
push
bound
fdivrl
pop
pop
adc
mov
mov
aaa
add
fdivrs
cmpsl
jl
testb
hlt
pop
adc
push
mov
loope
hlt
out
xchg
jl
out
cs
jns
movsb
cmp
push
scas
mov
test
scas
and
movups
and
push
push
mov
cltd
test
or
mov
js
ss
pop
hlt
cmp
push
out
lret
lret
mov
xor
cs
jbe
pop
pop
jo
idivb
xor
ss
sahf
jne
xor
jbe
addb
loope
aas
cli
jo
add
push
outsb
hlt
push
and
inc
jecxz
scas
pop
cmp
testl
dec
jge
adc
adc
sahf
cmp
insl
sahf
mov
mov
cld
ret
xor
scas
imul
mov
jecxz
lcall
ret
gs
les
mull
out
lods
fwait
imul
mov
sbb
repz
mov
dec
fsubrl
push
push
jae
out
rorb
call
and
aam
xchg
fwait
nop
orb
or
xor
ffree
lahf
shrb
add
xor
fstp
mov
inc
or
repnz
mov
mov
adc
inc
fisttps
sbbb
scas
int
xor
dec
add
in
pop
push
fsub
push
loop
vpmacssdqh
out
test
xchg
adc
adc
in
sub
jge
mov
cmp
adc
xor
xchg
cmpsb
gs
jo
adc
adc
lahf
xor
shrl
fcmovbe
add
pop
addr16
push
xor
dec
push
arpl
outsb
pop
lock
enter
aas
test
fwait
daa
inc
mov
or
push
pop
or
or
and
mov
scas
jo
out
clc
push
in
aaa
inc
outsl
shr
mov
repnz
push
insb
stos
pop
pop
add
adc
loopne
daa
addr16
adcl
add
add
xor
pop
pop
xor
repz
adc
mov
js
mov
add
pop
je
push
xor
ja
xor
out
sub
push
push
mov
cmp
lahf
rcrb
jg
mov
mov
jb
add
mov
push
cmp
movsb
xor
mov
shll
stos
cli
aas
sbbl
data16
aas
mov
cmp
mov
fcomp
mov
adc
mov
cmp
mov
iret
jp
adc
cmpsb
sbb
xor
xor
lds
adc
adc
les
push
adc
jb
jmp
mov
call
pop
push
int
add
pop
repnz
ljmp
xor
ss
mov
xor
mov
jle
adc
je
lods
add
and
jecxz
xchg
outsb
ret
popf
cmp
outsb
mov
lahf
jg
lahf
sti
jge
repz
lea
cli
mov
add
js
adc
dec
push
xor
adc
jl
repnz
jle
cltd
insb
cmp
je,pn
adc
add
sti
jl
in
jo
std
mov
pop
sub
insl
dec
jae
shl
dec
sbb
ss
cmp
jnp
cwtl
xor
sbb
push
ret
into
les
jne
std
xor
fmulp
push
mov
push
pop
or
addr16
cmp
adc
dec
popf
imul
iret
and
outsb
jne
testb
repz
iret
push
mov
and
jae
jg
xlat
iret
dec
adc
mov
jbe
shld
mov
mov
out
lret
aad
adc
push
cmp
aaa
mov
mov
add
cmp
mov
clc
scas
adc
es
jbe
jmp
sbbb
fwait
adc
les
cmpsl
inc
or
sbb
mov
mov
pop
loope
add
sbb
test
push
addb
lret
inc
sub
ss
mov
sahf
xchg
inc
mov
mov
mov
jae
jne
stc
sarl
out
xchg
or
jl
aas
push
lret
cltd
push
mov
repz
xor
fsts
fnstcw
adc
mov
pop
pop
adc
imul
sahf
mov
sbb
pop
mov
call
cmp
lock
sar
sbb
mov
clc
call
sbb
jl
loopne
loop
mov
add
pop
mov
cmp
sub
inc
dec
sub
dec
xlat
clc
fistps
lret
and
adc
lcall
addb
mov
push
ret
pop
mov
push
mov
mov
test
mov
pop
lods
sbb
adc
add
aam
pop
cli
div
xchg
nop
jmp
pop
and
sbbb
adc
push
jg
mov
or
dec
flds
loop
add
je
enter
sub
sbb
adc
sub
jne
imul
pop
adc
loope
arpl
mul
dec
loopne
cli
loopne
push
and
dec
shlb
testl
add
and
add
outsl
or
pop
rcl
mov
jae
sbb
mov
out
mov
notb
sbb
push
nop
dec
in
fisubrl
inc
repnz
xchg
nop
pop
cmpsb
pop
lds
or
call
lds
bound
sarb
push
rcl
mov
cmc
stos
cmp
adc
push
es
in
jo
sub
test
ret
les
stos
push
or
repz
out
movsb
cwtl
xchg
cmp
imul
insb
inc
sub
lret
push
repnz
mov
mov
fldt
stc
push
jbe
push
dec
into
cmc
das
or
jg
push
mov
add
mov
jl
mov
mov
push
push
adc
cli
sbb
incl
call
dec
sbb
aam
sbb
adc
jl
movb
hlt
sub
jbe
stos
je
scas
int
stos
cmpsb
mov
in
sub
adc
xchg
pop
insl
pushf
cmp
lret
push
adc
add
hlt
push
out
and
xchg
mov
sbb
adc
call
adc
adc
sub
adc
sti
testb
adc
cmc
lds
cmc
les
incl
ljmp
daa
test
sbb
lahf
xor
cltd
cmp
jl
sarl
ficoml
dec
pop
adc
test
dec
mov
insb
cld
xchg
rcl
outsl
movsb
lock
stc
scas
jo
and
in
xchg
outsb
inc
lret
jbe
xchg
jae
lret
jno
mov
mov
data16
mov
shl
jle
popa
jmp
ja
sbb
hlt
adc
lods
into
and
mov
xor
xor
scas
cli
popf
jno
cmpsl
dec
lret
push
adc
jl
and
mov
jns
hlt
outsl
mov
sbb
ror
lds
lahf
mov
sub
jmp
mov
sub
out
adc
push
pusha
in
adc
adc
mov
mov
mov
mov
addb
cmp
ds
into
pop
jo
jmp
xor
shll
outsl
out
jmp
sarb
push
in
sahf
dec
push
repz
mov
sbbb
clc
les
push
adc
and
jb
ss
sub
dec
shlb
dec
jo
pop
adc
xor
pop
rorl
inc
in
mov
inc
mov
pop
stos
mov
push
out
loop
sbb
test
mov
fldl
cs
call
popa
addr16
push
lds
pop
adc
push
lods
mov
shl
loope
shrb
add
mov
or
adc
mov
daa
cmp
lcall
pop
pop
cmc
adc
pusha
jo
pop
adc
adc
pop
cmc
pushf
mov
jbe
pop
or
insl
popa
inc
bound
incl
movsl
xchg
test
pop
ror
ja
ds
loop
in
push
aas
sub
pop
aam
inc
xchg
mov
iret
mov
ljmp
add
and
push
loop
je
test
jnp
adc
adc
adc
add
xlat
pop
jae
orl
push
lods
xor
hlt
adcb
push
mov
push
jno
rorl
inc
notl
jl
jno
push
or
fwait
cmp
adc
gs
adc
adc
mov
add
and
cltd
shlb
insl
pop
aaa
repz
sub
pop
sub
mov
push
lods
js
mov
popa
jb
pushf
pop
adc
ret
jae
sub
pop
adc
dec
dec
js
push
or
hlt
mov
adc
xor
adc
cvtpi2ps
in
push
sub
icebp
lahf
add
je
inc
std
or
inc
cmc
data16
sub
pop
hlt
rcr
jp
test
lahf
subl
sub
pop
out
outsl
adc
xchg
loopne
mov
adc
jbe
pop
push
sub
mov
and
pop
adc
rolb
or
push
adc
lods
sub
pop
testb
add
push
push
adc
cmp
call
in
fcom
jge
int
cmp
icebp
mov
fcoms
push
adc
jl
add
aad
or
aam
sub
mov
sbb
jbe
shrl
lret
cltd
rorb
pusha
sti
pushl
stc
adc
adc
jns
and
les
mov
xor
add
roll
and
pusha
pop
pop
jns
out
add
lahf
push
sub
lret
ja
push
mov
adc
adc
mov
ss
jl
outsb
push
xor
stc
push
pop
mov
enter
adc
inc
scas
add
push
and
xchg
jl
push
and
pop
mov
imul
mov
vpmaxuw
lret
or
mov
push
adc
mov
and
in
adc
adc
fbld
and
cltd
jecxz
sbb
lahf
push
sub
mov
adc
aas
lock
cld
sti
idivb
inc
xchg
int3
mov
les
lock
std
xchg
lock
insb
call
icebp
pop
sub
xor
push
iret
sti
jmp
fisubl
xchg
jne
pop
xchg
aam
push
adc
sub
or
mov
imul
iret
outsl
std
rclb
push
adc
mov
or
je
out
add
dec
cmp
xor
sub
bound
mov
ds
div
or
icebp
cmp
pop
icebp
leave
stos
xchg
push
mov
test
fistps
adc
clc
in
push
adc
cmpsl
and
add
data16
cwtl
ljmp
ret
xor
repz
int3
cltd
call
xchg
adc
or
dec
push
in
movsb
aas
lods
pop
dec
xchg
pop
adc
xor
dec
pop
or
mov
adc
cmpsb
out
test
and
out
mov
inc
out
push
loopne
jp
dec
sahf
add
sarb
loope
ljmp
popa
sub
cmp
adc
ja
or
push
es
pop
ss
jmp
aam
mov
mov
enter
jno
loopne
push
or
nop
mov
dec
mov
les
push
adc
stos
sub
enter
loopne
cmp
in
mov
cli
std
loopne
push
adc
int
push
shll
es
call
cmp
pop
xor
popa
lods
sbb
leave
xor
or
push
sbb
add
test
xchg
dec
inc
test
jns
fstpl
and
push
add
dec
adc
lock
mov
adcl
aam
aad
prefetch
sahf
xor
in
inc
imul
inc
jno
fcmovb
cmp
loop
in
sbb
dec
in
leave
movsl
aaa
aas
mov
lods
dec
popf
add
iret
pop
subb
push
fs
scas
sbb
adc
adc
and
cmp
aas
loop
imul
pop
fisubrl
outsl
test
cli
repz
dec
fdivrs
add
out
shll
and
adc
adc
adc
sub
idivl
lahf
flds
hlt
js
sub
rcrl
cwtl
stos
in
adc
adc
stos
add
cld
les
push
adc
nop
sbb
shlb
mov
call
adc
and
out
aad
inc
dec
jg
jo
pop
adc
lods
xor
push
jae
mov
outsl
iret
gs
test
jno
fimull
mov
mov
ret
mov
sahf
sarb
loop
cmpsl
nop
sub
jb
adc
add
out
pop
es
or
xchg
mov
adc
subb
fcoms
push
adc
and
jecxz
push
stc
and
and
aad
adc
call
aas
fistpll
inc
les
outsb
xchg
stc
lods
fcomi
cmpsb
jae
jae
pop
jg
mov
lods
jbe
push
mov
dec
mov
int
cmpsl
jb
cmpsl
int
sub
das
stos
adcb
lods
adc
jnp
mov
fwait
push
jne
out
in
shll
lea
hlt
mov
mov
jge
jl
stos
xchg
fldenv
or
jle
pop
jbe
mov
cli
aas
movsl
mov
neg
mov
test
sahf
pop
xor
xor
mov
adc
stos
jbe
jnp
shl
xchg
push
les
push
scas
dec
loopne
sbb
mov
std
jb
jmp
and
mov
call
clc
cld
stos
xlat
xor
repz
jg
std
lods
jge
lret
xor
fsubrp
lock
outsb
sbbb
and
bound
sub
pushl
clc
jae
add
sub
in
jnp
inc
lret
mov
repz
lcall
pop
adc
ljmp
out
inc
inc
push
insb
mov
shlb
outsl
mov
hlt
adc
adc
cmp
or
lock
adc
and
sti
insl
sbb
mov
int
fidivrl
addb
mov
sbb
loopne
push
adc
and
imul
ret
aam
loop
lahf
divl
out
mov
adc
adc
invd
lret
lock
adc
cmpsb
fnstsw
aaa
inc
into
sub
out
and
mov
cltd
push
xchg
lods
dec
lods
call
push
adc
clc
adc
adc
sarl
popa
pop
lock
pop
adc
push
adc
jle
cmp
dec
lock
adc
mov
add
dec
leave
jbe
les
pusha
jge
jl
xchg
cli
jne
adc
movsl
loopne
push
adc
inc
ffreep
and
pop
sbb
mov
pop
lea
js
lock
repnz
push
adc
pop
aam
adc
adc
push
sti
adc
scas
cmp
es
sbb
adc
push
les
ret
and
sbb
adc
dec
lock
xchg
out
mov
or
fwait
mov
lea
fcmove
inc
sub
pop
fwait
jae
inc
or
xchg
and
ret
hlt
out
push
push
push
fdivp
insl
add
pop
in
ret
rorb
pop
fnstenv
push
rcrl
test
push
cmp
mov
sbb
adc
add
push
xchg
lret
rcrb
push
adc
es
push
and
cmp
adc
and
jne
xor
data16
adc
movsb
mov
jl
pop
in
inc
and
int
push
dec
dec
mov
sarb
pop
pop
mov
mov
movsl
rolb
das
dec
dec
or
sbb
dec
js
push
push
rclb
mov
inc
adc
mov
sbb
in
das
outsl
jbe
adc
push
jmp
cmp
sub
pop
xchg
dec
popa
ljmp
cs
fwait
cmpsb
lods
cmp
mov
aam
das
sbb
insl
push
pop
pop
ret
vcvtsd2ss
dec
mov
sub
mov
cmpb
mov
dec
rolb
ret
sti
test
ljmp
push
inc
or
jp
sbb
lcall
adc
popa
lods
ja
xchg
pushl
popf
daa
ljmp
hlt
xchg
add
scas
stos
nop
stos
movsb
xchg
mov
daa
sti
push
cli
ja
cmp
mov
outsb
and
or
insb
fidivs
cmp
repz
dec
popa
insb
and
je
jmp
xchg
addr16
leave
repnz
scas
cli
sub
xlat
cmpsl
jae
fucomp
hlt
divl
jne
repz
mov
imull
mov
in
pop
out
dec
cmpsb
push
mov
mov
lock
dec
mov
std
jno
in
pushf
mov
loope
in
pop
aas
ja
xchg
fwait
jnp
aas
or
decl
inc
scas
fmul
jp
das
int3
imul
popf
shlb
xchg
stc
jae
push
mov
sti
jne
cli
fisubrs
ret
addr16
hlt
jge
sahf
mov
cmpb
ret
ss
xlat
ja
lret
jnp
sarl
cs
xor
fildll
test
stos
fsubrl
call
jbe
je
lret
jge
lret
jg,pt
std
pop
jp
inc
fmull
std
stc
adc
into
or
je
test
xor
lret
mov
clc
mov
add
out
mov
je
cli
movsb
scas
addl
mov
sbb
sub
loop
fidivs
and
das
cmp
mov
ja
clc
je
lock
xchg
mov
ljmp
adc
jno
int3
enter
push
clc
jae
idivl
push
icebp
outsl
sbb
mov
mov
or
add
jg
divl
xlat
ss
sarb
cmp
aam
xchg
insb
or
push
out
inc
jle
hlt
lods
rorl
scas
in
in
lret
and
lea
pop
push
ljmp
out
out
fildll
fists
cmpsl
fistpll
out
xchg
xlat
adc
pandn
sbb
push
call
xchg
dec
mov
into
fcoms
test
cmp
mov
cmp
sub
or
or
out
loope
dec
lret
popf
js
push
sbb
movsl
adc
xorl
in
lock
lret
push
arpl
ret
mov
cwtl
cld
mov
movsb
pop
sub
mov
sahf
pop
or
fsub
popl
std
add
pop
lods
jno
imul
mov
loope
jmp
bound
mov
fwait
xor
xchg
adc
inc
es
movsb
pop
mov
stc
jb
test
add
mov
cmovae
inc
mov
enter
rol
pop
insl
fdivr
cmp
gs
nop
movsb
inc
rorb
add
outsl
or
xlat
ds
or
mov
enter
pop
jnp
inc
insl
lcall
inc
inc
clc
and
shll
adc
xchg
repnz
jb
mov
rcrb
inc
cltd
jecxz
sbb
push
or
loopne
clc
mov
push
cmp
fisubrs
and
mov
movl
fndisi(8087
push
xchg
mov
or
loop
sub
mov
dec
rcl
push
imul
lahf
mov
rcrb
sbb
fdiv
loope
pushf
outsb
std
xchg
mov
inc
packuswb
push
into
adc
pop
aas
pop
or
sub
or
mov
adc
mov
sbb
fadds
or
push
inc
notb
aaa
shlb
in
test
xor
and
push
push
imul
aaa
shrb
jp
out
lock
adc
push
mov
xchg
jge
lods
pop
aas
stos
hlt
xchg
cld
adc
stos
lods
jnp
sub
push
icebp
jno
cvtpi2ps
mov
scas
lds
rorb
loopne
ss
out
jae
movsl
mov
lods
cwtl
lret
mov
ficompl
rcl
data16
adc
xchg
mov
sbb
lods
fldt
cltd
cmp
fs
sbb
sti
decl
mov
fsub
xchg
pop
fs
shll
mov
xor
testl
mov
lock
xchg
out
into
lret
mov
adc
cmp
sub
pop
idiv
mov
test
arpl
fucomi
in
loop
mul
inc
pushf
mov
in
push
dec
pop
jg
adc
sbb
adc
inc
push
add
lods
jnp
and
ss
repz
fstps
jl
cmpsl
mov
jmp
out
cmp
cli
jge
fbstp
jnp
sti
pop
rcrb
push
adc
pop
pop
mov
insl
cli
sahf
sub
repnz
add
adc
xchg
mov
icebp
cmpsb
mov
loopne
cmp
jo
mov
aaa
cmp
outsb
andl
rclb
and
inc
cmp
ret
cmp
in
or
int3
outsb
mov
inc
pop
sti
jb
xchg
mov
notl
jo
jecxz
test
test
xor
xor
add
cs
lahf
mov
or
and
out
jg
fimuls
out
cs
aaa
sar
push
addr16
sbb
push
cmp
test
repz
das
cmp
into
movsb
add
sbbl
or
pop
xchg
mov
std
jmp
jbe
shlb
fidivrl
mov
mov
push
xchg
dec
jno
in
and
imul
jg
mov
lret
pop
xor
xchg
movsl
or
mov
cmc
push
sbb
int
pop
rol
xlat
push
mov
stc
mov
movsb
out
out
ljmp
jg
sub
mov
and
int3
mov
repz
addb
aam
repz
lret
cmc
loope
scas
push
xor
hlt
add
daa
and
xchg
les
jge
fucomp
cmp
cmpsl
rorb
sbb
je
fdivrl
jo
lock
mov
dec
adc
xor
in
mov
mov
ret
int3
aam
das
imul
jle
test
icebp
mov
or
repnz
xor
xor
scas
cmpsl
xchg
sub
xor
and
push
push
repz
ret
adc
adc
add
inc
xor
dec
xorl
sub
cltd
cmc
mov
xchg
dec
add
lock
jne
iret
add
xchg
inc
add
cmp
popf
aam
aam
imulb
hlt
jmp
push
adc
sbb
adc
adcl
pop
push
jl
addr16
jo
pop
pop
dec
inc
sub
push
jns
and
scas
ljmp
dec
sti
in
out
fnsave
or
inc
sub
les
mov
dec
dec
rcll
inc
inc
lods
sub
or
icebp
jmp
jecxz
dec
dec
dec
cwtl
and
out
clc
mov
cmpsl
js
sbb
jle
dec
add
sub
adc
fwait
das
jns
rcrb
pop
in
loop
cmp
fs
xchg
dec
outsl
fs
xor
sarl
xchg
mov
pop
and
pop
cs
sbb
inc
daa
fstl
or
daa
out
dec
addr16
cmp
sbb
cmpl
into
call
shl
aaa
ljmp
sub
repz
rclb
and
cmp
out
or
loope
ja
pop
daa
cltd
xchg
inc
mov
or
mov
fidivl
jae
scas
xchg
xchg
mov
ret
jecxz
dec
pushf
dec
push
dec
jnp
mov
xchg
shlb
jne
iret
push
lock
test
xchg
ret
js
or
js
aam
js
je
add
scas
mov
or
ret
js
lods
or
adc
je
mov
lahf
xchg
imul
jo
pop
adc
mov
lahf
pop
adc
jae
repnz
pop
pop
adc
std
sbb
jnp
adc
jle
in
pop
scas
lds
ss
divl
lahf
pop
adc
xlat
cmp
pop
pop
pop
adc
clc
push
jmp
mov
out
xor
jbe
divl
test
mov
in
notrack
gs
push
jnp
icebp
je
cli
ljmp
xor
adc
jo
xlat
cmpsl
jnp
push
jecxz
repz
imulb
sub
enter
lea
out
mov
je
test
into
dec
aas
mov
inc
cltd
and
inc
push
jge
out
cmp
jbe
jne
int3
jae
sbb
mov
inc
movsb
mov
int3
pop
sahf
fimull
push
push
clc
pop
jge
decb
data16
sub
cmp
scas
mov
push
addr16
sarl
adc
mov
pop
addr16
testb
outsb
sub
pusha
mov
sbb
xchg
jo
push
int
mov
xchg
mov
ret
xchg
fcoml
scas
les
and
dec
leave
xchg
jecxz
cwtl
mov
in
test
pop
aam
mov
out
stos
xlat
sahf
push
mov
mov
je
mov
mov
add
xchg
inc
xorb
xlat
push
jecxz
aas
mov
loopne
sub
mov
stos
pop
mov
dec
push
push
aaa
mov
adc
pop
mov
fwait
mov
mov
movsl
fnstcw
xchg
iret
in
test
add
movsb
cwtl
js
fdivl
ss
frstor
mulb
fwait
aam
adc
inc
cs
adc
jb
repnz
xchg
mov
dec
ret
mov
repz
dec
test
test
imul
xchg
and
xlat
insl
fs
pop
ret
and
mov
mov
dec
mov
lcall
mov
shl
pop
and
dec
in
mov
pop
push
pop
mov
or
xchg
lret
jno
dec
xchg
mov
add
arpl
fiaddl
xor
pushf
xor
scas
cmovno
xor
cmp
addr16
xchg
xchg
imul
vunpcklps
xor
je
roll
jb
mov
pop
add
mov
cmpsb
loopne
call
in
adc
dec
add
xchg
mov
jg
push
lret
mov
out
shlb
jbe
xchg
jge
mov
add
cmp
push
loopne
lcall
insb
jmp
dec
stos
divps
cltd
and
out
inc
lret
push
dec
mov
rcrb
ret
out
hlt
cwtl
cmp
jl
loopne
xchg
mov
pushf
mov
adc
das
out
pop
rcl
lods
sbb
add
into
mov
lods
mov
mov
adc
inc
add
mov
xor
lods
in
cmp
outsb
jne
mov
jmp
jp
xor
push
adc
dec
push
pusha
add
mov
xchg
and
pop
addr16
aam
mov
xchg
lods
fsubs
cwtl
lret
aam
idiv
orb
jne
adc
adc
mov
sub
lea
mov
xchg
mov
ror
sub
sbb
std
xor
fstpt
jo
int3
push
cmp
mov
fucomip
hlt
mov
test
testl
mov
in
shrl
dec
fildl
add
out
mov
je
mov
add
cli
mov
int
xchg
stc
jae
mov
fcomi
les
mov
or
mov
dec
dec
jo
pop
mov
testl
repz
xchg
imul
cmpsb
insb
and
jg
ret
push
bound
adc
sti
pushl
divl
xlat
ljmp
lret
je
pop
dec
pop
stos
xlat
out
orb
xchg
jo
fstpt
sarb
mov
cmp
icebp
add
jmp
jmp
int3
or
add
sbb
popa
sbb
test
sbb
add
inc
or
test
add
pop
push
xor
idivl
sub
ret
nop
cmp
fbstp
test
cld
cli
negl
sahf
xchg
data16
jg
push
and
jne
pop
pusha
adc
jbe
push
dec
mov
adc
inc
add
es
inc
jl
adc
adc
jne
fstl
add
cmpsl
cmp
bound
in
push
lds
adc
out
add
aas
fdivrs
popf
aas
clc
lods
iret
nop
mov
cmc
jl
repnz
mov
mov
ficoms
leave
insb
insb
xchg
stos
xor
mov
cmpsb
je
out
pushf
out
pusha
out
mov
out
cmpsl
mov
cmp
mov
arpl
push
adc
mov
pop
pop
mov
shl
cmc
imul
push
and
adc
fistl
mov
sahf
jg
pop
stc
cmp
sub
call
dec
leave
pop
fdivp
cmp
lods
xor
cmpsb
cmpsl
data16
add
out
insb
fldt
mov
enter
cmpsl
jb
mov
aas
push
lds
pop
push
pushf
fcomps
push
adc
inc
adc
cwtl
subb
cmc
repnz
cmpsb
outsl
lcall
call
loopne
sbb
adc
xchg
adc
dec
sti
ds
sbb
pop
sbb
arpl
bound
aam
adcl
ljmp
push
mov
xchg
mov
mov
clc
inc
push
adc
pop
stos
lea
repnz
xchg
and
addr16
add
fstl
push
test
lret
addr16
push
mov
movlps
cmp
ljmp
popf
ret
jl
sbb
or
lods
mov
gs
sub
jbe
arpl
mov
xchg
jnp
sti
out
inc
add
stc
aam
inc
adc
xchg
sbb
movsb
jmp
jbe
in
dec
mov
sub
jge
lods
push
fstp
mov
shll
dec
sbb
sbb
clc
add
push
mov
inc
lods
jno
fldln2
adc
sub
dec
imul
mov
int3
lcall
add
fbld
sbbb
mov
dec
lret
ss
xchg
sbb
jae
ss
jmp
xor
fcoml
aad
imul
shl
jl
mov
insb
lret
ffreep
dec
jl
jle
fwait
xlat
les
cmp
test
lods
adc
repnz
add
test
lock
adc
xor
push
pop
mov
outsl
je
pop
mov
and
jg
mov
clc
in
add
push
out
mov
cmc
push
xor
xchg
inc
inc
rcrl
push
int3
add
push
lret
or
jge
push
out
push
cmc
fs
add
mov
cmp
cmpsb
sti
mov
or
jnp
adc
jno
xlat
inc
nop
jo
pop
adc
push
xchg
mov
je
pop
adc
lock
pop
pop
adc
out
lods
and
incl
outsb
arpl
mov
sub
loop
jp
mov
push
pop
mov
push
repz
mov
mov
mov
outsb
or
dec
ljmp
bound
pop
test
lods
lret
cmc
sub
mov
pushf
js
adc
pop
imulb
and
xor
clc
hlt
mov
mov
je
in
xor
int3
or
lahf
fldenv
pop
fs
cmp
and
mov
push
mov
xchg
loop
pop
sub
jp
std
pop
in
push
negb
adc
jne
mov
pop
push
mov
lahf
pop
adc
jl
fidivs
adc
cmpsl
shll
pop
pop
pop
adc
xchg
call
lret
push
xchg
out
lret
dec
push
gs
lcall
je
enter
jge
clc
dec
jp
iret
pop
mov
pusha
lahf
xchg
addr16
mov
data16
leave
cmp
test
fbstp
out
sbb
sbb
stos
jecxz
jb
cmc
jo
loopne
or
add
jl
sarl
push
cmp
jo
das
mov
jmp
fs
dec
sahf
div
out
imul
loop
adc
ljmp
dec
loopne
insl
aad
cli
jl
out
adc
xor
cmp
and
xchg
shrb
addb
aas
jmp
aaa
cli
inc
push
push
into
sahf
divb
add
push
cmp
pop
xor
mov
sahf
jge
mov
clc
cmp
or
sub
fdivl
adc
jns
arpl
fs
out
sub
xor
lds
jp
clc
cmp
cmc
dec
jge
aas
fdivrl
lcall
arpl
jae
sarl
test
jo
mov
mov
dec
stos
mov
stos
mov
pop
clc
jnp
loopne
fildll
js
cli
shrb
stc
rclb
test
imul
divl
loopne
dec
outsb
dec
sub
lods
ds
xchg
inc
fcoms
int3
adc
hlt
in
inc
pushf
xlat
sub
ret
adc
push
pop
stc
loopne
js
xchg
loop
inc
lods
dec
add
sub
add
sbbl
push
xor
or
mov
or
push
pop
shr
inc
cltd
jle
jle
inc
ret
xchg
xor
pop
mov
push
adc
rclb
sbb
stos
push
stos
imul
addr16
fistps
push
lods
sahf
add
push
dec
rclb
and
adc
int3
rolb
bnd
in
push
pop
int3
testb
cmp
jmp
and
push
adc
loope
jmp
add
imull
pop
pop
mov
adc
adc
lock
push
loopne
fs
fsubrs
dec
daa
pop
stos
push
pop
or
pop
push
xchg
adc
shrl
cs
movsl
inc
add
add
jmp
in
das
icebp
jmp
fs
sub
test
stos
lods
push
pop
push
pop
push
mov
cmp
push
xchg
sbb
pop
adc
dec
jae
out
hlt
pop
rorl
dec
push
and
cmp
inc
xor
sahf
pop
test
clc
cmp
lret
filds
xchg
pop
pusha
add
xchg
aas
ret
pop
outsb
jge
insb
out
movsb
daa
pushf
dec
mov
addr16
mov
mov
iret
xchg
jne
or
rolb
jae
add
xor
xor
or
stc
mov
ret
pop
out
les
cmp
dec
sbb
inc
or
int3
mov
push
arpl
jge
fs
fwait
jae
mov
pushf
movsl
xor
pminub
dec
jbe
ret
sub
cltd
add
jb
test
cld
sbb
sub
add
cltd
cmp
add
jmp
mov
adc
cmp
pusha
pop
pop
adc
cmp
sub
xchg
movsb
push
addb
mov
scas
adc
cmp
pop
inc
or
bound
jmp
out
fmul
daa
pop
in
inc
addb
pop
add
sbb
adc
cltd
sbb
cltd
cmp
mov
adc
jle
mov
pushl
jbe
jg
pusha
pop
pop
adc
sbb
push
cmc
pushf
and
adc
xchg
pop
dec
cltd
sti
jbe
add
call
repz
popf
repz
pop
dec
sbb
dec
arpl
sub
lock
icebp
mov
mov
jo
xor
mov
jle
data16
push
dec
adc
mov
adc
sbb
xlat
jns
test
je
test
sub
sti
mov
add
xchg
cld
xchg
clc
jg
xor
and
xor
adc
xchg
sbb
xchg
cld
jo
adc
add
and
test
pop
add
je
push
dec
xor
jp
mov
or
bnd
add
mov
cld
jbe
cmp
mov
adc
stc
shll
out
arpl
sbb
xor
cmp
and
ljmp
dec
jne
jbe
scas
outsl
out
out
es
cmp
outsl
mov
pushf
scas
xchg
jecxz
mov
rclb
sbb
inc
cmp
popf
fcmovnu
mov
pop
in
loope
jmp
sub
stos
rclb
mov
cmpsl
addr16
push
loopne
sub
xchg
and
sub
add
mov
pop
pop
int3
cltd
jmp
or
cwtl
sub
scas
jno
stc
add
xor
imul
mov
jns
loopne
jle
ret
hlt
test
mov
mov
mov
std
arpl
jp
xchg
sbb
pop
add
xlat
out
dec
xchg
loope
push
test
in
xchg
rorl
push
xor
pusha
jl
adc
push
mov
lret
xchg
mov
sub
test
dec
mov
jno
sarb
movb
cmp
fists
jmp
xor
sbb
jno
mov
loop
xorb
aad
fdivrl
iret
dec
jno
adc
rcl
scas
lahf
push
loope
jle
stos
aaa
xchg
sbb
cltd
or
add
inc
enter
and
add
push
adc
mov
clc
hlt
mov
sbb
adc
nop
adc
rcr
fcmovb
test
mov
pop
jp
mov
xchg
movsb
inc
jno
stos
lret
or
mov
push
jmp
mov
xchg
inc
stc
cwtl
mov
iret
and
pop
in
jmp
push
test
and
sub
out
pop
dec
daa
arpl
pop
ds
adc
shlb
mov
push
nop
jecxz
or
test
rcll
jae
rcll
xchg
inc
sub
mov
and
stc
test
pop
push
rcrb
arpl
jnp
or
ljmp
popw
test
or
push
mov
inc
xchg
jno
imul
test
add
sbb
enter
jl
cwtl
lret
imull
xlat
and
test
add
adc
jb
cli
jbe
cli
mov
push
pop
mov
into
push
js
pop
insb
cmpsb
xchg
aad
adc
mov
jge
loopne
mov
es
fisttpll
cmpl
je
sti
adc
jo
repnz
das
js
es
mov
cmp
jecxz
jno
movb
jp
shrl
scas
jg
mov
sahf
mov
in
sub
inc
lret
pop
movsl
mov
add
inc
pop
nop
and
mov
xor
shrl
mov
pop
ffree
jnp
cmpsb
scas
add
xor
nop
and
xor
into
lret
mov
bound
jo
aaa
fisttps
sti
jmp
jne
shll
lods
and
push
dec
push
in
pop
cmp
scas
sub
std
js
loope
mov
and
adc
adc
adc
cltd
cmp
mov
lcall
mov
push
leave
push
jmp
in
and
add
aaa
jb
add
jl
add
jno
add
push
xchg
and
xor
ss
shlb
add
test
sti
push
inc
push
fsts
xchg
loope
adc
rclb
or
lods
xor
ret
sahf
fdivrs
movsl
xor
repz
in
jo
cwtl
sub
mov
loope
or
and
lods
popa
mov
dec
into
ss
loop
insb
inc
push
dec
mull
mov
sbb
arpl
pop
or
scas
mov
mov
test
iret
daa
mov
in
ret
clc
in
pop
mov
and
test
movsl
int3
adc
pop
test
dec
scas
ss
and
ficompl
ficoms
mov
adc
cmpsl
cmc
mov
mov
adc
pop
stos
sahf
scas
push
xchg
xchg
mov
outsl
adc
mov
cmp
push
dec
jg
mov
adc
icebp
jno
jp
and
jo
testb
jae
aam
mov
add
hlt
icebp
jno
in
mov
out
jmp
in
dec
mov
cmp
cmp
in
mov
sub
aam
jecxz
das
fwait
xor
arpl
stos
or
pop
loop
sbb
mov
out
inc
into
xor
pop
dec
pop
call
push
loop
cmpsl
add
ret
movb
mov
jl
pop
mov
add
xchg
outsb
push
jge
lret
dec
mov
icebp
insb
add
iret
jmp
rol
popa
xlat
aas
mov
dec
push
and
or
ret
and
pop
jmp
mov
dec
iret
je
cltd
add
dec
sub
rcrb
adc
inc
outsb
iret
andl
sti
sahf
and
scas
push
fcomp
mov
mov
mov
aaa
pop
in
dec
aaa
outsb
jecxz
or
scas
mov
cwtl
mov
mov
shrb
add
jge
jge
dec
insl
bound
adc
sar
fstps
or
lret
movsl
nop
scas
pop
in
mov
bound
pop
mov
inc
fwait
inc
andl
lret
dec
jecxz
adc
adc
add
das
das
je
popf
in
add
sbb
shrb
ret
mov
hlt
sbb
aam
mov
xor
dec
pop
nop
lcall
push
mulb
ficoml
aam
ss
lock
test
rclb
mov
pusha
inc
andl
imull
fdivrp
jg
hlt
stc
jne
jge
jmp
dec
push
mov
xor
inc
lahf
cltd
cld
xor
je
sti
cld
cmp
data16
lahf
out
pop
xchg
add
sub
int
les
sahf
pop
repnz
sti
movb
xchg
divb
jg
cmpsl
lret
js
scas
xchg
data16
rcr
or
inc
jo
ljmp
sbb
and
xchg
and
jo,pt
and
dec
cmp
pushf
hlt
stc
je
sti
std
cmp
fstl
inc
push
icebp
jne
xchg
ret
pushf
cli
cmp
push
ret
mov
sti
je
jne
push
sub
ja
mov
lds
jbe
mov
mov
mov
out
adc
js
das
lret
and
sub
neg
arpl
adc
or
int3
add
mov
mov
jb
mov
es
mov
push
ljmp
mov
add
je
or
ds
fidivrs
outsl
incl
les
sti
and
outsl
add
adc
adc
test
xor
rorl
pop
int
xor
inc
icebp
add
call
mov
add
call
lock
pop
je
and
fsubp
cmc
ss
cmc
jg
add
fs
xchg
call
je
adc
adc
addl
stc
cmp
mov
xchg
out
es
fbld
sti
push
divb
cld
and
or
imul
popf
lret
jmp
mov
xchg
in
mov
int
fistl
xor
int3
fwait
lret
or
std
xchg
xchg
or
clc
ds
mov
dec
sub
lock
adc
insb
sbb
adc
sbbb
out
pop
out
mov
push
adc
addr16
jl
pop
push
push
or
push
cltd
mulb
fs
fmuls
inc
mov
add
ss
adc
mov
jb
pop
aaa
cs
inc
decb
notl
adc
add
je
sub
scas
ja
add
dec
xchg
xor
ret
pop
push
and
mov
pop
push
or
inc
adc
mov
imul
insl
sbb
adcl
jo
mov
out
loopne
in
dec
and
aas
inc
loope
push
jl
dec
sti
and
loop
lahf
arpl
mov
xor
jmp
shrl
and
fsubl
fwait
pop
pushl
add
ret
imull
pop
dec
mov
int3
mov
les
pop
loop
push
pop
bound
cmp
or
cltd
sub
push
test
xor
cmp
movsl
or
cmp
ljmp
push
andb
dec
cmpl
mov
xchg
mov
and
cmp
pop
pop
xor
lahf
mov
mov
push
push
ficomps
insl
fimull
arpl
or
xor
insb
push
inc
rolb
and
cwtl
test
or
push
sbb
testl
xorb
and
adc
ret
adc
mov
pop
das
es
mov
mov
das
lcall
ret
jecxz
xchg
xlat
add
pop
pop
fdivrs
fbstp
pop
adc
push
and
adc
push
jnp
xchg
pushf
xor
dec
mov
cmp
xchg
outsb
mov
mov
jp
ja
roll
add
pop
inc
fcom
jge
dec
pop
cmp
outsb
xchg
mov
jge
cmc
cld
ja
sub
xchg
and
test
inc
js
out
push
ja
fs
jae
jne
mov
and
xor
adc
test
mov
xor
mov
bound
test
xor
fnstsw
add
add
push
mov
outsb
ss
lahf
or
inc
ror
ljmp
ja
fbstp
push
pop
xchg
xchg
stc
sti
aas
das
fbstp
or
fisubs
js
cmpsb
scas
cmpsb
or
mov
push
cli
jae
pop
cli
jl
in
clc
mov
xchg
fiadds
add
mov
out
dec
sub
movhps
add
outsb
mov
mov
jmp
fiaddl
cld
mov
je
ret
ja
test
push
mov
repz
push
clc
jo
xor
insb
roll
mov
xchg
fstpt
push
icebp
inc
push
loop
sbb
aaa
lds
sti
das
or
mov
jl
sti
scas
jne
adc
xor
push
sbbb
shrb
xlat
cmpsl
movsl
sahf
mov
jmp
in
idiv
inc
sub
dec
mov
pop
or
ret
test
pop
ljmp
inc
or
jl
add
xchg
sti
jl
xor
mov
mov
sub
sti
mov
add
jbe
or
out
cmp
fdivrl
daa
xchg
add
cmp
sub
adc
mov
out
fs
pop
adc
ret
jo
pop
adc
lcall
sbb
xlat
mov
mov
push
inc
pop
sbb
mov
leave
mov
or
mov
std
xchg
push
and
pop
dec
repnz
push
and
lahf
inc
xor
push
sbb
pop
pop
adc
xchg
fwait
and
xor
adc
xor
imul
pop
adc
jno
cltd
mov
cmpsb
fdivrl
imul
jecxz
test
popa
mov
inc
lret
scas
orl
xchg
data16
pop
mov
test
in
jl
add
mov
mov
je
sahf
add
push
imul
mov
ret
cmp
add
mov
jns
add
push
aam
test
in
test
test
push
in
idivb
jo
xor
fadds
lods
jno
hlt
in
sbb
movsl
jae
jb
leave
mov
xchg
cmp
les
push
adc
dec
jno
sbb
or
push
xor
out
lcall
aam
xor
test
test
pusha
mov
mov
sbb
xchg
insl
and
negl
icebp
repz
sub
lret
aam
insl
cmp
mov
jl
adc
jg
movsl
jge
scas
loopne
add
cmp
and
out
es
jmp
sub
push
out
push
cltd
cmp
inc
add
inc
xchg
lcall
inc
dec
cli
push
xlat
add
inc
push
stc
lds
or
pop
inc
push
xchg
ret
sbb
jbe
inc
xor
dec
in
dec
jnp
sti
or
push
mov
sti
xlat
cmp
pushf
fists
lret
fld
pop
mov
cld
lret
mov
je
cld
movsw
movl
outsb
sub
pop
pop
movsb
and
flds
sub
sbb
push
add
insl
lret
stos
loopne
mov
sbb
ss
call
daa
dec
lahf
xchg
test
jecxz
fnstsw
mov
shll
xor
jp
mov
sub
pop
out
std
and
sar
push
adc
sbb
hlt
mov
scas
add
add
inc
xchg
xchg
pop
xor
cmp
roll
mov
mov
jg
xor
into
and
dec
aas
ja
xor
push
ja
or
lea
and
xor
jne
jge
sub
jbe
mov
mov
js
pushl
pop
cmpsb
data16
fidivrl
lds
xchg
pop
dec
jne
mov
and
repnz
je
push
mov
mov
mov
ja
pop
idivb
jb
mov
mov
cld
cmp
and
mov
insb
add
mov
cmp
imull
sti
std
adc
data16
pop
in
aaa
xor
in
push
jnp
adc
xchg
inc
addb
add
jo,pt
add
insb
in
aaa
xor
mov
call
cli
mov
inc
test
and
add
jb
and
cmp
sub
repnz
je
shll
out
addr16
add
stc
sti
jne
sti
in
mov
mov
ds
loope
fs
jnp
call
push
popa
adc
add
mov
aad
in
mov
int3
mov
arpl
xchg
xor
inc
cmp
add
and
xor
pusha
std
in
in
pusha
dec
jns
xchg
mov
xor
mov
inc
or
loopne
leave
outsl
clc
mov
pop
aas
dec
mov
jecxz
xor
mov
cmpsl
adc
jae
adc
xchg
xor
push
cmp
scas
shll
out
outsb
and
lods
and
cmpsb
xor
shrl
jmp
test
sub
nop
lcall
ds
and
movsl
sub
mov
or
in
out
or
cmp
fistpll
outsb
xchg
idivb
jbe
xchg
mov
sub
imul
fiadds
add
cmp
cmp
pushf
cmp
pusha
movsb
mov
dec
dec
xor
cmp
or
lock
sub
stc
and
mov
xor
shr
sahf
adc
loop
pop
cmp
xor
pop
pop
jnp
loope
lock
mov
or
insl
sbb
fsubrl
lods
ficoms
daa
jnp
in
cmpsl
repnz
popa
mov
fsubrl
adc
icebp
jb
rcr
pop
out
lcall
ds
push
mov
dec
xchg
das
not
out
add
js
out
rorb
gs
jnp
ret
push
push
ret
ret
or
xchg
push
dec
xor
pop
cmp
shll
add
popf
test
xor
pop
cld
pop
cwtl
or
mov
sbb
sti
push
stc
jns
int3
sbb
lods
mov
sub
iret
dec
cmc
adc
inc
xchg
dec
loop
push
mov
cmp
maxps
int
sbb
sub
pop
sub
imul
mov
push
je
and
inc
loope
mov
and
rorb
movb
in
lret
jecxz
sbb
xchg
dec
adc
ret
adc
xchg
rcrb
test
inc
push
insb
ja
sub
ss
jl
iret
or
fistpl
movsb
outsb
out
mov
popl
add
scas
je
mov
arpl
push
outsl
scas
das
shrb
mov
inc
in
cmp
push
push
mov
js
pop
push
imul
or
push
adc
mov
pop
xchg
ja
jg
mov
in
stc
out
nop
scas
mov
popa
inc
inc
hlt
mov
scas
push
push
cmp
jae
lds
stos
addl
mov
xor
jnp
clc
adc
cmpsl
or
dec
lds
ljmp
sub
adc
imull
dec
outsl
and
imul
jmp
les
out
mov
add
adc
fiadds
add
in
shll
mov
out
push
repnz
pop
lret
lods
sti
pop
push
or
mov
adc
xchg
cld
mov
lods
sti
pushl
jle
cwtl
xchg
cmp
cmp
lret
test
adc
sbb
adc
push
add
aam
mov
adc
jg
mov
cmp
mov
jbe
push
adc
xor
and
cmp
and
je,pt
push
ljmp
gs
or
test
push
mov
cmp
icebp
add
cltd
cmp
fs
mov
or
mov
xchg
pop
mov
mov
adc
jl
mov
dec
sbb
add
mov
xchg
jmp
dec
ss
sub
jge
mov
jmp
adc
add
sti
jl
cmpb
in
xor
add
cwtl
mov
xor
push
adc
ret
add
sti
pushf
sbb
adc
add
imul
mov
sahf
jl
movsl
dec
adc
mov
stos
sti
repnz
sbb
lret
jo
adc
jg
push
cli
jbe
lods
jo
push
loope
in
sti
inc
fidivs
sbb
loope
and
lret
icebp
jnp
outsl
pop
add
jmp
push
idivb
sbb
adc
pushf
aas
mov
sahf
sub
inc
loop
sub
inc
jl
adc
dec
pushf
nop
adc
rcrl
or
out
ja
mov
test
outsl
iret
sahf
imulb
push
add
or
stc
fidivl
dec
aaa
sbb
ljmp
mov
adc
lods
mov
xor
js
cmc
mov
mov
xor
sbb
dec
lcall
fdivl
mov
mov
movsb
scas
mov
adc
mov
sbb
xorb
aas
mov
fwait
mov
push
adc
xor
push
or
out
movsl
popa
push
imul
xchg
and
mov
push
push
js
repz
pop
test
sub
loop
inc
cltd
or
addb
xor
pop
hlt
std
pop
lea
or
cmp
cwtl
repz
jecxz
test
out
inc
cltd
lods
mov
sbb
inc
stc
sub
hlt
out
jbe
dec
pop
and
in
popa
push
nop
dec
ds
iret
push
jl
stc
fmull
mov
arpl
sub
fbstp
dec
sti
in
out
hlt
inc
loopne
mov
cmc
es
out
fldenv
mov
sbb
lret
or
fadds
arpl
stos
js
add
sbb
jp
outsb
icebp
movsb
sbb
les
push
adc
icebp
int3
sbb
adc
or
xchg
sbb
movsb
outsb
sub
push
xor
arpl
mov
jbe
popf
addl
lret
and
dec
jnp
iret
mov
aad
jmp
fadds
ljmp
sbb
adc
repnz
insb
inc
push
fs
cld
mov
jg
push
aaa
test
adc
and
pushf
mov
adc
cmp
insb
jl
adc
mov
fists
add
lret
mov
hlt
mov
jbe
or
mov
mov
ret
cmp
adc
pusha
jl
adc
jmp
addb
mov
mov
push
mov
cmp
popf
imull
adc
inc
mov
adc
test
fbstp
xlat
jmp
bound
mov
rorb
pushl
jecxz
jo
ljmp
ds
outsb
mov
loope
ret
mov
mov
test
std
push
cli
jg
push
rorb
push
jg
test
dec
jnp
xor
cmp
mov
shl
xor
sbb
iret
pushf
cmp
jl
je
test
and
mov
js
ficomps
aam
mov
les
lret
mov
inc
xor
add
jge
mov
push
jg
push
pop
dec
into
insl
cld
lcall
mov
cltd
ljmp
adc
bound
pop
push
std
aaa
add
xor
adc
push
adc
test
xchg
aas
idivl
push
jmp
cmp
mov
mov
cli
imul
cmpsl
sbb
sub
inc
cs
rcrb
and
jp
pop
jo
pop
adc
sbb
pop
adc
mov
pop
pop
adc
stos
jmp
jae
cmp
cs
es
cmp
xor
iret
cmp
dec
ja
or
push
aam
mov
roll
test
clc
pop
test
add
stos
ljmp
sbb
push
incl
sub
dec
sbb
mov
or
outsl
cmp
in
or
popf
pop
arpl
inc
sbb
cwtl
pushf
scas
bound
adc
and
lds
out
xor
subl
cmp
xchg
mov
mov
adc
push
adc
push
add
pop
int
and
fdivrl
and
data16
inc
inc
out
icebp
clc
mov
xchg
or
inc
aas
clc
jo
push
dec
rcl
jg
adc
aad
push
mov
xorl
xor
adc
push
adc
and
pop
test
out
aam
aam
repz
pop
xlat
cmp
clc
clc
clc
lcall
inc
lahf
cmpl
insl
mulb
addr16
add
adc
sbb
jp
xor
jo
pop
jl
jecxz
imul
adc
adc
push
jge
cmp
mov
jmp
incl
add
add
sbb
gs
test
sub
inc
jb
jp
rcr
mov
pop
xor
lock
mov
sbb
push
adc
sub
div
repnz
mov
pop
pop
adc
sbb
pop
adc
fmul
dec
dec
call
ficoml
xchg
mov
ja
lock
in
daa
add
fidivrs
mov
push
adc
movsl
sub
mov
jg
inc
inc
in
pop
pop
adc
gs
pop
adc
cmpsl
ret
or
les
inc
sub
in
and
shrl
sub
mov
mov
lahf
daa
pop
xlat
xchg
pop
scas
cmc
je
sbb
fwait
lret
ja
add
sbb
adc
push
sbb
adc
xchg
mov
jns
adc
adc
sbb
dec
jmp
push
hlt
insb
scas
das
mov
movsb
ds
push
adc
hlt
pop
xor
fsubs
jae
out
sbb
inc
test
adc
adc
fcmovnb
sbb
adc
inc
sub
and
loopne
pop
adc
sbb
adc
xchg
mov
lock
pop
adc
fcompl
push
adc
loop
sbb
scas
orb
pop
adc
jmp
sbb
jg
mov
adc
pop
dec
je
add
inc
in
clc
imul
mov
ljmp
jne
sub
shrl
lret
pop
lds
cmp
add
jbe
sub
sub
mov
or
push
adc
mov
ljmp
or
and
or
push
adc
and
sbb
push
lret
push
dec
addb
pop
xor
dec
fidivrl
xchg
fildl
push
adc
push
les
push
adc
cmpsb
pusha
pop
or
push
or
imull
jle
lcall
scas
xchg
mov
push
adc
xchg
test
push
adc
stos
sbb
and
cmp
mov
pop
pop
adc
scas
ds
pop
adc
xchg
out
movsl
inc
sbb
push
adc
adc
lock
in
aam
push
mov
push
lds
push
les
cmp
xor
add
imul
fisttpl
mov
inc
sub
mov
ror
dec
adc
das
xchg
loopne
add
mov
push
adc
xchg
leave
call
decb
push
adc
adc
mov
fdivrl
lahf
popa
das
mov
mov
add
stos
xchg
push
add
jmp
adc
adc
xor
mov
mov
push
pop
lcall
cwtl
push
dec
and
jbe
int
insb
pop
imul
ja
je
jecxz
adc
cmp
xor
jb
aam
cmp
rorl
lahf
test
xor
loop
cmp
dec
xor
and
xor
pop
adc
inc
bnd
or
cmp
pop
decb
cmp
push
cld
adc
adc
test
xchg
sbb
xor
inc
inc
stos
mov
repz
adc
shlb
cmpsl
push
xor
add
dec
stos
jg,pt
ds
mov
gs
aam
mov
mov
push
adc
cmp
pop
je
lods
stos
mov
dec
mov
mov
sarb
adc
loope
mov
jns
pop
cs
sbb
std
adc
push
adc
adc
xchg
or
cmpsb
push
ds
mov
insb
inc
push
xor
mov
pop
adc
gs
adc
adc
xchg
sub
jns
adc
sub
pop
xor
and
push
adc
dec
mov
insl
push
leave
sbb
push
adc
jmp
dec
div
outsl
test
mov
in
enter
pop
mov
inc
mov
cmp
push
adc
pop
or
cmpsb
fsubp
add
sub
cmp
insl
cwtl
inc
std
int
jp
push
push
and
jno
outsb
jb
and
mov
popa
fadds
mov
mov
dec
pmulhuw
push
pop
in
add
add
push
adc
leave
lret
les
push
adc
adc
inc
fiadds
mov
lcall
rcrb
push
adc
pop
and
call
es
out
pop
fmul
xchg
dec
popa
in
mov
push
out
mov
movsb
jmp
pop
push
dec
jnp
or
stos
in
rcl
jne
dec
pop
adc
mov
inc
sbb
sti
stos
out
or
push
adc
inc
sub
lea
push
pop
mov
mov
push
adc
sti
sub
adc
and
mov
pop
loop
clc
xchg
es
cltd
cmc
xor
outsl
pop
mov
xor
idivl
xlat
test
fidivrl
jle
loope
repz
int
iret
sbb
mov
cmp
mov
insb
and
adcl
notl
lret
jnp
out
hlt
cmp
mov
sub
subl
adc
jmp
cmp
jnp
nop
adc
jg
sti
in
fcmovnb
push
jmp
sbb
push
jg
cmpb
inc
outsb
sbb
aaa
outsb
cmp
inc
jnp
add
jge
and
adc
shlb
stos
das
xor
inc
scas
pop
xor
add
mov
mov
and
mov
jle
pop
jo
add
jae
das
cmpsb
add
aaa
xor
insl
iret
scas
call
sbb
push
shl
lret
popa
ret
iret
mov
je
cli
lret
mov
xchg
jo
mov
jmp
jmp
add
sub
jl
adc
scas
jo
xor
iret
jp
mov
popf
mov
xor
cld
sub
mov
incb
cmpsl
sbb
xor
insb
mov
adc
or
cmc
pop
mov
les
leave
xlat
or
cmp
ss
imul
repnz
lcall
cli
jge
lock
fistl
popf
mov
popa
rcrb
nop
lds
cmp
js
test
ret
lahf
fcomps
sbb
stc
outsl
mov
std
repnz
aas
lock
sti
test
pop
cli
ja
test
pop
mov
xchg
jecxz
adcb
iret
sbb
mov
hlt
mov
in
sbb
subl
dec
add
scas
mov
pushf
scas
gs
bound
aas
add
or
jmp
mov
mov
or
xchg
push
lcall
push
out
ljmp
jo
xor
pop
push
aas
cli
daa
fucomi
mov
outsb
aaa
cmp
mov
and
repnz
scas
scas
push
in
loope
loopne
sub
orl
adc
aam
sub
cmp
in
loopne
pop
and
sbb
lea
jns
sahf
inc
or
sbb
push
sbb
jp
lods
add
adc
inc
clc
xor
ss
sbb
movsl
pop
lcall
stc
rolb
loop
mov
insl
icebp
or
push
bound
rcll
fstp
sahf
xchg
iret
mov
mov
divb
leave
add
es
add
or
push
inc
push
mov
cmp
push
xchg
push
push
js
adc
pop
dec
inc
nop
mov
or
inc
clc
repz
data16
mov
adc
addb
scas
add
push
cltd
xor
repz
ss
imul
inc
dec
jge
jno
push
scas
cmp
mov
mov
sbb
in
pusha
cmp
insb
xor
test
lock
std
mov
cmc
cli
lret
stos
mov
inc
or
sbb
sbb
lret
or
ret
dec
pop
adc
mov
cmp
mov
sbb
adc
adc
outsl
add
movsl
add
fnstenv
cmp
jo
sub
aaa
inc
jnp
faddl
mov
test
jbe
leave
movsl
add
lock
shll
or
xchg
xor
jp
adc
cmp
lahf
dec
dec
jo
pop
adc
xchg
stos
dec
or
dec
push
out
jmp
fsubr
imul
mov
lea
popf
arpl
sarb
das
repz
es
imul
rcrl
loop
in
aas
lods
push
fsubp
into
sti
nop
sub
test
incb
or
mov
lods
leave
je,pt
adc
insb
xor
fidivs
pop
adc
and
dec
push
stc
test
rclb
jl
mov
adc
stos
sub
scas
test
xor
add
fwait
or
sbb
nop
cltd
cmp
xchg
adc
bound
mov
mov
add
daa
dec
nop
push
icebp
test
push
incb
dec
sbb
aas
ja
sbb
adc
jge
imul
jp
dec
pop
adc
movsl
insb
mov
pop
jmp
and
cli
subl
test
push
jg
insb
aaa
negl
sub
gs
je
mov
and
data16
fimuls
addr16
lods
jnp
inc
sbb
adc
pop
mov
cli
test
daa
cmp
outsb
popl
gs
mov
rorl
inc
repz
mov
repnz
adc
mov
mov
xor
adc
inc
in
pop
pop
out
inc
loop
aaa
push
pusha
lahf
or
cli
test
push
in
clc
sub
adc
add
cmc
adc
dec
popf
dec
jns
shlb
sbb
adc
add
rorl
mov
inc
fldt
sbbb
fwait
xor
or
mov
mov
fdivrl
fidivl
dec
lahf
imul
jo
jne
add
stos
mov
sub
in
mov
dec
adc
pusha
sahf
mov
aas
mov
aam
loope
jbe
lret
mov
pop
icebp
sub
pop
push
mov
repz
les
iret
popa
jle
in
scas
loop
lahf
fisubs
pop
cmpsl
push
and
lods
out
scas
outsb
cmp
dec
add
cmpsb
ret
pop
fcomi
pop
dec
or
pop
cmp
push
scas
jns
mov
fadds
mov
clc
fld
xor
pop
adc
aaa
sti
dec
sub
cmp
and
mov
sbb
scas
cmpsl
and
lods
out
mov
shl
or
xor
rorb
xor
out
push
adc
stc
xchg
and
sub
xchg
clc
jge
es
jbe
std
mov
mov
cld
add
pop
lret
orl
test
int3
int3
xchg
in
lea
inc
jb
add
jmp
subl
movsb
pop
daa
xchg
add
outsb
clc
dec
loop
scas
orl
lock
pop
pop
cmpsl
ds
dec
xchg
add
push
int3
adc
cmp
adc
xor
out
dec
and
sbb
in
fwait
loope
or
inc
jno
pop
data16
dec
insb
and
ret
fisubrl
dec
rcrl
or
push
lods
push
mov
outsb
xor
push
xor
jl
pop
mov
leave
inc
mov
jp
into
in
fcmove
cmp
pop
pop
mov
sub
pop
jecxz
xor
imul
and
xor
es
push
rcrb
mov
sti
rolb
lds
stc
movsb
lret
es
lcall
lret
imul
adc
mov
insl
ficomps
test
add
add
fwait
cld
iret
rol
cli
cmp
in
xchg
and
sbb
aas
aas
or
lahf
push
ljmp
rclb
insl
lock
out
dec
fcoml
arpl
js
pop
or
mov
hlt
push
not
sbb
jmp
mov
movsb
aam
cmp
xchg
or
aas
xchg
pop
xchg
or
mov
loop
adc
cmp
daa
jg
aas
imul
aaa
out
ffree
mov
mov
into
sbb
das
je
out
or
dec
jge
iret
sub
es
rclb
ja
add
dec
mov
jne
sbb
dec
decl
fs
pop
in
test
mov
std
pop
mov
fs
pop
push
jne
pushf
adc
xor
dec
je
dec
mov
xchg
out
orl
rorb
jno
mov
jb
dec
adc
and
and
inc
loopne
testl
outsl
lock
mov
cmpsb
mov
mov
pop
xor
dec
bound
les
hlt
daa
jb
add
sahf
cmp
mov
xchg
mov
pop
scas
cld
scas
fstpt
jecxz
or
dec
jb
pop
lods
mov
inc
movntq
mov
lahf
cld
out
and
jnp
mov
add
leave
push
repnz
push
stc
int
stos
outsb
adc
rolb
xlat
dec
mov
mov
dec
push
lret
or
push
jbe
push
fs
sbb
rcl
dec
jle
data16
sahf
push
sub
cmp
sub
mul
dec
je
push
je
push
jo
int
ret
fldcw
sbb
lods
cltd
cmp
sub
inc
mov
je
jae
add
sub
mov
xor
sub
add
push
jp
cmp
js
jbe
push
pushfw
adc
rcl
dec
jl
insb
ja
pushf
adc
jmp
insb
mov
cmc
pop
fcoms
or
sbb
adc
outsb
bound
push
adc
sahf
jg
xlat
sub
xor
stos
jbe
pop
push
mov
loop
jmp
push
dec
shrb
mov
pop
dec
add
movsb
mov
out
adc
daa
popa
push
pusha
lret
lcall
out
dec
cltd
shlb
xchg
xor
clc
add
mov
arpl
mov
push
sti
sbb
or
jo
sbb
xor
adc
test
ja
xor
jg
cmp
or
je
jp
call
or
adc
mov
jo
cld
icebp
ljmp
mov
mov
popa
js
push
dec
inc
cmpsb
in
mov
sbb
std
loop
jo
cli
cmc
lods
int
xor
sub
add
mov
lahf
jnp
cmc
jecxz
jmp
mov
rolb
mov
ljmp
xchg
dec
iret
sub
stos
repz
inc
fstpl
mov
mov
push
dec
adc
dec
rorl
aam
jl
mov
mov
insl
jle
out
sbb
sarb
int
hlt
js
nop
jecxz
shr
jo
lcall
push
in
loopne
add
lods
dec
mov
test
dec
pop
adc
jne
rorl
dec
scas
imul
insl
fs
push
lea
hlt
enter
xor
push
daa
dec
daa
jne
clc
pop
xchg
pop
pop
pop
mov
daa
dec
icebp
neg
push
cmp
sub
sbb
inc
movsl
dec
leave
sub
inc
sarb
int
push
pop
adc
sbb
adc
sub
dec
push
pop
shlb
in
dec
fimull
cmpl
clc
scas
lret
ss
cmp
adc
xor
adc
xchg
push
xorl
pop
and
lretw
fisubrl
sbb
adc
xor
mov
call
sbb
adc
call
sub
rorl
dec
ds
mov
xor
dec
cs
sub
mov
mov
jle
cmp
bound
push
cmp
scas
sub
jae
cwtl
pop
out
stos
movsb
das
or
fisubs
js
cmpsb
scas
mov
inc
mov
and
push
add
je
add
in
jae
and
popf
repz
shl
lds
fwait
stos
jle
dec
pop
adc
mov
push
repnz
sahf
push
lret
pushf
fiadds
xor
inc
or
add
or
ljmp
cmp
lcall
aaa
lock
pushl
cmp
mov
mov
movsl
insb
aas
jmp
roll
dec
push
iret
aaa
inc
sub
ljmp
push
mov
inc
cli
aaa
incl
xor
bound
outsl
mov
mov
inc
scas
fadds
jmp
out
das
movsb
outsb
stos
insl
lds
stc
pop
push
ret
rcr
lcall
jl
add
jge
xor
mov
dec
bound
dec
popf
cmp
and
popa
cmpsb
cld
incl
add
in
and
iret
jl
jnp
lds
cld
dec
aaa
sarb
pushl
adc
and
jo
je
cmp
sarb
push
rcl
fdivrl
hlt
ja
pop
js
mov
push
gs
daa
sub
push
fisubrs
xor
add
mov
sarb
or
mov
popa
pop
adc
mov
divb
je
notl
cmp
or
push
jne
sbb
xchg
outsb
cwtl
fisttps
inc
rorb
shrl
cmc
lock
outsb
xchg
mov
lods
adc
cmp
push
jnp
push
sti
jae
je
jmp
add
ds
loope
inc
test
push
add
pusha
adc
mov
aam
adc
fisubl
lcall
xor
pop
roll
repz
repz
sti
adc
xchg
notl
hlt
adc
inc
mov
mov
jae
mov
and
xchg
popf
jne
add
insl
repz
xchg
incb
jae
mov
jmp
xor
ret
ja
insb
jge
icebp
jno
stc
addr16
push
cmp
dec
sub
jae
adc
push
std
je
jae
clc
xor
idiv
sub
mov
add
lret
sbb
adc
je
mov
add
fidivrl
outsl
add
xchg
sbb
push
mov
sbb
xchg
dec
lds
and
mov
pop
aaa
mov
cmp
push
dec
xor
sbb
test
push
sbb
mov
push
les
or
insl
xchg
mov
xchg
icebp
or
inc
icebp
jmp
cmpsb
pop
xchg
add
push
rolb
sub
aam
int
pushf
loopne
lea
leave
loop
cwtl
push
push
xor
mov
jge
subl
mov
cmc
pop
out
push
add
sub
push
inc
xchg
out
in
sub
loop
pop
mov
cltd
and
dec
inc
sbb
xchg
pop
or
xchg
jbe
adc
jns
add
dec
js
jge
sbb
lea
push
addr16
or
lods
sub
test
loop
mov
mov
jg
je
xchg
addl
mov
ja
sbb
sbb
pop
sbb
dec
mov
test
adc
les
pop
cmp
aaa
and
decb
pop
jle
xchg
jno
mov
enter
lods
jp
push
fnstsw
jmp
xor
push
mov
mov
sub
pushf
outsb
mov
dec
ss
dec
push
mov
push
daa
inc
pop
mov
stos
dec
mov
insb
cs
xor
xor
cmp
ss
cmc
repnz
jecxz
lcall
cmc
pushf
lret
cmp
xor
add
outsb
fiadds
ljmp
xchg
lds
loope
dec
dec
pop
les
repz
les
mov
jno
lock
and
inc
dec
sti
popf
jmp
fs
jge
adc
aam
xor
push
lods
mov
jle
sarb
sub
jmp
lret
iret
push
cmpsl
inc
add
je
icebp
jle
add
rep
add
into
push
sub
mov
les
pop
test
push
cli
sbb
adc
scas
aad
inc
jp
fcoml
xchg
mov
lds
lahf
push
and
rcl
les
xor
sbb
cs
mov
add
and
hlt
mov
inc
push
mul
inc
inc
mov
in
test
mov
xor
pop
or
jge
jl
jmp
mov
cmpsl
mov
pop
stos
or
cwtl
int
add
sub
inc
jne
xor
fistpll
out
je
pop
pusha
inc
add
out
and
fidivrl
mov
xor
fdivs
je
push
stc
jae
sti
inc
ja
hlt
jae
call
mov
shll
sub
mov
sub
jb
lea
mulb
mov
mov
jbe
xchg
lods
iret
pop
sub
mov
cmp
sti
aam
mov
fsubrs
ss
fildll
cmp
adc
add
xor
jmp
clc
je
icebp
enter
push
push
xchg
xchg
sbb
jmp
fldt
aad
mov
adc
mov
jmp
jbe
insb
jb
cmpsl
xlat
mov
sbb
mov
test
mov
test
jo
movsl
or
lods
dec
fisubrs
xlat
xchg
ret
adc
push
push
mov
add
cmp
sbbl
push
popf
bound
jp
and
mov
xchg
nop
mov
hlt
mov
ss
inc
or
mov
jg
jl
clc
jb
sub
xchg
ficoms
sahf
push
mov
negl
sti
ds
or
jmp
mov
push
dec
push
hlt
fwait
jecxz
inc
xor
jo
mov
push
out
pop
xchg
push
add
repnz
jl
das
jl
scas
jecxz
hlt
adc
cmp
dec
test
mov
xchg
fwait
sbbl
mov
and
pop
push
jne
mov
roll
mov
push
int
xchg
and
sahf
push
ja
arpl
loop
gs
fsubrl
sbb
inc
roll
inc
bound
sti
test
movsb
xor
mov
imul
push
mov
inc
inc
dec
jecxz
loope
push
pop
adc
mov
fnstenv
dec
lea
lock
xchg
lahf
push
sbb
aad
xchg
ds
outsb
and
sub
mov
es
and
mov
jmp
mov
xor
jb
aad
shlb
ret
stos
add
movsb
push
add
enter
adc
jecxz
pushl
adc
movsb
pop
mov
xor
addb
mov
rol
out
aam
mov
mov
or
dec
notl
adc
imul
das
das
das
pop
add
cs
and
jecxz
scas
mov
inc
mov
aad
xor
xchg
pushf
ljmp
or
add
sti
aad
clc
dec
insb
sbb
leave
je
fwait
mov
jno
or
out
fbstp
mov
gs
nop
fsubrp
jl
push
rorb
mov
or
inc
xchg
ficoms
bound
cld
and
icebp
mov
add
shl
scas
inc
xor
adc
xor
shl
pop
push
jle
insb
mov
test
fwait
or
lret
lret
xchg
fisubs
jl
sub
les
jecxz
cli
ja
cmpsb
cmpsb
adc
jbe
sbb
sarl
ss
mov
sbb
jp
pushf
fcmovnbe
mov
aaa
add
sti
pushl
mov
mov
fidivrs
and
call
inc
or
add
or
pop
jae
pop
jg
fstp
add
xlat
cmpsl
iret
jno
je
fistps
jo
pop
adc
sahf
inc
cmp
cmp
sbb
int
std
je
pop
mov
mov
lret
and
pop
push
incb
dec
rclb
and
xchg
std
jge
mov
insb
negl
bound
pushw
addl
pop
jb
stc
sti
jnp
out
dec
nop
and
adc
in
popf
sarb
int
cmpsl
lods
sbb
adc
stos
pop
subl
add
in
mov
pop
outsb
push
and
sbb
xchg
mov
ret
jecxz
push
testl
cld
sti
clc
push
xchg
sbb
adc
fwait
je
scas
adc
mov
mov
mov
repnz
mov
lahf
cmp
push
fnsave
sbb
adc
stc
jl
icebp
push
adc
xchg
add
sub
push
ja
xor
pop
sti
jo
int
cld
jp
sarl
push
adc
mov
add
xor
negb
stos
aaa
adc
mov
orb
sub
test
push
adc
gs
adc
push
out
arpl
mov
xchg
ss
push
dec
cmp
jb
add
xchg
sbb
adc
jmp
xor
in
push
insl
mov
divl
into
jae
push
mov
outsl
aad
push
aad
push
cwtl
dec
icebp
loope
jl
jl
xor
mov
addl
push
imul
ret
fcompl
gs
push
sub
jb
push
in
fcom
nop
sbb
adc
es
cmp
inc
in
push
ja
add
xchg
push
mov
sbb
push
aad
xor
pop
lds
push
adc
xchg
fildll
sub
push
mov
das
jl
out
xor
inc
scas
jl
movsl
pop
sahf
push
sub
cmp
push
adc
mov
pop
aaa
mov
gs
mov
push
or
lcall
jg
enter
push
loopne
addl
addr16
test
mov
push
adc
push
adc
jge
addb
lret
imul
cmp
pop
adc
in
jge
sarb
sub
push
adc
inc
inc
jbe
pop
into
jae
push
sar
mov
je
push
adc
lcall
adc
outsl
xchg
dec
push
jmp
std
aad
nop
pop
push
int3
mov
push
and
adc
adc
mov
mov
push
fildll
jb
inc
xchg
jno
shlb
mov
adc
jecxz
add
adc
test
fldt
cmp
dec
jo
mov
cmpsl
daa
in
pop
out
mov
pop
xchg
push
adc
dec
hlt
stc
scas
jb
and
daa
jbe
mov
mov
rcll
mov
push
pop
sbb
adc
jo
cmp
movsb
clc
adc
adc
jl
mov
jae
push
lcall
push
enter
fmuls
push
adc
push
adc
ficomps
adc
mov
inc
sbbb
stos
loope
or
ficoml
add
scas
add
fs
stos
xchg
and
and
mov
test
push
adc
xor
pop
sbb
add
jbe
adc
xor
inc
xchg
push
adc
lcall
cli
xlat
add
add
out
adc
outsb
stos
mov
pop
sbb
adc
cwtl
les
add
inc
iret
add
add
pusha
mov
testb
sbb
bound
cmpsb
sti
jp
out
push
repnz
cmp
fistl
adc
insl
or
jno
mov
cmp
sbb
or
inc
add
je
or
in
jmp
repz
push
ja
mov
mov
cltd
cmp
add
stc
sti
ja
scas
mov
ficomps
into
insb
and
or
and
imul
pcmpeqd
add
add
sbb
xchg
aas
mov
adc
rol
sbb
xchg
mov
adc
xor
and
stc
fs
pop
mov
shrl
and
add
mov
ficompl
adc
mov
cld
adc
pop
mov
lahf
int3
inc
adcb
or
mov
and
push
ret
xor
add
dec
rcr
cmp
inc
filds
cli
test
adc
sub
ljmp
jmp
pop
cmc
lea
lock
add
or
or
mov
gs
sub
pop
mov
push
jb
push
xor
or
push
ja
lock
adc
cmova
inc
int3
orb
mov
sbb
xor
nop
pop
pop
adc
push
in
sbb
adc
mov
arpl
dec
imul
das
push
nop
in
cs
push
adc
loope
xchg
inc
jae
sbb
adc
xchg
or
mov
dec
pop
pop
adc
mov
pop
pop
pop
and
push
aaa
loop
jne
roll
pushf
pop
adc
or
jg
fwait
addr16
fdivrp
cmpsl
out
pushf
xor
inc
movsb
test
je
jl
and
icebp
ljmp
cmc
insl
dec
and
mov
test
fcoms
push
adc
adc
jne
xor
sub
xchg
jmp
adc
in
push
adc
fmull
xor
mov
imul
mov
adc
adc
test
test
rcrb
insb
lods
xor
xor
push
aam
sbb
leave
dec
push
pop
clc
sbb
and
ja
adc
jns
adc
push
adc
pushf
mov
decl
xchg
test
mov
pop
dec
cltd
xor
testb
test
mov
xchg
mov
rorb
enter
mov
pop
popf
xchg
fwait
std
leave
movsl
shlb
xchg
mov
iret
pop
mov
gs
int
es
in
in
lods
xchg
enter
stc
cltd
pop
sub
adc
adc
mov
imul
fidivrl
outsl
lret
movsb
nop
cld
ficoml
adc
lea
jo
cmc
xor
sbb
fiaddl
xor
dec
pop
mov
mov
shll
shlb
xchg
loop
inc
mov
push
adc
mov
std
pop
pop
cld
bound
adc
adc
add
mov
push
adc
adc
call
mov
pop
add
mov
mov
and
push
sbb
rorl
mov
scas
roll
out
jp
les
roll
sub
add
pusha
cmpsl
pop
pop
jl
fwait
sbb
and
call
div
cmpsb
push
daa
mov
jo
add
push
into
repz
push
insl
jo
add
dec
scas
sti
pushf
ljmp
daa
mov
test
xchg
push
xchg
mov
cmp
add
xor
not
pcmpeqb
cmpsl
xor
or
push
jge
ret
xchg
ljmp
ss
je
cmc
sarb
popf
mov
push
mov
das
orb
dec
jg
jae
ljmp
sub
dec
repz
cmp
push
dec
jae
pop
push
jp
mov
jo
add
cmp
notrack
insb
daa
mov
jl
in
jb
in
cmp
and
flds
cltd
cmp
mov
add
aas
jne
mov
sbb
xor
pop
cmp
sbb
xor
jo
adc
push
adc
adc
lahf
mov
daa
pushl
sub
lds
lret
xor
addb
push
cwtl
sbb
adc
dec
mov
into
sub
stc
adc
fistpll
incb
flds
fstpt
pop
pop
mov
cmp
xchg
test
scas
je
cld
bound
repnz
outsl
and
jo
mov
xor
sti
roll
in
cltd
mov
jp
xor
mov
in
sub
inc
push
jmp
pop
repnz
stos
jne
daa
loopne
mov
jl
out
xchg
sti
mov
fs
add
mov
add
or
cmpb
lea
pop
lea
or
out
mov
lea
xchg
subl
test
xor
pusha
aam
push
adc
fs
adc
popl
mov
scas
lret
jne
call
mov
add
out
pop
mov
js
fwait
xchg
cld
call
push
rcrb
out
pop
jns
sub
and
int
mov
in
int
adc
mov
arpl
cs
xor
call
adc
add
and
subl
sub
pop
pcmpgtb
xchg
loope
add
xchg
mov
inc
fisubrl
mov
add
ds
stc
or
xor
dec
mov
imul
test
pop
mov
out
int3
and
jmp
inc
add
xchg
mov
dec
bound
and
pop
out
js
mov
jnp
dec
das
add
std
sub
sub
push
xor
cmp
sbb
sbb
pop
orb
insl
pop
add
or
loopne
bound
sahf
dec
hlt
sbb
outsb
adc
insb
sbb
mov
mov
add
cmp
js
push
adc
lcall
mov
mov
ljmp
cmc
enter
mov
imul
mov
popf
sbb
cmp
in
cmpsb
jle
sbb
mov
push
ja
xchg
adc
movsb
push
and
add
jnp
and
lods
mov
jae
push
sahf
mov
pop
sub
lods
cld
lret
cmc
int3
push
push
push
js
mov
js
pop
pop
jnp
xchg
and
sar
ret
and
mov
mov
mov
pop
add
jmp
mov
mov
and
data16
aam
xor
ja
mov
push
daa
inc
insl
mov
sti
testb
divb
xchg
mov
mov
dec
mov
rorb
jp
add
xor
sti
out
cli
je
sbb
push
idivl
scas
lret
xor
jecxz
int
jmp
lock
cld
sti
testb
outsl
fidivrs
mov
rcrl
je
shrl
cmpsb
ret
add
xchg
mov
test
bound
ljmp
cmp
xchg
push
mov
xchg
mov
insl
mov
repnz
jne
lds
pop
jp
out
push
repnz
scas
cmp
pop
adc
sub
ss
mov
xchg
mov
sbb
aaa
out
jns
mov
add
fmulp
imul
cmpsb
das
xchg
mov
push
mov
mov
jbe
insl
mov
repnz
addr16
cmp
repz
mov
hlt
mov
je
cli
movb
and
les
inc
xor
cmpsb
mov
aad
mov
fwait
mov
cmp
ja
nop
push
mov
aad
jmp
cld
out
mov
mov
add
jecxz
mov
out
xor
popf
add
mov
push
push
pushl
mov
mov
xchg
mov
mov
inc
xchg
mov
pop
mov
inc
lahf
cmp
adc
jne
stos
add
add
js
push
adc
dec
lret
pusha
cmpsl
lahf
imul
idivl
js
nop
icebp
inc
adc
aas
mov
int
xlat
push
pusha
scas
out
sbbb
pop
or
repz
test
mov
xchg
repnz
repz
mov
mov
mov
pop
repnz
and
or
pop
mov
fwait
inc
in
fisttpll
jle
outsb
pop
xor
and
js
jle
iret
jge
into
lods
imul
xor
mov
push
pop
inc
inc
inc
mov
jp
pushf
in
lret
adc
push
sbb
icebp
xchg
and
and
xlat
cmp
js
jp
hlt
icebp
arpl
cmp
xor
cld
mov
mov
push
fcoms
daa
xor
pop
or
int
pop
jge
repz
inc
jae
stos
push
insl
mov
sti
mov
mov
add
cld
cmp
std
rcl
scas
xchg
sub
repnz
push
or
push
cmp
sub
lcall
dec
aaa
shll
pop
push
mov
or
or
or
mov
gs
xor
cli
cltd
pop
dec
cwtl
mov
lret
out
fdivs
pop
mov
aam
push
jbe
lds
roll
or
pop
mov
ja
faddl
add
outsb
or
das
mov
mov
cmc
test
fistpl
cmp
addr16
aad
or
sahf
adc
jb
pop
add
mov
mov
xchg
mov
jg
pop
mov
dec
lret
adc
mov
push
xchg
in
outsb
or
bnd
mov
add
in
mov
rcrb
repz
flds
xorl
cmpsb
add
or
aas
flds
lcall
ret
and
hlt
cwtl
cmp
nop
test
dec
pop
mov
xchg
enter
add
push
cs
das
aam
mov
lock
scas
xor
push
repnz
cmp
sbb
sub
pop
cwtl
test
cmp
fwait
mull
jno
jns
popa
test
jge
dec
in
inc
popf
cld
out
jno
leave
fadds
out
pushf
push
mov
fwait
into
call
push
clc
paddd
pop
xchg
arpl
jne
jo
jmp
mov
scas
inc
sahf
adc
fsubrl
xchg
pop
dec
jne
xchg
and
jmp
mov
scas
stos
stos
jge
push
repnz
ss
or
inc
fcoms
mov
xchg
daa
adc
add
jge
jmp
and
clc
leave
and
or
mov
mov
xor
pop
scas
inc
addb
mov
push
and
repnz
pop
jae
push
stc
jne
and
jp
ja
pop
loope
adc
jg
cmpl
or
push
cmp
sbb
bound
add
dec
popf
mov
jg
pushl
jbe
or
xor
sub
lcall
lret
mov
scas
scas
pop
xor
stos
shll
into
xor
mov
push
adc
loope
loop
sahf
cli
mov
hlt
inc
sub
add
in
test
xchg
sbb
adc
mov
dec
jg
add
add
adc
push
repnz
cs
cmp
cli
daa
pop
outsb
inc
addb
cmp
xchg
std
xchg
testb
repnz
sub
dec
sbb
mov
stos
scas
idivb
scas
lods
pop
inc
xor
xchg
push
clc
aam
in
lret
insl
popf
insb
cmp
mov
pop
arpl
add
ja
or
insl
fdivrl
les
jb
mov
pop
push
sti
jns
mov
testb
pushl
add
and
mov
stos
dec
adc
clc
fldl
mov
fnstsw
mov
sub
xor
sbbl
and
mov
sbbb
ss
jmp
imul
dec
jo
pop
adc
divl
neg
lea
xor
lea
addr16
xor
out
insb
pop
iret
test
mov
inc
xor
add
pop
or
push
ficoml
or
lret
push
jo
sbb
adc
cmp
mov
outsl
pop
das
lret
out
fdiv
jae
hlt
call
push
or
jp
and
mov
lock
sbb
mov
jae
sub
lsl
cmp
mov
mov
lock
ljmp
pop
insl
sbb
clc
clc
jae
sub
hlt
stc
imul
jne
sub
xchg
lods
inc
sbb
jae
jnp
loopne
imul
dec
daa
movsl
shlb
daa
push
xor
in
dec
das
mov
loope
sub
add
lret
push
es
dec
addl
or
lcall
mov
sti
fidivl
enter
popf
loopne
int
in
jo
insl
push
push
mov
inc
or
cmpsl
add
push
fwait
jnp
nop
insl
inc
adc
add
orl
push
or
pop
loope
and
push
and
add
aaa
shl
mov
test
setns
or
clc
fsts
adc
and
aaa
add
sti
push
leave
sub
popa
ret
or
jp
jge
xor
addr16
xor
outsl
add
addb
add
fbstp
in
add
imul
adc
adc
movsb
xchg
sahf
add
inc
pop
mov
fcomps
cmpsb
cmpsb
flds
mov
jp
inc
dec
or
mov
pop
rcrb
sbb
xchg
faddl
adc
sarl
lea
push
cmpsl
jo
imul
rorb
mov
push
stos
lret
adc
mov
add
pop
pusha
sub
pop
aam
cmp
fwait
jl
shll
stc
dec
mov
lods
and
dec
push
mov
or
pop
sbb
adc
lea
cmc
xchg
daa
add
cmc
mov
mov
repnz
xchg
sbb
jns
insb
and
insb
lcall
pop
loope
push
jbe
aam
lret
mov
xor
nop
push
cli
jge
out
and
cmpsl
xchg
push
ret
rcll
push
add
test
mov
pop
lret
xchg
ret
fs
xor
out
jbe
repz
jl
repnz
or
and
je
add
cltd
cmp
add
pop
adc
pop
adc
or
adc
daa
inc
insb
pusha
adc
adc
jl
shlb
fistpll
subb
pop
imul
jns
lea
shll
mov
add
jle
or
lea
and
push
cli
xor
xor
cmpsl
dec
pop
jle
out
push
repnz
mov
xchg
into
xchg
cld
adc
shlb
and
into
popf
mov
mov
push
sub
add
std
hlt
bound
insb
imul
lods
outsl
iret
push
sbb
jg
sti
pushl
or
in
push
std
nop/reserved
lret
rorb
fsub
cs
loope
mov
mov
jb
and
push
adc
xor
arpl
xor
mov
adc
push
adc
mov
outsb
push
repz
jge
cwtl
shrb
or
push
adc
adc
mov
jb
sub
sarb
sbb
call
mov
xchg
outsl
xchg
inc
push
add
pushf
cmc
cltd
ljmp
pop
gs
add
add
das
lret
iret
cwtl
xor
xlat
cmp
pop
test
in
jmp
jle
add
fimull
loopne
call
fwait
pop
adc
int3
fwait
pop
adc
mov
pusha
adc
adc
sbb
add
outsb
mov
pop
push
pop
xor
mov
lods
pop
dec
mov
fsts
aad
in
divl
notb
push
adc
xchg
cmp
xorb
push
mov
xor
jbe
scas
add
rorl
push
add
sub
mov
adc
pop
shrl
jo
xchg
movsb
and
push
adc
clc
jnp
ja
mov
pop
jge
mov
xchg
pop
lcall
rol
jnp
hlt
or
pop
in
add
push
xchg
push
adc
icebp
popf
inc
addl
cmp
cmpsl
mov
xchg
push
adc
mov
jecxz
add
xchg
scas
jno
sub
lcall
insl
orl
movsb
pushf
inc
pop
rclb
adc
adc
pop
sbb
mov
sub
neg
loopne
mov
xchg
loopne
popl
fldl
fdivs
jb
dec
pop
and
inc
fwait
out
xchg
test
pop
out
adc
sub
mov
js
push
jno
cmp
repz
sarl
in
in
insl
cltd
add
fistl
repz
jae
mov
push
aas
push
push
cs
pop
fdivs
in
mov
or
dec
dec
adc
popf
xchg
fucomi
sbb
in
add
push
sbb
push
arpl
cmc
push
mov
les
rcr
jns
lock
xchg
push
sub
and
movsb
outsl
imul
lock
jmp
popa
movsb
test
fninit
fdivs
int
add
cmp
lcall
lock
sub
shl
add
stc
int3
push
sbb
and
shlb
inc
xchg
movsb
enter
orl
cmc
repnz
nop
mov
adc
add
loop
sub
jg
call
jle
mov
outsl
inc
add
xchg
push
pop
push
adc
loop
inc
xchg
dec
and
xchg
jle
pushf
fdivl
cmp
je
iret
add
add
and
js
push
dec
rclb
sub
and
bound
jbe
sgdtl
add
sbb
sarb
ds
mov
cmp
jbe
sgdtl
add
in
mul
cwtl
adc
je
sub
cmpsb
das
jae
push
or
add
jbe
stc
add
adc
mov
js
jo
and
pop
mov
lds
push
ret
or
rolb
add
mov
sahf
aam
sbb
test
adc
sub
add
xor
rcll
lods
adc
pop
sbb
ds
jl
bnd
sbbb
mov
xor
dec
push
sub
es
sbb
and
add
cmp
dec
nop
mov
sub
mov
mov
les
pop
ljmp
popa
pop
ljmp
sbb
pop
sub
and
loop
add
push
add
push
cmpsl
mov
inc
test
mov
dec
cs
cmpsl
pushf
or
in
jbe
and
push
ds
and
andb
adc
mov
cmp
jle
div
repz
das
inc
cwtl
sub
and
insb
rcrb
sub
imul
jecxz
mov
stos
pop
adc
add
repnz
aam
sbb
ss
pushf
fwait
push
cmp
inc
jb
cwtl
jb
jnp
ds
adc
mov
push
pop
add
in
ss
outsl
inc
push
in
inc
nopl
or
mov
push
or
sub
dec
bnd
jp
mov
enter
ds
addl
iret
sub
rclb
arpl
inc
xchg
mov
cld
push
push
add
pop
jl
inc
sbbl
mov
mov
cmp
jg
pop
pop
jnp
jmp
xchg
mov
clc
mov
out
sti
push
pop
mov
stc
mov
sbb
scas
insl
cmpsb
hlt
fldenv
sbb
adc
sub
push
sub
nop
sbb
adc
jb
das
push
imul
mov
imul
scas
push
test
cmp
js
pop
xor
jmp
xlat
jl
mov
pop
sub
xor
into
dec
mov
test
sub
push
inc
mov
lock
fiaddl
xor
adc
loope
mov
jmp
stos
add
fwait
inc
fisttpll
sahf
dec
jl
gs
pop
lods
roll
mov
fisttps
cs
ret
jmp
or
mov
gs
xlat
mov
mov
aam
xlat
xor
test
dec
adc
aad
aad
sub
hlt
xor
xlat
imul
and
jo
or
or
stos
fmuls
lods
dec
or
add
xor
push
ss
push
in
decl
xchg
add
pop
ja
push
mov
push
shlb
stc
test
and
cmp
adc
jae
gs
xchg
insb
lahf
cmp
sub
or
popa
aas
ds
and
cs
or
adc
subl
je
cwtl
mov
push
fsubs
inc
add
cmc
adc
and
cmp
xor
dec
sbb
cld
xor
les
push
ret
add
add
add
xchg
pusha
pop
xchg
js
out
lret
mov
shrl
mov
mov
xchg
and
cmp
add
add
push
xor
dec
nop
pop
inc
xchg
cli
lds
adc
cmpb
jne
xchg
adc
imul
push
mov
push
sub
gs
push
sub
or
add
stos
and
xor
mov
shl
addr16
cmpsl
dec
popf
mov
push
mov
and
xor
aaa
push
fisttps
mov
lcall
out
out
sbb
stos
das
je
mov
jnp
addr16
push
add
mov
lcall
out
movsl
sarl
stos
das
je
mov
jnp
addr16
push
add
mov
lcall
out
test
pop
stos
das
je
mov
jnp
addr16
push
or
mov
lcall
out
repnz
jns
add
add
jecxz
inc
xchg
push
mov
sub
and
or
add
mov
adc
ret
loop
aas
cmpsl
or
xor
popf
loop
pop
mov
cmpsl
dec
adc
inc
or
jp
or
es
dec
inc
test
outsb
jno
mov
iret
dec
adc
xor
jo
addb
or
cmp
orb
mov
xor
adc
pop
mov
or
mov
inc
pop
or
jle
fisubrl
mov
xchg
mov
inc
lock
int3
xorb
dec
adc
imul
sbb
sbb
gs
mov
add
mov
data16
fstp
inc
mov
adc
jl
xlat
daa
jle
add
in
add
lahf
pop
and
add
push
adc
sub
imulb
adc
sarb
mov
lock
mov
mov
jne
pop
xchg
addb
in
pushf
fdivr
jae
into
mov
pop
fstpt
pop
cmp
idiv
movsb
clc
stc
cli
ja
into
les
jb
leave
lcall
pop
mov
in
pop
movb
jle
icebp
repnz
clc
xchg
shll
scas
cmp
addl
jnp
fcoml
cld
adc
adc
lock
sbb
add
jne
and
pop
adc
sub
dec
les
sahf
jo
xchg
outsl
xlat
scas
push
clc
inc
xchg
sub
adc
sbb
addb
xchg
or
cs
pop
dec
cmp
cmp
jno
xlat
mov
inc
or
repz
jnp
rclb
adc
cmc
pop
pop
mov
into
sbbb
or
fs
jmp
sub
pop
test
add
in
mov
adc
cwtl
sti
outsb
push
cwtl
andl
mov
push
les
sub
mov
inc
loopne
xor
mov
add
out
and
dec
inc
pop
cmp
fadds
fucomi
pop
pop
adc
xlat
ljmp
lret
shrb
push
fisttpl
filds
mov
push
push
orb
add
ja
mov
negl
pop
sub
shrl
mov
jle
push
out
jo
and
lret
cli
shl
pusha
pop
xlat
jae
push
rcl
push
frstor
call
test
jmp
lcall
push
mov
mov
in
inc
ss
pushf
pop
adc
mov
adc
stos
xchg
out
int
xor
bnd
mov
mov
xor
pop
cmc
cli
jae
dec
jp,pn
pusha
jbe
adc
ret
std
faddl
pushf
pop
adc
cmp
add
outsl
movsb
mov
les
call
pushf
pop
adc
mov
notl
mov
in
insb
ret
add
insb
dec
jnp
pop
ja
ljmp
sti
scas
movb
pop
adc
cltd
out
shr
pushf
jecxz
pop
mov
sbb
jle
scas
out
loop
in
pop
pop
adc
xchg
adc
jl
add
jl
and
repnz
repnz
fistpll
les
iret
mov
and
mov
mov
add
stc
pop
ja
pop
xlat
xchg
xor
bnd
add
pop
adc
add
mov
xchg
rolb
add
pop
scas
add
mov
xor
and
xor
mov
add
jp
add
add
leave
fnstenv
mul
xchg
push
repnz
movsb
sbb
stos
mov
lret
pushl
adc
ficoms
dec
sbb
je
pushf
pop
adc
dec
bound
insb
daa
inc
jo
mov
testb
pop
adc
mov
ja
test
mov
mov
pop
movb
or
pop
pop
adc
pop
ss
pop
pop
adc
push
mov
inc
jl
add
sub
dec
sbb
jmp
lahf
cmp
daa
push
popa
inc
int3
outsl
clc
mov
add
adc
add
or
and
adc
outsl
jmp
insb
clc
mov
cmp
scas
sti
lods
mov
xlat
mov
cld
mov
jle,pn
sbbl
lret
mov
cmp
dec
push
adc
xor
push
adc
mov
cmp
jb
jl
adc
sarl
sub
mov
inc
pop
js
adc
mov
les
lods
mov
sub
repz
loop
lds
in
push
mov
int3
aaa
ror
mulb
das
clc
fdiv
js
sbb
fistpl
mov
arpl
jl
push
mov
and
jno
pusha
je
int3
jmp
das
jno
push
jg
mov
ja
imull
jp
pop
enter
mov
inc
clc
cmpsb
rcrb
push
cld
jae
sbb
jg
ljmp
ja
leave
adc
out
pop
enter
mov
sti
jns
pop
lcall
repz
hlt
inc
into
push
or
loop
leave
sub
jmp
add
sbb
mov
sub
aas
loopne
cmp
inc
sub
dec
lds
call
mov
enter
xchg
cld
pop
dec
mov
add
cmpsl
lds
insl
or
or
sbb
dec
popl
divl
pop
mov
mov
sbb
dec
pop
or
inc
sbb
lahf
jge
fcmovbe
push
mov
xlat
in
jns
inc
and
sbbb
xchg
imul
dec
cmpsl
jg
in
int3
push
addr16
aas
mov
andl
popa
add
fcmovb
or
lds
inc
cmp
add
mov
div
xor
xor
out
inc
repz
loopne
push
iret
dec
pop
jecxz
xor
cmpsb
lea
pop
repnz
out
jnp
pop
or
nopl
popa
pop
mov
jae
add
sub
or
and
mov
pop
dec
fsubs
push
in
xchg
adc
daa
push
gs
xchg
scas
ret
inc
inc
ss
addr16
inc
popa
enter
test
jp
xlat
or
sarb
jle
ss
fidivl
test
xor
cwtl
jnp
xor
sti
aaa
idivb
divl
idivl
sarl
addr16
icebp
lea
je
sbb
popf
push
pop
out
jg
stos
jbe
jge
scas
xchg
nop
test
repnz
sub
mov
sub
jne
xchg
and
xchg
add
sti
jle
scas
divb
daa
test
lret
and
sub
cltd
mov
adc
add
jne
jb
jmp
mov
jp
inc
stos
gs
lahf
enter
mov
je
sti
je
icebp
sar
enter
leave
ja
sub
and
mov
pop
loope
push
xor
fildll
cli
add
jmp
mov
sahf
push
hlt
pushf
cmp
jbe
aam
scas
or
je
test
sbb
add
jo
imul
cmp
pop
jo
pop
adc
test
inc
fmul
std
je
jbe
bound
xorb
pop
shll
push
mov
fsubrp
adc
outsb
xchg
popa
shlb
sub
int
aaa
lahf
mov
jb
pop
add
add
pop
lret
dec
nop
and
sbb
adc
push
pop
jle
out
aaa
shll
lods
cmp
adc
pop
add
inc
xchg
and
arpl
mov
and
add
pop
jae
and
push
mov
adc
pusha
xchg
inc
addb
sub
push
jl
and
pop
adc
xor
inc
pop
adc
push
adc
adc
test
pop
adc
pop
cwtl
sub
jbe
stos
inc
int
mov
and
jge
sbb
div
idivl
xor
fsubrp
pop
pop
adc
sahf
lds
push
push
jae
je
in
pop
pop
adc
pop
push
iret
inc
mov
adc
inc
xchg
leave
cmc
and
add
xchg
pop
adc
aaa
dec
mov
jmp
je
dec
and
xchg
sbb
push
adc
pop
lods
sahf
loope
inc
imul
push
out
loope
jae
push
and
dec
call
push
adc
mov
icebp
ljmp
jno
xor
ret
loope
jp
adc
adc
pushl
cmc
stc
loop
cmp
xchg
mov
jp
cmp
fsubl
mov
mov
sbb
mov
in
aaa
aad
orl
cmc
and
stos
es
xchg
andb
ret
aas
sub
imul
das
dec
aam
ret
and
insb
dec
xorl
jge
imul
push
adc
inc
push
and
bound
jnp
add
or
or
pop
insl
rolb
pushf
adc
fidivs
int3
cmc
or
in
lea
xchg
in
push
adc
sti
insl
es
pop
gs
bound
xchg
push
adc
test
stos
fcom
enter
js
pop
ret
adc
adc
mov
out
push
ret
into
mov
test
lods
sub
add
mov
mov
ljmp
adc
adc
cs
or
pop
pop
adc
aad
sub
lcall
pop
pop
adc
out
ret
inc
out
mov
dec
test
dec
shl
imul
in
adc
mov
jecxz
adc
push
adc
mov
sti
fisubrs
dec
xchg
mov
or
insb
inc
dec
push
mov
adc
adc
sub
cmp
xor
movsl
js
inc
cmp
outsl
sub
adc
inc
aaa
adc
cmp
cmp
xchg
daa
cmp
add
push
adc
stos
jb
xchg
or
and
cmp
pop
pop
adc
movsl
mov
sbb
pop
adc
push
clc
cmp
lock
adc
xchg
lret
push
jae
add
and
cltd
les
xlat
mov
add
xchg
cld
pop
sub
pop
mov
and
xor
mov
test
les
push
adc
aas
inc
std
std
hlt
jb
shll
sbb
int
icebp
lods
add
int
inc
mov
add
add
mov
ja
into
dec
cld
mov
xor
add
adc
mov
in
jg
inc
mov
xchg
pusha
pop
out
mov
aad
pop
mov
dec
popf
cmp
lret
push
adc
xchg
sub
or
mov
xor
mov
push
je
popf
cmp
push
outsb
addb
jb
subb
mov
mov
cmc
sarb
adc
dec
popf
cmp
inc
ret
scas
add
jbe
jle
add
adc
adc
push
adc
call
jmp
les
call
jb
and
aas
push
cmp
and
xor
mov
lea
pop
mov
push
adc
dec
subl
add
mov
dec
xchg
push
and
and
xor
pop
mov
sub
push
adc
add
lret
push
outsl
test
insb
dec
lret
jmp
daa
dec
mov
mov
clc
jne
add
scas
lods
lcall
add
sbb
pop
mov
inc
cltd
aas
jae
into
inc
adc
adc
mov
add
sbb
push
adc
in
pop
pop
adc
sbb
pop
adc
xchg
icebp
ss
jmp
jle
mov
mov
movsb
std
int3
add
mov
xor
int3
lock
add
push
adc
lcall
xor
xchg
and
pop
jp
test
sarl
or
sbb
and
pop
adc
cmpsb
aaa
push
outsl
sbb
pop
adc
jle
sti
or
pop
inc
jmp
aas
lret
cmpsb
sbb
ds
mov
into
fdivrl
mov
dec
stc
idivl
adc
jns
sarl
fwait
jp
mov
repnz
sbb
adc
and
sbb
adc
or
pmulhuw
pusha
shll
adc
test
xor
lds
sti
and
mov
jo
nop
addr16
lock
adc
push
adc
ds
or
loope
nop
xchg
cs
sbb
sub
mov
xchg
sub
push
pushf
in
xchg
cltd
and
ja
in
hlt
popl
and
repz
push
adc
cltd
cld
push
jnp
jl
addb
mov
xor
lock
int
inc
cmp
divb
dec
mov
push
imul
pushf
mov
pop
repz
in
in
or
insb
clc
ret
push
in
sbb
jp
fcmovnbe
imul
insb
mov
fisubl
lock
xlat
xor
cmpsl
xor
adc
fxch
sbb
adc
mov
mov
sbb
into
add
mov
pop
mov
lods
ja
sbb
inc
stos
adc
push
sub
pop
push
fmul
jbe
sbb
dec
movsl
test
shl
lock
pop
adc
loope
sbb
adc
jp
int
lods
scas
xchg
mov
or
mov
imul
rclb
imul
dec
push
repz
sbb
jae
jmp
lret
push
lds
or
push
lock
scas
sahf
dec
hlt
enter
and
pop
adc
dec
nop
sbb
adc
test
push
sub
adc
adc
pop
adc
pop
adc
dec
in
sbb
adc
push
data16
lahf
les
jl
repz
arpl
out
push
icebp
lods
sbb
pusha
sbb
cmp
aaa
jne
add
loop
inc
pop
adc
push
adc
hlt
dec
mov
mov
adc
pop
adc
adc
inc
sbb
push
adc
ja
add
mov
shlb
in
sbb
lahf
add
add
pop
sti
nop
and
cmc
push
rol
mov
sbbl
sbb
adc
add
pop
idivl
or
mov
or
mov
pop
dec
push
xor
mov
mov
inc
xchg
adc
jg
cmp
cmp
insb
lahf
pop
mov
imul
or
push
add
xchg
lock
arpl
mov
sarb
dec
popf
cmp
je
add
pop
adc
orl
je
mov
inc
sub
jne
dec
jle
push
bnd
outsl
pop
add
les
adc
repnz
mov
sbbl
sbb
adc
add
push
xchg
jp
or
mov
or
clc
movsl
push
dec
pushl
lds
push
pop
push
add
jl
insb
call
jmp
popa
pushf
adc
add
mov
push
lock
sub
jno
pusha
inc
pop
adc
adc
cmp
adc
push
adc
add
cmp
jecxz
or
push
and
jp
mov
fimull
or
imul
xchg
pusha
lret
pop
adc
bound
adc
mov
and
movsl
lock
pop
das
stc
adc
stos
push
and
xchg
inc
mov
mov
push
adc
scas
adc
jle
and
push
adc
and
mov
insl
sbb
dec
dec
push
sbb
lods
addb
cmp
and
divb
xchg
mov
adc
mov
push
adc
insl
test
movl
push
adc
lods
adc
femms
cwtl
fdivl
inc
lahf
jecxz,pn
leave
pusha
jp
adc
adc
je
adc
sbb
in
push
pop
sbb
push
sub
pop
adc
xchg
adc
cmp
cmp
jl
xchg
mov
adc
xor
push
mov
sbb
or
lret
cwtl
sub
out
inc
testb
cmp
push
adc
or
std
add
lock
loope
outsb
mov
sbb
and
and
jge
repnz
inc
add
xlat
mov
popa
xchg
mov
adc
pop
cld
xor
daa
pop
add
call
mov
xchg
adc
jp
and
and
add
pop
adc
adc
xor
jge
sub
loope
movsl
lcall
pop
outsl
add
sub
or
mov
jo
mov
test
add
push
clc
dec
test
fidivs
sbb
inc
stos
mov
sub
push
adc
addr16
sbb
pop
dec
sbb
xor
adc
sbb
in
jmp
mov
insl
jb
jmp
clc
mov
lret
aas
stos
fsub
and
push
xorps
ret
push
sub
dec
test
and
outsl
fbld
test
shrl
rolb
orb
pop
adc
and
fistpl
and
add
or
repnz
add
cmp
pop
cmp
dec
in
popf
cmp
in
pop
pop
adc
daa
xor
rcrb
or
cli
stc
push
aam
repz
into
push
ja
xor
mov
mov
js
incl
lret
pop
adc
into
add
push
adc
call
jmp
pop
adc
mov
add
popf
test
sbb
insb
mov
mov
pop
enter
scas
adc
out
mov
sbb
les
add
push
mov
bound
fs
push
fistl
add
adc
in
pop
sbb
int
xlat
dec
sub
pop
les
adcb
outsb
add
jbe
jle
and
push
fcmovnbe
popf
pop
adc
popf
pop
adc
cld
adc
adc
das
clc
incl
enter
adc
add
push
adc
or
cmpsl
lds
xor
les
jbe
jbe
add
loop
jge
fidivrs
mov
fldl
es
pushl
in
inc
jne
mov
pop
jl
movsl
sbb
div
pop
lret
imul
cmpsl
inc
addb
rcrb
jnp
xchg
xchg
sub
mov
arpl
sub
orb
lds
mov
cmpsb
test
xchg
test
lock
mov
sub
push
jne
ds
add
adc
push
push
and
xor
xchg
jge
xor
ja
mov
and
fistps
test
mov
add
mov
aaa
ds
rolb
lahf
int3
bound
push
push
data16
pop
cli
jle
adc
jne
pop
xor
loopne
pop
adc
dec
mov
adc
cld
adc
adc
ja
nop
dec
push
adc
add
dec
mov
xchg
or
fwait
push
imul
lcall
push
adc
cmpsl
fadd
mov
dec
push
movsl
cmp
addl
lret
jecxz
mov
jo
in
jb
sbb
jno
cmp
mov
xorl
fbstp
lock
add
pxor
inc
mov
mov
jl
mov
sbb
andl
test
xor
xchg
popa
cmovne
add
inc
sub
out
push
push
inc
xor
aaa
ret
andb
push
push
cmp
lea
cs
pop
popa
decl
jmp
pop
adc
jnp
jns
mov
and
and
std
or
bound
mov
xchg
repz
jecxz
lods
mov
jp
push
sbb
es
cmp
mov
sbb
daa
mov
adc
cld
xchg
outsb
inc
mov
pusha
add
and
lret
mov
lods
in
jmp
insl
lcall
push
lret
jecxz
dec
and
iret
popa
mov
cmpsb
mov
divl
mov
aas
mov
ret
pop
shlb
ljmp
add
clc
mov
lcall
fmuls
push
inc
ds
lahf
inc
push
cli
fld
pop
jl
xchg
push
scas
mov
pushf
adc
scas
pushf
adc
xlat
mov
xchg
and
jnp
and
ret
lret
or
adc
fs
popf
pop
adc
adc
lret
add
push
dec
add
mov
and
cmp
lret
sbb
xor
mov
addb
imul
jnp
sbb
mov
in
aaa
jl
jnp
lock
out
lahf
sub
and
cltd
insl
pushf
fcmovne
mov
sbb
aas
add
add
subb
push
jecxz
mov
pushf
sti
iret
mov
sbb
jae
add
xchg
leave
cmpsb
add
ljmp
sbb
sbb
arpl
and
int
pop
jg
stc
sti
jge
push
xchg
and
mov
push
adc
mov
les
xchg
jae
add
data16
jg
ljmp
lds
push
fbstp
sbb
dec
bound
add
repnz
stos
insb
push
jne
rcll
sub
cmpsb
add
das
pop
imul
add
in
mov
mov
ljmp
adc
sub
in
fisttpl
les
add
push
adc
movsl
dec
popf
cmp
or
sahf
pop
adc
and
shlb
dec
sub
je
insl
xchg
sbb
cwtl
xchg
das
xchg
call
mov
pop
and
fwait
mov
repnz
aaa
fsub
add
cmpsb
cmpsl
scas
adc
push
and
sub
lds
add
cmp
push
cmp
das
add
push
shrl
dec
xchg
mov
sbb
fsubr
adc
cld
adc
and
movsb
lods
adc
jno
push
bound
sbb
dec
stos
fwait
cli
adc
or
xchg
test
dec
dec
inc
cwtl
in
cld
jbe
pop
push
xchg
mov
mov
sub
lret
pop
adc
outsb
mov
xor
cmp
popf
pop
adc
cwtl
cld
adc
adc
adc
xchg
xor
mov
fidivl
xor
push
sub
xchg
outsl
xor
in
xchg
cmpsb
adc
mov
xor
push
gs
mov
adc
repz
push
sub
popa
lods
mov
fiaddl
subb
cmp
rclb
mov
loope
ja
and
add
add
ret
pusha
push
push
push
or
ss
imul
gs
jne
push
or
adc
cs
pusha
adc
sub
xchg
xor
insb
shlb
or
sbb
js
rorl
push
ds
xchg
or
test
cltd
ds
sahf
push
push
cltd
cmp
test
push
adc
jae
clc
mov
cmp
dec
movsb
adc
adc
cmp
pop
imul
ja
in
inc
setb
repz
neg
hlt
sbb
movsl
dec
popl
pop
xchg
hlt
scas
inc
adc
out
lret
xor
test
in
pop
pop
adc
xchg
mov
jne
pop
pop
adc
ljmp
and
mov
scas
push
cmp
cmp
jge
ret
lret
sub
sbb
or
stos
jno
pop
adc
cmp
adc
adc
push
add
push
clc
dec
test
jo
jne
jecxz
inc
fidivl
stos
call
stos
inc
aam
ret
xor
loope
xchg
pop
cld
daa
int
adc
mov
stc
adc
push
flds
in
pop
pop
adc
pop
push
mov
sbb
pop
adc
pop
aaa
dec
mov
pop
jne
lds
outsl
lcall
or
stc
cwtl
pop
mov
fists
stos
inc
jecxz
stos
mov
sbb
leave
push
loopne
lods
fcomps
mov
repz
add
stos
pushf
sti
and
out
cmovae
cmp
pop
push
jbe
les
add
scas
add
sub
adc
jecxz
inc
xchg
je
push
sub
sbb
adc
add
dec
int
outsl
pop
js
mov
mov
subl
adc
mov
xlat
addb
incl
dec
jge
or
and
in
es
popf
cmp
insb
pop
jbe
bound
pop
pop
outsb
addb
jp
pop
add
add
aas
mov
jmp
push
cmpsl
into
lds
mov
mov
push
ret
in
and
jmp
inc
xchg
inc
sbb
sbb
push
jmp
xor
jnp
add
jge
jmp
xor
push
adc
lods
jnp
enter
push
sub
in
sbb
imul
jo
and
aam
sbb
mov
bound
or
mov
sbb
adc
popa
and
mov
mov
lds
cmpsl
cmpsb
dec
jae,pn
xchg
sub
jp
add
stos
jnp
push
dec
nop
and
adc
into
popf
vpunpckhwd
pop
mov
in
hlt
pop
fidivs
jb
jbe
adc
jl
arpl
lds
sbb
cmpsb
dec
adc
add
sub
add
and
mov
test
jp
dec
fstpl
push
cmp
sub
add
cmp
jmp
inc
sbb
std
pusha
pop
jb
data16
and
xor
shl
repz
push
outsb
cwtl
sub
cld
jae
cmp
mov
ret
mov
or
lahf
in
sbb
pop
dec
inc
outsl
push
xchg
sbb
push
pop
aad
je
arpl
cmpsl
lock
or
push
sub
add
xor
insb
in
inc
jp
mov
and
xor
mov
jmp
sbb
leave
movsb
jp
xchg
and
mov
add
xorl
cmp
jmp
loop
popf
lds
das
aas
jno
shl
xchg
sub
push
mov
sbb
or
mov
sub
pop
call
pop
xcrypt-cfb
cmpsl
mov
inc
jmp
pmaddwd
cld
inc
out
in
xchg
fbld
ja
adc
sbb
aad
loopne
es
lret
shlb
scas
daa
dec
mov
inc
xor
loop
push
out
inc
inc
rol
mov
jle
cmp
clc
pop
add
push
adc
push
push
lret
cmp
outsb
fildll
notb
adc
out
jb
repz
into
lds
test
xor
xlat
mov
cli
xchg
outsb
lcall
popf
or
mov
scas
test
inc
inc
mov
cmc
adc
adc
and
dec
cs
gs
int
rclb
cmp
js
adc
adc
adc
and
imul
cmp
pusha
flds
push
int3
mov
push
adc
filds
mov
cmp
outsl
or
mov
int3
lret
ss
dec
sub
or
or
jecxz
shll
fprem1
push
loopne
aaa
push
call
sub
mov
sub
fcmove
loope
add
lea
scas
das
mov
movsb
push
mov
xchg
push
and
ret
mov
sbb
inc
inc
andb
ss
adc
mov
mull
mov
test
test
and
jae
inc
inc
out
das
idiv
repz
xchg
movsb
fistpll
loop
int3
inc
or
fisubrs
stos
dec
mov
jle
repnz
adc
fucomip
sbb
sbb
ljmp
mov
push
repnz
pop
sbb
add
cmp
or
sbb
bound
cmpsb
cmp
jae
xchg
jnp
add
jae
ja
adc
loop
add
fstpt
lds
pop
pop
adc
mov
or
pop
pop
adc
pop
pop
adc
in
jp
maskmovq
mull
popa
in
mov
mov
hlt
add
xor
inc
je
jbe
xchg
sub
adc
xchg
xor
vcvtsd2si
rcll
and
add
pop
in
popf
pop
adc
sbb
pop
push
mov
popf
pop
adc
sahf
ret
adc
mov
add
cmp
add
xchg
inc
dec
lds
les
add
push
cli
lret
lods
xchg
cld
jbe
push
sbb
or
xor
sub
rcrl
adc
pop
adc
stos
add
push
adc
cld
cld
sti
negb
insl
xchg
mov
adc
sahf
xchg
cmp
aaa
lcall
lods
add
insl
or
sbb
test
jo
mov
mov
mov
push
xor
sub
jmp
add
xchg
lock
imul
jmp
pop
jg
in
mov
lock
and
cmp
xor
pop
pop
cld
adc
adc
lods
adc
test
scas
dec
xchg
pop
jl
movsb
outsb
dec
sbb
cs
adc
rcrl
dec
jnp
or
xor
popa
add
mov
sti
adc
push
lret
pop
sbb
xor
bound
mov
cmpsl
or
cmp
sbb
sub
mov
lea
out
iret
mov
cmc
cli
cwtl
add
and
out
mov
push
jb
sarl
pop
cmp
stos
ss
jecxz
xchg
xchg
add
or
loope
mov
jge
or
sbb
jl
cli
or
stos
push
popa
xchg
in
sbb
stos
nop
xchg
repnz
lret
mov
mov
lock
and
xchg
fs
cld
test
imul
insb
sbb
and
mov
inc
inc
xchg
jg
pop
sbb
mov
insl
adc
push
and
es
dec
jnp
cs
push
pop
pop
push
sbb
adc
dec
pop
cwtl
adc
xor
xchg
gs
mov
sbb
sbb
fbld
mov
clc
mov
out
gs
and
mov
sbb
int
imul
lds
push
ja
xor
mov
int3
sbb
add
pop
inc
add
in
xor
aam
push
pmuludq
add
and
fdiv
negb
jmp
or
lret
pop
negb
mov
fiaddl
in
xchg
loope
scas
cmp
popa
in
mov
in
sbb
inc
scas
das
ss
adc
add
stos
cltd
hlt
cld
and
lock
pop
sub
cld
in
add
xchg
hlt
and
sbb
mov
pop
shlb
pop
movsb
imul
push
sub
xchg
mov
int3
adc
lock
mov
pushf
adc
xchg
adc
nop
push
movsb
and
pop
pop
adc
fisttps
jge
repz
popa
mov
aas
inc
mov
lcall
fisubrl
outsb
inc
inc
xor
and
pusha
sbb
adc
pop
test
insb
mov
sbb
mov
pusha
add
mov
jb
jbe
add
mov
nop
aas
js
lods
fcomps
pop
rorb
addb
sub
in
aam
mov
mov
dec
lds
dec
les
add
scas
pop
push
lods
sti
imulb
mov
or
mov
add
cmpsb
clc
add
adc
incl
dec
jg
adc
loop
insl
xchg
sahf
adc
cld
cmp
cmpsb
jnp
jae
push
cmp
add
je
jne
or
pop
jae
push
mov
dec
shl
jae
pop
es
sbb
stos
pop
js
add
add
cmp
dec
loop
push
bound
sbb
out
lahf
addl
add
add
adc
call
or
and
xor
mov
push
adc
pop
sub
out
jbe
dec
sahf
fdivrs
sub
xchg
pop
cli
lret
mov
pop
and
dec
les
mov
add
ja
jae
adc
add
push
loopne
mov
sbb
adc
subb
add
in
and
xor
jg
cltd
cmp
mov
xor
jnp
add
scas
jo
jp
and
aas
mov
xchg
out
sub
cltd
push
ret
jbe
pop
insl
jg
pushl
jae
add
ljmp
les
pushf
cmp
sub
xchg
xchg
add
mov
dec
xchg
out
or
dec
popf
call
call
lock
sub
add
shll
sbb
sbb
pusha
mov
and
and
adc
xor
loope
sub
jbe
adc
in
and
lock
arpl
mov
lret
incb
or
cmpsb
mov
cmp
rol
xchg
fs
push
nop
insb
xchg
aas
iret
push
cwtl
movsl
into
jbe
repz
je
iret
ret
out
in
mov
lock
mov
inc
inc
subl
dec
or
ljmp
test
and
rorb
rol
aaa
stc
add
mov
push
fmull
lahf
repnz
pop
sbb
inc
insl
fwait
loope
sub
jno
add
popa
shr
pop
pop
adc
mov
and
adc
jns
pop
pop
adc
in
pop
pop
adc
pop
je
in
sbb
mov
daa
push
les
loopne
push
stos
push
in
pop
pop
adc
daa
aad
fstpl
pop
adc
xchg
arpl
test
mov
mov
pop
xchg
mov
and
adc
and
addb
ret
insb
ljmp
iret
popl
out
shll
lret
enter
ret
and
xchg
call
mov
adc
xchg
xor
sbb
adc
daa
sbbb
and
push
in
adc
push
dec
movsl
jge
push
xchg
push
or
lds
mov
adc
adc
push
nop
pop
pop
adc
cld
sub
push
sbbb
mov
test
adc
mov
inc
loope
mov
pop
fisubl
ds
ret
pushf
pop
adc
mov
adc
mov
adc
adcl
test
pop
test
pop
pop
or
sub
mov
pop
icebp
cltd
pop
sbb
pushf
pop
adc
or
pop
pop
adc
shrb
mov
fsubrp
in
pop
pop
adc
imull
and
pop
pop
adc
xchg
mov
mov
or
lcall
adc
rcrb
or
mov
or
push
fnstsw
lds
cld
mov
pop
aaa
mov
pop
adc
scas
add
push
adc
fcmovne
lods
in
or
addb
ss
sarb
out
xchg
or
fs
pop
jne
inc
push
fildl
hlt
repnz
mov
fbstp
push
cmp
orl
mov
mov
pop
adc
cld
adc
adc
js
out
dec
cmp
jnp
popf
pop
adc
stos
add
push
adc
cmp
pop
adc
pop
mov
sbb
test
popf
pop
adc
cld
adc
adc
pop
adc
call
mov
popf
pop
adc
pusha
es
mov
clc
popf
pop
adc
cld
adc
adc
pop
adc
adc
pop
dec
push
dec
sub
pop
adc
cli
mov
inc
sub
add
or
les
cld
adc
adc
loop
pushf
pop
adc
xor
sti
adc
push
in
pop
pop
adc
notb
aaa
sbb
pop
adc
pop
addr16
cli
je
stc
adc
pusha
xchg
mov
scas
test
fwait
data16
popf
cmp
adc
mov
les
bound
jg
in
repz
imul
jnp
jp
adc
stos
mov
aas
repz
in
fidivl
or
popf
inc
mulb
imul
addl
gs
out
pop
jno
out
divb
pusha
movl
popf
push
pop
mov
std
movsb
mov
insb
sub
and
adc
sbb
shll
sbb
sti
div
mov
jnp
cs
cwtl
xchg
fcoms
push
adc
jp
int3
adcb
mov
sbb
xor
aam
push
adc
xor
mov
enter
inc
iret
mov
stos
xor
in
adc
adc
sub
les
push
adc
outsb
hlt
mov
int3
pop
shlb
push
inc
inc
pop
sarb
pusha
add
xchg
fcompl
insl
jns
sbb
fdivrl
imul
mov
pusha
mov
push
adc
leave
fmulp
test
aad
sbb
inc
movsb
add
cmp
jl
adc
jg
adc
push
mulb
adc
push
adc
pop
dec
cmp
inc
xor
leave
outsl
lahf
sub
mov
jns
adc
sub
pop
adc
add
push
cmc
inc
adc
adc
mov
adc
gs
xchg
or
lods
and
push
adc
je
mov
push
push
xlat
sbb
push
adc
shrb
int
xchg
enter
sub
sub
cmp
or
jmp
push
jne
arpl
mov
pop
push
and
sbb
push
out
test
inc
fsub
je
in
lret
rorl
rol
test
adc
int3
jmp
or
dec
jno
fisubrs
sub
int3
int
ss
jno
shl
push
mov
loopne
jnp
int
daa
and
or
pop
ds
xchg
test
lret
mov
lret
xor
and
dec
sahf
sub
fisubrl
int
jbe
cli
loope
cwtl
push
fcoml
push
adc
cmp
fmulp
adc
adc
push
sbb
mov
xchg
jae
js
push
testl
xlat
inc
sbb
sbb
stos
in
pop
and
jb
adc
adc
sarb
push
lahf
cmp
lods
stc
rcrb
push
aad
cmp
daa
int
ficoml
sub
add
insb
fs
push
adc
lahf
and
scas
fwait
xor
adc
jb
sub
pop
sbb
adcl
stos
mov
add
js
push
adc
insb
adc
dec
sbb
out
or
push
mov
hlt
jns
add
sti
imul
pop
ja
rcl
js
push
adc
push
xor
movsb
dec
ret
stc
jae
mov
test
jbe
or
leave
imul
mov
cmp
daa
cmp
pop
push
adc
fnstsw
clc
pusha
jmp
mov
hlt
push
je
jb
add
ljmp
push
adc
mov
cmp
stos
and
mov
stos
je
add
dec
jp
adc
adc
call
divl
adc
jp
mov
int
adc
adc
xchg
sbb
push
adc
movsb
ret
movsb
mov
fidivrl
roll
dec
jmp
cmpb
or
addl
insl
pop
sub
sti
pop
idivl
pop
sti
mov
fucom
nop
stos
cwtl
jne
repnz
push
adc
dec
pop
les
lret
xlat
out
orb
add
outsb
pop
mov
js
ret
sub
mov
mov
testl
adc
ret
jg
xchg
sahf
bound
add
jecxz
jl
test
pop
adc
pop
jnp
aad
imul
sbbb
push
cli
mov
add
add
repz
lcall
adc
int3
fdivl
nop
shlb
push
jp
add
icebp
jp
pushf
fildl
jl
out
mov
dec
into
shlb
push
mov
jl
movsl
or
in
pop
sub
out
ret
mov
mov
aaa
dec
daa
cmp
cld
mov
sti
mov
std
dec
addr16
daa
popa
mov
stos
test
xor
cwtl
push
aas
out
jmp
inc
mov
and
pop
lods
mov
push
sub
nop
pop
or
xchg
pop
sbb
mov
int3
shll
mov
stos
or
test
cmpsl
push
testb
dec
movsb
adc
xor
mov
pop
mov
sub
jno
xor
dec
mov
add
lret
popf
push
mov
sub
push
mov
loope
test
js
iret
pop
aam
mov
sarl
and
int
adc
adc
jnp
lock
xorb
fnstcw
inc
ja
leave
adc
out
stos
enter
xchg
aam
add
jnp
in
mov
mov
shlb
les
data16
mov
xor
mov
imul
xor
push
movb
mov
loope
iret
mov
cmp
outsb
and
mov
or
orl
enter
pop
std
cltd
cmp
inc
in
and
loope
dec
inc
mov
orb
pop
or
dec
mov
pushf
jge
add
pop
jmp
jl
pop
adc
add
cltd
or
nop
xchg
dec
sub
pop
test
inc
push
in
xor
xchg
fwait
inc
push
scas
push
and
mov
aaa
cmpsl
ja
adc
mov
fiadds
mov
into
lods
or
pop
lret
sbb
fildll
cltd
arpl
sub
dec
sub
dec
fistl
ret
push
loope
or
fisttpl
clc
adcb
mov
sbb
daa
lds
mov
ss
push
or
mov
mov
scas
das
das
das
sub
int3
mull
xor
mov
add
jge
xchg
test
scas
out
cmp
jmp
mov
sub
flds
test
or
fcmovnu
cmp
xor
sub
inc
inc
mov
dec
mov
xlat
cmp
inc
movsl
insl
fdivrs
mov
mov
mov
aaa
cmp
faddl
ret
push
push
data16
mov
notb
adc
add
int
imul
fildll
jne
xchg
in
hlt
aaa
jbe
cwtl
pop
imulb
ret
bound
leave
jne
xchg
jne
mov
sub
dec
scas
sti
hlt
mov
jbe
mov
xchg
cmc
imul
pop
pop
sbb
mov
push
cld
sub
cmp
sbb
jl
ds
jge
mov
cmp
aaa
dec
js
cmp
aam
pusha
sahf
pop
lds
loop
add
cli
or
scas
repnz
call
pop
mov
jle
aam
ret
cmp
scas
jae
jmp
pusha
test
lock
fadd
imull
jl
pop
repnz
addb
mov
out
mov
jne
fidivs
cmp
insb
xchg
cmpsl
dec
popf
dec
push
mov
scas
out
mov
jge
rcrl
jge
cli
addr16
cmp
shll
push
dec
hlt
stc
xchg
incb
mov
divl
lret
cmp
push
lods
sub
in
cmp
hlt
das
iret
ss
cmp
fdivp
addr16
mov
sub
lods
mov
dec
adc
mov
mov
les
in
mov
fwait
add
aad
dec
je
cld
lods
aad
insl
je
stc
cmp
stc
je
int
cmp
shr
test
mov
imul
sahf
fdivs
sub
jg
divl
xlat
test
shr
add
xchg
stos
jge
inc
jnp
pop
je
mov
data16
fs
hlt
iret
lcall
iret
xchg
pop
dec
jb
mov
out
lods
in
fs
out
movsb
scas
and
mov
bound
push
inc
mov
push
in
and
jbe
add
push
fsubrp
lea
out
aad
rep
fcomip
rcrl
dec
fisttpll
mov
lret
insb
and
and
push
mov
sti
and
es
push
mov
mul
pop
addr16
sub
lea
enter
jge
push
mov
out
xor
lcall
aad
pop
push
sbb
jb
out
mov
fdivrl
jo
test
stos
movsl
fsubrl
inc
shlb
out
and
xlat
shll
inc
bound
data16
push
insb
jl
jmp
aaa
lahf
arpl
mov
cs
aas
mov
das
xchg
lcall
sbb
cli
mov
insl
pop
arpl
pop
pop
push
rcll
ja
repz
cld
jecxz
add
push
sahf
sbbl
and
inc
fcomip
scas
cmove
aam
sbb
lahf
ja
mov
enter
pop
mov
sub
adc
xchg
rclb
test
das
nop
or
insl
push
mov
mov
repnz
xor
dec
and
push
jg
pop
mov
jns
add
repnz
and
int3
daa
movsl
outsl
push
loope
rol
xchg
in
adc
jae
fadds
out
xor
xor
ss
jp
mov
cmpsb
add
sti
insl
int3
es
pop
or
sub
push
lahf
je
out
and
imul
roll
je
mov
arpl
divb
jb
xchg
jg
push
push
or
int
in
sti
and
cmp
les
fs
js
adc
lods
xor
popa
mov
xchg
into
stos
xchg
mov
mov
fwait
scas
xchg
inc
adc
or
in
repz
xchg
push
enter
nop
push
aaa
or
outsl
imul
mov
jnp
adc
mov
push
adc
or
add
adc
adc
cld
add
fs
fcomi
rclb
push
adc
je
out
jbe
cmpsb
adc
adc
pop
push
adc
add
sub
inc
bound
adc
or
push
adc
or
xor
daa
scas
and
add
mov
push
lret
jns
imull
mov
iret
ret
daa
push
stc
imul
mov
aaa
mov
adc
adc
jle
xchg
sahf
dec
sbb
inc
insb
adc
adc
pop
push
jle
xlat
call
adc
push
bnd
mov
or
jbe
and
les
jmp
lret
mov
add
or
push
adc
ljmp
ret
mov
gs
popf
insl
cld
push
mov
adc
push
cmpsl
xchg
or
push
shrl
or
lds
lea
fildl
cld
ljmp
sbbl
aaa
rorl
or
mov
cmc
lahf
int3
mov
xorb
fwait
jne
imul
fidivl
jns
cmp
shll
pop
shrb
add
jge
repnz
xor
sbb
and
aaa
pushf
lock
negl
insl
push
shll
xchg
fnstcw
cmp
aas
xor
sbb
adcl
or
lods
shrl
add
into
popa
jo
fcomip
jge
lret
mov
lcall
cwtl
into
scas
xor
jnp
mov
hlt
out
fnstsw
shlb
mov
and
int3
adc
sub
call
loope
std
inc
mov
push
mov
sbb
cwtl
mov
stos
adc
fisttps
add
scas
mov
push
mov
cmpsb
shr
jmp
and
push
xchg
addr16
adc
call
pop
jecxz
cmp
add
in
or
cmp
pop
push
adc
mov
std
jb
add
call
je
push
jge
aam
xchg
mov
daa
push
jp
clc
js
sub
inc
xor
in
std
cmp
out
and
cmp
or
sbb
jo
mov
mov
test
mov
out
inc
int3
loopne
ds
aaa
mov
adc
enter
rclb
adc
mov
inc
pop
and
push
stc
mov
or
mov
ret
inc
insl
addb
call
fildll
xchg
test
mov
fcmove
in
movsb
jns
or
dec
adc
mov
add
stos
xchg
arpl
cmp
shl
loope
pusha
in
out
lahf
gs
imul
xchg
sti
lret
sub
data16
mov
mov
int
fsubrl
cli
pop
push
fcmovnu
lods
bound
sub
sti
cltd
nop
jmp
call
int3
daa
repz
push
scas
and
or
pop
add
sub
out
ja
and
push
cwtl
fisubs
add
mov
divb
rorb
xchg
xchg
lret
push
pop
mov
fs
fsubrs
leave
les
mov
nop
movsb
loope
cmpsl
ret
ds
lock
push
out
cmp
mov
dec
jnp
push
adc
inc
cs
fisttps
arpl
jb
adc
je,pt
and
add
dec
jg
cwtl
dec
aam
mov
jne
jl
out
movsb
inc
xlat
out
jge
sbb
imul
je
push
addr16
jp,pn
es
fwait
cmp
or
and
fadd
out
or
push
clc
jnp
fbstp
lcall
cmp
dec
cltd
cmp
stos
iret
cmp
repz
out
jge
fistps
jl
jo
lea
bound
jmp
ljmp
lods
clc
cmp
nop
push
out
popf
add
icebp
pop
clc
dec
ljmp
out
sti
je
push
stc
jge
pop
dec
jg
mov
push
stc
mov
cmp
pop
sar
jbe
out
outsb
pop
mov
imull
cmp
and
pop
out
cmp
hlt
and
ja
xor
mov
and
push
fistpll
outsb
ljmp
dec
jae
aam
jge
xor
pop
out
jge
xor
sti
in
sahf
ja
ljmp
pop
cmp
mov
jne
lret
lds
mov
icebp
insb
add
shrl
stos
cmpsl
jl
cld
and
sbb
sti
mulb
mov
mov
mov
mov
jne
adc
xchg
sti
je
push
stc
jge
and
fnsave
mov
xor
xor
sbb
je
push
lock
repz
in
mov
fstps
push
jle
or
mov
xchg
stos
mov
and
lret
out
and
out
pop
dec
jge
mov
adc
cmc
adc
xlat
dec
adc
sahf
out
push
jle
test
add
ljmp
imull
cmpl
loopne
mov
out
icebp
js
push
shll
sub
jns
and
fdivrs
jg
fsubr
pop
les
in
mov
jl
out
insb
sub
push
hlt
lds
push
push
sti
dec
lods
aad
xor
lods
mov
fs
lret
fstl
lret
iret
mov
cmp
mov
repnz
ss
mov
and
jne
mov
leave
stos
mov
mov
push
mov
mov
mov
es
int3
mov
jbe
push
xor
sub
rorl
sti
loope
fstpt
mov
jl
jb
hlt
enter
outsl
push
jne
aaa
add
lcall
push
pop
cmp
mov
jnp
push
fnstcw
insb
cli
jo
xor
sbb
xchg
cmp
stos
inc
sbb
lret
pop
fwait
mov
lods
jmp
js
mov
cmp
xchg
addb
jns
ret
sub
mov
lds
mov
adc
aad
mov
sbb
mov
cmp
mov
pushf
nop
scas
fisttpl
or
jne
sbb
mov
mov
sub
rcrb
pop
pop
inc
adc
mov
xchg
fdiv
sbb
lds
or
or
inc
inc
repz
pop
xorb
pusha
movsl
pushf
js
dec
jae
faddl
int
xchg
aad
push
xor
leave
add
add
shrb
repz
push
xchg
cmpb
adc
int
mov
mov
pop
imul
fdivrs
into
lcallw
adc
lods
inc
dec
adc
xchg
push
sti
divps
fs
cmp
fmull
nop
dec
or
xchg
sbb
movsb
loop
dec
fcmovb
jle
push
clc
lcall
pop
cld
repnz
xor
lcall
jg
gs
pop
push
mov
flds
int3
subb
addb
jecxz
sub
add
inc
cmp
popa
add
je
adc
popa
pushf
pushl
jge
std
orl
mov
cmp
inc
andl
je
dec
idivb
hlt
mov
xor
and
aad
nop
pop
insb
mov
rcl
sbb
add
or
cwtl
insl
sbb
xor
sub
fbld
mov
test
push
push
mov
or
push
shrl
lock
mov
fwait
stos
cmp
mov
jecxz
mov
mov
test
call
xor
into
lret
insl
call
pop
nop
inc
and
jnp
adc
test
in
push
inc
pusha
pusha
mov
cltd
cmp
je
jo
das
lret
dec
lods
add
cmp
pop
loope
inc
xchg
inc
in
into
pop
sbb
dec
int3
mov
testl
mull
das
inc
xchg
mov
adc
add
fdivrl
xor
cld
jge
push
mov
cltd
mov
adc
test
pop
push
mov
mov
out
fiaddl
jne
jmp
stos
lret
cmp
lret
out
mov
loopne
adc
imul
mov
je
shlb
lahf
aas
push
repnz
sbb
mov
xchg
sub
imul
repz
cld
cli
mull
cmp
add
jbe
xor
pop
inc
jle
das
jmp
adc
and
sub
ja
or
sub
cmpsl
imul
add
adc
jg
mov
out
in
mov
orb
sub
push
std
or
jle
cmpl
pop
xor
sti
out
sbb
cld
loope
scas
int
mov
out
ds
jae
imul
mov
sub
jg
lods
imul
fwait
out
aad
ret
cmp
xor
fwait
lret
out
adc
leave
cli
pushf
rclb
push
sahf
js
test
adc
iret
aaa
jecxz
inc
inc
xor
pop
lcall
test
fmull
call
jl
mov
and
ret
add
push
or
loope
sbb
dec
jp
sub
add
xchg
es
jg
xor
aaa
pop
mov
xor
out
out
sub
or
jl
sbbb
pop
mov
testb
pop
repz
cld
lock
cmp
mov
dec
sub
pushf
add
pop
andl
sbb
mov
cmp
lret
adc
cltd
enter
and
cmp
mov
out
jg
or
rcll
sub
xchg
test
cld
es
add
jp
and
fucomp
scas
repz
pop
inc
mov
repz
movsb
lcall
arpl
dec
lods
and
sbbl
cmc
or
push
and
popf
jg
scas
pop
push
jl
adc
pusha
mov
mov
lock
xchg
cltd
push
and
shlb
lea
movsb
jae
scas
cmc
push
int3
div
push
sbb
test
fcmovu
jae
shll
sub
pop
and
add
cld
pop
test
arpl
pop
mov
sbb
jno
pop
jecxz
std
lret
or
in
iret
jo
mov
jmp
shrl
test
pop
xor
push
push
adc
jae
inc
xchg
movsb
mov
jg
dec
adc
ret
out
pop
rcl
movsb
sbb
xchg
xchg
dec
jnp
cwtl
cmc
pusha
std
inc
jl
sbb
mov
or
ret
mov
lods
inc
inc
jg,pt
and
jmp
roll
mov
add
add
cltd
test
inc
cmp
dec
jb
mov
mov
loopne
cmp
mov
cmp
lods
xor
mov
and
push
ja
jb
add
pop
inc
or
icebp
and
push
mov
sub
mov
adc
out
and
jno
push
inc
call
pop
mov
dec
jnp
mov
fists
jae
add
xchg
inc
in
loop
jp
into
popf
cmp
scas
dec
push
jg
jmp
mov
repz
jbe
in
mov
add
or
or
clc
jl
test
dec
bound
jecxz
dec
xchg
inc
adc
add
mov
sbb
mov
cmp
mov
lea
popf
sub
add
cld
jge
mov
adc
mov
das
cmpsl
ret
fsub
daa
bound
add
xchg
pushf
mov
adc
fisttps
jl
adc
insl
cld
fwait
sti
mov
or
enter
loope
or
sahf
lret
mov
add
mov
sub
adc
stos
add
stc
push
inc
out
aaa
cmp
outsb
mov
jmp
pop
sbb
mov
xor
loop
xor
into
enter
xchg
scas
sbb
arpl
jns
mov
jno
cld
push
clc
jle
sti
jo
sub
arpl
ljmp
cmp
sbb
std
ja
cmpsl
test
sbb
xor
and
addl
mov
xchg
add
mov
jmp
popl
js
mov
jmp
or
in
clc
xor
out
subl
iret
roll
mov
jl
xchg
stos
xchg
insl
jp
cmpsl
jg
and
lea
pop
add
jecxz
iret
scas
xor
sbb
fildl
pop
roll
imul
dec
pop
adc
int3
inc
lcall
dec
push
leave
sahf
clc
push
push
adc
jmp
push
es
inc
and
lock
stc
push
movsl
cmp
jmp
pop
adc
adc
loope
lahf
lock
push
adc
int
addl
jmp
scas
cltd
dec
inc
pop
adc
lds
xchg
sub
and
push
push
adc
je
sahf
or
push
leave
xor
pop
adc
mov
jl
push
mov
push
adc
mov
sbb
shll
sub
aas
pop
cwtl
loop
mov
inc
hlt
cld
inc
pusha
lods
inc
mov
cmp
pop
mov
pop
adc
sub
pop
and
mov
jp
imul
arpl
loopne
mov
push
and
mov
inc
inc
arpl
or
push
push
jmp
shl
in
mov
mov
jne
jbe
mov
shrl
negb
inc
popf
pop
iret
jae
sbb
jo
adc
data16
adc
xor
sbb
iret
cs
add
xchg
dec
cmp
mov
lret
fadds
push
shld
pop
iret
adc
jmp
adc
xor
add
movsb
ret
adc
and
inc
mov
xchg
pop
mov
imul
out
inc
mov
fs
das
lock
xor
ret
pop
jg
jmp
roll
pop
arpl
xor
dec
shlb
mov
hlt
outsl
andb
jmp
push
sub
repz
in
mov
dec
fwait
scas
mov
fs
cld
bound
dec
aam
addr16
ss
jne
repz
cmp
loop
mov
jns
ret
and
push
fucomip
ret
test
cmpsb
xchg
jbe
ja
jp
mov
pushf
mov
jmp
jmp
sub
add
pop
and
sub
in
hlt
mov
mov
pop
and
les
pop
adc
inc
pop
adc
inc
pop
adc
or
sub
movsl
xchg
cld
repnz
and
mov
mov
pop
lret
mov
inc
sbb
push
sub
sti
loope
mov
push
jno
pop
mov
shlb
dec
in
repnz
mov
std
xor
fsts
nop
add
lods
xchg
cld
jbe
jge
repnz
fcoml
sbb
movsb
daa
mov
pop
adc
nop
push
fcompl
push
adc
mov
pop
lcall
cmp
pop
in
repnz
pushf
test
jbe
xchg
imul
addl
add
mov
xor
inc
fdivs
mov
push
push
mov
les
mov
xchg
cli
add
add
adc
arpl
lret
sbb
jg
adc
adc
aam
push
adc
cli
add
xchg
push
adc
adc
imul
rcll
or
enter
push
cli
arpl
es
or
inc
insl
add
adc
mov
adc
mov
adc
insl
call
in
adc
mov
shll
popf
push
and
mov
push
rcrb
adc
mov
push
cltd
adc
push
jg
loop
sbb
xor
sahf
pusha
aas
cmpsb
dec
ds
pop
pop
adc
jo
mov
mulb
push
push
mov
cltd
sub
sbb
push
idiv
stos
stos
adc
icebp
repz
fucomip
or
jecxz
enter
mov
mov
lcall
gs
sub
cld
cmpl
and
jno
jno
and
nop
mov
mov
jp
mov
ss
mov
arpl
inc
sbb
lods
mov
mov
inc
pop
adc
loope
push
gs
in
add
mov
xchg
jbe
jmp
aam
icebp
xor
lock
shlb
rcrb
orb
loope
sahf
insl
shll
xchg
bound
pop
push
jno
add
xchg
idiv
loopne
lcall
out
fidivs
adc
lods
fdivr
ret
es
icebp
and
rorl
jecxz
and
push
mov
aam
sti
mov
hlt
mov
adc
and
add
aas
les
sub
jo
push
outsb
lds
xchg
push
pushw
or
cmp
cmp
lods
hlt
adc
mov
fdivl
inc
inc
pop
pushf
mov
ret
popf
pushf
inc
addl
add
pop
lds
mov
xchg
movsb
sub
dec
xchg
jmp
enter
cli
in
xchg
into
lods
mov
push
inc
inc
push
aad
xlat
cmp
idivb
data16
outsb
or
stos
jnp
scas
pop
push
jl
adc
pusha
mov
mov
sti
nop
xchg
in
addr16
int3
ds
pop
pop
mov
dec
daa
fists
inc
sub
fcomp
add
ss
jae
ret
sub
sub
outsl
add
adcb
rcl
dec
jae
arpl
orl
loop
insb
jmp
cmp
clc
ret
shr
lahf
pop
sbbb
mov
nop
or
loopne
cli
and
push
leave
dec
cmpsl
and
es
js
faddl
movsl
inc
inc
cmp
cs
dec
andl
sub
mov
xchg
repnz
les
jg
push
arpl
les
cmp
mov
aam
push
test
lods
sbb
ja
mov
mov
adc
jl
sti
in
jmp
or
adc
add
push
adc
mov
imul
in
cmp
push
cmp
push
fwait
lods
dec
nop
mov
mov
adc
mov
xchg
pop
insb
jl
adc
lcall
pushl
jne
jmp
in
and
jnp
jae
movsl
mov
or
loopne
push
jecxz
test
test
cli
jbe
bnd
cmp
ficoml
jae
ret
jns
int
or
ss
jbe
divb
repnz
stos
mov
sti
insb
cmp
inc
cmpsl
dec
popf
mov
mov
mov
mov
xchg
inc
xchg
cld
xor
in
cld
out
idivb
mov
jo
jmp
mov
stc
insb
aas
lret
mov
add
mov
mov
jmp
incl
je
sti
jne
pushl
lods
mov
xchg
decl
pop
movsl
scas
mov
into
into
mov
jne
lods
jge
xor
mov
inc
repnz
or
inc
jne
xchg
mov
scas
cmpsl
mov
cli
jbe
push
aad
dec
nop
push
cli
jge
out
dec
in
je
push
clc
mov
cld
test
xor
sti
je
or
mov
mov
test
inc
nop
cmp
outsb
mov
add
std
jg
mov
mov
in
cmp
cli
xchg
rcrl
pop
fidivrl
sti
mov
add
jle
add
jns
add
loopne
push
xchg
nop
xor
pushf
mov
adc
fimull
insb
jl
adc
inc
es
repnz
pop
negl
lea
mov
and
jae
and
repnz
add
pop
repz
testl
rorb
inc
jb
leave
cmp
repz
lcall
stc
ja
jmp
fadds
mov
push
outsl
out
call
push
fcomip
sub
sub
pop
pop
mov
cmp
hlt
leave
repz
test
and
je
cltd
pop
jg
mov
lods
adc
movsl
stc
xor
fdivrl
and
inc
xchg
in
testb
dec
sub
mov
mov
cmp
les
mov
inc
pop
mov
cld
jl
idivl
popa
adc
cmp
dec
pop
popf
jae
aam
jo
dec
rcl
ljmp
ds
sbb
aad
negb
xchg
xor
mov
repnz
inc
shlb
in
xchg
loope
cmp
push
xchg
aas
pop
ljmp
push
int
push
subl
mov
pop
sahf
push
in
add
xchg
or
jecxz
inc
iret
push
mov
pop
ror
rcll
or
loop
mov
rol
cmp
fildl
pop
movsl
inc
out
ror
mov
fsubl
leave
inc
fs
insb
xor
push
adc
inc
mov
add
rsqrtps
jle
lock
mov
js
push
adc
popa
dec
sbb
jno
fidivl
jnp
push
out
cltd
imul
add
cmpsl
mov
jmp
xor
inc
test
mov
dec
xor
loope
leave
jle
jle
mov
arpl
icebp
adc
and
xor
cmpsl
pushf
mov
leave
stc
adc
mov
mov
xchg
push
cmp
xchg
out
mov
cmp
or
sub
int
mov
ja
adc
dec
addr16
les
aam
sbb
add
iret
or
push
add
adc
or
xor
sbb
inc
aas
rcll
sub
mov
jb
loope
insb
inc
aad
jbe
adc
iret
xor
mov
jae
sbb
add
mov
ja
push
push
and
pop
mov
and
mov
jnp
sub
je
xlat
jle
idivl
and
cmp
rcrl
jne
rorl
popf
cmp
mov
ud0
std
jo
and
add
jno
lahf
loop
dec
gs
xchg
mov
std
xor
fists
sbb
cmc
jnp
rcr
adc
stc
mov
iret
call
daa
aaa
mov
add
xchg
decb
lcall
and
xor
push
jge
gs
xchg
divl
cmp
mov
es
fxch
in
ja
iret
jns
sar
test
push
dec
cmp
push
mov
call
daa
aaa
mov
add
push
mov
xchg
decb
in
push
dec
in
mov
fdivrl
dec
xchg
xlat
test
mov
mov
idivl
sar
mov
jge
shll
repnz
pop
jp
jmp
cld
jmp
mov
je
or
cmp
mov
es
fmuls
pushf
push
ja
fidivs
xor
pop
ret
add
outsl
xchg
xor
insb
xchg
mov
cmp
xor
repz
divb
jno
sbb
js
das
or
test
xchg
repz
mov
add
mov
inc
test
inc
push
shrb
ja
test
sar
movsb
jo
lea
lods
mov
jno
negb
mov
in
ret
pop
aas
xchg
rolb
xor
xor
cmp
stos
outsb
aas
out
cwtl
mov
cmp
adcl
adc
fs
fidivrs
aad
mov
xor
and
test
sbb
jmp
push
mov
pop
fwait
out
pop
sbb
adc
cltd
cltd
fwait
mov
pop
inc
rcll
fistl
scas
js
cmpsb
shrl
cmp
les
outsl
jno
repz
ljmp
and
adc
jmp
sub
pop
adc
scas
cmp
sub
pop
adc
hlt
jp
in
js
and
pusha
pop
fiadds
xor
mov
ss
popf
shlb
mov
lea
femms
jns
or
pop
mov
pop
idivl
mov
mov
jb
gs
cmpsb
jbe
pop
or
push
pop
les
ss
rolb
loopne
je
mov
icebp
inc
insl
loope
and
xorl
lret
movsb
mov
pop
in
push
pop
movsb
xchg
adc
outsb
sbb
pop
dec
aam
sahf
mov
fs
cmp
push
inc
out
shlb
mov
add
cmpl
popf
adc
sbb
dec
addr16
call
cmp
icebp
cli
mov
testb
adc
jbe
sbb
sbb
lret
fwait
xor
pop
mov
ret
fcmovu
mov
fs
jno
lock
dec
in
lods
and
andl
dec
pop
ret
or
pop
xlat
cmp
cmp
sbb
fstp
mov
sub
or
mov
cwtl
movsl
int
push
mov
fisttpl
push
push
neg
pop
aaa
outsl
mov
xchg
xchg
das
pop
int3
stos
pop
rorl
jo
and
out
lahf
add
int
andl
mov
lock
filds
stos
dec
adc
ret
les
or
xchg
and
push
aam
mov
sti
mov
jo
movsb
fcomi
push
mov
mov
jnp
clc
adc
mov
mov
jg
add
cmp
arpl
sbb
xchg
popa
push
scas
into
xchg
lea
mov
add
push
sbbb
sbb
mov
dec
push
iret
aaa
jnp
add
test
push
mov
inc
cli
aaa
incl
xor
bound
outsl
mov
mov
stos
je
scas
scas
stos
jo
outsb
movsb
mov
xchg
xor
ds
call
dec
adcb
xor
notl
stc
std
jo
jmp
ljmp
imul
add
cmpsb
cmpsb
lock
sti
imul
mov
in
push
iret
repz
cmpsb
lret
pop
out
push
sti
addr16
add
jnp
movsb
mov
outsl
fidivs
divl
mov
ja
push
stc
outsl
scas
lods
pop
bound
add
sub
xor
outsb
mov
sub
hlt
das
iret
in
das
pop
adcb
mov
mov
mov
je
pop
push
out
xor
sub
jb
out
scas
stos
push
mov
dec
nop
pop
jl
stos
xchg
mov
ja
pusha
cmpsb
mov
xor
mov
push
cli
outsl
les
cmp
mov
inc
xchg
xchg
les
bound
notl
xor
cmpsl
xchg
dec
sbb
push
cli
add
xor
jle
add
cmc
ret
es
add
add
je
cld
shr
xorl
in
adc
daa
mov
inc
jge
test
orb
decb
sub
ret
jo
xlat
sub
popf
imul
lods
jo
out
cli
js
ficoms
jno
out
xchg
ret
fisubrl
ficoml
jae
insb
lahf
cmpsl
dec
clc
test
or
mov
mov
mov
fbld
scas
ljmp
inc
ss
pushf
pop
test
inc
hlt
mov
inc
mov
stos
iret
aaa
jb
inc
inc
cmp
mov
gs
mov
cmp
mov
mov
scas
sahf
ds
loope
pop
outsl
cmpsl
inc
in
hlt
adc
mov
xor
xchg
std
or
xlat
notl
addl
aaa
xchg
mov
in
leave
int3
mov
gs
movsb
int3
pop
dec
gs
adc
out
insb
mov
mov
cmp
inc
hlt
xor
mov
je
mov
jnp
mov
scas
testl
inc
xchg
xchg
push
fs
push
outsl
jle
xchg
jp
movsl
ljmp
mov
xchg
fildll
or
push
les
out
dec
sub
stc
leave
xchg
repz
popf
lods
cltd
lret
dec
nop
mov
jns
add
inc
or
notl
into
push
adc
push
adc
mov
xchg
mov
xor
or
inc
fldl
pop
or
push
pop
push
and
mov
lea
sub
mov
pop
pop
bound
ja
enter
loopne
sub
mov
loope
jo
call
dec
ret
xlat
ret
inc
pop
outsl
mov
or
inc
xchg
cld
mov
rcrb
fs
ret
pop
sbbl
mov
sbb
xchg
xchg
sahf
insl
mov
clc
dec
pop
lahf
inc
cmpsb
cmc
mov
stos
jnp
pop
xchg
jg
aam
aam
jo
in
jns
aaa
int
cmp
dec
ljmp
pusha
dec
push
pop
pop
add
adc
xchg
js
dec
mov
pop
push
mov
out
fcompl
stos
mov
dec
rolb
xchg
fs
neg
cwtl
inc
cmp
outsb
idivb
jle
push
daa
pop
mov
and
xor
sub
xchg
call
imul
stos
das
subb
push
adc
fildl
daa
or
cmp
adc
add
cld
ljmp
mov
mov
scas
lds
fs
mov
popf
cmp
xchg
and
lahf
add
int3
and
add
mov
stc
outsl
cmpsl
dec
popf
shll
and
test
jno
std
sti
push
sbb
hlt
mov
mov
pop
jmp
adc
xor
repz
jle
std
jo
in
je
addl
insb
int
and
push
jbe
adc
dec
or
je
test
mov
fdiv
out
popf
cmp
add
mov
je
stos
jo
lea
fucomi
mov
dec
clc
je
cwtl
push
push
adc
stos
das
out
xchg
xor
add
jne
or
scas
mov
mov
inc
enter
inc
pop
push
adc
stos
and
mov
loope
shrb
sub
push
jg
insb
adc
popa
cmp
jmp
scas
divl
js
adc
scas
stos
mov
int3
xor
fistpl
cltd
fcomi
mov
scas
scas
jb
push
cmpsl
popa
xchg
ljmp
subb
mov
dec
pushf
cmp
sbb
adc
outsb
xor
sub
mov
add
test
stos
mov
jmp
push
mov
add
push
xchg
and
mov
aas
xchg
stos
data16
daa
mov
jp
mov
add
cmp
lea
dec
and
imull
sbb
sbb
jp
scas
adc
adc
mov
jae
sbb
xchg
jno
jmp
push
aam
je
pop
xor
filds
int
xchg
xchg
pop
imul
add
test
testl
adc
call
jp
shll
enter
test
mov
scas
aas
mov
inc
push
push
pushf
addb
mov
fwait
mov
fwait
sbb
xchg
std
cld
cmp
repz
cmpb
add
push
popa
in
cmp
or
cs
arpl
mov
ret
cwtl
xor
inc
xchg
or
jl
in
cmpsl
mov
mov
cld
and
xchg
xor
mov
pop
divb
mov
in
dec
addr16
das
pop
cwtl
adc
cmpsb
xchg
shlb
shl
and
cmpsl
test
add
fldl
loopne
and
push
jo
pop
adc
xor
mov
filds
pop
adc
jns
cmc
cmp
inc
pop
lods
das
xchg
ret
arpl
xchg
xchg
test
js
xchg
stos
les
insb
in
div
xchg
movsl
maxps
xor
int
ficoml
flds
jmp
pcmpeqd
xchg
inc
negl
lret
ficomps
and
jp
jl
adc
xor
in
out
jge
pop
or
or
cmp
loopne
jl
dec
or
adc
xchg
scas
cmp
sub
xor
dec
mov
loope
cli
lret
mov
jecxz
adc
sbb
xchg
pop
fstps
xor
add
pop
adc
out
jge
jg
test
sarb
xchg
imul
jecxz
enter
sub
pop
pop
adc
popa
test
pop
dec
cmpsb
and
pop
pop
fldl
mov
pop
int
push
mov
jnp
arpl
xchg
adc
inc
cmp
movsb
sub
and
jno
sub
rolb
test
lock
add
pop
aaa
outsb
mov
stc
jae
out
jo
pop
adc
cmpb
imul
cltd
and
nop
aam
hlt
fsub
into
popf
mov
pushf
pop
pop
adc
pop
pop
adc
mov
std
adc
push
pop
daa
sbb
adc
adc
sub
int
mov
pop
pop
adc
or
rclw
xchg
lds
push
movsb
dec
popf
cld
jb
pop
pop
adc
call
xor
mov
movsb
lahf
fs
pushf
das
rorl
mov
add
add
pop
pop
adc
push
fisubs
stc
fs
pop
mov
push
bound
je
push
and
adc
loop
rolb
mov
pop
and
les
je
scas
add
and
nop
mov
pmulhuw
mov
adc
adc
mov
cmp
jl
jl
jnp
je
or
fsubrp
pop
pop
adc
xchg
into
adc
push
adc
sub
sbb
jb
mov
xor
test
arpl
cmp
and
adc
or
cmp
std
and
in
push
loopne
sbb
test
pop
adc
add
push
adc
nop
add
call
xchg
iret
pushf
les
arpl
arpl
addl
pop
pop
adc
fsubr
pop
pop
adc
test
int3
ja
xchg
adc
cs
movsb
cmp
pop
pop
adc
and
sti
cli
jp
mov
and
inc
add
sahf
pop
adc
pop
dec
jmpw
popf
pop
adc
jb
sahf
or
fsubp
sbbb
xchg
xor
inc
stos
push
mov
jecxz
jb
pop
pop
adc
jmp
cmp
data16
push
test
mov
pop
scas
outsl
out
fs
and
and
dec
mov
add
mov
xchg
int3
imul
enter
pushf
pop
pop
adc
pop
pop
adc
push
pop
push
adc
stc
inc
int3
and
inc
test
dec
push
add
fs
sbb
adc
pop
cmp
push
clc
loope
mov
mov
flds
add
sub
pop
ss
outsl
push
dec
pop
add
sti
daa
xor
cmp
pop
and
add
dec
mov
add
mov
push
fsubl
add
adc
pop
mov
popf
and
pusha
xchg
das
jl
lods
mov
mov
ficoml
pop
sahf
push
mov
sbb
push
stc
mov
adc
cld
adc
adc
add
adc
aad
adc
cmp
je
push
inc
bswap
and
imul
imul
inc
sarl
das
mov
outsl
and
pusha
inc
pop
adc
adc
inc
pop
adc
daa
bound
push
lcall
pop
cli
jmp
inc
mov
xchg
sub
repnz
add
sarl
mov
xor
insl
mov
dec
leave
sub
popa
ret
imul
addl
scas
test
adc
scas
push
and
fsubrs
mov
adc
jo
xchg
mov
inc
pop
pop
adc
call
fs
pop
loopne
adc
adc
filds
sub
xchg
push
push
add
enter
add
loopne
pop
leave
sub
lds
cld
xchg
sbb
ljmp
mov
adc
add
cmp
mov
inc
pop
mov
sub
pushf
pop
pop
adc
mov
pop
adc
pop
push
adc
pushf
pop
pop
adc
add
ret
adc
jb
sarb
adc
cmc
and
push
movsb
and
ss
aam
jbe
and
pusha
mov
dec
xchg
xchg
or
adc
and
mov
add
mov
jge
mov
push
fs
xorl
xor
push
adc
jmp
jnp
add
cmp
call
scas
mov
push
icebp
lea
je
pop
ljmp
loopne
movsb
ss
je
add
insb
fidivrs
popf
fwait
jo
pop
adc
in
pop
pop
adc
jne
mov
out
dec
cs
or
les
add
pop
mov
data16
in
pop
pop
adc
mov
outsl
in
pop
pop
adc
or
pop
pop
adc
iret
je
in
pop
pop
adc
push
add
jo
lret
add
mov
cli
push
inc
addb
jbe
mov
add
add
xor
cld
xor
les
je
pop
lcall
lret
nop
and
faddl
imul
divl
and
jb
add
add
xor
test
mov
pop
jmp
hlt
jecxz
push
cmp
dec
popf
cmp
xchg
iret
mov
call
fidivl
out
iret
orl
inc
jb
stc
mov
push
adc
adc
adc
fst
jnp
insb
dec
jecxz
mov
jbe
pusha
sub
adc
adc
push
adc
out
adc
adc
std
or
jo
push
adc
mov
in
xor
rorb
mov
ret
jno
test
pushl
adc
pop
push
adc
cld
xchg
lret
add
jb
mov
xchg
pushf
out
fwait
sub
inc
sarb
adc
ret
shlb
inc
and
data16
ss
xor
and
fistl
push
add
xor
outsb
push
sbb
aam
push
cltd
scas
ss
adc
rorb
imul
jae
mov
faddp
xchg
add
xor
addl
adc
xor
mov
call
sub
xchg
jne
mov
popf
fdivl
sub
lahf
call
ds
aas
clc
mov
scas
sbb
dec
mov
mov
push
adc
mov
adc
orl
sbb
popf
sti
inc
in
aas
and
shlb
xor
aam
pop
adc
xor
mov
dec
or
sbb
fadds
push
sti
lock
sbb
mov
sbb
adc
jg
sub
cld
sbb
std
ja
and
pop
adc
aam
sbb
jl
push
scas
mov
addb
fbld
cmp
pushf
pop
adc
push
out
test
scas
lahf
push
sti
jle
mov
addb
pushf
pop
adc
movsl
adc
push
xchg
push
sub
rol
inc
add
mov
xor
mov
sub
add
jnp
cmp
xor
pop
adc
pushf
pop
push
cmp
add
xor
inc
call
jg
inc
mov
lcall
movsb
xchg
ds
popf
pop
adc
add
push
adc
adc
jo
loop
jecxz
xor
stos
pusha
daa
loopne
dec
test
push
add
cs
adc
popf
pop
adc
xchg
repz
cld
mov
mov
cmpsl
push
addb
movsb
out
push
or
inc
ljmp
in
and
pushf
inc
pop
adc
mov
sub
mov
xchg
pop
or
jg
scas
int
mov
inc
pop
adc
mov
inc
scas
mov
call
cwtl
pop
cmp
jp
or
jge
add
into
mov
mov
jb
add
fs
test
insb
inc
icebp
lds
sbb
cmc
cld
adc
je
ja
jnp
fs
pop
adc
cwtl
and
inc
sbb
mov
sub
cmpsb
xor
mov
pop
jnp
xchg
add
inc
pop
adc
and
cld
imul
fidivs
bnd
add
add
pop
mov
in
pop
pop
adc
xchg
xlat
idivl
pushf
bound
movsb
dec
les
adc
mov
adc
cmp
xchg
scas
adc
bound
push
repz
push
fs
pop
adc
aaa
pop
out
lods
add
jnp
std
fcmovnb
arpl
mov
in
je
cmp
out
movsl
enter
cmpb
jg
in
movq2dq
sub
loop
sbb
mov
and
fcmovne
xor
mov
lahf
in
adc
popf
pop
adc
inc
pusha
inc
pop
adc
repz
cmp
jp
add
add
icebp
outsb
jle
nop
and
jo
xor
or
shrl
xchg
scas
mov
mov
addl
add
adc
shll
rcrl
je
shrl
jne
test
and
xchg
add
cld
cmpsb
adc
or
jl
pop
adc
arpl
dec
push
ret
add
lock
jo
stos
and
mov
adc
das
add
shlb
push
addb
inc
jl
pop
adc
xchg
fistpll
push
data16
pop
adc
stos
lahf
xor
outsl
sti
sti
mull
and
pop
cld
xor
int
push
inc
in
int3
andb
clc
arpl
fs
test
cmpsl
jg
cmpsl
rcl
or
adc
popf
pop
adc
data16
add
jg
fwait
jecxz
fucomi
pop
pop
adc
dec
ja
pop
cmp
sbb
mov
pusha
inc
pop
adc
fs
pop
adc
cmc
adc
fnstsw
xchg
mov
cmpsb
out
test
xchg
push
lock
test
punpckhbw
adc
jl
pop
adc
pop
xchg
pop
adc
jp
scas
neg
cmp
je
rolb
lods
mov
addl
mov
sub
xchg
adc
or
shlb
adc
jmp
and
test
pop
imulb
cmpsb
in
inc
or
pop
adc
add
add
xchg
cmpsl
fidivs
cmp
mov
mov
mov
mov
mov
or
call
xor
ficompl
test
lcall
rclb
jbe
ja
movsb
call
pusha
xchg
mov
xor
pop
adc
or
or
out
or
add
cmp
repz
popf
pop
adc
adc
add
and
adc
es
cmp
mov
push
adc
sbb
inc
pop
adc
pop
pop
adc
adc
or
adc
jae
jae
pop
int3
adc
adc
sti
push
out
jo
mov
jne
cwtl
in
add
xchg
hlt
and
dec
xchg
iret
int3
les
les
push
adc
adc
inc
pop
adc
orl
or
sarb
fcoms
push
adc
mov
jae
sbb
addr16
xchg
dec
jmp
aas
test
inc
movl
add
mov
pop
scas
ds
pop
adc
xchg
stos
push
sbb
clc
mov
jbe
pop
shlb
outsb
cmp
jle
daa
lods
and
sbb
pop
divl
scas
lahf
sbbl
enter
push
mov
jge
gs
sbb
daa
rcrl
add
jg
jp
cli
imul
out
outsb
fidivrs
cmp
shlb
out
fistpll
incl
enter
adc
add
push
adc
int3
pushf
cmp
fisttps
cmp
stos
ret
xor
je
out
mov
jp
jge
mov
stos
lock
or
cmp
lods
push
pop
ficompl
xchg
decl
fidivl
or
popf
cmp
int
pop
mov
ret
xchg
decl
fidivl
or
into
xchg
mov
dec
popf
pop
hlt
xchg
out
mov
cli
add
mov
and
and
push
adc
mov
jge
loop
jne
jae
filds
cmp
outsl
fidivrs
insl
stc
ja
cmpsl
dec
popf
rcll
scas
test
mov
jbe
pushf
in
xor
and
xor
add
mov
call
inc
xor
divb
repnz
mov
call
xor
je
mov
fwait
loope
cmpsb
pusha
xchg
stos
xchg
jns
bound
loopne
dec
jmp
cmpsl
into
jmp
sbb
mov
cmp
mov
and
mov
add
pushf
cmp
lods
into
and
stos
nop
cmc
imulb
fistpll
add
stc
cmc
add
jbe
rcl
pop
adc
clc
jnp
mov
cmp
mov
xor
arpl
imul
mov
adc
pop
adc
adc
adc
imul
fiaddl
dec
dec
fs
push
adc
dec
xchg
xor
pop
cli
fwait
les
pop
in
out
jmp
mov
lods
loop
jmp
mov
lret
ret
pop
push
imul
cmpsl
nop
cli
aam
push
adc
sbb
sahf
lcall
in
in
push
pop
pop
daa
xor
xor
jge
and
cmp
xor
shl
push
out
divb
xchg
insb
jl
outsb
mov
and
jno
add
jmpw
push
fstpt
sbb
add
sub
adc
adc
sub
fidivs
ds
mov
xlat
and
mov
dec
cwtl
cmp
rcrl
lds
cli
mov
test
sarl
jno
pop
mov
mov
xchg
enter
lods
cwtl
cmpsb
jbe
loope
cmpsb
stc
shll
add
shrb
scas
bound
and
jne
loope
cli
fmul
dec
xlat
sbb
arpl
push
into
aad
pop
stc
mov
gs
mov
scas
lods
cmp
or
xor
arpl
sbb
pop
adc
inc
inc
bound
pop
div
gs
push
adc
ds
loopne
fdiv
out
and
flds
jmp
push
adc
fxch
loop
daa
sub
cs
out
xchg
mov
adc
jp
test
cltd
pop
stos
inc
cld
push
imul
jp
sbb
xor
pop
push
mov
cmc
inc
pop
outsl
cld
out
adc
pop
adc
or
mov
mov
ficoml
jge
sahf
test
adc
adc
pop
loopne
scas
sbb
test
push
adc
inc
push
test
je
loope
addr16
cld
mov
movsb
aas
pop
loop
inc
dec
or
imul
mov
mov
ret
cmpsl
cmp
fistps
push
sahf
pop
adc
cld
adc
adc
nop
stos
fsubl
test
dec
push
pusha
add
cli
inc
mov
jbe
mov
jb
outsl
shlb
adc
xchg
jg
dec
adc
pop
adc
clc
cld
adc
adc
adc
adc
lcall
pop
loope
sbb
mov
push
jnp
adc
add
in
shll
or
cmp
push
adc
lret
mov
fs
sub
outsl
jg
std
jo
push
js
push
adc
shlb
sub
xor
pop
push
add
add
mov
push
in
les
dec
into
insl
and
or
int3
and
loopne
jle
in
repz
popf
lds
in
or
mov
ja
lret
push
adc
ds
fidivrs
push
adc
iret
jecxz
jmp
pop
jmp
bound
mul
je
jb
cmc
add
aas
push
movsb
xchg
mov
popa
cmp
push
adc
xor
sti
jle
pushl
lret
ss
and
jae
adc
movsl
lahf
or
hlt
lock
ss
xchg
movsb
pop
push
adc
aam
pop
push
adc
lds
adc
adc
jnp
fchs
and
mov
cmp
or
outsl
jl
mov
daa
adc
xor
jp
cmp
mov
jbe
push
jb
outsb
loop
arpl
jnp
shrb
adc
add
jle
ja
cmpsl
test
push
dec
lock
mov
inc
pusha
dec
jno
fdivrs
add
movsl
cmp
faddl
mov
lahf
pop
adc
lahf
pop
adc
mov
divl
jp
sbb
jno
and
cmp
sbbl
outsl
xor
jns
out
imul
mov
ret
test
imul
fs
dec
jmp
test
xchg
fwait
in
aaa
jmp
jo
movsb
cld
scas
scas
push
xor
fs
lahf
sbb
mov
lods
leave
getsec
in
inc
inc
aas
jle
cli
adc
movb
dec
dec
mov
cld
push
insl
insl
enter
insb
lcall
sub
jl
mov
pop
adc
loop
adc
adc
dec
lret
fldl
sti
stc
jns
orl
cmc
add
jae
aam
or
sti
mulb
js
lock
ja
stc
loop
cmp
rcll
ret
js
fidivl
pusha
pop
push
adc
pusha
sbb
cmpsl
xchg
in
pop
lods
loope
lds
imul
push
cmp
shl
fcmovu
cmpsb
or
adc
push
bound
shl
push
add
mov
popf
rolb
push
cli
sbb
lret
test
pusha
fadds
enter
adc
enter
icebp
jne
data16
sbbb
fwait
and
xlat
ror
adc
ficomps
repnz
jo
pop
adc
xor
adc
fisubs
test
inc
insl
jmp
pop
xchg
pop
loop
mov
dec
outsb
enter
aas
jmp
and
xor
or
enter
cwtl
movsl
jbe
pop
out
xor
mov
pop
ret
into
insl
pop
xchg
clc
dec
pop
push
xchg
mov
fsub
mov
iret
jmp
and
hlt
adc
aaa
pop
sbb
ja
cmp
sub
out
dec
sub
jg
sub
mov
std
fadd
add
rcrb
adc
mov
popa
fstpt
fbstp
sub
pop
adc
dec
sbb
imull
sahf
xchg
dec
bound
adc
jl
insb
sbb
push
jge
pusha
cmpsb
data16
push
xor
addb
cmp
sbb
lods
push
ret
adc
pop
jg
xchg
pushf
incb
mov
and
cmp
mov
movsb
dec
push
ljmp
mov
pop
push
adc
or
mov
mov
mov
push
jne
cmp
je
pop
adc
add
add
in
mov
mov
jb
adc
jl
icebp
jbe
and
jns
stos
sbb
lret
notl
push
adc
jp
cmp
mov
cwtl
xor
cmpsb
mov
loop
int
repnz
and
xchg
aam
pop
adc
dec
ss
xchg
add
mov
hlt
add
xor
jbe
aaa
scas
jae
mov
or
inc
xchg
aaa
daa
vcvtsd2si
int
idivl
cli
mov
add
jl
add
pusha
fwait
dec
nop
and
sbb
push
ja
lea
dec
popf
cmp
xchg
dec
xchg
xor
mov
fistpl
aaa
inc
xchg
mov
ret
clc
iret
imul
adc
push
dec
cld
jl
in
adc
sub
fwait
mov
add
add
int3
daa
jae
adc
popf
pop
adc
or
xchg
adc
aaa
sti
jp
add
adc
ljmp
adc
popf
pop
adc
cs
fs
pop
adc
je
cs
pop
pop
adc
loop
adc
cwtl
mov
add
sbb
mov
pop
adc
jno
add
sbb
push
es
int
sbb
or
xor
mov
adc
loop
fs
dec
jns
cmp
xchg
and
pop
sub
add
in
sbb
adc
hlt
xor
adc
xor
dec
or
inc
inc
inc
xor
or
or
movsb
js
dec
pop
jo
notb
js
push
adc
push
inc
inc
xor
fmuls
add
lds
loope
jle
cmp
xor
add
adc
cmp
add
addr16
rclb
insl
mov
ret
pop
push
pop
daa
mov
jne
push
femms
sbb
in
dec
mov
roll
out
lock
mov
lcall
mov
sbb
fcoms
push
adc
fbld
adc
dec
adc
cmp
pop
cmp
pop
pop
adc
addl
sbb
gs
cmp
inc
pop
ds
or
mov
mov
arpl
inc
call
nop
inc
or
or
cli
jnp
dec
loope
mov
pushl
mov
adc
loopne
int3
pop
xchg
xor
cmp
adc
adc
nop
add
imul
jo
jmp
adc
aaa
adc
mov
cltd
dec
jae
ljmp
push
push
jmp
hlt
xor
icebp
mov
cmpsb
push
xchg
divl
dec
lods
sub
add
jo
popf
cs
pop
adc
adc
adc
in
pop
pop
adc
or
adc
into
jg
loopne
xor
sbb
push
cwtl
stos
lret
das
sub
mov
add
push
adc
fmul
sub
pop
adc
mov
pop
adc
stos
xchg
pop
pop
pop
arpl
repnz
xor
jbe
inc
outsb
mov
mov
ret
sub
push
push
fs
pop
adc
inc
out
lret
outsb
xchg
inc
test
push
push
bound
jae
pushf
pop
adc
ss
lret
lods
pop
mov
bound
xchg
mov
addl
adc
in
push
and
xor
mov
jne
std
xor
ror
push
je
adc
inc
daa
sbb
adc
test
xor
mov
shll
adc
xor
jg
add
pop
cmp
aas
ss
cmpsb
lock
int
in
shlb
dec
and
les
cmpsb
mov
jo
push
flds
insb
jbe
inc
pop
orb
cmp
mov
xchg
aas
pop
cld
pushl
pop
or
and
stos
into
xchg
shll
adc
cmpsb
jge
je
xchg
bnd
add
add
into
add
jmp
mov
ret
jne
int
shrl
or
mov
xchg
add
dec
add
add
imul
addr16
int
cmp
ret
mov
les
lods
cmp
xor
push
stc
popf
jle
lret
stc
fs
mov
mov
pop
aaa
or
mov
xchg
sub
mov
fistpl
daa
mov
mov
sub
jp
add
add
out
inc
xchg
push
lea
ret
fadds
addl
add
xchg
and
push
jmp
pop
pop
outsb
cmpsl
mov
mov
push
mov
ficoml
clc
icebp
xor
cmp
sbb
call
adc
aad
pop
push
adc
jns
fsubrs
inc
pop
adc
pusha
inc
pop
adc
repnz
test
stos
dec
fcompl
pop
cwtl
sub
cld
lahf
adc
push
imull
xor
mov
hlt
push
dec
mov
je
pop
push
test
sbb
inc
sub
xor
and
add
cmp
fisttpll
mov
xor
pop
imul
fisubs
out
clc
popf
pop
adc
adc
add
in
xor
and
and
dec
push
gs
sub
dec
sub
mov
test
xor
adc
adc
cmp
mov
mov
ljmp
inc
or
icebp
pop
pop
add
mov
or
ds
mov
pop
sub
add
xchg
pop
int
sahf
pop
adc
idiv
adc
adc
repz
push
ds
push
mov
pop
adc
xchg
shlb
xchg
cld
push
mov
adc
pop
adc
jg
adc
adc
pushf
sbb
cmp
ds
inc
outsb
xor
xchg
xchg
mov
movzbl
mov
or
sbb
fbld
adc
nop
sub
fs
pop
adc
mov
mov
push
adc
popf
pop
adc
sti
jnp
inc
je
arpl
jbe
sub
out
jge
adc
call
roll
subb
mov
push
std
cmc
fdiv
adc
adc
insl
in
and
push
out
jl
cmp
sub
insl
jmp
call
xchg
jg
or
pop
pop
adc
cmp
test
dec
adcb
das
in
pop
pop
adc
sbb
and
cld
mov
adc
mov
adc
jo
rclb
adc
xor
adc
adc
add
scas
dec
cmp
addr16
push
push
jo
dec
inc
shlb
xchg
lahf
dec
jmp
shl
clc
popf
pop
adc
adc
mov
jecxz
fcmovu
test
sub
out
fwait
adc
fs
inc
add
sub
xor
out
jecxz
add
insb
fdivrl
nop
jnp
mov
jb
shrl
aaa
cwtl
cmpsb
add
loope
loope
pop
imul
jbe
mov
icebp
imul
vhaddpd
out
shlb
inc
adc
lods
lods
jbe
adc
cmp
sbb
test
and
rolb
xchg
aam
push
adc
imul
xor
pusha
inc
pop
adc
adc
cli
inc
add
add
inc
or
and
fcompl
jl
mov
mov
les
fs
push
xor
add
cmp
repnz
int3
push
ror
sbb
push
cld
sub
out
pop
mov
sarl
lret
pop
adc
out
cld
adc
adc
roll
pushf
pop
adc
xchg
mov
sub
ret
or
loop
add
add
push
or
and
outsb
mov
out
or
jg
mov
mov
add
pop
adc
dec
dec
add
add
nop
and
hlt
arpl
xor
cs
pop
mov
adc
pop
adc
cld
adc
adc
sahf
pop
adc
test
and
fs
lcall
jbe
add
mov
pusha
mov
in
pop
pop
adc
fisttpl
call
mov
jg
or
push
cmp
and
sbb
cs
movsl
es
cmp
fidivs
dec
jmp
out
lcall
and
fldcw
cld
pop
je
pushl
cmp
and
dec
rclb
or
pop
ljmp
mov
lock
fucomip
mov
into
sub
inc
cmp
mov
push
mov
pushf
out
add
test
mov
test
and
adc
ljmp
pop
inc
jmp
aam
cmp
insb
cmp
out
mov
pop
adc
out
ficomps
xor
adc
sub
shrb
aaa
cmp
mov
pop
shlb
pop
pop
adc
and
adc
dec
mov
adcl
adc
sbb
adc
inc
orl
xchg
loope
or
cwtl
sub
cld
inc
and
adc
test
xor
xchg
es
push
mov
pop
lret
inc
gs
mov
jnp
stc
stos
lret
stos
jmp
push
rcrb
fisubs
xchg
sbb
fmuls
loope
and
shl
mov
clc
shrl
jmp
lcall
push
in
test
lret
movsl
cld
add
movl
cmpsl
xchg
cwtl
movsb
lea
ffreep
mov
inc
addb
out
push
add
sub
sbb
orb
and
pop
dec
push
inc
adc
sbb
inc
int
inc
xor
ror
sbbb
push
adc
pop
add
xchg
dec
adcl
inc
and
lret
lcall
pusha
and
add
sub
push
inc
or
push
jmp
lods
into
daa
lods
dec
ret
sbb
sbb
fildll
int3
adc
mov
dec
cwtl
stos
and
and
fwait
sbb
lods
lret
xor
push
push
in
pop
lcall
or
inc
lcall
movsb
push
das
movsl
inc
adc
pop
js
es
mov
lahf
xorl
xchg
push
pop
xor
cmp
or
insb
mov
pop
add
daa
dec
cltd
pop
dec
mov
mov
outsl
ret
pop
in
mov
mov
and
std
fistpl
mov
mov
rol
bound
cmp
or
mov
aaa
mov
loop
jl
add
test
xchg
cld
jbe
int
loop
and
repz
iret
adc
lcall
push
push
cs
stos
jo
add
aaa
maskmovq
or
js
fildll
cmpsb
jae
popf
fidivl
cmp
adc
jbe
add
adc
in
mov
jp
nop
push
clc
jl
mov
mov
aaa
mov
stos
jne
stos
movsl
mov
scas
jns
sbb
adc
adc
jle
mov
jb
out
push
outsb
add
adc
push
cwtl
test
test
cld
cld
adc
adc
sub
jbe
sti
incl
fiadds
mov
lcall
mov
bound
pop
jno
add
sbb
inc
xor
imul
xor
repnz
loopne
mov
inc
insb
mov
bound
test
out
repnz
pop
mov
add
stos
aas
sub
jecxz
xor
int3
cwtl
fiadds
in
fucomip
hlt
mov
jbe
push
jle
or
pop
jle
inc
or
bt
mov
push
sub
ja
fistpll
fiadds
fnstenv
jo
pop
adc
mov
std
test
fwait
push
je
aas
divb
fdivs
jl
sbb
adc
adc
sub
notb
sub
jno
aaa
mov
mov
mov
pop
out
leave
mov
cmp
ljmp
add
lods
sbb
xor
mov
push
and
addb
mov
adc
adc
dec
aaa
lods
imul
cmp
mov
stos
loopne
jo
push
cltd
leave
nop
push
jae
pop
aam
out
mov
adc
jae
fwait
jbe
pusha
fsubl
and
xor
mov
fwait
aas
cmp
stos
sbb
fcompl
icebp
cmp
sub
mov
shrb
jp
cwtl
fstpt
push
add
mov
jno
cmp
or
mov
aad
add
aam
shlb
repz
or
inc
lahf
fnstenv
arpl
jp
push
sbb
inc
xor
lret
xchg
and
pushf
and
aam
sar
adc
adc
imul
dec
in
xchg
test
ret
movb
bound
addb
imul
fiadds
addl
sbb
adc
in
adc
je
std
ja
rcrb
inc
adc
mov
out
sti
in
pushf
mov
adc
add
insb
jl
adc
je
iret
adc
mov
orb
in
cltd
push
sbb
in
aaa
xchg
xor
ljmp
pop
dec
ljmp
inc
mov
dec
dec
data16
mov
adc
add
repnz
aad
jl
adc
pop
lods
mov
aaa
repz
rcrb
cmp
setge
sbb
cmp
sbb
inc
loopne
xchg
adc
mov
movsb
sub
popa
aad
loope
daa
addr16
add
dec
daa
cmp
aas
mov
jg
push
arpl
and
fstl
in
int3
pop
cmp
ds
xor
pavgw
adc
push
sub
shlb
add
push
mov
xor
das
xor
scas
sub
fdivs
bound
adc
pop
loop
aaa
nop
inc
js
fiadds
cld
lods
stos
jge
lret
xor
and
insl
std
mov
or
add
stos
mov
add
add
outsb
sahf
cmpsl
push
xchg
cli
xor
add
shll
cmp
les
in
mov
xchg
adc
insb
subl
stc
mov
sub
ja
fistpll
and
add
mov
pop
push
loope
out
cmp
dec
pop
adc
sbb
xchg
and
jb
jge
stos
adc
jo
and
mov
sahf
adc
das
xchg
pop
dec
jne
dec
adc
in
pop
inc
and
adc
das
xor
or
push
cmp
push
adc
shr
lahf
in
inc
cmpb
cmp
xor
xlat
mov
shr
pushf
inc
lcall
jbe
cld
stos
sti
jns
les
ja
orl
and
addr16
loope
sbb
lods
cmp
pop
jns
test
add
pusha
xchg
arpl
mov
int
cmp
shr
fldenv
inc
sub
jb
mov
sahf
dec
insl
mov
movsb
pushf
imul
bound
mov
add
add
adc
aam
and
or
mov
ret
push
xor
rcrb
jae
inc
je
das
adc
lret
es
pop
and
divb
pusha
es
jno
fcmovb
jo
jne
addb
add
das
lcall
sbb
insw
aaa
mov
rorb
fisttps
or
push
into
adc
cld
jle
cmp
sub
xchg
jnp
stc
jb
sbb
mov
loope
and
outsb
jp
jb
fwait
aas
xchg
gs
inc
add
sub
pop
jmp
scas
fcomps
pop
cmpsl
jae
pop
roll
or
mov
pop
jmp
mov
lret
mov
fdiv
movsl
sbb
xchg
sub
pop
mov
and
jle
mov
subl
sub
ret
repnz
out
loope
movsb
cmp
inc
or
sub
inc
adc
into
and
mov
xor
mov
xchg
push
jno
xchg
insb
nop
pop
fildl
cpuid
cwtl
cmc
je
push
push
xchg
repnz
mov
jae
xor
xor
scas
scas
xchg
push
repz
in
fwait
dec
pop
inc
cli
rorb
dec
divl
filds
mov
xchg
xchg
xchg
dec
scas
and
cmp
inc
into
and
cmp
popl
adc
adc
xchg
leave
ret
js
or
and
loop
jbe
pop
cmc
repnz
pop
test
fstpl
add
cmp
mov
cmpsb
addb
call
sbb
and
xor
xor
ret
adc
add
rcrb
pop
outsb
fldt
loope
test
cmp
mov
dec
inc
or
xchg
adc
adc
mov
sub
aas
or
cmp
add
cmpsb
and
shrb
cmpsb
sbb
push
fwait
loopne
mov
mov
in
push
imulb
jae
pop
lea
pushf
xchg
out
adc
xor
push
inc
dec
fimuls
fcoms
ds
arpl
jecxz
mov
jb
scas
scas
mov
add
xor
outsl
scas
das
je
popf
dec
pop
jecxz
sub
adc
push
filds
xlat
dec
lock
outsb
int
sbb
mov
mov
cs
fwait
jl
jne
pop
cs
xor
sbb
test
je
inc
lret
or
push
xchg
movsb
enter
cmpsb
clc
mov
imul
arpl
mov
std
mov
xchg
adc
push
dec
push
loope
test
adc
add
add
rolb
jg
js
lahf
bound
push
cmpsb
mov
call
push
adc
add
xor
adc
in
int3
imul
popa
cmp
mov
sbb
jbe
adc
div
fwait
call
or
sqrtps
mov
sahf
stos
int
xor
xchg
mov
adc
jbe
push
sahf
sub
nop
pop
jp
enter
lret
push
jmp
xchg
je
push
repnz
std
sti
imul
cmpb
aaa
or
mov
add
mov
in
pop
repz
mov
cltd
jmp
or
mov
xchg
mov
fs
mov
sti
jne
adc
ss
shl
out
shlb
sub
ret
testl
or
scas
cmpsl
nop
stos
mov
xchg
es
rorb
clc
and
orb
mov
adc
xchg
cmp
std
sbb
insb
mov
fucomi
add
xor
nop
and
rep
add
lret
popf
jne
pop
mov
dec
jb
cwtl
mov
cmpsb
ds
mov
fsubr
lock
insb
int3
adc
jb
xchg
mov
mov
jbe
jno
pop
cmp
and
or
hlt
jecxz
cmp
data16
mov
mov
xchg
stos
add
or
and
nop
ret
inc
adc
dec
add
pop
push
imul
bound
mov
or
cmp
cwtl
out
mov
dec
mov
xor
inc
jmp
adc
sub
jecxz
mov
fimuls
rol
insb
rcrb
outsl
mov
push
mov
and
inc
dec
daa
lods
jg
xchg
push
fnstsw
shll
outsl
mov
fdiv
jnp
adc
addb
cmp
movsl
adc
imul
push
cmp
jl
daa
xor
ljmp
lods
stos
addl
mov
jns
sbbl
sti
cmp
sti
mov
scas
ss
loop
xor
pop
ds
xchg
das
jnp
inc
adc
loopne
out
mov
jbe
add
lock
popf
nop
add
pop
adc
jb
jle
dec
scas
divb
shrl
or
cmp
sbb
xchg
inc
adc
aad
dec
aam
out
and
push
stc
ret
ret
dec
outsb
int
xchg
mov
push
mov
shl
xor
adc
add
rolb
rcrb
sub
addr16
test
outsl
pop
repnz
add
add
or
pop
testb
jno
adc
cmp
leave
ljmp
and
ficomps
mov
sbb
sti
push
mov
subb
mov
jb
scas
test
or
stos
mov
dec
popa
int3
adc
icebp
aaa
in
and
cmpsb
xchg
hlt
dec
pop
rcrb
xor
lock
push
jmp
sbb
lods
loopne
rcl
sub
xchg
das
lods
jmp
or
xor
and
xchg
adc
sub
dec
add
movq
mov
sub
mov
jmp
sti
scas
jecxz
cltd
aam
mov
pop
mov
xlat
dec
hlt
push
xlat
aam
je
mov
xchg
imulb
shr
outsl
mov
mov
cmp
inc
mov
out
push
mov
gs
out
clc
jmp
ror
xor
shlb
xchg
jne
sub
orb
and
xor
aaa
psubq
cmp
lods
arpl
outsb
insl
mov
add
jl
icebp
adc
xchg
sbb
xor
lahf
push
jae
ljmp
cs
push
or
add
jl
icebp
xchg
testb
jns
sbb
int3
mov
mov
xchg
out
jbe
divl
rep
mov
inc
hlt
mov
sahf
sahf
les
mov
hlt
sub
xor
dec
pop
xchg
add
sbb
jns
insb
xorl
dec
shlb
sub
filds
cmc
in
pop
pop
jg
stc
imul
and
push
lds
jbe
dec
xchg
mov
jbe
jg
xor
int
jns
cmp
gs
dec
push
cmc
lahf
fadds
jg
mov
xor
es
jns
fistl
sbb
jne
jmp
shll
or
cs
inc
mov
cmpsl
in
or
aam
jbe
ja
pop
imul
mov
je
adc
cmp
fldl
or
cltd
jne
ljmp
adc
jmp
ja
adc
jle
ss
mov
and
lret
popf
ret
jo
add
ss
test
add
in
jbe
sbb
cmp
lret
xchg
mov
aad
cs
iret
pop
sub
and
and
sti
ja
stos
cmpsb
cmp
or
rorl
fwait
jo
pop
jg
jo
adc
or
sbb
cmp
xchg
fistpl
loopne
adcb
add
adc
adc
lods
ljmp
stc
dec
icebp
push
push
push
outsl
jbe
inc
inc
sub
and
xchg
inc
gs
ret
aad
in
and
in
inc
mov
aam
hlt
sbb
and
inc
push
int3
cmpsl
shr
in
push
pop
fdivrl
and
lock
dec
mov
inc
inc
pushl
addb
jge
js
mov
mov
mov
jl
xchg
mov
xchg
divl
sbb
cmp
mov
adc
cmc
mov
fwait
das
pop
mov
clc
jl
fcom
js
and
repz
or
test
xchg
pop
mov
repnz
lret
xchg
movsl
pop
stc
mov
sete
mov
dec
or
push
es
xlat
ja
mov
imul
xor
xchg
stos
scas
and
sahf
incl
ret
rcrb
push
sbb
std
mov
adc
jg
inc
dec
sub
cmp
shlb
pop
xor
sti
lcall
lock
sub
imul
insb
cmp
pop
inc
stos
fisubs
jnp
lds
dec
insl
and
cmp
fnstenv
fnstsw
jmp
repz
cld
pop
jae
popf
jp
scas
das
pop
stos
pop
lock
xchg
inc
cltd
jecxz
bound
movsb
in
inc
adc
dec
jb
repz
or
lods
mov
jne
inc
and
sarl
add
add
pop
addr16
stos
jp
xchg
rcrb
jnp,pt
test
popa
jp
mov
xchg
add
std
sarl
mov
push
cmpl
xchg
mov
movsl
jecxz
outsl
hlt
cwtl
xor
cwtl
imulb
test
push
and
pmulhuw
ret
in
movsl
mov
jnp
pop
fistps
fstps
add
mov
mov
dec
push
adc
cmp
inc
cmp
sahf
jg
mov
lret
inc
aad
icebp
and
mov
dec
push
mov
jg
lock
dec
cmp
dec
lahf
mov
mov
cmpsl
and
movsb
sbb
andl
idivb
stos
shl
loop
mov
sbb
mov
gs
popf
outsb
cld
add
test
mov
or
aaa
jno
mov
push
rolb
pop
sub
lds
sub
je
stos
add
leave
xlat
cmp
push
bnd
loope
push
mov
pop
popa
adc
ja
push
push
hlt
mov
jmp
cmp
shlb
lea
inc
jne
mov
and
jecxz
mov
jmp
dec
mov
add
movsb
dec
sbb
sti
out
fistpll
adc
call
lods
jp
ds
jg
out
cmpsl
dec
jne
outsb
adc
add
jbe
ja
xorb
dec
dec
sbb
xor
and
clc
pop
mov
les
inc
pop
adc
sub
sbb
sub
and
jle
adc
test
xchg
cld
inc
pop
adc
sbb
cld
cmp
pop
adc
xchg
push
bound
inc
jmp
cld
inc
pop
adc
arpl
sti
jge
fsubrs
in
dec
hlt
mov
mov
sbbb
inc
pop
adc
stos
cmp
push
or
push
dec
in
and
jbe
iret
pushf
cmp
and
pop
adc
or
jae
sub
cwtl
pop
adc
ds
inc
test
and
int
pusha
xor
mov
pop
int3
add
mov
gs
mov
aas
sbb
push
adc
add
mov
icebp
push
push
lret
inc
cwtl
in
jmp
shrb
scas
mov
sbbb
cli
out
xor
add
sbb
and
xor
mov
pop
jge
aam
int3
cmp
mov
fidivrl
ficoms
fnstsw
in
mov
test
inc
in
lahf
pop
and
adc
adc
es
cmp
roll
push
mov
fstpl
mov
pop
or
popa
mov
inc
stos
cld
adc
adc
sub
mov
mov
imul
sbb
popf
in
xchg
mov
sbb
cli
cld
icebp
ljmp
sbb
push
cltd
cmp
icebp
int3
filds
sti
clc
jns
imul
dec
pop
adc
mov
daa
sbb
push
test
jecxz
and
or
pushf
dec
out
jle
cmc
mov
pop
out
test
pop
les
push
adc
shlb
imul
jmp
or
pop
insl
mov
inc
pop
cmpsl
data16
push
insb
push
pop
lahf
jmp
lret
pop
sub
pop
imul
sbb
sti
jnp
insb
fldenv
hlt
repnz
shlb
pop
adc
add
adc
adc
xor
dec
add
jmp
cmp
sub
aas
dec
into
shll
int
insl
daa
clc
popf
pop
adc
xor
adc
adc
cmpsb
mov
pop
push
int3
loope
mov
push
es
cmp
lods
sub
pop
xor
pop
testl
sub
in
add
rcrb
sbb
stc
mov
mov
je
sub
push
inc
push
sbb
sub
jecxz
push
cwtl
lret
fsubrl
enter
pusha
adc
leave
xor
cmpsb
and
pop
pop
pop
add
or
xor
fldcw
ret
mov
mov
cmpsl
out
filds
mov
jl
stos
mov
push
add
xchg
out
stos
inc
mov
add
push
adc
mov
inc
xchg
movsb
enter
push
data16
adc
adc
pop
lods
nop
out
pop
cmp
adc
je
push
adc
cmp
xchg
xor
pusha
mov
mov
je
scas
add
lods
stos
in
repnz
push
jge
sbb
and
adc
les
lcall
divb
push
sbb
pop
push
jmp
jns
jl
sub
push
jle
xlat
out
subb
cmp
mov
mov
je
pop
loop
push
xor
adc
pop
or
sti
mov
xor
jmp
mov
les
mov
hlt
mov
xlat
mov
push
movsl
cmp
stos
xchg
or
scas
pop
cmp
inc
insb
js
push
adc
add
cmp
insb
sbb
jecxz
adc
loopne
lods
and
andl
xchg
lret
mov
out
ds
cltd
fistl
cmp
test
and
push
xchg
and
xor
call
jbe
mov
fcomi
repnz
cmpsb
xor
fstpt
add
lret
out
popf
cmp
divb
add
pop
cmpl
cld
jge
mov
xchg
pop
ret
jno
sbb
xchg
dec
inc
addl
cmp
aaa
loopne
add
jl
add
ja
xor
cmp
outsl
push
dec
ret
sbb
hlt
pushf
mov
adc
or
mov
outsb
insb
jl
adc
daa
addr16
stc
jg
fnstsw
sbb
aam
push
nop
fcoms
es
mov
lcall
rorl
jmp
mov
popf
mov
popf
aad
insl
stos
scas
dec
in
xor
cmc
push
cld
jg
lret
mov
jg
sbb
insb
lea
mov
mov
mov
lret
aaa
xchg
jb
mov
jl
jl
ljmp
hlt
lahf
test
mov
pop
divl
fs
cmp
dec
push
decb
in
jae
fs
xchg
fstps
dec
jne
pop
cmp
ret
js
cmp
aam
or
pusha
mov
jmp
jge
fwait
cmp
cmpsb
add
jg
fcoms
ficoms
adc
jl
iret
inc
inc
sbb
sbb
mov
loope
jl
push
loop
add
mov
stc
jno
cmc
adc
push
or
ss
jnp
fsubl
xor
inc
xchg
jae
hlt
jp
lock
and
int
std
mov
and
xchg
xor
loopne
jb
lock
add
add
test
data16
faddl
pop
ja
fwait
out
fxch
aad
ret
test
insb
pop
sub
loopne
sbb
aaa
pop
or
dec
in
es
pop
outsb
lock
outsb
xchg
inc
shrb
jl
adc
aas
les
add
out
push
push
cmp
xchg
rol
decl
andb
in
sub
jbe
sbb
scas
sub
xor
add
jl
lcall
ret
aaa
push
stc
scas
popf
out
xor
adc
push
sbb
insb
and
cmp
adcl
mov
test
int3
xor
aaa
test
ret
or
xor
mov
mov
add
push
loopne
and
fwait
sbb
popf
adc
cwtl
mov
repnz
test
jo
das
mov
xchg
mov
sbb
cmp
cld
lea
call
and
out
enter
test
push
les
pop
or
sub
jmp
out
push
jbe
sub
pop
dec
nop
sbb
loopne
xor
fwait
aas
dec
cli
inc
out
rcl
aaa
sbb
inc
aad
mov
shr
scas
in
cmp
inc
and
push
dec
mov
lock
cmc
jnp
mov
aaa
mov
outsl
cmp
jl
jne
jno
pop
cmpsl
testl
test
negb
lds
xchg
push
jb
imul
push
jecxz
mov
jne
cmp
and
in
mov
call
or
mull
mov
cmp
shl
test
xchg
sub
lahf
xchg
push
fists
dec
sub
test
adc
cmp
pop
les
fistl
jb
imul
arpl
mov
cmp
push
shrl
mov
lret
jo
push
cwtl
mov
les
jecxz
mov
jbe
sub
mov
pushf
out
pop
mov
cmp
aaa
jecxz
mov
cmp
loope
sahf
mov
lds
sub
lods
pop
mov
jge
sub
cmp
ds
xchg
scas
cld
stos
xlat
ss
mov
fwait
ja
sti
imul
fstpt
mov
loope
imul
mov
je
push
sbb
adc
in
push
loop
sbb
lret
jo
cmpsl
into
jecxz
ja
push
inc
or
mov
cli
mov
push
loopne
movsb
insl
ds
jne
arpl
jbe
push
inc
mov
loop
repnz
cmpsl
aad
xchg
shrl
or
add
pop
movsl
cmpsl
pushf
mov
in
lds
mov
jnp
add
scas
mov
mov
leave
dec
jb
cmpsb
xlat
push
pop
add
jl
stc
js
jmp
out
add
cmp
ja
mov
popa
scas
enter
pop
mov
scas
ljmp
mov
test
cmp
mov
fisubl
in
adc
sub
jo
mov
mov
mov
xor
pop
xchg
cmp
aam
mov
int3
movsb
lcall
aad
mov
lret
push
icebp
es
and
mov
jl
in
cmp
insl
push
adc
lock
push
sub
popf
cmp
insb
pop
imul
ljmp
loop
or
cmp
jb
xor
lret
push
push
adc
push
imul
sbb
movsb
mov
lds
mov
arpl
test
push
popa
sub
adcl
pop
into
xor
mov
and
int
jle
cmpsl
jmp
pushf
movsb
in
mov
and
cmp
pusha
mov
pminub
xchg
adc
push
dec
push
lahf
lods
dec
inc
adcb
push
xor
repnz
cmc
cmpps
outsb
js,pt
cmp
orl
mov
adc
jge
pop
cltd
ljmp
jge
push
sbb
jae
sbb
lds
cmp
out
dec
cltd
pusha
sub
sub
ret
popa
mov
xor
jle
sub
adc
adc
les
rcrl
rolb
lods
push
adc
adc
adc
or
dec
adc
mov
push
sbbb
loopne
adc
dec
lret
xchg
fidivrl
outsb
cmp
aam
mov
pop
enter
test
and
mov
jbe
jecxz
shl
lret
cmpsb
sbb
notb
cs
push
push
lahf
xchg
arpl
xchg
mov
lcall
inc
cmp
jbe
xlat
dec
pop
add
sbb
push
ss
lock
divb
jnp
insl
xchg
cmc
jmp
insl
scas
clc
xchg
lds
jg
add
pop
lahf
sti
aas
aam
pop
stos
addl
outsl
pop
fidivrl
fs
cmp
cmp
add
cld
jl
mov
adc
cmp
and
test
adc
clc
ja
xchg
jae
shr
add
xchg
jne
imul
and
das
and
adc
das
xchg
pop
dec
jne
xchg
adc
cmp
aas
pushl
inc
jbe
cli
sub
imul
lds
adc
push
lods
fiaddl
add
and
adc
scas
stos
mov
mov
sahf
bound
fs
pop
cmpsb
push
xlat
mov
pop
jns
adc
jb
out
jbe
std
xor
xchg
and
mov
pushf
mov
pop
mov
jbe
pop
ja
addb
testb
add
cs
lret
lret
cmp
cld
adc
adc
jbe
pop
pop
mov
add
notl
xor
fwait
mov
into
popf
mov
add
cmp
mov
jbe
jmp
push
sbb
add
fs
adc
add
lock
into
insb
lcall
test
cmp
adc
fistpll
add
adc
cmp
into
aaa
mov
inc
xor
ljmp
es
adc
adc
cld
scas
add
sub
mov
and
repnz
adc
add
stos
mov
mov
sub
add
add
pop
sub
push
repz
scas
mov
jmp
movsl
dec
push
cli
int
loopne
adc
test
movsb
bound
in
and
mov
mov
in
fldl
jno
bound
cli
idivl
out
push
and
inc
cwtl
pop
test
ret
push
sub
and
mov
mov
enter
fimuls
dec
sub
leave
imul
test
and
adc
jg
push
lahf
or
dec
mov
cmpsb
dec
cltd
fwait
pop
sbb
mov
push
adc
cmp
mov
ss
mov
mov
cwtl
jns
jno
xor
adc
test
dec
jl
mov
cmpsl
mov
cmpl
out
aam
mov
inc
push
jge
icebp
repnz
notb
cmp
call
arpl
adc
lock
jnp
call
mov
mov
rolb
lcall
int3
mov
aaa
gs
ret
shl
cmp
push
jecxz
add
sti
and
inc
cmpl
push
mov
pop
rorb
cs
adc
adc
bswap
nop
dec
xchg
aas
inc
icebp
lahf
idivb
repnz
ss
xlat
cmp
in
scas
lods
push
aam
push
into
shl
jp
push
push
loop
jns
std
mov
jo
test
pop
adc
fstl
inc
ss
in
and
repnz
cltd
push
sub
mov
xchg
dec
sti
in
in
push
push
dec
out
sub
subb
in
fimuls
or
mov
imul
ja
add
ja
add
jle
add
adc
adc
inc
add
stos
inc
add
mov
inc
add
adc
adc
inc
add
jle
add
cmp
adc
inc
add
add
adc
inc
add
add
inc
add
jle
add
adc
adc
inc
add
push
inc
add
adc
adc
inc
add
add
sbbl
push
mov
push
mov
adc
call
cwtl
mull
add
outsl
out
push
mov
jmp
jnp
call
js
push
adc
dec
push
prefetcht1
test
decb
xor
cli
sub
cs
mulb
jle
out
jle
push
mov
andb
pop
jl
mov
in
scas
sbb
je
mov
scas
cli
mov
xchg
stos
gs
push
dec
jbe
dec
xchg
mov
mov
stos
mov
int3
ljmp
lea
popf
mov
lret
ja
jo
in
leave
pop
fmulp
jp
mov
push
dec
jo
mov
dec
mov
jbe
sti
adc
loopne
stos
mov
lahf
mov
pusha
subl
fbstp
je
test
mov
fs
pop
out
mov
pop
aad
adc
jae
xchg
mov
mov
je
repnz
aam
and
xchg
lret
adc
jl
shrl
dec
adc
jg
popf
mov
lods
iret
and
mov
ret
push
cld
jno
lret
inc
lea
cs
cmpsb
mov
fs
mov
cmpsl
ljmp
lretw
stos
mov
repnz
mov
push
jbe
cs
push
mov
lods
int3
es
scas
clc
scas
popf
in
mov
test
jbe
add
movsl
arpl
sub
outsb
movsb
cmp
out
les
in
mov
jae
je
adc
les
mov
xchg
mov
divb
icebp
jne
std
jg
leave
cmp
aam
ss
fstl
push
vmovaps
mov
cmp
out
push
mov
call
mov
cmp
rorl
nop
stc
jo
jl
std
lret
cmpsb
enter
out
mov
std
test
push
or
lret
dec
scas
fiaddl
and
cmc
call
fstpt
out
aad
inc
popa
jl
mov
stos
lret
sti
xchg
movsl
push
sbb
rclb
and
movsl
shr
rorb
dec
inc
orb
mov
mov
mov
pop
addr16
sub
lcall
lcall
test
lret
push
jnp
mov
xor
notl
add
mov
rcll
cld
and
or
push
fdivl
sub
adc
mov
adc
cmp
cli
cltd
cld
hlt
bound
mov
dec
push
imul
shrl
and
mov
mov
add
jmp
xchg
lcall
int3
sub
and
jl
xor
shll
jmp
mov
sub
push
rolb
andl
and
nop
sbb
mov
leave
jno
inc
shl
sub
adc
movl
pop
test
and
fcoms
push
adc
add
adc
cmc
data16
out
dec
xchg
adcb
inc
sbb
orb
shll
or
sarl
shlb
adc
inc
sbb
out
repz
in
in
cltd
jecxz
in
sub
mov
and
or
lods
mov
cwtl
mov
fcmovb
pop
inc
cmpsl
ja
nop
cld
push
insb
test
push
push
adc
in
ljmp
inc
push
mov
lahf
sbb
fwait
int3
jp
iret
push
dec
test
adc
add
or
mov
loopne
mov
cmp
jecxz
sub
lret
neg
js
mov
aas
pop
in
jle
movsb
sub
lods
and
inc
iret
jns
xor
lret
jb
fisttpll
jmp
and
pop
shl
inc
in
rcrl
popa
in
mov
and
pop
mov
push
cs
std
pusha
mov
out
inc
out
outsl
cmc
incb
push
ret
mov
inc
dec
inc
movsl
jno
xlat
inc
push
mov
inc
int
add
xor
or
jmp
js
lret
jo
stos
mov
and
mov
scas
repz
clc
jo
in
mov
pop
aaa
jo
sahf
jecxz
dec
cwtl
sub
cmpsl
sbb
mov
lret
shr
hlt
push
pop
xor
add
jo
jmp
aaa
mov
mov
int
sub
xchg
insl
cld
fists
ja
iret
jg
jmp
mov
lea
and
aam
dec
mov
mov
jmp
mov
mov
out
mov
jb
push
fdivrs
cs
xor
pop
je,pt
xchg
mov
xchg
lret
in
stos
jbe
int
xlat
les
jge
cli
or
push
jae
imul
jle
int
cmpsb
int3
repz
mov
lret
mov
jmp
ja
fbstp
dec
mov
lret
mov
movsb
cmp
in
shl
sarl
outsb
push
cld
jge
mov
mov
rorb
sub
push
mov
cmpsl
stos
mov
jge
rcrl
lods
inc
test
jbe
add
xchg
add
mov
movsb
cmp
out
jmp
out
mov
sahf
mov
insl
add
cmpsb
movsl
pushf
pusha
mov
push
push
add
add
data16
daa
test
mov
mov
fucomip
std
cmpsl
lods
add
dec
sbb
aam
sbb
sub
movsl
fistpl
testb
mov
sarl
imul
jl
xchg
pop
ss
pop
dec
sbb
dec
jg
scas
mov
out
js
out
jle
out
cmp
ds
adc
loopne
or
push
ljmp
pop
and
add
mov
loopne
xor
cmpsb
out
aam
out
fisttpl
mov
fwait
cli
fsts
dec
cmp
les
adc
jge
add
out
adc
adc
or
push
push
out
aas
fisttps
sbb
inc
sub
stc
les
pop
xchg
push
rcll
adc
sub
pop
mov
mov
inc
inc
jo
outsb
push
ja
dec
xor
imul
adc
push
fwait
or
adc
and
cmp
dec
lcall
push
mov
std
loop
mov
cld
fistl
test
and
jl
fistpl
les
loope
test
icebp
dec
mov
gs
sbb
sbb
shrl
fs
mov
rcrl
jne
idivl
fisubs
faddl
push
mov
rcll
adc
xchg
jnp
mov
ljmp
xor
cmp
scas
stos
pushf
xor
dec
lds
test
iret
push
leave
or
dec
cmpsb
lods
enter
xchg
inc
pcmpeqw
std
addr16
imul
add
nop
or
sarl
fcmovbe
push
ret
loopne
pop
in
and
mov
adc
in
fisubl
and
pusha
jl
clc
push
pop
fcmovne
testb
mov
insl
dec
je
fidivl
cmp
dec
push
and
aam
in
ljmpw
arpl
jne
mov
scas
jmp
out
fucomi
add
pop
gs
or
jmp
or
cmp
push
xor
push
adc
scas
cld
test
dec
mov
pop
jbe
popa
cmp
pop
dec
add
mov
pop
mov
cltd
cmc
in
pop
jne
jecxz
sahf
cmp
jp
adc
flds
lcall
jns
adc
sub
pop
mov
lea
addr16
sub
jecxz
push
shlb
stc
mov
fcompl
mov
aaa
aas
fcom
movsb
sbb
cmp
and
add
jle
cltd
fnstsw
mov
sti
mov
mov
aaa
and
mov
add
je
stc
shlb
sahf
mov
enter
aas
stc
lods
fisttps
dec
mov
inc
hlt
divl
mov
sbb
mov
js
pop
push
cmpsb
das
rorb
cmp
repnz
jge
loopne
arpl
fwait
mov
adc
xor
stos
xlat
loopne
mull
lods
mov
push
inc
xchg
icebp
sbb
lds
int
sub
push
lret
lahf
sbb
xorb
mov
fistpll
cmpb
insb
cltd
insb
lcall
shrb
stos
fwait
jae
mov
popa
or
pop
ja
xchg
jl
xchg
jbe
call
pop
xchg
into
jecxz
ja
add
mov
jbe
repnz
aaa
sbbl
js
xchg
stos
push
jne
mov
and
mov
jne
repz
call
mov
lea
popf
insl
and
or
je
add
and
in
xor
push
pop
jl
pop
cmpsl
lds
loope
test
add
out
jnp
out
inc
popf
mov
in
pop
cmpsl
pushf
mov
addr16
mov
cwtl
idiv
mov
mov
lret
imul
shlb
add
pop
mov
mov
sub
lods
add
add
jnp
int
or
adc
and
sbb
or
cmpsb
mov
shlb
jmp
mov
mov
cmp
andb
je
call
fwait
loope
add
mov
xchg
outsl
aas
push
out
test
mov
out
clc
xchg
and
lods
push
or
sbb
ret
pop
adc
out
jmp
and
sti
or
push
dec
dec
xor
adc
sti
rcll
repnz
cmp
sahf
jg
mov
xchg
lock
xchg
insl
jp
jne
xor
mov
insl
xchg
cmpsl
mov
jo
pushf
loopne
adc
jmp
hlt
testl
dec
jmp
inc
jle
daa
aad
mov
repnz
pop
gs
sti
movsl
sub
repz
pushf
jns
repnz
stc
loop
jp
rorl
pushf
loopne
adc
stc
in
stc
pop
lds
daa
jns
add
sub
mov
jnp
je
lahf
int3
xlat
loopne
inc
fcmovnb
sbb
daa
fnstcw
dec
shl
mov
inc
inc
into
mov
adc
sbb
test
rolb
rorb
and
nop
sub
and
sbb
call
dec
fimull
mov
mov
sbb
jbe
sbb
loop
leave
fld
cmp
imul
sub
sbb
gs
lods
out
in
addr16
push
sub
dec
call
loopne
lods
mov
add
inc
loope
mov
aad
cs
lret
addr16
scas
data16
push
lods
test
push
cli
sub
mov
add
nop
sahf
aam
xchg
cltd
loope
ljmp
xor
mov
pushf
fisubl
cmpsb
and
movsb
pop
loopne
adc
and
jmp
adc
cmp
xchg
mull
rclb
push
cmove
lods
inc
mov
inc
and
insb
mov
mov
loopne
push
aaa
test
push
adc
loope
mov
loop
mov
cmp
nop
mov
mov
jle
jnp
scas
dec
aaa
push
loopne
adc
cmp
mov
fcompl
jg
mov
sbb
stos
mov
clc
and
add
into
sahf
mov
mov
jp
xor
js
push
adc
int
mov
loope
outsb
cmp
inc
hlt
mov
mov
jg
xor
into
and
dec
cmp
xor
test
mov
mov
fwait
pop
sub
rclb
push
adc
stos
lret
bound
fcoms
aas
je
jae
sbb
mov
loopne
sbb
push
push
adc
imul
out
jb
push
lods
add
in
adc
fnstsw
mov
cmp
addb
mov
jne
repz
fidivrs
cmp
bound
negb
bound
fs
je
add
les
scas
mov
or
ret
loop
sub
mov
bound
ljmp
mov
pusha
sahf
mov
sti
outsb
mov
mov
rcrl
cld
loopne
adc
jno
jl
jl
mov
jbe
cli
insl
mov
lock
xor
push
adc
shr
lahf
mov
inc
cmpb
jb
cmpsl
popa
xchg
sbb
mov
mov
or
pop
jg
js
push
adc
and
cld
jb
clc
pop
insl
inc
xchg
and
lahf
dec
jae
stos
lods
cmpsl
mov
push
add
cmc
jns
rorl
adcb
movsb
cmpsl
aas
lcall
jo
dec
scas
icebp
xchg
insb
stos
mov
mov
dec
stos
fnstcw
movsl
cmpsl
int
aaa
inc
mov
negl
in
inc
mov
push
sbb
ret
ret
test
cmp
mov
mov
stos
cmpsb
pop
test
jne
mov
dec
test
testb
pop
pop
dec
xchg
out
mov
loopne
in
sahf
jge
push
cmc
add
scas
cli
fdiv
lds
data16
jp
ficomps
mov
jge
adc
push
aaa
jae
pusha
push
dec
jl
push
sbb
in
cmp
jb
aaa
cld
shl
cmc
arpl
pop
imul
jg
int
jne
xchg
int3
xor
in
js
in
std
jno
jecxz
mov
cld
push
arpl
inc
xchg
mov
sbb
mov
popa
cwtl
mul
popf
loop
jmp
stos
in
shrb
lahf
or
xor
mov
sbb
jmp
mov
pop
scas
adc
xchg
inc
mov
leave
lods
cli
fwait
push
mov
inc
adc
xchg
inc
dec
xor
inc
xchg
lea
cmp
adcb
repnz
inc
xchg
xchg
lds
push
sbb
inc
les
in
stos
out
xor
mov
jg
imul
adc
mov
add
xchg
imul
js
loopne
aas
aas
mov
mov
cltd
push
or
imul
cmpsb
mov
imul
and
push
mov
outsl
jmp
lahf
divl
int3
push
lock
dec
test
or
lea
adcl
sbb
aad
jae
and
push
inc
or
aas
lods
mov
lcall
fbld
xor
and
jp
out
cmp
ja
jecxz
xchg
loopne
adc
push
and
fdivrs
cmc
in
sub
nop
ret
cmp
add
push
adc
xor
aaa
orb
cmp
fisubrs
jg
mov
pop
or
mov
adc
xchg
pop
mov
adc
shlb
aad
jmp
scas
jg
add
cmc
add
hlt
cmpsl
je
stc
rolb
ds
fidivl
imull
push
jge
add
daa
xor
mov
iret
mov
jb
push
aad
xor
aaa
ds
mov
mov
jmp
sub
pushl
lods
jge
loopne
sbb
pushf
xchg
mov
push
push
xor
mov
jbe
repnz
repnz
cld
add
insb
insl
cld
and
outsb
mov
add
cmp
imul
xor
xor
sub
dec
push
hlt
lahf
adc
inc
adcb
inc
ljmp
sub
jne
mov
pop
loope
pop
jnp
out
push
stc
jnp
mov
sti
jge
fisttps
fidivl
mov
cwtl
cmp
xlat
sub
sbb
cmp
add
add
jo
jmp
cld
insl
repnz
mov
cld
sub
ja
fistpll
inc
ljmp
insb
fidivrs
xchg
mov
int3
sbb
adc
cmpsb
sbb
mov
pop
fiaddl
scas
jo
inc
add
aam
mov
adc
jg
mov
jl
adc
inc
add
pushl
stos
je
jno
in
dec
sbb
mov
inc
fnstenv
cld
scas
sub
loop
clc
jbe
mov
add
jne
in
addr16
test
and
test
mov
and
imul
repz
fstpt
cs
sti
push
xchg
dec
adc
pop
rcr
sti
lods
idivl
sti
jo
test
xor
in
xor
xchg
pop
adc
and
dec
push
ja
cli
dec
mov
je
sti
daa
cs
xchg
fadd
xchg
mov
and
push
jl
or
cwtl
jl
mov
fwait
lret
jecxz
sbbl
inc
pop
rol
xchg
mov
dec
mov
inc
xchg
pop
inc
repz
arpl
stos
ror
push
aaa
jmp
adc
outsb
cmp
and
cmp
int3
mov
xchg
rcl
cmp
stc
cmpsl
lret
xlat
sub
xchg
out
or
out
test
xor
or
xchg
jmp
pop
pop
push
push
dec
inc
loope
mov
sub
bound
add
icebp
hlt
test
pop
std
jo
mov
mov
mov
int
sbb
sete
or
or
sub
mov
lahf
iret
lea
mov
or
fdivrp
mov
mov
jecxz
lret
mov
repz
pop
stos
mov
inc
ret
inc
cmp
dec
int
cmpsb
push
fsts
lock
outsb
test
arpl
add
sub
push
xor
xor
shlb
cli
out
mov
jl
jle
es
pop
movsl
bound
add
jnp
jmp
mov
pusha
and
xlat
jno
inc
dec
mov
ja
int
jbe
sub
and
enter
in
fisttps
pop
mov
insb
jecxz
in
jmp
fcmovu
scas
or
rorb
shrb
adc
sbb
inc
rep
lcall
add
inc
loop
xlat
rorb
shlb
and
add
fldl
xchg
iret
xchg
daa
sbb
lock
sahf
rcl
enter
jmp
jg
out
pop
cmp
inc
jae
or
jns,pn
sbb
fbld
popa
enter
add
push
and
fistps
xlat
dec
xchg
mov
xor
mov
pop
clc
cmp
sub
stc
jbe
and
ret
add
push
cmp
shlb
vpor
sbb
mov
insb
inc
cmp
mov
jo
add
aaa
aas
imull
pop
dec
movsb
ret
shrl
mov
bound
add
test
push
jns
cmp
insb
adcl
adc
jle
data16
loope
cmp
jbe
jge
fistpll
mov
hlt
mov
ret
mov
les
jmp
pop
add
jl
cli
std
js
in
out
xor
add
shlb
mov
jbe
pcmpeqw
lock
lret
sbb
cmp
dec
jbe
mov
stos
lret
imul
pushl
cli
adc
lds
cmp
add
icebp
pop
in
cmp
mov
les
cld
cmp
pop
icebp
jle
imul
fstpt
andps
pop
dec
fs
adc
les
pop
xor
xor
and
fs
ja
dec
or
bound
dec
loop
xchg
in
push
xchg
pushf
cld
jl
add
jg
lret
cmp
xchg
and
cmpsl
push
mov
mov
cmpsl
scas
test
pop
add
and
and
out
sub
and
sub
int
sub
and
rcll
je
jb
scas
mov
icebp
gs
pop
cmp
rclb
jne
out
jo
xorb
popa
push
mov
jl
add
jae
bound
jne
and
insl
adc
mov
pop
fldenv
ret
pop
test
leave
push
add
adc
imulb
sarb
push
mov
out
call
xor
push
mov
xchg
mov
mov
movsb
push
push
xchg
scas
cmpsb
or
lea
shlb
loope
and
out
xchg
out
test
push
xchg
adc
arpl
das
cmp
aaa
mov
scas
adc
push
cmp
out
xchg
inc
in
pop
imul
pusha
mov
cmp
xchg
push
das
xor
outsb
mov
loope
mov
jb
das
cmp
xchg
mov
push
and
xlat
jp
insb
in
loope
adc
push
enter
xor
add
mov
cltd
inc
shr
cwtl
xor
add
jp
sbb
ljmp
add
popf
mov
out
test
pop
fcompl
call
paddd
sub
daa
js
fidivl
cmc
adc
cmp
sub
test
ljmp
xor
jp
cmp
int
imul
sbb
jb
test
dec
shll
dec
dec
insl
xchg
mov
jp
loope
iret
cmp
test
xor
mov
mov
inc
and
and
xchg
dec
inc
or
rcll
loope
out
in
out
lahf
pop
or
sbb
gs
loope
pop
faddl
mov
repz
adc
lods
sub
mov
insb
inc
scas
mov
int3
testb
push
gs
scas
push
mov
arpl
dec
fisubl
adc
addr16
mov
imul
jge
aam
pop
lahf
dec
jne
sbb
xor
or
cld
fcoml
xchg
adc
movsb
outsb
imul
shrl
jmp
jbe
sbb
test
cmpsl
lods
jmp
rclb
mov
fmull
xchg
repnz
adc
mov
adc
add
das
sub
iret
pop
sbb
enter
dec
lret
enter
dec
jno
stc
lock
js
test
scas
mov
mov
lahf
jge
mov
out
aas
in
lahf
insb
adc
cli
mov
cmp
cmp
movsb
sbb
aas
scas
idivb
ja
sbb
rorb
push
jnp
sbb
bound
pusha
xchg
scas
mov
xor
rcll
add
pop
scas
incb
mov
and
aaa
iret
inc
fcomp
mull
jno
xlat
out
subb
movsl
xchg
fs
mov
fidivrs
outsl
incl
aaa
and
xor
je
sti
jle
out
idivb
inc
js
stc
inc
xchg
add
jle
outsl
mov
je
adc
pop
iret
jp
enter
xor
stos
cmp
xchg
stc
lods
test
call
in
jnp
xlat
pop
pop
ss
xchg
ret
js
rcl
push
into
insb
mov
scas
je
push
cs
in
mov
mov
iret
jbe
ljmp
sub
cmp
loope
adc
push
sbb
mov
lret
insl
std
mov
int
jne
sub
fistpll
add
je
cmpsl
je
sbb
ljmp
mov
add
pop
imul
add
or
push
cli
fwait
xorl
nop
cmp
cld
xchg
ja
stos
push
xchg
add
cli
popf
in
xor
fdivrl
add
movsl
dec
pop
jp
mov
negl
jnp
imul
pop
rclb
insb
mov
push
push
mov
lds
inc
or
jbe
add
in
add
and
cmp
and
rcrl
mov
ds
repz
mov
mov
xchg
imul
or
cmp
cwtl
out
mov
dec
inc
ss
xchg
pusha
xor
inc
jmp
push
and
jmp
in
pop
dec
jb
fstpl
icebp
shl
bnd
testb
push
mov
and
dec
push
sbb
cmp
andb
adc
pop
icebp
jae
sbb
call
cld
sub
inc
fwait
cmp
inc
andb
cmp
push
mov
mov
push
aaa
mov
hlt
pop
ss
outsl
aad
test
lcall
mov
clc
jnp
push
stos
cmpsl
xchg
pusha
shll
les
dec
sbb
nop
adc
dec
jae
int3
ficoml
push
jo
add
daa
push
pushf
xor
shl
mov
test
dec
test
dec
lods
ljmp
and
and
gs
or
xchg
ljmp
lock
xchg
cmp
or
fnsave
out
mov
mov
cmc
rol
add
leave
jo
push
outsl
test
jae
dec
push
lcall
and
xchg
mov
jbe
add
scas
in
jmp
inc
mov
loopne
adc
leave
cmpsb
lcall
push
mov
jmp
inc
inc
lods
imul
sbb
std
aad
inc
pop
push
mov
adcl
cs
and
mov
pop
or
js
push
adc
add
mov
rcrb
push
jl
aas
push
adc
scas
jne
gs
adc
push
sbb
daa
pop
pop
stos
pop
inc
or
int3
or
stos
stos
inc
sbb
cmpsl
push
mov
jae
adc
pop
stos
les
inc
sub
push
jbe
nop
push
jle
dec
xchg
pop
lcall
fcom
mov
sub
or
icebp
jl
stos
mov
shl
decl
xor
xchg
insb
idivb
out
fsubr
aad
jb
outsl
into
gs
hlt
sbb
push
lods
out
cmp
ja
mov
sub
ret
add
insb
mov
movsb
mov
out
divl
mov
jbe
stc
jo
sbb
in
xchg
inc
fdivrl
lahf
out
in
dec
movsb
and
jmp
mov
divl
jg
fistpll
mov
in
aas
xchg
push
fdivl
pushf
xor
in
fidivrs
jge
mov
aam
lahf
fidivrs
dec
sbb
scas
into
in
ja
into
jns
xchg
test
push
push
cmpsl
dec
nop
push
cli
jno
lahf
mov
dec
or
daa
aaa
in
add
push
divl
xchg
mov
outsl
js
or
inc
jne
sahf
push
push
pop
jnp
out
aaa
push
push
add
je
divb
mov
iret
in
dec
mov
jp
mov
rcll
xchg
and
cmpl
xor
cli
add
push
in
mov
daa
ss
add
push
divl
xchg
insl
mov
mov
lcall
mov
jmp
jnp
jp
add
add
shll
push
cmpsb
mov
xchg
cld
xor
insl
imul
addl
je
jo
xchg
push
push
push
lock
mov
mov
mov
shlb
and
mov
out
adc
es
ds
pslld
xchg
adc
xchg
lods
leave
pop
sub
mov
je
loope
mov
jle
lret
jo
adc
lahf
mov
repz
push
movsl
js
or
aaa
adc
out
dec
sarb
sub
scas
push
mov
cmp
mov
adc
xor
xchg
cmp
jmp
jb
out
mov
das
addr16
and
and
pop
sbb
icebp
pop
sbb
push
shrl
cltd
inc
nop
cmpsl
xor
mov
inc
enter
sti
add
pusha
jbe
mov
mov
mov
cmpsb
sarb
call
into
jne
pop
mov
sub
leave
xchg
jp
push
leave
filds
xchg
sub
call
push
mov
jmp
xor
lock
lds
aaa
lret
rclb
repz
test
sub
int
cs
add
xchg
aam
popa
arpl
xchg
mov
loope
mov
movsl
dec
lock
in
nop
jmp
int3
mov
icebp
shl
or
dec
mov
insl
ret
mov
mov
mov
out
cmp
outsl
iret
push
dec
mov
insb
lahf
fs
sbb
incb
out
mov
ror
xor
dec
pop
popl
xor
mov
jp
cli
out
mov
fdivrl
loopne
mov
orb
imul
imul
in
mov
fisttps
flds
lahf
push
ljmp
xchg
ds
out
mov
sbb
xchg
ljmp
es
adc
in
pop
adc
jge
mov
adc
xor
enter
sbb
inc
aad
xchg
mov
lds
fs
pushf
mov
adc
mov
insb
jl
adc
pop
sub
adcb
fs
push
push
and
jmp
addr16
pop
js
in
movsb
push
push
fists
xchg
rcr
push
test
pop
lcall
in
sub
cmpsb
push
mov
repz
jl
lcall
and
pusha
push
fsts
mov
xor
jnp
outsl
inc
mov
pop
mov
jnp
xor
mov
or
test
ja
mov
cmp
in
mov
xchg
dec
jle
and
lds
addr16
fidivrs
mov
jmp
cld
dec
rep
mov
push
adc
mov
lret
push
inc
cmp
xchg
hlt
pop
xor
xor
adc
xor
push
jnp
mov
decl
popf
fistpll
add
out
fstpt
jmp
push
fidivrs
xor
mov
inc
xorb
mov
sbb
cmp
mov
lea
dec
popf
cmp
sbb
loopne
adc
xor
lcall
inc
jl
sub
dec
out
or
add
push
adc
daa
pop
daa
cld
add
outsb
mov
mov
rcr
in
sub
es
mov
adc
iret
scas
cmp
adc
aaa
imull
push
je
cmpsb
mov
push
imul
aaa
xacquire
add
mov
stos
fisttps
jecxz
fidivrl
std
icebp
pop
loopne
jbe
notl
jbe
je
stc
rol
leave
ja,pt
mov
lods
out
inc
fidivrl
dec
cltd
fcmovnbe
dec
adc
jg
sub
cmp
push
push
cld
jno
mov
xchg
aas
mov
cmp
hlt
push
mov
mov
sar
jg
push
cld
imul
int3
adc
jb
mov
cmp
sub
divb
adc
je
in
sbb
inc
cmp
push
rcl
or
rolb
push
je
push
mov
sbb
ror
in
test
fs
ret
mov
mov
adc
pop
idivb
lods
out
and
test
xchg
repz
inc
ret
cmp
ror
das
in
testl
andb
and
mov
sbb
cli
pop
adc
add
sti
fsub
movsl
inc
or
jbe
pop
fbstp
lods
mov
shr
add
mov
test
sbb
xchg
fstps
add
sub
xchg
and
sub
add
mov
push
test
xor
imul
add
mov
sub
adc
pop
push
lcall
inc
jp
add
loope
jmp
mov
xchg
sbb
lock
mov
dec
xchg
or
lock
adc
or
imul
sbb
dec
fsubrl
dec
das
push
push
push
inc
pop
rorb
fsubrs
cmpsb
push
jp
pop
dec
aam
sarl
outsb
stos
xor
cmp
lea
mov
add
mov
jp
add
sbb
ret
sub
pop
jnp
xor
hlt
js
nop
jecxz
xchg
inc
dec
jo
sbb
mov
jge
lods
pop
mov
rorb
and
add
add
ljmp
aaa
push
rcll
in
clc
mov
jo
push
mov
mov
push
push
and
iret
push
mov
xor
int3
cmpb
lods
in
es
xor
mov
push
xor
outsb
or
imul
in
aad
ljmp
sarb
rol
push
lods
leave
and
lea
sti
imul
jp
mov
pop
outsl
sbb
xlat
jg
cmpsb
arpl
mov
dec
mov
stc
adc
push
out
cmpsl
push
cmp
pop
aas
mov
inc
xchg
dec
xor
add
arpl
xor
dec
push
mov
mov
mov
lock
dec
sub
rcll
hlt
xchg
adc
push
fidivrs
aas
repnz
repz
pop
mov
add
outsb
pop
mov
icebp
clc
xchg
push
fdivs
loop
sti
in
cmp
push
xor
cmpsb
add
xchg
inc
in
loop
jp
into
popf
cmp
scas
dec
and
push
rcll
int
jo
pop
adc
jmp
xchg
pop
xor
sub
sbb
sahf
adc
fwait
data16
jnp
out
add
add
pop
mulb
pop
filds
ret
pushl
fsubl
cmc
pushf
cmp
adc
cltd
incl
outsl
adc
cmovo
mov
adc
dec
popf
cmp
sub
sub
push
xchg
and
enter
or
push
cmc
lahf
jb
mov
daa
divb
add
aaa
mov
es
add
repz
popf
mov
jmp
out
orb
jb
and
pushw
sbb
push
pusha
fs
ja
lret
and
mov
dec
add
add
popfw
mov
mov
lea
sub
and
test
cld
pop
jne
pushl
scas
mov
mov
mov
movsl
mov
out
pop
jnp
je
aaa
xchg
add
clc
cs
and
xor
xor
cltd
shrl
call
inc
or
pop
sbb
add
add
mov
adc
call
stos
aam
movsl
or
jne
jmp
adc
jae
cmp
shl
sbb
and
mov
jp
loop
xchg
arpl
mov
and
adc
adc
mov
sub
popf
rcll
push
add
imulb
push
ficompl
mov
xchg
roll
jns
andb
mov
mov
div
xchg
and
xchg
pop
mov
or
aaa
xchg
mov
jne
or
sbb
or
sbb
ljmp
inc
inc
cmp
dec
cmpsb
sub
adc
and
mov
mov
pop
inc
inc
divl
mov
arpl
in
pop
mov
pushf
mov
je
divl
mov
cmp
shrb
jb
ja
out
push
shrb
cmc
push
arpl
jl
push
push
jns
pop
pop
je
stos
lods
jno
sub
fs
test
mov
xlat
popf
push
hlt
repz
mov
std
popf
in
cmp
jge
enter
scas
movsl
pop
push
inc
scas
jl
popa
jp
test
mov
jmp
pop
cmp
maxps
pop
test
and
ss
fwait
mov
jp
mov
imul
inc
adcb
testl
add
or
jo
pop
adc
outsl
loop
jb
push
inc
xor
or
cmpb
repz
cmpb
pop
in
mov
push
mov
fdivr
aad
and
das
scas
cwtl
out
fidivl
imul
bound
std
sub
cwtl
dec
dec
inc
shrb
add
loope
or
arpl
and
rolb
dec
xchg
xchg
push
test
idivb
jne
sub
pusha
repz
cmp
test
rcrb
mov
cli
mov
notb
pop
movb
outsb
pop
aas
and
cmpsb
push
mov
cmpsl
test
cmc
pop
roll
sub
out
fs
mov
push
fstpt
stos
pop
mov
fsub
imul
inc
xchg
cmp
cmp
outsl
cmc
cmp
sbb
pop
les
imul
mov
das
push
into
adc
fwait
add
roll
or
and
sbb
dec
cltd
in
push
add
dec
popf
mov
out
jle
mov
cmpsb
or
fs
cmpsl
cmp
jnp
insb
mov
fwait
ret
mov
and
or
cmc
shlb
push
icebp
leave
mov
adcl
imul
notl
test
add
mov
cmp
aas
sbb
out
fmuls
mov
xor
jl
repz
jbe
cli
xchg
adc
subb
scas
sahf
repnz
pop
imul
cmp
xchg
xchg
sti
push
js
mov
mov
inc
mov
stos
mov
les
divl
lods
stos
adc
pop
fidivl
lock
sub
int
adc
mov
add
je
or
outsl
fidivs
xor
movhlps
cmp
cld
xchg
ja
push
push
lods
je
repz
or
fistpll
fidivrl
fsubp
cltd
push
ret
mov
das
cmpsb
cmp
mov
pop
lock
mov
in
scas
mov
ficoms
js
sbb
inc
into
loopne
ja
adc
xor
mov
jne
clc
ror
fsub
cmp
adcb
shll
std
scas
rolb
stos
add
in
adc
push
sbb
adc
std
scas
fldenv
fwait
cmp
cmp
jbe
mov
jno
fiaddl
mov
add
out
xlat
repnz
mov
jecxz
dec
sub
mov
pop
jle
or
data16
addr16
jae
lods
bound
and
int
and
adc
imul
out
in
and
lret
icebp
sub
orl
test
and
mov
jmp
ret
inc
test
inc
or
fimull
inc
outsb
jo
sbb
cmp
pushf
sub
push
fwait
lcall
cli
cs
jecxz
fcoms
mov
lcall
popa
mov
aam
inc
or
ja
xchg
cmpsl
mov
jno
dec
xchg
repz
jns
dec
xor
popa
icebp
cmp
test
and
sbb
daa
sti
fs
lcall
jae
jo
fadds
mov
jno
cmc
mov
push
xchg
test
cwtl
lret
cmp
dec
fsubrl
mov
sarb
lcall
dec
out
jge
icebp
cmp
das
jl
stos
scas
xchg
int
push
push
mov
cmp
cmp
adc
flds
or
cmp
and
mov
lea
fisubl
jae
xchg
dec
dec
icebp
adc
xchg
dec
xchg
orl
and
loope
dec
xchg
or
out
in
add
adc
stos
rcl
int
rclb
sub
push
fwait
jns
pop
sarl
enter
add
int
std
int
xlat
sbb
add
fnstcw
test
xor
cmp
lret
mov
mov
fmul
hlt
sub
lret
imul
addl
add
les
pop
mov
xchg
jg
pop
rolb
pop
mov
dec
sub
mov
adcb
lahf
ret
jns
arpl
mov
jle
cmpsb
repnz
inc
add
push
xchg
fdivl
enter
movsl
jbe
jbe
push
pop
rolb
pop
sbb
lock
fdivrs
jle
xchg
pop
dec
dec
inc
loop
sbb
jg
mov
mov
test
stos
cmp
xchg
ss
lea
xor
leave
insb
or
cmp
jb
ss
call
cmp
xor
adc
mov
rcrl
sbb
aam
hlt
js
mov
mov
push
in
cwtl
sbb
push
ja
rcrb
jo
sahf
mov
loopne
mov
idivb
sbb
cltd
out
call
ret
cld
stos
xlat
push
insb
test
mov
push
pop
daa
dec
nop
push
mov
mov
inc
xchg
sub
outsb
cld
add
test
or
lock
mov
mov
inc
shll
std
scas
fisttpl
pusha
les
mov
std
jo
mov
jne
fsubrp
repnz
mov
push
lret
pushf
dec
lea
pop
aaa
loop
add
les
add
mov
sti
movaps
mov
scas
movsl
nop
mov
out
xor
imull
add
mov
jne
fiadds
loope
adc
sub
shll
mov
and
stos
mov
es
xor
push
test
sbb
xor
pushl
andb
mov
mov
lcall
jnp
aaa
out
stos
mov
mov
mov
push
ret
imul
lcall
add
add
fnsave
xor
pavgb
mov
push
ret
fistl
sub
ss
idivl
mov
and
es
pop
cmpsl
push
call
orl
scas
mov
push
insb
mov
lods
sbb
jl
mov
add
repnz
fsub
add
loopne
sbb
xor
aaa
and
add
sub
into
cmp
aam
pusha
in
bnd
mov
lods
punpckhbw
jns
jg
xlat
pop
repz
or
cmp
xor
adc
pop
loopne
aad
test
jnp
xor
ljmp
and
lcall
mov
ds
push
jle
xor
adc
sub
loope
and
std
icebp
jo
fs
loope
adc
mov
jb
insl
call
adc
popf
scas
adc
in
ficomps
jo
mov
fsts
fwait
dec
xor
mov
or
jb
add
into
jb
xchg
shll
adc
sub
arpl
cs
icebp
cmc
clc
clc
lock
test
inc
adc
jmp
lret
pop
jnp
faddl
lock
js
push
sbb
pop
jns
jno
add
pop
adc
jb
jl
xor
ds
sahf
push
dec
lret
shlb
mov
push
dec
aam
rcrl
mov
pop
pop
adc
in
jp
jg
subl
adc
sbb
push
jecxz
inc
pop
adc
add
inc
pop
adc
js
inc
mov
cli
push
mov
lret
pop
pop
xor
inc
push
out
wbinvd
adc
leave
or
xchg
idiv
dec
jae
adc
push
mov
popl
xchg
dec
and
mov
mov
pop
pop
adc
repz
sub
xor
cmp
adc
pop
jecxz
pop
pop
adc
push
in
pop
pop
adc
in
pop
pop
adc
add
fidivrs
pop
push
xor
cmpsb
cmc
pop
cltd
repz
add
repnz
sub
push
and
dec
ljmp
jmp
or
pop
adc
cmp
adc
adc
jp
iret
jno
ljmp
pop
adc
subb
sbb
jg
sub
stos
cltd
cli
cmp
xor
out
push
es
mov
mov
js
jmp
mov
fwait
out
jecxz
jg
cmp
movsb
sbb
outsl
add
lods
sti
mulb
cmp
ficoml
sbb
int
rclb
push
adc
bound
or
adc
aas
adc
pop
lods
sti
notb
call
adc
xchg
pop
adc
mov
push
stos
push
xor
jbe
jg
push
movsl
or
adc
loope
and
aaa
sti
movsb
popf
mov
add
mov
shrb
push
movl
popf
mov
jae
adc
sub
int
mov
mov
out
add
adc
pop
adc
cld
adc
adc
cwtl
cwtl
cmp
sub
cmp
adc
xchg
add
cmp
pop
mov
or
test
lahf
sub
sub
dec
idivl
das
lcallw
scas
add
add
nop
and
mov
orb
jle
sub
ret
sbb
adc
out
hlt
xor
mov
push
adc
cmpsl
frstor
mov
push
sub
mov
jb
divl
add
mov
sub
fcoms
push
adc
cli
or
orl
cmp
pop
xor
add
add
jae
mov
loop
in
xchg
test
mov
dec
popf
sarl
and
mov
add
fcoms
push
adc
mov
imul
inc
icebp
out
stos
addl
adc
adc
pop
out
test
sbb
mov
adc
adc
sarb
mov
jg
and
jno
jae
into
cltd
ds
jmp
pop
mov
jb
jmp
cmp
popl
or
xor
sti
mov
mov
jo
add
into
jp
or
mov
jl
mov
cmpsl
jp
lcall
xorb
and
jb
stc
das
mov
scas
dec
mov
iret
scas
insl
lcall
sub
jo
cmpsl
inc
push
cmpsb
sub
adc
popf
mov
xrelease
pop
adc
in
mov
or
outsl
push
adc
addb
inc
or
and
mov
sahf
ds
std
push
outsl
pop
xor
aaa
shl
movsb
out
lock
pop
adc
and
pop
enter
inc
pop
adc
je
and
pop
jnp
lock
aas
inc
test
pop
aas
jo
mov
mov
mov
push
sbb
dec
mov
cwtl
lret
inc
jg
aam
inc
mov
mov
lock
popa
or
lea
clc
cltd
sub
das
mulb
jl
int3
ja
mov
cmp
push
es
push
push
xor
out
mov
lcall
jge
lret
cmp
inc
pop
adc
std
pop
cmp
cmp
out
neg
xor
adc
add
jecxz
jmp
out
dec
nop
push
adc
sbbl
fcmovu
mov
aam
pop
adc
jbe
pop
sbb
xchg
mov
mov
pop
adc
and
cmp
pop
faddl
inc
fidivl
stos
out
popa
repz
sti
in
stos
inc
loopne
pop
adc
int3
pop
adc
mov
jecxz
sti
lcall
adc
mov
push
push
scas
push
xlat
jno
push
cvttps2pi
lret
lret
dec
dec
rcrb
pusha
jp
xlat
outsl
xor
cli
sbb
mov
cmpl
pushf
pop
adc
mov
or
out
stos
and
popf
call
ja
call
outsl
push
pop
push
add
jmp
imulb
mov
push
arpl
dec
and
dec
fstpt
movsb
inc
add
fs
adc
adc
iret
inc
push
insb
sbb
and
js
dec
sub
jnp
pop
adc
add
push
adc
sbbb
lahf
addb
repnz
add
add
stos
dec
jl
pop
adc
jg
or
inc
sarb
addb
data16
pop
adc
enter
jne
fcmovb
js
addb
ja
popf
pop
adc
test
push
inc
addb
stos
jb
pop
adc
and
loop
sbb
fwait
addb
int
popf
pop
adc
mov
sbb
call
or
adc
xchg
xchg
addb
push
jl
pop
adc
test
and
mov
jbe
addb
or
sahf
dec
imul
inc
sbb
push
sub
icebp
mov
js
mov
lock
in
and
loop
mov
bound
dec
pop
cmp
cld
test
out
sti
jbe
repnz
fdivrs
sub
xor
std
lds
jne
stos
adc
inc
dec
jb
jg
mov
cmp
and
sub
adc
js
shlb
out
sbb
incb
dec
fcomip
in
fisttpl
mov
adcb
mov
add
push
adc
sub
aad
add
adc
or
or
and
mov
les
adc
sahf
pop
adc
outsb
and
pop
es
adc
adc
jmp
popf
pop
adc
sub
popf
pop
adc
test
jmp
std
and
nop
andl
pop
adc
sti
xor
lahf
mov
popf
pop
adc
fcoms
sahf
pop
adc
mov
add
jle
xor
or
in
add
xchg
push
ja
jecxz
mov
bound
lret
pop
ljmp
xor
orb
out
pop
adc
aad
adc
cmp
cld
adc
adc
lcall
sbb
mov
sti
xchg
les
out
mov
imul
roll
insl
loop
adc
int3
cmc
cs
adc
mov
jge
dec
pop
adc
pop
adc
mov
cltd
add
pop
call
cmp
fsubl
pop
aam
mov
ja
cmc
imul
cmp
out
dec
cs
inc
mov
mov
sbb
imul
pusha
mov
nop
ret
repnz
scas
lret
insb
shlb
loope
adcw
inc
push
or
cwtl
mov
adc
js
scas
jl
xchg
in
adc
adc
hlt
test
cltd
shl
jne
mov
shll
xchg
pop
adc
dec
aam
shl
rcll
dec
inc
scas
jnp
jns
inc
pop
add
push
pusha
push
pop
sbb
lret
adc
movsb
dec
lret
insb
jae
div
loopne
mov
leave
dec
add
clc
push
int
sbb
adc
out
icebp
add
adc
cwtl
movsl
dec
in
leave
fxch
iret
scas
cmpsl
fidivs
gs
pop
mov
dec
mov
inc
push
stos
pop
push
pop
pop
adc
inc
and
push
pop
push
adc
inc
or
ret
jne
std
mull
and
sarb
adc
mov
imul
loopne
inc
out
add
outsb
dec
and
adcb
or
jmp
dec
iret
sbb
pop
xchg
pop
add
xchg
push
test
mov
pop
push
incl
adc
adc
add
movsb
sub
das
out
pop
pop
adc
sbb
mov
pop
sbbl
and
mov
fwait
dec
int
add
jo
cmp
stos
repnz
xchg
jecxz
add
mov
addb
cmp
and
xchg
aas
lods
xchg
lods
fdiv
cwtl
xor
jg
jge
mov
test
inc
jge
out
sti
std
icebp
int
pop
mov
cmp
push
inc
addb
jp
add
add
pusha
pop
call
push
pop
pop
adc
int
mov
push
ja
add
jbe
test
aaa
es
inc
sbb
push
sub
mov
cmp
divl
fildl
add
sub
fcoms
push
adc
cli
or
orl
cmp
pop
sti
addb
scas
jb
mov
xchg
add
inc
cli
dec
cmpsl
xor
je
push
sub
cmp
mov
inc
jo
mov
and
test
ds
arpl
jmp
cmp
push
inc
addb
in
jl
roll
fisttpl
int
add
xor
lds
test
sahf
pop
adc
add
incb
out
add
push
adc
sbbb
mov
dec
adc
adc
and
cli
sbbb
dec
mov
sbb
sbb
cmp
xchg
add
jne
jbe
mov
in
xchg
into
popf
cmp
insb
out
pop
mov
add
mov
sahf
cmp
add
adc
cld
adc
adc
int
arpl
jbe
fadds
mov
add
ja
mov
lods
sbb
xchg
xchg
lret
es
lods
sbb
adc
xor
add
mov
je
mov
cmp
jo
mov
sub
lcall
daa
add
add
jnp
or
sbb
fwait
shlb
int
push
lret
mov
sub
je
mov
jmp
into
and
orl
jb
mov
leave
xor
in
out
xchg
mov
int
mov
out
mov
dec
nop
inc
nop
pop
mov
xor
or
pusha
lods
mov
stc
outsb
insb
sbb
jge
mov
cmp
addb
in
pop
inc
call
inc
or
je
loope
sti
out
iret
cmp
jl
mov
jg
cld
icebp
ljmp
cmp
adc
mov
cmp
fdivrl
jne
pop
femms
jnp
icebp
imul
mov
dec
pop
test
and
aam
lret
xchg
jecxz
repz
jecxz
imul
hlt
call
push
scas
fistl
jl
xchg
js
mov
dec
or
push
jmp
sbb
std
imul
enter
test
push
inc
ret
insl
inc
js
or
dec
xor
std
popa
mov
pop
mov
test
insb
dec
inc
div
addb
popf
pop
adc
movsl
dec
iret
mov
loopne
scas
xor
lds
xchg
dec
mov
testb
in
leave
or
fstl
cltd
in
movntps
cmc
push
mov
sahf
pop
adc
add
xor
mov
push
int3
xorb
pop
adc
fisubrl
dec
or
inc
cwtl
in
mov
pop
popa
jns
rcll
pop
adc
adc
push
popa
aad
add
aam
ret
xchg
outsb
pop
fnstcw
sbb
cmp
mov
and
outsb
xchg
push
fdivrl
dec
stos
sub
cmp
imul
dec
inc
add
outsb
or
or
pop
adc
or
pop
adc
pop
bound
sahf
pop
adc
out
mov
mov
jg
sahf
pop
adc
sbb
mov
jge
lock
aaa
out
dec
outsl
stc
jae
jns
mov
inc
push
imul
sarl
jg
sub
cmp
outsl
mov
and
adc
sahf
pop
jle
in
mov
add
jbe
push
imul
jne
mov
sub
inc
mov
jnp
jb
jge,pt
repz
add
in
sub
pop
mov
push
cmp
in
repnz
pop
pop
adc
add
nop
xor
lock
dec
push
pop
inc
cmpsl
dec
popf
push
or
imul
adc
jnp
mov
dec
sarb
sbb
sub
incl
lret
pop
adc
into
cld
adc
adc
or
dec
adc
je
loop
dec
popf
les
pop
pop
adc
ljmp
jmp
sub
scas
dec
push
sub
sbb
out
fistpll
add
add
adc
adc
or
xor
add
adc
ja
out
jg
pop
ret
outsl
add
jle
mov
mov
adc
push
adc
int
jo
xor
push
adc
sti
imulb
mov
cmp
xor
cmp
inc
hlt
imull
cli
jl
xor
xor
inc
xchg
inc
pop
pop
adc
adc
lock
fidivrs
std
ja
jb
sbb
jnp
outsb
xorl
adc
bound
adc
jae
lss
cmp
sti
jecxz
jo
pop
adc
scas
aaa
xor
or
xchg
or
or
jmp
pop
adc
jbe
pop
and
xor
xlat
mov
cmp
sbb
imul
xor
jb
add
push
adc
mov
nop
mov
fstp
inc
jle
mov
arpl
push
pop
pop
adc
cs
pop
pop
adc
adc
mov
lcall
jnp
inc
cwtl
and
stos
ds
jl,pn
adc
repnz
fwait
sbb
scas
xor
adc
adc
pushf
inc
out
icebp
stc
xchg
push
add
pop
adc
leave
sbb
arpl
fsubl
in
int
aas
std
call
lods
loop
push
push
xor
cld
call
out
xchg
sub
out
rclb
push
adc
push
adc
add
js
push
cmpsl
inc
cmp
jl
xchg
cltd
jo
pop
adc
lcall
les
mov
call
push
shl
imul
xchg
fsts
cmp
ja
fsubrs
lock
lret
cmp
pop
adc
pop
pop
pop
adc
out
sub
xchg
pop
adc
pop
pop
pop
adc
lea
adc
adc
shr
adc
push
jl
pushf
call
sbbb
sahf
adc
aaa
mov
in
push
xor
push
adc
inc
fmul
subb
mov
fcmovnu
fiaddl
dec
inc
pop
in
ds
pop
pop
adc
aas
aad
rcrb
fldl
test
push
adc
push
pop
pop
adc
out
and
xor
push
ret
pop
or
jb
push
testb
pop
cs
pop
pop
adc
sub
cmp
xchg
push
fdivl
cmpsb
xchg
addb
shl
mov
xchg
incl
shlb
movsl
test
and
pop
les
mov
mov
loope
enter
jg
das
sahf
lcall
jno
sub
adc
ljmp
xor
cmpsl
daa
loopne
adc
mov
cmpsb
push
loope
xchg
lods
pop
inc
nop
rorl
nop
mov
xorb
or
loopne
sbb
aaa
jno
sbb
cmp
cmp
rcrb
mov
in
scas
ljmp
pop
push
adc
pushf
pop
pop
adc
sub
and
mov
add
xchg
fsubrp
hlt
jbe
xor
sbb
jge
adc
roll
fdivrl
jp
add
popw
ds
xchg
es
mov
cmp
sub
pop
jp
jg
inc
stc
sti
notb
pop
adc
sbb
push
repnz
push
sbbb
mov
xchg
or
add
jge
mov
xlat
xchg
addb
and
pop
mov
dec
popf
mov
scas
and
inc
pushf
pop
pop
adc
mov
jmp
inc
hlt
jle
xor
and
les
fs
push
and
jo
sahf
adc
xchg
ljmp
mov
call
jg
and
ja
jp
add
add
nop
lret
fcoms
push
adc
pop
inc
jb
cmp
sahf
cmp
xchg
sarl
repz
call
cmp
mov
stc
les
popf
cmp
mov
add
add
test
xchg
xor
xchg
sbb
arpl
xor
dec
push
inc
mov
arpl
addb
xchg
mulb
pop
or
fdivrl
pusha
mov
sub
mov
push
jne
mov
push
add
adc
orl
adc
scas
dec
pop
jp
jmp
mov
call
cmpsb
in
scas
in
push
rorb
mov
adc
pop
adc
push
adc
into
sbbb
jnp
aam
push
ret
cmp
mov
pop
adc
mov
daa
and
pop
push
pop
push
cmpsb
inc
in
fwait
mov
push
iret
je
pop
and
and
push
out
mov
dec
xchg
adc
cld
adc
adc
mov
addl
mov
mov
int
loope
je
dec
mov
jmp
pushl
add
jg
test
push
mov
jg
loope
ret
cmp
enter
adc
jne
fmull
or
mov
shll
insl
mov
mov
das
or
imul
or
outsl
xor
movsb
mov
and
add
xor
cltd
test
adc
push
push
bound
movsb
loopne
pop
mov
adc
stc
mov
out
xchg
idiv
add
rorb
cmp
adc
add
push
adc
mov
shrl
add
pop
pop
adc
add
push
adc
jmp
sbbb
push
mov
loope
lods
out
jmp
or
mov
sti
loop
popf
pop
adc
std
rcr
mov
fisttps
fcmovu
stos
daa
jg
imul
jne
xor
and
dec
xchg
mov
lret
lcall
iret
insl
test
and
xlat
repz
xchg
lret
cmp
loop
sti
mov
mov
or
inc
aas
dec
sub
adc
lcall
fmuls
lods
testl
adc
mov
test
popf
loope
arpl
add
outsb
xchg
shl
jmp
movsb
test
andl
lahf
call
push
xchg
pop
cmp
aaa
mov
fwait
mov
ss
jo
test
mov
mov
add
add
pop
adc
and
sbb
hlt
loop
cmp
inc
scas
sbb
ud2
sbb
lret
pop
adc
pop
adc
call
add
xor
lret
dec
je
fdivrl
lods
in
call
loope
mov
in
cmpsb
jmp
int
pop
add
jl
inc
pop
adc
in
inc
pop
adc
xor
adc
fdivrs
or
or
pop
adc
filds
and
adc
push
jne
stos
pop
sub
lret
lods
lds
add
adc
mov
orl
or
repnz
cmp
int3
aas
jae
xchg
or
and
les
push
adc
push
jg
mov
add
add
and
nop
outsb
sub
out
add
jo
push
arpl
mov
das
jb
das
pop
ficompl
add
jg
stc
lods
and
fsubr
and
scas
int
idivl
lahf
hlt
imul
lret
push
mov
mov
movsb
add
or
jae
cli
call
mov
push
cmp
mov
aaa
enter
pop
repz
cwtl
jae
in
fidivl
sbb
mov
outsl
lea
adc
xchg
mov
mov
loop
and
hlt
adc
add
mov
clc
mov
add
js
add
jecxz
xchg
or
push
pushf
mov
adc
fmull
insb
jl
adc
outsl
mov
mov
sti
adc
ljmp
sub
jg
das
jl
ljmp
jnp
jmp
push
push
lret
out
lret
pop
push
shll
jmp
fildll
ret
jb
inc
jne
pop
call
fstl
pop
push
es
pop
fists
out
mov
cmpl
cmp
hlt
xchg
test
cld
test
mov
jl
mov
jl
das
or
addr16
mov
je
sub
enter
scas
cmp
xor
test
cli
add
mov
mov
cltd
mov
adc
adc
push
es
xchg
lret
movsb
icebp
xchg
shll
std
xor
and
lret
test
lods
xchg
pusha
jns
xchg
mov
mov
mov
idivl
fnstenv
insl
into
aas
jl,pn
sub
inc
mov
cli
jno
incb
sahf
push
push
push
dec
xchg
pop
stos
jle
mov
sti
decl
cli
lods
push
dec
shl
dec
adc
jp
jecxz
adc
out
adc
sub
jo
pop
adc
dec
popf
lcall
outsb
std
mov
lea
mov
cmp
rcrl
and
add
sub
test
sub
xchg
mov
cld
mov
sti
lret
xor
xchg
fsts
mov
pop
ds
out
es
push
das
rclb
push
adc
mov
pop
or
adc
sbb
pop
movsl
and
testl
xchg
pop
adc
mov
iret
aam
pop
iret
dec
sub
adc
push
ljmp
mov
js
cmc
pusha
push
repz
or
xor
push
into
sub
mov
cmpsl
mov
adc
loopne
push
movsb
test
ljmp
sub
pop
je
jg
and
push
shlb
adc
dec
imul
je
add
jp
fcmovb
out
xor
je
adc
addb
xor
sti
jg
addr16
sbb
push
lret
sbb
insb
ljmp
mov
mov
in
and
mov
adc
ret
ja
mov
clc
adc
and
gs
mov
jle
cmp
lahf
out
pop
cmp
imul
mov
ljmp
or
and
stos
sub
sbb
mov
ret
pushf
mov
mov
ljmp
les
ss
lock
and
adcb
sbb
jbe
addr16
xchg
test
xor
fnstsw
jg
mov
and
imul
out
xlat
mov
mov
in
lret
loopne
push
sub
mov
pop
sub
pop
int
enter
xchg
ret
jb
cmpsb
or
mov
mov
popf
cmp
bound
ja
fists
iret
cld
pushl
xchg
or
jg
cmp
add
icebp
and
mov
mov
addb
adc
out
aas
push
cmp
lds
adc
adc
pop
sbb
inc
repnz
cmp
std
sti
idivb
outsl
ss
mov
ds
das
mov
adc
js
add
mov
inc
xchg
and
pushf
push
mov
out
popf
pop
adc
adc
cmp
add
movsb
bound
adc
shll
push
in
xor
jbe
sar
pop
pop
adc
jbe
cmp
leave
mov
add
mov
pop
mov
mov
mov
or
jo
mov
pop
cli
roll
adc
lahf
push
and
inc
sbb
daa
jl
pop
cs
cwtl
sub
jp
loop
pop
cmp
aam
push
test
pop
adc
adc
lcall
add
pushf
inc
arpl
sbb
jnp
mov
lcall
mov
lods
gs
adc
adc
xor
and
pop
pop
adc
mov
push
adc
ljmp
divb
loope
dec
shrb
js
rorb
xchg
push
jae
adc
gs
mov
xchg
pop
dec
xchg
mov
repz
daa
loop
xor
adc
inc
insb
lret
xor
hlt
insl
lret
push
fistl
lds
dec
pusha
loope
jecxz
pushf
jecxz
push
cli
cmovp
adcb
lods
pop
ds
ljmp
inc
inc
shl
mov
or
aam
lock
push
sbb
cmp
jg
sbbl
cmp
mov
xor
das
stc
pop
adc
adc
hlt
mov
jmpw
mov
imul
jge
loope
inc
xchg
xor
sub
ficompl
arpl
in
movsl
shr
dec
movsl
push
hlt
xlat
sbb
or
mov
pop
stos
sbb
gs
clc
popf
pop
adc
push
fldenv
fdivs
adc
adc
xor
sub
sub
popf
pop
adc
push
call
dec
jns
loopne
pop
adc
dec
inc
push
jp
add
addr16
jns
or
in
xor
jb
out
adc
test
adc
imul
xor
jae
call
rcl
jnp
mov
add
pop
push
adc
cld
adc
adc
rcl
and
jnp
lahf
cmc
shll
outsl
xor
sbb
adc
pop
lret
and
inc
inc
fdivrp
xchg
pop
adc
adc
std
movsb
mov
icebp
and
sti
cmp
inc
inc
out
xchg
stos
test
mov
enter
imul
xchg
repnz
cld
lods
adc
rcr
ss
cmp
mov
push
push
hlt
lahf
and
iret
jbe
inc
or
sti
fidivrs
addb
sub
adc
jl
fidivs
dec
sbb
cs
in
xchg
cmp
pushf
mov
jnp
pop
sub
ljmp
xchg
and
loop
dec
xchg
mov
out
mov
adc
adc
adc
cmp
xor
sub
sbb
lds
push
pop
mov
sbb
out
add
std
jo
outsb
sbb
aas
xor
xor
xor
mov
les
pop
incb
addb
mov
cmp
xor
mov
push
sub
test
pop
adc
je
ja
dec
add
and
fisubl
xchg
inc
sub
mov
mov
jl
push
cmp
mov
gs
nop
and
mov
divb
ljmp
out
fucomip
hlt
xor
popl
add
popf
push
xor
sub
mov
mov
fcoms
push
adc
mov
xchg
pusha
je
cmp
adc
nop
mov
xor
jmp
jo
enter
add
imul
xor
pop
adc
xor
fdivrs
cld
adc
adc
xchg
mov
mov
adc
mov
jo
xlat
pop
sbb
inc
test
or
in
ss
jbe
mov
inc
or
dec
sarb
hlt
sub
ret
add
or
add
jnp
jmp
push
aam
jb
pop
push
xor
cwtl
jb
aaa
cltd
adc
mov
sub
fcoms
push
adc
push
divb
repz
mov
pushf
or
aaa
es
inc
inc
bnd
cmpb
xor
xor
fdivrl
adcb
push
ja
cmp
jle
jne
fidivrs
and
dec
adc
inc
cmpl
add
pop
aas
mov
cmp
or
adc
dec
js
ret
adc
dec
pop
pop
xadd
cmp
mov
inc
sub
test
out
xor
das
loope
aaa
jbe
loope
jecxz
mov
enter
comiss
xor
cld
icebp
shll
cmp
and
pop
outsb
aam
pushf
mov
and
adc
xor
mov
dec
inc
jae
jg
or
jmp
das
mov
dec
pop
insl
stc
fdivrs
pop
xchg
insb
inc
pop
push
adc
js
repz
cmc
data16
mov
xchg
popf
or
inc
dec
out
inc
popa
xor
imul
sahf
xchg
cmpsb
in
dec
or
out
loope
out
xchg
bound
loope
insl
cltd
xchg
mov
out
icebp
inc
xchg
movsb
jo
sub
insl
jmp
call
push
andl
inc
jb
test
push
scas
insb
or
lods
sub
mov
mov
adc
out
or
imul
pop
dec
dec
jecxz
push
pop
jbe
insb
and
cmpsb
xor
nop
cmpl
adc
add
mov
mov
mov
lahf
jg
js
iret
jmp
lods
das
das
shrb
sahf
pop
adc
adc
push
inc
outsb
cmp
pop
out
cli
sbb
sti
or
and
push
push
xor
test
and
push
clc
and
inc
clc
inc
xor
add
lret
ljmp
shll
loop
testb
pop
sbb
push
adc
or
sub
jnp
jg
into
popf
adc
jmp
les
xchg
xchg
call
dec
jp
adc
adc
dec
popa
push
cmpsb
stos
lds
or
pop
xor
adc
call
xor
mov
push
out
popf
push
mov
push
sub
cmp
fistpll
pop
adc
out
add
push
adc
inc
and
lcall
int
adc
pushf
pop
adc
outsb
outsb
sbb
cmp
sbb
and
xlat
sbb
inc
jo
sbb
jo
lret
jae
pop
jne
repz
adc
mov
sub
sbb
les
ljmp
pushf
adc
ret
lea
cmp
push
sub
sbb
inc
adc
jae
add
adc
jle
and
or
inc
fcmovu
and
sahf
daa
cmpsb
daa
icebp
mov
mov
sub
mov
mov
adc
adc
xchg
mov
hlt
pop
push
adc
mov
adc
inc
xchg
outsb
xor
add
push
cli
out
cmp
pop
push
adc
push
les
add
inc
pop
adc
adc
jo
arpl
arpl
mov
sbb
pop
adc
ja
adc
mov
dec
loopne
xchg
test
sbb
fcmovb
bound
adc
pusha
mov
mov
add
and
ds
mul
lret
jo
aas
insl
sub
popf
pop
adc
cld
adc
adc
fistpll
pop
mov
sti
mov
in
add
pop
inc
mov
jle
das
sbb
adc
mov
push
cmp
jae
stc
cmp
mov
cmp
add
pop
adc
sbb
fdivs
sbb
pushw
sub
mov
in
push
jne
outsb
mov
lahf
mov
adc
cld
adc
adc
pop
mov
mov
or
push
iret
idiv
cmp
mov
jne
shll
dec
cmpsl
mov
repz
push
scas
lds
movsl
cmpxchg
loop
add
mov
mov
gs
inc
and
mov
test
pop
jae
add
aam
pusha
pop
lcall
mov
xor
imul
mov
push
lods
cli
sbb
gs
cmp
mov
jmp
das
sub
add
xchg
mov
aad
inc
inc
lods
sti
and
aam
inc
mull
mov
repnz
test
imul
int
in
mov
adc
lret
xchg
lods
dec
or
les
dec
out
dec
sub
mov
jo
push
rorb
sub
push
scas
jns
out
mov
push
jge
in
data16
in
into
mov
mov
in
rcrl
mov
lcall
cltd
fsubl
sbb
sub
cmpsb
fldt
imul
movsb
and
sbb
pop
dec
cmp
xor
outsl
adcb
jo
fwait
xor
iret
test
xchg
mov
dec
pop
imul
cli
cmpl
jne
mov
xchg
push
into
into
and
andb
pop
xchg
fldcw
mov
mov
ja
shrb
fwait
rcl
fistpl
negb
imull
mov
pop
or
test
xor
xchg
fistpl
cmp
xchg
jl
out
fstl
inc
lods
ret
lea
xor
fnstenv
mov
out
xchg
cmpsl
into
test
sub
ja,pt
push
fnstenv
xchg
out
sbb
mov
repz
scas
adc
and
jmp
in
xchg
inc
fsubrs
jmp
cmp
adc
jl
adc
scas
xchg
cld
add
in
lcall
and
sub
lds
dec
adc
inc
hlt
divl
ja
movsl
lods
mov
jne
fiadds
jecxz
adc
dec
ljmp
adc
orb
jo
lods
mov
int3
xor
pushl
mov
sti
cs
testl
pop
jg
sub
sub
xor
mov
call
dec
or
mov
scas
je
cmp
dec
nop
and
dec
jle
sbb
jne
sub
add
rol
sub
inc
repnz
pop
paddd
add
mov
clc
daa
xchg
outsb
ret
popf
cmp
gs
popf
orl
adc
scas
inc
xchg
jecxz
fistpl
in
jns
jo
pop
adc
mov
data16
cmp
jbe
emms
inc
aaa
sbb
sbb
scas
je
jmp
mov
out
fisttps
mov
mov
ds
mov
rolb
and
jg
mov
bnd
repz
or
call
cmp
adc
addb
jbe
scas
push
movsl
jmp
call
hlt
call
movsl
shll
popa
fnstsw
sti
jno
pop
lock
and
call
les
add
adc
mov
icebp
cmp
jp
repz
mov
mov
and
mov
test
jecxz
call
xor
lods
sub
pop
add
fs
cwtl
stc
pop
lea
nop
roll
enter
xchg
lret
cmpsb
or
adc
mov
push
fstl
iret
add
inc
inc
inc
sar
xchg
pop
adc
cmpb
divb
push
mov
or
adc
push
mov
xchg
fdivrp
out
mov
mov
xor
shl
out
popf
cmp
cmp
cltd
add
pop
jecxz
pop
push
hlt
mov
ss
inc
xor
ret
imul
pushl
ljmp
ds
pop
jp,pt
xlat
sbb
nop
sbb
repz
lock
es
pop
pop
adc
insl
sub
andl
cmpl
ds
pop
sbb
clc
adc
inc
mov
aam
addr16
pop
ret
push
sub
cmp
call
adcb
out
pmaxsw
fdivl
das
ret
out
xchg
pop
mov
shll
push
inc
push
mov
loope
jbe
loope
jo
adc
xchg
inc
pop
push
sbb
pop
pop
adc
dec
ds
dec
jp
sbb
xor
xchg
pop
adc
enter
jo
sub
push
je
fisttpl
xchg
inc
push
std
out
lcall
rcll
cmp
and
imul
addr16
mov
pop
pop
adc
dec
dec
jl
push
adc
mov
aam
icebp
cmp
fists
jl
or
sub
push
and
mov
xlat
push
mov
inc
test
add
inc
testl
aaa
pop
fcmovnb
xchg
xor
xchg
outsb
lock
and
out
cmp
orb
mov
dec
es
jp
or
dec
cmc
fisubs
jmp
test
xchg
daa
and
sub
cmp
push
addb
xor
sbb
inc
jae
dec
or
int3
xor
ljmp
cs
add
enter
mov
loop
push
int
pop
rcl
cmpsl
es
cmp
sbb
stos
adc
std
sti
push
push
sti
mov
push
cmp
fs
jae
les
bound
xchg
add
test
cmp
sbb
and
outsb
fidivrs
arpl
push
ja
les
adc
mov
mov
call
sbb
repz
xchg
std
repnz
out
and
fwait
adc
cmp
movsl
and
scas
repz
jb
fbld
call
icebp
jg
adc
cmp
sti
imul
jbe
outsl
fiadds
adc
push
mov
adc
xor
jbe
push
adc
add
nop
push
mov
pushf
pop
adc
cmp
jmp
push
addb
add
std
std
mov
outsl
and
popf
sbb
xor
dec
ljmp
stos
or
or
jb
sub
cltd
jecxz
sahf
shlb
sub
dec
lock
mov
add
push
adc
adc
fs
lds
fs
xchg
mov
les
add
call
inc
adc
xchg
sahf
pop
sub
mov
and
repz
imul
adc
push
jno
mov
lret
push
movsl
testb
pop
movsb
and
mov
sti
cli
je
lcall
rclb
push
adc
cmpl
pop
pop
adc
mov
lock
sbb
aaa
pop
cmp
adc
cmp
aad
and
add
repnz
dec
mov
cmpsl
or
push
adc
jbe
dec
notb
xchg
fldt
data16
fnstcw
test
aas
mov
mov
sub
stos
jg
les
cmp
ss
stos
out
test
push
pop
push
adc
inc
dec
push
or
push
pusha
nop
dec
pop
jo
icebp
std
push
insl
imul
test
cmp
inc
addl
lret
adc
or
mov
xchg
mov
loopne
ss
pop
push
adc
inc
adc
cmp
or
mov
ret
mov
enter
and
popf
inc
jg
in
fcoms
push
adc
cmp
pop
cmp
mov
adc
xchg
xor
inc
sbb
nop
dec
jo
pushf
pop
adc
insb
jmp
test
in
stc
das
mov
sahf
pop
adc
add
push
adc
mov
inc
aas
rol
pop
imul
sbb
lods
ss
pop
clc
cmp
arpl
pop
pop
stc
mov
cmpsl
jle
sub
jnp
in
jg
sbb
sbb
sub
ja
dec
push
mov
cmp
pushf
pop
adc
push
jo
jnp
pop
xorl
data16
mov
push
mov
dec
scas
inc
pop
clc
popf
pop
adc
adc
leave
rcrl
mov
mov
mov
add
pop
xchg
stc
in
fidivl
sarb
cmp
ret
jl
and
testb
add
jp
inc
int3
xchg
inc
pop
outsl
mov
divb
mov
aas
push
mov
sbb
xchg
and
popa
ds
iret
out
pushf
cmpsl
jno
or
mov
xor
sbb
mov
mov
aad
cmpsl
inc
icebp
push
push
jo
pop
test
mov
add
sarb
mov
call
lods
mov
mov
jae
push
hlt
pop
push
adc
inc
push
push
jnp
push
repz
pop
push
adc
fdivl
sbb
mov
pop
push
adc
out
inc
adcb
pusha
inc
pop
adc
jbe
inc
pop
adc
inc
stos
dec
and
nop
lss
popf
pop
adc
push
mov
xchg
xchg
stos
xor
stc
aad
pop
mov
jle
jecxz
movsl
ret
jl
cmpsb
jo
xor
pop
cmp
xor
pushf
flds
popf
pop
adc
adc
add
sub
push
jbe
mov
outsl
movsl
mov
xor
lods
add
loopne
scas
mov
pop
adc
sub
lahf
push
sub
dec
jne
jp
and
bnd
add
push
xor
or
and
adc
pop
adc
cld
adc
adc
mov
les
scas
push
add
jae
sbbl
cmpl
repz
adc
xor
mov
pop
pop
adc
or
lock
sbb
jl
inc
pop
adc
xchg
fistpl
lods
movsl
inc
push
adc
add
or
xor
std
imul
cmpsl
dec
adc
das
ja
lock
add
clc
mulb
sti
test
inc
sub
shl
sahf
cmp
les
cmpsl
mov
mov
clc
call
and
mov
adc
je
lret
popf
lcall
mov
jge
mov
mov
out
je
xchg
fdivrl
das
pop
lods
mov
in
pop
pop
adc
lods
mov
pop
pop
adc
and
cwtl
enter
ljmp
call
xlat
mov
cli
adc
xor
ficoml
add
sub
jecxz
je
jg
loope
cmc
lret
mov
shr
pop
pop
adc
fidivl
jl
shrl
sbb
jg
in
ja
jp
aas
mov
xor
xchg
dec
push
gs
mov
and
mov
push
mov
jl
add
pop
pop
mov
cltd
jle
mov
add
sub
je
dec
push
gs
mov
dec
addr16
sub
aaa
subl
pop
pop
adc
jle
sahf
fs
mov
pop
aas
cli
dec
sub
rcrl
imul
pop
adc
jmp
clc
std
icebp
ljmp
push
in
pop
pop
adc
adc
dec
in
inc
xchg
hlt
jne
std
jno
not
mov
lock
call
out
xchg
fbstp
push
cmp
lock
loopne
mov
sub
push
adc
mov
into
in
jl
jmp
or
add
ja
ret
rol
push
and
jecxz
adc
jl
sahf
pop
adc
cld
adc
adc
out
jns
add
jo
cltd
jmp
ljmp
xchg
shl
jecxz
pop
pop
adc
add
lea
sub
mov
rcll
inc
push
push
fcoms
testb
xchg
adc
sbb
push
adc
adc
sub
fldcw
and
pusha
adc
adc
push
adc
or
mov
lea
adc
decb
jp
adc
adc
daa
imul
cltd
mov
add
xchg
push
pusha
adc
adc
and
pop
adc
dec
push
pop
sub
fs
mov
inc
pop
sub
push
ror
sarl
pusha
adc
adc
xor
xor
adc
pop
or
test
add
adc
pop
push
cmpsb
jno
dec
repnz
push
cmp
cmp
mov
mov
pop
movsb
and
fld
pop
mov
sub
sbb
popa
jno
mov
fs
cmp
or
lahf
clc
cmp
jnp
insl
mov
negl
jo
inc
movsl
loop
dec
insl
push
daa
into
sahf
jg
in
and
out
idiv
pop
adc
add
pop
xor
push
stc
lods
and
fsubr
sbb
shll
add
inc
jb,pn
das
add
add
adc
adc
jbe
and
push
ja
les
out
fistpll
leave
std
std
mov
xchg
and
or
mov
mov
call
mov
call
repz
cmp
loop
pushf
dec
outsl
adc
xchg
add
jb
inc
std
sti
testb
mov
xor
dec
adc
mov
inc
jecxz
add
clc
in
stos
test
inc
jg
out
dec
and
lahf
push
sub
cmp
adc
ss
add
add
fidivrl
lds
mov
shr
rorb
aaa
adc
add
jb
inc
xor
mov
sbb
adc
mov
popw
push
iret
addl
push
add
mov
inc
xchg
gs
pop
lds
xor
aas
scas
cmp
sbb
imul
dec
cmp
bound
subb
add
test
inc
jp
push
cmp
xchg
mov
sbb
subl
scas
adc
lods
pslld
nop
mov
ja
inc
out
fldl
idivl
adc
and
mov
push
aad
adc
and
cltd
aas
jae
xchg
mov
subb
adc
adc
pop
xchg
push
and
adc
outsl
sbb
mov
std
call
xchg
xor
sub
push
cmp
shll
pop
aad
adc
sub
sbb
add
cmp
out
dec
flds
xchg
inc
repz
pusha
mov
int
mov
les
add
push
adc
data16
ss
sahf
xchg
xor
in
xor
leave
testl
std
jl
loope
jle
pusha
loope
cld
les
pushf
pop
adc
jl
les
es
pop
push
mov
ret
and
pop
js
xchg
stos
jne
xchg
or
rcrb
aas
insl
mov
mov
das
fimull
pop
sbb
mov
aas
pop
mov
add
or
shrl
xchg
sub
sbbl
jg
das
imul
mov
shrl
sub
mov
sub
or
or
cld
add
int3
orb
stos
push
xchg
outsb
test
leave
mov
repz
out
xlat
mov
les
cld
adc
adc
rolb
pop
adc
or
dec
jmp
mov
mov
or
dec
call
jge
xchg
stc
add
shl
and
cmp
popf
inc
and
and
out
test
pushf
pop
adc
pop
ret
test
and
pusha
pushf
inc
pop
adc
mov
xor
movsb
cmp
mov
imul
clc
movsb
push
rcll
add
jg
jle
xor
pop
push
or
and
push
adc
inc
sbb
mov
cmp
imul
xchg
fs
pop
adc
jge
sub
xlat
addb
fwait
sti
pop
ret
fs
lret
and
inc
inc
mov
cs
popa
add
jne
imul
xor
call
cmp
fsub
cltd
mov
lret
cmc
hlt
imul
or
inc
pop
adc
adc
adc
cmpsb
fadds
sbbl
mov
pop
mov
addl
inc
pop
adc
jae
test
jl
loopne
pop
adc
mov
mov
add
jbe
sahf
sub
jmp
into
popf
mov
add
lret
mov
xchg
pop
adc
sti
mulb
pop
jno
inc
xchg
cmpsb
xor
xor
jo
notb
xchg
xor
pop
adc
and
jne
cmpsb
jmp
lahf
adc
call
mov
std
adc
sub
outsl
fidivrs
aaa
add
ljmp
repz
jbe
jnp
xlat
in
dec
add
push
insl
adc
pop
bound
rolb
pop
adc
dec
inc
push
add
xchg
pop
imul
xchg
mov
in
call
cmp
fists
jns
std
ud1
fcmovnu
nop
and
bound
add
push
adc
sbbb
xchg
addb
jo
pop
push
and
sarl
adc
dec
sub
vmovntps
stos
lcall
xor
in
and
or
pop
adc
dec
dec
lds
add
adc
or
es
xor
inc
test
pusha
mov
adc
and
clc
sub
push
add
jmp
out
orb
add
fstl
sub
addb
pusha
adc
add
jnp
or
sbb
fistpll
cmp
jle
daa
or
adc
ljmp
and
ja
lea
fs
xchg
mov
push
xchg
fists
push
fstl
jne
push
dec
add
testl
add
adc
lods
push
xchg
xor
dec
sbb
cwtl
pop
pop
jo
sbb
lock
and
data16
inc
out
sub
mov
rolb
or
sahf
loop
loop
sbb
aaa
ret
mov
pop
pop
add
pop
xchg
es
mov
shll
fcoms
push
adc
inc
jbe
xor
jae
clc
jae
loope
aas
aas
cmpsl
sub
les
ds
push
stos
insl
lret
or
pop
mov
pop
pop
adc
mov
in
stc
add
std
shlb
test
scas
shrl
sahf
mov
mov
nop
xchg
xchg
mov
mov
cmp
adc
adc
mov
imul
sub
adc
adc
xchg
dec
sbb
adcb
das
lret
adcl
aam
popa
jo
pop
adc
cwtl
test
mov
andb
and
adc
adc
dec
jge
orl
int3
scas
imul
adc
adc
mov
call
inc
adc
into
loopne,pn
mov
push
mov
pop
push
arpl
cmc
mov
pop
push
push
and
dec
leave
xor
push
shrb
xlat
test
test
pop
xor
lret
rcrb
xchg
adc
push
adc
cmp
push
lods
jecxz
jmp
adc
mov
adc
cs
imul
pop
pop
adc
sbb
mov
shr
aas
ds
scas
das
jl
rolb
mov
arpl
and
aad
jbe
mov
mov
scas
jbe
mov
inc
dec
movsb
inc
addb
sub
movsl
test
push
push
mov
cmp
mov
aad
sub
adc
mov
in
jnp
loop
cmpsl
sbb
cmp
add
stos
stc
scas
mov
pop
adc
int
je
fldenv
adc
ja
loop
jg
jl
pop
adc
js
pop
adc
sub
outsb
jbe
mov
jno
add
push
adc
adc
push
scas
jbe
dec
xor
mov
xchg
push
adc
adc
push
mov
push
adc
bound
mov
inc
adc
aaa
fistpll
ss
call
daa
out
fists
jns
std
mov
in
push
xchg
jmp
dec
jnp
pop
pop
adc
cld
sub
outsl
fidivrs
pusha
inc
pop
adc
neg
popf
pop
adc
xchg
sub
add
lods
add
in
rclb
push
adc
adc
scas
nop
shrl
and
add
add
aas
and
out
int3
mov
mov
decb
push
addb
pop
gs
add
jne
dec
nop
pop
js
movsl
pop
fcompl
repz
mov
and
xorb
mov
fsubrp
pop
pop
adc
mov
mov
pop
cmpsl
dec
popf
pop
daa
out
sub
adc
inc
into
stc
idivl
mov
sub
cli
and
mov
ss
cmp
movsb
loopne
aad
push
mov
mov
xchg
inc
dec
adc
add
push
adc
sahf
pop
adc
mov
inc
sbb
pop
adc
sbb
or
testl
adc
cld
adc
adc
fwait
addl
pop
adc
mov
mov
icebp
xor
xchg
mov
adc
cld
adc
adc
push
imulb
pop
adc
adc
popf
pop
adc
and
sbb
repnz
push
or
popf
pop
adc
rcr
lahf
push
mov
lods
gs
push
mov
adc
adc
mov
adc
je
repz
xor
fsubrs
jo
jno
out
jp
push
fidivl
loope
movsb
test
sbb
jl
leave
clc
pop
add
mov
push
call
stc
arpl
dec
pop
adc
repz
or
push
imul
cs
add
mov
fdivrl
or
dec
and
and
pop
sbb
mov
push
adc
push
cmp
insl
lods
jl
aas
mov
loope
xchg
dec
inc
adc
das
sbb
lods
idivb
lret
mov
mov
mov
outsl
or
ret
insb
push
adc
ljmp
xchg
test
and
pop
pop
adc
sbb
mov
dec
out
adc
mov
lods
pop
roll
pop
pop
adc
push
nop
test
mov
int3
xchg
adc
or
jo
leave
add
and
push
dec
add
xor
adc
adc
pop
lods
std
sbb
xsaveopt
or
adc
or
push
lea
and
mov
pop
or
int3
and
in
pop
pop
adc
jmp
add
xchg
loope
into
or
in
fwait
mov
jmp
mov
hlt
repnz
pushf
pop
adc
push
pusha
add
cmp
and
popf
dec
rcl
and
sub
sbb
sbb
lods
xchg
ret
add
out
adc
cmpsl
nop
mov
mov
pop
adc
adc
adc
sbb
in
inc
pop
adc
or
pop
adc
gs
pop
mov
mov
mov
testb
dec
fxtract
mov
mov
jnp
dec
daa
push
mov
cmc
and
cmp
cmpsb
pop
stc
stos
std
add
push
test
movsl
addr16
bound
movsl
les
jecxz
mov
xor
push
xor
addr16
popf
cmp
cmpsl
dec
movsl
data16
add
call
jnp
and
nop
push
add
sbb
jne
jmp
adc
adc
add
bound
add
xchg
and
test
psrad
lds
push
jle
sub
jb
sub
add
hlt
jbe
and
push
fbstp
pop
ret
addb
scas
jb
in
or
mov
out
cmp
cmp
mov
xchg
cld
jb
pop
pop
adc
idivl
popa
repz
adc
arpl
dec
inc
cmpb
add
jmp
push
jp
psubb
sub
mov
mov
inc
xor
adcb
push
add
shrl
push
pop
push
fs
arpl
push
sbb
adc
add
adc
push
jb
mov
out
je
adc
sub
call
lods
jae
in
add
movsb
push
fs
pop
adc
pop
sbb
cmc
and
pusha
and
adc
je
xchg
and
add
cwtl
popf
or
pop
adc
lcall
adc
lock
pop
adc
inc
adc
adc
mov
add
or
sbb
call
xchg
imul
cmpsl
jg
arpl
mov
pop
adc
scas
fwait
and
pop
inc
mov
and
mov
scas
arpl
dec
and
aaa
aaa
or
data16
inc
pop
adc
mov
push
cmp
dec
push
adc
inc
loopne
pop
adc
jo
pop
mov
and
pushf
pop
adc
sub
jns
outsb
sar
add
pop
add
out
inc
jbe
pushf
pop
adc
js
insb
pop
mov
xchg
xor
push
push
jno
cltd
xor
pop
loopne
lcall
gs
xorb
adc
hlt
stc
or
mov
call
call
ret
or
ja
jl
lock
mov
call
pop
adc
dec
aas
iret
xchg
or
testl
insl
mov
je
sub
cmp
and
push
xor
pushf
pop
adc
call
jp
mov
or
call
in
inc
in
outsl
pop
mov
cmc
les
jnp
cmp
sahf
pop
adc
cmp
adc
adc
sbbb
fwait
addb
xlat
xchg
lods
icebp
div
pop
stos
jl
pop
adc
icebp
jge
fcmovu
push
xor
add
iret
mov
movsl
dec
int
adc
adc
jb
jl
pop
adc
mov
push
fcomps
sbb
out
mov
fisubrl
mov
popf
pop
adc
inc
test
pop
pop
xor
mov
rcrb
xor
in
jl
pop
adc
jmp
lods
xchg
or
xor
or
lcall
imul
pop
push
fld
xor
stos
jp
outsb
es
push
pusha
and
in
push
call
pop
inc
pop
dec
jnp
jb
loop
lods
inc
popa
mov
mov
jo
mov
add
ljmp
mov
push
pop
and
mov
adc
dec
test
leave
sbb
arpl
sbbb
and
mov
daa
mov
push
aaa
inc
shll
push
lret
mov
add
xchg
mov
cmp
sahf
dec
dec
rcrb
sbb
shlb
sbb
adc
out
mov
jmp
adc
adc
je
fsubr
xchg
inc
out
popf
mov
stc
call
push
ficoml
roll
add
mov
xor
stos
mov
imul
pop
pop
adc
shll
arpl
mov
jge
push
or
and
pusha
pop
xor
out
shrb
in
mov
fisttpll
cmp
std
sti
neg
mov
pop
adc
pop
imul
add
push
adc
clc
adc
adc
and
stos
push
dec
mov
imul
pop
inc
addb
jo
pop
adc
outsl
in
hlt
jbe
xor
jmp
les
add
pop
inc
mov
add
sub
fbld
pop
adc
es
push
pop
adc
xchg
inc
mov
clc
call
fidivrs
cmp
testb
sub
adc
lods
jl
jp
pop
sbb
vsqrtpd
pop
mov
push
and
and
out
mov
bnd
in
js
or
mov
lds
sahf
pop
adc
jmp
adc
adc
shll
pop
adc
jae
rcrb
pop
adc
sahf
pop
adc
cli
jp
jge
enter
adc
adc
adc
sahf
pop
adc
in
xor
lods
stos
div
push
cmc
cmp
mov
addr16
cmp
mov
push
into
fcoms
push
adc
mov
pop
jmp
dec
push
xor
inc
add
bnd
out
je
pop
mov
fldl
ret
adc
xor
mov
pushf
pop
adc
aam
pop
mov
and
push
les
add
adc
mov
out
dec
push
leave
pushf
das
adc
dec
pop
jo
ds
mov
test
inc
xchg
push
call
outsb
cli
jo
inc
fnstcw
jnp
push
and
dec
mov
pop
addl
icebp
imul
orb
inc
push
mov
dec
aas
pop
mov
aam
inc
es
cmc
jge
pop
femms
mov
inc
jecxz
xchg
sbb
mov
sbb
push
xchg
enter
sbb
insl
outsb
cltd
pop
or
outsl
xor
mov
cmp
adc
sub
bound
cmp
inc
push
add
inc
add
repnz
mov
mov
fimull
jmp
cmp
dec
jg
push
in
push
movsl
dec
inc
dec
int3
in
add
sbb
inc
stos
repz
sti
push
jnp
test
xchg
mov
sar
out
mov
and
xchg
scas
xor
add
loope
sahf
in
out
scas
rolb
shlb
les
data16
push
lea
lret
shrb
fucom
popa
fisttpl
les
xchg
dec
scas
dec
jno
jmp
insl
jmp
pop
mov
and
adc
adc
out
dec
sbb
push
daa
add
mov
jg
jmp
cwtl
cwtl
mov
mov
das
outsb
jecxz
pusha
mov
scas
lret
and
pop
pop
adc
cmpsb
push
pop
fildl
aaa
iret
es
es
xchg
push
fisubrl
push
adc
hlt
arpl
dec
jae
jne
outsw
aam
nop
xchg
in
sub
shl
and
out
nop
ret
test
adc
pop
adc
dec
cld
adc
adc
shll
popa
add
and
jo
sub
push
push
and
inc
push
pop
jg
jge
push
sub
push
adc
jno
fwait
mov
loop
ja
lods
push
fidivs
pop
push
adc
call
push
push
or
jecxz
aaa
stos
cmpsb
adc
inc
fsubr
and
pop
pop
dec
popf
cmp
ja
cmpsl
push
pusha
std
sti
mulb
mov
inc
je
or
es
push
pop
scas
ret
or
pushf
adc
in
das
add
std
add
and
dec
and
add
adc
adc
sbb
push
adc
mov
mov
push
loop
js
sbbb
lret
and
mov
xor
hlt
mov
les
push
add
cltd
int3
cmp
bound
or
clc
mov
sbb
stos
pop
xchg
in
scas
jb
pop
push
add
mov
adc
lds
std
pop
imul
pop
jmp
add
ret
stos
stc
scas
mov
pop
adc
cmp
pusha
enter
out
js
jg
int3
or
adc
cmp
into
in
or
in
mov
les
push
inc
addl
push
cmp
push
push
sub
xor
mov
add
jne
dec
jb
mov
mov
lcall
in
push
xchg
insl
cld
int
sub
outsb
cld
add
scas
scas
jb
push
cmpsb
mov
push
adc
jne
sub
adc
inc
dec
icebp
push
std
add
push
adc
inc
adc
adc
das
outsl
and
fwait
pop
adc
pop
lret
mov
sbb
or
in
je
lock
pop
adc
enter
rolb
test
adc
lret
ficompl
inc
pop
std
lea
mov
adcb
xor
sti
mov
push
adc
outsb
cli
push
shlb
jmp
int3
adc
call
sbb
out
fistpll
dec
pop
adc
mov
cwtl
pop
rol
arpl
lret
or
xchg
enter
mov
pop
lret
aaa
xor
shl
aam
push
adc
xor
push
stos
xchg
insl
lcall
outsl
imul
movsb
push
mov
push
jbe,pt
push
pop
lret
sarb
sbb
test
imul
dec
sub
xchg
jno
cmp
xchg
rcrb
clc
mov
and
aam
enter
cmc
jne
push
mov
adc
icebp
mov
jg
in
ffree
aam
test
int3
mov
xor
mov
arpl
dec
in
les
outsl
data16
jo
pop
adc
mov
mov
adc
sub
push
pop
pop
pop
adc
testb
xlat
adc
scas
xlat
mov
mov
jle
mov
ljmp
sub
mul
mov
mov
mov
push
je
lret
or
fs
pmullw
sub
pop
pop
bound
jp
fsubrl
or
dec
filds
sbb
sbbl
push
push
scas
cmp
jno
cmp
sti
adc
shlb
sbb
xchg
sbb
xor
mov
je
stc
push
xor
and
int3
test
mov
lods
xor
cld
dec
mov
pop
nop
arpl
aas
andl
fmuls
cmp
sub
stos
or
push
xchg
aam
ret
pop
xor
clc
test
cmc
lds
xor
mov
pop
into
sbb
sbb
sub
and
movsl
push
sbb
repnz
lds
sub
test
mov
mov
xchg
mov
cmc
push
rcll
push
xor
sti
mov
pop
pop
jnp
adc
push
push
aad
jae,pt
std
jae
movsb
pusha
add
sub
xchg
divb
xchg
ja
pusha
add
mov
imul
xor
in
push
and
fadds
lahf
in
daa
daa
out
hlt
aaa
imul
fdivs
fiaddl
mov
sahf
push
hlt
pushf
ss
pop
mov
stc
jae
addr16
in
adc
push
ljmp
sub
ljmp
xor
push
ret
push
xor
push
adc
jb
add
add
std
fsubs
adc
imul
xlat
ss
pop
jecxz
std
std
jo
sbb
xor
into
popf
repz
shrl
mov
mov
scas
adc
pop
arpl
enter
or
ror
dec
sub
iret
insb
in
adc
aad
cld
lods
stos
movsl
mov
aaa
cmp
push
lods
mov
loope
jl
pop
insb
decb
lock
std
sti
jge
testl
sub
fsubl
in
popf
cmp
fnstenv
sti
je
into
out
or
mul
pop
outsl
fidivrs
jb
ljmp
mov
xchg
pusha
add
movsb
jbe
in
dec
xchg
or
enter
bound
mov
fistpll
add
jle
or
hlt
jge
sub
xor
push
cmpsb
push
jne
adc
push
inc
je
out
icebp
dec
cmp
rep
xchg
ret
mov
rorb
pop
add
mov
divb
stc
pushl
jb
out
mov
adc
sub
pop
inc
popa
into
ja
add
pop
mov
add
data16
jbe
jns
add
xorl
xor
lods
fcomip
leave
push
cmp
test
cmp
lods
mov
mov
mov
les
add
in
xor
jecxz
mov
outsl
cwtl
cmp
jle
popa
ret
cmp
out
mov
out
out
fists
push
xchg
leave
clc
push
les
xchg
mov
or
inc
nop
pop
pop
pop
pop
inc
jp
dec
lods
out
rclb
adc
aaa
cmp
in
iret
test
icebp
jbe
popf
cmp
divb
addr16
xlat
and
mov
inc
or
push
jecxz
repnz
pop
mov
jp
mov
push
cld
pop
icebp
push
and
push
ss
mov
cmp
fadds
lret
or
shlb
mov
dec
rcrb
xor
mov
mov
jae
push
xchg
in
lods
pop
shrl
jb
mov
push
dec
scas
sub
stos
mov
sub
cmp
stos
mov
mov
dec
pop
scas
sahf
jo
adc
imul
pop
std
xor
add
ja
clc
sbb
add
pop
jmp
fisubrl
push
or
push
jmp
xchg
in
adc
pop
xor
lds
pop
outsb
or
or
add
stc
std
xor
fstpt
mov
idivl
stos
sbb
jb
into
lods
insl
stc
adc
in
and
in
pop
add
and
adc
loopne
lock
idivb
push
add
pop
adc
dec
cmpsl
fdivrp
xchg
cld
pop
stos
jl
les
xchg
sti
shlb
jg
xchg
sbbb
cmp
dec
dec
enter
push
movsb
in
adc
add
imul
sub
push
scas
dec
fidivrl
xchg
and
xchg
or
das
lcall
pop
inc
jmp
aas
insl
daa
das
xchg
mov
add
adc
std
lock
add
in
xchg
add
neg
out
add
mov
pop
inc
inc
inc
mov
jae
jb
mov
mov
in
iret
enter
inc
mov
inc
orb
mov
out
pop
xlat
sar
sub
mov
xchg
mov
es
cmp
hlt
ja,pt
jle
repnz
inc
rcll
add
stc
lcall
cld
cmpsl
fucomi
orb
pop
push
cmpsb
push
dec
nop
pop
icebp
test
cmpl
popa
sub
sub
sbb
std
mov
in
adc
mov
and
mov
add
mov
je
mov
mov
pop
pop
adc
lret
pop
pop
mov
jbe
mov
pushl
add
imul
mov
mov
pushf
mov
ret
mov
sbb
adc
sbb
push
repz
mov
mov
adc
fisubl
push
mov
popf
mov
pop
push
jo
ret
pop
adc
cmp
ss
jp
out
rol
mov
cmpsb
inc
cmp
repnz
mov
in
in
adc
jnp
shll
lds
sub
int3
or
pusha
bound
outsl
fidivrs
and
adc
daa
pop
ficoms
addl
cmp
jne
or
dec
sbb
jmp
push
repnz
xchg
je
pop
out
or
pop
insl
sbb
repz
cmpsl
in
cltd
mov
and
add
mov
paddusb
sbb
loopne
das
leave
xor
push
out
push
lock
jle
dec
jmp
mov
test
call
push
adc
sub
shll
sahf
arpl
clc
jbe
das
or
xchg
fs
in
sub
nop
pushl
icebp
lods
cmova
sbb
xorb
pop
jae
adc
stos
and
lea
add
iret
lods
jmp
push
in
adc
cs
xchg
dec
jge
adc
dec
pop
adc
les
pop
adc
cwtl
jbe
mov
mov
ljmp
dec
shlb
jno
lock
jp
scas
cmpsl
mov
jl
jle
push
aam
push
add
imull
xchg
aaa
sbb
lods
out
mov
rolb
ds
xor
mov
adc
dec
add
pop
adc
mov
adc
push
or
jb
add
mov
sbb
push
adc
std
mov
push
sbb
xchg
sbb
and
and
cli
mov
inc
mov
pushf
pop
adc
icebp
sahf
mov
or
pop
add
add
je
add
pushf
pop
adc
test
or
push
push
inc
iret
pop
sub
lret
and
xchg
movsb
les
leave
push
add
push
jmp
stos
add
or
roll
lret
out
adc
fisttps
jge
dec
pop
stos
adc
xchg
lock
xlat
fidivrl
dec
sbb
subps
lods
xchg
adc
loopne
jbe
sub
rorl
int
ret
adc
lock
and
lahf
sti
xchg
mov
orb
mov
cmp
std
enter
nop
fcmovb
outsl
into
flds
pop
inc
pop
push
jp
js
aaa
xor
stos
in
fbstp
sbb
sub
or
outsb
daa
xor
sbb
jecxz
mov
add
pop
pop
cmp
xor
lret
fidivrs
dec
testb
inc
aam
pop
cmpb
mov
icebp
jns
sbb
in
clc
jp
popf
je
xor
mov
jne
mov
addr16
ds
mov
imull
nop
mov
fwait
add
std
sti
divb
add
out
adc
js
shll
mov
mov
setne
int
enter
cli
push
leave
xchg
jp
es
jo
pop
mov
add
or
orl
xchg
jge
push
imull
lock
mov
pushf
xchg
and
jnp
xorb
mov
js
in
xor
push
fwait
lods
or
lds
loope
cmpsb
mov
aas
cld
jmp
mov
xlat
push
mov
or
xor
fwait
push
repnz
insb
xchg
scas
and
mov
hlt
jge
add
ret
add
cs
ret
rcll
std
mov
rorb
hlt
jne
sbb
das
je
je
cli
xor
nop
push
stc
jno
stos
xor
cmp
pop
mov
adc
mov
je
imul
repz
push
inc
push
stc
call
xchg
testl
cmc
arpl
lock
inc
fstps
js
jmp
adc
ja
cmp
add
std
std
js
int
mov
jle
ds
ja
jle
mov
mov
or
jb
sub
and
adc
sub
pop
adc
mov
adc
jae
sub
clc
cltd
mov
int3
lahf
icebp
mov
cmp
add
fidivrs
jo
cmc
jg
fcomp
in
push
cmc
lea
push
adc
sahf
jno
rclb
sti
jbe
and
imul
dec
sbb
mov
dec
mov
cmp
push
adc
clc
hlt
mull
loope
xor
xor
adc
imull
sub
xchg
scas
sbb
fs
xor
push
sahf
cmp
imul
das
push
mov
int
test
lret
orb
push
xchg
test
std
pop
orl
sbb
mov
orl
stos
xchg
push
pop
pop
mov
sti
data16
mov
push
cmpsb
lods
fcoml
cmp
and
test
icebp
sahf
fdivrs
mov
call
gs
or
int3
lea
lock
fbstp
push
in
dec
fisubs
mov
jl
sarl
pop
hlt
jns
push
jmp
mov
dec
jecxz
data16
or
into
xchg
mov
cmc
sub
in
adc
or
lret
movsb
lea
in
rolb
push
jp
test
ret
mov
test
adc
movl
fdivrl
enter
add
cmp
jle
pop
sbb
mov
int3
adcb
insb
push
ret
jo
adc
popf
push
or
cld
xchg
inc
sub
scas
test
js
xor
inc
aam
adc
leave
add
xchg
ds
outsb
sub
pushf
and
ja
es
xor
adc
dec
inc
mov
andl
cmp
xchg
fwait
and
cli
shll
xchg
or
xor
jecxz
sbb
lea
cmpsb
aaa
mov
xor
xchg
mov
hlt
mov
xchg
jns
mov
movsb
outsl
sub
pop
cmp
xor
push
enter
push
or
add
dec
pop
scas
movsb
fisttps
cwtl
sbb
mov
jle
or
shl
ret
sub
les
sbb
outsl
pop
push
sub
inc
dec
imul
cs
cld
push
mov
mov
xor
cmpsb
mov
dec
xor
jbe
mov
jmp
mov
jnp
add
xor
push
dec
xchg
out
aas
jg
mov
idiv
inc
dec
out
adc
fs
imul
sbb
mov
mov
xchg
xor
push
adc
and
push
push
insl
sbb
push
pop
mov
pop
loop
int
cmp
fldl
add
jnp
jae
test
adc
jl
adc
js
shrl
add
inc
hlt
clc
jg
pop
std
sti
negb
push
arpl
sbb
cmpsl
dec
jmp
mov
mov
les
jne
repz
jns
insb
mov
mov
cld
scas
fildl
jbe
stc
adc
aam
ret
mov
xchg
mov
in
ljmp
fistpll
je
push
icebp
movsl
add
in
mov
std
jmp
out
movsb
inc
jg
pop
xor
jg
pop
std
sti
imul
scas
mov
sbb
mov
mov
push
popfw
mov
xchg
jbe
sti
jne
jb
xchg
mov
sbb
dec
es
je
shll
in
push
int3
jnp
loope
mov
pushfw
mov
mov
inc
fnstsw
dec
xchg
xlat
rorb
jae
add
xor
sti
mov
sti
jne
sbb
push
push
cli
jl
cmpsl
lret
sbb
cmpsb
lds
mov
ja
ja
jle
sub
jno
insb
lahf
cmp
fisubs
adc
mov
pop
cli
stc
push
out
imulb
mov
xchg
mov
rcr
jnp
mov
testl
mov
sti
out
cs
and
push
jle
outsl
push
ja
div
loopne
pop
jmp
std
inc
mov
je
imul
out
test
sub
into
mov
fists
rcll
pop
xchg
dec
popf
sub
dec
jnp
hlt
leave
xrelease
fst
outsl
lcall
scas
inc
inc
xor
movsb
pop
js
lahf
std
cmp
mov
dec
jbe
adc
fdivrl
js
xchg
daa
adc
dec
xchg
sub
push
and
and
cmpl
cli
pop
stc
cli
cld
icebp
add
js
lods
and
aam
dec
out
and
mov
clc
clc
lock
jb
push
add
shll
push
mov
out
test
sbb
repz
aam
xor
lret
test
out
data16
or
inc
ss
mov
push
pop
rolb
xor
mov
jmp
shll
arpl
lret
rorb
push
inc
sbb
iret
enter
pop
dec
aam
mov
xor
inc
ret
dec
ret
push
dec
push
add
adc
ljmp
xor
inc
mov
jp
shl
push
add
add
or
mov
addr16
fdivr
arpl
adc
add
push
add
pop
cmp
pushf
push
mov
out
adc
mov
jo
jbe
xchg
jo
pop
adc
jp
mov
test
int
add
in
sbb
lds
and
ret
lods
out
std
and
popf
into
es
js
mov
jo
push
ja
mov
ret
jle
adc
in
mov
add
mov
mov
pop
dec
mov
push
data16
dec
fwait
mov
enter
jmp
movsl
cs
mov
into
movsl
test
cmp
sbbl
mov
jl
dec
lret
jmp
and
jle
dec
and
xor
in
dec
xchg
or
cmc
std
mov
stos
out
repnz
sahf
lock
aaa
out
jmp
outsb
jge
jecxz
mov
push
xchg
in
mov
mov
add
sub
repnz
loop
les
lret
sti
xor
repz
jb
dec
lods
add
inc
sbb
xchg
fidivrl
cmp
loop
int
xor
push
adc
cld
jl
add
jb
sbbl
stc
lods
addr16
or
dec
addr16
mov
iret
mov
movb
out
push
lret
stc
insl
mov
ss
mov
iret
stos
mov
dec
cmp
out
xor
data16
inc
pushf
mov
in
loop
adc
cld
mov
je
or
add
sbb
popf
push
dec
and
mov
fucomip
lret
mov
daa
cmp
lock
mov
loope
repz
mov
mov
ror
shlb
jbe
and
sub
sbb
add
aaa
push
add
jl
add
pop
insb
pop
lcall
jo
lea
lret
sbb
addr16
call
jecxz
or
and
dec
shlb
mov
xchg
ljmp
lds
mov
fucomip
sub
bnd
add
xchg
inc
jp
mov
lret
mov
add
mov
cli
cmp
clc
ja
std
pop
in
push
repz
pushf
ja
or
outsb
and
mov
cli
jmp
adc
mov
dec
pop
adc
pusha
xchg
mov
xchg
shll
lcall
lods
ret
lea
jp
cmp
mov
ret
imul
and
mov
lea
push
or
push
push
lcall
push
adc
xchg
dec
je
inc
push
pop
lcall
data16
xchg
push
sarb
sub
pop
mov
outsl
fistps
add
cmpsb
sti
enter
subb
or
add
or
mov
add
leave
fmulp
mov
and
sbb
mov
or
jb
hlt
leave
stos
fadd
pusha
xor
orb
inc
xlat
xor
or
scas
jns
into
jae
and
xchg
xor
adc
dec
xlat
in
or
push
in
cltd
jns
adc
xor
lods
xor
pop
aad
xor
shll
or
push
cmpsb
jg
mov
mov
jmp
push
push
popa
mov
das
xchg
xchg
scas
mov
mov
stc
lar
lods
inc
ret
leave
dec
jns
popf
imul
add
jo
push
push
js
lret
dec
pop
sti
lcall
or
jnp
dec
int3
shrb
cmp
int3
jnp
mov
icebp
idivb
aad
adc
pop
cmc
fldenv
jge
outsl
lcall
cltd
add
dec
pop
adc
enter
inc
xchg
dec
xor
test
sub
push
lret
scas
and
das
mov
leave
xchg
nop
push
shl
jge
int3
push
jbe
sti
aam
test
sahf
out
adcl
mov
push
jecxz
stos
fadds
cmp
data16
jg
sbb
push
hlt
xchg
aaa
test
movsb
loopne
inc
fcmovnb
hlt
in
stc
or
push
cmp
mov
outsb
lock
push
movsb
push
jp
push
pop
push
jo
adc
jle
rorl
addr16
fbld
pop
out
sub
ja
fildll
push
cwtl
cli
push
lods
mov
fadds
stc
nop
pusha
pop
cwtl
lret
xchg
ds
scas
pop
mov
addl
pop
pop
dec
clc
test
xchg
rcrl
sub
stc
mov
add
add
cwtl
iret
cmp
ss
pop
dec
xor
xchg
mov
pop
or
addb
cmp
xchg
fbstp
sbb
xor
hlt
xchg
cmp
lret
jns
orb
jmp
pop
jg
mov
popf
shr
pop
sub
movsl
test
jb
mov
sti
jne
imul
xchg
fldt
scas
inc
or
aas
insb
aas
dec
cld
aas
jmp
clc
jg
jg
sbb
xor
iret
jne
mov
sub
cmp
inc
jle
add
adc
xor
out
sbb
mov
adc
inc
cmc
mov
add
rcrl
in
adc
and
shlb
das
stos
std
incl
jbe
inc
insl
jecxz
sbb
test
xchg
leave
bound
das
xchg
mov
call
cmp
jbe
xor
enter
and
movsb
ret
fsub
je
and
adc
jbe
cs
fdivrs
sub
cmp
lret
out
fdivrl
jne
inc
jae
stos
mov
add
inc
loop
imul
adc
add
sub
xor
call
and
pop
jle
jne
xor
repz
mov
cbtw
gs
jo
and
repnz
fdiv
sbb
cmp
in
pusha
data16
lcall
sti
stos
jb
or
out
rclb
sti
add
and
lods
add
inc
sbb
fst
mov
lds
lcall
ljmp
in
adc
in
cmc
pop
or
and
add
outsl
mov
inc
mov
lahf
shl
add
jp
fidivl
pop
jecxz
push
pop
push
xchg
or
mov
or
cmp
jmp
xor
dec
push
insl
insl
inc
sub
jae
shll
jge
repz
cmp
mov
add
sbb
ja
je
jo
pop
adc
popa
and
jle
ror
dec
outsl
arpl
cwtl
or
call
test
cmpl
xlat
in
mov
xor
sub
repz
jge
cld
push
push
mov
mov
je
push
push
imul
movsl
mov
loop
dec
xor
pop
mov
dec
fmull
pop
clc
int
fists
add
aas
push
mov
insb
jp
orl
inc
cld
ja
mov
ss
adc
or
xchg
inc
sti
dec
das
andl
push
orb
and
add
sbb
lods
sbb
rolb
out
call
cwtl
push
or
pop
jb
sbb
sbb
jo
pop
adc
scas
fdivrl
mov
xchg
mov
dec
popa
int3
das
inc
xor
fwait
pop
scas
push
xor
adc
loop
iret
cmp
insb
pop
nop
or
inc
push
xchg
hlt
dec
push
fimull
lret
and
ss
and
pop
or
pop
jo
push
rcl
loopne
cmp
scas
out
sub
and
adc
mov
push
push
shl
pop
push
mov
jb
push
into
inc
pop
mov
xor
out
fs
add
imul
xor
aam
lahf
cmp
xchg
jl
xchg
jne
cmp
sahf
push
xor
and
adc
repnz
repnz
and
xchg
cmc
iret
pop
test
or
movsb
and
adc
and
dec
ret
fdivs
xchg
inc
fsubs
and
sbb
mov
cld
lcall
loop
push
repnz
popf
jne
mov
sub
ret
fdiv
daa
bound
sar
jle
or
pop
jae
push
icebp
gs
es
loop
int
cmp
aaa
out
add
jnp
jne
fildl
push
stc
test
sub
add
fdivs
adc
jle
hlt
xchg
mov
sti
insb
orl
mov
fistpll
shld
jle
mov
adc
arpl
adc
jo
pop
adc
and
push
divb
xchg
rclb
jg
mov
dec
mov
push
leave
outsl
jl
add
scas
stos
jbe
stc
mov
sub
in
hlt
mov
sahf
into
shrb
sub
push
adc
mov
pop
push
sar
std
js
adc
stos
cli
xor
insb
push
jne
add
sub
or
push
call
jbe,pt
cltd
fdivs
fbstp
cmp
fimuls
pop
mov
mov
hlt
mov
jns
out
push
sti
bound
jnp
inc
shrl
cld
mov
adc
mov
mov
movsb
adc
push
sahf
jnp
lods
out
adc
sbb
pop
dec
jo
pop
adc
je
add
sahf
push
push
icebp
xchg
test
add
jmp
sahf
or
movsl
movsl
jae
out
ljmp
lds
mov
mov
xor
cmpsl
pop
or
out
jmp
mov
pop
cld
or
jge
mov
jb
and
lahf
and
jecxz
cmp
and
pop
push
inc
mov
push
rorb
insl
and
add
aaa
push
iret
jl
pop
stos
aad
sti
fwait
xor
sbb
xor
and
out
xchg
icebp
jnp
pop
mov
xor
divl
outsb
pop
xor
adc
mov
mov
jne
out
adc
adc
pop
jo
pop
adc
ds
decb
adc
push
orb
insb
gs
movsb
sub
adc
test
jb
les
add
test
clc
int3
xlat
in
mov
and
movsl
das
mov
mov
stc
cltd
repz
popf
jg
jmp
lahf
scas
cltd
jp
dec
inc
xchg
pop
push
dec
xchg
xchg
inc
popf
ljmp
sbb
daa
cmp
sub
dec
ss
ret
test
xchg
mov
aad
lahf
loopne
mov
or
in
cld
mov
inc
xchg
test
inc
mov
test
cmpsb
or
jbe
push
or
cmp
or
or
xor
or
xor
add
sbb
adcb
into
rcrl
mov
xor
mov
cltd
pop
cmp
adc
aad
inc
lret
arpl
adcl
dec
sbb
or
or
inc
outsl
cmp
mov
push
jp
shll
sub
add
es
and
rolb
out
cld
and
or
das
cmp
mov
pop
xor
jg
add
or
mov
sub
test
cmp
pushf
cmpsb
stos
mov
addr16
movsb
bound
adc
jae
jae
fsts
in
push
mov
push
adc
out
adc
inc
mov
mov
pop
adc
fmuls
mov
push
pusha
cmpsb
mov
xor
cs
ss
mov
xor
inc
cmpl
stos
xchg
inc
dec
mull
rclb
dec
or
imul
jge
loopne
push
shrb
jecxz
pop
lcall
jg
stc
sti
sub
jns
sbb
or
mov
pop
add
adc
mov
push
or
add
inc
pushf
std
test
inc
out
rclb
adc
outsl
out
jo
pop
inc
xchg
data16
or
negb
cmpsl
dec
push
jbe
fiadds
test
jbe
cmp
enter
or
xor
jmp
adc
insb
sbb
inc
sti
aas
lock
std
sti
jbe
fbstp
sbb
xchg
xchg
xor
mov
js
xor
rorb
add
xchg
fimuls
pop
ret
or
lea
pop
or
mov
xor
testb
adc
push
leave
jg
lcall
mov
and
dec
mov
add
ja
repz
icebp
repnz
mov
not
mov
adc
and
fnstsw
repz
movsb
inc
cwtl
bound
xor
pop
andl
mov
adc
enter
jg
sub
add
mov
pop
jecxz
movsb
jl
fwait
clc
aam
xchg
pushl
sub
adc
adc
mul
adc
add
xor
bound
dec
jb
mov
mov
fiadds
add
and
loopne
pusha
push
hlt
outsb
popl
dec
cmc
xlat
fisttpll
aam
sub
xchg
jl
dec
cmp
xchg
out
sbb
scas
inc
dec
inc
inc
imul
cmp
add
xchg
mov
sbb
popf
out
stos
and
mov
cmp
jb
outsl
sub
cmc
stos
jbe
jecxz
popf
fistps
mov
sbb
adc
out
xlat
sbb
enter
jnp
stos
iret
pop
sub
and
cs
mov
ja
lret
or
mov
xchg
out
pop
add
scas
jmp
mov
push
jo
addb
xchg
inc
jo
dec
xchg
ja
shll
icebp
push
and
aam
test
add
xor
fnstsw
jb
adcl
or
out
pop
mov
jo
div
mov
pop
jbe
push
inc
mov
arpl
in
icebp
insl
jno
push
mov
loopne
mov
pop
or
fsubl
insb
jl
stos
orl
xor
sbb
loope
call
mov
mov
hlt
push
inc
adc
movsb
cmc
mov
push
push
xchg
ds
xchg
test
or
in
jbe
jns
rorb
int
sti
ret
cwtl
ds
jp
shll
out
or
jmp
sarl
sub
lods
adc
out
pop
sbbb
mov
sbb
loope
jecxz
out
xchg
gs
sbb
xchg
in
pusha
cwtl
in
jmp
out
push
mov
in
fisubl
jl
mov
push
sub
add
jbe
mov
mov
popa
movsl
push
and
mov
pop
je
sub
test
cmp
adc
enter
out
test
rcrl
lods
jecxz
idivb
mov
loopne
pop
sub
pop
xchg
movsb
loopne
outsb
xchg
cmp
add
icebp
xchg
push
push
and
cld
mov
lea
scas
and
movsb
and
fldenv
je
lods
ret
scas
xor
loop
jae
jnp
mov
outsl
scas
mov
rcr
mov
lcall
lds
addr16
cmp
xchg
aas
mov
cmp
std
mov
cmp
mov
cmpsl
xchg
bound
mov
out
add
lds
mov
sbb
aas
pop
pushf
fldt
sub
cmpsb
incl
jbe
push
and
ret
xchg
ficoms
jg
das
rorl
and
adc
ljmp
nop
pop
jl
jbe
into
popf
cmp
xchg
xlat
cmpsl
cmp
dec
addb
cmp
and
push
add
xor
pusha
bound
mov
lret
stos
jg
dec
decl
and
fistps
mov
jecxz
je
aam
xorb
adc
aas
add
iret
xorl
fdivrl
decl
aas
dec
xchg
in
mov
inc
outsb
outsl
mov
je
push
or
adc
fists
or
jle
cmp
bound
lahf
sub
jmp
xor
xor
dec
into
ret
pushf
aad
xor
cmp
ljmp
mov
in
push
cli
xlat
sbb
daa
sub
cmp
mov
movhps
hlt
in
adc
out
adc
push
outsb
cmp
jmp
jo
pop
adc
push
push
sbb
imull
mov
xchg
mov
je
sbb
sub
arpl
repnz
jno
dec
movsb
mov
inc
sub
iret
mov
pop
orl
adcb
fnstenv
cmc
aaa
popl
negl
testl
fwait
psubb
idivb
inc
mov
mov
lods
xor
jmp
ljmp
pop
je
clc
cmc
mov
inc
scas
hlt
cmpl
add
mov
lea
in
mov
lock
sbb
fists
pop
sti
jne
out
adc
negb
push
dec
fimuls
sbb
lcall
loope
pop
mov
and
push
aas
and
adc
enter
out
cmpsl
lret
mov
jmp
cld
mov
pop
out
adc
add
mov
adc
xchg
dec
in
scas
jns,pn
lds
popf
adc
and
adc
pushf
fstpt
ja
jne
inc
enter
idivb
inc
shlb
cwtl
call
gs
sub
jecxz
mov
push
jmp
loopne
mov
mov
push
int
fcmovne
aad
sbb
push
arpl
sub
loop
js
out
adc
adc
add
pop
adc
and
inc
mov
out
ret
xchg
rorb
insl
in
dec
gs
xchg
clc
mov
out
inc
or
loope
push
or
mov
dec
fstl
lds
mov
dec
in
call
dec
xor
mov
test
sahf
push
dec
call
shl
or
mov
mov
pop
xlat
push
fcmove
jg
in
xchg
in
pop
add
andb
and
js
xor
inc
mov
fldcw
add
inc
shlb
das
add
aaa
cmp
mov
pop
push
jbe
dec
push
imul
dec
rolb
int
hlt
imul
inc
push
and
cmp
push
lock
pop
es
pop
adc
sarl
and
lods
and
sbb
rclb
movq
dec
inc
pop
adc
push
pop
push
adc
fcmovbe
mov
pop
pop
adc
sub
rcrb
in
in
aad
push
push
adc
cmp
adc
rcrb
push
bound
pushf
sbb
adc
push
cmpb
test
cmp
rcll
loop
fadds
sub
jg
pop
and
or
adc
push
adc
lret
adc
ja
addr16
mov
pusha
sahf
aaa
aas
push
stc
cmc
mov
daa
fs
das
push
adc
das
lods
add
adc
adc
scas
stos
div
jbe
int
cmp
push
jae
dec
popf
mov
ja
mov
inc
jle,pn
fistpl
enter
mov
xchg
sub
or
pop
fcompl
push
adc
adc
and
jns
out
push
hlt
pushf
lcall
adc
sub
push
adc
mov
out
sbb
push
adc
push
sbb
out
ret
popa
pushf
icebp
daa
movsl
dec
sbb
fucomip
fistpll
je
adc
xor
or
push
dec
push
stc
clc
rorb
lds
fwait
imul
add
adc
push
insl
mov
int
clc
xchg
gs
fucomip
hlt
adc
sub
mov
data16
popf
add
dec
js
fiadds
notl
fnstenv
add
in
mov
jle
int
std
push
sub
adc
data16
fucomip
hlt
adc
mov
push
xlat
enter
fucomip
xor
repz
fidivl
mov
mov
mov
rclb
sbbb
enter
subl
adc
ss
mov
sbb
arpl
adc
and
cmp
cmpsb
xlat
xorb
ret
cmp
sub
inc
cmpsb
sub
mov
pop
ficoml
hlt
push
pop
cli
jnp
stc
xchg
adc
sub
es
sbb
push
shlb
mov
ret
mov
xor
sub
out
adc
jbe
cld
pushf
fdivrs
sub
sbb
jo
pop
adc
nop
or
test
test
push
adc
ds
add
dec
pusha
into
in
repz
jnp
or
out
xor
cltd
cs
jae
xor
cltd
das
jg
adc
jns
inc
push
and
dec
out
sbb
movsb
ds
sub
cmp
stos
adc
mov
sbb
or
das
and
xchg
test
jo
sbb
mov
push
repnz
xchg
jecxz
cmp
xchg
in
xchg
jp
in
sub
xlat
xorb
arpl
or
stos
xor
xor
mov
add
cmp
pop
ss
sbb
stc
push
and
pop
mov
sbb
mov
or
or
jp
jg
pop
pop
xor
imulb
mov
sub
pop
sub
xchg
hlt
sub
cwtl
xchg
adc
pop
cwtl
sub
outsl
adc
fidivrl
mov
sub
int
mov
sbb
sub
add
arpl
repz
imul
das
dec
push
cli
shll
xor
fcmovu
je
dec
sub
insl
dec
mov
pop
ret
push
lods
xor
enter
push
mov
fcmove
andb
and
cmp
cmp
cwtl
in
adc
rcrb
out
into
mov
fwait
scas
adc
jp
rolb
add
adc
daa
stos
lods
lods
loopne
or
jmp
pop
jb
std
sbb
mov
mov
rcrb
repnz
mov
pop
adc
in
cmpsb
stos
xchg
mov
scas
xor
pop
mov
clc
lods
mov
pop
lret
and
mov
subb
jo
test
and
rolb
xchg
imul
adc
call
cmc
out
imul
adc
mov
cwtl
std
jbe
adc
ss
cmp
or
rclb
pop
lds
xchg
add
jb
dec
add
mov
mov
das
pop
sbb
nop
in
fbstp
mull
aaa
or
and
ljmp
push
les
dec
lds
add
add
mov
shl
sarl
lret
test
popf
repnz
fucomip
sub
and
mov
ja
stc
jmp
aam
push
adc
mov
mov
aam
lret
outsb
test
xor
ret
or
mov
pop
sub
pop
cld
push
aaa
icebp
xchg
std
call
mov
fidivs
je
pushf
pop
adc
sbb
cmp
mov
out
adc
add
into
jne
fwait
jmp
push
jo
pop
adc
inc
sti
std
sti
mov
adc
repz
lret
mov
sbb
stc
lcall
pop
adc
lods
push
mov
aam
addr16
adc
mov
cmpsb
mov
xlat
mov
inc
cld
cli
idivl
inc
sti
cmpsb
cwtl
hlt
mov
enter
mov
add
xchg
pop
adc
mov
pushf
in
mov
int
bound
adc
stos
adc
mov
adc
div
jecxz
iret
xchg
sub
jg
adcl
adc
movsl
push
sub
inc
cwtl
test
cwtl
jg
adc
mov
scas
sub
sbbb
fisttps
pop
adc
stos
and
xor
mov
arpl
adc
ret
mov
fcmovnb
std
sub
push
in
sub
pop
adc
lret
adc
inc
dec
cmp
xchg
pop
adc
mov
dec
mov
or
inc
call
adc
in
jmp
test
cli
inc
addl
pop
cmp
ds
cmp
cmp
pop
adc
testl
divl
loope
pushf
pusha
jbe
adc
jl
stc
lods
adc
cmp
dec
aas
mov
xchg
adc
orb
ret
mov
adc
scas
or
imul
test
mov
inc
xchg
xor
or
bound
test
adc
xchg
dec
cmpb
das
rorb
pop
adc
xor
mov
push
push
xchg
stos
dec
addr16
adc
adc
pop
and
lret
leave
sbb
bound
adc
xchg
insb
xor
jg
ror
insl
pop
adc
popf
mov
pop
out
jp
lret
loopne
pop
adc
test
pop
jecxz
shl
rclb
icebp
enter
jns
imul
dec
int
push
xor
loope
fs
adc
push
sbb
pusha
mov
loope
imul
jle
adc
mov
loopne
insl
inc
jp
mov
adc
aaa
add
in
jno,pn
ret
shlb
adc
arpl
push
ja
fisubl
call
rorl
int
add
mov
pop
adc
xlat
or
dec
sbb
insb
int
test
fwait
cmpsb
mov
xor
mov
mov
xchg
xchg
jns
fld
mov
jbe
adc
and
cmp
pop
pop
sub
pop
adc
clc
pop
pop
push
sbb
mov
pushf
xchg
pop
adc
jae
sahf
and
aaa
dec
bound
adc
adc
aaa
sub
popf
sub
pop
adc
test
subb
pop
inc
pop
cmp
and
or
cmp
mov
adc
sub
test
adc
jns
out
jne
movsl
push
sub
mov
insb
pop
sarb
adc
stos
adc
mov
popa
pop
adc
test
dec
les
pop
adc
mov
and
adc
xchg
pop
adc
jmp
and
mov
pop
adc
mov
sbb
into
push
mov
pop
adc
sub
ja
mov
das
add
lods
xchg
pop
cwtl
pop
adc
das
sbb
push
lds
add
cmpsl
out
fistpll
add
jle
mov
mov
xchg
pop
adc
xor
into
popf
insb
pushf
sub
pop
mov
push
jp
pop
adc
ds
ljmp
and
pop
lods
xchg
pop
adc
mov
les
ficoms
std
lods
push
pusha
or
pop
js
mov
adc
insl
lahf
xchg
cmovo
pop
adc
cmp
aam
or
popf
cmc
je
pop
adc
lahf
popf
cmp
aaa
call
xchg
call
push
mov
fsubrp
xchg
mov
xor
mov
or
imul
jg
test
add
pop
adc
mov
rcll
pop
sbb
jle
pop
adc
mov
stos
adc
sub
adc
adc
and
cs
pusha
mov
test
pop
adc
mov
inc
sub
sbb
xlat
mov
and
inc
sub
enter
popf
ds
in
jmp
add
scas
cwtl
pop
pop
adc
sub
outsl
js
or
mov
adc
lods
into
lods
imul
imul
scas
outsl
mov
and
xchg
dec
pop
rol
mov
or
push
mov
adc
mov
jae
dec
das
pop
mov
imull
pop
jnp
test
push
push
adc
jg
adc
push
jl
js
xchg
adc
pop
adc
fisubrl
and
testb
mov
sub
icebp
ljmp
ja
mov
push
shlb
and
jo
mov
aaa
pop
pop
cmpsl
cltd
lock
pop
adc
adc
push
insl
lret
xchg
sub
lea
adc
cmpsb
or
sub
rorb
clc
rolb
inc
scas
add
sub
adc
popf
cmp
inc
lods
sbb
sub
jo
adc
aad
lcall
call
pop
adc
mov
xchg
mov
std
ja
fstl
jl
adc
call
jl
or
jnp
inc
dec
bound
gs
imul
icebp
sbb
shr
add
dec
inc
rclb
adc
mov
or
fsubrp
in
and
xchg
mov
adc
and
iret
in
popa
test
repnz
pusha
pop
adc
adc
stc
xchg
shlb
inc
adc
adc
or
jge
adc
xchg
sti
cli
lcall
and
outsl
push
xor
xor
pop
adc
das
sti
sub
xor
sbb
cwtl
arpl
adc
mov
cmp
push
jo
jbe
pop
rcl
cld
je
adc
mov
pop
sarl
rcl
js
movsb
pusha
pop
adc
test
aaa
dec
movsl
or
cld
and
jo
pop
adc
scas
das
das
jns
nop
movsb
test
pop
adc
int3
cmp
mov
xchg
sbb
clc
xchg
pop
adc
std
mov
aaa
cmp
popa
scas
push
mov
ja
xchg
out
xor
lods
push
mov
cmp
insl
or
push
and
mov
adc
push
es
sbb
rolb
mov
ja
adc
das
sbb
add
xor
fistpll
add
scas
xchg
pushf
pop
pop
adc
xchg
mov
fdivp
mov
or
insb
pop
adc
test
add
sub
pop
adc
mov
les
mov
std
lods
push
loopne
dec
nop
aam
je
adc
jno
jmp
testl
mov
sti
idivb
inc
cli
aaa
cmpsl
popf
cmc
in
pop
adc
add
mov
add
test
xchg
xor
sbb
xchg
pop
adc
je
out
fucomip
xchg
dec
xor
add
adc
aas
fistpll
lds
cmc
in
pop
adc
cs
ljmp
adc
adc
and
lods
imul
pop
adc
stos
adc
mov
mov
adc
test
push
les
xchg
pop
ja
adc
loope
xchg
jo
or
cmpsb
insb
mov
adc
and
out
addb
xchg
je
pop
adc
mov
sbb
iret
push
fs
adc
les
jbe
mov
xor
add
mov
pop
adc
ja
mov
or
jl
std
stos
adc
xor
or
pop
adc
push
mov
push
pushf
jl
adc
cmpsl
cli
sti
mull
sub
mov
jbe
adc
loopne
scas
adc
mov
sub
pop
in
pop
adc
popf
dec
aad
push
xchg
mov
aam
pop
adc
jge
data16
nop
mov
adc
sbb
adc
sub
insl
jns
pop
mov
jae
into
lcall
inc
inc
out
shlb
mov
adc
cld
cmp
lret
mov
mov
adc
std
ds
addl
jno
dec
dec
push
mov
scas
fisttpl
clc
cmpsl
add
outsl
pop
adc
stc
stc
cli
stos
sbb
pop
dec
xchg
mov
int3
pusha
pop
adc
pop
jb
aam
mov
mov
and
pop
adc
mov
mov
cs
and
adc
mov
test
faddl
xor
mov
adc
hlt
or
das
jl
add
mov
adc
dec
push
xor
push
cmp
pop
adc
cmp
addl
xchg
and
sub
jp
add
rep
and
mov
inc
pop
jp
push
lret
fs
adc
ljmp
rcl
mov
pop
adc
int
pop
jae
lds
sbb
pop
adc
adc
push
dec
call
rclb
pop
dec
movsb
gs
adc
mov
push
insl
in
inc
jp
pusha
pop
adc
insl
mov
mov
jecxz
jmp
mov
loopne
xor
fcmovu
sbb
mov
jo
push
fwait
scas
jbe
jno
cltd
daa
inc
xchg
inc
arpl
adc
jg
dec
dec
sbb
popa
fcmovnbe
je
adc
mov
jno
fldenv
adc
xchg
xchg
das
js
out
ret
xlat
push
je
adc
dec
ljmp
adc
sti
dec
cmp
inc
test
adc
and
incl
das
and
pop
adc
or
out
cmp
loopne
or
cmp
adc
int3
lods
fwait
idivl
push
lock
pop
fnsave
jne
jnp
stc
ja
testb
mov
je
adc
xor
add
jp
adc
and
jg
xchg
lea
add
adc
pop
repnz
lret
rclb
cmc
andb
xlat
add
ljmp
adc
das
aam
mov
adc
mov
cmpsb
mov
xlat
subb
xchg
jg
sti
idivb
inc
sub
sbb
shlb
and
xchg
pusha
outsb
pop
adc
loope
xlat
jne
or
or
imul
mov
xchg
or
add
lods
xchg
mov
pop
adc
ljmp
push
lds
pop
adc
imul
sub
add
test
je
pop
adc
cwtl
jne
mov
shrb
xchg
ja
stos
adc
and
cmp
adc
pop
adc
test
push
les
pop
adc
mov
and
adc
adc
call
inc
mov
mov
pop
adc
mov
sbb
into
push
cmp
pop
adc
adc
ja
mov
aaa
add
lods
xchg
jo
pop
adc
das
sbb
sub
lds
cmp
popf
pop
pop
adc
pop
adc
mov
adc
xlat
dec
mov
adc
sub
add
cmp
pop
cwtl
pop
adc
pop
adc
pop
adc
mov
loope
clc
or
cmp
imul
xor
sbb
in
outsb
sub
add
stos
pop
sub
test
adc
adc
sub
pop
loope
clc
lret
adc
test
sub
daa
pop
dec
adc
out
mov
pop
sbbb
fcmovnb
lds
cmp
fisttpll
ljmp
bound
xor
call
sub
xor
inc
aas
push
lret
gs
test
scas
push
add
aaa
nop
lret
push
xlat
sbb
add
inc
mov
push
insl
outsl
xchg
or
leave
push
leave
jae
pop
imul
xchg
pop
fdivrl
jmp
xchg
add
mov
cmp
sub
sub
xor
dec
ret
aam
dec
jb
cwtl
ljmp
icebp
je
stc
loop
xor
add
xor
push
stos
xchg
mov
jnp
sub
pop
sbb
mov
sti
sub
xor
das
jl
es
insl
xchg
xor
ss
js
jne
or
xor
add
gs
cli
dec
cmp
mov
or
sub
pop
or
ljmp
dec
jg
lret
fadds
cmp
fcomip
repnz
xchg
mov
addr16
cmp
pop
ret
repnz
inc
xor
add
mov
test
repz
pop
orb
inc
leave
cmc
fsubrl
movsb
aam
mov
lret
mov
adc
in
scas
mov
inc
jge
jmp
sub
ret
mov
aad
mov
fwait
pop
jne
test
popf
mov
test
add
push
jne
mov
dec
cmc
mov
add
orl
mov
jb
add
and
notl
or
stos
sub
sbb
shrb
pop
sub
test
cmp
pop
out
add
pop
adc
pop
shll
pop
adc
subl
arpl
pop
push
adc
repnz
mov
inc
inc
fidivs
and
mov
pop
jno
aas
enter
jl
test
xor
bnd
lods
mov
jmp
mov
xchg
lods
jne
pop
inc
lock
nopl
sub
add
out
adc
push
xor
loop
cwtl
shll
mov
inc
sub
pop
sub
add
insl
fsubrp
hlt
jbe
sbb
and
dec
cmpsl
dec
popf
insl
lahf
sbb
jb
pop
sub
add
add
into
lahf
icebp
out
pop
sbb
movsl
ffreep
adc
mov
jbe
daa
sub
add
lock
outsl
mov
out
mov
jnp
les
scas
hlt
dec
sub
ret
add
pusha
push
pop
mov
xchg
xor
stc
fs
jo
std
xor
xlat
push
xchg
test
add
or
nop
sbb
test
punpcklbw
les
cld
sub
jp
sub
add
mov
cs
imul
in
mov
orl
cmp
daa
out
mov
add
add
in
xor
inc
sbb
xchg
ds
push
adc
xchg
mov
jbe
cmp
test
sahf
mov
lds
adc
ret
xor
cli
cmp
ret
add
loop
xor
dec
mov
mov
cli
bound
addb
mov
xchg
and
pop
adc
adc
sbb
and
jae
push
sub
add
xchg
mov
leave
mov
inc
push
pop
mov
fsubrl
jo
jno
add
and
xor
rol
pusha
pop
addr16
data16
lods
jbe
dec
sbb
xor
and
clc
imul
xchg
xor
lods
sub
dec
xor
mov
mov
inc
inc
pop
adc
das
push
inc
inc
pop
adc
out
or
inc
pop
adc
mov
pop
xor
adc
jmp
inc
pop
adc
pop
rorl
pushf
pop
adc
bound
inc
inc
pop
adc
mov
aaa
push
or
jmp
add
fdivr
fstps
xchg
out
jge
dec
pop
adc
jg
repz
xchg
cmpsl
mov
rcrb
pop
enter
mov
in
rolb
add
push
adc
popf
pop
adc
pusha
loop
idivl
mov
outsl
cltd
clc
xor
cpuid
mov
inc
lahf
mov
es
push
insl
lret
push
pusha
test
sbbb
mov
mov
mov
das
fidivrl
mov
fistl
in
rcrb
pushf
das
ror
popf
pop
adc
adc
xchg
cmp
sub
push
mov
cmp
push
jecxz
or
mov
mov
cmp
sbb
jo
adc
fstpt
popa
andl
jno
insl
xchg
push
stc
outsl
scas
xor
push
mov
sbb
in
cwtl
loopne
pop
fsubrs
cmpl
fimull
sti
fildl
pop
adc
push
in
push
int3
jno
sub
sti
xor
xchg
or
or
dec
icebp
inc
test
xor
js
add
jae
pop
pop
imul
dec
xchg
xchg
push
inc
or
push
movsb
cmc
shl
mov
cltd
jno
ss
in
dec
sub
clc
popf
pop
adc
cmp
adc
adc
sbb
inc
ret
inc
mov
mov
cmp
cs
ret
out
decl
shlb
mov
clc
pop
push
mov
jb
loopne
pop
adc
lret
loopne
fistps
fdivrs
mov
ja
pusha
mov
outsb
sti
sub
mov
push
fistps
call
mov
push
xchg
mov
mov
stos
fwait
cmp
pop
movsb
jno
mov
cli
hlt
xor
adc
jo
xchg
scas
pop
loop
mov
jle
je
cmpsb
dec
vmovhps
jl
sti
jbe
adc
fimuls
jnp
or
fdivrs
dec
jb
nop
mov
jecxz
mov
jnp
call
lcall
in
pop
sub
popf
cmp
fisttpl
cld
std
xchg
repnz
push
cmp
mov
cltd
or
lahf
cmp
test
aad
jb
adc
jb
add
pop
in
xchg
xor
fsts
dec
push
inc
pop
ljmp
adc
jae
scas
or
in
sub
js
lahf
cmp
aas
sub
aad
jae
xchg
push
idivb
lods
stos
push
push
mov
pop
js
jo
lret
cmp
mov
pushf
in
push
lock
add
stos
cmpsb
add
mov
sbb
in
jmp
insb
and
lea
jl
out
andb
cwtl
filds
cmp
loopne
icebp
xor
jb
stos
jae
or
pushl
ret
stos
jnp
maxps
mov
mov
cmp
sbb
jb
add
cwtl
flds
fbstp
cmpsb
negl
add
sbb
sbb
mov
fld
cmp
mov
mov
pop
cmp
cs
clc
xchg
xchg
andl
xchg
call
rolw
aas
clc
adc
arpl
add
pop
lods
mov
sbb
add
pop
adc
and
fs
or
or
clc
popf
pop
adc
fdivrp
adc
adc
scas
xor
jno
lcall
add
xor
sbb
fcmovnbe
int
int3
xchg
adc
or
push
adcb
push
iret
pop
jo
pop
adc
pushf
pop
adc
int3
mov
xlat
push
add
lret
mov
sub
xor
jmp
mov
out
addl
mov
hlt
fisttps
mov
or
sti
insb
pop
cmp
jg
addb
jno
test
push
imulb
aad
sub
pop
ret
sbb
addl
push
or
std
mov
in
adc
and
sub
fbstp
sub
lock
popf
aaa
outsb
pop
jle
std
mov
pop
aaa
pusha
mov
imul
xor
cmp
ds
in
fs
cmp
jo
jne
push
out
pop
mov
je
pusha
inc
pop
adc
fcompl
mov
jmp
enter
mov
int3
sub
and
and
add
out
div
popa
or
fsub
inc
popl
jl
dec
push
xor
mov
div
in
sbb
push
sbb
or
jl
cmp
sub
ds
mov
int
push
js
fwait
mov
mov
cltd
sub
mov
subb
sub
lcall
dec
cmpsl
dec
mov
push
xor
int3
aaa
addr16
dec
jno
cmp
out
mov
mov
adc
xchg
jnp
inc
dec
and
xchg
les
xor
loope
lcall
xchg
das
movsl
test
fld
hlt
dec
cmp
push
fdivl
daa
out
sub
not
mov
addb
mov
shld
insb
or
std
lock
and
mov
pushf
mov
push
into
mov
lcall
xor
insb
mov
jp
inc
inc
inc
jl
pop
jg
call
push
fwait
cmp
shl
lret
cmpsl
nop
mov
xor
cld
std
xchg
repnz
sbb
xchg
cwtl
int
dec
shll
adc
mov
cmp
xchg
incl
dec
mov
loop
inc
xchg
or
pop
int
inc
mov
and
add
mov
jnp
mov
int3
stos
sbb
bound
sub
popf
mov
mov
inc
adc
mov
push
xchg
cmp
xchg
or
sahf
jne
stos
jmp
and
rol
adc
cmp
out
incl
dec
movsl
add
adc
negl
jge
add
arpl
in
push
cli
jecxz
dec
cmpsl
add
add
insl
fidivs
cld
stos
sbb
bound
icebp
mov
pop
mov
lret
sbb
add
add
out
addb
out
dec
pop
and
push
sub
clc
popf
pop
adc
sub
adc
adc
mov
and
hlt
mov
cld
imul
cmp
and
ja
scas
jo
add
aaa
hlt
mov
cmp
subb
ljmp
add
add
andl
inc
xchg
cmp
sub
jne
adc
xor
push
cli
add
nop
or
mov
xor
xchg
sbb
arpl
mov
pop
mov
mov
push
push
mov
jo
jecxz
hlt
bound
bndldx
aad
mov
xabort
mov
jge
js
add
push
scas
sbb
mov
clc
popf
pop
adc
pusha
inc
pop
adc
adc
jnp
cli
jbe
outsb
sbb
aad
mov
cmp
xchg
dec
mov
pushl
adc
pop
imul
add
push
xchg
and
out
test
xlat
cwtl
add
push
dec
adc
and
jg
scas
bound
xchg
pop
leave
xrelease
push
mov
filds
jl
or
cld
add
pop
ret
add
xor
pop
adc
mov
dec
pop
adc
push
add
pop
adc
push
jle
mov
mov
cmp
movsl
push
adc
adc
cmp
mov
arpl
jg
fdivrs
cpuid
or
push
adc
jg
lret
xor
lret
or
pop
cmc
movsb
jne
sub
icebp
lds
or
and
xor
je
mov
and
dec
mov
mov
addl
add
lea
mov
mov
mov
popa
inc
push
test
test
or
mov
push
aas
cmp
add
cmpb
lock
dec
lret
jnp
in
add
jle
adc
icebp
jo
pushf
mov
xor
int
add
xor
cmp
int3
popf
pop
adc
movsl
or
bound
add
lock
fwait
lds
popf
adc
adc
cmp
shll
clc
mov
out
ds
push
pop
push
int3
mov
pop
push
push
lea
sub
jbe
sbb
ret
nop
cld
xor
int3
xor
repz
mov
pop
pop
sub
xor
inc
rcr
xchg
pop
adc
inc
or
pop
js
jo
imul
push
stos
outsl
push
cltd
jmp
rcl
aam
js
push
xchg
push
fdivrl
mov
ljmp
adc
push
xchg
pop
pop
push
xor
ss
daa
int
daa
lods
int3
and
pop
inc
jae
out
cmp
adc
pop
pop
add
in
js
rclb
movsb
fildl
sub
gs
inc
dec
in
test
addr16
dec
xlat
sub
inc
xor
enter
pop
adc
icebp
loop
lods
xor
push
dec
xor
xchg
add
lods
adc
and
xchg
xor
mov
push
rcrb
rorb
rolb
cmpsb
cmpsb
xchg
add
enter
and
adc
mov
dec
mov
push
repnz
jb
dec
lods
jo
add
aaa
xor
outsb
xchg
pop
adc
cld
adc
adc
adc
pop
stc
and
xor
adc
imul
jmp
mov
cld
std
js
fisttpll
mov
popf
pop
adc
add
push
adc
pushf
pop
adc
sti
jne
aaa
mov
fwait
push
sub
mov
pop
push
lret
imul
fistpll
jp
bnd
in
pcmpgtb
pop
ljmp
mov
push
les
ja
test
xchg
in
sbb
adc
cmp
ljmp
lcall
adc
fwait
pusha
sub
lret
cmp
in
loopne
or
xor
cmp
jl
divl
enter
cmp
in
mov
fdivr
and
sbb
or
hlt
sub
push
hlt
lcall
mov
and
mov
adc
add
adc
leave
mov
push
mov
add
jno
lods
in
adc
mov
xor
add
cmp
popa
cmp
je
loope
outsl
lcall
sbb
cmpsb
fistpl
pusha
adc
jbe
add
mov
rcll
adc
ficomps
je
fwait
mov
sarl
hlt
ljmp
add
scas
pop
orb
cld
je
popa
sub
loopne
mov
pop
adc
jmp
loop
inc
pop
adc
repz
inc
pop
adc
add
pop
adc
xlat
adc
sub
mov
fmuls
and
or
pop
adc
pop
adc
inc
or
jno
mov
inc
inc
or
pop
add
pop
adc
jns
rcll
add
pop
adc
inc
dec
push
data16
adc
adc
jno
mov
fdiv
cmc
clc
clc
lock
test
call
xor
rcll
mov
fsubrl
adc
scas
sarb
mov
movsl
daa
dec
in
orl
jge
add
cmpsl
mov
push
sub
aas
add
push
mov
inc
xlat
sbb
pop
adc
and
dec
rolb
pop
pop
adc
inc
inc
jle
mov
adc
xchg
sbb
add
xchg
js
pop
lods
mov
pop
adc
or
pop
roll
and
dec
insb
movsb
dec
and
movsl
inc
and
mov
mov
inc
and
sub
repnz
mov
cmp
pop
adc
cmp
push
adc
in
bound
test
cmp
sbb
jmp
xchg
insl
cltd
ret
int3
notb
gs
jl
fcmovnu
jl
sbb
pop
cmpb
sahf
daa
lods
test
nop
mov
jae
lcall
adc
sbb
dec
and
ds
gs
lods
add
sbbb
ss
imul
data16
cwtl
inc
icebp
loope
fwait
addr16
rol
cld
lahf
or
adc
jmp
mov
jmp
fimuls
sti
fildll
dec
fwait
scas
movsb
ret
sub
xchg
notl
ret
push
stos
cmp
cmp
loop
and
fdivr
lds
jns
jns
and
add
pop
adc
jb
push
sahf
cmp
cmp
mov
add
cmp
mov
adc
in
fbstp
xor
jo
sahf
push
adc
pop
loop
mov
shld
jle
data16
add
jbe
push
dec
inc
push
pop
mov
mov
sub
popf
pop
adc
add
aaa
mov
inc
call
cmpsl
dec
popf
mov
cmp
pop
push
xor
divb
dec
and
sbb
cwtl
lcall
adc
sub
or
movsl
cli
test
js
cmpsb
and
loop
mov
mov
ss
je
mov
push
test
test
inc
jmp
mov
push
int
jl
divl
cld
jo
loope
ret
call
jno
mov
xchg
dec
fsts
ss
pop
adc
scas
xchg
clc
pop
cmc
push
add
dec
adc
cmp
nop
call
aaa
sti
je
in
inc
pop
adc
aaa
je
pushf
pop
adc
add
cmpxchg
jg
xor
jmp
pop
adc
bound
pop
adc
in
pop
stos
add
pop
adc
add
jne
or
outsb
fistpll
and
add
adc
mulb
sahf
pop
adc
xchg
sbbb
pop
mov
mov
pushf
pop
adc
mov
xchg
jmp
add
add
fdivrs
cltd
shll
pop
adc
mov
jecxz
decb
push
cmc
movsb
jne
insb
or
pop
adc
jp
cmc
xchg
fisttpl
push
in
push
adc
adc
fmul
mov
sti
mov
and
ss
and
xchg
mov
and
sti
mov
push
popl
xchg
push
inc
mov
xchg
and
mov
pop
outsb
scas
lcall
mov
les
mov
and
push
inc
in
out
divl
jne
adc
push
je
jp
and
xor
push
shlb
ret
jno
cmp
adc
icebp
rcrl
jmp
sbb
adc
pop
adc
pop
gs
xor
mov
nop
push
and
mull
shll
mov
test
lock
and
cmp
lods
adc
mov
jno
mov
imul
cmc
int
xchg
xchg
adc
lret
sub
ret
inc
sub
jno
dec
pop
adc
adc
jl
pop
pop
adc
inc
cmpsb
sub
adc
dec
cmp
pop
pop
adc
iret
cmc
dec
int
rorl
xchg
insb
push
push
cmp
pop
adc
or
push
in
inc
sarl
cli
fs
out
push
dec
int
out
xor
sbb
mov
adc
xlat
mov
shl
adc
pop
loop
das
sub
outsl
ljmp
dec
or
sbb
pop
adc
jo
sub
pop
pop
adc
into
lods
popa
inc
add
adc
and
push
aaa
hlt
and
das
sbb
pop
adc
ljmp
pop
adc
push
insb
xchg
pop
enter
test
lcall
dec
iret
out
xchg
popf
pop
adc
fistps
mov
mov
fbstp
adc
jg
mov
rolb
pop
pop
pop
fldl
xchg
in
mov
xor
or
push
add
pushf
or
push
out
jmp
cmp
into
cmp
cmpsb
add
adc
icebp
mov
mov
inc
cmp
push
vmread
aam
mov
imull
movsb
or
xor
or
idivb
repnz
pop
adc
inc
xchg
xor
jp
aad
test
jg
leave
and
out
mov
mov
scas
ja
je
xchg
pop
fisttpl
mov
repz
or
movsl
repz
test
ljmp
lea
and
push
adc
std
ljmp
pushf
pop
adc
mov
or
std
inc
push
jne
negl
adc
pushf
pop
adc
pop
arpl
inc
xchg
cli
or
dec
popf
cmp
loop
pushf
pop
adc
or
push
mov
mov
dec
dec
sub
pushf
pop
adc
sub
std
pop
rcrl
add
loopne
pushf
pop
adc
sub
mov
pop
stos
add
pop
adc
pop
add
jbe
add
pop
adc
push
add
pop
adc
test
push
pop
add
je
add
pop
adc
cwtl
push
sbb
push
aaa
add
pop
adc
or
repnz
pop
adc
sbb
ret
add
pop
adc
ret
dec
and
repnz
pop
adc
adc
and
incl
pop
adc
mov
sahf
mov
jg
pop
pop
adc
ds
test
insl
test
sbb
pushf
jg
cmp
bound
adc
movb
pop
xor
es
sub
pop
adc
rcrb
and
mov
or
adc
ja
inc
cwtl
push
mov
adc
pop
adc
shlb
pop
adc
pop
push
sub
pop
adc
loopne
sbb
out
add
scas
xchg
cmp
gs
add
lds
xchg
dec
push
stc
xchg
out
loopne
pop
adc
ficomps
mov
out
fcompl
or
aaa
mov
pushf
pop
adc
push
addr16
adc
sub
js
div
fidivrl
mov
js
out
fcom
sahf
clc
mov
mov
and
mov
iret
mov
nop
add
fildll
pop
adc
add
adc
adc
adc
mov
popf
pop
adc
ds
add
pop
adc
cmp
inc
pop
adc
fsubr
inc
pop
adc
adc
adc
sbb
pop
adc
pop
adc
sbb
xor
jne
popf
pop
adc
dec
lock
pop
adc
cltd
and
int3
sub
lret
push
in
shrl
div
push
push
mov
sbb
mov
cmp
add
jns
cmc
pop
pop
inc
jnp
push
push
adc
pop
jle
push
xchg
push
cmc
ss
adc
adc
jb
int
outsb
jp
es
adc
push
and
adc
adc
adc
in
xor
test
push
pop
mov
mov
pop
je
jne
xor
push
adc
or
mov
adc
adc
lret
shlb
mov
push
adc
fwait
popa
nop
inc
adc
adc
xchg
inc
mov
pcmpeqd
sub
pushl
push
adc
js
inc
mov
pop
adc
adc
movsl
call
cwtl
es
adc
inc
adc
adc
fcom
lcall
jg
out
cmp
adc
sti
inc
xor
mov
add
adc
adc
hlt
cmpsb
pop
inc
push
fnstsw
stc
cmc
mov
push
adc
adc
xorl
cltd
mov
cmp
lods
fdivs
sbb
cmp
lods
add
or
push
adc
pop
dec
or
mov
mov
mov
hlt
js
test
mov
jne
lods
adc
adc
cmc
dec
aas
movsl
mov
sbb
mov
sub
mov
ret
mov
and
pop
add
add
add
cmp
add
xor
fcompl
push
adc
in
lods
es
adc
mov
add
nop
and
xchg
movsb
es
adc
and
pop
mov
stc
mulb
in
mov
push
adc
mov
cmp
scas
lahf
cmp
das
xchg
or
scas
add
jno
hlt
in
cmpb
mov
jmp
mov
cltd
or
scas
scas
scas
pop
and
testb
das
pop
cld
pop
mov
adcl
mov
fistpll
mov
outsb
pop
scas
cwtl
push
cmpsl
mov
lock
dec
pop
adc
jae
std
sti
jnp
mov
or
pop
adc
adc
adc
decl
out
std
lods
or
push
pop
push
xor
adcb
adc
mov
cltd
pop
adc
add
inc
adc
adc
imul
or
adc
imul
lds
adcb
adc
xchg
fxch
jbe
clc
or
aam
lahf
jmp
jne
push
mov
adc
adc
lods
add
pop
pop
sub
les
push
adc
shll
cmp
nop
ljmp
cmpsb
sbb
cmp
cmp
pop
jg
les
push
adc
mov
push
adc
mov
in
fimuls
cmpsl
sahf
in
mov
in
decl
jmp
out
out
sbb
push
aaa
push
and
jo
pop
adc
dec
add
xchg
dec
fimuls
pop
cmp
inc
jmp
sub
jle
mov
lret
push
insl
mov
jmp
add
mov
sti
pushf
mov
repz
jo
cmpsb
rdpmc
jnp
mov
xor
cmp
test
std
mov
adc
in
push
sub
cmp
orl
mov
mov
and
jp
jp
jne
adc
or
push
adc
rcrl
clc
and
xchg
mov
shlb
loope
data16
or
cli
and
push
mov
sub
xor
andb
mov
cmp
dec
sbb
lods
mov
nop
pop
adc
out
adc
ret
fiaddl
push
nop
in
cmc
dec
mov
inc
pusha
call
push
adc
xor
xchg
in
mov
orl
adc
mov
xchg
xor
mov
push
adc
mov
inc
xchg
test
jl
lds
jo
pop
sbb
iret
cmp
cmp
or
fsubrs
push
mov
aas
adc
gs
testb
push
lea
daa
and
mov
mov
pop
adc
push
aaa
sahf
jg
jne
movsb
cmp
imul
push
jg
and
pop
push
adc
dec
js
push
xorl
loopne
pop
xchg
fcoml
push
loop
jge
aas
mov
loope
stos
lahf
icebp
jno
leave
or
ljmp
test
rcr
sub
pop
mov
adc
cmc
mov
xchg
pushf
out
jmp
inc
or
pop
adc
adc
lods
lret
pushf
rcrb
adc
pop
adc
orl
cmp
adc
insb
or
pop
adc
push
pop
pop
adc
scas
adc
add
xchg
mov
pop
popf
pop
adc
mov
add
jbe
pop
popf
pop
adc
pop
adc
enter
int3
cmpsl
inc
popf
imul
je
les
mov
sahf
std
fdivs
ret
and
popf
mov
pop
add
push
adc
mov
pushf
pop
adc
sub
pop
adc
xacquire
adc
pop
pop
adc
mov
fsubr
subb
cld
pop
pop
adc
xor
add
push
adc
dec
aaa
leave
popf
cmp
in
xor
dec
add
pop
pop
adc
out
add
add
pop
adc
test
into
lds
pop
pop
adc
inc
pushf
pop
adc
cmp
and
insb
adc
adc
mov
fmulp
lds
pop
pop
adc
push
mull
insb
cli
aas
je
push
out
lret
dec
into
mov
mov
fdivr
pop
pop
adc
mov
pop
adc
sub
cld
pop
pop
adc
sub
lods
sub
hlt
pop
pop
adc
adcl
repnz
stos
mov
sbb
cld
std
sti
cmp
dec
pop
hlt
pop
pop
adc
sbb
hlt
pop
pop
adc
pop
pop
adc
fucomi
scas
add
inc
pushf
pop
adc
mov
pusha
or
add
push
fisubrl
cmp
fmulp
imul
addb
push
xor
inc
pushf
pop
adc
mov
mov
loop
mov
add
pusha
jp
adc
lret
push
adc
adc
and
or
adc
adc
pop
adc
jbe
movl
pop
push
adc
mov
push
adc
aam
add
out
xor
add
pop
adc
jb
adc
adc
adc
adc
faddl
jae
add
jmp
rorb
mov
adcl
outsl
call
and
cmp
dec
stos
sub
fimuls
clc
popa
jmp
adc
adc
or
lret
xlat
fwait
dec
sbb
dec
out
jp
xorb
adc
adc
mov
push
adc
adc
pop
push
sbb
leave
lcall
jno
cwtl
mov
clc
pop
pop
adc
packssdw
adc
adc
sub
add
mov
dec
gs
push
adc
scas
lods
sbb
add
pop
pop
adc
inc
or
cmp
adc
popf
repz
scas
pop
jmp
push
jecxz
pop
pop
sbb
mov
adc
lea
fisubrl
leave
mov
inc
cli
lods
xchg
mov
test
xlat
ret
mov
cwtl
ds
inc
xor
lods
addb
dec
nop
dec
lret
into
cmpb
pop
and
push
push
sbb
and
pop
and
std
or
dec
sbb
cmp
or
insb
jae
sub
xor
mov
stc
mov
add
lods
and
pop
inc
shl
sti
add
into
loope
lock
idivb
and
js
xor
push
xor
shlb
pop
push
daa
sbb
xlat
dec
and
ret
jecxz
jecxz
or
enter
test
fwait
and
sub
inc
mov
pop
xchg
xchg
xchg
adc
and
mov
jbe
jl
adc
mov
push
pop
stos
out
dec
sti
lods
and
in
pop
pop
adc
shlb
insl
dec
xlat
cld
lods
cltd
das
add
loop
fwait
aam
lock
out
xor
pop
mov
inc
mov
sub
mov
add
xchg
or
imul
inc
push
outsb
xchg
data16
movsb
mov
push
aad
jae
dec
loop
fcoml
stos
pop
push
jb
pop
pop
adc
lds
arpl
xchg
adc
mov
adc
stos
ja
fbstp
mov
push
adc
xor
in
sub
ss
pop
pop
adc
cmp
add
pop
pop
adc
pop
leave
jge
xor
and
mov
mov
fnstenv
in
pop
pop
adc
lods
ret
mov
je
pop
pop
adc
add
push
mov
lcall
xlat
add
add
aaa
je
pop
pop
adc
inc
push
icebp
mov
sub
push
adc
xor
fmul
xchg
mov
xor
dec
ja
std
lds
adc
scas
xlat
int3
sub
in
sub
test
mov
stc
ljmp
mov
gs
jne
ret
test
in
mov
imull
xor
nop
cli
cmpsl
cmp
jae
push
jmp
sti
je
imull
sarl
pop
ret
xchg
int
insb
jo
mov
cld
cmpsb
fildl
ja
lcall
in
or
outsb
iret
jbe
std
test
cs
adc
jae
fstpt
and
push
out
out
push
xchg
and
mov
arpl
sahf
pop
mov
andl
lds
out
push
cmc
imul
inc
sahf
arpl
pusha
dec
mov
test
orb
mov
add
xchg
sub
int3
mov
outsb
cmp
sbb
into
lock
mov
push
pop
div
lods
cmpsl
ja
cmp
lcall
jecxz
push
adc
adc
or
das
lcall
jp
ljmp
out
xchg
iret
cmp
cli
cwtl
adc
adc
push
and
xchg
dec
testb
nop
int
push
inc
mov
test
pusha
mov
stos
test
lods
lcall
movsl
add
arpl
test
out
mov
xor
repz
cmpsl
out
popf
dec
int3
dec
fcmovb
push
mov
mov
mul
sbb
scas
stc
cmp
scas
mov
lahf
sti
xchg
imull
fiaddl
call
push
xor
sbbb
lret
mov
lea
jno
popf
ret
arpl
jns
mov
loopne
mov
cmc
jnp
cltd
or
push
mov
shrb
stc
mov
clc
fists
xchg
in
mov
sub
dec
push
mov
inc
into
fcmove
fidivs
shll
das
dec
add
jg
adc
adc
xchg
or
cmpsb
lods
add
popf
push
out
movhlps
mov
xor
mov
movsb
les
or
xchg
movb
xor
add
xorb
mov
sahf
mov
and
xchg
data16
leave
xlat
decl
scas
or
loope
or
stc
pop
outsl
mov
lods
push
orl
in
dec
dec
and
hlt
leave
lahf
dec
or
adc
setns
iret
sbb
push
push
das
mov
mov
inc
and
xchg
sbb
sarb
lds
dec
or
ret
sub
cmpsb
les
push
adc
push
inc
mov
inc
rcrl
nop
mov
xchg
daa
pop
xchg
mov
fldenv
xchg
adc
mov
xchg
push
ret
test
add
lcall
ds
adc
adc
xchg
lcall
mov
dec
jno
push
mull
mov
sbbl
outsl
push
sarl
idivb
xchg
push
ret
insb
lcall
xor
pop
pop
in
and
or
lds
jecxz
lods
mov
sahf
mov
test
dec
jb
test
cmp
mov
cli
cmp
in
fstpt
push
pop
cmpsl
dec
popf
sub
adc
jl
xchg
cwtl
adc
adc
repnz
and
fistpll
cmp
or
std
jbe
jo
repnz
adc
insl
push
lods
hlt
mov
jbe
ret
mov
mov
adc
push
out
fstpt
pop
dec
and
jmp
sub
pop
bound
adc
pop
jo
add
lret
movsl
mov
loope
imul
mov
je
push
sbb
adc
cmp
int
icebp
out
jecxz
je
pop
pop
cmp
sub
push
pop
xchg
add
pusha
xchg
mov
fistpll
inc
pushf
mov
in
pop
cmpsb
popf
mov
xchg
mov
cltd
idiv
mov
leave
xlat
loopne
stos
cwtl
insl
js
ljmp
mov
mov
dec
mov
stos
lods
jge
push
shrb
xchg
mov
pop
mov
jmp
jbe
jne
mov
jne
sub
sub
jne
loop,pt
int3
sbb
adc
cmpsb
push
ret
add
out
push
lock
xor
inc
or
sbbl
lea
dec
insb
jl
adc
dec
dec
jmp
jg
sub
cs
outsb
cmp
sbb
push
jae
push
push
std
test
fwait
add
push
adc
fwait
insb
cltd
adc
sbb
arpl
stos
addr16
enter
xchg
pop
das
or
fldcw
adc
or
lret
mov
lds
lcall
and
arpl
fisttpl
pop
push
repnz
arpl
push
inc
mov
cwtl
mov
mov
jecxz
cmc
mov
and
ds
mov
jg
es
popf
aad
call
fs
push
xor
aam
mov
je,pn
adc
mov
popa
aam
sub
mov
adc
or
enter
ret
cmp
xorb
cmp
mov
pop
dec
aam
mov
aam
repz
lock
in
xchg
in
js
inc
push
cmp
push
lret
push
stc
or
cmpl
das
loop
xchg
sub
cmp
or
cmpsb
mov
inc
lcall
fdivl
jbe
pop
sub
cmp
test
ftst
adc
inc
pop
ja
dec
insl
push
or
call
lret
lds
adc
fs
and
sub
movl
add
iret
sbbl
cmp
dec
push
mov
cld
xor
push
adc
rcl
int3
call
into
push
pop
push
movb
mov
jnp
call
adc
jbe
js
push
adc
mov
sub
shlb
inc
or
xlat
and
jp
cmpsb
ret
das
outsl
xorb
inc
rcl
scas
push
adc
ss
cmp
pop
or
lret
lods
mov
out
dec
xchg
loop
cmpsb
push
sub
sub
xchg
and
cmp
imul
bndstx
aad
rolb
cmc
push
pop
sub
dec
insb
pop
pop
clc
inc
push
mov
shll
pop
stos
and
and
jnp
in
fxtract
mov
dec
mov
mov
hlt
jnp
pop
push
scas
aaa
push
in
jp,pt
jo
gs
je
sub
jb
mov
push
lret
jle
pop
mov
hlt
xor
jbe
cmc
jo
in
imulb
icebp
mov
lret
jo
cs
jns
xchg
mov
jbe
push
clc
jg
sarl
fidivl
mov
cmp
pop
mull
jo
outsl
movsb
xchg
jle
jp
std
adc
mov
mov
ds
cmp
pushf
mov
push
cld
test
decl
idivl
push
repnz
xor
jl
imul
push
decb
jnp
pop
push
hlt
jno
sahf
out
dec
bound
popa
lgs
cld
mov
xlat
call
cmc
or
popfw
mov
mov
mov
sti
cmpsb
and
lahf
xchg
jle
movl
jbe
repz
into
jp
cwtl
pop
jl
jmp
cld
jmp
mov
je
cmc
jnp
vcmpss
stc
mov
iret
call
cmpsl
lds
add
push
repnz
je
sti
les
and
nop
xor
mov
cmp
lcall
inc
pop
jp
out
push
repnz
scas
cmp
add
and
imul
ja
das
xchg
dec
push
cmp
sub
or
add
mov
popf
addr16
insb
mov
loopne
data16
popa
add
xchg
aaa
aas
divb
icebp
ja
icebp
jge
push
clc
cltd
mov
int3
lahf
icebp
mov
shl
outsb
mov
jmp
stos
add
movsl
and
mov
cltd
mov
dec
cltd
mov
sbb
mov
scas
fwait
imul
cli
or
xchg
mov
dec
loopne
dec
daa
cmp
hlt
or
sub
push
xor
sub
mov
loope
push
lret
cs
mov
insl
imul
jmp
mov
xchg
xchg
dec
shlb
dec
mov
jnp
jge
push
jbe
add
cltd
rcll
daa
out
stos
pusha
repnz
cld
fstl
mov
cmp
inc
scas
push
imul
add
mov
inc
pop
mov
lods
pop
sti
lds
subb
jp
cld
icebp
ljmp
ds
loop
push
adc
jo
fstpt
test
shll
pop
push
roll
fldl
hlt
xchg
in
idivb
xor
imul
and
and
xor
pop
ror
mov
and
xchg
xchg
fwait
pop
sub
sbb
cwtl
mov
movzbl
stc
mov
movsb
xchg
push
rolb
lock
lods
in
lret
xor
xor
and
push
pop
loope
pop
inc
or
mov
enter
add
mov
dec
and
ror
pop
jp
sahf
sbb
dec
push
gs
lds
repz
sti
sbb
ret
inc
cltd
fmul
stc
shll
jg
jb,pt
mov
mov
lods
dec
jne
cmp
std
lret
dec
adc
fidivl
addr16
scas
bound
test
test
or
rcll
mov
loope
fsubs
shrb
gs
bound
out
mov
rcrb
mov
jb
inc
in
jbe
sbb
sbb
push
and
js
lret
in
loop
cmp
sarb
orl
dec
mov
push
cs
xor
push
adc
sbbl
cmp
pop
cs
dec
cwtl
add
jge
push
aaa
push
pop
stos
mov
ss
loopne
xorl
mov
fldt
arpl
xchg
or
push
cmp
or
inc
xor
jae
cmp
dec
outsb
sub
or
mov
jg
mov
jl
aam
idivl
cli
jo
in
imull
jecxz
jp
xchg
push
clc
jl
xchg
int3
insl
cld
push
push
stc
jnp
mov
testb
popa
push
jb
add
xor
xor
pop
scas
movsl
mov
lahf
sub
mov
adc
loopne
fwait
inc
sub
es
mov
pop
ljmp
loopne
mov
xor
cli
in
arpl
scas
push
int3
popf
mov
inc
push
pop
xchg
push
repnz
pop
das
mov
out
mov
xchg
mov
loope
dec
neg
lds
jb
sub
inc
rolb
in
mov
jp
into
popf
cmp
dec
cmc
popa
les
je
sti
jp
stos
mov
fimuls
pop
push
in
jno
xor
xor
mov
jae
or
not
sub
pusha
cmpsb
mov
movsl
mov
lds
jmp
xor
aam
les
mov
in
xchg
sti
fdivl
bound
mov
scas
dec
enter
mov
hlt
es
idiv
mov
or
js
xchg
jne
mov
sub
or
mov
jne
lock
push
lret
jle
mov
cmc
fisttpll
shlb
and
or
jne
cmc
ja
jmp
cmp
cwtl
add
sti
mov
cld
cwtl
int
or
add
jmp
mov
jmp
mov
daa
cltd
adc
mov
popf
stos
or
jbe
out
and
jbe
inc
cwtl
pop
stc
popa
shlb
out
push
out
hlt
mov
mull
inc
lods
mov
loop
pop
push
xchg
mov
pop
jo
and
push
fiadds
lahf
test
mov
sub
sbb
sti
pop
fadd
scas
into
rcrb
jb
mov
jmp
fdivr
push
lods
xchg
gs
cmp
nop
push
sub
bound
xlat
pop
sbbb
push
scas
ret
and
sysexit
sub
xor
jo
or
and
and
lods
adc
dec
andl
in
aas
mov
xor
lock
dec
sub
pop
mov
mov
mov
fsubrs
pop
test
pushf
jae
call
pop
cmp
pop
adc
add
push
adc
cmp
daa
imul
push
aas
dec
andl
mov
iret
mov
jp
repz
push
repz
pop
adc
cwtl
cmp
add
dec
imul
lock
adc
adc
push
pop
addr16
call
cmpsb
ltr
dec
jo,pn
pop
adc
dec
add
jle
cmp
cmp
fwait
push
cld
rcrl
jbe
cltd
xor
inc
xlat
pop
inc
mov
jle
pop
inc
mov
aad
mov
mov
ss
sub
mov
mov
push
adc
fs
pop
adc
call
mov
mov
cmp
lods
dec
xor
outsl
cld
adc
adc
xor
or
pop
imul
cmpsl
push
shlb
push
pop
pop
loopne
out
push
xchg
out
add
popf
lods
jecxz
jmp
dec
aas
lods
loopne
jae
jge
mov
rorl
xchg
xor
shlb
cld
mov
pop
cmpsb
xlat
int
push
sarb
fnsave
pushf
add
jns
add
les
xlat
mov
jg
sbb
add
clc
inc
mov
movb
cmp
pop
scas
lret
pop
xchg
sub
cwtl
jb
outsl
dec
sbb
cmc
adcl
pop
xor
or
or
push
repz
fcos
je
mov
mov
sub
fcmovnu
insb
js
out
popf
mov
adc
adc
pop
and
cmp
jnp
std
sti
jnp
inc
out
push
loope
or
in
push
adc
lock
mov
inc
or
mov
pop
adc
adc
adc
cmpsb
add
in
sub
push
jbe
pop
adc
pop
fnstenv
jle
outsb
int
and
cmpsb
add
adc
mov
pop
stos
add
inc
xor
aaa
jmp
pop
dec
jo
xchg
adc
lret
shll
pop
fnstsw
add
les
push
adc
ljmp
ficoms
jg
lcall
xchg
pop
adc
adc
push
adc
pop
adc
and
bound
inc
pop
pop
adc
lods
pop
loope
cld
std
mov
frstor
inc
cli
aaa
jmp
mov
mov
inc
pop
pop
adc
dec
das
inc
push
out
pop
outsb
mov
pop
cmp
inc
cmpsb
lods
xchg
jae
sub
dec
nop
js
stos
jp
push
pop
pop
sub
add
loop
mov
adc
je
cmc
in
test
xor
and
adc
and
and
fldl
xchg
pop
adc
xchg
leave
pop
adc
adc
pop
pop
adc
mov
adc
adc
lock
pop
adc
xor
shlb
xlat
fidivrl
les
push
adc
xor
push
adc
add
call
lret
add
pop
adc
push
cmp
inc
lods
imul
xor
negl
imul
fcoms
mov
pop
adc
stos
nop
dec
dec
int3
adc
adc
fwait
mov
push
xchg
inc
cmpsb
arpl
dec
adc
adc
push
iret
xchg
pusha
or
lcall
sub
push
adc
test
sbb
aaa
mov
out
stos
xor
movsl
xchg
adc
adc
jp
and
adc
and
mov
insb
add
adc
sub
mov
fsub
and
int3
fwait
imul
sub
fwait
pop
adc
xchg
int3
fwait
pop
adc
cmpsb
pusha
adc
adc
int
jmp
xor
loopne
aas
movsb
lock
sbb
jo
stc
jno
es
stc
rcl
test
dec
xchg
push
insb
jp
movsl
mov
insb
cmpsl
nop
dec
fisttpl
push
adc
mov
xchg
dec
sbb
ss
pop
test
repnz
push
out
ret
or
inc
push
mov
adc
fdivrl
std
lret
addl
push
cmp
xor
mov
enter
aam
pop
fsubrp
out
dec
fiadds
out
jmp
sbb
lods
mov
and
jmp
mov
fistpl
add
jbe
fcmovnu
movsl
in
inc
push
push
fistpl
cmpsb
mov
and
inc
cmp
loope
xor
pop
into
jae
push
aaa
test
sbb
sub
xchg
aaa
cwtl
xor
xchg
or
outsl
jb
mov
xchg
adc
cmp
xchg
out
and
mov
inc
push
adc
dec
and
push
dec
adc
push
adc
movsl
scas
popa
cmp
ret
push
fsts
inc
mov
jmp
mov
mov
pop
or
jo
ja
pop
pop
cmp
xor
sub
add
adc
adc
enter
dec
sarl
outsb
movd
sub
in
sarl
and
xor
pop
or
cmp
repnz
jge
ja
in
mov
shl
push
bound
cwtl
adc
adc
and
mov
sub
aam
and
adc
rcr
sub
cmpsl
pop
les
xchg
pop
inc
add
stos
ja
push
add
mov
xchg
jo
lea
bound
xor
popl
jp
mov
cmp
insb
pusha
dec
jl
je
into
popf
cmp
popf
cmp
pop
ret
pop
in
jmp
or
push
pop
les
xor
mov
jbe
std
push
ja
ss
std
sti
test
xorb
add
cmp
lahf
dec
popf
cmp
jo
pop
adc
mov
xchg
and
insb
lret
xor
scas
fs
mov
jge
inc
xorb
je
adc
cmp
xchg
sbb
adc
stos
mov
fistpll
add
jo
pop
in
or
dec
dec
cmp
cmp
xchg
cmpsl
repnz
jbe
cmp
adc
jns
paddusb
arpl
pop
inc
addb
bound
add
add
outsb
fbstp
cmc
xor
xor
xor
dec
das
imul
xchg
mov
cmp
add
or
adc
adc
sub
pop
mov
pop
adcb
inc
enter
add
ss
fcomp
and
mov
fidivrs
fwait
out
pop
in
adc
mov
stos
adc
adc
push
dec
and
cs
sbbb
push
adc
xlat
mov
pop
add
ljmp
and
jae
fimuls
pop
mov
aaa
push
sbb
test
push
push
dec
int
jg
aad
cmpsb
mov
leave
xrelease
ss
js
popa
mov
cmp
mov
lret
adcl
xor
push
adc
dec
jp
scas
jbe
jle
inc
sub
push
adc
and
sbb
daa
push
adc
cmc
loopne
sahf
xchg
packssdw
and
mov
add
fwait
jmp
dec
in
mov
jns
xchg
pop
js
sarb
daa
int3
jae
pop
test
mov
sub
loopne,pn
mov
femms
loope
mov
push
adc
mov
sbb
push
adc
adc
add
sahf
out
fnstsw
sub
cmp
mov
mov
mov
lahf
clc
mov
inc
notl
gs
stc
fmuls
sub
jg
or
push
adc
or
mov
dec
sbb
rcll
outsb
push
xor
jnp
xlat
pop
negl
inc
adc
adc
adc
mov
cli
cwtl
mov
int
lea
fucom
push
xor
out
popf
push
hlt
imul
adc
and
adc
adc
jg
add
nop
xchg
adc
leave
mov
push
add
pop
adc
rol
mov
ffree
shll
pmulhw
mov
adc
in
daa
push
jp
lret
inc
or
popl
jg
push
pop
push
adc
fildl
in
dec
out
mov
push
gs
jg
jp
adc
xor
jae
push
cltd
sub
lds
lahf
out
jb
pop
push
inc
daa
push
adc
push
out
sbb
jecxz
xchg
dec
xchg
dec
xchg
pop
add
shrl
loope
loope
daa
push
adc
ss
adc
add
aas
mov
nop
push
popa
sub
enter
lods
inc
cmp
imul
jle
adc
jno
fwait
jg
jecxz
sahf
xchg
add
mov
xlat
test
addl
xchg
addb
cmp
les
bound
add
xchg
mov
cli
mov
sbb
es
lods
pop
sub
adc
sti
mov
add
mov
sub
loopne
fbstp
xor
xadd
cmpsb
ret
shr
lahf
in
std
inc
subb
adc
int3
and
sbb
cmp
push
cmpsb
leave
xchg
jne
and
cmp
jg
add
fnstenv
movsl
mov
clc
lret
sub
adc
add
push
adc
and
sbbb
adcl
pmaddwd
test
pushf
cmp
push
stc
das
hlt
mov
sti
imul
mov
insl
mov
leave
add
popf
cmp
in
icebp
das
les
lock
std
sti
imulb
xchg
loope
xchg
inc
rorl
pushf
jge
pop
mov
repz
cmp
push
ja
je
push
pusha
movsl
and
jp
es
int3
mov
pop
xchg
add
push
adc
cmp
cmp
hlt
cli
stos
push
jge
ljmp
fcompl
push
dec
xchg
out
or
call
add
pop
les
or
inc
cmc
mov
lds
mov
adc
pop
daa
dec
xchg
inc
push
sbb
jg
iret
jl
pop
adc
inc
adc
jnp
adc
inc
test
adc
bound
xor
sbb
sarl
fstpl
imul
jl
pop
adc
xchg
ret
cmp
sub
mov
addb
jl
sbbl
clc
jb
adc
adc
enter
adc
cld
adc
adc
cmp
addr16
scas
xor
sub
movsb
jmp
pop
xchg
dec
jg
int
out
sbb
dec
pop
adc
cmp
jno
xor
adc
dec
inc
scas
add
push
adc
popf
mov
sahf
pop
adc
arpl
test
mov
mov
adc
shlb
cwtl
inc
jne
inc
les
adcl
add
out
pusha
fs
pop
adc
ffreep
jb
mov
mov
inc
addb
sbb
shrl
inc
jecxz
scas
sbb
mov
outsb
mov
cli
mov
lret
fnstsw
lcall
cltd
pop
aam
sub
push
pop
mov
cmp
pop
sahf
push
pop
jl
pop
adc
jo
jle
imulb
cmp
dec
lea
mov
fstpt
dec
insl
adc
imul
std
arpl
xchg
push
sbbb
and
sbb
mov
hlt
jnp
negl
mov
jmp
gs
xor
xchg
and
int
scas
xor
mov
add
inc
shr
xchg
lea
jge
fcoms
jbe
fmull
mov
xor
add
xchg
jb
fcmovu
ja
test
push
cltd
rcll
mov
daa
pop
push
int3
test
mov
mov
pop
and
push
bound
adc
aaa
cwtl
inc
ja
pop
xchg
loop
inc
pop
adc
decb
out
inc
lret
or
or
sahf
sbb
push
xchg
sti
push
scas
dec
ret
test
and
jp
cld
mov
sub
rcl
shlb
adc
sbb
movsb
inc
cmp
sub
pop
adc
adc
adc
adc
mov
fwait
jl
outsb
adc
pop
movsl
mov
pop
scas
jmp
pop
cmp
jle
jnp
jo
pop
adc
ret
pop
push
mov
loop
scas
add
subb
push
adc
jnp
test
enter
and
dec
popf
bound
pop
pop
adc
sti
enter
das
mov
fiadds
add
push
adc
adc
enter
xchg
pushl
cmp
jae
adc
popa
xor
enter
adc
xor
cwtl
hlt
sub
cmc
cmp
decl
jb
mov
jno
xchg
cmp
nop
add
je
pop
shlb
out
sub
scas
jg
shlb
cmp
pop
adc
std
incb
mov
adc
enter
hlt
mov
pop
pop
adc
nop
cmp
je
push
sti
xor
scas
ss
jmp
pop
pop
adc
cwtl
enter
scas
dec
popf
cmp
adc
cmp
enter
sarl
xor
push
adc
loop
push
jg
ljmp
sub
and
push
ret
out
icebp
mov
les
push
adc
or
sti
imul
fstpt
xor
cmp
mov
adc
inc
das
add
sub
push
adc
cwtl
and
insl
push
adc
adc
mov
lds
jmp
adc
adc
cmpl
inc
ret
enter
shlb
je
movsl
int
or
jo
pop
adc
call
std
les
inc
sbb
mov
sub
sbb
shr
fstpt
mov
inc
or
mov
inc
jb
adc
adc
push
adc
ret
and
sbbb
pop
ja
cmc
divl
add
aaa
dec
push
xor
add
pop
cmp
cwtl
add
fistl
adc
mov
es
adc
pushf
aam
jae
inc
in
mov
push
adc
repz
std
lahf
aam
pop
sbb
or
cmp
stc
push
insl
sbb
push
or
mov
xchg
nop
cmp
in
or
arpl
and
fdivr
mov
leave
cmp
push
ds
pop
ss
test
mov
out
nop
sub
lock
jno
sbb
inc
xor
cmpsb
adc
push
adc
cmc
push
clc
push
sub
mov
es
adc
in
xor
dec
inc
rolb
xor
dec
fists
inc
sub
cmp
jecxz
jne
pop
dec
mov
mov
adc
gs
out
movq
or
jp
andb
pop
daa
pop
cmp
mov
fucomp
in
push
xchg
lahf
pop
pop
lock
aam
inc
mov
lret
mov
adc
fldt
adc
adc
adc
in
pop
movsl
sarl
outsb
movsb
aas
fldt
shlb
adc
movsl
jp
and
clc
pop
dec
sti
push
mov
pop
adc
lods
jp
fisttpl
mov
hlt
inc
pop
adc
insb
cmpsl
nop
imul
sarl
mov
push
adc
fbld
jecxz
mov
adc
addr16
lret
aas
jno
popa
jo
movsl
mov
into
rcrb
std
xchg
mov
daa
cmc
cwtl
in
fs
and
testb
push
bound
movsb
fbstp
adc
in
jmp
dec
dec
jae
add
jo
pop
adc
jmp
cltd
hlt
int
jl
pop
fwait
hlt
adc
adc
pop
ds
mov
test
out
pop
push
sti
mov
adc
adc
add
dec
daa
push
adc
ljmp
pop
add
sbb
inc
insb
adcb
adc
cmpb
cmpsb
int3
nop
mov
mov
sub
adc
hlt
in
mov
outsl
fidivrs
mov
mov
mov
sbb
and
mov
add
test
and
shlb
rol
mov
pushf
pop
adc
push
and
inc
outsl
add
cmp
call
insl
fidivrs
push
adc
call
in
fistpll
jmp
and
push
sbb
into
popf
cmp
loopne
outsl
cmpsb
mov
mov
add
pop
in
pop
pop
adc
and
sbb
vmovaps
and
popf
cmp
iret
mov
jp
push
add
mov
mov
into
imul
popf
les
pushf
pop
adc
ljmp
and
ja
xor
sub
bound
add
mov
mov
add
push
adc
sbb
adc
xchg
jnp
bound
les
fs
inc
mov
les
add
xlat
inc
daa
push
adc
add
aas
mov
pushf
pop
adc
les
push
adc
pop
push
out
pushl
inc
add
adc
add
pushf
iret
les
adc
adc
sub
fsubrp
pop
pop
adc
xor
es
sbb
jb
jbe
cmp
sub
inc
push
jae
aaa
or
and
pop
pop
adc
sbb
mov
cmp
sub
cmc
or
adc
adc
adc
push
mov
pop
cmp
mov
lret
and
ret
daa
mov
aad
add
push
adc
test
pop
adc
cmp
ljmp
int
push
adc
pop
adc
imul
pop
pop
adc
lahf
mov
push
and
xchg
xor
pop
repz
movsl
fcoml
out
mov
or
std
popf
nop
cmpsl
lret
mov
fwait
mov
cmp
xchg
scas
fistpl
pop
aam
je
cmpl
adc
cmp
dec
in
jnp
or
cltd
repnz
aam
and
mov
cmc
call
xlat
mov
adc
adc
cmc
push
sti
mov
xchg
pop
adc
pf2iw
adc
adc
inc
add
jb
adc
adc
or
and
push
adc
xor
aad
test
pop
push
adc
fs
pop
adc
cmovs
mov
orl
xchg
test
shrb
sahf
pop
xor
pop
mov
pop
pop
adc
fsts
lea
addb
leave
fcompl
fdivr
xchg
jns
out
scas
rcrb
cmpsl
xorl
notb
xor
sbb
add
fwait
add
cmpsb
mov
lcall
inc
jb
inc
rcrl
in
imul
insb
rcrl
mov
push
adc
pop
pop
adc
dec
inc
jbe
dec
mov
sbbb
pop
and
xlat
dec
aad
pop
pop
adc
inc
mov
mov
loop
std
xchg
lahf
test
pop
adc
into
push
pop
pop
adc
sahf
notl
add
jg
sub
aam
stc
sbb
cmp
xchg
push
fsubl
pop
jmp
lcall
adc
adc
inc
or
adc
adc
jp
inc
pop
adc
clc
inc
pop
adc
adc
aad
out
shll
popa
jg
mov
ds
xor
clc
inc
pop
adc
pop
adc
dec
adc
push
adc
cli
add
loop
adc
adc
xchg
mov
mov
add
inc
mov
daa
push
adc
mov
adc
adc
cmc
jl
push
adc
sub
adc
adc
cmp
and
xacquire
adc
out
jp
adc
les
mov
xchg
mov
fadds
jo
ret
jbe
shrl
lret
cmc
les
sub
int3
adc
adc
xchg
popf
idivl
daa
push
add
mov
push
cli
jecxz
pop
andb
add
add
xor
enter
imul
int3
pop
pop
adc
push
adc
mov
pop
pop
adc
or
lds
pop
pop
adc
push
inc
addb
push
add
add
in
adc
pop
adc
inc
sbb
mov
sub
lret
add
add
add
fldl
jae
inc
xchg
pop
adc
and
mov
xor
lods
add
push
adc
test
xlat
aam
pop
adc
cld
rclb
push
adc
jmp
in
fstpt
loop
inc
xchg
sahf
fcomps
adc
sarl
and
add
add
xchg
dec
addr16
adc
cmp
mov
hlt
sub
shrb
ret
mov
out
fstp
pop
pop
adc
adc
cmp
rolb
sbb
idivl
pop
adc
pop
pusha
out
fdivs
push
adc
pop
pop
adc
stc
and
jmp
lahf
xchg
adc
adc
mov
rorb
adc
in
add
sub
mov
xchg
int
mov
pop
pop
adc
insl
sub
imul
xorb
cmpl
ret
mov
out
xor
int3
pop
pop
adc
adc
adc
push
inc
jp
pop
rol
cmpsb
mov
out
leave
xrelease
mov
repz
lcall
mov
lcall
fsubs
in
inc
mov
leave
xor
push
adc
lret
cmp
adc
adc
jp
and
adc
or
push
addl
stos
scas
cltd
ljmp
adc
adc
int
sbb
adcb
adc
cmp
in
sbb
or
or
add
cs
jns
pop
jnp,pt
test
and
mov
adc
cmp
loopne
in
js
inc
inc
add
ja
rcr
jp
ds
push
imul
ds
push
push
push
push
test
aas
repz
pop
adc
xor
adc
jmp
jl
clc
add
pop
adc
mov
movsl
fwait
and
loopne
and
sbb
xchg
mov
sbb
jnp
mov
je
pop
pop
adc
cwtl
fists
inc
xchg
inc
mov
pop
pop
adc
loope
jmp
jge
xchg
loopne
xor
js
pop
adc
lock
arpl
pop
add
push
adc
call
jns
and
pop
pop
adc
push
mov
fcmove
jge
mov
sbb
into
in
pop
pop
adc
pop
jnp
mov
pop
pop
adc
mov
sbb
dec
insb
popa
or
dec
sub
sbb
ds
fmuls
lods
imul
dec
sub
std
jmp
inc
sub
hlt
in
add
xlat
pop
cld
pop
call
inc
mov
mov
ja
test
adc
rcrl
mov
cmp
xchg
inc
movsb
fcom
popa
xchg
jo
push
adc
in
mov
daa
and
arpl
or
addl
test
scas
fistl
stos
jl
mov
cmp
adc
insb
mov
mov
pop
sub
jl
push
adc
outsl
mov
sbb
add
xchg
and
fmuls
popf
ror
adc
xchg
add
inc
es
incb
ljmp
cmp
mov
mov
adc
xor
push
adc
add
incb
out
pop
adc
adc
stos
inc
dec
cld
bswap
bound
xorl
out
stos
inc
adc
adc
xor
pusha
sub
adc
loop
roll
jo
pop
adc
pop
dec
and
bound
add
add
mov
dec
sbb
xor
adc
xor
pushf
shll
dec
negl
and
pop
iret
addl
gs
imulb
mov
jecxz
pop
in
les
adc
add
and
cld
cmpsl
jbe
xchg
add
fisubs
out
cmp
mov
push
sub
adc
dec
inc
addb
jb
add
add
push
xor
std
icebp
inc
sub
push
adc
iret
add
add
dec
add
xlat
and
jp
or
mov
push
imul
adc
jb
add
add
dec
xchg
and
sub
adc
jb
arpl
dec
sub
jae
or
in
fldlg2
xor
jge
mov
je
cmp
popf
cmp
sbb
adc
fwait
mov
lock
xor
shll
mov
mov
loopne
idivb
add
xchg
mov
in
stos
push
les
es
int
sbb
inc
add
jge
imul
sbb
inc
mov
sbb
push
std
xchg
cmp
insl
aad
add
push
adc
sub
add
dec
lods
arpl
or
adc
pop
mov
sti
test
lret
push
adc
or
dec
lds
test
sub
ds
and
mov
inc
addl
idivl
shlb
and
std
jo
pop
adc
scas
scas
nop
mov
adc
leave
lcall
mov
sti
adc
sbb
cli
clc
jnp
loope
or
out
in
rcr
pop
stos
add
aaa
jnp
sub
lcall
std
dec
cmp
loope
movsl
ljmp
mov
mov
push
mov
fcoms
loopnew
ret
addl
loop
jecxz
inc
popf
mov
adc
jno
push
lret
adc
push
adc
mov
inc
xchg
mov
or
pop
sar
pushf
sub
adc
dec
mov
xorl
push
adc
dec
jo
mov
dec
mov
sbb
les
adc
test
push
fisubrs
xor
pop
xchg
pop
comiss
movsb
inc
xor
sbb
push
lahf
lahf
jmp
mov
int
add
bnd
push
loop
mov
and
xor
and
and
dec
inc
aam
add
punpckhbw
imul
push
xorl
adc
adc
push
sbb
test
mov
movsb
cmc
rcr
lea
mov
xchg
xlat
pop
mov
push
adc
jle
ss
push
sub
push
adc
stc
jbe
adc
dec
cmpl
xor
pop
pop
ficoms
lret
jne
outsb
xor
sbb
pop
dec
repnz
push
inc
sub
fwait
int3
xlat
movsl
dec
push
inc
xchg
push
call
dec
and
cltd
mov
fldcw
mov
pop
mov
cmpsb
shlb
imulb
jnp
pop
xor
es
jl
push
adc
push
inc
insb
and
push
adc
add
mov
adc
adc
stos
aaa
sub
adc
adc
imul
fcmovnu
imul
jns
bound
lods
cmp
mov
adc
adc
ja
call
cmpsb
add
in
mov
jl
shl
sbb
pop
xor
aaa
iret
ljmp
push
adc
es
xchg
mov
xor
dec
into
insb
mov
in
push
adc
add
fdiv
in
aam
cltd
fidivrs
push
fs
aaa
push
lret
outsl
and
jb
insl
stos
jg
push
pop
jnp
mov
jmp
call
js
fsubr
xchg
aas
push
std
incl
mov
repnz
into
movsb
jg
mov
aad
adc
das
jb
outsl
scas
push
aaa
push
hlt
in
loopne
xchg
popf
mov
faddl
mov
repz
mov
lret
outsb
jne
jg
hlt
mov
jbe
ret
push
xchg
stos
pop
and
movsl
mov
or
jne
jg
testl
mov
xchg
add
sub
or
xor
lods
add
adc
aam
push
adc
in
adc
adc
gs
and
pop
jg
scas
mov
cmp
add
bound
fisubl
pushf
adc
sbbl
test
sub
adc
adc
mov
lret
push
adc
jp
clc
cltd
ds
mov
dec
jg
cmp
dec
sti
sti
xor
es
mov
pop
jecxz
xchg
xor
jo
pop
adc
sub
inc
mov
lahf
jmp
in
jmp
js
pop
xorb
xchg
pusha
jp
adc
adc
xchg
jbe
push
loop
pop
adc
and
xchg
push
push
cmpsb
movsl
sub
xlat
enter
fwait
outsl
insl
mov
adc
adc
xor
mov
test
mov
adc
fldenv
outsb
jo
push
adc
and
adc
xor
xor
pop
mov
pushf
push
mulb
gs
jno
push
adc
lcall
mov
flds
adc
adc
mov
adcb
adc
jne
pop
pop
adc
cld
popa
sub
adc
les
push
adc
sbbb
adc
adc
dec
ret
and
lods
push
cld
cli
sub
sbb
stc
adc
loope
mov
in
xor
fimull
mov
dec
subl
cmc
dec
repz
lret
sub
mov
mov
std
pop
shlb
addb
fwait
adc
xchg
xor
jp
fcmovne
sbb
enter
jo
pop
sti
adc
jns
mov
mov
xor
flds
pop
mov
and
js
mov
adc
dec
inc
in
adc
std
scas
loopne
sbb
add
data16
pusha
mov
add
adc
jo
pop
adc
and
ret
loope
mov
push
lret
int
es
adc
add
lret
add
jmp
xchg
divl
les
aaa
data16
mov
addr16
push
xchg
hlt
and
dec
dec
xchg
adc
incb
je
pop
pop
inc
pop
cli
hlt
push
xchg
les
adc
repnz
rol
lods
es
adc
lock
fdivl
jbe
ljmp
jnp
mov
jns
mov
push
outsb
xchg
pushf
out
xor
mov
push
inc
dec
mov
shlb
add
inc
scas
or
push
adc
lock
cwtl
adc
adc
ja
xor
lret
sub
xor
bound
call
loop
jg
cmpsl
inc
inc
adc
mov
and
xor
cs
outsb
xor
lock
adc
sub
lods
data16
pop
pop
adc
fcoms
push
adc
xchg
mov
adc
adc
out
fwait
pop
adc
int3
fwait
pop
adc
ljmp
in
scas
push
fistps
xor
jne
cli
hlt
sbb
jg
jg
add
jb
or
mov
sbb
ss
lds
mov
adc
adc
add
or
push
adc
scas
sub
ss
into
imul
cmc
cmp
pop
jmp
sbb
add
insb
jp
pop
pop
adc
call
push
subb
inc
push
fisubl
adc
out
in
adc
adc
aam
decl
inc
xor
in
pop
or
adc
adc
adc
pushf
pop
adc
mov
adc
adc
ja
fstpt
scas
test
or
cmp
sbb
adc
call
adc
adc
pop
push
mov
push
push
or
lods
cmp
lock
daa
adc
push
jmp
adc
adc
mov
fs
pop
adc
adc
sbb
mov
test
dec
pop
fs
pop
adc
pop
adc
rclb
push
adc
test
inc
add
mov
adc
adc
pushf
pop
adc
pop
and
pop
pop
adc
out
cmp
inc
jmp
rcrl
jo
pop
adc
adc
pop
pop
adc
pusha
jp
adc
jae
dec
out
out
in
adc
mov
rcll
jp
dec
xchg
out
mov
addr16
push
pushf
pop
adc
in
push
xor
push
mov
pop
roll
lahf
movsb
out
enter
cld
and
or
lret
push
adc
pusha
popf
pop
adc
cmc
fdivl
pop
push
adc
push
adc
sbb
adc
jp
adc
jmp
add
cmp
jl
push
pop
push
adc
es
dec
adc
adc
aam
add
lret
ret
gs
adc
adc
fmul
mov
sub
push
pop
adc
adc
mov
adc
mov
data16
int
adc
adc
js
repz
adcb
adc
xchg
out
insl
int
push
rcr
jl
adc
adc
xchg
xchg
xor
fisttpll
cmpsl
movsl
push
mov
adc
adc
mov
or
cltd
or
movsb
xchg
dec
cli
lea
mov
inc
out
push
and
test
cmp
add
jnp
sub
adc
jo
push
adc
adc
push
jbe
xor
jns
pushf
xor
push
adc
ret
xor
adc
and
sbb
adc
imul
ss
jbe
fdiv
pop
hlt
mov
xchg
adc
daa
jle
jmp
insl
ljmp
push
lret
iret
and
mov
clc
sbb
adc
adc
mov
hlt
decb
adc
xor
adc
pop
and
adc
test
lods
push
jecxz
inc
sub
aaa
inc
sbb
adc
adc
adc
push
pushf
pop
adc
sbb
adc
adc
sbb
pop
adc
lods
push
pop
xchg
sub
adc
adc
je
xchg
ret
pop
adc
mov
dec
jp
ljmp
fnstsw
sub
jnp
cld
pusha
ljmp
pop
jbe
pop
fdivl
loope
dec
cwtl
jp
pop
jne
jp
pop
imull
xor
das
xchg
sbbb
jle
push
xor
mov
jne
out
rcrl
mov
je
incl
ljmp
xchg
jg
imul
popf
pop
adc
mov
shl
mov
mov
lret
mov
jmp
incb
out
sbb
push
adc
cs
and
add
lret
ja
and
push
adc
in
pop
ja
xchg
or
adc
adc
pusha
jp
adc
lret
push
adc
je
fcos
jge
push
sti
dec
xchg
sti
inc
int
dec
mov
imul
mov
repz
repz
das
sbb
fisubs
push
in
shrl
roll
cmp
or
in
mov
ds
jl
mov
mov
push
push
adc
cli
sbb
incl
call
sbb
lea
in
call
push
adc
jg
lret
push
adc
xor
mov
push
in
sub
and
push
push
adc
lcall
jmp
adc
adc
xchg
out
mov
lock
push
adc
inc
adc
adc
ss
scas
jp
decb
and
push
leave
pushf
cmp
jo
pop
adc
insb
and
mov
stos
jne
stc
repnz
fnstcw
sub
sub
outsl
ja
cli
jmp
mov
fstpt
ljmp
or
push
adc
movsb
mov
cltd
xor
pop
out
data16
adc
adc
add
add
jb
icebp
in
xor
jb
and
jo
xchg
xor
and
add
push
adc
adc
xor
test
push
adc
in
and
pop
fidivrs
ljmp
stos
ficompl
sahf
jne
lods
jle
cld
pushf
pop
cmp
in
or
add
sbb
add
push
adc
lret
push
adc
mov
cmp
adc
adc
stc
popa
sub
sub
adc
idivl
int3
sub
adc
in
or
mov
call
inc
and
aam
ljmp
mov
cmp
push
adc
xlat
lods
and
pop
lods
insb
push
mov
add
mov
jns
jns
xchg
xor
or
lret
dec
push
lock
cmc
test
push
adc
dec
cmp
add
push
rorl
jp
and
jge
popa
adc
ret
rorb
loop
push
mov
xor
or
int3
adc
scas
int
sub
adc
adc
rorb
adc
cmp
add
push
adc
iret
out
pop
repz
push
adc
pop
outsl
add
repnz
jg
lcall
ficoml
stos
and
xchg
out
arpl
push
adc
or
jo
xchg
daa
push
adc
adc
adc
push
jmp
and
xor
adc
adc
mov
push
adc
sub
adc
mov
dec
nop
sub
adc
lret
sbb
cld
or
adc
mov
jo
push
adc
dec
pop
mov
jb
push
sbb
push
mov
fildl
mov
sub
sbb
mov
fwait
jne
xlat
pop
scas
lret
stos
les
es
lea
call
data16
loop
add
pusha
das
das
das
rcr
test
dec
sub
mov
inc
outsb
cmp
clc
mov
jg
out
mov
aas
aas
lods
fwait
not
sub
test
sbb
lea
test
adc
mov
mov
aaa
lret
pop
cmp
mov
fdivp
push
adc
loop
adc
adc
sub
jp
sti
idivb
push
adc
mov
push
pop
xchg
add
cli
dec
std
ljmp
pop
ja
sbb
or
cs
cmp
mov
popf
cmp
adc
cmp
imulb
adc
adc
xchg
les
push
adc
insb
or
lcall
lock
add
adc
repz
bound
push
mov
push
adc
fistpll
pop
mov
push
mov
pop
jns
cmc
out
push
stc
daa
into
nop
adc
adc
fs
outsl
test
sbb
stos
cmp
mov
mov
rcll
sub
add
push
adc
mov
jbe
pushf
ret
lea
or
push
adc
call
movsb
mov
ljmp
mov
loop
jb
and
push
in
shll
adc
cld
std
enter
xor
mov
inc
in
js
repz
ja
push
cmp
std
ljmp
repnz
jle
push
lahf
cmp
mov
popf
cmp
mov
add
jmp
adc
adc
mov
fnstcw
push
adc
mov
fwait
ds
test
jo
jae
sbb
push
mov
pop
jp
push
nop
dec
pusha
sub
rcrl
jne
fucomp
sub
call
cmp
pop
inc
push
mov
dec
aam
dec
adc
mov
loopne
jl
divl
push
std
in
jbe
cmpl
jp
out
xor
dec
pop
adc
mov
int3
sub
adc
into
sub
jecxz
pop
push
dec
dec
lods
adc
adc
fwait
repz
stos
shrb
xchg
dec
lods
arpl
push
adc
fcoml
push
adc
pop
fidivrs
xchg
daa
push
adc
imul
adc
in
adc
sub
stos
hlt
adc
adc
sbb
call
fwait
popf
fwait
jns
call
lock
adc
ja
cmp
jg
lock
and
adc
inc
pop
adc
pop
or
adc
adc
cmp
adc
push
das
dec
and
in
adc
adc
fnstsw
daa
lahf
adc
das
rcr
jg
adc
adc
dec
jmp
in
mov
ret
rol
pop
arpl
sbb
adc
iret
fcoms
push
adc
sbb
sbb
int
xor
mov
adc
adc
mov
jno
dec
pop
ret
push
xlat
jnp
or
push
adc
frstor
or
dec
jae
shrb
jle
or
push
adc
xchg
lcall
push
adc
gs
adc
adc
add
push
adc
sub
js
adc
adc
and
dec
mov
and
adc
adc
test
push
push
out
loopne
mov
nop
mov
xchg
sub
lea
push
jp
push
jmp
sub
lret
movsl
mov
movsl
xor
js
add
push
adc
sti
dec
insb
mov
enter
les
push
adc
lock
js
rorb
adc
adc
test
nop
adc
adc
mov
adc
inc
in
cltd
in
hlt
push
and
add
mov
mov
add
cld
mov
andb
add
push
adc
pop
cmp
out
inc
lret
pop
jb
outsb
xchg
adc
adc
xchg
cmp
movsb
es
mov
sub
fdivrl
pop
adc
fiadds
repnz
or
push
inc
les
into
mov
xor
inc
subb
sti
movsl
mov
jmp
xchg
xor
cs
dec
lds
jnp
jle
repz
mov
enter
push
lret
test
xor
ja
sbb
xchg
mov
mov
ja
jns
mov
and
enter
dec
sub
add
add
xor
movb
vpunpcklqdq
pop
mov
imul
add
jl
jmp
dec
nop
in
or
lea
adc
mov
cmp
mov
jg
mov
pop
cmc
jp
sti
push
fwait
pop
mov
sbb
xor
and
mov
and
mov
orb
push
adc
xchg
and
xor
fs
lret
mov
les
pop
pop
cmp
jl
repz
std
sti
idiv
push
and
and
cltd
in
adc
add
sub
and
arpl
push
inc
addb
or
adc
ljmp
push
adc
jl
pop
mov
mov
jg
inc
xorb
add
add
dec
and
xchg
sbb
rorb
xor
adc
jecxz
lds
add
ja
dec
add
or
jne
and
je
xor
inc
sub
adc
adc
mov
and
jo,pn
xchg
add
push
lret
push
adc
jb
xor
rorl
mov
data16
sbb
sti
scas
scas
jg
pop
imulb
cwtl
test
and
cmp
das
mov
stc
mov
sub
cmp
push
adc
aas
sbb
xor
mov
xor
push
adc
and
xor
adc
cli
sub
push
adc
js
imul
leave
adc
test
daa
popa
mov
adc
adc
pop
or
push
dec
daa
arpl
jg
test
jo
pop
adc
lods
add
sub
jne
fnstsw
aas
jb
mov
mov
cltd
sbb
jns
jl
clc
test
and
in
push
jle
loopne
pop
imul
fsubs
pop
insl
in
jl
clc
adc
or
mov
sub
ds
mov
adc
lock
push
mov
mov
mov
jp,pt
jne
inc
stos
arpl
stc
subb
or
loopne
push
sub
xor
test
inc
push
out
mov
shrl
les
sahf
jae
push
sbb
adc
adc
fiaddl
adc
adc
imul
cmpb
fdivrl
mov
les
push
adc
adc
sub
adc
orl
adc
test
pop
xorb
imul
adc
adc
cmp
jo
and
inc
in
pop
sbb
push
adc
insb
mov
xor
push
adc
adc
lods
xor
mov
adc
pop
insb
add
cmp
push
sbb
push
adc
jnp
out
add
out
lret
dec
dec
dec
jmp
pop
mov
js
sbb
mov
xchg
test
ror
jle
xor
aas
or
jo
push
adc
adc
pop
sub
adc
adc
dec
push
loop
das
sub
cs
outsb
and
push
adc
cmpsl
xchg
sub
adc
adc
fs
loop
ficomps
rolb
push
mov
xchg
test
pop
sub
fsubrs
outsb
cwtl
adc
adc
or
mov
lcall
pop
adc
adc
lods
pop
xchg
stos
mov
dec
pop
out
sti
jb
mov
push
push
jo
xor
out
sub
icebp
add
push
jg
incl
ljmp
jg
or
aaa
sbb
cmc
into
jne
rcrl
xor
push
adc
and
sti
push
jp
sti
imul
push
xor
mov
leave
je,pt
cmp
stc
cli
push
mov
pop
mov
pop
cmpsl
add
jecxz
popf
cmp
movb
adc
pop
in
or
jo
cmc
in
fistpl
out
aad
jno
push
sub
pop
pop
mov
cld
std
test
add
xor
mul
into
popf
imul
aad
adc
aad
xchg
dec
sub
jle
fnstenv
repz
int
mov
pop
or
add
mov
adc
jns
mov
pop
xchg
pop
and
cmpsb
je
mov
std
sti
test
fdivrl
cmp
sbb
outsl
in
fistpll
adc
fdivs
paddq
sub
sbb
fnstsw
mov
stos
test
xchg
and
iret
push
inc
pushf
push
imul
addl
push
adc
loop
sbb
call
pusha
and
cmp
jo
or
add
sub
imul
shlw
aas
sbb
fwait
aas
lock
in
test
add
push
adc
add
inc
cwtl
sub
les
push
adc
int3
push
push
ja
xor
bound
out
add
xchg
mov
jo
pop
adc
inc
pop
lea
xor
imul
mov
or
mov
push
adc
xor
adc
jmp
sbb
scas
pusha
dec
pop
adc
adc
clc
adc
adc
pop
cld
cmp
cmc
and
bound
pop
sahf
test
mov
adc
adc
test
push
adc
mov
into
jmp
xor
test
push
adc
jl
clc
cld
icebp
sbb
xchg
int3
movsb
adc
adc
ja
xchg
aas
dec
int3
ret
les
push
adc
test
lock
mov
inc
in
mov
xchg
pop
add
push
adc
das
mov
loope
hlt
sub
adc
sub
adc
movsl
int3
sub
adc
js
xor
xchg
fsub
mov
cld
aam
aad
pop
push
dec
aam
lcall
jge
cmp
push
adc
jle
enter
inc
pop
adc
in
add
adc
outsb
push
and
jmp
les
popa
or
cltd
xlat
pop
test
push
adc
adc
les
xor
sub
pop
in
inc
adcb
xor
xchg
iret
jb
cltd
push
sarl
and
iret
mov
subb
adc
and
cmc
movsb
mov
arpl
push
mov
adc
mov
sub
adc
fdivs
arpl
adc
outsl
movsb
adc
adc
out
les
push
adc
dec
pop
mov
rcll
xchg
stos
fistpl
sub
int3
jo
cmp
push
adc
daa
cmc
push
ja
daa
push
adc
sbb
stos
shlb
adc
mov
push
adc
cmp
mov
nop
sub
adc
subl
adc
dec
mov
push
xchg
fildl
and
aaa
clc
aaa
mov
sahf
out
and
jp
nop
out
ja
pop
lods
aaa
scas
lahf
movb
cmp
stos
push
mov
pop
cmp
and
dec
loop
insb
ljmp
jmp
aas
jg
repnz
cld
std
sti
cmpsl
mov
mov
popf
lds
popf
add
aas
fnstsw
dec
cs
sti
testb
mov
push
stc
lods
jae
sbb
fnstsw
adc
inc
subb
adc
nop
lret
nop
adc
adc
sbbl
adc
adc
or
jl
lock
lret
mov
stc
fldenv
icebp
sub
ret
mov
sti
std
add
test
push
adc
jnp
sti
mov
bound
movsb
adc
adc
push
adc
jp
std
lods
add
gs
lcall
jbe
xorl
cmpsb
and
adc
hlt
jb
cld
ja
imul
int
cmp
sbb
jg
fistpll
adc
push
xor
je
or
mov
push
adc
jb
push
add
mov
push
adc
ss
mov
push
adc
orb
adc
adc
cs
dec
pop
dec
js
mov
push
adc
pop
jg
out
add
xchg
push
pop
push
adc
adc
cwtl
arpl
lock
adc
pop
ja
mov
jge
push
xchg
test
cld
cmp
push
adc
lds
lds
cmc
pop
pop
in
and
pop
jmp
jl
xchg
pop
jae
fldl
sahf
ds
mov
and
jp
dec
pop
adc
out
out
mov
cmpsl
out
xchg
add
nop
xor
xchg
mov
mull
leave
cmpsl
in
lret
div
xchg
mov
stos
cli
scas
ret
ds
aad
or
push
adc
jmp
sti
sahf
popf
lods
les
cmp
ss
faddl
loopne
lcall
in
xlat
mov
or
or
push
adc
mov
aad
mov
mov
into
sti
ds
jl
imulb
and
adc
je
lret
push
mov
adc
adc
cmp
mov
es
les
push
adc
mov
imul
mov
hlt
stc
mov
and
insb
in
ss
mov
adc
xor
mov
dec
cmpsl
mov
mov
call
aad
adc
adc
pop
xchg
adc
fldl
add
mov
dec
inc
rol
paddusb
push
adc
push
adc
testl
aam
xchg
imul
rcrl
cwtl
adc
adc
sub
mov
cld
insb
pop
adc
int3
cmpsb
je
adc
adc
out
out
or
or
scas
outsb
and
cld
insb
pop
adc
jl
lcall
movsb
sub
insl
pop
adc
pop
adc
adc
lods
inc
lahf
xchg
ss
daa
and
xchg
dec
sti
jmp
or
fildl
hlt
fstl
pop
mov
mov
ja
adc
adc
push
jmp
mov
cmp
imul
ret
adcl
mov
cmp
mov
add
movsb
iret
and
add
repz
out
jecxz
stos
sarb
adc
push
adc
test
aaa
xchg
and
mov
sbb
insl
scas
das
jg
or
sub
mov
xor
jp
fsts
sbb
stos
sub
push
adc
pop
inc
cli
inc
ficomps
sarb
lcall
mov
add
ljmp
fwait
out
sar
mov
fwait
cmpl
sub
fistpl
pop
sahf
aam
mov
loop
adc
adc
add
sti
xorl
insl
fidivrs
je,pt
orl
cmp
pop
fwait
xor
ljmp
in
pop
jae
xchg
cmp
mull
pushf
es
cltd
jle
out
cmp
push
adc
in
jecxz
dec
mov
jns
mov
insl
mul
dec
popf
cmp
bound
aas
std
ljmp
push
adc
jmp
test
out
adc
dec
int
inc
inc
and
cmpsb
jb
fcmovnb
cld
sti
idivb
out
hlt
ja
mov
add
push
adc
xchg
mov
push
adc
imul
ret
negb
es
push
adc
sub
fld
imul
nop
or
xor
push
adc
mov
jmp
pop
dec
out
fistpll
sub
push
adc
or
std
xlat
popf
cmp
add
adc
sub
fcmovb
cli
imul
mov
and
pop
jmp
mov
and
push
adc
cld
mov
sbb
adc
xor
or
push
cmc
sub
sbb
push
adc
fwait
pop
sti
jle
xor
adc
xor
sbb
arpl
cld
push
fisubrl
cmp
fldl
add
fld1
scas
xchg
jmp
push
adc
stc
push
adc
adc
bnd
stc
push
mov
inc
push
xlat
mov
fstpl
inc
mov
stc
sti
mull
sub
ds
lock
iret
mov
mov
jmp
test
adc
adc
add
push
sub
mov
and
mul
mov
push
adc
addr16
and
push
lahf
repnz
stos
push
push
adc
and
sub
imull
push
adc
aaa
loope
dec
jnp
mov
stos
lods
fs
dec
sub
mov
ljmp
cmp
jns
mov
ficoms
dec
push
xor
dec
add
int
call
cld
stc
mov
adc
ljmp
cld
loopne
pop
mov
dec
lret
sbb
inc
sti
cmp
ds
loopne
xchg
lock
fsubrs
rclb
push
adc
push
adc
call
aam
mov
mov
stos
jno
sub
stc
rolb
loope
dec
push
inc
push
pusha
xchg
mov
mov
cmp
or
push
adc
xor
sbb
mov
adc
adc
inc
repnz
fcmovnb
testb
xchg
push
ja
dec
and
xchg
test
xor
movsb
les
xchg
cmp
push
adc
pop
mov
adc
adc
adc
fnstcw
jnp
or
fistps
xor
adc
adc
cmp
lret
rcll
out
and
push
adc
pop
test
pop
adc
lock
ljmp
or
push
adc
frstor
push
outsl
and
pop
inc
pop
add
xor
mov
lds
pop
pop
adc
movsb
push
cld
mov
les
push
adc
mov
pop
mov
dec
pop
pop
adc
addr16
jp
adc
loopne
adc
adc
inc
adc
adc
pop
cwtl
mov
pop
adc
jno
popa
mov
pop
sub
add
dec
xlat
idivb
pushf
pop
adc
and
cltd
mov
push
test
mov
sbb
test
adc
adc
pop
adc
dec
mov
fsubrs
jg
or
jnp
jo
pop
adc
mov
insl
sub
inc
add
pop
adc
mov
imul
nop
sub
pop
jnp
jl
jnp
mov
outsl
fidivrs
shlb
pop
and
push
cltd
push
push
jae
sbb
adc
and
push
adc
je
push
inc
mov
les
subb
adc
std
inc
repnz
push
sbb
into
push
ret
cmpsb
movsl
dec
push
ljmp
push
cmp
xchg
sub
adc
rclb
adc
cmp
mov
les
std
pushl
push
add
cs
adc
xchg
sbbl
mov
cli
push
dec
inc
addb
push
jbe
sub
or
dec
adc
push
adc
das
lods
lods
lods
lods
lods
scas
jbe
or
out
mov
lds
jmp
mov
push
adc
sub
add
jne
les
push
adc
and
test
in
mov
push
pushf
pop
adc
sahf
je
mov
add
jns
add
xchg
daa
push
adc
adc
sbb
and
lret
push
adc
cmp
clc
xchg
idivl
test
cmc
jne,pt
shrl
lret
lds
ljmp
nop
adc
adc
pop
inc
xchg
gs
add
std
fwait
into
xor
lret
push
add
add
inc
repnz
mov
cltd
popa
sti
outsb
sub
pusha
imul
add
add
adc
xchg
xlat
insl
enter
mov
shlb
into
pusha
adc
adc
popf
negb
jae
push
jno
xchg
xchg
fiadds
jo
pop
adc
mov
les
addr16
scas
sbb
xor
movsb
inc
rcll
aad
jo
mov
daa
push
adc
cli
clc
adc
adc
inc
dec
mov
and
cld
aad
cs
adc
xchg
test
adc
adc
ficompl
cmp
dec
push
cmpsb
rorl
fbld
out
jno
insl
sbb
sahf
jns,pt
incb
outsb
pop
bndstx
cmp
adc
aad
xor
inc
movsb
loope
insb
add
mov
cmp
mov
gs
mov
mov
daa
xor
lods
push
pop
bswap
ja
pop
sbb
inc
mov
in
dec
pop
test
and
push
das
dec
dec
clc
test
cwtl
sti
sub
ds
adc
push
loope
popf
inc
scas
jl
sub
fstpl
push
cmp
das
sbb
mov
inc
testl
stc
sbb
pop
stc
rcll
mov
test
xor
dec
push
mov
in
xchg
sub
push
repz
leave
cmc
mul
add
fldt
adc
cmp
xchg
jne
xor
out
inc
sbbl
or
inc
inc
popf
xchg
inc
dec
movsl
rcr
and
sbb
mov
data16
popl
rclb
cltd
aad
inc
jbe
jb
cmp
sub
cmp
cwtl
adc
adc
mov
adc
jmp
fldcw
dec
push
xlat
jno
or
dec
dec
sbb
ret
leave
insl
mov
aad
or
jp
add
xor
or
dec
outsl
std
test
in
aam
les
push
adc
divb
cmpsb
cmp
shl
dec
jmp
imul
adc
fstpt
hlt
sahf
das
dec
ljmp
pop
cli
imul
adc
movsl
mov
mov
das
sahf
cld
outsb
dec
shrl
rolb
fdivrl
scas
lret
mov
test
push
adc
iret
aam
xor
addr16
sbb
add
loop
nop
adc
adc
in
sti
imulb
test
push
loop
xor
xlat
sbb
les
lret
imul
sub
ljmp
cltd
lcall
mov
push
adc
adc
cli
hlt
adc
adc
cmp
mov
test
push
lret
cmpsl
mov
bound
cli
add
push
adc
mov
imul
xor
fwait
out
popf
cmp
mov
adc
adc
dec
or
test
push
adc
push
adc
jl
mov
pop
pop
xor
mov
je
notl
jbe
jae
scas
mov
stos
cwtl
jne
mov
push
cld
jo
movsb
stos
cmp
sub
sti
jp
mov
enter
mulb
jle
dec
out
int3
popf
cmp
cltd
mov
mov
aad
bound
fnstenv
mov
icebp
xor
jbe
fidivrl
jl
push
adc
sub
outsb
movsb
sbb
lods
scas
sbb
push
in
fistpll
andb
js
in
jmp
js
ljmp
jle
dec
jg
out
aas
add
decl
jl
fidivrs
push
xor
fstpl
pop
out
ja
std
movsb
fiaddl
cld
pop
cld
jo
out
movsl
in
mov
fistpl
rclb
and
jbe
repnz
push
rcrb
jge
jecxz
cmp
cwtl
mov
pusha
pop
adc
clc
mov
in
dec
std
icebp
in
xchg
and
aas
or
les
scas
addr16
pop
scas
inc
xchg
mov
popf
test
jl
mov
mov
mov
ja
push
sbb
push
je
inc
mov
fadd
mov
popf
pop
adc
popf
pop
adc
inc
or
xor
jle
fistpll
movsb
or
lods
nop
cwtl
daa
and
mov
mov
mov
inc
push
dec
cmp
adc
push
aam
push
sbb
inc
mov
pop
adc
sbb
add
dec
mov
and
lock
jbe
adc
adc
xor
fsubl
out
cmp
out
pop
sbb
inc
insl
mov
push
adc
hlt
cmpsb
mov
dec
mov
test
and
lods
mov
jo
pop
adc
call
shlb
jb
clc
dec
mov
andl
loope
sub
inc
cmp
xchg
jle
jl
pop
adc
jb
push
sbb
cmpsl
push
adc
xchg
rcrb
pop
fldenv
mov
jb
sbb
hlt
jge
lds
mov
ja
sbb
test
sub
mov
xor
push
push
xor
dec
mov
in
movsl
mov
xchg
mov
push
adc
cli
ds
mov
fisubrl
in
push
xor
xchg
inc
loopne
mul
je
lret
ffree
xlat
pop
fcmovu
push
iret
sbb
cli
negb
add
lods
icebp
fnstenv
sti
sub
adc
adc
stos
fwait
xchg
sahf
test
aad
mov
adc
xor
sbb
mov
jns
loopne
cwtl
adc
adc
shlb
adc
adc
sub
add
add
sbbb
fistl
pop
dec
aad
fcoms
xchg
scas
mov
inc
in
jno
push
decb
aad
gs
loopne
fcmovnbe
adc
call
aaa
or
adc
or
xor
insb
push
mov
jnp
and
rclb
adc
subb
mov
clc
and
mov
stos
jae
mov
jae
mov
repnz
or
xor
mov
push
bound
adc
cwtl
adc
adc
jb
add
nop
adc
adc
aas
jle
clc
sbb
je
shll
xor
inc
cmpb
mov
jbe
jne
fdivs
and
in
push
lahf
loopne
sub
adc
inc
orb
stos
cmpsb
add
aaa
mov
mov
shll
fs
cmp
jmp
adc
adc
in
add
repz
pushf
dec
jno
frstor
addr16
aaa
into
add
je
adc
loop
enter
inc
adc
pop
icebp
cmp
and
xor
out
mov
in
cli
xchg
pop
into
lret
mov
adc
cli
stos
and
repnz
icebp
add
in
ss
and
add
loope
ljmp
jnp
popl
jecxz
or
dec
pop
lret
xchg
insb
xchg
xchg
xchg
mov
testl
mov
sub
and
jno
sbb
cmp
arpl
mov
adc
adc
ds
sahf
sbb
arpl
dec
cmp
cmp
stos
jno
jns
push
mov
fcoml
sbbb
adc
ljmp
pusha
cwtl
cmp
sti
stc
lcall
or
dec
xchg
push
dec
clc
add
inc
add
jo
mov
mov
stos
adc
push
jbe
data16
mov
js
lret
or
mov
mov
push
adc
jmp
sbb
push
repnz
ss
inc
data16
inc
jae
or
cmp
fcompl
mov
mov
xchg
mov
inc
insb
fistpl
cmp
lret
cmp
out
hlt
movsl
pop
fwait
add
mov
mov
jne
out
inc
lret
clc
orb
mov
adc
adc
dec
cwtl
xchg
scas
fstpt
adc
adc
icebp
in
stc
stc
cli
ja
mov
pop
ljmp
fwait
cmp
dec
iret
mov
int3
dec
cmp
jo
pop
adc
add
sbb
push
fcmovu
mov
jecxz
dec
add
je
loop
in
and
adc
xlat
adc
out
aaa
xchg
loopne
push
pop
imul
sub
mov
push
cmp
push
adc
push
mov
adc
adc
or
push
adc
pusha
or
lret
inc
sti
fmull
or
aam
imul
xchg
mov
inc
psubb
push
mov
mov
jno
jnp
lock
adc
push
jl
pop
adc
ja
xchg
pusha
xchg
xor
lods
or
xchg
fmuls
or
xchg
in
adc
sbb
cmp
add
loop
fsubrs
data16
xlat
or
pop
xor
cli
sbb
and
xorl
sbb
pop
inc
or
dec
and
aas
cmp
cmp
loope
popf
mov
nop
sub
stos
cmp
pop
lock
push
sbb
jl
lahf
test
xchg
lret
jo
or
adc
into
lret
dec
hlt
test
aaa
adc
ret
rcl
shlb
lods
mov
push
mov
lods
idivl
pop
push
cli
shll
nop
clc
jns
mov
pop
sbb
jecxz
nop
into
jmp
sub
fwait
xlat
daa
or
push
adc
sbb
inc
scas
cwtl
adc
adc
sub
call
push
add
lock
adc
cmp
inc
aaa
in
pop
mov
stos
fmuls
mov
subl
and
or
adcl
ljmp
into
imul
int
and
and
or
ljmp
cltd
push
xor
and
sbb
addr16
lds
fwait
pop
mov
dec
addr16
add
hlt
jb
daa
scas
stos
add
sbb
push
adc
inc
fsub
and
cwtl
adc
adc
add
daa
scas
add
adc
mov
and
sub
inc
imul
xchg
lret
xchg
or
add
jnp
mov
mov
out
sub
mov
imul
bound
add
push
adc
mov
je
push
xchg
push
or
loopne
sbb
test
xchg
lds
jg
mov
adc
adc
or
mov
add
jo
mov
pushf
adc
in
es
cs
ret
adc
adc
push
cmp
jo
lret
dec
in
aam
sub
sub
stc
jnp
mov
sub
adc
add
pop
cs
adc
pop
pop
adc
lahf
shll
clc
and
orb
mov
adc
xchg
or
dec
sbb
inc
jg
mov
inc
idiv
cld
cli
mov
test
xchg
mov
scas
stos
push
lds
mov
sti
outsb
mov
push
adc
es
pop
fldl
dec
lahf
pop
adc
adcl
and
xlat
jge
dec
lahf
pop
adc
in
add
test
nopl
pop
incb
decl
scas
mov
ja
cwtl
movsl
test
lods
mov
fistpll
jno
jbe
xchg
dec
inc
or
adc
js
es
mov
mov
add
pop
lods
and
and
or
mov
mov
cmp
clc
adc
faddp
ficoml
rorl
notl
or
scas
rolb
out
push
xchg
gs
lret
mov
cmc
test
mov
push
aas
lods
daa
out
ss
orb
add
push
subl
test
xor
mov
inc
sti
xor
nop
out
sbb
push
lret
add
inc
xchg
jge
jns
cli
mov
mov
inc
ss
mov
lods
leave
out
adc
and
xchg
cmp
mov
pushf
in
jecxz
in
lds
les
pop
push
das
or
jl
mov
fnstsw
xor
mov
xchg
nop
dec
fwait
ret
jecxz
mov
xchg
mov
cltd
and
lock
lcall
jge
inc
sub
test
or
enter
fisttpl
xchg
test
mov
repz
dec
mov
xorb
bnd
scas
ds
sub
lahf
cli
es
push
shrb
scas
inc
out
or
or
or
lret
mov
xchg
imul
lret
mov
gs
negl
adc
shlb
je
jecxz
add
adc
xor
push
fs
rorl
loopne
in
cwtl
arpl
fisubl
mov
xchg
jge
int3
push
sub
sahf
dec
sbb
mov
push
push
dec
ss
dec
loop
push
xchg
xchg
mov
xchg
std
cmp
or
inc
mov
mov
fwait
decl
pop
adc
cs
cwtl
inc
int3
pusha
test
ljmp
cmp
aas
mov
and
push
inc
ss
cltd
xor
adc
or
insw
loop
daa
xlat
pop
fistps
js
mov
pop
scas
pop
pushf
jne
ds
mov
mov
stos
sbb
adcl
mov
jns
fistpll
jnp
in
xchg
out
pop
cmp
sbb
ljmp
subl
jb
jnp
xor
pusha
xchg
mov
jp
or
or
adcl
xchg
mov
cmp
std
push
ljmp
jbe
icebp
outsb
fists
jb
rcrb
rorl
mov
mov
test
push
enter
mov
es
mov
jg
call
mov
cmpsb
mov
movsl
xor
and
test
fisubl
fs
cmpsb
stos
mov
xor
jl
jmp
cmp
or
jg
das
push
adc
xchg
push
cli
mov
jl
imulb
adc
popf
push
push
loope
jl
lcall
lret
int3
add
in
jne
aam
das
push
adc
cmp
sbbl
or
push
adc
add
fdivrs
push
mov
push
std
sub
mov
lret
xchg
push
das
push
adc
out
mov
mul
daa
clc
mov
test
jne
mov
and
fcomi
decb
mov
mov
push
jp
xor
into
bound
loope
shrl
push
dec
lahf
pop
adc
jp
xchg
xlat
inc
pop
pop
adc
cmp
sahf
pop
adc
ficomps
cmp
pop
adc
mov
or
pop
jne
into
inc
pmullw
xor
sbb
orl
adc
in
adc
inc
mov
or
cli
or
and
and
mov
fs
cmpsl
rcrl
xor
js
push
stos
xor
sub
jbe
ret
mov
xchg
xor
out
divl
idivb
gs
scas
cmc
dec
shll
stos
mov
das
xor
mov
outsb
fs
data16
ficoml
pop
int
sahf
mov
fidivl
add
outsl
jae
in
inc
mov
ficomps
lahf
jmp
aaa
mov
das
push
std
mov
das
aam
push
mov
icebp
popa
mov
inc
lret
stos
orl
xchg
bound
add
fwait
into
fisubrl
cmpsl
pop
cmp
addl
dec
xchg
es
cmc
sbb
fcomps
xchg
aam
pop
daa
inc
repz
lock
stc
popa
adc
ds
mov
mov
shll
pop
adc
adc
push
adc
push
out
inc
jmp
jge
neg
fsubp
out
ret
nop
popf
mov
jmp
sub
pop
fwait
adc
aad
mov
addr16
aaa
sarb
sub
push
adc
popa
sub
pop
sbb
push
adc
dec
sbb
push
jo
adc
repnz
push
in
adc
push
adc
add
lods
enter
lret
cmp
jge
scas
test
xchg
insb
int
test
inc
inc
inc
in
mov
push
adc
adc
pop
pop
adc
jp
pop
adc
inc
clc
test
cmc
rol
mov
outsl
imul
push
and
push
adc
push
mov
sbb
push
adc
inc
or
sbb
mov
jb
sub
push
ret
imul
orb
adc
adc
adc
loopne
adc
adc
dec
pop
or
push
push
sub
loop
inc
dec
xchg
jo
pop
adc
jae
outsl
out
jp
shlb
sbb
or
loopne
push
adc
in
xor
xlat
and
mov
adc
mov
roll
mov
push
lock
pop
fs
inc
pop
adc
in
push
inc
inc
cmc
stc
jns
jbe
or
or
adc
adc
lods
xor
adc
adc
aam
add
mov
cld
std
xor
adc
in
push
xor
mov
aaa
aaa
rorb
std
jbe
xor
push
sub
mov
adc
or
insb
jl
adc
add
xchg
push
cwtl
popf
pop
adc
stc
xor
mov
cwtl
popf
pop
adc
jb
and
push
ljmp
in
pop
pop
jnp
mov
pop
adc
mov
mov
push
pop
mov
sbb
add
fwait
push
lock
pop
es
mov
pop
rolb
int
pop
sarb
iret
pushl
push
adc
fld
jns
das
cmc
push
mov
lcall
pop
leave
dec
addb
cmp
push
bnd
in
dec
pop
leave
jecxz
pop
and
push
add
mov
movups
add
sub
dec
sbb
aaa
mov
add
vmovsd
pop
lds
mov
fnstsw
mov
adc
ds
cltd
imul
push
cmp
add
jbe
or
dec
nop
sub
mov
mov
pop
in
inc
into
imul
stos
mov
fildl
add
jl
xor
andl
mov
sub
jmp
mov
mov
add
outsl
fsub
lock
xor
pop
adc
cmpsl
dec
lahf
push
and
mov
or
repz
xlat
cmp
ficoms
mul
lret
nop
adc
pop
mov
adc
xchg
sti
adc
div
jne
std
icebp
jns
out
xchg
xor
push
and
or
call
adc
lret
sub
cmp
fwait
jb
mov
cmp
and
or
adc
popl
iret
sti
xchg
mov
adcb
sbb
ja
inc
push
mov
xor
mov
sub
shll
adc
jo
jae
lock
lock
mov
enter
jl
cmc
andl
cmp
xor
out
sbb
stos
ret
add
stc
cwtl
add
sbb
push
orl
sbb
jo
push
cmc
xchg
adc
mov
imul
inc
mov
jo
pop
adc
sbb
pop
adc
xor
hlt
push
and
lahf
dec
pop
pop
adc
mov
mov
mov
xchg
sub
iret
mov
xor
cli
mov
out
sbb
jl
cmp
inc
lds
dec
add
std
aam
pop
xor
xchg
sub
push
or
jl
div
pop
lea
test
push
inc
push
pusha
lods
mov
sbb
or
fldl
pop
push
xchg
andl
sbb
cmc
cs
int
pop
pop
cli
daa
rcr
fidivrs
push
loopne
shlb
or
pop
pop
xchg
lret
enter
pusha
fldenv
push
sahf
mov
xor
xor
loop
aad
lods
test
jge
cltd
in
add
roll
insl
jmp
sbb
repz
cwtl
add
sub
neg
jge
adc
lods
pop
push
int3
jnp
stos
js
aaa
xor
inc
mov
jecxz
subb
popa
jp
imul
shlb
mov
inc
inc
xor
pop
xchg
icebp
and
mov
das
push
adc
lock
addr16
mov
pop
das
push
adc
jnp
repnz
push
sbb
out
scas
xor
ret
or
or
and
hlt
ljmp
ss
dec
cld
repnz
scas
xchg
test
pop
adc
push
or
mov
mov
adc
adc
xchg
and
sbb
pop
adc
sub
loop
add
ret
xor
bound
fs
jae
mov
call
jecxz
add
push
fimuls
adc
adc
shlb
mov
les
bound
addb
scas
lods
xchg
std
sti
out
and
sbb
push
adc
and
adc
pop
adc
bound
adc
adc
mov
loopne
pushf
pop
adc
or
pop
adc
mov
clc
adc
adc
or
pushf
pop
adc
out
les
push
adc
xchg
dec
daa
xchg
outsb
ret
popf
cmp
ljmp
mov
or
pop
adc
add
int3
popf
mov
dec
cmp
dec
pop
adc
sub
sub
mov
fidivrs
cmp
jl
bound
mov
jnp
ja
std
stos
push
mov
nop
push
xchg
pop
adc
adc
pinsrw
adc
test
pop
adc
ljmp
push
pushf
pop
adc
popf
mov
int
cmpsl
dec
popf
imul
mov
jne
movl
outsb
filds
adcb
adc
fcompl
cltd
pop
adc
adc
adc
sub
call
adc
adc
adc
mov
sti
cli
xchg
enter
loopne
fidivrl
adc
dec
push
fsubs
fs
aas
jae
into
adcb
adc
repz
ja
in
mov
pop
adc
adc
jge
fcmovnb
inc
xchg
xor
push
xchg
mov
xchg
jne
adc
rclb
adc
mov
lea
push
mov
adc
mov
sub
adc
imul
mov
jp
aad
cs
adc
adc
scas
aaa
mov
sub
push
xchg
rcrl
insb
cs
adc
mov
into
push
pop
mov
in
push
push
pop
inc
xor
dec
jl
xchg
in
je
inc
fsubs
xlat
push
jb
fadds
popf
mov
pop
jns
sahf
pop
in
insl
subb
cld
xchg
sub
mov
mov
push
adc
jecxz
xchg
clc
mov
inc
mov
enter
mov
jecxz
clc
repz
cltd
pushf
cwtl
fldcw
xchg
adcb
adc
test
push
jl
movsl
pop
je
adc
adc
loop
push
lcall
fldenv
inc
jno
push
mov
mov
insb
push
push
jge
jge
fwait
jmp
cmp
mov
mov
adc
push
cld
adc
adc
test
negl
xor
push
adc
push
out
out
xchg
stc
mov
adc
cld
adc
adc
jbe
pusha
jp
adc
add
adc
insl
or
cmpsb
ret
ljmp
mov
xor
jo
pop
adc
jbe
jb
test
lds
inc
loope
xor
stc
add
lods
mov
fidivl
xchg
sbb
adc
cmp
movsb
or
mov
adc
cmpsb
xchg
hlt
xor
into
mov
cmpsb
push
cs
js
and
jo
cli
in
sbb
push
push
notl
add
call
mov
hlt
aaa
inc
fcoms
jmp
loope
xchg
je
xor
push
adc
out
icebp
nop
push
jns
push
sub
rorl
sub
adc
jo
pop
add
mov
mov
jge
pop
lahf
push
push
lret
out
and
aas
shlb
dec
mov
lret
push
inc
sub
adc
push
jns
addb
mov
pop
cmp
push
outsl
push
cmc
push
adc
ds
outsb
pop
aas
lret
add
bnd
in
repz
push
mov
or
jne
adc
lret
push
adc
add
mov
ficoms
sbb
lret
cmp
cmc
cltd
adc
xlat
subb
adc
sub
aaa
add
dec
loop
jo
or
sahf
adc
add
mov
push
insb
cs
adc
mov
pop
pop
adc
add
sub
imul
movl
xor
inc
add
add
push
jge
add
stos
inc
xchg
into
popf
cmp
ljmp
adc
inc
jb,pn
mov
add
stos
movsl
mov
in
sub
mov
push
adc
sbb
les
push
adc
sub
dec
inc
push
or
and
cmp
mov
popf
mov
and
push
sub
adc
adc
and
fwait
push
jbe
out
jne
movsl
adc
xchg
mov
push
adc
mov
jbe
add
filds
stos
sbb
cltd
adc
sub
push
mov
xor
sub
sbb
add
ret
stos
loope
cli
mov
das
push
adc
jno
insb
cs
adc
mov
aas
jl
adc
xchg
ljmp
inc
mov
push
and
mov
pop
sbb
popa
lds
mov
add
or
mov
adc
rcll
mov
and
cs
scas
scas
test
test
adc
adc
dec
push
xor
adc
adc
mov
inc
test
sub
mov
outsl
lcall
icebp
mov
inc
push
jle
push
in
lahf
cli
mov
mov
ja
push
xchg
data16
stos
mov
xchg
adc
cmp
test
push
addr16
out
out
inc
sub
xor
xor
cmp
add
pop
int
lahf
pop
test
push
cli
fwait
mov
ds
les
lahf
inc
aad
add
stos
xchg
gs
sub
mov
mov
pop
xor
mov
jne
or
xor
mov
xchg
inc
adc
add
adc
pushf
pop
xor
adc
pop
cwtl
cmp
movsl
aam
inc
sub
pop
jnp
jb
enter
jmp
mov
lcall
sbb
xchg
ljmp
cltd
call
hlt
test
out
jo
xchg
push
mov
sub
in
ljmp
or
iret
xchg
lret
push
push
xchg
stos
jae
add
add
xchg
leave
lds
outsl
orl
hlt
add
fisubrl
adc
cmc
add
orb
jecxz
xchg
cmpsb
xchg
jb
rcrl
xor
mov
pop
push
movsb
xor
lds
mov
sbbb
push
push
outsb
add
stos
imul
test
shr
pop
mov
cmpsl
stc
call
ficompl
cltd
pop
sub
jp
out
add
sub
stos
fadds
neg
inc
fdivs
lods
or
add
shlb
pop
push
cmp
inc
packsswb
jns
dec
push
push
xchg
sbbl
or
dec
mov
adc
mov
rolb
add
into
stos
imul
sub
xchg
rcl
cmpsl
xchg
jns
imul
aad
addb
out
sub
inc
mov
xor
cmpsb
dec
push
in
daa
scas
push
outsl
pop
sub
fldl
sbb
sti
fnsetpm(287
dec
clc
dec
push
insl
pop
xchg
jg
testl
mov
clc
popf
adc
jne
mov
lds
dec
in
jp
loopne
add
push
sarl
dec
jge
stos
sbb
out
or
mov
jle
xchg
fsubs
dec
gs
sbb
mov
incl
iret
decl
into
pop
arpl
mov
mov
scas
fildl
add
add
ficoml
out
cmpsl
mov
icebp
inc
aad
mov
jecxz
daa
sub
sbb
add
jl
jmp
daa
out
aaa
xor
and
test
lods
cmp
cmp
xchg
mull
mov
or
es
outsl
jbe
mov
insl
mov
out
jg
mov
je
xchg
mov
sti
insb
subl
in
cmpsl
dec
popf
repnz
fucomip
sub
jge
in
push
outsb
in
leave
pop
or
push
icebp
pushf
or
pop
mov
or
mov
add
imulb
xchg
aaa
xchg
mov
shl
lds
fwait
out
mov
out
pop
jo
pop
adc
cs
bound
je
xlat
cmpsb
dec
popf
mov
pop
and
scas
int3
and
add
mov
push
nop
adc
adc
les
sbb
or
push
or
add
add
inc
std
cmpsb
add
xor
stos
push
les
dec
add
pop
add
add
mov
mov
js
es
lds
imul
rolb
jbe
pop
inc
addb
scas
xchg
mov
mov
pushf
pop
adc
or
push
rcll
and
cmp
stc
pushl
shll
mul
lret
mov
sub
in
adc
mov
lret
push
adc
inc
cltd
sub
add
inc
push
dec
pop
insb
outsl
mov
imul
call
dec
lcall
dec
pop
xorl
or
xor
movsl
faddl
in
pusha
sub
outsl
mov
arpl
and
push
adc
jae
test
fisttps
aas
jmp
mov
and
sub
std
cmp
mov
fstl
mov
mov
dec
mov
mov
adc
adc
test
mov
adc
adc
xor
ja
fidivs
sahf
loopne
sub
adc
mov
ret
sub
scas
scas
jnp
sbb
scas
pop
dec
sahf
mov
ds
push
sbbl
mov
mov
dec
push
clc
sbb
push
pop
sbb
scas
sti
movsb
cli
xchg
ror
inc
or
inc
paddusw
cmc
shl
push
insb
mov
dec
shlb
bound
fdivrl
add
shrb
jnp
mov
pushf
inc
rcl
push
ljmp
add
adc
sub
cmp
mov
lds
jnp
cmp
inc
jl
sti
push
out
jne
add
adc
lcall
jo
pop
adc
subl
lods
insl
cli
dec
stos
fcomp
mov
outsb
mov
fsubs
insl
sub
repnz
cwtl
pusha
jp
adc
mov
fbstp
sbb
movsb
or
mov
or
mov
subb
scas
adc
push
adc
xchg
dec
rcl
lock
push
dec
aam
mov
inc
sub
sub
icebp
xchg
and
pop
out
orb
sub
adc
das
pop
fidivs
dec
xchg
sub
xchg
ret
and
cmp
inc
sub
adc
mov
jp
xor
sbb
mov
fstl
sbbb
pop
mov
or
in
xor
xchg
addb
ret
push
mov
pop
fisubs
aas
mov
adcb
ss
mov
in
pop
or
push
dec
jmp
push
addb
add
or
adc
lods
sarl
cmp
out
adc
push
adc
das
lods
lods
xchg
fsubrl
push
adc
pop
outsl
inc
nop
and
std
icebp
push
daa
pop
mov
cmp
and
jp
jbe
inc
adc
adc
xlat
aas
les
adc
bound
add
mov
adcl
out
adc
sub
adc
pop
outsl
inc
nop
and
xor
xor
je
rcrl
adc
das
jb
adc
add
stos
movsl
mov
adc
vsubpd
mov
les
adc
adc
mov
add
dec
nop
and
xchg
popf
mov
push
bound
adc
nop
adc
adc
pushf
in
mov
in
sub
adc
jp
lds
and
mov
xor
aas
or
add
sub
adc
or
pop
sbb
pop
mov
dec
popf
cmp
lret
push
adc
mov
ret
das
dec
nop
stos
mov
pop
into
mov
or
into
push
hlt
sub
adc
add
aaa
sbb
cmc
ja
xor
es
cmp
sub
xor
inc
or
add
dec
cmp
sub
adc
ret
pop
and
leave
sbb
inc
sub
adc
adc
push
xchg
sbbb
add
mov
pop
xchg
adc
push
adc
out
adc
adc
xchg
adc
push
adc
xor
mov
sub
adc
lret
dec
mov
and
sbb
cwtl
notl
je
andl
adc
push
nop
mov
sub
adc
dec
and
jnp
inc
in
fsubrl
adc
adc
push
adc
inc
dec
push
int3
cmpsb
lds
mov
dec
test
inc
mov
sbb
nop
adc
adc
scas
push
add
push
adc
rolb
or
push
adc
popa
sbb
push
adc
call
adc
push
lret
ss
xor
lods
fstpt
add
or
or
icebp
xchg
xor
mov
lret
ja
sti
mov
lock
sbb
pop
out
adc
adc
pop
or
sbb
push
adc
push
rcll
cmp
jg
shl
mov
pop
inc
mov
and
jle
pop
mov
stc
mov
and
push
adc
jg
jle
xchg
push
movsl
dec
xchg
sbb
subb
adc
gs
xchg
movsb
jp
test
cld
in
adc
rcr
pop
adc
mov
shl
pop
inc
jbe
rclb
adc
movsl
sarb
fsubl
aas
jb
cmp
cs
adc
int
js
push
adc
std
jbe
aaa
subb
leave
jmp
mov
pop
ss
inc
mov
insw
test
push
adc
dec
dec
iret
mov
adc
sub
pop
adc
or
xchg
mov
jne
adc
push
call
sub
push
inc
cmpsb
sub
adc
pop
xchg
jnp
push
jno
or
cmp
xchg
push
fsubl
pusha
mov
xchg
cmpsb
loope
orl
push
rcl
add
pop
adc
lahf
push
jnp
daa
lods
mov
adc
and
dec
dec
fstpl
ficoml
inc
inc
out
jae
js
cld
outsl
and
test
cli
ret
pop
nop
jns
sub
jecxz
cmp
dec
addb
enter
stos
and
sti
mov
xchg
pop
jmp
sub
push
adc
loopne
jae
das
dec
nop
mov
cld
pop
sbb
bound
add
mov
cmp
lods
scas
test
push
in
sub
mov
mov
mov
inc
sub
add
add
push
adc
loop
mov
mov
vpcmpeqb
mov
mov
inc
sub
jb
arpl
add
jb
adc
shll
dec
cmp
std
je
push
mov
dec
add
daa
mov
add
or
mov
cmp
cmp
pop
sbb
int
icebp
xor
pop
mov
inc
xorb
or
add
push
das
dec
nop
push
or
pop
sbb
bound
add
push
adc
sbb
mov
and
bnd
or
add
cmp
push
inc
xchg
xor
xchg
and
push
adc
cmp
jnp
wbinvd
adc
xor
sub
subl
divl
adc
inc
adc
adc
das
dec
nop
mov
js
mov
sub
cwtl
push
mov
idivb
or
add
test
pop
sbb
and
xchg
es
popf
mov
jg
mov
jp
scas
adc
cmpsb
out
cs
ss
xor
xor
jno
shlb
adc
mov
add
dec
inc
or
or
sysenter
call
in
into
lahf
cmp
outsb
adc
pusha
add
dec
sub
mov
jbe
or
fs
and
xor
adc
adc
iret
pop
and
test
sbb
push
adc
jbe
adc
mov
cwtl
popf
pop
adc
or
int
cmc
bound
or
jmp
std
lret
sub
testl
cmp
push
insl
arpl
bound
adc
mov
ljmp
xlat
scas
testl
mov
jmp
sahf
jge
xchg
xor
mov
cltd
imul
sub
pop
or
adc
push
pop
inc
xor
dec
movswl
or
out
fcomps
scas
ret
add
xor
mov
mov
mov
cmc
pusha
push
mov
cmp
and
sub
jbe
test
nop
cwtl
add
hlt
jge
out
mov
jne
dec
movsb
push
nop
aam
add
sub
adc
sbb
in
sbb
mov
and
jb
push
inc
call
cmp
mov
or
push
nop
xor
sbb
push
or
bswap
fidivl
add
mov
adc
test
sbb
call
pusha
mov
sbb
push
lods
inc
or
ret
pop
loop
or
push
ret
dec
cmpsb
lods
enter
mov
loopne
mov
xchg
insb
daa
ret
inc
imul
in
fwait
push
pop
mov
mov
or
push
je
cs
xor
push
mov
fmul
shl
sarl
lret
bound
push
mov
dec
loope
lret
fwait
pop
adc
pop
adc
adc
stos
jnp
movsb
xchg
aaa
cwtl
sahf
inc
in
ret
pop
xchg
cmp
pop
add
push
adc
filds
ret
push
addr16
lods
jecxz
mov
xor
adc
adc
mov
jle
imul
aad
addl
dec
sbb
mov
jae
inc
mov
mov
push
mov
adc
in
push
fistl
or
lcall
ret
push
jmp
adc
ljmp
mov
je
jb
jp
test
test
sbb
aas
mov
push
adc
jecxz
aaa
out
pop
aam
loop
mov
popa
xchg
add
nop
xor
pop
and
jbe
jge
mov
ss
mov
mov
popf
cmp
mov
and
push
icebp
daa
pop
sarl
mov
inc
xchg
pushf
ret
adc
into
insb
cld
and
sahf
mov
or
mov
cmp
cli
les
les
fs
adc
add
je
mov
dec
nop
mov
xchg
jb
ret
je
jo
pop
adc
lcallw
test
add
cmp
imul
jbe
int3
popf
cmp
call
mov
pusha
jp
adc
push
xor
mov
dec
mov
nop
adc
adc
mov
das
jbe
repz
js
mov
push
repnz
add
negb
xor
and
jns
dec
popf
cld
mov
ja
repnz
add
pusha
pop
dec
xchg
and
or
neg
or
mov
leave
sub
adc
pop
adc
ds
mov
inc
xchg
pusha
jp
adc
push
pusha
jp
adc
jae
add
adc
inc
sub
adc
je
pop
mov
pop
dec
inc
loop
rolb
jbe
repz
mov
push
adc
rolb
pop
jecxz
int3
insl
and
test
adc
adc
pushf
pop
adc
mov
adc
pop
mov
xor
push
adc
xchg
rcrb
cmpsb
stos
popf
ds
call
mov
hlt
ret
in
mov
jo
push
adc
pushf
pop
adc
fnsetpm(287
sarl
add
scas
and
push
adc
jg
pop
out
cs
jb
out
out
in
add
pop
adc
cltd
push
jl
adc
adc
rorl
fistps
mov
adc
xchg
and
add
pop
xchg
mov
mov
or
jnp
adc
adc
mov
sbb
and
jo
mov
ja
adc
test
jo
push
adc
sub
adc
cmp
pop
adc
inc
pushf
pop
adc
stos
xlat
and
push
adc
jge
pushf
pop
adc
xchg
int
insl
mov
adc
push
les
push
adc
pop
popf
pop
adc
insl
jecxz
fistpl
adc
shlb
pop
adc
add
push
adc
add
outsb
mov
pop
adc
push
mov
sahf
pop
adc
push
add
call
scas
iret
fisubl
out
ret
clc
lods
add
pop
adc
jne
jne
jb
mulb
loop
add
pop
clc
sbb
cmp
negb
movsb
or
cmp
xchg
loop
ror
pop
jbe
jo
xor
adc
popf
pop
adc
aam
jbe
add
out
inc
xor
mov
sbb
das
and
popa
outsl
pop
fidivl
adc
xchg
inc
and
mov
jmp
movsl
dec
stc
ret
mov
ret
jbe
push
es
cmpsb
lock
leave
scas
push
inc
pop
sbb
and
mov
out
xor
rcr
scas
data16
mov
or
dec
enter
lcall
or
add
lahf
mov
lcall
sbb
add
out
paddsb
mov
shlb
sahf
in
and
test
icebp
insb
pop
and
pop
movsl
inc
int
int3
jge
fisubl
xlat
mov
hlt
loope
ret
sbbl
mov
sub
cmp
cmp
add
lods
popa
cld
int3
mov
out
jge
js
in
outsb
in
ret
push
xchg
push
aam
stos
loop
insb
mov
es
std
add
add
fldl
add
xor
sti
mov
les
lock
cld
push
mov
inc
in
stos
dec
push
xor
push
lds
test
or
out
pushl
hlt
jno
and
nop
test
mov
cld
sub
xlat
es
lods
test
or
lock
scas
loope
lock
insl
inc
cli
lahf
out
mov
adc
cmp
pushf
adc
insb
aas
ret
ja
cmpsl
dec
push
jbe
cs
stc
std
or
adc
add
and
jne
mov
pop
sete
mov
cmpsl
ds
int3
repnz
mov
lods
in
mov
mov
jp
and
add
shrl
xor
adc
dec
sub
fildll
mov
pcmpeqd
inc
in
dec
mov
and
cmp
adc
sti
clc
add
pusha
push
inc
mov
adc
aaa
push
adc
adc
into
imull
das
push
adc
jle
jmp
cmp
adc
frstor
imul
mov
pop
pop
test
mov
inc
cli
sahf
lock
shlb
je
cli
jae
cmp
adc
repnz
cs
and
xchg
mov
xor
adc
in
loope
mov
and
adc
shl
mov
xor
cmp
adc
cmpsb
daa
mov
mov
mov
or
aaa
push
adc
jne
scas
mov
cmp
cmp
adc
int
mov
xchg
in
inc
xchg
jae
push
adc
and
mov
adc
sbb
mov
xorl
jmp
cmp
adc
xchg
pop
sub
inc
mov
decl
sahf
jae
xor
adc
test
aaa
push
adc
testl
das
push
adc
inc
push
mov
cmp
or
lret
adc
add
cli
fcoms
mov
mov
mov
sub
inc
in
mov
sub
sbb
lret
mov
ds
pop
mov
mov
jns
imul
mov
clc
loope
sti
and
lcall
jecxz
test
push
jl
popa
test
aas
push
xor
out
fsubs
daa
loopne
test
ret
xchg
fwait
cmp
mov
mov
dec
ret
into
popf
shrl
add
dec
arpl
inc
idivb
dec
xchg
or
push
push
cwtl
push
pop
cmpsb
jnp
mov
shrb
ja
inc
adc
jl
cltd
push
sbb
inc
data16
out
sti
xchg
in
outsl
jp
xor
push
xchg
adc
scas
push
inc
test
ret
mov
mov
pop
xlat
ret
ss
rcrb
aaa
xchg
mov
and
test
push
je
push
jp
add
adc
mov
sbb
ret
push
mov
xchg
sbbb
jnp
fcmovnb
fldt
adc
lret
call
neg
pop
jae
xchg
pop
sbb
cmpsl
sub
cmpsl
outsb
fadds
sti
test
adc
xchg
enter
pmulhw
ficomps
push
or
adc
cmp
lods
sub
xor
fcoms
jnp
sarl
inc
pop
push
pop
sbb
lret
mov
cmp
sub
sarb
movsl
enter
shrl
fwait
inc
xor
cmpl
or
cld
outsl
sbb
mov
mov
mov
pushf
cmp
jle
jg
cmp
or
and
adc
xchg
insb
mov
pop
pop
xor
stc
xorb
jne
jne
or
fwait
dec
stos
mov
mov
shrl
add
xchg
push
fdivs
add
and
xchg
jp
add
add
add
aaa
mov
stc
daa
mov
or
test
xor
in
out
fidivl
stos
out
lds
add
jnp
negl
mov
out
cwtl
out
mul
std
inc
ljmp
jmp
std
negl
mov
out
cwtl
iret
mul
std
inc
ljmp
jmp
mov
arpl
jle
cmc
xchg
aad
adc
or
cmp
and
arpl
mov
ljmp
jbe
sarb
ret
mov
ret
ret
mov
and
cwtl
jbe
mov
in
xchg
mov
int3
popf
mov
lods
pop
jmp
movb
mov
pusha
fcomip
daa
xchg
mov
sti
insb
pop
mov
dec
and
outsb
mov
xchg
inc
sbb
mov
je
ret
cmp
cmc
xor
push
pop
ljmp
int
int
inc
xor
cwtl
ja
mov
cli
pcmpgtd
cmc
in
sbb
or
cmp
mov
jns
mov
les
pusha
lcall
push
gs
adc
aas
popf
or
add
jl
jmp
inc
mov
cmp
add
and
push
aad
arpl
fldl
cmp
xor
testb
dec
es
mov
dec
imul
scas
in
adc
fcomps
xlat
xlat
mov
xchg
or
adc
jecxz
repz
fcomi
nop
jmp
ss
cli
fs
xchg
inc
fs
into
stc
xchg
loopne
push
cmp
push
fdivrl
mov
mov
xchg
sahf
insb
lods
sti
adc
xor
push
mov
xor
mull
adc
inc
jg
lock
ret
mov
pop
out
mov
mov
xchg
jp
mov
push
mov
lds
pusha
jp
mov
adc
idivl
shl
das
add
mulb
jmp
aaa
mov
push
inc
pushl
arpl
icebp
or
ds
dec
int
sahf
lcall
movsl
les
cmpsb
pop
dec
rcr
push
xor
or
mov
xchg
pop
push
fcmove
jecxz
mov
test
jae
leave
dec
shrb
xchg
insb
shl
hlt
repnz
iret
fdivr
out
pop
or
inc
jle
xor
jmp
jnp
inc
pop
sub
insb
adc
fcoms
fidivrs
icebp
repz
or
sub
add
inc
cli
insb
push
and
mov
rorl
cld
into
sbb
cmpb
icebp
fdivrs
xchg
dec
adc
clc
fbld
or
gs
push
xor
pop
stos
rorl
hlt
jo
dec
dec
xchg
sbb
rol
fsubrs
out
fs
cltd
imul
rorl
mov
test
and
in
or
pop
movsb
hlt
mov
adc
test
lahf
and
lcall
xchg
lahf
adc
in
fcomi
mov
push
pop
adc
xor
sbb
lock
fidivs
pop
add
xchg
and
fwait
mov
fwait
xchg
mov
sbb
popa
fidivrs
jae
mov
stc
ds
adc
nop
fdivr
sti
xchg
outsb
cld
push
std
mov
jne
fcmovb
gs
jp
mov
xor
xor
xor
repz
jmp
mov
sbb
enter
daa
test
jl
clc
loope
sbb
sti
sub
je
addr16
dec
mov
fstps
dec
add
adc
insb
push
adc
add
jo
js
fbstp
xchg
fcmove
pushf
xor
inc
sub
xchg
cmc
ds
clc
icebp
dec
jnp
imul
loop
cmp
cli
out
sti
lds
xor
cmp
xchg
addr16
mov
sub
daa
push
je
sahf
and
sahf
dec
and
mov
jo
lods
push
stc
aas
push
cli
dec
cld
push
mov
jmp
test
jbe
mov
into
and
out
lock
scas
ljmp
movsl
xor
rcrl
mov
cwtl
jbe
xchg
mov
cs
and
xor
jne
insb
mov
div
dec
pushl
mov
pop
jbe
lods
iret
scas
sti
push
scas
lahf
cs
shlb
fs
fcomi
mov
jne
divl
outsl
cli
fidivl
repnz
pop
pop
aas
call
cmp
dec
es
in
add
stc
fnstenv
jne
inc
lahf
cmp
movsl
sbb
mov
les
in
stc
std
jge
dec
and
movsl
scas
sbb
jg
sbb
cmp
cld
jo
cmc
xor
cld
adc
mov
jno
ds
lds
jmp
inc
push
jne
outsb
xchg
jecxz
icebp
je
incl
sbb
sbb
inc
mov
in
jb
jo
fwait
lret
add
jo
je
sti
ljmp
fcoms
es
movsb
jne
jge
hlt
cmp
in
addr16
cmp
dec
xor
cs
mov
inc
mov
adc
cmp
push
sbb
mov
sarl
xchg
ficompl
mov
pop
xor
jmp
lret
add
dec
xor
sub
and
jmp
fidivl
xchg
and
mov
pop
out
mov
in
in
jl
repz
ret
cmp
shll
loopne
lock
mov
pop
and
jnp
shr
push
movsb
loop
lcall
in
or
xchg
inc
mov
cmpsl
stc
call
cmpsl
jecxz
out
test
pop
push
test
mov
mov
ficoms
lea
test
push
orl
push
shlb
sub
jb
fcmovu
mov
mov
xchg
sub
cld
mul
orb
dec
aas
push
xorl
mov
dec
sbbb
push
push
rcl
out
xor
notb
or
mull
shrb
das
sti
sub
pop
push
aam
xchg
ljmp
add
add
pop
xor
and
das
fsubrl
lods
dec
adc
shll
int
push
jno
inc
or
cli
mov
outsl
inc
fst
pop
xchg
xchg
push
sub
mov
fsubr
adc
xchg
jp
std
stos
inc
ficoms
pop
icebp
push
xchg
js
xchg
mov
cmp
jp
and
mov
pop
outsb
xor
adc
mov
cltd
pop
jp
fnstenv
aam
jl
cs
xchg
fdivr
call
mov
push
mov
imul
mov
and
aam
xor
insb
out
pop
out
and
xchg
out
jge
std
sub
cmp
mov
inc
scas
jb
daa
aas
movsb
push
jecxz
mov
mov
sbb
sub
cmp
mov
daa
fbstp
push
je
out
jmp
lahf
or
mov
jbe
mov
clc
insl
in
test
jp
xchg
push
jl
lret
js
hlt
mov
cltd
je
cltd
jb
leave
lret
cmp
sahf
out
std
inc
lds
cltd
cmpsb
add
push
stc
sbb
lahf
cmp
fstpt
or
cwtl
leave
add
lods
cmp
lods
aam
scas
scas
stos
adc
ret
mov
inc
fwait
mov
mov
out
outsl
lock
add
add
ss
ljmp
rcrl
je
shrl
stc
mov
fists
ja
je
addr16
inc
mov
out
lods
inc
or
rorb
outsb
add
jmp
sub
mov
popf
mov
jge
cmpsl
dec
aad
icebp
ja
mov
mov
xor
fnstsw
icebp
aam
push
insb
adc
insl
lahf
imul
jg
mov
jo
outsb
pop
cmpsl
xchg
xchg
mov
lds
test
mov
les
xchg
cmp
testl
notb
jge
arpl
gs
and
jae
fs
shl
shr
leave
outsb
pop
ucomiss
pop
test
pop
sbb
stc
jnp
std
sti
cli
lahf
add
pusha
adc
cmp
int
js
out
push
dec
dec
stos
incl
pop
pop
out
hlt
arpl
js
cmp
cltd
or
xchg
mov
adc
xor
mov
or
fs
fsubs
ljmp
aad
xchg
shr
inc
aad
add
outsl
in
xchg
lret
repz
dec
sbb
sti
xchg
cmpsb
inc
bound
cltd
mov
ss
push
inc
scas
or
xchg
xor
movsl
inc
loope,pt
jge
mov
xor
sub
rcrb
jnp
adc
inc
inc
inc
xor
test
and
mov
in
add
xor
xchg
neg
in
in
xor
add
xchg
mov
imul
movsb
or
mov
mov
movsb
ds
sub
out
ja
int
int3
je
shrl
sahf
cmp
out
mov
in
loope
sbb
and
sub
mov
scas
cmp
dec
lods
jmp
ret
shll
test
pusha
addl
loop
stos
fistpl
sub
push
leave
es
mov
int
cltd
push
add
enter
nop
cmp
mov
mov
xor
in
scas
xchg
cwtl
int3
dec
adc
push
dec
jmp
adc
xor
rol
lahf
pop
pop
jmp
inc
ljmp
push
mov
adc
subl
cltd
into
mov
iret
negb
pop
sahf
cltd
pop
push
cmpsb
push
xor
adc
lods
mov
dec
push
mov
fldenv
add
aas
call
aaa
js
sbb
pop
push
inc
cld
fisubl
lret
jns
push
mov
xor
xchg
push
das
mov
sbb
or
mov
lcall
in
cmp
add
ljmp
inc
arpl
aad
cmp
shrb
in
ljmp
mov
loopne
push
dec
sbb
xor
pop
cs
xor
or
mov
adc
stos
das
enter
js
je
xchg
bnd
scas
jb
cwtl
insl
pop
aaa
les
sbb
mov
inc
push
daa
into
xchg
imulb
es
jb
hlt
xor
jge
pop
pushf
movsl
fcomip
mov
cmc
ror
jnp
pop
cmpsl
dec
popf
adc
sbb
mov
mov
jle
scas
inc
test
in
cmp
xor
jbe
les
mov
test
cmp
cs
sahf
jg
adc
xchg
inc
mov
mov
xlat
mov
jg
and
cs
repz
xor
ret
cmpsb
push
movsl
adcl
out
xchg
dec
hlt
mov
les
mov
std
repz
xor
ret
cmpsb
push
lds
cmp
push
repnz
adc
je
push
jbe
add
mov
xchg
xor
push
int
call
add
hlt
subb
jne,pt
mov
out
lcall
outsl
fld1
lods
fisttpl
hlt
pop
and
mov
in
mov
lret
push
stos
repz
dec
loopne
jbe
shrb
stos
lods
jne,pt
mov
jle
lods
mov
xchg
mov
shr
fsubrp
ficompl
and
sarl
mov
adc
jo
push
pop
push
adc
cmpsl
scas
mov
push
jb
mov
adc
ljmp
daa
es
adc
ss
daa
lahf
xor
cs
mov
ds
or
les
ja
bound
pop
es
jl
je
stc
jo
sub
cmp
fidivrl
fdivl
das
adcl
mov
inc
and
cmp
in
jbe
leave
xchg
lea
dec
sbb
addr16
lahf
jb
idivl
addr16
cs
out
and
mov
cmp
das
jbe
jmp
das
sub
and
test
adc
push
sbb
mov
iret
lcall
xchg
lcall
shl
in
adc
mov
add
aaa
rclb
add
jb
or
add
or
add
fstpt
lock
mov
pop
mov
loop
divl
or
and
mov
cmp
enter
mov
popa
xor
or
imul
dec
je
push
loopne
sbb
into
dec
pop
sbb
mov
xchg
rorb
sub
cs
out
inc
ficompl
int
mov
fstpt
fbstp
sbb
sbb
cmpsb
sub
sbb
test
loop
lcall
inc
int
inc
cmpsb
adc
arpl
mov
sahf
sub
jns
in
cmpsb
test
and
lret
jns
inc
ret
mov
cmp
ret
xor
pusha
or
sbb
mov
xlat
sbb
xor
lds
adc
aam
stc
jb
bound
sbb
mov
out
aad
push
dec
pop
fcmovne
and
ss
dec
cmc
int
sbb
mov
mov
fcmove
adc
jp
add
jp
pop
imul
jge
xchg
fsubrs
xorb
inc
shl
sarl
mov
aad
mov
fistps
fnstenv
out
pop
in
push
lea
push
fldcw
shlb
leave
inc
outsl
dec
aas
movq
flds
jb
pop
test
cmp
movsb
cmp
fsubl
lret
mov
movsb
fdiv
mov
xchg
add
ja
dec
int
jb
adc
mov
inc
xor
jp
ds
push
jecxz
sbb
jo
xchg
pop
pop
jge
into
dec
sbb
mov
jl
cmc
sti
add
mov
fidivrs
je
push
push
inc
popf
cmp
stos
daa
mov
incl
mov
jne
sub
out
add
es
xchg
mov
fucomip
stos
in
incb
je
decb
loopne
ss
fldt
push
jmp
loop
int
xor
sarb
je
mov
adc
xor
mov
test
dec
popf
cmp
mov
pop
jecxz
js
add
adc
and
and
sti
sub
test
sbb
ja
push
jl
add
aas
sbb
pop
fnstsw
in
aam
int
insb
add
daa
push
clc
push
loopne
mov
lock
idivl
mov
adc
es
xor
add
test
jecxz
mov
mov
sbb
ja
arpl
adc
inc
xchg
cmp
lock
shll
add
idivl
adc
or
jne
fnstenv
xlat
xor
lods
mov
jge
mov
pop
ss
add
je
idivb
mov
adc
xor
dec
loopne
je
push
ja
popf
cmp
stos
daa
mov
incl
mov
je
sub
out
add
daa
xor
add
xchg
mov
iret
addr16
mov
lret
mov
adc
sub
test
or
and
bound
adc
sub
mov
jne
adc
jb
shr
cmc
stos
or
cmp
push
push
out
enter
xor
out
mov
xchg
lcall
ror
jo
xlat
dec
cmp
jl
cmp
out
xor
mov
das
xchg
ret
test
jnp
jne
mov
aad
ljmp
sub
aaa
into
push
sahf
cmp
cmpsb
jg
cli
adc
push
add
sbb
test
pusha
aam
xlat
pop
jp
xor
vaddpd
cmp
mov
outsb
out
pop
xchg
cmp
mov
jl
xor
test
mov
cmp
jp
clc
cmp
negb
jl
mov
mov
mov
xor
or
subl
jno
or
push
xor
mov
mov
sbb
cmpsl
lds
js
pop
cmc
mov
inc
lock
lods
pop
outsb
daa
and
lahf
outsb
fadds
fstpt
adc
xchg
daa
loopne
stc
aad
imul
add
lods
xor
adc
es
mov
imul
icebp
sbb
jne
jg
nop
movsl
int3
adc
xor
shrl
leave
outsl
add
inc
js
sar
lret
jns
in
imul
push
jo
in
push
xor
imul
jle
jl
add
adcb
rclb
sub
xorl
pop
xor
mov
pop
add
push
xchg
adc
push
xor
push
jb
dec
std
insl
mov
cmp
lret
push
lret
cwtl
dec
mov
jge
pusha
sarl
dec
jb
mov
jnp
mov
jno
movsl
cwtl
gs
ror
movsb
xchg
sbbb
shlb
inc
mov
push
arpl
sub
les
cmc
xchg
sbb
roll
pop
rorl
cmp
test
cmpsl
pop
ss
xchg
or
mov
push
pop
pop
sbb
ficomps
ret
lods
xor
add
sub
sbb
sti
dec
cmp
mov
rcrl
push
fnsave
fwait
cwtl
out
sbb
scas
lahf
dec
stc
scas
mov
cmc
adc
bnd
lds
sti
fists
and
cmp
xchg
or
dec
jg
gs
jmp
lds
jg
xchg
cld
xor
adc
push
sub
and
jne
sahf
push
sub
add
decb
cmp
cmp
idiv
imul
xor
mov
into
xchg
mov
js
filds
add
push
and
test
xor
aas
mov
dec
lods
bound
orb
ja
adc
sahf
out
cld
ds
aaa
ja
add
cmp
xor
or
xchg
xchg
jge
or
jl
repnz
hlt
jb
shll
mov
mov
pop
ljmp
cld
cmp
cmp
cmc
std
sti
mulb
xor
sarb
popf
cmp
xchg
xlat
cmpsl
cmp
mov
cmp
in
imul
push
ljmp
dec
loopne
je
push
mov
popf
cmp
stos
daa
mov
incl
mov
jne
sub
out
add
es
mov
dec
test
adc
pushf
ljmp
jl
cld
mov
adc
cltd
lahf
lcall
ret
hlt
or
std
ss
fcomps
adc
jno
fistpll
clc
lock
cli
testl
lock
push
adc
fidivl
call
jb
popa
push
adc
cld
ds
fnstenv
imul
int3
lahf
cmp
ret
add
inc
addb
xor
sub
ret
je
lds
aaa
jo
pop
out
xchg
mov
xchg
inc
lock
sbb
or
in
xchg
clc
cmpsb
pop
mov
mov
xchg
mov
and
jbe
out
ss
loop
test
adc
inc
popa
jecxz
in
push
mov
scas
mov
scas
outsl
out
fs
xchg
cmp
adc
sti
pushf
pop
pop
adcb
pop
mov
dec
nop
adc
fisubrl
dec
aas
movl
std
cmp
jnp
push
int
out
out
dec
xor
adc
inc
jge
xchg
sbbb
fdivrp
negb
jne
std
or
loop
sti
call
idivl
add
dec
cld
push
cmpsl
and
cmpsl
or
sub
mov
mov
push
pop
inc
call
pop
addr16
stc
stc
lock
jnp
mov
adc
xchg
jecxz
add
repnz
aam
arpl
mov
sbb
jae
out
bound
jno
in
movsb
and
ss
cmpsb
setno
data16
loope
ret
add
adc
and
aam
push
cmp
push
dec
pop
cmpsl
jp
je
cmp
pop
jbe
adc
loopne
orl
dec
and
fnstenv
push
adc
out
xchg
jo
sbb
dec
jmp
xor
jg
mov
and
sti
sbb
lods
add
jo
push
adc
popf
outsb
gs
inc
pop
leave
fstl
mov
adc
mov
mov
cmpsb
loop
pop
mov
xor
dec
jne
dec
mov
mov
mov
imul
mov
push
cmc
incb
aam
jb
cmpsl
cmc
push
lahf
cld
inc
iret
sub
sbb
cwtl
and
shll
lods
repnz
xor
jno
daa
mov
movsb
sub
push
jmp
insl
xor
cmp
fidivrl
jmp
addr16
cmp
cld
bound
pop
push
mov
arpl
cltd
sahf
add
inc
push
lcall
ds
sub
testl
sbb
push
fs
lahf
cli
sub
jne
mov
fidivrl
hlt
mov
mov
mov
adc
outsb
cmpsb
dec
outsl
sarl
xor
into
push
jg
out
cmpsl
mov
cld
and
hlt
mov
cld
daa
add
cmp
faddl
fistpl
add
pop
lret
pop
mov
pop
sarb
cltd
push
dec
mov
outsl
in
aas
cltd
lock
sahf
sti
lahf
jmp
call
out
mov
lock
cmp
cwtl
mov
test
call
jmp
lea
xchg
inc
hlt
xor
cld
add
in
sbb
dec
mov
jbe
mov
lahf
clc
jl
cld
aas
push
clc
sbb
fidivs
popf
mov
adc
adc
jbe
adc
daa
add
outsb
sbb
in
push
mov
push
ja
cmp
int
push
clc
hlt
push
cmp
hlt
ds
jge
and
mov
data16
and
das
scas
insb
cmp
and
mov
pop
test
cli
aas
mov
je
popf
popf
jge
add
out
repnz
scas
aad
lcall
je
xchg
xchg
add
add
hlt
sbb
ja
pop
push
adc
push
jg
cs
mov
sub
movsb
jg
pushl
xlat
stc
cli
mull
shl
fidivs
mov
pop
je
jne
subb
shrb
adc
std
cld
jb
pushf
mov
mov
xchg
cmp
std
gs
pop
push
adc
fistps
sub
cmpb
adc
stc
stos
lahf
fdivl
jae
mov
cmp
subb
addr16
repnz
cmp
push
jecxz
dec
inc
xchg
xor
mov
xor
out
jb
stos
xor
aas
test
adc
push
fs
add
dec
lea
addr16
push
imul
mov
les
adc
cli
fldl
xchg
pop
fbstp
push
xlat
push
repz
xor
test
push
orl
pusha
and
in
icebp
dec
lcall
xor
adc
mov
xor
testl
mov
sub
jecxz
push
lock
adc
scas
int
cmp
push
std
xor
clc
bsf
jg
xor
cs
xor
jo
aad
call
movsb
cwtl
xchg
mov
hlt
jno
push
das
fisubs
jp
pop
push
push
cmpsl
loop
push
andl
cmp
mov
push
add
add
add
xchg
shlb
mov
mov
les
dec
dec
outsl
mov
scas
dec
sub
testl
sub
dec
pop
pop
inc
add
shl
inc
jecxz
sbb
lcall
pop
pop
sbb
pop
int
or
adc
mov
lock
cld
arpl
sbb
cmp
xchg
in
nop
insb
fidivrl
pop
and
adc
scas
xor
ds
mov
outsb
bound
cs
mov
nop
stos
fwait
push
add
add
adc
and
mov
sbb
lds
pop
jae
out
jmp
scas
sbb
aas
pop
and
dec
fsubs
movsl
loop
mov
xchg
in
fisttpl
or
aaa
lods
lea
insb
imul
xchg
dec
outsl
pop
iret
jle
xchg
add
dec
xor
push
les
adc
mov
fadd
inc
mov
imull
adc
mov
aaa
enter
out
push
xor
cmp
inc
cli
xchg
cmp
push
pop
cmp
arpl
adc
push
pushf
scas
mov
int3
xor
scas
dec
xorb
int3
aaa
ja
jg
add
pop
inc
push
xor
insl
pop
call
mov
je,pt
jne
mov
jmp
roll
je
pop
loop
xchg
lea
xchg
inc
hlt
xor
int3
aaa
ja
outsb
sbb
insb
push
inc
cmp
aam
fnstsw
mov
aad
mov
aaa
mov
mov
cld
jne,pt
mov
jmp
mov
fmul
add
insl
popf
jbe
lea
jo
xor
icebp
dec
aaa
fstl
mul
orl
mov
dec
outsl
lahf
cmp
push
lock
shll
sbb
jp
mov
sbb
add
call
or
fbstp
pushl
add
pop
fisttpl
and
mov
pop
dec
pop
xor
sub
mov
inc
aaa
popf
add
mov
sbb
icebp
push
or
xchg
insl
mov
int
loop
sahf
jle
cltd
orl
cmp
adc
mov
fidivrs
in
into
popf
mov
lret
ja
push
cli
lahf
aam
adc
sarb
negb
stos
cmp
je
rcrb
xor
div
mov
mov
mov
and
test
dec
gs
sub
gs
xchg
mov
ja
or
xchg
inc
sbb
aaa
ss
cmp
pop
call
fs
test
test
ja
add
xchg
inc
jecxz
int
je
repnz
xor
pop
mov
cmp
fstpt
or
pop
ljmp
mov
dec
rorl
andl
and
movsl
ja
negl
pop
sbb
adc
add
jo
add
scas
test
fisubl
ljmp
and
push
sbb
lcall
cmpsl
sbb
nop
adc
aam
mov
popf
lret
mov
and
jbe
push
pop
cli
cmp
jo
adc
fmuls
pop
addl
lret
adc
jb
stc
and
jge
jecxz
adc
iret
cmp
nop
cmc
cmp
jb
mov
iret
fmull
fnstenv
mov
add
cltd
cld
inc
daa
pop
int
pop
fdivrl
sbb
mov
adc
repz
mov
xchg
fnstsw
leave
mov
push
adc
fadds
mov
insl
repz
shlb
loope
mov
jecxz
fstl
add
mov
mov
sbb
or
loop
cmp
and
pop
pusha
jle
mov
cmp
cwtl
bound
adc
ret
ja
jb
in
popf
out
mov
jo
movsb
push
test
push
push
aaa
insl
add
fidivl
jmp
sbb
jno
sbbb
adc
push
sbbl
aad
in
in
out
std
sbb
mov
pop
push
test
cmp
inc
cs
pop
cwtl
mov
sbb
xchg
pop
add
test
pop
mov
xorl
pusha
imul
xorb
jl
mov
lds
mov
scas
addr16
lret
pop
push
jp
in
mov
loop
add
push
loopne
pop
pusha
or
sbb
jne
rcll
add
sub
xorl
lcall
les
pop
cwtl
leave
sbb
scas
lret
shll
inc
mov
jns,pn
out
pop
movsb
push
fstpl
enter
push
inc
test
test
sbb
addb
imul
xor
sub
aas
xor
sbb
cmp
out
cmp
test
lock
cmp
movsb
add
add
lret
adc
movsl
add
push
movsl
add
push
cmpsb
add
jge
add
fsubl
add
lahf
cmpsl
add
cmpsl
add
shll
add
fisubrs
add
imulb
add
fldcw
adc
scas
add
adc
add
les
add
repz
adc
mov
adc
add
jmp
jp
mov
jge
xor
ret
dec
push
dec
push
bound
jg
and
push
add
cmpsb
cmpsb
add
dec
cmp
aas
pop
out
out
les
mov
adc
mov
gs
push
push
adc
pop
jo
pop
adc
in
mov
movsb
adc
mov
adc
ret
loopne
test
dec
ss
mov
mov
hlt
inc
jmp
pusha
pop
or
cmpsb
ja
fwait
cmp
or
out
mov
jbe
pop
fwait
ret
pop
ret
aas
xor
test
sbb
dec
adc
ret
aam
lret
cmp
sub
ret
pop
ret
aas
cmp
rcrb
test
enter
cld
or
or
repz
sbb
push
outsb
shrb
shlb
push
lds
and
js
in
adc
sub
in
stos
mov
mov
inc
mov
xchg
dec
inc
mov
mov
mov
jns
rorb
xor
lahf
jbe
cmpsb
rolb
test
lods
data16
inc
adc
movsb
pusha
xchg
mov
xor
ret
loope
mov
sub
and
arpl
adc
shlb
lods
cmpsl
mov
xlat
mov
inc
arpl
adc
sbb
xchg
jno
test
adc
jle
sbb
and
mov
shlb
mov
mov
sbb
dec
jne
in
pop
lcall
mov
pop
cwtl
sub
push
and
lcall
and
pcmpeqb
das
ret
and
fdivrl
cmpsb
lods
jle,pt
inc
mov
imul
adc
rdmsr
mov
adc
ds
adc
call
clc
aaa
cltd
push
xor
pop
out
jle
mov
jp
inc
ret
mov
sub
loopne
jge
lock
mov
push
fs
test
pusha
push
mov
xor
cmp
imul
rorl
les
iret
xchg
lahf
add
icebp
dec
fdivl
fcoms
das
movsb
pop
mov
int3
in
fsubs
dec
sbbb
xsaves
cmp
xchg
mov
fs
shll
nop
jl
jnp
xor
test
sbb
mov
out
test
xchg
xor
shrl
pop
xchg
adc
sub
cmpsb
or
pop
aam
mov
sbb
fwait
or
cmp
scas
bound
mov
xor
daa
dec
mov
inc
mov
or
popf
int3
popf
cmp
cs
sahf
fimull
into
push
shlb
sub
stos
dec
inc
fwait
cwtl
test
fisttpl
fsts
push
sbb
cmp
push
xchg
ret
add
ljmp
aas
subl
and
xchg
sbb
movsl
mov
cld
dec
data16
or
sub
mov
call
jmp
in
pop
mov
ss
scas
mov
movsb
xor
sub
bound
mov
adc
mov
jp
adc
in
push
xor
outsl
divl
inc
mov
out
sbb
and
mov
and
mov
push
adc
and
fstl
loope
stos
pop
fidivl
shrb
sub
xor
mov
out
in
adc
xor
repz
daa
and
jmp
mov
insb
push
mov
loope
jne
in
fucomi
or
cli
xor
test
int
cli
pop
das
cmp
ss
jl
sti
mov
or
dec
int
outsl
push
or
in
into
adc
fdivr
shll
out
mov
cld
sti
test
mov
aaa
xor
insb
pop
adc
sbb
out
lret
mov
xor
in
fnsetpm(287
cmp
xchg
xchg
cmp
das
sbb
mov
push
hlt
scas
scas
in
mov
push
mov
mov
scas
jno
lret
mov
je
jne
std
in
fstpt
and
repnz
test
es
mov
fs
imul
jmp
std
shll
mov
js
adc
in
fsubs
sti
fistpll
push
lds
test
cmpb
aaa
sub
outsb
inc
or
outsb
enter
xor
fwait
add
jae
or
cmp
jns
inc
shl
mov
mov
out
outsb
test
mov
mov
icebp
in
insb
xchg
sti
imul
sub
std
std
popf
jns
je
jmp
test
jecxz
pop
xor
mov
mov
imul
jp
add
jle
fwait
pop
cli
lret
push
sarl
xchg
pop
dec
and
in
add
jl
mov
mov
xchg
mov
xchg
pop
push
lock
jo
test
repnz
dec
in
in
out
pop
mov
adc
inc
aad
mov
mov
inc
xchg
enter
ret
adc
xor
bound
aas
jmp
mov
inc
test
mov
nop
je
lods
rorl
xor
jno
neg
push
fsubr
mov
cmp
inc
or
sub
pop
insb
pop
cmp
xor
icebp
ljmp
mov
cwtl
in
popf
out
push
cld
mov
push
pop
je
cli
repnz
jp
sub
imul
shl
jp
mov
test
scas
jp
mov
scas
sbb
out
xchg
loop
flds
in
jecxz
and
push
push
xchg
jmp
lret
bound
in
int
std
xchg
outsl
decl
push
cld
pop
jbe
out
fwait
popw
mov
jl
jne
int
jnp
or
push
jbe
mov
add
adc
jle
test
xchg
roll
fs
or
cmp
aam
shrb
and
dec
cmpsb
sbb
xchg
sahf
xlat
dec
inc
dec
add
push
mov
rolb
pushf
je
cltd
cli
xlat
cltd
add
sub
cmp
pushf
std
int
fs
daa
mov
dec
inc
in
bound
cmpsl
jo
cmpsl
jmp
pop
jp
jo
ss
fcmovnb
sub
or
lods
jl
jmp
jmp
and
cmp
jmp
sub
sahf
test
test
outsb
xchg
jmp
cmpl
pop
movsb
dec
adc
cmpsl
push
in
mov
or
cmp
into
aas
pop
sbb
cmp
stos
jo
push
pop
adc
rcll
and
push
mov
cltd
movsl
mov
sub
dec
sub
sub
ret
push
icebp
repz
hlt
push
mov
add
jp
repnz
xor
scas
lahf
jl
mov
hlt
cs
out
ret
loopne
xor
es
jge
mov
adcb
sti
into
cli
std
sti
int
aam
repnz
dec
jle
shrl
sub
and
and
xor
stos
hlt
inc
pop
dec
ret
fidivrs
jb
fidivl
decb
stos
cmc
addr16
jmp
out
fwait
mov
mov
jmp
mov
pop
leave
mov
dec
out
xlat
xor
in
repnz
pop
test
mov
call
cmpsl
pushf
cmc
mov
cmc
fwait
sub
fidivrs
cmp
jmp
out
fbstp
or
lock
add
add
test
mov
pop
outsb
jbe
fs
popf
cmp
aas
test
ja
rorb
ret
outsl
mov
jbe
inc
sti
sub
add
addr16
cmp
insb
popf
je
negl
in
fstpt
lret
inc
icebp
into
popf
mov
clc
sub
pop
push
jae
fs
mov
addr16
jmp
out
dec
add
mov
lea
mov
roll
xchg
sbb
dec
jmp
adc
lods
or
jmp
pop
cmpsl
or
cli
mov
ja
daa
iret
jmp
mov
jg
int3
mov
push
enter
ja
xor
pop
cs
mov
jbe
into
in
and
xor
mov
mov
js
jecxz,pt
lods
hlt
das
das
jne
push
lds
gs
in
cli
stc
ja
shlb
repz
lock
jnp
jo,pt
scas
mov
test
clc
jae
lods
jnp
add
jecxz
in
xor
fwait
inc
cld
mov
ss
inc
push
inc
orl
cld
dec
inc
std
out
out
mov
add
lods
imul
aas
ds
andl
xchg
stos
and
popf
sahf
testl
test
xchg
pop
outsb
xor
push
divb
lcall
adc
xchg
divb
std
dec
push
push
jl
jle
xchg
or
pop
dec
aas
cli
rep
dec
mull
push
cmpsl
xor
jl
dec
cmp
push
insb
daa
divl
cld
icebp
ljmp
hlt
lret
push
mov
ficomps
xchg
mov
push
sarb
pop
jp
cld
lahf
jmp
or
mov
test
dec
or
pop
stos
lret
cmp
pop
clc
js
push
outsb
nop
out
mov
dec
cmp
sti
stc
sarb
inc
fstl
jp
push
in
lods
ljmp
shl
add
pop
push
test
dec
sbb
xchg
pslld
addb
xor
adc
jae
mov
dec
push
jge
es
test
cld
sbb
sbb
iret
adc
pop
scas
leave
or
adcl
out
push
cmpxchg
jo
push
cmpb
rclb
pop
sub
cs
push
jnp
adc
and
xchg
bound
aam
inc
loopne
cmp
lds
dec
loope
push
ficompl
lods
pop
aad
sbb
clc
repnz
add
loope
push
mov
leave
in
add
dec
loope
jnp
dec
dec
pop
mov
dec
mov
sub
or
or
xchg
mov
xchg
xor
pop
inc
mov
cmp
shll
mov
insl
pop
iret
cmc
popa
sub
in
sti
outsl
push
mov
mov
xlat
dec
add
mov
mov
mov
sahf
ja
cmpsl
sub
test
cmp
and
jmp
divl
jnp
in
cmp
out
jae
mov
scas
inc
jns
in
test
push
je
test
lock
inc
pop
int
outsl
pop
jge
jp
jp
cmp
sahf
cmp
and
stos
mov
call
scas
mov
fsub
adc
or
idivl
int
iret
jae
xchg
push
jo
pop
add
add
loop
xor
bnd
fcomps
hlt
vmovntps
mov
idivl
add
add
or
push
hlt
insl
jp
xor
xor
pop
lds
stc
fistpll
jecxz
add
in
or
int
cld
cmc
ret
sub
imul
out
xlat
xor
sub
popf
pop
std
pop
arpl
mov
add
sbb
fidivrs
mov
shrl
sub
je
cmpsl
je
repnz
and
cmp
lret
jno
jmp
sub
ja
jecxz
add
push
das
fmulp
mov
adc
adc
cmp
add
aad
fwait
sub
outsb
sbb
dec
or
out
adc
call
cmpsl
movsl
mov
popf
cltd
imulb
jmp
fistpll
out
stos
js
insl
inc
sub
inc
loop
sti
popf
and
mov
jbe
or
mov
mov
jbe
subl
jmp
stc
jns
xlat
cmp
xor
inc
cmc
lret
xor
pop
mov
das
pop
and
movd
in
in
xlat
data16
sbb
xor
leave
dec
add
xor
repz
pop
clc
in
jmp
add
jo
and
notl
sahf
jb
ret
xor
andb
test
adc
dec
mov
sub
pop
cli
fistl
les
xchg
and
lcall
mov
daa
shl
movsb
pop
dec
cs
add
jae
mov
insl
lahf
push
mov
int
push
mov
mov
mov
les
push
fistpll
loopne
int
push
out
or
test
or
clc
lahf
sub
xchg
jecxz
add
mov
adc
jb
xor
cltd
daa
inc
xchg
lock
loop
push
pop
sub
mov
data16
inc
jp
sbbl
cmp
mov
pcmpgtd
xchg
and
xchg
scas
aam
dec
xchg
and
mov
daa
imul
loope
int
cld
mov
jbe
push
jecxz
repnz
lret
mov
clc
shrb
pop
cmpsl
cwtl
or
jbe
ret
mov
andb
into
dec
mov
cmp
out
idivb
sbb
xlat
insl
or
lods
push
mov
test
stos
cmp
mov
sub
test
imul
dec
and
xchg
sbb
push
in
and
fistpll
loopne
xor
inc
mov
mov
adc
push
jnp
adc
and
in
or
pop
mov
in
or
icebp
ja
insb
push
adc
out
in
dec
ret
add
dec
out
jecxz
int
js
mov
cmpsl
in
sub
inc
ss
inc
and
add
shlb
lcall
xchg
mov
xchg
pop
pop
rcll
pop
mov
shrl
lods
jne
in
out
push
out
xchg
and
dec
bound
pop
jmp
rorb
aas
add
rcrb
mov
pop
lds
js
lcall
fildll
hlt
mov
pop
mov
movsb
or
sahf
cld
mov
pop
lea
repz
push
ss
and
dec
fs
adc
lods
imull
xchg
pop
jo
nop
insl
push
adc
out
cli
or
in
cmpb
mov
lods
popf
hlt
mov
fwait
repnz
int
outsl
push
in
insl
jns
jle
cmp
mov
cld
cmpsl
lret
xor
divl
dec
call
lret
push
jns
sbb
sbb
popf
jae
cmp
push
repz
cltd
jbe
dec
jmp
testb
mov
into
popf
cmp
popf
cmp
outsb
and
div
dec
je
push
adc
leave
xchg
mov
nop
imul
push
lret
sarl
std
jb
icebp
icebp
dec
mov
xchg
in
inc
pop
xor
sub
jmp
or
sub
in
pop
jns
mov
add
das
push
mov
aaa
sti
push
imull
scas
divl
dec
in
imul
push
stos
jle
sub
in
into
bound
pop
ret
lea
inc
repnz
setns
dec
loopne
fstpt
and
xchg
insb
fdivr
jmp
decb
inc
jl
je
divl
dec
loopne
fstpt
shlb
sbb
outsl
mov
outsb
push
adc
les
subb
daa
xor
or
sub
mov
jg
jecxz
add
push
es
mov
pop
andw
or
pusha
out
fiadds
ljmp
sbb
loopne
mov
xchg
insb
je
jbe,pn
cmp
push
insl
stos
jge
aaa
jb
dec
jmp
fwait
loope
in
jecxz
xchg
mov
inc
lods
jno
fstpt
div
lahf
jecxz
into
and
mov
and
int
loopne
insb
lahf
mov
out
pop
std
out
inc
imull
xor
cmc
neg
add
mov
outsl
jle
outsl
out
fs
lret
push
subb
fxtract
sbb
dec
mov
cmp
cmp
mov
jb
push
das
mov
mov
movsl
sub
cmp
cmpsb
jmp
and
fdivrl
fs
jbe
test
mov
jno
pop
imul
dec
inc
jo
cmp
jae
sbb
jge
jl
clc
cmpsl
cmc
dec
jmp
or
mov
aam
pop
xchg
mov
or
mov
jl
js
loop
push
loopne
mov
repz
fsts
out
addr16
xchg
loop
addr16
ljmp
hlt
test
and
je
addr16
jp
mov
roll
pop
aad
sbb
dec
sub
mul
loope
fimull
stc
das
cmpsb
sahf
fsts
jns
push
rcr
les
lock
lret
nop
nopl
fwait
xchg
mov
inc
pushf
cli
ss
icebp
sbb
hlt
sbb
pmulhw
xchg
nop
xlat
test
xchg
or
mov
push
mov
pop
jae
inc
sbb
or
pushl
or
pop
dec
add
sub
repz
adc
fcomps
ret
lcall
jno
ds
outsb
sub
lret
int3
mov
ret
sub
jne
ret
lds
jae
and
sbb
sbb
sti
sub
cmp
cmp
fadds
pop
adc
cmpsb
pop
pop
rorb
ret
or
fs
or
test
inc
daa
sub
aam
inc
jno
jmp
loope
in
add
dec
sbb
xor
stos
mov
pushf
enter
subb
repz
cmp
push
push
loope
cmp
jbe
sbb
mov
fcompl
aas
fst
push
popf
add
push
mov
mov
movsl
in
movsb
roll
in
dec
jb
js
pusha
push
mov
xor
fstpt
std
mov
ss
cmp
imulb
and
scas
dec
push
scas
imull
mov
ret
sti
stc
arpl
outsl
cli
iret
pusha
into
jmp
mov
popf
mov
cmpsl
lret
mov
stos
cmc
std
sti
jg
and
out
in
insl
repz
jbe
adc
and
dec
stos
and
mov
mov
addb
xchg
adc
xchg
icebp
aam
bound
adc
out
fbstp
sti
jno
hlt
jbe
aaa
or
shrl
and
push
jmp
fwait
popa
out
fistpll
movsb
mov
lock
mov
jg
outsl
fidivrs
mov
or
loop
adc
jae
pop
imull
jmp
cmp
and
push
xor
and
aas
push
cmpsb
xor
adc
mov
jmp
std
jo
imul
stos
in
into
popf
jb
outsl
fwait
mov
popf
push
jbe
sbb
icebp
cmpsl
hlt
call
pop
adc
adc
and
mov
xchg
cmp
sub
mov
ja
inc
xor
hlt
incl
jo
out
imul
push
cmp
lret
jp
inc
leave
xor
stos
leave
adc
xchg
pusha
cltd
cld
hlt
je
sbb
dec
pop
jp
inc
pop
cmpsb
push
cmpsl
dec
pop
mov
jg
daa
sti
lock
cmp
aad
scas
and
jbe
lahf
mov
jne
xchg
push
sub
push
sbb
cld
je
cmpsl
repnz
out
cwtl
fildll
repnz
mov
sbb
cmp
test
add
ja
out
fistpll
in
xchg
lods
jge
push
in
pop
das
int3
int
jae
push
jae
sub
or
nop
sub
icebp
loop
jno
sbb
sbbl
cli
mov
jns
cld
out
out
pusha
insl
push
lret
cmpsl
sub
mov
or
ret
cmp
or
inc
popa
push
adc
push
pop
cmc
rcl
int
jg
add
push
add
xlat
or
inc
je
jl
shrl
leave
mov
push
ja
je
mov
push
test
mov
and
or
js
or
out
sti
mov
cld
xor
scas
scas
hlt
insb
xlat
insb
call
stc
cli
je
sti
and
jl
repz
js
mov
roll
js
pop
mov
xor
ljmp
xchg
xor
push
xchg
xor
mov
in
add
lds
gs
movb
add
sbbl
xchg
dec
sub
and
fstl
aaa
cwtl
outsb
in
mov
push
cmp
mov
pop
cmp
add
cmpps
sbb
in
pop
jp
testb
lret
pop
popl
inc
adc
and
and
ds
or
lea
mov
ja
jo
mov
dec
pop
hlt
mov
insb
in
in
xchg
loope
into
or
aaa
add
cmp
xor
jge
add
cs
pop
out
sub
rcrb
gs
mov
jg
dec
ret
xlat
add
dec
xchg
dec
ffreep
add
sbb
xor
filds
ds
adc
push
sbb
std
fistl
fs
xchg
push
fs
mov
pop
and
sbb
and
mov
push
sbb
das
das
aaa
sbb
adc
xchg
pop
mov
lea
lcall
imul
repz
jl
xchg
lcall
mov
insl
insl
aaa
scas
pop
jecxz
inc
stc
stos
hlt
xor
call
aad
icebp
sti
jnp
xchg
and
jg
daa
xor
inc
jg
hlt
cltd
lods
xchg
cld
cmp
je
inc
sti
in
into
jbe
cmpsl
or
ja
pop
jle
jbe
dec
jmp
pop
xchg
fidivrs
xor
test
and
jns
idiv
lods
jbe
popa
sbb
cmp
imull
negb
jmp
add
dec
nop
and
and
mov
jno
cwtl
rcrl
pop
push
pop
lahf
out
pop
ficoml
jne
out
jg
pop
cmp
ljmp
out
mov
cli
stos
pop
xlat
xchg
das
push
adc
adc
arpl
or
mov
fdiv
push
in
orl
les
cmpsb
cmpsb
mov
jo
ds
inc
cli
or
xchg
jmp
rorb
inc
mov
cmp
xchg
add
imul
xor
mov
cmc
fisttpll
push
clc
cld
stos
sti
mov
push
mov
std
repz
fucomi
lods
and
pop
sti
btr
je
adc
lds
and
push
lret
stc
test
xor
mov
lret
ss
push
icebp
jmp
rcrb
ret
fldl
add
je
in
jno
cltd
cmp
push
cmc
enter
pop
adc
sarb
in
or
out
mov
int
sbb
out
push
cli
fstp
ljmp
lahf
cmp
test
jnp
idiv
add
jno
add
fidivrl
fidivl
ret
xchg
jns
fdivrl
inc
sti
fidivl
ljmp
stc
out
dec
dec
mov
push
jge
cmp
scas
scas
xorb
repnz
inc
mov
bnd
jno
xor
inc
mov
fnstsw
jmp
out
sbb
mov
stc
sbb
shll
icebp
repz
outsl
leave
sbb
mov
rolb
push
sbb
xchg
test
mov
adcl
cmpsb
aam
insl
mov
sahf
lret
xchg
imul
mov
xchg
lods
mul
inc
and
sub
js
jae
cmp
mov
jle
rorl
sar
out
subl
lods
shlb
lock
imull
icebp
enter
mov
ffreep
xchg
mov
dec
dec
cmp
outsl
push
adc
daa
movsb
xchg
div
imul
xor
or
jb
int3
push
mov
stos
jp
test
pop
lcall
xlat
xor
inc
std
sbb
sub
ljmp
dec
cmp
sub
or
add
mov
jle
xor
int
arpl
imulb
add
data16
push
lret
sbbb
xor
sbb
inc
push
call
xchg
push
or
int3
pop
jl
cmp
rcrb
xor
leave
test
rcrl
dec
dec
nop
mov
adc
jns
js
mov
loop
add
jno
nop
jmp
test
arpl
push
push
push
testb
dec
jns
mov
sbb
sbb
adc
push
movsb
sub
mov
mov
sub
mov
mov
popa
nop
nop
adc
adc
fisttpll
pop
jne
sbb
icebp
gs
outsl
cmp
adc
cmpsl
sub
push
add
mov
adc
mov
jnp
mov
cmp
adc
xchg
cmp
fidivrs
loope
or
pop
sbb
cmp
cwtl
in
mov
popf
aad
and
inc
push
pop
jl
mov
jno
pop
cmp
ret
add
jl
mov
xor
pop
jno
mov
movsb
inc
lret
push
ret
lea
cmpsb
shrb
ret
mov
mov
pop
jnp
mov
movsb
fistps
jge
xchg
fs
pop
cltd
mov
mov
aad
xchg
lret
inc
xchg
sbb
dec
arpl
stc
test
aad
push
sub
fcomi
jmp
fnstcw
push
cmc
insl
jle
xchg
mov
fstpl
loope
sti
ljmp
jge
sarl
out
insl
and
cmp
loope
mov
dec
stos
ror
jl
mov
sti
subb
cmp
sbbb
dec
push
ljmp
divb
cmp
sub
mov
rcrb
sub
hlt
sub
xchg
mov
int3
add
mov
cmp
and
sti
out
mov
sub
push
jbe
xchg
mov
mov
adc
jge
pop
pop
addr16
jno
testl
shlb
sti
mov
mov
fincstp
aaa
adc
in
xchg
and
popf
mov
xor
idivl
mov
jo
leave
fistpll
cli
mov
loope
ficomps
cli
jo
cmpsb
push
lea
jg
out
sti
pop
sti
test
or
or
loopne
stos
cltd
je
xchg
jmp
rcrl
sti
shlb
sub
lods
stos
ja
icebp
mov
aaa
jmp
adc
jp
call
mov
test
cmp
mov
adc
jns
fcomps
lock
lcall
mov
dec
jnp
xor
pop
sahf
lret
icebp
ljmp
adc
mov
bnd
pop
dec
xor
mov
lcall
add
lret
sub
adc
lea
in
mov
lcall
cmp
movsb
cld
scas
cltd
mov
leave
rolb
pop
and
fiadds
aam
lcall
stos
subl
ds
mov
mov
jp
repnz
out
mov
scas
aaa
je
xor
cld
es
jle
sti
sub
xchg
std
shrl
inc
leave
push
xor
scas
pop
cmp
cmp
jg
test
push
hlt
dec
fnsave
das
in
orl
rcl
fwait
clc
push
stc
je
mov
jnp
lock
sarb
cld
arpl
push
fcoml
jo
in
loope
jnp
loopne
call
lea
loope
cwtl
xchg
scas
cs
cmp
xchg
popa
mov
adc
les
das
repz
pop
adc
scas
xlat
lods
mov
pop
lea
dec
xor
leave
mov
pushf
sbb
pop
adc
lcall
pop
dec
ret
ret
jo
pop
cli
adc
jns
andl
cltd
movsl
or
push
lcall
inc
out
cmp
or
add
adc
pop
imul
rcrb
mov
gs
lock
xchg
cltd
push
push
scas
insb
and
scas
xor
mov
dec
or
fisttpll
test
movsl
pop
cmp
movsl
lea
in
mov
cmc
pop
push
push
sub
adcb
jno
mov
push
push
adc
dec
rcrb
rol
mov
popf
in
push
or
inc
ret
das
iret
shl
sub
mov
inc
mov
inc
push
fsubrs
dec
or
loopne
jmp
cmp
cmp
cs
rcrb
dec
inc
inc
lret
and
fiaddl
push
xchg
pop
add
mov
ds
xor
pop
ss
mov
hlt
test
cmp
fdivrl
and
icebp
test
enter
dec
scas
inc
lret
or
and
in
mov
shlb
out
and
lahf
add
scas
adc
out
ss
je
cmp
ret
mov
lret
repnz
divl
stc
jb
mov
loop
xor
repnz
dec
imul
xlat
icebp
mov
in
push
adc
mov
ret
negb
xor
mov
mov
cmpsl
fsubrl
adc
add
adc
push
adc
ret
xor
out
adc
in
addr16
fidivl
sti
adc
jl
stc
stos
cmpsb
xchg
shrb
adc
call
adc
adc
add
and
add
adc
adc
jl
sbb
std
pop
sub
xlat
cmpsl
out
sub
pop
adc
lahf
pop
adc
stos
cli
outsb
sbb
lods
and
xchg
mov
dec
arpl
sbb
or
add
cmp
test
xchg
lock
cltd
mov
std
pop
stos
push
push
jg
jmp
mov
sti
call
imul
pop
ja
stos
mov
cltd
mov
dec
pop
push
imul
pop
jle
jp
cmpsb
mov
jb
pusha
xchg
mov
pop
enter
or
xor
dec
sbb
fsave
jg
mov
jnp
mov
jle
sbb
cs
and
bound
ljmp
daa
stos
mov
jbe
pop
icebp
je
cmp
rclb
sbb
sbb
dec
jmp
arpl
pop
push
mov
jge
ljmp
test
lods
mov
cmp
das
rorw
aas
jno
pop
lds
mov
lods
mov
outsb
pop
jmp
adc
mov
jge
pop
inc
dec
gs
xchg
fnstsw
hlt
cmp
jbe
adc
adc
jbe
sbb
and
push
pop
insb
adc
test
pop
pushf
mov
or
lds
fnstsw
inc
in
loop
mov
sti
cmc
sbb
and
push
cli
mov
imull
jbe
pop
mov
jae
in
lcall
outsb
scas
clc
sti
inc
mov
jne
sbb
aad
adc
and
ja
push
cmp
incl
loopne
mov
jp
fcomps
push
cld
jp
xchg
fwait
lahf
sub
jl
fcom
jns
aaa
adc
xchg
fdivs
scas
pop
in
jb
lahf
fnstcw
sbbb
and
imul
pop
mov
mov
js
inc
inc
ss
or
fistl
jge
imul
rol
cmp
flds
hlt
dec
dec
movsb
loop
push
ret
fnsave
arpl
xchg
mov
mov
or
xchg
inc
pop
test
mov
adc
xor
lret
aam
loope
test
xchg
test
adcb
dec
mov
mov
ror
xor
jbe
mov
out
adc
div
fwait
push
sbb
outsb
insb
xchg
pop
and
cltd
pop
testl
cli
inc
in
fcmovu
dec
and
jmp
outsl
inc
sub
lock
scas
test
sub
push
cmpl
daa
or
mov
mov
aaa
add
jl
das
or
shlb
lods
call
pop
popa
cmp
mov
cld
mov
mov
dec
push
cmpsl
leave
jb
inc
sub
cmpsb
mov
mov
sbb
push
sahf
mov
jp
push
pop
and
sub
xchg
fisttpll
or
sbb
int3
subb
push
packsswb
xchg
mov
icebp
mov
inc
xor
fdiv
mov
pop
xlat
push
cmp
lock
pop
sti
aas
jmp
testb
test
fnstsw
cmp
in
sbb
lods
es
inc
xor
xor
hlt
sbb
jo
mov
inc
xchg
xchg
les
mov
xor
call
jle
ljmp
std
xor
call
sub
adc
mov
push
mov
sub
jmp
in
ret
fadd
daa
pop
jl
jge
pop
sub
adc
sub
pop
adc
pop
sbb
mov
sarb
lahf
push
sub
jp
mov
jne
repz
ret
cmpsl
sbb
or
push
cli
jo
cmp
pop
lahf
cmp
fs
aam
ret
je
mov
in
mov
pop
push
jne
mov
imul
pusha
cmpsb
push
ret
loopne
faddl
jae
mov
les
mov
jnp
fbstp
ffree
bound
fimull
dec
dec
push
in
hlt
das
ret
sub
mov
aaa
cwtl
cmp
and
or
mov
shlb
loopne
jg
ss
je
xchg
sti
pushf
in
push
stc
push
ss
or
sbb
xchg
mov
adc
push
mov
adc
nop
cmp
xor
incl
lret
scas
sub
pop
stc
jp
fidivrs
sub
in
repz
push
loopne
mov
loop
or
adc
jnp
add
mov
mov
fwait
shlb
pop
cltd
mov
jmp
cmc
std
jb
jb
lods
pusha
test
testb
jecxz
rorb
stc
xor
fidivl
jp
mov
repz
pop
imulb
sarb
mov
ret
negl
int
sbb
pop
pusha
add
jmp
adc
jb
fidivrl
cmp
cmp
jae
push
inc
out
iret
adc
lods
lret
push
popf
ret
in
jne
or
mov
or
test
enter
sub
inc
mov
pop
in
out
rorb
in
fs
sub
lahf
jle
stc
adc
jmp
pop
xchg
cmpsl
lret
sbb
jno
insb
les
jl
push
scas
test
mov
push
add
jl
jne
loop
out
xor
mov
mov
rclb
jl
cli
jae
jp
cld
sarl
jle
xor
and
pop
jp
imul
jnp
imul
cs
mov
and
xor
xor
aam
push
xchg
icebp
cmp
fmuls
sahf
jbe
add
test
pop
stc
sbb
inc
cmp
hlt
test
movsb
cmp
loop
jp
testb
loope
push
psubusw
cltd
inc
fidivrl
adc
or
jg
stos
jns
sub
call
int3
scas
adc
jg
repz
data16
stc
dec
out
pop
les
fsts
outsl
add
loopne
pop
out
or
mov
imul
insl
int3
mov
cltd
mov
mov
pop
dec
adc
lea
pop
jmp
in
jmp
add
xor
test
imul
sbb
mov
cmpsl
mov
xchg
filds
lret
call
push
cmp
inc
jb
xchg
mov
xor
add
nop
sub
sub
mov
push
sub
mov
das
add
pop
xchg
insl
shll
imul
and
mov
arpl
mov
mov
lahf
ja
xor
out
adc
dec
insl
dec
and
icebp
push
cmp
cmpb
insb
mov
mov
in
mov
push
fmul
cmc
das
add
jge
jnp
ds
iret
movsl
mov
addr16
rcrb
mov
cmp
das
stos
cwtl
inc
sbb
xchg
sub
cli
xor
cmc
jecxz
add
pop
loop
ret
es
add
adc
xor
in
in
das
js
inc
shll
mov
sub
cmpsb
test
mov
pop
inc
jge
sti
int
adc
movsl
xchg
pop
add
push
hlt
and
push
pop
mov
mov
add
mov
les
mov
xor
aas
mov
dec
scas
arpl
mov
mov
iret
cmp
ss
orl
pusha
xchg
mov
mov
pop
add
jge
repz
in
loop
movsl
insb
aas
jne
mov
sub
sub
xor
mov
add
mov
lcall
mov
bound
pop
mov
add
cltd
pushf
sub
out
jne
std
adc
sub
mov
jns
add
pop
shll
add
stos
cmpl
xor
shll
adc
pop
fs
fcomi
mov
mov
mov
fbstp
out
pop
dec
push
in
sub
adc
push
rolb
add
ja
leave
cmp
loope
xor
int3
daa
arpl
add
cmp
xor
jbe,pn
icebp
jnp
call
fwait
scas
mov
mov
cmp
movsl
ret
fs
daa
mov
jp
pop
sbb
imul
push
adc
cmp
movsb
ja
jl
adc
jp
sti
pop
xchg
repnz
lods
sbb
shll
mov
mov
and
add
fs
loop
jle
dec
rorl
outsl
push
inc
test
mov
cmpsb
pop
fldt
push
mov
push
ret
shll
jl
stos
jp
cli
dec
mov
push
repz
cmp
push
jle
xchg
lock
add
add
stc
mov
jp
aaa
mov
and
int3
adc
clc
lods
fsubl
xor
jmp
mov
jns
jo
out
sti
push
add
adc
out
fadds
aaa
icebp
xchg
aam
dec
jnp
clc
push
sti
dec
call
data16
mov
xor
xchg
addr16
movsl
pop
clc
xchg
in
ret
inc
xchg
out
add
out
or
push
mov
lretw
dec
pop
push
cltd
xchg
inc
int
roll
mov
add
nopl
xchg
lods
inc
jl
test
sbb
dec
sbb
mov
mov
loopne
mov
mov
adc
add
adc
cs
jno
ss
pusha
xlat
adc
add
adc
inc
rcr
sarl
sub
lahf
or
push
pop
jmp
movsb
int
cmp
mov
add
push
sub
enter
ds
jo
pop
jmp
fimull
pop
sbb
popf
adc
xchg
mov
and
lahf
cmpsl
orb
stos
iret
lods
or
imul
sub
add
cwtl
inc
in
and
mov
pop
jmp
das
mov
xchg
mov
pop
jg
outsl
dec
pop
mov
dec
dec
jnp
leave
hlt
push
leave
fisttpl
jle
xlat
and
xor
orl
jnp
cmpsb
lods
enter
std
cmp
sub
sub
daa
push
andl
stos
xlat
jbe
mov
bnd
cmp
sarb
cmp
sbb
lahf
cs
jg
xchg
mov
adc
enter
xchg
xchg
cld
cmc
add
push
adc
add
cmc
imul
pushl
and
pop
cmp
inc
xchg
stc
lods
arpl
mov
mov
adc
jne
jge
lret
leave
insl
js
sahf
lret
push
ror
cmpsb
dec
bound
pop
xor
sti
les
mov
je
repnz
mov
aaa
testl
cmpsl
stos
movl
out
lock
pushfw
mov
scas
mov
lock
xchg
xchg
mov
fs
mov
out
push
mov
scas
sti
je
lds
mov
mov
and
loope
out
pushf
std
xor
je
sti
cmp
push
imul
xchg
mov
mov
daa
jbe
push
stc
jnp
mov
jge
fbstp
into
mov
in
notrack
cmp
mov
pop
lds
mov
iret
mov
jge
lea
ss
mov
inc
fstpt
mov
ret
cmpsb
cld
scas
fstpt
out
pushl
add
clc
ret
jle
lret
hlt
nop
ret
cmpsl
inc
sbb
and
sti
je
cli
je
push
xor
daa
jnp
xchg
pop
cld
in
cmpsb
dec
pushf
repz
fidivs
jbe
je
ja
fnstsw
mov
xor
mov
sti
mov
add
cli
cli
test
movsl
bound
hlt
adcb
es
mov
mov
testl
js
fstpl
xchg
pop
repnz
movsb
fs
push
cmc
in
fldt
jecxz
loop
sbb
mov
ret
sahf
cmp
daa
mov
repnz
gs
dec
rorb
imul
xchg
sbb
pushf
in
push
stos
int
or
loop
xchg
arpl
xchg
push
shl
stos
ss
bound
sarb
and
xor
aad
in
pop
or
rcrl
cmp
les
lods
sbb
imul
jl
insl
aad
call
jmp
add
xor
cmp
pusha
or
pop
push
movsl
mov
stos
aad
cmc
mov
int
ret
les
mov
cld
test
mov
jno
cmc
sbb
jp
sub
cmpsb
jno
cld
arpl
test
push
sbb
icebp
out
hlt
push
loopne
mov
add
lds
das
cmc
sarb
cwtl
jmp
adc
insl
and
mov
jmp
mov
cmp
scas
sbb
and
fidivl
sbb
pop
mov
mov
imul
jge
frstor
add
cwtl
jmp
adc
fs
fnsave
fxch
jne
or
and
mov
stc
adc
cmpsb
lods
inc
loopne
jne
mov
add
adc
push
rol
xor
cwtl
jmp
adc
cltd
popf
cltd
push
push
imul
out
fcmovu
push
sub
cmp
dec
or
movl
movsl
in
out
dec
repnz
add
imul
int3
push
jb
ret
xor
add
cli
lods
inc
mov
xchg
jle
mov
push
fisubrs
cmp
pop
mov
adc
push
mov
add
hlt
push
dec
or
fistps
shrb
cwtl
lret
gs
loope
cmpsl
push
pop
mov
dec
jmp
test
mov
add
pop
push
sbb
pop
notl
shlb
xchg
cmp
clc
fwait
xor
mov
loopne
adc
mov
jp
adc
pop
sti
leave
test
insb
xchg
add
push
aas
inc
into
or
inc
xor
ja
mov
mov
push
jae
push
fdivrs
mov
cld
cmp
mov
out
mov
mov
cmp
stos
xlat
jbe
sti
ljmp
xchg
adc
ss
push
mov
shlb
pushf
cmc
push
pop
mov
jle
es
adc
insb
sbb
outsl
fidivrs
cmc
adc
sub
xchg
repnz
fucomip
hlt
adc
jp
dec
sti
ucomiss
mov
scas
xchg
ja
push
push
jl,pn
add
jge
out
xchg
mov
or
mov
repnz
hlt
mov
mov
pop
push
jl
or
mov
cmpsb
insb
and
mov
cltd
push
mov
add
je
cmc
xor
fnclex
in
in
cli
xchg
sbb
push
sti
push
mov
dec
notb
and
divl
cmp
sbb
mov
xor
jle
es
adc
outsb
sbb
sbb
lods
fldt
cltd
cmp
fs
hlt
mov
std
jle
cwtl
fists
adc
je
jne
shll
pushf
dec
jo
adc
adc
jge
decb
pop
adc
jno
int3
jmp
pop
adc
cmc
push
fcmove
jns
cwtl
arpl
adc
ja
fadd
push
cld
je
adc
and
and
pusha
pop
adc
or
cld
xchg
mov
pop
call
mov
dec
and
les
adc
ja
push
cli
xchg
lea
js
xlat
loopne
adc
insb
pop
adc
sbb
xor
loop
std
xchg
jno
adc
pop
xorb
xchg
cmc
adc
call
or
aaa
mov
in
aam
pop
adc
xchg
xor
int3
push
test
scas
in
pop
adc
js
inc
cwtl
scas
aam
xchg
aaa
sub
pop
adc
inc
dec
push
sbb
xor
notl
mov
adc
mov
inc
movsb
negb
adc
addb
out
or
inc
or
mov
pushf
jl
adc
jns
aam
fcoms
aaa
gs
out
inc
repnz
popw
adc
push
pop
pop
jae
aam
repz
jnp
adc
add
ds
pop
xchg
rcl
pop
adc
jle
or
imul
xchg
pop
adc
data16
dec
lea
adc
imul
mov
or
mov
das
dec
push
jecxz
ret
adc
mov
mov
sbb
sarl
xor
pusha
or
push
imul
lret
aad
fldl
or
insb
fsubrl
mov
je
cmpsb
pop
xchg
stos
xor
mov
outsl
cmpsl
orb
addl
sub
insb
xchg
inc
cwtl
push
sub
pop
pop
pop
insb
or
fwait
pop
adc
aas
add
arpl
add
inc
loopne
fildll
fdivl
pop
adc
cmpsb
xor
cmp
xor
or
ret
adc
and
or
cmpsl
imul
xchg
xchg
stc
sahf
out
mov
dec
scas
jecxz
idivb
inc
jl
pop
xchg
sbb
jo
insb
lret
cmp
scas
jge
insb
adc
add
add
mov
pop
adc
push
fsubrs
push
imul
pop
fnstsw
sbbb
dec
cmp
js
mov
pushf
mov
push
sbb
lods
fwait
popf
das
hlt
std
mov
jae
imul
push
ss
lret
push
repnz
mov
lock
mov
add
xor
jmp
adc
sbb
pop
dec
sahf
pop
adc
test
sahf
pop
adc
sahf
pop
adc
mov
dec
push
cmc
lahf
sbb
mov
push
adc
xor
and
jle
divb
xchg
push
sub
mov
cmp
das
ss
jg
pushl
mov
pop
les
xchg
lret
push
jp
add
and
cltd
push
add
out
cli
jne
lcall
mov
sub
add
shll
mov
outsl
cli
mov
add
je
sarl
lret
jo
and
cwtl
mov
leave
cmp
xlat
out
das
je
pop
orb
scas
nop
stos
mov
cmp
into
in
mov
scas
int
lret
lahf
mov
adc
jne
repz
sub
das
inc
xchg
daa
xchg
push
ja
mov
ret
nop
cmp
fbstp
sti
incl
stc
add
mov
pop
push
push
push
jo
pop
adc
bound
or
xor
mov
les
jbe
bnd
in
jo
xlat
call
popa
dec
popf
mov
jmp
mov
jbe
jne
shll
lods
or
insb
mov
mov
adc
jnp
movsl
mov
outsb
fistpll
repz
pushf
cmp
sub
out
fidivrs
jns
stc
hlt
fs
movsl
out
cmp
shr
sahf
aaa
lods
pop
mov
pop
mov
pop
rclb
es
subb
xor
aam
cwtl
mov
pop
mov
sub
lret
jbe
aas
mov
cs
in
mov
adc
sbb
cli
daa
mov
je
ljmp
push
adc
and
pop
pop
rcl
fwait
jl
ret
outsb
outsl
cmp
out
xor
mov
jo
adc
add
je
mov
adc
fisubl
lds
data16
push
int
lahf
pop
xor
mov
jp
adc
loope
push
imul
cli
div
jo
push
cmpsb
or
jp
scas
sbb
mov
mov
mov
jnp
lret
aad
xor
inc
pop
pusha
ss
jge
xor
loopne
or
cmpl
sub
leave
lcall
jb
lcall
inc
xchg
add
mov
hlt
mov
pop
push
out
sbb
imul
nopl
lds
loopne
movsb
xchg
add
jl
jle
addl
jne
pushf
push
push
fiaddl
mov
xchg
sub
dec
aam
lcall
or
mov
inc
mov
aam
jmp
jecxz
add
repnz
push
pop
cmc
xchg
inc
xchg
insl
fistl
prefetchwt1
cmpsb
xor
push
lcall
outsl
inc
nop
and
or
adc
aad
mov
xor
and
or
shl
mov
mov
adc
aaa
push
xchg
shll
sub
mov
inc
imul
insl
movsl
popf
paddsb
pop
outsl
xorb
pop
fwait
int3
mov
outsb
mov
shlb
xchg
hlt
inc
xor
pushf
stc
arpl
and
sbb
add
xor
loopne
xor
jp
mov
or
in
push
jg
inc
test
jmp
adc
out
aad
test
jp
les
sbb
mov
gs
sbb
push
mov
js
test
mov
sub
sub
lret
mov
call
lods
shl
jae
stc
lock
or
and
sti
aam
xor
jnp
add
in
ja
pop
mov
ja
dec
nop
std
lock
xlat
inc
pop
push
cmpsl
in
xlat
movhps
mov
das
and
mov
mov
mov
popf
push
jbe
xchg
mov
rcrb
mull
xchg
xchg
fiadds
ljmp
cld
sub
ja
fistpll
stos
jne
stos
movsl
data16
mov
hlt
xchg
ret
push
ret
and
les
dec
repnz
pop
roll
lahf
ljmp
out
stos
pop
incl
je
cli
cltd
ret
cmp
fiaddl
lret
add
sub
xchg
rcrl
fidivrs
mov
testb
mov
sahf
push
hlt
pushf
xlat
and
push
xor
stos
xlat
jns
sti
adc
jne
repz
xor
xchg
cmp
bound
negb
push
lret
repz
testl
ss
sbb
notrack
cmp
iret
mov
jb
repz
ret
in
cli
idivb
aaa
mov
mov
movsb
fistps
push
cli
ja
mull
dec
cs
repnz
jno
ljmp
insl
leave
fsubr
mov
les
and
adc
mov
testb
arpl
add
xchg
pushf
mov
adc
mov
inc
insb
jl
adc
pushf
sti
cld
lods
aad
xor
cltd
je
cli
stc
push
and
repnz
jno
push
dec
push
adc
pusha
mov
cmp
fiadds
lds
int3
push
mov
dec
fsubr
xchg
or
and
repnz
cmpsl
jp
pop
push
push
xchg
sbb
mov
in
inc
mov
aam
jl
adc
cmp
lods
lods
data16
out
xchg
sub
dec
push
fwait
xlat
push
cs
mov
test
repnz
and
or
cmp
jecxz
mov
js
jp
jae
test
mov
adc
sti
push
sub
cmp
insb
jl
adc
fdivr
jo
cmc
daa
in
add
pop
mov
stos
sub
sbb
xchg
ficoms
and
mov
mov
nop
adc
addr16
insb
cli
xor
pop
call
cmc
sbb
inc
mov
arpl
int3
enter
loopne
jmp
xor
lock
xchg
prefetch
les
in
adc
push
jne
repnz
mov
dec
or
sahf
fdivs
dec
in
enter
out
and
push
adc
lahf
cmp
mov
cmp
add
js
cltd
call
dec
sbb
pushf
mov
adc
loope
insb
jl
adc
push
in
or
sbb
enter
ret
mov
int3
sbbb
cwtl
jp
int
cs
adc
xchg
cli
pop
mov
or
ret
fmull
mov
and
push
adc
push
mov
xchg
mov
and
mov
testl
cld
pushf
mov
adc
pusha
sti
insb
jl
adc
or
into
adc
ret
xor
out
push
cli
sub
lret
repz
test
push
xchg
add
std
add
cltd
daa
inc
daa
fisubs
and
adc
adc
out
int3
fbstp
xchg
or
hlt
mov
jbe
xchg
pop
shlb
push
adc
adc
insb
jl
adc
push
mov
outsb
ds
pop
or
mov
jg
fistps
popf
mov
add
std
cmp
dec
lret
cmp
out
pop
arpl
pop
sbbb
or
adc
mov
add
or
bound
dec
ss
addb
jnp
imul
fwait
or
jl
adc
xchg
call
jp
fs
dec
sbb
std
xor
fisttpl
cs
pushf
cmp
add
mov
out
add
or
and
adc
push
jne
add
and
popa
cmp
stos
pop
out
repnz
pop
in
add
pushf
mov
adc
leave
mov
jl
adc
jns
ja
sbb
mov
lcall
cmpsb
sbb
jns
insb
and
insl
call
stc
xor
inc
sti
aas
mov
jl
in
test
push
icebp
imul
call
pop
sbb
mov
pop
and
add
xchg
incb
mov
adc
ss
xchg
mov
fcmovnbe
dec
push
jge
add
xor
sti
add
sub
and
in
sbb
push
shlb
sub
lds
sub
aas
in
add
in
shr
das
movsb
outsb
stos
insl
push
xor
add
mov
cmpsb
jbe
adc
adc
sbb
imul
pushf
fistps
xchg
roll
and
mov
mov
jle
fidivl
xor
iret
arpl
add
inc
dec
pushf
arpl
mov
xchg
and
cs
mov
adc
jle
test
jg
xchg
bt
push
adc
add
sbbb
sbb
in
pop
out
leave
mov
pop
xor
push
add
pushf
mov
adc
arpl
mov
push
adc
lahf
loopne
lods
test
ja
lcall
out
in
and
lret
icebp
hlt
aas
imul
stc
sub
add
call
xor
mov
mov
testl
fistl
jae
inc
inc
dec
ficompl
cmp
rorb
mov
and
call
mov
push
jns
sti
and
idiv
jecxz
sub
dec
dec
or
cmp
ds
sub
int
push
in
add
aad
sbb
pop
sub
xor
icebp
jg
cmc
mov
jbe
xor
mov
arpl
and
cld
cmp
or
push
movsb
jno
mov
imul
adc
cmp
push
popa
push
jmp
inc
xchg
ljmp
dec
push
mov
lret
lahf
out
push
cltd
aas
cmp
add
mov
cmp
add
inc
insl
add
mulb
shll
addr16
in
add
or
dec
scas
and
sub
ret
pop
xchg
int3
cvtps2pd
shl
or
add
jmp
pop
jbe
adc
jp
jo,pn
cltd
add
mov
daa
pop
out
cmp
adc
aad
lods
inc
lret
dec
outsb
data16
and
scas
mov
je
imul
jb
ss
inc
leave
pop
in
mov
or
mov
jae
movsb
add
mov
sbb
mov
dec
mov
mov
dec
or
repz
iret
aas
loop
cmp
dec
push
ror
movsb
imul
filds
jp
lods
shlb
rorb
stc
movsb
pop
daa
mov
push
inc
daa
test
sub
fdivrl
mov
push
lock
out
fstpt
cwtl
xchg
lcall
push
loopne
out
sti
push
jmp
dec
cmpsb
and
int
mov
in
fists
lret
xchg
idivb
xor
hlt
mov
mov
mov
sub
inc
add
pop
jae
adc
lea
rolb
push
push
fs
pop
ljmp
push
arpl
add
and
push
in
lods
daa
scas
and
lret
mov
int
sub
lret
aam
mov
sti
jne
jb
xchg
mov
fdivs
jne
xchg
push
sub
cmpsb
js
jbe
and
ja
je
fucomi
mov
jne
fsubrp
repnz
popf
lret
push
hlt
lahf
pop
mov
cmpb
xor
pop
adc
pop
fdivrl
mov
pop
sbbb
out
out
mov
hlt
mov
std
test
data16
mov
jp
and
icebp
mov
sub
jl
out
cmpsl
movsb
js
aad
push
in
push
xchg
stc
insb
add
sbb
sub
mov
dec
adc
cmpsl
sbb
inc
in
lods
lods
addl
je
sar
xchg
xchg
add
ljmp
pop
rclb
xchg
lret
sbb
mov
in
jmp
mov
add
xchg
mov
dec
cwtl
add
sub
cltd
shll
xchg
les
in
mov
xchg
bound
insl
subb
clc
clc
sub
mov
xchg
in
add
mov
out
lock
dec
cli
les
xchg
cmp
xor
adc
mov
mov
test
fs
xorb
sub
lahf
mov
xor
nop
or
jo
fld1
lret
inc
sbb
test
jge
mov
popa
mov
adc
imul
out
in
mov
jae,pt
jmp
adc
jnp
mov
adc
add
iret
sub
shlb
sbb
or
rcr
out
mov
or
testl
push
cs
mov
test
or
mov
out
sahf
gs
push
stos
adc
cmp
popf
aas
mov
jno
push
adc
xchg
insb
mov
mov
add
ljmp
ja
icebp
sbb
decb
je
fstpt
mov
in
cmc
stc
test
test
cmp
or
add
dec
popf
dec
ja
daa
cmp
movsl
xor
in
adc
adc
push
lods
pop
mulb
add
or
cmp
xchg
testb
lods
sbb
shl
mov
enter
scas
out
stos
bound
test
mov
pop
loopne
addb
test
iret
rcrl
insl
mov
in
shlb
mov
or
dec
insb
jp
div
mov
jg
inc
in
or
or
cmp
int
fnstenv
pop
js
out
inc
nop
lret
fisubs
push
dec
mov
repz
sbb
insl
js
js
scas
in
leave
add
xchg
ljmp
test
scas
data16
stc
gs
aam
add
cmpsb
nop
andb
pop
dec
pop
push
jp
add
loop
std
shrb
mov
enter
lds
jb
fisttps
jmpw
cltd
stos
xchg
push
lock
pop
aam
push
xchg
mov
mov
lahf
xor
pusha
sub
setge
jb
or
scas
stos
js
mov
push
repz
negl
pusha
xchg
inc
jl
loop
popa
inc
fs
xchg
stos
das
loopne
call
or
push
sahf
push
int3
in
xchg
arpl
outsb
pop
nop
xchg
test
jnp
je
loop
les
shll
insl
pop
fdiv
decl
iret
sub
push
adc
test
add
jo
in
insb
sbb
inc
push
rorb
cs
and
push
ja
test
lret
xchg
add
inc
sub
adc
push
ja
sub
in
pop
and
mov
mov
ljmp
add
aaa
aas
decl
sub
test
and
fstl
push
nop
adc
xor
stc
test
and
icebp
lds
out
add
add
jp
mov
xor
iret
push
cmc
pushf
dec
pop
pop
mov
les
je
pop
dec
xchg
add
iret
mov
in
push
fcoml
js
mov
dec
push
inc
outsl
incl
sti
adc
jle
repnz
xchg
mov
repz
mov
adc
adc
mov
sbb
fiaddl
sub
std
cld
sti
negb
push
imul
xchg
fdivl
push
cli
pushf
in
in
jg
mov
jbe
mov
push
push
and
jnp
sbb
jecxz
imul
jns
std
sti
mov
and
pop
cltd
lds
jae
bound
test
inc
or
je
push
in
xchg
pop
or
jb
testb
push
ficoms
gs
push
jp
std
jge
clc
xchg
std
pushf
xor
push
adc
sbb
jp
adc
dec
daa
cmp
pop
push
push
jbe
icebp
js
loope
sub
rep
xor
popf
push
sub
push
adc
jno
insl
jmp
jle
or
repnz
in
xor
fidivl
pavgw
mov
mov
lds
repnz
pop
out
div
out
test
push
sbb
adc
adc
pop
imul
sbb
push
adc
sahf
addl
in
add
mov
es
pop
adc
xchg
mov
stc
dec
pop
popf
dec
or
sbb
fdivrl
out
sahf
insl
dec
enter
xchg
js
mov
jbe
scas
push
mov
nop
jno
xor
and
scas
scas
mov
rorb
aas
or
xor
ficomps
orl
xchg
mov
dec
adc
fstpt
mov
xor
push
adc
mov
cmp
inc
push
inc
jb
cltd
xor
xor
or
cmp
cld
jae
stc
lock
loopne
mov
inc
jb
bound
std
mov
popf
push
cs
daa
imul
fs
ret
or
jle
push
jecxz
iret
adc
mov
xchg
and
inc
mov
jl
aas
cmp
jg
adc
inc
test
cli
sbb
push
js
test
clc
pop
cmp
dec
pop
pop
lea
enter
jg
in
call
adc
lods
mov
pop
dec
add
mov
pop
xchg
add
xor
shll
loope
cmc
adc
push
adc
lcall
cltd
pusha
cld
scas
jl
lock
cmc
mov
mov
cmp
adc
push
divb
fidivrl
fidivs
jl
and
and
or
jno
orl
pop
inc
push
xlat
mov
adc
jo
in
cltd
addr16
push
sbb
dec
inc
arpl
fildl
xorl
divl
sub
push
cmp
mov
xor
aam
jecxz
sti
sub
scas
sbb
mov
mov
xchg
dec
jnp
inc
lods
push
into
xor
push
out
fs
push
inc
mov
or
aas
lock
pop
or
sub
adc
adc
pop
test
stos
fidivl
lods
push
mov
pop
sub
mov
stos
sbb
push
outsb
sbb
add
xor
mul
adc
add
cmp
call
repz
popf
mov
sbb
ja
sbb
je
int
jbe
in
pop
popa
or
mov
divl
and
stos
sbb
add
and
js
aam
test
add
lds
pop
shll
cli
jne
lcall
mov
sbb
adc
shll
mov
bound
in
in
and
cmp
hlt
add
js
fs
mov
jo
pop
adc
push
lock
cld
sti
mulb
mov
or
push
xchg
mov
sbb
push
repnz
pop
outsl
xchg
add
add
outsl
push
icebp
lods
sbb
pusha
outsl
int
movb
aas
sbb
cmp
cli
jbe
dec
adc
pusha
sahf
or
fwait
or
aaa
mov
pop
loop
int
cmp
dec
daa
add
inc
sub
scas
add
mov
jne
sub
sub
inc
mov
xchg
mov
and
test
out
xchg
push
bound
jecxz
or
push
addb
cmp
jb
cmpsl
popa
xchg
push
xchg
test
add
pop
roll
int3
add
mov
adc
jne
adc
test
fildll
sti
ret
mov
adc
cmc
cmp
and
into
or
mov
pop
lock
lret
adc
movsb
add
push
jae
fidivl
ss
adc
or
js
push
rorl
lretw
xchg
xor
loop
lret
fldt
mov
xor
in
add
jle
sub
lea
or
inc
pop
out
and
cmp
fnstenv
repnz
or
xchg
adc
lret
push
addb
and
pop
in
jbe
bound
lret
fisttpll
inc
leave
mov
mov
nop
xchg
add
pop
adc
add
push
and
lods
fildl
push
adc
addl
addr16
fs
pushf
inc
jg
out
addr16
pop
repz
mov
cmp
push
adc
push
std
mov
adc
jo
mov
pop
xchg
insl
lret
xchg
jb
mov
jae
icebp
xchg
mov
test
jle
add
sub
adc
push
mov
mov
mov
sbb
stos
loopne
pop
adc
pop
mov
push
mov
adc
lock
dec
sub
xchg
xchg
or
push
inc
enter
lahf
cmp
add
lock
pop
int3
in
pop
pop
jmp
aam
pop
fdiv
lcall
imul
push
divl
cmp
jno
adc
fucom
pop
jg
jmp
pop
inc
scas
imul
lret
data16
push
mov
and
hlt
pop
outsb
adc
es
lods
mov
in
inc
pop
ret
loop
mov
jge
inc
mov
js
lea
fcmovb
iret
sbb
mov
lods
adc
fstl
insb
jae
mov
push
mov
and
jp
push
pop
dec
cmp
aad
pop
jle
sbb
adc
cld
mov
adc
aam
xchg
ret
fsubl
sub
and
pop
push
mov
mov
clc
push
add
pushf
lahf
jl
sub
test
cmp
sahf
les
aas
in
jnp
bnd
test
adc
dec
pop
jno
xchg
lahf
enter
and
addr16
sub
cli
inc
mov
mov
xor
and
mov
add
cmp
jp
inc
cmp
cmp
cmp
or
sbb
push
ja
fs
addr16
jne
cmpsb
adc
xor
jl
add
hlt
jae
es
nop
push
icebp
jno
mov
cs
sbb
or
mov
add
jo
in
jmp
repz
push
ja
mov
rcrl
fstpt
adc
fwait
sub
in
pop
pop
sub
dec
pop
adc
or
ret
rolb
add
mov
stc
in
or
mov
pop
inc
sbb
pop
movsb
gs
adc
inc
push
in
dec
nop
push
sti
jno
xlat
cmc
insl
xor
dec
into
mov
cmp
cli
xchg
lock
call
xorl
pop
inc
je
mov
cmpl
cld
pop
in
mov
xchg
mov
outsl
fidivrs
push
mov
cmp
pop
inc
insb
mov
xchg
sub
pop
jl
mov
pop
inc
insl
xchg
cmpsb
inc
imul
cmp
pop
lret
xchg
in
pop
adc
lea
int3
ret
add
pop
adc
cmpsb
mov
adc
cld
pop
aad
stc
xchg
and
daa
nop
or
pop
adc
xchg
and
xchg
popw
adc
mov
xchg
pusha
pop
adc
jb
jecxz
aas
push
and
pop
adc
adc
xor
pop
adc
jmp
insb
mov
mov
adc
xchg
mov
and
mov
adc
scas
adc
movsb
or
popf
cmp
outsb
pop
sub
das
insb
sahf
jnp
sbb
cmovle
mov
jl
incl
lret
xchg
push
xchg
mov
fisubl
add
or
mov
and
ljmp
xor
enter
inc
in
movsl
adc
or
inc
push
out
dec
push
adc
fsubs
cmc
outsb
push
dec
nop
xchg
and
mov
out
addl
popa
adc
loope
jl
pop
test
jns
roll
push
jge
mov
adc
cmpsb
and
xchg
dec
cmc
mov
xchg
mov
out
aam
dec
adc
mov
xlat
stos
stc
clc
xor
cmc
repnz
arpl
add
ja
imul
adc
mul
js
xchg
mov
outsb
test
jp
pop
cltd
rol
lcall
or
andb
push
inc
mov
adc
stos
mov
jmp
cwtl
push
mov
adc
sub
ljmp
icebp
mov
dec
sti
movsb
cmp
push
adc
outsl
push
push
js
int
inc
hlt
sub
out
jnp
or
lea
test
mov
mov
imul
sbb
ret
adc
flds
loop
hlt
add
jno
sbb
jp
jo
pop
adc
add
dec
push
jo
adc
xchg
sub
sbb
pop
push
imul
test
aad
js
inc
int
inc
pop
outsl
push
push
daa
fmull
add
mov
pop
pop
add
inc
call
mov
jecxz
sti
dec
jo
adc
push
aam
fwait
or
stc
daa
push
jmp
mov
xchg
outsl
mov
xchg
pop
adc
scas
mov
sub
cmp
pop
cmp
xlat
inc
inc
dec
shlb
adc
pop
ja
inc
mov
and
push
aad
mov
orb
xor
pop
cmp
or
sbb
xchg
incl
insb
sbb
jo
adc
mov
push
cwtl
fadds
loopne
mov
cwtl
sbb
jmp
test
adc
je
ja
mov
in
sbb
pushf
cmp
sbb
call
adc
ljmp
aad
ss
jbe
adc
insl
insb
daa
mov
clc
xchg
cld
popw
adc
clc
outsb
and
or
cmpsb
movsb
jae
adc
lcall
cmp
inc
adc
es
add
xor
xor
mov
mov
jecxz
fwait
adc
xor
in
push
icebp
rcrl
xchg
pusha
lds
lret
mov
lahf
pop
test
jl
jecxz
sub
mov
cmp
push
adc
cltd
sti
mov
out
pushl
add
je
dec
adc
adc
xlat
and
xor
cmp
out
jo
pop
adc
je
jo
and
xchg
mov
or
adc
mov
adc
jb
and
lret
iret
jp
lcall
ljmp
xlat
sub
sub
cmp
movsb
sbb
push
inc
dec
bound
dec
pop
stos
test
test
mov
pop
in
adc
xchg
stos
sti
xor
add
pop
sti
inc
iret
push
ja
xchg
push
add
or
xor
int3
lahf
mov
sbb
jne
pop
mov
jo
dec
stos
jno
pop
and
mov
or
in
aas
mov
sbb
cmpsb
or
dec
mov
roll
sbb
imull
mov
add
or
mov
jg
jmp
push
xchg
and
loopne
arpl
add
into
scas
in
add
dec
jo
pop
adc
jne
push
pop
mov
xor
movsb
inc
mov
clc
negl
lcall
inc
xor
cmpsb
filds
je
adc
mov
cmp
jae
push
icebp
and
cs
push
lret
push
adc
push
addl
xor
or
jb
int3
xchg
cmc
and
add
nop
add
fisubrl
mov
jno
clc
test
mov
adc
xchg
icebp
jl
and
or
loopne
test
lock
lret
xchg
inc
cwtl
sbbb
inc
or
pop
cwtl
data16
push
popa
mov
jle
add
stos
mov
jle
cmp
add
jmp
sbb
dec
aam
xlat
cmp
pop
sbb
orb
stc
add
adc
cmp
sar
out
insl
mov
sbb
adc
fmul
dec
in
adc
inc
cltd
rcrb
out
mov
shr
add
pop
adc
adcb
mov
jl
adcb
adc
std
leave
xlat
int3
or
leave
into
loop
mov
inc
jle
daa
in
push
pop
int
jg
shll
out
std
outsb
addr16
imul
testb
inc
pop
sub
mov
mov
pop
sub
adc
xchg
in
push
movb
pop
insb
fwait
cwtl
enter
sbb
inc
jbe
ljmp
add
and
fnstenv
push
shrb
shrb
add
mov
xorl
adc
in
jmp
std
mov
sub
pop
loop
sti
jg
icebp
add
lcall
xchg
mov
and
cmpxchg
fimull
pop
adc
mov
push
xor
stc
add
test
fs
fidivl
pop
adc
fs
idivb
mov
popa
cmp
imul
add
jns
stc
push
aam
mov
adc
ja
add
mov
push
pusha
jo
adc
mov
pop
sbb
sub
xor
jecxz
mov
xor
push
popa
data16
mov
jp
mov
xchg
cmp
mov
sbb
cmp
int
cmp
sti
mov
and
sub
fisttps
pop
adc
xlat
dec
data16
std
mov
cli
mov
add
xchg
cmp
pop
adc
int3
xor
adc
adc
movsb
pop
dec
ds
mov
jb
sub
sahf
cltd
or
push
lret
repnz
imull
lret
mov
cmp
aaa
sub
add
xchg
add
cmp
or
sbb
negl
push
call
inc
and
and
les
rcrb
fisubrl
push
sbb
push
loop
les
mov
pop
scas
test
add
xchg
mov
sbb
jmp
out
lahf
lods
lcall
mov
mov
fidivrs
mov
mov
add
jg
mov
jo
pop
adc
sarl
push
das
or
ds
xchg
icebp
std
adc
mov
jne
jecxz
test
cmc
rorl
push
dec
lahf
push
rorb
adc
cwtl
lret
mov
out
insb
xchg
xor
mov
mov
aas
xor
sub
add
aad
hlt
jle
xor
push
xor
dec
sbb
test
sbb
or
mov
pop
icebp
push
cmpsl
jp
cmp
jl
sbb
mov
and
pop
pop
fcom
fwait
je
add
add
pop
and
adc
xchg
add
mov
push
cmp
inc
rdpmc
inc
repz
imul
pop
or
push
ds
stos
jp
pop
and
jae
ss
xchg
inc
cmp
xchg
xor
pop
mov
movsb
mov
inc
or
sbb
movsb
test
add
mov
sbb
cwtl
dec
xchg
push
testb
cli
jecxz
mov
sbb
clc
cmp
div
inc
arpl
add
std
call
jo
pop
adc
bound
pop
imul
movsl
adc
add
popf
iret
mov
rcr
into
mov
data16
mov
js
pop
adc
xor
mov
mov
aas
jb
loope
jmp
mov
cmp
mov
in
cmp
rorb
jne
fucom
jbe
adc
mov
imul
cmp
fsub
das
pusha
out
sub
mov
adc
loop
fcmovu
jnp
mov
fnstcw
adc
bound
push
xchg
xchg
ljmp
adc
xchg
lahf
pop
int
jae
sarl
jb
adc
inc
insl
jecxz
loope
sarb
sahf
pop
sub
mov
xor
imul
push
cs
lahf
sub
ja
pop
xchg
mov
push
ss
and
jb
and
cmp
scas
stos
ss
mov
push
ja
aas
pop
pop
xchg
xchg
out
sub
jo
sbbb
add
push
dec
aaa
dec
sbb
mov
adc
aas
subb
jg
popa
inc
mov
bts
pop
loope
int3
test
pop
rorb
push
les
nop
pmuludq
in
sub
lret
cmp
xchg
or
call
xor
arpl
test
mov
lret
mov
insl
jmp
add
push
sub
sbb
jg
fisubl
inc
pop
mov
cltd
ja
inc
cmp
les
ss
cltd
jne
mov
cltd
cld
adc
push
and
mov
jmp
in
lock
std
cmpsl
dec
scas
sti
pushf
mov
repz
jne
adc
and
cmp
stc
xor
int3
lret
pop
shlb
test
jbe
repz
cld
movsb
test
fbstp
js
ljmp
or
stc
jae
sti
int
adc
scas
pushw
mov
jl
mov
je
out
fistpll
mov
xlat
pop
outsb
and
scas
cli
and
addl
cld
push
push
stc
jnp
mov
mov
fistps
pop
dec
pop
inc
pop
mov
jmp
cmp
adc
call
std
add
icebp
xchg
pop
call
ret
in
shl
sbb
les
lret
lret
xor
fucomi
add
add
js
sub
insl
rorb
or
ljmp
iret
mov
lods
jge
xor
xchg
and
test
es
repz
push
rorl
sub
inc
or
divl
enter
and
stos
cltd
je
sub
movsl
fmuls
pushf
imul
ljmp
lock
test
push
int
repz
sbb
dec
scas
pusha
cld
lcall
lret
movsb
mov
das
in
add
lret
cltd
mov
pop
lret
sbb
lock
sbb
dec
out
xchg
pop
cltd
mov
add
pop
push
int
cmp
lcall
idivb
xor
pusha
in
push
sub
adc
das
mov
sbb
xor
iret
lods
test
aaa
loopne
pusha
fstp
inc
cmp
inc
arpl
and
push
sbb
push
mov
mov
mov
fists
insb
mov
add
js
and
out
fildll
fisubs
ds
cmp
sub
sub
add
loop
xchg
scas
cmpsl
or
xor
lods
divl
add
aam
cmp
hlt
push
ret
adc
mov
jae
hlt
je
sub
lcall
roll
out
test
xor
pusha
jge
sub
out
push
jns
in
add
rolb
push
testb
stos
mov
add
rorb
insl
xlat
pop
push
or
mov
and
dec
xlat
rcr
jle
add
pop
dec
inc
sbbb
test
jp
push
std
int
int
cmpsl
out
std
rcl
cmpxchg8b
iret
dec
icebp
add
sub
jo
lcall
daa
mov
subb
mov
cld
adc
xchg
fisttps
pushf
fucomip
and
xchg
push
sarl
cwtl
mov
out
fwait
push
sub
fistps
xorb
pop
mov
xchg
xchg
inc
bound
mov
push
jp
inc
ret
dec
inc
pop
xor
sbb
jne
in
add
adc
adcl
and
jg
cmp
pop
cmp
dec
jl
hlt
add
or
push
imul
push
ss
inc
jnp
inc
stos
aad
mov
jmp
adc
scas
das
je
popf
dec
pop
movsb
and
sbb
cmp
cmp
pop
and
cmp
cmp
push
pop
or
call
mov
add
icebp
in
cmpsb
pop
mov
fnstsw
popa
ja
or
push
addb
clc
fs
dec
cld
fwait
lcall
fidivl
push
jl
mov
mov
je
sub
dec
adc
push
cmc
je
cmp
sarb
push
rcl
fldenv
inc
jl
les
mov
jbe
push
ja
dec
nop
push
fs
es
fisttps
xor
ja
pop
xor
sti
test
stos
push
sbb
pop
js
jle
fmulp
insl
and
sbb
mov
add
or
pop
jae
push
jb
mov
mov
mov
mov
jmp
xor
fiaddl
lock
inc
ret
ds
jp
cmpsl
dec
push
jne
xorb
push
inc
xor
cmp
cs
mov
loope
fs
int3
push
xorb
cmp
jbe
std
mov
cmc
ja
or
in
insl
and
sbb
mov
jle
divl
or
push
mov
inc
dec
addb
test
xor
imull
xor
and
sbb
xor
xchg
imul
push
ja
mov
cmp
add
fwait
and
popf
adcb
adc
mov
sub
test
pcmpeqd
pop
dec
push
inc
xchg
mov
pop
push
adc
mov
jbe
hlt
out
fnstenv
icebp
outsb
xorl
es
push
jne
sbb
test
push
test
xchg
int
or
adc
and
push
iret
pop
repz
or
cmp
xchg
dec
repnz
jo
aaa
icebp
test
mov
mov
and
fwait
loope
xchg
cmc
and
xor
daa
out
dec
jg
adc
aam
out
xor
arpl
lcall
dec
aas
xchg
jecxz
push
or
ss
xchg
xor
adc
and
mov
insl
cmp
and
leave
push
out
lock
push
fstpl
inc
mov
sbb
call
insb
into
fidivrs
sbbl
testb
mov
in
add
mov
fbstp
sbb
imul
sub
cmp
icebp
test
push
xchg
les
fstps
sub
ds
js
gs
mov
add
lds
add
adc
sti
xlat
outsl
cwtl
or
push
push
subl
push
rcrb
add
repnz
xchg
lock
xorl
adcl
pop
jge
lock
push
xchg
cmp
add
std
popf
out
pusha
psllw
jecxz
orb
push
pop
xlat
mov
ret
jge
push
imul
dec
push
shrb
ret
fldt
dec
add
dec
ja
sbb
add
pop
fsqrt
xchg
ret
pop
js
xchg
lock
xor
push
push
aam
loop
mov
lcall
push
inc
add
stc
aam
lcall
ret
push
test
push
movsb
loopne
subb
aaa
negb
cwtl
andb
mov
imul
popa
lock
fs
and
lods
jecxz
jg
out
ss
xchg
imul
bound
cmp
repnz
out
inc
dec
popa
neg
adc
cmp
xchg
cmp
sub
pop
xor
in
jp
mov
mov
add
or
es
xchg
dec
xchg
cmp
xchg
clc
adc
cmpsl
outsl
in
add
mov
push
jg
dec
cmpsl
fisttpll
outsb
dec
xor
dec
mov
lret
or
lds
xor
outsl
jb
jecxz
fcoms
divb
mov
cmp
ret
cwtl
sub
outsl
mov
xchg
frstor
iret
popf
mov
sbb
ss
fistpll
jns
add
mov
pop
push
jne
xorb
imul
adc
xchg
push
testb
jge
aaa
cmp
in
xchg
mov
pop
xchg
call
lret
jmp
mov
xchg
pop
loop
lods
sub
pop
adc
fucomip
rolb
fcompl
inc
aas
pushl
pop
mov
ds
fidivrs
sub
in
add
fidivrs
out
jge
pop
idivb
jmp
xchg
pop
inc
fcom
dec
pushf
jg
les
pushl
mov
mov
outsb
sbb
or
or
push
hlt
pushf
out
adc
push
std
imul
scas
adc
adc
cmp
sub
cmp
mov
jmp
repnz
xchg
in
add
std
js
lods
jp
dec
pop
adc
lret
addr16
adc
mov
stos
mov
mov
jl
add
adc
xchg
mov
mov
sahf
jne
adcb
sub
sub
inc
cmpsl
and
mov
fwait
ja
cld
cli
imul
push
sti
sahf
aaa
cmp
pop
insl
mov
xor
push
idivb
mov
mov
je
lock
xchg
in
xor
insb
adc
mov
adc
insl
jle
stc
jno
out
stos
mov
sti
outsl
push
lock
and
mov
dec
jg
in
xchg
sbb
add
jne
out
adc
mov
mov
mov
sbb
lock
cld
and
lcall
fwait
hlt
cmpl
lcall
pop
mov
in
sti
data16
addb
adc
inc
jecxz
insl
push
dec
cmc
jo
pop
adc
cmpsl
inc
mov
mov
es
xchg
pop
arpl
adc
sub
cltd
xor
mov
icebp
std
and
dec
inc
idivl
rcl
xor
fs
push
cmp
fidivs
aaa
out
pop
mov
mov
jne
pop
mov
in
maskmovq
testl
mov
mov
mul
std
push
stc
sbb
jo
jl
and
add
addr16
cltd
mov
jns
inc
mov
cld
fsubs
rcll
pop
cmp
jno
dec
sbb
leave
sub
inc
push
std
xor
and
jp
sbb
mov
insl
xlat
pop
mov
data16
aas
cmp
int
jecxz
xchg
lahf
call
mov
and
sub
psubb
fdivrs
pop
clc
rcrb
jmp
sub
add
orb
push
push
xchg
inc
into
or
ljmp
fists
cvtdq2ps
pop
push
ljmp
fstp
push
sub
lret
xchg
ret
xchg
cmpsb
mov
push
push
mov
out
dec
repnz
in
add
imul
stos
adc
jo
pop
adc
addb
jbe
adc
fiaddl
outsb
or
pxor
loope
fldcw
dec
inc
jnp
daa
cs
arpl
fstps
fsts
xor
andl
in
loop
add
decb
jb
out
rol
xchg
imul
je
sbb
add
adc
movzwl
icebp
inc
inc
call
sti
jbe
cmovle
nop
mov
mov
aas
xor
dec
and
xchg
ja
xchg
cmc
jmp
test
in
add
push
sbb
pop
adc
es
and
pop
adc
xchg
push
shr
popa
popf
pop
mov
mov
mov
jbe
add
fstl
mov
shr
pushf
enter
lret
mov
cmp
jne
add
test
aaa
mov
out
hlt
je
into
popf
cmp
sahf
jae
pusha
jae
adc
pop
lods
add
jbe
pop
mov
and
xor
lds
mov
jle
out
aaa
addr16
add
int3
or
outsl
aas
xor
push
test
sbb
adc
mov
lds
scas
jb
sub
mov
call
stos
jp
mov
jp
mov
mov
pop
xor
cmpsl
pop
data16
add
xchg
fucomp
hlt
mov
mov
xor
rorb
dec
add
xchg
sbbb
xchg
out
test
adcl
pop
rol
mov
mov
mov
and
popf
cmp
push
adc
fbstp
sti
incl
in
add
mov
pop
push
cmp
dec
pop
adc
mov
loopne
lods
xchg
pop
adc
sub
or
stos
cmp
in
and
mov
movsl
push
das
adc
fstpt
lods
jae
js
stc
hlt
mov
push
cmp
sbb
inc
hlt
mov
outsl
clc
mov
add
xchg
add
fbstp
and
pmaxub
mov
push
and
and
ds
stos
jbe
mov
sub
cwtl
test
cld
mov
add
into
jge
jnp
mov
xchg
loope
mov
add
sub
jp
loop
pop
mov
aad
xchg
cmp
push
add
cmp
test
and
pop
adc
je
out
adc
pop
loopne
jle
ss
jp
xor
cmc
mov
mov
jb
imul
push
scas
cmp
test
sbb
push
cltd
test
sbb
stos
cwtl
inc
add
inc
movsb
cmp
imul
mov
cmp
cmpsb
movsb
cwtl
js
fdivl
add
and
xchg
sbb
xor
add
stc
lock
enter
pop
adc
repnz
data16
repz
lock
rcrb
dec
xchg
dec
cmp
cmp
loope
popa
shlb
push
push
ds
sahf
mov
insb
pop
push
xorl
push
es
jle
movsb
fstpt
mov
aam
sti
mov
fnstsw
bswap
stos
mov
push
sbb
dec
sbb
lock
js
xchg
cmpsb
sub
ret
pop
bound
orb
sbb
sarb
clc
out
mov
clc
or
push
test
mov
loope
in
in
out
jl
push
data16
iret
out
shl
or
xor
fs
insl
and
outsl
scas
jp
and
fisubrl
je
ds
sub
push
in
xor
and
sub
mov
fidivl
movl
xor
xor
in
dec
push
rorl
jo
or
pop
push
sbb
cmp
mov
movsl
mov
dec
or
dec
or
add
shrb
cld
push
data16
and
testb
rol
rcrl
xchg
jg
adc
dec
cmpsb
test
movsl
orl
fildll
dec
fwait
cwtl
stos
shlb
xchg
xchg
out
add
daa
mov
adc
adc
mov
jl
lret
sub
xor
xor
imul
push
lret
ret
stos
xor
ret
push
add
iret
test
sbb
pop
int
add
xchg
aas
push
icebp
lods
xor
lods
cs
sbb
push
loop
pop
ror
add
dec
mov
mov
popf
cmp
push
xor
shr
mov
and
add
xor
mov
inc
shlb
xor
scas
dec
pop
adc
cld
stos
pop
int3
jl
mov
dec
hlt
in
cmpb
out
lock
shr
pushf
add
pop
mov
jbe
mov
fcomi
repnz
jbe
push
pop
xchg
or
cmp
cmp
or
out
fucomip
lods
test
jo
adc
cs
fstpt
je
pop
push
adc
or
je
sti
jne
repz
fbstp
and
or
lea
mov
mov
in
rep
xorl
stos
cs
and
push
ja
lahf
pop
jle
xor
cli
data16
out
push
cmc
pushf
cs
cmpsb
dec
sbb
add
push
jno
push
mov
sti
imul
mov
adc
out
push
mov
add
dec
popf
add
sti
add
pop
mov
jns
jns
daa
push
jle
call
ds
test
mov
jg
xor
sub
mov
adc
jb
pop
imul
jns
sarl
scas
test
and
sub
mov
into
imul
sti
outsl
mov
lock
repnz
addr16
aas
mov
xor
adc
andb
outsl
jl
repz
popf
imull
cltd
inc
test
out
je
test
mov
scas
add
and
push
or
fwait
pop
rol
push
mov
repz
mov
cltd
daa
ret
jo
and
jge
mov
dec
mov
test
in
test
cli
incl
inc
or
repz
jns
adc
mov
cmp
add
clc
inc
cs
fdivrs
int3
push
pop
push
filds
jne
in
stos
mov
add
push
adc
adc
pushf
inc
lahf
push
mov
test
imulb
leave
xchg
jge
push
mov
mov
adc
adc
in
stc
pop
les
loope
fst
push
jl
jge
push
icebp
aaa
mov
dec
xor
cmp
test
scas
sub
pop
test
or
mov
setle
shll
nop
ja
outsl
pop
pop
sbb
fmuls
xchg
dec
jns
sub
or
loop
add
sub
mov
xlat
xchg
je
xor
lds
arpl
cld
adc
pop
fldl
pop
or
fcmovu
sbb
bound
adc
mov
cltd
jecxz
scas
jmp
add
lret
repz
add
and
add
es
lcall
arpl
mov
push
lods
xor
cmpsb
xchg
orb
push
aad
push
repz
notb
or
sbb
je
neg
scas
loopne
icebp
rcrl
and
xor
push
add
bound
jbe
or
clc
mov
xor
dec
cmpsb
and
pop
pop
lahf
imul
sub
shlb
push
add
lret
jo
les
cmp
je
pop
jle
mov
jl
hlt
std
mov
xchg
xor
insb
dec
fdecstp
cmp
adc
sbb
mov
in
mov
mov
inc
or
fcom
inc
pop
mov
push
cmp
mov
fisttpl
insb
rcll
cmc
pushf
jae
pop
mov
rcll
mov
je
mov
lods
mov
je
lcall
xor
sub
cs
int
cmp
aaa
dec
popl
add
aas
push
mov
leave
test
fisubl
fs
cmpsb
stos
mov
xor
jl
jmp
cmp
and
xchg
and
insl
or
fisubs
js
cmpsb
scas
cmpsb
mov
mov
pop
jnp
ss
je
lods
add
adc
jg
leave
jne
xchg
jne
xchg
sub
mov
push
add
add
loope
ret
das
mov
dec
pop
sub
mov
lret
pop
out
je
pop
sahf
or
or
fistl
jne
or
sbbb
les
jmp
lret
mov
pop
insb
or
cmpsl
cmpsb
sbb
xor
mov
add
aaa
pop
dec
add
jl
out
xor
mov
stos
inc
xchg
mov
mov
mov
stos
je
scas
add
nop
stos
lods
xchg
pushf
insb
and
push
jmp
sbb
mov
add
inc
inc
out
add
jns
mov
pop
jle
imul
addr16
jge
lock
xchg
test
xor
cmp
push
loopne
andl
cmp
or
push
divl
adc
lods
movb
rcrl
in
aas
add
cmpsb
das
in
lahf
jb
div
cmc
rep
sub
ljmp
cmp
adcl
out
aas
test
or
and
mov
daa
pop
or
push
sbb
or
cmp
push
notb
insb
sub
sbbl
loope
add
pop
rcll
inc
mov
enter
add
aaa
xchg
dec
inc
inc
cmp
mov
sub
dec
add
jae
in
mov
xor
xor
loopne
mov
mov
cmp
cmp
test
sub
and
fucomp
jg
mov
push
test
and
pusha
xor
lea
pop
inc
fbstp
mov
cmp
call
pop
mov
in
sbb
cmp
xchg
cs
cmc
cmp
add
mov
int3
filds
jge
and
stos
fstpl
pop
cmp
adc
adc
jmp
lods
mov
dec
pop
adc
mov
movsb
xor
les
fdivrl
clc
int3
adc
sbb
mov
inc
pop
adc
cmp
or
jo
lret
sub
pop
adc
sbb
inc
in
cwtl
cmp
cmpps
xchg
dec
cmc
leave
shrb
clc
out
mov
push
shl
leave
fwait
inc
xchg
dec
inc
cmp
pop
inc
aad
ljmp
add
pop
xchg
adc
clc
aas
mov
push
stos
inc
scas
jmp
lods
adc
out
or
fnsave
sub
aaa
loop
pop
and
pop
fcmovu
int
in
mov
imul
xor
shll
shl
mov
jo
fdivrp
cmc
xor
lea
imul
and
dec
cmp
xor
insl
mov
arpl
setl
lahf
lods
out
sbb
dec
lods
or
fs
and
jecxz
mov
mov
daa
ljmp
rcl
mov
outsb
lods
add
jb
push
xlat
and
fwait
xlat
les
out
push
cltd
mov
push
mov
push
xor
out
add
test
data16
jp
scas
jo,pt
pop
adc
dec
mov
cmp
jb
aad
div
stc
dec
sbb
iret
mov
or
mov
std
sti
jge
xlat
xor
lods
or
insb
mov
mov
adc
inc
xchg
adcl
add
jbe
push
push
ret
or
sahf
mov
sub
lret
cmp
cli
cmp
repz
add
enter
jo
bound
stc
cmp
shlb
scas
pushl
test
sub
push
bound
cmp
xor
fdivl
mov
jb
es
jnp
jae
loop
push
bound
out
add
sbb
jnp
das
pop
pop
add
jle
loop
jl
push
adc
xor
movq
cld
cmp
fistl
je
push
adc
das
push
decl
pop
jl
cli
and
rorl
insb
jo
adc
xor
pop
fildl
add
cwtl
shlb
push
jns
out
lods
push
fs
adc
shr
lahf
mov
aas
mov
cmp
mov
enter
testl
loop
int
sub
fidivrs
xchg
xchg
cli
jnp
sub
mov
bound
addr16
jl
insb
pop
xchg
xchg
out
mov
ja
repz
fnstenv
fsubrs
into
pushf
mov
jmp
fidivrl
jge
sub
jb
push
stos
mov
cltd
add
mov
imul
ja
inc
jns
aaa
cli
and
enter
mov
xor
fstpt
pop
fistps
sub
mov
add
jge
pop
inc
outsb
xor
dec
pop
adc
and
cwtl
out
mov
mov
lea
shll
pop
adc
fstpl
sarl
repnz
lahf
add
rep
or
push
aas
or
pop
adc
mov
ss
xchg
jle
mov
lret
xor
mov
pop
cmp
pop
adc
push
dec
lea
mov
cltd
push
mov
sarb
out
je
pushf
jo
pop
adc
xchg
test
clc
cli
jg
out
jo
pop
jne
hlt
loopne
pop
xor
cmp
aam
lcall
sbb
jb
fdivr
arpl
fsts
iret
js
jnp
and
mov
dec
mov
lock
lret
push
cltd
sub
dec
cmpsl
ud2
int
test
push
popa
jp
jno
and
or
inc
cmp
mov
pusha
inc
push
and
cmp
xlat
mov
jmp
rorl
enter
mov
xchg
fcmove
pop
cmpsl
lock
andl
into
les
test
inc
faddl
mov
test
jno
scas
inc
sub
inc
add
and
popf
push
hlt
imul
or
sti
lcall
push
sarb
adc
in
stc
pushf
arpl
add
add
mov
dec
pop
adc
pop
xor
sub
aad
scas
xchg
inc
int3
ret
inc
pop
outsl
imul
pop
adc
jmp
adc
addl
add
push
dec
xchg
xchg
push
push
test
mov
mov
adc
sbb
dec
loop
fcomip
out
adc
xchg
xchg
das
lods
jmp
int
dec
or
lret
ss
adc
pop
cs
loop
cli
popa
mov
jnp
test
cwtl
push
lret
enter
loop
ret
mov
jne
xor
xor
mov
or
pop
xchg
sarl
out
mov
icebp
push
ss
lock
jle
xchg
mov
inc
pop
cmp
mov
dec
sahf
jnp
cmpb
loop
jl
or
ja
jo
jmp
sti
jno
mov
pusha
xchg
stos
test
jbe
jmp
mov
cmp
ret
out
push
mov
dec
push
imul
idivb
je
ret
out
test
mov
inc
fildl
ljmp
mov
stos
push
stc
cmp
jbe
mov
jge
test
fsubrp
repnz
aam
dec
push
jl
cwtd
mov
mov
fs
mov
mov
inc
fisubrl
std
scas
sub
notl
jbe
jecxz
mov
sti
pop
cmp
inc
xchg
adc
inc
bound
test
ss
je
ret
ja
jge
fwait
sub
mov
mov
mov
mov
mov
mov
test
sbb
mov
push
jb
or
xor
cmp
aad
add
add
fs
mov
sti
mov
fdivs
and
ds
mov
sub
je
scas
scas
scas
lods
mov
fidivl
or
insb
push
sub
dec
push
adc
mov
and
jecxz
add
out
inc
or
insl
stc
ja
sahf
fisubl
xor
cmp
xor
cmc
or
iret
jb
jmp
lods
sbb
inc
push
std
mov
sahf
mov
out
xorl
adc
ss
mov
mov
out
inc
xchg
inc
dec
xor
sub
inc
adc
jg
xor
push
add
aaa
scas
lods
xchg
sbb
mov
sub
rcrl
and
jl
mov
xor
push
cltd
push
clc
dec
mov
mov
cltd
xlat
ss
sub
jb
inc
adc
mov
sbb
fwait
inc
in
xchg
mov
push
push
out
inc
iret
cmpsl
push
out
cli
shr
cmc
rolb
jo
stc
es
pop
mov
arpl
sub
repz
hlt
cwtl
dec
imul
fstpt
pop
cmp
mov
cli
jg
loop
xor
aad
and
mov
imul
sbb
pop
mov
cmp
jnp
cld
lock
aaa
lods
imul
mov
xchg
or
push
mov
adc
repz
rep
call
jge
out
add
roll
jo
pop
adc
cmpsl
xchg
sub
push
xchg
rorb
dec
xchg
mov
add
pop
clc
lret
lcall
jge
mov
pop
int3
adc
or
pop
aas
dec
sbb
sub
cmp
push
jnp,pn
pop
push
add
div
jecxz
mov
adc
imul
fdiv
mov
sbb
jp
and
sti
adc
fdivrs
imul
in
pminsw
mov
dec
sti
jne
std
mov
leave
sbb
ss
sti
add
repz
dec
sbb
movsl
add
cmp
movsb
push
xor
addb
cmpsb
pop
les
testb
push
push
movsb
orl
mov
movsb
push
mov
jg
jb
popa
push
ja
mov
daa
cmp
imulb
out
inc
dec
js
filds
push
rcl
rcrb
aad
int
push
out
insl
xor
add
xor
sub
mov
mov
es
icebp
outsb
sub
pop
jge
jg
sbb
mov
movsl
adc
add
hlt
push
mov
aad
cmpl
mov
aam
inc
repz
mov
inc
ss
cld
ljmp
add
xchg
xor
mov
loopne
test
xchg
sbb
sub
pop
roll
pop
mov
push
cli
lret
scas
aam
test
popf
ds
nop
pop
js
sbb
movsb
jnp
mov
mov
idiv
cmp
push
fldt
dec
nop
pop
js
cltd
out
popf
rcrb
bound
es
out
push
and
or
aaa
or
mov
jne
xchg
push
sub
or
imul
xchg
out
add
jge
sarl
outsl
pop
mov
inc
xchg
cmp
mov
jmp
jbe
pop
out
pop
jle
mov
div
push
adc
out
sbb
hlt
jmp
dec
pop
adc
add
xchg
aaa
out
push
lock
xchg
xor
pushf
insb
addr16
mov
pop
mov
push
jno
das
pop
add
jne
divl
push
outsl
pusha
pop
pusha
js
out
push
shlb
or
sub
hlt
ja
xor
sti
adc
pop
scas
jg
xchg
and
inc
xor
dec
push
clc
cmpsb
pop
data16
lds
mov
fiadds
pop
insl
frstor
andps
xchg
out
xor
and
xor
add
je
cld
and
lock
mov
lret
popf
fisubrl
lret
mov
aaa
sti
addb
add
mov
push
xchg
and
pop
imul
sbb
adc
push
cltd
add
add
test
or
mov
mov
fisttps
jl
mov
stos
lock
or
push
outsb
xchg
mov
lods
adc
sub
push
jnp
push
pop
jbe
je
jmp
xchg
sbb
xor
andb
shll
in
xchg
sbb
scas
nop
pop
fwait
adc
and
outsb
stos
xor
mov
in
sub
push
sbb
stos
ss
push
inc
in
daa
mov
sbb
lods
adc
imull
pop
imul
in
xorl
jp
mov
rcll
incl
sub
fisubrl
xchg
adc
xor
scas
and
sub
mov
mov
aad
inc
adc
imul
mov
xchg
fcoml
and
sub
jns
lock
lret
xchg
mov
mov
arpl
dec
insl
pop
push
das
add
popfw
int
push
imul
lea
sbb
sbb
xor
push
mov
mov
mov
mov
outsl
mov
shrl
jl
pop
dec
rorb
cwtl
dec
mov
push
outsl
dec
or
movsb
les
lods
or
pop
and
add
xor
loopne
jne
loopne
or
sub
jmp
in
fwait
rolb
ds
or
nop
dec
adc
cmp
lods
and
push
fisubrl
in
cltd
jecxz
in
sub
mov
dec
sbb
mov
push
cmp
cltd
cmpsb
loope
dec
cmovno
adcb
or
add
sub
xchg
add
or
jle
mov
push
mulb
ds
sbb
pop
pop
xchg
ret
scas
jecxz
jl
jno
sbb
push
jg
mov
shlb
mov
and
push
dec
and
add
iret
out
add
scas
das
jle
or
or
cmpsl
les
out
or
xor
xchg
ret
inc
jae
fwait
xor
jp
pop
sbb
mov
lods
mov
dec
ret
cmp
push
push
mov
aas
mov
mov
fildl
push
dec
ja
sbb
mulb
into
shr
jl
aam
imull
orb
jne
jb
data16
mov
mov
inc
shll
std
scas
fisttpl
insl
les
mov
std
jo
mov
jne
fsubrp
repnz
mov
call
pop
cmp
lret
decb
add
jle
loop
sbb
rclb
das
sbb
and
dec
cmp
push
bnd
mov
jl
add
jae
scas
mov
imul
bound
inc
popf
cmp
push
jl
je
je
repnz
sub
enter
bound
mov
addb
mov
add
outsb
fsubrp
dec
cmp
insl
lds
loope
ljmp
sbb
add
and
ljmp
leave
jno
scas
adc
js
sahf
add
sub
jl
jmp
dec
in
dec
repnz
stos
adc
je
shll
add
je
out
jne
sbb
or
jnp
xchg
mov
cmpsl
fstpt
jmp
cmp
aaa
je
out
adc
or
outsb
xchg
out
inc
push
jne
xchg
scas
repnz
add
jecxz
push
nop
call
add
pop
jecxz
arpl
adc
push
add
add
stos
mov
xchg
sarb
sbb
pop
fidivl
imulb
std
push
clc
std
std
std
jo
jmp
shl
shlb
xor
mov
ficomps
sub
add
test
jl
imulb
in
cwtl
movsb
clc
mov
dec
rcr
sub
xor
push
mov
pop
pop
xor
bnd
mov
xchg
sti
mov
mov
cmp
sub
fldcw
fsts
stos
xor
jl
add
dec
sub
incb
pop
and
xchg
inc
jo
repz
push
pop
sbb
mov
repz
in
daa
loope
add
xor
ret
aad
push
aaa
push
jmp
mov
inc
cmp
cld
or
repnz
adc
icebp
repz
and
jge
push
mov
pop
cmc
xor
adc
push
adc
imulb
stc
or
clc
mov
pop
stc
in
mov
movsl
jp
cmpsl
jb
int3
out
jmp
mov
out
adc
adcl
setnp
cwtl
inc
sbb
fidivrl
sub
fcmovbe
int3
test
xor
pop
into
popa
mov
push
loop
cli
mov
mov
mov
xor
and
cmp
gs
scas
stc
aas
into
mov
aaa
into
cmp
outsb
jb
sub
xlat
ret
sbbb
pop
fptan
lret
dec
mov
dec
jno
rorl
je
xor
jg
cmpsb
jns
jge
stos
inc
mov
fstpl
addb
adc
add
jne
ror
aaa
fcomp
push
subl
xlat
adc
add
fidivrl
loope
stos
insb
rcr
lods
dec
sti
cltd
and
testb
pop
or
cli
lcall
mov
inc
cmpsb
pop
cld
scas
loopne
test
enter
adc
inc
call
int
pop
jmp
pop
aad
inc
das
nop
dec
jecxz
scas
inc
or
femms
call
sahf
fistps
gs
ja
dec
cmp
dec
loopne
adc
shll
nop
push
pop
cmp
inc
mov
sbb
mov
aas
arpl
cwtl
cmp
or
aaa
sub
inc
ret
mov
mov
test
scas
insb
dec
aad
repz
xchg
and
add
clc
jae
jge
xor
xchg
testb
mov
je
negb
sidtl
ret
hlt
jge
xchg
adc
jl
fwait
stos
cmpsl
iret
push
mov
cmp
jbe
stc
xor
mov
adc
cmpsl
dec
popf
cmp
jl
jmp
mov
sti
loopne
mov
mov
xchg
stos
xor
mov
xlat
ss
sti
jl
jmp
cmp
aas
fs
lock
sbb
pop
out
inc
adc
jnp
xchg
scas
divb
lods
adc
sbb
test
adc
adc
scas
pop
insb
adc
adc
xchg
add
cmp
stos
xlat
cmp
fists
jp
std
jo
std
loopne
arpl
xchg
arpl
mov
mull
lret
testl
repnz
mov
mov
stc
lods
aas
mull
pop
jnp
jb
adc
fwait
inc
add
adc
xchg
and
jle
mov
les
jecxz
leave
outsl
add
mov
add
push
cmc
or
fisubl
fs
cmpsb
stos
cmpsb
ffreep
mov
mov
inc
je
idivl
lock
mov
push
mov
xorl
popf
sahf
dec
cmpsl
dec
int
mov
mov
ja
add
fs
push
loope
les
jp
cltd
mov
movsl
aad
xor
jae
out
sbb
jl
jp
fidivs
into
adc
sub
insl
mov
jecxz
xor
sti
sti
idivl
cmpsb
jne
test
cli
xchg
sub
scas
lahf
int
daa
sub
call
aaa
mov
mov
xchg
sbb
fwait
cltd
push
lock
pop
cmc
pop
aam
jl
xchg
in
stos
repz
stos
int
sbb
mov
mov
or
xchg
lea
jmp
sub
aaa
jmp
inc
inc
xor
movsb
sbb
push
shlb
clc
fnstcw
inc
mov
jne
mov
cmc
ss
sbb
xchg
xor
mov
or
ret
mov
pop
mov
jne
out
push
clc
pusha
push
repz
scas
fsts
jne
arpl
mov
daa
cmp
testb
sub
insb
pop
imulb
popf
aad
inc
imul
xchg
jbe
popf
sti
sub
in
test
push
inc
add
jb
mov
lret
push
subb
mov
inc
daa
les
popa
sub
and
and
sub
ret
lcall
xchg
or
nop
add
dec
pushf
cld
fidivrl
std
ja
jno
int3
inc
jle
dec
mov
mov
inc
pushf
jnp
sbb
jle
push
repz
or
sbb
addr16
push
lds
ret
loop
mulb
out
arpl
incl
push
test
loope
fmull
or
mov
or
loope
add
insb
mov
push
push
jo
mov
adcl
mov
push
ficoml
ret
cmp
daa
pop
and
add
repz
orb
lcall
hlt
dec
outsl
fiaddl
dec
push
dec
inc
pop
push
xchg
jmp
clc
push
sbb
mov
repz
ret
pushf
rorb
jl
inc
pop
pop
js
sbb
insl
daa
and
mov
cmp
xchg
xlat
cmp
cmp
movl
sarb
gs
pop
pop
outsl
xchg
lcall
inc
xor
jb
mov
push
test
enter
xlat
jmp
or
sbb
cltd
pop
ret
iret
mov
inc
cmc
push
xchg
lods
lods
mov
mov
mov
xchg
mov
jge
or
push
incb
pop
ret
dec
arpl
inc
or
jbe
sti
ja
repz
xlat
cmp
into
xor
jno
pushf
add
push
bound
add
add
dec
sbb
inc
or
mov
in
rorl
push
dec
adc
leave
add
or
xor
nop
stos
test
xchg
xor
ss
out
sub
test
fs
bnd
test
repz
add
cmp
mov
mov
xor
mov
loopne
jg
xchg
inc
scas
mov
cmp
shll
repz
push
repnz
and
outsb
sbb
jae
xor
mov
cmp
rclb
hlt
add
xor
jbe
repz
stos
mov
scas
mov
sub
aad
stc
lods
push
jne
adcb
xor
out
jl
fbstp
daa
jg
negl
gs
xchg
ficoml
std
mov
pop
cmp
lret
sti
jbe
cmc
jb
loope
iret
jg
into
mov
dec
pop
sbb
movsb
iret
dec
jg
les
mov
jne
imul
fidivl
repz
add
shll
mov
mov
jbe
repz
sti
push
rclb
test
xchg
jmp
and
mov
icebp
stos
pop
cmp
and
test
in
adc
jb
clc
cmpsb
idivl
xchg
out
jo
jle
stc
or
cmc
pop
out
cmpsb
mov
mov
dec
in
cmc
test
fs
setl
or
insl
sub
imul
repnz
or
push
jo
pop
cmp
lahf
cmp
lcall
lds
inc
ja
dec
cmp
push
inc
in
or
repz
pusha
aam
sub
jecxz
shll
std
arpl
aaa
repz
add
fnstsw
inc
xchg
cmc
or
imul
sbb
xchg
int3
aaa
dec
push
call
jecxz
add
out
cli
mov
inc
std
aaa
fsubl
inc
push
adc
pop
mov
sti
dec
add
xor
jp
jge
out
sub
jo
cmp
in
dec
loop
repnz
shlb
or
loopne
xchg
or
push
imul
cmp
sub
rcll
cmp
xchg
je
lods
fildl
or
ds
push
enter
outsl
cli
pop
push
dec
inc
mov
sub
sbb
or
sti
cmp
or
test
test
add
mov
out
add
xchg
movsb
inc
call
pop
test
cmpsb
cmp
mov
les
xchg
imul
in
mov
popa
cmc
xchg
imul
xchg
rcrb
rcr
adc
cmc
mov
imul
ret
cltd
pop
or
mov
mov
or
inc
add
in
push
jns
jne
inc
mov
mov
and
pop
dec
test
data16
cwtl
in
jns
fwait
dec
lahf
loop
insb
jmp
cmp
adc
stos
jl
or
outsb
rcr
cmpsl
cmp
rcl
cmpsb
data16
or
cs
push
dec
ljmp
add
scas
das
lods
ret
inc
or
repnz
cmc
popa
aad
sbb
out
sub
pop
lcall
mov
xchg
mov
and
xor
mov
pop
fcoms
test
mov
mov
cmc
xor
orl
mov
pop
xchg
mov
push
scas
mov
ja
repnz
or
into
aas
mov
mov
lds
cmc
mulb
hlt
add
xor
jbe
out
add
and
addr16
int3
jge
xchg
adc
js
stos
mov
js
mov
pop
jnp
jb
jecxz
fildl
or
inc
in
mov
lods
addl
je
sar
xchg
xor
fucomi
orb
mov
fstpl
testl
xor
push
ret
roll
lahf
fadds
xchg
jae
out
cmp
dec
nop
mov
adc
insb
add
gs
stc
lea
push
push
imul
jle
adc
jo
pop
adc
movsl
mov
insb
or
adc
xchg
lcall
sub
scas
dec
push
shrl
xor
dec
ljmp
dec
cli
bound
sub
mov
and
mov
and
adc
pop
data16
add
add
add
pusha
xlat
dec
nop
and
sbb
bound
stc
movsb
imul
cmp
jb
out
add
add
jae
and
xchg
xor
pushf
mov
cmpsb
dec
les
cmpb
mov
daa
dec
push
xorb
movsl
int
cmp
cmpsb
fimull
or
test
add
divb
lret
sbb
jmp
cs
adc
std
std
mov
jle
bnd
mov
sbb
jmp
sbb
jb
ds
mov
jnp
pop
cmp
sub
and
push
sbbl
adc
mov
xor
adc
add
lock
lods
loop
out
or
push
cmp
fcomi
aam
add
fcoml
xor
and
adc
mov
arpl
lahf
xchg
mov
or
lods
nop
pop
jmp
fwait
cmpsb
add
cmp
mov
push
adc
movsl
ret
and
cmc
divl
push
adc
aaa
stc
add
fisttpll
rolb
push
adc
mov
lret
or
mov
jg
lret
stc
std
mov
ds
int3
fs
call
pop
pop
jae
repz
ja
aam
pusha
push
jae
adc
clc
cwtl
les
iret
pop
xor
test
js
aad
aas
pop
in
mov
add
sarl
icebp
shrl
in
mov
faddp
cmp
push
fdivrs
xor
test
adc
mov
call
ret
mov
jb
mov
add
test
xchg
push
jnp
test
add
cmp
repnz
hlt
mov
and
xchg
mov
call
daa
mov
and
adc
dec
push
mov
mov
cmc
test
fimuls
push
in
cmp
lahf
xchg
in
adc
iret
add
pop
add
ficoms
push
mov
mov
out
data16
into
add
xor
inc
aaa
dec
in
cld
ficoml
subb
cmp
test
jnp
or
cltd
stc
popa
jecxz
dec
push
cmp
mov
or
repz
fstps
dec
mull
jno
pop
push
pusha
push
fldcw
sub
gs
movsl
lret
cld
cld
fcoms
pop
sbb
loopne
sub
das
push
fimull
pop
push
dec
clc
out
jno
mov
fdivrs
out
jmp
fidivrl
mov
xchg
push
andl
add
loop
lea
lea
addr16
inc
inc
inc
orb
xchg
rorb
adc
and
mov
or
inc
cmpb
lds
es
and
sti
not
xchg
pop
imul
pushf
jbe
pop
mov
inc
cmpsl
call
cmp
jbe
push
push
cli
jnp
aaa
xor
mov
pop
sbb
dec
arpl
imul
pushf
inc
pop
adc
repz
test
bswap
mov
mov
adc
mov
fldl
or
stos
loop
push
in
mov
orl
mov
ja
add
scas
pop
mov
pop
xchg
add
stos
sbb
mov
cmp
test
xor
aaa
add
add
mov
mov
mov
jmp
cmp
pusha
cld
stos
iret
test
push
stc
les
loopne
sbb
aaa
dec
sbb
std
imul
inc
dec
je
xchg
addr16
mov
sti
jge
sti
xor
rolb
bound
lods
pop
mull
mov
jle
mov
pop
movsl
lock
or
push
loop
shll
imul
jg
je
ffreep
ss
cli
xchg
loop
add
sbb
imul
shr
mov
push
insl
fiaddl
add
adc
jl
add
and
les
ljmp
inc
addl
mov
jns
add
sub
out
idivb
adc
sub
mov
int
mov
push
test
and
push
lea
dec
adc
stos
and
pop
adc
repz
mov
adc
dec
fsubr
psrad
sahf
mov
dec
mov
push
div
adcl
fisubs
jb
fwait
stos
xchg
cmp
pop
in
and
lds
repnz
mov
push
fisubrl
xorb
test
arpl
rclb
inc
inc
xor
cs
ficompl
mov
lret
fnsave
jne
mov
aaa
sti
cmpsb
xchg
inc
jb
mov
mov
enter
insl
pop
adc
fnstenv
jbe
inc
pop
adc
faddl
pushf
inc
pop
adc
cmp
mov
fwait
mov
pop
mov
shrb
insb
repz
pop
mov
or
fwait
popf
cs
push
ds
gs
mov
mov
das
jecxz
jge
and
movsl
pop
jmp
mov
inc
jge
xchg
xor
bound
lret
sahf
mov
movsb
inc
xchg
dec
or
ja
fcmovu
pop
rcrl
pop
dec
pop
nop
xchg
clc
outsl
out
xor
sbb
inc
pop
xchg
mov
dec
cmpb
dec
adc
cmp
mov
xchg
idivl
mov
testl
into
sbbl
jmp
inc
int3
cmp
push
aaa
push
xchg
xchg
inc
aaa
cwtl
jbe
sti
rol
push
pop
cs
out
xor
aas
mov
mov
and
movsb
jo
push
mov
jge
xchg
jl
loopne
ficoms
out
cmc
xor
repz
and
xor
mov
or
dec
adc
aas
hlt
xor
mov
insb
jmp
cmp
mov
adc
je
in
cmpl
inc
push
rcl
cmp
andl
aas
ret
and
mov
bound
xor
unpcklps
xchg
adc
and
push
push
in
cld
push
sbb
cli
adc
mov
dec
jg
aaa
jp
fninit
mov
xchg
clc
stos
adc
cmp
scas
test
xor
cmpsl
xchg
xor
in
pop
cmp
mov
mov
hlt
imul
outsl
pop
push
sbb
push
adc
mov
adc
fidivl
xchg
cmpsb
xor
adc
mov
adc
loop
add
add
cltd
sub
adc
loop
rolb
in
shll
adc
inc
jo
pop
cld
incb
dec
mov
and
in
sbb
mov
xchg
sub
mov
shll
and
mov
cld
sti
testb
or
je
add
sub
in
sarb
sbb
incl
mov
jbe
cmp
jo
and
mov
movsb
bound
fs
pop
mov
jb
leave
movsb
addb
adcb
jbe
cs
sbb
jg
sbb
adc
cmp
adc
mov
jae
and
scas
dec
nop
and
hlt
mov
mov
mov
mov
inc
addb
iret
jb
in
lods
cmpsb
add
aaa
cmp
or
aam
adc
xchg
ja
adc
sti
int
sub
mov
inc
shl
pop
ljmp
pop
pop
inc
orb
ret
or
and
loop
add
add
mov
std
xor
fsts
in
add
aam
dec
xchg
sbb
test
push
rcll
mov
out
repz
push
aas
flds
push
ja
insl
movsl
out
push
or
push
xchg
jns
dec
push
in
push
lock
mov
add
rolb
ljmp
pushf
inc
pop
adc
ss
push
xlat
or
or
stc
insb
pushf
inc
pop
adc
xor
subl
sbb
fbld
xchg
arpl
cmp
xchg
adc
adc
adc
and
decl
and
mov
imul
out
inc
xchg
xor
aas
bound
sarl
push
loop
mov
negb
dec
repnz
in
movzbl
push
jle
xor
cmc
mov
out
aaa
jne
pop
orl
cmpsb
mov
stos
ja
ret
fyl2x
js
jne
mov
cmpb
in
adc
pop
mov
repnz
into
xchg
std
sub
mov
xchg
xchg
ret
sti
cld
jb
int3
jecxz
fdivs
xor
xchg
rorb
jo
push
divb
and
push
jns
loope
adc
repz
mov
movsb
sub
sub
out
lea
sbb
mov
push
adc
in
mov
aas
pop
adc
je
pop
int3
xlat
call
inc
pop
adc
daa
movsb
sbb
ss
sbb
dec
pop
pushf
inc
pop
adc
rorl
jb
mov
sahf
leave
push
dec
addr16
jp
jg
jecxz
and
mov
push
sbb
xchg
sbb
dec
xchg
out
jnp
pop
int
cld
add
mov
adc
ficoml
jp
mov
arpl
pop
lahf
push
nop
inc
nop
iret
fdivp
lcall
mov
mov
cmp
mov
dec
pushf
inc
pop
adc
jns
ret
insl
jecxz
iret
cmp
or
push
cmp
leave
xchg
test
scas
pop
scas
test
psraw
and
mov
push
sbb
dec
and
out
gs
cmp
cmc
ret
dec
or
dec
inc
repnz
jg
rcl
jle
daa
mov
lret
inc
icebp
xchg
outsl
lretw
or
sbb
mov
cmp
cs
mov
shll
dec
push
push
mov
ret
cmpsl
mov
and
clc
cmp
push
enter
jmp
dec
hlt
add
outsl
or
test
mov
subb
insb
jp
mov
decl
nop
loopne
daa
into
sbb
xlat
xor
jle
mov
int
xor
ficoml
mov
out
add
cmp
xor
fidivs
pop
adc
pop
mov
cmp
mov
add
loopne
pushf
cmp
aaa
movsl
add
je
divb
int
aam
inc
fstpt
mov
adc
rcll
jns
add
mov
jge
lret
mov
into
jl
cmpsl
lret
imull
xlat
mull
push
mov
jge
sti
pop
xor
mov
pop
inc
push
aam
shll
pushf
dec
push
pop
mov
sti
add
push
stc
outsl
cmpsl
out
sti
jbe
repnz
fdivs
xchg
mov
iret
popf
mov
in
cmp
dec
popf
cmp
mov
sti
jge
jmp
arpl
sar
or
dec
pop
dec
push
xchg
mov
lds
add
adc
jl
cli
lods
adc
dec
fidivl
test
into
popf
mov
and
mov
repz
testb
out
std
adc
lock
shll
cmpsl
out
clc
jo
jmp
mov
pushf
cmp
scas
dec
pusha
cltd
cmp
mov
sti
jg
fstpl
push
xchg
ja
xor
sti
add
pop
loopne
movsl
bound
jle
sti
test
insl
push
stc
sbb
iret
lahf
cmp
lahf
cmp
add
push
jmp
adc
or
pop
xor
aas
aam
dec
dec
arpl
outsl
xchg
dec
out
or
paddd
mov
xchg
insb
add
andw
jp
xchg
ja
fadds
scas
test
jp
ss
scas
jle
inc
ljmp
mov
out
add
cmp
ljmp
aas
pop
and
pop
pop
ret
jo
adc
adc
das
popl
stos
dec
xor
imul
jo
adc
repnz
or
loope
fnstsw
test
stos
adc
adc
mov
push
popl
cmp
add
jae
pop
aas
cli
jo
jg
mov
pop
adc
xchg
mov
jne
mov
fcompl
mov
cwtl
pop
adc
fwait
adc
pop
mov
cld
add
cld
clc
clc
lock
and
sub
rcr
ja
pop
ret
xchg
adc
test
adc
dec
out
push
xor
lock
in
or
or
sub
mov
inc
test
pop
movb
orl
sub
lret
shrb
inc
or
jg
lret
test
out
jno
sub
push
or
rorl
leave
lahf
out
jmp
adc
mov
fnsave
xlat
pop
mov
inc
add
jmp
mov
andl
ja
fisttps
or
adc
mov
adc
cmc
cmpsb
mov
xchg
into
call
stc
adc
out
add
inc
pop
dec
push
aas
adc
arpl
wbinvd
xchg
mov
std
jo
push
test
inc
mov
ljmp
push
xor
pop
adc
or
pop
add
mov
jge
push
test
shr
xchg
mov
movsbl
iret
gs
sbb
sub
cs
cmp
xlat
shrb
addr16
movsl
cmp
mov
push
pop
pop
xchg
or
iret
jle
xor
inc
outsb
cmp
xor
jae
aas
xor
loopne
ficompl
stos
cmc
addl
movsb
or
mov
jo
jbe
ds
adcb
cmpsb
and
mov
lods
fmuls
int
in
das
daa
addr16
sbb
mov
sbb
adc
rcll
xchg
mov
xchg
cmp
push
mov
mov
fistpl
fistpll
mov
ret
shll
lahf
adc
cmpb
jns
cld
sti
notb
lods
cmpsl
loop
add
icebp
std
xor
sub
pop
loop
pop
jle
out
fistpll
mov
mov
test
insb
push
out
cmp
mov
sub
add
mov
add
xchg
sub
add
mov
jne
fs
and
mov
arpl
adc
mov
pop
push
add
add
sub
test
pop
adc
cmpsb
add
mov
pop
jg
idivb
mov
testb
fbstp
jbe
inc
mov
push
xchg
xchg
aaa
scas
push
clc
inc
jb
inc
push
addl
xchg
stc
xor
decl
xchg
lds
push
jge
xchg
sti
adc
mov
jg
jns
mov
adc
shrb
jne
pop
ret
cmp
mov
subl
or
push
cli
jo
cmp
out
pushf
cmp
test
push
push
jl
lret
mov
jno
sti
add
aaa
xchg
and
mov
sub
aam
pop
jp
add
scas
push
jmp
stc
jge
xchg
in
out
xor
xchg
aaa
repz
pop
mov
mov
sbb
std
sti
cli
jb
add
mov
and
repnz
jae,pt
lea
mov
ss
or
js
loop
push
mov
cmc
push
mov
push
sbb
cmp
adc
imul
out
in
and
adc
neg
push
xor
cmpsb
inc
pop
add
pop
das
add
adc
pop
mov
aas
mov
fscale
addl
adc
xchg
repz
xor
jnp
lret
mov
lcall
jecxz
mov
adcb
shll
sbb
arpl
in
pop
idivb
js
cmc
adc
add
pop
mov
stos
sub
xor
adcb
push
in
pusha
push
lock
test
test
mov
aam
adc
inc
repz
mov
sbb
jp
or
jnp
push
in
xchg
mov
mov
lock
in
mov
mov
xor
testl
test
test
or
outsl
push
adc
decb
jo
adc
lahf
dec
popa
std
shl
or
push
dec
xchg
jl
clc
and
or
push
hlt
push
inc
aaa
pop
fstps
or
sbb
push
adc
shl
mov
jmp
inc
vcvtsd2si
shrb
lret
outsl
push
adc
nop
dec
aad
xchg
fdivrs
or
in
push
fucomip
push
js
dec
and
sub
inc
sbb
out
fcos
and
fcoms
or
mov
dec
fisubl
dec
mov
dec
loopne
orl
sbb
daa
popa
xor
rolb
jge
mov
push
inc
mov
xchg
sbb
push
rorl
fcomps
sub
cld
inc
xor
sbb
clc
inc
pop
pop
aas
pop
loope
loopnew
out
jne
pusha
fdivs
nop
js
bound
push
dec
stos
mov
pop
setbe
jo
mov
sub
xor
sbb
div
add
lods
fwait
jbe
outsb
cld
cmp
mov
in
cld
push
movsb
pop
dec
cmp
arpl
mov
js
push
aam
out
mov
fisttps
imul
jle
scas
outsl
jb
ja
ljmp
add
push
in
lock
sbb
out
mov
push
arpl
mov
inc
sbb
cmp
call
xchg
imul
push
stc
aad
push
jns
mov
das
movsl
cmpsb
jle
mov
push
repnz
aam
add
jo
adcb
dec
out
inc
xchg
out
ljmp
mov
ret
pop
jbe
lea
jne
jb
sbb
inc
xchg
loop
push
jno
mov
and
insl
add
push
in
lock
sbb
data16
mov
push
arpl
mov
inc
sbb
cmp
call
adc
or
push
cli
addr16
stc
aad
push
jns
mov
das
mov
adc
rcll
push
repz
jo
adcb
dec
out
inc
xchg
outsb
jmp
bound
dec
sbb
add
cmp
push
lods
adc
and
in
in
js
out
jno
ljmp
cld
xor
fnstcw
insb
add
jbe
cltd
and
nop
mov
cmp
mov
fwait
push
adc
sub
call
xchg
insb
add
xchg
mov
jle
sub
cld
xor
les
shl
add
jb
mov
adc
data16
sbb
pop
jge
arpl
popf
mov
inc
cmc
add
xor
jo
imull
xchg
pop
push
addr16
inc
cli
aam
data16
lods
mov
lds
mov
add
jl
or
xchg
inc
xor
xchg
pop
xor
mov
or
js
in
pop
cli
lret
xchg
xor
mov
or
xor
sbb
jp
lcall
xchg
outsb
cmpsl
xchg
sbb
loope
push
push
mov
sbb
mov
adc
push
sbb
inc
mov
pop
push
pop
lret
sub
insl
push
push
fisttps
xchg
sbb
cmp
mov
push
xor
dec
push
pop
jae
pusha
add
loop
shlb
xchg
dec
or
mov
inc
and
push
stc
sti
inc
mov
jge
nop
adc
cmpsl
lret
adc
ja
enter
adc
xchg
popa
xor
push
adc
xor
xchg
shl
pop
add
dec
xchg
xor
or
rclb
fwait
aaa
fimull
arpl
add
adc
add
mov
sbb
pop
sbb
icebp
test
std
mov
in
in
repz
ljmp
jle
inc
mov
inc
gs
mov
lods
outsb
add
cmp
shl
mov
push
mov
mov
mov
adc
jnp
lret
sub
xor
jbe
arpl
sbb
jp
enter
scas
fimull
dec
or
or
in
push
leave
arpl
lcall
pop
call
lret
or
jbe
inc
xchg
dec
ds
iret
inc
xchg
push
or
mov
iret
xlat
mov
fcmovu
movsb
in
mov
sbb
and
cmp
mov
jmp
sub
jne
lgs
lea
popa
scas
dec
jo
jno
rclb
in
add
addl
lods
sub
lahf
test
mov
cmpsb
cmc
es
add
lods
xor
ds
sbb
insb
mov
jnp
lret
iret
addr16
subl
dec
add
stos
sub
mov
mov
hlt
push
and
mov
call
js
rorl
aaa
xchg
shll
cmp
cmpsl
or
popa
lods
mov
inc
ficomps
aas
enter
test
inc
push
xor
sti
imul
dec
stos
aaa
aaa
scas
ret
sbb
idivb
mov
sub
out
push
icebp
pushf
int
pop
mov
sti
add
push
jno
insb
mov
sti
imul
mov
ss
or
inc
push
mov
add
fdivl
repnz
or
add
nop
mov
sti
mov
lock
push
lock
xor
jecxz
mov
mov
xor
hlt
call
cmp
mov
test
sub
je
adc
dec
sbb
aaa
sbbl
repnz
cld
test
test
mov
stos
ret
mov
mov
icebp
mov
xor
pop
fldl
push
test
in
pop
jae
push
ja
cltd
popf
xor
jmp
cmp
dec
arpl
repz
stos
cmpsl
hlt
mov
jbe
repnz
mov
pop
sub
scas
lds
sub
fstpt
add
mov
loopne
daa
push
out
mov
xor
cli
add
loopne
movsl
xchg
mov
lret
iret
xchg
cmp
xchg
cmpsw
or
jge
and
dec
lret
cltd
out
jmp
jb
bound
xlat
fmul
jnp
mov
lret
mov
push
dec
repz
dec
pop
dec
pusha
mov
rclb
and
mov
push
es
stc
ja
leave
ss
mov
sbb
jp
sbb
orb
pop
sub
and
cs
sarl
cmp
inc
cltd
imul
add
jb
xor
adc
mov
xchg
nop
popa
shrb
mov
int3
or
ret
cmp
popf
testb
lret
cmp
xor
adc
shrb
push
leave
push
push
dec
daa
addr16
jmp
pop
stos
enter
repz
cmpsl
push
push
cmpsb
sub
cwtl
mov
xchg
jns
aam
sti
lahf
fdivrl
mov
jmp
adc
cmp
data16
leave
sub
out
push
push
popa
mov
push
mov
mov
in
ficomps
jo
sub
mov
icebp
add
cmp
pop
jo
pop
adc
dec
addl
movsl
adc
add
popf
or
jns
adc
inc
lahf
pop
into
jp
pop
dec
dec
cmp
pop
pop
test
sub
add
dec
cmp
das
imul
mov
mov
adc
jns
pop
hlt
out
mov
lret
dec
add
fwait
and
sub
mov
cmovnp
cmc
imul
push
and
push
imul
int3
rorl
lret
inc
out
test
xchg
sub
adcl
inc
aad
aas
ja
testb
push
leave
das
dec
arpl
mov
pop
sub
lods
xchg
ljmp
cmp
sbb
ret
xchg
stos
fildl
add
mov
insl
dec
fidivrl
dec
xchg
dec
mov
pop
arpl
inc
mov
mov
inc
cmp
mov
mov
jecxz
jnp
sti
mov
test
clc
adc
mov
push
or
cs
insb
push
fidivrl
js
in
push
inc
andb
test
pop
jmp
nop
xchg
mov
test
lods
fwait
dec
rclb
xchg
or
mov
mov
dec
xchg
aas
testl
cmp
push
fwait
jp
dec
lods
adc
jno
jb
mov
mov
jp
xor
mov
out
aas
in
xchg
insl
jb
outsl
dec
fsubr
sbb
ljmp
pop
push
call
xchg
add
mov
arpl
sbb
lds
xchg
mov
out
jmp
add
sub
ss
or
dec
pop
adc
jmp
jmp
js
inc
xorb
ja
sti
imul
fstpt
xor
out
ret
and
stos
dec
and
push
adc
lods
pop
jo
pop
adc
jmp
xchg
pop
xor
sub
sbb
adc
fwait
data16
sbb
jge
pop
mulb
pop
repz
ret
pushl
fsubl
cmc
pushf
cmp
adc
mov
add
mov
mov
pslld
lds
bound
mov
pop
mov
sub
sub
push
lahf
repz
xchg
mov
sub
cltd
or
push
cmc
lahf
fsubrs
les
divb
add
aaa
mov
push
daa
add
les
mov
jmp
out
orb
jb
inc
sbb
testb
push
pusha
fs
pop
pop
lret
and
rcll
cld
sub
add
popfw
mov
mov
sbb
pop
sub
and
push
add
cld
push
je
jb
scas
mov
mov
mov
movsb
mov
out
pop
jp
jne
push
xchg
add
cli
sub
and
shlb
add
shrl
ljmp
push
adc
add
fstpt
adc
jo
pop
in
inc
adc
pop
scas
rcl
inc
bound
jecxz
ficoms
sbb
jns
xor
fdivr
pop
pop
sub
mov
fsubrl
jo
pop
movsb
nop
xor
daa
push
in
mov
jl
mov
inc
sub
adc
fiadds
js
mov
adc
xchg
lds
stos
mov
in
dec
cmp
mov
icebp
push
fsubrl
movsl
cmc
cmp
add
jae
imul
leave
sub
aam
xchg
fs
or
mov
xchg
scas
fstpt
xlat
dec
hlt
das
sub
scas
insb
loopne
daa
in
sub
lret
lock
sub
jmp
inc
repz
pushf
jns
repnz
stc
loop
cmc
mov
rorl
mov
shrb
adc
std
push
icebp
lock
mov
jo
pop
adc
daa
xchg
sub
sbb
fwait
jp
or
leave
loopne
gs
mov
cmpsb
cmp
inc
push
push
idivl
jbe
mov
mov
xlat
aaa
cmp
ret
pop
fwait
add
andl
frstor
lret
aaa
dec
stos
inc
test
mov
add
pop
pop
imul
mov
into
xor
popa
sbb
movsl
jge
mov
test
pop
dec
mov
bound
lea
fs
xchg
mov
push
sbb
ret
hlt
and
sub
pop
push
mov
neg
mov
or
leave
pop
addr16
and
movsb
popf
mov
js
cwtl
nop
cmp
mov
mov
rclb
mov
rcr
jae
lods
or
loopne
push
pop
add
pushf
sarb
cld
rclb
cs
xchg
mov
xor
jmp
adc
xchg
lock
push
and
movsl
out
insl
into
jle
sbb
lcall
mov
inc
adc
movsb
rep
in
lea
mov
push
loope
and
mov
jns
xchg
cli
ja
mov
test
pusha
test
xchg
push
or
dec
inc
andl
jle
divb
outsb
mov
leave
mov
add
cmp
dec
arpl
hlt
sub
push
sub
je
pop
nop
rorl
mov
insb
adcl
inc
arpl
hlt
sub
aad
xchg
call
add
adc
out
pop
in
push
sub
es
lea
adc
jg
stos
mov
test
add
pop
mov
out
bound
jne
ja
and
or
sti
mulb
pop
xchg
nop
repz
shl
jnp
sbbl
fildll
dec
sbb
pushf
xchg
leave
and
bound
fldt
lret
out
inc
cld
cmp
jbe
mulb
jmp
jmp
jbe
icebp
add
pushf
cmp
add
adc
and
jg
dec
hlt
mov
std
pushf
ja
xor
les
je
pop
fistpl
add
push
fs
pop
iret
popf
cmp
daa
cmp
into
stos
fwait
sti
jnp
aaa
les
jne
mov
add
push
pushf
sbbl
xor
and
popf
cmp
sbb
xchg
inc
mov
xor
daa
test
jp
ds
push
ror
lcall
popf
aad
mov
dec
mov
add
xor
add
jb
sbbl
mov
push
cmp
inc
push
and
scas
into
xor
leave
mov
fs
cpuid
adc
mov
xlat
jo
repz
sbb
mov
add
fnstsw
xchg
mov
aaa
and
adc
scas
xorl
mov
sub
cmpsl
aad
orl
lods
mov
pop
adc
fiadds
cmpsb
and
in
gs
push
cmp
sub
jecxz
mov
jae
cs
std
mov
scas
add
push
jo
clc
ficoml
shr
push
idivb
jo
mov
out
rcl
sub
and
xchg
scas
scas
mov
xchg
mov
in
icebp
xor
test
sbb
incb
ret
cmp
cltd
gs
jno
shlb
push
lock
or
jg
dec
mov
dec
ss
jle
mov
outsl
lret
rolb
sbb
imul
push
jmp
and
arpl
add
jmp
jmp
mov
xchg
dec
sbb
mov
scas
jecxz
inc
inc
pop
fwait
xchg
and
out
add
sbb
xchg
xchg
gs
pop
xor
add
add
icebp
outsb
push
push
js
and
cltd
movsb
les
bswap
in
jecxz
add
jb
ret
addl
div
and
mov
pop
adc
inc
cltd
jae
incl
or
scas
andl
in
mov
sub
addr16
push
sbb
cli
pop
rcr
stos
push
cmp
xchg
cmp
inc
imul
or
jno
popa
mov
push
ljmp
loope
and
into
mov
mov
push
in
cli
sub
jb
setae
mov
fcompl
adc
push
inc
int3
loope
mov
sbb
add
push
stc
push
rcrb
out
hlt
and
xchg
add
repnz
movd
rcrl
movsl
call
fcomi
push
imul
pop
or
out
xor
sub
cmp
inc
lret
adc
dec
fcoms
xor
push
mov
xchg
jecxz
icebp
fiadds
dec
stos
jmp
sahf
push
pop
leave
adc
cmp
ja
inc
lods
mov
out
xchg
and
ja
repz
fistps
fidivrs
dec
fcoms
cmpsb
lcall
pop
loop
jle
out
push
mov
fidivs
aaa
sti
insb
movzbl
sub
adc
iret
jmp
je
cmc
jo
xchg
mov
lret
mov
mov
pop
loope
mov
jg
sbb
xchg
ret
add
jns
fwait
inc
jp
pop
cltd
bound
jge
mov
cmp
out
leave
ja
lcall
sub
nop
stos
mov
mov
xor
mov
cmp
cld
mov
scas
je
idiv
xor
pop
in
xchg
and
bound
and
shl
fidivrs
je
lods
shrb
mov
inc
xchg
lcall
mov
and
cmp
cld
add
es
in
sbb
mov
pop
ljmp
mov
pop
aaa
mov
divb
mov
dec
pop
mov
daa
dec
jo
pop
adc
or
icebp
leave
jp
and
rolb
xchg
daa
mov
mov
mov
sbb
sti
imul
pop
cmc
popf
push
mov
xor
xor
cli
adc
es
test
test
out
movsb
loopne
push
mov
cmp
add
mov
ret
in
in
push
jl
and
push
adc
fs
dec
js
adc
add
imulb
jmp
jo
mov
cmpsl
iret
rcrb
mov
or
pop
aaa
pop
adc
jle
mov
sbbl
cmpsl
push
inc
mov
xchg
jb
out
mov
mov
and
lds
and
add
pop
xlat
gs
dec
cmpsl
or
insl
inc
nop
adc
jp
sub
mov
enter
scas
test
or
jmp
mov
clc
icebp
mov
test
lods
inc
std
aaa
loopne
cmc
add
xor
jmp
pop
aas
add
adc
and
sub
jp
in
sbb
mov
push
cmc
jbe
and
fbstp
mov
mov
mov
jns
xchg
cmp
xor
lods
add
and
test
mov
and
cmp
fnstsw
or
cmp
dec
adc
cmpb
scas
cmpb
mov
loop
sbb
xchg
loopne
mov
daa
jmp
xor
and
inc
aas
mov
pop
jbe
inc
jle
dec
mov
test
aad
das
push
mov
test
clc
test
xor
movsb
scas
sti
mov
and
push
repz
icebp
data16
mov
adc
notl
jbe
push
popa
jae
out
or
pop
or
inc
inc
clc
fsub
std
leave
flds
scas
loop
mov
data16
jae
stc
fistpl
pop
cli
push
and
pop
movsb
ja
data16
adc
pop
ficoml
sbb
gs
out
jno
jne
imul
mov
lret
fdivrs
or
aaa
ljmp
out
pop
movb
pop
js
clc
cmp
cmpsb
jle
cmp
pop
pushf
inc
mov
sbb
sbb
sub
and
fld
andb
jp
add
jbe
into
pop
stos
insb
pop
cmp
dec
filds
mov
add
clc
jb
jle
sub
into
sbb
adc
js
cmp
stos
inc
aam
inc
lret
test
andb
mov
pop
addl
mov
es
aas
mov
imul
sub
stc
sub
and
es
roll
test
add
jle
scas
lods
test
data16
mov
cmp
or
les
adc
push
add
jnp
mov
jge
fistpll
aaa
maskmovq
mull
cmp
mov
xchg
mov
pop
jnp
jbe
divl
jo
mov
shl
sarl
clc
jo
pop
ljmp
aad
xchg
call
and
data16
xchg
imul
pop
ds
out
sub
cltd
shl
add
inc
hlt
cmp
cmp
add
adcb
cs
lds
push
dec
jg
iret
xor
out
test
add
test
mov
xchg
mov
cli
enter
push
lret
mov
mov
jle
out
push
cli
jg
push
insl
movsl
minps
mov
cmpsb
scas
cmp
xor
and
test
xor
nop
xlat
ret
xor
mov
cmp
adc
lea
add
mov
jnp
out
cmp
or
mov
add
mov
cld
xor
jl
ret
test
xor
and
leave
xchg
enter
mov
aad
icebp
sbb
and
repz
ret
testb
jle
jns
dec
jo
movsl
sub
cli
fistpll
bnd
stc
hlt
out
push
call
mov
dec
and
dec
cmpsl
shll
sti
jno
out
leave
stos
sarl
fmuls
in
sti
sub
mov
mov
inc
clc
mov
jle
or
xor
es
add
mov
push
push
xchg
lds
hlt
and
bnd
lret
outsb
mov
adc
mov
in
mov
aad
cli
mov
xor
mov
adc
mov
push
ret
dec
sub
push
aaa
dec
loop
mov
adc
lret
hlt
lcall
jle
add
sub
sub
lock
leave
dec
inc
inc
lret
mov
orl
push
mov
xchg
cmc
loopne
xchg
mov
cli
jo
in
mov
mov
out
pop
ss
pop
in
inc
jb
add
daa
cmp
idivl
icebp
repnz
cmp
add
cwtl
lret
fmul
out
test
shll
call
sbb
push
shrb
xchg
fstl
int3
sub
mov
or
test
mov
insb
movsb
sbb
sbb
xchg
ret
or
push
xor
clc
mov
fwait
xchg
clc
sti
push
mov
repnz
fidivrl
test
lock
imul
arpl
movsl
push
test
lods
sbb
pusha
test
jge
test
in
dec
adc
push
dec
sbb
xor
sub
div
xchg
xlat
xor
bswap
scas
imul
sub
data16
out
sub
sbb
pop
in
mov
jne
pop
cmp
stos
arpl
xorb
int3
movsb
mov
mov
cmpsb
fbld
sbb
pop
outsl
add
adc
inc
fdivs
cmp
fildl
push
inc
movl
int
mov
lcall
xor
mov
cmp
jl
stos
xchg
pop
movsb
outsb
fisubrs
adc
inc
adc
mov
test
arpl
add
scas
les
jmp
dec
test
xchg
xchg
xchg
mov
mov
xor
xchg
mov
loopne
push
rcrb
push
inc
enter
xchg
xor
push
mov
xor
push
push
mov
push
cmp
mov
mov
inc
nop
incl
aas
add
push
xlat
inc
or
dec
add
or
dec
and
js
mov
mov
mov
enter
lret
mov
jl
pushl
cmc
push
loop
push
shll
aad
lds
shlb
lahf
das
mov
cmpb
jnp
std
sti
notb
scas
mov
pop
dec
xor
sub
popf
mov
call
mov
jl
ljmp
ja
leave
jne
out
xor
xor
mov
mov
jecxz
hlt
outsl
jbe
out
jb
and
dec
nop
pop
js
jle
push
jne
call
sub
cmp
lret
mov
add
jmp
dec
mov
sbb
pop
scas
aad
hlt
add
xor
int3
ss
out
mov
rorl
shlb
xchg
mov
in
in
pop
adc
bound
pop
fdivs
add
jle
pusha
xchg
outsl
xchg
mov
sub
dec
adc
adc
inc
or
add
aas
adc
stos
jecxz
test
or
aas
pop
shrb
cld
stos
in
bnd
jl
cld
stos
lods
stc
imul
and
or
push
ja
bound
jnp
mov
jo
cld
cli
mull
cmpsb
push
popf
mov
jl
into
pushf
cmp
scas
xchg
les
pop
sub
inc
cmc
push
xchg
or
decl
jecxz
test
xor
xor
add
dec
outsb
sbb
notl
cmp
es
dec
outsb
enter
sti
adc
inc
jg
sahf
inc
sub
mov
jp
sbb
in
adcl
dec
mov
inc
push
and
daa
lock
dec
mov
jl
cli
scas
push
scas
xor
addl
mov
and
es
gs
add
cld
nop
lcall
and
mov
clc
add
and
rorb
pop
pop
jp
aas
inc
mov
fucomip
cmpsl
lret
iret
stos
sbbb
push
insl
sbb
icebp
jnp
jbe
push
inc
inc
cmp
pop
lret
cltd
push
rorb
or
or
jle
mov
ja
cmc
xor
jp
call
loope
mov
xchg
ret
pop
call
popa
nop
mov
mov
jno
loope
mov
mov
shrb
dec
fucomip
xchg
adc
mov
mov
movsb
clc
sbb
in
mov
mov
repnz
xor
jl
cmp
mov
push
rorb
dec
movsl
fidivs
hlt
dec
inc
xchg
imull
dec
inc
pop
cmpsb
xchg
clc
jmp
ret
lcall
fwait
dec
jns
push
push
addb
das
cltd
add
sbb
sbb
int3
lret
adc
icebp
mov
jge
pop
call
stos
mov
xchg
leave
rclb
int3
or
test
dec
push
cmp
push
push
aas
fwait
rcll
dec
sub
out
in
push
jge
fld
add
pop
sub
test
out
adc
loope
xor
xor
cmpsl
je
scas
aad
mov
out
and
mov
jno
push
aaa
sti
xchg
push
jo
rclb
cvtdq2ps
mov
ljmp
mov
jns
aaa
dec
or
cli
mov
push
lret
outsl
out
out
rcr
enter
pusha
sub
int
xchg
ss
cmpsb
push
aad
dec
jge
addl
push
push
push
ds
mov
imul
pop
mov
and
sub
enter
outsl
mov
xchg
pop
jno
icebp
jno
mov
and
or
std
mov
mov
jnp
xor
mov
jb
fdivs
loop
jmp
adc
pop
adcl
jp
hlt
jb
or
jne
fcoml
sub
pop
je
ja
fbstp
out
je
jbe
stc
js
stc
push
jae
pop
xor
xchg
mov
push
cmpsb
scas
aad
cmpsl
xlat
ss
repz
out
ja
jmp
test
out
and
or
mov
les
out
add
or
inc
dec
mov
mov
test
xchg
mov
cmp
xor
xchg
cmc
and
jg
mov
xchg
inc
aad
std
mov
mov
call
outsl
jb
daa
scas
push
pop
xor
adc
dec
push
icebp
mov
lds
les
push
cli
addr16
add
mov
inc
cli
aaa
call
xchg
push
xlat
pop
fs
stos
hlt
mov
cld
js
out
loopne
pop
push
jns
out
shlb
out
pop
ljmp
shlb
out
les
mov
push
out
imul
xor
pop
inc
inc
fs
es
cmp
xchg
or
out
inc
das
or
ficoms
jg
push
cmpsb
stos
push
jne
add
and
jl
out
jne
xlat
mov
aaa
sub
sbb
mov
les
rcr
ret
jb
mov
cmc
jns
xor
xchg
xchg
push
adc
in
and
mov
hlt
notb
push
lea
adc
and
add
test
orl
mov
dec
add
pop
out
int
push
mov
ror
hlt
stos
ret
cmp
add
sti
in
and
pop
jge
jmp
add
push
jb
cwtl
mov
and
jecxz
cmc
mov
and
ret
dec
pushf
cmpsb
cmpsb
lret
adc
adc
inc
mov
push
pushf
iret
xor
das
jbe
movsl
pop
into
icebp
cmp
xchg
and
cmp
lcall
pop
mov
aaa
divb
cmp
or
mov
jge
out
cld
and
mov
insb
pop
mov
jno
repnz
fs
cltd
jb
mov
sub
adc
arpl
xor
cld
jnp
in
ss
xor
mov
hlt
pop
mov
mov
dec
sbb
fwait
mov
movsb
cmp
push
repnz
ljmp
or
int3
inc
or
push
mov
in
movsb
stc
push
icebp
cmp
lret
out
fidivrl
pop
aaa
mov
pop
lret
xchg
icebp
add
ret
ret
cltd
aad
ficompl
iret
mov
mov
mov
lock
scas
fistpll
out
lea
es
dec
mov
mov
jmp
push
inc
add
andb
fwait
pop
fsubs
cli
scas
imul
mov
sub
lods
insl
cltd
push
ss
jno
and
push
inc
inc
mov
ficomps
inc
daa
xor
mov
adc
pop
inc
ret
xor
popa
out
repz
jge
lret
push
adcb
jo
lahf
dec
loopne
and
ror
pop
ret
sub
mov
jne
xor
js
movq
call
jno
dec
scas
xor
addr16
bound
push
cld
ret
pop
mov
push
sbb
lods
or
mov
repz
fidivrs
push
test
incb
insl
jae
mov
sbb
call
lds
inc
mov
mov
and
out
lret
jae
sub
enter
adc
xchg
and
sahf
cmc
adc
nop
mov
and
xchg
icebp
add
fistpll
insl
pushl
add
in
inc
repnz
in
mov
xchg
mov
mov
xor
and
loop
push
decb
jbe
scas
scas
je
repnz
lock
adc
mov
cld
lahf
iret
cmp
xlat
jb
daa
ja
fistpl
in
pop
dec
nop
push
stc
pop
js
ds
cli
pop
lods
sti
sahf
or
fwait
cld
adc
mov
popf
lret
ds
shlb
cltd
mov
pusha
mov
mov
aaa
cli
stos
pop
shlb
pop
lcall
pop
jle
addr16
lock
add
mov
mov
cmpsl
pop
push
jl
add
out
jnp
nop
and
xor
mov
jmp
repnz
push
push
hlt
mov
lods
je
jmp
bnd
mov
js
cltd
test
push
cmpsb
mov
cltd
xor
das
scas
scas
jb
ljmp
in
xor
xchg
xor
push
arpl
jle
fs
stos
mov
add
nop
stos
mov
pushl
push
sub
mov
cmpl
scas
scas
adc
xor
and
and
add
dec
pushf
mov
sub
fidivl
divl
iret
ljmp
int
loop
or
xor
lock
divb
jb
jnp
xor
xor
mov
loope
stc
xchg
fildll
xor
ss
or
xchg
ret
cmp
cmp
data16
fcmove
arpl
int
pop
hlt
mov
mov
fidivs
xchg
push
jbe
cmp
mov
dec
mov
push
add
outsl
jbe
stos
out
data16
and
call
and
adc
nop
jmp
daa
push
adc
aaa
aam
inc
inc
cmp
pop
mov
dec
pop
add
sbb
push
aaa
ret
lcall
and
fsubs
aaa
test
mov
mov
out
jg
or
inc
orl
je
bnd
cmp
cltd
jb
mov
sub
dec
adc
fsubl
xor
lret
mov
imul
dec
mov
mulb
dec
je
sbbb
punpckldq
push
stc
cwtl
push
xchg
jb
icebp
xor
test
or
dec
fdivrs
dec
xchg
icebp
add
ret
daa
int3
mov
add
sti
sub
out
pop
ja
cmp
mov
mov
dec
fcomps
insb
ds
push
push
test
lds
mov
or
fdiv
sbb
xchg
inc
repnz
cmpsb
xchg
nop
out
pop
nop
pop
imul
push
xor
sbb
daa
dec
or
leave
dec
fs
sub
fwait
pop
sub
imul
popa
dec
insl
jmp
jbe
pop
or
loope
into
pop
and
push
mov
loopne
subb
lret
adc
push
cmp
out
push
fisubrs
in
mov
fwait
std
cmp
dec
or
imul
xchg
fisubl
shlb
push
sbb
into
pop
or
xor
inc
addr16
aas
push
daa
into
sbb
loop
pop
xchg
aam
inc
sarb
cmp
xchg
pop
push
js
pop
xchg
shlb
subb
sbb
lret
mov
mov
xor
xor
imul
in
mov
pushw
incb
cmp
data16
xchg
icebp
add
dec
sahf
push
call
inc
lahf
jl
push
mov
pop
dec
xorb
shlb
jmp
xchg
sub
add
mov
pop
push
jnp
lcall
cmpsl
mov
les
lahf
ret
fs
shrl
sub
inc
hlt
out
jl
jo
cs
xchg
xchg
cmp
or
mov
addr16
dec
stos
test
jl
jmp
jae
scas
lods
lock
inc
in
std
xchg
xlat
jbe,pn
pop
pop
adc
xor
lods
adc
and
in
sbb
cmp
jne
mov
and
xlat
jb
daa
push
cmp
add
or
inc
ror
sub
cmp
test
stos
je
je
cmc
test
mov
cmp
xchg
cwtl
cli
lret
mov
mov
dec
addr16
scas
scas
lods
jbe
stc
mov
push
inc
xchg
inc
fsubrs
stc
in
enter
mov
addr16
subb
mov
ret
stc
popa
or
ret
and
hlt
sub
push
outsb
xchg
and
cld
daa
scas
test
mov
inc
cli
aaa
call
icebp
add
out
fucomip
hlt
mov
jne
jp
fiadds
jnp
lret
adc
stos
jbe
ljmp
mov
adc
fs
inc
out
loopne
js
int3
lahf
cmp
adc
mov
fisubs
adc
sub
and
mov
fmul
dec
dec
jnp
mov
mov
mov
fsubp
cltd
lods
xor
push
and
lahf
sbb
loop
sbb
out
mov
inc
push
addl
pushf
push
mov
aad
pop
push
out
outsb
imul
push
nop
lds
lcall
out
repnz
or
xor
inc
xchg
lret
pushl
aas
and
call
popf
ret
or
sbb
aaa
je
in
mov
and
jle
mov
cmpsl
leave
inc
xor
insb
mov
sbb
cwtl
lods
loope
pushf
pushf
dec
daa
mov
push
arpl
and
icebp
add
mov
arpl
bnd
ret
arpl
aaa
sub
jg
ljmp
movsl
pop
ds
addr16
mov
sbb
push
pop
fcoms
jns
push
pop
out
mov
shll
mov
jmp
adc
pop
in
lods
in
or
and
adc
or
or
mov
and
in
fadds
xchg
xchg
add
test
cmp
lret
mov
mov
test
in
mov
jnp
and
pop
push
nop
loop
adc
mov
pop
cli
daa
sub
loopne
push
sbb
or
and
or
inc
inc
fwait
pop
or
dec
fcmovnbe
jno
cmc
scas
cmp
mov
sti
fwait
outsb
pop
insb
sbb
adc
and
aaa
mov
dec
mov
adc
lock
icebp
mov
lcall
ret
inc
cmp
test
mov
xchg
call
jecxz
jp
or
sbb
xor
adc
popa
jp
das
je
pop
push
xchg
in
leave
push
imul
dec
or
aas
add
push
ret
fdiv
cwtl
xor
cwtl
idivb
xchg
inc
ljmp
jmp
mov
add
or
mov
jb
jle
mov
out
fdivl
mov
dec
addb
xorps
in
dec
xchg
jl
xor
scas
inc
jno
and
mov
fistl
test
in
jmp
mov
or
cmp
insb
jb
in
stc
inc
or
push
sub
outsb
pop
or
and
jbe
std
sti
imul
adc
fiadds
subb
icebp
sbb
ret
and
add
repz
push
js
lods
out
inc
fdivs
and
push
lock
adc
pop
xor
adc
add
xchg
xor
pop
out
movsb
cmp
mov
je
pop
iret
sbb
add
mov
inc
xchg
cmp
adc
cmpsl
dec
popf
cmp
aad
add
imul
pop
pop
arpl
mull
pushf
mov
pop
mov
push
dec
es
adc
adc
dec
outsb
stos
lods
xchg
add
sub
inc
jne
popf
adc
xor
or
jb
in
jmp
xor
pushf
orb
test
push
and
in
icebp
add
fistpll
insl
std
mov
int
jne
xor
fistpll
add
je
cmpsl
je
sbb
ljmp
lds
stc
pop
imul
add
je
or
sarl
clc
js
sub
mov
adc
push
cmpsl
sti
mull
bound
repnz
into
pushf
mov
sbb
ret
notl
icebp
mov
xchg
add
push
adc
xor
xchg
or
jbe
xchg
jge
adc
fmull
xchg
pushf
mov
adc
pop
je
push
jl
adc
xor
in
pop
in
adc
sbb
xor
mov
sub
cwtl
xchg
mov
xchg
or
mov
cld
mov
sbb
outsb
nop
out
mov
cs
inc
jmp
fadd
stos
lahf
mov
add
fbld
in
xchg
push
sub
jle
pushf
pop
pop
iret
gs
push
enter
nop
push
lret
je
push
pop
movsl
ret
mov
push
ljmp
xchg
xor
cli
xorps
ficomps
mov
ja
mov
in
fdivl
add
stc
jmp
xchg
clc
lock
sbb
cld
idivl
js
mov
ja
add
xchg
es
dec
je
aad
dec
ret
aad
adc
arpl
push
ficoms
pop
jnp
divb
mov
aad
ss
orl
mov
xchg
sbb
imul
xchg
out
lds
adc
xchg
movsb
inc
gs
dec
in
mov
movsb
dec
shl
mov
inc
push
into
push
mov
add
sub
ret
aam
data16
mov
test
dec
xor
add
mov
or
add
inc
or
repnz
stc
mov
clc
pop
cmpb
inc
stos
xlat
leave
ljmp
xchg
imul
es
stos
mov
aad
ljmp
fcmovu
ljmp
xor
jo
push
shlb
cltd
incb
push
fcmovnu
pop
daa
sbb
pop
std
mov
mov
adc
adc
add
xchg
pop
lods
sbb
xor
pop
bound
js
mov
xchg
jle
mov
inc
push
insb
dec
and
sub
stos
out
lods
mov
dec
ror
int
loop
push
shrl
xchg
cmpsb
cmp
addr16
enter
std
mov
add
sahf
stos
outsl
out
inc
rcl
jbe
xor
add
xor
cwtl
cmc
imul
xchg
sub
mov
imul
mov
imull
sahf
push
pop
enter
xchg
pop
ljmp
lock
enter
icebp
mov
dec
loop
sbb
mov
je
addr16
outsl
add
mov
data16
out
mov
lret
insl
or
pop
rcrb
aad
bound
js
ljmp
or
xchg
out
ss
jnp
pop
sbb
cmp
les
iret
addb
mov
jo
std
push
mov
mov
pusha
bound
and
popf
mov
pop
idiv
jl
repnz
jo
std
push
rclb
scas
fisubs
jl
pop
push
mov
les
call
cld
add
xchg
and
xchg
xor
decb
mov
xor
sbb
hlt
adc
jo
in
loopne
les
or
and
cmpsl
dec
lret
iret
aaa
inc
xorb
pop
or
push
xchg
xchg
negl
sub
scas
mov
lret
sti
push
stc
outsl
je
add
mov
js
shl
dec
std
je,pt
mov
dec
push
pop
jnp
push
icebp
outsl
jbe
add
mov
jb
std
and
orl
call
movsb
mov
les
out
iret
jnp
iret
pop
decb
add
in
imul
pop
push
inc
addr16
push
cli
ja
test
in
mov
ss
cmp
pop
mov
je
xchg
pop
sub
mov
xor
repnz
push
test
add
lods
mov
xchg
xor
ret
imul
lods
shrl
pusha
dec
gs
mov
jo
jp
repnz
mov
pop
fdivs
pusha
stos
xchg
ds
mov
rolb
push
repz
pop
add
or
sbb
jb
mov
xchg
fists
jge
mov
sub
xchg
std
xchg
dec
mov
daa
test
out
mov
xor
mov
outsb
sub
fstp
sbbl
gs
mov
push
stc
mov
add
push
mov
addb
out
loop
fldln2
mov
pop
cli
int3
bnd
lds
enter
mov
mov
testb
xor
adc
jae
cwtl
mov
mov
and
mov
mov
idivl
adc
mov
insb
ret
sub
lea
adc
cmpsb
xor
dec
cs
popa
shll
lcall
insl
sub
xchg
xor
daa
call
xchg
push
mov
adc
xchg
mov
andb
int
push
inc
les
sub
ss
mov
push
xor
sti
mov
mov
adc
imul
inc
addb
dec
cmp
pushf
or
sbb
jbe
lret
inc
test
dec
je
rorl
sbb
adc
pusha
sub
cmp
mull
inc
xchg
dec
mov
ret
in
in
out
fwait
pop
loopne
rorl
push
loope
enter
push
dec
push
and
into
nop
ja
sbb
mov
sbb
ret
pop
and
aas
add
out
inc
repnz
cltd
mov
fimull
fstpt
addl
push
aam
inc
adc
ret
mov
mov
mov
sbb
imul
jo
jle
lahf
js
inc
push
icebp
pop
lcall
arpl
jbe
scas
xor
addr16
cs
jbe
into
pop
mov
js
adc
xor
or
iret
cmc
in
lods
push
aaa
dec
fcos
and
jo
aas
hlt
cltd
jecxz
aam
push
cmp
inc
mov
shlb
je
pop
in
adc
pop
mov
push
adc
or
idivb
mov
mov
jae
dec
sbb
adc
notb
arpl
add
jle
dec
jo
pop
adc
repnz
dec
mov
push
lds
insb
pop
inc
xchg
stos
std
ljmp
mov
xchg
mov
mov
push
cmp
loop
mov
push
sti
testb
adc
je
pop
stos
lret
pop
dec
jns
fsubrs
cmp
adc
hlt
in
fcmovnu
fs
mov
adc
shll
xchg
mov
js
jge
lock
or
mov
adc
mov
jnp
pop
lret
clc
in
std
js
jmp
or
mov
imul
mov
cmp
sub
cmp
ljmp
xchg
jns
cmc
in
pop
adc
cmpsb
cmp
out
pop
jnp
jp
mov
cmp
out
imul
push
add
out
divl
das
mov
adc
pop
pop
sarb
jl
repz
mov
sub
mov
add
cltd
pushf
cmp
insb
mov
adc
pop
mov
cmp
jnp
mov
sub
test
sub
sbb
mov
adc
shll
sbb
cld
cmp
jp
mov
cmp
outsb
xor
adc
mov
outsl
pop
adc
cmp
sub
cmp
sar
stc
hlt
push
orb
aam
cltd
aam
pop
adc
add
enter
mov
pop
jge
repz
lret
cli
stc
pushl
leave
pop
mov
mov
int3
pusha
pop
adc
jae
pop
mov
cmp
repz
in
jns
aas
sti
out
lods
sahf
pop
and
pop
adc
jge
adc
xlat
xor
sti
jb
lcall
cmpsl
xchg
jp
xchg
sbb
mov
ja
adc
addr16
mov
sbb
in
fcmovnbe
int
mov
add
scas
clc
mov
adc
sbb
or
sbb
lea
shll
xor
call
inc
sti
mov
fdivr
repnz
jns
dec
jge
js
test
fildll
add
mov
push
ja
lods
sub
xor
enter
pop
aad
fnstenv
cmp
mov
aad
fidivrl
pop
mov
jno
pop
mov
adc
jne
and
xor
lahf
push
lea
repnz
fidivrs
adc
sbb
jns
mov
lock
scas
adc
jo
imul
add
andb
sbb
dec
aas
inc
xchg
out
add
in
cmc
lods
sti
scas
add
out
lcall
testl
dec
outsb
repz
aam
test
adc
ljmp
sbb
mov
push
insb
mov
div
lea
adc
jecxz
lret
sar
and
test
insb
add
jmp
out
or
or
push
out
std
enter
idiv
fmul
adc
sti
ror
sbb
and
fst
mov
lods
gs
rcll
mov
into
div
fcos
or
lea
addb
out
mov
and
test
inc
dec
push
jp
mov
stc
add
lret
cmpsl
mov
call
das
js
sub
call
xor
cli
mov
incl
adc
xchg
mov
mov
cmp
daa
icebp
cld
pushf
loop
xchg
mov
out
les
and
sub
sub
gs
pop
dec
jae
ss
pop
pushf
xor
xor
jbe
lret
adc
jbe
sub
aas
xchg
and
bsf
inc
mov
mov
push
stc
sbb
push
outsb
sbb
cltd
nop
iret
leave
insl
sarb
inc
cmp
pop
cmpsb
jo
sbb
inc
mov
cld
push
push
cmp
sahf
push
adc
pop
loop
mov
idiv
inc
iret
xchg
mov
cmp
dec
pop
adc
and
pop
adc
adc
jnp
fistpll
dec
jl
sbb
jns
ja
push
clc
arpl
jl
cmc
sti
movsl
cmpsb
jae
fwait
je
xor
into
popf
push
push
out
jns
popf
cmp
test
jmp
pushl
jle
mov
mov
repz
or
inc
jl
xor
mov
data16
add
je
divb
jnp
call
sub
xor
scas
adc
mov
dec
xor
repnz
pop
dec
pop
add
cwtl
aas
add
testl
loop
jbe
cli
mov
jl
adc
mov
jnp
add
sub
xor
mov
shr
pushf
adc
pop
mov
sub
xor
iret
jb
sub
pop
imul
ficoml
jg
mov
push
pushf
adc
aad
test
mov
or
inc
cmp
push
pushf
mov
insl
adc
adc
jg
movsb
je
or
fidivl
lods
push
mov
cmp
adc
or
and
repnz
mov
pop
push
fcomip
in
jo,pt
pop
adc
sbb
jge
mov
sub
jo
add
pop
loopne
mov
sbb
jg
stc
mov
sti
push
cld
addr16
jl,pt
xor
mov
mov
sti
shl
lcall
call
sub
adc
xor
mov
scas
ss
pop
jg
lods
inc
and
xor
mov
fs
push
nop
mov
adc
pusha
mov
push
adc
ds
push
mov
call
adc
aaa
stos
pop
inc
inc
xor
movsb
lock
mov
or
adcl
inc
xchg
push
mov
pop
push
adc
mov
mov
adc
ret
add
push
loope
scas
fisttpl
pushf
movsb
loope
insb
add
clc
adc
mov
dec
in
jmp
or
cltd
pop
jb
sub
lahf
pop
daa
xor
nop
and
pushf
cmp
fisubrs
fwait
call
lods
add
mov
mov
cmp
or
cld
lea
mov
lods
or
xor
leave
sub
and
inc
lret
aas
cmp
es
jne
inc
xlat
repz
push
mov
dec
sarb
movb
xor
jnp
mov
sti
fisubrs
pop
out
or
sti
inc
js
bound
add
in
out
mov
pop
rolb
int
icebp
push
rorb
sub
or
cltd
loop
push
pop
push
mov
sbb
shr
adc
popa
std
int
lods
stc
std
stos
and
mov
mov
sbb
xor
jge
and
out
insb
sbb
mov
cmp
push
iret
mov
sti
and
call
pop
lock
shlb
push
mov
and
aas
cmpsl
xchg
fistl
cmpl
inc
rcrb
fwait
push
fnstenv
add
adc
in
inc
andl
xlat
sbb
inc
lock
cs
pushf
pop
pop
xchg
sub
lahf
xlat
sbb
repz
fdivl
jp
decb
or
dec
pop
sti
aad
cli
inc
clc
or
and
push
push
out
sub
xchg
inc
std
pushf
sar
cmp
adc
mov
inc
andl
or
jg
je
lods
lods
jne
out
sahf
push
jo
xchg
sbb
shll
push
sub
inc
push
cmc
lahf
out
inc
andb
jo
mov
aaa
mov
inc
clc
pushf
rcrb
adc
adc
add
mov
aas
xchg
iret
insb
aas
push
idiv
mov
dec
dec
rol
mov
stos
mov
xor
pop
adc
add
cmp
jmp
xchg
ficoml
inc
push
std
sub
dec
push
loop
pop
and
add
or
in
mov
jge
mov
mov
gs
popf
push
pop
jmp
sbb
add
ljmp
icebp
lcall
cmp
sub
cwtl
sti
mov
cmp
in
arpl
add
iret
popf
mov
adc
jmp
mov
xchg
xor
push
adc
and
push
sbb
push
pop
mov
pop
loop
int
cmp
aas
sahf
add
xchg
lock
ja
test
adc
push
adc
cmp
shrl
add
inc
hlt
hlt
jg
loop
mov
jge
rcrl
pushl
lahf
rcrl
dec
inc
push
jle
aam
xor
testl
ret
insl
push
lret
stos
aas
pop
jp
rorl
push
ljmp
je
adc
jge
sarl
and
xchg
stc
dec
loopne
jbe
aad
lcall
xchg
stc
jbe
jo
jns
out
jmp
xor
pop
push
in
fmul
out
jae
fbstp
lods
adc
jo
jle
adc
xchg
mov
loope
cmc
mov
inc
sbb
jb
insb
fdivrl
jg
mov
lcall
fsubs
daa
sbb
sbb
pop
pusha
jo
cmp
test
data16
jmp
xchg
sub
into
dec
mov
mov
pop
int
sahf
sbb
push
push
xlat
push
xchg
mov
incl
push
sti
dec
mov
jmp
scas
ja
ds
jg
lock
pop
xor
cmp
mov
and
cmp
imul
mov
test
push
mulb
ret
arpl
xchg
mov
xor
cmp
mov
loopne
shll
jnp
cli
je
aad
jbe
mov
sbb
mov
call
js
dec
sti
mov
jp
cld
imul
xchg
aad
sub
int3
push
jnp
fcoms
std
loope
rolb
and
dec
jecxz
adc
or
add
lods
repz
sti
pop
ret
mov
jge
aad
shl
fildl
add
nop
inc
test
pop
push
je
jnp
nop
stos
inc
cmp
jnp
aas
addb
ds
xlat
jns
int
push
aad
jle
roll
testb
push
sbb
pop
jb
pop
mov
andl
aas
mov
les
xchg
lahf
pop
add
in
inc
fs
cli
mov
cmpsb
mov
and
sbb
test
scas
push
dec
shlb
idivl
push
jp
dec
enter
repnz
or
enter
rol
sti
jne
out
lret
in
fwait
or
or
jno
inc
push
sbb
push
xor
rcl
imul
mov
cwtl
lret
fsubrl
filds
dec
add
sub
scas
das
das
das
add
lahf
push
push
mov
sti
daa
in
push
fcoms
add
lock
hlt
dec
out
cmp
dec
mov
add
xor
adc
mov
add
xchg
xchg
adc
or
xchg
je
mov
cli
cmp
xchg
pop
mov
xor
cmpsl
hlt
sbb
mov
repz
mov
jmp
loopne
fists
jle
ret
loop
sub
add
mov
add
mov
movsb
xchg
or
inc
xchg
mov
loope
out
pushf
shlb
lcall
mov
sbb
js
ljmp
xchg
push
int3
add
and
ja
xor
sbb
add
adc
xchg
es
jae
jmp
cld
adc
cmp
shr
lea
cli
lods
repnz
push
jle
stc
pop
jmp
pop
out
push
addb
cmp
sub
pop
jno
inc
xchg
fs
xchg
xchg
les
jecxz
lret
in
add
movsb
mov
xor
ljmp
mov
mov
bound
jl
test
mov
les
sbb
push
jg
ret
push
bound
lcallw
adc
add
jecxz
dec
and
nop
push
stc
imul
add
pop
loop
lret
shl
adc
inc
cld
cmp
lods
add
xlat
loope
stos
mov
call
mov
mov
adc
xor
out
jl
fiadds
and
scas
or
mov
pop
sti
pop
lret
ja
jl
push
jne
in
sub
das
mov
mov
mov
lahf
enter
push
ja
fwait
adc
ss
cmp
pusha
lcall
sbb
adc
rcr
pop
sub
jmp
mov
jb
out
sbb
sub
in
xchg
and
ret
in
lea
popf
fisttpl
sub
xor
test
mov
sub
fisubrs
xchg
ret
mov
jb
push
mov
cwtl
add
fs
fwait
adcl
ret
push
adc
in
aas
aas
iret
test
mov
das
ret
lods
enter
xlat
shll
jge
jmp
divb
ja
in
xorb
jne
sbb
cmp
test
xor
je
imulb
or
jmp
sbb
or
pop
mov
adc
xor
dec
jmp
mov
pop
push
pop
sbb
push
xchg
xlat
inc
or
sbb
loope
adc
std
mov
loop
push
and
das
cmp
xchg
jmp
nop
call
outsl
xchg
jecxz
sbb
xchg
or
inc
test
cmp
movsb
icebp
xchg
sub
das
or
mov
sub
xchg
cmpordps
inc
cmpsb
shll
mov
jmp
lret
push
ja
mov
push
pop
icebp
pop
push
iret
stc
pop
push
punpckhbw
dec
sbb
mov
or
jge
jl
jnp
inc
fmull
and
cltd
jmp
push
or
leave
shll
cmpsl
test
jg
dec
scas
xchg
push
imul
jl
in
cltd
pusha
xor
out
addr16
sbb
aad
test
xchg
aaa
mov
jne
loop
jne
aas
inc
movb
cmp
dec
xchg
divl
les
dec
xor
and
jecxz
xchg
mov
adc
int3
rcr
sbb
mov
cld
mov
sbb
ljmp
mov
inc
sbb
lahf
js
dec
fldt
add
fwait
jne
imul
cltd
cld
mov
push
in
imul
mov
pop
shlb
lods
les
push
testl
adc
clc
stos
jmp
sahf
cld
cmp
lock
ss
push
adc
mov
inc
sub
mov
mov
cs
hlt
fidivrl
xchg
out
out
xlat
jbe
xor
je,pn
and
in
mov
mov
cmc
gs
xor
cmp
pop
shlb
cli
je
stc
adc
pusha
pushf
mov
push
xor
or
ss
sub
jle
jbe
sub
jb
add
repnz
fstl
sbb
into
push
jne
sahf
or
push
cmp
add
add
jnp
add
xchg
jne
push
data16
mov
lret
pushf
dec
popf
cld
mov
jl
out
jge
fistps
std
jge
sahf
xchg
mov
add
aas
pushf
in
push
jnp
mov
stos
push
aam
dec
nop
mov
adc
mov
pop
loop
bound
mov
add
jle
loop
movsl
cmpsl
pusha
pop
lock
inc
call
clc
cmp
shrl
clc
je
je
push
push
fdivrs
sbb
xor
mov
shl
pushf
and
mov
std
imul
inc
mov
mov
jnp
orl
xor
sub
cli
mov
mov
stos
cmpsl
hlt
mov
add
adc
jge
fwait
in
pushf
cmp
sub
cli
mov
add
jae
xor
jo
es
jecxz
popa
nop
and
arpl
adc
pop
jmp
fidivrs
jmp
add
mov
sahf
cmp
loop
jne
xor
data16
jp
cmp
jmp
ja
orb
or
mov
mov
xor
daa
jb
or
pop
ja
cmp
cmp
aas
maskmovq
mull
or
mov
out
mov
mov
out
jmp
lods
loop
enter
cld
in
imul
aad
orl
sbb
mov
imul
push
and
inc
mov
mov
sbb
pop
mov
repz
popl
pusha
rcrb
and
test
sub
or
fiaddl
cmp
stos
jo
out
push
insl
push
jns
jnp
notl
pop
incl
jo
imul
call
pusha
into
addr16
adc
lods
push
js
mov
test
dec
add
mov
xchg
push
sbb
aam
lods
daa
inc
sti
aas
in
xor
shrl
pushf
les
add
inc
push
push
ds
ret
sti
lahf
les
push
jp
pop
cld
test
pusha
mov
imul
or
cmp
cli
in
xchg
cmp
pop
dec
fwait
add
inc
imul
aam
ret
mov
inc
mov
imul
aam
jns
imul
jne
sub
out
xchg
or
imul
rolb
inc
fucomip
mov
ss
add
or
int
adcb
lea
or
pop
or
movsl
call
loop
mov
and
scas
insl
push
stc
test
imul
xchg
cmp
dec
mov
call
loope
add
mov
rolb
call
aaa
stc
or
cwtl
in
leave
jmp
push
nop
das
ret
xchg
xchg
xchg
push
inc
mov
inc
lret
add
pop
lea
mov
js
out
pop
push
push
rcrb
mov
lahf
out
test
mov
push
cs
popa
mov
outsb
cld
pop
in
scas
push
inc
pop
sub
adc
pushf
incl
lods
pop
lret
jb
mov
clc
or
sbb
aaa
pop
loope
jle
loope
bound
ja
mov
shl
jp
jnp
icebp
and
lret
and
sbb
jo
in
or
xor
orb
pusha
hlt
xor
mov
pop
pop
pushf
mov
les
adc
clc
and
mov
fucomi
je
fucompp
add
jmp
cltd
mov
movsb
pushf
mov
bound
dec
icebp
mov
hlt
mov
mov
loop
xor
sub
jl
cmpsb
mov
pushf
fcmovnbe
jle
mov
pop
pop
sbb
data16
mov
rep
lea
pushf
jle
mov
ljmp
mov
imul
fneni(8087
cmp
ficoms
jp
bound
sbb
movsl
je
lds
cli
jg
leave
imul
jmp
jnp
shlb
idivl
loop
stos
xor
flds
adc
pusha
cmpsb
mov
in
mov
adc
les
int
xlat
lret
cli
jno
lahf
rcrl
dec
jmp
push
jbe
stos
mov
xor
mov
mov
xor
insb
add
sub
inc
push
jle
data16
loopne
movsb
ss
jge
push
shrb
xchg
mov
pop
mov
jmp
jbe
jne
mov
jne
cmp
mov
cmp
ds
sbb
insl
decl
jbe
cld
cld
jl
or
push
inc
xor
lret
xchg
js
and
into
mov
sub
add
push
jae
mov
add
push
and
es
xor
in
xlat
mov
jmp
into
xchg
adc
div
lods
cltd
decb
mov
aaa
push
dec
repz
inc
xchg
mov
repz
bnd
mov
mov
or
sub
cs
cltd
mov
add
aad
jp
dec
pop
add
scas
cltd
push
sbb
adc
sub
js
pop
jae
mov
in
test
xor
push
iret
lcall
repz
fwait
imulb
stos
movsb
cltd
jae
ret
xchg
sub
into
call
cmp
test
adc
int3
incl
cmp
jl
jno
xchg
push
and
push
jno
add
fnstcw
and
add
cmp
repz
movsb
sahf
lds
xchg
ja
xchg
jp
cmp
and
and
xor
movsl
xor
es
or
repnz
ljmp
or
movsb
fldl
cld
shll
dec
repz
push
jecxz
test
push
mov
sub
fdivrl
mov
dec
xor
adc
and
lret
dec
lock
xor
adc
mov
fs
push
hlt
repnz
pop
std
mov
cmp
add
sbb
lret
orb
push
dec
push
add
les
addb
repz
add
in
push
sub
push
and
mov
dec
sti
in
cmp
outsb
testb
mov
and
sbb
scas
or
fnstcw
int3
mov
ja
movsb
call
sbb
jne
cmp
out
sub
out
fs
loope
push
stos
nop
cmpsl
pop
repz
cs
lods
js
in
repnz
cli
jne
xchg
sub
sub
inc
jmp
or
sbb
hlt
lds
cmp
adc
jae
aas
mov
cltd
dec
test
mov
inc
fwait
popf
das
jbe
add
cmpsl
add
imull
fnstsw
scas
les
cld
in
jmp
lock
sub
lea
or
xor
loopne
lods
sbbb
icebp
out
cmp
add
add
lods
push
frstpm(287
mov
and
jno
insb
mov
mov
mov
push
je
out
cmp
imul
in
cmp
pop
dec
call
push
int3
mov
cld
sti
imulb
mov
roll
ljmp
in
push
sub
in
pushf
cmp
daa
mov
repz
adc
lea
xchg
jns
fs
dec
jnp
cmpsb
stos
lds
repnz
and
test
jge
std
and
ret
jae
movsb
xchg
adc
shll
loopne
lret
xor
xchg
fidivl
xchg
xor
jmp
sub
pop
jne
adc
and
jl
in
mov
adc
call
sbb
mov
dec
insb
adc
mov
add
dec
sbb
push
cwtl
add
jne
shll
xchg
adc
mov
push
pop
mov
adc
inc
outsl
fidivrs
mov
stc
fcoml
push
adc
cld
pop
jecxz
lock
dec
and
inc
nop
cmp
into
popf
mov
mov
xor
and
repz
add
dec
cld
cli
je
clc
ret
jl
enter
xor
sub
jne
jbe
fidivrs
add
notl
sbb
sahf
shrl
ja
aaa
adc
push
jb
add
mov
bound
pop
rcrb
or
repz
lock
loop
inc
test
cmpsl
enter
mov
cmp
loop
mov
mov
mov
stc
fcmovnu
pop
push
dec
imul
mov
icebp
sbb
sub
sahf
out
jbe
notl
jae
xor
xchg
cmpsl
sub
mov
test
ss
mov
int
into
lret
dec
push
add
fmull
lods
xchg
sbb
xchg
xchg
movsb
rolb
fbstp
fdivrs
mov
dec
cmpsb
out
test
ret
jg
cmp
inc
aam
push
jl
mov
inc
popf
enter
mov
repz
pop
mov
cld
jl
jo
pop
adc
ret
xchg
es
clc
test
sub
mov
sti
add
jno
aad
or
push
fwait
lahf
cs
jns
ds
lret
xlat
imul
lret
cmp
gs
call
ds
cwtl
mov
pop
or
cmp
sub
and
mov
cmpsb
cmp
cmp
lcall
es
mov
addr16
vpshad
xor
or
cmp
sbb
push
fistl
jnp
add
xchg
inc
mov
sbb
mov
testl
repnz
call
dec
xor
fisttpll
push
xor
outsl
or
popf
push
movsl
jge
and
daa
xchg
pop
sbb
std
xor
adc
push
push
in
sbb
je
mov
pusha
dec
fnstenv
pop
testb
sub
pop
enter
aaa
inc
push
sahf
repz
divl
xor
mov
aas
mov
jo
movsb
push
or
push
jp
and
sbb
mov
imul
mov
mov
fwait
inc
cwtl
jo
adc
je
inc
icebp
out
das
pop
loope
and
mov
add
pause
and
and
and
mov
xor
pop
leave
push
mov
pop
xlat
pusha
push
mov
pop
aam
push
xor
dec
es
out
popa
scas
mov
pop
fidivs
mov
fdiv
jp
ja
lea
xor
sbb
xor
pop
mov
inc
mov
sbbl
dec
addl
mov
fnstenv
inc
paddb
mov
mov
les
adc
add
pop
out
add
jb
jns
sbb
subl
sbb
jno
adc
add
add
dec
nop
and
jbe
xor
add
push
fiaddl
dec
jne
mov
mov
add
hlt
bound
mov
out
ficoms
lds
add
mov
and
pop
cmp
add
add
imul
fistpl
jl
lret
call
pop
mov
dec
jg
inc
fwait
addb
mov
ja
rorl
adc
dec
pop
shll
shlb
cmp
inc
xorb
add
add
nop
and
jbe
xor
and
sbb
mov
inc
fwait
addb
mov
les
arpl
es
mov
pop
ljmp
aas
das
pop
stos
cmp
add
cli
test
sbb
push
jg
rclb
shrl
arpl
iret
xchg
dec
mov
xchg
aad
cli
jge
xor
mov
stc
lods
dec
mull
mov
jle
mov
push
in
push
or
ss
mov
sahf
xor
or
cmpsb
dec
pop
mov
std
xchg
icebp
jbe
testl
cwtl
les
xchg
sbb
pop
add
add
leave
push
lods
jg
or
mov
mul
and
mov
clc
ss
fistpll
jl
jmp
mov
mov
xchg
push
dec
push
lods
xchg
pop
push
mov
daa
pop
mov
push
into
add
addb
sbb
and
aas
out
lret
mov
pop
or
lret
adc
and
dec
sbb
addl
lret
inc
in
mov
and
inc
mov
fadd
out
ffreep
jge
rcll
insl
sbb
inc
stos
mov
ror
aaa
loope
addl
insb
pop
shlb
inc
or
pushf
or
addl
ret
xchg
loopne
pop
or
ss
mov
ret
dec
adc
adc
sbb
sub
pop
scas
mov
pop
dec
pop
loope
sbb
clc
test
mov
aas
daa
movsl
pop
loopne
cmp
enter
add
fistl
imul
or
insb
movsb
push
xchg
dec
or
jle
jbe
mov
out
sbb
fstl
jno
xchg
in
inc
fidivrs
xchg
lods
arpl
cld
xchg
ss
dec
jnp
sub
xchg
or
mov
popa
es
cmpsb
mov
mov
lcall
cmp
mov
test
xor
ljmp
sahf
push
pop
mulb
rcrl
jno
pop
mov
sub
movsb
insb
ror
push
pop
mov
sub
adc
push
xchg
mov
cld
data16
mov
lret
nop
cld
mov
and
or
out
sub
out
mov
push
sub
insb
popa
jp
push
test
add
or
and
push
pop
push
or
out
adc
stos
mov
cmp
cmpsb
sbb
mov
hlt
push
add
push
mov
push
rcl
lods
loop
mov
xchg
jmp
jecxz
es
in
inc
xchg
xlat
cmp
pop
out
rcrb
and
loopne
jmp
in
push
add
dec
pop
sti
aad
test
test
add
inc
mov
cmp
sbb
stos
push
dec
loope
cli
data16
or
inc
or
push
addb
push
fnstenv
shll
sbb
bound
rorb
mov
jb
inc
addb
stc
jbe
aad
or
push
xor
inc
xchg
inc
push
sub
sarl
lods
inc
mov
mov
sahf
mov
adc
pop
mov
sbb
fwait
pop
mov
shll
and
jb
add
add
or
mov
outsb
ss
aam
sbb
shlb
loope
cmp
les
idiv
mov
pusha
rorl
adc
dec
push
cmp
sbb
int
mov
bound
hlt
mov
add
loop
fs
and
jbe
xor
sub
push
adc
mov
out
fistpll
movsb
push
cmc
iret
imul
adc
fsubrp
repnz
mov
into
insb
lcall
pop
loope
adc
addr16
pop
cmpsb
into
add
add
in
leave
ja
jae
xor
bound
cmp
cli
addr16
lret
je
icebp
jb
std
push
repnz
mov
mov
int3
jmp
notl
xor
xor
pop
push
iret
add
add
sbb
xchg
sbb
jmp
int
emms
adc
pop
adc
add
mov
jg
lret
mov
adc
add
shll
mov
pop
push
jnp
stc
sahf
out
jecxz
movsb
gs
adc
mov
shlb
sub
add
pushf
ret
mov
mov
xor
mov
and
pop
sub
jno
ss
push
decb
jg
movhps
dec
mov
mull
popa
das
push
mov
jl
cmpsb
jmp
adc
fimuls
cmp
imul
in
shll
les
addr16
push
leave
repz
lods
mov
out
int3
repz
mov
daa
iret
js
or
cld
scas
add
nop
xor
icebp
ss
pop
mov
inc
lret
mov
xor
lret
adc
pop
push
jo
add
xor
xor
xchg
shll
xchg
push
mov
jno
add
fnstcw
xchg
cmp
add
inc
xchg
sbb
out
add
aad
jecxz
fwait
xlat
jo
pop
adc
xlat
cmp
imul
ja
xor
jo
jecxz
mov
shrb
and
mov
jle
outsl
sub
rorl
sbb
lret
rorb
iret
add
mov
sub
pop
sarb
rcll
enter
xor
mov
aam
outsb
push
or
or
or
or
dec
mov
add
sarb
bound
and
cld
int3
loop
aam
ret
pop
jno
pop
pop
movd
pop
pusha
adc
cmp
push
xchg
adc
cltd
push
push
add
bound
adc
and
xchg
les
pop
adc
ret
and
mov
xchg
outsl
rcrw
jns
orl
adcb
rcrb
or
jg
jmp
stc
mov
pop
or
pop
and
inc
imul
jnp
aas
sbb
inc
sub
imul
add
enter
hlt
push
pop
cli
sarb
add
shl
and
dec
test
movsb
fldl
adc
push
inc
outsb
mov
and
fwait
adc
cmp
push
lea
addr16
mov
sbb
sahf
cld
cmp
jo
pop
adc
sbb
pop
leave
jb
mov
subb
fiaddl
mov
ljmp
bound
adc
push
addl
scas
sub
jno
xchg
inc
fcoms
sbb
cld
inc
and
in
mov
pop
jg
fidivrs
cmp
sbb
cmp
push
sub
pushl
push
mov
pop
cmpsl
outsb
fidivrs
cmp
rcrb
mov
adc
inc
orb
test
outsb
fidivrs
sbb
push
sub
or
test
cmpsl
mov
mov
push
ljmp
mov
adc
adc
or
sub
aad
mov
push
adc
push
cmpsl
lret
push
js
xchg
imul
jbe
pop
aas
jle
add
mov
movsb
and
cltd
out
sarb
cmpsb
sbb
jecxz
jb
lahf
xchg
shll
add
xor
imul
mov
les
scas
add
add
add
jge
mov
pop
js
jle
add
mov
imul
cli
stos
pop
out
repnz
cmp
es
cmp
mov
fadd
jbe
cli
push
mov
mov
jae
aad
je
pop
dec
add
add
push
sub
cwtl
in
inc
fincstp
and
popf
cmp
mov
jge
lock
cmp
mov
mov
mov
lds
shll
add
jg
lods
and
or
add
insb
mov
push
mul
cmp
sti
pop
add
pop
icebp
outsl
mov
pushl
icebp
lods
imul
iret
subb
mov
or
in
adc
stos
and
lea
stos
mov
mov
add
int3
sti
push
mov
data16
pop
adc
cwtl
sub
out
enter
push
inc
int
xor
test
cmc
mov
or
push
mov
jb
sbb
and
jmp
lods
outsb
xor
addb
iretw
mov
and
divb
xchg
mov
idivl
cwtl
fnstcw
sub
lods
adc
jo
insl
test
std
lods
add
cmp
mov
push
pop
pushf
fildl
inc
rcrl
in
and
dec
sbbb
or
bound
lea
jbe
cs
sub
cld
cmp
shrb
or
aas
dec
std
jmp
mov
data16
inc
xchg
pop
lcall
pop
jecxz
jae
push
rcrl
ret
test
lea
sub
ljmp
mov
ds
les
or
sarl
and
jne
xlat
mov
outsl
or
cmc
pop
and
scas
inc
push
in
test
mov
divb
cli
push
dec
pop
sbb
std
dec
adc
outsl
push
adc
push
mov
shlb
jns
enter
insl
cmp
dec
and
mov
or
add
cmp
pop
mov
cmp
les
push
add
roll
shr
mov
sti
leave
movsb
push
sbb
mov
sbb
sbb
andb
mov
lods
jecxz
xor
loopne
scas
sbb
push
add
fcmovb
hlt
loop
icebp
xchg
push
dec
cmp
mov
popa
mov
dec
ret
in
outsb
scas
lods
jmp
rcrb
in
or
rolb
xor
xchg
mov
lods
mov
clc
mov
cmp
fdivl
out
shll
popa
add
negb
xor
push
inc
sub
adc
xlat
test
inc
xor
jecxz
cmpsb
stos
lret
adc
je
xlat
push
dec
push
mov
dec
push
push
pop
aas
jl
jae
mov
xchg
and
nop
ss
prefetchnta
inc
mov
sub
ret
shlb
xchg
xchg
aaa
add
lods
xchg
cli
jnp
mov
cmp
in
mov
mov
pop
loop
int
arpl
movl
roll
adc
out
sbb
mov
mov
jle
out
push
xor
add
add
xchg
inc
pop
or
push
bound
mov
les
fs
sti
test
ja
jo
jmp
fidivl
fdivl
pop
mov
push
and
pop
movsl
repnz
dec
sbb
out
lods
and
lret
mov
int
sub
lret
aam
mov
sti
jne
jb
xchg
mov
fdivs
jne
iret
push
sub
cmpsb
clc
push
jbe
and
ja
je
fucomi
mov
jne
fiadds
hlt
add
call
push
sub
add
sub
in
or
push
sbb
pushl
push
lods
test
mov
inc
xchg
and
sbb
or
lahf
in
inc
xorb
and
mov
and
mov
popf
add
arpl
cmp
mov
stc
hlt
out
fnstcw
mov
leave
mov
pusha
xchg
mov
in
scas
inc
mov
aaa
pop
push
pushf
mov
mov
hlt
shll
out
adc
push
add
jp
or
mov
jecxz
fsubs
or
test
popf
mov
jnp
mov
adc
jnp
fldl
negl
cs
jl
mov
mov
and
adc
movsb
add
rorb
ljmp
insb
push
inc
mov
and
cli
adc
movsl
fyl2xp1
mov
neg
push
aas
adc
leave
push
popa
add
push
mov
adc
mov
push
aas
mov
std
shrl
pusha
jmp
pop
push
cld
orl
call
adc
js
mov
int
jns
out
mov
lcall
test
arpl
push
or
xor
leave
out
adc
mov
mov
cmp
and
xlat
rcll
xchg
shr
and
sub
add
test
and
out
std
hlt
out
incb
subl
pop
sbb
jbe
pop
test
cs
cmp
popf
imul
ljmp
andb
insl
lods
pop
imul
sti
icebp
nop
jnp
sbb
js
in
dec
jno
cmpsb
jo
xchg
cld
jg
inc
cmpsl
pushf
hlt
add
sub
in
mov
adc
mov
aad
xor
xchg
inc
iret
stc
mov
xlat
dec
pop
xlat
out
mov
addr16
enter
jno
dec
int3
mov
scas
or
aaa
in
js
call
shlb
push
jbe
pop
out
cmpsl
inc
cmp
fs
fst
popf
aas
loop
lret
dec
dec
dec
int3
pop
push
sbbl
cmp
mov
pop
and
pop
adc
sub
mov
fbld
lret
mov
pop
push
cmpsb
jge
xchg
add
fs
jmp
add
popf
pause
cld
mov
mov
mov
jecxz
adc
in
mov
out
dec
mov
adc
xchg
lcall
mov
shr
in
mov
jno
jb
pop
addr16
pop
mov
add
mov
mov
test
mov
and
es
push
add
or
ret
add
cmp
mov
mov
outsl
fidivrs
ror
rcl
xchg
ja
push
dec
repnz
cmp
xchg
loop
les
sbb
pop
cmc
add
out
fistpll
xchg
mov
lcall
dec
pop
adc
hlt
jle
xor
std
lods
and
adc
inc
cld
lcall
or
mov
and
push
fldcw
xor
cmp
mov
bnd
add
add
mov
push
in
cld
arpl
cltd
cmp
sub
les
xorb
scas
or
fidivl
ja
lret
push
loopne
push
bound
addb
or
lds
or
and
jne
stc
mov
lds
pop
add
mov
jnp
cld
std
jnp
rcr
mov
repz
adc
cmpsl
ret
adc
adc
jns
add
pop
mov
dec
mov
nop
and
vpcmpgtb
xor
fstl
xlat
add
jl
test
adc
ds
aad
inc
shlb
popa
or
js
cmpl
scas
jno
and
setb
xlat
jl
out
sbb
pop
sub
mov
and
add
jo
adc
xchg
or
pusha
or
cmc
cmp
mov
lock
add
and
or
adc
movsb
cltd
out
mov
cmp
scas
arpl
xchg
jle
pop
or
repnz
icebp
std
pop
les
into
orl
and
push
adc
push
std
mov
and
mov
push
lret
and
mov
lock
fwait
add
bound
mov
testl
gs
xor
lock
inc
in
dec
sti
pusha
mov
sti
inc
inc
xor
cmpsb
cmpsb
shrl
xchg
dec
pop
add
lret
and
jge
xchg
roll
xor
mov
xor
ret
add
cld
and
pushf
lods
test
call
add
nop
pusha
jae
jae
jne
stc
pop
xchg
es
cmp
ss
fwait
nop
pop
mov
clc
dec
mov
pop
pop
jge
xchg
or
sbb
pop
sahf
mov
mov
and
popa
lcall
jge
xor
sbb
lea
sub
mov
clc
dec
pop
scas
jl
loop
dec
loop
push
fidivl
int3
inc
mov
movsb
jo
adc
sti
lock
push
add
pop
stc
and
mov
or
push
inc
enter
dec
sbb
std
loopne
jo
adc
test
push
pop
cmp
or
push
mov
dec
inc
in
xor
aad
out
push
insl
pop
and
or
jmp
ds
scas
loope
and
pop
aam
clc
maxps
add
js
test
arpl
ror
sub
mov
cli
mov
push
adc
cvtps2pd
test
inc
sbb
jge
testl
dec
xchg
out
jbe
jns
xor
cmpsl
push
rcrb
repz
jp
mov
repz
lods
xchg
add
xor
or
fld
dec
fdivrp
lcall
jbe
mov
and
inc
loope
adc
jbe
mov
rolb
cltd
sbb
jmp
std
lock
mov
adc
adc
lret
aas
fcmove
jecxz
fdivl
fidivs
cli
pop
mov
nop
adc
add
xor
sbb
ds
cmpsb
ja
jge
inc
cmp
inc
sub
enter
mov
mov
loop
jp
pop
rolb
xchg
adc
testb
cmp
in
shlb
fdivrs
cli
je
add
jne
jo
lea
push
cs
int
cmp
mov
out
mov
repnz
pop
jecxz
add
stos
pop
hlt
jbe
xor
and
sahf
das
cmpsb
ljmp
add
add
repnz
mov
push
jmp
shr
push
push
daa
bound
incl
dec
xchg
adc
movsb
and
dec
mov
sub
cli
in
mov
fildl
xchg
add
mov
mov
popf
mov
rcll
adc
inc
xchg
icebp
dec
add
jne
setb
outsl
fidivrs
rorb
ret
pusha
mov
add
cld
sti
jne
lret
loope
push
inc
hlt
mov
mov
sub
inc
jne
pop
out
jbe
test
adc
cwtl
rcrl
jecxz
jns
and
sbb
add
push
outsl
mov
pop
dec
lcall
divl
std
jbe
repz
icebp
xchg
sbb
das
cmpsl
sbb
cmp
addb
pop
add
push
imull
call
pop
aam
push
pushf
jo
adc
push
stc
hlt
insb
xchg
dec
xchg
push
repz
jl
lret
fdivs
xor
mov
movsb
popf
jbe
jmp
jp
negl
testb
cltd
mov
jnp
jo
pop
adc
xor
and
add
andl
jno
test
stos
fistpll
repnz
or
mov
xchg
pop
dec
xor
or
push
scas
cwtl
pop
cmp
gs
and
xchg
scas
outsl
cmpsl
push
and
and
inc
xchg
xchg
dec
movsl
les
cmp
inc
fs
ss
jg
inc
in
cltd
jecxz
mov
cmp
mov
jo
jo
add
cli
adc
sbb
sbb
mov
popf
and
divb
jo
sub
fs
sbb
fdivr
or
push
shl
or
jae
dec
stc
stc
cli
xchg
popf
add
divl
ss
mov
pop
daa
jmp
jne
pop
femms
jnp
mov
fs
mov
pop
sbb
mov
mov
das
dec
std
jne
nopl
mov
lods
addr16
and
jo
cwtl
cwtl
icebp
pop
push
fs
or
jg
jg
scas
mov
mov
jns
aas
cmp
sahf
jne
sbb
leave
mov
addr16
mov
out
lcall
addb
cli
jnp
or
xor
or
xchg
dec
mov
cmp
mov
pop
sub
mov
fwait
or
pop
roll
sub
or
push
maxps
scas
inc
subl
sbb
cli
cmp
xlat
iret
aas
mov
sti
xchg
mov
xor
shr
or
pusha
and
subb
imul
jge
lods
imulb
dec
sbb
push
dec
mov
cmp
jle
test
pop
jns
iret
sub
divl
push
outsl
adc
mov
lret
fisttps
dec
insl
je
jle
movsl
daa
js
mov
dec
jmp
std
mov
testl
sub
imul
mov
das
pop
push
ficomps
xor
xchg
outsb
pop
xchg
or
out
adc
xor
in
sub
inc
out
ss
mov
pop
xor
xchg
out
inc
movsl
stc
sbb
cmp
pushl
xchg
inc
inc
xchg
push
push
std
arpl
mov
mov
pop
sub
xor
ret
notb
scas
xchg
mull
jmp
and
mov
sub
cli
lret
call
cwtl
xlat
hlt
mov
mov
cmpsl
mov
push
adc
into
push
js
xchg
imul
mov
adc
inc
xchg
mov
js
or
and
loop
rolb
jg
loopne
mov
push
and
add
cmp
inc
dec
nop
push
mov
jbe
xor
and
std
and
add
inc
bnd
add
add
cmp
push
cmp
or
mov
adc
add
and
jb
add
add
dec
ljmp
adc
mov
les
jl
repz
aaa
cmpsb
pusha
push
jmp
and
cmp
icebp
mov
pop
mov
mov
xchg
and
cmp
inc
or
mov
outsb
push
xor
jg
in
iret
xlat
popa
cld
loope
cmp
add
add
mov
pop
andl
hlt
jle
xor
pushf
ja
pop
mov
xor
stos
adc
sub
push
popf
or
jne
mov
mov
pop
mov
pop
adc
xor
mov
jno
mov
and
jbe
fbstp
es
ret
mov
sbb
xor
add
add
bound
and
fwait
icebp
dec
pop
pusha
sahf
imul
xchg
into
sbb
add
dec
sbb
and
cs
shlb
mov
mov
scas
pop
jmp
jbe
add
or
out
ljmp
ror
jae
or
out
cmp
or
or
stos
adc
push
push
pop
addb
mov
jb
xor
in
xor
aad
jnp
xor
loope
push
and
and
dec
cmp
cmpsl
fmull
cmpsb
sub
mov
decl
jmp
in
xor
and
fcoms
jg
mulb
ror
push
sbb
mov
stc
lcall
sarl
add
loop
out
xor
aad
scas
jae
sbb
jno
addb
adc
inc
sbbl
sbb
gs
lods
xchg
pop
adc
scas
and
jmp
in
adc
rcll
sbb
data16
jns
shl
dec
aad
add
test
inc
dec
or
stc
shlb
jo
pop
adc
push
aam
nop
jp
mov
cmp
sub
xor
mov
jne
xchg
test
add
aad
pop
movsl
out
ds
stc
dec
icebp
subl
pop
xor
arpl
xor
test
mov
add
mov
stc
adcl
data16
ret
cwtl
lea
xor
sub
lds
xor
div
in
sahf
popf
loop
dec
mov
jno
imul
push
mov
ret
mov
add
mov
test
rorl
fnsave
sub
testb
push
fsubs
xor
lcall
dec
int3
jmp
cld
and
pop
dec
inc
push
jp
jno
popa
cwtl
in
add
xchg
xor
adc
pop
jno
mov
sub
fs
fnstsw
scas
jo
loopne
dec
or
repz
shrb
mov
fsubr
xchg
or
add
xchg
jg
popf
cld
add
sbb
das
das
xor
add
sahf
mov
hlt
dec
lds
jp
aad
inc
mov
xchg
push
xor
inc
mov
cltd
loopne
popa
jns
mov
pop
sbb
push
insb
fimuls
nop
jge
mov
int
sti
sub
adc
sbb
cmp
jge
aaa
fdivs
loop
sahf
pushf
mov
sti
enter
jge
lret
dec
nop
and
bound
fs
lret
mov
les
lods
jb
mov
pop
mov
les
jnp
das
pop
int
push
cld
and
repz
add
pusha
sahf
and
push
stc
leave
mov
mov
adc
je
and
jp
add
add
nop
add
test
push
mov
hlt
sub
add
add
mov
shlb
inc
hlt
jle
xor
pushf
xor
mov
push
jbe
push
incl
add
adc
daa
dec
in
enter
inc
loopne
imull
inc
lock
loop
and
es
addl
add
sbb
and
in
pushf
inc
stos
ret
or
jb
repz
test
add
adc
jl
cli
jo
mov
and
mov
xor
psraw
cmp
and
test
add
adc
jl
cli
stos
jbe
xchg
and
nop
ss
push
sbb
sub
push
sub
add
shl
dec
and
mov
jl
ficoms
cmp
mov
shlb
sub
adc
in
adc
pop
out
or
mov
outsl
push
lock
pusha
push
mov
arpl
xorl
add
sbb
aaa
into
cltd
sbb
pusha
aaa
rep
sub
mov
mov
adc
inc
dec
or
jl
call
mov
rorw
mov
push
ja
int3
or
mov
lret
cmp
pop
insb
push
ret
mov
ret
jl
pop
mov
in
jmp
or
cld
xchg
or
jb
push
jb
mov
hlt
cmp
adc
adc
stc
push
fsubl
mov
sbb
ss
enter
xchg
sub
in
arpl
xchg
pop
scas
inc
movsl
insl
push
sbb
adc
and
ret
rcll
addl
aaa
in
pop
mov
add
dec
fldt
sbb
insb
pop
insb
xchg
and
jg
adc
jno
adc
inc
sub
aad
dec
sub
xlat
and
and
mov
mov
inc
jmp
cmpsl
dec
aaa
pushf
int
lret
lcall
das
mov
scas
out
insl
mov
push
mov
das
or
popf
xor
add
xchg
imulb
mov
sbb
dec
dec
mov
sbb
push
adc
mov
addr16
lcall
and
ljmp
inc
enter
fnstenv
add
pop
mov
and
repz
outsl
clc
jnp
add
hlt
repnz
xchg
pusha
rcrl
xchg
mov
and
xor
out
or
add
push
sub
mov
mov
xor
mov
push
mov
gs
and
cmp
aad
cld
fwait
insb
push
int3
test
adc
cwtl
jae
cli
lcall
inc
ret
aas
cld
outsb
outsb
divl
mov
rcr
pop
ja
inc
xchg
out
xor
mov
lods
cmp
repz
dec
test
pop
imul
push
push
shll
into
ljmp
scas
jb
sbb
lahf
shrl
scas
pop
dec
mov
mov
jecxz
lods
sub
sbb
cmpsl
movsb
rcr
pop
fcompl
out
push
mov
popa
add
jge
jb
divl
idivb
pop
mov
lret
addl
scas
mov
mov
push
lahf
sti
scas
fadds
mov
xchg
push
sbb
pusha
xchg
aaa
xchg
test
mov
cmp
push
push
xor
jl
icebp
jbe
and
xchg
mov
push
out
les
bound
repnz
mov
mov
loop
cld
xchg
or
jle
fidivl
jmp
cli
ljmp
adc
cmp
pop
push
cmp
sbb
bound
ret
fdiv
pop
mov
pop
cmc
std
js
loope
repnz
sbb
pop
push
adc
sub
dec
add
scas
xchg
mull
notl
sbb
jne
in
sub
add
aad
cld
xor
lret
sbb
add
mov
inc
xchg
int
rorb
sub
dec
and
mov
jp
add
add
dec
in
test
cmp
fs
scas
push
jne
aad
and
out
xor
repnz
add
pusha
popf
xchg
aas
ss
prefetchnta
ds
insl
add
arpl
and
push
pop
add
jae
jnp
popw
dec
nop
in
dec
aas
sbb
dec
push
vpcmpgtb
ljmp
fwait
ja
cld
cli
imul
push
sti
sahf
push
jnp
mov
into
pushf
sub
andb
add
std
jge
dec
hlt
out
fsts
dec
pop
adc
ljmp
mov
adc
inc
hlt
dec
lods
add
and
cld
lock
xor
sub
push
rorb
jb
xchg
or
insb
data16
scas
dec
and
push
and
jbe
ret
mov
jae
imul
out
data16
stos
add
testb
sbb
push
enter
lret
out
inc
ret
cli
fnstenv
push
in
xchg
add
push
fwait
add
in
ja
sub
adc
test
push
jecxz
in
xor
iret
lods
fdivl
cli
xor
aam
or
adc
dec
pop
jo
idivb
jp
cwtl
and
adc
lret
addl
lds
loope
cmpsl
orb
js
mov
mov
adc
jp
and
lea
and
shl
pop
mov
inc
mov
ds
jge
lcall
mov
test
and
cmp
and
jecxz
in
int3
jge
cwtl
push
pop
sbb
gs
pop
cwtl
test
inc
mov
scas
jl
pop
jl
fstps
sub
inc
outsb
cld
sahf
push
jle
clc
mov
push
dec
ret
and
mov
sbb
jp
data16
dec
movb
int
mov
adc
mov
rorb
pop
mov
jmp
gs
sub
out
out
loopne
scas
jle
xor
testb
in
pop
movsl
jge
rclb
outsb
cmc
fmull
mov
popl
jp
pop
in
fisubrl
incb
inc
cmp
out
cmp
or
adc
push
or
enter
cld
outsb
push
divl
mov
aas
mov
jo
cmp
xor
sar
imul
in
dec
sub
push
lahf
inc
xchg
aad
dec
dec
or
adc
out
push
stos
in
pop
xor
jge
xor
dec
shlb
mov
popa
add
pop
mov
sbb
fnstsw
out
cli
movsl
fsts
jecxz
dec
test
cmp
sub
aam
addr16
inc
mov
xchg
jle
out
dec
dec
xchg
in
and
lahf
icebp
and
mov
clc
adc
adc
adc
mov
rolb
test
or
cli
cmp
add
test
add
aaa
in
sbb
bound
mov
jmp
pop
lret
push
lods
jb
sub
fimull
adc
sbb
aas
mov
lds
mov
push
inc
addb
jb
ret
push
adc
outsl
push
int3
jge
out
pushf
mov
cmp
shll
and
leave
les
or
and
loop
inc
xchg
mov
fs
out
mov
les
je
or
in
fstpt
cs
inc
out
into
ret
and
pop
jno
add
jle
jle
dec
std
sti
push
jo
pop
adc
inc
fmul
call
pop
adc
les
add
jbe
stos
add
adc
fidivrs
das
dec
and
mov
jecxz
add
jbe
sahf
add
outsb
rcll
mov
pop
mov
inc
aam
jns
add
lock
cld
sti
mulb
sti
nop
and
jbe
xor
stc
lods
pop
sub
xchg
imul
aaa
popa
pop
add
jl
adc
jo
xor
into
jno
bound
fisubrl
add
cli
fwait
and
jl
adc
mov
ja
xor
xor
and
jg
mov
mov
scas
loop
and
sub
mov
or
es
pop
movb
adc
cmc
movsb
pop
mov
imul
push
xor
and
mov
xchg
mov
imul
inc
xor
pop
and
sub
adc
dec
rorb
mov
mov
bound
adc
add
dec
ja
and
sub
cmc
aam
add
lahf
loop
xchg
adc
and
imul
push
in
xchg
fsts
xchg
stc
xor
cmc
pop
mov
push
repz
push
jecxz
push
gs
scas
sub
push
insl
sbb
cwtl
adc
popa
jge
mov
or
daa
fwait
jp
je
std
cmp
or
fstpl
loope
xor
mov
addl
ja
push
adc
inc
orl
mov
call
pop
mov
add
adc
mov
test
lahf
cs
mov
ds
xor
xchg
push
jno
loope
push
sti
or
jnp
fistl
repz
adc
gs
fistl
jl
xchg
sbb
sahf
push
push
xchg
cmp
cmp
stos
jne
sbb
adc
xor
pop
clc
jb
mov
pop
xchg
test
xchg
dec
lret
stos
xchg
imul
rcl
std
pusha
cmp
lock
push
mov
movsb
sub
lods
jnp
mov
aaa
addb
sub
rorl
adc
imul
aad
cmp
int
sbb
sbb
int3
aaa
in
mov
outsb
and
leave
int3
mov
jmp
mov
fisttpl
lret
pop
fcmovnu
fisubrs
pop
jmp
icebp
mov
das
pop
push
int3
pop
lock
lcall
cld
aaa
mov
out
mov
sub
out
add
xchg
hlt
inc
into
sub
mov
pop
pop
dec
addr16
scas
jecxz
jnp
sub
add
loop
lds
cwtl
inc
icebp
cmp
lods
ja
dec
ljmp
jmp
dec
or
adc
xchg
mov
gs
jns
aam
jl
scas
ret
ret
and
inc
inc
cmp
rorl
shlb
push
and
push
aaa
ror
ljmp
push
scas
mov
mov
pop
ret
mov
or
mov
xor
loop
cmp
into
je
jnp
aas
mov
lods
or
pop
xchg
mov
shlb
mov
mov
jl
icebp
sti
test
lea
cli
mov
js
ljmp
sbb
shr
or
inc
repnz
dec
jl
out
jo
jno
test
fiadds
testl
subl
add
mov
fs
pop
xchg
xchg
stos
popa
cmp
daa
cmp
inc
cld
xchg
sarl
xorb
xor
sti
mulb
pop
insb
aam
xchg
add
pop
and
push
pop
xchg
addb
adc
add
clc
xor
add
rep
or
pop
imul
dec
and
mov
cld
es
push
sub
dec
nop
fnstsw
sub
ficompl
push
jecxz
xor
in
sbb
lods
push
stc
add
in
push
stc
imul
fsubrs
and
fadd
jbe
fwait
insl
addb
cmp
jae
and
push
stc
jne
repnz
std
lods
fildll
xchg
insl
mov
notl
loope
add
fnsave
sbb
gs
in
push
cmp
cltd
xlat
out
xchg
test
add
add
mov
pop
jns
jns
fists
aaa
lret
sub
mov
loop
lock
mov
stc
hlt
adc
test
and
fisttpll
ja
gs
fnstsw
mov
cli
stc
je
loope
jb
lahf
mov
jecxz
xchg
outsb
cmc
jno
xor
imul
jnp
mov
xor
test
and
jle
push
mull
mov
negl
scas
cmpsb
popf
jecxz
ja
adc
or
xchg
mov
test
ret
cmp
pop
shll
in
mov
sub
adc
bound
fwait
add
inc
push
aam
sub
insl
jns
mov
ss
mov
push
fistpl
pop
mov
mov
pop
or
and
mov
fimuls
addb
mulb
pop
xor
xlat
jmp
int3
out
push
sub
imul
addl
bsr
xorl
push
mov
gs
sbb
out
jno
clc
lock
repnz
xor
fdivrs
adc
fwait
cwtl
xor
mov
sti
pop
sbb
mov
dec
sti
jns,pt
adc
or
cmc
int
mov
xchg
jl
out
aaa
mov
loop
leave
sub
in
test
ret
xchg
xchg
fwait
xchg
sbb
or
jp
cmpps
cs
out
addb
cltd
dec
inc
addb
pop
cmp
loop
test
stc
mov
loopne
daa
mov
add
pop
xchg
outsl
sub
adc
fisubrl
fldt
loopne
icebp
out
jmp
adc
out
popf
pop
or
mov
dec
xor
mov
imul
nop
insb
mov
xor
cs
push
neg
inc
mov
cli
in
cmpsb
mov
sbb
divb
outsl
xchg
xor
add
sti
in
fwait
adc
mov
sbb
adc
ss
jb
xchg
and
lods
idivb
mov
aad
sub
mov
loop
push
xor
sbb
lahf
inc
rcll
pop
push
lock
je
jg
adc
push
stos
movsl
jno
xor
cmp
stos
out
dec
mov
and
sub
push
push
in
mull
cli
js
repnz
lds
popa
xchg
stos
xor
push
inc
mov
jle
sub
and
lcall
sahf
testl
nop
testb
mov
jne
repz
cmpsb
cmp
mov
aas
movsl
push
aad
je
and
mov
mov
add
xchg
test
pop
adc
ss
ss
pop
ss
sub
lahf
lods
xchg
mov
cmpsb
icebp
jns
or
and
test
test
jne
sub
sub
mov
inc
hlt
or
test
in
fstpt
pop
dec
and
stc
scas
sub
sbb
pop
adc
jl
bnd
xorl
adc
jo
adc
cmp
das
shlb
stos
add
add
stos
jne
and
loop
enter
xor
mov
pop
jb
test
or
sti
imul
fstpt
mov
je
push
sub
sbb
dec
push
call
je
les
stos
fistpll
push
mov
mov
cmp
pop
imul
incl
mov
mov
xor
popf
rcrl
lret
pop
scas
mov
mov
into
or
dec
into
xchg
testl
jmp
aad
add
add
adc
push
mov
pop
jg
in
das
inc
ret
out
mov
adc
xchg
sti
stc
movsl
mov
xor
cltd
mov
out
pop
jecxz
adc
mov
mov
or
mov
into
mov
icebp
pop
in
jno
adc
xor
shld
xchg
jp
in
mov
sti
push
testl
mov
loopne
push
jle
pop
addr16
pop
push
mov
pop
orb
jecxz
stos
test
mov
inc
out
fs
fisttps
adc
sahf
xor
jp
outsb
mov
pop
pop
fists
push
add
dec
push
lock
mov
mov
add
aaa
scas
iret
jne
mov
repz
sbb
mov
mov
inc
jl
movsb
inc
inc
adc
aas
out
add
jmp
loope
push
dec
cmc
mov
cmp
adc
stc
popf
sub
cmp
jno
clc
js
clc
jb
fdivl
ss
cmp
add
mov
cmp
stos
jno
es
dec
jno
clc
sete
or
cmp
sub
and
test
aas
jp
sub
std
or
test
mov
mov
adc
and
cli
shl
and
dec
pop
adc
shlb
in
mov
xchg
clc
and
sbb
mov
jnp
aam
test
jmp
movsb
xor
sarb
out
mov
nop
jge
fcmovu
or
mov
negb
insb
leave
movsl
jge
popa
scas
out
int3
mov
xchg
cmpb
dec
int
insl
fwait
xchg
fcmovu
fsubrs
push
in
push
pop
sub
add
imul
xlat
sub
mov
test
jecxz
mov
repz
adc
ja
push
dec
ficoms
hlt
xor
into
shrl
insb
into
or
or
xor
sub
mov
mov
push
outsl
push
push
aam
ret
cmp
or
cli
rcrl
nop
sub
movsb
in
daa
rcrb
out
sbb
jecxz
cs
jle
push
dec
xchg
pop
rolb
loopne
mov
add
xor
fs
sbb
lea
mov
icebp
and
mov
inc
adcb
out
add
movsb
adcb
ret
cwtl
ret
lods
je
cmc
lods
xchg
mov
cmp
jo
scas
adc
xchg
into
idivl
stc
movsb
imul
mov
jmp
cmp
orl
and
xchg
and
shll
adc
cmp
sti
pop
scas
out
add
pusha
cmpsl
dec
nop
and
pmulhw
ja
mov
pop
sub
les
add
jl
mov
add
rcll
adc
inc
xchg
pushf
out
pop
mov
mov
adc
inc
xchg
adc
add
arpl
sub
call
lock
inc
orb
add
jo
mov
stos
pop
xchg
push
int
mov
pop
adc
les
and
add
or
pop
jno
in
or
pushf
repnz
pop
mov
sti
add
and
xorl
add
add
xchg
repnz
adc
popf
push
jl
fs
test
std
jbe
cmp
cld
in
xor
inc
cwtl
stc
pop
cli
xchg
pop
jle
jmp
xchg
add
push
bnd
add
ljmp
jno
pop
ljmp
adc
inc
das
jb
sub
push
je
or
int
sbb
arpl
inc
gs
loop
arpl
and
add
jne
mov
pop
aad
and
xor
pop
mov
dec
popa
adc
cmp
out
bound
xor
mov
adc
dec
adc
lock
jo
repz
cmc
cltd
ljmp
imul
inc
imul
or
dec
cli
jp
or
adc
sub
xchg
sbb
ljmp
cmp
addr16
scas
in
pop
pop
xor
xchg
mov
shrb
outsl
ds
add
xor
fbld
and
jg
mov
bound
shll
fsubrl
mov
and
sarb
cmovne
aaa
add
adc
mov
add
mov
mov
adc
ss
insl
int
aam
out
aam
ret
inc
call
jae
sbb
iret
push
pop
in
jb
arpl
jp
jnp
and
xchg
mov
rep
mov
sbb
int
push
enter
lods
cmp
xchg
or
dec
fmulp
sub
and
into
fwait
cmp
push
lods
sbb
xor
xor
push
dec
push
sub
sub
or
fdivrs
aam
lahf
jecxz
mov
xchg
ds
inc
pop
ret
fisttpll
add
or
fldcw
inc
int3
mov
leave
adcl
fcmovu
jbe
xor
jbe
icebp
mulb
fsubrs
pop
pop
jge
pop
jl
fmull
inc
sub
fmulp
ja
ret
jmp
fstpt
jno
add
cmpsl
dec
adc
movsb
mov
pop
xchg
movsbl
push
insb
xor
scas
pop
add
dec
les
outsb
orl
sti
pop
lods
jo
shrb
dec
mov
sbb
mov
fcomps
sub
dec
clc
aaa
push
sbb
xor
ja
ss
xor
sbb
sub
and
jne
adc
sbb
bound
sub
push
cmpsb
insl
daa
das
jns
sub
mov
outsb
xchg
pop
mov
push
pop
cmp
sbb
mov
mov
xor
mov
ret
movsl
out
loop
repz
adc
xchg
sbb
jnp
icebp
and
xor
scas
and
mov
adc
cmpl
jmp
dec
and
lock
jl
dec
and
push
fnsave
cld
enter
rcrl
jne
shrl
adc
sub
push
loop
xchg
out
mov
adc
push
ds
pop
ss
sub
and
sbb
out
mov
jnp
cmp
sub
xor
lret
fsubl
lea
cli
lahf
scas
xchg
jb
inc
adc
dec
and
in
mov
xor
pop
pop
sub
ret
sar
lahf
fcoms
inc
xorb
adc
mov
inc
push
fistpll
arpl
sbbb
adc
scas
data16
scas
test
mov
fnstenv
sbb
int
cmp
adc
mov
xchg
jb
jb
mov
adc
inc
hlt
mov
sahf
into
mov
inc
cmp
ljmp
mov
std
add
pusha
xchg
sbb
push
pushf
mov
cmp
mov
ror
daa
and
rcl
jp
add
sbb
sub
daa
test
inc
nop
cmp
outsb
mov
push
repnz
pop
outsl
add
add
into
popf
mov
in
sub
adc
cld
stos
iret
ss
je
ljmp
aas
sub
ss
or
fisubrl
add
mov
xchg
ja
std
movsl
je
jge
aad
mov
out
fwait
enter
sub
je
inc
sub
mov
add
xor
std
aaa
add
push
lea
mov
pop
cli
out
mov
out
mulb
dec
adc
aas
mov
int
or
inc
xchg
push
and
cmp
cmpsb
or
sbb
inc
test
or
push
out
je
add
test
add
outsl
out
mov
pop
mov
sti
les
jne
push
test
dec
xchg
adc
sub
xor
and
stc
stos
fwait
cmc
ret
jne
mov
fistpll
shll
jno
data16
mull
test
scas
lret
dec
push
jge
js
jnp
xor
sti
and
out
jecxz
and
push
mov
mov
jle
cld
icebp
imul
cmc
or
inc
jmp
push
push
jno
clc
lock
aaa
hlt
pop
cmc
push
in
dec
lret
mov
mov
inc
xor
in
imul
stc
cld
test
andb
adcl
push
aaa
dec
sbb
mov
repz
lcall
mov
push
pause
fisubl
push
ja
pop
ljmp
out
xchg
adc
dec
or
ljmp
int3
fsubl
sbb
xchg
cli
shl
or
xchg
outsl
inc
or
xchg
rcrl
sar
aaa
push
pop
scas
xor
inc
repz
sbb
pop
in
in
scas
in
iret
cmp
lock
fs
dec
and
xor
jge
mov
mov
add
dec
dec
adc
in
lret
out
lcall
sub
jns
roll
pop
imul
ret
adc
jp
pop
dec
mov
lahf
push
jecxz
mov
mov
sub
sbb
jl
sbb
mov
inc
icebp
jmp
cmp
sub
mov
loop
daa
jg
sbb
shrb
inc
xchg
sub
and
and
repz
les
pop
pop
pop
jbe
mov
push
mov
add
mov
fisttps
repnz
popa
clc
push
lcall
jno
add
inc
jmp
mov
pop
movsb
mov
xchg
cmc
jne
adc
and
in
sbb
insb
push
je
rorl
pushf
cmp
xchg
dec
and
std
sti
divb
enter
les
hlt
pushf
mov
pop
aam
fwait
jae
pop
cmp
jbe
cmpsl
adc
xchg
mov
mov
mov
inc
and
add
repz
jo
pop
adc
mov
stos
das
xor
imull
shll
adc
popf
mov
loope
movsl
or
pop
jno
jo
pop
adc
sti
jne
xlat
xor
mov
mov
sahf
push
loopne
pop
adc
pop
inc
out
jle
cli
push
jp
xor
or
dec
popf
cmp
pop
adc
imulb
mov
cltd
in
sahf
lret
pop
dec
fistps
xlat
push
pusha
pop
adc
in
pop
jae
pop
jl
fisubs
sbb
cmp
addr16
fadds
cmp
jbe
add
repz
repz
repz
sub
or
ja,pt
mov
pop
adc
adc
fidivl
xchg
dec
pop
xor
pushf
cmp
cwtl
mov
adc
fnstenv
test
jmp
scas
add
je
mov
adc
fbstp
scas
cmp
pop
cmp
cltd
aas
lcall
xchg
cwtl
arpl
adc
aaa
mov
push
loopne
jmp
shrb
inc
aaa
jg
xlat
pop
and
or
test
test
je
adc
xchg
jge
push
scas
movsb
mov
xor
mov
and
lret
out
push
fbld
and
mov
movsl
movsb
pusha
pop
adc
mov
fucomip
mov
inc
sbb
fimull
push
mov
dec
push
lock
mov
addr16
xor
adc
add
inc
mov
sti
outsb
jbe
jle
pushf
test
xchg
les
adc
pop
and
int
jl
jmp
mov
repnz
ljmp
sahf
in
mov
orl
cmp
std
cmp
xor
pop
rolb
pop
ds
cmp
adc
fdivrl
mov
xor
jne
xchg
in
data16
add
mov
adc
fistl
mov
adc
loope
push
iret
inc
push
mov
and
xchg
fcomp
repz
sbb
adc
test
mov
dec
fldenv
inc
setb
lret
sbb
mov
adc
loope
sbb
add
aas
addb
add
jg
and
adc
arpl
aaa
pop
add
pop
adc
jg
repz
jo
lcall
sbb
adc
cmp
xor
iret
jb
add
xor
fcomp
mov
inc
daa
dec
lea
adc
stc
in
addb
sbb
out
test
mov
mov
hlt
sbb
inc
jae
out
push
lahf
inc
mov
out
and
mov
das
cs
jmp
mov
pop
imul
hlt
ss
lahf
dec
jmp
mov
xchg
push
rol
mov
mov
lock
add
fwait
test
and
cmpsl
rcl
pop
inc
inc
inc
aas
rclb
add
sub
test
inc
dec
es
jb
iret
jb
adcl
addl
xchg
ja
aam
pop
adc
mov
je
push
mov
cmp
cmp
outsl
aaa
enter
movsb
cwtl
push
rclb
dec
out
fistpll
repz
lock
stc
imul
pop
jno
sbb
test
sarl
push
sub
xor
sbb
pop
scas
jbe
aaa
push
mov
ljmp
popa
lds
xchg
mov
cmp
ljmp
mov
and
cmp
out
mov
inc
idivl
xor
je
cmp
scas
dec
nop
push
stc
jno
fcmovne
mov
sahf
or
cli
stos
imul
mov
mov
adc
das
inc
xchg
js
xchg
pop
dec
int
cld
and
les
push
mov
outsl
ss
xchg
or
inc
sarb
mov
jle
mov
and
mov
fwait
dec
out
jo
enter
lds
les
xor
mov
jge
xor
jle
xor
std
lods
pop
popa
or
lahf
xor
xlat
add
add
jp
daa
dec
in
mov
iret
loope
adc
out
pop
mov
hlt
mov
lea
add
adc
cmp
xchg
inc
xchg
mov
cmpsl
push
push
push
fwait
sbb
add
std
cld
pop
mov
adc
and
inc
idivb
pusha
ljmp
mov
jmp
lret
cmp
outsl
in
or
push
pop
sub
sarb
jnp
clc
or
lret
jae
int
pop
and
mov
sti
out
cmc
push
add
shr
sbb
iret
push
adc
jl
in
push
mov
pop
jns
lods
imul
pop
ds
xor
sub
mov
mov
sbb
adc
daa
cmp
inc
repnz
or
add
inc
test
repz
sbb
fmuls
test
or
pop
push
cltd
mov
in
outsb
loopne
add
ret
inc
xchg
repnz
je
cwtl
jmp
sub
loop
mov
mov
jno
loopne
pop
push
adc
push
adc
inc
or
mov
and
les
push
pop
pop
jns
xor
dec
mov
gs
lret
loope
mov
cmpb
cmp
mov
add
out
fwait
adc
int3
push
push
xor
cwtl
scas
sub
dec
loope
mov
mov
fcom
and
pusha
mov
jns
mov
dec
pop
stos
xchg
repz
add
push
mov
mov
lret
xor
and
jbe
pop
jp
scas
outsb
push
pop
cmc
xchg
inc
shrl
std
push
push
imul
dec
shlb
xchg
mov
inc
int3
mov
testb
xor
add
push
or
mov
sub
fldenv
pop
xlat
test
out
sub
adc
andb
mov
mov
mov
pop
push
daa
clc
and
add
or
dec
mov
loopne
ffreep
inc
sbb
sbb
arpl
or
iret
out
rol
out
fs
sbb
lods
mov
xchg
repnz
in
out
cmp
mov
cli
loop
and
ffreep
adcb
and
pop
rcll
add
rcrb
jnp
iret
mov
mov
stos
aas
ret
mov
adc
dec
mov
cmp
stos
push
mov
inc
inc
inc
cmp
push
xor
adc
jb
push
out
icebp
test
addr16
cmp
scas
mov
lds
add
cmp
and
sbb
or
das
inc
in
xor
cmp
jo
adc
inc
sub
jle
jne
or
imul
jbe
mov
jge
test
out
mov
pop
je,pt
push
stc
add
fistpll
int3
add
xchg
data16
adc
enter
fcmovb
jo
adc
test
and
mov
pop
hlt
xchg
add
mov
xor
fnsave
push
adc
cmp
jbe
std
sti
aas
das
shll
mov
mov
mov
cmp
aaa
jle
add
je
mov
and
arpl
add
popf
cmp
add
pop
adc
setne
jae
das
xor
mov
bound
dec
bound
adc
or
add
mov
into
or
sbb
into
adc
cmpsl
dec
popf
cmp
mov
pop
xor
std
xor
fistpl
and
cmpsb
insb
and
lds
stc
sub
inc
bound
pop
push
inc
addb
mov
jne
lret
mov
loope
jmp
jbe
stc
add
popf
cmp
add
in
sub
mov
jl
push
sti
scas
push
enter
and
testb
ljmp
jnp
ja
divb
fdivs
outsl
adc
pusha
subl
push
add
adc
adc
pop
and
je
lret
sti
cs
dec
repz
out
lock
xor
icebp
std
cmp
inc
popl
add
popa
scas
rol
sbb
sub
cmp
lret
sub
lret
sbb
add
je
dec
repnz
dec
outsb
fwait
daa
int
adc
insb
sbb
push
xchg
push
pushf
lods
mov
das
hlt
inc
in
inc
mov
in
adc
xor
xlat
push
orl
das
pop
out
push
adc
filds
iret
test
pusha
push
call
inc
addl
int3
in
pop
mov
push
rorb
inc
push
cld
into
out
stos
pusha
aad
hlt
cmc
cmp
es
cld
icebp
adc
mov
xor
adc
aad
jb
xchg
fdivrs
mov
icebp
bnd
ljmp
shlb
gs
repnz
int3
jp
inc
add
xchg
mov
int
mul
mov
xor
fsubrs
test
fwait
in
clc
clc
push
sbb
add
push
and
pop
push
pop
fsubl
jnp
arpl
xchg
jmp
mov
push
xor
add
arpl
mov
mov
lret
add
lret
sarl
outsl
adc
and
jmp
loope
xchg
lock
out
jmp
les
push
pop
jne
jno
sti
rol
mov
cltd
cld
gs
insb
loop
fisubl
fldl
movsb
jo
scas
pusha
adc
div
fnstenv
push
adc
sub
fistpll
cmp
push
test
aam
popa
cwtl
mov
arpl
imul
pop
pop
xor
pop
or
into
popa
mov
bound
cmpsb
outsl
add
inc
xor
out
sbb
daa
arpl
jnp
mov
mov
lods
jp
or
inc
cmp
aad
into
pop
arpl
dec
and
ror
mov
sub
push
or
adc
inc
cmpsl
mov
and
cmc
jecxz
pop
sbb
xor
stc
add
out
pop
mov
dec
xor
in
imull
pop
add
cmpsb
ja
pop
jg
xor
cltd
sbb
test
xchg
fisubs
bound
add
aaa
cltd
addb
je
or
ds
fidivrs
ss
cmpsb
dec
cmpsb
cwtl
int
out
xchg
jg
call
add
push
xchg
stc
add
out
int3
imul
pop
rolb
mov
adc
sbb
jbe
adc
push
adc
mov
sbb
dec
push
cld
cltd
fstpt
add
test
scas
stos
adc
and
in
sbb
into
ljmp
mov
sub
ja
fistpll
pushl
pop
push
out
dec
nop
mov
adc
cmovb
je
xchg
lret
insb
cld
push
aaa
lock
add
je
jne
adc
add
or
insb
add
xor
inc
jne
mov
and
cmp
adc
je
cmc
stos
jnp
shl
xchg
xchg
nop
sar
jmp
dec
push
sti
push
ret
pop
jmp
mov
jne
lods
push
cmp
repnz
sub
sub
cmp
ss
mov
inc
mov
iret
xor
jo
pop
adc
and
inc
test
pcmpeqw
out
in
or
sarb
cmpsb
sbb
mov
add
std
jbe
out
shl
mov
icebp
pop
adc
cmp
pop
adc
ja
mov
jle
mov
jno
xlat
je
shlb
xchg
aas
jo
mov
pop
adc
je
stc
jbe
nop
fdivrl
repz
xchg
xor
pushl
and
mov
and
dec
addr16
das
scas
in
fwait
test
fs
ret
pop
xchg
lea
addr16
lret
outsl
pop
adc
int
push
inc
jnp
sub
inc
sub
xchg
repnz
lcall
jo
adc
pop
mov
cmp
data16
sar
rep
push
mov
scas
ja
ds
pushf
jl
adc
faddl
push
inc
fwait
jns
shl
fscale
cld
dec
pop
cmp
xchg
push
push
icebp
xchg
xchg
jbe
adc
jle
and
pop
std
push
loop
inc
pop
jns
int
mov
sti
cltd
cld
popw
adc
jbe
sub
pop
cmc
push
ljmp
rcl
mov
sbb
lcall
xchg
inc
cli
cmc
mov
push
in
jb
mov
incl
in
xlat
loope
ret
dec
mov
outsl
iret
xchg
push
mov
in
orb
sub
ror
xchg
sub
test
addb
and
xchg
pushf
mov
push
mov
mov
pop
js
test
pop
lea
xchg
aam
addr16
pushf
lds
shrb
int3
int
mov
cli
dec
jnp
in
or
sti
cmpsl
fiadds
std
pop
aas
and
mov
lahf
pop
mov
xor
ror
mov
gs
mov
sbb
cmp
call
std
mov
int3
shld
jno
mov
data16
cmc
cmpsl
mov
adc
icebp
sbb
cmp
cli
add
sbb
jns
es
loopne
mov
loope
fisubrl
movl
int
imul
mov
pop
push
cld
ljmp
push
adc
sub
jle
sbb
cmc
push
fstp
inc
out
sahf
pop
xchg
andl
call
xchg
lret
stc
add
fnstsw
inc
lods
mov
mov
hlt
or
cmpb
into
xchg
push
mov
inc
out
or
jl
pop
push
je
in
xchg
imulb
add
es
pusha
std
sti
jnp
call
lock
rcrl
je
shl
into
cmpsb
inc
add
in
jg
jp
jle
roll
push
cld
jge
out
adc
in
xor
popf
cmp
pop
and
sbb
out
je
xchg
mull
sub
fwait
mov
cmc
out
adc
mov
pop
call
out
out
hlt
xor
outsl
add
add
adc
and
pusha
or
xor
jge
bound
jg
testb
jne
hlt
ret
lock
push
leave
jne
mov
in
pop
ljmp
clc
ja
push
mov
js
adc
fwait
and
popf
cmp
gs
popf
sub
add
jge
mov
pop
addl
push
mov
cmpsl
dec
les
adc
push
add
xchg
subl
ljmp
jmp
cmpsl
dec
adc
inc
test
adc
sti
jne
xlat
xor
sbb
and
je
push
pusha
inc
into
mov
gs
inc
fnsave
div
js
imul
fcmovnu
dec
lea
out
push
ret
mov
inc
sbb
mov
sub
jbe
and
sub
sub
cli
xor
and
xchg
pushl
sub
add
pushf
push
mov
sahf
loope
movsb
dec
adc
lock
jb
mov
sti
cli
sarb
mov
xor
or
or
xlat
in
adc
sti
jmp
mov
out
or
jecxz
mov
cmp
push
push
aam
push
jbe
and
lret
mov
pop
push
ljmp
cmc
addr16
lea
push
cld
dec
lock
in
pusha
pop
adc
xchg
fucomp
fistps
xlat
push
or
nop
rclb
push
adc
pop
daa
das
in
sbb
lods
mov
outsb
iret
stos
mov
dec
xor
test
sub
jp
scas
adc
stc
sub
ror
imul
add
loop
mov
xchg
test
cmp
outsl
sbb
mov
mov
mov
inc
jo
pop
inc
xchg
fistpll
popa
adc
xor
mov
movsb
jp
push
les
sub
lods
mov
or
lret
js
sub
cltd
sti
adc
xchg
lahf
sbb
pop
adc
mov
mov
inc
add
add
out
adc
ret
lods
out
push
scas
out
lcall
mov
inc
add
fsubs
sbb
jmp
pop
jg
pop
jge
sbb
leave
add
orb
lret
out
mov
mov
call
fcmovb
arpl
bound
loope
loopne
push
inc
push
mov
nop
dec
xchg
fdivs
rolb
adc
fs
sbb
mov
mov
cmp
adc
xor
in
inc
leave
xorl
inc
fnstcw
mov
push
loop
sti
sub
jmp
dec
dec
sbb
adc
mov
adc
push
pop
push
iret
pop
or
sbb
stos
cs
xchg
jbe
push
mov
into
cmp
rol
sub
adc
jns
movsl
lods
aas
into
jle
add
pushf
aaa
fs
push
pop
out
push
pop
xchg
repnz
arpl
xlat
inc
test
imull
jno
adc
push
jnp
jns
test
call
add
xchg
movsb
mov
jnp
dec
pusha
xor
dec
push
jae
pop
aas
je
cli
andb
or
mov
cmp
sub
cmp
test
scas
xchg
jbe
sub
popf
cmp
xchg
negl
adc
pop
cmp
add
lock
sti
imul
push
lret
movsb
pavgb
and
inc
mov
jb
push
xchg
hlt
pusha
pop
adc
ss
pop
ss
sub
lahf
in
idivl
je
stc
mov
push
adc
jle,pn
xchg
rorb
shll
lea
pop
aad
add
sub
mov
mov
call
les
mov
jmp
clc
jb
push
xchg
sbb
pop
adc
jns
and
sbb
add
pop
loope
push
jnp
mov
repz
adc
sub
mov
jo
aaa
lret
mov
hlt
mulb
repnz
mov
movsb
je
or
fidivrs
or
mov
jmp
xor
jbe
je
cli
je
repnz
mov
jge
popf
push
and
mov
ficoms
inc
mov
addb
aad
add
call
mov
sub
repnz
jne
or
xor
push
loope
icebp
adc
lcall
jge
test
addb
lret
jb
cmc
adc
bound
cmp
sbb
popf
mov
add
pop
leave
xlat
test
and
lock
mov
adcl
decb
mov
jo
xor
insb
sbb
scas
inc
xchg
xor
adc
push
pop
mov
mov
imul
cmp
jb
cwtl
inc
add
mov
unpckhps
dec
fwait
push
repnz
and
push
xor
pop
fildl
xor
test
mov
mov
fisttpll
lock
jnp
shll
fidivl
jno
jle
jne
xchg
imul
pop
mov
pushf
mov
loope
or
push
dec
int
mov
test
pushf
push
cld
jb
aam
ds
dec
or
daa
xchg
int3
jo
adc
xchg
adcb
xor
fwait
or
cmp
or
or
jnp
push
pop
sub
pushf
cwtl
das
xchg
or
mov
mov
adc
inc
or
inc
call
sub
nop
repz
fsts
or
ds
scas
dec
jae
adc
adc
push
adc
push
dec
push
popf
clc
cmp
adc
test
lret
pop
jnp
test
mov
test
mov
negl
inc
xchg
inc
int3
in
mov
sbbb
adc
sbb
hlt
pop
andb
je
dec
jno
pop
mov
dec
mov
int
xchg
js
lahf
imul
dec
lret
out
repz
pop
ret
data16
jns
ret
pop
push
lret
push
cld
test
add
insb
mov
addl
mov
in
cli
add
imul
sbb
out
xchg
push
inc
push
jb
pop
insb
ja
test
adc
in
jo
adc
adc
adc
sbb
cltd
rcl
fnstenv
and
xchg
xor
pop
or
cmpsb
xlat
aaa
mov
shlb
xor
jle
fnstcw
pop
roll
out
cmp
loopne
shl
pop
mov
push
fs
push
mov
stc
ljmp
pop
jg
stc
adc
push
mov
sarl
mov
lea
dec
nop
xor
imul
nop
xor
icebp
jnp
std
sti
push
mov
mov
cmc
sarb
mov
pop
lds
scas
hlt
push
xor
cmpsl
fdivl
jl
stc
adc
and
in
dec
mov
repz
and
fdivrl
adcl
ss
add
outsl
fsubrp
sub
and
icebp
lds
lcall
int3
jo
adc
shl
in
push
adc
sbb
push
pop
mov
pop
loopne
int
cmp
aaa
insb
push
add
jl
shrb
repnz
fists
sbb
push
ja
mov
popa
adc
mov
out
fistpll
call
sahf
add
nop
and
imul
or
push
and
je
test
mov
jg
aaa
ret
popa
sbb
jne
jo
adc
xor
mov
out
call
add
add
sbb
cmp
xchg
cmpsl
mov
jb
pusha
mov
incb
adc
daa
jb
cmpsl
in
fdivs
mov
jp
es
push
pop
loopne
adc
shrl
jb
xchg
cmp
mov
icebp
repz
lret
popa
shll
in
aaa
lods
push
add
je
or
shl
sarb
pop
xor
mov
push
or
lods
test
daa
movsb
clc
fs
in
dec
repnz
or
in
jo
adc
xor
jbe
repz
imul
cmp
jbe
sub
ja
bound
add
jge
add
push
xchg
mov
mov
movsb
daa
scas
scas
sub
lock
cmpsl
jp
xchg
test
in
inc
filds
neg
lea
ja
mov
in
and
int3
inc
sbb
pop
jge
int
sbb
pop
pushf
pop
roll
stos
inc
push
mov
cmp
jmp
lcall
mov
push
lahf
push
push
jmp
xor
test
xchg
jp
scas
sahf
aaa
cld
mov
cmp
mov
push
lea
outsb
push
scas
cmp
mov
jne
idivl
fsubr
ja
stc
arpl
orl
jg
pop
in
sahf
push
sbb
in
jns
jns
pop
imulb
cmc
jb
or
insl
lret
subb
mov
cli
add
lock
psubsw
xor
lret
in
stc
shrb
movsb
test
loop
cwtl
sub
add
sbb
push
inc
adc
aad
mov
out
add
scas
jbe
dec
add
loopne
mov
frstor
add
pop
push
sub
xchg
test
pop
out
or
les
add
dec
cmp
cli
add
inc
cltd
stos
cmpsb
adcl
loop
jb
lds
imul
insb
cmc
or
in
mov
push
pop
mulb
add
data16
shrl
xchg
std
inc
pop
jp
in
in
fisubrl
xor
lea
sub
aas
or
rolb
dec
dec
mov
mov
mov
stos
aam
adc
jno
fsubrs
inc
xchg
hlt
xor
dec
rcrb
imul
mov
rcrb
bound
jns
cmpsb
add
add
mov
rcrl
lods
in
in
icebp
xchg
push
dec
ss
xchg
shrl
ja
mov
sarb
test
stos
jo
pop
add
sub
push
dec
adc
les
gs
pop
inc
notb
push
adc
mov
arpl
shll
outsl
pop
leave
push
fwait
mov
lock
jge
jg
sub
add
mov
dec
adc
lcall
mov
and
stc
divb
jnp
xor
loope
in
pop
jns
sbb
divl
mov
mov
inc
ss
add
in
subl
repz
jo
pop
adc
mov
pop
push
inc
testb
add
je
cmpsb
adc
out
call
ljmp
bound
call
mov
outsb
xlat
nop
and
inc
xorl
xlat
cs
icebp
les
mov
jae
or
inc
sbb
push
sub
or
sub
xor
pop
orb
jle
sbb
push
repnz
stc
test
xchg
adc
add
sub
movsl
xchg
mov
aaa
push
xor
add
add
jmp
out
push
repnz
cmp
or
xor
mov
push
adc
pop
int
addl
sub
cltd
and
nop
and
lds
bound
cli
mov
cmpb
mov
xchg
arpl
bound
push
icebp
add
rcrl
subb
je
inc
cmp
addr16
and
or
xor
stc
lods
outsl
cs
in
mov
pop
ret
mov
jae
inc
ja
test
xor
mov
and
add
jae
test
push
or
test
fcoms
jge
mov
mov
xchg
std
xchg
sti
je
dec
add
out
xchg
and
test
mov
shlb
pop
dec
test
pop
jmp
xor
xchg
sub
cwtl
xchg
mov
fidivl
adc
sbbb
jno
or
pop
xchg
pop
adc
xor
test
mov
xor
mov
xor
sbb
andb
das
xchg
out
mov
push
orl
arpl
addl
stos
sbb
dec
pop
cmp
imul
leave
inc
add
and
addl
cwtl
lcall
jge
xor
xor
iret
mov
icebp
mov
adc
push
and
sbbb
push
mov
sub
ret
cmp
les
xor
pop
jmp
dec
or
inc
sub
xchg
ret
call
pushf
or
outsb
mov
add
shrb
fs
fistl
pop
lods
in
mov
pop
sahf
bound
xchg
or
cmp
mov
out
jb
adc
sub
cmp
or
inc
cmc
das
inc
loop
dec
insl
fcoml
push
and
pop
inc
rclb
orb
inc
jbe
mov
lds
call
xor
xor
icebp
ret
test
nop
iret
faddp
jle
scas
pop
push
adcl
out
movsb
adc
xor
scas
adc
sub
test
movsb
gs
pop
inc
dec
scas
subl
lcall
add
shlb
fldt
inc
or
pop
cmp
loopne
jnp
sti
add
xchg
xchg
adc
test
pop
adc
lock
movsb
dec
or
aas
lods
or
stos
lret
dec
sub
push
and
rcl
shlb
inc
icebp
sbb
adc
jbe
jg
rolb
jmp
movsb
test
and
mov
mov
or
jecxz
push
fcmovnu
mov
loope
or
pop
jns
dec
pop
jno
aas
loopne
int
pop
push
mov
shrl
sarb
outsl
cmc
cmp
popf
push
mov
pop
cwtl
mov
push
std
in
incl
iret
or
outsl
or
jae
and
mov
cld
mov
xor
stc
movsb
pop
dec
cltd
cld
mov
add
add
add
fstl
pop
and
or
mov
lds
popa
hlt
sub
xlat
mov
mov
adc
mov
aaa
mov
sahf
inc
fadds
mov
mov
and
mov
jg
mov
jo
mov
push
sub
int
jmp
pushf
fdivl
and
jp
add
add
pusha
xchg
ja
popl
data16
push
cmp
add
add
and
stos
lret
dec
mov
adc
push
sub
lahf
out
mov
mov
pop
movsb
pop
or
mov
repnz
outsb
imul
mov
orl
lds
cmp
mov
add
data16
and
bound
mov
jle
in
aaa
orl
adc
nop
and
jbe
xor
dec
fs
lcall
add
mov
and
xchg
into
idivl
stc
movsb
pop
popa
or
lahf
int3
xchg
je
les
adc
xchg
mov
sub
mov
out
addl
add
or
test
push
xchg
dec
inc
push
dec
push
push
repz
add
and
xchg
push
cmp
leave
mov
fnstsw
ljmp
ss
and
jecxz
xchg
fnstenv
enter
sbb
mov
loope
jge
xchg
sbb
xor
sbb
jl
sub
notb
xchg
sbb
xor
dec
xor
jb
cwtl
jl
inc
jg
in
bound
xor
pop
jae
lea
cmp
out
add
inc
scas
das
xor
pusha
mov
inc
inc
inc
in
jb
dec
arpl
mov
cli
jo
test
and
repnz
in
xor
test
cmpsl
mov
sub
jns
js
sbb
xchg
scas
push
and
addl
push
fnstenv
push
lock
lock
mov
cmp
xchg
ret
xchg
std
jno
sbb
jmp
add
sub
xchg
xchg
push
and
or
mov
call
lea
shll
rolb
jp
or
mov
in
movsl
sub
ds
mov
inc
xor
sarb
mov
and
out
add
orb
mov
adc
push
test
pop
push
sub
test
jecxz
lds
sub
ja
imul
dec
fisubl
cmp
vmovaps
inc
cltd
testb
cmc
sbb
mov
sahf
arpl
rclb
andl
inc
dec
cwtl
add
push
cli
pusha
jo
adc
rorl
add
jno
jecxz
es
mov
in
shlb
jb
imul
outsl
mov
jmp
dec
sub
shlb
jnp
fs
adc
mov
dec
dec
enter
push
xchg
add
into
icebp
mov
js
loop
inc
inc
and
dec
pop
pop
xchg
adc
shrl
jge
lods
repz
dec
icebp
xchg
sub
loope
addr16
and
pop
rolb
rcll
call
adc
pop
add
push
arpl
fcom
cmp
sbb
mov
cmpsb
fisubrs
call
cmpsl
mov
or
push
ss
shlb
ret
or
lock
in
mov
sub
lods
dec
sub
cmpsl
add
cmp
mov
add
aas
mov
cmp
cmc
pop
loope
int
cmp
aaa
insl
xchg
add
jp
mov
cmp
jge
mov
ficoms
repnz
adc
pop
ljmp
cmp
std
xchg
push
in
repz
sub
jns
fidivs
pop
int3
or
outsb
push
fbstp
inc
mov
pop
jg
call
hlt
pop
and
pop
jl
addr16
jns
imul
fstpt
inc
push
add
sbb
bound
add
dec
popf
bound
jl
addr16
cmp
mov
pop
pop
jns
out
jecxz
icebp
push
cmpsl
mov
push
sarl
sbb
andb
jle
cmpb
xor
mov
rcl
mov
push
ficompl
sbb
cmp
cli
jbe
imul
out
sub
mov
fsubrp
cmp
xchg
outsl
sub
sbb
push
mov
out
add
adc
cmp
mov
jne
pop
adc
push
mov
mov
pop
shrb
scas
movsb
in
and
sub
xor
add
mov
add
xor
addr16
rclb
xchg
push
test
inc
jns
jmp
cmp
mov
xchg
pushl
sub
pop
mov
xor
das
or
jbe
mov
pop
adc
std
js
cmc
jp
pushf
mov
lock
aaa
sar
aas
sbb
jmp
sub
stos
test
in
push
lods
and
js
cmp
icebp
xchg
es
mov
sub
ret
jl
jmp
pusha
mov
xorb
test
sbb
sub
mov
out
bound
mov
mov
add
rcrl
ret
jp
push
pop
lahf
fidivrs
and
sub
mov
push
insl
imul
jge
into
scas
mov
jns
cmpb
jne
xor
mov
fwait
rclb
hlt
pop
inc
or
sbb
js
jne
repnz
arpl
dec
in
sbb
jb
sub
or
mov
cmp
sti
scas
cwtl
xor
cld
jne
insb
mov
xchg
sub
mov
adc
sub
fwait
push
mov
lock
cmpsb
jno
cmc
dec
in
dec
out
rep
test
imul
in
dec
icebp
in
lods
jge
mov
out
add
sbb
shlb
ljmp
lret
fs
popa
inc
push
stos
hlt
jo
adc
int
jle
sub
inc
ret
ds
and
movsb
inc
fcomip
xchg
cmpps
dec
jmp
jle
lret
popl
sbbb
cmp
andl
sbb
adc
dec
test
je
rorl
rol
loope
enter
push
mov
gs
add
lods
fcomp
scas
jp
xchg
filds
mov
int3
std
iret
div
rcr
insb
aad
ret
gs
aas
and
dec
and
add
pop
adc
jp
dec
int3
fsubs
dec
fwait
cmc
xor
ret
dec
jg
insb
popa
or
xchg
mov
rolb
dec
jecxz
pop
sbb
mov
loopne
cli
sub
sbb
addr16
rol
fs
cwtl
xor
and
arpl
dec
shlb
mov
xor
rcl
mov
test
jecxz
cmp
js
pop
adc
mov
lcall
sub
mov
aad
cmpsb
cmpsl
data16
lret
push
jp
icebp
and
pop
adc
xchg
dec
popa
jp
out
lahf
cmp
dec
fdivrp
arpl
in
jns
aaa
scas
mov
cmp
cmp
icebp
js
or
and
jmp
out
mov
stos
subb
mov
in
jl
icebp
jle
cwtl
ljmp
mov
shlb
and
dec
popf
cmp
stos
inc
jns
call
lret
std
jle
cwtl
fdivl
dec
mov
loopne
lods
fsubrs
dec
jbe
cli
xchg
sarb
dec
pop
add
adc
sub
es
mov
pop
imul
xor
add
adc
sub
in
dec
repnz
xchg
ret
pop
std
in
cmpsl
dec
popf
mov
pop
test
daa
pushl
cmp
sti
pop
jmp
dec
nop
and
pop
testl
sub
cmpsl
sbb
xlat
es
mov
out
ljmp
sbb
xor
adc
ret
xor
cmp
popf
cmp
test
jbe
repz
jbe
test
sbb
mull
out
lcall
cmpsb
mov
jmp
aaa
adc
in
jle
cli
push
je
sbb
inc
xor
adc
fs
xor
divl
je
icebp
jb
jmp
hlt
jno
stos
ficoml
xor
mov
mov
lcall
ljmp
mov
sti
movsb
fiadds
mov
into
enter
movsb
popa
fs
lret
pop
ljmp
or
cmpsl
cmp
in
mov
jp
enter
lahf
ds
cli
test
fprem1
in
jb
in
mov
repz
popf
mov
outsb
xchg
dec
sahf
sub
jg
mov
ja
in
mov
pop
jmp
sarb
arpl
mov
test
inc
inc
push
repnz
out
push
into
testw
fxch
sub
cli
loop
jle
test
pop
clc
sub
test
data16
fistl
fucomip
pushf
dec
cmp
adc
ss
push
repnz
push
sbb
iret
push
cld
mov
fwait
movsl
sbb
lds
rorb
mov
daa
fildl
xor
sbb
jno
pop
pop
imul
es
sbb
jno
mov
loope
lods
inc
addl
xor
imul
cmp
shr
bound
std
or
insl
pop
inc
movsb
insl
lret
xchg
out
dec
daa
lock
popf
hlt
call
and
aam
jno
sbb
xlat
icebp
shrl
fs
mov
rcrl
jne
idivl
fisubs
faddl
les
mov
xchg
psllw
fucomi
shl
adc
xchg
ljmp
mov
popf
pop
icebp
insl
fcmove
pop
and
sub
js
cmp
hlt
cwtl
jge
mov
jno
adc
out
inc
add
idivb
mov
adc
ret
scas
ds
jno
push
lret
lock
xchg
inc
cltd
jecxz
and
and
dec
lcall
loopne
loope
fstpt
xor
fsubrl
mov
pop
xchg
and
testl
fiadds
sbb
mov
cmpb
jns
enter
or
pop
loopne
cmpsb
pop
or
loopne
push
adc
mov
fwait
push
sub
out
lret
in
fistpll
mov
test
scas
aas
pop
in
jle
mov
cmpsl
sarb
lahf
repz
leave
mov
pop
add
xor
push
aad
adc
pop
xchg
popf
pop
mov
decb
das
sbb
ret
aad
dec
iret
outsl
sbb
fwait
ljmp
push
out
cld
sbb
aaa
out
pop
insl
jb
outsl
cmpsb
inc
fmull
xchg
fsubs
aam
rep
out
sti
add
std
sti
jne
lahf
in
mov
xorb
arpl
mov
mov
push
adc
cmpsl
pop
sbbl
in
push
repnz
xor
jae
pushf
mov
adc
cmp
jl
adc
cmp
fidivl
or
into
bound
bound
sbb
roll
and
mov
mov
mov
mov
inc
test
into
loopne
ja
shlb
popa
je
sti
into
mov
jg
xor
mov
cmc
in
xor
ljmp
lods
fistl
pushl
stos
repnz
mov
jecxz
iret
xor
xchg
ret
cmpsl
cmp
scas
jle
mov
jo
jmp
aaa
jns
xchg
lret
dec
cwtl
fcmovnbe
inc
push
lret
adc
add
add
cmp
sub
aaa
cmp
and
xlat
pop
ds
mov
pop
pop
insl
addl
in
sti
sbbb
aam
mov
cmpsb
pop
sub
or
xor
sti
je
sti
cmp
mov
scas
mov
popa
lds
xchg
mov
sti
mov
mov
cmp
loop
inc
fnstenv
sub
clc
adc
mov
out
fidivrs
std
inc
clc
sti
add
fdivrl
fidivs
std
mov
cmp
in
testb
mov
and
adc
mov
test
or
cld
ret
xchg
jnp
adc
ret
add
roll
push
adc
push
cmpl
insb
jl
adc
push
loope
loope
insl
iret
aam
hlt
stos
and
cli
div
out
out
and
loop
jae
sti
add
fimuls
int3
sbb
adc
mov
inc
rorl
and
pop
mov
mov
scas
adc
pushf
mov
adc
clc
stos
pop
or
adc
outsl
mov
cld
add
fdivr
fchs
shrl
cli
dec
mov
repz
or
xor
push
adc
adc
mov
fmull
push
popa
sbb
mov
addb
jl
jo
scas
pushf
pop
js
push
adc
mov
xchg
aam
adc
inc
repz
loope
xchg
jb
fcoml
pop
lock
nop
rclb
inc
dec
sbb
fistl
cmp
clc
test
arpl
aad
data16
or
into
xchg
mov
cmc
sub
dec
std
sub
inc
scas
out
add
out
pop
mov
dec
mov
push
rcl
push
test
xchg
clc
pushf
xchg
aam
popf
mov
inc
js
std
loop
push
lcall
loopne
dec
shrb
cmovle
sbb
push
cmpsb
xchg
adc
add
pop
cmp
dec
sub
test
dec
add
fwait
out
sbb
in
jg
stc
mov
call
mov
push
scas
imul
xor
jno
sub
decl
in
xor
push
in
scas
outsb
dec
ret
add
or
xchg
jp
popf
push
cmp
mov
sub
lret
dec
dec
lret
call
jne
filds
cmp
lret
adc
ret
fbld
addb
cmpsl
inc
push
roll
fld
andb
mov
and
loop
inc
adc
inc
pusha
out
aaa
push
mov
push
push
fldt
pop
jp
fprem1
adc
adc
mov
and
mov
cmp
loopne
sbb
icebp
scas
xor
pop
jmp
out
mov
and
enter
inc
scas
mov
imul
jno
pop
aam
mov
je
inc
daa
mov
filds
jle
pop
je
jge
out
scas
lods
test
sbb
notrack
por
cmp
add
adc
jbe
jbe
lret
mov
enter
and
and
mov
sub
pop
inc
addb
stc
jne
in
jae
std
push
cli
lahf
sbb
imul
xor
rorb
push
lds
lods
pop
and
std
mov
cs
cmp
ds
xchg
scas
cld
stos
xlat
ss
mov
fwait
ja
sti
imul
fstpt
mov
adc
inc
and
add
push
lret
je
pop
mov
and
xlat
mov
mov
outsl
mov
mov
out
fucomip
adc
cmc
cld
sti
jge
pop
dec
ss
jl
das
xor
ljmp
clc
popa
push
lret
mov
aaa
aaa
es
add
xchg
add
or
out
inc
xchg
aaa
mov
adc
mov
aaa
aaa
fidivs
add
jb
jge
aam
loopne
add
in
iret
popf
mov
insb
sub
pop
jmp
jmp
stos
lahf
add
adc
inc
add
lods
loop
dec
mov
scas
std
mov
push
ja
push
bnd
pop
loope
add
ja
fsubrl
dec
es
jne
shrb
cwtl
cmp
das
cld
add
std
cld
scas
stos
mov
test
int
cmp
xchg
xchg
xchg
movsb
cli
cld
nop
and
jnp
cmc
lods
add
icebp
je
lods
fidivs
icebp
push
in
hlt
pop
pop
jb
fistl
mov
add
mov
sarl
add
xchg
sbb
xor
sbb
mov
div
pop
in
pop
sbb
xchg
xchg
sbb
nop
lods
mov
adc
popa
xchg
nop
das
mov
pushf
pop
rol
daa
jle
fbld
pop
add
adc
push
sahf
mov
sti
adc
call
mov
movsb
sbb
add
lret
add
lret
jl
jge
xor
pop
dec
push
lock
sbb
mov
addr16
jp
sub
cmpsl
rcrb
cs
cmpl
aad
fstl
imul
test
sbb
push
sbb
mov
jns
lock
xor
mov
xor
loope
push
pop
cli
xchg
mov
into
mov
sbb
sahf
push
push
dec
enter
stos
lcall
mov
adc
sub
dec
stos
xchg
cmp
mov
mov
idiv
dec
inc
adcb
test
cmp
add
add
pop
push
push
dec
cmpsb
mov
and
iret
add
es
shrl
icebp
fistl
mov
xorb
popf
ret
lss
xorl
pop
shl
call
shll
std
fstps
cli
xchg
fcomp
les
mov
stc
loopne
xor
push
lret
mov
push
out
cmp
xchg
test
movsb
loopne
sbb
jp
dec
sti
test
jno
addr16
add
inc
xchg
dec
xchg
sbb
push
jae
aad
mov
jae
jl
or
std
lret
jo
es
filds
lcall
mov
out
pop
cmp
in
fbld
dec
jg
sbb
xchg
rcl
fcompl
dec
dec
iret
jle
and
add
pop
mov
cwtl
push
ja
push
sub
ret
js
fwait
scas
movsb
fucomi
mov
jg
xchg
jbe
movsl
imul
bnd
jbe
aas
mov
xchg
and
pop
push
stc
fwait
sub
pop
lods
xchg
adc
incb
jl
mov
mov
push
js
aas
mov
push
imul
rolb
xlat
cmp
out
jb
pop
scas
jbe
frstor
sbb
cmc
inc
mov
mov
shll
adc
xor
idiv
mov
jnp
xor
inc
cs
imull
mov
out
pop
jl
xor
add
dec
nop
and
imul
mov
cli
stos
aaa
out
jl
test
pop
or
pop
lahf
in
dec
lods
addl
je
sar
xchg
ja
push
push
cld
adc
lods
test
pop
adc
pop
sahf
pop
adc
aas
shll
adc
pop
shrl
std
sti
jge
shll
into
push
sub
mov
cmpsb
pop
cmpsb
jnp
ja
popl
add
or
into
cmp
pop
stos
push
fidivl
mov
mov
std
mov
jnp
inc
jl
push
adc
jle
ds
mov
cmp
not
test
mov
push
jo
sahf
mov
xor
into
push
ja
push
mov
popf
int
adc
adc
inc
dec
cld
add
mov
pop
push
push
push
jo
pop
adc
mov
ret
pushl
sub
or
mov
insl
xor
aas
or
pop
adc
sahf
pop
adc
addb
sub
sti
xchg
dec
fs
adc
xchg
xchg
ss
mov
out
cld
push
in
push
sbb
pop
adc
das
pop
sti
mov
outsl
ljmp
adc
pop
dec
pop
fcmovnu
adc
dec
cld
mov
int3
test
cltd
enter
cmpsb
repnz
mov
sub
mov
push
add
lds
out
bound
xor
or
mov
adc
jno
adc
aam
cmp
rorb
inc
popa
cmp
xchg
jnp
dec
lods
shl
cli
jae
sub
pop
stos
jb
popa
jne
dec
xor
sbb
arpl
in
pop
mov
cmpb
test
push
out
push
jmp
mov
test
mov
cmpsb
xor
in
cmp
sbb
call
mov
mov
cmp
mov
cmp
lds
fsubl
pop
pmulhuw
dec
jae
test
cmc
imul
or
lea
in
adc
pop
les
out
cmp
ss
jmp
cld
add
mov
xlat
iret
aas
push
xchg
repz
adc
pop
lods
mov
test
enter
pop
int
les
mov
cmp
setb
leave
in
out
jp
cmp
or
test
ror
pop
and
popl
jge
stos
jns
imul
imul
mov
push
cwtl
cmpsb
jle
xorb
pop
mov
cltd
jae
sub
push
xchg
adc
jb
push
or
push
cmp
std
mov
rol
jmp
sbb
push
jbe
scas
xchg
lods
xor
and
dec
into
mov
push
jmp
fisubrl
jbe
jo
adc
sti
sub
jbe
adc
sahf
push
ja
xorb
sbb
cmpsb
fistps
jmp
and
sbb
xchg
movsb
test
sub
out
mov
loope
push
and
xor
mov
pop
pop
shrb
js
xchg
stc
iret
jle
mov
das
movsb
gs
adc
fwait
pop
loop
fwait
push
mov
pop
sub
xor
mov
cmp
popf
xor
dec
repz
icebp
fsubrl
call
scas
ljmp
jle
jnp
loop
aaa
out
pop
mov
jp
sbb
in
popa
xchg
lods
stos
mov
pop
aas
call
pop
adc
fidivrs
mov
push
imull
fcomi
ret
fstpt
daa
fdivs
sti
cld
xor
push
test
xor
out
push
mov
jmp
cmp
mov
add
sar
adc
je
adc
je
pop
stos
lret
pop
push
js
je
je
stc
clc
cmp
aaa
xchg
jbe
mov
mov
inc
shll
mov
add
shl
adc
data16
jp
pslld
cmp
pop
cmp
mov
add
jo
lahf
xchg
jnp
out
lods
and
push
cmp
mov
add
jl
mov
adc
cmp
cmpsb
subb
pop
ljmp
or
inc
mov
and
xor
ret
mov
push
push
hlt
lahf
or
inc
adcb
das
xor
call
pushf
mov
push
pop
cli
mov
jle
adc
jmp
sbb
xchg
arpl
push
and
bound
mov
repnz
cmp
mov
mov
rol
loop
pop
mov
mov
cmp
adc
add
jne
pop
stc
hlt
bound
bndldx
pushf
jno
fcmovb
jbe
add
addl
scas
jb
push
push
out
xchg
xor
or
push
mov
mov
fwait
dec
rolb
add
cmpsl
jnp
daa
cmp
out
add
nop
sbb
imul
xlat
div
mull
push
mov
andb
in
and
xlat
cwtl
lods
cltd
and
push
addr16
cmpsl
fwait
sub
jo
out
pushf
pop
pop
adcb
push
xor
add
dec
pop
inc
mov
cltd
lcall
dec
dec
jnp
daa
jne
dec
dec
rcrl
adc
jnp
jbe
bound
xor
mov
mov
add
push
fsubrl
lods
fildl
dec
jg
push
arpl
stc
cli
cld
jp
sub
sbbb
hlt
sub
sahf
cmp
adc
mov
fdivrs
xchg
mov
adc
jmp
loopne
mov
dec
xlat
or
add
cmp
rcrb
iret
or
push
mov
and
push
pusha
mov
jmp
add
xchg
icebp
in
lods
xor
cs
add
jnp
sti
mov
sub
jno
mov
lret
push
shlb
divl
jmp
lods
add
xor
push
js
lret
dec
pushf
sti
lcall
or
jnp
dec
int3
sarl
cltd
or
jae
xor
dec
add
xor
clc
inc
push
sbb
into
movsl
idivl
ficompl
add
or
jl
mov
adc
lahf
cltd
push
sbb
bound
jl
cmp
je
adc
loope
add
lods
xor
inc
aad
sbb
mov
test
fstp
sub
cli
stos
ret
out
outsl
sbb
sahf
insl
push
out
dec
push
insb
aas
jo
adcb
pop
iret
lods
mov
xchg
loope
push
into
jnp
fwait
inc
test
pop
test
push
sub
cmp
ja
test
mov
jle
out
sbb
fnstsw
push
push
cwtl
jno
adc
icebp
test
mov
push
adc
or
mov
std
add
jnp
jae,pn
aas
mov
pop
adc
shll
xchg
incl
xchg
into
xor
xor
pop
aas
push
cli
dec
add
add
sub
ss
fmuls
lea
mov
aas
das
je
cmp
cmp
adc
sahf
adc
mov
jne
test
xchg
jae
jnp
test
mov
int
test
dec
cmp
je
pop
out
dec
cmpsb
jae
xchg
mov
lahf
adc
je
icebp
js
and
iret
jp
mov
call
jle
popf
xlat
xor
out
call
fidivl
mov
sahf
bound
fs
xchg
mov
les
adc
jle
ljmp
imul
mov
cmc
inc
xchg
ret
repnz
shll
aam
mov
pop
jbe
pop
ja
push
jg
ja
xchg
sbbl
bound
mov
mov
loopne
test
cmp
xchg
mov
xor
jno
repz
sub
sbb
inc
das
jb
pop
cmp
test
in
inc
sub
lods
das
movsb
cmpsb
fildl
mov
push
xor
pushl
pop
stos
pushf
ret
xor
and
mov
mov
sub
or
mov
scas
add
add
outsl
fistpll
mov
imul
push
dec
or
mov
ds
pop
cmp
xchg
gs
les
cmp
dec
fnstsw
stos
nop
out
pop
cmpb
out
sbb
push
jp
xchg
outsl
sbb
xlat
fistpl
fstpt
mov
cmc
jo
jmp
cmp
pop
sub
into
subl
sbb
and
test
imul
xorl
pop
ret
mov
add
scas
movsl
mov
and
jnp
push
jl
mov
lret
aam
ja
shlb
test
jle
cmp
test
shll
loopne
fidivrs
mov
jbe
inc
xchg
dec
xchg
push
jb
push
push
std
add
jge
stc
cltd
repnz
xor
cld
jo
pop
adc
dec
xor
pop
mov
loop
cmc
cmp
lahf
or
scas
push
push
das
push
adc
xor
lcall
adc
icebp
movsl
push
or
imul
cs
jmp
ds
lret
dec
inc
push
xchg
enter
cmp
push
mov
sbb
cmp
fcom
fstpt
incl
and
lret
in
loope
ret
dec
pop
mov
jmp
lock
pop
out
sub
cmp
xchg
cmp
loope
pop
xor
into
in
adc
test
lds
pop
cmp
add
jno
adc
pop
lods
ss
out
xor
xchg
aam
push
adc
cwtl
adc
orb
xchg
cli
or
scas
imul
xchg
xchg
outsl
jp
mov
mov
pop
loopne
push
adc
cmpsl
jp
or
mov
or
stos
enter
mov
movsl
scas
pusha
mov
inc
sbb
dec
loope
inc
adc
sub
jno
adc
cmp
ffreep
inc
imul
lea
das
push
inc
arpl
stos
fisttps
call
mov
mov
fdivl
les
sub
adc
shrb
push
jb
cwtl
pop
roll
xor
insw
test
inc
jp
xchg
pop
fimull
loopne
mov
push
adc
push
mov
in
loop
mov
xor
fwait
insb
mov
divl
sub
or
and
stos
lcall
daa
fdivs
loop
aas
mov
jmp
divb
mov
jno
adc
or
cmc
pop
xor
mov
jle
xlat
out
subb
adc
adc
xchg
into
jmp
adc
aam
push
adc
stos
imul
jge
mov
punpckhdq
lds
int
mov
cmp
or
xor
xchg
and
mov
inc
xchg
push
mov
mov
bound
jno
adc
mov
or
mov
iret
mov
les
add
dec
sahf
adc
pusha
pop
enter
std
inc
add
subl
out
fistpll
add
add
jns
xor
into
aaa
test
pop
adc
jmp
mov
dec
jp
xchg
out
cltd
cmp
add
out
fstpt
xor
test
mov
lds
cmp
es
push
cli
jmp
divl
xchg
add
mov
adc
or
dec
pop
xor
mov
mov
hlt
divl
jae
lods
add
frstor
jecxz
push
jl
out
test
inc
pop
adc
adc
mov
cmp
jp
je
orb
and
fcomip
out
adc
mov
or
mov
add
push
in
bound
xchg
sbb
shl
movsb
add
jne
and
icebp
adc
mov
mov
pop
jl
mov
sti
adc
aas
sub
mov
mov
push
adc
or
xchg
imul
xchg
jg
xchg
or
aaa
out
or
data16
xor
mov
into
lods
imul
and
lds
out
bound
xor
cmp
sub
dec
fwait
xor
insb
sbb
in
mov
and
mov
jle
mov
je
test
xchg
cmp
stc
leave
push
ljmp
sub
movsb
pusha
adc
or
mov
cs
adc
aam
dec
addl
in
movl
negl
pop
jno
add
xchg
mov
mov
add
mov
inc
jmp
push
aam
insl
lret
nop
pop
push
sbb
jecxz
jno
cmp
and
jns
in
add
push
or
in
jne
mov
sbb
or
inc
into
pop
mov
sub
stc
jne
pop
cmpsl
cmp
xchg
sub
dec
test
int
call
dec
sbb
sub
and
push
cltd
mov
xchg
outsb
test
leave
fchs
jno
cld
in
xchg
mov
cli
test
fcompl
imul
in
adc
adc
or
fmul
into
cmpl
loopne
pop
dec
sti
xchg
mov
imul
lret
cs
add
mov
ret
ret
scas
cmpsb
arpl
test
push
push
inc
or
and
inc
mov
jmp
xchg
mov
mov
ljmp
test
dec
dec
dec
sbb
push
sbb
dec
and
mov
cmpsb
dec
rorb
mov
xchg
ret
sarl
xchg
add
pop
aam
ret
cli
arpl
sarl
pop
cld
mov
testl
inc
dec
push
test
test
xor
sbb
popa
mov
mov
fwait
xlat
dec
pop
push
pop
push
adc
lock
ss
outsb
sbb
aaa
and
aas
jp
lock
cmpsb
jp
inc
inc
inc
or
loopne
cmp
pop
cmp
or
outsl
mov
int
jnp
cmp
mov
jg
jg
jne
pop
imul
frstpm(287
aas
ss
or
dec
pop
dec
dec
bound
mov
and
ja
mov
pop
push
mov
or
pop
nop
and
jbe
xor
std
lods
aas
sub
push
loope
xchg
inc
subb
aaa
das
mov
pop
lret
sub
jle
dec
adc
out
mov
mov
aam
jecxz
jp
add
add
push
sbb
rep
mov
sub
js
enter
je
fwait
jae
das
cmpsb
xchg
fwait
fs
out
jne
movsb
pop
sub
or
mov
pop
dec
jg
pushl
imul
xchg
lcall
int
or
out
add
mov
inc
ret
cltd
jmp
pandn
adc
repnz
lods
cmpsb
adc
or
mov
insb
push
mov
mov
mov
and
ret
cmp
or
xor
mov
loope
lahf
mov
sarl
das
cmp
out
dec
mov
iret
jmp
dec
clc
fcmovb
mov
orb
mov
jne
adc
adc
enter
inc
popf
cmp
fisttpll
popa
les
testl
push
pop
push
dec
xchg
push
mov
pushf
cmp
es
sti
inc
je
ret
adc
cmp
lock
lock
mov
jmp
xor
push
loopne
mov
mov
add
mov
shll
push
loopne
inc
xchg
movsb
sbb
data16
or
xor
arpl
mov
push
enter
and
mov
mov
mov
and
mov
shll
or
pop
pop
stos
adc
bound
pop
pop
push
mov
pop
ror
xchg
pop
xor
adc
xchg
ljmp
sbb
cmp
pop
rdpmc
inc
repz
add
xchg
xor
adc
push
push
dec
or
push
ds
lods
jp
dec
and
jae
push
orl
lret
je
adc
push
out
add
out
loopne
jg
xchg
mov
insb
pop
cmp
mov
std
add
push
loope
lcall
int3
ret
add
jno
fs
push
or
mov
add
sbb
test
pop
cmc
js
sub
cmpl
fsubr
fstpt
jp
mov
sbb
in
push
push
xlat
dec
inc
mov
bound
mov
pop
push
sbb
cmp
push
subb
in
addl
pop
dec
pop
je
cmp
mov
mov
dec
cmp
jnp
test
call
mov
mov
rorb
test
adc
popf
imul
jg
sub
int3
scas
testb
jo
rcrb
lock
mov
push
out
and
test
pop
mov
jmp
xlat
ret
mov
push
mov
shll
dec
dec
mov
addb
mov
mov
movsb
out
imul
or
dec
aaa
orb
pop
dec
shl
loope
add
xor
js
mov
inc
jle
shlb
subb
insb
test
sub
shll
sahf
dec
and
pmovmskb
std
add
pop
push
into
xchg
ja
jo
pop
adc
cmp
stos
icebp
lret
sub
ja
es
xor
lods
fwait
mull
mov
movsl
test
jp
clc
dec
cmpsl
mov
mov
cmc
dec
inc
xchg
stos
mov
sahf
cmp
push
mov
imul
dec
cmp
jle
adc
xor
and
mov
mov
pop
and
popf
cmp
scas
mov
aas
sti
je
cli
cmp
outsl
push
stc
mov
push
or
sbb
sarl
daa
insb
push
mov
mov
std
adc
sub
repz
iret
jne
inc
adc
adc
mov
mov
mov
mov
sbb
jns
cltd
ret
pushf
sub
sti
cli
stos
adc
or
je
out
push
sarl
loop
or
std
lods
xor
adc
rcrl
mov
adc
inc
add
fidivrs
imul
fisubl
fists
pop
mov
incb
inc
xchg
and
add
lea
mov
mov
in
cmp
mov
jno
and
repz
ja
or
aaa
ret
imul
adc
push
call
xorb
add
mov
addb
stos
jecxz
nop
push
repnz
vpackuswb
dec
popf
roll
inc
adc
cld
adc
push
pop
xor
fldl
pop
jle
in
cmpsb
scas
and
and
cld
int
xchg
in
cmp
fdivrl
lahf
cmp
pusha
sbb
xchg
add
mov
xchg
cli
adc
mov
sbb
insl
xor
dec
xlat
mov
jmp
loop
cmp
lock
icebp
jp
in
pop
imul
push
ja
loop
sub
xchg
xor
sti
sub
scas
jl
addr16
xor
pusha
mov
ss
fistpl
dec
mov
out
out
out
adcb
mov
notb
adc
out
add
outsl
mov
adc
xchg
mov
inc
and
adc
mov
jno
adc
mov
jno
adc
xorl
xor
cmp
pop
or
push
int
lods
fildl
cmp
insb
pop
aam
dec
addb
jmp
mov
xlat
xor
mov
dec
jns
fsts
xor
pop
sbb
shll
adc
pushf
sarb
lock
call
js
test
sbb
icebp
lods
fmuls
in
ljmp
aas
dec
fidivrs
mov
into
xor
and
jmp
loope
stc
add
int
test
add
jmp
cmp
xor
xchg
and
sub
mov
addb
pop
test
in
les
push
inc
je
shr
push
jp
sub
sbb
dec
jo
add
nop
jmp
std
mov
cmp
sar
add
dec
mov
and
cltd
arpl
mov
adc
int
mov
cltd
add
lods
sti
sbb
stc
lods
insl
inc
cli
push
xchg
and
js
mov
pop
pop
xor
addl
add
orl
popa
mov
insl
or
gs
addr16
jno
daa
ret
pop
imul
xchg
je
dec
mov
bound
fwait
int3
cmc
cmp
cmc
push
mull
call
mov
and
ret
and
pop
decl
loopne
nop
and
cmp
push
push
dec
jnp
push
mov
cmp
jae
sub
rol
cmp
lret
rclb
push
ss
mov
or
ss
adc
xchg
lods
imul
leave
jnp
insl
mov
jae
cmp
push
fwait
dec
xchg
dec
lods
loopne
lret
inc
push
jp
jle
outsl
add
scas
mov
imul
sbb
pop
loop
mov
cmp
add
mov
cltd
out
popf
sarb
shll
adc
fucomi
add
pop
in
and
cltd
out
push
mov
add
inc
mov
mov
jmp
stc
jnp
jbe
mov
mov
int3
jge
mov
xchg
pop
mov
clc
iret
incb
jl
pop
in
cltd
out
adc
push
sub
sbb
mov
jg
mov
cmpsl
adc
and
jo
xor
stc
mov
add
mov
mov
jnp
rcrl
xor
xchg
mov
mov
add
mov
mov
dec
aas
je
or
sti
out
loope
jl
pop
jecxz
cltd
insl
cld
pop
stos
mov
decl
sbb
xor
enter
sbb
bound
push
push
mov
fdivrl
mov
xchg
addr16
pop
call
sub
push
cmp
in
push
push
mov
repnz
mov
push
fsub
xchg
pextrw
dec
sahf
out
mov
out
fimuls
in
or
sub
ds
mov
mull
lahf
dec
jns
ficomps
dec
iret
sarl
sbb
mov
pop
jo
or
repnz
nop
lods
test
mov
dec
xchg
repz
outsb
dec
data16
mov
div
jo
cmpsl
nop
aam
pop
mov
dec
push
sbb
lret
mov
jl
out
lods
sti
insl
mov
daa
sub
jle
lods
mov
jp
outsb
ja
mov
sahf
ljmp
mov
pop
sbb
xchg
mov
js
push
ret
mov
pop
mov
pop
shlb
repnz
loop
imul
pop
push
xchg
gs
adc
out
js
adc
sub
adc
in
add
xor
out
sub
mov
and
icebp
xor
xor
jb
dec
jecxz
mov
cld
fcmovnb
mov
mov
cltd
mov
in
mov
cmp
test
cs
sub
lcall
lods
adc
pusha
mov
inc
sti
idivb
in
cmpsl
aam
cmc
mov
sbb
pop
adc
jb
jl
bound
js
and
movsb
sub
sahf
mov
push
xor
and
cs
mov
out
add
pushf
ljmp
loop
mov
xchg
sub
mov
incb
leave
mov
out
push
idivb
out
dec
inc
mov
test
nop
insb
popa
adc
inc
cmp
jge
jne
jnp
inc
insl
dec
cmp
jbe
push
repz
cmpsb
jge
adc
xlat
enter
in
ss
cmc
sti
daa
xchg
xchg
repnz
arpl
leave
xchg
std
xchg
js,pt
scas
lods
ret
insl
loope
pop
sub
add
std
fs
xor
mov
mov
cmp
into
lods
sahf
pop
adc
fldt
sub
dec
sbb
dec
repz
add
filds
xor
scas
mov
aas
scas
mov
pushf
loop
xlat
jg
sbb
adc
hlt
mov
adc
scas
out
ljmp
adc
fcmovnbe
cwtl
add
filds
pop
iret
jle
sbb
in
mov
out
xchg
pop
or
push
adc
aad
xor
out
outsl
xchg
inc
popf
movsb
sti
mov
cmp
aas
adc
fwait
scas
mov
inc
jl
adc
pop
nop
testl
inc
cmpsb
aas
aaa
add
jo
das
scas
scas
xchg
shlb
fildll
mov
bound
adc
push
adc
pop
dec
push
fs
sti
jbe
repnz
fdivs
xchg
adc
adc
popa
les
adc
adc
cmp
jo
leave
xlat
cmp
push
dec
repnz
sahf
cltd
mov
sub
jno
add
add
xchg
xchg
mov
sbb
sub
lahf
sbb
std
int3
aas
ja
mov
mov
mov
data16
add
je
test
xchg
mov
inc
decl
mov
in
xor
popa
cmp
and
aam
and
std
int3
aas
jbe
jbe
add
xor
popf
repz
pop
dec
pushf
pop
ret
mov
jne
jbe
out
rorl
into
cld
inc
mov
mov
mov
insb
cld
xchg
sti
scas
hlt
mov
or
cmp
in
repnz
push
arpl
mov
pushf
cmp
in
sti
ljmp
fists
and
or
mov
adc
adc
adc
or
cmp
sub
sub
dec
loopne
jge
cmpsl
stos
int3
loopne
jp
stos
mov
dec
ss
or
in
test
imul
push
dec
jno
sbb
into
cmp
lods
jns
sti
mov
mov
inc
cltd
mov
add
push
jb
stc
cmp
inc
mov
lds
cmpsb
stos
in
nop
test
int
push
out
mov
sub
jl
scas
push
cltd
scas
gs
xor
inc
dec
rclb
or
and
xor
jl
push
ss
jmp
sbb
fistpl
or
gs
sarl
in
cmp
into
je
je
push
cltd
mov
lods
push
add
fs
sub
das
push
jb
addr16
imulb
push
lcall
cmpsl
sbb
jl
scas
je
xchg
inc
ja
mov
idiv
scas
jno
push
mov
in
mov
sub
mov
pop
mov
push
test
push
jae
sub
and
mov
incl
lock
psllw
lea
jmp
rolb
pop
adc
inc
xchg
icebp
js
sahf
pop
adc
xor
mov
sub
add
jmp
lods
pop
inc
repz
out
cmp
jl
orl
aad
inc
jo
pop
dec
in
pop
sahf
ja
hlt
push
in
or
int3
push
dec
call
sub
add
cwtl
add
int
pushf
xchg
xor
shl
or
mov
out
fwait
push
in
fdivp
push
xor
push
test
mov
pusha
mov
mov
icebp
pop
sbb
inc
in
push
fcomp
push
cmp
je
dec
jno
pop
pop
xor
int3
mov
mov
jae
mov
mov
mov
sub
arpl
and
xor
loopne
jmp
dec
fists
mov
sub
dec
nop
imul
out
inc
stos
loop
jg
sub
es
sbb
sbb
add
fcomps
add
or
dec
lock
xchg
jbe
mov
pop
test
hlt
mov
adc
repz
lods
sbb
ljmp
cmp
divb
xchg
or
mov
mov
dec
jns
add
dec
stos
je
pop
dec
cltd
aaa
or
mov
mov
pop
lret
fsubrs
inc
insb
stc
mov
pushf
xlat
push
icebp
aaa
jl
out
mov
jo
jmp
mov
dec
push
arpl
mov
jl
add
nop
and
mov
or
push
cld
jo
shrb
or
daa
pop
sub
cmp
adc
pop
iret
ja
into
jl
scas
lret
stc
mov
adc
pop
faddl
in
je
pop
add
mov
mov
out
les
push
lods
dec
inc
sub
mov
loope
cmp
add
add
in
js
es
mov
lea
popf
orl
adc
test
or
xorl
sbb
cmp
sub
cmp
scas
jbe
push
lret
nop
push
stc
imul
sub
daa
pop
cmpsb
inc
addb
scas
je
adc
cmp
into
push
rcl
xor
cld
lahf
jmp
addr16
sub
pushl
cmp
sti
dec
cwtl
incl
repz
jno
aad
dec
pop
adc
insl
cld
push
in
fs
mov
repz
in
fidivl
jbe
iret
pushf
cmp
out
mov
and
sub
dec
pop
add
jo
adc
lock
cmp
xchg
jge
dec
mov
rcll
lock
adc
xor
call
jno
add
lahf
xlat
inc
shll
mov
cmp
mov
cmc
pop
cli
mov
aaa
dec
call
mov
call
outsl
add
jp
aaa
adc
notl
je
popf
adc
sub
aas
movsl
scas
add
ss
sub
adc
mov
arpl
lods
out
xlat
sbb
test
outsl
or
shlb
in
and
std
mov
push
aam
rcrl
add
adc
xchg
sbb
or
cltd
lods
xlat
loope
sti
jmp
imul
test
add
cmp
xchg
arpl
mov
fnstcw
adc
pop
rorb
mov
add
inc
or
hlt
jne
std
mov
inc
in
ljmp
nop
loop
push
lret
push
movsl
rol
scas
jnp
scas
mov
incl
in
stc
push
outsl
cmp
mov
push
mov
movsb
push
xor
popf
cs
lea
ljmp
sub
fldt
jae
push
xchg
push
ror
les
addb
xor
decb
lock
and
in
sbb
cmp
bound
push
jle
add
mov
mov
mov
enter
sbb
aad
testl
adc
loop
xor
fdivl
loop
ljmp
data16
lds
repz
rcr
cli
adc
ja
jb
cmpsl
adc
int3
nop
cmpsl
arpl
add
jecxz
pop
pop
xchg
scas
clc
cltd
leave
cli
out
mov
push
jns
test
add
xchg
jmp
test
sbb
mov
xchg
loopne
ret
and
pop
xchg
lds
sahf
dec
and
dec
sub
xor
lods
mov
sbb
lret
jbe
pop
and
push
imul
mov
dec
cmp
lahf
inc
insl
pop
pop
mov
divl
ss
cmc
fiaddl
lcall
je
add
pop
pop
cmp
movsl
call
cmpsb
sti
or
push
jns
sbb
es
loope
push
in
addb
dec
cld
lock
div
jg
fsubs
xchg
test
jle
data16
add
outsb
and
sbb
jnp
sbb
into
popf
cmp
jbe
cld
stos
xor
je
sti
cld
ss
incb
in
xchg
or
xor
sub
lea
dec
fwait
mov
stc
je
stc
test
cwtl
xor
out
popa
das
pop
ret
shl
lahf
mov
inc
xorb
cmp
mov
fidivrs
incl
popf
cmp
add
in
sub
or
loope
xchg
pop
lock
inc
rcl
mov
dec
test
mov
sbbb
add
mov
push
sti
pop
idivb
es
mov
push
pop
mov
pop
mov
aaa
mov
fdivl
pop
jge
push
imul
repnz
movsb
pushf
mov
sbb
mov
sub
cmp
mov
into
and
push
ljmp
inc
or
in
adc
mov
scas
mov
adc
xor
pop
pop
dec
in
add
sbb
out
popf
cmp
and
icebp
mov
pop
addr16
or
out
jb
repnz
xchg
and
xor
mov
jp
test
cmp
std
scas
pop
sbb
add
cwtl
incl
cmp
ds
jo
pop
adc
add
add
sub
push
jle
mov
xor
pop
lods
sbb
idivb
sub
cmp
into
pop
jl
inc
sarl
stc
jecxz
mov
mov
jl
jg
cli
div
int3
ret
out
push
jg
xchg
xor
sbb
pop
lcall
xor
or
out
in
pusha
test
mov
mov
aad
xchg
lret
cmp
pop
ret
pop
pusha
xor
xchg
adc
int
xchg
adc
pushf
pop
pop
xorb
lret
iret
or
xor
pushf
je
mov
pop
mov
xor
jb
and
and
mov
mov
lret
aad
out
cmp
or
ds
and
or
dec
stc
std
and
test
rcrb
jns
movq
mov
mov
test
sub
fucomip
dec
lods
adc
mov
lret
lret
jl
sub
sbb
jno
adc
and
insl
lret
xchg
push
push
arpl
out
fmulp
pop
xor
pop
adc
push
dec
ja
mov
test
roll
cwtl
mov
imul
shll
dec
sahf
cmp
mov
fimull
inc
sbb
clc
push
sbb
push
fdivl
icebp
dec
call
cmp
inc
cmp
add
adc
pop
pop
mov
and
sbb
je
or
sub
jne
movsl
iret
aas
mov
daa
pop
loope
aad
sub
sahf
aad
dec
dec
andb
gs
and
add
pop
gs
scas
hlt
inc
xor
and
jl
shr
mov
in
dec
fidivl
jne
mov
shrb
inc
push
sub
xchg
jle
and
dec
xchg
filds
jo
fwait
pop
pusha
repnz
inc
ds
adc
cmpsb
and
sub
shrb
iret
movsl
xor
inc
ret
shrb
rcrb
ret
jae
or
into
xor
add
sub
dec
lahf
cmp
sub
pop
out
movsb
popa
pop
xchg
jge
lock
std
fstpl
xchg
pop
aas
and
hlt
push
and
inc
divl
mov
sbb
ret
aad
fwait
and
test
cmp
xchg
das
sub
xor
mov
jae
or
xor
adc
insl
outsl
pop
aas
pop
pop
xchg
jb
mov
sahf
push
shll
lcall
xchg
incl
mov
adc
jns
or
sub
imul
jp
movsb
mov
daa
pop
jne
cld
insb
mov
cs
rcrl
and
mov
jb
mov
push
stc
jg
mov
pushf
mov
ret
or
mov
mov
jbe
push
outsb
sti
mov
xchg
mov
mov
std
cltd
ret
dec
pop
bound
mov
mov
pop
pop
ja
add
test
jmp
mov
scas
rorb
pop
pop
and
aas
mov
add
aam
add
jmp
gs
adc
daa
pop
lods
sahf
pop
adc
dec
lods
sahf
pop
adc
mov
xchg
mov
pusha
mov
cwtl
incl
std
js
lds
dec
pop
adc
fwait
shlb
stc
movsb
pop
or
cmc
fisubl
inc
dec
or
repz
sbb
xor
push
rclb
das
pop
int
xlat
addr16
jb
cmpsb
popa
xchg
data16
mov
inc
bnd
mov
mov
push
adc
mov
xchg
std
jns
adc
adc
adc
add
push
loopne
popf
cmp
and
add
sub
out
adc
adc
jno
insb
adc
sub
insl
pop
cli
out
mov
pop
test
aam
in
jbe
shlb
fisubrl
fldt
outsb
mov
jae
adc
sbb
dec
fldcw
into
fsubrs
and
out
mov
xor
daa
es
adc
insb
xchg
and
push
sbb
pop
adc
cltd
mov
push
leave
xrelease
pop
xor
fwait
mov
ret
stos
int3
push
sbb
sub
test
mov
push
push
adc
mov
jcxz
cmp
hlt
adc
rcll
mov
sahf
cmp
add
ljmp
pop
cli
pop
mov
test
dec
pushf
popa
popf
dec
or
aas
push
jae
adc
movsb
fmull
push
adc
push
adc
push
enter
insl
mov
test
sbb
dec
jmp
es
jg
outsb
icebp
inc
jae
adc
ljmp
mov
scas
pop
jmp
push
jecxz
lea
repz
incl
push
dec
subl
dec
add
or
jo
shrb
adc
stc
dec
out
jle
and
fnsave
mov
in
jno
js
addl
jg
dec
cltd
sub
int3
rolb
int
and
jp
add
cltd
ljmp
out
fsubr
bnd
inc
pop
jb
mov
stos
pop
pop
lret
mov
mov
js
out
or
aad
mov
bound
jl
adc
xchg
rolb
les
addr16
inc
push
and
dec
les
pop
push
sar
cmpsl
xchg
popa
lret
and
dec
aaa
xchg
xchg
push
sarl
scas
outsl
cmp
pop
or
rcr
push
xor
add
adc
or
cs
push
pushf
jo
pop
adc
pushl
inc
addr16
movsl
mov
fisubl
lods
dec
mov
movsl
shll
mov
pop
adc
shrl
insl
fcmovbe
add
outsb
and
daa
lods
jecxz
sub
movsb
add
mov
nop
scas
fistpll
out
add
sub
sbb
stos
and
aas
add
mov
or
outsb
push
addl
cmp
int
pop
mov
repz
sub
lods
or
dec
adc
xorb
std
jo
push
cmp
int
out
sbb
bound
ds
aas
cmpsb
mov
jbe
push
loop
mov
mov
out
sbb
sub
jne
dec
lret
ja
mov
adc
and
sub
push
and
imull
xor
mov
add
cmpsl
movsb
jo
cwtl
fnstcw
mov
sbb
push
lret
mov
pop
idivl
and
push
addb
aas
cmpsb
cmpsl
mov
jnp
and
imul
mov
stc
in
in
gs
cmp
jb
inc
push
scas
fmull
adc
in
mov
mov
inc
fdivrl
ja
shlb
mov
aas
push
inc
fadds
add
jo
sub
repnz
cmp
sbb
idivl
push
call
pop
outsb
adc
xor
inc
pop
xor
add
jo
sbb
repz
push
ja
mov
adc
popf
cmp
jb
addr16
adc
inc
sub
mov
xchg
cwtl
jne
aad
sar
lds
mov
filds
add
adc
js
cli
idivl
enter
xor
ds
lds
mov
cmc
xor
add
add
jb
sbb
jnp
in
pop
imul
pop
fldcw
mov
jmp
jbe
in
je
mov
xor
sar
in
aam
in
aad
mov
mov
mov
mov
inc
in
mov
loopne
adcl
ja
push
pop
mov
jl
out
jmp
out
inc
loopne
popf
daa
xor
mov
leave
mov
ror
daa
aaa
lods
daa
sub
pop
xchg
dec
lods
lret
cs
mov
repnz
ss
pop
dec
aas
xchg
or
aaa
orl
cmc
ret
stc
stos
xor
enter
fcomps
fbld
sahf
ds
mov
cs
inc
les
data16
add
xor
loopne
jg
dec
mov
adc
dec
add
outsb
sbb
xor
inc
shlb
sbb
repz
mov
js
mov
sbb
test
popa
dec
mov
cwtl
lret
inc
imul
pop
lret
dec
jnp
loopne
cmpsl
out
sti
jo
movsl
and
das
pop
in
scas
mov
loop
leave
and
movsb
loope
dec
or
lds
loop
xor
xor
mov
stos
xchg
cwtl
mov
xchg
sbb
leave
or
jns
test
cltd
pop
xlat
push
ja
inc
mov
add
adc
mov
xchg
movsb
inc
call
pop
cmp
cmp
pop
adc
ret
fs
fcmovne
imul
push
mov
movsb
jge
adc
jae
adc
jl
mov
aas
lds
cli
jg
sub
xor
adc
int
out
and
jmp
and
sub
fildl
stc
add
lods
push
xor
in
and
lret
add
mov
add
mov
sahf
mov
hlt
pushf
and
loop
push
inc
insl
cli
pop
pop
mov
aad
jo
std
fistps
jmp
call
dec
in
aam
shlb
jp
mov
je
test
repnz
cmpsb
mov
pop
pop
jae
adc
das
sbb
das
movsb
scas
gs
add
cmp
xor
shlb
in
cmp
clc
fwait
loope
or
jg
pop
fwait
dec
or
or
divl
adc
add
mov
ficoms
push
xchg
mov
mov
lds
push
adc
shufps
mov
dec
in
or
lods
aaa
cmc
out
add
inc
or
in
jo
cli
mov
out
prefetcht0
arpl
adc
sub
call
loope
pop
or
dec
outsl
push
stc
lods
mov
cmp
jns
les
mov
je
cmp
es
nop
push
mov
mov
mov
mov
cmp
aaa
mov
mov
mov
shl
sarl
je,pt
ja
push
adc
daa
ja
mov
pop
jo
pop
adc
cmp
addr16
into
mov
std
sub
mov
jle
pop
inc
inc
addb
mov
int
jb
adc
js
and
fsubrp
aas
lcall
std
jae
imul
or
xor
fwait
and
jbe
xor
ljmp
daa
mov
and
jns
clc
int
pop
sahf
cli
imul
pop
je
sub
jbe
mov
rolb
add
push
repnz
jbe
adc
shr
or
sahf
dec
insl
aaa
lods
js
out
fadds
mov
les
pop
mov
jp
add
add
lods
fistpll
pop
arpl
popf
cmp
jmp
ljmp
dec
xor
pop
test
rolb
das
mov
sub
mov
inc
or
jbe
dec
ja
in
or
es
stc
xor
jns
jns
dec
lahf
mov
lods
adc
std
sti
cli
je
es
inc
andb
push
mov
data16
fbstp
out
or
jno
cmpsl
mov
mov
push
jmp
loope
cld
adc
jbe
mov
cli
mov
push
mov
sbb
dec
pop
cmpb
inc
jnp
je
arpl
inc
and
adc
aaa
cvttps2pi
dec
add
std
adc
fs
imul
push
xchg
add
stos
fstps
or
mov
ja
and
sub
inc
inc
xor
mov
sbb
push
fwait
mov
cmp
lcall
call
je
inc
sbb
enter
testb
mov
cmp
mov
ret
std
movsb
inc
xchg
aas
jge
push
or
adc
arpl
movsl
inc
xchg
xor
imul
stos
jp
in
xor
test
adc
ljmp
push
andl
jmp
jmp
xor
mov
xor
sub
mov
lock
dec
mov
outsl
xchg
int
movsl
lods
or
adc
mov
loopne
sbb
sti
jnp
les
in
mov
aaa
lret
int3
sbbb
push
rclb
jbe
js
in
in
fwait
xchg
inc
dec
movsl
or
pop
xchg
cmovae
dec
cmp
pop
int
insl
and
cli
mov
fcomp
scas
iret
or
mov
movsl
and
and
cmp
jl
sahf
push
lret
std
fcmovu
fisubl
shlb
xor
mov
pop
add
cwtl
in
add
cmp
jl
sbb
fisttpll
cmp
mov
cmp
and
push
pop
xchg
adc
aaa
movsl
loope
inc
xor
adc
xchg
adc
or
adc
js
in
adc
pop
data16
adc
jge
repz
roll
lret
sub
sub
aaa
scas
fisubs
pop
je
or
movsl
imul
lahf
test
or
mov
xor
enter
ds
int3
sbb
adc
xor
mov
std
sti
divb
add
add
adc
loopne
shll
xchg
push
mulb
add
push
leave
test
pop
jmp
lds
mov
push
adc
jb
adc
add
push
enter
pop
sbb
shlb
mov
add
mov
adc
sbb
push
or
into
shlb
das
pop
lret
jl
push
adc
cli
inc
cwtl
jb
adc
inc
and
mov
sahf
push
icebp
pushf
xor
jbe
mov
xor
movsb
fwait
jbe
std
sti
mulb
cmp
fidivrl
stos
xchg
std
pop
stc
ljmp
ret
jb
mov
adc
add
cmp
shr
repnz
dec
mov
mov
mov
fs
mov
add
adc
push
dec
mov
aaa
xor
outsb
subl
adc
xor
add
add
lahf
jg
dec
roll
push
adc
xlat
xor
jb
daa
push
test
or
pop
rclb
mov
rorb
mov
pushf
mov
adc
cmp
cmp
adc
inc
stc
fistpll
loopne
jns
sub
xchg
mov
je
in
fs
jmp
fdivrs
adc
jp
movsb
lods
cmp
ss
jle
fldt
mov
ror
xchg
jl
fcmovb
arpl
adc
inc
js
mov
out
nop
paddd
jecxz
sahf
pop
dec
rcr
inc
xchg
xlat
int3
or
aas
xchg
mov
or
int
mov
sub
sbb
sbb
out
out
aaa
sub
dec
jno
in
out
xchg
sbb
test
stos
xor
xchg
dec
jne
lods
pop
cmp
inc
xor
xchg
sbb
cmp
aam
sti
xlat
push
mov
into
xchg
mov
add
dec
and
mov
arpl
inc
inc
or
or
add
rolb
xor
out
push
adc
pop
cmp
sub
lahf
add
mov
dec
divl
jae
loope
cmp
ret
add
pop
pop
pop
mov
ret
mov
int
xor
sub
dec
outsb
lret
sti
lock
or
push
test
mov
mov
sub
int
or
aas
jp
test
jmp
or
aam
xor
gs
jb
cmc
pusha
ret
inc
sbb
add
mov
cli
mov
idivb
sarb
mov
pop
xor
add
inc
pop
loopne
lods
pop
insl
frstor
lret
repz
cmp
jnp
add
inc
bnd
scas
test
std
imul
insb
and
xchg
xlat
add
fcoms
mov
int3
and
loope
das
mov
pop
pop
fisttps
repz
xchg
add
popa
das
jl
cmp
aad
add
adc
cmpsb
test
sub
dec
pop
adc
xor
aad
ds
ret
adc
mov
mov
fiadds
out
cli
mov
divl
ss
adc
dec
xchg
add
fiadds
mov
fbstp
pop
or
and
fwait
and
cmp
fs
jg
rcl
rol
cmp
hlt
cwtl
mov
mov
dec
ljmp
adc
rorb
addr16
pop
pop
insl
xchg
add
insl
cli
mov
and
ja
mov
xchg
pop
pop
sbbb
mov
cld
mov
sub
fldcw
push
out
xchg
aaa
stc
cli
inc
mov
mov
lahf
and
lock
aaa
mov
mov
jle
xchg
mov
ja
orb
xor
xchg
and
aaa
testl
pop
dec
gs
jmp
jg
ljmp
xor
test
xchg
cld
jno
popf
mov
inc
sahf
clc
mov
fidivrl
xor
test
xor
fidivrs
repnz
mov
stos
jnp
and
jge
jmp
outsl
js
push
ljmp
in
stos
iret
jmp
ds
mov
ds
xchg
inc
imull
push
daa
hlt
bnd
mov
fstl
out
adc
sbb
pushf
fs
movsl
scas
int
ja
lcall
mov
adc
adc
in
sbb
pop
mov
in
sub
xchg
cli
xchg
ljmp
cld
aas
lods
adc
adc
in
sbb
jne
loopne
shl
lds
nop
ljmp
add
add
std
push
icebp
addr16
leave
jno
mov
cwtl
mov
pop
loop
int
mov
add
jl
aad
testb
dec
sbb
push
ja
lea
dec
popf
cmp
xchg
push
xchg
jb
mov
mov
mov
sbbl
lock
jl
stos
lcall
cli
push
or
mov
rcl
mov
mov
mov
lret
movsb
cmp
repnz
mov
iret
roll
xchg
rorb
sti
divl
jecxz
adc
in
mov
xchg
insb
mov
ret
dec
mov
jl
fs
add
pushf
xchg
fldenv
cmp
mov
mov
cwtl
add
addr16
fs
lea
lds
cmpsb
mov
jno
add
adc
xchg
lahf
fidivs
dec
fidivrs
pop
adc
inc
sub
and
inc
icebp
and
xlat
xchg
mov
cmc
clc
ljmp
mov
js
and
jnp
hlt
add
daa
push
adc
adc
push
inc
mov
cmp
mov
mov
jns
jl
icebp
icebp
bnd
hlt
adc
adc
xchg
insl
jecxz
mov
mov
nop
sub
adc
or
push
cmpsl
test
sub
adc
xor
push
dec
jo
push
adc
push
aas
cmp
and
add
mov
out
xchg
notl
dec
shlb
fidivrs
daa
lea
cmp
ja
mov
test
cmc
jmp
les
out
xchg
fildl
dec
sbb
pushf
mov
jne
jg
popa
jg
popa
mov
or
xchg
jb
aas
xchg
pop
pop
sbb
shlb
inc
push
sbb
stc
cmpsl
out
inc
aaa
push
loopne
aam
pop
insl
cltd
lret
int3
notb
mov
adc
mov
pop
adc
cli
lahf
and
es
dec
fdivs
dec
push
mov
mov
adc
insl
popa
jp
mov
mov
sub
inc
dec
pop
sbb
xlat
pop
xchg
std
push
pop
adc
jb
adc
adc
adc
xor
aad
test
les
adc
fisubs
inc
cmp
xor
sub
lock
and
mov
xlat
les
fstpt
cmp
lods
fwait
je
mov
pop
adc
imulb
out
or
push
ds
fcompl
repnz
adc
fcomps
jmp
ds
xchg
mov
sahf
pop
adc
mov
xchg
and
repz
iret
adc
cmpsb
mov
and
add
cld
adc
adc
xor
pavgb
pop
mov
mov
adc
inc
xchg
sbb
js
or
and
xor
lea
je
pop
ljmp
mov
push
add
add
stos
pop
fisubs
add
adc
les
pop
lret
fs
stos
cli
aas
mov
int
adc
imul
fnsetpm(287
cmp
cltd
sbb
mov
cmpsl
and
les
sahf
pop
adc
ljmp
rcrb
fsubl
sub
in
pop
call
mov
out
cli
jne
lcall
mov
sub
repz
insb
sbb
pop
adc
jmp
sahf
pop
adc
cld
adc
adc
push
roll
aas
mov
jnp
mov
or
xor
prefetchnta
ficompl
mov
mov
repnz
std
sti
mulb
add
adc
jl
popf
cmp
push
pop
mov
mov
sub
pop
std
ja
or
push
mov
sub
repnz
adc
pop
inc
add
mov
stos
push
std
sar
mov
mov
shl
sarl
push
cli
jb
imul
push
mov
mov
jmp
pop
jle
xchg
adc
and
mov
xorb
adc
inc
movsl
inc
add
cmp
call
cltd
lret
cmp
dec
xchg
xor
mov
repz
jmp
lods
pop
cltd
lods
outsb
arpl
or
lret
or
arpl
inc
jmp
jmp
scas
fldt
pop
cmpsl
inc
push
mov
push
xchg
or
xchg
stc
aas
pop
push
pop
pushf
mov
sti
mov
enter
sub
cs
jle
mov
lret
cs
mov
sahf
cmpsl
pusha
jge
cli
pop
jns
repz
arpl
sbb
sti
stos
sarw
out
mov
lds
stos
jb
in
jl
or
jg
imul
sub
icebp
lcall
scas
xor
stc
mov
xor
xchg
in
or
mov
push
mul
shr
stc
lret
jnp
outsb
and
sub
mov
cmpsl
cltd
out
mov
mov
inc
xchg
push
xchg
out
dec
or
scas
sbb
addr16
xor
jmp
nop
lret
inc
add
mov
jl
test
mov
xor
cmp
inc
cmp
sub
sub
data16
add
pcmpeqw
outsb
das
pop
pop
js
rcll
cmc
xchg
xor
and
inc
xchg
gs
lea
sub
or
mov
mov
inc
pop
fld
ss
idiv
cmp
push
mov
cltd
cld
scas
das
mov
cmpsl
inc
out
movsl
mov
lods
aaa
pushf
imul
dec
imul
dec
and
shlb
ret
and
sub
jb
mov
int
inc
iret
pop
loop
adc
lret
les
push
es
sub
xchg
xchg
das
cs
cmp
push
scas
movsl
and
push
lahf
push
int3
cmp
movsb
fisubs
imul
insl
inc
in
xchg
mov
aas
adc
les
mov
xor
mov
sub
stos
rorb
mov
fdivrp
iret
stos
in
cli
push
mov
jge
jbe
pusha
cmc
cltd
pop
mov
jo
jne
leave
mul
stos
lods
or
pop
hlt
aas
mov
jne
jg
daa
jnp
mov
test
inc
maskmovq
negl
clc
into
rclb
roll
fistpll
loope
xor
in
test
xor
mov
je
mov
sub
lds
sti
aaa
icebp
addb
add
in
into
mov
adc
inc
popf
bound
mov
xor
int3
ss
cli
je
fs
mov
mov
mov
iret
cmpsb
dec
popf
cmp
out
cmp
ljmp
std
push
inc
sbb
cmp
cmp
cmp
mov
xchg
test
in
jle
cwtl
ficomps
dec
inc
xchg
fmulp
mov
pusha
aad
bound
mov
add
pop
jne
sti
imulb
mov
xor
into
push
jle
loope
pop
mov
insb
cld
push
stos
mov
sbb
jle
cwtl
ret
pop
jl
cli
mov
add
pop
push
pop
jae
pop
fnstenv
adc
les
popf
mov
es
call
sbb
add
push
stc
jnp
xor
aaa
scas
jbe
jnp
pop
out
jg
xchg
xchg
adc
jo
sar
adc
ja
fwait
fwait
ja
pop
add
out
push
lock
arpl
jmp
cmp
mov
jle
sti
stc
ja
shll
stc
xchg
lds
jb
sub
outsl
je
and
push
add
add
in
scas
fstpt
movsb
icebp
jo
jl
inc
popf
jmp
add
data16
mov
xor
cltd
divl
lods
fs
ds
pop
scas
test
pop
fildl
xor
mov
and
pop
adc
fistpl
sub
cwtl
add
sub
add
adc
int
test
in
mov
xchg
sub
jbe
dec
push
xchg
lret
aaa
xchg
cmpsl
out
push
dec
pop
cli
aam
jo
nop
outsl
xor
adc
add
inc
xor
jl
adc
addr16
popa
sahf
stc
imul
and
dec
xor
icebp
xor
or
mov
push
arpl
lcall
lcall
mov
mov
xchg
test
scas
cmp
add
inc
push
inc
jo
fisubrl
sub
pop
data16
clc
test
mov
out
inc
loope
fmuls
bound
xchg
out
xchg
daa
lds
out
xchg
mov
cmpsl
addl
push
sub
mull
dec
sub
sub
jnp
mov
cmp
pop
cmp
dec
cmp
call
pop
ret
das
mov
arpl
hlt
cmp
mov
mov
loop
xchg
xchg
arpl
sub
fiadds
dec
mov
mulb
sbb
ljmp
insb
fwait
cmc
pop
bound
bound
dec
sbb
in
arpl
out
imul
xchg
and
inc
es
mov
fcomp
mov
mov
dec
sahf
imul
lods
xchg
sub
sub
dec
mov
out
rcrb
adc
leave
or
and
xor
sbbb
mov
sbb
push
pop
or
xchg
push
jecxz
lods
push
sub
out
ljmp
ret
mov
xor
movsl
cltd
and
pmulhuw
hlt
jbe
xlat
add
leave
jne
iret
jle
es
cmp
jae
push
or
push
and
fwait
dec
inc
iret
test
cmp
push
push
dec
and
aas
cmp
jnp
push
adc
mov
dec
cmp
imul
cmp
cmpsb
in
or
push
movsb
ss
mov
mov
adc
or
xor
mov
pop
pusha
inc
addb
pop
adc
jge
negb
aaa
aas
jecxz
andl
sub
or
jmp
mov
je
aaa
push
bound
into
aaa
xor
mov
pop
ds
lods
sub
les
mov
jbe
aas
stc
adc
xor
insb
fidivrs
lds
adc
push
jno
call
mov
mov
xchg
inc
xchg
mov
sarl
push
sub
cld
mov
sti
jbe
push
adc
cmp
fidivl
xor
sbb
sbb
pop
ljmp
mov
sti
jbe
push
adc
cmp
push
stc
sbbl
jmp
and
push
mov
add
jbe
cli
xchg
dec
cmp
jge
mov
push
sub
push
cltd
mov
pop
push
mov
add
jbe
or
mov
sbb
ss
xlat
sub
push
rclb
mov
stos
js
jmp
adc
notrack
mov
insl
ss
add
je
repz
or
clc
mov
outsl
aaa
arpl
test
sub
outsl
push
clc
pop
pop
pusha
add
add
fs
dec
cmp
jg
mov
adc
cs
mov
sbb
js
add
pop
and
dec
ja,pt
lret
test
push
dec
dec
cltd
aas
inc
adc
lds
movb
ljmp
mov
xchg
push
repz
clc
push
mov
push
ja
jle
pop
fsubrl
and
int3
out
cs
and
ss
mov
push
or
cltd
add
inc
push
outsl
aam
rcrb
and
mov
pop
cwtl
xlat
das
push
dec
in
movb
jge
fimuls
adc
imul
mov
lods
or
sbb
pop
mov
ret
inc
inc
ds
jge
cld
lcall
lods
rep
dec
negb
add
dec
xchg
aad
add
ljmp
mov
fstl
add
ss
cmpl
movsb
cmp
jns
jnp
hlt
sbb
push
imul
jb
in
aad
push
push
scas
data16
leave
xchg
pop
int
mov
lods
sbb
sbb
shl
lret
cmp
sub
cmpsl
stos
repz
loop
vcvtss2sd
push
mov
das
sbb
pop
pop
pmaxub
xchg
mov
loope
js
dec
dec
mov
dec
test
jle
cmp
pop
enter
std
loop
mov
push
and
mov
mov
insl
mov
div
orb
push
pop
cltd
mov
sarb
sbb
push
mov
jle
mov
stc
cltd
push
add
shll
fstpt
sti
lcall
xchg
jbe
mov
scas
jbe
cmpsl
ja
out
cld
in
out
cmp
inc
xor
inc
push
fisttpll
jbe
jno
dec
inc
mov
jmp
pushf
divl
int3
push
xchg
add
cs
and
mov
outsl
leave
push
jb
mov
cmp
icebp
jns
or
push
imul
sbb
das
pushf
rcll
add
cld
mov
mov
cmp
sbb
mov
xor
mov
out
outsl
stos
lahf
push
fldcw
stos
mov
pushf
mov
xchg
scas
adc
cld
sahf
pop
or
out
iret
lret
fs
xor
mov
sahf
pop
ss
push
push
movsb
pop
or
add
imul
sbb
dec
cld
out
mov
cmp
mov
and
lods
lods
mov
xor
hlt
mov
imul
jge
lret
cmp
and
cli
xor
inc
fcom
pushf
sub
jnp
fs
push
orb
mov
and
mov
mov
mov
jle
pop
inc
dec
addb
xor
adc
dec
in
push
repnz
std
lods
sbb
mov
sti
jbe
adc
cmp
push
stc
xchg
sbb
movsb
cmp
cltd
mov
add
mov
addl
test
xchg
xor
mov
mov
push
cli
outsl
jp
mov
aad
div
mov
ja,pt
stc
jne
mov
add
fisttpll
bound
loope
ss
pop
jg
shll
ret
lcall
mov
test
push
scas
cli
aas
mov
aam
icebp
clc
stos
in
scas
in
mov
mov
mov
test
mov
xor
add
adc
dec
add
inc
dec
add
add
adc
dec
add
mov
dec
add
pop
dec
add
orl
fisttps
adc
dec
add
fisttps
adc
dec
add
orl
adc
add
jbe
add
pop
dec
add
fisttps
adc
dec
add
xchg
dec
add
mov
add
loop
add
sbb
add
add
aas
dec
add
bound
loop
add
orb
mov
rorl
loop
add
sub
add
test
scas
je
fdivrs
sbb
xor
ds
mov
pop
out
outsb
mov
mov
mov
lods
movsl
daa
xlat
mov
pop
repz
ret
negl
mulb
jle
or
ljmp
and
addr16
xor
pushf
push
cmp
xchg
lock
mov
out
out
fbstp
outsl
mov
sbb
sbb
cmpl
fcoms
and
mov
xor
inc
aad
shll
clc
mov
xor
xor
into
push
popa
jnp
aaa
sti
inc
jae
out
js
outsb
cmpsl
inc
loopne
icebp
lods
cwtl
dec
inc
push
mov
mov
sar
out
aam
test
mov
sbb
insl
xchg
fwait
aad
sbb
imul
push
loopne
adc
femms
ja
mov
xorb
pop
ds
inc
ja
cltd
push
push
sbb
icebp
out
outsl
ja
lock
movsb
dec
addr16
fistpl
adc
movsl
ja
adc
inc
notl
or
xchg
sbb
mov
push
movsl
mov
push
stos
movsb
jp
push
rcrb
sub
es
xchg
jle
jb
arpl
pop
orb
sarl
pop
subl
into
pushf
movsb
xchg
pop
cmpl
ret
into
mov
mov
rolb
and
mov
jle
adc
sti
adc
idivl
push
push
dec
pop
lret
dec
pop
cltd
add
mov
stc
mov
jp
jl
out
aas
add
ds
jle
imul
mov
mov
fxch
lahf
mov
shlb
mov
test
testl
cmp
jmp
adc
pop
daa
pop
mov
inc
int
shl
add
or
sbb
jg
aam
jge
or
pusha
xor
mov
movb
aas
and
sbb
mov
flds
repnz
shlb
jle
and
and
dec
mov
sub
mov
jb
inc
xchg
out
push
mov
aas
mov
std
mov
ret
xchg
imul
xchg
loop
xorl
aaa
adc
outsl
je
xchg
test
add
add
adc
in
push
mov
sbb
push
jp
or
adcl
addb
aas
sbb
jo
add
inc
or
insb
add
loop
dec
and
push
jnp
test
xor
jbe
sti
pop
ljmp
push
je
sbb
xor
lret
pop
fisttps
inc
xchg
and
pop
sti
je
add
shll
mov
js
fdivl
mov
mov
insb
pop
mov
add
jbe
jae
push
ret
mov
imull
scas
adcb
and
and
mov
adc
sbb
dec
add
outsb
mov
mov
loopne
hlt
sub
push
inc
ret
mov
hlt
cmpsb
pusha
sahf
mov
sbb
sub
jl
leave
xor
add
push
clc
aaa
adc
js
add
push
xchg
test
insl
inc
xchg
fdivs
inc
jne
add
mov
imul
xchg
mov
mov
jbe
out
adc
movsb
insb
mov
mov
imul
jb
pop
inc
xchg
mov
scas
lods
jl
xor
xchg
and
xor
nop
inc
pop
gs
lods
pop
lret
mov
sub
add
add
cmp
jmp
inc
nop
loop
negl
scas
dec
jmp
inc
sub
mov
mov
loopne
cmp
mov
add
mov
push
repz
or
push
in
xor
shl
cli
xor
out
gs
push
mov
out
jns
outsl
add
adc
bound
push
push
cmpb
lea
xor
mov
jb
in
mov
es
jmp
test
sbb
sbb
int
jmp
out
test
jp
and
push
imul
jbe
cmp
sbb
mov
mov
push
mov
cmp
or
cld
adc
imul
notb
xchg
mov
add
jp
cld
test
push
cmc
pusha
push
mov
mov
jae
sbb
outsb
ret
arpl
cmp
test
jns
adc
into
mov
add
xor
mov
lret
std
and
lock
or
icebp
dec
addr16
or
cwtl
adc
mov
jl
push
adc
push
mov
ljmp
cmp
cmpsb
mov
movsl
test
mov
lods
sti
pop
adcb
lcall
xchg
leave
xor
push
ja
jns
dec
pop
in
push
push
pop
pusha
mov
insl
sub
les
cltd
push
psubusw
aad
test
mov
mov
sbb
push
inc
sbbb
or
dec
sarl
scas
call
pop
xlat
add
mov
sub
sub
pop
fwait
push
int
enter
rcrl
ret
pusha
mov
sub
or
sarl
cmpsl
lods
and
pop
sbb
and
pop
inc
mov
jp
data16
in
jg
sti
enter
lret
dec
dec
enter
ror
in
mov
dec
or
gs
push
dec
or
aas
outsb
js
push
loope
or
popa
cmp
mov
bound
mov
cmp
or
xchg
mov
mov
imul
lcall
les
mov
mov
ret
iret
lods
push
cli
xchg
bound
bound
inc
pop
aas
mov
sub
jb
jo
jnp
das
jmp
into
xchg
inc
mov
mov
test
hlt
daa
jnp
mov
scas
sahf
push
call
lds
loope
dec
jns
cmp
aaa
je
jl
out
xchg
jmp
and
xchg
ss
mov
inc
gs
or
dec
mov
jno
out
xchg
jecxz
ljmp
shll
stc
sbbl
jo
sub
lret
pop
inc
fldenv
inc
das
jb
pop
scas
jne
cmp
shll
inc
xchg
into
call
mov
adc
mov
testb
mov
lds
lcall
cmpsb
je
mov
in
cmp
cli
mov
in
into
lcall
orl
les
sti
ljmp
jge
rcr
adc
aaa
mov
iret
and
icebp
sub
cmp
push
fadds
add
push
cmp
sti
testb
xchg
push
push
hlt
add
sub
inc
lret
adc
inc
xchg
push
call
dec
nop
pop
jl
cmp
js
cmp
fistpll
test
cs
or
pop
ja
pop
sub
repz
lcall
and
ja
pop
out
xor
lods
pop
outsb
fidivs
scas
gs
pushf
dec
and
les
jnp
cmpb
test
je
pop
lds
jo
adc
cs
je
test
xlat
cmp
std
adc
or
or
cmpsb
mov
into
outsb
cwtl
in
jle
dec
adc
lock
xlat
addb
repnz
in
ja
jmp
cmpsb
sub
scas
filds
jns
subb
pushf
inc
popf
mov
adc
cli
push
fsubs
rolb
in
adc
mov
enter
push
xchg
stos
sbb
mov
call
or
add
nop
cltd
daa
movsb
outsl
mov
rcrb
loope
ljmp
gs
stos
sbb
out
mov
push
adc
cmp
lock
mov
adc
pop
jo
imul
loope
jg
xrelease
mov
es
cmc
sti
out
ja
mov
ljmp
add
inc
xchg
lods
jae
jb
shrb
pop
inc
std
mov
lock
cmp
movsl
xor
ss
loopne
popa
mov
inc
inc
ds
cwtl
add
lods
pop
add
xor
fwait
jmp
ljmp
inc
or
test
test
repz
or
pop
icebp
xchg
leave
sbb
rcl
or
pop
gs
push
xor
cmp
add
dec
outsl
inc
add
in
xor
stos
inc
inc
xchg
test
das
inc
cltd
inc
pop
add
stc
pop
test
jge
in
std
xchg
ret
sub
arpl
sbb
inc
stc
in
mov
or
fwait
xchg
frstor
jo
repz
gs
mov
popf
sahf
aam
and
stc
jmp
es
and
out
es
in
jg
fcmovu
mov
inc
pop
outsl
imul
mov
aam
sti
cmc
movsl
add
pop
imul
test
sbb
lcall
cmpsb
or
loopne
in
lods
ds
pushf
arpl
ret
xor
test
leave
enter
pop
mov
fstpt
nop
and
sub
les
adc
cltd
fmuls
cltd
clc
adc
notl
pop
shl
mov
jno
shlb
lds
insb
pop
cwtl
xchg
fsubrl
cmp
and
pop
mov
mov
test
gs
sub
adc
data16
iret
sbb
mov
jl
out
hlt
jb
fidivl
xchg
jmp
in
adc
cmp
lods
mov
push
cmp
inc
repnz
cmp
mov
or
mov
addl
add
sub
out
repnz
mov
push
xchg
xchg
xorb
js
push
mov
cmp
mov
mov
pop
inc
jo
in
popf
cmp
lods
fistpl
mull
cld
and
gs
add
jp
ja
testl
sbb
sbb
std
lods
fcmovnu
sbb
dec
jnp
adc
inc
push
add
add
sahf
mov
or
mov
rolb
jp
fs
gs
add
add
sahf
mov
or
xor
ljmp
aad
je
pop
mov
add
sub
inc
nop
daa
out
popf
push
and
inc
cmpsb
cld
mov
add
jge
xor
and
or
inc
in
ds
pop
loop
je
ja
fbstp
add
pop
std
xchg
out
adc
xchg
inc
fdivs
or
inc
int
cld
and
mov
add
jns
mov
test
hlt
dec
arpl
add
push
pop
inc
jmp
mov
cmp
jp
in
pop
dec
jle
cmpsb
clc
push
out
mov
pop
jmp
adc
add
je
call
iret
xchg
jmp
pop
cmpsb
ss
cmpb
xor
mov
dec
jnp
xchg
mov
test
sbb
xor
clc
mov
cs
sbbl
loop
sbb
jnp
sub
in
gs
mov
lods
cmp
sbb
inc
pop
adc
or
mov
pop
adc
push
rolb
pop
mov
mov
add
inc
inc
or
fisubs
lret
mov
xor
movsb
pop
mov
iret
jbe
pop
jmp
and
fstpt
scas
sahf
adc
stos
sub
xchg
and
sarl
jb
mov
lahf
inc
or
and
jo
pop
cmp
sub
adc
xor
fnstcw
xchg
push
stos
fbld
je
mov
int3
aad
and
mov
cmp
add
inc
or
lds
xor
loopne
les
test
add
inc
sti
shll
fiaddl
sub
or
adc
sub
and
insl
pop
mov
mov
pop
xchg
in
cwtl
repnz
adc
ret
fcomip
mov
mov
jg
pushf
shr
aam
in
xlat
xor
bound
inc
cmp
dec
andb
cli
xchg
inc
pusha
int3
fldcw
rolb
mov
bound
pop
sbb
ja
movsl
jge
bound
fsubl
cmp
in
sbb
and
dec
in
out
and
clc
shrb
cmp
mov
in
dec
or
pop
cmpsl
cmp
add
push
or
ret
xchg
mov
into
pop
pusha
xchg
adc
cmp
ret
push
mulb
ss
jae
sub
pop
outsl
scas
jecxz
std
lret
lods
mov
mov
lcall
cmp
fistpll
or
dec
ljmp
pusha
pop
mov
mov
and
test
push
sbb
push
inc
jecxz
ds
adc
out
leave
xlat
sub
pop
sbb
mov
mov
daa
popa
jmp
pop
mov
push
fldl
mov
in
xor
xchg
pusha
inc
jbe
movsb
inc
call
jno
mov
inc
or
jmp
lods
push
mov
jb
in
stos
jnp
jg
nop
stos
mov
mov
mov
call
xor
cli
xlat
jb
out
scas
add
dec
nop
and
cmp
jbe
insb
push
dec
mov
cmp
sbb
cmp
mov
fldt
cltd
adc
out
pop
popf
push
add
add
data16
sub
mov
bound
mov
aaa
xor
add
mov
pop
add
je
mov
adc
xlat
sub
cmp
out
or
inc
repnz
pop
push
sbb
add
sbb
and
inc
es
mov
pop
ljmp
lea
mov
jmp
fwait
push
and
sbb
mov
daa
mov
mov
adc
ret
bound
mov
inc
rol
cld
lods
cs
inc
pop
jle
sbb
adc
test
lds
jmp
dec
jle
xor
jl
in
in
mull
pop
inc
andb
jno
shl
repnz
stos
mov
cmpsl
jg
pushf
pop
add
push
aad
inc
or
add
mov
fcmovnu
dec
push
dec
pop
out
sbb
sub
cmpsb
mov
inc
adc
push
incb
stos
mov
ja
fdivrl
adc
push
out
cwtl
iret
insl
dec
jae
test
pop
aam
ds
iret
add
adc
popf
fsubrl
cmp
pop
adc
mov
mov
mov
xor
or
mov
pop
adc
push
xor
es
iret
call
js
push
imul
out
test
xor
inc
push
ljmp
mov
in
inc
cltd
add
sbb
test
mov
cmpsb
push
insb
mov
loop
cmp
test
outsl
xor
add
pop
mov
push
in
inc
dec
push
lock
adc
daa
test
rorb
jecxz
shrl
cmpsl
roll
clc
mov
addr16
adc
adc
loope
loope
sub
cmp
aas
shll
xchg
outsb
addl
ljmp
or
ss
and
je
pusha
rorb
xchg
test
mov
xor
push
jne
pop
stos
xchg
data16
iret
xchg
inc
sti
mov
scas
mov
repz
add
mov
inc
and
bound
in
pop
cmp
daa
mov
pop
xor
lock
add
inc
add
insl
jge
jle
adc
outsl
cld
ja
je
test
rcll
mov
inc
in
and
sti
pmullw
xor
out
lret
popa
dec
jmp
sbb
inc
fisubl
enter
popf
dec
add
mov
xor
fldl
outsb
sar
xchg
pop
mov
pop
shlb
in
stos
insl
aas
sub
faddp
xlat
int3
movsb
mov
mov
adc
scas
add
pop
inc
lcall
lret
sub
inc
pop
addr16
jns
rorb
orb
popf
aam
fcoml
pop
push
cltd
jno
mov
mov
js
cmp
shrb
push
in
push
push
fsubrl
inc
test
mov
push
add
movdqa
out
jbe
pop
xlat
pop
push
dec
fidivrs
das
fidivrl
pop
out
cmp
sbb
mov
and
xor
xor
cmp
xor
push
mov
and
sti
mov
jg
adc
mov
mov
loopne
stos
xchg
ds
mov
movsl
sti
imulb
out
sbb
xor
sbb
add
pop
cmpsb
lret
mov
bound
add
jae
fistpl
stos
sub
repnz
sbb
aas
data16
lea
add
adc
xor
jl
mov
adc
cmp
aaa
divl
ret
rolb
or
pop
push
push
add
sbb
push
lods
sbb
push
mov
call
std
xor
imul
inc
cmpsb
pusha
sahf
mov
or
lahf
ljmp
bound
add
lods
xchg
cli
jnp
arpl
aaa
inc
xchg
jl
jp
mov
mov
sbb
enter
jbe
std
sti
imul
push
cli
lahf
test
out
push
clc
push
jne
mov
and
idiv
jbe
cli
jbe
test
lea
add
xor
mov
mov
add
add
repz
in
loop
movsl
insb
aas
jne
mov
sub
sub
xor
mov
adc
xor
mov
pop
fs
pop
push
and
jg
mov
jns
in
lea
fcmovne
popa
mov
popf
and
mov
rclb
mov
mov
scas
mov
jbe
adc
push
adc
mov
xor
ljmp
ljmp
stos
inc
sbbl
orl
std
stos
div
xlat
pop
fwait
pop
fildl
js
mov
mov
mov
add
mov
mull
test
iret
cwtl
xor
xlat
jle
repz
mov
and
jle
jge
add
and
adc
adc
mov
dec
push
lcall
xor
sbb
scas
adc
xlat
aaa
nop
mov
movsb
push
xor
lahf
test
pop
testl
mov
fdivrl
and
mov
jo
lods
pop
xor
into
adc
mov
inc
subl
ja
pop
cmp
and
mov
loope
xor
lock
dec
imul
or
mov
movsl
arpl
out
and
add
adc
std
sbb
lock
movsb
mov
sbb
adc
sbb
in
add
testl
inc
sub
sbb
push
adc
push
ficoml
push
adc
daa
aam
push
lret
inc
add
adc
vprotd
aad
ret
nop
push
repz
int3
inc
repz
ja
lret
cmp
mov
xlat
inc
out
ljmp
insb
pop
jp
testl
fs
dec
xchg
mov
jle
out
adc
jns
jl
call
fcmovu
ljmp
mov
mov
sti
xchg
les
outsb
add
lods
cmpsl
imul
jp
pop
insl
loopne
loope
insb
mov
sub
jne
add
cmpsl
mov
int
xchg
inc
jle
mov
dec
add
jo
shrb
push
sbb
ror
fldenv
insl
mov
fs
add
in
shrb
aaa
fisttpll
shlb
cmpsl
movsl
adc
xchg
les
jne
scas
jl
and
cmc
dec
fidivrl
mov
xchg
sbb
adcl
or
sub
mov
ret
pop
sub
mov
pop
rorl
mov
mov
dec
push
mov
dec
pop
jno
or
inc
sti
mov
push
stos
lahf
cmpsb
popa
jl
dec
add
adc
insb
mov
jb
ja
dec
xor
sbb
jle
mov
xor
sbb
push
pop
and
in
mov
or
push
xchg
mov
lds
mov
and
add
add
aad
sarb
adc
xchg
es
rorb
xor
push
fistpll
pop
inc
add
bnd
adc
and
sbb
mov
sbb
push
mov
or
push
outsl
insb
add
mov
rolb
mov
ja
lcall
mov
add
in
pop
insb
mov
xchg
ficoml
ja
mov
rol
fwait
and
mov
test
incb
aas
mov
adc
push
jge
push
lret
push
mov
adc
jle
sbb
xchg
and
jge
mov
xchg
mov
xchg
jecxz
mov
jbe
divl
lcall
inc
sbb
adc
dec
jne
sbb
fbstp
divl
jne
sarb
adc
int
mov
shlb
je
mov
sub
xchg
xchg
add
jbe
outsb
pop
cmpsl
loop
push
sub
in
sti
ljmp
sub
call
testb
outsl
cltd
mov
test
inc
rcl
and
and
sbb
daa
loop
and
lods
jne
icebp
xor
aam
test
adc
rcrb
jge
test
cs
je
sbb
push
xchg
fs
sbb
pop
lcallw
cli
out
mov
xor
xchg
divl
dec
pop
ficompl
sbb
push
lds
inc
xchg
repz
push
pop
add
adc
std
cmp
push
dec
cwtl
stc
nop
loope
add
xchg
jbe
inc
in
xchg
jecxz
test
xor
cmpsb
sub
mov
stos
fidivs
push
fdivrl
adc
inc
roll
xor
ret
xchg
mov
fsubs
ret
xchg
out
xchg
mov
cli
ja
mov
mov
and
mov
adc
ret
add
test
mov
mov
mov
lods
jno
cmpsl
popa
test
or
arpl
and
and
xchg
lock
jns
jmp
imul
adc
fwait
hlt
xor
loopne
dec
pop
adc
and
jle
jge
test
jecxz
sub
sbb
jae
mov
or
xor
sbb
pop
outsb
int3
nop
es
pop
clc
pop
pop
mov
mov
mov
movhps
test
pop
mov
pusha
sbb
mov
inc
lock
adc
incl
and
sarl
push
pushf
jne
and
jmp
adcb
dec
jne
mov
push
sub
xchg
dec
loop
pop
pop
sbbb
sti
mov
inc
push
pop
push
lret
hlt
ja
in
xor
adc
sti
cltd
leave
sub
lret
mov
sbb
dec
xchg
cli
scas
jecxz
das
ret
inc
dec
inc
pop
outsl
mov
cmp
inc
add
stos
jge
push
adc
enter
jo
pop
adc
mov
mov
sbbb
push
iret
es
fcom
push
repnz
ljmp
cmp
movsb
cmc
scas
std
dec
sub
repnz
test
fcmovne
loope
pop
cmp
cmp
cmpsl
aas
out
push
rcl
mov
cmp
inc
xchg
into
arpl
dec
push
mov
mov
xchg
popf
mov
jmp
cmp
popa
add
fbld
push
inc
stos
pop
add
lret
fwait
imul
adc
das
adc
mov
add
mov
test
push
popa
cmp
adc
jnp
leave
imul
add
mov
mov
sub
add
and
arpl
leave
jno
divl
vcvtsd2si
outsb
lea
push
repz
ljmp
in
pop
lret
ljmp
jb
aad
jne
adc
mov
add
jl
add
jnp
lret
pop
fxsave
jle
rcrb
mov
cmp
ds
cli
mov
std
pop
mov
add
sbb
out
popf
cmp
push
lret
notl
pop
add
jb
loope
lea
dec
loop
lods
xchg
addb
mov
in
lea
cmp
add
adc
negb
data16
sbb
push
ds
xor
pop
mov
pop
jmp
adc
xor
divl
ja
lahf
jge
test
out
mov
pop
je,pt
mov
cmpsl
mov
mov
jbe
or
cmp
xchg
sbb
push
hlt
pushf
add
xorl
pushl
ds
fiaddl
push
adc
data16
cmp
jo
pop
adc
fs
jb
pop
add
add
xchg
and
je
xorl
mov
insb
sub
mov
rol
hlt
fidivrs
xchg
cld
scas
je
dec
daa
dec
xchg
sbb
xchg
or
adc
icebp
adc
inc
mov
and
add
push
stos
mov
or
rcrb
jo
pop
out
adc
idivb
add
mov
pop
icebp
arpl
rcll
fisubrl
fs
scas
mov
and
mov
dec
sbb
xor
es
sbb
push
rcr
jo
mov
lea
in
mov
and
mov
add
adc
push
adc
sbb
mov
xchg
mov
or
push
es
cli
dec
xor
pushf
test
mov
repz
insb
sbb
sar
lods
scas
sahf
push
addb
sub
add
inc
or
push
and
cmp
and
ja
push
adc
dec
scas
pushf
inc
jg
cmpl
ret
aad
out
pop
push
in
adc
daa
or
or
inc
lahf
cs
sbb
call
outsb
pop
adc
insl
lret
cmc
gs
push
sete
outsb
stos
in
mov
pop
adc
push
movsl
fcmovnu
outsl
xor
imul
push
ds
mov
pop
cmp
out
pop
pop
jle
inc
jp
pop
clc
mov
sub
pop
addr16
loopne
mov
pop
push
pushf
ljmp
xchg
pop
pop
push
sub
ja
jnp
movb
adc
movsl
mov
into
arpl
add
loop
cwtl
push
push
dec
lea
rcr
in
loope
jl
mov
ds
sub
out
in
addr16
enter
outsl
cmpsb
sti
stos
stc
add
movsl
cmpsb
outsb
lret
jno
scas
mov
push
add
adc
fadds
insb
jo
pop
adc
xchg
xchg
inc
ja
out
push
fwait
jecxz
ja
mov
sbb
jmp
dec
sub
adc
pusha
inc
jnp
mov
dec
into
push
iret
into
insl
addr16
inc
icebp
sbb
mov
mov
pop
imul
gs
cld
jg
mov
nop
or
and
xor
sub
mov
outsl
dec
push
fs
aas
mov
add
test
and
ja
and
inc
xor
inc
cmc
inc
inc
mov
popa
icebp
jl
repz
mov
ret
or
shlb
xchg
mov
jbe
adc
push
adc
rcll
je
shrl
punpckldq
repnz
lock
std
inc
jbe
fidivl
jp
push
arpl
mov
fidivs
dec
popf
adc
iret
and
cmpsb
les
add
add
popa
jno
outsl
fiadds
bound
sbb
dec
popf
mov
xchg
push
add
add
imul
jns
out
add
insb
push
mov
push
jp
add
add
cmc
fs
sub
insb
mov
pop
mov
addr16
push
inc
addb
jb
notb
xor
out
cmc
sbb
mov
sub
inc
adc
xchg
icebp
add
and
ljmp
xchg
mov
popf
sub
arpl
and
jb
ja
add
jb
xchg
and
or
fimull
mov
mov
sbb
cmp
xor
add
movsl
pusha
pop
pop
xchg
inc
and
mov
mov
hlt
jp
add
add
cmp
adc
xor
push
cmp
and
arpl
mov
bound
add
cmp
xchg
fnstsw
jmp
mov
cmp
sarl
mov
jnp
hlt
out
fscale
and
jno
lahf
mov
dec
dec
mov
jmp
stc
and
jno
jae
push
and
add
pushf
inc
ja
scas
cmpsl
xchg
inc
out
push
imul
cmp
xor
add
icebp
scas
filds
cmpsl
int3
subb
ljmp
imul
out
fs
adc
sub
and
mov
sub
fwait
rcll
rcrb
fsubp
jbe
pop
push
mov
clc
push
es
sbb
xor
adc
and
test
adc
shrl
pusha
or
jp
test
imul
cmp
out
xor
xchg
shlb
fdivr
or
pop
and
inc
cmpsl
push
pop
mov
and
addl
mov
insb
xchg
es
lods
push
ss
clc
and
pop
mov
cmc
jbe
stc
lock
xor
add
sub
jmp
sbb
outsb
add
ss
add
dec
jge
test
pop
sbb
gs
pop
cwtl
xchg
adc
in
int3
mov
imull
mov
sbb
mov
ret
xchg
sbb
push
pop
mov
mov
sub
gs
mov
mov
popa
iret
mov
jnp
jg
sbb
xor
cs
xlat
ret
dec
setb
xchg
sub
in
test
lret
mov
rclb
and
pop
adc
fwait
nop
dec
mov
jecxz
pop
adcb
mov
repz
add
test
cmp
mov
cltd
std
sub
out
in
lea
lods
imul
mov
inc
add
mov
pop
test
add
pop
inc
push
jp
dec
adc
call
dec
js
jl
xchg
dec
adc
dec
sub
pop
mov
xchg
dec
push
outsb
leave
or
dec
iret
dec
sub
mov
arpl
pop
xchg
fsubrl
mov
jl
mov
mov
dec
mov
jmp
rclb
leave
or
sbb
mov
aaa
mov
fprem
inc
out
mov
push
mov
dec
inc
inc
cmp
adc
rclb
dec
movsb
jbe
cmp
sub
xchg
sbb
pop
sti
cmp
orb
xchg
and
pop
aaa
insb
lcall
loop
mov
filds
mov
adc
mov
std
add
gs
jmp
leave
cmc
sbb
lds
cmp
sbb
pushl
repz
lock
loopne
adc
call
xor
push
pusha
adc
cmpsl
jb
std
scas
stos
cmpsb
add
aaa
aas
sti
int3
mov
ljmp
dec
xchg
mov
mov
sbb
xor
lahf
popa
cmp
stos
dec
out
push
or
add
adc
stos
rclb
js
ret
cld
adcb
pop
push
jb
in
pop
out
hlt
mov
cld
ds
adc
xor
rcl
jns
out
push
pop
je
mov
scas
mov
popf
or
add
mov
fs
mov
movsl
je
xchg
xor
sahf
lds
mov
add
jo
bound
aaa
xor
addl
je
shrl
jno
movsl
mov
mov
cmp
data16
xor
jbe
mov
fsubrl
mov
aad
data16
or
jne
add
leave
iret
cmp
mov
xchg
mov
sub
mov
push
sti
pop
repz
div
mov
mov
and
es
pop
cmpsl
xor
inc
orl
scas
mov
push
insb
mov
lods
sbb
jl
mov
add
repnz
mov
xchg
rclb
pop
cli
cwtl
std
ja
pop
jp
cli
sti
sti
cmpsb
jge
xlat
testb
jo
jmp
ret
mov
mov
aas
aaa
pop
div
je
ljmp
mov
insl
mov
out
sub
mov
test
test
testb
jns
add
mov
cmpsl
out
mov
or
enter
mov
aaa
jl
inc
inc
dec
ficompl
cmp
rorb
insl
jecxz
stc
push
push
sahf
jge
mov
call
mov
xor
adc
lock
or
xchg
jp
fdivrl
adc
add
adc
adc
insb
and
dec
dec
sbb
call
lea
test
xor
adc
lahf
mov
add
cmp
push
sbb
and
sub
icebp
jge
mov
xor
or
test
lods
or
ljmp
dec
shl
mov
inc
inc
into
mov
mov
lods
push
pushf
inc
pop
stc
pushf
mov
cmp
add
andb
cmp
loop
int3
inc
xchg
inc
push
loop
mov
sti
jnp
insl
shl
repnz
nop
fmul
fildll
loopne
xchg
lds
adc
or
adc
pusha
lret
push
or
cs
pop
aas
dec
sub
arpl
shr
fcmovu
fcoms
fists
mov
in
sub
inc
xlat
testb
inc
popa
repnz
sbb
dec
lret
sbb
mov
push
push
xor
dec
inc
in
fcoml
in
cmp
cmp
adc
dec
dec
lods
enter
jle
ss
jmp
push
sbb
xor
mov
xchg
icebp
xchg
xchg
jbe
out
ret
hlt
cwtl
pop
loop
push
adc
and
ljmp
xor
js
pop
scas
xlat
add
ret
inc
jne
adc
mov
mov
mov
scas
add
decb
adc
dec
pop
add
in
cwtl
xchg
enter
ja
cli
inc
jl
inc
xchg
mov
cmp
loope
sbb
lods
fdivs
ja
jp
cmp
mov
add
add
pusha
push
pop
outsl
fidivrs
lahf
adcb
sub
leave
cmp
push
and
call
mov
add
mov
mov
popf
cmp
ret
mov
fcomi
repnz
xor
repnz
arpl
push
adc
imul
pop
push
sbb
xchg
cli
add
mov
negb
daa
or
cltd
jne
sub
shll
mov
bound
jle
pushl
es
out
adc
sbb
arpl
cmp
cmpsl
pop
idivl
sbb
call
inc
sub
or
pop
outsl
fidivrs
add
push
sub
add
roll
mov
pop
adc
add
mov
inc
xchg
bnd
mov
sub
add
push
repz
add
mov
inc
xchg
xor
mov
bound
and
jbe
std
sti
aas
lea
push
xor
cmp
jne
adc
push
xor
call
and
add
xor
movsb
xchg
dec
pop
bound
lret
mov
test
xor
sti
cmp
dec
jne
adc
shll
xchg
push
xor
out
je
lahf
pop
sub
jbe
or
and
out
mov
push
mov
pop
data16
pop
dec
sbb
push
out
cs
scas
test
stc
push
test
in
or
fcoms
push
adc
cwtl
mov
mov
test
pushf
popf
hlt
cmpsb
mov
adc
adc
jbe
cmp
pop
js
sahf
mov
in
adc
adc
and
lcall
dec
div
jge
out
enter
lcall
bts
lcall
mov
add
mov
outsb
pop
dec
mov
enter
add
cmpsl
and
les
push
adc
je
cwtl
out
shll
clc
fnstenv
adc
xor
push
sub
cmp
stc
cld
add
aaa
push
inc
dec
int
int
loope
shrb
add
mov
mov
push
pop
sub
push
adc
orl
loope
dec
jb
aam
dec
ljmp
aas
gs
imul
jmp
loopne
sbb
xor
inc
pop
inc
pop
aaa
xchg
in
xchg
loope
int
jl
and
xchg
pop
mov
cs
out
lret
pop
xor
fiaddl
xchg
sub
mov
add
adc
lret
rolb
test
jno
movl
iret
fnstsw
add
mov
jns
adc
icebp
dec
cmovne
xor
dec
jg
mov
inc
jp
in
pop
pop
or
scas
inc
daa
aaa
aam
pop
adc
shrl
xchg
mov
popa
inc
cltd
int3
in
xchg
inc
pop
adc
pusha
fadds
pop
xor
xlat
mov
fadds
faddl
lcall
adc
lods
jle
int3
xchg
dec
sti
add
sbb
sub
inc
pop
adc
inc
pop
adc
nop
fadds
lea
jle
jmp
jp
and
adc
movsb
ret
cs
adc
loop
insb
or
mov
out
jb
mov
les
push
adc
ret
mov
adc
mov
mov
scas
negl
xor
adc
adc
and
push
push
ret
mov
adc
push
jmp
jg
fstl
insl
mov
mov
cmp
jo
pop
adc
mov
bound
dec
xor
mov
add
cli
sub
add
stos
jnp
andl
in
adc
mov
rol
je
jno
les
adc
adc
mov
or
and
and
sbb
jp
test
xor
and
adc
repz
in
mov
je
ja
jp
sub
add
ljmp
popf
cmp
adc
xorb
sub
add
loop
and
push
mov
and
into
popf
mov
mov
repnz
or
scas
lods
xchg
loopne
sti
movsl
mov
pop
adc
std
je
jno
bound
addb
adc
push
adc
xor
fidivrs
lds
pop
cmpsl
dec
popf
push
jae
push
cmp
sub
add
adc
loop
fsubrs
test
jns
adc
bound
testb
add
je
xchg
and
out
shrb
sub
push
adc
adc
in
je
lea
xor
inc
xchg
mov
test
lret
in
in
mov
add
sub
add
push
mov
repz
mov
push
adc
in
mov
and
adc
xchg
call
jnp
push
je
movsl
adc
std
stos
into
js
add
jno
jmp
insl
fsubr
sub
pop
adc
mov
adc
adc
push
xor
cltd
sub
add
jge
lock
aam
or
adc
adc
sub
sub
jmp
jmp
inc
xchg
sub
movsb
adc
adc
imul
add
push
xchg
xor
push
inc
xchg
xor
push
adc
loop
les
add
xchg
xchg
xchg
cmc
aad
cmpsl
loope
cmp
arpl
iret
scas
nop
cli
mov
push
adc
stos
xor
pop
jae
lea
push
inc
in
ss
jecxz
mov
cltd
lcall
dec
xchg
fsubrp
fiaddl
cmp
xor
push
jb
inc
xchg
push
mov
adc
and
adc
mov
adc
iret
push
xchg
mov
testl
test
inc
xlat
test
gs
insl
mov
test
mov
das
inc
or
in
sahf
dec
outsl
rcll
mov
adc
and
sbb
cmpsl
xchg
rcrl
adc
push
xor
scas
shrb
sub
or
cmp
xchg
mov
and
pop
outsl
cld
mov
adc
in
sbb
push
stos
push
and
jnp
sti
insb
popf
sbb
dec
inc
push
pop
mov
adc
adc
pop
xor
jae
jns
xchg
cmovl
js
lea
sub
push
adc
aad
int3
adcb
popf
mov
mov
out
jmp
xorb
adc
fmull
pushf
pop
adc
adc
push
mov
shrl
ds
jmp
mov
enter
push
mov
fimull
sbb
sbbb
jecxz
sub
adc
adc
push
jg
adc
cmpsl
pop
sbb
dec
lret
ds
pop
adc
jg
cmp
aam
xchg
ret
sbb
scas
movb
ffree
mov
push
push
out
sti
inc
sbb
add
int
andb
xchg
loope
mov
ss
or
loopne
mov
mov
pop
dec
sub
push
adc
push
lds
push
lret
pop
and
mov
xchg
or
test
test
pop
aaa
sub
push
das
mov
xchg
inc
mov
push
adc
ret
test
jnp
mov
adc
out
popf
imul
cmp
pop
ss
sub
add
call
xor
lahf
sbb
add
les
jp
sub
add
jns
adc
mov
xor
popa
inc
adc
adc
pop
add
adc
dec
xchg
add
add
and
push
adc
or
and
sbb
push
adc
shlb
cli
stos
pop
out
xchg
sbb
lods
xchg
cli
jnp
pop
pop
mov
iret
adc
add
push
bound
ja
fwait
jbe
std
sti
mulb
inc
xor
pushf
sub
subb
imul
push
add
lcall
dec
pop
adc
mov
jp
ds
add
dec
jnp
sub
sti
push
sti
incl
mov
push
cmp
and
arpl
cltd
cmp
outsl
pop
popf
cmp
das
xchg
ljmp
sahf
pop
pusha
fidivrs
lds
in
mov
and
inc
xchg
or
jge
divl
scas
test
pop
or
jne,pt
rcrl
mov
push
adc
lret
add
add
sub
dec
xchg
pop
jnp
movsb
imul
pop
cmpsb
xchg
cmp
mov
push
cmp
adc
fnstenv
test
icebp
movsb
fwait
cmp
pop
and
popa
mov
push
adc
fcoml
push
adc
sbb
jl
pop
sbb
cmp
decb
add
cmpsb
or
lock
adc
push
add
jg
or
cli
push
sub
cmpsl
pop
or
jo
pop
xorb
jmp
daa
or
es
adc
data16
in
xchg
adc
aaa
mov
nop
daa
sub
adc
leave
jo
bound
pushf
jb
jmp
and
out
in
out
shrb
pusha
call
push
incb
push
aaa
loop
jne
lds
cmp
addl
in
pop
data16
shlb
insb
sub
push
pushf
lods
es
adc
xor
push
imul
orl
jbe
adc
mov
pop
jl
jge
divl
repnz
stc
pop
les
jns
cmp
sub
xor
gs
dec
push
sbb
sbb
imul
and
jo
cwtl
adc
movsb
cmpsl
inc
scas
xchg
or
push
adc
xor
rclb
sbb
push
or
push
adc
testb
xchg
xchg
sub
fldl
fwait
jmp
add
push
adc
arpl
hlt
insl
push
mov
pop
xchg
in
mov
test
push
push
repnz
xlat
mov
adc
adc
dec
ss
scas
call
sub
push
jne
xchg
scas
adc
push
divb
sbb
in
xor
or
adc
sub
xchg
lahf
push
int3
loopne
mov
pop
insl
cld
lret
xor
sbb
pop
push
lret
cltd
sub
lods
es
adc
dec
jb
icebp
insb
addb
inc
adc
jb
movsb
cmp
add
insl
push
jmp
test
lcall
jle
mov
jl
pop
push
das
jg
rcl
movsl
stc
and
ret
fbstp
xchg
adc
stos
mov
push
ljmp
or
int
pop
iret
adc
mov
inc
push
cmp
clc
sti
fcoms
push
adc
out
pop
mov
mov
arpl
popa
add
adc
lret
push
insb
repnz
push
adc
test
mov
mov
int
mov
push
xchg
daa
push
fwait
ljmp
repnz
arpl
add
mov
inc
xchg
push
adc
cmp
inc
addb
addr16
std
xor
aaa
jmp
pop
dec
jo
xchg
lods
dec
bound
xchg
pusha
scas
jmp
adc
adc
loope
xchg
inc
shlb
mov
les
mov
hlt
scas
jb
inc
cmp
ds
inc
xchg
dec
arpl
add
push
fisubl
lods
mov
mov
jge
adc
es
adc
out
pushf
lcall
call
mov
jb
inc
jo
in
mov
and
push
and
lahf
fiadds
lea
and
repnz
pop
popf
sbb
add
xchg
ret
cmpsl
sbb
or
push
cli
jo
sbbl
adc
adc
add
adc
loopne
mov
cmp
push
dec
push
lods
fdivr
cmpsb
mov
mov
push
dec
cld
add
mov
mov
mov
push
iret
jp
mov
jmp
call
or
je
daa
jbe
xor
stc
lds
and
adc
adc
lret
add
mov
inc
xchg
mov
pushf
cld
lahf
cmp
jne
fwait
cs
clc
adc
adc
aam
rcll
outsl
cmpsl
sbb
hlt
adc
adc
data16
test
adc
adc
fcmovnb
mov
lcall
movsb
mov
icebp
add
push
adc
mov
in
adc
adc
sbb
cmpsb
cld
xor
mov
xlat
cmp
pop
push
mov
lret
fsub
xchg
inc
pop
dec
mov
cld
add
fildll
insl
mov
ret
test
imul
mov
lea
ss
ret
adc
cmp
fucomip
jo
pop
adc
or
mov
pop
cmpsl
mov
fidivrs
cli
xchg
jb
sahf
std
cmp
subb
adc
adc
mov
jmp
jge
mov
cltd
push
xlat
dec
inc
fs
loope
jmp
adc
mov
pop
cmp
mov
stos
add
cmp
cmp
out
sub
stc
pop
jno
add
test
loope
test
adc
cmp
dec
add
pop
jo
outsl
cltd
sbb
out
in
xchg
sarl
dec
mov
test
sbb
sub
pop
inc
xor
mov
push
bound
xlat
aas
mov
pop
stos
pop
mov
mov
jbe
adc
dec
mov
cli
dec
cmp
mov
or
push
gs
inc
aaa
jmp
mov
xor
sbb
push
dec
sub
push
pop
ret
mov
ret
movsl
aaa
jge
fisubl
xchg
std
or
popf
sbb
loope
fucomip
in
xchg
rorb
push
mov
fldenv
xchg
mov
add
out
push
mov
lret
dec
dec
jbe
adc
clc
rorb
mov
test
lret
dec
xor
dec
pop
in
test
add
stc
push
shrb
fs
cmpsl
icebp
add
lahf
mov
lds
pop
and
cmp
push
out
cmp
xor
pop
pop
das
jg
mov
shrb
inc
jnp
inc
jae
push
dec
mov
push
add
rcrl
nop
clc
inc
mov
nop
mov
cld
subb
fcomp
or
mov
cmp
lcall
mov
clc
lods
fwait
scas
les
sbb
aam
push
adc
aas
dec
movsl
xor
adcb
adc
pop
cmp
ja
mov
mov
mov
dec
inc
outsb
add
repz
sti
imul
push
cli
lahf
test
out
push
stc
int3
int3
add
adc
aas
out
fistpll
out
jl
pop
jbe
cli
push
xor
add
je
pop
scas
int
xlat
ja
mov
scas
add
std
sti
jae
aam
jmp
sbb
test
sahf
pop
adc
add
push
adc
popf
pop
adc
mov
int
sbbb
xorb
mov
add
inc
hlt
divl
pop
lods
lods
add
jns
mov
pop
jl
jg
into
popf
cmp
lods
aas
pushf
or
pop
fs
int
add
mov
test
pop
adc
jo
int3
push
ja
pushf
aam
dec
mov
adc
xlat
push
pop
push
adc
jle
or
and
adc
cld
adc
adc
mov
out
add
or
mov
shl
sarl
stc
mov
into
jl
pop
adc
clc
sub
add
jnp
xlat
ds
push
xchg
cmpsl
sbb
and
fs
mov
mov
pop
stos
add
jne
negl
and
nop
data16
add
adc
add
je
push
dec
stos
popf
cmp
jo
pop
adc
les
loope
out
push
icebp
xchg
push
rcrb
je
shl
cmpsl
cli
imul
jle
icebp
jp
cld
cld
pushl
jecxz
inc
bound
jp
in
ret
in
cmp
pusha
sbb
adc
stc
push
lret
push
adc
mov
cwtl
fimuls
and
jbe
pop
xor
jmp
hlt
arpl
xchg
xor
pop
scas
inc
mov
and
or
out
in
jmp
mov
dec
roll
push
cmc
cmp
iretw
pop
arpl
adc
mov
dec
jp
sti
xchg
ret
mov
dec
adc
mov
push
iret
jb
divl
push
push
inc
inc
out
xor
jbe
shlb
lret
test
sbb
inc
adc
mov
daa
imul
adcl
xor
jl
scas
sahf
rolb
ds
outsb
scas
icebp
icebp
push
pop
push
add
jg
and
and
sub
daa
out
cmc
mov
adc
outsl
pop
test
cs
mov
dec
ret
xchg
xor
mov
popf
pop
adc
mov
loop
ss
adc
dec
in
xchg
sub
fstpt
popf
int3
xor
xchg
ficoml
sbb
insb
inc
out
aas
cmp
and
pop
loop
add
fisttpl
mov
cmp
test
in
negl
orb
cmp
loopne
jge
adc
push
xor
sub
jnp
jnp
les
mov
out
rol
mov
movsb
out
and
lcall
in
and
movsl
xchg
cld
adc
adc
mov
adc
data16
pop
and
jp
test
dec
mov
and
aaa
add
call
andl
inc
aaa
loope
aad
sub
das
in
pop
pop
adc
mov
mov
jecxz
jp
xlat
out
and
stc
xlat
fmull
push
xchg
repnz
ja
cs
cwtl
inc
pop
test
ja
push
imull
pop
pop
adc
lock
sub
pop
adc
cmp
pop
sbb
sub
pop
adc
push
jnp
push
xchg
sub
lods
inc
lretw
inc
inc
lret
js
pushf
cld
cmp
lret
cmpsb
adc
or
jnp
sub
add
inc
out
push
bound
jge
sti
call
insb
adc
xor
xor
adc
test
data16
push
jge
jle
mov
xor
stos
jmp
jmp
cmpsl
out
in
pop
pop
adc
dec
mov
je
in
pop
pop
adc
sbb
push
jb
rcrb
jne
subb
inc
pop
adc
fidivrs
xor
sub
addb
jne
movsb
adc
xor
out
cld
add
pop
adc
movsl
mov
pushf
inc
pop
adc
adc
pop
jmp
test
jb
jg
jbe
push
or
stc
stc
enter
movb
pop
cmpsl
movsl
lahf
or
mov
imul
push
xor
and
js
dec
cmpsb
std
sub
xchg
shlb
push
test
ja
orl
and
imul
int3
rcl
xchg
cmpsl
push
bound
orb
add
adc
cmp
pop
aas
mov
ds
jmp
imul
je
addl
add
jmp
adc
adc
add
push
sub
xor
mov
sbb
stc
cmp
inc
pop
adc
nop
mov
repnz
fadds
mov
cmp
adc
cli
xchg
loopne
pop
adc
and
adc
dec
and
out
mov
and
dec
mov
jne
xchg
sub
pop
adc
jnp
outsb
lret
pushf
pop
adc
mov
xchg
jne
fnsave
jnp
xor
pop
adc
mov
pop
in
dec
dec
jo,pt
push
insl
mov
push
repz
cmp
pop
repnz
pop
xor
cmpsl
add
and
adc
mov
je
or
arpl
pop
addb
mov
mov
inc
pop
adc
xchg
dec
outsb
fwait
std
inc
ljmp
mov
dec
je
add
jmp
popa
adc
add
push
adc
lcall
adc
shlb
or
test
cld
adc
adc
imul
adc
mov
add
mov
jmp
adc
adc
push
adc
mov
adc
adc
cmp
lods
lret
lcall
pop
mov
push
adc
movsb
or
call
mov
fstl
sahf
pop
adc
push
mov
adc
sbbb
sbb
or
addb
xor
jl
jl
xchg
dec
jl
pop
adc
sub
dec
mov
out
decb
or
clc
lret
out
jg
lea
cmp
or
sub
lahf
call
int3
out
mov
xlat
push
fdiv
mov
in
idivb
add
inc
rcl
mov
outsb
arpl
xchg
inc
iret
mov
xor
testb
sbb
mov
xorb
pop
cmp
scas
das
ror
cmc
mov
push
mov
adc
faddp
enter
in
dec
ret
pop
enter
imul
std
fcmovu
ficompl
sbb
lret
nop
cld
push
cmpsb
subl
sub
fucomp
add
xchg
or
push
inc
dec
and
jo
xor
loopne
inc
fcmovu
adc
adc
ja
adc
jg
or
sub
cwtl
inc
mov
cmp
dec
aas
push
mov
mov
mov
dec
inc
pusha
inc
pop
adc
fcompl
stos
scas
mov
pop
sbb
pop
push
adc
pop
clc
adc
adc
lahf
ret
adc
lods
fwait
mov
pop
adc
test
and
ja
jae
sbb
addl
dec
add
add
pop
adc
fcompl
push
addl
popf
mov
test
pop
pop
adc
out
push
inc
xor
fdivl
mov
mov
xchg
inc
subb
lods
push
fisubl
popa
jo
mov
outsb
push
out
sahf
pop
adc
stos
movl
inc
sbb
daa
adc
or
adc
cld
adc
adc
lret
pop
adc
out
add
push
adc
mov
jne
ret
and
aaa
xchg
leave
add
je
mov
mul
lcall
lds
popf
pop
adc
cld
mov
cli
pop
pop
scas
add
in
push
cli
fwait
mov
into
popf
mov
add
cmp
mov
jbe
je
xchg
in
je
repnz
mov
xchg
inc
fdivrl
testl
mov
cli
js
mov
push
cmpsb
push
pushf
inc
push
outsb
mov
jge
push
orl
stc
jae
mov
jg
jg
pop
jge
add
mov
xor
add
sbb
imul
sahf
cmp
cmpsb
inc
scas
pop
xor
stos
sti
icebp
insl
xor
in
and
inc
fwait
pop
std
stc
cmp
adc
xor
scas
bnd
ljmp
ss
mov
inc
arpl
mov
ljmp
movsb
call
pop
fiadds
stc
outsb
add
sub
adc
lcall
mov
sti
je
test
call
jno
dec
adc
sub
gs
repnz
or
pop
lods
sub
sub
adc
sub
int3
or
out
jmp
adc
cmc
dec
addr16
inc
or
je
mov
in
incb
insb
pop
decl
imulb
fisubrl
add
mov
jne
mov
les
mov
mov
pushf
aas
shll
dec
stos
sbb
pop
xor
leave
push
popa
mov
testl
mov
out
or
pop
das
add
js
ja
xchg
jmp
divl
xchg
ja
lds
cmpsl
mov
xor
jae,pn
lock
xchg
xchg
mov
mov
pop
pop
dec
xchg
bound
pop
mov
popa
mov
insl
nopl
fcoms
mov
mov
push
int3
das
imul
or
push
pop
jl
popa
mov
push
bound
iret
aas
mov
pop
sub
mov
cmovns
push
shrl
cmp
or
or
xchg
sbb
test
arpl
sub
icebp
or
dec
sub
push
inc
mov
and
loopne
scas
out
jne
push
adc
fisubrl
adc
dec
push
pusha
shll
out
loop
xor
data16
jnp
nop
stos
pop
les
push
shrl
push
inc
stos
and
imul
mov
xor
jge
lret
fstl
push
mov
loope
cmp
add
ja
dec
jo
push
adc
xchg
xchg
push
pop
fsubr
stos
or
rcrb
cs
or
push
pop
xchg
pop
imul
dec
in
or
and
testb
pop
mov
outsb
movsl
cld
pop
shl
test
pop
fst
push
mov
push
adc
iret
call
sub
aaa
adc
test
add
out
fisttpll
shrb
roll
out
fnstsw
insl
fwait
ljmp
dec
xor
sti
mov
adc
xor
aaa
inc
inc
cwtl
jp
outsl
or
cmpsl
nop
push
cmp
mov
stos
lods
or
aaa
jg
sbb
sub
inc
cmc
test
push
adc
sub
xor
jbe
test
push
clc
pop
jmp
cs
push
popf
imull
pop
pop
out
jg
jl
repz
mov
nop
stos
cwtl
imul
pop
je
push
adc
testl
cltd
ljmp
cltd
out
mov
adc
mov
je
push
adc
rcl
jo
sarb
outsb
inc
repz
jo
pop
adc
lods
shll
push
sar
decl
cmc
mov
push
cmp
fucom
into
jmp
mov
imul
cmpsb
adc
pusha
cmp
in
fcmovnu
gs
imul
add
mov
xor
orb
adc
cmp
pop
xchg
jns
push
jp
adc
cmp
sub
xor
je
jb
outsb
scas
stos
or
mov
roll
xchg
mov
ja
xlat
push
and
adc
jge
mov
js
push
push
xor
mov
push
bound
push
adc
fimull
xchg
inc
lcall
int3
lds
xchg
mov
bound
pop
lods
pop
xchg
adc
adc
push
sub
aas
push
add
adc
cli
jb
stos
mov
mov
cmpsl
sbb
loope
cmc
push
stc
mov
outsl
pop
mov
sarl
insl
addr16
mov
mov
push
adc
jg
push
aaa
pop
div
cmpsl
bound
mov
push
adc
push
adc
push
adc
stos
dec
mov
inc
jle
popa
pushf
or
dec
in
repnz
div
xchg
clc
mov
adc
mov
mov
iret
adc
push
ds
rcrb
adc
fisubs
ds
or
push
jge
xchg
cmp
sbb
push
adc
frstor
cmp
jns
sub
faddp
stc
cli
xchg
enter
in
sbb
sbb
negb
mov
mov
dec
mov
xbegin
pushf
sbb
push
adc
cmp
dec
cld
call
mov
or
push
je
jge
push
mov
sub
ds
rcl
dec
data16
lods
adc
adc
sub
mov
push
xlat
test
push
adc
push
xor
orl
rcl
push
adc
add
cmp
adc
sarl
inc
sbb
xchg
std
sbb
out
test
cmp
inc
out
mov
mov
jnp
lock
adc
sbb
sbb
and
out
insb
leave
mov
loope
out
in
out
and
setnp
push
push
js
insl
movsb
add
lret
data16
lcall
pop
add
push
add
push
in
push
stos
add
rol
aas
loope
mov
loope
mov
adc
leave
imul
push
es
pusha
mov
cwtl
xchg
cmp
add
jmp
xchg
xchg
adc
mov
cmpsb
cmc
push
sbb
js
lods
xorl
shrb
mov
or
mov
push
sub
adc
leave
or
pushf
cmpsb
fisubrl
gs
push
pop
sub
enter
xchg
cwtl
fwait
scas
mov
push
ja
test
fildl
sbb
out
push
mov
xor
adc
add
xchg
mov
xor
pop
stos
inc
inc
inc
cld
mov
shl
mov
cmp
clc
and
xor
loop
add
xchg
mov
ds
jge
jg
daa
cmpsl
out
scas
lods
sbb
cmp
repnz
push
stc
call
dec
out
push
stc
jae
in
cmp
sbb
fsubr
xchg
cs
popf
mov
cmp
rorb
pop
lret
mov
js
jmp
in
clc
pop
into
cltd
cmp
rorl
je
in
or
je
je
cmp
hlt
mov
mov
les
fistl
dec
push
bound
adc
in
xchg
push
add
add
lret
adc
mov
sbb
mov
cld
mov
lret
pop
repz
incl
mov
jecxz
cltd
jmp
or
ret
or
xlat
cmpsl
sbb
lret
push
repz
repz
sbb
std
int
das
enter
pop
sti
push
aad
pushf
test
dec
sbb
cs
mov
adc
jle
or
lods
xchg
or
into
popf
mov
popf
mov
jmp
jbe
std
jbe
cmp
icebp
adc
icebp
outsb
into
adc
insb
sbb
dec
adc
mov
push
dec
sub
les
pushf
mov
ss
dec
pop
dec
jle
frstor
xchg
and
hlt
stc
jb
inc
jp
mov
addr16
xchg
bound
cli
sbb
mov
mov
inc
add
test
or
leave
ss
sbb
pop
cltd
addr16
cltd
cltd
jns
add
jnp
push
testl
mov
pop
rcrl
out
in
lock
mov
cwtl
in
shll
and
aas
mov
sub
push
ret
xchg
stos
and
mov
pop
icebp
jae
xor
insl
add
mov
mov
pushf
push
cmp
aad
emms
cltd
inc
mov
aaa
daa
sub
xchg
movsl
int3
cli
pushf
loope
add
push
xchg
push
pop
add
test
cmp
mov
push
pop
sahf
mov
cs
popa
cmp
arpl
jnp
mov
jo
or
or
adc
fsub
xchg
jecxz
and
push
mov
cld
orl
adc
sar
mov
mov
fsts
into
loopne
push
outsb
and
mov
pushf
cld
test
add
jno
mov
mov
pop
fst
adc
push
int3
sahf
add
arpl
mov
mov
jecxz
sub
xchg
and
push
jecxz
fs
xchg
jnp
xorl
nop
repnz
push
jmp
pushf
pop
sahf
jle
adc
add
fnstenv
mov
stos
data16
sub
mov
xchg
xrelease
lods
inc
adc
xchg
push
pusha
push
sbb
inc
sbb
jl
xor
jnp
ficoml
leave
add
adc
iret
dec
jno
sbb
outsb
inc
xchg
xor
or
popf
pop
and
fnstcw
pop
ret
xchg
sti
push
jae
fisttps
mov
xchg
ja
fsts
push
and
dec
sti
cltd
xchg
shll
loopne
testl
lods
and
inc
cmp
sub
loopne
jp
xor
out
fimuls
ljmp
xchg
hlt
and
pop
jle
outsl
popa
jp
pop
jae
pop
push
lahf
add
ficomps
and
mov
into
push
push
sub
outsl
mov
aas
fwait
xchg
mov
xchg
push
add
lock
mulb
fisubs
sub
test
xchg
and
dec
lds
mov
mov
dec
inc
inc
pop
test
int
popa
add
mov
call
pusha
and
or
orb
sub
aaa
mov
mov
fwait
mov
xchg
jns
xchg
call
imul
test
leave
jo
push
outsb
xor
dec
jo
ret
imul
pop
call
ljmp
jbe
push
dec
nop
pop
jg
jp
xchg
jbe
mov
sarl
and
cmp
lods
pushf
in
and
dec
shlb
mov
or
popa
vmovapd
add
xlat
xor
scas
pop
adc
add
movsl
xor
fstpt
cli
mov
in
into
lcall
orl
les
sti
ljmp
jae
mov
stos
mov
lret
rclb
int
cld
and
inc
addb
mov
mov
repnz
outsb
into
push
jl
pusha
xchg
mov
aam
mov
loopne
xor
jns
and
cmp
int
repz
ret
ds
sub
call
test
or
add
dec
in
mov
push
cld
sub
xlat
cmpsl
testb
dec
ljmp
sbbl
cmp
mov
push
xchg
mov
pop
loop
adc
jae
xlat
out
mov
scas
stc
jo
in
jle
fistl
sbb
push
ja
bound
ja
fistpll
inc
mov
pop
test
in
sub
cld
lea
das
cmp
adc
fidivrs
mov
fs
mov
aam
test
jbe
add
adc
cltd
adc
mov
add
or
mov
lods
sub
int3
push
jae
aaa
pop
lds
out
movsl
js
shlb
sbb
add
idivb
inc
loope
loopne
in
fisubs
fistpl
in
adc
xchg
ret
clc
inc
mov
and
cmpsl
sub
sub
lret
icebp
xor
mov
pop
shrl
cmpsl
out
sti
push
ffreep
jp
in
pop
fmul
jbe
pop
push
adc
in
inc
inc
inc
loope
scas
into
cs
add
incl
pop
and
xchg
sbb
or
lods
pop
xor
mov
dec
push
stc
xchg
scas
fstpt
jp
insb
or
pop
push
add
xchg
cmp
lock
dec
mov
push
adc
inc
call
jae
clc
jp
cld
scas
pop
sub
into
cwtl
xchg
sbb
and
adc
jns
or
js
xchg
sbb
mov
push
lods
push
push
mov
inc
cld
loopne
loop
inc
insb
jl
adc
jp
ret
rol
pop
cmpsl
sbb
jne
inc
xlat
repz
sahf
jae
mov
push
adc
lock
imul
cltd
sbb
jns
ja
mov
mov
pusha
imulb
push
adc
pop
insb
aas
into
repz
mov
sub
add
shl
pop
jns
dec
pushf
mov
adc
cltd
sbb
mov
sub
icebp
fcom
push
subl
dec
mov
xor
ss
inc
ficoml
xor
inc
inc
mov
jae
into
cmpsb
stos
fldt
imul
movsl
jo
leave
sbb
adc
adc
in
xlat
push
repz
mov
sub
mov
cmpsb
adc
outsb
xchg
mov
adc
fadd
fisttpl
popf
push
es
stos
mov
dec
aam
mov
out
ja
pop
ss
ljmp
xchg
xchg
vpaddb
das
jp
and
movsb
push
xlat
push
mov
ds
inc
inc
xchg
sbb
cli
cli
adc
into
pop
mov
lahf
sub
in
repz
mov
mov
xchg
push
push
ss
out
decl
xor
jae
mov
lret
adc
dec
jp,pn
stos
pop
daa
fwait
xchg
push
cmpsb
cmp
mov
hlt
cmp
je
or
aas
inc
repz
in
push
loop
fstps
inc
jne
mov
and
xchg
sbb
scas
cwtl
shlb
aas
inc
rep
or
xchg
pop
push
adc
jg
addb
iret
adc
jbe
int
mov
roll
pop
sbb
jnp
adc
or
jbe
idiv
inc
lds
jmp
outsl
sbb
lret
mov
push
sub
pop
adc
jae
aas
out
jbe
add
outsl
push
jb
jns
xor
mov
fstps
xchg
mov
pop
call
mov
jne
movsl
xchg
fs
mov
fidivrs
mov
lds
jg
scas
test
pop
fs
inc
xchg
lea
mov
xorb
adc
cmp
divb
push
dec
and
push
icebp
lea
nop
stc
mov
jmp
stc
jg
mov
sub
mov
jmp
sbb
in
jmp
sub
xor
jne
sbb
jne
mov
and
or
je
sti
mov
sbb
sbb
popf
cmp
sbb
pop
jmp
scas
hlt
xor
mov
out
add
xchg
and
xor
or
add
pop
out
fidivrs
or
je
lock
mov
mov
mov
orl
sbb
std
cld
jp
loope
adc
cmp
mov
jle
and
pop
mov
push
push
xchg
rolb
xor
add
add
bnd
or
loopne
mov
jl
out
xchg
sti
mov
add
cwtl
ja
je
jecxz
mov
out
popf
sub
ret
xchg
push
rol
mov
mov
popf
pop
pop
je
inc
loop
out
and
add
enter
sub
outsl
mov
mov
daa
lret
je
mov
lcall
push
adc
adc
int3
mov
fldl
aaa
ret
lcall
and
mov
push
push
adc
je
jo
lcall
mov
cmpl
cld
jb
sub
in
outsl
mov
cmp
mov
mov
aam
pushl
hlt
ss
cmc
jo
fmul
ja
mov
frstor
pop
and
sti
and
pop
sahf
repnz
scas
iret
mov
lds
mov
rorb
popa
mov
dec
and
jp
inc
mov
lea
repnz
loop
push
fcmovb
dec
rcrl
pop
dec
mov
test
or
sub
jl
jg
xchg
jp
adc
mov
out
adc
insl
push
and
lret
dec
test
orl
ltr
jge
add
pop
cmpsl
out
loopne
or
fidivrl
mov
in
data16
cwtl
es
iret
fistpll
sbb
out
pushf
mov
sbb
xor
in
in
push
push
push
xchg
dec
sti
push
js
push
adc
lods
inc
fildl
imul
mov
inc
int3
xchg
inc
pop
outsl
inc
popf
jecxz
and
mov
sub
add
push
or
loop
rcl
jne
cmp
sub
cmp
arpl
repz
xor
shrl
push
adc
repnz
aas
in
xchg
xchg
lods
ljmp
push
jp
adc
insl
cmp
cs
cmp
sub
xchg
cs
das
ficompl
gs
jne
jecxz
dec
cmp
pushf
clc
adc
pop
aas
cmp
inc
sarl
pop
das
lods
daa
jp
cli
data16
xor
jnp
jp
clc
fbstp
lret
add
mov
mov
mov
iret
jmp
push
repz
nop
jp
xor
imul
and
pop
fs
jl
mov
rorl
std
lods
cmp
or
loopne
pop
ss
jl
push
std
hlt
jb
jo
les
cmpsl
int
ss
add
xor
fidivrs
mov
sub
inc
jae
stos
movsb
sbb
mov
rol
sbb
xor
stc
orl
cmpsl
dec
popf
pop
hlt
push
scas
lret
jl
sti
mov
mov
stos
lods
pop
jo
jmp
lods
sub
add
frndint
push
sahf
mov
cwtl
jle
repnz
scas
mov
pushf
xchg
fdivrp
mov
inc
adc
mov
mov
mov
mov
imul
fwait
dec
add
pop
loope
sti
mov
sbb
mov
fwait
ret
scas
mov
jo
cmc
jmp
rolb
mov
and
cld
cmp
add
adc
imul
push
pop
push
cmpsl
mov
mov
pop
ret
cmp
xchg
sbb
aas
inc
repz
push
mov
xchg
mov
add
decl
adc
push
adc
mov
inc
xchg
insb
and
pushf
cmp
adc
loopne
push
adc
sub
mov
xlat
and
mov
mov
call
sarb
cmp
stc
inc
ss
push
adc
mov
adc
sti
jmp
jmp
adc
mov
repz
push
sbb
cmp
sub
cld
xchg
push
sub
fs
inc
lahf
mov
mov
ret
test
imul
fs
xchg
loopne
stc
je
mov
cwtl
jmp
pop
mov
xchg
ss
and
aaa
push
jecxz
stos
ss
push
pop
push
nop
jbe
add
push
push
adc
add
std
mov
ss
pop
stos
pushl
sbb
jne
mov
fildl
jecxz
aam
and
adc
mov
adc
in
push
adc
mov
cli
cld
mov
pop
jnp
jo
enter
shr
mov
call
es
xor
jmp
mov
popf
hlt
mov
leave
test
sahf
imul
mov
or
out
leave
mov
adc
jl
sti
dec
jns
sahf
dec
push
jp
adc
or
push
xchg
mov
lods
fcmovu
repz
cld
clc
sahf
pusha
leave
hlt
loop
iret
and
mov
jns
add
test
push
push
mov
adc
test
clc
imul
push
lret
jae
mov
push
adc
shrl
ret
jecxz
pop
testb
adc
adc
push
xchg
push
add
es
and
sbb
cmp
leave
push
push
inc
mov
movsl
xchg
or
inc
mov
movsb
movsl
jp
jne
push
sub
inc
jl
fdivl
add
mov
adc
sub
push
imul
dec
dec
xchg
cltd
and
jl
rolb
or
clc
pop
cwtl
xchg
mov
cmp
mov
jg
aam
adc
addr16
push
and
ljmp
mov
push
imul
inc
cmp
and
inc
add
mov
nop
mov
aam
xlat
dec
jg
loop
pop
sub
fsubr
dec
sbb
xchg
mov
xchg
sbb
sbb
add
mov
mov
pop
aaa
out
cmp
cwtl
jae
pop
jnp
mov
push
sarb
mov
dec
call
lea
shr
loope
or
adc
mov
jae
cmp
icebp
mov
mov
cwtl
jle
lock
scas
cmpsl
loop
mov
jo
cmc
call
push
adc
adc
mov
or
cltd
mov
xchg
fst
in
loope
or
movsb
jp
adc
enter
cmp
into
mov
mov
jae
std
nop
outsb
in
sbb
aam
jp
adc
ja
add
pop
mov
mov
add
xlat
je
push
adc
or
dec
test
aaa
cmp
fidivs
sahf
push
cmpsb
movsb
enter
repnz
add
adc
and
pop
push
pop
push
adc
insl
shlb
lahf
insl
mov
in
push
adc
mov
mov
loopne
and
cmpsb
std
jnp
mov
cld
lcall
call
pop
sub
push
leave
mov
and
mov
mov
cli
mov
call
xor
mov
inc
xchg
cmp
adc
cmpsl
dec
popf
cmp
je
jl
ret
jge
roll
stos
sub
mov
push
imul
cld
jmp
test
stos
stos
addr16
inc
push
sbb
cld
push
out
pushf
mov
add
mov
or
add
push
call
icebp
in
adc
xchg
sub
pop
imul
or
sub
cmp
ja
scas
in
divb
cmp
popa
insl
sbb
add
jl
cmp
mov
out
outsl
pop
icebp
mov
sub
mov
push
adc
int3
out
aaa
xlat
mov
jl
pcmpgtb
mov
cli
cmpl
ror
mov
outsb
fwait
je
call
add
or
mov
rorb
stos
ss
push
test
sahf
xchg
mov
sub
cs
xchg
lods
jp
adc
out
leave
aam
push
adc
dec
in
aaa
cmp
push
mov
dec
mov
std
adc
cmc
fistpl
sub
adc
adc
bnd
mov
decb
lea
aam
inc
pop
imul
adc
or
mov
sub
arpl
test
fldl
lock
cmp
in
imul
and
pop
jne
adcl
lock
cmpsb
inc
fsubrs
mov
push
adc
clc
pop
pop
stos
outsb
clc
test
mov
ljmp
or
sahf
inc
pop
push
ljmp
mov
arpl
mov
aad
add
jne
lds
xlat
mov
add
aaa
nop
xor
push
lea
loopne
push
adc
int3
in
add
inc
push
inc
pop
insl
xchg
inc
aaa
push
rcll
cmc
mov
es
filds
sbb
shll
out
cld
jecxz
pop
or
iret
pop
adc
gs
je
pusha
dec
ficoml
fistpl
sbb
xor
mov
jae
push
cmp
lcall
push
push
adc
and
sub
pop
iret
mov
mov
xchg
movsb
pusha
jne
lods
add
sahf
lret
jno
sub
aaa
push
arpl
rorl
dec
mov
xchg
rcl
aam
mov
addr16
call
xchg
fs
out
ret
mov
sub
mov
dec
inc
inc
cmp
push
fwait
jp
cli
ja
mov
fldt
adc
and
jp
sbb
ret
inc
cmp
xchg
pop
push
mov
cmp
jae
or
cmp
sbb
sbb
mov
hlt
cmp
jne
rorb
cli
adc
sahf
int3
mov
loope
dec
push
les
cmp
jbe
cli
jbe
adc
fdiv
out
popf
cmp
inc
push
push
adc
xor
ljmp
jge
push
rcrb
push
and
testl
cmp
add
jbe
cli
jbe
repnz
out
sub
es
mov
pop
ljmp
ss
jmp
push
cli
xorl
mov
movsb
popf
push
je
je
dec
popf
mull
xor
fldt
mov
addb
lea
adc
cmp
xchg
sarl
std
test
fsubrp
std
sti
mov
mov
out
push
jl
push
mov
pop
mov
sbb
mov
std
ret
push
lret
loope
jp
and
cmpsl
sbb
ret
inc
or
pop
inc
add
jo
add
inc
dec
js
es
je
jmp
shrb
mov
add
cmp
es
hlt
mov
mov
pop
cmpsl
dec
out
cmpsl
inc
cmpsl
testl
push
xor
repnz
arpl
xchg
add
inc
je
jns
fidivs
je
je
sbb
sbb
fdivs
cmp
insb
mov
xor
mov
and
jbe
aad
sbb
cmp
mov
adcb
mov
mov
xor
idivl
enter
cli
andl
mov
or
push
loope
jge
out
sub
pop
jp
ret
addr16
adc
pop
hlt
orl
pop
and
shr
icebp
mov
in
mov
mov
xor
pop
add
les
je
cmp
adc
addr16
inc
adc
rolb
pusha
mov
cli
inc
cmp
test
mov
dec
sbbb
push
insl
sbb
icebp
jae
movsl
mov
addb
iret
gs
mov
or
mov
push
jg
dec
mov
subb
or
add
scas
and
or
out
aam
rsm
gs
popa
sahf
mov
mov
mov
test
iret
in
add
pop
insl
lcall
sahf
mov
idivb
in
sub
push
daa
sub
inc
in
stc
das
int3
sub
jl
popf
inc
fdivrl
jmp
mov
xor
ret
fiadds
push
push
mull
popa
inc
aam
in
aam
sbb
or
jp
push
das
sti
ret
pop
add
bndldx
imul
pop
cmp
repnz
or
shlb
loope
xchg
cltd
or
scas
adc
cmp
dec
mov
pop
subb
or
or
mov
fwait
jnp
repz
sbb
int
insl
cltd
adc
loop
leave
stos
imul
cmp
cmp
adc
jmp
arpl
lods
ds
adc
push
adc
inc
cmp
push
jb
and
test
push
mov
ret
push
call
cmp
pop
lret
mov
stos
mov
aam
mov
pusha
fildll
xchg
lods
stos
dec
push
mov
adc
scas
das
out
out
push
push
adc
lahf
xor
imul
ret
pop
pop
das
dec
push
sbb
jl
push
lahf
imull
sahf
jne
inc
dec
nop
and
into
test
add
xor
dec
repz
and
adc
das
or
popf
imull
data16
rcll
lods
inc
inc
xchg
push
jmp
rorl
mov
xchg
pushl
pop
push
aaa
xor
push
repnz
and
popa
cmp
je
pop
mov
add
xor
xchg
es
mov
pop
ljmp
mov
pushl
cmp
adc
mov
into
insb
and
sub
xchg
movsb
inc
sub
dec
testb
fwait
mul
pop
mov
mov
lea
fs
ja
outsl
daa
pop
lea
add
lds
cmp
jmp
mov
adc
mov
les
mov
cli
mov
push
std
sti
mulb
addr16
and
fcomi
mov
sbb
add
jno
std
sti
jge
pop
cmp
push
jmp
sub
push
cmpb
pop
ret
mov
cltd
cmp
push
jmp
jp
adc
xchg
cld
out
inc
divl
lds
pop
sarw
cmp
out
sub
push
popf
cmp
scas
lds
xchg
adc
jno
sub
xchg
mov
mov
les
cmp
mov
jge
xor
testl
sbb
push
rcrb
adc
jbe
fidivs
push
adc
pop
pop
aam
push
adc
lahf
test
mov
jne
push
push
ja
dec
cld
mov
xor
jbe
inc
ret
sbb
loopne
push
adc
data16
add
in
and
pop
jl
fs
dec
mov
xchg
int3
jno
adc
aas
pop
lds
sbb
inc
cs
fwait
leave
repz
mov
add
lods
iret
mov
xchg
jbe
and
mov
cltd
cmp
ss
fdiv
arpl
jge
scas
xor
cmc
add
std
xchg
addr16
lcall
jp
in
push
or
div
je
sub
adc
and
mov
mov
inc
pop
imul
icebp
xchg
push
xchg
add
jmp
cmp
hlt
pop
mov
fnstsw
push
int3
fcomip
nop
cwtl
cmp
jae
or
insl
test
arpl
out
adc
push
into
fcoms
and
aam
push
hlt
loopne
push
adc
add
addb
rorb
dec
sub
out
stos
push
jl
pop
mov
sbb
lret
xlat
mov
cs
inc
pop
fildl
movsb
dec
inc
sarb
or
push
or
adc
leave
or
or
into
push
mov
js
loope
push
inc
pop
inc
jle
jne
adc
jle
sti
xlat
jb
or
xchg
ljmp
jne
and
xchg
lea
in
addl
dec
scas
arpl
leave
pop
test
call
add
shrl
addr16
cmp
mov
loopne
mov
pop
sbb
lds
cmp
in
js
jo
add
fsts
in
inc
jl
pop
xchg
xchg
das
jnp
ja
pop
in
dec
test
jecxz
or
pop
cmp
cmc
outsl
lock
push
ficompl
nop
and
jbe
mov
push
adc
clc
pushl
dec
and
push
fadd
inc
mov
or
jno
aas
enter
icebp
mov
outsl
fbld
push
push
adc
insb
mov
stos
and
stos
or
push
into
xchg
mov
hlt
iret
jge
pop
not
sub
add
sti
adc
cmc
push
mov
sbb
lahf
out
cmp
xorb
push
jbe
mov
mov
les
bound
cld
fldcw
pop
and
fstl
xorl
xchg
or
sahf
bound
fs
inc
mov
jbe
inc
push
addb
mov
jge
or
test
mov
inc
cltd
test
clc
cmpsb
dec
sub
inc
sub
cltd
mov
or
jnp
mov
jbe
sbb
in
cld
addr16
lret
adc
jg
pusha
movsb
mov
adc
mov
cltd
jb
in
repz
jno
lcall
cmp
cld
stos
sarl
decl
mov
cwtl
rorl
into
aaa
mov
ljmp
mov
and
lret
in
adc
add
testb
lret
cmp
and
jno
xchg
cmp
sub
cld
push
mov
sti
int3
and
xor
test
push
jmp
xchg
fisubs
aam
push
adc
xor
test
xor
sbb
add
stos
mov
or
ja
push
sub
or
cmp
loopne
push
adc
mov
and
icebp
lods
stos
xchg
stc
jno
push
pop
push
adc
adc
fwait
loopne
push
adc
ftst
adc
adc
pop
pop
adc
imul
adc
cmpsl
movsb
add
add
adc
adc
adc
cmp
rorw
xchg
pop
adc
cmpsl
cmpsl
mov
adc
jg
cli
out
pushf
int3
int
push
incb
pop
adc
or
adc
sub
adc
adc
or
adc
adc
test
adc
adc
int3
adc
adc
arpl
lcall
pop
mov
ljmp
jmp
fcoml
lcall
xor
mov
push
adc
pop
sahf
pop
mov
sub
icebp
jb
xchg
jne
call
jb
test
sbb
cld
aaa
stos
xor
pop
inc
test
insb
mov
adc
mov
ss
clc
mov
fnstcw
sbb
test
mov
jp
clc
xor
movsl
jp
sahf
push
mov
push
adc
pop
rolb
notb
idivb
jo
sbb
mov
mov
lea
dec
fdivrl
push
push
and
or
nop
adc
adc
sub
loope
ret
xchg
nop
mov
divb
adc
mov
imul
dec
shl
inc
pop
ds
test
test
movsl
jg
pop
jne
ret
inc
push
sub
inc
test
dec
dec
rorb
or
cld
in
mov
in
or
fiaddl
mov
fisubrs
div
idiv
or
cltd
or
cmpsl
loope
data16
data16
rol
xchg
pop
out
loop
lods
out
jp
and
leave
xchg
xchg
fnstsw
inc
int3
lods
cmpsb
bound
incb
mov
mov
mov
push
pop
outsl
jg
cmp
jp
dec
push
adcb
adc
mov
jle
insl
popa
jp
pop
in
imulb
mov
adc
mov
and
jl
js
cmp
adc
adc
addr16
xchg
test
jecxz
sar
fs
dec
push
fisubl
fnsave
inc
mov
and
pop
inc
jae
out
cmp
cli
sbbb
rorl
lock
push
adc
push
and
mov
lods
imul
xor
popf
push
mov
pop
cmp
and
pop
mov
movsb
sbb
push
push
cmp
in
push
ret
test
push
ret
pop
fisubl
adcb
adc
sub
and
cmp
xchg
daa
inc
ror
adc
cmpsl
dec
popf
cmp
mov
xor
mov
sub
or
jae
es
mov
loopne
adc
mov
mov
das
fbstp
repz
popf
rolb
in
shll
aaa
xor
mov
std
inc
mov
leave
xchg
js
es
addr16
insb
or
popa
les
xchg
icebp
clc
jle
ret
and
scas
push
icebp
lea
je
mov
adc
fstpt
call
mov
push
adc
sub
push
fbstp
adcb
adc
inc
ss
ljmp
xchg
lds
popf
ss
fdivrs
das
pop
and
add
jbe
add
xor
popf
popa
decl
gs
popf
idivl
xor
xor
jo
leave
iret
cmp
cli
movsb
adc
adc
mov
pop
jg
jnp
adc
fcomi
jbe
fsubp
sub
js
push
and
push
push
idivb
xor
xor
mov
push
jnp
adc
fwait
mov
out
pop
cmc
inc
adc
lock
mov
incl
and
xchg
pop
cmp
pop
push
rcrl
xchg
adc
shl
cmpsl
data16
addr16
sarb
mov
push
jbe
in
outsl
cmp
mov
outsb
sub
jmp
std
mov
in
negl
jb
jl
push
adc
xorl
nop
std
jb
jnp
fisubl
add
jle
jbe
in
mov
push
adc
out
loopne
xor
push
iret
jge
into
lods
outsb
cmp
lcall
leave
mov
js
xor
mov
neg
testb
jl
pop
iret
ret
mov
addl
pop
addr16
dec
xorb
test
imul
hlt
mov
aam
negb
clc
imul
jo
pop
adc
and
add
sub
add
adc
aad
xor
imul
in
xor
xchg
jno
mov
imul
test
sub
xchg
data16
jne
ret
shll
push
adc
sahf
jno
mov
dec
cmpsb
hlt
jno
and
rcll
repz
repz
jmp
int3
bound
cmp
int3
xor
inc
lret
shlb
insb
add
repnz
push
inc
pop
sub
cmp
xor
mov
mov
ror
imul
rcrl
je
push
adc
pop
push
push
cmpsb
mov
pop
insb
adc
adc
int
mov
js
ficoml
fidivrs
push
bound
loopne
cmp
or
je
pop
xor
adc
daa
fildll
mov
add
cmc
sti
out
add
xor
dec
mov
pusha
adc
adc
ret
icebp
pop
test
xchg
pop
adc
adc
out
ljmp
xor
test
cmp
push
adc
bound
jae
sub
sub
addr16
pop
mov
adc
sahf
xchg
cltd
inc
inc
outsb
cmp
mov
addr16
pop
inc
pushl
shl
movsb
lahf
add
xchg
pop
push
cmp
jmp
call
cmpsl
pop
je
jl
sti
pop
jp
sub
mov
adc
pusha
sbb
icebp
out
imul
imul
or
jl
cmc
js
adc
call
fs
in
pop
cmpsb
int
sub
mov
mov
sahf
stc
sti
jg
sbb
arpl
mov
xchg
sub
out
mov
fcomi
jl
idivb
push
or
mov
iret
lds
int
pop
push
xchg
mov
testb
lods
jge
pop
mov
test
js
cmpsb
fs
repnz
xor
out
jp
mov
jbe
cmpsb
adc
jns
and
cmpsb
fs
xor
ret
fldt
daa
adc
mov
push
adc
cmpsb
movsl
xor
push
ret
sub
mov
push
out
fistpll
sti
add
add
cmp
adc
cli
jne
and
adc
arpl
inc
jo
fiaddl
adc
mov
add
mov
fsubrp
repnz
jbe
and
mov
dec
popf
mov
xchg
ds
ljmp
scas
xchg
pushf
lods
and
lret
bound
jmp
inc
or
jmp
test
sub
xor
and
add
push
jne
xchg
inc
xchg
stos
stc
cmp
mov
cltd
mov
lahf
pop
adc
rolb
cld
add
and
jp
cmp
mov
jb
jmp
sub
outsb
mov
lahf
pop
adc
je
add
mov
xchg
repnz
pop
jmp
movsl
sbb
add
pop
fwait
sbb
imul
test
jle
fisubs
mov
hlt
fs
stc
fldt
and
divl
or
loope
dec
insb
scas
in
jnp
adc
jmp
aas
movsb
lahf
pop
adc
out
push
movsb
lahf
pop
adc
movsb
lret
jg
add
pop
mov
cmp
and
js
xchg
lods
xor
loope
in
cmp
lock
mov
push
adc
lahf
daa
test
xchg
mov
push
cld
sahf
mov
pusha
cmpsl
sbb
call
dec
sti
sub
jp
xorb
add
pop
push
adc
popa
out
aam
pop
adc
stc
popf
sub
sar
clc
je
aam
fnsave
jnp
adc
cmpsb
inc
daa
push
lret
repz
stc
std
lock
sub
in
repz
and
stc
movl
push
imul
daa
mov
mov
mov
mov
push
adc
mov
xchg
dec
xchg
pop
gs
or
sahf
sub
or
mov
inc
cmp
nop
cmpl
dec
inc
add
test
or
and
jnp
adc
lahf
nop
xor
inc
std
fistpl
ret
div
not
push
fdivrl
and
adc
repz
gs
push
jnp
adc
sbb
lock
xchg
mov
mov
jnp
adc
frstor
pop
fisubrl
mov
aam
mov
hlt
and
dec
test
mov
movsb
and
adc
ret
sbb
adcb
aas
fsts
fwait
cmpsb
cmp
adc
add
pop
push
adc
enter
mov
movsb
push
and
adc
add
push
movsb
mov
movsl
stos
clc
or
icebp
clc
cmpsb
movsb
fldl
inc
mov
lcall
mov
mov
mov
mov
pop
mov
mov
xor
bound
pop
and
out
mov
mov
cld
jno
pop
fsubr
insl
cld
scas
and
adcb
pop
stos
imulb
aas
cmp
imul
std
jb
cmc
push
leave
jae
ret
jnp
lds
mov
icebp
and
mov
pop
adc
add
icebp
imul
sub
sbb
mov
or
adc
cmpsl
dec
bound
jg
cmpsb
mov
pop
out
mov
sbb
les
sub
push
xlat
addr16
or
imul
push
mull
stc
lea
inc
stos
popf
cmp
fmul
cld
test
pushl
push
mov
jge
shll
lahf
mov
pop
out
popf
mov
out
popf
cmp
pop
lahf
xchg
addr16
ljmp
fs
fidivrs
int3
add
orb
cmp
pop
out
hlt
adc
je
cmc
or
cmp
xorl
es
cmpsl
lds
xor
rorb
scas
or
hlt
pushf
out
push
repnz
je
mov
jecxz
addr16
mov
sarb
mov
jo
or
stc
jne
mov
call
cmpsl
dec
push
call
pop
lret
cmp
jmp
jmp
add
and
cld
push
andl
arpl
sub
push
jl
jecxz
adc
adc
fidivl
repnz
mov
cmp
cmp
push
lret
fwait
std
cld
scas
push
loope
adc
adc
int3
lahf
popa
mov
xor
sahf
jmp
jle
pop
cli
adc
jmp
xor
and
dec
cli
jo,pt
xchg
jnp
cltd
cmp
push
jmp
sti
scas
jg
das
jnp
cmpsl
movsb
xor
int
sti
out
xchg
push
mov
xchg
mov
jmp
repnz
div
imul
add
lret
cmpsl
testb
push
addr16
push
sub
mov
and
out
pop
jp
js
ds
ljmp
lcall
outsb
mov
dec
cmp
fisttps
push
adc
and
and
addr16
xchg
add
inc
movsb
jbe
pop
mov
xchg
jp
push
mov
js
mov
lds
inc
cmp
mov
adc
sbb
add
adc
gs
and
lret
rclb
adc
repnz
mov
shll
not
jnp
mov
or
pop
mov
mov
mov
mov
shl
mov
icebp
mov
or
or
and
push
mov
xor
rclb
adc
test
adc
push
ret
mov
xchg
adc
adc
jne
mov
iret
out
xor
test
les
rclb
adc
jecxz
arpl
sub
mov
add
push
cmp
xor
or
lret
push
pop
cmpb
aas
xchg
add
dec
sub
mov
out
pop
lds
or
mov
cmp
scas
push
xchg
pop
push
mov
out
dec
push
inc
pop
adc
mov
push
adc
xchg
wrmsr
fdivrs
lahf
pop
adc
add
imul
lea
imul
iret
xor
adc
out
inc
pop
adc
rclb
adc
sub
ret
cmpb
addr16
je
fstl
mov
in
sub
scas
cmpl
lods
jns
pop
rcrb
sarb
lahf
pop
adc
scas
jmp
clc
shll
xchg
fistpl
rcrb
mov
pop
adc
jae
sub
fsts
mov
xchg
ds
inc
insl
mov
sarb
push
dec
call
inc
jno
daa
das
inc
or
shr
sub
adc
daa
pop
in
inc
xchg
pushf
and
mov
adc
and
cmp
sarb
adc
ret
pop
aas
cmp
pop
adc
das
jo
hlt
mov
mov
mov
enter
xor
test
sub
or
cmp
ljmp
adc
in
jne
out
inc
fnsave
in
inc
dec
dec
scas
sti
mov
fucomip
hlt
adc
pop
push
loopne
dec
nop
jg
mov
dec
push
mov
mov
dec
adc
pop
adc
aad
add
lods
push
jnp
mov
jg
mov
arpl
or
mov
and
cmp
ret
pop
adc
mov
aam
ret
add
jne
jb
sar
and
sarl
and
aas
cmpsb
mov
jne
adc
pop
adc
addr16
int3
jge
in
pop
cltd
adc
pop
adc
pop
orl
xchg
xor
ljmp
mov
sbb
jnp
dec
jl
adc
fs
push
mov
jbe
fistpll
add
divl
test
mov
ret
sti
test
xchg
xor
cmpsl
mov
mov
jg
divl
ja
or
pop
dec
sbb
inc
push
cli
push
repnz
pop
jg
out
ss
add
xchg
std
xchg
je
divl
inc
in
inc
lock
jl
adc
adc
mov
in
fnstsw
lods
jno
int3
sub
and
mov
lods
cmp
fistpll
mov
sti
mov
jae
mov
pop
dec
mov
inc
or
mov
pop
stc
push
pop
imul
jo
mov
sbb
adc
jno
sbb
dec
mov
push
nop
adc
stos
sti
fsubrl
pop
pushf
add
mov
push
push
jno
pop
push
adc
xchg
lcall
aaa
lret
icebp
test
imulb
lahf
into
clc
cmp
jae
cmp
xchg
xchg
movsb
sub
mov
jl
adc
jns
cwtl
or
in
jl
movsb
scas
or
jge
pop
cmp
jl
mov
pop
push
adc
sarl
int
sbb
repz
cwtl
shll
cld
jns
push
sbb
insl
das
inc
in
lahf
xchg
sahf
add
insl
mov
test
pop
sub
sbb
mov
mov
lods
cltd
sub
addr16
mov
pop
and
mov
sahf
xchg
jmp
lret
jmp
rorl
xchg
test
movsb
sub
lcall
pop
scas
jbe
dec
add
jge
frstor
add
mov
mov
lods
sbb
rolb
xchg
pusha
mov
xorl
push
lods
cmp
jno
mov
in
dec
popf
rorl
xchg
shl
or
xorl
es
add
int3
ror
mov
lods
ret
and
daa
stos
pop
xor
push
adc
fldt
adc
pop
adc
lret
sbb
pop
adc
and
pop
adc
pop
push
add
mov
rcr
push
push
shl
rolb
mov
adc
lock
hlt
xlat
inc
xor
jl
xchg
mov
mov
lods
aad
mov
xor
out
inc
das
popa
xchg
cmp
and
push
add
pmulhuw
daa
pop
add
mov
movb
jp
fiaddl
lcall
push
pop
xchg
pop
jmp
cmpsl
and
mov
sbb
emms
imul
daa
cmp
push
inc
mov
or
in
push
adc
jge
das
call
call
push
in
or
int3
aas
xchg
out
scas
and
notl
jbe
jl
and
mov
push
jmp
loop
adc
mov
cmpsl
adc
int3
jne,pt
cli
sub
js
xchg
cmp
ja
adc
push
adc
mov
ljmp
imulb
xchg
ljmp
call
pop
movsl
xchg
xor
mov
lcall
and
frstor
push
jl
adc
or
je
pop
rolb
int
in
push
and
pushl
push
stc
jge
pop
ja
int3
aaa
cmp
fs
inc
sub
fnsave
les
xchg
int
ljmp
push
adc
bound
jmp
cmpsl
dec
int
rclb
adc
std
sti
scas
sub
jns
jecxz
clc
fidivs
pop
dec
lret
les
out
pop
addl
mov
dec
xchg
mov
xchg
sarb
jecxz
cmpsl
lea
inc
xchg
out
stos
mov
repz
sbb
loope
jg
fidivrs
push
adc
imul
push
adc
jl
mov
adc
outsl
xchg
stos
popa
cmp
lods
or
ret
rorb
adcb
mov
fidivrs
push
adc
and
lret
adc
jge
mov
adc
insl
test
and
cmp
scas
or
rcl
popf
out
jl
adcb
mov
fldt
adc
xchg
jo,pt
je,pt
cltd
aas
mov
fcomip
pop
push
test
outsb
xchg
fwait
jae
je
mov
dec
and
push
adc
cld
sbb
movsl
aaa
jmp
jl
adc
cli
adc
sub
push
nop
insb
sub
sbb
mov
ficomps
pop
mov
std
aam
xrelease
jl
pop
in
push
pop
pop
test
dec
lahf
pop
mov
push
mov
stos
or
jl
adc
arpl
test
sbb
adc
cmp
leave
cmp
pop
jbe
es
adc
mov
jg
cld
stc
mov
lods
sbb
and
cwtl
inc
pop
adc
xchg
in
mov
stc
int
mov
mov
int3
fs
mov
fwait
lock
stc
mov
fwait
push
shll
push
inc
jo
xor
arpl
pop
jb
ss
mov
adc
adc
adc
or
sbbb
inc
scas
jne
dec
stc
rcl
mov
jge
ret
rcrb
jecxz
mov
mulb
add
jge
adc
add
add
adc
dec
mov
call
jge
adc
ret
add
adc
mov
mov
aam
jge
adc
mov
rorl
inc
mov
sbb
inc
mov
fs
jo,pt
icebp
and
pop
adc
xchg
push
mov
sbb
adc
push
adc
jmp
les
push
adc
jno
mov
push
adc
jg
adc
adc
adc
in
or
rolb
xchg
fidivs
lock
pop
adc
xor
pop
adc
inc
mov
jle
lcall
lock
pop
adc
idivb
adc
out
sub
adc
in
daa
stos
fldcw
push
fisubs
test
pop
mov
scas
test
aam
lock
cmp
pop
filds
sbb
jge
mov
out
cld
cmp
decb
cwtl
out
dec
dec
lahf
mov
inc
lret
je
jg
xchg
add
out
pop
ljmp
jl
pop
adc
adc
mov
movsl
data16
mov
mov
stos
push
daa
je
shll
out
fistpll
je
icebp
jo
adc
xchg
and
and
outsb
xlat
xorl
out
sub
test
je
std
sti
imul
push
ret
stc
andl
push
cmpsb
stos
mov
ret
mov
pushl
jo
jmp
icebp
jne
cmpsb
lret
dec
jmp
mov
fcomi
loop
mov
mov
jo
lret
and
sti
daa
mov
add
or
push
inc
sahf
out
push
push
pusha
xchg
pop
adc
pusha
cld
stos
and
mov
fpatan
jge
rorl
xchg
ret
push
in
push
out
dec
xchg
or
scas
add
pushf
in
and
dec
incb
jecxz
mov
mov
push
sub
xor
jl
lret
lods
jg
repz
int3
add
push
ja
pusha
rclb
fistpll
cmp
adc
jo
pop
adc
cs
jg
pusha
xchg
inc
stos
aaa
xor
jecxz
mov
jle
sub
xchg
push
iret
pop
pop
mov
pop
ret
mov
jg
jle
ja
and
mov
insl
fdivrl
lahf
cmp
xchg
lods
test
xor
sub
sub
out
pop
xchg
mov
sbb
lahf
int3
fcomip
out
sti
div
jle
jne
or
fs
insb
sti
out
xchg
fnstenv
sahf
ja
xor
xlat
cmp
cmp
mov
aaa
sub
ret
jmp
pop
adc
in
mov
mov
in
mov
pop
pop
and
pop
push
dec
adc
sbb
fistpll
mov
lock
mov
fadds
inc
mov
scas
xor
gs
sub
cli
jo
mov
xor
push
int
xchg
sub
or
or
mov
jle
loopne
ffreep
and
aam
push
daa
inc
sti
cmp
jae
or
mov
jmp
xchg
mov
add
outsb
mov
mov
lods
ret
mov
in
shl
cmpsl
jnp
jmp
lods
aad
mov
out
fs
lcall
or
int3
push
imul
icebp
shrl
icebp
scas
insb
jne
ret
scas
mov
out
or
movsb
mulb
stc
mov
loop
ss
pop
fisubrs
mov
clc
mov
call
adc
sbb
or
decl
or
lods
jae
popf
stos
adc
lcall
jne
loop
imul
adcl
add
xor
xor
scas
andb
xlat
adc
pusha
mov
scas
lcall
adc
das
lods
sub
jnp
imul
mov
lock
dec
add
sub
inc
pop
sbb
xor
int
fdivs
adc
ja
sub
or
ror
xchg
xchg
xchg
js
push
sti
fstpt
mov
lea
hlt
dec
xchg
iret
ljmp
pop
xchg
adc
fists
lret
jg
jo
pop
adc
or
fstpt
sub
push
pop
cltd
sbb
inc
xor
push
push
mov
dec
jae
stos
aad
xchg
cmpsl
sbb
lret
movsl
ljmp
cld
cmp
outsl
add
xchg
out
mulb
xor
push
in
sub
sub
jbe
pop
pop
hlt
into
add
mov
inc
cmc
jb
push
loopne
mov
cld
je
pop
jnp
mov
fisttpl
outsb
fidivrs
push
jl
xchg
in
fistpll
test
mov
dec
pop
cld
into
add
xorl
cmp
ret
mov
xor
fcmovnu
je
divb
cli
outsb
and
or
mov
lahf
pop
stos
std
adc
push
out
divl
orl
jmp
outsl
push
clc
lret
mov
adc
jbe
adc
mov
cmp
mov
ja
push
mov
repz
sbb
jo
into
add
call
xor
repz
scas
testl
in
ret
pop
adc
jle
sbbb
pop
adc
divb
nop
cli
mov
jne
fidivs
cltd
sbb
shll
jecxz
ss
pushl
pusha
mov
arpl
sbb
pop
out
cmpsb
ds
pop
adc
cli
pop
adc
fcmovnb
imul
mov
lea
sti
mov
mov
cltd
loopne
fmuls
iret
add
sub
xor
nop
mov
adc
mov
mov
mov
aad
jg
cmp
aaa
jp
add
sub
aas
mov
cmp
pop
mov
add
or
pusha
movsb
lods
iret
mov
mov
insb
test
mov
adc
jge
mov
mov
aas
sub
pop
clc
mov
add
vpsllq
outsb
xchg
pop
loop
rcll
mov
je
faddl
or
push
jno
je
pop
mov
jl
pop
adc
mov
gs
gs
ret
je
clc
and
out
out
mov
pop
mov
mov
mov
inc
in
or
jae
mov
push
hlt
icebp
mov
pop
inc
into
clc
jno
mov
insl
xchg
sub
xchg
repz
popa
add
jge
notl
push
arpl
dec
push
xor
add
call
adc
adc
cmp
push
cmc
fmull
push
adc
mov
daa
dec
scas
fildl
rorl
jp
mov
jecxz
inc
cmc
cmp
into
cmp
push
enter
mov
lods
jns
sbb
in
repz
dec
out
mov
jg
adc
adc
in
rorl
test
movsb
sbb
sub
mov
pushf
inc
lahf
paddq
jp
scas
jno
fwait
cmp
roll
stc
add
xchg
cmc
jno
movsb
lahf
jmp
aas
std
std
pusha
dec
repz
push
adc
mov
dec
jns
int3
jae
adc
sub
sbb
fiadds
push
xor
push
scas
lods
push
adc
adc
fcmovnbe
jae
rolb
push
lock
push
or
and
cs
iret
push
pop
outsb
push
inc
mov
scas
fldenv
inc
lcall
push
mov
adc
xchg
add
scas
push
mov
outsl
add
xor
sbb
sub
fadds
sbb
daa
inc
sbb
ret
mov
lcall
cmpsb
cmc
pop
cltd
sub
out
repnz
sahf
shrb
push
movsb
push
xor
fs
lret
sti
bound
daa
std
pop
jl
cmp
shlb
rcrb
lea
dec
cltd
sub
push
push
out
inc
icebp
ffree
fs
adc
xchg
adcb
lret
add
movsb
xchg
add
dec
and
fincstp
pop
mov
xchg
push
sbb
aaa
xor
aas
stc
gs
adc
pop
mov
sub
mov
pop
lea
dec
addb
loope
cmp
push
push
cmc
dec
out
popf
cmp
push
jae
out
mov
ljmp
in
das
inc
xchg
or
cmpsl
dec
shlb
pop
and
je
jo
lcallw
popa
mov
mov
scas
adc
ja
adc
xor
xor
in
sti
negb
js
xor
dec
popf
scas
jmp
ja
out
push
jg
call
in
sti
imulb
mov
mov
push
mov
insb
shrb
push
xor
scas
fucomi
mov
jge
adc
mov
dec
nop
pop
flds
cmp
bound
je
pop
jge
pop
or
adc
adc
cmc
nop
jo
pop
adc
dec
pop
shlb
notl
adc
adc
in
jnp
pop
jge
adc
add
dec
popf
hlt
mov
mov
or
sub
xor
sbb
fwait
cmp
xorb
push
mov
cmp
imul
out
iret
jmp
cmpsb
dec
popf
cld
sub
je
jl
fidivrl
loopne
mov
and
push
adc
xchg
xor
adc
mov
mov
scas
push
sbbl
lret
fwait
push
lock
push
adc
mov
xor
xor
jns
sti
mov
or
xor
and
sbb
pop
pop
leave
arpl
add
sub
clc
sbb
sti
frstor
stc
data16
in
mov
or
je
sbb
push
shrl
push
cmp
je
hlt
cs
out
lahf
loopne
pusha
and
je
mov
aad
movq
jmp
ss
fcmovnbe
inc
mov
popa
rorl
adc
mov
scas
cltd
je
jnp
mov
mov
out
fdivl
inc
clc
dec
push
aaa
adc
mov
cld
ds
mov
enter
pushf
mov
push
push
fistpl
adc
cld
and
add
nop
jge
adc
mov
add
inc
jle
xchg
mov
mov
jno
stc
or
cmp
adc
insl
imull
push
in
lods
sbb
imul
add
add
sbb
ja
mov
testl
sbb
push
dec
xchg
loope
rsm
lret
jge
adc
xlat
mov
jecxz
pop
fwait
xchg
clc
or
xchg
repnz
inc
cmpsl
js
jns
popf
out
stos
in
lods
dec
dec
andb
stos
call
cmp
inc
or
jmp
test
or
push
cld
in
orl
dec
jp
testl
mov
popa
dec
div
in
sarb
jae
jge
adc
cmpsl
outsl
loope
test
fildll
jle
out
push
fidivrl
mov
je
mov
adc
pop
push
push
adc
subb
fs
dec
inc
shlb
out
xchg
call
sub
mov
lcall
cs
xchg
int3
sbb
mov
xor
fwait
popf
shrb
mov
outsl
push
mov
and
jbe
push
cmp
pop
push
dec
mov
jl
dec
pop
cmp
sub
repz
es
adc
sub
rclb
lcall
jb
sub
jnp
pop
xchg
into
mov
cmpsb
test
push
fcom
int3
fsubr
cli
or
pop
test
mov
pushf
fs
leave
lods
rorb
outsb
push
sbb
ret
insl
xchg
std
or
fisubl
es
insl
aam
scas
sub
clc
imul
mov
ds
clc
xchg
out
push
pusha
push
pop
mov
je
out
filds
les
popf
xor
sarl
lahf
add
xchg
insb
and
pop
adc
lret
push
adc
sbb
adc
sbb
movntq
jmp
loope
popf
lcall
and
xlat
cmp
jge
xchg
sbbl
int
fildl
stc
in
or
int3
or
fdivrs
adc
pusha
adc
adc
mov
sahf
push
mov
mov
pop
push
mov
ss
pop
test
sbb
fbld
mov
jno
mov
je
je
fldpi
std
cmp
insb
stos
test
repnz
popf
dec
gs
popf
inc
call
cmp
jl
decb
int3
mov
out
lret
cmp
hlt
sub
cmp
std
mov
mov
cmp
adc
jmp
sub
popa
add
mov
ds
out
cmp
out
or
insl
out
shl
into
popf
and
clc
repnz
stos
jnp
jmp
mov
jb
push
or
dec
imul
arpl
testl
das
mov
xchg
int3
sarb
ja
adc
xchg
mov
jl
fs
inc
hlt
mov
ret
xchg
int3
cmp
shlb
mov
mov
lcall
cwtl
push
sbb
fwait
cli
sti
sti
divl
sidtl
pop
loope
adc
push
es
cmpsb
dec
inc
loopne
adcb
and
cwtl
jecxz
xchg
pop
orb
pop
adc
mov
adc
lods
mov
rolb
cmp
bound
mov
add
pop
leave
repz
add
push
push
aaa
and
inc
aas
ja
ret
cmpl
cmp
in
mov
jp
repz
dec
mov
test
pop
adc
lods
mov
mov
push
test
test
pop
adc
inc
std
test
pop
adc
push
ja
sbb
hlt
loopne
jb
test
sub
mov
xchg
loopne
xor
stc
inc
lods
mov
mov
mov
jge
adc
push
dec
prefetcht2
shl
jecxz
lea
lds
or
dec
pop
adc
das
or
je
inc
scas
imul
shrl
add
aas
add
push
and
ljmp
sbb
pusha
icebp
xchg
mov
push
bswap
mov
int3
adc
mov
add
push
fcoml
xchg
movsb
mov
addl
cltd
movsl
out
stos
add
andl
push
lcall
push
mov
inc
mov
jb
adc
jle
hlt
xor
and
out
adc
data16
iret
ljmp
add
ljmp
or
in
enter
and
in
or
lock
lret
add
dec
mov
inc
jno
orl
xorb
xchg
push
movsl
jnp
xlat
cmp
fistl
movsl
fildl
inc
fisubrs
push
cmc
xchg
adc
daa
pop
add
add
repnz
fildl
test
movsb
dec
ljmp
out
fisttps
rorb
stos
mov
add
test
add
dec
lods
arpl
xor
add
jecxz
fiaddl
in
fiaddl
adc
add
pushf
outsl
aaa
mov
cs
mov
sbb
ss
in
sbb
push
int
mov
sbbb
fildl
shll
push
mov
sbb
repz
pmuludq
cmp
mov
test
adc
add
or
das
dec
push
std
jbe
ss
push
testb
cli
pushf
fildl
push
popf
xchg
fildl
sbb
adc
add
jo
add
push
fildl
pop
fildl
push
fildl
mov
addr16
or
stos
push
push
idivb
jae
jg
push
pop
in
xor
mov
addr16
or
iret
cld
stos
push
inc
idivb
jae
jg
push
dec
loop
xor
out
sahf
lret
sub
fistpl
lods
fildl
mov
add
rcr
adc
fildl
js
mov
mov
adc
loope
ss
jne
jne
jl
fidivrl
sub
aaa
cmp
mov
mov
cmp
test
jne
std
jbe
stc
jge
shr
xor
jg
jle
jmp
or
das
push
mov
fwait
mov
std
jle
lahf
dec
pushf
jnp
xchg
jb
fldl
bound
xchg
bound
cli
call
mov
je
inc
clc
imul
fcmove
jne
pop
int
repnz
push
cmp
add
mov
push
cmp
add
outsl
dec
faddl
jo
add
cwtl
faddl
js
int3
mov
and
in
pop
push
jg
pop
testb
es
clc
cmp
add
push
call
cmp
stos
fistpll
jne
stc
jns
std
jno
fnsave
xchg
ror
cmc
or
outsl
rcll
add
scas
stc
lods
fcomps
jge
idivl
out
stc
popw
pop
jae
test
push
fdivrl
xor
lds
orl
adc
iret
jae
fldl
inc
in
in
faddl
hlt
faddl
cld
faddl
add
add
or
add
adc
add
sbb
add
das
fldl
pop
andl
adc
or
xor
fimuls
push
lret
aaa
sti
xor
cmpsl
cmp
add
bnd
sahf
insl
dec
push
jb
ljmp
cmc
cmp
jl
push
xor
pop
aas
stc
andb
popf
bound
fldl
xchg
inc
dec
fldl
push
fldl
pusha
fldl
je
add
jecxz
mov
stos
sub
or
dec
adc
mov
jno
jne
clc
jp
icebp
jl
loope
bound
je
lods
leave
int3
push
and
mov
jb
mov
imul
in
jns
std
scas
lods
pop
outsl
cmpsl
xchg
fwait
xor
shl
sahf
xchg
in
insb
xchg
nop
add
pushf
inc
add
cwtl
repz
adc
inc
out
dec
stos
loop
roll
inc
jb
jle
xchg
imul
inc
push
add
in
cmp
mov
scas
rol
add
fisttpll
into
push
push
lea
xchg
cmpsl
fwait
or
pop
push
add
dec
mov
xor
pop
xor
dec
div
pop
xorb
loopne
andb
push
cwtl
cmp
sahf
xchg
cltd
add
push
out
cltd
in
scas
and
jg
xchg
xchg
pop
xor
jl
xor
es
loope
push
push
mov
inc
pop
nop
add
push
test
sub
orb
loopne
xor
bound
sti
or
adc
xchg
nop
cmp
daa
jno
imul
rclb
sub
dec
loope
mov
xor
jbe
popf
push
and
lods
out
pop
negl
push
int3
psadbw
push
sbb
dec
jae
out
dec
mov
lea
fbld
xor
cmp
pop
lcall
repnz
xchg
out
push
sbb
sbb
idivb
push
gs
adc
sbb
fwait
xor
mov
dec
push
dec
adc
cmpsb
mov
jbe
cmpsl
mov
inc
insb
inc
adc
adc
mov
cmp
pop
jle
xchg
jg
addr16
jl
xlat
mov
push
fmuls
insb
sbb
dec
adc
mov
mov
xchg
sbb
je
push
push
sub
jl
pushf
mov
aam
mov
adc
incl
pop
push
outsb
fidivrs
cmp
or
aam
mov
xor
ljmp
fstpt
fiaddl
clc
inc
jl
sub
add
data16
jo
push
notb
out
stos
inc
lock
je
ljmp
push
dec
jo
jbe
stos
adc
ja
iret
popf
cmp
enter
add
xor
push
cli
xchg
jle,pt
in
push
inc
ss
pop
repnz
popf
shll
call
xchg
repnz
filds
adc
lea
pop
mov
jmp
push
pop
adc
jl
data16
jne
jo
je
jbe
or
popa
std
xor
shlb
adc
adc
je
data16
push
rclb
push
inc
loope
cs
mov
adc
mov
push
dec
mov
inc
aas
jbe
mov
pop
jne
push
mov
sbb
mov
iret
jo
dec
mov
test
xchg
push
in
sti
jno
je
in
push
dec
repnz
in
mov
lcall
pop
mov
mov
mov
jge
out
ss
aaa
xor
sub
into
xorl
adcb
mull
lods
out
jbe
jl,pt
jp
popf
fidivrl
mov
and
xchg
jns
scas
push
sub
test
push
aad
roll
fldenv
in
mov
in
aaa
pop
scas
inc
in
ss
inc
ds
mov
add
mov
xor
or
xor
imul
cmp
push
cmp
sahf
inc
jecxz
movsb
push
loope
jecxz
push
sub
pop
movsb
cwtl
insl
pop
cmp
cmp
stc
cli
pop
mull
dec
imul
mov
imul
scas
jae
jp
loopne
addr16
xor
out
mov
mov
into
mov
lock
sbb
in
push
icebp
lds
in
test
mov
mov
mov
and
popf
in
cmp
mov
shll
dec
mov
inc
dec
inc
xchg
jnp
leave
nop
push
ret
pop
xor
adc
inc
paddsw
add
sbb
add
pop
stc
icebp
or
mov
sub
cli
icebp
push
mov
scas
es
leave
xor
push
pop
adc
arpl
in
gs
cmp
scas
or
sbb
push
cltd
add
mov
loopne
lcall
jbe
push
pop
ret
jmp
test
dec
or
movsl
pop
mov
in
xor
and
pop
outsl
or
pop
add
and
scas
mov
xchg
lret
mov
aas
xchg
stc
adc
push
movsb
push
aaa
cmpb
xlat
mov
das
cmpsb
rep
jp
or
dec
push
loope
add
les
scas
das
inc
das
xor
mov
sbb
scas
pop
jae
test
pop
and
cmpsl
pop
addr16
outsl
in
pop
mov
fnstsw
jno
mov
bnd
aas
lods
cli
dec
xchg
mov
push
add
push
dec
xor
add
mul
xchg
mov
ja
lea
cmp
push
sbb
out
push
repnz
cmp
ret
lods
scas
pop
mov
sti
mulb
cmp
push
dec
loopne
fisttpll
sub
pop
loop
adc
fwait
fwait
push
mov
rclb
je
repnz
push
stc
lea
xchg
sub
jne
bound
lods
push
lock
les
clc
adc
scas
int
xchg
into
enter
jle
fmul
stc
lods
daa
negl
ret
lahf
and
inc
adcb
mov
outsl
cld
insb
fwait
gs
jge
and
imul
xor
mov
repz
fcmovbe
js
inc
xor
sub
push
idivl
xor
xor
data16
mov
mov
inc
pop
mov
ljmp
pop
sarb
or
sti
imul
scas
mov
adc
dec
xor
shlb
mov
scas
or
add
hlt
cmp
std
js
jmp
mov
sbb
in
adc
adc
in
adc
in
adc
adc
movsl
arpl
das
dec
pop
jge
addr16
mov
pop
std
je
cmc
outsl
sbb
in
sbb
push
enter
xor
mov
jne
jne
cmc
xor
aaa
out
pop
cmp
adc
xlat
ljmp
in
adc
sub
jp
pop
jne
sbb
je
lret
sbb
js
pop
push
out
sbb
or
add
jbe
sti
add
add
lock
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
movq
and
mov
sbb
in
mov
pusha
pop
push
lcall
les
popa
inc
xchg
adc
push
sub
out
lret
jb
pop
fmull
inc
inc
xchg
cmp
sbb
add
and
add
xor
add
inc
in
adc
mov
call
sbb
movsb
das
lods
mov
scas
mov
xor
and
mov
je
cld
jnp
push
mov
lahf
mov
fdivrl
sti
test
bound
and
sub
mov
add
lret
or
and
push
cmp
js
and
mov
dec
push
gs
add
push
cld
pop
out
adc
scas
lods
dec
into
mov
cmc
mov
loop
loop
or
inc
lods
in
adc
add
xor
add
or
add
enter
push
or
mov
in
mov
dec
out
xor
sbb
out
adc
int
orl
rcll
dec
dec
in
adc
daa
rclb
dec
js
pop
shll
in
aaa
test
or
mov
andb
push
mov
mov
fistl
push
adc
das
mov
gs
ret
inc
push
int3
sub
adc
add
fs
adc
adc
adc
adc
add
lahf
out
adc
lds
rcrb
adc
repnz
or
lret
sub
fistpl
scas
inc
bound
xchg
ret
cmp
pushf
rcrl
fwait
cmpsb
push
daa
lods
jns
outsl
ss
jecxz
test
nop
dec
arpl
mov
cli
lcall
pop
sub
sarb
test
add
lock
shl
adc
out
adc
out
adc
inc
adcb
xor
scas
adc
jo
jb
sbb
daa
fdivr
mov
mov
and
pop
mov
jno
or
xor
xchg
pushl
add
cmp
mov
je
fincstp
movsl
push
call
pop
push
in
gs
popf
cmp
leave
xor
int
mov
pop
sub
repz
call
aad
lret
cs
jl
je
ds
shr
push
mov
push
clc
jne
sbb
push
push
shll
sub
sti
lea
jbe
lds
fs
xchg
and
jp
fs
bound
mov
jl
jbe
pop
lret
lahf
je
add
xor
scas
scas
scas
aaa
lods
dec
cmp
jmp
outsl
adc
jns
mov
xor
jae
push
test
and
and
insb
nopl
jmp
cld
ja
jge
adc
test
sbb
jge
sbb
loopne
push
adc
es
mov
xchg
mull
pop
jg
cmpsb
jbe
sti
mov
add
mov
inc
and
jne
shll
jmp
jmp
sbb
cmp
loopne
push
adc
jno
daa
inc
add
sub
dec
jne
xchg
and
das
pop
adc
add
js
scas
mov
icebp
imul
jne
adcl
cmp
cmp
mov
imull
mov
jge
adc
xor
jle
mov
jnp
mov
inc
call
cmp
pop
stc
mov
outsb
sarb
adc
pop
mov
ss
lods
push
mov
loope
inc
xorl
jle
adc
pop
cmp
fiaddl
jle
adc
push
or
or
outsb
and
sub
or
or
lea
jns
cmpb
idivl
add
mov
ret
cmp
pop
push
in
cmp
dec
pop
adc
adc
push
pop
adc
fcoml
adc
push
loopne
pop
adc
imul
push
call
imul
cmp
sar
jle
notb
jl
in
test
pop
adc
sbb
jmp
jnp
mov
mov
lods
jb
stos
ret
loopne
mov
movsb
mov
iret
xor
cmpsl
aam
dec
nop
cld
add
pop
jp
notl
aam
add
ljmp
jg
rcrb
jno
test
ret
ja
aam
add
jnp
bound
mov
sbb
cmp
andl
dec
pop
adc
jae
js
rorl
rclb
mov
inc
scas
pop
mov
fisubs
iret
lock
pop
inc
adc
adc
add
fdivrs
ljmp
nop
push
pusha
arpl
out
xor
mov
pop
adc
dec
and
mov
adc
int3
fsubr
sbb
inc
adc
adc
out
and
insb
xor
or
add
push
inc
ss
pop
adc
jo
cltd
out
cs
xchg
dec
pop
adc
mov
dec
pop
adc
cmpsl
jb
out
in
xchg
sahf
mov
pop
adc
mov
loopne
pop
adc
dec
and
pop
outsl
push
mov
mov
add
mov
aaa
addr16
sub
imul
dec
std
xchg
adc
sahf
add
inc
mov
jle
in
pushf
inc
jl
pop
outsl
in
pop
xchg
sbb
pop
jno
sub
in
sub
fmul
popf
mov
jb
mov
clc
movsb
push
and
and
mov
push
mull
fcomps
mov
int
cmp
sub
push
push
mov
mov
mov
jne
negb
int
xor
fucomp
cmp
ss
lahf
mov
xor
mov
dec
mov
int3
popf
pop
mov
and
cmp
enter
mov
add
push
and
xor
scas
loopne
xchg
lods
cld
cmp
cmc
shll
sbbl
je
mov
into
sub
sub
xchg
cmc
inc
cs
bound
fbld
dec
popf
mov
orb
and
sub
xchg
fisubrl
xor
cmpsb
and
out
pop
inc
andb
repz
ret
cld
ljmp
pop
jg
call
loopne
push
inc
addb
mov
aas
cs
jo
sbb
ret
mull
ret
pushf
add
push
adc
mov
ret
dec
pop
repz
push
pop
mov
sub
pop
bound
adc
pop
xor
add
cmp
xor
sbb
xchg
cmp
loop
jne
xchg
adc
jl
mov
pop
icebp
fdivr
sti
scas
lea
cli
mov
jo
xor
js
cmpsl
xchg
sbb
insb
out
fucomip
hlt
pop
pop
idivb
std
add
std
xor
jmp
mov
pop
inc
jno
sbb
movsl
mov
repz
jg
hlt
scas
pop
xchg
and
add
mov
mov
pop
fidivl
insb
or
fs
sbb
adc
sbb
add
add
lcall
pushf
mov
xchg
ljmp
inc
mov
stc
and
pushf
lahf
jle
cmpsl
jge
add
scas
sbb
es
xchg
test
ds
sahf
out
shll
cwtl
aad
xchg
mov
std
sti
mov
sub
adc
adc
xlat
sub
jge
mov
aam
pop
out
sti
sti
xor
in
repz
in
jg
repz
adc
out
xchg
push
insb
push
scas
mov
popf
push
mov
je
out
stos
or
dec
jbe
lods
imul
push
cmp
mov
out
scas
outsl
mov
test
xor
cmpsb
sub
insl
jns
xchg
lahf
movsb
outsl
out
in
push
inc
xchg
fs
dec
pop
adc
mov
cs
mov
addb
push
or
test
jl
mov
jnp
push
mov
xor
lods
push
cmp
push
push
bound
mov
bound
mov
mov
jns
ficompl
std
dec
xor
xor
cltd
ss
mov
sti
xor
jnp
push
xchg
je
push
xor
repnz
sub
or
ret
mov
mov
lss
and
mov
je
push
dec
pop
ljmp
cmp
sbb
int
xchg
test
lret
pop
sbb
shrl
outsb
adc
or
fcoms
enter
mov
ret
test
cmp
mov
add
test
add
sub
icebp
sub
aam
out
aam
imul
ret
dec
inc
push
movsb
pop
dec
xor
repz
loop
fists
cmp
sbb
cmp
jns
out
cmp
out
and
push
dec
loopne
hlt
pop
and
insb
loopne
outsl
data16
jne
pusha
inc
sbb
dec
inc
pop
outsl
cld
lods
jle
shll
jp
dec
loopne
cmpsl
ficoms
dec
mov
fs
cwtl
and
outsb
lods
inc
cmp
xchg
or
mov
adc
inc
xchg
stos
mov
popa
test
dec
leave
int3
pop
in
fidivrs
andb
xor
adc
out
dec
sbb
ja
mov
cmpl
xchg
pop
sahf
xchg
lcall
adc
adc
imul
les
cmp
fisttpl
mov
movsb
imul
stc
repnz
aaa
jp
push
fistl
mov
repnz
les
movsb
les
cmp
push
mov
fwait
or
je
js
out
jecxz
sbb
cmp
arpl
jmp
and
lahf
add
int3
aas
mov
pop
mov
mov
push
sti
xchg
mov
mov
lea
mov
xor
xor
mull
dec
mov
push
jecxz
popf
divl
out
fbstp
fucomi
mov
aas
adc
stc
push
push
pop
jns
dec
pop
cmp
out
push
pusha
dec
push
shlb
hlt
cmp
std
std
sti
negb
push
jnp
xchg
cmp
cli
pop
mov
call
aas
mov
jge
cli
addl
repz
into
out
lods
and
pop
cmp
rcrl
cmp
sub
cmp
lock
std
sti
add
fdivs
js
pcmpeqb
add
cmp
add
lret
mov
movsb
xor
fidivrl
nop
repnz
push
daa
lds
sahf
jmp
pop
and
cli
push
sti
imul
pop
ret
mov
outsb
or
and
sub
cmpsl
mov
dec
jnp
sbb
mov
ja
adc
insb
cmp
fidivrs
fmuls
mov
jae
or
sti
int
jg
negb
mov
jne
add
push
inc
dec
xchg
mov
cmc
mov
mov
jecxz
cs
outsl
ficompl
ljmp
je
and
pop
movsl
cmpsl
cmp
bound
loop
mov
pop
xor
int3
ss
mov
push
jb
in
int
xchg
icebp
bound
pop
test
cmp
aaa
lcall
fcmovu
mov
cltd
cmp
stc
mov
or
push
rolb
inc
sub
pop
xchg
lock
sbb
inc
out
mov
jge
cmpsb
cmpsb
cs
out
into
fiaddl
xchg
movsb
push
pushf
mov
add
test
pop
xchg
stos
mov
test
test
fcmovu
jp
sub
lret
xchg
pop
or
in
mov
cwtl
pop
ja
inc
out
sbb
and
out
sbb
hlt
out
xor
push
jo
jno
je
shll
movsl
mov
out
sub
pop
adc
sbb
pop
jae
call
lods
je
push
xchg
mov
ja
fstps
inc
imul
pop
jnp
jns
sarb
ja
lock
out
out
add
les
mov
es
mov
sub
mov
andl
into
fidivrl
adc
mov
stc
aas
mov
inc
loope
inc
xlat
sbb
cmp
shll
out
data16
xchg
pop
mov
insb
add
leave
sbb
dec
popl
sbbl
jae
inc
insb
sub
push
loop
lahf
pop
out
std
sbb
dec
jmp
push
add
shl
mov
insb
sub
sbb
sub
cmpsl
insl
mov
cltd
cmp
inc
mov
outsb
xor
scas
and
and
inc
mov
or
stc
sub
inc
or
jl
popa
jp
and
pop
push
xchg
in
sbb
jecxz
inc
dec
pop
loope
loopne
cmpsl
test
jecxz
inc
das
rcrb
aad
addr16
mov
inc
outsb
cld
cld
mov
inc
nop
push
shlb
push
mov
jmp
inc
test
adc
mov
inc
ja
mov
pop
pop
aam
cmpsb
ss
cmpsb
es
popa
sbb
cmp
lret
faddl
leave
push
pusha
jl
iret
lret
jecxz
xchg
jp
aas
and
and
xor
hlt
imul
cli
popf
mov
ljmp
or
and
fs
add
and
mov
mov
mov
xchg
call
or
and
outsl
aaa
adc
ljmp
sar
adc
inc
cld
xor
test
dec
das
outsl
fidivrs
cmp
push
adc
inc
dec
aas
mov
xchg
into
test
push
adc
sbb
push
jg
fisubl
aas
fs
std
sti
sbb
fidivrs
ljmp
cmpsl
dec
popf
mov
andps
arpl
std
cli
stc
imul
add
in
cmp
push
adc
push
adc
scas
je
out
cltd
jne
out
nop
insb
sbb
push
addl
sbb
pop
cld
mov
inc
cltd
je
cmc
popf
jg
sbb
in
mov
sti
mov
pop
repnz
mov
sub
jb
inc
scas
lods
or
outsl
fiadds
jp
sbb
cmpsl
dec
popf
mov
and
cmpl
push
add
into
xor
out
push
repnz
mov
mov
pop
scas
sti
aaa
sub
ficoml
add
add
in
lods
dec
add
xor
sub
sti
inc
lds
add
clc
hlt
out
fnstcw
add
and
sti
scas
imul
adc
jge
std
add
xchg
cmp
ret
jecxz
hlt
cltd
dec
gs
sub
inc
mov
arpl
inc
jp
mov
jbe
lcall
cld
mov
push
sbbb
aaa
stos
or
xor
mov
pusha
mov
pop
fadds
pop
jo
sarb
test
mov
out
in
or
mov
inc
mov
push
cmpsl
cmp
ja
add
fsts
cltd
lahf
pop
rcrb
mov
mov
cmp
pop
into
test
mov
ficoml
fidivrl
sub
js
fs
adc
bound
and
or
scas
pop
xlat
cltd
divl
mov
mov
ds
mul
leave
pop
js
lods
cmp
mov
aas
ficoml
ss
clc
loop
mov
adc
lock
fmull
inc
je
sub
mov
loope
in
xor
dec
in
stc
mov
sahf
push
idiv
and
mov
rorb
push
mov
inc
into
cmc
out
push
out
xchg
testl
dec
mov
dec
int3
adc
loopne
ret
ss
and
xchg
and
sbb
jge
jg
addb
lods
js
daa
into
and
cmp
fimull
sbb
xor
jmp
cwtl
pop
in
jbe
shrl
mov
xor
cli
dec
mov
fucomi
xchg
adc
cltd
out
insl
push
ds
and
adc
lods
lods
ja
inc
loopne
jbe
cmp
push
loopne
xor
int3
sbb
pop
subl
mov
rcrb
xchg
es
pop
imul
mov
xchg
xchg
sahf
push
pop
xor
adc
lahf
push
push
pop
xchg
data16
or
dec
mov
lret
dec
ljmp
jmp
aas
test
mov
push
daa
push
and
aad
pop
iret
xchg
sbb
fldt
lcall
movsb
xlat
cmp
xchg
xlat
push
jmp
xor
in
mov
lahf
jl
movsb
and
fmull
jmp
push
scas
lahf
pushl
xorb
aaa
addr16
ret
decl
imul
movsb
aaa
mov
lods
jge
loope
in
sbb
cld
stc
lret
out
sbb
pop
adc
mov
icebp
jne
ja
add
mov
aam
addr16
jne
xor
mov
or
add
popf
cmp
and
mov
adc
cmp
outsl
sbb
sahf
mov
cmp
xchg
rclb
lcall
mov
push
jge
stos
mov
xchg
std
xor
shlb
or
aas
mov
add
nop
stos
lods
xchg
mov
bound
or
aas
push
in
add
xchg
push
in
mov
and
mov
mov
mov
jle
icebp
mov
das
data16
insl
and
pop
sub
stc
sub
unpcklps
adc
xor
pop
jne
jnp
bnd
adc
xchg
inc
xchg
inc
jno
ljmp
or
stos
mov
mov
push
mov
into
insb
std
lods
iret
test
pop
cmp
push
lret
stc
jnp
mov
cmp
xchg
mov
cmp
mov
cmp
popf
les
cmpl
inc
decl
jb
adc
repnz
insl
adcb
or
push
stc
clc
dec
jle,pt
fimuls
rclb
inc
ret
pushfw
test
adc
insl
js
mov
mov
test
call
icebp
inc
fdivl
mov
xlat
sub
mov
divl
stos
clc
xchg
sti
xor
mov
mov
mov
lret
mov
inc
scas
sub
out
notl
int3
repnz
pop
adc
jg
push
sbb
or
cmp
push
jb
outsl
scas
daa
mov
sbb
sbbb
int
jecxz
ljmp
ds
xchg
xor
sbb
lret
sbb
jmp
push
in
cmp
xchg
xor
inc
or
or
push
aas
cmp
push
mov
or
mov
pop
mov
mov
adc
fildl
pushf
loopne
pushf
inc
call
jmp
pop
push
loopne
popf
mov
mov
scas
push
in
pop
loopne
and
sub
stc
imul
in
add
sub
lret
insb
roll
inc
cmpl
adc
js
inc
xor
in
mov
dec
jecxz
std
je
hlt
andb
jo
xor
ljmp
push
jge
popf
iret
push
push
mov
pop
mov
scas
cmp
dec
mov
stc
shlb
push
lahf
arpl
adc
imul
and
addb
adc
js
or
int3
gs
subb
jnp
inc
insl
dec
jp
aam
mov
in
adc
push
insl
push
iret
push
ret
sub
ljmp
adc
imul
lock
insl
mov
lods
shlb
add
in
dec
loope
xor
movsl
dec
sbb
and
cmp
xor
inc
daa
cmp
lret
jns
shll
pop
inc
out
lret
mov
push
mulb
cmpps
pop
iret
dec
repnz
shll
inc
cmp
xor
insl
dec
mov
dec
dec
lods
repnz
push
mov
mov
jo
pop
adc
js
push
push
insl
xchg
jbe
sahf
mov
ljmp
cli
push
dec
mov
test
mov
hlt
popl
xor
mov
in
aaa
mov
mov
inc
adc
pop
jbe
cmp
sbb
hlt
das
push
imulb
aas
jl
lock
pop
adc
mov
push
stc
imul
in
xchg
out
call
scas
sbb
out
hlt
aad
jmp
adc
aaa
test
imul
lea
sahf
fildl
js
push
adc
ds
mov
popf
test
rcll
fmul
daa
mov
js
push
adc
in
scas
mov
cmpsb
leave
add
ljmp
and
mov
out
adcb
adc
es
or
cmp
lea
cmp
daa
and
add
and
adc
je
fwait
dec
sub
pop
adc
mov
mov
orb
add
sbb
sub
enter
ds
pushf
add
test
or
cmp
sarb
cmpsb
outsl
cwtl
xchg
cmp
lea
dec
lcall
gs
repz
mov
ret
leave
imul
sub
insl
push
mov
mov
lods
add
adc
adc
lds
sbb
adc
notl
pop
iret
mov
in
push
testb
mov
call
cmpsb
dec
arpl
loop
lret
add
fcoml
es
out
sbb
push
mov
iret
fldcw
add
icebp
pop
icebp
mov
jo
add
mov
jl
inc
fstpl
js
mov
pop
lcall
sbb
sub
aas
out
in
cmpl
repnz
aaa
mov
out
ljmp
in
jmp
jbe
scas
inc
mov
add
mov
sarb
aaa
test
in
pop
in
xchg
dec
fcompl
xchg
cld
sub
xrelease
je,pn
push
adc
or
aad
jmp
sub
mov
jnp
test
repz
adc
push
pop
js
jle
jne
pop
xor
fdivp
add
lods
jle
lods
scas
push
xchg
mov
and
imull
sbb
cli
imul
lcall
lcall
cmp
cld
mov
mov
mov
les
cmp
ds
in
push
out
xchg
or
mov
cltd
cmp
ror
outsb
adc
adc
adc
push
in
mov
and
pop
mov
movb
mov
sub
pop
adc
aam
gs
test
mov
mov
insl
pop
jle
imul
mov
mov
push
lcall
jmp
dec
or
or
jb
shl
add
xchg
jns
pop
mov
int3
cmc
adc
cmc
stc
pop
xlat
push
out
es
sbb
pop
push
add
xchg
xchg
or
ds
nop
sahf
xchg
es
ficompl
aam
pop
out
inc
jg
ret
call
stos
les
fcomp
into
outsb
jo
mov
insb
ficoml
fndisi(8087
leave
mov
sti
cmp
cmpsb
cmp
jns
cmp
jnp
outsl
xor
adc
cltd
push
pop
icebp
test
mov
testb
adcb
dec
sub
mov
sub
imul
ret
ss
nop
sub
push
inc
outsl
rol
cld
mov
push
cmpsb
insb
lods
popa
and
lcall
or
xor
aas
cmpsl
sbb
xchg
pop
or
mov
bound
sti
add
dec
rcrb
out
icebp
test
filds
add
cmp
scas
idivb
cltd
clc
cmp
cmp
clc
and
lods
in
push
aas
jmp
mov
repz
xlat
pop
in
mov
or
ljmp
mov
dec
jb
and
adc
cli
jg
xlat
ret
push
adc
out
pushf
jle
std
mov
fistpll
aas
cmpsl
test
jne
daa
ds
push
insl
pop
out
lea
mov
cmpsl
jg
ljmp
adc
jns
aam
push
js
sub
or
ds
push
jno
mov
sti
loopne
lods
and
xchg
push
nop
jg
adc
and
ja
add
movsb
js
adc
dec
sbb
inc
or
sbb
sub
int
aaa
stos
cmp
add
pop
idiv
std
sti
jge
aas
pop
sbb
inc
xchg
sbb
shll
add
imul
dec
pop
adc
je
pop
push
hlt
mov
mov
jge
shl
loop
je
iret
jno
mov
xor
jmp
jnp
aad
sub
jle
push
mov
popw
add
push
ljmp
xchg
or
jne
mov
sub
cmp
js
push
into
xchg
mov
int3
fs
jns
idivb
xchg
in
cmpsb
mov
outsl
and
loope
int3
lahf
cmp
out
js
test
je
mov
lcall
repnz
jnp
cmc
insl
xor
bound
add
loope
ja
or
mov
cmp
lret
andl
or
jnp
fistpll
filds
enter
sub
orb
lret
mov
fbld
pusha
push
and
push
pop
out
mov
xchg
pusha
xchg
cmp
icebp
push
adc
aam
and
adc
lods
mov
movsb
cmpb
xor
mov
jbe
ficompl
fildl
push
lret
adc
dec
imul
lahf
lds
insb
pop
cmp
or
cmp
xchg
subb
mov
out
mulb
imul
mov
testb
iret
js
or
sbb
arpl
inc
sbb
movsl
les
sbb
clc
dec
in
jge
bound
out
jo
mov
xor
jmp
mov
xchg
mov
and
sbb
pusha
inc
push
or
insl
les
out
push
mov
ds
push
cmp
cmp
gs
adc
pop
or
adc
shl
mov
xchg
shlb
addb
mulb
and
movd
xor
js
movsl
lcall
push
adc
rcrl
cmp
xor
push
mulb
jo
adc
lret
mov
pop
adc
dec
cmp
xchg
jmp
and
mov
cmpsl
mov
data16
aad
add
scas
hlt
dec
jne
inc
loope
imul
pushf
popa
and
pop
inc
pop
outsl
pop
sbb
andl
mov
mov
push
cli
sub
aas
push
ds
pop
adc
xchg
jge
mov
cmp
push
cmc
sarl
mov
push
push
lret
jmp
shlb
std
jne
aad
cmp
lret
pop
outsl
dec
ljmp
movsl
out
xor
daa
ficompl
cmp
sbb
popa
es
adc
out
ror
ds
popf
push
xor
pop
clc
ss
inc
aas
shlb
push
jns
mov
xor
imul
pop
ss
lahf
jl
fwait
mov
int3
jg
jnp
lods
xor
mov
sbb
cwtl
jle
mov
sub
sub
pop
aad
ret
pop
or
cmpsb
mov
xor
mov
lea
cmp
cmpsb
mov
lcall
sti
ret
cld
stos
push
mov
push
stc
xchg
ss
jg
jo
sub
lret
test
sub
pop
jb
std
jb
add
xchg
cltd
js
shrl
mov
cmp
das
xchg
jbe
inc
mov
jge
lret
sbb
into
mov
jmp
pop
push
jne
jl
fbstp
cmpsb
jl
enter
test
test
xchg
in
xor
lods
and
lcall
mov
ja
fwait
push
or
nop
lret
cmpsb
dec
pushf
lahf
aad
add
lret
mov
add
and
in
jne
xor
test
push
std
out
and
xchg
add
xchg
add
data16
mov
sti
xchg
fldt
rorl
jbe
xchg
inc
idivb
push
popf
pop
jmp
ret
ret
into
sbb
rcrb
push
rolb
clc
jle
push
in
lods
cmpsb
ljmp
out
add
out
push
fidivrl
pop
inc
addb
mov
aad
fidivl
add
dec
ror
mov
les
mov
add
pop
fisttpl
pop
clc
jp
pop
es
sub
jmp
std
cmpsb
sub
imul
or
daa
jno
filds
std
lea
adc
data16
mov
out
jnp
stc
jb
les
and
mov
push
pop
icebp
and
bound
dec
hlt
xor
xor
out
adc
pop
ficoms
out
sti
xlat
fwait
push
inc
jae
dec
out
xor
arpl
push
xor
sub
scas
loopne
insl
je
cmpsb
addr16
nop
leave
or
and
movsb
test
iret
push
cwtl
xor
mov
xlat
mov
arpl
imul
and
scas
adc
imulb
xchg
sub
pop
mov
lea
dec
push
cmp
test
lock
popf
std
adc
pop
addl
xor
cmp
movsb
pop
faddl
adc
mov
jno
sbb
js
cmp
cwtl
jno
insb
stc
arpl
daa
lods
add
xchg
mov
imul
sbb
or
movsl
call
sti
cmpsl
and
pop
adc
popa
xchg
add
pop
lds
loop
jmp
mov
das
xchg
cmpb
stos
imul
dec
mov
mov
lock
fstpl
cmp
add
int
out
jnp
lret
aam
lcall
add
divb
cmpsl
push
sbb
gs
les
push
andb
push
imul
cld
xchg
sub
outsl
and
out
xchg
dec
sub
popf
inc
js
arpl
sbb
push
xchg
sbb
lahf
pop
negl
out
int
sub
jecxz
imul
sub
lods
xor
sbb
pop
adc
inc
mov
inc
fldt
xor
mov
xchg
addr16
outsl
xor
push
mov
hlt
test
cmp
lahf
push
dec
jmp
lods
push
xchg
xchg
adc
push
test
push
pop
mov
stos
cmp
lods
sub
call
sarl
add
daa
xor
das
pop
push
sbb
cmc
filds
test
mov
sub
and
xor
leave
xchg
cmp
adc
leave
lcall
fidivs
inc
inc
sbb
dec
mov
lret
je
mov
and
cmp
push
sub
mov
cmp
ja
mov
mov
je
fcos
jge
mov
repz
mov
shlb
sti
add
in
jle
sbb
loope
insl
stos
movsl
jae
xchg
fbld
and
cltd
mov
or
ds
or
push
mov
popf
cmp
sub
aad
lret
ds
cmc
mov
add
fnstenv
xchg
insb
int3
push
clc
jbe
rcl
adcb
jle
cmp
sbb
xor
cmp
aaa
or
jmp
push
inc
dec
scas
loopne
push
inc
cltd
push
idiv
mov
jo
in
cmp
cmc
inc
cld
or
jmp
ret
dec
cli
cmp
sbb
je
icebp
jg
xchg
aam
and
push
je
leave
push
insb
mov
mov
out
fnstcw
jbe
mov
mov
ljmp
mov
cmpsl
mov
sub
stc
jb
mov
add
xor
sub
push
adc
pop
mov
add
add
pop
jg
pop
shlb
xchg
adc
mov
and
inc
mov
jb
cld
pop
pushf
test
or
push
jns
cmpsb
lock
lret
jmp
mov
mov
pushf
test
lret
jp
shrb
lahf
pushf
sbb
fildl
add
mov
push
lcall
xchg
fisubrs
jb
fdiv
mov
cmpb
add
clc
mov
jp
sbb
mov
mov
adc
push
or
jp
test
loopew
xchg
repnz
mov
sub
aaa
pop
xchg
fsubrl
sub
mov
outsb
mov
adc
int
push
and
push
adc
popf
ss
cwtl
test
mov
and
inc
out
sahf
dec
fsts
cmp
das
cli
and
and
mov
je
js
in
rolb
testb
pop
push
and
inc
jnp
insl
mov
add
notb
outsb
jae
or
xchg
imul
mov
ss
xor
js
icebp
push
mov
adc
jecxz
insl
inc
jae
jge
inc
xchg
insl
and
push
repz
jecxz
call
jb
cwtl
adc
pop
imulb
cmp
xchg
mov
movsb
dec
dec
loop
in
mov
xchg
dec
mov
popa
cmp
push
jp
pop
mov
sbb
repnz
ret
mov
fsubl
jg
mov
out
fcomp
cli
inc
or
das
ret
rorl
rcrl
sbb
pop
jbe
fistpl
xchg
cmp
and
push
add
sar
cwtl
adc
outsl
adc
cltd
sahf
xor
add
or
dec
scas
xchg
addr16
out
sub
add
jl
mov
lret
daa
scas
and
sub
mov
bound
inc
lret
in
outsl
add
or
mov
jb
ret
cmp
add
orb
nop
push
addb
cmpsb
pop
adc
sbb
js
fmull
mov
pop
xorl
pop
rcl
xchg
or
or
mov
mov
add
movsb
mul
data16
pop
and
push
push
jbe
gs
pop
aam
lods
pop
push
lcall
jae
and
addr16
pop
pop
mov
call
mov
inc
data16
xchg
or
mov
dec
sti
jns
jns
jne
push
aas
sbb
ss
lds
jg
scas
and
inc
in
cmpsb
pushf
push
repz
fdivrs
adc
dec
sbb
push
call
mov
cmp
inc
es
sbb
add
in
mov
push
stc
popf
sbb
or
mov
cmpsb
scas
cmpsb
and
jl
hlt
jg
adc
call
xor
jg
adc
cld
hlt
adc
adc
or
sti
add
add
pusha
adc
adc
and
fs
rcrl
fistpll
unpckhps
jo
push
insb
cli
xor
jl
cmp
lea
dec
pop
adc
mov
add
mov
loopne
or
adc
inc
pop
adc
adc
pop
jg
shlb
mov
or
jno
in
or
bound
call
add
adc
add
inc
pop
adc
add
pop
adc
loope
pop
dec
jbe
add
cltd
add
mov
xchg
add
sbb
cltd
out
es
je
mov
sub
inc
lret
pop
adc
dec
jp
adc
adc
push
adc
jnp
mov
outsl
pop
hlt
mov
sti
cltd
in
push
lods
mov
cmp
and
mov
lods
mov
jg
loop
sbb
inc
stos
sbb
sub
adc
inc
pop
adc
movsb
xchg
xor
pop
adc
inc
pop
adc
mov
add
push
push
sti
scas
lcall
or
cwtl
sub
lods
dec
insb
xchg
rol
dec
jge
addr16
out
mov
mov
adc
cs
ljmp
test
pop
out
or
adc
insb
sbb
push
jp
mov
lret
cltd
fwait
mov
xchg
clc
adc
jl
mov
out
jae
cs
js
jmp
sub
test
fsubrs
fwait
mov
outsb
or
aaa
add
add
test
and
adc
pop
adc
jb
cld
xor
dec
pop
adc
fstpl
adc
xor
maskmovq
idivl
push
and
cmp
lds
sbbl
lods
les
jnp
fimull
xor
mov
sbb
js
add
movsb
add
ljmp
sbb
loope
and
in
jb
dec
pop
adc
inc
ss
orb
mov
decb
and
test
sbbb
jbe
add
and
xchg
in
aas
xchg
test
push
enter
and
jo
mov
xchg
popa
jne
shlb
dec
pop
adc
jnp
xor
dec
pop
adc
fwait
inc
lret
push
pop
ficomps
jae
add
add
adc
push
mov
adc
adc
scas
arpl
enter
cmp
repz
add
movsl
mov
inc
cmc
fidivl
mov
push
adc
loope
rcll
mov
mov
mov
out
dec
aas
inc
adc
ljmp
aaa
das
adc
lahf
call
sbb
repnz
xchg
lods
ljmp
mov
push
enter
mov
sub
pop
pusha
sbb
fldcw
pop
pop
daa
jns
mov
test
sub
lcall
fisttps
xor
ss
push
icebp
hlt
jle
jno
mov
xor
insb
xchg
sbb
jl
lahf
cmp
pop
incb
pop
sbb
adc
clc
push
inc
test
jp
pusha
fadd
sahf
add
add
jo
push
xchg
fnstcw
and
xor
test
xchg
ret
jne
sub
pop
adc
jp
imul
shr
mov
and
stos
mov
push
adc
pop
les
add
lods
test
adc
xchg
inc
fcom
jmp
sub
jmp
fisttpl
push
syscall
adc
sub
push
mov
push
mov
pop
ja
fistpll
int3
ja,pt
shl
mov
pop
pop
jno
mov
xchg
int
ljmp
in
jge
mov
jp
cmpsl
sbb
mov
fidivrs
mov
sub
mov
xchg
jecxz
in
inc
addl
or
cmp
pop
dec
xchg
xor
gs
sbb
ja
fidivrs
or
jl
and
jno
add
popf
cmp
pushf
pop
stc
adc
or
daa
mov
jp
sbb
pop
ret
dec
pop
pop
or
add
out
xor
sub
mov
in
lods
push
incb
mov
adc
clc
adc
and
adc
fcmovbe
push
lcall
aaa
jne
test
test
inc
or
test
inc
mov
stc
ja
aad
lods
test
shlb
aad
or
je
mov
lock
clc
push
push
test
jge
pusha
push
test
inc
in
cmp
xor
adc
ret
cmc
repz
mov
bound
pop
adc
loope
and
mov
sbb
dec
mov
cs
push
test
jmp
popf
mov
ljmp
cs
mov
into
push
cmp
addb
mov
mov
ficoms
xor
dec
mov
adc
lods
addr16
xor
test
xchg
xor
dec
jbe
mov
pop
aas
cli
cli
outsb
int
clc
mov
fstl
jl
idivb
inc
lea
adc
ljmp
cmpsl
mov
gs
mov
and
aad
js
jnp
sarb
adc
and
cmp
shll
adc
js
cmp
test
pop
aad
jnp
jns
cmp
adc
cs
pushfw
cmp
aad
xor
mov
add
cmp
sbb
sbb
fisttpl
out
lcall
jge
cmp
jg
jecxz
movsb
adc
movl
add
scas
xchg
sti
icebp
mov
hlt
repnz
inc
adc
inc
pop
dec
fsubr
popl
pusha
pop
xor
jmp
dec
ss
inc
inc
nop
xor
pop
fstpt
mov
pop
popa
jns
jns
cltd
xor
push
adc
dec
add
leave
mov
xchg
xor
aas
sub
lods
add
pop
adc
pop
or
and
mov
lahf
sub
or
lret
outsl
mov
pop
fists
stos
pop
adc
mov
cmpl
imul
mov
in
push
cld
std
mov
out
mov
pop
cs
cltd
jo
pop
adc
sahf
jecxz
pop
cmp
repnz
cmp
sbb
xor
bound
dec
push
pop
inc
cmpsb
pop
loopne
rclb
rcrb
arpl
stos
and
push
jle
push
push
push
aam
lcall
inc
cltd
mov
ret
push
sbb
mov
jne
scas
push
scas
daa
es
inc
and
cmp
pop
lods
stos
adc
xlat
ljmp
and
push
dec
hlt
mov
xchg
xchg
addr16
mov
rorl
scas
jmp
cli
sub
cmp
jae
push
sti
dec
into
enter
mov
stc
xorl
movsl
mov
mov
in
scas
push
or
jns
testb
out
sbb
add
in
jg
mov
add
mov
aas
popf
add
push
inc
outsb
push
icebp
or
push
in
lret
iret
xor
je
jle
cltd
out
xchg
add
sarb
push
dec
popf
cmp
outsb
push
inc
addb
jl
jbe
sar
pop
outsl
xor
inc
xchg
push
cmc
sub
mov
mov
pop
jmp
and
mov
and
mov
icebp
or
push
repnz
inc
lea
je
fwait
dec
pop
adc
push
jbe
repz
in
jne
ror
pushf
cmp
stos
fwait
ja
pop
inc
mov
loope
cmp
xchg
aaa
xor
ds
shlb
mov
mov
sti
sub
pop
adc
jns
fs
cmp
stc
mov
jg
aaa
cmp
cmp
aas
jno
movsb
push
cli
dec
jl
mov
lock
dec
pushf
mov
mov
mov
mov
pop
test
out
fnstenv
adc
into
pusha
dec
push
jecxz
dec
add
cmp
sbb
jo
std
pop
call
or
cltd
ds
lods
mov
dec
sub
pop
adc
sti
divl
fwait
ret
aad
sub
push
repz
loope
imul
aas
scas
pop
sti
push
repz
inc
jmp
outsb
or
and
dec
into
lods
loop
xchg
in
sub
pop
adc
pop
divb
sub
out
xchg
iret
mov
and
jmp
ret
inc
sub
or
cltd
pop
pop
jns
xlat
fdivrl
xlat
sbb
scas
aam
addb
push
and
movl
hlt
fmuls
push
sub
lods
aas
add
xchg
orb
lahf
or
scas
int
push
mov
add
or
sbb
xchg
xorb
or
adc
jo
sbb
xor
clc
mov
int3
jne
jp
jne
int
jae
outsl
cltd
movsb
xchg
and
shlb
in
int3
or
mov
adc
xor
mov
add
inc
mov
fsub
popa
pop
bound
lret
sub
pop
mov
ret
xchg
ljmp
enter
lahf
mov
out
repnz
mov
mov
push
psubusb
push
outsl
insb
lret
pop
add
sbb
fwait
in
mov
iret
hlt
aaa
stos
aaa
orl
scas
sbb
outsl
roll
mov
sub
sub
xchg
hlt
je
rcrb
aas
push
daa
ja
imul
cltd
std
jb
pushf
pop
imul
idivb
nop
les
inc
mov
fs
sub
inc
pop
test
mov
pusha
xor
jnp
cwtl
in
and
hlt
xchg
enter
imul
aaa
ja
sub
ret
mov
lahf
int3
inc
xor
cld
push
pop
xchg
repz
sub
shr
aam
xor
add
xchg
lock
adc
lahf
cmc
notb
mov
addr16
rcr
mov
mov
call
fmuls
mov
jmp
jg
xchg
sbb
pop
mov
mov
and
pop
xor
cmpsb
cld
inc
lret
fwait
jnp
lds
jbe
add
arpl
int
movsl
insl
fisubl
dec
aad
int3
mov
mov
xchg
notb
stos
mov
out
inc
or
dec
je
push
arpl
outsb
cld
add
pushl
lahf
int
sub
pop
adc
jle
pusha
fistps
ficompl
dec
das
insb
movsb
stos
jg
in
add
adc
jns
or
rolb
mov
jecxz
or
lods
pop
stos
sub
add
test
mov
mov
mov
mov
mov
bound
fs
lret
je
addb
mov
ret
scas
gs
inc
fsubs
nop
jbe
inc
sub
fwait
mov
jle
add
std
sti
addb
shlb
loopne
adc
pushaw
popf
cmp
scas
mov
pop
adc
out
mov
push
ja
sbb
inc
shlb
cld
mov
and
xchg
cmp
jmp
jg
xchg
incb
mov
add
jmp
jnp
mov
add
popf
mov
or
cltd
jl
add
mov
sbb
dec
xor
lahf
das
pop
mov
pusha
mov
push
addb
push
and
adc
insb
out
pop
xchg
mov
add
pop
shrb
pop
adc
cmc
pop
mov
cld
jno
gs
push
in
test
pop
jle
arpl
shlb
repnz
sub
jbe
cltd
jp
mov
add
adc
in
stc
add
push
int
std
std
add
std
lods
mov
rcl
jge
jecxz
leave
pop
xchg
mov
adc
cmpsl
rolb
jae
cmc
repz
insb
mov
rorb
jne
xchg
dec
popa
push
mov
or
sub
je
adc
push
repz
mov
inc
subl
push
pop
xorl
xor
clc
push
mov
jmp
pop
adcl
leave
jbe
sbb
xor
xlat
mov
cmpb
dec
push
mov
or
addr16
out
pop
and
ds
outsl
inc
roll
incl
sahf
js
imul
add
xor
cmpsb
mov
aaa
out
sbb
sub
or
cmc
lods
pop
clc
mov
sbb
stc
cmp
cmpsb
scas
adc
jl
scas
arpl
mov
xor
hlt
jb
or
pushf
xlat
mov
add
jp
push
out
and
testb
sub
pop
adc
or
ljmp
xor
sub
ja
leave
inc
in
pop
or
ret
ljmp
iret
lods
push
sbb
xchg
jmp
mov
cvttps2pi
mov
add
and
cmp
jg
jge
sbb
aam
insl
cmp
dec
js
inc
outsl
orl
data16
or
mov
or
scas
int
and
or
sbb
jne
int
add
or
fsubrs
adc
lock
addb
cli
lds
mov
push
in
sub
aaa
test
inc
in
inc
mov
jno
dec
push
sub
aaa
mov
lret
mov
add
cmc
lods
pop
ret
pop
imul
sub
outsl
shr
mov
pop
std
in
mov
xchg
fisttpl
in
es
outsb
pop
xlat
pop
xchg
push
inc
fld
jle
xlat
push
insl
test
andl
cs
rcll
stos
cmpsl
pop
pop
pop
rorb
mov
adc
std
shlb
mov
mov
and
pop
adc
jnp
outsb
adc
dec
pop
mov
insb
insb
jnp
lock
jae
and
test
mov
rclb
mov
mov
xor
mov
or
std
sti
or
mov
sbb
add
sbbb
roll
jl
pop
decb
sbb
out
inc
clc
negb
outsb
cld
add
pop
jo
pop
adc
mov
fs
dec
loop
push
jne
sbb
ror
data16
mov
ret
add
or
mov
lods
pop
xor
mov
pop
dec
int
sub
fisttpl
divb
cli
adc
repnz
movsl
cmp
push
xchg
lock
lock
not
aaa
mov
fildll
jns
xchg
ljmp
pop
clc
and
cmp
jl
test
jle
in
repz
lds
fwait
scas
ja
filds
jo
push
adc
hlt
jb
fidivl
jp
mov
xchg
mov
adc
jbe
int3
mov
loope
push
nop
mov
int3
adc
shlb
mov
jbe
shlb
fdivs
fistps
les
push
shll
mov
xor
pandn
jns
and
in
fistpll
pushf
shll
shlb
push
adc
adc
dec
sub
pop
adc
scas
in
sbb
or
cmp
cmp
cmp
sub
xchg
std
sti
jg
and
fistps
xor
xchg
in
xor
pop
adc
loope
fstpt
negl
push
in
and
push
rcrl
sub
push
dec
sub
clc
mov
add
dec
sub
lods
imul
mov
fidivs
pop
int
sub
mov
ds
cltd
xchg
dec
jne
fsubl
add
mov
fisubrl
call
test
xor
push
adc
xor
loopne
lret
xchg
inc
add
lea
insb
incb
xor
pop
adc
jo
jle
stc
jp
lods
jp
fdivl
mov
popf
popa
call
pusha
pushf
popf
popa
addl
pusha
pushf
mov
sub
popf
popa
sub
pusha
pushf
std
popf
popa
addr16
pusha
pushf
xchg
xor
popf
popa
mov
pusha
pushf
mul
mov
popf
popa
mov
pusha
pushf
push
add
inc
popf
popa
mov
pusha
pushf
sub
popf
popa
dec
pusha
pushf
push
add
popf
popa
jne
pusha
pushf
popf
popa
xor
add
pop
or
sub
jns
push
mov
ljmp
jb
test
push
xchg
std
std
xchg
pop
add
in
jno
popf
mov
cwtl
test
pop
dec
lret
cli
or
pushfw
push
gs
int3
in
add
adc
push
push
xchg
outsl
lret
repz
bound
lock
xchg
mov
mov
sub
jno
and
mov
or
loopne
loope
lret
mov
dec
and
into
mov
and
das
cmp
pop
adc
sti
int3
movsb
pop
das
iret
mov
into
push
iret
loope
lods
inc
repz
jbe
jnp
out
addb
imul
les
adc
pop
jge
sbb
jnp
addb
dec
aaa
pop
dec
ljmp
adc
jnp
sbb
pop
adc
adc
adc
cli
lahf
inc
mov
fwait
xlat
jbe
or
xor
addl
push
or
insb
int3
iret
fdivrl
and
inc
mov
jge
stc
cmpsl
ja
pop
or
push
mov
sahf
inc
cmc
data16
fxch
sbb
inc
sub
and
stos
int
mov
adc
mov
mov
call
loop
lock
jb
cmp
imul
nop
stos
pushf
xchg
je
push
adc
sbb
sahf
cmpsb
enter
mov
add
std
sti
mulb
sub
sbb
nop
mov
push
stos
cmp
add
adc
int
mov
xchg
or
adc
sahf
pop
mov
inc
mov
mov
stc
int
add
in
mov
cmc
pop
xor
dec
pop
jle
out
fistpll
sbb
mov
or
leave
pop
or
je
push
adc
lret
ja
mov
sub
mov
add
and
sub
push
adc
inc
loopne
dec
adc
and
lcall
loop
jg
in
jl
into
popf
cmp
test
lcall
testl
adc
fidivrs
cmp
mov
insb
aas
inc
xchg
rorb
cwtl
adc
push
repnz
pop
icebp
test
aad
cli
xor
pop
ret
ffreep
adc
mov
add
sbb
test
aas
dec
mov
lds
addr16
pop
inc
cmp
xor
hlt
out
xchg
test
sub
jp
movsb
lods
mov
sub
push
adc
mov
ret
movsb
jecxz
in
mov
sbb
or
sbb
subl
in
pop
mov
js
push
adc
into
stos
cmp
xor
mov
dec
cli
or
and
mov
sub
cld
xor
lods
out
out
in
bound
xchg
push
test
xlat
enter
out
fisubl
dec
movsl
pop
adc
xor
pop
rcrl
xor
imul
pushl
lods
leave
movsl
mov
rcrl
jp
jle
jp
push
ja
test
test
dec
adc
xor
xor
push
adc
push
scas
xor
jl
clc
jo
add
fbstp
mov
adc
sub
xor
push
mov
pop
jnp
std
sbb
lret
jnp
mov
sahf
push
inc
ds
push
mov
outsb
lret
inc
sbb
sbb
sbb
mov
cmp
cwtl
cwtl
and
inc
xor
inc
sub
loope
push
mov
xchg
cmp
sbb
dec
xor
adc
adc
in
jno
xchg
xchg
sub
jnp
lcall
cmc
nop
std
std
mov
rcr
xor
push
xor
lahf
jb
xlat
jecxz
xchg
adc
pop
pop
imul
xor
hlt
aas
scas
int
xor
add
cmp
idivb
data16
outsb
or
dec
xor
push
adc
in
or
mov
sbb
lahf
ja
int3
ds
ror
ret
dec
pop
adc
push
pop
test
dec
pop
adc
push
cli
pop
cwtl
cmp
mov
and
or
int
int
push
dec
movsl
pop
adc
pop
movsl
pop
adc
dec
movsl
pop
adc
lcall
xchg
ljmp
jnp
mov
fst
lcall
cmp
movsl
cmc
mov
fwait
push
outsl
test
adc
lcall
ret
shlb
rclb
test
sbb
push
aad
jae
sub
pop
hlt
dec
jg
push
fs
lahf
add
adc
pusha
repnz
jno
ret
sbb
dec
movsl
pop
adc
sub
push
adc
mov
pop
aaa
insb
and
cld
jl
mov
in
es
inc
test
push
pop
adc
push
jg
adc
add
repnz
xchg
out
xchg
mov
fcoml
pushf
jbe
cld
mov
push
dec
out
mov
imull
pop
les
cli
and
subl
popf
cmp
mov
orb
cli
push
test
mov
pop
js
jbe
rcrl
je
shrl
lock
ja
mov
ret
pop
adc
xchg
loopne
adc
mov
jb
fs
add
bound
or
jae
mov
in
jae
js
jnp
stos
call
sub
lahf
incl
xchg
add
jmp
mov
jne
ret
sub
jge
mov
push
mov
pop
nop
test
mov
sbb
sub
pop
push
std
sub
add
adc
xchg
or
std
imul
or
movsb
dec
pop
adc
ret
pop
adc
mov
js
xor
ror
inc
sub
xchg
sub
fistpll
cli
sub
pop
adc
mov
pop
shlb
lret
shll
ljmp
push
mov
cli
imull
mov
add
dec
mov
push
mov
pop
adc
stos
mov
dec
pop
adc
xchg
insl
faddl
jb
aam
lea
jmp
and
ds
das
enter
lods
sub
mov
pop
adc
stc
pop
aad
mov
push
adc
adc
notb
arpl
sarb
ret
inc
and
lds
mov
pop
adc
pop
adc
stos
test
pop
fst
mov
or
pop
adc
ret
pop
sbb
cmp
js
dec
pop
adc
mov
push
adc
mov
push
adc
add
movsl
ljmp
pop
adc
or
adc
test
add
lods
xor
dec
push
mov
and
add
bound
ljmp
hlt
mov
int
dec
jg
ret
popl
mov
clc
cld
icebp
repnz
xchg
sbb
pop
fsts
ds
ja
sbb
push
sbb
xchg
out
pop
jg
arpl
test
lods
adc
fistl
into
ficoml
push
push
lret
xchg
dec
call
add
scas
loopne
out
push
sub
mulb
aas
fimull
cmp
jb
mov
pop
dec
cmp
push
adc
ret
and
repnz
test
ds
dec
xor
les
sbb
int
inc
sub
xor
or
adc
movsl
pop
adc
and
jl
scas
fmull
push
aam
ret
pop
mov
cmp
add
movsl
pop
adc
cmp
sbb
testb
scas
fnstenv
push
or
cmpsb
sbb
xor
lods
xor
andb
test
push
int3
mov
add
mov
lock
cmp
cmpsb
cmc
add
cwtl
pop
xor
lods
or
movsl
pop
adc
adc
dec
adc
mov
push
sbb
ja
cmp
push
jbe
jns
mov
movsb
test
sub
adc
mov
pop
pop
pop
cmp
sub
pop
adc
jp
pop
pop
mov
ret
mov
popa
cmc
add
mov
jb
call
jns
cmpsl
adc
je
jne
aaa
sub
ret
icebp
clc
es
xor
push
daa
outsl
sub
pop
adc
jns
fisubrs
pop
adc
sti
push
sub
pop
adc
in
push
xchg
inc
fstl
mov
jb
dec
pop
adc
jmp
jne
mov
sub
pop
adc
js
bound
aad
dec
pop
adc
aas
mov
dec
pop
adc
sti
nop
pop
or
out
push
dec
addr16
rolb
ret
pop
adc
clc
scas
pop
mov
add
popfw
shll
sbb
ret
or
test
cmp
inc
dec
add
dec
or
xchg
out
ss
push
daa
lods
and
push
and
stos
ja
jg
pop
and
add
loope
mov
sbb
mov
loope
sbb
aad
scas
jb
jg
std
sti
cmpsb
add
aas
mov
cmp
xchg
mov
out
fistpll
repz
in
push
mov
mov
fisttpll
imul
and
stos
mov
jl
repz
les
pop
inc
xchg
push
out
cmpb
jl
out
mov
jns
sub
dec
inc
stos
cwtl
mov
push
jne
mov
and
repz
rorb
lds
shll
psllq
mov
xchg
or
add
ljmp
rol
movl
sub
mov
std
std
mov
test
addb
adc
and
fstpt
test
sbb
push
adc
jge
sbbb
sub
test
adc
push
adc
scas
inc
adc
icebp
and
xor
pusha
xchg
and
dec
xlat
enter
xor
out
out
fists
aas
ds
push
push
cmp
adc
push
insb
push
pop
adc
cld
adc
ficompl
stos
leave
out
mov
pop
shll
clc
jmp
insb
push
pop
adc
nop
mov
push
js
pop
adc
dec
jbe
adc
push
daa
sbb
pop
adc
xchg
or
pop
adc
out
ja
adcb
inc
dec
insb
push
pop
adc
fcomps
pop
lret
fisubs
mov
jb
in
and
inc
ja
xchg
insl
inc
xchg
pop
adc
pop
lea
and
push
pop
adc
cmpsl
mov
and
insb
push
pop
adc
out
les
adc
or
out
insb
push
pop
adc
and
mov
xchg
dec
shl
and
pop
adc
push
xrelease
loopne
ja
scas
jne
outsb
push
xchg
test
or
lds
stos
cmovl
inc
adc
out
cltd
imul
or
inc
fsubr
imul
sbb
add
xchg
push
pop
je
aas
xor
lcall
dec
pop
adc
pop
loopne
pop
adc
ret
push
stc
adc
lods
arpl
gs
fcmovu
into
mov
push
ss
xchg
add
loop
mov
out
addr16
mov
lcall
pop
std
jp
aam
pop
andl
daa
sbb
push
pop
mov
rcrb
mov
or
xchg
stc
dec
loopne
pop
adc
mov
aad
push
sbb
mov
adc
pop
push
adc
cmp
rcr
dec
pop
adc
loopne
fwait
push
fadd
scas
mov
lahf
cwtl
mov
sahf
xor
fs
dec
mov
mov
adc
icebp
ret
push
lock
pop
adc
push
rolb
es
cmp
test
jbe
xchg
and
adc
gs
dec
mov
pop
adc
adc
and
aas
push
cmp
mov
add
roll
adc
inc
cld
cmp
jp
icebp
jns
hlt
in
fnsetpm(287
loop
lret
in
cs
push
pop
adc
or
lahf
dec
add
cmpb
cmpsb
mov
jo
insb
push
pop
adc
popf
jnp
out
fcom
and
lcall
push
sbb
cmpsl
je
sub
and
pusha
pop
mov
push
insb
push
pop
adc
sbb
mov
and
inc
dec
xor
jg
pop
dec
nop
and
jge
push
fcomps
pop
adc
dec
int
repnz
and
jb
dec
add
add
nop
jg
movsl
pop
adc
loop
push
sub
or
mov
inc
addb
repnz
add
jb
insb
push
pop
adc
or
cmp
xor
jae
aad
lret
push
lds
pop
add
add
mov
or
pop
jae
pop
inc
jnp
fistpl
mov
cld
loop
dec
pop
adc
add
add
dec
dec
movsl
pop
adc
adc
mov
xor
adc
add
add
out
mov
jl
and
xchg
inc
adc
mov
sub
mov
push
out
jp
mov
jbe
inc
pop
or
pop
jne
loope
dec
pop
adc
in
mov
xor
cmp
aaa
xor
adc
hlt
loop
dec
pop
adc
mov
dec
pop
adc
lock
add
cli
data16
push
cltd
sub
mov
cmp
xchg
sbb
dec
mov
or
adc
xchg
adc
push
sub
cmp
sbb
or
add
adc
fistps
gs
add
in
ss
rolb
xor
mov
mov
sbb
movsl
pop
adc
xor
pop
adc
adc
pop
adc
add
adc
sti
loope
loopne
or
dec
movsl
pop
adc
jo
pop
adc
mov
sbb
adc
inc
orl
pop
adc
aam
ret
sti
insl
sbb
xchg
jno
jnp
sub
push
sbb
adc
iret
sub
mov
rorb
adc
push
pop
or
jne
cmp
cli
inc
insb
push
pop
adc
and
ljmp
out
inc
sub
out
repz
pop
adc
pmullw
sub
pop
sbb
pop
stc
cmp
jo
pop
xchg
std
mov
mov
lret
insb
push
pop
adc
aas
jg
shl
or
xchg
lods
stos
popl
lea
dec
sbb
or
or
adc
mov
xorb
cld
xchg
xchg
adc
mov
imul
xchg
xlat
adc
jb
bound
mov
das
jl
sub
movsb
dec
xor
movsl
fwait
je
pop
adc
push
mov
test
or
and
cmc
mov
mov
jg
loope
popa
rclb
mov
pop
adc
ret
sbb
adc
insl
call
shll
cmp
and
popf
mov
fistpl
push
cli
fstpt
scas
push
shlb
pop
imul
rolb
dec
mov
ds
push
jo
imul
fbld
mov
decl
fs
fldenv
data16
or
sbb
test
lock
shlb
cmp
add
mov
stos
and
pop
dec
movsb
ds
jl
fdivr
jmp
mov
sub
push
pop
adc
inc
in
xchg
mov
sbb
mov
out
mov
jb
push
lods
adc
push
and
ljmp
jne
ja
xchg
dec
int
aaa
xor
test
pop
adc
mov
inc
xchg
sti
insb
push
pop
adc
cmpsb
test
mov
xchg
inc
insb
push
pop
adc
xchg
add
adc
lret
cmp
or
xor
pop
mov
das
pop
cwtl
xchg
adc
jge
add
jbe
fiadds
mov
into
push
lds
pop
xchg
dec
popf
cmp
add
cmpsb
jbe
add
stos
loope
test
pop
aaa
scas
sbb
xor
lcall
mov
daa
pop
mov
cmpsb
je
adc
imul
fcmovnu
cmp
sbb
sbb
setl
cmp
pushl
jo
add
xor
xchg
mov
movl
pop
dec
movsl
pop
adc
roll
pop
lret
loop
jmp
push
xor
pop
mov
adc
pop
add
adc
call
lock
pop
adc
out
clc
movsl
pop
adc
or
adc
mov
pop
adc
out
pop
les
adc
idivl
das
or
adc
mov
pop
adc
popf
adc
dec
pop
adc
test
lock
pop
adc
rcrl
hlt
mov
pop
adc
icebp
stos
mov
adc
sbb
pop
adc
or
pop
adc
iret
test
mov
call
cltd
and
cmp
ljmp
jg
pop
repnz
sbb
popf
jecxz
int3
pop
sbb
xchg
fs
push
inc
sbb
and
and
inc
ja
leave
cmpsb
aaa
testl
nop
sbb
scas
into
mov
adc
inc
lahf
xchg
nop
stos
repnz
dec
sbb
mov
stos
xor
lods
xor
pop
lcall
jns
mov
jns
outsb
pop
int
jge
jl
inc
sbb
add
cmp
je
aam
int
mov
cld
push
insb
adc
xchg
adc
push
jl
xchg
push
out
jg
rcll
xchg
push
divb
call
jnp
or
jns
jmp
mov
mov
xchg
les
inc
dec
mov
imul
nop
repz
jmp
jp
dec
mov
pop
in
stc
rolb
pop
outsb
idivl
add
shlb
cmp
iret
cmp
xchg
push
jecxz
and
ficompl
mov
std
mov
mov
push
cmpsl
ds
xchg
or
sahf
sub
arpl
ss
mov
xor
rol
in
daa
xchg
test
cmpl
data16
rorb
push
or
sbbl
loope
push
adc
adc
cmp
xchg
adc
rcl
pop
pop
fisttps
mov
out
cltd
pop
cmp
jne
ss
lcall
push
stos
testb
add
pop
push
mov
inc
dec
int3
scas
rclb
and
inc
jp
fmuls
in
adc
out
or
pop
imul
sbb
fistps
rorl
mov
adc
gs
cld
out
int3
fistpl
add
out
in
inc
imul
push
adc
sbb
fmul
xchg
xchg
popa
fnstenv
mov
mov
push
movsb
and
push
jg
hlt
out
mov
or
out
cs
xlat
les
arpl
lahf
mov
lods
mov
imull
sahf
jne
cmovg
into
jp
and
fwait
out
push
das
ss
aas
jg
jge
adc
cmp
push
je
push
movsb
add
mov
mov
jno
jns
insb
mov
je
xchg
inc
not
mov
into
je
sbb
std
fadd
inc
push
stc
popf
jb
fidivrl
stos
notb
out
out
jne
pop
jne
mov
fwait
pusha
js
out
jmp
cmpsl
dec
popf
cmp
stos
add
pop
je
ljmp
in
mov
mov
inc
fsub
mov
or
scas
repz
jae
imul
aaa
daa
neg
or
fcmovnu
jbe
js
lcallw
je
cmp
mov
cltd
mov
xchg
jle
xor
mov
pop
shrb
stos
mov
mov
add
in
std
sti
mulb
push
xchg
jbe
call
xor
push
clc
addl
cmp
scas
addr16
mov
cmp
mov
aad
pushf
push
cmpsl
dec
push
jbe
push
aas
jg
jle
popf
mov
adc
mov
mov
push
in
inc
mov
ljmp
inc
decb
mov
lds
jmp
sub
push
cmp
je
inc
das
test
add
push
call
jge
les
nop
mov
xorl
repz
cmc
out
fnstenv
jne
int
cmp
mov
xor
jns
cld
sti
cli
jb
ja
cmpsl
mov
cmpsb
xorl
jno
movsb
mov
add
iret
jnp
mov
ja
in
mov
pop
fwait
xchg
imul
xor
pop
hlt
outsl
jle
jp
out
bound
add
js
jb
jecxz
sub
cvtpi2ps
outsl
pusha
imul
mov
andl
loope
test
sbb
ja
jno
and
mov
std
cmp
cmp
out
fcoml
ds
lea
or
sub
cwtl
and
daa
mov
push
divl
or
sbb
mov
idivl
loopne
lock
adc
adc
xchg
sub
in
aam
lcall
xchg
stc
scas
sbb
lea
mov
sub
inc
jnp
test
mov
push
mul
xchg
lock
push
mov
repnz
fwait
loope
imul
imul
xchg
stc
mov
dec
push
cmp
jecxz
mov
addl
dec
adc
xchg
or
imul
test
imul
xor
insl
push
test
adc
shl
or
js
repz
aam
xlat
mov
cli
fs
mov
inc
xchg
xor
pop
sub
or
data16
jne
rol
cmp
jl
data16
mov
xor
adc
mov
push
in
dec
js
inc
int3
xchg
cmpsb
mov
jle
inc
popa
mov
and
dec
int3
cmp
jge
mov
fsubs
lahf
cmp
addr16
and
fidivs
inc
mov
push
lret
fistps
jmp
flds
aas
in
push
outsb
fidivrl
xchg
fidivl
and
je
loope
pusha
loopne
test
mov
lahf
adc
rcll
dec
ret
ret
adc
pop
pop
loopne
inc
insb
xchg
inc
lret
test
andb
or
dec
pop
add
mov
dec
and
jb
sbb
sub
and
movsb
cwtl
bound
adc
xor
decb
outsl
jp
add
mov
mov
pop
int3
mov
xchg
mov
scas
lret
insb
js
jge
jg
jl
out
std
inc
fcomi
jle
mov
rep
lea
lcall
cmp
jecxz
mov
pop
iret
adc
mov
fwait
out
popf
rclb
shll
lcall
je
jge
imul
mov
cmp
imul
lret
pop
bound
lcall
jle
sahf
mov
fistpll
inc
fs
sub
insb
out
repz
in
iret
jae
leave
jl
xor
popf
cmp
mov
es
dec
sbb
sarb
jg
jl
in
clc
stc
push
aaa
cmp
fmull
jmp
xor
xchg
mov
hlt
mov
jb
push
lods
jbe
sbb
xchg
mov
pop
ljmp
pop
idivb
std
sti
testb
cmp
cmp
popf
cmp
mov
jecxz
jbe
out
jbe
push
adcl
xor
imull
repz
mov
inc
push
fs
jbe
es
imul
xchg
pop
jge
xchg
xor
xlat
imulb
or
push
sti
xchg
mov
jle
out
jp
pop
fxch
aaa
xchg
test
sahf
icebp
add
add
and
imul
daa
je
in
test
jmp
pop
es
sub
out
adc
push
sbb
push
cli
jno
sbb
out
test
in
xchg
popa
xchg
mov
push
mov
mov
jl
ljmp
icebp
jmp
fnsave
pop
xor
dec
sbb
cmp
jl
mov
mov
ret
cld
xchg
sbb
cmp
pushf
or
sub
cmc
rorb
in
rolb
pop
dec
in
lret
mov
mulb
mov
xchg
out
mov
dec
mov
mov
inc
call
add
es
sarb
cmpsb
dec
cmp
lahf
adcb
inc
add
fnsave
notb
pusha
pop
jb
jmp
and
mov
es
lods
lods
xchg
mov
cwtl
mov
dec
add
pop
mov
lret
mov
xchg
or
mov
sbb
sub
imulb
lahf
cld
cmp
lods
pop
outsl
cmpsl
xchg
fwait
out
sub
xchg
or
cmpsl
int
xchg
and
cmp
sbb
push
mov
stc
push
xchg
add
adc
fdivl
adcl
mov
xchg
xchg
orb
orl
xor
sub
sbbl
push
cmp
adc
mov
pop
inc
shll
iret
push
call
pop
sbb
fmuls
push
je
ja
ficoml
lret
icebp
cmp
and
aaa
les
insl
mov
aas
leave
sub
test
inc
mov
jo
es
mov
inc
push
inc
sbb
or
lret
or
stos
pop
jnp
lret
sbb
sbb
jl
pop
adc
addr16
inc
int3
test
leave
jg
xchg
xchg
das
mov
cmpsl
out
arpl
jl
pop
adc
insb
adc
adc
addr16
cmp
out
in
lods
adc
cmp
inc
cld
movsl
and
adc
pop
fs
adc
xchg
sbb
sub
pop
adc
xor
adc
xchg
cmp
cmpsl
mov
sbb
and
aad
inc
dec
subl
test
cmp
jge
sbb
fs
mov
test
and
jl
pop
adc
xchg
mov
jl
pop
adc
insb
adc
adc
xchg
sti
or
jl
pop
adc
push
mov
push
jbe
push
repz
sti
jl
pusha
test
fs
jo
pop
adc
pop
stos
insb
test
je
pop
adc
std
mov
pop
adc
jne
inc
push
fildll
movsl
mov
lret
fistl
in
sti
test
pop
ja
in
or
aam
pop
outsl
incl
jbe
fs
scas
sub
test
add
loope
jno
pop
push
jbe
sub
shrl
ret
jbe
fbstp
xor
je
mov
cmp
jg
daa
mov
repz
orl
mov
mov
stos
or
cmp
cwtl
scas
jbe
cli
or
mov
pop
in
dec
cmpsb
jo
lcall
jge
out
adc
lock
adc
sub
cmp
cmpsb
xchg
jecxz
mov
sub
filds
jmp
shll
into
popf
les
aad
add
loop
je
divl
clc
jno
adc
sti
lcall
pop
popa
jno
subb
and
mov
add
mov
push
jecxz
jb
int
gs
sub
pop
cwtl
and
push
call
xchg
in
push
add
jg
cmp
cmp
pop
dec
roll
stc
jo
int3
sub
lods
jne
fbstp
rorb
push
leave
pop
pop
fldt
insb
sbb
cltd
add
fwait
push
test
rcrb
loope
ret
xchg
cmpsl
das
sbb
pop
test
or
test
pop
xor
ds
pop
adc
dec
lahf
mov
sbb
ss
pop
inc
mov
lock
iret
mov
xchg
jle
inc
cmpsb
cli
aam
out
cmpsl
push
paddusb
jecxz
jae
outsl
xor
jo
xor
pop
mov
je
cmp
xor
imul
and
je
jae
cmp
fdivrl
fidivs
loopne
xchg
mov
push
aam
dec
sbb
fwait
arpl
clc
lock
jb
xor
aas
xor
in
call
test
ret
loopne
mov
and
jnp
call
mov
push
mov
push
mov
addr16
test
xor
jmp
inc
outsl
pusha
test
loope
scas
mov
js
pop
adc
fcoml
push
adc
mov
jecxz
lahf
std
ljmp
mov
ficompl
test
and
mov
sti
mov
pusha
test
test
sarb
adc
lods
or
mov
mov
pusha
shll
pop
adc
jmp
push
jecxz
xor
fwait
xchg
jb
fildl
adcb
push
adc
nop
mov
test
jne
and
pop
adc
adc
mov
adc
lar
pusha
test
adc
mov
add
mul
jle
mov
jbe
adc
fs
pusha
test
in
push
js
push
jo
pop
adc
test
js
pop
adc
or
mov
outsb
fs
je
pop
adc
adc
pop
mov
setle
push
popa
leave
jl
pop
adc
outsl
pusha
adc
adc
pop
mov
test
push
fs
push
cmpsb
fsqrt
imull
aaa
add
test
jbe
out
ss
lret
push
pop
mov
stc
cmpsb
mov
test
xlat
jg
call
mov
push
adc
and
ss
sub
pop
lret
jl
pop
adc
ljmp
outsb
xchg
mov
jecxz
cwtl
fs
lea
and
lods
stos
jge
sarl
out
das
js
fmulp
or
fidivrs
mov
std
jbe
fstpl
inc
jp
ss
mov
loope
out
push
sti
jg
stos
dec
adc
in
sti
imulb
mov
repz
popf
insl
mov
loopne
push
adc
mov
push
std
jbe
in
stos
mov
in
lock
sbb
sbb
cmpsl
xchg
mov
lcall
jl
adc
sti
notb
push
daa
xchg
sarl
fwait
push
sub
push
popa
lret
js
fbstp
das
sti
cmp
icebp
std
sti
push
loop
mov
fisubrs
mov
adc
ret
jbe
fbstp
xor
jbe
sti
ja
repz
xlat
ds
xor
add
fisubrl
and
cmc
mov
cmp
mov
icebp
out
mov
xorl
jmp
divb
mov
mov
mov
mov
and
enter
push
push
lods
icebp
jle
in
cmp
mov
outsb
inc
cwtl
jp
in
xlat
sub
insl
mov
pop
pop
pop
mov
int3
pcmpeqw
pop
bnd
jmp
xchg
xor
scas
dec
adc
out
mov
int3
add
pusha
aad
jmp
jbe
pop
mov
push
loope
addr16
pop
frstor
mov
imul
out
popf
pop
and
jbe
xchg
dec
jle
inc
add
repnz
popa
push
stos
stc
push
repz
mov
into
dec
push
mov
pop
add
xchg
dec
mov
aaa
lret
mov
and
pop
cmp
add
jae
pusha
push
mov
mov
xor
xor
repz
fdivl
jg
lds
ja
push
pop
jbe
jo
adc
mov
lods
add
mov
movsl
in
dec
iret
and
or
sti
js
test
nop
mov
dec
out
je
cmp
add
mov
movsl
adc
rcl
push
pop
ret
inc
sbb
insl
pop
ljmp
enter
out
mov
stc
ret
add
insl
or
sahf
test
xchg
dec
pushf
mov
int3
inc
jb
fdivl
lods
aam
rorl
dec
xor
movsb
dec
adc
out
adc
and
cli
xchg
inc
lds
shll
and
stc
sbb
ss
nopl
push
cmpl
add
stc
popf
data16
outsb
popa
outsb
cltd
addr16
fisubl
outsl
scas
leave
ds
or
call
fcomip
lds
dec
fs
push
ftst
mov
pop
int3
mov
push
push
inc
or
data16
xchg
pop
pop
jmp
rol
test
lcall
out
xchg
cli
test
adc
mov
call
pop
xchg
xchg
pusha
cld
cmpxchg
inc
pop
sbb
mov
mov
jnp
add
sub
or
fisubrs
movsb
pop
push
aad
pop
fistpll
pushf
mov
into
sbb
test
add
aam
inc
inc
push
adc
ret
sar
cmpsb
in
mov
mov
lock
insb
inc
flds
cmpsl
ljmp
xor
mov
movsl
pop
adc
std
add
pusha
mov
sbb
lods
add
in
adc
xor
jo
test
test
cmp
cld
out
lea
dec
popf
mov
ja
xchg
jb
insl
aas
imul
fstpt
and
push
jns
out
dec
sarb
pop
loop
adc
stos
movl
movsl
xor
mov
lret
sti
inc
fs
push
cs
lods
jbe
push
cmp
repnz
cmc
cli
or
inc
mov
fiaddl
cmc
mov
cmp
pop
add
jge
sbb
and
cltd
or
outsl
jo
pop
adc
call
stos
hlt
mov
je
fnsave
js
aad
mov
mov
loope
inc
jne
movl
out
je
sti
jne
fdivrs
adc
jae
and
cmpsb
loop
mov
aad
cmpsb
jecxz
imul
pushl
jo
pop
adc
lret
cmp
pop
inc
xchg
xor
jmp
arpl
cmp
xchg
dec
sti
pop
mov
faddl
cmc
xor
outsl
fidivrs
je
fwait
jecxz
lods
sbb
sbb
imul
jne
jg
in
fistl
setns
cltd
jmp
xor
xchg
ss
cld
cld
ja
in
sahf
mov
fbstp
jg
pop
icebp
push
jle
mov
add
mov
into
gs
jo
fcoms
gs
mov
jo
sub
test
mulb
push
hlt
js
icebp
incl
loope
hlt
stos
jmp
imul
pusha
add
mov
out
cmpsb
sbb
sub
ds
jmp
out
dec
and
fldenv
ret
mov
sbbb
ja
div
out
aas
or
arpl
pop
hlt
sbbl
push
fiaddl
and
xor
dec
aad
mov
push
push
data16
in
testb
lcall
mov
fucomi
inc
cmp
iret
lcall
jno
push
xor
push
pop
mov
fwait
or
cmp
arpl
daa
mov
cwtl
test
fldt
jecxz
pop
jne
pop
jecxz
aam
mov
mov
jmp
push
test
mov
cmc
and
icebp
ja
loop
std
test
lock
jecxz
xor
ret
sti
xchg
fdivl
add
jae
hlt
jp
cld
jo
fdivl
cld
arpl
roll
jle
imul
mov
js
lods
dec
mov
test
loop
movb
fisttpl
lea
mov
outsl
out
push
arpl
mov
xchg
lcall
jle
mov
push
std
xchg
daa
mov
xchg
loopne
rcr
mov
sub
add
test
inc
call
lods
xchg
ja
jge
dec
jmp
xchg
das
fdiv
jp
push
mov
stc
adc
popf
pop
sbb
lods
pop
imul
jle
push
mov
sub
cmpb
pusha
test
scas
push
pop
cmp
pop
adc
movsb
stos
sbb
pop
adc
xorb
into
jmp
sti
jle
out
pop
sbb
push
adc
push
pop
adc
shll
push
aaa
in
out
mov
pop
adc
push
mov
jg
dec
popa
jp
fwait
and
push
pop
adc
shrl
aam
sub
adcb
adc
sbb
addr16
jns
mov
and
jbe
test
cmpsl
aas
outsb
inc
jge
das
pop
aad
fisubs
sub
in
mov
shrl
push
mov
pop
adc
scas
mov
fwait
not
mov
push
adc
xchg
or
mov
fucomip
dec
add
out
inc
push
adc
adc
popf
imul
addr16
xor
add
jo
jae
std
jo
leave
loopne
sbb
in
xchg
mov
arpl
scas
lcall
scas
cmp
add
cmp
ljmp
stos
insb
mov
mull
xchg
mov
lods
adc
push
cli
xor
and
push
pop
mov
mov
mov
adc
jne
and
add
sbb
les
cs
xchg
aam
lret
insb
add
mov
cmpsl
pop
adc
push
sbb
les
int
cmp
rcll
and
add
in
mov
cmc
pop
dec
cmp
fistpl
fs
xchg
xor
xchg
mov
jo
fldenv
push
cmpsb
mov
lds
stos
out
cwtl
mov
scas
and
jbe
std
sti
not
fisubrs
pop
adc
pop
adc
cmp
pop
add
addb
jl
add
adc
in
or
xchg
jne
push
sub
dec
popf
or
repnz
cmp
add
mov
add
sbb
stc
jmp
mov
mov
stos
pushf
hlt
mov
mov
cmpsb
adc
test
pop
adc
sbb
arpl
pop
call
pop
adc
lret
lods
mov
sbb
or
shlb
xchg
sbb
pop
sti
and
mov
pushf
adc
adc
jle
lea
adc
xor
cmpsb
test
push
adc
movsb
mov
xchg
sbb
test
pop
adc
xchg
adc
lods
mov
fs
mov
pop
adc
push
adc
mov
adc
adc
lods
mov
adc
adc
add
pop
adc
ljmp
mov
mov
adc
sti
test
jp
lahf
std
jg
dec
outsb
jmp
arpl
test
inc
test
add
mov
imul
and
push
pop
adc
xor
or
push
adc
jb
pop
testb
dec
xchg
mov
xor
adc
clc
pop
daa
push
popa
add
sahf
hlt
sti
push
fstpl
ds
gs
or
div
test
xor
adc
cmp
push
mov
adc
test
push
jp
movsb
pop
popa
push
xor
xchg
pop
andl
jge
daa
inc
or
clc
test
and
insb
lret
cs
mov
push
push
rorl
push
popa
xchg
repz
lahf
loopne
orl
xlat
mov
xchg
mov
imul
pop
push
in
push
mov
sub
inc
imul
dec
mov
or
mov
jmp
dec
icebp
pop
xchg
xor
es
sbb
aas
es
pop
adc
in
cltd
sub
add
mov
xlat
jmp
cmpsb
xor
mov
xor
push
in
cmc
inc
cmpsl
pop
adc
inc
test
adc
pop
and
test
adc
cmp
lret
push
pop
pop
jmp
rcll
fwait
jo,pn
pop
adc
xor
push
not
dec
loop
test
adc
cmp
adc
adc
test
aaa
adc
out
cmp
inc
pop
lds
xlat
icebp
nop
push
outsl
adc
sub
leave
mov
lods
sbb
leave
pop
sbb
push
loope
xchg
fdivr
mov
je
pushl
bound
cltd
jp
fwait
adc
dec
pop
ss
pop
adc
pusha
dec
test
clc
lods
insb
push
jge
mov
stos
sub
xor
adc
cmpsl
pop
adc
cwtl
push
push
xchg
lods
fdivr
inc
test
adc
imul
lods
xchg
testl
inc
test
adc
mov
les
mov
add
add
cmpsl
pop
adc
subl
pop
adc
mov
sub
add
mov
mov
pop
adc
ljmp
fcompl
fxtract
jae
pop
add
in
scas
mov
pop
adc
pop
mov
add
pop
mov
mov
test
adc
in
jnp
inc
cmpsl
pop
adc
ss
testb
lds
test
adc
lahf
test
int
js
lods
test
push
out
inc
inc
cmpsl
pop
adc
sub
addr16
pusha
test
adc
jge
lcall
mov
jnp
cmpsl
pop
adc
daa
cmpsl
mov
pusha
test
adc
mov
xchg
dec
xor
pop
decb
pop
pop
push
andl
imul
add
mov
xchg
ss
xchg
bound
fisubl
pop
adc
lock
scas
mov
fldl
or
xchg
cmp
cmpsl
pop
adc
or
mov
and
pop
adc
sbb
stc
jg
or
xor
xor
and
les
divb
sahf
fs
inc
andl
jo
pop
adc
sub
jecxz
sbb
mov
ss
mov
das
into
cmp
dec
enter
push
pop
js
mov
cmp
cs
outsl
and
push
adc
idiv
jbe
in
mov
js
cs
imul
cmpsl
pop
adc
aad
loop
test
adc
and
dec
jg
lods
jmp
scas
fdivrp
ret
mov
rol
out
dec
jge
imul
insl
xchg
xor
and
movl
movsb
fs
or
loop
adc
xor
ja
cmp
cmc
icebp
arpl
jne
outsb
xchg
dec
les
sub
adc
push
cmpsl
pop
adc
int3
lods
rorl
pushf
dec
das
cmpl
jnp
bnd
push
fadd
test
inc
test
adc
cmp
aam
pop
pop
jge
int3
push
pop
adc
fists
pop
adc
xor
cmpsl
pop
adc
inc
cmpsl
pop
adc
mov
and
mov
adc
das
mov
sub
fadds
pop
adc
loope
push
loope
ret
dec
or
sbb
and
sub
push
sub
jge
test
adc
cmp
fidivl
out
push
and
push
leave
lock
outsl
xchg
shl
inc
cld
inc
jae
jno
iret
jo
fdivr
add
ljmp
add
jmp
xchg
in
outsl
imul
mov
pop
adc
sub
adc
push
mov
pop
adc
daa
and
and
adc
adc
xor
imul
loopne
xor
adc
adc
sbb
outsl
mov
pop
adc
mov
cld
dec
movsl
pop
adc
xchg
push
inc
test
adc
test
ljmp
jp
movsl
push
in
aas
test
push
scas
dec
xlat
pop
dec
jp
push
push
aas
testb
fldt
out
mov
adc
sbb
pop
adc
cmpsl
pop
adc
xor
xchg
stos
cld
out
and
xor
clc
push
test
adc
repz
data16
mov
paddusb
rclb
pop
adc
xor
sub
mov
xchg
pop
dec
sbb
hlt
adc
lods
inc
pusha
test
adc
mov
bound
mov
and
pop
adc
add
sbb
cmpsl
pop
adc
aaa
and
scas
les
ja
sbb
daa
dec
xchg
mov
jge
jle
sub
divl
lahf
inc
or
cmpsb
cmp
ret
pop
adc
scas
movsl
add
sbb
std
jno
mov
ja
in
jg
stos
je
jl
in
mov
xor
mov
shll
fs
ja
pop
test
loopne
imul
pushf
cmp
flds
les
mov
std
enter
mov
jo
xor
xor
fsubl
pushf
cmp
cmpsl
mov
mov
loope
pusha
sbb
aas
add
out
mov
mov
mov
inc
cmp
jl
std
sti
push
shlb
adc
ds
lds
push
xor
pop
enter
lock
std
sti
mov
sub
xorl
adc
adc
sti
js
mov
addb
std
sti
mul
pop
in
fidivrs
insb
jmp
sub
pushl
cmp
mov
outsb
fbstp
pushf
pop
hlt
nop
lret
xchg
mov
push
daa
cwtl
jge
cli
push
inc
cmpsl
int
and
cmpsb
je
call
stos
fstpl
mov
daa
mov
or
fdivs
test
push
or
pusha
adc
adc
mov
inc
lock
pop
adc
jne
lods
lods
ljmp
lods
or
jmp
mov
cwtl
and
movsl
sbb
loopne
and
sbb
mov
in
mov
aad
imul
add
cmpsb
rorl
adc
pop
adc
pusha
adc
adc
bound
and
pop
push
sarb
mov
pusha
jbe
pusha
adc
adc
xor
or
sub
mov
inc
inc
int
mov
sahf
shlb
out
cmpsb
pop
frstor
test
mov
xor
cli
pop
dec
js
mov
pop
adc
sahf
sub
out
and
and
add
jne
jge
mov
stc
pop
pop
cmp
adc
or
or
dec
cmp
mov
nop
and
jo
pop
adc
aaa
mov
sub
out
aaa
insb
movsb
sbb
push
adc
daa
pop
mov
ss
adc
push
mov
adc
adc
adc
adc
inc
pop
rolb
push
adc
sti
mov
leave
cmp
pop
adc
mov
jo
pop
adc
add
jbe
dec
insl
or
imul
push
les
out
call
fwait
push
hlt
mov
mov
push
push
stos
cmp
mov
js
dec
pop
imul
out
in
sti
sub
testl
mov
dec
test
and
adc
fstpl
push
adc
fwait
inc
pop
outsl
call
push
adc
cwtl
rorb
imul
ret
push
stos
call
ss
dec
sub
jo
mov
rcpps
cmp
adc
rcl
jge
dec
mov
cwtl
out
loope
dec
loope
popa
addr16
mov
adc
aad
or
cmc
les
nop
ret
mov
cwtl
mov
or
and
inc
inc
cmp
enter
add
ljmp
nop
fs
and
mov
push
xor
sub
xchg
jle
movsb
enter
push
adc
sbb
mov
xchg
lods
dec
movsb
mov
adc
mov
je
subb
pop
jno
adc
or
jnp
les
pop
les
call
lods
push
push
xorl
in
or
icebp
jg
fnstcw
inc
pushf
mov
mov
fadd
jns
cld
insl
into
lret
push
and
out
out
xchg
and
ljmp
adc
scas
mov
repz
pop
arpl
loopne
pop
pop
adc
dec
aas
mov
xor
add
adc
adc
pop
adc
adc
adc
mov
push
adc
mov
adc
ljmp
test
cmpsl
push
jae
add
add
jo
in
pop
idivb
inc
xchg
mov
fsubrs
popa
mov
fwait
adc
je
sbb
or
xor
mov
into
call
int
bound
jl
pop
adc
adc
jge
xor
js
sub
ds
cmp
pop
mov
clc
and
sub
je
icebp
push
je
test
repz
fnsave
dec
xor
fnstcw
push
out
icebp
jnp
cli
imul
push
clc
pop
pop
xchg
inc
fidivl
scas
fisubs
mov
mov
xor
out
push
repz
test
dec
pop
adc
jecxz
pop
pusha
dec
pop
adc
movsl
std
sti
jg
cmpsb
xchg
mov
call
cmp
adc
adc
pusha
in
xor
jb
jl
in
fadds
lods
push
inc
out
cwtl
mov
idivb
sti
fldt
aam
dec
mov
adc
insl
icebp
inc
and
je
xchg
cmpsl
pusha
cmp
fbld
filds
push
pop
adc
scas
jmp
stos
shlb
cmpsl
enter
inc
sub
lret
adc
push
lcall
lcall
stos
mov
ja
fcoml
mov
inc
mov
mulb
mov
inc
jp
sub
sbb
lea
fadds
jno
jns
and
clc
out
ja
insb
and
adc
sub
inc
or
push
hlt
aaa
lods
imul
gs
rcrl
jo
sbb
xchg
push
mov
in
jecxz
shrd
daa
mov
mov
in
cmp
mov
inc
in
loopne
sub
dec
lds
ret
sub
xor
sub
inc
rcrb
xchg
or
mov
dec
clc
icebp
lds
mov
sbb
aas
push
sub
xor
sti
sub
cltd
jnp
xchg
fdivrs
push
mov
ret
inc
cltd
dec
xchg
outsb
movsb
push
xchg
mov
pop
sbb
and
bound
pop
and
in
push
sbb
push
adc
aaa
cmpsb
lods
xchg
mov
adc
push
mov
in
loopne
sub
mov
add
aaa
jmp
lcall
dec
addr16
push
shll
jp
xorb
jae
ror
shl
or
movsl
sbb
lahf
arpl
test
and
fs
ret
xor
dec
imul
dec
jmp
mov
loope
pop
pop
fstl
xchg
int
ror
jle
pop
push
subl
dec
jae
adc
cli
sti
ficomps
pop
xor
pop
mov
rcrl
cmp
testb
push
out
test
jg
repnz
push
scas
mov
aad
enter
outsl
sarl
mov
outsl
push
daa
dec
js
testl
fnstcw
or
mov
fidivl
cld
pop
out
popf
mov
adc
sti
js
lea
aas
add
lock
fstpt
push
mov
cmp
sbb
or
inc
jmp
mov
sarl
xchg
or
dec
add
rcrl
jb
shll
add
sahf
cld
fnstcw
out
pop
idiv
imul
pop
cli
stos
push
js
out
pop
cmp
into
loop
inc
lcall
jg
inc
sbb
in
fistpl
fstpt
mov
pop
fidivrl
sbb
testb
adc
repz
fisttpl
mul
into
mov
mov
loopne
push
jp
inc
mov
jns
repz
fisttpl
mul
into
mov
mov
jg
xor
movsb
dec
pop
adc
pop
mul
insl
je
lcall
mov
call
std
sub
lea
mov
repz
call
mov
mov
inc
cmp
push
lcall
pop
inc
sbb
push
popf
cmp
incl
in
out
fbstp
jl
mov
outsb
fcomip
xor
sub
stos
inc
sbb
jb
mov
sti
jns
sub
and
es
mov
es
jnp
jne
mov
jl
repz
xor
dec
in
dec
fnstsw
in
push
arpl
xchg
sahf
mov
mov
xor
addr16
scas
jae
out
add
cmpsb
jge
fldt
stos
adc
hlt
mov
mull
and
sub
mov
mov
fs
sub
or
jmp
xchg
sbb
push
dec
pop
xchg
dec
cwtl
aas
and
sub
xchg
outsl
xor
inc
fbld
out
push
and
lods
lcall
push
xacquire
fcoml
dec
out
push
jne
mov
aaa
in
pop
mov
pop
add
push
and
inc
jl
insb
fdivrl
stc
mov
cld
icebp
popa
push
push
imul
cwtl
sahf
mov
lods
fwait
cmp
add
mov
cmpsl
insb
mov
mov
xchg
add
test
adc
je
jne
loopne
jecxz
test
inc
imul
pushf
mov
mov
cmp
loopne
jge
jo
lret
cmp
subl
mov
sub
fidivl
mov
jae
cmpsl
mov
xchg
insl
xor
orb
mov
dec
fnstenv
inc
setb
out
or
popf
add
enter
sbb
scas
mov
xchg
sbbl
add
mov
rolb
cltd
push
cmpsl
mov
mov
mov
jno
cltd
ss
in
pop
or
daa
push
fwait
xchg
mulb
daa
stos
insb
lret
mov
xor
fsubs
mov
mov
mov
fcoms
adc
fsub
cmpsb
loope
lret
scas
iret
inc
pop
outsl
ja
jmp
jb
jno
in
pop
adc
cmp
pop
dec
mov
inc
shrl
push
pop
adc
xchg
por
push
pop
or
jae
sbb
mov
dec
xchg
xchg
das
lods
lds
mov
out
inc
cmp
dec
js
fldpi
cmpsl
aas
inc
sbb
lods
sub
ficompl
sar
daa
lods
mov
int3
push
out
cmp
pop
fistps
sbb
fdivrs
xorl
xor
popa
stos
int3
inc
adc
push
neg
xchg
pop
mov
cmp
lock
mov
cmpsb
fiadds
pop
bound
cwtl
jae
pushf
js
jb
in
outsl
pop
clc
mov
je
outsb
sbb
shl
into
popf
xor
mov
jle
jmp
jns
dec
iret
ja
dec
cmp
outsl
aaa
mov
fdivr
hlt
cs
pop
inc
popf
cmp
pop
dec
addb
jg
cmp
adc
adc
in
pop
pop
js
out
imul
pop
and
lahf
inc
or
cltd
je
dec
fwait
jb
push
fidivrs
push
jno
mov
jmp
cmp
push
mov
cmp
jbe
adc
mov
leave
xchg
test
mov
adc
mov
je
add
je
stos
test
loope
icebp
sub
movsl
out
sub
mov
jp
cmp
and
insl
in
inc
cli
mov
into
loopne
mov
adc
pop
fidivrl
std
ret
movsl
mov
fwait
jl
xor
or
testl
cmp
add
lock
pop
push
iret
push
mov
cmp
cs
cmp
jbe
jae
and
mov
inc
xor
mov
mov
shll
stos
sbb
mov
loop
and
pop
stos
mov
arpl
arpl
ss
push
std
andl
jns
stc
hlt
out
push
call
test
cmp
add
pop
loopne
mov
popa
sbb
mov
dec
rcll
testb
pusha
sbb
int
and
xor
sub
xor
inc
lock
ret
or
or
in
mov
xchg
iret
cs
sbbl
imul
shrl
jbe
idivl
pop
pusha
cmpsb
push
adc
pop
stos
jmp
stos
cltd
fsubl
fildl
jb
sbb
pop
sbb
push
mov
xchg
cmp
stc
xchg
adc
fcmovbe
xor
mov
insb
pop
mov
aas
jg
lcall
cmpsb
int3
test
mov
lret
cwtl
and
ljmp
or
lock
jne
mov
adc
sarb
dec
inc
int3
xor
xor
xchg
cmp
cs
jl
push
mov
js
mov
les
jnp
pop
lock
or
dec
cmc
cltd
dec
ror
movb
test
sbb
cld
cmp
xor
mov
repnz
add
jmp
sbb
fistl
adc
add
adc
add
adc
add
adc
sub
jns
jge
fdivp
adc
shrl
je
xchg
mov
mov
mov
maxps
inc
and
cmpsb
add
push
sub
cwtl
cmpsb
push
jge
pop
cmp
popf
push
cld
mov
adc
adc
push
adc
mov
fnsave
jg
cmp
and
push
lahf
pusha
and
dec
sub
ficomps
push
jo
and
xor
imull
add
cs
mov
lods
mov
push
mov
es
arpl
jb
popf
imul
inc
rcrb
in
mov
out
or
testl
scas
repz
int3
sarl
rcl
xchg
mov
outsl
cmp
cmp
outsb
sub
and
mov
jno
sahf
lods
das
sub
cmpsb
rcll
pop
fisttpll
push
sbb
inc
in
mov
data16
xchg
dec
jne
sahf
pop
pop
add
in
js
popa
push
cmp
push
xor
jg
inc
adc
bound
xlat
ret
push
mov
sbb
dec
test
sbb
cmc
test
loop
lods
xchg
cmp
je
pop
jae
pop
sub
daa
pop
or
pop
leave
lea
inc
insl
int
int
sub
push
jg
sti
sub
cs
icebp
les
test
jne
out
scas
call
mov
inc
mov
adc
aas
mov
add
adc
mov
xchg
mov
std
xchg
das
sub
dec
movsl
pop
adc
cmpsl
jbe
fsubl
fs
pop
adc
aas
je
push
pop
adc
sbb
mov
adc
cmp
hlt
pcmpeqd
jb
cld
arpl
cmp
mov
fwait
out
sub
mov
mov
fistpll
adc
cmpsl
mov
adc
out
pop
add
push
test
in
loopne
pop
adc
mov
push
ret
dec
popf
cmp
mov
add
or
jp
sbb
push
push
pop
adc
out
shll
sub
push
push
push
pop
adc
mov
fdivs
push
repz
jno
mov
jmp
mov
adc
lcall
push
pop
adc
in
adcb
hlt
pop
xor
dec
mov
mov
sbb
mov
sbb
in
nop
int
xor
cld
aad
mov
mov
inc
adc
adc
loopne
fs
fdivrl
xchg
fsubl
mov
sbb
pushf
rol
mov
xor
mov
rcl
popa
jmp
mov
pop
adc
pop
adc
addr16
les
adc
fiadds
jmp
enter
add
fs
les
adc
repz
push
enter
test
push
pop
adc
nop
xchg
pop
adc
adc
adc
push
pop
lcall
iret
push
push
pop
adc
fbld
xor
pop
push
push
pop
adc
mulb
int3
mov
dec
push
push
pop
adc
adc
in
inc
push
dec
adc
pop
adc
pop
test
adc
icebp
cmp
test
and
xor
aaa
jle
loopne
out
loope
adc
pop
cmpl
mov
sbb
imul
dec
std
in
rclb
or
xor
push
mov
ficoml
into
cli
aas
pop
ds
cld
rclb
sbb
test
and
jnp
fwait
mov
and
pop
adc
push
pop
adc
sub
outsl
lret
sub
adc
clc
or
push
push
lods
insl
push
push
pop
adc
mov
stos
pop
xor
adc
je
jnp
pop
and
push
dec
jnp
adc
add
lcall
stos
cmp
roll
or
or
popf
call
icebp
cmpsb
mov
movsb
jo
add
in
mov
icebp
rorb
pop
adc
xchg
int3
push
insb
push
pop
adc
sub
inc
shl
and
cwtl
int3
inc
push
in
add
jns
mov
xchg
cmp
rcrb
leave
call
pop
lret
add
jle
or
insb
cmpsb
hlt
cwtl
push
pop
xchg
sub
movsb
push
nop
inc
test
mov
sub
push
xchg
mov
les
dec
push
cmp
lods
pop
int3
test
test
imul
lret
jae
pop
pop
movb
mov
std
ljmp
movsb
push
pop
adc
push
cmp
jo
pop
adc
push
add
dec
cmc
clc
mov
sahf
test
sbb
mov
jg
les
std
sti
add
pop
gs
aaa
dec
inc
mov
out
pop
xchg
sti
insb
push
pop
adc
lret
ss
cld
mov
nop
aas
rcrl
addr16
pop
lock
ljmp
daa
push
shll
mov
pop
push
pop
adc
pusha
push
pop
adc
lock
push
mov
cld
std
mov
jg
insb
push
pop
adc
jo
es
rcrl
cmp
ljmp
mov
pop
adc
pop
push
repz
pop
adc
fsubrl
xchg
push
pop
adc
sbb
pop
xor
repnz
mov
adc
xchg
add
push
pop
adc
jnp
std
ret
mov
int
out
sti
add
mov
jb
mov
repnz
insb
mov
mov
jns
shlb
mov
ljmp
lock
clc
into
mov
mov
cld
push
lret
into
mov
sbb
insl
js
fcmove
mov
inc
add
loop
mov
mov
ret
jl
pop
adc
push
add
mov
dec
sti
andb
imul
adc
in
js
pop
adc
imul
inc
ljmp
sbbl
iret
cmp
mov
stos
stos
lods
adc
test
ds
in
sub
sub
imul
pushf
imull
push
sub
js
mov
daa
pop
push
pop
adc
push
addr16
mov
daa
xchg
hlt
movb
jno
popw
std
int3
push
lock
cmp
ljmp
xchg
cmpsl
xchg
sbb
loopne
mov
lods
test
test
push
mov
in
scas
sbbl
pop
in
lret
jle
lahf
pusha
push
pop
adc
das
addr16
nop
hlt
fwait
pop
fisttpll
insb
push
pop
adc
aam
adc
mov
andb
in
pop
adc
xchg
lods
mov
add
in
pop
adc
orl
pop
adc
mov
aam
call
xchg
pop
rdmsr
cwtl
repnz
sbb
andb
adc
push
les
into
jo
pop
jae
sbb
outsb
mov
sub
out
test
push
into
fcoms
subl
push
push
and
das
sbb
xchg
mov
test
ss
inc
inc
push
mov
repz
mov
leave
cli
dec
mov
gs
xor
and
js
cmp
inc
setb
aam
sbb
jle
les
or
pop
sub
cltd
push
inc
or
push
mov
cmpsb
das
cld
imul
div
xchg
rorl
pop
inc
inc
pop
cmp
mov
sti
mov
and
fwait
push
gs
scas
in
movsb
loopne
mov
data16
pop
enter
ds
and
icebp
in
call
rclb
mov
add
movsl
aam
test
movsl
sbb
and
arpl
jo
pop
push
sub
dec
pop
xlat
jecxz
add
sub
mov
mov
cmp
xlat
pop
subb
push
ret
aaa
push
insb
push
sbb
adc
push
scas
pop
mov
lods
or
and
ss
into
lods
pop
int3
sub
lock
sub
pop
mov
pop
and
pop
mov
lods
fwait
neg
addr16
lcall
or
push
ds
lds
cmp
xchg
xor
pop
lret
add
mov
or
mov
push
dec
leave
sbb
ds
jg
xchg
mov
xor
mov
popf
imul
dec
inc
adcb
xchg
jbe
and
cmp
xor
and
gs
jo
pop
adc
pop
adc
movl
xor
addr16
fidivrs
aam
ja
mulb
in
mov
or
lret
pushf
push
inc
pop
mov
cmp
das
out
push
int3
and
xchg
jmp
in
fisttpl
cs
movsl
jmp
add
out
xchg
dec
addb
scas
pop
xor
fmuls
mov
sbb
inc
pop
mov
jge
test
adcl
jbe
fnsave
push
flds
and
push
imul
mov
stos
cmp
repz
mov
lcall
mov
int
lods
mov
sub
mov
or
mov
ret
ds
test
xor
std
pop
jecxz
lea
movsl
sbb
xor
fcomi
or
jne
enter
stc
test
ljmp
or
data16
adc
mov
add
cltd
pusha
arpl
stos
mov
test
enter
int3
jo
mov
shlb
clc
cmpsb
push
mov
rolb
push
addr16
cmpsb
aas
jmp
scas
je
int
mov
push
xor
mov
xorl
add
aaa
scas
addb
jecxz
mov
push
pop
adc
sbbb
hlt
out
outsb
int3
fwait
jne
mov
mov
ljmp
adc
fxch
mov
stos
pop
and
jnp
fildl
in
es
mov
push
push
push
fwait
push
xchg
test
loope
xlat
mov
cld
cmp
mov
adc
sbb
jnp
add
sbb
adc
cmp
repnz
jmp
or
mov
or
and
cli
adc
mov
and
xlat
jns
and
jae
jp
and
and
jb
jns
ror
and
xor
mov
cmc
jo
lock
je
mov
ss
push
add
add
inc
push
call
mov
or
movsl
dec
pop
add
mov
aaa
jo
mov
sub
sub
xor
mov
xchg
les
push
xor
outsl
lret
rorl
push
inc
or
sub
clc
imulb
insb
mov
adc
jb
subps
mov
hlt
mov
sub
sti
push
xlat
cmp
inc
les
roll
outsl
dec
shll
lret
cmp
into
ds
cmp
jp
aam
xlat
cwtl
cld
or
mov
out
stos
cmp
and
add
jbe
cmp
mov
les
xchg
jo
pop
adc
sub
jne
setge
leave
sbb
cld
stos
outsb
idiv
scas
xchg
xor
mov
ja
cmpsl
and
xchg
adc
daa
pop
xor
push
out
adc
xchg
pop
dec
ljmp
mov
bound
ret
repnz
insl
or
mov
popa
test
repnz
cmp
movsb
fbld
pop
jnp
mov
xor
push
push
ja
or
cwtl
pop
dec
xor
push
sahf
cltd
pop
js
mov
movsb
ret
hlt
dec
mov
lock
lcall
push
rolb
mov
xor
jg
xor
xor
cmpl
hlt
push
pop
adc
hlt
or
mov
sub
out
mov
imul
ss
pop
rolb
inc
jnp
sbb
add
add
mov
js
js
mov
das
mov
repnz
fwait
ret
jle
dec
pop
adc
add
cmp
or
repnz
xor
ds
cmp
or
xor
sub
cmp
adc
xchg
jbe
daa
int
ss
mov
ja
and
jae
mov
add
xchg
dec
in
mov
aaa
iret
nop
jne
sbb
sub
enter
xor
adc
mov
sub
in
hlt
mov
sahf
push
jg
push
mov
sub
mov
je
out
into
cmp
shrl
mov
ret
pop
negl
fistpll
cmp
mov
push
loop
jbe
es
add
and
and
repz
stos
inc
idivl
add
xchg
xchg
fcomip
cmp
dec
push
and
add
je
add
loope
jmp
or
pop
pop
outsl
incl
dec
inc
insb
mov
jl
out
lcall
stos
mov
xchg
daa
jge
mov
push
bound
stc
mov
add
sbb
es
xchg
aaa
scas
test
sahf
fstpl
xchg
rol
adc
inc
cmp
mov
icebp
jmp
mov
cltd
sub
cmpsb
sbb
imul
orb
sub
js
push
adc
pop
sbb
lret
and
gs
and
or
lahf
sub
rcrb
or
out
lret
lahf
test
ljmp
adc
adc
stos
lret
mov
mov
adc
mov
hlt
adc
adc
outsb
push
mov
repnz
pusha
xchg
adc
adc
xor
sahf
mov
adc
sbb
sub
jp
pop
test
jne
lea
divb
mov
xor
inc
iret
push
es
into
sbb
mov
sbb
mov
clc
mov
iret
mov
xchg
dec
jnp
ficompl
loopne
cld
pop
call
fnstenv
inc
fldl
xor
xor
adc
cwtl
pop
subb
jno
shl
loopne
inc
jo
pop
adc
repz
pop
push
dec
roll
mov
jns
fsub
xchg
out
add
dec
lret
shrb
cli
loopne
inc
popf
push
outsb
or
aam
jp
popa
std
dec
test
orb
and
popa
sub
push
xorl
mov
orb
xchg
dec
rolb
test
int
orb
fstp
add
adc
imul
scas
es
mov
sub
dec
test
call
jle
mov
xlat
adc
cmpsb
ret
fsubp
in
pop
mov
push
xchg
popa
xor
mov
insb
and
push
ret
es
ds
adc
imul
dec
dec
dec
ds
sti
push
das
nop
out
cmp
lret
inc
or
fisttps
xchg
aas
sti
mov
in
adc
adc
pop
icebp
lods
push
inc
ss
adc
aaa
in
pop
push
pop
xchg
das
cs
scas
int
hlt
jb
adc
adc
das
jl
dec
pop
inc
outsb
sub
movq
xor
add
mov
test
jae
cli
scas
fs
dec
hlt
mov
rclb
aas
out
inc
push
push
scas
fwait
not
sub
mov
jno
test
in
adc
adc
inc
movsb
adc
mov
cmp
nop
ficoml
adc
rep
mov
stc
pop
loop
scas
test
cld
mov
dec
sti
mov
ja
outsl
fidivrs
jmp
lahf
repz
fsubl
mov
ret
mov
insl
add
jb
outsb
adc
fstl
push
mov
ljmp
adc
ds
aaa
ds
cli
test
int3
xchg
sbb
push
addr16
into
add
push
jl
pop
cli
jb
jnp
cmpsb
pop
adc
in
mov
jnp
out
and
add
jmp
data16
out
mov
call
hlt
cmpsb
inc
mov
pop
jnp
jbe
sbb
adc
jo
xlat
mov
pextrw
mov
cmpsl
int
fisttps
pop
idiv
jbe
adc
cli
cmp
out
xchg
cmpsb
cmc
into
popf
arpl
cld
ja
fistpll
add
jle
imulb
dec
xchg
push
dec
push
loope
icebp
cmpsb
xlat
sub
pop
inc
andb
rep
and
jnp
aam
popf
cmp
call
sub
in
cmpsb
mov
test
in
and
lret
les
push
adc
dec
jle
movb
xor
dec
add
cli
jl
sbb
push
mov
adc
push
adc
subb
ss
mov
stos
adc
push
movsl
and
ret
sar
out
rorb
inc
xorb
shl
cmpsb
pop
adc
repnz
negb
cmpsb
pop
adc
mov
fildll
jnp
sbb
mov
cli
in
divl
arpl
out
lahf
push
push
and
test
roll
jnp
mov
or
adc
xchg
cmp
sbb
fiadds
mov
xor
out
out
out
push
fwait
cmp
testl
dec
rol
mov
repnz
pop
or
test
pushl
dec
and
cmp
push
jb
dec
pusha
add
in
sti
clc
jae
out
sahf
dec
mov
out
enter
and
xchg
out
cmp
cmpsb
or
sub
dec
xchg
jmp
push
and
or
dec
sbb
mov
enter
sub
push
cmpsb
dec
add
in
ja
loop
lock
dec
cmc
cli
loop
push
insb
loop
cmc
xor
sub
test
pop
ss
xor
lock
in
popa
xor
lds
adc
or
and
cmpsb
sub
out
xchg
fisttpll
out
imul
mov
fwait
jae
push
leave
sbb
imul
ret
fdivrs
stc
push
in
adc
push
movsl
cmpps
test
hlt
cmpsb
xor
out
std
jb
or
mov
in
cmpsl
gs
orl
xor
jmp
pushf
loope
mov
shl
nop
clc
je
inc
jle
test
sbb
enter
negl
lret
xor
xchg
adc
and
cmp
inc
xchg
mov
mov
pop
push
fsubrs
inc
leave
mov
mov
dec
dec
dec
ret
xchg
outsl
inc
fldt
mov
mov
addr16
cli
sub
dec
pop
push
enter
mov
imul
and
test
out
xchg
adc
xorl
and
lret
push
jl
movsb
imul
and
mov
movsl
stos
outsl
sbb
repnz
push
out
das
push
xor
out
inc
dec
rorb
nop
and
mov
xor
jb
or
testb
test
mov
adc
mov
das
pushf
test
mov
imul
popa
out
movsl
and
aaa
cmpsb
adc
or
aas
outsl
pop
aas
pop
pushf
test
dec
mov
and
and
test
arpl
xchg
mov
xchg
jmp
cmpsl
movsb
mov
test
divb
sub
sub
lds
ss
pop
pushf
test
jmp
je
lcall
cli
push
mov
cmp
mov
jg
pushf
test
add
jmp
xchg
cmp
inc
and
test
aad
push
push
aas
jno
pop
lahf
das
add
mov
pushf
test
mov
dec
pushaw
mov
mov
ss
jbe
jecxz
mov
add
mov
mov
jne
sub
sub
sbb
add
cmpsb
cmp
jbe
cmpsl
data16
mov
or
iret
popf
cmp
movsb
fcmovnbe
inc
push
jb
loopne
mov
je
cmp
mov
or
mov
and
mov
adc
cmpl
add
cmpsb
push
icebp
jle
daa
test
cmpsl
movsb
pushf
lds
adc
mov
scas
xchg
push
xchg
sti
imul
pop
jae
pop
jl
icebp
cs
lock
push
clc
mov
xor
xor
mov
shlb
inc
arpl
mov
loopne
dec
pop
cld
ja
stc
cmp
mov
sarl
in
cmp
lea
fcomps
in
mov
int
jl
mov
jecxz
out
push
rorb
and
push
adc
call
movsb
pop
adc
out
push
sub
es
jl
push
adc
push
into
clc
adc
adc
daa
mov
movsb
pop
adc
sbb
adcb
adc
xchg
fwait
adc
das
or
pop
adc
addr16
or
pop
adc
rcrl
int
lods
mov
sbb
loop
jbe
outsb
mov
push
sub
out
cmpsb
lret
dec
movsl
pop
adc
pop
cli
int3
test
mov
cmp
pop
jae
jnp
mov
add
and
adc
pushf
les
jb
pop
mov
out
cmp
cld
icebp
pusha
inc
jae
jns
repnz
or
jb
xchg
je
lock
add
out
pop
jnp
cld
jb
or
or
mov
add
outsb
test
out
pop
ret
xchg
push
mov
loope
cmp
test
push
das
pop
int3
mov
push
mov
sahf
xchg
in
mov
cmp
fidivs
add
mov
sbb
adc
adc
adc
xchg
inc
stc
gs
mov
dec
or
cmp
fldcw
das
test
mov
jmp
inc
xchg
psubw
hlt
js
nop
adc
pop
adc
in
in
imul
pushf
repnz
jb
jge
arpl
jns
fwait
push
adc
idivl
add
notb
aas
jo
sbb
rcll
out
fistpll
push
ficoml
ficomps
sbb
adc
adc
mov
or
cli
lcall
mov
rorb
cmp
es
push
jecxz
cli
sub
cmovnp
aas
xchg
loope
sbb
mov
cmpsb
jbe
sbb
jl
adc
mov
xchg
das
ja
lods
jnp
out
mov
inc
push
mov
mov
outsb
jne
dec
push
imul
movsb
and
lock
ret
mov
pop
es
jae
push
mov
push
lcall
push
arpl
and
mov
sti
out
shlb
pop
adc
test
pop
lcall
mov
mov
pop
jnp
in
cmp
and
jno
dec
push
rorl
adc
cmp
in
sti
mulb
jmp
cwtl
mov
adc
sub
and
push
pop
mov
outsl
idivb
sti
jne
and
lods
mov
xchg
jo
ret
mov
push
ficompl
push
sub
jnp
cld
sti
mulb
mov
in
es
cwtl
mov
sub
ret
and
mov
je
incl
sub
mov
repz
aad
push
imul
dec
cli
add
icebp
pusha
mov
repz
pop
jle
in
fxch
dec
adc
mov
clc
lods
add
int
jecxz
adc
adc
or
sbb
adcb
adc
add
aaa
mov
push
std
sti
testb
dec
sbb
dec
gs
jnp
cmc
cmpsb
dec
popf
imul
jl
add
in
imul
push
repnz
push
mov
mov
cmp
or
fsubl
mov
cmp
pop
lret
outsl
jg
cmc
mov
jbe
jnp
jmp
out
mov
adc
in
push
xchg
xchg
inc
jl
les
jbe
in
jb
adc
mov
pop
cmp
fsubl
out
cmp
ror
je
cld
mov
jnp
fidivl
xor
push
mov
daa
ja
out
push
xchg
add
sub
adc
push
in
cs
jl
sub
adc
adc
cmp
adcb
adc
push
pushf
cmp
add
mov
xchg
xchg
dec
rorl
popa
sahf
inc
inc
icebp
in
xor
clc
js
insl
xchg
mov
pushf
dec
cmpsb
jecxz
sahf
mov
push
rcr
inc
push
xor
iret
fnsave
or
lcall
and
ret
sbb
stos
mov
addr16
cmpb
adc
out
shrb
into
push
fsubl
mov
xchg
jnp
ljmp
out
jecxz
mov
je
in
pop
and
jne
frstor
adc
inc
jo
lock
cmpsb
pop
adc
out
std
jg
mov
cmpsb
pop
adc
std
push
fistps
loope
rorb
add
adc
je
clc
mov
push
mov
popf
mov
xchg
frstor
arpl
mov
lea
daa
cmp
in
movsl
push
inc
cmpsl
sarl
enter
pop
mov
jns
pop
push
std
mov
sbb
loope
jecxz
lods
pop
cs
popf
stos
xor
insl
fadds
xchg
fdivrs
icebp
enter
or
dec
cmp
inc
jmp
gs
lods
or
sbb
and
lock
fwait
sub
dec
shlb
mov
jp
jg
push
mov
addl
out
enter
js
mov
adc
adc
xor
xlat
pop
adcb
adc
xchg
int3
addr16
imul
mov
in
clc
or
inc
inc
lret
adc
clc
cmpsl
mov
fiadds
cltd
aad
jp
dec
and
mov
adc
int3
mov
cmpsb
pop
adc
dec
mov
ja
and
pop
mov
inc
jae
mov
xchg
push
lret
mov
cmp
out
dec
dec
dec
into
adc
mov
inc
xchg
adc
fwait
pop
addb
mov
into
shrb
shlb
cmp
push
mov
pop
insb
test
adc
sbb
inc
xchg
push
daa
das
pop
pop
push
mov
pop
pushf
xchg
jbe
xor
inc
outsb
cmp
adcb
pop
xlat
inc
jg
fbstp
ds
mov
push
or
in
stos
dec
fs
adc
in
mov
add
rcr
das
xor
fwait
jae
scas
mov
jp
push
sub
xchg
jns
or
xor
cwtl
cmp
out
jl
xchg
mov
leave
lret
cmp
cli
mov
mov
dec
shll
inc
xor
je
or
data16
xchg
jg
pop
jp
xchg
shlb
cmp
add
lret
xlat
leave
jbe
aam
fucomi
out
sar
call
jno
mov
xchg
int
push
or
popf
mov
fs
cmpsb
je
je
mov
xlat
fists
mov
adc
je
fistpl
sarb
pushl
add
pusha
out
and
dec
jge
stc
fstl
data16
mov
sbb
xchg
lods
push
and
imul
xorb
mov
lods
jne,pt
loop
cmpsb
pop
ja,pt
xchg
sub
adc
adc
and
mov
jp
sub
testl
xchg
jp
add
jb
add
jnp
cli
out
popf
mov
add
lahf
out
mov
adc
jbe
mov
mov
sbb
mov
shrl
daa
and
test
adc
outsl
fsubrp
xchg
cs
bound
int
les
pop
and
add
mov
cwtl
cmp
int3
and
out
js
cli
cmp
and
pop
jo
dec
fwait
cmp
adc
xchg
lret
pusha
cltd
cltd
imul
mov
stc
push
jecxz
cltd
mov
leave
lahf
mov
mov
repz
fdivl
imull
sti
aam
jmp
xchg
add
or
pop
adc
dec
addr16
cmpsb
pop
adc
cmp
or
mov
mov
leave
sti
push
psubq
cltd
sbb
fstl
ret
pop
adc
mov
cmpsb
pop
adc
push
aas
adc
test
adc
ds
jg
or
mov
adc
adc
adc
fmulp
lret
loope
scas
push
popf
pop
jmp
pop
cld
cmp
je
cmpsb
pop
adc
jmp
imul
cmp
stos
aam
setle
ja
clc
test
xor
adc
cmp
inc
adc
lahf
in
jp
dec
out
rorl
cmp
cmpsb
pop
adc
ds
and
lds
jmp
shll
or
cwtl
push
mov
fisttpll
push
es
sbb
push
adc
adc
dec
sub
out
dec
idiv
pop
push
adc
adc
mov
mov
and
sub
ja
sbb
loop
in
sub
xchg
inc
mov
mov
in
test
repz
sub
dec
pop
dec
dec
ret
pop
into
pop
cmp
leave
or
adc
xchg
jb
movsl
jge
add
pop
adc
adc
imul
jb
and
xor
adc
loopne
fcoms
jmp
loope
aas
mov
test
adc
adc
pop
in
ljmp
leave
inc
push
inc
sar
and
jo
fmuls
xchg
enter
push
iret
popa
pop
call
and
xchg
pop
arpl
ljmp
sub
insb
and
xchg
dec
outsl
fs
or
decl
and
lods
adc
jg
sbb
lods
push
xchg
mov
aad
test
nop
lods
push
adc
push
nop
lods
push
adc
fidivrs
aas
shlb
xchg
into
test
clc
or
jl
sbb
mov
mov
add
or
mov
adc
hlt
mov
repnz
and
ret
dec
or
mov
or
pop
hlt
rolb
mov
or
ds
aaa
and
insb
test
and
rcll
dec
and
fiadds
cmp
adc
xor
sbb
xlat
cmp
fisubrl
and
lahf
xchg
ljmp
or
mov
movsl
bound
jl
pop
adc
adc
jp
mov
mov
ret
jb
push
mov
mov
mov
les
sti
pop
mov
cs
jo
dec
out
xchg
movsb
lea
mov
adc
in
mulb
sub
adc
jp
outsb
mov
add
mov
cld
sbb
pop
jge
pushf
test
lock
sbb
sub
xchg
ror
dec
test
pop
push
ret
mov
jl
jmp
aad
pushf
test
mov
bound
mov
push
adc
pushf
test
jns
xchg
mov
add
out
mov
rol
mov
fisubl
or
mov
xchg
adc
push
adc
pop
neg
ret
pop
adc
das
es
cmpsb
pop
adc
insb
cmp
mulb
popf
mov
jp
add
mov
jbe
fucomip
mov
jno
ffreep
jnp
int3
jne
xchg
fxch
push
test
fcomip
and
mov
dec
adc
adc
ja
aad
cmpsl
lea
adc
inc
push
mov
xchg
fldt
sub
xlat
divl
mov
and
cmc
mov
fstpt
mov
cs
fs
pop
cmp
sbb
aas
jp
rolb
sbb
push
push
mov
outsl
gs
ret
pop
adc
lret
mov
out
out
jmp
jno
mov
mov
fisubs
jns
les
sub
push
adc
jns
jns
cmpsl
pop
sub
sub
in
mov
jle
arpl
int
sub
mov
pop
cmpsb
movsb
aas
jp
clc
mov
faddl
cmpsb
pop
adc
xor
mov
sti
in
and
xor
js
xchg
mov
cld
sub
ret
mov
sbb
test
xchg
xor
or
shl
arpl
sbb
cltd
int
pusha
mov
adc
loope
lds
lahf
inc
fsubrl
and
dec
int3
dec
and
add
jecxz
test
or
stc
mov
imul
sti
pushf
lret
out
and
test
mov
sbb
push
adc
leave
jnp
push
push
ds
mov
stc
out
rolb
sbbb
xchg
jns
enter
les
and
rorb
adc
adc
pop
inc
insl
repz
dec
pop
clc
sbb
xchg
fdivrs
mov
scas
and
and
mov
and
movsb
sub
pop
mov
push
adc
push
adc
in
push
in
mov
test
push
cltd
adc
sahf
test
mov
jo
lods
xchg
cld
inc
inc
pop
sub
loopne
mov
xchg
movsb
sbb
loop
add
imul
push
les
and
imul
ret
dec
lea
jg
mov
xchg
mov
fistpll
sub
pop
pop
mov
fdivs
cmp
loope
lea
push
test
neg
mov
das
xchg
inc
aaa
mov
ret
adc
mov
fidivrl
cmc
sahf
imull
mov
jae
sub
adc
adc
popf
mov
stos
mov
adc
adc
andl
ret
mov
xchg
hlt
adc
out
lods
pop
mov
js
in
xchg
cmpsb
pop
adc
negl
sbb
xor
ds
cli
cld
aas
je
adc
push
nop
stos
loope
sbb
xor
lret
cmpsl
dec
lret
rol
mov
mov
mov
cmpsb
pop
adc
repnz
add
pop
sahf
in
dec
sub
sti
jl
add
mov
fcomp
lahf
or
inc
dec
adc
xchg
mov
add
jne
aas
dec
in
xchg
inc
xchg
out
into
popf
cmp
lods
aaa
dec
enter
sub
mov
fstps
add
rorb
sbb
scas
loope
push
xchg
sahf
push
sbb
pop
adc
xchg
jl
push
adc
lea
sub
push
adc
jae
movsb
pop
adc
sub
adc
adc
mov
movsb
pop
adc
into
popf
cmp
fsts
jbe
fs
idivl
inc
in
pop
inc
cli
cmp
in
cmp
std
jb
movsb
pop
adc
mov
mov
add
xchg
stos
mov
xchg
xor
dec
cmc
popf
cmp
es
mov
test
andl
cltd
cmp
xor
enter
movsl
pop
adc
rclb
stos
mov
idivl
in
pop
mov
cmp
scas
sti
call
and
xchg
mov
lret
mov
sbb
pushf
ficompl
fiaddl
repz
mov
mov
jle
or
push
xor
push
loopne
pop
push
dec
mov
mov
pxor
xchg
and
and
adc
pop
adc
cmp
inc
pop
insl
xchg
pop
bnd
outsb
mov
lock
pop
xchg
sbb
mov
int3
scas
mov
lret
sbb
sub
fstpt
push
adc
mov
xor
push
insb
add
pop
or
pop
fstpt
adc
adc
mov
lea
rorl
outsb
jne
push
arpl
cltd
mov
pop
gs
stc
lea
xor
push
or
cmc
out
and
cmp
adc
insb
fxch
test
pop
fwait
mov
pop
lds
mov
arpl
cmp
cld
imul
mov
adc
aam
push
xchg
in
cmp
xor
push
adc
xor
cmp
cltd
pop
push
cmpsb
fnstcw
lcall
scas
std
ja
jno
stos
sub
adc
mov
icebp
adc
addr16
pop
popa
cmp
push
adc
scas
sub
push
nop
pop
insl
cs
popa
xchg
in
dec
sub
je
movsl
not
mov
sub
mov
arpl
xchg
cltd
incb
movsl
pop
sub
roll
addr16
out
sbb
negb
arpl
mov
cmovno
dec
xor
cmp
lret
int3
or
mov
ror
mov
xchg
movsl
push
js
push
mulb
or
cltd
add
inc
in
inc
push
rcrl
push
dec
xlat
push
in
sbb
test
pop
adc
mov
call
out
clc
pop
mov
int3
adc
pushf
out
jno
mov
loop
test
jnp
dec
pop
adc
cmp
jmp
clc
adc
fistpl
das
testl
push
sahf
add
mov
fstl
mov
sti
mov
mov
jb
xor
jle
sbb
out
dec
cmp
cwtl
jbe
push
mov
in
xor
mov
cs
cmp
mov
in
push
mov
mov
xchg
jo
fmulp
insb
and
scas
vmovntps
clc
jnp
mov
cmp
mov
aas
mov
out
push
lock
jecxz
mov
xor
xor
jb
sti
imul
pop
insb
sbb
jmp
pushf
dec
bound
and
push
leave
std
jo
data16
jp
xor
jne
pop
adc
adc
cli
je
bound
cmpsb
pop
adc
test
shlb
mov
lret
bound
pushf
xchg
ss
aad
jl
mov
mov
orl
insb
mov
cmpsb
add
cmpsl
dec
popf
mov
jnp
add
cmp
jmp
imul
pop
jge
push
jle
cmp
into
popf
int3
xor
shrb
out
push
lock
ss
fbstp
mov
cmc
jle
xor
xchg
mov
sub
mov
cmpsb
pop
adc
cmp
jae
cmp
sbb
sub
jg
addr16
ror
dec
bound
pop
xchg
out
lds
loop
stos
mov
shlb
ja
cmp
in
and
ja
les
mov
mov
add
inc
or
les
adc
mov
out
fdivrl
les
xchg
mov
hlt
adc
fwait
dec
jne
xchg
mov
out
sub
jnp
stc
mov
add
xlat
lcall
inc
fadd
inc
aas
aam
mov
test
mov
xchg
jmp
fmuls
negb
pop
sub
int
mov
int3
or
aas
std
mov
or
mov
dec
ljmp
fiadds
outsl
test
push
mov
bound
out
loopne
and
adcb
jmp
adc
or
test
sbb
fisubrs
iret
das
jp
lods
pusha
cld
mov
stos
cli
shrl
lock
cmp
stos
lea
xchg
push
add
push
out
loop
mov
mov
in
push
dec
lock
mov
push
pop
mov
cmp
gs
jnp
pop
test
shll
cmp
sbb
dec
mov
inc
xchg
xor
pop
iret
notl
in
mov
sbb
sbb
pop
xchg
inc
gs
pop
cwtl
mov
mov
and
sbb
and
ds
or
add
pop
mov
mov
pop
ret
jb
call
testl
filds
pop
insb
add
imul
sub
jle
mov
or
dec
psllw
test
idivl
aaa
xor
pop
js
out
add
sub
dec
or
cmc
pusha
adc
xor
mov
rclb
pop
cmp
aas
test
aas
fwait
ja
popa
pop
sub
data16
fcomp
ror
jae
inc
fucomp
bound
dec
mov
sub
xor
imul
push
std
jae
mov
jge
andb
jle
xchg
sub
push
fwait
jmp
or
sub
int
dec
add
sbbl
flds
and
mov
fildll
push
pop
repnz
std
cs
daa
shlb
or
das
filds
inc
jnp
adc
fs
sbbl
pop
outsl
or
into
ds
xchg
pop
pop
xchg
dec
mov
jnp
xchg
ret
les
adc
lea
stos
mov
pop
adc
stos
dec
mov
jecxz
test
and
add
movsb
or
lods
push
popl
or
cmp
mov
xor
push
nop
push
and
mov
ljmp
xchg
jne
add
jo
and
out
fsubl
mov
lds
ljmp
add
jecxz
or
jg
push
call
add
mov
xchg
push
lods
add
cmpsl
movsb
js
jmp
leave
stos
or
sub
pop
adc
jmp
mov
mov
sub
pop
adc
cmp
movsb
mov
mov
in
jl
scas
mov
mov
shlb
inc
mul
fsubl
or
aas
loop
xor
sub
ret
dec
mov
mov
sub
mov
divb
repz
shll
rcll
cmp
xor
std
push
push
add
jp
mov
jno
gs
in
mov
sub
pop
adc
push
lret
jp
out
loopne
mov
mov
xchg
sbb
in
push
pop
inc
call
mov
jl
add
jbe
fstpt
rep
sbb
daa
mov
dec
jno
xor
aaa
adc
jg
bnd
in
xchg
inc
shlb
imull
je
add
dec
sub
jl
stos
cwtl
and
push
std
enter
into
jmp
cmpsb
cmp
xchg
jne
pop
std
lret
adc
insb
andl
inc
sbb
add
sbb
mov
or
insl
push
and
xor
push
cltd
ljmp
add
push
jle
out
stc
inc
and
addr16
cmpsl
pop
adc
shlb
out
cmpsl
into
lcall
add
cmpsl
pop
adc
xchg
decb
sub
lahf
and
loope
mov
cwtl
mov
and
leave
and
jecxz
into
and
and
lds
cmp
pop
jns
cmp
loop
popf
or
add
test
mov
pop
adc
mov
scas
xor
pusha
xchg
cmp
cmpsb
bound
movsb
pop
adc
movsl
pop
adc
inc
stos
mov
xchg
test
mov
in
mov
ljmp
out
mov
subb
mov
iret
cmp
pop
push
daa
inc
cmpl
das
xor
pop
fwait
inc
xchg
jnp
std
ja
mov
push
jo
cmp
pop
cmp
push
fnstsw
cs
jnp
or
mov
adc
clc
std
aam
pop
adc
inc
jnp
lods
add
add
test
movsl
pop
adc
mov
mov
jo
push
adc
push
popa
adc
scas
aad
mov
gs
push
jb
adc
adc
test
mov
adc
adc
lret
sub
xor
pop
jl
jge
rep
and
mov
gs
or
and
and
cmp
or
outsl
sub
gs
cmp
add
dec
and
and
popa
inc
outsb
sbb
and
es
lods
inc
cltd
cli
sub
push
adc
xchg
dec
aas
movsl
cli
mov
lea
sub
mov
ss
repnz
ss
jmp
push
divl
push
fisubl
or
add
adc
mov
fwait
movsl
inc
aas
push
fs
hlt
aad
mov
push
scas
loop
outsb
adc
mov
lret
dec
pop
mov
das
sarl
cmp
xchg
shl
cli
jns
repz
ja
xor
adc
adc
cli
lds
dec
pop
mov
mov
or
xor
movsl
adc
movsb
enter
push
pop
adc
nop
stos
xchg
add
ja
pop
repz
and
divb
xor
hlt
mov
ja
mov
rcrl
cmpsb
ja
movsb
jbe
cmc
hlt
jb
fidivl
xchg
dec
cld
xor
out
popa
cmp
pop
inc
jle
jnp
std
jo
mov
repnz
push
stc
jne
mov
push
scas
inc
sbb
pop
push
pop
adc
push
pop
adc
jne
push
rcrl
pushf
pop
fidivl
lods
repz
add
push
sbbb
adc
push
pop
adc
jne
xor
jg
sub
pop
scas
iret
fs
out
pop
xor
mov
mov
pop
or
jmp
xor
popf
cmp
aas
mov
cmp
outsl
xor
into
popf
cli
add
adc
adc
cmp
xor
incb
jb
ds
xor
mov
adc
je
cmpsb
scas
mov
addr16
out
fistpll
insl
std
cmp
push
mov
rcll
add
jecxz
pushf
call
scas
add
popf
out
in
push
inc
xchg
cli
sbb
adc
adc
gs
sbb
sbb
xchg
pop
mov
and
dec
in
xchg
je
xor
sub
enter
stos
inc
addb
adc
cld
cli
push
jo
pop
adc
repnz
iret
insl
cld
insl
pop
cmpsb
dec
pushf
or
cmp
pop
adc
jle
dec
lock
pushf
add
push
mov
fdivl
pop
adc
std
insl
add
sub
movsb
cmp
sbb
cmp
stc
jno
in
xlat
arpl
mov
jbe
inc
lds
je
scas
inc
xchg
int3
push
adc
adc
cmp
test
mov
inc
dec
scas
or
aam
jmp
ffree
xorl
roll
popf
adc
add
sub
cmp
test
jae
mov
adc
aaa
loope
inc
inc
aas
jle
sti
jb
pushaw
add
add
push
pop
adc
and
addr16
sahf
test
jecxz
cwtl
xchg
push
adc
pop
rcrb
xor
sbb
adc
add
mov
adc
dec
xchg
outsl
insb
push
pop
adc
sub
pop
mov
mov
adc
hlt
jp
clc
push
dec
cmpl
push
notb
push
pop
adc
dec
or
mov
pop
out
adc
adc
cwtl
clc
in
adc
adc
push
mov
in
shll
cmp
cwtl
nop
push
and
push
jecxz
lea
adc
fwait
pop
lods
orl
mov
mov
adc
scas
cld
ja
adc
movsl
pop
adc
repz
int3
cmp
test
hlt
repnz
fdivrs
jne
cmpsb
andl
lods
adc
out
jne
inc
dec
cltd
or
mulb
push
loope
leave
dec
push
lret
push
push
sti
aad
cs
or
dec
cltd
push
enter
outsb
pop
lret
mov
popa
or
xorb
and
fisubrl
shrb
pop
push
jb
nop
xchg
pop
in
add
mulb
or
push
fwait
sbb
sbb
adc
shll
adc
mov
imul
add
push
std
sub
int3
and
insb
test
sahf
mov
dec
pusha
push
aam
nop
fidivrl
xor
mov
cmp
fcmovu
xor
imul
adc
mov
adc
imul
into
incl
mov
fs
fdivrp
xlat
push
ja
jg
inc
sbb
jecxz
jmp
insb
scas
and
ljmp
test
aas
aas
mov
jecxz
adc
nop
in
addr16
mov
mov
lret
push
jne
or
cmpsb
cmpsb
je
and
ljmp
repz
shl
sbb
stos
scas
adc
add
je
push
adc
scas
sarl
cli
repz
movsb
inc
insb
popf
xrelease
imul
cmpsl
sub
out
js
push
adc
push
enter
adc
mov
pop
dec
popa
mov
lods
test
mov
add
js
push
adc
inc
add
lret
push
jne
dec
mov
bound
lcallw
int
test
mov
rolb
js
push
adc
mov
fstpl
push
shll
xorb
out
jle
adc
lock
push
addr16
shrb
lahf
pop
jmp
mov
jge
aas
pop
loope
xchg
test
mov
mov
jo
pop
adc
shll
cld
bound
cmp
sbb
les
pushl
add
dec
sbb
push
out
into
push
lret
pushf
mov
adcb
adc
mov
ret
jle
enter
out
cmp
sbb
pop
cmpsl
leave
add
add
jbe
les
lods
fwait
jecxz
cmp
mov
pop
cmp
mov
out
rorl
out
aaa
xor
inc
inc
xor
inc
aam
stc
in
mov
pop
in
mov
into
add
scas
jne
or
test
loopne
lea
adc
pop
icebp
sub
int3
andb
stos
incl
roll
xor
xchg
test
fiadds
inc
push
movsl
pop
adc
fists
jecxz
pop
stc
pop
adc
jle
cmp
sub
dec
lock
add
xchg
fs
jp
push
stos
leave
push
mov
scas
pop
ficompl
fdivrs
pop
adc
sbb
mov
inc
stos
test
push
adc
cs
xchg
push
adc
push
scas
fldt
pop
adc
cld
mov
inc
mov
sahf
clc
fcoms
pushf
adc
adc
aam
repnz
in
hlt
adc
adc
movsl
pop
adc
sbb
movsl
pop
adc
test
popl
cmpsb
add
popf
dec
mov
addr16
stos
mov
xor
mov
test
aas
shll
and
or
and
sub
sbb
cmc
jbe
pop
adc
pop
adc
incb
rorl
inc
mov
adc
fisubl
pop
pop
dec
pop
in
in
mov
or
mul
jbe
inc
xchg
xor
rol
iret
add
gs
pop
insb
xchg
dec
xor
mov
lock
add
int
push
push
sbb
test
xor
add
sbb
mov
ret
sbb
jne
sub
leave
push
lea
fcomp
ficompl
movsl
fs
mov
jno
add
cli
aas
or
enter
imul
xchg
insl
popf
sub
dec
mov
stos
mov
dec
in
fwait
sub
les
rcl
aam
lds
test
inc
loop
add
cld
mov
pop
add
or
adc
jne
push
adc
sub
push
push
add
out
sbb
aad
inc
into
dec
jae
shlb
xor
enter
in
insb
xchg
repnz
xor
xor
inc
cs
mov
cmpsl
fs
pop
roll
in
pop
mov
in
addr16
ja
or
mov
addb
add
and
test
mov
sub
or
imul
pop
xor
add
lock
pusha
popf
sti
aas
mov
xchg
mov
sub
mov
xor
xchg
mov
mov
scas
adc
dec
fs
cmpsl
mov
lds
adc
les
cmpsl
scas
xchg
mov
mov
movsl
add
mov
jle
xchg
int
cmp
cmpsb
pop
sbb
and
mov
popf
stos
pushf
mov
push
sbb
sbb
xchg
ret
mov
and
les
adc
hlt
push
jo
sahf
mov
inc
sub
cmpsb
xor
jg
pop
loope
int
dec
adc
add
add
mov
and
sub
mov
das
pop
mov
ret
cli
test
add
or
and
xchg
push
cli
add
mov
les
stc
add
add
nop
pop
js
clc
pop
inc
sbb
and
les
adc
hlt
push
jo
jb
xchg
popf
jne
push
sub
mov
mov
das
xchg
mov
adc
and
jle
iret
pushf
imul
sub
loopne
and
cmp
imul
sahf
inc
push
or
mov
pop
rcrl
jne
fucomp
pop
mov
adc
push
ds
jecxz
leave
push
pop
adc
mov
mov
jbe
addr16
cmc
mov
fwait
test
adc
push
idivb
and
shlb
push
push
rcll
add
pop
repnz
or
testl
rcrb
imul
aad
sti
xchg
mov
or
adc
or
lcall
mov
inc
jb
shll
cld
repnz
ja
in
test
out
sbb
mov
lcall
outsl
pop
xor
sub
adc
push
mov
inc
andl
or
push
aam
dec
addl
dec
xchg
scas
scas
xchg
lret
shll
gs
cmp
js
ret
fidivs
mov
pop
pop
xchg
sbb
enter
push
cmc
pop
push
int
ds
inc
push
push
les
int3
cmp
xchg
rorb
in
push
pop
hlt
dec
faddl
push
jbe
xor
pop
leave
sub
push
push
push
mov
sub
sti
das
sbb
xchg
mov
cs
clc
mov
cwtl
ficomps
sbb
bnd
jns
sarl
jmp
cmp
or
mov
fstl
repz
insb
sub
xrelease
xlat
mov
gs
movsl
pop
xor
push
xor
out
aas
loope
test
in
in
out
pusha
ja
mov
jge
scas
loop
loop
inc
sub
dec
ds
add
and
cli
jg
fcmovu
fcoms
fbld
sti
in
imul
xor
sub
movsl
and
mov
hlt
shrl
fildl
test
sti
int3
sbb
movsb
fstpl
mov
xor
filds
mov
xor
test
arpl
js
popa
mov
sbb
mov
sbb
mov
adc
pop
mov
lock
sbb
mov
test
and
pop
outsb
inc
movsl
pop
adc
pop
pop
inc
xchg
push
aaa
insl
mov
ds
hlt
ret
lods
cmp
in
fs
lret
push
push
daa
jp
sub
shr
adc
andb
xchg
pop
adc
jnp
movsl
pop
adc
movsl
pop
adc
cmp
dec
pop
adc
dec
pop
adc
ja
sbb
sbb
add
les
adc
xchg
dec
pop
adc
xchg
xchg
inc
fstpt
jmp
les
adc
ss
mov
cli
cwtl
dec
pop
adc
cwtl
nop
and
repnz
outsl
les
adc
xlat
inc
jmp
dec
pop
adc
aam
adc
xchg
mov
adc
inc
movsl
pop
adc
lcall
adc
pop
adc
pop
lret
xorl
cmpsb
jp
fwait
int3
out
xchg
adc
add
add
test
lock
xchg
movsl
pop
adc
jnp
movsl
pop
adc
pop
adc
test
mov
dec
cltd
out
mov
jg
inc
bound
fwait
cli
xor
les
adc
mov
jnp
addr16
sbb
scas
int3
dec
das
mov
or
js
aaa
das
push
add
cmpsb
int3
ds
mov
out
test
pop
adc
dec
idivl
lahf
pop
jmp
add
cmpsb
pop
cld
movsl
pop
adc
push
xor
shrl
jb
pop
adc
ficoms
or
add
add
call
xlat
jns
inc
cmp
jl
sub
insl
sbb
mov
jg
outsb
or
add
in
dec
sbb
in
xchg
imul
pusha
popa
cmc
and
pop
mov
and
test
mov
adc
lock
adc
lock
fistps
dec
xchg
cmp
jbe
repz
mov
das
popl
fs
aam
dec
push
ret
adc
adc
cld
movsl
pop
adc
pop
adc
mov
pop
adc
cmpsl
into
clc
movsl
pop
adc
scas
cmc
dec
ret
xchg
cmp
pop
push
sub
pop
adc
adc
push
jp
add
test
xchg
dec
push
ret
scas
movsl
fiaddl
adc
sub
les
adc
hlt
push
pop
adc
adc
jo
dec
sub
in
push
dec
xor
jae
mov
stc
cli
ja
out
mov
iret
mov
jmp
dec
pop
adc
mov
pop
mov
hlt
les
adc
repnz
cli
xchg
movsb
dec
pop
adc
inc
ret
int
dec
sub
in
in
les
adc
call
call
push
lock
push
cmpsb
scas
ficoml
push
les
adc
mov
xchg
test
lods
dec
pop
adc
ret
stc
lea
imul
subb
jbe
int3
pop
pop
insl
lock
icebp
push
jae
lret
add
dec
pop
adc
xor
mov
pop
adc
das
sbb
cmp
imul
adc
pop
insl
std
push
xor
dec
pop
adc
pusha
mov
pop
scas
imul
and
sbb
xchg
scas
cmp
pop
adc
cmp
inc
movsl
pop
adc
xor
movsl
pop
adc
adc
adc
test
outsb
add
add
cmpsl
inc
mov
mov
int3
filds
or
dec
and
cmpsl
insb
popa
push
dec
in
out
pop
insb
addr16
stos
cmpsb
mov
jg
pop
push
xchg
cmp
pop
adc
inc
or
fs
mov
bound
hlt
movsl
pop
adc
xor
add
rorb
mov
jo
mov
cld
add
sub
in
insb
movsl
pop
adc
xor
mov
jle
in
stos
mov
clc
cmpsb
std
icebp
jecxz
hlt
std
rcll
int3
and
repz
mov
popa
lds
inc
je
lock
xor
mov
xchg
mov
cmp
sub
inc
pop
cmpsl
cmpsl
add
xchg
nop
or
add
push
pusha
cwtl
xchg
aas
mov
das
cltd
out
inc
into
mov
fcomps
ficomps
daa
test
xor
add
lock
pusha
cwtl
lahf
aas
mov
das
cltd
out
and
mov
push
arpl
xchg
ret
cli
lods
imul
adc
push
push
wbinvd
adc
dec
loop
xchg
sub
pushf
jne
pop
mov
ret
cli
lods
hlt
out
adc
push
jno
or
rorb
popf
nop
sub
pushf
xchg
daa
pop
mov
pushl
in
xor
scas
xchg
test
xchg
sti
push
test
dec
nop
aad
hlt
mov
sahf
imull
adc
pop
imul
cmp
scas
xchg
lods
test
sti
push
movsb
das
dec
nop
pop
js
clc
and
cs
mov
shll
add
xor
add
sahf
push
add
movsb
shlb
loope
pop
jle
sub
push
out
jb
push
iret
ja
mov
pop
test
cmp
enter
lret
shrb
sbb
jg
or
mov
adc
mov
jmp
movsl
pop
adc
push
les
adc
jl
les
adc
repnz
mov
les
adc
mov
loope
loop
adc
les
adc
clc
movsl
pop
adc
test
and
cmp
sub
sub
mov
ds
je
clc
in
sbb
push
xor
dec
sti
xlat
and
adc
gs
push
clc
loopne
std
jle
mov
jnp
jg
jle
and
inc
jb
mov
andb
test
test
cmp
fsubrl
cmpsb
lea
mov
sub
adc
mov
int3
push
adc
adc
pop
adc
movsl
pop
adc
inc
ljmp
adc
out
mov
shr
stos
repnz
mov
in
cli
cmpsb
sub
cs
and
fwait
cld
mov
std
stc
mov
out
xchg
frstor
xor
in
divb
ret
int3
jp
push
stos
nop
movsl
pop
adc
test
pop
adc
cwtl
inc
out
dec
push
mov
fldt
inc
push
pop
mov
mov
cmc
mov
cmp
push
adc
mov
cmpsb
dec
jp
jl
fistpl
jnp
jae
stos
cmpsb
cmpsb
cwtl
out
lret
xor
jno
push
in
insl
adc
mov
push
adc
mov
loopne
mov
inc
jb
shlb
push
scas
push
ja
sbb
and
ds
adc
adc
shl
pop
out
enter
mov
ljmp
int
stos
xor
ret
lcall
arpl
push
adc
mov
lret
adc
push
adc
out
leave
and
lea
push
adc
and
adc
xchg
push
adc
cmp
js
enter
adc
leave
ds
adc
repz
add
push
adc
or
sbb
xor
jge
in
fisubrl
cmp
push
mov
and
pop
push
lods
jne
add
fcmovu
push
mov
push
jg
ljmp
push
sub
ljmp
je
lret
mov
xchg
mov
adc
lods
jno
imul
pop
pop
dec
xchg
imul
stos
fistps
aas
notl
and
stos
sub
mov
hlt
jb
dec
jo
pop
adc
daa
jns
sbb
call
fiadds
ljmp
sbb
adcb
jp
and
mov
test
pop
adc
mov
cmp
mov
insl
insl
pop
mov
pop
mov
cmpsb
push
inc
or
test
bound
test
movsl
pop
adc
movsl
pop
adc
mov
jmp
ja
jge
cld
mov
iret
add
aaa
aas
push
mov
rcr
dec
pop
adc
ret
fdivrs
pop
add
call
mov
and
sbb
add
pop
repnz
mov
and
jl
icebp
sti
or
dec
pop
movsb
movsl
pop
adc
subb
movsl
pop
adc
fs
push
mov
add
les
mov
pop
insb
in
jl
js
xor
inc
push
sub
enter
xor
fidivs
pop
adc
repz
dec
inc
xchg
testl
cwtl
movsl
pop
adc
addr16
sgdtl
hlt
std
test
pop
adc
dec
mov
mov
test
and
pushf
movsl
pop
adc
repz
cmp
sub
mov
pusha
mov
jp
std
sti
testb
fcoms
repnz
and
jp
bnd
in
or
movsb
movsl
pop
adc
sbb
mov
xchg
outsb
cltd
jle
mov
push
orl
cltd
mov
negb
sti
mov
movsb
adc
movsb
movsl
pop
adc
mov
cmp
pop
adc
mov
fcoml
dec
ret
mov
adc
in
push
cli
fimuls
add
mov
jg
pop
incb
adc
adc
and
mov
inc
nop
movsl
pop
adc
mov
int
imul
loopne
ret
mov
out
ljmp
pop
adc
add
xchg
mov
movsl
pop
adc
or
movsl
pop
adc
and
push
cmpsb
shrl
arpl
test
aad
pop
mov
xor
inc
inc
xchg
movsl
pop
adc
movsl
pop
adc
mov
pop
adc
push
mov
test
mov
xor
inc
xchg
movsl
pop
adc
dec
mov
mov
loope
cmc
mov
movsb
movsl
pop
adc
adc
dec
cmc
cmp
inc
push
inc
pop
mov
inc
in
outsl
lret
xchg
jmp
in
mov
xchg
mov
pop
mov
movsl
pop
adc
mov
mov
ret
pushf
fwait
dec
xchg
bound
jle
pop
sbb
mov
jbe
add
pop
adc
pop
lret
sarl
jno
pop
inc
in
mov
inc
xchg
movsl
pop
adc
in
std
subb
push
cmp
addl
movsl
pop
adc
dec
jo
sbb
movsl
pop
adc
push
sbb
les
movsl
pop
adc
out
add
add
cwtl
daa
sete
and
xchg
movsl
pop
adc
test
adc
insb
mov
movsl
pop
adc
push
lret
test
sbb
cmpsl
lahf
movsl
nop
cld
pop
stos
push
xchg
xor
and
movsl
pop
adc
jae
nop
movsl
pop
adc
adc
mov
add
mov
in
loop
or
and
sbb
ret
mov
divl
int3
xchg
mov
movsl
pop
adc
adc
adc
mov
movsl
pop
adc
movsl
pop
adc
dec
dec
loopne
mov
adc
pop
scas
insb
das
xor
mov
adc
lea
aas
mov
adc
cmc
push
xchg
movsl
pop
adc
sub
cwtl
movsl
pop
adc
movsl
pop
adc
jg
outsl
je
movsb
movsl
pop
adc
ficoms
pop
adc
adcl
adc
movsl
pop
adc
aas
negl
enter
mov
movsl
pop
adc
movsl
pop
adc
or
add
out
sub
je
cld
and
movsl
pop
adc
in
mov
in
fistpll
ljmp
dec
nop
and
mov
cmp
movsl
add
adc
adc
adc
mov
outsb
decb
xor
movsl
pop
adc
dec
push
pop
adc
mov
pop
push
test
pop
adc
in
or
pop
mov
sti
mov
or
jnp
std
sti
jnp
fwait
mov
movsl
pop
adc
pushf
movsl
pop
adc
sbb
stos
mov
adc
adc
insb
ret
movsb
movsl
pop
adc
movsl
pop
adc
sub
test
adc
and
jg
clc
jmp
pop
mov
ds
hlt
and
loop
movsl
pop
adc
pop
adc
cmp
pushf
icebp
sub
push
jnp
pop
lret
push
pop
pushf
movsl
pop
adc
cmp
fcoms
or
xor
popf
or
mov
cs
sub
mov
adc
add
pop
das
and
test
clc
mov
xchg
mov
jne
fucomp
lock
std
sti
cli
adc
xchg
loope
jb
dec
lret
jg
adc
mov
test
push
adc
mov
div
cltd
lcall
out
movsl
pop
adc
adc
and
sub
xchg
xor
xchg
xchg
arpl
xor
loop
movsl
pop
adc
nop
movsl
pop
adc
xchg
mov
add
arpl
ja
sbb
mov
mov
adc
ss
fiadds
xchg
sahf
dec
mov
test
pop
adc
ss
lods
xchg
js
loopne
mov
aaa
mov
nop
movsl
pop
adc
sub
mov
mov
fnstsw
cli
jo
sbb
adcb
scas
cmpsl
or
mov
mov
iret
mov
xor
adc
add
adcb
mov
sub
mov
js
fdivs
mov
out
xchg
adc
sbb
repnz
jo
cld
jae
loopne
inc
loope
xorb
aas
and
jb
sub
arpl
sbb
hlt
in
push
adc
mov
and
xchg
push
lods
inc
mov
and
push
adc
lock
cmovb
subb
adc
adc
js
xchg
xor
and
in
pop
mov
pop
adc
push
inc
or
scas
int
inc
in
or
pop
test
and
repz
mov
aad
shr
or
adc
stc
cmp
popa
iret
jno
jb
cmp
sub
xlat
inc
mov
insb
inc
xchg
test
test
and
dec
int3
mov
movsl
or
inc
push
icebp
insb
xchg
cmpl
and
cmovo
mov
fidivs
cmp
scas
jnp
jle
or
clc
fs
pop
adc
scas
out
pop
and
mov
push
adc
lock
mov
jnp
jbe
clc
dec
or
sub
insb
sahf
sahf
xor
sbb
je
xchg
push
push
pop
add
mov
adc
fcoml
leave
cli
xor
sbb
or
fistl
inc
cmpsl
aas
mov
adc
dec
mov
pop
adc
pop
adc
leave
mov
pop
adc
orl
pop
adc
inc
mov
fldl
aaa
mov
imul
mov
adc
cmp
je
int
adc
push
lods
movsl
pop
adc
inc
lods
movsl
pop
adc
xor
mov
xor
lahf
jl
lock
sti
imul
loopne
sbb
jp
xchg
scas
lds
aaa
roll
shll
xchg
and
int3
ss
add
outsb
and
clc
xchg
lret
push
ret
enter
mov
cmp
daa
jl
testl
popf
loopne
repz
push
ret
hlt
push
pop
push
pop
adc
addr16
ljmp
pop
push
pop
adc
mov
jp
lcall
add
ss
mov
add
in
imul
pop
lret
leave
data16
xchg
divl
mov
mov
inc
xchg
andb
mov
mov
stos
push
adc
xchg
ljmp
jge
daa
mov
cli
jl
sti
mov
jo
cmp
aaa
pop
inc
jno
loope
fsubr
std
stos
xchg
mov
push
adc
jl
je
jl
out
scas
enter
shlb
mov
adc
clc
adc
adc
add
jnp
cld
cli
jl
hlt
adc
adc
jl
push
adc
les
movsl
pop
adc
push
adc
mov
les
mov
adc
adc
jecxz
cmp
push
adc
enter
adc
push
adc
mov
pushf
int3
movsl
pop
adc
int3
movsl
pop
adc
xchg
sbb
cmp
adc
sub
sub
arpl
adc
fwait
call
mov
mov
and
mov
xchg
mov
sbb
std
jmp
sarb
pop
adc
cmp
arpl
outsb
pop
push
sahf
xchg
mov
push
pop
inc
lret
ret
andl
add
and
repz
and
xchg
fwait
add
dec
mov
aam
pushf
sti
push
adc
and
pop
mov
jae
jno
std
mov
into
jp
and
mov
out
rcrb
sub
push
lds
clc
xchg
jp
lret
push
push
pop
out
scas
mov
xchg
sar
sub
out
xor
hlt
js
push
adc
add
je
xlat
imul
or
mov
jb
pop
aas
mov
aas
cmp
xorb
scas
testb
sub
gs
test
mov
mov
sub
inc
adcl
adc
mov
aad
push
push
and
push
shl
lahf
xor
pop
adc
pop
popl
or
fsubl
insl
pop
ret
sbb
mov
movsl
jge
fisubrl
jae
jnp
sti
shll
mov
scas
sub
sub
jno
dec
adc
scas
lods
std
pusha
dec
arpl
cmpb
xchg
js
lds
jnp
scas
dec
or
mov
or
fidivs
inc
cmp
stos
inc
cmp
mov
inc
adc
pop
les
push
mov
in
cmp
repz
rol
emms
mov
fbstp
pushf
and
orb
std
adc
inc
dec
insl
lock
inc
lock
pop
fstpl
lcall
cmp
sub
iret
cli
cmp
push
pop
mov
fimull
pop
in
outsb
into
jl
iret
jg
dec
cmpsl
fisttpll
test
std
divb
enterw
and
dec
movsb
das
sar
cmp
mov
clc
and
scas
insb
sbb
ljmp
cli
mov
mov
mov
xchg
xchg
adc
mov
scas
int
cld
and
jmp
mov
cmp
xchg
mov
daa
cmp
mov
adc
sti
mov
mov
sti
xchg
std
cmpsl
sarb
mov
mov
call
addr16
jae
jecxz
jg
cmc
mov
push
ficomps
imull
and
js
xchg
stos
sbb
andl
je
cmc
js
adc
arpl
stos
adc
mov
mov
xchg
adc
je
fdivl
ja
daa
or
xchg
mov
xchg
inc
test
je
fnstsw
addl
xor
mov
xchg
fwait
leave
push
sub
std
push
dec
dec
push
pop
hlt
out
xchg
cmp
sti
jp
adcb
movsl
lods
and
loop
xor
xchg
jmp
mov
hlt
sbb
dec
addr16
jg
je
xchg
mov
xchg
dec
repnz
mov
ret
es
pop
push
add
jle
cld
cmp
adc
xchg
push
stc
lea
ss
push
or
les
jp
pushl
add
sbb
inc
out
pushf
mov
add
mov
test
repz
add
or
call
outsb
mov
lods
ja
inc
jg
sbb
push
push
adc
les
xchg
jecxz
lods
push
inc
lock
lcall
mov
sar
das
in
sub
xor
imulb
dec
aaa
lods
popl
dec
sarl
cmp
push
ljmp
dec
hlt
xor
les
mov
test
or
add
scas
daa
and
lret
cmp
unpckhps
fsubr
sub
ds
pusha
mov
aad
jecxz
loop
jge
fstpt
jmp
sub
paddusb
movsl
inc
cmc
arpl
inc
cmp
jae
cmp
popa
adc
data16
stc
jne
adc
or
and
mov
jne
bound
push
pop
adc
sahf
clc
mov
sbb
aaa
gs
fsubs
xor
adc
int3
pop
hlt
pop
mov
std
sbb
sub
movsb
fnsave
ja
inc
jle
fidivl
pop
adc
jno
rcll
loopne
mov
outsb
mov
adcl
jp
dec
add
xchg
push
sub
call
dec
pop
push
push
jo
pop
adc
xchg
sbb
into
dec
shrl
enter
mov
movl
add
ret
lret
xchg
pop
inc
shlb
lods
adc
add
sbb
lcall
xchg
push
dec
dec
adc
setg
add
inc
push
sub
add
xchg
sub
inc
int
lcall
cli
ljmp
xchg
push
xor
inc
es
add
lods
jle
pop
lret
add
and
xchg
xchg
testl
nop
ds
popf
add
enter
sbb
cltd
mov
add
addb
mov
mov
jecxz
jg
xchg
mov
scas
cs
imul
and
cmp
or
sbb
sbb
pop
pop
mov
repnz
jle
clc
pusha
pushf
push
out
jb
jb
mov
ffreep
daa
sbb
cmp
out
push
idivb
adc
lret
das
sahf
jne
dec
sub
sbb
and
in
add
adc
aaa
jle
mov
mov
xor
dec
inc
lock
jb
arpl
les
test
cmp
into
mov
add
cli
sub
jg
scas
push
in
mov
cmp
inc
aad
sub
mov
insb
xor
adc
pop
mov
mov
cmp
mov
mov
mov
mov
ret
fsubr
daa
test
aad
jl
repz
or
ror
ss
push
sub
xchg
or
ss
inc
mov
jnp
add
cmp
ds
or
inc
rol
imull
mov
pop
lahf
addb
mov
push
jns
dec
nop
xchg
xor
or
ret
mov
pop
ja
or
mov
jle
repnz
cmpsl
sbb
aas
mov
adc
sbb
ljmp
lock
lods
jge
gs
fidivrs
cmp
cmpsl
dec
popf
cmp
into
pop
inc
jg
decl
in
mov
xchg
sarl
push
dec
dec
nop
cmp
fistps
mov
div
in
fidivl
repz
imul
mov
cli
cmp
mov
cmp
mov
mov
sbb
notl
or
sbb
in
pop
ja
or
mov
jg
xlat
sbb
mov
xlat
mov
sahf
mov
push
shlb
mov
decb
cmc
out
fld
jnp
jo
cli
fiadds
ljmp
je
js
aad
jge
clc
lock
stc
jns
pop
push
imul
jge
out
dec
pusha
jo,pt
xlat
dec
xchg
stc
cwtl
jmp
sti
sti
repz
scas
addr16
ja
jo
xchg
test
sbb
mov
sub
das
jl
jecxz
cmp
scas
pop
mov
jb
fwait
jo
mov
cmp
data16
fs
lret
xlat
sti
and
xor
mov
cmp
inc
inc
or
in
dec
fmull
xlat
push
sti
inc
aaa
jmp
arpl
pop
mov
xchg
push
mov
loop
add
mov
xchg
push
mov
dec
mov
add
aam
push
adc
fnstenv
mov
sub
add
adc
adc
test
mov
xchg
inc
subl
mov
sti
in
pop
and
out
jg
movq
mov
cmp
pusha
xchg
and
cwtl
mov
in
push
pop
push
add
jl
andl
or
push
push
sbb
and
bound
fmull
or
add
fdivp
aam
sbb
push
mov
leave
mov
or
xor
mov
xchg
xchg
imul
std
std
nop
out
pop
lock
push
pop
icebp
test
je
xchg
loopne
lahf
insb
jmp
sbb
cltd
sub
call
mov
call
add
mul
add
adc
popf
pop
loopne
pcmpgtd
jb
inc
add
push
sti
rcll
cwtl
jg
std
int
xchg
sbb
adc
enter
xchg
cld
push
int3
lret
stos
bound
mov
mov
jae
mov
mov
cmpl
in
ljmp
lret
dec
dec
shrb
sub
mov
sbbb
loopne
pop
adc
sbb
cli
sub
jne
call
idivl
loope
sbb
or
movsb
cmp
mov
pop
sub
iret
movq
sbb
xchg
outsb
push
dec
test
mov
jae
mov
neg
adc
mov
mov
jae
fs
add
xchg
ret
test
out
addb
mov
jno
xor
xlat
cli
cli
adc
push
daa
into
jns,pt
outsl
pop
aas
incl
inc
cld
sti
notb
jp
xlat
fmull
jmp
cmpsl
dec
jmp
mov
mov
in
xor
test
dec
jge
out
jbe
std
mov
dec
jb
cmp
push
ret
decb
xchg
xchg
into
mov
je
cmp
add
fistps
push
xchg
cmp
outsl
xor
iret
popf
cmp
mov
pop
test
out
fistpll
mov
cmp
cli
ja
jne
lock
fistl
add
mulb
fistpll
mov
cwtl
fbstp
es
lahf
xor
sbb
ja
fbstp
mov
jl
imul
or
ss
icebp
mov
sub
push
jne
adc
js
out
call
sbb
outsl
push
jg
sub
into
popf
mov
loope
cmpsl
sbb
subl
mov
mov
test
out
stos
inc
xchg
mov
fcoms
push
adc
insl
test
push
adc
scas
mov
adc
adc
adcb
adc
jne
adc
out
push
jl
cld
mov
jp
adc
jnp
loop
rol
jge
test
pop
lds
jne
aas
add
and
clc
adc
inc
stos
clc
cld
scas
cs
adc
fbstp
add
jno
cld
in
stos
lahf
out
sbb
push
add
xchg
leave
mov
xlat
pusha
sub
clc
aas
idivl
or
nop
cli
push
inc
lahf
dec
mov
inc
xchg
xor
das
cmp
or
and
arpl
cmp
in
pusha
scas
loopne
dec
scas
pop
inc
imul
lods
pop
dec
inc
gs
dec
push
and
iret
inc
es
adc
pop
sbb
pop
push
mov
xchg
cmp
std
xchg
jecxz
xchg
cmpsb
jmp
mov
mov
call
gs
xchg
jle
dec
shrl
mov
push
xor
xchg
sub
test
push
adc
mov
mov
dec
loope
jecxz
and
jns
mov
sub
mov
adc
push
and
sbb
dec
xlat
rorl
xor
pop
pop
cmp
push
hlt
jmp
int
cmp
add
cwtl
push
pop
pop
mov
lock
das
dec
inc
push
ret
aam
pop
adc
inc
dec
out
mov
push
adc
push
adc
jmp
pop
adc
lds
lahf
adcb
adc
mov
or
pop
adc
shl
and
movsl
pop
adc
jecxz
xor
cmp
arpl
out
mov
adc
icebp
or
xchg
xorb
jle
mov
enter
cli
sbb
cmp
ja
hlt
add
dec
movsl
pop
adc
sub
inc
xor
mov
xlat
jae
fistps
fs
inc
in
addr16
enter
adc
push
adc
xor
fmull
movsl
and
mov
sbbb
daa
sbbb
mov
dec
cltd
out
push
es
xchg
mov
adc
enter
fsubrs
outsb
scas
in
notb
lcall
jle
stos
cli
cmc
rclb
dec
in
rcrb
negl
jle
in
pop
test
out
loope
mov
jl
dec
pop
cmp
fistpll
stc
jl
pop
andl
inc
xor
add
inc
js
push
adc
jl
sub
fwait
xlat
movb
push
sbb
jle
cmp
jae
aaa
popa
add
repz
adc
pushf
pop
mov
xchg
inc
imul
jno
mov
xor
push
jnp
jge
xchg
imul
add
fs
push
push
sbb
push
jp
sbb
cmp
mov
add
sbb
out
rolb
xchg
data16
mov
les
out
lret
ljmp
and
xchg
mov
cmpsb
mov
bound
adc
add
jge
negl
fidivrs
add
out
xchg
lds
or
mov
les
fsubrl
xchg
das
mov
add
and
ss
stc
mov
orb
xchg
bound
sub
and
push
shlb
jmp
enter
mov
movsl
pop
adc
and
mov
push
adc
das
stos
mov
loop
movsl
pop
adc
out
or
adcb
adc
orl
dec
popf
cmp
fsubs
mov
add
nop
stos
mov
xchg
xor
dec
lea
mov
mov
je
adc
push
mov
dec
movsl
pop
adc
mov
jecxz
lret
ljmp
or
mov
cmp
xchg
das
and
sahf
mov
push
pop
ja
jle
add
in
paddusb
decb
lds
jge
add
iret
and
iret
sbb
insb
icebp
xor
std
sbb
push
cmp
sub
and
popf
stos
add
or
adc
in
add
lahf
rolb
and
imul
jmp
lock
push
adc
dec
inc
jnp
xor
push
es
xchg
push
cli
xchg
cmp
xchg
sti
adc
mov
lret
jb
push
psubd
mov
stc
cmp
adc
mov
push
adc
ds
movsl
pop
adc
out
jnp
adc
adc
stos
aad
mov
scas
lcall
adc
jns
sub
out
faddl
mov
mov
push
cld
sbb
push
movsl
pop
adc
xchg
sub
add
je
in
mov
push
adc
cmp
out
pop
aam
out
aam
shr
std
in
ret
cmp
sbb
loope
sbb
dec
incl
test
div
test
pop
out
jecxz
psrld
rcrb
imul
pop
adc
and
xor
lcall
rol
shlb
mov
mov
push
adc
mov
daa
sbb
fcomi
push
mov
xchg
shrb
jg
sbbb
iret
cmp
arpl
mov
adc
call
adc
mov
nop
push
cli
adc
dec
jnp
notl
fisubl
xchg
fsubrs
push
adc
vmovapd
out
jmp
shll
xchg
cmc
fdivr
std
aas
and
pop
adc
add
in
cltd
std
cmpsl
pop
xor
rorb
and
sbb
pop
push
push
xchg
mov
push
out
fsubrs
sub
xor
cld
push
das
hlt
ret
sub
sub
dec
in
add
mov
into
push
loop
test
icebp
subb
dec
push
dec
repz
lahf
insl
out
jo
pop
adc
loope
push
imul
dec
fucomi
lret
in
xchg
lock
stc
jmp
cmp
fildl
sub
cmpsb
push
sbb
rclb
mov
push
ja
popa
sbb
dec
out
les
out
xchg
push
mov
imul
cmpsb
push
lret
push
push
daa
test
xor
mov
jp
lea
jb
add
xorl
inc
xchg
jns
js
ja
aaa
out
fs
push
pop
adc
sahf
insb
mov
clc
rcrl
mov
mov
jne
fdivrs
rep
mov
shlb
sub
call
mov
aaa
xor
dec
or
lods
outsl
fisttpl
rorb
test
push
pop
adc
sub
fcoms
popf
jecxz
mov
xor
xchg
inc
cmpb
lock
cli
imul
pop
dec
sub
rcll
jne
shll
mov
xor
scas
fidivrs
dec
std
sti
mov
fistpll
xor
adc
test
aad
mov
in
hlt
push
pop
adc
jp
add
adc
pop
sarl
sbb
out
scas
cli
xor
fstpl
cld
xor
mov
jl
xor
repnz
pop
push
dec
jnp
mov
mov
shrl
shrl
movsb
mov
pop
adc
mov
adc
int
repz
lcall
adc
push
test
pop
inc
dec
xchg
and
lret
bound
outsl
xor
mul
mov
in
loop
je
ss
or
dec
pop
arpl
xor
pop
gs
mov
incl
lock
add
xchg
and
fsts
cmpsl
scas
outsb
mov
pop
jle
icebp
jp
std
cld
call
insl
fdivrl
add
andl
sub
jp
pop
mov
cmp
aam
insl
jno
imul
xor
jo,pt
aas
mov
jmp
shll
arpl
div
xor
addr16
inc
outsb
add
sbb
ja
lcall
leave
xor
nop
push
out
mov
mov
fimuls
repnz
sti
cmp
subb
adc
adc
adc
int3
adcl
mov
xchg
fwait
lods
incb
mov
clc
inc
and
shll
ret
adc
push
push
cmc
inc
cmp
cld
jp
mov
xchg
icebp
xor
and
adc
stc
loope
lock
sahf
imul
repz
mov
or
movsl
gs
mov
adc
lea
mov
repz
stc
loop
dec
mov
mov
and
xcrypt-ecb
cmpsl
or
mov
scas
mov
push
and
push
hlt
add
adc
adc
cmp
xor
sub
je
nop
cs
sbbb
xlat
and
xor
push
xchg
fists
mov
subb
ret
or
popa
pop
mov
fdivs
inc
nop
jo
das
ret
enter
mov
xchg
or
cmp
xor
sub
xchg
cmp
nop
push
iret
test
jg
andl
imulb
out
arpl
push
mov
mov
xorb
movsb
sub
rcll
stc
cmp
sub
add
inc
adc
pop
scas
xor
std
cmpsl
xchg
es
and
icebp
dec
inc
pop
outsl
xor
pop
enter
mov
and
shlb
or
shrl
xchg
sti
call
pop
or
adc
mov
add
adc
mov
add
adc
rolb
pop
roll
adc
add
movsl
mov
xor
imul
adc
add
or
sub
sub
jle
js
fstpl
dec
mov
inc
mov
ja
push
xchg
aas
cmp
mov
into
xchg
movsb
enter
jp
cltd
adc
out
jg
add
dec
mov
cmp
add
mov
add
sbb
js
push
adc
insb
and
insl
mov
jns
mov
adc
mov
xchg
or
mov
inc
mov
aas
mov
jae
pop
mov
fidivrs
sub
das
roll
dec
mov
out
mov
mov
jle
repnz
mov
push
cmpsb
pop
cmpsb
mov
adc
adc
jmp
push
mov
shlb
push
dec
jo
sbb
aaa
mov
cmp
jbe
shl
mov
cli
lods
das
or
xor
pop
int
aaa
repnz
stos
test
mov
add
push
pop
and
nop
pop
js
jbe
mov
pop
loope
int
add
and
add
divl
scas
mov
cwtl
mov
mov
sahf
bound
push
jecxz
leave
les
mov
stc
lods
jge
push
jns
sub
repnz
pcmpeqb
jno
lret
xlat
xor
ds
xor
xchg
mov
xor
ds
mov
insl
and
lea
push
ds
divl
movsb
fidivrs
and
les
lahf
mov
testb
sub
adc
pop
jo
pop
adc
repnz
inc
fidivl
fcmovbe
cmp
je
pushl
testl
outsl
cmp
aad
mov
fwait
mov
test
or
sbb
popl
popf
cmp
mov
mov
pop
xlat
xor
jp
pop
mov
xor
cld
or
sarb
dec
lock
adc
inc
aam
movsb
jmp
fwait
xor
sub
sti
sbb
aas
je
pop
aas
gs
xchg
scas
pop
or
jg
in
push
int
xor
lea
and
mov
sub
inc
insb
sbb
pop
aas
ficoml
ds
int
or
mov
push
in
push
adc
pop
repnz
xlat
jnp
out
mov
dec
pop
adc
push
push
cmc
js
xor
call
mov
cmp
call
jge
cmpsl
aaa
mov
xor
pop
notb
stc
mov
xlat
fnsave
mov
sub
xor
out
push
aas
xchg
insb
sbb
andl
mov
push
test
lock
push
jbe
jb
in
xchg
xchg
jl
cmc
dec
shl
in
adc
mov
or
cmpsb
movb
lcall
sub
out
or
rol
insb
add
push
adc
dec
imul
dec
popl
call
and
mov
xor
jl
nop
insl
push
sbb
xor
mov
daa
and
inc
adc
mov
xor
lahf
adcl
dec
and
mov
cmpsl
jns
stos
push
pop
push
cmc
dec
jle
lods
add
dec
in
push
dec
dec
sub
cmp
add
leave
and
xchg
xchg
and
int3
adc
mov
cmp
push
xchg
push
shll
pusha
xchg
mov
jnp
fildll
mov
dec
out
lcall
rcll
xchg
adc
and
push
fadd
xor
scas
subl
jae
pop
mov
jne
dec
mov
leave
dec
ja
movsb
push
cmp
xlat
outsb
das
inc
inc
ror
xchg
jle
in
mov
out
cmp
sbb
dec
add
lret
inc
cmp
movsb
imull
clc
jg
dec
cmpsl
dec
cwtl
push
test
mov
mov
repnz
daa
or
sbb
dec
sbb
xlat
sahf
cmc
mov
nop
mov
repnz
js
jnp
fistpll
sub
ret
stos
ficoms
dec
test
jmp
mov
pop
sbb
jae
or
and
cmp
mov
fmul
and
mov
xor
push
rolb
add
push
jo
cmp
test
mov
xor
sub
call
dec
shll
jne
mov
pop
enter
cmpsl
mov
pop
cmp
cmp
mov
sbb
cld
add
aam
xlat
cmc
gs
mov
pusha
jl
mov
lret
xor
gs
out
mov
add
cmp
int
rep
loopne
sbb
xchg
or
push
cmpsl
jge
std
xor
jns
cld
cmp
mov
data16
repz
adc
mov
jb
dec
pop
adc
mov
dec
or
mov
nop
and
mov
or
pop
mov
and
jg
xchg
std
test
dec
push
nop
pop
js
enter
fbstp
lock
pop
pop
pop
inc
add
test
push
ljmp
sbb
push
cmpsl
dec
bound
pop
jnp
jg
jl
ljmp
lea
insl
or
mov
adc
pop
mov
lds
out
test
add
jge
lock
or
inc
add
push
aam
popa
dec
adc
es
dec
jle
fwait
test
cli
stc
pushl
and
push
orb
mov
xlat
mov
xchg
popf
sarl
mov
or
sub
cwtl
mov
cmp
mov
nop
adc
adc
sub
add
xor
dec
xchg
push
xchg
and
rorl
mov
fiaddl
fdivs
push
cmp
inc
in
or
lock
inc
cmp
adc
addl
jae
aam
pop
jo
pop
adc
sbb
popf
pop
int
fdivs
or
gs
jae
nop
les
xchg
loope
cs
cld
pop
mov
add
cmp
ljmp
mov
fwait
mov
out
and
fwait
cmp
mov
xchg
repnz
lahf
arpl
inc
xor
std
call
pop
jecxz
inc
mov
xor
push
lahf
xchg
std
pop
mov
lcall
jmp
hlt
mov
lock
mov
cmp
xchg
xchg
jge
fiadds
jecxz
xor
imul
ret
push
push
dec
add
cltd
mov
inc
test
inc
fcomip
gs
pop
inc
or
add
enter
lcall
out
fs
push
xchg
shr
inc
inc
in
fisubrs
jnp
scas
pop
fiaddl
cmpsb
mov
lahf
jnp
lds
push
adc
adc
imul
xorl
mov
add
scas
cmc
add
sub
pop
mov
dec
cmp
jno
fsubl
sbb
call
xor
lock
out
xchg
test
out
repz
fs
cmpsb
xchg
shll
mov
pop
jo
fsubs
fsubrs
daa
dec
or
shll
xlat
adc
dec
cs
push
stos
scas
fistps
fsubl
cmpsb
dec
sti
pusha
shl
sub
xchg
cmp
jmp
dec
scas
push
xor
cmp
movb
ljmp
repz
test
fcompl
lock
cmpb
nop
jle
push
roll
adc
push
aad
xor
hlt
xor
mov
aad
pop
jp
les
adc
or
mov
pop
jae
pop
pop
jg
jg
cmp
jnp
xchg
pop
xchg
outsl
push
ret
stos
xor
fs
add
push
cld
adc
pop
jo
pop
adc
adc
movsb
ja
pusha
xchg
pop
cmp
inc
jl
xorb
jge
fwait
iret
mov
stc
jno
outsb
movsb
ja
popf
xchg
icebp
sbb
jle
mov
clc
jl
test
cmp
xor
orl
sub
insl
sahf
rorb
repnz
pop
add
dec
nop
xchg
dec
cmp
adcl
add
lahf
xlat
inc
xorb
je
jle
cltd
sar
out
out
or
dec
andl
aad
xchg
adc
lock
jo
pop
adc
sub
sahf
jae
movsl
pop
adc
addb
lods
lods
cmpsb
mov
adc
adc
jmp
movsl
pop
adc
bound
lret
push
adc
mov
xor
in
pop
adc
loopne
or
sub
pop
push
jle
pop
pop
inc
addb
jbe
jmp
mov
arpl
mov
pop
jecxz
pop
aaa
in
pop
adc
movsl
lds
repz
imul
repz
movsb
idivb
xchg
sub
je
cmp
sti
dec
movsl
pop
adc
mov
add
in
fs
sbb
jae
fildl
jl
sbb
cld
in
test
out
lods
inc
push
int
in
in
mov
mov
cmpsl
adc
adc
adc
addr16
lea
pop
test
leave
jne
jbe
lea
and
cmp
or
test
adc
xlat
fs
pop
mov
mov
or
cmpsl
pop
stos
cmp
xchg
mov
add
jecxz,pt
out
xor
sar
push
lods
sahf
mov
mov
pop
ja
pop
mov
dec
insb
aas
push
cmpl
inc
imull
mov
cld
cmpsb
mov
into
outsb
sahf
jmp
sti
je
push
adc
inc
daa
idivl
repnz
jo
sub
ljmp
outsb
fstl
neg
repz
cmc
mov
or
sub
dec
imul
push
das
add
testl
dec
repnz
daa
rcrb
push
psubq
mov
mov
sbb
and
sbb
pop
jl
adc
shl
or
push
xchg
xchg
jnp
xchg
jg
xchg
xor
cmp
je
push
adc
iret
popf
sub
xor
into
sti
icebp
cwtl
jnp
adc
ljmp
mov
adc
lcall
sbb
or
or
or
sahf
adc
cwtl
shlb
sbb
fdivr
mov
pop
ret
faddp
push
xlat
dec
mov
out
inc
leave
dec
aaa
cltd
and
int3
mov
adc
push
cmc
int
daa
mov
adc
mov
lods
dec
jno
push
jp
fcoms
pop
xchg
test
mov
je
push
adc
pop
icebp
cmpsb
mov
sub
sar
lods
imul
pop
xchg
ljmp
and
cmc
cwtl
out
adc
inc
pop
mov
push
mov
sub
iret
xchg
das
das
das
and
pop
outsb
cmp
xor
fcomps
movsl
pop
adc
jle
dec
hlt
adc
lods
pusha
add
dec
ss
cvtps2pd
scas
fstl
aaa
and
jmp
inc
lret
sub
movsb
mov
inc
mov
negb
add
mov
jmp
sbb
lods
xchg
pop
mov
out
fs
jg
push
leave
jo
btr
mov
sub
stos
pop
ss
add
or
inc
or
sbb
adc
adc
lret
repnz
add
add
mov
add
in
js
inc
clc
sahf
jmp
mov
ds
je
fsubl
cmp
es
mov
push
arpl
sti
add
push
mov
ret
jg
cltd
ret
xor
fidivl
jg
daa
mov
fsubl
daa
mov
cmp
clc
fsubl
es
int3
or
call
cmpb
jl
cli
mov
inc
cmp
mov
popf
insb
and
in
mov
mov
push
out
mov
mov
xchg
hlt
adc
mov
mov
int
sub
fwait
mov
jnp
cld
cmpsb
jp
mov
xlat
jmp
repnz
and
xor
stc
pop
loop
into
or
jp
sbb
in
lock
mov
cmp
arpl
dec
sub
out
mov
or
leave
fists
mov
ficomps
mov
mov
xlat
loopne
pop
adc
mov
push
push
mov
add
push
fsubl
push
movsb
fcoml
int3
in
pop
adc
cld
xor
js
mov
jl
push
sub
stos
sbb
and
jae
and
mov
pop
adc
jp
mov
pushl
xchg
mov
push
mov
in
pop
adc
xchg
adc
mov
cmpb
pop
adc
rcrl
shrl
icebp
fwait
popf
push
jmp
xor
aas
mov
pandn
pop
inc
out
cmp
aaa
mov
mov
pushl
lea
adc
std
out
lret
inc
inc
sub
aas
cli
dec
lahf
xor
sub
push
cltd
lds
mov
fsubl
incb
push
rcrl
jmp
or
adc
arpl
sbb
mov
jo
loope
fsubl
fmul
xor
mov
leave
insl
lret
mov
insl
lret
and
fstps
xchg
sbb
aas
sub
daa
das
add
mov
js
sub
xor
or
adc
adc
mov
mov
push
dec
mov
adc
mov
mov
insl
dec
js
imul
mov
arpl
xor
jp
and
sbb
dec
pushf
std
dec
sbb
sub
testl
or
push
mov
inc
and
or
mov
mov
test
xorb
cmpsl
mov
xchg
push
xor
fucomi
lgs
cmp
sahf
adcb
jns
xchg
outsb
add
daa
popa
sub
je
ds
jmp
and
xchg
dec
pusha
pop
jmp
mov
lret
sti
out
movsb
fs
mov
outsl
add
jmp
sub
cli
in
loop
mov
fldcw
cmp
or
mov
sbb
xchg
addb
lods
or
adc
cmp
xchg
jnp
les
imul
test
sbb
mov
cmp
and
or
es
movsb
or
adcl
push
shl
pop
and
xlat
sbb
mov
xchg
mov
pop
pop
pop
mov
push
dec
or
dec
push
aaa
clc
add
stos
ficoml
shlb
dec
mov
cmp
sub
test
xchg
and
and
inc
loope
adc
adc
jnp
xlat
pop
aas
push
cmp
cli
sbb
fdivrl
icebp
in
push
sub
lods
fldt
pop
shrl
lahf
jbe
xor
add
adc
test
lds
dec
lcall
les
mov
jo
dec
mov
fs
sub
dec
fdivrs
je
push
pop
inc
sbb
lock
pop
adc
mov
jnp
addr16
filds
js
dec
bound
push
cmpsb
outsl
mov
clc
adc
adc
jp
mov
push
adc
sub
sbb
sbb
add
pop
ljmp
xor
jp
mov
jae
inc
jg
xlat
cmp
shr
adc
into
cmc
inc
je
adc
jl
push
adc
push
or
stos
add
add
push
adc
and
rcl
imul
stos
cmp
push
adc
mov
jg
fistpll
call
ds
dec
lret
lock
adc
movsl
pop
adc
jg
movnti
icebp
lds
pushl
push
jl
loope
sub
stos
xchg
inc
mov
mov
aas
fwait
mov
rol
dec
mov
inc
inc
lcall
divb
jb
scas
std
xchg
stos
insl
das
or
adc
and
adc
adc
and
movsl
pop
adc
xor
dec
mov
fwait
cmpsb
pusha
or
xchg
ljmp
cmc
jo
rep
xchg
mov
sbb
jl
push
adc
inc
adc
shl
movsl
pop
adc
in
nop
das
push
mov
xchg
dec
enter
push
insb
sbb
push
mov
push
adc
adc
daa
sub
pop
imul
adc
enter
mov
fstpl
adc
adc
or
pushl
aas
adc
pop
scas
push
adc
jb
xchg
and
push
pop
clc
inc
dec
and
cmpsb
fldenv
shll
loop
and
mov
xor
jae
pop
dec
inc
adcl
test
or
inc
jp
rcl
xor
push
lods
sub
mov
push
adc
in
dec
orl
mov
dec
mov
ret
cltd
or
scas
push
adc
nopl
xor
adc
sub
adc
fs
popf
mov
push
pop
jo
push
adc
test
pop
ljmp
push
xchg
inc
scas
push
test
pop
mov
sbb
lods
in
lods
outsb
or
xor
das
adc
lods
scas
push
adc
sub
cmp
adc
arpl
jmp
sub
cwtl
arpl
sbb
pop
in
faddl
imulb
pop
mov
adc
std
cmc
repnz
test
pop
rolb
int3
rorb
cmp
push
adc
mov
in
in
fwait
pop
jmp
notl
repz
mov
adc
dec
mov
out
jb
in
in
dec
out
xorb
cli
cltd
sbb
mov
adc
cli
testl
int
hlt
mov
adc
mov
mov
adc
mov
mov
inc
pop
xchg
hlt
jae
mov
adc
pushaw
jp
xchg
negl
outsl
popa
jo
in
push
adc
rorl
lods
xchg
lret
sub
or
xchg
inc
icebp
loope
iret
fidivrs
mov
mov
adc
dec
lret
icebp
nop
and
fildll
mov
scas
movsb
mov
adc
pop
add
out
loopne
popa
sub
enter
mov
dec
inc
inc
ss
dec
jb
cmpsb
add
xchg
sbbb
adcl
rolb
mov
adc
lcall
inc
jns
shlb
xchg
mov
enter
jbe
cmp
sbb
and
mov
mov
imul
inc
xorb
imul
push
adc
pop
sbb
bound
push
cmpsb
push
cmpsb
or
inc
sbb
add
and
and
push
jnp
xor
ja
add
pushf
mov
adc
jae
daa
pop
dec
push
dec
nop
push
icebp
popf
sbb
cld
mov
adc
adc
xor
and
je
add
jbe
or
mov
inc
rcrl
roll
shrb
sahf
lds
push
jmp
add
xchg
fadds
shll
sub
push
adc
jne
add
je
push
adc
mov
mov
arpl
mov
mov
adc
ficompl
inc
adc
push
adc
pop
or
adc
lahf
pop
pop
js
arpl
popf
cmp
push
mov
jbe
insb
push
mov
add
adc
sub
je,pt
fs
sub
cmp
push
adc
mov
addl
imul
stos
adc
bound
cmpsl
ror
mov
push
cli
jl
icebp
jnp
cli
imul
pop
rcrl
gs
nop
rcrb
sub
pop
ja
insl
pop
mov
aam
add
inc
cmp
sahf
and
mov
mov
call
adc
add
adc
or
or
loopne
xchg
outsb
xchg
xlat
push
mov
pop
aam
lcall
mov
or
sub
sub
pop
push
sahf
adc
push
adc
addr16
pop
test
push
adc
xor
mov
pop
xchg
sbb
xchg
pop
ret
sbbl
push
nop
push
and
push
adc
and
add
add
jne
mov
adc
xchg
fdivl
js
jge
test
and
and
fiadds
pop
mov
inc
pop
jo
lds
jb
add
ss
sahf
jge
dec
inc
xor
and
cld
jno
mov
fbstp
xor
aad
mov
adc
shrb
push
or
mov
mov
add
je
insb
push
cs
mov
adc
and
pushf
mov
inc
mov
dec
in
mov
add
push
cld
lea
jl
out
xor
push
jmp
ds
xor
aas
dec
inc
nop
sbb
or
sub
jae
ret
pop
outsl
add
js
add
call
jmp
int3
xchg
insb
push
and
push
and
imul
mov
jmp
mov
out
sub
cmp
inc
xchg
inc
int3
mov
div
addr16
loopne,pn
leave
add
sbb
mull
jno
mov
pop
icebp
ljmp
mov
pop
pop
test
mov
adc
pop
mov
insb
loopne
in
push
fcmovnu
test
mov
mov
mov
bound
lods
test
movsl
cmp
in
ja
cvtpi2ps
or
xor
jnp
imul
mov
push
clc
shr
pop
or
push
add
inc
or
push
shlb
inc
out
jl
enter
dec
inc
orb
jge
push
shlb
movsb
mov
repz
inc
mov
pop
add
out
out
pop
gs
repnz
and
inc
inc
cmp
mov
shlb
rcl
pop
jno
aaa
mov
xchg
and
jp
jbe
pop
inc
inc
xor
push
addb
test
das
add
lods
fdivrs
mov
aam
push
adc
ja
and
cli
xor
daa
pop
mov
imul
adc
je
movhps
add
in
pop
mov
bound
jbe
inc
pop
adc
pop
push
mov
or
inc
xchg
clc
mov
push
mov
mov
jecxz
in
add
jb
push
adc
xchg
adc
and
push
xor
sub
sub
cmpsl
fstpl
adc
pop
add
add
lret
popf
add
nop
and
flds
jns
test
arpl
cli
mov
add
jb
insl
adc
lea
push
adc
sbb
mov
cmpsb
dec
mov
rcrl
cmpsb
cmpsb
cmp
xor
pop
xchg
and
pop
sbb
das
pop
pop
clc
iret
mov
adc
add
cs
call
mov
fwait
pop
sub
add
leave
mov
inc
lods
mov
adc
adc
lahf
aaa
jl
nop/reserved
mov
mov
das
cmp
sti
push
std
add
jo
sbb
dec
test
sbb
lret
fisttps
inc
mov
cld
mov
add
scas
scas
push
adc
test
push
dec
pushf
cmp
jne
push
jl
inc
stc
hlt
out
xor
xor
inc
lock
jbe
rorl
mov
rolb
adc
adc
push
je
sbb
xor
orl
lds
adc
mov
cmp
fwait
sub
cld
mov
das
out
xchg
arpl
cmp
jp
pop
push
fsubr
adc
jo
out
xor
cmpsb
hlt
and
push
adc
inc
and
adc
adc
mov
dec
mov
arpl
mov
xchg
cmc
test
addl
sub
roll
xor
imul
clc
ret
xor
xor
aam
push
mov
mov
in
xor
inc
sbb
movsb
ret
mov
adc
stos
xor
push
add
pop
ss
jg
sub
pop
xor
es
pop
pop
test
sub
sbb
loope
pop
ds
jnp,pt
sbbb
mov
push
adc
fistpl
mov
adc
dec
in
sub
into
cmp
push
push
lcall
cwtl
xor
sbb
mov
clc
les
clc
mov
xor
push
adc
add
jnp
or
out
pop
cmp
test
jg
and
pop
sub
test
in
inc
sarl
adc
scas
xchg
jge
test
inc
xchg
xor
adc
in
in
out
incl
sti
int3
movsl
movsbl
push
cmc
lret
arpl
mov
adc
test
mov
fcomp
lds
xchg
dec
mov
pop
xlat
ret
out
enter
nopl
in
push
clc
fcmovnu
test
cs
mov
xchg
test
lods
test
addr16
movsb
pop
cmp
push
push
insl
popa
jp
adc
sub
mov
lods
mov
ds
sbb
push
adc
hlt
mov
xchg
fsubrl
enter
popf
mov
sub
inc
movb
enter
rclb
xchg
cwtl
movb
aam
cmp
jb
adc
push
adc
push
dec
push
and
push
adc
or
and
jns
jp
push
and
jecxz
inc
repnz
enter
push
mov
xchg
fisubrs
hlt
add
xchg
mov
enter
jbe
mov
dec
nop
aaa
adc
mov
sub
out
rol
bound
addb
push
imul
out
or
push
adc
mulb
enter
mov
mov
adc
test
xchg
pop
subb
adc
addr16
ficoml
add
or
push
adc
cmpsl
xchg
or
popf
outsl
nop
pop
mov
xchg
leave
push
adc
adc
add
lret
add
pop
xchg
and
lret
je
lahf
pop
sub
add
imul
push
add
mov
inc
xchg
cmpsb
lds
bound
xchg
aaa
adc
add
cmpsl
or
and
add
lret
popf
pop
cmp
bound
adc
add
cmpsl
movsb
cmp
lret
push
adc
daa
xchg
or
push
adc
movsl
arpl
cli
mov
add
inc
xchg
lret
push
adc
pop
xchg
and
xor
push
jb
rorl
push
adc
lret
push
adc
lcall
pop
xchg
bound
jle
or
adc
shl
mov
int3
push
adc
mov
sti
sahf
cmp
or
inc
ror
imulb
ret
ret
rorl
loop
stos
cmpsl
add
dec
pop
int3
push
adc
inc
ror
lahf
mov
pop
mov
or
adc
add
add
or
inc
sbb
add
lcall
insl
mov
inc
ret
enter
pop
push
sbb
sbb
outsl
sub
adcl
and
int3
push
adc
sbb
mov
jp
out
cltd
loop
add
int
adc
cmpsl
sub
sub
push
jbe
fbstp
add
push
and
int
add
int
adc
aaa
or
and
jmp
jl
push
adc
push
dec
push
and
int
adc
lret
dec
jno
ret
sbb
push
adc
mov
enter
into
push
adc
xchg
addb
pop
les
adc
cmp
sbb
add
dec
test
push
adc
adcb
fwait
cmp
cmp
rorb
iret
push
adc
rcrl
pop
sbb
adc
lea
adc
push
sbb
or
inc
nop
mov
rolb
adc
push
push
lahf
push
pop
jl
push
adc
sub
sbb
scas
xor
mov
lcall
mov
cmp
rolb
adc
add
push
insb
push
push
js
test
mov
loope
in
in
xor
xlat
aas
addr16
int3
inc
xchg
xor
inc
out
mov
push
adc
mov
test
out
jmp
jge
fadd
loope
fcompl
shr
aas
test
leave
lods
pop
lahf
push
in
fcmovu
into
scas
fmul
loopne
jo
pop
aam
dec
sbb
inc
fnstcw
sbb
lret
roll
adc
push
mov
sub
and
loope
mov
test
adc
cmp
mov
push
arpl
or
pmaxsw
out
fs
cmp
push
adc
fmuls
ficoms
jle
popa
aad
mov
xchg
inc
icebp
loope
sbb
loope
add
rorb
rcl
adc
call
adc
stos
sbb
fs
and
adc
dec
and
inc
jae
dec
sub
popa
mov
push
jp
clc
daa
test
dec
inc
inc
repnz
js
movsl
ret
je
mov
mov
inc
cltd
mov
test
jne
dec
add
and
inc
flds
jle
je
jae
sub
ret
add
sub
or
add
mov
and
hlt
aaa
adc
pop
ret
shlb
sahf
pop
sub
jb
dec
or
add
mov
push
or
or
daa
dec
iret
mov
pop
sub
imul
push
int3
mov
roll
add
cmp
push
adc
mov
mov
pop
ljmp
xor
arpl
loop
add
inc
or
push
adc
push
pop
rorl
data16
cli
mov
add
jb
add
aaa
and
mov
mov
pop
sub
and
addl
add
sbb
dec
nop
push
xor
sbb
xor
adc
ret
in
mov
ss
add
addb
or
loopne
and
hlt
xchg
xor
mov
mov
push
loop
add
roll
and
hlt
jle
xor
popf
dec
test
adc
xchg
mov
jo
sbb
fadds
jle
cmpsb
jbe
mov
lods
push
mov
mov
inc
xor
adcb
cli
add
add
xor
lds
arpl
lahf
mov
inc
xorl
adc
xchg
and
push
out
test
sbb
pop
call
push
and
lock
add
leave
or
xor
push
dec
iret
pop
mov
mov
jbe
add
or
test
stos
dec
mov
into
ret
insb
push
xlat
mov
rorb
jp
add
adc
xchg
clc
xor
inc
add
das
lahf
push
dec
cli
sahf
fs
add
add
and
mov
sub
add
cmp
adc
jecxz
das
mov
lret
mov
and
or
inc
inc
cmp
ds
mov
jo
testb
sbb
jl
enter
xor
mov
jge
dec
xor
mov
leave
out
inc
or
fldl
xchg
pop
movl
push
add
dec
shlb
jl
mov
push
mov
pusha
aam
push
adc
aad
or
je
fcoml
mov
mov
push
adc
pop
jns
or
mov
dec
test
push
adc
adc
stos
popl
jl,pn
test
adc
test
pop
ljmp
cmp
flds
adc
pop
mov
jecxz
outsl
cmp
sbb
push
adc
daa
cmp
or
push
jl
pop
xor
add
mov
faddl
adc
fiaddl
adc
in
cmc
repnz
test
pop
shlb
jo
inc
out
push
lock
sbb
divb
lcall
jle
jge
pop
aam
xlat
in
mov
and
push
adc
jne
fcmovnu
stos
insb
int3
fiadds
dec
sti
fimuls
dec
int
lock
lcall
or
or
ret
push
adc
dec
push
ja
lods
das
mov
sbb
inc
jp
rorb
mov
insb
clc
rcr
pop
or
push
cmp
jae
lods
xchg
lret
push
rep
push
adc
hlt
addl
in
fidivs
sbb
mov
mov
shlb
mov
add
aam
out
jmp
faddl
adc
mov
addr16
loopne
dec
or
push
adc
lret
pusha
add
lret
push
or
inc
xor
xlat
test
bswap
adc
mov
movsb
cwtl
mov
jl
xchg
lods
fdivrs
insb
or
andb
jae
das
pop
pop
xor
and
xor
pop
sub
ret
adc
mov
ss
add
jb
push
sub
add
jecxz
and
hlt
pop
xor
icebp
mov
mov
adc
push
add
jae
sub
adc
fdivrs
and
or
push
adc
inc
or
jg
adc
push
mov
mov
adc
fldl
adc
fnstcw
mov
cmpsl
or
adc
mov
add
fldl
adc
cmp
push
je
and
sub
ret
loope
mov
movsb
sub
add
dec
adc
mov
mov
leave
les
popf
outsl
mov
addr16
push
adc
cmp
or
lea
jle
out
lds
bound
sub
add
fiadds
adc
dec
cmp
data16
fiadds
adc
or
mov
pop
ljmp
xor
roll
add
pop
les
xlat
aaa
adc
or
popf
dec
sbbb
add
push
adc
sbb
add
filds
adc
push
xchg
and
hlt
sbbl
icebp
mov
filds
adc
cmc
pushf
add
jb
das
adc
push
int3
filds
adc
fisubrs
les
jo
mov
push
and
add
mov
push
adc
adc
xor
dec
loopne
adc
mov
gs
les
loopne
adc
dec
mov
lock
mov
outsl
nop
loopne
adc
jbe
dec
push
jecxz
or
cwtl
sub
icebp
mov
xor
lods
adc
loopne
adc
xor
pop
add
xchg
and
xchg
sbb
push
xor
fwait
push
inc
jbe
fs
xor
push
adc
and
out
sbb
imul
or
xor
nop
inc
nop
fidivl
pusha
mov
or
inc
dec
daa
pop
dec
shlb
mov
jnp
or
sbb
push
testl
jge
jmp
nop
cmpsl
mov
in
lret
push
pop
sti
loop
jns
mov
xchg
addb
adc
inc
fs
adc
inc
or
pop
xlat
lods
cltd
mov
inc
xchg
sub
movsb
mov
add
push
cwtl
loope
adc
into
dec
mov
cmp
jo
cmovs
loope
adc
repz
push
mov
filds
cmpb
mov
fistl
push
push
or
and
push
adc
pop
movsl
xor
adc
dec
xchg
pop
stc
lahf
pop
imul
push
imul
loop
adc
pop
mov
int
mov
sti
fldl
mov
repz
xlat
adc
loop
adc
les
in
mov
push
and
in
sahf
pop
repnz
movsb
jge
fdivl
fcompl
out
mov
lods
sub
rcl
mov
dec
jo
ljmp
lds
push
adc
les
mov
push
and
push
adc
mov
test
push
adc
movb
jg
ret
ds
rcrl
inc
gs
js
loope
inc
movsb
lods
loopne
cmp
ljmp
aam
jo
mov
jp
movsb
int3
cmc
cld
iret
hlt
in
adc
in
push
shlb
movsb
mov
sbb
push
adc
decb
aam
xchg
mov
out
inc
inc
add
adc
and
dec
sub
or
mov
in
adc
filds
xor
loop
test
mov
adc
das
adc
lods
lods
sub
dec
aas
mov
cld
loop,pt
dec
cmpsb
adc
and
aas
mov
les
pop
arpl
je
aas
mov
fs
dec
clc
xor
popf
cmp
push
jbe
outsb
push
adc
call
mov
sub
scas
or
mov
in
adc
pop
mov
insb
out
adc
ficomps
or
arpl
pop
xor
cmp
push
dec
je
daa
adc
xor
fists
leave
stos
or
arpl
adc
mov
sbb
test
arpl
iret
loopne
push
adc
sbb
add
add
xchg
iret
test
xchg
pop
sbbb
push
adc
push
repnz
push
fcoml
add
out
adc
add
push
dec
sahf
pop
adc
or
adc
bnd
adc
add
inc
xor
push
adc
add
jle
ljmp
add
inc
hlt
mov
push
dec
mov
add
mov
push
sarb
push
adc
inc
lds
mov
pop
push
mov
add
mov
out
adc
mov
pushf
aas
pop
cmp
in
and
cmpsb
cmp
dec
call
add
je
popl
call
test
pop
test
mov
and
cwtl
call
xor
pop
rcl
pushf
outsl
ss
addb
push
adc
std
sub
jmp
adc
ror
jmp
lods
adc
push
adc
adc
or
mov
sti
popl
mov
jns
and
xchg
sbb
jmp
cmp
xor
xor
inc
subb
adc
stc
mov
xor
push
aaa
mov
cmpsb
xor
cmpsb
xor
cmpsl
sub
arpl
in
sbb
inc
in
inc
jecxz
mov
inc
inc
add
push
adc
jecxz
dec
sub
or
adcb
shll
or
mov
push
adc
mov
adc
push
adc
popf
rolb
sub
add
xchg
xchg
jb
push
add
jmp
adc
lret
mov
adc
in
push
adc
aad
or
pop
pop
in
push
adc
and
sub
push
dec
lret
clc
in
push
adc
idivb
push
sbb
dec
in
push
adc
je
aaa
int
cltd
aaa
inc
call
sub
pop
push
insb
pop
sub
test
sbb
pop
push
push
sbb
mov
scas
push
stos
cmp
xor
addr16
xor
sub
sbb
aam
mov
push
adc
aam
hlt
orb
mov
mov
dec
test
loopne
sbb
xorb
les
out
fwait
push
mov
scas
sbb
lret
addr16
mov
sbb
stos
sti
test
fsubrs
cli
cltd
cs
shrb
push
adc
fwait
pop
popf
nop
out
push
adc
mov
scas
imul
cli
fwait
fs
es
adc
mov
sbb
or
and
cmp
gs
sbb
ret
jge
inc
imul
inc
bound
scas
push
out
push
adc
cs
ret
pop
lock
push
lret
mov
sub
mov
inc
mov
mov
adc
push
push
xrelease
sbb
push
adc
andl
push
fstl
adc
adc
gs
lock
adc
mov
shr
ss
icebp
push
adc
je
jnp
push
or
adc
jecxz
roll
xor
push
dec
mov
or
lret
nop
and
dec
add
bound
mov
fwait
test
jmp
push
sbb
add
cmp
cmp
and
mov
mov
pop
sub
mov
mov
pop
mov
outsl
and
sbb
movsb
push
dec
das
rol
mov
das
addl
add
mov
inc
xchg
lcall
mov
mov
cmp
test
add
jb
movb
or
sti
xchg
and
xor
push
out
les
les
jb
arpl
jmp
add
xchg
lock
inc
jns
mov
cmp
mov
add
jb
jge
add
and
xchg
daa
jp
mov
imul
sahf
inc
add
xorb
push
sub
jbe
pop
jo
push
adc
inc
jl
bound
addl
adc
insl
add
push
icebp
fstps
mov
addr16
repnz
adc
adc
xor
adc
push
jnp
and
nop
aaa
adcl
popf
fidivrs
xchg
mov
jb
add
add
xchg
push
lock
cli
mov
and
xlat
les
add
pop
hlt
nop
add
pop
insb
mov
test
cmp
jle
adc
mov
xor
push
pop
add
push
adc
cltd
adc
cmp
sub
mov
add
sub
push
mov
not
adc
nop
or
or
hlt
cltd
sub
cld
adc
push
les
lahf
xchg
push
mov
pop
push
sbb
roll
pushf
and
cmpsl
sub
and
aas
inc
mov
adc
push
push
fldenv
xor
adc
pop
sti
adc
mov
add
jbe
add
insb
push
addr16
or
dec
clc
push
test
and
adc
push
lods
hlt
push
adc
cmpsl
addb
lds
adc
cmp
inc
test
push
add
cmc
push
adc
in
or
test
push
adc
push
cmc
enter
or
dec
fdiv
push
adc
or
add
push
mov
mov
push
sbb
cmp
push
adc
pop
mov
xor
and
inc
scas
cmp
mov
pop
push
dec
mov
inc
or
psllq
sbb
int3
testl
adc
in
or
jp
testl
push
cmp
je
mov
lea
push
adc
fnstsw
jnp
in
js
repz
sub
test
divb
int3
jmp
testb
jmp
jmp
cltd
mov
out
int3
aas
add
int3
lods
sub
clc
push
adc
inc
clc
ror
mov
insl
in
ljmp
push
adc
sub
mov
mov
insb
fcmovnu
movb
cmpsb
xor
xchg
cld
arpl
push
adc
shrb
mov
dec
cmp
mov
sub
sbb
out
push
ret
adc
jg
inc
imul
and
dec
sub
addr16
stos
mov
cwtl
inc
icebp
test
int
cmc
mov
push
adc
xchg
push
adc
leave
xchg
test
xchg
cmp
scas
mov
enter
aam
cmpxchg
adc
gs
dec
and
sub
mov
les
adc
adcl
push
pusha
push
in
inc
inc
repnz
xchg
xchg
test
push
or
loop
pop
sti
push
adc
xchg
arpl
nop
shlb
xchg
test
add
jo
push
add
fcoml
sbb
shlb
das
pop
ret
rcrb
xorb
push
adc
mov
and
sbb
bound
push
cmpsb
dec
cmpsb
or
adc
sti
push
adc
adc
and
push
sbb
and
dec
jle
lds
adc
fldenv
add
jbe
mov
nop
aaa
lock
popf
lods
fwait
pop
mov
jbe
push
jecxz
addl
leave
mov
adc
mov
sbb
out
mov
sub
outsl
aad
mov
pop
addl
add
pusha
testl
sbb
adc
cmpsl
popf
jae
adc
cld
push
adc
cmp
add
mov
inc
xchg
cld
push
adc
adc
push
cwtl
pop
test
jb
sub
sub
push
adc
mov
push
cmp
mov
add
inc
dec
std
push
adc
pusha
xchg
and
hlt
sbb
pop
ret
rorb
xorb
push
add
or
aaa
xchg
xchg
sbbl
ret
sarb
addb
push
adc
cmp
or
sbb
adc
cmpsb
xchg
ret
push
repz
cmp
pop
add
mov
es
test
inc
out
mov
out
popa
int
std
push
adc
sub
add
das
or
or
push
adc
sahf
cmp
incb
adc
push
and
fistpll
mov
fsub
xchg
in
push
mov
adc
and
or
insl
adc
mov
in
jg
in
lcall
cwtl
push
in
lock
adc
scas
and
and
aad
push
jae
lea
push
test
in
inc
mov
xchg
inc
bnd
xchg
addr16
inc
inc
cmp
sahf
or
pusha
adc
aad
jo
idiv
push
insl
sbb
sbb
ljmp
xor
adc
mov
push
jb
scas
fildl
cmp
adc
ret
icebp
mov
push
add
dec
jecxz
fildl
jnp
adc
dec
gs
popl
xlat
filds
push
adc
in
pushf
push
lahf
sbb
insl
lea
incl
adc
pop
cmp
or
adc
sbb
je
pop
int
mov
inc
scas
ss
xchg
push
ds
ds
push
fwait
add
pop
push
push
mov
mov
jo
xchg
mov
arpl
mov
mov
add
adc
data16
inc
sbb
imul
insl
push
xor
push
sub
cmc
testl
jno
pushf
mov
xor
int3
jge
xchg
xor
jne
jbe
loopne
push
in
out
fwait
xchg
test
movsl
jge
or
cmc
scas
std
mov
shll
mov
sti
mov
mov
sti
vprotq
mov
push
adc
mov
pop
fcmovu
int3
cmp
mov
aam
std
and
loope
mov
test
add
add
mov
sbb
push
popa
insb
jecxz
stc
dec
pop
pushf
adc
or
stos
js
loopne
dec
ds
dec
imul
insl
aam
ret
cli
lock
and
mov
fmull
mov
fidivs
sub
mov
movsb
mov
repz
cltd
lods
mov
mov
mov
sub
mov
inc
dec
inc
imul
pop
jno
xchg
shr
insl
sbb
jbe
jmp
inc
xor
addb
mov
sub
iret
test
push
rcrb
roll
xor
push
dec
mov
iret
nop
and
pop
mov
xchg
sub
mov
imul
sub
push
pushf
add
adc
push
aad
mov
cmp
cli
bound
push
pop
add
jbe
cmp
fsubrs
and
mov
mov
pop
sub
les
add
addl
add
jmp
icebp
lods
sbb
lock
adc
adc
xor
daa
push
jnp
add
inc
jl
pop
adc
pop
int3
add
adc
and
mov
aaa
movsb
cmp
add
inc
adc
mov
and
mov
pop
adc
aas
sbb
and
xchg
rcrb
dec
and
pop
adc
sub
adc
add
adc
mov
sbb
inc
je
rclb
jl
jecxz
adc
or
arpl
adc
mov
mov
cmp
adc
xor
cmpsl
add
add
jecxz
or
push
cli
mov
sbb
sbbb
mov
adc
inc
xchg
mov
jae
xchg
adc
cs
sbb
pop
sub
rolb
adc
xchg
insb
addl
and
adc
shlb
add
nopl
jmp
es
mov
ja
pop
cmp
add
push
adc
popa
add
pop
adc
movl
popa
sub
sub
pop
adc
sub
add
add
adc
inc
scas
or
aam
cltd
xchg
sbb
dec
xchg
add
test
cmp
add
adc
insl
cltd
sub
jmp
dec
dec
int3
cmpl
adc
sbb
mov
dec
and
adc
daa
das
xor
xorb
xor
mov
xor
and
push
cmp
mov
push
cmp
cmp
insl
out
inc
jb
mov
outsl
inc
inc
cmp
ds
in
push
add
aas
sub
test
inc
adc
repnz
mov
push
enter
movb
roll
cmp
pop
adc
divl
adc
inc
sbb
adc
jp
sbb
lret
aam
pop
adc
mov
sub
scas
mov
or
adc
mov
pop
and
test
mov
or
nop
add
or
cs
faddl
push
push
pop
adc
dec
lea
stos
inc
jo
outsb
int3
nop
daa
shll
jle
lods
outsl
sti
mov
pusha
push
pop
adc
add
jnp
or
negb
mov
test
inc
push
and
dec
outsb
aad
jnp
push
pop
pop
adc
mov
pop
jg
nop
xlat
xchg
xor
push
aad
jns
and
mov
pop
pop
adc
xchg
in
mov
jnp
cmc
test
daa
sbb
jbe
xlat
cwtl
sub
test
pop
adc
je
fcmovu
stos
popa
call
sub
xchg
inc
mov
subl
pop
pop
adc
pop
mov
cld
push
daa
clc
dec
xchg
xchg
clc
sub
mov
dec
fwait
mov
shlb
rolb
adc
repnz
push
adc
pop
adc
and
xor
jp
pop
pop
addr16
addr16
sub
fcmovnb
subb
lea
mov
das
je
hlt
pop
and
nop
and
fildll
push
movsb
imul
xchg
xchg
mov
aam
lcall
or
adc
inc
into
pop
push
out
pop
lahf
cwtl
lds
push
ret
pop
adc
jb
leave
push
pusha
mov
inc
lret
xchg
push
xchg
or
pop
adc
in
outsl
xor
inc
push
xchg
es
repnz
add
add
ljmp
nop
pop
cmpsl
xor
cmp
add
bound
push
jnp
and
nop
aaa
sbbl
sbb
out
popf
insl
xchg
pop
mov
pusha
or
adc
das
add
jb
mov
or
xor
push
and
jle
xor
popf
daa
jb
mov
jbe
push
cmp
add
inc
pop
test
cmp
and
sbb
fs
pop
mov
rolb
mov
push
leave
mov
or
adc
inc
mov
sbb
jbe
push
sub
inc
insl
mov
imul
mov
jnp
dec
nop
xchg
mov
mov
pop
sub
pusha
les
add
movl
in
nop
push
icebp
in
push
icebp
arpl
mov
mov
add
add
sbb
adc
or
adc
mov
xor
gs
iret
cmp
pop
adc
js
add
jo
cs
mov
push
data16
or
adc
sbb
and
mov
push
imul
sub
push
lea
pop
adc
push
lds
adc
mov
mov
and
cmp
pop
adc
inc
daa
sub
ror
lahf
mov
inc
xorl
adc
daa
dec
out
dec
clc
xor
and
imul
adc
jo
sub
iret
movb
fs
or
outsb
xchg
xlat
push
shrb
pop
aam
lcall
inc
push
jecxz
or
mov
mov
fstpt
and
pop
adc
jge
or
jp
cmp
fadds
xor
xor
sbb
and
pop
out
inc
aad
jb
or
data16
pop
adc
or
repz
mov
xor
es
mov
ds
or
jbe
cwtl
dec
pop
add
sbb
push
aaa
mov
add
rolb
cld
xchg
ljmp
pop
adc
sub
mov
inc
jns
and
add
add
fists
inc
repz
lea
insb
fmuls
adc
jne
and
pop
xchg
push
push
outsl
pop
fcomps
push
cmp
ss
xor
cmc
lods
jl
dec
into
push
lods
dec
or
int
push
leave
sbb
pop
adc
daa
dec
ficoml
jl
orb
sahf
insb
insb
popf
cmp
aas
das
fldz
sbb
outsb
loope
xor
sub
or
das
jl
dec
jp
iret
jge
sbb
pop
std
dec
cli
cld
ja
clc
push
test
scas
push
and
dec
outsb
leave
jp
cmp
or
loopne
mov
cmp
sarb
and
and
mov
inc
stc
mov
ja
movsl
es
ror
ret
rclb
or
jo
cmp
shlb
in
insl
dec
shr
push
sub
cmp
leave
xor
sti
adc
xor
mov
or
cli
cmp
popf
xor
pop
adc
mov
scas
test
pop
adc
cmp
enter
ret
test
popa
push
das
xchg
adc
loop
inc
mov
jns
mov
push
sti
aad
fs
test
cmc
leave
loope
sub
or
data16
xlat
mov
pop
adc
ss
push
jecxz
lods
int3
and
sbb
ret
fs
add
test
inc
inc
xor
pop
sbb
scas
sahf
cld
cmp
mov
test
aad
push
pusha
add
inc
lret
xchg
and
xchg
add
out
sysret
adc
fisubrs
xchg
inc
sysret
adc
ja
and
nop
and
xor
push
repnz
add
adc
out
or
popf
push
pop
mov
mov
pop
adc
xor
add
in
adc
aam
pop
adc
stc
push
les
mov
fwait
push
lcall
pop
adc
adc
jle
adc
adc
aam
pop
adc
aam
addl
push
inc
or
pop
adc
mov
cmp
iret
clc
sysret
adc
sbb
add
push
add
loop
and
adc
adc
pop
sub
or
xchg
out
sarb
jo
jl
or
xor
mov
enter
pop
mov
add
shlb
and
jl
pop
adc
pop
ss
in
aaa
loopne
adc
mov
adc
mov
lock
adc
jp
add
mov
inc
xchg
sbb
pop
sub
sbb
pop
adc
mov
addl
imul
adc
adc
mov
xor
jg
addr16
iret
inc
adc
adc
mov
mov
add
xor
rorl
rcrl
and
jae
add
add
pop
lds
cmp
fs
xor
sbb
adc
add
mov
cmc
add
je
or
jmp
orb
pop
adc
adc
add
addb
xor
pop
cmp
outsb
lock
adc
inc
clc
sbbb
fimull
inc
jmp
sub
adc
pop
adc
sbb
das
aaa
push
lcall
mov
push
nop
push
mov
pop
adc
sbb
add
fcoms
pop
adc
pop
and
in
test
outsb
scas
xchg
test
fs
adc
pop
je
inc
aaa
cmp
fs
jbe
imul
scas
fmull
sbb
push
notl
popa
add
daa
test
lds
push
mov
movsb
out
jmp
xchg
call
sbb
les
cmp
or
adc
clc
mov
aad
stos
es
repz
jnp
loope
push
mov
and
mov
add
xlat
lret
test
adc
sub
dec
sti
mov
jnp
imul
mov
sub
jge
xor
mov
pop
adc
insb
lods
sub
xor
stos
cs
push
mov
adc
in
push
mov
jp
push
pop
adc
inc
push
cs
pop
push
pop
adc
sbb
int3
in
pop
mov
mov
lret
movsw
pop
pop
in
fadds
xchg
xor
mov
pop
adc
ret
mov
push
cli
movsb
das
in
mov
mov
mov
mov
mov
out
in
addr16
jge
enter
mov
std
adc
push
int3
test
dec
scas
sahf
xchg
lret
cli
fldl
pop
pop
adc
loope
pop
pop
adc
testl
lret
cmp
and
pop
adc
push
rcll
nop
ds
sub
mov
stos
mov
sub
das
insb
sbb
adc
sub
ret
hlt
in
repnz
out
push
pop
pop
mov
xchg
adc
lahf
inc
mov
push
xchg
ja
sbb
adc
ret
pop
js
sub
adc
cmp
cmp
shlb
mov
pop
jno
divl
cmp
lock
adc
mov
test
loopne
leave
adc
mov
aaa
mov
orl
out
sbb
adc
jnp
jnp
nop
and
repnz
adc
cmpsl
cmp
xor
add
add
adc
push
mov
lret
push
xor
mov
mov
pop
mov
inc
dec
adc
xor
cmpsl
add
add
mov
or
push
cmp
and
sbb
jo
pop
adc
adc
xor
imul
sub
add
sbb
adc
insb
subl
in
cmp
jbe
cld
mov
push
enter
jo
sbb
adc
or
pop
adc
push
mov
cld
mov
add
je
or
mov
mov
popf
and
pop
mov
jbe
insb
push
adcl
mov
jne
xchg
pop
or
push
sti
and
rcl
mov
mov
pop
pop
jle
push
add
sbb
adc
sbb
js
je,pt
push
pop
sub
add
mov
ss
add
je
push
jle
movb
xchg
and
xor
fs
rcrl
sub
hlt
cs
push
outsb
lea
add
js
mov
inc
repnz
popf
inc
mov
xchg
push
jg
call
push
cwtl
add
scas
mov
lds
adc
pop
sub
inc
cmp
pop
adc
push
clc
popa
xor
inc
sarb
mov
je
add
mov
adc
enter
divl
xchg
dec
or
jl
pop
adc
push
mov
cmpsb
rsqrtps
add
sbb
shrb
pop
adc
adc
subl
xchg
add
sbb
mov
adc
sbb
adc
or
pop
and
pop
adc
add
push
je
adc
repz
and
add
insl
mov
adc
cmp
push
fsubl
or
mov
adc
je
mov
push
mov
push
pop
mov
dec
pop
add
sbb
push
testl
pop
inc
xor
and
mov
add
inc
or
add
mov
or
outsl
adc
xor
sti
lea
sub
mov
daa
loope
inc
push
sbb
aas
sbb
inc
adc
add
test
lods
sbb
mov
lods
call
cmp
cmp
dec
int3
or
das
cmp
sbb
inc
fistl
js
sbb
adc
push
xchg
sbb
sbb
push
push
pop
adc
dec
xor
dec
jl
js,pn
pop
adc
mov
add
sbb
or
cmp
insb
outsl
push
hlt
hlt
push
pop
fcoms
pushfw
aam
xchg
je
push
pop
adc
or
movsb
add
loopne
out
in
popf
pop
iret
jmp
jmp
cltd
mov
out
cmpb
iret
into
lods
pop
pop
repnz
jl
ficoms
cmp
or
inc
stos
les
pop
adc
mov
push
and
sarb
cltd
in
jno
jg
lcall
sbb
adc
pop
std
inc
dec
sub
push
cmc
hlt
sbb
pop
pop
adc
push
push
imul
xor
cmp
outsb
fistps
nop
mov
cmpsb
dec
mov
adc
mov
mov
lock
fmuls
xchg
lahf
adc
and
and
adc
xchg
fwait
mov
pop
fimull
or
es
and
adc
mov
out
xor
scas
push
pusha
jb
push
push
push
mov
add
and
adc
ret
mov
and
adc
xchg
jg
nop
shlb
xchg
dec
add
jo
inc
add
adcl
xor
rcr
sub
pop
adc
aad
add
je
push
adc
pop
adc
lock
adc
mov
movsb
aas
dec
in
lds
ds
mov
add
mov
inc
xchg
and
adc
push
jbe
push
pop
movsb
addl
adc
xlat
sub
nop
mov
cmp
push
dec
je
inc
adc
xor
fists
leave
iret
or
push
cli
lahf
pop
jge
sbb
cli
arpl
jmp
imul
and
adc
push
cmp
adc
lahf
aaa
mov
or
pushf
pusha
push
pop
mov
clc
iret
mov
cmp
add
cs
test
pop
adc
pop
sub
and
adc
je
addl
jo
pop
adc
bound
and
pop
adc
pop
adc
cmpsb
pop
js
pop
adc
sahf
and
adc
and
lds
inc
pop
adc
cmpsb
adc
out
cwtl
pop
pop
adc
adc
cmovb
add
pop
adc
dec
lds
pop
adc
lret
pop
adc
ret
mov
xor
pop
adc
adc
cltd
mov
inc
push
dec
or
adc
sub
adc
pop
adc
sbbl
adc
pop
cmp
inc
and
xchg
aas
or
adc
sarb
and
mov
sub
adc
inc
pop
pop
adc
inc
dec
cmp
pop
adc
out
and
sbb
adc
adc
push
inc
pop
adc
cmpsl
xchg
imul
inc
adc
pop
adc
das
mov
inc
adc
adc
cmp
dec
inc
arpl
adc
xchg
insb
pop
jb
push
adc
sbb
sub
mov
pop
adc
mov
out
mov
repz
pop
add
sbb
pop
out
out
in
inc
mov
cmp
pop
pop
adc
or
adc
sahf
or
leave
negl
out
out
out
subl
push
adc
sub
cmp
adc
loope
insb
pop
pop
adc
pop
adc
popf
or
xchg
sbbb
popf
pop
adc
movsl
or
adc
cmpl
push
out
adc
adc
les
sub
sub
insl
pop
pop
or
and
push
mov
xchg
stc
mov
inc
adc
adc
popf
pop
adc
rcrl
or
jno
push
mov
xchg
fwait
das
repz
adc
adc
adc
pop
adc
lock
popf
pop
adc
lret
cs
adc
jle
iret
arpl
aam
xchg
push
ja
inc
adc
adc
fcomps
int3
popf
pop
adc
cmc
mull
or
out
jo
rorb
stos
pushf
rorb
inc
inc
adc
adc
lret
popf
pop
adc
jns
cmpsb
jge
ss
sbb
mov
lret
inc
inc
adc
adc
hlt
mov
dec
xchg
or
cs
lret
xchg
in
jne
mov
inc
adc
adc
test
sub
push
adc
add
and
pop
push
mov
push
adc
push
jno
lods
xchg
je
or
adc
mov
call
or
adc
or
ret
hlt
jl,pt
loope
push
adc
pop
and
div
or
adc
fs
rcl
jbe
decl
adc
adcb
mov
ret
cwtl
popf
pop
adc
rorl
or
xor
dec
decb
dec
or
pop
adc
cmp
push
sahf
pop
adc
adc
cmp
test
pop
adc
jmp
jp
adc
adc
mov
sahf
jb
push
adc
and
lds
inc
pop
adc
mov
int3
sahf
pop
adc
pop
adc
mov
adc
pop
jnp
inc
pop
adc
ds
add
adc
and
mov
pop
adc
mov
arpl
sub
adc
mov
xor
xor
add
in
dec
in
pop
adc
xchg
or
xor
add
adc
adc
mov
lret
and
push
adc
mov
adc
adc
and
and
lahf
pop
adc
xor
mov
pop
sbb
add
mov
pop
adc
sbb
cmc
mov
push
adc
push
lds
mov
dec
add
push
adc
sbb
stc
sbb
or
mov
inc
cwtl
mov
inc
adc
fisttpll
add
sub
push
adc
cmpsb
cmp
xchg
xchg
cli
dec
or
pop
adc
mov
or
or
adc
mov
cmp
idivl
push
pop
pop
adc
scas
mov
xlat
in
xchg
pop
pop
adc
vxorpd
pop
pop
adc
pop
testb
xchg
hlt
test
or
inc
pop
adc
or
iret
dec
addb
popf
mov
sub
pop
adc
pop
jg
inc
les
pop
pop
adc
dec
jl
pop
jmp
popf
pop
adc
paddw
cmpsl
or
outsw
hlt
inc
pop
adc
cmp
push
sbb
inc
pushl
adc
adc
imul
sub
pop
adc
js
ja
cmpsl
xchg
ret
fstpl
dec
inc
pop
adc
scas
adc
mov
je
inc
pop
adc
cmp
mov
pop
adc
popf
fbld
aad
add
mov
cwtl
popf
pop
adc
insl
and
adc
in
xchg
adc
dec
int
add
adc
mov
fcompl
add
pop
adc
fmul
xchg
es
popf
pop
adc
push
adc
sbb
adc
faddp
test
inc
sub
bound
inc
fnstcw
sahf
pop
adc
jo
lret
test
sahf
pop
adc
jno
cs
mov
rolb
or
fcoms
push
adc
sub
and
inc
xchg
cmp
sahf
pop
adc
dec
pop
push
jnp
lahf
pop
adc
mov
lods
sbb
inc
sub
pop
adc
lret
pop
adc
es
cmp
jnp
mov
adc
jmp
and
pop
adc
cmc
insl
adc
pop
adc
xor
cmp
cmp
loop
mov
sar
cltd
mov
.byte
xchg
.byte
add
mov
popf
popa
mov
pusha
pushf
or
popf
popa
call
pusha
pushf
or
popf
popa
pop
pusha
pushf
popf
popa
add
pusha
pushf
push
add
popf
popa
mov
pusha
pushf
push
add
popf
popa
xor
pusha
pushf
or
popf
popa
ret
pusha
pushf
push
add
popf
popa
popl
pusha
pushf
cmp
popf
popa
add
pusha
pushf
clc
popf
popa
push
pusha
pushf
push
add
popf
popa
push
pusha
pushf
and
popf
popa
push
pusha
pushf
xchg
popf
popa
push
pusha
pushf
mov
popf
popa
jmp
outsl
pushl
in
ret
pushf
xor
popf
popa
call
pusha
pushf
and
popf
popa
subl
pusha
pushf
popf
popa
mov
pusha
pushf
or
popf
popa
mov
pusha
pushf
imul
popf
popa
and
pusha
pushf
push
add
popf
popa
add
pusha
pushf
and
popf
popa
mov
pusha
pushf
push
add
popf
popa
mov
pusha
pushf
popf
popa
movzwl
pusha
pushf
xchg
popf
popa
add
pusha
pushf
mov
popf
popa
cltd
pusha
pushf
and
popf
popa
mov
pusha
pushf
and
popf
popa
div
pusha
pushf
test
popf
popa
xor
pusha
pushf
and
popf
popa
xor
pusha
pushf
mov
popf
popa
ror
pusha
pushf
sub
popf
popa
inc
pusha
pushf
cmp
popf
popa
cmp
pusha
pushf
cmp
popf
popa
jl
pusha
pushf
or
popf
popa
call
pusha
pushf
neg
popf
popa
pop
pusha
pushf
xchg
popf
popa
test
pusha
pushf
xor
popf
popa
je
pusha
pushf
test
popf
popa
dec
pusha
pushf
cmp
popf
popa
je
pusha
pushf
mov
popf
popa
dec
pusha
pushf
push
add
popf
popa
je
pusha
pushf
and
popf
popa
xor
pusha
pushf
xchg
popf
popa
ror
pusha
pushf
xchg
popf
popa
xor
pusha
pushf
mov
popf
popa
cmpw
pusha
pushf
mov
popf
popa
je
pusha
pushf
push
add
popf
popa
sub
pusha
pushf
push
add
popf
popa
and
pusha
pushf
cld
popf
popa
jmp
pusha
pushf
add
popf
popa
add
pusha
pushf
popf
popa
mov
pusha
pushf
test
popf
popa
cmpw
pusha
pushf
xchg
popf
popa
jne
pusha
pushf
cmp
popf
popa
and
pusha
pushf
mov
popf
popa
pop
pusha
pushf
add
popf
popa
mov
pusha
pushf
xor
popf
popa
jmp
pusha
pushf
mov
popf
popa
xor
pusha
pushf
imul
popf
popa
jmp
pusha
pushf
dec
popf
popa
xor
pusha
pushf
popf
popa
jmp
cmp
pop
imul
fldt
sbb
mov
jo
imul
push
fdivrp
ja
xchg
cmp
shll
sub
mov
pop
xor
push
mov
fnstsw
ret
push
repnz
adc
pop
je
sbb
push
lock
xor
inc
jbe
fs
mov
mov
add
jmp
pop
shlb
ds
xor
mov
jns
mov
and
sub
cld
ja
jl
pushf
push
mov
inc
mov
div
sub
pop
inc
mov
stos
test
mov
mov
ja
jbe
cmp
push
dec
out
cmp
idivb
jmp
fwait
inc
ja
outsl
pushl
inc
xchg
pop
lds
jg
aaa
repnz
fdivrl
ja
and
iret
cwtl
dec
cmp
push
mov
dec
repz
imul
aas
cmp
fs
jl
adc
mov
push
sahf
inc
xchg
jns
stc
ja
inc
jo
imul
aaa
pusha
stc
push
xor
jbe
test
fistpl
sahf
dec
inc
push
in
pop
fldl
rcrb
cld
insb
lea
xor
std
push
aaa
mov
dec
test
mov
lret
mov
jmp
xchg
nop
add
insl
mov
fs
cmp
jge
adc
mov
fucomip
push
mov
hlt
ret
cltd
mov
push
sahf
dec
xchg
js
dec
push
test
mov
or
iret
mov
push
lea
xor
dec
call
call
paddusb
xor
std
ja
in
xchg
add
push
aaa
cmc
mov
insb
test
test
mov
lret
mov
in
mov
cmp
pop
insl
mov
fs
cmp
jge
adc
not
aas
add
pushf
into
jne
shlb
aas
xor
pop
xchg
pop
pusha
sahf
into
in
je
push
stc
leave
scas
jo
xchg
cmpsb
cmp
pop
mov
cmpsl
jne
push
adc
je
sub
push
sub
stc
or
leave
loope
xor
shll
ret
out
push
mov
clc
scas
call
sti
xchg
mov
ret
push
adc
xlat
cld
fadds
lock
cwtl
jecxz
mov
jo
xor
cmp
rorb
loopne
daa
cld
hlt
ret
lock
inc
test
lds
sti
mov
ljmp
ja
outsl
adc
push
repnz
push
push
fidivl
dec
data16
js
adc
xor
shrb
out
je
mov
cmp
adc
dec
out
mov
shlb
divl
add
push
hlt
fdivrp
out
xor
mov
jle
push
mov
lds
jg
jns
insl
push
std
fucomip
sub
and
adc
mov
push
mov
data16
and
subb
or
data16
sbb
in
push
mov
jle
cmp
jge
push
jnp
out
mov
loopne
inc
jmp
push
stos
rcl
data16
cmp
pushf
inc
sahf
pop
int
dec
call
loope
cmp
mov
adc
xchg
aad
data16
adc
push
repnz
mov
cmp
adc
js
dec
jne
fstpt
pusha
mov
fs
je
mov
mov
mov
add
mov
sti
mov
push
pop
out
je
lock
cmp
repnz
push
xorl
jmp
sub
enter
jns
shrb
out
je
mov
cmp
sti
decl
sbb
cmpsb
push
xchg
mov
push
xor
xchg
lcall
cli
les
cmp
inc
xor
push
xchg
and
xchg
add
xchg
or
jbe
je
pushl
scas
or
into
in
mov
sbb
xor
in
aaa
call
mov
je
jno
pop
addb
lahf
push
out
cs
push
or
mov
in
cld
cmp
ja
in
or
fistps
outsb
mov
hlt
pop
popf
sti
mov
stc
lcall
fadds
jbe
jb
pushf
out
je
dec
jne
fstpt
cmp
std
fbld
dec
fs
cld
aas
ss
andl
decl
jge
pop
js
ret
loopne
inc
jmp
push
stos
out
shll
jle
xor
pushf
inc
sahf
addr16
jne
shl
jge
and
or
jg
adc
push
repnz
push
cmpl
push
fwait
sub
mov
rcr
jmp
mov
xor
mov
mov
dec
jl
jae
mov
xchg
xchg
in
sahf
push
sub
loop
ja
cwtl
test
cld
jg
je
jge
mov
inc
sub
pushf
pop
jg
repz
pop
sub
push
lods
add
cmpsl
or
repnz
jbe
push
mov
movsb
mov
jp
push
inc
std
out
jnp
cmp
shlb
lea
mov
inc
push
sub
jg
iret
cmp
push
je
sub
iret
int
repz
mov
ja
jecxz
cmp
adc
or
aas
xor
aas
cmp
pop
push
mov
fistpll
lock
dec
xor
mov
or
cmp
fisubrl
cmp
and
or
andb
mov
jmp
push
mov
cmp
jg
popf
mov
rcrb
mov
sub
cli
inc
inc
stc
sti
mov
xor
addr16
loop
cmp
popf
out
mov
test
nop
mov
jns
mov
ja
repz
ja
je
jne
mov
mov
sti
mov
jns
mov
lcall
int3
jmp
into
sub
mov
xchg
scas
js
aaa
push
xchg
cli
push
lods
xor
xchg
cld
fimuls
cli
jne
je
or
inc
es
xchg
jmp
mov
decl
ds
cwtl
cmp
or
fistps
jp
sti
dec
jo
cli
push
aas
adc
insb
or
incl
sub
xlat
pop
xor
push
addl
scas
in
aaa
mul
pop
adc
cmp
push
movsb
pop
std
cmpsl
js
stos
mov
and
sub
dec
adc
repnz
and
jmp
pop
pop
jg
fldcw
mov
pop
jne,pt
aam
xchg
add
mov
jno
ret
sub
pushf
cmp
mov
insl
negl
cs
std
movsl
mov
adc
or
aas
xor
aas
cmp
pop
push
mov
fistpll
lock
dec
xor
mov
or
cmp
fisubrl
cmp
sbb
mov
idivb
lahf
inc
add
lcall
cld
jae
ds
inc
sahf
pop
mov
jg
aas
mov
std
fwait
outsb
fs
je
lea
mov
add
fildl
jbe
xchg
and
adc
xchg
mov
pop
inc
loope
adc
dec
xchg
in
loop
cmp
repnz
cmp
cs
fwait
setl
in
stos
push
cli
pop
sahf
xchg
je
daa
xor
pop
mov
std
out
je
paddd
pop
lock
dec
mov
pop
cmpsb
jp
pop
sub
add
push
les
and
sub
mov
test
jbe
or
xchg
es
loop
jo
xor
les
arpl
gs
sbb
fs
scas
and
pop
or
mov
push
inc
out
jnp
aaa
mov
lock
mov
inc
push
and
mov
fisubrl
hlt
rorl
or
push
mov
cmpsb
clc
data16
and
je
lock
pop
mov
ja
adcb
aaa
jne,pt
data16
and
je
lock
fucomip
fdivrp
gs
sbb
mov
mov
mov
lods
add
loop
lret
nop
or
cmpsb
addr16
imul
jl
in
dec
add
scas
std
movsl
cli
sub
rorb
inc
shl
mov
xor
jbe
outsl
mov
xor
lds
stc
sti
pop
jp
mov
cmp
std
out
loop
mov
je
es
mov
mov
mov
sarl
das
ljmp
ss
popf
cmp
fisttpl
hlt
xor
adc
and
aas
push
out
std
pop
xchg
mov
nop
jl
cmc
dec
add
lods
in
lds
jge
and
mov
xor
mov
mov
es
sub
lds
jmp
mov
lock
sbb
add
xor
pushf
outsb
push
cld
sbb
mov
bound
je
pushw
xor
jno
cmp
jge
inc
lock
mov
aas
fsubl
outsl
or
adc
pop
pop
dec
mov
hlt
loop
roll
jns
rcrb
cmp
jl
dec
cmpsb
mov
adc
jne
lock
pop
push
mov
in
ljmp
bnd
push
inc
add
ret
sub
bound
cmp
bound
adc
dec
jnp
sbb
xchg
cmp
pop
jo
jp
cmp
add
data16
outsb
jnp
pop
or
cmp
and
mov
popf
lahf
std
ja
in
bound
mov
call
divb
mov
mov
add
lcall
add
bound
jge
pop
scas
mov
adc
cmc
cli
popl
mov
mov
jne
shl
mov
mov
aaa
cmp
pop
in
decl
jge
addr16
sub
add
mov
mov
dec
insb
push
push
xor
add
or
inc
push
xchg
cld
push
insb
hlt
add
mov
aas
lds
je
sbb
push
insb
mov
jle
cmp
xor
aaa
mov
mov
nop
je
pop
pushf
mov
jge
push
fbld
lock
sti
push
inc
add
push
jnp
lds
jbe
mov
bound
mov
or
imul
jge
shlb
ds
fs
jg
adc
push
sahf
pop
sahf
dec
mov
mov
jge
fdivrs
stos
inc
jmp
push
stos
xchg
cld
ljmp
mov
fidivl
inc
jle,pt
jno
imul
ss
js
cmpsl
jle
bound
jge,pt
data16
or
sbb
cli
mov
aaa
jo
mov
add
in
xchg
mov
sub
jl
sub
or
jge
inc
cli
cmp
xchg
ficomps
sti
pop
loopne
shlb
jl,pn
sub
or
xor
inc
repz
mov
stos
inc
add
mull
std
or
in
ja
dec
add
xchg
out
xchg
mov
clc
xor
push
mov
add
bound
push
push
fidivl
stos
adc
pop
dec
idivl
jns
jg
cmp
push
nop
add
dec
popl
bound
fs
pop
xchg
xchg
pop
repnz
ja
aaa
xchg
aad
aaa
popa
mov
sub
mov
jle
data16
sbb
in
push
mov
mov
cs
subb
sbb
data16
add
push
mov
cmp
mov
mov
outsb
aas
cmpsb
jp
adc
add
call
push
icebp
push
xchg
add
push
iret
jbe
ja
mov
cmpsl
jbe
out
sub
rcrb
sub
and
mov
mov
dec
movsb
cld
dec
out
cli
in
add
sarl
add
mov
mov
cmp
push
mov
in
jae
jle
dec
sub
cmp
movsl
dec
add
je
ja
outsb
cmp
sub
dec
out
jp
add
sbbb
negl
inc
add
ret
repnz
cmp
incb
pop
mov
sub
imul
push
jnp
bnd
add
push
xor
adc
test
aam
repz
xor
cmp
jb
cmp
add
bound
sbb
xchg
or
jecxz
xor
add
add
jp
push
add
in
icebp
sub
mov
sub
hlt
or
aas
add
add
cmp
nop
add
cmp
xchg
push
in
mov
xorl
mov
xor
sbb
mov
mov
adc
mov
mov
and
add
imul
les
sti
pop
daa
les
cltd
cmp
mov
sub
js
call
and
cld
mov
jo
pop
subb
out
jmp
xchg
mov
and
nop
cmp
mov
bound
scas
mov
bound
sub
add
orb
mov
test
add
icebp
scas
mov
xor
je
in
decl
inc
cli
in
add
push
mov
out
lcall
add
je
aad
add
xchg
sti
push
mov
jge
out
mov
or
jl
jae
int
add
ds
mov
pusha
mov
jg
jns
xor
orb
mov
daa
mov
aam
xchg
test
popf
adc
fcmovnb
add
push
mov
and
pop
push
out
std
ljmp
test
fwait
in
lds
jo
and
mov
repnz
cwtl
add
push
cli
pop
sahf
push
stos
xchg
cmpsl
jae
sbb
xor
dec
sub
mov
ja
or
je
sub
mov
add
mov
js
and
fs
ds
cmpb
pop
cmp
pop
outsb
test
movsl
and
add
pop
icebp
sbb
daa
pop
and
sub
popf
cmp
sbb
xor
mov
inc
sarl
filds
mov
push
sub
mov
fwait
or
push
jp
adc
subb
dec
sub
rclb
fisttpl
sub
je
aam
lahf
insb
test
sbb
jo
mov
pop
push
mov
aas
fsubr
in
dec
push
add
inc
testl
dec
shlb
inc
or
sub
jo
push
and
addr16
mov
mov
sub
jl
sub
or
jge
inc
jo
mov
xchg
pop
ficomps
sti
xchg
mov
pop
jl,pn
sbb
or
cmp
idivb
push
inc
adc
mov
add
xchg
or
bound
mov
cmpsl
repz
xchg
pop
inc
push
aas
sbbb
sarl
cmp
cld
fdivs
jbe
fdivs
mov
pop
or
sub
std
fucomip
push
jnp
adcl
mov
or
mov
jbe
dec
sub
jbe
in
aas
pop
out
aaa
jbe
and
je
sub
mov
add
dec
sub
js
icebp
dec
add
je
js
cmp
mov
xchg
or
aam
inc
bound
mov
inc
cli
int3
mov
insb
jl
ficompl
test
add
inc
pop
fildll
adc
stc
sti
ja
pop
jbe
mov
push
and
in
loop
add
cmp
into
in
decl
mov
test
mov
pop
sub
push
lods
mov
data16
rorb
mov
test
xor
add
call
or
mov
or
mov
iret
xor
cmp
push
and
jo
push
hlt
pop
imul
push
ret
ss
add
pop
xlat
or
out
mov
lret
push
xchg
rcll
push
insb
rorb
adc
xor
int3
bound
cmp
pop
mov
jb
aas
mov
out
lcall
add
je
lea
in
repz
fisubrs
rorl
or
mov
or
bound
pushf
inc
pop
sti
mov
testl
lods
stc
or
mov
pop
ds
fadds
out
jp
add
subb
dec
sub
sahf
in
push
ljmp
dec
insb
push
push
cmp
add
add
inc
push
xchg
cld
push
insb
mov
inc
ja
nop
add
jmp
je
and
pop
push
insb
mov
jle
cmp
xor
aaa
mov
add
je
xchg
inc
add
lcall
repz
cmp
sub
outsl
adc
push
xor
int3
xor
pop
out
jp
add
andb
dec
sub
stc
shrb
out
je
mov
int3
bound
sarb
insb
push
mov
idivb
inc
sub
jno
imul
xor
js
mov
lcall
sub
or
iret
dec
fidivrl
mov
int
add
xor
pop
insb
test
sbb
hlt
sahf
mov
pop
loop
je
test
ud1
jl
cs
mov
sbb
hlt
ljmp
lcall
pushl
jmp
les
jp
cmp
add
daa
hlt
mulb
rorl
sub
jno
push
inc
jne
pop
sub
mov
dec
cld
aad
push
jb
adc
subb
dec
sub
jo
rorl
ja
cli
mov
or
bound
mov
and
int
in
mov
mov
add
dec
xchg
out
loopne
js
mov
mov
adc
adc
mov
jne
pop
popl
ror
mov
push
cltd
add
bound
sbb
sbb
mov
into
jg
fdivs
sub
or
cmp
je
ret
les
mov
enter
dec
insb
push
cmp
jno
pop
adc
adc
outsl
lock
inc
sahf
inc
lds
idivb
lock
pop
inc
add
jne
fisubrs
ja
pop
cli
mov
pop
sbb
mov
stc
hlt
and
adc
sbb
inc
add
popf
aam
sbb
in
decl
or
mov
add
sbb
jg
cmp
mov
popf
into
push
jp
adc
subb
xor
jge
sahf
in
das
push
push
fdivrp
ja
sahf
jbe
jne
add
aam
lret
bndstx
pop
jo
jle
cld
adc
inc
jle
pushf
sub
adc
sbb
cld
fadds
rcl
push
mov
ss
jp
dec
scas
jo
daa
dec
add
bound
je
xchg
push
pmaxub
cmpsl
add
ss
popf
or
push
push
icebp
fs
cmp
mov
in
pop
cmp
sbb
and
repz
sbbb
lods
pop
cmp
push
add
pop
jl
out
xlat
jbe
je
cmp
pop
movsb
mov
shl
in
cmp
cmpsb
addr16
cmp
xchg
pop
mov
das
or
data16
lock
dec
sub
jbe
sbb
add
je
lock
push
xor
add
cmpsb
idiv
enter
inc
sarl
rcrb
int
call
add
test
mov
gs
mov
jle
data16
sbb
in
push
mov
mov
cs
subb
sbb
add
push
mov
ja
mov
mov
cmp
bound
loop
inc
js
lahf
push
xchg
adc
add
icebp
cmpsb
lock
dec
add
pop
pop
and
adc
dec
out
hlt
and
or
iret
jmp
fdivrp
cld
jg
jbe
insl
cmp
jns
sahf
adc
repz
lea
push
lcall
int3
jmp
into
sub
jb
or
sbb
dec
push
inc
jle
jne
jnp
int3
nop
add
and
les
fisttpl
sbb
hlt
ljmp
lcall
or
sahf
xchg
out
push
fwait
push
aam
jmp
xchg
mov
rcr
jmp
dec
sub
push
xor
imul
jl
out
cli
jae
or
les
sub
inc
std
cltd
push
mov
mov
pop
jl,pn
sbb
or
sub
add
or
inc
les
je
scas
gs
sbb
push
fs
scas
js
mov
add
sahf
dec
xchg
stc
push
jae
adcb
cmp
sbb
sbb
mov
orb
shll
pop
sub
loopne
pcmpeqb
scas
pop
sub
and
dec
out
leave
data16
pop
cltd
or
out
inc
sbb
cli
ficompl
je
sbb
push
insb
mov
mov
lods
pop
jle
jne
mov
push
call
sbb
subb
adc
mov
xchg
pop
std
fucomip
fidivs
test
add
sbb
or
outsb
inc
xchg
adc
andb
std
push
lods
dec
ja
movsb
sub
mov
jnp
bound
push
mov
push
or
xor
cltd
or
adc
push
cmp
pop
inc
add
scas
cli
cmpsl
inc
out
jmp
xchg
jmp
xor
adc
in
aas
jbe
xor
int
and
fmuls
fs
cs
js
pop
std
fucomip
fidivs
enter
int3
dec
add
aad
je
std
aas
inc
outsb
out
jg
add
adc
jne
mov
add
sbb
bound
pop
inc
mov
adc
xchg
mov
aaa
divb
mov
movsl
aas
cmc
mov
sub
rorb
mov
mov
dec
fnstsw
fistpll
inc
pushl
sbb
out
lret
imul
rcll
adc
add
sbb
mulb
lds
arpl
and
out
add
xor
jbe
and
xchg
adc
ds
mov
mov
sub
inc
jne
enter
or
ljmp
push
stos
scas
insb
test
movsb
jbe
dec
sub
jb
push
dec
add
lcall
cmp
shl
clc
ss
push
outsl
fmul
xor
or
fbstp
or
add
shll
and
or
imul
push
jmp
xlat
or
pop
xor
push
sbbl
loop
jo
xor
cmp
insb
or
filds
sub
pop
loopne
xorl
scas
in
sub
loop
xor
xor
fucomip
aaa
mov
ja
pusha
dec
repz
pop
notl
or
mov
inc
mov
cwtl
add
jmp
in
cs
or
std
sbb
sbb
mov
div
xor
or
fisubs
inc
sbb
jbe
and
xchg
cmovl
out
mov
js
shl
mov
iret
add
je
scas
pop
and
cli
adc
ds
mov
idivb
sbb
icebp
shl
push
xor
aaa
cmpsb
mul
dec
outsl
jb
adc
sti
mov
jge
ud0
sbb
nop
lock
pushf
test
bound
gs
mov
mov
and
aam
push
mov
hlt
cli
mov
jle
pop
cmpb
call
dec
in
jo
aas
test
aam
xor
pop
ja
outsl
pushl
xor
inc
inc
insb
js
push
or
cmp
js
dec
push
dec
add
icebp
pop
icebp
repnz
nop
add
push
xor
imul
jbe
pop
data16
add
pop
xor
je
and
ljmp
iret
push
jp
adc
add
bnd
and
lret
lock
ja
cmp
rcll
movhps
xor
inc
repz
mov
pop
inc
add
je
cs
mov
mov
push
fs
jo
pop
dec
add
divl
mov
xor
sub
and
dec
xchg
pushl
aaa
xchg
int3
repnz
cmp
push
std
fwait
push
add
in
subl
mov
cmp
aad
data16
repnz
adc
out
sbbl
les
je
jle
add
jbe
dec
sub
jle
pop
dec
add
je
in
cld
jg
roll
cmp
outsb
test
dec
and
add
lret
xchg
push
jbe
dec
ja
decl
sbb
cmpsb
push
hlt
push
lea
sub
ljmp
cmp
xlat
cmp
pop
pop
out
jbe
pop
add
push
adc
and
pop
push
out
std
ljmp
xor
mov
mov
sti
mov
add
fwait
sti
xchg
xor
jg
jl
dec
call
jge
xor
cld
fdivl
nop
add
rdpmc
loopne
stos
sbb
notb
aas
cmp
insb
inc
filds
mov
xlat
rdpmc
loopne
stos
add
scas
clc
aaa
mul
xchg
cmp
xor
adc
inc
add
push
sbb
adc
sbb
mov
pop
and
add
xchg
xorl
mov
mov
pop
jnp
push
add
xor
div
iret
push
jg
mov
mov
sbb
push
mov
into
dec
out
jmp
jg
scas
scas
repnz
shrl
xor
divb
lcall
lds
jecxz
inc
insb
addl
adc
dec
das
aam
mov
push
cmp
fidivs
leave
jmp
data16
inc
call
scas
aas
sub
xchg
push
adc
fwait
jge
std
popf
push
inc
xchg
mov
mov
xlat
shll
imul
