push
lock
pop
mov
lock
push
nop
add
add
add
or
add
add
ret
push
inc
add
or
add
add
or
add
add
rolb
or
add
mov
add
pop
push
add
add
add
or
xor
lahf
add
add
add
add
push
add
mov
add
add
or
add
and
imul
nop
add
or
add
jo
cmc
add
add
push
rolb
loope
xor
cmp
add
or
add
add
add
or
push
add
push
jo
or
and
popa
add
add
rolb
inc
push
lock
adc
loope
mov
add
add
add
add
add
or
imul
add
add
add
or
add
mov
icebp
or
and
add
inc
add
adc
ss
lock
add
add
add
add
or
add
add
add
add
rolb
outsb
add
add
or
add
or
add
push
rolb
jae
nop
add
or
fldl
add
test
add
fildl
add
fcomi
add
test
add
fildl
add
inc
add
loopne
orb
add
push
rolb
arpl
lock
add
lock
wrmsr
add
add
add
jo
xor
nop
add
add
add
or
lock
pop
addb
or
add
push
jo
roll
lock
rolb
jno
jo
into
add
jo
insb
or
test
addb
add
add
add
add
add
add
add
add
add
pop
or
add
addb
or
add
pop
jo
loope
mov
cld
add
add
or
add
mov
cmp
jo
push
mov
push
popl
movb
mov
mov
mov
mov
push
popl
call
push
popl
cmp
jne
movl
ret
movw
movl
push
push
popl
push
push
popl
movw
mov
subw
pusha
and
call
sbbw
mov
mov
andw
push
addl
xorl
push
popl
push
popl
addl
subl
add
push
orb
xorb
call
addb
cmpl
jne
or
movl
call
push
popl
push
popl
ret
push
popl
jmp
push
popl
push
popl
xor
push
popl
mov
mov
push
popl
shl
subl
push
popl
mov
push
popl
addw
shl
andl
mov
andw
cmp
jne
andw
movb
mov
movw
and
sub
subw
addw
call
xor
push
popl
popa
sbbl
pusha
push
popl
call
push
popl
mov
push
popl
push
push
popl
xorl
push
popl
addl
andw
sbbl
push
movw
push
popl
call
mov
movl
push
push
popl
xorl
push
popl
movb
addl
push
popl
pop
orl
sub
cmp
jne
push
popl
ret
push
popl
popa
xorl
call
sbbb
orl
push
push
popl
push
popl
xorl
push
popl
addl
push
popl
push
orl
push
popl
call
push
popl
movl
push
push
push
mov
mov
xor
pop
push
popl
push
popl
mov
xorb
push
popl
shl
push
popl
push
push
popl
xor
mov
push
popl
push
add
push
popl
call
push
popl
xorl
push
addl
mov
push
popl
andw
push
push
popl
push
popl
jmp
addl
pop
push
popl
or
mov
push
popl
addl
push
orb
xorb
push
xorw
push
popl
push
xorw
mov
or
mov
push
popl
orl
rep
push
popl
pop
push
popl
addb
pop
push
shr
ror
not
mov
xor
xchg
push
push
mov
xor
pop
push
popl
xorb
xor
push
popl
addl
jmp
subw
movw
sub
subb
mov
sub
push
popl
sub
addb
orb
sub
push
popl
sbbb
mov
or
sub
movw
movw
or
jne
movb
push
popl
add
mov
jmp
orl
mov
push
popl
push
popl
shr
push
popl
shl
and
push
popl
mov
push
popl
add
push
popl
jmp
xorb
push
popl
sub
subw
mov
xorl
orb
add
sbbl
movb
cmp
jne
push
popl
xorl
mov
xor
sbbb
add
push
popl
subb
mov
push
popl
orl
add
push
popl
xor
cmp
jne
push
popl
ret
push
popl
orb
push
and
xor
andw
sub
pushl
and
orb
pop
subb
subw
lea
mov
xor
or
xor
mov
push
popl
mov
push
popl
lods
push
popl
mov
movl
pop
subw
ret
push
popl
push
popl
push
push
popl
mov
orw
add
push
popl
subw
push
push
popl
push
popl
push
xorb
push
addw
push
popl
push
addl
subb
push
push
popl
mov
sbbb
mov
orl
push
popl
add
movw
sub
pushl
and
push
popl
mov
sbbb
push
popl
add
orw
and
add
push
popl
subw
mov
add
orl
add
or
or
xor
addl
lea
mov
push
popl
mov
addw
or
add
sub
mov
mov
xor
push
popl
sbbw
rol
push
popl
xor
push
popl
xorb
inc
push
popl
cmpb
jne
addw
cmp
je
sub
inc
or
cmp
jb
addw
mov
andl
mov
add
andw
movzwl
addl
mov
xorw
mov
add
push
popl
mov
push
popl
sbbb
add
push
popl
orb
pop
subl
push
popl
cmp
jbe
and
cmp
jae
push
popl
push
popl
pushl
orl
add
pushl
push
popl
push
xor
xorl
xor
addl
push
popl
or
pushl
push
popl
xorl
call
sbbw
call
sub
pop
andb
pop
or
xorl
pop
and
orw
pop
addb
pop
push
popl
leave
orw
push
popl
ret
sbbl
call
jns
jo
jbe
mov
int3
pop
xlat
test
mov
pop
inc
jbe
shlb
int3
flds
cmp
fs
sbb
sub
gs
rorl
and
sbb
jo
pop
les
pop
mov
mov
inc
jo
jge
arpl
in
mov
jb
cwtl
insl
mov
lcall
pop
jp
xor
push
insl
or
in
out
inc
es
imull
cmp
out
in
or
test
addr16
sarl
jl
mov
ss
add
adc
adc
inc
stos
pushf
test
mov
fists
fldl
xchg
push
pushf
pop
jp
push
cmp
mov
xchg
add
cmpsl
mov
inc
xor
push
rcr
aam
inc
es
es
pop
mov
push
push
cmpl
push
mov
mov
mov
lret
jmp
test
cs
and
fstps
mov
sub
movsb
push
mov
pop
in
in
in
aas
sbb
mov
sub
in
jl
push
cwtl
in
pop
fldl
data16
js
in
daa
dec
xchg
ja
mov
stos
std
pop
aas
out
ss
mov
jmp
popf
xor
inc
jbe
insl
jns
aad
mov
lods
lea
pop
aam
mov
std
pop
inc
les
dec
xchg
pop
inc
les
js
cs
jb
sub
xor
int
aas
lret
xchg
xchg
mov
mov
arpl
test
repz
iret
add
aad
jbe
mov
push
xlat
nop
test
push
data16
sub
es
negb
cmp
push
cmp
pop
setnp
jne
call
ljmp
es
divps
adc
popa
fs
jg
or
push
not
sub
stc
imul
fcomip
xchg
push
add
push
roll
popa
cmp
pop
hlt
jbe
push
sbb
fwait
mov
pop
outsb
add
arpl
and
jle
fdivl
xchg
mov
push
sbb
bound
stc
in
stos
das
pop
cwtl
nop
das
add
sbb
dec
mov
aad
mov
lods
cwtl
add
dec
push
mov
mov
std
pop
inc
sahf
subl
xor
scas
fiadds
jmp
cmp
inc
inc
mov
in
popa
and
push
inc
outsb
sbb
jle
push
cltd
add
ss
out
dec
sbb
xchg
or
mov
mov
test
jns
pushf
mov
sbb
cmp
jae
xchg
loope
mov
jbe
mov
arpl
sub
jbe
jne
cmp
sbb
xchg
xchg
push
add
sbb
pop
inc
pop
jge
bswap
je
cs
mov
push
popa
cwtl
popf
cs
dec
cmpsb
idivb
out
ja
dec
fldenv
test
gs
ds
rcr
lret
sub
icebp
int3
pop
cld
dec
cmp
popf
jge
add
add
cld
pcmpgtw
data16
data16
inc
or
cwtl
aad
es
in
push
dec
shlb
add
out
xor
mov
es
cmp
cmpsl
lods
xor
xchg
loopne
fisttpll
ja
add
mov
inc
and
fcom
xor
es
call
mov
lods
stos
stos
aaa
gs
cmp
fsubrp
out
jnp
adc
push
push
sub
mov
add
pusha
stos
adc
outsl
fisubl
mov
fldt
inc
cmpsl
mov
imul
xchg
mov
sbb
fs
lcall
mov
aaa
mov
out
xor
loop
mov
mov
cli
and
add
adc
push
jecxz
rcll
shlb
pushf
repz
int3
sub
outsb
arpl
into
loope
rclb
inc
and
add
add
sub
ss
xchg
mov
jns
out
push
xlat
cmp
vpinsrw
scas
movsb
shll
cltd
or
inc
in
jmp
cmova
into
cld
ret
or
dec
ret
ja
add
cmp
daa
fcom
xor
into
test
ljmp
cwtl
aad
pop
cmp
call
bound
push
inc
ret
lock
and
ret
lods
or
lahf
lret
push
xchg
movsl
mov
add
das
lea
psubsw
repz
push
xor
je
mov
and
add
mov
bound
jg
add
adc
test
jp
daa
inc
fwait
sub
jmp
jns
nop
out
shr
adc
test
mov
in
ret
inc
xchg
adc
outsl
and
pop
sbbb
and
cwtl
jbe
mov
out
sbb
and
aad
xor
jns
jo
adc
into
mov
lods
mov
pop
fbstp
xchg
std
pop
inc
inc
icebp
imul
add
cld
incb
jns
push
mov
in
aad
fildl
cmpsl
mov
in
inc
dec
inc
or
jnp
out
loopne
jmp
icebp
scas
nop
ss
out
add
or
and
cmp
out
repz
stos
push
stos
mov
or
add
and
jge
add
inc
fnstenv
rorb
mov
pop
icebp
sub
inc
add
bswap
das
aaa
loope
jne
in
mov
clc
and
int
or
lds
ror
into
in
stos
aad
int3
divl
leave
lcall
cmp
daa
or
pop
add
push
das
pop
ret
mov
outsl
insl
xchg
mov
mov
add
inc
jle
ss
xlat
leave
les
icebp
mov
das
pop
int3
fadd
or
adc
je
stc
filds
xor
or
das
stos
mov
xchg
mov
rolb
jle
add
incb
cmp
aam
ja
xchg
mov
push
daa
insl
push
out
ja
jns
xchg
dec
out
push
out
or
into
xor
out
fs
mov
jnp
fsubl
pop
inc
cwtl
jnp
adc
stos
fstps
out
pushf
jno
mov
loopne
ss
cmp
repz
sarb
xchg
dec
pushf
sbb
mov
push
jle
mov
pop
repz
inc
or
inc
push
inc
inc
push
or
inc
es
cli
cs
test
mov
cmpsl
scas
pop
cwtl
add
adc
shrl
jb
mov
mov
fsts
out
xor
mov
out
out
sbb
push
std
lahf
or
inc
mov
leave
js
bound
nop
ljmp
aas
sarb
push
adc
adc
ja
or
testb
repz
add
mov
lods
pop
jns
sub
or
dec
or
jns
add
adc
out
inc
xor
add
test
and
insb
mov
ret
push
fdivrl
mov
mov
mov
clc
mov
jp
pop
push
cmp
inc
jnp
dec
into
out
dec
iret
gs
pop
dec
fucompp
xlat
out
add
jge
rcr
ss
mov
arpl
lcall
subb
inc
or
dec
bound
test
out
adc
mov
pcmpgtw
pop
push
pop
pop
xchg
mov
aad
popf
mov
pusha
mov
cltd
and
adcb
sub
dec
inc
ds
push
out
sbbb
cmp
add
inc
and
fisubrs
pop
mov
add
ficoml
add
gs
and
out
repnz
add
adcl
mulb
add
adc
pop
mov
mov
lods
or
fiaddl
setnp
mov
dec
ja
outsb
pop
insb
aad
mov
lods
mov
pop
aad
push
xchg
inc
mov
std
pop
inc
xchg
push
dec
jns
repz
jl
xorl
mov
fdivp
jmp
popf
aaa
bound
lcall
shl
mov
mov
mov
inc
mov
pop
xor
cmp
out
in
scas
inc
jmp
xor
imul
sti
aad
mov
mov
jns
mov
jmp
pop
dec
gs
sub
cmc
in
aam
lea
cmp
fs
inc
inc
lods
int3
out
fs
int
xchg
adc
dec
das
outsl
in
out
push
sahf
lods
das
je
pop
xor
idivb
les
jl
cmpsl
mov
lret
fs
jmp
icebp
lahf
iret
mov
in
into
or
pop
push
xchg
jnp
gs
hlt
ret
adc
imul
stos
ss
fsts
sbbl
ljmp
sti
aam
pop
in
sub
fsub
inc
adc
or
aam
adc
flds
sbb
lret
or
clc
xchg
xor
dec
ljmp
test
out
mov
lcall
lret
fimull
setl
cmp
inc
jmp
push
mov
push
out
mov
fld
inc
cmp
sub
sbb
xor
xor
cltd
ja
outsb
aam
mov
lods
cmpsb
outsb
pop
fstl
loope
test
pop
inc
sub
pop
mov
xor
ds
popf
jle
roll
inc
es
mov
dec
mov
scas
inc
adc
nop
jns
pop
inc
into
pop
push
pop
sti
mov
pop
fs
in
inc
adc
out
dec
popf
gs
cmpsb
int3
xlat
or
adc
sbb
leave
xchg
jmp
repnz
sti
sub
nop
loop
jne
hlt
lds
std
sbbl
add
xchg
ja
into
popf
jg
add
or
sbb
mov
jns
sub
sub
fsub
inc
stos
push
mov
mov
jge
in
xor
inc
popa
sbb
jmp
inc
es
adc
adc
or
mov
inc
or
push
rorl
add
adc
xor
xor
sarb
mov
les
add
adc
or
aam
cmp
fs
lcall
mov
mov
ret
sbb
jl
xor
jge
stos
sti
pop
aas
out
jmp
sti
lock
popf
cmp
xor
jo
mov
lods
or
testl
xchg
jns
or
cltd
out
inc
mov
sub
jnp
daa
inc
sahf
push
rcl
flds
cld
lahf
or
and
hlt
inc
es
call
leave
rol
pop
dec
fwait
xor
add
or
test
add
pushf
jns
loopne
dec
mov
mov
adc
test
pop
aaa
pop
push
gs
jno
xchg
add
mov
out
fwait
addr16
jae
call
jl
push
sahf
iret
mov
xor
xchg
push
stos
sub
les
daa
mov
sti
jge
out
add
cmp
jae
cs
inc
mov
mov
arpl
add
arpl
in
shll
push
add
int3
adc
lahf
sbb
mov
cwtl
test
out
or
xor
icebp
pusha
jp
jmp
inc
or
jne
mov
jb
mov
into
add
dec
les
cmp
mov
mov
ljmp
es
or
aas
mov
add
mov
or
stos
pusha
sub
dec
cs
out
sbb
shr
adcl
sub
cmc
pop
or
mov
loopne
in
xor
inc
add
jmp
js
outsl
jno
aad
mov
lods
scas
stos
pop
out
and
pop
inc
xchg
jns
ss
addr16
gs
cmc
mov
dec
pop
int3
sub
stos
clc
out
add
push
pop
out
push
dec
cmp
inc
loope
out
rcll
mov
aaa
push
roll
ljmp
fwait
mov
test
icebp
pusha
cmp
outsl
ja
arpl
enter
add
add
addl
or
adc
shll
xchg
js
and
mov
mov
dec
inc
es
mov
cmp
xchg
add
mov
xchg
into
inc
xor
push
rcr
cmp
stos
fcompl
out
out
cli
test
in
mov
xchg
ja
scas
sbb
das
ljmp
sbb
fs
pop
dec
jnp
inc
pop
inc
ljmp
fidivrl
ljmp
add
and
and
jge
jmp
ljmp
stos
cmpsl
jp
rclb
cs
cmp
stc
cwtl
lea
pop
cwtl
loopne
mov
je
dec
mov
fnstcw
sub
outsl
repnz
mov
cmp
jg
add
out
outsb
mov
mov
les
mov
or
subl
jns
flds
les
cmc
inc
es
sbb
lea
in
pop
cld
insl
js
les
out
mov
add
sahf
nop
ljmp
out
sarb
dec
fldenv
push
adc
repz
movsl
pop
fwait
inc
or
scas
std
push
add
popf
sub
adc
adc
sub
loope
andl
aas
fldln2
pop
mov
and
mov
mov
mov
addl
rcrb
lds
jno
out
pushf
ror
add
hlt
inc
int3
fnstenv
push
shll
imul
ljmp
add
inc
insl
lock
xor
xor
gs
jnp
fnstenv
cmp
out
icebp
cmp
add
pushf
mov
adc
sub
movb
decl
shll
addl
cli
mov
vmovupd
cmp
push
dec
inc
mov
ljmp
jmp
push
cmp
popf
mov
jne
and
int3
push
cmp
pop
xchg
lahf
into
popf
mov
dec
scas
push
inc
push
sbb
in
adc
enter
gs
push
imul
dec
rcl
ds
insb
jmp
es
ret
mov
fxch
cmpsl
call
in
jbe
dec
adc
sub
stos
mov
testl
insb
push
sbb
xlat
pop
pop
insl
testb
jmp
jge
cltd
in
stos
mov
jge
mov
in
dec
daa
cmp
jns
jmp
jecxz
stos
push
inc
xchg
jbe
add
adc
pop
mov
test
xor
and
jle
push
sti
aam
inc
nop
mov
mov
xor
decl
jecxz
insl
jbe
les
cwtl
in
dec
jo
fsub
inc
into
adc
bound
push
insb
xlat
inc
call
inc
es
mov
dec
mov
int
mov
add
aam
inc
jbe
push
mov
xor
or
sub
les
xor
fwait
lds
rcrb
fidivl
sbb
std
out
pop
std
mov
jmp
jecxz
xchg
mov
and
std
sub
push
loop
push
aad
mov
into
jp
lock
in
popa
push
add
add
jbe
pusha
fldenv
fsubrl
jo
xchg
jl
xor
aam
mov
mov
gs
or
push
aam
pop
ficomps
sbb
xor
arpl
lea
jno
filds
xlat
jbe
mov
add
sahf
scas
das
test
mov
ds
cmp
dec
push
repnz
fnstcw
mov
movb
sbbb
lahf
jl
mov
xorl
movsl
mov
lret
rcl
aaa
push
jno
jle
dec
adc
daa
add
xchg
loope
mov
lods
ja
add
mov
xchg
shll
push
xor
cmp
cvtps2pi
inc
daa
mov
in
push
jmp
es
sbb
adc
ret
rol
pop
jge
inc
insl
ja
les
mov
push
out
add
xchg
cwtl
lcall
outsb
insb
sub
pop
setnp
jmp
pop
out
mov
aad
std
dec
xchg
dec
pop
mov
dec
or
pusha
cmp
mov
and
addr16
push
shll
xor
ror
or
jle
pusha
loope
wbinvd
push
cld
outsb
or
jmp
pusha
xchg
adc
je
pusha
cmp
repz
xchg
mov
shl
clc
jae
sti
mov
pop
arpl
mov
das
xor
adc
and
das
test
jns
cmp
movsb
aad
mov
lods
movsl
int
aam
das
mov
pop
inc
shrb
cmp
add
xchg
dec
mov
add
xor
cmpsb
add
push
or
pusha
and
call
fwait
jno
clc
cld
add
lds
cwtl
fs
fnstsw
mov
pop
jae,pn
lret
and
fsub
call
inc
addr16
icebp
popa
data16
lock
and
repz
es
adc
push
gs
mov
xchg
cmp
sub
sar
sbb
inc
pop
inc
cmp
pop
insb
inc
push
push
sub
es
pop
out
adc
dec
sub
lock
in
in
lahf
jnp
add
mov
push
or
les
in
hlt
inc
es
ret
rol
pop
jne
jbe
ja
les
sbb
inc
fwait
out
inc
fldl
jmp
cmpsl
call
rorl
ljmp
cmp
cmpb
mov
cmpsb
xor
pop
lret
out
sub
fsubr
dec
xchg
jge
call
jp
stos
scas
data16
and
mov
js
jne
push
notb
mov
std
mov
add
adc
jmp
or
dec
mov
inc
scas
pop
jge
mov
imul
stos
jne
hlt
mov
rolb
cwtl
flds
inc
cltd
in
mov
add
mov
jo
ret
daa
push
aaa
xchg
es
cmp
jl
pop
xor
mov
cmp
test
or
push
sarl
daa
inc
popf
push
or
jns
push
pusha
aaa
jl
mov
jmp
ljmp
repnz
dec
sbb
inc
cmp
mov
adc
aaa
jns
bound
adc
ret
std
mov
jmp
xchg
sub
ljmp
faddl
cmpsl
ret
pop
and
inc
push
cmp
push
arpl
push
in
out
inc
es
sub
std
lcall
jns
pop
push
inc
mov
in
fstps
cmp
xchg
nopl
icebp
loope
inc
dec
fcmovbe
bound
js
pusha
lods
dec
jmp
stos
daa
push
push
out
and
mov
rcrl
and
or
push
sub
xchg
bnd
int
out
inc
es
pusha
pop
xchg
cmp
push
hlt
test
push
pop
mov
add
jl
pop
or
mov
cmp
repz
shlb
xor
popa
in
mov
fwait
ljmp
push
sti
shll
xor
flds
std
fwait
daa
sbb
fcompl
in
out
jbe
repnz
mov
ljmp
fwait
inc
mov
fistpl
ljmp
fwait
add
lcall
xorb
add
xchg
jne
sbb
mov
jge
je
sbb
test
gs
add
pop
out
xchg
in
push
push
xor
shrl
pop
insb
sub
ljmp
mov
aaa
fdivrs
inc
lcall
dec
push
pop
cs
jecxz
dec
mov
sub
sub
xor
jnp
mov
mov
pop
bound
ds
push
ljmp
ss
ss
ljmp
outsb
sarb
jmp
out
in
fisubrl
ljmp
mov
cmp
js
cs
out
mov
popa
stos
cmpsl
out
dec
mov
pop
pop
pop
add
cs
leave
push
dec
dec
lcall
push
jl
push
daa
arpl
in
shll
mov
add
jne
je
mov
mov
mov
inc
push
ja
mov
add
sti
mov
mov
dec
xchg
dec
add
mov
cmpsl
inc
xchg
add
mov
imul
fmull
xchg
jge
or
dec
mov
xor
test
push
cld
popf
dec
jnp
sub
and
mov
sub
fcompl
out
icebp
or
jle
popf
pop
jmp
jmp
es
jns
add
les
xchg
dec
xchg
push
in
repz
es
adc
or
filds
xchg
jo
and
cltd
or
inc
fsubr
dec
jns
pop
inc
sub
mov
cmp
add
push
lods
or
unpckhps
adc
fs
jecxz
imul
sti
shr
mov
push
sarb
mov
outsl
enter
inc
cs
pushl
fdivl
adc
hlt
ljmp
xchg
push
jns
add
dec
dec
or
push
jg
mov
pop
vcvtsd2si
jmp
inc
sub
test
sub
iret
pop
fiadds
jmp
pop
gs
dec
loope
mov
in
lahf
addb
jnp
in
inc
fwait
mov
rorl
insb
cmc
aam
mov
lods
xchg
xchg
pop
shrl
pop
mov
bound
out
stc
cmp
add
mov
lret
mov
lods
adc
lret
cmp
popa
dec
mov
cs
cmp
inc
mov
jecxz
jmp
outsl
adc
or
push
fisttps
sbb
dec
pop
fists
push
stos
add
mov
das
ret
mul
sub
lret
adc
cmp
test
shll
ret
add
mov
jo
add
add
inc
mov
dec
xor
lods
or
mov
and
adc
fs
testl
jl
mov
fnstsw
push
test
mov
pop
lret
cs
movsl
mov
jmp
cmp
and
repnz
es
cmp
sbb
mov
out
lock
fsub
inc
out
jle
add
pusha
adc
imul
into
jmp
call
scas
mov
adc
push
sub
lcall
dec
xor
jg
movsl
or
fs
lcall
int3
out
sahf
ljmp
push
cmp
add
xchg
ficomps
dec
cltd
ja
add
pop
ss
ljmp
shll
pop
inc
les
mov
lret
gs
hlt
inc
es
mov
pop
jne
add
add
ljmp
mov
cmp
int
les
xchg
cmp
jmp
inc
es
cmp
jge
push
into
jmp
xor
mov
xor
ds
fwait
repnz
adc
sarl
and
out
in
cmp
outsb
jbe
les
fistps
add
xchg
shll
xchg
jns
inc
and
mov
cli
aam
dec
fsubl
pop
out
xor
xor
cltd
adc
cs
test
repnz
out
stos
jle
push
in
loopne
push
dec
push
pop
test
mov
dec
arpl
pop
lcall
adc
mov
ret
cmpsb
out
fcomip
ds
lcall
lret
call
loopne
jmp
jne
in
mov
out
popf
adc
loope
jb
scas
dec
adc
inc
das
sarb
fsubs
test
addr16
int
xor
mov
mov
or
popa
mov
stos
cwtl
and
aas
pop
popa
xor
sarb
mov
dec
out
shrb
pop
lea
aas
jne
in
dec
ss
push
inc
mov
cmp
int3
pushw
hlt
mov
les
pop
inc
jecxz
les
inc
cs
push
xchg
movsb
test
ds
jg
fidivs
push
adc
jns
add
or
adc
pop
adc
push
jo
cmp
mov
ret
ljmp
stc
jmp
es
pop
fnstcw
cs
or
jnp
pusha
pushf
mov
xchg
add
pop
jecxz
lods
les
arpl
arpl
mov
dec
roll
lcall
int3
out
pushf
pop
sbbl
jns
mov
or
pusha
mov
pop
loopne
sti
xchg
and
outsb
or
pusha
and
xor
movsb
jmp
and
pop
mov
and
push
loop
push
lcall
or
aas
push
push
out
mov
test
addr16
adc
cmp
seta
rcrb
xchg
push
push
popf
test
add
pop
bts
cs
dec
mov
sbb
insl
jl
les
push
int
rclb
dec
adc
outsb
pop
ljmp
xor
push
rorl
inc
es
sub
icebp
pop
dec
adc
bound
sub
mov
repnz
sarb
pop
je
and
jne
loop
mov
cmpsl
jecxz
loop
call
arpl
dec
xor
cwtl
pusha
xchg
or
in
pop
push
xchg
inc
adcb
ljmp
lahf
stc
sub
xchg
int
xchg
jae
hlt
ret
push
xchg
push
adc
jl
roll
inc
es
xchg
pop
stos
fisttpl
jl
aad
ret
leave
or
sub
adc
fisttps
mov
outsl
dec
inc
aad
mov
lods
cmpsl
xchg
pop
fdivp
xchg
mov
std
pop
inc
inc
call
sbb
movb
sub
in
xchg
cwtl
jecxz
mov
mov
test
or
pop
and
fdivrp
cmc
mov
arpl
push
lcall
dec
divl
hlt
ret
je
call
fdivr
out
mov
flds
jmp
fwait
cmp
imul
fbld
mov
je
cs
jbe
mov
push
sbb
call
popw
or
loopne
arpl
jo
pop
int
jo
xor
add
push
es
es
ja
cmpsb
in
aad
mov
cmpsl
stos
or
or
mov
out
xchg
add
int3
lret
pop
popf
inc
pop
push
adc
sub
insb
inc
aam
loope
rorl
out
mull
adc
adc
fbstp
sub
mov
and
cmp
add
mov
fadds
mov
stos
fstpl
out
mov
lret
ficomps
in
rcrb
cmp
nop
jle
icebp
mov
fnstenv
lret
rol
or
lods
aaa
adc
fwait
or
dec
pop
insb
outsl
ljmp
pop
jp
cmp
fnstsw
daa
aas
cltd
lcall
cs
mov
orl
pusha
dec
mov
jo
mov
aad
js
pop
lahf
aam
aam
pusha
add
ja
mov
push
stos
mov
xor
mov
jmp
ljmp
adc
cmp
inc
cmp
popf
sub
rorb
pusha
mov
xchg
sbb
dec
imull
jle
into
jmp
scas
in
mov
push
lret
add
push
jbe
mov
js
movsl
test
lret
inc
imul
in
xlat
xor
stos
push
stos
or
jns
push
outsb
and
pop
in
add
fs
pop
adc
orb
out
pop
repz
insb
cli
adc
pop
mov
in
aad
rcrl
sub
push
sbb
in
aas
sarl
rorl
sbb
add
inc
cmpsb
stc
cmp
jmp
out
cwtl
jns
add
cmpsl
call
rorl
ljmp
ds
mov
je
add
dec
jbe
inc
lods
outsl
push
adc
incl
jmp
jge
mov
or
sub
sub
mov
cmp
push
test
mov
or
aad
jnp
aas
mov
dec
out
mov
daa
ljmp
xor
sbb
jmp
mov
out
std
mov
lahf
or
dec
jp
add
enter
dec
or
lods
dec
inc
lcall
out
or
fs
daa
es
cmp
int
mov
mov
push
inc
les
les
arpl
icebp
inc
es
adc
cs
jmp
jo
add
jmp
or
xor
mov
cmp
xlat
call
pop
add
mov
aad
incl
mov
pop
popa
mov
adc
test
lea
pop
test
std
mov
daa
dec
push
in
mov
push
add
dec
loopne
stos
les
lea
divb
stos
iret
jns
mov
dec
je
sub
out
pop
mov
cwtl
int
popa
add
pop
sbbl
pusha
sub
pop
loope
or
sub
loope
rcll
jp
add
add
mov
jbe
or
inc
add
sub
test
rcrl
std
pop
mov
jmp
loopne
add
xchg
add
mov
outsb
or
imul
cmp
testl
aad
mov
lods
mov
pop
leave
sbb
lea
mov
std
pusha
dec
xchg
mov
test
push
adc
pop
mov
push
adc
sbb
lock
adc
jbe
mov
aam
fincstp
mov
in
push
into
test
inc
pop
enter
arpl
in
mov
add
cmp
fidivl
inc
xchg
nop
out
or
push
xor
sbb
fisubrl
xchg
rclb
leave
mov
inc
notl
aam
sub
pop
or
lcall
in
roll
inc
int
sub
jecxz
popa
push
inc
jnp
jb
rcl
mov
lods
xchg
std
pop
stc
push
cltd
outsb
mov
std
pusha
dec
lcall
inc
lcall
out
or
mov
inc
daa
es
cmp
inc
jle
push
cmp
fs
add
ficoml
sbb
paddq
add
jbe
insl
jae
aad
mov
lods
jne
rol
mov
sbb
mov
std
pop
inc
lods
sub
iret
xchg
imul
pop
mov
mov
jbe
mov
das
push
adc
jp
add
pop
bound
inc
es
cmp
adcl
or
inc
sbb
mov
pop
sub
jno
in
sbb
xchg
push
dec
adc
pop
mov
shlb
mov
pushf
jg
jnp
fs
negl
mov
roll
ljmp
cs
mov
ret
jl
les
adc
je
sti
enter
cmovle
into
jo
pop
dec
add
rorb
cmp
paddq
dec
xchg
jbe
loop
stos
aam
aas
out
scas
sti
mov
rol
jmp
popf
xor
jge
ror
jmp
aas
out
sub
fmuls
lock
cmp
dec
es
inc
sub
in
test
aad
mov
push
xor
inc
dec
inc
or
inc
nop
ljmp
adc
movsl
scas
mov
mov
mov
dec
jl
testb
jns
mov
jbe
mov
pop
and
pop
add
cs
das
arpl
notl
and
ja
lock
jnp
out
data16
sub
es
aaa
imul
and
jp
cmp
gs
jne
rcl
dec
cmp
in
xchg
pushl
cmp
aas
adc
sti
mov
lretw
xor
mov
or
flds
popa
push
jns
cwtl
jp
push
insb
js
xchg
inc
int3
int
jmp
mov
aad
adc
cmp
jmp
jge
aad
mov
stc
outsl
jmp
jb
cmpb
out
fs
sub
and
push
lods
push
popf
sbb
jmp
adc
out
lcall
pop
subl
mov
mov
jmp
negl
stos
lret
pop
aas
out
dec
sti
rol
add
jmp
popf
cmp
mov
sub
sub
cltd
les
push
stos
add
jle
jmp
jmp
push
les
sub
cmp
push
cmp
iret
mov
push
pop
push
lahf
sarl
rdmsr
jge
mov
jecxz
dec
jbe
jbe
mov
in
repnz
cmp
pop
jmp
or
sub
roll
bound
mov
mov
and
mov
std
lods
sbb
xchg
inc
mov
shll
das
jecxz
sub
adcl
fs
lcall
sbb
vpslld
ds
in
dec
jo
ljmp
js
mov
outsl
outsb
cltd
lcall
xchg
outsl
cmp
sub
aam
mov
cmpsb
inc
or
cmp
in
cmp
push
sti
frstor
aas
cltd
lcall
mov
pop
cmpsl
adc
xchg
lret
jno
xor
push
add
mov
fs
pushf
inc
mov
pop
pop
repz
push
sbb
mov
icebp
cli
scas
dec
sbb
das
pop
mov
aaa
jl
jo
shrl
pop
push
xor
and
mov
mov
jle
xchg
pop
idivl
in
sub
sub
pop
mov
xchg
dec
dec
aas
sub
js
andb
in
rorb
or
adc
gs
insl
and
outsb
adc
xor
inc
jbe
mov
imul
fbstp
xor
jnp
xchg
mov
in
inc
fwait
mov
jmp
inc
jae
fcmovbe
loope
and
pusha
xor
lods
std
popa
dec
inc
fwait
repnz
xor
jle
mov
loop
cmpsl
roll
push
test
adc
sub
fsubl
add
inc
push
adc
pop
dec
cld
mov
stos
inc
adc
repz
in
add
pop
add
sbb
jmp
adc
mov
inc
into
or
sub
sbb
shll
add
jmp
es
call
insl
mov
xor
pop
jmp
inc
inc
sub
mov
xchg
push
mov
sbbb
cld
repnz
add
inc
inc
xchg
orb
xor
mov
mov
xchg
cmp
sti
or
sbb
jle
push
inc
mov
cmp
cwtl
jle
adc
pop
mov
test
insb
cmp
aas
cpuid
test
cmc
movsl
flds
ljmp
insb
mov
jns
push
adc
aad
rol
or
xchg
sbb
cmp
out
out
shlb
xor
popa
dec
and
mov
sub
aad
les
outsb
cmp
adc
mov
mov
stos
xchg
add
inc
loope
jmp
sub
or
xchg
test
out
sbb
cld
fildll
es
bound
and
rcrl
ljmp
setge
sbb
mov
arpl
out
out
mov
shll
and
adc
sub
sub
inc
pop
aad
rol
add
lahf
jg
aam
add
outsb
pop
and
sti
aam
jg
or
mov
shl
rol
or
stos
xchg
sti
cld
fwait
pop
inc
nop
add
mov
jne
subb
int3
inc
es
jns
jge
insl
popf
std
aas
push
mov
sbb
xchg
sti
movsb
jns
add
add
mov
push
adc
call
aam
loopne
arpl
pop
pop
pushf
sub
lret
cmpsb
lds
js
aad
into
movsb
cmpsl
lds
pop
in
pop
dec
inc
adc
xor
mov
fcomi
test
sbb
inc
fwait
push
das
cltd
loope
push
xchg
sbb
add
pop
out
or
dec
imulb
dec
imul
and
pop
rcll
shlb
pop
repz
xchg
sbb
cs
ljmp
arpl
and
pop
jle
test
inc
es
xlat
fwait
out
dec
lret
gs
mov
sub
pop
cmc
aad
repnz
or
psllw
pushf
repnz
shr
fdivrs
arpl
ljmp
jl
jae
nop
aad
mov
lods
mov
cmp
sub
in
jns
pop
inc
add
and
inc
jnp
mov
push
adc
xor
es
sbb
mov
out
sub
aaa
pop
test
add
adc
pop
mov
rcll
insb
add
cmp
fwait
jle
popf
pop
out
add
xchg
cmpsl
out
push
pop
cltd
rorl
mov
arpl
mov
es
mov
jne
add
sub
fsub
inc
test
xor
es
fiadds
jmp
lcall
dec
pop
nop
test
dec
sbb
in
in
lahf
xorb
xchg
fcomp
jmp
mov
fnstcw
sub
add
xchg
mov
jle
aad
mov
arpl
push
xorl
into
mov
push
lcall
mov
stos
das
pusha
sub
push
popf
faddl
cmp
fwait
or
xchg
jnp
jb
jge
shlb
leave
fnsave
pusha
dec
into
adc
shll
ret
dec
push
imul
sub
repz
movsl
xchg
dec
or
sub
sub
std
inc
les
mov
mull
inc
inc
out
in
insb
inc
sub
or
or
inc
es
inc
gs
insl
cmp
fucomi
out
xor
popa
jns
pop
jbe
pop
stos
cmp
ljmp
xlat
add
jns
add
nop
aaa
out
repz
adc
add
in
out
lahf
jle
or
and
or
les
je
popa
shr
repnz
es
cmp
andl
stos
push
std
lahf
or
inc
shr
fsubs
xchg
cmpsl
jmp
roll
ljmp
adc
mov
sub
cmpsb
add
mov
fidivrl
negb
xor
pop
pop
inc
sbb
out
lods
fcompl
hlt
cmc
jmp
pop
mov
cmp
loop
or
xchg
cmpsb
pushf
shl
dec
add
repz
arpl
in
mov
adc
ss
and
in
jecxz
test
xlat
fmul
outsb
add
and
ljmp
or
jns
insb
add
in
inc
fwait
insl
jl
les
sub
dec
jne
hlt
jp
sub
jmp
mov
stos
hlt
insb
or
ficoml
setge
dec
adc
pop
mov
mov
inc
sbb
das
push
orl
aam
cld
lods
sarb
iret
adc
or
and
cmp
fucomi
in
ss
jmp
testl
out
adc
in
sub
loop
out
jbe
pusha
scas
hlt
repnz
out
fisubl
xchg
loop
test
shll
iret
insl
je
test
jge
jle
jbe
mov
jne
cwtl
mov
or
sub
sub
into
sti
ret
adc
sbb
inc
mul
push
insb
ds
inc
es
cmp
cmp
subb
cmp
fucomip
out
scas
push
pop
jns
pop
out
shll
lods
sub
xchg
mov
stos
cmp
mov
jp
cs
inc
dec
inc
or
and
push
mov
mov
xchg
fs
data16
fmul
xchg
jns
inc
out
or
mov
jmp
jge
push
ret
jne
jge
lret
adc
add
popa
inc
je
in
pop
xchg
adc
fdivrs
fdivrl
lea
jge
jle
fwait
or
xchg
mov
or
cwtl
mov
adc
pop
mov
test
insb
or
aas
cpuid
test
lret
jbe
not
sub
hlt
cmp
cltd
mov
out
data16
sbb
or
inc
ja
mov
into
ja
sub
ljmp
xor
mov
and
adc
sub
mov
jne
xchg
pop
test
in
aad
fnstcw
cmpsl
call
in
jbe
dec
adc
jecxz
ds
ja
add
add
inc
mov
push
ss
in
inc
es
stos
fbstp
mov
addr16
or
inc
sbb
inc
jmp
or
stc
hlt
sub
sub
jle
cli
test
pop
xchg
ja
mov
aas
out
sbb
mov
and
fucomi
rcrb
cmp
xor
idivl
les
out
jp
daa
inc
popf
call
lock
pop
jmp
jns
js
cs
pusha
jo
xchg
stos
bound
gs
xchg
pop
mov
jno
sbb
pop
sti
lahf
sar
jno
jae
cli
lahf
sti
sub
dec
pop
push
mov
adc
enter
cmp
jns
in
repnz
out
mov
fsts
push
jg
mov
lret
inc
insl
jbe
les
xchg
shll
lret
pop
out
inc
es
inc
test
and
cmp
push
fs
and
adc
sub
adc
aad
imul
int3
out
fs
push
mov
inc
dec
ds
loopne
sbb
fwait
sbb
movsb
ret
mov
push
imul
mov
jl
sbb
addr16
and
je
andl
mov
pop
sub
mov
icebp
jle
xor
xor
dec
add
sub
lret
and
add
add
test
sar
jmp
imul
rclb
pop
mov
mov
insb
cmp
inc
dec
fidivl
pop
test
pop
lahf
and
popf
jg
add
in
insl
mov
fisubl
jmp
xchg
jne
outsl
loope,pn
movsl
mov
xor
mov
fldenv
cli
push
ljmp
ss
call
sbb
in
outsb
dec
inc
adc
mov
cmp
dec
mov
sbb
inc
imul
fcom
xor
lods
inc
es
es
jge
rol
jmp
es
std
or
inc
jns
jo
int
scas
mov
lods
xorb
dec
mov
std
pop
inc
out
out
or
xchg
ret
mov
cmp
jne
pop
fisubrl
push
subl
call
ljmp
mov
test
inc
es
jmp
jo
es
mov
dec
aam
pop
inc
gs
and
cld
pop
pop
pop
sbb
fadd
pop
or
mov
out
pop
mov
rcll
gs
shrl
sub
jecxz
xor
add
int3
pop
add
mov
popf
sbb
jmp
fmull
test
adc
sub
jmp
add
sahf
paddusw
pop
xor
add
int3
sub
les
lcall
xchg
sahf
inc
flds
jmp
push
jmp
push
in
mov
xor
leave
ljmp
cmc
ret
lret
push
inc
push
push
mov
je
cs
dec
psrad
sbbb
iret
xchg
dec
add
lock
mov
js
jo
push
dec
add
jle
cld
test
std
roll
cli
jl
mov
sub
out
xchg
dec
xor
add
inc
or
pop
inc
push
insl
js
les
outsl
jl
add
xchg
js
movb
pop
aas
out
xor
stos
mov
jge
enter
aam
es
test
out
mov
pop
jge
out
data16
cmp
adc
es
jge
je
data16
mov
lods
mov
pop
jmp
push
mov
bound
adc
inc
jle
pop
push
inc
fwait
mov
cld
test
iret
add
xlat
aaa
ljmp
nop
pushf
movsl
dec
and
fdivs
jne
mov
test
mov
pusha
mov
mov
jmp
pop
mov
mov
pop
aam
or
dec
sbb
aas
enter
pusha
mov
jnp
add
stc
adc
pop
cli
sub
xchg
inc
test
mov
mov
mov
push
mov
mov
mov
fistps
mov
add
push
cltd
out
jne
test
xor
cmc
daa
inc
sahf
and
add
sub
ss
negl
push
icebp
mov
fstps
rol
or
int3
pop
add
in
pop
jns
pop
dec
cltd
jl
mov
stos
add
out
es
cmpsl
stc
xchg
clc
jmp
popf
aaa
bound
jbe
insl
ds
ret
mov
lods
lods
lea
jns
sar
jge
pop
inc
or
divb
sarb
popa
fiadds
jmp
dec
cltd
outsl
gs
pop
inc
movsb
insl
ja
les
xchg
addl
jne
lret
xor
push
pop
mov
fimull
mov
les
inc
in
jle
dec
adc
xor
daa
cmp
lods
and
lret
sub
or
nop
xor
push
xor
mov
inc
roll
jp
daa
inc
pushf
mov
mov
push
adc
stc
pop
push
fildl
lods
iret
jns
mov
pop
les
dec
inc
pop
xchg
gs
std
outsl
lods
popf
xchg
xor
xor
js
lock
or
ja
cmp
pop
and
pop
ja
inc
mov
push
in
outsl
adc
adc
mov
adc
pop
gs
cmp
pushf
jge
add
cmp
fcmovnb
pop
out
lahf
subl
cmp
pop
inc
lcall
roll
ljmp
adc
pushf
ljmp
mov
adc
mov
arpl
sub
sub
cltd
les
push
mov
mov
inc
data16
mov
aad
int3
inc
cmpsl
stos
add
dec
inc
push
std
popf
add
or
mov
fnstcw
cs
xchg
js
popw
adc
subl
sub
negl
gs
mov
shll
fs
cld
push
dec
cmp
lcall
or
stc
ss
or
cs
test
push
mov
loopne
cmpsl
mov
xchg
adc
xor
fidivl
clc
sbb
jae
pop
lahf
dec
mov
pop
pop
repnz
mov
cli
sub
aam
cmp
mov
inc
mov
sahf
mov
xchg
dec
pop
and
inc
ja
mov
aas
daa
movsl
sub
ljmp
adc
or
pop
cs
stos
pusha
inc
jnp
push
call
add
ja
lock
jnp
out
data16
sub
adc
pop
loopne
jmp
sbb
out
std
mov
sarb
or
aad
xor
add
mov
aad
fwait
and
dec
je
stos
mov
mov
pop
stc
notl
push
sub
lahf
int
fmul
jbe
imul
cmp
add
mov
dec
xorl
ljmp
test
out
sbb
push
mov
mov
dec
or
bound
pop
mov
lds
lahf
int
cmpsb
jnp
test
and
mov
jmp
stc
je
mov
jo
in
pop
out
mov
filds
iret
or
pusha
aaa
adc
pop
mov
sbbb
jg
add
mov
or
fucomip
add
xchg
in
je
aad
test
and
push
sbb
ds
cmc
lret
and
pop
int3
jmp
lret
xlat
bound
jbe
cmp
sub
test
sub
dec
jnp
daa
inc
fwait
pop
mov
out
xor
mov
mov
cli
adc
cmpsl
push
in
in
lahf
jge
andl
flds
jmp
je
sbb
jmp
mov
pop
aas
out
data16
mov
mov
xor
lcall
rorl
mov
jno
push
addl
out
in
bound
jl
les
outsl
xchg
mov
dec
mov
push
push
xchg
jns
pop
insb
sub
ljmp
cmp
out
cs
xor
sbb
add
add
sub
pop
jmp
out
pop
lods
lahf
roll
push
lcall
mov
fs
push
cmp
int3
outsb
or
add
cs
aaa
lret
xor
les
mov
jae
cs
and
mov
cmp
mov
xlat
bound
rcll
mov
sbb
sub
dec
outsl
lods
test
and
ss
sub
xlat
je
cmpl
das
push
jmp
xor
pop
jge
negb
inc
test
scas
lcall
and
pop
xlat
mov
lret
push
fistps
push
in
repnz
or
push
ljmp
mov
add
cs
mov
sbb
mov
mov
push
push
xor
push
dec
inc
sysret
frstor
cmp
loop
mov
cmp
test
add
frstor
inc
fwait
ja
ss
data16
aam
lock
fsts
pcmpgtw
daa
dec
add
out
repnz
cs
and
cltd
jns
cs
mov
ds
cmp
cmp
gs
push
jns
popl
sbb
jp
push
pop
lret
lahf
shrb
mov
adc
out
imul
pushf
sbb
jns
pop
inc
add
inc
xchg
add
xor
push
adc
pop
enter
imul
pushf
aad
jmp
outsb
jbe,pt
pop
push
hlt
imulb
aaa
popa
cvtdq2ps
adc
dec
cwtl
and
pushf
pusha
imul
push
rcrl
out
sub
xor
lds
push
fnstenv
das
ljmp
into
ret
aas
out
arpl
mov
add
mov
je
cs
jno
fldz
push
nop
mov
arpl
inc
adc
ret
repnz
ja
aam
ret
push
sub
mov
jecxz
fsubrs
fbld
add
inc
aad
aam
or
sub
ljmp
int
xor
addr16
jle
fldl
cmp
mov
cmp
out
daa
out
fcom
xor
das
js
xchg
jp
test
lods
stos
jns
mov
stc
sarl
jecxz
xor
fs
es
push
jmp
in
ret
push
or
jno
sub
mov
out
pop
cmp
push
jmp
cmc
les
in
xchg
mov
lret
push
stos
sub
jg
mov
sahf
jecxz
cwtl
sub
data16
mov
push
lcall
add
push
out
cmp
push
movsb
shrb
push
inc
les
in
cmc
inc
es
jge
mov
xchg
test
scas
add
mov
fs
cltd
pop
jmp
shll
add
mov
je
cs
push
jmp
cwtl
sbb
bound
negb
or
or
ror
in
addl
ljmp
aam
cmp
inc
adc
or
rcrl
sub
mov
loope
and
mov
ror
add
pusha
cli
adc
ja
dec
aaa
shll
xor
notl
and
fs
pop
movsl
dec
ds
aas
lahf
iret
sbb
enter
lods
iret
jns
jmp
into
pop
push
movsb
fdivrs
scas
lds
pop
inc
das
int
sub
inc
push
lcall
adc
or
dec
es
pop
int
les
sbb
lds
mov
xchg
inc
sub
cwtl
aad
pop
add
flds
pusha
jmp
prefetch
push
xor
into
xor
fs
movsl
push
es
fs
cs
jbe
mov
push
sbb
dec
and
pusha
mov
das
arpl
xlat
xchg
inc
mov
popa
out
sbb
in
sti
rolb
mov
pusha
dec
mov
in
cmc
test
add
js
pop
js
cs
aaa
sub
aaa
popf
jg
add
add
mov
out
out
push
adc
sahf
pop
dec
inc
scas
sar
inc
cmp
sub
add
jle
add
out
lret
aam
or
rcrb
sub
xor
jmp
jp
jno
dec
es
jns
mov
out
lods
shrb
jo
cmp
or
cs
fimull
inc
leave
jl
push
push
add
sub
fcomps
scas
mov
xchg
mov
adc
out
adc
enter
pop
and
movsl
fs
lcall
mov
xor
aas
iret
jmp
data16
add
mov
sub
or
jl,pt
fwait
jp
or
insl
cmpsb
xchg
in
into
and
sbb
stc
push
sbb
pop
cltd
pop
or
js
or
pop
mov
mov
mov
mov
aaa
xchg
pop
push
pop
in
sti
bound
jns
add
adc
push
fistps
mov
rolb
dec
out
ja
ljmp
dec
jno
xchg
fdivrs
cs
sub
outsl
insl
fstpl
add
xchg
jae
cltd
std
push
shll
ficompl
lahf
shll
mov
and
in
lret
mov
das
mov
lds
add
inc
mov
push
lret
pop
in
mov
aad
mov
scas
sub
inc
dec
iret
gs
mov
xor
aas
je
cs
jle
rorb
sub
xchg
int
mov
fs
rol
mov
mov
jecxz
sub
ret
gs
jge
in
sti
stos
jecxz
aas
out
fdivrp
enter
in
lock
cmp
add
sarl
sub
mov
cmp
jl
lcall
jmp
jmp
xlat
xchg
ja
andb
in
aas
out
pop
sti
mov
in
rcrb
imul
imul
fdivl
sub
jae
fbld
mov
je
cs
pop
push
pop
dec
sub
push
inc
pop
pop
enter
pop
lahf
dec
xor
negb
mov
cli
gs
mov
push
jbe
xor
ss
bound
push
repnz
fchs
mov
mov
out
in
in
stos
mov
push
sahf
mov
adc
or
dec
xchg
pop
ret
jge
fdivrs
loopne
pop
notb
pop
jbe
jecxz
xchg
iret
dec
andl
cmp
dec
xchg
jp
stc
mov
test
je
mov
popa
mov
jo
aas
lods
push
stos
dec
mov
fsts
std
aad
xchg
lods
add
int3
pop
ds
cmp
paddq
xchg
test
out
sbb
or
pusha
xor
or
stos
das
movsb
stc
jmp
mov
stos
sub
cwtl
dec
cs
xor
mov
loope
jne
hlt
out
pop
int3
jb
add
jns
scas
adc
mov
js
pop
adc
mov
jmp
or
jns
pop
jbe
ja
mov
in
je
sub
mov
mov
add
gs
stos
sub
mov
out
sub
out
ljmp
jns
inc
fwait
decb
sti
cld
popf
test
sarb
loope
movsl
xchg
out
mov
pop
lret
sub
ds
ja
rcll
jns
adc
mov
loop
out
or
inc
les
loopne
fucomi
out
inc
es
add
sub
sub
cmp
scas
cmp
ljmp
push
cmp
decb
sbb
jp
lds
cs
xchg
js
push
daa
mov
data16
mov
in
jbe
mov
add
ja
jae
mov
lea
jl
cmp
inc
dec
add
jb
mov
iret
mov
push
or
mov
and
pop
mov
adc
xchg
cs
xor
xchg
mov
arpl
insb
mov
fidivrl
or
mov
sub
dec
in
pusha
pop
outsb
sub
stc
cmp
jmp
pop
loopne
lret
cmp
int3
jge
sbb
xchg
cld
pop
loopne
or
movsb
push
sub
mov
aad
add
dec
adc
seto
xlat
mov
mov
xor
cmpsl
ret
mov
lret
jae
or
jmp
mov
pop
dec
loopne
mov
pop
out
xchg
out
lahf
sbbb
jge
in
mov
lahf
aad
mov
lods
lods
jge
fldt
cmp
mov
std
bound
out
lods
int
sub
xor
add
inc
outsl
aad
rol
or
add
cmp
icebp
or
sti
test
add
pushf
jnp
cmp
js
cs
fldl
int
mov
push
push
sbb
and
cs
fidivl
stc
loopne
pop
cwtl
pop
cs
lret
mov
inc
inc
int3
jnp
push
add
dec
dec
ficoms
inc
inc
data16
iretw
mov
ljmp
fwait
in
jle
dec
adc
xor
add
out
aas
dec
add
and
sbb
inc
push
push
adc
das
pop
insb
ds
fwait
jecxz
or
inc
outsb
xor
cld
push
test
mov
pop
push
cmpl
dec
xchg
push
mov
mov
les
out
or
inc
es
xor
or
sub
mov
sub
pop
stos
cwtl
cmp
mov
cmpsl
flds
dec
dec
adc
xor
cld
xchg
xor
cmp
and
imul
xor
push
shll
ljmp
or
fwait
inc
ja
adc
push
scas
shll
js
and
jo
or
or
xchg
stc
clc
mov
filds
and
sbb
sbb
js
and
mov
imul
in
addb
pushf
scas
cmp
leave
sub
jbe
int3
ret
les
sub
or
jle
cmp
call
ljmp
es
daa
gs
aad
or
aaa
loope
sub
ret
xchg
lods
mov
sub
dec
jne
sub
std
nop
mov
jge
mov
hlt
jmp
into
out
sahf
je
rol
loopne
dec
inc
jnp
mov
mov
stos
lcall
out
jo
mov
jmp
popf
xor
sub
pop
pop
roll
ljmp
adc
int3
push
xchg
std
lds
xor
and
or
inc
in
sub
sbb
jmp
cmpsl
out
jle
call
dec
es
test
mov
or
aad
sbb
pop
inc
or
push
adc
fwait
outsl
mov
and
cmp
cltd
jns
mov
add
push
nop
decb
popa
or
jo
mov
adc
aas
loope
or
fwait
sbb
lcall
outsl
dec
push
xchg
mulb
xor
leave
in
out
dec
gs
out
int
lcall
aam
jl
sahf
arpl
pop
push
repz
sbb
das
nop
fs
lcall
jo
jg
pop
push
out
xor
jo
xchg
test
jnp
test
inc
es
or
mov
rclb
pop
and
stc
dec
dec
pushf
es
jb
mov
aad
popf
fisubl
mov
arpl
leave
mov
hlt
sbb
sub
mov
ds
push
in
outsb
and
inc
inc
int3
ja
ja
xor
inc
loopne
jmp
adc
dec
cltd
and
mov
test
outsb
or
aad
call
and
dec
cmp
push
jmp
jns
js
cs
mov
jecxz
scas
jmp
out
jecxz
add
ljmp
leave
mulb
jp
fs
push
pop
popf
fstpt
push
enter
mov
xor
mov
or
push
xorl
jp
dec
imul
in
sbb
push
sbb
mov
pop
xor
and
les
xchg
jb
fldt
jl
addr16
sarl
bound
fs
lcall
daa
mov
pop
rcll
cltd
adc
and
mov
sub
lds
lcall
mov
inc
inc
aaa
movl
addr16
out
inc
es
ss
lods
aam
mov
adc
imulb
fisubs
cmp
les
in
repz
es
adc
push
fimuls
cmp
out
out
aam
lds
adc
aas
mov
and
xchg
add
pop
lds
inc
pop
push
adc
arpl
test
jmp
shll
ret
push
jbe
sti
lods
les
add
inc
xlat
in
push
cmp
outsl
jns
aad
mov
lods
stos
pop
fimuls
add
mov
std
pop
inc
fs
out
sti
mov
pop
or
add
testb
pop
or
pusha
mov
cmp
adc
pop
rcr
cmpsl
repz
xrelease
insl
mov
int
sub
movsb
xor
mov
cmp
sbb
test
add
frstor
inc
fwait
inc
pop
sti
mov
pop
je
pop
pop
push
cld
sbb
xchg
arpl
xchg
add
xor
sar
inc
popf
push
mov
inc
jge
cli
or
jg
das
pop
push
fcompl
fs
in
mov
jne
hlt
mov
push
movlps
je
push
je
xor
or
aad
loop
cmpsl
leave
xchg
xor
dec
adc
es
pusha
mov
or
xchg
fiadds
xor
dec
stos
or
ljmp
mov
and
mov
scas
xchg
xor
rclb
dec
xchg
test
out
ja
outsl
add
dec
movsl
fs
gs
pop
cltd
scas
bound
adc
ljmp
push
jmp
push
inc
mov
fcoms
and
add
add
sub
and
iret
mov
xchg
adc
bound
mov
clc
mov
pushl
sub
xor
cmp
icebp
dec
or
aam
cli
mov
mov
sub
in
and
fisubs
sbb
dec
dec
inc
push
ljmp
aaa
or
sub
mov
mov
inc
mov
out
lahf
jge
adc
inc
push
inc
cmp
call
ljmp
test
add
inc
inc
push
in
test
cmp
mov
scas
test
addb
out
cmp
into
popf
pop
loopne
pop
es
jns
js
cs
scas
scas
dec
mov
or
clc
mov
gs
push
jae
or
adc
inc
hlt
jno
fstpt
xchg
mov
cli
sub
data16
add
lret
push
bound
ljmp
push
jns
xor
mov
sahf
popf
out
or
adc
sub
inc
fcmovnbe
mov
aaa
xchg
pop
mov
stc
cmp
fadds
jmp
cmpsl
lret
flds
pusha
mov
pop
out
adc
hlt
hlt
lret
xchg
imul
push
dec
test
inc
jbe
mov
sbb
stc
sub
cli
xchg
call
rorl
jo
inc
mov
pop
xchg
add
imul
in
pop
push
adc
pop
cli
cli
mov
mov
fs
fistpl
mov
rorl
ljmp
aad
inc
gs
dec
mov
pop
xor
jmp
lahf
addb
addr16
jmp
das
mov
test
out
sbb
mov
sbb
xor
sbb
out
cwtl
jle
mov
je
cs
cmp
sub
pop
add
push
daa
or
inc
inc
cmp
fmuls
jge
mov
pop
xchg
add
add
sbb
xor
add
mov
sub
mov
sub
cmpsb
and
sbb
sbb
pop
dec
inc
adc
add
mov
aam
sbb
cmp
icebp
sti
jmp
inc
es
inc
shll
sbb
in
sbb
dec
outsb
add
add
stos
outsl
or
xchg
aam
dec
xlat
push
fcompl
push
mov
push
faddl
jb
inc
addb
out
leave
jle
lods
mov
aad
mov
mov
sti
sti
mov
arpl
xchg
or
sbb
xlat
mov
pushl
iret
cs
addr16
add
jmp
cmp
rol
sub
out
aad
stos
stos
jns
mov
sub
or
fs
pushf
fmuls
sbb
js
jnp
iret
push
xchg
dec
repz
rcrb
mov
addr16
pop
adc
mov
jnp
lcall
pop
dec
add
cltd
adc
adc
sbb
and
add
insl
in
lock
es
adc
in
mov
or
out
out
fldl
mov
ss
push
stos
mov
mov
add
xchg
add
jbe
push
mov
fsubs
outsb
hlt
cmp
cmp
data16
push
lods
cltd
jns
mov
sub
push
xchg
xchg
and
aam
and
aad
mov
cld
outsl
test
sbb
mov
sahf
movsl
jle
xor
sub
xlat
adc
sbb
das
xchg
and
or
mov
inc
jge
cmpsb
sbb
aam
cmp
xlat
mov
xor
test
mov
sub
into
adc
jno
add
cmp
loope
ljmp
es
or
call
pop
jmp
mov
cs
psrld
mov
shll
daa
mov
or
cs
dec
jmp
je
adc
fdivrs
test
ss
xchg
or
ret
inc
es
jbe
test
inc
es
cmp
les
jne
lret
jae
cs
loop
sub
jbe
mov
lods
fwait
mull
cs
dec
jmp
xchg
fisttpl
jbe
mov
inc
add
and
sbb
in
xchg
dec
es
stc
pop
mov
lods
shrb
cmp
xor
pop
setle
add
and
push
aaa
in
hlt
inc
es
nop
aad
fadd
or
and
repnz
mov
jb
sub
push
or
movsb
sub
addb
jp
sub
test
sti
in
inc
es
xor
mov
jbe
into
test
jnp
daa
inc
popf
mov
mov
cmpsl
cmp
add
dec
adc
adc
mov
fcmovne
cmpsb
test
pop
lret
sub
jns
adc
adc
sub
mov
or
popa
aad
pop
daa
xor
sbb
movsb
mov
mov
xchg
into
mov
push
cmp
inc
scas
outsl
lcall
lahf
leave
jmp
lcall
pop
and
sub
dec
mov
lds
pop
stos
shrb
pushf
test
push
test
inc
es
push
xchg
out
dec
push
gs
dec
jmp
js
pop
in
imull
inc
in
fisubrs
shll
xchg
sub
push
sbb
iret
arpl
in
mov
xchg
faddl
jle
jb
push
pop
insl
mov
adc
test
in
aad
shll
mov
fsubrl
adc
and
sbb
es
adc
pop
add
aam
insl
jbe
les
adc
arpl
xchg
shll
cmp
or
sti
adc
data16
sub
dec
xchg
xchg
mov
push
inc
sub
pop
and
xor
jns
cmp
repnz
ja
mov
test
pop
sub
adc
jns
scas
adc
into
mov
jns
shrl
loope
mov
inc
xchg
xchg
enter
into
xchg
jmp
xor
cmp
fwait
in
mov
nop
sbb
add
sarb
cmp
pop
dec
inc
fs
cmpsl
cs
xor
loop
lahf
cli
sub
cmp
add
icebp
adc
pop
jmp
test
fbld
adc
pop
push
adc
cmp
jns
mov
mov
or
fsubrl
mov
pop
dec
dec
jge
es
out
inc
jbe
adc
into
inc
or
and
scas
dec
sahf
sysexit
mov
je
pop
fisubl
stos
mov
jns
mov
dec
pop
bound
push
cmpb
and
sahf
push
jmp
cs
dec
ljmp
xchg
push
jne
clc
fs
xchg
cld
es
clc
and
jae
or
xchg
sub
and
cmp
mov
push
add
das
push
cmp
sbbl
cmp
js
sub
cmp
inc
mov
imul
fadds
pop
mov
cmpsl
les
mov
repz
dec
addr16
adc
sub
call
add
jle
inc
imul
mov
jmp
mov
lods
fdivrs
mov
outsb
popf
lock
sets
fsubr
adc
fisttpl
ss
cwtl
mov
sbb
mov
fs
lcall
fdivrs
and
and
pushf
push
dec
or
in
mov
das
aaa
loope
jbe
loope
xchg
int3
mov
out
movsl
jle
pop
pop
push
inc
cmc
inc
movsl
pop
popf
gs
popa
in
arpl
mov
sarl
push
sbb
push
test
shll
pop
popa
pop
and
adc
xlat
add
inc
es
movsl
flds
jmp
jge
mov
out
jns
sub
ljmp
out
sbb
dec
sub
inc
sub
outsb
or
inc
or
or
inc
xor
add
xchg
cmpsl
loop
adcb
roll
ljmp
sub
outsb
add
sub
psubq
test
inc
es
aaa
mov
cmp
pop
fnstcw
cs
dec
iret
movsl
or
pusha
or
das
ss
xchg
or
mov
fs
dec
mov
mov
cmp
faddl
or
bound
mov
sbb
cmpsl
pop
pop
rcrl
cli
movb
rolb
andb
adc
repz
mov
adc
adc
jl
inc
jbe
mov
mov
pop
mov
faddp
jne
mov
mov
mov
outsl
popa
jbe
push
push
or
add
shrl
jmp
push
cmp
mov
repnz
ret
xchg
push
fcompl
push
sub
mov
xorl
sbbb
popa
faddl
jmp
mov
or
jno
and
cltd
add
lock
inc
ljmp
hlt
sub
jge
loopne
stos
add
out
mov
and
jmp
popf
cmp
pop
outsb
stc
cmp
add
cwtl
cmpsl
loop
pop
in
cmp
dec
es
js
mov
dec
xor
aas
loopne
in
cmc
and
or
cmp
scas
inc
cmp
sub
ljmp
adc
ds
daa
xor
adc
cld
sahf
push
inc
dec
sbb
dec
mov
out
ss
or
sbb
call
pop
sbb
mov
pop
mov
jne
mov
mov
and
je
loope
adc
rcrb
outsb
jmp
fadd
add
inc
es
dec
dec
xchg
add
jnp
dec
shl
in
mov
cmp
cmc
pusha
ljmp
daa
push
in
inc
or
arpl
in
pop
int3
mov
iret
jl
test
syscall
push
lock
push
cmp
inc
dec
in
insb
rorl
push
ficoml
cs
jg
push
mov
aad
jle
pop
dec
dec
dec
pop
pop
repz
push
jae
xor
rcll
jae
hlt
mov
inc
push
add
push
cmp
pop
dec
add
inc
push
rolb
aam
dec
fistl
hlt
out
adc
pop
sbb
stc
or
pusha
inc
mov
xor
pop
pop
pop
xor
sbbb
mov
lret
fs
cld
mov
fs
lcall
imulb
loope
bound
add
jb
sti
aam
mov
lods
xchg
das
pop
loope
and
pusha
dec
mov
mov
or
cli
add
cmp
test
ds
push
lods
jnp
sub
mov
movsl
fnstenv
push
cmp
cmp
add
pop
sub
addb
rolb
inc
or
inc
jae
nop
aad
mov
lods
jnp
pop
loop
jns
add
add
sub
frstor
lcall
sbb
add
addl
jae
imul
xor
mov
mov
mov
les
dec
cs
sbb
lahf
or
inc
jg
fsubrs
sub
cmp
mov
push
iret
test
leave
imul
cmc
daa
inc
sahf
mov
shll
sub
mov
add
xor
leave
movsl
adc
gs
shrb
mov
arpl
sbb
in
ja
mov
push
fs
into
mov
fisubrl
loope
cmp
dec
mov
mov
jmp
shll
bound
test
stos
pop
sti
mov
jmp
popf
xor
adc
jbe
pop
test
inc
mov
mov
sub
inc
adc
sub
insb
cmp
rorl
inc
xor
les
inc
sub
std
pushf
pop
inc
add
cwtl
aad
pop
ds
loope
mov
add
xorl
je
push
xor
dec
dec
mov
mov
add
add
icebp
xor
sub
adc
fdivs
into
andl
sbb
adc
cmp
ret
dec
cmp
bound
ljmp
and
adc
jecxz
mov
je
syscall
rorb
pusha
add
or
mov
shr
push
jne
call
sbb
mov
fnsave
sub
ljmp
adc
add
std
pushf
push
inc
mov
pop
in
pop
dec
jne
lcall
mov
aad
shll
enter
cld
in
jbe
dec
adc
aaa
loope
cmp
cmp
cmp
sbb
pop
mov
xorl
sub
pop
push
gs
repnz
jge
or
popa
aad
add
cmpsl
les
push
add
daa
jmp
fstpt
ds
pop
bound
stos
jle
mov
popa
cmp
arpl
push
jne
pop
out
mov
aad
cs
std
divl
stos
call
pop
cmp
test
dec
hlt
pop
sub
mov
jmp
out
mov
and
sarb
out
adc
ds
sub
leave
mov
stos
jne
or
sub
mov
cli
mov
rorb
pop
imul
cmp
jmp
imul
std
cli
add
inc
insb
inc
or
mov
out
dec
jb
lret
mov
jnp
sub
popa
pop
int
pop
or
inc
and
test
inc
es
cld
js
fisubl
aaa
mov
int
shl
sbb
jb
ljmp
sub
test
dec
xor
jnp
loop
add
mov
inc
into
out
popf
jp
cs
pop
enter
pop
mov
push
shl
rorl
ljmp
adc
adc
loope
outsb
adc
pop
mov
xchg
mov
and
sbb
jbe
sahf
lock
aam
aas
out
out
mov
jmp
popf
xor
inc
in
jne
fstl
rorb
ja
add
and
inc
jle
int3
push
daa
out
fcom
xor
lods
pushf
popa
lods
decl
jmp
jbe
insl
push
jno
mov
and
insb
jne
mov
std
pop
inc
jle
stc
aaa
int3
fiaddl
jmp
test
out
push
mov
dec
dec
push
bnd
mov
or
in
rcrb
adc
dec
cwtl
push
or
rorb
fs
mov
outsb
mov
int3
jecxz
pop
mov
das
bound
jb
rclb
dec
mov
aad
insb
and
dec
pop
insb
cmp
dec
xchg
xlat
xchg
jbe
sbb
or
lret
scas
inc
jle
dec
adc
mov
mov
repnz
push
adc
rorb
xchg
cmp
sbb
aam
jns
lods
es
xor
lods
mov
cmp
test
jnp
daa
inc
popf
cmpsl
push
fsts
insl
push
add
les
aam
ss
mov
push
push
stos
repz
test
out
sti
cwtl
cmp
bound
jmp
repz
mov
mov
cmp
sub
hlt
mov
or
and
lea
sub
or
dec
or
mov
fsub
add
jns
dec
subb
inc
mov
inc
adc
mov
in
and
ljmp
insb
sub
pop
mov
ret
iret
insb
and
ficoml
setge
add
sbb
jmp
adc
aaa
sub
jg
mov
pop
vcvtss2si
repz
add
lret
fstps
xor
les
adc
xchg
ljmp
cmp
mov
sub
xor
sub
mov
lods
mov
inc
