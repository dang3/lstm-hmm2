jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
cmp
mov
aaa
mov
cmpsl
mov
push
or
add
pop
add
add
add
add
add
add
add
add
out
add
add
add
test
add
add
add
add
add
add
add
popa
add
add
filds
mov
test
cltd
add
addl
xor
addl
movsb
add
add
add
add
add
add
add
add
faddl
addl
test
xor
mov
cltd
add
and
arpl
addl
jne
test
mov
add
add
add
add
add
add
mov
addl
lahf
add
jnp
cltd
add
add
add
add
add
add
add
addl
jae
testb
add
add
add
add
pop
sbb
arpl
cltd
add
aaa
add
add
add
add
add
add
adc
xor
or
cltd
add
add
add
add
call
add
add
add
add
dec
add
sub
or
icebp
add
add
add
add
dec
add
add
add
add
pop
add
add
add
add
add
les
les
rolb
add
jns
je
jl
icebp
add
cltd
add
add
add
add
add
add
add
add
and
addl
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
addl
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
sbb
cld
add
add
add
add
add
add
add
add
add
add
xor
testl
cltd
add
cmp
add
push
add
add
add
add
add
add
add
add
sti
add
add
add
add
add
sub
adc
add
add
add
imul
add
add
add
add
add
addl
add
stos
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
les
lcall
add
add
inc
add
add
add
add
add
add
add
add
add
sub
adc
lcall
add
add
out
add
add
add
cltd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
int3
add
add
add
add
add
add
add
test
sub
addl
mov
add
test
ss
add
add
add
add
pop
fistl
push
pop
fdiv
ret
clc
cmpsb
sahf
mov
jmp
fists
test
sub
in
sti
mov
push
cmc
vpabsw
or
aam
repnz
jg
jns
sbb
xchg
jp
jo
pusha
int3
leave
jmp
stos
lea
fcomps
repz
and
cmp
jp
mov
jb
jl
xlat
subb
xchg
xor
lds
mov
sub
loopne
or
dec
cmc
xchg
rorb
push
pop
push
mov
fisttps
scas
loopne
test
loopne
sbb
xor
out
inc
add
and
xor
popf
sbb
call
or
pop
adc
cmp
stos
shrb
sbb
loopne
int3
imul
add
and
xor
push
js
je
scas
inc
mov
lahf
arpl
mov
shr
sbb
adc
addr16
jb
mov
fistpl
push
movsb
jmp
popa
shll
ret
push
loope,pt
clc
lret
xor
std
xor
cmc
fmul
or
in
mov
mov
adcl
test
mov
ret
pop
jne
fiaddl
out
cwtl
mov
push
mov
stos
popf
mov
daa
div
cli
shrl
push
stos
push
xor
hlt
inc
adc
roll
pop
scas
dec
cmp
add
out
or
js
or
mov
shr
daa
or
enter
arpl
call
lret
pop
sub
jg
or
test
pop
fwait
push
sbb
xchg
aas
ljmp
adc
lods
push
xor
rcl
or
imul
push
in
adc
rol
dec
jg
jnp
xor
jno
clc
pop
mov
rcrb
js
lret
mulb
and
roll
pop
imul
notb
xor
cld
cli
scas
rcrb
in
imul
ret
fnstcw
xchg
lods
mov
mov
movsl
iret
mov
aaa
out
shlb
mov
jp
fidivrs
adc
stos
test
aas
and
jmp
imul
lcall
mov
rclb
fsubl
add
jae
xchg
movsl
push
test
rolb
xchg
in
test
inc
popf
test
xchg
and
sbb
adc
mov
mov
cmpsl
iret
pop
push
push
dec
or
negl
sbb
jno
jle
xor
lods
insb
add
dec
xchg
and
push
cmp
mov
pop
pop
sahf
pusha
add
insb
nop
cmp
or
pushf
pop
sub
pop
test
and
pop
shrb
sbb
and
sub
je
mov
xchg
js
sub
cmp
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
ja
xchg
loopne
rorb
shlb
cs
daa
sub
stos
pusha
lcall
pusha
ficoml
lret
lock
sbb
or
jp
push
pop
nop
dec
sub
stos
pusha
mov
mov
xor
add
lock
loopne
ror
shrb
mov
mov
and
inc
fisubl
inc
lods
jne
add
or
jbe
popa
pop
xchg
dec
arpl
push
add
and
scas
clc
lahf
fwait
sti
leave
ss
jge
and
cmpl
dec
xchg
pop
jno
into
mov
int
add
popa
inc
jg
jnp
pop
adc
push
cmp
sbb
mov
xchg
jb
cli
mov
sahf
gs
je
add
out
xchg
add
push
loope
rcrl
jnp
xchg
mov
jns
shrb
scas
jne
ja
call
and
push
lret
mov
pop
push
outsl
add
jp
cli
popa
lods
mov
clc
ljmp
jne
sbb
shrl
mov
inc
push
jno
push
mov
iret
ljmp
lock
sbb
data16
mov
dec
jo
pusha
inc
push
xchg
inc
lcall
inc
dec
popf
pop
xor
xchg
pop
loope
cmc
sub
fistpl
or
ds
xchg
pop
test
xchg
lea
mov
stos
pop
rol
xchg
adc
or
xorb
sub
pop
dec
scas
mov
mov
dec
mov
fsubrl
pop
nop
dec
cmpb
mov
xor
and
adc
add
lock
sbb
or
jp
push
pop
nop
dec
cmpb
mov
xor
and
adc
add
lock
cmc
mov
push
adc
jne
imul
dec
or
repnz
rorb
sahf
and
es
fadds
pop
in
shll
idivb
xchg
lds
cmp
leave
clc
iret
pusha
jmp
call
stos
out
push
mov
pop
stc
inc
mov
jnp
push
mov
sub
lret
jbe
ja
jp
mov
add
iret
xchg
fs
inc
repz
mov
push
scas
push
jg
addb
pop
xchg
mov
pop
jge
sub
arpl
in
fnstcw
out
les
jp
add
arpl
dec
adc
push
repz
pop
mov
loop
fwait
rcll
mov
push
xchg
xor
jl
daa
jp
mov
mov
cmp
lret
xchg
inc
loopne
jmp
inc
xchg
int3
insl
xadd
je
jno
das
je
and
ret
pop
movsl
dec
mov
andl
pop
stos
test
xchg
cmp
adc
push
jge
dec
js,pn
xor
popl
dec
mov
mov
jno
xor
inc
rclb
sbb
mov
pop
adc
cs
shrb
bound
adc
scas
loope
stc
and
mov
or
mov
jo
inc
pusha
mov
or
pop
jo
mov
mov
dec
stc
and
push
aam
jge
mov
arpl
xchg
cmp
pusha
in
into
mov
add
jl
test
xor
ret
and
jb
inc
divb
and
shlb
mov
sbb
sub
arpl
movsl
inc
jp
mov
xchg
push
jl
fisubrl
cmpsw
pop
jb
shll
jge
push
decl
lods
jae
push
or
ret
pop
pusha
iret
int3
mov
pop
clc
xchg
out
das
mov
dec
push
fnstenv
les
hlt
daa
add
xchg
movsb
sti
fdiv
popa
xor
mov
stc
inc
loopne
sbb
je
mov
movsl
add
imul
imul
jp
push
and
in
test
cmc
bnd
xchg
fs
jecxz
jg
sbb
je
rol
sbb
or
push
or
inc
sbb
dec
daa
push
ret
ret
sbb
jp
rcrb
mov
jne
adc
loope
xor
inc
push
rcrl
pop
xchg
adc
test
or
jo
mov
push
pop
icebp
adc
popa
lahf
xor
pop
xor
iret
insl
jp
xor
mov
sub
jb
add
push
inc
cmc
add
inc
rolb
jne
xchg
pop
int
and
clc
mov
aaa
out
or
mov
idiv
and
push
les
in
loope
mov
push
roll
cmp
xor
add
add
add
fs
cmp
jno
jp
loopne
sub
add
mov
repz
movsb
jle
jno
fisttpl
or
and
add
cmpsl
fadds
push
or
sbb
test
lahf
jne
lret
test
jnp
cmp
jb
shrb
mov
add
cs
jb
outsl
fwait
inc
ret
test
push
jb
cmc
stc
and
ret
iret
sbb
adc
adcl
test
jge
test
cmp
inc
mov
adc
jns
xchg
push
out
add
and
sub
mov
adc
sti
fwait
sub
push
rolb
xchg
push
test
loope
mov
cmpsb
dec
or
lret
xor
ja
sbbl
in
add
mov
hlt
mov
and
mov
in
fdivr
imul
cmpsl
mov
push
dec
jg
xchg
js
nop
ret
mov
cli
inc
push
or
xchg
lret
dec
enter
add
jl
shrb
xor
dec
and
cli
mov
cmp
add
repnz
mov
and
jae
aad
loop
rcl
in
in
mov
shrb
cs
xor
lods
jae
call
in
or
or
push
sti
in
mov
jae
and
dec
sub
sbb
adc
jae
sahf
cmp
mov
in
jecxz
aad
mov
fsubrs
inc
xor
inc
jmp
adc
xorl
xchg
lcall
lods
push
out
dec
scas
xor
sti
cmp
add
in
les
rorl
push
xor
test
lcall
aaa
push
iret
lods
shrl
mov
lods
sbb
lret
outsb
enter
loop
inc
aaa
sbb
aas
adc
cmp
lret
xchg
lea
mov
and
or
ss
inc
lea
xchg
or
push
and
in
push
movsl
xchg
mov
xor
mov
jecxz
sbb
lock
sbb
push
lret
lock
push
cmpsb
fildl
push
mov
xchg
aas
inc
insl
pop
mov
in
cmpsl
jbe
mov
jp
in
mov
fisubl
xor
int3
sti
pop
data16
and
adc
xchg
jl
cmp
fld
mov
in
data16
out
lret
lds
data16
mov
fisubrl
cmp
mov
jno
push
xchg
mov
dec
lds
mov
fs
sbb
dec
test
xchg
int
lret
hlt
stc
bnd
out
xchg
cwtl
ja
test
pop
scas
xchg
mov
inc
inc
insl
ljmp
mov
je
ret
popf
daa
xchg
stos
cmp
call
push
leave
fs
xor
jae
mov
int
fs
sahf
ret
and
addr16
add
ss
adc
movsl
fcmovnb
in
cwtl
shl
xchg
outsb
ljmp
rolb
inc
ret
mov
mov
fcomip
jmp
push
add
std
dec
push
daa
mov
popa
insb
adc
pop
xchg
sbb
push
push
add
rcrl
iret
dec
les
insl
fwait
jnp
imul
cmp
sarl
fs
repnz
cmp
add
xor
or
ret
add
lea
xor
fwait
inc
pop
cmc
cmp
lea
lods
xchg
pop
enter
mov
cmpsl
jbe
lret
mov
neg
cmp
test
sar
aam
mov
mov
and
mov
dec
jecxz
xchg
jo
pop
in
cmpb
inc
pop
inc
jmp
data16
rclb
mov
add
pushf
inc
int
movsl
mov
lods
push
mov
pop
loop
push
sbb
mov
inc
rolb
aad
sub
jnp
das
call
xchg
mov
mov
call
dec
inc
dec
test
mov
sub
fs
gs
jl
iret
jecxz
fnsave
loop
clc
sub
or
ja
cltd
lahf
test
push
int
into
fmuls
jmp
test
pop
pop
in
imul
xchg
test
push
pop
mov
cltd
aad
and
cli
outsl
jecxz
das
xor
arpl
xor
and
or
mov
mov
in
inc
cmp
push
xchg
ficompl
in
jecxz
scas
pop
mov
push
lea
aad
daa
add
jo
lret
inc
insb
repz
nop
faddl
push
fs
adc
scas
dec
lds
fs
loopne
out
or
cmp
jbe
es
xlat
xchg
xchg
shr
adc
mov
gs
push
cmc
les
cmp
pop
mov
loopne
xchg
negl
xlat
or
scas
add
scas
xor
pusha
and
inc
mov
sbb
fs
push
inc
xchg
fldenv
mov
xlat
jle
sbb
push
daa
or
repnz
jmp
jbe
loop
jge
xchg
add
cld
addr16
mov
sbb
mov
filds
popf
fneni(8087
jne
cld
or
lret
popf
in
cmpsl
lret
lock
rolb
into
mov
stos
xchg
and
mov
popf
movsb
sbb
mov
pop
loop
loop
xchg
out
shlb
negb
xchg
ret
pop
std
pop
xor
add
js
mov
bound
push
cltd
les
sub
mov
mov
jecxz
xor
or
xor
pop
mov
dec
in
outsb
rcr
sbb
mov
mov
imul
fldt
fwait
jp
enter
push
sbb
aaa
lret
scas
testl
fidivs
and
push
imul
ret
loop
addl
cld
jp
cmp
and
and
mov
sbb
jne
popf
cs
dec
test
or
dec
push
popa
xor
movsb
dec
nop
sti
sbb
adc
jae
es
mov
push
divb
inc
xlat
mov
in
jbe
fmulp
cmp
adc
ja
add
jle
push
jae
push
sbb
stos
fisttpl
mov
aas
cmc
or
push
aam
or
cmp
sahf
xchg
cmpsb
loope
sarl
lret
in
pop
jno
and
or
xor
outsl
lds
pop
and
outsb
pop
bnd
push
sbb
mov
sbb
add
lds
hlt
or
lods
and
dec
int3
mov
xor
xorl
hlt
fstl
dec
pop
push
sbb
in
xor
inc
jae
adc
mov
cld
and
dec
cmc
dec
aad
mov
adc
inc
daa
mov
xor
jp
dec
adc
fistpll
movsb
test
mov
push
or
mov
jp
bound
sbb
and
inc
sbb
js
add
xor
je
jge
sub
pop
mov
cs
mov
std
repz
pop
pushf
sahf
push
loope
mov
push
dec
and
push
dec
sub
test
jmp
imul
icebp
xchg
ljmp
push
out
adc
repz
leave
vmovupd
out
mov
pop
sbb
jmp
mov
fldl
add
filds
fmulp
incl
iret
cmp
xor
test
xor
repnz
push
repnz
shlb
dec
inc
cld
push
scas
sub
mov
mov
cs
mov
es
js
adc
movsl
lds
fadds
ljmp
xor
dec
add
jnp
movb
jmp
sub
xchg
inc
dec
cmp
xor
xor
pop
ror
cmp
cmc
sbbl
mov
mov
adc
add
adc
push
ss
out
in
and
shlb
lods
jg
fs
fisttps
sahf
mov
pop
iret
or
cmp
out
cmp
or
jo
rorb
dec
xor
je
dec
mov
xchg
cwtl
and
mov
stos
xchg
mov
or
pop
mov
sub
mov
add
and
inc
dec
mov
fadds
push
jle
outsb
pop
outsb
inc
cltd
dec
mov
mov
loop
out
jno
cmpsl
pop
xchg
popf
insb
jb
mov
add
int
or
inc
sub
sbb
mov
dec
mov
lods
adc
sbb
inc
outsb
pop
pop
aam
ljmp
mov
cmp
cmc
cmp
aaa
inc
mov
xchg
sahf
fsub
push
mov
inc
dec
or
pop
pop
daa
or
jle
dec
inc
lods
cmp
sbb
sub
adc
ret
sub
push
xlat
notl
loope
daa
sub
cmp
jne
nop
adc
xlat
leave
mov
iret
and
repz
movsb
add
lret
sbb
rcrb
pop
rcrb
sub
mov
mov
test
cmpsl
push
and
xlat
enter
outsl
in
mov
outsb
and
les
fcomp
lods
cmp
ja
adc
add
insl
inc
popf
sub
test
lahf
push
dec
mov
in
fstpt
nop
mov
stc
cwtl
mov
inc
sar
aam
sub
push
sbb
std
or
lea
sbb
mov
loope
stos
out
push
jbe
int
sbb
int3
ds
or
outsb
mov
inc
and
or
cs
sarb
push
insl
mov
hlt
aas
cmp
pop
push
and
adc
pop
jns
inc
mov
mov
addr16
jbe
sub
inc
rolb
mov
popf
scas
jno
mov
dec
popa
in
jbe
inc
clc
add
pop
add
xor
sub
pop
dec
mov
ficoml
popf
pop
sbb
imul
mov
hlt
push
cmp
or
ret
mov
cmp
pop
aas
out
lods
adc
and
or
or
cld
or
jns
jne
call
jg
inc
insl
inc
lock
sub
je
pop
test
pop
pop
iret
jno
movsl
or
jae
adc
stos
mov
push
mov
mov
mov
add
push
inc
pusha
xchg
les
shll
lods
push
out
sbb
jmp
sbb
adc
div
call
mov
mov
rorl
jno
add
or
jmp
sub
lea
jecxz
jo
sarl
pop
cmc
jne
push
mov
dec
push
dec
add
hlt
addr16
cmc
in
add
bound
sbb
lret
loopne
push
hlt
mov
cmp
repz
rorb
xchg
add
ret
popf
icebp
dec
js
aas
push
fsubr
push
ficoml
dec
sti
ret
push
movb
and
ljmp
push
hlt
push
fwait
push
mov
pop
adc
dec
int
xor
push
mov
pop
shll
ss
iret
dec
cld
test
mov
adc
sub
cmp
xor
mov
lret
fidivrs
fldt
pushf
enter
or
add
lea
int3
orb
push
stc
test
sub
das
or
mov
push
inc
dec
mov
mov
dec
in
repz
push
xchg
xchg
push
sub
mov
inc
loopne
lods
dec
mov
outsl
xchg
adc
mov
mov
sub
shrl
jnp
es
les
or
sbb
and
outsb
jb
jnp
jecxz
lock
dec
push
dec
sub
jmp
jge
lods
sti
pop
repnz
cmpsl
or
pop
pop
roll
dec
addl
mov
xchg
mov
xor
sub
lret
jbe
jle
push
mov
inc
xor
xchg
sbb
sti
dec
insb
ret
in
or
js
dec
dec
cmp
mov
inc
sbbb
lods
inc
jl
ja,pt
dec
call
ljmp
sub
push
jmp
or
dec
sub
in
call
dec
ljmp
push
sysret
cmp
push
mov
sub
and
stc
inc
hlt
push
int
dec
in
decb
adc
loop
push
and
cmp
adc
shll
mov
int
xorl
mov
inc
pushf
jae
mov
push
outsl
push
lea
dec
fwait
sub
push
lds
gs
push
arpl
shrb
mov
daa
test
shll
ret
pusha
jmp
lret
pop
mov
or
mov
add
cmp
add
and
sub
add
jb
add
cmp
out
and
jb
push
stc
enter
xchg
add
mov
sti
jb
mov
adc
cmp
mov
movsl
sub
xchg
icebp
cmpsb
loopne
jp
cmc
lcall
jno
mov
xchg
ret
lods
add
outsb
movl
xorb
mov
fstpl
cmp
gs
adc
or
test
ss
jp
fisubl
das
les
xor
xor
jg
xor
imul
subb
test
cld
jns
adc
adc
in
add
shl
push
pusha
std
xchg
xchg
jno,pn
sbbb
sub
jmp
cmp
repz
loop
cmp
movsb
cmp
outsl
test
dec
jecxz
mov
pusha
clc
ljmp
mov
dec
sbb
inc
notb
nop
xchg
or
adc
add
je
aaa
repz
out
fdiv
inc
xchg
xchg
jl
lds
sbb
les
jmp
ja
pop
pushf
test
inc
dec
aad
mov
dec
mov
inc
jge
dec
xchg
xor
xchg
movsl
xor
inc
sahf
inc
inc
mov
es
or
xchg
rcrl
aas
fs
sarb
or
cwtl
nop
dec
xor
jae
shrb
in
aam
dec
hlt
in
dec
sar
xchg
out
xorb
jmp
xchg
push
jge
loope
pop
sbb
fs
and
mov
push
sbb
mov
xchg
imul
cmp
inc
lret
dec
push
adc
pop
push
dec
pop
int3
ret
shll
jno
add
jle
shlb
cld
insb
dec
pop
xchg
dec
sbb
mov
test
pop
mov
dec
sar
movsl
sub
add
push
jecxz
jb
dec
cmp
adc
pop
lds
xchg
or
mov
insb
pop
push
sbb
sbb
call
xor
mov
fidivrs
test
loopne
and
or
dec
jecxz
inc
adc
cmp
sbb
outsl
ret
sarb
fstp
mov
sub
dec
push
fwait
add
or
push
sub
test
sbb
cltd
inc
and
dec
mov
fadds
pop
repz
cmpsb
ja
std
stos
fs
ret
sub
daa
incl
loop
in
adc
stc
cmovne
mov
xchg
lds
add
adc
idivl
or
bnd
dec
pushf
stos
nop
inc
pop
pop
idivl
push
lods
stos
mov
pop
xchg
jbe
cmp
adc
lahf
xchg
scas
pop
fs
lret
daa
mov
in
pusha
pop
mov
sbb
adc
in
movsb
cs
push
ret
cmp
or
lcall
xchg
mov
hlt
movsl
aad
sub
sub
call
sbb
jne
test
decb
mov
mov
fiaddl
out
faddp
ljmp
out
arpl
arpl
notb
dec
fisubrs
mov
repnz
bound
outsb
pop
in
call
aad
lret
test
xchg
ja
jnp
ror
push
stos
and
scas
and
inc
in
aaa
popf
data16
shll
sbb
jmp
or
cmp
xorl
lock
mov
mov
cld
rclb
jge
xor
sub
in
stos
jae
cmpl
leave
adc
gs
mov
sarb
inc
mov
adc
mov
daa
mov
aad
in
aaa
xlat
insl
add
inc
subb
mov
rclb
add
adcb
dec
lock
int
sti
int3
js
cmpsb
push
mov
xor
inc
push
daa
mov
gs
lock
sub
lea
bound
fwait
cmp
stc
aad
aam
sub
scas
fiaddl
and
push
gs
das
push
in
vmread
push
push
add
stos
push
test
cmc
adc
add
adc
push
sub
lcall
mull
pop
ljmp
int3
or
cmpsl
or
inc
subl
shlb
ds
pop
imul
test
dec
dec
mov
push
cmp
pop
aam
fcompl
sbb
das
ror
js
loope
test
push
lds
or
ljmp
out
and
mov
pop
cmp
push
xchg
aam
pop
adc
dec
pop
push
and
lcall
movsl
enter
movsb
lret
add
xor
push
rcrb
mov
addr16
cmp
rorl
mov
pop
std
pop
dec
sbb
xchg
pushf
cld
or
jle
xchg
out
test
push
pop
sbb
sub
xchg
adc
and
imul
mov
xchg
or
xchg
push
adc
sbb
shrl
and
mov
cmp
loop
hlt
push
les
ret
mov
idiv
shll
xor
aas
es
sub
shll
cs
mov
std
xchg
fsubp
jne
add
lret
rcll
cmp
mov
push
out
inc
mov
filds
test
adc
sub
xchg
dec
jae
xchg
stc
cltd
aam
mov
mov
mov
clc
aaa
jecxz
fs
movsb
inc
add
outsb
int
pop
cld
imul
lret
xchg
xchg
iret
dec
pop
loop
and
inc
jb
xchg
addb
test
inc
fsubrp
mov
mov
inc
sub
mov
fcmovne
jns
cmp
pop
jae
mov
test
xchg
mov
roll
pusha
shll
xlat
cwtl
pop
or
xchg
and
xchg
in
scas
scas
daa
push
sarb
mov
mov
push
mov
xor
and
adc
add
lock
sbb
or
jp
push
pop
nop
dec
cmpb
mov
xor
and
adc
add
hlt
sub
or
or
jnp
outsb
mov
mov
push
mov
xor
and
adc
add
lock
loopne
shlb
les
jp
pop
adc
jg
push
lret
mov
lea
xor
mov
mov
lahf
movsb
shlb
mov
add
cmp
pusha
sbb
inc
sahf
mov
mov
mov
rorb
and
xor
jp
sub
inc
test
adc
test
mov
push
rorl
xor
add
pop
push
dec
push
push
inc
xchg
mov
leave
mov
cmp
mov
stos
add
fwait
sub
push
sbb
in
push
loope
sbb
xchg
jnp
push
pop
pop
pop
dec
mov
mov
vpcmpeqd
add
scas
daa
scas
iret
fsub
jae
jmp
xchg
movsb
mov
loopne
lods
dec
test
pusha
outsl
pusha
shrb
andb
shrb
aas
jnp
push
fdivp
mov
lds
sub
add
outsl
push
pusha
inc
shlb
sbb
addb
pop
mov
jg
sub
loop
push
mov
fistl
inc
add
mov
xor
add
jns
sbb
mov
lcall
sub
mov
or
jb
and
push
or
aad
mov
aad
les
jp
cmp
inc
das
outsl
dec
sbb
outsl
sub
test
stos
test
or
outsl
mov
lods
sbb
xor
add
jae
dec
and
mov
pushf
stos
loopne
rorb
and
dec
add
jo
pusha
sbb
inc
cli
mov
mov
mov
rorb
and
dec
add
jo
pusha
sbb
inc
cli
mov
daa
sbb
push
in
cmp
mov
cmp
nop
and
or
jmp
mov
xorb
scas
jns
add
cmpsb
xor
xor
inc
push
or
pop
inc
mov
pop
addr16
int3
adc
lcall
sbb
push
sub
hlt
jbe
aaa
sub
or
scas
cmp
xor
aas
add
je
inc
in
clc
lahf
dec
add
aad
sbb
loop
rcrb
mov
lods
aaa
mov
sahf
insb
aaa
decl
iret
pusha
lcall
addr16
mov
cmp
insl
jl
mov
push
inc
iret
dec
push
enter
pop
push
mov
repz
mov
rorl
in
mov
nop
sub
enter
ds
xor
dec
pop
sbb
and
ljmp
push
sti
fiadds
not
in
arpl
addr16
xchg
cmp
xor
test
shlb
xchg
xchg
insb
test
adc
mov
outsb
or
movsl
test
pop
mov
and
imull
dec
push
aas
jne
aad
adc
dec
out
rorl
push
pushf
cmpsb
arpl
test
mov
cmc
inc
inc
pop
xlat
mov
scas
pop
jo
sbb
xor
stc
inc
mov
es
lds
insb
jle
add
int3
mov
popf
out
and
jbe
dec
hlt
mov
sbb
call
test
mov
xor
js
arpl
lods
jae
rolb
lcall
int
jns
sbb
std
andb
mov
fstpt
cmp
leave
mov
mov
nop
inc
jle
test
xor
repnz
dec
sub
in
and
cli
xor
or
cmp
push
jecxz
shrl
or
dec
outsl
mov
addr16
lret
and
pop
adc
cmp
sub
fisubs
movsb
test
mov
and
cmp
sub
push
cwtl
sbb
pushl
in
push
cmp
pusha
add
dec
jo
push
push
xor
in
or
jmp
sbb
in
or
adcl
loopne
xchg
xchg
rep
in
inc
dec
fcompl
aad
xor
lods
loope,pn
sub
popf
inc
lods
divl
add
mov
inc
inc
push
les
into
xor
stos
into
jecxz
mov
or
dec
adc
jo
jecxz
fldenv
bound
bound
ja
loope
fs
jno
movsl
dec
xor
imul
cwtl
in
push
test
or
imul
xor
fsubr
sbb
gs
sbb
das
sub
dec
push
xchg
outsb
nop
lahf
sbb
cs
pop
stc
cmp
jb
cmp
ss
das
cld
xor
fwait
fs
pop
cmpsb
cmpsb
xchg
sub
imul
sub
dec
ficompl
inc
or
mov
arpl
fcomp
cmp
mov
call
stos
xchg
fistl
push
testl
in
mov
and
jg
les
enter
cmp
sub
add
or
loope
std
lea
std
pop
fidivs
imul
lahf
or
cmc
andl
push
ret
or
xchg
ljmp
movsl
push
popf
cmc
pop
or
lods
pop
jl
in
in
fcmovnu
mov
test
pop
aad
jo
imul
cmp
push
arpl
imul
jmp
adc
icebp
mov
dec
aam
les
pusha
add
inc
bound
aaa
inc
call
fisubl
loopne
sub
sahf
xlat
add
ljmp
jb
fucom
pop
movsb
sahf
fucomp
inc
jbe
shll
xchg
mov
movsb
cmpsb
sbb
dec
sub
cmp
dec
leave
mov
cmp
mov
cmp
sahf
ds
and
cwtl
clc
push
into
or
add
hlt
add
and
inc
notl
shlb
xchg
test
in
xrelease
xchg
push
negb
test
neg
and
out
or
jb
fucomp
cld
je
gs
push
fiadds
call
enter
and
adc
adc
add
and
int
addr16
pusha
fs
cmpsl
mov
lea
cmp
cmp
push
lcall
and
xchg
jns
sub
sti
popa
dec
clc
add
push
xchg
into
mov
push
xchg
cmp
gs
or
push
mov
xor
xor
xchg
or
or
inc
insl
cwtl
sub
outsb
xlat
pop
pop
popa
stc
ret
hlt
mov
notl
repnz
sub
clc
mov
out
mov
mov
pop
push
fcoms
cmp
dec
sti
lret
cld
mov
jge
mov
mov
movsb
and
sub
shrl
pop
sbb
mov
addr16
mov
ds
mov
mov
push
fxtract
xor
mov
cltd
ret
xchg
push
repnz
and
jno
mov
cmp
addr16
xchg
dec
push
lahf
push
xchg
dec
ret
inc
add
add
sbb
cli
sahf
cmp
sub
mov
jecxz
loopne
addr16
jnp
ret
jne
cmp
cmpsb
in
cmp
pop
test
fwait
or
inc
dec
pop
mov
insb
lods
test
ror
notb
xor
sub
lahf
mov
push
jno
negl
movsl
ss
adc
and
or
pop
adc
adc
push
pop
pop
sahf
adc
inc
in
dec
and
xchg
or
hlt
clc
arpl
or
fadds
sbb
and
adc
or
inc
push
xor
xor
dec
pop
pop
ror
cmp
pop
ffreep
aam
testl
sarb
in
orl
jmp
cmp
int3
insb
add
add
popf
jecxz
xchg
or
pop
in
js
incl
mov
js
xor
or
aaa
inc
sub
sub
in
sbb
inc
dec
outsl
add
adc
cltd
fs
or
sahf
jae
sub
in
adc
mov
adc
sti
or
int3
lret
mov
pop
pop
sbbl
or
fmuls
fdivp
lret
int3
sbb
or
sub
inc
mov
inc
mov
lock
rclb
jbe
adc
mov
out
or
pop
mov
jmp
jb
int3
fs
pusha
jg
cmc
or
xchg
jge
dec
cwtl
or
and
xchg
pop
in
in
rcr
sbbl
inc
pop
scas
movsb
xchg
jge
xlat
jmp
adc
lds
mov
cli
xchg
sbb
mov
dec
inc
lret
repnz
and
pop
or
mov
int3
push
int3
repnz
jge
jae
add
popf
out
jl
pushf
aam
dec
push
jo
add
adc
pop
dec
in
inc
mov
mov
sbb
jae
arpl
jecxz
mov
imul
ss
in
sbb
fs
xchg
les
int3
or
mov
sub
jb
and
bound
pop
imul
sti
daa
mov
cmp
sbb
into
dec
lock
test
pop
clc
or
push
movsb
xchg
xchg
adc
sbb
push
mov
or
flds
jns
neg
xor
bound
mov
inc
cmp
dec
push
mov
adc
xchg
and
inc
sbb
push
xchg
mov
add
mov
aaa
jl
std
adc
xchg
filds
xor
inc
fs
push
paddb
imul
cwtl
lret
mov
and
ficoml
jg
std
sahf
rcll
mov
cmp
jns
inc
dec
xchg
xchg
in
push
leave
cmp
sub
and
icebp
cltd
fs
sub
and
xor
mov
sarl
push
loope
sbb
jne
shr
or
test
aad
push
adc
mov
mov
repz
ljmp
sti
popf
push
pop
pusha
push
out
das
push
jno
mov
mov
jl
ljmp
ja
jge
pop
dec
and
add
shll
enter
js
mov
stos
mov
pushf
push
loope
xor
clc
cmpsb
out
orb
push
bound
push
or
cmp
push
mov
lods
sub
dec
stc
mov
test
cmp
pop
scas
sub
mov
scas
loope
jne
mov
or
lahf
add
das
shrl
sbb
xchg
adc
jle
and
cmpb
sub
xchg
in
into
jns
repnz
popf
in
sbb
cltd
stos
and
push
fidivl
fidivrs
dec
outsl
ljmp
das
out
sbb
or
cmp
pop
jne
pop
sub
out
cvtps2pd
sbb
sahf
mov
cmp
jge
jle
sub
jmp
inc
cmpsb
xlat
jnp
pop
fcmovnbe
push
mov
mov
arpl
xor
cmpsb
sub
pop
imul
inc
enter
cmpl
shrl
clc
aad
imul
adc
push
loop
mov
psllq
jne
and
imul
adc
push
push
sbb
and
mov
xor
scas
repz
sbb
inc
jl
mov
int
rcll
xchg
cmp
outsl
vpmaddwd
xchg
cwtl
mov
push
lds
push
mov
movsw
jg
or
fimuls
fldt
es
popa
jnp
test
ficoms
pop
push
enter
movsl
cmpsb
add
je
push
xor
inc
ss
pop
mov
mov
pop
outsb
lahf
pop
test
fistl
int3
sub
or
ret
fdivrs
out
add
jno
pushf
sti
out
fmuls
add
je
xlat
ljmp
arpl
or
inc
dec
in
imul
inc
es
int
stos
xchg
lahf
lds
push
cmp
mov
test
push
sub
xchg
popa
aam
mov
mov
jmp
loopne
mov
pop
movsl
fisubrl
sbb
and
out
xchg
xor
mov
mov
xchg
xor
push
or
push
mov
vpaddb
lock
dec
data16
dec
xchg
and
xchg
sbb
loop
inc
push
push
dec
cmp
shr
fildll
and
bnd
sub
in
test
mov
sbb
mov
xor
jae
aas
es
and
repnz
and
daa
popf
xor
push
into
mov
ret
dec
xchg
cld
out
push
out
pop
adc
outsb
add
jg
mov
sbb
xor
add
and
push
loopne
cmp
jne
mov
lret
push
js
stc
repz
scas
lods
das
mov
mov
and
test
dec
sub
sub
inc
push
sbb
fs
inc
lret
fisttpl
jbe
sub
dec
pusha
adc
and
shl
adc
repz
sbb
push
inc
mov
arpl
movsb
xchg
sub
cmp
imul
enter
or
ret
dec
push
mov
add
dec
out
adc
mov
bound
out
mov
aaa
popf
jnp
jle
int
ds
addb
ds
in
aaa
lods
xchg
in
jbe
aad
hlt
addr16
test
inc
mov
pusha
sub
fistpll
push
lods
add
and
stc
adc
testl
mov
jle
xchg
sbbl
cmp
lds
imulb
filds
jle
loop
adc
sub
fwait
mov
stc
add
pop
xchg
inc
add
dec
jle
fdivl
adc
movsb
popa
xor
sbb
inc
inc
bound
jae
mov
push
test
leave
lret
jecxz
aam
aaa
xchg
mov
jmp
dec
test
or
pop
jne
ret
leave
jl
or
gs
imul
push
imul
fldl
cmp
aas
in
push
fiadds
xor
push
repnz
movb
fwait
lret
cmc
lahf
mov
mov
test
adc
and
jb
loopne
jmp
scas
test
lret
cli
cmc
adc
mov
ss
outsb
mov
jecxz
int
cmp
jo
out
std
outsb
push
popf
mov
fisttpll
fcmove
push
push
sbbl
insb
int3
sahf
sarl
cli
incl
lock
cmp
cli
loop
imul
jbe
std
inc
out
js
int3
pop
repz
xchg
xor
or
jmp
je
ja
imul
loopne
mov
call
cmpsl
xlat
push
jecxz
fs
add
and
sub
outsb
in
out
aad
add
cld
cld
mov
adcl
push
xchg
repnz
mov
mov
gs
rcrl
jo
mul
sbb
or
push
jae
sahf
mov
ja
insl
push
insb
cld
inc
cwtl
and
loopne
xor
imulb
roll
push
jns
dec
adc
and
add
cmpsl
mov
rcl
inc
inc
lret
mov
jns
das
mov
cmp
pop
into
push
sti
mov
sahf
pop
mov
fisttpll
push
or
fistpll
xchg
call
mov
mov
pop
sbb
pop
mov
pusha
arpl
fidivrl
or
mov
sub
jae
cmove
mov
cli
not
fldenv
sbb
daa
inc
jmp
dec
inc
mov
inc
stos
lods
mov
jae
mov
or
ljmp
xchg
fcmovnbe
ljmp
inc
inc
andl
lret
hlt
mov
jbe
jno
arpl
dec
push
ret
hlt
icebp
adc
push
inc
out
mov
fwait
clc
add
xchg
xor
dec
add
int
aam
push
sbb
incl
outsb
popf
sbbl
mov
and
in
pop
push
flds
movsl
mov
loop
mov
bound
jmp
push
int
lea
mov
push
insl
aas
arpl
push
sub
mov
jae
pop
dec
mov
call
mov
xchg
icebp
jg
aaa
mov
push
in
scas
lods
test
xor
roll
js
dec
cmc
pop
push
jg
loopne
mov
int
dec
xor
out
dec
vpunpckhwd
pop
imul
inc
ret
lret
sbb
icebp
div
inc
fld
fistpl
mov
mov
test
lret
inc
imul
cmp
shll
pop
ror
loopne
and
sub
push
cwtl
mov
dec
ret
js
dec
lock
or
add
fsubs
sahf
or
sbb
scas
sahf
jae
in
mov
divb
inc
shl
stc
stos
lcall
roll
xor
mov
sbb
xchg
rol
add
rcrl
addb
movsl
js
adc
loopne
jno
das
xchg
sub
mov
lock
imul
bound
inc
andl
out
add
cld
push
xchg
mov
pop
clc
cmp
hlt
shlb
js
mov
jo
mov
fcompl
arpl
pop
imul
stos
cwtl
movb
mov
int
popf
cmp
sub
popa
enter
jbe
fldenv
mov
fisubrs
mov
imul
push
fsubs
arpl
and
pop
test
add
je
and
lds
xchg
cmc
popa
lds
subb
pop
ret
cs
xlat
cmp
sar
js
mov
pop
rcll
xchg
mov
push
outsl
pop
mov
mov
jo
mov
out
mov
xchg
jmp
insb
sbb
testb
movsl
scas
fnstsw
fnsave
sarl
subl
mov
inc
lret
sbb
xchg
inc
les
pop
out
adc
jnp
mov
inc
test
rcl
ja
mov
jmp
push
mov
enter
xchg
inc
push
ss
mov
fcompl
xchg
add
push
in
aas
insl
mov
pop
cs
in
mov
gs
mov
testl
fdivr
lret
fbstp
mov
xchg
ja
sub
jecxz
cli
inc
xlat
shll
add
dec
or
jle
inc
ljmp
sub
js
mov
das
pushf
xchg
call
inc
test
mov
sub
pshufw
xchg
nop
mov
test
jne
adcb
add
cmpsl
add
mov
push
test
addr16
cli
lods
sub
das
or
mov
in
dec
shl
out
mov
rorl
ret
sbb
ss
mov
cmpl
insl
sti
and
jns
movsb
mov
add
aas
ret
cmc
aas
push
test
loope
add
or
fwait
push
test
outsl
mov
test
insl
mov
int
loop
jnp
in
das
in
xchg
or
aaa
mov
mov
sbb
les
ret
jmp
enter
jg
int3
pop
jecxz
insb
sahf
lock
sub
cmc
xchg
insl
jb
dec
jns
pop
mov
sbb
ficomps
jnp
push
aas
ja
test
or
mov
pop
sbb
das
out
lahf
mov
test
add
lcall
jmp
lea
je
mov
aaa
mov
loop
nop
adc
in
int
out
cmp
pushf
sub
mov
dec
sub
dec
adc
xchg
int3
and
out
sub
in
lods
and
cmpsl
and
adc
pusha
in
int3
popa
dec
xor
rclb
fincstp
imul
jge
in
pop
jne
xchg
sub
mov
or
aaa
std
push
push
sub
outsl
lahf
fistpll
adc
add
xchg
pop
adc
sbb
add
ret
call
aas
xchg
aad
daa
mov
leave
cli
cmp
sbb
out
sub
je
push
lret
or
add
pop
fmull
gs
ja
lds
aam
ja
lods
scas
cmp
popa
push
in
or
fidivs
bound
ds
jg
gs
lea
je
cltd
jae
push
xchg
add
inc
jnp
push
cmp
sbb
dec
cmp
add
imul
inc
cwtl
dec
mov
sub
xchg
jge
fs
inc
loope
sub
mov
lock
xor
xorl
ret
in
insl
inc
and
push
or
push
in
test
pop
addr16
push
lock
in
aad
fisubrl
loopne
push
jns
pushf
loope
sbb
arpl
pop
or
adc
ja
arpl
leave
inc
inc
sub
mov
sub
test
mov
jge
loope
jnp
popf
mov
or
xchg
mov
mov
pop
xor
sti
dec
xor
or
mov
sub
shlb
pop
imul
inc
aaa
pop
inc
in
inc
jle
xchg
fistps
jl
add
mov
nop
insl
jecxz
nop
fcompl
pusha
mov
cmpsl
inc
add
push
mov
rol
cs
sub
shl
or
jne
pop
jg
pop
rorb
add
pop
movsl
mov
xor
decl
in
xor
aas
faddl
mov
repnz
mov
mov
xchg
cli
aaa
loopne
or
out
orb
cli
pop
sbb
mov
sub
sbb
rcr
xchg
insl
cmp
lahf
ja
sti
pop
xor
aas
add
mov
xor
sub
in
add
sahf
rcll
lods
int
or
mov
stos
and
in
sbb
mov
push
xchg
ficompl
testb
adc
fwait
lock
sbb
adc
push
jno
xchg
dec
jmp
cmp
fcoms
cwtl
stos
inc
pop
inc
add
cmp
mov
lods
dec
adc
sbb
in
js
jb
fmuls
jge
sarb
push
insb
mov
cmp
push
in
cmp
mov
xchg
fdivrs
mov
outsl
lods
test
in
pop
jae
xchg
cltd
pop
cmp
cmpsl
mov
jns
xchg
mov
repz
iret
push
pop
xchg
ret
gs
fisttpll
fyl2x
insb
fbstp
ret
sbb
pop
sbb
xchg
sarb
and
xchg
xor
xchg
cmp
fcoml
adc
test
aam
cli
rol
sbb
add
aas
insl
pop
inc
push
mov
andb
in
rcrb
mov
div
rcll
xchg
adc
sub
mov
rorb
and
dec
add
jo
pusha
sbb
inc
cli
mov
mov
mov
rorb
and
dec
add
jo
pusha
sbb
inc
cli
mov
mov
sub
stos
loopne
rorb
jp
push
stos
adc
cmp
pusha
sbb
inc
out
mov
mov
mov
rorb
sarb
mov
adc
dec
clc
mov
mov
in
xor
faddl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
lahf
clc
aad
in
cmc
int3
lcall
test
mov
push
dec
add
sbb
or
cld
aad
aad
cmc
int3
test
mov
add
add
sbb
or
pop
int3
sub
inc
in
mov
mov
jl
dec
or
pop
dec
push
outsb
pop
push
test
mov
push
xchg
pop
dec
dec
mov
push
cltd
cmpsl
jno
jmp
inc
vaddsd
in
in
inc
test
jl
mov
js
mov
xchg
mov
mov
test
cmp
push
xchg
push
mov
lods
xlat
inc
jge
jl
pop
mov
adc
fdivrs
mov
pop
mov
jno
cmp
dec
subb
mov
and
and
lods
mov
movsl
jo
pop
stos
cmp
jne
scas
push
adc
test
int
and
test
push
pop
inc
in
sahf
lea
mov
push
add
add
int3
in
loop
xchg
mov
lods
push
pop
jl
les
insb
jo
add
ds
mov
xorb
shll
push
sbb
stc
sbb
imul
lds
mull
leave
cmc
lock
and
add
data16
jns
jg
out
xorb
lods
movsl
pushf
mov
inc
jl
insb
gs
jne
add
sbb
or
cld
aad
in
cmc
int3
test
mov
push
insb
gs
jne
add
sbb
or
cld
push
mov
stos
fildl
das
sarb
sbb
flds
xor
movsb
ljmp
imul
adc
mov
adc
xchg
test
or
mov
call
ljmp
inc
pop
in
scas
jl
and
imul
xor
adc
or
sub
mov
fsub
fildll
cld
movsl
testb
xor
mov
xor
dec
bound
pushf
cmp
incl
jg
movsb
es
xor
call
mov
jle
loopne
and
adc
loope
sbb
pop
adc
push
dec
aaa
sahf
xor
mov
jp
pop
mov
and
xchg
movsb
adc
push
iret
jb
cmp
xchg
popf
pop
xor
in
mov
hlt
aaa
sub
test
subl
push
xor
pop
push
push
cmp
or
mov
imulb
push
jg
fs
adc
adc
adc
das
push
xchg
or
xor
push
inc
xchg
repnz
pushl
and
or
xchg
inc
or
jne
orb
pop
movb
mov
cltd
leave
stc
test
sarb
mov
mov
sbb
loop
ljmp
sahf
repz
mov
pop
xchg
fildl
mov
jnp
sub
decb
cs
sub
dec
inc
xchg
shll
mov
fwait
outsl
pop
in
xchg
jns
fsubrl
test
cwtl
out
test
inc
push
jg
cmpl
cmp
movsb
cmp
cli
dec
ljmp
jb
cltd
mov
push
pop
jns
push
sub
add
lea
das
xor
jg
sub
out
lret
or
bound
test
mov
ljmp
fisttps
popf
scas
unpckhps
in
testb
xchg
push
or
sub
enter
outsb
iret
pop
movsb
in
fwait
push
xchg
mov
or
div
dec
mov
xchg
inc
sbbl
movsb
adc
adc
mov
inc
arpl
mov
out
mov
push
add
push
sub
xchg
mov
adc
xor
ja
pop
or
jo
jecxz
stos
jb
xchg
pop
ljmp
push
cmp
adc
adcl
int
jno
sub
movsl
sbb
xchg
movsl
cmp
cmp
lret
fnstenv
aas
mov
hlt
add
or
roll
rorb
mov
fmuls
sbb
mov
dec
fwait
cmpsl
adc
enter
aaa
stos
pop
ja
sub
cmpxchg
cwtl
adcb
mov
xchg
aaa
push
jl
popa
jge
mov
in
sbb
cmp
in
test
int
add
xchg
sbb
xchg
pop
call
cmp
mov
sbb
jnp,pn
and
mov
jg
test
push
add
adc
std
dec
mov
and
mov
lods
insb
inc
cmpsb
pop
bound
push
dec
inc
leave
hlt
xlat
js
repz
dec
push
repz
add
and
mov
rcll
push
cmp
adc
inc
xchg
int3
sub
sbb
jecxz
cmp
push
dec
cmc
xchg
pop
pusha
jg
and
add
pop
xchg
rorb
inc
lret
std
pop
ljmp
rclb
sahf
jnp
gs
into
pop
nop
push
adcb
jp
rolb
imul
sub
nop
aaa
es
push
push
jne
shr
in
mov
iret
cs
cmpsl
xor
jmp
shlb
pop
sahf
pushf
insb
arpl
jb
std
mov
outsl
mov
jmp
xchg
or
mov
cmp
add
mov
xor
mov
cld
rol
sub
mov
repz
cmpsb
cltd
cmc
fiaddl
sbb
sub
mov
adc
xchg
dec
movsb
por
inc
xchg
call
cmp
cs
or
add
cmp
les
lock
mov
and
lds
pop
mov
fwait
stos
adc
icebp
icebp
jae
push
data16
or
inc
dec
paddq
pop
push
mov
mov
pop
cmc
push
addl
fsubl
pop
sbb
imul
xor
sahf
inc
out
pop
mov
cs
lds
push
sub
in
mov
rcrl
ds
test
sbbl
push
repz
add
fisttpll
jb
hlt
mov
hlt
jl
imul
mov
cmp
iret
ds
out
shl
test
in
iret
add
jne
mov
push
roll
adc
xchg
dec
add
lods
enter
nop
mov
push
xor
imul
pop
or
js
mov
scas
repnz
or
cwtl
rcrb
pop
out
mov
inc
sub
les
inc
sarb
inc
sti
jle
inc
xchg
popa
xorl
les
mov
out
sub
xchg
pop
arpl
pop
mov
push
jp
cmp
xchg
sbb
cmpsl
jbe
xchg
add
pop
pop
cmpsb
imul
mov
or
inc
fbstp
pop
rcr
push
ja
out
fimuls
mov
iret
jnp
mov
fstpt
enter
fisubrl
pop
jge
xor
xchg
lock
arpl
data16
aad
incl
push
xchg
nop
and
cmp
in
xlat
sbb
mov
jle
push
jno
sti
inc
mov
jns
mov
mov
lods
jp
ret
add
adc
je
movsl
sarb
adc
fs
cmp
ljmp
arpl
pop
test
push
mov
inc
test
xchg
in
add
and
dec
adc
adc
sbb
mov
call
jne
daa
inc
ret
insl
mov
scas
fs
cltd
jge
pop
scas
xor
add
icebp
xchg
popf
mov
arpl
mov
gs
cmp
sbb
mov
xchg
adc
mov
scas
sub
add
mov
xlat
pop
inc
cmp
fwait
aas
jg
inc
pop
daa
push
sub
repz
pop
add
xchg
pop
leave
xchg
xor
dec
push
jge
mov
addr16
shlb
arpl
push
xchg
sbb
adc
lock
movsb
inc
lods
or
sub
mov
clc
jb
call
or
lods
sub
jge
dec
orl
dec
pop
or
dec
or
mov
les
sbb
push
pusha
rcl
mov
fcmovb
lret
jge
std
clc
mov
mov
lods
mov
mov
push
push
push
fwait
sbb
out
call
push
add
repz
ja
movsl
leave
mov
mov
xor
pop
jbe
insb
scas
add
cld
mov
mov
in
cmp
mov
inc
int3
xchg
jne
sbb
add
or
mov
enter
xor
iret
mov
imul
jmp
int
loop
sti
outsb
sub
ljmp
xchg
lcall
inc
sub
fmuls
pop
sub
in
pushf
adc
jbe
outsb
sub
cltd
ret
pop
sbb
sub
inc
push
lret
popa
inc
fstp
xchg
test
jnp
adc
push
add
dec
xchg
int
push
jg
mov
loop
nop
lahf
lahf
pusha
js
jmp
outsb
dec
push
sbb
jge
bound
mov
and
lock
pop
jmp
cmovne
lds
jge
mov
in
and
in
mov
mov
mov
jp
adc
fstl
icebp
lds
movsb
sbb
mov
ds
mov
nop
sbb
gs
dec
cmp
mov
mov
cmp
cld
add
pushl
mov
insl
imull
arpl
aam
jno
sbb
imul
test
pop
xor
xor
in
sbb
dec
data16
shlb
cli
and
iret
lret
cmp
popa
data16
dec
stc
inc
jmp
mov
mov
adc
fidivl
or
fldenv
mov
out
cmc
insl
addb
fisttps
ss
into
push
lods
addr16
or
jge
xchg
mov
mov
cmp
add
adc
aad
ss
lods
cmpsl
mov
push
insb
icebp
dec
insl
stc
push
test
adc
mov
leave
ds
shrl
insb
add
fucomip
imul
add
test
jo
add
ret
xor
add
hlt
or
dec
shlb
or
cmc
and
enter
lds
xor
adc
xor
add
jns
ret
shlb
pop
subl
dec
pushf
cmp
scas
xorl
xor
jge
sbb
pop
sbb
cmp
out
xchg
das
push
sbb
inc
and
or
and
or
inc
pusha
cwtl
das
mov
mov
je
aas
xchg
and
test
arpl
pusha
xor
jb
je
sub
sbb
jecxz
push
aad
fstpl
and
add
jle
pusha
sub
test
inc
test
iret
test
popf
imul
int3
cmp
iret
in
dec
scas
adcb
add
fildll
js
and
mov
ret
fstp
xor
push
add
pop
adc
data16
lret
cmpl
lea
push
xorl
jne
jo
leave
pop
xor
out
xor
jl
les
jl
sub
cmp
dec
sbb
insb
or
sub
mov
jno
arpl
int3
andb
push
mov
jmp
mov
nop
dec
mov
fwait
insl
addr16
pusha
mov
or
scas
inc
sub
inc
jle
push
or
add
dec
shlb
stc
sbb
and
bound
pusha
test
inc
mov
xor
inc
pop
in
add
sahf
push
push
jnp
push
imul
out
jg
add
mov
js
jge
out
daa
in
sub
pop
aam
pop
mov
addb
mov
add
insl
pop
jne
in
push
and
cmpsb
insl
js
pusha
push
in
das
pusha
add
daa
mov
mov
nop
cmp
jl
jno
mov
jb
cmp
loope
cmp
je
adc
pop
addr16
xchg
pop
mov
sbb
test
cmc
daa
fdivs
addl
mov
icebp
cmp
or
ja
sub
rorl
out
daa
bound
rcr
out
pushf
bound
insb
mov
std
dec
scas
pop
dec
mov
inc
fs
leave
push
gs
cmp
ret
sub
push
pop
jle
xchg
mov
int
dec
mov
pushf
cmpsb
sbb
fldt
sbb
sbb
rcrl
mov
add
or
pop
aad
movsb
mov
roll
hlt
sahf
and
mov
in
push
mov
cmp
add
pop
fwait
adc
dec
xor
push
call
sub
lods
mov
aas
pop
insb
adc
loopne
fbld
xchg
je
das
lahf
shlb
xchg
inc
fadd
or
repnz
add
test
push
test
sbb
and
and
int3
push
pushf
add
ficomps
push
mov
push
loop
mov
dec
or
sbb
mov
insl
adc
roll
js
in
mov
movsl
mov
dec
mov
fbld
nop
loopne
jp
push
sub
pop
movsb
ss
bnd
push
inc
mov
xchg
pushf
mov
pop
das
jmp
or
nop
pop
and
out
in
and
xchg
jge
pop
push
lahf
jb
insb
mov
leave
leave
imul
add
ds
pop
cltd
cwtl
xor
pop
lds
mov
inc
negb
in
pop
dec
dec
xchg
test
clc
pop
sahf
inc
sub
xor
pop
pusha
fcmovnb
mov
imull
mov
xor
js
repnz
loopne
sub
lret
imul
dec
ret
pop
adc
cmp
int
cmp
pop
pop
ss
sbbb
clc
jb
and
push
add
roll
iret
mov
push
shrl
push
push
xlat
les
sbb
js
sub
xor
in
imul
test
or
pop
mov
xchg
inc
xor
pop
mov
dec
xchg
dec
mov
sbb
sub
xchg
mov
push
inc
inc
cmp
xchg
cmp
adc
mov
pop
mov
cmp
inc
out
enter
cmp
sarb
mov
out
push
fisttps
jno
pushf
xchg
cmp
sub
pop
inc
sub
iret
or
imul
daa
pop
lahf
repz
add
or
aam
shll
adc
aas
push
aas
mov
fimuls
mov
das
cmp
xor
inc
shr
cmp
mov
fucomp
dec
cmp
mov
es
mov
mov
icebp
mov
data16
add
js
inc
adc
pop
sti
lods
addr16
sbbb
xor
mov
jg
loopne
ja
pop
ja
dec
or
dec
add
ss
mov
add
xchg
push
xor
cmc
pop
pop
pop
aas
pop
pop
jae
repz
adc
fmul
mov
cli
movb
imul
rorl
fsub
sub
sahf
push
dec
inc
or
cmp
in
das
les
jno
push
ret
mov
push
mov
mov
popa
mov
jl
mov
or
jbe
add
aas
lahf
xor
shlb
inc
lds
fidivrs
jge
adc
cwtl
mov
in
sub
push
adc
ret
adc
lret
pop
pop
pop
idivb
pop
adc
mov
dec
sub
or
push
or
fidivs
mov
xor
repz
adc
add
mov
inc
jmp
imul
cwtl
std
pop
or
popf
sbbl
popa
mov
cs
pop
in
fimuls
repz
add
int
adc
nop
in
add
adc
jo
adc
mov
sbb
test
call
jg
in
dec
or
mov
arpl
inc
dec
rcl
mov
and
pop
iret
mov
xor
cmpsl
stc
notl
fxam
jecxz
add
test
mov
and
movsl
cld
lret
mov
mov
enter
or
notl
mov
push
ret
cmpsb
push
test
rcll
xchg
pop
mov
leave
je
dec
or
scas
add
ja
ljmp
scas
or
fs
movsb
sbb
xchg
mov
call
fistl
aam
loop
out
mov
cmpsb
jne
xchg
inc
cmp
ss
or
mov
and
repnz
cli
aaa
sti
dec
andl
cmp
test
fcompl
es
xor
pop
jl
sbb
mov
movsl
sbb
sbb
pusha
in
pop
xor
rcrl
gs
and
mov
call
dec
jmp
lret
out
in
lahf
cmp
xchg
sbb
nop
fs
in
ret
or
fld
jne
jecxz
xchg
mov
inc
in
call
roll
and
popa
xor
int
movsl
jae
xor
ds
push
insb
inc
seto
jbe
sub
mov
in
mov
ds
push
mov
cli
std
or
cltd
int
aas
pop
sub
jo
test
in
out
mov
ret
inc
daa
loopne
daa
mov
adc
stos
push
mov
pusha
sub
sbb
repnz
int3
and
pop
loope
xlat
outsl
loope
dec
lds
push
xchg
push
cmp
cld
mov
aad
and
leave
bound
push
insb
jae
jl
mov
insb
fstpl
arpl
es
loopne
cmp
cmpsb
or
xchg
add
jbe
xor
imul
addl
adc
shll
std
out
cltd
push
add
pop
pop
mov
call
push
outsb
fists
adc
pushl
les
sbb
lock
sahf
scas
cmpsl
je
sub
or
inc
enter
mov
sub
std
sub
insl
das
in
adc
xchg
out
loop
xchg
pop
pushf
mov
lods
inc
dec
test
pushf
sti
or
mov
inc
pop
lea
aad
cmp
aaa
and
sub
pop
outsb
inc
fstpt
jo
nop
imul
aad
pop
xchg
xor
les
mov
sbb
inc
xchg
push
stos
out
xchg
xchg
pop
daa
pop
scas
or
inc
jle
and
jo
xchg
sbbb
cmc
ret
loop
jmp
cmpsl
outsl
cmp
mov
adc
lds
sub
dec
dec
fs
out
movsb
sarb
lahf
scas
in
mov
test
pop
cld
frstor
pushf
arpl
sbb
iret
sub
cmp
pop
clc
testb
loope
jle
repnz
shrb
mov
mov
lret
or
inc
imul
jp
add
cmc
dec
inc
data16
inc
xchg
dec
hlt
xchg
pop
mov
xor
call
daa
sbb
xchg
mov
or
fnsave
out
xchg
mov
lea
iret
rcl
xchg
pop
jg
jb
shlb
add
add
mov
fwait
in
repz
popa
xor
test
lea
stos
xor
test
mov
dec
cmp
jb
out
std
mov
lods
ja
jno
stc
out
sub
cmp
mov
xchg
xlat
data16
fwait
add
addr16
and
test
loop
xchg
xchg
inc
fdivr
std
jbe
mov
in
adc
in
mov
lock
adc
pop
icebp
fiadds
mov
inc
pusha
rorb
jge
ss
dec
sbb
pop
clc
lods
and
jno
sub
out
pop
inc
hlt
les
in
mov
sub
mov
jnp
shl
into
icebp
cmp
repz
cltd
mov
fucomip
sub
loope
jmp
hlt
out
sahf
adc
lods
daa
orb
pusha
sbb
inc
setle
lods
pop
test
insl
test
ljmp
push
xchg
adc
jne
pop
enter
pop
popa
imul
and
jb
mov
push
mov
popa
and
mov
stos
pop
pop
jnp
pusha
fistpl
int
adc
jle
into
mov
jl
leave
shlb
setg
or
xor
sub
out
lret
cmp
rol
fwait
xchg
mov
or
mov
test
test
cmpsb
loope
imul
cmpsb
js
das
cli
out
or
adc
sbb
mov
lods
lret
insb
and
lretw
xchg
fistl
dec
outsl
dec
sbb
sbb
hlt
jg
add
jb
xor
ss
dec
out
mov
ds
adc
insl
movsb
dec
es
lods
stc
pop
cmpsb
xor
push
divb
ficomps
imul
aad
push
jnp
roll
push
mov
and
outsb
pop
out
push
adc
scas
int3
jmp
mov
aad
inc
loop
loope
out
pop
mov
arpl
jg
inc
loop
ss
mov
sbb
in
xor
popf
jo
push
sbb
adc
cmp
les
jmp
cmp
inc
leave
push
sbb
pop
outsl
arpl
push
and
push
mov
aad
cmpsl
cmp
mov
dec
shll
cltd
imul
outsb
inc
fdivl
iret
into
aas
rorl
cmp
icebp
push
jmp
mov
sub
mov
mov
xchg
lret
js
sub
out
jno
and
push
out
mov
fcomps
xchg
inc
gs
sti
repz
mov
in
mov
shll
pop
popa
xlat
mov
je
adc
std
mov
stc
fs
test
add
repz
into
jne
int
mov
mov
xor
pushf
ret
dec
sbbl
sbb
ret
addr16
adc
leave
scas
dec
bound
inc
sahf
inc
in
pop
inc
cmp
push
call
pushf
xchg
dec
out
adc
ljmp
out
sub
sub
and
mov
inc
dec
addl
pop
mov
push
shrb
or
dec
pop
xchg
ds
pushf
cwtl
cmp
mov
leave
movsb
outsl
stos
or
leave
mov
xchg
fwait
ret
push
mov
icebp
lret
gs
data16
mov
add
mov
jle
iret
insl
into
sub
push
inc
leave
je
into
scas
stos
repnz
out
add
dec
jb
loopne
fs
aas
stos
mov
jne
mov
out
jle
and
fmul
pop
adc
mov
sbb
push
inc
pusha
pusha
imul
in
sbb
xchg
incb
push
addr16
hlt
jnp
testl
cmp
mov
push
sub
rol
pop
pop
cwtl
cmpsl
push
add
push
enter
ret
test
ds
push
dec
adc
push
add
fistpl
jnp
in
lods
fprem1
int3
test
mov
push
insb
gs
jne
add
sbb
or
cld
aad
in
cmc
int3
test
mov
push
insb
gs
jne
add
sbb
or
clc
aad
in
cmc
enter
movsl
cwtl
mov
inc
jge
push
add
adc
loope
sarl
cmc
mov
sbb
dec
mov
pop
jne
jb
popf
push
fisubl
xor
and
adc
add
mov
and
mov
pop
repnz
mov
xor
and
adc
add
jb
bound
mov
dec
mov
sub
cmp
dec
ret
jmp
sbb
imul
cltd
stos
roll
repnz
lea
jnp
sbb
dec
cmpsb
adc
bound
push
test
sbb
fdivr
out
jecxz
or
repz
scas
mov
inc
xlat
xlat
fnstenv
orl
aad
pop
cmp
jmp
ds
mov
and
push
in
pop
xchg
sub
stc
shl
ret
cld
xor
add
arpl
cmp
jge
or
test
bound
scas
push
lahf
dec
loop
lea
mov
mov
fs
mov
cltd
or
loop
sub
jg
push
push
scas
std
and
cld
dec
jns
sbb
jns
pop
rcrb
cmp
rcrb
cmp
adc
add
gs
pop
cltd
stos
imul
cmp
or
jo
xchg
ja
jbe
add
add
pop
movl
loope
out
repnz
xchg
or
sti
jge
jb
push
loope
fstl
adc
xchg
sub
ss
mov
insb
cmpsb
dec
push
mov
push
cmp
inc
cltd
mov
mov
pop
repnz
cmp
or
sbb
jmp
add
jb
bound
mov
mov
pop
repnz
cmp
or
sbb
jmp
jno
push
gs
jno
pushf
imul
or
popf
push
dec
jbe
cs
or
jecxz
leave
adc
jb
add
in
adc
shr
scas
pop
jnp
mov
xchg
cltd
in
add
jg
pusha
jo
dec
cmp
cmp
loopne
mov
sub
movsb
mov
add
lcall
out
xchg
sahf
repnz
ret
out
ds
push
pop
jo
ja
jge
xor
mov
shrb
andl
rcll
repz
and
xchg
out
cmp
pop
sub
and
rcrb
mov
push
into
dec
or
mov
pop
add
mov
push
mov
out
and
lcall
icebp
nop
inc
or
sbb
cmc
out
scas
addl
js
call
mov
popa
andb
jne
or
jo
xchg
out
mov
pop
mov
xor
adc
movsb
enter
pop
bound
aas
mov
out
test
dec
add
sarb
mov
jne
f2xm1
movsb
leave
cmpsb
repnz
mov
loopne
fdivrs
gs
adc
sub
shrl
ret
shrb
or
mov
sub
push
scas
daa
mov
sarb
pop
fcomps
fdivs
cmpsb
cltd
and
dec
mov
cmp
cmp
imul
add
adc
pusha
add
cld
mov
cmc
mov
mov
ljmp
sub
mov
cwtl
in
push
cwtl
xchg
push
adc
lods
dec
test
sub
push
nop
scas
repnz
sahf
leave
inc
mov
cmp
jmp
aas
ss
jns
pop
inc
push
inc
mov
movb
shrl
pushf
xchg
int
and
dec
xchg
and
or
jle
enter
lret
jp
cli
push
inc
fimull
inc
insb
mov
loop
mov
xchg
cmp
jae
outsl
repnz
jno
movsl
pop
pop
rcl
mov
and
imul
jg
mov
sbb
je
repnz
xchg
outsl
leave
sbb
jmp
push
adc
xor
incl
cmpsb
cltd
das
scas
fs
cli
xor
xchg
mov
mov
das
jb
fnsave
repz
jg
sbb
js
sbb
imul
shlb
subb
lret
stos
add
dec
enter
das
shl
sahf
in
add
icebp
xorl
orb
test
push
leave
mov
test
mov
lds
mov
fadd
inc
mov
add
ja
in
and
inc
popa
rcrb
gs
sbb
enter
mov
dec
scas
cs
add
mov
daa
pop
imul
lods
in
inc
fiadds
mov
push
mov
mov
mov
test
sub
push
lods
or
sbb
in
mov
outsb
sub
sbb
xchg
out
aaa
pushf
xchg
xchg
sti
mov
test
pop
push
das
cmpb
mov
fisubs
ret
lcall
xor
mov
xchg
dec
sub
call
in
pop
jle
mov
scas
test
push
mov
rcll
jnp
push
mov
mov
inc
cld
lock
or
sti
cmp
mov
push
dec
push
rcrl
repz
cmc
shrb
aam
or
jle
idivl
sub
lahf
mov
stos
icebp
adc
jae
cld
and
xchg
ja
xor
insb
mov
inc
xlat
mov
insb
mov
adc
push
xchg
lock
push
mov
mov
shrb
sbb
lret
dec
sbb
push
push
cwtl
dec
jge
push
int3
sub
jbe
icebp
das
movsb
push
les
je
pop
stos
call
sub
push
xor
add
mov
jb
and
js
push
mov
aaa
fidivrs
xchg
adc
insl
cmpsb
mov
sahf
inc
sbb
shrl
sti
mov
sub
jg
cmp
adc
jne
jl
sub
mov
mov
jnp
ljmp
cmpb
dec
lahf
jmp
movb
xchg
xor
into
jne
sub
hlt
mov
xchg
push
xchg
push
pop
arpl
scas
lret
rcr
adc
loop
mov
jae
add
ljmp
add
call
stc
dec
push
dec
das
pop
test
pop
lret
dec
lock
pop
xchg
cs
cli
hlt
or
adc
mov
insb
mov
out
fidivl
xor
in
or
pop
and
xchg
fbld
and
push
jge
cltd
mov
cwtl
xor
les
mov
push
cltd
xor
add
mov
jns
xchg
fxam
jbe
pop
xchg
loope
push
pop
pop
mov
jmp
push
pushf
mov
push
xchg
mov
jg
test
and
adcl
dec
mov
out
outsl
cli
and
xorb
std
outsl
push
cmp
xlat
xor
movsl
xchg
jp
jae
dec
push
cltd
bound
cld
movb
mov
outsb
xchg
adc
inc
movsl
in
inc
pop
pop
xor
or
sahf
cmp
inc
xchg
imul
sub
je
adc
inc
cli
enter
adc
xor
jl
cli
mov
std
pop
out
xchg
mov
cltd
rol
int3
bound
arpl
mov
mov
fdivs
and
push
loope,pt
filds
dec
or
mov
xchg
mov
insb
push
das
daa
lret
adc
das
div
loop
sub
fldcw
or
lods
gs
test
in
cmp
stc
push
sbb
xor
jne
insl
inc
sarl
or
leave
mov
sti
lret
mov
sbb
push
sbb
clc
js
fcom
shrl
arpl
insl
aaa
inc
in
mov
cmpsl
push
mov
scas
mov
int
sub
xchg
mov
mov
lods
std
lock
rcll
pop
decl
lds
inc
stos
inc
inc
jl
xor
int
ret
shl
lret
or
xlat
add
and
xor
je
out
pusha
inc
test
leave
dec
dec
lock
xor
xor
loop
sub
xchg
js
js
sbb
out
or
jo
jl
mov
pop
pop
in
mov
push
xor
adc
lods
inc
push
inc
cs
pop
loope
or
stos
cmp
ds
adc
add
sti
xchg
jl
sbb
in
aam
cli
gs
xor
inc
into
or
aaa
xchg
lcall
cld
popf
adc
cmc
xor
dec
dec
into
lret
ja
repz
or
and
jbe
mov
cwtl
pop
mov
and
pop
or
movsl
mov
add
pushf
roll
pop
mov
imul
mov
push
push
vcmpeq_usps
aad
lea
jp
in
mov
test
xchg
add
push
mov
fsubrl
fnstsw
bound
int3
int3
xor
mov
cmpsl
jmp
lock
jg
xchg
or
adc
sbb
test
aas
jg
in
xchg
push
xchg
imul
shlb
jae
add
es
rcll
fmuls
add
or
pusha
push
push
sbb
jecxz
inc
test
add
inc
jno
lcall
aam
adc
mov
mov
es
sarb
mov
inc
inc
int3
into
jmp
jae
stc
and
sbb
push
int
scas
mov
mov
sub
push
mov
push
out
push
xchg
arpl
and
je
cs
rcr
jmp
pop
leave
dec
pop
cld
or
or
xor
pushf
cwtl
add
subl
icebp
movsl
nop
inc
scas
jle
or
and
pop
popa
imul
adc
daa
cld
adc
mov
pop
xchg
sub
or
xlat
push
push
cli
jb
mov
andl
shl
mov
bound
cltd
or
mov
or
movsl
loop,pt
loopne
mov
ljmp
std
fs
stos
sub
lea
imul
scas
jl
sbb
pop
mov
decl
aaa
lcall
enter
ss
lret
jge
imul
xchg
adc
jmp
jmp
lock
mov
out
pusha
push
movsb
pop
push
lock
loope
and
xchg
jmp
lret
int
pop
and
rorl
sti
popf
icebp
mov
mov
je
into
iret
cmp
pusha
push
ret
mov
and
aam
outsb
jb
dec
notb
lock
lods
cltd
cmp
xchg
ficoms
mov
dec
fildl
jmp
aas
fisttps
pop
push
std
push
ret
xor
or
fcom
testb
mov
sub
push
lods
shrb
mov
clc
mov
ret
jle
call
add
add
or
cli
pop
adc
std
xchg
fsubl
js
stos
sarb
xor
xchg
cwtl
scas
movsb
push
inc
rol
leave
mov
into
xchg
movsb
jo
cmp
js
aad
pop
stc
shlb
mov
fildll
pusha
fidivl
bound
adc
xor
adc
push
cmc
pop
and
sbb
push
jae
mov
mov
xor
and
cwtl
sub
add
xlat
push
adc
xchg
stos
fidivs
fldt
and
or
sti
in
cmp
inc
test
cmpl
sbb
jmp
pop
rclb
enter
mov
pop
pop
and
mov
xchg
mov
popa
mov
xchg
sub
cmc
mov
cmp
cmpsl
sub
push
add
jge
out
push
sbb
sub
gs
cld
mov
push
rcrb
adc
popa
enter
jbe
arpl
in
push
shl
xchg
sub
enter
and
pop
adcb
cld
sbb
test
pop
inc
pop
mov
jle
dec
sbb
dec
lret
dec
push
test
popa
adc
push
inc
popf
cmp
dec
iret
fcompl
adc
movsb
mov
xchg
pop
xor
sub
into
rcll
sub
icebp
dec
pop
lcall
stos
test
rcrb
push
into
xor
mulps
push
test
sbb
enter
sti
adc
pushf
add
add
in
mov
outsl
mov
inc
mov
ljmp
std
fucomp
xchg
ret
mov
mov
and
outsb
dec
lret
out
xor
jb
int3
psubsw
in
sarl
rcr
inc
push
xchg
add
rolb
xor
testl
dec
dec
out
mov
in
mov
into
fdiv
sbbl
mov
leave
incb
and
stc
out
lret
aad
lods
popf
adc
gs
mov
mov
into
cld
in
cwtl
fld
cmc
iret
jg
aad
push
pop
cltd
jmp
and
fldcw
xlat
lock
mov
jecxz
jp
sbb
out
sbb
mov
push
jb
mov
mov
mov
push
ja
lahf
pop
in
add
mov
rolb
fs
rol
pop
add
or
sbb
outsb
sub
aaa
ja
cmc
pop
test
inc
mov
lahf
lahf
loopne
popf
jne
push
push
dec
and
xchg
cltd
pop
xchg
inc
jecxz
mov
mov
inc
dec
xchg
imul
mov
pushf
aad
mov
inc
mov
rol
in
push
mov
roll
aad
ret
or
and
cltd
mov
icebp
jae
lret
mulb
dec
in
sahf
xchg
add
adcl
nopl
mov
push
mov
add
outsl
mov
scas
lods
and
ret
pop
mov
in
fisttps
dec
fsts
jb
xchg
push
adc
clc
xchg
in
push
pop
cmpb
pop
divb
aas
rolb
mov
test
shll
sbb
in
sarb
jae
imul
and
mov
xchg
mov
dec
mov
and
xlat
cmpsb
jmp
ret
cld
jmp
adc
imul
repnz
cmp
add
ret
cmc
cli
mov
push
dec
adc
add
mov
and
push
jbe
xchg
adc
test
or
stos
pop
sbbb
xchg
cmp
int3
adc
rcrb
call
aam
imul
dec
and
dec
mov
in
iret
mov
es
xor
lret
jno
push
mov
icebp
push
cwtl
mov
mov
add
push
cli
mov
addl
or
and
shll
jge
cld
cmc
aad
sbb
rorl
icebp
fimuls
inc
sbb
out
cmp
sbb
mov
test
iret
xor
or
dec
and
xchg
fs
mov
daa
ror
aam
pop
cwtl
aaa
mov
dec
pushf
mov
aas
ljmp
mov
jle
mov
jns
mov
aad
xor
pushf
test
loop
cs
ja
inc
das
pushf
dec
shll
sbb
or
pop
rcrl
mov
pop
adc
sahf
cmp
andb
and
popf
and
pop
in
arpl
or
mov
test
lcall
add
movsl
pop
pushf
cld
loop
out
sbb
subl
repz
jns
in
sub
sbb
movd
and
and
or
cmp
mov
lock
mov
icebp
cld
jp
inc
ja
dec
xchg
pop
leave
cmc
inc
sbb
leave
nop
jb
in
dec
movsb
mov
cltd
inc
jl
jb
adc
cmpsl
in
lods
cwtl
icebp
push
lea
cltd
pop
adc
nop
push
fadds
xor
arpl
cmp
push
jo
push
xor
mov
sbb
sub
push
sub
shlb
aam
sbb
and
test
mov
cld
fldt
fucom
fnstsw
xchg
and
cld
call
lret
frstor
xorb
popa
mov
repnz
rcrl
mov
xor
or
mov
cmp
mov
aas
cmovle
or
push
out
jnp
fdivrs
and
adc
xchg
xchg
mov
sub
fdivl
sbb
movsb
and
push
xchg
enter
jb
jle
push
dec
cmp
push
gs
xor
mov
stc
push
pop
leave
push
pop
mov
je
ds
out
push
addr16
int3
shrb
sbb
std
cmp
sbb
inc
pushf
inc
stc
xor
cld
dec
or
xchg
fsubrp
mov
jno
loope
sub
mov
pop
in
push
leave
ds
movsb
ja
shll
push
stos
jne
int3
sbb
jp
call
arpl
mov
ret
mov
test
in
nop
int
or
mov
dec
xor
icebp
int3
les
mov
ss
enter
rorb
stos
fisttpl
or
enter
mov
push
lret
sub
test
jns
in
sbb
xchg
push
cmp
loope
bound
mov
js
pop
loope
dec
add
mov
fldt
cs
fidivl
xchg
movsb
in
pop
sbb
dec
mov
dec
pop
mov
dec
addb
mov
aaa
mov
mov
pushaw
movsb
jbe
push
out
call
inc
lret
popf
xchg
cmp
xor
xchg
push
lret
or
fiadds
sub
dec
sbb
mov
mov
sbb
popa
rcr
leave
in
sahf
cmp
addl
push
jb
in
imul
stc
xor
in
fwait
and
ja
mov
jb
xchg
and
test
pop
icebp
arpl
mov
push
jle
in
xchg
and
xchg
stc
rorl
inc
aas
es
adc
xchg
getsec
scas
dec
in
jns
ljmp
or
xlat
popa
jle
mov
cmp
movsb
jo
movsl
out
rcrl
cs
inc
movsl
aas
rclb
jbe
jg
aad
ja
fistpl
fs
mov
or
dec
andl
push
jo
orb
xor
mov
inc
sub
cmpxchg
inc
in
pop
fistpll
clc
inc
jl
push
adcb
insb
dec
sahf
jo
aam
push
jb
sbb
scas
pusha
mov
or
add
jmp
test
lock
cmc
mov
popf
idivb
push
xchg
or
pop
mov
jl
and
sti
mov
sbb
addr16
shl
shlb
jge
push
jb
jl
sbb
mov
xchg
inc
dec
sub
push
jo
fcompl
jle
adc
loopne
sbb
dec
orb
mov
prefetch
inc
lret
cmp
mov
sti
in
lods
jge
sbb
and
jno
ret
inc
daa
cltd
cmp
sbb
pop
test
das
popa
pop
icebp
jl
sbb
dec
shlb
add
pop
inc
sbb
mov
iret
pusha
mov
or
lahf
add
imul
cmp
and
cmc
imul
adc
mov
or
xchg
icebp
nop
lcall
or
jne
mov
push
or
jmp
add
dec
mov
inc
inc
shl
stos
lea
test
cmpsb
aam
inc
aaa
cmpsl
xor
mull
mov
insl
dec
push
nop
lret
lods
lret
ret
mov
jg
sbbl
jecxz
xor
adc
in
insb
ficomps
push
lret
and
inc
push
pop
cli
push
test
sti
mov
mov
xchg
mov
insb
xchg
aad
pusha
jecxz
cmp
sbb
fs
je
pop
pop
fisubl
outsl
shll
jp
aad
mov
cld
xchg
call
popf
ds
and
mov
rcrb
iret
sbb
adc
aas
and
xchg
aad
lret
call
test
inc
les
jae
lahf
push
jbe
jmp
push
stc
mov
jl
sbb
mov
or
imul
mov
orl
arpl
xor
imull
pop
test
mov
pop
mov
jmp
rcll
stc
inc
ja
jecxz
mov
mov
inc
test
pop
adc
add
sub
pushf
or
xlat
inc
mov
pop
cmpsb
push
xchg
xchg
adc
fldcw
add
ja
push
int
repnz
inc
lea
push
dec
mov
ds
dec
test
sbb
addb
iret
loop
loope
and
loop
int
sbbb
jp
xchg
jle
mov
adc
es
mov
lock
pop
sbb
lahf
insb
push
mov
leave
das
cmp
cmp
push
lcall
xchg
push
xor
lcall
int
pop
add
icebp
ret
xchg
mov
out
mov
push
dec
xor
dec
sub
or
push
js
pop
jecxz
jns
sub
and
mov
mov
ret
mov
imul
outsb
xchg
mov
and
xchg
test
addr16
cmp
and
fdivl
push
dec
jp
in
rclb
mov
lods
fadd
xlat
frstor
mov
sbb
mov
imul
fisttpll
jl
xchg
pop
fldl
jle
outsl
xor
xchg
pop
shll
addr16
dec
mov
mov
enter
loope
inc
jecxz
and
and
sub
cmp
mov
outsl
idivl
stos
pusha
sub
inc
dec
add
pusha
fwait
addb
jns
fdiv
cmpsb
fdivrl
xchg
cltd
shlb
rcrb
arpl
adc
jae
inc
pop
movl
xor
mov
dec
repz
aas
jbe
stos
xor
cmp
push
jge
jns
cld
inc
mov
mov
inc
stos
ret
push
cmc
scas
out
fcompl
sub
mov
in
adc
push
add
xor
xchg
jg
mov
fisttpll
mov
lds
xchg
mov
sti
je
es
js
mov
imul
and
push
lods
iret
xchg
fdivl
mov
xchg
lods
leave
pusha
inc
adc
and
and
xor
das
call
sbbl
pop
sbb
addr16
inc
scas
scas
sbb
inc
inc
pop
mov
jns
sub
add
fbstp
cmp
push
shrb
or
sbb
adc
inc
call
daa
sbb
cmp
je,pn
cmpsl
fidivs
pusha
pop
sbb
jb
sub
aaa
test
test
std
jl
je
adc
jne
fs
js
sbb
sub
adc
mov
popf
mov
mov
mov
bnd
xchg
fwait
jle
cmpsb
mov
das
stc
sbb
add
jb
bound
mov
mov
pop
repnz
cmp
or
sbb
jmp
add
jb
bound
mov
mov
pop
repnz
cmp
or
sbb
jmp
add
jb
bound
push
mov
mov
mov
pop
repnz
cmp
or
sbb
jmp
add
jo
bound
dec
imul
test
cmp
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
mov
ficomps
nop
push
xor
push
cmp
dec
outsl
pop
jg
pop
jl
mov
mov
in
into
cld
mov
sub
cmp
dec
or
insb
dec
jl
mov
mov
in
into
cld
fimuls
aas
sbb
dec
sub
and
sub
into
lods
fst
sti
ret
push
mov
pop
int
fcmovnb
lods
aaa
ret
cmp
out
or
arpl
int3
fdivl
inc
adc
mov
xchg
rcl
ret
or
jle
and
jae
idivb
pop
cmc
pop
cltd
mov
mov
aas
cmp
mov
inc
out
ret
jl
mov
mov
enter
mov
cld
ds
rclb
fwait
sbb
pop
sahf
xchg
cmp
pop
fildll
inc
sub
xchg
xor
adc
lahf
ja
or
icebp
mov
sbb
fsubrl
es
mov
fs
xor
out
push
jne
inc
in
push
dec
cs
cmp
jnp
loope
jg
cs
dec
jle
dec
scas
pushf
mov
int3
out
fdivr
in
into
cld
fimuls
sbb
sub
cmp
dec
outsb
pop
jle
dec
jl
jmp
iret
cli
fildll
stos
js
jl
jns
pop
pop
jns
lret
cmp
cmp
cmp
ret
iret
std
std
test
cltd
mov
dec
push
imul
add
out
pushf
in
ljmp
in
into
cld
fimuls
sbb
sub
cmp
dec
outsb
pop
jle
dec
jl
mov
mov
in
into
cld
fimuls
sbb
sub
cmp
dec
outsb
pop
jle
dec
jl
mov
ret
pop
sbb
fstl
repnz
sub
cmpsl
sub
loope
inc
ret
in
loope
jb
je
adc
lret
xor
popf
jnp
aam
cld
push
shll
xchg
fistpll
sarb
xor
in
mov
pop
fistl
ret
repnz
adc
xlat
dec
and
rcll
into
jmp
xchg
pop
mov
test
mov
movsl
inc
pop
dec
dec
adc
daa
lahf
fcmovu
push
test
inc
dec
stos
mov
mov
es
pop
adc
cmp
mov
adc
outsb
dec
fwait
aas
into
pop
aad
push
mov
add
xlat
push
jne
cmpl
cltd
pop
cld
test
xchg
sbbb
inc
cmp
xor
push
lock
xchg
push
mov
fists
xor
xchg
insb
dec
mov
pop
movsl
ret
ret
and
aad
imul
fcompl
bound
std
mov
and
lret
movsl
fnstcw
push
cld
rolb
dec
stc
sbbb
rorl
jl
or
in
pop
adc
or
xchg
subl
test
or
das
push
or
lods
xchg
sbb
in
mov
push
pop
sub
jno
mov
push
in
das
xchg
inc
cmp
out
pop
scas
mov
and
mov
sub
add
push
loopne
sbb
jb
mov
test
rcrl
movsl
sub
xchg
popa
push
lock
inc
sub
xor
inc
outsl
ss
push
mov
frstor
loope
add
push
push
or
xlat
add
adc
pushl
inc
mov
push
ja
fstpt
inc
movsl
xchg
lea
clc
mov
es
push
shrb
mov
or
inc
jl
movsb
pop
pop
stc
loopne
adc
sub
dec
mov
add
push
int
lods
aam
jne
std
xchg
inc
fildll
lods
stos
xor
add
pushf
aaa
and
cld
cmp
dec
outsb
shll
jecxz
repnz
or
xchg
loop
xor
cmp
rolb
mov
sub
outsb
pop
pop
bound
cmpsl
iret
clc
push
mov
push
xchg
mov
fcmovu
push
mov
mov
or
subb
sti
sbb
es
jae
and
mov
stos
jle
add
outsl
cmpsb
int
sub
popa
repz
push
fwait
push
jns
movsl
mov
negb
js
loope
mov
das
sahf
pop
je
mov
lods
push
mov
ret
fdivrs
insb
mov
mov
push
jle
loopne
or
imul
lds
jp
push
inc
adc
xchg
int
pop
xchg
pop
movsl
lcall
push
rcrb
inc
mov
test
aaa
mov
scas
push
sub
mov
cmpsb
mov
aam
cs
dec
dec
adcb
fwait
mov
mov
push
jle
mov
add
imul
mov
data16
mov
cmc
sub
out
adc
sar
mov
add
inc
hlt
and
and
ss
add
push
add
sub
sub
add
dec
mov
mov
pop
js
ljmp
or
int
rcrl
cmc
or
jmp
push
push
test
dec
outsb
or
xor
outsb
cmp
outsb
in
clc
xor
jnp
lods
mov
jg
or
movb
dec
jp
into
in
dec
xor
daa
aas
inc
insb
inc
xor
push
jo
inc
add
leave
mov
pop
xchg
imul
and
movsl
sbb
repnz
loope
or
cs
mov
push
sti
or
mov
fisttps
pop
cwtl
fcomps
movsb
xor
pop
js
adc
and
gs
mov
adc
lret
pop
pop
in
fcoms
sub
mov
sbb
and
mov
shll
outsb
std
sbb
imul
ret
cmpsb
lods
stos
mov
adcb
mov
xchg
shll
pop
ljmp
lahf
dec
pop
out
mov
cld
jnp
fidivrl
clc
push
sbb
hlt
iret
pop
in
and
stos
jae
imul
mov
popf
adc
dec
out
xchg
or
push
cmp
jmp
outsb
inc
sbb
xor
cmp
mov
inc
push
xchg
fadds
sub
mov
out
cld
push
loopnew
test
cmp
fs
aaa
test
and
jnp
cwtl
pop
pop
mov
or
in
decl
popf
shrb
rcrl
lret
cmp
mov
lret
adc
xor
mov
mov
lds
in
or
push
or
int3
test
push
sub
and
rsqrtps
jle
or
cwtl
out
jp
xchg
lret
push
adc
les
inc
jno
mov
rolb
roll
lods
test
add
repz
sarb
fsubrl
add
push
mov
xchg
cmp
jbe
cmp
lds
push
mov
negl
adc
insb
jmp
imul
leave
js
jb
and
ficoml
out
mov
aaa
cmc
and
ljmp
test
insb
cs
and
jge
push
in
xchg
or
mov
imul
sbb
push
in
lret
xchg
jae
aad
mov
jg
inc
dec
add
mov
mov
mov
dec
dec
mov
jno
pop
mov
add
out
orl
push
pushf
rep
outsl
xor
or
mov
sub
xor
aas
xchg
push
fwait
mov
sub
jno
lcall
mov
dec
shll
push
bound
ljmp
push
jbe
popa
mov
in
shrl
sbbb
jp
lock
xor
mov
add
dec
lahf
pop
jle
mov
in
dec
fisubrs
fstpl
jnp
jo
fmull
roll
repz
mov
sahf
dec
mov
pop
in
xchg
in
lods
movsb
out
mov
mov
leave
pusha
loope
lea
jmp
imul
in
loopne
mov
sub
mov
test
add
add
aad
mov
pop
mov
cmp
out
and
jmp
push
popa
mov
in
mov
scas
adc
mov
addb
sbb
jl
call
xchg
xchg
sbb
repz
icebp
pop
mov
cmp
jmp
das
mov
rolb
jmp
frstor
outsl
dec
sub
cmp
mov
sub
xchg
in
mov
or
lods
in
xor
push
ficomps
push
mov
pop
mov
push
inc
inc
xor
addr16
aad
lea
cli
daa
in
scas
divb
outsb
sub
jp
jbe
mov
xchg
sarl
mov
popf
sbb
std
inc
dec
divb
call
int3
bnd
pushf
enter
sbb
outsl
addr16
mov
rcr
dec
xchg
mov
mov
mov
adc
pop
sbb
ds
adc
add
mov
rcrb
sbbb
jnp
adc
add
arpl
ljmp
pop
sbb
lret
pushf
fsubrs
mov
divl
and
int
dec
rorl
cltd
add
cmp
push
xchg
fs
faddl
scas
mov
std
mov
ja
stos
jns
arpl
fsubs
mov
es
addl
pop
add
insl
lds
xchg
or
mov
sbb
jb
inc
mov
mov
out
and
test
or
das
iret
jnp
and
mov
xchg
pop
pop
push
or
rcrb
test
sbb
xor
daa
sub
push
enter
adc
jne
pusha
mul
add
inc
ss
and
push
ds
push
out
adc
popf
xchg
add
pop
mov
pop
xlat
ret
mov
enter
jno
fidivs
mov
dec
dec
ja
xchg
inc
jnp
shrb
inc
js
xor
in
sub
cmp
jnp
mov
icebp
jl
jmp
inc
aad
pop
int
std
lea
mov
xor
inc
lcall
xchg
mov
icebp
sbb
xchg
daa
jecxz
push
pop
fadds
push
ljmp
pop
cmpsb
movsl
notb
xor
repnz
test
loopne
insl
insl
ss
sbb
rcl
lock
pop
mov
push
repnz
iret
and
in
cmc
jg
das
adc
jmp
xor
insb
insb
cmpsl
ds
push
mov
mov
and
test
in
lcall
imul
cltd
insb
in
mov
jmp
mov
dec
in
movsb
adc
xor
push
in
jb
pop
das
nop
popa
dec
cltd
ficompl
mov
pushf
adc
sub
pop
add
insl
mov
mov
xor
test
sub
adc
scas
cs
xor
scas
in
mov
xchg
stos
pop
sbb
loop
mov
pop
sbb
cmp
cmp
ljmp
mov
insl
jp
es
shl
xor
in
dec
popa
xchg
sbb
out
aaa
jae
stos
mov
data16
or
or
xchg
test
add
repnz
and
pop
pop
jno
jo
push
repnz
mov
cli
jle
cmp
xchg
filds
imul
or
sbb
xchg
into
xchg
sbb
enter
mov
scas
dec
not
loope
push
pop
jb
sahf
out
scas
jmp
or
sarb
sbb
aaa
sbb
repz
in
push
shr
mov
or
xor
jae
std
jle
lahf
in
aaa
enter
mov
dec
xor
movsl
out
lods
pop
sbb
insl
ljmp
jmp
hlt
mov
mov
out
repz
jge
lret
popa
int
xchg
sub
xchg
hlt
xchg
xchg
pop
mov
pop
repz
dec
sbb
lds
lock
frstor
roll
dec
fsubrl
dec
pushf
enter
in
call
imul
inc
and
pop
inc
lret
mov
sub
xor
mov
adc
or
je
mov
mov
mov
mov
mov
and
jo
mov
push
xor
push
mov
add
push
rcll
ja
es
insl
lock
xchg
clc
js
mov
jmp
adc
xchg
sub
jb
add
or
in
mov
mov
xchg
or
and
jg
mov
or
xchg
fs
cmc
push
sbbb
neg
jne
xor
lcall
or
jmp
mov
cltd
lret
sub
lea
xchg
adc
icebp
lahf
hlt
lock
scas
sbb
dec
lahf
mov
jno
xchg
jae
jbe
xchg
arpl
mov
sbb
sbb
fwait
push
sbb
mov
lcall
inc
cmc
mov
loope
jnp
loope
test
fsub
in
cwtl
mov
bound
inc
mov
out
push
or
fsubrs
sbb
cwtl
mov
mov
lods
pop
xchg
stc
adc
xor
je
cwtl
mov
fdivrs
subl
rclb
adc
inc
xlat
adc
dec
mov
push
rcl
into
les
push
sub
pop
mov
add
cmpxchg
ss
push
sbb
inc
xchg
mov
dec
out
xchg
fwait
arpl
gs
jl
clc
arpl
xchg
xrelease
shlb
les
fsubrs
insb
pop
mov
dec
adc
push
sbb
dec
mov
dec
mov
sti
fdivl
pinsrw
inc
fidivl
or
aad
cmp
shll
jae
dec
xor
daa
scas
pop
sbb
dec
in
rcl
xchg
add
or
sti
imul
sub
or
sbb
inc
xor
lret
lret
push
std
sbb
dec
aam
add
imul
test
jmp
mov
jnp
inc
addr16
mov
ss
inc
imul
push
jne
mov
into
pop
mov
inc
sbb
cmp
addr16
test
cmp
enter
adc
cmp
inc
push
push
sub
data16
add
mov
mov
push
mov
dec
mov
repnz
rcr
mov
inc
inc
call
mov
or
pop
cwtl
pop
pop
iret
aad
xor
subb
call
adc
nop
fdivs
cmp
lods
mov
mov
int3
sub
shlb
int
gs
add
lods
pop
cmp
and
pop
mov
sbb
xchg
test
sbb
xor
fstpt
xchg
lahf
mulb
jg
movsb
jb
ret
cmpb
aaa
adc
push
xchg
shlb
pop
jecxz
xor
mov
add
dec
leave
push
xchg
out
xchg
and
movsl
jns
adc
icebp
and
bndstx
fidivs
add
add
adc
cmp
lods
aaa
mov
fisttpll
or
cmp
sahf
fists
jle
jecxz
out
cmp
dec
xor
or
xor
add
sub
lods
nop
or
lds
mov
stc
movsb
notb
jecxz
mov
jno
pop
jmp
fisubs
push
ret
fs
les
iret
inc
inc
js
and
out
mov
jne
movsl
mov
pop
mov
push
push
mov
xchg
dec
xlat
add
lahf
pop
and
mov
xlat
mov
mov
cs
jmp
dec
clc
xorl
icebp
fs
rorb
test
mov
cltd
xchg
xchg
jne
es
lods
pop
fidivl
add
mov
addl
outsl
mov
or
mov
in
jmp
mov
pop
call
jne
fdivs
sti
mov
aad
repz
xor
jnp
arpl
push
add
dec
test
pushf
mov
in
lahf
inc
loop
pusha
lds
test
outsb
mov
roll
fwait
fs
call
rolb
sbb
pop
les
mov
out
xchg
andb
mov
shl
ret
xchg
push
mov
xor
jno
mov
cmp
testb
pop
lcall
int3
pop
inc
les
test
or
ret
jo
xor
push
into
nop
fistl
or
push
adc
mov
cmp
test
dec
adc
cmp
mov
xor
sub
leave
movsb
pop
das
pop
pushf
jne
mov
mov
ss
cmp
ret
jge
lock
icebp
cwtl
jbe
push
mov
iret
shll
cmp
and
sub
pop
mov
dec
mov
gs
pop
lahf
jo
out
cmpsl
mov
and
xor
nop
insb
mov
mov
mov
or
jmp
pop
in
and
pop
and
fistl
jge
sbb
cwtl
cmc
jecxz
and
data16
jno
or
scas
cmc
pushf
xor
inc
cli
loop
jbe
int3
dec
mov
lods
das
mov
mulb
sub
test
cltd
or
inc
bswap
adc
pop
imul
pop
stos
jb
ss
jl
iret
iret
cs
adc
adc
xchg
test
push
int3
ret
bound
xor
jmp
add
sbb
dec
test
dec
mov
pop
cmp
pop
or
sbb
cmp
push
push
lcall
lods
movsl
stc
push
mov
or
mov
loop
push
lea
stos
inc
nop
iret
pushf
bnd
mov
sar
data16
mov
nop
stc
push
rclb
cmp
aas
inc
jp
pop
hlt
mov
data16
and
dec
ds
pusha
mov
mov
push
icebp
lods
arpl
addr16
or
sub
fld
jbe
xchg
xchg
mov
scas
lahf
insl
mov
xchg
or
sub
leave
mov
lds
loop
rcrb
pop
imul
jle
lea
pop
daa
lods
into
mov
js
stos
sbb
inc
cltd
sar
adc
clc
bound
xor
cmp
ds
dec
mov
ret
pushw
movsl
sbb
push
popa
mov
imul
lods
and
fstl
and
out
test
and
xchg
dec
adc
add
out
mov
lds
loope
adc
nop
enter
and
push
jns
out
dec
xor
pop
cmp
xorl
addb
or
adc
mull
mov
testb
jne
xchg
dec
and
or
data16
pop
sarl
and
xchg
fs
shrb
cld
scas
xchg
xchg
into
mov
pusha
xlat
push
xchg
dec
ds
lods
or
icebp
ret
sarl
fst
jne
jbe
push
sub
test
sahf
pushf
adc
leave
jmp
fdiv
xchg
push
icebp
inc
add
mov
mov
and
rcr
outsl
fistpl
sbb
push
mov
jg
int3
testb
adc
dec
fisubl
push
mov
dec
mov
hlt
mov
fisubs
loop
rcll
push
test
addr16
dec
jge
enter
xor
outsl
lret
xor
inc
mov
mov
adc
adc
inc
and
rep
jb
cmp
jno
xor
lret
push
test
es
cltd
add
test
adc
mov
mov
mov
mov
sbbb
aam
xchg
ret
mov
mov
je
jl
sbb
leave
push
xchg
repz
push
mov
push
lds
ret
insb
cmp
pop
sbb
pop
data16
dec
fildl
jne
daa
jo
lods
xchg
mov
pop
fiaddl
ja
push
cmp
jle
push
xchg
insb
adc
lea
or
sub
cmc
mov
xor
enter
mov
shrl
enter
cmpsl
mov
fwait
push
bound
add
data16
shl
sarb
packsswb
incb
mov
pop
out
ret
or
iret
dec
add
pop
inc
insb
sub
push
dec
sbbl
cmp
cltd
adc
push
pop
hlt
inc
je
add
loopne
xchg
mov
push
in
mov
xlat
inc
sbb
xchg
in
add
sbb
mov
sub
ds
xchg
mov
and
fucomp
js
loop
fdivl
lret
xchg
push
adc
pop
jmp
addr16
sarl
imul
aaa
loope
les
icebp
jns
ds
mov
inc
inc
std
mov
inc
jnp
cmpsb
mov
mov
pop
roll
push
dec
push
sub
stos
bound
out
xor
outsb
push
and
cmpsl
jge
and
in
push
mov
cld
mov
cwtl
insl
loope
mov
dec
in
gs
adc
shl
xchg
sub
js
movsb
cmp
test
nop
push
pop
lock
ja
mov
inc
add
repnz
fadd
sbb
xchg
or
add
jge
inc
int3
xchg
int
mov
adc
xor
movsl
fdivrp
pop
aaa
stos
cmpsb
push
jp
and
sbb
cli
dec
rorl
push
mov
js
or
ucomiss
loopne
xchg
popa
test
scas
in
mov
sub
mov
push
arpl
imul
jge
popa
test
sub
sub
popa
and
mov
fnstcw
cli
cmp
daa
outsb
xchg
enter
cwtl
testl
cltd
dec
dec
std
mov
inc
mov
das
jecxz
xchg
je
inc
xchg
inc
push
je
inc
cmp
push
insb
mov
pop
fldcw
daa
dec
int3
mov
mov
fs
and
xor
xchg
test
xor
adc
sub
mov
fdivr
push
jno
mov
lcall
inc
movsb
jbe,pt
sub
pop
mov
icebp
leave
xor
fst
pop
xor
cmp
daa
mov
inc
xchg
xlat
cld
out
cmpsb
lods
cmp
push
mov
adc
jl
divl
sbb
cmp
fimull
or
pop
and
cmpsl
sub
mov
mov
ss
jbe
fists
mov
push
movsb
mov
push
pop
xchg
jmp
lret
push
cmp
sbb
adc
aam
and
shr
mov
add
cmp
dec
adc
jg
mov
rcll
sbb
add
bnd
pop
adc
add
xor
imul
lods
das
cmp
scas
and
scas
sub
movsl
and
dec
imul
arpl
hlt
insl
arpl
ds
sti
stos
lret
in
nop
rcl
out
cltd
jg
mov
int3
out
fdivr
in
into
cld
fimuls
sbb
sub
cmp
dec
outsb
pop
jle
dec
jl
mov
mov
in
into
cld
fimuls
sbb
sub
cmp
dec
outsb
pop
jle
dec
jl
mov
mov
in
into
cld
fimuls
push
cmp
jle
dec
jl
mov
mov
insb
into
jl
repz
xchg
cmp
cmp
aam
xchg
mov
mov
in
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
and
xchg
mov
lcall
and
adc
add
jb
bound
dec
inc
pop
mov
mov
fwait
repz
ja
lret
ret
scas
xor
and
jb
add
jae
arpl
or
mov
mov
cltd
repz
jecxz
shll
and
push
pushw
or
jae
sub
ret
stos
mov
into
js
ret
jo
xlat
lock
leave
push
pop
jg
div
add
enter
cs
out
ret
ljmp
inc
push
fsubrl
arpl
mov
ss
mov
mov
mov
mov
xor
cld
xchg
int
mov
dec
je
mov
and
jmp
xchg
xor
ret
and
aam
imul
jmp
xchg
push
test
dec
or
pop
push
rcr
push
sbb
jmp
rol
ret
fistpl
push
sub
add
and
or
pop
mov
push
sbb
sub
mov
push
data16
mov
pop
push
test
inc
fucomip
stos
mov
xchg
repz
sti
rcll
ret
pop
xor
add
inc
arpl
stc
out
dec
int
mov
xchg
insl
xchg
jle
jg
jb
add
or
cmp
out
loopne
out
lret
mov
shll
dec
insl
imul
cmp
adc
add
pop
xor
std
cld
lock
sti
ror
ret
sub
cmp
or
sbb
arpl
dec
inc
pop
mov
mov
fwait
repz
sti
ror
ret
sub
cmp
or
sbb
arpl
dec
inc
pop
mov
cmpsb
insb
push
sub
mov
jb
call
mov
test
bound
cwtl
xor
xchg
outsb
arpl
mov
sub
je
addr16
shlb
ja
jns
lret
pop
rolb
push
sahf
cmpsl
add
jge
movsb
sbb
xchg
and
jo
sub
ljmp
add
cmpl
jmp
jp
fsubrl
xchg
jae
push
ret
cmp
lock
xchg
push
or
cmp
push
jns
stos
push
sbb
sbb
cmp
xchg
jo
cmp
xor
pop
mov
mov
pop
push
adc
jnp
pusha
mov
fnstsw
or
scas
mov
push
and
push
adc
sub
mov
add
stc
push
jl
add
out
push
mov
mov
mov
push
test
dec
push
push
adc
or
cld
scas
jbe
adc
mov
jae
cld
jno
stc
push
jg
repz
sub
sbbl
pusha
mov
stos
mov
push
insb
add
int3
in
sbb
pop
dec
dec
sub
cmpb
stos
push
add
xchg
lea
ret
outsb
stc
sub
sub
inc
out
ret
push
cmc
test
hlt
aad
outsl
push
add
sub
mov
push
mov
xchg
popf
pop
mov
jg
bound
jbe
adc
add
push
fnstcw
cmp
daa
lret
push
pop
scas
adc
adc
ret
cld
jmp
lods
clc
imul
int3
test
cmp
push
and
inc
sub
lret
xchg
dec
lock
shlb
adc
xlat
cwtl
xchg
clc
fcomp
faddl
insl
or
push
and
adc
shll
filds
sub
sbb
sahf
sub
aam
mov
stc
shrl
add
xchg
fwait
xorl
lds
jmp
pop
ret
nop
mov
cmp
add
fsubrl
mov
mov
dec
pop
pop
fildll
mov
imul
cwtl
mov
push
mov
mov
ret
test
inc
mov
ret
popf
and
inc
mov
repnz
xor
lahf
subl
fistpl
lahf
push
xor
in
call
push
int3
pop
push
int
mov
dec
or
mov
popa
mov
add
int
lahf
in
lret
pop
push
roll
icebp
jl
into
nop
mov
js
test
push
mov
jecxz
mov
testb
in
imul
pop
or
cld
mov
clc
pop
fidivrs
ret
loopne
popa
lret
mov
aam
push
enter
insb
in
mov
adc
xchg
shll
xchg
add
repz
cltd
cmpsb
dec
test
push
dec
pop
stos
jne
lods
push
clc
sub
cs
dec
in
sbb
sub
out
cwtl
adc
cmpsb
add
or
pop
aad
arpl
cmp
and
jmp
pop
dec
pop
es
sbb
outsl
add
es
int3
mov
test
dec
nop
pop
lea
lea
dec
inc
rcr
call
shll
adc
insl
test
mov
xchg
mov
and
ja
sub
popf
pop
pop
mov
sub
adc
ja
and
mov
addr16
mov
dec
jle
lods
orb
jle
or
jne
loop
sbb
xchg
inc
scas
aam
xchg
push
loop
dec
mov
std
in
cmp
xchg
data16
adc
std
pop
adcb
lcall
shll
and
inc
mov
sub
cmpsb
lea
lret
scas
addr16
sub
test
or
lret
push
lods
lock
test
jp
xor
mov
gs
filds
mov
inc
test
jmp
leave
ds
sub
aas
xchg
int
stos
into
imul
sbb
sbb
iret
xor
scas
or
loop
shll
ficomps
imul
les
jno
les
adc
dec
clc
mov
xchg
or
inc
xorl
shll
dec
outsb
push
add
aaa
cmc
xor
push
cs
cmpsl
adc
xchg
sbb
fucomp
or
adc
pushf
in
mov
pop
hlt
xor
in
scas
pop
scas
jnp
sub
xchg
mov
pop
or
jns
mov
push
je
js
sarb
push
xlat
mov
lods
iret
or
out
test
shll
cld
lods
les
dec
mov
out
cwtl
sbb
add
repnz
inc
sarb
xchg
jecxz
or
add
and
je
adc
push
jge
mov
xchg
lret
push
xchg
test
jmp
mov
cmp
push
shlb
add
lods
dec
negb
dec
lds
or
aam
addr16
mov
or
jo
mov
sbb
mov
imul
xor
ss
rcrl
pop
stos
mov
lret
or
add
outsb
imul
xchg
sarl
adc
test
pop
outsl
loopne
add
jp
sbb
outsl
out
loope
mov
ret
and
sbb
rclb
adc
push
pop
in
scas
pop
test
aam
fs
mov
out
repnz
outsb
insb
sahf
sub
sub
ss
or
xchg
and
jnp
pop
ds
pop
mov
cli
mov
rolb
daa
test
dec
or
sub
loop
iret
sbbl
in
inc
mov
enter
push
imul
pop
popf
and
gs
fmull
int3
ss
mov
fdivs
xor
xchg
adc
cmpsb
scas
mov
cmp
aaa
sti
inc
les
jne
loopne
add
mov
push
sbb
jp
dec
sub
es
add
in
or
xchg
lcall
mov
es
shlb
jge
mov
and
pop
jne
stc
ss
cmpsb
inc
xchg
or
jp
and
cmp
js
mov
fnsave
add
inc
popa
ljmp
xchg
fstps
repz
sub
and
scas
mov
pop
mov
jl
sbb
pop
imul
dec
lds
mov
mov
rcrb
sahf
mov
pop
mov
mov
inc
std
xor
movsb
adc
ret
jno
cld
inc
lret
cmp
test
shlb
sub
cmpb
dec
out
jmp
cmp
es
mov
js
lahf
stos
ss
stos
sbb
inc
add
or
lds
mov
mov
int3
push
adc
jbe
mov
test
stos
call
test
add
jne
mov
ds
push
movsl
shrl
imul
cmp
pop
les
push
out
faddl
fstl
hlt
add
fldenv
xchg
pop
es
mov
mov
fistps
dec
mov
mov
sti
in
add
push
sahf
out
mov
push
cld
loop
and
sbb
pop
add
mov
mov
pop
and
mov
or
es
jmp
cmp
out
cmp
add
inc
xchg
mov
xor
jb
leave
jl
enter
adc
xlat
jp
into
mov
bound
test
push
movsl
inc
stos
inc
data16
mov
xor
call
xorl
or
xor
dec
and
jbe
popf
movsl
test
mov
lods
inc
dec
mov
dec
call
push
xchg
jns
jns
add
pop
adc
int3
aaa
or
sbb
rcll
popf
ret
arpl
inc
add
push
rcl
sbb
mov
push
mov
inc
outsb
fnstenv
mov
adc
inc
xchg
sub
gs
xchg
cmp
mov
jae
in
push
cmc
lock
shrl
push
jns
sbb
pop
jb
adc
cmp
xchg
mov
loope
xor
pop
cmp
lret
jne
xor
loop
scas
lock
and
je
add
mov
or
roll
sbb
push
dec
mov
sub
adc
negl
mov
or
xor
test
xor
pop
nop
sub
movsl
lock
in
push
mov
leave
inc
push
pop
fs
stos
enter
mov
mov
inc
push
ja
push
cli
xor
int3
xor
lret
nop
test
mov
imul
jno
sbb
xchg
pop
dec
mov
fcmovnu
jp
adc
add
addr16
lret
loopne
mov
lea
inc
cmp
or
jnp
ljmp
out
mov
das
sbb
fildll
icebp
jg
mov
sub
cmp
mov
xor
decl
int
dec
sub
aam
out
sub
int
xor
js
mov
jo
scas
fcmovb
mov
arpl
negb
xchg
aam
jg
jb
aaa
push
imul
push
nop
sahf
push
outsb
hlt
and
enter
movsb
jo
push
mov
ret
ss
lods
test
cmp
pop
and
stos
fiadds
dec
ret
cwtl
xor
dec
inc
js
push
mov
push
mov
shl
jo
orl
sbb
mov
out
jb,pn
xchg
and
into
dec
scas
sub
adc
je
data16
mov
addl
pop
cmpsb
mov
pushw
fadds
or
out
repz
fsubrl
adc
push
or
mov
fists
fs
mov
mov
sbb
addl
add
xor
lret
jecxz
test
inc
inc
jmp
pusha
ss
movb
push
lret
jge
addr16
mov
sub
jp
sub
lea
fcmovnu
shlb
xor
pop
add
and
flds
dec
mov
add
sbb
stc
xchg
xchg
jns
push
sbb
lea
fcmovne
mov
xor
jge
out
orb
icebp
jnp
mov
jb
push
dec
xorl
xchg
fs
scas
inc
int
je
outsl
test
mov
mov
icebp
cmpsb
jo
repnz
cmp
dec
shl
rcrb
enter
loope
out
xor
inc
cmpsb
lds
in
pop
pop
bound
lods
push
pop
mov
sbb
test
jp
pop
cmp
pop
popf
cwtl
xor
das
jns
mov
cmpsl
in
outsb
dec
iret
out
dec
int3
mov
mov
mov
add
rclb
jle
mov
mov
jnp
pushf
mov
icebp
rcrb
nop
divb
inc
mov
jp
in
ds
xor
das
lds
gs
jbe
outsb
jno
clc
push
push
xor
int3
mov
repnz
mov
jp
or
pop
sbb
xchg
mov
xor
sbb
inc
nop
push
std
test
jae
dec
icebp
jnp
mov
or
and
dec
dec
scas
mov
and
inc
push
mov
cmpsb
sbbl
sbb
push
flds
pop
clc
fidivs
test
stc
sarb
insb
out
pop
mov
mov
cltd
sbb
mov
add
inc
icebp
push
ffree
inc
push
jno
out
stc
addb
xchg
dec
daa
jb
sti
xchg
push
popf
shll
mov
cld
std
es
mov
outsl
jge
dec
aad
push
mov
cmc
mov
dec
cmp
xchg
mov
inc
hlt
into
jnp
pop
pop
fwait
mov
mov
cmc
xchg
clc
movsb
stos
lcall
jno
push
dec
outsb
jnp
inc
cmpsl
mov
jl
mov
and
cwtl
inc
fildl
outsb
push
sbb
rcrl
aaa
add
xorb
adc
dec
es
and
or
pop
stos
sbbb
jne
aaa
outsl
jae
scas
idivb
mov
jl
xchg
push
adc
out
jne
or
bswap
adc
xor
push
int
dec
xor
movsb
inc
cmpsl
out
clc
xchg
test
fisttpll
pop
ret
xlat
out
orb
pushf
and
int3
pusha
ja
jge
loop
jbe
add
loope
imul
sarl
enter
jg
sbb
dec
fucomi
aas
jg
sbb
shrb
int3
add
ss
mov
pop
stos
mov
decl
fimuls
hlt
call
dec
out
xorl
daa
ljmp
jle
mov
mov
adc
lock
and
dec
les
push
push
push
mov
aaa
das
flds
enter
pusha
gs
pop
pop
sub
dec
push
push
pop
adc
filds
test
add
fwait
es
and
add
jne
ljmp
in
sub
cmp
fwait
mov
mov
faddl
push
jne
xchg
xchg
push
jnp
or
fwait
hlt
lret
js
cld
loop
lcall
pop
insl
into
or
push
inc
push
das
push
aam
aas
aaa
inc
lods
int3
daa
lcall
in
aam
mov
mov
dec
loope
aas
data16
sbb
aaa
scas
mov
cmpsl
or
in
adcl
out
cmp
push
xchg
ficomps
or
sub
sub
push
sbb
aam
pop
rcl
icebp
icebp
mov
jecxz
in
fs
push
or
hlt
dec
add
cmp
push
in
xor
mov
jmp
dec
sarl
imul
mov
mov
pop
adc
adc
popa
loope
mov
jb
adc
jbe
int
push
fistpl
mov
jl
sbb
pop
jno
ds
lret
andl
fnstsw
gs
stc
and
es
ljmp
stos
test
nop
ret
cmp
repz
movsl
add
xchg
cmpsl
mov
insl
insl
clc
loopne
push
outsb
push
inc
scas
test
aad
mov
bound
mov
push
mov
jp
dec
std
xlat
out
inc
push
add
push
jecxz
push
add
mov
jge
mov
push
insb
loopne
ljmp
imul
fldl
lret
mov
sub
in
inc
and
sahf
rcrb
hlt
idivb
and
popa
push
sbb
sarl
dec
xor
inc
adc
bound
ror
shll
cltd
dec
ret
repz
mov
push
inc
push
sbbl
frstor
fwait
dec
dec
and
adc
std
and
xor
sbb
inc
jbe
xchg
in
out
mov
sbb
shlb
imul
xchg
adc
insb
push
addb
or
mov
addr16
adc
enter
sub
sbbl
lea
mov
mov
cmp
xor
enter
fwait
mov
scas
and
testl
lods
in
ficomps
inc
popf
push
outsb
pop
lahf
std
and
pop
jo
aaa
std
mov
hlt
jae
xchg
add
std
xlat
mov
aam
mov
pop
sbb
fwait
sbb
xor
push
dec
lahf
js
test
and
jmp
insb
xchg
mov
and
movsl
arpl
outsl
cli
push
mov
pop
inc
cli
aam
xlat
out
arpl
mov
adc
add
mov
xor
loope
xor
movsl
sbb
or
adc
pop
or
cmc
fwait
xor
outsl
and
stos
nop
pop
pop
mov
popa
mov
pop
xchg
sbb
pusha
inc
cmp
xchg
in
mov
or
pop
sbb
mov
adc
insl
adc
ljmp
xor
les
divb
repz
in
repnz
iret
jg
aas
sbb
out
btc
rorb
push
movsb
xchg
dec
fdiv
nop
pushf
mov
xchg
push
xchg
jle
xorb
bound
xlat
mov
rorl
ret
mov
out
mov
sti
push
int
loope
adc
jp
mov
iret
jle
mov
outsb
mov
xchg
adc
mov
sti
mov
cmpsb
mov
xor
pop
push
inc
mov
call
and
sti
dec
fcomps
jae
into
pop
push
and
rorb
push
pop
and
xchg
mov
add
cs
cmp
icebp
in
ljmp
leave
rcl
dec
adc
ljmp
cmp
insb
bound
shrb
inc
add
sbb
fwait
push
mov
inc
ret
movsl
icebp
mov
addr16
lds
insb
mov
and
push
insb
icebp
shlb
pop
dec
aam
cltd
xor
out
lahf
lahf
xchg
pop
ljmp
out
in
xchg
cmp
pop
sub
psubw
add
mov
movsb
add
mov
insb
mov
push
inc
sub
push
dec
mov
mov
pop
fcomps
gs
rcrb
sub
push
xchg
repz
mov
mov
subl
mov
mov
add
lret
nop
mov
inc
inc
xorb
pop
pop
pop
mov
gs
jl
and
orl
in
jo
icebp
in
rorb
and
jg
pop
or
mov
fildll
add
mov
push
iret
enter
sub
mov
repnz
push
testl
cmp
xchg
pusha
insb
in
jne
sub
mov
dec
outsb
inc
jb
jo
mov
les
pop
mov
and
pop
sbb
int
sarl
ljmp
mov
sbb
xor
lds
xchg
iret
pop
aaa
jnp
xor
jns
je
loop
add
fwait
xor
mov
or
fists
add
pushf
in
insl
mov
cld
idiv
sub
mov
and
jbe
pop
jno
stc
test
or
push
js
push
bound
idivb
stc
popf
push
insb
sub
scas
xor
hlt
loopne
jmp
and
or
sbb
ljmp
repnz
adc
pusha
pop
pop
out
jno
sbb
imul
nop
mov
outsb
jle
pushw
adcb
sbb
ret
inc
bound
or
mov
pop
xor
cltd
push
push
xchg
icebp
xor
cmpsl
and
dec
push
or
insb
push
jo
rcrb
aaa
mov
or
sub
xchg
sbb
and
pop
aas
mov
mov
fisubrl
xor
xchg
jns
jne
sbb
dec
imul
jecxz
or
mov
aad
push
ljmp
pop
mov
pop
insb
pop
xor
lahf
addl
lahf
jp
pop
out
mov
lret
push
jb
cld
add
outsb
and
scas
cmp
aas
pop
push
addr16
cmp
jnp
cmpsl
out
jle
sub
shlb
xchg
xchg
cmp
fs
outsb
in
or
or
aad
cmp
adc
inc
push
int
lea
jbe
inc
aaa
daa
lds
push
sbb
mov
out
nop
mov
jge
lds
sbb
imul
test
dec
mov
das
jp
sbb
scas
js
inc
mov
fucomip
mov
sub
fwait
inc
mov
cli
push
repnz
add
cmp
sub
mov
xor
sarb
mov
daa
xchg
nop
mov
or
xchg
stos
adc
rol
cmp
mov
mov
cmpsb
call
sub
test
cmc
or
adc
jmp
mov
push
dec
andl
je
cs
fstl
mov
pusha
xor
pop
xor
outsl
mov
fiaddl
dec
jno
test
lods
cmp
lcall
adc
cld
push
push
xor
jno
jecxz
jae
test
or
fimuls
ss
mov
in
push
mov
sbb
sub
inc
xor
ret
jg
lcall
jo
push
inc
arpl
fnstsw
mov
sbb
insl
xor
dec
leave
add
dec
dec
adcb
add
mov
icebp
xchg
rcr
shrb
and
mov
mov
dec
xor
rorb
mov
jnp
add
add
int
sahf
cmp
mov
test
adc
lds
add
ror
pop
or
jecxz
xor
sub
outsl
sub
lds
subl
pop
or
push
jge
testb
sub
into
push
inc
inc
inc
dec
sub
sar
xchg
cmc
fdivl
push
push
les
ds
test
and
sbbb
fdivrl
pop
cmp
mov
xchg
repz
inc
jl
setns
pop
mov
repnz
lds
sub
dec
inc
out
test
fwait
push
stos
in
test
in
icebp
pop
bnd
jbe
scas
cmp
add
jl
pop
jae
scas
push
test
pop
xor
and
xchg
arpl
jge
jecxz
sbb
mov
lret
sbb
cmp
cmp
jmp
arpl
push
adc
pop
sti
dec
fnstcw
repz
sti
ror
ret
sub
cmp
or
sbb
arpl
dec
inc
pop
mov
mov
fwait
repz
sti
ror
ret
sub
cmp
or
sbb
arpl
dec
inc
pop
mov
mov
fwait
repz
push
ror
ret
repz
adc
add
jae
arpl
imul
stos
mov
lcall
ret
aam
xchg
mov
jecxz
test
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
cltd
sub
test
push
xchg
insl
jecxz
sbb
or
pop
in
dec
std
jns
imul
mov
insl
leave
jge
dec
jmp
mov
cltd
orl
cltd
sub
test
jge
dec
jmp
sahf
push
ljmp
cld
pop
mov
pop
scas
pop
in
je
lds
repnz
adc
js
enter
in
test
in
sub
adc
add
es
leave
clc
pop
inc
adc
in
mov
cwtl
stc
cmpsb
in
dec
xor
int
mov
sub
fcompl
push
gs
or
sti
pop
xor
aam
int
clc
xor
sbb
imul
and
fdivrl
jmp
inc
or
cmpsb
in
or
cli
pop
fsubl
imul
in
hlt
jp
lods
jge
push
pop
icebp
mov
mov
push
mov
sbb
cmp
dec
mov
add
cmp
jmp
cmp
fldcw
jge
dec
jmp
mov
pop
in
dec
std
jns
imul
or
or
aam
mov
pop
scas
dec
cwtl
sbb
pop
fsubrl
sbb
andl
les
fisubrs
clc
pop
andl
adc
imul
jge
dec
jmp
mov
pop
in
dec
std
jns
imul
mov
insl
leave
jge
dec
jmp
mov
pop
in
dec
std
jns
imul
and
xchg
daa
sbb
ja
popa
ja
sarb
stos
pop
sbb
xor
outsb
popa
adc
int
pop
sub
inc
fs
lret
push
fimuls
int
scas
xchg
mov
cwtl
and
les
cmp
mov
testl
and
dec
sub
push
fsts
shrl
mov
popa
or
repnz
jbe
and
movsb
scas
cmp
call
adc
dec
adc
sbb
stos
loop
nop
or
jecxz
cmpb
daa
jo
shll
imul
scas
rcr
aad
iret
rcrl
repz
ja
jl
adc
loop
outsb
gs
inc
mov
ss
ror
push
jmp
add
and
or
repnz
cld
and
jle
or
adc
pushf
in
sbb
rorb
outsl
decb
mov
sti
adc
cmp
add
push
mov
jno
inc
or
sbb
nop
jnp
outsb
jo
sbb
fcoms
adc
rcr
mov
sti
xchg
mov
jnp
push
into
pop
push
popf
rcl
mov
sub
filds
push
sti
jne
and
aas
sbb
lock
lods
lods
and
sahf
loope
cmpsb
js
int
fbstp
or
shlb
out
and
xchg
dec
add
push
and
adc
lea
lods
out
sub
popf
test
mov
mov
or
or
shll
or
fs
negb
or
push
sti
add
jmp
and
pop
dec
xor
pop
jg
and
sbb
mov
pop
jnp
out
adc
push
int3
pop
inc
adc
fldcw
je
cltd
jmp
fdivrs
lret
pop
pop
xlat
das
dec
roll
sub
cmpsb
nop
mov
sub
cmpl
gs
jge,pt
jg
and
push
push
pop
inc
mov
addl
jb
dec
and
and
je
push
or
xchg
out
mov
dec
movsb
mov
jb
push
and
jmp
clc
mov
outsl
mov
ljmp
push
jnp
adc
adc
jge
sbb
inc
jge
or
das
add
jg
push
loop
xchg
pop
or
and
mov
inc
shlb
cmp
jno
pushf
ret
pop
adc
push
push
lahf
jl
aaa
sahf
cmp
scas
sti
lods
aas
adc
lcall
std
cmpsl
xchg
xor
pop
lea
or
cmp
cmpsl
aam
pop
mov
mov
sbb
js
jne
movsb
add
jns
test
mov
je
bound
mov
test
xchg
outsl
loopne
pop
clc
xchg
xchg
aad
lret
fdivrl
mov
addr16
mov
xchg
stc
negb
fdivrs
lods
test
xorl
dec
mov
dec
aam
inc
mov
lods
adc
pop
cwtl
dec
hlt
sarl
and
dec
cmp
fisttps
push
out
shll
arpl
pop
std
fsub
mov
jmp
sbb
cmp
data16
lret
jp
mov
int3
lods
adc
dec
push
jb
mov
mov
xchg
shrb
and
cmpsb
xchg
add
cwtl
push
jl
aas
cmp
adc
or
xor
in
sub
adc
inc
jno
push
mov
and
push
xchg
outsl
repz
in
stos
push
xchg
cmpb
lahf
pushl
sub
mov
push
lods
neg
jns
fstpl
dec
xor
outsl
xor
popf
mov
dec
xchg
stos
push
push
add
scas
and
sbb
stos
mov
and
fbstp
imul
hlt
push
rorb
insl
push
insl
in
gs
test
sub
mov
pop
ljmp
shl
jb
test
pop
jns
cmpsl
push
bound
enter
cmp
dec
ror
push
push
call
pop
push
cmp
cmp
mov
ret
movsb
dec
mov
or
pusha
aad
lock
sub
ret
movsb
inc
sbb
inc
out
inc
push
push
aad
ss
xchg
inc
and
mov
orb
insl
loopne
icebp
push
scas
push
adc
cmp
insb
mov
dec
stos
xchg
clc
sbb
and
pop
xor
jecxz
repnz
hlt
push
sbbb
mov
stos
dec
sti
add
mov
cmp
daa
adc
loopne
test
sbb
in
xor
jle
cmp
inc
xor
clc
paddw
aas
std
push
daa
imul
mov
mov
nop
pop
pop
scas
pusha
and
sbb
dec
jg
aaa
adc
rcl
jbe
lods
mov
mov
cmpsb
add
int3
shlb
inc
clc
add
mov
sbb
push
fcomps
jmp
out
iret
xchg
inc
ss
arpl
fiadds
pop
lea
push
fldt
and
pop
push
inc
fwait
movsl
icebp
loope
or
test
add
sahf
cs
push
cmp
lods
sub
xor
and
int3
mov
out
mov
mov
dec
and
dec
bnd
mov
xor
jp
sbb
hlt
cmp
cli
pop
decb
rdmsr
ds
adc
movnti
sub
jo
test
enter
jno
dec
sti
or
aam
cmp
xor
jne
ds
test
loop
pop
clc
lock
xchg
add
rclb
mov
jae
mov
jle
loope
xchg
jmp
stos
scas
adc
inc
out
fsubrs
in
test
fmull
daa
mov
jp
mov
mov
inc
pop
mov
mov
fnsave
mov
lret
jmp
pop
cwtl
dec
int3
sub
shl
out
ret
cltd
orl
sarb
jnp
pop
sub
dec
lds
loopne
pop
xchg
cmp
jmp
mov
jmp
imul
lea
mov
or
cmp
or
jne
push
test
mov
jb
fabs
adc
push
pop
jle
push
rolb
and
fs
rolb
pop
fistl
ja
pusha
ss
lret
ja
mov
xor
mov
mov
jne
push
push
mov
movsb
gs
mov
daa
mov
push
or
push
mov
dec
pushf
jl
cli
xchg
and
sub
xchg
scas
mov
adc
jle
lods
ss
mov
push
mov
shll
aaa
sub
jp
push
popa
mov
push
stos
test
push
sub
dec
xor
hlt
stc
adc
or
xchg
cltd
sti
hlt
out
mov
imul
inc
mov
mov
xchg
add
mov
and
add
sti
out
add
lds
jg
mov
ss
jnp
imul
or
jle
cmpsb
arpl
mul
push
ret
or
lret
ficomps
mov
fwait
inc
or
out
jmp
ja
pop
nop
or
xor
stos
cmpsb
sbb
aam
cld
es
inc
lods
popa
cmp
and
cmp
push
out
rorl
aad
iret
inc
xor
rolb
push
xor
sub
mov
dec
and
out
mov
inc
pop
icebp
cld
pop
not
popa
lods
pop
fnstenv
mov
or
inc
lret
and
adc
in
arpl
fistl
in
outsl
mov
pop
lahf
cltd
mov
xlat
cmpsl
mov
sub
lods
xor
xlat
xor
mov
int
mov
call
mov
aam
data16
ljmp
jns
and
nop
fnstsw
jae
push
sub
ss
dec
cs
xor
or
dec
movsl
cmp
aad
out
xor
cmpsl
int3
sar
mov
mov
repnz
das
rcll
cmc
or
pop
mov
pop
cld
es
aad
out
and
enter
push
inc
insl
js
sti
fcmovnbe
vmovddup
ja
lods
pop
test
push
int3
jle
pop
or
sahf
into
fldl
add
inc
sub
bound
data16
popa
adc
adc
aas
sub
fmull
negb
es
stos
jns
adc
fdivr
pop
mov
sub
das
fcomps
shlb
rcrb
testl
inc
push
stc
mov
add
sub
incb
cs
stos
pop
jge
pop
inc
inc
shrl
scas
mov
roll
pop
fsubp
test
xchg
in
mov
mov
jbe
lret
push
mov
enter
push
mov
push
jmp
popa
push
insl
faddl
fistpll
pop
sub
sbb
nop
inc
mov
in
inc
out
dec
call
push
neg
mov
and
mov
xor
jge
mov
arpl
bound
cmp
inc
outsl
jg
subb
inc
shlb
xor
adc
pushf
insl
mov
and
call
loope
enter
setno
imul
mov
inc
sti
test
push
xor
std
aam
aad
mov
negb
idiv
push
mov
cmp
mov
dec
enter
aas
ret
cmp
cmpsb
jmp
iret
xor
inc
fstl
xor
in
fucomip
hlt
insl
xor
pop
sbb
adc
loopne
xchg
addr16
adc
outsl
lret
and
push
add
inc
dec
adc
movsl
mov
inc
inc
fisubrl
sub
mov
fildll
xchg
shlb
test
inc
cmpsb
lods
arpl
cwtl
push
fcmovnb
add
jbe
cmp
jle
imul
pop
out
xchg
cwtl
push
ds
mov
std
arpl
imul
loope
xchg
jmp
add
pop
xor
ds
cmp
leave
mov
inc
lds
xchg
mov
jp
test
inc
mov
xchg
iret
xlat
mov
jno
xchg
mov
aaa
sub
inc
adc
int
push
mov
test
xchg
pop
push
das
xchg
cmp
cs
cltd
and
or
pop
data16
sbb
dec
ret
mov
leave
and
cltd
int3
xchg
add
ja
jge
cmp
adc
lahf
mov
cmpsl
in
fsubr
xor
add
xor
out
sar
cmp
jg
dec
movd
pushf
imul
ret
rclb
jo
aad
std
fistps
out
jae
aas
cmpsb
dec
xor
sbb
pop
xchg
imul
sbb
inc
sub
mov
or
test
push
out
jbe
add
fucomi
lret
push
fwait
imul
xchg
or
mov
mov
cltd
push
dec
fistpl
loop
xlat
xor
loope
sub
test
pop
dec
aas
mov
hlt
or
loop
mov
int
int
xor
pop
add
fidivl
dec
push
stos
js
sbb
mov
inc
in
scas
fisubrl
das
adc
das
mov
in
mov
xchg
adc
push
das
sbb
jmp
xchg
sarb
sub
out
repz
in
cmp
push
mov
sti
out
jnp
notb
jl
movq
neg
xchg
test
fmull
sbb
scas
mov
call
mov
in
xchg
xor
mov
addr16
xor
imul
mov
mov
and
mov
dec
sbbb
enter
adc
lahf
mov
arpl
ficoms
xchg
in
xchg
arpl
out
xchg
lock
in
out
push
xor
push
call
inc
inc
inc
pushw
or
or
or
dec
inc
sub
int
lahf
xor
into
jg
ficoms
push
push
sbbb
and
call
icebp
jb
mov
addr16
gs
xchg
out
fisubs
mov
jg
push
mov
or
or
inc
mov
repnz
xchg
and
dec
in
push
fsubrp
jne
icebp
cld
inc
mov
inc
scas
add
mov
je
push
jmp
hlt
xor
fs
add
mov
ljmp
test
pop
enter
gs
lods
or
aas
outsb
mov
xchg
cmp
leave
inc
rcll
ljmp
add
inc
adc
jle
and
sbb
xor
xchg
mov
inc
push
and
cmc
xor
pop
cmc
rcr
test
dec
pop
mov
jae
push
jns
movsb
jecxz
es
and
xchg
insb
nop
aad
daa
push
std
mov
and
pop
loopne
into
sbb
push
lods
and
mov
jp
push
rorb
push
mov
xlat
js
lods
inc
sbb
aam
mov
inc
into
jmp
cli
ss
mov
fmul
outsl
sub
mov
xchg
pushf
out
or
xchg
adc
jb
inc
rcrl
fwait
jg
mov
sbb
sbb
push
dec
mov
je
pop
xchg
cwtl
lds
xchg
cmpsl
icebp
movsl
cltd
andl
out
call
popf
push
leave
push
outsl
dec
jne
out
clc
pop
or
addr16
loope
ss
inc
add
mov
mov
xor
dec
arpl
cmp
jp
mov
stos
jecxz
or
xchg
mov
std
enter
cli
inc
jns
xor
and
es
test
or
enter
pop
dec
scas
std
fsubl
loope
pop
xchg
lds
mov
add
and
adc
shll
int3
add
sbb
pop
sub
pusha
pop
insb
jge
mull
jns
popa
jo
push
faddl
sbb
ja
inc
ljmp
bound
or
out
add
je
add
insb
mov
mov
jmp
jmp
push
movsb
inc
repnz
cwtl
pop
shlb
sub
add
xchg
test
popa
call
dec
xor
add
add
pop
dec
out
loopne
mov
mov
hlt
push
fwait
add
mov
adc
xchg
out
leave
push
ror
mov
out
pop
jno
adc
or
lret
push
cmpsb
sbb
xor
push
mov
add
xchg
ror
stos
int
xchg
mov
cmp
xlat
or
loopne
test
xchg
pusha
aad
mov
pop
cmpsl
cs
popf
mov
test
pop
jnp
ds
adc
dec
imul
lret
xor
mov
xchg
mov
sub
dec
add
mov
push
loop
ja
jecxz
data16
das
orb
or
cmpsl
loop
sbb
scas
xor
inc
mov
int
sub
out
xor
mov
jp
dec
cmp
daa
sub
call
mov
push
and
mov
lock
pushf
in
imul
orl
dec
pop
cmp
xlat
sub
adc
pop
bnd
lcall
jg
aaa
int3
push
add
adc
addr16
cli
lods
mov
sbb
mov
pop
stos
fadds
adc
and
xchg
adc
xor
jno
mov
push
lcall
mov
jg
movsb
mov
mov
outsb
hlt
xor
test
push
loop
push
pusha
cmp
mov
test
hlt
inc
mov
daa
cmp
inc
sub
xor
or
call
lods
mov
in
lods
lock
or
leave
adcl
jno
inc
test
stos
add
lcall
movsb
sub
subb
inc
jge
mov
test
fsubr
imul
into
pop
lds
pushf
mov
push
push
inc
adc
inc
cmp
sub
imulb
sbb
mov
je
stc
xchg
inc
pop
inc
inc
stc
or
inc
les
or
andl
mov
mov
mov
dec
daa
mov
pop
sub
push
xor
mov
in
sub
push
in
inc
push
push
pop
data16
std
xchg
rorb
into
hlt
cmpsb
cmp
imul
add
xorb
and
mov
or
scas
pop
mov
adc
jns
sub
sbb
daa
jmp
cmpsb
iret
cmp
out
int
sub
pop
addr16
and
pop
push
outsl
clc
addr16
mov
out
push
xor
lods
push
test
pop
sti
sahf
mov
rcl
jle
xchg
stos
std
mov
xor
add
iret
cltd
int
imul
mov
shll
adc
xor
aam
test
outsb
nop
fld1
add
add
jp
xor
nop
or
outsl
pop
mov
das
sti
dec
loope
shr
cmpsb
sub
call
scas
push
sahf
adc
cmpsb
std
add
inc
scas
fnsetpm(287
adc
sub
dec
mov
jnp
xor
negb
loope
arpl
mov
pop
jecxz
data16
fdivs
ds
sub
adc
pop
scas
mov
and
int
lea
inc
lret
inc
mov
pusha
pop
or
sbb
or
daa
or
jecxz
cmpb
mov
out
mov
andl
xor
cmp
aaa
xchg
fisubl
and
out
sbb
shrb
mov
outsl
cltd
cwtl
pusha
fidivl
lds
adc
fcomps
sti
outsl
and
aam
pop
push
stos
stos
xchg
jge
test
jle
inc
add
lea
aas
push
repz
mov
mov
mov
scas
cmc
shll
fsubl
dec
out
dec
call
adc
stc
popa
jge
inc
test
mov
add
stos
mov
xchg
repnz
pop
sbb
pusha
fimuls
repz
add
mov
mov
xchg
pop
push
mov
inc
xchg
lcall
js
jne
in
rcrb
xchg
in
testb
push
and
loope
outsb
pop
sub
push
ja
jmp
and
divl
jg
lods
sub
dec
mull
and
mov
jle
pop
fcoml
in
daa
dec
pop
push
movsb
stos
imul
jae
pop
addb
mov
mov
das
repnz
sbb
add
cmp
outsb
cmpsl
divl
sahf
jmp
pop
fcomps
test
push
xor
loop
shl
test
roll
jb
subb
push
insb
mov
xchg
push
scas
mov
aaa
or
scas
icebp
sbb
mov
js
jb
fsubl
lods
clc
lock
push
test
jbe
loop
pop
sub
rcr
inc
mov
or
aad
lea
cwtl
cli
adc
cwtl
cs
outsb
jmp
sarl
test
in
movsl
mov
mov
push
mov
cli
jg
cli
or
mov
popf
mov
loope,pt
pop
in
mov
bound
cltd
push
ret
sub
repz
xor
push
fwait
push
sbb
mov
jb
add
test
xchg
sahf
adc
jecxz
test
sbb
test
lret
pop
inc
inc
mov
jne
jp
mov
insb
push
inc
jbe
ret
cmpsl
push
sub
js
cld
mov
mov
daa
out
mov
in
pop
add
adc
dec
pop
inc
jecxz
adc
scas
jp
aaa
xchg
mov
add
popf
mov
jg
mov
dec
inc
push
rcl
mov
xor
cli
ljmp
insl
cmp
push
sub
ss
sub
dec
movsl
js
pop
adc
push
fcmovnu
loope
jg
mov
lds
insb
lods
xchg
xchg
call
push
cmpsl
and
jmp
fnstenv
mov
xorl
fidivrs
mov
shll
outsl
jp
pop
jecxz
out
pop
push
mov
mov
es
mov
fbld
outsb
push
roll
add
pop
add
rorb
testl
nop
out
mov
push
dec
lods
hlt
out
and
addr16
ret
push
mov
stc
mov
cwtl
adc
push
mov
fistl
ret
fs
stc
mov
fadds
dec
fistl
dec
mov
add
pop
and
add
ret
xchg
cmp
inc
aam
push
mov
adc
mov
mov
or
fistpl
mov
inc
pop
lds
outsb
orl
fstps
adc
pop
mov
mov
cltd
hlt
out
mov
dec
je
mov
mov
xchg
xorb
daa
pushl
jmp
fcoms
subl
out
test
push
bound
xchg
and
xor
cmp
adc
jnp
inc
cmp
pop
testl
repnz
leave
das
mull
xlat
stos
sub
pop
test
lahf
or
cmpsb
xchg
fmull
dec
sti
sub
adc
mov
mov
or
clc
cltd
mov
add
xor
xchg
pop
imul
jmp
jl
jae
in
jns
mov
cmp
fldcw
jge
dec
jmp
mov
pop
in
dec
std
jns
imul
mov
insl
leave
jge
dec
jmp
mov
pop
in
dec
std
jns
imul
cmp
leave
jge
dec
imul
lea
popf
pop
in
dec
std
jns
imul
mov
insl
leave
jge
dec
jmp
pop
xchg
lea
ljmp
sbb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
pop
nop
dec
cmpb
mov
pop
cltd
dec
loopne
and
call
iret
mov
nop
dec
cmpb
mov
cmp
sub
xor
and
jo
pusha
pop
mov
js
push
fdivrs
call
enter
push
lock
jmp
testb
movups
dec
lock
sbb
pop
sbb
add
lret
xor
and
test
lret
xor
nop
hlt
or
mov
ficomps
cs
out
jne
insl
fbld
popf
push
mov
or
jmp
and
inc
pop
sbb
inc
ret
mov
pop
pop
sbb
cmc
add
fnsave
and
push
dec
jmp
rol
test
fdiv
fdivr
jne
into
lods
data16
loopne
mov
adc
push
aam
adc
mov
clc
sub
call
push
mov
and
hlt
aas
dec
mov
loopne
leave
gs
icebp
mov
push
iret
lods
fbld
shlb
dec
nop
js
push
sarb
sub
fcoms
enter
call
pop
mov
nop
and
sbb
rolb
pop
pushf
imul
std
xor
cld
or
stc
cmp
sub
or
mov
test
sarb
push
lods
and
and
inc
lret
adc
nop
sub
adc
imul
cmp
sub
fcoms
enter
call
inc
mov
nop
dec
cmpb
mov
cmp
sub
fcoms
enter
call
inc
mov
nop
in
xchg
ret
aaa
dec
mov
dec
jne
and
and
and
mov
dec
sbb
mov
jmp
cmc
push
pop
sbb
idiv
nop
and
mov
popa
cltd
popf
movsb
pop
mov
cwtl
mov
and
mov
inc
lret
out
or
pop
mov
enter
ja
cmp
outsl
mov
pop
sbb
jnp
dec
or
mov
sub
icebp
mov
rorl
adc
or
js
cmp
in
in
popf
jl
rorb
or
test
cld
idivl
xchg
stos
movsb
pop
jl
cmp
jnp
add
push
pop
pop
sarb
mov
push
push
or
mov
sub
lahf
mov
pop
cld
and
or
imul
add
xchg
fwait
dec
jl
pop
mov
imul
push
call
lret
dec
or
pop
sbb
sub
sahf
mov
lret
aaa
mov
popa
loopne
pop
test
sub
dec
jge
inc
or
mov
mov
inc
test
out
cmp
cltd
mov
lret
mov
and
imul
lahf
xchg
pop
mov
push
aam
fmul
mov
subb
pushf
insl
ficoms
jmp
or
and
and
popf
hlt
mov
lods
inc
fmulp
xlat
push
jle
mov
xchg
xchg
out
sub
clc
cmp
addl
jge
fwait
or
mov
shlb
or
add
loopne
fnstsw
fs
jae
fdivr
xor
ja
ret
stc
push
es
rcrb
ja
ficoml
sti
mov
iret
insb
cwtl
hlt
cli
jle
ds
rcr
adc
shll
xchg
sub
mov
push
imul
enter
xor
sti
inc
das
pushf
add
bound
cmp
add
push
lock
ds
test
push
mov
dec
mov
in
jg
in
push
mov
insl
jmp
and
cltd
pop
icebp
mov
jne
push
das
sbb
xchg
aad
or
fdivrl
out
stos
push
subl
movsb
or
and
aaa
loope
and
jbe
pop
push
outsb
lret
jmp
dec
popa
jl
and
stos
gs
dec
mov
cmp
xor
dec
sbb
je
mov
xchg
leave
fsubl
leave
out
mov
test
int
icebp
cmp
insl
xor
xchg
mov
xchg
in
add
pushf
ret
cmp
cmpb
into
mov
sbb
rclb
xchg
jo
insb
jns
dec
push
or
imul
jnp
gs
ljmp
stc
pop
jnp
loop
filds
adc
push
in
stos
rolb
les
jge
rcrb
iret
xchg
mov
push
mov
push
cmc
mov
push
dec
inc
mov
fs
addr16
ss
push
inc
mov
mov
fmulp
sbb
mov
xorl
xchg
mov
movsb
arpl
push
cli
insb
ret
test
adc
adc
nop
sbb
xchg
xchg
jae,pn
mov
pop
push
test
add
adc
je
fcoml
mov
pop
push
in
pop
out
jbe
adc
or
mov
cltd
imul
pop
shrl
and
adc
addr16
jge
inc
mov
inc
cld
test
cmpsl
test
outsb
mov
mov
mov
adc
push
shll
data16
arpl
add
mov
mov
sbb
adc
and
stos
mov
aam
sahf
scas
dec
push
xor
sbb
data16
leave
mov
pop
jns
inc
jl
loopne
or
mov
cld
jnp
enter
pop
dec
cmp
mov
ret
dec
dec
mov
mul
mov
iret
push
inc
pop
fldl
loop
sbb
dec
xor
cmp
pop
xchg
xor
jns
xor
or
lock
xchg
adc
icebp
sub
clc
xchg
cmc
fsts
push
adc
jg
mov
imul
out
cli
pusha
pop
std
shr
sbb
imul
sarl
adc
out
lock
mov
stos
int3
lds
shlb
ret
std
push
data16
and
adc
in
in
test
outsb
pop
decb
jle
sub
jb
cbtw
or
lds
adc
push
push
sti
cwtl
cmp
gs
popa
inc
mov
cmpl
adc
push
cmp
nop
push
loop
mov
sarl
les
sti
mov
mov
cld
int3
data16
fidivs
in
fidivrs
cld
cmpb
and
pop
out
iret
mov
xor
jno
pop
ds
mov
xchg
dec
test
xchg
stos
sahf
push
mov
cmp
sarb
xorl
mov
adc
sub
idivl
mov
xchg
xor
pop
sub
mov
loop
mov
sub
mov
scas
mov
dec
pop
fwait
or
inc
push
jmp
pop
mov
pushf
xchg
stc
mov
jbe
jl
or
dec
push
or
mov
and
dec
movsb
repz
addr16
insb
pop
add
and
push
adc
repnz
outsb
hlt
dec
jg
adc
lock
sti
test
inc
aas
mov
sbbl
lret
test
ss
sbb
inc
dec
mov
les
jno
inc
ficomps
out
ds
adc
ret
mov
test
sti
adc
hlt
outsb
aam
cmp
ja
sti
arpl
mov
jae
ret
stc
dec
stos
mov
xor
rorb
not
aam
mov
jge
mov
test
push
push
shll
test
sub
and
sarl
les
repz
push
push
mov
inc
push
cmpsl
mov
out
repnz
ret
xor
cmpsb
es
dec
mov
in
inc
stos
jbe
dec
aas
lcall
repnz
inc
cmc
cmp
sub
ret
leave
dec
mov
mov
jmp
fidivl
scas
sbb
in
sub
ljmp
adc
std
jmp
out
push
rcll
and
out
test
push
add
pop
push
add
push
iret
stc
cld
inc
pushf
out
dec
dec
inc
mov
nop
sbb
cmp
fidivrl
xchg
enter
push
adc
or
sub
mov
outsl
push
push
outsb
das
rcrl
jnp
pushw
mov
or
into
ret
push
dec
pop
int
sbb
ss
rolb
cmp
out
mov
loopne
mov
out
push
pop
out
and
scas
stc
inc
xor
ss
xchg
lods
in
ja
push
sbb
lods
jno
jge
movsb
sub
sarb
ret
cmp
pop
scas
lahf
jne
mov
fistpl
or
add
sbbb
pushf
jg
lock
jp
enter
jnp
test
and
or
idivl
xlat
std
fisttpl
dec
jns
sbb
fwait
jo
and
mov
ljmp
fs
test
ret
and
mov
in
lahf
scas
adc
mov
test
mov
imul
fldenv
scas
push
pop
jns
adc
shr
lods
or
and
dec
add
or
add
movsb
adc
sub
push
ret
ds
jae
daa
loope
xchg
sub
jle
data16
incl
mov
pop
imul
jmp
sub
ficomps
cld
call
das
add
fcoml
mov
gs
mov
mov
movsb
mov
pop
xchg
insb
movsl
nop
loope
sbb
loopne
ficoms
mov
hlt
rorb
mov
jge
jns
cmpsl
aas
dec
out
mov
add
jp
sub
xor
out
aam
out
cmp
lock
sub
jmp
pop
push
pop
pop
cwtl
ljmp
mov
jno
pop
dec
cwtl
hlt
jecxz
inc
shll
repnz
sbb
popa
mov
mov
xchg
and
dec
shll
ret
mov
push
cmp
push
cmpsl
movsb
cmp
dec
scas
adc
sub
sub
into
pop
sub
sub
int3
not
cmp
cmp
or
lds
popa
jp
or
cmp
sub
pop
pop
cmpsl
xlat
nopw
pop
cmpsl
sar
sahf
imul
mov
push
mov
stos
push
xchg
icebp
outsl
pop
movsl
cmp
dec
mov
loop
xchg
inc
jg
adc
push
iret
sti
cmp
mov
inc
cmp
fidivs
lock
inc
scas
cmc
push
adc
lahf
sub
mov
ss
and
pop
shrb
es
int3
fildl
mov
pop
out
hlt
insl
pop
push
or
add
insb
int3
mov
mov
lcall
pop
push
clc
cmp
addr16
je
add
out
gs
xchg
das
fldenv
add
push
aam
xchg
and
mov
stos
scas
lods
es
pop
sbb
sub
xor
push
out
jne
mov
dec
jo
in
mov
jp
into
call
adc
mov
or
gs
inc
lret
push
sbb
enter
lds
push
dec
out
out
faddl
into
daa
out
testb
mov
ret
sub
in
inc
mov
pop
in
fmuls
cltd
scas
scas
sbb
and
mov
sub
push
lods
xchg
ljmp
or
push
adc
and
fsubrs
fnstsw
imul
rcrb
outsl
imul
hlt
test
xlat
arpl
pop
mov
sbb
cmpsl
sub
loope
stos
xor
add
test
enter
pop
cmp
inc
jp
sbb
pop
jb
jmp
adc
cld
ficoml
or
outsl
add
dec
pop
adc
out
mov
ljmp
and
and
mov
fwait
orb
jp
stos
lock
jl
ret
fiaddl
xor
cs
adc
sti
or
xchg
loopne
xchg
jp
aam
mov
adc
pop
mov
test
sbb
gs
jne
sub
inc
ror
repnz
rorl
loope
adc
xchg
dec
inc
adc
pop
inc
xor
ret
mov
das
shlb
mov
fwait
ret
dec
test
int
mov
out
sub
roll
inc
lock
sbb
push
cmp
and
inc
push
cmp
push
jmp
mov
fcmovnu
xchg
insl
mov
adc
mov
sahf
test
pushf
jns
sub
lahf
and
adc
cld
and
daa
add
or
xlat
cld
repz
jp
push
ret
xchg
insb
mov
loope
dec
repnz
test
cmp
xor
and
lahf
pop
ret
test
mov
daa
dec
xchg
adc
jns
dec
adc
sbb
jns
push
lock
push
push
sbb
ljmp
jae
bound
int3
enter
pop
xlat
inc
addr16
fdivrl
pop
fucomp
andb
int
mov
mov
popa
pushf
imul
scas
sbb
or
mov
push
test
arpl
sbb
add
sub
adc
push
mov
insl
mov
movsl
or
push
push
push
test
mov
cltd
out
test
aas
pop
jns
es
ss
pop
test
repnz
int3
out
jne
sub
rcr
mov
aad
jp
adc
ret
mov
xchg
push
cli
xchg
mov
cmp
dec
cli
jecxz
lret
std
push
ret
or
add
mov
aaa
and
scas
xchg
jns
jmp
bound
arpl
sbb
in
test
xchg
mov
inc
inc
jecxz
in
rorl
jbe
sbb
lds
push
xchg
adc
mov
xchg
xor
mov
push
jg
or
mov
add
mov
rcrl
jge
iret
fwait
xor
or
in
push
cltd
fwait
pop
lds
fisubrl
int
xor
sbb
stc
les
mov
pushl
imul
test
sub
pushf
mov
xor
xor
insl
and
sub
into
adcl
lret
into
mov
loope
mov
nop
xor
subb
rolb
and
outsl
push
mov
cmpsb
mov
ret
cmp
sbb
adc
outsb
dec
xchg
and
pop
adc
fists
stc
ss
cmpsb
add
jne
mov
out
rorb
imul
fstpl
xchg
mov
out
and
dec
hlt
mov
or
jecxz
and
mov
out
push
sub
jge
dec
imul
loope
push
incl
fidivl
jl
xchg
push
or
add
xchg
lods
in
sbb
and
add
and
mov
imul
push
sub
rorl
loopne
dec
int
mov
out
pushf
std
cmpsb
dec
fcomps
aaa
sub
pop
xor
imul
cmp
fwait
mov
stos
out
jbe
ds
nop
cmpsl
mov
lods
mov
movsl
xchg
and
aad
test
mov
ficoml
xlat
jns
loopne
popf
cmp
xor
adc
out
stos
pop
or
daa
sub
mov
mov
jmp
adc
pop
mov
lret
cmp
rclb
je
adc
in
rorb
loope
inc
stos
or
scas
pop
imul
stos
mov
sub
xor
fs
ljmp
or
faddl
dec
dec
lret
mov
cmp
outsb
mov
push
push
mov
ja
shll
jns
mov
pop
jg
pop
in
jo
pop
mov
stc
and
mov
xor
jne
xchg
test
imul
push
add
mov
adc
ret
cmp
pop
fwait
dec
push
inc
xchg
and
mov
cmp
mov
scas
repz
pop
inc
or
daa
dec
in
jle
jns
xchg
mov
lret
mov
es
ret
js
mov
xor
xchg
push
adc
sbbb
xor
and
jmp
ljmp
fldenv
les
out
cmpsb
sub
mov
mov
sbb
mov
add
das
or
mov
push
roll
mov
inc
or
lcall
jmp
mov
cmc
insb
ds
call
cmp
sti
mov
xor
and
aaa
inc
fwait
scas
mov
iret
and
xchg
add
sub
mov
js
or
rclb
fstpt
adc
push
aas
cs
adcl
mov
data16
inc
imul
repnz
mov
test
or
xchg
pusha
addr16
es
gs
ljmp
push
scas
loop
mov
or
xchg
push
imul
rcr
jne
ja
les
data16
aad
fwait
movb
cmp
stc
imul
fistpll
add
pop
adc
add
jnp
rcrb
lea
pop
in
loopne
fisttpll
in
jo
movsb
sbb
repz
iret
dec
pop
xor
pop
cmpb
int
cmpsl
push
mov
sbb
push
jg
mov
mov
push
push
and
jl
xchg
push
data16
xor
stc
daa
fistl
out
jge
and
mov
mov
in
mov
lods
cmp
loope
jg
jbe
fisubrs
inc
jnp
jno
js
jl
jp
jbe
movsb
loopne
xlat
test
mov
into
mov
ret
repnz
push
pusha
into
cmc
pop
mov
fisttpll
sub
nop
ja
sub
insl
mov
sbb
popa
or
inc
cmc
lret
push
loopne
nop
sub
rorb
filds
flds
std
jp
mov
imul
or
in
xor
stc
gs
mov
rcl
lods
popf
lods
test
stos
xchg
dec
or
xor
std
je
pop
sarl
push
adc
out
int
arpl
cmp
cmpsl
xchg
push
les
stos
scas
mov
loopne
and
or
pop
in
jl
adc
xlat
ret
rcrb
jg
cmpsl
test
lds
dec
lea
leave
jle
mov
mov
cmp
cwtl
stos
dec
or
jge
and
daa
push
iret
hlt
mov
xor
mov
idivl
cmc
lock
mov
ret
or
insl
xchg
sbb
and
pop
lods
mov
daa
dec
sbb
sbb
js
sub
add
xor
xchg
scas
lea
btc
popf
fucomip
xor
or
and
dec
bnd
lock
cli
fiaddl
push
das
xchg
out
pop
les
fwait
xchg
js
fisttps
add
imul
sub
add
push
das
xchg
cmp
pop
push
daa
stos
in
mov
mov
cmp
aam
js
sub
pop
add
mov
outsl
shlb
xchg
and
sbb
jle
jge
inc
sti
jge
add
fiadds
out
add
cmp
mov
rclb
rolb
mov
lea
aam
fwait
and
push
ja
dec
and
gs
test
inc
or
and
pop
test
jnp
and
or
js
ret
inc
bound
sbb
stos
pop
out
sub
test
or
iret
enter
sbb
imul
mov
jno
in
data16
add
jns
mov
sub
pop
push
push
sbb
out
mov
mov
add
sbb
rorl
aam
test
loopne
adc
out
dec
cmp
inc
mov
outsl
dec
pop
mov
pop
pop
shlb
andl
add
adc
mov
pop
pop
sbb
scas
inc
cmc
mov
dec
lds
sub
sbb
mov
or
inc
scas
les
dec
pushf
ss
ret
jle
in
add
lcall
pop
push
roll
mov
mov
orb
arpl
jmp
jns
arpl
inc
call
push
ret
lea
dec
xor
cmpsl
test
gs
pop
icebp
and
pop
daa
pop
ljmp
fsubp
pop
insl
jle
sub
scas
jb
inc
pop
mov
inc
push
xor
mov
cmc
das
xchg
pop
pop
xor
xchg
xchg
ret
rcrb
iret
das
inc
ror
adc
stos
imul
iret
jg
ret
rorb
das
jns
roll
and
repnz
int3
iret
test
pop
mov
jp
mov
arpl
add
push
inc
cmpsl
movsl
out
cmpsl
xchg
int
fmuls
cwtl
xchg
ret
add
mov
mov
lahf
adcb
out
jl
ss
cli
jbe
loop
cmp
xchg
shll
popa
or
or
jge
and
addr16
repnz
jmp
in
dec
insl
cld
xchg
lahf
lock
push
stos
pop
lods
mov
jnp
push
out
push
and
fidivl
in
and
gs
repnz
xchg
fisubrs
test
ljmp
push
mov
xchg
or
add
fdiv
sahf
sbb
jne
in
xor
int3
ds
pop
cmp
sub
cmp
jnp
sub
pop
sbb
xlat
fisubs
xchg
cmpsl
fiadds
hlt
sub
iret
pushf
in
lods
outsb
mov
jmp
pop
clc
test
daa
movsl
dec
imul
push
inc
xor
ret
mov
sbb
and
xor
dec
call
outsl
push
stc
xchg
push
in
or
loopne
xor
adc
xor
movsb
pop
scas
test
inc
dec
inc
sbb
incb
out
adc
mov
push
jns
push
hlt
sbb
dec
mov
adc
xlat
sub
cli
test
pop
or
lods
push
jecxz
push
aad
sysexit
push
mov
xchg
insb
int
jmp
sahf
mov
repz
cli
lcall
ss
adcb
cmp
jecxz
add
add
daa
cmpsb
mov
inc
jae
add
push
clc
leave
sub
leave
push
leave
sar
iret
stc
cmp
add
push
das
xchg
rcll
cmc
idivl
push
xor
leave
xchg
dec
and
leave
fldcw
fnstsw
ljmp
repz
inc
sub
fwait
shll
push
sbb
jne
jmp
lods
lcall
or
or
jle
mov
daa
jbe
xlat
pop
outsl
test
mov
aad
fsubl
rcll
jne
xchg
jns
fistpl
jmp
jp
jbe
cs
push
sub
hlt
imul
fnstcw
mov
inc
mov
cmp
adc
jge
sbb
add
add
out
mov
repz
dec
inc
inc
pop
jle
or
dec
xor
ja
push
xchg
cmp
sub
incl
aaa
ja
test
xchg
aas
lcall
sbb
mov
adc
gs
mov
push
dec
xchg
cs
pushf
lret
pop
lock
jae
nop
cmpsl
mov
gs
pop
cmc
cmp
ret
or
cwtl
xor
cmp
sarl
dec
int
das
loope
stos
mov
mov
cmp
sub
fcoms
enter
call
inc
mov
nop
dec
cmpb
mov
cmp
sub
fcoms
enter
call
inc
mov
nop
dec
cmpb
mov
cmp
sub
fcoms
enter
call
inc
mov
xchg
dec
test
push
sarb
sub
fcoms
enter
call
aas
inc
xorps
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
