sub
dec
xor
shl
sub
mov
jmp
push
popl
jmp
and
mov
jmp
jmp
nop
xor
mov
inc
xchg
call
addr16
jmp
jmp
jmp
xchg
dec
sub
mov
and
xchg
sub
xchg
mov
xchg
jmp
push
xchg
call
xchg
mov
and
mov
rol
sub
add
rol
or
mov
mov
add
sub
or
mov
mov
add
push
pop
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
addr16
ror
pop
jmp
push
addr16
push
xchg
xor
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
nop
dec
addr16
mov
mov
sub
mov
add
ror
and
shr
dec
pop
jmp
jmp
push
mov
jmp
mov
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
push
xchg
mov
mov
mov
addr16
jmp
pushl
xchg
call
xchg
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
mov
jmp
jmp
jmp
xchg
sub
and
mov
inc
shr
mov
jmp
jmp
jmp
push
nop
mov
mov
jmp
andl
nop
push
addr16
xor
addr16
and
nop
jmp
inc
push
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
negl
in
dec
ja
minps
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
adc
mov
andl
nop
jmp
jmp
jmp
jmp
jmp
push
mov
rol
mov
sub
xchg
push
nop
push
mov
jmp
push
nop
nop
nop
nop
pop
push
mov
push
xchg
add
shr
sub
and
xor
mov
jmp
xor
mov
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpsl
or
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
jmp
jmp
jmp
jmp
push
xchg
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
into
incl
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
or
add
inc
ljmp
xchg
push
mov
ror
dec
xor
add
sub
and
add
push
xchg
jmp
push
xchg
add
nop
and
and
rol
mov
shl
and
add
mov
jmp
jmp
push
nop
push
mov
xor
addr16
push
nop
push
xchg
push
nop
jmp
push
mov
call
addr16
mov
xchg
mov
addr16
mov
push
pop
sub
add
add
and
or
mov
jmp
jmp
jmp
xchg
call
nop
mov
xchg
mov
xchg
mov
mov
sub
mov
shr
shr
add
mov
call
nop
jmp
sub
nop
or
sub
mov
and
mov
jmp
jmp
push
pop
call
mov
mov
nop
mov
nop
jmp
mov
dec
mov
shr
add
mov
sub
mov
push
xchg
jmp
push
mov
jmp
jmp
xchg
cmpl
mov
jne
push
push
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
jmp
jmp
jmp
push
pop
mov
mov
push
mov
call
xchg
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
shr
ror
mov
mov
push
nop
push
push
pop
push
mov
push
mov
pushl
mov
call
nop
jmp
push
mov
push
xchg
push
nop
push
push
pop
push
xchg
jmp
call
push
pop
mov
mov
mov
nop
mov
xchg
xor
mov
push
mov
call
xchg
inc
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movb
xchg
jmp
jmp
jmp
jmp
jmp
mov
add
sub
shr
mov
mov
sub
nop
pushl
sub
sub
pop
push
nop
push
mov
push
push
pop
push
addr16
add
mov
jmp
mov
nop
inc
ror
xor
sub
mov
call
xchg
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
lock
pop
dec
mov
xor
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
shl
mov
add
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
sub
mov
push
xchg
add
rol
rol
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
push
std
xor
pop
shr
mov
xor
sub
sub
pop
add
dec
rol
pop
jmp
mov
mov
mov
xchg
movl
push
pop
xor
shr
and
add
mov
add
ror
xor
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
and
xchg
mov
xchg
jmp
call
push
pop
push
nop
mov
pop
shl
ror
mov
xor
pop
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jbe
add
mov
jmp
jmp
jmp
jmp
jmp
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
pop
push
mov
pushl
addr16
jmp
push
mov
movb
addr16
movb
xchg
movb
addr16
movb
addr16
movb
mov
movb
nop
movb
push
pop
jmp
call
nop
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
rorb
add
shll
nop
jmp
mov
sub
rol
rol
mov
push
or
or
sub
pop
add
sub
mov
add
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pushl
xor
dec
rol
inc
pop
inc
or
xor
mov
mov
and
sub
mov
sub
xchg
add
mov
jmp
cmp
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jecxz
ljmp
std
adc
idiv
incl
inc
int
shr
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
xchg
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
pop
idiv
decl
add
sub
or
xor
mov
call
mov
movl
mov
push
mov
pushl
nop
call
xchg
rol
mov
xor
shr
xor
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
and
add
xor
xchg
rorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rolb
rorb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
scas
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
nop
je
push
xchg
rol
sub
sub
mov
and
mov
sub
xchg
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
or
jmp
jmp
jmp
jmp
jmp
in
add
sub
shl
add
pop
call
mov
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpb
mov
jmp
push
mov
movb
xchg
movb
mov
movb
xchg
movb
xchg
movb
mov
movb
nop
movb
nop
movb
mov
jmp
inc
mov
mov
dec
xor
mov
mov
xchg
mov
push
pop
jmp
push
addr16
mov
add
sub
or
mov
call
mov
xor
xor
sub
xor
pop
pushl
xchg
push
mov
pushl
mov
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
mov
xchg
jmp
or
ror
mov
sub
xor
ror
shl
add
mov
mov
nop
and
add
mov
add
push
pop
mov
mov
or
mov
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
je
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
xor
shl
xor
pop
add
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lock
add
jb
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
repnz
jmp
leave
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
call
nop
jmp
push
xchg
push
xchg
or
dec
sub
shl
xor
mov
mov
xchg
add
xchg
nop
nop
nop
nop
nop
add
push
pop
add
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
lock
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
inc
or
mov
inc
mov
jmp
movb
addr16
movb
xchg
movb
xchg
call
addr16
sub
add
xor
mov
push
xchg
jmp
movb
xchg
movb
mov
movb
nop
call
nop
xor
sub
ror
mov
push
xchg
call
xchg
mov
xor
mov
movl
xchg
jmp
push
xchg
call
xchg
sub
dec
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
mov
and
xchg
cmp
nop
jne
and
mov
add
xchg
add
xchg
add
nop
jmp
shl
inc
and
add
mov
mov
jmp
jmp
or
inc
sub
mov
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
push
xchg
nop
nop
nop
nop
nop
xor
addr16
rol
shl
or
sub
mov
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
push
pop
jmp
mov
xchg
andl
mov
add
xchg
mov
xchg
jmp
call
push
pop
or
or
add
mov
movl
addr16
call
mov
and
ror
xor
mov
mov
jmp
call
addr16
or
ror
or
shl
pop
mov
sub
mov
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
lea
jmp
jmp
jmp
jmp
jmp
jmp
xor
nop
inc
addr16
jmp
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xlat
add
add
xor
mov
pop
inc
xchg
inc
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
std
incl
inc
add
imul
mov
add
ror
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
xchg
add
xchg
jmp
movsl
mov
mov
and
sub
mov
push
push
pop
call
nop
add
push
pop
mov
movb
nop
movl
mov
call
xchg
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpl
xchg
jne
jmp
cmp
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jl
and
or
xor
mov
xor
add
sub
shr
and
add
mov
or
mov
pushl
or
shl
pop
add
mov
mov
xchg
jmp
jmp
nop
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
adc
nop
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
call
mov
call
push
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
cld
incl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
popf
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
mov
mov
rol
mov
dec
or
mov
jmp
movl
push
pop
call
nop
movl
nop
push
xchg
rol
mov
call
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
je
jmp
push
push
pop
push
xchg
mov
xchg
mov
xchg
mov
mov
jmp
jne
or
mov
jmp
mov
leave
or
and
shl
and
mov
sub
xchg
mov
nop
mov
mov
jmp
jmp
movsbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
nop
jne
and
or
and
xor
pop
xor
xchg
rol
and
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
jmp
mov
xor
add
dec
shr
pop
sub
mov
mov
mov
add
nop
add
xor
xor
pop
push
popl
mov
sub
or
mov
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
add
mov
cltd
jmp
jmp
jmp
jmp
jmp
jmp
and
xchg
add
push
pop
xor
xchg
jmp
movb
nop
incl
nop
jmp
jmp
rol
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
mov
incl
mov
mov
xor
shr
add
shr
mov
mov
addr16
jmp
call
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
push
mov
call
addr16
jmp
xor
xchg
jmp
cmpl
xchg
je
cmpl
mov
je
cmpl
push
pop
jmp
mov
add
mov
call
push
pop
mov
shr
pop
add
add
dec
or
pop
or
and
and
pop
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sar
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
xor
or
rol
xor
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
xchg
xor
xchg
inc
xchg
xor
xor
mov
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
rol
add
or
shr
mov
mov
cmp
xchg
je
incl
nop
jmp
or
shl
pop
mov
pop
add
xor
or
add
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
inc
or
mov
jmp
xor
nop
or
and
sub
shl
ror
pop
and
shr
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
loopne
lock
loopne
mov
cmp
xchg
jl
jmp
cmp
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
xchg
jmp
cwtl
in
loope
rclb
or
or
rol
ror
xor
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
addr16
add
xchg
shl
mov
mov
pop
rol
pop
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
or
and
and
or
mov
mov
mov
xchg
sub
mov
jmp
pop
pop
into
inc
xchg
inc
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
jmp
sbb
sub
nop
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
out
jge
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
sub
xor
add
add
inc
mov
shr
mov
or
shl
mov
sub
push
pop
mov
xchg
incl
xchg
jmp
xor
add
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
adc
sub
push
pop
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
jmp
push
js
dec
push
pop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
mov
addr16
mov
xchg
jmp
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
adc
inc
add
mov
add
nop
jmp
ret
mov
test
add
jne
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
or
add
xchg
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
adc
in
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
aas
xchg
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
sbb
je
add
mov
or
or
mov
sub
xchg
ror
and
mov
mov
nop
incl
nop
dec
xchg
jmp
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
ror
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
xchg
jmp
and
or
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
sub
xchg
jmp
dec
mov
jmp
push
push
fisttpll
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
pushl
addr16
call
mov
xor
ror
mov
mov
mov
push
pop
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jl
pop
dec
dec
nop
or
xor
add
shr
or
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
loopne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shll
incl
xchg
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
testb
inc
jne
add
nop
mov
xchg
jmp
jp
mov
incl
jge
add
add
add
rolb
add
add
add
inc
xchg
cmp
mov
jae
inc
nop
inc
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
scas
dec
xor
jb
mov
nop
nop
nop
nop
nop
call
nop
mov
xchg
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
mov
xor
add
or
or
sub
mov
rol
shl
or
ror
mov
jmp
pushf
into
je
add
mov
sub
mov
xor
mov
sub
addr16
mov
nop
incl
mov
dec
addr16
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
loopne
shll
filds
or
insl
and
add
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
mov
call
nop
push
xchg
call
mov
or
dec
mov
mov
mov
jmp
ret
call
decl
nop
xor
xchg
inc
xchg
jmp
xor
or
and
add
mov
inc
add
shl
mov
jmp
sbb
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
mov
add
mov
xchg
incl
mov
incl
addr16
mov
mov
xor
mov
cmpl
mov
je
and
sub
or
sub
mov
nop
nop
nop
nop
nop
or
xor
sub
mov
ror
pop
sub
xchg
dec
sub
shr
or
or
pop
xor
sub
and
mov
dec
sub
ror
shr
and
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
sub
or
add
pop
shl
xor
add
mov
add
xchg
sub
xchg
jmp
mov
mov
and
xor
mov
sub
mov
nop
nop
nop
nop
nop
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
js
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
nop
nop
nop
nop
mov
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shl
mov
shr
dec
shl
mov
and
mov
cmp
push
pop
jne
and
xchg
add
mov
add
mov
nop
nop
nop
nop
nop
add
mov
pushl
rol
xor
mov
inc
xor
pop
inc
nop
inc
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
inc
add
incl
jne
nop
nop
nop
nop
nop
call
mov
mov
nop
mov
addr16
nop
nop
nop
nop
nop
mov
nop
or
and
add
or
mov
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
push
pop
nop
nop
nop
nop
nop
push
nop
xor
and
dec
sub
shr
mov
call
mov
push
xchg
mov
nop
nop
nop
nop
nop
nop
call
xchg
mov
addr16
xor
mov
or
shr
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
nop
nop
nop
nop
nop
pushl
xor
and
sub
pop
nop
nop
nop
nop
nop
add
addr16
jmp
mov
rol
dec
shl
mov
add
mov
nop
nop
nop
nop
nop
push
addr16
call
mov
cmp
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
nop
nop
nop
nop
nop
or
mov
or
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
or
or
mov
pushl
or
pop
sub
mov
mov
add
nop
add
push
pop
nop
nop
nop
nop
nop
jmp
jns
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
or
rol
and
mov
add
add
xchg
add
addr16
push
xchg
pushl
mov
nop
nop
nop
nop
nop
call
push
pop
mov
xchg
add
nop
add
push
pop
xor
xor
dec
mov
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
incl
cmpl
xchg
jne
nop
nop
nop
nop
nop
call
push
pop
mov
addr16
add
xor
sub
shr
add
mov
inc
or
xor
add
mov
ror
mov
pop
dec
sub
dec
pop
dec
pop
nop
nop
nop
nop
nop
mov
xchg
cmp
mov
jne
add
sub
mov
mov
add
nop
nop
nop
nop
nop
add
xchg
mov
push
pop
shr
sub
mov
add
mov
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
movsb
add
andb
stc
data16
sub
xor
push
dec
inc
sbb
mov
imul
push
and
pop
ret
mov
pusha
loopne
dec
mov
imul
mov
mov
lods
movsb
imul
pop
sbbl
or
mov
repnz
jle
pop
cld
or
repz
dec
movsl
lahf
hlt
dec
pop
adc
movsl
inc
out
shr
mov
pop
movsb
mov
mov
enter
nop
cmp
add
cmp
ret
jns
scas
or
pop
sahf
adc
test
cwtl
mov
insb
mov
xor
adc
or
mov
testb
sti
jl
pop
adc
push
iret
dec
inc
loopne
cli
jg
shl
repz
dec
out
fs
fmull
movsl
and
adc
add
add
cmp
xor
in
mov
inc
and
std
push
shrl
or
or
dec
pop
add
sbb
ret
aaa
movsl
iret
ja
inc
mov
stos
das
adc
mov
sbb
cltd
add
out
icebp
push
gs
mov
ffreep
pop
pushf
sub
fnsave
fsubrl
adcb
dec
pop
mov
dec
mov
dec
int3
jnp
js
push
xor
out
stos
push
cmp
lds
rorl
push
vfmadd132ps
in
ss
sbb
dec
test
test
stos
pop
xchg
lret
inc
fdivr
test
andb
sub
push
mov
orl
sub
jp
sbb
test
sahf
in
mov
inc
push
mov
mov
mov
mov
call
push
adc
cmp
add
scas
mov
push
shll
sub
das
ror
cmp
pop
stos
inc
arpl
mov
iret
and
scas
dec
xor
data16
pop
test
pop
aad
jge
fwait
std
jb
nop
inc
lcall
jg
pop
xchg
enter
icebp
mov
ljmp
fnsave
push
ss
fdivrs
sbb
bound
adc
leave
in
pop
bound
ret
shl
rclb
inc
add
inc
cs
ljmp
and
push
push
cmp
xchg
mov
lods
sub
popf
dec
push
sbb
add
push
push
or
jg
into
fcoml
mov
dec
iret
lds
movsb
arpl
mov
ret
mov
shlb
scas
lret
adc
lcall
mov
xor
andl
stc
inc
loop
dec
inc
inc
sub
loop
fdiv
sahf
lds
clc
rcrb
aam
cltd
mov
lret
xchg
test
dec
into
sbb
fmull
out
add
dec
inc
aas
and
xchg
xor
sbb
mov
pop
mov
lcall
adc
fwait
mov
iret
add
xchg
or
call
int
fsubs
inc
add
cwtl
xor
lock
pop
inc
test
cltd
fiadds
stc
adc
popa
movsl
jl
ret
subl
mov
sub
cltd
je
mov
push
aaa
dec
fcmovb
inc
adc
adc
cwtl
jno
pop
add
sub
divb
bnd
or
mov
cmp
inc
cmc
fidivs
movsl
jnp
xchg
andb
jae
imul
not
sub
sbb
and
add
cld
jp
lds
xlat
xor
sub
gs
lods
push
jae
push
pop
xlat
xor
jmp
adc
lock
ficompl
stos
stos
mov
in
lcall
mov
sbb
ljmp
push
insb
pop
push
es
mov
lcall
repz
xchg
mov
xlat
mov
rcr
pop
sbb
xchg
ja
dec
jo
push
dec
or
pop
push
notb
mov
push
mov
jne
out
xor
ficoms
pop
xor
xlat
ret
jb
in
cmpsb
cmpsb
clc
xchg
add
mov
loopne
mov
sbb
pushf
mov
and
cmp
inc
imul
or
fldcw
sub
stos
xor
pop
and
int3
lock
lret
les
dec
and
lcall
es
not
push
inc
out
addl
jle
mov
ss
pop
mov
inc
jnp
sbb
les
mov
loopne
and
xor
mov
stos
jbe
jmp
pop
lret
scas
inc
mov
jbe
aaa
push
xlat
in
xchg
dec
mov
mov
je
sub
adcl
pop
jp
dec
cli
loopne,pn
dec
rcr
cmpsb
bt
fincstp
dec
jp
or
jno
in
sbb
mov
push
stc
jg
stc
dec
xor
xchg
jb
ljmp
mov
aad
ja
pop
cmpsl
pop
xchg
push
xor
je
push
out
mov
test
mov
and
inc
shrb
inc
sub
inc
mov
adc
pop
xchg
fisubrs
out
jns
je
sub
xchg
repnz
mov
inc
dec
jnp
iret
xor
add
ds
push
jae
pushf
cwtl
sub
js
scas
dec
out
push
popf
and
jae
pop
cmp
imul
pop
and
and
fcmovnb
lret
mov
fcompl
mov
enter
sbb
mov
nop
mov
ljmp
faddl
mov
jno
dec
sub
push
pop
jmp
cmc
push
out
jge
fcompl
add
lsl
mov
orl
cmp
cmp
iret
jno
push
and
xchg
jge
pop
push
pop
cmpsl
popa
inc
mov
popf
imul
fidivrl
pop
mov
xchg
mov
push
fnsave
clc
stc
adc
addr16
lods
lods
inc
movsb
js
dec
cli
nop
jge
mov
pop
pop
mov
mov
in
fs
aam
ja
pop
push
mov
push
xor
jbe
lahf
je
aad
push
sarl
fstps
shrb
push
or
mov
jl
dec
dec
pop
in
ficoms
es
stos
mov
imul
mov
sbbb
mov
sbb
pop
jecxz
jge
jg
mov
inc
pop
scas
adcb
aaa
inc
es
dec
je
imul
sahf
mov
xor
cld
adc
jno
cld
sub
inc
in
pop
repnz
xor
jo
sub
xor
ss
pand
xchg
add
xor
in
xchg
cmpsb
iret
stc
push
mov
push
mov
jns
call
mov
push
les
and
sub
stos
ret
cld
lods
dec
pop
mov
jae
push
nop
stos
mov
add
or
icebp
std
mov
nop
sar
jg
ja
add
ss
aam
dec
movsb
lds
dec
andl
dec
inc
popa
inc
icebp
xor
test
iret
jge
jge
popa
lcall
imul
leave
xor
jns
lcall
les
inc
hlt
pop
and
sbb
data16
aam
xor
je
sub
cs
scas
lock
cld
aaa
jp
mov
loopne
aaa
add
in
mov
ljmp
or
stos
imul
icebp
aas
xor
push
or
inc
dec
jp
push
sub
rcrb
adc
cli
mov
push
icebp
jecxz
cltd
es
mov
inc
icebp
adc
fisubrs
inc
mov
push
sbb
nop
rclb
or
xchg
xlat
push
mov
loope
jns
clc
sub
mov
mov
cmpsb
cmp
repnz
jle
xor
pop
push
mov
xchg
push
mov
bound
inc
sub
mov
adc
dec
dec
lret
out
mov
fwait
sub
call
xchg
int3
mov
cld
and
fnstenv
mov
ds
sbb
mov
or
inc
scas
insl
outsb
jle
scas
push
jb
sbb
daa
cmc
mov
andb
push
push
outsl
out
call
bound
and
mov
lret
icebp
test
je
cmpsb
add
rclb
into
lret
iret
pop
mov
je
fists
mov
jmp
pusha
stos
or
dec
adc
mov
ds
mov
leave
ds
mov
push
dec
lahf
int
inc
sbb
inc
xor
jmp
roll
loope
push
pushw
insl
dec
fstl
call
stos
dec
ss
je
stc
pop
sbb
into
cmp
stc
stos
fcomi
cmp
cmp
pusha
addr16
imul
pop
enter
icebp
cwtl
fsubs
push
push
mov
xchg
js
test
add
adc
cs
les
fldt
mov
mov
popf
repz
js
outsl
jp
jb
xchg
jns
icebp
push
inc
push
hlt
cmp
and
jb
mov
add
es
pop
int3
sahf
out
leave
xor
pop
stc
adc
jne
dec
pop
lahf
sbb
xchg
mov
subb
mov
lods
or
sbb
and
ljmp
adc
pop
jae
test
xor
imul
sub
cmp
cwtl
adc
jp
cs
jns
lods
outsl
pop
pusha
dec
push
xchg
lds
loopne
sbbl
jmp
mov
mov
loopne
xchg
fwait
jg
and
push
or
in
xor
mov
cmp
shll
lahf
pop
das
fsubl
repz
xchg
stos
xchg
push
jmp
sbb
addr16
rorb
and
and
mov
test
outsb
cmp
mov
lret
sti
or
adcl
in
and
pop
call
adc
mov
xchg
jo
cwtl
jp
daa
xor
call
fxam
sbb
in
xchg
sub
and
add
stos
xchg
mov
fisttpl
mov
inc
adc
je
sub
inc
ds
shlb
or
adc
cli
incb
les
cmp
mov
clc
lea
sub
jae
jge
scas
adc
pusha
mov
aaa
mov
cli
push
dec
lcall
outsb
cmpsl
and
stos
jbe
test
cmpsb
idivb
cmp
jae
icebp
push
jbe
rorl
mov
pop
and
jl
and
mov
je
add
pop
mov
dec
lds
sbb
xor
push
test
push
aas
sarb
cmp
xchg
mov
in
and
pushf
xchg
lea
lock
int3
xor
and
filds
shrl
mov
cmp
pop
loopne
cmpsl
mov
sub
add
js
xchg
sbb
pop
fstpt
adc
cli
xchg
adc
mull
mov
mov
ss
pop
dec
into
cmpl
sbb
dec
out
pop
push
or
and
inc
sub
cmp
dec
or
jmp
mov
xchg
xchg
dec
jo
jne
pop
xchg
mov
cwtl
pop
jg
mov
repnz
push
aaa
mov
add
fldcw
lcall
int
int3
adcb
into
or
push
addb
test
pushl
inc
cmp
push
pusha
xlat
xor
subb
bound
popl
jge
aad
cli
loop
adc
xchg
cmp
add
imul
push
adc
out
ss
or
pop
movsl
mov
lret
in
scas
xchg
arpl
adc
mov
adc
mov
cmpsl
pop
int
stos
aam
inc
aaa
cmp
sbb
mov
mov
mov
mov
inc
scas
xchg
icebp
push
inc
sarl
daa
lret
fs
andb
mov
orl
xchg
dec
sub
push
dec
push
rcrb
cmpsb
xchg
ljmp
sti
and
scas
mov
dec
test
push
lea
dec
rcrb
inc
xor
xchg
negb
jecxz
adc
mov
sub
cmpb
mull
jbe
inc
sar
mov
jbe
jge
fiadds
inc
imul
ret
popw
push
addr16
xchg
bound
mov
fimull
int
fadd
sarb
xchg
cmpb
push
testl
lret
cmc
sub
dec
out
aam
repnz
inc
icebp
xchg
out
sub
inc
add
bound
call
insb
ss
jne
cmp
inc
cmpsb
andl
shlb
rol
sahf
and
push
test
out
jno
jmp
and
mov
xor
mov
in
mov
mov
mov
jl
lods
xor
sbb
jbe
mov
mov
icebp
sub
jge
idiv
lcall
movsb
mov
and
in
push
xor
in
and
jae
out
adc
add
xor
out
sbb
adc
and
or
add
fs
adc
shrl
pop
aad
mov
in
xchg
add
rcrb
fldt
outsl
push
mov
pushf
dec
xchg
shlb
popf
cli
repz
add
fcmovne
scas
pop
cwtl
dec
jne
cmp
imul
fsubl
dec
sbb
push
inc
or
aas
call
mov
rorb
adc
push
and
dec
outsl
push
xchg
adc
test
lahf
jbe
syscall
shll
mull
or
mov
pushf
mov
or
stos
mov
or
xor
sub
leave
and
xor
and
into
inc
test
push
mov
aas
sarl
insb
rclb
mov
push
lock
cli
sahf
outsb
cmpb
seto
jbe
adc
mov
shr
test
push
fsubr
std
xor
cmp
jge
cmp
xchg
cmp
shlb
cwtl
inc
idivl
test
movsl
jmp
leave
adc
mov
testb
xchg
mov
mov
test
fcom
jle
pop
into
hlt
and
shlb
fidivs
push
or
out
jg
lret
jg
arpl
xor
lods
out
pop
cld
imul
inc
push
or
mov
dec
add
sub
mov
inc
sbbl
int3
fnstenv
aas
pop
test
inc
push
jno
dec
mov
jns
add
adc
jge
fstpl
and
.byte
sub
test
mov
push
out
push
xchg
inc
loope
cmpb
mov
test
sbbl
push
jp
mov
xchg
push
test
push
mov
repz
or
and
idiv
jb
inc
sarb
das
nop
js
cmp
movl
jnp
add
mov
loope
stos
rcr
or
xchg
push
lret
mov
leave
jae
pop
ss
xchg
cmpsb
imul
cmp
and
pushf
repnz
fcmovnu
push
inc
sbbb
sub
call
adc
test
lret
xor
push
xchg
push
or
mov
and
mov
adc
jmp
stc
xchg
in
adc
mov
add
repnz
adc
fmull
iret
push
divb
ret
fnstenv
push
fwait
gs
pop
sbb
pop
test
f2xm1
scas
daa
nop
xor
hlt
daa
cwtl
xor
scas
mov
in
int3
das
xlat
cmp
sbb
test
js
adc
imul
xor
mov
je
fstl
dec
pop
out
mov
movsl
push
call
dec
insl
xor
xchg
sete
push
lret
ficoml
es
jae
push
xchg
outsl
xor
ljmp
add
les
mov
dec
dec
cmp
mov
jmp
xorb
sbb
mov
ror
call
in
push
and
push
loop
into
or
test
pop
xor
sbb
xchg
sahf
dec
jae
mov
mov
ret
pop
push
sbb
in
fsub
sbbl
repz
icebp
fs
push
pop
xchg
dec
bound
cltd
push
xor
cmp
cmp
enter
scas
push
mov
stc
cmp
cwtl
rcrb
in
adc
pop
cmpsb
popf
fisubrs
rcrb
data16
in
adc
in
aas
cmp
jae
out
repz
mov
ja
je
test
std
lea
pop
mov
cmp
clc
loopne
repnz
pop
dec
jne
mov
mov
dec
jnp
jmp
int3
jecxz
inc
sub
data16
cwtl
mov
push
pop
je
push
sub
cld
fmul
and
stc
dec
jl
mov
daa
bound
sbb
sub
lahf
fs
xor
push
inc
insl
addl
insl
negb
loop
cmp
nop
or
inc
test
in
ja,pn
mov
push
sbb
mov
pop
mov
pop
or
testl
inc
movsl
pop
sub
mov
mov
jb
pusha
scas
jo
mull
jb
or
loop
or
call
outsl
test
in
mov
test
jmp
mov
sbb
ss
mov
sbb
push
insb
jmp
jl
cmp
ljmp
cmp
lods
and
mov
lock
sub
mov
mov
dec
repnz
lods
add
gs
lret
jge
push
mov
dec
lds
jae
lcall
inc
fnstsw
mov
sbb
cmp
hlt
je
leave
xchg
aam
pop
loop
popa
out
mov
scas
iret
lock
ds
pushf
testb
inc
lea
std
push
lcall
fs
ja
and
or
sub
mull
nop
cltd
in
loope
jb
ficompl
mov
mov
add
mov
out
adc
fs
jb
std
in
clc
cmc
pop
scas
jno
ret
incb
repnz
sahf
inc
repnz
adc
out
loopne
pop
jmp
mov
movsl
outsl
mov
mov
mov
jg
or
mov
int3
sbb
push
jmp
rolb
lahf
dec
inc
xchg
flds
pop
addr16
or
das
int
cmpsl
mov
pusha
push
in
or
cs
pop
or
hlt
bextr
xchg
jg
and
icebp
jmp
mov
pushl
imull
sub
lret
jne
leave
add
mov
in
adc
mov
icebp
pop
add
pop
xor
add
xchg
xor
or
movsl
aas
lret
jle
jg
mov
push
cld
imul
push
mov
inc
jb
pop
mov
outsb
es
int
loope
mov
cwtl
adc
and
xchg
or
or
fldt
or
mov
dec
pop
mov
imul
clc
loope,pn
and
les
fsts
or
cmp
andb
ss
hlt
jle
addr16
ds
lret
mov
pop
mov
lods
mov
xchg
ljmp
dec
mov
adc
xchg
dec
prefetch
sub
int
jmp
mov
scas
dec
pop
xchg
out
push
push
scas
test
adc
fcoms
fs
loopne
imul
dec
leave
adc
mov
mov
xor
arpl
sub
jge
add
loopne
stos
int3
or
enter
loopne
gs
lret
dec
xchg
mov
ljmp
add
push
mov
les
add
js
xchg
repz
xchg
sti
int
push
cmc
insb
fldenv
inc
mov
stos
in
test
bound
mov
adc
xchg
pushf
ror
stos
jecxz
dec
jns
xchg
push
clc
or
jae
ficompl
dec
push
daa
sti
arpl
inc
jge
testb
cmovns
es
clc
and
dec
mov
ds
lret
pop
pusha
mov
fstpl
xlat
and
push
dec
popl
adc
mov
test
adc
or
test
fs
cmp
stc
ror
sub
stc
lods
outsb
push
aam
push
inc
testl
lods
dec
and
stos
adc
adc
or
xchg
pop
ss
mov
imul
mov
test
loop
xchg
sbb
jle
mov
aaa
cld
addr16
daa
pop
ljmp
aam
stos
or
inc
or
sti
push
divb
pop
mov
int3
cmp
orb
sub
fimull
mov
cli
xchg
out
lret
cmpsb
xchg
jno
data16
push
int
fnsave
lcall
ret
outsl
in
lods
sub
mov
dec
test
sub
minps
aaa
xchg
int3
or
repz
lods
jmp
pop
and
insb
shrl
dec
cli
lret
sub
enter
jle
sahf
cmp
lret
call
inc
sbb
dec
aas
jbe
out
sbb
push
lea
lods
addr16
mov
push
outsl
imul
gs
lock
dec
imul
aam
mov
adc
jbe
je
ret
pop
pop
mov
cmp
add
inc
into
popf
mov
add
mov
arpl
daa
jp
aam
jmp
popa
les
stc
mov
inc
aad
mov
call
mov
push
mov
mov
lcall
popa
gs
and
or
xor
inc
or
jae
jp
icebp
cmp
cmp
inc
and
out
cmp
enter
or
and
xor
jle
jge
es
add
test
mov
roll
add
xchg
pushf
pop
div
dec
adc
mov
stos
pop
popf
pop
adc
stos
cmc
fmul
push
or
mov
mov
jp
lods
mov
popf
jns
push
jmp
mov
es
xchg
pushf
lret
stc
rclb
add
ret
les
aad
xchg
loope
push
cmp
mov
pop
xchg
ret
movsb
dec
sub
adc
ljmp
aaa
inc
das
addr16
addl
xor
adc
arpl
test
mov
invd
push
lock
outsb
in
dec
nop
stc
mov
and
inc
rcr
cltd
jecxz
mov
and
mov
cmp
rcrl
xchg
mov
or
into
mov
nop
lcall
popf
xlat
pop
addr16
add
sarb
iret
ficompl
mov
inc
sub
add
jle
mov
ds
iret
xchg
aaa
inc
add
shl
and
pop
sub
out
lcall
imul
pop
jge
push
shll
out
sbb
rol
xchg
and
jge
adc
push
dec
stos
fiadds
jne
xchg
adc
cs
rcrl
rclb
sarl
cmc
fwait
lods
mov
cmpsb
cmp
rclb
cmp
xor
int3
adc
pop
pushf
and
fnstsw
adcb
mov
ds
stos
xor
jne
aad
cmp
data16
sbb
and
jg
inc
lcall
sub
mov
push
jmp
mov
push
dec
dec
inc
aam
out
or
sbb
inc
mov
jge
je
inc
xchg
loopne
pop
pop
jge
push
mov
xor
fidivrs
ja
push
jl
mov
lcall
ja
sti
add
int3
out
mov
in
gs
xor
sahf
sbb
lret
xor
aad
dec
enter
sub
inc
inc
insb
in
adc
fnstcw
lods
cmp
cmc
nop
mov
cmc
out
add
jnp
mov
jo
imul
xchg
enter
mov
sub
ljmp
adc
aas
arpl
std
and
sbb
flds
mov
pop
inc
sbbl
inc
ja
loope
mov
lds
jbe
adc
mov
mov
mov
pop
push
mov
xchg
mov
fstpt
cmpsl
sub
lret
xchg
cli
cmp
lahf
mov
add
push
scas
stos
cltd
ss
cmpsl
cmp
jne
rcl
cmp
mov
pop
ds
ficomps
xchg
and
push
sub
mov
dec
xchg
fdivrl
sub
jg
mov
cli
lret
fsub
inc
out
sbb
jecxz
cmp
pop
in
mov
sbb
ret
js
jecxz
sub
lea
icebp
jmp
or
cmc
jae
outsl
xchg
xor
sbb
mov
cmp
lea
fildl
dec
repz
leave
js
and
pop
cmp
push
popf
loopne
and
pop
pop
shrb
dec
test
push
xor
fdivrs
mov
ds
xchg
lods
lods
iret
adc
cmp
inc
fs
mov
aam
je
inc
ss
add
popf
sub
in
icebp
sub
xchg
xor
cs
dec
into
sub
xor
aad
int3
mov
test
sbb
adc
in
mov
inc
jae
xor
aad
mov
xchg
mov
pop
lock
xchg
lods
and
fdivl
stos
imul
mov
hlt
out
ss
enter
les
mov
and
mov
push
xor
mov
mov
dec
push
lods
sbb
push
popa
xor
or
dec
dec
mov
ret
cmpsl
in
mov
fldt
adc
lods
cld
aaa
mov
repnz
ljmp
outsb
psllw
jnp
and
test
sub
push
pusha
xchg
jne
movsb
mov
jno
mov
mov
into
mov
lods
mov
js
and
pop
add
sbb
stos
loopne
xlat
popf
xchg
push
or
loopne
dec
xor
cld
iret
in
lret
dec
sbb
out
add
fcompl
shll
repz
inc
mov
addl
in
movsb
fwait
pushf
push
clc
sbbb
int3
cld
rcll
je
pop
ss
lea
hlt
push
enter
jb
ficompl
mov
in
rolb
jecxz
push
pushf
mov
or
xchg
mov
push
ss
and
push
cmp
push
push
dec
fyl2xp1
sub
mov
mov
mov
leave
rcrl
loopne
dec
xchg
loope
pop
scas
popf
ss
jl
push
and
imul
mov
fsub
aad
lahf
xchg
lret
push
cmpb
jns
icebp
xor
sarl
push
cs
pop
addr16
ret
jecxz
and
pop
adc
jl
sub
mov
cwtl
cmc
jnp
adc
jecxz
inc
in
cwtl
sbb
int
sub
sbb
and
push
sbb
cmp
mov
daa
addb
aaa
xor
ljmp
sub
cltd
add
mov
mov
sub
adc
pop
stos
sbb
mov
les
adc
fistl
xor
cmp
mov
roll
jns
sub
cmp
lods
sub
incl
negb
pop
aas
bound
xlat
das
stos
scas
dec
data16
push
das
jecxz
pop
dec
mov
push
scas
in
callw
scas
rol
or
mov
mov
push
sub
push
xor
inc
mov
sbb
push
cmp
mov
sbb
pop
fsubp
mov
mov
or
sbb
sub
jge
inc
rcl
sub
inc
dec
out
xor
rcr
shr
add
sub
cmp
test
dec
sbb
mov
outsl
ljmp
add
test
ds
xor
jge
mov
lods
lcall
cmp
arpl
lock
in
fstp
outsb
dec
filds
icebp
xor
or
pop
cmp
mov
lock
sub
add
imul
mov
xchg
pop
loop
mov
mov
iret
out
into
cmp
ss
and
and
jne
cmp
test
pop
es
mov
xor
dec
inc
ja
sbb
or
jp
rcr
aaa
mov
pop
jmp
pop
fsubr
pop
push
gs
outsl
xchg
loopne
push
sub
mov
push
pusha
iret
bndldx
dec
mov
sub
jns
aad
jo
jns
push
push
loopne
mov
fnop
icebp
nop
push
daa
mov
insb
enter
and
inc
pop
ror
pusha
mov
cld
mov
out
or
stos
fstpt
popa
jnp
inc
out
int3
aaa
sub
loopne
cli
clc
fmuls
mov
sub
cmp
jmp
cmp
sbb
into
xor
sbb
pusha
or
inc
rolb
jle
or
sbb
shl
and
sbb
cmpb
arpl
sbb
int3
or
sub
sbb
add
repnz
leave
sarb
jb
dec
outsb
insl
andl
mov
cld
adc
shll
out
mov
popa
popa
scas
push
dec
cmpsl
mov
in
rcll
cwtl
sbb
repnz
xor
pop
push
add
std
dec
fs
stc
dec
mov
cs
sbb
test
sahf
int
push
pop
inc
jne
std
jecxz
loope
mov
ljmp
push
aad
cmp
cmp
ss
sub
dec
incb
pop
jecxz
aaa
adc
orl
inc
xchg
into
icebp
clc
popf
mov
pushf
jmp
test
xor
fistl
bound
add
faddl
xchg
ja
xchg
pop
cltd
dec
pop
xor
mov
xor
sbb
cmp
adc
push
in
shl
add
jns
mov
clc
dec
fistl
aas
movsb
sub
xchg
arpl
push
out
add
lock
js
and
inc
and
out
or
lods
pop
loop
ret
pop
lods
dec
out
jmp
mov
xor
cld
divl
mov
jns
cltd
popa
mov
dec
mov
cs
leave
fwait
adc
bound
fsubrp
or
xchg
add
mov
push
cmp
enter
imul
rolb
lcall
arpl
dec
gs
jnp
bound
or
push
pushf
in
ss
shrl
test
sub
fs
xchg
std
push
or
push
fisubrs
rorb
int
clc
cltd
mov
icebp
loope
dec
xchg
or
xchg
loop
dec
pop
stc
jne
fists
fnstsw
jns
inc
mov
test
insl
xchg
cmp
xorl
ret
hlt
scas
xor
orb
push
ret
imul
cli
cmp
stos
sub
int
je
jmp
data16
xor
test
sub
jecxz
push
das
add
xchg
or
test
cmp
or
enter
adc
mov
inc
mov
stos
cmp
jbe
sbb
xchg
psubd
sub
addr16
lds
mov
insl
fnstenv
testb
mov
mov
insl
cmp
repnz
cwtl
nop
sbb
mov
xlat
es
and
idivb
add
enter
aas
jecxz
je
xor
jae
inc
inc
add
adc
mov
scas
ds
jbe
xchg
push
out
aad
in
add
outsb
push
fcoml
clc
xlat
mov
xchg
mov
pop
sbb
das
sub
mov
mov
fistpl
in
negl
das
jne
leave
ficompl
shr
dec
adc
fiaddl
mov
push
adc
sbb
inc
das
cmp
es
add
cs
cmp
insl
iret
push
jne
xor
ror
add
test
pop
inc
xchg
shrl
pop
push
dec
or
cmp
pop
jmp
add
dec
xor
cmp
es
gs
rcrb
and
and
xor
mov
je
shrb
mov
pop
pop
sahf
pusha
out
push
xlat
loope
adc
leave
add
push
stos
mov
gs
mov
jne
cmpsb
mov
push
mov
inc
xor
push
and
jmp
out
adc
icebp
cmp
lret
jp
or
sti
ret
push
jle
push
test
and
fidivrl
adcb
popl
or
jae
std
mov
cltd
xchg
lret
xor
loop
xchg
sub
xor
and
adc
into
subl
aas
sub
jno
mov
add
test
add
out
out
pop
cld
stos
fldt
sub
and
sbb
xor
jmp
inc
ret
adc
push
addr16
imul
xor
in
xorl
mov
push
sti
sbb
mov
mov
push
testb
rolb
cmpsb
cltd
fistpll
pushf
out
in
sub
push
mov
sbb
outsl
stc
jle
adc
test
xor
inc
push
arpl
push
mov
jnp
sbb
mov
push
stos
cmpsb
sub
insl
and
push
les
negb
test
and
mov
ja
stc
fstpt
sbb
adc
mov
mov
jb
sbbb
outsb
inc
cmp
cmp
inc
jmp
aad
mov
mov
pop
xchg
scas
ds
add
jo
and
hlt
and
cmp
insb
aam
repz
inc
xchg
mov
in
or
dec
roll
xchg
jmp
imul
push
sub
push
adc
cmp
pushf
sub
stc
movsb
pop
loopne
xor
dec
jbe
and
cmpsl
fisubl
outsl
pusha
sbb
mov
xabort
fstpt
adc
movsb
in
stos
ds
pop
cmp
js
sbb
test
or
daa
or
xchg
dec
sub
shll
mov
rcll
pop
xor
push
rcll
popa
jne
xor
sbb
aas
loop
in
lods
or
mov
push
sub
pop
in
xchg
icebp
push
add
cwtl
pop
sbb
cmp
rol
movb
std
cwtl
shll
mov
and
aam
imul
lret
pop
jg
fildll
xchg
hlt
or
pusha
jo
popa
cmc
mov
and
jl
call
push
std
and
pop
xchg
sub
cs
call
js
add
negl
or
test
insl
and
fs
pop
call
xchg
sahf
rolb
stos
divl
cmpsb
insl
out
xchg
pop
leave
sub
cmp
das
adc
push
lea
mov
popf
pushf
adc
sarb
jb
pop
popl
stos
clc
xor
pusha
scas
pop
add
int3
jo
add
mov
inc
mov
xor
jge
popf
sub
lcall
push
ljmp
dec
faddl
mov
adc
movsl
rolb
into
loop
dec
iret
fidivs
es
aam
repz
fildl
mov
out
cmp
call
cmc
ds
jo
inc
sub
shll
sub
cmp
in
in
aad
aad
faddl
mov
loopne
dec
sub
jne
xchg
add
fldenv
jb
cmp
inc
mov
lods
dec
rolb
fwait
mov
jmp
push
lcall
test
addr16
adc
xchg
mov
aam
xor
shlb
sub
mov
push
stc
ss
pop
fnsave
or
rcll
and
dec
and
out
in
inc
mov
sbb
mov
mov
stos
popf
push
adc
or
sub
sub
out
sbb
pop
mov
push
xchg
add
loop
inc
dec
mov
repnz
psrlw
push
popa
and
and
js
and
jo
sub
cltd
jmp
repnz
xchg
enter
outsb
jg
scas
xchg
inc
fidivs
addr16
imull
adc
call
dec
clc
in
cmp
shlb
mov
and
jmp
inc
cltd
adc
out
jle
cmpsl
push
imul
jge
lods
push
xchg
rcr
cld
and
inc
xchg
mov
add
stc
mov
lds
lock
in
mov
inc
mov
rcll
lcall
or
dec
movsl
pushf
pop
cld
dec
lea
xor
inc
aaa
ss
lahf
sub
or
pop
pop
js
jle
sub
cwtl
mov
mov
and
jbe
jns
icebp
push
jg
sbb
jno
jp
fcomps
add
movsb
mov
dec
xchg
inc
xchg
imul
in
jp
outsb
push
and
fwait
imul
cmp
scas
mov
scas
ret
scas
dec
lods
push
lods
fldenv
out
add
gs
loop
loopne
lahf
cli
push
outsl
adc
sub
pop
push
adcb
fcoms
mov
mov
xchg
sub
inc
pop
mov
pop
push
ficoms
popa
int3
mov
inc
or
scas
sbb
movsb
shll
or
pop
popl
xor
sbb
bound
dec
mov
call
loope
adc
push
in
or
jg
xchg
stos
fisttpl
cmpsb
shlb
dec
jl
mov
stos
andl
lds
test
sub
push
sbb
cmp
fwait
daa
les
mov
inc
outsl
sub
mov
push
mov
loope
movsb
mov
xor
add
movsb
pop
dec
xchg
ss
icebp
fisttps
fiadds
lret
mov
add
xchg
icebp
inc
pusha
mov
sarl
ljmp
in
adc
push
adc
cwtl
lds
stos
loop
in
loope
les
mov
mov
sbb
nop
call
test
test
insl
mov
lods
mov
fnstcw
cmp
daa
out
or
dec
or
nop
pop
adc
push
aaa
es
and
sbb
jge
xchg
mov
add
or
ljmp
pop
sbb
mov
jno
jle
addb
or
mov
hlt
cmpsb
ds
push
repz
fdivl
sbb
sti
aas
pop
movsl
adcb
mov
int3
jo
xchg
sub
or
or
pop
enter
fmull
mov
in
enter
fnstcw
pop
test
or
sarl
add
fs
popf
mov
xor
add
out
or
loope
rcrb
std
adc
or
and
mov
lods
sarl
add
push
mov
shll
and
lea
fldl
add
incb
mov
push
repz
add
mov
sub
xchg
enter
pop
push
nop
jnp
in
cmp
inc
mov
cmp
les
pop
push
addb
add
fbld
pushf
sbb
and
jb
push
test
mov
scas
aas
inc
mov
hlt
test
stc
stos
or
mov
mov
xchg
loopne
out
cld
das
je
push
lea
xchg
mov
pmullw
mov
dec
xor
pop
pop
sbb
loopne
insl
fisubs
sarb
bound
mov
xchg
stos
ss
inc
dec
icebp
xor
dec
push
in
sbb
stos
aas
jb
cmp
fcom
sbb
movups
lods
xchg
sbb
cltd
mov
test
xchg
pop
dec
mov
inc
pop
mov
clc
sub
adc
sahf
mov
insl
push
lock
inc
and
push
clc
xor
adc
cmc
ds
insl
std
xchg
dec
mov
mov
lahf
arpl
lock
daa
stos
enter
push
mov
dec
push
enter
push
std
jbe
sub
fs
push
mov
pop
inc
test
cmp
xchg
fs
insl
aam
cmp
stos
fadd
push
iret
lret
cmp
and
xor
and
loop
sbb
test
xlat
pop
add
imul
inc
out
jb
xchg
xchg
jnp
sbb
pop
add
daa
nop
fnstcw
adc
and
imulb
or
push
in
stos
sti
nop
ret
push
sarl
out
hlt
pop
fidivl
popf
mull
outsb
icebp
pop
dec
dec
jge
lahf
pop
jle
cld
xchg
add
mov
in
rcl
mov
mov
in
xchg
xchg
scas
movsb
and
sub
inc
mov
les
dec
aas
sbb
mov
push
test
sahf
js
call
inc
out
outsb
fldt
sbb
pusha
orl
dec
imul
ds
test
hlt
movsl
inc
fwait
xor
test
inc
xchg
sbb
xor
xchg
fidivrs
xor
cs
and
mov
xchg
lcall
add
aam
pop
repnz
mov
jb
jmp
rcrl
dec
sti
cli
dec
cmp
xchg
xlat
sbbb
shrl
daa
roll
test
ss
int3
xchg
lds
xlat
cmp
aam
sbb
jbe
sub
jae
inc
push
insl
adc
int
push
les
enter
xchg
mov
dec
xchg
insb
xor
test
testl
push
fs
cmp
icebp
dec
mov
cld
xlat
jecxz
inc
or
clc
ja
ja
add
push
dec
push
test
cmpsb
inc
mov
cwtl
sbb
mov
pop
push
fcmovne
in
sbb
test
rcrb
push
rcll
jbe
xchg
sbb
adc
sub
mov
pop
loopne
mov
outsb
inc
mov
or
jl
mov
cld
push
pop
jecxz
rcll
loopne
or
loopne
mov
in
adc
sub
stos
andb
mov
or
pop
mov
addr16
das
mov
pop
ljmp
test
push
jmp
into
test
xchg
jns
push
aad
sub
mov
cmp
movhps
jae
scas
or
data16
sbb
cld
scas
jne
pushf
push
adc
mov
jp
loopne
clc
mov
and
out
mov
mov
js
pop
mov
enter
adc
arpl
cmp
fsubp
xor
jl
movsb
inc
jg
cmp
mov
rcrb
mov
scas
fidivrs
negl
sbb
lea
divl
push
or
pusha
pop
add
cmp
mov
pop
je
adc
ja
lock
in
in
ret
imul
jge
sub
movsl
hlt
sub
iret
inc
xor
cs
testb
sbb
xor
fs
jno
push
imul
negl
scas
fs
push
mov
pop
lods
negb
mov
cmp
jo
icebp
push
cltd
xor
je
push
adc
daa
call
and
pop
add
cmpsb
pop
cld
or
inc
pop
mov
pop
int3
mov
jp
lods
cmpsb
in
out
ds
outsl
fs
rcrb
sbb
rorl
cmc
cmp
add
lock
into
fwait
icebp
xchg
ds
insl
test
xchg
insb
sub
cmp
stos
enter
xor
jne
xchg
mov
push
int
mov
test
mov
call
cmp
leave
out
or
je
push
test
fsubl
add
sbb
out
jl
pop
sub
mov
sub
add
pop
mov
jnp
pushf
and
mov
scas
push
sub
mov
cmp
sub
xchg
jb
aam
xchg
loope
repnz
scas
pop
in
push
jns
sub
sbb
add
cmc
neg
adc
add
mov
jmp
mov
call
and
cmp
dec
push
lret
jae
mov
jge
jnp
pop
orl
push
test
push
gs
loopne
mov
rolb
fwait
mov
aas
add
adcb
pop
jne
push
add
sub
popf
and
cmp
sbbl
cmpsb
scas
sbb
lret
sahf
pop
and
cwtl
in
sbbl
xchg
pop
in
int3
js
jns
mov
lea
test
ret
jle
xchg
std
enter
shrb
repz
jp
mov
push
mov
cli
jmp
imul
insb
add
insl
fs
xor
cs
insb
add
jb
gs
xor
cs
insb
add
push
dec
dec
jbe
ja
dec
jnp
jne
outsl
cmp
bound
push
addl
jb
insb
aaa
xor
pop
and
push
int3
lret
std
sti
clc
dec
fs
mov
mov
.byte
