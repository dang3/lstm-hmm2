out
push
sub
rcl
jecxz
mov
dec
aas
roll
mov
mov
aad
jno
sbb
xor
cwtl
sub
push
decl
add
mov
adc
stos
push
xor
adc
or
fistpll
inc
cmp
lret
stc
and
mov
inc
cmp
dec
sub
pop
arpl
pop
dec
cmp
or
loopne
or
jae
call
mov
es
sbb
push
icebp
repz
and
es
out
fnsave
test
nop
aad
xlat
sub
adc
fcoms
rol
repnz
outsb
xchg
int
xchg
inc
sub
loopne
jne
insl
iret
psraw
popf
std
aad
cmpsl
int
aas
pop
xchg
fbstp
outsl
lods
pop
mov
or
lcall
sbb
lcall
scas
lahf
les
inc
cmp
lock
add
inc
push
mov
mov
cmpsb
lret
int
scas
ret
and
std
test
sub
and
sbb
clc
xor
push
mov
sub
sub
add
fs
sbb
xorl
sbb
into
cmp
cs
add
flds
loope
mov
mov
fs
dec
xchg
aaa
js
in
mov
mov
into
jbe
jbe
out
mov
mov
adc
int
sarb
inc
or
test
inc
cmc
cmp
cmp
adc
shrl
fs
pop
push
xor
fisubrl
leave
stc
or
add
ljmp
xchg
lea
aad
repz
fstl
bound
movsl
adc
iret
cmp
jne
imul
mov
pop
cli
dec
xchg
movl
leave
push
add
lcall
les
and
dec
adc
mov
jl
mov
pushl
cmp
and
jo
out
inc
pop
hlt
push
mov
imul
movb
xor
test
sub
fldcw
xlat
pop
pop
mov
mov
pusha
inc
inc
sub
mov
or
test
ss
sbb
movsl
inc
into
sub
add
pop
repz
std
push
in
dec
dec
mov
mul
clc
or
hlt
jle
push
in
divl
add
sbb
je
push
je
cmpsl
mov
movsb
jo
mov
xchg
dec
addl
shl
dec
mov
js
repz
shl
sub
inc
fs
int
dec
fwait
and
mov
jge
insl
xlat
pusha
loop
mov
cld
inc
mov
xchg
inc
loope
sub
pop
and
fisubrl
sbb
scas
lea
test
inc
aaa
inc
jmp
lds
adc
into
mov
in
adc
pop
mov
and
mov
cmpsb
adc
imul
in
lods
fisubs
cmp
jle
sub
push
mov
push
push
test
pop
lahf
sbb
xchg
adc
pop
push
pop
lret
xor
and
fimuls
xadd
and
xor
mov
lea
cltd
outsb
mov
test
mov
fs
cmpsb
jl
or
xor
sahf
xchg
pop
jp
mov
cmpsl
cmpsb
cmp
jne
dec
icebp
mov
mov
int
mov
push
and
and
iret
push
nop
loope
ret
loop
movb
movsl
mov
mov
sub
mov
inc
pop
pmaxub
adc
fstp
mov
adc
fisubl
in
dec
mov
inc
test
pushl
bound
cwtl
xchg
mov
push
sarb
sbb
into
cli
sbb
cmp
mov
movsl
in
movsl
lahf
outsl
rcrb
sub
xchg
fs
test
or
popf
js
xchg
jg
into
ja
inc
xchg
shrb
addr16
dec
mov
mov
test
pop
mov
ret
or
int3
and
arpl
jno
mov
mov
xchg
xor
cmpsl
jns
in
mov
and
sbb
mov
ss
int3
scas
cld
imul
addr16
or
clc
sbb
ret
dec
mov
xchg
pusha
jge
mov
js
and
mov
fnstsw
adc
add
inc
inc
fisttps
push
mov
movsb
mov
push
and
sub
mov
jb
mov
in
inc
inc
or
aad
sahf
mov
inc
cmp
jp
scas
push
nop
leave
push
jmp
dec
stos
fs
push
lods
and
xor
push
jl
pop
push
repz
in
pusha
stos
sbb
mov
mov
or
adc
test
aas
fidivs
cmp
pop
and
xchg
js
fstps
dec
bound
lods
push
movsb
mov
dec
testb
divb
inc
arpl
test
out
mov
lods
jns
in
adc
mov
dec
pop
popa
vpcmpeqd
adc
xchg
flds
maxps
pop
cmp
data16
aas
flds
pusha
sbb
jge
scas
lret
ret
addr16
sbb
push
mov
push
push
or
in
das
rorb
mov
outsl
mov
inc
lds
jecxz
add
mov
insb
scas
out
ds
fimuls
lods
rolb
mov
adc
or
neg
xchg
dec
pop
push
sar
mov
inc
into
xchg
push
sbb
mov
sbb
mov
scas
idivb
sahf
sbb
faddp
cmp
js
adc
cmp
lods
movsb
cmp
sbb
cld
jb
mov
mov
jmp
sub
pushf
rorl
lods
aaa
gs
outsl
jo
sbb
and
mov
stos
mov
pop
inc
out
mov
fsub
movsb
fwait
dec
push
ds
sub
sbb
dec
inc
pop
rorb
mov
jo
outsb
fsts
sub
mull
pop
sub
jmp
vaddsubps
push
mov
ds
dec
add
inc
sti
dec
in
cmp
dec
sbb
jne
fwait
leave
adcl
in
imul
mov
jae
fcoms
jecxz
pusha
test
mov
push
dec
sbb
mov
out
push
shll
add
jo
mov
and
ja
or
xchg
dec
cmp
pop
addr16
movsb
orb
inc
fwait
stc
xchg
scas
xlat
xor
in
jl
ret
jp
sbb
aad
incb
sbb
pop
icebp
mov
in
rolb
jmp
pop
xlat
push
je
lcall
push
sti
and
cmpb
leave
loopne
pop
xor
out
rcrb
addr16
and
icebp
sub
adc
add
aad
mov
pop
adc
adc
sub
push
sbbb
int
pop
xchg
in
inc
jo
insl
ljmp
insb
xchg
lea
lret
and
inc
out
sbb
psubq
call
xchg
insb
sbb
out
cld
cmpsb
pop
sbb
cmpb
xchg
inc
dec
pusha
inc
cmp
and
sbb
enter
fcmovb
adc
mov
lods
add
dec
js
fidivs
pop
adc
cmp
in
jo
or
add
jne
pusha
adc
lret
inc
xchg
enter
sub
loopne
les
fisttps
pushf
dec
cmp
jae
or
rclb
or
movl
xor
mov
mov
mov
loope
fwait
mov
pop
fsubs
adc
inc
scas
or
and
orl
mov
inc
xchg
cmpsl
push
fisubs
out
xor
mov
mov
sbb
ret
cli
sub
in
jno
stos
sub
sahf
inc
or
add
pop
jp
dec
enter
push
and
movsl
dec
rol
or
lds
mov
in
in
test
outsl
int
adc
dec
or
dec
rcrb
xchg
xchg
sbb
int
sub
repz
into
push
inc
mov
sbb
test
mov
pop
dec
cmp
stos
mov
in
cwtl
pop
and
ret
fwait
dec
xor
mov
sbb
mov
add
cmp
int3
lahf
add
pop
je
js
pop
pop
push
inc
push
xchg
jns
jmp
cs
jl
dec
adc
test
jbe
mov
cltd
or
loope
push
mov
xor
out
fdivrs
fisttpll
push
scas
vmovupd
les
or
push
push
and
add
shrl
xchg
sbb
mov
and
lods
fldl
outsb
test
jg
or
xchg
xchg
dec
insl
das
aam
rorb
push
ljmp
dec
into
jno
std
jecxz
mov
push
inc
scas
add
rorl
aad
mov
lock
imul
in
movsl
shrl
lods
mov
jns
inc
cmpl
fchs
pop
imull
jnp
sbb
inc
xchg
cs
adc
or
dec
icebp
mov
jecxz
scas
inc
xchg
out
movsb
ds
rclb
inc
pop
in
sub
mov
clc
or
lods
and
jg
push
and
es
fisttps
hlt
cmpb
leave
xchg
stos
cmp
jecxz
les
test
adcl
push
cmpsl
iret
xor
and
mul
and
push
ljmp
mov
imul
xor
push
pop
ja
enter
inc
cld
adc
rcl
loopne
add
pop
fwait
in
mov
xchg
or
ja
ja
notb
jle
inc
mov
cmp
sub
call
addr16
je
iret
add
cmpsl
mov
xor
test
pushf
js
movsb
jno
adc
sahf
cmpsb
sub
sub
push
insl
dec
xchg
js
clc
sbb
gs
cltd
or
outsb
lahf
sbb
xlat
hlt
sbb
fwait
int
xor
xchg
imull
call
adc
cld
adcb
mov
mov
cmpsb
dec
and
out
sbb
jp
lods
push
pushf
mov
push
in
cmp
or
adc
lret
les
daa
cmpb
push
mov
sbb
xchg
scas
cltd
scas
aam
xor
mov
cmc
ret
cltd
lds
pushf
notl
mov
lahf
dec
pop
pop
jp
xor
test
bound
rorl
sbb
add
test
mov
mov
shll
or
sti
insb
pop
mov
bound
repz
cmp
sub
xor
pop
inc
inc
insb
xor
loopne,pt
or
pop
mov
ljmp
push
cli
lahf
rorl
and
push
rcr
test
les
and
lret
bound
daa
adc
mov
jbe
push
repnz
sbb
sub
int
xchg
inc
scas
sub
sbb
pop
jns
add
adc
icebp
aam
pop
lea
push
mov
pop
mov
mov
cmp
inc
inc
add
cmp
mov
cwtl
popw
jbe
mov
out
or
scas
cs
push
in
es
cmpl
sarl
into
and
pop
stos
jno
push
adc
push
sbb
lahf
adc
rorb
jno
repnz
pushf
inc
sub
or
sub
jae
dec
cmp
lock
or
cs
mov
cmpsb
dec
mov
in
dec
out
inc
sbb
movsl
pop
jne
pop
inc
popf
sbbl
adc
lret
cmp
mov
pushf
cmpsb
jge
popa
or
mov
movsb
in
cmp
push
mov
lret
jle
iret
sbb
and
inc
test
or
adc
xchg
or
mov
sbb
sub
pop
enter
int3
lock
push
mov
ss
pop
js
int3
xchg
jmp
loopne
jp
in
pop
mov
in
outsb
leave
inc
cmp
ss
shl
loopne
jmp
jle
gs
addb
xchg
rcll
push
filds
ret
inc
lcall
cmpsb
jmp
fists
push
mov
xor
inc
or
lds
mov
dec
pop
stc
ljmp
pop
dec
data16
call
jecxz
loope
cli
arpl
test
adc
outsb
inc
dec
push
or
bound
dec
gs
mov
andb
mov
mov
in
hlt
mov
dec
cmp
dec
in
ss
mov
mov
stos
sub
sahf
cld
dec
test
fisttpl
and
enter
push
push
add
xchg
pop
cmp
sbb
sbb
test
lret
dec
ljmp
cmpsl
mov
inc
push
and
sub
xchg
push
add
mov
cmc
adc
and
movsl
movsl
sub
jge
push
mov
les
cmp
jge
xchg
enter
stc
pop
rol
xchg
mov
jp
fwait
and
xor
lret
push
aam
inc
dec
in
add
stos
or
cli
test
pop
jbe
sti
out
sbb
jp
or
add
pop
xchg
xor
cmpsl
addl
rcrb
mov
iret
mov
pop
and
or
leave
ret
add
dec
lcall
in
inc
nop
mov
clc
bound
inc
adc
sahf
sub
ss
jp
xor
or
je
sarb
lahf
fdivrs
icebp
rolb
je
sbb
pop
push
pop
jecxz
or
negl
cld
popa
dec
lret
cld
bound
fcoml
ss
inc
sahf
cmp
shll
or
push
aam
add
xor
ss
sub
pop
and
sbb
adc
ds
clc
movsl
movsb
arpl
adc
sbb
daa
scas
dec
fsubs
xor
xor
cmpsl
cltd
mov
cs
mov
inc
ss
imul
loopne
lcall
testl
fisttps
pop
lods
outsl
xchg
repnz
and
or
mov
test
mov
sbb
mov
jae
es
cmp
fmuls
xchg
xchg
xchg
jb
and
movsl
jecxz
aam
fs
lds
pop
jno
pop
scas
shlb
mov
movsl
sti
mov
sbb
sub
adc
test
test
insb
add
or
xchg
cltd
dec
mov
test
loopne
dec
test
sti
call
and
cwtl
stc
gs
sbb
mov
sbb
in
lret
cmc
mov
enter
lret
pop
mov
rcr
sub
mov
dec
shl
hlt
mov
roll
jns
imul
mov
loope
inc
insb
ljmp
sbb
das
lds
icebp
lods
lahf
cmp
or
inc
mov
dec
nop
add
push
mov
adc
push
jne
sbb
inc
mov
pop
loopne
cmpsl
xchg
or
inc
out
xor
lcall
rorl
sub
mov
lret
mov
mov
je
popf
cmpsb
mov
jp
sbbl
daa
mov
pop
jecxz
xor
out
sti
jb
sbb
pop
sahf
mov
mov
and
mov
mov
inc
scas
in
pushf
mov
dec
adc
jne
xorl
xchg
jg
arpl
cmp
mov
rol
mov
mov
das
inc
xor
popa
shrb
inc
inc
roll
fdivrs
pusha
and
sub
sbb
pop
push
das
mov
mov
and
adc
aad
jbe
pop
mov
xchg
stos
mov
push
mov
push
repnz
out
xchg
aam
aaa
add
test
pushf
sub
int
mov
test
push
cltd
mov
mov
lock
jecxz
sub
jnp
mov
jae
cmp
mov
clc
fnstsw
ret
xor
sbb
xor
and
or
icebp
mov
xchg
or
sti
rcl
fistps
push
data16
outsb
cld
inc
mov
inc
jb
test
mov
lds
pusha
insb
jbe
clc
push
add
jg
dec
cmp
jo
imul
cmpl
fdivr
mov
and
cmc
and
sub
iretw
sub
dec
divl
sub
add
adc
in
xor
jecxz
push
cwtl
sbb
cwtl
fstps
jbe
es
inc
xor
das
insb
popf
adcb
and
jae
pushf
mov
addb
pusha
pop
sub
sarl
jecxz
jbe
scas
xchg
jbe
addr16
mov
cltd
and
jp
fsubs
push
jbe,pt
or
xor
push
or
test
bound
pop
pop
inc
jp
adc
pop
roll
out
cmp
cmp
pop
iret
pop
shl
in
mov
fmull
cmpsb
and
mov
dec
sahf
in
fldt
inc
divl
mov
jecxz
pop
sbb
xchg
xchg
mov
mov
mov
in
adc
clc
xor
sub
xchg
push
aad
mov
cld
cld
ret
mov
test
gs
push
jge
add
fimuls
daa
fst
mov
out
aad
out
ljmp
jp
test
addr16
lahf
add
push
lds
shll
jp
dec
xor
ret
inc
mov
dec
and
sub
stos
rcr
jecxz
mov
jb
test
mov
std
xor
push
inc
insl
mov
mov
popf
lods
icebp
mov
push
out
push
aaa
mov
ja
push
mov
add
xchg
pusha
fidivrl
adc
push
stos
mov
leave
xor
icebp
mov
mov
mov
lretw
shlb
sarb
movsl
pop
cs
dec
push
js
mov
mov
jb
repnz
mov
mov
test
push
dec
out
test
mov
inc
add
fsubl
rcll
jb
lea
hlt
subb
cmp
mov
push
push
loope
jnp
push
and
in
test
lods
daa
jl
jae
sbb
ret
jo
add
into
testl
in
mov
jge
sti
dec
stc
outsb
pop
cmp
icebp
cmpsb
aad
sub
imul
cld
inc
mov
cmpsb
pop
mov
sub
sub
lcall
andl
stc
stc
gs
push
push
xor
test
lahf
out
inc
pop
imul
jbe
lcall
test
rcrb
repnz
jbe
lds
insl
shlb
mov
push
adc
mov
daa
pop
mov
mov
add
cmp
xor
push
stc
jno
shrl
sbb
cld
push
outsl
sub
sbb
sbb
cmpsl
inc
push
xchg
ret
in
push
push
out
fbstp
lods
xchg
jmp
pusha
mov
test
hlt
pop
cmc
jecxz
push
xchg
mov
insb
pop
ss
push
xor
insl
jb
in
popa
dec
lds
push
sub
std
shrb
xchg
cmp
xor
fistps
dec
in
xor
scas
mov
dec
and
or
push
cltd
aaa
xor
and
mov
fistl
jo
mov
iret
or
pop
pop
out
in
adc
adc
xorl
inc
dec
pop
adc
out
fsubl
inc
icebp
repz
lds
movsl
out
call
bound
mov
ds
pop
mov
shll
into
aaa
dec
xchg
scas
js
lea
push
jne
add
lods
shlb
jns
xor
iret
push
bound
lods
cmp
stos
movsl
xchg
xor
mov
inc
test
or
pavgb
adc
push
mov
rolb
push
push
pop
sub
add
add
mov
repz
or
pop
xchg
rclb
out
enter
cmpl
cmp
push
outsl
pusha
or
inc
xlat
inc
mov
enter
adc
and
popf
jmp
cmp
mov
hlt
mov
cmpsl
fnsave
loope
addr16
test
jl
pop
xor
inc
into
pop
xchg
cs
adc
cmp
xchg
pop
inc
das
imul
dec
push
adc
movsb
pop
push
pop
popf
dec
jecxz
pusha
outsb
push
out
push
cmp
fstps
stc
in
in
mov
aas
mov
mov
jle
int3
mov
sahf
ds
pop
add
or
xchg
decb
lret
jo
xor
loope
inc
sbbl
jle
pop
out
and
mov
mov
test
repz
adc
or
rcrl
repnz
movl
inc
add
sbb
in
scas
mov
adc
inc
jg
sbb
in
mov
and
dec
or
or
pop
xor
sar
mov
or
mov
sub
or
and
add
fwait
lds
cmpsb
add
and
add
sbb
les
mov
jmp
ffreep
jno
adc
jg
shlb
xchg
jnp
sarl
or
jle
cmp
clc
or
shlb
pop
mov
movsb
int
xchg
sub
xchg
dec
inc
sbb
lahf
or
pop
cmpsl
stc
ds
lea
lahf
add
insl
lods
add
xchg
rorl
rorl
jl
fcoml
or
pop
push
cmp
addr16
sub
fidivrl
repz
nop
push
and
add
mov
pop
sub
sub
and
and
xchg
pop
cmp
push
loopne
mov
pushf
aam
jmp
xchg
jb
out
pop
jge
lret
xchg
xor
mov
sarb
mov
add
ja
lret
and
xlat
jo
push
out
add
fnstcw
xorb
pop
aam
aaa
or
jnp
add
pop
and
push
xchg
mov
inc
jnp
and
movsb
adc
je
mov
dec
jmp
adc
xor
jge
ficompl
scas
pop
sub
dec
sti
dec
xor
jne
push
or
sub
cmp
jg
cmp
mov
fwait
push
mov
dec
call
insw
call
out
xchg
add
aaa
dec
dec
lods
out
push
loopne
push
mov
enter
adcb
loopne
outsb
lods
lret
xor
inc
jmp
xchg
clc
push
jnp
lahf
jnp
js
dec
adc
es
sbb
loop
mov
jne
mov
out
clc
sub
jmp
inc
push
in
pop
or
insl
or
stos
dec
mov
arpl
dec
add
dec
ja
push
and
or
mov
lock
outsb
lods
add
or
xlat
xchg
shl
and
jg
xor
subl
jmp
rorl
mov
jg
arpl
inc
jne
clc
lahf
imul
call
lret
pop
jb
dec
je
in
cmp
dec
fdivl
lods
cmp
jnp
jbe
push
movsb
sti
mov
xlat
cmpsl
pop
push
inc
aad
imull
mov
jle
push
jmp
push
adc
mov
jns
vucomiss
and
les
fbstp
and
pop
insl
sarl
jl
pop
jne
lods
sbb
adc
dec
xchg
rol
xorl
jp
add
and
enter
and
imul
fdivp
sti
rorl
mov
jns
arpl
sbb
xchg
cmpsl
cmp
inc
pushf
rcll
filds
push
sbb
push
gs
mov
js
jg
sbb
sub
jae
cli
xchg
dec
xor
addb
cltd
inc
dec
push
inc
mov
mov
cmp
aaa
lahf
mov
enter
pop
pop
cmp
lods
or
inc
dec
or
mov
lock
adc
and
jle
lock
push
xor
inc
pushf
call
push
and
fdivr
jbe
add
push
outsl
out
push
fs
test
popf
cmp
ljmp
cmp
enter
pop
sbb
xchg
pop
test
imulb
ror
lcall
ljmp
inc
fidivl
repnz
in
add
inc
adc
pushf
dec
pop
into
aad
test
negb
pusha
mov
imulb
leave
stos
jne
sub
bound
andb
cmp
jbe
ds
mov
sub
or
cmovbe
jecxz
cmpsl
mov
sub
inc
xchg
pop
mov
sub
dec
cmpsb
xchg
cltd
mov
call
and
imul
jmp
jnp
fisubrs
sub
mov
pusha
jns
ds
xor
ror
cmp
les
inc
and
lcall
rcrl
pop
mov
cmp
cltd
mov
sbb
jle
sbb
mov
sub
cmp
ss
scas
lods
sti
add
mov
mov
lock
filds
jne
mov
iret
jg,pn
addr16
add
dec
in
shlb
ret
pop
ljmp
mov
push
sarl
xlat
mov
jnp
jmp
xor
ljmp
test
jo
add
push
mov
sbb
cli
or
int3
pop
sub
adc
loopne
ret
add
sbb
and
inc
bt
pop
les
pop
aaa
xchg
jp
jle
push
push
loopne
rcrl
xor
ret
gs
sub
ret
sbb
cs
mov
stos
mov
ror
xor
sub
push
lea
sub
mov
jle
sti
lret
fidivs
jg
jecxz
push
dec
pusha
movsb
out
pop
cmpsl
inc
dec
enter
or
xchg
push
bound
and
inc
lods
sbb
xor
aaa
dec
rcrl
scas
in
aaa
iret
mov
sub
push
in
sub
bound
rcrb
filds
xchg
pop
push
call
fwait
arpl
dec
xchg
adc
add
loop
outsb
mov
jg
stos
or
pop
xor
jg
scas
insl
sbb
push
fnsave
pushf
mov
lahf
push
add
lds
sahf
adc
mov
cmp
in
mov
js
sti
pushf
lea
xchg
imul
and
sti
imul
jle
out
pop
cmp
add
or
mov
add
dec
lret
jnp
into
out
cmpsl
push
lret
leave
sub
out
cmp
sub
pusha
xor
loopne
lahf
or
mov
sub
ljmp
mov
jle
repnz
sbb
cmpsl
insl
insb
fcompl
cwtl
inc
mov
lods
imul
out
mov
mov
inc
insb
push
push
imul
push
popa
test
out
mov
push
std
scas
dec
fs
rcll
adc
fcmovnbe
jecxz
dec
pop
mov
ss
int
jnp
xchg
and
sbbl
les
mov
add
clc
cs
mov
imul
decl
mov
and
xor
aaa
dec
mov
mov
fistpl
sbb
fwait
out
pop
jns
sub
ret
aas
pushf
and
mov
xor
push
loope
sbb
les
shll
xchg
cmp
fidivrl
xlat
or
pandn
daa
pop
pop
out
push
fldl
xlat
push
outsb
or
pop
aad
jo
sbb
ret
inc
loopne
fldl
ds
push
inc
push
lea
push
push
daa
ret
jo
jbe
and
mov
dec
popa
sub
push
outsb
cmpsl
xchg
stos
cmp
aaa
rorb
lods
jge
clc
mov
mov
mov
out
test
call
xchg
popa
cmp
in
hlt
out
ds
cmp
jne
add
add
inc
or
sbb
add
xor
aam
cwtl
jl
sbb
or
dec
out
lcall
or
or
xchg
adc
xchg
enter
insb
xchg
cs
jns
fstl
orb
outsl
loopne
mov
jo
and
loop
cmp
stos
sub
mov
adc
cld
add
sbb
cmp
pusha
xchg
lock
sub
adc
adc
xchg
shl
push
sbb
jnp
xor
sub
inc
adc
cmp
cltd
out
or
out
mov
adc
sub
mov
aas
js
ljmp
jnp
and
cltd
or
pusha
jae
shll
adc
cmpsl
or
jnp
cmc
neg
nop
dec
fwait
push
add
xchg
or
pop
bound
inc
mov
sub
sub
xor
scas
int
cli
mov
mov
push
repnz
test
xor
xchg
jg
inc
cmp
cwtl
or
or
in
xlat
ja
sbb
and
dec
call
popf
dec
cmpsb
cmp
stc
mov
imul
cld
insl
push
or
jge
in
mov
arpl
and
stos
js
jl
add
mov
sarb
out
lret
imul
cmp
mov
fwait
mov
scas
repz
and
adc
add
test
les
adc
test
lods
jne
or
adc
lods
repz
rclb
or
or
xor
xchg
test
mov
inc
fcmovnb
repnz
aaa
cmp
mov
in
ds
dec
push
fsubrs
jnp
icebp
cli
or
loopne
or
jg
out
fptan
daa
inc
add
push
leave
fldl
mov
leave
loope
jge
mov
sbb
dec
sbb
fs
xchg
push
push
movsb
inc
sti
push
aaa
popa
add
push
fisubs
or
fidivrl
dec
loop
cltd
pop
pop
xchg
repz
mov
call
xor
mov
mov
cmp
lock
mov
or
cli
dec
lret
pop
repz
insb
out
cmp
jg
jbe
test
mov
and
in
in
lret
rcrb
or
cs
push
ret
movsl
lret
daa
pop
or
mov
lods
add
std
mov
mov
lcall
sbbb
std
loope
xchg
dec
insb
test
cs
lret
push
adc
das
mov
push
push
cli
pop
jne
xor
shl
es
int
push
js
jge
aaa
push
in
cmpsb
xlat
sub
xor
cmc
data16
out
dec
hlt
and
add
sbb
sbb
lods
cmp
in
xchg
sub
push
cmp
ss
add
clc
jo
dec
mov
data16
adc
ret
sub
test
jb
dec
stos
mov
pushf
or
outsl
fldcw
enter
push
and
out
out
pop
dec
sbb
jns
bound
inc
pop
stos
movsb
popl
jg
pop
mov
dec
sbb
std
xchg
and
ret
xor
das
les
test
int3
dec
out
lahf
imul
push
std
fs
mov
sub
push
imul
push
adc
std
sbb
aam
mov
mov
xor
outsb
cmp
mov
sti
stos
cmp
mov
mov
fisttpll
mov
add
mov
sub
xor
adc
pushf
cmpsl
les
fidivl
cltd
shl
jp
rcll
dec
fsub
popf
scas
push
arpl
and
int
add
ret
push
fldenv
loop
movsb
scas
outsl
sbb
lcall
test
das
ja
or
les
clc
xor
gs
aam
inc
pop
and
mov
test
fldl
call
addl
shl
ret
cmc
adc
icebp
push
cli
in
jl
lods
push
pop
aad
loopne
mov
and
push
pop
cmpsl
fwait
ss
jo
or
sub
mov
adc
dec
lock
popa
push
jo
jno
mov
rcrb
repz
negl
lock
dec
dec
or
pushf
out
xor
aad
cmc
pop
loope
nop
lods
fs
adc
aam
dec
add
mov
popa
lock
xchg
inc
xor
and
jg
mov
add
lret
pushf
cld
xor
pop
and
sahf
out
lock
and
mov
sbb
mov
out
subl
ljmp
out
or
xchg
pop
enter
pop
push
in
inc
xchg
xchg
cmpsl
aam
or
sbb
sbb
xor
icebp
xor
mov
jno
mov
pop
pop
sbb
mov
lds
sahf
inc
xchg
pop
lods
mov
mov
dec
lock
shll
xor
stc
sarl
jb
fbld
int3
add
xor
cmp
pop
xchg
outsl
test
inc
and
insl
pusha
lahf
dec
mov
mov
sar
aaa
and
outsb
adc
lcall
sbb
mov
stc
out
das
addb
mov
pop
in
or
jbe
sub
cmp
sti
fs
add
ret
dec
and
push
dec
dec
les
and
or
clc
ror
rorb
and
pop
jnp
push
das
dec
cmp
xor
adc
inc
ljmp
mov
add
mov
int3
in
lock
mov
xchg
scas
xchg
loopne
adc
push
push
aaa
daa
pop
icebp
daa
pop
cmp
push
icebp
addb
xchg
pop
pop
push
cmp
int
mov
sbb
imul
std
cmp
cld
aas
cmp
pop
cmp
into
rcrb
dec
fs
fistpl
cltd
xor
jo
out
rcl
mov
fstpl
cmp
or
and
jg
mov
push
sub
or
in
mov
mov
fs
es
mov
push
loope
and
ror
loopne
push
lock
dec
mull
push
lods
cmp
hlt
pop
xchg
daa
mov
xchg
jmp
push
cmpb
imul
pop
sti
pop
fucom
les
jne
jb
pop
lcall
jne
xor
sub
sarl
ja
inc
lds
push
adc
push
pop
mov
dec
popf
and
adcl
test
cmpsb
mov
fwait
dec
and
and
popf
data16
aaa
mov
insb
push
das
jg
fimuls
faddp
sti
lds
imul
mov
test
inc
mov
cmp
imul
pop
shld
add
dec
sub
les
mov
nop
and
mov
push
push
adc
pop
push
scas
and
or
pop
cltd
lcall
test
fwait
add
dec
jecxz
push
push
xchg
lock
outsl
sbbb
mov
pop
dec
jbe
jl
or
add
test
jp
inc
lret
adc
add
dec
pop
add
pop
add
subl
cmp
cmc
mov
mov
es
xlat
loop
test
jno
in
pop
leave
fcmovnb
xor
xor
xorb
sti
test
and
shlb
jg
int
add
cmp
inc
push
int
clc
sub
pop
sbb
outsl
mov
jnp
movsl
dec
jnp
push
lahf
push
jne
xor
mov
imul
les
jbe
popa
pop
aaa
adc
test
loopne
mov
popa
mov
lcall
pop
sub
mov
mov
inc
sub
cld
imul
inc
cmp
mov
stos
or
les
mov
arpl
mov
int3
mov
and
into
adc
xor
or
in
aad
sbb
mov
mov
push
sbb
jg
int3
scas
cmp
rorl
loop
mov
mov
fwait
aam
mov
cs
dec
xchg
ljmp
mov
adc
cmp
mov
fs
xor
frstor
fs
icebp
notb
daa
and
cmpsl
xor
or
cltd
imul
lcall
dec
mov
cmp
add
fcoml
lahf
daa
jmp
pop
xchg
cmp
inc
lahf
mov
mov
adc
cmpl
pop
aad
lret
jno
pushl
out
into
add
inc
adc
push
data16
xor
enter
dec
inc
pop
adc
outsl
jns
sbb
les
aaa
adc
popa
ficoms
je
into
insb
push
les
std
fsub
xchg
int3
das
orb
mov
jno
mov
cwtl
imul
mov
mov
movsb
push
pop
call
out
inc
xor
sbb
jno
scas
and
clc
aas
pop
pop
je
mov
jno
inc
movsl
mov
pop
adc
icebp
dec
add
jmp
incb
jno
pusha
shll
xor
push
push
sbb
mov
cs
xchg
loope
mov
fwait
dec
xor
mov
mov
aad
inc
push
gs
mov
shrb
mov
adc
add
movsl
xchg
test
inc
loopne
call
call
mov
fmuls
adc
clc
mov
pop
je
ret
sbb
movsl
mov
mov
nop
cltd
mov
xchg
mov
mov
inc
xchg
mov
fnsave
in
popf
or
or
popa
stc
xchg
cmpsb
inc
mov
push
iret
sbb
mov
mov
and
mov
sarb
imul
addl
add
dec
inc
loopne
mov
lock
mov
xchg
mov
fcomp
imul
jno
cli
movsl
mov
pushf
adc
mov
add
xorl
cmp
xchg
or
pusha
sarl
sbb
aaa
or
scas
or
mov
xor
jno
incb
or
lcall
mov
rolb
in
mov
stos
roll
rorb
rolb
lock
out
or
xor
test
scas
clc
outsb
pop
je
nop
lret
jno
lods
movsl
mov
adc
nop
xor
mov
mov
inc
xchg
pop
add
xor
aaa
sub
inc
imul
push
mov
sub
jmp
lea
mov
jmp
pushl
pop
pop
jmp
shl
jmp
push
pusha
jmp
mov
lea
jmp
nop
popa
cmpl
jmp
mov
add
add
jmp
test
jle
mov
jmp
mov
jmp
cmpl
mov
jle
jmp
push
call
cmp
jmp
lea
push
jmp
add
jmp
movb
movb
movb
jmp
mov
inc
jmp
mov
jmp
mov
xor
test
jmp
mov
mov
xor
mov
jmp
jne
sub
jmp
je
call
test
jmp
jl
xor
jmp
mov
jmp
mov
jmp
pushl
push
call
nop
nop
nop
nop
nop
pushl
mov
jmp
inc
decl
jne
add
jmp
mov
jmp
leave
ret
add
add
add
add
inc
or
shr
decl
or
add
mov
shr
jmp
jne
pop
ret
add
add
add
add
add
je
or
cmc
add
add
xchg
decl
inc
and
jmp
add
add
xor
push
jmp
add
add
add
rorb
nop
nop
nop
je
push
jmp
push
jmp
add
add
add
in
push
jmp
mov
mov
mov
ret
add
add
add
rorl
adc
add
push
mov
sub
jmp
mov
movzbl
inc
jmp
or
movsbl
mov
jmp
mov
jmp
xor
inc
test
jne
jmp
incl
jmp
add
add
add
mov
inc
or
sbb
add
sub
push
push
jmp
jne
jmp
pushl
lea
call
jmp
lea
jmp
push
jmp
mov
jmp
pop
jne
jmp
pushl
call
mov
mov
jmp
add
push
call
mov
jmp
add
add
je
adc
decl
cld
add
mov
add
add
add
call
jmp
mov
xor
jmp
push
push
push
mov
jmp
push
add
jmp
mov
xor
mov
and
jmp
mov
add
lea
jmp
lea
push
cltd
pop
jmp
mov
movl
mov
jmp
mov
pop
ret
add
add
add
jle
jmp
incl
push
lea
jmp
mov
jmp
pop
ret
add
add
add
mov
incl
add
test
jne
mov
jmp
je
add
jmp
mov
jmp
add
add
push
mov
push
mov
jmp
test
jne
ret
mov
jmp
push
push
mov
xor
jmp
cmpl
je
jmp
inc
dec
jmp
cmpl
jmp
push
mov
lea
sub
jmp
jmp
pushl
jmp
add
in
jmp
push
shr
push
jmp
push
push
push
jmp
orb
jmp
jne
cmpb
jmp
je
mov
jmp
jne
pushl
jmp
xor
test
jle
jmp
add
shr
and
mov
jmp
mov
mov
mov
add
jmp
push
jmp
push
push
pushl
push
jmp
cmp
jne
and
add
jmp
pusha
jmp
xor
mov
jmp
pop
je
lea
jmp
ret
add
add
add
or
mov
mov
jmp
jle
mov
jmp
push
call
test
pop
jmp
pop
je
incl
addl
jmp
mov
add
jmp
add
add
pop
or
jmp
pop
test
jmp
mov
add
add
mov
jmp
shr
jmp
mov
idiv
jmp
movzwl
mov
and
jmp
call
add
jmp
call
mov
test
je
jmp
call
jmp
xor
jmp
add
add
add
call
push
jmp
xor
push
jmp
andl
mov
mov
jmp
push
push
jmp
cmp
je
mov
jmp
mov
jmp
push
jmp
mov
mov
test
jmp
mov
jmp
add
jmp
mov
cmp
jmp
add
add
in
push
jmp
mov
push
andl
jmp
call
jmp
pushl
jmp
add
cmpl
je
push
jmp
mov
mov
jmp
push
push
push
jmp
push
jmp
sub
sub
dec
mov
jmp
lea
jmp
lea
push
push
jmp
add
test
xchg
add
add
dec
or
sub
add
pop
jmp
mov
movzwl
mov
add
jmp
test
je
test
jmp
jne
jmp
je
push
xor
jmp
pop
pop
jmp
je
jmp
sub
pushl
push
jmp
cmpl
jne
pop
jmp
mov
movb
movb
jmp
call
call
mov
jmp
push
call
jmp
pop
push
pop
pop
jmp
mov
call
jmp
xor
mov
mov
add
jmp
mov
jmp
pop
jmp
pop
leave
ret
add
add
add
mov
jmp
mov
nop
nop
nop
nop
nop
add
jmp
push
jmp
leave
ret
add
add
add
add
mov
popa
jmp
ret
add
add
add
add
add
cmp
add
lea
jmp
add
push
push
call
jmp
push
call
push
push
jmp
jne
lea
addb
jmp
add
dec
jmp
push
jmp
test
je
jmp
push
jmp
call
jmp
jne
jmp
call
jmp
call
jmp
push
call
jmp
mov
test
jle
jmp
dec
pop
lea
jne
jmp
mov
add
add
jmp
jmp
mov
shl
jmp
mov
jmp
add
jmp
add
push
push
push
jmp
test
jmp
jmp
xor
jmp
jmp
call
jmp
pop
jne
lea
call
jmp
shr
or
jmp
test
jmp
push
jmp
jmp
jmp
mov
call
cmp
jmp
xor
add
dec
jne
jmp
je
mov
nop
nop
nop
nop
nop
sub
mov
mov
jmp
pop
pop
jmp
add
jmp
je
push
pop
jmp
pop
jmp
jmp
andb
incl
jmp
jmp
pop
pop
pop
ret
add
add
add
push
add
add
aam
sbb
pop
leave
ret
add
add
add
jmp
push
pushl
push
jmp
mov
lea
jmp
call
mov
test
jmp
push
jmp
pop
movzbl
incl
jmp
je
pushl
jmp
push
call
jmp
mov
and
inc
inc
jmp
add
pushl
jmp
cmp
jmp
shr
je
nop
nop
nop
nop
nop
test
je
jmp
push
jmp
je
cmp
je
jmp
push
call
jmp
cmp
je
mov
jmp
mov
mov
jmp
add
add
jmp
pushl
call
mov
push
jmp
sub
mov
jmp
cmpl
jne
call
push
jmp
push
call
jmp
mov
incl
dec
jmp
pop
pop
pop
pop
jmp
mov
add
mov
jmp
jne
jmp
mov
mov
nop
nop
nop
nop
nop
push
pop
jmp
call
jmp
leave
ret
xor
jmp
add
add
add
inc
pushl
nop
nop
nop
nop
nop
push
call
push
push
jmp
test
pop
jne
jmp
mov
call
jmp
cmp
jne
lea
push
nop
nop
nop
nop
nop
call
jmp
push
push
mov
call
nop
nop
nop
nop
nop
push
push
mov
call
jmp
test
pop
je
mov
nop
nop
nop
nop
nop
mov
jmp
push
push
mov
nop
nop
nop
nop
nop
call
add
mov
mov
jmp
sub
mov
mov
incl
jmp
pop
pop
pop
leave
jmp
dec
jmp
ret
add
add
add
test
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
sub
jmp
nop
nop
nop
nop
nop
dec
dec
mov
nop
nop
nop
nop
nop
shl
movzbl
nop
nop
nop
nop
nop
add
nop
nop
nop
nop
nop
incl
nop
nop
nop
nop
nop
mov
lea
nop
nop
nop
nop
nop
push
nop
nop
nop
nop
nop
call
cmp
pop
jb
nop
nop
nop
nop
nop
inc
nop
nop
nop
nop
nop
cmp
jb
inc
cmp
nop
nop
nop
nop
nop
jae
nop
nop
nop
nop
nop
inc
inc
test
nop
nop
nop
nop
nop
je
mov
mov
sub
nop
nop
nop
nop
nop
mov
mov
incl
dec
nop
nop
nop
nop
nop
jne
mov
jmp
mov
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
incl
incl
xor
nop
nop
nop
nop
nop
cmpl
nop
nop
nop
nop
nop
je
mov
pop
sub
nop
nop
nop
nop
nop
pop
pop
leave
ret
add
add
add
add
add
dec
push
add
add
add
lcall
add
push
add
add
add
sub
add
push
push
add
mov
push
add
mov
add
rorb
add
push
add
mov
add
mov
add
add
add
add
add
lcall
add
push
add
add
add
jge
inc
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
imul
add
incl
inc
gs
gs
je
jo
imul
xchg
add
jo
je
push
popa
addr16
add
roll
gs
popa
addr16
outsl
js
outsb
imul
push
push
inc
push
xor
cs
insb
add
or
inc
jb
add
dec
xor
cs
insb
add
or
adc
adc
add
add
add
add
add
add
sub
add
inc
dec
loopne
add
add
add
add
add
inc
add
add
add
add
add
xor
jne
lock
add
add
add
rolb
add
adc
add
add
add
sub
aas
xchg
xor
add
add
add
loopne
add
adc
add
add
add
xor
add
add
add
lock
add
add
add
add
fcmovnbe
out
in
xor
add
add
add
addr16
loopne
adc
add
add
sub
or
and
add
adc
adc
and
addr16
or
nop
std
add
nop
add
add
xor
leave
cmp
xor
aaa
push
ss
cmp
cmp
cmp
ss
xor
sub
pushl
adc
pop
xor
xor
xor
xor
cmp
add
jmp
cmp
cmpb
les
xlat
fdivrl
and
ss
out
inc
xor
daa
cmp
pop
cmp
cmp
cmp
xor
push
xor
mov
cmp
pop
xor
