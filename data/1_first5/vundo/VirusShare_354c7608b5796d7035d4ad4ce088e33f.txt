xchg
lret
in
lcall
add
lods
lcall
loop
lret
pop
cs
or
imul
mov
addr16
mov
jb
pop
adc
pop
mov
add
mov
jb
shll
in
ret
sysenter
ror
mov
sub
push
xor
pop
cs
adc
ja
adc
mov
pop
cld
fistps
test
je
je
adc
mov
add
or
pushf
call
call
fcmovne
call
or
mov
pop
mov
adc
add
xor
ss
adc
pop
jmp
inc
daa
out
jge
in
adc
pop
jne
arpl
mov
fisttpll
ljmp
out
xor
sbb
add
adc
adc
int
jbe
jmp
cmp
jbe
dec
adc
in
jle
imul
or
dec
cmpsb
adc
cs
in
sti
jge
addb
adc
xor
xchg
mov
outsb
popf
rolb
xor
jbe
idivl
pop
and
lahf
adc
movsb
sahf
insl
push
sti
dec
rcll
je
fnstenv
lcall
lock
mov
xor
adc
push
mov
add
push
jbe
push
fists
sahf
int
push
hlt
test
sub
jge
mov
sub
int
f2xm1
sbb
jbe
pop
idivl
mov
mov
xorl
pop
ja
les
and
adc
fwait
mov
out
jmp
and
int3
xchg
pop
lcall
or
or
ja
push
lcall
xor
and
ja
stos
jmp
push
addr16
lock
out
jmp
add
in
jbe
pop
popa
imul
dec
inc
jmp
aas
xlat
cmp
sti
std
in
fdivl
adc
add
call
jnp
and
adc
je
push
sti
std
cmp
je
js
pop
iret
outsl
in
sti
or
mov
insb
imull
cmp
in
inc
mov
addr16
mov
cmp
in
jbe
js
mov
pop
cmp
js
jno
jmp
adcl
adc
mov
in
ds
sahf
inc
js
or
adc
test
mov
pop
jmp
out
popa
or
or
fdivrp
fcoml
outsl
lret
insb
in
or
adc
mov
sysret
nop
jo
xchg
jle
sti
jbe
in
adc
arpl
das
in
dec
sbb
pop
nop
xchg
mov
pop
gs
bound
and
imul
repz
out
sbb
adc
push
shl
or
mov
fistl
jle
ret
sti
and
xor
and
pop
call
rcrb
jns
dec
jns
jne
xor
xchg
jns
or
addr16
sarb
lea
int
mov
or
jl
sti
outsl
lods
lock
and
arpl
sbb
jle
jp
sub
and
and
out
int3
lret
cmp
fwait
push
jle
jns
cmp
fsubl
jbe
mov
adc
cmpsl
jns
test
testb
adc
in
mov
push
xchg
push
jp
ljmp
aaa
pop
out
stos
nop
mov
push
inc
test
jp
sbb
sub
cwtl
out
sbb
out
ficompl
sbb
adc
sbb
subb
lock
push
jae
or
outsl
mov
mov
jp
cmp
jnp
sub
xor
into
push
shll
sbb
lds
shl
out
ss
out
xchg
call
jmp
xchg
call
cmpsb
stos
jbe
fsubr
dec
pop
mov
lea
jnp
and
mov
sub
xor
ds
adc
stos
jnp
out
lret
jl
push
pop
pop
inc
fcmovnbe
jnp
jmp
dec
clc
das
out
cmpsb
lock
cli
fucomi
std
push
out
and
cmp
xor
cmp
inc
mov
and
std
sahf
jge
mov
pop
mov
pop
testl
cmc
pop
aad
je
push
and
jae
jg
dec
inc
mov
jle
sbb
sbb
iret
and
adc
pop
mov
mov
mov
push
jbe,pn
sar
out
jge
cmp
out
imul
mov
or
pusha
lock
aaa
testl
fildl
pop
xor
repz
or
mov
push
pop
idiv
in
mov
or
mov
jl
xchg
lock
inc
imul
adc
sbb
pop
imul
inc
sbb
ret
sti
lcall
lock
jge
dec
sahf
jge
icebp
and
jge
lahf
icebp
mov
cmp
sbb
sbb
mov
movsb
jmp
icebp
fwait
sti
xlat
std
mov
jp
jecxz
jge
test
push
sbb
ret
mov
jae
outsb
repnz
sbb
arpl
inc
cli
lea
mov
push
repnz
cmp
test
hlt
outsb
ret
pusha
icebp
jae
push
jne
outsb
in
or
out
repnz
fstps
sahf
xor
out
sbb
mov
xor
ret
lret
pop
jle
push
je
mov
fidivrs
test
jmp
rcrl
mov
push
movsb
sbb
mov
das
xor
push
jle
fwait
inc
pop
mov
fmuls
xor
fwait
mov
cmp
jg
test
fwait
cwtl
pop
or
cmp
dec
iret
mov
jbe
push
dec
adc
repz
loopne
repz
add
mov
sub
arpl
nop
jno
outsb
lods
sbb
int3
arpl
adc
sbb
jg
mov
jge
jle
xor
in
aad
ds
mov
and
mov
jo
in
ja
push
push
je
js
adc
repz
push
repz
push
jae,pt
jne
add
sbb
rep
out
pop
nop
clc
sahf
daa
jg
mov
mov
pop
adc
fs
sbb
mov
adc
fisubl
or
cld
add
xchg
and
inc
cmp
lahf
jle
cmpsb
pop
lods
rorl
fbstp
sbbb
rolb
fwait
lock
mov
cmp
negl
in
sbb
ret
adc
jnp
cld
cs
repnz
hlt
adc
ficoms
fcomi
jl
dec
hlt
test
popf
sarb
sub
adc
popf
hlt
mov
mov
sbb
inc
subb
add
mov
in
hlt
mov
cmc
aas
adc
push
rcrl
sbb
sbb
xchg
fwait
cmc
data16
incl
mov
sbb
and
sbb
outsl
idivl
cs
ret
mov
popa
aam
stos
cmpl
testl
gs
iret
call
addl
rorl
jl
adc
sbb
sti
lock
js
subl
cmp
int
negl
daa
push
and
mov
in
cmp
cmp
inc
adc
aad
push
push
dec
and
sahf
rolb
clc
movsl
orl
jecxz
add
or
push
adc
orb
mov
xchg
test
lret
divb
jae
mul
sti
es
mov
mov
add
rcrl
add
adc
subb
push
testb
mulb
sbb
push
subb
cwtl
sbb
lds
mov
mov
es
lds
cld
into
mov
adc
mov
dec
or
push
lock
ret
xor
orb
mov
scas
xor
fwait
cmpl
jbe
cmp
orl
notl
loope
cwtl
mov
scas
pop
incl
ja
test
inc
shl
jge
xor
insb
cmc
mov
push
andl
xlat
push
pop
orl
mul
addr16
jle
adcl
lock
call
arpl
nop
scas
pop
xchg
sbb
sti
jge
xchg
mov
cmpsl
push
xorl
pop
or
test
sti
ds
daa
test
and
subb
add
and
out
mov
jle
imulb
mov
dec
and
sarb
pop
and
add
ret
ljmp
test
pop
sbb
test
pop
clc
xlat
cmp
test
imul
xlat
fldl
sbb
pop
pop
push
neg
and
xchg
sbb
jmp
adc
fwait
iret
dec
adc
inc
in
mov
and
mov
aas
int
mov
cmp
inc
or
mov
mov
addl
xabort
pop
test
add
cmc
test
pop
mov
inc
sbb
test
ja
rcrl
fwait
cmp
clc
mov
pop
and
add
mov
outsl
fs
pop
nop
jbe
jnp
push
and
or
mov
and
add
mov
je
cltd
test
negl
in
cmpsl
mov
pop
popf
js
fistpll
cli
cmp
notl
rclb
and
loop
jle
ret
pop
push
in
push
cli
data16
xchg
mov
xchg
cmp
or
out
outsb
push
cmp
xchg
aaa
cli
push
mov
inc
imulb
out
mov
and
fistpl
mov
sbb
xchg
xlat
add
lret
insl
out
pop
dec
and
or
or
jae
adc
pslld
jge
ja
pop
sub
xchg
sbb
mov
adc
jo
sbb
dec
mov
sub
jo
sbb
pop
iret
jge
imul
sbb
frstor
mov
xchg
ljmp
and
fwait
cmp
adc
mov
insb
xchg
sub
fwait
xor
mov
iret
xchg
xchg
cmp
ss
push
and
pop
mov
ds
add
xchg
sbb
jbe
pop
adc
and
mov
and
arpl
fwait
int
sahf
lds
inc
jae
inc
ja
test
imul
and
js
dec
cmp
push
and
jae
push
in
int
negb
pushl
adc
fwait
outsb
dec
addr16
pop
mov
ja
sbb
fwait
mov
cld
sbb
clc
fsubl
sbb
test
mov
xor
loope,pt
sti
imul
out
cmp
adc
mov
inc
fcompl
cld
or
sbb
sbbl
pop
fsubrs
mov
or
std
sbb
and
mov
mov
lock
inc
cld
arpl
std
inc
out
in
dec
out
ja
and
cmp
test
aaa
and
jnp
insl
cltd
in
js
jnp
mov
or
std
xchg
inc
xor
jle
push
insl
outsl
ja
cmpsb
mov
jno
and
mov
xor
cmp
sti
push
and
cmp
test
xchg
and
aaa
testb
xchg
add
or
adc
and
adc
sub
add
fistpll
mov
out
jnp
sbb
dec
test
js
jl
fisttps
je
imul
cmp
mov
xchg
test
push
xchg
mov
inc
xlat
xchg
xor
push
mov
es
popf
mov
push
daa
sbb
or
xchg
es
enter
lds
jecxz
outsl
cmp
in
jo
cmc
mov
subl
cmp
mov
lock
mov
adc
sub
mov
aas
daa
cmp
mov
aam
mov
call
es
imul
add
incl
cmp
mov
sbb
or
jl
mov
lahf
mov
jge
pop
daa
cmpsb
add
cmp
jle
lcall
inc
cmc
cmp
movaps
mov
cmp
adc
and
out
sbb
mov
sti
insb
clc
and
and
scas
sarb
sub
pop
pop
xchg
std
jbe
lock
xlat
cmp
jbe
std
lea
dec
jne
popa
or
in
sbb
imulb
insl
jns
je
jp
mov
fsubl
aaa
daa
arpl
add
leave
sub
inc
cmp
sub
mov
cmp
mov
jmp
hlt
mov
mov
daa
sub
or
jbe
push
jbe
js
sbb
jl,pt
out
clc
sbb
push
mov
sub
push
out
cmp
adc
inc
sbb
mov
push
mov
xchg
adc
mov
mov
cmp
push
add
popf
mov
pop
add
cmp
add
xchg
sub
mov
or
sub
sub
pop
add
fsubrl
sbb
mov
xor
mov
or
data16
adc
cmp
push
add
je
jl
xchg
inc
sub
in
adc
mov
cltd
sub
sbb
sub
popf
add
aas
push
jbe
add
xchg
push
sub
adc
inc
inc
push
mov
or
lea
rorl
inc
clc
jo
dec
sub
push
idivl
jecxz
mov
sbb
mov
jp
push
and
adc
sub
out
inc
or
add
imul
add
loopne
sbb
stos
mov
data16
rcrb
mov
mov
arpl
adc
jge
divb
fildll
cmp
sub
test
mov
mov
addb
jp
sub
sbb
mov
inc
mov
inc
pusha
dec
jl
xchg
dec
mov
in
sbbl
je
sub
rorl
icebp
arpl
xorb
scas
dec
add
popf
lock
daa
mov
mov
inc
into
push
testl
jg
inc
mov
imul
and
fcmovu
dec
mov
xchg
add
and
notb
in
idivl
mov
xor
mov
and
cmp
ret
shrl
aaa
pop
les
in
jg
stos
loope
xorb
add
mov
jle
add
adc
out
jae
lea
stos
push
sub
sub
mov
in
nop
cmpsb
loop
fildl
fisttpll
fwait
rol
jae
jmp
sti
jbe
imul
add
pop
adc
lods
or
loop
push
sub
sbb
aaa
popa
mov
js
sub
adc
adc
outsb
jb
sub
lret
adc
scas
mov
int3
push
adc
sbb
scas
sti
jge
shlb
jne
push
jp
jge
nop
out
jae
sbb
and
xchg
jnp
mov
add
addr16
xchg
xchg
je
mov
xchg
mov
mov
sti
sbb
sbb
ss
sbb
pusha
out
icebp
dec
pop
pop
push
jecxz
lahf
mov
jbe
xchg
or
mov
in
sbb
ss
arpl
sub
jge
sub
xchg
xor
cs
or
cmc
jbe
mov
jb
cs
adc
ret
pop
fwait
pop
hlt
dec
sti
nop
clc
jle
jb,pn
add
filds
js
mov
fwait
xchg
pop
inc
shr
mov
adc
stos
je
fidivs
mov
push
mov
jmp
pop
xchg
pop
stos
popa
mov
and
icebp
fisttpll
outsb
testl
das
add
movsb
arpl
fldt
aas
xor
or
test
lods
push
cs
sahf
xor
sbb
inc
out
shlb
add
dec
sbb
xlat
jecxz
ljmp
adc
daa
pusha
divl
js
das
or
or
xchg
sub
scas
cmp
push
pushf
and
pop
insl
pop
lods
push
das
mov
xchg
inc
jge
invlpg
add
aam
sahf
hlt
int
jl
imul
les
jnp
jns
pushl
cli
sbb
int
or
lcall
mov
ds
or
lahf
dec
adc
mov
xor
xor
mov
add
push
jne
pop
jnp
std
jle
xchg
pop
xchg
jmp
jl
loop
mov
lret
cmp
or
mov
into
stos
das
call
clc
jle
jb
sub
sub
int
shrb
mov
inc
and
icebp
loopne
push
fbstp
jno
pop
mov
mov
xor
push
jae
xor
fists
sbb
stc
dec
jae
vmptrst
rclb
xchg
sahf
xchg
xchg
xor
xor
popa
sbb
jle
xor
cmp
ds
orb
xor
bound
mov
mov
dec
xor
add
add
incl
add
loope
sbb
gs
mov
xchg
ret
xchg
or
aad
sti
into
sub
dec
or
sti
jge
out
mov
pop
ss
pop
nop
lret
xor
xchg
add
sbb
out
pop
xchg
xlat
arpl
daa
ret
or
inc
or
clc
mov
lahf
xor
shlb
lods
movsb
dec
pop
mov
jecxz
vcomisd
dec
jae
lret
sub
data16
rclb
rorl
out
or
enter
scas
lea
or
jo
mov
mov
fwait
enter
lea
ljmp
or
jbe
add
iret
aad
fdivl
rcll
dec
xor
in
sar
and
xor
xchg
daa
cmp
jmp
fwait
cmpsb
xor
sahf
shr
adcb
xchg
or
mov
lcall
xorl
pop
jecxz
and
jne
sub
pop
lods
xlat
dec
sub
ja
inc
mov
fmuls
or
xor
pop
in
sti
lea
cmp
pop
neg
jge
call
xchg
adc
clc
je
ficoms
push
mov
stos
jmp
fstl
xor
xchg
movl
xor
jge
fsts
out
xor
je
pop
adc
das
sahf
xor
xor
mov
aaa
movsl
xor
pop
xchg
cwtl
sub
cs
mov
push
xor
xor
add
adc
dec
sarl
jmp
adc
xchg
mov
pusha
insl
mov
adc
stos
clc
jbe
cli
jecxz
lcall
lea
mov
addr16
lret
mov
adc
js
sub
mov
decl
mov
std
test
scas
loope
push
insl
xor
mov
mov
adcl
xor
dec
aas
mov
jg
cmpsl
push
dec
jno
es
icebp
movsb
or
cwtl
pop
loopne
or
pop
daa
pusha
into
je
aam
call
cltd
arpl
xchg
or
std
or
fwait
and
cltd
jae,pt
pop
sahf
pop
push
xlat
cwtl
adc
sahf
add
sbb
aad
cwtl
xlat
xor
push
cmp
daa
xor
or
mov
leave
mov
or
mov
xor
int
in
mov
fsubrp
sti
int
cwtl
test
les
adc
mov
jae
scas
and
out
sbb
or
dec
ficomps
push
int3
xor
in
mov
mov
bound
jb
xorb
mov
sti
stos
lcall
shrb
jnp
test
jae
sarl
fninit
xlat
ret
jmp
or
mov
or
adc
jle
push
imul
out
ss
sbb
movsb
aaa
add
das
cltd
jge
fwait
insl
mov
cmpsb
movsl
movsb
dec
jl
mov
pushl
mov
jae
xor
leave
ss
iret
cmp
pop
divl
ds
push
or
stos
out
lcall
stc
jbe
arpl
vmwrite
lods
jb
mov
nop
push
mov
idivl
fxrstor
mov
push
fcoms
test
inc
or
xchg
scas
pop
sbb
mov
add
push
adc
das
lock
pop
outsl
testl
add
mov
or
fwait
mov
pushf
sub
mov
mov
rcrl
jb
loop
jl
fstpt
push
or
and
cmp
lahf
orl
inc
pop
pushf
jbe
adc
add
xchg
scas
data16
rcll
and
mov
mov
ficompl
sub
xchg
icebp
jbe
mov
pushf
pop
aas
xor
imul
pushf
daa
mov
shl
jl
dec
clc
int3
jae
jmp
cmp
adc
xchg
arpl
push
fdivs
pushl
push
jnp
add
pop
mov
add
ficomps
lods
and
cmp
jae
sbb
push
adc
push
cmp
pushf
lods
sub
add
daa
xor
xor
mov
pushl
int3
aad
jle
pushf
in
jmp
in
mov
lea
imul
outsb
adc
sbb
repnz
adcl
dec
popf
and
and
int
jo
punpcklbw
xor
sbb
scas
cmp
fwait
cmp
mov
jne
popf
jae
jge
out
adc
int
std
adc
aam
mov
sahf
daa
sahf
mov
sbb
mov
xor
xlat
mov
aaa
sti
adc
scas
sub
inc
and
jl
adc
adc
idivb
add
mov
push
adc
ds
pop
insb
jns
ud0
subl
icebp
adc
or
sbb
in
mov
sbb
and
dec
mov
mov
sahf
pop
inc
adc
rcr
sbb
cmp
push
lahf
dec
js
pop
adc
and
out
addr16
adc
add
mov
ret
imul
out
mov
xchg
pop
jno
xor
lcall
cmp
sahf
into
mov
pop
mov
adc
dec
rcrb
xor
dec
mov
xlat
inc
inc
push
ljmp
ljmp
ret
clc
dec
lahf
and
adc
xorb
pop
inc
fdivrs
cmp
pop
pop
arpl
pop
jge
jle
into
adc
lahf
jne
mov
jg
jbe
sub
mov
addr16
stc
adc
pushf
mov
popa
ret
mov
andl
jecxz
xchg
je
icebp
xor
sub
mov
adc
mov
arpl
dec
pop
adc
inc
jbe
idivl
into
push
and
fwait
xchg
in
cmp
iret
mov
jb
lods
daa
arpl
dec
ret
push
push
add
sbb
outsl
mov
mov
sub
inc
call
fwait
cmp
or
scas
xchg
cmp
mov
addr16
pop
and
insl
cmp
dec
rcll
sarb
mov
and
fdivrs
mov
sbb
stos
je
fidivrl
dec
adc
ljmp
push
mov
adc
jl
mov
jae
andb
jbe
sti
mov
add
fwait
sbb
movsb
pop
sub
sbb
fs
mov
insl
scas
cmp
push
ss
loope
add
sub
xchg
movsl
push
outsl
sub
shrl
jge
cmpsb
mov
adc
stos
cmp
sbb
ljmp
xlat
cmp
inc
loopne
xchg
in
push
mov
mov
push
pop
out
jne
xlat
xor
add
cmp
adc
ds
mov
sbb
arpl
xchg
daa
adc
sahf
aam
adc
mov
push
add
fdivs
pop
mov
cmp
outsb
add
push
mov
in
mov
pop
xlat
insl
stos
mov
rolb
incl
xor
sbb
scas
ret
incl
fsubs
aas
aas
je
loop
xchg
fwait
mov
ret
out
repnz
jbe
int
incl
repz
insb
aaa
jns
pop
jle
aas
inc
sbb
dec
fcomps
pusha
push
xchg
cmp
fwait
in
pop
popa
jnp
add
scas
push
sbb
push
adc
inc
cmp
je
out
insl
xor
movsb
inc
adcl
xor
movsb
pop
imul
movsb
jae
cmp
addl
inc
loopne
std
rcrb
fwait
aaa
aas
lret
dec
inc
stos
icebp
int
jnp
das
ds
dec
mov
sbb
rep
lret
mov
sub
sbb
pop
inc
mov
push
add
sti
inc
inc
cli
and
xor
push
sbb
movsb
incl
mov
xor
daa
or
pop
pop
dec
movsb
vreducess
jno
in
test
pop
mov
pop
jl
mov
mov
imul
inc
sbb
sbb
cmp
test
out
mul
or
movsl
xchg
push
inc
pushf
xchg
movsl
movsb
lods
pop
dec
or
movsl
cmp
sbb
cmp
pop
sbb
repz
hlt
or
mov
jo
dec
loopne
jmp
inc
and
insl
cmp
insb
inc
or
mov
ja
cmp
push
push
lods
push
icebp
dec
les
clc
mov
lock
js
iret
arpl
fisttpl
xchg
mov
std
test
insb
testl
outsl
lods
aad
ret
xchg
sarb
and
jge,pt
rolb
dec
jp
ljmp
xor
popa
ss
fwait
dec
mov
xchg
mov
repnz
test
mov
std
or
sahf
cmc
sbb
mov
cmpsl
xchg
lods
cmpl
mov
mov
lds
mov
imul
fwait
data16
jle
inc
insb
xchg
inc
jb
cmpsl
daa
fstpt
mov
cmpsl
xchg
nop
sbbl
sti
sbb
cmpsb
xlat
xchg
pushl
in
out
dec
jl
ljmp
sub
rcll
sbb
jno
lahf
cmpl
inc
ljmp
adc
shl
jae
xchg
sbb
jae
int3
cmp
mov
dec
pushl
push
fildll
int
addr16
ficompl
test
loopne
xchg
pop
testl
je
imul
mov
arpl
incl
jne
mov
int
ja
mov
cli
iret
dec
xchg
jp
arpl
mov
jns
nop
ja
dec
pop
icebp
and
dec
mov
sti
leave
inc
push
mov
inc
jl
lea
sbb
cli
popl
inc
sub
clc
sbb
popf
add
test
fsubrs
arpl
xor
fistpl
subl
dec
push
lock
sbb
test
out
xchg
or
or
adc
out
idivl
test
lods
xlat
sbb
mov
insl
ret
sub
test
out
mov
bound
sbb
popl
dec
scas
test
filds
jne
pusha
adc
mov
filds
add
or
in
iret
xlat
stos
add
stc
out
in
pop
cmp
jmp
out
sbb
sbb
mov
inc
push
adc
fbld
sarl
jl
mov
jp
push
out
push
mov
repnz
jbe
cld
xchg
add
jae
mov
stos
out
cmp
stos
sub
mov
cmp
cli
fbstp
adcl
rcr
push
ret
out
push
jns
xchg
pop
fsts
lods
sub
jl
jnp
pop
mov
sub
idivb
push
stos
adc
inc
dec
dec
mov
call
or
test
sub
je
add
mov
ja
mov
stos
loope
stos
pop
pop
stos
arpl
sbb
pop
arpl
stos
add
mov
add
clflush
pop
sbb
pandn
ret
push
inc
in
sti
mov
and
xor
loope
fcomps
inc
mov
pop
fildll
cld
dec
pop
popa
outsl
adc
jnp
mov
sahf
inc
negb
dec
mov
mov
adc
pushl
push
push
popf
adc
stos
inc
add
scas
in
pusha
inc
sbb
pop
push
lods
xor
cmpb
add
ss
fisubs
jne
fsubrs
call
rep
push
inc
cmp
pop
and
arpl
xor
or
adc
jge
add
push
sub
shlb
lods
fsubrs
cmpsl
lods
aas
idivb
lods
dec
push
fisttpll
dec
pop
pop
dec
mov
arpl
add
fdivl
sub
push
out
out
ret
dec
xor
add
dec
or
add
xor
lea
and
and
scas
jl
xlat
stos
and
push
sarb
addl
dec
aam
lods
clc
data16
push
push
arpl
push
idivl
xchg
jns
jo
dec
incl
jnp
lods
xorb
adc
pop
jo
addb
add
pop
in
xorb
push
mov
dec
jae
or
adc
rcrl
and
push
daa
and
je
jmp
inc
clc
lock
xchg
mov
push
std
push
lods
xchg
mov
cmpsb
mov
fcomi
add
xor
dec
sub
out
in
mov
cmp
sbb
loopne
subb
mull
add
dec
outsl
and
push
loopne
scas
add
ljmp
lds
test
sbb
sbb
xchg
sbb
sahf
and
cs
and
dec
sbb
and
iret
xor
cwtl
xchg
repnz
inc
inc
mov
fists
sbbb
push
push
jp
dec
mov
insb
shl
cmp
test
insw
pop
lock
stos
xor
out
jnp
push
aam
dec
fstps
test
out
and
scas
pop
es
dec
cmc
loopne
loope
in
jo
and
inc
and
test
lea
idivl
lea
xor
stos
mov
jae
dec
dec
out
mov
je
scas
jecxz
add
loope
dec
jp
rolb
pop
test
adc
mov
or
aaa
fdivrl
jl
mov
inc
dec
mov
inc
daa
sbb
outsl
pusha
mov
sti
jle
and
push
jno
dec
dec
ret
in
mov
pop
push
jecxz
je
fucomip
or
shll
test
mov
sbb
sbb
mov
ret
js
lret
je
cmp
xor
and
repnz
xlat
ja
idivl
out
ror
inc
popa
push
pop
stc
push
fisttpl
add
mov
adc
dec
repnz
pop
add
adc
out
aad
lret
mov
jle
jo
adc
sub
mov
push
and
lcall
cmp
cmp
shlb
mov
insb
jmp
xchg
mov
mov
and
jnp
pushl
pop
inc
int3
sub
push
sbb
out
arpl
mov
div
mov
cmp
fldl
loop
dec
mov
in
out
repz
fucomp
fsubs
sbb
jae
js
xchg
sub
insb
sbb
and
test
imul
fidivs
scas
dec
adc
push
adc
push
testb
or
add
jns
mov
ficoms
ljmp
xchg
es
lahf
rorl
jl
or
mov
es
insb
push
roll
mov
dec
lahf
xchg
sti
jle
mov
fsubl
lods
daa
ficoml
mov
out
shll
jae
movsb
scas
add
dec
roll
sbb
pandn
mull
or
dec
jl
sbb
mov
xchg
xor
inc
dec
cmp
loop
mov
xchg
es
mov
push
jle
pop
dec
ret
int3
add
jne
lret
test
fwait
add
mov
and
sub
clc
jbe
mov
and
bound
jmp
or
decl
sbb
adc
mov
mov
arpl
push
cmp
xor
ds
mov
add
adc
fdivs
aas
int3
aad
pop
roll
aam
fs
mov
sti
mov
jae
pop
imul
int
push
scas
es
xlat
dec
arpl
jle
mov
and
dec
inc
xlat
daa
dec
mov
mov
adc
xor
dec
ret
insb
xchg
push
fwait
in
and
fdivrs
out
sti
sti
push
push
inc
jecxz
pushl
pop
daa
out
cli
mov
lods
mov
mov
lahf
adc
adc
out
cmp
pop
push
pop
inc
sub
push
cmpsb
lds
rorb
cmp
lock
icebp
rcrb
sub
mov
sti
mov
bound
mov
sbb
bound
in
aam
jge
push
xlat
cs
cmp
fdivr
inc
sub
cmp
addr16
xchg
pop
push
dec
cmp
cmp
mov
lret
add
sbb
pushl
test
aad
mov
mov
dec
sbb
and
mov
lahf
sub
insb
imul
xchg
shll
ljmp
xor
mov
pop
mov
jl
mov
mov
xor
jbe
fadd
push
or
or
testb
sub
fbld
mov
mov
adc
mov
aad
sub
sub
ret
divps
push
data16
call
push
fwait
mov
push
push
lea
jbe
daa
push
out
mov
sti
cli
imul
mov
sub
adc
mov
push
call
jbe
ja
xlat
lods
mov
sub
je
bswap
call
dec
mov
shrl
xchg
sub
push
or
js
sub
pop
fucomi
es
sub
mov
add
je
fisttpll
cmp
inc
sti
subb
jae
and
inc
fisubrl
xor
fisubl
stos
imul
popa
jl
ja
movsb
iret
sub
mov
fwait
lea
push
and
orl
push
mov
in
mov
gs
repz
lret
push
shll
mov
aas
mov
jge
pop
dec
mov
fwait
cli
pop
out
aaa
sub
dec
loope
push
push
iret
je
xchg
adc
pop
je
arpl
insb
pop
aam
xlat
cmpsb
pushl
outsb
ret
adcb
push
push
fwait
mov
mov
jbe
mov
sbb
push
push
mov
negl
mov
add
mov
add
movsl
sub
scas
adc
testb
call
sub
lods
dec
mov
jge
fcomip
and
idivb
arpl
xor
dec
ljmp
mov
ficomps
add
or
xchg
pop
adc
lds
sub
dec
mov
pop
imul
cmp
and
rcll
dec
gs
jl
or
out
fwait
or
das
inc
mov
xchg
in
ds
jmp
push
pmaxub
and
push
sub
pop
rorl
fistpll
push
jae
pop
mov
push
daa
negl
cmpsb
aaa
ret
std
and
imul
mov
push
outsl
and
sub
adc
cmpb
andl
pop
inc
mov
cli
jecxz,pt
mov
cs
dec
insb
shr
mull
fbld
mov
cmp
pop
cmpb
mov
mov
push
lret
mov
cs
mov
jae
lds
mov
mov
dec
daa
mov
mov
mov
in
jg
xchg
jbe
notb
add
push
into
por
jle
mov
fcmovnu
std
mulb
jle
xchg
xchg
xlat
js
daa
js
xlat
ret
fildll
call
push
cs
lea
jns
pop
dec
mov
mov
pop
dec
loopne
std
loopne
gs
push
mull
arpl
jge
mov
sub
jl
mov
pop
push
fwait
cli
lds
xor
insl
mov
jge
outsl
in
mov
loope
out
ret
lock
clc
shll
imul
cwtd
sbbb
xchg
loopne
fistps
repnz
addl
cmp
xor
pop
push
ja
cmp
out
cmpsb
ds
pop
add
es
mov
pusha
cltd
das
sbb
das
fwait
mov
rcr
mov
cmp
lea
bound
das
clc
test
push
mov
add
fidivs
pop
ljmp
cmp
lds
xor
pop
cmpsb
es
sarl
daa
in
sti
push
adc
sub
leave
and
popa
adc
add
push
pop
lcall
pop
push
jecxz
fidivrs
sbb
pop
jbe
add
xchg
sbb
or
dec
clc
pop
pushf
out
mov
dec
out
cmp
std
push
pop
mov
cmp
mov
push
fcoms
and
pop
cmp
loop
shl
xor
imul
xor
sub
out
pop
sbb
and
xor
sbb
sub
mov
inc
aaa
cmp
fstpl
in
and
xor
loop
mov
inc
mov
or
mov
pop
adc
or
or
mov
xor
jno
sub
xlat
mov
jge
mov
mov
pop
mov
xlat
jo
decl
je
xchg
cmp
push
jae
mov
adc
ljmp
cld
cmp
jle
mov
arpl
cmp
out
arpl
xchg
dec
clc
xor
pushf
adc
pop
arpl
in
push
xor
pop
pop
loope
cmp
sub
imul
pop
test
jne
jne
jp
mov
call
mov
mov
xchg
push
pop
cmp
pop
adc
sti
fidivs
cmc
xor
bound
dec
cmp
mov
test
mov
aad
outsl
mov
adc
xor
xor
xlat
add
notl
fs
jae
sti
pop
jo
popf
outsl
mov
mov
sub
mov
xor
pushl
xor
daa
pop
ret
cmpsl
call
mov
mov
jae
xor
sub
bound
lcall
jae
sbb
and
mov
add
clc
es
pop
adc
movsl
sbb
ret
loopne
in
fwait
les
dec
bound
arpl
ja
int
rcrb
dec
rcrl
sti
lock
in
sahf
mov
lds
arpl
xor
mov
psraw
std
xorb
xor
imul
daa
pop
fwait
push
fcompl
rolb
mov
lods
xchg
lds
pop
imul
out
jmp
push
pop
adc
lods
sbb
push
xchg
pop
mov
movsb
jne
test
mov
inc
sbb
xor
xor
and
pop
insl
xor
sti
push
jnp
push
jne
pop
je
cmp
mov
mov
push
outsl
shr
lods
minps
or
fistpl
sub
test
outsb
ret
ss
sbb
dec
ss
clc
mov
xor
xor
pop
int3
sarl
shl
xor
fnsave
mov
pop
inc
stc
ret
inc
ss
cmp
or
scas
jnp
pop
cmp
xchg
nop
push
loope
adc
xor
data16
daa
cmp
pop
inc
cmp
pop
pop
fistpll
sbb
mov
gs
jbe
jmp
pop
or
push
addl
pop
daa
adc
push
hlt
ret
ss
mov
ss
mov
or
pop
ret
movsl
ret
out
ret
mov
lods
mov
pop
fidivrs
ss
add
adcb
std
iret
ret
scas
lock
adc
inc
lahf
call
and
dec
std
ret
sub
ret
xor
ja
fcoms
movsl
lret
insl
ficompl
leave
repz
in
fimuls
lods
inc
in
mov
lahf
sub
cmp
clc
scas
ret
mov
pop
out
icebp
mov
cltd
pop
mov
xchg
inc
xchg
jecxz
lcall
jo
xchg
inc
rcr
and
out
in
cmc
cmp
jmp
inc
mov
imul
xlat
js
cli
pop
push
cmpb
cli
sahf
les
push
ret
jmp
push
pop
inc
and
jl
fcmovnu
mov
pusha
das
push
dec
pop
les
std
ss
sbb
stos
pop
jns
arpl
jle
aaa
jg
les
pusha
fs
mov
sti
rcl
mov
pop
xlat
daa
adc
mov
pusha
mov
ret
les
out
cmp
test
xchg
fsubs
cmp
testb
lcall
jecxz
cli
loopne
add
pushf
test
gs
adc
xlat
fwait
dec
jle
adc
mov
pusha
sub
xchg
xor
sub
aam
je,pt
sbb
push
and
idivl
pusha
arpl
decl
jbe
lds
mov
popa
incl
sbb
add
arpl
and
out
or
adc
mov
incl
jmp
add
repnz
add
mov
dec
add
sti
add
cli
fiadds
inc
add
mov
je
sti
dec
sub
arpl
add
add
mov
push
add
decb
outsl
add
mov
add
sub
out
pop
outsb
fildll
jnp
add
add
mov
ds
xor
xor
insb
inc
push
push
ljmp
rolb
dec
call
aaa
sub
stc
and
fidivrs
std
add
mov
repz
jg
jno
inc
jo
in
movsb
repz
add
mov
das
xor
std
out
push
mov
and
ljmp
sbb
cmpsb
idivl
add
fiaddl
into
add
jge
xlat
sub
add
dec
test
sub
ljmp
je
jae
iret
ret
xchg
imul
add
xor
loope
pop
and
data16
divb
rorl
inc
outsb
dec
jnp
sbbl
sbb
or
cmp
inc
pop
dec
xchg
dec
out
outsl
aas
or
push
fistl
xchg
das
call
ret
test
mov
push
out
stos
mov
je
push
sbb
mov
test
sbb
test
jb
pop
sbb
mov
pop
decb
lea
neg
scas
outsl
call
pop
sbb
xchg
sub
nop
dec
iret
or
adc
lods
jmp
les
jne
pop
mov
xchg
inc
stos
or
enter
addl
xor
mov
mov
aad
test
mov
sbb
push
shlb
sub
call
je
inc
mov
cmp
and
inc
and
imul
out
andb
jb
js
jo
pop
loopne
ret
inc
jecxz
jecxz
add
outsl
adc
outsl
mov
cmp
test
fsubrp
adc
and
insl
sti
inc
or
leave
adc
insb
inc
or
cmovb
and
push
pop
adcl
jg
lods
push
add
fbld
fs
mov
clc
dec
dec
push
jl
push
pop
inc
or
je
adc
dec
decl
je
adc
push
jl
arpl
or
call
in
xchg
xchg
pop
lods
ret
lea
adc
cmpsl
and
or
nop
and
add
or
push
push
mov
bound
or
in
in
inc
cmc
test
inc
sbb
call
cmc
cs
pushl
adc
add
dec
or
dec
jne
add
jno
sub
decl
jo
jge
enter
call
and
dec
pop
shr
das
cld
pop
push
or
adc
mov
das
hlt
in
inc
out
xor
inc
cli
sbb
push
cmp
sub
mov
or
xchg
inc
mov
xchg
mov
dec
shrl
push
and
ret
std
pop
call
lret
aaa
jne
xlat
cmp
xor
xor
idiv
insl
loop
leave
inc
add
fwait
and
and
ja
pop
jns
or
or
movl
mov
outsb
ljmp
sub
or
movsl
shrb
call
pop
clc
lods
mov
es
push
sub
or
add
adc
jg
pop
pusha
add
rcll
test
idivl
jne
mov
inc
xor
cmp
pop
mov
mov
pop
push
sbb
and
pushl
sub
jle
into
je
jg
enter
mov
sbb
aam
jbe
cmp
outsb
jle
mov
cld
jle
sub
fmull
mov
aam
push
call
pop
fsubs
push
pop
arpl
nop
dec
outsl
stos
mov
pop
call
adc
or
lock
push
pop
inc
int3
sub
lahf
test
inc
mov
insl
repnz
imul
cltd
outsl
inc
dec
xchg
jno
sbb
outsl
or
insb
and
xchg
fiaddl
outsb
test
test
pop
cwtl
jno
cmp
or
loop
fcomip
cmp
adc
push
sti
and
add
das
dec
je
inc
shlb
xchg
jne
inc
xchg
cmp
das
ret
hlt
shrl
inc
sbb
lret
sbb
rcrl
ljmp
adc
add
add
sti
add
jbe
sbb
js
inc
cmpsb
jne
xor
add
ret
or
sbb
leave
in
add
and
jg
mov
test
inc
mov
ljmp
mov
sahf
mov
sub
call
icebp
sbb
add
adc
and
shll
push
stos
mov
lea
into
jnp
fs
out
sbb
iret
inc
inc
lret
inc
xchg
add
ret
mov
int
mov
test
or
sub
loop
push
push
add
fidivs
mov
popa
jo
daa
or
nop
xchg
loopne
inc
jmp
enter
jbe
adc
icebp
in
out
xchg
in
push
cwtl
inc
jae
outsb
and
and
dec
push
adc
sarb
shrl
or
mov
cmp
or
sub
inc
fbstp
and
cld
dec
jns
ss
clc
das
mov
adc
jbe
jo
and
call
xchg
mov
mov
movsb
cli
ret
inc
js
lcall
and
scas
xchg
xor
mov
fdivrl
fxch
inc
xor
xchg
gs
divb
inc
fwait
push
and
shlb
pushf
mov
cmp
adc
outsb
inc
movsl
loope
fwait
push
sbb
add
in
pushl
call
push
cld
xacquire
mov
incl
push
nop
call
inc
cmp
cmovbe
push
mov
or
adc
add
jmp
inc
xor
adc
jmp
cltd
mov
mov
and
mov
fists
icebp
or
xlat
or
adc
and
inc
and
jg
jp
mov
ret
inc
je
xchg
and
inc
outsl
adc
jecxz
outsl
in
jecxz
inc
fwait
imul
rolb
jae
mov
out
cmp
add
shll
js
xchg
test
adc
das
std
mov
adc
or
test
aas
dec
arpl
adc
ja
mov
bound
loope
adc
movsl
pop
lods
ret
jns
sub
sbb
dec
add
cmpsl
movb
adc
lea
js
insb
inc
inc
jge
inc
inc
sarl
incl
add
dec
hlt
je
cwtl
loope
out
mov
mov
pop
sub
aam
sub
mov
cld
inc
das
xchg
dec
pop
in
fs
sub
je
enter
rcrb
or
and
flds
addb
orl
push
or
jl
mov
jbe
pop
rorb
push
mov
push
cld
pop
add
xor
mov
mov
pop
xchg
adc
mov
adc
sub
or
xchg
rcrl
out
mov
xchg
cwtl
pop
loope
outsl
mov
lods
pop
sub
inc
jge
aaa
jle
popa
and
pop
adc
jl
push
hlt
push
in
push
stc
aam
inc
and
mov
cmc
jg
or
and
ds
or
nop
shrl
mov
mov
pop
js
add
adc
jl
push
insb
insl
bound
sub
repz
or
sahf
adc
adc
call
dec
gs
add
or
dec
popa
sbb
jge
adc
lcall
xor
mov
mov
lock
popf
fwait
xor
je
and
inc
mov
fdivl
push
fwait
inc
inc
std
or
cmp
mov
jge
imul
in
inc
xor
and
popf
and
loopne
addl
xor
jecxz
push
call
xchg
lock
adc
shr
or
pop
adc
and
es
and
jmp
incl
out
adc
mov
inc
imul
inc
xorl
in
lock
hlt
imul
loopne
cs
xor
shll
sbb
sahf
adc
jno
inc
dec
aam
sbb
fildll
jo
adc
push
mov
pop
push
call
insb
xor
js
inc
cmp
xor
xchg
mov
loopne
insb
cmc
lcall
dec
and
jae
scas
je
out
aas
out
fcmovnu
mov
sbb
test
xchg
bound
pop
push
out
movl
pop
and
inc
call
adc
rcrb
cmpsb
insl
pop
loop
pop
or
fwait
add
dec
inc
mov
xchg
ljmp
mov
test
testb
das
ss
mov
stc
loope
mov
mov
cmp
jle
movsb
xor
jo
stos
dec
mov
pop
std
lock
hlt
cmpsb
and
add
lods
or
popf
lds
inc
adc
arpl
call
pusha
test
sub
outsb
mov
fldenv
lcall
push
daa
mov
imul
sbbl
and
and
in
fwait
push
scas
push
aaa
loopne
fcomi
xorb
jbe
cs
bound
or
outsl
pop
cli
mov
push
cli
fs
mov
push
xchg
call
pop
outsl
das
cld
ret
mov
jle
inc
movsb
into
mov
adc
pop
push
mov
call
in
fnstsw
outsl
push
lret
and
cmpl
push
sbb
test
xchg
and
xchg
adc
or
ret
pop
mov
pop
xlat
call
cmpsb
mov
outsb
sbb
mov
mov
and
loopne
rcrb
in
pop
pop
getsec
stos
mov
jnp
cmpsb
je
and
add
imul
testb
shrb
or
cld
out
or
aaa
mov
jecxz
inc
into
loopne
lock
cmpsb
pop
mov
fcmovnbe
or
js
xor
xchg
lods
sub
pop
mov
insb
add
or
pusha
add
adc
push
adc
fldl
sub
jne
fidivrs
das
add
sub
ret
and
adc
in
loop
push
call
or
adc
arpl
xchg
movsl
fcomp
insb
or
or
into
out
jno
mov
and
push
sbb
pop
cs
and
test
cld
scas
mov
call
xor
jb
lock
mov
loope
jg
data16
inc
cmp
sbb
je
mov
int3
movsb
push
aaa
push
cld
aaa
inc
adc
adc
nop
cwtl
add
fnstsw
lods
lahf
bound
mov
adc
mov
lahf
pop
xorl
ljmp
mov
sub
mov
stos
ffree
out
mov
in
fs
int3
inc
nop
ss
push
inc
jge
inc
xchg
inc
aaa
aam
inc
push
mov
add
fsubl
mov
inc
loope
lods
cmc
inc
data16
cwtl
mov
sbbl
or
or
ds
cli
cmp
in
jg
fstp
call
mov
pushf
push
adc
call
fdiv
push
jg
jecxz
imul
imul
rolb
mov
jmp
test
pop
mov
das
cmp
add
in
aaa
pop
mov
je
add
daa
push
lcall
or
scas
test
loop
xchg
std
jge
adc
jp
insl
xchg
fdivr
pop
sti
adc
jae
test
push
cmc
and
popf
test
xchg
lea
adc
cmc
mov
jne
out
xor
pop
aaa
pop
mov
loope
push
jbe
sbb
scas
jo
in
ja
adc
push
aas
pop
popa
mov
pushf
or
fs
xchg
out
cmp
jno
sbb
pop
test
nop
les
imul
icebp
or
je
leave
inc
and
fists
decl
cmp
inc
jne
push
sbb
inc
notb
xchg
popa
xchg
clc
jnp
xor
inc
mov
xor
push
push
addl
outsl
aas
in
pushf
mov
enter
hlt
pop
cmp
jns
lret
sub
inc
or
stc
sbb
pop
call
test
pop
test
sti
das
jge
or
lret
inc
inc
andb
sbb
or
shlb
ret
inc
push
inc
push
outsl
push
adc
vpsrld
and
les
cwtl
out
dec
inc
and
cmp
inc
decl
inc
jae
and
adc
and
adc
orl
es
jmp
cmc
pop
xchg
sub
add
mov
mov
test
cmp
push
add
sbb
daa
sbb
adc
mov
or
cmp
movsb
mov
sub
fcoml
lods
inc
sub
jl
and
fwait
idiv
lods
rol
or
imul
stos
jg
sbb
jg
idiv
je
sub
lea
repnz
sbb
xchg
jl
push
pop
incb
jnp
or
adc
dec
adc
pusha
sti
test
jne
shl
jne
mov
cmp
ljmp
movsl
xor
sub
xchg
mov
je
jp
xor
or
pop
in
cmp
and
mov
fldcw
cli
nop
loopne
jg
pop
outsb
add
pop
jo
fbld
aas
xchg
stc
inc
aaa
jbe
and
addb
pop
fstpt
sbb
mov
add
lcall
rolb
inc
adc
movsb
orb
mov
je
jb
add
cmp
ret
dec
shl
xchg
mov
insb
jne
gs
inc
mov
pushw
pushf
mov
xor
test
inc
add
insl
data16
stos
xor
push
clc
cmp
xchg
push
mov
enter
dec
jle
mov
and
or
js
jo
adc
lret
mov
mov
adc
and
mov
cli
jo
and
jmp
push
inc
aad
ljmp
xlat
stc
mov
pop
test
xorl
enter
xor
inc
fbstp
or
pop
or
add
std
test
fs
cmp
ja
je
pop
push
into
nop
mov
xor
call
cli
or
sbb
push
cmp
and
loopne
mov
mov
in
jg
inc
inc
jmp
in
cltd
mov
sti
sub
xchg
push
xchg
or
adcl
jo
and
jno
cmp
sub
or
push
mov
movsl
ds
xchg
adc
lock
fidivrl
or
push
dec
mov
das
mov
sub
push
sbb
push
rcrl
cs
in
divb
outsl
or
clc
mov
decb
add
jne
xlat
push
mov
testb
xchg
jae
bound
pusha
adc
jno
inc
jg
cld
push
lea
jle
mov
ret
cwtl
lods
je
push
in
inc
inc
push
mov
hlt
orb
testl
mov
mov
or
enter
test
sub
aam
mov
push
sahf
inc
fstpt
jp
lret
sbb
lock
aaa
sbb
adc
aaa
push
jno
adc
in
mov
lods
inc
pcmpeqb
pop
push
xchg
dec
lock
movsl
ljmp
pop
in
and
push
sahf
lret
dec
xor
sbb
mov
test
aaa
push
outsl
and
pushf
jae
adc
inc
jmp
call
in
cmpb
add
or
stc
push
push
mov
loop
adcb
cli
or
ds
inc
out
or
pop
cld
xor
or
sub
fcomi
inc
aad
insb
outsl
mov
cld
adc
icebp
jle
xchg
lock
xor
xor
fsubs
cmp
int3
repnz
std
cmc
inc
jg
rcr
mov
das
lock
testb
aaa
mov
cltd
cmpb
fists
out
jle
jno
xchg
stos
xchg
orb
dec
clc
push
loopne
testb
bound
test
je
pop
je
push
outsl
inc
sbb
cmp
add
or
dec
mov
push
mov
shlb
or
mov
xlat
aaa
jno
inc
adc
add
inc
inc
aam
sbb
adc
inc
outsl
inc
test
push
outsl
lods
lret
divb
mov
mov
push
push
pop
or
faddl
mov
sti
add
mov
adc
xor
push
popa
sub
and
outsb
icebp
sbb
addr16
rcrb
fmull
push
sbb
and
sbb
bound
jo
fistpl
insl
mov
xor
pop
push
nop
out
cltd
pusha
outsb
cld
lods
push
arpl
push
std
loopne
dec
push
mov
hlt
pop
sbb
arpl
xorl
jo,pt
iret
in
xchg
stos
mov
or
inc
and
loop
inc
lock
inc
mov
pop
push
jne
inc
ret
cmpsb
sbb
xlat
mov
aas
push
add
mov
jmp
cld
sbb
xchg
or
data16
add
xchg
jbe
sbb
cld
push
mov
test
hlt
pop
sub
jg
insl
xorl
scas
out
mov
loope
cs
cmp
jle
adc
sti
adc
xorb
sbb
xor
rclb
sbb
inc
cmpsb
push
or
xor
mov
enter
insb
lods
mov
jge
pusha
sti
or
aam
or
or
xlat
mov
inc
adc
and
jb
loopne
enter
mov
sub
pop
or
fs
inc
sub
je
mov
xlat
pop
mov
mov
dec
insl
inc
push
shr
loopne
inc
insl
sbb
repz
or
in
adc
je
enter
fidivl
adc
fidivrl
dec
add
fcmovnb
rorl
push
jmp
or
adc
xor
jnp
jo
xor
jl
push
push
fs
jmp
ss
push
jne
daa
jns
sti
das
icebp
adc
mov
call
fisubrl
cld
lea
cmpxchg
outsl
in
lea
sub
arpl
push
cld
data16
mov
cmp
adc
imul
ret
sub
inc
pop
mov
orl
imul
and
mov
leave
js
loop
into
push
out
rcr
outsb
push
push
push
outsb
jp
in
or
call
ljmp
mov
call
or
push
inc
call
mov
pop
call
sbb
mov
fdivs
lahf
push
jg
call
decl
xchg
mov
dec
jbe
hlt
sbb
test
mov
push
mov
push
lods
cmp
ds
mov
mov
incl
in
sbb
mov
shrl
inc
xchg
cwtl
cmpsl
sbb
jbe
rorl
cmp
les
sub
hlt
xor
pushf
adc
testb
roll
cltd
pop
call
loopne
inc
fsubp
mov
addl
sbb
ds
movb
je
sbb
out
jmp
push
in
and
es
xor
je
sub
insl
movsl
subb
jbe
jo
outsl
outsl
dec
cmp
xchg
aad
leave
cmpsb
xchg
mov
or
je
fistpll
rcrl
cmpsb
cmp
imul
decb
dec
inc
sub
xor
loopne
inc
push
cs
xor
daa
dec
cld
pop
mov
mov
lret
ss
pmaxub
mov
dec
mov
movsb
xchg
adc
mov
add
adc
adcl
or
test
into
orl
pop
lret
pop
xchg
sbb
xor
inc
adcb
pop
stos
push
cmpsb
or
aad
or
fwait
sti
and
dec
mov
ljmp
mov
jbe
adc
jl
aaa
mov
mov
out
jno
mov
inc
imul
xchg
push
or
dec
inc
ret
xchg
xor
test
aad
loopne
pop
js
adc
cmp
mov
aaa
jle
lea
pop
adc
inc
nop
ret
sub
pop
cltd
jle
out
mov
xchg
inc
lret
jl
outsb
lods
je
or
loop
pop
mov
inc
xor
mov
inc
dec
filds
push
add
mov
jmp
jle
push
and
inc
cmp
mov
or
sbb
mov
aad
jmp
inc
sub
push
outsl
mov
aas
mov
cmc
pop
mov
mov
in
adc
push
out
shlb
and
pop
add
fcmovbe
les
out
insl
imull
jg
mov
or
xor
xchg
and
inc
cmp
adc
test
ficomps
xlat
data16
jb
int
rcr
dec
cmc
adc
je
std
pop
fcoms
testl
pop
or
cmp
pop
das
mov
cmp
jbe
push
adc
pop
addb
roll
int3
call
mov
outsl
push
sbb
mov
jle
inc
rorl
mov
movsl
inc
lahf
fimuls
jbe
sbb
es
mov
call
je
or
xor
lcall
jb
mov
insb
sarl
pop
fcoml
jbe
adc
lods
je
inc
or
fsubrp
stos
outsl
inc
call
dec
leave
mov
loope
jg
or
push
push
inc
adc
jp
mov
out
fwait
insb
cmp
lock
mov
push
mov
pop
inc
pop
inc
or
pop
inc
or
subl
pop
out
adc
or
xchg
lcall
inc
add
test
dec
loope
imul
or
sub
or
inc
scas
daa
or
jno
cmp
mov
mov
shl
mov
mov
xor
jmp
ss
mov
push
sbb
in
outsb
addr16
fldt
int3
mov
and
out
ljmp
add
pop
cwtl
dec
or
inc
idiv
jbe
xchg
sub
mov
mov
add
jp
dec
adc
loope
pop
shr
pushl
test
pop
adc
adc
arpl
sti
ret
push
jb
je
lds
mov
push
cmp
inc
arpl
leave
and
inc
push
jl
repnz
lcall
repnz
test
stos
or
jmp
mov
sbb
mov
jnp
or
mov
ficoml
es
pushl
mov
lahf
jno
cmp
jnp
add
ret
or
mov
sub
fisubrs
push
aam
lcall
inc
adc
adc
lock
lret
nop
inc
mov
pop
mov
sub
mov
mov
sbb
sub
adc
jp
shlb
ficoms
repz
dec
mov
or
test
or
insl
jnp
js
rcrl
mov
xchg
lahf
push
shrl
test
shrb
cmpsb
shlb
fistpl
fdivrp
in
nop
pop
mov
aad
and
xchg
ljmp
dec
cmpsb
std
ret
in
out
xor
outsb
and
add
and
test
inc
mov
xchg
or
sub
les
ja
push
or
inc
insl
lods
pop
bound
or
ret
pop
xchg
testl
fldl
sub
mov
mov
orb
cs
adcb
mov
imul
push
and
fwait
xchg
stos
adc
xchg
add
es
test
stos
xchg
jo
stc
jl
aas
jo
insb
mov
jge
adc
or
sub
dec
outsl
xor
scas
inc
inc
insl
call
pop
pop
fstl
lcall
add
or
jo
ds
daa
xchg
push
mov
push
lods
push
and
loope
jge
in
aaa
cld
inc
xchg
mov
push
mov
nop
ds
cld
shlb
mov
std
iret
push
jge
sbb
jg
adcl
fdivl
mov
js
call
xor
xchg
push
and
pop
push
lahf
jmp
sti
and
ret
shlb
fs
cld
incl
arpl
iret
adc
clc
pop
sbb
or
cmp
or
ljmp
pop
ljmp
lcall
sbb
xor
outsb
daa
popf
dec
and
aam
inc
iret
mov
aam
ret
jo
insb
add
lds
cmp
mov
and
jecxz
lock
fcomps
push
dec
pop
loopne
or
mov
idivl
mov
push
rcl
lea
jle
ret
sbb
and
imul
dec
xor
mov
push
xchg
sub
inc
mov
rorb
loop
data16
xchg
je
pushf
add
dec
xor
pop
jno
or
mov
mov
ret
cmp
cmpsb
lahf
xchg
mov
icebp
mov
mov
push
push
subl
shll
pop
or
fnstcw
push
test
pop
mov
adc
in
sub
jb
jge
in
dec
jmp
pusha
mov
out
pop
je
push
mov
xchg
stos
mov
cmp
jne
repz
aad
jg
divb
adc
xchg
lea
cmp
call
cmc
xchg
test
or
outsl
loopne
popf
xor
into
inc
ret
test
shrb
mov
push
repz
jle
and
jns
sub
adc
sbb
mov
mov
sub
ret
jl
in
sbb
xchg
fldenv
out
loop
inc
sbb
je
clc
mov
inc
or
dec
nopl
inc
or
or
cmp
lret
dec
pop
and
add
xchg
ficoms
adc
fcompl
push
pop
fstpt
incb
cmp
push
jecxz
mov
mov
mov
lahf
cwtl
lods
and
cmc
lods
cmpl
jmp
jne
dec
mov
call
sub
test
out
fildll
outsb
and
out
push
jnp
fs
jns
fsubr
or
jl
push
fcomps
adc
sbb
and
add
or
mov
sbb
aam
pushf
repz
in
add
or
add
stos
sbb
lock
dec
fstpt
adc
movsl
js
pop
jle
push
dec
jecxz
cmp
push
jmp
js
lea
and
pop
adc
sub
inc
mov
in
mov
lods
outsl
test
adc
cmp
adc
pop
push
arpl
mov
push
ret
roll
lock
or
jecxz
je
inc
stc
xorb
sbbl
push
and
jp
jl
mov
les
adc
add
dec
dec
pop
icebp
xchg
adc
xchg
mov
cmp
or
cmpsb
inc
or
sub
rorb
xor
sbb
cld
sbb
or
or
push
cltd
sbb
pop
xchg
add
ret
jl
adc
aas
cmc
pop
ret
sti
or
sub
or
jecxz
lcall
pop
fcoml
mov
and
add
push
cld
je
push
push
jo
rcll
out
das
aaa
inc
mov
mov
aam
mov
push
test
add
rclb
rcrb
pop
out
push
std
test
sahf
fs
lock
das
or
and
call
shr
pop
xor
xor
addb
outsb
insb
dec
cld
pusha
mov
fcmovnbe
ret
xor
loop
mov
roll
mov
in
cmc
lcall
cmc
fildll
and
push
shlb
movsl
je
in
xor
mov
or
daa
test
adc
push
push
and
stos
mov
ss
insl
adc
sbb
jp
int3
shlb
mov
stc
pop
xor
pop
mov
movsb
sub
ds
sbbl
insb
mov
cmp
adc
mov
into
sub
xor
movsl
fsubrl
inc
cmp
xor
pop
fbstp
jo
jmp
dec
xor
loopne
es
loop
jns
mov
or
call
jg
je
dec
sarb
adc
daa
je
insl
jge
jbe
daa
xchg
scas
pop
jns
stos
xor
dec
pop
jae
mov
and
shrb
hlt
xor
loopne
inc
dec
dec
or
jecxz
mov
jle
sub
mov
lods
mov
aaa
push
sub
jge
loope
call
xor
mov
or
jno
dec
jno
xchg
leave
ss
jmp
lods
jle,pn
inc
inc
xor
mov
and
push
lock
ss
cmp
push
push
mov
cs
orb
sub
clc
or
fsubr
lahf
ljmp
push
mov
clc
pop
push
sub
cmp
push
out
outsl
xchg
push
add
adc
loop
jne
cmc
add
lea
adc
jb
or
das
aam
mov
or
mov
jle
in
mov
cld
fistpll
jno
push
xor
fistl
pop
call
xchg
mov
lods
call
jmp
das
shlb
push
and
daa
adcl
ljmp
outsl
xor
clc
jp
inc
mov
mov
inc
mov
imulb
rol
outsl
sbb
or
sub
int
cmp
mov
fistpl
xor
adc
jg
outsl
cmp
andb
bnd
call
xor
or
std
push
shr
lods
xchg
test
sub
test
mov
insb
rorl
xchg
les
sub
push
adc
mov
mov
and
or
aaa
andb
sti
push
adc
decl
push
adc
das
data16
call
fisubrl
or
mov
add
pop
pop
or
push
mov
cmpsb
or
sbb
mov
test
cltd
clc
cmpsl
xchg
outsl
cwtl
lock
cmp
insb
mov
imul
stos
std
out
lods
outsl
clc
pop
inc
std
test
ja
adc
jo
out
movsb
mov
decb
rcll
mov
dec
sti
fistl
test
cwtl
xor
push
mov
std
sub
repnz
std
sbb
dec
adc
loope
outsb
inc
mov
jnp
inc
push
ret
cli
mov
inc
add
jl
cmpsl
mov
pop
rolb
mov
out
jmp
fwait
push
mov
jl
or
xchg
xchg
sub
fwait
je
mov
cli
sub
mov
cwtl
sub
add
add
jecxz
in
pop
and
xchg
xchg
fistpll
enter
inc
clc
and
je
fcoml
xchg
pushl
push
mov
das
aam
push
cmp
dec
test
push
in
or
push
inc
jnp
sub
les
lahf
cwtl
iret
jbe
add
cmpl
push
push
jg
or
ljmp
pop
in
or
sub
mov
lea
add
sbb
jmp
and
es
lret
mov
jecxz
mov
lods
clc
cmp
aam
pop
and
xor
mov
roll
rcrb
jge
sbb
call
add
popl
xchg
sbb
loop
xor
xor
scas
inc
adc
and
sti
test
add
mov
je
mov
add
add
sub
aaa
cmc
mov
je
std
dec
scas
cmpsl
clc
jge
call
adc
or
sub
lock
test
movsb
mov
testl
loopne
dec
xchg
mov
mov
lods
jnp
inc
mov
inc
jo
xchg
inc
hlt
pop
jne
inc
jge
ficoml
mov
and
ret
xchg
cmp
jp
mov
adc
cmp
push
sbb
mov
sbb
sub
adc
sbb
lods
ds
outsb
fcomip
jle
adc
mov
inc
cwtl
pop
movsw
fmuls
xor
mov
push
imul
insl
sti
rolb
jmp
jno
xor
inc
jle
insb
jle
or
das
fadds
and
push
adc
dec
sub
in
inc
ret
sar
inc
lahf
pop
and
dec
adc
sti
inc
movsb
popa
imul
pop
cld
outsl
lock
mov
leave
mov
inc
or
cmp
adc
scas
jo
inc
inc
je
and
je
jbe
and
je
adc
pusha
mov
and
iret
idiv
jnp
daa
add
and
pushl
push
popf
popa
mov
lcall
cmc
pop
or
or
cld
and
xchg
pop
and
mov
divb
loope
cmpsb
and
jg
clc
mov
sbb
fisubl
int
ret
in
sbbb
outsl
jg
pop
sarl
sti
jl
inc
out
adc
stos
lock
add
movsb
mov
pop
xor
shr
sbb
sbb
fneni(8087
inc
cli
adc
fldcw
jb
fldcw
inc
mov
dec
xor
movsl
stc
adc
adc
sub
lret
and
adc
outsb
loopne
adc
jmp
bound
dec
jns
cmp
out
pop
push
add
xor
jmp
inc
jne,pt
xchg
inc
push
in
add
int
mov
push
mov
gs
dec
push
mov
and
loop
mov
out
repnz
clc
sub
dec
or
cmp
pop
jns
adc
mov
mov
and
or
je
xor
xchg
push
pop
insb
lea
xchg
adc
and
fcmovbe
push
outsb
out
adc
pop
mov
mov
fstl
lods
mov
lods
aad
test
or
mov
in
sub
frstor
or
loop
add
mov
pop
lahf
push
mov
fwait
mov
inc
les
js
mov
arpl
popa
pop
hlt
addb
testl
mov
sub
lods
insl
jecxz
daa
pusha
push
and
xor
pop
outsb
insb
std
push
je
and
push
je
aas
shll
int
cmp
dec
in
xor
clc
into
mov
outsb
lea
add
stc
lods
cmp
std
push
mov
fistl
or
push
dec
out
sti
movsb
or
pop
inc
test
jmp
jle
arpl
test
sub
cld
andl
clc
push
inc
popf
inc
xor
clc
in
mov
int
jecxz
je
or
and
pop
fildl
iret
add
or
aaa
stos
xchg
incb
pop
mov
popa
jmp
and
mov
imul
push
mov
popa
sub
jne
imul
mov
sbb
cmpb
dec
aas
pop
cmpsb
push
out
inc
stos
or
lret
mov
sahf
cmp
decb
cmp
icebp
out
cli
cmpsb
inc
shll
cli
and
aaa
dec
xorl
push
loop
mov
in
pop
push
fidivs
jne
popa
sbb
mov
or
mov
push
mov
int
mov
adc
ljmp
xchg
mov
test
jmp
imul
lods
lret
out
lret
and
mov
sub
dec
mov
mov
push
shl
bound
adc
mov
push
cltd
and
outsl
cld
in
push
inc
mov
adc
je
adc
push
je
add
subb
adc
push
xchg
pushf
pusha
movsl
mov
mov
jo
or
adc
xchg
fisubs
xor
out
insl
fcmovnbe
shrb
and
jmp
mov
add
inc
sbb
shrl
sbb
lods
adc
outsb
add
gs
enter
mov
pusha
xchg
inc
cmp
xor
div
lds
pop
xchg
fidivs
addr16
dec
push
jns
mov
dec
cmp
stc
leave
cmpsb
push
ljmp
fs
scas
in
push
cmc
jae
or
pop
mov
inc
je
out
addl
out
mov
push
inc
and
sub
adc
rcrb
enter
sbb
test
hlt
mov
mov
cmp
ljmp
pop
sub
inc
sbb
and
cltd
xchg
insl
jnp
in
and
and
or
or
ret
loope
cmp
and
xchg
rcll
dec
pop
outsl
jne
mov
enter
out
dec
ja
test
mov
aaa
fdiv
inc
in
cmp
cs
shrb
shll
loope
sub
dec
pop
sbb
test
data16
add
imul
das
xchg
lea
jne
call
popa
jmp
pshufw
sbb
mov
mov
mov
imul
mov
repnz
popf
in
fsubp
push
outsl
cmp
test
shrb
adc
fsub
mov
sti
or
mov
and
in
pop
jp
loopne
test
or
ficomps
dec
movl
add
jp
dec
push
test
inc
adc
xchg
sub
out
data16
mov
into
or
out
add
or
cmc
lods
adc
pop
pop
jp
fstpl
inc
lock
pop
adc
mov
movsb
mov
dec
sub
mov
fidivl
mov
fs
dec
into
mov
xor
outsb
or
mov
push
and
call
pop
ret
dec
sbb
push
insb
aad
sahf
push
sub
pop
lret
dec
xor
aad
fiaddl
hlt
pop
jl
xchg
or
lret
inc
fistps
mov
xor
jbe
andl
mov
jmp
stos
and
pop
mov
imulb
or
in
or
out
jbe
out
xor
or
ss
pop
cwtl
inc
add
xchg
outsl
outsl
cs
mov
psubw
and
mov
loop
nop
lret
addl
mov
and
jg
mov
popa
testb
add
inc
adc
ss
xor
call
inc
inc
mov
cmc
mov
das
lahf
push
clc
jb
clc
aaa
sub
aad
add
jae
inc
pop
andl
add
inc
or
cmpsl
push
xor
inc
and
jne
stc
lea
and
icebp
repz
mov
sub
pop
or
xchg
fcompl
hlt
or
mov
call
adc
pop
jmp
stos
in
and
imul
shll
in
fadd
movl
push
or
loopne
bnd
lcall
adc
cld
and
int3
cmpsb
lods
mov
sbb
push
and
push
xchg
inc
ljmp
and
icebp
and
andl
mov
daa
fcomp
jo
call
sbb
pop
rolb
xor
cmp
mov
add
enter
shlb
cs
push
ja
mov
inc
push
sub
and
dec
das
fstl
jne
cmp
mov
or
movsl
movsl
dec
rcrb
mov
adc
jbe
popa
push
loope
dec
or
insb
xchg
lods
adc
mov
pop
je
popf
lds
inc
mov
aam
orl
outsl
inc
pop
xor
adc
push
popa
mov
rol
mov
int
addr16
mov
or
mov
pop
cli
clc
jg
loop
aas
push
ljmp
jne
pop
or
xchg
pop
mov
adc
iret
ljmp
add
cmp
test
xchg
mov
add
add
mov
pop
enter
jg
repz
pop
adc
push
je
xorl
push
mov
popa
popl
adc
mov
js
inc
test
out
out
jg
sbb
inc
loop
or
mov
pushf
mov
mov
xchg
fs
ja
sub
push
sbb
or
outsl
fildll
orps
mov
jmp
mov
and
push
sbb
jno
mov
fsubl
or
or
mov
das
std
das
dec
shlb
adc
inc
fnstsw
shlb
ljmp
mov
je
mov
cmp
arpl
jno
inc
mov
push
ja
loopne
cmp
test
xor
and
leave
dec
push
xchg
lahf
mov
nop
pop
xor
xor
pop
inc
call
sbb
mov
add
or
inc
in
divb
mov
add
andl
jns
incb
and
call
inc
movsb
fwait
xchg
lcall
cmc
aaa
lods
shrb
fistps
ret
mov
lcall
adc
and
fs
adc
out
cmp
outsb
push
clc
mov
popl
add
movsl
mov
add
push
mov
mov
test
cli
add
xor
je,pt
jmp
adc
in
adc
mov
inc
sbb
mov
mov
cmp
sub
mov
dec
nop
pop
inc
aas
sub
rcll
sub
and
orl
mov
lret
out
pop
movsl
cli
je
sub
jle
sbb
enter
je
sbb
adc
fsubr
or
add
xor
jg
ficoms
add
adc
ss
mov
cwtl
imul
std
push
rclb
xor
in
inc
stc
mov
push
dec
movsl
inc
imul
inc
fisttpl
mov
cmpsb
pop
jne
test
xchg
pusha
sub
loop
or
xor
daa
mov
mov
push
ret
add
inc
or
mov
mov
out
hlt
movsl
mov
movsb
repz
or
push
dec
mov
aad
sub
jno
jl
or
push
sub
or
testb
das
stos
push
add
and
adc
rorl
add
jbe
loop
and
aam
insl
clc
mov
iret
or
leave
push
inc
push
je
sub
inc
cli
bound
push
push
jne
dec
incl
shlb
jbe
mov
add
and
scas
ljmp
sbb
clc
das
lock
sub
ljmp
sbb
in
adc
cmp
dec
pop
mov
mov
es
je
sub
ret
pop
mov
ss
adc
sub
pop
sbb
jae
mov
iret
mov
adc
jae
sbb
xlat
pusha
lea
xor
pop
adc
scas
hlt
lea
fistpl
or
mov
jl
je
or
jne
in
loopne
idiv
jne
sbb
xor
and
dec
add
outsb
inc
xor
fiaddl
loopne
xor
pushf
ds
or
orl
mov
divl
and
xchg
inc
ret
je
mov
xchg
mov
sbb
mov
mov
sub
push
inc
mov
sbbb
and
pop
sbb
mov
fisttpl
sti
leave
push
xor
adc
push
dec
pop
pusha
lret
lahf
mov
int
mov
mov
daa
xchg
orl
js
outsb
sbb
in
xchg
loope
fdivrl
stos
jl
in
xchg
test
and
cmp
in
adc
outsl
xor
call
jno
and
hlt
jp
mov
mov
cmp
clc
es
jg
andl
insl
hlt
test
enter
xor
cmp
inc
imul
in
fstpt
cmp
popf
and
cli
insl
and
cvtdq2ps
xor
int3
cmc
ret
xchg
cld
out
xchg
mov
adc
scas
and
sbb
les
or
shll
enter
sub
ja
aaa
ss
inc
rcrb
adc
inc
mov
pop
loope
scas
jl
int3
or
mov
xchg
mov
js
insb
filds
push
cmpsl
aas
add
scas
or
icebp
inc
stc
jb
mov
xchg
sarl
lods
stos
loopne
fsubl
insb
mov
test
and
lret
push
pop
jg
sti
jbe
mov
and
enter
movsb
xchg
gs
xchg
inc
idivl
mov
mov
bound
mov
fadds
mov
and
mov
and
mov
sbb
call
js
xchg
add
aad
add
and
and
cmc
mov
inc
or
pop
insl
imul
outsl
les
clc
mov
adc
mov
out
push
xchg
pop
call
testl
xor
xchg
cmpsb
notl
repnz
xorl
push
ljmp
frstor
push
push
add
adc
or
adc
ds
in
mov
push
cmp
adc
adc
jmp
stos
push
es
and
or
jl
das
fwait
pop
adc
into
xor
mov
mov
or
fbstp
push
mov
fldl
aad
icebp
pop
jecxz
or
cmp
inc
mov
sbb
push
aaa
out
or
or
fsubrs
sbb
idiv
outsb
adc
and
mov
lcall
adc
add
call
and
lock
test
js
loop
fs
arpl
mov
insl
jnp
xchg
rolb
sbb
push
sbb
mov
inc
out
mov
je
mov
push
outsb
lock
call
cmpsl
call
mov
mov
inc
sbb
loope
mov
jne
insb
sbb
or
cmp
xor
sbb
jmp
or
pushf
out
jne
cli
pop
das
in
loopne
adc
or
mov
dec
movl
dec
fists
inc
aaa
xchg
mov
in
pop
xor
mov
and
lret
dec
pop
mov
scas
mov
arpl
pop
fcmovne
cmp
fbld
aaa
dec
dec
xchg
shrl
dec
js
sti
sbb
stos
jg
inc
outsl
push
sahf
xchg
aas
jns
and
adc
cmc
call
sub
divb
xchg
sti
stos
sbb
or
add
inc
mov
jl
loope
xchg
repz
outsb
lcall
xorl
xor
imul
pushf
inc
outsl
lock
push
mov
jnp
pop
test
and
ret
mov
insl
shll
xor
cmp
jg
mov
sarl
and
jp
mov
cli
popa
or
push
into
sbb
outsl
hlt
inc
jne
sub
jb
lods
aaa
shrb
rol
aam
adc
notl
fidivs
das
jg
cld
jb
and
sbb
pop
call
cld
xchg
test
fsubp
repnz
jo
fbld
les
mov
lcall
jo
call
lret
push
sub
icebp
push
or
push
int3
jo
add
outsb
xor
and
insb
mov
stos
push
sti
or
pop
or
bound
adc
dec
mov
xor
adc
ret
sarl
and
sub
xchg
imul
je
jmp
in
je
mov
inc
sti
jbe
cltd
ss
xlat
hlt
dec
or
outsl
and
and
mov
pushf
mov
fcomi
cmc
inc
fwait
mov
cld
insb
aam
jge
test
je
sbb
xor
mov
jmp
mov
cmp
mov
mov
loop
stos
adc
mov
shlb
add
push
inc
inc
outsl
fnstsw
inc
insb
and
mov
adc
lods
pop
loopne
and
or
js
adc
pop
js
mov
cmp
mov
arpl
xor
adc
test
sub
inc
push
or
aam
mov
orb
cmp
cltd
adc
mov
popf
cmp
mov
fmull
call
jmp
loope
jmp
xor
mov
sbb
es
into
sub
push
das
decb
mov
pop
lcall
jae
gs
pop
cld
lods
jle,pt
mov
mov
push
fwait
dec
dec
cs
lods
outsb
dec
cs
cmp
xchg
js
nop
cmpl
popf
and
les
pop
push
adc
fsubr
je
pop
and
daa
jb
sub
sbb
adc
andb
call
and
fwait
or
sar
test
je
std
int3
pop
and
out
jb
push
cltd
or
mov
jp
cwtl
fidivrs
add
fs
fstl
add
and
and
dec
jle
xchg
dec
adc
pushf
sub
popf
jg
jge
cmc
pop
mov
outsl
or
inc
mov
pop
adc
shrb
mov
in
mov
loope
arpl
mov
movsl
js
inc
filds
fs
and
push
xchg
clc
mov
imul
add
test
dec
mov
jne
lods
adc
cmp
lods
adc
xor
push
and
lock
xor
dec
cld
push
sub
mov
jl
xor
test
ret
mov
subb
insb
out
xchg
push
fucomp
jge
insl
xorl
add
and
cmp
pop
or
movsb
lret
jg
inc
mov
inc
inc
or
push
xchg
push
adc
cltd
outsb
sbb
mov
mov
inc
jbe
adc
pop
addb
push
imul
sub
stos
push
stos
xor
add
jae
fucomip
not
lock
jl
pop
repnz
insl
stos
testb
insb
xchg
test
jg
xorl
cltd
sbb
loop
loope
insl
xchg
in
hlt
lcall
push
dec
push
sbb
xchg
jbe
cltd
cmc
pop
mov
je
adcl
incl
dec
js
push
call
adc
dec
xchg
jecxz
xchg
cmpsb
mov
addr16
filds
or
or
cld
stc
push
mov
pop
mov
dec
adc
adc
jmp
dec
test
test
outsb
pushf
jmp
pop
or
push
inc
or
cmp
ds
lahf
add
out
ds
addb
pop
jmp
test
out
add
js
inc
cmp
outsl
inc
mov
cmpsl
push
jp
mov
test
in
push
add
cwtl
dec
jge
xchg
mov
stos
inc
cmpb
mov
or
or
or
jl
and
rcrl
shlb
cs
or
push
mov
xchg
or
sub
es
mov
cwtl
fiaddl
mov
cld
mov
das
sahf
mov
sarb
dec
je
pop
call
icebp
mov
mov
and
ret
mov
inc
es
cmp
mov
add
adc
dec
jo
out
je
or
test
jmp
mov
clc
push
or
arpl
push
push
call
sbbb
push
rcl
lods
inc
inc
jl
pop
push
jg
outsb
das
not
pop
pop
imul
jg
cmp
adc
mov
sbb
fsubrl
sti
jo
pop
mov
mov
fwait
mov
nop
dec
ret
and
testb
xchg
dec
ret
push
sbb
mov
jp
pop
andl
xchg
inc
das
push
inc
out
xchg
or
imul
cli
jp
push
jbe
xchg
xor
dec
cli
shll
subb
lods
xor
push
lret
mov
inc
movl
insb
inc
inc
xor
pop
add
std
mov
push
or
jmp
lds
xchg
xlat
jmp
fcmovb
sub
shlb
lods
cltd
addr16
add
and
aaa
inc
mov
sahf
add
adc
lea
insl
jmp
jmp
push
mov
adc
and
mov
pop
outsb
lds
push
or
pop
in
add
pop
mov
pop
sub
nop
inc
inc
jl
add
inc
mov
js
sbb
jo
xchg
shll
cmpsl
mov
clc
shrb
shll
repnz
dec
in
adc
lods
jl
inc
jmp
xchg
add
xchg
cmpl
jmp
mov
xor
popa
adc
jb
sub
and
xor
xor
cmp
sahf
lcall
push
mov
popa
insb
inc
icebp
sub
in
out
push
cmpsl
lock
das
les
pop
dec
push
fsubp
pusha
mov
inc
mov
cmp
pop
sub
repnz
stc
lock
cmpsb
fldcw
mov
adc
and
mov
add
mov
fnstenv
or
insl
xor
dec
daa
pop
cltd
data16
insl
fildl
mov
add
ret
ljmp
jecxz
jl
shll
jo
pop
sub
cmp
sub
and
push
imul
cmp
push
bound
imul
jbe
aaa
inc
imul
add
cmp
sbb
jnp
mov
pop
repnz
clc
test
pop
andl
sahf
inc
int3
push
jno
mov
cwtl
mov
inc
ds
xor
cmp
outsl
mov
je
into
or
adc
shr
scas
inc
cmp
imul
add
xor
sub
fwait
jnp
ret
je
xor
adc
inc
out
pop
imul
lea
mov
jmp
push
pop
jle
push
mov
inc
aam
pop
arpl
fcmovb
decl
sbb
push
xor
fcmovnb
push
mov
mov
ret
aas
push
aad
je
pop
xchg
push
push
out
lret
pop
stos
mov
mov
call
cmp
mov
or
pop
lock
lods
push
push
aaa
enter
xor
jae
push
inc
imul
push
popf
ja
test
insb
and
lods
popf
shlb
dec
mov
or
mov
push
subb
mov
les
inc
inc
cltd
lahf
mov
jbe
std
or
jle
add
adc
adc
insl
imul
mov
jmp
ret
push
mov
dec
add
and
jno
or
lea
add
pop
shr
pop
sub
faddl
scas
in
mov
scas
sbb
aaa
xor
ja
aaa
je
dec
or
stc
adc
jns
shrb
sub
cmp
fsubrs
rcl
or
leave
pop
or
xchg
jo
jae
scas
push
insl
pushf
lods
xchg
loop
jle
ljmp
push
ret
in
jmp
mov
jp
in
ret
and
addr16
scas
and
jbe
movsl
in
pop
push
pusha
aad
pop
sub
insb
fstpl
mov
sbb
test
sbb
xchg
jbe
jo
popf
stos
xchg
fists
jg
insl
push
inc
and
or
je
mov
lret
mov
sbb
inc
push
fldenv
hlt
cmp
bound
out
jmp
test
mov
loop
fprem
loopne
mov
push
xchg
and
xchg
pop
xor
cli
notb
mov
decb
mov
inc
je
jecxz
inc
mov
cmpsl
push
into
inc
lcall
cwtl
mov
mov
mov
clc
je
fs
cld
push
mov
repz
mov
push
icebp
jo
lret
inc
sbb
and
arpl
inc
xchg
sbb
sub
adc
fdivrs
rcl
mov
xor
iret
gs
add
mov
jp
sahf
ret
fisttpl
notb
mov
cwtl
fnstsw
adc
mov
adc
sbb
inc
js
sbb
call
and
fldt
inc
stos
push
pop
enter
sbbl
iret
or
out
movsl
mov
xchg
jnp
je
jbe
mov
cmc
dec
jns
xor
adcl
sub
jmp
mov
jnp
stos
sub
pop
push
test
sbb
xor
mov
pop
imul
push
cmc
je
mov
cmp
fstpt
addr16
adc
mov
mov
neg
aam
outsb
cmp
mov
cmp
jg
add
fwait
outsb
imul
adc
ljmp
or
jmp
mov
jge
sub
jg
loope
and
call
jge
aaa
testb
jg
xor
add
ja
mov
out
lret
sarl
sub
mov
adc
out
fdivrp
inc
testb
and
lret
idiv
sbb
fs
insb
jne
pop
fists
push
push
lods
std
jg
xchg
fildl
rdmsr
mov
orb
dec
push
sub
ret
jle
adc
pop
pop
cmp
call
adc
xorb
fsub
incl
in
lock
mov
enter
insb
ds
ds
int3
pop
mov
rorb
or
jae
jg
sbbl
shl
lret
lahf
mov
or
das
les
add
stos
aaa
mov
movsb
jge
jns
nop
jmp
pop
or
push
or
push
jge
testb
jo
adc
push
add
outsl
outsl
outsl
popl
or
pop
mov
or
negb
mov
add
mov
ja
add
push
adc
je
mov
inc
sbbb
pop
push
jecxz
cli
fst
mov
lock
mov
movsl
fistl
add
inc
rcr
mov
sub
cmpsb
xchg
jb
dec
icebp
and
sbb
andb
jae
cld
fisttpl
icebp
test
jo
push
or
ret
popf
lahf
or
test
testb
mov
mov
mov
pop
pop
icebp
es
rclb
inc
aam
js
call
jle
push
lods
mov
pop
mov
je
add
mov
or
mov
jmp
add
mov
test
incb
ss
dec
cmp
icebp
mov
movsb
aad
push
popa
sahf
push
push
pop
lret
mov
or
mov
inc
mov
push
mov
ja
sbb
sti
and
fs
dec
sbb
jle
inc
sbbl
jne
jmp
ret
cmp
xor
jge
sub
loope
jmp
sub
xchg
js
adc
inc
lods
adcl
pop
mov
sti
or
mov
sahf
inc
nop
outsb
divb
mov
or
outsb
inc
cltd
movsb
fdivrl
add
hlt
outsl
roll
cmp
mov
cmp
adc
aam
cmpsl
divl
loope
repz
jecxz
adc
js
mov
popf
jmp
inc
adc
mov
nop
out
jbe
push
sbb
inc
in
dec
pop
dec
inc
je
xchg
pop
xor
out
mov
adc
orl
jnp
sti
adc
clc
inc
enter
pop
xor
int
pop
pop
add
xchg
mov
xor
fisubrs
or
jno
adc
adc
imul
jl
pusha
cmp
sbb
push
loopne
push
sub
sbb
push
test
sbb
or
mov
aaa
into
push
jg
jg
pop
loop
fcomps
cmp
std
pop
orb
and
or
fsub
xor
add
fisttpl
xor
add
and
xlat
andl
sbb
or
insl
lock
mov
jg
popa
sub
repnz
call
mov
adc
jae
loop
scas
fsubs
std
and
out
jp
lods
jmp
pop
test
jne
bound
cmpsb
stc
inc
scas
and
xchg
ss
mov
repz
lcall
ss
adc
js
aaa
add
inc
in
call
aaa
fsts
lock
fisttpll
xlat
cmp
cld
scas
xor
sub
or
adc
sub
or
pop
loopne
dec
push
adc
fistpl
push
fadd
pop
mov
cmpsl
ss
out
paddusw
pop
int3
adc
sbb
inc
xor
jns
pop
daa
je
push
push
cmc
xchg
xchg
mov
push
call
jnp
pop
js
pop
mov
mov
jg
inc
flds
addb
dec
inc
shll
jo
aad
mov
sub
cmpsl
pop
popf
hlt
xchg
push
adc
mov
into
pop
or
push
outsl
mov
mov
icebp
mov
push
movb
cltd
dec
mov
jne
cmc
jbe
mov
sti
push
fsubr
lods
xchg
mov
cmp
push
mov
pop
mov
mov
sahf
dec
sbb
popa
or
dec
mov
mov
mov
mov
dec
sahf
or
outsl
push
and
xor
mov
movsl
jo
pop
mov
js
std
outsl
in
or
push
je
dec
push
sti
pop
or
andl
jo
add
lods
out
rorb
mov
push
fs
sub
cmp
jae
arpl
or
cmp
test
pop
outsl
pop
pop
cli
ja
mov
iret
push
xor
push
mov
mov
mov
sub
pop
shll
and
pop
xchg
cmp
aas
jbe
mov
and
enter
in
pop
pop
mov
loop
fs
or
test
mov
add
mov
sbbb
sub
sahf
mov
stos
cs
jg
and
adc
or
stc
cld
aad
or
add
sub
pop
xor
pop
inc
xchg
dec
fisttpl
aas
mov
test
or
ja
mov
push
adc
fucomi
sbbb
scas
cmp
fstl
sub
mov
inc
jle
sbbl
fiaddl
jp
xchg
dec
and
pop
mov
xchg
mov
adc
cmp
adc
push
fildl
mov
call
inc
jge
mov
mov
movsb
je
mov
dec
push
cmp
cmp
mov
xchg
inc
mov
jle
cmc
add
or
or
fmuls
loop
rolb
xchg
stos
inc
subl
adcb
push
cmpsl
orl
fdivrp
int
jmp
pop
mov
das
mov
das
mov
xor
pop
out
stos
ud0
sub
lods
xchg
xchg
shrb
mov
pop
test
out
mov
add
ljmp
push
sub
dec
idivb
xchg
push
call
test
xchg
xchg
lcall
rorb
or
mov
and
fists
fucomp
or
xchg
and
push
mov
push
insl
jmp
adc
fisubrl
inc
mov
insb
cmp
std
adc
repz
cmpsl
lea
inc
xorl
js
or
push
mov
call
or
aad
jo
dec
scas
inc
push
mov
push
test
xor
into
adc
xchg
inc
sbb
jp
push
add
pop
movsb
add
cwtl
or
pop
or
subl
les
inc
push
shll
insl
mov
cmp
test
cmp
in
outsb
popa
inc
in
das
adc
push
test
jb
pop
xchg
mov
and
arpl
push
sub
jecxz
sbb
into
adc
pop
repnz
cmpl
insb
cld
in
cmp
fmull
cli
adc
inc
jmp
pop
add
jge
or
and
out
jo
adc
addr16
xchg
lods
je
push
test
adc
jbe
stos
shr
les
or
inc
dec
imul
decb
rcrl
lods
add
inc
inc
sub
inc
sub
arpl
and
push
jg
and
jge
call
pushf
mov
push
pusha
jmp
or
sub
adcb
sbb
insb
enter
add
shrb
clc
push
movsl
add
xor
add
or
add
dec
test
mov
ds
sahf
ret
sub
out
sbb
jmp
or
fists
movsl
imul
push
test
shlb
push
je
lahf
push
jmp
nop
sbb
push
mov
lret
adc
adc
loopne
cli
in
add
das
dec
adc
dec
xchg
mov
jp
loop
add
rcr
mov
and
in
sub
sbb
jl
sbb
insl
divl
and
xor
aas
adc
mov
dec
adc
mov
lods
push
call
and
push
mov
fistl
ss
aaa
cmpsb
sub
xor
call
fsubr
sar
subps
js
xorl
or
fisttpll
mulb
xchg
stos
inc
sub
dec
scas
call
xchg
dec
mov
mov
in
mov
mov
add
jg
ret
mov
or
test
loop
xchg
lods
loope
mov
faddp
or
mov
jmp
fisubrs
sub
adc
sbb
xchg
and
mov
in
xor
mov
jo
cld
push
inc
fcmovnbe
add
jno
jbe
jle
jecxz
inc
pop
push
adc
rolb
or
cmp
roll
ss
iret
xor
movsl
and
js
or
adc
push
push
xchg
cmc
mov
pop
insl
scas
cld
adc
lea
adc
lea
adc
std
ret
jp
decb
hlt
in
stc
xchg
xchg
sub
aaa
dec
xchg
push
call
or
push
adc
dec
sbb
sub
and
loop
shll
cmpsl
clc
insl
aaa
fimull
xchg
mov
xchg
enter
inc
imul
aad
shll
add
pop
fisubrs
das
ja
test
pop
addr16
loope
ja
jmp
lods
and
daa
dec
jmp
imul
xor
adc
inc
xchg
fs
daa
push
add
call
movb
outsb
addb
mov
call
and
mov
mov
pop
mov
jbe
inc
xor
daa
pop
fldt
sub
outsl
mov
jae
pop
ficoms
pushf
test
xchg
stos
in
inc
xchg
add
in
scas
aam
enter
and
sarl
addr16
in
scas
push
pop
pop
jg
in
ret
sub
push
cmp
in
or
insl
and
or
sbb
inc
cmp
adc
mov
pop
pop
ja
xchg
adc
in
adc
das
outsl
out
adc
fwait
xor
jmp
or
push
dec
jle
cmp
pop
inc
subb
and
test
xor
imul
jb
in
inc
nop
pop
xchg
inc
push
adc
jg
push
faddp
ud0
xor
pop
jns
in
aaa
or
or
adc
ss
push
xchg
pop
adc
inc
mov
jae
jo
mov
push
aad
xor
in
adc
cs
inc
add
and
or
and
inc
nop
test
jnp
jecxz
cmp
sub
in
stc
xchg
mov
in
loop
fcoms
adc
andl
push
and
pop
jae
jg
and
pop
or
inc
je
dec
das
hlt
scas
test
in
sbb
xchg
scas
nop
mov
inc
es
pop
push
clc
sub
and
fisttpll
test
mov
jge
mov
test
shlb
mov
sti
mov
aam
lret
push
pushf
or
fistl
adc
jns
cmp
sub
sub
or
in
mov
jbe
jg
jnp
out
ret
xor
sbb
mov
mov
inc
enter
dec
push
in
movsl
push
and
dec
or
das
xor
notl
pop
pop
xor
cmc
cmp
pusha
test
fistpl
nop
into
cmp
lock
insl
add
pop
mov
add
and
comiss
ficoms
mov
jmp
inc
sbb
cli
stos
jecxz
mov
cwtl
out
adc
outsb
mov
or
pushf
sub
cmp
test
jecxz
shlb
rorb
sub
xor
mov
aaa
xchg
push
ret
lods
jae
inc
mov
mov
jbe
andl
test
fildll
bound
cmp
cmp
pop
clc
mov
mov
push
jg
mov
mov
mov
js
iret
outsl
push
add
push
mov
imul
mov
out
push
mov
movl
popl
fcomps
or
loopne
or
repnz
faddl
mov
pop
in
ficompl
sbb
mov
pop
mov
jno
sub
pop
insl
adcl
xorl
hlt
lods
pop
cmc
sub
orl
call
xchg
inc
imul
dec
mov
inc
pop
cmpsl
jl
mov
sub
lds
ret
sbb
dec
lods
sbb
fcoml
inc
pop
roll
mov
sbb
mov
mov
add
fdivr
imul
xor
mov
outsb
movsl
and
add
cs
push
jmp
incl
call
sbb
sbb
call
or
ffreep
inc
daa
sbb
into
call
orb
sbb
repz
lods
shl
test
add
cmp
jb
or
sbb
je
insl
inc
adc
add
inc
fsubrl
pop
imul
punpckldq
icebp
push
test
sbb
in
add
mov
loop
sbb
mov
fs
and
push
mov
mov
adc
je
lods
add
flds
sub
cmp
or
out
add
out
inc
mov
pop
mov
pop
arpl
dec
mov
aas
mov
adc
jmp
mov
dec
das
rcrl
out
lods
ljmp
xor
pop
sub
and
adc
iret
imul
cmp
insl
dec
aad
xlat
mov
xor
ja
mov
leave
cmc
push
clc
mov
in
mov
std
pop
pop
mov
pop
jne
lods
neg
cmp
ljmp
mov
cltd
add
inc
test
hlt
testb
xchg
push
and
stos
inc
sub
jbe
lret
mov
daa
inc
jg
bound
push
fbld
je
sub
movsl
call
push
push
or
enter
lret
mov
or
mov
pop
sti
and
mov
les
add
aaa
mov
mov
sub
jbe
dec
mov
inc
adc
adc
fdivrs
jbe
add
insb
xchg
mov
push
jae
mov
call
push
ja
std
push
adc
and
es
das
push
sub
cli
incb
sbb
cltd
xor
shrl
or
and
push
test
push
orb
fiaddl
mov
xchg
cltd
xchg
std
or
icebp
movsb
lret
es
inc
je
adc
fldt
pop
ds
adc
sub
inc
outsl
or
cmc
adc
adc
test
fwait
adc
push
adc
xchg
jmp
sbb
mov
or
hlt
xor
pop
orb
scas
push
cli
adc
xchg
mul
fldt
movsl
mov
nop
in
scas
sbb
inc
jmp
mov
and
mov
das
divb
fwait
enter
cltd
cli
jl
hlt
pop
test
lahf
gs
xchg
xor
xchg
or
jge
inc
or
lea
push
cld
mov
dec
rclb
or
or
mov
clc
pop
js
sahf
push
mov
push
push
test
inc
pop
xchg
jge
lds
xor
and
std
mov
mov
cmpb
and
clc
or
int3
sub
mov
push
sbb
adc
cwtl
in
shlb
xchg
jnp
add
orb
pop
pop
shrb
pop
and
lock
mov
gs
outsl
push
jmp
cmpsb
cmp
pop
fmuls
ficomps
cli
dec
loopne
and
or
sbb
or
push
and
sbb
int3
inc
cs
mov
je
call
addl
js
aas
fcom
sti
cmp
aaa
mov
adc
and
pop
jbe
mov
jge
iret
jl
lret
push
inc
and
sti
je
roll
lods
xor
pop
test
jg
scas
cmp
inc
sbb
and
sbb
call
sub
cmp
xchg
outsb
fists
mov
push
or
add
push
mov
jnp
test
dec
in
sbb
bnd
add
push
lcall
mov
enter
je
rcrl
adc
es
dec
pop
lock
mov
shrb
mov
outsl
pop
inc
pop
cmp
addl
int3
loop
subb
inc
jno
ljmp
inc
outsb
mov
sbb
or
adc
sub
cmp
cmova
pop
pop
std
cmp
adc
add
cwtl
sub
pop
fistl
or
sti
int
jne
dec
test
shlb
daa
in
mov
push
and
add
inc
jmp
aam
fdivrp
xchg
push
ss
mov
xchg
dec
cltd
fimull
popa
or
push
pop
dec
mov
test
mov
je
aad
jne
add
add
mov
dec
aam
repnz
sub
push
test
sub
jmp
arpl
dec
xchg
pop
inc
mov
into
add
or
adc
mov
mov
push
jecxz
cmp
sub
sbb
into
or
int
cs
roll
mov
xor
shrb
sub
fwait
mov
jge
add
xchg
mov
mov
mov
sbb
incl
shlb
dec
aam
xchg
lea
xor
mov
xchg
jns
gs
or
aad
inc
js
add
pop
xor
push
pop
dec
jl
and
sti
ret
fidivl
push
test
subl
add
mov
lods
inc
mov
fmulp
leave
add
cwtl
rcrb
mov
sbb
xor
fistps
clc
ds
mov
or
lods
repz
sub
adcl
jl
call
push
xchg
not
add
fdivr
fucomi
test
dec
pop
dec
dec
mov
repz
or
pop
test
shrl
rcll
push
push
dec
ffree
pop
mov
cmc
pop
sub
jmp
insl
jne
cld
cmp
mov
in
repz
stos
jmp
aaa
mov
outsb
dec
aad
add
mov
stos
cli
out
and
sbb
roll
shr
insl
jae
daa
xor
inc
jp
adc
mov
xchg
cmp
dec
cmpsl
sar
lds
jge
mov
mov
es
add
fdivrs
jns
ja
into
pop
push
inc
lock
imul
aam
mov
inc
ds
lret
and
outsl
hlt
add
iret
in
pop
xchg
out
hlt
mov
notl
aam
imul
lock
add
data16
cwtl
faddp
and
push
xor
cmp
je
mov
jae
fcomip
dec
loope
mov
sbb
adc
mov
es
mov
jo
fwait
inc
in
sub
and
sub
mov
in
sub
bound
mov
inc
and
inc
cmp
mov
add
mov
mov
mov
push
mov
lods
xlat
iret
lds
xlat
mov
pop
mov
notb
cmpsb
mov
popa
adc
sub
pop
xchg
ja
adc
pop
mov
mov
icebp
adcb
sub
icebp
or
jnp
dec
ret
inc
mov
add
call
pop
jg
mov
lahf
divb
fistpll
sahf
test
add
std
hlt
push
mov
mov
adc
pushf
and
and
xor
ja
mov
and
addb
aam
cmpsl
jnp
sbb
lds
and
jbe
aas
lods
sbb
inc
je
cld
sbb
aad
jp
jne
mov
pop
mov
subl
fisubrl
inc
xchg
adc
outsl
add
mov
fs
jmp
adc
lret
fimull
cmp
sbb
or
outsb
loope
cli
or
sbbl
les
push
scas
xchg
push
clc
imulb
push
test
add
dec
stos
push
pop
test
mov
rorb
or
mov
add
inc
rorl
inc
mov
cs
stc
clc
push
and
je
icebp
adc
xchg
push
and
adcb
repz
dec
lret
das
sbb
mov
es
and
xchg
add
and
call
jb
sbb
and
xor
xchg
dec
cmp
adc
jmp
mov
cmc
add
es
nop
xchg
and
nopl
mov
mov
or
push
idivb
es
xchg
add
lods
jnp
icebp
xchg
adc
fdivl
lods
jne
fdivrp
inc
test
mov
sbb
rorb
mov
clc
or
and
xchg
add
fistl
shl
push
sub
mov
inc
rol
clc
fisttps
test
movsl
sbb
cmpsb
mov
sub
and
js
push
mov
clc
lods
cmp
xchg
jne
aam
fisttpl
fstl
mov
sub
mov
fs
or
out
dec
mov
stos
jne
sbb
mov
call
cli
push
stos
mov
gs
xor
mov
and
xchg
test
cli
mov
pop
jbe
sub
call
imul
mov
cmp
cmpsl
pop
in
or
das
loop
mov
or
xchg
adc
dec
xchg
cmp
sahf
cli
lea
dec
and
sub
dec
add
inc
cmpl
pop
xor
arpl
xor
inc
int
rol
fs
or
and
lret
mov
imul
pop
or
addb
mov
or
push
mov
jle
lret
sub
or
xorl
inc
add
push
pop
js
adc
add
filds
push
mulb
push
and
sbb
pop
and
cmp
xchg
mov
push
int3
repnz
dec
jge
pop
les
mov
pop
loopne
lret
cltd
daa
cmp
mov
dec
out
mov
xchg
mov
out
out
adcl
sbb
rcl
ret
xchg
sub
push
mov
inc
jnp
cmpsb
fimull
in
fwait
push
and
add
xchg
sbb
stos
pop
rol
sub
pop
push
add
add
xor
popa
and
pop
sbb
and
loop
add
jp
xor
stos
add
lods
add
into
mov
fidivrl
sbb
ljmp
fadd
inc
lock
mov
cs
xlat
jmp
push
xor
pop
add
or
idivb
mov
aas
lds
call
inc
ja
aad
cmp
push
push
repnz
out
sbb
jle
aad
or
lock
cmp
xchg
mov
or
ss
test
add
test
inc
or
inc
mov
jae
pop
cltd
mov
scas
iret
mov
inc
mov
cmc
leave
inc
cmp
outsb
push
add
rcrl
pop
mov
aad
mov
pop
insl
in
loop
popf
roll
imul
daa
jmp
add
mov
sub
pop
adc
jb
add
lcall
jae
and
hlt
adc
mov
dec
inc
adc
push
or
je
add
mov
add
inc
cli
das
clc
jg
or
sbb
jne
pop
and
mov
jp
outsl
jg
dec
out
jmp
fcoms
dec
es
stc
sbb
nop
es
test
shl
popa
loope
mov
lcall
xor
push
je
sbb
shr
add
and
sub
sarl
fdivr
jmp
aas
leave
mov
xor
mov
push
insb
xlat
cmp
or
mov
mov
dec
sub
jmp
sub
pop
std
or
push
pop
sbb
mov
mov
jbe
fwait
inc
loope
pop
movsl
rcrl
inc
popa
stc
or
lds
fwait
xor
call
cs
aam
add
and
icebp
inc
mov
ret
sub
inc
sbb
lret
daa
sbbl
cmp
add
lods
pop
adc
aas
mov
clc
and
in
sbb
es
in
js
or
xor
mov
fwait
in
mov
clc
and
jns
shrb
into
xor
pushf
hlt
add
mov
scas
xlat
clc
ds
sub
call
or
sub
lods
lock
imul
mov
fdivs
int3
std
xlat
imul
sbb
add
inc
xorl
fmuls
and
test
push
fimuls
inc
add
loope
or
mov
popa
imul
scas
out
xchg
push
rclb
push
ds
add
cmc
fsubrs
repz
hlt
daa
or
push
out
clc
xor
xchg
ficoms
in
add
adc
push
out
push
sbb
mov
and
popa
pop
xchg
mov
add
xchg
push
je
pop
or
test
shlb
dec
add
pop
cmc
pop
imul
jl
push
jns
jno
scas
push
sbb
in
fisttpl
adc
cmp
lahf
pop
rcl
pop
xchg
dec
fiaddl
lea
cmp
movsb
add
test
idivb
mov
push
cmpb
sbb
scas
fcomp
adc
test
add
pop
std
jbe
or
adc
fisubl
aad
mov
xchg
fstpt
add
shll
mov
fsubrs
out
dec
adc
mov
dec
imull
and
pop
and
inc
mov
adc
mov
aam
cmp
sbb
jecxz
add
xor
outsl
jg
clc
sub
scas
into
es
jge
mov
xor
xchg
fabs
dec
test
mov
bound
or
inc
sub
outsb
pop
push
add
test
inc
and
push
fbld
sub
outsb
cmp
xor
xchg
rcl
test
aaa
sub
inc
sbb
and
xchg
inc
pop
sub
outsl
add
int
pop
std
mov
or
jl
push
mov
fstp
and
pop
pop
sub
adc
mov
inc
xor
call
sub
push
fprem
lock
mov
aas
cmp
and
sub
lock
fdivs
pop
or
cli
xor
xchg
outsl
cli
cmp
shrb
cli
ret
fimull
ljmp
xor
scas
mov
mov
xchg
jge
fistl
sub
in
loope
mov
hlt
mov
jbe
mov
cli
cmpsb
int3
outsl
movsb
inc
mov
jnp
xlat
push
fisubl
inc
outsb
imul
mov
jo
loopne
jecxz
or
adc
pop
aas
mov
adc
mov
xorb
in
orb
stos
aaa
jge
push
call
repz
jbe
or
jge
lea
xor
nop
xchg
mov
mov
jne
gs
push
aaa
mov
shll
jg
mov
call
mov
ja
inc
mov
pop
loope
mov
dec
xchg
xchg
dec
pop
sbb
fadds
cmp
loope
push
out
cmc
add
add
rclb
sub
cmc
jno
je
clc
inc
sbb
adc
cmp
jg
mov
in
push
and
jle
jg
je
pushf
pop
inc
fisubrs
mov
jle
mov
inc
adc
dec
dec
jmp
ja
pusha
fistpl
sbb
fisubrl
or
mov
lds
pop
cld
pop
shll
into
fucomp
add
fcmovnu
mov
dec
cld
fwait
outsb
inc
sub
fidivl
sub
push
insl
pop
roll
ljmp
xor
sbb
mov
inc
cmc
cmp
subb
arpl
aad
and
pop
aas
jne
ret
pop
rclb
loope
movsl
jle
sub
inc
or
hlt
shl
je
dec
mov
mov
sub
int3
bswap
int3
xchg
sub
bound
fildl
or
jb
pop
loop
add
inc
inc
lret
xlat
shlb
mov
mov
push
lock
stos
lea
mov
ret
int
push
cmp
fsubrl
xor
stos
sub
lea
aas
or
pusha
faddl
mov
rolb
cwtl
std
enter
sub
cmp
les
pusha
and
or
rcll
mov
insb
add
inc
flds
or
or
pop
loop
rclb
loopne
fsts
pop
dec
das
jl
inc
fcompl
pop
cltd
jo
push
or
push
shl
fdivr
lds
mov
call
stos
jge
std
add
fcomps
dec
divb
xchg
mov
ja
imul
pop
xchg
push
mov
cmpsb
mov
push
push
jle
inc
icebp
lcall
test
push
or
hlt
mov
mov
ja
sbb
or
call
test
shll
jae
inc
pop
push
les
sbb
add
ss
dec
inc
add
int3
dec
adc
fists
fidivl
cmp
mov
sbb
mov
pop
mov
aam
ds
or
xorb
mov
adc
add
js
mov
inc
xchg
je
sarb
stos
push
pop
sbb
or
mov
cmp
icebp
popf
jnp
loope
mov
and
or
mov
adc
jl
mov
fisubrs
sub
shlb
cli
dec
mov
or
loopne
lea
push
aas
icebp
lret
pushl
cwtl
repnz
jge
insb
pop
std
mov
das
push
mov
insl
mov
jae
inc
lret
cvtpi2ps
dec
outsl
movsl
sbb
stc
cmpsl
test
addl
adc
inc
fwait
add
push
fcomp
fisubs
or
aaa
cli
shl
inc
jnp
add
pop
nop
lock
adc
imulb
lds
pop
fdivrs
fadd
push
xor
orl
push
pusha
jge
mov
mov
orb
mov
jns
xor
jle
idivl
fists
pop
fistps
cmpb
pop
or
jo
test
or
mov
lods
imul
or
lock
testl
fs
lods
dec
dec
xor
fsubrs
outsl
and
jge
jp
stos
cmp
leave
icebp
sbb
cmpsb
lods
pop
or
lret
stos
adc
je
je
not
mov
or
aaa
aas
dec
popa
adc
dec
pop
xchg
test
adc
or
test
push
iret
push
test
ret
loop
loopne
orb
dec
mov
pop
jae
loop
insb
dec
push
inc
les
cmp
subb
add
out
fwait
hlt
add
sub
jne
sbb
fisubs
movb
cli
dec
adc
jl
loopne
dec
sbb
or
aam
cmc
sub
das
push
and
adc
jo
jge
hlt
and
mov
jge
adc
or
jmp
cmp
push
mov
push
mov
mov
stos
insl
push
add
mov
ret
push
loope
ret
push
xor
push
mov
je
mov
out
ljmp
mov
int
sbb
or
lods
adc
adc
loopne
and
test
xchg
ljmp
and
in
orb
fildl
xor
inc
pop
loop
sbb
test
rorl
sub
test
sbb
mov
sti
pop
leave
and
roll
xchg
push
lcall
mov
mov
jne
dec
nop
loope
add
add
lds
nop
pop
ljmp
imul
das
push
mov
dec
lock
mov
sub
adc
je
dec
jl
sbb
jbe
cmpsb
push
xlat
lods
loope
clc
fistpl
sbb
add
movsl
jno
int3
push
add
jecxz
das
add
div
jmp
mov
mov
mov
jo
loop
std
aad
mov
daa
inc
lret
stos
ret
outsl
or
or
mov
leave
or
jo
enter
xor
es
fidivrl
and
movsb
movl
mov
adc
inc
enter
mov
mov
jecxz
aaa
mov
push
and
push
xchg
sbb
test
loope
xchg
testb
mov
fsub
push
push
enter
aas
sbb
or
es
out
mov
stos
loope
inc
jle
pop
xchg
adc
jle
xchg
dec
aaa
inc
inc
or
push
and
add
add
push
cmp
jecxz
sub
fidivl
data16
pop
loop
sub
cmpsb
out
mov
mov
leave
rcrb
mov
add
fs
push
pop
xor
jecxz
ja
mov
sbb
loopne
aam
testb
enter
add
repz
adc
data16
or
loop
push
jae
lcall
inc
mov
mov
imul
jae
montmul
cmpsb
add
xchg
icebp
push
xor
add
call
jecxz
cmpsl
dec
lock
outsb
push
fiaddl
icebp
les
sub
dec
in
pop
xor
lcall
add
jmp
cmp
sbb
push
jp
out
jno
inc
sti
push
hlt
sbb
ds
loope
jecxz
imul
ja
jnp
add
data16
in
push
adc
fdivl
into
adc
cmpsl
mov
fisttps
and
dec
xor
test
jmp
or
clc
mov
add
test
icebp
dec
addb
add
stos
add
mov
insl
mov
cmp
call
dec
adc
push
enter
add
fdiv
or
loope
adc
dec
dec
fldl
or
pop
push
jmp
xor
xor
add
ja
sub
leave
jg
cmp
insb
push
dec
xor
jp
sarb
imul
adc
jo
add
outsb
les
repz
or
sbbl
add
andb
adc
adc
sub
nop
xor
or
xlat
std
mov
rclb
inc
jns
sarb
imul
jle
sbb
cld
pop
mov
and
outsb
call
ret
mov
imul
dec
xchg
jmp
mov
or
pop
test
sbb
sbb
add
mov
mov
push
adc
loop
inc
mov
faddp
xor
in
test
sbb
mov
jecxz
sti
push
xchg
loopne
mov
mov
cmpsb
fists
jno
fcomip
leave
pop
inc
dec
mov
add
push
sbb
jl
decb
push
je
loope
fs
imul
test
jbe
test
dec
into
cmpsl
push
lock
adc
dec
cmpsl
and
sub
movl
mov
mov
dec
jl
push
in
jns
lock
inc
filds
jg
rcrb
adc
loope
sub
push
dec
dec
lahf
xor
push
push
push
mov
movsl
hlt
add
cmpsb
xchg
ds
enter
mov
scas
push
mov
push
loopne
clc
out
ja
cmp
and
dec
jp
jo
mov
sbb
mov
test
es
add
jne
out
call
mov
repnz
pop
dec
sbb
mov
push
add
xlat
push
mov
inc
out
cmp
fwait
out
push
test
testb
sub
fcomp
push
jge
pop
outsl
enter
xchg
dec
sub
jb
out
xchg
or
push
cbtw
movsl
mov
and
add
xchg
jne
nop
xchg
mov
outsl
push
fisubrs
or
mov
fs
mov
jbe
cmp
loopne
ret
jle
out
ss
cmp
insl
pop
dec
je
push
xchg
adc
push
sub
xchg
lret
xor
fildl
outsl
mov
and
push
cmp
mov
sti
jbe
sbb
negl
sbb
ds
push
rcll
xor
lret
or
or
aaa
rorl
push
inc
sub
rcl
lcall
pop
fiadds
inc
jl
xchg
adc
jb
daa
push
xor
test
lea
std
cs
adc
cld
icebp
xchg
icebp
cmpsb
mov
push
out
or
je
push
add
sub
scas
cmp
mov
xchg
mov
jmp
bound
out
daa
ja
jmp
das
inc
das
lds
pushf
into
loop
add
mov
aaa
filds
ret
dec
mov
mov
xchg
push
jb
cmc
add
pop
sub
addb
fwait
psrlw
outsb
sub
iret
mov
jmp
lods
orb
xor
test
push
aaa
adc
fadd
push
cmp
mov
or
out
cmpl
or
outsb
push
icebp
mov
mov
je
inc
mov
sbb
aam
fstpl
cmp
mov
xorb
or
sarl
inc
sub
inc
fsts
test
insb
ds
aad
or
push
push
xchg
xor
mov
rolb
push
imul
lea
sbb
in
int
dec
dec
and
mov
pop
jmp
pop
or
sbb
xlat
jbe
ret
lea
mov
fwait
mov
sbb
cmc
mov
es
adc
jmp
and
jp,pn
or
mov
stc
cltd
push
test
repnz
mov
imul
push
or
and
pop
and
cwtl
inc
shl
imul
aad
xor
popf
mov
and
stos
adc
or
sbb
xchg
ret
sub
dec
je
popa
in
jecxz
loope
loope
jnp
andb
pop
mov
lods
jne
aas
jo
ja,pn
loope
mov
push
pop
addr16
sub
jne
jg
jecxz
xor
decb
inc
xlat
and
movsl
loopne
push
test
mov
sub
jl
xor
nop
mov
pusha
std
popf
mov
xor
mov
insb
push
pop
jo
in
mov
push
sbb
insl
adc
xchg
das
push
cmp
or
popa
fscale
or
test
pop
xorps
testb
mov
stos
insb
and
pop
cmp
xor
pop
imul
shlb
shr
test
andl
in
add
pop
data16
pop
jb
pop
xlat
add
lcall
sub
jmp
xlat
cs
mov
movb
jnp
sbb
adc
loopne
arpl
outsl
test
push
cmpsb
push
inc
loopne
insb
sub
jae
sub
dec
lods
pop
fimull
xor
icebp
push
stos
pop
mov
aam
push
pop
pop
cmp
fstpt
mov
or
cltd
or
outsl
loope
push
or
inc
push
sbb
sub
mov
jmp
push
scas
test
jle
mov
aad
mov
mov
sub
aaa
mov
sub
std
outsl
adc
xor
call
je
cmp
jle
jne
call
cmp
movsl
pop
inc
jb
shlb
cmp
dec
iret
adc
jg
mov
jne
call
das
mov
jo
pop
sarb
mov
movsl
outsl
cwtl
jle
add
adc
repnz
push
pop
stc
faddl
cmc
loope
aad
mov
xor
xchg
inc
pop
and
hlt
xlat
arpl
popa
fcoms
cmp
fcoms
cs
xlat
fsubrs
aam
lret
flds
test
jo
sbb
movl
fimull
shll
es
loop
push
sbb
xchg
in
dec
add
fcomp
adc
mov
add
fbstp
xchg
push
mov
jp
cmc
jno
add
add
or
dec
sbb
lcall
add
icebp
mov
pop
xor
scas
adc
and
mov
push
cmpsb
mov
insl
jp
inc
shrl
movsb
je
es
fwait
cmp
push
add
pop
jo
fsubrs
shlb
adc
idivb
or
mov
pop
adc
js
push
leave
icebp
push
mov
dec
out
jmp
pop
sbb
push
pop
xchg
jae
sbb
mov
add
pop
adc
push
push
outsl
cmc
mov
hlt
mov
cmpl
in
push
pop
js
call
add
xchg
shlb
loopne
roll
jns
cwtl
xchg
jge
sbb
stos
pushf
mov
call
sub
jmp
fdivl
not
sub
and
sbb
adc
inc
outsb
dec
out
rcrb
mov
hlt
dec
xchg
pop
inc
push
add
mov
dec
xchg
adc
jmp
in
or
rcrl
test
mov
les
lcall
jne
mov
das
shl
imul
sbb
adc
test
mov
jo
mov
ret
or
mov
test
in
add
lea
adcb
dec
aas
adc
pushf
fisubl
stos
or
aaa
inc
or
in
out
xchg
mov
lcall
cltd
test
mov
fcomp
mov
push
lock
mulb
mov
dec
sar
adc
jecxz
inc
loopne
push
mov
std
push
push
jmp
mov
test
sub
std
or
sbbb
xchg
push
cmp
out
sub
push
inc
cmp
mov
sub
scas
cld
orl
aaa
add
gs
lock
fcmovnbe
je
mov
or
jmp
rcl
ret
push
hlt
aam
mov
shr
out
mov
fs
mov
or
adc
enter
sub
cwtl
inc
rcrb
mov
mov
jmp
mov
lods
and
pop
mov
rclb
daa
and
daa
loop
xor
and
fcmovbe
pop
and
xor
add
outsl
adc
stos
divl
ljmp
or
imul
outsl
stos
stos
adc
push
scas
cld
out
ja
mov
cmc
lcall
sti
les
mov
jmp
add
inc
pop
jp
shll
sbb
cmpsb
pusha
out
cmp
shrl
hlt
xchg
mov
xchg
jmp
mov
mov
aas
xchg
xor
arpl
gs
xorb
xchg
add
sub
lea
dec
sbb
push
or
popf
push
test
and
or
ret
mov
fstpl
mov
insb
jl
fiaddl
jbe
adc
mov
pop
sub
dec
and
pop
mov
repz
push
aaa
inc
or
cmp
ljmp
lods
adcb
aaa
jecxz
mov
jmp
outsl
xchg
mov
lods
and
sbb
cmp
adc
aas
je
movsb
loopne
jle
pop
jmp
ficompl
std
sbb
dec
push
fildll
test
scas
call
adc
leave
cli
jge
insb
insb
mov
lret
sbb
aam
fstpl
push
mov
cmp
aam
mov
das
aad
sub
adc
jne
insl
jmp
xchg
dec
dec
and
or
push
or
lds
dec
cli
adc
stos
push
or
cli
cmpsb
mov
and
aam
shlb
mov
mov
adc
ja
inc
xchg
ss
les
pop
xor
push
mov
cmp
or
pop
inc
or
mov
mov
mov
dec
cmp
aam
xor
dec
adc
aad
jle
inc
sbb
xchg
or
loopne
arpl
out
mov
aas
inc
cli
fwait
int
mov
aas
enter
cmp
outsb
push
jp
call
test
or
mov
or
jo
cmpb
jp
xor
xor
and
enter
and
and
lds
push
sub
jno
cmp
out
subb
fisttpll
addb
pop
xor
ret
push
add
adc
xchg
mov
pusha
add
ljmp
les
ljmp
repnz
push
jp
cli
push
or
adc
stos
or
push
adc
mov
ret
jo
jno
dec
repnz
lods
xorb
and
or
push
or
fidivrs
and
lods
jbe
adc
orb
add
out
fstpl
rcl
iret
sub
pushf
sahf
dec
jl
pop
stos
jle
mov
jne
cmp
dec
sub
outsb
xchg
fidivs
and
or
push
mov
or
dec
out
jp
or
sti
xchg
test
mov
fs
adc
xor
sbb
mov
aaa
insb
xor
jmp
and
lds
ret
or
cmpsb
mov
inc
pop
pop
adc
shll
ss
or
cmpsb
or
add
std
lret
out
bound
xor
cs
stos
mov
mov
and
lahf
xor
insl
out
movsl
pop
sbbb
xchg
aas
mov
mov
sar
pop
loope
std
cmpsl
inc
sbb
sub
jmp
cld
push
stos
mov
insl
xchg
inc
bound
push
lds
or
push
mov
fimull
repz
and
data16
inc
and
jg
fildl
xor
bound
std
in
enter
push
outsb
xor
cmp
cmc
out
stc
je
subb
test
pop
ficoms
mov
push
dec
mov
jb
out
lea
mov
mov
clc
add
lock
jnp
adc
negb
and
hlt
and
insl
imul
ret
loopne
movsl
test
or
in
jno
ret
out
sub
mov
aaa
mov
mov
adc
jns
dec
fwait
or
and
add
cltd
xchg
mov
dec
iret
sub
and
dec
push
rcl
xor
push
cmp
or
ror
std
mov
repnz
xorb
jge
xchg
repnz
scas
add
popl
push
test
inc
icebp
pop
xchg
adc
ret
mov
adc
jae
and
xor
adc
and
inc
xchg
pusha
sbb
addl
adc
into
fldenv
out
in
and
rolb
in
pop
ja
in
and
mov
fcompl
std
sub
push
adc
subl
loopne
cmpsl
fisttpl
lock
dec
pop
mov
pop
inc
popa
push
inc
mull
xlat
xchg
ljmp
inc
add
in
dec
sub
test
mov
in
fidivl
sbb
idivb
lods
fsubl
je
and
hlt
ja
fnstenv
xor
fdivp
aas
push
cmp
mov
xor
decl
out
insb
jo
test
inc
out
pop
mov
outsl
inc
cmp
mov
sub
cmp
mov
out
inc
adc
ficompl
inc
mov
test
push
ja
pop
loope
mov
mov
pop
adc
sbbb
adc
dec
mov
out
fldl
jge
loop
mov
hlt
inc
and
and
dec
and
adc
leave
fisttpll
fildll
or
cmc
stos
xchg
imul
mov
push
pop
xchg
iret
and
ljmp
mov
fildl
adc
push
xor
dec
jge
cmp
mov
sbb
xchg
jno
cmp
mov
bound
push
push
and
leave
mov
rcrl
push
neg
pop
jmp
jbe
jne
int
jecxz
pop
dec
mov
outsl
dec
adc
push
push
rcl
mov
std
jg
pop
dec
lret
inc
xor
push
test
cwtl
ret
xor
xlat
mulb
or
fcompl
shll
mov
test
and
jo
je
outsb
shrl
out
andl
jno
in
outsb
adc
pop
mov
outsb
pusha
jnp
or
inc
mov
or
mov
push
mov
loop
or
sub
mov
sbb
jo
mov
fisubrl
lods
add
push
mov
mulb
add
or
mov
push
dec
or
hlt
pop
jecxz
sub
loopne
sbb
fstl
mov
inc
test
push
add
lds
or
testb
inc
sbb
lret
mov
insb
dec
rorb
xor
jne
push
fcoml
mov
dec
adc
insl
jae
fstp
mov
fdivrl
pop
sub
sub
stos
jmp
jl
or
mov
mov
loope
pop
jg
mov
push
ja
pop
xchg
or
mov
jne
shll
js
fnstsw
sbb
fistps
lds
aad
sub
and
dec
inc
pusha
fisubrl
inc
jmp
imul
add
lcall
test
or
inc
call
inc
push
imul
es
jne
sbb
jle
sub
adc
test
dec
and
in
mov
je
enter
cmp
mov
cmovns
inc
and
neg
pop
mov
je
push
inc
mov
sbb
jnp
or
adc
popa
jmp
xor
and
cmpsl
outsb
jo
adc
movsb
cmp
ret
clc
lcall
popa
add
jbe
add
sahf
and
shlb
js
shlb
dec
inc
or
notl
ljmp
faddl
je
xor
stc
push
aaa
mov
cmp
add
push
add
ss
mov
sub
or
and
std
inc
aad
inc
lret
loopne
pushf
enter
xchg
dec
fstpl
push
in
add
jmp
scas
in
xchg
stc
push
adc
mov
mov
and
xchg
movsl
push
mov
mov
xorl
xor
stos
or
mov
aam
pop
outsl
loopne
mov
xchg
adc
adc
xchg
xorb
movd
es
adc
aam
in
bound
inc
push
dec
or
in
dec
sbb
std
rcll
test
iret
pop
scas
pop
jmp
mov
imul
or
sbb
daa
mov
mov
fcomp
mov
xchg
neg
dec
fcmovnu
mov
dec
cli
call
inc
push
pop
fs
sub
dec
jnp
adc
adc
out
icebp
and
xor
std
aaa
and
xchg
out
out
inc
sub
dec
shlb
or
insb
iret
leave
test
je
sbb
and
add
loopne
sbb
or
and
sub
out
push
fidivrl
out
cld
out
repnz
or
cmp
pop
repnz
jl
mov
std
or
insl
lahf
mov
cmc
in
ja
jb
into
out
mov
lock
or
int
or
xchg
or
xchg
arpl
dec
fcomi
pop
mov
push
push
add
test
loop
cld
mul
and
cltd
and
out
fistps
je
shlb
ss
or
xchg
push
mov
aad
lret
jbe
mov
hlt
jmp
stos
or
cmp
je
test
dec
insb
pop
subl
adc
mov
push
jne
int3
dec
sub
mul
push
xor
xlat
sub
aaa
aad
sub
xchg
dec
outsl
or
repnz
fbstp
lret
mov
add
inc
and
or
mov
sbb
out
mov
push
mov
push
sbb
pop
pop
sqrtps
pop
or
and
and
or
pop
sti
mov
mov
popa
inc
inc
cmp
sbb
xchg
mov
push
out
push
je
mov
into
pushf
push
ret
inc
cld
mov
and
js
xchg
loopne
sub
out
push
shlb
leave
cmc
js,pn
fcomi
sub
bound
std
je
xchg
sub
pop
je
sbb
inc
inc
push
test
add
or
outsb
mov
jns
dec
filds
scas
sub
lods
cwtl
cmp
mov
pop
xchg
in
je
or
jecxz
xorb
add
call
cld
divb
sbb
int
lods
imul
outsb
and
dec
popa
lret
jg
push
into
or
outsl
dec
mov
jne
push
xorl
jo
sbb
inc
and
xchg
gs
dec
add
call
sar
roll
in
push
js
lret
mov
push
push
pop
mov
or
mov
push
adc
fists
jbe
sahf
mov
pop
mov
dec
push
adc
mov
xchg
and
mov
aas
je
jle
jmp
dec
sub
push
pop
inc
adc
or
push
pop
dec
ja
out
add
xor
xchg
loope
ljmp
enter
or
pop
mov
and
cwtl
sub
xor
add
aaa
sub
test
or
adc
adc
cli
test
inc
ret
out
xchg
leave
dec
fcmove
sbb
cmpsb
loope
jno
rolb
insb
loop
push
pop
hlt
lock
mov
inc
inc
dec
js
and
sbb
scas
ficoml
cmp
fdivs
mov
jmp
or
push
mov
insl
mov
mov
cmp
mov
push
lcall
inc
loopne
popa
push
sub
std
push
icebp
pop
cli
fisttpll
lret
inc
mov
test
pop
push
add
mov
pop
les
jmp
mov
sub
call
adc
mov
stos
lret
inc
xor
lods
imul
pop
or
xchg
or
hlt
std
mov
mov
cmp
pop
cmp
lods
adc
mov
mov
inc
pop
subb
adc
shlb
cmc
cld
shl
hlt
sbb
ret
scas
jl
inc
push
fldt
push
push
lret
aam
decb
shll
je
pop
mov
nop
ljmp
orb
adc
movsl
xor
roll
inc
jnp
rorb
push
sub
aaa
cmp
ret
enter
lds
loop
stc
call
call
cmp
loop
les
mov
insl
sbb
dec
or
pop
sbb
sbb
pop
adc
or
std
add
ds
and
test
fidivl
loope
pop
daa
mov
loop
mov
dec
push
lcall
inc
leave
pop
aaa
cmp
or
inc
in
mov
mov
push
dec
inc
sub
stos
inc
jne
sahf
sbb
gs
ret
loopne
iret
inc
and
inc
popa
jnp
aas
sbb
mov
adc
ret
popl
jecxz
inc
mov
nop
mov
xor
bound
out
mov
sarl
pushf
add
jecxz
push
pop
cmp
pop
lret
add
orl
push
in
mov
push
jp
or
lea
mov
dec
pop
cmpsl
rcl
mov
mov
dec
outsl
punpckhbw
jbe
sahf
cmp
xchg
mov
les
mov
jmp
push
popa
lret
pop
cwtl
or
pop
divl
lods
das
rcl
fwait
les
shlb
sbb
shlb
pop
je
addr16
aaa
es
xor
push
pop
hlt
push
ljmp
mov
pop
shll
iret
add
mov
iret
xchg
nop
adc
xchg
inc
lahf
adc
push
adc
dec
and
lret
adcb
dec
test
mov
adc
dec
cmpsl
clc
outsl
fistpll
ljmp
adc
shr
pop
mov
ficoms
test
enter
das
jo
or
pop
xor
push
mov
icebp
xor
roll
das
test
shl
pop
pusha
testb
jmp
testl
ret
je
dec
sbb
pop
fdivrs
pop
daa
out
add
clts
mov
in
lock
lds
movsl
mov
addl
lods
in
cmp
shrl
mov
sub
repz
fdivr
lahf
pop
and
sub
pushf
pop
mov
pusha
xor
icebp
je
adc
jnp
inc
push
push
sub
popf
sbb
mov
mov
decb
pop
mov
mov
adc
leave
repnz
inc
cmp
push
pop
push
sbb
in
incl
lcall
xor
jle
mov
pop
push
and
jl
pop
jns
xchg
das
pop
mov
cwtl
jl
aaa
loope
add
pop
out
mov
in
mov
xor
xchg
pop
cmc
or
popl
or
add
call
inc
test
jbe
cltd
lahf
sbb
mov
mov
inc
test
cs
je
mov
mov
loop
loope
and
sub
ja
fsubrl
clc
mov
mov
adc
pop
mov
fwait
rolb
outsb
lods
push
mov
or
mov
pop
aam
test
jb
push
pop
outsb
pop
push
jbe
lods
jnp
cmp
xchg
lds
ficoml
push
iret
xchg
sahf
xor
stos
jbe
sub
mov
cmp
adc
jb
pop
pop
rorb
sbb
add
or
sub
mov
push
fwait
jae
dec
xor
dec
andb
or
rorl
push
lock
fdivp
fcomi
push
pusha
inc
out
cmp
sub
adc
and
push
adc
lds
add
adc
cmp
dec
dec
sub
pop
movsl
jo
imul
jp
jle
je
push
jmp
or
push
mov
dec
cld
xchg
or
nop
add
add
mov
mov
in
or
adc
add
es
inc
test
adc
adc
push
rolb
add
pusha
fdivrs
or
jnp
out
loopne
add
sub
out
push
push
outsl
push
cmp
scas
add
and
lock
stos
add
repnz
ljmp
xor
out
pop
and
cmc
xchg
cmpsl
fldenv
call
and
or
lea
mov
icebp
cmp
dec
call
mov
pop
and
loopne
cmp
jg,pn
sub
or
sbb
or
lock
fstpt
and
test
in
sti
aam
xlat
add
sub
mov
movsb
inc
call
fbld
push
or
inc
iret
inc
mov
sub
je
jl
xchg
lret
outsl
or
test
mov
shl
xchg
mov
mov
add
jae
aaa
push
and
fwait
sbb
and
sub
ss
jl
xchg
sbb
outsl
test
hlt
mov
and
mov
popa
and
ret
push
pop
mov
and
call
imul
sbb
add
and
iret
inc
xor
jge
mov
mov
add
add
mov
mov
jle
scas
mov
mov
cmp
fwait
cld
jmp
std
mov
jle
push
jbe
dec
imul
jbe
add
popf
mov
inc
lods
cwtl
sahf
std
sub
fstpl
cmp
sub
inc
imul
and
adc
imul
aam
notb
lret
dec
test
jb
imul
sti
xor
repnz
mov
add
mov
add
pop
or
aad
or
inc
cmp
ror
mov
inc
and
stos
push
outsl
je
repnz
in
mov
or
repnz
dec
mov
and
insl
call
xor
xor
lahf
call
or
jne
jp
mov
push
xchg
fisubs
dec
mov
testl
and
mov
xchg
adc
sbb
pop
jecxz
mov
push
adc
pop
add
and
adcb
add
test
es
pop
jmp
jmp
or
lds
mov
enter
ljmp
lret
gs
sbb
inc
and
call
cs
lods
and
xor
aaa
cmp
adc
push
roll
mov
mov
loope
dec
lahf
andl
call
fldt
test
inc
xchg
sbb
add
or
push
push
loop
je
add
xchg
dec
bound
push
rorl
mov
pushf
test
lock
add
rol
aaa
rolb
jno
xor
sbb
adc
aad
popf
bound
insl
jb
sub
pusha
dec
or
pop
aaa
ret
sub
mov
nop
mov
sub
scas
jb
daa
outsb
stos
insl
dec
adc
jge
adc
inc
inc
xchg
bswap
in
pop
mov
mov
mov
mov
icebp
repz
ds
lahf
repz
add
addl
push
dec
fistpl
or
push
out
pop
addr16
xchg
push
es
jne
push
fs
into
inc
and
xor
adc
sbb
jmp
inc
in
pop
test
mov
mov
lret
daa
add
loopne
adc
mov
insb
stos
sub
adc
dec
jo
mov
in
sub
std
inc
int3
pop
insl
inc
or
inc
jo
arpl
movsl
dec
inc
popf
mov
sbb
in
add
loopne
push
bound
vpcomd
ret
lock
push
xchg
mov
icebp
fwait
lcall
push
outsl
cmp
add
jnp
fs
adc
sbb
xor
mov
outsb
stos
mov
andb
pop
pusha
loopne
cmp
and
insl
inc
lds
push
stos
fcmovnb
sub
mov
dec
pusha
inc
xor
jne
jns
rep
imul
sbb
add
rcrb
pop
adc
in
data16
adc
js
dec
mov
mov
int
or
clc
lods
push
xor
and
or
push
fadd
ljmp
lea
sbb
addr16
sbb
outsl
jg
inc
dec
add
inc
sub
arpl
insl
test
add
iret
adc
mov
andb
js
or
add
add
es
xor
add
and
mov
jne
sub
mov
adc
fmuls
inc
arpl
push
outsl
or
arpl
sub
or
cmp
inc
icebp
jne
movl
iret
cs
insl
ja
ret
pop
cs
mov
sbb
dec
and
mov
mov
and
pop
adc
sbb
mov
sub
jge
dec
cs
dec
idiv
out
out
sbb
pop
xchg
enter
dec
inc
pop
xchg
out
adc
xchg
xor
and
sub
into
bound
push
mov
hlt
int3
mov
js
push
sub
stos
cs
fildll
clc
pop
mov
push
cmpsb
adc
xor
pop
jle
or
dec
aad
lcall
neg
fbstp
jbe
cmp
test
in
add
into
scas
push
lea
cli
fbld
pushf
mov
adc
movsb
cmp
addr16
pop
lock
push
dec
pop
test
addl
push
pusha
aad
push
inc
outsl
outsl
mov
lds
jno
iret
and
fsubrs
mov
lret
jmp
outsl
test
fidivl
xorb
dec
inc
leave
jge
mov
xor
mov
mov
push
dec
imul
ret
push
insb
cmp
cs
inc
sbb
lds
jle
add
or
enter
xchg
jg
push
mov
jecxz
xchg
lret
fldt
test
test
add
std
or
sbb
ljmp
les
lret
mov
pop
loope
push
cltd
subb
lods
jbe
aaa
stos
je
add
mov
popf
inc
cmp
je
dec
add
mov
addb
jns
imul
imul
xor
clc
test
jp
or
mov
or
jo
mov
mov
bound
inc
roll
das
movswl
or
pusha
test
leave
hlt
cld
inc
add
inc
sti
clc
cmp
dec
hlt
add
sub
mov
fdivs
add
je
mov
dec
pop
stos
ret
rcr
mov
mov
xchg
or
add
stc
outsl
push
mov
stos
push
or
push
aam
in
mov
push
testb
pop
inc
cltd
jecxz
push
mov
rol
push
sbb
bound
call
push
call
call
in
pop
sub
outsb
pop
jne
push
xor
fcompl
iret
ss
mov
incb
xor
jno
inc
push
stos
push
lods
roll
mov
add
sub
cli
in
test
in
inc
mov
cmpsb
dec
rcrl
push
push
stc
lea
and
inc
dec
xchg
ror
mov
and
cmp
or
mov
insl
pop
cmp
jo
stc
pop
add
xor
mov
and
add
and
fwait
ss
push
mov
or
rcrl
loopne
bound
xor
in
jno
stc
iret
mov
rcrl
mov
mov
push
popa
leave
push
inc
adc
pusha
imul
sub
mov
sbb
sub
pop
xchg
popf
cs
call
jl
das
sbb
mov
mov
lods
jbe
scas
push
outsb
adc
push
mov
or
cmovno
incb
movsl
out
jg
xor
outsl
inc
or
ficoml
sbb
pop
shlb
aaa
cltd
mov
pop
mov
cmp
dec
dec
mov
mov
loope
es
cmp
and
inc
popa
pop
mov
pushf
sub
data16
jo
inc
inc
push
stos
test
in
in
pop
adc
dec
stc
pop
icebp
jp
subb
stos
lahf
hlt
dec
stc
ret
aaa
push
cmp
sbb
popf
mov
sbb
test
loope
dec
fwait
je
push
xchg
jo
stos
or
inc
push
ret
jmp
pop
mull
mov
or
je
int
sti
inc
mov
cld
add
in
shrb
mov
aaa
mov
arpl
xchg
xchg
push
sub
inc
mov
das
loopne
test
loope
das
and
std
rcll
cli
xchg
outsl
cltd
mov
iret
mov
les
pop
imul
mov
dec
sbb
inc
mov
loopne
fwait
cmp
mov
adc
pop
mov
inc
xor
add
addr16
mov
orl
sbb
fstps
outsl
out
stos
fwait
sbb
repnz
add
fs
insl
and
mov
dec
cwtl
dec
sub
mov
xlat
jmp
outsl
jnp
je
or
insl
mov
or
xchg
sahf
rcrb
les
add
pop
ficompl
clc
sub
and
mov
in
xor
inc
aam
xor
mov
jl
insb
jne
cmp
jl
loopne
jo
add
repnz
mov
cmp
sbb
sbb
xchg
add
out
sahf
xor
pop
sbb
cmpb
lock
push
insl
dec
add
and
mov
inc
inc
or
test
fistpll
jle
sbb
pop
xchg
stos
or
jmp
push
pop
push
xchg
call
andb
loop
adc
das
inc
jmp
or
fisubrl
cmc
adc
mov
push
lods
pusha
and
sub
je
pop
aam
jo
aam
mov
cvtdq2ps
sub
add
fmuls
xchg
ljmp
or
mov
add
fldt
cmpsb
ss
pop
add
imul
cmc
push
rorl
in
je
mov
scas
xchg
cmc
sbb
mov
xchg
push
cmp
bound
xchg
cmp
in
mov
fbld
fidivl
cmp
in
xchg
or
sbb
loop
stos
inc
jp,pn
sbb
clc
inc
cmp
in
mov
mov
inc
jnp
adc
and
mov
fimull
cmpl
add
outsl
les
adc
sbbb
mov
leave
inc
inc
inc
sub
ljmp
popf
mov
scas
gs
in
arpl
mov
push
jne
pop
inc
testb
jne
out
mov
orb
loope
adc
lret
or
test
fsub
mov
push
adc
scas
les
fstpl
jne
or
or
pushf
aam
mov
pop
push
xor
adc
fs
iret
jl
aas
call
mov
pop
push
rclb
jmp
cmp
sti
lds
rolb
inc
pop
mov
adc
mov
sbb
sub
into
repz
js
test
cltd
dec
aam
lods
cmp
adc
add
push
xor
xor
loopne
and
aam
xor
fiaddl
es
jecxz
je
adc
std
or
insl
mov
or
push
mov
push
mov
push
push
inc
shrl
lret
mov
outsl
out
sub
and
inc
mov
je
push
bnd
std
outsb
inc
push
xor
insl
and
loope
inc
mov
jp
rcr
cmp
enter
in
push
arpl
add
mov
in
lods
repnz
in
js
mov
je
mov
fildll
sub
outsb
and
inc
lcall
cs
sbb
jno
das
fldl
insl
gs
es
adc
aaa
pop
mov
adc
int3
jb
dec
xor
sbb
xor
and
das
ficompl
xor
js
adc
push
lods
mov
imul
or
daa
cmc
movsl
test
in
inc
pushf
xor
pop
inc
lret
mov
call
or
inc
outsl
push
cmp
xchg
dec
pop
and
push
inc
aad
ja
sbb
fdiv
dec
movsb
in
inc
add
pop
xchg
mov
imul
and
insl
cld
outsl
jp
pop
repz
insb
add
jnp
std
call
test
cs
or
or
sub
nop
cmpsb
xor
inc
jb
mov
gs
xchg
jne
jp
imul
push
dec
jmp
jg
test
bnd
add
sub
cmp
jmp
push
sbb
gs
mov
inc
sub
and
outsl
push
sub
and
and
push
mov
jge
outsl
fwait
cli
and
and
xor
pop
pop
inc
lods
mov
bound
jmp
cmp
and
add
pop
and
sub
outsl
mov
je
ret
movsl
fildll
aad
fsubr
clc
sbb
test
fisttps
xchg
cmpsb
mov
test
pop
movsb
sbb
iret
fildl
decb
or
inc
test
inc
add
cli
lods
add
shrb
mov
or
cmp
mov
inc
movsb
jns
mov
stos
xchg
fwait
jne
pusha
pop
stc
cmp
cld
data16
cli
sbb
inc
xor
mov
call
cmc
pop
dec
adc
add
jmp
fistpll
mov
subl
inc
cld
call
testl
stos
sub
pop
rolb
inc
in
in
xchg
mov
lret
outsl
shll
out
adc
jo
inc
sub
xchg
mov
adcb
sub
dec
sub
fcmovnbe
outsl
xchg
neg
cmp
clc
xchg
inc
xlat
mov
push
jecxz
cwtl
and
sub
or
data16
xor
inc
xor
outsb
inc
aam
aam
leave
add
sbb
sub
inc
sbb
pop
shr
push
sar
push
int
sub
mov
fiadds
or
cmpsl
lahf
sahf
sub
mov
insb
sub
sbb
push
cli
inc
inc
rcrb
mov
mov
adc
jge
sbb
inc
test
movsb
lock
data16
shrl
jmp
push
mov
imul
inc
mov
in
xor
aaa
pop
loopne
in
movsl
out
jnp
arpl
cmc
xor
cmp
insl
lods
insb
testb
dec
je
inc
push
faddl
mov
in
sub
adc
adc
xor
out
dec
push
cmp
shrl
pop
mov
cmpsl
in
jbe
mov
idivb
inc
cmp
cld
mov
add
pop
cmp
and
jb
xchg
int3
sbb
or
jmp
fidivl
jbe
inc
push
fdivs
cmp
dec
and
jmp
or
or
mov
inc
sub
les
rorl
roll
dec
jbe
test
test
pop
inc
pop
arpl
dec
fcoml
dec
sbb
jp
push
lock
adc
mov
hlt
cltd
mov
inc
or
pop
enter
sti
sbb
fistl
pop
and
inc
and
xor
sub
add
push
je
lock
stc
ja
js
cld
je
cli
jg
mov
jg
loopne
js
std
addr16
loop
es
imul
dec
inc
jae
adcl
mov
inc
xchg
repnz
jl
jo
push
mov
addr16
and
mov
outsb
fildl
push
int
and
outsl
jae
outsl
imul
push
adc
std
mov
in
adcb
cmpsl
call
fwait
jecxz
sbb
cli
imul
pusha
push
or
test
dec
add
test
xor
sbb
faddl
fists
mov
sbb
orl
adc
pop
sub
pop
push
and
xor
jmp
mov
mov
fsubl
pop
pusha
push
repz
xor
test
ficoml
push
or
aam
imul
pop
aad
mov
add
or
test
orb
inc
xchg
jb
enter
loope
mov
lret
cltd
inc
lods
je
test
mov
in
inc
dec
aad
push
enter
mov
cmp
xchg
push
inc
add
mov
fdivl
addb
cmp
or
add
push
pop
loop
fwait
jp
fistps
call
mov
add
mov
lea
jne
stos
dec
add
or
es
aam
push
inc
jno
imul
call
jg
sbb
adc
push
xorb
adc
cmp
mov
inc
and
sti
mov
negb
and
adc
pop
xchg
lods
out
sbb
js
mov
pushf
mov
sub
mov
std
fistps
fadds
push
sub
jo
rorl
xor
rcr
loopne
movsl
push
push
fdivs
rolb
dec
cmp
outsb
adc
ljmp
bound
jg
inc
pop
inc
mov
pushf
add
in
lea
imul
push
mov
jmp
insl
push
call
rorl
adc
les
mov
addb
cmpsb
dec
aad
imul
xchg
ja
sub
lock
shll
clc
pop
pusha
and
das
sub
mov
push
sub
pop
push
imul
mulb
fdivrp
rorl
sub
push
or
in
adc
dec
and
push
cmp
xor
mov
add
insl
dec
cmp
push
pop
xchg
sub
lods
imul
or
insl
and
dec
and
bound
ja
call
imul
ret
adc
or
cmpsb
xor
inc
fucomi
jmp
aad
mov
sbb
sbb
dec
push
sub
pop
or
mov
adc
iret
pop
loope
push
std
jbe
mov
mov
inc
mov
push
pop
aam
mov
dec
insl
mov
mov
adc
sbb
xor
mov
add
and
lock
lea
imul
sbb
xor
cmc
imul
int3
add
add
mov
rcrb
in
mov
mov
insb
pop
push
push
push
call
adc
outsb
xor
insl
mov
push
insl
push
mov
sbb
ljmp
dec
pop
jmp
aad
shlb
push
imul
ljmp
dec
mov
arpl
add
cmp
pop
roll
and
icebp
pushf
pop
movaps
das
jo
repnz
popa
xor
push
aaa
mov
loop
addl
cmp
and
outsl
loopne
xchg
ficoml
loopne
pop
stos
loopne
jg
ret
test
adc
add
mov
xchg
mov
call
or
fcomps
push
fs
cltd
stos
push
mov
fwait
arpl
rolb
int3
insl
fcom
push
jl
inc
imul
popf
loopne
xor
loopne
jne
rolb
add
add
pop
mov
push
loope
ljmp
divl
lods
push
mov
jg
xchg
sbb
inc
shl
xorb
call
or
aaa
je
test
inc
test
mov
out
fsqrt
pushl
pop
or
dec
inc
mov
dec
mov
roll
pop
shrl
pop
sbb
cmp
mov
jp
pop
stos
jne
cs
jae
mov
fdivrs
stc
jb
in
sahf
and
dec
rorb
stos
jns
mov
xor
mov
aad
sub
loope
inc
mov
out
jns
xchg
adcl
pop
insb
inc
cli
out
sub
sub
add
mov
aas
adc
popl
jmp
inc
sbb
push
aaa
cmp
sbb
dec
mov
pop
pop
xor
jb
nop
popf
inc
je
push
cmpsl
pop
or
adcl
cmp
push
shlb
inc
mov
cltd
call
ss
jmp
adc
mov
or
jl
jg
call
and
sub
cmp
out
fildl
dec
pop
jbe
push
adc
mov
mov
addr16
pop
int
es
imul
inc
icebp
rorl
inc
lods
push
cs
add
cmp
hlt
cmp
outsb
lock
lret
push
addb
loope
and
sub
jle
xchg
mov
inc
push
mov
jg
stos
push
imul
pop
mov
sbb
mov
les
mov
mov
and
stos
sahf
adc
loopne
adcl
xchg
nop
push
inc
aaa
test
pushf
cli
xor
mov
mov
in
fnsave
mov
out
xchg
inc
and
mov
test
and
add
ljmp
dec
pop
mov
cmp
sub
or
fdivrs
pop
add
mov
je
push
or
insl
mov
pop
mov
xor
push
jo
push
ja
orl
and
push
je
or
jmp
lods
adc
jle
pusha
movsl
mov
fs
jmp
xor
push
rcl
jmp
insl
push
mov
in
sub
aaa
mov
sub
fwait
xor
es
mov
cs
ss
stos
inc
add
cmpsb
or
mov
test
pop
dec
or
pusha
je
or
dec
jg
movsl
cmp
orl
pop
outsl
xchg
jbe
test
or
dec
subb
lea
lcall
scas
test
cmp
fldlg2
sbb
pop
mov
add
or
in
jle
shll
sbb
daa
je
dec
pop
dec
test
or
jge
into
push
in
outsl
mov
sub
cwtl
shl
outsl
mov
test
popa
adc
je
leave
inc
cmp
pop
nop
arpl
pop
sub
cld
mov
rcr
adc
ds
pusha
add
dec
adc
loope
xor
fs
loop
add
bound
mov
loop
mov
xor
or
and
test
jnp
lea
pop
andl
adc
fildll
rcl
inc
mov
sqrtps
sbb
fstpt
jl
lods
adc
lahf
sub
mov
and
inc
mov
sbb
or
adc
ficoml
and
mov
jmp
xorb
mov
dec
andb
je
jp
test
xchg
jo
repz
jge
pop
mov
clc
mov
test
inc
addb
stos
push
adc
push
xor
or
pop
movsl
std
decl
daa
dec
mov
fdivrp
lds
xor
decb
jle
xlat
add
and
lock
ja
ret
inc
mov
notb
ss
test
cmp
in
or
push
dec
jge
xchg
addr16
test
ficoml
in
mov
loopne
and
orb
xchg
icebp
stos
pop
or
ds
mov
out
mov
and
adc
jle
add
add
inc
jmp
pop
call
add
insl
stos
mov
je
cmp
fmuls
jg
cmpsl
inc
cli
rolb
jl
xor
shlb
push
sub
push
enter
mov
sub
jb
mov
jge
out
sbb
mov
imulb
inc
or
in
cltd
in
sub
lods
loopne
sti
xchg
xlat
ljmp
pop
lock
adc
pop
lret
push
lods
test
sbb
sub
sbb
push
mov
sub
test
aaa
sub
push
or
push
inc
out
bound
bound
inc
xor
scas
lahf
mov
dec
loope
fcmovnbe
adc
inc
aam
mov
js
inc
add
iret
out
or
stos
arpl
or
idiv
subl
fwait
adc
pop
cmpb
divb
movsb
mov
cmpl
dec
cmp
lods
mov
call
pop
mov
in
or
in
inc
push
push
jge
inc
pop
adc
and
sbb
jmp
sbb
int
ficoml
in
testl
mov
in
cmpsb
or
sbb
and
outsl
stc
xor
inc
enter
cmp
and
cmpsl
popa
test
inc
mov
inc
scas
or
dec
faddl
mov
inc
jo
loopne
pushf
arpl
or
cmpsb
clc
pop
test
adc
mov
ss
pop
and
fldt
das
mov
jecxz
rorl
aas
shlb
mov
mov
repz
orb
jae
dec
movsl
add
clc
mov
ja
fnstenv
pop
inc
mov
pop
sbb
push
adc
inc
cltd
adc
mov
mov
repnz
aam
inc
nop
push
push
sub
rorb
enter
or
mov
xor
and
push
daa
mov
xchg
test
add
sbb
or
adc
sub
movsl
jle
or
adc
in
mov
mov
popa
bound
cmpl
xchg
add
rcrl
cmp
fmuls
icebp
stos
or
pushl
aam
mov
xor
and
inc
cmpsb
popf
mov
or
test
inc
cmp
pop
loope
mov
lock
dec
test
inc
push
xor
pop
xchg
and
mov
or
outsb
xlat
or
sbb
cmp
pop
ds
cmp
adc
or
add
dec
aam
cmp
incl
mov
into
in
mov
repnz
jl
dec
stc
and
inc
mov
pop
neg
or
mov
inc
jne
inc
andl
mov
or
inc
popf
dec
gs
and
sti
bound
add
repnz
sbb
or
pop
cmpsb
mov
inc
and
nop
cmpsl
loop
push
test
addl
cmp
jg
stos
or
inc
iret
adc
cli
adc
mov
imul
mov
pop
shlb
je
inc
mov
cmpsl
push
jg
pop
or
inc
ljmp
subb
pop
loopne
or
pop
dec
cmp
in
or
mov
mov
shlb
movsl
leave
or
mov
push
xor
jmp
or
loopne
test
inc
aas
divl
add
fldl
sahf
inc
data16
adc
push
jb
rolb
inc
cmpl
and
adc
jg
jb
int
jne
mov
and
pop
mov
push
dec
jb
lock
daa
sbb
int3
dec
mov
sub
add
std
daa
fidivs
and
xor
pop
push
inc
fcmovu
jle
std
adc
and
and
mov
out
gs
add
lcall
jp
stos
adc
push
es
outsl
xchg
int3
or
mov
push
mov
lds
test
push
sub
ss
push
rcrb
lods
add
and
and
sub
xor
or
xchg
adc
mov
cmp
jl
sahf
sub
xchg
jge
adc
pop
jmp
add
jle
cmp
les
or
fidivs
add
or
pop
call
sbb
jb
jns
mov
pop
daa
push
je
add
add
xchg
or
mov
mov
lea
test
cmp
push
push
outsb
jl
pop
xchg
js
pop
movl
popa
cmp
iret
inc
cmp
and
push
fildll
sbb
xchg
mov
mov
lret
sbbb
repz
out
fdiv
xchg
sub
popa
or
or
dec
or
xchg
push
adc
out
loopne
dec
je
out
ljmp
stos
jmp
testl
xchg
test
push
xor
shll
mov
pop
call
dec
cmc
pop
adc
outsb
cmp
push
mov
or
mov
and
inc
loopne
mov
cltd
andb
lret
popa
dec
pop
add
jge
or
xchg
fisubrl
lods
fistps
aam
outsl
aam
or
add
fimuls
es
insb
gs
divb
sbb
repnz
outsb
cmc
inc
fistpl
dec
xchg
jb
mov
or
xor
pop
stos
in
cmpsb
mov
add
inc
mov
adc
fwait
pop
rcll
cmp
mov
rclb
cmp
sbb
fadds
mov
mov
xchg
imul
scas
daa
cmp
push
lods
and
sbb
adc
xchg
cmp
add
add
push
adc
int3
mov
sbb
fs
pop
adc
jne
adc
dec
addr16
jg
rolb
subb
mov
outsl
xor
mov
lock
imul
inc
in
xor
nop
or
dec
sbb
sub
mov
repz
mov
mov
inc
fistl
iret
mov
push
arpl
inc
pop
lock
in
and
adc
movsl
das
mov
adc
rcll
or
mov
sub
test
dec
adc
inc
adc
insb
or
push
add
push
fistpll
jle
xor
test
repnz
jns
add
stc
or
inc
setb
insb
fbstp
in
mov
jle
jp
test
inc
imul
pop
sub
ficoml
push
cld
add
xchg
xor
jge
je
jmp
xor
inc
cld
in
xlat
outsb
dec
lds
mov
fstpt
jle
and
or
push
pop
fcoml
dec
movsb
hlt
inc
mov
pop
add
jp
leave
mov
adc
inc
and
lods
inc
mov
mov
out
aas
maskmovq
idivl
pop
jecxz
aaa
int
out
sub
movsl
pop
push
pusha
mov
inc
push
or
push
aad
movsl
test
or
js
or
lods
mov
and
push
mov
loopne
mov
jnp
int
out
adc
inc
fidivl
imul
dec
fisttpl
adc
inc
es
sbbl
lcall
jb
pop
jmp
incb
mov
add
fisttpl
sbb
add
add
push
cmpsl
leave
jnp
inc
fistps
jmp
call
and
data16
sub
cli
push
jb
hlt
or
fisttps
gs
or
sub
mov
mov
mov
jmp
jb
cmc
xchg
pop
call
jnp
and
pminub
cmp
icebp
scas
rcll
sahf
mov
or
hlt
in
out
or
adc
mov
jb
mov
sub
dec
sub
xor
xor
mov
xor
add
sub
jg
scas
mov
inc
enter
xchg
lcall
scas
sub
jg
jne
xchg
rcrb
mov
add
sbb
jns
lods
outsb
clc
xchg
andl
push
out
cli
push
mov
mov
xchg
cld
outsl
rcll
das
adc
and
outsb
pop
xchg
pop
icebp
adc
sbb
insb
inc
das
or
adc
jns
push
mov
rclb
or
or
pop
jl
add
sub
rcl
cs
xor
stos
shll
nop
mov
dec
out
jmp
or
je
mov
out
xchg
inc
xchg
adc
add
lods
sbb
xchg
mov
mov
push
faddl
inc
add
or
mov
aaa
pop
inc
dec
push
push
in
pop
dec
sub
andb
ss
and
sub
mov
cmpsb
mov
ss
push
mov
add
adc
inc
mov
sbb
ret
je
sbb
pop
hlt
lret
jmp
sub
or
out
shr
ficoml
adc
xchg
sub
lods
jl
nop
or
jp
hlt
sbb
dec
pop
rorb
lret
repz
mov
inc
mov
repz
and
xor
fistpl
insb
lock
gs
xchg
mov
pusha
add
out
add
push
jmp
jbe
mov
dec
movlps
cmp
inc
push
loope
div
icebp
mov
jle,pn
bound
aaa
outsl
add
int
aam
adc
xorb
mov
push
pusha
fwait
stos
or
out
and
dec
fyl2x
jge
push
pop
test
lods
hlt
cmp
shll
add
insb
and
and
mov
or
and
push
lods
push
dec
mov
push
jmp
or
mov
scas
jecxz
jne
adc
fistps
cs
sub
aam
mov
add
xchg
or
imul
les
jbe
out
insl
outsl
ja
sub
and
stos
or
popa
mov
fadds
mov
mov
test
out
dec
jle
js,pt
dec
jle
push
xchg
sbb
cs
adc
xchg
insl
jg
mov
pop
test
and
lock
lret
sub
add
and
or
lcall
ljmp
and
insl
mov
andb
sbbl
or
nop
add
push
or
xchg
fcmovnu
mov
push
jg
out
or
sub
aad
jbe
sub
sbb
mov
icebp
push
mov
inc
aad
cmp
mov
jl
jmp
out
push
fdivrs
sub
xor
xor
loopne
mov
lcall
mov
jge
or
leave
push
testb
mov
inc
stos
cs
mov
mov
adcl
jno
std
sbb
inc
pushf
in
jne
mov
cld
adc
sahf
dec
outsb
dec
nop
xor
adc
jmp
hlt
das
repz
in
adc
mov
pop
fisubrl
jle
cli
into
addb
je
adc
sub
adc
jle
add
cld
insl
or
imul
stos
cmp
lods
gs
test
je
and
sbb
jecxz
inc
ret
cmp
mov
or
call
psllq
fildll
lock
je
jne
js
cli
nop
lea
dec
cld
aas
das
in
inc
data16
fistps
je
add
push
les
add
pusha
loope
inc
bound
fwait
or
add
dec
lock
pop
jns
sbb
outsl
pop
das
add
cs
das
aaa
sbb
pop
aam
test
js
rol
adc
addr16
into
xlat
and
dec
outsl
fcmovnu
sbb
lods
adc
xor
aaa
push
xorl
mov
sbb
pop
mov
add
into
mov
mov
jmp
mov
sbb
andb
je
das
xchg
repz
mov
cmpl
dec
pop
sub
dec
or
push
jne
sbb
cmp
pop
js
inc
in
in
or
or
ret
sub
fcmovu
and
and
mov
inc
inc
and
js
sbb
mov
push
push
pop
jl
jg
sbb
sbb
pop
adc
inc
and
repnz
or
sbbl
pop
adc
mov
pop
push
fistl
lock
clc
mov
mov
and
insb
xor
sub
mov
adc
sbb
adc
cmc
pusha
adc
pop
mov
cmpsb
outsl
shl
jle
jmp
cmp
adc
sub
inc
fistl
test
mov
inc
or
cmpsl
bound
jne
dec
sahf
xor
jne
ljmp
jb
aam
and
cmp
pop
sbb
dec
fisubs
sbb
cmpsb
arpl
dec
out
fistpl
jle
cmp
push
xor
mov
icebp
incl
cmpsb
test
jmp
je
mov
ss
or
negb
test
insb
xor
adc
loopne
icebp
jne
cltd
dec
cmp
jne
popa
pop
inc
and
xor
xchg
out
or
push
sbb
mov
cmc
add
test
inc
sahf
cmp
aaa
mov
pop
inc
cmc
in
lret
sub
push
cmp
jge,pt
and
insl
ss
fnsave
insb
add
push
jmp
test
out
pop
ret
xchg
or
pop
and
repnz
pop
push
pop
xor
repz
pop
and
xchg
js
adc
test
ficompl
fidivrl
imul
mov
jmp
xchg
lcall
mov
jne
adc
stos
dec
stc
in
ja
pop
mov
pop
or
push
and
neg
jne
push
mov
test
fisttps
xor
mov
mov
adc
dec
daa
or
add
xor
ret
inc
cmpsb
inc
xchg
xor
fcmovnb
cmpsl
into
or
je
push
and
scas
icebp
aaa
fdivrl
and
loopne
sahf
mov
jne
xor
push
aaa
fstl
jo
inc
mov
push
xor
jbe
test
inc
shll
in
dec
cltd
cmp
mov
outsl
jp
lahf
lret
jp
in
loopne
xchg
mov
gs
mov
lcall
cltd
mov
push
rcrl
or
xor
lret
aas
popa
lea
cli
dec
das
icebp
push
mov
adcb
repz
std
push
out
add
fists
mov
xchg
cmpsb
shlb
and
into
idivl
popl
inc
cli
mov
pop
push
stos
inc
mov
addl
pop
cmp
push
call
or
leave
jno
pop
shrb
mov
shlb
sub
xor
sub
mov
lds
xchg
mov
stc
lock
jg
mov
cli
clc
fcmovnb
clc
shrb
add
rcrl
jl
pop
inc
sbb
sti
push
sti
jbe
mov
adc
cmp
pop
sbb
pop
xchg
jle
push
js
or
lret
jle
outsl
scas
outsb
inc
and
test
and
jp
mov
push
cld
jg
dec
je
pusha
push
pop
imul
jno
or
std
push
js
icebp
ret
in
imul
cmp
and
xor
out
leave
mov
das
xchg
cmpl
push
inc
arpl
sub
orb
and
or
sbb
mov
test
je
mov
bound
ret
add
pop
sbb
inc
dec
mov
dec
test
fsubrs
mov
push
cli
adc
js
in
or
idiv
pusha
pop
sbb
cmpsl
xchg
mov
stc
inc
call
mov
add
test
shll
mov
or
pop
ret
mov
in
pop
inc
js
lcall
adc
les
xor
mov
mov
inc
jecxz
add
xchg
pop
mov
mov
sbb
mov
ja
test
in
frstor
mov
les
and
mov
lods
test
es
outsb
sbb
push
push
xor
cmp
push
pop
dec
xor
in
dec
fnstsw
inc
pop
adcb
xor
or
sub
stc
mov
daa
sub
std
inc
frstor
rcrl
add
test
std
cli
call
push
inc
clc
push
stc
inc
lds
mov
xchg
xchg
sbb
pop
pop
and
aaa
xchg
outsb
mov
push
mov
and
pop
out
inc
xor
iret
xchg
fldt
pop
aam
inc
lods
jne
fists
add
les
call
add
cmpsb
add
xchg
es
and
rcll
sbb
add
lock
gs
repnz
sub
dec
sbb
sub
fucomip
lods
stos
xchg
push
adc
and
lret
nop
add
xorl
movsb
adc
sbb
push
insl
rcll
cmpsl
inc
add
add
in
jns
das
pop
loop
stos
outsb
shr
dec
aad
mov
insl
fildl
ss
mov
and
sub
cmp
cmp
xor
sub
aas
dec
insb
mov
out
mov
cmp
or
inc
in
bound
jl
push
daa
insb
sbb
bts
outsb
faddl
lret
into
cmp
sar
push
xchg
and
outsl
mov
fnstsw
mov
xchg
or
sbb
and
push
mov
rclb
hlt
insl
sahf
mov
and
lods
mov
movsb
cmp
call
pop
test
cmpl
ja
dec
pop
jo
inc
gs
adc
imul
push
add
cli
or
loopne
sbb
es
mov
out
pop
cmpsl
jmp
or
or
mov
popa
jecxz
je
in
loop
shll
cmp
xchg
nop
ja
pop
pop
xor
mov
cli
add
mov
push
adc
aas
add
sbb
clc
mov
mov
cmp
mov
lcall
jne
pop
adc
or
or
mov
enter
xchg
pop
pop
test
ljmp
mov
test
sub
push
dec
rorb
dec
or
jg
sub
repz
jmp
cli
mov
shr
mov
mov
push
ljmp
jg
dec
push
cld
leave
call
std
jns
jbe
pop
mov
mov
and
mov
stc
das
sbb
push
or
add
dec
push
xchg
jg
ljmp
adc
add
push
add
rcl
sbb
mov
inc
dec
jmp
insl
xor
and
push
jne
icebp
add
mov
adc
out
outsb
xchg
xor
sub
adc
jge
iret
or
inc
fsub
pop
add
cmp
jge
pop
push
mov
xchg
mov
jbe
dec
inc
xor
push
outsl
adc
mov
lret
inc
icebp
popf
mov
adc
add
loop
inc
jne
decl
aaa
mov
in
pop
call
sub
inc
adc
adc
inc
ror
push
mov
pop
fwait
sub
hlt
inc
mov
adc
jae
mov
out
mov
sbb
shll
sbbb
out
or
add
lods
call
mov
mov
arpl
fildll
in
es
popa
les
jg
outsl
add
test
pop
xchg
lahf
sbb
xor
mov
in
das
outsb
push
adc
aaa
sub
mov
mov
bound
mov
mov
pop
fildl
adc
decl
shlb
in
pop
clc
cmp
std
bound
daa
or
iret
mov
jge
xor
push
sahf
sub
pop
adc
outsl
pop
mov
mov
test
sarb
cmp
pop
inc
and
icebp
or
sub
mov
push
adc
daa
sub
mov
mov
pop
stos
daa
clc
imulb
add
jne
in
adc
lea
mov
das
add
js
xor
mov
inc
movsl
mov
divl
in
cmp
inc
mov
pop
push
mov
push
out
jo
xchg
cmp
cmp
in
inc
dec
ds
mov
sub
mov
leave
ss
add
enter
mov
sub
jp
xchg
popa
mov
bound
pop
lods
jge
push
loop
int
sbb
cmp
dec
and
fs
punpckhdq
jg
icebp
pop
inc
out
jle
inc
enter
fisttpl
pop
jg
movsl
adc
pop
loop
jge
adcb
cmp
shll
aaa
inc
sbb
insl
adc
mov
jb
xchg
sub
xor
fisubrl
ja
adc
cli
mov
sub
adc
lahf
push
sbb
push
call
repnz
ja
mov
mov
cmp
dec
fdivs
rcll
mov
outsl
jg
pop
mov
mov
jb
rorl
cmc
or
dec
or
pop
push
loop
add
fs
adc
add
mov
mov
push
or
jmp
outsb
jae
cmp
enter
je
mov
fmuls
shll
ret
or
mov
sub
pop
icebp
sahf
pop
xorl
xchg
stos
cmp
test
and
sbb
outsb
adc
pop
out
mov
dec
std
cmp
cld
jl
loopne
pop
mov
rorb
pop
mov
fadds
ficomps
sub
mov
mov
push
andb
and
pop
and
cli
movb
adc
cmp
sbb
and
and
sbb
jbe
or
dec
jo
mov
sbb
xlat
mov
jmp
aaa
hlt
sub
loopne
push
fildll
adc
fstps
stc
and
mov
std
sbb
adc
adc
sub
mov
jl
inc
popf
and
xchg
test
add
test
fcmovnbe
inc
roll
xor
inc
pop
jecxz
mov
inc
or
and
testb
push
sub
adc
mov
lds
aas
pop
push
mov
fwait
call
fidivrl
adcb
inc
adc
rorl
adc
mov
mov
sub
dec
pop
sbb
mov
insb
stos
push
mov
cmp
mov
lret
sbbb
push
mov
add
push
cwtl
or
out
mov
fsubrl
inc
inc
lods
ss
daa
sbb
push
stos
add
xor
xchg
xor
jp
xor
std
inc
and
dec
rcrl
adc
mov
add
loop
adc
decb
scas
std
push
and
add
or
and
mov
mov
fistpll
inc
sub
pop
xlat
call
add
and
xchg
jmp
sbb
inc
sub
test
mov
inc
jno
test
dec
mov
bound
push
cltd
sbb
ficoml
js
cltd
dec
pop
add
xor
jg
fbstp
daa
mov
ss
pop
cmp
lea
mov
outsl
jg
mov
xor
data16
pop
inc
mov
rcll
jns
cmp
add
add
and
mov
mov
mov
stos
pop
in
jmp
jo
mov
or
dec
or
sub
adc
push
es
add
bound
xchg
push
rcl
mov
mov
icebp
jge
and
fwait
call
dec
push
add
or
jae
inc
jmp
cmp
cmp
clc
aas
imul
and
and
mov
fwait
pop
adc
orb
xchg
loop
mov
push
je
push
cmp
cmp
adc
mov
fcomps
in
daa
fcomip
push
mov
mov
adcb
dec
lcall
mov
outsl
and
das
lock
je
jo
adc
insl
out
cwtl
pusha
lds
dec
je
pop
jno
sub
and
xchg
and
fstl
aam
stc
mov
cld
fisttpl
sub
div
nop
jae,pt
sub
adc
sub
push
mov
adc
inc
sbb
cwtl
frstor
jb
dec
loop
stos
push
pop
jnp
jbe
loop
call
imul
fidivs
gs
mov
sub
or
js
push
jge
test
shll
cmp
xchg
or
or
add
sbb
add
stos
or
in
ds
leave
js
fbld
loope
dec
inc
negl
test
pop
addb
or
and
fdivl
or
jle
mov
sarb
xchg
stos
or
ret
nop
test
push
and
add
mov
orl
imul
xchg
jae
mov
mov
imul
leave
jmp
sub
ja
fsubs
dec
inc
setle
fimuls
shll
lahf
js
pop
mov
pop
xlat
cmc
aam
adc
aaa
insl
cmp
lret
inc
in
mov
sub
imul
shrb
adc
add
sub
aas
inc
or
js
inc
jecxz
add
je
std
call
mov
shrb
push
ss
js
inc
insb
cli
jle
ss
push
test
push
adc
add
addl
push
icebp
sahf
lods
adcl
iret
cmpsl
cmc
popf
iret
mov
pop
adc
mov
inc
cs
mov
mov
adc
pop
xchg
push
cmp
push
shlb
fistps
sti
jae
ljmp
sbb
push
fwait
jmp
adc
bound
icebp
stos
inc
rol
mov
ds
jl
xor
scas
sbb
bound
bound
push
jle
lret
sbb
or
call
push
pop
cltd
sbb
loop
add
mov
and
pop
lea
mov
inc
cmp
popf
push
pop
or
push
es
scas
sub
pop
inc
bound
adc
push
inc
sbb
or
adc
xchg
ljmp
or
sbb
push
fidivl
mov
loopne
jecxz
imulb
stc
sub
mov
rcll
movsb
or
rcrb
cmp
cmp
cmp
push
jae
cmc
pop
xor
cmp
repnz
sbb
dec
push
cmp
jecxz
cmpsb
stos
ficoml
pop
sub
xchg
outsl
mov
mov
rol
xor
sbb
or
xchg
push
and
lea
mov
clc
or
push
jne
xchg
xchg
xchg
into
out
or
sub
ja
adc
mov
mov
in
shlb
pop
mov
lock
lea
in
sub
cli
test
jae
cld
xchg
fistl
outsl
ss
cmp
aas
in
aaa
mov
adc
mov
ja
mov
push
inc
cmp
push
insl
insb
ds
daa
shlb
add
push
loope
dec
dec
daa
xor
cltd
sub
in
mov
in
push
test
add
push
fstpt
fneni(8087
inc
add
mov
mul
popa
adc
inc
and
sbb
inc
xchg
cmp
or
insl
sti
and
je
popa
sarb
insb
call
pop
aaa
xlat
cmp
mov
inc
push
into
inc
jge
daa
movsb
mov
andl
push
jge
pop
pop
dec
xchg
int
sbb
mov
pop
out
push
dec
xor
inc
mov
call
fcmovu
mov
add
bound
std
and
add
and
inc
cmp
or
mov
or
aad
sub
rcrb
es
movb
mov
sub
sbb
addr16
push
jmp
in
mov
add
add
sti
ds
ss
test
je
stos
imulb
loopne
int3
mov
dec
jae
fmulp
inc
mov
shlb
jae
cld
xchg
and
stos
lds
mull
inc
lahf
jecxz
pop
push
or
movsl
inc
sbb
sbb
xchg
sub
imul
scas
mov
and
inc
xor
rolb
adc
sahf
xor
popf
pop
pop
mov
fisttpl
clc
adc
rorb
and
movsl
pop
in
je
jbe
xchg
mov
sbb
mov
inc
mov
adc
add
sarl
loope
fldl
repz
adc
adc
and
cmp
push
push
mov
inc
pop
adc
test
push
adc
loope
cmp
or
cmp
and
ljmp
je
push
in
xor
lret
cli
inc
data16
mov
fdivrs
cli
dec
mov
insb
stc
mov
xor
and
xchg
inc
mov
jmp
mov
sbb
pop
je
cmc
pop
jae
orl
xor
cmpsl
adc
and
adc
and
jo
cmpb
lods
xor
cwtl
out
shrb
mov
jnp
mov
loop
fstpt
inc
push
jecxz
push
mov
in
inc
xor
inc
jnp
push
sub
loopne
or
jae
cltd
mov
cmpsb
lds
out
movsb
mov
and
addr16
or
dec
test
xor
lahf
sbb
sbb
ds
pop
pop
bound
call
daa
adc
push
cmp
or
or
add
inc
mov
add
mov
push
insl
mov
push
mov
adc
lahf
adc
inc
sarl
jge
add
xor
dec
call
jbe
test
lods
js
int3
out
outsl
rorl
and
inc
or
shlb
out
xor
cld
xorl
xchg
gs
dec
adc
arpl
mov
mov
mov
arpl
lds
ficoml
lea
mov
call
stos
or
rcrb
push
les
icebp
cltd
je
push
movsb
xor
add
mov
in
jo
gs
jmp
daa
cmp
and
test
das
push
scas
lcall
or
leave
xchg
xor
icebp
dec
nop
and
add
xchg
clc
jle
pop
or
push
in
fnstsw
cwtl
mov
fcoml
jne
jb
lock
in
sub
push
fsubrs
fildl
inc
mov
pop
dec
pop
cmp
insl
adc
or
push
mov
and
ja
shrl
pop
lret
sub
imul
pop
mov
test
insb
pop
sub
push
dec
sbb
jbe
pop
hlt
mov
adc
jbe
aad
fistl
les
pop
stos
sbb
push
sbb
hlt
in
push
mov
xor
dec
sbb
and
mov
adc
clc
out
fidivl
pop
jbe
mov
add
mov
fs
jno
fildl
ja
or
andl
mov
rorl
ss
dec
dec
std
test
ljmp
leave
hlt
push
in
mov
enter
in
test
or
inc
imul
xor
daa
clc
sub
cmp
in
sbb
sub
add
pop
push
cli
shrl
sub
push
cltd
mov
das
cs
mov
lret
mov
mov
rolb
pop
dec
sub
notb
adcl
sbb
decb
or
or
jmp
pop
pop
subb
je
xor
test
pushf
sti
jg
mov
popf
sub
sbb
jne
stc
scas
inc
sub
and
fcmovnu
mov
in
ljmp
pop
sbb
inc
dec
pop
es
clc
add
pop
adc
mov
pop
cmp
fdivl
mov
lds
push
mov
rcl
push
xor
call
test
and
or
sbb
aam
push
add
jb
dec
or
or
in
int
aaa
in
sub
sub
sbb
out
push
inc
ret
lock
test
lcall
or
aad
push
sti
lahf
xor
pop
lcall
mov
pop
pop
pop
outsl
rolb
inc
andl
sbb
or
lods
je
rcrb
mov
sti
subl
shlb
mov
dec
lahf
into
imulb
cmp
sbb
and
imul
jg
sub
push
shl
mov
inc
lea
clc
add
add
inc
xor
ds
fisttpl
cld
pop
or
push
add
lret
iret
lcall
lds
fs
add
fnstsw
divb
push
pop
imul
mov
sti
jns
fildl
fisttps
fcomi
mov
cmc
dec
mov
and
pop
mov
jne
or
sbb
fwait
mov
sbb
aaa
cmp
ret
test
stos
sub
sub
fwait
not
jp
xor
ja
sbbl
jns
test
push
jmp
and
rcl
mov
sbb
in
dec
jp
dec
fnsave
imul
fdivs
add
fsub
insb
or
jne
mov
pop
mov
push
mov
mov
mov
decl
aam
enter
filds
leave
cmp
and
or
std
incl
call
jp
scas
gs
test
mov
jmp
das
inc
cmp
lock
std
or
leave
pop
inc
push
stos
clc
sbb
pop
xor
push
mov
and
enter
mov
mov
movsb
cmc
insb
dec
or
push
push
int
mov
loop
adcl
dec
xor
mov
sahf
in
cli
iret
into
imulb
inc
insb
out
xlat
mov
sub
cmp
imul
push
jns
divl
fldl
pop
xchg
es
pop
push
adc
mov
lret
minps
hlt
imul
movsl
jae
popa
bound
mov
push
icebp
test
adc
sbb
enter
cmp
mov
popa
pop
lret
push
push
or
imul
mov
sbb
or
mov
sub
dec
xor
mov
and
jo
mov
pop
jb
jae
pusha
jbe
push
push
mov
sub
mov
sahf
pop
mov
add
lea
mov
mov
dec
mov
test
push
clc
sbb
or
cli
lea
inc
adc
ljmp
and
and
mov
xchg
adc
out
adc
das
faddl
cwtl
fsubr
aas
fcmovnu
dec
mov
xor
xchg
fidivrs
or
ss
dec
xor
and
cmp
nop
sub
aaa
call
xor
insl
push
in
out
dec
sahf
mov
and
xchg
out
call
fstps
sbb
sbb
call
jbe
pusha
add
pop
outsb
pusha
push
outsl
inc
cmpsl
dec
mov
add
and
adc
test
sbb
subps
aad
or
fildl
rcrl
dec
pop
push
sbb
mov
out
les
adc
pusha
pop
js
fcoms
lcall
ret
cmp
xchg
mov
pushf
jne
mov
mov
mov
inc
mov
out
inc
imul
jmp
add
xchg
aaa
dec
mov
push
pop
add
out
mov
fcmovnu
push
mov
push
push
xor
sub
fucomip
jbe
lods
cmp
dec
push
add
add
out
in
jb
sbb
je
popa
jb
xor
mov
or
and
cmp
test
testb
jb
sub
pop
add
push
add
push
bound
pop
xlat
fmull
dec
inc
repnz
push
incb
jbe
clc
or
inc
jbe
add
mov
fdivrl
push
jo
dec
xor
imul
mov
cmp
push
jae
jo
sub
adc
int
add
mov
inc
jg
push
jecxz
shlb
sti
fisttpl
mov
add
jl
ljmp
jg
dec
add
mov
sbb
push
out
or
addr16
mov
insb
mov
inc
mov
mov
mov
mov
add
mov
js
dec
ss
add
inc
clc
pushl
ret
add
mov
dec
push
push
dec
sub
out
xor
cmp
testl
xor
movswl
push
fwait
sti
or
mov
jb
inc
mov
dec
cmp
std
stc
dec
cmp
mov
lods
xchg
js
cmp
dec
rolb
decb
notl
inc
bound
clc
jbe
shll
push
inc
mov
cli
sti
mov
inc
mov
mov
mov
sarb
dec
sub
shrb
data16
scas
cvtdq2ps
iret
gs
dec
jns
cmp
fwait
mov
xor
dec
push
inc
je
insb
dec
gs
mov
push
mov
and
ss
and
add
inc
push
arpl
xchg
call
mov
add
mov
jg
lahf
pop
call
dec
cld
push
push
pop
imul
pop
mov
pop
mov
outsb
testl
pop
pop
in
jb
arpl
mov
js
xchg
sub
sub
cmp
mov
std
mov
outsl
lret
sub
rcrl
jb
mov
testl
outsb
sti
jg
and
jne
xor
stc
cld
mov
mov
inc
mov
insl
jbe
fisubrl
out
pop
outsl
xor
sbb
mov
pop
loope
ds
cmpsb
ljmp
arpl
mov
cmpsb
add
adc
int
adc
mov
out
pop
xor
xor
dec
inc
pop
ss
push
jne
jb
dec
mov
hlt
repz
push
push
xor
inc
inc
inc
mov
adcl
rcll
gs
out
outsb
pushf
push
dec
rolb
push
sahf
adc
push
ret
jp
sbb
mov
mov
add
insb
dec
popa
dec
lret
push
push
mov
popa
sti
fnsave
xor
scas
sbb
mov
xchg
dec
jno
in
xchg
js
dec
push
das
pop
mov
jbe
push
inc
adcl
fucomi
mov
pusha
cmp
ficoms
sub
mov
int3
add
xchg
xor
gs
mov
sub
pop
ret
xor
push
inc
jb
fsubrs
cmp
xchg
push
push
jne
mov
pop
sbb
movsb
cli
xor
lret
lock
dec
pop
sub
inc
aad
cltd
pop
cmc
dec
mov
push
movsl
ljmp
lea
and
mov
in
push
mov
dec
inc
push
outsb
mov
dec
mov
les
and
xlat
bnd
add
ljmpw
movsl
jp
fisttpl
fistpll
imul
pop
sbb
sbb
mov
scas
jbe
ja
mov
add
sbb
and
enter
mov
iret
pop
add
push
jp
ljmp
outsl
jecxz
mov
hlt
cmpl
mov
es
jp
pop
je
je
and
cmp
cli
sub
dec
sbb
pop
ja
jno
lret
and
push
inc
sbb
mov
and
push
loope
mov
sbb
sti
in
pop
pop
adc
or
mov
shrb
adc
or
sbbb
pop
mov
and
and
or
dec
std
call
mov
fs
mov
pop
aam
adc
loop
inc
jnp
je
xor
and
push
mov
fiaddl
lea
mov
mov
aam
push
lahf
sbb
and
inc
jne
das
gs
cli
pop
jmp
sub
push
mov
jge
pop
jp
cltd
pushf
cmp
mov
fs
cli
movsl
jle
push
push
mov
sbb
stc
stos
sar
mov
mov
jecxz,pt
push
arpl
inc
pushl
mov
js
decl
daa
rorb
add
xor
adc
sub
and
sbb
jp
adc
add
mov
add
inc
mov
out
sbbb
outsb
or
cmp
testl
and
movsl
cmp
ljmp
jno
roll
add
or
lcall
cli
ds
test
adc
movsl
push
mov
inc
jl
and
je
fstpt
adc
mov
push
hlt
xchg
stos
loopne
adc
test
sbb
outsl
fbstp
mov
sub
fcomps
test
vpaddq
jg
pop
mov
mov
call
rorb
pushl
call
mov
lods
or
loop
or
std
mov
inc
or
maxps
ret
push
filds
pop
pop
repz
cmp
jg
pop
and
cmpsl
inc
loop
push
and
mov
pop
shrl
inc
inc
jle
fidivs
inc
dec
adc
push
hlt
xchg
adc
jne
rorl
or
mov
rorl
and
pusha
in
pop
cmp
push
and
or
sbb
hlt
aaa
ljmp
push
fsub
fildll
mov
je
mov
sub
cli
testb
mov
mulb
arpl
int
cld
jge
dec
std
add
insl
inc
cmp
mov
xorb
xor
jmp
inc
pop
pop
lods
or
xchg
mov
call
mov
cmp
cld
stc
ret
js
enter
xor
mov
js
test
sahf
and
xor
enter
lea
inc
cli
or
decl
lock
cld
shrb
aaa
or
enter
jg
mov
stc
call
push
jbe
mov
leave
insb
das
xor
jl
pop
popf
cli
xchg
lcall
add
das
jp
aad
ss
rcrb
leave
cmp
dec
sub
or
ljmp
stos
ret
xchg
adc
aad
sti
pop
cli
dec
cmp
popa
decb
or
je
lock
jne
clc
inc
pop
jmp
and
jno
cld
fistps
loopne
mov
sub
arpl
push
sti
lds
mov
inc
imul
xor
xchg
mulb
js
dec
and
sub
divb
adc
xchg
insb
add
mov
jmp
movl
incl
push
test
bound
or
mov
xchg
popf
es
and
aas
test
jle
lea
xchg
and
dec
add
push
movsl
push
rcll
icebp
add
popf
sub
xchg
lcall
and
dec
or
dec
mov
xchg
daa
subl
ret
pop
in
je
jnp
mov
cld
test
incl
mov
cmpsl
loop
xchg
clc
pop
jns
jb
push
cmc
das
inc
lea
inc
cmc
sub
int
call
test
jno
xor
add
cmp
mov
xchg
pop
jp
out
or
and
adc
fildl
mov
cld
push
inc
bnd
mov
clc
add
outsl
out
push
fdivrp
aad
test
mov
or
and
inc
mov
mov
enter
jns
mov
das
push
and
xchg
mov
mov
sbb
sbb
push
shll
ret
sub
mov
call
popf
or
adc
notl
outsb
sahf
sbb
nop
mov
rorl
and
mov
fistps
and
dec
add
push
les
sbb
add
cmpb
lahf
movb
insb
and
idiv
outsl
mov
in
xor
push
adc
mov
aas
stos
xlat
mov
sar
adc
cwtl
xchg
and
call
lret
sub
cmp
inc
and
cmp
cmp
in
dec
cld
movsl
pop
jp
mov
call
inc
je
xor
push
call
adc
dec
or
adc
fistpll
and
sub
push
lcall
xchg
adc
outsl
mov
cmp
imul
push
ss
push
and
sahf
mov
lret
dec
dec
mov
rcrl
dec
adc
iret
or
les
test
push
xor
lea
add
call
andb
push
adc
jge
cwtl
and
pop
pusha
arpl
mov
stos
fucomip
mov
pop
jns
int
fst
lahf
inc
popa
test
pop
sub
insl
jmp
fistps
lea
or
adc
inc
push
or
or
test
cli
add
xor
cmp
sbb
push
push
adc
add
jo
imul
jbe
mov
dec
and
sub
fildl
add
aam
jnp
rolb
inc
clc
cmp
mov
add
pop
sbb
fadd
cmp
pusha
stos
loop
push
or
or
je
mov
push
je
addl
jmp
pop
inc
xchg
sti
push
pop
xchg
sarl
ficomps
cltd
adc
jg
inc
mov
sub
into
mov
inc
mov
loop
pushf
test
dec
pop
sbb
inc
sub
in
xchg
pop
popf
lea
adc
andb
lock
das
pop
sub
rcll
push
call
ret
call
mov
push
ret
loope
sub
dec
test
movsl
jnp
lock
pop
lea
xchg
lahf
call
xchg
add
sbb
daa
aas
std
movsl
adc
pop
psubq
fwait
and
push
stc
rol
fsts
outsl
call
jg
adc
and
or
add
sub
mov
pop
xchg
popa
pop
push
cs
rclb
and
xchg
lea
push
adc
mov
enter
js
inc
call
movsb
mov
cmp
mov
cmp
jp
clc
sbb
je
sub
pop
test
decl
cmpsb
pop
aam
movsb
xor
repz
icebp
scas
js
test
adc
sbb
mov
loopne
xor
push
add
xchg
adc
xor
adc
push
dec
push
adc
lock
adc
push
lret
and
cld
adc
adc
pop
fdivrl
mov
std
cmp
or
jne
mov
je
adc
xchg
jg
inc
mov
inc
sbb
adc
ficompl
lods
repnz
push
movsl
or
adc
pop
dec
loopne
out
push
loope
jl
das
jmp
adc
std
pop
adc
inc
inc
sahf
sarb
outsl
sub
mov
sahf
xor
pop
std
mov
loopne
inc
xchg
pop
or
push
clc
mov
pusha
cmc
push
sub
rcrb
mov
jecxz
lds
inc
icebp
outsl
mov
in
xorb
adc
outsb
mov
inc
mov
lret
cwtl
test
add
mov
ret
sarb
pop
nop
pop
mov
cmp
push
jle
xor
clc
xchg
ss
addb
lds
xorb
pop
call
fbld
std
dec
ficompl
das
or
inc
pop
push
repnz
pop
stos
mov
mov
or
jle
jge,pt
mov
adc
in
jb
sbb
add
cmp
fisttpl
jl
test
loopne
les
stos
cmp
and
mov
cmp
or
fisttps
jmp
leave
or
rorb
and
pop
dec
adc
jge
adc
jle
fbld
cmp
cmp
lea
xchg
xchg
ret
or
roll
dec
add
xchg
xchg
loopne
jae
fs
mov
out
mov
pop
add
loop
sbb
or
dec
loop
insb
jge
sub
jmp
or
pop
sub
pop
inc
and
loop
stos
and
push
mov
pop
pusha
test
je
bound
and
mov
adc
jmp
cmpsb
imul
mov
dec
pop
ljmp
ss
aaa
clc
adc
inc
dec
inc
dec
test
shrb
call
mov
insl
out
xor
xor
add
jecxz
cld
or
or
push
test
pusha
cmp
int3
nop
push
cli
lcall
push
push
adc
jmp
or
xor
dec
cmpsb
or
add
enter
decl
lret
mov
push
pop
xor
je
cwtl
pop
loop
mov
test
jl
sub
add
ds
inc
or
scas
xor
lods
sar
call
adc
ret
call
mov
jecxz
pop
ja
mov
cmp
inc
inc
jecxz
sub
inc
adc
jae
pop
filds
aaa
xchg
mov
mov
xchg
mov
push
loopne
outsl
sub
fildll
mov
subl
xor
cld
sarl
repnz
cwtl
or
xchg
dec
mov
das
rclb
mov
dec
das
pop
xchg
push
sbb
add
icebp
mov
cmp
sub
inc
jne
mov
outsl
call
mov
jnp
pop
push
enter
andb
test
ror
insb
jg
inc
sub
out
dec
push
jge
test
test
sarb
jnp
jle
pushl
rorb
lret
xchg
je
dec
out
jle
call
or
loop
cmp
mov
incl
pop
stc
mov
and
sar
cmp
and
testb
rcl
push
into
sub
push
fistps
call
and
stos
jg
pop
mov
sbb
stos
cld
cld
fimull
lea
fwait
or
das
in
js
adc
icebp
sub
inc
stos
ljmp
inc
xorb
outsl
flds
ret
sub
mov
mov
and
lods
rclb
ret
xor
push
test
lock
insb
lcall
call
rcl
outsb
pop
fnstsw
call
xor
jmp
call
adc
xor
jo
ffreep
mov
add
jae
dec
lods
and
add
outsl
push
std
jmp
mov
or
inc
adc
inc
out
rol
push
ljmp
call
adc
xor
and
jmp
jne
xchg
add
mov
pop
test
mov
pop
xor
mov
in
aaa
and
add
mov
jno
push
inc
shl
mov
mov
ljmp
mov
je
aam
in
fists
cmp
call
push
or
and
mov
or
sbb
mov
fdivr
movsb
mov
xchg
dec
adc
mov
cs
nop
pop
decb
int3
incl
mov
adc
sub
out
push
mov
xchg
fwait
je
sbb
inc
insb
xchg
inc
xchg
jge
or
xor
sbb
loope
and
push
cli
cwtl
jle
mov
add
adc
idiv
divb
pusha
and
popa
sqrtps
clc
sub
jl
stc
mov
push
sub
sbb
outsl
call
or
inc
jmp
mov
inc
pop
mov
sub
xor
aad
incl
adc
roll
push
push
or
sub
movsl
jle
or
je
test
dec
ror
mov
repnz
lcall
adc
mov
fwait
jle
adc
xchg
cmp
sub
gs
loop
insb
mov
mov
cld
out
cld
adc
adc
iret
cmp
sbb
mov
cmc
outsl
mov
aas
adc
and
test
insl
push
lock
bound
test
mov
stc
push
lds
jge
mov
xor
cld
push
or
mov
adc
ljmp
and
mov
jmp
out
out
adc
jg
je
dec
dec
sahf
fs
outsl
sar
mov
push
sub
pop
leave
jmp
cmp
je
cli
mov
cmp
cltd
mov
lea
popa
mov
inc
fidivs
cwtl
rolb
and
lock
and
ja
pop
test
pop
mov
cmc
cld
inc
scas
int
mov
mov
and
dec
xchg
insl
aam
jo
fldenv
leave
fbld
mov
xchg
es
mov
mov
cmp
dec
icebp
push
cmpsb
dec
xlat
push
hlt
xchg
xchg
jae
jg
das
push
mov
or
and
jmp
rclb
mov
add
test
jne
jmp
dec
mov
mov
inc
jecxz
mov
bound
repnz
jge
test
call
mov
cld
cltd
inc
cli
test
inc
lahf
pop
cmc
dec
mov
in
test
mov
jno
aas
test
xchg
mov
fnstenv
add
jle
pop
fisubrl
pop
rcll
xor
and
sub
sbb
add
mov
mov
or
jns
cmp
rorb
add
pop
mov
imul
das
inc
mov
cmpsb
arpl
add
aad
inc
sbb
call
or
dec
loopne
hlt
or
sti
sbb
dec
pop
inc
icebp
xor
rcrb
mov
lcall
push
cwtl
mov
pop
test
movsl
inc
adcl
das
pop
mov
mov
mov
inc
inc
je
mov
xchg
fcomp
bound
clc
pop
rclb
jmp
lock
in
cli
mov
jmp
jge
sub
lcall
add
mov
inc
push
xchg
call
inc
or
ret
jle
cmp
mov
and
or
lcall
ret
in
push
call
jp
and
dec
faddl
inc
inc
pop
scas
or
inc
mov
out
jo
jg
fildl
je
jl
hlt
sbbb
lds
adc
leave
fs
xor
jl
mov
jo
mov
xor
lock
mov
mov
mov
imul
lods
lahf
and
sarb
jbe
out
js
popf
rcl
cs
cmc
outsl
shrb
lret
push
xchg
xchg
add
rcrb
sub
jne
rcrb
mov
call
sub
lret
add
aas
test
cli
fidivs
xor
lcall
cli
or
adcl
inc
xlat
mov
cmp
adc
pop
fdivr
pop
xchg
in
sbb
push
or
push
or
mov
push
sub
pop
stos
rorl
fnsave
sbb
das
push
insl
and
adc
clc
pushl
push
nop
xor
and
xchg
ret
adc
inc
cmc
or
sahf
aad
lods
and
push
adc
loopne
std
mov
jl
push
je
xor
shrl
xor
les
or
cmc
stos
or
in
sbb
mov
call
sti
stos
sbb
test
xlat
test
fildll
imul
adc
jmp
clc
push
stos
push
test
ja
lods
mov
fsub
mov
cltd
pop
jne
and
cli
and
lds
in
js
js
or
sahf
jae
jl
xchg
or
adc
cld
pop
dec
dec
mov
stos
xor
and
add
decl
cmp
ja
and
add
mov
lock
and
clc
sub
add
pop
sbb
cltd
mov
inc
cmp
inc
adc
xlat
push
movl
add
enter
adc
jg
ljmp
insl
jg
adc
dec
sub
sbb
or
sti
jae
cmp
mov
jbe
imul
sbb
inc
sub
mov
push
mov
or
cld
and
add
push
insb
mov
or
adc
inc
cmp
sub
and
jl
jl
in
adc
subb
mov
fimull
add
push
or
ret
push
arpl
iret
sub
sub
add
and
je
daa
inc
mov
dec
inc
je
sub
std
push
add
inc
and
je
inc
sub
mov
clc
mov
inc
adc
jge
adc
cmpsb
sub
div
lea
fildl
push
adc
push
xchg
cltd
addr16
mov
pusha
mov
mov
mov
inc
sbb
xor
mov
int
mov
out
jo
shr
ret
mov
clc
fbld
call
inc
or
push
shr
lock
jnp
or
or
push
and
add
decl
int
xchg
out
sbb
ror
jl
xchg
lahf
inc
pop
adc
sti
sub
stos
test
sub
fldcw
jle
pop
int3
mov
and
stos
adc
mov
lods
je
adc
xlat
xchg
ds
imul
inc
movsl
or
movsl
lods
cs
aad
sub
movsl
push
lcall
call
out
jne
xor
pop
lret
frndint
inc
movsl
imul
lret
into
int
hlt
sub
jbe
inc
jl
mov
pushf
or
add
mov
mov
das
and
mov
dec
push
mov
jg
push
lcall
je
push
sub
add
lea
ljmp
rolb
mov
ret
inc
daa
popf
or
mov
pushf
leave
je
mov
lea
mov
dec
and
xor
add
insl
or
je
popf
push
add
bound
adc
fs
push
fisubrl
aad
lock
and
cs
push
andb
push
call
inc
in
lods
das
and
test
jae
std
pop
adc
push
mov
jmp
jge
xor
dec
xchg
sbb
loop
lret
jg
pop
mov
sbb
and
and
loopne
or
pop
dec
mov
inc
daa
jb
pop
das
push
int
xchg
inc
roll
fistl
push
outsl
inc
loopne
imul
jle
xor
lods
mov
add
fists
push
test
sbb
pop
add
inc
test
inc
mov
insb
pushf
jne
and
jmp
pop
and
push
cmp
add
jp
jle
ret
cmp
xor
push
cli
les
ljmp
int
push
cltd
jo
jg
mov
cs
dec
ljmp
inc
call
insb
fcomp
js
and
aaa
mov
jo
lret
push
inc
sar
cmpb
push
cmp
jp
or
add
es
push
push
xlat
adcl
testb
out
xor
shll
xor
sub
push
jp
sub
push
sahf
repnz
mov
and
sub
pop
lret
ja
mov
cs
pop
pop
push
mov
cld
inc
xchg
mov
rol
lds
add
ret
mov
lahf
and
call
ljmp
shrb
pop
push
mov
gs
push
faddl
mov
nop
inc
or
je
dec
sbb
cwtl
sarl
iret
inc
inc
or
xchg
push
xchg
sarb
dec
pop
enter
sub
xor
in
or
ret
sarl
pop
jbe
loop
outsb
ja
fsubr
inc
mov
testb
ret
and
sarl
hlt
decl
jae
andl
inc
cmpsb
adc
mov
clc
lea
int3
pop
addr16
pop
clc
inc
mov
adc
pusha
mov
adc
adc
decl
or
or
pop
push
lcall
nop
jmp
pop
cmp
fdivl
scas
mov
sbb
pop
call
fisttps
test
pop
mov
in
sbb
pop
sub
push
pop
sbb
test
xor
or
cmpsb
sbb
xor
leave
lock
pop
cltd
mov
stos
mov
jne
lcall
outsl
arpl
and
into
mov
call
xchg
dec
xorl
imul
insb
imul
mov
nop
lods
inc
jle
sbb
test
jbe
pusha
jle
add
mov
sub
push
xrelease
jb
neg
incl
into
jbe
cmp
shl
stos
data16
fcomps
in
xor
adc
fiadds
fcomps
fisubl
add
pop
dec
cmpsb
mov
dec
mov
xor
or
push
in
int3
arpl
sahf
add
mov
mov
and
or
pop
or
daa
pop
dec
xchg
push
sbb
cli
cmp
ljmp
adc
fimuls
pop
sub
lods
jnp
push
push
mov
mov
repz
mov
nopl
subb
and
cwtl
sbb
scas
call
push
dec
and
jle
sub
loop
fnsave
cld
test
mov
shll
pop
movsb
cs
leave
ljmp
and
push
dec
adc
ss
lock
pop
xor
and
add
and
fdivl
and
add
jl
mov
mov
lods
mov
adc
mov
lcall
pop
popa
xchg
or
inc
mov
aaa
js
mov
iret
loop
decl
dec
inc
inc
clc
pop
and
adc
insb
jo
sti
jmp
lods
jbe
fcoml
mov
les
into
data16
jp
cmpl
stc
and
bound
dec
cwtl
mov
pop
mov
stc
and
ds
fsubrl
divb
out
jbe
dec
ljmp
or
or
add
lcall
jb
inc
pop
xchg
and
pushf
mov
aas
leave
sbb
pop
jbe
dec
sbb
or
in
and
fistpll
lret
jge
stos
shll
int3
sbb
xorb
sbb
call
aaa
fisubrl
loop
fbstp
fwait
test
mov
dec
push
mov
mov
jns
in
mov
movsl
mov
sub
adc
sub
or
add
call
insl
sub
jmp
roll
push
add
imul
je
je
push
jg
push
or
je
inc
orb
pop
push
and
das
xor
xchg
imul
loope
pop
loopne
or
xchg
jbe
jns
int3
mov
inc
sbb
fistps
sbb
mov
adc
jo
dec
and
sub
jle
add
mov
add
fistpl
sub
lock
pop
test
mov
hlt
test
mov
sub
xor
call
push
icebp
jo
jecxz
sub
mov
pop
inc
cmp
cmpsl
aaa
fcoml
inc
stc
sub
xchg
ljmp
shrb
sbb
mov
aam
or
pop
mov
lahf
negb
shll
scas
stos
mov
sbb
lock
subb
orl
xchg
or
arpl
or
es
ja
pop
add
hlt
cmc
mov
mov
fiadds
pushf
in
pop
mov
inc
pop
imul
pop
aam
mov
or
xor
insl
jns
ret
inc
icebp
mov
addl
adc
add
or
mov
and
adcl
rolb
adc
leave
lcall
mov
jnp
jmp
dec
xchg
add
mov
cmpb
int
inc
bound
add
aad
jnp
imulb
push
mov
lock
ja
cmc
call
sbb
movsb
add
call
mov
adc
push
dec
aas
or
xor
iret
jg
dec
stos
lret
dec
adc
sti
scas
std
aas
je
push
xor
pop
test
aam
xor
add
data16
jmp
sbb
in
xchg
test
arpl
or
inc
push
add
pushl
sbb
dec
stc
gs
outsb
mov
call
lret
call
pop
cmp
out
and
xchg
and
xchg
xchg
mov
jl
cmp
mov
cld
test
cmpb
mov
icebp
movsb
cmc
mov
push
pushf
nop
jle
adc
cld
rolb
xor
sbb
push
decl
inc
dec
sub
aad
fsts
mov
adc
lea
sbb
incl
stos
or
mov
xor
xlat
push
icebp
dec
outsb
or
fldcw
add
pop
pushl
adc
sti
xchg
mull
mov
sub
mov
pop
test
ret
sub
in
ret
fucom
shlb
adc
aam
daa
add
push
xchg
sub
stos
je
push
stos
adc
push
outsl
or
shrb
sbb
icebp
stc
and
subb
lret
sub
or
ljmp
or
loop
jae
adc
xchg
and
sbb
rcl
loopne
sub
bound
cmp
test
jp
in
andb
cwtl
xchg
subb
nop
mov
adc
cli
pop
js
aam
fcmovb
pop
repnz
jo
xor
pop
jns
add
jl
ret
cmp
sub
pop
and
mov
movsl
push
ljmp
add
jo
mov
push
outsl
lock
push
addb
ds
repnz
xor
outsl
mov
cltd
add
and
notb
xchg
push
sub
cmp
mov
in
dec
stc
sbb
jecxz
aaa
mov
jg
add
sub
sbb
data16
lahf
in
jg
rcll
sub
pop
inc
aas
call
test
sbb
push
dec
or
lahf
js
xchg
sub
mov
cmc
popa
inc
jg
outsl
xchg
mov
or
ret
adc
out
or
cmpsb
inc
push
sub
imul
push
pop
and
adc
pop
pusha
jmp
and
xor
aas
sahf
or
mov
jno
cmpsb
test
sarb
mov
push
mov
mov
and
repnz
inc
adc
adcb
dec
push
sub
pop
ret
pop
adc
jae
adc
mov
aas
mov
hlt
gs
dec
aam
clc
outsl
fildll
je
repnz
xchg
inc
mov
imul
push
jmp
js
mov
sahf
adc
add
jbe
in
mov
mov
jle
xor
mov
repnz
insl
mov
xor
ret
mov
aas
lahf
add
std
sub
mov
pop
jmp
xlat
push
push
insb
adc
hlt
pop
jbe
pop
loop
stos
push
repz
mov
inc
adc
std
pop
mov
daa
fsubrs
mov
dec
jmp
pop
mov
shlb
out
cmp
jae
adc
test
popa
mov
mov
push
adc
stos
adc
jne
ljmp
cld
jmp
sbb
enter
mov
enter
cli
or
xchg
ljmp
jbe
dec
add
fs
xor
push
in
inc
mov
fs
and
or
pop
fidivrl
data16
outsb
aad
sub
mov
xor
dec
mov
cli
lahf
and
pop
push
imul
mov
cmp
call
adc
pop
push
mov
push
daa
outsb
call
xchg
adc
mov
xchg
mov
icebp
sbb
jne
pop
outsl
add
cld
cmp
mov
std
lea
ds
dec
dec
inc
bound
and
xor
sub
pop
out
xchg
je
push
js
lods
test
push
push
sbb
and
stos
cli
mov
add
jmp
jge
jg
pop
dec
or
add
cmp
add
mov
imull
xchg
outsb
imul
or
push
xor
sbb
mov
pop
out
sub
add
lock
push
movsb
sahf
shll
mov
dec
mov
or
data16
dec
mov
jnp
outsl
jg
fs
sbb
call
push
inc
mov
ljmp
add
mov
sub
or
das
cld
cmpsb
into
fadd
mov
scas
filds
cli
in
and
jns
jbe
push
icebp
add
sbb
outsb
add
inc
hlt
jecxz
out
repz
cmp
clc
cmc
inc
ficompl
shrb
lea
incl
mov
mov
leave
andl
rorl
fnstsw
adc
mov
inc
mov
cld
aaa
loope
pop
outsb
inc
cmp
push
into
icebp
mov
pop
fsubl
scas
xchg
hlt
or
mov
inc
test
xor
mov
je
call
lock
loop
sub
mov
movsl
testb
dec
iret
dec
mov
mov
add
addr16
mov
add
mov
popa
test
adc
dec
pop
mov
jo
inc
cmp
and
pop
mov
sbb
aaa
mov
pushf
adc
out
ret
mov
adc
dec
loopne
mov
xor
sub
sbb
xchg
sbb
imul
shrb
sub
cmp
add
scas
adc
jns
push
push
loop
out
or
inc
or
mov
jne
fstpt
xchg
dec
sub
popa
pop
sbb
xor
pop
dec
pushf
repz
adc
decl
jle
sarb
outsb
dec
inc
aam
xchg
cmp
inc
test
addb
inc
lret
out
push
aas
sub
pop
stos
bound
sub
mov
jb
mov
mov
mov
mov
gs
adc
inc
adc
cli
pop
orb
jge
cld
xchg
mov
std
or
ret
cmpsl
nop
or
xor
aaa
rcrl
lock
xor
inc
cmpsl
fld1
sub
and
push
push
stos
dec
cmc
fnsave
jl
cld
imul
sbb
loope
jge
dec
mov
inc
cli
mov
ljmp
mov
rolb
dec
push
rorb
push
dec
and
fsubs
aaa
push
pushf
aaa
stos
mov
pop
inc
inc
fwait
push
clc
sub
pop
cmp
lret
stos
jg
xor
adc
es
out
xor
jbe
daa
pop
push
lret
stos
les
aad
in
incl
aaa
xlat
cmovnp
les
adc
stc
push
subl
pop
dec
push
xlat
cmc
loopne
jne
test
mov
loope
cltd
dec
pop
sub
out
add
adc
les
inc
sti
pushl
in
pop
dec
jo
sub
sbb
nop
js
fwait
lret
mov
loop
hlt
push
out
pop
sub
push
ja
insl
std
in
add
push
mov
rcrb
jae
jg
faddp
bound
lds
inc
fisttpl
testl
test
jno
movsb
ljmp
push
lea
pop
mov
xchg
imul
adc
fisubrs
mov
or
imul
push
std
repz
je
push
xchg
add
rclb
sarl
jmp
pop
push
cltd
rcrl
fbld
jle
cmp
test
mov
outsb
add
imul
inc
scas
incl
jle
dec
dec
or
jp
pop
sbb
mov
lcall
sbb
mov
int3
mov
stc
negl
inc
inc
inc
fidivl
stos
pop
mov
sbb
in
clc
das
push
fucomp
xchg
xor
jmp
scas
arpl
adc
and
push
sahf
inc
pop
outsl
incl
pop
pop
add
dec
daa
mov
loop
add
push
arpl
js
sbbb
and
test
mov
dec
icebp
mov
lock
xor
ja
push
es
pop
or
mov
or
sub
lock
movsb
fcoml
dec
cli
jg
fisubl
xchg
add
rorb
int3
daa
inc
fstpt
sub
cli
fists
xor
je
xchg
push
and
mov
pop
pusha
or
xchg
pop
jmp
dec
movsb
arpl
mov
cld
sbb
lock
or
sbb
ljmp
mov
dec
jle
or
popa
dec
int
mov
pop
lret
xor
or
dec
mov
pusha
add
jmp
movsb
movsb
shll
ret
mov
jbe
test
dec
mov
xor
das
cmp
lock
pop
dec
cs
fcoml
ds
imul
bnd
pop
pop
rcrl
cmp
mov
lods
sbb
jb
cmpsl
adc
or
fcomps
shl
test
mov
cmp
cmp
fsubrs
and
jg
clc
pop
and
and
push
xchg
ret
je
rclb
pop
aad
lcall
mov
inc
pushf
dec
mov
push
add
icebp
pop
cli
inc
cmpsb
or
cmp
repz
dec
sub
sti
sub
fmuls
std
jle
aam
xor
and
inc
sar
jle
adc
dec
loop
pop
push
lahf
pop
xchg
ljmp
loopne
scas
test
jle
int3
push
push
nop
cli
push
mov
dec
push
and
pusha
mov
sbb
outsl
rcrb
imul
dec
mov
ucomiss
pop
xor
dec
push
test
ret
movsl
sub
push
mov
adc
popa
fildll
test
jb
leave
xor
scas
xor
shll
jmp
fistpl
add
outsl
test
repz
jp
pop
jne
enter
sub
lock
cli
repz
cmpsb
add
mov
mov
and
sub
stos
addr16
jl
mov
iret
inc
mov
add
and
scas
lret
rorl
dec
xor
xor
das
push
lods
cld
and
cmp
fcomi
inc
xchg
nop
add
pop
fistl
jno
in
js
cmp
incl
push
popf
mov
call
pop
ljmp
loopne
loopne
lea
or
pop
adcb
scas
pop
jno
sbb
pop
lods
adc
ds
and
jl
dec
pop
xchg
scas
jge
inc
out
int
push
dec
pop
push
mov
lret
ds
xor
sub
das
std
and
icebp
or
daa
adc
pop
xchg
lret
sub
sar
push
sbb
xor
mov
mov
mov
mov
sti
dec
hlt
or
push
sbb
ficomps
push
adc
pusha
dec
js
pop
ss
mov
roll
shl
xchg
push
je,pn
sbb
jecxz
cmpsb
push
fsubl
fsubl
std
or
imull
push
and
push
imul
clc
outsl
sarl
inc
iret
pop
int
lcall
and
rorl
jo
leave
and
pop
or
cld
and
decl
call
rclb
mov
jo
pushf
inc
adc
aaa
push
add
adc
mov
outsb
das
push
mov
movsb
mov
out
or
sub
inc
mov
cmc
pushf
xchg
ljmp
jg
jmp
daa
cli
lret
xchg
jo
or
es
mov
daa
push
pop
pop
add
aad
xchg
inc
out
leave
mov
loopne
je
push
and
xor
push
enter
inc
je
jmp
test
lret
pusha
sarl
stc
jne
xchg
outsb
inc
fdivrl
cmp
rolb
call
mov
jp
mov
shrb
and
push
push
cmp
hlt
inc
xchg
clc
jnp
jmp
xor
lea
ja
or
sbbb
and
and
jg
mov
dec
je
cwtl
adc
dec
addb
push
fstl
incl
add
mov
and
scas
mov
jne
xchg
mov
cmp
lret
and
mov
lea
fcmove
jns
rorl
cmpb
mov
mov
adc
push
push
push
aaa
xchg
and
nop
sbb
dec
pushf
sbb
sbb
fs
push
jns
int3
fidivs
lcall
in
mov
lahf
and
xor
xchg
mov
cmpsb
push
sub
je
jl
pop
pop
jbe
cs
add
or
mov
jg
push
push
int3
inc
or
je
and
dec
fnstsw
push
sbb
outsb
mov
add
or
inc
mov
jbe
xchg
ret
roll
jo
leave
andb
je
inc
sbb
or
clc
cmpsb
fildl
ret
sbb
mov
push
xchg
imul
add
or
loopne
adc
es
std
idiv
sar
mov
mov
xchg
and
cmp
or
jecxz
nop
push
jne
incl
ja
adc
add
rcr
adc
mov
or
jl
mov
add
or
jle
or
les
das
std
push
std
aaa
xchg
idivl
dec
mov
icebp
lock
mov
std
jge
inc
add
dec
cmpsl
mov
dec
int
add
push
lock
enter
inc
je
push
aam
jns
push
fildll
xlat
out
cwtl
nop
adc
push
add
jno
adc
loope
cltd
popa
lcall
loope
push
fldpi
lret
daa
leave
adc
mov
jle
sbb
int3
pop
inc
sbb
scas
mov
add
testb
enter
mov
add
push
roll
lahf
or
sbb
insl
fs
je
subb
mov
inc
push
out
out
and
mov
pop
push
fsubl
cmp
adc
je
lock
mov
push
jp
adc
inc
mov
cwtl
dec
xor
nop
sbb
ud0
shlb
push
cld
sbb
fistpl
mov
add
test
dec
and
lods
jl
and
jg
stos
je
jmp
ror
mov
dec
add
sub
jns
cmc
fildll
mov
mov
mov
jg
add
mov
negb
jmp
cmp
pop
call
sub
inc
call
dec
sbb
mov
jp
cli
fstl
sub
incb
testb
sub
xlat
fsubrl
cwtl
adc
movsl
call
or
lcall
pop
stos
std
arpl
lock
pop
add
outsl
mov
je
sar
mov
inc
jo
aad
sbb
int
add
cmpb
icebp
and
or
call
jl
and
mov
mov
mov
and
stos
push
mov
xchg
adc
rcrl
nop
fisttpl
decl
mov
cs
pop
mov
pushl
cwtl
inc
add
je
popa
lahf
shlb
xor
jg
icebp
or
mov
xchg
outsl
or
stos
mov
test
pop
mov
cli
mov
pusha
pop
xor
mov
and
xchg
call
cmc
lods
test
sbb
decl
outsl
fadds
xchg
add
test
sbb
cmc
dec
std
xchg
sahf
andb
shlb
inc
push
push
fldl
clc
mov
push
jl
jl
pop
mov
sbb
mov
sahf
adc
pop
push
addr16
pushl
int3
call
sub
repz
and
push
and
je
das
inc
aaa
xorb
lods
push
or
hlt
int3
lods
pusha
mov
jecxz
ljmp
stos
ffreep
fucomp
sub
pop
movsl
jle
cli
jb
and
dec
fdivl
cmp
add
inc
cld
mov
mov
mov
cld
adc
call
add
push
insb
dec
mov
subb
push
call
or
cmp
dec
mov
fsubr
arpl
scas
notb
rorl
test
or
in
push
cld
arpl
faddl
jbe
test
lock
mov
repz
movsl
pop
mov
jmp
cmp
test
mov
sbb
in
into
adc
and
lcall
das
sbb
inc
je
or
shrb
cli
sbb
jp
or
or
fisttps
mov
add
or
inc
ret
xor
push
ja
icebp
xor
pop
cmp
add
fsub
leave
pop
sbbl
pop
mov
jnp
int
inc
inc
out
loopne
mov
adc
fisttps
adc
les
cmp
fmull
add
push
movsl
cmp
icebp
das
mov
idivb
fldl
scas
and
mov
inc
bound
aam
repz
jo
addr16
cld
push
loopne
inc
lahf
fisubrl
push
andl
adc
pop
or
pop
ljmp
pop
iret
outsl
mov
das
ja
jmp
dec
push
and
orl
cmpsb
je
lcall
cmp
nop
and
push
insl
lahf
xor
or
pop
jae
and
mov
add
je
adc
loop
idiv
pop
cmp
sub
pusha
daa
call
jl
outsl
cwtl
mov
jne
shrb
xchg
and
sbb
std
add
test
pop
dec
es
sahf
sbb
les
or
aas
jmp
test
sub
je
mov
ficoml
ret
cld
push
lds
or
lea
cmpsb
mov
sbb
lds
inc
insl
mov
js
or
cmc
inc
inc
or
and
rorl
lea
scas
and
call
dec
call
hlt
pop
mov
sbbl
fisubrs
shll
xchg
xchg
stc
decl
xchg
jg
aam
addr16
lret
sbb
jle
or
cmp
mov
xor
ljmp
xchg
add
ficoml
sub
hlt
les
call
push
das
lock
adc
std
mov
clc
rclb
inc
mov
fisubl
push
test
and
loopne
sbb
out
int
dec
aad
or
pop
sub
clc
pushl
push
jmp
mov
call
xchg
xor
icebp
or
ss
mov
jle
jg
lock
or
and
std
aaa
sbb
jno
out
pop
lock
or
jle
mov
outsl
add
and
and
or
icebp
lcall
data16
ljmp
je
popa
jl
andnps
cmpl
jbe
jg
inc
inc
add
addr16
sub
stc
bound
or
fcomp
stc
call
decl
sub
and
or
mov
outsb
insl
lods
stos
push
sbb
or
and
sub
call
fxtract
mov
mov
cs
les
pop
pop
loope
sar
push
call
pop
js
int
movsl
inc
or
cli
ret
push
pop
imulb
or
mov
xchg
xor
lea
inc
lock
mov
dec
stos
imul
fisubrs
bound
incb
push
mov
shrb
jbe
sub
outsl
sub
inc
fsts
pop
clc
icebp
mov
xchg
xchg
and
or
xor
inc
push
clc
scas
inc
sub
push
orl
xor
push
mov
test
stos
sahf
fucomip
lods
jg
jbe
pop
test
pop
inc
or
xchg
push
mov
adc
and
push
pop
fdivs
and
insl
dec
pop
ds
add
sub
jo
push
pop
test
fcompl
divb
sbb
or
jg
jge
ds
and
movsb
inc
sbb
mov
int
loopne
decl
cmp
bound
shrl
and
pop
fsubrp
test
adc
cwtl
imul
mov
jg
push
je
dec
in
pushl
or
lret
testl
ljmp
orl
mov
or
in
xchg
stos
pop
ljmp
icebp
insb
dec
les
loope
jmp
insl
test
cmp
aaa
dec
fsubrs
mov
decb
inc
repz
xor
rcr
mov
dec
es
test
jl
add
cmp
push
cli
lds
inc
es
test
mov
jmp
inc
imul
jmp
and
loopne
lock
inc
ret
popa
inc
test
or
push
pop
scas
xchg
jb
inc
push
pop
mov
int3
mov
loope
mov
mov
add
xor
jl
cli
movsb
sbb
inc
outsl
mov
push
cs
stos
adc
les
jge
test
inc
mov
inc
sets
outsl
in
loopne
jne
pushf
cmp
lds
scas
mov
jg
test
fbstp
push
mov
mov
aas
hlt
push
lcall
push
inc
stos
in
pop
fisttpl
mov
xor
rcrl
dec
jl
sbb
mov
xchg
fiadds
or
sub
fcoml
jl
in
ficoms
xchg
nop
scas
cmp
fucomip
or
push
inc
jmp
jge
pop
or
push
jo
clc
ret
incl
mov
sbb
fisubrs
or
xor
addb
test
inc
sub
xchg
inc
aad
call
outsl
movsl
dec
mov
aas
loope
sbb
pop
hlt
rorb
and
push
xchg
out
enter
mov
imul
mull
test
pop
nop
jbe
lods
xchg
test
push
ljmp
dec
shll
pop
jg
xor
mov
mov
xlat
mov
mov
cmp
loope
iret
sub
inc
adc
je
cmp
push
and
or
aas
adc
fistpl
dec
fbld
pop
xlat
pop
mov
cmp
push
call
scas
cmpsl
je
and
and
fstpl
jmp
subl
mov
fcmovbe
pushf
cmpl
cmc
sbb
lcall
jmp
daa
or
push
sbb
xchg
pop
call
or
sar
ret
adc
or
mov
das
xor
das
hlt
add
shlb
mov
int
cmpb
aam
push
mov
xchg
adc
rcrl
mov
xchg
fadds
cmp
xchg
add
mov
sbb
adc
ret
lock
ss
adc
mov
or
xchg
fldt
jg
push
call
shr
mov
mov
jb
pop
push
test
inc
push
add
std
xor
aam
sub
xchg
or
jmp
cwtl
mov
rorl
movsb
inc
pushl
test
rorl
and
dec
ljmp
pop
jns
inc
std
pop
push
pop
or
lret
in
mov
and
mov
aad
add
pop
or
cmp
insl
pop
jge
rcll
jle
andl
jo
or
incb
or
or
mov
imul
pop
aam
out
out
push
add
aaa
js
or
add
and
iret
jg
outsb
cld
adcl
movzwl
pop
test
outsl
cmc
pop
mov
fdivr
pop
jp
cld
sbb
dec
test
mov
xor
sub
mulb
stos
rolb
call
xchg
hlt
mull
sbb
ficompl
add
inc
adc
insb
es
stos
outsb
push
sub
ret
or
xor
ret
cmp
jg
inc
pop
adc
addl
jl
cmp
mov
movsl
lcall
push
dec
std
scas
and
std
imulb
push
dec
xor
push
mov
std
js
inc
dec
jns
cmp
jne
sbb
es
inc
jno
mov
adc
add
mov
sbb
loope
push
jmp
pop
jne
or
and
pop
jmp
xlat
lods
mov
dec
cmpsl
jmp
mov
test
dec
mov
xchg
ret
stos
fsubrs
and
movmskps
push
fnstsw
in
xlat
and
std
mov
xlat
mov
stos
dec
dec
fwait
sbb
push
sub
popa
pop
and
sbb
call
sbb
push
cmp
sti
lcall
pop
or
add
insb
mov
xor
aas
popa
pop
insb
dec
jne
mov
sbb
and
xchg
pop
dec
push
mov
push
hlt
xlat
out
pop
cmpsl
jne
lock
or
outsl
scas
aas
sub
add
hlt
inc
loope
clc
push
cld
pop
cld
call
cmp
call
mov
sbb
mov
mov
pushw
test
fstpt
lcall
and
and
push
aam
jo
xor
outsl
inc
in
pop
orl
lret
hlt
push
xchg
fiaddl
fwait
push
call
or
mov
inc
test
push
adc
and
inc
xor
push
jne
jo
daa
ds
and
xchg
mov
cvtps2pd
fldt
mov
ficompl
pop
movsl
pop
cli
loopne
or
imul
bound
mov
mov
adc
outsl
or
jp
imulb
cld
mov
xchg
pop
inc
mov
and
test
fadds
incl
jns
pop
push
sub
jle
add
or
push
mov
test
inc
test
inc
mov
and
lret
lods
inc
sti
dec
add
push
and
push
adc
pop
cli
inc
repz
sbb
rcll
pusha
call
xor
inc
int3
cwtl
mov
loop
pop
negb
ljmp
pop
cld
xchg
and
aad
mov
push
push
pop
cwtl
adc
mov
lea
push
cmp
fsubrl
mov
or
das
daa
xchg
or
push
dec
push
movswl
fsub
jg
cmp
or
push
sbb
loope
loope
jle
aam
inc
cmp
adc
lods
jg
negb
jp
int3
mov
call
push
sub
or
fsubrp
das
lock
push
stos
and
mov
adc
or
shlb
or
in
mov
cwtl
sub
mov
jge
pop
jbe
xor
scas
add
pop
xchg
shrb
mov
xchg
mov
inc
ficompl
sarl
scas
xor
nop
lock
fstpt
xchg
pop
out
cmp
ret
jnp
clc
mov
lcall
test
push
jae
stc
cltd
jge
decb
test
push
sub
cmp
sbb
adc
loop
mov
je
aam
jg
xchg
popa
and
lock
cwtl
or
pop
dec
or
mov
test
mov
lcall
incl
pop
outsb
dec
pop
sbb
mov
push
mov
mov
push
cmp
add
xor
or
loopne
jl
sub
cli
fistl
sub
cmp
push
fdiv
test
aaa
and
cld
jmp
or
pushf
jge
ja
push
sub
inc
rcrl
fcompl
sub
ja
jge
cltd
sub
mov
mov
mov
push
or
sbb
cli
repnz
and
test
lret
sub
lock
movsl
mov
dec
adc
inc
aas
adc
or
xor
mov
movsb
cmp
mov
pop
shlb
mov
mov
gs
jne
dec
pop
clc
pop
cld
inc
shl
addr16
inc
fldl
jne
sti
mov
je
inc
outsb
pushf
mov
jne
mov
push
imul
mov
outsb
push
pop
mov
movsb
sub
je
inc
pop
jmp
pop
incb
clc
adc
pushf
pop
fnsave
or
inc
pop
je
add
jmp
cmpsl
and
jge,pn
jle
lcall
in
push
adc
add
fistl
push
jb
cmpsl
cli
xchg
clc
add
cmp
mov
sub
adc
pop
or
and
mov
and
mov
ret
not
inc
mov
jb
and
add
mov
mov
popa
insb
xor
jne
bound
insl
mov
fistpl
mov
or
aaa
sbb
cwtl
adc
add
ret
scas
sub
jp
out
test
fbstp
jns
pop
ja
lret
or
xabort
loop
fiadds
movsl
movsb
cmc
scas
adc
sub
pop
mov
and
add
add
bound
int
daa
test
incl
out
and
and
cli
das
sub
stc
mov
xlat
mov
rolb
adc
jmp
mov
mov
jne
push
jne
mov
push
xchg
xorb
adc
adc
jb
and
cs
pop
inc
and
scas
lods
push
cld
call
sub
dec
jb
inc
xchg
cmp
inc
inc
daa
aam
in
out
hlt
roll
shlb
pop
sbb
in
outsl
add
mov
ror
lahf
outsb
fisttps
leave
push
inc
push
add
xor
add
outsl
mov
ljmp
je
std
outsl
mov
cmpsl
rorl
lea
fdivr
negl
daa
loopne
xchg
sub
pop
out
inc
jl
dec
dec
mov
inc
out
rcr
mov
push
andl
ret
mov
or
pop
aaa
aaa
push
push
call
push
cmp
scas
gs
cld
loopne
stc
andb
mov
aas
and
pop
push
mov
push
addr16
insl
inc
sbb
and
call
and
lock
in
notb
mov
and
mov
jg
mov
jecxz
icebp
and
xchg
inc
and
inc
fisttpll
das
adc
arpl
fdiv
sbb
ss
jl
rclb
add
mov
pop
fildll
clc
pop
jecxz
test
cmp
xor
std
outsl
insl
mov
or
xchg
sbb
sbbl
fnstsw
andb
jmp
je
pop
xor
mov
adc
popf
inc
add
jbe
push
mov
loop
je
sub
std
call
rcrl
jbe
push
inc
jb
push
and
cmc
mov
pop
mov
and
cltd
mov
clc
xchg
imul
cld
or
hlt
int3
xchg
xchg
pop
xchg
in
jne
inc
mov
pop
in
loopne
xor
jbe
and
sahf
outsl
mov
aaa
add
jnp
xchg
inc
push
cmp
in
xchg
xor
mov
loope
cltd
push
jge
add
mov
inc
icebp
jge
popa
aas
rorb
xor
push
stos
outsl
inc
mov
jnp
mov
adc
or
xor
mov
incb
or
shlb
fmull
std
pop
clc
pushl
dec
dec
popf
fisttpll
mov
and
xlat
vsubss
ljmp
adc
adc
cwtl
ret
sub
mov
sub
fistps
insl
fcoms
push
js
aad
call
sub
add
loopne
js
push
lahf
mov
aam
sbb
stc
dec
insl
pop
mov
js
mov
fidivl
in
ljmp
inc
loope
mov
jl
call
lret
in
pop
jmp
lods
lods
push
ljmp
loope
sbb
jp
jmp
lahf
add
sbb
dec
adc
pop
jnp
cpuid
or
jae
jns
divb
fstpl
mov
inc
aaa
adc
es
jge
imul
inc
in
cwtl
cmpb
call
inc
or
loope
lea
inc
int3
test
cmpsb
je
testl
shll
sub
or
fmull
or
xor
mov
mov
outsb
sub
dec
pop
add
mov
or
mov
fists
in
and
add
pop
gs
jnp
pop
ljmp
xchg
pop
in
sub
jmp
insl
sbb
or
test
and
jecxz
ret
nop
jle
fdivr
test
jne
mov
and
ret
jg
sub
xor
jle
inc
mov
dec
jle
inc
insl
add
std
inc
ss
lea
scas
mov
in
jbe
push
test
data16
popf
in
adc
loopne
sbb
push
adc
mov
cmp
xchg
test
push
lds
les
sub
jo
insl
inc
lock
adc
mov
loopne
lret
dec
and
dec
pop
repz
cmc
outsl
pop
add
sbb
sbb
mov
sbb
into
cwtl
pusha
stc
jno
pop
mov
scas
mov
ljmp
inc
pusha
xchg
dec
subl
fdivl
pusha
mov
or
rcrl
movsl
ret
pop
mov
shl
fwait
cmpb
je
outsl
inc
adc
or
call
sbb
lock
sub
pushf
pop
jl
or
out
sub
icebp
dec
sarl
push
shll
sbb
push
cmc
mov
and
dec
adc
mov
inc
jecxz
je
dec
push
sub
or
mov
pop
cld
dec
outsl
jge
jg
popa
lods
add
sbb
or
icebp
dec
divb
lock
aas
jo
or
jl
xor
dec
dec
stos
add
mov
pop
cli
adc
lods
add
xor
int
test
jno
dec
testb
icebp
cwtl
outsb
imul
cmp
mov
dec
ja
mov
push
inc
jle
ljmp
into
jnp
je
in
lods
cmpsb
cmp
and
decb
sti
dec
mov
mov
push
sbb
fsubl
decl
nop
xor
adc
and
movsb
add
fidivrl
ja
cmp
push
fs
jbe
or
lea
mov
ljmp
mov
mov
jnp
mov
je
inc
test
inc
jge
xchg
daa
and
and
sub
mov
hlt
fldt
je
xor
cmc
pop
inc
push
popf
sbb
ret
cmp
inc
mov
outsb
adc
addb
fbstp
call
mov
call
push
pusha
inc
push
shlb
xchg
sbb
outsl
pop
subb
xor
inc
or
outsl
ss
or
jl
cmc
mov
daa
or
in
aas
or
jbe
test
fisttps
icebp
loopne
adc
clc
cmp
pop
pop
mov
adc
in
mov
outsl
cltd
pop
sbb
pop
or
je
pop
mov
push
movsl
or
mov
xchg
ljmp
mov
mov
mov
inc
fildll
dec
sub
nop
jns
loopne
scas
out
or
pop
lock
cld
push
or
or
xor
aam
icebp
mov
cmp
inc
add
mov
add
mov
in
gs
and
pop
sbbl
and
inc
jbe
adc
and
jnp
test
imul
in
push
aad
sbb
cli
fiaddl
stc
mov
jns
inc
nop
repz
pop
or
mov
cmpb
and
xchg
or
stos
jmp
idivb
mov
cld
or
mov
in
outsl
mov
je
lret
test
pop
out
dec
fildl
shrb
push
cmpsb
je
jg
shr
and
add
insl
inc
push
pop
inc
loopne
ss
push
mov
mov
aad
jo
mov
cli
and
das
pushf
aam
ljmp
jl
and
adc
sbb
in
inc
add
xlat
mov
pop
push
std
repz
in
adc
dec
repnz
push
pop
and
or
jns
mov
xchg
fwait
add
push
lods
mov
lods
ljmp
movsb
pop
or
out
sub
scas
aaa
fdivr
or
add
jle
aam
fisttpll
mov
push
cmp
cltd
xor
or
je
jp
mov
or
sbb
adc
leave
sub
mov
stos
push
lret
iret
cwtl
mov
ret
test
adc
inc
mov
pop
adc
test
cmp
push
push
rorl
xor
jmp
mov
je
xchg
insl
dec
mov
aaa
clc
pop
inc
dec
sbb
or
rolb
das
pop
mov
cmp
jg
push
psrlq
call
stos
std
sbb
add
and
cmp
insl
sti
dec
fidivl
ja
sub
clc
mov
adc
loope
std
rolb
aas
and
mov
add
je
sub
mov
adc
pop
mov
clc
sbb
in
push
icebp
enter
clc
sbb
push
mov
mov
leave
loope
adc
cltd
mov
xor
adc
je
loopne
subb
rorl
mov
into
adcb
mov
fwait
adc
inc
out
fs
or
lahf
fidivrs
or
xor
in
and
sbb
pop
test
cmpsl
dec
push
xor
jl
scas
sti
or
incb
push
and
pop
out
xchg
aad
jbe
cmp
sub
insb
out
lret
movsl
jp
jg
mov
cmpsb
arpl
pop
lods
cmpsl
sbb
addb
sbb
jp
call
cmp
pop
mov
in
xchg
test
call
imul
call
fldenv
cli
push
and
add
mov
cmc
adc
push
add
filds
push
jbe
das
jl
xchg
mov
movsl
cmp
inc
insl
aam
cmp
in
out
mov
inc
pop
in
xorb
sbb
or
push
mov
call
sub
repz
jbe
mov
std
incl
fcompl
sbb
sub
stos
push
xchg
jg
mov
outsl
rcll
mov
push
js
or
das
lock
jne
cs
mov
je
ffree
or
sbb
fildll
mov
test
std
mov
cmp
cmpsl
push
test
out
sti
mov
ljmp
fwait
scas
and
mov
mov
ljmp
jg
je
sub
pop
lods
cmp
lcall
cwtl
push
or
dec
lods
nop
and
add
sarl
add
or
and
dec
notl
jg
inc
fnstsw
add
mov
sub
adc
roll
sti
lahf
jl
cmp
xchg
xorb
into
std
cmp
adcl
sarb
xor
ljmp
sub
inc
jmp
rcrb
adc
mov
jecxz
mov
mov
faddl
cli
popa
subb
mov
ja
mov
or
into
imul
mov
into
sub
clc
ljmp
xor
and
mov
je
int3
mov
jb
jo
movsl
push
cmp
ficomps
enter
inc
pop
hlt
or
sarb
mov
and
test
xchg
les
adcb
push
push
lock
pop
fadds
mov
cli
popf
jge
dec
je
jbe
mov
adc
and
pop
cmp
adc
fidivrs
fistps
dec
repz
shll
mov
call
pop
mov
call
inc
adc
out
or
sub
xchg
orl
dec
or
or
scas
mov
lods
sub
lea
jl
fisubl
inc
adc
test
add
inc
test
lea
xor
aam
add
inc
mov
mov
sub
inc
enter
fisubs
pop
and
xchg
xorl
push
mov
cmpsl
test
jp
fdivrs
inc
mov
sub
cs
jecxz
mov
xchg
insb
inc
or
push
xor
push
pop
mov
imul
mov
jge
lcall
xchg
pop
jns
jle
mov
and
mov
test
loopne
roll
jmp
push
or
in
dec
fs
sub
mov
jne
mov
jg
loopne
aam
dec
outsb
or
cmp
rclb
call
adc
cmpsl
sti
stos
call
cld
add
test
cld
push
rolb
les
imulb
cld
mov
jmp
adc
ja
push
sub
push
aaa
sub
jge
and
xchg
mov
nop
cmp
pcmpeqb
add
adc
jmp
mov
xchg
lods
jl
cmc
inc
das
cs
lea
sub
rcr
or
mov
les
mov
loope
lahf
mov
push
xchg
add
ret
add
xlat
mov
hlt
test
xchg
jecxz
inc
sbbb
fisubrs
and
test
push
lds
add
fisubrl
ror
dec
nop
js
add
mov
dec
mov
inc
push
aaa
cmp
jb
mov
movsb
insl
sti
test
adc
shll
mov
sub
cmpsl
rol
stos
sti
cmpsb
pop
loopne
sbb
push
addr16
cli
pop
mov
movsl
jge
mov
in
repz
or
pop
call
in
push
mov
andb
aaa
inc
push
mov
iret
js
inc
aam
push
adc
rcr
les
movsl
sub
and
dec
or
inc
sbb
or
mov
mov
loop
leave
cwtl
call
arpl
inc
mov
jae
jne
jg
push
mov
push
lahf
cltd
lea
jbe
imul
int
jge
loop
daa
cmp
jecxz
or
subb
or
cmp
mov
xor
das
xchg
cs
cwtl
and
mov
xchg
xchg
mov
pop
scas
inc
mov
stos
mov
or
stos
add
fistps
mov
imul
sub
shll
mov
lock
adc
shrb
in
push
sti
dec
inc
jns
push
cwtl
mov
mov
in
or
insb
mov
add
test
test
dec
sub
cmp
inc
xchg
ret
mov
xor
int
and
jl
inc
adc
repnz
sbb
hlt
pop
test
pop
std
cmp
mov
movsb
lahf
cwtl
ljmp
popf
lock
cld
and
dec
and
mov
adc
hlt
mov
jne
sub
mov
popf
mov
stc
inc
popa
call
xchg
adc
por
jp
mov
dec
subl
pop
and
pusha
imul
mov
subl
cld
cmpsb
xor
or
push
jl
js
setg
adc
jle
in
test
ret
stos
lea
hlt
repz
mov
lcall
dec
popf
mov
mov
hlt
or
jno
jmp
fildl
jp
gs
loope
negb
sub
dec
repz
sub
ss
push
cli
mov
push
je
pop
xor
movb
adc
cmc
cmp
mov
stos
dec
dec
popf
cmp
sub
jo
jne
or
outsl
bound
ret
cmp
mov
inc
push
jne
dec
sbb
push
or
mov
sbb
add
int
popa
andl
push
cmpsl
sub
jne
mov
jle
mov
cmpsb
orb
add
mov
fisubrl
mov
gs
inc
push
and
shlb
or
inc
fdivr
dec
xor
aaa
mov
decl
add
jo
inc
adc
rcrl
sahf
add
jno
loop
mov
add
fsubrs
jg
mov
add
mov
adc
mov
jb
jne
dec
fstpt
notl
cs
cmp
xor
es
jle
std
push
scas
fs
inc
push
sub
arpl
dec
add
dec
and
adc
decl
push
inc
mov
inc
jmp
add
outsl
lret
add
insb
ljmp
cs
ret
xor
push
add
sti
out
sbb
push
push
jmp
add
fistpl
out
out
inc
fs
dec
popa
or
inc
inc
push
mov
outsb
jle
dec
lods
mov
pop
mov
push
out
out
outsl
mov
inc
pusha
and
push
insl
push
mov
in
xlat
popf
jg
mov
outsb
data16
jmp
les
sub
cwtl
push
outsb
jno
inc
mov
inc
add
inc
mov
fildl
jno
push
or
mov
fildl
dec
push
jae
fs
mov
inc
popa
dec
bound
imul
push
inc
pop
jnp
imul
inc
ja
loope
sti
push
adc
cmp
ss
xor
mov
jnp
jl
adc
push
pop
rcrl
sbb
jb
bound
inc
popl
cmp
fnsave
dec
jl
jbe
aaa
inc
dec
inc
test
pop
fidivl
cli
cs
aaa
sbb
dec
inc
mov
cmp
mov
ja
dec
push
push
adc
mov
arpl
sti
sub
rorl
pcmpgtd
lret
mov
jns
push
daa
outsb
pop
mov
jnp
add
test
fistps
push
and
scas
sub
fstpt
stc
dec
dec
addr16
insb
push
mov
jbe
or
mov
add
shrl
mov
push
ljmp
imul
sub
push
mov
rcrb
cli
dec
mov
pop
clc
jbe
fiadds
push
dec
and
inc
ret
mov
incb
es
out
or
mov
mov
mov
imul
xlat
add
je
mov
push
outsb
pop
mov
js
dec
xor
sub
cmp
fsubrp
fildl
lret
and
sarb
addb
dec
jg
lock
inc
push
mov
push
xor
mov
fldl
sbb
movsl
std
inc
ja
pop
sub
scas
shll
pop
mov
push
or
call
imul
sbb
testb
aaa
dec
mov
insl
xor
dec
cmp
jns
mov
mov
insb
pop
pop
mov
mov
fldt
push
fs
test
inc
pop
inc
xor
jo
push
lea
add
dec
adc
mov
mov
xor
loopne
mov
dec
cmp
and
outsl
xor
loopne
and
enter
mov
push
jb
push
push
pop
mov
loopne
mov
dec
mov
fistl
ficompl
jne
mov
sub
jne
push
call
out
inc
add
cltd
inc
sub
mov
mov
or
xor
mov
or
sub
push
jbe
xlat
inc
icebp
bound
sbb
fstps
or
stc
sarl
push
in
dec
pop
and
cmp
xor
jle
sbb
addr16
inc
push
addb
loope
mov
enter
rol
or
mov
mov
addb
out
pop
dec
push
outsl
ja
push
pop
movb
es
inc
fdivrs
imul
or
push
mov
add
pop
int
aas
das
inc
push
push
cli
push
jnp
pop
jg
push
dec
aam
inc
outsl
imul
adc
je
push
push
bound
add
sub
pop
jne
adc
insl
mov
adc
add
push
stos
test
or
adc
and
add
sbb
outsl
add
es
adc
mov
add
mov
mov
cmovle
fistpl
mov
xor
imul
gs
pop
imul
sbb
inc
mov
add
mov
push
dec
sbb
lods
dec
or
sti
pop
mov
shrb
mov
lcall
and
cltd
sbbb
push
or
imul
inc
xor
adc
cmp
incb
and
pop
lods
mov
sub
shlb
lock
push
hlt
mov
popf
push
and
ja
or
mov
xor
and
adc
push
int
jo
shrl
add
rolb
jae
mov
outsb
add
push
jae
add
mov
jbe
push
adc
push
inc
mov
in
adc
cmp
mov
adc
stos
pushf
subl
lock
imul
call
adc
cmp
and
fildl
pop
nop
sarl
pop
imul
cmp
mov
pop
mov
and
dec
push
rcrb
test
push
xor
scas
or
cmp
push
lret
pop
cmp
or
adc
mov
adc
add
or
decl
add
add
sti
in
lods
fists
mov
fcomi
call
aam
jns
xlat
fucom
sub
fcoml
imul
call
mov
jne
hlt
loopne
out
jl
cli
fcoms
add
add
xchg
sbb
cmp
push
push
xchg
pop
and
repz
fwait
xchg
and
mov
std
std
pop
xor
push
mov
mov
lds
adc
push
adc
int
insb
push
test
stos
jecxz
stos
sub
rcrb
cld
xlat
shrb
cmpsb
cmpsl
aaa
sarl
rcl
push
stc
rcr
sti
outsl
pop
fistl
xor
push
cs
fsts
mov
insb
movl
movsl
lock
lods
cmp
movsl
loopne
cmpsl
out
lcall
ret
mov
pop
mov
movsl
pop
mov
in
scas
aam
notl
jmp
insb
xchg
jbe
push
cmpl
mov
xor
shl
cld
push
jnp
jb
lock
incl
fisttpl
std
jno
or
dec
rcr
push
sbb
mov
lcall
jl
adc
jge
daa
daa
dec
enter
sar
popf
daa
daa
daa
hlt
repnz
mov
inc
clc
lds
pop
mov
imul
mov
push
stc
mov
pushf
push
sub
jle
addr16
fstp
add
ret
mov
movsl
call
cld
insb
and
mov
test
jl
aam
ljmp
lahf
inc
sbb
dec
popa
insl
loope
xor
in
inc
cmp
cltd
push
gs
xchg
inc
lds
pop
pushf
push
enter
enter
push
enter
jle
lret
xchg
pushf
ret
popf
aam
in
dec
inc
or
sub
push
jle
hlt
xchg
sahf
push
sub
push
sbb
scas
push
loope
lret
fmuls
std
lods
jmp
ja
or
call
popf
daa
daa
icebp
stc
push
push
aam
pushf
pushf
pushf
xlat
rcl
imul
pop
adc
iret
push
in
movsl
enterw
push
cmp
push
imulb
icebp
lock
out
int
popf
popf
repnz
push
clc
cld
fmul
rcrb
push
repz
cli
addr16
popf
sub
sti
sub
lahf
in
fstps
inc
in
out
out
aas
fmul
fabs
mov
mov
xchg
xor
push
les
loopne
ljmp
cmp
shlb
jle
fstl
push
jne
lcall
jbe
iret
cs
pop
loopne
sbb
push
in
repz
mov
push
xchg
sub
push
xchg
adc
jbe
xchg
outsl
in
mov
outsl
add
loopne
push
inc
mov
xchg
test
xchg
aad
jbe
scas
xchg
mov
popf
sub
punpckhdq
pop
std
movsl
fidivs
popf
std
adc
je
pop
push
popf
dec
pop
xchg
or
dec
jge
xchg
rorb
popf
xlat
popf
or
adc
jl
add
jge
out
enter
push
push
adc
lahf
mov
xchg
mov
gs
imul
and
lahf
or
fistpl
push
dec
sbb
and
imul
push
cmp
pusha
bound
xchg
loope
sarl
jle
mov
xchg
test
jae
neg
add
test
pop
cmp
xlat
fidivs
sbb
lds
fdivp
dec
lcall
sbb
or
dec
push
test
cmp
jl
jge
xchg
enter
sbb
lea
jl
jl
xor
out
jge
or
mov
ret
xchg
aad
push
shlb
mov
in
cwtl
movsl
sbb
popf
dec
mov
sbb
lock
repz
cmp
lea
outsl
in
jno
push
ficomps
mov
add
adc
insl
xchg
pusha
or
dec
lea
sbb
fadd
ret
mov
mov
mov
lds
dec
lret
sbb
bound
mov
mov
mov
popa
mov
sbb
dec
or
xchg
jl
fists
mov
xchg
cmpb
mov
subl
pop
imul
ja
int3
push
push
mov
xor
out
movl
add
lock
dec
popf
inc
cmpsb
push
push
into
and
and
addb
loope
adc
ja
mov
push
adc
es
fmull
test
xor
xchg
mov
leave
sahf
leave
dec
popf
sbbl
xchg
adc
push
xchg
fmull
in
pop
xchg
lcall
std
imul
jge
out
jne
ficoml
icebp
rorb
add
test
negl
or
adc
jnp
mov
adc
mov
jge
pop
sub
mov
ret
bound
out
dec
bound
mov
stc
dec
dec
dec
dec
loope
loope
push
sbb
loop
or
popa
icebp
fimuls
mov
call
fnsave
mov
xchg
lods
push
jb
mov
cmp
popf
add
shrl
ficomps
pop
pushf
or
ret
dec
mov
jg
sbb
int3
sbb
aaa
dec
mov
rcrb
aam
inc
xchg
jle
rcr
push
outsb
mov
scas
pop
out
mov
and
pop
decb
jg
mov
xchg
xchg
imul
jae
jbe
mov
test
aad
mov
mov
mov
shrb
push
imul
inc
fwait
popf
push
loope
and
fnstsw
push
cltd
loope
push
mov
fisttps
fbstp
or
pop
stos
mov
jge
or
fldcw
mov
or
pop
push
xchg
pop
xchg
lds
jno
cmp
sub
popf
test
das
mov
outsb
outsb
jmp
push
push
xchg
push
xor
xchg
mov
mov
arpl
mov
push
sub
ficoml
test
push
pop
xchg
mov
popf
sbb
jbe
fbstp
push
nop
lcall
push
cltd
adc
mov
sahf
add
loope
call
sbb
cmpsb
inc
xlat
bound
lret
push
sub
cld
cltd
mov
sti
fnstenv
shrb
sub
xchg
ljmp
insl
or
lahf
xchg
add
adc
push
repz
insb
loopne
test
bound
mov
lahf
xchg
andb
sub
mov
out
add
mov
fwait
jmp
ficompl
jg
push
rorl
push
sbb
lea
lds
scas
addr16
sbb
jne
sbb
push
cmpb
test
sbb
fldt
jl
dec
push
xchg
cmpsb
push
inc
loopne
lods
sbb
mov
lcall
jl
mov
repz
ja
xlat
das
jle
jne
adc
mov
insl
nop
je
mov
push
push
xlat
lea
add
in
mov
fcmovne
hlt
arpl
lea
cmp
ret
add
cltd
cmp
mov
pop
jp
push
cltd
loopne
mov
xchg
ficomps
mov
outsl
mov
fimuls
xchg
lahf
cmp
aaa
jp
xchg
push
scas
xor
es
sbb
mov
movntq
xchg
and
pushf
lods
cltd
and
test
push
insl
sub
movsl
enter
sub
sti
sub
cs
aad
sub
lret
sahf
sub
sub
lret
lahf
add
mov
sub
push
pop
outsl
dec
fsubs
cltd
shrb
jnp
movb
cs
aaa
imul
adc
adc
or
adc
jns
sub
push
xor
sti
sbb
pop
aas
sub
pop
fistps
xchg
push
mov
mov
push
push
sbb
mov
bound
int3
fistpl
xchg
adc
jg
aas
cmc
mov
daa
adc
xchg
jge
pop
out
cmpsb
pop
push
jle
outsb
pop
or
mov
aam
test
fnsave
push
out
loopne
aas
jle
jge
mov
pushl
cmp
fadds
into
jne
out
scas
lds
xchg
call
nop
out
fistps
insl
ljmp
es
inc
bound
mov
xchg
int
pop
adc
inc
push
je
aaa
loop
aaa
inc
sub
out
push
mov
loope
mov
mov
adc
popf
jl
gs
push
cld
jg
push
ja
xor
xor
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
imul
lods
mov
sub
mov
add
mov
mov
add
or
and
adc
jne
inc
insb
add
add
xor
add
add
adc
lret
fnsave
call
call
adc
jno
and
sbb
icebp
and
or
add
and
movlps
add
daa
sbb
jbe
insl
lods
insl
aaa
and
adc
or
cmp
cmpsb
and
into
out
lods
inc
add
adc
or
mov
add
jne
outsl
sbb
lret
add
lods
jge
add
je
push
aas
adc
pop
imul
outsb
jae
outsl
imul
adc
daa
adc
adc
add
push
jne
adc
or
outsb
imul
mov
fwait
iret
dec
call
imul
or
imul
pop
inc
add
mov
aas
imul
add
and
outsb
and
push
inc
add
das
mov
lods
lock
daa
hlt
pop
and
aad
into
mov
push
movsl
adc
adc
out
inc
call
pusha
push
std
sbb
pop
imul
and
mov
notl
jbe
loope
out
sub
add
loopne
inc
mov
mov
roll
ss
imul
jae
sub
add
pop
idivl
jne
jb
test
xchg
dec
sub
add
shr
push
jg
loopne
add
pop
and
add
je
imul
cli
jge
insb
mov
add
add
and
or
dec
mov
xor
je
out
aaa
xlat
cld
and
add
insb
aaa
das
inc
add
insl
pop
mov
sbb
addb
push
inc
adc
inc
adc
fbstp
dec
jb
add
jb
sub
add
nop
add
jge
xor
add
dec
jl
sbb
int
mov
jne
add
popa
inc
jne
or
add
pop
inc
das
outsl
lret
int3
pop
xlat
add
push
mov
add
sarb
in
or
insb
mov
aaa
adc
jns
mov
jae
adc
push
push
insl
sbb
outsl
or
je
or
insb
lods
jmp
cmc
jns
mov
jne
ja
jne
outsl
repz
xor
adc
push
cwtl
dec
sbb
push
adc
bound
pop
cmp
xchg
shlb
sbb
cmp
jns
outsb
jnp
je
or
push
aaa
cmp
and
or
lock
pop
dec
pop
gs
frstor
jbe
jne
lea
push
and
mov
ret
sub
mov
out
mov
xor
ja
jmp
scas
jnp
and
imul
mov
je
inc
and
mov
push
rcrl
dec
mov
xor
fsubp
mov
loope
xor
push
test
in
loope
sbb
mov
pop
sbb
jb
cmc
popa
and
jo
jo
adc
mov
insl
inc
imul
dec
sbb
sbb
lods
popa
mov
loope
jmp
pmaxsw
jg
andl
and
pop
dec
push
xor
dec
jge
pop
inc
cmp
int
xlat
inc
jne
add
fadds
imul
mov
push
jg
xchg
mov
cmp
lret
popf
pop
lods
xchg
mov
xchg
jp
insl
mov
xchg
cmpsl
and
call
mov
mov
fs
or
dec
cmp
popa
gs
jp
cmp
dec
ret
jns
sub
in
jecxz
push
out
data16
adc
fs
imul
mov
inc
sbb
arpl
or
inc
insb
orl
jne
nop
in
dec
aas
test
xchg
scas
rcrb
dec
leave
insb
fnstcw
out
mov
jne
ret
lret
sahf
fwait
jne
xchg
add
fld
js
jbe
pop
jae
ret
dec
sub
fbld
jns
cmp
bound
push
in
fwait
xor
pop
sti
xchg
aaa
adc
je
jo
xchg
rorl
adc
mov
cmp
leave
jae
jno
jo
mov
inc
xchg
fs
cmpsl
pop
int3
pop
mulb
iret
xchg
idivl
add
dec
push
dec
jb
mov
mov
outsb
lods
loope
dec
sbb
mov
gs
ja
fwait
mov
push
sti
fimuls
xor
inc
sub
push
loope
cmc
or
movsl
std
xchg
cmp
popa
loopne
pop
inc
ret
push
jno
xor
cmc
je
mull
loopne
sbb
imul
xor
pop
adc
dec
std
xchg
jnp
mov
mov
push
pop
xchg
movsb
cmp
movb
adc
cmp
notb
add
push
cmpl
std
insl
jne
inc
es
mov
popa
imull
xlat
add
dec
negl
jg
sbb
mov
push
pop
inc
pop
jbe
outsl
inc
xor
out
cmp
popf
push
shrl
sbb
imul
or
mov
jb
lock
or
daa
addr16
xor
adc
dec
and
scas
add
fwait
out
arpl
idivb
inc
xchg
outsb
dec
sbb
push
es
lods
xor
in
sbb
adc
or
ja
dec
sarl
and
and
sbb
xchg
int
inc
mov
cmp
sbb
popa
aaa
dec
dec
pop
ret
arpl
or
sbb
inc
test
scas
ret
movsb
shl
stos
inc
push
xor
addb
scas
jo
ret
out
cmc
inc
or
insb
popf
adc
loope
mov
sbb
rorl
jae
je
imul
jo
dec
and
xchg
loope
loop
inc
aam
push
cmp
fs
js
je
cmp
jnp
fsubl
adc
or
fs
pop
scas
leave
inc
xchg
sbb
sbb
add
js
and
lahf
aam
cmpsl
jne
addl
divb
push
test
xchg
jbe
cmp
jnp
mov
dec
inc
out
mov
add
xchg
lods
dec
out
imul
xor
fisubrs
add
mov
insl
jns
lahf
xor
not
lret
cvtps2pi
push
xlat
test
gs
lcall
sbb
popa
jecxz
inc
arpl
and
dec
in
jmp
sti
int
nop
sti
mov
or
fistps
arpl
sbb
ror
shll
push
and
stos
sub
pop
insl
int
xor
jle
andl
dec
jg
push
in
sbb
test
dec
cmp
ja
leave
adc
pusha
push
bound
gs
inc
inc
inc
call
imul
inc
jl
addr16
rol
mov
push
test
push
pop
add
inc
xor
mov
in
jne
inc
std
add
popa
int
sahf
js
pop
inc
jmp
sub
popf
popf
cmc
or
sbbl
outsb
inc
in
lods
outsb
scas
int3
sub
fwait
lock
jns
fists
jmp
sub
xor
rclb
adc
clc
xor
repz
les
push
dec
jnp
pop
popa
xor
pushf
lahf
dec
cmc
jmp
and
fidivl
pop
nop
inc
inc
je
orl
xchg
jb
add
popf
adc
arpl
bound
insl
sub
xchg
sbb
jnp
fldcw
xor
xchg
outsl
jecxz
insl
gs
popf
rcrl
mov
xor
or
mov
ficomps
jnp
imul
shlb
mov
xchg
sahf
fstl
jp
or
or
lret
movsl
sti
jle
jno
mov
test
cmp
xor
jns
add
dec
and
push
sarl
mov
inc
lret
add
dec
pop
popf
sbb
inc
lods
out
sub
push
or
stos
in
inc
xchg
add
mov
pusha
inc
btc
pop
inc
movsb
xchg
ds
mov
sbb
int
bound
sahf
sbb
xor
lods
push
outsb
or
jo
sub
mov
icebp
sahf
mov
inc
inc
lea
mov
int3
ret
int
jae
mov
push
sub
sbbl
mov
loopne
jb
dec
and
and
xchg
add
dec
adc
jo
pop
and
sti
lcall
jne
push
jno
fsubs
into
add
pop
out
imul
jae
or
push
lods
outsl
inc
mov
jg
imul
push
insl
and
add
add
push
loope
mov
add
mov
out
div
xor
insb
pop
pop
pop
mov
fildl
xchg
fcmovu
pop
rolb
js
pop
repz
mov
mov
adc
mov
std
push
add
mov
pop
pop
or
xchg
rolb
or
jmp
pop
push
add
cmp
xor
out
decb
add
setbe
dec
cmp
or
cmp
daa
icebp
pop
sbb
adc
movsb
daa
pop
xor
or
mov
xor
andl
add
int
sahf
mov
loopne
outsl
add
jge
xchg
in
lods
into
outsl
jnp
pop
dec
out
push
cmpsl
roll
rolb
add
add
stos
mov
enterw
pop
mov
adc
lret
daa
sub
js
add
nop
data16
dec
out
bound
in
dec
or
xor
push
cvttps2pi
scas
pop
fs
mov
or
adc
mov
das
lcall
addr16
int
jns
ss
jg
mov
flds
pop
cmp
add
jge
out
addl
mov
fdivrp
xchg
mov
subl
adc
and
repnz
in
or
pop
imul
jne
pop
and
xchg
inc
les
js
mov
add
add
out
sub
mov
stos
outsb
adc
sbb
jle
lahf
inc
enter
ret
popf
daa
and
mov
out
ja
add
fwait
adc
cmc
ror
das
xor
add
mov
pop
stc
arpl
fiaddl
inc
xchg
and
inc
enterw
aas
daa
adc
jl
pop
add
mov
add
mov
add
jno
out
cmp
mov
adc
and
gs
test
xchg
inc
add
or
mov
pop
loopne,pt
scas
repnz
pusha
aas
shll
inc
sti
dec
dec
lcall
add
adc
jl
mov
add
sub
insb
arpl
push
xchg
add
andl
sbb
ret
fwait
add
push
cmp
pop
xlat
fldl
fistps
mov
das
and
test
adc
add
mov
in
subb
mov
adc
mov
ja
pop
dec
cmp
add
cmp
pop
and
lock
aas
xor
xor
xchg
rcrl
js
add
addl
jns
adcl
stc
das
jae
inc
andl
jae
inc
push
push
mov
into
outsl
ficoms
add
insl
pop
xor
and
inc
pop
pop
xor
btc
pop
cmp
xor
mov
jne
ja
xchg
sbb
adc
mov
imul
add
nop
mov
fists
or
movsb
add
inc
jns
call
and
add
add
out
cmc
adc
jmp
xor
xchg
adcl
insl
mov
add
or
inc
push
inc
fwait
das
jmp
lock
aaa
ja
add
and
int3
mov
ljmp
xchg
jmp
push
movsb
cmp
inc
lcall
add
push
iret
cmp
rcrb
inc
ljmp
mov
pusha
xchg
pop
ret
add
xchg
jne
jo
xchg
adcl
mov
in
jg
int
lea
xor
xor
mov
int
cmp
push
insl
mov
sbb
sbb
add
shrb
xchg
cmp
lds
dec
mov
gs
inc
mov
mov
loopne
bound
xchg
sub
scas
sub
dec
and
fdivs
imul
mov
repz
add
mov
pop
jl
cmovbe
scas
add
pop
sbb
arpl
jns
cmp
mov
lahf
insl
mov
and
add
fsubs
adcl
imul
imul
inc
jp
jp
ja
jg
xchg
jl
or
frstor
dec
or
push
xchg
pop
push
mov
fistl
test
dec
jo
fldenv
nop
movsl
jb
jns
les
addr16
dec
pop
push
dec
aad
push
adc
xchg
or
inc
add
pop
insb
or
mov
fldl
js
rorl
dec
loope
jae
push
add
xor
pop
gs
xchg
mov
cmpsl
insb
and
shl
xchg
pop
xor
jb
fwait
imul
sbb
dec
sbb
add
sub
insb
xor
insb
add
mov
int
cs
pop
add
enter
push
bound
ja
mov
ret
popa
in
xor
imul
fistps
icebp
pop
lock
push
pop
and
xorb
cmp
daa
xor
sti
sti
imul
arpl
jne
adc
stc
or
iret
adc
pop
lea
cmp
push
shll
push
les
push
lds
ja
lcall
pop
adc
push
aas
inc
test
or
loop
add
rcl
lock
jns
cmp
out
add
mov
insb
lahf
loope
rcr
sbb
loopne
dec
imul
pop
push
ja
mov
enter
or
add
test
inc
fnsave
cmp
add
insb
and
jge
fistpll
popa
leave
arpl
pop
imul
sbb
lahf
call
xchg
sub
sbb
sub
ret
dec
iret
mov
mov
adcb
pop
icebp
stos
jae
jns
adc
mov
daa
addr16
cmp
int3
jae
mov
sahf
ficomps
adc
pop
fwait
adc
pop
repnz
xchg
or
push
aam
mov
push
negl
pusha
das
subl
and
sbb
jnp
das
jbe
mov
and
push
mov
fbstp
inc
rorb
push
mov
popf
adc
bound
fsubrp
sti
out
lahf
xor
mov
insb
sub
dec
dec
dec
outsl
adc
jmp
ja
es
shl
addl
test
outsl
inc
mov
pushl
adcb
ja
inc
cmp
mov
aaa
adcl
orl
sbb
icebp
adc
add
pop
arpl
xor
jge
aam
js
pop
jnp
je
sub
sub
mov
sbb
sbb
hlt
and
jns
test
jmp
fadds
movlps
xchg
sbb
or
movsl
cmp
jno
dec
shl
shl
push
in
and
in
jo
pop
jae
jg
push
inc
bswap
loopne
daa
iret
cltd
push
cmp
jnp
xchg
sub
stos
daa
outsl
xchg
and
insb
fsts
lret
xlat
aas
sbb
dec
stos
xor
jmp
pushf
je
arpl
rorl
or
aaa
sub
clc
es
insl
push
popf
adc
sbb
ja
in
inc
addr16
jno
dec
mov
sbb
dec
loop
leave
and
in
push
xor
mov
sbb
sbb
or
cmpl
xchg
lods
fwait
leave
das
dec
xchg
add
test
adc
and
push
jo
imul
sub
js
frstor
cs
daa
push
mov
or
inc
and
cmc
cwtl
dec
and
dec
xlat
pusha
xchg
mov
je
andb
jns
jecxz
test
push
stos
js
rcr
cltd
insb
aas
mov
or
lahf
pop
adcb
mov
push
dec
cwtl
mov
jl
fwait
and
jo
lds
dec
xchg
cmc
js
inc
pop
jb
cmp
jmp
aaa
aam
cmp
pop
xor
push
mov
into
aaa
popa
in
inc
es
xchg
cmpsl
inc
pop
imul
jns
and
aaa
ffreep
dec
push
xchg
cs
add
and
dec
js
test
jb
das
mov
push
push
sbb
mov
flds
mov
pop
pop
pop
shll
push
adc
push
std
jnp
loop
jnp
sbb
js
rcll
dec
int
sbb
jecxz
pop
cmp
or
push
addr16
clc
stc
mov
xchg
cs
dec
xor
jno
add
roll
sub
inc
or
and
sti
adc
fsubp
jmp
lret
popl
sarl
mov
leave
add
popl
movsb
rcll
cmp
dec
xchg
loopne
jbe
or
shl
push
rorl
xchg
sbb
sbb
add
out
cli
call
mov
cmp
sarl
pop
cmp
test
dec
cmc
vunpckhps
negl
jecxz
add
fadds
cmc
and
push
mov
addr16
push
dec
pop
pop
sbb
roll
adc
jo
dec
xchg
adc
jg
pusha
xor
and
sub
scas
cmp
add
sbb
mov
sbb
arpl
mov
pop
sub
sbb
mov
rol
rorl
push
dec
cmp
daa
dec
push
add
mov
jb
inc
add
aad
mov
or
sbb
es
jo
inc
mov
and
mov
mov
inc
and
or
pop
loopne
adc
fidivl
and
push
adc
call
test
adc
xor
and
sub
ficompl
lods
aaa
sbb
and
adc
out
stos
add
or
pop
xlat
fidivl
inc
pop
adc
call
add
add
out
and
dec
mov
dec
pop
xor
inc
fldt
mov
gs
pop
jne
pop
lods
mov
lcall
pop
jnp
adc
mov
xchg
inc
and
mov
pop
imul
add
mov
dec
or
and
add
insl
pop
imul
or
je
adc
jb
jae
ret
or
in
mov
leave
dec
call
xor
adc
bound
insb
xchg
pusha
adc
lcall
sub
cmp
int
mov
and
inc
sbb
scas
xchg
mulb
xor
sub
fsubrs
fistpl
pop
cli
adc
cmp
out
pop
inc
idivl
je
icebp
pop
gs
and
inc
pop
add
push
out
sbb
cmpsl
xorb
mov
out
out
fisttpl
lods
shll
pop
imul
cs
xor
int
xor
or
lret
pop
jae
adc
inc
cmp
and
xor
pop
jmp
adc
push
adc
fwait
mov
jge
add
sub
mov
jne
and
mov
add
add
push
icebp
adc
cmp
ss
daa
or
adc
push
mov
fstl
and
sub
sbb
push
add
inc
mov
adc
adc
pop
sbb
and
insl
imul
or
and
inc
push
sub
ficoml
or
adc
enter
imul
push
aam
and
insl
sub
sub
inc
or
out
and
xchg
adc
subl
imul
mov
add
xor
inc
inc
cs
pop
fistl
je
pop
fistpl
jae
or
add
or
call
lods
mov
popa
gs
cmp
push
loopne
imul
push
pop
xor
pop
rorb
cmp
mov
cmp
test
pop
call
cmp
mov
sbb
dec
rcrb
mov
inc
or
incl
add
imul
sbb
lahf
rcl
mov
lock
mov
pop
pushf
popf
inc
cld
and
pop
adc
adc
scas
xchg
add
dec
or
adc
sbb
mov
je
data16
xor
sbb
xchg
mov
sbb
pop
mov
mov
adc
adc
push
add
cltd
scas
lea
jo
sbb
stc
pop
xchg
xor
fisubl
mov
and
fiaddl
pushf
mov
push
mov
jo
inc
sub
lea
adc
call
xlat
lcall
shll
pusha
jo
xor
sar
imul
pop
add
lds
cmp
mov
pop
or
loopne
imul
out
xchg
leave
data16
mov
leave
inc
jno
cmp
xor
adc
clc
inc
je
mov
pop
or
out
mov
and
and
and
xchg
rorb
enter
add
jnp
pushf
imul
xlat
adc
pop
cmp
insb
scas
cmp
inc
dec
loope
jae
jb
inc
inc
mov
xlat
loope
ljmp
loopne
cmp
xlat
lcall
es
inc
xorl
ja
and
adc
xlat
aam
push
leave
in
test
and
pop
mov
mov
out
test
fcmovnb
mov
ret
add
shll
adc
xor
mov
ljmpw
aaa
ret
cmp
xor
je
and
icebp
mov
lcall
adc
das
mov
add
je
jne
jb
outsb
je
jb
arpl
jae
js
ja
frstpm(287
je
push
adc
inc
jbe
mov
xor
and
inc
inc
push
pop
fldcw
dec
outsl
fs
gs
imul
push
push
outsl
insl
insl
popa
outsb
fs
mov
push
imulb
gs
fs
push
sub
jo
mov
outsl
push
push
gs
and
gs
inc
pop
pop
pop
imul
dec
dec
or
adc
imul
pop
outsl
outsb
dec
push
jns
fstp
mov
imul
dec
outsb
sub
insb
imul
arpl
dec
outsl
popa
jae
fnsave
bound
jb
push
push
cmp
fs
pushf
xor
dec
inc
imul
dec
fsubrs
dec
fs
or
insl
xchg
pop
mov
addr16
outsb
insb
push
mov
ret
arpl
cmp
jne
jo
subb
xchg
bound
jle
cmp
in
xor
xchg
popa
jae
pop
gs
push
gs
js
notb
push
dec
pushf
loop
das
div
and
outsb
push
sahf
xor
daa
inc
mov
mov
adc
dec
imul
and
mov
dec
bound
xchg
fstpl
mov
push
and
dec
imul
jae
push
outsb
mov
pop
mov
adc
ja
test
jmp
insb
in
push
jo
divb
sbb
sbb
and
out
cltd
xchg
xor
and
gs
cs
push
mov
je
or
cmp
cmpsb
cmpsb
loope
jns
popa
jne
mov
jp
xchg
sbb
inc
jecxz
shrb
mov
inc
jns
push
cmp
xor
insb
push
push
sub
jns
jae
push
lret
push
mov
sbbb
and
scas
loope
insb
ret
push
and
out
or
add
adc
outsl
cmp
dec
mov
xchg
add
jb
psubw
iret
and
dec
add
add
cs
inc
loopne
jns
jb
sidtl
add
addb
add
sti
sahf
inc
cmovo
add
out
out
add
add
add
push
fs
out
mov
adc
lds
lock
mov
negl
pop
insb
or
mov
jg
push
and
int
jae
mov
popa
adc
nop
add
cmp
xchg
inc
cs
mov
push
sbb
cmpxchg
daa
lods
mov
mov
dec
cmp
inc
lcall
inc
add
fnop
add
scas
jno
adc
and
mov
inc
jae
or
popa
cmpsl
fldenv
lock
pop
jnp
pushf
insb
xor
fisubrl
frstor
add
add
ljmp
sub
inc
sti
push
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
