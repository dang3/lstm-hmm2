jmp
insl
push
js
push
jne
pop
outsb
imul
je
outsb
fs
outsb
pop
outsl
pop
jnp
pop
pop
pop
pop
jp
jge
je
je
pop
insl
je
push
jnp
gs
pop
jae
jnp
outsl
push
jp
fs
pop
pop
jne
pop
jle
pop
gs
jbe
ja
jp
push
pop
addr16
push
jmp
jo
arpl
dec
jbe
push
imul
imul
imul
jp
jge
pop
jle
push
pop
imul
pop
jl
pop
pusha
jg
jne
jne
pop
outsl
jge
fs
jmp
jl
ds
js
outsb
data16
js
bound
jae
pop
js
jmp
push
pop
pop
insl
data16
bound
jbe
je
insb
push
js
jnp
insl
pop
push
jb
pop
jge
pop
jne
outsb
imul
ja
dec
jnp
pop
je
jne
jg
push
arpl
addr16
imul
jae
pop
outsb
jae
jge
pop
jle
pop
jg
pusha
pop
pop
push
ja
pop
push
push
push
pop
pop
jp
jb
gs
jmp
push
pusha
jb
jmp
push
pop
insl
outsb
push
pop
pop
fs
imul
out
jno
pop
je
push
jmp
jae
push
insb
jge
arpl
fs
jnp
push
insl
insb
jbe
push
jp
jl
popa
jp
jb
outsb
pop
pop
pop
bound
aad
bound
jge
pop
pusha
jb
jae
gs
jg
jp
pop
pop
jmp
push
push
jbe
push
push
jb
pop
push
fs
push
jo
arpl
insb
jno
fs
jae
gs
jg
pop
outsl
pop
jae
imul
insl
pop
pop
pop
jae
popa
pop
pop
pusha
outsl
push
push
gs
jmp
jno
ja
popa
pop
addr16
push
jbe
push
push
pop
insl
push
jmp
push
insb
fs
pop
pop
pop
push
jge
outsl
jmp
push
arpl
insb
pop
jbe
outsl
jbe
imul
push
pop
pusha
push
jnp
jbe
pop
jne
bound
jp
jae
jae
jno
js
jp
ja
jmp
push
push
cmp
push
push
je
push
push
jg
jmp
push
pop
push
jne
pop
jmp
imul
jne
jbe
insb
imul
js
je
pop
push
jno
pop
push
push
jmp
imul
push
bound
push
outsl
insl
push
arpl
outsb
push
xor
jmp
imul
jbe
push
jb
js
pop
jbe
jge
jbe
push
jg
jno
push
push
imul
popa
pop
pusha
imul
imul
jl
jo
jmp
jae
je
pop
jle
pop
popa
insb
pop
addr16
arpl
je
mov
jmp
pusha
jne
jmp
push
pusha
pop
jns
push
push
pusha
push
js
js
bound
pop
push
insl
ja
push
push
bound
outsl
addr16
push
push
je
imul
js
push
push
outsb
jae
push
ja
push
jae
shll
jl
jp
cmp
pop
jge
insl
jnp
ja
addr16
jge
out
outsb
jbe
push
push
ja
pop
jg
jb
pop
js
jnp
push
data16
insb
je
jbe
ja
insb
pop
data16
jp
jle
jg
jge
jmp
imul
jl
outsl
jge
pop
arpl
push
pop
jl
cmp
je
jmp
jge
jb
dec
je
insl
ja
push
addr16
jns
pop
jbe
push
jo
addr16
popa
push
jne
jne
pop
addr16
jnp
jo
js
jno
bound
pusha
push
js
jnp
imul
push
jb
pop
jnp
pop
jno
insb
pop
pop
jne
pop
jge
in
jo
cmp
jle
jo
jns
push
push
outsl
push
jne
jg
popa
jle
outsl
jae
pusha
outsb
pop
push
fs
jg
pop
ja
pop
jae
pop
jle
bound
jo
rcrb
ja
gs
jno
push
je
jns
push
and
jmp
push
push
imul
pop
imul
jae
imul
push
push
jno
outsl
insl
jge
jg
fs
push
insb
bound
pop
jnp
insl
push
pop
imul
cmp
jg
pop
arpl
pop
js
icebp
push
push
je
push
pusha
ja
fs
jg
popa
pop
jo
push
insl
popa
jb
jne
pop
pop
pushaw
jb
push
imul
pop
jo
pop
pop
pop
push
push
mov
jmp
jbe
pushf
jge
sti
lods
jg
out
xor
jmp
adc
fbld
pop
jmp
jns
push
jmp
jae
jl
pop
outsb
pop
push
pop
push
push
outsl
jbe
imul
jge
jae
arpl
jno
outsb
js
jge
pop
pop
imul
jb
ja
push
jnp
jbe
jno
pop
pop
push
jns
jmp
push
jns
outsl
push
jp
pop
data16
gs
push
arpl
jle
push
pop
jmp
imul
pop
imul
push
push
popa
insb
jge
jmp
jae
push
push
arpl
jae
push
pop
outsb
jp
jl
jo
js
push
jb
js
je
arpl
jns
fs
push
ja
pop
jmp
jmp
pop
jnp
outsl
push
push
push
jg
jp
push
addr16
push
pusha
jmp
jle
jb
imul
jo
pop
imul
insl
push
pop
insw
jnp
push
push
mov
jmp
mov
mov
test
jmp
and
add
jmp
pop
push
push
jmp
gs
jp
outsb
push
jbe
pop
push
popa
jl
pop
pop
pop
push
insl
jbe
je
push
jne
pop
push
jge
push
gs
push
jo
push
jo
push
arpl
push
insb
pop
push
jae
pop
pop
jmp
fs
pop
jmp
jbe
jae
je
jns
js
push
jmp
insb
jge
jno
jmp
fs
fs
arpl
outsl
ja
outsb
push
imul
jno
pop
pop
pop
jne
js
jbe
jle
jge
jnp
imul
push
je
pop
js
popa
bound
jns
push
jmp
push
jg
pop
gs
jg
push
ja
pop
outsb
imul
push
js
jns
push
ja
fs
push
jb
data16
jnp
pop
jmp
jl
pop
jge
pop
push
push
imul
jb
jmp
pop
insb
pop
push
pusha
jnp
cmp
jno
jbe
push
jnp
pop
pop
pusha
push
pop
je
jnp
pop
pop
push
pop
imul
push
push
jmp
jg
jge
outsl
jl
push
popa
push
je
jno
push
outsb
pop
push
bound
out
push
popaw
pop
jp
push
js
pop
push
push
arpl
pop
ja
pop
ja
jbe
outsb
pop
pop
jne
push
or
add
cmp
pop
jmp
pop
pop
push
pop
push
js
fs
jge
push
pop
imul
pop
insl
imul
bound
pop
popa
pop
jno
jbe
jne
pop
push
push
jne
pusha
jnp
pop
bound
push
jmp
pop
pop
arpl
cmp
push
data16
addr16
jmp
jb
pop
insb
imul
addr16
jno
jg
jo
push
jbe
jae
js
jns
jns
pop
push
push
pop
push
jp
jbe
push
fs
push
jns
jbe
fdivs
jns
push
jl
push
jp
ja
addr16
arpl
pop
arpl
cmp
jne
jmp
insl
push
pop
jmp
push
imul
pusha
je
push
push
jl
jg
imul
je
pusha
push
jns
push
jno
push
jl
insl
bound
pop
insl
pop
outsl
jae
pop
ja
jno
arpl
data16
jae
jb
jmp
pop
insb
jl
pop
gs
pusha
pop
jle
jmp
jnp
push
data16
jg
jae
push
ja
js
push
jg
jl
pop
push
jbe
jnp
push
pop
pusha
jae
push
outsl
pop
jp
push
jb
jle
push
pop
jae
mov
jmp
push
jo
jmp
pop
pop
jp
jns
push
jns
data16
pop
jae
push
js
jo
ja
jns
push
push
push
jl
pop
push
jnp
jno
jne
pop
jae
ja
outsb
jbe
push
jb
jbe
push
jl
jp
arpl
shrl
jns
insl
jmp
arpl
bound
ja
js
push
pop
gs
jp
outsb
je
jb
je
pop
ja
pop
push
push
popa
imul
arpl
pop
bound
push
push
pop
jns
pop
popa
insl
push
jmp
jbe
jbe
dec
bound
jle
jns
pusha
popaw
jb
jno
popa
jp
push
push
pop
outsl
bound
gs
jge
push
push
push
push
jp
jno
jno
pop
js
push
jmp
push
jmp
fs
pop
push
jo
pop
jo
data16
jae
pop
pop
jno
push
push
jbe
outsl
pop
push
pop
jp
ja
insb
push
push
jbe
ja
jle
pop
jg
arpl
pop
pop
pop
pop
push
pushw
adc
aas
ja
push
push
jno
bound
pusha
jne
inc
push
pop
jle
outsb
push
jbe
arpl
outsb
push
ja
push
jbe
ja
jp
push
pop
gs
arpl
imul
arpl
jbe
jl
lret
outsb
ja
jbe
jmp
jnp
jns
jle
jmp
push
jle
push
jns
jo
outsb
push
js
pop
outsb
push
jb
pop
pop
jle
pop
addr16
jge
jle
js
jno
jns
push
jg
insb
arpl
ja
push
push
jmp
jns
js
cmp
outsl
pop
outsl
outsl
js
jae
push
pop
push
imul
outsb
push
out
jno
gs
outsl
jo
jg
jns
pop
push
jo
jnp
push
gs
jp
ja
pushw
outsl
insl
push
pusha
outsb
jo
jmp
push
insl
jmp
push
js
jb
jne
pop
pop
pop
push
outsb
jge
js
pop
bound
push
jae
je
push
jo
je
popaw
jle
insb
pop
outsl
push
pop
push
jb
push
jo
arpl
je
outsl
jmp
push
jmp
pop
pop
pop
bound
push
arpl
insb
jmp
push
jno
jp
je
pop
jle
imul
bound
pop
push
arpl
push
ja
jae
pusha
jle
je
insb
pop
insb
push
outsl
pop
jo
ja
imul
pusha
jb
push
pop
jo
imul
push
outsb
push
push
pop
jne
push
js
jle
fs
jae
imul
push
pop
jns
js
pop
push
push
push
je
arpl
ret
outsl
bound
popa
jl
outsl
jo
jnp
bound
insb
pop
jb
ret
jmp
jae
jb
push
js
push
pop
push
push
jne
jbe
ja
pop
fs
jb
jge
push
jl
push
push
pop
outsb
jno
push
jp
jb
pop
je
jae
jo
push
pusha
js
jnp
push
push
pop
arpl
ret
jmp
pusha
insl
pop
jae
js
pop
insb
jge
pop
pop
push
pop
jge
je
jmp
push
pop
addr16
fs
push
pop
push
jp
arpl
jno
jo
gs
pusha
jb
pop
ja
jp
jmp
push
push
jbe
popa
pop
jbe
jg
insb
data16
push
jbe
push
pusha
push
insb
gs
js
jl
pop
xchg
jmp
insb
pop
pop
jmp
pop
pop
outsl
jno
pop
bound
imul
jno
imul
insb
jbe
pop
popa
jo
push
push
pop
jle
push
push
pop
insl
imul
push
outsb
outsl
pusha
jb
jmp
ja
push
jbe
jmp
outsb
jnp
jo
outsb
push
jb
push
jmp
jno
jae
pop
imul
push
ja
push
pop
jp
push
imul
js
jb
pop
push
ja
imul
ja
outsb
pop
jmp
outsb
pop
pop
pop
jne
pop
jno
push
arpl
pop
jo
push
push
jg
add
jmp
jae
jbe
inc
push
pop
jle
pop
push
pop
jnp
outsb
push
insb
push
imul
jae
pop
push
push
jo
insl
jno
jnp
imul
push
jle
arpl
insw
imul
enter
pop
jp
jmp
push
insl
push
js
je
mulb
insb
jmp
jbe
fs
pop
jp
pop
bound
push
pop
outsb
data16
push
jnp
push
push
ja
jbe
pop
jg
pop
jb
jge
pop
pop
fs
imul
int3
bound
push
pusha
arpl
popa
jbe
insl
push
jmp
popa
jp
jmp
push
push
pop
arpl
jb
jg
pusha
jne
pop
push
addr16
insb
push
pop
popa
je
jns
outsl
push
imul
jbe
jno
pop
push
outsl
jl
gs
push
push
pusha
jmp
push
jp
popa
jl
push
pop
push
insb
pusha
jae
pop
ja
push
jmp
pop
fs
dec
jnp
imul
push
popa
jp
push
push
jae
bound
pop
push
push
gs
push
push
imul
ja
pop
pop
jbe
jne
jo
arpl
jo
push
jl
pop
jmp
push
jbe
cmp
jle
imul
push
jl
fs
pop
jmp
gs
jge
jle
push
outsl
ja
imul
push
je
imul
pop
insb
push
jo
pop
pop
pop
jnp
dec
jne
jmp
data16
jmp
insl
imul
jl
push
pop
push
push
insl
outsb
jne
jg
addr16
jno
push
jae
fs
pop
jns
pop
push
jnp
pop
jo
pop
push
pop
pop
je
jge
insl
outsb
push
jge
jnp
les
cmp
jae
pop
push
push
arpl
push
pusha
outsb
fs
gs
push
pusha
jnp
imul
pop
push
pop
push
jno
jno
push
jg
jp
outsl
jne
insl
arpl
imul
jmp
js
push
jo
pop
pop
gs
pop
data16
popa
jne
push
jge
imul
push
ret
jmp
push
jae
gs
push
pusha
js
jae
js
push
jp
jb
pop
bound
imul
push
outsb
js
pop
push
jo
insl
ja
arpl
jle
jle
insb
jge
push
js
insb
jp
jnp
jmp
outsl
imul
outsb
jmp
jo
je
jnp
fs
insl
pop
push
ja
out
pop
push
imul
pop
jg
pop
jae
push
push
je
pop
pop
jns
jp
jl
jns
pusha
outsl
outsb
jns
push
push
ja
pop
pop
push
jae
les
cmp
js
dec
pop
outsb
pop
pop
pop
push
jns
pusha
js
jl
push
jne
imul
popa
insl
push
push
pop
outsb
imul
fs
push
jge
jp
push
push
imul
push
jmp
push
insb
jmp
pop
pop
pop
fs
pusha
outsb
pushw
popa
pop
outsb
addr16
jl
jo
jne
data16
jbe
gs
jbe
jae
pusha
insb
pop
imul
jb
jl
jge
je
push
push
outsl
push
imul
cmp
popa
pop
fs
jns
push
outsb
jg
jne
popa
jmp
pop
fs
push
js
pop
ja
outsb
jns
jnp
push
gs
push
jge
pop
pop
jns
pop
jg
jle
push
pop
jmp
push
push
bound
outsl
bound
pop
jle
jge
pusha
arpl
pop
pop
mov
jmp
pop
jne
jmp
insl
jp
push
jbe
push
pusha
push
push
jge
push
insl
push
pop
pop
arpl
jle
ja
push
push
pop
push
jl
push
arpl
fs
insb
push
addr16
jmp
jge
jno
imul
jno
push
ret
jmp
push
pop
outsl
jmp
jne
outsb
outsl
jl
push
jo
outsb
pop
pop
je
insb
jns
push
push
pop
pop
jae
jo
je
arpl
jns
insb
push
pop
push
push
push
js
jae
push
pop
insl
jle
insb
pop
pop
pop
jmp
insl
ja
pop
jmp
insb
pop
pop
bound
jle
jnp
push
push
jmp
pop
jns
cmp
pusha
jg
pop
push
push
pop
push
jo
jle
push
jns
pop
addr16
pop
jo
jns
push
imul
jge
imul
jne
js
push
insl
pop
fs
outsb
jnp
mov
sub
push
jmp
faddl
and
push
xor
mov
mov
mov
sub
sub
push
jmp
sub
inc
push
jmp
sti
pop
jmp
xor
lock
in
ja
jne
adc
pop
sub
shl
xor
add
xor
or
and
sub
xor
push
jmp
sahf
in
cld
or
es
in
sbb
std
push
jmp
add
pop
jmp
mov
xchg
add
jmp
fs
dec
sub
add
or
shr
sub
add
sub
lea
xor
dec
jne
mov
mov
pop
and
jmp
xchg
pop
mov
jmp
pop
mov
inc
mov
jge
leave
ret
push
mov
sub
push
sub
jmp
adc
or
and
or
add
cmpsl
insl
xchg
mov
dec
jbe
test
decl
or
cld
decl
xor
jge
and
add
dec
jne
mov
mov
mov
jmp
sbb
or
add
and
in
das
jmp
sub
jmp
popa
or
movsl
push
out
xchg
aam
xor
jmp
shll
cmp
jmp
and
and
cmp
fmul
ret
push
mov
sub
push
jmp
push
inc
inc
or
sub
jmp
or
add
jmp
out
xchg
imul
mov
mov
mov
and
xor
sub
shr
xor
or
or
xor
add
ror
sub
add
add
sub
dec
jne
mov
mov
pop
mov
jmp
loop
notb
out
jbe
add
add
leave
ret
push
mov
sub
push
push
jmp
dec
or
rorl
sbb
xor
mov
mov
mov
and
shr
inc
or
or
add
sub
dec
jne
mov
mov
mov
jmp
xchg
inc
fldt
ret
pop
push
add
xchg
cmp
mov
jmp
xor
mov
jnp
les
xor
leave
ret
call
ds
fsubrs
lahf
rorb
pop
and
movsl
es
mov
add
pop
dec
in
dec
push
push
lret
insl
jno
fnstcw
mov
xchg
mov
mov
sub
pop
jge
push
sti
dec
mov
pop
dec
jl
lea
cmpl
mov
int
push
add
es
stos
aam
add
jne
mov
mov
mov
outsb
addb
cmpsl
addl
movsb
jg
adc
pop
add
dec
jl
and
push
push
dec
jl
xor
inc
pop
dec
pop
aaa
pop
jge
ret
mov
jl
sub
mov
adcl
mov
jg
inc
pop
xchg
mov
shlb
jmp
or
andb
mov
or
and
sahf
sub
jp
outsb
je
or
and
pop
cltd
std
ret
and
or
dec
rcrb
cli
cmc
jmp
fisttps
dec
jl
dec
cmp
push
mov
or
test
or
or
fwait
push
js
data16
or
nop
inc
sti
adc
bound
cwtl
sahf
mov
jns
fisubs
pop
popa
lcall
adc
repnz
les
cmp
pop
js
mov
imul
or
movsb
cmpsb
dec
ds
xor
push
mov
cmc
add
inc
pushl
aaa
xor
aam
rcrb
in
pop
ds
sub
mov
mov
imul
xlat
pop
dec
jl
xchg
xor
fcom
adc
scas
xor
mov
and
insb
fwait
xor
adc
cmp
xchg
clc
pusha
test
xchg
int3
sbb
ja
inc
push
dec
jl
pop
imul
loope
aaa
or
mov
lcall
jbe
and
outsl
mov
jl
xor
dec
jl
imul
jl
sbb
sbb
sbb
jns
jge
adc
dec
mov
mov
out
pushf
ss
sub
dec
jl
and
mov
mov
add
jl
sbb
adc
pop
cltd
mov
sbb
fidivrl
int
push
shr
cmc
add
pop
mov
cmp
jnp
lahf
test
lcall
js
lret
addr16
push
push
aam
xor
mov
stos
cmc
data16
mov
dec
imul
adc
cmp
push
in
stc
mull
arpl
cmpsl
xlat
mov
into
addr16
icebp
out
sub
enter
cmp
jne
adc
fs
or
shlb
pop
xchg
clc
movsl
test
or
jnp
jnp
xor
xor
push
int3
das
mov
xchg
scas
push
add
stos
lret
mov
es
and
out
es
insl
add
dec
jl
xor
mov
scas
xchg
mov
fmuls
jl
and
loop
xor
pop
xor
outsb
aaa
xor
dec
fmuls
dec
jl
jge
insb
or
jle
clc
out
stos
gs
daa
dec
jl
jmp
lods
ja
add
mov
dec
jl
into
dec
and
in
adc
inc
repz
data16
sub
xor
pop
lcall
xor
mov
in
mov
sub
xor
inc
dec
pop
push
mov
push
adc
adc
out
jne
jbe
xor
xchg
mov
push
mov
mov
pop
ror
pop
andb
insb
cs
jl
mov
xor
ds
in
gs
sub
rcll
pop
mov
std
mov
xchg
dec
repnz
push
clc
pushl
sbb
aam
divb
movsb
iret
and
push
push
ja
mov
and
lret
insb
xor
repz
sbb
jge
xor
pusha
lcall
repnz
mov
xor
xor
popf
push
js
in
jno
add
gs
dec
jl
xor
add
jl
mov
jnp
shll
xor
std
xchg
mov
mov
xchg
xor
xor
fidivs
addr16
bound
mov
icebp
inc
xchg
mov
cmp
arpl
negb
fs
jbe
popf
in
sahf
inc
pop
imul
xchg
xor
jecxz
std
fstps
sbb
xor
jp
and
adc
popa
push
sahf
clc
xchg
outsb
xor
nop
fisubl
inc
gs
dec
pop
test
loop
int
scas
inc
gs
adc
fstpl
sub
aas
adc
lret
inc
cmpl
jl
mov
bound
scas
pop
xor
cmp
fsts
jge
push
mov
push
jg
lea
adc
cmpsl
mov
orl
test
and
ds
and
push
inc
xchg
popa
rcr
push
inc
movsl
mov
pop
add
das
loop
into
sarl
dec
repz
daa
push
jl
cmp
int3
or
std
cmp
cmp
jo
push
jl
ds
xchg
pop
cwtl
mov
insb
outsb
aas
rcrl
movsb
aad
cmp
jge
xor
movsb
pop
cmpsb
dec
aad
scas
dec
fs
dec
xchg
push
pop
cmp
into
sbb
inc
dec
xlat
pushl
jg
cmpsl
jge
rolb
xchg
movsl
iret
stos
cltd
lcall
push
dec
xlat
sbb
fwait
cmp
xchg
dec
jl
iret
mov
inc
iret
movsl
hlt
addr16
into
mov
xor
inc
jl
inc
mov
mov
aam
pop
pop
cli
gs
lcall
pop
xor
fstpt
cmp
push
fadds
inc
mov
cmp
jecxz
scas
add
or
mov
iret
push
inc
dec
mov
pop
dec
dec
jl
cmpl
aad
mov
fidivrl
cmpsl
jns
pop
pop
add
out
pop
cltd
dec
or
jne
mov
ret
adc
jge
pop
and
push
pop
add
dec
dec
jl
popfw
movsl
push
or
dec
jl
ret
iret
push
lcall
ss
jl
dec
mov
mov
jmp
cmp
test
lcall
lahf
pushf
test
jmp
xor
dec
dec
jl
scas
pop
cltd
fsubrl
mov
mov
jbe
or
popf
mov
cmp
push
fs
xor
xchg
push
dec
inc
fwait
push
imul
movb
pop
aad
jg
xchg
js
push
inc
jl
push
fwait
add
jl
jecxz
repz
mov
pop
dec
or
xor
dec
lods
xor
test
sub
out
mov
push
mov
ljmp
jle
dec
dec
jl
xchg
jl
push
insb
cmp
push
dec
jl
or
push
push
int3
jb
int3
pop
ds
jl
push
call
test
or
mov
test
pop
sbb
pop
pop
popf
pop
in
dec
insb
push
pop
dec
jl
mov
inc
jl
push
dec
leave
sbb
pop
dec
ds
out
aam
dec
cmpsb
mov
dec
jl
out
mov
push
shrl
cmp
lahf
je
scas
push
pusha
mov
outsb
pop
dec
jl
jb
test
mov
stc
pop
dec
jl
std
and
aas
dec
mov
sti
pop
dec
cmpsl
and
ficompl
pop
jmp
mov
dec
jl
pop
xor
mov
ficomps
xchg
cmpl
mov
jle
js
pop
dec
fcomps
inc
movsb
cli
fbstp
pop
dec
jle
push
je
pop
dec
jl
outsb
iret
push
sub
or
ljmp
pop
and
push
cwtl
loope
adc
pusha
dec
jl
and
add
mov
movsb
scas
mov
popa
lahf
pop
mov
ss
stc
popa
dec
addr16
and
jmp
dec
jl
or
jae
mov
out
jl
arpl
mov
loope
pop
pop
jo
sbb
fs
jl
and
lods
int3
xchg
jnp
mov
fs
jle
cmp
pop
add
dec
jl
stos
and
sbb
aad
in
addr16
jl
or
bound
jl
data16
bound
into
jbe
or
addr16
data16
dec
jl
jo
and
push
loopne
cmpsb
pushf
xor
enter
mov
adc
mov
mov
jbe
test
adc
arpl
pop
je
mov
imul
cmp
mov
mov
insl
push
stc
ja
outsb
and
jl
repnz
out
out
ss
negl
popf
subb
push
insb
dec
jl
push
jmp
adc
sub
mov
add
dec
jl
repnz
jl
insl
dec
xor
insl
dec
jl
cmp
xor
adc
jl
or
clc
std
cmc
jge
addr16
rep
dec
jl
jle
xor
or
addr16
mov
pop
push
jl
jo
pop
sub
cmp
loop
push
adcl
jo
insl
adc
mov
popf
mov
jp
jl
ret
ds
ljmp
lret
out
cld
ljmp
lahf
jl
bnd
roll
adc
mov
lret
lods
or
loop
movsb
pop
jb
out
mov
sarb
mov
nop
fld
xor
ss
mov
jl
jbe
add
sbb
in
lret
insl
mov
movsb
roll
inc
ret
in
ret
jecxz
popf
in
loop
aas
iret
jge
lret
jp
cltd
bound
pop
aad
out
scas
sub
jnp
sbb
std
in
bound
popa
push
jl
js
int
inc
jl
adc
ss
std
rcr
and
movsl
rolb
ss
fnstenv
jle
jns
add
into
fs
xor
stos
mov
add
mov
cli
shlb
inc
and
int3
mov
mov
iret
dec
into
inc
or
fwait
xor
inc
mov
test
xchg
dec
jbe
and
push
js
ds
xchg
dec
pop
or
cmp
data16
out
leavew
xorl
xchg
movsl
mov
adc
jge
or
rcrl
dec
aas
mov
aas
and
in
inc
dec
loopne
addr16
xchg
lret
insl
hlt
pushf
std
bound
dec
jl
pop
popf
mov
cmp
hlt
adc
xor
gs
cs
gs
orb
cmpsb
inc
int
push
push
pop
sti
shl
sub
fsubl
mov
movsb
gs
orl
pop
adc
out
jbe
dec
or
dec
out
inc
arpl
mov
leave
fs
rcl
int3
mov
repz
test
jae
fwait
lcall
arpl
lret
jg
cs
xchg
add
pop
dec
nop
loope
adc
fcoms
lock
mov
xor
into
cli
out
push
pop
jae
ljmp
outsb
mov
mov
outsl
lea
mov
stos
add
fisubrs
addr16
arpl
sahf
add
into
mov
inc
push
addr16
mov
scas
mov
dec
jl
jnp
mov
inc
js
pop
mov
test
jl
cmpsb
bound
pop
sub
mov
xor
aaa
lea
mov
outsl
sbbb
std
loop
cmpsl
xor
dec
mov
xor
add
lods
add
decb
ret
cwtl
or
cmp
lds
scas
jb
shrb
mov
rorb
push
jl
lahf
push
test
mov
pop
xchg
sub
xlat
adcb
mov
xor
cld
xchg
repz
dec
pushf
fwait
push
push
std
insl
mov
sarb
fxch
dec
std
fdivrp
adc
push
xchg
mov
shl
scas
adc
pop
jge
jl
xchg
scas
cwtl
aaa
cs
sti
gs
inc
push
clc
jge
jl
xchg
repz
fmuls
push
push
inc
ret
and
sbb
inc
arpl
das
add
push
jge
dec
fstpt
repnz
jl
xchg
sbb
fwait
mov
aam
or
js
and
dec
xchg
add
add
cltd
pop
push
mov
stos
and
add
xchg
call
into
adc
push
jl
cltd
jns
aad
out
mov
scas
out
xor
mov
mov
iret
aas
repnz
cs
addr16
ss
out
jp
push
cwtl
sbb
mov
jae
lahf
xchg
sub
cmpsl
dec
jl
cmp
pusha
push
adc
add
sbb
insl
fs
mov
into
inc
shl
cmp
sbb
lcall
mov
jmp
lret
dec
mov
mov
mov
fucomp
push
in
jnp
jbe
add
pop
popa
cmp
jo
dec
mov
or
mov
ss
xor
leave
mov
into
std
mov
insb
xchg
insb
jp
inc
loope
outsl
hlt
jle
mov
dec
jl
aam
fwait
ds
mov
in
idivl
mov
jns
mov
mov
jbe
mov
fstpt
pop
dec
int3
mov
xor
mov
push
imul
fmuls
jo
xor
mov
cmpsb
dec
xlat
cmp
or
xor
push
jne
cmpsb
dec
mov
push
xor
loop
dec
mov
cli
jae
lea
imul
xor
jg
stos
mov
mov
and
test
xchg
xor
out
pop
mov
xor
dec
jl
leave
pop
add
test
cmp
mov
outsl
cmp
dec
jl
ljmp
inc
stos
pop
xchg
out
ljmp
lcall
add
aas
daa
lods
dec
cld
arpl
pop
jl
lods
pushf
cmp
jmp
jl
or
inc
cmp
into
je
mov
dec
ss
lods
dec
jl
mov
jl
xor
jg
pop
jl
scas
add
lret
mov
mov
dec
jl
cmpsl
popa
mov
mov
data16
cltd
test
int
popa
mov
dec
rcr
in
lahf
fnstenv
scas
jno
dec
jl
mov
cltd
ret
pop
xor
lcall
add
dec
jl
mov
jl
add
outsl
insb
cmpsl
mov
fsubrs
inc
dec
mov
mov
das
jl
mov
add
jne
jp
mov
test
mov
rorb
push
mov
push
add
int
mov
mov
pushl
push
int3
jb
mov
gs
in
push
movntps
adc
adcw
shll
jle
mov
dec
mov
or
aam
cmp
repz
daa
fcompl
mov
aad
jnp
cmp
pop
sbbb
mov
jl
jp
and
push
or
sbb
push
enter
in
test
dec
jl
or
cld
cmc
lret
jae
cwtl
loopne
cs
jbe
sub
outsl
subb
jbe
sbb
sbb
xor
dec
scas
inc
int3
fs
push
inc
inc
jle
inc
outsl
jge
mov
dec
jl
xlat
loopne
fs
pop
sti
leave
mov
popa
jg
inc
ja
xor
je
sbb
arpl
dec
mov
cli
adc
iret
iret
push
mov
jno
sub
rorb
rep
aam
vmovntps
lret
insb
mov
rorb
adc
xlat
mov
loopne
cmp
sub
imul
jb
sbb
jns
movsl
pop
out
fcompp
ret
lock
pop
jl
ret
aad
test
outsb
mov
dec
sub
adc
les
aas
pop
xchg
lods
clc
jne
in
adc
jae
push
data16
les
jb
cmp
clc
mov
jnp
test
adc
dec
arpl
or
mov
jle
frstor
dec
push
add
dec
or
ret
or
dec
jl
in
xor
cmp
in
js
cmpsb
push
stos
gs
enter
test
jae
mov
sub
mov
adc
sti
add
fcomi
adc
mov
pcmpgtw
lret
in
arpl
lcall
or
push
jl
lret
mov
pop
cmp
shlb
fwait
mov
fnstcw
pop
xchg
aaa
cli
inc
aam
pop
sbb
rcrl
mov
xchg
imul
jge
cmpsb
ljmp
frstor
sahf
and
mov
fsubs
enter
jmp
fcomps
jl
iret
clc
pop
jge
out
pop
adc
sbbb
int
out
sbb
loopne
fwait
jnp
and
sbb
ret
dec
jl
sub
mov
pop
mov
out
fwait
lahf
stos
idiv
jnp
shlb
mov
cmpsb
aas
sub
mov
mov
or
pop
lods
xlat
movsl
mov
das
ret
jg
sub
mov
xor
testl
stc
es
aad
jg
or
mov
mov
xchg
cmp
sbb
add
inc
xchg
push
scas
mov
arpl
sbbb
mov
out
imul
jecxz
add
sub
dec
jl
sub
rcr
sbb
out
xchg
aas
sub
push
int
jl
or
movsb
pop
cmc
dec
cmp
pushf
sub
addr16
pop
xchg
dec
ss
lcall
or
scas
jmp
lahf
inc
iret
jae
outsl
dec
pushf
fisttpl
lahf
out
xlat
dec
jmp
cmpsb
jnp
pop
lcall
mov
xchg
jl
frstor
cwtl
pop
arpl
mov
sbb
mov
pcmpeqd
aaa
scas
dec
jl
aaa
dec
ds
mov
shl
inc
sub
icebp
xchg
subb
xor
dec
fisttps
js
xchg
lahf
arpl
jl
loopne
call
dec
fistpl
icebp
xor
loope
dec
int
leave
dec
and
cmc
mov
addr16
dec
jl
xor
int
mov
pop
andl
icebp
adc
ficoms
mov
dec
fsubrs
jns
int3
insl
jo
dec
jl
xor
mov
movsb
jbe
enter
int
into
pushf
jp
mov
popf
cmp
dec
ret
sub
xchg
jp
in
std
and
dec
dec
or
inc
inc
cmc
fimuls
fucom
aad
push
mulb
ret
cmp
insb
push
jl
out
ret
fs
out
test
addr16
jmp
je
add
cli
scas
mull
iret
loop
cmpsl
repz
dec
stc
push
inc
xchg
cmp
movsb
mov
jl
dec
rclb
insl
pop
jge
ljmp
jo
pop
jl
ljmp
sub
sahf
cmpsl
repz
std
push
jmp
jl
aas
dec
repnz
ss
pop
int
push
cld
cmpb
push
inc
dec
call
outsb
cmp
gs
dec
jl
or
shrb
mov
aas
data16
jnp
xor
imul
pop
cwtl
or
sarb
je
jl
out
fwait
cmp
cmp
dec
adc
dec
scas
sar
rcll
jl
lock
pop
dec
jl
inc
outsb
sbb
call
push
jmp
in
into
jne
cmpsb
mov
in
pop
add
icebp
dec
jl
inc
cmpsb
pop
lock
lahf
or
pop
jns
outsb
jne
jle
js
outsb
xchg
jp
ret
jg
adc
jb
sbbb
inc
fmul
or
or
push
mov
icebp
add
mov
out
mov
jl
cld
int
aas
cli
xor
jb
dec
shrb
outsl
inc
int
dec
ds
jns
xchg
loopne
push
gs
adc
fsubr
rdpmc
fsubl
or
loope
dec
pop
lcall
aaa
aam
adc
push
rorl
sbb
rorb
or
cmp
sbb
jg
fs
dec
je
adc
std
cmp
and
pop
ljmp
pusha
jmp
push
inc
insb
xchg
mov
stos
adc
push
scas
lock
inc
or
push
int3
jae
mov
rcr
cmp
test
dec
jl
mov
pop
cwtl
filds
inc
mov
mov
pop
and
jmp
or
pushf
push
outsb
jnp
mov
xchg
push
jle
fstps
pop
scas
je
adc
incl
lods
dec
out
add
shll
icebp
dec
jl
ret
cmp
lret
adc
addb
xchg
aaa
mov
push
jae
pop
mov
aad
fldcw
cmc
push
insb
dec
popa
or
sub
add
mov
add
in
sbb
inc
inc
and
imul
jp
jp
jnp
sbb
pop
jnp
adc
pop
cltd
xchg
add
jp
add
lahf
cmp
aad
inc
mov
orb
rolb
dec
jl
enter
mov
mov
dec
aad
pop
imul
or
or
mov
mov
dec
cmc
dec
jl
or
lea
jg
sbb
das
cmp
jns
andl
add
push
mov
xchg
rolb
dec
xor
or
xchg
pusha
pop
ds
ror
inc
pop
mov
cmp
dec
cmpsb
add
dec
jl
sarb
inc
jl
or
lret
lret
ja
movsl
dec
xor
dec
jl
lcall
mov
dec
jl
cld
xchg
std
and
mov
sub
adc
mov
push
xchg
mov
dec
jl
fwait
test
aam
push
xlat
loopne
dec
jl
cli
push
push
sbb
cmp
mov
pop
cmc
cld
mov
cmp
jg
clc
sbb
xlat
outsl
inc
std
pop
push
dec
jl
inc
sarb
push
jl
popf
aaa
xor
dec
jl
push
sarb
push
pop
push
pop
push
add
add
dec
popa
and
dec
pop
add
push
inc
xchg
insb
xor
adc
jl
and
push
nop
adc
or
adc
shl
outsb
mov
add
notl
icebp
mov
enter
sbb
and
or
push
lods
push
dec
jl
pop
add
adc
imul
imul
xor
shl
dec
test
arpl
add
sbb
sub
dec
jl
cmpsb
add
push
repnz
push
xor
sbb
lcall
or
or
pop
mov
xor
mov
push
andl
add
in
mov
jno
jne
dec
jl
das
cmc
rcr
call
jg
or
dec
jl
in
cmpsb
inc
lret
aam
jge
push
add
sbb
cmc
out
test
jb
push
or
push
jl
sbb
scas
outsl
loopne
sbb
xor
enter
mov
aad
out
rcl
sti
lret
inc
movsb
mov
and
movsb
push
es
cs
flds
stos
cwtl
mov
cmpsb
or
insb
push
sbb
mov
jne
xor
cmpl
imul
and
movsl
outsl
inc
push
xchg
movsb
aaa
jae
dec
jl
and
mov
pop
inc
xor
sub
dec
movsb
ret
cmp
jl
es
je
out
jl
iret
mov
sbb
fmuls
pusha
sub
aad
repz
repnz
ljmp
mov
je
xchg
das
mov
xchg
das
mov
xchg
add
in
stc
cmpsl
pop
icebp
xor
push
sbb
and
inc
imull
mov
mov
mov
jbe
mov
ljmp
loope
outsl
mov
enter
xchg
inc
loopne
add
adc
jg
jae
mov
ds
sti
adc
mov
sub
or
test
mov
cld
pushf
mov
rorl
fsubs
addr16
xor
xlat
pushf
stos
dec
les
mov
roll
in
xchg
mov
je
push
add
fcomps
push
imul
xchg
in
pop
test
pop
mov
dec
fildl
scas
bound
inc
mov
mov
jecxz
mov
xchg
das
mov
xchg
adc
jns
mov
mov
and
mov
sub
or
push
mov
outsl
mov
lcall
pop
sbb
xor
stc
sar
daa
insb
jne
pop
push
fcomps
pop
push
fcomps
fsubrp
sub
add
mov
cmp
int3
daa
adc
clc
int3
daa
adc
or
orl
xchg
cltd
outsb
fsts
dec
and
mov
or
xchg
das
mov
xchg
das
mov
mov
je
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
sbb
and
leave
je,pn
xchg
das
mov
xchg
das
mov
or
nop
add
pop
or
push
fwait
test
mov
cli
xor
aam
xchg
das
mov
aad
cmc
in
repnz
mov
jmp
cmp
pop
jbe
pop
sub
inc
jge
je
xchg
das
mov
lret
in
loopne
daa
testb
js
push
cmp
push
pop
outsl
dec
lcall
imul
adc
scas
adc
scas
pop
sbb
and
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
xchg
das
mov
mul
sbb
sbb
out
mov
mov
sub
add
stos
cld
dec
mov
iret
sbb
push
jne
mov
out
sub
adc
mov
adc
mov
not
sub
leave
fidivrs
testb
or
int
add
jns
ljmp
mov
sub
lods
push
or
adc
mov
mov
push
mov
sahf
mov
push
cmpsb
call
repz
in
xchg
dec
mov
xchg
std
push
icebp
mov
pop
inc
mov
jo
addr16
mov
add
or
cmpb
scas
sbb
adc
cmp
fst
imul
mov
and
inc
add
xchg
shl
inc
je
sub
test
adc
aam
inc
push
jmp
mov
outsb
subl
jbe
ret
mov
mov
cmp
cmc
fdivr
sbb
push
xchg
jecxz
scas
and
xor
movsl
rcrb
repnz
repnz
aas
mov
jp
pop
int3
in
xlat
arpl
xchg
adc
adc
jno
pop
inc
and
lahf
or
jbe
xchg
loope
andl
pop
pop
push
lcall
out
cld
rorb
lods
xchg
aad
add
pop
jp
je
pop
adc
lret
fwait
push
xchg
mov
sub
pop
loop
sbb
cld
lret
ficomps
xor
dec
scas
and
popf
sub
jb
cltd
and
cmp
mov
dec
cmpsb
sbb
xor
add
xchg
shl
sbb
or
in
push
rcrb
pop
or
cmc
and
loope
popf
sahf
xchg
jecxz
sub
jl
imul
pop
shl
cwtl
xchg
cld
addr16
cli
shlb
sbb
sub
nop
add
mov
push
mov
insb
cmp
jmp
out
test
vpacksswb
test
nop
into
jae
jo
lods
sar
xor
rolb
jl
dec
pusha
and
push
mov
in
aam
mov
adc
out
adc
sbb
sub
xor
sbb
jne
mov
mov
inc
mov
ret
pop
in
cld
fcoms
dec
dec
int
lahf
mov
daa
mov
fsubl
pop
test
sub
inc
outsb
enter
inc
aad
mov
leave
or
push
or
dec
in
idivb
in
sub
jecxz
jns
into
inc
ja
jb
lock
or
ja
out
ficoml
int
leave
lcall
push
ficoml
mov
jge
dec
out
pop
jae
or
in
mov
data16
fistps
movsl
rorl
xchg
enter
push
into
jle
hlt
mov
js
push
inc
ror
fists
push
or
sahf
daa
inc
sub
push
push
add
aas
mov
cmp
and
aad
cltd
int
pop
mov
mov
lea
mov
jne
in
sbb
lea
cmpsb
mov
add
xchg
ficoml
shll
test
cmp
test
and
mov
push
cmp
mov
mov
loope
cmc
movsb
pop
fstpt
sahf
and
adc
mov
aad
idivl
and
outsl
xchg
idivb
mov
dec
adc
daa
in
data16
jmp
outsb
or
xchg
js
mov
xor
mov
adc
add
pop
pop
adc
xchg
cmp
cmp
insl
pop
mov
lcall
push
roll
pushf
fs
fwait
aaa
mov
push
lret
test
cmp
mov
out
lea
pusha
ret
lcall
outsl
int3
in
add
inc
cmp
stos
fisubrs
arpl
push
xchg
les
aad
mov
sbb
gs
sbb
shl
mov
push
mov
bound
popa
jns
lret
cli
orb
outsb
jnp
arpl
jl
mulb
pop
lea
inc
mov
xchg
or
lahf
pusha
or
sbb
inc
mov
inc
adc
sbb
leave
out
xor
je
cmpb
xchg
push
sbb
enter
pop
xor
push
stc
mul
popf
mov
cmpsb
inc
mov
test
fnstsw
mov
repz
xchg
hlt
xchg
popa
ja
mov
out
dec
or
add
jbe
fwait
andl
xlat
add
xchg
shlb
adc
mov
fdivl
rorl
roll
xchg
cmpsl
subl
xchg
das
sbb
xlat
xchg
add
mov
or
insb
shr
and
cmp
jecxz
cmp
sub
shlb
divl
cwtl
hlt
xchg
push
lods
cmpsl
adc
mov
xorl
gs
inc
ljmp
cmp
fstl
jne
lea
in
cld
test
xor
mov
out
ret
movsb
leave
jmp
lods
into
mov
insb
pop
jo
out
push
adc
mov
es
in
jge
sbb
ficompl
xchg
incb
and
in
in
adc
add
or
mov
sahf
popf
mov
sbb
sahf
push
pop
and
pop
mov
lods
or
pop
xor
loope
xchg
aam
js
in
add
out
push
mov
ljmp
pop
scas
push
xchg
cmp
shrb
cmp
mov
push
sub
cmp
scas
xor
push
data16
sub
mov
in
add
sub
jno
push
cmp
add
inc
cld
mov
pushf
or
es
pop
aad
mov
int3
rcrb
add
pop
fwait
out
lods
lret
push
xorl
int3
push
pop
mov
jle
mov
pop
jmp
jbe
movsb
aaa
mov
xchg
cmp
add
or
sbb
iret
xchg
jmp
mov
cmp
fdivrl
pushl
inc
push
cmp
sbb
rcrl
xchg
xchg
xor
sub
or
cli
stos
adc
cs
aas
or
add
lods
inc
aad
lea
dec
mov
enter
xchg
xchg
or
nop
lea
add
lods
pushw
cltd
mov
mov
in
dec
lret
add
mov
lret
repnz
adc
mul
cmp
mov
movsb
or
sub
jge
adc
mov
push
dec
scas
fistl
mov
enter
dec
mov
dec
pop
and
pop
jle
dec
js
test
sub
sbb
xor
add
mov
mov
out
lahf
xor
lret
dec
ficomps
xchg
xchg
insb
mov
mov
jne
sti
aam
pop
into
push
iret
movsb
out
sti
je
mov
fistpl
sub
xchg
shrl
sbb
fstl
std
push
jbe
dec
test
lcall
in
jmp
data16
imul
cmp
or
and
insb
cmp
cmc
aaa
cmp
stos
push
pop
xchg
mov
and
mov
push
out
sub
dec
mov
push
sbb
out
pop
movsl
lea
and
push
mov
or
sbb
mov
mov
inc
fldl
pop
adcl
enter
inc
pop
rol
fimuls
pop
cmp
iret
push
pop
js
test
push
jbe
or
notb
adc
mov
shll
add
or
aad
xor
rolb
inc
loop
mov
adc
push
adc
sub
mov
push
dec
je
inc
and
adc
sbb
sbb
or
bound
fstps
insb
ljmp
bound
sarl
mov
add
xchg
ficomps
pop
push
mov
push
mov
mov
stos
adc
jg
sbb
ret
cmp
iret
mov
andl
sub
iret
ffreep
or
push
dec
xchg
mov
add
adc
sbb
fcmovb
jns
ss
out
les
xlat
pop
dec
js
push
jle
xor
pop
divb
outsb
movsb
pop
jg
pop
cmpb
call
push
xor
das
out
cltd
je
and
add
inc
test
call
push
add
xor
subb
xchg
lds
push
inc
push
test
lcall
fnop
push
add
sub
insb
push
sbb
insb
scas
mov
push
roll
fimull
adcl
in
cmp
or
imul
push
imul
test
jp
push
xor
sbb
cwtl
mov
clc
mov
inc
pop
push
insb
arpl
jns
and
and
out
out
cwtl
cmpsb
insl
mov
scas
out
divl
xchg
dec
ja
sbb
inc
ss
add
out
push
xorb
jle
mov
iret
daa
or
negb
mov
shl
and
or
jp
in
jns
notl
pop
addb
xchg
jno
movsl
int
popf
jge
inc
and
cmp
ficoms
xchg
xor
repz
push
and
xchg
cmp
insb
scas
push
addl
fxch
mov
out
inc
imul
icebp
incl
and
xchg
fmul
cmpsl
or
xchg
shll
jnp
jb
sub
mov
imul
xor
lods
mov
pop
dec
mov
bound
into
push
add
xchg
pop
mov
sti
loop
push
stos
or
fstpt
jbe
std
mov
lock
test
rol
out
mov
or
inc
jge
ret
xchg
outsl
test
xchg
add
cmp
xlat
rol
jge
mov
testl
pop
stc
cltd
stc
cwtl
push
popf
cmp
out
sbb
nop
sahf
int3
push
ss
loop
stos
bound
out
cmp
mov
outsl
mov
xchg
push
cmp
push
pop
rol
bound
adc
sub
nop
iret
sub
cmp
out
inc
push
adc
lahf
or
mov
pop
outsb
xchg
xor
stos
mov
dec
hlt
je,pt
rcrl
adc
mov
sbb
ljmp
push
int
cld
push
stos
sahf
jg
sbb
inc
mov
je
loope
dec
int
xchg
xor
test
pop
or
mov
das
sbb
call
outsb
pop
les
mov
aam
pop
shl
xchg
divl
sub
mov
jg
mov
mov
mov
sbb
inc
int
rcrb
mov
cltd
add
pop
xchg
add
inc
xchg
sub
and
lcall
sub
add
mov
dec
xor
fstl
jb
mov
out
hlt
cmpsb
pop
mov
into
push
mull
mov
or
pop
adc
stc
loope
arpl
push
cmpb
fdivrl
xchg
stos
rorl
jp
fiaddl
daa
cwtl
add
lock
rcr
pop
outsb
and
ret
mov
mov
xorl
les
lret
std
daa
mov
sbb
daa
rcrl
decl
movsb
nop
jg
cmp
cmp
gs
mov
xchg
imul
push
or
ror
add
rcrb
ss
and
and
sahf
jae
mov
je
cwtl
cmp
pop
addr16
repnz
inc
push
lahf
mov
mov
sar
sub
lret
repnz
std
pop
repz
pop
cmpsl
into
xchg
pop
push
mov
fnsave
fidivs
mov
pop
imul
adc
cmc
leave
pop
and
sti
icebp
pop
xchg
ss
adc
in
jne
jmp
mov
xchg
pop
leave
cld
sub
mov
adc
data16
and
icebp
sub
rorl
mov
and
add
xor
rcl
sti
leave
xor
jle
lods
mov
cltd
inc
neg
outsb
into
xchg
mov
loope
sbb
xor
dec
dec
fnsave
or
sbb
and
add
stos
or
sub
cltd
scas
cs
in
iret
into
aam
sarb
xchg
mov
in
aad
jbe
lea
jb
jge
mov
lds
mov
jns
lret
mov
leave
int3
or
mov
mov
outsb
ror
lahf
shll
adc
scas
in
mov
cmp
mov
in
sub
or
mov
sub
out
xchg
mov
fldt
xor
das
ds
cld
fmull
pop
in
fstpl
repnz
int3
sub
pop
les
push
shl
fistl
imull
sub
jae
sti
popf
push
inc
mov
cmp
test
lds
mov
cmp
int
push
mov
mov
jb
stc
jmp
movsb
sub
mov
adc
aad
and
cmpsl
call
js
stos
mov
jmp
in
in
int3
sub
icebp
arpl
mov
cmc
dec
xchg
daa
cmpb
mov
int3
hlt
pushf
pop
clc
or
outsb
xchg
sub
aam
fmull
subb
jae
nop
mov
xchg
nop
repz
loop
shll
inc
cltd
mov
xchg
je
push
mov
js
subl
outsl
je
push
jp
and
icebp
sub
ss
ret
leave
and
cwtl
fisubl
fistps
xlat
jo
shr
cwtl
inc
fnstenv
push
mov
pushf
enter
scas
xchg
lcall
pop
fstpl
leave
push
sbb
stc
jl
jp
xchg
push
push
int3
setno
and
leave
push
mov
and
cs
xor
jb
aad
sub
mov
push
fiadds
in
sub
push
or
aad
mov
dec
xchg
in
xchg
aaa
adc
cwtl
xor
mov
mov
into
push
cmp
out
cwtl
sbb
test
adc
cltd
in
insb
ret
or
mov
cmp
test
xor
sub
sbb
mov
jmp
jno
aam
xchg
mov
push
mov
jb
bound
ss
add
mov
test
push
shlb
mov
lret
and
xchg
mov
in
in
mov
div
sub
or
stc
outsb
sti
into
mov
insb
push
fadd
cmpsb
push
jg
adc
pop
mov
dec
pop
mov
es
mov
adc
dec
lret
or
sbb
mov
jnp
stos
mov
mov
mov
adc
inc
fisubl
adcb
ret
scas
test
sub
xor
outsb
push
push
arpl
das
mov
int
mov
cs
aas
adc
rclb
adc
testb
jae
andl
nop
pushf
imulb
jmp
push
das
mov
shrl
adc
push
mov
pop
adc
dec
loop
push
repnz
ds
fidivl
orb
cld
ljmp
mov
sbb
enter
outsl
mov
shlb
mov
icebp
jp
sub
add
push
add
mov
xchg
fsubrl
sbb
aad
hlt
sub
gs
pop
jnp
xchg
add
fs
addr16
gs
pop
rolb
add
or
and
push
cmp
insb
fidivl
push
xchg
je
add
mov
jle
test
push
dec
mov
adc
cmp
stos
cmp
push
cli
mov
int3
add
pop
xchg
dec
adc
mov
push
call
in
sbb
and
loop
iret
xor
insb
inc
jle
add
sub
dec
insl
pop
int3
cmp
in
arpl
and
cmp
popf
imul
icebp
dec
lahf
mov
aam
pop
mov
pop
pop
xchg
mov
mov
lods
je
pop
xchg
dec
mov
negl
cli
out
xchg
dec
sub
pop
jns
popf
adc
cmp
les
pop
test
xlat
adc
xor
stc
scas
sti
fmuls
dec
inc
and
idiv
pop
adc
sub
pop
nop
loop
fildl
loopne
xor
aad
jbe
or
xor
jae
pop
jno
sti
and
int3
repnz
mov
decl
xchg
lock
or
or
cmp
adc
scas
mov
add
jmp
sub
cmp
pop
lods
scas
mov
sub
xchg
mov
into
adc
push
inc
fmuls
out
jp
dec
rcrb
imul
adcl
and
ret
pusha
inc
mov
cld
push
aaa
movsl
sub
inc
shlb
add
cmpsl
or
inc
fdivrl
into
jnp
xchg
xor
or
or
rorl
mov
lcall
outsl
and
repnz
mov
cmpsl
cltd
jae
xchg
fstpl
xor
jmp
bound
out
aad
mov
enter
out
or
push
aas
sti
add
test
mov
jp
cmp
and
mov
xchg
mov
lcall
adc
mov
sub
ret
push
push
lock
mov
sub
push
fsubl
cmp
or
cmp
mov
xlat
jo
fwait
adcb
jnp
xor
sar
outsl
loopne
ret
xchg
xor
bound
cmp
mov
mov
ffreep
mov
and
addr16
out
push
popl
sub
ret
pusha
js
mov
jg
mov
push
add
fdivp
mov
mov
mov
loop
sub
sub
cmp
sub
lods
scas
mov
adc
testb
scas
push
mov
popf
scas
and
stc
sahf
inc
outsl
mov
gs
cmpb
movsl
xchg
rolb
rorb
addr16
add
iret
cmc
xchg
sub
sti
hlt
in
nop
cmpsb
mov
lcall
and
sub
mov
jb
pusha
push
xchg
xchg
outsb
mov
mov
jecxz
inc
cltd
movsb
mov
dec
xor
push
jbe
cmpsb
push
in
insl
out
mov
or
and
mov
inc
push
fs
add
sti
cld
dec
js
fs
lock
xchg
or
mov
push
std
jecxz
outsl
imul
and
mov
pop
shlb
xchg
pop
cmpsb
jmp
add
xchg
inc
mov
inc
sbb
mov
sahf
lret
or
jbe
stos
add
in
sahf
loopne
orb
inc
sbb
mulps
add
dec
rorb
dec
sbb
lahf
push
pop
inc
movsl
xchg
add
push
das
lret
xchg
data16
sbb
or
shll
xlat
imul
aad
inc
adc
fnsave
cs
inc
lahf
jns
jp
idiv
out
negl
daa
sti
arpl
mov
clc
inc
xor
adc
movsl
lea
nop
dec
mov
push
test
xor
xchg
push
xor
jno
push
lahf
rol
std
arpl
add
loop
shld
sub
xor
sar
cmpb
aas
hlt
cli
stos
in
data16
dec
push
jmp
sub
mov
cs
mov
pop
xchg
stos
cmpsl
stc
arpl
dec
lret
out
stos
sbb
inc
jnp
push
sub
out
cmpb
push
nop
sub
ljmp
inc
jbe
iret
pop
lret
popa
shrb
sti
pop
aam
cmpsb
cmpsb
movsb
cmp
orl
pushf
int
xor
stc
xchg
pop
mov
cltd
and
push
push
xchg
add
xchg
sub
pop
lret
mul
and
stos
imul
dec
mov
shlb
aam
lcall
or
out
les
or
arpl
mov
sub
sbb
loop
outsl
mov
rolb
push
or
jg
xchg
cmc
inc
pop
xorl
xor
mov
out
push
sti
lods
jmp
add
inc
pop
rep
mov
shr
lods
jb
inc
cmp
out
loopne
loope
sahf
or
push
dec
lds
sub
add
icebp
or
cmp
mov
jne
neg
imul
cmpb
fstpl
jmp
and
sub
jl
dec
cli
dec
mov
inc
jns
leave
or
jbe
cmp
jmp
mov
iret
mov
into
add
xor
dec
out
test
out
mov
push
xchg
stos
sbb
call
xor
das
bound
xor
popf
stos
jno
and
sub
push
mov
imul
jae
out
rorl
cmc
aad
xchg
pop
scas
call
inc
cli
outsl
das
adc
sbb
lods
nop
mov
adc
xor
sub
test
jbe
gs
gs
pop
scas
hlt
ss
daa
sbbb
sahf
xchg
add
dec
arpl
scas
jge
scas
or
lret
sti
xchg
pop
jle
inc
adc
mov
mov
pop
stc
push
addr16
popl
test
pop
lahf
repz
adcb
jg
mov
jae
jne
cli
ljmp
stos
jns
pop
sbbb
dec
pusha
popa
push
popa
cld
popf
dec
xor
add
and
cmc
lds
notl
fistps
ret
pop
cmpb
in
cmpsl
jl
fnstenv
lds
lcall
inc
cli
popa
js
mov
aaa
dec
mov
adc
fdivs
xchg
ds
pop
inc
bound
rcrl
inc
in
push
cmpb
cld
std
xchg
lcall
adc
cwtl
and
cltd
rorl
arpl
inc
stc
clc
into
or
jle
xor
mov
push
jb
xchg
data16
add
pop
test
out
stos
popa
mov
aas
jp
pop
xlat
rclb
arpl
cld
scas
fistpll
adc
rcrl
lar
es
stc
mov
jnp
ljmp
jmp
out
or
pushf
addr16
mov
push
sbb
jb
jbe
ds
inc
loope
mov
loopne
and
inc
pusha
adc
sbb
std
adc
or
cmp
sub
push
xchg
js
aaa
repz
dec
adc
outsl
xchg
das
or
imul
push
add
dec
sub
movsb
push
sbb
dec
xchg
sub
mov
lret
mov
push
cli
ret
loope
cmp
enter
imul
shll
jo
fwait
mov
fildl
jne
xor
jp
push
xlat
mov
js
jb
cmpsl
pop
ret
mov
or
inc
ret
aam
cmpsl
in
add
data16
pop
add
jae
in
xor
xchg
and
jo
xor
mov
mov
enter
push
aad
jno
fistl
fnstcw
das
xchg
jns
inc
mov
cmpsb
js
stos
shrl
mov
xor
ja
jle
lods
decb
push
pop
das
add
inc
data16
fists
outsl
cmpl
outsl
adc
jne
test
imul
xchg
or
test
ret
insl
inc
rcll
cmpsb
jecxz
xchg
jge
cmp
jp
nop
mov
ljmp
mov
lahf
fldl
and
xlat
adc
or
dec
sahf
pop
jl
jno
out
fwait
xorb
sahf
sbb
add
mov
pop
and
mulw
mov
cmp
jl
ljmp
adc
inc
push
fcomp
test
imul
fcmovne
in
loope
pop
test
or
jae
xchg
dec
pusha
repnz
jecxz
xor
xchg
loope
inc
and
xor
mov
icebp
cmp
and
jmp
iret
adc
adc
lahf
sub
out
mov
pop
mov
inc
and
adc
lcall
pop
dec
repnz
add
in
lahf
fldt
popl
mov
jne
sbb
pop
add
fisubrs
xlat
sahf
mov
cmpsl
movsl
outsl
fldt
sub
fs
xor
or
clc
enter
pop
adc
xchg
cld
flds
push
jnp
aas
outsl
fcomps
mov
icebp
mov
and
in
loope
jl
or
fs
pop
stc
aas
cmp
repz
adc
adc
hlt
dec
dec
xchg
vunpcklps
jnp
in
fs
int3
imul
lock
test
pop
adc
pop
add
scas
bound
hlt
sub
inc
rolb
stos
test
jne
mov
xchg
mov
addr16
insl
les
enter
inc
mov
adc
xchg
pop
rep
push
fbld
mov
es
inc
dec
adc
cmpsb
fsubrp
cmc
test
dec
in
jns
arpl
xor
insb
dec
rol
subb
push
scas
insb
or
xor
xchg
add
aad
sub
inc
push
stos
outsl
cli
push
loopne
ret
jl
jae
mov
xchg
push
mov
ja
xchg
insb
ljmp
negb
xchg
pop
mov
jle
mov
add
adc
aam
jp
adc
xchg
add
shrb
popf
push
mov
push
daa
insl
jmp
gs
fcmove
pusha
jmp
outsb
mov
xor
xchg
fcmovb
jg
scas
icebp
in
je
push
repz
xchg
xlat
ss
pusha
ja
adc
fyl2xp1
pop
test
pop
leave
lret
cmp
fidivrs
mov
and
fistl
inc
mov
lods
clc
scas
xchg
fwait
icebp
pushl
aam
sti
mov
push
gs
add
ljmp
lcall
push
popf
repnz
bound
add
jae
sarl
push
decb
jp
inc
xor
push
out
mov
aaa
das
mov
mov
mov
cmp
insb
outsb
push
inc
in
cmp
pop
lcall
xchg
jbe
xor
cli
pop
jbe
aaa
adc
fistps
mov
mov
es
adc
test
orb
lret
sub
xor
jp
adc
addr16
fnsave
notb
mov
out
or
dec
addl
and
mov
xor
jbe
je
imul
mov
jmp
adc
jns
and
adc
xchg
aad
fsubrs
bound
dec
rcrb
xor
add
adc
in
xchg
daa
sub
cmpsl
rorb
out
jl
pop
lods
shll
jl
mov
shrb
jns
cmpsl
adc
jnp
pop
loopne
dec
jno
test
scas
ret
ficoml
push
mov
or
xor
fwait
nop
jl
jb
fnop
in
inc
mov
cmpsl
mov
addl
ss
clc
shlw
inc
subb
inc
jecxz
sub
loopne
mov
fs
inc
sub
mov
push
imul
mov
aas
xor
inc
xorb
iret
stc
dec
xor
fisubrs
jg
adc
mov
lods
mov
add
inc
push
inc
divb
xchg
pop
push
push
sub
jp
sbb
jb
das
sub
xchg
lret
cmp
xchg
scas
pop
xlat
or
nop
pop
xchg
jmp
add
sub
inc
add
mov
imul
cltd
fwait
jo
shrl
sahf
outsb
push
mov
lret
pop
and
loop
ret
sti
jg
sub
sub
in
inc
outsl
sbb
iret
arpl
xor
lock
test
inc
lcall
jg
std
push
mov
sarb
mov
pop
loope
loopne
les
fistpll
dec
and
pop
pop
in
add
mov
xor
aad
sbb
test
fcompl
movsb
inc
adc
inc
rorb
movsb
mov
mov
pop
push
sarl
mov
insb
nop
lock
lcall
popf
mov
test
mov
jmp
sbb
ljmp
out
movl
fisttpll
pop
sub
sbb
mov
cmpsb
lahf
lahf
out
sbb
sbb
mov
cmpsl
pop
dec
xchg
xchg
push
int3
out
jg
push
loope
insb
jecxz
xchg
call
push
adc
or
mov
add
mov
fstpl
mov
xchg
stos
int3
in
mov
rorl
mov
and
cmpsb
inc
xor
jno
call
lds
test
std
pop
jmp
inc
sub
sub
sbb
and
test
mov
ret
mov
or
inc
add
cmp
xor
mov
sbb
loope
add
add
mov
lock
test
cmpsb
and
inc
jbe
adc
push
jns
mov
cli
inc
test
scas
jns
xlat
cmp
aaa
cmp
jns
mov
testb
push
xchg
push
push
sbb
loop
aaa
mov
jmp
jge
enter
ret
sarl
call
xchg
push
ljmp
lock
or
repnz
je
push
mov
pop
fs
and
lock
mov
cmp
and
mov
les
sahf
dec
xchg
mov
dec
mov
in
inc
les
mov
es
cs
xor
movsb
dec
sbb
and
pop
mov
lret
push
test
sub
xchg
and
aam
lahf
pop
std
rcr
jo
stos
jbe
leave
push
mov
jbe
repz
lret
int3
sbb
adc
popf
jno
dec
mov
adc
mov
mov
push
xchg
lret
push
mov
shl
push
pop
repz
jne
mov
push
dec
pop
pusha
jns
mov
inc
adc
pop
fwait
inc
in
pop
cmc
ja
and
test
fldt
mov
ss
popw
dec
jbe
push
push
in
mov
mov
lcall
push
imul
sbb
rol
ja
jp
mov
jmp
pop
cmp
into
std
inc
mov
xor
insl
push
mov
out
clc
jo
mov
add
or
xchg
mov
jecxz
mov
lods
jmp
lea
or
in
xchg
popa
adc
sub
xchg
sahf
lods
dec
fmull
stos
movsl
mov
mov
and
movsl
fs
mov
scas
cld
xchg
push
aam
xchg
int
push
call
jmp
das
jae
lock
mov
cmpsb
mov
sarl
mov
xor
mov
xchg
setne
daa
lret
mov
cmp
hlt
jg
push
stc
pop
add
std
cmc
lret
js,pn
dec
je
arpl
bound
mov
call
loopne
mov
insl
rorb
sub
xchg
cli
inc
add
outsl
dec
add
aad
enter
jne
pop
sub
xchg
pushf
cmpsl
jg
pop
pop
aad
in
addl
dec
enter
mov
add
dec
cltd
mov
lret
test
cld
mov
fyl2x
xor
movl
rorl
aaa
lds
andl
mov
clc
loop
push
roll
loopne
inc
mov
scas
sbb
xchg
push
xchg
pop
inc
test
inc
stc
enter
pop
leave
cld
sub
test
xchg
jns
hlt
dec
fildl
mov
mov
sbb
push
in
in
sbb
push
scas
lods
jo
dec
loop
ficoml
sub
or
mov
mov
sbb
push
xchg
sbb
jl
inc
ja
pop
pop
and
sub
sub
aas
fsts
les
ret
cwtl
sbb
cmc
sbb
insb
mov
gs
cmc
mov
xor
popf
pop
xor
dec
lea
jmp
mov
ret
or
xor
inc
incb
fisubrs
or
push
mov
cmp
popa
sub
jecxz
leave
mov
jne
stc
jge
xor
xor
lcall
cwtl
and
es
sub
lcall
xor
fnstenv
fsubl
fldl
mov
fdivs
push
orl
sbb
in
jbe
mov
cmpsl
jge
cmp
aaa
inc
popa
pop
jmp
out
cmpsb
mov
push
pop
mov
and
add
fisubrl
pusha
add
push
iret
or
sbb
inc
or
jge
les
mov
cmpsl
dec
fimull
dec
cmc
xchg
out
jb
xchg
adc
mov
call
mov
mov
inc
dec
and
cmp
int3
mov
xorb
and
sbb
in
shrl
in
cwtl
es
dec
mov
xor
repz
mov
mov
cmp
and
adc
int
in
mov
sbb
push
xor
movsb
std
cltd
lock
cwtl
jge
fnstsw
mov
lahf
mov
xor
mov
mov
vpshaq
xchg
mov
push
in
mov
pop
cmpsb
xchg
icebp
pop
sub
cld
repz
or
push
hlt
jle
jmp
push
push
in
jns
sub
pop
mov
lock
lcall
xchg
jmp
lahf
mov
mov
mov
xchg
lret
jns
mov
popf
sbb
iret
test
mov
popf
inc
adc
jno
xor
pop
xchg
mov
sub
orl
ja
mov
jmp
es
and
cwtl
call
dec
jne
xchg
fs
inc
jno
cltd
ret
sbb
pop
and
jnp
add
lret
cmp
popa
pushf
xchg
xor
cmp
outsb
scas
sbb
std
sub
loopne
out
fnsave
mov
fisubs
ds
repnz
ja
in
jbe
test
and
xchg
arpl
ret
fadd
dec
pushf
subl
sti
push
inc
in
jbe
stos
add
add
lds
into
mov
mov
ljmp
lods
fsubl
xchg
mov
mov
popf
jbe
adc
cmc
inc
hlt
test
push
lock
ret
stos
inc
and
mov
sbb
movsl
or
mov
mov
sub
jp
sub
add
mov
mov
mov
outsl
xchg
xchg
pusha
mul
add
aas
push
or
lcall
or
shr
fistpl
cmpsb
mov
sbb
je
pusha
mov
nop
inc
inc
cmp
roll
or
popa
or
jb
mov
repz
in
shl
divl
mov
adc
std
jb
jl
sbb
dec
dec
sbb
xor
daa
lea
repz
xor
sub
inc
push
lods
jge
test
xor
lret
jne
mov
xor
cmc
jo
inc
push
mov
push
roll
xor
mov
or
xchg
pop
adc
cmp
and
cmp
scas
nop
cli
lea
fdivl
aad
fnstenv
aaa
shr
pop
in
scas
sub
adc
sub
xchg
mov
js
lock
lods
stc
bound
push
and
pop
in
mov
mov
inc
gs
ret
inc
cmp
pmovmskb
enter
push
inc
gs
mov
in
loope
cmp
push
pushf
out
adc
aad
cmp
push
test
mov
inc
adc
hlt
mov
stos
dec
fxch
ficompl
sub
insl
adc
xchg
sbb
ror
or
add
mov
in
jne
inc
ds
ret
xor
jge
jnp
leave
ret
sbb
fdivs
mov
sbb
cmp
cmp
dec
jo
mov
fwait
push
and
inc
hlt
pop
xchg
hlt
in
testb
add
test
cmp
scas
fdivrl
arpl
sub
sarb
or
lret
cmp
js
dec
ret
jb
imul
data16
add
stc
xchg
dec
jge
ja
lods
divl
pmaddwd
mov
xor
xchg
pop
lahf
push
in
cmp
mov
xchg
test
jge
adc
cmp
es
xchg
jae
daa
loope
push
lock
and
jae
insl
jmp
cmc
sahf
roll
xchg
and
mov
mov
or
add
inc
std
mov
fldcw
cmc
xlat
clc
outsl
xchg
xchg
addr16
cwtl
in
jecxz
mov
filds
jne
xchg
in
mov
imul
pop
and
inc
jb
xchg
xor
into
sbb
xchg
lcall
pusha
fs
stos
inc
mov
lds
inc
jo
stos
in
sub
scas
sti
insb
mov
insl
lahf
mov
insl
lahf
mov
ret
jnp
sti
stc
jp
int
xchg
and
jle
inc
aad
cmc
jnp
adc
cmp
add
sahf
ja
sub
cld
inc
les
add
sub
divl
mov
ljmp
into
sbb
hlt
and
and
pop
dec
andb
dec
in
bnd
js
dec
stos
outsb
add
out
inc
mov
test
cli
dec
loop
insl
push
inc
mov
sub
cld
addr16
xlat
push
movsb
bound
xchg
and
cmp
aaa
and
int
fwait
jmp
out
pop
dec
sbbb
mov
sbb
mull
popf
inc
or
jnp
and
jle
loop
rcrl
sbb
adcl
ret
mov
add
in
xchg
dec
insb
xchg
enter
push
inc
mov
fmull
sbb
es
lock
int
imul
jl
xlat
mov
outsl
cmp
mov
dec
test
mov
xor
movsl
gs
mov
fwait
ret
xor
outsb
pop
jb
data16
stc
push
insb
shl
and
sbb
sub
call
dec
xchg
and
idivb
jle
cwtl
jp
mov
sahf
add
and
in
adc
xchg
ss
pop
mov
sbb
pop
fistpll
sbb
cmp
testl
jecxz
jnp
add
adc
jl
pop
push
in
and
loopne
or
push
adc
add
movsb
cmp
or
mov
mov
popa
inc
mov
jns
out
das
xchg
pop
shl
adc
mov
fiaddl
pop
or
xor
lods
dec
xlat
jns
cltd
js
aam
push
aad
out
jp
sti
cmp
jns
int
mov
in
pop
push
shrl
sub
rcll
jmp
add
jnp
xsha256
cmpsb
sarl
push
xor
mov
push
fistps
std
cmp
lret
mov
enter
roll
call
mov
clc
inc
insl
add
push
push
jmp
adc
dec
mov
mov
adc
cli
mov
gs
pushf
sub
popa
lock
dec
lods
and
subb
imul
mov
out
jno
sub
mov
dec
add
in
lods
and
dec
mov
pusha
push
xchg
sbb
jne
mov
js
xchg
xchg
mov
in
repz
mov
mov
mov
mov
push
in
popfw
cmp
pop
sbb
jb
sub
jns
ds
mov
dec
pop
rorl
es
and
fimuls
cmp
pop
orl
mov
sub
sahf
into
or
inc
inc
mov
aam
push
or
cltd
aad
dec
scas
notb
into
cmpsb
cmpsl
sub
adc
mov
dec
mov
shr
sub
lds
test
pop
mov
jp
xlat
fstp
into
outsb
popa
call
jbe
dec
pop
scas
dec
in
scas
in
sub
insb
jno
addb
lods
mov
add
mov
mov
jne
and
in
in
outsl
lcall
dec
push
mov
jl
mov
xlat
xchg
pop
mov
push
lea
lret
mov
bound
cld
mov
dec
imul
arpl
adc
adc
shl
stc
add
jle
mov
mov
rol
adc
call
lret
data16
dec
outsb
fcomps
and
or
roll
in
aam
mov
add
idivb
or
inc
adc
loope
aaa
pop
pop
pop
fs
add
fs
inc
or
bound
sub
jae
loop
sub
das
call
aad
lods
rcpps
or
testb
call
jbe
js
pop
ds
sbb
or
iret
fdivrp
aad
scas
test
xchg
mov
std
repz
push
dec
fstl
test
movsl
adc
dec
int3
punpckhdq
in
jnp
adc
insl
gs
mov
jmp
inc
data16
xchg
in
sub
mov
adc
lahf
popa
cmpl
sbb
aad
adc
xchg
jbe
in
inc
jb
lock
es
mov
jo
imul
movl
dec
dec
adc
repz
ja
ret
fisubs
push
xor
dec
sti
mov
movsb
inc
insl
push
loope
popa
les
and
in
out
mov
sub
dec
pop
mov
or
mov
out
fisttpl
scas
aaa
loop
cmpsl
dec
xlat
sbbl
xchg
lods
int
lods
push
jg
mov
enter
push
movsl
sbb
hlt
jle
xor
icebp
popf
jg
or
push
daa
inc
test
or
dec
push
inc
scas
ret
mov
data16
pop
push
test
pushf
jnp
cmc
xchg
or
ret
call
jmp
push
lret
mov
pop
mov
ret
cmp
and
pusha
pop
jae
sbb
push
aad
pop
and
push
and
icebp
sbb
mulb
push
test
ret
cmc
in
sub
loope
shrb
adc
test
cs
mov
icebp
popa
inc
pop
cwtl
push
mov
push
sub
sahf
imul
in
mov
sub
inc
jmp
or
xor
or
or
cmovl
jae
cmpsb
xorb
sbb
jmp
jo
inc
ds
push
and
pop
push
loope
push
adc
dec
les
aad
addr16
ss
or
push
jp
test
fsubs
ss
jno
xor
lahf
and
ss
dec
jne
pushf
xchg
movsb
xchg
insl
rorb
push
imul
in
stc
popf
test
aad
dec
cmp
xchg
dec
and
mov
js
xor
dec
rorl
lea
aad
roll
mov
pop
jl
int
sbb
sbb
ret
fnstenv
aam
jae
test
out
dec
lock
pop
mov
rorl
test
aaa
mov
push
test
mov
test
neg
comiss
gs
test
mov
add
ror
mov
frstor
sbb
rclb
imull
or
inc
arpl
sbb
scas
and
or
push
jnp
js
mov
mov
mov
popf
in
xor
mov
push
ljmp
inc
out
sbb
out
jp
gs
inc
push
inc
dec
out
andl
jnp
stos
ljmp
test
cmpsb
dec
testb
mov
push
sub
repnz
fistps
adc
push
lods
cmc
in
xor
aam
popf
mov
lret
ds
enter
cmp
lods
stc
cmp
mov
jae
jl
pusha
or
xor
inc
mov
or
repnz
mov
fs
inc
shlb
js
lret
test
out
push
fs
nop
cmpsb
mov
fucomip
fs
jecxz
fistpll
xchg
mov
cmc
pop
mov
cli
push
and
sbb
mull
shll
fisttpl
movsb
je
mov
in
loope
mov
loope
aaa
push
icebp
in
sub
orl
and
or
cld
sbb
lcall
push
int3
addr16
ja
fisubrs
mov
jge
add
mull
ror
sarl
xor
inc
push
ret
jg
ret
cmp
sub
xchg
outsb
jmp
notl
pop
mov
mov
out
notb
jl
pop
jecxz
inc
mov
mov
xor
aad
repz
ror
jae
mov
in
in
push
lret
dec
hlt
pop
mov
in
test
dec
mov
pusha
fisttpll
pop
adc
push
fwait
inc
and
mov
adc
push
mov
lock
bound
shll
mov
push
pop
sahf
mov
mov
aaa
cmc
adc
arpl
cmpsl
push
ret
dec
rorl
adc
fbld
fmul
adc
mov
mov
or
pop
lcall
push
jmp
les
psrlw
test
xchg
sbbl
cmpsb
orl
lret
xor
fsubr
sbb
mov
jmp
out
imul
test
in
jge
int3
shll
lea
dec
popf
jb
cmc
gs
pushw
lods
lods
add
jnp
pop
pop
cltd
jae
hlt
in
or
cmp
cwtl
mov
jo
and
jo
lret
bound
scas
push
add
dec
jnp
nop
jp
dec
push
mov
mov
popa
jne
xchg
inc
pop
jecxz
dec
outsb
cwtl
insl
repz
addr16
cmp
mov
fstpt
cmp
imul
xor
or
pop
jae
dec
imul
sbb
shrl
enter
shrl
xchg
clc
imul
nop
sahf
mov
xlat
add
repz
aas
loopne
ljmp
jb
xor
cmp
and
lods
inc
push
outsl
in
ret
inc
int
fldl
push
adc
pop
fs
xchg
outsb
sbb
push
jno
sub
fbld
push
fwait
ss
sub
outsb
and
sbb
and
hlt
ret
push
mov
dec
pop
xchg
fcoml
imul
pusha
mov
stc
adc
and
jp
outsb
add
adc
jb
dec
vpunpckldq
jmp
lcall
or
jb
lds
aaa
js
ret
mov
mov
pop
pushf
cmp
test
rorl
lcall
inc
in
test
bound
je
int3
fstp
sahf
adc
pextrw
push
mov
xchg
add
fnstcw
mov
in
xor
std
shlw
jge
mov
fdivr
outsb
mov
repz
fisubl
push
cwtl
int3
adc
je
shrl
adc
in
xor
sbb
dec
adc
push
cld
sahf
and
and
mov
rol
adc
xor
pop
je
mov
push
repz
aam
pushl
mov
insb
push
jle
imul
das
push
insb
ret
and
push
xor
jecxz
xor
hlt
scas
pusha
outsl
call
dec
test
mov
lods
pop
int3
mov
lcall
and
push
stos
outsb
fcoms
mov
push
cmp
pop
jbe
lods
sbb
jp
sub
pop
out
ljmp
shll
xchg
out
dec
popf
push
lea
mov
cmc
loop
ljmp
push
sahf
pop
mov
subb
mov
dec
orb
adcl
xor
pop
cld
cli
adc
aad
push
push
mov
ds
or
mov
testb
std
popa
mov
pop
into
mov
jnp
xor
inc
imul
call
data16
cmp
das
mov
jne
test
out
push
fisttpl
jl
xor
xlat
mov
out
xchg
jge
and
or
lds
lock
nop
cmp
or
outsb
int
jbe
shl
jecxz
out
dec
mov
push
inc
test
jb
loopne
lock
mov
andl
aam
lea
xor
jmp
dec
cmp
pop
push
iret
push
xorl
mov
outsl
inc
xchg
rolb
addr16
mov
adc
push
loope
xorl
call
xor
xchg
cld
cmp
pop
adc
add
movsl
sub
xchg
sub
or
add
or
sbbl
jmp
popa
jbe
stos
ja
aas
cli
jnp
mov
cmp
int
mov
xlat
xorl
mov
dec
xchg
cmp
shl
pusha
mov
aad
in
popf
push
pop
jne
xchg
icebp
jmp
push
jl
ljmp
nop
sub
add
fbld
ret
insb
es
outsb
daa
ja
movsl
imul
popf
aam
push
enter
leave
imul
mov
popl
dec
mov
ret
mov
bound
add
add
inc
cmp
pusha
cld
push
cmp
mov
fcompl
pusha
mov
out
mov
sahf
push
pop
fcoml
idiv
xor
mov
jne
fs
add
inc
or
movsl
mov
pop
cltd
xor
std
scas
push
clc
pop
addb
out
sbb
push
pop
push
inc
mov
or
xlat
inc
push
pop
xchg
imul
push
xorb
test
inc
mov
inc
andb
and
ret
push
mov
shl
rcrb
mov
or
aad
push
cli
mov
fiaddl
xchg
divl
pusha
ret
mov
jmp
scas
mov
push
mov
adc
xchg
push
xor
fdivl
ja
aad
jecxz
push
mov
cmp
int3
lret
xor
push
shrl
pop
mov
push
pop
arpl
or
cmp
fwait
xchg
and
jbe
jne
rcl
and
mov
pop
pushf
scas
bound
mov
iret
lcall
hlt
test
fsubrs
jle
lret
inc
push
fsubrp
xchg
jmp
sub
loope
andl
dec
sub
sub
repz
fldcw
out
push
negl
js
mov
adcb
cltd
sarb
mov
inc
pop
idivl
pop
nop
and
pop
xor
adc
enter
ret
pop
sub
xchg
mov
aaa
jb
mov
and
lret
stos
cmp
mov
clc
iret
fidivrl
adc
cmp
cs
push
xor
mov
subb
xor
mov
sbb
xchg
iret
leave
jmp
mov
cmp
shll
roll
rclb
jmp
inc
mul
ljmp
inc
ret
out
or
xor
xchg
lock
mov
aaa
fwait
scas
cmp
hlt
dec
dec
push
inc
or
cmpsl
sbb
in
aaa
fwait
sub
incb
xor
adc
lret
sbb
jmp
dec
out
xchg
xor
cmp
xlat
addr16
sub
mov
addb
inc
mov
xchg
lahf
testb
cld
arpl
sbb
pop
xlat
mov
jmp
add
jo
or
testb
pop
andl
into
cmp
xchg
mov
mov
out
inc
mov
push
push
adc
outsb
add
jns
lods
mov
in
cs
push
aaa
dec
cs
stos
mov
sub
dec
movsb
int3
cmpl
pushw
push
push
pop
adc
in
outsb
call
and
xorl
push
insb
leave
mov
cmp
inc
cmp
das
mov
and
pop
and
mov
mov
jmp
jns
das
jb
sti
adc
dec
pop
sub
mov
lods
mov
mov
and
jg
mov
inc
push
adc
add
inc
xor
inc
in
and
adc
leave
lock
cmp
int
cli
data16
jae
adc
mov
outsb
xchg
adc
xor
mov
bound
adc
idivl
lcall
fnstenv
icebp
fmull
or
add
insb
fisttpll
or
xchg
push
arpl
xchg
add
lods
lds
pop
mov
inc
ret
dec
insl
in
push
loope
dec
push
inc
in
sbb
ja
push
adc
jno
imul
adc
xor
inc
push
mov
ja
sti
xlat
add
xlat
cmp
into
call
push
sbb
inc
push
notl
jb
xchg
jae
jo
shlb
adc
sti
pop
sarb
jecxz
mov
xchg
mov
mov
fcomps
aad
out
sbb
pop
cs
sbb
js
mov
out
cmc
les
scas
outsb
stc
int
xchg
pop
push
push
ret
dec
loop
mov
iret
pop
psrad
mov
in
xlat
mov
dec
or
test
inc
lahf
xchg
cmp
data16
fidivrs
push
or
gs
or
enter
adc
sub
xlat
mov
jl
cs
mov
dec
adc
js
pop
out
repnz
xor
repz
push
add
cli
jmp
test
scas
jno
xchg
stc
jg
scas
mov
xor
mov
psllq
fdivrs
std
ljmp
mov
jl
mov
lret
fdivrl
sarb
popf
mov
mov
nop
mov
xchg
pop
int3
mov
and
ss
dec
hlt
mov
push
in
lahf
xor
orl
mov
outsl
rcr
push
pop
pop
push
scas
rclb
jns
shrl
mov
mov
pop
xchg
or
mov
jl
ret
jo
sahf
push
mov
aad
lea
mov
stos
jg
or
and
pop
xchg
push
cmpsb
mov
cld
cmp
push
pop
xor
test
sahf
or
mov
popa
jo
test
test
test
das
lahf
lcall
jnp
and
cmp
jg
inc
sbb
dec
fidivrs
dec
and
loopne
clc
sbb
adc
lds
ljmp
add
mov
int
cmpb
xchg
xchg
out
xor
testl
sub
popa
or
cmp
and
pop
lcall
pop
mov
and
mov
es
je
mov
push
mov
faddl
sbb
and
ja
xchg
ficompl
xlat
das
je
lods
int
stos
out
or
mov
jle
or
xlat
sub
call
cwtl
in
sahf
ret
dec
mov
call
pop
in
dec
sub
push
mov
icebp
xchg
lret
stos
arpl
push
xchg
mov
mov
outsl
or
shlb
wbinvd
xchg
xchg
mov
pop
cmp
add
shll
mov
sbb
cltd
repz
jno
aam
test
popf
sub
sahf
cmpsl
call
sbb
jns
cmp
jb
cmpsl
inc
clc
sub
adc
mov
shrl
add
jle
and
add
pop
into
ljmp
orl
pop
dec
mov
push
je
mov
bound
flds
pop
imul
loopne
fs
jmp
and
xchg
xchg
movsb
push
cli
sbb
dec
push
les
stos
cltd
popl
cmpb
sti
leave
pop
push
lahf
test
jb
xchg
xor
je
enter
seta
arpl
or
rorb
arpl
jge
ud1
sub
icebp
test
lret
les
notl
xor
pop
jo
inc
dec
jns
inc
sahf
fmull
test
cmp
in
movsb
popf
pop
ret
dec
lds
fistpl
pop
test
push
push
movsl
sub
and
hlt
jno
push
inc
jbe
add
cltd
outsb
or
cmpsl
jmp
lds
icebp
fstl
jge
repz
aas
shl
cmp
pop
sbb
jb
sahf
xor
fistps
sbb
cmp
jbe
fdivrs
and
sbb
rcrl
xlat
fidivl
scas
in
or
pop
adcb
stos
mov
jns
mov
xor
jg
and
jle,pn
nop
xchg
mov
neg
sub
xchg
lock
lock
dec
and
push
or
or
enter
mov
mov
pop
push
and
addl
dec
push
xchg
jge
xor
into
adc
dec
testl
out
inc
mov
andl
test
in
jecxz
add
lods
mov
cli
jns
push
mov
dec
mov
inc
jae
ds
push
dec
add
xchg
xor
das
sub
aaa
push
or
fidivs
and
das
mov
mov
cltd
jnp
dec
and
lret
cltd
xor
jo
push
xchg
cmp
ret
add
mov
jle
imul
pop
lea
xor
ret
enter
jecxz
movsl
inc
ret
or
inc
insl
push
les
mov
popl
sti
and
pop
mov
out
push
mov
mov
cmp
fdivr
in
lock
frstor
pop
mov
push
lods
sub
stos
sti
nop
push
push
add
dec
and
imul
loopne
loopne
inc
push
add
int
arpl
inc
inc
xlat
mov
push
mov
sbb
jo
bound
in
mov
loopne
pop
mov
mov
into
sub
cmp
pop
ror
or
push
test
in
test
xchg
add
sbb
sbb
xchg
cltd
cld
xor
dec
daa
hlt
add
icebp
sbb
testb
dec
out
cmp
fisubrl
xor
imul
cmp
pop
popf
inc
lahf
sbbb
test
pop
xor
dec
mov
or
sbb
lock
inc
jge
imul
pop
pop
subl
xchg
or
iret
flds
mov
nop
andb
cmp
fucomp
iret
das
mov
leave
jbe
test
xchg
leave
movsb
pop
push
jnp
jnp
cltd
push
sbb
ljmp
outsl
outsb
xor
cmp
dec
cmp
xchg
cmp
pop
dec
out
movsl
aaa
icebp
fsubs
repnz
imul
push
dec
mov
cmc
cmp
subb
jae
adc
push
pop
add
xor
mov
xlat
xor
insb
adc
xor
fsub
iret
cmc
xor
movsl
orl
into
xor
popf
mov
scas
scas
stos
leave
xor
stos
into
dec
popf
mov
test
inc
xor
add
sarb
lahf
or
shlb
fs
subb
repnz
popa
inc
mov
js
pop
cmpsl
pop
out
in
or
inc
sti
out
lahf
jp
loop
xor
aaa
xchg
mov
sbb
inc
sti
ss
jno
adc
mov
aad
arpl
int
xchg
sub
cli
sti
add
popf
andl
mul
stos
or
pop
cwtl
clc
mov
mov
mov
xchg
fcmovb
jno
mov
popa
mov
adc
shr
gs
aas
pop
ret
jne
sub
popf
xor
mov
popf
mov
cmp
mov
jp
push
lea
xchg
mov
sub
loop
imul
cli
jecxz
mov
les
pop
sahf
mov
pop
push
adc
cmp
in
and
adc
pop
cmp
mov
pushf
or
dec
test
push
sti
push
mov
and
fisubrs
xchg
inc
rol
outsl
mov
and
loope
mov
nop
xor
rolb
fcmovnbe
pop
repz
pop
push
loope
cmp
pop
push
jp
dec
xor
dec
movsb
mov
adc
push
roll
mov
cmovbe
push
xlat
inc
dec
call
mov
dec
movsl
push
repnz
xchg
lcall
inc
lods
cmp
sub
clc
lret
jp
dec
push
jae
push
push
xchg
jnp
lods
or
push
into
jecxz
mov
cmp
addr16
mov
jne
sahf
pop
repz
cmp
lds
inc
repz
xchg
lcall
repz
mov
lds
pop
and
pop
outsl
jp
xor
sbb
sbb
adc
xchg
xlat
mov
cmp
mov
mov
fldenv
pop
bound
and
leave
sbb
push
sub
or
push
inc
xor
out
sub
push
push
and
mov
jno
mov
push
jns
and
inc
add
xor
push
sbb
aaa
lea
sub
loope
cmpsb
pop
je
xor
cmp
cwtl
mov
sub
test
arpl
jg
out
out
xchg
jl
xor
std
call
sahf
les
and
fwait
popa
hlt
push
mov
push
insl
jae
out
pop
hlt
mov
push
mov
jecxz
xchg
and
int
and
lret
test
mov
sub
push
or
inc
arpl
add
cmp
daa
xchg
movsb
mov
loopne
mov
mov
cmp
xchg
push
jo
loop
or
negb
jae
shlb
addr16
add
add
mov
lret
out
cmpsb
add
cltd
push
mov
mov
dec
pop
movsb
testl
je
xchg
dec
push
outsb
mov
sub
lcall
sbb
cltd
push
inc
push
lret
pop
ja
dec
outsb
int
jl
testb
xor
xlat
cli
xchg
mov
fisubs
fwait
lea
push
sbb
jno
sub
mov
sbb
insb
test
test
xchg
nop
and
cmpb
fmulp
stos
insl
mov
pop
and
lret
out
sti
jl
fs
mov
sti
push
movsb
pop
orl
daa
jl
and
pushf
sbb
push
xchg
jae
push
mov
adc
psrlq
mov
jns
jg
and
jns
lahf
inc
or
out
aam
jnp
rorb
and
pusha
and
cmp
jecxz
sbb
lea
jmp
or
les
sbb
jno
inc
jg
push
cs
std
sbb
pushw
or
in
or
fists
dec
and
sub
pop
dec
je
mov
pop
out
xchg
jmp
outsl
adc
jp
cmc
jbe
adc
push
lret
or
test
movsb
iret
jg
lcall
add
xor
sbb
dec
or
daa
pop
jb
xchg
xchg
xchg
icebp
pop
sbb
mov
dec
imul
repnz
pop
mov
pop
sub
add
test
ret
lcall
mov
pop
test
ljmp
push
cmp
into
jnp
std
lods
rclb
cltd
mov
dec
lock
cs
cmp
popf
sub
mov
mov
pusha
leavew
mov
fisttpl
fs
sbb
sbb
adc
cmp
std
adc
rcll
jb
or
add
sbb
popw
addl
fwait
dec
enter
cs
cmp
and
pop
dec
jp
jl
push
fists
cmp
add
jne
sbb
xchg
push
repnz
mov
and
push
jns
std
jmp
sbb
xchg
xrelease
cmp
cmpsl
cli
inc
mov
nop
jne
push
and
lret
cld
sbb
in
xlat
add
lods
dec
sbb
mov
inc
ret
inc
loopne
in
mull
insb
add
cmp
in
sbb
pop
test
repz
out
shl
call
sarb
push
and
sub
push
aas
push
subl
rcll
or
mov
cmc
shlb
mov
mov
lods
adc
pop
das
adc
scas
shl
inc
push
add
fildl
or
imul
cmp
or
push
ret
and
cmp
je
repz
and
sti
jge,pn
jl
adc
sbb
xor
mov
mov
scas
pop
lds
test
and
xchg
pushf
sti
mov
lahf
negb
movsb
andl
insl
jp
mov
add
and
cld
mov
xlat
push
daa
int3
dec
add
cli
mov
pushf
std
mov
testb
dec
xlat
mov
pop
in
pushf
lahf
in
fwait
jecxz
inc
mov
cmp
test
xchg
mov
dec
sub
movb
xor
rcl
lods
das
rorl
mov
and
outsl
jno
cld
sbbl
mov
pavgw
add
es
ljmp
cmpsb
dec
inc
lret
data16
xor
dec
mov
sbb
rcll
xor
push
push
jl
dec
add
mov
je
outsb
mov
push
xor
ret
in
sbb
adc
insl
push
mov
push
mov
xor
insb
pop
push
dec
jmp
push
pop
fnstsw
pop
stos
sbb
lahf
pop
mov
int3
insl
jae
cmp
push
adc
cmp
jae
je
mov
and
sbbb
xchg
mov
xlat
std
in
mov
stc
dec
jb
push
in
cmp
pop
andl
int3
repz
mov
xchg
inc
shlb
div
sbb
insl
xchg
cmc
jp
aas
ret
mov
sbb
dec
addr16
sub
jp
fstpt
mov
mov
pop
icebp
push
mov
ljmp
add
or
jp
mov
xchg
sbb
jge
xor
les
pushf
fdivrs
lret
adc
rcrl
int3
sub
movsl
or
loope
mov
or
adc
jb
mov
jl
mov
add
fistpll
rorb
cltd
cli
push
dec
test
sahf
and
xchg
addr16
jl
lcall
mov
pop
mov
call
pop
pop
lock
enter
out
jl
inc
jo
xchg
mov
scas
clc
jns
jg
outsb
mov
xchg
pushf
and
outsb
clc
push
push
push
stc
out
fbstp
jae
in
int
out
mov
adc
lock
testb
mov
inc
mov
mov
jl
mov
shl
sub
fsubrl
popa
sbb
inc
scas
sbb
jns
repnz
jge
jns
sub
pop
mov
shll
xor
rcl
add
add
lret
jno
cmpsl
int3
lods
scas
xlat
sbb
sahf
cltd
insb
mov
jge
imul
push
loopne
fsts
cmp
cmp
lret
inc
xchg
test
into
std
push
icebp
pop
sbb
dec
aad
js
mov
insb
inc
mov
cmp
test
inc
mov
inc
inc
testl
pushf
cmp
sub
scas
stc
pop
cltd
mov
mov
jnp
mov
sub
daa
add
fisttpll
sub
out
mov
add
xor
mov
xchg
mov
mov
dec
hlt
xor
pop
push
push
fwait
xchg
iret
neg
dec
mov
sub
out
in
mov
inc
insb
cmpb
cmpsb
cmpl
loope
lcall
mov
and
daa
test
cmp
pop
popa
mov
xor
imul
push
test
jo
std
jp
mov
lea
and
sbb
inc
mov
sbb
sub
pushf
pop
mov
pop
xchg
jb
inc
cli
pop
out
rcrb
addr16
xchg
sbb
icebp
and
push
or
or
outsb
push
dec
jae
in
mov
sbb
test
mov
add
mov
sub
nop
out
jmp
lcall
cmp
sbb
out
icebp
in
cmpsb
stos
lods
loopne
ret
ljmp
jbe
dec
mov
or
mov
xchg
es
jmp
push
int
test
mov
arpl
es
repnz
imul
sbb
out
xlat
xor
mov
leave
clc
mov
sbb
ficoms
or
shl
mov
mov
or
imul
lret
ja
out
nop
jge
sub
ljmp
mov
or
jns
sub
dec
and
xchg
push
data16
nop
shlb
sbb
mov
cmp
jno
xchg
push
cmp
adc
std
push
cmpb
test
push
movsl
or
ret
js
test
mov
ljmp
clc
or
xor
push
mov
test
push
dec
out
fcmovbe
sbb
test
mov
adc
add
xchg
fldl
in
mov
jge
test
sbb
pop
mov
cmp
mov
mov
div
fistps
es
int3
sbb
mov
dec
and
jno
adc
fisubrs
add
das
enter
hlt
cmp
dec
nop
arpl
fisubl
sub
testb
add
sahf
mov
sbb
dec
xorb
sbb
or
out
sub
xchg
mov
jae
cmpsl
pop
data16
inc
fidivrs
outsb
dec
xchg
cmp
pop
mov
mov
lods
mov
push
sbb
inc
loop
sbb
movsb
cmpsl
mov
adc
mov
pop
ret
repnz
rcrl
frstpm(287
jmp
stc
adc
fsubs
addr16
jmp
add
stc
adc
fidivrl
jns
xor
ss
fisubrs
cltd
cmp
aas
mov
outsl
cmp
inc
mov
sti
shlb
and
aad
aas
mov
ljmp
xor
nop
push
mov
dec
enter
push
lea
dec
jne
adc
lahf
daa
inc
push
dec
out
je
stos
adc
fwait
les
lods
sbb
or
outsl
outsb
lcall
lret
pop
add
dec
out
mov
shl
clc
xlat
mov
jnp
push
push
jo
add
cmp
fwait
sbb
jae
test
leave
sbbl
push
fwait
mov
or
test
fucomi
cmp
push
push
ret
movsb
cmp
rorl
nop
adc
adc
xor
sbb
pop
dec
pop
nop
fsubrs
pusha
pop
das
inc
xlat
fsubs
pop
scas
ja
xchg
dec
scas
jae
cmpb
outsl
in
mov
or
ds
fsubs
clc
inc
sbb
or
inc
dec
movsl
idivb
or
pop
jae
add
clc
adc
mov
cmpsl
fsubrp
out
dec
and
std
in
cmp
subb
int3
mov
add
into
inc
ja
fiadds
je
sbb
and
pop
cli
adc
sbb
in
lret
mov
popf
dec
out
mov
iret
mov
cmp
ss
or
mov
imul
outsb
mov
and
xchg
gs
fsubr
cmpl
lds
jb
jnp
loop
outsb
clc
inc
pop
dec
mulb
mov
out
push
loopne
rcrl
xor
mov
decl
call
arpl
mov
call
out
dec
xor
mov
mov
mov
das
sar
fistpll
push
cli
les
ud0
dec
mov
push
in
stos
push
pop
hlt
movsl
add
fbstp
dec
cmp
cvtps2pd
cmp
cld
sahf
add
shll
mov
repz
adc
pop
and
decl
cmp
inc
lods
ljmp
aaa
aas
daa
fwait
add
ffreep
mov
push
dec
cmp
sti
sbb
mov
pop
loop
mov
jns
hlt
or
add
jg
hlt
mov
pop
in
sbb
sar
sub
lock
mov
cmp
insb
lock
imul
test
jne
adc
mov
mov
imul
add
aaa
stos
push
xchg
adc
stc
pop
sub
sbb
sub
adcb
fisubs
mov
negb
fsub
imul
xchg
pop
negb
data16
push
mov
scas
sbb
pop
outsl
push
push
push
dec
xchg
mov
lret
loopne
xor
adc
mov
inc
fucomip
and
repnz
js
fs
test
push
adc
push
insl
dec
xchg
dec
fdivr
stos
pop
push
mov
stc
rcrb
stc
add
adc
and
dec
insl
scas
call
and
push
pop
sarb
imul
aas
lock
push
int3
int
jle
push
push
stc
xrelease
pushf
xchg
xchg
jnp
js
mov
in
lds
push
lahf
inc
push
in
push
push
dec
cmp
adcb
jb
cmc
fists
jp
nop
push
adc
repnz
gs
xchg
inc
int3
xor
bound
jbe
sbb
xlat
xor
mov
daa
shrl
fisttpll
sbb
int3
stc
jo
jp
xchg
adc
xor
aaa
movsl
leave
lret
sbb
mov
daa
pop
pop
pop
pushf
dec
pushf
rcrl
xchg
sub
sbb
rol
xchg
lret
and
mov
or
jno
dec
adc
mov
mov
mov
les
pop
rcrl
add
add
push
mov
mov
rcrb
ficompl
mov
or
ja
cli
jecxz
rolb
and
or
leave
test
insl
xor
fmuls
or
xchg
mov
inc
fistpll
mov
sub
mov
xchg
les
les
jl
or
imul
adc
mov
push
and
pop
jmp
jbe
push
pop
stos
int
jmp
xchg
pusha
sahf
sar
pop
out
stos
or
imul
pop
push
movsb
ja,pt
push
mov
cmp
aas
pop
jecxz
rclb
js
ja
pop
in
push
xchg
bound
mov
cmc
mov
insb
dec
addr16
sub
mov
sbb
add
inc
mov
fnstsw
hlt
and
inc
test
mov
adc
insl
inc
leave
dec
or
mov
mov
sahf
dec
xchg
sub
repnz
inc
xchg
sub
pop
mov
or
adc
xchg
cmp
sub
sbb
mov
shrl
mov
jp
jo
jne
mov
cmc
outsl
mov
ja
cmp
pop
push
repz
cwtl
mov
shrb
mov
in
jp
adc
lock
sbb
loope
data16
cmp
fnstenv
mov
mov
addb
and
sbb
jb
mov
imull
mov
jg
or
jmp
cmpsb
adc
jae
scas
pushf
sbb
cmp
xchg
sbb
sbb
sub
jge
jle
mov
cltd
mov
imul
pusha
imul
les
js
pop
push
lods
push
sbb
fildll
neg
dec
cmp
mov
lret
mov
int3
fucomi
jns
fsubrl
call
jecxz
lds
xchg
push
or
fistpll
mov
in
lods
jecxz
jge
adc
mov
imul
adc
movsl
pop
fucomip
xor
adc
add
inc
and
mov
rorb
dec
jge
mov
nop
sub
or
addr16
push
jne
test
xchg
lret
sbb
xor
mov
outsl
pop
cmp
or
or
mov
mov
adc
mov
push
inc
push
adc
sahf
xchg
xchg
jnp
negb
imulb
push
lea
scas
fidivrs
inc
repnz
jle
call
sub
ljmp
xor
mov
and
sbbb
push
add
aad
and
push
adc
test
jecxz
sub
mov
inc
arpl
push
test
int3
ja
cmpsl
mov
sbb
fidivrs
je
cwtl
jecxz
push
sbb
mov
popa
out
mov
jge
int
leave
xor
std
jmp
xchg
push
jmp
dec
sbb
mov
jnp
and
pop
inc
or
mov
loopne
dec
push
fisttpl
dec
inc
gs
stc
sub
cmp
fidivl
mov
adc
or
mov
leave
jp
cli
mov
jae
sub
sub
pop
xchg
imul
sbbb
mov
hlt
daa
fsubrl
arpl
loope
test
ret
pushf
mov
add
fildl
into
mov
mov
stos
outsb
adc
adcl
je
popa
mov
fisttpl
mov
int
imul
jns
push
mov
adc
adc
lcall
pop
jbe
push
sub
cmc
loop
repnz
imul
jmp
pop
js
push
mov
int3
jmp
out
shll
scas
push
jle
mov
aad
jo
jae
pop
cmpl
or
aaa
rcll
and
fidivl
out
repz
or
or
jo
ret
jge
data16
idiv
into
push
stos
lods
push
in
xchg
inc
pop
add
jnp
push
iret
mov
pop
inc
pusha
dec
aad
je
movsl
jmp
xchg
xchg
pop
scas
xchg
mov
xchg
inc
fs
jae
dec
clc
cli
pop
push
mov
jp
xor
adc
cmp
mov
mov
loop
xor
mov
dec
jb
in
in
aad
push
and
daa
jno
in
jp
and
cmp
adc
inc
popf
push
test
stos
mov
pop
movsb
lahf
imul
cmpsl
sub
mov
shlb
inc
jmp
popa
movsl
pop
jno
xchg
sub
pusha
add
inc
xchg
mov
sahf
popa
out
inc
jne
adc
gs
inc
pop
mov
xchg
fstpl
pop
movsb
mov
sbb
int3
ljmp
out
popf
test
ss
cmpsl
in
pop
sbb
mov
shrb
or
xchg
and
mov
scas
scas
stos
stos
jge
adcb
and
xchg
out
sub
lcall
mov
jecxz
sub
cmc
mov
push
out
call
mov
ja
sub
pop
mov
lea
add
cld
lret
sti
aas
sub
cltd
push
ja
sub
cld
add
mov
xor
xchg
mov
ret
js
sub
es
clc
mov
push
adc
fcomps
aad
xor
adcl
lods
sahf
adc
lds
imul
adc
inc
pop
lcall
loopne
cmp
sub
dec
gs
xchg
subb
test
fdivrs
pop
sub
cltd
inc
mov
out
xor
xlat
or
push
popf
dec
xor
push
stc
mov
lcall
inc
inc
xlat
dec
sbb
inc
jnp
adc
and
add
rcl
ret
sub
je
imul
cwtl
adc
je
sub
data16
sub
jne
push
ja
ds
sub
ror
enter
and
rcl
in
and
imul
in
inc
sub
pusha
pusha
subb
mov
push
and
outsb
push
imul
push
jge
mov
jle
cmpsl
jecxz
popa
icebp
sbb
imul
cmp
cmpsl
lock
ficoms
sub
sub
stc
mov
or
or
out
js
lret
xor
adc
jge
leave
test
jecxz
ret
pushf
adc
fdivrs
push
mov
mov
lret
fs
or
lods
xchg
sbb
xchg
ret
movsl
stos
imul
lods
jnp
inc
sub
add
push
shl
ds
jae
outsb
faddp
fidivl
lret
add
push
add
push
cwtl
push
cli
jbe
push
lods
cmp
inc
in
cmp
insb
dec
ror
stc
cwtl
or
mov
loopne
loopne
pop
xchg
cmpsl
xor
cld
and
dec
jge
jns
aaa
pop
adc
test
insb
je
and
pop
mov
sbbb
mov
fdivrl
out
jmp
icebp
cmp
rorl
push
insb
ret
jbe
push
inc
mov
mov
ljmp
sbb
mov
inc
jg
add
cmp
xor
mov
les
add
adc
pop
test
mov
xor
xor
jecxz
jno
cwtl
int
sub
outsl
arpl
dec
js
insb
aad
es
jnp
fwait
add
sti
xlat
sub
mov
daa
icebp
cmp
inc
shll
cmp
sbb
out
leave
push
fsubl
ffree
insl
sbb
aad
mov
leave
or
pop
or
jne
xor
enter
push
pop
push
add
jne
dec
mov
movups
movsb
pop
cmp
mov
movsl
imul
push
jl
jecxz
push
jae
in
inc
out
and
ljmp
gs
js
xchg
sub
lock
in
jmp
xor
inc
add
push
sahf
mov
jmp
cmpb
popf
jecxz
js
dec
js
mov
or
bound
push
cli
and
add
jb
std
sbb
scas
loop
mov
stos
inc
addr16
loope
les
jl
pusha
ret
push
mov
inc
mov
and
pop
adc
cmp
pop
cmpsl
pop
loop
dec
jo
push
xchg
insl
mov
data16
pop
mov
in
add
imulb
imul
aad
jmp
je
shlb
dec
fidivl
or
movsb
icebp
bound
cwtl
mov
idiv
clc
dec
sub
jg
pop
mov
shlb
fisubrl
mov
test
and
jge
adcl
arpl
fisubrl
push
call
stos
repz
addr16
dec
nop
outsb
fdivr
mov
jp
inc
xor
jge
mov
inc
jnp
ret
mov
les
dec
movsb
nop
fcoms
jl
aaa
ss
add
rep
cmp
imul
sub
jnp
rcrb
lods
loope
ret
push
outsl
pusha
insb
add
sbb
dec
pop
cmp
repz
lods
jl
inc
pop
adc
mov
sti
mov
cld
fmull
je
loope
test
xor
or
hlt
test
xor
sahf
mov
and
mov
fimuls
imul
mov
adc
xchg
pushf
dec
lret
sbb
mov
les
loope
sbb
and
movsl
push
mov
cmpb
jb
mov
icebp
or
in
inc
pop
shlb
pop
jbe
pop
cmc
or
xchg
scas
xchg
adc
aaa
push
push
push
stc
cli
in
pop
fnstcw
fwait
into
dec
ljmp
mov
pop
insb
xor
inc
lcall
mov
outsl
and
adc
sarl
mov
add
inc
stos
repz
mov
ss
push
clc
mov
fildl
cmpsb
push
xor
add
lods
pop
sbb
in
nop
pop
lea
mov
or
cli
insb
les
push
adcb
pop
sti
pop
adc
insb
aam
cmp
outsb
cmp
sti
fistpl
push
sbb
or
cmpsl
pop
mov
pop
mov
cltd
shlb
bound
daa
cmp
mov
rcll
mov
loopne
jb
sub
mov
mov
les
adc
mov
sbb
aam
mov
and
ffree
mov
xor
shlb
xchg
inc
pop
insb
dec
pop
inc
cmpsl
cwtl
sbb
cwtl
sub
adc
adc
xchg
jne
cli
data16
movl
pop
mov
cmp
pop
or
lea
jl
dec
movsl
or
popf
gs
push
add
pushf
jge
mov
mov
inc
jle
hlt
nop
mov
mov
inc
popa
mov
xor
ret
xlat
mov
jo
sbb
add
cmp
loopne
out
cmpsb
jmp
adc
in
xlat
out
pushl
cwtl
aam
jge
nop
dec
jne
bound
sub
lahf
ret
std
out
scas
sub
outsl
dec
fisttpll
jmp
mov
mov
lret
notb
mov
inc
push
stc
mov
inc
leave
xchg
ljmp
dec
add
mov
add
mov
sbb
mov
dec
ret
jo
jg
loopne
mov
sbb
pop
mov
sub
jnp
dec
in
fmul
ret
xlat
in
scas
adc
inc
negb
sub
and
push
in
jg
push
mov
jp
std
pop
and
mov
and
int
mov
out
popf
stc
push
pusha
dec
imul
mov
movsb
pop
imul
jl
ljmp
mov
push
push
jmp
sbb
fisttpl
fcmovnb
aam
pop
pop
inc
sub
in
sahf
imul
push
daa
cs
add
pop
and
popf
loop
xchg
popa
or
sub
add
push
cmpsb
add
pop
pop
sub
out
in
dec
loopne
adc
shlb
rolb
lcall
mov
pop
add
xlat
outsl
mov
mov
mov
add
das
and
inc
emms
push
stc
mov
insb
mov
shll
add
aam
pushl
jge
inc
dec
fsubrl
mov
insl
or
or
pusha
imul
sbbb
sub
test
rcl
cmp
dec
mov
pop
jo
mov
xchg
or
aas
inc
ret
mov
into
scas
inc
out
dec
push
in
adc
sub
outsl
outsb
jle
push
pop
mov
test
lcall
pop
cltd
mov
shlb
insb
sbb
cmp
dec
in
xchg
cs
fsub
aad
adc
sbb
ds
into
mov
pusha
cmpb
outsl
arpl
sub
rcrl
xor
lods
out
cmc
arpl
dec
outsl
cld
cli
xor
sti
mov
add
jns
repnz
and
jno
jecxz
out
push
aam
pop
dec
icebp
shlb
addr16
daa
mov
add
push
mov
dec
rcr
popf
push
sbbl
pop
jae
mov
aas
negl
sbbb
out
dec
adc
mov
and
cmpsl
shr
mov
imul
int3
lcall
cmp
imul
jnp
mov
cmp
jp
cmp
cmpsl
jle
sub
icebp
add
mul
shl
sub
gs
xchg
xchg
cltd
adc
addb
adc
xlat
addl
xor
pop
push
or
dec
lock
xor
test
jge
cmp
test
dec
pop
fldenv
cmpsb
push
xchg
ficoml
faddl
add
fidivl
mov
loop
cmp
in
gs
and
dec
pushf
imul
insb
cmpsb
mov
and
inc
mov
jmp
push
in
out
xchg
xchg
iret
aaa
pop
push
mov
inc
mov
cmp
pop
sarl
xchg
fcoml
bound
fdivp
inc
cmp
aam
insl
mov
add
xor
dec
mov
xor
stos
add
sub
sahf
jg
jle
jmp
ret
std
mov
cmp
insb
jge
and
out
dec
sarl
and
roll
pop
inc
sbb
pop
or
push
xchg
pop
jnp
test
rcrl
nopl
out
jge
xlat
ret
outsl
or
in
lock
loope
cs
mov
lds
adc
and
ret
push
imul
int
or
fstps
push
push
dec
or
xor
hlt
inc
dec
xor
stos
adc
push
cwtl
rcrb
ljmp
dec
pop
adc
dec
jns
fs
xchg
cmpsl
cltd
je
mov
cs
lret
test
or
jp
ljmp
and
ljmp
mov
out
inc
add
push
cmp
repz
xor
add
mov
mov
mov
fidivl
leave
inc
jl
dec
pop
je
push
mov
shr
sbb
jg
test
push
popf
dec
cli
fmul
or
outsb
shlb
lcall
pop
mov
jg
int
into
push
jecxz
cmpsl
clc
xor
std
add
adc
cmp
push
mov
and
lods
aas
cltd
fnstsw
cmpsl
fiadds
stc
pop
cmp
inc
leave
and
xchg
loopne
mov
mov
add
les
xor
mov
ja
cwtl
mov
out
fiadds
or
testl
lret
sub
cld
stc
push
es
pop
or
xchg
movsl
mov
xchg
dec
fisttpl
cli
ja
ret
pop
pop
rorl
or
jmp
fmull
je
mov
in
push
nop
and
pushf
xorl
adc
rol
or
dec
and
mov
pop
push
sub
xchg
gs
shrb
test
push
imul
pop
mov
or
xlat
mov
fidivs
pop
push
test
dec
xchg
add
push
add
or
cld
push
mov
hlt
aad
lret
mov
adc
jge
or
loop
and
sub
sub
pushf
adc
push
lcall
and
xor
cmp
divb
or
lock
jmp
mov
xchg
jl
lret
cs
cmp
jg
fsubrp
clc
dec
fisttpl
add
lret
mov
lock
push
arpl
sbb
cwtl
sub
cmp
lret
and
adc
int3
mov
and
mov
andb
jo
movsl
rcrb
test
out
cmc
xchg
addl
lea
in
nop
pop
dec
cld
or
mov
pop
mov
add
in
fnstcw
xor
loopne
mov
stos
repz
lods
out
sub
and
or
sbb
mov
fisttpl
stos
mov
mov
add
sbb
cmp
fisubs
lahf
cmp
and
pop
dec
pop
inc
mov
adc
xchg
xchg
pop
cmp
xor
in
or
add
pop
xorb
xor
add
int
lret
popa
jmp
mov
xor
adc
sbb
add
in
call
lods
dec
adc
mov
loop
adc
loopne
inc
cs
je
push
and
cmp
mov
mov
test
aas
or
adc
and
mov
rcrb
js
adc
sbb
jp
push
and
jg
repz
movsl
ljmp
int
ret
add
cmp
lods
xchg
dec
xlat
dec
dec
sbb
or
mov
mov
addr16
out
imul
cmp
xor
ss
lcall
push
or
xchg
push
jo
xchg
enter
popf
xchg
jmp
bound
mov
mov
or
sbbl
das
int3
mov
mov
xchg
sahf
or
jge
xchg
js
jmp
xchg
out
cli
push
test
cli
mov
and
jle
mov
out
in
add
add
lahf
cmp
lock
leave
cmc
inc
mov
ds
xor
js
int
stos
jae
push
mov
jmp
mov
jp
outsl
daa
les
mov
out
jecxz
mov
aaa
push
adc
add
daa
or
xchg
mov
sub
xorl
sub
in
sbb
sub
or
add
out
pop
pop
data16
inc
xchg
cmp
cmpb
mov
pop
out
cs
ret
cli
and
scas
mov
push
mov
sbb
sub
inc
fcomps
das
inc
dec
cmc
cld
pop
pop
jmp
push
xchg
ror
pop
aam
cli
scas
inc
stos
mov
loope
jo
std
xor
loop
sub
mov
in
dec
xchg
add
dec
mov
mov
pop
mov
xchg
push
ret
xor
inc
adc
cmpsl
es
testb
mov
test
rcl
enter
daa
pop
sbb
loope
push
in
jmp
xlat
and
sbb
call
sub
adc
fnstsw
inc
shll
int
leave
scas
mov
fwait
add
addr16
sub
push
cmp
jae
push
inc
mov
mul
clc
testb
jae
ss
daa
repnz
mov
or
iret
in
cmp
insl
push
fldl
fstp
push
sbb
loop
push
dec
push
push
sarl
sbb
clc
out
pcmpeqw
sahf
cmpsb
mov
add
xor
xchg
sub
bound
xor
es
test
jno
ret
fiaddl
f2xm1
pushf
loopne
rolb
jl
cmp
xor
mov
clc
lds
xor
js
add
sub
jge
ds
leave
xchg
sub
scas
sub
out
mov
jno
cmpsb
mov
mov
jle
das
jg
jae
adc
pop
lods
out
cs
pop
adc
idiv
pop
push
cmp
call
inc
xchg
push
lcall
push
mov
icebp
jns
adc
xchg
mov
dec
adc
xor
xlat
loop
jbe
jb
cmovns
das
popa
mov
popf
cmp
fistl
imul
and
push
xchg
ret
or
add
and
shrb
popf
ja
sbb
call
jno
pop
xor
add
hlt
icebp
lret
in
add
push
push
or
jmp
adc
icebp
and
outsb
scas
loopne
hlt
or
sub
mov
push
mov
jecxz
js
lret
lcall
push
movsl
idivb
mov
mov
sbb
push
cmp
data16
fistpl
cmpsl
sub
cmp
int3
out
movsl
dec
jns
fimuls
mov
outsb
xchg
mov
sub
xchg
dec
mov
shll
int3
or
mov
lock
outsl
lods
rcrb
mov
jecxz
sbbl
fisubs
xor
adc
ss
mov
ret
in
dec
nop
push
mov
add
push
out
inc
and
add
sub
mov
lret
mov
lods
or
movsb
add
mov
inc
in
or
adc
test
cmp
mov
rolb
in
adc
aas
cmpsb
dec
fildl
sahf
pop
mov
jl
fdivp
sbb
mov
mov
mov
inc
mov
mov
ret
std
adc
lahf
mov
jg
lea
dec
sub
adc
xchg
xchg
insl
fidivs
addr16
lods
mov
mov
out
mov
pop
mov
je,pt
flds
fwait
aaa
rcll
scas
addr16
xor
jge
fs
loopne
in
jmp
popf
or
gs
push
loop
in
test
sub
cwtl
pushf
les
mov
jge
mov
fisubl
mov
pop
jmp
cmp
inc
xor
mov
cmc
test
push
sbb
iret
push
jg
fimuls
mov
adc
cmpsb
mov
fcomps
stos
xchg
fists
cs
mov
cltd
and
test
pop
ret
cmp
pop
sub
out
xchg
jbe
dec
xchg
das
je
dec
or
xor
xchg
push
nop
mov
pop
mov
dec
sbb
aam
test
fcompl
std
test
jnp
lds
ror
push
mov
aam
mov
rclb
inc
xor
xor
in
psubusb
jbe
sbb
and
xchg
jae,pt
ss
xor
adc
jle
and
mov
mov
jbe
mov
movsb
ja
jmp
pop
mov
cmp
sub
test
mov
jge
inc
daa
pop
add
out
repnz
push
mov
in
enter
cltd
lretw
enter
adc
cmp
mov
jnp
push
pop
je
rol
xchg
push
ret
fnstsw
add
sub
jge
cmpsb
push
dec
call
mov
aaa
fsub
dec
test
mul
inc
xchg
add
jns
mul
cwtl
divb
jg
jmp
dec
xchg
fdivl
jp
cli
mov
adc
adc
fs
mov
mov
mov
iret
insb
adc
cmp
out
xor
rcll
inc
xor
out
add
into
adc
lock
les
jge
adc
cwtl
jle
lods
jl
stc
negb
mov
repz
sbb
and
sahf
adc
cmpsb
xor
mov
inc
inc
mov
addr16
mov
jl
pop
and
mov
test
lahf
cmc
inc
repz
iret
iret
xchg
xor
or
mov
repz
sbb
fstpt
or
mov
fstl
prefetch
imul
int3
fists
sub
mov
mov
push
sarb
push
lods
pop
rcrb
cltd
leave
and
sub
push
in
hlt
pop
ja
sub
daa
call
mov
movsl
sbb
scas
inc
bound
subb
adc
jb
mov
into
sub
test
ret
xor
cli
or
out
ret
sahf
push
push
inc
jge
insb
jmp
mov
add
mov
popf
cmpsl
in
dec
dec
pop
stos
adc
rcrl
mull
push
lret
mov
data16
xchg
mov
ja
popf
cmpsb
mov
sbb
mov
mov
enter
jb
repz
mov
faddl
lcall
in
rorb
movsb
mov
sub
cmp
inc
or
push
testb
add
jecxz
adc
push
jmp
pop
cmpsl
iret
cmp
test
dec
xchg
insl
test
popf
jle
iret
jmp
leave
jnp
adcl
adc
xlat
mov
and
cmp
xor
scas
or
lret
fisubrl
hlt
cltd
cmp
cli
jp
add
pop
lret
icebp
mov
lods
mov
cmc
shll
cwtl
cmp
fwait
add
push
bound
push
mov
mov
movsb
rolb
xchg
fmull
les
add
fst
push
aas
or
pop
and
scas
inc
lahf
shlb
mov
insl
mov
pop
and
fwait
and
idivl
mov
xor
push
aas
jno
mov
dec
push
sbb
punpckhwd
addr16
mov
test
add
and
cmpsl
lds
inc
or
jl
insb
int3
mov
lcall
xchg
call
or
mov
mov
mov
stos
sub
movsb
les
mov
or
ja
jg
loope
lea
fcomi
pop
lock
das
daa
test
test
fwait
cli
stos
xchg
cld
mov
andb
aam
lret
fcmovu
stos
loope
jle
rolb
jp
push
test
pop
dec
xor
je
xlat
rorl
xor
subl
addb
pushf
lret
clc
and
xchg
cwtl
jb
mov
push
push
mov
or
fwait
xor
repz
lcall
ljmp
je
fistpll
stc
pop
pop
add
popa
mov
scas
ret
ja
inc
mov
sub
xor
icebp
inc
sub
pop
lret
jg,pt
sbb
fwait
andl
jae
movsl
test
xchg
int
in
inc
cmp
xchg
push
jns
inc
push
sbb
aaa
sub
sbb
cmp
ret
adc
adc
xchg
fidivrl
lods
fwait
lret
jno
repz
sti
adc
mov
push
sbb
push
jmp
lret
sub
push
adc
pop
adc
hlt
movsl
sub
inc
imul
cli
inc
out
mov
add
frstor
fbstp
sbb
gs
dec
mov
jo
push
subl
mov
xor
jmp
push
xor
adc
xor
je
xchg
add
push
insl
cs
aaa
fnstsw
in
xchg
mov
dec
in
push
mov
out
cs
orl
adc
daa
inc
aam
xchg
pop
pop
dec
aam
pop
sbb
sbb
sti
clc
insl
leave
sub
dec
xchg
push
repz
or
push
cmp
pop
mov
js
fucomp
pushf
loope
decl
sti
add
sub
mov
lea
lock
mov
lahf
js
out
mov
xlat
aaa
add
stc
dec
sub
push
sbb
mov
imul
sbb
into
mov
nop
sub
repnz
pop
shlb
jmp
dec
sbb
ret
ret
movsb
push
outsb
in
push
add
mov
pushf
pop
mov
xchg
neg
lods
testb
repnz
xchg
lret
inc
xchg
mov
clc
mov
push
or
push
inc
les
leave
mov
mov
pop
mov
sbb
push
cmp
mov
rcl
mov
imul
xor
gs
xchg
pop
xchg
jbe
ret
iret
xor
xchg
lret
rorb
push
mov
mov
cmc
lcall
int3
fbstp
add
cmp
mov
je
std
in
pop
dec
stos
arpl
mov
mov
push
push
in
popf
xchg
inc
xchg
add
pop
sub
sahf
push
jge
and
xor
fsubr
adc
icebp
movsb
and
pop
sub
je
or
sahf
out
pop
jno
mov
xorl
inc
push
push
scas
rolb
stos
jae
lods
dec
lods
push
mov
mov
xchg
sbb
inc
or
arpl
adc
mov
lds
mov
pop
lock
pop
add
int3
or
jg
pop
jl
insl
mov
mov
stc
hlt
lock
cmp
sbb
leave
outsb
data16
or
xchg
sub
mov
gs
jnp
mov
jle
repz
outsb
push
xor
xchg
jns
cwtl
flds
mov
push
lods
pushf
movsl
popf
aad
push
scas
inc
cld
fwait
inc
pusha
push
xchg
out
inc
pop
roll
clc
cmc
fsubl
jg
jge
mov
arpl
pop
pop
mov
mov
andl
pushf
imul
divb
rcr
ljmp
or
std
in
pop
imul
lcall
xor
xor
inc
std
xor
mov
mov
pop
cmp
lock
push
fcomps
in
pusha
negl
xor
adc
pop
mov
in
pusha
jmp
in
sub
lock
fnstcw
jnp
not
lods
pop
outsb
shrb
stc
or
jnp
sbb
push
in
add
fsubl
mov
xchg
repnz
stos
jbe
js
adc
jl
jno
or
lret
and
add
adc
shll
mov
mov
cltd
or
pop
fcom
and
int
lods
xchg
jbe
movl
sahf
inc
mov
loope
icebp
sbb
stos
add
cmp
mov
pop
aad
jmp
lcall
xor
test
sbb
xchg
fcoml
cmp
mov
call
cmp
mov
xchg
nop
push
mov
out
fbld
pop
movsb
lock
sbb
nop
sub
scas
shr
scas
std
pop
cwtl
mov
cmp
mov
outsl
mov
mov
mov
or
cwtl
outsb
xchg
or
movsb
cli
aad
pushf
icebp
xchg
test
cltd
ja
lods
mov
xor
push
cmp
out
inc
inc
mov
mov
ret
mov
and
mov
jmp
push
repnz
sbb
inc
xchg
imul
xor
xchg
data16
jo
jle
xor
xchg
xchg
sbb
out
cmc
or
je
lret
and
dec
mov
inc
ss
aam
addb
in
mov
aaa
enter
push
insl
xchg
mov
sub
sbb
stos
push
jnp
add
pop
mov
call
outsb
jmp
jno
xor
add
js
stos
jecxz
sbb
mov
pop
and
jne
in
repz
or
cmp
movsb
cmc
dec
sbb
mov
pop
ret
mov
xchg
push
stos
in
mov
fiaddl
cltd
pop
rclb
icebp
out
sar
mov
adc
sti
xchg
andl
add
stos
sbb
fists
leave
outsb
sub
cld
or
in
sub
repz
mov
pushf
call
lret
ret
xor
dec
sarl
pop
cmpsb
push
dec
sbb
push
mov
sub
pop
xchg
ret
aad
daa
ror
fcomip
or
inc
cld
cld
stc
adc
dec
add
stc
test
mov
mov
cmp
imul
ret
int3
xchg
ds
testl
lret
test
cmpsb
das
notb
inc
jnp
scas
icebp
data16
sub
repnz
cmc
mov
fcmove
pop
mov
push
jmp
xchg
cmp
mov
js
add
add
dec
add
dec
data16
sbb
into
and
inc
sub
pusha
sti
daa
pop
lock
jb
mov
sub
push
push
cltd
push
dec
stos
outsl
shrl
rcl
or
and
mov
xor
jae
mov
scas
movsl
mov
mov
loope
pop
push
cmp
push
xchg
add
call
pushf
fisubl
add
mov
lea
aad
nop
test
div
cwtl
xchg
mov
fwait
lahf
jge
adc
jg
mov
push
inc
adc
addb
inc
out
add
push
daa
push
add
inc
loopne
cmp
xchg
div
outsb
sbb
adc
jae
fs
insb
aam
jecxz
sbb
xor
pop
pop
mov
jno
negb
jl
adc
mov
xor
inc
or
pushf
addr16
mov
add
ret
xor
or
push
cmp
adc
sub
movsl
in
mov
ds
rorb
xor
xlat
mull
int
ret
push
sbb
out
lcall
iret
fbstp
cmp
and
cld
test
outsl
mov
bound
pop
je
mov
test
lods
insb
dec
xchg
in
pushf
cmp
pop
mov
jo
mov
or
xchg
js
shll
mov
addb
neg
scas
cltd
in
js
leave
shll
pop
pushaw
add
mov
push
data16
loop
inc
pop
lret
dec
xor
repz
xchg
enter
andl
mov
aam
jmp
jmp
and
jo
mov
or
push
push
aas
xchg
fstl
xor
das
jp
push
push
loope
mov
dec
test
mov
pop
shrl
movsb
scas
fs
into
cs
inc
push
lods
addr16
mov
ficompl
inc
nop
clc
mov
cmp
pop
ljmp
push
into
mov
pop
push
insb
mov
and
int
mov
les
or
sbb
aam
pop
inc
pop
mov
inc
leave
and
pop
xchg
pop
xor
arpl
in
mov
push
cmp
aad
or
and
dec
dec
call
push
mov
outsb
mov
rcll
das
xchg
scas
inc
jg
stos
imul
mov
rep
out
xor
and
nopl
sti
inc
lret
aad
mov
testl
lea
xchg
add
sbb
dec
inc
std
cmp
and
mov
mov
mov
dec
xor
xor
das
push
lcall
cmp
sti
shrl
leave
xchg
inc
adc
push
sub
adc
sub
test
sub
inc
je
sub
cmpsb
repnz
stos
sbb
out
iret
xchg
sub
insb
jp
push
pop
fistpll
cmp
sub
movsl
cwtl
xchg
pop
je
or
ret
xchg
fbstp
mov
dec
pop
xchg
out
mov
test
call
adc
ss
imul
adc
pop
jbe
mov
xor
pushf
cmp
mov
inc
fs
push
mov
or
mov
sbb
jb
lods
or
out
pop
ds
jb
mov
sub
mov
sub
cmp
outsb
and
outsb
mov
dec
mov
aam
mov
cmpsl
xor
mov
mov
or
adc
sub
outsl
test
inc
xchg
fbstp
fs
pushl
push
dec
jbe
out
mov
push
aad
mov
inc
sbbl
imul
test
outsb
cmp
shrl
xchg
mov
adc
clc
cwtl
out
push
imul
mov
mov
outsl
xchg
stos
add
lods
cmpsl
add
std
jbe
mov
cmpsl
lods
inc
cli
inc
pop
in
les
sbb
movsb
cmp
xor
dec
rclb
inc
shr
pop
mov
insb
daa
add
mov
and
mov
bound
inc
xchg
fst
rol
mov
bound
icebp
mov
insb
sub
fidivrs
or
mov
jb
push
ss
mov
lods
cmp
fsubrl
jnp
sub
loope
ljmp
jb
cmp
iret
pushf
xchg
pop
dec
rclb
sbb
push
push
xchg
pop
push
sti
sub
and
adc
sbb
or
xor
mul
pop
jo
aaa
rcll
sub
ret
fldln2
xadd
xor
insb
mov
add
inc
jecxz
imul
xchg
push
fldl
sub
inc
xchg
lods
add
mov
sub
cmc
imul
mov
adc
rclb
popa
std
sbb
aas
jl
mov
xor
mov
iret
push
dec
xor
dec
sub
mov
xlat
dec
push
dec
mov
adc
sub
outsb
jae
imul
ss
and
jnp
xor
pushf
mov
and
mov
adc
lahf
jbe
xchg
out
fisubs
fcomp
lcall
or
push
repnz
dec
lahf
cmp
subl
inc
outsl
xor
andl
xchg
pusha
fidivl
hlt
pushf
mov
inc
or
mov
mov
jns
mov
lahf
xor
and
dec
and
movsb
mov
xchg
divb
push
shll
insb
fmull
xchg
ss
inc
xlat
aaa
pop
xchg
push
aam
jmp
nop
cmp
jne
push
cmp
repnz
and
mov
push
push
adc
inc
xchg
gs
ds
loopne
pop
pop
jo
pushf
dec
push
xchg
ss
mov
scas
mov
testl
xchg
inc
repz
popf
add
sbb
sbb
jo
sub
cld
cmp
sub
shrb
pop
add
mov
xchg
or
xor
adc
repz
cmp
dec
mov
push
inc
cmpsl
pop
cmp
mov
mov
lods
repnz
push
add
dec
lock
sbb
push
mov
mov
subl
iret
cwtl
or
nop
push
xchg
inc
push
sbb
push
and
add
push
xchg
fdivs
and
xchg
push
cmpsl
sub
je
or
mov
out
inc
sub
js
adc
mov
jle
cld
into
mov
popa
inc
rorb
xor
mov
rcrb
out
icebp
and
gs
dec
insb
and
lret
test
push
inc
sbb
push
popf
test
mov
mov
xchg
fisubs
push
inc
mov
ret
fiadds
repnz
push
add
daa
popa
test
mov
cmp
andb
inc
iret
cli
movsb
sub
cmp
leave
scas
pop
movsb
mov
movsb
aad
mov
xchg
inc
add
in
mov
fxsave
cmp
ss
xchg
jns
fisttpl
cli
loopne
xchg
sti
pop
repnz
mov
sub
add
xchg
cmp
mov
sbb
cmp
sbb
aas
xchg
mov
xchg
mov
push
sti
aas
inc
add
adc
test
nop
les
pop
cs
dec
cmp
mov
cmc
push
mov
jb
ret
test
loopne
inc
sub
or
minps
popf
mov
jg
insl
push
imul
and
jns
jb
popa
popa
outsb
mov
movsb
push
mov
pop
bound
or
enter
call
jmp
adc
mov
ret
lock
std
xchg
mov
mov
jmp
inc
aad
add
scas
out
in
cmp
rcr
mov
adc
mov
xchg
adc
xor
daa
cmp
cmpsl
or
inc
push
outsl
in
adc
movsb
mov
jl
addr16
and
adc
pop
adc
or
shll
pop
fmuls
add
lret
mov
bound
push
sbb
test
push
push
mov
sbb
mov
hlt
cltd
cmc
mov
jmp
sbb
movsb
or
jo
mov
in
or
sub
add
orl
sbb
pop
out
iret
jl
push
leave
sti
xchg
iret
jp
mov
fbld
jg
cli
mov
xchg
stc
add
std
std
mov
mov
or
aam
xor
jmp
xor
pop
lock
pop
and
icebp
notb
adc
mov
aaa
jnp
cmpsl
test
icebp
loop
dec
cmpsl
xor
dec
sbb
fists
adc
shrb
pop
scas
sub
jg
adc
movsb
outsl
cs
das
cmp
and
fisubl
fsubs
sub
loopne
aad
mov
xchg
push
pop
cmp
mov
jp
or
clc
popa
lahf
mov
psllq
cmp
in
mov
fmull
sbb
sarl
ljmp
mov
fdivrl
insl
jno
dec
jmp
jg
popa
mov
jo
add
cli
dec
pushf
movsb
push
pop
jge
add
outsl
int
mov
lahf
jmp
hlt
ret
aam
nop
cld
mov
pop
cli
jo
xchg
inc
sub
ret
clc
jns
dec
sbb
xor
sti
adc
adc
cmp
push
jno
in
negl
mov
jno
and
and
cmp
pop
and
std
js
pusha
mov
inc
adc
mov
mov
nop
adc
stc
and
xorb
or
push
lcall
aaa
test
fwait
outsl
jb
call
outsb
fwait
mov
fwait
push
jb
ss
test
adc
or
add
enter
insl
lret
xchg
jnp
push
out
xor
cmp
aad
bound
imul
sbb
push
loope
push
xchg
daa
hlt
xchg
jo
fdivrs
pop
out
push
in
jl
cmp
outsl
push
sub
cwtl
mov
imul
pop
xchg
shll
mov
ret
decl
mov
data16
sti
or
xchg
or
gs
out
mov
jge
cmc
stc
jecxz
jp
sti
iret
push
jns
ret
cmpsl
out
mov
fwait
xor
jno
lret
loopne
cs
decl
jp
xchg
cld
into
cmp
cmc
jae
into
mov
xchg
fsts
jbe
cwtl
lcall
jae
dec
mov
pop
ds
out
cmpsl
popa
xor
sub
pop
enter
inc
push
xchg
int3
out
lock
xchg
add
popa
push
inc
jge
sbb
mov
decb
pusha
jne
cmp
mov
cmp
add
daa
jne
jp
popf
imul
xchg
je
insl
add
xor
mov
mov
scas
and
lcall
lret
xor
aam
push
mov
mov
xchg
hlt
or
test
xchg
mov
dec
and
notb
out
ret
mov
xchg
or
sarl
loopne
pusha
ror
jno
das
add
adc
xchg
jnp
mov
cld
addr16
cltd
sbb
rorl
addr16
dec
movsb
popf
inc
push
pop
lods
mov
fs
xor
into
xchg
sub
cmp
add
or
fcomip
lcall
jecxz
sub
sbb
or
and
xor
rolb
xchg
jp
je
and
sub
mov
jno
nop
adc
shrl
cmp
imul
ds
xlat
out
push
xchg
adc
cmp
push
arpl
loopne
stos
cmp
bound
ret
pop
je
lds
add
mov
xchg
sahf
daa
xchg
call
add
loopne
push
xchg
imul
adc
cmp
adc
sahf
loop
mov
adcl
push
addr16
mov
test
imul
outsb
and
push
dec
mov
mov
xchg
mov
sub
pop
test
xor
xchg
mov
into
or
in
bound
inc
lret
sarl
push
add
leave
jmp
gs
loope
or
sahf
inc
and
insl
incb
ret
cltd
outsb
loopne
dec
mov
push
mov
subl
test
xchg
gs
push
lahf
lods
add
push
dec
sub
pop
pop
mov
fdivr
inc
adc
in
ljmp
dec
loope
sbb
aaa
sbb
xlat
cmpsb
push
xchg
aas
sbb
das
push
xchg
bt
scas
push
sbb
cmp
xor
xchg
nop
lea
push
and
jg
scas
bnd
inc
xchg
nop
stc
and
cld
push
sub
pop
push
mov
orl
ss
pop
xchg
push
lret
lret
fsubr
dec
subl
cmp
and
int
sbb
imul
stos
dec
cmpsb
into
sub
sub
syscall
cwtl
test
inc
subb
insl
jmp
mov
add
xor
inc
sub
dec
adc
data16
dec
push
xchg
fsubs
and
loopne
and
inc
xor
cmp
push
push
sbb
inc
jae
jge
xchg
bound
jl
jbe
in
test
int
movsl
fsts
shlb
mov
or
push
test
loopne
mov
pop
push
or
insl
iret
arpl
outsl
call
aam
cmp
sub
ret
out
fdivrl
cmp
mov
jle
ljmp
adc
dec
cmpsb
scas
push
imul
jp
dec
leave
scas
push
shll
adc
loope
mov
leave
fnstcw
sub
sub
cld
mov
lods
in
xchg
pop
stos
cltd
cmpsl
xor
mov
call
mov
jmp
push
sub
ss
sbbl
fldenv
incb
jge
jne
jle
add
jmp
mov
or
jmp
fs
inc
popa
or
jbe
adc
push
mov
movsl
add
pop
daa
or
fistps
mov
sub
leave
mov
das
sub
sbb
bound
inc
roll
in
movsb
or
xchg
loope
stc
cmp
push
xlat
mov
sub
testb
shlb
sub
sub
fsubp
dec
or
es
pop
dec
add
xchg
sub
enter
pop
adc
dec
iret
and
iret
dec
dec
movsb
call
scas
pop
cmp
cmp
insl
pop
loop
and
sub
mov
push
es
push
fdiv
inc
push
test
xchg
or
out
rcrb
push
out
lret
shll
sub
add
xchg
inc
sub
add
add
add
mov
mov
outsb
mov
push
rcr
mov
lret
mov
push
orl
cmp
xchg
push
cmpsb
dec
mov
inc
push
popa
int
adc
inc
mov
cli
in
daa
je
mov
mov
daa
pop
sbb
jbe
fldl
cmp
stc
jmp
hlt
fstp
movb
adc
add
aaa
cmpsb
fdivl
ljmp
mov
cld
psubw
lock
mov
shrl
faddl
dec
pop
fisubrl
mov
push
add
push
scas
loopne
mov
inc
and
loop,pt
push
sub
mov
in
inc
repz
int
lea
xchg
xlat
adc
jle
sub
dec
cmpps
fmuls
pop
mov
pop
in
clc
mov
movsl
mov
idivl
je
daa
mov
add
sub
test
xchg
pop
or
mov
dec
xchg
addb
bound
mov
xchg
adc
add
jbe
xchg
pop
aad
mov
pop
loopne
lods
and
icebp
add
insl
xchg
leave
int
sub
movsl
cwtl
push
or
and
das
mov
icebp
movsl
or
dec
cmp
jecxz
daa
inc
lret
out
aaa
stos
jo
or
and
dec
out
pop
and
std
push
pushf
inc
mull
sbbb
pop
mov
cmp
fcomps
mov
imul
or
clc
push
inc
xchg
sbbb
pop
loop
std
mov
popa
or
cmpsb
out
cmpb
aas
cmpsl
mov
or
fistpll
les
push
push
add
iret
sbb
addl
lret
cmp
push
mov
jno
pushf
aad
scas
pop
push
cwtl
cmpsb
movsb
ljmp
addr16
jae
jl
jge
filds
dec
mov
imul
sbb
add
idivl
fidivrs
jne
mov
inc
xchg
int3
xchg
mov
adc
fwait
jecxz
mov
adc
outsl
sbb
addl
je
inc
dec
xchg
ficomps
jp
add
lods
gs
fcoml
loope
or
pop
movsb
das
or
xor
daa
mov
sbb
push
add
xchg
fiaddl
jne
pushw
ss
sarl
call
pop
outsl
sbb
jae
inc
js
movsl
out
repnz
inc
lret
or
sbb
lret
xor
sub
inc
cmp
inc
bound
jle
js
aam
mov
xchg
jbe
aas
fs
lea
dec
mov
sarw
dec
pop
ja
in
test
xor
insl
mov
mov
lock
loope
jp
es
cmp
mov
std
lods
pop
shl
sbb
jl
add
movsb
push
scas
jge
cmp
sbb
addb
add
loopne
mov
popl
clc
cltd
xchg
push
mov
lock
sti
es
push
aas
mov
sbb
outsb
je
dec
push
add
jae
sub
inc
push
sub
jb
enter
xchg
cmp
pop
and
push
dec
cmpsb
or
popf
pop
xchg
jecxz
jnp
or
push
fistl
dec
into
xchg
lods
lret
fwait
cld
data16
fwait
cwtl
or
push
sbb
xor
scas
mov
out
es
pop
scas
call
test
inc
lret
aaa
scas
inc
jns
pop
fcmovne
and
sub
cltd
clc
outsb
dec
mov
inc
int3
dec
ljmp
sbb
xor
or
mov
out
nop
cld
scas
sbb
mov
pop
add
xorb
int
cwtl
rol
sbb
pop
pusha
jno
cmpsb
stos
jge
out
adc
loop
mov
daa
lcall
mov
enter
sbb
loope
push
dec
call
xor
mov
cmpl
push
nop
pop
cltd
lret
cmp
clc
push
adc
push
pop
mov
push
ja
and
dec
pop
andb
lret
stc
pop
filds
pop
sub
dec
mov
pop
aad
int3
jb
je
add
ljmp
jle
mov
sarb
rcrb
push
andb
dec
out
scas
jnp
sub
xor
inc
jecxz
imul
fnstenv
inc
mov
inc
inc
test
and
or
cld
cli
xorl
jno
pop
pop
pop
mov
aas
xchg
mov
enter
mov
test
adc
mov
pop
call
rcll
out
or
insl
mov
mov
xchg
pop
subl
sbb
dec
mov
ret
xor
lret
mov
dec
cmp
push
jg
movsl
dec
lods
test
out
xchg
arpl
dec
cmpsb
sub
aas
inc
mov
mov
dec
sub
gs
adc
or
add
sbb
mov
xor
aam
mov
xchg
adc
aas
leave
push
adc
pop
mov
adc
aad
dec
fisttps
pop
push
pop
push
imul
jbe
cmp
dec
xchg
inc
push
fnstenv
xchg
das
in
adcb
jl
je
cmp
sub
and
bound
out
sub
xor
ret
or
mov
rclb
cmp
sub
arpl
push
mov
pop
inc
cmp
jp
insb
push
ret
popf
movsl
sbb
and
mov
fildll
lds
aaa
and
cmc
or
test
push
addr16
push
or
arpl
test
aaa
pop
sbb
jbe
jle
xchg
adc
inc
outsl
fs
jp
jmp
jbe
pop
aas
pushf
imul
sbb
adc
or
mov
and
loope
je
out
adc
ds
lods
hlt
mov
mul
sub
notb
add
mov
jb
add
in
sub
inc
xchg
mov
fstl
ja
mov
sub
push
loopne
iret
push
and
sti
xchg
sub
mov
enter
dec
adc
adc
sub
sbb
shll
int
sbb
test
adc
dec
and
jb
repz
push
xchg
ja
icebp
push
fldl2t
dec
sub
sub
stos
loop
mov
mov
mov
idivl
pop
js
nop
cmp
lea
cmp
xchg
push
das
imul
pop
cmpsl
fwait
dec
inc
scas
into
fsts
sub
sbb
mov
push
imul
xor
mov
xor
in
mov
sbb
mov
mov
lcallw
push
mov
jg
cld
adc
mov
sub
outsb
les
aas
push
jb
add
lret
push
pop
add
sub
cltd
inc
mov
push
xor
xor
dec
inc
pop
inc
repnz
mov
pushf
ret
test
arpl
outsl
push
into
xor
das
sbb
scas
lods
add
push
data16
dec
ret
pop
scas
aas
adc
aas
add
test
or
pusha
push
mov
dec
and
cmpsl
out
les
ds
mov
mov
mov
movsb
out
xlat
jge
adc
mov
mov
push
xor
insb
stos
addb
leave
jns
mov
bound
jmp
mov
fstl
scas
cltd
aaa
cld
sub
fs
inc
dec
or
mov
xchg
jb
sbb
iret
sbb
mov
push
call
add
mov
and
cltd
and
js
fdivp
mov
jle
sub
les
cmpsl
jb
test
mov
adc
cltd
cld
dec
jbe
cltd
jne
sbb
fcmove
mov
mov
xor
ljmp
adc
push
sbb
shlb
adc
lret
cmp
cmp
shlw
xor
loop
cmc
push
repz
mov
xchg
and
mov
dec
cmp
fstpt
fwait
add
or
in
popa
cld
jmp
jb
enter
mov
sub
push
inc
fisttps
pop
dec
cmp
repnz
sbb
rorl
add
push
aam
out
jns
ljmp
sbb
jns
lods
mov
inc
aam
adc
ret
shlb
mov
xchg
sub
loope
mov
testb
lcall
pmaxub
lea
mov
daa
mov
dec
leave
ja
adc
sub
jne
xor
sub
add
xchg
cli
dec
loope
pop
sbb
jg
push
jbe
arpl
dec
nop
cli
sbb
out
sbb
dec
ffreep
shll
idivb
stos
scas
loope
es
adc
mov
shrl
push
aad
cmp
mov
stos
popl
ss
push
mov
jp
and
roll
mov
lods
dec
inc
dec
mov
inc
subb
call
icebp
cmc
dec
mov
xchg
jp
pop
jge
push
pushf
push
fimuls
test
movsl
cmpl
add
pop
add
dec
inc
test
lcall
out
pushf
sbb
cmp
sub
or
or
dec
mov
pop
shl
sarb
mov
leave
insb
adc
dec
leave
pop
adc
adc
and
int3
pusha
or
inc
dec
adc
jae
xchg
ds
lcall
xor
hlt
shlb
aas
mov
xchg
pop
or
pop
xor
cli
shll
xchg
loope
jp
and
xchg
xchg
mov
lcall
pop
mov
jecxz
push
or
push
mov
cmp
xchg
ja
aam
sbb
dec
mov
mov
ljmp
dec
hlt
andb
iret
lods
adc
lret
call
adc
sub
popf
mov
xor
in
or
test
jno
in
push
in
mov
mov
movsl
rcrl
push
mov
mov
ja
mov
cmp
int3
jne
iret
fildl
jno
mov
testl
push
push
repz
sub
in
pop
subb
notb
inc
ret
mov
or
xorb
dec
push
je
pop
pop
int3
mov
movl
lock
js
fstps
mov
dec
outsl
fs
cmp
leave
add
dec
fs
imull
rcll
movsb
mov
insb
frstor
cmpsb
scas
stos
xorb
cmpb
fstps
repz
or
adc
jp
std
out
or
mov
dec
sbb
lods
pop
lock
cmpsb
int3
faddl
leave
push
or
lea
inc
sbb
nop
xor
push
fs
push
pop
xchg
movsl
dec
jle
lods
cmc
or
pop
mov
test
lea
in
inc
cmp
cld
and
jge
pop
popa
or
pop
adc
jae
push
out
stos
ljmp
stc
xor
loop
lret
sub
mov
pop
mov
lcall
and
add
inc
xor
daa
mov
fs
hlt
jecxz
mov
mov
out
mov
push
push
iret
jne
in
jae
cmp
lret
test
movsb
imul
iret
jmp
lods
or
mov
js
sbb
jnp
pop
ficompl
mov
cmpsb
dec
fdivl
and
in
mov
int3
inc
sahf
loopne
leave
cld
pop
xchg
in
les
popa
mov
sub
xor
jge
mov
ret
cmc
or
iret
push
mov
je
fs
adc
cmp
sbbl
call
popa
jle
ret
pop
repnz
popa
shll
dec
je
add
or
cli
rcl
call
aad
and
scas
out
ja
divb
loopne
fld
pop
jo
xlat
pushf
mov
sbb
push
ja
test
add
mov
push
pop
je
cmp
or
jecxz
cmpsl
aaa
cmc
mov
movsl
mov
dec
jne
and
icebp
jae
dec
jbe
xchg
inc
jmp
xor
ficompl
dec
cwtl
adc
aad
aas
dec
xchg
cmpsb
rorl
inc
shlb
jle
repnz
lods
adc
lds
jg
jae
hlt
roll
rcrb
pop
push
fstpl
pusha
adc
add
icebp
sti
scas
cmp
syscall
dec
je
lahf
ret
and
push
loop
clc
adc
cwtl
lret
add
jo
imul
sbbl
fisubl
push
jae
movsl
ja
mov
in
js
fidivrs
sbb
ficoml
icebp
aam
js
mov
js
and
shlb
cld
add
inc
notl
mov
xor
mov
inc
mov
push
push
or
pop
scas
xchg
pop
iret
and
enter
cmpsl
push
xchg
and
out
repz
or
xchg
shr
or
xor
push
cmp
mov
rol
addb
adc
sub
mov
repnz
iret
fs
lods
mov
lds
pusha
xchg
es
imul
in
sub
stos
xor
in
shlb
cmp
or
jge
clc
adc
dec
mov
xchg
das
push
jg
mov
jnp
xchg
imul
sbb
loop
sbb
xchg
gs
mov
jp
adc
or
cmp
out
cmc
pop
shll
subl
pop
xchg
add
mov
adc
jmp
stos
jle
js
sahf
mov
lret
cmp
mov
mov
gs
shl
pop
mov
mov
and
cmp
stos
arpl
mov
sbb
push
and
lods
shr
fwait
lcall
rcr
mov
mov
jecxz
add
mov
jp
and
pop
pop
icebp
fsubs
sub
pop
test
mov
add
jecxz
aaa
pop
jmp
xor
mov
out
inc
push
pop
lcall
mov
pushf
leave
iret
jle
out
dec
dec
dec
sbb
and
mov
and
cmp
mov
xchg
mov
rorl
shlb
daa
test
pop
loopne
jmp
mov
jmp
aas
sbb
push
or
push
mov
xchg
sub
bound
popf
fsubl
jbe
or
push
push
test
les
or
call
fiaddl
imul
shlb
xchg
push
mov
lcall
dec
sbb
int3
cmpsb
fs
xchg
cmp
lods
test
lock
outsb
xor
incl
add
xchg
test
and
in
popw
sbb
pop
pushf
pop
out
repnz
cmpsb
lods
push
pop
or
pushf
adc
sub
xchg
sub
pop
rcrb
mov
cmpsl
lret
xchg
jecxz
xor
pop
imul
pushf
js
lods
fwait
out
push
pop
rolb
sti
sbb
fbstp
out
inc
out
int
mov
xlat
xor
pushw
aas
add
sbb
mov
xor
push
cmpsl
mov
xorb
cmc
iret
call
inc
testb
sti
xorb
mov
in
les
pusha
inc
jle
and
outsb
stos
xlat
scas
daa
test
xchg
cwtl
inc
arpl
mov
jp
fcom
jmp
push
outsl
clc
ret
ss
or
icebp
cmp
xchg
lods
stc
out
push
mov
and
jb
jns
loop
les
fisttpl
adc
mov
call
sbb
fldl
cmp
jp
mov
jo
mov
xchg
sub
andl
sbb
inc
popa
push
in
pop
outsb
jb
push
cld
cmp
stos
xchg
outsl
lea
xor
es
mov
outsb
lret
xor
mov
ja
pushf
ficomps
dec
andl
pop
movsl
rcrl
data16
int
inc
xor
push
and
in
addr16
jmp
pop
rcrl
in
sahf
xchg
inc
inc
pop
fnstenv
fstpl
sbb
adc
inc
fists
cmp
jbe
xchg
jo
lcall
add
insb
mov
sub
int3
dec
xor
imulb
fs
mov
and
test
iret
push
jecxz
cmpsl
out
sbb
inc
hlt
and
fildl
push
sub
mov
add
pop
test
and
jmp
lods
stos
test
and
rcll
add
xchg
cmp
dec
fdivs
or
xchg
xchg
mov
cltd
movsl
xor
mov
out
or
es
push
addr16
std
nop
jmp
mov
stc
jbe
mov
xlat
mov
mov
and
mov
inc
fnstcw
andl
jge
mov
call
pop
inc
ret
pop
data16
add
test
faddp
add
inc
jae
es
jo
jmp
xchg
js
stos
cmpsb
adc
dec
adc
popa
xor
popf
xchg
mov
mov
adc
inc
adc
mov
mov
mov
xchg
mov
xor
call
jmp
mov
out
out
push
aad
xorb
movsb
add
xchg
test
inc
cmpl
clc
xchg
cli
rolb
or
jno
cltd
outsl
sbb
push
ret
out
test
outsb
dec
leave
sbb
xchg
in
pop
stos
mov
divb
ret
ljmp
fiaddl
and
pop
repz
ljmp
mov
mov
mov
fs
add
mov
pushf
adcl
movsb
rol
cmp
fldenv
xchg
dec
ret
outsb
ds
sar
mov
repz
add
scas
xchg
push
mov
or
out
call
outsb
test
insb
push
aaa
and
pop
sub
lcall
dec
inc
and
adc
clc
mov
aam
mov
je
jecxz
aad
sbb
int3
outsl
cmp
pusha
or
lods
test
jle
xchg
cwtl
mov
fldcw
hlt
mov
xor
ja
popf
mov
add
xchg
pop
or
cmp
cmp
jg
xor
out
insb
sbb
ds
push
mov
hlt
lods
faddl
sbb
push
pop
loope
leave
imul
mov
leave
loopne
mov
pop
fdiv
mov
add
or
jge
pop
movsb
pop
xor
sbb
aad
xor
mov
push
sbb
sti
and
sti
aam
out
or
jg
fs
loopne
sahf
dec
sahf
push
fwait
test
adc
repz
or
scas
jb
or
in
xor
ret
add
push
int3
jmp
fdivrl
mov
bnd
mov
in
out
call
cmp
js
jns
out
jmp
mov
inc
adcb
xchg
cmpsl
add
dec
js
std
or
out
out
adcl
mov
add
sarb
aam
mov
mov
repz
sarl
xor
jle
cwtl
lds
adc
jle
aam
leave
mov
cmp
xor
popa
insl
push
inc
pop
in
mov
fisttps
adc
cmp
jo
mov
les
mov
insl
ljmp
cmp
std
cmp
sahf
add
stos
sbb
lods
mov
cwtl
sub
imul
sub
insb
dec
ljmp
test
xor
pop
popa
popl
out
fmuls
std
sbb
cmp
inc
cld
mov
xchg
add
pop
test
inc
adc
pop
idivw
jge
lret
imul
mov
pop
dec
and
add
mov
in
and
popf
int
stos
std
cli
inc
or
adc
jns
add
and
adc
jno
les
sti
dec
pop
pop
arpl
pop
cmp
xchg
jle
and
add
sbb
pop
add
and
inc
scas
xor
mov
xor
movsl
movsb
cmpsb
mov
je
sbb
jg
xor
adc
andb
cltd
stc
div
out
stos
push
bound
add
jmp
aas
repz
repz
push
xchg
mov
scas
dec
mov
or
addr16
in
shlb
mov
jp
lahf
mov
lods
pop
cmp
push
enter
roll
adc
dec
adc
mov
fdivl
shrb
rolb
pop
mov
loop
mov
repz
jg
push
push
in
ffreep
scas
add
push
in
pop
lock
and
and
adc
mov
mov
dec
outsl
out
movsl
jnp
sub
loopne
xor
jecxz
loopne
scas
push
jb
mov
adc
data16
out
adc
cmp
std
dec
stc
js
sbbl
sub
mov
popa
out
in
inc
dec
cltd
ja
stos
xchg
xchg
inc
in
std
cmp
sbb
lea
pop
cs
adc
aas
mov
jb
add
mov
repnz
subl
mov
pop
cltd
scas
dec
scas
lods
xor
or
ljmp
dec
mov
inc
pop
std
cmp
add
int
daa
pop
cmp
in
out
xor
cmp
mov
add
xchg
test
ja
mov
inc
sub
xchg
imul
fistpll
dec
iret
pop
lcall
aad
push
xchg
out
mov
mov
mov
jno
add
push
lock
pop
ret
or
cmpsb
outsl
rcll
push
or
adc
add
lods
rclb
cmp
lret
jno
mov
je
jae
ret
cmp
xchg
lods
cs
xchg
xchg
stc
imul
stos
clc
xchg
cmp
mov
cmpsb
and
ljmp
jo
inc
rcrb
sub
push
pop
imul
mov
nop
jge,pn
jno
and
jle
push
sbb
leave
mov
dec
js
adc
xor
hlt
push
notl
dec
push
xchg
mov
inc
jae
xor
arpl
aad
imul
sahf
push
dec
cmpsb
mov
repz
pushf
gs
test
jle
lock
push
adc
xchg
das
mov
call
imul
fcmove
mov
daa
sub
xor
push
pusha
pop
or
in
and
mov
pop
sub
hlt
shrl
ja
cmp
pop
pop
testl
xchg
and
out
mov
fnstcw
jecxz
lods
lds
movsl
mov
sbb
jle
pop
adcb
xchg
cmp
adc
cltd
test
aas
addr16
notb
xchg
jl
jmp
pushf
pop
push
rolb
cmp
ljmp
fistpl
and
popa
je
mov
test
sub
xchg
rorl
mov
xor
add
add
cmp
jno
cltd
data16
aad
inc
xchg
xchg
mov
or
pop
or
cmp
sarl
sbb
xor
xchg
jl,pn
cltd
push
test
pusha
sbb
fsubrs
sahf
jnp
jae
inc
test
or
pop
pop
xchg
sahf
inc
xchg
push
insb
shll
iret
bound
sbb
sarl
or
adcl
in
jb
mov
hlt
or
cli
pop
in
mov
ret
jb
out
test
nop
pop
fldenv
test
imul
mov
and
dec
inc
pop
add
in
xor
in
cmpsl
je
js
sbb
pop
pop
and
jmp
mov
orl
add
xor
pop
add
rcr
fsub
push
xchg
arpl
rclb
fisubs
and
cmp
jbe
inc
test
add
out
subl
fdiv
mov
add
inc
pop
push
ficompl
into
outsb
jb
xchg
das
out
ret
sbb
les
mov
pop
cld
add
lock
daa
mov
jl
mov
cmp
cwtl
shr
jg
mov
repnz
xchg
rcl
jno
movsb
dec
dec
push
add
orl
in
inc
int
and
pop
shr
leave
sub
or
sbb
push
jge
sbb
cmp
out
jmp
test
mov
cmp
and
pop
dec
xchg
mov
scas
dec
jbe
enter
jl
jecxz
test
mov
popf
push
mov
movsb
out
lock
xor
setno
jg
jge
sbb
and
test
sub
in
xchg
jp
mov
lcall
or
mov
dec
mov
xchg
add
push
push
sub
jecxz
in
iret
pop
xchg
imull
mov
lea
dec
lret
adc
inc
je
lock
push
xor
hlt
inc
sub
inc
movsb
inc
and
fmull
gs
pop
mov
in
cs
shld
int3
jns
pop
out
lea
inc
mov
mov
das
add
cli
inc
sbb
fdivrl
pop
push
pop
mov
inc
enter
into
adc
rdpmc
and
outsl
mov
rorb
in
adcl
movsl
sbb
cmpsl
dec
xchg
mov
test
iret
and
xchg
mov
add
out
ja
push
pop
outsb
fwait
mov
jg
push
ljmp
in
mov
sub
xor
lret
mov
cltd
lods
cmp
lods
mov
and
pop
push
pop
xchg
imul
mov
add
pusha
das
fistpll
jmp
push
add
cltd
movsl
lea
sti
sahf
push
dec
daa
push
or
fwait
lret
xor
lret
out
fcoml
icebp
xchg
sub
mov
nop
cmpsl
loope
rcr
jl
mov
pop
jp
jp
mull
sub
movsl
dec
push
or
leave
push
sub
xchg
xchg
inc
frstor
insl
sub
ja
mov
mov
clc
aas
jp
mov
and
cmp
adc
fidivs
xchg
push
js
push
outsb
gs
loope,pn
daa
and
scas
cmp
fcoms
popf
push
ds
aaa
or
mov
push
and
cwtl
outsb
scas
das
dec
add
cltd
mov
push
outsb
cmp
mov
pop
inc
cmpsb
lods
les
fdivl
add
clc
xor
test
or
pop
leave
fcmovbe
fisubrl
insb
push
or
out
ret
in
movsb
sahf
xor
aad
int
pop
sbb
outsb
mov
fs
xchg
ret
sub
out
mov
push
push
cmp
repz
push
adc
out
mov
jo
inc
jmp
iret
jb
dec
fsub
cmpsb
lret
jge
dec
dec
ret
jne
pop
test
push
dec
js
notl
push
ret
cmp
bound
xchg
insl
mov
rcr
cmp
mov
dec
cmpsb
lret
paddb
cli
jne
lock
mov
and
test
sub
outsl
inc
lret
ljmp
push
sbb
lea
and
popf
and
sub
sub
jae
sbb
xchg
sbb
movsb
lcall
mov
idiv
test
aam
dec
mov
mov
scas
fadd
sbb
fistpll
ss
sub
jmp
pop
das
pop
out
dec
hlt
mov
bound
dec
cmp
mov
popf
lods
inc
and
dec
mov
ret
pushf
mov
rorl
out
adc
lret
jp
fildll
jae
out
mov
pop
sub
xchg
scas
pop
sub
das
dec
mov
pusha
and
cld
lea
imul
aad
xor
in
mov
mov
aam
gs
fwait
aaa
cmp
enter
push
lret
pop
filds
inc
out
jl
inc
push
cld
imul
iret
lahf
mov
xor
out
mov
lods
les
loop
jb
inc
adc
jge
loope
mov
jns
jne
in
mov
pop
in
movsb
movsl
xor
or
sbb
xor
jmp
arpl
and
sub
nop
iret
or
loope
sbb
xchg
ret
into
and
cs
lcall
gs
das
cmpsl
outsb
jmp
cmp
pusha
and
mov
push
les
rep
cmpsl
repz
fistps
and
mov
add
movsb
and
ljmp
dec
push
sbb
pushf
into
or
enter
pop
scas
mov
xor
inc
outsb
dec
loope
test
jno
dec
rcll
xor
pusha
mov
pop
push
sbb
adc
dec
movsl
or
sbb
jle
in
pop
cmpsl
push
sub
dec
clc
ret
negl
ss
xor
fsts
mov
dec
lods
ficoms
sub
cmp
xorl
jge
stos
dec
add
inc
mov
sbb
mov
into
rorb
stos
repnz
out
dec
jge
adc
rcrl
or
lret
sbb
dec
es
lds
inc
repnz
aad
and
bound
cs
xor
movsb
xchg
xchg
sbb
mov
pushf
dec
push
jnp
xchg
fs
inc
imul
js
cmp
hlt
dec
jbe
push
scas
repnz
movsb
addl
cmp
imul
les
or
test
dec
sub
int3
sti
cmpsb
movsl
jnp
xor
lcall
cmp
adcl
dec
lret
jae
int
sbb
or
xchg
sti
subb
cmc
adc
cltd
sub
sbb
jno
jb
add
xor
xlat
imul
ret
ret
repnz
add
test
pushw
or
fs
dec
iret
ds
pop
lds
mov
imul
xor
dec
cmpsl
adc
test
or
bound
jmp
repz
insl
dec
sub
test
adc
and
inc
mov
bound
pop
repnz
xor
jne
xchg
inc
lcall
pop
sbb
movsl
jmp
fistps
retw
cmp
jecxz
pop
lds
inc
mov
repnz
cltd
pop
mov
int3
jmp
sub
test
jne
sub
or
sarl
jne
movsl
push
xor
add
daa
lods
loop
push
test
mulb
aad
arpl
add
les
mov
sbb
mov
push
fcmovnbe
jmp
lea
pop
adc
and
aas
dec
push
lods
insl
pusha
movsl
sbb
lret
ret
xchg
insb
dec
aam
nop
mov
negl
adc
ret
repz
sbb
mov
sarb
mov
notl
inc
sbb
mov
ja
or
xchg
aad
movsb
adc
jo
or
inc
test
cltd
inc
inc
push
pop
pop
sti
aam
lods
add
push
iret
pusha
stos
inc
xchg
rcrb
ljmp
inc
daa
sub
push
in
in
push
ret
imul
jae
push
vpcmpeqw
pop
xchg
vmread
scas
jge
pop
and
mov
adc
xor
xchg
subb
push
cld
fbstp
xchg
stc
ret
jb
push
rorl
push
and
std
insl
sbb
mov
shl
jne
int
sub
pop
mov
jns
ret
xor
mov
fdivl
or
negb
test
xor
pushf
cmpsb
popf
jmp
or
jmp
leave
push
out
decl
enter
aam
js
pushl
xlat
mov
repnz
lcall
lock
ss
mov
ret
mov
mov
das
inc
push
into
jle
jbe
xor
out
in
cmpsl
fistpl
daa
push
arpl
adc
dec
sbb
jp
and
mov
dec
loopne
pop
sub
mov
js
sub
lea
pop
into
and
dec
mov
adc
pusha
mov
push
mov
add
rolb
add
pop
cmp
push
inc
lock
sbb
cmp
pop
loopne
ds
inc
fldenv
xchg
adc
in
out
gs
fiadds
push
cmc
add
cmp
cmp
add
xchg
not
mov
jmp
xor
lock
inc
xor
jbe
std
sbb
adc
adc
sbb
cmp
push
and
int3
xchg
loopne
and
jne
pop
enter
enter
mov
dec
clc
pusha
andb
addb
inc
jne
daa
lds
test
cmp
or
addr16
rcl
inc
xor
in
pop
cli
xor
ds
jl
shll
dec
mov
and
cmp
mov
lcall
adc
clc
call
xchg
xchg
add
outsb
ljmp
bound
mov
stos
rcl
xchg
pop
adc
push
mov
mov
push
inc
loopne
jle
add
arpl
das
xchg
rcrl
int3
in
lds
sub
cmpsb
gs
xchg
adc
aad
and
pop
dec
push
or
stos
sub
jecxz
cmp
mov
pop
into
icebp
sbb
lds
add
scas
mov
sub
add
and
test
inc
js
add
ljmp
enter
and
outsl
jle
xchg
ret
cwtl
xchg
hlt
xchg
call
sbb
ret
vpsubd
mov
imul
divb
popa
jns
pop
call
movsl
mov
cld
in
add
aaa
call
bound
mov
imulb
add
addb
js
inc
xchg
popf
cmc
lods
xchg
test
decl
pop
cmp
and
pop
out
pop
mov
scas
jnp
imul
sub
mov
loope
ss
or
mov
adc
lret
repnz
jmp
dec
bound
inc
xor
jno
clc
jge
hlt
pop
mov
icebp
push
mov
jnp
jle
leave
leave
in
ret
mov
dec
cmp
xchg
movsl
jns
dec
cmpsb
int
outsb
ja
repz
xchg
cmp
hlt
pop
mov
mov
and
lods
jmp
fnstcw
adc
sub
xor
setnp
in
jp
or
sbb
inc
jg
push
mov
push
mov
sub
mov
fiaddl
mov
sub
pop
lcall
rcl
jne
add
jae
bound
push
ds
jp
or
aam
xchg
adc
inc
iret
add
popa
in
xchg
lea
mov
dec
xor
dec
adc
xchg
loop
in
addr16
les
pop
cmp
lret
adc
jns
cmpsb
dec
xchg
popa
inc
ret
jle
or
pop
lea
adc
loop
enter
int3
stc
pop
sti
adc
sub
fwait
push
push
insb
xchg
imul
cmp
lret
mov
jbe
std
fwait
mov
cmova
push
xchg
cmp
stc
arpl
push
fmuls
inc
cmp
inc
pop
ret
add
sarb
pop
cli
xchg
pop
cld
cwtl
out
out
stc
push
loope
and
jl
adc
jge
ds
sub
lods
pop
jne
jge
bound
mov
ret
leave
insl
mov
js
inc
movq
push
decb
es
cmpsb
and
or
pushf
subb
fistl
aaa
xor
scas
dec
pop
loope
sahf
and
jbe
push
mov
or
jle
mov
xchg
add
aaa
pop
lods
hlt
cmp
in
xor
out
push
sbb
lea
jl
adc
push
xchg
out
pop
xor
cltd
jge
jo
xor
or
int3
dec
in
xchg
popf
xchg
inc
mov
adc
inc
sti
nop
aaa
sub
out
mov
ficoms
lret
lahf
push
sub
adc
es
fstps
mov
lock
ret
js
inc
add
jae
mov
test
sbb
mov
mull
inc
jmp
or
lods
sbb
lret
mov
sbb
js
in
xchg
jp
ffree
int3
rol
or
outsb
ja
stos
out
push
fbstp
pop
in
dec
push
popf
fsubrs
sub
sub
loopne
inc
add
repnz
pop
imul
arpl
push
inc
cmp
xchg
lds
jl
xchg
outsl
pop
jle
mov
test
icebp
xchg
pop
out
lcall
movb
mov
in
out
sahf
xorl
ret
adc
loope
lea
push
imul
pop
add
push
and
lcall
mov
mov
cmp
cmp
shr
fimull
inc
mov
stos
xchg
insl
pop
push
test
hlt
and
mov
iret
pop
lret
inc
sbb
call
aad
cltd
xchg
add
imul
lea
mov
cmovne
jecxz
mov
mov
out
test
pop
aas
jno
inc
adc
mov
adc
sahf
jns
xchg
js
stc
in
inc
adc
pop
xchg
and
or
imul
inc
mov
dec
adc
rolb
lods
out
sbb
fstpt
add
aaa
or
xor
fimull
movsb
inc
mov
cs
push
and
ljmp
int
repz
repnz
jb
sub
in
adc
in
lea
mov
xchg
shrb
rcll
mov
xor
filds
sbb
inc
mov
test
xchg
xor
fildl
pop
adcl
jnp
xlat
js
push
or
add
cwtl
dec
outsl
and
sbb
testl
rol
repnz
adc
or
repnz
mov
inc
sub
mov
out
and
cmovp
loopne
push
lods
dec
into
inc
lahf
xchg
or
imul
mov
jl
mov
dec
out
and
int
or
ja
rorb
mov
test
aas
shlb
outsl
inc
push
cld
outsl
adc
test
xor
mov
int3
mov
loopne
or
test
mov
sub
lods
adc
pusha
or
into
xor
jge
sahf
shlb
push
mov
ficoml
jg
ror
shl
add
xor
lcall
add
cld
inc
pop
xchg
xchg
jbe
cmp
iret
pop
push
test
cli
push
neg
lea
int
xor
inc
sub
shl
sub
movl
decb
or
mov
dec
sub
fldenv
cltd
pop
mov
mov
dec
ljmp
push
xchg
stos
fldt
sarl
xor
mov
jmp
dec
popa
pop
jg
cmp
mov
bound
shll
call
and
stos
stos
fcomps
cmp
test
cltd
inc
push
out
outsb
out
stos
xchg
dec
or
xchg
out
cmp
jl
ret
push
cmpsl
imul
xor
dec
stos
inc
notb
push
mov
test
inc
clc
fs
into
add
test
sub
lret
adc
cs
and
iret
mov
into
and
mov
cmp
shll
lods
pop
fwait
jle
dec
mov
mov
aas
push
pop
inc
out
jmp
rclb
mov
cld
jae
push
inc
scas
imull
adc
insl
les
dec
cmp
pusha
cli
es
cmpsb
es
lahf
dec
pop
dec
mov
mov
mov
adc
test
adc
add
mov
iret
cld
mov
dec
lret
rclb
mov
xor
cld
sub
pop
setnp
pop
aad
lahf
cmp
cs
mov
outsb
pop
pop
shlb
sub
movsb
mov
or
mov
test
imul
pop
add
fistpll
mov
bound
dec
pop
jg
rolb
push
cmp
mov
xchg
adc
mov
mov
outsl
xor
movq
push
and
fcompl
mov
pushf
pop
out
cmp
leave
xor
jmp
popf
out
clc
inc
cmp
je
adc
sti
fldenv
adc
orb
pop
in
xchg
push
xchg
cmp
out
lahf
mov
stc
mov
mov
mov
outsl
xor
cmpl
addr16
cmp
mov
adc
xchg
bound
mov
shll
xchg
subb
int
mov
and
adc
mov
popa
ret
mov
mov
dec
sub
sub
mov
dec
aad
xchg
cli
pop
cld
sbb
xchg
adc
adc
add
push
and
sub
or
xchg
adc
test
es
pop
sti
pop
xchg
fidivrs
dec
cmp
sub
lea
es
sub
xor
add
ficoms
sbb
adc
movsl
fwait
fs
rcrl
rcll
idivl
lods
daa
ret
xchg
stos
shlb
push
rcrb
aad
popf
or
in
nop
aam
setge
lods
jo
fstps
xchg
cli
cmp
push
cmp
repnz
jecxz
ljmp
mov
cmp
add
sub
jl
or
pop
aas
stos
je
xchg
xor
fsubs
mov
xchg
testb
push
and
dec
mov
rcrl
addr16
es
outsl
add
fidivl
sbb
push
xor
mov
jne
lret
add
les
cmp
cmp
jmp
stc
xorl
mov
mov
sahf
mov
fsub
or
push
xor
loopne
cmp
cmc
loope
push
jnp
rcrb
cmp
jecxz
mov
idivl
scas
cltd
test
movsb
push
inc
mov
sbb
loopne
jno
ror
cmpsl
sbb
jp
sahf
sbb
dec
mov
pop
mov
test
dec
add
xor
add
and
dec
add
in
xor
add
add
cmp
mov
xchg
int
scas
and
imul
test
sbb
xlat
lods
bound
sub
mov
cmpsl
xchg
cmpsl
fdivs
ret
mov
stos
mov
push
push
sub
cmp
push
sbb
cmp
mov
stos
pop
iret
sbb
dec
add
test
cmp
out
sarl
popf
jnp
adc
inc
ret
loopne
repnz
dec
jne
push
fwait
fwait
push
inc
mov
andb
xor
outsb
call
inc
jg
seto
adc
daa
add
xchg
sarb
mov
xor
pop
cmp
notb
sub
push
lcall
cmp
pop
sub
enter
sbb
out
lret
movsl
hlt
loopne
sub
push
mov
sbb
push
mov
cmc
sub
push
pop
shll
sbb
pop
jbe
outsl
into
scas
rcll
pusha
dec
rol
jns
sbb
push
aas
in
mov
rcll
imul
popf
imul
je
mov
js
jne
dec
imul
or
add
sub
lret
dec
icebp
adc
dec
popa
sub
fsubl
call
jb
pop
hlt
mov
push
mov
rolb
lds
pop
add
lcall
fwait
scas
les
addb
je
aas
and
xchg
fdivl
pop
pop
push
xchg
into
js
pop
jo
stc
shl
jl
pop
mov
sarl
mov
mov
inc
mov
mov
mov
inc
pop
pop
pop
or
mov
enter
xchg
add
push
jnp
add
add
dec
int3
xor
sbb
xchg
bswap
adc
pop
ss
mov
cli
jmp
aam
push
inc
jecxz
xlat
xchg
dec
lcall
mov
in
or
xchg
mov
scas
jns
arpl
adc
xor
stos
jns
pop
push
xchg
lods
sbb
push
sub
in
insb
cmp
in
pushf
sub
lret
inc
idiv
mov
xor
mov
insl
andb
mov
push
sti
dec
mov
and
inc
inc
xor
sub
inc
cmp
jb
xor
inc
mov
icebp
sbb
inc
cmpsl
sub
push
and
pop
add
xorb
inc
and
leave
fs
sub
jo
icebp
add
pop
xor
bound
lret
jo
in
test
inc
inc
mov
add
fnsave
test
pop
shll
push
pop
and
iret
inc
jecxz
popf
cld
and
mov
cmp
add
cmp
mov
add
push
mov
pushf
shll
les
xchg
out
add
pop
jp
inc
jp
stos
push
mov
jae
into
enter
mov
cs
sbb
xorb
jge
cmc
or
sbb
or
sub
add
sub
fmull
jb
mov
fsts
incb
shlb
push
dec
mov
es
sahf
nop
das
cld
xchg
adc
js
inc
sbb
inc
sar
mov
in
out
imul
call
push
imul
lret
mov
mov
push
adc
ljmp
les
cmp
adc
stos
fisttps
aam
add
in
mov
test
pop
sub
lcall
jecxz
arpl
jno
cmp
ret
scas
dec
loope
data16
xor
adc
dec
ljmp
pushf
daa
push
cmpsl
nop
cmp
mov
and
pop
insb
jg
lahf
fwait
movsl
inc
mov
xor
faddl
or
ret
cwtl
mov
pop
stos
lcall
add
push
sbb
xor
fnsave
incl
rorl
pop
inc
dec
out
test
inc
subl
pop
test
mov
cmp
sub
adc
xor
jge
gs
mov
es
jle
adc
aam
stos
mov
dec
lock
cmpsb
fstpl
movsb
sbb
inc
inc
adc
dec
xchg
sbb
ret
inc
jmp
movsl
pop
orb
out
or
lods
xchg
mov
aaa
dec
dec
mov
inc
pop
movsl
cs
cmp
jns
cmp
ljmp
inc
popa
mov
leave
out
lret
dec
aad
xchg
adc
pusha
adc
push
mov
imul
adc
lea
stos
fcomi
sbb
xor
ret
and
and
fidivrl
mov
ja
mov
or
inc
insl
repz
negl
out
xor
cmpsb
and
insl
push
push
adc
xchg
sbb
jecxz
dec
lods
fsin
xchg
add
imul
xchg
stos
push
into
mov
es
add
sbb
mov
mov
in
xor
jo
xchg
inc
scas
int3
lds
outsl
or
and
leave
mov
pop
sub
and
mov
push
sub
or
adc
push
mov
icebp
pop
pop
mov
mov
mov
jnp
and
scas
in
cltd
shrl
insb
out
in
popf
mov
aad
aad
ret
pop
mov
or
sbb
imul
mov
je
lock
dec
mov
mov
int3
sub
mov
push
imul
daa
into
in
mov
mov
sbb
sbb
outsb
mov
jl
add
packsswb
add
xchg
pop
pop
sti
push
ljmp
pop
push
into
ret
jle
add
loop
jo
push
jno
mov
cld
jne
xor
fadds
xchg
mov
insl
test
out
jg
pop
pop
inc
inc
daa
and
xchg
out
cmp
out
fdivrl
in
push
scas
jp
popa
cmpsb
pop
insb
hlt
dec
fiaddl
dec
mov
adc
dec
pop
imul
and
ret
lods
push
lret
xchg
xchg
ror
dec
into
enter
mov
rcr
pop
rolb
test
xchg
js
in
test
mov
shl
add
imul
xchg
mov
push
adcb
pop
dec
fwait
les
dec
cmp
in
movsl
dec
shlb
rorb
add
push
mov
ja
dec
pusha
fs
fwait
insl
pop
rorl
inc
jns
jp
push
inc
jmp
stos
cmp
out
inc
sub
jge
incb
xchg
pop
inc
xchg
mov
pushf
add
push
and
push
ja
loope
inc
xor
repz
mov
sahf
cmp
jl
inc
inc
stos
jecxz
ret
pop
or
jne
pop
cmp
in
or
addr16
jmp
push
adc
mov
fidivrl
mov
fwait
mov
inc
or
lods
shlb
negb
sub
hlt
or
dec
jno
aaa
imul
repnz
icebp
es
dec
lcall
int3
cmp
pop
dec
sahf
push
test
shrb
mov
xchg
mov
lods
in
lea
ss
ficompl
add
dec
ja
scas
test
das
mov
lret
leave
adc
push
insb
xchg
mov
sti
dec
push
xor
xchg
clc
xchg
imul
jmp
pushf
lods
cmp
jp
movsb
int3
jnp
mov
add
or
mov
aad
xor
fiaddl
mov
movb
sahf
xchg
aam
pop
inc
pop
scas
repnz
ds
out
mov
insl
cltd
ljmp
ss
cmc
leave
lea
fadds
fnstsw
cs
sub
push
xor
cli
adcb
add
fs
xchg
jge
dec
xchg
inc
shr
arpl
push
sarl
jne
sub
fsubs
xchg
dec
fs
das
xor
dec
mov
addr16
push
rorl
leave
daa
cmpsb
jno
jne
xchg
push
ret
fucomp
mov
xor
jmp
das
ljmp
push
pop
in
in
insb
cmp
or
adc
inc
lcall
fbstp
xchg
lods
inc
or
in
dec
push
faddl
cli
adc
mov
inc
inc
popa
pop
in
add
xlat
cmc
xor
or
nop
sub
lods
mov
add
push
lods
mov
ficompl
lret
and
inc
pop
loope
daa
sbb
mov
shll
out
in
jbe
dec
jge
mov
push
jne
iret
int3
pop
cmp
aad
xchg
in
jle
xorl
fists
cmp
fnstsw
xor
movsb
jae
jno
add
jb
mov
sbb
adc
mov
push
cmc
imull
std
les
sbb
add
out
push
sbb
dec
or
cmp
bswap
cld
dec
mov
inc
jbe
imul
inc
push
xor
sub
jge
loope
xchg
jmp
adc
and
cmp
inc
aaa
cmpsl
ficompl
aaa
push
or
and
jmp
es
out
jmp
addr16
dec
ret
and
nop
sub
aam
loop
std
aam
data16
mov
pop
jbe
dec
shrl
add
pop
insb
pop
out
pop
loope
and
ds
hlt
ret
jbe
movsb
jecxz
xchg
stos
mov
fistpl
stos
mov
adc
popf
jnp
es
hlt
mov
cmp
mov
add
scas
jle
int3
mov
ret
mov
mov
push
cli
js
inc
push
test
icebp
sahf
jae
mov
mov
fistps
mov
je
std
out
mov
xchg
fidivrl
rcr
mov
push
xor
imul
lods
inc
cld
lcall
int3
call
test
aas
repnz
aam
or
mov
cmp
adc
aaa
clc
sub
xchg
jo
push
cmpsl
jl
fldt
xorl
xchg
mov
mov
bound
insl
aaa
into
fildl
dec
fidivrs
in
daa
test
add
les
mov
out
gs
dec
jp
lea
in
sti
mov
andl
rorl
cltd
outsb
in
mov
push
int3
lock
and
lock
js
sub
jle
fcoml
mov
es
insb
xchg
pop
xor
xor
enter
lods
loop
cltd
mov
inc
mov
or
call
push
popa
lods
pushf
mov
ljmp
sub
cmp
adcl
xor
repz
in
ret
inc
shlb
mov
jno
notl
outsb
or
testb
mov
adc
pop
hlt
xchg
jne
addr16
xor
cwtl
repnz
in
aas
mov
cltd
push
mov
out
xor
ret
cmp
fidivl
or
ficoms
mov
sub
sbb
ret
je
aaa
sbb
pop
sahf
aaa
lcall
mov
dec
aam
adc
scas
add
sbb
sbb
push
add
push
mov
sbb
movsl
mov
cltd
enter
int3
xchg
lods
and
push
loope
xor
mov
add
jbe
sub
cs
int3
push
xchg
inc
and
aam
pop
fstl
pop
inc
enter
sarl
loope
mov
mov
cld
push
jg
pop
sti
test
adc
sub
pop
out
out
cmp
dec
shrl
mov
adc
in
mov
mov
in
arpl
pushf
mov
lea
mov
push
mov
push
in
sahf
hlt
das
or
pop
jle
dec
sbb
loopne
idivb
aam
ds
in
stos
gs
mov
push
scas
leave
sbb
dec
sahf
add
clc
fsubrs
out
sbb
in
add
and
adc
out
cwtl
sbb
cmp
movsb
mov
mov
cli
fimuls
in
stos
jae
xchg
pop
cmc
mov
and
out
adc
int3
xor
pop
popf
or
cmp
mov
mov
jecxz
push
lahf
or
adc
repz
cs
and
call
xor
je
mov
cmpsl
out
inc
xor
pop
lea
cmpsl
cmp
inc
sbb
adc
xchg
in
add
and
enter
mov
xchg
or
sbb
and
mov
mov
ret
into
imul
xor
add
test
lds
mov
repz
loop
enter
xor
add
mov
in
adc
lea
jae
mov
pop
dec
sbb
rcl
dec
scas
daa
insl
cmp
mov
lods
pushf
mov
dec
push
fucom
std
cltd
cmp
add
cmp
xlat
lods
outsl
ljmp
mov
mov
xchg
cmpsb
or
sbb
in
out
sub
je
pop
stos
test
jl
push
or
out
pop
push
into
jg
dec
lret
stos
and
clts
rorl
mov
addl
xor
or
add
pop
add
cli
scas
or
and
pop
and
setnp
fdivl
out
xchg
push
push
test
ja
iret
dec
mov
mov
xchg
in
fnstcw
lods
outsl
out
nop
xlat
sub
dec
pop
sub
jnp
out
adc
pop
xchg
add
adcb
mov
dec
and
xchg
ret
stc
out
ret
js
mov
mov
sti
ss
mov
movsb
jle
sbb
orb
xchg
test
adcb
jno
sti
fnsave
pop
loopne
xorl
and
pop
or
pop
testl
sbb
sbbb
fwait
xchg
pop
lds
pusha
pop
xchg
daa
jecxz
push
fs
fcoml
outsl
inc
mov
dec
les
jae
dec
xchg
mov
bound
icebp
ror
mov
push
lret
dec
test
mov
jbe
sub
jne
nop
popf
loopne
or
aaa
decb
cmpsl
cmp
js
cmpsl
mov
or
das
mov
push
add
lret
mov
aaa
out
rorl
aam
mov
cmp
add
inc
cmp
sbb
fadds
out
mov
xor
cmp
fst
clc
std
mov
sbb
jl
stos
std
xchg
addr16
inc
xchg
xor
sub
stos
adc
sbb
imul
ds
mov
scas
rcl
lods
xchg
stos
xlat
pushf
inc
aad
iret
inc
test
mov
aad
sub
mov
pop
je
fisubl
sub
ss
stc
and
out
cmp
je
fimull
bound
cwtl
xor
es
fstps
mov
ret
mov
mov
in
and
sbb
xor
int
push
xchg
mov
mov
xor
outsl
cli
ret
je
mov
cmpsb
cmp
scas
lds
add
sub
ret
movsb
inc
iret
loope
and
and
sbb
jg
cli
pusha
cmp
add
push
xor
jae
rcrb
mov
jmp
jne
in
mov
mov
dec
mov
push
xchg
push
lret
lret
mov
cmpsb
jno
jbe
xchg
inc
insl
imul
lcall
cmp
out
mov
pop
lea
out
inc
cmp
das
push
push
aad
cwtl
vlddqu
test
pushf
or
xlat
mov
in
jge
mov
notl
cmp
flds
leave
add
cmp
scas
or
ja
inc
int
jge
pusha
std
js
sub
divl
sub
pop
cs
arpl
or
dec
pushf
faddp
pop
sbb
int
fidivrs
push
cmp
cmc
call
addr16
andb
adc
cmp
mov
and
jl
jae
jo
mov
dec
sahf
iret
mov
sbb
in
cltd
cld
repz
ja
enter
xor
sub
enter
push
pop
xor
jb
fcomp
mov
loop
sbb
popl
lds
inc
and
stc
pop
mov
in
jp
hlt
popa
inc
pop
popa
sub
popa
sarl
shlb
imulb
jge
cld
call
or
or
or
mov
xor
setge
dec
int
dec
sbb
mov
test
adc
daa
and
push
call
in
cli
mov
cltd
and
mov
outsl
sub
std
and
pusha
mov
mov
data16
xchg
and
push
gs
icebp
dec
adc
loope
ss
sbb
adcb
sub
or
xchg
lret
fistps
int3
das
les
lret
xchg
cmpl
xchg
repz
mov
mov
xor
sbb
mull
pop
sub
arpl
sub
inc
adc
jle
test
imul
cltd
xor
and
gs
in
pop
mov
aam
xor
pop
cmp
pop
fld
lds
int3
mov
mov
jo
pop
cld
rorl
xchg
push
mov
mov
dec
js
aaa
jnp
iret
ljmp
sahf
stc
test
pushf
and
and
xor
andb
xor
leave
sbb
lcall
jecxz
and
aas
lea
cli
xchg
xor
jl
inc
imull
adc
dec
mov
inc
sub
cmc
lahf
ss
aas
xchg
mov
jno
pop
dec
mov
cmp
mov
sti
push
dec
out
mov
imul
jg
inc
arpl
pop
or
popl
mov
xor
push
bound
sbb
push
cmp
shl
subb
leave
int3
pop
sub
imul
cmpl
xor
test
in
orl
insl
push
xor
pop
cmpsl
out
movsb
xchg
loop
cmp
sbb
aas
ljmp
adc
adc
aad
cmp
daa
xorl
or
sub
lods
add
xor
cltd
mov
dec
roll
xchg
out
into
xchg
mov
sbb
cltd
bound
repz
daa
xor
mov
pusha
test
pop
lahf
jmp
add
rorl
rolb
popf
dec
or
or
jns
mov
lret
popf
loope
jg
pusha
cmpl
in
and
sub
sahf
or
jp
pop
jb
sbb
scas
lcall
mov
jb
dec
into
jmp
fldt
sbb
clc
push
js
sub
mov
or
icebp
pop
stos
in
xchg
sti
icebp
lret
pop
loope
inc
sbb
shl
addr16
divb
test
dec
sbb
sahf
js
adc
mov
mov
mov
xor
mov
dec
sahf
mov
out
xor
or
push
sbb
sbb
outsl
jnp
mov
or
push
add
stos
fiaddl
je
and
push
aas
pop
out
cmp
mov
xor
jge
sub
fucom
or
test
and
jg
push
sbb
pop
mov
xchg
movsb
and
sbb
into
xchg
fidivl
aaa
mov
fsts
popa
dec
mov
cmp
xlat
cld
out
sbb
xorb
stc
incl
ret
ds
loop
sbb
xchg
pop
cmp
dec
pop
stos
or
sub
pop
pop
push
xorb
push
arpl
add
cmc
mov
in
std
sti
loope
pop
fidivs
push
arpl
and
mov
gs
inc
stos
mov
push
sbb
rcrb
push
out
and
loopne
repnz
mov
stos
aad
and
sub
jg
insl
lret
inc
stc
xlat
push
and
sahf
loop
rcll
inc
jecxz
aaa
and
and
pop
test
lock
jb
jmp
pop
inc
mov
popa
mov
out
hlt
pop
test
loopne
fiaddl
repnz
mov
into
inc
add
arpl
ja
lret
fbld
jmp
xorb
adc
imul
insb
gs
jns
xchg
scas
or
pop
adc
outsl
fldlg2
in
clc
movl
inc
jp
add
inc
frstor
faddl
mov
fadd
adc
ja
mov
les
add
mov
and
add
cmpb
in
imul
mov
out
getsec
ret
test
and
add
fildl
insb
jne
decb
cmp
xor
lods
adc
ss
popa
andl
aas
out
imul
enter
pop
xchg
pop
add
fwait
add
and
js
aam
dec
mov
cwtl
adc
mov
ror
in
jmp
cmp
stc
sbbb
mov
rorb
add
sub
cmpsb
pop
jns
fdivs
add
push
jmp
push
cmpsb
or
pop
push
push
insl
jle
popa
mov
inc
ds
dec
jae
inc
nop
std
push
and
xchg
stc
dec
add
std
and
and
stc
cs
sub
out
fildll
in
loop
idivl
icebp
jp
cld
cmpsb
iret
pop
lahf
pop
mov
aas
mov
push
xchg
ss
add
mov
les
loopne
in
stc
push
icebp
sub
cmpl
repnz
xchg
mov
mov
mov
push
push
xor
cmp
and
pop
movsl
inc
arpl
push
mov
gs
inc
into
xchg
gs
pushl
pushf
fcompl
jmp
sbb
lret
jbe
push
cmp
push
sbb
push
push
shrb
lret
rcrl
cmp
mov
mov
cmp
and
sub
fdivrp
mov
pusha
xchg
in
mov
out
ret
sub
test
cmp
jmp
push
das
arpl
xor
addl
outsb
and
dec
out
xchg
xchg
add
add
jo
cmp
popa
pop
mov
sbb
fwait
jo
cmpb
sbb
inc
xor
sahf
lret
aad
icebp
lret
fs
rcrb
out
lock
and
sub
mov
out
fs
lock
neg
test
idivl
or
inc
add
sub
sub
pop
push
test
and
adc
enter
dec
jp
das
mov
cltd
mov
xchg
pop
adc
cmp
scas
aaa
addr16
or
insb
insl
rcll
or
ljmp
popa
dec
stos
cld
cli
mov
testb
pop
cli
push
jp
ja
add
addr16
pusha
mov
push
cmp
sbbb
push
xor
out
sub
push
push
ljmp
call
xor
mov
jmp
lock
add
out
pop
cmp
cmp
gs
and
push
repz
das
inc
psubusb
sti
pop
in
mov
idivl
jecxz
lret
jns
aaa
pop
sub
aam
out
test
or
jns
pop
stos
mov
test
ja
daa
loop
dec
fs
xchg
icebp
rcll
pusha
ljmp
cmc
jns
imul
mov
std
add
test
adc
inc
push
sub
dec
das
shlb
or
cmp
aad
outsl
adc
subl
mov
and
movl
sub
out
push
in
in
mov
pop
or
stos
push
icebp
repnz
dec
inc
cmp
lds
inc
les
adc
and
mov
inc
pop
sub
and
sbb
sbb
insl
cwtl
inc
inc
movsb
xor
enter
add
mov
popf
icebp
in
push
insl
jp
pop
movsb
mov
pop
iret
sbb
mov
xchg
pop
or
in
std
into
sbb
jno
or
and
cld
pop
in
jne
or
push
add
test
pop
mov
xchg
dec
push
xor
daa
imulb
lea
ss
dec
xor
daa
adc
xchg
mov
lret
scas
rclb
xor
out
out
pop
loope
imul
pop
cli
in
loopne
inc
mov
cli
int
jo
sbb
clc
or
je
addb
daa
out
or
sub
cmpl
aaa
cmpsb
dec
mov
or
xor
push
iret
cmp
cmpsb
xor
cli
sahf
fwait
or
cmp
stc
repnz
or
and
pop
inc
cwtl
cmp
ret
xchg
pusha
out
jno
sbb
js
jne,pn
imul
adc
xlat
ficompl
xchg
sub
lods
push
jae
neg
sbbl
movsl
mov
loop
push
sbb
test
inc
jae
pop
lods
rorl
lcall
lahf
sbb
stos
cmp
aam
dec
scas
add
test
push
sub
fnsave
lock
pop
nop
cs
cli
rclb
arpl
mov
arpl
pop
or
leave
xor
ljmp
andb
xor
push
xlat
ss
dec
testb
inc
lahf
mov
fadds
mov
ja
aad
and
mov
push
mov
xchg
in
popa
fmulp
cmc
add
ja
push
cmpsl
ror
aaa
stos
mov
adc
jl
jb
addb
test
insb
and
xor
andl
dec
xchg
das
jmp
xor
pop
mov
xor
push
imul
dec
dec
push
aas
xchg
rclb
sub
dec
mov
mov
stc
and
push
mov
jb
mov
push
mov
icebp
int
movsb
mov
jnp
or
push
push
insb
pop
lods
cmp
and
fistl
pop
outsl
popa
sub
push
jb
jmp
sbb
jbe
jle
xorl
push
scas
sub
ficomps
mov
cmp
scas
ss
test
pop
sub
clc
push
sbb
cmp
push
push
cmpsl
add
mov
fdiv
jmp
jno
shll
fcmovb
pop
into
test
jmp
lcall
jmp
daa
mov
sti
fdivrs
popf
dec
shrb
inc
hlt
xchg
adc
loopne
xor
jp
or
bound
std
leave
mov
push
filds
cmp
mov
mov
dec
loop
adc
cs
loop
lea
rolb
inc
movsl
push
rol
pop
rclb
mov
add
dec
adc
pop
pop
repz
fwait
popf
jae
enter
lods
xor
sub
and
mov
mov
adc
movb
es
mov
divl
mov
or
dec
arpl
cmp
sub
or
inc
jnp
ljmp
pop
dec
cmc
and
mov
int
mul
bsr
xchg
stc
mov
inc
jmp
push
xor
mov
jge
push
pop
pop
mov
jnp
xor
cmpsl
cmp
sub
push
dec
movl
je
imul
xor
or
cli
outsl
in
cli
cld
pop
ds
rclb
jne
ret
pop
incb
cmpsb
lea
push
in
outsl
push
lods
mov
sub
add
call
int3
or
inc
xor
aam
ljmp
loope
lret
or
or
sub
rorl
aas
or
loop
fcompl
mov
xchg
fildll
movsb
in
push
mull
ja
xchg
int
mov
sub
movsl
js
dec
mov
dec
or
push
pop
movsb
jp
loope
int
dec
cmp
test
mov
and
jge
and
dec
test
push
leave
add
push
mov
test
inc
je
in
test
xor
fsubrs
int3
fcomps
mov
icebp
aaa
pop
loope
sbb
mov
lds
iret
je
test
fadds
pop
xor
push
fs
mov
cmp
dec
stc
adc
cs
xor
jg
sbb
pop
or
inc
pop
xchg
sub
xor
rolb
gs
add
or
jae
jg
and
ja
jns
push
mov
cmpsl
cmp
add
sbb
je
jbe
cmc
test
out
cmp
jle
fcmove
data16
test
stc
jno
sarl
mov
inc
or
dec
rorb
sub
imul
cmpsb
mov
push
gs
dec
jle
sbbb
jae
jle
mov
daa
cltd
out
sbb
pop
ljmp
inc
lahf
mov
cmp
cwtl
mov
lret
and
incb
out
out
pop
and
out
sbb
mov
mov
in
imul
or
shlb
std
out
arpl
std
mov
and
lret
dec
xchg
lods
lock
movsl
or
enter
mov
in
pop
pop
scas
mov
aaa
cmp
pop
xor
pop
jns
add
or
jl
xchg
notl
repnz
mov
push
adc
dec
frstor
imul
add
mov
daa
insl
add
mov
test
dec
jno
pop
sbb
xor
add
dec
add
pushf
xlat
les
or
fbld
push
push
fwait
jp
cld
or
pushf
loop
xchg
rcrb
sbb
into
cmpsl
mov
mov
rclb
mov
sub
mov
dec
ja
xchg
mov
and
clc
maxps
jge
decl
inc
jnp
jnp
fcmove
cltd
sub
aas
jp
popf
std
test
pop
cmp
imul
lods
xor
popf
je
add
imul
inc
sub
subb
pop
int
push
js
push
shl
daa
hlt
ret
push
fidivrs
jge
pop
andl
mov
sub
cmpsb
lods
mov
add
stos
xchg
out
scas
or
sahf
cld
fs
mov
aas
pop
push
xchg
idivl
mov
pop
cmp
xchg
insl
sub
fldt
xor
rorl
mov
iret
mov
int3
or
adc
and
in
shl
daa
pop
movsb
pop
inc
ljmp
mov
adcl
cld
push
lcall
sbb
jo
test
adc
adc
jl
and
enter
dec
pop
pop
loop
aad
cmp
push
lahf
push
push
jb
lret
add
push
dec
nop
jp
jae
push
pop
je
test
push
xchg
mov
mov
int3
add
mov
pusha
sub
jmp
fsts
mov
stos
push
sub
push
push
shrb
je
ja
sbb
cmp
or
pop
gs
inc
push
in
or
test
jmp
mov
dec
adc
push
inc
or
jle
fisubrs
xchg
lahf
pop
int3
sbb
inc
gs
inc
sti
or
mov
insb
fisubrl
sbb
mov
add
hlt
sti
in
mov
scas
pop
ret
std
inc
xlat
sub
mov
pop
cs
xchg
clc
pop
xchg
push
mov
dec
insb
nop
or
jae
push
pop
inc
dec
insb
push
or
and
sub
test
insb
mov
xchg
jo
push
mov
xor
pushf
mov
aas
dec
icebp
xchg
std
lea
sub
sub
sbb
sub
stc
xlat
pop
mov
cmp
pop
push
pop
xor
inc
mov
fnstsw
das
popa
dec
xor
call
and
sbb
sub
sub
pop
mov
in
cmpsl
mov
xchg
pop
mov
ret
sub
loopne
push
sti
pop
daa
add
mov
stc
aaa
cli
repz
jnp
es
imul
repz
loop
cmp
std
icebp
and
sub
xor
jnp
jbe
sahf
stc
xchg
iret
pop
test
loope,pt
loopne
scas
ss
xchg
loopne
push
out
pop
pop
fwait
ret
cmpl
dec
mov
sub
or
pop
shr
xchg
cmp
xorl
scas
js
ret
sbb
xchg
mov
sbb
bnd
in
adc
dec
mov
xor
add
push
pop
cmp
push
mov
shl
jbe
loopne
jle
or
pushf
push
xchg
int
inc
fstps
adc
ss
pusha
jns
or
lds
add
push
scas
mov
das
enter
dec
and
lahf
fcoms
sub
xchg
xchg
and
mov
sbb
jno
mov
loope
ja
lea
adc
ret
mov
sbb
cs
les
mov
xchg
or
xchg
movsl
pop
cmpsl
lods
xchg
lret
jp
mov
notb
movsb
cmp
fmull
xchg
icebp
pop
adc
fsubrs
sub
push
loopne
arpl
subl
push
add
pop
mov
outsb
jo
pusha
orb
addl
jb
jne
pop
inc
outsl
push
xchg
push
test
lcall
mov
testl
dec
icebp
in
push
xchg
nop
cltd
jo
call
mull
and
incl
hlt
push
push
sti
jmp
fdivl
xchg
aaa
int
ret
bound
add
outsl
sbb
shlb
lds
sahf
jmp
dec
leave
leave
imul
movsl
cld
movl
dec
movsl
mov
mov
out
mov
test
iret
cwtl
mov
lret
and
push
mov
xchg
lret
jns
fsubs
jb
mov
cmpsl
frstor
outsb
add
or
cmp
lds
insl
cmc
bound
ljmp
xchg
xor
add
push
lret
push
mov
jecxz
aad
nop
mov
rorb
sbb
mov
jae
push
rcll
sbb
iret
jecxz
test
jae
mov
xor
push
test
jmp
push
bound
ds
ljmp
movsl
sbb
and
or
inc
leave
shll
mov
jle
push
test
lock
mov
sbb
loope
mov
lret
imul
out
sti
inc
aaa
cmp
lcall
fcompl
repnz
aad
mov
mov
jp
jne
mov
les
loop
fisubs
jmp
rorl
sbb
fwait
sbb
loopne
or
push
incl
shrl
test
push
insb
sub
enter
push
negw
mov
loope
sbb
push
lcall
cmp
or
popf
lcall
mov
bound
filds
movsb
fnsave
clc
push
sbb
insb
insl
loopne
mov
in
pop
loopne
leave
and
xchg
and
notb
daa
dec
add
xchg
pop
sub
jmp
sti
aad
imul
pusha
imul
scas
mul
sbb
sbb
mov
sub
aas
push
enter
bound
nop
pop
mov
cmp
std
test
rcrl
aad
mov
rep
pop
and
mov
lahf
out
scas
mov
and
sub
das
sti
xchg
loop
mov
ret
jo
jg
inc
xor
mov
sbb
lret
and
lcall
movsb
xor
pusha
inc
jo
stc
iret
adc
mov
fidivrs
loopne
pop
xchg
fwait
add
clc
in
pop
divl
pop
jle
daa
inc
sbb
adc
cli
mov
test
pushf
mov
test
adc
add
mov
push
js
mov
inc
mov
das
dec
lods
lds
fwait
pop
fisttpll
jle
dec
adc
xchg
cmc
xor
inc
lcall
mov
add
scas
movsl
and
cmp
filds
sbb
add
dec
jl
add
fsub
pop
push
stos
nop
ss
jl
or
mov
lds
and
dec
scas
jno
data16
xor
inc
enter
dec
in
inc
mov
cmp
cmpb
or
cmpsl
sbb
xchg
jge
lret
xchg
loope
dec
pop
mov
cmpsl
hlt
loop
push
or
dec
loop
pop
push
push
mov
mov
push
nop
filds
fsubs
call
cmp
loop
test
ss
int3
xchg
cmp
dec
fsubl
sub
jb
fsubrl
jno
jmp
pushl
repnz
int
jns
addr16
int3
dec
adc
push
mov
lods
push
jnp
mov
ss
push
adc
jnp
inc
and
loopne
insl
sahf
mov
add
pop
insb
xchg
in
cltd
cmp
cmc
int3
xorb
mov
mov
add
inc
in
daa
cmp
push
cmp
ds
xchg
or
or
sub
out
or
inc
push
cmpsl
add
out
fs
ret
imul
sub
jp
aam
mov
test
ret
mov
add
push
stos
das
sbb
inc
sbb
mov
dec
sbb
mov
in
jecxz
imul
push
ljmp
inc
stos
mov
xchg
cmpsb
bound
pushw
shr
inc
iret
ds
pop
out
imull
pop
pushf
fdivrs
movsb
add
sti
std
xor
ffree
pop
sbbl
mov
repz
dec
mov
jns
lods
loop
inc
popf
jno
cwtl
bnd
leave
push
xchg
adc
mov
inc
xor
mov
call
and
xlat
adcl
ret
mov
mov
pop
xor
aad
jg
cmp
sub
pop
movsb
pop
ret
cs
fucomp
mov
add
mov
dec
mov
xor
fucomip
adcb
scas
inc
test
fistl
repnz
jne
inc
add
adcb
push
add
lcall
sub
xor
mov
cmp
sbb
rorl
andb
loope
mov
pmaxsw
cltd
pushf
inc
jno
cmpsw
add
mov
fsubrs
xor
fnstenv
mov
jecxz
pop
cmp
mov
and
cmp
pop
outsl
scas
xor
aaa
divl
dec
fs
adc
xor
ret
mov
dec
aad
ja
add
aam
mov
idivb
jnp
decb
js
mov
sti
and
sbb
outsl
dec
cmp
out
imul
pop
testb
jbe
scas
lcall
test
pop
sarl
sbb
movsb
adc
dec
and
mov
leave
push
out
ss
dec
jecxz
ror
pop
rcr
sbb
jnp
mov
das
fistpll
jp
jg
adc
push
daa
in
movsb
mov
dec
cmc
enter
sbb
sub
dec
popa
xor
test
inc
dec
repz
pop
testl
outsl
js
loopne
out
scas
fiaddl
iret
lahf
loope
jecxz
fnsave
or
sub
test
add
sahf
sub
mov
sbb
xchg
into
aas
dec
sbb
cwtl
pop
sub
and
mov
stos
jns
mov
xchg
into
add
fildll
jmp
imul
mov
jne
or
lret
xchg
mov
leave
subb
into
jl
cmp
aam
and
dec
adc
dec
dec
xchg
push
or
movsl
int
jmp
pop
push
or
out
inc
dec
cmp
sub
test
pop
mov
push
les
fnstenv
xchg
push
in
mov
inc
mov
push
add
adc
fldenv
xor
add
out
sti
lods
add
xchg
pushf
in
adc
adc
rclb
inc
pop
nop
icebp
pop
xchg
fmull
lods
dec
dec
fstpt
sub
add
cwtl
xor
mov
and
inc
pop
gs
cmpsl
lods
mov
push
jle
clc
add
adc
or
in
cmc
insl
xor
add
shl
pop
aaa
ret
xor
xor
sub
xchg
xlat
in
mov
jb
mov
push
data16
shl
cmp
insb
test
and
sbb
scas
mov
jns
xchg
add
jo
pushf
aaa
jns
stc
iret
push
push
test
mov
mov
inc
push
jecxz
and
ljmp
jg
in
sub
mov
jbe
test
xlat
fmull
ljmp
xchg
push
push
sub
lret
fists
jns
dec
mov
sbb
nop
dec
xchg
cltd
je
or
imul
adc
jp
bound
out
movsb
mov
popl
outsl
sar
or
or
xchg
pop
loopne
jno
push
faddl
movsb
and
shll
xchg
push
insl
push
ja
call
cwtl
cmp
mov
jne
or
lret
iret
call
in
inc
les
lods
push
lahf
mov
cmc
cmp
call
insb
cli
sbb
mov
stc
cmp
test
cli
lods
and
icebp
mov
orb
sub
jne
pop
stos
aad
jne
out
inc
loope
add
ss
incl
dec
ds
jl
xchg
inc
mov
or
cmp
aaa
dec
mov
pop
jp
stos
jno
pop
pop
cmp
and
lods
test
outsl
push
mov
push
jle
dec
or
add
xchg
xchg
fisubl
push
xor
outsb
adcl
pop
lret
test
mov
addr16
push
testl
popf
gs
or
repnz
inc
fwait
sub
cmp
add
xchg
sbb
mov
mov
cs
cmp
and
sahf
pop
mov
mov
lds
pop
pop
mov
add
out
or
outsl
nop
and
jp
leave
sarl
jo
lcall
lock
jns
imul
inc
orl
lods
add
cmp
push
js
aad
test
push
push
icebp
testb
pop
cmp
cwtl
xchg
das
pop
pop
push
dec
aad
sbb
xchg
pop
lods
dec
cmp
mov
ljmp
pop
or
cmpsb
cmp
jbe
out
sbb
sbb
lods
xor
cmp
cmp
mov
jg
mov
rolb
mov
mov
xchg
lods
mov
add
mov
aam
into
sub
out
push
xor
test
lods
out
dec
roll
loop
pop
push
cmp
sbb
mov
dec
add
hlt
inc
or
ja
in
jne
sbb
push
mov
push
sti
dec
adc
adc
stc
sub
xchg
arpl
int
mov
orb
jle
shld
adc
test
ret
add
mulb
xchg
xchg
xchg
imul
fsts
addr16
out
mov
fadd
stc
outsb
movb
dec
pop
ljmp
mov
jb
fwait
and
addr16
arpl
jle
xor
mov
jb
or
dec
stos
into
and
or
pop
jnp
pusha
push
add
sbb
dec
out
loope
xchg
cmp
scas
daa
in
sbbb
out
lret
hlt
jno
dec
lock
out
sub
mov
sub
bound
mov
lret
fdivp
int3
sub
stos
add
mov
or
das
add
push
jge
rorl
fdivrs
rorb
shll
mov
js
cmc
inc
push
inc
dec
jge
sub
sub
stc
popa
jnp
test
fsubrl
xchg
clc
and
fisttpl
leave
adc
sub
fnstcw
xor
dec
ss
jle
outsl
bound
add
lret
cmp
push
mov
mov
push
test
xchg
fcomp
pushl
xchg
int3
mov
add
test
sbb
lcall
inc
pop
xchg
icebp
dec
mov
fldcw
sbb
jae
jne
cmc
popa
jno
pop
adc
lcall
aad
lods
pop
xchg
dec
lret
add
sbb
icebp
sarb
notl
dec
jl
jno
sub
sub
jns
bound
and
mov
stos
scas
das
in
lcall
addl
jl
dec
sti
mov
test
push
mov
mov
xor
imul
out
pop
je
mov
out
push
push
xchg
ret
scas
scas
or
xchg
ss
flds
and
sub
cmp
in
ljmpw
dec
in
jnp
push
mov
cltd
inc
mov
fs
cmc
mov
adc
mov
mov
or
push
xchg
test
sub
into
adc
pop
insb
dec
sbb
dec
pushl
cli
mov
lods
std
loopne
outsb
clc
jmp
fcmovb
jmp
xchg
push
fcmovb
inc
in
inc
cmp
add
scas
outsb
cmp
lds
inc
js
add
or
push
adc
int
gs
sub
mov
int
fstl
jp
mov
cwtl
shll
pop
jno
test
xchg
ja
cwtl
fs
add
jno
outsb
jb
jecxz
scas
push
js
push
mov
mov
scas
cmc
int3
and
jmp
or
xlat
cld
pop
lret
icebp
bound
mov
in
aad
lods
or
es
jb
mov
add
lods
jne
xor
test
jl
xchg
lds
inc
inc
mulb
je
inc
pop
lods
jle
mov
adc
mov
sbb
adc
jmp
out
cmp
fs
mov
hlt
je
mov
lcall
push
xor
pop
loopne
mov
test
les
add
inc
and
lods
insb
inc
hlt
sbb
add
je
outsl
adc
fmuls
outsb
dec
outsl
jle
dec
int3
push
repz
test
stos
daa
fsts
or
jp
mov
out
aad
and
fs
jge
xor
fadds
mov
add
adc
in
lret
and
dec
sub
sahf
lret
cmp
adc
pop
movsl
stos
aaa
mov
and
ror
ret
in
push
inc
daa
cmp
das
push
dec
cmpsb
test
add
jns
scas
mov
in
repz
mov
mov
jecxz
enter
sbb
xlat
fdivs
clc
in
pop
jno
insb
dec
scas
add
inc
sub
sub
xchg
call
je
mov
adc
test
ds
aas
fcomip
xor
mov
gs
xchg
scas
andb
push
xor
es
or
add
lea
sub
imul
cltd
ret
dec
fidivrs
xchg
inc
add
in
fsubl
sbb
mov
insl
mov
xor
clc
pop
mov
fidivs
inc
pop
push
cmc
xchg
pop
mov
or
pop
int3
test
add
dec
pop
xchg
incl
in
pop
insb
jl
stc
add
xchg
jge
add
pop
out
adc
adc
mov
arpl
ljmp
popa
cmpsl
sub
test
jmp
les
les
sub
andl
iret
xchg
shlb
push
push
mov
push
xor
adc
pushl
lock
icebp
sbb
adc
add
dec
fistpll
ffreep
pop
xchg
and
sbb
enter
mov
or
popa
in
andl
and
pop
enter
addr16
sbb
push
jge
cmp
lods
adc
sub
cmp
lea
pop
test
adc
pop
sub
test
xlat
mov
push
and
push
xchg
adc
int
pop
or
push
jl
subl
inc
mov
mov
xchg
inc
icebp
xchg
pop
and
addb
mov
cs
fiaddl
mov
adc
and
add
sub
nop
mov
sarb
iret
or
rcrl
orl
xor
jmp
bound
ret
or
mov
inc
pop
sub
cmc
fists
mov
sub
out
mov
jbe
mov
mov
dec
adc
scas
movsl
scas
inc
xor
jb
pop
lock
ret
push
aaa
fs
push
sti
in
movsl
xchg
lods
lods
sbb
mov
mov
pop
or
ljmp
adcl
flds
dec
nop
nop
out
dec
notb
xor
pop
sub
sbb
pop
mov
mov
pop
add
sub
out
add
inc
flds
lods
mov
hlt
jp
add
mov
or
adc
pop
pop
loop
jg
push
outsl
cmpsb
mov
aaa
cli
fldt
es
push
loop
pop
fstps
add
stos
sbb
test
cmp
sbb
sahf
sub
repnz
pop
in
adc
repz
test
push
lods
out
test
push
pop
jmp
sbb
or
ficoms
icebp
and
loop
push
pushf
std
imul
and
mov
bound
test
add
push
mov
sbb
and
xchg
movsb
mov
repnz
and
movsl
add
popf
xchg
cltd
lahf
sub
inc
sahf
out
mov
fnsave
inc
aam
insl
jnp
data16
and
aad
std
mov
test
mov
inc
adc
cmp
add
rcrb
inc
mov
fimuls
or
decl
and
pop
mov
adc
aad
adc
cwtl
or
in
out
xor
sub
push
cmp
outsb
jne
mov
jp
jp
popf
cwtl
mov
push
sbb
sub
and
inc
jb
out
dec
mov
xchg
lds
scas
push
adc
push
mov
imul
les
adcb
mov
stc
jb
daa
loop
rcrb
in
add
push
or
xlat
mov
popa
mov
pop
or
mov
adc
push
cmp
dec
cmc
lahf
sarl
orb
mov
jp
mov
xchg
jne
sub
inc
lock
cld
je
ljmp
xchg
loope
mov
leave
dec
in
dec
and
jmp
add
data16
inc
arpl
outsl
hlt
sub
pop
cltd
xchg
es
test
or
outsl
addr16
test
cmpsb
cwtl
in
insb
and
cmp
push
add
fimuls
xor
aad
aas
jo
fsts
out
fld
add
push
test
or
stc
xlat
arpl
mov
test
push
push
pop
and
aad
inc
sub
sar
pop
scas
cmpsb
xchg
pop
add
jmp
rcr
push
jecxz
pop
sub
cli
or
mov
pop
sub
lea
std
mov
or
icebp
inc
stos
loop
inc
xchg
sub
sub
and
adc
or
cmp
fcompl
lds
shrb
test
adcl
sub
mov
and
stc
mov
je
jp
xchg
push
xor
leave
pop
sbb
adc
lods
inc
aam
std
jg
loop
cmp
pop
aam
sbb
xchg
mov
xor
in
hlt
jmp
cmp
mov
mov
push
push
xor
jmp
popa
jl
mov
mov
ret
outsb
outsb
dec
cmp
jb
pop
push
popa
jne
jnp
jnp
sbb
jge
mov
inc
dec
lods
sbb
popf
dec
leave
sbb
shlb
mov
mov
das
push
cmp
cli
dec
add
out
jo
ffreep
movsb
repnz
dec
hlt
mov
lret
cmc
mov
pop
rclb
paddsw
fdivrl
sti
push
outsb
out
push
push
cwtl
xor
xor
loopne
inc
outsl
arpl
call
cmpsb
lods
adc
xchg
lock
jg
mov
out
jle
sbb
hlt
test
mov
fcmove
or
int
jnp
inc
xchg
or
je
sti
sbb
aaa
sti
xor
aad
dec
jecxz
stos
jmp
dec
dec
ljmp
scas
add
repz
faddl
lock
out
mov
fdivrp
xor
filds
sub
negb
add
les
lea
sub
cmpsb
leave
arpl
rol
xchg
xchg
sti
mov
sbb
sbb
dec
es
xchg
push
fsubrp
repz
lock
inc
scas
bound
mov
xchg
xor
and
xchg
imul
mov
xchg
lahf
pop
xchg
inc
push
push
addb
lods
sahf
xor
jnp
shlb
ss
mov
xor
and
push
xchg
lret
add
movsl
and
or
sbb
lock
stos
sbb
jge
jb
sahf
cmc
sub
sub
sub
or
sub
iret
lock
out
loop
dec
in
mov
mov
mov
fimull
arpl
shll
pop
jmp
sbb
aad
dec
insl
sbb
pop
clc
mov
push
dec
mov
inc
cmpsl
adc
ret
icebp
in
je
xor
push
add
jmp
xor
scas
in
jno
push
mov
fiadds
scas
push
mov
and
xchg
cmp
lret
fidivrl
jnp
cmpl
fistpl
lcall
inc
sbb
scas
jg
pop
test
aad
and
addb
xor
xor
jmp
mov
enter
addr16
into
jne
lods
sbb
rorb
sbb
xchg
popf
pop
or
cmpsl
pop
and
jne
xorb
insb
or
test
push
mov
imul
cmp
cwtl
inc
pop
xor
lods
mov
cmp
aam
or
rcr
and
add
push
mov
sub
icebp
out
lret
dec
mov
les
xchg
insb
xchg
dec
outsl
addb
mov
adc
push
out
inc
mov
cli
sbb
cld
clc
test
dec
dec
in
jno
jg
add
lcall
jmp
jbe
hlt
mov
frstor
push
lock
je
inc
sbb
rclb
aaa
outsl
pop
mul
fldl
inc
dec
pop
pop
push
xor
out
subb
sahf
popf
aaa
jle
les
xchg
negb
aam
cld
test
shrl
mov
int3
jmp
in
sbb
dec
cmpsl
jmp
jp
ret
enter
pop
inc
pusha
fstl
xor
sbbb
jbe
fstpl
mov
or
push
insl
jle
lcall
xor
adc
xorl
mov
cld
int
jle
ret
fldenv
mov
jo
push
inc
int3
mov
insb
shlb
xor
mov
push
mov
mov
daa
stos
sti
out
sub
out
mov
push
repz
out
sub
rdmsr
jge
in
cmp
repnz
pushf
jae
les
cmp
or
popf
sahf
xlat
pop
pop
mov
jmp
and
mov
stos
mov
clc
mov
lea
pop
mov
mov
lahf
imul
mov
mov
ja
cmp
notl
sahf
movsb
andb
cltd
out
mov
outsl
mov
scas
pop
nop
mov
imul
or
je
mov
fs
mov
mov
cmp
xor
xor
mov
in
and
xor
fidivl
xor
test
mov
push
lods
stos
and
outsb
cmc
sarl
in
leave
sbb
xor
jb
lret
xchg
shll
pop
jp
cmc
pop
fidivl
mov
cmpsl
cltd
adc
daa
popa
and
xchg
mov
mov
and
push
cmp
mov
jo
lods
pusha
dec
std
rcr
push
ljmp
dec
jae,pt
push
jo
sbb
adc
cmp
fldl
mov
das
call
jo
ja
push
lods
push
xchg
mov
sub
mov
ret
pop
and
out
pop
or
fs
repz
inc
dec
jecxz
and
adc
test
push
imul
ss
test
pop
daa
mov
out
bound
push
xor
hlt
pop
aam
sbb
repz
aas
push
sub
jnp
or
or
pop
add
stc
push
lret
push
jge
jmp
rcl
pop
fildl
and
mov
lcall
sub
test
test
cmp
cld
imul
lds
lods
lock
or
xor
and
mov
sbb
aam
xor
inc
and
add
mov
xchg
xor
mov
enter
push
lods
dec
data16
and
test
out
jb
pop
xchg
cwtl
jl
loope
adc
jbe
outsb
pop
fdivrp
mov
mov
mov
mov
std
shrl
jmp
ficompl
pop
or
mov
sub
sub
add
and
or
sahf
mov
lods
jns
sbb
sub
cli
pop
add
jl
lds
loope
iret
enter
lahf
xchg
cmc
and
dec
pop
sbb
stos
mov
or
cmp
add
out
push
lods
adc
bound
dec
pop
lret
sub
lahf
fsin
ret
add
cmpsb
mov
mov
mov
adc
stos
mov
adc
fstpt
dec
movsb
fdivp
mov
jo
into
jnp
lret
xchg
inc
inc
cld
stc
dec
dec
gs
pop
sbbl
dec
adc
xchg
jne
inc
daa
fs
cs
sub
subb
js
sbb
jb
xlat
pop
sbb
pop
inc
lret
cmpsb
sub
pop
or
mov
ljmp
jo
gs
jl
lock
cmp
push
sti
dec
aad
sahf
rclb
stos
jge
push
and
lret
cli
push
andl
repnz
stos
mov
xchg
int
imul
mov
pop
mov
lret
mov
jge
dec
jg
shlb
cmp
call
rcrb
push
dec
loopne
mov
push
lods
pop
imul
push
xchg
outsb
pusha
movsl
xchg
idivb
popf
outsl
lods
mov
pop
imul
jbe
std
mov
enter
jne
imul
mul
rcll
cmpsb
and
std
fs
xchg
pushl
pop
jo
jns
cmp
ret
ja
pop
in
lahf
pushl
pop
insl
inc
das
mov
jg
push
sti
cmc
mov
adc
imul
mov
or
push
and
popa
rcrl
xor
daa
lret
pushf
sub
push
jnp
arpl
data16
jp
or
out
pop
add
repz
sub
push
xor
aas
jmp
lods
or
cltd
mov
jo
shl
pop
or
xor
cmc
call
dec
sub
xchg
or
and
lahf
pop
repz
mov
mov
movsb
data16
xor
inc
push
pop
pop
jp
sub
pop
pop
mov
daa
mov
leave
lret
jno
fistpll
sub
push
cmp
inc
je
cmpsb
out
fnstcw
ret
sbb
arpl
cmp
jmp
cmp
lock
dec
sahf
mov
xor
sbb
xchg
jne
aad
xlat
aam
js
and
addr16
xor
testb
jae
sahf
mov
pop
pop
xchg
sahf
sub
icebp
fadds
pop
dec
jno
add
loope
imul
and
jecxz
loop
negb
in
int
push
pop
pop
cmc
ds
shl
outsl
adc
dec
aaa
fs
or
pop
aaa
mov
lds
xorl
stc
lock
loop,pt
jg
sahf
and
jbe
mov
loope
inc
cmc
in
ss
repz
mov
pushf
mov
mov
out
ret
pop
mov
sbbl
aaa
sub
aas
xchg
push
js
xor
xchg
adc
jp
xor
stc
int3
addb
xor
test
jo
xor
test
arpl
mov
adc
imul
inc
negl
ss
sub
jo
adc
xchg
cltd
insl
leave
jp
dec
push
arpl
ror
test
out
pop
push
dec
mov
or
jp
sbb
inc
jnp
int
push
mov
aas
cmc
xor
jae
inc
inc
cmpsl
fwait
cmpsl
pusha
add
out
push
push
xor
js
popf
push
popf
addr16
push
inc
push
xchg
mov
mov
fistpll
enter
cmp
pop
fs
ret
in
ja
jmp
addr16
into
into
pop
in
popf
push
lcall
mov
xchg
pop
dec
stos
add
xchg
cmp
pop
xchg
mov
in
out
pop
dec
pop
addr16
mov
std
add
jp
lret
or
pop
fstps
stc
push
add
xor
loop
cmp
xchg
test
jae
sbb
mov
dec
mov
xchg
mov
ss
adc
push
jg
fld
movsl
xchg
xchg
in
push
fldt
pop
xadd
or
addr16
lds
mov
cltd
sahf
pop
addr16
add
imul
insb
or
mov
es
mov
sarl
arpl
mov
and
sub
add
gs
test
cld
fildl
push
push
das
jne
leave
mov
fidivs
cmc
sbbl
xchg
nop
jl
lods
stos
hlt
sbb
dec
bound
repz
dec
push
adc
xchg
ds
add
jmp
rorb
aas
push
enter
inc
aas
jbe
idiv
les
inc
pop
dec
add
flds
cltd
aas
not
scas
or
sub
push
icebp
mov
mov
pop
aad
rcll
dec
adc
fdivs
cmpsb
xor
pushf
int3
stos
jecxz
andl
or
cmp
and
pop
adc
sub
sbb
shlb
adc
iret
leave
pop
int
out
pop
loopne
cmp
cli
test
adc
dec
into
lock
xchg
mov
fwait
out
jge
dec
inc
and
outsl
mov
aad
cwtl
out
shlb
jb
lock
jge
sub
and
icebp
or
loop
pop
mov
pop
imul
test
cmpsl
mov
inc
jns
jbe
loopne
test
insl
inc
movl
leave
testl
mov
std
add
xchg
iret
dec
cmp
add
data16
fucom
sbb
jae
fnstcw
mov
out
sbb
xor
pop
loop
cltd
and
fdivl
cli
lret
mov
adc
roll
mov
jno
xchg
mov
mov
xor
sbb
lret
pop
mov
cmpsb
fadds
sbb
in
pop
jae
pop
incl
mov
test
and
lea
pop
int
das
push
js
psubd
shll
mov
mov
dec
inc
mov
cmp
mov
adc
bound
or
mov
mov
inc
cmp
mov
sub
cmp
aaa
and
add
adc
hlt
rcl
jg
rcr
rcll
dec
mov
sbb
xchg
xchg
mull
add
xchg
and
insb
push
repnz
into
iret
push
cltd
into
xchg
and
pop
jecxz
adc
inc
add
dec
test
xor
int3
inc
mov
push
push
clc
cmp
lds
rcll
out
mov
sub
in
movsb
mov
sbb
push
dec
jge
cld
int
xor
les
mov
pop
jns
sub
cmpsb
int
inc
pop
sbb
cmp
add
popa
lret
call
pop
sub
and
jno
fistps
mov
rclb
mov
std
fidivl
and
xor
and
or
or
rolb
or
add
inc
mov
js
fcom
enter
mov
loop
pop
pop
mov
pop
dec
pop
push
xchg
or
rcl
aaa
addr16
popf
in
dec
cmp
leave
in
mov
stos
push
mov
lahf
into
lds
jnp
call
sub
cmpsb
jnp
dec
ljmp
and
bound
dec
repnz
popa
dec
xchg
add
dec
pop
sahf
jns
add
xchg
out
lock
arpl
pop
stos
enter
out
sub
jmp
mov
inc
ljmp
test
pop
mov
das
out
mov
std
fnsave
int
jae
mov
icebp
push
mov
xorb
jbe
outsl
shrl
jmp
js
loope
inc
sti
sbb
fwait
mov
add
ljmp
fisttpl
out
fldl
push
mov
jae
jg
or
inc
lods
pop
addr16
push
fmul
in
sbb
es
adc
cmp
ret
push
pop
test
cli
sbb
andl
int
cmpsl
mov
jp
jg
in
fiaddl
in
or
push
jge
cmpsl
or
pop
jno
lcall
sub
mov
fmull
add
outsb
aaa
rolb
in
shll
les
mov
test
pop
gs
mov
sti
lods
dec
in
jecxz
add
dec
loope
iret
es
decl
stos
addl
pop
or
dec
arpl
mov
fbld
iret
ret
rcl
test
addr16
xchg
lret
mov
and
aaa
cmp
adc
sub
sbb
fidivl
xor
xchg
pop
cs
xor
testb
adc
push
cltd
cmp
aad
sub
test
inc
jns
sbb
add
adcb
mov
mov
adc
xchg
cmp
dec
add
lcall
mov
adc
lret
add
dec
mov
sub
push
rorl
sub
jnp
nop
rclb
jbe
shll
scas
imul
inc
push
mov
adc
or
daa
imulb
push
jnp
fs
mov
in
rclb
push
filds
fbstp
div
jne
mov
mov
jb
mov
lds
sbb
movb
inc
add
mov
pop
push
in
add
lock
xchg
xchg
mov
data16
and
xchg
loop
call
cmp
aad
arpl
mov
arpl
enter
pop
mov
dec
in
sbb
insb
xor
and
jl
dec
cmpsw
rcrl
insl
cmp
stos
adc
xchg
xor
test
cmp
xchg
ss
xchg
bound
push
adcb
sub
outsl
push
arpl
leave
test
fxch
out
sbb
arpl
addr16
mov
aad
insl
pop
jnp
xor
inc
test
push
push
cmpsb
bound
lods
leave
mov
jb
cld
sahf
inc
lock
inc
or
adc
or
paddusb
out
add
hlt
push
mov
push
sti
call
adcb
in
clc
pop
and
mov
lods
les
lret
push
dec
leave
mov
adc
or
out
pop
push
imul
inc
popf
outsl
push
popf
mov
int3
xlat
xchg
nop
stos
lahf
xor
in
cmp
dec
lea
lea
push
pop
dec
rorl
xchg
sbb
lea
sub
cs
sbb
insb
mov
xchg
lea
mov
mov
nop
lods
mov
or
adcl
cmp
adc
mov
sub
rorl
loop
rorb
mov
aad
cwtl
xor
or
popf
cmpsb
push
jmp
outsl
test
mov
hlt
fs
cld
rclb
adc
xor
add
dec
lahf
in
in
js
aas
push
jmp
jp
insb
popf
pusha
outsb
cmp
popf
sub
lea
aas
or
in
sub
mov
fisubs
and
mov
les
jnp
imul
mov
xor
push
mov
data16
lcall
orl
add
push
arpl
sub
dec
js
cmp
sbb
jg
fdiv
gs
das
sub
in
cmp
lcall
mov
ss
adc
sbb
xchg
cs
adc
jecxz
out
cmc
mov
mov
sbbl
in
test
sarl
adc
jmp
sub
test
in
lods
aad
stos
xor
das
punpcklwd
mov
push
mov
mov
push
dec
mov
inc
arpl
dec
imul
fnstcw
cmp
fisubs
push
xchg
call
pop
or
int3
mov
movsl
ds
scas
sub
movsb
xchg
sarl
loop
add
cmp
movsb
mov
fdivs
xor
pop
cmp
ljmp
sbb
adc
pop
lea
enter
pop
push
sub
cmp
sub
aam
add
hlt
filds
mov
stos
sbb
nop
scas
clc
jmp
inc
jmp
push
adc
cmp
mov
pop
xor
dec
movsb
ja
push
dec
sar
shlb
fs
dec
mov
lahf
sub
add
and
and
lret
xor
and
xchg
fs
out
sbb
push
jl
push
cli
rclb
jmp
xchg
xor
mov
mov
inc
sbb
dec
sub
jbe
mov
mov
xchg
push
push
inc
aad
das
dec
in
pop
movsl
cmp
pop
jp
cmp
into
sbb
mov
leave
inc
hlt
cmp
loope
add
pop
fsubrp
cmp
or
pop
xchg
mov
loope
sbb
mov
push
sbb
data16
je
and
imul
sbb
add
lea
fsubrp
iret
ud0
xor
nop
aam
fldt
inc
sti
ja
mov
sbb
fsub
pop
xor
inc
js
repz
pop
aaa
fcomi
out
cmpsb
push
sub
cli
add
and
mov
insl
xor
sti
inc
test
and
mov
mov
push
push
in
xchg
inc
sub
daa
popa
xor
inc
adc
shrl
test
sub
rep
imul
jae
push
xchg
idivb
sarl
les
loop
ja
push
in
movsl
add
jp
pop
outsl
or
aaa
or
out
xor
add
sub
jno
int
leave
cmp
sub
mov
cmp
xchg
pop
dec
cltd
aam
push
flds
dec
inc
aad
fcoms
adc
mov
pop
jl
mov
arpl
inc
gs
dec
imull
xchg
push
iret
pop
pop
test
xchg
cmp
xchg
mov
push
sbb
fstps
pop
and
fiaddl
pop
cmp
inc
dec
pop
push
adc
orl
and
inc
or
dec
out
inc
stos
mov
imul
lds
jns
les
loopne
mov
into
repz
imul
fstpl
inc
insb
repnz
push
mov
bound
push
pop
sbb
fldl
lds
sub
adc
dec
ljmp
adc
mov
popa
mov
add
mov
pusha
add
out
sbb
insb
add
out
insl
test
xor
iret
jno
repz
jbe
mov
xor
push
lret
cmp
outsb
and
sub
sbb
push
aam
mov
dec
aam
cltd
lds
adc
das
mov
jae
mov
jp
test
movsl
in
or
push
ret
inc
repnz
in
out
out
mov
adc
cmpsl
int3
test
push
je
scas
rcl
jns
cs
jp
cmp
imull
mov
adc
pop
jae
ljmp
pushf
sub
call
inc
leave
dec
or
mov
lret
push
mov
test
jae
out
jne
outsl
das
cltd
cs
gs
sub
imul
fstpt
and
ljmp
pop
sahf
mov
xor
xchg
ret
jmp
mov
xchg
mov
std
or
shlb
pop
push
popa
mov
pusha
les
jge
lods
js
scas
sarb
dec
arpl
mov
mov
sarl
js
ss
repnz
inc
loope
test
adc
mov
pop
sbb
dec
stos
stos
xchg
fwait
leave
jbe
xchg
xchg
push
xchg
push
and
mov
stc
lea
scas
iret
jnp
fprem1
or
and
sub
pop
ja
cmp
cmc
cld
push
xorl
or
out
and
xor
aad
push
mov
mov
jo
jbe
stc
dec
xchg
insb
nop
pop
popf
push
cld
aad
dec
or
ret
cmp
cmpsl
adc
into
mov
cmp
push
jb
jb
pop
jb
xchg
dec
inc
adcb
lret
testl
xor
fcoml
popa
jns
xchg
adc
bound
xor
mull
add
movsl
fimull
mov
pusha
cmp
xchg
or
jnp
vpsadbw
jne
or
inc
or
dec
jge
and
and
dec
and
dec
orl
icebp
mov
dec
adc
lcall
and
push
mov
sbb
jnp
mull
mov
ljmp
sub
fldcw
fsubl
cmpsb
add
ds
out
das
out
test
push
ja
divl
ds
iret
pop
sub
loopne
dec
jnp
ds
add
aas
and
imul
std
movsl
lock
inc
xchg
hlt
aaa
icebp
adc
mov
pop
xchg
hlt
imul
mov
xchg
jnp
push
jp
fnstcw
je
dec
int3
pushl
mov
lea
nop
dec
jecxz,pn
push
mov
out
xor
int3
fwait
aam
jg
scas
addr16
movsl
dec
cmp
orb
pop
inc
dec
add
cmp
inc
sub
aam
add
add
mov
aas
push
dec
mov
fwait
xchg
xor
inc
fimull
insl
popf
hlt
mov
xchg
in
ss
imul
lcall
mov
dec
ja
dec
or
push
xchg
stos
mov
shll
adc
jecxz
das
lods
lea
inc
sahf
inc
int
add
nop
daa
jb
inc
mov
int
bound
je
cmpsb
test
xor
cmp
testb
sbb
sub
popa
les
xchg
fs
dec
xchg
movsb
loop
movsb
and
xor
stc
in
je
outsb
pop
cmc
fwait
push
cld
fmuls
repz
ffreep
fst
push
inc
jae
into
push
mov
clc
test
je
les
pop
ja
xchg
adc
and
jl
popf
mov
or
insl
jnp
lea
jg
mov
je
jno
fldt
cmp
adc
xlat
sub
cmp
ja
sub
ficompl
imul
or
xchg
dec
in
xor
push
push
rol
adc
jmp
sbb
inc
sub
xor
push
in
bound
push
mov
pop
out
aas
dec
mov
xor
rcl
hlt
test
mov
pop
mov
aas
jbe
add
or
sub
mov
mov
jnp
add
js
xchg
dec
jmp
fcompl
cmc
dec
das
push
xlat
movsl
push
xchg
rorl
stc
jg
inc
jae
mov
lahf
popf
rcrb
cmp
xor
pop
jnp
and
sti
xchg
inc
out
fst
sbb
cli
pop
loopne
pusha
dec
aam
data16
int3
cmp
mov
arpl
and
je
sbb
push
pop
mov
daa
xchg
push
and
or
pop
into
ds
enter
lods
cld
jg,pt
push
fwait
cmp
loop
in
punpckhbw
fnstcw
pop
hlt
out
bound
mov
dec
ret
push
xchg
cmpb
arpl
lods
call
jb
mov
mov
add
adc
outsl
aad
pusha
inc
cmpsl
and
call
mov
pop
ja
adc
cmpsb
ret
jno
pop
aam
lea
jmp
cs
add
cwtl
lods
mov
cld
xchg
outsb
xchg
jae
add
leave
test
in
shll
xchg
scas
add
stos
ficoms
cmp
cmpsl
movsb
lea
xchg
push
cmc
cmp
mov
adc
push
sub
out
aaa
push
fstl
sub
or
hlt
mov
cmp
cmp
and
jge
xor
in
add
mov
pop
scas
mov
pop
mov
aam
push
sub
inc
std
and
hlt
dec
mov
cmp
mov
imul
aam
pop
sub
imul
cmp
mov
xchg
ret
xchg
dec
sbb
push
add
shrd
ret
mov
bound
subl
xor
inc
inc
xrelease
insb
cmpsl
int
aam
and
imul
cmp
and
div
jmp
jmp
xchg
cmp
lcall
fisubrl
dec
pushf
pop
lods
inc
push
cmp
mov
movsl
aad
ljmp
bound
addr16
push
je
cmp
mov
add
pop
insb
xor
out
movsl
nop
xchg
int
mov
outsl
imul
notl
mov
mov
insb
inc
jl
mov
mov
addr16
incl
cmc
mov
negl
jp
test
jne
aam
iret
pushf
pushf
xchg
repz
repnz
loope
das
mov
mov
pop
mov
out
sub
dec
ds
pop
jb
pop
mov
loope
nop
xchg
inc
lret
les
in
push
or
mov
dec
sarl
sbb
inc
ds
mov
js
jmp
jne
sub
sbb
inc
sub
mov
enter
and
inc
cmp
fwait
mov
lahf
sub
cmpsb
cmp
cs
repnz
add
insl
pop
insl
pop
mov
fldt
cmpsb
adc
sbb
adc
std
mov
ja
mov
push
int
add
jb
and
push
mov
jno
dec
adc
flds
dec
mov
xor
adc
out
push
mov
ret
jge
jb
sub
ret
lret
cld
sti
sbb
ret
mull
stos
xchg
jo
mov
add
xchg
pop
or
mov
into
mov
cwtl
dec
lahf
test
xor
fsubs
pop
push
movsl
mov
mov
sbb
repnz
sub
outsb
stc
fstpt
cmp
adc
sub
cmc
and
inc
test
mov
fwait
ljmp
shrl
enter
inc
repz
or
or
fimull
negl
mov
xchg
sbb
mov
pop
gs
popf
cmp
lcall
add
push
lods
and
clc
adc
stc
cmp
lcall
cmc
rorl
jg
stc
imul
mov
mov
xor
mov
pop
xchg
sbb
and
divb
jno
push
sub
mov
jno
or
hlt
loope
pop
pop
dec
cs
xlat
push
dec
aam
cmc
dec
xchg
fnstenv
repnz
ljmp
fiadds
cmp
mov
test
jae
or
lcall
and
pop
and
dec
cld
arpl
or
cwtl
inc
int3
pop
jmp
jmp
outsl
add
stos
hlt
push
adcl
iret
jmp
loope
jg
test
clc
dec
cltd
add
cmpsl
push
pop
cmpsb
js
cmp
testl
fidivrl
cmp
xor
add
stos
addr16
in
lods
mov
out
inc
lods
xor
int
pushf
cmpl
insb
jp
mov
inc
or
ljmp
test
ficomps
dec
xchg
ljmp
je
inc
pop
mov
aas
jbe
xor
loop
gs
sbb
bound
adc
xchg
aas
je
test
sar
jecxz
shrb
rolb
repnz
mov
mov
pop
into
mov
or
cli
and
xchg
mov
ret
push
leave
insb
add
js
stc
test
fidivl
or
icebp
ljmp
cmpsl
xchg
lods
push
lods
cmp
sub
push
leave
outsb
jl
mov
mov
loop
mov
cwtl
rol
imul
cmp
cmp
add
shlb
stos
mov
lods
or
ljmp
ja
cmc
cmp
call
pop
sub
adc
stc
adc
fst
test
icebp
push
mov
xchg
fucomp
xlat
dec
push
addl
ret
in
cmp
popa
mov
stos
mov
adc
or
pop
rolb
pushw
ljmp
clc
lret
andl
push
fstl
jge
rep
addr16
push
pop
mov
int
xchg
jno
mov
es
mov
ret
dec
das
cs
aaa
or
dec
fisttpll
xchg
stos
aad
mov
xor
xor
and
adc
push
sub
sub
mov
daa
flds
xor
pop
ljmp
cmp
aaa
aas
push
xchg
fsubrl
out
je
sub
roll
and
cmpsl
cmp
mov
xchg
ret
sbb
cmp
cmpsl
sbb
xlat
adc
push
xor
and
mov
push
jg
push
fsubrs
pop
shrl
enter
jge
aas
fsubrl
js
sub
inc
sbb
pop
mov
sub
pop
es
sub
push
mov
adc
shll
xchg
or
aam
int3
mov
jae
fs
or
pop
fidivl
pop
outsb
jp
pop
sub
int3
mov
insl
inc
push
je
dec
mov
pusha
xchg
mov
jb
pop
sbb
into
and
xchg
mov
jne
or
xchg
popa
mov
sti
lods
ss
or
scas
movsl
xor
adc
pushf
push
in
inc
push
call
std
roll
aam
mov
inc
or
les
filds
push
aam
or
push
lcall
inc
jge
mov
stos
push
lods
cmp
jl
jge
dec
sub
imul
ret
sub
test
shrb
test
and
lret
and
dec
pop
decb
adc
cli
push
add
into
iret
andl
xchg
fwait
mov
fistpl
cmp
push
pop
inc
mov
out
adc
mov
aam
lret
test
js
lea
in
jne
mov
lret
fidivl
insl
call
mov
jge
jo
nop
add
add
push
mov
sub
bound
sub
push
shlb
pop
xchg
pop
adc
push
xor
adc
loop
fdivl
and
jno
inc
popa
cmpsb
dec
cmpsl
call
pop
gs
shrl
xchg
addr16
lock
xor
aas
shlb
dec
ljmp
mov
es
inc
push
mov
xchg
push
mov
or
xchg
nop
inc
test
cmp
notb
mov
pop
sahf
inc
sbb
push
dec
mov
push
lock
cmp
dec
subb
push
jae
out
pop
es
jne
cmc
sbb
sbb
push
pusha
xchg
cld
aas
mov
xlat
push
adc
inc
iret
xor
dec
test
adc
inc
ljmp
dec
mov
xor
lcall
mov
xor
and
push
scas
mov
mov
sub
stos
xchg
insl
jg
or
test
clc
in
cwtl
push
jnp
daa
mov
add
cwtl
push
mov
cli
lcall
or
jle
sarb
push
dec
ret
mov
or
test
insb
outsb
cmp
dec
xor
sbb
jb
sidtw
mov
lret
xchg
loopne
inc
mov
sub
or
adc
xchg
nopl
mov
xor
mov
mov
push
popf
mov
cwtl
pop
js
arpl
js
or
out
fstps
adc
pop
fwait
call
arpl
push
and
lcall
imul
mov
sub
popf
sub
push
das
sub
popa
orb
cmpsb
pusha
pop
dec
or
cmp
orb
popf
arpl
pop
or
mov
sub
or
in
xchg
jmp
jge
mov
cmp
sbb
add
jge
or
ja
dec
xor
jnp
pop
shll
xchg
inc
dec
sbb
sub
adc
sub
mov
or
nop
push
push
rorb
mov
dec
fdivs
daa
icebp
sbb
jns
mov
pop
mov
or
arpl
push
lods
jne
lds
xor
mov
jns
jg
rcll
cwtl
stos
xchg
ret
jae
jb
mov
scas
add
mov
add
mov
inc
insb
das
xchg
flds
and
std
jb
inc
int3
mov
int3
dec
fs
je
ror
mov
or
pop
outsb
sbb
ret
mov
and
lret
out
inc
enter
inc
adc
cmp
adc
xor
xchg
pop
add
dec
or
das
mov
dec
ja
inc
mov
xor
pop
cmp
aad
xlat
sub
inc
adc
js
xlat
cs
dec
pop
rcll
jnp
aas
sbb
mov
cmp
mov
sbb
sbb
je
and
mov
lcall
sbb
fsubl
mov
sub
in
sub
sub
rcl
mov
fs
jno
lahf
dec
adc
inc
arpl
push
push
aaa
xchg
fs
xor
adc
xor
xchg
lret
xchg
call
lds
or
aad
jns
ja
or
adc
xchg
stos
mov
stc
inc
mov
imul
xchg
inc
and
popa
mov
inc
cs
cld
dec
int
jbe
mov
mov
cmp
fnsave
andl
pop
ret
xor
lods
fisubs
int
lods
addr16
out
pop
into
cmc
lret
inc
cmp
repnz
or
dec
leave
ds
loope
loop
pop
nop
sbb
test
mull
divl
and
mov
fidivrs
push
test
ud1
mov
inc
shll
pop
sub
push
jns
sub
jecxz
xchg
dec
add
mov
add
push
and
ret
movsl
sub
dec
sub
loop
adc
xchg
lods
mov
movsb
mov
push
sbb
push
jl
cld
cli
mov
push
test
data16
inc
arpl
or
cmp
mov
add
test
in
popl
dec
fsubrs
inc
dec
inc
movsl
lods
dec
xlat
or
mov
aaa
push
push
cmp
mov
push
cld
push
mov
pop
icebp
inc
cmp
inc
loop
test
clc
int3
sub
xor
dec
call
sub
xor
jge
jns
mov
arpl
and
or
int
lds
adc
es
iret
in
xchg
scas
ss
and
arpl
adc
mul
loopne
or
sub
lcall
xlat
fimull
jmp
fdiv
shrl
pop
call
cmp
call
iret
mov
xor
push
jb
jo
lock
mov
into
mov
inc
cmp
outsl
das
repz
pop
cmp
mov
adc
xlat
enter
or
and
test
jg
adc
ja
stos
cltd
mov
lock
lods
sub
push
iret
int3
dec
insb
nop
cmpsl
dec
or
or
loop
clc
outsl
insb
xor
and
idivb
push
cmpsl
insl
adc
cmpsb
mov
lcall
inc
icebp
lcall
subl
iret
into
cmp
insb
cmp
dec
movb
add
lods
je
cwtl
dec
xor
and
add
pop
icebp
imulb
xchg
stos
mov
sbb
mov
cwtl
lods
and
aas
sbb
lret
push
sbb
mov
and
jne
movsb
dec
jne
sub
fbstp
push
cmp
or
sahf
out
test
inc
faddp
pop
cmp
mov
xchg
fsts
jge
popl
push
into
adc
les
aaa
aam
jns
jns
imul
adc
pop
aaa
in
stc
mov
mov
fwait
pusha
pushf
and
jl
stos
xor
lcall
push
das
movsl
inc
dec
pop
lret
movsb
stos
imul
outsb
daa
xchg
lods
sbbb
jle
pop
shl
outsl
push
cld
jno
sub
push
adc
mov
pop
and
lcall
in
shll
mov
pop
sbb
mov
imul
adc
shlb
xchg
push
lea
les
xor
jae
mov
jp
jecxz
jmp
lcall
inc
imul
ja
insb
add
adc
pop
sti
cld
lret
or
addb
jns
popa
mov
lcall
out
cmp
testb
test
jl
pop
hlt
sbb
inc
sub
outsl
insl
arpl
mov
daa
inc
push
cmp
movsb
lods
dec
push
idivb
cmp
test
divb
jo
or
fbstp
mov
xchg
icebp
pop
fdiv
cmp
push
and
sub
ror
xor
shll
cli
addr16
xor
sub
loope
push
cmc
cli
add
daa
lea
fidivl
mov
adc
mov
shrl
dec
aaa
adc
cmp
or
std
repz
and
ja
stc
aam
cmp
fisttpll
xchg
inc
mov
xchg
setno
sbb
xchg
sub
inc
inc
pushf
call
lods
mov
and
mov
filds
dec
icebp
push
mov
xchg
jmp
jle
test
faddl
out
test
arpl
scas
or
xor
inc
add
cmp
dec
or
mov
xor
xor
push
test
sub
loop
in
test
stos
mov
ror
fdiv
jp
or
xor
fwait
jp
repz
push
hlt
dec
fidivrl
sub
fwait
xor
jbe
push
leave
fmul
add
mov
push
push
push
lret
movsb
gs
adc
je
repz
in
testl
mov
mov
pop
outsb
sub
push
push
xchg
fstpt
stc
add
mov
add
cmpsl
jo
je
xchg
das
mov
adc
mov
call
jb
xchg
xchg
js
shrl
into
pop
push
push
xchg
jns
pop
sahf
mov
in
in
inc
cli
mov
fimull
mov
pop
notb
dec
es
ljmp
pop
lods
nop
call
fistpll
rcrb
bound
pop
inc
mov
cmc
sbb
sbb
clc
add
jmp
out
adc
jno
jl
shl
arpl
insl
ret
dec
movsl
xor
in
stc
outsb
arpl
pop
out
sbb
jg
mov
xor
jg
pop
adc
loope
mov
into
fists
fcmovne
and
and
add
jnp
test
push
and
adc
cmp
int3
dec
test
sbb
add
ret
xor
push
mov
sbb
jns
push
ljmp
scas
xchg
push
es
fistpl
lret
sub
test
divb
push
jb
testl
dec
add
int
cli
pusha
jo
pusha
lea
lahf
incb
lahf
pushf
add
imul
adc
jb
aas
xor
push
push
inc
xchg
out
pushf
jg
out
and
fldt
dec
shlb
lret
aad
adc
movsb
dec
sti
in
cmpsl
imul
clc
ret
xchg
and
mov
or
sahf
sub
pop
cmp
mov
lea
mov
lods
and
inc
xchg
mov
test
pop
into
add
xor
lahf
into
pushf
js
dec
les
stos
sbb
and
mov
pushf
xchg
gs
adc
jbe
inc
adcl
pop
inc
dec
ja
aad
mov
sbb
adcb
add
mov
loope
push
decl
rcr
mov
or
in
sahf
daa
adc
sub
mov
in
je
add
xchg
sub
inc
jmp
mov
add
jns
inc
xor
shlb
jnp
lock
test
jns
das
push
mov
cmp
jle
clc
mov
inc
push
rcrw
daa
dec
adc
loop
xchg
mov
and
shr
xchg
or
mov
fmull
lods
fsubl
cmp
lods
push
inc
iret
test
and
or
lcall
jmp
aad
addb
arpl
in
adc
and
arpl
sahf
pop
dec
scas
mov
xchg
out
mov
mov
pop
jecxz
mov
inc
mulb
pop
mov
jbe
into
faddl
cmp
in
pop
xchg
pop
push
leave
std
xchg
cmpsl
aad
adc
int
jecxz
leave
test
push
jmp
scas
or
lods
sbb
in
jecxz
mov
sti
lock
clc
imul
adcb
mov
sub
inc
pop
cmp
into
mov
jo
test
push
mov
mov
shrb
lret
out
jnp
and
cwtl
push
pop
push
das
xchg
mov
ret
sub
test
sti
mov
and
pop
dec
add
in
sti
aas
or
xor
xor
aad
ljmp
push
outsl
cmp
pop
scas
loopne
add
mov
int
pop
lahf
jmp
test
sub
mov
es
push
and
sub
dec
aam
mov
and
and
shr
fiaddl
repz
arpl
loope
jne
jnp
pop
mov
nop
bound
push
push
andl
aaa
push
pop
pop
sbb
and
mov
test
je
icebp
enter
xor
or
pop
mov
int
loop
jl
js
rcl
push
ficomps
mov
lock
bound
pop
popf
adc
jg
xor
inc
xor
fisubrs
adc
sar
test
loopne
outsb
jae
addr16
es
scas
outsl
add
pop
addr16
and
dec
sahf
xchg
clc
lods
nopl
fs
int
mov
fwait
push
leave
in
xor
mov
mov
add
xchg
mov
clc
test
andl
push
mov
jno
cmp
cwtl
sbb
bound
cltd
rcrl
and
add
or
addr16
mov
cmpsb
xchg
push
sub
sbb
jecxz
mov
cmp
repz
popf
ljmp
jl
ret
loope
leave
insb
clc
fidivrl
ss
testl
movl
dec
in
mov
or
xor
jne
inc
dec
sbb
adc
notl
std
outsl
push
es
mov
mov
call
cmp
pop
pop
inc
insl
lcall
mov
jno
or
jmp
mov
cld
mov
xor
subl
ret
dec
add
cmc
mov
mov
sti
fwait
sbbb
or
push
addl
mull
stc
ss
in
test
popa
and
pop
stos
adc
imul
sti
and
pop
pop
mov
xchg
pop
xor
or
cmpsl
jg
jbe
and
pop
inc
add
mov
sbb
xor
inc
test
insl
mov
mov
lcall
sbb
lret
loopne
adc
xorb
jl
or
cwtl
jae
jecxz
jmp
out
inc
sbb
inc
fsubrp
cmp
movsb
lock
or
pop
in
sbb
xchg
inc
mov
test
outsb
mov
mov
jae
mov
or
xchg
clc
fmull
les
push
insb
pop
aam
scas
xor
add
cmp
dec
cltd
xor
jb
mulb
cmpsl
rcrl
les
push
arpl
mov
nop
lock
loope
push
cmp
insb
push
outsl
scas
ss
add
ljmp
pop
ret
mov
pop
pop
ret
fstpt
add
sub
cmp
scas
jmp
add
pusha
test
rcl
sub
xchg
mov
jo
jne
mull
pop
push
fmull
xchg
mov
xor
add
push
cmp
sbb
jo
pop
aam
dec
rcrb
adc
cmpsl
dec
adc
les
sarb
jg
and
push
or
ret
inc
inc
push
xor
int3
pop
xor
and
loopne
xlat
inc
push
dec
idiv
call
add
mov
sub
mov
push
jp
inc
push
repz
into
pop
jle
mov
rcll
or
mov
loope
add
addl
cmp
add
xor
and
pop
movsb
sbb
addl
push
dec
andb
push
xor
jne
js
mov
xor
mov
dec
inc
inc
cs
ljmp
adc
push
add
fisubrl
xchg
lods
xchg
cs
test
jmp
pop
bound
pusha
rcrl
add
out
pop
xor
lahf
iret
bound
lea
mov
roll
add
inc
jo
fld
idivb
and
mov
into
enter
mov
mov
cwtl
xor
fwait
jo
mov
inc
test
dec
push
js
jbe
int3
mov
or
mov
stc
cmp
jb
cmp
inc
or
rol
imul
shll
mov
push
add
fs
mov
push
shl
jae
add
jns
repz
xchg
cmp
out
adc
push
shlb
sti
xor
sbb
lock
mov
jmp
or
dec
mov
dec
jne
fldenv
fwait
cmp
or
adc
jb
lea
clc
sub
cmpsb
lcall
inc
mov
fsubrs
pusha
jnp
pop
inc
fwait
cmp
mov
cmp
mov
mov
lcall
movsb
lahf
mov
pop
ljmp
jmp
loop
sub
mov
xor
mov
adc
dec
daa
inc
out
cmp
sbb
jecxz
mov
popa
push
pop
push
sti
aad
shlb
imul
xor
cltd
ret
adc
dec
enter
sbb
jmp
inc
bound
xor
mov
in
dec
gs
inc
ljmp
jns
imul
fistps
push
pop
cmpsb
ret
fnsave
loope
lret
in
push
push
push
xor
repz
jecxz
lds
or
mov
adc
pop
imul
jl
or
or
sbbl
jmp
xchg
mov
fs
pop
push
insb
inc
xchg
add
adc
lcall
cltd
cwtl
inc
adc
loope
pop
xchg
loope
sbb
outsb
sbb
push
cli
cwtl
push
pop
cmp
into
push
ljmp
das
lds
outsl
mov
fwait
jmp
and
ficoms
ss
push
int3
jbe
lahf
jge
insb
les
in
adcb
xorb
mov
dec
cwtl
mov
pop
fidivrl
imul
aad
mov
stos
mov
push
cwtl
bsr
jge
pop
or
aas
aas
sti
test
sbb
jo
popa
jl
out
fiadds
fwait
xchg
add
ret
shlb
pushf
lret
sarb
inc
hlt
mov
insl
cmpsl
icebp
orb
fdivrs
push
or
inc
xchg
push
addr16
outsb
cmp
push
jmp
aaa
lods
test
sub
pop
sbb
lods
lret
fisttps
imul
lock
dec
fsubrl
pop
aaa
add
repnz
and
xchg
mov
movsb
and
pop
lret
add
in
scas
iret
xchg
fsubs
lds
decb
rclb
pop
mov
sub
push
adc
pop
xlat
movsb
std
mov
and
clc
ss
add
mov
push
ret
sbb
in
push
pop
pop
outsl
sahf
sarl
nop
xor
ds
enter
sub
fbld
xchg
xor
test
mov
pop
and
mov
inc
pop
call
lods
in
fwait
enterw
popa
fs
pop
and
fdivp
push
push
stc
and
cmpsb
fwait
inc
test
popa
adc
xor
xchg
xor
jne
mov
xor
pushf
xor
leave
xchg
jl
fists
je
mov
sti
mov
in
inc
inc
addr16
imul
jnp
cwtl
int3
addl
lods
cmc
scas
mov
and
pop
adc
int3
ljmp
mov
cmpsl
cld
sub
inc
push
into
test
rcrl
ret
xchg
fmuls
jbe
ljmp
push
mov
ss
ret
xor
lcall
or
sbb
movl
push
mov
sub
jmp
pusha
bound
iret
inc
push
jbe
lea
mov
sub
into
mov
pushf
outsb
loope
imul
stos
outsb
lods
lret
mov
xor
lea
xchg
popf
js
es
adc
mov
clc
or
and
add
scas
mov
repnz
mov
test
dec
and
push
test
out
mov
push
int3
sub
shll
pop
dec
sub
sbb
and
es
xchg
pop
into
lcall
xor
mov
out
sub
in
insl
out
les
mov
xor
int3
test
lret
inc
push
sbb
std
insb
adc
and
mov
jne
notb
jo
fldenv
adc
mov
dec
ss
int
adc
shrb
dec
or
neg
outsl
jge
mov
mov
in
into
xor
divl
sub
cmp
adc
subb
xor
scas
inc
js
lock
sub
lock
lcall
xchg
xor
popf
add
fwait
pop
mov
mov
pusha
mov
sahf
and
xchg
push
out
lea
inc
adc
int3
inc
scas
jge
dec
sbb
sbb
and
adc
int3
inc
pop
mov
mov
fcmovnu
stos
lds
mov
cmp
cmp
addr16
push
mov
mov
sub
shrl
out
inc
mov
decb
push
mov
mov
loopne
enter
adcl
aad
cwtl
xor
fmull
xor
cwtl
aam
and
inc
inc
push
dec
in
adc
rcrl
scas
push
loopne
repnz
sti
push
data16
mov
in
test
sbb
pop
fsubrp
in
sbbl
mov
aam
xchg
pop
add
fdivr
repz
pushf
mov
add
mov
stc
sbb
in
sub
std
xchg
jmp
sbb
jbe
dec
push
mull
push
dec
call
sahf
push
test
cmp
jp
test
cmp
dec
aad
dec
mov
les
cmp
inc
and
jg
imul
sub
xor
sbb
stc
jp
and
scas
les
out
mov
movlps
mov
insb
or
cmp
testl
pop
cmp
rorb
pop
jg
lods
mov
jle
cmp
ret
lods
push
mov
jno
push
int
andl
stc
push
jge
and
stos
xor
mov
jnp
sub
movsb
mov
jmp
mov
mov
inc
cmp
repz
inc
or
push
outsl
repz
jl
test
imul
pop
sub
imul
cmp
dec
jp
push
inc
testl
cmpsb
icebp
cltd
aam
dec
pop
sarb
ret
bnd
cmpsl
stc
pop
orb
fdivl
xor
pop
and
je
sub
out
push
dec
divl
imul
dec
ss
pop
xor
add
cmp
std
push
adcl
out
sub
inc
mov
loop
lds
inc
daa
or
les
mov
inc
inc
mov
or
jge
sub
fdivrl
das
daa
add
xor
scas
push
ret
push
sub
test
aad
or
add
cmpsb
dec
cli
lcall
bound
cmp
addr16
cmp
out
adc
ss
dec
inc
cmpb
das
out
jmp
inc
mov
xor
ficoms
sbb
mov
pop
xor
cmp
or
mov
add
loop
or
and
pop
adc
clc
inc
mov
loopne
test
pusha
enter
inc
ret
test
push
jge
mov
mov
test
test
lds
pop
jle
add
lret
jl
aaa
jmp
fidivrl
push
cmc
xchg
add
inc
adc
fsubrl
aam
cmp
mulb
addr16
xchg
lahf
jae
pusha
inc
mov
sub
outsb
sub
jnp
push
xor
stos
xor
mov
idiv
xorl
xor
shlb
add
jge
test
add
test
mov
xor
jbe
mov
or
daa
in
rolb
cmc
daa
sbb
push
out
imul
pop
jo
jp
cltd
jno
and
pop
sbb
dec
xchg
pop
outsl
test
shll
mov
fmull
cmp
rcrb
push
dec
dec
jo
and
cmpsb
leave
xchg
bound
cmpsl
mov
rorb
sbbb
divl
sbb
fildl
nop
scas
cmp
push
out
push
into
insl
in
movsb
cmpsb
xor
cld
xor
add
xlat
movsb
es
mov
sub
add
dec
clc
inc
inc
cmp
ret
gs
jne
cs
sub
aad
or
jmp
ss
enter
imul
test
lret
movsb
lcall
sub
scas
lods
ds
enter
nop
cmp
call
test
cwtl
sub
pushf
pop
outsl
stos
rorl
add
inc
sarb
xor
and
push
jecxz
aas
mov
shrl
push
fldl
in
xchg
cmp
movsl
xor
shlb
scas
in
lea
pop
mov
or
ja
jmp
adc
insb
fadds
cmp
push
cmc
xor
in
popa
xor
mov
gs
pusha
sbb
xchg
pop
adc
sub
xor
mov
fwait
cwtl
mov
lea
fcomp
in
movsl
es
mov
dec
fdivrs
or
pop
xchg
inc
xchg
ljmp
test
and
add
inc
fnsave
inc
push
cmc
mov
ss
cld
test
out
aas
lds
cmp
loopne
sbb
aam
mov
sahf
adc
div
nop
stc
cmp
mov
xor
pop
xor
mov
jb
cltd
lds
adc
fldl2e
ret
push
jl
add
sti
andl
mov
mov
pop
or
cmp
jnp
and
mov
fmull
rorl
in
cmp
dec
fbstp
mov
dec
lods
sti
notb
or
jmp
sbb
imul
loop
jp,pt
pushf
cmc
mov
mov
mov
aam
test
mov
pop
push
sbbb
mov
rolb
int3
fwait
jo
xchg
or
pushf
stos
les
addr16
ljmp
sbb
xchg
leave
in
repz
mov
stc
hlt
call
or
inc
pop
jecxz
xchg
xchg
add
xchg
jecxz
push
dec
xchg
sbb
xchg
sub
mov
ret
shrl
fisttps
lock
push
xchg
dec
out
inc
hlt
dec
test
push
xchg
js
arpl
xchg
lret
xchg
mov
shlb
push
mov
push
std
adc
cwtl
xor
pop
loopne
out
outsb
scas
jo
popa
dec
call
or
fsubrl
inc
add
filds
mov
adc
lods
cmp
jo
stos
mov
jae
cld
fincstp
cmc
clc
sub
popf
or
in
or
lods
pop
mov
aam
sub
push
arpl
frstor
jno
cwtl
push
dec
jg
mov
add
loop
cmc
mov
int
inc
lret
sbb
loop
data16
fisttpll
jae
mov
in
jb
cmp
repnz
fdivrs
jecxz
jno
mov
xor
repnz
cmp
imul
push
ficoms
push
bound
stos
or
les
or
xchg
cmpsl
jno
enter
dec
or
loop
neg
hlt
add
mulb
ffree
dec
sub
ds
in
sarl
or
dec
repnz
xchg
adc
in
outsl
lcall
shr
adc
dec
rcll
sub
testl
adc
lcall
sbb
mov
inc
and
lock
xlat
aad
mov
add
mov
jbe
enter
je
sbb
fcoms
cwtl
inc
sbb
ret
jbe
mov
std
out
push
jno
ljmp
test
rcrl
dec
rorb
pushf
out
push
aad
mov
fldt
and
sbb
ss
mov
xchg
repz
dec
jle
push
mov
push
insl
push
lods
lea
aad
lcall
movsl
jb
add
sbb
cli
insb
test
cltd
test
mov
cmp
sub
inc
xchg
stos
imul
out
mov
cwtl
dec
and
sbb
fsub
cwtl
mov
pop
call
scas
xchg
push
bound
jnp
xchg
adc
sub
xchg
adc
mov
les
inc
mov
inc
divl
lcall
push
pop
imul
jle
inc
add
enter
in
mov
fdivrl
in
xor
lods
ja
mov
out
loopne
mov
inc
push
stos
test
cld
sub
test
lahf
and
sub
fistpl
enter
sahf
test
cmp
push
ds
mov
daa
pop
sub
add
jbe
mov
fwait
lahf
enter
push
cmp
outsb
cmp
cwtl
adc
inc
sub
cwtl
rcrb
xor
ret
aad
mov
nop
cltd
lret
fildl
imul
cmpsb
out
xchg
inc
enter
clc
xor
popa
jmp
test
fstl
adcb
loope
notb
sti
cmp
push
and
dec
cmpsb
movb
xor
cmp
pop
idivb
pop
stos
jl
pop
push
pop
imull
testb
mov
aas
sub
pop
fsubrl
xchg
pop
pop
rolb
inc
mov
lret
jmp
mov
mov
es
mov
mov
push
popa
mov
sbb
es
je
sub
mov
fistpl
imul
out
add
stos
repnz
pop
lcall
sbb
lret
add
adc
jle
jae
jmp
jg
mov
out
popf
mov
aad
nopl
push
stc
test
jl
sbb
xlat
rcl
xchg
repz
cmpsl
into
push
mov
mov
mov
dec
pushl
cmpsl
add
xchg
leave
xor
out
loop
mov
fimuls
sbb
gs
roll
std
aas
jl
jp
or
sbb
lcall
inc
jo
mov
jg
pop
mov
dec
test
fdivrp
sahf
lahf
lea
movl
imul
ja
inc
lret
inc
mov
mov
xchg
pusha
rorb
movsl
cmpsl
push
mov
cmp
lea
aad
mov
clc
rorl
xchg
mov
adc
fnsave
pminsw
mov
lret
or
pop
iret
and
push
sub
popf
and
js
dec
iret
xchg
mov
mov
ficompl
push
aaa
sub
fucomip
cld
jo
sarl
insl
xchg
push
sub
popa
adc
leave
and
cmpsb
mov
and
aam
mov
adc
inc
fwait
inc
sbb
cs
test
pop
int3
sub
pop
call
shll
sub
es
out
ret
jl
jae
cli
out
pop
and
mov
fdivrp
sbbb
shrl
scas
or
mov
stos
jecxz
mov
bound
xchg
ret
inc
push
cmpsl
add
lock
imul
aaa
or
jecxz
sbb
and
cmp
repz
xchg
outsl
jecxz
das
iret
out
ret
mov
rolb
int
jl
pop
jmp
roll
adc
mov
ja
and
or
add
fucom
rcl
mov
fbstp
inc
xlat
repz
or
or
mov
push
lcall
aas
outsl
pop
es
adc
dec
loopne
sub
das
lds
cmp
fistpll
add
mov
lret
lock
xchg
jns,pn
ss
roll
sbb
fs
paddsb
jge
cmpb
je
dec
orb
jle
mov
roll
jg
sahf
sub
nop
and
lods
dec
subb
mov
cmpsl
movsl
stos
movsl
xlat
into
into
push
out
push
mov
or
ds
fldcw
and
xor
sahf
jnp
repz
sti
dec
mov
rol
std
mov
mov
xor
cwtl
jecxz
clc
movb
mov
fstps
hlt
fistps
mov
inc
push
in
jl
hlt
xor
pop
inc
jo
jnp
mov
std
lret
test
mov
scas
cmpsl
dec
outsb
inc
in
cmpsl
loop
jmp
ss
test
sbb
pop
jg
inc
mov
inc
pop
pushl
repnz
jle
push
xchg
or
mov
sub
sbb
dec
aas
jge
cs
mov
ds
leave
scas
in
xchg
pop
adc
testb
xor
mov
and
jae
mov
imul
mov
xchg
xchg
sub
out
jno
ret
in
ljmp
lret
imul
xchg
ss
stos
xchg
mov
and
cmp
or
inc
mov
in
pop
pop
shrl
popf
out
test
repz
dec
push
xchg
mov
ljmp
insb
push
sub
loopne
jecxz
xchg
mov
and
data16
xor
and
in
and
push
js
inc
scas
shll
repz
dec
mov
gs
dec
out
enter
stos
fwait
notb
mov
push
cmpsw
loope
sub
lock
cmpsl
jmp
loope
jo
push
mov
pop
lods
sub
mov
mov
mov
xchg
inc
xor
sbb
jg
xor
jmp
ljmp
add
xchg
pushf
pop
sarb
mov
test
jle
pushf
lcall
gs
push
js
icebp
imul
dec
inc
sub
sub
into
xorb
sub
jmp
jae
add
or
xlat
mov
dec
jmp
sahf
add
loop
ret
cli
in
push
mov
add
sbb
sarb
dec
nop
in
cmp
cmp
iret
add
data16
cmp
or
inc
sub
push
xor
addr16
stos
arpl
push
and
sbb
daa
adc
fbld
fs
inc
and
test
mov
sub
push
fcoml
push
or
inc
adc
xchg
pop
adc
mov
ds
lret
loopne
cltd
push
insl
dec
pop
rolb
lds
pop
test
push
push
insb
jl
lds
aaa
ss
es
mov
mov
int3
fidivs
push
push
adc
or
jl
xchg
enter
cltd
cmp
xor
stos
mov
out
and
orl
ficoms
jnp
jo
fsubl
sub
hlt
das
push
adc
fistl
lods
sbb
mov
cwtl
xor
pop
add
in
cmpsb
outsb
movsb
scas
ss
push
xor
pop
test
or
icebp
lods
in
roll
or
xor
sahf
mov
je
call
push
cmp
arpl
cmp
repz
mov
inc
js
leave
xor
rcrl
int3
pop
push
push
jle
insl
add
sbb
into
xor
lods
sbb
xorb
jb
fdiv
mov
fmuls
mov
das
add
or
xor
stc
sbb
sub
mov
psubb
mov
ret
jp
sub
rclb
pop
mov
rorl
xchg
aaa
aam
add
cmp
add
popa
lock
repz
pop
rclb
mov
cmp
sarb
stc
jno
ds
push
minps
lods
push
aas
inc
cld
flds
push
or
lods
test
sbb
pop
cli
mov
mov
jnp
or
adc
pop
test
daa
bndmk
jbe
loope
and
xchg
lret
nop
mov
inc
bound
sbb
cmp
sbb
fcompl
jp
push
mov
push
sub
dec
addr16
lcall
jo
xor
enter
stc
dec
repz
outsb
lock
sbb
addr16
idivl
imul
and
jecxz
mov
jne
cmp
pop
cld
xchg
loop
mov
cmp
pop
or
pop
mov
jnp
mov
hlt
incb
and
cmp
push
nop
lea
xor
bswap
mov
sub
push
inc
xchg
lock
pop
gs
inc
mov
rolb
xchg
popf
fwait
jno
lcall
cmp
push
sub
inc
and
jo
sbbb
push
mov
lahf
jae
adc
add
sub
dec
cmpsb
push
leave
mov
imul
add
adc
aas
xlat
aaa
ret
test
lret
lock
mov
loopne
jb
or
pop
inc
cmc
xchg
or
push
push
fisttpl
out
std
dec
mov
out
cmp
sub
fsts
mov
ret
cld
cmp
pusha
cmp
inc
mov
jmp
mov
dec
cmpsl
outsl
and
out
rorb
pushf
cmp
or
cmp
out
mov
xlat
push
rcrl
mov
xor
push
or
push
lock
cmp
add
popa
rcrb
cmc
mov
pop
ret
scas
lea
mov
jmp
or
gs
or
aad
in
or
mov
push
xchg
cltd
cmp
adc
sub
andb
fstpl
clc
inc
xor
pop
jbe
cmovg
lods
jno
jmp
movsb
aam
std
add
and
xchg
jae
push
adc
sub
ret
cmp
mov
fnstcw
inc
lcall
xor
sub
or
and
addr16
xlat
aas
repnz
xor
mov
es
cmpb
or
mov
sarb
out
xchg
ljmp
mov
repnz
pop
or
add
adc
loope
mov
xor
lods
push
pop
repnz
xor
xchg
into
jge
mov
popa
and
in
sbb
mov
int
stos
adc
pushl
mov
sbb
inc
xchg
pop
jg
data16
mov
inc
adc
int
xor
xor
mov
sub
fcom
mov
insb
jecxz
int
mov
dec
pushf
jb
popf
sub
repnz
outsl
jmp
cmpsb
fnstsw
push
xchg
mov
and
or
loope
hlt
cmp
push
outsb
jle
cmp
and
loopne
jno
dec
movsl
or
inc
ja
icebp
cs
movsl
arpl
scas
enter
aad
lret
mov
int
adc
mulb
add
clc
popf
into
jns
lret
cmp
push
push
inc
inc
mov
das
pop
mov
test
mov
int3
sub
fnstcw
push
push
mov
mov
outsb
shl
dec
sahf
cmp
rcl
adc
add
cmp
inc
cltd
xchg
push
pop
push
in
aas
std
jl
fistpl
bound
test
or
and
int
andl
jnp
mulb
and
jg
xor
sbb
jmp
push
xor
movsl
testb
loopne
pusha
pop
add
sub
push
xor
int3
sar
lock
adc
dec
scas
add
int3
fnstenv
sbb
movsb
jae
in
lds
mov
enter
push
clc
sarb
movsb
arpl
add
test
push
rorl
in
idivl
pop
clc
sysexit
push
lret
pop
out
sahf
das
cmp
imul
nop
mov
cs
out
cmp
mov
shl
in
out
sbb
adc
fbld
and
cmp
mov
mov
jne
enter
stos
pop
xchg
lods
cltd
jle
jns
hlt
fnstsw
or
loope
js
subb
sti
sub
test
jno
jg
xchg
sub
repz
rol
pop
ds
pop
push
xlat
xchg
test
dec
fsts
mov
clc
mov
xor
and
push
test
xlat
or
pop
adc
pop
addr16
aad
or
dec
add
es
insl
push
jp
mov
hlt
push
mov
imul
jecxz
add
iret
rolb
icebp
add
imul
test
subb
gs
cltd
xchg
in
ja
mov
mov
mov
and
sbb
xor
subl
xor
xor
cmp
flds
adc
mov
test
cmpl
sbb
cmpsb
pusha
ret
outsb
sbb
scas
repz
enter
cwtl
roll
or
or
and
je
jl
jg
jb
ds
call
mov
leave
push
movsl
pusha
out
adc
iret
jnp
aam
inc
mov
rclb
xor
jl
add
fstl
xchg
dec
iret
das
inc
or
mov
js
stos
mov
pop
roll
adc
imul
sbb
mov
les
stos
ljmp
xchg
push
lods
push
sbb
int
pop
scas
fistl
enter
and
or
fstpl
mov
mov
mov
mov
idivl
lret
mov
xor
int3
insl
mov
sti
iret
dec
mov
sbb
xor
and
popa
xlat
xlat
adc
and
and
pop
pop
jl
call
jmp
outsb
inc
std
dec
popa
push
cmp
int
dec
iret
inc
rcrb
pop
and
setne
add
cwtl
cmp
sti
mov
rcll
lods
iret
js
jl
aam
xchg
sbb
add
out
and
lea
mov
mov
push
inc
pop
jne
push
int3
data16
pushf
cmp
lret
cli
movsb
xchg
inc
dec
and
cmp
xor
add
cmp
xchg
insl
incl
insl
lds
cmc
popf
out
shll
pop
mov
and
adc
pusha
jecxz
add
shll
pop
fbstp
imul
pushf
fisttpl
sar
aad
xchg
cmp
xor
jle
inc
jb
xorb
popf
push
jne
imul
pushf
daa
add
imulb
fsubr
je
imul
inc
loope
call
xchg
sbb
or
add
pusha
pop
xchg
stc
idivb
jnp
xor
and
push
ljmp
jmp
xchg
scas
mov
pusha
test
mov
addl
cwtl
pop
hlt
mov
add
pop
movsb
imul
dec
push
dec
jp
cmp
rcr
dec
ret
fcoml
add
xlat
stos
inc
mov
std
ljmp
xchg
jnp
jb
inc
mov
mov
ja
pop
insl
inc
jp
outsb
adc
pop
loop
lahf
push
pop
sub
in
mov
sub
inc
rcr
mov
inc
cld
aas
push
aas
mov
add
adc
pop
iret
stos
daa
and
mov
fs
iret
lahf
xchg
daa
jl
cmp
arpl
jbe
inc
mov
jl
test
push
test
lea
xchg
fcmovne
or
pop
test
or
xchg
ja
mov
xor
cmpb
mov
dec
out
mov
fdivrl
dec
int
pop
popa
add
or
call
inc
adc
and
inc
insb
loop
jns
and
sub
adc
cs
and
inc
in
les
fldcw
push
xor
xor
ficompl
jbe
xchg
stos
cmp
lcall
rolb
mov
sbb
or
cmp
xchg
loop
out
movsl
dec
andb
push
mov
jo
fbstp
ror
ja
push
jne
or
js
sub
cld
jno
cmp
dec
stos
imul
js
cmp
push
popf
pop
lcall
sbb
xor
stos
lock
inc
bnd
insb
test
mov
aas
pop
pop
mov
dec
test
and
mov
mov
adc
aad
dec
ja
and
mov
adc
mov
mov
daa
jp
enter
fwait
ja
inc
cs
push
sbb
jnp
mov
bound
push
sti
lret
aam
ds
cmp
xchg
lahf
xor
push
repnz
pop
imul
dec
mov
xchg
inc
mov
dec
xchg
orl
mov
mov
jne
insb
lahf
jns
push
mov
inc
push
push
inc
lret
stos
into
inc
pop
add
pop
shll
pop
ja
lea
fisubrs
mov
js
in
mov
jecxz
fnstenv
lret
test
das
fldt
and
loop
test
mov
adc
add
add
or
push
jmp
xchg
jae
jns
nop
sarb
mov
shll
sbb
push
push
sti
shl
xor
in
inc
add
sub
cmp
jns
movsb
icebp
out
cmp
mov
jle
arpl
sub
andb
sbb
cmp
std
cmp
sub
je
cwtl
ret
jg
cmp
sbb
js
aaa
and
fimull
imul
mov
dec
jge
inc
cs
fcompl
int
fisttpll
sbb
dec
add
sbb
cmpb
mov
or
dec
jecxz
stos
pop
mov
inc
mov
cmp
xor
sarb
cmpsb
lods
jmp
mov
lock
pop
loope
or
inc
or
pop
xor
out
lea
push
fmull
sbb
mov
cli
out
or
or
nop
ja
adc
jnp
add
int
mov
mov
sub
push
adc
xchg
jne
fcomip
insb
or
add
cld
xchg
stos
mov
push
xchg
dec
stos
ret
mov
cmp
push
mov
int
jg
jo
jle
leave
dec
xor
sbb
inc
in
jmp
mov
or
jl
pop
or
pop
into
or
push
fbld
xchg
mov
bound
sbb
mov
pop
ja
xchg
jns
cltd
pushf
push
inc
in
repz
cld
adcl
lods
pusha
xor
int3
loop
movsl
adc
mov
iret
mov
inc
stos
jbe
das
aam
pop
fmull
in
mov
xor
invd
add
xor
pop
pop
push
xor
mov
cmp
mov
pushl
mov
sbb
cmc
lds
sti
fs
inc
stc
push
push
cmp
cmp
in
shl
fnstcw
mov
push
mov
rcll
mov
mov
cmpl
jo
jmp
mov
and
pushf
leave
cwtl
mov
pmulhw
xor
cmp
xchg
addr16
cmp
mull
or
inc
imul
mov
sbb
xchg
mov
sahf
xor
pop
or
in
sbb
out
aaa
pusha
fwait
mov
xchg
jne
jge
mov
mov
push
lea
aaa
ja
or
mov
cltd
les
mov
cmc
adc
add
mov
repnz
call
dec
addl
test
xlat
push
test
aad
inc
pop
jno
mov
mov
cli
sub
adc
test
hlt
out
scas
sbb
xchg
pop
imul
mov
dec
cmp
mov
jmp
pop
push
inc
cld
inc
pop
fcomps
cmp
test
repz
rorb
test
daa
out
scas
mov
in
cld
add
and
add
rorb
mov
dec
jge
int3
inc
push
ds
dec
pop
xor
add
adcb
push
dec
mov
bound
dec
xlat
rcr
addr16
mov
imul
push
and
repnz
shrb
mov
push
xor
push
adc
push
jmp
cmp
lcall
arpl
push
gs
mov
mov
in
loopne
add
call
xor
ret
dec
fistps
or
gs
sbb
xor
sahf
out
sbbb
in
cmp
jge
mov
mov
mov
iret
icebp
test
test
xor
dec
fcmove
lods
fs
dec
mov
test
adcl
movsl
in
mov
shrl
es
call
arpl
ds
mov
sbb
push
dec
mov
inc
lret
inc
cmp
in
mov
outsl
push
mov
jp
popa
leave
mov
jg
mov
jns
mov
fidivrl
sub
stos
and
mov
out
sbb
cmp
xor
pop
fsub
sub
std
add
imul
mov
sub
aad
lods
lea
data16
aad
addb
movsl
lock
imul
cmp
fists
push
out
mov
xchg
mov
int
mov
and
fwait
jl
mov
inc
mov
adc
push
cwtl
in
mov
jo
pop
rcrb
push
jae
fisttpl
xchg
aaa
into
mov
inc
dec
iret
movsb
jnp
inc
xor
aas
movsb
pop
insb
mov
inc
fisttps
mov
lret
pop
inc
pop
mov
jecxz
xchg
fcomps
cli
incl
cmc
scas
push
popf
mov
int
cld
sub
and
mov
sbb
mov
rcr
rorb
and
loopne
xchg
dec
jns
mov
xor
or
mov
push
cmp
lods
pusha
lods
xor
mov
pop
cwtl
ret
and
push
into
jge
adc
insl
ljmp
adc
or
enter
imul
sub
call
loope
mov
movsl
inc
dec
add
inc
push
mov
call
add
mov
add
inc
jmp
dec
or
add
jl
or
popa
jno
mov
sbb
dec
adc
cmc
adc
pop
jne
dec
sub
add
std
cmp
pop
fnsave
fildl
inc
aad
loop
sbb
mov
lods
incl
jno
movq
inc
mov
test
pop
mov
mov
data16
mov
in
push
test
inc
fiadds
adc
pop
popa
pop
jno
jp
test
lea
daa
mov
imulb
shlb
pop
xchg
xchg
popf
adc
into
scas
sub
loope
gs
sbb
notl
cmpsl
cli
daa
push
jg
push
jae
xchg
sahf
pop
fisubs
out
aam
adc
es
lret
cmpl
repnz
cld
popa
cmp
xlat
sub
int
pushf
cld
sbb
dec
not
shrl
cmp
xor
loope
mov
nop
xor
loop
js
pushf
repz
jle
adc
cs
in
inc
jge
sbb
lock
xlat
mov
pop
jns
rorl
jae
scas
out
mov
mov
jns
mov
daa
add
gs
sub
pop
outsb
lcall
cmpb
xor
jns
mov
add
loopne
sbb
xor
stos
rcl
and
lret
test
stos
lock
or
movl
xchg
in
pop
xchg
xchg
loope
lds
and
inc
push
sbb
mov
sbb
cli
mov
or
inc
sub
sub
xor
cmc
or
jl
pop
pop
jno
repnz
ja
jbe
sbb
negb
out
clc
lods
cmp
mov
inc
sbb
cmp
pop
xchg
cli
aad
data16
pop
mov
out
pusha
pop
sbb
mov
dec
fstp
arpl
out
cmpsl
inc
cld
jb
sbb
cwtl
mov
push
les
or
xor
jns
sub
rcll
xor
loope
inc
sub
aad
adc
xchg
fisubl
sahf
or
cmp
dec
mov
dec
sarl
nop
lods
outsl
sti
leave
adcl
xor
insb
adc
dec
fidivrl
stos
nop
bound
sub
xchg
mov
mov
push
inc
pusha
pop
jne
jmp
pop
jb
test
outsb
arpl
pop
push
jecxz
fisttps
outsb
cmpsl
adc
cli
jle
or
sub
cmpsb
cmp
push
mov
aaa
mov
insb
inc
call
ds
test
sbbb
shrl
inc
add
sahf
in
push
sbb
xchg
jecxz
dec
ds
mov
daa
push
cltd
mov
lcall
fsubl
add
sbb
mov
cli
xchg
andl
push
fxch
mov
inc
cmp
cmpsl
jbe
mov
push
fdivrs
add
inc
lret
xorl
lahf
push
mov
dec
cmpsb
mov
xchg
call
aas
popf
cltd
mov
movsb
sub
cli
notl
pop
das
pop
outsb
outsl
sbb
dec
daa
sbb
fwait
out
sub
pusha
aas
rorl
lret
dec
stc
adc
dec
jnp
xchg
and
inc
testl
sub
pushf
mov
push
jl
test
pusha
sub
vmovq
and
add
or
dec
stos
divb
mov
add
hlt
leave
cli
aaa
add
mov
subb
cltd
out
or
inc
cmp
pop
mov
mov
test
sub
ds
sbb
xchg
movsb
sub
pop
ret
mov
andb
ljmp
adc
push
inc
mov
or
mov
pop
xor
cmp
lea
pusha
inc
aas
popa
loop
jl
stc
sbb
lcall
or
jecxz
outsb
jmp
fs
clc
dec
jmp
add
scas
or
jbe
jmp
pop
push
xchg
fsubl
dec
sub
js
les
fcomp
outsb
mov
sbb
sub
push
popa
loopne
loop
movsl
pop
push
jg
loopne
inc
in
sub
push
mov
sbbl
xchg
test
out
daa
pop
add
repnz
adc
xchg
inc
add
sub
mov
jo
movsb
xor
mov
icebp
pushf
inc
stc
xor
sub
int3
rol
repz
push
lods
mov
adc
push
mov
or
mov
nop
mov
mov
add
mov
lahf
push
popa
pop
mov
movl
int3
mov
stc
repnz
or
bound
inc
arpl
nop
push
dec
mov
sbb
orb
sbb
jmp
xchg
movsb
xor
test
pushf
cmpsb
jle
insb
outsl
test
stc
mov
out
inc
inc
pop
push
in
xchg
push
adc
sbb
mov
and
out
add
adc
push
std
ljmp
mov
ret
sub
sub
das
es
and
es
inc
push
std
cli
mov
test
scas
xor
pushf
xchg
push
sub
pop
cmc
pop
add
cmp
loop
cmp
adc
mov
in
out
sahf
fildl
cltd
cmp
push
mov
adc
and
loop
and
fadds
and
jns
jae
jl
punpckhbw
dec
adc
or
lret
sahf
pusha
xchg
jecxz
mov
gs
cmc
sbb
push
insb
mul
test
fisttps
das
jl
push
mov
rorb
in
insl
sbb
arpl
clc
jnp
outsb
and
push
mov
jae
test
mov
inc
fsubl
push
mov
sar
push
jecxz
sti
mov
sbb
xlat
loopne
push
cmpl
inc
dec
out
aas
in
test
xor
sbb
adc
mov
mov
push
testl
hlt
mov
mov
scas
insl
mov
or
jns
inc
mov
xchg
jp
and
fnstcw
pop
jo
dec
cli
fwait
sbb
subl
sahf
pop
movsb
stos
lods
int
push
xchg
mov
jg
xlat
jns
push
sub
stos
sbb
jp
cmp
jae,pn
outsl
xor
clc
ficoml
cld
sbb
adc
ljmp
pop
cmp
sbb
sbb
xchg
inc
aam
dec
test
lahf
fcoml
sub
xor
mov
jle
bnd
call
mov
adc
daa
pop
rolb
rcl
adc
sahf
pop
ds
test
sbb
sahf
push
lods
pop
insb
test
mov
sbb
lahf
mov
add
imulb
psubw
nop
lcall
mov
repz
inc
mov
mov
jae
imul
sbb
in
pusha
repz
outsl
add
add
ljmp
xor
cmc
aad
mov
shll
mov
push
dec
cmc
mov
das
test
wbinvd
pop
cld
mov
mov
pop
in
cmpsl
add
loope
in
arpl
test
imul
mov
mov
stos
sub
push
and
cmp
popa
es
mov
lods
push
hlt
loopne
mov
jle
in
cmpsb
sbb
sub
push
addr16
inc
popf
push
mov
adc
pop
lds
sub
xor
push
stos
mov
add
daa
dec
jo
sbb
xorl
js
sub
fmull
test
or
arpl
imul
cs
fdiv
ss
push
adc
mov
inc
je
mov
arpl
add
xchg
mov
div
fildl
in
movsb
decb
mov
xchg
or
add
rorb
pop
pop
icebp
decl
mov
data16
cli
ss
jae
mov
pop
imul
filds
gs
jbe
jge
stos
enter
and
push
and
cmc
sub
mov
cmp
ftst
inc
cmp
adc
in
bound
xlat
jbe
es
fisttpl
loope
push
cmc
cmp
jns,pt
cmc
fs
ljmp
push
test
inc
rcrl
sbb
pop
push
call
cmp
xchg
lahf
xchg
push
sbb
jl
hlt
lcall
aaa
push
jae
pop
jns
lock
incl
dec
out
cltd
in
movsl
insl
jp
pushf
call
mov
dec
adc
inc
jg
repnz
sbb
in
leave
jnp
push
loopne
iret
movsl
and
sub
lcall
lret
cmpsb
mov
inc
std
add
mov
ss
add
cs
sub
ret
dec
add
jae
or
aam
xor
sub
fst
addr16
sar
mov
jne
jle
insb
inc
jle
insl
fsts
jle
jl
mov
pop
or
xchg
out
fcmovu
mov
mov
rol
xor
mov
inc
and
mov
or
or
arpl
pop
movsl
shrb
nop
xchg
jbe
mov
sub
ret
scas
inc
stc
inc
repz
gs
fstp
mov
xor
push
cmpl
pop
jge
lods
outsl
sbb
int3
out
xchg
cvtps2pi
sar
aam
cmpsb
loopne
dec
inc
inc
and
mov
int3
inc
imull
sbb
or
adc
sbb
inc
xor
sub
sub
in
fwait
add
mov
popf
shrb
jecxz
sbb
mov
pop
lret
mov
jecxz
cltd
and
xchg
imul
and
jnp
jp
add
xchg
inc
test
mov
inc
mov
or
and
outsl
inc
xor
jo
das
shlb
dec
jo
push
dec
and
icebp
jmp
int
mov
movsb
add
test
sbb
mov
dec
adc
xor
and
dec
sahf
pop
pop
mov
les
loope
sub
jmp
sbb
dec
aaa
ljmp
in
iret
clc
dec
xchg
push
and
outsl
psraw
andl
dec
popa
and
mov
or
and
rolb
adc
jbe,pn
out
rol
lds
inc
or
mov
fsubs
je
or
fwait
push
test
push
mov
push
xchg
sbb
sti
xlat
cs
test
mov
sub
ja
mov
add
jmp
mov
shlb
repz
out
in
loop
pop
jg
test
stos
dec
jmp
add
pushf
clc
inc
lahf
jns
mov
mov
fsubr
mov
stos
test
imul
rcrb
fldt
and
in
cld
cmc
inc
arpl
and
jmp
ss
jecxz
pop
sahf
vmptrst
test
mov
das
mov
jle
jmp
cwtl
push
or
pop
or
in
nop
out
inc
divl
dec
pop
mov
fs
pop
shr
ret
into
inc
xor
adc
cwtl
mov
mov
fimull
ja
dec
sbb
dec
out
mov
pop
adc
push
mov
xlat
ror
jb
pop
push
lods
cmp
cmp
or
cld
aad
outsb
jge
xchg
repz
or
cmp
add
enter
jl
pusha
xor
popa
fcmovu
icebp
scas
test
pop
cwtl
push
cmp
enter
scas
loop
cmp
in
sarl
xchg
lcall
js
shlb
lret
out
mov
repnz
test
xchg
adc
xchg
fcoml
push
lcall
cli
push
jmp
loopne
inc
mov
lods
cmc
std
aaa
jp
test
push
test
test
mov
push
adc
inc
mov
pop
stos
ss
daa
jmp
mov
sahf
xor
pop
dec
add
or
mov
jp
jne
dec
mov
jnp
test
mov
in
sub
mov
repnz
inc
mov
das
and
push
mov
add
mov
jecxz
adc
push
xor
out
aam
enter
pop
stos
mov
lea
cmp
sub
mov
lea
sbb
xchg
in
push
sbb
xchg
pop
and
loope
in
das
pop
pusha
aam
sub
bound
out
mov
shl
push
negl
ficompl
dec
xor
leave
lea
shll
jns
sbb
xchg
jg
insb
mov
imul
adc
into
in
ljmp
push
xor
insl
sti
shlb
fcmovnb
push
daa
push
adc
mov
in
fmuls
sub
cld
loope
or
or
mul
sbb
mov
push
lahf
cwtl
int
stos
aam
adc
pop
xchg
and
dec
imul
adc
cmp
lahf
por
jge
rcrl
and
push
ds
lods
jl
loopne
push
addr16
sbb
inc
pusha
test
sbb
movsl
push
jae
sbbl
in
inc
hlt
mov
xchg
jg
lret
int3
pushf
aaa
popf
pushf
arpl
mov
mov
jno
bound
insb
mov
xchg
imull
push
dec
cmp
imul
adc
add
xchg
sub
ja
sbb
ljmp
sbb
sub
inc
test
sub
pop
push
inc
outsb
insb
xchg
mov
aaa
pop
mov
inc
xchg
and
jns
test
jae
nop
in
and
xlat
add
out
movsl
pushf
in
jns
jns
mov
imul
dec
imul
sub
in
cmp
sub
sbb
xchg
out
mov
jp
xor
pop
mov
aaa
mov
mulb
and
mov
jmp
push
test
decl
adc
xor
fs
sub
movsl
jns
push
jg
int
int
adc
sbb
into
pop
push
lret
pushf
inc
dec
sbb
les
cmp
fnstcw
and
adc
xlat
lret
jmp
stos
cli
out
inc
bound
sbb
ja
jno
bound
repz
mov
mov
xor
push
jae
mov
dec
iret
test
xor
fcom
idiv
mov
cltd
sbb
sbb
fistl
push
scas
ds
std
inc
cmp
hlt
and
leave
pop
or
iret
incl
pushf
jecxz
sbbl
orb
add
pop
fstpl
fmull
stc
icebp
mov
mov
inc
push
out
jb
out
ljmp
sub
sbb
dec
leave
pop
out
push
cmp
clc
lret
les
ret
xchg
xchg
fs
mov
jle
stc
or
sub
arpl
out
push
fimuls
mov
cmp
push
jae
pop
or
cmp
imul
pop
push
mov
sub
lret
cmp
mov
inc
jo
mov
pop
clc
shlb
das
xchg
push
dec
sahf
movsb
inc
testl
jns
bound
mov
xchg
in
pop
insl
cmp
in
mov
mov
fadd
repz
fcoms
test
mov
in
fwait
push
jmp
and
insb
scas
data16
aam
xchg
sbb
or
mov
jp
ja
ds
pop
hlt
sahf
xor
inc
sbb
sbb
test
test
or
incl
bound
aad
mov
sub
pop
fcmovbe
cmp
call
out
in
mov
mov
adc
lcall
xchg
inc
or
pop
repnz
rorb
xchg
add
dec
mov
push
xchg
fcmovne
push
and
ret
ljmp
popa
jl
test
adc
inc
fadd
add
add
mov
mov
mov
insl
stos
push
adc
out
add
imul
xchg
cmp
fsts
es
movl
dec
push
jae
int
push
sbb
push
jne
iret
or
rolb
jne
clc
jne
je
cli
lock
xchg
mov
mov
test
aas
fsubrl
pushl
mov
inc
mov
test
adc
pop
inc
subb
jne
iret
sbb
and
cltd
or
ss
pop
sarb
loop
inc
mov
mov
int
ret
adc
je
and
xor
or
sti
sarl
jb
jl
lock
push
mov
in
and
insb
adc
mov
xchg
into
mov
mov
insl
pushf
not
leave
imul
mov
xchg
jno
leave
insb
ret
fdivl
scas
imul
aam
pop
xor
fs
rorb
sbb
sbb
push
leave
ret
cmpsl
and
push
dec
push
push
hlt
push
lods
fs
bound
pop
fnstenv
jae
cmp
cwtl
ds
test
hlt
negl
jns
outsl
incb
imul
pushf
push
mov
test
int3
decb
pusha
rclb
das
dec
mov
mov
xor
sbb
push
mov
loope
jns
sub
insb
push
aaa
pop
int
and
out
call
xchg
movsl
pop
add
ja
sti
pop
sub
mov
movsb
pop
and
into
xor
mov
or
cmc
dec
xchg
pop
and
adc
push
dec
ficoms
adc
sbb
jle
jl
cltd
test
cwtl
outsb
jns
push
mov
sahf
cmc
mov
sbb
mov
push
add
mov
pop
xor
mov
out
test
adc
dec
dec
push
enter
fwait
adc
rclb
shlb
cmp
addr16
cltd
sbb
mov
fmul
add
pushf
lcall
data16
fcoml
andb
jge
cmp
push
xor
and
push
cli
sub
xchg
cmc
hlt
subl
dec
pop
adc
push
mov
push
mov
xchg
fsubl
insl
or
sti
or
jbe
sbb
fwait
cwtl
divl
adc
fisubrs
xchg
xor
pop
aaa
fistl
pop
and
add
sbb
pop
jo
cmp
arpl
mov
out
mov
mov
ret
and
and
xor
pop
jno
fimuls
mov
mov
in
mov
dec
xor
mov
mov
jo
xchg
stc
cmp
out
and
cmp
mov
repnz
js
adc
push
adc
adc
dec
lcall
pop
inc
mov
inc
testl
lods
mov
dec
les
push
and
mov
dec
inc
pop
jne
stos
insl
xchg
lret
lcall
loopne
jg
inc
lret
faddl
scas
inc
test
pop
stc
mov
jmp
pop
push
or
inc
sbbb
mov
jo
jnp
jge
push
jne
aad
dec
and
arpl
mov
xchg
adc
push
aam
mov
call
mov
ret
mov
dec
je
xchg
dec
push
lods
jns
fdivr
adc
stos
jbe
adc
aam
cmpsb
mov
add
int
jmp
out
cmp
lods
jmp
gs
sub
loopne
sbb
jns
fldcw
fisttpll
push
loop
cmp
xor
mov
test
mov
cmp
shl
nop
xlat
pop
mov
cmpsb
in
and
inc
addl
pop
enter
scas
jbe
add
leave
xchg
popa
pop
jnp
clc
scas
pusha
cltd
jl
sbb
jns
jo
xchg
mov
and
fmuls
cmpsl
push
jmp
dec
add
rcll
pop
leave
outsb
mov
cltd
mov
test
mov
xchg
mov
lods
pushf
cli
sbb
jns
dec
sub
int
dec
cmp
in
lahf
cld
adc
lret
cs
dec
out
pushf
and
or
sahf
scas
lret
add
sbb
cmp
mov
loopne
add
mov
xchg
xchg
cmp
cli
jne
xchg
jae
sub
les
ret
or
and
push
hlt
negb
mov
inc
push
leave
fcmovnu
jp
insl
or
mov
iret
ret
add
std
adcl
cmp
add
mov
xor
jle
ficoms
cmpsb
ret
fcmovu
pop
in
in
sub
scas
loope
push
pop
fisttps
loop
adc
and
fisttpll
lret
inc
or
rclb
dec
mov
jbe
cmp
int
push
sbb
sub
pop
nop
or
push
xorb
lock
int
fstps
mov
cs
and
rorl
stos
and
sub
ret
push
stc
negl
cmp
sbb
outsl
fistps
or
inc
fidivrs
mov
stos
popl
dec
mov
mov
cmp
insl
jge
not
gs
lods
outsl
sub
test
insb
hlt
adc
jge
dec
addr16
jmp
add
xchg
jl
ficoml
push
xor
jbe
iret
jl
mov
cs
orl
daa
mov
sub
insl
pop
ret
jg
sbbb
in
or
jg
sub
sub
push
jecxz
sbb
stos
std
aam
incb
mov
sub
dec
mov
iret
dec
pop
in
push
adc
scas
push
scas
lret
loopne
and
ret
and
cmp
and
and
out
inc
xor
enter
inc
jmp
xchg
inc
xchg
mov
fstl
sahf
lods
sub
xor
xorb
xchg
push
int
popa
mov
add
mov
dec
popa
inc
ficoml
mov
shlb
and
imul
daa
mov
cmp
js
rcrb
xchg
sahf
popl
adc
dec
inc
lcall
push
cmc
loopne
test
sbb
mov
icebp
popf
inc
lcall
pop
daa
jmp
push
repnz
gs
sub
popf
mov
aad
and
push
test
xchg
fdivl
insb
sub
mov
call
lret
sub
imul
addr16
mov
in
fs
mov
nop
std
jns
push
outsb
mov
mov
imul
sbb
stos
mov
jbe
cmc
clc
pop
inc
push
mov
push
enter
or
xlat
jmp
int3
in
repz
adc
mov
loop
pop
insb
dec
inc
cmp
adc
mov
fimull
add
std
popa
mov
fildl
aaa
push
rclb
push
loope
out
xor
sub
data16
sbb
and
ret
scas
rcrl
xorl
fs
pop
fisubrs
adc
inc
lds
sbb
addr16
sub
ret
adc
xchg
cmc
cmp
push
arpl
ljmp
sub
add
mov
xor
pushf
shlb
pop
mov
lock
adc
hlt
xchg
adc
dec
inc
pusha
in
lods
push
pop
push
cwtl
push
adc
movsl
notl
stos
lods
loopne
push
in
jle
rorl
mov
in
clc
push
or
lahf
loop
jne
add
sub
jle
mov
mov
jl
aas
push
and
push
int
push
add
xor
js
ret
mov
lahf
int
iret
mov
test
sbb
add
out
xor
push
push
jnp
jge
sti
hlt
push
out
fwait
add
in
mov
pop
scas
scas
push
push
fdivrl
aas
lret
das
inc
outsl
sbb
sbb
test
and
xchg
inc
cmpb
xor
pop
jl
mov
mov
cmc
add
or
idivb
xchg
and
dec
cli
sbb
sbb
outsb
jle
aaa
ja
jmp
test
shrl
roll
sbb
std
fdivs
push
dec
adc
inc
stos
cwtl
jo
pop
jecxz
fcompl
xchg
out
stc
push
fldenv
pop
pop
push
jo
shlb
xchg
ret
sbb
add
ja
pop
mov
push
fisubrs
dec
in
mov
xor
shl
xorb
cld
call
mov
xor
out
adc
mov
jg
mov
mov
adc
loopne
jl
out
lods
dec
inc
add
cli
xor
ret
sbb
cli
and
dec
xor
rolb
dec
stos
mov
and
cmp
dec
je
loop
add
sbb
call
push
ja
xlat
xor
dec
mov
lods
hlt
mov
sub
pop
mov
repz
or
and
jp
aaa
jns
or
add
mov
xor
mov
pop
xchg
sub
mov
cwtl
aad
xchg
mov
jle
sahf
lret
pop
pop
add
call
pop
adc
outsb
dec
inc
aam
inc
mov
push
ret
pmullw
jae
sbb
lds
pop
push
mov
sti
adc
mov
aas
jecxz,pn
jge
inc
jne
mov
iret
sub
cmp
fdivl
lea
push
cmpsl
adc
mov
push
xchg
and
pop
mov
fwait
jl
daa
loop
jb
pop
fidivrl
repnz
xchg
cltd
pop
dec
push
rcl
lahf
pop
ss
daa
out
and
je
repz
cmpsb
push
sbb
or
shlb
rclb
arpl
pop
mov
sbb
pop
mov
in
cmp
ja
sub
xor
sub
pop
jmp
adc
mov
adc
subl
daa
adc
dec
jmp
mov
out
add
pop
fimuls
xor
iret
orl
fld1
shll
sub
mov
sbb
sbb
cmpsb
push
mov
add
xlat
pop
xchg
mov
lret
push
ret
or
push
mov
js
xor
and
lock
fiaddl
cmc
push
push
add
xlat
clc
sbb
pop
cmp
sti
std
insb
pushf
push
adc
lcall
xchg
sahf
mov
mov
cmc
mov
in
pop
xor
fwait
jne
mov
push
or
add
idivb
cmp
inc
aam
test
aad
xchg
jl
lods
popf
add
add
dec
xor
dec
sbb
and
pushf
out
jns
test
aam
pop
imul
fsts
leave
sti
inc
in
dec
inc
push
enter
fdivl
xchg
aaa
adcl
fmuls
rclb
stos
sahf
rcll
xchg
leave
xchg
push
sub
call
js
push
jle
ljmp
and
repnz
call
pushf
mov
jnp
mov
inc
or
scas
inc
xchg
lea
andb
push
fidivs
cli
xchg
mov
pop
lods
inc
insb
mov
sbb
mov
push
cmpsl
lahf
adc
ja
int3
push
dec
adc
jg
pusha
sub
inc
nop
xor
notb
cmp
js
jns
daa
mov
fwait
jl
test
jo
outsl
arpl
push
add
imul
call
mov
sti
xor
loope
lret
rcr
cmc
and
fdivrs
stos
sbb
jns
jns
call
or
std
mov
and
xchg
sahf
pop
adc
cmp
push
and
mov
dec
enter
andb
inc
mov
jns
imul
adc
stos
insl
iret
add
movsl
pop
mov
insl
lcall
pop
adc
add
jge
add
pop
jg
or
ja
dec
push
jns
lds
andb
aaa
mov
sub
loop
aas
mov
shll
sub
dec
arpl
push
aam
js
xor
outsb
xchg
loopne
ror
mov
nop
int3
jne
and
out
adc
fwait
shr
adc
jb
lcall
mov
sub
int
inc
outsb
jno
aaa
ljmp
nop
jno
les
pop
pop
adc
add
adc
add
mov
lahf
hlt
cmp
adc
or
xchg
xlat
shlb
inc
cmp
jb
loopne
outsb
popf
cmp
xor
call
in
into
sub
js
mov
mov
jns
mov
mov
lcall
xor
pop
cmpsl
mov
pop
mov
test
mov
pusha
jmp
and
js
dec
mov
add
mov
and
jbe
jae
xor
xor
and
xor
ljmp
inc
inc
mov
test
cmp
das
popa
xor
add
or
das
sbb
cmp
adc
cs
ffree
arpl
cmp
sbb
aad
pop
popa
aaa
pop
int
repz
mov
mov
inc
jns
and
push
jno
fs
stos
in
xor
and
or
push
fwait
sbb
mov
cmp
rorl
mov
dec
xchg
and
xorb
mov
sub
mov
xchg
cmp
fldcw
push
fwait
aad
cld
loopne
into
add
sbb
push
cmp
pop
mov
stos
mov
movsl
mov
pop
shll
and
stos
inc
movsl
shl
inc
xor
mov
cmpsb
lcall
add
pop
mov
mov
inc
fisubrl
shrb
clc
lock
and
sub
mov
ret
adc
add
daa
inc
mov
inc
add
inc
sbb
sbb
imull
mov
push
cld
movsb
test
cmp
inc
roll
add
xchg
jae
ja
adc
sti
mov
lahf
pop
xlat
pop
mov
fcomi
dec
das
sbb
push
movsl
add
push
inc
pop
in
xor
push
xchg
inc
inc
mov
sub
push
or
inc
inc
mov
mov
add
mov
sub
cmpsb
loop
cmp
test
xchg
and
jl
loopne
jecxz
push
shufps
cmp
and
xchg
inc
inc
jb
clc
loop
cmovo
xchg
roll
in
test
xor
mov
sbb
mov
jnp
sbb
jae
xor
xlat
or
jl
sub
movsb
push
xchg
shrb
xchg
aam
xlat
jmp
pop
shrb
jbe
aam
and
fs
xchg
adc
mov
add
pop
push
mov
cltd
sahf
dec
push
jge
test
pop
data16
or
pop
cltd
addb
enter
fs
pusha
pop
adc
pushf
add
arpl
outsl
mov
hlt
xchg
mov
aaa
js
push
lea
shl
mov
mov
mov
mov
dec
cmp
push
imul
or
fst
leave
cmp
adcb
mov
loopne
pop
adc
pop
scas
and
push
ljmp
inc
lret
call
fdivr
in
xchg
idivl
push
cli
std
mov
cli
aad
sub
rcr
jp
xlat
push
aad
mov
or
mov
adc
push
sbb
pop
sub
aam
int
dec
sbb
pop
ja
imul
nop
mov
or
lds
std
out
push
dec
sbb
fwait
jp
mov
push
xchg
rcrl
in
fwait
pop
enter
mov
imul
xchg
outsl
mov
repnz
mov
xor
imul
bound
rorl
hlt
sbb
inc
pop
lret
jp
jbe
das
js
xor
pop
addr16
xchg
jbe
test
push
xor
sahf
repz
andl
mov
clc
stc
jb
add
xorb
addr16
mov
mov
fldt
imul
xor
xor
push
mov
in
jns
fdivs
insb
std
iret
test
add
nop
sbb
sbb
mov
les
jb
fstpt
or
adc
mov
inc
jecxz
inc
les
inc
push
ss
mov
rcrl
mov
adc
inc
mov
xchg
mov
dec
faddp
mov
idivb
and
push
and
mov
cmp
fcoml
mov
ret
pop
outsl
jnp
fdivs
inc
xchg
out
xchg
and
inc
push
mov
inc
jle
pop
scas
cmpsb
adc
or
add
xchg
lea
in
xchg
fndisi(8087
rol
nop
lret
jle
sub
or
fwait
mov
cmp
ret
inc
cmpb
adc
inc
imul
das
aad
jb
testb
popa
or
mov
jb
rcll
pop
mov
sti
or
push
mov
imul
addl
jno
fbld
roll
bsf
test
xchg
loopne
mov
leave
push
mov
adc
sbb
pushf
insl
lea
inc
mov
dec
cmc
pushf
shl
mov
aaa
sub
lcall
xchg
push
stos
scas
mov
aad
dec
adc
adc
cmp
daa
mov
iret
push
fstl
into
imul
js
stos
pop
push
loopne
pop
adc
mov
or
xor
or
xchg
or
or
inc
call
ficoms
nop
xor
fwait
push
leave
adc
int3
into
sub
movsb
xchg
arpl
scas
test
dec
adc
mov
popf
jne
decl
mov
add
xor
push
pop
out
ret
sub
ret
mov
sbb
mov
mov
or
mov
mov
push
sbb
add
pushf
cs
push
clc
mov
es
addr16
cwtl
adc
cmp
outsb
retw
icebp
scas
xchg
or
inc
pop
xor
xor
lds
nop
dec
push
fs
mov
iret
jns
and
stos
and
aam
mov
js
sub
dec
stos
xor
sahf
jmp
sub
inc
cmp
lods
fmuls
insb
push
mov
adc
or
mov
jmp
dec
xchg
mov
imul
arpl
adc
inc
mov
stos
pop
mov
pop
sbb
cmpsb
jl
and
fstpt
fcomp
ret
imul
or
push
dec
aas
fisttps
push
xor
les
out
out
iret
xor
not
mov
push
xor
jne
rcrb
movsl
xor
popa
and
aam
mov
cld
test
fadd
lods
int
out
fs
jge
fucompp
mov
dec
lock
adc
xchg
sbb
inc
sarb
sbb
in
mov
lahf
insl
imul
loop
movsl
sub
aaa
xchg
aam
lods
adc
xchg
jge
sbb
and
test
push
test
subb
and
sbb
dec
xchg
jge,pt
gs
andb
jmp
add
mov
xor
outsl
outsb
pop
jmp
call
mov
sti
int3
mov
cmp
out
loopne
cmp
mov
and
cld
das
hlt
lods
and
jno
outsb
pop
xchg
aas
mov
dec
int
cmpsl
pushf
jae
out
or
lea
inc
cmp
push
mov
loope
sbb
vmwrite
cs
lcall
pushf
mov
xchg
dec
in
dec
popa
in
mov
xorl
sbb
call
jae
mov
fcoms
bound
mov
xor
push
mov
cmp
lock
leave
loope
mov
les
add
sub
cmp
hlt
scas
lods
mov
repz
fs
rcrl
xchg
std
addl
sbb
in
test
hlt
xor
dec
xorl
sbb
dec
cmp
adc
sbb
adc
cmp
jp
jo
push
lds
add
shlb
sbb
push
pop
mov
outsb
lret
dec
mov
push
sahf
push
xchg
jbe
dec
leave
xchg
lea
mov
es
cli
mov
das
dec
or
xchg
dec
fidivs
decb
lods
cmp
ljmp
cmp
js
xchg
add
pop
inc
cmp
jmp
ret
int
xor
data16
jmp
and
out
jg
mov
pop
stos
popf
xor
ljmp
push
daa
dec
lock
rorl
ljmp
dec
push
pop
imul
popa
dec
pop
popf
adc
or
xchg
mov
repnz
xchg
xor
scas
xor
mov
addr16
cs
and
loop
fisttpl
call
rorb
and
mov
test
dec
out
stos
cmpsl
cltd
sbb
aam
adc
dec
aas
iret
sbb
mov
cmp
cs
lods
movsl
js
nop
sbbb
aas
sub
cmp
or
sbb
cld
mov
je
adc
dec
push
sbb
fsubrp
shrb
test
adc
adc
bound
scas
test
xchg
jb
sbb
push
adc
mov
push
xor
xor
xchg
cmp
gs
cmp
ja
sbbl
negl
out
aas
and
jns
addb
adc
xchg
push
dec
ja
xchg
inc
or
sbb
inc
icebp
lods
gs
pusha
fadds
push
popf
xchg
mov
mov
aas
ja
sub
xor
xchg
pop
push
insb
jecxz
pop
cmpsb
jno
sbb
in
cwtl
insb
pop
movsl
js
movsl
jmp
lcall
pop
ret
inc
daa
dec
sti
loope
add
lahf
popf
jnp
xchg
aad
cmc
testl
or
aam
and
jp
cmp
mov
pop
fsubrl
call
xchg
dec
jmp
jp
mov
cwtl
icebp
push
dec
jp
fs
add
out
in
mov
fistps
pop
sarl
sbb
nop
push
xchg
rcll
sub
aam
pop
and
add
cmp
cmp
cmpsl
jl
push
mov
into
adc
movsl
sbb
sahf
xor
pop
jl
popa
lret
xchg
scas
loopne
pop
arpl
adc
call
nop
pop
jp
cltd
adc
or
arpl
insl
scas
nop
pop
hlt
mov
jecxz
mov
xchg
addl
pop
dec
stos
xchg
jne
and
push
and
fmull
aas
cmp
dec
and
lcall
pusha
aam
push
sahf
pop
arpl
or
mov
into
push
jg
sbb
xor
mov
es
icebp
rolb
fs
or
rcr
xchg
out
int3
std
cltd
inc
mov
dec
cli
pop
lods
mov
std
pop
jge
repz
data16
xchg
fdivl
sbb
out
dec
xchg
cmc
pushf
sbb
lea
cmp
shl
dec
pop
outsb
fnstcw
fwait
or
mov
push
and
xor
cmp
test
fnstsw
xchg
xchg
cmp
movsl
adcl
mov
aad
insb
mov
test
lock
inc
shll
popa
stc
loop
xchg
scas
sbbl
push
testl
movsb
xor
pop
jg
in
ficompl
add
push
adc
in
xor
mov
and
daa
sbb
pop
test
stos
mov
lret
and
sbb
icebp
pop
sbb
rcrb
outsl
out
pushf
gs
cs
aam
ficomps
cwtl
cld
lods
dec
push
loop
xor
mov
int
pop
adc
insb
add
cs
sub
imul
dec
repz
int
add
test
push
add
jne
adc
cld
dec
or
leave
test
sub
push
sub
and
sub
mov
pop
fwait
mov
sbb
gs
mov
dec
lds
mov
icebp
xor
adc
jne
inc
sbb
add
sub
push
add
mov
mov
inc
shll
jne
andl
mov
subb
pop
adc
push
rcrb
les
aaa
loope
mov
sbb
jnp
sub
adc
ficoms
pop
loopne
mov
push
mov
cmp
sti
push
xchg
and
push
cmp
cltd
subb
dec
mov
stos
jmp
jae
mov
bnd
mov
xchg
out
cmp
inc
addr16
fidivrs
push
test
daa
jle
inc
mov
imul
aam
push
jmp
in
adc
add
mov
movsl
hlt
cld
jmp
pop
scas
adc
sub
rol
jge
sub
mov
in
fdivs
vmptrst
nop
clc
dec
jg
xchg
iret
test
mov
mov
rol
iret
mov
xor
icebp
xor
out
jp,pt
icebp
daa
test
nop
sbb
or
popa
icebp
jle
push
fldt
icebp
xor
ljmp
mov
push
jnp
lret
test
js
out
shlb
fistpll
push
or
inc
addr16
push
pop
xchg
sti
fsubrs
mov
data16
jnp,pt
push
fldenv
push
loop
dec
js
popf
or
jge
adc
and
stc
xchg
jecxz
cs
mov
call
scas
cmc
out
jl
lret
sub
pop
movsl
cmpl
icebp
xor
fadds
ret
inc
sub
xor
xchg
das
cmp
stos
sub
out
mov
aad
imul
or
mov
ljmp
in
cmpsl
or
pusha
cli
lods
fucomip
jle
dec
adc
jp
sahf
and
bound
rolb
sti
call
int
jnp
pop
inc
arpl
cmpb
loope
and
add
jmp
xor
icebp
orl
test
push
mov
mov
stos
aas
pop
mov
jae
mov
sub
mov
andl
jne
mov
cwtl
mov
dec
cs
icebp
in
mov
and
aam
inc
dec
push
dec
dec
inc
jle
sub
addr16
cmc
in
mov
cmp
pop
cli
sub
cmp
adc
sub
push
arpl
fstpl
push
fucom
shll
loopne
ss
and
cs
jp
test
adc
stos
in
addr16
xchg
lret
or
mov
adc
cmp
loope
cmp
in
outsb
xchg
or
fcompl
test
pop
or
iret
aad
sub
or
or
xchg
loopne
or
mov
fsubrl
cmpb
jg
ljmp
in
lods
inc
or
jns
repz
push
adc
jno
dec
dec
aaa
rclb
loop
test
out
or
mov
ja
mov
insb
call
sub
shr
sbb
out
icebp
xchg
mov
cwtl
outsb
incb
mov
rcll
cmp
push
adc
orl
mov
mov
inc
imul
pop
loop
pop
mov
dec
cltd
cmp
sti
cmp
jmp
outsb
adc
int3
cld
cltd
jmp
gs
and
lcall
loope
sub
push
add
jns
add
mov
ds
xchg
mov
xorb
or
in
iret
test
test
jl
jbe
mov
rorl
out
les
in
xchg
sarb
jge
lods
sbb
jno
sbb
mov
mov
fwait
xchg
xor
sbb
fs
mov
lahf
pop
sarl
stos
mov
add
sahf
push
mov
xchg
arpl
sub
aad
imul
cmp
sbb
and
mov
jecxz
and
push
popf
lret
adc
int
jo
xchg
or
cmpb
out
inc
shll
inc
cmp
call
sbb
fidivrs
adc
popf
jl
inc
add
cmp
xor
js
mov
jnp
sub
outsb
lods
xchg
xchg
or
fsubs
jmp
jae
cmp
inc
roll
pop
lcall
movsl
sbb
mov
add
pop
mov
into
cmpsl
loop
adc
sub
loop
fs
insb
cld
jecxz
inc
aas
nop
shlb
inc
inc
mov
dec
rcr
in
mov
and
xchg
ja
adc
push
lods
aas
inc
lret
stos
jbe
cmpsl
adc
or
jns
sbb
jecxz
mov
jbe
mov
movsb
pop
add
mov
ret
imul
jecxz
das
push
dec
add
adc
cmp
mov
inc
jns
lahf
loope
sahf
hlt
loop
jle
push
and
adc
pop
and
rcrb
xor
add
inc
out
push
or
mov
sarb
and
shrl
jno
lods
lock
call
adc
mov
add
lahf
out
fs
cmp
cwtl
movsl
inc
sub
lahf
jae
and
out
dec
jp
cmp
movsb
fstpt
mov
inc
sti
sbbl
inc
sub
mov
jp
mov
fidivrl
push
or
jae
cmp
inc
jecxz
lea
pop
mov
mov
repz
jp
sbb
and
bound
cli
sub
jmp
das
cmp
in
lcall
inc
out
push
jae
adc
sub
hlt
imul
ljmp
fdivs
lcall
imul
or
in
out
pusha
pop
insl
in
pop
cmp
stos
std
lods
mov
test
out
xchg
sahf
lret
lods
imul
out
sub
loopne
mov
push
adc
push
rorl
lock
or
add
push
imul
pop
frstor
je
or
repnz
push
sbb
or
push
xchg
push
test
loop
into
and
mov
sub
xor
and
inc
jbe
xchg
mov
sub
arpl
movsl
addl
in
jnp
mov
sar
clc
loop
js
notb
outsb
fildll
dec
je
ret
dec
push
aam
andb
in
divl
jnp
lods
adc
pop
popf
add
mov
imul
pop
push
rclb
jp
cs
subl
mov
stos
adc
sbb
xchg
add
out
push
data16
sub
mov
push
movsb
mov
cmp
lods
and
in
movsl
mov
pop
daa
bound
and
mov
or
test
mov
sub
bound
push
in
mov
mov
test
je
cmp
pop
jmp
add
mov
add
mov
data16
cltd
scas
inc
push
mov
adc
mov
ds
xorb
mov
mov
cmpl
cltd
das
xchg
aad
adcb
stc
aaa
mov
pop
fisttpll
xchg
sbb
jne
sarl
sar
notb
ret
mov
daa
test
enter
mov
vfnmadd132sd
mov
lretw
sahf
xchg
jl
push
mov
push
scas
xchg
test
inc
jg
jae
lods
or
loop
push
aad
sti
mov
jp
push
loope
neg
mov
aad
sbb
mov
jg
mov
mov
pop
inc
fdivrp
cmp
subl
mov
in
inc
mov
mov
push
jmp
and
stc
or
push
push
xchg
sub
fsubl
add
xchg
popa
scas
sbb
push
popf
add
out
fsubr
idivl
pop
cmpsl
flds
lret
inc
dec
add
int
adc
and
mov
push
repz
not
rolb
aaa
mov
test
lcall
cmp
xchg
inc
bound
xlat
mov
sbb
test
fwait
sub
into
mov
outsl
outsb
add
inc
movsb
dec
xor
xchg
rclb
fisttpll
out
dec
loope
loope
aaa
nop
pop
mov
or
and
mov
loopne
leave
iret
push
sbb
enter
mov
push
and
cmp
or
imul
jnp
imull
pop
nop
mov
xor
xchg
xchg
add
rol
jo
xchg
mov
dec
push
jecxz
cmp
lock
xor
jmp
lds
sbb
mov
cmpsb
or
mov
fnsave
out
cli
mov
pop
xchg
shl
xchg
pop
pop
jge
movsl
pop
sub
sarl
pusha
lods
and
sub
movsl
test
lock
leave
lods
inc
xor
in
lea
sti
ficompl
jmp
ficoml
cld
dec
outsl
mov
mov
lret
ss
popa
xor
push
pushf
pushf
cmpsb
mov
in
test
cmp
and
stc
icebp
aam
xchg
fmuls
not
inc
xchg
sbb
out
mov
das
dec
jb
stc
js
inc
sbb
pop
dec
mov
push
pop
cmp
and
int
out
out
adc
lret
lods
aas
jl
lret
fs
jg
dec
lcall
stc
aad
ljmp
lods
call
mov
fistps
out
fildll
sbb
cmp
mov
jp
jecxz
push
loope
scas
loope
dec
mov
inc
sbb
test
and
ss
pop
negb
sub
lret
jmp
fcoml
push
lock
jnp
scas
pop
adc
or
out
hlt
fwait
mov
dec
hlt
enter
negl
xor
scas
inc
cmpb
fs
scas
cmpsl
push
movsw
mov
andl
and
mov
and
ljmp
push
inc
jb
dec
mov
pushf
mov
pop
mov
jnp
jecxz
jecxz
lds
jecxz
clc
pop
mov
lods
mov
arpl
loop
xor
fdivr
shlb
push
pop
sti
test
push
cltd
leave
lock
stos
rorb
adc
pop
xor
bound
lret
sbb
mov
stos
push
jae
sub
outsb
loop
mov
mov
cmp
xchg
jae
mov
sbbl
ds
dec
in
xchg
xor
dec
mov
lea
and
orb
pop
arpl
push
cmp
xor
movnti
dec
or
push
pop
rcll
stc
dec
mov
push
decl
push
fstps
mov
das
or
jmp
mov
and
jb
ficomps
sbb
xchg
pop
rorl
dec
add
mov
out
mov
sbb
jno
mov
faddp
push
sub
lret
sub
sbb
jl
jbe
in
pop
or
into
sbb
sbb
dec
ss
sub
je
pop
add
or
imull
and
and
fcomps
sub
call
lds
fisubs
mov
repnz
lcall
xchg
mov
mov
xchg
arpl
mov
mov
lds
out
inc
enter
arpl
add
mov
sbb
push
aad
sub
sti
adc
enter
popf
or
jb
adc
mov
dec
inc
sti
adcl
mov
and
jbe
adc
scas
jo
gs
frstor
mov
pop
jnp
sti
lea
fiadds
scas
jne
add
xchg
mov
sbb
les
add
cmp
outsl
cmp
outsb
loop
mov
push
mov
pusha
mov
aas
cmp
andl
ja
xchg
jo
fs
je
xor
gs
xchg
pop
lods
cmp
pusha
inc
or
add
push
or
dec
das
clc
rcrl
pop
pusha
ds
pusha
mov
cmp
xorb
int
idiv
jno
lahf
pop
jo
sub
loopne
imul
ljmp
xor
xchg
jmp
inc
mov
jmp
ds
filds
jge
mov
std
xlat
push
inc
mov
test
adc
sub
loop
adcb
sarb
loop
mov
mov
inc
xor
sub
daa
adc
inc
out
enter
mov
int
cmp
jbe
add
and
outsb
sbbl
fwait
xlat
into
leave
leave
stos
lcall
aam
dec
dec
sbb
xchg
push
sbb
aas
pop
adc
inc
fstpl
cmp
outsl
fsubrl
test
dec
movsl
jnp
mov
adc
outsb
lods
inc
sahf
inc
cmp
xor
jae
cs
mov
test
adc
pop
shr
sbb
and
dec
push
lret
and
xor
mov
out
mov
jnp
test
insb
subl
adc
cltd
xor
rorl
add
mov
and
pop
adc
or
rolb
enter
das
shll
xchg
pop
pop
rclb
push
shr
and
repnz
je
lret
lods
mov
push
mov
adc
mov
mov
bound
cmp
cmpsb
in
scas
rorb
negb
cmp
repz
outsb
aad
loopne
jno
subl
fidivs
mov
cli
mov
and
fwait
jg
and
dec
sub
repnz
and
adc
xchg
add
hlt
mov
pop
stos
or
jns
inc
popa
xor
in
inc
and
mov
sbb
push
xchg
pop
or
stos
fwait
loopne
sbb
xor
mov
sub
add
pusha
dec
pop
xlat
dec
scas
adc
cmp
xchg
mov
adc
push
lret
and
jns
lock
inc
push
cmpb
daa
cmp
cmp
xchg
imul
pushf
xchg
xchg
sahf
or
push
ja
scas
call
and
jne
inc
mov
xchg
lcall
inc
jo
outsb
push
in
mov
fs
jno
pop
sub
pop
cltd
int
sbb
pusha
xor
loope
mov
leave
jp
sti
int
rclb
or
fistpl
mov
sub
mov
out
pop
arpl
pop
lret
mov
xchg
sbb
fdivs
cmp
in
enter
jo
sub
fimull
mov
aaa
jno
js
in
dec
push
sbb
les
iret
lock
sub
inc
mov
in
mov
fnstenv
stos
rol
cmc
std
and
ds
or
push
inc
cmpsl
xor
out
repnz
sti
sti
outsl
rcll
mov
sub
mov
mov
jnp
pop
out
or
jp
or
mov
xchg
inc
add
scas
xor
and
xchg
cmp
mov
or
cmpsb
arpl
pop
cmp
pop
fs
sub
popl
pop
sbb
daa
xchg
add
mov
stos
ja
sbb
dec
bound
pop
pop
cmp
push
inc
rorl
popa
stos
mov
mov
mov
push
sbb
addr16
xchg
movl
shll
push
sub
enter
push
and
clc
xlat
and
or
int3
fs
pop
adc
adc
adc
movsb
fs
pop
xor
add
movsl
sbb
sub
dec
lahf
fsubs
pop
sub
pushf
pop
cwtl
iret
mov
cmc
int
sub
jge
pushf
mov
add
and
or
dec
ja
xlat
dec
test
cli
addr16
insl
dec
inc
int
fs
xor
xchg
clc
xor
cmp
push
imul
mov
lcall
js
dec
bnd
and
popa
mov
xchg
outsl
adc
mov
push
cmp
cwtl
in
ret
dec
mov
add
cli
adc
ficomps
xorl
or
fnsave
cmp
xlat
push
push
jo
and
lock
shlb
notb
data16
sbb
sub
cmp
push
xchg
pop
fimuls
jno
lret
add
sub
inc
mov
dec
pause
pop
xchg
dec
dec
xlat
into
mov
adc
in
ljmp
push
sti
addr16
pop
push
shrl
xchg
mov
negb
in
xchg
mov
cmpsb
in
inc
pop
mov
fdivrl
jb
mov
mov
jle
mov
das
inc
insb
xchg
add
les
mov
cmc
dec
inc
jl
fwait
cmp
mov
mov
xchg
movsl
push
repz
repz
push
mov
sub
cs
insb
sbb
pop
mov
lret
shlb
or
lcall
push
sub
test
xchg
jns
jb
aad
in
dec
mov
out
lret
cmpb
add
imul
jnp
mov
inc
jb
pop
inc
aad
xor
data16
out
pop
in
les
jecxz
lea
adc
ja
call
push
decl
imull
adc
lea
rcrb
or
inc
mov
scas
cltd
imull
push
data16
mov
sahf
lods
outsl
cmp
mov
imul
scas
jo
popl
mov
inc
sbb
out
in
popa
cmp
insl
cwtl
ds
mov
mov
outsl
mov
mov
mov
or
xchg
push
jno
loopne
andb
iret
and
pop
mov
into
lcall
mov
in
adc
xchg
out
mov
enter
push
adc
lcall
sbb
push
xchg
push
jne
lods
arpl
test
popf
mov
icebp
cmp
inc
jnp
dec
push
fsubrp
stc
mov
xchg
dec
xchg
mov
mov
mov
pop
rorb
mov
icebp
sbb
lea
inc
xchg
xchg
mov
fucomip
arpl
jg
gs
jl
mov
sbb
mov
in
dec
shll
inc
push
dec
mov
pop
or
mov
fwait
mov
mov
cld
jp
movsb
pop
inc
out
sub
cmp
aam
push
int3
bound
iret
fucomp
pop
mov
lods
adc
xor
int
js
fisubrl
and
into
dec
sbb
lea
push
and
and
push
mov
inc
pop
cwtl
dec
sbb
lea
rcl
into
jnp
push
mov
push
inc
fwait
aam
jl
fbld
arpl
cmp
xchg
test
and
lds
icebp
out
add
mov
popf
ror
pop
dec
jae
or
jbe
jo
test
sub
xcrypt-ofb
cmpsl
push
outsl
test
cmp
sbb
cmp
xchg
sub
imul
push
ljmp
jmp
insl
dec
mov
aas
mov
into
mov
bound
testl
nop
pop
popf
fiadds
movsb
gs
cmp
add
sarb
mov
jbe
xor
ret
ljmp
aad
cwtl
dec
mov
add
adc
shl
mov
nop
jge
nop
mov
lock
mov
inc
pop
or
pop
push
adc
push
arpl
pop
gs
push
loope
decb
xchg
bound
pop
adc
cwtl
cltd
in
aas
jle
fisubs
mov
mov
push
mul
inc
aas
movsb
cmc
mov
arpl
jb
pop
pop
cmp
and
lcall
movsb
into
shrl
pop
imul
adc
in
icebp
ret
fldl
jle
aas
mov
leave
out
mov
sub
pop
push
dec
iret
inc
movsb
test
cmp
push
inc
add
mov
jecxz
je
rorb
stc
in
adc
scas
push
add
addr16
xor
mov
adc
test
inc
out
shrb
dec
iret
lods
xchg
push
test
inc
mov
push
int3
data16
xor
add
sbb
or
addr16
lahf
ret
push
cmc
ss
adc
push
popa
cmp
xor
daa
es
sub
xor
cmp
cmc
test
loope
scas
pop
das
cltd
ret
push
test
and
adc
popf
mov
out
jb
and
fs
push
push
mov
pop
jle
mov
push
nop
inc
ds
outsb
add
push
jecxz
mov
nop
shl
nop
push
inc
jge
pushf
shll
arpl
movsl
sarl
iret
sar
dec
mov
mov
fwait
and
test
mov
ret
dec
xor
mov
arpl
add
adc
in
cmc
jp
push
lcall
sbb
jne
cwtl
xchg
cli
ljmp
xchg
sbb
scas
cmc
adc
push
and
popf
push
sbb
inc
push
inc
dec
addr16
xchg
shll
cwtl
sub
xchg
push
loopne
clc
cmc
popa
mov
idivl
mov
fstpt
fadds
and
nop
hlt
cltd
leave
fucomip
push
shlb
mov
je
add
loope
mov
jae,pn
xor
repz
xchg
mov
jge
arpl
sahf
clc
es
and
sub
xor
into
sub
rcr
sub
aam
push
sti
jmp
lret
lcall
pop
pop
push
and
fiaddl
sarl
test
loop
repz
out
ljmp
repz
adc
sub
fimull
lods
out
sti
cmpsl
pop
jmp
mov
xor
pop
xchg
jmp
push
movsl
push
scas
mov
jmp
sub
push
adc
movsl
mov
sarl
movsb
out
sub
loope
fs
repnz
push
xchg
pop
add
xchg
push
sbb
dec
sub
cmp
fdivs
or
imul
aad
cwtl
es
mov
mov
outsb
dec
ja
mov
xchg
inc
jge
xchg
push
insl
mov
sub
loopne
iret
pop
insl
sbb
fldl
cmp
dec
xchg
mov
movsl
aam
xchg
push
jecxz
jbe
mov
mov
pop
fucomip
mov
sbb
ret
pop
mov
outsl
sub
lods
fwait
cltd
xchg
addr16
sbb
mov
data16
xchg
ss
push
bound
cmp
mov
loop
sarl
stc
mov
in
sahf
fsubs
lods
adc
pop
icebp
icebp
imul
out
repnz
or
popa
inc
imul
add
cmp
out
into
jle
rorb
hlt
das
jo
and
pop
bound
push
pop
test
aaa
mov
imul
dec
fisubrs
aam
mov
pop
into
aaa
inc
jb
pop
jge
pop
cli
fwait
out
pop
test
cmp
scas
xchg
add
xchg
addr16
repnz
jo
jno
in
pusha
xor
test
lret
addr16
shlb
addr16
mov
pop
mov
aad
push
jl
pop
xchg
shr
xchg
cltd
sub
dec
add
dec
mov
mov
mov
lock
outsl
mov
add
insl
loop
pop
mov
add
in
testb
sub
and
mov
fcmovnu
jg
xchg
jecxz
ljmp
jnp
cltd
fucomi
enter
xor
jmp
test
pop
jmp
cmp
add
fstl
rcll
aam
sbb
jbe
leave
stc
shlb
cmp
icebp
xchg
push
xor
push
cmp
xchg
or
sub
ret
push
and
dec
mov
cs
outsl
cmpsl
fcmovnu
lcall
into
sub
cmp
aaa
push
mov
push
sbb
pop
jnp
hlt
into
es
dec
add
xor
jbe
jl
jp
mov
xchg
xchg
out
mov
dec
mov
mov
loop,pn
enter
int3
decl
popf
sbb
adc
mov
mov
mov
or
xchg
sub
xchg
pop
sub
out
hlt
mov
lcall
test
iret
insl
push
fsubr
lods
pushf
jo
fwait
leave
cli
add
fucom
inc
xchg
std
test
test
inc
aas
das
pop
lods
jg
dec
daa
mov
dec
pusha
pop
out
xlat
pop
mov
xchg
je
jnp
inc
movsb
xor
mov
push
mov
or
cmp
push
rorb
cmpsl
push
imul
dec
sarl
insl
js
negl
pop
mov
xchg
inc
ss
les
jge
lods
push
scas
leave
push
imul
push
aad
sub
lcall
or
push
pushw
xchg
loope
add
repz
mov
clc
inc
inc
daa
xchg
xchg
lcall
mov
fdivrs
sbb
or
xchg
sbb
out
int3
sbb
ds
stos
adc
ret
push
pop
lds
push
sbb
mov
icebp
sub
and
and
inc
jb
cmc
push
cmc
cld
mov
push
xchg
loopne
adc
cmpsb
push
push
scas
test
mov
pop
cmp
mov
dec
gs
ror
incl
in
inc
std
fsubl
in
inc
mov
mov
fwait
xorb
cmp
cwtl
insb
pop
es
out
push
sub
cmp
xor
stos
mov
out
adc
sub
pop
rolb
cmp
add
and
out
stos
fwait
sub
inc
pop
add
rol
ret
out
mov
mov
mov
xchg
test
dec
sub
or
lods
out
push
jnp
cmpsb
cmp
lret
xorl
and
in
sbb
fwait
jle
les
jb
jns
jp
testb
jno
jmp
call
mov
out
mov
test
je
jne
xor
inc
add
fwait
leave
sahf
iret
push
fidivrs
or
fdivs
outsl
aas
mov
clc
fs
pop
xchg
jmp
mov
or
cmp
popf
xlat
inc
data16
xchg
mov
jle
xor
mov
sub
pop
jne
adc
xor
push
das
in
aam
fwait
mov
ret
mov
sbb
fimuls
cmp
sahf
adc
das
fisttpll
icebp
fcoml
xor
inc
fadd
jecxz
shll
sub
fld
mov
test
adc
dec
inc
cmpsb
and
addb
or
inc
mov
or
in
lahf
dec
pop
xchg
xlat
jno
sbb
inc
sbb
shlb
into
pop
push
fs
push
jg
xchg
arpl
in
add
and
leave
jge
lcall
bound
mov
adc
out
int3
push
leave
daa
inc
cmc
or
add
sbb
and
aas
inc
insl
mov
sbb
test
js
cmp
nop
inc
mov
mov
movsb
jo
ds
and
mov
sub
inc
popa
mov
test
cld
shl
shl
sbb
das
clc
aam
mov
bound
lods
rol
ret
jecxz
dec
js
clc
dec
mov
and
sbb
pop
or
test
pop
inc
jl
lcall
sub
clc
movsl
repz
cwtl
mov
lahf
pop
pop
aam
xor
cmp
jge
jns
mov
sbb
popf
cmp
inc
imul
sbb
int3
clc
cs
pop
xchg
inc
pop
divb
cmp
sbb
pop
xor
adc
dec
mov
push
mov
test
or
test
xlat
bnd
fdivrl
and
data16
sbb
cmp
cmc
and
cli
jge
andl
popf
arpl
cltd
push
call
add
or
mov
rcrb
push
icebp
sbbl
jno
mov
and
xchg
and
mov
or
dec
and
clc
and
mov
and
inc
pmullw
push
aam
cmp
outsl
mov
bound
xchg
call
aad
movsl
xchg
inc
or
pop
mov
insb
mov
or
or
outsl
push
inc
cltd
xor
lea
in
pop
and
jo
ja
lea
add
rcrl
lret
mov
xlat
lret
test
dec
mov
shl
les
ret
cmp
sbb
mov
jecxz
mov
mov
in
ds
pop
dec
pusha
das
add
or
pop
icebp
push
mov
pop
shl
xor
dec
and
aad
movsb
sbb
ja
fwait
mov
testb
mov
pusha
jmp
rorb
repnz
push
les
ret
or
rcrl
mov
sub
add
outsb
fldl
and
push
jbe
mov
stos
inc
cmpsl
ja
xor
push
shr
jle
out
sub
inc
lcall
push
jo
mov
arpl
movsl
adc
test
mov
in
imul
punpckhwd
ja
cmc
bound
iret
mov
jle
outsl
lcall
and
pop
mov
jne
mov
adc
int3
sbb
sbb
dec
jns
js
std
jo
pop
gs
sbb
sub
xchg
scas
out
lcall
mov
inc
push
add
pop
lahf
and
and
shl
adc
shlb
sub
cld
fwait
adc
jecxz
push
int
sbb
inc
mov
add
jne
xor
rcll
push
mov
out
inc
pop
out
mov
mov
stos
aaa
sti
pop
jo
int
rolb
xchg
addr16
push
sub
sub
lret
stc
sti
fcoml
mov
dec
push
out
xorl
cli
adc
cmc
pusha
xchg
and
rcrl
addr16
mov
push
iret
out
xchg
out
scas
mov
cmp
add
orb
cmp
sub
lret
or
in
gs
aas
jns
outsl
jl
ja
test
adc
test
movsb
leave
cmp
add
mov
inc
fdivrp
es
jo
rolb
fistps
sub
push
push
sbb
mov
dec
aad
jns
adc
leave
or
cmp
add
fildll
xchg
xchg
adc
cmp
xor
rorb
movsl
mov
mov
sahf
jge
push
pop
imul
sbb
loop
testl
and
or
test
int3
es
inc
lret
clc
fwait
inc
jle
xlat
jbe
lock
cltd
and
cli
add
xchg
jae
movsb
mov
out
cmp
pop
gs
rorb
adc
jge
push
fwait
aas
pop
cltd
and
push
sub
ficomps
ja
xor
out
jmp
sub
or
pop
cwtl
lcall
pop
xor
pop
cli
or
add
mov
jae
cmp
cld
mov
lea
inc
loop
cmpsl
les
insb
rcrb
pop
sbb
sub
outsl
mov
fadd
fwait
movsl
cli
cltd
es
outsb
out
ja
or
cmc
push
dec
inc
int
addb
test
sti
mov
out
cltd
or
mov
jo
mov
outsb
dec
jb
adc
jbe
mov
push
xlat
pop
scas
dec
xor
mov
stos
push
enter
xor
dec
push
aaa
mov
adc
fnstenv
mov
mov
push
inc
and
les
movsl
repz
je,pn
std
pop
adc
push
sbb
and
aam
clc
adc
lock
mov
add
xchg
clc
les
ret
cmp
ror
movsb
jp
data16
lcall
movsl
add
xchg
data16
test
adc
mov
scas
or
sti
inc
push
iret
cltd
iret
mov
imull
and
xor
lret
adc
pop
push
push
mov
enter
cmpsb
or
adc
pop
push
pop
in
stos
push
lcall
rolb
inc
dec
mov
sahf
add
lret
shlb
stos
nop
rclb
inc
jne
outsl
pushf
sbb
mov
xchg
into
adc
lahf
ret
sub
jnp
ljmp
inc
xchg
mov
cmp
mov
loope
mov
cld
add
jne
mov
in
mov
pop
inc
test
movsl
add
imul
outsl
push
mov
jle
push
xchg
mov
sti
xorl
jle
ds
xchg
test
and
aam
dec
andb
cmp
xchg
aaa
inc
fsubp
jg
loop
mov
inc
lahf
fs
jl
lea
js
test
cld
mov
popa
les
insl
inc
bound
fwait
imul
xor
sahf
sbb
loope
jns
popf
in
leave
or
adc
iret
or
xchg
movsl
cmp
pop
add
adc
or
mov
xor
sub
jno
sbb
cmpsb
shl
test
sbb
cli
test
fsubl
ret
and
jo
or
ror
sbb
cli
xchg
xchg
les
fstps
mov
jno
pop
jge
popa
addr16
cmp
mov
sbbb
inc
outsb
adc
cmp
pop
aaa
stc
fsub
push
out
mov
inc
std
out
lret
or
xor
dec
cmc
jae
sub
pop
mov
mov
inc
or
add
xchg
int3
fmull
lret
adc
dec
mov
repnz
push
sbb
imul
scas
or
scas
pop
fnstsw
mov
add
inc
push
fnstsw
fstpl
gs
mov
lods
pop
mov
rcr
and
std
mov
popf
sahf
test
xchg
in
jmp
xor
mov
shl
cmp
push
fisttpll
dec
in
xchg
cltd
sub
mov
std
mov
aas
jmp
jle
mov
mov
std
daa
popa
sbb
cwtl
iret
lcall
add
adc
outsb
adc
loop
aad
mov
in
cmp
and
and
sti
fcompl
mov
frstor
xor
gs
fcmove
jb,pt
popl
lret
push
das
xchg
xor
xchg
addr16
pop
push
push
bsr
outsl
addr16
cmp
lods
ljmp
lea
in
xchg
xchg
lods
int
dec
pop
cs
repz
cmpsb
jg
pusha
xor
or
add
andl
mov
std
out
xchg
pushf
cltd
push
push
cmp
push
in
pop
orl
fldz
divl
test
add
stos
mov
mov
pop
adc
adc
xor
mov
ja
or
and
jmp
mov
pop
addl
add
imul
xchg
cmpl
cli
sahf
inc
mov
sbb
dec
in
lock
cmp
sbb
outsl
or
fbld
bound
pop
adc
outsl
jnp
pop
lret
jno
pop
xlat
xor
add
imul
push
inc
jecxz
add
push
xchg
mov
xchg
lcall
imul
mov
mov
dec
out
test
jmp
inc
sbb
stc
push
add
vmread
cmpb
outsl
dec
add
icebp
push
sbb
test
jns
pop
jne
xchg
inc
roll
fildll
rcrb
sahf
pusha
out
pop
cmpsl
das
pop
dec
rsm
cmp
fldenv
and
ja
xor
sub
sahf
add
ds
dec
push
nop
cmp
imul
pushf
pop
jbe
leave
orl
jo
cmpsb
test
fs
jb
xchg
fwait
xor
cltd
lahf
and
mov
fiaddl
popa
lret
shrb
push
ret
jge
add
inc
cmp
divl
adc
repnz
sahf
mov
or
rcll
sbb
xchg
imul
dec
loopne
hlt
cld
cltd
imul
rcll
sbb
pop
inc
pop
and
mov
and
jbe
and
fwait
rcr
push
in
sub
and
adc
stos
insl
dec
jne
loopne
sub
mov
aas
cmpsb
sub
movsl
mov
lods
lahf
popa
mov
out
jo
arpl
pop
sub
and
notl
add
into
push
mov
dec
jmp
mov
xlat
rorl
and
outsb
sbb
adc
jl
testl
stos
add
cwtl
jl
fadds
fisubs
lahf
mull
sbb
ds
mov
cltd
jnp
pusha
jp
jae
cs
cmp
inc
inc
bound
rorb
push
xor
push
and
inc
dec
gs
sbb
sbb
lock
pop
or
das
outsl
js
imul
mov
outsl
outsl
mov
orl
cmp
out
shrl
dec
sub
push
sbb
xlat
xchg
mov
jb
mov
mov
jnp
sub
lods
push
mov
or
or
in
cmpsb
imul
xor
adc
popf
sub
cltd
jns
int
flds
iret
dec
leave
fistpl
fwait
inc
adc
push
sbb
aam
call
mov
jno
jno
iret
outsb
pushf
jle
push
scas
inc
insb
ja
aaa
outsl
mov
jg
jg
pop
iret
jg
imul
lds
pop
jle
mov
xchg
stc
ljmp
pop
int3
mov
jmp
pop
in
jmp
xchg
leave
imul
sub
mov
js
xchg
movsl
les
repz
pop
mov
cwtl
mov
fcoml
into
test
pop
and
scas
cmp
fucomip
lcall
jnp
xor
int
sbb
fildl
loopne
cmp
dec
pop
sub
call
fmull
notb
mov
and
ljmp
xor
cmp
movsl
xchg
outsb
xchg
push
aam
popf
mov
xor
push
inc
cmp
shll
xorb
jg
or
dec
mov
daa
adc
mov
imulb
cmc
jnp
xor
mov
stos
hlt
mov
or
pushf
int3
pop
pop
sub
pop
gs
sub
int
je
push
jle
push
jns
add
outsl
cmpsl
cmp
jmp
add
push
cwtl
fcmovne
int3
mov
add
std
fwait
lahf
push
movsb
lret
out
cli
jmp
imul
or
sbb
mov
sub
mov
dec
inc
lds
dec
push
add
gs
test
push
jmp
mov
cwtl
vmovaps
pop
mov
xchg
loope
inc
mov
or
jnp
cmpsl
aaa
jge
mov
ficoml
aam
xchg
nop
xchg
pop
pop
std
or
cmp
clc
nop
or
test
cmpsb
pop
sahf
movsl
fidivs
shrb
add
jp
call
dec
push
or
ret
addb
and
int3
add
mov
test
dec
insb
cmc
rol
pop
fistl
fs
mov
jnp
jnp
lds
dec
or
arpl
cmc
int
inc
mov
repz
or
mov
int3
mov
adc
fcoms
pop
push
aad
and
jb
in
and
xchg
idiv
pop
pop
cmp
test
cmpsb
cmp
movsl
les
jg
lcall
clc
dec
out
cs
pop
loope
filds
fsts
lret
aad
fcomps
lock
add
xlat
repnz
cmp
stos
ret
mov
imul
jl
jno
lcall
fwait
pop
je
xchg
mov
pop
push
mov
lods
jo
repz
pop
inc
sbb
pop
mov
out
addl
dec
adc
arpl
cmpsl
jp
or
cmp
in
and
out
sub
pop
add
xchg
das
loope
cmc
fdivp
sbb
sbb
xor
add
xchg
js
xchg
adc
mov
xchg
lods
fwait
daa
sub
jno
lret
xlat
mov
arpl
xor
out
mov
subl
xor
push
dec
inc
push
adc
add
outsl
insl
int3
repz
into
or
xchg
call
xor
inc
popf
bound
fimuls
pusha
cmp
mov
mov
jne
fimuls
xchg
pushf
ret
popf
jge
fidivl
adc
outsb
ror
sbbl
xchg
fsubrl
aas
in
negl
xchg
sbb
inc
xor
sub
dec
xchg
xlat
dec
shl
repnz
rorb
push
push
xor
mov
jae
rclb
lahf
adc
lcall
std
dec
xchg
push
mov
push
int
mov
lret
and
mov
add
outsb
out
or
out
xchg
adc
mov
bound
xor
vaddsubps
dec
push
repz
es
mov
sarl
out
inc
mov
in
into
test
push
hlt
icebp
aaa
mov
jns
or
in
fisttpll
xchg
add
pop
orl
mov
les
or
pop
add
push
jmp
fiadds
lcall
mov
pop
in
fnstenv
jl
or
in
scas
fldl
in
and
into
mov
lahf
jno
mov
push
test
fildl
mov
pop
out
pop
pop
lcall
dec
xlat
pop
dec
add
xchg
inc
jnp
sub
xchg
sbb
or
fcmovbe
stos
push
xchg
popf
xchg
pop
and
add
addl
fistps
sbb
stc
repz
xchg
in
mov
mov
sbb
mov
data16
lock
iret
das
mov
test
bound
xor
or
add
in
dec
sub
sub
jmp
cwtl
pop
fwait
mov
les
and
inc
dec
jg
push
lret
int3
les
xchg
orl
test
mov
xorb
xchg
inc
mov
pop
dec
ljmp
cmc
iret
dec
xor
cwtl
mov
push
mov
sbb
pusha
push
or
sbb
ja
xor
push
lods
add
dec
xchg
in
daa
jp
mov
mov
mov
in
mov
sub
add
mov
adcl
int3
sahf
pop
into
rcl
fmulp
lahf
and
aam
inc
outsb
add
xor
movsb
fidivrs
js
fmull
insl
mov
mov
or
loopne
arpl
sub
das
push
and
shl
imul
adc
jo
lret
daa
bound
mov
sbbb
dec
add
adc
sahf
movsb
mov
jg
mov
xchg
xchg
aad
cmp
adc
xor
aad
inc
push
in
cmp
add
pop
jo
xchg
test
int
lods
adc
call
mov
test
pusha
leave
adc
or
pop
sub
insl
lea
aas
adc
out
adc
bound
les
add
mov
insl
popf
push
jne
addl
or
lcall
xchg
cmp
test
mov
stc
inc
jle
into
and
sbb
pop
repnz
xor
sub
dec
adc
dec
popf
or
mov
or
loopne
fsts
or
das
rorl
int3
mov
popfw
pushf
insl
fildll
cld
mov
mov
daa
outsl
stos
sti
outsl
and
xor
fwait
xor
sub
shrl
sbb
and
pop
loope
xor
movsb
xlat
add
pop
cmpsl
rcrl
push
sbb
sub
jnp
adc
mov
ret
pop
adc
pop
popa
add
and
push
out
cmc
sbb
push
sub
mov
fimuls
stos
push
aad
stos
imul
jno
inc
xor
aas
mov
iret
mov
xchg
sbb
shlb
or
cltd
scas
xchg
push
dec
in
rolb
mov
sub
mov
xlat
mov
icebp
jle
cmp
pop
fisubl
ja
mov
lds
jo
mov
cli
jmp
popl
psrld
push
mov
aaa
movsl
xchg
or
stc
jge
pop
stos
ja,pn
dec
fwait
in
sbb
mov
pop
pop
scas
mov
lods
mov
jo
loope
lds
mov
inc
or
subl
insl
test
enter
leave
aad
mov
ja
sbb
cmp
adc
idiv
outsb
aad
rsqrtps
jns
out
addl
out
mov
sti
pop
push
shrb
adc
call
push
repz
das
sub
push
push
xor
test
cli
push
aaa
inc
push
lcall
and
xor
movsl
push
jmp
aaa
or
jo
inc
sub
inc
push
pushl
cmc
lahf
add
sub
repnz
cmpsl
add
push
mov
aam
inc
xor
gs
hlt
adc
xor
jne
pushl
in
aad
adc
and
add
or
imul
leave
fcoml
cmovno
loop
xchg
push
push
daa
jg
test
out
popf
pop
clc
test
inc
pusha
lahf
xchg
xchg
push
shrl
outsl
shr
enter
stc
addr16
xor
pop
popa
pop
cmp
iret
cmp
pop
or
out
arpl
mov
lahf
lcall
loop
addr16
fsubrs
nop
sbb
jns
out
jae
jb
push
enter
pop
outsb
gs
iret
or
lods
xor
push
add
arpl
jb
sbb
icebp
adc
jmp
or
pop
cmp
popa
test
xor
sahf
das
std
cld
sbb
stos
and
insl
test
xor
outsl
push
cmovle
xchg
adc
das
jbe
fstps
dec
inc
xor
sbb
inc
or
gs
das
fcompl
mov
lock
add
mov
xchg
pop
mov
daa
sti
jg
rcrb
adc
aaa
in
cld
push
cmp
out
fmuls
mul
nop
out
pop
push
xchg
test
lds
aad
push
stos
sarl
cmpsl
pop
inc
lods
test
lret
xor
inc
xchg
int3
ret
pop
dec
popa
and
mov
sbb
push
dec
sub
clc
stos
jne
push
pop
mov
icebp
test
jbe
xor
gs
loope
jle
push
mov
out
xchg
sbb
add
sahf
xlat
jl
or
imul
mov
xor
shl
movsb
lock
add
xchg
call
adc
leave
lret
neg
dec
mov
cs
inc
push
mov
mov
jae
mov
jecxz
mov
fwait
or
out
test
aad
ljmp
in
adc
pop
das
xchg
sub
cmp
cmpsb
lret
cmp
fs
ss
fcoms
vpcmpeqd
nop
into
lahf
das
inc
pushf
insl
jb
pusha
outsl
mov
and
into
cmp
dec
imul
push
ds
test
dec
dec
dec
ja
add
mov
push
nop
std
mov
das
xchg
aad
sarl
push
pop
cmp
lods
pop
insb
cmp
mov
jns
mov
stos
sub
add
adc
test
bound
xchg
inc
imul
out
mov
out
insl
hlt
xchg
imul
ficomps
cmp
loop
imul
mov
repz
push
and
das
aad
movsb
push
lret
movsb
lahf
or
rcrl
mov
xchg
outsl
loope
inc
or
lret
mov
or
cmp
outsl
into
push
mov
fdivrs
inc
inc
punpcklwd
dec
xchg
jo
jmp
out
cld
mov
jmp
repz
jns
popf
mov
iret
movsb
xlat
daa
inc
sbb
jp
and
pop
popa
jbe
scas
mov
popa
aad
xchg
mov
daa
pop
dec
cli
leave
lahf
jmp
sarl
cmp
mov
popa
shrb
xchg
int3
rclb
pusha
cmc
fwait
daa
lret
add
cmp
cmp
mov
inc
mov
xchg
pop
inc
mov
inc
lcall
out
aaa
dec
fsts
mov
lret
sti
jno
lret
lds
sub
and
cld
repnz
dec
inc
sub
add
xchg
inc
cmp
mov
mov
mov
push
std
push
push
mov
pusha
in
adc
dec
jge
xor
cmpsl
jle
cwtl
imul
out
imul
mov
fcoms
jno
int3
inc
lret
inc
loopne
xlat
mov
jns
mov
adc
pop
scas
cmp
xor
repnz
loope
arpl
shll
push
repnz
loope
mov
sub
mov
jle
pop
xor
inc
mov
xchg
mov
call
xor
fmull
stc
fiaddl
dec
pushf
test
xor
and
imul
jbe
adc
sarl
ja
jmp
hlt
in
shrl
rorb
das
add
nop
sbb
fnstcw
or
notb
icebp
syscall
dec
cld
in
pop
mov
sbb
bound
push
repz
pusha
insb
push
cmpl
fsubl
xorb
xchg
pop
jne
fistl
in
test
shlb
into
mov
sbb
inc
and
popa
shl
rcll
rcrb
inc
fildl
fmul
inc
jns
lcall
inc
mov
outsb
ficoml
xchg
inc
or
call
ja
mov
jo
or
mov
jg
jge
hlt
inc
mov
fldcw
mov
repz
sbb
jmp
or
sbb
adc
lods
mov
cmp
pop
imul
outsl
or
in
mov
xor
or
int
mov
jbe
aas
rol
stc
sub
mov
inc
call
or
stos
stos
jns
push
sub
sub
sub
dec
mov
xor
sbb
dec
sub
call
lods
or
imul
xchg
or
stos
jmp
mov
pop
mov
das
movd
lret
jb
or
add
jl
out
xor
rcll
push
enter
jge
out
ret
testb
dec
dec
sbb
movsl
sub
cs
mov
popf
rcll
jno
push
xorb
mov
int3
es
sub
filds
dec
jp
mov
xchg
ss
das
movsb
xchg
lds
or
sub
cwtl
mov
ds
cld
push
xor
add
inc
or
xchg
pop
test
sub
data16
pop
or
cs
mov
call
xchg
inc
stos
test
and
daa
inc
stos
or
fdivl
cmp
push
pop
cmpsl
xchg
lcall
xchg
aam
movsb
or
stos
push
sbb
sar
fcompl
aas
push
mov
nop
stos
and
sub
ja
aam
xor
les
ss
jge
inc
lret
jo
int
in
cmc
sarl
leave
daa
xchg
loopne
jg
cmp
xorl
or
jae
js
push
dec
push
push
mov
lds
xchg
pop
mov
rcrl
mov
bound
aad
insl
orl
mov
mov
dec
arpl
xor
ja
mov
jmp
lea
nop
or
xor
xchg
or
jne
adc
jnp
mov
sbb
inc
lahf
adc
cmp
sbbl
xchg
rclb
shlb
pop
outsb
test
sbb
mov
push
sub
pop
divl
bts
fldl
pop
push
inc
in
jnp
or
cwtl
mov
and
ds
repz
cmc
or
lock
aam
cmp
sub
ret
xor
add
clc
movsl
sahf
mov
cld
ljmp
addb
negb
xchg
dec
repnz
fists
or
fsubrl
adc
sarb
jnp
xor
out
and
pop
inc
jecxz
cltd
jmp
dec
in
dec
mov
arpl
pop
in
pusha
jmp
ret
jmp
stos
or
shll
and
lock
shll
inc
scas
and
sub
fsubl
sub
js
xchg
stos
dec
out
add
shll
out
je
data16
sub
mov
or
sub
xchg
pop
dec
mov
dec
pop
xchg
jmp
fsubrp
fadds
fbld
aam
sub
hlt
xchg
sub
out
sbb
jne
stc
mov
out
push
int
jo
mov
add
mov
filds
outsb
adc
mul
aaa
imul
sub
add
mov
xchg
cs
nop
jp
pushf
jnp
dec
adc
fnsave
movsl
jo
dec
cmp
mov
lcall
and
cmp
fdivrs
fimull
not
inc
loopne
cwtl
inc
andl
dec
shr
jl
and
cmovs
xor
adc
sub
js
xchg
lods
or
xchg
pop
jp
sbb
fucomi
sbb
mov
jmp
repz
mov
inc
cmp
icebp
adc
pop
aas
ljmp
xchg
subl
add
stos
les
loopne
and
out
cmpsb
mov
jno
sub
cmc
fyl2xp1
je
xor
jns
scas
fdivl
into
aaa
sbb
fiaddl
inc
mov
ja
clc
cwtl
frstor
test
mov
lret
xor
fst
add
je
xchg
scas
enter
cli
sub
cs
push
cmpsl
push
lods
pop
lret
sbb
inc
pop
outsl
inc
adc
fcoml
in
cwtl
mov
and
and
ret
daa
les
push
leave
xchg
outsl
pop
inc
arpl
lea
outsb
pop
fwait
lcall
xor
mov
lcall
arpl
or
mov
loope
loopne
or
fnstsw
mov
dec
push
sbb
mov
lock
iret
out
js
or
mov
xor
aaa
lods
jno
mov
sub
into
jge
cmp
insl
scas
xchg
mov
jo
and
sub
imul
jg
lods
pop
mov
mov
subb
int3
xor
pushf
sub
fisubl
outsb
or
in
mov
js
pop
pushf
lret
into
into
pop
cmp
loopne
cmpl
lcall
pop
pop
xchg
cmpsb
fdivs
lcall
xchg
and
adc
add
mov
fwait
push
stos
sbb
aas
sub
popf
cmp
jb
movsb
fmulp
pop
fs
movsl
iret
xchg
cmp
sbb
sub
jg
or
pushf
or
lods
cld
and
pop
into
fistpl
mov
std
xor
and
pop
adc
push
add
mov
push
scas
mov
in
negb
pop
movsb
repnz
icebp
mov
add
pop
shll
loope
rol
mov
movsb
test
jo
lcall
notl
sbb
cmp
iret
jp
shll
xor
push
mov
or
scas
jle
aas
outsb
push
aam
adc
stc
xlat
fs
out
cmp
fiaddl
les
bound
mov
outsb
movsb
sub
arpl
mov
add
push
arpl
push
jmp
lds
cld
sbb
lcall
mov
inc
pop
data16
inc
imull
shrb
addr16
clc
inc
shlb
add
bnd
jo
rcl
jno
mov
or
and
pop
popa
pushf
or
xor
sub
mov
mov
cmp
dec
push
xchg
lds
stos
out
mov
gs
pop
notl
sarl
pop
iret
push
sub
ror
jl
repz
cltd
pop
mov
jl
dec
jbe
enter
jle
jge
sub
sub
scas
adc
mov
dec
lret
cmp
jle
lret
mov
lds
jle
jne
test
dec
lods
mov
push
test
inc
hlt
jbe
mov
insb
movsb
xor
adc
jp
dec
inc
xchg
inc
mov
add
inc
xchg
daa
sbb
js
xchg
dec
dec
or
dec
or
mov
pop
or
js
jb
and
outsb
cli
ja
xor
ret
nopl
fdivrp
imul
js
xchg
cmp
mov
shll
sub
sub
push
pop
js
sbb
dec
mov
or
shrb
test
testl
sbb
aas
icebp
addr16
or
jne
daa
aad
icebp
jle
in
inc
mov
pop
dec
or
enter
jge
pop
push
sbb
out
fdivrl
loope
or
mov
sbb
in
or
mov
jg
mov
mov
test
jl
inc
adc
or
repz
inc
fcmovnb
lret
adcl
xor
xchg
insl
mov
push
sbb
dec
dec
push
fadd
pop
sbb
pop
ret
js
xchg
jae
fcmovnu
ljmp
shlb
sub
pop
popf
pop
ds
addl
idivb
ja
mov
add
fisubs
test
cmc
std
push
out
jnp
insb
adc
add
cmp
out
push
and
push
sbb
daa
jge
lcall
mov
cmp
roll
dec
enter
in
mov
inc
push
push
ds
jl
adc
jne
dec
add
add
xor
and
inc
enter
add
or
adc
inc
les
jle
mov
dec
sub
xor
stc
cmp
addr16
mov
pop
xchg
and
lock
jl
shrb
loop
or
sub
and
jae
mov
in
lret
cwtl
inc
fstps
outsb
xchg
rcrb
and
std
inc
push
or
shrl
aam
bound
repnz
shrb
jnp
lock
das
jmp
insl
add
push
jl
mov
fwait
fs
dec
mov
sub
pop
lods
lock
dec
push
ret
enter
pop
test
sub
push
mov
dec
mov
sub
repnz
ja
out
inc
lds
lods
pop
lods
cmp
in
pusha
adc
shlb
das
xor
enter
push
outsb
loope
xorl
push
and
pop
or
test
ror
orl
out
lea
mov
stc
mov
xor
add
dec
mov
ja
mov
iret
clc
out
inc
aam
cld
psubd
dec
jp
or
mov
cmpl
cmp
ja
mov
xor
popf
inc
nop
sbb
sub
aas
fisubrs
cmp
adc
jmp
movsl
movsb
jbe
mov
es
stos
out
jnp
out
in
dec
sub
jp
push
movsb
pop
inc
push
lret
pop
jmp
push
add
out
in
push
leave
adc
hlt
pusha
cmp
imul
push
ret
insb
imul
pop
es
es
or
daa
cmp
je
dec
xlat
fildll
mov
push
sbb
ja
xchg
fcoml
fdiv
adc
cmp
fs
jg
rorb
xchg
push
mul
imul
ja
xchg
inc
pop
pop
mov
es
adc
popw
push
sub
adc
pusha
jl
xor
or
pop
xor
xlat
or
and
call
inc
inc
jae
sahf
dec
sahf
test
and
jae
cs
push
call
mov
mov
add
xchg
inc
mov
das
xor
and
adc
loopne
lret
sbb
dec
mov
or
mov
mov
ret
scas
xchg
xor
add
jbe
aad
jmp
lret
lahf
dec
bound
and
add
jne
xlat
mov
jge
daa
out
push
stos
add
and
je
fbld
lods
jbe
pop
jecxz
push
push
fcoml
adc
or
sub
daa
popf
jg
xchg
add
mov
les
dec
test
sbb
out
xor
inc
testb
leave
testb
adc
imul
iret
jmp
in
subb
mov
mov
pop
lock
movsb
in
sub
jl
es
push
pop
mov
cli
enter
and
movsb
std
or
jb
imul
testl
dec
mov
dec
out
icebp
or
xchg
orb
jp
jmp
adc
push
mov
push
xchg
mov
and
jge
add
insl
icebp
fwait
cmp
cltd
jle
enter
inc
mov
or
xchg
inc
jge
dec
dec
popf
push
cmp
rcrl
push
push
mov
test
push
jge
call
mov
pop
adc
cmp
in
cmp
jg
ja
xor
pop
repnz
leave
icebp
jge
mov
shl
sub
push
int3
mov
jmp
sub
or
adc
inc
xchg
pop
lret
shl
push
jb
jg
mulb
fistl
lds
xor
mov
out
xlat
cmp
repnz
lret
xchg
xchg
scas
test
dec
std
mov
out
xor
nop
mov
gs
call
cmc
mov
xchg
test
dec
push
movsb
adc
in
cmpsl
cmp
jnp
fisttpll
sti
mov
add
and
cmp
jg
fcmovnu
sbb
pop
mov
imul
cmp
push
sti
aaa
mov
push
and
mov
push
inc
in
movsb
cmp
xlat
adc
hlt
into
or
and
dec
outsb
mov
lahf
dec
call
das
clc
subl
dec
movsb
mov
stos
sbb
sub
movsl
fisttpl
imul
ds
loope
jmp
jb
test
test
stos
out
xor
sbb
push
add
mov
or
cmp
sti
add
repz
fbld
lods
add
xchg
cli
jecxz
jno,pt
aad
adc
popf
pop
mov
pop
mov
std
jbe
mov
in
sub
icebp
sbb
mov
pop
adc
js
mov
xor
fs
mov
xor
xchg
fcomps
lcall
dec
jno
ja
sbb
pop
mov
loopne
aam
aad
pop
rolb
push
jb
std
sub
repnz
cwtl
icebp
inc
mov
xchg
add
mov
cmp
push
cld
mov
mov
cmp
inc
jbe
pusha
cli
nop
xor
int3
les
jnp
sub
inc
popa
aad
mov
sub
movsl
pop
ret
fwait
cld
test
movsl
insb
int
mov
fisubs
stos
adc
or
dec
xchg
iret
test
push
jge
and
jl
repnz
pop
pop
push
cli
pop
mov
test
incb
roll
cmpsb
pop
ja
or
cmp
dec
adc
dec
mov
push
inc
adc
adc
sahf
sbb
aam
lahf
cmp
hlt
cltd
test
mov
fldt
sub
pushf
xchg
enter
jg
add
lods
push
out
lcall
xchg
lret
jle
jnp
stos
cld
out
push
inc
in
ret
xchg
adc
add
in
pop
mov
imul
lret
sti
sub
xor
adc
pop
push
inc
pop
adc
jno
repz
pop
push
ret
sahf
push
and
repz
mov
add
xchg
or
pop
xchg
jbe
xlat
sub
test
shlb
gs
outsb
insb
adc
cli
inc
or
sahf
int3
sub
mov
sbb
stc
sarl
jp
and
adc
mov
aaa
lea
rcll
aaa
lea
xchg
pop
add
hlt
cli
and
bound
add
fucomi
and
arpl
and
stc
jne
out
ss
add
mov
test
je
xchg
mov
pop
mov
push
mov
sub
lods
inc
fidivs
test
cmp
xchg
sub
push
test
insl
mov
shlb
js
fdivrs
push
aam
pop
inc
lds
jl
add
lret
or
js
xchg
mov
sbb
hlt
jo
js
lcall
jno
mov
lahf
push
mov
imul
xchg
fisttps
mov
dec
daa
inc
mov
cmp
xchg
mov
pushf
mov
lahf
loop
test
jp
adc
sahf
jle
das
loope
xchg
ret
test
mov
ficomps
movsl
add
inc
stc
fildll
adc
popf
push
sbb
mov
sbb
pop
xor
pop
sub
xchg
push
sbb
fucomi
inc
addl
sahf
push
sti
fwait
xchg
stc
hlt
add
scas
jp
inc
jns
xlat
icebp
je
sbb
movsl
es
js
ret
add
aas
cld
inc
xchg
xor
pop
xchg
les
sub
rorb
add
add
in
mov
int3
test
add
fldl
inc
outsl
cs
sub
add
mov
adc
adc
push
cltd
pop
mov
es
jp
add
jge
cmp
and
movsl
pop
xchg
jno
sbbl
add
adc
gs
xor
pushf
imul
xor
xor
dec
or
push
sbb
jl
es
inc
cld
pop
pop
cmp
xchg
add
cmp
and
rcrl
in
iret
xor
leave
pop
lret
add
arpl
push
mov
repz
adc
test
jecxz
in
adc
sahf
cltd
inc
mov
xchg
or
cmp
or
push
mov
ljmp
ret
mov
outsb
mov
test
cli
repnz
pop
lret
jbe
int3
jbe
enter
jno
lods
je
mov
push
jb
mov
scas
jns
fdivrl
fadd
xor
mov
xor
test
adc
pop
xor
popf
stos
fidivrs
in
shl
stc
cmp
inc
inc
pop
repz
lcall
mov
fucomip
and
pop
std
mov
in
sarl
int3
and
inc
mov
mov
dec
dec
dec
clc
jb
sarb
mov
xor
xor
mov
and
out
dec
shrb
enter
stos
pop
and
xor
stos
xor
mov
sub
cmc
scas
insl
fstp
inc
loopne
pop
bound
movsl
mov
into
scas
lock
push
outsb
or
lret
mov
daa
or
jno
pop
and
lds
fidivl
or
data16
mov
int
int3
xor
in
jnp
dec
imul
data16
and
rcrl
in
mov
pop
and
dec
pop
mov
stc
rcl
repnz
and
push
rolb
scas
test
js
stos
add
in
xchg
sahf
inc
mov
rorl
mov
inc
mov
adc
mov
leave
jecxz
je
icebp
or
cmp
dec
pop
pop
mov
sbb
js
mov
dec
inc
xchg
and
jno
shlb
in
out
push
mov
enter
subl
punpcklwd
lret
stos
push
ss
or
xor
scas
pusha
sbb
push
mov
cmp
xchg
adc
js
adc
xchg
pop
push
add
in
loop
push
ret
jnp
xchg
push
add
inc
out
ret
sub
and
or
lcall
jp
inc
cmp
int
dec
sub
lods
ss
adc
push
in
shll
jecxz
mov
mov
movsb
jecxz
dec
adc
stos
ds
sahf
or
js
pop
mov
mov
notb
js
sub
clc
cmp
rcll
jnp
xchg
mov
inc
push
push
sub
push
sbbb
mov
popa
xor
mov
les
add
lret
cwtl
scas
jg
fcmovb
jmp
int
cli
pop
dec
iret
out
cwtl
nop
cmpsb
or
or
frstor
mov
inc
lret
ss
fcompl
sbb
pop
fcmovnu
dec
fidivrl
stos
dec
adc
dec
sbb
sbb
in
nop
loop
mov
je
in
cmpsb
std
aam
insl
jmp
mov
imul
inc
ss
nop
lock
test
out
cmp
mov
scas
lret
dec
mov
cltd
mov
cmpsb
ja
jo
push
and
icebp
xor
in
scas
xchg
pop
pop
pop
cmc
push
push
inc
push
int3
sub
jns
cmp
jo
mov
in
mov
aad
movsb
push
call
inc
pop
cltd
bound
popa
xlat
addr16
and
xchg
out
addr16
mov
repz
lea
xchg
pop
addl
pop
std
shll
in
lret
ficomps
and
test
xchg
out
lcall
pop
sbb
stos
sbb
fdivl
and
icebp
mov
stc
jae
push
stc
test
stc
in
pop
pop
mov
xor
fnsave
sbb
add
jle
nop
sub
xor
test
test
mov
xor
jae
sub
sbb
jge
pextrw
mov
mov
inc
aad
imul
das
mov
mov
popf
repnz
jp
out
push
cltd
gs
adc
out
push
add
add
cmp
sub
cmp
mov
mov
test
movsb
loopne
popf
scas
cli
arpl
dec
das
mov
cmp
adcl
pop
insl
xchg
adc
adc
fwait
push
aam
cmp
andb
imul
lret
int3
inc
adc
and
loope
push
pop
xchg
aaa
aam
mov
ja
leave
enter
pop
mov
test
sahf
jp
pop
ror
jmp
in
mov
dec
cwtl
fsubrp
mov
jg
cs
jg
sub
push
lret
dec
mov
pop
ds
call
cld
loopne
mov
aad
fld
jl
insb
sub
lret
sarl
mov
pop
fists
in
xchg
cltd
mov
sub
inc
iret
dec
outsb
negb
xor
ficoml
fwait
adc
xchg
jae
fcoml
mov
sub
push
out
jno
sbb
testb
pop
cmpsl
loope
add
mov
mov
call
cmpsl
rolb
and
cmp
lahf
mov
mov
mov
lock
inc
jl
xchg
mov
push
outsl
and
scas
leave
stos
inc
loope
jns
into
inc
insl
mov
aas
push
cld
mov
mov
mov
and
imulb
jnp
cli
dec
jle
and
shlb
leave
jb
cmp
aad
xchg
jge
push
fbld
ret
jae
jge
aad
stc
lea
mov
int
cmc
cmp
jae
sbb
mov
in
mov
and
xchg
sub
dec
lahf
insb
xchg
cmc
out
sti
cmpsb
xorb
mov
xchg
pop
movsl
lock
dec
cmp
rolb
std
out
cwtl
push
fsubr
push
or
mov
cmp
push
jle
xlat
pop
mov
dec
inc
int3
mov
mov
cmp
psubsw
lcall
sbb
scas
mov
mov
loopne
dec
pop
adc
test
mov
jecxz
or
jl
jo
addr16
fstpl
or
insb
in
mov
sub
pop
mov
out
and
pop
xor
mov
or
xor
sub
sbb
cmpb
iret
add
mov
pop
jg
fdivrp
js
mul
dec
or
xchg
insl
sbb
insb
iret
call
sbb
mov
je
inc
or
push
push
dec
enter
push
xchg
push
imul
push
mov
jg
mov
das
and
sbb
pop
mov
in
dec
mov
andb
sar
aaa
out
in
and
out
sbb
jbe
pushf
dec
mov
es
jp
jno
pushf
fbld
and
jge
or
xor
scas
add
jl
jnp
out
adc
or
jns
cli
ja
inc
xchg
sarl
xor
push
shrl
inc
sub
push
mov
jmp
rcl
aaa
mov
mov
cmp
mov
jecxz
adcb
sti
in
xchg
je
rorb
mov
vpsubb
mov
add
pushf
lods
jb
jg
addl
push
cmp
imul
divl
sahf
pop
push
dec
mov
popf
xchg
mov
push
outsl
inc
ljmp
pop
dec
dec
es
sub
in
repz
fwait
mov
mov
xchg
mov
or
inc
cmpsl
sbb
icebp
mov
subb
sbb
out
mov
sbb
fistl
pop
adc
jne
adc
aad
and
add
icebp
leave
inc
mov
pop
arpl
cmp
jle
mov
pop
sbb
xchg
ja
push
stos
lret
loop
push
sbb
imul
insb
negl
mov
mov
sbb
pop
nop
fldl
ljmp
sbb
fistpl
fisubs
js
cmc
xlat
icebp
in
prefetchwt1
div
xor
aam
cld
lahf
test
dec
cmp
iret
cmpsb
sti
imul
test
outsb
arpl
xor
add
es
movsb
sbb
jmp
scas
or
es
aaa
outsl
out
inc
inc
jnp
ss
fistpll
pop
std
inc
outsl
jae
sub
cmp
mov
or
sub
cmc
test
lret
test
stc
aad
ret
dec
shr
jbe
sub
adc
mov
adc
das
fs
loope
jae
sbb
push
cmc
cld
sbb
inc
pop
iret
sbbb
xchg
pop
add
add
and
cmp
outsb
stos
mov
faddl
out
jl
popa
xor
mov
sub
sub
cmp
push
lock
xchg
lret
cmp
lret
dec
sub
push
xchg
fdivrs
sahf
sti
or
loope
or
std
test
repnz
inc
adc
jl
xchg
sub
mov
sti
sarb
out
xchg
jecxz
jge
aad
xchg
cmc
mov
sub
loop
sub
or
cmp
rorl
imul
idivl
shl
scas
mov
pop
outsb
scas
pushf
es
in
fdivs
add
test
ds
mov
stos
dec
lret
repnz
adc
jl
or
inc
and
jl
shll
fwait
loopne
outsl
jo
sub
imul
cmp
pop
and
and
xor
or
pop
por
fcompl
mov
dec
push
vpmacsww
mov
les
out
sahf
mov
pop
insb
pushf
mov
mov
xchg
lret
cmpsl
adc
cmp
or
push
add
mov
pop
mov
jnp
mov
jnp
adc
xlat
xorb
ss
add
mov
test
push
mov
stos
and
jne
jo
repnz
cmpsl
push
and
cmp
jmp
cmc
pop
insb
cmp
rolb
stos
out
xor
mov
cmp
mov
ds
push
jo
ja,pn
xor
out
mov
pusha
and
or
adc
lcall
sub
test
cmp
push
mov
adc
ljmp
mov
dec
sti
add
add
pusha
mov
adc
dec
rep
movsl
ficoml
lods
sub
pop
loope
fsubs
add
out
xor
mov
xchg
cld
mov
xchg
push
pop
fs
int3
std
mov
ja
repz
sar
or
xchg
std
adc
in
sub
mov
sbb
jge
loope
jl
lret
popa
movsl
mov
sub
data16
push
pop
test
std
das
and
push
loop
ljmp
outsl
dec
stos
and
sub
add
jne
mov
xor
cmpsb
ss
ja
push
sbb
add
xor
xchg
and
sbb
call
pop
test
subl
xchg
and
lcall
ret
out
mov
jne
sub
sbb
test
into
push
shll
jae
and
mov
mov
rolb
add
in
xchg
jno
xchg
cmp
lret
inc
sbb
mov
sub
or
lock
jge
je
sti
icebp
pop
ret
pop
fsts
push
sbb
repnz
cmp
rcrb
fwait
call
add
lds
inc
rcrb
add
cmpsl
std
sbb
in
mov
xchg
in
xchg
cmp
arpl
jmp
addl
or
movl
movsb
or
jnp
inc
cmpsb
test
ss
cmp
aam
pop
xor
dec
out
pop
mov
mov
fldcw
mov
cmp
jnp
adc
add
in
mov
cmp
movsl
aas
pop
jns
cmp
xor
cmp
aad
add
inc
repz
std
std
loope
scas
mov
pop
jae
push
imul
or
push
lock
add
fistps
cld
push
pop
push
cmc
in
insl
arpl
cmp
lds
ja
pusha
cmp
push
mov
jle
pop
mov
pop
arpl
rclb
cmp
sub
xchg
fidivrl
pop
shrl
pop
adc
lcall
cmpsl
push
icebp
and
leave
fidivs
rorb
jecxz
dec
cmp
lds
mov
jge
mov
xor
mov
ss
xacquire
fidivs
sub
cmp
dec
mov
adc
lret
dec
out
mov
fimull
aas
xchg
push
lcall
js
dec
xchg
cmc
in
mov
inc
mov
mov
and
push
and
inc
push
repnz
dec
adc
lds
lcall
cmc
int
mul
fdivr
lds
inc
pushf
test
sbb
pusha
or
call
add
lahf
xchg
xchg
cmp
pop
pop
xchg
sti
cmc
pop
jnp
and
push
jbe
cmp
and
ret
push
in
jp
fistl
cmp
inc
or
xchg
stos
mov
xor
dec
inc
fwait
mov
mov
std
add
leave
sahf
aaa
outsl
out
movsl
xor
fs
jl
iret
push
inc
aaa
jmp
xchg
mov
pop
ret
inc
or
aam
push
movsb
or
mov
push
add
leave
cmp
roll
xor
mov
push
inc
adc
and
add
xchg
in
dec
and
fwait
call
cmp
js
loop
xor
insb
jle
or
aad
mov
or
out
sub
cltd
inc
push
addr16
out
lods
xchg
outsl
pop
cmp
mov
sbb
pop
jg
ret
xlat
mov
xor
sahf
push
push
mov
sahf
sbb
push
arpl
cmpsl
test
in
leave
adc
in
lock
and
jbe
dec
xchg
ja
arpl
orl
loope
xchg
incl
idivl
repnz
cltd
ljmp
xor
jb
loop
nop
mov
dec
dec
ret
sbb
adc
fdivrl
mov
aaa
mov
sub
notl
sbb
or
mov
fisubl
fstl
mov
ljmp
mov
mov
frstor
in
loop
push
mov
jg
testl
jne
pop
mov
adc
fistps
call
mov
les
xchg
fnstcw
stc
xchg
mov
mov
or
aas
cmpsl
cmp
popa
cmc
add
adc
clc
std
hlt
outsb
push
xchg
dec
xchg
pop
data16
imul
dec
push
jns
out
dec
test
in
decl
je,pt
movsl
add
and
or
or
push
repz
push
xor
fdivl
mov
mov
pop
les
fucomp
mov
push
out
imul
jp
mov
cmp
sti
pop
push
sub
or
pusha
cmp
adc
add
lock
mov
leave
sub
xchg
mov
scas
outsb
frstor
bsf
mov
inc
test
movsb
nop
pushf
push
repz
jge
dec
lods
stos
sbb
adc
lret
cmp
test
pop
and
inc
movsl
xor
mov
stos
aad
aam
jp
pop
pushl
scas
scas
pop
jae
stc
aas
jp
mov
in
push
inc
and
movl
mov
call
pusha
enter
jge
and
push
mov
cltd
push
sbb
imul
and
cmp
rolb
inc
out
push
inc
sub
fdiv
pusha
mov
test
push
stos
dec
dec
mov
xorl
addb
sub
test
mov
fwait
and
gs
ror
mov
xchg
jo
test
in
cs
arpl
xchg
jne
jle
push
fidivrs
mov
mov
loope
cli
lods
leave
xchg
adc
or
mov
int3
jg
pop
mov
pop
push
push
into
inc
pop
pop
in
loop
xchg
dec
mov
xchg
mov
and
bound
ljmp
movsl
pop
jo
jp
mov
lahf
je
inc
pushl
fsubs
adc
faddl
dec
xchg
push
jns
stos
stc
dec
push
jno
daa
lea
les
push
lret
inc
pop
cmc
aad
jg
lock
mov
scas
dec
cmp
dec
in
ljmp
sbb
lods
inc
notl
lcall
pop
stos
jb
stc
mov
insl
mov
mov
insb
inc
or
sahf
jmp
xorb
mov
sbb
addr16
mov
add
insl
fstp
dec
sbb
test
ret
lock
into
cmpsb
bnd
enter
mov
cltd
or
xchg
add
push
mov
sub
jmp
or
fs
or
xor
pop
dec
outsb
dec
in
aad
or
leave
or
jae
hlt
insl
pop
imul
xor
or
loopne
insl
inc
shll
in
mov
pop
clc
in
pop
and
movl
adcb
test
enter
rorl
or
xor
pusha
popa
popa
and
push
sub
mov
aaa
pop
hlt
mov
cmp
pop
jg
lods
mov
cld
std
pop
cld
sbb
hlt
into
sub
or
xchg
rcrb
mov
lahf
cmp
clc
hlt
mov
test
std
test
xchg
lock
repnz
push
iret
xor
push
adc
xchg
leave
cld
add
mov
mov
push
cmp
leave
cmp
mov
sbb
fldl
mov
cmpsl
lods
fcomps
adc
addps
jae
lds
pop
push
ss
mov
adc
stc
pop
xchg
pop
mov
lods
stos
pushf
cs
sahf
add
test
popa
ret
sbb
adc
fsub
push
fstps
lahf
cmp
mov
dec
and
adc
push
inc
xchg
pop
jmp
out
cmpsb
out
dec
leave
outsb
adc
xor
add
test
ficoml
sub
push
add
ds
int3
jne
xchg
shl
push
add
mov
cld
jmp
push
test
test
and
xor
iret
cmp
jae
decl
leave
push
enter
popa
xchg
lods
out
dec
xor
cmp
jecxz
arpl
cwtl
repz
dec
cmp
adc
jae
push
lahf
mov
sbb
dec
dec
dec
sti
mov
testb
mov
mov
out
mov
mov
in
adc
lds
xchg
xchg
repnz
ud2
and
push
xchg
xchg
and
movsb
dec
sub
movsl
scas
xchg
or
pop
push
clc
std
push
in
jbe
pushf
shr
int
add
inc
lods
outsb
or
test
stos
mov
pop
std
cli
mov
inc
dec
popa
and
mov
aad
jbe
dec
dec
jl
adc
jmp
mov
arpl
mov
and
mov
lea
fs
mov
pop
mov
out
pop
mov
and
data16
mov
out
incl
dec
jns
icebp
in
jo
xor
xchg
or
cld
out
sub
dec
push
pop
roll
and
mov
repnz
outsl
test
pop
dec
push
pop
out
icebp
aas
jge
jno
adc
xchg
pusha
and
into
add
cmpsb
les
mov
push
cltd
pop
ss
cmpl
hlt
addr16
pushf
push
xchg
or
das
testb
push
aaa
and
inc
sbb
stc
add
in
cmp
into
xchg
ss
iret
call
push
xlat
mov
pop
hlt
xchg
dec
lret
mov
stos
in
sarl
mov
lcall
sub
xor
adc
mov
pop
hlt
push
les
loop
ret
xchg
outsb
leavew
repnz
sbb
jnp
lret
dec
push
inc
sbb
inc
push
lcall
enter
cmpsl
push
jg
or
enter
fnstcw
xchg
sti
shlb
sbb
popa
std
jae
jb
jg
leave
inc
inc
stos
lods
jecxz
sub
and
into
mov
fs
mov
out
sbb
sbb
cmp
cltd
dec
xchg
or
rolb
loope
lea
adc
in
cmp
loop
inc
fiaddl
push
jle
xlat
stc
sub
enter
push
ja
mov
pop
jge
or
addr16
out
sub
lock
fists
popf
daa
lds
sbb
sub
lahf
pop
pop
dec
sahf
je
jp
xchg
mov
lods
inc
lock
xor
fdiv
jns
mov
or
stos
sahf
cmp
ss
mov
in
jbe
ret
dec
fidivrs
lahf
or
xor
mov
pop
pop
out
pop
loopne
outsl
shr
cmp
icebp
mov
cmp
test
dec
stc
xchg
xor
fwait
xlat
add
push
sub
jmp
or
fisubs
cli
cmp
in
clc
push
xchg
outsb
push
repz
push
lock
addr16
jns
xor
sbb
mov
adc
inc
push
jnp
add
jno
xchg
xchg
fidivl
xchg
clc
pushf
dec
leave
rcr
cmc
ljmp
lods
scas
stos
xchg
inc
es
mov
shll
jno
arpl
dec
iret
xchg
pop
sbb
sub
fs
cmp
mov
cmp
or
into
sub
jno
insb
xchg
outsl
or
xchg
and
add
push
test
arpl
adc
jle
mov
push
movsb
sub
lret
inc
popa
lods
and
jp
inc
negb
sbb
mov
sbb
and
xlat
mov
sahf
insb
jmp
xchg
xor
ficoms
rcrb
out
push
push
cmc
cmpsb
loopne
xchg
out
popa
xchg
cli
xor
push
inc
cli
nop
popf
pusha
in
jmp
sbb
shrb
inc
push
shrl
incl
inc
dec
scas
iret
test
out
add
ja
out
fisubs
fisttps
loop
xor
push
data16
lret
imul
call
pop
mov
test
jge
adc
in
xor
sub
inc
call
scas
jecxz
sub
inc
xor
cmp
in
out
sahf
mov
ret
stos
dec
bound
mov
lods
xor
add
cmp
dec
jne
sbb
pushf
pop
das
xor
xchg
out
adc
cld
int
rorl
mov
das
adc
push
sti
jno
inc
lea
std
push
adc
int
aad
gs
fs
jo
popw
imul
and
jns,pn
movsb
scas
and
and
cmpl
ficompl
push
loope
sbb
push
lods
lds
cs
insl
shll
ljmp
xlat
mov
int3
add
sbb
es
adcb
add
cmpsb
xor
aam
jae
stos
push
lods
sub
daa
mov
icebp
inc
sbb
test
xor
push
fs
aas
mov
cmc
xchg
add
aaa
or
jnp
andb
push
insb
movsb
jmp
mov
cmp
ljmp
iret
adc
mov
es
out
sbb
insl
and
push
adc
and
imul
cmp
mov
std
inc
mov
test
jb
sbbl
mov
jle
fsts
mov
in
sub
imul
pop
mov
push
les
inc
outsl
cmp
mov
sbb
cmp
sahf
inc
test
lea
sbb
das
rclb
lock
lret
test
mov
imul
out
cmp
sub
mov
ss
popl
pushl
sbb
sti
das
mov
inc
add
sub
sbb
adc
adc
xchg
xor
or
jmp
mov
lods
and
lahf
cltd
test
hlt
ret
das
xchg
popa
lods
subb
in
test
mov
mov
sub
jo
and
sbb
and
inc
sbb
in
ds
data16
xchg
adc
mov
dec
cmp
testl
cld
lcall
sub
lret
xor
les
inc
jmp
cmp
into
cmc
jmp
or
andl
push
mov
lahf
xor
dec
jae
mov
add
push
sarb
mov
jae
movsb
mov
rcrl
std
jmp
mov
sub
enter
jp
mov
aaa
out
test
push
xchg
stos
xchg
js
call
inc
stos
push
clc
gs
ret
imul
out
aaa
rcrb
test
or
mov
cmc
xchg
push
push
mov
add
or
test
out
ret
in
pop
sbb
jno
mov
dec
mulb
out
mov
je
imul
pushl
insb
gs
or
jne
out
and
test
out
push
adc
into
rcll
fs
arpl
cmpsb
cwtl
stos
iret
mov
int3
inc
pop
stc
bound
sub
push
pusha
into
cli
mov
enter
lahf
inc
rcrb
movsb
daa
add
xor
xchg
pop
fcomps
clc
pop
mov
push
test
nop
ja
inc
jecxz
adc
es
dec
aad
mov
imul
out
dec
into
sub
and
xlat
aas
hlt
dec
loope
adcl
adc
mov
sub
test
out
dec
pop
addr16
imul
sbb
mov
popf
pop
adc
loopne
into
pop
pop
fistpll
jle
or
addl
pop
pop
sbb
fists
adc
js
push
jbe
cltd
xchg
mov
mov
pop
and
daa
cmp
and
add
fcom
ret
push
fwait
pop
xor
xchg
lret
sbb
sarl
fmull
ja
ljmp
jbe
xchg
adc
imul
add
insl
movsb
test
rcl
push
inc
pop
das
cmp
les
xchg
fucomp
popf
lods
push
xor
push
loope
add
sub
xor
mov
in
mov
mov
pop
cmp
fistl
in
mov
mov
arpl
push
ja
mov
cmp
mov
ret
jmp
cmp
add
std
scas
out
cmpsl
mov
jnp
cs
mov
push
push
aas
addb
dec
mov
rcrl
or
mov
sarb
push
inc
clc
jbe
cld
push
pushf
mov
push
js
pop
cs
xor
out
divb
lods
fwait
into
cld
or
in
mov
push
inc
pop
jg
cmp
cmp
inc
int3
fmul
ficomps
xor
data16
ljmp
xchg
int
pop
xlat
outsl
sbb
sbb
sub
and
lods
movsl
sahf
icebp
out
pop
pop
int
mov
enter
xchg
aaa
dec
stc
xchg
in
or
mov
sub
dec
aaa
movsb
xorl
int3
xor
cmp
cs
std
into
movsb
mov
fbld
mov
or
sub
je
fstpl
iret
nop
mov
push
lods
test
xor
out
jg
stos
sub
pop
xlat
cltd
xchg
pop
xor
imul
std
ja
xchg
sub
and
fildll
add
lock
pop
mov
pop
sarl
test
mov
pop
iret
and
cmpsl
jnp
sub
push
jb
pop
inc
xchg
add
dec
xchg
mov
fs
add
pop
int
xlat
in
outsl
and
repnz
popa
filds
inc
les
jb
int
mov
cmp
xchg
cld
aas
insb
mov
dec
jne
push
sub
ljmp
dec
sbb
pop
or
mov
out
addr16
sbb
test
lret
xchg
leave
cmpsb
clc
cli
push
shrl
jl
fildl
test
bound
cmp
std
cmpsb
xor
push
push
outsb
xchg
sbb
mov
lahf
jecxz
in
sbb
mov
gs
mov
fwait
dec
fisubl
sub
js
or
stc
lcall
or
test
fwait
mov
fsubs
ds
jl
in
test
jp
push
xchg
pop
fsubs
jecxz
iret
mov
mov
fs
mov
jge
add
in
sahf
push
addl
addr16
mov
aaa
pusha
popf
cmp
sub
imul
add
cmpb
push
shrb
cli
inc
bound
out
add
jmp
inc
pop
jl
stos
in
add
xchg
sbb
sbb
and
inc
das
popf
and
or
push
mov
iret
icebp
push
nop
push
stc
sbb
insb
popa
xchg
mov
roll
repz
ss
vfmaddsub132ps
in
cmpsl
push
leave
mov
shll
dec
aad
imul
mov
xor
outsl
jp
in
mov
dec
sbb
fimuls
dec
add
push
std
and
mov
xchg
adc
fstpt
push
jae
nop
outsl
cli
cmp
rorl
hlt
sub
push
and
jo
mov
fstpt
cltd
in
adc
in
xor
add
addr16
mov
inc
sar
mov
mov
inc
sahf
ret
and
ja
mov
arpl
push
pop
jecxz
mov
cmpsl
jo
leave
sar
jae
ret
rcr
into
mov
add
lock
add
mov
xchg
add
lea
sbb
test
mov
jo
std
pop
notl
and
push
pusha
out
and
jl
mov
pop
mov
or
aad
sbbb
jle
mov
mov
mov
xor
sub
out
cmovl
cltd
dec
loopne
mov
fisubrl
out
cmp
push
jo
jns
insl
fsubrs
insl
add
sbb
cld
or
pop
mov
jbe
addr16
adc
stos
shlb
fstps
adc
dec
cwtl
add
cmc
clc
dec
adcb
jecxz
pop
jle
or
lret
in
fwait
push
push
xchg
mov
pmulhw
xorl
fisubl
or
xchg
flds
les
test
adc
rorl
pop
xlat
inc
mull
popa
repnz
mov
push
call
xchg
lods
decb
mov
jp
or
data16
push
cmpb
mov
in
js
add
stos
jne
dec
mov
cmp
mov
ss
sub
and
fs
inc
jb
or
or
adc
roll
mov
stos
inc
cmp
dec
pop
sbb
aaa
leave
jns
ja
cmp
insl
rolb
dec
add
xor
imul
imul
push
inc
sub
push
outsb
sbb
repz
lea
dec
loope
adc
pushf
shlb
stc
icebp
xor
inc
cmpsl
pop
push
adc
or
lea
faddp
cli
out
dec
dec
add
mov
fiadds
mov
cltd
pop
ljmp
daa
jmp
loop
pusha
jae
jle
cmp
pop
ja
cmp
int
fldt
leave
lea
mov
or
or
adc
mov
pop
sub
loope
in
out
sub
push
js
enter
mov
popf
push
andb
inc
les
addb
lods
lock
es
rclb
sbb
in
jno
movsl
in
fs
dec
pop
mov
into
enter
test
push
sbbl
data16
pop
and
aam
testl
xchg
mov
fbld
ficomps
ss
dec
out
mov
pop
lock
lret
out
xchg
lods
shl
dec
xchg
xchg
mov
xlat
stos
fdivs
cli
push
lods
ss
call
popf
loope
cmp
xchg
addl
xchg
shl
adc
lock
jb
sub
and
orb
xchg
mov
inc
in
fcmovu
popf
add
mov
pause
sbb
cmp
sub
imul
in
jp
or
cltd
es
mov
ds
dec
ret
movsl
fstpt
test
push
fwait
loopne
push
pop
sets
cmp
in
jno
jb
je
jnp
inc
sbb
push
fcompl
lods
in
xor
mov
fldenv
hlt
repz
fstpt
jo
das
adc
push
pop
in
pop
xor
fstps
leave
popa
lods
js
mov
cli
fcmovnb
jo
and
lea
pop
cmc
xor
sub
lcall
outsb
xchg
cmp
popl
mov
sahf
xchg
mov
pusha
loop
mov
int3
and
out
aaa
std
mov
inc
cmpsl
lods
xchg
aas
sti
fcoml
push
xorb
mov
lahf
andl
and
xor
cwtl
mov
xor
xchg
inc
push
jecxz
push
lahf
outsb
mov
sahf
mov
pop
arpl
push
gs
ret
adc
ja
inc
dec
xor
shrl
jb
mov
shll
and
ficompl
dec
push
int3
or
stos
or
ret
out
rcrb
popa
aad
cmp
lret
test
out
jmp
cltd
pop
pop
hlt
cmpsl
or
icebp
jnp
ja
inc
loopne
ja
add
add
jns
jb
std
loop
sub
out
push
pop
ss
mov
pop
mov
dec
ja
xor
repnz
jne
repnz
test
inc
inc
shlb
cwtl
repnz
dec
add
push
push
ror
mov
add
jne
test
ret
xchg
and
mov
sahf
cwtl
fildl
popa
dec
ss
jg
cmpsb
mov
lods
jbe
filds
ret
hlt
inc
jle
pop
cli
cmp
xor
and
std
into
and
scas
fstp
sub
pop
push
sbb
adc
sahf
mov
cmc
mov
add
jge
push
std
mov
xor
pusha
sub
clc
cmp
or
repnz
inc
mov
dec
mov
loopne
mov
adc
add
mov
xchg
mov
movsb
jle
dec
mov
xchg
jb
jmp
stos
dec
cmpsb
out
jl
lcall
add
or
xor
fidivs
hlt
dec
xor
xor
push
mov
fdiv
cmp
nop
mov
mov
push
mov
nop
mov
fisubs
outsb
xchg
or
aaa
inc
popf
xor
cmpsl
add
inc
push
das
push
int3
mov
jae
into
adc
ja
scas
xchg
repnz
inc
inc
out
and
lret
test
into
je
and
mov
std
jae
jecxz
outsb
ret
adc
data16
sub
pop
inc
xchg
lea
negb
sub
in
jns
inc
lret
sbb
or
rclb
jae
roll
test
out
movd
xorb
or
and
jle
movsb
scas
js
push
loopne
int
rcrl
and
movsl
jle
push
pusha
stos
into
jle
xlat
scas
in
push
lret
test
mov
jo
test
fdivrs
push
mov
mov
pop
es
add
ret
hlt
scas
add
pop
adcl
mov
loop
mov
clc
mov
xlat
adc
fildl
adc
jo
leave
mov
or
lret
and
cmc
or
sub
pop
aad
mov
sub
es
dec
insl
sub
notl
jp
mov
mov
jne
jge
mov
mov
test
mov
push
fbld
gs
cmc
lds
fistpll
lret
divl
dec
dec
xchg
xbegin
inc
aaa
or
enter
int
testb
ret
test
mov
jno
mov
jb
testb
adc
or
and
dec
outsl
fwait
dec
push
xchg
popa
push
adc
ja
ljmp
test
mov
jmp
test
mov
sbb
addl
cmpsb
inc
ds
call
in
pusha
sub
xor
push
jbe
xchg
mov
cld
popa
out
sbb
outsb
or
push
les
xor
aam
add
jns
mov
sub
sub
add
mov
mov
sub
cmpsb
mov
mov
pop
ficomps
xlat
out
imul
jl
cmp
sbb
cmpsl
into
add
std
gs
or
fmuls
and
pop
mov
stos
fmul
sbb
loop
iret
insl
xchg
sbb
add
xchg
mov
int3
jecxz
fsubp
adc
add
call
xor
aaa
xchg
popa
inc
inc
pop
xchg
mov
jns
sbb
shlb
xchg
popf
dec
xchg
lret
add
and
outsl
mov
lea
pop
lret
in
fimuls
jp
cmp
test
sbb
mov
pop
or
xchg
arpl
sti
xor
mov
jmp
stos
xor
idivb
jecxz
or
sbb
push
jo
mov
mov
std
lret
add
int3
cld
mov
scas
mov
mov
popa
mov
lahf
dec
mov
stos
xchg
int
fcoms
push
lds
popf
inc
pop
adc
ret
pop
and
and
sti
mov
test
fldenv
out
in
fimull
mov
lea
xor
sbb
movsl
fwait
sbb
mov
or
sbb
cmp
push
or
jno
int3
jmp
inc
sub
lret
mov
cmp
mov
test
andl
xor
push
leave
sbb
cmp
mov
jns
inc
mov
xchg
sub
pop
lcall
xor
adc
pop
popf
dec
fistpl
lock
pop
push
mov
sub
mov
fcomi
mov
or
mov
lret
sub
add
xchg
in
xchg
cwtl
jae
pop
cmp
jne
loope
xlat
mov
push
cmpsl
leave
xchg
push
xchg
test
outsl
sub
test
repz
jb
and
sub
scas
lds
sbb
jge
jle
lahf
sbb
call
sbb
out
dec
pop
lcall
adc
stos
repz
in
mov
es
test
sub
popa
adc
inc
mov
and
and
dec
dec
jo
in
mov
stos
mov
fwait
lret
mov
sub
push
imulb
inc
in
adcb
ja
and
cmp
loop
pop
add
cwtl
mov
leave
xchg
inc
inc
dec
jmp
aas
pushf
xor
popl
fcmovbe
icebp
xor
lret
lds
mov
pushf
or
adc
jg
daa
pop
das
cltd
popf
add
leave
xor
mov
rorb
pushl
xor
aad
cltd
fadds
dec
cwtl
aam
test
in
fnstenv
out
jle
out
iret
inc
pushf
shl
cmp
pop
jno
sbb
jae
jne
in
add
orb
testb
movsb
ret
punpckhdq
mov
jle
outsb
mov
xor
adc
mov
inc
cmpsb
dec
mov
mov
imul
push
cmpsb
push
push
loope
xchg
or
into
dec
test
leave
out
ret
mov
inc
ja
in
imul
pop
jle
adc
scas
repnz
popf
cmp
ljmp
hlt
lea
movsb
cmc
jae
pop
mul
scas
ljmp
ja
popf
nop
xor
mov
repnz
cld
into
xchg
idivb
mov
out
mov
jl
fdivl
adc
insl
jmp
xchg
push
and
test
lret
jecxz
or
outsl
push
push
out
dec
jo
cmp
mov
push
sbb
ss
pop
lret
inc
mov
cmpsl
xchg
fscale
or
lods
jmp
jno
fisubrs
jne
or
xchg
mov
or
xlat
lret
adc
rorl
jnp
adc
mov
pop
jle
cmpsb
ss
xor
push
dec
mov
xchg
dec
bound
dec
movl
mov
addr16
les
aas
push
out
mov
nop
fstpt
cld
lret
jl
clc
enter
jp
negb
addr16
dec
pusha
xchg
mov
jecxz
jle
std
add
outsb
sbb
movsl
adc
jmp
je
rolb
add
xchg
fucomip
cmp
hlt
jb
sti
pop
push
cmc
cli
mov
fiaddl
push
lahf
sbbb
dec
cmp
cwtl
ljmp
pusha
dec
ja
xchg
stos
mov
dec
fcoml
sub
icebp
cli
cld
js
add
in
push
pop
fwait
and
ja
imul
adc
lahf
std
sarb
mov
push
mov
mov
daa
out
mov
into
mov
fstps
mov
pusha
cmpsl
xor
pop
pop
jbe
pop
mov
pop
xchg
cmp
hlt
dec
mov
xchg
xchg
and
pusha
fidivs
or
js
lods
mov
xor
mov
rorl
lret
dec
loopne
loope
stos
sub
cltd
scas
cmpsb
popf
xchg
jmp
into
imul
xor
iret
add
xchg
nop
stc
movsl
ljmp
and
mov
jecxz
andl
test
xor
pop
mov
push
sbbl
mov
rcrl
dec
push
paddsb
mov
push
aas
sub
in
inc
adc
or
push
shlb
xchg
mov
cmp
popf
sbbb
xchg
scas
adc
sbbb
fs
mov
mov
mov
sahf
lds
sbb
add
rcl
outsb
or
out
or
sbb
or
jle
arpl
push
test
adc
mov
add
data16
fidivs
add
scas
cwtl
cwtl
xchg
mov
shlb
lock
inc
bound
lods
inc
les
add
jns
cltd
pop
ljmp
jge
adc
mov
mov
dec
add
or
lcall
repnz
sbb
push
call
mull
pop
jne
add
mov
hlt
dec
in
xor
push
add
movsb
orb
adc
iret
inc
cld
daa
jo
shll
sti
sti
fistps
or
test
out
mov
sbb
pop
pop
stos
mov
xchg
xchg
mov
mov
xchg
testb
scas
fwait
icebp
xor
cmpsb
mov
or
pusha
lret
outsb
jecxz
scas
cmpsl
insl
sarb
shl
adc
out
mov
jp
bswap
and
dec
jg
push
and
ljmp
inc
scas
sbb
lea
mov
adc
stos
stos
out
cmp
imul
xor
jge
fnop
cmp
sbbb
xlat
xchg
dec
or
push
popa
aam
dec
imul
push
sub
push
sbb
lods
movl
push
and
mov
mov
aam
xlat
mov
in
pop
or
mov
xlat
sahf
pop
fnstenv
cmp
jne
fdivs
inc
jb
jne
popf
in
adc
and
sbb
pop
cmp
mov
mov
addr16
mov
jg
in
lcall
out
ds
or
mov
push
cmp
jbe
js
mov
dec
cmp
xor
scas
popf
js
insl
push
mov
mov
inc
mov
xchg
into
inc
lods
das
mov
xchg
aam
xchg
ret
lock
xchg
jno
gs
xor
sbb
cmp
shr
push
mov
sub
jno
pop
inc
inc
leave
cmpsb
ja
mov
inc
andl
xchg
xchg
add
les
sub
or
inc
jmp
in
stc
sahf
stos
or
add
pop
int3
out
mov
pop
mov
jnp,pn
sub
xchg
mov
int
cmp
mov
mov
movsb
loope
pop
enter
mov
sub
dec
adc
jnp
xor
mov
push
jecxz
xchg
xchg
push
fmull
jmp
shrb
repz
hlt
jmp
adc
jecxz
insl
flds
push
out
xchg
xchg
rorl
xor
or
cmp
xor
mov
lods
hlt
fxch
lds
out
inc
add
add
add
add
add
sbb
add
inc
add
ds
add
testb
push
add
jp
add
addb
mov
add
add
call
add
add
inc
add
cmpsb
inc
add
movb
mov
add
add
add
add
add
cwtl
inc
add
or
add
inc
add
loop
add
cmp
add
add
add
add
incb
add
inc
add
out
inc
add
add
add
add
add
sbb
add
inc
add
ds
add
testb
push
add
jp
add
addb
mov
add
add
call
add
add
inc
add
cmpsb
inc
add
movb
mov
add
add
je
jb
arpl
jae
mov
je
push
add
out
add
jne
push
inc
jne
data16
add
adc
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
and
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
dec
popa
jo
imul
insb
add
add
je
outsb
fs
inc
imul
insb
gs
push
add
gs
js
leave
add
jb
jo
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
xor
inc
push
dec
gs
inc
jne
inc
add
xchg
add
gs
dec
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
insl
push
outsl
inc
push
add
inc
push
xor
cs
insb
add
in
add
addr16
jo
outsb
dec
gs
js
add
push
inc
push
dec
xor
cs
insb
