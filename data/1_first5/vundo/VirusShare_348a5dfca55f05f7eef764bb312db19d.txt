add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
bound
adc
and
xor
inc
inc
je
or
loop
repnz
ret
mov
lds
hlt
bound
adc
and
xor
inc
xor
adc
loop
repnz
mov
shlb
in
hlt
bound
adc
and
xor
inc
xor
adc
repnz
sar
lret
mov
cmp
xor
push
xor
and
sub
incl
mov
jmp
dec
fistpll
or
in
adc
fsubrl
pop
push
mov
sbbl
adc
aam
neg
repz
and
loop
cwtl
xchg
cmp
cmp
call
daa
mov
xor
shll
inc
and
jp
loop
loop
dec
hlt
xor
xor
xchg
nop
hlt
popf
les
jmp
fldt
cltd
iret
cmp
bnd
adc
xchg
mov
bound
add
or
out
cltd
std
mov
cwtl
nop
cmp
xchg
dec
sahf
aad
test
add
adc
and
xor
inc
xor
adc
repnz
ret
mov
les
mov
add
insl
daa
gs
jne
add
add
mov
idivl
xchg
xchg
xchg
popa
push
aaa
push
fs
pop
adc
xor
pop
xchg
lock
ret
xchg
out
mov
xchg
mov
sub
dec
and
push
add
loop
repnz
ret
mov
les
hlt
bound
adc
and
xor
inc
xor
adc
repnz
ret
mov
les
hlt
bound
cmp
dec
jbe
clc
mov
sti
ja
push
addb
cli
fldl
cmp
push
sub
cld
jno
xchg
push
in
jae
loop
jle
in
xor
adc
rolb
gs
shll
mov
sbb
xchg
clc
push
movsb
out
pop
in
shrb
ficomps
mov
jmp
sbb
cli
mov
dec
lds
sub
sbb
mov
shl
aaa
lods
icebp
push
cmc
fcos
pop
pop
inc
lahf
leave
fnstenv
xlat
loop
shll
or
or
pop
subb
adc
and
push
mov
sub
sbb
mov
mov
jle
outsb
or
sbb
adc
sarl
imul
pop
ja
cli
sbb
pushf
cmpsl
cmpsl
mov
adc
je
and
xchg
inc
addr16
cmp
imul
icebp
push
xchg
cmp
mov
in
fcmovne
ret
cmp
fildll
adc
push
stos
lods
inc
ds
dec
aas
xlat
bound
int
rolb
mov
hlt
jecxz
arpl
mov
scas
sbb
mov
dec
mov
xchg
jl
mov
testb
jno
dec
jne
inc
or
push
lock
mov
sbb
in
fcoml
dec
das
lods
int
cmp
push
pop
cmc
std
adcl
mov
subl
xchg
add
mov
inc
stos
mov
aas
push
dec
leave
mov
mov
js
fimuls
xchg
xor
mov
xchg
sbb
pop
lcall
mov
fisttpl
in
or
pop
xor
mov
cltd
lods
mov
sbb
div
mov
xorl
jmp
test
in
pop
in
pop
push
dec
mov
fisubrl
push
push
inc
pop
mov
test
or
addr16
icebp
cwtl
xor
cmp
stc
out
dec
cli
jg
les
adc
sti
dec
insl
in
daa
pop
std
jne
out
mov
dec
clc
cs
lods
mov
shlb
xor
mov
fwait
xor
fsubr
jno
pop
or
ljmp
dec
or
cwtl
adcl
sub
out
xchg
rclb
push
ret
pushf
inc
xchg
and
mov
mov
jg
loopne
bound
cs
mov
cmp
ffree
lock
call
sbb
decl
popa
or
ret
into
cmp
mov
pop
movsl
fwait
popa
int3
cmp
pop
jg
xchg
movsl
repnz
aas
hlt
gs
pushf
sbb
sti
jno
mov
cs
mov
dec
mov
scas
imul
cld
cld
jg
negb
and
fildl
pusha
xor
xchg
mov
xlat
xchg
imul
or
sti
addr16
pop
push
pop
and
out
mov
dec
inc
or
hlt
in
pop
sub
adc
inc
jb
push
and
push
push
sahf
inc
orl
dec
in
repz
cmp
xor
test
int3
jae
xchg
cwtl
mov
cmpsb
mov
and
scas
sub
jb
jecxz
add
xchg
sub
add
mov
cmp
imul
incl
jp
inc
pop
cmp
inc
rcl
cltd
pop
hlt
ret
sub
dec
clc
push
ja
jb
mov
push
mov
or
js
pop
xor
adc
jmp
callw
sbb
popf
pop
rcrb
cmp
es
cld
rcl
jecxz
jno
cmp
add
jae
stos
sbb
and
sbb
mov
outsl
pop
push
sub
push
push
cld
xor
jae
ret
int3
xor
add
leave
sbb
adc
nop
xor
aam
jnp
loop
inc
pushf
pop
stc
push
fiadds
loop
sbb
add
cmpsb
ljmp
das
movsb
mov
xor
pop
pop
jg
or
popa
add
int3
out
jbe
rol
inc
cwtl
xchg
ds
or
cmp
lret
stos
lods
sar
and
iret
bnd
cs
imul
lods
sub
movsl
xlat
repnz
or
fdivrp
mov
mov
pop
push
and
adc
push
mov
scas
xchg
push
push
imul
push
fs
or
aad
push
icebp
mov
insl
sub
jmp
ucomiss
in
adc
fcomps
and
or
sub
orl
mov
add
cmp
scas
pushf
fs
lahf
repz
cmp
pop
pop
pop
inc
mov
push
cltd
in
out
lds
xchg
fdiv
pop
lea
pushf
int
add
leave
xchg
xor
inc
int3
nop
xchg
in
ficomps
cltd
inc
adc
js
pop
dec
rorb
mov
sarb
cwtl
xor
sbb
test
push
fdiv
repnz
stos
addr16
int
movsl
inc
aam
pop
inc
sti
insl
or
mov
ja
inc
or
mov
repz
sbb
mov
aas
add
cmpsb
adc
aaa
sbb
mov
inc
jne
xor
cs
test
test
adc
cld
sbb
rcll
push
mov
cmpsl
jnp
pop
adc
lret
sub
mov
rorb
xor
inc
mov
mov
inc
fistpll
dec
scas
push
ds
shl
jle
inc
mov
sbb
ret
lods
out
cmpsb
jle
or
addr16
ljmp
push
ljmp
data16
lret
pop
cwtl
push
xchg
popa
add
fdiv
ss
mov
push
sbb
inc
shll
jl
sub
sub
push
push
jne
jo
in
call
inc
mov
enter
push
jmp
div
xchg
xchg
pusha
int
and
xor
xchg
inc
and
add
add
push
pop
cmp
shlb
andb
push
test
mov
and
mov
bnd
cmp
pop
dec
lods
into
jo
jp
or
je
mov
jle
aas
mov
push
sar
sub
mov
mov
sub
repnz
sub
inc
data16
in
pop
fucom
push
cmp
xor
lds
cli
add
outsl
mov
pop
lock
aam
inc
sar
mov
inc
sbb
addr16
cmp
jl
lret
ret
std
push
loop
mov
push
cld
pop
icebp
dec
dec
ljmp
cld
iret
push
adc
pop
xchg
dec
sarl
xor
add
sbb
scas
lock
out
in
pop
mov
push
daa
iret
pop
in
and
in
jbe
jg
mov
fmull
out
sbb
inc
dec
out
outsb
push
enter
popa
mov
xchg
or
ficoml
sahf
loop
lods
mov
mov
rorl
repnz
jp
cli
inc
loopne
mov
ljmp
out
adc
pushf
adc
adc
cmpsl
inc
adc
aad
mov
xchg
cli
add
into
mov
scas
or
push
into
pop
push
mov
frstor
jl
pop
and
xchg
cmp
jno
mov
rolb
fists
xor
mov
mov
addb
push
push
cltd
out
fcmovbe
inc
jle
in
mov
sarl
lea
iret
fadds
add
bound
fs
in
xlat
aam
repz
test
scas
xchg
aam
daa
inc
mov
xlat
rcrb
mov
std
lret
aad
stc
add
push
loop
outsb
mov
push
test
packsswb
subl
rclb
pop
fwait
ret
mov
xor
int
int
aam
mov
and
inc
adc
push
in
cmpl
push
stc
int3
in
cs
repnz
test
hlt
xchg
shr
and
shl
iret
mov
call
mov
negl
xchg
inc
shll
push
mov
adc
push
mov
lds
int
jmp
mov
shr
out
loop
jno
sbb
sbb
inc
je
loope
icebp
sub
mov
mov
push
imul
ds
mov
cli
pop
push
jg
in
push
push
movsl
lock
mov
pop
cs
popf
xor
test
adc
sub
imull
cltd
out
aaa
loope
xchg
mov
dec
cli
pop
rcrb
push
rorb
loope
cld
loop
mov
sub
jae
add
xor
or
mov
pop
xchg
pop
mov
xor
sub
xchg
inc
andb
fwait
loope
bound
dec
jo
jge
inc
pop
aas
into
test
and
dec
dec
dec
mov
sbb
lea
mov
xchg
daa
ds
fdivrl
and
jl
push
jle
mov
jmp
mov
pop
lea
push
push
cmpsb
jns
adc
cld
xor
lea
fldcw
bnd
inc
sbb
loope
pop
cmpsb
int
xor
std
and
xor
aaa
out
xorb
pop
sbb
gs
xor
fcoms
jb
push
call
and
or
push
test
mov
sub
add
sbb
in
mov
inc
repz
out
lock
sbb
in
pushf
dec
aad
sub
stc
ficompl
push
ss
jl
lahf
jl
dec
fcmovb
bound
jbe
imul
xor
mov
xchg
add
je
dec
ds
outsl
bound
dec
jge
test
loop
xor
ror
je
xchg
jne
sub
sub
jg
mov
hlt
bound
cmp
inc
xchg
int
arpl
add
lods
adc
gs
popf
push
add
inc
cld
inc
fbstp
cmp
arpl
jge
xor
les
je
pop
dec
xor
sti
loopne
ret
aaa
or
clc
mov
std
sbb
fstpl
push
ds
and
jp
push
mov
push
in
fstpl
in
pop
mov
dec
pop
push
repnz
and
and
sub
enter
xchg
lods
inc
movsb
movsl
mov
pop
repz
and
inc
mov
out
repnz
add
cmp
scas
out
test
inc
pop
cmpsb
rcrl
jne
pop
mov
movsl
in
xchg
xor
mov
jns
sbb
pop
push
popf
bound
movsb
mov
lods
outsb
jge
pusha
push
cmp
int3
dec
inc
sub
call
iret
popf
loopne
aaa
aad
in
lret
jo
mov
jmp
int3
cmpsl
ret
iret
je
insl
daa
push
sbb
and
xor
es
in
xchg
dec
rcr
jecxz
push
pop
mov
repnz
mov
sti
les
mov
sub
mov
loopne
pop
lahf
arpl
jno
sbb
arpl
imul
pop
mov
adc
cld
sti
movsl
fiaddl
repnz
push
addb
mov
dec
cmp
int
cld
dec
cwtl
fbstp
cmp
and
push
inc
in
outsb
mov
lds
cmp
aad
fnstsw
jp
div
imul
lret
pop
xchg
adc
lret
in
mov
pop
xchg
gs
mov
jb
std
cmp
or
xlat
adc
aas
push
icebp
sahf
std
loope
hlt
leave
jmp
xor
pop
in
addr16
mov
mov
adc
xchg
insb
movsl
inc
xor
shll
fstps
pop
or
js
push
add
mov
push
lahf
loope
sbbb
hlt
and
ret
pop
orl
xor
mov
adc
cmp
mov
ficoml
movsb
jb
in
dec
les
dec
jmp
movsl
jge
xor
sub
mov
dec
pusha
outsb
mov
aaa
bound
or
test
mov
adc
pop
lcall
jecxz
aaa
ss
arpl
pop
mov
in
aam
imul
lods
inc
outsb
dec
mov
or
and
xchg
jmp
in
faddp
or
adc
jo
dec
mov
inc
sub
or
stos
sub
mov
sub
pop
loop
leave
enter
fcos
jecxz
aam
mov
mov
int3
cmp
addb
je
in
jecxz
cmp
push
addr16
movsl
xchg
sub
jg
out
xchg
fwait
push
and
outsb
ret
sbb
push
mov
add
ljmp
mov
mov
rcll
push
mov
outsl
fstpt
rcll
cmp
inc
jp
stos
push
iret
or
add
ljmp
dec
test
cwtl
pop
sub
clc
mov
dec
cltd
mov
out
push
das
add
ret
rcl
rclb
in
jecxz
into
ficoms
pop
fs
mov
inc
cltd
xor
adc
cmp
and
mov
int
or
cli
push
mov
aas
popa
cmp
jg
mov
fsubrl
imul
adc
fs
pop
push
sbb
adc
sahf
fisubrl
or
enter
imull
fidivrl
fistl
aas
jns
cmp
xor
or
daa
mov
sbb
hlt
xchg
adc
adc
fucomp
daa
int
xor
mov
lret
fcmovnb
push
pop
inc
addr16
lods
fld
test
inc
andl
inc
jg
loopne
das
adc
cltd
ds
sub
fsubrl
pop
jb
mov
pop
mov
cmp
push
shll
xor
mov
out
pop
out
pop
jge
jns
xchg
sub
aas
adc
call
dec
inc
and
adc
int
pop
adc
ss
lret
push
std
scas
jne
rcll
cmp
pusha
enter
jns
data16
cmp
jns
in
and
ja
call
sbb
out
loop
cmpsb
jns
rolb
fidivl
lahf
xor
cwtl
jno
and
orl
xor
inc
or
imul
cltd
ret
pop
pop
jns
push
add
and
inc
fsts
lods
fldt
push
dec
mov
ficomps
mov
xor
lods
mov
or
in
sbb
pop
push
mov
sar
shl
push
pop
sub
int
fiaddl
sub
sahf
add
mov
xchg
add
int
pop
rcrl
adcb
lcall
cld
shl
mov
shll
nop
fdivrs
push
sahf
in
loopne
inc
sub
push
xor
mov
mov
push
xchg
sbb
lret
sbb
ss
xorb
mov
mov
push
jne
xor
or
xor
sbb
mov
or
ficompl
dec
dec
ljmp
ret
out
shlb
addr16
andb
test
arpl
ret
jl
gs
sub
push
mov
ja
enter
stos
cltd
bnd
adc
dec
mov
outsl
mov
ret
inc
in
mov
xor
mov
cmp
cmp
jo
push
addr16
test
in
dec
push
cltd
pop
inc
sbb
std
rorl
bound
int
push
cli
lods
ss
cvttps2pi
cmp
xchg
shll
call
xchg
mov
sbb
jl
inc
gs
push
out
add
pop
scas
mov
lcall
orb
cwtl
ja
inc
add
int
test
xchg
push
repz
push
mov
iret
call
pop
mov
out
punpckhwd
xchg
or
movsl
jne
mov
cmpb
sub
ja
jb
or
or
or
sub
out
imul
mov
sub
push
rcl
ja
add
sti
movsb
lret
xchg
mov
mov
addr16
pop
pop
xor
sarl
sahf
add
push
dec
mov
ret
cld
adc
sub
pop
dec
js
pop
stos
inc
sub
push
cmp
jne
jp
pop
aad
nop
push
lcall
mov
sub
pop
repnz
iret
jl
pop
pop
and
or
fcomps
xchg
cld
or
sbb
mov
cwtl
cli
mov
icebp
inc
das
mov
fchs
enter
cli
pop
movsb
and
push
iret
das
movsb
enter
cmp
jb
mov
jl
mov
push
sbb
outsb
and
xor
lahf
out
lds
jge
sbb
jge
mov
hlt
ja
xlat
push
addl
pop
shrb
cmp
sbb
mov
xor
push
mov
inc
loopne
lods
mov
lret
arpl
pop
mov
mov
pop
mov
mov
cmp
cmpsl
sahf
xor
lods
les
repz
rorb
mov
out
mov
sbb
mov
mov
sbb
cmp
add
rcll
lods
testb
xor
loopne
into
outsl
fdivl
mov
cmpsb
rcll
mov
sub
int
lock
inc
ret
xchg
xchg
mov
mov
ret
inc
loope
jle
jmp
sbb
pop
push
lods
leave
ds
cwtl
mov
int
pop
dec
sbb
and
or
repz
dec
inc
test
icebp
cmpsb
cmc
pop
pusha
sti
repnz
pop
sbb
jo
inc
lcall
and
mov
inc
xchg
push
push
jmp
test
add
adc
push
push
push
repnz
push
inc
std
add
in
ficompl
push
movsl
std
inc
test
inc
push
loop
sbb
stos
cmc
je
or
xor
in
push
push
dec
mov
fs
or
and
adc
adc
and
pop
sub
mov
add
aas
sbb
mov
test
push
arpl
xchg
out
ret
mov
or
fld
push
mov
je
mov
ret
scas
into
aas
in
int3
sub
mov
xor
inc
mov
or
mov
mov
subb
dec
sahf
aaa
popf
cli
mov
pop
mov
or
mov
outsb
test
jmp
aad
repz
mov
push
cmp
cmp
repz
jmp
inc
lds
sub
gs
xchg
lods
xlat
test
ret
mov
inc
mov
leave
jge
lock
pop
int
aaa
sub
lahf
mov
fidivrs
mov
sub
rcrb
push
popa
mov
and
adc
cmovno
lea
mulb
aas
inc
lret
sub
call
popf
add
pop
lea
jnp
outsb
cld
aas
jno
das
lods
cmpsb
imulb
enter
cmpsl
movsl
nop
out
mov
push
pusha
int3
cld
scas
inc
addl
pop
stc
pop
hlt
add
push
dec
mov
mov
lret
add
and
out
dec
jo
xchg
test
scas
xchg
movsl
mov
push
mov
daa
sti
fstpt
dec
adc
out
js
jno
mov
mov
popa
sbb
or
sbb
sbb
scas
sahf
ja
cwtl
in
lock
shll
pop
popf
clc
add
jecxz
cmp
push
sub
fimull
adc
inc
pop
dec
jl
mov
lret
imul
mov
cmpsb
and
int
fstpt
enter
movsb
test
adcl
in
mov
jl
add
xchg
inc
sub
add
inc
aaa
pop
mov
gs
mov
imul
and
dec
push
lahf
sar
pop
lods
sub
xorb
sbb
addl
jnp
and
cmp
mov
out
loope
out
js
add
into
fists
adc
inc
lahf
addr16
nop
lock
push
sbb
scas
push
inc
test
push
dec
push
hlt
jno
and
sbb
mov
add
sbb
aas
test
cltd
xor
jo
cld
mov
cli
rorb
xorl
scas
fwait
pop
movsl
std
pusha
sbb
pop
add
cmp
push
mov
movsl
sub
mov
loopne
push
and
fcomps
lods
enter
repz
test
lcall
movb
imul
fs
mov
xchg
cmp
andl
jmp
mov
inc
lahf
jmp
dec
idivl
add
stos
daa
mov
call
lds
fcomps
mov
push
push
and
mov
jo
adc
or
jg
fdivrs
xchg
sbb
insl
push
mov
shl
out
adc
sub
testl
push
dec
adc
or
flds
test
inc
mov
ret
pop
xchg
ss
int
fcomp
push
clc
push
out
outsl
cli
dec
pop
sbb
inc
mov
scas
popa
add
adc
jmp
out
cld
std
adc
mov
shl
sub
jnp
out
jo
mov
sahf
js
fcmovbe
mov
jg
xor
out
scas
xchg
ljmp
out
das
xor
dec
pop
je
call
getsec
inc
cmc
sbb
add
pop
lods
jo
mov
jne
iret
shll
pop
cmc
lret
push
loope
in
rcrl
mov
out
insl
inc
movb
je
push
fistps
jecxz
pusha
cmpsl
push
jne
hlt
scas
subb
mov
popf
inc
sub
mov
test
bound
pusha
mov
out
sbb
je
adc
das
stos
nop
push
insl
dec
cltd
into
dec
sub
jp
popf
add
inc
sub
push
push
mov
adc
and
xor
inc
xor
adc
repnz
ret
mov
les
hlt
bound
adc
and
xor
inc
xor
adc
repnz
ret
mov
les
hlt
bound
adc
and
xor
inc
xor
adc
repnz
ret
mov
les
hlt
bound
adc
and
xor
inc
xor
adc
movsb
rol
aad
cmp
jge
insl
or
in
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
icebp
jb
inc
rcll
rcrl
and
repnz
ret
xor
add
roll
push
mov
mov
adc
popa
xchg
push
ret
icebp
mov
add
roll
push
mov
mov
adc
inc
repnz
out
frstor
xchg
scas
bound
add
sub
lcall
cli
fcoms
cmp
add
repnz
lods
dec
mov
jl
mov
in
scas
ret
mov
pop
inc
rorb
mov
cmp
jno
xor
das
popa
mov
add
icebp
ja
icebp
mov
and
cld
cmp
sahf
scas
cmp
popa
dec
xchg
jge
pop
push
addb
xor
lods
call
pop
les
aam
cmp
bound
add
or
push
lea
and
stos
jae
push
mov
es
xchg
repnz
shrb
popa
mov
jne
xchg
adcl
mov
mov
adc
popa
repnz
ret
xor
add
mov
xchg
jb
sub
xor
dec
addl
add
push
stos
cmp
addb
bound
mov
in
jmp
lcall
xor
dec
fnstcw
je
xchg
sub
and
and
adc
popa
repnz
ret
xor
add
roll
push
mov
mov
adc
popa
repnz
ret
xor
add
dec
lock
adc
iret
mov
sub
loopne
mov
orl
stos
clc
les
jae
dec
mov
push
rol
push
jne
ds
xchg
test
cmpb
lods
mov
cmp
adc
inc
mov
cmp
sub
int3
cmp
xchg
mov
in
dec
fisubl
add
iret
loopne
jae
dec
adc
jge
insb
xor
insl
pusha
add
stos
ret
pop
sub
jmp
jno
push
sub
or
loopne
repz
fwait
mov
lods
adc
xchg
lret
mov
daa
repz
lods
enter
pop
std
xor
icebp
and
xchg
sbb
pop
mov
xor
int3
fidivrs
and
sub
dec
fsubrs
clc
jg
test
mov
pop
jne
lret
dec
inc
lret
xlat
pop
dec
jle
in
or
dec
popf
mov
or
imul
and
xchg
pusha
pop
loop
add
jne
roll
mov
mov
mov
rclb
jmp
js
and
mov
js
cmpsb
pop
push
inc
les
xchg
and
mov
mov
dec
mov
out
xor
daa
popf
xlat
mov
les
mov
sub
mov
cmpsl
push
push
sahf
ljmp
dec
imul
lret
fs
and
sbb
jl
cmc
insb
mov
cltd
mov
das
jne
xlat
jg
xchg
push
into
xor
mov
mov
shll
pop
das
in
push
hlt
mov
ss
daa
sbb
pop
lret
jmp
shlb
movsb
push
je
mov
js
xchg
mov
sub
popf
or
jle
push
mov
sbb
jge
jecxz
xchg
sarb
mov
pop
bound
and
icebp
gs
out
pop
scas
add
mov
loope
pop
inc
sbb
dec
xor
mov
mov
aaa
icebp
sbb
xor
xor
int3
fsubr
mov
mov
jg
xchg
dec
arpl
call
dec
out
cmp
sti
sti
mov
hlt
in
ja
gs
lret
add
push
into
in
push
fwait
push
je
or
push
stos
mov
sub
adc
mov
nop
aaa
xchg
test
xchg
adc
out
lret
or
rcrb
pop
data16
call
jb
movb
cmp
cmp
aad
imul
pusha
ror
fstl
sbb
lods
call
lods
cli
iret
pop
mov
inc
add
loope
mov
js
inc
insl
inc
lret
and
or
sub
lret
sub
ljmp
xor
ds
insb
loop
mov
inc
xchg
test
mov
addr16
repz
and
push
scas
cli
push
adc
pop
fisubrl
iret
push
pop
repz
cmp
push
mov
dec
xchg
xchg
and
pop
pop
cmp
cwtl
movsl
out
sub
xor
test
lock
xchg
sub
fisubl
mov
push
ds
mov
je
or
movsb
incb
js,pt
push
pcmpgtd
fsubl
cmp
pop
outsl
xchg
pop
lods
iret
int3
lea
cmp
add
cmp
scas
aam
pop
xor
xchg
pusha
fists
jbe
add
fiadds
push
xchg
or
test
push
stos
ss
jg
mov
push
icebp
lret
cmp
pop
fs
push
pop
shlb
push
xchg
cmp
adc
lods
mov
repnz
cmp
pop
cmp
ret
add
cmpsl
into
dec
push
aam
mov
sti
pop
in
cmc
and
or
mov
xchg
sub
mov
cmp
sbb
loopne
push
mov
jae
mov
pop
into
xchg
mov
jne
imul
nop
fldenv
lds
les
test
xchg
shll
loopne
sbb
cltd
cmp
mov
xchg
aas
mov
imul
inc
lods
test
vpminub
pushf
jae
out
out
cmp
dec
cmp
enter
rclb
lcall
mov
lret
push
mov
stc
xchg
push
imul
mov
iret
xchg
pop
cld
pop
inc
in
dec
out
xchg
int
mov
lock
scas
and
rclb
or
adc
outsb
aam
dec
lods
inc
xchg
jbe
or
jmp
adc
in
aam
xchg
lock
or
add
jle
movsl
cld
cmp
enter
jbe
mov
cli
jno
ficoms
test
div
dec
std
cmpsb
cs
inc
call
cmpsb
test
mov
aas
xor
xchg
push
or
mov
sarl
imul
icebp
ljmp
push
push
or
and
addl
ds
and
mov
cmpsl
call
aaa
push
in
hlt
lahf
fsubl
and
aad
lret
cmp
into
mov
shrb
iret
lods
cld
dec
leave
jo
cmp
aad
nop
ss
out
pushf
xlat
adc
daa
push
sbb
xchg
lret
mov
cltd
iret
jge
fldenv
cmpsb
cmp
fimuls
sarb
or
dec
fidivs
mov
add
sahf
rorl
imul
movsl
enter
call
sahf
mov
mov
sbb
subl
pop
xchg
into
jl
out
dec
scas
jecxz
clc
lods
and
aam
sbb
lret
stc
int
pop
mov
xor
lods
leave
pop
mov
add
mov
xchg
inc
addl
test
daa
xchg
mov
lahf
sub
repnz
jge
dec
mov
scas
inc
das
jmp
or
and
mov
xchg
shrl
inc
or
xchg
in
ljmp
inc
clc
dec
or
addr16
jmp
push
add
jmp
jae
inc
mov
sub
imul
out
mov
pop
add
sbb
mov
mov
cltd
inc
jg
cwtl
inc
mov
adc
ljmp
xor
rorb
test
outsl
ss
sahf
inc
shll
fnstenv
fs
add
rsqrtps
pop
lret
adc
pop
shrl
out
mov
adc
adc
mov
or
inc
clc
aas
or
dec
pop
out
shrb
loope
sub
in
out
xor
iret
and
rclb
add
lods
fistl
loopne
enter
cmc
addr16
mov
stos
insb
je
pop
shrb
jns
adc
jmp
fs
lea
cmpb
xchg
mov
dec
xor
lock
push
in
aas
mov
call
add
in
push
test
cltd
leave
addr16
mov
fnsave
add
orb
sarb
mov
adcl
mov
sub
rcrb
stos
decb
int
and
mov
notb
jmp
fcoml
fmuls
add
adc
fisubrs
xlat
mov
dec
inc
loop
push
pop
cmp
or
push
lret
jecxz
test
shll
sbb
jo
in
icebp
sti
pop
test
xor
jae
mov
sub
pop
adc
out
dec
xor
outsb
jbe
and
daa
sti
daa
sub
inc
cli
cmpsl
pop
sub
pop
jg
jp
jge
movsl
fists
shlb
xchg
add
inc
or
add
ss
cmp
mov
sub
movsb
cmp
jl
or
mov
pop
xlat
push
movsb
mov
pop
sti
les
sub
push
mov
ficoml
loop
sub
xchg
cmp
mov
das
dec
arpl
push
mov
xor
jb
add
pushf
push
and
aad
mov
or
sub
sub
loope
or
xor
ljmp
cmp
nop
sub
or
xor
push
and
add
das
cmpsl
pop
roll
cmovo
out
adc
mov
push
pop
dec
test
jl
add
test
mov
ret
call
pop
pop
cmp
mov
out
xchg
in
pop
xor
sub
dec
dec
cmp
imul
inc
out
loop
mov
cmp
jecxz
fstpl
jge
test
and
mov
loope
insb
rep
push
stos
pop
fsts
jge
push
lock
dec
nop
lods
mov
xor
cmp
jg
repnz
jmp
fwait
sbb
jge
or
pop
jg
mov
mov
enter
jne
push
sbb
ja
adc
rclb
push
push
mov
mov
aad
mov
pop
mov
mov
jle
pop
pop
xor
cmc
fnstsw
jns
aas
pminsw
jecxz
mov
lock
or
dec
push
frstor
in
sbb
jnp
add
adc
add
lar
cld
shl
bnd
xor
dec
xchg
faddl
and
roll
push
cmpsl
popf
and
adc
jmp
inc
mov
pop
adc
xor
inc
push
test
mov
cmpsb
adc
pop
jae
lahf
das
adc
push
push
gs
add
adc
pop
adcb
mov
in
cld
ljmp
or
rep
push
jle
dec
lret
adc
ficoml
xchg
xchg
and
int3
mov
sub
inc
jns
jl
ss
jmp
sub
fisubrs
push
push
xchg
xchg
dec
scas
js
dec
xor
and
loopne
jnp
loope
mov
mov
mov
mov
sub
push
inc
adc
add
add
sbb
mov
jmp
adc
pop
adc
rcr
and
pop
ss
cmp
sti
and
movsl
xlat
push
or
dec
and
push
call
popa
pop
sti
imul
push
push
lods
leave
cmp
xchg
dec
sbb
dec
aam
lds
add
dec
fldcw
xchg
inc
data16
mov
gs
pop
mov
dec
scas
div
test
mov
rcrl
pop
enter
dec
lds
clc
mov
mov
lret
pop
mov
pop
sub
movsb
add
adc
fucom
je
imul
xor
xchg
mov
icebp
scas
jmp
and
sbb
fldcw
mov
add
xlat
sbb
cmp
and
jbe
mov
test
ret
sub
imul
lock
add
jle
dec
cs
push
aam
pop
dec
cmpsb
in
lds
mov
orl
pushf
add
cmp
in
loopne
mov
jg
lcall
push
sbbw
lahf
and
mov
or
pushf
mov
cmp
inc
and
push
das
and
lret
mov
outsl
in
test
rclb
mov
scas
pop
mov
mov
in
scas
pop
xor
fs
push
pop
lods
push
sub
pop
sti
in
ja
lcall
call
sub
cs
out
dec
das
pop
ds
adc
lcall
lahf
popf
les
lods
xchg
movsb
leave
cmc
push
stos
add
pop
test
jnp
push
mov
les
mov
and
sub
outsl
mov
fs
inc
loop
mov
cmp
out
movsb
cmpsl
imul
in
scas
inc
popf
push
mov
je
ja
lods
fmuls
mov
add
incb
sub
adc
lret
cmp
mov
mov
ds
ja
or
pop
cmpsb
loop
mov
mov
add
push
cmpsl
and
mov
outsb
jmp
pop
js
aad
imul
enter
push
jmp
push
pop
and
jno
xor
jecxz
ljmp
jp
xor
mulb
cmp
adc
hlt
pop
movsl
inc
xor
mov
mov
sub
pop
xchg
das
imul
fstps
hlt
mov
add
mov
sbb
daa
ds
test
icebp
adc
stc
in
insb
adc
in
sti
into
xchg
clc
loopne
jo
cmpsb
into
sub
adc
lret
cli
ljmp
cmpsb
stc
stos
push
mov
out
sub
lret
and
cmp
dec
adc
inc
out
dec
cli
sbbl
shll
sbb
jae
adc
mov
mov
xchg
rorb
int3
xor
sbb
cmp
les
mov
push
stos
mov
lret
mov
push
lock
jl
mov
sar
jbe
mov
jle
and
movsl
mov
in
test
push
outsb
sub
in
sub
scas
push
push
cmp
xlat
inc
push
adc
test
fistpl
mov
add
imul
xchg
or
fdivl
es
sub
push
ret
push
shl
push
mov
nop
cmp
sbb
outsb
inc
pop
jbe
mov
inc
mov
cltd
mov
push
pop
call
sub
aas
cltd
and
outsl
dec
dec
bound
gs
std
int3
push
shll
stc
add
xor
rcll
mov
xchg
jecxz
mov
cmpsl
and
scas
inc
mov
ss
jno
int
out
push
les
hlt
xchg
loopne
inc
into
pop
xchg
inc
icebp
inc
and
loopne
push
in
xchg
lds
fdivs
jg
xchg
add
jmp
inc
pop
pop
push
dec
rcr
rcr
jl,pt
and
sub
ficoms
or
xchg
jl
adc
sub
lea
cmpsl
jp
ds
jl
gs
fisubrl
jae
jbe
mov
adc
and
dec
lret
scas
sbb
push
mov
inc
mov
stc
sub
or
jb
and
pop
popa
sbb
cmp
rcrl
lds
push
shl
cmc
inc
divl
inc
sbb
pop
into
shl
adcb
pop
cmp
cmp
and
test
data16
jle
cltd
mov
lods
pop
jmp
mov
sub
pop
out
data16
jp
mov
sbb
dec
lahf
popa
sub
mov
push
testb
cmp
inc
inc
daa
lock
mov
cmpxchg
adc
mov
enter
push
sbb
arpl
ds
mov
jo
test
int3
mov
pusha
dec
xchg
sub
pop
mov
fistps
imulb
or
sbb
cmp
pop
dec
roll
loopne
mov
outsl
fwait
pop
clc
sub
mov
cmp
lea
xchg
lret
pop
pop
xchg
je
ja
push
in
data16
lcall
cld
das
sub
xchg
mov
sbb
movsb
aam
and
popa
mov
outsb
lahf
repz
lea
out
arpl
popl
adc
sub
add
push
adc
add
les
cs
inc
int3
ret
test
adc
repnz
pop
gs
push
cmp
jae
pop
loope
lret
add
call
into
sub
jp
std
xor
es
gs
arpl
push
loope
mov
xchg
test
arpl
pop
xor
xchg
inc
pushf
jne
std
pushf
dec
xchg
jg
push
rolb
jns
fs
push
pop
mov
inc
mov
leave
scas
je
fidivrl
inc
in
dec
test
jg
jae
bound
pusha
fsts
notl
leave
lock
iret
ds
sbb
add
mov
into
rclb
out
aaa
cmp
lock
sarl
lods
jge
mov
mov
div
and
in
dec
jno
loop
and
test
inc
call
data16
jp
mov
pop
lock
mov
addr16
and
leave
jp
jge
ret
mov
ficoml
scas
and
pop
ret
and
xchg
test
popa
roll
mov
bound
push
jne
adc
sarl
addr16
fsubrp
ljmp
repnz
mov
add
sbb
addr16
orb
jno
int3
inc
mov
mov
dec
add
jae
pop
and
add
inc
add
mov
fcoms
ret
lahf
sub
mov
in
xchg
jns
pop
aad
and
repz
mov
push
sbb
ja
pop
repnz
in
in
in
inc
insl
aam
les
jge
xor
cltd
mov
out
or
dec
lret
sbb
dec
in
cld
shll
out
arpl
fbld
xor
je
ljmp
pop
or
std
xor
orb
ljmp
aam
xlat
push
dec
ret
sbb
lahf
es
ficoml
insl
jns
insl
aad
lcall
and
arpl
push
and
icebp
mov
cmpsb
jae
dec
jecxz
out
push
jnp
add
test
lods
or
xor
in
mov
popl
push
stos
mov
jmp
dec
fmuls
mov
push
sbb
xchg
mov
or
xchg
int
mov
inc
test
dec
aam
push
repnz
jmp
or
xlat
adc
leave
call
or
popf
jb
insb
jbe
mov
sub
lods
in
int3
or
sbb
cli
xor
testb
aam
push
cmpsl
xchg
fisubrl
testl
inc
xchg
in
movzwl
inc
fdecstp
sub
insb
popa
test
mov
shlb
xchg
jns
dec
idivl
or
cmp
in
xchg
inc
mov
adc
xchg
cmp
sbbb
jl
jle
or
dec
jo
xchg
imul
in
cltd
adc
aam
inc
inc
sbb
add
adcb
push
leave
mov
test
leave
xor
sbb
mov
popf
xchg
mov
stos
inc
cs
mul
adc
push
popf
or
nop
clc
dec
mov
imul
add
mov
frstor
and
aam
lods
dec
icebp
cmp
mov
mov
bound
push
fists
imul
movsb
mov
sub
out
bound
sub
outsl
scas
or
pop
ret
inc
adc
ds
daa
xchg
movsb
sbb
mov
mov
pop
rolb
stos
pop
inc
int
jns
int3
adc
and
pop
mov
popf
mov
js
jbe
adc
sbb
int3
pop
std
outsl
mov
ljmp
xor
pop
stos
mov
mov
sub
dec
xchg
out
cmp
lods
and
add
push
test
ljmp
push
jbe
sbb
movl
adc
dec
push
pop
outsl
mov
dec
pop
pusha
pop
mov
lcall
js
aaa
stos
pop
mov
xchg
popf
mov
mov
xchg
out
xchg
fsubrp
mov
jb
ds
jmp
cmp
push
mov
imul
movl
je
mov
test
fsubs
addr16
sub
es
adc
xorb
pop
and
cmp
cmpsb
xchg
mov
bound
cmp
xor
clc
pushf
and
push
imul
mov
popf
in
xchg
sti
enter
inc
mov
xchg
outsb
pop
inc
pop
and
mov
mov
xor
mov
mov
xchg
sbb
mov
or
fidivrl
popa
test
mov
popf
sbb
pop
outsb
shrb
or
push
inc
fsubl
mov
in
adc
mov
adc
dec
shlb
movsl
mov
cmpl
inc
fprem1
dec
scas
loopne
outsb
orb
sub
sub
std
and
fiadds
adc
adc
push
shl
mov
sub
jg
push
xor
scas
dec
jbe
jbe
daa
mov
jb
xchg
cs
in
push
testb
cmp
loope
jge
faddp
pop
mov
pusha
jmp
push
ret
lahf
insl
imulb
loopne
lret
dec
xor
cmp
cld
nop
rol
fsts
outsl
push
sbb
jmp
adc
enter
push
push
bound
cltd
out
stos
mov
arpl
mov
and
in
dec
loopne
jmp
fiaddl
cmp
cmp
mov
add
xchg
test
adc
xchg
jg
les
nop
mov
jecxz
dec
jle,pn
cmp
icebp
and
sbb
lock
jbe
and
adc
sti
shlb
scas
cltd
cld
add
lods
aam
dec
inc
push
mov
mov
add
or
mov
in
out
add
xchg
lcall
or
xor
lea
out
mov
mov
decl
shrl
inc
hlt
mov
push
fdivrs
or
add
iret
bound
in
inc
xor
out
xchg
lea
sbb
inc
adcb
bnd
out
test
sub
hlt
pop
or
mov
loop
jp
pop
pop
loop
lea
adc
fldt
add
je
xchg
cmp
cmpsl
jb
inc
rcll
mov
adc
popa
repnz
ret
xor
add
roll
push
mov
mov
adc
popa
repnz
ret
xor
add
push
ret
xor
mov
adc
popa
repnz
ret
xor
add
roll
push
mov
mov
adc
popa
pop
sti
ret
inc
sub
popa
jge
insl
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sbb
or
cmp
sub
push
es
inc
cltd
mov
mov
lret
shr
ret
or
cmp
sub
pop
jb
bound
push
lcall
sbb
lret
loop
shr
ret
or
cmp
sub
pop
jb
bound
push
lcall
sbb
mov
ret
imul
inc
out
push
mov
mov
push
scas
mov
aad
cmc
inc
cmp
pop
lods
or
cmp
lds
xlat
std
pop
mov
xchg
dec
es
ret
push
orl
mov
hlt
push
in
outsb
cwtl
jmp
and
lahf
pop
stos
xchg
das
inc
fcomi
inc
sarl
ljmp
adc
jb
mov
pop
mov
insb
push
jge
mov
popa
jecxz
scas
fidivrs
jb
popf
xchg
andb
cmp
add
mov
fiaddl
adc
ja
mov
jp
fisttpll
mov
xchg
rolb
call
and
adc
add
dec
bound
push
lcall
sbb
lret
shr
test
imul
aas
sbb
out
xor
fsubrp
lret
leave
cld
out
in
pop
lahf
mov
insb
jae
push
aas
pop
add
das
inc
call
les
lea
bound
push
jl
dec
jbe
push
dec
bound
push
lcall
sbb
lret
shr
ret
or
cmp
sub
pop
jb
bound
push
lcall
sbb
lret
shr
ret
imul
loopne
rorl
lret
filds
loope
daa
or
sbbl
and
movsl
lret
sub
sbbb
lret
push
jne
loopne
sub
or
insl
dec
fcoms
call
ljmp
pop
std
insl
aaa
ljmp
movsb
jb
jmp
cmp
test
push
rorl
push
cmc
je
scas
pop
pop
cmc
jl
out
outsb
add
pop
negb
pop
loope
adc
out
decl
outsb
imul
mov
jle
mov
pop
das
repz
push
das
popf
rorl
fsubrl
bound
push
int
pop
dec
push
adc
push
iret
jp
mov
sbb
jo
sub
mov
pop
rorb
fcmovb
pop
jae
in
fisubrl
iret
adc
mov
sub
js
cmpsb
cmc
shrb
and
cmp
adc
insb
lea
pop
jno
jnp
or
movsb
push
clc
std
js
sub
or
push
xorl
shll
push
and
or
rcr
sbb
sbb
xorl
mov
xor
lds
push
inc
push
jae
xor
sbb
adc
mov
pop
scas
sbb
lret
stos
xchg
div
fmuls
dec
or
insb
jge
push
jb
add
cld
add
xor
data16
mov
pop
out
je
push
sbb
cmp
or
incl
neg
push
lods
outsl
xchg
sbb
push
mov
push
imul
or
rolb
lret
out
mov
or
jne
ror
or
inc
arpl
cmp
cmp
fs
ds
jo
pop
hlt
jge
fnclex
aam
rcll
popf
or
mov
out
imulb
mov
mov
push
xchg
aaa
push
fists
iret
sub
push
mov
xor
call
cmc
add
arpl
pop
sub
cmovg
sbb
or
sub
fstpl
mov
into
xchg
mov
mov
jnp
add
hlt
stc
fwait
inc
pop
jp
and
mov
movl
hlt
or
mov
jne
data16
cwtl
lcall
sbb
pop
clc
es
sarb
mov
pop
push
das
lods
das
insb
xchg
aad
adc
lea
out
jo
outsb
push
adc
mov
mov
and
mov
jmp
xchg
xchg
mov
push
jle
rcll
xor
scas
vunpckhps
cltd
mov
inc
out
aad
jae
daa
mov
and
cwtl
sar
stc
pop
adc
xchg
test
push
cmp
pusha
mov
mov
sbb
ret
cmp
lock
or
pop
lahf
fldt
mov
jns
jb
dec
sub
xchg
jmp
aaa
or
gs
idivl
subl
mov
aaa
mov
cmp
lods
jmp
cmp
jmp
cld
jae
jle
and
pop
jge
mov
stos
sbb
icebp
push
xchg
inc
jmp
popa
flds
mov
mov
mov
nop
adc
rcll
dec
jecxz
mov
lcall
roll
mov
aas
jne
sbb
cmp
sahf
xor
rcrb
jmp
das
sbb
pop
jnp
mov
addr16
mov
mov
push
xor
lahf
aas
sbb
mov
js
adc
cltd
jge
call
or
cmc
jo
xchg
xor
xlat
inc
push
into
mov
jb
push
inc
outsb
aad
pop
cld
push
fcmovb
and
xchg
cmp
add
mov
mov
in
test
mov
cli
mov
add
cmpb
dec
sbb
fildl
sbb
or
sub
cs
push
add
fdivr
and
push
lret
push
adcl
or
push
jecxz
out
in
jmp
adc
insb
fmulp
xchg
jge
repz
idiv
adc
or
je
inc
incb
mov
subl
jge
sti
cmp
pop
sbbb
or
nop
jp
outsl
push
stos
aas
test
movsl
imul
cmpb
pop
cltd
sahf
jbe
jmp
jmp
jp
mov
fs
into
fs
cltd
jg
sub
lds
adc
stos
cli
mov
adc
ficomps
bound
mov
les
xor
pop
addr16
add
enter
out
dec
inc
jbe
dec
push
xchg
imul
test
push
push
aas
dec
sahf
fsubrl
cmpsl
sahf
mov
inc
push
mov
aam
mov
insb
mov
ds
xorl
int3
es
pusha
pop
push
fdivrl
mov
sub
out
scas
xor
dec
pushf
and
fldenv
es
xorl
addr16
mov
imul
and
push
mov
xchg
gs
or
and
cld
sbb
adc
add
add
imul
xchg
pop
lea
lods
xchg
inc
or
cld
out
pushf
mov
push
repnz
inc
adc
inc
mov
iret
cld
inc
adc
fisubl
imul
push
adc
sbbl
les
adc
inc
cmc
mov
pop
sub
dec
cld
scas
aad
ljmp
pusha
xchg
movsb
cmp
jb
fwait
or
push
test
or
pop
loope
ror
subl
je
stc
pop
push
adc
sub
ljmp
fsts
jle
xchg
or
cmpsl
dec
xor
pop
cld
inc
xchg
mov
pop
test
iret
inc
divb
and
and
lods
sub
or
push
jecxz
jb
and
out
adc
inc
popa
push
push
jbe
rcrl
inc
pop
ret
inc
mov
or
adc
pushf
pop
cs
aas
loope
fsts
or
imul
mov
sub
call
loopne
inc
sub
push
pmaxsw
push
adc
pop
push
test
dec
pop
out
adc
adc
movsb
jle
mov
jg
imull
pop
cli
mov
sbb
fstpt
cwtl
stc
int
testb
test
xchg
aam
ret
or
out
and
xchg
into
mov
dec
mov
js
test
ret
cmc
jle
adc
mov
add
mov
adc
mov
cmc
jmp
mov
push
hlt
test
xor
pop
mov
call
and
adc
faddl
daa
xchg
out
hlt
mov
pop
ucomiss
shlb
out
jle
int
cmp
mov
inc
sub
and
adc
jno
in
not
cmpsb
test
adc
pusha
mov
fld
stos
xor
dec
shl
into
xchg
sarb
jo
int
or
lret
lods
out
cmp
and
fwait
pusha
jo
mov
mov
aaa
or
push
pop
inc
out
inc
pop
pop
dec
and
mov
or
int3
lods
and
iret
mov
rcrb
inc
je
test
addb
xchg
mov
ret
pusha
jge
jle
cmp
jle
jo
adc
clc
mov
pop
lock
xor
fildll
fsubs
xchg
shrl
push
mov
cwtl
sbb
pusha
mov
shrb
dec
cmc
cld
push
les
movsl
xchg
loopne
mov
in
mov
imul
inc
cmpsb
mov
xor
icebp
ficompl
and
jb
mov
xchg
cltd
shll
in
sub
arpl
adc
popf
out
mov
daa
cmp
cmp
dec
into
stos
sbb
pop
mov
ss
das
cmc
pop
repz
xchg
adc
mov
test
sub
xor
sub
sub
dec
jl
into
or
sbbb
jo
xchg
cmp
xor
xor
mov
and
popf
stos
out
mov
imul
jo
test
addr16
xchg
push
push
aaa
xor
mov
add
push
stos
pop
sbb
fiadds
leave
push
adc
sbb
adc
adc
inc
jle
dec
or
sub
out
leave
data16
and
fwait
mov
cmc
cmpsl
lods
adc
jmp
in
lahf
movsb
arpl
sarb
jno
loope
mov
mulb
mov
jno
popf
decb
sbb
xchg
sbb
sub
lds
test
mov
push
in
adc
pop
cmp
xchg
mov
je
lcall
adc
or
mov
lds
adc
test
pop
inc
push
push
imul
mov
mov
je
add
xchg
xchg
fs
ficomps
das
in
jl
data16
jp
jae
pop
cli
jg
adc
iret
loope
stc
imul
repnz
jno
lret
cmp
push
test
cmp
mov
pop
add
ljmp
loopne
call
pop
cli
xchg
sbb
sbb
cmp
jg
adc
popa
mov
xchg
pop
test
push
daa
jmp
clc
lods
xorb
int
jp
decb
arpl
or
jg
mov
xchg
xor
lods
push
lcall
fisttps
pop
repz
popf
daa
ret
dec
mov
ja
mov
pop
ret
pop
cmpsb
fidivs
mov
insl
outsb
sahf
xlat
loop
lret
test
ljmp
push
push
ret
or
out
sbb
call
lcall
xchg
mov
mov
jg
dec
mov
sahf
outsl
imul
lret
imul
mov
inc
or
or
cmp
push
push
mov
imul
scas
cmp
inc
mov
mov
mov
pop
in
ja
fbstp
sub
inc
pop
jnp
sub
push
mov
cli
and
push
cs
pop
ja
gs
sarl
aas
je
jmp
push
addb
cmp
xor
lahf
outsb
gs
scas
popa
pop
add
inc
adc
and
int
pusha
cmp
and
xchg
lcall
pop
pop
and
mov
notl
dec
and
push
add
out
stc
sbb
mov
js
lcall
adc
je
lcall
mov
ret
arpl
jnp
stos
mov
sub
shrl
mov
out
mov
icebp
mov
insb
mov
xor
push
mov
in
mov
adc
add
test
lret
adc
mov
stc
in
cli
jnp
mov
pop
and
mov
loop
fmull
lcall
shlb
orb
daa
xchg
mov
std
or
xchg
cmc
js
and
xchg
sbbl
js,pn
sbb
into
xchg
les
dec
into
inc
xchg
and
inc
sub
insb
mov
xchg
js
sub
sub
mov
ret
sub
xchg
push
sarl
mov
das
add
rcrb
stc
lock
mov
imul
popa
mov
stos
jmp
imul
inc
mov
pop
jg
sarl
lcall
sar
mov
mov
hlt
out
nop
add
idivl
insb
sub
out
hlt
sub
rorl
rclb
call
sbb
sbb
ss
shl
movsbl
or
lret
repnz
adc
add
andb
repz
cltd
add
sbb
hlt
xor
fs
mov
mov
pop
mov
xchg
or
mov
and
stc
mov
scas
mov
jmp
and
vaddsubps
adc
add
sbbl
pop
or
pop
sbb
add
call
inc
xor
dec
js
dec
jl
mov
inc
push
sbb
sub
test
movsb
cmc
adc
mov
dec
mov
arpl
push
fdivrs
jle
fisubl
mov
lds
and
lcall
sarb
push
push
in
and
in
cmp
imul
out
fistpll
pop
loopne
imulb
shr
adc
popa
lea
decb
sbb
xor
inc
xor
xchg
push
insl
movsl
jo,pt
scas
xchg
pop
or
inc
jle
cmp
aad
cli
xorb
pop
adc
les
jno
cltd
repnz
les
push
in
mov
bound
inc
xchg
dec
xchg
test
int
ljmp
adc
outsb
shll
into
and
pop
scas
fwait
pop
push
lods
mov
loope
xchg
add
and
mov
out
or
aad
js
or
add
mov
fsubrp
outsl
pop
pop
dec
repz
mov
imul
fcompl
push
push
cmp
mov
xor
pop
jnp
pop
int3
mov
add
enter
sbb
push
or
sarl
loopne
andb
and
das
mov
or
lods
adc
jbe
push
add
inc
dec
ret
stos
out
pop
jo
pop
ja
dec
inc
lahf
inc
or
cltd
pop
les
and
or
add
movsb
mov
cwtl
add
pushl
iret
mov
ss
dec
repz
pop
sbb
push
lods
in
push
or
cld
loopne
mov
xchg
arpl
push
sbb
adc
lahf
xchg
push
negl
ret
or
int
jo
mov
sahf
or
imul
mov
imul
test
sub
stos
mov
and
outsl
push
and
iret
dec
out
pop
int3
outsl
jmp
outsl
mov
mov
push
sub
pop
add
xchg
push
mov
icebp
mov
jnp
xor
stc
pop
es
jbe
dec
pop
pop
push
jmp
int
fistpl
jbe
sub
popa
pop
mov
xchg
mov
mov
or
adc
hlt
push
sbb
mov
pop
jb
fstl
mov
int3
test
mov
cld
cs
pop
movsb
xor
sti
inc
mov
lods
rcr
inc
out
insl
push
mull
call
and
retw
fisttpll
mov
inc
or
iret
pop
inc
and
rcrl
and
je
jl
fdivrl
xor
xchg
cmp
jb
into
jp
hlt
outsl
fisubs
std
dec
push
xor
mov
bound
xor
sbb
mov
or
movsb
jle
pop
fdivrl
xor
loopne
dec
jmp
jns
xchg
adc
div
sub
clc
cmp
lock
xchg
xchg
xchg
cmp
imul
cmp
add
out
mov
jns
mov
pop
scas
inc
dec
lcall
dec
cwtl
sbb
pop
pop
mov
fsubrl
jl
or
pop
inc
notb
xchg
pop
add
mulb
fwait
jae
arpl
cltd
mov
push
push
sub
lods
add
xchg
enter
fimull
stos
push
push
ljmp
push
inc
adc
inc
mov
test
xor
xor
das
shlb
aas
cs
mov
mov
mov
inc
sbb
mov
ret
push
pushf
test
das
mov
xchg
ret
std
lea
jae
pop
and
dec
fistpl
das
adc
je
loopne
or
dec
outsb
ficomps
jp
js
and
xchg
or
cmpsb
push
push
xor
mov
or
es
imul
iret
cmp
fdivrl
mov
testl
xor
push
xchg
mov
cs
or
ss
xor
dec
stos
add
sub
das
mov
dec
mov
repnz
in
int3
nop
inc
repz
imul
push
xlat
aaa
std
roll
addr16
sub
adc
jno
iret
push
xchg
nop
mov
and
icebp
mov
into
fmul
inc
int
nop
in
into
xchg
jo
pop
in
jge
loop,pt
mov
mov
loope
dec
mov
pop
jp
jne
cmpsl
fisubl
es
cmp
inc
xchg
xor
iret
movsl
outsl
xchg
jae
lret
xlat
mov
fucomp
fwait
inc
dec
pop
sub
inc
sub
mov
xchg
repz
ror
sarb
sbb
adc
test
addr16
stc
push
cmpsb
js
pop
scas
and
jecxz
xchg
mov
push
mov
repz
movsb
int3
aam
mov
and
gs
push
mov
fldt
mov
aaa
mov
fisttpl
push
or
in
pop
outsl
add
jne
jmp
lds
rol
xchg
out
xchg
jbe
inc
repnz
pop
cs
call
movsb
xchg
mov
inc
mov
js
sbb
dec
sbb
fucomp
and
idivl
in
dec
popa
pop
adc
shl
pop
sub
lcall
cmp
dec
sahf
enter
push
cmp
leave
mov
cmpsl
mov
sub
dec
cmp
lahf
aaa
lret
dec
jae
mov
xor
push
out
mov
jnp
es
mov
jno
mov
mov
or
int3
mov
jle
cmp
xchg
mov
scas
aam
inc
jmp
inc
test
add
stc
mov
lcall
mov
inc
xor
or
out
mov
inc
push
jne
jne
push
cmpsl
xchg
or
lahf
xor
push
dec
or
lret
scas
stos
push
xchg
lock
pop
stos
ret
andb
andb
fwait
call
mov
repz
add
xchg
mov
xor
mov
pop
add
je
lods
pop
hlt
int3
rolb
sub
xchg
fcmove
outsl
xchg
push
push
lods
xor
xor
movsl
push
test
cmp
mov
setne
and
adc
pop
push
dec
mov
in
xchg
cmp
jns
ljmp
and
ds
adc
lock
jno
fs
dec
scas
push
push
xchg
ss
xchg
jae
ljmp
pop
push
clc
ficoml
mov
push
cmp
into
aam
and
fsts
imul
push
mov
cmp
or
data16
mov
push
inc
repnz
dec
inc
out
pop
dec
jge
push
cmp
sbb
push
jae
imul
xchg
adc
cmp
pop
test
jl
mov
sub
mov
jae
inc
push
outsb
jp
subb
xor
fmuls
xor
imul
xchg
hlt
mov
lods
add
lahf
inc
lret
push
pop
adc
xor
rorl
cld
jecxz
mov
pop
iret
lret
mov
insb
das
adc
fidivrs
cli
sbb
lock
pop
aas
cmp
inc
and
mov
and
arpl
ret
cli
sub
inc
xchg
xor
sbb
scas
testl
icebp
mov
dec
xchg
mul
dec
popa
into
fstpl
gs
mov
xor
dec
daa
xchg
push
mov
jmp
ficomps
in
stc
mov
lea
jg
inc
std
mov
dec
mov
out
lahf
out
adc
push
mov
jae
into
icebp
adc
icebp
out
xchg
lret
fnstsw
fwait
dec
popa
stos
jle
in
cwtl
insl
pop
das
pop
jno
xor
nop
xor
sbb
add
scas
aas
clc
sarl
inc
pop
out
sarl
cmp
xchg
outsl
cmp
xor
xor
sbb
add
nop
mov
xchg
mov
in
lahf
xchg
inc
or
pop
inc
mov
pushf
imul
adc
dec
jmp
call
adc
stc
xchg
dec
cmc
pop
sysret
lret
nop
bound
sbb
push
cmpsl
imul
inc
mov
push
dec
dec
in
mov
shlb
imul
cmp
popa
movsb
mov
push
scas
cwtl
mov
inc
jecxz
sub
aas
into
loope
xchg
enter
or
ficomps
xchg
cli
adc
fnstcw
lcall
iret
mov
pop
stc
in
jecxz
ds
cmp
pop
fimuls
ss
mov
jbe
pusha
int
or
mov
out
stos
std
scas
mov
adc
adc
fdivs
adc
scas
jle
data16
pushf
imul
sbb
cmpsb
imull
cwtl
sbb
push
hlt
push
fisubrl
push
jae
dec
arpl
add
cmp
stos
mov
loopne
inc
jbe
fnsave
jno
out
inc
lret
or
or
push
out
idivl
in
scas
jo
not
push
mov
lahf
push
fsubs
insl
outsb
push
xor
inc
adc
jp
pusha
dec
pushf
sub
xchg
and
xor
test
push
mov
and
pop
in
out
repz
cld
inc
lcall
std
xchg
lret
or
loope
movsb
jp
bound
inc
mov
aad
push
in
dec
sbb
insb
cmpsb
adc
movsl
jle
mov
dec
mov
xchg
inc
loop
mov
in
outsl
cli
sub
sub
mov
in
stos
lods
jg
mov
push
push
inc
jne
shl
sub
ss
imul
cmp
dec
fcoml
or
fidivrs
hlt
xor
push
insb
mov
mov
inc
or
dec
and
leave
dec
mov
push
add
jb
bound
push
lcall
sbb
lret
shr
ret
or
cmp
sub
pop
jb
bound
push
lcall
sbb
lret
shr
ret
or
cmp
sub
pop
jb
bound
push
fwait
mov
mov
lret
shr
ret
or
cmp
sub
pop
jb
loop
shr
mov
adc
inc
sbb
notb
mov
pushf
and
sahf
mov
out
idivb
pop
cmpsl
outsl
mov
xchg
dec
xchg
pop
scas
jbe
inc
push
lahf
es
ss
iret
push
stos
out
negb
cmpsl
pop
cmpsb
add
pop
cmp
inc
daa
push
popf
shll
ret
push
and
out
negb
mov
lds
fists
cmpsb
cmp
pop
push
scas
jbe
or
push
lret
push
je
shll
test
int
pop
stos
xchg
and
rorl
sbb
scas
xor
pop
and
out
cmp
mov
or
addr16
cvtdq2ps
mov
jecxz
ja
dec
xchg
aaa
mov
mov
arpl
cmpsb
mov
sbb
jg
rorl
outsl
jbe
data16
mov
xchg
out
push
and
shlb
outsl
cmp
jecxz
outsb
in
xchg
cmpsl
pushf
or
mov
inc
sbb
lret
ds
mov
xchg
enter
cmp
jle
pop
imul
test
jl
shlb
sbb
and
lock
pop
shrb
addb
jbe
inc
or
es
incl
adc
idiv
pop
push
cmpsb
inc
mov
xchg
xor
std
xor
gs
push
nop
inc
cmpsb
jae
mov
jp
jnp
jbe
add
or
push
loop
cmp
xor
mov
push
mov
fwait
imul
mov
stc
pop
clc
and
mov
incl
iret
push
das
idivb
pop
cmpsb
outsl
mov
xchg
pop
scas
jbe
inc
push
lahf
es
incl
iret
push
das
idivb
pop
cmpsb
outsl
mov
xchg
pop
scas
jae
lret
sub
mov
jbe
in
loop
stc
mov
pop
and
loopne
jb
fistpll
jnp
sbb
in
sbb
dec
sti
add
xchg
rorl
jb
enter
leave
sub
xchg
mov
lea
sub
mov
data16
ret
loop
ja
push
push
mov
aas
push
push
inc
mov
movsl
xchg
pop
push
test
popa
cmpsb
jp
in
pop
sub
jg
xor
pop
push
jns
lods
add
adc
or
ror
cs
pop
push
rorl
stos
inc
mov
pop
and
push
fninit
jnp,pt
sbbb
dec
jbe
jbe
add
mov
dec
pop
pop
scas
sbb
in
sub
leave
pop
sub
cli
add
jbe,pn
lret
adc
icebp
out
aad
repz
cld
clc
cmp
nop
mov
mov
and
rolb
cmp
outsb
lret
mov
decb
call
push
xchg
pop
adc
mov
xchg
notb
sbb
inc
mul
mov
add
movsl
xchg
xchg
adc
adc
ds
sub
fimuls
loop
cmpsb
das
xbegin
ljmp
mov
adc
popa
xchg
aas
jns
jae
lahf
jp
lret
test
in
and
adcb
and
jl
les
xor
dec
mov
cmpsl
fs
test
xchg
arpl
inc
lods
xchg
insb
lret
rorb
dec
mov
push
stc
xchg
and
sbb
add
jo
call
sbb
xchg
out
mov
in
pushf
mov
loop
mov
es
call
and
jmp
push
cld
imul
daa
xchg
jns
sub
imul
add
and
adc
push
push
mov
sarb
jno
push
dec
cli
xchg
mov
push
cld
add
aas
pusha
outsl
push
xchg
pop
push
pop
aas
pop
jo
mov
stos
jmp
fstl
and
out
imul
mov
std
xor
sub
in
mov
in
adc
sbb
add
daa
call
push
push
or
cmp
mov
and
sub
out
lahf
mov
sbb
lds
in
cmpsl
popa
daa
sub
jge
add
int
cmp
addr16
lods
mov
call
inc
sbb
jae
xchg
ret
push
arpl
mov
jle
jmp
jb
inc
mov
cmp
push
les
push
push
jecxz
imul
sub
dec
add
pop
mov
push
out
jmp
ds
mov
popa
ret
mov
push
push
movsl
push
aaa
push
test
or
adc
jnp
dec
loope
es
xchg
in
cmp
mov
popf
loop
jno
mov
mov
andl
or
loop
test
test
pop
mov
call
stos
sbb
sbb
mov
das
pop
fldt
and
aas
inc
xchg
lods
inc
enter
push
push
jns
pop
cvtps2pd
je
sub
and
push
in
lock
add
inc
inc
mov
inc
jo
push
in
add
sarb
mov
fiaddl
lock
push
and
pop
adc
and
clc
jle
sbb
and
xchg
ret
ljmp
pop
jae
dec
cltd
add
popf
jp
pushf
testl
int
cmp
pushf
mov
in
push
adc
lret
sub
and
mov
xor
jecxz
or
ret
jg
sub
jp
in
mov
pop
jns
inc
mov
andb
xchg
jecxz
dec
loopne
es
sub
xor
sub
ret
inc
jl
loope
stos
gs
dec
cwtl
xchg
out
xor
xorb
mov
loopne
adcb
pop
rorl
leave
adc
repnz
iret
stos
lds
cmp
push
pop
es
mov
popf
push
push
into
mov
xor
out
das
or
cmp
adc
lret
cmp
xchg
push
adc
push
mov
mov
js
in
stos
add
pop
cmp
lock
or
dec
fucomp
mov
dec
in
icebp
in
fisttpll
pause
shlb
adc
mov
mov
fsubrs
ds
jae
movsl
shl
jns
adc
jb
cltd
fstp
stos
out
stc
mov
addr16
push
cmp
sub
stc
lock
pop
mov
push
inc
cmpsb
sti
cli
push
aas
adc
outsl
cmpl
cmp
cmp
cmc
pop
jmp
mov
call
or
wbinvd
into
sub
inc
loopne
pop
mov
mov
push
rcl
pop
lret
dec
xchg
and
lock
rolb
sahf
jb
sbb
aad
bound
or
insl
or
sbb
enter
ds
or
nop
dec
mov
aas
xchg
push
inc
jge
xchg
lods
mov
scas
mov
lea
adc
lret
cmp
xlat
sti
rcl
fnstenv
fdiv
cmpsb
inc
push
les
movsb
mov
push
jp
stos
adc
fidivs
jnp
cmp
add
std
dec
adc
add
js
rcr
pop
out
xor
out
cs
aas
cmp
ret
repz
mov
jo
add
mov
sbb
inc
pop
sarb
pop
pop
or
mov
popf
jmp
popf
movb
imul
xor
pushf
or
adc
mov
sub
sub
sbb
lea
cmc
popa
pop
adc
aaa
stos
or
xchg
and
test
mov
lock
mov
xchg
pop
popa
xor
jns
mov
int
add
sub
push
test
testb
mov
jo
lcall
scas
imul
inc
add
mov
sub
imul
sub
jo
inc
dec
hlt
mov
push
cmpsl
push
mov
std
mov
jmp
xchg
push
stos
rorb
push
mov
popa
pop
xchg
add
daa
mov
cli
das
inc
dec
pop
pop
out
sbb
mov
fcoml
imull
mov
pminub
push
outsl
rorb
mov
pop
daa
lcall
sar
cwtl
out
fs
mov
inc
movb
mov
ljmp
xor
pop
and
jp
fbld
fsubrl
rorl
xchg
stos
mov
lahf
fbstp
pushf
test
notl
lock
mov
cmp
adc
enter
jo
mov
dec
cmp
nop
insb
cld
icebp
mov
out
jecxz
filds
xor
sub
cmp
sahf
sbb
push
xor
mov
rcrl
jp
jns
cld
push
mov
das
jne
mov
lahf
insb
and
rcrl
xchg
xchg
jns
das
add
xor
inc
fsubrp
xchg
fisttps
push
mov
mull
mov
jo
mov
jae
sub
stos
push
das
cs
jno
inc
jp,pn
mov
ss
int
fstpt
scas
adc
outsl
mov
cli
pop
testl
pop
fnsave
mov
adc
bnd
es
imul
inc
mov
push
ljmp
hlt
cmp
mov
aam
add
popa
insb
insl
cmpsl
int3
jo
sbb
and
lcall
cmc
mov
add
push
repnz
dec
cmpl
adc
sbb
xchg
xchg
cld
test
jae
xchg
jb
ds
and
pop
mov
sbb
sbb
xorb
ljmp
and
sbb
lds
or
or
lods
sbb
arpl
add
jmp
cld
push
jle
sub
inc
sahf
cltd
mov
xchg
dec
mov
xchg
adc
cmp
je
pusha
or
into
fbstp
int
jae
inc
mov
out
arpl
mov
iret
ljmp
inc
ds
leave
imul
dec
bound
mov
dec
adc
mov
or
leave
fisubrl
movsl
and
into
sub
push
sti
jmp
cmp
fmull
and
and
mov
popa
xor
xchg
mov
push
lock
ja
pop
mov
xchg
stos
loopne
xor
push
fimull
adc
popf
add
fistl
mov
ret
adc
sbb
or
sbb
mov
fstpt
push
jnp
ror
pusha
mov
jp
mov
cmp
repz
sub
ds
push
or
icebp
add
ret
lahf
testb
fdivs
arpl
fidivrl
inc
push
xchg
jmp
test
xor
push
loop
sti
jle
inc
jmp
cwtl
pushf
sbb
jns
cmp
cs
fcompl
aaa
cld
rclb
aaa
sub
repz
dec
shll
stos
nop
cld
andl
shr
hlt
xchg
sub
cmpsl
fidivrs
push
lahf
add
xlat
std
inc
jp
shll
js
inc
ja
mov
popa
lcall
mov
mov
scas
subb
test
ret
xor
cmp
and
jae
fnstsw
repz
and
xchg
lods
mov
inc
xchg
out
rclb
mov
jp
decl
push
jmp
test
in
lret
push
jnp
pop
jg
int3
mov
ficomps
or
shrl
jl
mov
inc
cmp
mov
mov
rolb
pushf
dec
mov
jns
xor
loop
popa
mov
adc
cld
mov
imull
inc
das
cltd
fwait
jne
push
push
xor
lcall
imul
pop
cmp
pop
and
pusha
jne
push
cmc
inc
shll
bnd
add
push
mov
lret
push
sbb
call
xchg
mov
cmp
xorl
in
cmp
pop
pop
cmp
pop
ja
lds
sub
xor
arpl
push
rcrb
dec
cmp
pop
insb
jb
xor
test
ss
mov
aad
jl
insb
das
bound
cmp
fldl
cmp
ret
inc
movsb
and
xor
rolb
mov
or
adc
fnstsw
call
dec
test
imul
inc
insb
and
mov
inc
dec
mov
dec
shll
pop
mov
hlt
and
sub
repz
test
pop
xor
bound
daa
inc
call
popa
mov
orl
mov
inc
cmc
xor
ss
cmp
in
sbb
popf
push
push
lds
rcrb
xchg
jecxz
xchg
cmp
push
scas
push
out
jne
ret
mov
jge
movsl
pop
xchg
mov
daa
and
mov
repz
and
cmp
xlat
outsb
stos
xchg
pop
dec
jae
decl
sbb
bnd
stos
ja
xchg
js
add
mov
jp
pop
pop
sarl
shlb
arpl
inc
sub
sahf
out
jo
rolb
popl
cmpsb
cmpsl
or
stos
push
movsl
in
pop
jno
int
insl
jnp
push
dec
daa
je
fidivrs
dec
pop
pop
and
ljmp
into
in
hlt
xor
int3
in
imul
int3
push
add
push
mov
mov
hlt
pusha
outsb
unpcklps
mov
pop
enter
sbb
test
mov
dec
sbb
push
rclb
xor
sarl
jnp
lods
jp
push
in
shl
insb
cmp
lea
jecxz
mov
loope
and
clc
pop
das
sar
lods
daa
xlat
data16
dec
fstps
mov
hlt
or
fcomi
mov
cmc
das
sbb
push
mov
dec
es
add
cmp
and
sbb
pop
or
jg
or
js
push
xchg
mov
stc
pusha
imulb
fbld
hlt
sti
mov
jp
pop
mov
sub
daa
push
in
inc
es
mov
cli
mov
push
push
push
cld
cmp
jecxz
jecxz
xor
inc
into
or
xor
sbb
sahf
adc
lock
divl
ja
lods
ret
mov
adc
mov
gs
insl
repnz
sahf
mull
dec
call
into
pop
and
arpl
mov
dec
sub
lods
aam
xchg
movsb
jecxz
stos
mov
pop
loopne
mov
and
pop
jns
pop
dec
and
cwtl
cmp
cmpsl
and
fsubrs
push
sub
inc
xchg
or
mov
into
xlat
stc
dec
adc
mov
data16
movsb
dec
push
inc
mov
push
rcrb
aam
insl
push
shrl
scas
mov
shll
adc
outsl
or
ss
test
mov
mov
xor
test
push
icebp
into
jns
add
and
sar
mov
add
call
xor
xchg
pop
mov
bound
xor
test
loop
add
jp
dec
pop
outsl
mov
and
mov
in
aad
movl
and
loopne
aam
cmc
sbb
sub
mov
repz
ja
xor
or
xor
cltd
pop
push
adcl
icebp
sub
and
or
dec
ffreep
icebp
inc
fnstsw
in
mov
popa
ret
cmpsb
sti
clc
jg
xchg
xor
ret
movsl
jp
push
sbb
and
pop
fcomp
xchg
in
mov
and
pop
leave
add
push
jmp
and
sahf
ljmp
repnz
xchg
or
push
xchg
dec
push
xchg
jae
mov
mov
jbe
sub
ds
sbbl
add
std
or
push
pop
lea
stc
mov
cmp
or
in
xor
int3
cmpsb
stos
nop
aad
dec
inc
scas
lcall
loop
fists
mov
rcrb
sub
cmp
mov
sti
test
xchg
enter
inc
dec
xorl
aas
jne
xlat
fisubrl
test
sub
in
push
out
jmp
cmp
imul
mov
inc
dec
push
dec
out
rdtsc
jns
adcb
test
dec
mov
xor
loopne
sbb
shr
sub
inc
add
jmp
xchg
sub
neg
lahf
loope
lods
in
daa
popf
jns
jne
and
add
in
mov
popf
mov
scas
cli
aad
mov
je
pop
sub
mov
pop
pop
enter
insb
cmp
pop
sbb
fstpt
jl
mov
out
out
xor
mov
hlt
insl
test
fwait
dec
xor
add
cmp
in
dec
and
sbb
lcall
lcall
adc
mov
sbb
nop
stos
mov
xchg
push
pop
ds
pop
negl
sub
test
ds
mov
inc
lret
pop
loopne
adc
xchg
insl
mov
nop
sub
fsubl
push
sbb
cmp
and
jbe
popf
add
outsb
cmp
mov
pop
mov
test
mov
out
sub
xchg
dec
jno
out
xchg
mov
push
jns
shl
mov
jmp
push
nop
js
push
mov
addr16
imul
mov
scas
lahf
test
arpl
fwait
mov
daa
clc
cmpsb
cmovge
mov
mov
stc
popa
aaa
inc
andl
or
sbb
mov
add
dec
test
inc
lods
pop
loopne
je
xor
lcall
add
cli
mov
fwait
mov
jmp
jo
mov
sbb
xor
sub
stc
mov
int
mov
notl
mov
jg
cmp
and
jne
int
mov
inc
and
test
aaa
ds
pop
mov
daa
mov
lds
sahf
sub
cbtw
jno
cli
sbb
xorb
cmpsl
adc
fnstenv
les
add
xor
sub
or
mov
daa
movsb
cmp
xchg
lods
orb
or
or
shlb
hlt
clc
movsb
xchg
xchg
jmp
and
jl
inc
scas
lret
int
fmulp
scas
imul
les
or
lahf
std
mov
cmp
cld
lcall
cmp
cwtl
loope
fdivrs
xchg
aam
sbb
pusha
pop
outsl
mov
push
fldcw
pop
mov
cltd
xor
mov
fs
daa
sub
insl
cmp
inc
outsl
popa
bnd
dec
mov
sbb
sub
call
push
shll
jne
icebp
push
subl
xchg
xchg
filds
xor
sbb
outsb
movups
mov
jbe
mov
addb
xchg
push
shr
lock
inc
inc
xchg
lcall
fstl
lock
shr
fstps
inc
inc
add
daa
mov
add
mov
and
or
mov
or
xchg
cmp
lock
mov
sbb
movsl
inc
dec
pop
fisubrl
push
jo
sbb
imul
jg
mulb
mov
xor
or
fcoms
lahf
mov
inc
ficomps
and
dec
pop
ss
aaa
sbb
mov
pop
imul
jg
xchg
imul
xchg
lods
into
and
data16
gs
cs
xchg
xor
fs
and
xchg
adc
repz
jle
es
mov
sub
adc
and
loopne
cmp
mov
stos
or
lods
test
lods
push
push
aad
add
loopne
sbb
es
arpl
pop
addr16
adc
test
pop
movsl
mov
push
imul
in
inc
xchg
xchg
sbb
sbb
and
dec
push
ljmp
fiadds
adc
xchg
fnstenv
sbb
jae
and
lcall
jg
push
jmp
loope
imull
pop
cmpl
stos
in
mov
movsl
and
daa
loop
and
mov
push
dec
pop
scas
or
and
movsl
loope
lds
int
pop
aad
clc
jno
mul
popf
add
jg
sbb
mov
int3
mov
int
mov
movsl
daa
sbb
push
sbb
aam
int
sbb
add
inc
hlt
xchg
lret
pop
cmp
pop
jnp
push
pushl
imul
pop
ficompl
and
sar
push
mov
xchg
jns
mov
cld
addb
adc
fsubs
add
mov
cmp
loop
nop
ret
cmp
jmp
fcoml
push
cli
ja
and
add
stc
mov
test
lcall
pusha
cmc
inc
and
sub
jo
jle
lcall
xor
cltd
pop
jg
lods
stos
sahf
decb
dec
and
mov
sbb
imul
ss
sbb
movsl
dec
ret
lea
in
movsl
repz
nop
in
mov
push
add
sbb
sbb
pop
jno
outsl
loop
ja
cmp
fwait
mov
je
jo
jg
cli
call
pop
mov
subl
xor
test
andb
jl
push
fchs
lea
imul
mov
int
pop
push
inc
cli
xor
xor
negl
imul
cwtl
andl
fisubrl
and
push
fs
ds
or
mov
inc
xor
adc
jmp
pop
pop
or
movsb
insl
push
incl
cwtl
pop
rcr
popa
or
shll
push
xchg
pop
ud1
jl
push
loopne
inc
test
adc
sarl
or
or
xlat
push
pop
jmp
cmp
mov
mov
or
jnp
je
pop
push
add
repnz
into
jbe
push
mov
push
mov
mov
jmp
or
es
sbb
ss
in
mov
and
ret
int
stc
lahf
pop
popf
das
bnd
cld
inc
or
sarb
sub
insl
in
pop
push
adc
sbb
pop
stos
dec
imul
sbb
and
jg
lea
aad
push
aas
rcrl
daa
out
mov
daa
scas
pop
cmp
jmp
cmp
pop
lret
add
sub
insl
lret
cmpsl
in
insl
push
jl
stc
clc
and
in
cltd
dec
and
lret
jb
imul
push
fsubrl
adc
shlb
or
inc
sbb
sarb
jmp
cmp
xor
mov
fmuls
test
cli
lcall
xor
lock
sti
cmp
push
fldl
pop
cli
mov
inc
rorl
inc
cld
jl
fs
shlb
mov
and
mov
out
incl
iret
push
das
idivb
pop
cmpsb
outsl
mov
xchg
pop
scas
jbe
inc
push
lahf
es
incl
iret
push
das
idivb
pop
cmpsb
outsl
mov
xchg
pop
scas
jbe
inc
notl
es
ss
push
iret
push
div
aas
pop
cmpsb
outsl
mov
xchg
pop
scas
ja
inc
push
sahf
es
incl
dec
push
shl
xchg
insb
push
jns
imul
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
add
fsubl
popf
ja
adc
dec
mov
dec
les
cmp
sub
or
or
cld
inc
in
inc
fsubl
mov
and
fidivrs
insb
nop
jl
dec
xchg
pop
test
mov
movsb
or
in
in
insb
les
movsl
sbb
xchg
aam
iret
push
cwtl
sub
inc
dec
int
and
inc
test
test
inc
sbb
clc
jne
add
dec
das
idivl
cmp
xlat
js
mov
mov
je
shll
sti
push
les
in
add
cld
cmp
mov
sub
add
andl
es
cmp
sub
sub
loop
or
lods
push
in
xchg
fsubr
cld
xor
jae
sub
xchg
hlt
mov
xlat
shl
xchg
dec
data16
mov
sub
pushf
les
int3
xor
fdiv
cmp
in
ds
test
mov
inc
or
fsubr
pop
test
cmpsb
sub
js
dec
in
push
outsl
xchg
pop
push
jecxz
sbb
cld
inc
sti
je
jae
add
push
lods
xor
cmp
je
inc
std
push
mov
cmp
and
adc
add
jo
imul
mov
or
jg
sbb
popa
push
test
lods
leavew
pusha
iret
push
pop
clc
popa
loopne
add
xchg
psllw
inc
les
imul
rolb
xor
and
aam
les
in
xchg
cmp
sub
sbb
or
cld
inc
in
je
fs
adc
add
xor
and
aam
les
in
xchg
cmp
sub
sbb
or
cld
xchg
std
or
cmp
sub
cmp
ljmp
std
idivl
and
inc
mov
adc
lret
inc
movsl
sub
sub
out
mov
add
jg
sbb
pop
push
shlb
rorl
addr16
divb
sbb
xchg
test
lods
push
shlb
cli
loopne
mov
out
push
pop
sub
xchg
pop
xor
fwait
das
decb
mov
lcall
das
push
imul
aam
inc
insl
jns
mov
inc
xchg
jbe
lcall
call
inc
bound
push
fldcw
addr16
sarl
roll
mov
test
adc
push
in
jb
cmpl
das
stos
jle
mov
scas
sub
jnp
test
fsub
jno
jns
jbe
jmp
imul
mov
ret
sti
push
inc
ja
xchg
out
xor
sarl
imul
jbe
js
dec
test
or
pop
mov
cmc
mov
sbb
lret
dec
sub
inc
repnz
sbb
or
ret
xchg
xor
lret
lret
xor
add
pop
pushf
inc
pop
push
cltd
mov
iret
mov
mov
test
rcll
dec
data16
xchg
xchg
push
xchg
sub
pop
sahf
icebp
sub
lahf
cmp
popa
js
pusha
scas
cwtl
cmp
push
pop
or
mov
pop
jl
push
pop
shrl
jae
push
jae
jb
je
mov
stc
cmp
addb
sub
add
scas
cmp
xchg
mov
insl
push
js
add
sbb
xchg
cli
push
outsb
test
fnsave
clc
mov
xchg
xchg
sbb
int3
ret
aad
aam
stos
fsubrs
cs
and
sub
mov
insl
xchg
and
sub
push
out
shlb
adc
pop
jae
cmp
cs
sbb
sbb
fdivl
sahf
lret
rclb
or
orb
test
sub
jbe
lds
dec
push
mul
sbb
push
adc
cmc
cmc
lahf
addl
push
fbld
call
das
cmpsb
mov
xchg
shrb
enter
push
les
daa
jp
xchg
push
mov
into
jg
adc
test
out
arpl
add
lahf
lret
dec
push
inc
cs
in
leave
mov
sub
sbb
inc
insb
pop
and
mov
aad
rorb
push
mov
push
icebp
pop
shrb
mov
in
push
addr16
fistps
stos
iret
test
in
push
mov
cmp
push
loop
test
inc
mov
popf
aaa
mov
in
xchg
sahf
or
pop
rep
add
sub
cmpsb
into
add
js
repz
xor
jp
insl
inc
pop
jb
push
jmp
pop
adc
sub
pop
lds
test
xlat
pop
test
mov
movsb
es
xchg
rcll
push
push
jmp
sub
rorb
gs
jge
mov
aaa
hlt
ljmp
test
or
int
and
mov
xchg
aad
push
andb
mov
cmp
lahf
inc
add
setne
lea
out
aam
shr
subl
fwait
add
dec
cmp
outsb
lock
in
cli
sub
pop
fistpll
mov
inc
add
adc
lea
or
mov
imul
inc
xchg
fcmovb
aas
aad
imul
add
movsl
mov
fwait
shl
lods
clc
xlat
ds
jmp
mov
cmp
cmc
sti
stc
dec
cmp
fwait
add
push
jno
sub
sti
push
adcl
push
xchg
push
into
aas
cmp
sub
mov
cld
ljmp
movsl
sub
fildl
mov
out
fidivl
movsl
out
fdivr
fistps
cmp
sbb
sub
lods
cmc
mov
mov
es
lcall
daa
jne
int3
mov
loope
push
mov
mov
call
cmpsl
out
mov
dec
enter
xchg
mov
sahf
hlt
sub
dec
xor
lret
adc
xchg
insl
sahf
data16
pusha
push
aam
jmp
mov
std
fsubrs
sar
lock
into
cmp
or
jle
lods
aad
dec
inc
xlat
out
pop
cltd
jg
mov
insl
push
mov
fstpt
out
sbb
push
cmp
data16
push
xor
jo
mov
xchg
repnz
push
lods
xor
call
loop
cmp
fildll
cmp
jle,pt
pop
jns
imul
stos
lret
scas
xor
push
ret
fwait
mov
call
adc
xor
inc
out
mov
and
popf
cmp
mov
pusha
into
inc
loop
in
lret
or
cmpsb
dec
fcmovb
into
data16
xchg
pop
cs
pop
xchg
push
arpl
adc
and
ljmp
ljmp
stc
sahf
pop
mov
sbb
sbb
int
jle
dec
jae
mov
lock
push
dec
push
test
and
or
scas
mov
fcom
cmc
mov
push
xchg
lret
adc
sub
je
or
jno
mov
ljmp
lods
push
outsb
ret
mov
lret
pushf
pop
sub
jge
pop
ffreep
push
xchg
cld
repz
in
mov
xchg
ljmp
mov
int
sub
push
es
adc
lcall
imulb
lcall
add
jecxz
stc
mov
test
or
sbb
push
sub
loop
clc
lds
loope
jne
push
inc
xor
int
mov
dec
ficompl
push
pop
shlb
fdivs
mov
cmpsb
scas
jg
imul
add
mov
sub
int3
xlat
xchg
arpl
sub
loope
mov
inc
movsb
xor
movsl
fcmove
repnz
dec
sub
stc
mov
and
lock
fs
rol
mov
xchg
dec
into
addr16
popf
push
pop
ljmp
mov
push
xchg
inc
fstpt
cmp
dec
or
rcl
jmp
lret
xchg
sarl
mov
mov
insl
outsl
or
nop
stos
test
push
xchg
andb
imul
loop
in
in
sbb
mov
and
hlt
decl
lods
sbb
hlt
dec
lcall
int
bound
std
inc
mulb
inc
cmpsl
lea
and
inc
es
js
mov
push
mov
movb
push
jmp
or
dec
pusha
push
cs
lea
cld
inc
aaa
outsl
je
sti
cltd
shlb
les
sbb
sahf
cld
sub
lods
add
cmpl
sub
into
inc
int3
push
jmp
push
push
mov
push
nop
add
sbb
xchg
xor
cmp
scas
mov
outsl
push
decb
nop
pop
xor
ficoml
or
leave
pop
loopne
push
dec
add
dec
jne
imul
xor
imul
das
cmpsb
scas
xchg
loop
adc
outsl
insl
stos
lret
lods
outsb
lock
pop
mov
stos
les
stc
ss
cs
loopne
xor
icebp
sub
das
xor
jns
pop
xchg
and
int
push
popf
js
fs
fists
add
pushf
repz
rcll
mov
xor
push
test
mov
adc
and
lea
xor
int3
push
mov
mov
push
add
mov
mov
stc
bound
rcll
and
pop
jle
dec
mov
add
lret
pop
xchg
push
je
inc
mov
mov
or
movl
and
inc
shrb
cltd
mov
faddl
add
fstl
repz
add
leave
ljmp
in
xor
scas
adc
cmp
mov
mov
ljmp
push
jmp
jle
sub
mov
rcll
fisubrl
or
dec
fildl
pusha
aaa
sbb
gs
add
mov
incl
mov
fdivr
fstpl
cmpsb
jecxz
fdivs
push
sarb
xor
fidivrl
repnz
mov
mov
dec
jnp
jbe
shrb
cmp
lea
and
dec
sbb
lods
inc
mov
sub
orl
sub
mov
lret
dec
pop
ffree
adc
pop
fcmovu
xlat
int
test
loopne
fwait
push
and
rclb
imul
cltd
mov
int
xchg
push
xchg
out
mov
insb
push
inc
loope
mov
push
daa
push
push
jmp
andl
and
jp
sbb
notb
or
lcall
sub
mov
loop
adc
icebp
cmc
bound
fstpl
je
shr
sub
mov
push
loope
fs
es
adc
mov
jb
sbb
add
mov
scas
mov
mov
cmp
mov
test
std
call
sbb
sbb
cli
mov
add
cs
and
lcall
fcomip
add
test
mov
scas
or
pop
lret
sub
push
popf
cmc
int
and
inc
out
mov
fisubrl
pop
push
jmpw
fidivs
inc
out
into
pop
stos
out
insl
adc
mov
das
std
mov
ljmp
inc
out
jg
push
dec
adc
cmp
push
sbb
pop
sbb
inc
in
ss
pop
add
lods
lods
add
sub
dec
hlt
pop
add
lahf
pushf
test
jl
dec
sub
pop
repz
ficoml
idiv
cmp
xchg
push
pop
cmp
jg
in
aad
jg
int
mov
inc
mov
sbb
push
mov
ret
adc
sarl
pop
sbb
lret
gs
mov
push
mov
pop
stos
dec
rcl
rorl
lea
aad
cmp
enter
movsl
scas
ds
stc
push
or
ffree
out
jne
fwait
xchg
cld
push
lea
in
rcrb
mov
mov
push
je
jecxz
loop
cltd
bts
jae
rcr
shrl
inc
pop
les
sub
sub
inc
mov
test
and
pushf
subb
jne
bound
jns
mov
pop
notl
inc
dec
sub
gs
movb
test
add
and
dec
jo
cmp
add
sbb
sbbl
imul
aas
pop
mov
out
sub
arpl
push
mov
jg
and
out
subb
mov
lcall
pop
iret
and
ret
xchg
cmp
rcll
xchg
sub
rcrl
xchg
popf
jne
sar
push
sbb
inc
imul
jns
add
sub
push
dec
pop
lcall
sub
int
nop
clc
inc
push
or
sub
xor
insb
icebp
pop
lds
sub
sub
lock
mov
popa
dec
mov
in
add
lret
out
mov
aaa
fildl
adc
mov
mov
aas
sub
adc
mov
pop
popf
stc
xchg
inc
es
fmuls
packuswb
sub
lret
xchg
imul
dec
and
push
lods
incb
loopne
movsl
cmpsl
sbb
inc
arpl
cli
mov
out
xchg
sbb
mov
push
mov
imul
rcrl
mov
cmp
arpl
jno
pop
cmp
push
pop
mov
ds
jg
fwait
push
xchg
rorb
jae
jge
arpl
push
and
sub
xor
pop
xor
les
pop
out
test
mov
sub
jae
add
jmp
fs
dec
mov
nop
xor
pop
xorl
sbb
or
out
xor
pop
jp
mov
xchg
jp
mov
mov
sub
rclb
push
dec
nop
sub
sub
jmp
out
push
push
cmpsb
jo
sbb
gs
mov
fcmovnu
cmc
sti
adc
push
dec
push
fucomi
pop
dec
fstl
daa
cwtl
xchg
mov
movsl
mov
jno
mov
push
sub
cmp
adc
loopne
lret
pop
inc
daa
lret
cmpsb
pop
jge
cmp
cmpsl
movsl
pop
fwait
xor
jmp
xchg
xchg
xchg
sub
mov
imul
cmpsb
into
push
sub
cmc
fstpt
mov
gs
inc
repnz
icebp
sbb
adc
nop
xor
xchg
repz
mov
mov
jb
ds
xchg
adc
mov
repz
sub
inc
or
xor
pusha
nop
pop
ljmp
je
or
pop
test
cmp
add
fs
sub
jp
mov
out
lods
mov
push
test
xchg
xor
incb
js
into
xchg
dec
adc
xor
mov
data16
stos
add
add
jbe
cmp
push
cmp
mov
pop
xor
pushf
and
enter
add
or
lods
and
push
inc
test
pop
sarl
lret
int
dec
fstpl
repnz
mulb
mov
rolb
add
popl
sub
cld
sub
mov
inc
sub
sub
int
xchg
insb
cmp
aam
repnz
cmp
xchg
and
repz
cmp
add
scas
cmp
jne
out
faddl
mov
mov
bound
ds
cmp
cmc
xchg
mov
scas
jnp
lds
inc
movsl
insb
cmpsb
xor
das
push
add
xor
jns
pop
mov
dec
dec
or
sbb
imul
popf
and
stos
inc
adc
ja
ret
mov
mov
fcmovnb
scas
sub
cmpsb
fsubl
es
lea
daa
repz
mov
push
fnstcw
fbstp
or
into
push
mov
mov
je
nop
adc
in
int3
mov
mov
push
add
daa
stos
das
rol
xor
pop
fucompp
xor
addr16
add
fisubl
hlt
inc
push
out
mov
mov
cmpsb
sahf
ss
cmp
mov
daa
xchg
sbb
dec
jo
cmpsl
jg
xchg
enter
testb
pushfw
sub
shrl
das
jl
mov
mov
inc
movsl
xor
data16
cld
aas
xchg
fisttps
add
mov
jo
adc
xor
fistpll
and
aas
push
mov
das
mov
mov
movsb
sbb
jmp
dec
sbb
sbb
in
lret
push
fucomp
in
mov
popf
dec
pop
mov
mov
inc
sti
push
xchg
cmp
scas
pusha
pop
cmp
sub
add
orl
aam
or
rorl
jns
in
cltd
push
xchg
pop
out
cmp
in
cmpsl
jecxz
subb
ljmp
lret
shrb
mov
dec
rcrb
sub
inc
inc
mov
jne
fstps
je
enter
arpl
out
stos
mov
je
repz
jae
xor
jecxz
inc
push
scas
pop
ja
movsb
xor
push
out
icebp
cmp
cmp
mov
lds
add
stc
pop
sbb
repnz
cs
lods
cmpsl
pop
sub
nop
rep
stos
mov
imul
shll
xor
xchg
fcompl
cs
in
cmpsl
mov
sub
sub
fcomip
mov
inc
dec
call
or
int
movb
inc
nop
out
pop
scas
pop
outsb
aam
push
pop
aaa
test
std
pop
nop
cmp
insl
or
int
cmp
mov
mov
lea
fbld
mov
sbb
movsb
js
jge
cmp
cmp
push
sub
pop
vcvtps2pd
jle
lock
xor
in
pop
out
xlat
insb
mov
gs
push
or
push
jne
out
mov
gs
lret
inc
and
imul
cmpsl
nop
sub
mov
inc
cmp
inc
clc
in
rorl
roll
cmp
mov
jg
mov
fisttpl
aam
push
sub
mov
inc
in
scas
cmpb
in
repz
in
adc
push
or
sbbb
roll
int3
mov
cmpsl
pop
test
push
jecxz
mov
ficoms
les
lea
push
out
lahf
xchg
pushf
dec
loope
js
jno
mov
shll
jns
inc
inc
jp
add
mov
outsb
and
testl
sbb
setl
test
xor
sub
cmp
and
mov
in
rcll
xor
test
pop
sbb
xchg
mov
lcall
xchg
icebp
sbb
sub
jb
inc
jae
and
test
dec
fs
outsb
dec
out
in
pop
popa
mov
jmp
sub
test
popf
pop
aam
pushf
push
repz
push
and
push
sub
sbbl
popf
and
mov
xor
and
sbb
adc
iret
inc
cwtl
imull
ret
int3
aas
or
push
int
ljmp
or
nop
fcomi
inc
aam
sub
loop
push
mov
pop
addr16
jecxz
sarb
sbb
in
pushf
mov
xor
lret
add
lret
test
xor
jle
jecxz
pop
cld
sub
lret
jmp
rorb
filds
out
imul
jg
xchg
jae
aam
push
fcoms
push
pop
push
sbb
out
xchg
sahf
bound
cmc
pop
fcoms
fcmovnu
cwtl
xor
fsubrs
or
and
xor
and
pop
scas
cmpsl
xchg
jge
pop
aaa
test
push
xchg
cmc
lock
mov
test
sub
push
cmc
pop
repz
cmc
or
or
cmp
dec
popf
test
inc
mov
cli
repz
stos
or
xchg
xchg
push
add
out
jno
dec
sub
jb
mulb
xchg
sbb
adc
icebp
and
jb
and
sbb
pop
pop
fidivrs
insl
ror
cli
mov
or
inc
lcall
adc
and
rcll
mov
rcl
inc
dec
stos
push
inc
enter
in
shll
xchg
fs
shl
cmp
lcall
fsub
sbb
int3
jmp
ret
mov
pop
sbb
push
jg
add
push
jno
add
adc
scas
xchg
sbb
adc
test
pushf
or
lods
addr16
fldt
jg
inc
lahf
stc
out
inc
js
fs
cmp
jbe
movsb
pop
ja
addb
call
inc
out
outsb
faddl
sub
cmp
dec
dec
push
push
popa
xor
or
stos
or
sub
dec
mov
cltd
push
mov
jo
fwait
fwait
add
push
pop
int
andl
jno
lock
call
mov
daa
int
sub
test
xchg
inc
mov
or
mov
cmp
dec
xor
push
lret
fildll
and
sbb
jl
cmp
addr16
xchg
daa
pop
ja
mov
and
es
xchg
pop
push
fdivl
divl
add
dec
cmpsl
out
add
lret
and
xchg
je
xchg
addr16
loope
mov
push
jno
clc
lds
pop
or
xchg
sahf
push
das
sbb
xchg
out
and
aaa
xchg
push
fs
jae
cli
rclb
cmp
int3
sub
add
xchg
movsl
cmp
push
ljmp
addps
mov
dec
mov
cltd
fwait
das
pop
or
lods
jp
fwait
test
inc
jmp
inc
loope
outsl
lea
sbb
fidivrl
xchg
inc
cmp
in
pop
cli
leave
jp
test
cmp
rcll
daa
cmp
mov
add
dec
mov
mov
or
std
cwtl
xchg
mov
cmp
add
mov
jecxz
std
stos
ds
addl
inc
pop
pop
ficompl
sbb
mov
adc
sbb
mov
mov
push
loopne
into
popf
clc
pop
movsb
cmp
stos
fisttpll
jb
out
add
cmp
gs
ffreep
adc
adc
mov
test
jnp
mov
icebp
arpl
addb
dec
adc
sbb
sbbb
pop
imul
out
out
push
mov
jl
pop
fcmovb
mov
jmp
test
insb
push
pop
dec
dec
lret
xor
std
jns
test
or
push
jno
xorl
loope
shll
adc
outsb
jb
sub
es
pop
jo
sbb
sub
adc
and
inc
and
nop
jl
xchg
icebp
jge
pop
cld
scas
cmpsl
push
dec
push
inc
pop
cmp
outsb
xor
mov
and
aam
les
in
xchg
cmp
sub
sbb
or
cld
inc
in
je
fs
adc
add
xor
and
aam
les
in
xchg
cmp
sub
sbb
or
cld
inc
in
je
fs
adc
add
xor
and
aam
les
in
xchg
cmp
sub
sbb
jo
inc
fsubl
mov
movsb
mov
jl
pop
pop
in
jecxz
or
dec
jecxz
rep
stos
mov
fwait
out
push
lea
arpl
fistpll
nopl
or
jg
dec
dec
dec
pop
lret
stos
mov
fwait
out
jmp
jmp
lret
fildll
outsb
or
sbb
sbb
dec
dec
pop
pop
pop
mov
mov
icebp
repnz
jecxz
rcr
rorl
sbb
jp
add
or
xor
out
lret
out
idiv
jmp
cmp
icebp
or
push
setb
sub
pop
and
inc
xor
sbbb
rcrl
and
aam
lds
or
and
push
aaa
cli
sar
mov
mov
xchg
aas
cmp
popa
pop
in
into
cmp
xchg
push
jae
xlat
inc
push
jae
adc
jmp
mov
aas
lds
push
jg
dec
mov
dec
push
cs
scas
je
out
adc
ja
inc
ret
push
mov
xlat
mov
mov
mov
push
ficoms
and
mov
adc
popa
push
pop
xor
ljmp
hlt
jmp
loop
sub
dec
dec
pop
pop
hlt
mov
lahf
fwait
or
xchg
iret
lret
jns
jmp
adc
add
jae
arpl
pop
pop
stos
int
sti
out
out
sub
lcall
insb
cmp
jp
sbb
and
aaa
loop
fcmovbe
std
clc
hlt
xchg
lcall
pop
insl
pop
movd
push
sbb
jnp
sub
das
ret
stos
sarl
mov
lret
das
sub
cmp
or
sbb
jg
dec
dec
pop
pop
scas
stos
mov
fwait
out
jmp
sti
iret
lret
das
sub
cmp
or
sbb
jg
dec
dec
pop
pop
scas
stos
sbb
and
push
inc
dec
dec
push
mov
insb
shlb
dec
rolb
and
push
adc
sbb
push
imul
out
cmpsb
shll
inc
jmp
add
push
inc
in
sahf
mov
or
pop
xor
movsl
mov
shll
add
mov
mov
loop
jae
or
mov
sbb
xchg
adc
movsb
mov
and
clc
dec
pop
and
dec
cmp
or
mov
cmc
push
je
add
dec
aaa
xchg
dec
aad
fistpl
and
loopne
hlt
mov
iretw
cs
movsb
mov
scas
pusha
dec
sti
push
out
dec
and
mov
ss
or
push
enter
xchg
in
mov
mov
cltd
ret
or
insb
mov
and
sbb
call
xor
jecxz
xchg
aaa
loopne
sbb
je
inc
js
sbb
andl
lret
pop
leave
or
fisttps
fnstsw
movsl
enter
loop
mov
xchg
fsubrp
lock
loopew
push
pop
out
sub
outsl
mov
popf
aad
nop
sub
out
test
inc
imul
pop
jp
dec
mov
bound
dec
aaa
dec
sbb
xchg
pop
lcall
mov
rol
mov
inc
stos
xchg
pop
std
sub
lcall
sub
popa
bound
stc
pop
adc
pop
repz
push
int
push
movsb
addr16
dec
xchg
std
les
andb
and
sub
call
xor
shrl
scas
jno
scas
cmp
pop
jmp
in
inc
add
mov
lret
mov
add
or
and
fildll
cli
sarl
in
repz
mov
test
rclb
xor
push
int
pop
mov
xor
sbb
add
xchg
out
loop
mov
or
lcall
ljmp
sub
dec
fcomps
insl
cmp
mov
ljmp
movsl
pop
push
test
mov
mov
dec
stos
loope
adc
mov
mov
push
test
dec
incb
sbb
ret
mov
inc
loop
movsl
cmp
jge
mov
inc
xlat
xchg
imul
sub
dec
roll
mov
xor
lahf
jbe
xor
sbb
and
xchg
mov
mov
cli
xchg
mov
push
xchg
aam
std
xor
sbb
movsb
mov
dec
addb
adc
mov
pop
dec
inc
fsubl
xor
sbbb
test
push
inc
add
xor
cmc
sbbl
push
sub
test
scas
pop
adc
jmp
insb
xchg
mov
mov
call
mov
std
in
popa
mov
test
dec
xchg
cmp
pop
mov
das
jge
mov
push
push
popf
cmp
jo
vcompressps
repnz
sub
ja
jle
mov
sub
inc
pop
sub
bound
insl
sahf
shlb
fnstcw
subl
xor
cmp
push
add
dec
in
mov
jecxz
and
fs
lods
pop
push
pop
daa
in
mov
jp
sti
jg
data16
repnz
jecxz
test
loopne
cli
xor
mov
sub
scas
iret
adc
pop
sahf
sti
jl
push
test
cmp
ljmp
pop
loopne
mov
push
ficompl
adc
ret
pop
inc
pushf
ds
fistpll
cmc
leave
mov
add
fbstp
and
push
hlt
movsb
jo
mov
dec
jle
adc
jnp
ljmp
lods
daa
fiaddl
push
push
fiaddl
lret
aad
cld
mov
test
jl
out
push
sub
xor
in
aad
xor
les
iret
inc
lock
outsl
lcall
mov
pop
sub
cmp
out
push
inc
add
shl
loop
insl
sub
ds
add
adc
mov
sbb
iret
xchg
imul
pop
inc
cltd
clc
fs
cmp
in
adc
adc
xchg
popf
pop
and
pop
stc
jle
repz
jae
cs
xor
lahf
mov
mov
insb
out
add
push
testb
xchg
sub
movsl
dec
add
dec
mulb
mov
cwtl
dec
lock
xchg
out
pop
xor
inc
adc
sbb
or
mov
loopne
in
mov
in
jns
frstor
sbb
xchg
mov
fwait
mov
arpl
fs
js
jne
mov
mov
adc
mov
fwait
test
mov
inc
mov
sbb
out
push
sub
push
xchg
out
mov
rorl
pop
divb
jg
sub
jns
cli
popf
mov
and
pop
sub
jbe
out
jmp
imul
test
xor
push
jmp
mov
iret
jne
cli
xchg
push
pushf
sub
mov
leave
cmc
mov
push
xchg
mov
xchg
xchg
in
popa
imul
cmp
movsb
mov
shrb
ds
inc
mov
cli
hlt
push
add
xchg
jl
mov
popa
lea
cltd
int3
inc
mov
jp
inc
cli
jae
mov
bound
cmpsb
jmp
in
dec
add
gs
pop
addr16
mov
gs
push
mov
dec
push
cmp
pop
aam
insb
lret
add
in
mov
mov
mov
xor
xchg
mov
les
push
sbb
pop
into
shrb
insb
mov
mov
cld
daa
mov
sar
test
xchg
loop
mov
mov
divb
pop
mov
das
or
pop
xchg
jecxz
leave
sarb
gs
or
sahf
loop
sub
mov
pop
lds
test
sarb
imul
shlb
add
imul
test
jge
ljmp
xor
mov
pop
outsb
ret
sahf
push
orb
jae
hlt
dec
mov
lcall
mov
fsubrs
dec
mov
fwait
arpl
test
into
lods
mov
aas
adc
jnp
sahf
mov
mov
cmp
pop
add
fcoml
inc
push
push
jae
jle
adc
popa
out
push
push
lods
or
repz
mov
shlb
jns
mov
dec
mov
loop
pop
mov
mov
insb
push
sbb
jl
es
jns
cs
std
out
mov
cli
sbb
dec
mov
mov
rcl
jae
mov
inc
push
cmpsb
xchg
scas
xchg
fidivrl
jg
add
adc
mov
arpl
sub
lret
xchg
cltd
push
hlt
mov
pop
pop
mov
iret
sub
or
jo
mov
cmp
sbb
push
pop
jno
xchg
mov
dec
sub
in
push
push
or
out
xor
test
xchg
fisttps
lahf
push
xor
addl
faddl
push
sbb
mov
fsubl
fs
jo
inc
jg
adc
push
sub
add
loop
pop
sbb
inc
in
add
jae
fistpll
mov
das
iret
cmc
cmp
pop
jno
mov
xchg
stos
xor
push
adc
xchg
xor
sahf
popa
pop
mov
adc
xor
xor
jno
fcmovbe
cmp
test
fisttps
fs
mov
pop
adc
xor
fcoms
shlb
and
adc
xchg
stc
adc
fildl
sbb
dec
push
cmp
pop
pop
ffreep
jb
iret
or
loopne
int
xlat
rcr
icebp
xchg
mov
inc
push
sbb
mov
rorl
stc
nop
push
cmpsl
scas
stos
jno
push
push
pop
adc
mov
push
mov
jb
loop
sbb
xchg
dec
cmc
push
ss
lods
xor
insl
and
sbb
movsl
pushf
daa
mov
sub
xchg
jmp
test
xor
and
inc
pop
or
shrb
cmc
inc
pop
mov
cmp
cwtl
pushl
mov
and
dec
xchg
mov
insl
mov
test
lods
push
popf
xchg
int
mov
das
fiadds
xor
popa
cli
scas
setae
jne
cmpsl
aam
push
sbb
sbb
js
sbb
fistl
testl
xchg
xchg
xor
inc
jae
and
cmp
jl
ds
jecxz
mov
roll
in
je
inc
pop
push
arpl
daa
cmp
cmc
arpl
andl
sbb
pusha
mov
dec
and
fisubs
push
push
outsb
int
pop
sti
xchg
insl
aas
or
ja
dec
push
push
enter
dec
mov
or
testb
bound
jg
stos
add
inc
sub
into
gs
pop
lods
mov
leave
neg
add
dec
dec
inc
lahf
cmpsb
imul
jae
mov
push
fsub
arpl
pop
dec
or
leave
inc
pusha
fstpl
inc
cltd
es
mov
mov
xor
insb
pop
cmp
sub
mov
xor
dec
in
add
cmp
add
stos
inc
dec
cmp
xchg
dec
mov
sbb
and
rorb
ja
and
push
lock
adc
xorl
xor
xchg
mov
clc
out
xor
jg
dec
fsubrl
push
jne
or
cmp
mov
adc
imul
cmp
mov
in
int3
out
fs
jae
or
stc
push
bound
add
mov
or
fidivrs
adc
sbb
sbb
inc
decl
fldt
insb
lahf
xchg
pop
jb
sbb
push
jle
mov
xor
push
mov
jge
mov
inc
stos
jns
adc
jo
pop
cmp
mov
adc
sub
shrb
cwtl
idiv
xchg
or
scas
push
int
test
and
int
or
push
nop
scas
in
lods
aad
cwtl
in
push
fs
and
sbbl
cld
add
data16
sbb
pop
jno
mov
cs
cmp
call
xchg
mov
fsub
add
fsts
push
test
jle
pop
jns
aam
jb
int
dec
push
dec
jge
mov
and
dec
cmpsl
push
mov
mov
xchg
enter
cmp
stos
mov
push
das
jp
sbb
add
fucomp
sbbb
mov
mov
es
cli
xor
jl
mov
and
sti
stos
sti
adc
negb
loopne
lock
cli
ss
fnstenv
lock
xlat
xchg
cmp
dec
cld
sub
test
cltd
xor
ficoms
mov
js
in
pop
sbb
jmp
movsl
mov
jge
inc
iret
loopne
xchg
das
fisubrs
dec
arpl
mov
inc
loop
jl
push
mov
mov
lret
dec
and
mov
jge
pop
test
das
ret
int
fstps
lret
ja
mov
lcall
mov
or
dec
pop
cmp
insl
dec
inc
add
jnp
ds
bound
jge
int3
dec
testb
mov
js
xchg
aam
dec
loop
and
movsl
push
mov
dec
push
lcall
mov
arpl
jge
fsubs
hlt
in
sub
xchg
or
insb
je
xchg
inc
xor
mov
lcall
sbb
and
cmc
dec
imull
insl
aad
nop
dec
fisubrs
pop
jmp
jo
push
aad
pop
xor
jecxz
xor
icebp
mov
in
push
call
mov
out
lahf
bound
fucomp
mov
rcrl
cltd
ds
sbb
jno
ret
sbb
lcall
xor
or
mov
outsl
imul
test
push
mov
jecxz
mov
push
orl
push
fcomps
in
roll
mov
mov
mov
mov
xor
mov
dec
cmp
sub
mov
inc
leave
sbb
les
fsubrs
scas
or
or
test
lret
or
sbb
dec
es
insb
out
rcrl
scas
cltd
sbbb
in
xchg
sbb
push
ret
push
popf
xchg
pop
call
movsb
mov
incb
cli
ds
ljmp
push
push
lea
xchg
fldt
push
enter
into
test
andb
lret
loopne
inc
jmp
cmp
imulb
push
xor
xor
pushf
mov
push
sub
fmulp
xlat
mov
in
movsl
stos
xor
test
repz
cmp
jns
aaa
or
divl
cltd
jmp
insb
mov
sbb
sbb
xchg
xor
mov
iret
mov
xor
movsb
jl
fildl
xor
pusha
and
push
dec
inc
push
xor
mov
xor
lret
das
mov
out
jp
add
push
unpckhps
push
or
pop
inc
in
addr16
mov
push
or
xchg
add
repnz
jae
push
or
es
cs
sbb
outsl
lahf
int
cmp
push
and
cmpsb
dec
adc
lahf
cmpsl
inc
lcall
mov
int3
addr16
sbbl
lock
cld
xchg
jg
xchg
push
jecxz
jge
mov
jp
pop
mov
sub
jns
int3
inc
mov
out
jb
push
lret
mov
insb
sbb
lds
outsl
fsubrl
sub
dec
pusha
cmp
dec
in
mov
popf
and
push
lods
adc
pushf
sti
dec
adc
addr16
lahf
mov
lods
or
add
inc
xchg
sub
lods
xor
lods
jno
push
jnp
and
lds
jb
mov
lret
jo
pusha
cmc
xor
adc
test
cmp
insl
decl
mov
mov
hlt
insb
mov
repz
cmpsl
outsl
push
mov
push
mov
dec
ljmp
rorb
mov
fstl
pop
pop
out
movsb
sub
adc
inc
lcall
sub
and
aad
cli
add
push
std
std
xor
insb
stos
ss
pop
pushf
sahf
jnp
dec
push
fnsave
push
xorb
lret
daa
in
dec
mov
sti
push
add
repz
sbb
jmp
mov
addr16
push
mov
adc
sbb
push
xchg
hlt
in
inc
mov
int
cmp
mov
inc
mov
mov
mulb
mov
test
push
xchg
ss
in
ss
cwtl
test
dec
pop
and
mov
rorb
push
daa
mov
mov
jnp
push
lret
lock
mov
pusha
add
aam
add
ss
sbb
jno
push
jl
fdivrs
mov
push
lea
sahf
push
lds
jg
dec
dec
mov
out
jno
fsubrp
lods
fldl
jmp
jne
sti
pop
mov
cmp
jp
shll
roll
lea
inc
jl
adc
fcompl
or
pusha
pusha
das
pop
or
and
pop
pop
bound
or
pop
push
shl
cmp
pop
jecxz
lods
xchg
hlt
jno
xor
inc
into
aas
out
mov
mov
dec
add
pop
or
stos
mov
je
in
lcall
push
mov
sbb
sub
jnp
insb
in
lea
je
adc
adc
addr16
fdivp
pop
movsb
jnp
les
cmp
push
pushf
jl
or
lcall
pushf
mov
mov
xchg
dec
inc
or
loopne
ljmp
mov
shll
mov
xchg
es
jmp
iret
add
jae
movsl
mov
mov
faddl
aam
ret
xchg
sub
push
sahf
dec
inc
pusha
sarl
aaa
jl
dec
or
ja
xor
cmp
jo
push
sub
cmp
jno
call
adc
push
lods
sahf
push
sub
push
int
jae
pushf
mov
mov
in
pop
xor
cmp
outsl
push
xchg
jge
inc
ja
cmpsb
jo
pop
lahf
jmp
adc
jp
cwtl
jo
fcoms
mov
std
in
inc
sti
in
jbe
and
sbb
cmp
imulb
vpcmpeqb
rcrb
push
push
xlat
stc
mov
pushf
pop
in
aad
xchg
pop
xchg
andl
pop
pop
sub
xchg
in
cmp
sti
ret
test
fstp
or
xchg
dec
outsl
cmp
ljmp
dec
hlt
repnz
sub
mov
loopne
into
lret
sbb
xor
cmpsl
insb
jb
mov
iret
and
lods
xchg
or
add
add
mov
and
push
jl
je
sahf
mov
sbb
jne
movsl
and
cmp
loope
and
es
jl
jae
mov
push
mov
sbb
pop
test
jb
sbb
bound
test
je
cmpb
and
cmp
scas
dec
lock
cmp
mov
mov
jmp
in
jecxz
inc
adc
push
test
mov
shll
roll
clc
loope
add
loopne
pop
pop
sub
jecxz
dec
rolb
cmp
loop
lcall
jp
jne
mov
js
cs
dec
inc
fildl
rcrb
add
inc
mov
cmp
out
fsubs
mov
imul
hlt
imul
adc
xchg
test
or
and
push
or
out
lret
cmp
rolb
mov
cmpsb
rcrl
std
bound
popf
cltd
addb
cmp
outsb
pop
jmp
xchg
int3
fsubr
pop
icebp
xor
pandn
pop
pop
out
add
mov
repz
jbe
lret
fwait
lret
pop
push
mov
mov
pop
insl
xchg
xor
jo
in
xlat
test
mov
cmpb
mov
call
test
test
xchg
incb
xlat
push
cmp
and
in
cmpsl
jecxz
imul
ss
lret
xor
push
pop
data16
test
cwtl
or
push
scas
pushf
cmp
mov
mov
int
div
jl
rolb
push
adc
mov
inc
test
jo
sub
push
or
enter
add
aas
and
pusha
inc
dec
or
cwtl
outsl
mov
xchg
je
and
gs
xor
add
rclb
ret
xor
add
cmp
or
adc
nop
adc
enter
jne
inc
fidivrl
stos
add
fmuls
adc
sbb
xor
aas
inc
loopne
mov
fwait
loopne
or
scas
loop
add
jecxz
sub
and
or
mov
mov
xchg
jp
mov
sarl
jne
out
push
xlat
imul
push
mov
sbb
test
shrb
inc
add
repnz
inc
rclb
scas
lods
shl
lock
xlat
sub
es
imul
lret
pop
inc
scas
addr16
ljmp
out
sbb
mov
xlat
xor
jmp
mov
popa
shl
repnz
mov
out
fcomp
dec
fs
idiv
adc
sub
dec
push
nop
insl
fisttpl
cmp
inc
jae
rorb
sub
divb
clc
pusha
inc
out
addr16
popa
jbe
mov
xor
lods
push
lock
mov
inc
adc
dec
outsl
popf
mov
xor
lock
mov
xchg
psllq
push
shl
ljmp
jle
inc
nop
add
insb
std
mov
mov
test
loop
insl
cs
dec
xor
cmpsb
int3
pop
stos
bound
ret
jmp
mov
push
je
cmpsb
popf
adc
mov
cmp
mov
test
pusha
xor
aad
lods
cmp
push
pop
xchg
lahf
repz
sarl
int3
shr
and
pop
mov
daa
add
mov
sti
popa
cmp
arpl
push
sbb
jo
call
jle
jge
xlat
push
inc
mov
fdiv
mov
and
lcall
int3
jp
mov
adc
cltd
shl
xchg
xchg
dec
fistpl
jb
ss
test
add
ret
dec
test
or
inc
push
icebp
outsb
mov
push
dec
sbb
push
mov
xor
lods
add
out
mov
out
cmp
pop
das
push
xlat
sbb
cmp
in
mov
ss
dec
mov
push
cmp
push
mov
adc
fidivs
sub
mov
mov
lods
fidivrs
dec
out
inc
in
testl
cmp
mov
fsts
lcall
sub
mov
jecxz
dec
add
cmc
aam
std
jo
enter
out
jmp
sti
iret
lret
das
sub
cmp
or
sbb
jg
dec
dec
pop
pop
scas
stos
mov
fwait
out
jmp
sti
iret
lret
das
sub
cmp
or
sbb
jg
dec
dec
pop
pop
scas
stos
mov
jg
sti
iret
lret
pop
fldt
sub
cmp
or
pop
outsl
imul
dec
mov
mov
mov
sti
iret
lret
pop
sbb
sub
xchg
movsl
or
insb
sbb
testl
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
lahf
dec
lret
jle
outsb
stos
stos
cli
popa
stos
dec
iret
into
add
or
sub
jnp
imul
mov
outsb
stos
push
fisttpl
lret
ds
cs
into
or
xor
sub
jnp
imul
dec
and
pop
jmp
andl
cs
sbb
sub
or
sub
aaa
fbld
lret
sbb
dec
aam
xor
js
sub
xor
rclb
lahf
and
cwtl
mov
push
iret
rclb
push
inc
mov
in
testl
dec
sahf
adc
lock
mov
loop
pop
fnsave
mov
mov
out
mov
sbb
sbb
cmp
sahf
test
mov
scas
scas
lods
pop
fwait
pop
mov
iret
psubq
cmp
push
sahf
iret
jmp
les
sub
mov
xor
dec
ret
jbe
inc
mov
push
lret
ficoms
fidivrs
or
push
mov
sub
je
into
xchg
jnp
xchg
or
int
es
mov
push
mov
pop
push
stos
jle
outsb
stos
or
push
lret
ds
aaa
jns
sbb
mov
xchg
movsl
movsb
arpl
in
xlat
sbb
insl
jle
cmpsb
jae
lods
ficomps
jnp
sahf
mov
sbb
and
movnti
xor
das
int
enter
mov
cltd
ds
jge
popf
jp
jle
imul
sbb
call
push
push
xchg
push
lret
ds
cs
sbb
or
cmp
sub
jnp
imul
mov
outsb
stos
push
fisttpl
lret
ds
cs
sbb
or
cmp
sub
jnp
imul
ffree
sbb
dec
sbb
and
mov
add
xchg
pop
mov
ds
ficomps
push
pop
mov
add
push
jne
scas
shr
xor
xchg
xor
test
pop
ret
cmp
ret
js
cli
imul
test
dec
sub
jmp
xor
mov
popf
inc
jno
iret
aam
bound
mov
call
mov
pop
and
lds
movsbl
jle
in
xor
ret
push
dec
aad
in
addr16
fsubp
jns
jg
ret
test
pop
jg
mov
les
mov
jge
jle
push
fnstsw
and
pop
push
iret
ffreep
les
jno
jne
mov
rcpps
xlat
testb
shrb
ds
or
push
bound
jp
mov
test
jmp
lcall
cli
sub
lea
push
mov
adc
fnstenv
and
cmpl
sub
cli
and
je
jns
push
and
int
sub
or
shr
pop
push
leave
adcb
cli
popa
dec
stc
leave
psrlw
les
mov
cmpsb
fidivs
inc
add
jle
inc
mov
loop
push
jb
pop
cmpsl
push
ljmp
pop
inc
aam
xchg
bound
lcall
add
sub
sti
popf
mov
cmp
jecxz
outsl
jl
lds
arpl
pop
cmpb
mov
and
inc
fcomi
adc
addr16
mov
out
gs
addr16
mov
icebp
dec
notl
cmp
mov
pop
mov
adc
addr16
mov
adc
popa
cmp
cmc
loope
test
movsl
and
mov
push
or
movl
pop
cmp
addl
pushf
mov
sti
hlt
lret
pop
dec
andl
jo
mov
or
mov
in
imul
push
ret
inc
inc
adc
and
aaa
mov
cld
and
and
loope
cmpsb
dec
adc
jnp
and
mov
fnstsw
mov
jno
xor
and
andb
or
push
leave
jl
call
inc
hlt
inc
push
aaa
cli
stc
ljmp
dec
ljmp
movl
inc
xchg
xor
jns
mov
call
dec
in
movsl
push
or
xchg
jo
nop
jge
inc
das
lret
jl
fsubp
lea
das
dec
fdivs
shlb
rcll
ret
divb
push
adc
sbb
push
lahf
xor
mov
xor
fiadds
cltd
xor
push
mov
inc
xlat
sarb
mov
mov
sbb
cmpsb
and
aaa
or
jmp
add
add
add
inc
xor
fbld
adc
js
orl
fisttps
xchg
mov
icebp
je
test
xchg
addr16
jno
andb
add
shll
cld
test
jnp
and
cld
mov
lcall
jb
xchg
rcrl
fcmovnbe
push
mov
mov
into
mov
stos
xor
cs
fistpl
sub
or
inc
lret
movups
in
jnp
sub
add
les
shl
int
jbe
fldcw
cltd
pop
add
mov
or
js
mov
cmp
lock
leave
outsl
outsl
or
adc
mov
and
insl
dec
cmpsl
leave
jbe
mov
shr
push
sub
in
push
clc
or
pop
sahf
std
cmp
pop
push
adc
jbe
dec
insb
icebp
lea
repz
out
cwtl
and
scas
pop
jns
push
stc
ss
out
xor
daa
sbb
sub
int
jecxz
dec
out
test
add
sbb
cmp
dec
cmpsl
and
xchg
and
dec
shlb
xchg
mov
push
mov
pop
enter
je
or
add
mov
in
aaa
sub
mov
pop
nop
test
xor
mov
push
fisubrl
push
adc
inc
int
inc
shrb
out
rcl
ret
xor
fstpl
das
fcoml
lret
stos
sbb
imul
outsb
jns
popf
popa
ds
and
fwait
daa
push
movsb
movsb
fistpll
push
mov
and
dec
rcrb
sub
dec
pop
fwait
jg
popf
and
mov
adc
and
rclb
dec
stos
rcll
push
repz
adc
nop
scas
stc
fcmovnbe
ficompl
pop
ret
push
lahf
pop
ret
in
jle
daa
out
insb
out
and
loopne
lret
aas
xchg
sub
hlt
jl
jne
sub
push
inc
mov
scas
adc
js
sbb
mov
dec
dec
add
pushf
xchg
mov
fdiv
test
cmc
pushf
mov
adc
ret
std
dec
and
mov
cwtl
insb
inc
das
aam
mov
cld
test
mov
sbb
jno
inc
fucomi
aas
push
popa
dec
jg
out
jns
fwait
lods
sbb
hlt
push
stos
dec
and
mov
push
mov
inc
loopne
bnd
inc
lods
and
stos
sub
push
and
addr16
icebp
dec
loopne
cwtl
cmp
adc
xchg
or
mov
lods
sti
push
inc
std
or
push
stos
sahf
cmpsb
xchg
push
xchg
iret
aaa
mov
cmp
mov
or
jae
jbe
xor
rolb
jnp
sti
inc
int3
mov
dec
inc
jecxz
fisubrl
adc
popa
push
and
or
cs
cmp
jns
sbb
push
mov
adcb
xchg
pop
jp
inc
jle
test
mov
addb
sub
leave
add
mov
pop
mov
inc
in
pop
dec
enter
gs
les
mov
mov
and
aas
sahf
or
decl
and
loop
push
mov
rolb
mov
cmc
pop
mov
imul
andl
rorb
cmc
mov
xchg
test
insl
ds
adc
fsubp
mov
lcall
fs
push
out
jg
mov
cmpsl
pop
mov
mov
xor
mov
push
daa
push
lret
inc
add
rorl
mov
xor
fwait
mov
sbb
in
rcll
dec
aaa
fstenv
adc
repnz
aad
ja
adc
leave
jbe
mov
or
jae
dec
mov
repz
dec
loopne
sahf
dec
notb
sbb
mov
add
daa
mov
pushf
mov
and
sbb
adc
mov
rcrl
stos
xchg
push
mov
sbb
xor
movsb
mov
lods
stc
rcrb
inc
jmp
or
lods
daa
push
fdivr
inc
push
sub
mov
pop
ja
xor
inc
inc
pop
ret
scas
push
insb
clc
dec
dec
lahf
test
inc
imul
js
daa
inc
cmc
btrl
pusha
sar
lds
push
inc
movswl
sub
add
inc
xor
pop
aas
or
push
sbb
mov
pop
sbb
std
imul
movhps
imul
popa
aad
pop
fbld
jb
mov
dec
popf
mov
jge
mov
mov
jne
scas
les
mov
je
or
mov
sbb
sarl
inc
dec
fwait
clc
ljmp
fcoms
leave
loop
xchg
xchg
mov
ljmp
or
rclb
and
shll
jb
lcall
mov
cltd
gs
jae
pop
cmp
or
rcl
repz
dec
dec
inc
dec
sub
nop
jae
mov
shlb
shll
push
xor
outsl
or
loopne
shlb
dec
clc
add
sbb
ror
xor
into
lods
push
js
jl
into
mov
xchg
les
loop
jle
fistl
cmpsb
pop
jl
jb
jle
mov
jae,pn
scas
jnp
ljmp
and
and
and
shll
mov
cmpsl
xchg
sbb
dec
mov
ja
stos
dec
movb
stc
cwtl
pop
mov
fiaddl
mov
jae
rcll
jle
xchg
inc
push
sbb
xchg
or
jmp
mov
adc
pop
imul
dec
sbbb
lds
jl
decb
xor
fisubrs
cmpsb
xchg
xor
push
jl
mov
and
pop
pop
pop
mov
in
xchg
add
sti
adc
sbb
xchg
and
xchg
adc
outsb
cmp
push
lcall
fcmovne
frstor
lcall
mov
out
sbb
and
mov
pop
jl
out
mov
lods
stc
cmp
mov
dec
movsl
sti
jle
aad
inc
sti
into
cmp
fsubr
push
jne
lea
xor
rorl
dec
dec
push
pop
out
sbb
repz
ljmp
mov
mov
jbe
sbb
aaa
xor
dec
pop
xchg
clc
pop
fstpt
jl
stos
dec
dec
lock
add
pusha
jns
jno
mov
push
cli
bound
mov
cmpl
dec
push
jle
xchg
pushf
insl
jbe
or
lods
mov
and
cmp
or
iret
lea
pop
les
divl
repz
sbb
push
enter
jl
jbe
push
lods
and
cmp
adc
xchg
cmpsb
fsubs
xor
lds
sarl
lods
dec
push
push
pop
out
enter
out
std
sub
and
sub
mov
fcoml
andl
or
xchg
pop
mov
jbe
mov
inc
movsb
jno
push
xchg
sahf
das
and
adcb
outsb
loope
bnd
push
test
jns
addr16
jg
out
push
jno
jne
in
jb
add
xchg
scas
mov
stc
jbe
sbbl
cli
std
and
movsl
dec
xchg
std
lods
cmpsl
cs
cmp
gs
addr16
or
outsl
fnstenv
sbb
push
lock
push
jg
ficoms
mov
jecxz
rcrl
jp
aad
sbb
mov
test
loopne
mov
int3
xchg
popa
sbb
fsubs
clc
pop
out
lea
orb
lret
incb
cwtl
fs
and
or
xchg
cmpsl
cmpsb
or
xchg
jae
and
xor
outsl
out
adc
addr16
push
imul
decb
fisttps
fwait
sub
inc
pop
idiv
add
out
adc
adc
lahf
push
loop
faddp
sbb
push
mov
push
xchg
fnstsw
lds
out
xor
cmc
xchg
cli
mov
xchg
pop
les
pop
rolb
inc
push
dec
outsl
dec
pop
pushf
stos
test
cmp
leave
mov
insb
mov
sub
adc
jecxz
push
out
xchg
mov
bound
xchg
pop
into
xchg
iret
test
push
test
mov
ret
sbb
cmp
aam
ss
or
and
out
sub
jl
add
aam
jg
lock
mov
pop
lret
add
xor
and
orb
jo
pop
add
outsl
add
addl
push
js
pop
and
xor
mov
lock
cmpsb
popf
out
or
mov
cmpsb
mov
rclb
add
cs
and
add
ss
pop
lock
push
lods
out
xor
int
in
btc
dec
mov
js
movl
push
mov
xchg
dec
mov
lret
div
shll
outsb
add
sbb
push
fimuls
ret
add
adc
lea
push
sti
pop
dec
push
lret
out
iret
xchg
in
clc
cli
in
andl
add
jne
lods
mov
pop
xchg
aam
jns
sbb
jge
sub
subb
ljmp
in
adc
sub
inc
lret
shl
add
mov
jge
mov
sbb
dec
in
std
sub
xchg
incb
mov
fwait
sahf
pushf
fwait
mov
std
inc
jle
mov
lods
outsb
in
xchg
sub
xchg
add
and
cld
shr
push
add
shlb
pushf
adc
out
repz
jno
push
mov
lods
mov
ret
lea
sub
aad
mov
ss
add
dec
pusha
mov
movsb
mov
fldt
cli
loopne
enter
movsb
arpl
inc
adc
mov
xorb
xchg
or
mov
pop
std
inc
adc
cltd
and
dec
stos
xchg
inc
jnp
xor
xchg
cs
stc
mov
sti
shl
aaa
mov
daa
sub
mov
xchg
ret
mov
popa
mov
inc
mov
push
and
push
sbb
pusha
lds
hlt
fcmove
cs
std
scas
xchg
mov
test
loope
out
imul
loop
pop
cli
pop
popf
and
hlt
pop
mov
imul
mov
pop
or
push
or
dec
fisubrl
leave
mov
lods
pop
into
xor
rolb
push
push
jl
cli
mov
xchg
or
xchg
xchg
push
xchg
inc
popl
cmp
lcall
xchg
xor
bnd
arpl
mov
xchg
sarb
adc
mov
push
cmpsb
jbe
pmulhuw
mov
andb
dec
jne
int3
sbb
lret
pop
inc
rep
clc
lcall
rcrb
pop
mov
cmp
lods
repz
call
pop
ljmp
mov
mov
adc
inc
pusha
ficomps
push
nop
lea
dec
inc
fxam
fs
repnz
lcall
nop
or
or
mov
std
lea
ror
scas
mov
jns
mov
icebp
cwtl
rcrl
insb
inc
popa
mov
sub
ss
ljmp
rclb
push
in
ret
out
insb
mov
dec
aas
in
das
insl
outsl
lea
pop
mov
mov
inc
dec
pushf
leave
in
push
mov
fcomps
out
int3
loope
or
test
ret
lods
test
roll
mov
ljmp
add
push
and
cmpsb
xor
mov
mov
cmp
or
dec
mov
filds
mov
cmp
enter
lods
hlt
loope
insl
xor
lea
sbb
push
scas
jmp
out
and
mov
ss
dec
sub
mov
add
sti
int
xlat
adcl
lods
into
stc
and
and
mov
mov
clc
lea
js
and
ja
xlat
movsl
inc
add
mov
rcll
aas
push
outsl
or
jecxz
push
dec
int3
xchg
sub
push
or
inc
imul
dec
or
leave
std
movsb
push
clc
mov
jl
ja
adc
xchg
sbb
scas
mov
and
outsl
dec
jbe
sbb
addb
or
bound
cmp
test
xchg
fimull
daa
cltd
fbstp
jne
and
sbb
cmp
js
frstor
push
jo
in
sbb
imul
je
add
pop
scas
sbb
add
imul
jo
bound
out
inc
shr
fdivrl
enter
pop
xchg
push
dec
ss
lea
add
imul
dec
xchg
lods
std
dec
mov
movsb
fimull
push
dec
pop
push
fsubs
mov
add
ss
sbb
imul
hlt
xchg
push
sbb
into
push
and
sbb
icebp
xchg
sub
ss
nop
pop
or
mov
dec
mov
daa
in
jecxz
repz
out
xor
sbb
cltd
mov
xchg
jg
push
push
fcompl
in
rolb
xchg
lods
sbb
sbb
mov
push
cltd
test
ds
mov
je
out
fsubs
mov
push
push
xor
and
imul
mov
aad
adc
mov
inc
add
mov
fnstsw
xorb
sarb
pop
adc
or
lock
popa
es
mov
adc
jle
sahf
call
or
and
and
sbb
jl
adc
cmpsl
scas
or
gs
xchg
jns
lahf
shl
mov
int3
inc
xor
call
sub
push
cmp
xor
push
jecxz
jp
mov
mov
sub
ljmp
add
mov
jmp
ret
dec
inc
cmpl
ret
into
ss
imul
push
pop
scas
and
inc
aam
xorb
test
pop
cmp
loop
or
and
jo
xchg
ja
outsb
fidivs
shll
jmp
mov
adc
loop
dec
push
cmp
dec
dec
pop
mov
xchg
popf
lods
mov
ds
adc
aam
std
pop
rclb
insl
push
popa
sahf
pop
mov
pop
lea
or
rorl
sahf
cwtl
flds
test
gs
scas
bound
cmpb
scas
push
mov
push
dec
shl
out
int3
in
inc
push
das
cmp
loopne
es
addr16
popa
dec
hlt
xor
dec
sbb
sti
repnz
or
or
lcall
jb
xchg
test
push
dec
hlt
sbb
lds
pop
mov
rcr
fildl
aad
jne
std
std
out
xchg
adc
push
or
cmp
lahf
imul
lds
pop
aaa
cmc
call
lock
xchg
pop
inc
pop
lock
out
push
inc
push
loop
mov
andl
pop
or
imul
pop
mov
loope
pop
jmp
cmp
call
or
push
push
insb
adc
loop
xor
mov
adc
cmp
movsl
aaa
lods
aaa
je
stos
xchg
das
loop
lods
hlt
scas
jmp
xor
jns
inc
inc
xor
aaa
sub
inc
push
and
rcrb
dec
jns
jmp
cmpsb
mull
imul
mov
and
fidivs
sti
andb
out
popa
mov
insb
arpl
out
dec
movsb
cmp
dec
mov
fidivl
rorl
push
mov
lea
lret
sbb
scas
rcrb
daa
outsl
inc
jae
test
cmpb
es
clc
sysexit
lock
inc
sti
ja
jae
adc
lret
cld
popf
daa
shrl
inc
cmp
push
adc
aaa
sbb
pop
pop
loop
nop
cmp
aam
mov
lret
lret
out
pop
mov
testb
or
cs
inc
loope
dec
pop
loope
or
push
testb
cmp
add
aas
lds
pusha
adc
or
cmp
mov
push
pop
rep
jne
imul
pop
add
fdivl
and
leave
hlt
loopne
and
push
xor
xor
push
push
xchg
jle
rcr
jmp
mov
cmp
adc
leave
dec
cltd
mov
mov
push
xchg
cmp
loopne
loop
aaa
push
loopne
call
jo
rorb
cmc
jne
jae
xchg
mov
lret
mov
shr
rorl
repz
imul
lret
xor
movsb
sbb
inc
popf
xor
rcrl
lods
sbb
jno
movsb
inc
stc
add
fs
jg
xchg
add
stc
les
pop
cmp
into
xchg
test
sbb
dec
sbb
xchg
les
ret
adc
loop
imull
call
and
mov
lods
sub
inc
in
imul
fs
xchg
cli
pusha
shll
stos
push
inc
mov
xchg
ficoms
fwait
xor
mov
int
mov
movsl
add
push
cmpsb
mov
xchg
lret
mov
arpl
subl
xchg
xchg
mov
cmpsb
jno
addr16
xchg
jg
xchg
dec
fsubrp
push
inc
or
lret
pushf
cmp
fdivs
bound
cmp
leave
or
ficoms
mov
mov
sub
pop
mov
push
and
push
pop
xchg
cmp
cmp
ret
pop
mov
jne
loope
mov
inc
ret
adc
sbb
pusha
xchg
lods
mov
cmp
daa
vunpckhpd
out
testb
cmpb
outsb
and
loope
sub
int3
mov
lds
pop
add
fildll
ret
inc
and
push
push
jns
xor
xorl
insl
and
addl
dec
popf
unpcklps
mov
mov
lret
popf
divb
dec
push
fmul
inc
mov
mov
jg
dec
shll
loopne
lock
fistl
in
mov
lea
aam
xchg
in
or
aaa
cmpsl
out
notl
jno
loop
mov
into
xchg
pop
mov
stc
in
push
mov
add
imul
int3
stos
ljmp
outsb
adc
xchg
outsb
js
aaa
ficoml
clc
popa
das
movsb
pusha
imul
stos
sbb
movsb
xchg
mov
mov
or
push
mov
dec
adcb
push
xor
jae
lods
loope
dec
fsubrl
mov
stos
push
fisttpl
lret
ds
cs
sbb
or
cmp
sub
jnp
imul
mov
outsb
stos
push
fisttpl
lret
ds
cs
sbb
or
cmp
sub
jnp
imul
test
outsb
scas
push
fisttpl
mov
ficomps
into
paddd
out
and
jb
pop
jg
outsl
jg
outsb
jmp
fisttpl
lret
mov
in
mov
jmp
add
xor
mov
cmpsb
inc
cltd
insb
ljmp
fmuls
enter
test
cwtl
dec
mov
stos
push
lcall
or
testb
sbb
dec
mov
stos
call
lcall
lock
sub
cwtl
ds
sub
cmp
dec
repz
aas
lcall
or
leave
jmp
xlat
ret
inc
bound
in
push
sarl
pusha
rcrl
ljmp
jl
adc
jle
push
mov
dec
add
mov
loopne
pushf
mov
pop
jp
cmp
mov
push
ss
inc
jg
jp
iret
xlat
loop
out
adc
cmp
sti
sbb
mov
cli
xor
inc
ja
std
ficoms
pop
bound
cli
cmp
mov
push
dec
cmp
movsb
std
das
push
fidivl
ret
add
adc
repnz
test
fisttpll
dec
dec
stos
push
lcall
mov
or
jp
add
sbb
push
jp
dec
in
xor
scas
push
sti
sbb
es
imul
shrl
pop
in
xor
adc
iret
loopne
pop
out
sbbl
mov
test
jg
add
jnp
sbb
xor
sub
or
jge
sub
sbb
or
clc
sub
cmp
or
sbb
dec
mov
stos
push
lcall
or
clc
sub
cmp
or
sbb
dec
mov
stos
lods
shl
addr16
pop
je
dec
mov
lock
xor
or
sahf
cmp
daa
jg
lods
loopne
push
and
cwtl
ds
mov
inc
add
cmp
stos
ret
mov
js
aad
out
rcll
push
mov
lods
push
cmc
xchg
lret
ffreep
cmpsb
repnz
dec
push
mov
mulb
dec
jno
pop
push
ljmp
sub
add
push
lret
lods
popf
xchg
xor
lahf
adc
movsb
jmp
clc
jp
mov
jae
out
push
cs
jecxz
mov
icebp
in
fimuls
add
adc
icebp
cmp
jle
and
in
jb
jae
out
jmp
ljmp
pop
mov
push
add
clc
bound
movsl
sbb
pop
das
mov
aaa
in
xchg
scas
push
inc
push
incb
std
jnp
loop
push
repz
loope
adc
sub
cmp
stos
jb
sub
test
xlat
pop
dec
add
shll
xchg
and
mov
stos
cmp
push
inc
arpl
adc
das
lret
dec
pop
and
mov
orl
roll
mov
subb
imul
pop
add
mov
clc
popa
push
call
ret
mov
pop
mov
mov
cmp
mov
add
ret
test
sbb
sti
scas
xchg
sub
loope
xor
dec
lods
adc
jne
mov
or
arpl
sbb
cli
mov
fucomp
sarb
decb
xchg
cmc
jmp
rorl
sbb
add
sbb
mov
cmp
stc
xchg
push
fcomps
in
imul
xchg
mov
mov
mov
inc
imul
fildll
aad
jae
fcom
push
xor
mov
mov
sbb
data16
cmp
bound
in
lods
fwait
movsl
fstl
subb
adc
lods
jg
jo
push
mov
sbb
pushf
sub
pop
inc
pop
push
mov
fwait
outsb
fstpt
fwait
push
arpl
or
sbb
jns
ja
aaa
setae
cltd
adc
pop
push
cwtl
jno
in
jle
push
repz
xchg
jo
sbb
inc
inc
shll
add
xor
inc
aaa
pop
cmp
add
lret
add
push
inc
lret
push
xchg
or
aad
xor
outsb
fistpll
xchg
test
add
and
cltd
popa
mov
pop
in
sti
aaa
xchg
dec
adc
mov
sub
ret
movsb
xor
mov
mov
aad
cmp
push
ret
dec
shrl
pop
lret
stos
loopne
add
hlt
xor
test
pop
lcall
add
mov
std
mov
mov
or
lret
push
push
xlat
pop
jb
aam
dec
jbe
mov
cmp
int3
cmp
aaa
add
jns
adc
mov
push
jae
and
mov
test
movsb
dec
leave
jp
addr16
or
adc
mov
mov
test
push
pushl
les
outsl
stc
jge
imul
pop
cld
cmp
outsb
sti
mov
les
xor
cmpsl
test
pusha
nop
sub
push
xlat
and
cmovae
push
mov
jp
inc
fdivs
mov
sbb
mov
pop
sar
xchg
lahf
xor
lods
cld
mov
and
imul
sbb
mov
ret
pop
stos
cltd
mov
pusha
iret
popf
xor
frstor
xor
xchg
sub
sbb
push
dec
jbe
and
xchg
xchg
pop
out
inc
in
outsl
fldl
js
addr16
inc
popa
cmc
push
and
xchg
ja
mov
and
cmp
lret
fs
leave
inc
jne
sub
cmp
icebp
mov
rorb
imul
jge
test
in
mov
sarb
fstpt
aam
xchg
xchg
mov
pusha
ffreep
and
mov
sub
inc
mov
mov
mov
jp
mov
mov
cwtl
sub
sbb
out
cli
mov
sub
xor
testb
sub
mov
sbb
mov
movsl
jbe
jge
fdivrl
pop
push
mov
imul
and
adc
mov
int3
mov
and
inc
ss
cmpsl
cmp
cld
shrb
fdivrs
nop
cltd
out
mov
jp
sub
cmp
fisubs
and
jp
notb
les
int
sub
in
add
mov
lret
mov
and
mov
xchg
mov
xlat
sbb
pop
or
push
and
mov
repz
push
mov
fildl
push
cltd
sub
repnz
aad
push
daa
push
repnz
repnz
xor
xlat
inc
enter
imul
sbb
iret
mov
push
xor
insl
dec
mov
cwtl
das
mov
rcr
push
addl
xor
push
mov
add
fwait
ljmp
and
and
jg
inc
out
cmc
jo
roll
inc
ret
int3
fsubl
jecxz
xchg
push
lcall
mov
pop
sub
bound
ds
sub
adc
aas
cltd
popf
cmpsb
test
lret
ss
ss
frstor
in
mov
xor
add
sub
dec
pusha
rorl
add
aas
mov
ds
lods
mov
cmp
bound
inc
shrb
ds
xor
jns
aaa
sbb
dec
mov
mov
into
push
adc
sti
repnz
cmp
frstor
aad
mov
sub
sub
cmpsl
dec
pop
jle
pop
mov
cld
mov
xor
and
mov
adc
dec
jle
bound
dec
dec
inc
mov
cmpl
sbb
scas
and
xor
xor
xor
sbb
mov
out
aaa
cmp
cmp
repnz
ss
fsts
lods
push
clc
icebp
in
unpckhps
popf
jecxz
add
movsl
dec
mov
mov
jo
les
sbb
call
mov
shlb
mov
stc
insb
pop
es
or
ja
popf
js
leave
cmpsl
fbld
add
insl
inc
mov
xor
mov
mov
and
sbbb
mov
jmp
adc
xchg
mov
sarl
shll
enter
mov
xor
pop
sub
addb
shlb
or
xor
and
pop
enter
push
movsl
rcr
push
mov
xchg
mov
xor
insb
loope
mov
jae
lds
mov
outsb
sub
sbb
sbb
fildl
xchg
sub
scas
cmp
lods
lret
in
scas
out
fstps
cmpsl
std
mov
push
rorl
cmp
enter
sahf
fs
or
hlt
jnp
pop
mov
fs
insl
xor
je
jl
jno
cmpsl
lods
mov
scas
cmp
loop
ljmp
inc
xchg
mov
xor
mov
mov
pop
in
sarb
xor
arpl
push
scas
insb
and
mov
xlat
pop
and
mov
out
aas
sbb
decb
dec
fwait
mov
rorb
cmpsb
dec
sbb
xlat
nop
nop
mov
xchg
frstor
sbb
pop
mov
sub
xor
mov
mov
in
shll
mov
fldl
out
cs
mov
roll
aas
pop
out
ret
loope
cmpb
aaa
cli
jo
and
in
cmp
mov
gs
xchg
xor
in
push
leave
mov
inc
int
xor
out
pop
idivl
inc
dec
sbb
out
ret
jecxz
lret
mov
push
push
mov
or
xchg
test
popf
pusha
mov
jns
in
cmp
push
loop
stc
sbb
dec
sub
mov
xchg
loopne
or
mov
cmc
repz
xchg
jo
push
fdivrs
movl
adc
std
ficomps
push
fists
jb
cld
out
stos
mov
xchg
push
repnz
dec
xlat
mov
mov
vandpd
pop
add
push
xchg
rol
mov
mov
mov
leave
push
xor
sbb
push
std
xor
sahf
add
cmpsb
nop
or
stos
hlt
dec
data16
insl
xor
mov
jle
push
jno
inc
int3
jl
adc
jne
or
and
fsubs
and
mov
movsb
addb
out
mov
enter
sub
sbb
add
xchg
push
hlt
ss
push
xchg
add
sbb
inc
lods
push
pushf
jbe
loop
pop
outsb
scas
push
sar
loope
popf
fisubrs
mov
fisttps
sub
mov
xchg
sub
iret
jge
test
push
add
lcall
test
cmp
orl
ficompl
lea
dec
mov
shrb
stc
out
cmpsb
fcom
xor
and
out
add
jns
data16
and
cltd
jns
or
test
sub
inc
ja
adcl
roll
sbb
mov
xchg
xchg
aam
push
pop
lea
movsb
inc
cmp
mov
mov
cmp
add
notb
xchg
inc
popa
stos
and
aas
jmp
cmpsb
scas
call
inc
xor
icebp
push
xchg
cmp
jmp
in
mov
sub
pushf
scas
xchg
dec
jnp
pop
icebp
popf
addl
aaa
sub
and
jo
sbbl
jge
lcall
rclb
push
push
leave
jmp
iret
cmp
pushf
popf
in
cmp
push
inc
dec
jb
adc
jecxz
add
push
or
int
adc
into
pop
filds
mov
or
jne
imul
jp
clc
pop
iret
popa
pusha
ret
sub
add
xlat
adc
mov
sbb
dec
mov
pop
test
xchg
cmp
popf
cmp
xor
and
shlb
inc
or
out
inc
push
xor
xchg
xchg
rcrl
sarb
xor
mov
push
dec
jbe
inc
mov
std
popf
xchg
xsaves
pop
mov
sub
mov
sbb
jo
jns
scas
inc
mov
push
mov
sub
mov
jne
add
pushl
mov
fsubr
mov
ja
pop
sub
fisubrs
push
dec
in
sub
cmp
mov
stc
cwtl
mov
shll
cli
outsl
cwtl
pusha
ss
dec
xor
jl
cmp
scas
testb
cmp
jnp
sbb
into
push
push
imul
xor
and
fildll
jge
jmp
leave
pop
mov
std
lcall
pop
fstps
pop
sbb
cmc
jno
cld
pop
mov
mov
rorl
repz
xchg
mov
jnp
sub
dec
das
imul
fidivrl
mov
mov
js
mov
stc
xorb
insl
and
mov
ret
xor
lock
mov
out
ja
add
clc
sub
jg
jne
arpl
mov
jg
mov
sti
test
pop
pop
insb
push
mov
xor
shrl
inc
push
dec
jge
pop
je
push
lcall
inc
dec
dec
mov
stos
add
cmpsl
ficompl
mov
sub
and
jo
pop
add
ds
out
pop
cmp
lahf
fcomi
jp
je
sub
xor
pop
jp
shl
cmpsl
mov
ret
rcr
add
pop
xchg
sbb
add
rcll
mov
sbb
xchg
mov
iret
cmp
sub
sbb
mov
sub
jns
test
adc
enter
and
lahf
pop
inc
int
sub
xlat
mov
mov
sbb
jmp
icebp
imul
pop
mov
push
push
scas
and
ret
int3
sbb
add
pushf
cmp
jno
sarl
jg
or
adc
fldenv
ficomps
adc
pop
mov
jnp
push
pop
jnp
push
ds
cmp
imul
cld
mov
les
addr16
mov
pusha
lds
repz
xor
push
cmpsl
and
fldl
dec
fsubrs
xor
mov
mov
adc
pop
add
cmp
add
and
add
sub
int3
shrb
mov
test
push
fnstsw
bound
and
lcall
js
lea
aam
or
jbe
hlt
jno
mov
lret
inc
xchg
inc
out
sbb
jmp
cmp
jno
mov
bound
or
pop
mov
push
movsb
mov
je
mov
rorb
fcmove
lret
repnz
xchg
or
int3
mov
jg
inc
bound
mov
mov
sbb
or
sbb
leave
mov
cli
cmpsb
pop
mov
std
mov
lds
xor
or
cs
mov
mov
outsl
les
adc
add
xchg
lcall
xchg
aas
aas
out
pop
lret
jnp
fs
idiv
mov
dec
pushf
sti
mov
arpl
dec
gs
sbb
xchg
pop
in
jge
loopne
dec
xor
lcall
xor
xchg
sti
jmp
jno
adc
inc
add
cmp
xlat
loop
sysret
pop
push
cmpsl
dec
jmp
and
fstpt
cmp
arpl
and
inc
mov
ffreep
mov
xor
lods
test
jne
sbb
inc
inc
insb
pop
cs
and
or
cs
lcall
pop
jb
pop
inc
sub
loop
sbb
inc
fisubl
call
into
ret
inc
adc
pop
add
pop
insl
jo
stc
mov
mov
loop
jae
jo
add
or
xor
ret
insl
leave
les
mov
test
repz
loopne
inc
iret
mov
aas
addr16
adc
bound
push
sub
jns
mov
lods
shrl
mov
xor
sbb
inc
repnz
rclb
mov
stc
test
mov
pop
stos
jae
add
in
data16
jg
dec
std
loope
shll
pop
psubusw
push
push
jne
aam
xor
sahf
scas
sub
aad
or
lock
xor
pop
dec
int3
xlat
lods
lret
pop
pop
repnz
sbb
inc
dec
add
push
push
sbb
aaa
int3
lock
lret
jg
add
aam
aas
ficoml
fstpt
in
imul
or
pop
jg
push
dec
out
repnz
mov
js
movsb
pop
mov
jb
adc
out
movsl
arpl
data16
sub
aaa
test
inc
out
das
fstl
pop
sbb
fcoml
cwtl
aaa
ds
int3
adc
mov
pop
ret
jmp
sar
fnstsw
inc
ficoms
enter
mov
sbbb
jmp
mov
sbb
xchg
xor
fistpl
jnp
ficoml
mov
pop
fmul
jmp
pop
cmp
loopne
jle
xor
nop
mov
cwtl
sub
jl
add
insb
push
mov
call
push
in
sub
jmp
es
aad
xchg
aas
or
idivb
test
push
mov
push
movsl
cmp
jmp
movsb
insb
ljmp
xchg
push
cmp
in
mov
inc
mov
sar
jno
jne
sub
aaa
inc
fnsave
add
inc
mov
rcrl
fucomp
inc
add
pusha
cli
jl
mov
push
nop
outsl
lcall
lcall
orb
pop
incb
cmp
aam
fucomp
sbb
in
loop
pop
jmp
mov
and
subl
inc
and
mov
mov
xchg
xor
bound
jge
addb
in
push
cvtps2pd
ljmp
cld
lock
inc
mov
cmpsl
mov
xchg
pop
mov
pop
adc
test
fistpll
mov
test
jb
add
mov
iret
sti
fsts
rcrl
and
inc
lods
sub
clts
sbb
xchg
mov
dec
test
shll
xor
push
sbb
mov
stos
jbe
mov
xor
fcoms
rcrb
push
mov
sbb
daa
mov
test
xor
mov
inc
or
cmpsl
jle
jle
sub
lea
sbb
add
mov
test
mov
lea
out
aas
push
stc
imul
sti
mov
aas
or
mov
push
test
mov
or
nop
pop
cli
add
and
inc
push
jmp
iret
scas
mov
out
adc
xor
or
iret
clc
cmpsb
lds
xor
xchg
test
loopne
mov
insl
outsl
cmc
mov
mov
add
imul
add
mov
push
add
jo
fsub
cmp
icebp
xchg
xor
mov
mov
mov
cmp
rorb
pop
add
sbb
sub
and
out
lods
popa
inc
jecxz
ret
jl
sub
mov
sbb
pop
shlb
repnz
std
adc
xor
sub
sub
enter
add
js
shll
sti
negl
cld
or
push
out
in
cmp
mov
repz
push
rolb
fdivl
mov
call
push
in
jno
mov
and
lret
jmp
test
pushf
mov
popa
cmp
sbb
jmp
test
sub
pop
xor
inc
daa
scas
fcompl
xchg
loop
sbb
pop
and
mov
push
cmpsl
adc
cwtl
insb
les
jge
push
das
mov
outsb
mov
or
cmp
test
push
xchg
or
and
add
ret
movsl
cmp
cwtl
and
aam
js
and
cmp
mov
sub
repnz
ljmp
test
xor
mov
mov
fistl
lcall
sub
adc
cld
push
mov
jns
xchg
mov
mov
cld
mov
lods
stc
jmp
dec
loope
mov
mov
sbb
stc
or
sahf
xchg
fdivs
xor
leave
push
aad
xchg
sbb
add
loopne
add
cmp
in
mov
push
and
adc
ror
out
cmp
inc
out
cmpsb
cmp
add
push
pop
int3
jno
mov
lds
mov
mov
cmp
cmp
push
cmp
mov
xchg
lods
inc
xchg
les
push
pop
sub
xchg
xchg
mov
xchg
out
dec
xchg
xchg
insb
dec
xchg
cmpsl
loope
test
repz
jecxz
shrl
cmp
xor
addr16
add
sbb
cmp
lea
cmc
iret
sub
loop
daa
jns
fprem
mov
adc
push
jle
es
into
rcll
mov
sub
fisttpll
jmp
push
push
mov
iret
loopne
fisubrl
jns
push
add
shrl
mov
aad
fwait
cmp
mov
in
mov
rorb
pop
js
dec
fldcw
test
subb
jge
mov
mov
xchg
aaa
xchg
mov
lds
outsl
mov
and
jo
lret
adc
flds
stos
cmpsl
mov
data16
int
inc
push
pushf
fadds
fs
add
xchg
mov
sub
cmpsl
enter
aam
pop
push
xchg
jns
adc
add
add
call
cmpsb
push
sub
stos
and
push
xchg
push
jnp
mov
xchg
inc
iret
cmpl
dec
rcrl
dec
pop
inc
xchg
clc
add
push
push
jle
test
cmp
xchg
rclb
jecxz
clc
hlt
push
cli
mov
sbb
and
test
cmp
test
jmp
repz
mov
inc
push
int3
xchg
mov
jmp
aaa
fsubl
xchg
test
mov
sub
mov
cmp
out
lret
jno
stos
popa
add
add
jl
cli
or
add
pop
cmpsb
xchg
sub
leave
shll
mov
mov
cli
insb
cltd
or
xorb
pop
cmp
hlt
in
ja
cmpsb
pop
sub
xchg
jne
fidivrs
mov
xchg
dec
lret
fiaddl
sbb
jno
xor
pop
mov
mov
aas
push
in
dec
cltd
mov
enter
inc
or
pop
mov
pop
inc
xor
leave
pop
int
xor
adc
cmp
ja
pop
das
add
ret
push
call
xor
jnp
lds
movsl
nop
lods
or
sti
xchg
pop
mov
ss
sub
jle
std
aas
cmp
pusha
iret
loope
call
mov
test
cmp
or
test
data16
les
adc
xor
sbb
pop
sbb
mov
sbb
clc
or
jbe
mov
cmp
sub
sbb
or
clc
sub
cmp
or
sbb
dec
mov
stos
push
lcall
or
clc
sub
cmp
or
sbb
dec
mov
stos
imul
ljmp
cld
sub
cmp
or
sbb
dec
mov
mov
cmp
cmp
sbb
mov
clc
sub
nop
jb
enter
and
push
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
js
fs
stos
pop
sbb
xchg
mov
cmp
or
add
pop
push
add
add
add
push
add
add
outsb
add
add
pushf
add
add
add
add
add
adc
or
add
add
jb
gs
add
push
add
add
add
add
add
add
cwtl
add
add
add
gs
add
mov
addb
add
test
cwtl
add
add
add
outsb
add
jne
cs
cwtl
add
add
add
outsb
add
into
add
add
add
add
add
add
add
add
add
xchg
add
push
add
add
xchg
add
outsb
add
jo
pop
add
add
add
add
xor
cmp
cwtl
add
mov
add
outsb
add
add
addb
add
add
add
add
pop
add
dec
add
add
add
add
and
sub
xor
xor
adc
add
add
add
add
add
int
pop
add
add
add
add
add
addr16
add
add
xor
lret
add
add
add
add
add
add
pushf
add
add
aaa
add
add
adc
sub
mov
push
add
add
add
add
sub
cmpsb
add
inc
add
add
add
add
push
add
add
add
add
cwtl
add
add
or
add
fildl
out
add
add
pop
add
add
xor
pop
add
add
add
add
pushf
add
inc
add
inc
add
add
add
add
outsb
add
add
add
cmp
xor
inc
add
outsb
add
cwtl
add
add
pushf
add
add
add
mov
sbb
cld
add
add
add
add
add
mov
pop
add
add
pusha
add
outsb
add
add
add
or
outsb
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
gs
add
cmp
mov
add
add
add
add
add
add
add
add
add
add
jno
cwtl
add
add
mov
loop
mov
add
add
and
and
push
add
add
add
add
nop
add
add
add
add
add
add
add
add
arpl
push
add
add
add
add
add
add
push
add
add
add
cmp
and
jo
movsl
add
or
add
add
outsb
add
add
add
add
add
add
lea
or
add
xchg
add
add
add
add
les
outsb
add
add
and
cwtl
add
add
enter
lea
gs
add
out
push
add
add
enter
add
push
add
add
movl
mov
add
add
out
add
add
add
adc
cld
add
stc
add
add
add
add
cltd
add
add
add
jo
cwtl
add
add
add
add
add
add
pusha
add
jb
pusha
add
test
sub
cmp
and
adc
inc
mov
mov
test
jp
cmpsl
mov
sub
pop
mov
push
dec
je
fcmovnu
sahf
aad
ret
inc
es
lock
or
mov
adc
xlat
cmp
gs
scas
pop
sbb
jmp
push
push
pushf
insl
adc
test
in
aaa
arpl
out
bound
jle
out
cs
sbb
aaa
sbb
bound
sub
or
imul
jbe
jle
pop
pop
ret
insb
sub
add
pop
jb
rolb
je
rclb
repz
ja,pn
mov
nop
movsl
add
in
push
loopne
jle
aas
dec
xchg
inc
repz
jne
xor
decl
repz
and
mov
orb
sub
insl
insb
jl
sete
or
lock
repz
loope
push
sbb
push
pop
bound
std
mov
and
loopne
shll
dec
add
das
outsb
mov
or
push
inc
dec
xchg
xor
loope
sub
adc
push
cmp
outsl
out
push
xor
popf
jo
jmp
jb
sub
pop
push
pop
push
inc
mov
jae
lahf
stos
or
cmp
sbb
orl
outsl
push
mov
sarl
popa
push
sahf
repnz
jnp
and
out
lcall
or
imul
loope
push
mov
jmp
dec
pop
xlat
les
imul
subb
pop
out
out
mov
call
jno
scas
test
std
repnz
push
lods
cmc
jae
jp
movsl
cmpsl
mov
cmp
pop
les
or
pop
xchg
inc
aam
pusha
or
inc
aaa
kmovw
and
pop
lcall
add
repz
or
in
jl
inc
cli
loopne
aaa
push
push
sti
leave
xor
cmp
mov
fsubl
lret
sbb
jmp
mov
out
iret
roll
inc
stos
stos
push
shll
fs
bound
jmp
imul
mov
fistpll
fadds
stos
iret
jp,pt
pop
inc
xor
pop
scas
push
out
sub
and
dec
adc
mov
sbb
mov
scas
dec
dec
jne
stos
pop
jl
outsl
popa
jnp
clc
dec
xchg
add
shl
push
add
or
mov
mov
jnp
fldt
das
not
out
std
aam
sbb
mov
aaa
pop
stos
or
fwait
rcr
icebp
xlat
fidivrs
cld
scas
inc
dec
aaa
mov
shr
aad
sti
push
mov
xchg
and
cli
shl
pop
jmp
push
cmp
mov
js
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
