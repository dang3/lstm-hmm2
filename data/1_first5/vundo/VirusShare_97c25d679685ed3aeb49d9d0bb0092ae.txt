jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
adc
sbb
add
insl
lock
sbb
sub
add
pop
add
add
add
add
add
add
add
add
pop
add
sbb
add
add
add
add
add
add
jbe
add
add
add
add
add
inc
add
pop
add
add
add
je
das
add
push
add
add
adc
dec
add
add
add
add
add
add
roll
leave
add
daa
add
add
je
add
add
add
add
add
add
add
add
sub
add
add
add
add
pop
add
add
add
je
add
roll
leave
add
daa
add
add
add
add
add
add
add
add
je
sub
roll
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
out
cmp
add
add
add
add
add
add
das
add
xchg
add
push
add
je
add
or
add
dec
add
add
add
add
add
add
add
add
add
add
jae
pushf
add
pop
add
je
mov
add
add
add
add
add
add
xchg
add
js
aaa
add
add
add
add
add
add
push
add
je
scas
add
lds
enter
pop
add
add
add
add
add
add
in
add
add
add
add
add
add
adc
popl
cmp
addl
loope
inc
add
add
add
dec
add
add
fiaddl
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
adc
das
add
pop
add
push
add
add
and
adc
into
add
add
movsl
add
push
add
add
lahf
add
or
push
add
pop
add
stos
add
add
add
jae
pop
add
add
xor
pop
add
add
add
pop
add
add
add
mov
jae
or
je
pop
add
add
jno
add
add
add
add
add
dec
add
xor
je
jns
push
add
add
add
add
push
add
add
push
add
add
aas
add
add
add
add
push
add
add
add
add
add
add
and
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
push
add
dec
add
add
add
add
add
push
add
add
add
add
pop
add
add
faddl
leave
add
add
add
notb
lea
dec
and
mov
dec
mov
jnp
cmp
pop
faddl
push
aas
mov
push
imull
sbb
mov
and
jge
sub
mov
inc
test
mov
aas
clc
push
pop
cmp
pop
adc
mov
pop
push
pop
pop
adc
add
mov
in
sub
out
clc
jbe
mov
add
jno
dec
loop
sahf
jbe
fisttps
stc
xchg
sbb
mov
adc
dec
in
jne
sbb
mov
outsl
cmpsl
and
dec
icebp
pop
mov
adc
lds
or
loope
movsl
xchg
and
stc
scas
add
add
or
popa
cli
add
insl
loop
cmpsl
xor
lret
dec
mov
xchg
jecxz
out
clc
xor
idivb
filds
inc
xchg
std
fstps
popf
and
imull
lcall
es
cmp
adc
jne
cmp
fidivl
mov
mov
jo
cmp
jne
dec
xchg
and
dec
movsb
adc
sub
arpl
stos
ja
push
dec
rcrl
push
lret
jno
gs
or
ret
sbb
and
dec
mov
inc
fstpt
jge
popa
jns
iret
mov
pop
ja
loop
xor
cli
inc
ljmp
rcrl
jbe
xchg
hlt
popf
cmpb
sub
xchg
mov
add
lcall
icebp
ljmp
ud1
jbe
ja
mov
test
mov
cli
adc
aad
mov
mov
fistpll
xchg
push
rolb
loopne
ds
popf
testl
aaa
and
outsb
imul
add
lods
dec
fistpl
pop
or
dec
add
push
add
or
mov
aas
pop
xchg
std
lret
add
xchg
mov
push
mov
pop
adc
mov
ficomps
shrb
mov
pop
icebp
adc
push
or
or
and
pop
addr16
push
fidivrs
popa
jns
in
mov
int3
out
das
cmp
xchg
ja
in
and
aaa
rol
out
lahf
and
jge
jnp
push
xlat
jnp
ret
ss
adc
sbb
test
mov
stos
mulb
imul
pusha
jmp
enter
into
xchg
lods
testl
jmp
jb
lock
stos
stos
stos
enter
sub
loop
mov
mov
insb
outsb
sbb
test
ss
lcall
jl
xchg
int3
jmp
int3
xor
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
sbb
or
cmp
sub
push
es
xlat
fs
lcall
jle
push
leave
cmp
fimuls
into
cmp
sub
pop
sahf
dec
sahf
jns
imul
mov
insb
enter
jmp
xlat
cmp
sub
pop
xchg
jns
imul
push
mov
inc
insl
xchg
push
mov
push
dec
xchg
pop
loop
push
test
insl
push
out
test
shrl
not
mov
test
push
and
cs
xchg
mov
push
scas
into
mov
movsl
push
int
mov
adc
ss
pop
pushf
dec
test
mov
jmp
xor
add
mov
and
imul
pop
adcl
add
bound
dec
pop
mov
mov
pop
imul
cwtl
mov
and
mov
push
push
insl
jmp
mov
jb
ret
mov
int3
and
add
out
ds
sub
leave
or
cmp
sub
pop
sahf
dec
mov
imul
flds
leave
push
stc
and
das
jl
push
jg
outsl
mov
es
push
shr
lret
jmp
jp
or
mov
push
cltd
inc
outsl
mov
cmpsl
pop
lea
cmp
add
cmp
sub
jmp
out
sub
sbb
push
nop
pop
sbbl
or
jg
dec
stos
sbb
dec
mov
imul
fstps
leave
push
stc
ds
into
cmp
sub
pop
sahf
dec
mov
imul
fstps
leave
push
stc
ds
frstor
dec
arpl
fsubrl
aaa
mov
test
push
push
mov
popa
dec
and
lods
sub
mov
and
cmp
scas
imul
ss
adc
aam
daa
das
cltd
shr
and
not
call
push
adc
out
cmp
rol
cmc
adc
fnstenv
repnz
or
dec
mov
jg
mov
andl
add
daa
call
punpckhbw
cld
mov
xor
jne
arpl
pop
add
test
cmp
and
mov
rolb
add
mov
out
cltd
mov
add
lret
das
or
jl
cs
xorb
fwait
adc
and
xchg
test
inc
bswap
xchg
dec
inc
lea
mov
jns
mov
lods
or
jl
jle
je
aad
and
lods
aad
cmp
ds
in
cmp
aas
mov
push
aad
scas
mov
push
into
out
inc
int3
filds
jecxz
gs
dec
adc
push
in
cmp
cmp
in
gs
dec
xchg
mov
dec
fdivrl
xchg
xchg
xchg
out
in
mov
fistpl
sbb
scas
xchg
lods
fldt
movsb
cmp
add
mov
cwtl
or
js
nop
outsl
mov
repnz
jg
imul
jo
push
cli
sub
sub
push
enter
pushl
imulb
enter
inc
dec
inc
jl
xlat
dec
inc
inc
mov
sub
or
shlb
mov
dec
push
and
mov
int
dec
and
mov
xchg
add
cld
mov
push
jne
xor
jne
mov
outsb
ret
xor
pop
jbe
and
dec
arpl
out
lods
sbb
jge
imul
xchg
sbb
fdivrl
adc
xchg
insl
addr16
or
xor
leave
cmp
ds
pop
shlb
lods
jns
or
out
mov
sahf
inc
cmc
or
fistpll
xchg
lcall
jmp
adc
repz
aad
std
dec
and
out
pusha
sub
inc
ret
jns
js
jmp
imul
push
jge
mov
push
andb
mov
push
imul
jns
sti
pop
notb
or
sti
andnps
add
lret
hlt
jne
sub
bound
enter
std
data16
imul
push
iret
imul
dec
lock
inc
mov
aas
fdivs
andb
mov
xchg
xchg
xchg
pop
std
jns
or
pop
or
pop
call
rclb
push
adc
mov
jge
enter
mull
fstps
lcall
dec
jl
add
sub
pushf
sub
jno
jnp
ss
xchg
rorl
pop
jp
dec
xchg
outsb
js
add
xchg
xlat
or
dec
int3
clc
aam
cli
fstps
jp
nop
pop
push
lock
mov
shlb
xor
adc
loope
xchg
cmp
scas
and
xor
dec
rorb
and
sbb
cld
sbb
add
inc
fwait
xchg
xor
lods
jns
nop
lods
and
xchg
ret
pop
xlat
in
push
add
movsl
jb
les
mov
in
in
xor
lret
mov
xchg
xchg
cmpsb
es
xchg
fbstp
imul
div
mov
mov
push
sub
push
push
aaa
cmpsb
mov
aaa
jo
add
mov
mov
xchg
aaa
xchg
jmp
mov
divl
sti
adc
test
add
imul
push
push
arpl
dec
bound
xchg
cmpsb
rorl
fs
cmpsb
test
ds
lret
push
mov
les
bound
out
je
int3
arpl
mov
cmp
jmp
xchg
rorl
cmpsl
je
jmp
imul
fcomps
xchg
push
dec
inc
fiadds
shl
mov
out
out
insb
pop
repnz
mov
mov
aaa
arpl
das
fdivr
jle
int3
movsb
dec
cmp
adc
test
mov
inc
es
sub
mov
xor
ja
sub
cmc
out
lret
add
popf
cmpb
and
stos
mov
dec
flds
jecxz
adc
inc
lahf
add
cmpsl
pop
jle
push
cmp
sbb
xor
jmp
cmp
jmp
inc
push
add
or
out
fsubs
pop
jge
fsubs
push
lods
ds
clc
push
mov
sub
push
mov
leave
jns
lods
dec
xchg
test
dec
or
sbb
sub
aas
aad
push
inc
stos
jge
out
push
fs
fdivrl
cmpsb
scas
add
fwait
push
mov
enter
mov
rcrb
cmc
add
lahf
popf
pop
div
inc
jle
imul
pop
fdiv
mov
xchg
int3
jno
inc
pushf
xlat
sbb
push
add
inc
dec
add
pop
sti
movsb
cmp
test
xchg
les
stos
jp
stos
es
imul
outsb
out
mov
xchg
repnz
pop
sub
fistl
in
xlat
xor
sbb
sub
sub
clc
cmp
inc
cmp
icebp
repz
inc
pop
push
xchg
shlb
rolb
jno
or
sbb
inc
xor
sub
inc
leave
adc
cmpsl
xor
loop
sbb
and
in
popf
shrb
shlb
pushf
sub
sahf
mov
movsb
stos
repz
inc
insb
xchg
std
push
and
cltd
mov
push
mov
mov
mov
loop
push
adc
scas
outsb
mov
inc
aas
fisubrl
lock
test
fldcw
in
jg
push
rcll
mov
testl
sub
mov
jmp
rcr
mov
inc
icebp
or
xlat
andb
fidivl
cmp
pop
inc
cmp
mov
scas
and
push
stos
cmp
xchg
cmpsl
dec
pop
jg
clc
cs
push
xchg
adc
adc
hlt
and
popf
pop
or
xor
faddl
aad
mov
loope
inc
sahf
pushf
lret
je
push
mov
mov
gs
js
pop
push
jo
sub
jmp
inc
into
xchg
lret
xor
sub
hlt
pop
repnz
adc
stc
lods
mov
gs
mov
aam
inc
ret
call
aas
inc
xchg
dec
ds
cmp
pop
ljmp
push
and
inc
out
xchg
bound
insb
mov
sbb
xchg
jge
es
xlat
or
and
push
loop
cmp
bound
or
popa
add
or
bsr
dec
rol
es
fisttpll
fiadds
dec
lods
sub
sbb
aam
xor
cmp
pop
insl
enter
jecxz
clc
test
lods
clc
xchg
int3
adc
xlat
cmp
lock
pop
je
or
shrl
les
std
outsl
popa
mov
lods
aad
lahf
into
aam
lret
jns
mov
or
sub
pop
in
mov
insb
addl
mov
sahf
inc
or
xor
and
lods
ds
xor
sbb
mov
dec
ret
leave
clc
inc
rcll
test
pop
test
fdivl
aad
lret
test
or
test
sbb
pop
pop
cmc
dec
or
sbb
sbb
xchg
hlt
pop
mov
rorb
dec
jle
jns
aaa
fdivl
xor
adc
out
inc
push
cmpl
std
fstpt
int
popf
into
fcom
gs
mov
mov
imul
mov
mov
psrld
into
and
mov
lret
adc
dec
mov
je
dec
adc
sbb
mov
iret
dec
pop
sub
xchg
call
jae
mov
inc
loopew
sbb
shrb
rcrl
testb
cmp
dec
test
sbb
mov
jg
fnstsw
les
sahf
mov
fadds
mov
pop
cmp
int3
clc
mov
jbe
adc
dec
jge
loop
outsl
xor
pop
repz
cld
mov
ja
fdivrl
xchg
data16
add
xchg
fimull
lds
push
inc
mov
dec
data16
addl
push
mov
push
xor
mov
or
mov
and
mov
popl
es
sub
sub
xor
imul
or
daa
test
cwtl
das
mov
stos
jne
jbe
addr16
lods
mov
push
lds
mov
xchg
cmp
xchg
inc
ficompl
dec
lods
mov
leave
ss
scas
dec
aaa
lret
mov
shrb
loop
jge
shrb
dec
fbstp
shl
leave
aam
repnz
js
cmp
js
arpl
sbb
les
cmp
cli
mov
pusha
scas
xor
cwtl
dec
shll
inc
push
push
outsb
ss
cwtl
ss
dec
idiv
cltd
mov
xor
lods
push
jp
int3
aam
inc
jle
jns
into
outsb
and
jmp
xchg
into
shrb
sub
pop
adc
xor
stos
and
imul
jl
inc
pop
je
adc
fdivr
jo
cwtl
and
jp
jecxz
jo
push
test
mov
cmc
push
loope
ficoml
fs
xchg
sbb
fs
xor
pop
mov
sbb
dec
out
ffreep
pusha
stos
jns
mov
gs
jb
ja
pop
push
ret
sub
cmp
dec
and
mov
inc
mov
jmp
testl
mov
push
lock
cld
dec
jle,pt
pop
push
loop
mov
testl
xchg
stc
xor
lret
push
scas
loop
stos
cld
scas
dec
push
jne
mov
sbb
xchg
sub
xor
mov
or
es
ljmp
hlt
rolb
jb
inc
pushf
pop
xor
sbb
mov
fsubrs
sahf
cmpsb
cmp
inc
add
pop
xchg
or
addl
or
aam
mov
xor
fdiv
push
pop
repnz
dec
cmp
xchg
xchg
xor
push
push
outsl
mov
mov
aas
stc
mov
testl
sarb
sarl
jb
cli
pop
mov
pusha
leave
jl
mov
icebp
in
xor
cmc
push
dec
mov
gs
dec
cltd
cld
mov
cmp
dec
jne
jmp
stc
stos
inc
movb
cwtl
fcmovnb
pop
xor
jnp
adc
lock
cmp
lock
sbb
fmuls
lcall
mov
lock
es
inc
push
sbb
cmc
subb
stos
xchg
mov
mov
je
and
in
lds
es
out
daa
sub
pop
test
pushf
or
xor
std
outsl
pop
xchg
mov
jne
nop
pop
int3
out
sbb
pop
and
sbb
movsl
repz
xchg
jb
sbb
jb
dec
mov
xor
in
pop
mov
push
inc
sub
fwait
xor
adc
lahf
add
subb
cli
in
xor
test
or
je
pop
ljmp
add
rorl
add
pusha
pop
in
filds
cmp
xchg
mov
cmp
dec
mov
neg
mov
jl
out
or
or
add
and
dec
jae
addr16
dec
or
xchg
push
add
cmp
and
sub
loop
mov
pop
lea
int
aaa
mov
jl
or
and
repz
mov
jge
lcall
inc
mov
jl
and
adc
or
aaa
test
adcl
or
xchg
sub
adc
stos
ds
mov
cmc
adc
mov
les
mov
jne
pop
mov
xor
push
fs
aad
xor
jge
leave
enter
lods
out
pop
stos
addr16
cmc
mov
imul
jl
sbb
inc
fists
xchg
pop
adc
inc
push
mov
test
cmpsb
das
adc
fwait
pop
and
imul
out
andl
outsb
cwtl
popw
aad
push
dec
jp
add
sub
sub
sub
jp
mov
insb
mov
loop
push
stos
jecxz
xchg
outsl
push
hlt
xor
test
add
out
in
call
fdivl
in
lods
adc
imull
cwtl
xor
pushf
cwtl
movsl
data16
sub
scas
daa
xor
mov
sbb
outsl
lret
sub
sub
mov
ficoms
pop
je
cli
pop
pop
xchg
add
loopne
jle
or
fildll
xchg
xor
rcr
aaa
mov
cmp
xchg
dec
add
imul
out
data16
mov
in
pop
rorl
cmpsl
in
xchg
fldl
ret
imul
stc
mov
fldl
dec
xchg
push
lcall
lods
mov
imul
pop
or
sub
in
fstl
push
dec
lock
stos
out
cmpsl
xor
jle
pushf
ret
mov
mov
mov
dec
repz
inc
xchg
push
jb
jl
orb
push
jb
mov
push
arpl
jne
add
ss
icebp
das
pop
pusha
xlat
inc
mov
je
fmuls
add
pop
and
inc
mov
mov
int3
stos
sbb
test
and
inc
test
inc
add
pop
sbb
adc
aas
inc
notb
jecxz
xchg
cmp
cmp
cmp
jnp
sub
sbb
outsb
cld
add
adc
mov
cmpsl
lds
pop
test
pop
addr16
cmp
mov
sub
mov
dec
add
xchg
and
pminsw
sbb
out
or
std
xchg
ret
lea
lret
or
mov
cmpsl
add
dec
ftst
jmp
jo
mov
cltd
push
call
inc
mov
aam
push
or
imul
pop
inc
fnstcw
movsl
arpl
inc
xor
icebp
fs
aas
idivl
sbb
inc
push
js
cmp
test
dec
or
xchg
or
dec
bnd
dec
mov
sub
or
xlat
or
sarl
cmp
jo
test
fdivp
push
adc
mov
stos
clc
push
and
ljmp
cmpsl
jnp
fldl
ficomps
sbb
jbe
sub
dec
dec
into
xchg
push
adc
fisubrl
jne
shrb
jo
add
stos
sbb
ret
imul
je
stos
cmp
sahf
js
lret
jb
call
sub
enter
loope
fcomps
mov
enter
inc
pop
jae
mov
push
iret
xchg
mov
sahf
dec
xor
mov
ljmp
xor
pop
popa
ds
sub
add
mov
xor
cmc
mov
mov
iret
fnstcw
rorl
out
xor
fs
push
arpl
aaa
xor
test
negb
icebp
or
rorb
pop
movsb
xchg
lahf
dec
dec
fcoml
scas
data16
jmp
stos
outsb
cmp
cmpsl
jns
mov
xchg
call
mov
or
popf
xor
xor
dec
or
jge
mov
xchg
insl
incb
ret
mov
add
and
insb
mov
ja
and
and
sub
dec
popf
int3
dec
adc
mov
push
test
adc
cwtl
sub
or
sbb
repz
jecxz
out
jge
push
or
add
inc
ljmp
cmp
mov
jnp
loopne
add
and
xor
stos
or
mov
lods
lds
hlt
aam
mov
xchg
and
cli
enter
cwtl
jo
xchg
std
or
mov
sbb
adc
push
or
sub
push
cmp
and
pop
idivb
test
dec
lea
jmp
push
xchg
addr16
mov
inc
nop
mov
sbbl
push
repz
lcall
xorb
lods
mov
dec
imul
data16
push
xor
mov
and
popa
mov
or
jp
inc
pop
sub
or
cs
add
add
push
lods
test
je
mov
cmpsl
push
xchg
pop
fdivrs
pop
test
int
std
xchg
adc
fs
aad
andl
scas
jo
mov
addb
aam
xchg
mov
lcall
push
movsl
jl
mov
mov
andl
and
and
push
adcl
ret
pop
pop
loope
in
xchg
imul
insb
cmp
dec
xor
hlt
popa
dec
lcall
or
fwait
cmp
sub
mov
or
mov
adc
cmp
sub
out
mov
xchg
inc
mov
jnp
gs
or
xchg
mov
sub
call
outsl
cld
cmpsb
std
lret
push
test
fstpl
mov
shr
mov
rcrb
shrb
movsl
cmp
repz
mov
outsb
jmp
push
xchg
sbb
into
je
mov
mov
mov
arpl
xlat
lret
xor
ljmp
or
or
repnz
mov
xchg
std
test
into
nop
icebp
movlps
adc
dec
dec
dec
div
aam
mov
push
mov
or
push
mov
test
mov
adc
call
push
and
cmp
arpl
sub
adc
aad
loopne
movsl
cmpsb
or
fcompl
aad
sub
xchg
pusha
or
mov
push
jns
pop
lret
push
fiaddl
sbb
dec
dec
cmp
fldt
pop
cmp
xor
insb
je
inc
sub
into
jecxz
adc
mov
es
pusha
or
mov
adc
test
push
adc
insb
ret
jbe
out
into
jmp
jne
stos
and
jecxz
aaa
icebp
aad
ds
das
das
mov
sub
outsl
jbe
mov
mov
jg
mov
mov
iret
mov
add
add
push
loope
ljmp
scas
rcll
pop
xchg
out
jno
push
mov
rcrb
and
add
cld
push
mov
clc
xor
adc
mov
loopne
xlat
mov
cmp
push
jno
stos
popf
mov
add
add
popf
dec
in
and
movsb
mov
test
jnp
loop
sbb
pop
fisubl
int
sub
fdiv
sub
cmp
leave
fwait
xor
push
and
mov
and
sti
mov
push
imul
add
jecxz
sbb
lret
xor
sub
mov
fwait
cli
out
adc
test
xchg
clc
pop
inc
les
andl
inc
mov
dec
dec
pusha
into
sub
mov
jle
mov
adc
sarl
push
fmuls
fcmovb
cmpsb
je
in
jg
xlat
test
adc
dec
mov
cmc
stos
movsb
mov
or
cltd
nop
xchg
push
fs
rorl
aad
mov
iret
cmpsb
pop
lahf
int3
insl
lcall
add
stos
jl
mov
scas
scas
pop
imul
out
mov
dec
repz
aam
sub
test
sbb
std
mov
xchg
faddp
cwtl
adc
xchg
rolb
out
and
inc
lds
cmp
and
push
rorl
xchg
int
fsubl
or
jg
dec
push
icebp
dec
inc
insl
mov
lahf
cmp
cmpsb
in
mov
mov
add
pop
stos
xor
mov
mov
and
out
and
ds
sub
mov
sub
sbb
mov
mov
jae
inc
adc
in
push
repnz
sub
mov
jns
gs
xlat
jb
jge
push
xor
stos
jl
hlt
mov
mov
xchg
mov
xlat
mov
inc
repz
icebp
insb
add
inc
pop
xchg
or
jnp
cli
jno
test
incb
rcrl
cli
mov
icebp
cltd
imul
add
out
lahf
sbb
pop
mov
xlat
dec
pop
out
enter
push
mov
mov
jmp
cli
movsl
out
adc
xchg
adc
lahf
in
and
mov
add
adc
add
fcmovnu
lahf
push
xor
loope
mov
jp
fisttpll
sub
pop
mov
js
call
lret
lods
xchg
sbb
push
adc
addb
add
add
ret
out
cmp
cli
shrb
shll
jecxz
aas
aaa
mov
in
jo
and
mov
xchg
dec
dec
pop
cld
shll
mov
mov
sub
aaa
dec
sbb
add
clc
pop
jle
xor
lods
sub
pop
or
in
stos
jp
int
pop
or
xchg
xchg
loope
pop
jno
mov
outsb
jecxz
sub
add
sbb
xor
sub
stos
and
sbb
sbb
cmp
lds
dec
and
sub
pop
sahf
dec
mov
imul
fstps
leave
push
stc
ds
into
cmp
sub
pop
sahf
dec
mov
imul
fstps
leave
push
stc
ds
into
cmp
sub
pop
sahf
dec
mov
imul
fstps
leave
push
clc
cmp
sub
fimull
lret
sub
pop
sahf
dec
mov
mov
jbe
adc
sbb
inc
adc
mov
mov
cmc
lcall
xorb
and
jb
out
push
icebp
inc
add
xor
popa
shlb
xchg
xor
add
jb
adc
inc
sbb
sub
jns
jno
cwtl
lcall
shll
or
push
std
inc
rcll
xor
mov
pop
lods
push
sub
xchg
mov
jmp
and
and
lea
jno
sbb
add
mov
xchg
pop
rorl
ljmp
cmpb
ljmp
fstpl
jae
mov
add
adc
loop
pop
jo
or
nop
dec
xchg
in
dec
push
ds
popf
push
icebp
iret
push
push
pushf
pop
lods
pop
sarl
repz
imull
addl
in
inc
ret
rcrl
jmp
hlt
into
jnp
xchg
xchg
cmpsl
jns
jle
sbb
faddl
loope
test
movsl
loope
icebp
inc
enter
and
inc
loop
shrb
cwtl
xor
add
jb
sti
push
icebp
sub
je
inc
sti
inc
jmp
sahf
aaa
loop
pushf
jno
adcl
inc
rcll
adc
mov
mov
sub
movsl
and
ret
push
mov
adc
adc
icebp
dec
cli
pop
out
repnz
loop
shlb
xorl
mov
shll
loope
icebp
inc
add
xor
popa
shlb
xorl
mov
shll
loope
icebp
inc
add
inc
lds
pop
scas
xor
push
cmp
push
rcrb
movd
outsl
mov
loopne
lock
fnstenv
jl
xchg
popa
or
xchg
movsl
mov
lods
mov
loope
adc
add
movsl
ja
imul
les
add
jmp
in
xor
dec
mov
dec
pushw
xchg
fistpll
ficompl
add
stos
dec
xchg
mov
xor
cmp
cwtl
adc
adc
jne
aam
cmpsl
cwtl
pop
rep
sbb
js
adc
cmpsb
or
cmpsl
stos
push
lods
cmp
or
add
aam
out
jno
add
leave
or
int
bound
jnp
mov
gs
enter
xchg
xchg
popa
or
idiv
sub
xlat
rcl
jmp
xchg
jae
xor
add
adc
dec
sti
jnp
mov
fcmovu
out
repnz
and
inc
xchg
fsub
js
cmp
mov
pop
ret
push
movsb
repnz
and
dec
negb
adc
inc
clc
aad
dec
into
je
push
cmp
mov
lods
or
dec
clc
or
dec
rcrl
ljmp
outsl
je
cli
popf
push
sti
setno
rcll
and
int
push
scas
cmc
mov
addl
ret
dec
sbb
mov
push
cli
pop
push
inc
aam
out
push
xor
repz
mov
and
and
shll
fldcw
cmp
pop
sub
mov
pop
add
imul
out
orb
mov
sub
mov
jae
push
sarb
cs
lea
jo
mov
fwait
or
int3
inc
or
fs
push
inc
ss
cmp
mov
movsb
repz
lock
out
insb
inc
sub
xchg
inc
cmpsb
sbb
repz
or
out
imul
cmp
iret
xlat
fistl
fdivrl
stos
jb
dec
xchg
mov
shr
xchg
inc
or
mov
mov
in
cmc
movsb
dec
loop
add
int
mov
push
add
mov
sub
mov
inc
cmpsl
cwtl
out
push
jno
add
test
dec
dec
or
mov
inc
inc
mov
lret
fsubr
daa
mov
push
imul
and
adc
inc
enter
in
mov
sti
ds
test
push
mov
rorb
je
mov
call
das
mov
xchg
inc
cltd
xchg
testl
mov
or
pop
xor
insb
push
int3
aas
mov
and
shlb
xor
mov
mov
xchg
hlt
bswap
int
add
hlt
repz
sbb
loop
xchg
mov
mov
lods
repnz
pusha
adc
inc
pop
call
xchg
imul
push
jmp
cmp
cld
test
ror
int
in
movsl
das
inc
xchg
subl
call
fbstp
or
cmp
cmp
pop
mov
cmp
and
dec
or
jg
stc
lahf
sub
inc
and
adcl
lea
push
push
stos
dec
mov
ljmp
xchg
add
lahf
out
mov
push
rclb
test
push
fnstcw
shll
and
xchg
ljmp
dec
movsb
fsts
sub
and
lret
xchg
ljmp
jle
xchg
out
sti
add
orl
in
outsl
adc
iret
popf
xorl
sub
pop
lods
or
xchg
mov
pusha
cwtl
fstpl
push
cmp
mov
xor
push
jl
ds
jno
or
sbb
inc
sub
and
push
dec
xor
out
fbstp
push
fs
push
push
popa
mov
pop
and
mov
xchg
fidivrl
dec
xor
psubsw
lret
sbb
cli
dec
mov
imul
movsl
xlat
cmp
dec
rorl
inc
xor
shlb
sub
inc
fsub
shl
mov
fimull
outsb
out
inc
sahf
cmp
outsl
sbb
jp
mov
xchg
or
lds
xlat
rcrb
daa
or
sub
push
cmpsb
inc
xor
stc
sub
std
iret
xchg
xor
push
dec
loope
imul
inc
in
ja
cmp
jnp
std
mov
mov
jne
int3
mov
fdivrs
sbb
dec
in
int3
pop
stos
xchg
rcr
rcrl
push
ljmp
pop
mov
rorl
or
jl
mov
pop
outsb
outsl
adc
sub
add
jb
es
add
xor
in
or
aas
dec
inc
or
enter
aam
mov
sbb
mov
stos
inc
xor
aas
ljmp
lea
push
xor
je
outsl
nop
leave
mov
flds
loopne
dec
pop
test
push
jp
rclb
xlat
divb
mov
push
xchg
pop
xor
icebp
rcr
repz
jne
lds
shll
and
imul
or
insb
sub
sub
adc
filds
lods
push
cmpsl
adc
js
scas
mov
lock
out
jg
shll
xor
add
test
pop
rclb
cs
jae
lahf
and
sub
and
out
pop
ds
rcrb
xor
and
fs
cmp
flds
cmpsb
xor
test
and
fisubrl
rorl
xchg
push
or
outsb
push
adc
ret
sti
fsubs
push
dec
fsubp
mov
jne
xchg
xchg
lods
jnp
in
jo
cmpl
mov
jle
sub
jp
gs
jns
lock
andb
lods
add
test
inc
mov
ss
dec
push
clc
clc
jbe
cmp
jmp
les
mov
and
ret
sbb
and
jns
push
ja
mov
ja
sti
adc
div
stc
lea
jo
pop
aad
sti
sbb
push
aad
sub
aas
sahf
gs
test
fwait
and
pop
in
in
dec
idiv
repnz
mov
imul
stos
inc
lea
pushf
fstps
and
push
mov
push
ss
push
inc
pop
mov
stc
xchg
bound
jp
clc
sahf
sub
js
push
jne
xchg
popf
mov
das
and
push
repz
daa
loopne
dec
stos
mov
movntps
cwtl
mov
mov
rclb
jne
das
enter
enter
adc
mov
xchg
adc
xchg
fsubl
mov
shrl
xchg
inc
ljmp
cmp
dec
sbb
and
xchg
imul
mov
jno
mov
out
xor
test
stc
pop
aaa
les
and
js
pop
xchg
xchg
loop
mov
lock
inc
xchg
in
jle
mov
mov
adc
jge
jle
xchg
ja
sub
pop
cmp
inc
std
add
jle
mov
lahf
mov
xor
mov
lahf
clc
xchg
lahf
es
negl
and
sub
sub
mov
adc
nop
xchg
xlat
mov
push
xchg
arpl
cmp
imul
decb
jp
scas
or
lods
test
es
xor
or
pop
mov
sbb
mov
imul
repz
or
push
push
leave
xor
test
add
or
cmp
cmpsb
xlat
fisubl
movzwl
imul
inc
inc
je
addl
inc
and
notb
cld
xchg
mov
test
cwtl
sbb
cmp
xchg
hlt
mov
call
lret
pop
out
ljmp
mov
push
jecxz
and
pop
fs
and
dec
mov
test
fs
into
mov
xchg
les
lea
outsl
jle
ja
lea
mov
je
lahf
push
lods
pop
xchg
jmp
add
mov
xor
in
xor
cmp
push
sub
scas
and
add
xchg
sbb
ret
pop
pop
jnp
bound
inc
dec
aam
and
push
mov
mov
das
pushf
lock
stos
sub
sbb
mov
jmp
push
and
jae
xchg
es
jp
fisubl
xor
outsb
push
add
ret
adc
int
fdivl
mov
mov
xor
mov
jb
inc
sbb
pop
fwait
cli
pusha
push
dec
inc
jbe
jnp
mov
mov
jns
lds
sbb
clc
mov
xchg
push
cmp
push
xor
push
cmp
lea
inc
inc
out
ja
mov
add
fwait
outsb
fstpt
jo
sbb
adc
inc
jns
mov
adc
gs
cmpsb
test
ljmp
cmpsl
dec
adc
dec
imul
jnp
xchg
sub
out
sub
xlat
cwtl
pop
pop
push
xchg
ret
je
dec
inc
jns
fstps
xor
int
sbb
call
inc
pop
sub
sub
mov
mov
mov
lods
add
into
cmc
hlt
push
fistps
lods
mov
icebp
mov
imul
xchg
mov
xlat
adc
mov
mov
adc
mov
pop
inc
arpl
xor
daa
leave
mov
cli
pusha
jo
lods
icebp
dec
cmp
std
jae
dec
jmp
mov
sbb
movsb
ret
lahf
xor
add
shrl
fs
or
jg
into
filds
incl
sub
pusha
push
je
add
mov
daa
ret
jb
cli
jmp
sub
sub
subb
pop
out
cmc
movb
in
iret
push
and
ljmp
push
or
call
js
call
inc
ljmp
mov
fwait
mov
cmp
jl
sbb
mov
ss
mov
insl
mov
jns
roll
incb
je
imul
lds
push
lret
or
mov
rclb
and
sbb
stc
cmpsl
movsl
jle
loope
fwait
adc
cmp
sbb
dec
push
inc
add
add
lcall
xorb
xlat
jo
hlt
call
inc
fucompp
cmp
arpl
mov
add
sub
mov
adc
pop
sbb
add
lcall
test
clc
push
mov
cld
dec
pop
jmp
xor
sbb
dec
sarb
or
push
insb
cltd
int
pop
adc
pop
pop
add
je
mov
xlat
cwtl
push
xorl
mov
and
push
loopne
sub
mov
pop
xor
leave
fisubs
es
in
mov
lods
jno
fdivrl
fsubl
enter
mov
mov
outsl
test
xchg
mov
xchg
icebp
xchg
sbb
stc
iret
js
mov
negl
xchg
jg
ja
cmp
jle
jp
sub
jns
sbb
xlat
lods
xchg
sbb
xchg
xchg
push
push
dec
faddp
fldcw
and
xlat
in
push
lret
mov
cmp
xchg
push
pop
and
jg
idivl
shll
and
push
sub
arpl
loope
add
cmp
fwait
test
push
addr16
pop
int3
rcll
ret
cmp
xor
mov
pop
das
or
lret
jp
or
fwait
push
push
imul
insb
sub
in
cmp
pushf
ja,pn
dec
imul
or
daa
jp
imulb
test
sbb
outsb
mov
into
xor
aam
xor
imul
sarb
fisubrl
cmpsl
mov
cmpsb
xchg
cmp
jle
cmp
sbb
lret
mov
inc
out
sub
ljmp
cwtl
gs
sbb
movl
fbld
out
daa
jno
push
xchg
adc
repz
mov
xor
mov
jecxz
out
jecxz
das
dec
shll
dec
mov
or
xor
repnz
nop
sbb
mov
mov
push
sub
data16
jo
add
sub
hlt
add
or
jecxz
jo
jmp
push
pushf
jo
jo
xchg
push
pop
fiadds
roll
jo
jecxz
xlat
add
shlb
xor
or
jl
dec
push
inc
jbe
push
negb
xor
lea
test
fs
fistps
push
popa
pushf
pushw
mov
aas
ret
scas
sbb
repnz
xchg
fstl
lods
gs
inc
mov
test
mov
lods
lcall
cs
scas
push
das
pop
mov
push
xchg
insl
dec
xchg
popa
push
cmc
imul
daa
mov
add
jmp
mov
pop
cld
inc
jl
xor
imul
jbe
mull
dec
sbb
and
stc
jne
mov
inc
in
mov
mov
push
das
sbb
pop
imul
xchg
scas
mov
jge
out
mov
fldl
popa
lods
loopne
insb
push
repnz
aad
sbb
cmpsl
mov
enter
xor
xchg
movsb
in
aas
cmp
ds
outsb
mov
mov
cs
arpl
push
cld
push
pop
cmp
ror
cwtl
push
fwait
adc
push
sub
or
jl
add
and
mulb
iret
test
fdivrp
orb
adc
pusha
aam
pop
lret
and
jg
mov
movsl
or
xor
sub
dec
add
push
dec
paddb
test
dec
sub
mov
aad
loope
in
rorl
mov
out
sub
xchg
xchg
je
in
in
sbb
sahf
stos
popa
jae
sub
popf
cmp
dec
or
pop
das
add
mov
dec
outsl
in
xor
sbb
into
sahf
jno
popf
mov
lahf
lret
mov
mov
fwait
dec
pusha
sub
jae
sbb
je
or
popf
out
lock
sar
call
sbb
adc
lretw
std
into
mov
push
pop
sbb
gs
adc
cmpsl
movl
cmpsl
incl
pcmpeqw
incl
popf
jp
mov
fildll
cmpsb
dec
mov
aam
dec
pushf
push
dec
mov
popf
in
sub
and
test
xchg
adc
jo
mov
push
push
add
out
outsl
rcrb
xor
pop
dec
pop
pop
lret
sub
rorb
in
jbe
xchg
int3
repz
sub
add
bound
inc
xchg
push
loop
test
aad
or
pushl
mov
ljmpw
dec
xor
push
int
cld
in
add
lds
jp
in
mov
arpl
cmp
into
mov
mov
and
ret
sahf
jnp
insb
dec
mull
jne
jg
pop
insl
mov
pop
pop
scas
xchg
mov
and
sbb
mov
xchg
cmp
and
jno
inc
enter
and
push
push
jae
cmp
sub
jbe
cmc
loopne
outsl
cmp
lret
pop
popa
cmp
or
lret
pop
test
dec
jnp
lahf
hlt
jns
das
xor
mov
inc
lcall
rcrl
sbb
sub
dec
fistps
lea
rcll
lock
mov
push
pop
jno
aaa
leave
daa
in
aaa
xor
in
popa
dec
scas
sbb
dec
cli
jecxz
hlt
cmp
xor
mov
out
or
mov
lock
scas
idivl
cmpsb
pusha
rcll
sbb
mov
test
inc
ret
iret
xor
sub
std
cltd
dec
daa
test
mov
or
lahf
push
pop
cwtl
pop
inc
pop
and
int
fs
or
xlat
push
xorl
es
repz
icebp
pop
sub
cmp
subb
cli
adc
push
pop
sbb
fildl
pusha
das
and
rorb
dec
inc
cmp
pop
adc
push
insb
sti
add
pop
push
add
leave
mov
fisubs
inc
fdivs
test
add
aam
int
int3
gs
xchg
and
fwait
stos
mov
es
imul
sahf
adc
lcall
cmpsl
cli
cmp
cs
mov
pop
std
std
add
test
lock
ja
mov
and
adc
testl
sti
pop
mov
lock
jns
xchg
fs
aam
pop
cmp
mov
lods
sbb
jg
pop
add
mov
xor
cmp
cmc
call
xchg
adc
in
in
and
ss
jl
add
shll
cmp
pop
enter
xor
cmc
ficomps
cmpsb
outsb
adc
imul
or
test
or
js
in
adc
cmp
vmread
lret
call
mov
push
mov
cltd
roll
adc
mov
jb
dec
popf
shl
xor
popa
mov
in
std
scas
push
mov
add
dec
lds
movsb
inc
add
push
add
fdivrl
xchg
cmpsl
outsl
mov
and
or
xor
xor
xor
cmp
subb
fsubr
repz
pop
daa
xchg
jp
out
and
inc
xchg
lea
test
xchg
inc
lret
push
pusha
lret
rcr
sub
xchg
xorl
lods
stos
mov
add
stos
outsb
dec
sbb
mov
mov
lcall
jne
sbb
ljmp
loope
xor
or
repz
add
into
sub
jle
push
adc
mov
shlb
int
jge
push
das
lret
or
in
popa
pushf
mov
xchg
push
inc
outsl
sbb
jge
mov
fsubrs
mov
inc
adc
jg
xchg
outsl
sbb
out
cld
jae
pop
icebp
mov
cmp
add
imul
and
mov
adc
adc
push
lret
lret
sti
icebp
icebp
js
fidivrl
mov
cli
rcll
sub
push
cli
pop
loope
push
cltd
in
pop
lock
mov
xor
movsl
ja
lret
and
adc
je
std
pop
jb
mov
mov
adc
bound
call
or
cmp
lock
repnz
lds
add
xor
push
xor
push
adc
into
insl
jne
mov
jecxz
dec
pusha
das
lahf
mov
lock
inc
xchg
jnp
andl
pushl
add
fdivrs
pop
fdivrl
mov
call
xor
iret
jbe
rorb
xlat
cmc
fcomps
stc
or
std
pop
inc
cld
fmul
in
jmp
and
mov
mov
sahf
ds
fcmovnb
push
mov
fwait
out
sbb
es
xchg
fbld
jns
adc
sub
cmpsl
or
cmp
rolb
lcall
xchg
jno
push
lds
mov
stos
out
push
xchg
dec
ljmp
and
nop
push
js
dec
mov
push
fs
testl
imul
inc
repnz
in
dec
push
dec
insb
adc
popl
movsb
ds
in
xlat
cld
cmp
push
push
icebp
push
imul
jno
push
fnsave
scas
xor
or
xor
xorb
mov
add
mov
xlat
out
mov
in
push
insb
pushf
insb
pop
aas
jno
jg
mov
rolb
add
repz
movb
inc
adc
xchg
aas
jae
push
pop
out
fists
imull
xchg
shll
cmp
xchg
dec
jae
inc
adc
nop
inc
sbb
inc
mov
cwtl
mov
lea
sbb
aas
sub
jae
jmp
sbb
scas
mov
xor
imul
rol
shlb
adc
add
or
or
ret
outsl
fisubl
fmuls
xchg
lock
shll
aas
mov
sahf
inc
xor
popa
hlt
mov
push
push
or
ret
inc
push
sbb
mov
mov
xor
sub
dec
mov
gs
dec
jne
into
mov
loope
enter
push
mov
adc
stos
add
push
lea
cmp
sub
xor
loope
pop
pop
loope
ret
hlt
pop
adc
xchg
cs
pop
mov
in
push
mov
fldl
and
sub
mov
or
or
adcb
cmp
push
pop
cmp
dec
js
sbb
icebp
test
scas
lcall
mov
push
adc
test
xchg
xchg
loopne
lahf
sar
mov
mov
outsl
jno
outsl
mov
push
aaa
pop
inc
xor
dec
jmp
in
repnz
or
adc
lods
dec
and
push
mov
inc
repnz
loop
shlb
xorl
mov
shll
loope
icebp
inc
add
xor
popa
shlb
xorl
mov
shll
loope
icebp
inc
add
xor
popa
shlb
xorl
shlb
push
repz
add
xor
loope
icebp
ret
outsb
mov
adc
popf
push
lods
push
mov
in
xor
faddl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
pop
xchg
push
pop
cmc
aaa
dec
adc
xchg
clc
xchg
mov
cmpsl
enter
stos
negl
pop
push
push
cmp
ja
addr16
clc
xchg
ret
fsubs
test
fsub
mov
ljmp
push
add
adc
mulb
xchg
daa
xchg
mov
in
mov
inc
sub
inc
mov
push
sti
pop
push
jg
hlt
mov
and
pushf
repz
hlt
jge
ret
aam
pop
xchg
dec
popa
fsubrs
mov
sbb
incl
or
adc
mov
in
insl
dec
push
int
ja
dec
test
pop
daa
cwtl
push
mov
cmpsb
lock
cmp
mov
maskmovq
notl
in
xorl
jo
fucomi
insl
jae
pop
or
int
sbb
insl
jbe
data16
pop
cs
test
call
dec
jb
jg
stos
mov
hlt
xbegin
loop
jmp
push
negl
pop
cwtl
aaa
fsubl
inc
push
cmp
ja
mov
cs
cmpsl
adc
push
negl
outsb
push
cmp
adc
insl
mov
lret
mov
mov
mov
adc
jne
cmp
adc
sbb
addr16
test
mov
xchg
in
stc
out
jle
arpl
pop
or
sub
inc
sub
or
call
xlat
mov
out
pop
js
push
push
cmp
ja
or
call
xlat
mov
out
pop
js
mov
lea
jae
jno
sbb
insb
mov
add
inc
dec
rorb
or
or
std
mov
adc
push
push
dec
xchg
mov
mov
test
jbe
mov
rclb
fmulp
mov
xlat
iret
adc
inc
pushf
xor
dec
cmp
pusha
xchg
xchg
adc
xor
push
sbbl
dec
mov
pop
test
dec
xchg
sub
dec
ret
movsb
test
sti
stos
dec
sbb
orb
fidivl
and
add
push
jecxz
and
imul
xchg
insb
sub
clc
xchg
pushf
rorb
orb
or
test
mov
lcall
cmpsl
sahf
fisttpll
inc
out
cmp
mov
jp
fldl
inc
push
sub
dec
fnstcw
add
cs
xor
mov
cmp
and
adc
aaa
neg
loop
ret
xchg
jne
test
or
sub
insb
jge
nop
mov
sub
pop
loop
jnp
pop
xchg
sbb
xchg
mov
popa
les
push
lock
xlat
pop
jp
mov
lret
sti
pusha
scas
xor
xchg
imulb
mov
sbb
inc
adc
inc
push
sbb
aaa
xchg
and
in
dec
js
fcomps
stos
or
xchg
add
lahf
inc
cs
sbb
ja
mov
ret
and
mov
out
in
pushf
pop
mov
dec
aam
sbb
dec
jae
into
cmc
sub
cmp
aaa
js
and
shlb
xchg
pusha
adc
sbb
mov
aas
pop
ror
movsl
imul
xor
xchg
inc
loope
xor
outsb
bound
jle
fcompl
jnp
mov
mov
push
sbb
and
loop
aam
xor
inc
mov
push
mov
xchg
jae
orb
call
dec
lods
mov
scas
xchg
aaa
into
dec
frstor
stc
jo
push
sub
mov
addr16
icebp
ficomps
aam
or
pop
or
movsb
inc
sub
cmpsl
test
jl
testl
push
rolb
rcrb
mov
scas
ret
hlt
or
scas
pop
decl
inc
sub
mov
rcrl
lret
call
aad
xchg
push
leave
push
sub
add
repz
inc
add
or
loopne
out
mov
mov
sti
jns
lds
repnz
loope
ss
test
into
es
mov
psubusw
aas
adc
mov
sbb
mov
stos
mov
fistpl
dec
jbe,pt
push
das
and
out
add
xchg
aad
scas
iret
inc
push
ret
rclb
arpl
cmpsw
leave
push
fistpl
pop
out
in
stos
mov
push
lods
imul
jns
push
nop
shl
push
stos
stc
jge
inc
and
push
fs
fsts
push
in
movsw
mov
ds
jge
icebp
mov
lcall
dec
adcb
mov
dec
sbb
pop
mov
sub
fildl
add
mov
inc
jno
pop
add
lcall
in
ljmp
mov
sub
cli
idivb
in
insl
and
mov
in
pop
cmc
leave
es
pushf
scas
stc
scas
int
cltd
jbe
push
ficoms
pop
pop
fisttpl
mov
push
movl
fs
cmp
mov
pop
and
adc
inc
mov
pop
pusha
pop
cmp
aas
rcl
addr16
scas
in
push
addr16
icebp
and
inc
pusha
dec
movsl
adc
jle
push
push
inc
xchg
enter
add
sub
sub
lea
sbb
jns
std
mov
push
lods
call
inc
jno
pop
sbb
stc
aas
pop
inc
in
cmp
mov
stc
fsubp
and
call
rdtsc
add
in
adc
in
pop
mov
xchg
insb
mov
in
xchg
sbb
repnz
scas
or
push
cmp
dec
adc
loope
cwtl
mov
adc
mov
movsb
mov
push
inc
lods
cmp
cmp
orl
fstps
jb
stos
pop
cld
aam
dec
jp
fldenv
cmp
and
mov
int3
call
push
mov
pop
fsubrl
adc
cmc
adc
out
nop
pop
or
or
cmpsb
mov
add
xor
mov
cmp
das
repz
adc
push
xchg
dec
add
inc
clc
jecxz
outsb
fs
adc
sub
xor
push
cwtl
xchg
adc
jne
das
jl
push
mov
scas
outsb
jp
mov
adc
sbb
jb
cs
cmp
sub
sti
mov
adc
or
mov
xchg
and
jno
pop
sbb
loope
idivl
aam
pop
in
stos
sbb
test
inc
fcoms
or
ret
fisttps
add
cld
ds
addl
xchg
repz
cmp
dec
mov
pusha
std
ja
mov
push
mov
mov
fisubrs
jae
ret
loop
test
popf
loop
fcmovnb
nop
push
out
pop
fsubrl
fcomps
inc
sub
jecxz
xor
xor
xchg
mov
xor
mov
cmp
cmc
pop
xchg
mov
imul
inc
cmpsl
out
mov
inc
out
insb
xchg
into
add
repz
shlb
jmp
cmc
mov
mov
adc
daa
push
inc
push
push
sahf
lcall
out
dec
mov
xchg
mov
mov
and
fdivrs
imul
fists
mov
into
pop
movsb
lret
dec
jge
mov
xor
jp
pop
push
fwait
or
sub
mulb
mull
inc
xchg
or
dec
scas
sbb
sub
jmp
cwtl
or
test
out
je
fcompl
cmp
outsb
je
aas
xor
cwtl
ds
and
lds
jb
or
fbstp
les
jbe
movsb
adc
pop
jg
out
xlat
sbb
cmp
jns
fidivrs
popa
inc
notb
and
clc
jle
push
in
data16
fxch
out
push
jecxz
xchg
lods
xchg
xor
mov
fsts
lods
fsubl
andb
mov
xchg
sbb
test
mov
stc
stc
xchg
popa
sbb
jbe
int3
push
bound
scas
es
inc
and
ss
cltd
adc
cmpsb
hlt
mov
scas
test
mov
add
inc
sahf
mov
faddl
jle
inc
imul
cmpsl
mov
jle
cmp
addr16
cld
lret
inc
ret
xor
cltd
js
inc
mov
call
push
mov
scas
push
lock
test
stos
lret
inc
add
pop
sbb
lods
push
mov
enter
inc
cwtl
stos
addr16
fildl
fistpl
in
dec
push
lods
mov
cmp
xchg
push
sbbl
xor
mov
fidivrs
adc
lock
mov
cmp
lret
cmpb
dec
pop
sub
pop
mov
shr
jp
pusha
sub
cmp
data16
nop
cmp
in
imul
pop
cld
mov
inc
dec
adc
arpl
sub
xchg
insb
movsb
inc
insb
pushf
adc
jg
xchg
or
fisubrl
cltd
sub
add
ja
xor
mov
dec
out
je
mov
lea
xor
mov
daa
and
lret
add
es
mov
push
icebp
and
sbbl
fidivrl
pop
subb
mov
mov
cmp
stos
sub
inc
xlat
pusha
subl
ja
leave
stos
jne
rol
test
ret
in
in
sub
and
mov
jg
sub
pop
sbb
clc
mov
lret
cs
jae
or
loope
mov
repz
sbb
lahf
fldl
cmp
add
cmpsb
jno
ror
pop
daa
sub
mov
sti
mov
adcl
scas
mov
cltd
imul
jo
ret
lret
dec
movsb
xchg
mov
xchg
inc
test
xlat
mov
pop
adc
mov
jo
sbb
into
inc
cs
sbb
push
cltd
or
insl
jmp
jp
mov
gs
cs
std
dec
ljmp
js
ja
call
aam
mov
mov
mov
and
subb
mov
mulb
ja
sub
xor
adc
stos
loop
inc
mov
or
arpl
push
imul
ljmp
push
shll
mov
mov
add
sub
ficoml
mov
push
ficoms
idivb
jbe
mov
adc
repnz
test
ja
or
add
fwait
call
cwtl
test
out
cmp
mov
add
add
push
jb
push
pop
pop
dec
sahf
jp
shlb
pop
das
sti
leave
dec
andb
xchg
iret
repz
push
pushf
pop
and
add
dec
or
xor
pop
repz
jns
fst
sub
sbb
inc
adc
stos
pop
iret
jb
fstpl
out
jb
push
inc
hlt
stos
add
sti
rorl
push
in
repz
pop
mov
sub
and
xchg
or
fwait
mov
sti
sub
stos
or
xlat
xor
clc
iret
add
arpl
adc
cwtl
das
enter
xchg
imul
sbb
cmpsb
pop
dec
fistpl
ljmp
dec
in
xor
jle
adc
iret
je
lret
mov
pop
mov
out
mov
popa
xchg
divl
mov
sbb
in
je
push
pop
push
pop
or
sub
mov
xchg
outsl
enter
bound
xorl
xor
cld
inc
outsb
jp
mov
push
fiadds
addl
enter
inc
push
imul
call
pop
mov
fnsave
into
std
ret
xchg
mov
inc
pop
in
ret
scas
cmp
insl
fidivrs
aam
das
repnz
sbb
fstpt
pop
stos
inc
mov
push
movsb
push
int3
iret
test
sbb
stos
rcrl
push
xchg
sbb
mov
and
int3
fstp
and
or
or
and
mov
scas
movsb
dec
xchg
and
insl
movsl
add
adc
inc
add
and
sbb
in
icebp
aas
dec
hlt
sub
ret
push
sbb
push
adc
cwtl
mov
gs
xchg
rcrb
outsl
mov
aad
test
fucomip
call
repnz
jg
jne
dec
or
hlt
mov
pop
dec
lds
mov
shll
cmp
jns
mov
lods
jns
xchg
decl
insb
adc
pop
jp
pushf
dec
daa
bound
push
adc
xchg
leave
sbbb
lods
cmp
js
pop
fdivl
dec
movsb
arpl
leave
das
or
in
push
sbb
pmaxsw
pop
mov
pushf
jne
jmp
xchg
add
mov
pusha
mov
cld
imul
sub
shl
test
aam
xlat
test
dec
loopne
test
lret
mov
mov
jecxz
sbb
clc
lds
adc
int3
mov
xchg
push
cmp
xor
mov
mov
pop
xchg
mov
call
xor
movsl
dec
test
xchg
sbb
mov
add
test
rcrb
xor
leave
fsubrl
gs
stc
aad
xor
enter
cmpsb
shlb
repnz
mov
lahf
jne
pop
inc
jne
dec
cmp
cli
pop
addl
int3
xor
add
pop
outsb
and
stos
and
bnd
testb
testl
iret
mov
jge
pop
xchg
loope
xchg
ret
sti
adc
cmp
js
fs
lcall
scas
xchg
cmp
in
pop
or
mov
mov
mov
insl
in
in
loop
mov
fdivl
jmp
ret
inc
lret
insl
fldt
aam
paddd
fcoms
cmpsb
rol
jns
adc
mov
xor
gs
cmp
shrl
adc
or
dec
sub
mov
loope
lret
sub
and
inc
cld
push
cmc
push
xlat
and
jecxz
insl
repnz
ja
mov
imul
pop
cmp
aad
lcall
cmc
adc
imul
int3
int
hlt
mov
nop
cmpl
add
push
dec
and
dec
sbb
imul
outsb
dec
jb
xorl
mov
outsl
es
xor
mov
fmuls
in
push
popf
lret
fadd
das
cwtl
repnz
lret
inc
insl
addr16
dec
aas
push
jecxz
dec
int3
mov
sub
jnp
and
sub
sbb
in
popf
and
mov
xchg
bound
adc
mov
mov
or
rolb
sbbl
push
daa
sbb
adcb
outsb
pop
sbbb
stc
add
and
mov
aad
jmp
sub
sbb
cltd
jge
test
cmp
in
fsubrl
push
push
lods
pusha
sbb
sub
mov
fidivl
and
lret
mov
clc
sbb
sub
mov
sub
add
cmp
int
and
out
ljmp
push
adc
add
inc
imul
in
leave
lods
mov
sbb
repnz
aad
pop
adc
xchg
cmp
pop
push
insl
shlb
mov
stos
fwait
dec
jnp
xchg
push
out
cmp
xor
gs
xlat
negl
mov
andl
sti
movsl
je
pop
dec
xchg
or
lods
mov
cmp
and
adcb
jg
push
out
mov
stos
and
cld
xchg
stos
pop
xor
dec
rorl
aad
sub
outsl
cmc
push
sarb
cmp
xor
shrb
xchg
sahf
add
dec
sbbb
mov
fimuls
pop
jg
push
fcoml
scas
arpl
pop
mov
sbb
jb
pop
cmp
dec
add
mov
push
test
or
inc
out
pusha
mov
or
test
jmp
out
in
adc
jbe
test
das
lods
outsl
jae
repnz
in
adcl
inc
dec
cmpsl
scas
mov
sbb
gs
fisubs
bsf
pop
add
movsl
xchg
cwtl
sbb
and
mov
mov
mov
leave
mov
out
jmp
pop
mov
cmp
je
rcl
stc
sub
pop
mov
xor
cmp
nop
pusha
jno
push
addr16
fdivrl
sahf
sbb
xor
mov
sahf
dec
insb
cmp
repnz
and
dec
les
repnz
xor
movsl
dec
xor
xor
sub
push
jl
or
adc
lods
cmp
pushf
jle
sub
cmc
mov
mov
je
xchg
roll
orl
aas
aad
adcb
or
push
rcrl
xchg
notl
cmp
faddl
insb
sub
cltd
xor
scas
xchg
into
pop
dec
xor
and
sub
aad
movsl
push
inc
and
cmpsb
orl
dec
sbb
xchg
lock
xchg
add
inc
mov
outsb
lret
jmp
ljmp
outsl
daa
out
aad
lahf
fisubrl
rolb
ljmp
sub
loop
dec
add
push
sbb
loope
ror
out
jmp
cmpsl
sarl
out
dec
lock
in
test
mov
je
add
add
jne
cmp
push
lea
fldenv
mov
test
fwait
insb
cs
bound
xor
divb
cltd
sbb
mov
lahf
pop
push
leave
mov
sbb
out
jae
popa
pop
adc
packuswb
and
ret
mov
rclb
scas
out
pop
xchg
fs
and
fwait
addl
mov
mov
cs
loop
xor
inc
and
icebp
cs
push
or
jno
push
pop
lds
mov
lret
jbe
dec
in
pop
xchg
cmpsb
xchg
mov
fists
lret
ss
or
mov
movsl
flds
sub
mov
test
pop
cld
jge
fsubl
test
inc
ret
jle
dec
aas
push
pop
js
mov
inc
xor
sub
jg
inc
inc
cltd
mov
test
pusha
dec
in
or
cmp
dec
ret
ja
lcall
sub
fcompl
jbe
add
imul
sbb
insb
out
xlat
je
jae
addb
les
pop
push
dec
mov
inc
pop
cmp
pushf
inc
mov
jbe
xchg
push
hlt
cs
sub
or
daa
mov
shl
in
mov
fadds
leave
ficoml
mov
push
stc
mov
cmpsl
aaa
dec
cli
xchg
shll
pop
inc
popa
data16
stos
pop
or
push
mov
imul
cmp
dec
pop
push
dec
rclb
sub
ficomps
int
jmp
cmpsb
mov
cmpsb
movsl
push
arpl
dec
push
and
scas
mov
mov
add
je
stos
sti
adc
nop
inc
cmpsl
daa
pop
or
add
inc
hlt
fwait
cwtl
or
data16
stc
sbb
lock
add
stos
cwtl
ss
xor
mov
jge
and
adc
mov
arpl
add
dec
and
shlb
lds
rep
mov
push
inc
jmp
inc
les
iret
lea
inc
dec
inc
ja
cwtl
mov
scas
and
fnstenv
stos
jmp
ss
scas
lock
inc
fs
mov
adc
or
inc
int3
pushf
and
cld
xchg
dec
sub
fidivrs
in
je
push
mov
cld
bnd
sar
inc
ja
nop
in
sarl
lret
push
pop
nop
inc
dec
or
ljmp
inc
repz
daa
lcall
in
jnp
inc
mov
cmpsl
fdivl
and
fnstcw
inc
push
or
jmp
sbb
jo
test
xchg
mov
mov
repz
push
mov
test
push
sbb
xchg
inc
shrb
sarb
cmpsl
dec
mov
xor
jbe
mov
or
or
js
andb
sarl
out
mov
mov
sub
mov
test
in
push
sub
jne
insb
push
push
out
loopne
lds
aam
cltd
push
out
mov
jo
mov
mov
sub
mov
add
dec
mov
pushf
jo
test
mov
xor
xchg
ret
pop
xlat
xchg
arpl
jge,pt
cmpsb
mov
adc
sub
and
out
mov
lock
flds
sbb
movsb
push
sbb
jle
dec
xor
pop
jmp
and
rcll
xchg
jge
out
hlt
lcallw
dec
jno
leave
rep
sub
pop
inc
push
test
jp
xor
mov
mov
scas
orb
popa
arpl
push
imull
pushf
xchg
jo
lahf
leave
insl
into
push
xor
mov
sub
es
lret
or
push
popaw
das
jle
and
cmp
repnz
jge
movb
stos
mov
shlb
push
jle
in
cmp
xchg
imul
xor
imul
popa
fimull
movsl
fisubl
loopne
sbb
dec
cmc
xchg
or
shrl
inc
pusha
mov
xor
add
rorl
call
mov
fldl
mov
repz
jge
xor
cli
mov
stc
je
es
dec
adc
sbb
jmp
inc
arpl
movsb
add
test
dec
mov
jmp
mov
leave
cld
jecxz
mov
add
jmp
xchg
into
idiv
stos
add
and
cmp
jl
enter
sub
aas
mov
xchg
insl
mov
aad
adc
dec
stos
push
dec
lock
mov
mov
mov
fs
xchg
jae
sbb
add
xor
push
push
pop
jne
jbe
lret
pushf
sub
aas
fidivl
xchg
pop
hlt
and
addr16
push
repnz
pop
pop
and
adc
loope
xor
xchg
int
sti
les
sub
xchg
adcl
dec
daa
jns
rolb
xor
pop
lock
jmp
sub
fisubl
sub
add
dec
cmpsb
jmp
push
cli
imul
pusha
dec
test
mov
lcall
inc
push
repnz
gs
add
push
push
cmp
ja
or
call
xlat
mov
out
pop
js
push
push
cmp
ja
or
call
xlat
mov
out
pop
js
and
and
dec
push
cmp
ja
or
call
xlat
mov
out
pop
js
push
push
cmp
ja
or
inc
sbb
xor
or
ja
adc
and
sub
pop
push
popa
ret
das
orl
rol
shl
jecxz
sbb
add
xor
and
push
push
inc
inc
jae
arpl
xchg
addl
mov
shl
jecxz
leave
adc
and
or
jno
popa
xchg
xchg
out
mov
repz
lahf
popf
test
jno
bound
jmp
scas
ja
pusha
mov
ljmp
mov
shlb
or
lods
add
int3
pop
stc
out
pop
cmpl
push
rcll
dec
outsb
mov
add
shll
mov
popl
stos
pop
mov
dec
mov
pop
sub
dec
std
add
push
pushf
jnp
dec
and
ja
push
mov
addl
rol
out
sbb
xchg
sar
dec
into
jecxz
lods
fcmovb
scas
aaa
and
popa
push
outsb
rcll
add
mov
dec
add
int3
popl
lret
lcall
les
xchg
mov
repz
and
add
xor
dec
and
pop
inc
jae
xchg
adc
mov
ffree
repz
xchg
ja
dec
pusha
cmp
adc
adc
jecxz
ret
movsl
lods
xchg
jge
insl
je
call
add
adc
hlt
ret
iret
repz
xchg
mov
push
inc
push
bound
arpl
jae
arpl
xchg
addl
rol
shl
jecxz
adc
add
xor
and
push
push
inc
inc
jae
arpl
xchg
addl
rol
shl
jecxz
adc
sub
movsb
and
mov
sbb
push
nop
sbb
sti
stc
pop
sbb
clc
mov
mov
mov
nop
fildll
popa
push
mov
pop
lods
cltd
scas
lcall
adc
mov
out
in
xor
push
sub
pop
add
bound
cmpsl
sub
popf
ja
cmc
mov
ja
pop
jne
cmp
inc
xchg
icebp
inc
mov
repnz
test
aad
lods
shll
outsb
getsec
inc
mov
call
jmp
divb
mov
inc
in
inc
ficoms
ss
je
mov
data16
lea
std
cmpxchg
mov
sbb
mov
rclb
loopne
or
mov
pop
xchg
test
aad
mov
scas
push
mov
sarl
ficoms
cmpsl
ret
loopne
and
daa
adc
xchg
mov
ret
mov
sub
mov
or
and
std
nop
xchg
enter
push
pusha
in
gs
xchg
inc
sub
sbb
xchg
loop
test
jae
xor
push
mov
insl
mov
xor
popf
push
mov
or
push
shlb
nop
push
rolb
sahf
or
loope
faddp
fcom
inc
pop
jno
jp
mov
mov
adc
cli
lcall
xchg
into
out
orb
mov
adc
lods
mov
cmp
sahf
or
jg
inc
fisubrs
sbbl
sahf
xchg
loope
add
pushf
push
sub
mov
sub
cltd
mov
pusha
addr16
jmp
stos
dec
pop
mov
pop
lret
mov
jae
repz
pusha
or
sub
inc
xor
sbb
cmp
fstl
inc
xchg
push
jmp
mov
in
dec
sub
jge
je
sbb
jle
push
xchg
pop
adc
gs
lret
inc
lret
cmp
cli
dec
pop
aam
pop
inc
rorl
lahf
fldenv
add
pushf
xor
in
xchg
lds
or
call
or
xor
sub
aaa
push
rclb
ja
mov
push
jmp
std
adc
fwait
ret
dec
inc
or
stc
test
mov
push
ljmp
repz
stc
cmpsl
fcom
push
mov
add
orl
mov
sbb
mov
or
lret
adc
fstpt
push
insl
popa
cli
int
push
inc
sub
fs
and
sub
mul
loop
ficompl
xchg
test
aaa
into
je
imul
bnd
iret
shll
sbb
jb
shr
xor
cmp
mov
lret
test
test
notb
mov
dec
sahf
sbb
lock
jno
mov
xchg
int
lea
mov
test
cmpsl
push
lds
orb
outsl
lret
or
mov
lock
rcrl
inc
or
add
sub
das
mov
movsl
xchg
in
mov
mov
hlt
cld
sbb
shlb
pop
inc
insl
in
inc
imul
idivb
int3
clc
xchg
mov
mov
inc
lret
sub
cmc
cmp
mov
insl
pop
cmp
imul
mov
push
lahf
loopne
loopne
out
push
and
add
das
xchg
jle
sahf
mov
pop
lods
xchg
not
xchg
mov
dec
jle
xchg
test
xchg
fidivrl
aad
mov
or
loope
nop
fsubrl
nop
mov
mov
cmpsb
rcll
mov
fisttps
call
fwait
mov
mov
in
filds
inc
push
sub
adc
mov
push
xchg
test
adc
push
xor
push
push
movsl
or
fidivl
cmpsl
stos
push
mov
pop
scas
ret
xchg
inc
adc
stos
push
dec
jg
cmp
dec
lods
test
popf
es
inc
mov
inc
jno
pop
in
fwait
and
cwtl
call
or
adc
sbb
addb
test
in
adc
push
push
sbb
mov
ret
sbb
fsub
sarb
and
into
pushf
and
pop
mov
mov
inc
sbbb
cmp
fldl
sbb
pop
leave
mov
xor
sub
adc
add
sahf
xchg
adc
mov
mov
mov
jbe
sbb
mov
push
adc
aad
xor
sub
jne
mov
jae
in
push
jb
dec
stos
xchg
in
add
in
sbb
cmp
in
cmpsb
inc
aas
cmp
enter
movsb
sub
fadds
loopne
ljmp
mov
sub
pop
sub
push
mov
sub
mov
jnp
into
sub
int
pop
mov
jb
xor
sahf
add
or
jl
cmpsl
pusha
repz
mov
les
pop
std
adc
sbb
xor
pop
enter
loop
pop
xor
test
rolb
xlat
stos
in
sahf
sti
xor
outsl
mov
pop
fcomip
mov
movsb
popa
cmp
sub
fnstcw
scas
and
mov
xor
es
call
or
inc
push
mov
int3
stos
outsb
imul
addb
jg
stc
das
adc
xchg
or
cli
or
and
in
stos
inc
nop
popf
sub
lods
jg
outsl
stos
sub
jl
bound
sub
loope
inc
rclb
scas
jae
clc
pop
fisttps
cmp
sub
pop
iret
push
adc
fidivl
mov
repz
fs
cmp
icebp
ljmp
outsl
jle
dec
ljmp
aad
jp
sbb
incb
or
adc
aas
cwtl
jns
xor
push
add
pop
movsb
sarl
aam
aaa
mov
ljmp
xor
sub
imulb
rorl
inc
mov
mov
mov
jo
mov
mov
lcall
jg
inc
adc
and
imul
xchg
xor
int
ja
or
xchg
lock
mov
adc
cmp
test
or
fldl
jne
test
lods
sub
mov
sbb
scas
dec
aaa
call
cld
test
gs
xlat
sub
push
mov
jmp
xor
sbb
fstl
test
mov
sub
into
and
and
popf
mov
loopne
shlb
loope
mov
sbb
or
cmpsl
lret
pop
imul
lret
hlt
and
xchg
dec
idivb
das
adc
inc
test
jecxz
xchg
aaa
xchg
leave
mov
push
cmp
add
arpl
cs
or
inc
cwtl
stos
das
jbe
stc
jmp
jmp
in
test
jnp
fnstenv
sbb
lahf
add
ja
popf
daa
adc
out
fistps
cmp
pop
pop
add
lahf
outsl
std
mov
inc
fcmovb
mov
repz
jbe
negb
jmp
mov
dec
inc
inc
mov
add
sahf
sbbb
mov
mov
sub
inc
lcall
xchg
outsl
dec
lret
test
pop
sub
ret
cltd
pop
outsb
or
push
adc
icebp
push
lret
aaa
cmpsl
test
inc
pop
std
add
sub
jns
es
cltd
cmpsb
adc
repz
add
repz
inc
ja
fildl
lea
xchg
inc
pop
aaa
pop
popf
fistps
sbb
mov
mov
stos
mov
fidivrl
shr
mov
add
lods
or
mov
test
pop
jecxz
dec
add
outsb
syscall
xor
jo
popf
or
adc
mov
push
inc
outsl
loop
jnp
das
inc
mov
xchg
xor
dec
inc
inc
inc
xchg
jle
mov
jne
es
xor
xor
pop
mov
inc
xlat
jg
cmp
in
adc
addr16
js
sub
and
push
stos
insl
pop
cmp
xchg
scas
data16
mov
cmp
scas
imulb
lret
cmp
and
and
popf
in
push
shrb
xor
sti
ds
cmc
lock
inc
push
push
inc
push
rcrb
daa
jl
cmp
repnz
pop
imul
scas
or
stos
lea
jbe
hlt
shll
repnz
ret
repnz
jge
pop
ja
scas
data16
inc
sub
sub
xor
push
cmp
push
push
mov
pop
sbb
pop
addr16
lret
out
dec
dec
cmp
int
fldenv
bound
cmp
xchg
rcll
jbe
lret
sub
xor
pop
xchg
inc
jns
lock
aad
int3
cmp
out
push
add
and
sub
sarb
icebp
mov
pusha
dec
sahf
sahf
mov
mov
js
pop
mov
jge
jle
push
mov
bound
xor
test
jbe
into
push
adc
dec
outsl
lods
cmpb
add
sarl
xchg
insl
xchg
test
mov
shl
das
or
sub
imul
inc
cmp
jb
push
cld
ret
iret
rcrl
pop
adcb
lahf
pop
adcb
dec
rcrl
mov
subb
mov
out
orl
mov
pop
sbb
sub
lret
push
das
lcall
std
je
mov
leave
sub
jns
sbb
aaa
popf
daa
jb
lcall
iret
js
sub
adc
jo
add
pop
push
mov
xchg
repz
and
inc
or
outsl
or
lret
inc
inc
xor
in
jns
std
cli
inc
fimull
push
inc
js
inc
cwtl
lock
iret
or
rorl
cmp
mov
insl
insl
sbb
jl
xor
aas
and
sarl
scas
adc
stos
pop
mov
subb
rcr
imul
lock
add
mov
pop
cmovl
test
fsubrs
fildl
fmuls
icebp
add
mov
lock
pop
seto
pop
fsubp
ffree
imul
add
movsb
shll
jb
lret
lret
addr16
mov
pop
cmp
fildl
lods
jg
add
aas
aas
push
dec
adc
imul
dec
ret
sbb
mov
mov
out
jns
mov
jg
jmp
xor
sbb
mov
bound
or
xor
xor
pop
mov
les
stc
cmc
add
hlt
int
push
je
mov
addl
ja
faddl
insb
push
rol
pop
xchg
and
cmp
es
and
mov
mov
jne
in
rorb
out
ret
and
xchg
xchg
mov
stos
xor
xchg
dec
or
js
mov
repnz
push
clc
xchg
lds
jo
sar
hlt
adcb
jg
inc
jle
test
cmp
jmp
ror
in
fwait
mov
and
test
lods
inc
xchg
loope
nop
mov
mov
jbe
sbb
and
xchg
ljmp
pop
mov
fstpl
mov
mov
out
out
mov
ljmp
jle
sbb
mov
pop
mov
es
pop
mov
jecxz
push
or
sahf
dec
shll
sub
dec
ffree
movsb
inc
aam
in
mov
inc
push
xor
dec
xchg
push
push
jnp
dec
push
push
hlt
call
pop
inc
and
int3
addl
push
pop
jg
out
ret
pop
mov
xlat
fbld
fnstsw
rolb
sub
add
mov
xchg
push
fs
mov
lret
xchg
sub
jmp
xor
shll
and
imul
fwait
dec
test
cmpsb
mov
xchg
sarl
mov
xlat
nop
in
mov
clc
cmp
out
movsl
pop
sbbb
inc
inc
ret
and
std
lods
mov
xor
push
and
or
fcoml
les
xchg
jge
ret
testb
std
and
lods
iret
add
dec
std
ja
loope
decb
out
mov
fcoml
xor
and
lret
sbb
insb
sub
push
mov
mov
dec
fsub
sub
mov
pop
mov
or
clc
pop
dec
adc
inc
push
aam
pop
mov
mov
dec
jg
mov
shlb
jne
fwait
mov
sub
pop
inc
pop
mov
jmp
loopne
enter
push
clc
iret
ja
push
or
outsb
mov
sub
repnz
hlt
jg
sub
mov
and
imul
std
push
adc
push
pop
outsl
lea
inc
arpl
inc
xorl
sbb
jae
jl
cmp
div
lcall
or
cmp
roll
lcall
fistl
ss
fs
out
test
add
add
gs
inc
gs
ja
sbb
lcall
adc
enter
pusha
push
inc
loopne
mov
aam
cmc
hlt
or
stos
aam
xchg
lcall
jbe
fucom
and
int
fidivrl
and
test
dec
push
leave
push
hlt
fbld
imulb
in
fildll
and
clc
je
insl
push
bound
or
or
stos
negl
shrl
lds
mov
push
dec
outsb
jl
fisttpl
fisttpll
sahf
and
outsb
jmp
push
lahf
cmp
es
es
lcall
jecxz
loope
ds
mov
or
in
cmp
inc
popa
icebp
push
push
insl
fstpl
pop
jmp
adc
sbb
jo
xchg
insl
sub
pushf
in
inc
in
jg
add
popf
push
mov
repnz
popf
sub
push
mov
movsw
cmp
sub
out
cmp
cld
cld
mov
push
sbb
in
push
fdivl
sbb
mov
sub
push
mov
or
xchg
sbb
pop
sub
mov
pusha
aam
dec
les
inc
jmp
jns
xchg
jecxz
mov
mov
roll
js
in
test
xlat
jno
dec
mov
addb
dec
cmp
sbb
in
repz
sbb
cli
into
jle
sbb
mov
insb
sti
shl
stos
sub
data16
xchg
and
ret
mov
push
insb
xchg
lea
jmp
shl
hlt
repnz
push
sbb
push
jl
sti
cmp
out
cmp
jl
adc
push
jg
sub
or
pop
mov
jp
cmp
pop
jp
xor
shlb
jbe
inc
popa
jb
inc
test
mov
int
movsl
int
xchg
xchg
sbb
lret
aaa
in
and
fldpi
jle
jg
adc
adc
xchg
mov
out
scas
adc
cmc
jl
jne
push
pop
inc
inc
mov
test
out
ljmp
xchg
cmpb
dec
xchg
decb
icebp
int3
or
dec
push
test
popf
xchg
cld
sub
dec
in
stos
mov
lret
cmp
loope
or
loope
pop
jne
in
leave
test
dec
xchg
jne
pusha
jle
stos
sti
incl
adc
mov
outsb
sarb
add
bound
je
in
into
cltd
addr16
jno
mov
inc
movl
movsl
aas
decl
into
mov
shlb
lock
dec
jl
sti
xor
addl
sahf
dec
sahf
inc
in
fs
stc
dec
loope
call
jle
scas
adc
lods
add
or
ds
cmpsb
xchg
jae
push
push
mov
popa
subl
mov
inc
popf
or
fistl
loope
in
btc
jb
clc
dec
xchg
icebp
lock
mov
xlat
inc
jbe
aaa
dec
lock
xchg
add
aam
lahf
sbb
int
jbe
xchg
aas
push
cmp
pop
out
rorl
or
call
fldt
jbe
jno
sbb
sub
jge
rol
pop
int
insl
push
dec
sub
mov
fdivrl
xor
push
push
pusha
pop
jbe
aaa
fwait
push
adc
and
xchg
jecxz
sbb
dec
bound
movsb
cmpsb
mov
or
mov
cmpsl
inc
rol
mov
xor
and
into
clc
out
adc
push
sub
mov
imul
and
aam
lret
sub
push
lahf
dec
jne
push
push
dec
pop
insb
sub
int
fisubrs
jmp
inc
shrl
mov
movsl
pop
fs
pushf
idivb
out
rclb
push
cltd
push
mov
dec
adc
int3
fildll
scas
push
cwtl
and
lcall
lds
clc
in
enter
jno
fimuls
repz
imul
insb
imul
js
daa
js
lock
adc
std
or
test
mov
dec
and
cmp
test
and
mov
xchg
push
xchg
ds
std
mov
mov
xchg
sahf
mov
lret
outsb
hlt
xchg
dec
mov
mov
bound
jns
adc
popa
pop
in
dec
and
jbe
push
imul
push
jns
sarb
js
inc
cmp
scas
pop
push
das
int
mov
mov
dec
hlt
mov
lret
les
ficompl
mov
mov
lcall
xor
sbb
repnz
adc
sbb
lea
xor
adc
enter
xlat
sub
dec
dec
aam
dec
and
roll
fcmovnb
sti
lea
cmp
enter
loop
sbb
dec
pop
sub
jne
xchg
xchg
clc
xor
dec
xchg
popf
arpl
daa
clc
pushf
sub
pop
xor
inc
jmp
cmp
lcall
xchg
and
sbb
mov
fucomp
xor
ret
stc
icebp
loope
clc
mov
cld
pop
mov
jmp
inc
into
adc
insl
hlt
mov
pop
jg
xchg
rcr
and
dec
sub
jns
and
dec
push
testl
inc
dec
movsl
lock
and
xor
mulb
xchg
es
sbb
lea
jmp
sahf
add
jns
mov
pop
push
enter
sbbb
addr16
fnstcw
cmp
repz
dec
lods
je
cmp
inc
ljmp
push
cmp
xchg
fld
xlat
pop
push
std
xor
and
inc
aas
lock
data16
aas
loop
jg
into
mov
loope
js
inc
ret
pop
stos
mov
fxrstor
pop
aas
fsts
mov
arpl
sbb
mov
sbb
popf
nop
outsb
dec
or
mov
jbe
dec
repnz
lcall
cmp
mov
mov
fcmovnu
cmc
mov
xor
movb
jp
push
inc
jb
clc
mov
aad
dec
push
inc
push
cmp
loopne
xlat
bound
mov
outsl
lret
rcrl
add
scas
lcall
cs
into
arpl
jno
xchg
jge
addr16
addr16
push
imul
test
mov
xchg
mov
pop
adc
imul
push
imul
xor
sbb
scas
cmpsb
ds
decl
xchg
push
xor
and
xchg
ljmp
dec
pop
fs
sbb
popf
add
fstpt
pop
and
ss
imul
mov
push
pop
adc
dec
and
shl
dec
jb
inc
into
jp
adc
loopne
and
mov
jns
push
lcall
dec
stc
aam
and
and
and
mov
aaa
int3
mov
and
jbe
jno
cli
xor
add
or
pop
sub
push
jne
out
sbb
dec
std
cltd
arpl
adc
cmp
jnp
notl
cmp
stc
push
pop
inc
cmpsb
inc
mov
dec
inc
push
loope
icebp
inc
test
fisttpl
lods
int
lahf
cmp
mov
nop
and
call
cmp
aas
inc
cmc
mov
daa
and
in
xchg
repnz
test
inc
push
sub
mov
dec
rorl
adc
xchg
rcl
loopne
jno
popa
mov
cmp
cmp
rcll
repnz
or
pop
cmp
cmp
mov
xchg
stos
add
adc
or
leave
jmp
mov
into
sti
aad
jmp
jmp
inc
cli
and
push
icebp
inc
js
dec
je
pop
stc
in
mov
into
xor
es
movsl
repnz
cmpsl
int3
mov
popa
sbb
je
jo
ljmp
push
rcrb
jnp
ret
mov
cs
pop
arpl
ss
sub
loop
lahf
xchg
and
js
pop
push
pop
outsb
cs
xchg
sti
pop
insb
fmuls
out
xchg
enter
sub
int3
push
repnz
repz
imul
icebp
push
xchg
in
cmp
or
adcb
xor
test
imul
sub
sub
cld
add
xor
and
inc
inc
jae
arpl
xchg
addl
rol
shl
jecxz
adc
add
xor
and
push
push
inc
inc
jae
arpl
xchg
addl
rol
shl
jecxz
adc
add
and
and
push
push
inc
inc
jae
bound
xchg
addl
rcr
shl
shl
or
das
add
push
push
inc
jae
jecxz
xchg
xchg
jl
sbb
dec
ds
sbb
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
dec
dec
pop
jle
outsb
jg
pop
jl
push
jl
aas
xchg
iret
cs
out
out
lcall
scas
mov
pop
adc
jg
femms
pop
ds
cs
fmulp
into
fistps
mov
out
mov
jg
movd
and
cs
mov
lahf
mov
cmc
sti
ljmp
sub
pop
xchg
sbb
push
fsubp
sub
fcompl
out
arpl
mov
inc
mov
jle
xorb
mov
mov
mov
mov
popa
dec
rclb
scas
push
inc
mov
cwtl
js
xlat
pop
dec
xchg
sub
and
ljmp
jbe
xchg
mov
fwait
outsb
subb
push
xadd
outsl
into
lret
adc
popa
fmull
sahf
mov
mov
xchg
mov
movsl
imul
adc
fiaddl
mov
cmpsl
jg
nop
or
out
shl
mov
ja
sbb
adc
imul
sbb
outsl
outsb
jg
pcmpeqd
ds
mov
sbb
push
fisttps
popl
aaa
and
or
push
cmp
pusha
pop
dec
dec
cs
fisubs
mov
xlat
sub
sub
ja
imul
inc
jnp
mov
mov
loope
xlat
shll
pop
and
pop
sbb
pop
ds
cs
fmulp
into
out
out
lcall
scas
scas
mov
jle
outsb
jg
femms
pop
ds
cs
fmulp
into
out
out
lcall
scas
scas
mov
mov
lret
mov
mov
mov
and
add
imulb
jno
xorb
nop
iret
and
jp
xlat
and
xchg
lahf
out
adc
lret
call
scas
push
flds
mov
jmp
xchg
ljmp
xor
xor
xchg
and
push
pop
mov
cli
outsb
pop
rcl
lret
lea
aad
mov
or
icebp
int
or
pop
cld
cld
lahf
pop
fidivl
push
xor
jecxz
xor
aam
out
daa
lret
pop
xlat
adc
out
fisttpll
insl
out
jbe
mov
sbb
mov
sbb
mov
int3
popa
xor
push
xchg
fistl
mov
fs
pop
loopne
dec
xchg
gs
sbb
sbb
cmp
fucomp
mov
mov
push
lret
or
fsubrs
jecxz
iret
sub
cli
mov
pop
in
or
je
subb
aaa
mov
adc
out
imul
data16
add
loopne
push
xchg
clc
dec
sti
stc
call
or
add
cltd
sub
cmpsb
int
enter
ljmp
data16
cmp
push
out
add
cmp
xchg
xor
insl
pop
ja
push
push
enter
xlat
sbb
lds
lahf
popf
adc
imul
int3
add
push
xchg
aad
cld
outsb
push
daa
add
inc
push
jmp
push
jbe
jmp
subl
popf
aas
cli
jl
test
loope
jne
mov
cld
out
mov
push
mov
cmp
mov
in
sbb
mov
daa
cwtl
cmpsb
xor
inc
xor
cmp
ror
cmp
push
lea
bound
cmp
mov
aad
and
push
mov
jns
int
and
cwtl
add
lahf
xchg
xchg
adcb
and
std
nop
stos
fs
rep
loop
gs
test
and
push
mov
fs
lods
jge
leave
or
and
jo
mov
xor
data16
lret
popa
xchg
mov
nop
and
int
jecxz
aas
inc
mov
xchg
rorl
sub
sub
inc
repnz
sbb
es
cmp
nop
lods
lahf
mov
and
test
adc
inc
notb
bound
cmc
aad
inc
mov
push
or
cli
push
dec
loop
adc
cmpsb
dec
dec
cmovg
sub
cs
fdivl
xor
mov
sbb
data16
in
adc
in
and
push
jg
in
cmc
sti
pop
xchg
cmpsl
pop
loop
in
add
sub
mov
jle
insb
iret
gs
mov
push
xor
mov
stos
mov
call
test
xchg
dec
lcall
div
mov
push
mov
and
cmpb
ss
xor
and
ds
iret
xor
scas
out
jo
out
leave
jl
add
add
mov
mov
mov
in
sub
jno
loop
or
imul
or
scas
test
mov
subl
push
add
adc
testb
inc
push
xchg
sti
pop
popa
imul
je
mov
jne
pop
xor
mov
sub
cmp
loope
dec
mov
mov
xor
and
xchg
jo
inc
hlt
insb
pop
pop
addr16
int
fdivl
jle
das
xchg
cld
out
mov
jle
into
jo
mov
dec
mov
add
jmp
jae
lea
inc
jbe
loope
and
ret
ja
adc
dec
mov
push
insl
mov
lcall
dec
mov
imul
rorl
push
inc
insl
in
push
bound
insl
push
aam
inc
aaa
sub
pushf
cmc
mov
fs
add
pop
insl
cmp
push
out
rcrb
mov
adc
inc
pushf
movsb
hlt
fs
mov
sbb
push
arpl
rorl
mov
pop
push
jo
xchg
rcll
ret
sbb
pop
jp
fcomps
add
inc
outsb
imul
ror
xor
adc
in
popf
dec
jbe
mov
fwait
dec
and
add
sub
jmp
mov
mov
cmpb
mov
mov
lods
cmpsb
addr16
cmc
pushf
fsubr
cwtl
cmp
xor
cwtl
pop
xchg
mov
mov
dec
addr16
scas
jno
addl
xor
push
lods
mov
lcall
int
pop
cmp
movsb
xor
jb
dec
cmc
push
das
stos
mov
ficoml
imul
xchg
adc
fsub
jl
int3
data16
enterw
mov
outsl
pusha
int3
push
rcl
dec
scas
lock
mov
xor
dec
and
push
loop
pop
adc
cmp
xchg
inc
fistps
mov
mov
xchg
xchg
or
dec
lret
and
cmp
lea
dec
inc
sub
les
jle
ljmp
cs
dec
mov
mov
dec
fcmovnu
pop
lock
hlt
adc
jne
inc
outsb
inc
jg
push
xchg
xlat
or
jle
cmp
scas
and
and
jbe
adc
cs
ja
int3
jle
lods
jmp
aad
lea
xchg
cmc
mov
cmp
mov
ret
xor
ss
mov
decb
enter
lcall
push
lahf
or
clc
jb
pusha
mov
push
xor
cmp
adc
push
cld
out
cmp
add
mov
data16
insl
add
mov
inc
cmp
mov
jb
xchg
jecxz
jp
jp
sbb
popa
addl
push
mov
arpl
jle
lock
cmpsb
lret
nop
cmp
cmp
sub
pop
mov
popa
mov
adc
jne
out
mov
lcall
pop
jmp
and
mov
cmp
divl
dec
call
popa
xchg
sbb
mov
lret
push
hlt
pop
outsb
shlb
sub
adc
sub
js
js
stc
data16
loope
inc
pop
cmp
pop
in
jmp
repnz
dec
cmp
decb
aaa
aas
in
pop
iret
test
xchg
xchg
call
jp
testl
mov
jne
adcl
push
or
lea
xchg
adc
int
sbb
repnz
push
daa
daa
cmp
loopne
out
lock
jp
out
daa
jae
cmp
clc
push
es
pop
neg
enter
mov
adc
lret
mov
dec
out
movl
pop
fsub
dec
mov
xchg
xchg
jl
imul
jns
rcrl
adc
dec
add
hlt
push
mov
outsb
xchg
es
in
mov
in
test
push
mov
pop
clc
jne
sbb
or
adc
movsb
imul
push
and
repz
cmpsb
jmp
ror
stos
or
pop
test
jg
dec
sbb
enter
dec
xor
dec
inc
xchg
fcoml
xchg
and
stos
push
pop
jle
fwait
sub
jl
mov
lock
adc
mov
dec
pusha
hlt
loop
jns
mov
and
daa
xor
out
mov
add
xorb
insb
daa
test
rcr
pop
adc
jp
jp
inc
dec
add
test
mov
cs
inc
ret
pushf
cs
ds
push
jle
push
jb
and
repz
push
inc
rolb
cmp
mov
rol
jno
fisttpll
cmp
push
jg
fidivs
push
jg
mov
lock
mov
nop
cwtl
test
int3
sbb
lahf
cmpsb
push
aaa
or
xchg
or
rol
jns
and
mov
jo
xorl
xchg
push
and
mov
mov
mov
dec
pop
mov
inc
mov
rolb
pop
cltd
cmp
rcrl
inc
xchg
mov
xchg
push
aad
pop
cmpsl
xor
cmpsb
ja
hlt
mov
push
gs
xchg
add
aas
pusha
ret
leave
sti
aas
sub
hlt
faddp
int3
cvtps2pi
mov
dec
mov
or
push
xchg
sbb
dec
or
out
xor
mov
daa
jne
out
or
int3
sti
adcl
fidivs
sub
adc
stos
push
mov
jmp
int
jecxz
push
jmp
outsl
lds
daa
sbb
sti
mov
cltd
or
rcl
lods
fbld
jnp
cmpsl
inc
out
das
and
or
frstor
add
pop
sti
test
aas
loop,pt
and
jno
add
xchg
and
fisttps
mov
add
iret
ja
adc
sub
das
mov
loope
sahf
adc
adc
popf
jmp
in
nop
and
fcoml
insb
jge
push
pop
and
ljmp
xchg
dec
outsl
pop
lods
addr16
mov
shr
jbe
lea
jge
enter
call
rorl
cmp
add
dec
xchg
add
push
in
sub
xchg
push
shrb
lock
jg
push
cld
fnstsw
push
and
and
fwait
sub
inc
insb
movsb
addb
ds
pop
sbb
push
mov
fs
dec
mov
push
rorl
add
popf
pop
ret
pop
inc
pop
stc
call
adc
xlat
fists
test
orb
rcrl
mov
sub
and
mov
ret
adc
gs
call
test
xchg
and
rolb
xchg
push
mul
push
idivl
in
popa
or
std
jl
sbb
aas
lods
sub
fcoml
mov
or
arpl
jns
ds
call
insl
out
test
pop
rclb
ljmp
jae
mov
push
push
cmpsb
movsb
xchg
addr16
pop
dec
jl
aad
xchg
mov
adc
in
xlat
jle
rcl
push
fidivs
int3
faddp
add
je
jns
push
aas
add
jmp
in
lahf
stos
push
mov
cmpsb
xor
lock
lock
mov
xchg
mov
dec
and
xor
out
repz
mov
es
call
loopne
push
mov
aam
mov
je
sub
adc
lds
inc
push
sahf
push
mov
orl
and
loope
rcrb
push
leave
mov
xchg
pop
xchg
cmp
push
ljmp
mov
repnz
or
xor
repz
push
push
pop
frstor
andl
jmp
jb
mov
popf
lds
je
dec
sub
test
out
nop
mov
call
jne
negl
push
mov
out
or
push
int
jmp
mov
fimull
and
xor
mov
inc
pop
jmp
sbb
or
add
imul
test
in
jmp
add
mov
xchg
xchg
jno
or
sub
ss
jns
cmpsb
clc
cmp
in
sbb
mov
gs
sti
es
in
add
push
sub
test
pop
shll
jb
add
inc
adc
ret
jl
sbb
or
or
dec
cmpsb
in
mov
and
mov
div
aam
pop
push
adc
iret
outsb
addr16
mov
push
clc
call
enter
inc
jne
and
push
adc
lret
pushl
bound
rclb
sti
jle
ja
in
inc
and
xor
es
ja
fisubs
push
es
hlt
idivl
movsl
adc
in
mov
repz
das
subb
lods
dec
xor
fsub
mov
inc
int
inc
sub
xchg
mov
lods
jg
jo
sbb
mov
idivl
into
add
pop
fcompl
adc
inc
push
movsb
scas
inc
pusha
push
mov
fcoms
lret
mov
hlt
mov
loope
inc
sub
pop
push
mov
or
in
adc
mov
test
jp
nop
jno
mov
jns
push
fldt
cmc
mov
mov
adc
stc
jb
xchg
push
test
push
cmp
pop
and
xchg
jle
mov
inc
mov
xchg
in
xchg
push
lcall
push
mov
push
xchg
cmp
js
divl
mov
cs
rorl
jle
sbb
mov
ja
cmc
inc
lods
xchg
rcrb
scas
mov
ljmp
push
sti
lods
cmp
test
xchg
xchg
add
xchg
fs
leave
cwtl
ds
mov
mov
or
add
loope
cmpl
fxch
shll
and
loopne
inc
mov
xchg
add
inc
xchg
test
rcr
jo
sar
dec
or
outsl
mov
dec
jg
xor
in
enter
xor
dec
not
jge
xor
jmp
loop
popl
or
xchg
ss
popa
fcmovne
mov
mov
xchg
lahf
push
repz
cld
je
iret
enter
cmpsb
xor
mov
fcmovu
xlat
add
xchg
pushf
sub
mov
test
sub
dec
mov
mov
jmp
cld
pop
add
std
divl
jb
mov
loope
sarb
xchg
divl
sub
pop
push
cmp
enter
movsl
je
jge
pusha
out
aad
add
cmpsb
push
in
test
arpl
arpl
xor
mov
fcmovne
or
nop
xlat
movsl
sbb
sbb
sbb
gs
mov
jnp
imul
sub
sub
and
ret
pop
mov
xor
mov
inc
mov
pop
jb
adcb
jle
sbb
repnz
mov
lods
test
movsl
xor
filds
pop
jmp
lds
adc
lock
mov
add
pop
gs
mov
test
sbb
cmp
lock
push
cs
lret
cmp
out
cli
stc
lods
cmc
orl
fldcw
or
ja
push
fisttpl
add
icebp
and
push
mul
aad
dec
push
mov
mov
ljmp
std
adcb
fnsave
mov
stos
mov
out
out
push
sub
lods
jno
or
shr
cwtl
jle
loope
mov
jmp
dec
pop
mov
shrl
xor
cld
add
sti
fimuls
xchg
push
cwtl
jo
mov
xor
addr16
dec
mov
pop
lock
ficoml
xchg
cmc
mov
inc
into
dec
js
or
pop
movsl
inc
pop
add
mov
push
jbe
outsb
jb
mov
ljmp
xor
push
sub
insb
hlt
aaa
cli
call
mov
out
sub
mov
enter
inc
mov
ja
mov
aam
cmpsl
sbb
aas
repnz
daa
mov
dec
popa
out
int3
pop
into
jg
xchg
sub
push
test
dec
test
fstl
das
pop
inc
inc
fistpll
cmp
inc
ja
shl
je
sbb
pushf
in
lret
lahf
stos
insb
loope
adc
addr16
in
inc
push
inc
scas
je
push
xor
inc
mov
mov
rclb
pop
popf
notl
call
lods
sub
int3
xorl
mov
call
add
leave
shrb
and
sub
test
fildl
ss
mov
xor
jae
in
sbb
stos
sbb
add
push
int3
push
sbbl
ret
negb
pop
and
inc
fistl
jo
dec
fldl
out
movsl
lret
sbb
fmuls
jp
fbld
pop
imul
or
popf
leave
jmp
clc
adc
mov
push
repz
fsincos
push
cmpsb
mov
push
dec
rcll
xchg
arpl
pusha
cmpsl
sbb
in
faddp
std
mov
sbbl
sbb
arpl
in
in
add
out
xor
fcomps
jnp
sti
mov
fst
cmp
push
lahf
or
dec
dec
call
outsb
in
pop
lret
mov
push
sbb
cmp
movsl
fisubrs
or
int3
loopne
div
jo
movsl
lahf
out
cmp
mov
add
xorps
out
jbe
add
dec
mov
xchg
push
cs
iret
test
stc
bnd
and
sub
xlat
into
fldcw
repz
idivl
aas
rolb
frstor
imul
xchg
outsb
enter
fcoms
call
lahf
lret
cmp
pusha
sbb
adc
jp
addr16
pop
mov
jbe
mov
xor
xlat
pop
jecxz
mov
aas
scas
inc
out
fldt
test
or
push
out
shrb
negl
dec
mov
loope
sbb
js
out
sbb
adc
mov
jmp
push
xchg
int
mov
cmp
mov
enter
outsb
sub
cmp
test
into
repnz
ljmp
subb
scas
mov
or
jecxz
das
ss
mov
arpl
out
mov
js
and
ss
push
xor
sub
wbinvd
gs
xchg
adc
cli
pop
loop
mov
mov
push
fst
mov
lahf
add
ds
mov
and
stos
push
jae
rclb
cmpsl
or
mov
dec
jl
lods
icebp
loop
push
pushf
ret
outsl
mov
scas
mov
mov
and
scas
int
and
in
cli
dec
xor
xor
pop
mov
sbb
dec
lds
pushl
mov
mov
mov
cs
test
jae
push
insl
iret
ds
xor
nop
mov
dec
mov
jl
mov
lcall
mov
jle
inc
int
xor
in
adc
xchg
jle
and
aam
hlt
pushf
xor
pop
mov
add
idivl
arpl
aas
sbb
mov
out
xchg
lret
nop
adc
outsl
shrl
fprem
sub
pop
sbb
cmp
ja
jno
pop
adc
fistpll
xchg
mov
push
outsb
pop
shr
or
stos
pop
mov
cmp
inc
sbb
clc
mov
jp
mov
int3
xorl
stc
sbb
mov
sub
or
mov
call
mov
xchg
cmp
aad
sbb
dec
cmp
ja
lea
push
fdivs
adc
push
lods
out
cmp
xor
or
subl
mov
popf
xlat
xor
pop
jns
mov
sti
mov
mov
loop
out
xor
and
pop
scas
mov
iret
pop
mov
in
fcoms
enter
adc
es
xchg
jbe
and
in
sub
inc
iret
sub
fld1
test
sbb
testl
xchg
mov
mov
jmp
loop
pop
mov
ja
and
test
and
jecxz
cmp
loopne
push
dec
and
stos
sub
scas
arpl
jl
lock
or
outsb
push
mov
sbb
in
in
rorb
vzeroupper
call
sub
adc
imul
push
mov
lock
sub
and
in
push
cmp
scas
mov
sub
and
ficoms
xchg
sbb
lcall
sahf
add
or
addr16
mov
outsb
push
cmp
sbb
sbb
push
aad
jp
jmp
mov
dec
loop
xor
icebp
mov
iret
scas
loope
adc
out
cmpsl
sti
mov
sbb
adc
scas
fmuls
mov
add
sar
dec
es
mov
rcll
sbb
stos
inc
int
inc
inc
sub
pop
add
mov
sbb
adc
aaa
fists
dec
les
filds
in
mov
scas
sbb
jbe
clc
or
push
fnstsw
adc
ja
push
xor
sub
cmc
and
or
sarl
sub
in
pusha
ds
movsl
pop
les
fcmove
push
jecxz
push
inc
call
bound
popf
mov
xchg
fnstsw
xchg
lods
push
pop
shll
mov
rcrb
xchg
cwtl
xchg
jle
or
pushf
and
adc
iret
arpl
add
cwtl
aad
xor
pop
lcall
mov
dec
ret
icebp
sbb
sub
sub
roll
pop
lcall
daa
dec
mov
fs
stos
popa
dec
shll
psraw
hlt
arpl
icebp
jns
roll
in
mov
mov
xchg
fsubrs
out
dec
or
jl
pop
mov
out
dec
dec
and
cli
mov
lds
outsl
xchg
mov
xchg
ljmp
and
imul
fisubrs
insb
pop
lds
pop
shlb
push
addr16
aad
rcl
ror
pop
mov
inc
xchg
cld
add
and
loope
cmp
jg
femms
pop
ds
cs
fmulp
into
out
out
lcall
scas
scas
mov
jle
outsb
jg
femms
pop
ds
cs
fmulp
into
out
out
lcall
scas
scas
mov
push
outsl
outsb
jle
femms
pop
ds
aas
fmulp
into
fimuls
out
out
lcall
scas
inc
mov
and
dec
jnp
nopl
fidivs
xor
out
out
mov
pop
push
pusha
inc
push
push
inc
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
push
jp
dec
add
adc
inc
dec
sbb
push
ljmp
xchg
stos
in
hlt
mov
lcall
add
adc
cmp
sbb
cli
mov
movsb
ficoml
les
xor
sbb
or
or
ljmp
xchg
stos
movsl
aad
call
push
pop
dec
jo
lahf
jecxz
mov
add
loop
mov
xor
ret
dec
fstpt
sahf
and
jne
mov
mov
into
out
pop
and
pop
xor
popa
mov
cltd
cmp
jb
dec
pop
das
jo
xor
xorl
scas
je
cmp
adc
hlt
hlt
out
cmp
xor
add
and
inc
das
mov
sbb
stos
addr16
jg
xor
mov
push
mov
or
dec
scas
mov
stos
sti
movsl
hlt
jae
cmp
add
lods
mov
shll
fcmovb
fwait
sub
add
fucomip
pop
enter
sbb
mov
xchg
repnz
mov
or
and
and
pop
push
sub
or
dec
ljmp
lea
les
xor
add
dec
sbb
sbb
ljmp
sti
stos
mov
mov
das
je
adc
pop
jg
jb
dec
cmp
lock
stos
xchg
aam
out
out
mov
gs
and
or
je
inc
sbb
cli
mov
test
xchg
stos
in
hlt
mov
lcall
add
adc
cmp
sbb
cli
mov
test
xchg
stos
in
hlt
mov
lcall
and
lahf
cld
push
dec
xor
test
xor
pop
cld
jmp
add
dec
mov
mov
dec
cmovae
cmp
and
cwtl
push
mov
mov
mov
xor
pop
cmc
subb
xchg
push
mov
mov
jle
dec
popf
pop
push
in
into
rclb
sbb
add
mov
xchg
jmp
aad
and
movsl
xlat
aas
data16
fildl
shl
sti
scas
cmpl
jg
in
or
cmc
pop
mov
into
aam
push
dec
xchg
in
arpl
dec
inc
jne
jle
movq
mov
sub
mov
scas
ds
hlt
mov
or
lcall
push
push
mov
adc
mov
push
mov
jle
lds
push
fbld
out
jmp
cwtl
hlt
in
ds
scas
xor
push
fsubrl
jmp
sahf
cwtl
pop
sbb
mull
mov
into
js
inc
dec
jg
mov
cmc
adc
lods
mov
insb
jle
xchg
jbe
cmpl
mov
mov
aam
cmpsl
sahf
pop
ret
fisubs
mov
adc
sub
fadds
outsl
inc
push
loopne
andl
fsub
sbb
mov
mov
insl
repnz
xchg
insb
xor
call
ficoms
push
dec
pusha
or
add
shrb
out
mov
je
icebp
divl
or
scas
xor
cli
push
jl
cld
loope
adc
inc
and
mov
iret
arpl
icebp
xchg
mov
hlt
jl
fs
imul
jno
pop
jmp
mov
jne
push
lahf
mov
mov
dec
fnstenv
pushf
aas
inc
scas
inc
mov
std
idivl
int
jle
cmpsl
fidivrs
lds
xchg
sub
rorb
mov
sahf
push
jne
dec
and
ret
add
sti
jne
mov
fs
mov
mov
mov
in
outsb
ds
in
ja
mov
sbb
xchg
jp
out
stos
out
out
sarl
push
imull
int3
int3
shrb
daa
roll
or
or
lock
jne
fdivrs
call
mov
pop
xchg
pushf
pop
and
jmp
outsb
mov
jb
mov
aas
lcall
jg
push
stos
out
or
lret
fsubrs
clc
jno
cld
imull
cmp
sbb
dec
shrl
push
xlat
sub
push
test
lea
int
sub
scas
fsubl
jb
sub
ss
sub
mov
pop
lret
or
jge
pop
push
mov
imul
xchg
div
std
arpl
push
jns
jp
jg
add
cld
int
cmpsb
xor
mov
xchg
es
inc
pop
lcall
and
xor
lret
popl
xlat
or
enter
adc
in
in
rcrl
push
sbb
mov
xchg
std
pop
das
sarb
sbb
imul
cmp
xchg
orl
arpl
ret
and
test
push
push
call
or
sub
jg
mov
mov
ret
lea
out
jecxz
xchg
inc
xchg
or
sbb
aas
pushl
out
data16
pop
cmp
sub
adc
clc
mov
dec
fstl
pop
xchg
nop
mov
sub
outsb
mov
xchg
lds
js
lahf
je
cmp
xchg
rcll
fldenv
in
xor
mov
cmp
fcmovnbe
sti
mov
push
lds
mov
ss
push
push
sbb
rcrl
lret
orl
pop
or
mov
mov
incl
data16
sub
push
sub
mov
add
xchg
lahf
loopew
lea
xor
movsb
xchg
mov
fstl
pop
sub
shl
jae
mov
jg
jbe
fs
call
scas
nop
fprem
jl
inc
cmpsb
add
leave
imulb
sub
xchg
sub
mov
mov
inc
dec
orl
push
mov
inc
jmp
mov
mov
jns
mov
int3
popf
fdivp
imul
cmp
push
addr16
jne
xchg
scas
mov
sub
cmp
loopne
stos
pop
xchg
cmpl
pusha
pop
clc
pop
lods
mov
nop
inc
add
xchg
mov
outsb
lcall
dec
repnz
inc
add
sbb
lret
lret
shl
aaa
sub
scas
mov
fidivrs
stos
jbe
lcall
xor
mov
sub
pop
xchg
xchg
sbb
into
xor
clc
pop
mov
jnp
cld
xor
insl
sbb
in
xchg
sbb
shlb
pop
mov
in
arpl
inc
rcrb
imul
js
adc
or
jne
cmc
inc
outsb
sbb
hlt
pop
mov
shr
aam
push
xchg
mov
fwait
lahf
ret
or
in
daa
dec
cltd
mov
add
mov
cmp
sbb
push
cld
cmp
xchg
push
mov
lret
adc
ja
sbb
inc
mov
jge
pop
aam
fidivs
pop
ja
stos
mov
and
addl
xchg
test
or
sysret
push
movsl
loope
mov
sti
int3
or
xchg
adc
push
sar
mov
sbb
test
orl
sti
into
fwait
test
pop
or
cmpsl
out
mov
jl
enter
sbb
xor
or
test
addb
je
cmp
mov
add
and
movsl
jecxz
jne
imull
je
push
ljmp
or
cmp
call
fsubrl
ljmp
iret
cmp
outsb
lods
adc
fldcw
xchg
int3
inc
dec
mov
scas
mov
mov
ljmp
xor
and
stos
mov
xor
xor
hlt
adc
dec
adc
mov
fldcw
sbb
popf
push
scas
pop
ficomps
mov
int
xchg
rolb
cmp
es
sub
fs
mov
test
xor
mov
movsb
daa
out
ret
inc
std
scas
dec
jb
xor
fisttpl
add
pushf
fstps
push
movsl
or
mov
push
inc
push
fildl
jne
push
out
fs
cld
addr16
add
addr16
add
push
pop
mov
push
out
push
stos
adc
mov
xchg
lds
mov
fisubs
scas
jle
ret
hlt
mov
mov
mov
ds
gs
aaa
push
mov
fildl
cmp
pop
loope
imul
cmp
ret
adc
lods
dec
cmc
fisubrs
adc
addr16
and
scas
adc
xchg
xor
pusha
dec
pushf
fs
rcl
cmp
loop
adc
pop
loop
sbb
cmp
arpl
pop
mov
mov
ja
aad
xor
movsl
retw
mov
lods
pop
les
fxch
dec
imul
in
xorl
jne
cltd
imul
clc
das
test
inc
lcall
pop
pusha
or
xchg
pop
insl
js
pop
loop
fiadds
out
subl
cmp
jg
imul
inc
xchg
lock
ja
stos
mov
fsubrs
in
cltd
ss
or
jmp
ljmp
lret
jnp
rcrl
push
or
push
aaa
in
ljmp
jmp
insl
xchg
lea
movsl
repz
or
insl
or
push
or
xor
repnz
sahf
xchg
push
sbb
ds
outsl
dec
push
dec
sub
mov
ljmp
cmp
dec
and
sub
mov
sbb
and
jne
jmp
jg
scas
test
lock
xlat
into
adc
sub
jns
bound
cmp
clc
out
fwait
mov
inc
ja
out
mov
es
ret
push
icebp
addb
jmp
xor
cltd
nop
enter
xor
mov
dec
outsl
fmul
das
cmp
loop
popa
ljmp
adc
nop
mov
aaa
sub
mov
mov
aad
sti
or
rol
jl
fnstcw
in
pop
stc
push
dec
bound
dec
dec
insl
mov
inc
jbe
add
dec
es
pop
sbb
imul
hlt
and
xor
jg
dec
ret
out
pop
push
int
xchg
sub
mov
inc
xchg
fs
mov
loope
sub
stos
or
inc
adc
jecxz
clc
repz
add
fldcw
sub
aam
jg
hlt
sub
aad
sarl
cwtl
push
or
popa
icebp
mov
cmpsl
xchg
sbb
inc
or
sbb
pop
mov
push
mov
mul
push
or
fs
sbb
and
or
xchg
nop
xor
test
add
mov
push
mov
add
mov
lea
and
ret
arpl
add
and
out
call
or
data16
mov
fistps
addl
je
repnz
add
jo
test
into
add
push
and
int3
push
pop
nop
pop
int3
jge
cmp
mov
xchg
mov
aad
loop
mov
cmp
aad
dec
xor
icebp
ret
mov
stc
fcoml
add
jae
mov
xchg
mov
or
orb
aad
rorb
jno
ljmp
mov
cmp
je
ret
cmpb
bound
mov
jno
rcr
xor
cmp
pop
ret
xchg
xchg
mov
mov
cltd
iret
dec
xchg
imul
or
push
xor
mov
pop
lahf
fstl
xchg
pop
lods
sarb
je
ja
jne
mov
insl
push
inc
daa
cs
in
or
mov
fildl
push
xchg
xchg
mov
mov
jl
repnz
sbb
aam
fucomp
test
fildll
fcoms
and
jmp
mov
sti
mov
rcrb
push
mov
je
and
inc
mov
fwait
ret
mov
repz
icebp
bnd
lret
pusha
enter
cmp
dec
mov
psubsw
cwtl
sub
mov
cld
jnp
aas
mov
in
dec
aas
inc
jo
jp
mov
push
lods
adc
sub
dec
push
sbb
xchg
mov
jmp
fistps
xchg
lods
dec
in
cwtl
mov
int3
add
push
inc
cmp
dec
outsl
int
stc
ljmp
dec
xchg
jne
lds
cmc
roll
or
aam
js
mov
and
sub
and
pop
dec
cmp
dec
repnz
loop
mov
in
push
cmp
mov
ret
lahf
and
jae
and
adc
cld
adc
jge
or
sbb
jg
push
xchg
insl
push
aas
mov
sbb
pop
and
out
push
sbb
cmp
sbb
and
fbld
frstor
dec
xchg
adc
add
fisttps
fwait
shll
xchg
mov
repnz
jo
outsb
out
cs
sub
jp
rol
dec
dec
push
movsb
and
pop
inc
or
fwait
jb
jae
ret
dec
js
lods
std
mov
xor
es
inc
outsl
jo
stc
or
fiaddl
insl
jae
int
test
mov
es
hlt
mov
lcall
repnz
aam
pop
ja
in
push
push
or
or
push
test
pop
pop
jg
dec
scas
sti
dec
push
sahf
ds
and
mov
dec
inc
jecxz
inc
enter
push
mov
push
jbe
sub
pop
iret
jne
sub
push
movsl
xchg
repz
lock
aaa
adc
sbb
sti
subl
into
add
stos
dec
fmulp
out
adc
out
pusha
and
out
icebp
stc
mov
ret
jns
jg
and
mov
mov
jle
jno
xor
call
cmp
test
mov
fs
clc
das
adc
pusha
mov
into
push
and
adc
inc
xorl
shrb
sub
in
movsb
push
mov
push
fwait
loop
rorb
xlat
xor
mov
mov
inc
not
mov
mov
mov
mov
jno
ret
mov
popf
sbb
and
enter
push
mov
jp
mov
nop
test
inc
xchg
xor
push
push
and
repnz
in
cmp
mov
and
xchg
mov
pop
ds
adc
arpl
xchg
xchg
dec
mov
sub
imul
js
out
mov
fisttpl
test
in
sub
push
pop
sti
mov
jo
push
int
movsl
clc
jbe
sub
cs
cmpsb
adc
mov
repnz
fs
mov
add
gs
mov
mov
sbb
adc
jle
jne
pop
or
fimull
gs
add
loopne
fs
lret
xor
fs
push
mov
jno
mov
jl
subl
mov
jl
sub
insl
shll
out
bound
mov
loopne
les
clc
ljmp
sbb
mov
or
pusha
jnp
popa
test
fistl
lods
insb
popf
jne
inc
daa
push
fstp
daa
aas
add
jno
rorb
xlat
push
loopne
fs
repnz
call
dec
insb
sarl
es
sbb
leave
mov
push
lret
push
and
inc
mov
xor
add
popa
lret
pushf
mov
popa
stos
aaa
push
xor
test
cmp
xor
loope
ljmp
xchg
xchg
rorb
xchg
scas
loopne
adc
in
inc
divl
xchg
jnp
sbb
js
adc
add
mov
mov
rcr
mov
movl
jl
xor
mov
in
mov
out
sbb
adc
adc
cli
xor
das
xor
add
popl
mov
or
sub
movsb
aam
shlb
pop
sub
test
mov
loope
xorl
movsb
and
mov
xchg
aas
sar
sub
pop
pusha
push
gs
shll
lret
add
in
in
sti
pop
lods
in
shr
jo
mov
ja
pop
adc
lods
inc
out
repz
pop
cltd
popf
enter
call
test
fbstp
imul
aaa
jb
insl
mov
jp
jp
sbb
sti
add
leave
movb
cltd
ds
jle
mov
stos
add
lock
jne
jecxz
or
push
fdivrs
mov
idivb
dec
pop
xorl
sbb
cmp
lods
shl
dec
xchg
add
add
dec
rcrl
adc
pop
xchg
mov
repnz
ficoml
ret
repz
sqrtps
push
lahf
scas
aad
data16
lret
xor
movsb
adc
adc
mov
bnd
ficoms
icebp
imul
pop
mov
jbe
mul
cli
xchg
dec
fsubrs
cmc
mov
ss
in
popa
test
jne
push
xor
sub
jae
fisubrs
aas
add
mov
setbe
lea
shr
jecxz
cmpsb
insb
sbb
aas
adc
add
shll
test
push
push
cmp
adc
sbbl
push
and
iret
bound
in
testl
leave
push
jle
add
mov
inc
dec
adc
pop
add
bound
inc
cmpsl
sbb
inc
lahf
jno
inc
cmp
movsb
cs
sub
rol
movsb
popa
push
push
dec
std
inc
cmp
in
bound
push
das
mov
xor
fmuls
lods
dec
dec
popa
or
push
or
int3
jo
push
mov
ja
mov
addl
sbb
mov
mov
mov
dec
lods
jns
mov
xchg
fidivl
add
mov
out
pop
xor
mov
jnp
push
cmp
cmp
push
mov
pop
lret
push
mov
jecxz
ja
idivl
popa
leave
imul
rclb
mov
std
jb
fcmove
inc
dec
enter
xchg
cmp
cmpsb
pop
dec
into
sub
add
gs
xor
cmpsl
or
or
mov
mov
pusha
fucompp
inc
fs
cltd
pop
test
sub
jnp
jg
mov
jle
lret
mov
xor
stc
push
sbb
inc
sbb
push
insb
rcll
push
xor
jmp
shrl
jecxz
das
cltd
stc
shrb
aas
dec
shrl
adcl
push
arpl
icebp
xchg
scas
sub
pushl
mov
xchg
pop
cli
adc
inc
int3
sti
inc
add
lahf
push
jae
jo
fwait
je
andb
mov
shrl
add
lahf
outsl
mov
pop
mov
popa
ds
push
cmp
push
jbe
xor
setno
leave
das
gs
es
daa
mov
and
pop
and
jmp
push
aaa
hlt
in
mov
out
inc
xor
fdivs
loope
nop
es
mov
sbb
jno
pop
aas
cld
stos
inc
inc
in
cmp
sti
cltd
add
pop
xchg
add
adc
in
lret
sarb
lret
sbb
push
push
cmp
jnp
outsb
mov
cmpsl
jne
xchg
cwtl
sahf
sbb
pop
inc
mov
popf
leave
pop
cwtl
add
dec
push
ret
mov
push
pusha
in
sbb
dec
pop
jns
int3
lods
adc
pop
ja
sbb
repz
insl
roll
and
sub
sbbb
clc
addl
clc
or
sub
je
lcall
pop
into
mov
fwait
in
push
sbb
mov
lret
add
movsb
ljmp
mov
push
sbb
test
push
inc
mov
pop
repnz
pop
sub
push
stos
es
jae
fwait
divb
mov
in
aad
jmp
xchg
push
lods
lock
rcll
aaa
jmp
sub
sbbl
int
mov
aas
mov
add
mov
popa
lock
in
fnstsw
in
and
xchg
xor
cltd
or
and
imul
cmp
add
push
xchg
xchg
aaa
and
push
nop
fdivl
fwait
stos
add
push
nop
mov
xchg
and
popa
jns,pt
lcall
mov
mov
adc
xchg
ljmp
div
jecxz
fisttpll
mov
leave
adc
rol
add
dec
les
add
sti
jb
jge
jle
addl
adc
icebp
mov
sub
sub
xor
pusha
mov
cltd
stc
mov
js
hlt
sbb
add
sti
dec
jle
lock
popa
inc
xchg
mov
cmp
xchg
mov
sbb
mov
mov
mov
lock
cmp
hlt
mov
jl
outsb
mov
dec
jae
jbe
cs
mov
push
test
pushf
xor
icebp
and
xor
xchg
outsl
cmp
mov
cmpsl
mov
in
jmp
add
cmp
and
cmp
ja
adc
jnp
sarb
pushl
loope
pop
iret
pop
aad
fwait
movsl
ret
adc
das
mov
add
cmp
inc
xchg
mov
ffree
jb
stos
js
std
subl
cld
or
scas
lret
dec
es
mov
test
adc
push
add
sbb
sub
popa
fildl
movsl
inc
das
inc
cmp
sub
out
cli
cli
xchg
pop
outsb
or
pop
sbbl
ficompl
aam
xchg
pop
lods
lea
pop
push
push
jno
in
leave
pop
lahf
cs
mov
adc
xchg
outsb
movsl
cli
ja
sahf
sti
jmp
inc
jns
lret
mov
shll
in
pop
lods
mov
add
fadds
inc
cmp
xor
cwtl
jbe
mov
xchg
jp
lcall
mov
inc
and
pop
std
push
daa
or
es
inc
imul
and
pop
mov
icebp
jp
pop
cltd
std
das
push
lea
mov
inc
lahf
jge
mov
add
mov
sti
add
jp
fwait
cmpsb
aam
or
add
lock
bound
jle
faddl
dec
or
jecxz
ret
pop
mov
mov
enter
push
fcomp
mov
and
push
or
xchg
cmp
bound
rorl
std
mov
mov
fisubrs
outsb
push
jle
mov
cmp
movsb
sbb
cmp
xchg
mov
push
dec
pop
ja
dec
cltd
push
xor
pop
leave
repz
mov
lahf
mov
ficomps
cmpb
pop
fcmovnu
jns
xlat
test
ds
fbld
mov
fstpl
or
xor
xchg
cmp
je
dec
and
pop
scas
pop
fdivrl
mov
xor
jnp
dec
sbb
out
dec
scas
test
dec
mov
inc
fldl2t
mov
mov
inc
sbb
pop
jmp
mov
inc
ror
cmpsl
mov
jp
aas
into
cmp
fsubrl
movsb
mov
or
ret
fwait
dec
push
pop
cld
lods
lods
in
push
cmpl
xchg
gs
jmp
adc
cmp
sbb
cli
mov
test
xchg
stos
in
hlt
mov
lcall
add
adc
cmp
sbb
cli
mov
test
xchg
stos
in
hlt
mov
lcall
add
adc
cmp
lcall
test
xchg
stos
in
hlt
mov
lcall
add
adc
cmp
sbb
cli
push
pusha
test
jecxz
insb
lret
cmp
sub
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
inc
cmp
arpl
pop
push
sbb
push
and
rep
jecxz
xchg
lret
sub
ljmp
jae
arpl
dec
add
push
lcall
jecxz
dec
cmp
ljmp
jae
arpl
dec
add
push
lcall
cmpb
test
push
or
jbe
jp
shll
push
cmpl
sti
fwait
pop
xchg
lods
cmp
dec
add
out
adc
lock
sub
cmpsl
jne
jecxz
daa
xchg
xchg
xor
repnz
push
or
sbb
pop
sbb
xor
pop
jbe
test
dec
in
stos
push
mov
xchg
cmpl
sbb
push
or
pop
xor
mov
add
sub
cmp
ja
add
xchg
cltd
jge
mov
cmc
adc
aas
out
mov
inc
mov
push
repnz
out
shlb
loop
or
mov
scas
and
cmp
iret
or
imulb
mov
mov
push
or
jae
arpl
dec
add
push
lcall
jecxz
xchg
lret
mov
lret
dec
add
arpl
jbe
push
jne
ja
stos
cmp
aad
into
xchg
scas
rolb
in
inc
ss
es
push
bound
jg
dec
jp
adc
cwtl
out
ret
xchg
in
int3
insb
pop
and
pop
add
push
sbb
push
lcall
jecxz
xchg
lret
mov
mov
cmp
arpl
dec
add
push
lcall
jecxz
xchg
lret
mov
mov
mov
js
sub
jo
or
pop
inc
dec
sub
cmp
sub
and
push
decl
mov
push
jge
jns
cmpsb
cmp
sbb
pop
jnp
out
ja
in
xor
cmp
mov
rclb
loopne
pop
insb
cli
add
lods
jae
xor
lock
mov
xlat
jbe
jbe
cld
or
iret
jecxz
mov
sub
jg
and
sar
jmp
std
shl
add
xchg
adc
fisubl
mov
pop
xchg
dec
stos
lahf
stos
pop
fisttpl
es
or
js
stc
and
imulb
sbb
pop
dec
imul
out
jne
popf
xlat
mov
test
push
dec
inc
jecxz
jne
dec
pop
and
testb
cmp
push
fistpll
or
js
push
pop
and
rolb
mov
jb
xor
ss
dec
in
es
sbb
adc
mov
addl
xor
or
xchg
test
lods
jo
inc
jns
iret
outsb
ds
push
icebp
push
push
int
int
outsl
frstor
lret
mov
insb
lret
es
mov
daa
dec
xchg
faddl
jb
fs
cwtl
cltd
xchg
xor
pop
or
scas
add
ficoml
ret
mov
pusha
cwtl
stos
push
int
movsb
mov
and
pop
sbb
push
and
pop
sbb
sub
mov
movsl
popa
mov
sub
sbb
and
and
insb
sbb
sbb
add
mov
dec
xchg
xchg
push
or
cld
int
sbb
or
mov
cmpsb
or
sbb
adc
pop
mov
aaa
lret
sub
and
pop
push
imul
mov
mov
ficoml
mov
roll
xor
adc
mov
or
fadds
mov
inc
fwait
dec
dec
xor
and
call
iret
in
ljmp
jge
adc
fldl
xchg
out
movsl
cmp
xchg
inc
adc
ljmp
mov
jl
add
jg
xchg
lea
ret
out
mov
mov
mov
dec
jmp
inc
push
scas
xchg
xor
in
cmp
xor
in
inc
dec
xchg
lret
scas
sbb
hlt
sub
cmp
sbb
push
push
cmp
iret
inc
out
dec
test
sub
dec
lods
movntq
out
addl
out
sub
mov
pop
push
sub
in
stos
mov
popa
mov
mov
scas
dec
push
jle
std
inc
lock
adc
out
inc
test
inc
clc
mov
lods
out
outsl
push
nop
negl
pop
mov
scas
fisubs
loop
test
scas
add
bnd
nop
imul
aaa
fisubl
sbb
mov
ret
mov
div
cs
js
jnp
lds
arpl
xchg
xchg
js
movntq
xor
mov
frstor
mov
out
nop
decb
sub
imul
push
cld
mov
or
pop
push
mov
cmp
push
loopne
mov
cltd
notl
or
lea
orb
pushl
sub
inc
dec
dec
ds
daa
cli
inc
test
out
cmp
jl
jb
xor
lods
int
or
jp
adc
fcmovnu
icebp
inc
repnz
adc
push
mov
stos
adc
movsb
popa
sbb
pop
jnp
andb
shrb
cmp
lds
cmovns
cmp
repnz
sbb
mov
jle
test
cmp
sub
lds
xor
push
into
pop
add
push
movsl
jae
push
xor
fimuls
add
cltd
aaa
mov
enter
cs
jle
inc
lret
or
mov
rcrl
mov
pop
mov
mov
cmovb
fstpl
enter
xchg
in
and
popa
add
cltd
sbb
ret
and
cs
frstor
popf
mov
dec
je
scas
decb
sub
cmp
cmp
nop
fildl
add
jecxz
lret
push
dec
shll
and
mov
daa
insb
ljmp
cmpsb
mov
imul
in
pop
sbb
cmp
adc
jmp
ja
pop
sub
stc
cmp
dec
fadd
lret
mov
fldl
addb
pop
sub
into
mov
fists
push
les
call
jae
movsl
fstp
dec
orb
xor
aad
movsl
xchg
mov
enter
popa
mov
mov
data16
jno
test
dec
das
jge
sbb
lds
jb
push
fnstenv
inc
xchg
imul
mov
outsb
pop
sbb
push
jbe
add
dec
les
add
dec
inc
insl
pop
mov
push
jo
flds
and
dec
cmp
or
adc
cmp
mov
jbe
fsts
push
inc
dec
frstpm(287
outsb
int3
mov
mov
xchg
fld
lds
out
mov
cmc
cmpsl
dec
jp
mov
xchg
jge
es
jb
stc
aas
pop
sbb
adc
loopne
test
pop
leave
sbb
push
or
mov
fldcw
rcl
jns
jnp
das
rcrl
leave
lret
cmp
lock
insl
subl
icebp
negl
mov
ret
movsl
adc
dec
clc
and
push
sub
cld
fisubrl
cmp
cmp
iret
outsb
loop
xchg
lods
and
addr16
in
mov
je
inc
out
stos
lcall
imul
xchg
stc
fnstenv
mov
sub
adc
mov
adc
pop
rcrb
fnstenv
pushf
xchg
in
sbb
inc
fildll
xor
in
xor
or
imul
xor
dec
mov
push
pop
ja
mov
call
add
mov
iret
mov
imul
push
xor
adc
pop
inc
cs
and
out
aam
add
jl
mov
in
cmpl
adc
push
pop
adc
sahf
adc
and
stc
test
push
jge
push
mov
mov
push
jnp
out
pop
add
mov
inc
add
push
mov
inc
popf
jb
add
std
mov
popf
jg
xor
pop
mov
sub
ss
dec
popa
adc
ss
enter
arpl
push
push
outsb
outsl
nop
push
xchg
movsl
cld
mov
gs
cmc
push
leave
jecxz
xlat
mov
mov
loopne
sbb
mov
fsubr
sub
sbbb
jne
lret
add
jns
xchg
orl
fs
rcrb
sbbb
push
shrl
xchg
dec
inc
enter
jb
sbb
add
sbb
adc
mov
lock
inc
inc
jmp
repnz
lcall
add
xor
mov
mov
ljmp
xlat
testb
mov
incl
xchg
andb
mov
pushf
mov
jbe
popa
xor
test
pop
dec
fimuls
dec
inc
xchg
sbb
mov
subb
pop
jl
sub
icebp
cmpsl
jnp
es
and
in
ret
addr16
shrl
push
sub
nop
inc
xchg
fdivrp
fsubrl
movl
pop
add
sbb
mov
stos
mov
int3
jle
data16
cltd
popa
daa
mov
imul
pop
and
push
scas
jns
cmc
loope
xchg
mov
dec
ret
add
jbe
arpl
stos
jecxz
xchg
in
push
out
mov
adc
mov
add
gs
mov
outsl
mov
dec
pop
fistl
lods
fldl
jecxz
ret
movsl
dec
inc
cmpsb
dec
icebp
cld
jns
mov
stos
mov
xor
adc
int3
test
pop
nop
mov
jnp
cmpsb
lret
mov
test
loope
mov
hlt
loopne
pop
mov
je
push
rolb
jmp
std
aam
inc
xchg
lods
sub
add
sub
push
and
in
fwait
mov
lods
shlb
xchg
add
pop
push
movsl
jecxz
dec
adc
or
push
xchg
xlat
out
imulb
int
js
in
je
ds
ja
jmp
sub
leave
sub
movsb
mov
mov
mov
cmp
push
xlat
call
pushf
xchg
and
jmp
incl
push
sbbl
mov
fistps
dec
mov
push
push
sub
jmp
xchg
dec
popf
addb
fldpi
or
scas
mov
in
dec
mov
push
mov
andl
sub
dec
and
jmp
inc
bound
addb
sub
push
mov
sub
sbb
inc
push
test
jno
pop
xchg
jno
cltd
fstp
sbb
cld
data16
es
outsl
fs
movsb
lahf
sbb
pusha
test
sub
call
out
fidivl
sbb
jl
fadd
out
xor
push
mov
pushf
fucomi
mov
pusha
adc
leave
sub
test
stos
xor
adcl
sbb
and
das
sarb
into
push
sub
jp
movsb
push
pop
xor
js
icebp
mov
xor
aam
call
loope
repnz
or
fcmovnb
sub
or
arpl
lds
sub
sub
ja
push
movsb
adc
lcall
xchg
xor
pushf
push
jo
les
jmp
lret
sbb
mov
push
sbb
lds
rorb
push
mov
scas
outsl
repz
pavgw
mov
and
dec
inc
cld
cli
lea
xchg
fisttpll
dec
enter
and
icebp
cs
cli
dec
pop
add
and
pop
inc
mov
xor
dec
inc
add
mov
out
push
xchg
pop
test
addr16
cmp
mov
cwtl
test
ja
frstor
sbb
enter
test
bound
jns
pop
xchg
xor
aas
loope
adc
stos
mov
rorb
adc
pop
pop
jecxz
shll
push
ss
imul
icebp
orb
outsl
iret
mov
cmp
mov
call
or
ljmp
push
push
pop
xchg
ss
mov
seto
out
mov
push
loop
in
addr16
pushf
mov
and
in
int
cs
xor
cmc
scas
cmpsl
mov
stos
pop
jecxz
lahf
add
sub
xchg
test
dec
mov
cmp
dec
sbbl
jp
ja
xchg
hlt
jle
mov
push
out
lea
pop
cli
jmp
sahf
test
push
ret
mov
or
setns
mov
repnz
mov
mov
lcall
sub
mov
icebp
jmp
pop
icebp
gs
inc
push
jne
dec
outsb
mov
push
dec
cmpsb
pop
nop
mov
bound
sbb
push
nop
pop
jg
call
adc
adc
fdivrl
movsl
sub
iret
shl
movsb
jle
bound
stos
mov
mov
adc
push
imull
loopne
lret
add
sub
lcall
fdivl
xchg
push
movsb
jmp
bound
mov
lret
cmp
fcompl
lds
pop
cwtl
xlat
nop
xchg
jno
repnz
sahf
sbb
mov
sub
mov
jbe
clc
mov
cmpsb
dec
push
dec
and
int
int
jno
loop
pop
jl
test
scas
mov
mov
xchg
test
xchg
aaa
ret
mov
xchg
adc
mov
imul
and
push
cli
leave
shl
mov
scas
movsl
pop
sti
or
jnp
gs
sti
mov
adc
and
in
inc
cmp
mov
lcall
out
insl
mov
popf
jnp
inc
ljmp
scas
fnclex
dec
jle
inc
je
mov
in
adc
push
sti
lds
scas
movsl
mov
cmp
scas
lea
out
mov
std
xchg
xchg
enter
jmp
pop
sar
jecxz
inc
xchg
repnz
lcall
repz
subb
mov
fisubs
inc
jl
push
nop
lret
pop
cld
push
push
pusha
loopne
cld
mov
push
int
clc
push
inc
pop
ja
sub
pop
test
adc
dec
mov
mov
xchg
jbe
ljmp
sub
mov
ja
mov
mov
push
dec
int
clc
sub
push
inc
push
xor
inc
sub
stos
repz
mov
and
aas
mov
cmpsl
incl
jo
pop
xchg
xor
cmc
xchg
fwait
sti
and
in
pop
adc
rolb
dec
and
jge
mov
inc
cmp
pop
mov
repnz
clc
lods
pushf
and
dec
xor
mov
popa
loop
dec
sbb
and
stc
sub
jge
repnz
xchg
fs
out
mov
xor
dec
addr16
dec
cli
xchg
mov
stos
leave
adc
jne
mov
repz
lahf
dec
ret
dec
mov
daa
cli
cmpl
stos
adc
push
jno
imul
jle
dec
fdivrs
negl
adc
inc
or
bswap
inc
std
loope
or
or
mov
rcrl
jp
lods
outsb
xor
sbb
shr
ds
stc
insb
mov
pop
mov
cmpsb
rorl
push
out
mov
sbbb
xor
les
jmp
das
pop
shl
cmp
adc
les
adc
dec
mov
add
mov
mov
lcall
mov
lds
mov
push
gs
jnp
xor
lods
push
shr
out
stc
adc
xlat
add
rclb
fwait
dec
js
jb
xor
and
push
ret
xor
xor
cmp
loop
mov
sub
and
mov
bound
add
outsb
loopne
cmp
lea
jae
mov
jmp
lret
aam
cmpb
stos
mov
mov
cmpsl
and
cs
xor
inc
js
fisttpl
in
adc
xorl
push
jecxz
int
mov
mov
cld
dec
push
and
fcmovnu
inc
das
and
pushf
sbb
das
ljmp
pop
fsubrs
push
and
push
sub
jg
out
xchg
adc
bound
stos
mov
ret
push
add
cli
dec
arpl
xchg
pop
adc
xchg
cmpsl
pop
rcl
fbld
int
test
lret
jl
or
cwtl
insb
int
sub
and
push
cmpsb
xchg
pop
cld
call
xor
pop
sahf
xchg
cwtl
popa
adc
cmpsl
jmp
push
out
inc
jne
outsb
dec
cmp
or
cwtl
adc
fwait
push
pop
cmp
push
push
jl
bound
xor
jmp
aam
pushf
cmpsl
pop
ja
fs
gs
rcl
pop
push
js
cwtl
insl
cld
pusha
mov
mov
inc
and
add
or
mov
shll
push
mov
add
lods
ret
xchg
push
in
jecxz
mov
cmp
push
int3
notb
shll
and
inc
imul
cmp
and
shlb
jns
js
and
xchg
stos
push
mov
and
add
pop
cltd
ret
test
sar
sti
xor
stos
add
les
pop
xchg
cmp
sub
arpl
fimull
out
xlat
mov
in
loop
xor
adc
std
xchg
icebp
push
and
lea
daa
adc
cmp
adcb
push
dec
gs
idivl
mov
lea
and
test
push
push
xchg
adc
andl
mov
les
sub
pop
lcall
jno
popa
fsubs
je
shll
gs
sbb
out
and
xchg
cmp
arpl
jns
movsl
clc
stos
sahf
or
pop
pop
cmp
inc
cwtl
ficoms
insl
cltd
xor
push
dec
xor
jl
mov
fnsetpm(287
mov
aad
mulb
push
pop
sub
jp
jmp
lret
in
loope
icebp
stos
add
pop
int
mov
scas
out
inc
xor
aas
sti
push
fstp
stos
fwait
inc
fcmovne
jne
sbb
mov
xchg
mov
sbb
mov
dec
sbb
rolb
adc
or
mov
xchg
mov
push
inc
inc
xor
mov
or
loop
nop
jg
aaa
sbb
push
cld
movntps
dec
cmp
popf
lods
movsb
pop
test
xchg
cmpsb
xor
xchg
cmpsb
shrb
insl
cmpsl
lods
sti
dec
rcll
call
aad
mov
fadds
sbb
pop
dec
fistps
test
cltd
ror
add
and
popa
and
xchg
sti
push
pop
test
fadd
sbb
add
pop
fdivl
fxch
lea
lahf
sub
xchg
fwait
imul
in
push
mov
jl
and
je
add
lahf
xchg
fcmovnu
ret
xchg
pop
push
adc
sub
stos
cmp
push
sub
arpl
int3
pop
mov
jmp
inc
jl
repnz
clc
in
addl
int
into
insb
rclb
jae
mov
cld
lods
xchg
push
imul
insb
out
mov
test
sahf
adc
rcll
lret
pushf
repz
sub
aad
sub
aad
xchg
push
dec
icebp
xchg
cmpsb
pop
rcrb
sub
push
movsl
mov
or
dec
es
mov
inc
mov
mov
xor
adc
addr16
xorb
xchg
mov
out
pusha
lock
loopne
test
nop
jns
addl
mov
sub
out
dec
aad
iret
decl
or
insb
xchg
test
sbb
out
mov
mov
repnz
dec
inc
sbb
push
in
imul
or
aas
mov
adc
fs
mov
jle
mov
mov
push
cmp
out
ret
fidivrs
mov
push
in
out
gs
or
js
dec
es
cmp
in
mov
enter
cmpsb
addr16
shl
xchg
add
inc
jbe
cmpsb
push
insl
push
and
cmc
std
out
push
les
dec
scas
push
or
xor
or
std
aas
sub
repnz
sahf
clc
icebp
xchg
iret
pusha
ret
push
xchg
mov
xor
xchg
pop
ret
sbb
push
mov
mov
sbb
pop
push
xchg
and
mov
inc
cmp
xor
insb
adc
popf
mov
or
and
aad
in
add
es
dec
addr16
ja
xor
xor
dec
enter
mov
add
imul
mov
cmpsb
sub
stc
sub
ljmp
mov
or
inc
add
cmp
std
push
mov
dec
aam
inc
mov
ret
fiaddl
cmpb
jg
loope
cmpsb
add
addr16
subb
cli
les
jne
add
out
push
pop
sbb
pop
cmp
xor
daa
xchg
test
repz
je
mov
jae
pop
cmpsl
sbb
stos
and
mov
in
lea
out
in
xor
dec
int3
pop
xchg
add
repnz
push
repnz
fcmovnbe
or
mov
testl
jnp
push
std
lahf
dec
mov
rolb
fwait
or
mulb
pop
jp
in
push
hlt
pop
cltd
mov
out
mov
jno
cmp
dec
cltd
dec
xor
insb
cmpsl
cli
cmp
or
dec
outsb
fcomip
cltd
pop
arpl
inc
lock
orl
test
cmp
daa
mov
xchg
pop
inc
pop
sub
negb
xor
scas
imul
xchg
loopne
test
cmp
mov
push
pop
mov
dec
pop
jne
jno
push
in
movsb
add
or
xchg
xor
mov
xor
mov
out
clc
mulb
mov
sub
pop
mov
push
and
xor
test
xlat
xchg
pushf
cmp
pop
shrb
xchg
cmp
aas
dec
mov
jmp
call
outsb
cmovne
and
cli
sti
or
loop
pop
pop
jae
mov
and
popf
adc
push
mov
bound
fwait
mov
aad
testb
ja
arpl
lock
lea
xor
xchg
adc
sahf
bound
inc
sbb
xchg
out
lods
mov
pop
fs
imul
jmp
shll
mov
imul
mov
push
push
and
inc
fistpl
test
mov
jl
ds
mov
sbb
mov
repz
adc
and
mov
std
icebp
mul
pop
and
sub
sar
push
stos
inc
xchg
ret
add
xchg
mov
and
or
std
adc
mov
mov
bswap
je
inc
leave
cmp
pop
or
dec
in
fildl
out
or
mov
jae
arpl
dec
add
push
lcall
jecxz
xchg
lret
mov
mov
cmp
arpl
dec
add
push
lcall
jecxz
xchg
lret
mov
mov
cmp
arpl
dec
add
push
lcall
jecxz
xchg
lret
mov
mov
cmp
arpl
dec
add
push
lcall
xchg
lods
sbb
add
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
push
cld
pop
test
fdivrs
enter
leave
dec
mov
lahf
arpl
cmp
decl
sbb
pop
call
dec
mov
jg
test
push
iret
push
fisubrs
out
sbb
or
pop
push
cs
inc
daa
mov
ja
push
dec
ret
cmp
cmp
imul
jg
pop
test
inc
mov
push
pop
sbb
xchg
data16
mov
out
inc
psubq
aaa
mov
mov
inc
xchg
push
cmpsl
mov
jae
mov
xchg
jb
adcb
cmp
push
pop
push
jge
rorl
js
pop
inc
mov
lret
lcall
clc
psubsb
fdivl
xchg
add
scas
cmpsl
jecxz
dec
sub
push
je
loopne,pn
jbe
dec
aaa
pop
mov
je
pop
pusha
aas
mov
push
fidivrs
out
pop
pop
pop
pusha
lods
mov
repnz
pop
jo
pusha
cmp
mov
insl
pmuludq
iret
je
enter
enter
test
cwtl
data16
pop
cmpsb
je
add
out
add
cmp
xchg
pop
movsb
sub
adc
sti
cmp
sub
insb
lcall
stos
cmp
cli
add
cmp
ljmp
sub
mov
movsb
aaa
hlt
pop
test
cwtl
jg
js
push
iret
cmp
sub
sbb
or
clc
pop
call
dec
mov
jg
js
push
iret
cmp
sub
sbb
or
clc
fdivrl
pusha
sub
inc
mov
lock
adc
xor
test
and
fcmovu
jl
fsubs
push
pop
mov
mov
fmuls
pop
cmp
orb
daa
jo
inc
jp
in
ret
and
jle
xor
mov
test
leave
sub
sysret
push
mull
jo
cmp
cmpsl
xlat
stc
and
xor
dec
sub
call
mov
jae
lret
fdivr
loop
rol
mov
adc
subl
pusha
in
aas
sarl
sub
push
arpl
inc
aad
pop
movsb
xorl
jmp
dec
repz
lea
aaa
scas
in
pop
jb
ret
dec
lcall
mov
dec
jbe
and
inc
out
aad
cmpsl
pop
push
insb
push
push
mov
mov
mov
je
mov
xor
insl
imul
mov
fxsave
push
scas
sti
sub
cld
dec
icebp
repnz
cmp
mov
je
into
pop
push
lcall
out
push
popa
jecxz
fstpl
ds
xchg
ljmp
sbb
cmp
fst
insb
dec
xchg
xchg
mov
inc
rolb
adc
and
sbb
pushf
xor
pop
fnstsw
sub
dec
lret
mov
xchg
mov
mov
mov
add
adc
ds
sti
mov
fucomi
loop
push
dec
xchg
push
outsb
fwait
fwait
dec
push
repnz
jae
mov
push
inc
ds
and
sbb
ret
fsubrl
daa
hlt
mov
cmp
adc
je
xlat
sub
roll
pop
test
dec
ret
addb
sbb
out
xchg
and
cmp
enter
push
lahf
and
ficompl
bound
mov
pop
jge
xor
jno
aam
dec
lahf
and
test
jb
in
inc
jbe
inc
and
insb
jp
out
fmuls
int3
mov
repnz
setge
cmpsb
pop
bound
divl
pop
push
adc
mov
add
or
dec
sub
lods
sti
insb
out
lcall
dec
push
lret
jnp
inc
cwtl
jo
cli
push
std
in
clc
cmovno
fs
shr
loop
sub
sbb
out
and
aaa
out
jmp
push
mov
xor
mov
leavew
push
add
pop
sbb
cmp
xlat
adc
push
repz
or
push
mov
adc
js
cli
push
fsubrs
mov
int
inc
es
sarb
and
sub
jecxz
inc
add
das
stos
outsl
aad
xor
or
or
in
sbb
mov
sub
or
aaa
dec
sub
mov
xor
pop
popf
loop
pop
mov
or
iret
ror
and
mov
repnz
mov
pop
xor
push
mov
xor
xor
iret
push
add
lret
xchg
sahf
xchg
xor
ret
adc
or
mov
popf
sub
cli
jb
into
and
add
dec
inc
mov
push
and
xchg
ret
cmp
loop
xor
mov
repnz
lds
or
or
ret
sbb
cwtl
jp
ffree
insb
out
pop
pop
popa
sub
mov
clc
sbb
out
mov
inc
setae
cwtl
aam
int
mov
inc
mov
push
pusha
mov
xchg
or
push
idivl
into
std
notl
push
and
iret
cld
ret
inc
and
and
aad
mov
inc
push
andl
dec
push
mov
mov
ja
in
imul
lcall
add
jnp
mov
inc
cmp
sbb
jno
pushf
dec
xor
aad
mov
adc
or
xor
dec
push
pushf
arpl
data16
and
fs
out
mov
into
ffree
xchg
jmp
lock
dec
lds
sub
inc
xchg
pop
add
xor
movsb
mov
in
shll
xlat
pop
int3
divb
out
test
aad
mov
inc
das
adc
mov
or
jl
jne
mov
inc
out
adc
add
mov
sub
dec
std
nop
adc
out
fimuls
nop
rorb
add
mov
push
sub
cs
and
shrb
jp
mov
push
je
aad
mov
addr16
pushf
inc
loope
xor
insl
jnp
and
ss
mov
shrl
in
or
or
push
mov
xor
aad
sub
popa
pusha
out
xchg
pop
mov
mov
lock
sbb
addb
ds
cmpl
xor
fidivs
adc
popa
aaa
push
jbe
out
jg
addb
jne
push
cmc
pop
add
les
mov
sub
adc
sub
jae
aaa
and
jmp
out
push
mov
hlt
sti
daa
or
enter
or
nop
and
add
sub
lret
xchg
xchg
or
adc
jge
jg
fs
and
mov
hlt
cwtl
mov
call
push
fwait
jb
enter
mov
imul
addb
dec
aad
outsl
mov
push
out
jl
xlat
aaa
sub
je
push
sub
pop
sbb
push
aam
mov
leave
pushf
jns
mov
xchg
repnz
not
in
sarl
inc
or
ja
jp
cmp
push
xchg
sbb
dec
dec
ljmp
cs
sti
in
movsb
fwait
das
push
mov
mov
push
andb
lods
add
fsubrl
dec
pop
stos
pop
pop
in
cmp
lret
xor
adc
adc
je
in
cli
pop
and
mov
mov
mov
inc
das
xor
imul
jecxz
lds
test
cmp
xor
inc
and
pop
movsl
and
jmp
pop
pop
xchg
or
orps
xor
mov
fidivs
fld1
cmp
popf
inc
loopne
dec
adc
arpl
mov
add
cmp
ret
jb
out
and
xlat
ret
mov
stc
cmpsb
fwait
lea
push
dec
fcom
mov
imul
mov
xor
add
mov
xchg
jae
test
mov
cld
pusha
pop
jmp
jbe
dec
add
jp
shrl
cli
jnp
lret
sbb
sbb
xchg
arpl
jmp
sub
inc
jl
push
js
out
adc
in
stos
jge
fdivrl
pop
sbb
pop
inc
lods
test
lret
jge
or
mov
out
scas
je
xchg
popf
xchg
sbb
jmp
adc
icebp
xor
js
jmp
sahf
cmp
adc
test
inc
pop
movsb
scas
test
out
ss
ret
jne
addr16
xor
dec
push
or
fwait
ret
ret
push
or
pop
sarl
dec
xchg
jg
push
in
push
mov
push
lds
call
jg
xor
movsb
stos
mov
mov
pop
in
push
sbb
hlt
addl
and
pop
and
xlat
loop
pushf
lock
rcll
ret
or
mov
daa
cmpsb
cmc
mov
fcmovb
push
jp
imul
les
sub
mov
jle
push
mov
fnstcw
into
movsl
or
sbb
cmp
sub
mov
push
jle
adc
stos
xor
adc
push
mov
add
mov
cmp
bound
xor
inc
repnz
inc
mov
push
fiaddl
lahf
in
push
dec
jnp
es
fisubrs
add
jge
shll
fstpl
mov
aam
cmpl
mov
pop
fcomip
mov
in
pop
push
dec
pop
or
jl
inc
daa
or
xor
call
sbb
mov
lock
cmpsl
xor
lret
push
cmp
push
xorl
lds
jb
fisubs
negl
mov
push
sbb
pop
dec
lds
jno
cmpb
pop
aaa
loop
push
mov
pushf
xorb
subb
mov
push
and
dec
sub
mov
movsl
aaa
jp
mov
jne
dec
hlt
inc
lea
test
pop
mov
push
sbb
xor
ss
pop
push
mov
data16
xorl
dec
lea
int3
sar
adc
jne
ret
pusha
mov
pop
mov
comiss
leave
into
dec
outsl
and
cs
jp
sbb
mov
mov
dec
and
setbe
mov
mov
and
popf
mov
cmp
mov
ja
xchg
xor
rol
cwtl
ret
lea
mov
sub
or
cmp
jle
fstps
loopne
xor
repnz
mov
call
ret
sub
repnz
mov
dec
push
pop
psubd
and
imul
adc
mov
scas
stos
jno
adc
mov
sub
sbb
lods
mov
mov
nop
std
in
loop
cmp
in
push
dec
or
ror
push
mov
pop
jne
aam
mov
sub
mov
inc
mov
int
movsl
into
in
lock
jno
cltd
sbb
add
jb
outsb
jb
aad
push
mov
lret
add
test
js
pop
sub
jbe
fistpll
repz
jl
fistl
das
insl
sarb
mov
fiadds
pop
pop
inc
pop
push
push
add
jae
outsl
ret
push
mov
cmp
sbb
rcrb
fildll
cwtl
add
jnp
out
in
lret
mov
lret
in
rorb
sub
sar
sbbl
mov
push
mov
andb
sub
test
push
out
push
ficompl
test
in
in
stos
inc
cmpsb
into
ljmp
inc
cli
pop
stos
mov
adc
movsl
icebp
push
js
mov
jno
dec
xchg
mov
popf
push
lds
bound
shlb
pop
fwait
imul
mov
xor
xor
mov
jmp
sbb
or
out
xlat
aas
jbe
pop
xor
or
inc
je
xchg
sbb
mov
mov
out
mov
or
dec
stc
and
inc
inc
inc
in
rolb
sbb
jg
ds
xlat
dec
add
leave
or
add
stc
aas
rorl
pop
movsl
sbb
rol
cmpsb
xchg
mov
jp
loopne
sbb
movsl
outsl
aad
popa
stos
push
popa
fdivrs
enter
push
std
jge
jns
pop
sbb
xor
push
daa
stos
iret
lods
pop
dec
adc
jge
test
jg
sarb
lds
dec
ja
pop
sub
xchg
inc
sub
xchg
imul
mov
sahf
testl
movsb
dec
pop
xchg
data16
sar
adc
sub
dec
das
int3
nop
iret
std
cmp
mov
outsl
js
ss
mov
ret
inc
in
xor
xchg
out
dec
lcall
lock
ja
rol
or
faddl
dec
and
sbbb
mov
mov
imul
xchg
push
mov
sysenter
repz
call
or
xchg
aad
mov
loope
xchg
out
cmp
pop
jle
dec
cmp
psubq
jecxz
rcll
insl
fs
sub
sub
xor
int3
sbb
pushf
xor
and
fadds
jecxz
xor
shr
cmpsb
xchg
adc
sub
in
pop
imul
in
xchg
lret
xchg
mov
and
cs
adc
inc
frstor
adc
es
push
out
fucomip
mov
sbb
stc
out
cmp
inc
insb
jns
stc
push
dec
or
mov
daa
xor
inc
cmp
repnz
dec
xchg
sbb
sub
std
jne
js
inc
adc
test
jb
movsb
jne
lock
fisubrs
cld
mov
jnp
lcall
and
xlat
xchg
insl
inc
aam
add
cltd
cmpsb
ret
lret
rcl
aam
mov
sbb
mov
sbb
clc
ss
push
cmp
ss
xlat
sub
sub
mov
lret
adc
jecxz
stc
cmp
mov
fistpll
movsb
test
neg
orb
sbb
out
cmp
test
cmpsl
test
sarb
loope
shrb
mov
rcll
fucomp
mov
xor
popa
popa
mov
clc
mov
push
mov
fstl
or
and
ds
xor
ret
hlt
outsb
rorl
imul
cltd
inc
xchg
stc
xchg
ds
in
mov
pop
js
pop
mov
inc
ljmp
xchg
cmp
std
repz
dec
add
cmp
dec
sub
cwtl
adc
das
mov
and
mov
push
mov
daa
add
jle
adc
fimuls
and
mov
cmp
imul
orl
outsl
popa
sti
push
dec
jecxz
leave
aas
repz
and
fldenv
aas
outsb
dec
pushf
jg
int
xor
jb
push
mov
shlb
pop
or
ret
leave
jmp
aam
aam
daa
dec
pop
mov
nop
call
push
aaa
and
mov
orb
rcr
jl
or
icebp
popa
add
push
push
lret
sbb
xchg
fnstsw
adc
jae
inc
mov
and
mov
xchg
and
pop
cld
push
jmp
les
jae
out
jge
nop
imul
sbb
dec
and
ret
cmp
mov
insl
xchg
fldlg2
cmpsl
push
andb
loop
inc
and
orl
adc
fwait
or
int
xor
or
xchg
cmc
mov
pop
stos
xor
roll
jl
or
sbb
xchg
dec
mov
adc
and
adc
add
lcall
mov
bswap
out
push
mov
push
fcmovb
sbb
fs
js
shlb
out
loopne
mov
mov
xor
and
push
jmp
int3
mov
mov
cli
xlat
ficoml
inc
popf
push
icebp
nop
xchg
movsb
loope
cli
sbb
mov
cwtl
push
into
lahf
dec
mov
and
aaa
pop
movsl
imul
jb
jmp
inc
mov
mov
push
adc
push
dec
outsl
cmp
inc
push
out
mov
in
jp
dec
sbb
iret
in
lcall
repnz
aam
push
out
xchg
shl
movsl
sub
push
lcall
lret
push
inc
movsb
mov
jl
inc
mov
lds
cmpsb
xor
iret
repnz
xchg
mov
pop
cmp
scas
and
outsb
mov
xchg
jno
add
orb
add
jno
inc
xchg
pop
aad
lock
loop
adcb
fcompl
movsb
xlat
xor
or
rep
stos
xor
and
fsub
cwtl
enter
out
jbe
sub
pop
int
xchg
les
inc
and
arpl
test
data16
dec
jo
adcl
or
jns
and
sarl
fadds
in
sbb
mov
jge
call
push
push
cld
dec
iret
inc
xlat
push
pop
pop
adc
icebp
dec
push
stos
push
xchg
jne
stc
mov
fidivrl
stc
xchg
mov
add
sbb
aas
xor
mov
mov
outsl
ja
nop
fildll
jbe
xor
cmp
leave
insl
cmp
int
xchg
subb
test
out
add
and
mov
cltd
js
orl
cmpsl
leave
call
iret
lods
sbb
stos
jbe
pop
scas
jp
inc
out
enter
push
fdivs
xchg
js
mov
fldt
mov
dec
mov
enter
imul
jmp
nop
int3
dec
call
xor
cmp
loopne
lods
repz
outsb
jns
aam
ds
push
subb
test
inc
inc
xor
repnz
cmc
mov
rcrl
fmull
jo
std
lods
cli
xor
jae
dec
jmp
inc
es
outsl
dec
add
push
ret
mov
lcall
dec
sahf
xchg
movsb
xchg
mov
jo
lea
in
cli
adc
hlt
jge
push
dec
jmp
lds
fcompl
into
std
jecxz
jnp
xchg
jp
dec
cmp
xlat
enter
push
sbb
fbstp
mov
xor
mov
scas
mov
mov
insl
dec
adc
mov
jno
or
je
loopne
testb
adc
xor
decl
xor
lods
and
loopne
scas
jne
pop
bound
sub
dec
pop
lahf
dec
push
cs
int3
add
clc
int
aad
jo
pop
test
sarb
stos
iret
xchg
aas
imul
bound
pop
add
push
leave
sbb
or
inc
push
pop
les
sarl
push
insb
movntps
inc
test
or
shll
cld
jo
jge
dec
xor
js
call
rcrb
cmp
ret
sub
outsb
repnz
out
test
adc
aas
imul
stos
imul
mov
add
sbb
pop
sub
mov
fsub
jg
enter
jle
pop
jb
adc
mov
mov
cmp
mov
or
jae
ja
lcall
push
sub
mov
outsb
test
pop
sub
test
loop
pushf
mov
bnd
ss
lcall
bound
mov
imul
int
fldcw
stos
js
jl
xchg
lds
pop
dec
jge
stos
std
int
sub
in
xchg
jle
repz
lods
push
stc
inc
cmc
cwtl
jno
pop
xor
xor
scas
jp
ja
out
push
outsb
cmp
mov
gs
ljmp
xorl
or
xchg
inc
ret
into
loope
mov
dec
shrl
jecxz
pop
enter
mov
pop
and
outsl
jp
mov
cld
pop
lea
push
test
and
pop
sarb
and
mov
xchg
das
add
adc
aad
call
dec
ret
call
sub
lahf
mov
sti
xor
fstpt
push
jge
adc
popa
pushf
repnz
dec
mov
push
sahf
mov
cmp
arpl
push
dec
xor
lods
cmp
inc
dec
mov
std
in
aam
imul
push
in
mov
sbb
sti
jno
add
sub
pop
int
jmp
or
lds
mov
hlt
outsl
lock
sti
cmp
sub
sub
lods
popf
inc
out
jne
add
xchg
and
negb
andb
add
xorl
add
xor
cmp
push
cmp
pop
fiadds
sub
sub
bound
aas
jle
mov
addr16
sbb
inc
fwait
jge
inc
dec
lods
outsl
push
out
sub
ljmp
mov
test
mov
movsl
sbbl
fldt
inc
out
test
mov
pop
xchg
insb
rcll
pop
mov
push
dec
cli
jmp
jmp
jo
jl
xor
adc
in
enter
test
sahf
scas
cs
pop
in
inc
sbb
mov
fdivs
mov
xor
mov
xor
dec
push
push
rorl
pop
or
aaa
jmp
mov
lods
orb
add
inc
stos
cmp
icebp
das
jl
dec
sub
lods
scas
dec
stos
loop
xor
repz
fs
mov
fst
jne
inc
push
xor
lock
popf
mov
jl
loopne
dec
fs
shll
jl
inc
xchg
adc
aaa
sbb
loop
daa
repz
push
inc
outsb
int
xor
fucomip
push
mov
jbe
hlt
out
sub
jbe
cmp
fnsave
negl
out
loopne
mov
lods
insl
mov
sub
lahf
jns
xor
fadd
cmpsb
data16
xor
inc
xlat
mov
stc
int
test
sarb
jno
test
dec
mov
fwait
inc
mov
sbb
inc
jge
iret
lock
sti
push
mov
test
sbb
pop
cmp
jnp
addb
mov
or
sbb
aam
add
xchg
in
mov
add
outsb
adc
in
sbb
les
adc
xchg
cmc
push
pop
shlb
and
or
jmp
mov
rcrl
in
addr16
bound
pop
sbbl
test
mov
aas
mov
push
sti
mov
jecxz
movsb
sti
insw
xlat
cmc
in
jo
mov
push
addr16
scas
jno
jbe
dec
lods
fneni(8087
xor
in
sub
pop
jmp
fs
push
mov
pop
lds
inc
hlt
rol
adc
mov
rclb
pop
xor
cmpsb
das
mov
add
fstp
xorb
insl
xchg
jmp
xor
inc
push
pop
aad
insl
mov
rcll
mov
loopne
hlt
sub
sahf
mov
sbb
push
loope
pop
stc
frstor
in
xchg
push
out
xchg
sbb
idivl
or
sbb
lret
mov
imul
mov
push
sarl
nop
mov
cmp
mov
loopne
pusha
fnstsw
enter
test
cwtl
jg
js
push
iret
cmp
sub
sbb
or
clc
pop
call
dec
mov
jg
js
push
iret
cmp
sub
sbb
or
cld
pop
out
sarb
dec
mov
jg
jns
insb
stos
pop
mov
sub
adc
in
cmp
or
cmp
mov
pop
test
sbb
dec
jo
pusha
ret
mov
push
adc
jo
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
