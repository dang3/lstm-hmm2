add
add
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
pop
mov
sub
jle
out
push
inc
in
pop
outsl
sub
add
pop
add
add
push
add
add
add
add
add
loope
verr
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
pop
out
jle
and
daa
add
add
add
add
add
xchg
jecxz
rolb
imul
add
add
add
add
add
add
add
add
add
add
xchg
out
test
push
add
add
add
add
inc
add
add
push
add
add
add
loope
gs
add
add
add
out
test
insl
add
out
jno
push
add
add
add
out
call
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
out
lahf
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
insl
add
add
add
add
add
mov
roll
cmp
addb
add
add
popl
add
push
add
add
add
xchg
inc
add
add
add
add
xchg
test
pop
add
push
scas
add
int3
add
add
ja
pop
add
add
popa
add
add
add
add
add
insl
add
add
add
add
add
add
add
inc
add
add
xchg
add
out
out
pop
add
push
scas
add
add
jl
cmp
pop
add
jmp
add
add
add
add
add
push
add
add
add
add
out
push
add
or
add
add
add
dec
add
add
add
add
out
push
add
add
add
add
sub
add
std
push
cmp
into
add
add
add
push
add
add
out
out
fldl
add
or
inc
add
add
add
add
add
add
add
out
add
add
or
xchg
cmp
xchg
add
testb
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
dec
add
inc
add
add
add
add
dec
add
add
add
leave
add
add
add
add
sbb
add
dec
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adc
or
mov
pusha
add
add
add
je
int3
add
add
add
add
ret
add
dec
add
add
add
add
and
add
add
int3
add
out
roll
mov
push
add
mov
and
push
add
add
add
add
popl
aam
inc
add
add
add
and
int3
add
add
add
add
out
inc
add
add
out
out
mov
aad
push
add
int3
add
add
add
add
add
pop
add
xlat
add
add
sbb
add
loope
sub
add
add
add
add
cmp
dec
add
add
add
inc
add
push
cmp
push
movsb
and
or
aam
and
pop
icebp
xor
scas
pop
cld
cltd
mov
and
jmp
xchg
pop
pop
mov
imul
pop
jne
jle
shll
repz
pop
sub
cltd
mov
dec
pop
ljmp
push
outsb
insl
dec
stos
pop
inc
out
pop
in
and
dec
rol
push
mov
outsl
jns
push
scas
inc
ret
lret
ret
shrl
jmp
inc
and
stos
les
test
jnp
cltd
xchg
mov
enter
lea
push
dec
les
lea
push
mov
fnstenv
lret
pusha
cltd
sub
dec
inc
fdivl
mov
pop
mov
outsb
mov
rcll
fsubrl
loopne
xor
jno
rcr
inc
pop
and
mov
orl
sar
mov
push
jle
andb
and
cwtl
loop
mov
jnp
mov
stc
and
xchg
or
push
inc
push
dec
add
lret
pushf
les
cmpsl
inc
cmp
out
pushf
pop
adc
notb
mov
and
mov
pusha
movsl
cmp
push
or
pushf
adc
negb
clc
dec
xor
jnp
jmp
mov
ja
jno
leave
aas
fsubl
repnz
xchg
sahf
das
sbb
pop
insb
js
sub
repz
loop
and
mov
jmp
sbb
lfs
jl
jo
mov
mov
adc
iret
push
dec
dec
fsubrs
sbb
in
sbb
es
lcall
xchg
mov
popf
lea
mov
out
xchg
mov
xor
sti
xor
push
sbb
or
dec
scas
lret
mov
outsb
psllw
and
or
xchg
mov
loop
pop
loope
in
pop
mov
in
xor
inc
adc
cmp
cs
push
movsl
mov
dec
jbe
in
test
stc
rorl
xor
call
das
bound
mov
xchg
inc
in
cmp
cmpsb
call
adc
xchg
outsl
fnstenv
cmp
fiaddl
idiv
mov
mov
aad
jb
test
dec
test
adc
popa
ret
sbb
leave
push
call
loop
in
cmpsl
and
xchg
loop
mov
xchg
pop
xorl
lret
test
ss
in
lcall
mov
orl
pop
das
fwait
aas
fidivl
subl
enter
sub
sbb
insb
push
std
sbb
sti
push
mov
xchg
leave
aaa
movzbl
fwait
jle
mov
mov
cmpsl
fldenv
push
lods
jp
push
js
es
jb
loop
pop
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
in
pop
cmpsb
dec
xchg
jl
insb
jmp
push
test
adc
es
jbe
lea
inc
lods
mov
jl
insb
negb
or
cmp
dec
cmp
es
jb
aam
jbe
mov
inc
lods
scas
pop
mov
insb
out
sbb
or
cmp
sub
fsubrl
sbbb
shlb
adc
or
cmpsb
sbb
in
aas
sub
pop
fidivs
fbld
lcall
pop
sub
xchg
loope
or
andl
int3
fnstenv
jmp
mov
xlat
mov
dec
cmpsb
mov
scas
inc
stos
mov
out
out
xor
fxch
inc
cli
stc
adc
xor
pop
jbe
or
or
xor
int3
add
dec
xor
cmp
repz
lods
push
pushf
pop
mov
xor
cmpsb
xchg
es
insl
sub
and
flds
add
in
fmul
addr16
fcmovnbe
mov
pop
fld
or
insl
xchg
mov
movsl
leave
enter
adc
mov
cmpsb
dec
xchg
jl
insb
out
cld
or
cmp
sub
fdivrl
int3
push
cld
pop
in
outsb
pushf
jle
push
mov
ret
xor
xchg
pop
mov
pop
stos
pop
inc
lods
es
scas
push
lret
xor
and
mov
cmpsb
and
xor
jb
imul
push
fwait
jae
adc
adc
clc
fistps
xchg
cs
cmp
sub
fsubl
int3
push
cld
push
in
jbe
data16
inc
lods
mov
cmpsb
dec
xchg
jl
insb
negb
or
cmp
sub
fsubl
int3
push
cld
push
in
jbe
data16
inc
lods
mov
gs
adc
stos
fldl2t
jno
adc
lret
fcomp
push
or
movb
lahf
adc
lcall
icebp
imul
fcomi
xchg
insl
jb
insb
ljmp
rolb
sahf
adc
std
jecxz
jbe
scas
imul
enter
mov
push
ss
inc
insl
inc
mov
shl
inc
mov
pop
pop
mov
jge
out
lahf
in
sbb
lds
dec
jae
mov
adc
in
lret
mov
dec
pop
dec
loope
inc
je
hlt
pop
popf
adc
iret
shrl
adc
cmp
es
dec
or
enter
xor
imul
jg
ja
lea
aaa
jns
loop
and
xor
add
int3
into
pop
fldl
and
cmp
pushf
push
push
jmp
aad
ds
add
xchg
test
fisubrs
sbb
divl
sbb
out
mov
push
mov
into
mov
lret
scas
jmp
cmp
in
jg
push
sub
sbb
popa
sbb
sub
cltd
jne
mov
test
push
fidivl
popf
ret
cwtl
loopne
sbb
push
out
sub
dec
stos
loope
arpl
dec
cmc
inc
push
jg
push
fs
mov
lahf
inc
jmp
cwtl
dec
hlt
mov
cmp
adc
sbb
sub
push
int
jns
add
or
sub
dec
arpl
xchg
push
dec
getsec
or
cmp
mov
mov
xchg
addb
movsl
or
pusha
xchg
loope
stc
sti
mov
xchg
andb
stos
mov
cmp
sbb
sahf
stos
push
pop
pusha
dec
mov
cmp
in
int3
filds
fdivr
pop
lock
lds
inc
xchg
adc
stos
lret
sub
stos
cmp
push
pmulhw
ficoms
negl
sub
fcoms
jmp
jae
out
cmp
inc
scas
dec
dec
adc
mov
push
rol
sbb
dec
es
stos
adc
int
lock
dec
jge
fldt
sub
int
xlat
sub
popa
pop
enter
inc
jge
push
das
fsub
lds
fsubl
push
fistps
icebp
cmpsl
call
xchg
dec
jne
mov
sbb
add
mov
movsb
out
imul
orb
leave
sbb
jno
enter
cld
inc
idivl
dec
jg
mov
cwtl
add
clc
iret
aas
out
outsl
jl
sub
shlb
push
mov
sub
push
jecxz
push
test
pusha
jae
inc
cmp
loop
sti
out
jmp
call
out
xchg
test
xchg
xor
in
or
std
push
cmp
mov
push
xor
pop
mov
fildll
sbb
push
push
leave
mov
dec
jge
jb
pop
inc
xor
add
popf
insb
test
out
xchg
xor
fistpll
sub
jg
push
mov
addb
xor
movsl
je
in
fmuls
cmp
add
shrl
cmp
decb
xor
arpl
aam
nop
aaa
sarl
inc
fmul
movsl
int
cmp
sbb
fnstcw
sbb
push
push
dec
adc
xchg
jno
out
jle
mov
jmp
pushf
mov
mov
repnz
sub
jg
add
stos
loopne
push
aaa
scas
adc
sub
xor
xchg
and
inc
clc
push
movsb
add
mov
and
mov
idivb
jnp
pop
mov
insb
out
sbb
cmp
mov
aaa
lahf
mov
mov
ret
popf
les
mov
shlb
mov
jbe
sbbb
xchg
gs
mov
roll
and
mov
fiaddl
movsl
jg
movsb
shl
and
in
pusha
ficoml
gs
mov
aad
pop
ds
mov
dec
scas
imul
pushf
cli
testl
adc
je
xchg
pop
inc
ror
insl
mov
cld
and
pop
mov
jne
mov
cmp
mov
cmp
cld
cmp
lock
ss
jae
and
insl
inc
lock
jo
jne
shlb
icebp
dec
sbb
mov
pop
cmp
out
imul
insb
dec
inc
sahf
inc
sahf
loopne
mov
in
mov
arpl
aas
stos
ror
sub
stc
mov
push
mov
insl
mov
push
mov
adcb
mov
rcrb
and
in
nop
and
pop
mov
dec
out
lcall
xor
add
mov
fistps
xchg
nop
sub
mulb
mov
cmpsb
push
sti
push
mov
fstpt
xchg
leave
out
mov
int
xchg
push
pop
mov
fisubl
lods
dec
sbb
xchg
add
out
std
jnp
inc
addr16
aas
mov
mov
xor
movsl
out
in
xchg
mov
pusha
xchg
aad
or
push
ljmp
jbe
jp
mov
mov
pop
and
jmp
cmp
and
inc
ds
shlb
ret
dec
push
pop
pop
push
test
jl
xchg
jns
or
push
fldt
js
xchg
pushf
push
and
mov
popa
ds
xchg
shr
adc
sbb
ret
push
push
xchg
jns
fs
iret
xchg
push
sub
leave
push
icebp
sub
rolb
pop
mov
ljmp
rorb
iret
leave
and
lock
cmpl
pusha
mov
dec
xor
adc
fcomps
push
pop
aaa
pop
sub
lret
mov
inc
cmc
hlt
pop
push
scas
and
sub
lret
jmp
mov
fsubrl
out
out
or
lock
les
jecxz
xchg
aad
inc
lods
jb
add
ret
lock
jnp
dec
pop
les
mov
inc
sbb
xchg
fistl
pushf
cmp
ror
cmp
push
out
xlat
jnp
dec
inc
or
fwait
in
and
dec
ret
jge
lahf
nop
stos
iret
sbb
xchg
test
subl
ficompl
xchg
int
xchg
add
add
out
lock
frstor
push
adcl
dec
or
out
cmp
sbb
adc
mov
andb
pop
sbb
pop
es
jno
jge
js
dec
cmp
enter
push
sbb
aad
in
cmp
fsubr
cmpsl
pop
jmp
int
mov
fucomi
test
std
faddl
jl
ss
leave
and
jnp
int
aad
mov
cmp
adc
das
fmull
add
fdivs
jbe
es
jns
sub
int3
jmp
test
jl
push
jns
in
jge
lds
push
pop
cmp
jno
movsl
incb
or
inc
mov
sub
jmp
negl
fldln2
rcrl
dec
xor
mov
xor
inc
jnp
jb
add
or
mov
adcb
testb
mov
test
cmp
xlat
loopne
je
out
mov
mov
scas
ret
pop
adc
or
mov
mov
dec
incb
pop
jmp
jbe
sub
imul
pop
pop
loop
push
adc
les
cmp
repz
sbb
lods
scas
rolb
fistl
sahf
mov
mov
das
xchg
ljmp
mov
jns
aas
rcr
neg
insl
or
inc
fsub
rolb
pop
stc
adcb
imul
cmp
xor
or
and
sbb
stc
daa
jp
or
aam
data16
pop
je
or
ret
push
sbb
push
xchg
les
jl
loope
and
push
sub
mov
shll
pop
dec
and
and
aam
dec
rcrl
leave
sbb
and
fsts
test
ret
sbb
aas
jno
jle
sub
int
or
sbb
pop
in
xchg
roll
sub
sub
int
iret
in
dec
je
cmp
push
or
lds
add
and
jp
enter
inc
scas
adc
and
lret
loopne
ljmp
xor
push
out
dec
dec
or
and
mov
push
gs
jmp
inc
lock
mov
hlt
int3
sbb
xchg
popa
jg
xor
fisttpll
mov
jbe
fxch
jl
inc
lock
xor
dec
push
lahf
inc
push
fcoml
or
xor
icebp
stos
cmpsb
mov
push
cmp
xor
adc
cwtl
or
sub
jns
xchg
loop
add
aam
or
add
mov
out
std
mov
xchg
push
test
sub
xchg
mov
mov
int3
push
xchg
addr16
xchg
fsubl
repz
pop
xor
push
sbb
add
clc
mov
lods
mov
xchg
or
sbb
fildll
jns
outsl
cmp
outsb
inc
mov
xchg
mov
cwtl
or
pop
orl
cmp
sub
mov
in
lret
push
cmp
into
mov
or
or
jmp
stos
cltd
lds
xor
xchg
cmp
cmp
pop
pop
jne
add
icebp
add
stos
or
cltd
push
mov
rcrb
fnstenv
mov
cli
test
mov
ss
jbe
or
aam
dec
push
xchg
popf
mov
lret
mov
dec
jecxz
ret
sbb
shlb
movsl
inc
cld
push
movsl
imul
subb
mull
push
adc
repnz
dec
repnz
inc
mov
int
addr16
jp
pop
daa
ja
jns
lods
aad
icebp
aam
or
mov
aas
xor
or
pop
loop
aaa
cli
mov
cmp
sbbb
xchg
leave
inc
mov
push
inc
das
xchg
arpl
push
pop
lock
inc
les
lret
fwait
in
push
test
xchg
ljmp
push
cwtl
in
push
cld
cmp
lods
inc
test
add
clc
ljmp
cmc
dec
jae
cwtl
negb
xchg
mov
pop
jle
pop
and
cmpl
add
hlt
pop
mov
push
out
jbe
push
loope
and
dec
lret
jb
and
and
out
pushw
jnp
xchg
lret
jno
jmp
lahf
push
cmp
sub
or
cmp
pop
stc
rcr
lds
jnp
fwait
cmp
dec
dec
and
rcrl
xor
sbb
addr16
jns
push
aam
mov
xchg
or
jbe
sbb
cs
jl
clc
sbb
jb
cs
inc
pushf
in
adc
addl
inc
cmp
out
loopne
mov
arpl
pshufw
icebp
stc
and
mov
pop
or
jno
imul
pop
and
ret
push
cld
lods
pop
sub
leave
cmp
test
insl
ja
fsubr
cmp
dec
adc
call
mov
lret
xor
int
cli
roll
xor
arpl
lahf
push
out
rorb
cmp
ljmp
push
dec
test
push
in
cmp
pop
repz
bound
out
inc
pop
ficoms
bound
jl
mov
rcl
sbb
divb
call
ret
popa
ficomps
ljmp
loop
fstl
stc
mov
push
sbb
mov
scas
adc
sub
pop
cld
ljmp
negl
push
inc
int
jle
cmpsl
mov
das
jb
jb
popf
movsb
xchg
pusha
mov
das
dec
add
inc
pop
jge
or
loope
inc
movsl
aad
push
stos
es
arpl
pop
fsubl
inc
es
cld
and
in
add
lret
shll
loope
xor
mov
or
push
and
stc
push
cmpsb
xorl
ret
orl
xor
jl
fcmovnu
ret
test
cmp
inc
mov
push
or
in
je
inc
xchg
dec
xchg
inc
mov
stos
cwtl
xchg
push
mov
inc
mov
js
hlt
add
lret
stc
negl
cmc
popa
cmp
xchg
mov
adc
push
add
sbb
js
adc
jno
push
sbb
mov
jecxz
jbe
mov
fistps
lds
jbe
push
fwait
jp,pt
outsl
push
aaa
lea
push
pop
inc
adc
push
dec
cli
pop
dec
in
mov
fmull
pushf
inc
and
mov
jp
mov
aas
pushf
xchg
add
xchg
xchg
fnsave
inc
pop
or
inc
xor
dec
dec
sti
stos
inc
sarl
jae
mov
dec
out
xor
neg
adc
pushf
mov
mov
push
cli
sub
hlt
mov
popf
mov
adc
test
ffree
cmc
mov
pop
inc
pop
jb
sbb
popa
std
fsubrs
lock
pop
mov
mov
inc
sarb
add
and
or
aas
xchg
push
xor
lock
adc
gs
fnstsw
push
and
into
sub
pop
add
sub
push
int
imul
mov
xor
mull
sub
mov
les
in
enter
ror
cmpsb
gs
pusha
pop
mov
sbb
pop
cmp
fcomps
int
fcmove
or
addr16
out
pop
mov
mov
sar
arpl
fsubr
cs
fisubrs
or
push
fdivr
xchg
jp
adc
nop
mov
xchg
out
pop
push
add
outsl
lods
pop
mov
sub
lret
leave
sbb
xchg
sub
gs
imul
movsb
mov
iret
mov
push
push
and
daa
adc
pop
into
pop
cltd
imul
clc
js
inc
add
in
dec
int
test
mov
popf
push
stos
jge
std
in
int
mov
add
stos
repnz
lret
push
cltd
test
les
faddl
xchg
into
mov
test
outsb
inc
call
add
pop
dec
and
lods
imul
mov
incl
jne
and
inc
imul
repnz
movsb
imul
pop
mov
bound
xor
push
jecxz
inc
sbb
and
inc
cwtl
sahf
aam
lret
lods
enter
inc
cmpsb
enter
sbb
push
out
or
lds
mov
lods
sub
repnz
les
addl
stos
mov
ss
daa
jne
imul
insl
or
mov
in
in
ficoml
adc
mov
mov
cmp
and
sbbb
es
jmp
in
xchg
mov
add
pop
push
sub
mov
pminub
not
mov
xchg
adc
in
pop
lret
cmp
adc
sub
fdivrs
add
xchg
out
into
lahf
sahf
or
cmp
lahf
xchg
sarl
decl
out
shlb
and
cmp
fcoms
xor
jnp
fs
dec
es
mov
add
push
jp
or
xchg
mov
dec
les
addr16
pop
lods
je
inc
push
mov
das
test
iret
mov
imul
cmpsb
mov
dec
xchg
sub
adc
cwtl
or
cmp
xlat
mov
nop
or
xor
xor
clc
cwtl
in
xor
mov
fs
fidivrs
outsw
stc
sbb
mov
stos
cmpsl
psraw
out
ficoms
cwtl
cmp
int3
test
sub
lcall
lahf
test
cmp
fldenv
jmp
pop
outsb
popf
mov
and
dec
movsb
in
mov
bound
inc
call
cmpsl
xor
and
mov
sub
cmpsb
lea
push
or
inc
ss
notb
sti
pop
jae
cli
pushf
movsl
stc
ret
mull
dec
mov
xchg
mov
mov
mov
cmp
xor
outsb
sbb
cltd
clc
sbb
loop
push
mov
mov
add
popf
enter
dec
or
inc
pop
and
dec
push
push
cmp
mov
push
insl
mull
out
test
cwtl
pop
jecxz
imul
dec
mov
inc
add
subb
testb
out
lahf
fwait
xorl
and
pop
sub
inc
pop
pop
popa
adc
rolb
lods
xchg
dec
outsb
andb
imul
mov
sbb
mov
sar
hlt
adc
push
addr16
adc
shll
dec
cli
jmp
mov
xchg
fnsave
mov
ret
push
or
insb
std
cwtl
or
jb
sub
xchg
jmp
out
mov
fst
in
push
das
adc
cmpsl
out
mov
or
or
out
dec
inc
or
and
xchg
aam
movsl
int
xchg
dec
stos
les
cmp
call
xlat
and
scas
subl
ljmp
scas
ret
mov
pushl
push
and
sub
jge
aam
in
mov
jae
dec
add
hlt
aam
int3
sbb
cmpsl
jg
arpl
mov
add
or
clc
cltd
dec
pushf
sbb
and
mov
push
dec
adc
pop
iret
add
aad
mov
fwait
aas
xor
add
nop
dec
xlat
shld
inc
add
jae
je
xchg
mov
movsb
movsb
inc
lret
adcb
call
mov
sub
or
icebp
mov
xor
jg
cmp
mov
notl
and
in
mov
jno
cmpsl
push
mov
mov
adc
adc
add
fisubs
push
adc
test
mov
pmulhuw
daa
adc
mov
clc
pop
or
mov
dec
and
sahf
adc
push
mull
lea
inc
ret
stos
out
xchg
sbb
mov
xor
out
mov
lret
sub
es
pop
pop
sahf
push
jns
jo
in
loopne
pop
jae
mov
gs
insb
movsl
int
pop
push
adc
inc
in
xchg
fidivrs
rclb
test
jmp
xchg
leave
ljmp
test
sahf
cmp
vcvtpd2dq
sbb
int
or
std
lret
xor
lcall
push
inc
fcompl
lcall
mov
fs
xchg
fs
test
cmpsl
mov
divl
jb
inc
mov
pop
aas
mull
mov
xlat
xor
mov
xchg
out
in
fmull
orb
push
push
push
sub
lcall
pop
faddl
fstpt
repz
outsb
hlt
xchg
or
sub
inc
jmp
iret
fucom
or
adc
cmp
les
loop
mov
cwtl
xor
cmp
sahf
adc
insl
shlb
into
mov
jmp
xor
mov
mov
add
cli
or
dec
and
es
and
in
xchg
insl
adc
xchg
mov
test
arpl
outsb
into
mov
sub
arpl
out
xor
or
mov
aam
test
in
jo
test
cs
movsb
in
mov
mov
shrb
xor
cmp
imul
xor
enter
dec
pop
in
pushl
fcoms
cmp
or
sub
mov
mov
add
adc
pop
mov
lods
cld
or
pop
cmp
xchg
test
imul
inc
cmp
and
mov
cld
mov
cmpsl
in
cmpsl
mov
pop
xor
sub
fwait
mov
or
loope
adc
rcl
mov
dec
or
add
dec
jno
sbb
pop
fcompl
cmp
dec
mov
add
in
sarl
sub
jnp
mov
outsl
add
jle
nop
jg
pop
fstpt
sub
loop
adc
or
orb
cltd
rorb
sbb
nop
lret
sub
pusha
aam
mov
sbb
arpl
pop
rorl
popf
add
push
push
dec
mov
lock
jbe
idiv
in
add
gs
jg
push
sbb
pushl
xor
add
xor
jp
nop
aam
loopne
addb
outsl
or
jp
pop
mov
cmpsl
fstps
mull
orb
cli
rcll
xchg
frstor
xrelease
mov
test
fadd
cltd
pushf
push
mov
ljmp
lret
adc
adc
or
sar
mov
pushf
and
cmp
leave
lret
lahf
test
dec
adcl
pop
lods
les
mov
ljmp
push
mov
xchg
cmp
clc
inc
data16
out
lret
aas
xchg
pop
sbb
pop
test
mov
jg
aas
testl
loop
imul
and
out
mov
dec
sbb
repz
insl
adc
cmp
mov
sbb
add
push
xor
aam
mov
les
or
loope
pushf
dec
push
stc
mov
in
fbld
adc
out
mov
cmp
pusha
fstps
jecxz
sub
imul
pop
mov
imul
repz
xchg
loopne
out
sub
sub
lock
or
and
sti
push
cwtl
stos
mov
xor
lods
lcall
movsl
push
dec
and
push
xchg
js
xchg
dec
mov
cmpsb
es
dec
repz
or
test
into
inc
adc
loop
inc
fimuls
nop
ljmp
lods
out
cld
movsb
lods
lods
push
out
adc
add
outsl
pop
bound
cmp
or
mov
hlt
pushf
mov
xor
loop
sub
mov
es
lea
push
inc
push
icebp
push
in
sub
inc
adc
inc
or
xchg
sub
je
popa
pop
fisubrl
push
push
xchg
stc
add
jecxz
addr16
dec
push
mov
repz
cmp
outsl
push
fists
add
scas
mov
stos
dec
push
xorb
ficoms
int3
jns
sbb
mov
js
loopne
dec
je
mov
daa
or
mov
cs
or
mov
in
fcmovne
and
mov
cmp
pop
mov
into
and
xchg
stos
out
ja
das
jle
andb
inc
movsl
dec
xor
lret
outsl
shll
dec
jp
sti
in
sarb
pop
sub
cs
aaa
pop
and
leave
cmp
sahf
movsl
or
xchg
fistpl
pop
cli
sbb
inc
pop
xchg
cli
fisttpll
cmpl
xchg
jb
push
in
xchg
pop
lcall
dec
aaa
or
mov
sub
bound
andps
or
dec
cmp
sbb
or
cmp
sub
fsubl
int3
push
cld
push
in
jbe
data16
inc
lods
mov
cmpsb
dec
xchg
jl
insb
negb
or
cmp
sub
fsubl
int3
push
cld
push
in
jbe
data16
inc
lods
mov
cmpsb
dec
xchg
jl
insb
negb
or
cmp
sub
fsubl
int3
adc
push
in
jbe
bound
pop
xchg
dec
mov
sbb
or
cmp
in
leave
mov
fwait
add
jae
inc
mov
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
xchg
xchg
jnp
imul
popl
mov
lret
pop
sti
xor
es
inc
mov
mov
xchg
jnp
imul
out
orb
jmp
fwait
xor
push
mov
lahf
lret
std
mov
inc
into
pop
shr
fildl
cmpsl
xor
mov
adc
sbb
lret
aas
ret
sbb
nop
push
dec
pop
aas
add
enter
pusha
xor
cltd
lcall
scas
loop
dec
mov
and
pop
stc
ss
push
sbb
cmp
pop
std
jnp
jmp
xchg
dec
jp
dec
aad
stos
fwait
push
xor
add
adc
out
dec
data16
xor
fdivs
imul
hlt
cmp
cwtl
call
push
jp
shrl
add
ret
mov
sbb
fwait
jmp
push
xor
dec
loop
pop
into
cmp
dec
repz
out
cmpsb
and
jl
fldpi
leave
push
outsb
mov
push
mov
dec
cmp
xchg
out
sub
pop
push
and
cmc
das
sti
pop
xchg
dec
mov
xchg
shll
jle
sub
mov
stos
and
push
iret
or
sbb
ret
cmp
mov
cwtl
push
xchg
pop
jae
inc
xchg
ss
push
into
add
add
xchg
or
sub
pop
cmc
or
cmp
sub
fildl
lret
push
sti
es
fwait
inc
mov
stos
jbe
xchg
jnp
imul
out
neg
push
lret
push
sti
es
fwait
inc
mov
stos
jbe
xchg
mov
dec
push
icebp
arpl
xor
outsl
sub
inc
in
jae
popa
aas
jl
cwtl
xchg
push
jge
xchg
and
jle
add
repnz
outsb
andb
nop
in
push
push
sarl
adc
adc
xchg
push
cmp
mov
adc
jo
push
dec
jge,pn
xchg
xor
pop
andl
stc
andl
mov
cs
pusha
sbb
movsl
shr
lret
jb
scas
cmovns
test
xor
int
scas
xchg
cmpsb
xchg
inc
movsb
ljmp
xchg
pusha
in
dec
popa
mov
lea
out
test
cmpsb
mov
scas
pop
pop
fdivrl
repnz
push
out
test
data16
push
lret
mov
mov
push
pop
loope
jp
pop
or
add
adcb
aad
lret
dec
adc
mov
jae
add
adc
mov
adc
sbb
push
loopne
in
jg
adc
jnp
dec
mov
sbb
and
shrb
test
addr16
xchg
jg
mov
loopne
sub
sub
or
pushf
pop
test
add
test
push
scas
out
jecxz
jbe
mov
push
insb
aad
shl
cmp
out
cmpsl
std
test
adc
movsl
repz
xor
push
notl
dec
cld
mov
cmpsl
sbb
jno
loop
sbb
js
pop
cld
jp
adc
mov
sbb
roll
fwait
mov
or
test
and
movsb
loop
and
aaa
fcom
pop
add
out
lods
lahf
loopne
push
rcrb
push
cmc
ja
xchg
sub
movsl
mov
push
into
xlat
add
jmp
xchg
mov
inc
mov
jge
mov
cltd
and
insl
repz
andl
mull
test
cmpsl
sbb
test
adc
gs
stos
xchg
test
push
stc
stc
fwait
mov
jo
nop
and
stos
in
push
push
imul
inc
loop
dec
xchg
int
lahf
push
bnd
mov
lods
iret
jp
and
mov
out
jnp
and
pop
cmp
mov
cmp
cltd
push
cvtps2pi
mov
cmp
cli
paddsb
mov
lret
lds
add
ret
ret
out
data16
lods
lahf
andl
xchg
aaa
push
mov
inc
push
jno
inc
imul
out
xchg
je
je
jp
cmp
sbb
dec
jg
inc
clc
mov
sub
push
ljmp
jle
jo
sbb
mov
addb
xchg
or
cmp
mov
add
add
xchg
or
mov
repz
shll
mov
sub
mov
andb
adc
cmpsl
test
dec
and
push
add
add
jnp
dec
and
inc
ret
jb
aam
add
xchg
mov
and
jne
adc
pop
daa
jge
sub
aam
mov
out
mov
in
pusha
mov
aad
cwtl
xchg
cwtl
xchg
mov
cltd
pop
lcall
ja
or
sub
add
xor
jp
xor
or
std
lods
xor
push
repnz
inc
lock
inc
sub
adc
cs
dec
push
adc
mov
in
and
test
jbe
cmp
cs
dec
mov
xor
add
dec
push
push
pushf
clc
cmp
mov
shlb
rcll
mov
ds
lods
inc
sub
aaa
jmp
sbb
inc
aas
add
cmp
in
xchg
mov
adcb
insl
ja
idiv
loope
das
jle
sbb
mov
loope
and
test
inc
xchg
mov
cmpsl
inc
decb
leave
outsl
mov
mov
pop
dec
pop
xlat
ja
lods
add
mov
mov
pusha
icebp
cmp
inc
mov
sub
scas
jnp
je
hlt
and
jns
xchg
and
scas
mov
stos
push
dec
imul
out
add
sbb
sarl
adc
cmp
jl
mov
jp
mov
adc
and
insb
cwtl
pop
mov
outsb
xor
cmpsl
daa
mov
int3
jp
pop
lods
mov
sbb
outsb
imul
ljmp
sub
xchg
lahf
jge
or
or
dec
pop
stc
and
or
scas
add
in
sarl
lds
and
sub
xor
cmp
xor
icebp
sahf
orb
push
sti
cmp
je
or
xor
andb
mov
test
pop
cltd
cmp
lock
push
jns
or
push
repz
pop
mov
mov
cmp
inc
out
and
dec
sub
inc
lea
jecxz
fcmovb
mulb
push
sub
dec
out
lock
mov
imul
nop
out
negb
fadds
aam
out
cltd
or
icebp
and
movsb
dec
stc
icebp
insb
mov
shll
and
sti
push
invd
out
push
ds
fnstsw
in
xchg
fstpt
adc
push
xchg
xor
sbb
loopne
sub
xchg
cmp
pop
xchg
sbb
test
adc
out
push
inc
mov
push
test
mov
fidivl
in
test
pop
aad
pusha
dec
add
out
xor
xor
add
cwtl
sbb
pop
test
int3
jns
repz
arpl
xchg
jle
sarl
inc
test
in
loop
and
cwtl
std
fucomip
sub
aaa
fdivs
sbb
stos
mov
je
fmuls
dec
add
or
cmp
enter
pop
cli
outsl
cmp
inc
inc
add
aas
int3
adcl
mov
inc
mov
popa
dec
es
lret
in
outsb
js
or
fldenv
jae
loopne
outsb
icebp
test
xchg
cmc
sbb
mov
data16
jo
jno
mov
aam
loope
fiaddl
mov
jbe
inc
mov
and
movsl
das
scas
sbb
xor
or
ja
pop
rcll
adc
xor
aam
xchg
aam
cld
push
lahf
mov
cmpsl
fldl
lret
fwait
inc
ja
mov
inc
push
jge
fidivrs
scas
and
xor
push
fisttpl
jl
sub
mov
pop
pop
sbb
and
ds
out
scas
loopne
lret
hlt
or
xchg
xlat
das
scas
jmp
lods
xchg
xchg
sahf
orb
push
fnstenv
sbb
sub
out
adc
je
cmp
push
add
lods
cltd
mov
in
lds
bound
popf
out
mov
or
push
in
xchg
push
adc
int3
xchg
scas
lock
inc
es
test
mov
andb
movsb
mov
xchg
outsb
imul
les
aas
mov
lret
lret
loopne
or
fildll
lahf
mov
mov
add
test
jnp
popf
dec
icebp
movsb
jg
psubw
inc
sub
jae
out
mov
xchg
je
ret
xchg
xchg
or
in
jo
ljmp
push
arpl
pop
sbb
mov
and
dec
divl
cmp
sub
negb
xchg
call
add
sub
jnp
adc
out
fisubrl
pushf
add
test
fildl
enter
cmpl
popf
xchg
int3
repz
cmp
dec
and
push
push
mov
push
and
lock
jb
lahf
loop
sbb
mov
jae
and
jge
aad
mov
pop
fistps
sub
stc
int3
inc
push
outsl
push
and
pusha
mov
in
inc
push
mov
rolb
sbbl
shll
mov
jo
lock
mov
cltd
gs
test
sub
push
stc
pop
test
dec
jmp
mov
adc
inc
lret
push
add
enter
adc
das
ljmp
sub
jnp
popf
stos
outsl
and
mov
ja
add
je
mov
ffree
or
sbb
cmp
adc
mov
push
or
xchg
lods
dec
ss
enter
outsl
imul
inc
fcoms
inc
repnz
fdivr
or
add
test
bound
mov
arpl
divb
jno
jne
arpl
jbe
rorb
cmp
shl
pusha
adc
push
jmp
sub
jecxz
jecxz
dec
xchg
in
push
fsub
ljmp
bsr
inc
rolb
loop
ss
xchg
inc
or
adcl
popf
xchg
outsb
sbb
xchg
mov
cmp
popl
outsl
icebp
or
pop
or
loope
out
jns
mov
lds
shll
and
cmpb
rcll
fwait
jns
aas
lahf
mov
clc
into
sbb
cwtl
pop
mov
adc
push
push
arpl
loopne
fldt
sti
mov
mov
sbb
push
shlb
enter
ljmp
jae
mov
mov
int
loopne
pusha
fwait
jnp
inc
mov
jle
adc
push
jo
pop
sub
out
jno
sbbl
mov
push
fcmovnbe
sbb
pop
fstpt
movsb
int3
sarb
or
aaa
add
mov
ret
cmp
mov
and
pop
mov
sub
add
orb
push
and
bound
movsl
mov
jg
sbb
addb
lret
push
dec
movsl
and
les
stos
push
jne
xchg
test
jno
cmpsb
sub
out
out
fsts
dec
push
lock
push
sbb
adc
mov
shrl
cmp
xchg
ljmp
das
and
mov
popa
add
shrl
xchg
in
jnp
inc
push
outsl
push
adc
shll
pusha
scas
push
sub
out
dec
cltd
adc
push
adc
mov
push
jns
pop
icebp
lret
cmpl
popl
jecxz
add
xor
test
adc
cs
mov
push
mov
movsl
fwait
add
jno
mov
jmp
sbb
add
dec
xchg
mov
mov
sbb
pop
popa
loop
fisubl
imulb
sub
mov
aaa
xor
cmp
add
arpl
mov
outsb
rclb
pop
jnp
inc
test
xchg
in
ret
xor
push
jge
adc
mov
jg
or
int3
int
push
mov
cmp
mov
scas
fidivl
test
fs
sti
cltd
mov
cli
or
testb
clc
inc
xlat
iret
cmp
dec
add
imul
out
inc
xor
gs
je
mov
test
fcmovne
mov
fnstcw
add
mov
lds
out
loope
or
or
cmp
cmp
push
jecxz
dec
and
repz
int3
pop
lock
js
mov
lods
ss
movnti
add
movsl
inc
fs
add
dec
filds
add
xchg
je
mov
adc
mov
cmp
dec
les
pop
mov
ds
sub
repz
cwtl
ficomps
cmpsl
ss
iret
mov
rcl
xor
roll
das
sub
je
ds
cmp
mov
jnp
lcall
mov
jns
xor
aam
cld
dec
and
stos
cmp
out
stos
stc
mov
lods
shrl
push
inc
pop
xcrypt-cfb
cmpsl
es
inc
std
mov
dec
test
adc
pop
sbb
loope
mov
xchg
xchg
dec
in
iret
cmp
sub
add
sbb
fisubs
jb
mov
or
ficoml
pop
push
movsb
adc
pop
or
or
cmp
mov
pusha
repz
leave
cmp
gs
ss
and
mov
popf
adc
icebp
outsb
or
ss
lahf
cs
addr16
ret
cmp
jb
mov
lret
bound
pop
fsubrl
aad
or
xchg
les
inc
mov
out
ret
add
imul
mov
jge
push
out
mov
cmp
in
xchg
mov
xchg
jge
adc
out
daa
out
pop
sbb
sbb
mov
xchg
dec
shll
jl
and
ffreep
pop
into
cmpsl
lods
sbb
test
cmp
test
or
cmp
movsl
xlat
out
xchg
ret
sysexit
mov
jle
inc
jne
cmp
xchg
daa
pop
sahf
sahf
jo
add
outsb
push
dec
call
cs
in
xchg
rcrb
std
xor
xor
dec
add
das
push
add
sub
in
cs
lret
push
mov
out
incb
adc
sbb
scas
imul
test
test
dec
jnp
std
scas
add
lret
inc
mov
pminub
call
sbb
call
cmp
outsl
push
dec
cmp
out
movsl
mov
rolb
fwait
inc
jge
cmc
jl
mov
push
stc
dec
pop
rclb
cmpsl
rcll
testl
cli
jmp
aaa
inc
aas
push
xor
pushf
mov
push
or
and
fwait
cwtl
popa
loope
lds
sti
nop
add
int3
mov
sahf
cld
out
or
add
dec
cmpsl
test
aam
and
int3
xchg
push
jmp
mov
nop
insl
jmp
aam
push
fs
inc
push
xchg
cmpsb
stc
pop
outsb
push
xchg
mov
rclb
aam
mov
add
ja
pop
sub
iret
js
mov
or
outsb
xlat
inc
leave
adc
aad
jnp
movsb
and
cmp
call
and
das
idivl
scas
mov
jns
lcall
mov
stc
dec
cwtl
xor
dec
xchg
jecxz
mov
out
mov
pop
dec
sub
jb
mov
inc
push
mov
movhps
mov
and
ficoml
mov
mov
add
push
jl
push
adc
aam
stos
lods
arpl
dec
scas
arpl
sub
mov
push
jl
push
ss
or
adc
je
xor
pop
scas
dec
test
jae
and
iret
mov
outsb
jp
dec
push
add
stos
into
test
out
mov
xor
adc
clc
dec
cmp
mov
repz
js
mov
jno
pop
dec
xchg
pop
sub
call
ja
jl
push
pop
xchg
jecxz
jb
hlt
pop
mov
jecxz
push
sahf
lahf
sub
ljmp
mov
jl
mov
addb
addr16
movb
pop
mov
mov
or
jp
mov
push
loopne
add
xchg
imul
mov
mov
repz
push
dec
rcrl
pop
xor
mov
in
out
lods
or
mul
call
and
xchg
add
ds
mov
pop
mov
rclb
andl
dec
sub
xchg
pop
or
push
cmp
shll
test
push
mov
xchg
cmpsl
fstl
cs
movsb
inc
mov
out
stos
jecxz
popa
enter
xor
pop
pop
jl
fisttps
pushf
test
jb
ret
sarl
std
xlat
cli
mov
sbb
hlt
in
sbb
insl
mov
add
jecxz
loop
adcb
lods
std
bound
adc
mov
jb
movsl
push
outsb
mov
hlt
mov
inc
mov
imul
and
fadd
lahf
imul
cmp
ds
dec
xor
and
adc
mov
sbb
sti
pop
sbb
addr16
mov
lahf
and
into
jp
pop
dec
notb
ret
mov
push
xor
xchg
inc
sub
loopne
fdivrs
stos
pop
movb
popa
inc
fsubrs
mov
mov
jp
mov
push
inc
xor
jnp
adc
jae
sbb
dec
push
je
fldln2
mov
sbb
jb
dec
loop
xlat
and
sub
xchg
sahf
das
in
pop
data16
add
adc
in
add
rcrb
add
ss
jbe
std
mov
push
lret
adc
push
add
ret
lahf
mov
lcall
adc
mov
xchg
enter
daa
xor
jmp
add
xchg
imul
or
pop
ljmp
and
dec
sub
sbb
sub
fstpt
add
xchg
dec
test
inc
mov
loop
mov
pop
aas
aam
popf
pop
mov
testb
stc
popf
lock
lock
push
scas
push
out
cli
sti
dec
data16
sub
sti
out
mov
mov
sbb
loope
dec
jecxz
std
jb
cmp
add
xchg
adc
test
das
xchg
in
call
mov
inc
xchg
in
and
pop
mov
mov
mov
sbb
insb
movsl
xor
adc
stos
leave
sub
sarl
clc
push
jns
pop
sbb
sbb
sti
stos
into
dec
fwait
pushf
sub
aad
loope
sbb
or
test
daa
lods
orb
inc
push
enter
in
or
lret
rclb
lahf
out
cwtl
sbb
push
out
push
inc
jp
xchg
dec
inc
insb
lock
dec
loope
dec
mov
jle
dec
lods
fildll
leave
inc
pop
mov
fstpl
sub
inc
ljmp
inc
dec
repz
or
inc
std
mov
scas
ret
add
mov
xchg
or
fucomi
push
mov
lret
xchg
inc
inc
jle
lock
mov
push
or
loopne
pop
pop
dec
shr
sub
rolb
xchg
or
out
leave
xor
shrl
rolb
adcl
fldt
cmpsl
mov
mov
add
jecxz
xchg
lcall
lret
sti
jb
shrb
out
jle
jl
out
or
dec
fldcw
xor
mov
xor
cltd
das
iret
sbb
cwtl
mov
bound
pop
pop
lock
inc
dec
pop
cltd
dec
adc
jb
cmc
insl
mov
icebp
popf
jp
jmp
xchg
divb
pusha
data16
xchg
xor
mov
repnz
das
movsl
scas
insl
jne
pop
pusha
loopne
jnp
mov
sbb
outsb
jno
dec
xor
sub
add
xchg
aaa
stos
mov
loopne
movsb
dec
adc
icebp
xor
cmc
mov
push
sbb
fisubl
jle
sbb
int
sbb
push
call
movsl
mov
push
jae
pushf
cmp
xchg
xchg
jb
xchg
xor
jge
lahf
stos
enter
lock
shr
xor
mov
ja
push
ret
mov
xor
fwait
mov
sub
arpl
hlt
fidivrs
jl
lds
fbstp
aaa
icebp
or
cmpsl
sbb
ljmp
push
jl
movsl
or
push
in
add
imul
mov
data16
mov
mov
fs
xor
mov
fsubrs
inc
cmpsb
stos
xchg
push
mov
repz
jb
cmp
xchg
in
out
mov
mov
sar
es
xor
lock
outsb
xchg
jl
ficoms
repnz
arpl
int
pop
loop
call
hlt
xchg
push
add
push
lds
ret
push
dec
cs
shl
and
enter
xor
inc
or
xor
push
adc
popf
ret
aad
mov
rclb
jae
cmp
push
push
dec
pop
enter
mov
sahf
push
out
out
orl
in
incl
dec
arpl
sbb
sub
outsl
add
or
aas
scas
dec
cmp
scas
dec
jnp
frstor
mov
mov
mov
popl
aaa
insb
mov
ss
push
or
shl
cmova
jmp
ja
shld
cmpsl
fs
jns
jns
pop
test
jne
fistpll
fnstsw
lret
push
xchg
loope
sbb
lahf
inc
xchg
jbe
je
sub
xor
inc
imul
xor
in
push
mov
ret
cmp
pop
or
addr16
jae
daa
mov
addb
pop
loope
repz
rorb
in
outsl
insb
aad
fiaddl
cmpsl
lds
mov
jp
cld
sbb
lea
or
mov
fnstenv
loopne
mov
insl
xor
mov
lds
mov
xor
or
pop
clc
rorb
repz
loopne
imul
jg,pt
add
mov
or
mov
mov
popf
dec
insl
mov
pop
outsl
or
aaa
fsubrs
pop
fcoml
xchg
repnz
aas
mov
lret
adc
dec
or
jmp
dec
jns
inc
dec
cmpsb
mov
pop
jmp
add
cltd
lds
mov
and
jl
sub
mov
cld
cwtl
insl
repz
mov
hlt
call
mov
cwtl
xchg
inc
daa
lea
and
xchg
pop
popl
je
cmp
pop
fbld
aam
aad
mov
sbbb
int
cmc
mov
roll
mov
lea
insl
loope
insb
adc
shlb
or
cmpsb
aad
ret
push
mov
daa
and
sub
cmp
mov
fildl
xchg
adc
sahf
or
popf
mov
mov
lods
mov
inc
dec
lods
nop
mov
sub
ret
mov
sarb
xchg
dec
push
std
push
mov
jmp
add
test
aaa
ljmp
xlat
sbb
or
mov
ss
lea
cmp
nop
inc
xchg
sub
decl
scas
cmpsb
nop
clc
scas
jo
cmc
lea
roll
pop
adc
in
adc
push
popa
jae
push
cmc
cmp
dec
cmpsl
sub
cmc
aas
mov
or
and
add
faddl
pop
jp
ds
xchg
mov
fwait
add
adc
jo
inc
pop
cld
xor
xrelease
push
push
push
mov
sub
fld
adc
xchg
into
je
mov
repz
and
jmp
fstpt
test
sahf
mov
and
js
in
or
push
adc
jb
mov
in
push
imul
mov
sub
mov
sbb
or
clc
xlat
and
inc
cmpsb
ja
sbb
or
cmp
sub
fildl
lret
push
sti
es
fwait
inc
mov
stos
jbe
xchg
jnp
imul
out
neg
push
lret
push
sti
es
fwait
inc
mov
stos
jbe
xchg
imul
cmp
sub
filds
lret
push
repnz
xor
bound
xchg
repz
sbb
cmp
stos
fildl
xor
push
es
in
into
add
inc
sbb
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
or
shrl
lahf
lds
jno
inc
sub
xor
insl
adc
shrl
std
sub
push
pop
inc
sub
xor
insl
adc
imul
mov
push
dec
and
jbe
pop
pop
jne
adc
loope
lahf
icebp
mov
test
in
cmp
popf
fimuls
bound
lret
xor
fnstcw
push
loopne
fwait
in
insl
fsubl
cwtl
shrl
repnz
inc
mov
add
hlt
mov
int3
fptan
inc
mov
cwtl
sbb
int3
rcr
jecxz
lea
inc
sub
pop
and
imul
jp
outsb
or
je
lods
mov
jmp
jb
out
xchg
mov
hlt
std
mov
xchg
jne
js
insl
xchg
xor
adc
dec
aaa
shrb
jmp
out
xor
popa
fistpl
dec
mov
dec
into
jl
insb
xchg
ret
add
mov
in
adc
push
sub
leave
jge
insl
jg
mov
icebp
roll
test
mov
daa
mov
cmp
dec
add
inc
sbb
movsb
into
mov
mov
test
std
dec
add
daa
inc
and
ss
jno
jge
pusha
jb
jmp
mov
mov
std
sub
jno
inc
sub
xor
insl
adc
shrl
std
sub
jno
inc
sub
xor
insl
adc
std
scas
cmp
mov
cmpsl
inc
mov
xchg
icebp
xchg
lret
push
add
pop
int3
jo
ret
sub
adc
hlt
cmpsl
cld
dec
inc
rcl
outsb
rcrb
push
dec
push
in
xchg
lret
adc
divb
cmpsb
mov
mov
pushf
pop
scas
or
cmpsb
ljmp
mov
js
xchg
mov
inc
dec
jo
test
jns
subb
adc
mov
sbb
or
ret
cmp
push
mov
mov
jno
cmp
jge
xor
fisttpll
aam
mov
int3
bound
mulb
inc
pop
lret
push
mov
fbld
push
sub
inc
jb
xchg
dec
enter
test
inc
lods
aaa
push
mov
fs
push
jmp
or
jmp
ljmp
outsb
push
inc
les
adc
pusha
pop
add
mov
inc
mov
into
inc
stos
xchg
cmpsb
gs
fimuls
adc
pop
mov
add
ret
std
mov
dec
jo
sbb
jae
xchg
mov
sahf
aaa
in
aaa
jb
pop
cs
mov
je
dec
pushf
andb
shll
orb
add
leave
mov
lock
in
scas
xchg
into
rorl
jb
aaa
xorl
cli
shlb
mov
and
add
cmp
push
cmp
shl
int3
rcr
jnp
rorb
push
out
dec
repnz
or
cmp
mov
cltd
adc
adc
mov
sbb
sar
cmpsb
rcr
clc
cmp
pop
or
mov
test
hlt
cmc
jns
add
fdiv
repz
sbb
add
push
mov
xchg
iret
sub
lcall
mov
sub
scas
inc
in
addr16
decl
loop
push
lahf
sub
mov
mov
or
movsl
ffree
outsl
data16
sarb
inc
les
andb
or
mov
add
das
xor
sbb
shll
pop
in
test
scas
adcb
arpl
dec
shll
ror
xor
sbb
icebp
mov
cli
xchg
cmp
shrb
pop
mov
loope
or
addr16
xor
fldt
imul
cld
mov
stc
xchg
xchg
or
sub
inc
lods
rcll
cwtl
mov
fistpll
add
cltd
mov
push
cmp
sahf
fcoml
push
push
sbb
outsb
imul
or
clc
push
hlt
iret
inc
scas
lock
cwtl
mov
pop
lods
jb
add
mov
cld
in
inc
push
xor
xchg
dec
mov
in
mov
and
outsl
xor
pop
jecxz
xor
ds
mov
xchg
push
popf
insb
push
cli
lea
mov
lea
shrb
mov
fsubp
rorl
addl
dec
push
pop
push
or
jbe
mov
pop
jge
sbb
std
push
jp
out
popa
xchg
cwtl
clc
push
jle
inc
and
dec
jae
and
cmp
js
xchg
in
pop
lds
mov
cs
mov
jle
adc
xchg
arpl
adc
cld
inc
push
loopne
mov
xor
mov
pop
stos
ja
mov
sbb
mov
insb
mov
jecxz
out
data16
hlt
cmp
xor
xchg
jmp
jne
mov
stos
jecxz
pop
bound
dec
cwtl
enter
pop
pop
out
mov
lds
sbb
cmp
sub
fldl
sbb
mov
stos
shl
add
hlt
cwtl
pop
dec
arpl
imul
out
orb
cs
add
setns
std
adc
add
cmp
xlat
adc
repz
dec
xor
aaa
lret
cltd
sub
jmp
xor
mov
call
jne
sub
pop
arpl
mov
or
mov
mov
pop
lock
repnz
sbb
sub
outsl
andb
sub
mov
scas
xlat
or
xchg
dec
mov
jb
ds
pop
pop
lret
push
mov
xor
fimull
jo
jl
in
inc
xchg
fcomps
push
pop
mov
test
inc
push
add
rcl
lds
sbb
repz
mov
mov
mov
add
scas
std
ret
ja
idivl
mov
pop
push
fnstenv
nop
push
flds
lret
aas
aad
cwtl
push
jne
stos
jmp
lret
fmuls
in
loope
mov
idivl
loopne
int3
out
sub
es
xchg
test
and
push
mov
mov
or
cmp
push
and
cmpsb
or
ret
gs
mov
shlb
jnp
cmpsl
or
cmp
dec
and
add
stc
jl
inc
push
mov
mulb
inc
sub
fistpll
xchg
decl
and
fsts
lods
leave
mov
jmp
cltd
mov
scas
adc
add
aad
jno
cmp
enter
jge
cli
or
push
push
pushf
pop
shl
sub
js
mov
xchg
in
mov
loope
stos
mov
mov
push
xchg
aam
repz
xor
push
in
pop
mov
add
lret
cmpsl
sub
iret
fdivl
xchg
ret
cmpsl
sbb
jb
jl
stos
push
fisubrs
and
mov
or
fsubl
dec
mov
test
xchg
adc
insb
sbbb
jmp
out
in
mov
mulb
jns
test
adc
lahf
pop
pop
ficoml
enter
pop
cmp
popa
and
das
cltd
inc
popa
ljmp
ds
es
xor
adc
and
in
cli
sbb
xchg
add
push
mov
push
test
call
cld
adc
outsb
inc
stos
aad
pop
dec
xor
test
or
pop
add
imulb
mov
inc
push
mov
xor
loope
test
mov
in
mov
clc
or
pop
not
add
popa
mov
imul
mov
movsb
and
test
or
ds
jge
pop
bound
pop
or
loope
cmp
imul
movsb
mov
push
imull
pop
cmp
mov
sbbb
in
cmp
lds
ret
add
jp
jbe
push
add
into
call
mov
inc
mov
fisttpll
gs
mov
pop
frstor
cli
or
sbb
adc
inc
lods
and
ja
into
lcall
ds
mov
aam
jns,pt
outsl
sahf
pop
mov
rcrl
sub
jb
in
bound
outsl
jle
adc
int
lock
push
jbe
js
pop
and
cltd
xor
inc
dec
repz
push
ljmp
mov
xchg
inc
pop
dec
movsl
jo
lret
repnz
call
ror
sbb
push
mov
clc
dec
clc
lret
pusha
jno
pop
popf
pop
cmp
push
cmpsl
lahf
dec
and
push
dec
inc
call
loopne,pn
jp
mov
and
jg
rolb
lods
pop
out
inc
xchg
shll
adc
inc
aad
xlat
std
shll
ja
out
mov
dec
mov
push
jnp
mov
mov
sbb
adc
push
add
xor
arpl
dec
dec
stos
fnstcw
adc
lds
icebp
adc
pusha
lret
sub
sbb
ljmp
aaa
or
or
pop
mov
rorl
pop
andl
clc
sbb
cs
test
lahf
pushf
jb
jne
shll
icebp
aas
push
and
fstps
lcall
mov
sbb
lods
aad
xchg
ret
pop
mov
jb
into
shll
push
ja
adc
xchg
dec
push
add
das
jl
push
and
loope
sarl
inc
fstpt
hlt
imul
jae
push
push
push
out
cmp
in
fldpi
xadd
dec
jp
xor
sti
cmp
inc
xor
push
mov
clc
ret
inc
inc
cmp
out
and
xorb
jbe
xlat
mov
sahf
fs
cld
ljmp
ret
mov
xchg
push
and
roll
shrl
inc
rolb
and
jl
insb
cmc
xor
mov
enter
js
aad
lea
push
loope
es
bound
fstl
out
rclb
inc
cltd
add
rol
push
outsb
jecxz
sti
sti
jnp
lds
sbb
fbstp
sub
adc
leave
out
or
cmp
movsl
js
rclb
movsb
call
jecxz
ds
and
pop
lea
pop
hlt
pop
add
xor
inc
sbb
mov
fisubrl
rolb
mov
xlat
lea
push
push
lods
out
mov
pop
mov
daa
lcall
sbb
cmpsb
jnp
cmc
sbb
sbb
sub
xor
push
sub
push
aas
add
in
movsl
mov
imul
mov
mov
mov
fimull
dec
inc
jp
cli
adc
xchg
jo
or
push
mov
xor
inc
mov
xchg
adc
mov
not
mov
mov
or
cmp
adc
jl
outsb
fadd
cmpl
jecxz
adc
push
jmp
outsl
enter
sbb
cmp
mov
rcr
add
push
lods
ja
je
inc
test
sbb
mov
xchg
push
ja
mov
das
rclb
adc
lods
pop
cs
rorl
mov
xor
mov
mov
lahf
xor
addb
inc
dec
add
rcrl
imul
cmpsb
sub
jmp
inc
gs
dec
sbb
push
jnp
or
mov
xchg
les
pop
lods
imul
popf
push
cwtl
cld
mov
sbb
mov
idivb
lret
ret
jbe
imul
aaa
cli
movsl
repnz
xor
cmp
sti
mov
test
ficompl
xor
mov
cmpsb
sti
and
dec
cmp
sub
xor
loopne
mov
sub
mov
xchg
scas
sarl
subb
add
mov
sub
dec
sahf
dec
lods
lods
imul
xor
or
mov
xchg
into
or
add
adcl
pop
out
lret
ss
sar
inc
mov
sarl
into
mov
imul
int3
adc
mov
pop
movsl
cmp
sub
jo
mov
cmp
adc
add
test
mov
mov
mov
subl
stos
push
lahf
push
mov
shlb
ds
out
inc
sbb
push
popf
je
scas
mov
push
scas
xchg
lds
and
inc
add
lcall
pop
jo
sub
testb
push
jne
enter
loop
mov
add
cltd
mov
mov
incb
inc
daa
mov
push
out
lds
inc
push
jo
shlb
jns
lods
imul
sub
xlat
mov
iret
repnz
push
cmp
inc
jecxz
push
inc
jo
pop
adc
cmpsl
push
jo
xor
mov
aad
add
push
push
cmp
jo
into
cli
xor
enter
sbb
aad
mov
clc
imul
pop
sub
lahf
nop
and
mov
add
sub
dec
cltd
lods
iret
jmp
dec
xor
jg
xrelease
lahf
dec
jp
add
popa
cli
mov
mov
cmp
inc
or
mov
test
daa
push
xor
jg
jg
sbb
xadd
aad
cmp
push
mov
cs
rcrl
pop
pop
cs
repnz
inc
divb
outsb
insl
hlt
lds
in
mov
clc
push
ljmp
inc
or
ss
dec
dec
incb
pop
out
shlb
iret
jo
out
sarb
ljmp
sti
adc
mov
pop
into
pop
les
fldcw
fnsave
sbb
inc
das
rcr
xchg
xchg
and
jmp
push
shll
inc
and
or
fwait
or
jp
ficomps
imul
orl
popf
jno
lret
cmpsb
mulps
mov
cmp
mov
std
call
insl
sub
insl
in
pop
jae
mov
jge
or
cmp
pop
pop
pop
lea
pop
popf
sbb
sbb
xor
imul
cmpsl
pop
pop
mov
movsl
inc
stc
cmp
inc
fldl
cmp
shr
fiadds
aam
imul
fsubrl
mov
xchg
out
sub
sub
into
flds
flds
push
roll
dec
dec
jne
repnz
dec
xchg
dec
jmp
sub
or
lods
cs
adc
addr16
loope
mov
mov
mov
aas
lea
adc
xchg
mov
shl
mov
mov
adc
jne
mov
adc
daa
call
aad
pop
cld
jl
leave
sbb
push
ljmp
adc
xchg
sbb
movsb
sbb
pop
jl
andl
cwtl
sub
push
dec
mov
push
popa
mov
and
xlat
mov
lea
push
sub
sub
mov
dec
xchg
push
ljmp
cmp
insl
or
and
loope
nop
sbb
and
xchg
push
in
addr16
pcmpgtd
lret
cs
sahf
sbb
mov
enter
push
mov
fidivs
or
aam
mov
mov
cmp
jnp
sub
pop
and
xchg
jmp
ret
jo
mov
in
sbb
ss
sbb
popf
int3
call
cmpsl
xor
jle
clc
push
and
mov
xorb
inc
pop
aam
stc
pop
mov
das
test
jp
jo
cld
ss
cs
sbb
cmpsb
gs
lods
xor
rcl
cmpsl
add
pop
and
stos
daa
push
scas
leave
xchg
int
imul
ljmp
sbb
std
lods
scas
push
mov
sbb
out
mov
or
nop
divl
or
sub
mov
in
xchg
lea
pop
xor
repnz
jg
dec
mov
cmp
pop
and
inc
cmp
sti
sub
adc
insb
xchg
sarl
adc
sbb
lods
into
std
test
xchg
inc
inc
lods
ss
dec
stos
xchg
es
push
sbbb
test
inc
jle
adc
aam
les
lea
scas
jnp
xor
repnz
mov
arpl
jbe
cwtl
pop
frstor
push
or
out
lock
call
inc
cmpsb
mov
scas
add
les
dec
pop
or
idivl
mov
sub
jb
push
shlb
jmp
mov
test
inc
xchg
clc
out
cmp
mov
mov
sbb
roll
dec
push
loop
xlat
mov
dec
jg
and
fsubrp
imul
inc
jmp
stos
dec
push
cmp
mov
out
add
popf
dec
inc
dec
das
lea
cmp
inc
fwait
mull
cmp
cmp
or
xor
mov
cmp
pop
jge
mov
in
xor
add
push
in
sub
sbb
push
in
sbb
andb
inc
sbb
xchg
mov
idivl
mov
dec
jb
sbb
je
shlb
push
aas
inc
fisttps
rcl
xor
inc
or
inc
cmp
lods
push
sbb
mov
lods
dec
aaa
inc
insl
xchg
or
loope
jge
les
push
stos
sahf
orb
movsb
mov
std
mov
xchg
add
cmpsl
addb
outsl
daa
push
adc
dec
pop
ljmp
mov
push
pop
dec
push
je
pusha
decb
lods
lret
sub
lret
mov
das
out
in
jp
mov
adc
push
jecxz
fmul
pushl
inc
mov
xor
cmc
mov
adc
or
cmp
nop
sbb
add
jnp
adc
in
sbb
dec
push
mov
xchg
prefetch
xlat
test
ficomps
mov
movsb
adc
dec
pop
mov
out
out
mov
mov
pusha
notl
ret
mov
jae
xchg
arpl
lock
push
jp
sub
xchg
iret
out
fsts
insb
adc
les
jo
dec
shl
or
cli
cmp
inc
xchg
stos
or
std
mov
xlat
cli
push
mov
mov
lret
xor
js
lret
mov
pop
ret
cmp
imul
mov
xchg
xchg
xchg
mov
sbb
push
filds
jg
lret
lahf
cmpsb
inc
xchg
lret
xchg
xrelease
in
pushf
stos
inc
stc
and
cmp
mov
and
ficoml
mov
jb
pop
sahf
movsl
push
shr
lret
lret
mov
ja
imul
cltd
test
loopne
jmp
sbb
inc
sbb
rcl
insl
imul
cmp
call
repnz
cltd
ljmp
in
mov
shrl
dec
dec
mov
sub
dec
fldenv
mov
push
test
cmpsl
cmp
pop
leave
sbb
pushf
push
jecxz
ja
xchg
xchg
inc
mov
imul
or
xchg
stc
repz
mov
in
arpl
fistps
mov
adc
jnp
out
sbb
in
aam
mov
mov
sub
xchg
push
enter
lds
pop
shll
mov
mov
cmpsl
inc
jmp
cli
mov
xlat
and
sub
negb
xorb
les
out
scas
sar
jg
xchg
or
aaa
sub
in
test
dec
xor
bound
ds
and
sbb
nop
sahf
insl
stc
and
ljmp
pop
mov
sub
mov
add
sbb
dec
jbe
rcll
add
sbb
or
push
or
jbe
addb
xchg
stos
popa
jns
pop
mov
cmp
cld
in
mov
or
notl
xor
inc
and
push
and
data16
out
adcb
mov
stos
ss
sub
inc
out
test
addl
das
push
fwait
bound
idivb
out
sbbl
jle
lds
movsb
in
jne
test
or
idivb
cmp
or
test
inc
dec
jb
add
push
mov
mov
inc
insb
adc
xor
push
mov
and
push
xchg
mov
cmpsb
scas
lock
xchg
inc
push
dec
in
gs
jmp
mov
mov
stos
dec
inc
out
pop
mov
stos
jmp
aas
mov
mov
fidivs
lods
adc
roll
pop
adc
sbb
jle
or
cld
sub
xchg
loop
outsb
xor
push
mov
cmp
scas
gs
cmp
inc
xchg
mov
sbb
add
jns
fadds
sub
outsl
lcall
ss
pop
pop
or
sub
xchg
xchg
push
pop
pusha
xchg
mov
notl
xor
xchg
inc
aad
aaa
repz
cmpsb
enter
mov
test
outsl
cmp
std
and
dec
hlt
adc
mov
das
sbb
lret
mov
xlat
push
dec
subl
ljmp
adc
mov
stc
stc
pop
loop
jnp
lock
cmp
add
sbb
pop
scas
jge
inc
fildl
dec
popa
out
rorb
out
or
shlb
outsb
and
repz
mov
imul
fcomps
dec
jecxz
mov
int
jg
push
sub
mov
int
cmpsl
push
loopne
push
adc
sub
shl
lcall
jecxz
jno
xor
shlb
cmp
aaa
and
cli
ret
jnp
push
sbb
jmp
das
or
mov
arpl
shlb
inc
xchg
adc
mov
movsb
lock
sbb
pop
hlt
cltd
sarb
xchg
stos
cmp
or
sbb
scas
dec
cmpsb
cld
cmp
push
enter
adc
pop
fisubl
or
mov
mov
xchg
xchg
jo
push
jb
bound
xor
movsl
inc
or
es
push
scas
xor
leave
pop
aam
ret
lods
mov
mov
stos
pushf
aam
fnsave
push
popf
aad
mov
mov
ds
sub
das
jge
xchg
outsb
add
rorb
inc
idiv
push
lods
mov
leave
rol
addr16
in
hlt
lret
fs
cwtl
adc
stc
xchg
fs
mov
imul
imul
inc
fdivrl
je
arpl
mov
test
pop
sub
mov
in
xchg
je
bound
add
push
mov
ret
int3
mov
arpl
or
lock
adc
pop
dec
ror
loope
loope
sbb
dec
cs
mov
aam
outsl
cld
cmpsb
daa
stc
adc
popf
aad
outsb
inc
sbb
popf
out
mov
jnp
sub
data16
dec
dec
insb
gs
aaa
and
mov
iret
mov
jg
mov
or
pop
push
xchg
xlat
push
pop
ss
je
cmpsb
je
and
mov
rol
add
mov
aaa
push
shrb
push
idiv
bound
cs
sub
xor
or
pop
push
adc
dec
mov
inc
stc
iret
jnp
cli
das
jno
leave
xor
mov
clc
inc
mov
leave
aas
es
pop
ds
int3
nop
mov
sub
cltd
movsl
loopne
ja
cmp
lcall
adc
iret
push
push
cmpsb
jo
sbb
dec
lret
mov
cli
sbb
cs
sub
outsb
lods
sub
fsubl
or
loop
sub
cmp
rdmsr
xor
incl
cmp
imul
imull
scas
sub
insl
and
rcr
es
outsb
mov
dec
xor
dec
mov
mov
jb
jo
std
xor
add
xchg
fstpt
int3
add
jbe
adc
addr16
inc
dec
mov
out
mov
push
and
je
incl
sahf
movl
aaa
orb
sbb
sub
xchg
int3
mov
rclb
sbb
rorb
adc
pop
int
movsl
sbb
mov
imul
push
cld
mov
dec
push
enter
data16
push
inc
hlt
dec
dec
adc
jne
mov
sub
cmp
test
sub
sbb
mov
nop
jae
xor
je
inc
dec
stos
push
daa
mov
xor
jno
xchg
fwait
out
fistpl
pop
aaa
jge
adc
cs
lock
mov
jo
hlt
mov
subb
insl
mov
lods
rcr
mov
in
xchg
sbb
inc
sub
xor
insl
adc
shrl
std
sub
jno
inc
sub
xor
insl
adc
mov
int
std
sub
jno
inc
sub
xor
insb
adc
lods
rcr
mov
in
xchg
sbb
inc
sub
into
cmp
out
int3
int3
int3
int3
int3
jnp
imul
xor
jae
sub
cmp
jmp
test
loop
adc
pop
xor
cmp
inc
sbb
jmp
jmp
fistl
fwait
and
or
inc
sub
and
pop
add
js
jno
mov
mov
movsb
fsub
adc
add
pop
inc
cmp
int3
mov
push
mov
hlt
mov
stos
incb
mov
inc
and
sub
adc
push
mov
mov
scas
test
xchg
test
add
inc
nop
push
lret
mov
inc
daa
mov
or
loop
inc
jnp
xchg
xor
les
and
or
out
push
xor
inc
subl
jecxz
int
ret
xor
sti
pop
sub
mov
fs
sbb
sbb
mov
les
mov
add
xchg
cmpsb
cmpsl
fwait
mov
cmp
repnz
jb
pop
and
sub
cmp
imul
loop
repz
mov
xor
push
add
xor
and
dec
sub
push
or
sti
sti
xchg
test
scas
int
mov
out
adc
or
xor
cmp
push
and
jo
push
pop
push
mov
mov
mov
sahf
out
xchg
push
pop
addr16
push
and
sub
jb
sti
xchg
jmp
stos
ret
mov
jnp
imul
xor
cmp
inc
sbb
sti
xchg
jmp
stos
ret
mov
jnp
inc
test
adc
xor
das
lret
aad
iret
cmp
lods
mov
dec
ljmp
lcall
inc
jns
inc
int3
arpl
inc
mov
mov
fldcw
add
icebp
or
mov
outsl
or
mov
test
cmc
adcl
clc
test
xor
pop
sbb
and
jb
fcoms
xchg
decb
or
mov
dec
clc
rorb
xor
mov
xor
pop
xlat
cmpsb
stos
js
cmp
xor
mov
int3
test
or
sarb
lret
leave
sahf
mov
inc
test
ss
call
addr16
repz
dec
dec
shl
push
or
fidivrl
sub
sbb
repnz
lret
icebp
sarb
mov
jmp
mov
mov
hlt
push
sub
fisubs
testl
jle
sti
popa
pop
and
outsb
decb
mov
jecxz
or
xchg
push
or
je
test
jns
loop
cmpb
sub
xchg
out
cmp
adc
pop
pop
push
sbb
dec
cld
call
jae
or
push
pop
add
pop
test
lock
dec
jne,pn
sub
ds
iret
jle
jno
gs
js
dec
jae
sub
rorb
sbb
cmp
xor
mov
ja
cli
pop
cmp
pusha
xchg
test
push
pusha
push
dec
pop
in
sub
jns
ret
test
lret
mov
ljmp
test
mov
and
roll
enter
mov
ja
and
pop
leave
pop
negb
cmpsl
sti
xchg
mov
sbb
push
sbb
mov
fptan
xchg
inc
sub
push
mov
jae
xchg
sub
in
push
cwtl
sarb
mov
jae
add
push
test
les
pop
push
outsl
jno
mov
xchg
test
lret
cmp
mov
dec
movsl
in
cmpsb
sub
dec
cli
push
cmp
xchg
push
dec
and
negb
mov
mov
sbb
outsl
jo
sbb
jns
lcall
cmp
loop
rcl
cwtl
repz
in
pop
push
lahf
rclb
jecxz
jmp
mov
adc
cmp
mov
ljmp
lds
pop
mov
and
popw
mov
out
xchg
insl
lds
fbstp
lods
je
add
movb
cwtl
movsl
fisubl
and
int
popf
mov
fcmovu
enter
rcrl
push
stos
add
sbbl
push
dec
iret
jbe
mov
jae
into
jo
cs
aas
xor
jae
outsb
mov
xchg
and
lret
lock
cli
mov
jle
fisubs
insb
in
push
idiv
ret
sub
and
lds
dec
cmp
leave
cmpsb
push
push
sbb
icebp
add
mov
fs
add
xor
loopne
jmp
mov
arpl
or
cmp
pop
arpl
shrl
or
jl
and
dec
call
jl
cli
mov
mov
adc
insb
sarb
outsb
adc
les
mov
mov
mov
and
popa
mov
mov
enter
sub
jae
hlt
or
insb
hlt
xor
imulb
cmp
add
into
pop
sbb
insb
das
stc
push
iret
insl
fmulp
and
xchg
mov
out
push
sbb
rclb
dec
out
repz
stc
xchg
push
inc
pop
sbb
sbb
mov
dec
xchg
lret
xchg
out
sub
inc
jns
mov
loope
dec
fidivl
cmp
sahf
mov
outsb
das
mov
jmp
out
idivb
sub
push
dec
and
cwtl
call
xorb
jnp
sbb
mov
pop
cld
sub
pop
sbb
fnstenv
mov
ret
inc
rolb
xchg
mov
sarl
test
rorb
cmp
sub
mov
cld
and
sub
jns
ror
imul
push
stos
daa
mov
mov
lds
mov
inc
test
add
mov
js
xchg
divl
push
ljmp
dec
cmpsl
iret
push
or
rorl
fiadds
sbb
stos
stc
or
addr16
sub
leave
sub
test
arpl
addr16
inc
xorb
mov
pop
ljmp
inc
icebp
scas
addb
or
lea
xchg
rcll
adc
fdivrl
xchg
ficoms
das
mov
cmp
mov
adcb
orl
push
subb
pop
jle
pushf
jmp
add
fisubl
mov
add
rorl
pop
sbb
mov
orl
sbb
sub
sub
and
call
xchg
orl
stos
call
bound
mov
les
jnp
ljmp
mov
test
std
push
js
lds
inc
pop
lahf
pop
pusha
dec
push
push
xchg
clc
mov
jns
dec
and
leave
mov
test
mov
daa
sbb
std
xor
hlt
rorl
test
scas
lea
in
and
or
testb
cwtl
or
rclb
pop
push
pop
xor
sbb
pop
jl
push
cs
push
js
mov
dec
push
mov
movsl
movsl
in
mov
cmp
popa
out
push
xchg
mov
popa
sbb
and
test
cmp
xchg
data16
mov
mov
or
sub
xor
aam
lret
jne
adc
dec
adc
mov
test
jb
dec
or
add
imul
xchg
jle
fidivl
pop
shlb
imul
push
je
shlb
xor
jp
mov
int3
les
mov
push
jno
xchg
push
xor
shl
cmc
das
cmp
sahf
mov
outsb
aaa
push
jge
outsl
mov
lcall
imul
mov
mov
les
push
out
mov
mov
scas
cmc
dec
pop
test
cmpsl
xchg
shlb
out
in
scas
sub
cmpsb
fcomip
pop
push
add
dec
add
xchg
les
add
into
out
loope
shlb
fmuls
sbb
pop
outsb
lcall
push
pop
fwait
gs
test
outsl
sub
sahf
fcmovne
inc
fdivs
leave
outsb
aaa
outsb
mov
mov
sbb
sbb
in
pop
xor
xchg
mov
mov
pop
xchg
xchg
xlat
xor
mov
rclb
pop
cld
cmp
cs
int
mov
cltd
repz
cwtl
xchg
repz
or
pop
mulb
add
pop
lretw
add
push
lods
inc
inc
or
hlt
adc
cmp
add
daa
inc
or
lea
inc
dec
xchg
cmpsb
jp
inc
lds
or
clc
pop
push
cmc
lea
push
push
adc
js
mov
jge
clc
insb
pop
push
arpl
insl
mov
pop
popa
mov
push
or
cld
fsubrp
mov
das
add
mov
test
daa
aad
stos
lock
aaa
jle
push
add
lea
inc
in
mov
lcall
push
lock
jbe
int
stos
ds
adc
inc
fs
ret
insl
xchg
xor
fdivr
and
xchg
les
fldt
and
lods
adc
lcall
insb
notl
sahf
fildl
test
out
shlb
fcompl
inc
and
aas
cmpsb
std
jo
jecxz
add
sub
add
jle
push
rolb
loope
adc
aaa
add
push
mov
sbb
or
adcb
ret
pusha
fimuls
cmc
mov
pop
out
je
push
mov
dec
jmp
add
int3
fbstp
scas
add
mov
adc
cmp
mov
inc
jno
in
shrb
iret
imul
inc
std
mov
or
cmpsb
fistl
lock
sub
sub
sahf
mov
shrd
pop
stos
sbb
add
push
push
adc
mov
or
pop
fsubl
dec
cmpl
mov
sar
clc
inc
add
sub
test
test
mov
daa
in
or
es
add
mov
sahf
shrl
clc
xchg
mov
pop
mulb
sahf
adc
ds
and
and
inc
insb
les
xchg
inc
xchg
sub
sbb
push
call
and
nop
add
sbb
mov
push
add
lock
loop
and
mov
mov
cmp
shlb
or
sub
mov
mov
jo
mov
jl
lret
mov
shlb
scas
pop
and
cmc
pop
mov
aas
cwtl
jb
ret
add
stos
pushl
sarb
add
mov
popf
cmp
test
xchg
cmp
jmp
adc
adc
push
inc
fists
push
and
mov
mov
sbb
mov
jno
dec
lret
xchg
or
or
ficoml
aad
int3
lret
dec
sbb
in
mov
aam
cmc
mov
inc
mov
pop
repnz
push
lret
xor
inc
add
xchg
lods
mov
rclb
push
popa
jno
sub
jno
sbb
xchg
cmp
sbb
insl
jle
sti
jg
mov
and
cli
push
xchg
js
cwtl
insl
mov
es
notl
xchg
inc
mov
xchg
cwtl
cltd
iret
test
lods
orl
add
movsl
mov
adc
or
fwait
add
or
adc
mov
dec
cmpsl
add
mov
test
out
icebp
inc
mov
js
jns
dec
rolb
jg
sub
add
mov
shrb
adc
mov
xchg
popf
sti
imul
fimull
pop
mov
mov
or
dec
sbb
mov
ret
mov
outsl
adc
in
nop
scas
xor
xchg
or
fsubrs
push
sub
cs
arpl
and
repnz
xchg
aad
mov
dec
nop
cltd
xchg
cs
push
divl
xchg
xor
cmp
jmp
gs
test
lret
jne
addb
inc
pop
cmp
sub
pop
mov
in
push
ljmp
sub
mov
pushl
test
mov
add
mov
cmp
adc
sbb
sub
rorl
test
ja
jge
pop
filds
nop
cli
cltd
sub
rcrb
cmp
imul
pop
xor
sub
rcr
cmp
stc
inc
mov
xchg
xchg
xchg
and
adc
push
pushf
imul
jmp
test
icebp
ret
jo
int
add
loop
adc
es
mov
loop
bound
push
fisttps
int
xchg
fdivrp
lock
fisubl
dec
into
pop
mov
mov
jmp
cmp
add
jg
and
lret
outsb
mov
pop
add
mov
xor
fcomps
mov
inc
stos
and
enter
pop
push
int
shrl
push
push
mov
adc
or
pop
test
jg
jge
sub
clc
fcmovb
mov
mov
or
test
inc
jle
push
in
jge
movsl
jl
and
ret
sub
cmp
imul
mov
mov
xchg
push
sub
cmp
movsb
jle
aam
sbb
or
pop
and
pop
jle
or
push
jno
pop
cltd
fsubs
pop
daa
leave
clc
ljmp
movsl
adc
sbb
test
outsb
sub
jb
add
inc
out
mov
into
add
shll
aad
loop
xchg
in
sbb
leave
cmp
sbb
icebp
test
stc
push
xchg
aad
mov
stos
adc
pop
in
js
xchg
loope
push
movsb
mov
ds
movsb
lahf
test
ds
pop
test
lahf
and
push
lret
lahf
scas
pop
push
mov
in
xchg
mul
or
int3
cld
and
push
add
mov
lods
pop
aam
aad
ret
mov
data16
inc
cmp
mov
mov
es
and
add
xchg
xor
push
test
and
dec
mov
mov
repz
jnp
out
push
xchg
xchg
mov
push
sahf
int3
ljmp
pop
sbb
inc
sahf
push
out
nop
push
mov
out
pop
inc
mov
repz
pop
clc
adc
mov
xchg
gs
idiv
loop
push
mov
lret
fcoms
stc
test
or
jge
inc
and
cltd
popf
sub
push
pop
jecxz
mov
das
lock
add
scas
lret
sub
adc
cmp
pop
ror
pop
adcl
test
int3
pop
fsts
fbstp
fcmovnu
pop
add
movsl
outsl
outsl
popa
addr16
faddp
fistps
addr16
popf
cmpl
insl
and
mov
adc
jb
call
fidivrs
idivl
inc
mov
cmp
fs
enter
jmp
xchg
mov
in
jae
aaa
cli
sub
jge
sahf
xor
scas
pop
dec
push
adc
push
scas
jle
loopne
into
dec
mov
xor
sti
shrb
scas
jge
gs
inc
clc
ret
push
es
sub
dec
jns
fpatan
mov
mov
push
lret
pop
pxor
pandn
lahf
add
sub
iret
add
push
sub
sbb
test
mov
or
lods
jmp
pop
imul
add
and
out
xchg
test
ljmp
jno
js
cwtl
icebp
roll
lea
div
push
fldenv
sti
cmp
mov
mov
pusha
ljmp
lcall
cmc
fsubrs
std
ja
clc
adc
sbb
xchg
dec
cmp
shr
jne
nop
pop
inc
adc
pop
cltd
dec
sbb
inc
mov
ret
ficoms
inc
out
jle
mov
xchg
packssdw
push
addr16
dec
vrsqrtss
pop
dec
xor
pop
jne
jbe
and
add
xchg
add
std
sub
cmp
add
lods
sbb
mov
in
jmp
fcompp
ret
in
pop
dec
loopne
or
lods
push
lock
jo
inc
out
lret
inc
jge
negl
and
fsubrs
cmc
cmp
push
ja
add
pop
pop
sbb
cld
mov
add
test
jge
jmp
mov
xchg
ds
or
imul
sbb
in
cmp
cmc
and
mov
jl
in
mov
xchg
popa
aas
jp
pushf
jle
movb
xlat
scas
sbb
jae
pushf
jno
push
sub
mov
mov
or
fnsave
xchg
ds
call
movsb
addr16
repnz
rolb
pop
mov
rolb
push
mov
shrb
cmp
mov
push
loop
fisttpll
push
lcall
rclb
test
mov
adc
lcall
xor
sbb
leave
pop
ljmp
pusha
dec
or
ds
push
aad
rorb
cltd
and
push
fs
pop
insl
les
test
lock
addl
cltd
por
insl
test
sbb
sti
imul
jecxz
jmp
addps
mov
jmp
xchg
daa
mov
xor
xor
add
adc
imul
aaa
add
adc
in
inc
mov
push
mov
inc
shl
fldt
push
std
pop
cltd
daa
sbb
pop
xchg
inc
testb
enter
sub
pop
in
movsb
inc
xchg
push
add
add
fisttps
push
inc
into
cmp
xchg
pop
lods
cmp
push
or
inc
addr16
jg
mov
cmp
mov
xor
icebp
fldcw
pop
xchg
or
jae
mov
shld
or
jg
push
sahf
scas
arpl
or
dec
nop
or
daa
rcll
fsubl
xor
loopne
pop
clc
cmpsl
or
mov
xor
lcall
movsb
in
mov
or
call
xorl
mov
dec
jmp
aas
fs
call
jne
mov
xor
out
mov
cwtl
cmp
and
test
scas
fistpl
mov
jne
call
pop
into
xchg
bound
sarb
sahf
mov
sbb
mov
insb
lret
jnp
xchg
lahf
mov
gs
xchg
xchg
pop
repnz
adc
jno
fcmovne
pop
cld
addl
jge
xor
dec
pop
sti
insb
xchg
and
jo
push
xor
lret
ficompl
orl
lahf
pop
negb
and
xchg
lret
mov
dec
in
imul
and
jg
gs
loope
jae
loop
push
mov
loopne
jp
pop
push
xor
inc
imul
cmpsl
add
xchg
loopne
mov
mov
adc
add
dec
sbbl
mov
fwait
adc
js
leave
ret
xchg
sub
add
popa
stos
das
shll
mov
sub
push
pop
daa
loop
mov
out
and
mov
push
mov
out
push
cmpl
vmulps
dec
std
jle
jb
dec
lret
aam
add
jnp
dec
mov
imul
xor
cmp
and
xor
mull
lds
loop
push
sbb
jo
lahf
pop
mov
insl
push
push
je
jnp
movsl
out
inc
bound
popa
test
and
add
jle
jl
jno
push
mov
fwait
je
clc
mov
mov
sub
insb
cmp
inc
push
add
xor
and
xchg
std
jns
jb
into
cli
pop
cli
lret
mov
mov
sub
pop
iret
cwtl
ja
and
sub
pushf
mov
lods
xor
jmp
lods
and
pop
cmpsb
jp
pop
sub
jecxz
test
test
sbb
rclb
jns
or
sub
and
pop
sbb
or
add
cld
pusha
dec
jecxz
xchg
mov
mov
mov
dec
jmp
dec
jge
or
jo
leave
stos
push
hlt
pushf
hlt
pusha
and
xor
inc
bound
xor
nop
mov
subb
jge
gs
ljmp
push
stos
rcr
lock
cmpsl
jne
sbb
jge
sub
adc
pusha
jmp
jnp
sub
scas
pop
pop
cltd
push
mov
push
or
mov
sbb
push
adc
xchg
ljmp
jge
push
jp
jo
imul
in
pop
iret
xor
dec
xadd
dec
adc
pop
fucomi
pop
push
imul
push
int
cmp
jae
or
dec
push
or
mov
outsb
mov
add
xlat
xchg
push
cmpsl
sti
je
sbb
hlt
mov
iret
int
lds
dec
lret
in
cmp
mov
inc
cs
xor
push
mov
add
ret
fwait
mov
sbb
pop
sub
addr16
ljmp
xchg
or
into
lret
add
leave
ret
mov
push
andb
orl
sub
lock
push
mov
inc
fs
mull
inc
pusha
fists
outsb
les
cli
sub
sbb
cs
or
inc
cmp
movsb
xor
jl
jnp
jbe
fadds
ss
adc
divl
lods
inc
and
insl
sbb
addb
mov
jnp
mov
mov
cwtl
in
cli
sti
jl
insb
mov
aam
push
or
xor
mov
sti
xchg
xlat
mov
call
movsl
mov
shrl
jnp
cmp
cmp
addr16
push
lahf
cld
pop
mov
cmp
leave
icebp
cmp
int3
jmp
mov
out
push
jle
mov
jp
lea
aad
arpl
push
adc
jmp
inc
cmp
fldenv
cmpsb
xchg
or
test
pop
pusha
es
jno
in
inc
sar
loopne
push
or
pop
popa
sarw
rorb
mov
or
rorb
adc
enter
test
jbe
xchg
lds
leave
xor
loopne
pop
js
outsl
mov
jge,pn
popf
out
insb
outsl
mov
and
pop
push
cmpsl
push
sbb
push
pop
xorl
or
xchg
popf
push
jp
enter
mov
cmp
data16
pop
pcmpeqb
mov
cmp
loopne
scas
bound
call
into
fcompl
scas
out
dec
data16
and
fnstcw
jnp
xor
fiadds
sahf
rcll
insb
arpl
in
pop
stos
inc
pop
mov
adc
and
jo
or
push
leave
mov
and
jl
sub
jns
insl
gs
dec
jl
xor
dec
mov
nop
cli
xchg
inc
add
mov
ret
inc
arpl
sbb
imul
jge
add
add
montmul
cmpsb
add
fs
cltd
and
iret
repnz
fs
out
adc
mov
ret
jbe
push
xchg
scas
test
mov
add
cmp
xor
fsubrs
xor
push
sahf
iret
mov
in
inc
scas
sbb
cli
sahf
shl
mov
push
sub
pop
push
bound
ljmp
mov
call
sbb
mov
sub
xchg
mov
dec
iret
push
mov
inc
aam
lods
inc
sahf
xor
ret
loop
push
add
and
mov
mov
test
arpl
pop
xlat
pop
adc
fistpl
push
mov
gs
add
fdiv
mov
fucomp
adcb
inc
cld
scas
lock
jle
push
std
jne
mov
jbe
push
int
mov
repnz
adc
or
xchg
dec
out
inc
movsb
jno
mov
je
lods
push
xchg
ret
adc
mov
aad
roll
adc
leave
lcall
rcrb
xchg
imul
lds
pusha
xor
lds
mov
es
hlt
fstp
sti
hlt
out
inc
fadd
std
xchg
push
out
adc
or
jnp
cld
push
sbb
cmp
into
loop
ljmp
enter
mov
cmc
mov
add
icebp
sub
or
jno
jo
clc
jmp
mov
sbb
mov
add
sbb
sbb
push
stos
std
inc
mov
lods
xchg
cmp
mov
jnp
scas
out
adc
lods
popa
pop
xchg
addl
adc
sbb
sbb
lahf
movsl
push
mov
or
mov
jg
outsb
push
pop
jno
add
dec
and
push
sub
jb
sti
xchg
jmp
stos
ret
mov
jnp
imul
xor
cmp
inc
sbb
sti
xchg
jmp
stos
ret
mov
jnp
imul
xor
cmp
inc
sbb
sti
xchg
jmp
stos
ret
mov
jnp
imul
cmp
inc
fwait
jb
bound
adc
jno
lret
aad
pop
and
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
jno
inc
mov
pop
lret
adc
cli
icebp
sub
cmp
dec
mov
push
out
popa
lcall
and
xor
add
adc
loope
icebp
dec
sarl
or
jp
xor
jno
inc
bound
and
adc
cmp
and
sub
ds
xchg
in
add
into
out
lock
shl
dec
std
sub
cmpsb
pop
imul
xor
push
aas
scas
in
pop
into
addr16
outsb
xchg
scas
rol
mov
push
cmp
test
je
cmpsl
fbstp
fwait
mov
pop
and
les
adc
pop
andb
bnd
inc
push
inc
xor
call
sbb
scas
aas
les
mov
pop
loope
jg
mov
cld
xchg
lea
and
popa
jno
sub
loop
imul
jne
pop
mov
ljmp
cmp
push
loopne
pop
or
xchg
jns
shll
jno
inc
mov
xor
add
loope
icebp
pop
rorl
add
jp
jecxz
call
pop
movsl
dec
mov
sahf
fs
popa
or
pop
mov
add
pop
hlt
and
cmp
inc
fildl
mov
outsb
scas
adc
dec
popf
sub
xor
jmp
xor
add
cltd
dec
fidivl
ljmp
icebp
sub
cmp
dec
mov
jp
mov
jno
inc
mov
xor
add
adc
loope
icebp
sub
cmp
dec
mov
jp
mov
fs
in
cli
arpl
dec
addl
cld
sahf
jge
outsl
shrb
and
push
rclb
xor
rorb
sub
dec
xchg
jo
sub
addr16
dec
sub
iret
sbb
sub
shrl
dec
sub
lods
lret
pushf
pop
mov
push
enter
imul
adc
jl
jmp
pop
stos
xchg
imul
push
lahf
lods
xor
scas
gs
addr16
adc
mov
pop
xchg
das
sub
nop
fbld
mov
sbb
and
imulb
loope
subl
adc
addr16
and
sahf
push
dec
inc
jmp
shlb
or
lahf
mov
rcr
pop
out
sbb
add
insl
test
lds
jae
xchg
or
ret
mov
cli
cwtl
adc
jmp
xor
into
mov
pop
pop
pusha
cmp
aaa
lods
sub
ds
mov
movsl
and
adc
mov
mov
adc
outsb
ret
mov
pushw
adc
out
movsl
dec
aaa
jecxz
push
or
leave
dec
mov
and
mov
sub
insl
add
dec
out
mov
sbb
pop
push
sti
pop
or
lahf
movsl
ret
cmpsb
pcmpgtb
xchg
repz
les
sbb
fnsave
add
in
into
js
mov
xor
dec
addb
lods
aam
pop
cmp
xchg
dec
loopne
pop
xor
pop
test
cwtl
jae
repnz
ljmp
mov
stc
and
mov
arpl
cwtl
outsl
fisttpl
adc
cs
jne
sahf
imul
jo
and
pop
je
and
sub
mov
outsl
frstor
je
or
stc
sub
repz
pop
ljmp
push
pop
pushf
out
add
in
xchg
shrl
or
ljmp
js
dec
inc
les
das
mov
push
stos
icebp
push
jo
dec
shll
gs
mov
iret
sbb
or
rolb
call
icebp
pop
jp
xchg
fidivl
cwtl
sarb
data16
fwait
mov
inc
mov
xchg
cmc
mov
sti
cwtl
pop
mov
push
call
ss
sub
jmp
cmp
orb
ret
jge
dec
scas
mov
cmc
pop
mov
icebp
fcomi
jbe
jmp
pop
mov
je
addl
cwtl
ljmp
pop
sub
pop
inc
sub
cmp
add
in
mov
cmp
pop
nop
cmpb
cmp
ljmp
cmpsb
lea
xchg
mov
cmpsl
loopne
pop
arpl
enter
push
adc
mov
xor
movsl
mov
imull
mov
lahf
cmpsl
jge
add
sub
mov
in
xchg
mov
imul
out
or
or
or
ror
flds
xor
mov
cmp
jae
dec
adc
and
inc
mov
pop
dec
inc
jae
arpl
int3
mov
int
and
and
cmp
ret
adc
imul
push
and
mov
pop
jns
mov
jp
loop
movsl
mov
ds
es
in
rcrb
xor
test
fidivrs
cmp
xor
mov
xor
adc
and
pop
push
inc
lock
xor
lahf
clc
idiv
cmc
push
mov
jge
addb
xchg
push
lcall
cwtl
xor
pop
jmp
mov
enter
mov
add
xor
clc
or
sti
cmpsb
xchg
ja
sbb
imul
add
push
and
push
mov
dec
or
scas
xchg
sbb
add
pusha
sbb
dec
test
out
insb
mov
cmp
repz
das
out
imul
add
inc
stos
and
loope
sarl
into
sti
xchg
and
sub
push
mov
ds
pop
adc
cmc
jno
test
xor
insb
stos
pop
aad
imul
lcall
aad
xchg
insl
aas
das
adc
dec
cli
or
or
push
mov
xchg
jo
mov
insb
popa
mov
inc
dec
xor
push
inc
bnd
pop
push
adc
in
cwtl
xorl
gs
add
mov
or
and
add
in
pop
shld
std
xor
xchg
ja
popa
sub
insl
and
divb
sub
jae
jl
mov
mov
lret
pop
jg
sub
andb
and
cmp
test
inc
mov
cmp
pushf
mov
orl
call
gs
sbb
mov
mov
push
loopne
jg
clc
loopne
jmp
cmp
cmp
loope
and
daa
mov
pop
loope
push
jecxz
test
in
mov
adcb
fnstsw
test
loope
pop
and
or
mov
cmp
int
pop
dec
leave
testl
or
mov
dec
test
nop
aam
mov
lods
lahf
cmp
retw
fs
ss
das
stos
out
lock
pop
dec
bnd
leave
jae
sub
xor
iret
mov
adc
add
outsl
xchg
mov
inc
andb
add
jns
mov
scas
leave
xchg
imul
pop
push
sub
inc
sarl
dec
mov
mov
push
imul
stc
sbb
pusha
add
xchg
fistl
sysret
or
cmpb
and
call
les
rolb
cmpsb
xchg
pusha
or
mov
lock
mov
nop
int3
movsl
and
arpl
sbb
sbb
out
icebp
hlt
jp
in
sar
sbb
xchg
pop
pop
insl
stc
pop
js
int
add
pop
sub
xlat
push
xlat
rolb
test
inc
insl
mulb
int
pop
pop
outsl
sbb
push
cmpsb
jbe
adc
sub
cmpsb
loopne
mov
or
lods
jnp
repnz
loop
rcl
mov
adc
aas
test
jle
adc
jns
in
or
stc
sar
inc
xchg
repz
sbb
adcb
adc
rcl
xor
arpl
pop
push
repnz
pop
in
push
xlat
mov
sbb
pop
mov
add
repz
push
jns
mov
jno
int
jle
mov
sbb
sub
daa
jnp
movsb
lods
rcrl
clc
loop
jmp
jp
popa
jne
fildl
lods
es
mov
dec
sbb
shll
fadds
ss
daa
add
cmp
mov
mov
xor
push
mov
mov
jmp
add
xchg
repz
add
push
shll
mov
and
ds
mov
cmpsb
jne
cmp
outsl
xorl
in
sbb
scas
scas
fistps
and
inc
cmpsb
int
cmp
jbe
fildll
and
jo
adc
lds
dec
fstpl
outsl
pushf
cmp
mov
xchg
sub
popf
andb
add
ret
adc
push
push
cmp
das
xchg
sub
mov
and
xor
push
imul
mov
mov
loope
push
and
dec
mov
mov
lahf
mov
inc
clc
add
mov
dec
pop
push
push
cmp
dec
adc
psrlq
fisubs
repnz
out
jge
push
xor
in
pushf
aaa
cltd
push
je
pop
shll
push
sbb
ss
lret
add
xchg
xlat
movsl
xor
rolb
pop
fdivl
test
sub
fsincos
adc
mov
fwait
inc
jmp
les
loop
xchg
repz
mov
insb
mov
mov
ja
lahf
aas
loopne
setne
retw
mov
pop
sbb
cmp
or
push
dec
cwtl
mov
push
imul
test
sub
jmp
jp
or
mov
and
aam
mov
xor
mov
stos
lods
sarl
clc
xchg
xchg
jmp
add
jnp
incl
pop
jno
xchg
lods
adc
cmp
pop
sbb
jle
rorb
push
cmpb
cmp
sub
push
push
shll
push
adc
ret
in
stc
jbe
mov
cmp
fsubrs
jge
xchg
arpl
mov
inc
xchg
inc
loop
pop
int
mov
mov
aad
mov
notl
and
repnz
dec
pop
ja
std
sbb
call
push
push
arpl
xchg
xor
xchg
ret
int3
mov
test
cwtl
sbb
adc
cmp
dec
outsb
pop
ljmp
mov
mov
rolb
leave
jbe
mov
or
cmpsb
cltd
lcall
mov
xor
rcrl
mov
loope
scas
mov
arpl
cld
arpl
nop
adc
inc
pop
mov
iret
out
add
or
sbb
fnstcw
sbb
cs
pushf
jnp
xchg
and
sbbb
xor
xchg
and
sbbb
and
movsb
xchg
mov
fucomp
in
adcl
jmp
xor
in
xchg
cli
adc
push
cmc
or
dec
jmp
enter
pop
xchg
sbb
or
xor
mov
pushf
mov
dec
push
fdivl
gs
xor
push
or
inc
mov
push
add
mov
xchg
mov
inc
dec
sub
outsb
sub
enter
cmp
insl
push
sub
push
pop
mov
jmp
push
adc
push
mov
adc
push
js
daa
out
dec
das
add
lret
call
push
jnp
ja
and
movsl
ss
inc
sbb
jl
xchg
or
out
in
test
fwait
sbb
shrl
clc
and
lcall
ljmp
sub
adc
ss
flds
stos
xchg
push
mov
imul
in
push
inc
loop
inc
jl
movsl
popf
out
fisttpl
bound
repnz
cwtl
in
inc
adc
mov
mov
fdivrl
inc
insb
mov
push
mov
or
jbe
cmpsl
cltd
mov
inc
int3
push
cmp
or
fsubrp
mov
push
xchg
std
xor
fwait
pop
xorl
das
dec
das
cmp
jle
sub
jmp
cs
stc
xchg
lret
push
sbb
mov
gs
inc
in
jno
sub
mov
jg
ljmp
js
jecxz
cmpl
mov
and
mov
or
sbb
mov
mov
es
xchg
aad
fs
inc
jbe
sub
icebp
test
out
orl
fwait
mov
cmp
fwait
jmp
mov
lods
das
adc
clc
sbb
inc
adc
sbb
pushl
mov
out
ja
das
out
cs
icebp
dec
rcrl
out
push
repnz
repnz
testb
push
mov
leave
mov
mov
xchg
mov
dec
adc
cmpb
in
sbb
sahf
sti
dec
daa
pop
dec
nop
adc
lods
ds
nop
cli
rcll
ficompl
dec
sub
js
aam
ss
xor
nop
xchg
mov
dec
out
xchg
jl
push
push
mov
shlb
addr16
lods
pop
mov
aas
push
pop
in
xchg
fldcw
stos
jbe
mov
aad
or
scas
lret
and
addr16
mov
jb
cmp
push
imul
inc
shl
pop
aaa
hlt
test
dec
or
dec
sub
mov
or
sti
testb
push
mov
mov
mov
lahf
lcall
scas
jb
movzwl
pop
push
ret
jmp
pop
xchg
push
inc
lea
push
dec
push
mov
xchg
iret
mov
shr
icebp
jo
or
mov
out
sub
fdivs
sbb
and
neg
lahf
cltd
leave
fwait
std
test
mov
pop
popa
psubsb
test
pusha
sbb
jbe
mov
clc
xchg
js
insl
sahf
mov
xchg
xor
out
mov
lret
lcall
rclb
mov
out
add
inc
cld
xor
shll
inc
dec
popf
clc
gs
dec
test
in
xchg
stc
mov
sub
mov
pop
mov
rorl
adc
mov
shll
sub
addr16
cmpsb
mov
add
mov
out
pusha
rclb
lcall
mov
jmp
jns
ljmp
movsb
repz
cs
popf
sub
push
or
neg
lret
push
int
adc
push
ljmp
add
xchg
mov
rcll
data16
arpl
or
mov
inc
mov
xor
leave
and
xor
aaa
call
outsl
ds
pop
xchg
sti
mov
mov
sti
faddp
out
xor
inc
pop
inc
dec
ljmp
xlat
lea
mov
lods
lret
adc
leave
xchg
loop
jle
arpl
dec
and
push
outsl
ds
push
inc
mov
push
push
shll
add
push
stos
push
aad
adc
lea
sub
pop
leave
xor
fbld
insb
cmp
nop
call
mov
sbb
mov
ss
insl
cwtl
daa
xchg
mov
cmp
sbb
out
pop
or
push
shll
dec
adc
repz
push
pushl
mov
aaa
imul
sub
push
mov
ljmp
pop
or
xor
sbb
shll
sub
aam
push
sub
pop
loopne
jmp
outsl
adcb
shlb
in
or
or
lcall
jge
es
aam
adc
sbb
lds
jg
dec
pop
or
adc
incl
pop
popf
xlat
leave
mov
inc
adc
cs
scas
hlt
mov
or
jmp
pop
xor
sbb
cmp
add
push
sbb
cmp
cmp
das
sbb
cmc
movsl
push
add
pop
cld
xchg
add
mov
xor
or
and
mov
pushf
push
loopne
mov
gs
pusha
rorl
test
sbb
cmp
or
pusha
or
and
cmpsl
sbb
in
int3
ja
cmp
dec
out
pmuludq
cmp
jne
mov
mov
ret
jmp
ds
pusha
dec
pop
mov
xchg
aas
clc
rcll
adc
aam
mov
and
shl
jle
mov
or
hlt
in
cmp
inc
les
jnp
leave
les
call
sbb
pop
xor
out
lods
sti
ss
in
inc
push
push
call
adc
mov
add
mov
and
mov
subl
xor
daa
iret
cs
out
ret
rcl
pop
jle
clc
ficompl
pop
in
mov
push
fiadds
xlat
mov
in
jecxz
lret
test
in
mov
or
pop
lods
cli
movsb
add
jmp
jecxz
adc
jge
mov
movsb
into
inc
ja
das
test
dec
out
push
adc
call
imul
sub
push
in
hlt
mov
jae
jne
int3
jns
or
xor
add
jge
xchg
or
jae
mov
cs
inc
mov
scas
cmc
int
lret
ror
data16
jno
js
pusha
inc
lret
call
insl
xchg
lods
das
and
push
dec
repnz
cmpsb
out
xor
and
jb
xor
shll
mov
mov
xchg
xor
ds
mull
add
sbb
lret
push
pop
mov
inc
pop
aas
mov
xor
adcl
aas
in
xchg
lds
mov
cltd
jp
mov
and
fbstp
sbb
pop
jae
ljmp
ss
pop
imul
adc
add
out
xor
or
inc
xchg
outsl
inc
sub
or
dec
cs
adcb
js
inc
pop
dec
int3
and
mov
sbb
out
les
out
xchg
xchg
inc
lret
mov
xchg
pop
sahf
push
adc
ljmp
je
fs
lret
in
mov
stc
sub
lods
sub
jne
inc
movsl
lahf
mov
icebp
imul
enter
mov
cwtl
test
xchg
js
in
decl
cs
jp
div
pusha
cmp
pop
jmp
add
push
std
inc
xor
xchg
jns
fs
push
fwait
cld
cmp
orb
outsb
pop
icebp
lods
pop
smsw
cmpsl
xor
push
lcall
cld
jns
mov
jge
mov
xchg
ss
push
mov
sub
fstp
jbe
cmp
shll
outsl
cli
cs
jnp
inc
lret
ffree
mov
inc
ffree
stos
adc
sub
pop
cmp
pop
jp
sbb
pop
sub
lcall
and
lods
jo,pt
xchg
mov
pop
cld
cs
lcall
sbb
jo
jl
xchg
lods
rorb
movb
adc
loopne
icebp
test
in
jo
fcmovne
jns
and
cmpsl
and
aad
inc
xchg
fisubrs
bound
std
mov
adc
cmp
mov
xchg
addr16
out
fildl
and
ja
roll
sbb
mov
push
cmpsb
add
jns
imul
sub
xor
adc
scas
push
jnp
dec
shrb
scas
daa
mov
insl
jo
push
lahf
jle
sbb
sbb
lea
out
inc
add
mov
movb
xchg
and
out
push
lock
sarl
sbb
shlb
je
repz
fimuls
and
xchg
daa
mov
mov
imul
or
xor
or
pop
jmp
out
cs
or
fisttpll
shll
nop
jmp
pushl
sub
sarl
sbb
lods
push
sar
sbb
sbb
push
xchg
out
lahf
or
mov
out
cmpsl
test
jnp
enter
push
icebp
in
sbb
sbb
push
pop
idivl
mov
pop
xchg
jg
iret
test
sub
mov
lea
es
dec
aam
repnz
cmc
fdivs
filds
movsl
in
loopne
xchg
repnz
test
jge
insl
jmp
cmp
test
fstpt
or
sub
cmp
xchg
pop
stos
xor
push
cmovb
jecxz
in
out
dec
pop
jp
or
inc
xor
inc
fcmovnb
out
jg
pop
out
sub
add
ds
and
in
in
movl
mov
int3
xchg
add
add
stc
adc
add
push
div
pop
leave
mov
pop
test
sbb
mov
sbb
ret
fbstp
popl
movsb
jle
mov
inc
cli
inc
mov
out
fnstsw
out
imul
add
inc
mov
lock
jo
or
in
mov
insl
xor
sub
jl
das
mov
pop
popa
xchg
push
sub
add
adcb
ffreep
imul
push
or
aas
dec
out
loopne
test
fcompl
cmp
jp
and
dec
mov
jb
cmp
lods
xchg
mov
ret
pusha
sbb
inc
iret
push
cmp
dec
ds
mov
imul
inc
scas
push
in
xchg
movsb
mov
bound
dec
repnz
cmp
lret
dec
mov
sbb
push
mov
jl
outsl
add
loope
mov
std
out
mov
gs
out
popa
rorb
sub
jne
or
sbb
fildll
orl
mov
cmc
pop
lock
popa
sub
mov
xchg
lock
mov
pop
rorl
jg
outsl
repz
pop
divl
testl
xchg
adc
mov
add
jmp
xor
loopne
das
fildll
xchg
js
push
in
inc
pop
es
ss
xorb
mov
pop
jns
ret
add
dec
outsb
popf
mov
xor
xchg
jne
push
jo
mov
push
fdivs
jecxz
sub
jp
cmpl
inc
jg
es
xchg
in
sarl
ret
sbb
es
inc
xor
std
nop
enter
jns
mov
in
mov
lea
jmp
lods
loopne
icebp
push
jle
dec
test
pop
stc
sub
push
jno
cli
aaa
xchg
mov
add
push
fistl
dec
add
cmpsl
insl
popf
fdiv
iret
cmp
dec
in
shrl
mov
cld
sbb
xchg
push
and
mov
jmp
dec
call
mov
mov
mov
repz
imul
mov
xlat
test
jp
jo
and
leave
ss
lods
xchg
int3
ret
xchg
ljmp
imul
loop
jge
loopne
cmp
outsb
add
inc
pop
pop
test
xlat
xor
dec
push
sub
sahf
rorb
add
fwait
or
gs
popf
outsb
enter
and
lcall
or
jbe
lock
outsl
mov
mov
push
mov
jmp
inc
dec
in
ret
push
in
addr16
inc
sub
insl
inc
jmp
outsb
jnp
scas
stos
es
xor
cmp
inc
mov
inc
pop
dec
dec
insb
stos
sbb
jp
out
inc
push
fstp
notl
shl
jmp
insb
aad
inc
pop
mov
daa
out
dec
pop
orb
scas
mov
lock
and
popf
pushf
dec
sbb
lret
lahf
cmp
cli
jle
lahf
js
sbb
pop
dec
out
add
jmp
test
adc
mov
push
mov
test
xor
rcl
inc
dec
push
ss
out
mov
dec
jecxz
andb
push
in
mov
clc
mov
push
jns
sub
repz
lds
in
test
push
stos
inc
in
xor
mov
inc
dec
filds
jmp
jae
into
daa
lea
aad
mov
stc
iret
jno
imul
push
call
dec
fmuls
cmpl
mov
loopne
sub
std
aaa
add
sub
bound
aad
cmp
repnz
loope
xor
addr16
lahf
out
inc
push
outsb
scas
stc
lret
std
sahf
mov
mov
mov
jb
into
mov
rcrl
loop
xlat
sar
cmpsb
inc
int
dec
pop
mov
shlb
cmp
dec
dec
js
shr
cwtl
add
xor
push
pop
rcr
imul
repz
lods
fmull
andl
xlat
popf
lock
jno
inc
mov
xor
add
adc
loope
icebp
sub
cmp
dec
mov
jp
mov
jno
inc
mov
xor
add
adc
loope
icebp
sub
cmp
dec
mov
jp
mov
jno
inc
mov
xor
add
adc
loope
lock
cmp
dec
mov
xchg
xchg
sahf
popa
jno
inc
lcall
cmpl
add
cmpsb
cmp
jle
outsb
int3
int3
int3
int3
int3
pop
stc
push
jp
inc
out
jns
or
jns
imul
cmp
leave
pop
stc
push
jp
or
inc
pop
lret
jns
imul
cmp
leave
pop
stc
push
jp
or
cmp
push
or
jp
jp
inc
leave
lods
cmp
jp
sub
pop
push
mov
bound
xchg
iret
orb
sbb
rolb
ss
cltd
or
xor
mov
xchg
sahf
dec
mov
push
outsl
stos
js
es
mov
jl
add
jae
imulb
pushf
pop
push
imul
sub
out
jle
inc
out
sub
loopne
test
and
dec
mov
shll
or
mull
test
sbb
inc
xchg
hlt
adc
mov
in
xor
ret
jp
cmp
and
mov
mov
stos
sub
stc
push
jp
or
cmp
dec
fidivrl
imul
cmp
stos
sbb
outsl
out
insb
sub
fisttpl
sub
lahf
leave
dec
lcall
hlt
scas
das
mov
jp
retw
inc
in
pop
sub
imul
mov
sbb
mov
lret
jns
imul
cmp
leave
pop
stc
push
jp
or
cmp
dec
fidivrl
imul
cmp
test
xchg
imul
push
mov
testb
int
and
cli
mov
out
pop
cwtl
popa
lods
roll
bound
jmp
lock
dec
outsb
pop
inc
adc
icebp
lds
add
sar
mov
loop
or
cmp
es
sbb
insl
inc
cmp
xchg
cmp
repnz
sub
jmp
jg
ret
mov
sti
pop
dec
sbb
sub
pop
add
sub
sbb
pop
jo
ja
roll
push
mov
ret
jbe
enter
and
mov
push
xchg
jge
dec
js
roll
push
xchg
and
cld
add
jle
mov
xchg
pop
mov
imul
adc
mov
stos
jge
sbb
and
push
stos
or
mov
or
push
test
daa
loopne
dec
fcmovbe
and
inc
jno
xlat
test
and
aam
mov
into
je,pn
call
inc
mov
jp
xor
lods
xchg
dec
popf
push
jge
sub
test
imul
andl
cmc
rcll
mov
leave
lret
or
pop
repz
aad
out
inc
add
xchg
dec
xor
fmull
xorb
out
cmp
and
ljmp
ja
frstor
mov
jp
adc
andl
pminsw
int
sub
into
das
jle
jbe
ss
fisttpll
xchg
loopne
sub
das
push
aas
test
cmp
shll
pop
adc
cmp
loopne
sub
mov
cwtl
test
ja
sub
mov
and
pop
scas
xor
adc
inc
addr16
pop
jns
lret
div
je
das
mov
rorl
mov
add
testl
movsl
push
sbb
gs
xor
leave
xor
jns
push
cmp
sub
cmp
out
js
hlt
sbb
cmp
adc
fstpt
out
xchg
js
stos
lcall
in
xchg
gs
or
jb
insb
mov
imul
popf
scas
imul
mov
stos
das
jo
xrelease
xchg
jo
xchg
pop
dec
inc
jnp
gs
push
push
lcall
sbb
mov
jo
sar
sub
mov
inc
popa
cmp
bnd
and
repnz
enter
sbb
adc
scas
mov
test
lods
sbb
jl
xor
popa
fcmovu
gs
sbb
inc
sbb
jne
jns
jecxz
sub
inc
adc
popa
loop
sub
lds
xchg
test
idivl
xchg
clc
sbb
xchg
dec
add
fcomip
xorl
pop
push
dec
sbb
pushf
sub
outsl
aaa
bound
cld
enter
add
stos
pop
inc
mov
jbe
pop
xchg
push
adc
test
xchg
lods
jns
cmp
xchg
mov
sarl
or
setle
mov
inc
adc
xor
and
and
and
rcr
dec
mov
mov
aas
mov
fwait
in
addr16
les
lret
pop
stc
push
dec
xor
push
fs
or
ds
pop
sbb
push
ds
sub
imul
fdivs
lds
dec
sub
std
aas
decb
jnp
and
xor
outsb
push
out
movsl
nop
jl
push
data16
dec
std
mov
or
mov
movsl
lea
push
insb
xor
fcoml
repnz
fdivrl
repz
cmp
dec
rcr
mov
imull
mov
push
aad
int3
sub
clc
out
and
adcl
mov
mov
push
push
frstor
mov
dec
test
ficoms
aaa
jge
inc
and
movsb
jae
add
mov
adc
jp
push
push
xchg
adc
mov
adc
cmp
insl
andl
hlt
shl
jle
jns
fdivr
fs
aad
and
mov
mov
or
add
scas
gs
repz
mov
ret
xor
lahf
mov
cltd
xchg
and
cwtl
xor
mov
and
loope
int3
daa
hlt
aas
shll
xchg
sahf
pushf
dec
je
jnp
dec
jmp
movsb
sub
arpl
jp
ss
rcrb
cmpsl
push
repz
mov
iret
dec
leave
cmp
xchg
in
gs
les
sbb
inc
push
into
test
test
pop
mov
test
mov
pop
movsb
mov
mov
pop
ret
popf
lods
enter
adc
xor
cmp
arpl
xlat
jl
xchg
jnp
cltd
fs
xchg
ljmp
inc
mov
cmp
faddp
inc
shrl
xchg
push
push
cmp
or
ss
add
fcmovnb
add
rorl
cmpsb
shll
shrl
sub
mov
xchg
cmp
xchg
test
mov
test
sbb
and
es
out
xor
add
lret
adc
imul
repz
sbb
inc
imul
cltd
or
aam
lds
rorl
aad
insb
inc
jae
add
adc
cmp
sarl
mov
and
cmp
ljmp
arpl
sti
mov
out
cwtl
test
adc
outsb
les
push
xor
clc
dec
movsl
cmpsl
mov
mov
fstpt
test
test
push
or
mov
cwtl
mov
pushf
xor
sbb
cwtl
loop
decb
xor
sbb
adc
es
push
push
fdiv
les
std
add
test
popa
mov
repnz
push
dec
mov
scas
arpl
pop
ljmp
push
int3
les
rorb
ljmp
testb
jo
mov
xor
xchg
lahf
add
mov
shll
outsb
add
mov
push
or
mov
mov
mov
nop
mov
xor
lods
call
adc
mov
into
sub
xor
xchg
es
dec
mov
test
cld
sbb
aas
jl
cmp
imul
rolb
add
sub
in
xchg
or
mov
pop
add
lcall
jb
jae
into
add
or
or
mov
jo
fcompl
push
inc
push
xor
lret
add
inc
jg
subb
xchg
dec
scas
or
jne
mov
fidivl
je,pt
fidivrl
jnp
in
icebp
mov
and
or
test
bndldx
cmp
adc
std
movsb
cwtl
rcrb
pop
fisubrl
adc
mov
popa
mov
cli
cmp
push
stc
inc
dec
in
movsb
pop
mov
das
and
cmp
mov
fidivs
rorl
ret
jmp
adc
imul
rol
ja
ficoms
aam
sti
inc
int
jl
sbb
xchg
mov
cmp
jl
add
mov
mov
mov
ficoms
dec
pop
cmp
or
das
xor
pusha
cmpsb
aad
dec
imul
in
pushf
andl
lcall
fcom
stos
add
xchg
push
mov
push
add
fadd
mov
mov
pop
cli
and
sbb
jns
cld
pop
in
mov
xlat
mov
popa
add
cli
pop
adc
sub
test
inc
or
xchg
xor
repz
ljmp
xcrypt-cbc
cmpsl
push
mov
push
icebp
sbb
lahf
adc
inc
mov
sbb
aas
cmc
leave
xchg
lods
fs
xchg
mov
jns
scas
xchg
imul
push
cmp
pop
mov
insb
dec
xchg
xor
cs
ljmp
movsb
adc
xor
iret
add
push
xor
add
ror
and
int3
xor
sub
outsb
addr16
pop
ret
movsl
cmp
or
mov
pushaw
xchg
add
imul
xor
inc
fstp
setno
or
lea
test
sbb
jmp
aaa
mov
cmpsb
lea
insb
in
push
mov
jns
rclb
ret
leave
xchg
int
cmp
inc
lds
mov
movsl
movsl
lods
inc
add
or
pop
and
ljmp
inc
jno
mov
in
mov
aaa
mov
adc
cli
pop
daa
or
cmpsb
jb
and
mov
adc
out
cwtl
add
and
mov
xchg
out
xchg
mov
gs
inc
add
xchg
and
ljmp
add
and
inc
mov
ljmp
pop
inc
add
push
cmp
adc
mov
mov
daa
loop
bound
cmpsb
add
xchg
int
sbb
sub
mov
sub
in
out
insb
xchg
adc
movsb
xchg
adc
clc
sahf
cmpsl
jne
and
cmp
in
lds
jle
lea
repnz
cli
mov
ss
mov
mov
aad
cmp
xchg
pop
jp
mov
mov
push
xchg
aad
or
js
add
loopne
push
inc
jo
imul
jg
in
sarb
sub
insb
xor
loop
movsb
and
dec
add
lds
jne
push
push
pop
lods
mov
add
cwtl
addr16
xchg
push
rcr
mov
das
dec
add
cmpsl
aam
dec
dec
loopne
paddw
mov
jle
and
sbb
nop
mov
add
outsl
clc
rcll
sbb
pop
mov
cwtl
daa
xchg
mov
and
jbe
cmpsl
out
and
dec
clc
sub
sbb
out
mov
inc
adc
int3
inc
shll
pusha
mov
ljmp
push
inc
fildll
rcr
pop
mov
dec
lods
out
sbb
adc
push
push
pop
jne
clc
sbb
sbb
je
and
out
add
ret
pop
stos
lret
sub
pop
cmp
iret
cmpsl
cmp
lds
test
outsb
dec
int
inc
arpl
loop
out
adc
pop
pop
cld
mov
xor
fninit
mov
xor
mov
fdiv
out
scas
xor
in
pop
je
daa
fnstenv
add
lods
cmp
test
pop
xchg
jns
lock
sti
sarb
sub
cmp
in
and
out
push
subl
cmp
inc
jp
movsb
mov
mov
loopne
add
xchg
call
jle
cmpsl
pop
and
or
lret
enter
push
cmp
movsb
fs
inc
cmp
int
das
out
bound
add
bound
dec
pop
cld
adc
lds
clc
mov
fisttpl
cmp
add
mov
outsl
mov
rcll
bound
and
sub
or
mov
adc
fnstcw
sbb
fdivrl
jnp
pop
mov
lock
mov
adc
xchg
xor
rol
fwait
aas
scas
jns
cmp
sub
cltd
testl
outsl
sub
dec
inc
iret
and
lock
scas
push
enter
in
xchg
cli
xlat
dec
outsb
loopne
jbe
adc
in
and
inc
enter
movsb
inc
sbb
push
xor
xor
push
ljmp
arpl
lret
sub
in
and
or
aaa
sub
or
jecxz
lahf
cltd
xchg
add
movsl
mov
push
cld
stc
insb
mov
aas
fiaddl
and
dec
mov
pop
leave
lahf
nop
addr16
cld
daa
call
mov
movsl
fldenv
mov
jb
js
jne
bound
inc
cmp
in
jl
popf
cltd
loope
dec
stos
and
mov
ret
push
jle
les
lret
in
out
std
cmp
sbb
jns
outsl
cs
pop
mov
cmc
cli
jg
insl
popa
adc
pushf
test
cmc
jne
sub
pop
adc
or
mov
les
aad
sbb
aaa
pop
jg
inc
test
jge
and
out
jae
iret
movsl
in
jo
loope
pop
xlat
out
lcall
fdivr
sahf
xchg
les
cli
ss
cmp
scas
mov
pop
mov
outsb
ds
pop
mov
mov
scas
pop
or
mov
pusha
mov
pop
jns
lds
test
test
adc
mov
xor
in
push
push
fucomi
shlb
ret
hlt
jne
rcrb
or
out
mov
cmpsl
cmpl
scas
icebp
sub
int
inc
outsb
xor
adcl
std
push
push
fmuls
popa
or
loope
lahf
mov
loope
lods
or
jne
xor
aaa
test
in
push
mov
push
sbb
jb
into
std
nop
inc
aam
mul
outsl
lock
lds
imul
jp
xchg
push
and
lock
cwtl
xchg
movsl
xor
shlb
mov
mov
inc
push
dec
fnstenv
cwtl
inc
dec
and
mov
jg
push
pop
movsb
pop
jl
test
jge
inc
cld
dec
or
iret
push
imul
pushf
movsl
lock
add
fucomi
sub
inc
and
push
dec
xchg
xlat
mov
xlat
xor
lods
cwtl
in
aam
nop
test
push
fisttps
mov
cmc
jns
ss
push
pop
or
inc
popf
ljmp
sbb
cmpsb
push
pop
or
lods
jbe
arpl
jns
movsb
testl
pop
add
inc
jbe
mov
sub
lcall
xchg
xchg
bswap
rol
sub
outsb
outsl
xorl
mov
leave
pop
xchg
subb
fs
cmpsb
fwait
stos
jg
xchg
and
leave
or
fisttps
jl
cmp
mov
pop
dec
rol
in
inc
sub
ror
jp
or
gs
or
stos
xor
int3
rol
add
dec
scas
enter
or
inc
sbb
cmp
mov
sahf
mov
out
das
cltd
mov
or
test
cmp
stos
lds
push
lret
push
inc
lret
cmp
ja
out
cmp
sub
das
pop
lods
stos
in
scas
push
insb
std
mov
cmp
jmp
imul
add
aaa
movsb
aam
pop
neg
mov
pop
cmpsl
mov
pop
xchg
adc
shl
jecxz
mov
mov
cmpsb
inc
sub
jge
nop
xchg
inc
inc
sub
mov
mov
aad
loope
xor
and
cmpsb
add
and
add
push
mov
out
xor
jnp
xor
in
test
call
pop
pop
mov
push
sahf
fstl
ja
fadd
sub
std
inc
jbe
subb
inc
mov
dec
push
mov
jo
cmpsl
push
cmp
cmp
adc
dec
xchg
sub
es
popaw
sbb
shlb
into
push
popa
mov
mov
push
incl
out
ret
dec
jb
filds
push
dec
xor
loope
xchg
nop
dec
xchg
fnstenv
inc
cmc
movsl
push
in
xor
inc
fwait
pusha
mov
ret
test
imull
cmpsl
popl
sbb
cltd
out
mov
loopne
andl
pop
push
mov
mov
sub
shl
fadd
cmpsl
insb
adc
mov
xchg
sbb
inc
xchg
out
sub
fldl
jecxz
xchg
mov
add
cltd
stos
out
jle
pop
je
sbb
xchg
jnp
or
add
push
adc
dec
cmp
add
push
mov
pop
and
inc
dec
xlat
adc
outsl
popa
mov
pushf
in
push
mov
sbb
scas
lods
in
aaa
add
les
add
rcll
mov
aas
adc
cmp
inc
jb
icebp
dec
sub
insl
cmp
fldenv
and
daa
sbb
inc
or
add
stos
push
and
pop
cld
pop
mov
popf
pop
loope
adc
or
push
out
push
sbb
mov
sbb
sub
pop
dec
inc
jg
xchg
add
adc
mov
popa
mov
outsl
std
cmp
mov
negl
jns
mov
in
test
xchg
xlat
lret
mov
cs
daa
dec
insb
pop
jl
xor
dec
adc
popf
add
sub
das
fsubrs
xor
and
sbb
lds
stos
sbb
in
xchg
dec
dec
push
sbb
scas
sbb
mov
pop
mov
cli
rolb
dec
cmp
insb
icebp
stc
pop
push
out
jne
dec
mov
and
mov
adc
push
mov
xchg
negl
scas
les
andb
push
imul
sbb
out
cmp
mov
xchg
xchg
lcall
cmpsl
das
roll
hlt
push
in
cmp
or
xor
cwtl
insl
push
sar
add
shl
loopne
xchg
inc
test
lcall
stos
pop
movsb
mov
movsb
test
hlt
pop
shll
jnp
add
inc
pop
mov
mov
jae
in
jecxz
and
mov
cmp
mov
and
cmpsl
xchg
mov
mov
or
shrb
sbb
adc
test
aad
jno
je
cmpsb
jbe
dec
out
clc
pop
lods
stos
sbb
mov
xchg
xchg
add
mov
sub
in
jge
js
sti
mov
outsl
fwait
orb
jl
lcall
dec
iret
lea
pop
enter
lret
scas
xor
rcll
xchg
jge
xor
or
icebp
movsl
pop
ss
or
outsb
xor
cmp
push
fwait
jns
fbstp
lret
sub
add
xchg
decb
mov
jo
xchg
inc
and
scas
cmp
sub
ret
mov
pushf
mov
ret
mov
cmc
sti
sbb
pusha
lcall
push
push
dec
or
or
add
std
push
je
cmp
pop
not
push
inc
push
test
mov
mov
push
daa
fsts
fmuls
int3
bound
push
xchg
mov
or
mov
nop
popa
and
pushf
xchg
stos
push
fwait
pushf
aad
mov
cmp
lock
sbb
mov
mov
adc
mov
test
pop
aas
stc
or
ficompl
adc
cmp
cli
int3
push
adc
inc
mov
push
sub
scas
push
mov
ret
push
and
leave
pop
adc
xlat
jb
or
je
cmc
imul
aas
dec
je
or
dec
xchg
mov
cli
sub
cld
add
ret
jmp
in
and
movsb
jge
mov
js
shr
lcall
mov
jne
test
pop
loop
jne
push
imul
mov
adc
xor
aad
jmp
xchg
or
cli
lods
hlt
sti
or
xor
arpl
outsl
stos
sbb
sarl
xorb
and
xor
inc
pop
sub
mov
add
mov
pop
stos
dec
in
push
lahf
mov
and
rorb
dec
mov
push
pop
xor
adc
rcrl
xchg
add
lret
xor
fbstp
dec
aad
jb
lods
fmull
dec
cmpsb
sub
add
jne
popf
xchg
mov
arpl
pop
and
movsb
arpl
mull
jle
xor
cmp
push
xor
mov
or
fnstenv
lcall
pop
sahf
movsl
or
mov
fisubs
dec
inc
sti
cmp
inc
push
test
leave
lds
dec
inc
hlt
orl
jbe
andl
pop
ret
and
ret
add
xchg
add
push
and
sbb
fnstcw
lcall
in
cmp
movsl
mov
pop
adc
ljmp
cli
jle
leave
in
arpl
mov
or
xor
stos
nop
sbb
insb
cld
lahf
fs
inc
sbb
jne
dec
imul
add
xchg
stc
cmp
lahf
daa
xor
sub
push
jne
adc
or
enter
imul
push
inc
mov
mov
xchg
stos
out
call
pop
inc
insl
or
cmp
jmp
insb
inc
lret
inc
xchg
test
test
das
jno
cmp
sub
fdivrl
rorl
popf
addr16
adc
lahf
mov
testl
mov
push
jb
test
mov
xor
push
repz
scas
int3
lds
cmp
lock
push
rcrb
jb
inc
xchg
rclb
sub
push
int
jecxz
pop
int3
xor
into
leave
cmc
adc
mov
in
xor
xor
test
test
out
outsl
popf
ja
jae
sbb
cli
stos
push
sub
fidivrs
punpckhdq
mov
scas
out
cmpsb
mov
jge
pop
mov
lcall
lret
popf
sbb
sbb
jnp
cmp
jo
push
xchg
movsb
and
gs
cmp
ds
fadds
imul
mov
cmp
mov
mov
rol
mov
lahf
or
aad
xchg
jae
adc
pop
cmp
xchg
fcmovbe
ret
loopne
std
pop
pusha
mov
push
inc
push
testl
sub
gs
inc
mov
pop
aad
pop
loopne
rcrl
shlb
dec
repnz
incl
mov
xorb
lcall
js
test
fcomi
jnp
cmp
push
popa
test
rolb
jo
sub
pop
sbb
mov
jno
mov
mov
pop
add
hlt
pop
lahf
sbb
sbb
fsubrs
mov
xor
pop
push
rcl
pop
outsl
scas
push
cmp
nop
shlb
ss
push
jmp
shr
or
adc
mov
or
test
dec
add
stos
push
jg
inc
test
dec
dec
xchg
push
and
jns
xor
push
outsl
movsb
fisubrs
cmpsl
es
shrb
and
adc
xchg
mov
or
fisttps
push
lods
add
popa
fisttpl
test
mov
xor
shl
add
orb
xchg
pop
sbb
mov
mov
andl
cmpsb
push
jo
or
lea
ficoml
lock
pushl
add
cmp
xlat
sbb
cld
adc
cmp
fdivl
mov
leave
pop
into
in
adc
movsl
ja
mov
and
pop
lahf
rorb
lret
push
mov
mov
lods
jne
sub
pop
leave
lret
push
sarl
out
ljmp
jns
push
daa
xchg
dec
push
int3
pop
mov
fwait
scas
fcmovnu
sub
das
ret
decl
push
jp
or
cmp
dec
fidivrl
imul
cmp
leave
pop
stc
push
jp
or
cmp
dec
fidivrl
imul
cmp
leave
pop
stc
push
jp
or
cmp
dec
fidivrl
push
lcall
leave
pop
stc
push
jp
or
cmp
ljmp
rcll
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
das
and
xor
add
adc
nopl
arpl
push
scas
mov
lahf
xchg
out
jecxz
jbe
ret
das
and
xor
add
adc
jg
dec
inc
pop
push
scas
mov
lahf
xchg
out
jecxz
repz
sbb
xor
add
adc
jg
dec
inc
pop
push
scas
or
xchg
xchg
mov
and
insb
jl
insl
inc
das
movsb
jg
les
gs
fs
js
lret
lahf
adc
xchg
in
inc
loopne
mov
adc
xchg
dec
add
ljmp
jnp
and
hlt
xchg
jg
out
outsb
mov
scas
pop
aad
jo
cmc
outsb
dec
loop
xor
ss
iret
sahf
adc
outsl
jae
int3
aaa
lods
scas
js
filds
jl
ret
adc
fstpl
ret
dec
int3
xchg
in
aam
je
dec
push
pop
sarb
jl
push
cmp
pop
shlb
ljmp
aam
call
aad
ja
ficoml
iret
xlat
mov
jno
aas
xor
add
adc
jg
dec
inc
pop
push
scas
mov
lahf
xchg
out
jecxz
repz
ret
fistpll
push
jp
add
ss
or
mov
aad
adcb
sub
dec
xor
jp
sub
adc
dec
xor
push
lret
into
loop
cld
mov
filds
imul
outsl
arpl
dec
inc
pop
push
scas
mov
lahf
xchg
out
jecxz
repz
ret
das
and
xor
add
adc
jg
dec
inc
pop
push
scas
mov
lahf
xchg
out
jecxz
repz
ret
das
and
push
mov
sbbl
into
xchg
and
mov
sbb
jae
data16
jnp
sbb
popf
sbb
push
xchg
jmp
push
jae
inc
repz
mov
pop
ret
dec
or
xchg
xor
scas
dec
sbb
pop
addr16
add
ds
or
test
push
test
push
rcll
out
lcall
sub
cmp
and
xchg
movsl
or
lahf
aas
fcoml
dec
xchg
ja
jg
mov
pop
cmp
sbb
lahf
jl
int3
mov
movsl
insl
daa
jo
repnz
xor
cmp
or
xchg
sub
rcrl
mov
loop
pop
lret
nop
sbb
aaa
push
mov
sub
inc
stc
mov
xchg
bound
fs
pop
ss
pop
and
leave
add
stos
mov
xor
inc
mov
mov
jmp
in
out
shrl
arpl
cltd
jge
fdivr
addr16
loopne
pop
mov
mov
jecxz
fcmovb
dec
icebp
loopne
dec
mov
testb
or
pop
push
cmp
shlb
jge
sub
pusha
jmp
pop
cli
cmp
push
call
ljmp
mov
addb
sti
jp
popa
inc
les
loope
adc
add
lret
cs
cmp
xor
cmp
dec
loop
lcall
xchg
cmc
ljmp
cwtl
sbb
les
xor
dec
into
jmp
jbe
sbb
movsb
rcrb
cltd
shrb
and
lcall
jg
shll
pop
cmp
jae
cltd
out
mov
adc
push
mov
hlt
jnp
add
push
xchg
mov
jmp
int
mov
add
sub
inc
sub
adc
mov
stos
iret
or
or
inc
cmp
jb
clc
sub
mov
mov
push
and
xchg
push
insb
pop
fdivr
sub
xor
xchg
xchg
enter
in
jge
bound
cs
hlt
daa
xchg
in
sbb
and
jmp
xlat
jbe
lds
and
insb
hlt
dec
sbb
push
enter
cmpl
iret
push
movsb
idivl
dec
add
jg
leave
lds
push
movsl
aam
xchg
or
jno
fs
filds
adc
and
and
out
loope
mov
rolb
or
jmp
xor
cmp
insl
pop
inc
push
push
cld
ljmp
adc
das
lods
inc
lcall
fcomip
mov
push
mov
sbb
inc
idivl
xor
outsl
int3
fs
dec
pop
int
fwait
pop
xor
xor
imul
jp
sbb
jno
jecxz
cmpsb
xchg
or
aad
das
pop
pop
adc
jecxz
sti
idivb
or
aad
add
cmpsl
xor
aas
arpl
test
mov
les
iret
cmpsb
out
loope
pop
dec
jmp
sub
addr16
mov
sbb
out
adc
jl
jge
sbb
mov
cmpsb
in
test
aaa
mov
xchg
inc
xlat
ljmp
aas
lock
in
jmp
adc
mov
push
xchg
dec
insl
adc
sti
push
hlt
cld
xchg
dec
icebp
lahf
pop
rcr
shl
dec
rorb
addr16
insl
pop
push
and
jnp
mov
sub
push
jp
jecxz
inc
or
dec
iret
push
pop
out
hlt
test
fistps
insb
js
cmpsl
xlat
or
in
and
sub
mov
into
test
imul
call
fiaddl
mov
jnp
lea
subb
jl
push
xor
xchg
push
out
int3
sbb
adcb
mov
fidivs
or
lret
inc
aaa
imul
inc
sbb
pop
or
stc
adc
mov
mov
push
fdivr
mov
mov
ljmp
ljmp
jns
add
dec
or
pop
mov
mov
clc
fldl
and
sub
outsb
mov
js
adc
jo
insb
aas
pop
scas
ret
in
jbe
dec
or
aad
inc
outsl
inc
and
aaa
test
rclb
clc
sbb
call
ficomps
repz
mov
aad
movsl
or
xchg
jle
jb
xor
add
jge
dec
mov
mov
popf
js
insl
test
push
xchg
mov
mov
sbb
add
xchg
daa
pop
out
fmul
aad
loopne
pushf
mov
scas
jnp
rcrl
lahf
pop
les
dec
adc
rol
arpl
pop
or
or
xor
cli
inc
insb
testb
inc
rorb
sub
push
jle
or
fldt
int
push
js
loopne
push
add
fwait
add
or
inc
popa
inc
and
enter
dec
outsl
int
arpl
data16
pushf
scas
lods
js
enter
loope
cmp
cmp
int3
fsubs
hlt
sub
sbb
jnp
cwtl
cmp
inc
popf
stos
pop
pop
pop
lds
into
jmp
insb
in
mov
dec
dec
scas
lods
mov
fwait
scas
popf
lods
out
mov
in
sub
icebp
sarb
adc
ljmp
ret
or
pushf
fisttpll
xor
push
jle
data16
jle
adc
cs
loopne
out
es
in
xor
pushf
test
sbb
and
add
lods
into
andb
enter
mov
xchg
fs
cmp
and
arpl
push
imul
das
aaa
int3
or
inc
andb
adc
cmp
fmul
jnp
dec
inc
dec
or
pop
cmpsb
pop
cmpsl
mov
and
nop
fisttpl
lock
xor
jle
xor
jmp
adc
adc
sbb
test
jge
adc
pop
cltd
jle
lods
xchg
notl
or
dec
fwait
repz
mov
push
addb
sub
mov
xchg
pop
mov
mov
ret
push
fwait
adc
xor
aam
ret
sbb
or
in
leave
les
xchg
int
cltd
jp
outsb
mov
mov
cmpsl
add
cmp
mov
in
mov
adc
sbb
xchg
pop
movsl
mov
stc
movsl
dec
cwtl
leave
js
adcb
jle
addl
leave
es
into
imul
roll
les
lods
negl
and
adc
pop
inc
call
mov
je
repnz
dec
inc
addr16
sub
cmpsl
xchg
fld
mov
mov
xchg
cmp
mov
lret
je
insb
mov
jmp
int3
gs
jmp
lods
ret
movsb
xchg
mov
jnp
ss
lret
lret
in
cltd
mov
adc
rolb
pop
les
cli
xchg
mov
daa
push
jae
jl
and
push
mov
add
xor
les
rorb
lahf
mov
mov
ret
sbb
sub
mov
pop
jecxz
test
ds
rolb
scas
ret
jb
je
movsl
mov
popa
sub
ljmp
jecxz
pushf
sub
mov
test
push
jb
and
inc
int
idiv
xchg
addb
out
sahf
cs
jb
mov
jae
cmp
cmp
rol
jle
loopne
lret
enter
mov
addl
add
mov
jno
sub
adc
mov
jmp
in
test
add
andb
and
and
lock
fwait
das
iret
insl
iret
sub
push
imul
and
lock
mov
mov
xor
sbb
dec
pop
inc
push
or
pop
ret
pop
jnp
add
adc
mov
inc
aam
add
fsubr
idivl
bound
add
outsb
fnsave
scas
inc
add
lret
jno
aad
sbb
mov
jle
mov
rcrb
cmp
and
or
in
jecxz
sbbl
mov
lret
add
jl
pop
sar
orb
test
cmp
xor
mov
adc
sahf
outsb
fsub
cmp
mov
pop
addr16
mov
adc
mov
xor
mov
inc
rolb
cmp
dec
lahf
ret
mov
jmp
cs
xchg
mov
daa
pop
mov
xchg
pop
push
jns
pop
pop
pop
mov
push
movsb
mov
xchg
push
mov
rorl
daa
test
push
fwait
pop
sti
fiadds
call
inc
jnp
xchg
push
inc
imul
jae
mov
sbb
dec
cltd
add
push
and
mov
xchg
push
ficoms
pusha
jns
xchg
lea
cmpsb
popa
faddl
repnz
xor
popf
or
inc
mov
test
mov
pusha
inc
outsb
inc
lods
lret
mov
xlat
iret
popa
adc
push
mov
or
push
sti
out
js
add
mov
mov
js
lock
js
mov
in
jno
loope
les
pop
popa
scas
lcall
ljmp
jmp
push
and
dec
mov
fidivrl
xor
in
and
or
and
ret
scas
inc
push
fsts
mov
stos
pop
pop
inc
cmp
xchg
aam
clc
rorl
sub
cmp
or
into
sub
adc
mov
pushl
arpl
mov
in
data16
loope
icebp
or
ss
sbb
dec
ret
add
mov
ss
sub
adc
rcrb
sbb
test
out
sub
mov
cmpb
addr16
stos
or
xchg
xor
sub
jae
push
jo
adc
mov
aas
xor
xchg
fwait
cmpb
jo
imul
lret
jbe
mov
pop
ret
and
test
bound
xchg
inc
ds
add
push
and
sbbl
cmp
cmp
push
push
adc
into
inc
xor
push
jne
mov
add
sub
test
mov
add
scas
xchg
pop
cld
hlt
pop
arpl
out
imul
xchg
out
xchg
loopne
test
fadd
iret
xor
dec
cmp
jnp
lahf
fmull
mov
cltd
sahf
pusha
mov
addl
push
adc
xor
and
aas
cmp
mov
sbb
xchg
dec
pop
popf
lds
hlt
fdivrs
cmpsb
mov
int
into
or
sub
sbb
inc
mov
in
dec
cwtl
xor
pop
fwait
cmc
mov
cmp
dec
inc
sbb
mov
sbb
pop
popa
jns
out
cmp
xor
xor
dec
push
sub
fidivl
hlt
dec
cmc
add
jl
insl
push
pop
outsb
mov
xor
jecxz
xor
ljmp
cwtl
xor
cmp
pop
popf
lods
mov
cmpsb
add
and
adc
das
insl
out
popa
je
mov
leave
fcmovnbe
mov
push
xchg
pop
dec
popf
pop
rcrb
push
mov
push
mov
lods
hlt
sbb
push
outsb
xor
and
insl
fiadds
mov
mov
imul
fmull
or
dec
mov
sub
imul
jb
fisubl
sbb
inc
ret
in
cmp
add
daa
enter
js
pop
scas
add
add
sbbb
scas
jmp
or
dec
push
in
fneni(8087
jnp
adc
aaa
xchg
push
xchg
outsl
cmp
xchg
sub
movsl
jne
cltd
xchg
lahf
jp
scas
cmp
cmp
hlt
sub
in
adc
mov
loop
imul
mov
sbb
loop
push
je
sbb
pop
push
loopne
jmp
mov
jbe
shll
imul
pop
jne
inc
pushf
mov
mov
int3
mov
shll
mov
jl
addr16
in
pop
mov
dec
pop
sub
jae
lock
cwtl
ja
and
icebp
mov
inc
dec
mov
sub
mov
jmp
hlt
sbb
adc
rol
sub
cmp
mov
mov
leave
mov
pop
aad
mov
in
lret
mov
shlb
jle
cltd
out
fs
pop
inc
inc
js
mov
cli
test
lock
std
push
dec
lock
or
mov
jno
out
outsl
cmp
cmpsb
in
jbe
mov
mov
sbb
pop
xchg
incl
bound
and
pop
movsb
mov
xchg
ljmpw
out
push
jns
cmp
rclb
cld
mov
insl
jne
loope
pop
arpl
cld
ds
add
dec
jg
pop
xchg
mov
movsl
mov
subl
in
push
loop
add
pop
cltd
sub
out
cmpsl
dec
scas
adc
jg
sti
pushf
xor
stos
pop
push
out
inc
je
push
adc
stc
mov
insl
or
dec
jmp
mov
lods
mov
push
jecxz
loopne
leave
stc
mov
dec
sbb
jecxz
mov
lods
pusha
cwtl
cs
xchg
shrb
inc
pop
dec
jge
add
fimuls
sub
lods
jnp
adc
xchg
push
cmpsl
sbb
orl
fwait
adc
loope
cmp
sbb
sbbl
shrl
mov
mov
adc
xchg
insb
fdivr
inc
cmovs
popa
cltd
stc
mov
lods
add
dec
xlat
dec
push
cmp
push
or
bound
dec
add
push
jp
fldt
enter
add
mov
movsl
lret
lahf
loop
imul
fwait
adc
sub
mov
dec
cli
aas
insb
les
addr16
push
js
sti
dec
fcoms
cltd
cmp
pusha
and
mov
mov
and
push
dec
mov
xor
out
rcr
js
ja
cmpsl
cmc
mov
and
lds
cmp
das
sbb
add
adc
andl
inc
lea
mov
iret
outsl
add
ja
loope
lock
dec
loop
test
pop
jb
shll
imulb
jmp
out
and
aam
rcr
fcomps
sbb
inc
xlat
and
and
lods
outsb
popa
mov
sub
stos
testb
cmp
arpl
cmpsb
fnsave
mov
and
cmp
jge
sub
dec
cmp
test
adc
add
pop
dec
int3
inc
ficompl
outsb
jae,pt
nop
lds
push
mov
sub
lret
ljmp
push
sub
cli
pushf
adc
add
dec
leave
daa
jl
sub
or
icebp
lret
pop
xor
fidivrs
jnp
pop
push
adc
leave
or
cltd
mov
in
addb
inc
inc
outsl
sbb
cmp
jmp
xchg
dec
sbb
cmp
insl
jne
in
push
or
pmaxsw
imul
into
cmc
lcall
movsb
push
inc
in
adc
adc
addr16
sub
push
test
int
push
dec
std
sub
xchg
push
jnp
sub
in
sbb
cli
mov
outsl
sbb
xor
pushf
test
xchg
jmp
adc
and
xor
clc
lock
adc
pop
push
dec
jg
inc
test
jge
in
lods
int
lret
inc
add
jns
ror
xor
adc
out
cmpl
mov
fidivs
mov
mov
cmp
lahf
adc
add
pop
xchg
jae
mov
and
or
sub
gs
ret
out
mulb
ror
insl
mov
test
add
sbb
mov
fcoms
inc
inc
inc
xchg
adc
movsb
ljmp
jge
idivl
pop
sub
clc
mov
pop
and
int3
xchg
incb
pusha
mov
pop
jmp
push
cmp
sub
jecxz
lcall
in
pusha
pop
adc
inc
imul
sti
and
add
cmc
nop
lods
cmp
dec
call
xor
repnz
jl
pop
lea
movsl
jge
xor
adc
mov
mov
mov
push
and
loopne
and
jmp
mov
loope
aad
rcpps
mov
push
pop
xor
cmp
pop
xor
jecxz
pop
dec
add
arpl
in
loopne
mov
mov
mov
lahf
and
add
test
adc
or
mov
and
addr16
push
sbb
enter
dec
xor
and
ret
fs
cmp
scas
adc
daa
lock
subl
sub
sub
jo
push
test
fiaddl
xor
dec
ss
out
adc
push
daa
inc
sahf
pop
clc
andb
cmp
mov
sub
jo
bound
cmpsl
in
out
fs
dec
loope
std
sub
popa
pop
push
push
adc
dec
cli
in
mov
loope
fs
xchg
leave
sbb
dec
sbb
ret
fsubl
xchg
int
es
pop
cmpsl
inc
rol
adc
lcall
lds
rcll
adc
roll
xchg
pop
in
js
sub
add
and
adc
pop
xchg
out
adc
aam
push
jo
or
insb
push
das
divps
stos
mulb
hlt
sbb
in
orl
shrb
pop
sub
fidivs
mov
cwtl
and
push
and
or
into
shrl
add
sub
pusha
sub
mov
push
cmp
fistps
sti
add
lret
xor
lret
fisubs
push
lret
pop
jo
xchg
xor
jecxz
imul
pop
lret
mov
into
pop
inc
push
into
fs
lea
inc
hlt
scas
xor
mov
imul
in
arpl
add
pop
pop
pop
shll
movsb
dec
aad
push
xor
mov
xchg
adc
cmp
inc
mov
lea
js
loope
test
mov
sbb
fdivrs
add
imul
jne
pop
lea
out
xor
xor
push
out
sbb
sub
xor
xor
sub
xchg
mov
out
test
push
aad
push
fiaddl
fwait
or
popf
pop
gs
mov
cmp
inc
mov
mov
jbe
lret
or
cmpsl
mov
xor
sub
fisubrl
and
data16
out
test
nop
pop
and
xorb
bound
mov
leave
ja
jge
insb
pop
clc
dec
mov
cmpb
cmp
add
mov
mov
popf
jne
shrb
and
xchg
inc
or
in
add
es
inc
mov
movsb
fsubs
stc
mov
lret
subl
dec
mov
lcall
sub
loop
sub
cmc
mov
mov
add
pop
gs
stc
xchg
push
lea
gs
outsb
leave
lahf
mov
aaa
pop
nop
orb
shrl
xor
cmpsl
fstpl
rcrl
das
gs
cli
popa
xchg
adc
add
iret
jne
add
cmp
shrl
xor
adc
sbb
push
push
push
sbb
and
cmp
xor
mov
mov
jle
pop
sub
push
cmc
jae
add
add
imul
and
int3
push
fldcw
iret
xchg
xlat
out
rcll
jnp
sub
les
jg
scas
adc
adc
adc
push
fidivrs
jo
and
icebp
adc
xor
xchg
mov
cmp
jbe
push
sub
adc
insl
cli
and
sarb
insb
fidivrl
cmp
add
mov
adc
and
and
inc
imul
add
mov
jo
adc
lea
ds
add
sub
ret
xor
in
push
adc
pop
inc
xor
mov
out
mov
inc
cmp
mov
inc
ljmp
movsl
xchg
push
cmp
sbb
jl
outsl
je
cmc
push
jb
sarl
push
xor
lcall
xchg
jne
pushf
add
xchg
ds
popa
adc
jmp
pop
xchg
inc
movsb
xchg
lods
xor
data16
mov
and
les
stc
jecxz
sub
mov
je
subb
nop
andl
add
jecxz
inc
sub
notl
adc
scas
call
xchg
sub
sahf
adc
sub
mov
je
cltd
mov
leave
mov
out
mov
ficomps
push
dec
seta
sbb
jns
js
dec
push
aad
testl
scas
pand
fcoms
insl
adc
push
push
push
dec
sahf
stos
loope
pushf
mov
and
jnp
cmpsb
and
insl
xlat
push
and
imul
or
mov
nop
xchg
pop
inc
cld
dec
sbb
lods
xlat
pusha
ret
xchg
jo
xchg
mov
push
ja
adc
out
ss
ficomps
fidivrl
inc
daa
and
jbe
jge
inc
sbb
adc
xor
inc
dec
repz
jmp
inc
mov
xor
daa
outsl
add
sahf
dec
dec
inc
in
faddl
adc
stc
rcl
clc
loope
dec
lea
and
rorl
adc
imul
ja
push
jns
cld
inc
inc
inc
pop
enter
sbb
imul
and
pushf
mov
sbb
pop
push
and
xchg
mov
dec
xchg
gs
fstl
clc
push
iret
push
fstps
sbb
aam
mov
mov
iret
orb
cmp
xchg
mov
fsubs
xchg
test
xorl
dec
xchg
int
push
call
mov
ja
stos
add
lsl
adc
add
xorb
jle
jae
es
in
sarb
fstp
xor
hlt
add
mov
and
dec
inc
sbbb
xor
in
xchg
or
mov
or
inc
fwait
imul
and
loop
inc
lods
add
lahf
jg
sub
enter
cmpsl
add
mov
jmp
xchg
orb
sub
js
mov
mov
fmull
inc
push
mov
aaa
or
cltd
jbe
sbb
mov
divb
fwait
push
mov
push
pop
pop
lret
and
add
mov
bound
stc
dec
movsb
mov
pop
mov
jle
shr
push
jne
adc
dec
je
and
cs
fists
mov
jo
fwait
rolb
nop
cwtl
inc
sbb
mov
test
add
outsl
and
lods
notb
xor
arpl
dec
inc
pop
push
scas
mov
lahf
xchg
out
jecxz
repz
ret
das
and
xor
add
adc
jg
dec
inc
pop
push
scas
mov
lahf
xchg
out
jecxz
repz
ret
das
and
mov
sbbl
outsl
arpl
dec
inc
pop
push
scas
and
xchg
out
jecxz
repz
ret
das
and
xor
add
adc
jg
dec
inc
pop
push
scas
mov
lahf
in
imul
cmp
sub
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
loope
icebp
jge
or
ret
sbb
insl
fwait
jns
imul
and
xor
add
adc
loope
icebp
cmp
mov
dec
xchg
jae
lods
jno
inc
test
loope
xor
add
adc
loope
icebp
sti
rcll
xor
popa
lods
push
sahf
sub
mov
jg
mov
pop
mov
test
es
jbe
xor
adc
popf
jns
loop
js
idivb
insb
mov
mov
clc
xor
mov
stc
fs
push
movsb
in
sub
iret
push
popa
lods
and
arpl
dec
add
sbb
sub
rcrl
add
xchg
shr
sub
pop
mov
clc
jno
xorb
mov
and
loop,pn
pop
mov
add
ljmp
into
call
sbb
push
ret
pop
int
and
or
xchg
pop
incb
divl
mov
mov
mov
rcrl
orl
adc
and
xor
add
adc
mov
popa
mov
adc
cmp
int
sub
and
push
mov
imul
aas
hlt
das
stc
and
outsb
add
and
inc
fists
and
fs
test
and
pop
popa
lods
jno
inc
lea
and
xor
add
adc
loope
icebp
cmp
mov
dec
xchg
pop
popa
lods
jno
inc
lea
and
xor
add
adc
loope
aam
pop
jo
repz
or
filds
mov
xchg
jns
int3
mov
push
xchg
inc
inc
aad
push
mov
xchg
cmpsl
sbb
pop
ret
fsubrl
inc
cmp
mov
jnp
test
jnp
sahf
push
subl
dec
mov
xchg
mov
daa
inc
cmpsl
xor
cmpsl
mov
sar
xor
ret
das
sbb
insb
sub
or
mov
mov
or
adc
adc
ss
mov
cld
xchg
mov
ss
movsl
stc
repz
shll
out
mov
scas
cmp
xlat
lcall
insl
loope
pop
sbb
pop
jg
test
jbe
aaa
or
ja
jge
adcb
adc
mov
mov
and
fnstcw
pop
fwait
adc
das
push
sarl
mov
mov
push
test
aaa
mov
sahf
push
jae
cmpsl
inc
ret
ss
xor
imul
fstps
xor
std
mov
stc
or
jmp
mov
adc
divl
gs
pushf
inc
jge
out
cmp
mov
push
or
push
add
fistpll
adc
pop
stc
push
lahf
mov
ss
out
fisubrl
sub
inc
bound
sbb
cli
xchg
cmc
xchg
std
or
xchg
movsl
enter
scas
mov
mov
push
dec
mov
movsl
pop
mov
in
adc
loope
mov
nop
jns
adc
jg
out
dec
lret
mov
mov
jns
fwait
mov
mov
push
pop
jle,pn
lret
add
arpl
jmp
inc
jnp
lret
dec
push
cmpl
xchg
jns
jmp
lahf
mov
push
pop
std
mov
cmc
push
imul
pop
mov
xchg
dec
loopne
xchg
xor
jge
push
cmp
into
mov
or
mov
pop
push
sbb
mov
das
popf
jmp
push
add
xorb
outsl
xchg
rcrl
ds
inc
and
jae
subb
inc
das
adc
xchg
jle
js
adc
jl
xchg
add
jnp
andb
add
mov
and
jle
std
mov
or
scas
add
gs
das
adc
sahf
sbb
loop
ret
fwait
iret
mov
inc
loopne
or
mov
scas
push
lods
fidivs
in
dec
sub
fldt
adcb
arpl
mov
pushf
sti
mov
add
xchg
inc
pop
and
inc
cmp
adcb
out
push
xor
mov
jne
notb
loop
lds
push
and
ret
or
mov
push
add
aaa
mov
sbb
aad
arpl
xor
fisttpll
push
testb
jno
mov
dec
sub
adc
jp
ljmp
scas
fxam
insl
addr16
es
and
pop
lret
call
test
sbb
shr
pop
pop
cvttps2pi
movsl
xchg
or
pop
outsb
jae
pop
bound
mov
mul
lahf
stc
ret
sub
iret
jge
push
sbb
push
movsl
pop
mulps
js
push
sahf
out
jp
repnz
xchg
rclb
push
cmpl
int
mov
jb
mov
push
jnp
imulb
cltd
in
adc
jmp
push
mov
mov
jno
in
mov
mov
dec
jae
out
rcrb
or
xor
fsubr
test
xchg
or
icebp
movntq
out
cmp
lea
dec
and
ror
std
mov
aas
rcr
std
lea
data16
dec
cld
dec
inc
jns
adc
lret
fisubs
addr16
pop
mov
aas
aam
cmc
int3
call
push
mov
jge
sbb
jg
adc
mov
iret
xor
add
rcrl
pop
ret
je
mov
insb
inc
adc
cwtl
mov
mov
aad
call
and
pop
mov
insb
andnps
aad
sti
test
add
adc
clc
addr16
shl
push
imul
lret
lods
int
push
mov
add
dec
mov
aaa
jecxz
sub
mov
rcll
out
and
mov
pop
or
insb
sbb
jmp
xchg
sub
and
in
xor
and
mov
fists
jb
es
cmp
int3
mov
rol
dec
insb
inc
je
xlat
rcl
add
ja
inc
jns
jle
rcrl
xchg
in
xor
int
das
aam
jb
je
pop
aad
mov
mov
adc
out
in
mov
mov
push
js
add
or
or
mov
lea
xor
mov
pop
push
cli
incl
or
jne
shl
dec
idiv
adc
pushf
jns
out
lods
fldl
mov
sbb
fwait
adc
gs
push
cmp
popf
cmp
xor
inc
jo
orb
adc
xor
test
lods
pop
loope
sbb
sarl
ret
jne
push
mov
push
or
xchg
lock
test
inc
mov
add
popa
push
pop
cli
push
sub
pop
sub
enter
and
sub
push
mov
jae
je
insb
mov
sub
adc
aas
xor
mov
cltd
inc
clc
pop
fisttpll
fbld
movsl
and
jns
mov
xor
call
lods
pop
and
push
stos
addb
or
cmp
mov
insb
stc
pop
pop
pusha
cwtl
lea
mov
xchg
rcll
enter
or
aam
pop
mov
movsb
aas
pusha
xchg
or
lcall
push
xchg
sub
sub
shrb
inc
and
loop
mov
cmp
scas
rcrl
icebp
test
ja
xchg
inc
sub
sbb
lods
mov
sbb
xor
mov
xor
out
rorl
push
cmp
int
cmp
addr16
subl
pop
add
pop
std
push
aaa
inc
daa
arpl
push
ljmp
jae
mov
scas
loopne
adc
adc
test
add
mov
jns
sub
aaa
ja
rorl
test
scas
xchg
jne
and
sahf
cmp
ret
mov
mov
repnz
testb
sarl
push
xor
inc
and
mov
pop
cltd
roll
insb
fnsave
ror
in
sahf
lahf
mov
test
jnp
push
pop
mov
adc
sbb
outsl
add
fwait
jmp
dec
pop
dec
clc
aas
inc
fldt
lods
insl
jne
sbbl
jle
rcll
mov
or
xchg
fbld
imul
lods
push
cmpsb
push
test
pusha
add
test
push
push
pop
aam
testl
fbld
daa
inc
lods
pop
and
cmc
adc
mov
nop
sbb
test
sub
push
lret
jecxz
fcomps
mov
xor
jle
mov
mov
daa
xchg
imul
lods
push
das
js
sub
mov
jg
test
push
les
ljmp
mov
arpl
aaa
in
jb
loope
test
push
jae
sub
sbb
push
sbb
xchg
cwtl
mov
imul
push
cmp
cld
out
insl
sar
pop
cmp
pop
push
jnp
shll
sahf
test
in
pushf
dec
iret
fiaddl
testb
cltd
call
roll
jecxz
jg
addr16
idiv
aas
out
cmc
jb
out
setb
xchg
mov
rcr
pop
jmp
push
jno
lds
dec
int
and
jb
xchg
and
sbb
fnstcw
dec
jns
xor
push
stos
cmp
pushf
xchg
mov
cld
sbb
dec
loopne
jl
cld
xchg
lcall
sbb
and
in
push
sbb
leave
mov
sarb
cmp
push
pop
sbb
fwait
mov
fdivrl
lods
mov
pop
imul
dec
enter
sbb
jl
cmp
popf
lds
call
int3
sub
mov
insb
bound
jmp
mov
lods
mov
and
fwait
cmp
movsb
mov
loope
xchg
mov
pushf
bound
lods
loop
scas
jae
lret
jmp
lcall
sub
in
ficomps
adc
jo
jp
shll
sub
mov
mov
push
or
sbb
gs
lcall
cs
jmp
mov
loope
mov
mov
jae
mov
hlt
icebp
cmp
xchg
sub
stos
jnp
lds
mov
jle
sarb
cmp
loop
hlt
push
push
insb
push
xor
cli
mov
inc
fadds
lret
pop
jbe
mov
jns
and
xchg
and
int3
jg
inc
sbbb
mov
lods
inc
dec
loope,pt
imul
lods
pop
mov
cmp
dec
and
jp
rorb
add
push
cmp
leave
gs
xor
mov
bnd
jmp
xchg
lock
cmpsl
sbb
in
pop
enter
inc
movl
inc
inc
lret
addb
sub
xor
pop
jo
or
xor
ja
add
mov
inc
jnp
cmp
lods
aam
sahf
movsl
or
push
pop
ret
jne
pop
cld
sbb
fldcw
push
outsl
xchg
ss
mov
ss
aam
rcr
mov
and
into
arpl
pop
dec
lods
push
aaa
xchg
lods
mov
shrl
in
add
inc
incb
inc
jge
jmp
jmp
inc
mov
pop
and
xchg
movb
les
pop
inc
repz
push
add
sbb
mov
fisttpll
fistpl
pop
inc
add
fsubrs
xor
cli
idiv
push
mov
or
inc
scas
les
cli
mov
jl
xchg
fisubl
test
loope
or
aaa
push
hlt
adc
mov
ljmp
js
shrl
scas
test
mov
inc
outsl
push
cmpb
aam
xchg
xchg
xchg
pop
rcl
inc
sbb
and
or
or
cwtl
mov
leave
cmc
mov
cwtl
leave
sub
pop
leave
mov
sbb
push
xchg
sbb
arpl
outsl
mov
div
rcl
clc
mov
push
cmpsl
xlat
or
adc
pushf
adc
or
xor
fistl
mov
mov
sahf
in
sbbb
xchg
call
jbe
inc
mov
jbe
push
push
mov
inc
ret
in
pop
lea
popa
dec
aaa
addr16
inc
popf
cs
sub
push
jnp
decl
mov
mov
push
aam
clc
bound
pushf
jle
add
pop
out
and
xchg
mov
or
lods
mov
in
pop
mov
push
add
inc
push
add
sarl
jb
jg
test
or
jbe
in
adc
sarb
lret
hlt
stc
int
xchg
jne
imul
mov
ja
idivl
inc
push
adc
insl
mov
insb
jmp
outsl
movsl
xlat
std
adcl
mov
jge
cmp
fdivrs
adc
dec
cli
jmp
mov
neg
addb
lods
rcl
lret
or
pop
push
push
and
das
loop
xchg
sub
adc
loopne
mov
idiv
mov
jnp
arpl
mov
mov
imul
or
jmp
push
add
cmp
cmp
add
mov
data16
cld
mov
jns
stc
mov
sbb
push
or
add
cmc
jo
lock
jns
ret
mov
or
sbb
push
das
xlat
push
push
orb
cmp
arpl
jmp
jge
movsb
mov
and
mov
cltd
ret
decl
lret
push
lcall
cmp
ret
or
and
je
loope
adc
or
mov
mov
push
and
jns
xor
mov
fadds
inc
out
jne
push
mov
imul
scas
leave
xchg
xor
lea
fadds
xor
cld
rclb
mov
xor
cmp
pop
jno
aad
xor
ficoml
insl
mov
add
add
adc
das
imul
inc
pop
cmp
sub
xchg
jnp
dec
ficomps
pop
cmpb
in
dec
lret
stos
or
mov
cmpsl
xchg
sub
dec
mov
xchg
test
mov
int3
push
lods
mov
inc
bound
dec
int3
and
xor
cld
les
pop
fisttpl
mov
dec
adcb
add
jecxz
pop
xchg
xchg
les
mov
mov
sub
adc
jecxz
jmp
sti
gs
jb
rolb
xchg
rcr
sbb
cld
aaa
pop
push
mov
inc
inc
dec
popf
cltd
adc
les
adc
sub
out
xlat
jge
rol
imul
jbe
push
hlt
or
and
mov
xchg
jp
ror
xchg
aaa
inc
adc
aas
rol
lock
mov
into
sbb
mov
sbb
jns
mov
scas
push
dec
movsb
sub
ret
ret
adc
mov
fwait
aaa
lods
fcoml
in
mov
rclb
enter
inc
lods
mov
xchg
dec
jno
leave
jmp
mov
add
cs
iret
vpmacsswd
adc
mov
icebp
and
es
jecxz
repz
adc
jno
dec
js
or
aam
inc
inc
fldt
lods
sahf
popa
xchg
xor
lock
xor
pop
les
daa
jno
orb
and
dec
in
inc
stc
addr16
loopne
adc
mov
les
mov
cmova
fiadds
push
add
and
jne
and
int
rcrb
in
push
test
mov
mov
lods
push
add
sub
xchg
out
add
outsb
incl
push
sub
sub
adc
mov
movsb
sbb
clc
jo
mov
pop
xor
pop
adc
fcompl
clc
xlat
xchg
mov
sbbb
sub
fnstsw
mov
in
xchg
test
aaa
pop
or
outsb
sbb
sub
jnp
jo
inc
mov
jp
lods
dec
lods
test
jge
sbb
ret
out
cmp
inc
lods
mov
loopne
insb
dec
mov
loope
mov
mov
dec
and
pushf
lea
push
fldenv
sahf
push
test
neg
mov
loop
in
xchg
push
push
addb
outsl
call
mov
cmpl
cwtl
push
lcall
lcall
add
and
testl
aad
and
mov
ds
pop
mov
xchg
fwait
bound
movl
dec
ljmp
hlt
add
lds
add
mov
pusha
call
je
mov
or
sbb
add
movsl
or
je
pop
stc
xchg
jp
xchg
mov
dec
lret
jb
icebp
pop
pop
lds
adc
xchg
aaa
scas
push
dec
push
aaa
xchg
test
rclb
add
sub
scas
andl
mov
movsb
out
call
mov
push
out
ds
add
xchg
insl
pop
adc
rorl
jns
push
popa
mov
and
repz
push
mov
sbb
mov
jl
xchg
loopne
out
mov
push
sahf
xlat
outsb
mov
add
mov
jae
in
mov
pop
imul
fildl
mov
sysexit
scas
xchg
mov
xchg
jp
mull
pop
jp
popa
les
add
pop
push
aas
repnz
jns
or
push
jb
cmp
jb
cmpsb
jns
and
into
dec
test
shr
xor
dec
jns
push
and
dec
icebp
dec
dec
sbb
push
lds
in
inc
adc
cmp
xchg
rorb
shlb
outsb
jnp
inc
add
lock
xchg
jne
adc
cld
jle
loopne
cmp
pop
sub
stos
mov
mov
neg
and
test
xlat
js
adc
dec
push
xchg
dec
inc
mov
ljmp
push
cmp
push
cli
push
ljmp
ret
lret
in
push
imul
push
inc
out
mov
mov
mov
mov
orb
in
aam
fldenv
inc
rol
cmpsl
insb
out
jnp
dec
gs
pop
lret
and
loopne
xchg
xchg
jnp
ret
leave
cmpb
addr16
call
enter
xchg
rolb
cs
jecxz
nop
popa
movb
sahf
add
std
lret
cmpsl
cltd
dec
aaa
xor
lds
lods
pop
es
mov
scas
stos
cld
into
mov
jae
in
lds
rorl
cmpsb
flds
loope
jp
add
lmsw
adc
mov
adc
cmpsb
adc
mov
cs
lock
cltd
or
push
add
dec
imul
and
and
xchg
call
cmp
clc
dec
pop
inc
cmpsb
dec
adc
clc
cwtl
pop
ror
jo
xor
lods
sti
xchg
jg
in
cmp
stos
fstpl
mov
out
xchg
cld
sub
cmp
xchg
dec
sahf
fdivrl
push
fisubrl
ret
mov
mov
inc
pop
and
dec
sbbl
xchg
mov
in
loop
lods
sub
xchg
inc
mov
push
mov
pop
mov
rcr
das
xchg
movsl
sbbl
pusha
arpl
xlat
push
int3
adc
mov
cmp
push
int
cwtl
adc
out
lcall
adc
fmul
ret
and
arpl
adc
sbb
jecxz
adc
xchg
cltd
stos
addr16
adc
enter
fwait
push
adc
inc
mov
int3
stos
adc
inc
pop
insl
pop
xchg
xchg
int3
rcr
adc
and
push
neg
popf
jmp
mov
mov
js
xor
add
push
pop
sub
add
adc
fcmove
and
or
push
cwtl
sbb
xor
jmp
ss
mov
outsb
dec
int
stos
in
int3
mov
mov
dec
push
cwtl
mov
jae
sbb
js
cs
daa
and
jmp
lods
or
lret
push
sub
sbb
das
add
test
inc
pop
jbe
data16
cmc
jecxz
push
cmp
jge
out
inc
mov
insb
adc
and
aas
mov
xchg
es
push
push
nop
pop
imul
shlb
je
cmp
stc
xchg
cmp
add
ljmp
jnp
lret
sbb
adcl
test
xchg
ficoms
push
mov
cltd
push
inc
in
adc
gs
in
mov
scas
test
push
inc
das
test
les
or
loopnew
and
inc
pusha
push
aas
ficoms
xlat
mov
pop
sub
sub
adc
xor
xlat
push
or
push
jge
xchg
and
popf
mov
xor
stos
ds
outsb
daa
call
lock
cmpsl
cmpsb
adc
out
out
adc
jmp
and
push
sub
jbe,pn
jo
inc
popf
xchg
mov
adc
aaa
dec
sbb
imul
fmuls
ret
inc
insb
pop
add
jns
push
test
aam
xlat
push
movsb
test
sub
add
stos
imul
adc
repnz
ret
add
adc
jno
popf
outsl
and
dec
in
test
adc
add
divb
mov
ss
clc
mov
divl
arpl
ret
scas
mov
clc
pop
push
call
in
lret
and
sti
andb
add
push
loop
add
test
rcrl
in
push
jmp
pop
pop
ja
dec
xchg
xchg
xor
mov
pop
mov
rclb
outsl
mov
decl
hlt
push
aam
mov
xor
mov
es
mov
ja
out
mov
mov
filds
sarb
ljmp
mov
fwait
add
add
insb
dec
fnstsw
pop
lcall
mov
push
ret
xor
and
jmp
and
jle
out
cs
das
and
mov
lcall
std
jo
inc
mov
dec
sbb
mov
shl
imul
aad
and
sahf
xchg
outsl
fidivl
inc
mov
inc
push
jp
lea
stos
repz
lea
mov
push
stc
mov
cmp
stc
scas
in
adc
mov
clc
fildl
pusha
fs
mov
inc
mov
negb
outsl
sub
fistl
xchg
lret
sbb
adc
bound
pop
std
lret
js
divl
mov
lahf
outsl
cmc
movsb
fwait
jmp
popa
sub
nop
add
div
mov
sbb
xchg
xchg
jo
aaa
je
pop
fwait
xor
fnsave
hlt
mov
dec
lahf
adc
mov
inc
lods
nop
clc
push
and
movsl
sub
imulb
shrb
sahf
pop
outsl
sbb
pop
xchg
push
mov
xor
scas
insb
push
sub
mov
cltd
dec
mov
xor
xchg
mov
xchg
add
loope
leave
xor
das
add
pop
sbb
das
lahf
lods
add
inc
add
leave
jmp
sbb
pop
pop
movsl
jle
jne
inc
js
pop
icebp
push
cmp
sahf
mov
sub
icebp
dec
cli
ss
xchg
push
xchg
loopne
jp
ja
rorb
or
dec
loop
mov
imul
sub
and
sub
adc
stc
outsb
shr
inc
push
js
push
jmp
ret
push
adc
aad
jnp
jae
sub
mov
dec
inc
lret
and
adc
in
rorb
call
inc
pop
shrl
aad
sbb
nop
lea
in
into
outsb
fdivr
sbb
sbb
xchg
pop
das
orl
sbb
js
jno
clc
sub
xchg
pop
jo
mov
jb
jo
sub
dec
pop
cmp
scas
lea
jns
stos
addr16
loopne
std
adc
push
out
int
cmp
mov
xchg
pop
loop
mov
mov
outsb
scas
call
das
mov
mov
pop
mov
xchg
es
xchg
push
fidivl
push
test
pop
dec
push
and
rorb
push
xor
pop
popa
jge
mov
imul
dec
xchg
sbb
sbb
xchg
pop
out
xor
rcll
mov
jbe
or
add
jbe
in
imul
icebp
mov
mov
jmp
push
mov
out
dec
nop
xchg
adc
hlt
push
aas
cli
les
mov
push
mov
fistpl
xchg
sbb
cmp
popf
cmc
jns
pop
mov
rorb
sbb
orl
mov
and
xor
add
adc
loope
icebp
cmp
mov
dec
xchg
pop
popa
lods
jno
inc
lea
and
xor
add
adc
loope
jno
inc
adc
mov
orl
mov
and
xor
add
adc
loope
icebp
fld
jmp
mov
or
jno
jmp
push
ljmp
popa
movsl
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
