xor
mov
mov
test
jmp
cmp
xlat
lea
jmp
push
mov
jmp
aad
popf
jne
jmp
nop
nop
nop
nop
push
push
pop
xor
push
pop
jmp
push
mov
jmp
nop
nop
nop
nop
push
xchg
rol
ror
and
inc
or
mov
sub
mov
mov
cld
andl
cld
push
mov
xor
mov
and
mov
nop
nop
nop
nop
nop
mov
nop
lea
jmp
adc
cld
in
mov
inc
cld
push
mov
mov
xchg
mov
push
pop
lea
jmp
xchg
or
push
out
out
add
add
xor
xchg
push
addr16
pushl
add
or
xor
mov
sub
push
shl
or
mov
add
ror
mov
ror
and
dec
test
jne
pop
pop
call
push
popl
jmp
xor
and
pop
xor
and
inc
mov
add
pop
add
sub
mov
xor
xchg
nop
nop
nop
nop
nop
rorl
jmp
or
rolb
rorb
add
test
incl
pop
and
xor
and
xor
pop
ret
jmp
xchg
nop
nop
nop
nop
nop
lea
jmp
jle
test
imul
push
push
adc
push
bound
pushf
nop
nop
nop
nop
nop
je
jmp
nop
nop
nop
nop
nop
nop
nop
nop
sub
xchg
lea
jmp
xchg
xor
idiv
adc
push
mov
jmp
xchg
pop
xor
push
mov
jmp
mov
push
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
push
pop
mov
shr
mov
push
push
pop
jmp
and
sub
add
push
and
add
xor
shl
sub
or
or
shr
mov
mov
shl
add
dec
test
jne
pop
lea
call
neg
jmp
sbb
jmp
jmp
add
add
ret
jmp
cmpl
nop
nop
nop
push
push
pop
push
cld
push
push
pop
push
xchg
jmp
push
nop
push
push
pop
push
mov
jmp
call
xchg
ror
mov
jmp
nop
push
mov
add
mov
add
xor
xor
mov
and
push
pop
sub
cld
pushl
xor
sub
pop
andl
xchg
push
nop
push
mov
jmp
and
mov
push
xchg
pushl
rol
add
and
push
mov
push
shl
inc
rol
xor
or
pop
shr
shl
dec
test
jne
pop
pop
call
jmp
inc
nop
call
xchg
lea
jmp
test
fdivrp
jmp
fildl
jne
and
rol
xor
xor
and
mov
add
pop
ret
jmp
std
mov
nop
nop
nop
mov
nop
movl
addr16
xor
mov
add
mov
xor
sub
mov
shr
jmp
popf
add
push
pop
and
mov
mov
cld
ret
jmp
hlt
por
nop
nop
nop
call
cld
test
jmp
stos
inc
je
call
mov
test
jmp
pop
xchg
je
je
call
xchg
test
jmp
mov
mov
add
nop
lea
jmp
cmp
js
or
shrb
pushl
xchg
pushl
addr16
call
leave
jmp
sbb
jmp
inc
nop
nop
nop
nop
nop
add
mov
push
mov
push
addr16
call
and
xor
mov
mov
xchg
jmp
call
mov
pushl
sub
mov
and
mov
or
pop
push
or
pop
add
mov
and
sub
mov
rep
jmp
ja
adc
and
and
sub
mov
pushl
and
dec
shl
and
pop
lea
jmp
jge
sub
xchg
jmp
add
pop
inc
add
and
pop
and
or
pop
cmpb
push
pop
je
jmp
or
orb
addb
add
nop
xor
push
pop
and
inc
shl
and
and
pop
lea
jmp
js
sub
cld
dec
push
pop
jmp
inc
mov
and
add
call
xchg
cmpb
xchg
jmp
mov
xchg
jmp
movb
xchg
jmp
nop
nop
nop
push
xchg
cmpl
addr16
jne
push
mov
lea
jmp
mov
cld
push
mov
push
addr16
jmp
dec
push
pop
dec
mov
jmp
nop
shl
sub
sub
ror
mov
jmp
push
mov
push
mov
push
mov
push
mov
test
jmp
push
add
add
and
lods
pop
mov
add
mov
jmp
cmp
adc
mov
mov
push
pop
jmp
shr
and
and
pop
jmp
xor
mov
sub
mov
shr
jmp
mov
xor
js
cld
add
add
add
shl
inc
sub
ror
add
mov
call
xchg
jmp
jmp
xor
mov
add
xchg
movzwl
jmp
push
mov
add
mov
sub
pop
nop
nop
nop
nop
nop
cmp
xchg
mov
jmp
jle
lea
jmp
mov
or
mov
jmp
pop
bound
mov
jmp
jbe
lea
jmp
inc
jmp
je
cmpb
xchg
jne
or
sub
xor
add
mov
jmp
nop
nop
nop
nop
nop
mov
sub
rol
ror
mov
pusha
jmp
decb
cmp
mov
add
or
and
xor
ror
inc
mov
sub
push
pop
mov
xchg
jmp
lea
jmp
js
mov
aaa
leave
out
mov
add
mov
mov
movzwl
jmp
jmp
jmp
pushl
sub
pop
and
xor
rol
mov
mov
mov
inc
mov
add
xchg
mov
xchg
rol
sub
mov
nop
nop
nop
nop
nop
ror
shr
and
or
or
mov
mov
mov
rep
jmp
jns
sti
es
mov
jmp
add
shl
mov
push
xchg
call
push
pop
add
xchg
push
popl
movb
mov
movl
xchg
jmp
or
xor
add
shr
xor
mov
nop
nop
nop
nop
nop
and
addr16
cmp
xchg
jmp
add
addr16
movzwl
jmp
pushf
aaa
inc
stos
cmp
incl
nop
add
nop
cmp
xchg
jmp
call
cld
popa
jmp
inc
pop
inc
xchg
jmp
xchg
pusha
jmp
fwait
add
loopne
dec
cli
jmp
shlb
add
and
xchg
jmp
ret
jmp
leave
lock
mov
nop
incl
cld
jmp
sub
and
xor
mov
movzbl
jmp
cmpsl
mov
xchg
incl
nop
xor
mov
inc
push
pop
jmp
jne
pushl
and
shr
pop
jmp
jl
ror
mov
add
inc
dec
mov
xor
dec
and
add
and
xor
xor
inc
and
mov
andl
addr16
dec
xor
and
add
xor
and
add
add
xchg
mov
mov
jmp
into
nop
mov
sbb
and
sub
mov
mov
and
mov
inc
xchg
inc
nop
shr
jmp
sub
jae
je
and
mov
add
mov
add
push
pop
add
mov
inc
push
pop
inc
mov
decl
jmp
mov
scas
and
test
jbe
xchg
jmp
shl
and
xor
mov
add
cld
cltd
jmp
mov
and
mov
add
mov
sar
jmp
sbb
imul
add
add
shr
add
add
test
clc
incl
push
jp
test
add
add
loop
sub
add
mov
rol
and
mov
sub
mov
mov
xchg
incl
nop
nop
nop
nop
nop
nop
dec
mov
mov
jmp
xchg
mov
adc
jne
jmp
jmp
cmpl
cld
jne
pushl
shr
pop
shl
inc
mov
mov
xchg
add
nop
shr
dec
pop
jmp
pushf
mov
push
or
xorb
lea
jmp
adc
sub
pop
inc
mov
enter
add
add
nop
test
jmp
jle
add
rol
shl
sub
xor
mov
mov
mov
jmp
and
push
popl
and
add
pop
leave
jmp
in
ret
jmp
int
nop
nop
nop
nop
sub
mov
sub
xchg
decl
jmp
insb
pop
jle
adc
push
jne
add
mov
mov
mov
sub
nop
nop
nop
nop
nop
nop
decl
jmp
fcos
fadd
xor
jne
test
jmp
imul
mov
add
jmp
ficomps
nop
jmp
call
mov
test
jmp
lds
incb
jne
nop
nop
nop
nop
nop
cmp
mov
jne
lea
jmp
sub
imul
hlt
decl
pop
pop
pop
pop
fcoml
jb
add
add
sub
mov
sub
nop
jmp
adc
repz
ror
mov
and
dec
dec
sub
mov
add
xchg
add
xchg
dec
jmp
popf
adc
or
test
call
test
jmp
jbe
das
ljmp
jmp
bound
bnd
push
in
mov
push
pop
incl
mov
dec
xchg
mov
jmp
and
jmp
sub
mov
jmp
jmp
rorl
jmp
xor
and
mov
jmp
xor
inc
xor
add
or
shl
sub
mov
movzbl
jmp
fisttpll
sbb
xchg
xchg
push
mov
add
cld
dec
jmp
lcall
jmp
insl
cmp
or
add
jbe
rorl
lea
jmp
jmp
push
nop
push
xchg
pushl
nop
push
xchg
pushl
sub
dec
push
shr
mov
mov
xor
add
sub
xor
rol
dec
test
jne
pop
pop
call
mov
xchg
call
push
pop
test
jmp
call
nop
nop
je
shr
and
and
mov
or
inc
mov
call
mov
inc
mov
mov
push
pop
jmp
orl
nop
jmp
insb
gs
sub
and
add
and
mov
call
cld
cmp
mov
jb
jmp
loop
ds
sub
mov
xor
dec
xor
xor
mov
pushl
mov
add
or
shl
pop
rep
jmp
xlat
incb
test
xor
shr
rol
sub
add
pop
inc
and
inc
xor
mov
push
cld
push
addr16
jmp
mov
cmp
xchg
jb
inc
xchg
cmp
nop
jae
inc
cld
inc
xchg
test
jmp
aaa
jg
es
nop
nop
nop
nop
nop
je
xor
shr
shl
add
and
mov
inc
and
sub
ror
mov
sub
xchg
jmp
mov
and
leave
call
xchg
push
xchg
push
xchg
nop
nop
nop
nop
nop
pushl
nop
call
xchg
sub
xor
add
mov
test
jmp
push
adc
adc
add
test
repnz
sub
push
or
add
mov
jmp
ret
mov
xchg
incl
xchg
jmp
mov
xchg
sub
mov
jmp
mov
or
mov
jmp
sub
pop
mov
jmp
xchg
jne
mov
mov
jmp
adc
nop
shr
jmp
cmpsl
test
jmp
lea
jmp
mov
mov
jmp
sbb
inc
dec
jle
mov
xchg
shr
mov
mov
jmp
pop
aaa
xor
mov
nop
nop
nop
nop
nop
inc
mov
jmp
or
mov
jmp
int
fimuls
mov
jmp
dec
dec
inc
shl
mov
and
xchg
cmp
xchg
jne
jmp
inc
xlat
jmp
mov
jmp
rorl
mov
incl
mov
incl
mov
mov
nop
jmp
mov
decl
add
push
pop
add
xchg
add
xchg
add
push
pop
mov
mov
addl
xchg
decl
jmp
xor
xchg
and
jmp
mov
xchg
cmpl
addr16
je
and
or
and
xor
mov
xor
sub
add
add
pop
sub
nop
and
or
xor
shl
sub
pop
leave
jmp
push
test
ret
jmp
adc
nop
nop
nop
add
xchg
cmpl
mov
jne
mov
xchg
test
jmp
nop
int3
mov
je
lea
jmp
addl
cmpl
xchg
nop
nop
nop
nop
nop
je
jmp
rol
add
mov
shl
mov
sub
add
mov
nop
nop
nop
nop
nop
add
addr16
push
mov
push
and
add
inc
and
shr
and
shr
xor
or
shr
mov
add
rol
and
dec
test
jne
pop
pushl
add
shl
add
sub
add
pop
call
cmp
xchg
nop
nop
nop
nop
nop
mov
jmp
outsl
insl
pusha
mov
add
test
add
add
mov
mov
test
jmp
xchg
jbe
jne
and
xor
mov
shr
or
and
add
dec
mov
add
xchg
rol
or
ror
xor
ror
mov
add
mov
nop
nop
nop
nop
nop
test
jmp
je
jmp
xor
sub
sub
rol
mov
add
test
jmp
dec
sarl
sub
mov
add
add
movzwl
jmp
lea
icebp
jmp
add
mov
add
mov
push
mov
pushl
push
pop
call
nop
nop
nop
nop
nop
add
xchg
mov
addr16
ror
sub
xor
ror
sub
mov
add
nop
nop
nop
nop
nop
nop
test
jmp
in
cmp
nop
nop
nop
nop
nop
jne
add
mov
cmpl
xchg
jne
mov
jmp
mov
mov
mov
nop
nop
nop
nop
nop
mov
and
xor
or
mov
mov
mov
sub
mov
inc
add
xor
and
or
mov
nop
nop
nop
nop
nop
mov
xchg
cmp
addr16
jne
or
mov
add
xor
and
add
add
cld
sub
or
ror
pop
nop
nop
nop
nop
nop
mov
push
pop
pushl
or
or
pop
add
xchg
add
shr
shr
sub
pop
sub
or
mov
dec
pop
and
xor
or
mov
sub
or
add
pop
ret
jmp
mov
nop
nop
nop
nop
nop
std
mov
xchg
ss
push
test
dec
insb
push
or
pop
int3
mov
pop
xchg
sub
insl
push
ret
push
push
aas
cli
faddl
cmp
sub
xor
sar
and
js
push
push
mov
loop
mov
lock
inc
movsb
sbb
pop
out
sbb
mov
rclb
push
jge
sahf
sub
test
xchg
add
push
sarl
hlt
add
and
data16
xchg
fldt
movsb
aad
mov
pop
add
push
and
jne
xor
dec
lret
mov
sbbl
mov
outsb
in
enter
int
sti
cmpsl
and
fsubrs
ss
pushf
out
mov
sbb
jno
mov
or
test
lcall
jmp
je
cltd
mov
pop
adc
repnz
stc
out
mov
dec
mov
pop
das
sub
add
push
orl
and
jne
les
aad
scas
ds
dec
stos
into
mov
addr16
sub
jne
dec
loopne
aas
repz
rorl
jmp
mov
pop
jnp
or
cmp
addb
jne
xor
inc
pop
out
jno
int3
aaa
jns
rcr
nop
loop
xor
lcall
jns
sbb
push
cmp
sar
or
jp
xor
cmc
cltd
imull
ljmp
jecxz
out
fldl
imul
add
inc
jno
xchg
push
or
nop
xchg
mov
mov
jge
cmp
mov
push
nop
loope
jns
nop
mov
rcl
or
inc
nop
aaa
mov
and
hlt
subl
je
pop
push
andl
xor
mov
xchg
sub
xchg
sahf
test
sbb
lea
stc
std
mulb
loop
xchg
ds
dec
adc
iret
push
or
filds
dec
movb
into
dec
or
rcr
pop
in
cmp
fsubr
mov
cmp
xor
dec
jl
leave
push
fisttps
pop
ja
jne
aaa
sahf
ret
push
lahf
cmc
dec
push
into
jno
mov
test
andl
test
jle
xor
repz
pop
sbb
dec
mov
outsl
inc
push
mov
test
rcr
adc
cmp
mov
cmp
adc
push
sbb
fmuls
fs
sbb
jmp
sarl
push
shl
dec
mov
push
xchg
aas
cmovns
pusha
cmp
mov
xor
test
aad
jne
or
into
bound
loop
xor
xchg
lcall
pop
jb
and
jg
popa
xchg
sub
lea
xor
iret
pop
sahf
add
fisubrs
sub
xchg
or
xor
clc
orb
repnz
inc
xchg
mov
popa
mov
dec
aad
mov
fadds
arpl
jae
lods
insb
inc
sarl
sbb
xchg
int3
and
jae
mov
jecxz
test
inc
adc
sarl
sub
jns
gs
andl
sti
nop
mov
ficomps
sub
push
nop
xor
scas
into
pop
push
andb
push
mov
push
pop
pop
lods
push
movsl
in
loop
xchg
in
lahf
add
shlb
pop
add
cmp
aam
stc
out
sbb
add
lods
das
adc
in
mov
loop
mov
sub
out
pop
mov
cltd
xor
lds
movsb
adc
ret
cwtl
aas
ds
ljmp
and
sbb
sahf
lret
xor
push
jg
adcl
inc
xchg
rcrl
repz
divl
cmpsb
push
pop
and
loopne
mov
pop
xor
jge
mov
cmp
jp
decl
xchg
icebp
fdivrl
imul
fcmovnu
jno
iret
test
es
or
sbb
rcrb
enter
pop
repz
mov
mov
out
jne
stos
bound
jecxz
rclb
lcall
xor
lods
test
xchg
inc
pop
jae
xchg
dec
adc
xlat
adc
xor
loop
push
sub
out
ss
mull
jne
test
pop
lcall
jae
cmc
add
enter
pop
xor
push
pop
push
cwtl
jno
inc
in
pop
sbb
push
mov
sbb
xor
or
push
xor
push
lds
testb
jge
sub
outsl
adc
or
into
ja
sub
icebp
nop
addr16
jnp
loop
dec
cmp
stc
aas
out
jg
dec
jp
sub
out
stc
enter
rclb
dec
sub
cmp
sbb
int
and
adc
aad
insb
test
or
mov
mov
ja
mov
pop
scas
lock
jmp
iret
pop
mov
scas
out
aas
dec
or
ret
pop
pop
ret
push
syscall
in
ffreep
xchg
push
inc
insb
mov
es
add
ss
sub
mov
inc
dec
mov
adc
and
nop
mov
bound
call
xchg
fwait
std
xlat
xchg
or
movups
jbe
sbb
lock
jge
pushf
and
push
aam
scas
push
popf
push
xor
sub
fnstcw
adc
vmovaps
adc
enter
jns
xchg
dec
xchg
xchg
out
leave
cmp
insb
fisttps
test
lret
xchg
jbe
lds
adc
icebp
pop
push
mov
sar
fistpll
lods
push
add
ja
push
mov
in
sbb
add
ficomps
movsb
jecxz
push
sbb
movsb
test
fucomi
jg
cwtl
dec
mov
popa
or
xchg
repz
and
pusha
xchg
sub
mov
cmc
mov
sti
rol
cmp
hlt
andl
cmp
dec
sbb
jnp
mov
mov
pop
jo
call
ss
xchg
or
ss
jmp
stc
sbb
jo
inc
push
into
push
dec
shll
mov
scas
or
push
pop
leave
cli
es
adc
daa
push
lock
test
fwait
nop
rcl
mov
sbb
outsb
xchg
stc
faddl
pop
mov
jns
bound
mov
test
push
mov
pop
pop
sbb
outsb
add
imul
ret
xchg
imul
arpl
mov
ljmp
fistps
loopne
jg
mov
push
ljmp
jns
div
imul
or
pop
mov
cld
lret
xor
js
pushf
pop
and
push
mov
fmul
lahf
cmp
sub
sbb
mov
pop
mov
mov
notl
add
and
inc
and
aaa
jmp
outsb
outsb
cltd
jle
or
xchg
push
mov
or
call
push
sub
jne
int
push
inc
lcall
sti
inc
shrb
xor
js
mov
cmp
mov
mov
push
inc
dec
fldenv
fwait
push
cmp
sbbl
stos
out
mov
pop
add
pop
pop
fs
das
fdivrs
leave
test
xchg
repnz
jge
adc
mov
rorl
dec
and
sub
jnp
xchg
cmp
adc
sub
jmp
jbe
push
mov
aas
je
xchg
insl
or
nop
mov
sbb
call
or
push
dec
mov
stc
push
ret
cmpsb
loop
jb
mov
mov
sbbb
pop
in
jbe
ds
cltd
mov
inc
or
xchg
lret
mov
mov
add
jecxz
jne
mov
aam
xchg
ret
jbe
lret
sub
out
aaa
lods
xchg
addr16
jae
push
popf
mov
das
mov
dec
and
lods
sahf
mov
aas
xor
test
mov
add
leave
leave
mov
outsb
mov
psubsw
fbstp
xor
je
loop
sub
scas
jne
inc
push
mov
jae
popf
xchg
fwait
rorl
lcall
and
cltd
cltd
clc
xchg
pop
push
jg
imul
shll
sbb
inc
mov
and
xor
adc
mov
mov
cs
mov
cmc
imul
insb
inc
add
outsb
cmpsl
repnz
push
nop
and
lret
aas
mov
icebp
pop
xchg
test
add
inc
pop
shll
cmpsl
jl
add
dec
in
jg
mov
in
and
daa
xlat
push
inc
xor
jns
push
loopne
push
cmp
cwtl
jne
das
sbb
popa
pop
inc
cmp
mov
enter
mov
inc
out
in
popf
push
adc
loop
inc
dec
sbb
pushf
or
mov
inc
mov
hlt
mov
jl
negb
add
jb
inc
mov
inc
xchg
mov
and
enter
pop
dec
pop
xchg
adcb
popa
xchg
mov
cltd
test
jge
popa
aad
mov
dec
lret
push
cmp
or
xor
cmpsl
pop
add
cmp
cmpsl
stos
lahf
xchg
push
sub
push
mull
add
sub
push
loope
and
xchg
fidivrs
push
sti
push
xchg
push
dec
faddp
xchg
sbb
push
inc
je
std
xor
outsl
mov
jmp
lcall
sub
xor
cmp
scas
into
mov
jns,pn
aam
lcall
int
xchg
mov
inc
add
hlt
ficompl
aad
pop
mov
pop
mov
test
add
dec
push
loop
adc
repnz
ficompl
shrb
test
sub
or
enter
mov
int3
inc
jmp
mov
jl
rcrb
and
xor
inc
int3
mov
xor
or
push
fsts
aad
cmpsl
in
jge
bound
mov
decl
stc
mov
cmp
in
popf
cwtl
xchg
sub
inc
lahf
sbb
into
or
or
in
mov
ret
in
seto
dec
mov
jb
lret
out
push
sub
pop
pop
pop
jmp
mov
pop
mov
mov
adc
sahf
xchg
jmp
decb
loope
aaa
insl
xor
dec
jb
xor
es
bound
shl
cltd
cmp
pop
cmp
jae
and
lahf
or
lahf
sahf
mov
jno
cld
xchg
inc
cmp
mov
mov
mov
jae
jp
fnstsw
mov
mov
xlat
loope
xchg
out
inc
out
mov
or
cmp
and
les
push
fisttpl
dec
push
mov
adc
stos
push
in
fisttpll
cmp
push
enter
jle
xor
jne
mov
pop
adc
bound
inc
cmc
inc
pop
inc
inc
sbb
aam
mov
rclb
mov
mov
lods
xchg
iret
test
imul
push
popf
in
daa
jbe
pop
dec
jns
or
dec
pop
dec
cltd
sti
inc
andb
popf
mov
jns
jae
sub
xchg
jl
movsl
and
xchg
fldl
cmpsb
sub
inc
lea
mov
pop
xor
push
adc
mov
nop
repnz
or
testl
xor
popa
xor
inc
push
mov
dec
inc
cli
lods
dec
outsl
xchg
rcrb
or
inc
sub
aam
ret
push
push
stos
divb
in
sub
or
cli
push
sbb
hlt
xor
dec
xor
jle
sarb
inc
cmp
push
imul
mov
cli
std
jae
nop
jo
fs
pop
mov
push
mov
in
clc
aam
mov
into
and
push
adc
sub
nop
push
mov
sub
pop
cmpsl
pop
ds
in
sbb
mov
cmp
and
jne
das
out
sahf
and
sti
pushf
scas
popf
xchg
pop
int
pop
or
mov
arpl
pop
sub
and
imulb
jno
sti
push
mov
and
mov
sbb
mov
pop
pop
mov
cld
cmp
sahf
ret
jg
add
std
xor
push
xchg
xchg
dec
cmpsl
xchg
mov
adc
and
dec
push
dec
lods
mov
inc
sbb
sbb
arpl
mov
inc
dec
dec
out
int
test
ficoml
inc
test
cmpsl
lds
stos
sbb
inc
test
jle
rcr
cltd
xchg
mov
daa
dec
verr
and
sbb
fwait
xchg
add
scas
loope
rolb
pop
dec
inc
pop
lods
push
arpl
shrl
mov
pop
mov
orb
and
push
mov
cltd
outsl
int
outsb
lock
and
push
adc
std
hlt
clc
shll
daa
inc
xchg
lcall
xor
repnz
and
jmp
push
and
mov
mov
mov
in
daa
xchg
adc
loop
test
sbb
adc
xor
push
dec
mov
repz
inc
pop
loope
inc
notl
fwait
outsb
mov
cmp
inc
jo
ja
pop
shll
push
cmp
jo
dec
xlat
pop
pusha
dec
loopne
neg
xor
mov
mov
pop
push
in
jae
andb
popf
test
xlat
cmp
mov
cmpsl
mov
aas
das
popa
adc
fucomip
orb
cltd
add
jne
adc
xor
fists
jae
push
stos
dec
out
in
mov
xorb
lret
xor
in
in
mov
mov
rcll
cli
mov
imul
mov
out
sub
xchg
dec
jne
push
popa
inc
sub
loop
out
insl
cmp
arpl
inc
dec
cmp
push
ljmp
leave
jb
je
cmc
jl
jb
into
mov
in
iret
pop
sahf
add
mov
xor
mov
add
jne
nop
cli
popf
in
stc
and
je
dec
jbe,pn
andb
int3
jb
mov
jno
in
js
xchg
xor
push
cmp
movsb
mov
test
arpl
js
sub
xor
cmp
or
movsl
insl
gs
bound
insb
push
or
and
add
mov
jo
sub
fisubl
sbb
push
insb
adc
mov
ret
sub
je
dec
lods
jo
push
xchg
pop
scas
test
and
xchg
sbb
pop
in
pop
sbb
cmp
cmp
loopne
pop
push
enter
add
adcl
lea
mov
push
pop
insb
jae
jae
lock
or
daa
fs
in
jmp
sbbl
rcll
sbb
iret
pop
push
ljmp
aaa
gs
push
cmp
push
in
dec
mov
stos
cwtl
roll
lock
icebp
pop
int
push
dec
stos
push
pop
int
xlat
dec
outsl
jmp
and
popf
xchg
push
sbb
std
lret
imul
xchg
pop
mov
stos
pop
in
mov
or
xor
mov
aad
cltd
aas
inc
xor
inc
sbb
das
and
cld
sahf
jno
push
rcrl
call
mov
shll
jl
inc
jo
jecxz
cli
or
push
jl
push
lea
sbb
jns
mov
imul
daa
sbb
lret
mov
cmp
iret
and
pop
lods
xor
mov
cmp
jb
push
rorb
cltd
bnd
lret
pusha
mov
and
mov
xchg
lret
fildll
orb
loope
dec
jecxz
xorl
cmp
sbb
cltd
sub
popa
dec
pusha
leave
ret
inc
pop
dec
adc
inc
pusha
cld
or
mov
jge
imul
dec
mov
popf
gs
sbb
cld
imul
lds
imul
lods
loopne
mul
aad
mov
mov
cmp
jecxz
in
jecxz
or
lock
mov
jecxz
fwait
push
jp
mov
lock
ds
fisubrs
sub
sbb
test
mov
popf
push
aad
adc
jle
and
movsb
sub
rorb
and
bound
cmp
push
jle
aas
nop
ret
push
xor
leave
pop
push
sbb
js
scas
call
das
push
in
sub
jb
dec
mov
daa
js
cli
add
push
repnz
mov
and
clc
xor
sbb
inc
xor
imul
dec
int
hlt
sbb
in
icebp
cmp
add
loope
sub
dec
cwtl
pop
iret
add
sub
movsl
xchg
push
add
cmp
outsl
call
movsl
mov
inc
or
pop
xchg
mov
imul
push
cmp
das
dec
lods
jns
add
fldenv
dec
aam
jecxz
fisubrs
jae
dec
and
sub
mov
lahf
mov
out
sar
int
fcompl
jo
jge
loopne
add
sub
jge
pop
loop
lret
push
test
xchg
inc
ja
test
jno
dec
sbb
mov
pop
sbb
clc
xchg
lret
test
dec
jmp
data16
sub
or
pushf
pop
xor
decb
xlat
or
xchg
push
ror
ret
leave
mov
repz
mov
or
dec
in
addl
pop
loope
inc
test
mov
lea
stos
xor
inc
bound
les
pop
or
adc
xlat
xlat
out
mov
into
dec
inc
jmp
inc
cmpsb
jge
mov
mov
jmp
pop
mov
mov
xchg
mov
scas
sbb
lret
and
xor
daa
js
stc
enter
hlt
pusha
imul
mov
xor
sbb
repnz
pop
sbb
push
enter
ds
sub
insb
arpl
stc
mov
lret
scas
inc
add
sub
mov
sbb
push
mov
pop
loope
loop
and
les
test
push
int
je
mov
jp
mov
loop
cmp
and
mov
xchg
pop
adc
lcall
cltd
bswap
leave
lahf
pushf
push
xchg
or
idivl
fdivs
jp
jmp
clc
fnstcw
fbld
mov
lahf
leave
mov
or
push
mov
shrb
adc
int
jmp
in
jns
test
int3
and
fs
cld
sbb
ljmp
in
adc
insb
popa
mov
test
je
push
mov
jg
mov
dec
push
pop
mov
stos
pop
xor
in
sub
rolb
fs
loop
popa
mov
call
and
cmp
sbb
or
in
in
pop
xor
hlt
or
push
xor
gs
mov
mov
lret
pop
std
test
add
xor
xlat
xor
cmp
push
mov
aam
scas
sbb
mov
ljmp
scas
or
dec
aas
fsubrp
loopne
push
xchg
adc
mov
sbb
xchg
mov
jecxz
andl
outsl
lahf
fs
sbb
jnp
int
lds
push
inc
sbb
cltd
nop
mov
mov
jmp
orl
imul
imul
mov
rcll
pop
cmc
push
adc
sub
loop
dec
or
icebp
lret
adc
iret
push
pop
movsb
sbb
mov
out
adc
or
stos
xchg
outsb
inc
mov
dec
pop
pop
cmpsl
or
jp
fstl
cmp
popf
ljmp
orb
jae,pt
sti
daa
mov
jns
mov
pop
jb
loopne
ljmp
or
es
insl
jo
pop
icebp
mov
sbb
xor
sbb
test
sti
xchg
jnp
int3
fisttpll
loopne
lock
inc
xchg
insb
hlt
lret
or
push
in
or
cltd
sub
dec
rcrb
xchg
xor
daa
mov
inc
lcall
outsl
or
imul
mov
es
or
pop
mov
jle
cmpsl
outsl
pushf
iret
push
fidivl
popf
mov
xor
sub
pop
ja
or
jae
pop
xchg
cmp
push
dec
fnstenv
fsub
cmp
inc
dec
or
cmp
jmp
mov
push
push
xor
dec
fimull
xchg
lds
xchg
dec
sarl
bnd
and
sub
shlb
pop
dec
or
mov
mov
imul
xchg
jnp
pop
ret
jg
pusha
sbb
xor
and
cmpsl
mov
frstor
adc
and
fidivl
sbb
aad
mov
or
aas
pop
rorb
inc
mov
push
fwait
adc
or
push
roll
mov
xor
pop
or
cmp
arpl
jp
add
inc
sbb
mov
in
jae
imul
mov
fnstenv
aam
jge
jge
xchg
push
push
pop
xchg
push
out
add
bound
mov
sbb
inc
mov
into
xor
xchg
push
ret
pushf
push
push
lret
mov
movsl
jmp
shlb
cli
pop
test
ret
jne
mov
int
push
cwtl
cltd
mov
xchg
rolb
mov
and
jne
or
fnstenv
sbb
into
cwtl
stos
jae
dec
test
fdivs
ret
and
mov
add
mov
fsubs
rolb
fs
push
out
jb
cwtl
jmp
lret
iret
outsb
movsb
sti
add
mov
pop
imul
fwait
je
mov
push
and
test
imul
and
dec
or
movsb
mov
inc
or
add
inc
pop
mov
pop
mov
fnstenv
clc
xchg
cmp
inc
insb
and
fs
push
mov
push
dec
sarb
ds
insl
outsl
xor
sahf
jae
sub
xchg
push
push
test
mov
fdivrs
sub
fimuls
dec
nop
cli
inc
mov
inc
rorb
push
ja
cmpsb
mov
jge
mov
jno
fidivrl
out
aas
mov
mov
push
cld
push
fidivrl
xor
cmc
jae
in
in
hlt
jecxz
mov
xor
sar
push
enter
mov
sbb
fsubrl
and
cmpb
dec
in
nop
aas
xor
movsl
dec
rolb
out
xlat
outsl
sbb
xor
cmc
lahf
ret
lods
dec
in
cmpsl
outsl
cmp
sub
push
sub
jnp
loopne
mov
pusha
dec
sarl
sbb
pushf
popf
mov
pop
cmp
pop
dec
dec
aaa
mov
cltd
inc
push
mov
pusha
pop
adc
enter
pop
adc
call
or
add
pop
pop
mov
out
inc
fwait
adc
arpl
push
enter
lock
stos
jns
and
inc
sub
movsl
push
mov
mov
mov
sahf
xorl
subb
push
pushf
out
dec
in
insb
sbb
xor
jmp
adc
outsl
mov
lcall
dec
out
movsl
mov
sub
or
mov
push
iret
lret
push
jnp
imul
clc
fnsave
enter
cmp
mov
mov
sub
test
mov
bound
ret
adc
mov
std
add
mov
ss
cmp
icebp
or
adc
xchg
and
lret
and
adcl
xlat
stc
test
gs
out
fidivs
dec
dec
pop
or
xor
adc
addl
cmc
scas
push
in
pop
sub
orl
xchg
mulb
pop
jge
dec
mov
mov
jo
xchg
test
insl
stos
int
sbb
lret
pop
and
lods
mov
add
push
imul
in
lahf
push
pusha
dec
cmp
pop
dec
dec
and
enter
jbe
mov
dec
adcl
negb
push
js
xchg
pop
jmp
stc
mov
jo
fiadds
sbb
push
gs
das
mov
ljmp
shll
stos
pop
dec
cmp
inc
insl
mov
insb
or
mov
js
xorb
sbb
cmc
orb
ss
mov
jb
mov
sub
xchg
je
shr
lret
dec
ja
push
aam
test
push
out
mov
inc
jmp
mov
push
adc
out
aaa
lret
imul
or
pop
mov
popf
dec
push
or
adc
mov
cmp
adc
ds
or
adc
add
pusha
enter
stos
jno
xorl
add
or
xchg
xor
push
inc
movsl
ja,pn
sub
repnz
mov
out
popa
stc
jnp
cmp
mov
cmp
pop
lcall
pop
stos
aad
jl
daa
mov
xchg
test
cmp
push
into
loopne
sar
les
loope
jb
sbbl
push
mull
mov
je
mov
xchg
xlat
add
aaa
and
ja
mov
cmpsl
xor
stos
rorl
fistpll
cmp
lods
daa
cmpsl
mov
add
test
sbb
or
sub
cmp
push
ja
inc
data16
shlb
push
fwait
pushf
js
subl
xlat
aas
sbb
inc
shl
jae
je
cmp
push
clc
push
push
sbbl
jg
or
sub
adc
cmp
mov
add
cltd
pop
aam
loope
test
pop
testb
dec
sub
imull
ret
xchg
xor
pop
imul
inc
push
imul
adc
xor
adc
ja
sbb
lret
scas
inc
sbb
test
arpl
out
mov
mov
push
mov
push
pop
xor
or
sahf
outsb
mov
cmpsl
dec
lahf
push
mov
push
shrl
ja
cltd
mov
aaa
jecxz
es
popf
aam
mov
mov
je
ljmp
xlat
jg
imul
jno
ss
aaa
lret
negl
xor
mov
mov
pop
mov
xlat
dec
std
lahf
cltd
adc
rcr
or
dec
add
and
inc
fisubrs
arpl
clc
cmc
dec
movl
aam
push
sbb
dec
adcl
jmp
icebp
out
push
mov
loop
scas
pop
lods
mov
adc
test
cwtl
mov
data16
mov
cmp
or
jmp
rcrl
pop
and
fcompl
xchg
sbb
mov
or
test
sbb
pop
jo
cld
leave
imul
cmc
lahf
ss
sub
out
pop
es
pop
lahf
pop
mov
mov
and
jo
jmp
inc
out
aas
call
fwait
sbb
cmpsb
mov
dec
xor
jg
sti
das
andl
lret
jne
inc
int3
jp
popf
mov
sub
push
inc
jge
jle
insl
fmull
push
add
xchg
mov
loopne
sbb
pusha
pop
jg
imul
mov
mov
sti
xchg
sub
mov
int
test
adc
jo
cld
test
test
test
fnstcw
jbe
lret
xor
sub
dec
outsb
test
dec
popf
test
pusha
out
jmp
fwait
mov
pushf
nop
out
pop
mov
fwait
jns
mov
add
roll
jae
stos
lcall
shll
dec
enter
adc
mov
jecxz
push
mov
jge
add
jle
cli
push
mov
mov
or
push
push
pop
and
xchg
sub
jmp
or
lret
jo
add
inc
mov
add
fwait
mov
adc
dec
sub
mov
mov
bound
call
roll
and
fst
ljmp
push
push
push
scas
ja
hlt
add
loopne
es
fbstp
in
pop
ret
mov
lods
pop
push
daa
pop
xchg
mov
lock
mov
sub
mov
iret
xchg
mov
xchg
shrb
int
ficoms
cmc
xor
push
decl
mov
jle
ds
adc
lcall
ds
jns
mov
enter
and
int3
neg
daa
shrb
and
or
lcall
int3
rcl
pop
cld
mov
sti
add
test
sbb
mov
or
loopne
icebp
insl
or
sub
sbb
shll
scas
cs
xchg
pop
inc
or
rclb
aas
enter
sbb
sub
pop
cld
pusha
ds
mov
sbb
mov
push
and
adc
mov
add
cltd
mov
xor
push
fstpt
jge
sbb
test
sbb
pop
ret
mov
mov
cwtl
jge
leave
scas
and
std
jbe
push
sub
and
jbe
push
fs
pushf
mov
sbb
ja
pop
adc
push
pop
insl
pop
xor
fistps
or
lock
int3
mov
push
xchg
inc
adc
fs
add
or
das
insl
jne
jne
or
sub
pushf
cwtl
add
pop
xor
inc
arpl
jnp
sbb
sbb
incb
sbbl
mov
ja
addr16
adc
sub
clc
xor
nop
lds
sbb
push
xor
stc
pop
cmpsb
mov
mov
loop
sub
sbbl
dec
xchg
iret
out
cwtl
fwait
lret
mov
mov
cmpsb
arpl
xchg
mov
xor
or
repz
mov
dec
dec
mov
jg
sbb
in
test
jnp
int3
and
xor
jmp
cld
dec
sub
mov
mov
sub
push
ljmp
std
scas
mov
add
or
jp
mov
lock
inc
pop
sbb
popa
sbb
loop
lahf
inc
or
scas
movsb
fidivrs
mov
fstpl
stos
add
jbe
out
or
xchg
repz
mov
cmc
popa
inc
movsl
xchg
nop
cs
add
cltd
adc
sbb
stos
or
xlat
mov
mov
mov
add
ret
jmp
sbb
sbbb
pop
decl
cmp
pop
xor
cwtl
jb
sbb
push
stos
xlat
addb
jbe
dec
mov
pop
inc
mov
movsb
sti
out
xchg
lds
movsb
sub
pop
mov
adc
daa
scas
out
sub
push
jae
cs
sahf
mov
push
les
pop
jae
in
sahf
cmpsl
test
cmp
pop
and
cmpsb
stos
xchg
rorl
lock
sbb
loop
jne
test
sub
mov
es
mov
call
inc
dec
sub
rcll
outsb
cmp
mov
and
repnz
dec
jno
test
je
sahf
mov
mov
daa
adc
lcall
pop
stc
xor
insl
bnd
push
xchg
call
cmpsb
xor
dec
xchg
xchg
xchg
push
movsl
andl
sub
inc
mov
scas
sti
out
sub
stc
sbb
mov
mov
adc
jle
sub
repnz
mov
sbb
and
mov
stos
es
xchg
pop
mov
test
lods
and
mov
mov
push
out
rcrl
mov
mov
int
inc
push
xchg
enter
test
test
jno
movsl
push
inc
mov
dec
add
test
jge
add
loop
pop
mov
mov
mov
ss
sub
or
cmp
fldenv
call
dec
jle
neg
inc
xlat
pop
iret
inc
fldenv
xchg
loop
das
push
or
and
mov
in
cs
push
cld
push
jp
inc
sahf
insl
mov
loopne
icebp
jns
sub
add
mov
pop
mov
pop
mov
in
pop
jno
and
jnp
sub
inc
mov
and
xor
int3
shll
cs
repz
enter
aam
pop
jae
imul
das
lock
push
sahf
xor
xor
inc
test
scas
mov
shll
cmp
cmp
aam
push
inc
mov
out
or
jns
iret
sub
inc
pop
xchg
mov
jmp
jge
lds
pop
xchg
dec
std
hlt
push
jbe
arpl
test
push
cmp
aaa
loopne
lods
leave
dec
jg
loopne
ja
xor
rcrl
sahf
gs
jmp
fisttpl
sbb
xor
repnz
xchg
push
addb
dec
scas
xor
and
pop
lahf
mov
sub
frstor
and
daa
sbb
pop
insb
cwtl
in
mov
dec
daa
push
lret
arpl
mov
mov
push
lcall
pop
mov
imul
mov
cmp
int
dec
fwait
add
cld
pusha
inc
jns
int
mov
enter
outsl
jg
sbb
ja
testl
inc
movsb
push
pop
jb
push
scas
mov
addr16
test
pop
rcrb
cwtl
jo
movsb
pushf
lahf
jp
and
pop
or
xchg
jb
cmp
inc
and
fisttpll
xchg
jne
fwait
icebp
push
push
lods
dec
push
cs
movsb
lret
sub
mov
ret
das
mov
daa
inc
rol
dec
pop
mov
mov
sbb
adc
mov
jge
mov
arpl
loop
test
cmp
add
test
lock
sub
xor
test
push
and
in
inc
dec
push
dec
out
xchg
pop
cmp
sub
repnz
mov
push
sti
and
mov
mov
adc
mov
pop
xlat
xlat
lret
xor
mov
cld
or
add
fimull
xor
add
or
imul
lods
xor
mov
dec
lods
mov
add
xchg
inc
sub
and
arpl
dec
lods
dec
or
mov
fcmovbe
adc
pop
repnz
pop
lahf
mov
inc
movsb
vmwrite
or
push
jge
nop
popa
test
loopne
shrl
inc
push
or
sub
mov
in
imul
sub
sub
int
fsubs
mov
lret
xchg
or
pop
fdivr
jge
popa
jns
sti
pop
mov
mov
add
xchg
sub
pusha
cmc
jp
push
movsb
cmp
dec
or
dec
sub
jnp
imul
mov
cmc
xor
das
or
fisubs
loopne
repz
sub
loope
mov
fdivs
inc
jbe
fsts
pusha
pop
inc
repz
pushf
xlat
sbb
xchg
jnp
test
subb
sbb
adc
fimuls
add
aaa
jle
outsl
lock
das
pop
out
cltd
jp
int3
mov
andl
shrb
iret
out
add
test
sbb
lcall
test
pushf
xor
xchg
incl
js
cmpsl
arpl
lahf
out
cmp
sarl
lahf
lds
xor
pop
adc
sbb
inc
or
aaa
sbb
push
jmp
scas
xchg
adc
mov
push
popf
push
mov
lock
fnsave
in
push
push
lahf
je
clc
cmp
mov
jnp
or
and
xchg
xor
pop
push
xlat
nop
inc
gs
andl
and
pop
clc
test
sti
or
xchg
mul
fxch
push
ja
fsubl
mov
add
sub
xchg
xlat
mov
icebp
and
dec
movsb
repnz
push
icebp
test
fidivrl
sbb
enter
xor
imul
cmpsl
ret
nop
pop
sub
jns
sub
arpl
jge
ss
xchg
andl
pop
pop
test
cmpsl
test
dec
in
jae
shlb
cmpsl
enter
jb
mov
adc
outsl
xor
ljmp
divl
fadd
mov
inc
daa
sbb
sub
test
mov
imul
and
andb
inc
icebp
out
cmpsl
fsubs
mov
and
sti
punpcklbw
add
in
jns
push
mov
arpl
xchg
pop
dec
pop
or
jae
bound
push
add
or
inc
xor
jmp
aas
or
in
sub
nop
push
insl
nop
insl
arpl
jge
stos
push
pop
aad
jmp
jecxz
xchg
xor
lcall
fiadds
test
sbb
ds
pop
loop
jne
testl
ret
mov
mov
gs
in
pushl
sub
sub
leavew
sub
arpl
mov
sbb
mov
mov
call
cli
sbb
gs
mov
sbb
xchg
out
xlat
shr
sti
stos
xchg
xor
out
add
scas
dec
mov
sbb
mov
mov
lds
mov
fists
push
inc
imul
xor
pushf
dec
inc
not
stos
das
into
mov
cmp
mov
adc
fists
shlb
leave
imul
mov
xchg
or
sub
call
cmp
aaa
inc
ljmp
scas
or
in
inc
mov
test
mov
js
mov
mov
dec
fbld
sarb
out
push
cmp
xor
mov
ss
scas
or
mov
ds
cmp
out
iret
scas
jb
xor
ret
jmp
sbb
mov
dec
test
movsl
pusha
not
ret
mov
push
pop
sarb
les
aaa
je
jo
shr
sbb
es
ret
push
dec
push
lods
popf
add
fsubr
imul
mov
mov
dec
rorl
sbb
xchg
xchg
add
arpl
and
sbb
fdivrl
cmpsl
push
sbb
mov
mov
enter
and
data16
xchg
mov
ja
lea
lds
xor
fldenv
je
pusha
jl
std
mov
xor
push
pop
mov
mov
lds
push
mov
dec
or
fildl
or
out
popf
mov
and
inc
into
mov
mov
hlt
push
push
ljmp
mull
mov
sub
mov
xor
add
cwtl
mov
cmp
xlat
or
std
lahf
lea
ss
enter
and
and
addr16
xchg
clc
mov
mov
xor
aam
or
pop
sbb
jp
cltd
xor
lods
divb
es
iret
data16
add
push
jne
add
fiadds
pop
cmp
out
repnz
cmp
mov
dec
data16
jl
clc
xor
in
sub
mov
pop
add
add
fwait
mov
ds
fmuls
jl
xchg
fdiv
loopne
jp
adc
sbb
pop
lea
call
push
stc
test
out
add
jmp
sahf
and
std
sahf
fs
out
sti
or
fnstcw
lods
inc
ss
cltd
icebp
dec
jmp
aam
pop
imul
testl
cmc
lcall
mov
push
dec
popf
sbb
daa
jb
repz
sbb
xchg
cmp
sbb
in
xchg
out
sbb
sbb
stc
icebp
push
popf
mov
ljmp
repz
scas
add
inc
sbbl
out
fcmovnb
jecxz
call
add
icebp
out
inc
outsl
lret
mov
push
push
jecxz
rcrl
jnp
xchg
loope
shr
scas
mov
shrb
cmp
inc
push
fbstp
mov
insb
stc
mov
mov
dec
sarb
sahf
movsb
adc
cmp
or
dec
shl
aaa
sbb
rol
outsb
mov
xor
lgs
shl
rorl
inc
cmpl
mov
insl
cmp
add
add
pop
std
cmp
adc
inc
inc
jns
sub
dec
cmp
addr16
pushf
gs
dec
mov
cs
dec
or
mov
pop
leave
pusha
xor
outsl
popf
movsl
lahf
mov
inc
jge
push
mov
mov
jns
and
insb
nop
sub
and
add
clc
pushl
push
cmpsb
cmpsb
rolb
jp
and
bound
lods
rcr
jge
int3
add
lret
dec
or
and
popa
mov
fmuls
mov
adc
cmp
fsubs
fisttpl
adc
neg
mov
std
aaa
mov
cmp
cltd
int
outsb
idivl
jl
repz
pop
out
rorb
adc
test
cmpsb
lods
cmp
xor
sbb
cmp
pop
xor
fwait
lock
push
imulb
dec
movsl
fdiv
jge
sarl
sub
adcb
sbb
cltd
xchg
ja
xor
and
ja
sub
mov
xchg
jg
pop
jle
dec
dec
xlat
pop
es
push
outsl
outsl
gs
pop
dec
jge
ja
jno
push
fs
pop
sub
and
adc
push
orb
je
insl
cmp
popa
sub
xchg
mov
jg
sub
pop
nop
in
jecxz
hlt
