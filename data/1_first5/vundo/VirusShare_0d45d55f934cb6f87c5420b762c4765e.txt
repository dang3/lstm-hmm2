sbb
add
andb
mov
std
lea
fwait
cmp
and
adc
sub
add
mov
leave
mov
dec
shld
push
fdivp
xor
sub
aad
jecxz
xorb
mov
stos
lret
mov
add
dec
lock
dec
xchg
cmp
push
aad
test
shl
or
das
insl
jp
cltd
inc
cmp
push
inc
rol
push
pop
add
sub
pusha
sub
icebp
push
fcompl
hlt
push
rcll
add
addb
shlb
cmp
xchg
test
add
push
mov
outsb
test
hlt
mov
popa
mov
and
ja
push
test
inc
mov
es
test
jns
out
gs
call
mov
test
in
clc
pop
icebp
int3
mov
loopne
fimull
imul
jae
iret
pop
push
mov
popf
adc
loop
or
xchg
add
mov
mov
mov
scas
rcll
mov
xchg
js
xor
xchg
push
int3
fidivl
dec
data16
ja
dec
repz
sub
js
es
mov
cmovge
xor
mov
inc
pusha
or
mov
fmuls
orl
int3
inc
push
and
loop
push
ds
outsl
add
pop
popa
dec
mov
jmp
jecxz
cld
pop
xor
loope
push
int3
mov
movsl
sub
sub
push
jae
int
fucomip
xor
stos
cmp
fucomi
pop
loopne
mov
lds
jnp
push
adc
lock
iret
dec
ud0
pusha
hlt
mov
pop
push
jnp
add
or
fcompl
mov
add
dec
mov
mov
and
or
pushf
outsb
adc
sbb
dec
lahf
xchg
adc
outsb
and
sub
pusha
stos
fiaddl
or
sbb
xchg
je
add
insb
outsb
cmp
xlat
bound
cmp
jo
cld
les
or
push
mov
cmpl
add
and
subb
loope
loop
and
push
loopne
add
jmp
push
repz
jns
adc
push
cld
into
lcall
repz
repnz
xor
scas
dec
sub
push
jae
cmp
dec
push
mov
pusha
sub
adc
inc
aaa
or
mov
std
leave
inc
jns
mov
xor
pop
lods
inc
insb
pop
and
dec
loop
or
aas
cs
xor
cwtl
inc
cmp
sub
ds
in
mov
aad
xor
adc
out
jmp
push
inc
xchg
fs
jns
mov
cmp
dec
mov
cwtl
and
pop
imul
pop
addr16
jne
test
jbe
or
xlat
mov
stos
jnp
add
inc
push
shlb
push
sub
or
add
push
cld
notb
jmp
pop
mov
xor
cmp
hlt
cmp
daa
sub
inc
xchg
xchg
jo
stos
mov
jbe
add
mov
xchg
aad
mov
call
xchg
in
lret
ret
mov
jbe
fisttpll
jno
inc
clc
lret
inc
movsl
ret
in
push
gs
pop
imul
dec
scas
push
push
add
imul
or
lahf
out
mov
out
mov
inc
jae
sti
mov
pop
mov
adc
outsb
pop
push
jb
in
pusha
iret
push
aaa
sbb
mov
jae
inc
xchg
push
rol
push
xchg
cmpsb
pop
scas
adc
aas
lods
insl
push
cmp
mov
add
icebp
in
add
xlat
int
enter
adc
aam
xor
mov
bound
hlt
icebp
bound
js
add
xchg
dec
xchg
out
in
or
mov
cmpsb
ror
mov
xor
scas
add
sbb
and
dec
pop
jl
fwait
jno
and
std
les
call
push
and
add
and
mov
loop
push
lods
push
xchg
testb
xor
cmp
push
in
push
sahf
jp
cs
aad
lea
dec
lds
dec
xchg
stc
xchg
xor
or
pop
das
scas
out
nop
sub
lods
arpl
pop
addl
js
sub
jg
repnz
xchg
shr
js
imul
pop
push
pop
mov
repz
dec
add
pushl
mov
dec
inc
test
pusha
xor
std
scas
fstl
xchg
sahf
loope
std
jae
seta
stos
in
and
nop
mov
jle
fwait
push
or
jo
pop
cld
pushf
push
inc
sbb
mov
dec
xor
mov
pop
fxch
jle
std
sub
shlb
cmc
into
loopne
add
int
adc
rclb
sbb
into
cmp
hlt
aaa
test
push
mov
mov
stc
mull
inc
mov
enter
lea
int
rcr
xchg
ret
scas
in
out
xchg
shrb
mov
loope
sbb
or
into
jg
xor
dec
push
cmpsb
push
add
inc
add
sub
ljmp
rcr
xor
mov
xchg
xor
stos
mov
cli
push
mov
jl
sbb
xchg
out
into
inc
insb
and
pop
out
xor
sub
es
aad
test
pop
int3
iret
pop
mov
es
ljmp
jb
cld
ret
stos
inc
loope
inc
test
push
sbb
aaa
pop
in
adcl
sub
xchg
cmpsl
out
hlt
mov
imul
aam
scas
arpl
mov
fsubs
mov
or
data16
sub
dec
pushf
cmp
sbb
iret
andb
mov
test
push
test
mov
mov
xchg
push
xchg
in
ljmp
mov
sub
loopne
fwait
movsl
mov
aad
jge
roll
das
xlat
loope
pop
loop
inc
inc
xchg
ror
std
pop
les
xor
push
xor
ds
les
popf
mov
push
out
pop
inc
cmp
inc
jge
mul
cwtl
add
xor
jle
xchg
ss
pushf
movsl
xor
sub
lcall
jb
enter
shrb
sub
push
jnp
cs
push
push
jae,pt
lds
imul
pop
popa
fdivr
cmpsb
cmp
andl
xchg
cmpsb
scas
call
mov
aam
pushw
and
cli
fs
dec
out
mov
mov
xor
es
and
in
xchg
and
mov
cmp
xchg
cld
sub
mov
xchg
add
int
jmp
clc
test
xor
xchg
mov
jp
fists
xor
cmpl
or
in
and
roll
or
std
pop
clc
cmp
mov
mov
dec
shll
xor
outsb
mov
outsl
dec
es
or
xor
push
stos
sbbl
or
push
je
scas
cmpsb
out
fstl
in
mov
mov
xor
mov
mov
dec
inc
shlb
xchg
es
mov
add
inc
dec
push
mov
fwait
mov
cwtl
hlt
sub
mov
adc
aad
cmpsb
cmp
xor
sub
sbb
inc
fldcw
lret
sub
xor
mov
adc
xlat
push
jmp
dec
push
mov
xchg
vpsraw
imul
movsl
out
xorl
add
insl
inc
negl
fildl
sbb
outsb
mov
fwait
insl
xchg
add
lret
gs
sar
fwait
fs
pop
and
fimull
xor
and
mov
sbb
pop
jg
xchg
push
testb
push
xchg
or
out
shlb
stos
imul
mov
shl
xor
idivl
jbe
stos
int3
and
and
fdivl
xchg
or
cs
pop
loop
xchg
pop
dec
lret
movsb
cmpsl
jnp
loopne
mov
cmpsb
shrb
out
fmull
mov
xchg
mov
mov
xor
mov
fstpl
xchg
js
jno,pt
sbb
ss
push
adc
sbb
pop
jecxz
and
mov
pop
andb
outsl
sarb
mov
pop
dec
repnz
je
mov
cmp
inc
or
pop
lods
int
das
dec
cmpsb
inc
xchg
icebp
lds
std
out
push
xchg
aam
bound
push
inc
sbb
mov
inc
cmp
mov
ficomps
adc
lret
hlt
sub
fsubrp
aad
and
iret
mov
daa
fcmovnb
mov
sub
xor
out
and
fwait
push
fiadds
and
clc
jg
dec
mov
and
push
inc
xchg
outsl
out
lret
push
in
mov
add
fidivl
or
stos
cmp
bound
stos
cld
cmp
jg
andb
lods
fsubrp
insl
mov
rorl
js
outsl
lock
inc
push
xor
mov
enter
movsl
rcll
xchg
movsl
mov
clc
push
ljmp
sbb
std
adc
mov
mov
jns
push
sbb
sub
mov
mov
mov
icebp
mov
sbb
jl
cld
pop
daa
js
xchg
in
ss
in
adc
cmp
or
test
outsl
jmp
mov
pop
sbb
bound
sub
and
xchg
lret
mov
ret
stc
int
inc
lret
gs
aaa
pop
or
jl
out
sbb
dec
leave
and
inc
cmp
add
dec
push
push
sar
out
imul
mov
notl
and
push
scas
mov
mov
enter
out
ret
mov
imul
in
loop
push
in
lods
pop
dec
mov
hlt
outsl
jp
lods
pop
out
mov
iret
stos
insl
cmc
cmp
leave
inc
jmp
mov
dec
xchg
iret
bound
out
jbe
aam
xchg
cmp
mov
adc
xor
mov
fldenv
xor
mov
loop
push
mov
scas
mov
int3
mov
dec
outsb
insl
insl
lds
mov
cmp
iret
lods
cmp
fbstp
repz
stos
insl
mov
push
sub
test
fistpll
leave
leave
or
and
imull
push
cmp
add
ret
insb
or
sbb
orl
scas
adc
lcall
popf
gs
es
lcall
push
sub
aas
ja
fisubl
adcl
pop
enter
sbb
push
push
and
dec
insb
pop
pushf
mov
adc
mov
jbe
std
mov
mov
ds
lcall
into
adc
sti
gs
xchg
daa
lds
push
jb
fldenv
pusha
xor
insb
jno
pop
lods
mov
jno
pusha
lods
sbb
out
les
mov
pop
pop
pushf
pop
pop
mov
cs
cltd
cmpl
mov
and
cmpsb
shrl
ds
mov
movsl
sub
push
out
fs
xchg
scas
out
push
clc
pop
xchg
lds
movsb
in
sub
stc
dec
lahf
xor
lahf
addr16
mov
stc
xchg
xor
lret
arpl
mov
push
xor
adcl
dec
imul
stos
cs
fistpl
daa
lahf
push
ljmp
push
sahf
rcll
ret
lods
jge
and
sub
mov
mov
mov
inc
rorl
cmpsb
inc
pop
test
jbe
test
fcmovnb
idivl
cmpsb
xchg
call
lret
jmp
xchg
addr16
fcmove
frstor
inc
inc
sbb
loope
notl
xor
jge
mov
push
pop
mov
in
adc
pop
adc
cmp
out
popf
ficoml
repnz
inc
add
inc
jge
dec
dec
push
and
adc
popf
adc
scas
rorb
retw
in
loop
push
xor
mov
lret
scas
in
movlhps
sbb
fucomip
sbbb
jne
sbb
rcrl
pop
stc
arpl
mov
cmp
shlb
dec
nop
lods
leave
out
aad
inc
xchg
mov
pop
sbb
sub
mov
jb
jmp
xchg
push
sbb
aas
fs
lock
stc
repnz
xor
mov
mov
ficoms
mov
repz
sub
xor
push
insl
aam
push
cmpsl
sbb
push
xor
or
aam
ja
lret
jle
or
inc
mov
push
out
xchg
insb
jl
cmp
and
arpl
pop
inc
pop
lcall
fs
pop
xchg
xor
push
es
iret
jge
and
test
or
or
jp
xchg
add
and
sub
popa
xchg
outsl
incb
cmc
pushf
repnz
test
es
mov
jb
jle
adcb
sbb
mov
addr16
jmp
mov
dec
sub
push
xor
cld
xchg
cmp
xor
push
sub
adcb
out
jno
rclb
jge
push
push
xorl
leave
pop
nop
out
aaa
int
pop
cs
test
mov
push
add
sarb
addr16
outsl
jmp
add
xlat
dec
mov
mov
inc
stc
insl
push
cmp
stc
and
pop
jno
xor
nop
jno
pop
inc
jae
fcompl
cmp
push
sbbb
push
cwtl
je
pop
data16
cli
pop
call
xchg
mov
in
pop
imul
jp
movsl
adc
xchg
pushf
data16
adc
arpl
mov
test
xor
fsub
sbb
insl
pop
andb
jne
out
pop
add
fcomps
mov
cmp
test
pop
jne
sub
push
out
insl
push
imul
negl
jecxz
lods
dec
sub
or
in
cmp
icebp
lods
icebp
movsl
jnp
fwait
int
ljmp
and
icebp
mov
out
icebp
cmc
push
fwait
jle
loop
jne
sbb
xchg
jno
jg
int3
sub
repz
inc
das
scas
pop
pop
adc
mov
and
or
and
mov
stc
mov
lods
xor
out
in
sahf
test
das
cld
jecxz
sbbb
cwtl
mov
pop
dec
lcall
roll
push
fcmovne
rcll
aad
scas
push
pop
and
jmp
pop
mov
icebp
not
lret
shrl
dec
mov
or
and
fsts
test
incb
add
int
frstor
in
mov
stc
dec
rorl
cs
dec
not
xor
mov
movsb
dec
add
xchg
lahf
xor
repnz
adc
test
inc
aas
mov
repz
imul
shrl
and
sub
xor
arpl
aaa
xchg
inc
cmp
fwait
stos
rcrb
pusha
rcll
lock
arpl
das
and
mov
out
push
lahf
pop
aam
adc
mov
mov
pop
adc
push
or
sub
ss
xchg
jp
jge
fdiv
mov
jmp
mov
mov
push
mov
out
mov
push
sarb
enter
xchg
inc
das
loopne
xor
mov
pop
xlat
inc
mov
data16
and
cmpsl
das
mov
sbb
push
add
inc
push
jle
or
pushf
fdivs
mov
out
pop
insl
pop
sti
insb
push
movsl
daa
sbb
dec
jb
mov
jo
xor
mov
sarb
lea
ds
lcall
inc
fistl
insb
addr16
xchg
in
insb
push
push
and
mov
cmp
pop
mov
pop
xor
xor
test
loop
test
inc
fisubs
iret
sub
dec
pop
pop
loope
xchg
and
cmp
ljmp
mov
movsb
iret
ljmp
out
mov
and
push
dec
mov
jnp
cmp
inc
sbb
lret
lds
and
outsl
pop
xchg
int3
jmp
mov
and
push
xchg
inc
dec
pushl
dec
mov
pop
insl
sbb
test
and
sbb
daa
jmp
mov
jp
ljmp
xchg
push
cmp
mov
mov
add
cmp
mov
sbb
rcrl
or
ds
popa
loope
dec
push
ret
adc
fsts
imul
ds
pop
pop
pop
mov
xchg
pushf
push
lods
pusha
sub
add
or
pop
sbb
aam
iret
mov
xor
ljmp
add
hlt
aam
adc
loopne
outsb
popl
xor
and
push
jns
aad
mov
sub
insl
out
and
or
or
mov
push
mov
leave
jle
aas
push
cmp
jle
les
shrl
xor
fistl
dec
mov
inc
cmp
aam
hlt
mov
sub
mov
setae
add
mov
mov
add
ljmp
fbld
adc
jg
test
xor
jg
add
cmp
push
push
andb
mov
cmc
dec
arpl
sbb
and
sbb
leave
and
in
test
jle
inc
int
mov
xor
sbb
out
cwtl
adc
pop
or
cmp
popf
or
mov
decl
ljmp
adc
dec
push
inc
sahf
js
movsl
jnp
mov
sub
sub
stc
cmp
xchg
pop
xor
jmp
enter
cmp
mov
movl
xchg
fldenv
loop
ret
inc
or
and
jmp
pop
sub
insb
popa
cli
orl
addl
xchg
icebp
addr16
ret
lods
movsb
nop
pop
cwtl
or
notl
pop
inc
or
lret
or
ret
jb
mov
sbb
add
outsb
cwtl
cmpsb
push
push
cmp
push
stc
lahf
por
push
in
fbstp
daa
add
jbe
or
lods
insl
insb
adc
jb
scas
mov
mov
inc
mov
mov
sbb
cmp
bound
cmpsb
imul
sub
mov
inc
mov
xor
out
sub
push
lds
in
xor
je
xor
cmp
sbb
dec
data16
mov
call
clc
jae
repnz
notb
fs
andl
xlat
jnp
cltd
cld
inc
inc
lods
shll
adc
subl
mov
push
call
push
ret
out
mov
jb
cli
outsb
and
sti
jnp
pop
xor
fwait
sbb
xchg
fldcw
sbb
je
aas
inc
stc
out
out
mov
cmp
xchg
push
arpl
or
lock
mov
in
pop
and
arpl
enter
popf
xlat
mov
sbb
add
xor
sub
mov
cli
out
idivb
sbb
sbb
imul
imul
cmp
enter
mov
xor
sbb
stos
loopne
fcompp
leave
icebp
dec
mov
stos
and
subb
insb
mov
shlb
insl
sbb
daa
pop
add
xor
push
nop
sub
push
cmp
rorb
ret
test
sbb
mov
xor
scas
sbb
aaa
and
cmp
daa
loope
push
in
pop
mov
xlat
xchg
dec
hlt
sub
in
dec
cmp
or
rcrl
jmp
icebp
and
push
out
xchg
mov
rcr
popa
fmuls
adc
mov
fisubrs
push
ret
mov
jne
cmp
das
movsl
mov
ds
cmp
adc
out
or
xor
push
lods
cmp
xchg
cwtl
outsl
mov
icebp
loopne
push
jl
mov
lods
pushl
btc
mov
cmp
mov
icebp
mov
mov
mov
stos
bound
shll
jae
jno
push
fld
pop
test
add
lock
pop
cmp
and
xchg
fucomi
cmpsl
imul
adc
pop
mov
pusha
adc
cmc
jmp
jns
inc
mov
push
push
ljmp
mov
pop
pop
cmp
popf
in
cmp
rcl
xchg
repnz
pop
in
or
xchg
or
hlt
lret
fwait
in
pop
repnz
pop
in
pop
repnz
pop
cmpsl
mov
shlb
loopne
dec
mov
iret
and
movsl
pop
stos
mov
daa
ret
cmp
fs
cltd
lret
xor
fmuls
fnstcw
dec
sbb
xchg
push
cpuid
add
xchg
fld
jmp
int
out
xchg
push
shl
in
repnz
xor
add
inc
push
mov
iret
jne
and
xor
clc
out
push
dec
mov
ficomps
sbb
repz
xchg
xchg
push
daa
mov
clc
lock
adc
movsb
jns
ds
movsb
mov
pop
mov
push
sub
iret
test
or
in
mov
push
lret
mov
pop
dec
fnsave
adc
mov
insl
or
mov
leave
dec
xlat
sbb
mov
mov
cmpsb
repnz
incb
orl
test
in
inc
add
and
bnd
jmp
mov
shlb
daa
dec
xchg
and
or
adc
fcmovnbe
in
or
or
jge
inc
jmp
xchg
push
cmp
and
je
outsb
mov
cltd
sub
dec
cmp
xor
sbb
loop
mov
sub
mov
adc
movsb
cmp
mov
mov
std
jo
jge
sbb
push
push
aam
jnp
push
rol
pop
loope
mov
push
outsl
imul
xchg
pusha
out
in
fs
add
fisubs
dec
dec
into
shlb
fs
pop
pop
jge
ficomps
aas
pop
lea
int3
das
enter
lcall
inc
xchg
out
div
push
add
jbe
aad
scas
pop
or
into
lahf
mov
fcmovne
jno
cli
aaa
cltd
adc
movsb
xchg
in
test
out
mov
jmp
ror
or
xor
mov
fisubrl
in
sbb
inc
adc
shrb
mulb
cmpxchg
inc
lcall
test
pushf
aad
insb
aad
mov
push
push
clc
inc
xor
mov
inc
mov
inc
popa
mov
andl
lea
inc
daa
jnp
in
xchg
push
xchg
out
pop
sub
orb
cmp
xchg
jne
xchg
iret
dec
or
adc
sub
cltd
dec
shrl
enter
and
leave
sti
cltd
mov
mov
nop
pop
incl
aaa
cmp
add
rorl
fs
add
pop
dec
out
mov
orl
xorl
push
pop
stc
inc
sub
jo
seto
fdiv
jmp
aaa
iret
pushf
push
stc
mov
out
outsl
ret
jno
adc
fcoms
jg
jbe
inc
mov
pop
int3
popa
push
lds
add
push
inc
xchg
jle
cltd
jg
push
fst
fdivs
and
rclb
inc
jb
enter
arpl
hlt
push
popa
data16
xchg
dec
les
in
aaa
testb
and
iret
xchg
sbb
xor
cmp
xor
sub
or
pushf
xor
add
iret
out
push
push
nop
call
mov
out
dec
jge
and
popf
shll
ljmp
scas
sub
pop
mov
pop
xor
fstpl
addr16
hlt
pop
and
push
mov
dec
dec
mov
cli
mov
pop
xor
lret
movsb
fmull
and
lds
mov
in
enter
ret
pusha
insb
int
jb
and
popf
sbb
push
outsl
rclb
jb
dec
hlt
mov
sbb
gs
jns
loope
mov
cmp
orb
aad
mov
enter
ret
jl
mov
or
movsb
test
jl
out
ffreep
push
cmpsb
sub
jne
jge
dec
inc
in
ljmp
lods
or
xor
and
idivb
mov
ss
mov
pusha
daa
movsb
sbb
push
fbld
shll
pop
xor
ja
mov
xor
lea
jae
data16
sarb
hlt
mov
fiadds
xor
or
mov
push
pushf
fiadds
cmc
or
push
je
loopne
movsb
mov
scas
xlat
andl
and
dec
and
icebp
out
cltd
add
loopne
mov
inc
pop
mov
sub
jnp
out
adc
test
dec
xor
into
xchg
adc
icebp
dec
dec
adc
bound
std
cmp
imul
ret
rolb
sub
mov
ja
pop
adcb
daa
dec
iret
lret
mov
les
lret
fstpt
arpl
test
inc
xchg
pushf
sbb
jae
lock
insb
leave
mov
insl
add
add
xor
pusha
lret
bound
jmp
fisubrs
je
stos
xor
mov
xor
mull
sarb
push
add
ljmp
sub
and
outsl
test
mov
stos
dec
mov
incl
add
in
fs
mov
loop
jp
cwtl
cmp
mov
xorl
mov
lret
outsb
xor
and
cmc
sub
xor
loop
scas
xchg
orb
mov
shll
jno
out
js
mov
jg
mov
rol
sbb
cld
jg
push
int3
call
fisubrs
xor
lea
mov
mov
je
dec
sbb
sub
ja
hlt
adcb
push
xor
js
jp
and
pop
insl
push
lret
aad
push
xchg
cs
push
ret
adc
jnp
push
popa
cmp
mov
lret
cmp
mov
enter
adcb
cmp
rclb
jns
mov
out
mov
insl
cmpsl
sbb
fsubs
shl
leave
inc
test
sub
adc
xchg
pushf
push
aas
mov
jge
mov
sub
adc
mov
sub
cs
sbb
insb
sbb
mov
insl
dec
mov
xor
shl
mov
mov
ja
repnz
add
imull
gs
je
ficomps
mov
sbb
pop
pop
lret
or
cld
sti
lock
mov
xor
dec
mov
push
jp
fcomps
into
and
pop
adc
stos
sbb
cltd
rcrl
cld
xchg
in
movsl
inc
inc
push
xchg
fs
or
in
dec
out
mov
inc
into
jnp
fsubrl
mov
mov
lods
lret
xor
inc
xchg
jl
mov
insb
cmpsl
inc
daa
mov
imul
orb
jno
lahf
sbb
pop
mov
mov
call
in
mov
outsb
cltd
pushf
iret
mov
push
cmp
popf
icebp
int
xor
jo
pop
insl
and
xor
sub
jle
int3
jns
mov
xorb
xor
iret
xchg
or
adc
pop
pushf
inc
cs
inc
push
or
lret
xor
jp
shll
fcmovu
in
fmull
fldl
inc
push
idivl
push
push
or
mov
lahf
cmpsb
lods
enter
fldcw
adc
jmp
mov
insb
push
cmp
loope
or
mov
push
cmp
cmp
lret
pusha
enter
std
scas
xchg
xchg
ficoms
popf
iret
xlat
sahf
dec
push
ss
rcll
or
subb
adc
inc
or
jg
daa
ljmp
jle
lock
lods
push
or
lret
push
in
pop
add
fbld
lahf
das
jae
cmc
mov
aad
mov
jbe
xchg
add
stos
jl
push
jp
shrl
stos
jae
insb
jne
sbb
xlat
xchg
mov
dec
jp
and
or
add
jo
call
in
adc
mov
adc
mov
cmpsl
lock
sbb
pushf
cmp
lahf
inc
mov
jecxz
adc
add
pop
dec
insb
aad
mov
sarb
test
push
cmpsb
icebp
inc
mov
ja
add
mov
fsts
mov
je
push
movsb
mov
push
clc
push
loop
add
ljmp
cmp
cmc
jecxz
xchg
int3
xchg
push
fstl
mov
add
pop
sbbb
or
dec
adc
ss
mov
daa
cmp
outsl
icebp
stos
xor
sub
repnz
rcll
ret
cmp
mov
push
adcb
sbb
loopne
hlt
mul
push
enter
es
notb
mov
push
es
xchg
and
fcmovnb
in
xchg
cmpsl
inc
popl
jge
sbb
jne
sbb
xchg
mov
jl
out
jbe
js
fidivrs
pcmpgtb
sbb
sub
mulb
sbb
push
jmp
nop
jmp
out
xchg
sub
ljmp
adc
iret
cld
and
mov
add
aas
mov
dec
dec
movswl
mov
ficomps
sbb
cmp
xor
jl
in
jg
das
nop
mov
loope
mov
sti
leave
dec
xchg
xor
aaa
addl
sub
hlt
shrl
in
bound
mov
sarl
adc
lahf
mov
lcall
xchg
xchg
loop
fstl
bound
outsl
adc
jle
insl
ret
out
or
lods
gs
call
xlat
mov
mov
int3
ret
popa
add
pusha
mov
data16
sbb
bound
pop
pop
sub
gs
fs
sbb
and
stos
add
jnp
test
inc
jmp
dec
sbb
dec
in
push
xchg
cs
xor
and
jbe
cmp
test
mov
xor
sti
mov
fwait
addr16
jns
sbb
test
jne
imul
out
ja
rol
pop
shll
adc
fmull
cmpl
mov
aas
ror
fdivr
mov
lods
pop
rorl
mov
add
inc
inc
fs
jecxz
add
out
icebp
xor
mov
push
sbb
mov
pop
pushf
adc
mov
in
and
add
pop
cli
dec
pushf
xchg
dec
lret
mov
ljmp
and
mov
mov
dec
bnd
testb
push
xor
push
mov
sub
ja
xchg
subl
inc
loope
cmp
lods
xchg
push
and
mov
push
xchg
imul
adc
mov
xrelease
lods
scas
out
iret
inc
insb
mov
sub
fisttpl
je
mov
mov
ficoml
lods
add
push
inc
add
mov
mov
mov
inc
daa
mov
scas
sub
jge
xchg
cmpsb
dec
pop
and
pop
pushl
in
or
mov
push
fidivs
mov
cld
or
inc
ret
cwtl
add
dec
nop
jp
in
loop
pop
sbb
fs
lods
lods
mov
arpl
and
sub
inc
mov
test
add
aam
dec
jne
or
jo
jp
pop
inc
push
js
mov
jmp
scas
and
adc
push
popf
jnp
mov
push
std
and
bnd
lcall
dec
lock
in
dec
pop
aaa
outsb
lods
add
adc
movsl
rorl
cmp
or
aaa
out
test
inc
or
mov
sahf
aad
sbb
in
in
int
out
cmp
addb
xlat
and
icebp
add
push
adc
scas
inc
push
inc
negl
popa
pop
call
out
mov
mov
or
sbb
mov
in
xchg
or
ret
mov
dec
mov
inc
mov
jb
push
adc
sbb
and
and
sbb
mov
pop
ss
push
imulb
ret
mov
mov
ret
addl
adc
or
fsts
adc
in
in
movb
xchg
adc
int
test
pop
inc
adc
std
mov
int
add
jne
cltd
ss
mov
mov
lds
xchg
mov
lahf
and
sub
xchg
add
jge
inc
fnstenv
pusha
and
mov
cli
scas
xor
cmp
repz
je,pt
push
sub
push
xchg
out
adc
mov
fwait
jno
adc
incb
push
mov
shll
mov
jne
ficompl
es
nop
push
jnp
xor
push
push
aas
push
add
fmulp
das
gs
bound
les
or
pop
imulb
and
dec
inc
arpl
ret
mov
adc
pop
xchg
jp
movsl
fidivrs
mov
xchg
inc
pop
or
add
cmc
sbb
es
mov
jecxz
loop
aas
push
cmc
push
sbb
cmp
dec
mov
inc
inc
jo
xor
and
popf
fs
push
pop
dec
in
sbb
mov
lea
mov
cmpsb
outsb
outsb
popa
loopne
repnz
xor
or
sbb
dec
add
mov
or
jg
push
mov
into
jo
ret
idivl
movsl
mov
dec
push
mov
orb
iret
and
push
sub
rorl
add
out
sbb
mov
adcl
sbb
cwtl
sub
stos
popf
xchg
inc
xor
fstpt
push
sahf
sub
mov
mov
pop
dec
daa
mov
adc
cmp
fidivl
aam
sbb
fwait
mov
xchg
testb
clc
add
pusha
mov
adc
lahf
dec
pop
test
push
adc
cli
stos
push
sti
in
in
jno
mov
push
loop
fstpl
adc
sub
pop
adc
mov
cmp
adc
fsts
cmpsl
sub
jl
rcrb
pop
adc
and
sbb
je
mov
cmp
or
ret
and
or
insb
lea
or
and
clts
fs
mov
sub
arpl
or
outsb
pop
lea
xor
in
adc
enter
add
ret
push
aas
fistl
xor
mov
jge
call
mov
dec
enter
inc
insb
mov
jmp
mov
roll
loopne
and
sarb
call
fdivrl
adc
mov
xlat
insl
int3
add
stos
daa
pushf
or
add
aaa
outsb
popf
adc
sbbl
stos
sbb
cli
mov
cmc
clc
aaa
loope
aaa
push
adc
fmuls
mov
mov
mov
xor
test
pop
mov
aas
sar
ret
push
cmp
push
jns
push
add
sarb
push
arpl
js
cmp
test
hlt
xchg
push
xor
fsubs
jns
jp
fisubl
lcall
adc
in
cmc
add
mov
sarb
cmp
into
decl
test
jb
out
sub
jle
rcrb
push
cltd
adc
rcll
xor
adc
aam
ljmp
icebp
push
push
inc
ret
adc
jne
ret
pop
ficoml
mov
push
movsl
pop
add
lcall
pop
ret
or
sahf
movsb
xchg
dec
xor
imul
int3
mov
dec
dec
pushf
mov
cmp
mov
lea
push
pop
jnp
into
ds
fisttpl
popf
cwtl
in
push
xor
or
pop
test
inc
inc
outsl
aad
jge
ja
cmp
xor
add
loopne
sarb
movsb
lahf
jp
sub
sbbl
and
xchg
leave
mov
cld
ror
stc
in
xor
jb
jmp
jecxz
bound
repz
adc
lret
cltd
lds
shll
les
scas
cmp
mov
jl
dec
ret
jb
ljmp
and
xor
hlt
rcll
dec
pop
jl
ja
xchg
test
gs
mov
mov
ret
ret
adc
sbb
lret
fs
negb
loope
out
push
enter
leave
out
stos
scas
push
cmp
stos
cld
das
test
les
pop
in
xchg
je
pushf
sar
cmpb
ret
cmc
mov
mov
mov
cmp
jno
jns
cmpsb
mov
jb
jp
mov
incb
or
mov
repz
sbb
fdivr
lret
mov
sub
sub
sarl
mov
out
cli
ss
or
cmpsl
lods
lds
hlt
mov
movsb
lods
icebp
je
pop
jmp
popf
call
lods
xchg
cld
push
movsb
stos
fldt
or
in
dec
std
xor
mov
ljmp
mov
inc
jae
push
stos
loopne
push
cwtl
mov
enter
mov
repz
and
ljmp
and
dec
mov
jle
sbbb
xchg
xor
cmp
loop
ja
mov
inc
add
xchg
or
inc
paddw
push
cltd
inc
rcrl
dec
xchg
lcall
xchg
lcall
aad
and
or
inc
mov
fisubl
pop
cmpsb
cmpl
shr
xchg
ds
fwait
mov
paddusb
inc
call
movsl
xor
sub
jecxz
popa
xchg
jae
cmp
fsub
bound
ret
mov
jmp
xchg
in
jmp
and
xchg
aad
dec
or
push
mov
rep
shrl
mov
test
mov
xchg
arpl
mov
pusha
mov
inc
cmp
out
inc
ljmp
push
mov
sub
dec
mov
mov
loope
sub
test
and
aad
cmpb
add
out
cmp
aad
sbb
roll
scas
dec
cmc
push
cld
add
mov
pushf
sbb
test
mull
push
lret
lcall
add
mov
aas
xchg
pusha
sbb
adc
push
fcmove
rcr
inc
lcall
or
repnz
jl
sti
mov
push
mov
push
mov
ret
int3
dec
cmpsb
gs
push
je
cmp
cmpl
pop
mov
out
jnp
rolb
movsb
jae
or
jae
into
cmp
jno
movsl
rcrl
fdivr
jne
jge
mov
jo
das
mov
mov
js
repnz
out
xchg
push
xchg
aad
jns
mov
push
dec
xchg
js
insl
je
call
inc
hlt
cmpsb
icebp
cmp
push
nop
sub
add
rorb
nop
leave
call
jge
lds
dec
jns
test
mov
fistl
arpl
pop
shl
sti
mov
mov
clc
enter
ljmp
sub
cmp
mov
dec
cli
xor
cs
mov
lahf
lods
out
es
and
out
aaa
rcrb
lret
mov
mov
pusha
adcl
inc
out
dec
cli
jo
loopne
jmp
mov
jg
push
in
or
outsb
cs
sti
icebp
sbb
fimuls
sub
mov
clc
loope
push
stos
adc
adc
repnz
cmp
add
subl
stc
in
inc
jbe
subb
inc
inc
jg
sbbl
lret
dec
das
push
daa
test
add
shl
insl
jae
xchg
cmp
popa
mov
xor
in
add
lock
push
ds
jne
test
cvttps2pi
push
dec
lods
mov
mov
or
cli
ret
fs
fs
pop
sbb
xor
ljmp
movsb
jl
sti
gs
aas
xor
sub
adc
xchg
scas
or
sahf
in
xchg
lret
out
arpl
out
daa
pop
jle
sub
mov
sti
in
mov
and
inc
andl
mov
and
ss
in
jbe
xchg
ret
hlt
insl
imul
addl
pusha
and
mov
ljmp
mov
stos
jo
imul
push
lret
lods
push
xorl
inc
mov
lock
mov
insb
cwtl
out
loopne
adc
cwtl
testl
rcll
or
push
pusha
jne
and
nop
jmp
sti
cmpsl
jno
test
inc
shll
and
sbbl
adc
test
icebp
sub
adc
pop
clc
push
mov
sarb
add
jp
xchg
dec
inc
call
adc
xlat
xchg
sub
pushf
fwait
pop
adc
jae
mov
nop
dec
insl
push
test
jo
pop
mov
or
mov
stc
inc
push
in
sub
and
lds
sub
mov
push
add
imul
cs
lock
int
test
and
insl
fdivr
mov
sbb
cld
inc
nop
test
inc
cmp
push
adc
inc
insb
xchg
sub
popa
jb
sahf
pop
pop
int3
mov
das
sub
mov
cld
shrl
jns
jb
jns
push
mov
or
out
jp
fwait
pop
repz
cmp
aam
aaa
xchg
sbb
pop
shlb
jae
int
or
out
clc
jnp
xlat
fucomip
mov
in
dec
repz
mov
or
enter
dec
bound
leave
pop
test
sub
mov
iret
jmp
and
mov
negb
dec
data16
movsl
data16
mov
shrb
scas
daa
imul
dec
pop
nop
scas
leave
stos
nop
add
jle
mov
das
add
pop
adc
outsl
sub
xor
mul
and
mov
test
mov
push
fwait
or
push
jo
sub
das
je
push
pslld
call
add
dec
dec
mov
outsl
ss
inc
pop
jne
daa
pop
addl
js
testl
dec
aam
inc
pop
out
ja
xchg
push
inc
repz
leave
sbb
lcall
xlat
sub
pop
pop
shrl
mov
out
mov
lds
movd
scas
dec
mov
cs
dec
es
insb
aaa
xor
test
cld
subb
push
pop
lods
jbe
cmp
pop
fmuls
sbb
sti
dec
lahf
aaa
mov
dec
mov
mov
out
push
xchg
sbb
gs
xchg
sub
in
jmp
jmp
xlat
arpl
xor
or
sub
mov
fucomp
lret
sub
fcompl
inc
fwait
mov
insb
dec
ret
mov
cmpl
hlt
pop
std
sub
sbb
inc
lret
aas
std
pusha
push
mov
xchg
cmp
enter
movsb
xor
push
repz
ljmp
add
sub
ret
add
arpl
lret
fildl
out
add
cld
pop
andl
cli
sbb
push
arpl
add
out
xchg
fsubp
xchg
fcmove
add
jl
lret
test
cld
test
or
xchg
sbb
push
dec
leave
cld
fadd
and
jp
push
int
in
shl
add
in
jne
fnstcw
lahf
jnp
add
push
or
daa
mov
mov
fwait
mov
iret
adc
insl
dec
pop
lock
adc
adc
movsb
pusha
add
aam
dec
cmpsb
fstl
mov
sub
mov
sbb
aad
mov
divb
std
mov
push
mov
push
cmp
xchg
xchg
mov
mov
jle
dec
inc
xchg
jo
imul
jle
call
lds
fsubrs
pop
fsin
dec
sti
pop
sbb
stos
in
push
push
sahf
xor
aas
test
fdivs
rorl
movb
rcrb
mov
cmp
cmp
pop
imul
xchg
and
mov
lret
sti
xor
cwtl
pusha
xchg
mov
pop
fldenv
xchg
add
mov
xchg
fwait
sub
std
push
pop
imul
popa
cltd
adc
cli
push
in
cmp
in
mov
or
push
pop
int3
xor
jecxz
mov
int
pusha
bound
cmp
mov
fld
jge
sti
pop
loop
cmp
repz
dec
mov
add
pop
decb
sbb
sbb
pop
dec
xchg
mov
pop
cmc
jbe
imul
pop
outsl
ds
mov
add
aas
inc
jns
pop
sbb
leave
and
fbld
cmpsb
push
adc
fcomps
or
push
jp
adc
loop
rcrl
push
mov
dec
movsb
dec
call
mov
xchg
fisubrs
in
das
add
popl
call
xchg
or
pop
cmp
pop
call
mov
push
inc
jbe
icebp
das
pop
adc
bound
sub
jp
popa
enter
mov
sti
jnp
jge
out
mov
add
mov
mov
add
jbe
sub
addb
outsl
imul
add
fstpt
movsb
mov
je
call
ficoml
dec
or
aam
pop
daa
mov
cmp
rcl
xor
jno
inc
jo
xor
addr16
gs
mov
push
jmp
xor
push
dec
pop
call
fdivrp
mov
frstor
mov
push
xor
das
mov
and
divl
cmpb
xchg
xor
push
jmp
rol
js
and
aas
lahf
lret
adc
dec
and
push
mov
xor
and
and
xor
mov
push
dec
in
dec
pop
out
std
aas
idivb
xor
xor
clc
leave
cli
mov
cli
jns
ret
out
and
sub
hlt
movsb
cltd
add
and
je
push
adc
jle
jp
push
xchg
rcrb
sbb
out
adc
shlb
and
sbb
xchg
adc
mov
fmull
cmp
jmp
mov
add
andb
addr16
addl
incb
out
cmp
mov
lods
lahf
pop
sbb
dec
in
mov
cmp
out
insb
jne
sbb
fildll
xchg
stos
cmp
xor
xlat
notb
xchg
in
push
popa
bound
fsubrs
ret
lss
dec
dec
mov
mov
mov
push
jge
jg
jge
sarb
movsb
and
add
insb
sti
mov
out
mov
mov
push
out
add
lds
data16
cwtl
push
inc
out
inc
xchg
test
jmp
mov
sub
icebp
push
gs
inc
push
sbb
loopne
lahf
std
sub
pop
mov
add
ret
sub
je
dec
add
fimuls
stos
testl
aaa
outsb
fwait
sbb
dec
pop
dec
add
xor
push
fadds
aas
mov
cwtl
dec
pop
aaa
es
jge
mov
adc
and
push
shrb
cmp
jge
inc
jo
add
push
push
addl
jle
mov
stc
dec
dec
or
ret
dec
rcrb
sbb
mov
dec
shrb
inc
jbe
pop
jl
out
mov
into
clc
loopne
aam
loope
adcl
lcall
insl
xchg
adc
shll
cmp
lods
and
sarb
sub
add
pusha
mov
cmc
and
push
clc
shr
inc
mov
out
adc
ficompl
dec
call
push
cmp
mov
push
iret
sub
je
loope
xor
cltd
out
pusha
mov
frstor
mov
jne
dec
insl
dec
fucom
pop
or
ret
jl
jge
sahf
cld
and
pusha
jns
inc
lock
loop
ljmp
addr16
test
jmp
loop
mov
addr16
push
insl
mov
jo
and
ja
mov
xrelease
dec
mov
hlt
pop
mov
mov
pop
and
sbb
mov
out
push
cmp
mov
nop
gs
mov
jg
cli
fisubrs
mov
sub
push
mov
stos
fildl
or
cld
jns
sbbl
jnp
pop
jle
inc
or
pop
lret
jne
cwtl
push
mov
movb
shrl
repnz
call
mov
push
mov
add
pop
xchg
loopne
inc
push
mov
loopne,pt
lcall
inc
lods
shrb
stos
xchg
push
push
pop
sub
es
ss
mov
sub
out
add
or
mov
xchg
fdivrl
inc
xchg
jp
jg
addr16
mov
cmpsl
addr16
cmp
aam
sub
mov
cmpl
hlt
dec
fsubrp
shl
inc
or
add
jb
mov
xchg
jae
mov
xorl
test
loopne
rclb
push
arpl
sub
iret
push
in
sub
xchg
fdivl
js
mov
mov
repz
sbb
fldl
inc
jnp
push
imul
mov
xchg
pop
adc
xchg
lods
adc
roll
arpl
pop
gs
cmc
xchg
xchg
mov
cmp
xchg
sub
insb
mov
test
jle
out
jmp
xor
jne
jns
pop
test
in
push
and
mov
fldpi
cmp
fildl
lahf
test
lcall
dec
pop
addr16
outsb
jecxz
scas
mov
test
push
push
out
pop
dec
adc
rcl
aad
push
jae
add
push
cmp
xor
ja
dec
inc
lahf
mov
cmp
xor
mov
lcall
out
es
fisubrl
dec
dec
or
and
fstpt
test
test
jmp
dec
lds
and
xchg
or
xchg
mov
pop
aam
push
jmp
cmpsl
pop
leave
jnp
cmpl
stos
mov
xchg
sbbl
jecxz
push
pop
les
fcmovu
dec
cmp
adc
pusha
dec
adc
and
dec
insb
movd
sbb
loope
pop
pop
cmp
movsb
jmp
mov
out
inc
lods
sbb
push
call
mov
xchg
stos
lods
mov
rclb
xchg
mov
cmp
pop
adc
in
pushf
sbb
lds
xlat
sbb
jp
adc
xchg
andps
sahf
push
std
dec
js
mov
jp
push
test
ss
testb
mov
loop
add
push
push
cmp
aas
xchg
or
nop
and
xor
mov
jbe
xchg
mov
xchg
cmpsb
sub
xor
nop
clc
movsl
dec
jno
out
sarb
stc
sbb
jmp
leave
adc
popa
jae
out
push
cmpsb
nop
mov
int
push
xor
in
lahf
leave
push
push
pop
call
or
sub
loopne
pop
mov
lock
mov
movsb
aad
inc
and
aad
imul
and
cmp
pusha
push
imul
out
fcmovnu
loope
out
xor
pop
test
popa
or
lcall
aas
imul
mov
xlat
mov
mov
sbb
rcrb
push
movnti
int3
sbb
push
dec
lock
fldcw
xchg
ja
iret
inc
js
lahf
add
divb
inc
xor
mov
pop
aaa
loop
ss
dec
sbb
sahf
mov
mov
adcl
in
pushl
cmp
or
mov
or
push
and
insb
xor
jl
xor
mov
movsb
sbb
sub
int3
pop
les
sbb
rcl
outsl
lret
rol
hlt
xor
dec
sub
xchg
and
mov
loope
pop
inc
aad
jl
stos
addr16
andb
pop
jmp
push
dec
or
ret
mul
pop
aam
aam
pop
lods
mov
enter
repz
mov
cmpsl
ret
inc
loopne
inc
sub
xchg
sub
and
xchg
xchg
sub
imul
sbb
inc
sub
sub
and
cmp
xor
jmp
inc
cmp
adc
sub
negl
adc
pop
test
movl
out
rorb
mov
or
jmp
mov
clc
loopne
cli
pop
dec
push
js
inc
rcr
int
iret
scas
lahf
cltd
mov
out
test
add
dec
xchg
pop
pop
movsb
add
push
sbb
xchg
pop
adc
out
aas
or
sahf
inc
cs
sbb
push
incb
popa
mov
sar
repz
mov
inc
jp
aaa
jmp
icebp
cmpsl
mov
xor
pop
inc
idivb
adc
out
imul
dec
xchg
push
or
mov
filds
mov
js
jmp
aad
mov
mov
lret
dec
into
stos
sbb
sub
out
mov
je
jmp
es
jb
push
lcall
mov
mov
cmc
jb
or
out
mov
dec
xchg
push
scas
loop
mov
movsl
loope
adc
sub
sub
add
pop
inc
scas
jge
jl
sbb
add
inc
icebp
mov
jno
lds
addr16
jle
fsts
loopne
outsl
rol
push
dec
mov
nop
fmuls
fwait
inc
or
xchg
movb
mov
inc
jo
adc
add
js
push
fadd
test
int3
iret
cmp
pop
lret
mov
push
push
push
dec
in
adc
push
andb
test
test
int3
mov
aam
sbb
adc
ss
and
adc
aaa
shl
sub
or
jb
nop
jno
cmp
stos
push
jae
sbb
out
es
mov
scas
ss
ja
and
out
xor
std
stc
fidivl
fxtract
or
adc
pop
pop
inc
ja
cld
mov
popf
sarl
xor
in
lahf
call
hlt
sub
and
stos
sti
leave
fistpl
div
xor
sbb
fsubr
dec
je
ret
mov
mov
jns
ss
xor
out
sbb
xor
mov
or
dec
push
out
dec
inc
cmpsl
lea
sbb
dec
in
sub
lahf
gs
push
call
mov
pop
mov
pop
inc
mov
cmc
inc
ficomps
outsb
rorl
or
fsubrs
iret
shrb
dec
pop
negl
cltd
gs
lods
push
inc
mov
gs
inc
sahf
add
cli
mov
adc
loopne
sti
aam
jnp
inc
clc
and
xor
nop
arpl
jmp
fistpl
sti
inc
in
outsb
repz
cwtl
jmp
mov
fisubs
movsl
sets
dec
mov
add
mov
pop
mov
in
incl
cmp
mov
lret
pop
mov
jle
fiadds
leave
mov
inc
fwait
insb
xor
test
xor
cltd
and
jg
pop
imul
ret
mov
js
ds
add
ret
out
pop
adc
sbb
push
repz
int3
sbb
clc
adc
sub
movsl
sbb
dec
pop
mov
adc
jle
mov
pop
addr16
push
adc
jp
adc
dec
mov
dec
pushl
xor
sbb
adc
rorl
daa
cwtl
xchg
mov
mov
sbb
in
sbb
lock
and
jmp
mov
divb
lock
data16
movsb
es
inc
mov
mov
pop
xchg
psubusw
xchg
fbld
sbb
jp
or
sbb
cs
dec
sti
push
stc
xor
xchg
inc
popa
mov
hlt
test
pop
and
xchg
and
shr
push
or
mov
in
inc
lahf
mov
xlat
hlt
andnps
push
nop
fstpt
mov
or
imul
jo
sub
pusha
add
popa
pop
jp
hlt
aad
sbb
mov
mov
sub
popa
bound
into
inc
jne
shrb
cmp
ret
test
xor
mov
xchg
ds
imul
xor
in
pop
push
aad
imul
push
add
push
icebp
cwtl
push
or
enter
mov
xor
iret
int
sub
lcall
loopne
pusha
inc
sub
adc
aas
jg
lcall
mov
frstor
xor
cmp
daa
mov
shlb
loop
xchg
rorl
jmp
add
sti
fwait
and
cmp
and
xor
sarl
rcll
or
ret
push
sub
stc
push
push
sti
shll
inc
fs
sub
je
cwtl
dec
inc
mov
add
cltd
cmpsb
daa
jb
clc
fidivs
aad
mov
in
push
cmpsl
mov
and
ret
icebp
sbb
xlat
xor
call
sbb
nop
ffree
ret
je
pop
mov
sarb
loopne
dec
cmpsl
mov
movsb
push
pop
icebp
mov
sub
xchg
sbb
pusha
mov
aas
aas
mov
call
movsl
aam
sbb
icebp
mov
xor
or
jg
insb
pop
mov
add
sbb
es
std
sub
test
mov
sbb
fstpl
lahf
test
sbb
orb
addr16
sub
add
add
mov
mov
push
popa
loopne
xchg
mov
cmc
push
mov
xchg
mov
xor
outsl
mov
pop
push
fsqrt
cmpsl
insb
insb
out
aaa
dec
or
mov
imull
outsb
stos
xor
fs
call
or
rcrb
sub
xchg
jmp
sti
or
add
push
addb
xchg
push
pop
rclb
xchg
push
test
js
add
push
sub
cmp
rorl
pop
scas
subb
push
add
je
scas
push
gs
out
shlb
inc
xchg
push
arpl
sbb
sti
push
cld
in
pop
xchg
loopne
inc
test
pop
xchg
and
xchg
cmp
mov
rcll
int3
and
xor
xchg
js
cmp
sarl
inc
jae
das
push
pop
mov
fisubrs
fistpl
adc
andl
or
mov
sbb
cmp
cmp
sbb
xchg
inc
sub
sbb
and
cmc
jnp
les
movsb
notrack
popa
jns
in
jg
pop
sbb
jns
call
cmp
jno
and
push
cmpb
or
sbb
jecxz
int
jmp
aam
or
or
mov
ret
xchg
mov
mov
sbb
pop
mov
sbb
and
add
scas
sarb
push
loope
mov
retw
scas
adc
rolb
add
lods
jb
push
jge
xor
sbb
and
les
pop
xchg
cmp
cmp
stos
adc
pop
loope
mov
mov
movsb
in
fnsave
das
lock
jmp
pop
jge
int
pusha
xor
adc
aas
divb
lods
mov
pop
inc
in
in
cltd
js
dec
jge
hlt
ljmp
fwait
xchg
adc
in
out
cmp
aam
mov
test
inc
mov
or
ret
pushf
das
mov
std
pusha
into
cmpsb
aad
nop
rcl
lret
mov
pop
aaa
fwait
int
into
shrl
sbb
jo
repz
jnp
fdivrl
pop
ss
adc
sub
push
das
imul
aam
pop
stos
mov
test
jnp
aam
push
flds
inc
cwtl
sbb
je
fidivs
pop
and
xor
popa
cmp
fnsave
cmp
imulb
imul
jecxz
ljmp
loop
imul
pop
mov
sbb
div
imul
pop
sub
jnp
das
inc
gs
sbb
nop
xor
imul
imul
inc
inc
pop
scas
fcomps
jo
ss
jnp
dec
adc
out
fbld
push
mov
pusha
push
ds
in
jle
xchg
iret
arpl
aas
cmp
in
mov
fildll
dec
iret
out
mov
mov
fidivs
push
cmp
xchg
sbb
push
push
test
xchg
enter
cmp
dec
pop
pop
jns
pop
in
mov
fldenv
push
pushf
pop
add
cmp
cmp
jl
testb
mov
and
por
std
mov
scas
ja
adc
fisubrl
mov
xchg
mov
cmpsb
js
jns
cmp
fists
or
adc
mov
push
or
cmp
leave
adc
loopne
pop
lss
or
sub
mov
dec
cmp
xchg
pop
jo
aad
push
loopne
pop
test
xchg
add
sub
or
mov
xor
out
into
das
or
mov
stc
push
je
dec
test
clc
sub
add
jnp
addr16
fsubl
test
punpckhwd
pop
fwait
mov
sub
inc
sub
sub
xor
xor
sahf
xor
add
into
mov
lods
insl
dec
daa
imul
push
add
mov
jle
jb
arpl
dec
or
push
jns
pusha
int3
add
cmp
fisubs
fwait
push
mov
loope
divb
cltd
repnz
cmpl
jecxz
mov
push
addl
dec
add
jp
lea
jns
repz
push
mov
fsubrl
decb
cmp
add
adc
loop
dec
sub
test
adc
adc
es
push
std
or
decb
push
dec
add
inc
pushl
cs
push
dec
lea
mov
imul
out
cmp
test
xchg
ljmp
pushf
fdivrs
pop
add
leave
imul
fwait
fwait
inc
jecxz
outsb
cmp
dec
mov
xor
inc
xor
dec
inc
cmp
mov
cmp
clc
xlat
movsl
pop
fcmovbe
inc
sub
mov
inc
lcall
push
pushf
je
lds
or
in
and
movsl
es
ror
pop
or
mov
out
inc
adc
inc
rol
sbb
ds
dec
inc
add
mov
movsb
adc
cmp
push
jle
xor
loope
cmpsb
inc
pop
jge
sbb
sub
xchg
stos
sbb
test
ss
ja
adc
dec
add
dec
outsb
jo
lea
fldl
xchg
mov
add
adc
pop
and
mov
push
repnz
sbb
popa
mov
jne
mov
mov
in
xchg
cmp
mov
and
cmpsb
jmp
out
jbe
xchg
push
or
push
movb
pop
and
sahf
fucom
out
pop
push
cmp
xor
aad
insb
inc
push
jl
ja
add
test
pop
es
pop
pop
das
ret
stc
inc
hlt
pop
shrb
cmp
mov
jecxz
adc
sbb
pushf
lock
mov
cs
or
stos
mov
dec
cmp
fs
inc
inc
sbb
sahf
cmp
mov
push
ljmp
xchg
mov
repnz
sub
dec
lret
mov
mov
inc
imull
ds
cmpsb
ret
cmp
lods
xchg
aad
iret
mov
sbb
cmp
push
out
or
ficomps
pop
push
push
rolb
scas
out
cmp
movsb
inc
test
and
inc
popf
out
jle
push
movsl
sbb
adc
push
repnz
mov
sbb
test
mov
pop
mov
test
adc
lea
mov
js
inc
mov
push
or
push
je
push
xor
mov
dec
xchg
out
mov
call
or
pop
add
inc
testb
sub
cmp
cli
adc
outsl
stc
fsubrs
or
pop
in
ret
test
jle
mov
cmp
mov
jno
xorl
push
pop
enter
or
mov
sub
andl
mov
dec
pushf
and
mov
pop
xor
push
inc
iret
cmp
insb
pop
xchg
out
and
clc
repnz
incb
lret
jns
xor
xorl
sbb
sub
insb
leave
mov
and
inc
and
repnz
cwtl
cltd
xchg
rep
jp
in
cmp
xchg
outsb
cltd
loopne
fisubs
test
dec
jnp
or
xor
xlat
dec
and
sbb
cmp
push
mov
mov
inc
fdecstp
xor
mov
or
inc
ja
pop
mov
lods
sbb
cmp
insl
dec
pop
cmp
outsl
nop
inc
xor
adc
push
fnstsw
testl
in
dec
fisttpl
ret
pusha
testl
sbb
mov
andl
leave
mov
sbb
ja
lods
push
pop
pop
sub
jle
cmovo
dec
sahf
stc
aaa
fcoms
in
mov
sti
pop
ds
stc
and
add
or
pop
sbb
in
sbb
sbb
xor
xchg
rorb
add
push
out
cmp
cltd
scas
pushf
push
repnz
lods
hlt
call
jno
orl
add
xchg
xor
mov
fld
push
test
xchg
cmp
xor
cltd
mov
cs
xor
jbe
fnstsw
jmp
add
ljmp
cmc
pusha
imul
mov
push
pop
jo
or
mulb
sbbb
xchg
add
mov
jbe
outsb
icebp
pop
mov
xchg
mov
sahf
sarb
sbb
jmp
test
cmp
lods
lods
lret
mov
fdivl
fmulp
xor
jecxz
loopne
mov
in
ss
inc
or
dec
aad
test
jg
addr16
fsts
or
cmovl
jle
bound
sbb
js
lret
cmpsb
mov
lcall
call
jbe
sahf
xchg
cli
insl
lods
test
cmp
xor
dec
imul
cwtl
mov
push
xchg
int
pop
and
daa
shlb
clc
gs
mov
mov
inc
sbb
pusha
xchg
rolb
pop
divb
daa
ds
jne
hlt
jb
or
jmp
xor
fimuls
scas
or
js
out
out
or
jg
sub
sbb
icebp
inc
pop
in
fsubs
in
dec
xchg
cmpsb
add
andb
mov
sub
jecxz
sbb
mov
fisttpll
push
sub
mov
sbb
jmp
sbb
pop
les
fisubrl
add
lcall
nop
cltd
dec
ljmp
mov
sub
sti
jnp
test
xor
or
mov
jns
nop
insb
sahf
cli
in
scas
and
xor
inc
push
inc
pop
and
and
pop
xchg
push
enter
adc
iret
add
sub
push
jge
and
pop
mov
push
pop
pop
sarb
push
xchg
mov
jno
scas
dec
cmp
movsb
jg
lds
adc
cwtl
pop
rorl
jne
popf
addr16
add
in
xor
xchg
or
xchg
dec
xchg
iret
jg
movsb
lods
mov
pop
ljmp
scas
int
jle
fwait
and
insl
insb
repz
int
int
iret
sbb
leave
aas
fildl
mov
xor
add
inc
add
xchg
fsubl
int3
mov
jae
pop
mov
mov
xchg
push
je
mov
xor
into
adc
pop
icebp
inc
inc
xchg
sbb
cmp
dec
popf
and
ds
pop
xor
add
cmp
sbb
cld
loop
daa
lcall
cmp
out
mov
jo
jp
push
sub
inc
popl
mov
test
sbb
insb
dec
sti
fnstcw
lret
cli
cmp
xchg
cmp
subb
aas
sarl
mov
xchg
sti
sub
mov
and
adc
outsl
add
fstl
push
inc
fldcw
sub
inc
sub
sub
movsl
repz
test
repnz
pop
ss
cmc
pop
and
aaa
and
orb
movsl
jno
lahf
imul
insl
cmpsb
imul
call
sahf
in
jg
outsl
sbb
lock
push
xor
lods
movl
fnstcw
inc
push
insb
loopne
cmc
xchg
lret
add
orb
mov
jo
sbbl
pop
mov
add
subb
fcompl
stos
push
xchg
sbb
push
int
popaw
aaa
adc
dec
test
lods
fdivrl
jle
jge
pop
pop
test
mov
imul
jb
addl
int
cwtl
movsb
xor
leave
js
sarb
dec
sbb
and
test
test
pop
inc
push
adcb
sbb
loopne
daa
sbb
fildll
jecxz
fldenv
mov
jle
jnp
fucomip
cmp
sub
mov
xchg
dec
xchg
sub
test
out
xor
mov
arpl
pop
fisttpl
push
mov
mov
or
push
jne
jl
cmpsl
mov
sbb
sbb
adc
mov
jg
movsl
rcll
leave
pusha
jno
xor
inc
bound
mov
inc
pushf
inc
add
jns
test
sub
pop
imul
addr16
pushf
jno
aad
sub
ret
jp
cmc
pop
loop
xor
pop
cmp
sbb
icebp
in
scas
dec
cltd
mov
mov
push
lcall
push
add
scas
shrb
xchg
and
or
notb
mov
jo
xchg
je
dec
push
iret
in
out
sub
int3
in
jb
dec
mov
mov
cwtl
and
adc
daa
cmp
jno
jbe
pop
mov
repnz
leave
xchg
sub
sbb
add
mov
cmp
mov
popf
sbb
push
mov
mov
aad
sub
xorb
mov
and
test
push
mov
je
cwtl
pop
sbb
repnz
sub
mov
clc
add
sti
es
push
loopne
in
cmp
sbb
xchg
adc
mov
mov
or
sti
add
push
sbb
fcom
sub
fnstenv
jecxz
inc
cld
dec
stos
jb
in
and
pop
cwtl
pop
and
lds
insb
xchg
lods
inc
and
int3
sti
hlt
jle
cmp
mov
cmpsl
pop
sbb
insl
xorb
inc
jmp
ficoms
push
inc
xchg
push
xor
js
lahf
rcr
inc
mov
mov
int3
mov
test
fstl
into
repz
aaa
jnp
jo
or
xor
sbb
jne
jne
dec
pop
in
push
gs
out
dec
mov
aaa
cltd
push
call
mov
dec
bndldx
push
paddsw
imul
popf
push
ja
lcall
or
pushl
lret
fdivr
push
mov
sub
and
inc
ljmp
push
test
daa
push
or
sbb
pop
stos
jp
movsl
cld
adcb
les
movsb
cs
jae
ja
test
call
mov
fstl
imul
clc
xchg
cmp
adc
push
cmp
icebp
cld
dec
xchg
fistps
mov
sbb
lods
and
mov
or
cld
jl
add
ja
lods
adc
sub
push
push
push
cs
cmp
cmp
mov
in
fistpll
pop
arpl
in
push
pop
cwtl
cwtl
stc
mov
or
xchg
daa
and
and
dec
popa
jb
xchg
scas
dec
pop
je
dec
add
mov
aas
push
push
fisubl
mov
iret
cmp
popf
shll
imulb
les
adc
add
sahf
outsb
mov
push
into
sar
scas
lods
sub
fdivrp
in
insl
push
jne
pop
pop
add
roll
jg
and
push
jecxz
mov
rorl
pop
dec
loop
lret
xor
out
xor
imul
and
leave
lret
pusha
cmpsl
inc
jmp
jl
mov
pop
and
popa
dec
popa
fldt
mov
lock
test
fsubl
jle
aas
jb
mov
sub
das
repnz
rcrl
jmp
and
test
inc
js
daa
je
or
lahf
inc
jg
mov
scas
cmp
inc
xorb
adc
cmpl
add
icebp
insl
mov
inc
cwtl
and
movsl
pop
mov
mov
jo
sbb
ror
out
scas
out
pop
imul
ja
test
cmc
inc
mov
sub
mov
test
or
and
push
dec
repz
cli
pop
add
or
repz
dec
out
mov
jg
dec
es
out
cli
mov
inc
inc
iret
pop
mov
sbb
xor
jg
mov
pop
lods
dec
jb
inc
add
dec
popf
push
inc
add
out
or
hlt
inc
pop
push
shl
push
movsl
lods
xchg
sbb
stos
subb
and
or
mov
sbb
cmpsb
pop
lods
test
pusha
pop
in
shlb
imul
pop
mov
mov
loopne
cmp
jg
popf
rorb
lods
and
and
pop
jecxz
sbb
test
sub
push
out
xchg
cld
int3
cld
into
lock
inc
repnz
push
jecxz
shll
cmp
pop
faddp
mov
or
fisttpl
stc
jnp
pop
push
pshufw
inc
pop
jmp
shl
jno
aaa
orl
mov
push
push
ljmp
mov
and
lahf
mov
cmp
in
aam
je
fcoml
lahf
sub
sub
lock
adc
jl
dec
xchg
mov
dec
xchg
mov
push
sbb
lea
sub
or
adc
xor
je
push
aam
int3
repnz
mov
mov
inc
inc
pop
out
aam
addr16
fldenv
jno
arpl
xchg
and
dec
repnz
inc
lahf
in
mov
adc
out
icebp
xchg
xchg
xor
bound
ss
inc
sbbb
test
mov
xor
mov
jno
into
add
lea
aaa
andl
mov
out
inc
rclb
fistpll
jne
inc
sbb
aaa
cmp
outsl
push
nop
jbe
mov
jl
mov
jns
xor
lea
cmpsl
pop
out
or
mov
int3
and
and
mov
pop
addr16
adc
jp
mov
cmp
mov
fstps
test
outsl
aas
xchg
sub
mov
lea
into
cmc
aaa
or
sarb
push
mov
or
mov
out
jne
pusha
sbb
xchg
mov
mov
mov
mov
icebp
jbe
or
aas
mov
mov
add
cld
or
jge
or
mov
mov
add
xchg
and
xchg
popf
push
aam
or
int
jle
add
out
xchg
rcll
adc
movsl
outsb
imul
andl
mov
hlt
popf
cli
ret
cli
lock
addr16
add
jecxz
pushf
adc
push
fs
insl
lcall
aad
pop
stc
pop
and
mov
roll
xchg
lahf
mov
pop
cmp
fistps
insb
shll
mov
loopne
mov
sub
mov
dec
adc
cmp
adc
mov
pop
testb
movd
ret
les
mov
adc
cmp
dec
icebp
loop
push
or
sub
jp
cmp
jl
enter
xchg
sbb
xchg
push
es
stos
jge
mov
cwtl
in
stos
shlb
mov
jae
insl
push
add
xor
out
cmp
or
cmpsb
add
inc
jo
addr16
cmc
rcr
icebp
sub
repnz
sbb
scas
adc
addr16
xchg
xor
pop
dec
es
inc
xchg
and
xchg
mov
mov
mov
test
or
call
fwait
pusha
mov
push
stos
and
std
mul
ds
fwait
mull
cltd
lds
test
adc
call
mov
pop
xor
ret
lods
insb
fsubl
dec
ret
dec
xor
adc
mov
lock
mov
popa
adc
lahf
pop
xorb
sbb
cmpsl
dec
xchg
sbb
inc
push
lret
hlt
loope
and
xor
dec
cmp
test
ficoml
test
mov
jns
loop
xor
loopne
sub
sbb
cmp
mov
sti
negb
sbb
xchg
fnstenv
xchg
xlat
shrl
enter
sub
mov
jl
mov
das
push
ret
sub
jae
fwait
jno
and
test
lahf
pop
popa
es
jo
mov
fs
mov
imul
out
sbb
or
inc
sub
gs
mov
xlat
push
ss
aad
aas
ds
enter
adc
fsubr
mov
and
cmp
hlt
and
sbbl
aam
dec
daa
sub
fistpl
inc
ja
jmp
stos
nop
adc
shl
iret
xchg
inc
xchg
inc
inc
jo
lods
popf
loope
push
lea
jbe
cmp
jnp
fs
ret
fdivl
pop
pop
mov
insb
or
jge
cmpsl
adc
sub
jg
inc
lea
popf
push
push
nop
fadd
push
pop
les
scas
add
push
popf
pop
stos
test
jo
test
scas
pop
test
mov
xor
inc
jbe
xchg
xor
sub
ds
and
or
out
or
jns
fidivrs
mov
push
or
daa
aas
mov
push
clc
int
sub
ror
mov
int
sub
loopne
dec
add
xchg
adc
cmp
loopne
cwtl
push
xor
popf
adc
push
jmp
pop
divl
dec
push
and
stc
fstp
xchg
adc
jne
or
in
mov
test
mov
cld
jle
lods
aaa
shll
and
and
rclb
pop
mov
mov
loop
clc
jg
mov
sti
and
mov
and
or
js
pop
push
mov
mov
push
lods
sub
add
dec
jo
inc
sub
repz
cli
mov
push
scas
push
out
js
outsb
xchg
sbb
clc
test
sub
test
movlps
lret
mov
jnp
and
lods
faddp
mov
stos
leave
fidivl
pop
sbb
sub
jno
mov
jl
out
xlat
mov
into
adc
pop
push
adc
pop
xlat
add
pop
xor
dec
and
in
jmp
push
inc
xchg
inc
stc
add
push
or
xchg
xchg
out
or
sbb
das
adc
pop
mov
in
xor
stos
test
shlb
pop
gs
repz
mov
stos
pop
pop
dec
movb
dec
inc
sbb
or
dec
cs
test
fldt
push
sbb
mov
sbb
in
mov
cmp
arpl
mov
inc
pop
push
push
lods
scas
mov
xor
jmp
push
jae
fstpl
inc
pop
dec
fadd
dec
pushf
and
addr16
xchg
xor
adc
mov
pop
dec
and
leave
aaa
aaa
cmpl
lock
fs
inc
lahf
pop
sti
loope
mov
out
cwtl
fwait
dec
lcall
cmc
adc
leave
cmp
xor
int
cmp
inc
jns
mov
fwait
or
mov
lahf
movsb
dec
ja
lahf
push
dec
xchg
test
dec
test
aam
inc
sub
jno
out
imul
pop
ret
push
jl
cmp
in
push
pop
iret
xor
or
cmpb
sbb
and
pop
cmp
insl
mov
mov
add
jbe
adc
xchg
ljmp
es
nop
mov
test
jmp
fsubrs
test
cmpsb
out
lret
mov
or
cld
loope
lcall
jmp
xchg
arpl
aad
jle
mov
les
call
outsb
pop
lret
or
movsb
cld
out
mov
mov
jbe
cld
adc
cmp
sub
dec
jg
add
aad
or
jbe
mov
ret
imull
mov
lret
aas
push
mov
and
inc
sahf
incb
sti
push
sub
scas
addr16
movsb
cmp
push
xor
inc
pop
push
add
test
lret
hlt
and
dec
fcmovnu
call
hlt
notl
fbstp
scas
pop
jne
mov
shl
or
sbb
xchg
xchg
inc
cld
subb
or
jns
mov
inc
cmp
inc
push
mov
lds
js
es
gs
lret
int
adc
pop
call
mov
stos
dec
shrl
xchg
pop
xor
jmp
sub
hlt
mov
push
jns
or
aaa
loopne
out
mov
out
andb
hlt
or
xchg
jno
or
push
sub
pop
scas
adc
pop
or
pop
push
not
sub
popf
arpl
movsl
jnp
test
stos
jns
mov
cs
jnp
adc
push
xor
add
xchg
and
leave
sub
xchg
aaa
mov
jg
xchg
and
decb
lret
addr16
mov
mov
jne
enter
sub
jbe
es
lret
jbe
mov
out
or
out
and
cs
sbb
cmp
jl
cmpsb
cs
cmp
gs
cltd
imulb
cwtl
mov
inc
and
test
test
imul
repnz
mov
jne
xor
mov
iret
add
ret
out
push
push
ret
xor
pop
jmp
cmp
fwait
inc
jno
and
inc
inc
in
addr16
sub
add
mov
sub
inc
sub
cmpsb
mov
mov
pop
push
adc
xchg
subb
cwtl
pop
cmp
shlb
ljmp
rcll
jne
loopne
jae
pop
inc
jge
and
ss
mov
fcomp
hlt
ficoms
leave
cmp
mov
inc
jne
test
sub
mov
js
cmp
push
cmpps
mov
lods
and
cmpsl
je
lods
out
and
inc
pop
scas
sbb
dec
jl
popa
inc
into
gs
or
sti
dec
inc
sub
lahf
cmpsl
shlb
subl
add
pop
fildll
adc
mov
fcom
jmp
mov
jp
cmp
ja
fcomi
xor
cmp
aad
push
xchg
subl
insl
cmp
jl
imul
xor
cltd
lds
pop
push
sbb
cld
inc
or
mov
mov
daa
lret
das
movsb
sbb
jno
lret
sahf
sub
jmp
leave
mov
pop
ffreep
test
mov
out
std
das
scas
add
xchg
add
xor
shll
add
imul
inc
popa
push
rcll
push
jo
or
and
xchg
inc
ds
inc
je
aad
imul
push
and
mov
adc
std
test
sub
mov
aam
test
int
sbb
dec
out
rorb
push
push
adc
dec
stos
and
mov
movsb
push
xchg
or
stc
push
insl
cmc
jae
or
inc
popf
xor
cli
push
cmp
int3
or
movsb
fs
bound
mov
lods
fwait
das
cmp
or
push
inc
pop
jbe
and
push
push
shrb
call
repz
jl
jnp
push
out
mov
or
movsb
fidivrs
xchg
outsl
je
test
outsl
jae
dec
cmp
push
cmp
fstp
inc
nop
jne
iret
arpl
rorl
mov
negb
pushf
dec
repz
mov
dec
cltd
mov
fwait
imul
repz
fldt
lods
mov
sub
aas
mov
mov
dec
int
sub
and
fucom
movsl
mov
add
rcrl
popa
jo
mov
iret
test
loop
cmc
scas
fs
cmp
test
in
xchg
jecxz
jge
jmp
push
mov
inc
push
popf
sahf
and
sbb
push
jecxz
mov
int3
pop
jbe
push
sbb
adc
or
dec
sbb
push
dec
jno
rorl
and
out
xchg
cwtl
data16
jg
dec
and
sbb
dec
nop
lock
dec
xor
cltd
xchg
adc
jbe
fs
aam
das
mov
pusha
popf
aas
push
and
xor
pushf
dec
ret
daa
pusha
jnp
mov
dec
pushf
out
or
in
lret
aad
sahf
mov
fld
iret
sar
in
mov
push
movb
enter
lcall
dec
mov
out
and
stos
lret
mov
decb
xchg
add
lret
popa
jo
xchg
scas
mov
add
mov
jge
nop
add
daa
push
jno
dec
ja
and
lods
jmp
repnz
mov
shrl
jne
jge
fiadds
mov
stos
pop
mov
jbe
mov
xchg
pusha
dec
cmp
scas
jecxz
dec
sbbl
orl
inc
push
sub
dec
popa
inc
sub
insl
add
push
mov
int3
adc
sub
xor
and
pop
sbb
push
bnd
sbb
mov
movsb
movsb
movsb
sbb
cmp
lahf
mov
sub
in
loope
iret
les
loop,pn
inc
xor
gs
inc
mov
jmp
inc
add
add
mov
sbb
xlat
cmp
jl
adc
or
bound
xlat
stc
mov
sbb
loop
insb
dec
adc
imul
push
xchg
push
fwait
outsb
xor
das
pusha
fsubrl
jo
xchg
cltd
jle
hlt
or
dec
call
cmc
out
testb
mov
sbb
clc
ret
add
adc
lock
dec
dec
and
xchg
test
inc
stc
push
adc
clc
xor
loopne
xorb
add
pop
jg
rcll
movsb
dec
push
or
pop
icebp
pop
push
xchg
cmp
pop
mov
add
mov
movsb
push
sti
loop
sub
scas
stc
add
lret
sub
loop
addr16
add
pop
sub
lret
adc
sbb
mov
adc
fwait
cli
mov
loope
add
sub
xchg
lods
jno
jmp
repz
rsm
ja
mov
adc
movsl
imulb
xor
sbb
mov
or
adc
rcrb
int
push
lahf
or
xchg
xlat
jne
adc
mov
out
cmp
and
push
cmp
sbb
int3
out
cmp
cmc
xor
sti
std
jl
call
mov
push
bound
fcmovb
arpl
lcall
cmp
movsl
adc
adc
shlb
scas
popf
dec
adc
out
sti
addb
rep
xor
adc
out
jmp
dec
lods
je
xchg
ds
sbb
cmp
stos
aas
xchg
or
inc
add
mov
adc
sar
mov
mov
dec
fwait
and
add
rorb
fstpl
mov
add
adc
mov
mov
push
data16
icebp
adc
push
movsb
push
scas
jl
jnp
leave
xchg
pushf
adc
jmp
cmp
jae
dec
mov
jne
shrl
jmp
imul
jle
push
inc
jmp
fwait
cwtl
movsb
cmc
pop
insb
inc
aaa
bound
xor
or
jne
mulb
push
xchg
ljmp
dec
outsl
add
insb
out
or
ss
pusha
inc
push
insb
mov
mov
cmp
jl
sub
out
mov
cld
test
push
and
outsb
adc
aaa
fwait
jae
jg
lea
inc
aam
sbb
rorl
cmpsb
or
mov
popa
lock
aad
ss
mov
adc
lods
push
pop
pop
push
or
imul
jmp
xor
xchg
movsl
push
jnp
jmp
lock
inc
mov
popa
out
out
js
lret
sbb
mov
push
fsubr
mov
and
mov
jb
leave
lds
mov
roll
addl
push
lods
fwait
adc
push
sub
test
xchg
dec
xor
or
xor
cmp
mov
ljmp
cmp
xchg
pop
fadds
movsl
sub
or
stos
pop
enter
mov
jmp
lcall
popf
lea
cmp
mov
scas
ror
jno
jnp
add
aam
xlat
and
jg
idivl
cmpsb
add
dec
push
shlb
pop
cmp
outsb
and
hlt
cmp
xchg
dec
sbb
xor
cmpsl
sbb
and
ss
sbb
pop
aam
lods
adc
or
and
xor
lret
hlt
jecxz
cmp
inc
fucom
cli
aad
pop
loop
daa
jmp
xor
or
popf
sti
repz
inc
pop
mov
repz
rcl
dec
xchg
repz
push
xchg
enter
add
mov
and
mov
mov
clc
loope
push
mov
mov
cli
fs
and
adc
addl
mov
call
hlt
mov
bound
mov
sbb
divb
outsl
pop
sub
mov
movsb
pop
repnz
rcrb
decl
jle
in
popf
outsb
aas
rclb
dec
dec
std
push
rol
lods
cli
test
test
lods
or
cmp
pop
mov
pop
push
mov
lods
adc
mov
cltd
dec
xchg
mov
fdivl
loopne
scas
mov
mov
mov
add
mov
dec
in
sbb
xchg
mov
or
leave
jecxz
inc
orl
sbb
adcb
or
pop
loop
popa
fstpl
adc
jno
inc
adc
fisubs
push
xchg
mov
loope
or
mov
mov
bound
jnp
add
lods
lods
andb
and
and
and
push
cs
mov
push
fs
dec
lds
or
xchg
xor
cmp
out
movl
dec
pop
lods
add
cmp
pusha
hlt
ja
js
aam
out
lret
dec
add
ss
repz
lahf
lahf
push
jge
rorb
loop
stc
pop
insb
mov
adc
popa
fimull
int
test
and
icebp
mov
sti
xor
rorl
push
popl
add
mov
xchg
stos
add
adc
jbe
out
fwait
cli
inc
insl
out
or
addr16
jg
add
dec
cmpsb
push
pop
push
inc
sbb
stos
jmp
cmp
sub
xor
mov
cmp
xchg
push
scas
mov
inc
pop
and
filds
push
aam
loopne
or
in
mov
out
sahf
jl
pop
or
push
ss
int3
xchg
xchg
or
push
cltd
cs
adc
test
xchg
adc
jns
xlat
rcr
int
incl
or
in
repz
cmc
xchg
mov
dec
pusha
jo
scas
inc
lds
jle
and
or
aas
cs
sbb
inc
inc
into
mov
mov
xchg
jmp
stos
std
mov
push
push
in
cld
cld
icebp
mov
ljmp
in
add
sbb
cmp
inc
addr16
fs
ds
into
ljmp
movsl
push
and
jecxz
push
push
sbb
popa
stos
jle
call
stos
push
dec
aam
mull
data16
scas
loope
mov
arpl
xchg
cwtl
add
push
dec
cli
cwtl
aad
ds
cld
xor
in
fucomip
decb
jne
in
pop
std
adc
mov
add
les
and
jne
and
mov
add
loopne
sbb
lds
adc
in
mov
xchg
xor
cltd
ljmpw
lret
pop
mov
ret
inc
xor
shll
mov
outsl
loop
sarl
mov
fstps
orb
sub
push
ror
add
xchg
icebp
test
mov
lret
or
add
mov
mov
icebp
out
cmpsl
add
rcrl
dec
mov
mov
and
shl
enter
nop
mov
orl
fisttpl
adc
inc
push
mov
movsl
sbb
jp
hlt
test
inc
testl
adc
add
aas
aaa
scas
push
jle
pop
xlat
mov
dec
jb
aad
inc
dec
stos
adc
shrl
shlb
fldcw
stos
jae
test
xchg
jnp
stos
lds
pop
out
xchg
push
lds
mov
xor
mov
mov
xchg
ficoms
jg
stos
aam
mov
sbb
dec
jb
movsb
pop
sti
test
fbstp
lods
cmpl
cmpsl
int
lahf
imul
or
jo
clc
mov
add
pop
shrl
data16
in
mov
movsl
shl
dec
dec
and
movsl
bound
rorb
mov
insb
pop
shll
insb
jne
xor
jbe
mov
cmc
repz
xor
addr16
inc
shlb
lahf
ret
push
das
or
xchg
pushf
push
push
and
imul
hlt
sub
movsb
mov
and
hlt
dec
scas
fucom
sub
jns
add
das
cmc
mov
xor
adc
cwtl
cmp
add
adc
cli
or
xor
mov
roll
roll
movsb
xor
shll
imul
mov
scas
lret
hlt
mov
and
loop
and
fs
hlt
call
mov
aad
std
and
mov
sbbl
push
xchg
pop
lret
and
movsl
sbb
out
adc
ja,pn
out
xchg
jg
lods
andl
je
xchg
outsb
cmp
dec
clc
add
repz
cld
loopne
repnz
cwtl
xchg
shlb
add
in
cmp
loopne
inc
xchg
fstps
xchg
or
xor
rol
and
cmp
sbb
adc
xchg
fdivrs
mov
pop
dec
cmp
add
push
xor
mov
mov
jo
jo
pop
lahf
das
xchg
pop
enter
mov
and
add
dec
dec
xor
xchg
test
in
cmp
cltd
into
mov
xchg
incb
jle
mov
lds
test
rcrb
sarb
xlat
xor
push
repnz
hlt
sub
dec
andb
mov
pop
inc
out
and
sbb
roll
xor
fistpl
clc
aad
inc
rclb
xchg
adc
out
push
fadd
lret
mov
fldcw
and
idiv
sbb
test
aas
sbb
repnz
xchg
jnp
ftst
mov
lods
cmp
data16
xchg
mov
sbb
je
jge
popf
adc
adc
dec
mov
leave
out
cs
call
stc
jle
jo
sahf
xchg
aas
sub
xor
arpl
jae
sbb
cmp
xor
in
pop
clc
int
fistl
in
fstl
out
in
dec
lcall
inc
or
pop
mov
push
arpl
fsubrl
dec
daa
adc
xchg
xor
sub
jge
aaa
mov
add
inc
mov
mov
xchg
scas
jns
in
add
aam
lret
push
je
int
aam
std
insb
jbe
cmp
fwait
popa
sbb
inc
lret
es
adc
daa
jne,pt
push
bound
or
xchg
sbb
push
sub
jmp
lret
pop
xor
outsl
aad
mov
cmc
jnp
daa
std
repz
push
insl
ret
push
inc
inc
imul
inc
int3
aam
xorb
lahf
in
dec
lods
insb
push
jnp
xchg
cli
push
out
arpl
pop
jne
jle
lret
dec
xchg
mov
pop
xor
negl
mov
and
flds
mov
dec
and
sbb
push
lcall
rolb
leave
mov
pop
sub
cmpl
jo
jns
add
mov
les
jnp
mov
loopne
outsb
fwait
pusha
imul
sub
jo
cmp
inc
inc
push
loop
mov
dec
out
leave
cmpsb
fadd
xor
jl
ds
int
jns
jg
addr16
out
push
popa
or
pop
adc
push
xchg
jmp
sarl
dec
mov
fimuls
scas
int
mov
pop
jg
call
mov
mov
mov
sbb
push
insb
dec
sbb
jp
or
imul
xor
mov
aaa
ja
jle
jae
adc
mov
cmp
sub
ljmp
dec
dec
xchg
xchg
cmpsl
xor
negb
lods
bound
sbb
xor
pusha
xor
mov
movsb
lock
ficomps
es
rclb
xor
pop
dec
ja
mov
fcmovu
fcmovne
and
mov
mov
jno
pop
push
push
std
sub
rorl
sub
mov
sbb
adc
cs
push
xchg
ret
incb
inc
insb
xchg
ja
xchg
xchg
push
cs
mov
xor
and
fnstsw
js
vhsubps
and
inc
xor
or
addr16
fiaddl
jae
mov
inc
mov
push
into
gs
pop
push
sub
js
scas
push
nop
scas
or
adc
sti
push
mov
iret
neg
leave
repnz
mov
pop
aas
cmp
loope,pt
inc
aas
scas
loope
int3
mov
pushf
sahf
andl
adc
dec
mov
add
shr
arpl
dec
scas
xor
cmp
sub
shll
inc
aas
cltd
aas
std
fisttpll
stos
rcr
stc
add
mov
and
mov
adc
pop
mov
push
xchg
es
bound
insb
and
inc
cmp
mov
sbb
lock
mov
sub
xlat
test
movsb
orl
fnsave
dec
adc
arpl
dec
pop
lret
mov
and
xchg
rcl
xchg
stos
in
ljmp
cmp
mov
mov
ljmp
mov
sbb
cmp
addr16
jns
mov
icebp
xchg
sub
es
in
mov
fxch
out
jle
xchg
sub
jle
aam
xor
dec
mov
mov
fwait
repz
push
push
add
pusha
in
jne
add
mulb
adc
bound
push
xor
stos
mov
mov
mov
mov
cmp
iret
lret
lahf
mov
inc
mov
xchg
rcll
ds
mov
push
sub
fcompl
sub
call
pop
imul
jo
test
sbb
jbe
xor
ret
push
xchg
test
pop
xchg
mov
arpl
push
pop
add
pop
cld
das
jo
in
mov
in
nop
and
or
fwait
pop
mov
cmp
push
test
mov
imul
rol
sbb
sbb
jmp
insb
xor
movntq
out
les
repnz
jle
jnp
jb
jg
cmp
push
stos
jns
test
jnp
fsts
test
jns
ljmp
xlat
cmp
iret
jnp
cmp
cmp
loop
cwtl
test
adc
dec
mov
inc
lcall
into
mov
pop
sbb
in
xor
cld
gs
into
xchg
xchg
mov
mov
sub
cmp
mov
dec
and
and
or
add
pop
andl
into
in
sahf
add
mov
fisttpl
insb
cld
jne
cmp
ss
fs
repz
stc
dec
insl
int3
fidivrl
sbb
imul
enter
jmp
pop
fmul
int
loop
and
adc
sbb
shrl
push
out
pop
imul
lcall
sbb
pusha
not
jo
sub
cmp
in
repnz
mov
cmpsb
lock
shll
lea
dec
nop
pop
das
mov
xor
adc
or
scas
lcall
add
jbe
imul
sub
icebp
in
lcall
and
or
mov
xlat
pushf
jae
cld
add
sbb
es
mov
dec
iret
pop
in
repnz
clc
or
xor
and
cmc
mov
sahf
inc
hlt
push
movsl
out
out
sti
lds
mov
jmp
fcoms
adc
dec
jle
adc
or
mov
lret
mov
adc
cld
adc
fs
xor
sub
stos
sub
iret
adc
lret
xor
data16
pop
push
loopne
stos
loop
push
sbb
aas
test
jae
xchg
push
mov
cmpsb
adc
mov
add
pop
stc
ret
ljmp
call
fimuls
mov
xchg
or
pop
int3
pop
fmull
cmp
cs
lcall
pop
jge
les
test
subb
jae
movsl
insl
pushf
test
mov
jge
xchg
lret
lods
rcrb
pop
mov
add
stos
popf
lret
adc
stc
les
inc
add
xchg
dec
push
lahf
inc
mov
fistps
fstpl
push
mov
sbb
push
test
mov
addr16
sar
fdivrs
jae
arpl
adc
ret
scas
and
push
test
push
lea
push
sub
mov
int3
lds
dec
cmp
test
add
cmc
push
inc
add
pop
sbb
mov
call
imul
dec
insl
push
mov
push
pop
pop
loope
out
and
sub
mov
jae
lret
mov
mov
in
cmp
dec
sbbb
cmp
aam
insl
mov
xchg
mov
mov
ret
movsb
jecxz
xlat
pop
out
mov
outsb
gs
loop
incb
cmp
sbb
jl
sbb
in
mov
outsb
ss
lret
lds
dec
adc
jae
mov
aad
xchg
sbb
stc
rcll
jno
xchg
rep
mov
push
loop
ficomps
jo
lea
push
push
aas
insb
jbe
ret
fs
cs
ss
pushf
and
xor
dec
cmpsb
sbb
fisttps
out
cmc
or
sbb
mov
adc
add
out
xchg
cltd
mov
ret
in
sub
or
push
out
xchg
ret
popa
mov
push
sub
lods
mov
dec
xor
mov
mov
fs
and
cli
push
gs
push
mov
scas
out
xchg
ss
test
leave
jge
pop
inc
sahf
adcl
push
jp
nop
mov
and
je
mov
gs
nop
adc
jg
arpl
inc
fistl
sub
push
das
or
jb
shl
inc
outsb
enter
mov
int
lret
pop
int
cwtl
out
mov
cmpsb
cmpb
scas
xchg
cmc
mov
stc
jnp
cmpsl
loop
push
or
loop
out
outsl
nop
push
cmp
out
out
insb
leave
mov
lret
lods
xchg
icebp
cmc
hlt
lret
or
imul
sbbl
rolb
icebp
icebp
or
inc
push
mov
dec
call
add
fs
jecxz
add
mov
sbb
leave
dec
cs
inc
and
mov
xchg
je
cmpsb
mov
inc
lds
sub
clc
cld
xchg
into
cli
int3
xchg
xchg
cmp
xchg
mov
outsl
add
mov
fnstenv
adc
out
out
clc
shll
js
stos
xor
push
mov
push
and
mov
jae
pushf
push
pop
in
add
jb
test
inc
fbld
and
js
jl
dec
push
push
adc
test
sbb
loope
mov
pop
lcall
adc
jb
popl
scas
popa
es
add
add
mov
les
mov
pop
cmp
sbb
jge
add
xchg
cltd
or
enter
mov
add
test
lds
sub
mov
and
jb
addl
xchg
out
push
ret
outsl
push
decb
shlb
cmpsb
inc
iret
fstpl
dec
in
push
mov
imul
mov
pusha
dec
xchg
adcl
pop
lcall
and
lret
adc
std
xchg
js
movsl
xor
push
sbb
outsb
inc
mov
bound
mov
movsb
stc
out
in
dec
cmp
imul
push
fstpt
push
mov
and
xor
xchg
and
inc
outsb
sub
sub
fmull
jnp
xor
jmp
aaa
cmp
push
pop
mov
or
out
dec
or
or
push
das
in
add
loope
sbbb
mov
sub
sbb
lds
and
shl
aad
or
mov
pop
lods
xlat
das
cwtl
hlt
push
xlat
out
sbb
push
rorb
jmp
pop
pop
push
lock
mov
cmpb
inc
xchg
xor
push
test
stos
cmpsb
bound
sbb
inc
fbstp
cmp
mov
sub
dec
cmp
pusha
push
call
dec
sub
push
insb
pop
mov
aas
add
add
and
clc
dec
mov
bound
subb
mov
dec
insl
or
or
ss
int3
pop
lea
jbe
int
jns
push
lret
popf
stos
imul
imul
sbb
jp
adc
mov
xor
ja
inc
sbb
int3
push
addr16
dec
mov
lea
repz
cmpb
push
mov
dec
inc
inc
rcll
mov
fstps
inc
popa
ret
dec
incb
add
pop
mov
adc
aam
fwait
and
into
xor
adc
push
push
fs
add
xor
aam
jmp
out
ss
ficoml
fadd
mov
sbb
hlt
out
or
lret
xchg
fildl
pop
mov
mov
icebp
inc
pop
ja
jnp
jmp
push
pop
fidivs
out
cli
cmpsl
and
pop
ret
or
jmp
jae
pop
subl
mov
sahf
stos
and
ljmp
rclb
lahf
pop
iret
repnz
inc
adc
push
sub
icebp
stc
mov
jl
popl
lcall
notl
xchg
loope
sbb
fdiv
adc
xchg
push
nop
push
mov
jg
popa
cwtl
aam
insl
pop
repz
loope
mov
es
fsub
add
lds
and
push
jle
inc
adc
sub
jo
xchg
push
cld
leave
xchg
xor
loop
icebp
and
jge
mov
test
scas
packssdw
hlt
mov
inc
mov
xchg
movsl
fnsave
pop
and
jp
rcr
xchg
pusha
jl
movsb
test
adc
xchg
sbb
popf
mov
arpl
lds
std
ljmp
lcall
xor
pop
mov
jg
sub
and
or
loope
stos
mov
in
shl
xchg
or
scas
pop
xchg
movzbl
xchg
dec
mov
pop
pop
jp
inc
out
daa
in
movsb
sti
add
lods
pusha
cmp
adc
mov
loopne
lock
jne
inc
or
dec
pop
mov
lock
xchg
lret
cmp
mov
scas
dec
xor
movsb
gs
sub
insl
test
xor
orb
divb
push
xor
adc
sbb
aas
ljmp
add
out
or
lret
repnz
or
and
test
int3
and
pop
lret
push
mov
add
mov
sbb
cmpsb
jns
sub
and
pop
dec
mov
rorb
iret
sub
adc
pop
dec
mov
repz
stos
int
jne
mov
xor
mov
ficoms
stc
cmp
sbb
xor
dec
mov
xchg
lock
bound
jno
sahf
stc
dec
sbb
mov
rol
pop
fldcw
xchg
cmp
cmp
mov
inc
xchg
cld
loope
testl
subb
and
jne
add
outsl
push
sub
int3
mov
xlat
fcmovnbe
movsb
inc
insl
xchg
bound
cs
mov
insb
paddusw
mov
xor
xorb
stos
sub
clc
popa
clc
stc
rcrb
test
xlat
int3
sbb
pop
xchg
fs
dec
ss
add
mov
jmp
sti
xor
mov
lods
push
call
jno
sahf
stos
sarb
push
in
rcrb
bound
lcall
mov
scas
dec
lcall
insb
jae
lds
cmpsl
xchg
pop
cmpsl
repnz
out
das
sbb
add
add
pop
mov
in
shll
jae
in
xchg
fcmovu
mov
mov
mov
repnz
pop
stos
dec
xchg
mov
data16
mov
jecxz
mov
mov
aaa
pop
inc
bound
xor
ds
dec
mov
push
mov
cmp
test
add
dec
jg
popf
ja
mov
mov
sbb
aam
pop
les
sahf
lods
cwtl
push
and
mov
pop
cmp
dec
aaa
out
punpckhbw
ret
popl
loope
xor
gs
pop
ret
hlt
push
push
aam
sub
subb
sbb
or
movsl
ljmp
xchg
movsl
adc
fdivl
push
filds
arpl
arpl
adc
mov
subl
xchg
or
mov
push
pop
popf
clc
sahf
cmc
cli
mov
or
sahf
push
in
mov
xchg
push
mov
pop
popf
xchg
and
divl
xor
cmpsb
test
and
sub
dec
lret
sbb
movsl
pop
fdivl
in
inc
pop
movsl
gs
ja
sbb
dec
push
repnz
jle
ds
pop
dec
into
inc
pop
fstl
out
mov
push
push
fcomps
int3
ds
addr16
mov
stos
or
dec
repz
add
cmp
xor
sub
or
inc
fstpt
dec
pusha
outsl
aad
or
cltd
enter
loop
mov
bound
lahf
xor
aam
cmp
push
mov
scas
into
sbbb
sub
loopne
jnp
scas
sub
mov
cmp
js
ficompl
call
fwait
mov
pop
mov
pop
cmp
cs
jb
imul
mov
insb
sbb
inc
or
scas
lds
loopne
je
mov
xchg
scas
inc
push
cmp
inc
push
dec
push
outsl
or
dec
out
js
mov
por
dec
fisttpl
daa
jp
pusha
and
and
mov
or
aad
fidivs
mov
movsb
fstps
cmp
fdivr
dec
cmp
int3
inc
fwait
or
add
insb
pop
sbb
xor
out
leave
lret
push
sti
aas
adc
pop
inc
in
ror
mov
and
sub
pop
insb
or
sub
sbbb
in
cmpsl
out
pop
xor
mov
sbb
cmpsl
add
pop
outsl
mov
dec
push
mov
scas
mov
xlat
pop
or
fisubrs
sahf
pop
adc
and
repz
test
pop
jl
inc
insb
adcl
mov
clc
xor
pop
jmp
sti
loop
pop
cmp
test
cmpsb
sbb
out
scas
push
mov
push
xchg
lods
pop
add
push
xchg
je
test
pop
into
mov
and
jbe
dec
push
cmc
das
iret
movsl
test
push
enter
and
idiv
fidivrl
jo
bound
xchg
push
mov
mov
pop
mov
sbb
jle
ss
mov
jg
js
jle
dec
pop
jns
loop
stos
xchg
outsb
repnz
mov
sar
ljmp
out
add
jnp
repnz
add
shlb
dec
mov
data16
ficomps
xchg
xorl
scas
test
pop
xor
fxch
push
andb
mov
enter
data16
mov
outsb
xlat
popa
aad
or
in
popa
shr
rclb
imul
movsb
fnstenv
cltd
jbe
xchg
cwtl
fistpll
cld
mov
inc
stos
fs
inc
int3
or
cli
dec
jno
mov
int
push
mov
rcrl
insb
adc
pop
xor
fstpl
pop
push
sahf
icebp
out
xchg
pusha
xor
fsts
jge
or
xlat
lcall
fnstenv
mov
data16
mov
add
inc
mov
add
fsts
mov
mov
loopne
repnz
mov
icebp
mov
ret
dec
add
js
inc
nop
orl
out
rep
insb
rcl
out
popl
stc
sub
outsb
cltd
xorb
jecxz
inc
mov
clc
cmp
cmp
cld
cmp
push
test
sub
int
fs
dec
sarb
jb
xchg
cmp
push
rolb
and
or
sbb
xor
or
inc
movsl
push
cwtl
lret
mov
imul
add
add
cmp
mov
cmp
jns
pop
fnstenv
jnp
push
or
lea
and
or
fdivl
ficomps
test
jge
xlat
lods
mov
sti
sbb
sahf
mov
lcall
mov
pop
repz
adc
fldt
and
dec
mov
and
xor
pop
mov
ss
scas
popa
pop
sbb
pop
jns
jns
scas
test
pop
mov
and
cltd
mov
pop
xchg
int3
pop
sbb
lea
fistl
mov
or
or
imul
xchg
lcall
mov
cmp
ficompl
push
mov
jbe
pop
shlb
sbb
sbb
pop
inc
mov
xor
faddp
in
outsb
add
or
push
inc
das
inc
mov
jns
std
dec
or
and
cs
outsb
into
mov
adc
cmp
lods
push
mov
repnz
cmp
dec
shrl
adc
jae
negl
popa
mov
pop
add
jae
movsl
or
cld
pusha
mov
cmp
rorb
mov
sub
popa
into
scas
push
xchg
and
sahf
repnz
scas
pushf
xchg
inc
nop
add
sbb
inc
pop
pop
cld
jmp
xchg
cmp
rcl
dec
ret
adc
pop
lcall
pop
popa
push
inc
test
or
sub
cmp
pop
mov
push
mov
leave
loope
icebp
idivb
xor
and
pop
mov
push
out
dec
movsb
cmp
ret
aam
mov
xor
imul
or
xor
fcomip
stc
js
and
movsl
dec
icebp
addr16
into
mov
xchg
push
jmp
add
xorl
aaa
stc
dec
popa
xorl
bound
das
or
daa
outsb
jmp
ja
out
push
shlb
fbld
jae
inc
fwait
push
shlb
popf
popa
sbb
lcall
outsl
inc
mov
inc
sti
or
sub
inc
inc
add
lea
mov
mov
xor
cwtl
xor
jno
mov
mov
push
xor
test
mov
add
cmp
xor
ljmp
xlat
cld
lea
sbb
pop
xor
adc
xchg
dec
in
xchg
pop
mov
xor
in
pop
push
cld
and
adc
xchg
xor
aad
in
add
rcrl
sub
test
pop
test
jge
aad
out
scas
ret
jge
mov
pushf
cmc
push
test
in
or
jb
mov
xchg
sbb
jge
pop
inc
out
iret
sub
push
inc
add
mov
jb
sub
xor
lds
push
stos
sub
incb
jno
jae
xor
adc
ja
inc
sub
lcall
ret
dec
mov
cmpsl
fstl
popf
cmp
shrl
pop
or
mov
xor
loop
xor
loop
lods
dec
std
addb
popa
js
into
mov
push
js
push
cwtl
imul
test
pop
xchg
jnp
sahf
inc
mov
nop
jns
adc
insb
jns
mov
jmp
cli
incl
in
out
cs
adc
rol
mov
pop
rorb
xchg
nop
fwait
adc
insl
iret
jmp
jo
jae
outsb
sub
test
and
mov
in
lret
int3
subl
mov
inc
jo
int3
dec
xor
cs
inc
add
fldt
inc
mov
cld
iret
cld
sub
das
mov
xchg
stc
dec
cmp
push
aas
inc
ss
sub
push
pavgb
mov
xor
pop
test
xchg
or
idivl
lahf
out
inc
jmp
xlat
pop
mov
pop
mov
dec
cmp
jge
mov
cltd
test
jns
xchg
cli
adc
dec
sar
ja
adc
dec
and
std
mov
js
jae
daa
xchg
in
ret
pop
daa
mov
repz
mov
push
gs
test
dec
inc
sbb
orl
pop
movsb
insb
mov
sbb
sub
lods
jl
xor
pop
jns
pop
cmc
je
pop
xchg
jb
stc
imul
hlt
jecxz
xchg
push
fnsave
divl
sbb
or
outsb
rcrb
test
popa
jns
fisubrs
pop
add
cld
cmp
jno
mov
out
dec
mov
xor
int3
mov
or
mov
mov
decb
out
hlt
dec
leave
testl
scas
jnp
pop
inc
sbb
sub
mov
shl
jge
popf
pushf
add
ret
mov
mov
aaa
pop
es
or
popf
jb
inc
xchg
sbb
sbb
jo
addl
push
cmp
movsl
aaa
sbb
iret
add
inc
lds
add
addr16
adc
mov
jp
or
and
pop
dec
in
cmp
mov
add
add
imul
sub
cltd
ljmp
aas
push
push
sub
mov
and
xor
mov
fcoms
repnz
test
or
pop
jge
mov
cmpsb
and
fs
cmpsw
movsl
cmpsb
add
and
fbld
pop
or
mov
add
in
jo
cmc
int3
ja
clc
fsubrl
loope
int3
pop
mov
dec
or
je
fldenv
lea
xchg
int
pop
call
xchg
adc
add
jns
mov
in
call
pop
xchg
in
sub
stc
mov
inc
sbb
pop
cltd
adc
or
add
xchg
xor
shlb
push
daa
les
sbb
adc
out
cmpb
fcmovbe
sahf
or
dec
push
pop
jle
mov
mov
test
mov
pop
push
pcmpeqw
jmp
add
xor
fsubl
push
aad
stos
sub
decl
incl
es
lods
push
jecxz
push
repz
repnz
mov
sbb
sbb
xlat
mov
mov
jle
xor
out
hlt
and
push
mov
push
aam
push
lods
mov
jl
jno
mov
pop
imul
insb
inc
cli
test
enter
mov
testl
test
ror
addr16
jmp
cwtl
add
fwait
mov
or
or
xchg
xchg
pushf
lods
mov
adc
dec
mov
lds
mov
jns
add
aas
mov
sub
cmp
aad
imul
mov
jno
jle
mov
mov
mov
mov
std
insb
dec
jne
fldcw
sub
sbb
mov
adc
cmpxchg
push
dec
repnz
jmp
fstl
sti
in
or
imul
movsb
and
mov
add
test
pop
lea
add
inc
cld
pusha
mov
dec
push
push
cmp
pop
ljmp
and
xor
cmp
cltd
outsl
cmp
pop
fidivl
inc
fstps
xchg
cltd
push
ret
mov
dec
call
inc
jg
mov
std
std
mov
push
push
sub
mov
dec
ds
inc
jg
sbb
adc
lds
ljmp
into
push
cmp
fmull
and
pop
or
sub
xchg
mov
icebp
jmp
jecxz
mov
lock
dec
mov
rol
sbb
mov
push
sbb
loopne
sbb
inc
mov
imul
dec
and
and
mov
mov
ds
out
pop
mov
dec
jecxz
sub
jbe
mov
push
pop
mov
icebp
movsb
cmp
adc
lcall
dec
stos
rcll
cltd
add
bswap
and
jecxz
sub
xchg
cmp
jecxz
and
sbb
in
mov
jle
xor
shll
shl
lcall
loop
fisttpl
dec
mov
out
sub
fwait
push
scas
adc
push
mov
xor
mov
mov
cmpsb
mov
mov
das
stc
jl
adc
jne
mov
es
or
bound
and
add
sbb
jge
sub
movsl
fcmovb
lods
xor
pop
dec
mov
ss
jns
push
test
pop
fwait
lock
push
inc
mov
imul
add
pusha
and
lret
xchg
mov
out
mov
adc
mov
dec
mov
mov
repnz
int3
cmp
adc
xor
push
xor
sbb
std
jmp
xchg
shrl
sbb
mov
jb
out
js
fs
mov
arpl
cld
pushf
xor
sub
ljmp
pop
insl
adc
orb
pop
pop
pop
sbb
dec
xchg
xchg
adc
cmp
sbbl
sub
inc
xchg
and
imul
adc
mov
xor
or
mov
inc
or
enter
mov
cltd
jge
or
cmp
out
xchg
sbb
data16
xlat
and
ja
gs
adc
mov
repz
mov
cmp
sarb
jno
iret
jo
pusha
inc
in
jmp
movsb
jo
iret
ret
jne
sub
outsb
repz
lds
xchg
cmc
aas
or
push
mov
cwtl
xchg
mov
fmuls
mov
gs
xchg
jle
sub
outsb
pop
fisubrl
push
negb
sahf
mov
test
pop
xor
push
xor
cltd
pop
push
push
popf
cmp
xor
push
sub
clc
xchg
adc
push
js
mov
pushf
mov
sti
mov
xor
jge
mov
push
push
inc
dec
lret
leave
and
push
mov
in
jl
push
cld
test
fsubrs
push
loope
xchg
bound
andb
fxch
dec
cs
pop
cmpsl
xchg
xor
and
test
or
push
cltd
cmp
lods
mov
xor
enter
out
mov
pop
andb
repnz
xor
cwtl
add
lret
negl
outsl
pusha
clc
fsub
adc
sahf
dec
cmp
ss
call
mov
inc
pop
jle
inc
and
es
ror
jne
fldcw
push
outsl
scas
shlb
mov
jmp
es
jbe
push
dec
fiadds
adc
pushf
mov
aaa
xor
ret
xchg
pop
or
cmp
sahf
jl
stos
xor
mov
inc
imul
je
loopne
fisttpll
scas
pop
mov
daa
fmul
int3
bswap
js
cmp
out
sub
mov
sbb
inc
jecxz
je
xchg
addb
movsb
mov
test
add
bound
xor
sbb
push
in
es
filds
cs
pop
sbb
jne
xsaves
mov
pushf
mov
or
js
ret
popa
in
les
fsts
pop
inc
inc
add
mov
sbb
pushf
addb
mov
jae
outsb
orl
push
popf
mov
neg
dec
clc
iret
xchg
jne
inc
arpl
and
mov
xor
mov
sub
aam
cmp
xchg
mov
ss
mov
jle
mov
lods
lea
cmpsb
xor
gs
fnsave
in
mov
xor
cmpsb
xchg
dec
imul
aas
test
pop
cmp
mov
or
inc
fildl
mov
mov
dec
push
xchg
add
mul
int3
inc
dec
mov
lods
mov
or
or
test
mov
jb
imul
or
adc
fs
jge
sub
mov
pop
sbb
push
sbbl
addps
sub
lds
inc
mov
dec
add
add
and
push
mov
mov
push
sub
or
ds
scas
aad
incb
jecxz
and
mov
sbb
mov
mov
test
fidivrs
fucomip
daa
sbb
push
std
adc
mov
dec
xlat
or
rolb
out
ret
jg
flds
push
sbb
xchg
pop
and
add
and
cmp
out
dec
jo
sar
cmpsb
mov
dec
dec
push
int3
push
shl
lcall
push
jo
lcall
scas
fcomps
daa
mov
pop
lock
js
out
and
int3
inc
in
stos
aaa
sbb
std
and
push
mov
jg
leave
jl
outsb
dec
insb
int3
test
push
xor
mov
ret
inc
sbb
aad
daa
mov
sbb
inc
imul
shl
test
mov
cmp
xor
push
pop
das
push
sub
xor
or
sti
push
lret
imul
pop
xor
fs
mov
out
loop
lret
test
movsl
push
loop
nop
xor
daa
jge
and
add
hlt
in
test
or
push
lea
dec
orl
mov
mov
dec
icebp
sbb
test
jbe
icebp
inc
addb
mov
push
pusha
lea
mov
in
cmp
int
sti
loop
outsb
fistpll
test
stc
push
testb
inc
js
ja
sub
and
stos
cmp
ja
inc
sahf
pop
mov
jl
repz
das
and
fwait
lret
mov
add
stos
addb
or
es
rcrl
jae
movsb
ljmp
dec
out
rol
out
and
sbb
dec
leave
lret
loop,pn
jg
dec
pop
das
or
clc
sub
sti
xchg
sub
ret
fistpll
iret
adc
jne
xorl
or
pop
mov
mov
xlat
outsb
pop
xorl
push
fwait
dec
shl
cmpsb
fwait
and
mov
ss
mov
icebp
sbb
nop
xchg
xor
mov
adc
push
ds
rcrl
daa
add
clc
dec
fbld
push
or
inc
cmpsb
popf
ret
mov
dec
call
inc
mov
test
in
cmp
mov
mov
add
xchg
ret
or
push
sub
sarl
mov
and
inc
push
arpl
subb
aad
jecxz
xchg
iret
adc
cmp
cmp
sbb
icebp
push
push
adc
xor
pusha
sbb
and
jae
mov
popf
or
nop
mov
mov
dec
cmp
mov
testl
popa
jg
ret
ret
mov
into
fbstp
mov
push
fists
outsb
loopne
pop
add
fstps
push
xchg
xor
ss
mov
movsb
inc
jnp
imulb
out
dec
insl
fs
subb
imul
jbe
sbb
test
vxorps
mov
and
scas
cltd
loopne
mov
lcall
cltd
xlat
inc
push
adc
adc
push
sbb
pop
fwait
dec
mov
push
repnz
add
aaa
je
dec
lods
cmp
mov
xor
iret
shll
aad
in
bound
mov
sub
push
inc
js
mov
sbb
jge
adc
test
inc
pushf
clc
in
clc
lods
push
pop
pop
out
loopne
adc
xchg
pop
jb
adc
aam
cmp
mov
cs
and
and
or
adc
jae
mov
daa
sub
icebp
adc
push
mov
add
push
mov
or
sarl
adc
cmpsl
pop
push
aam
imul
cmpsl
fcmove
mov
dec
stos
mov
int3
cmp
iret
jp
mov
add
mov
dec
dec
mov
cwtl
push
imul
and
nop
jmp
mov
lret
sbb
into
jmp
test
lods
out
dec
adc
jnp
pushf
mov
pop
addr16
jmp
jmp
mov
je
xor
adc
dec
jl
jecxz
xor
mov
inc
sti
mov
je
jnp
gs
mov
daa
fdivrs
dec
mov
in
or
cmp
leave
ret
and
or
mov
es
frstor
add
push
inc
jne
and
hlt
fs
mov
ds
ss
mov
ja
push
fwait
lock
jmp
push
adc
scas
sub
cmp
shlb
mov
insl
jb,pt
test
in
cmp
aad
mov
cmp
cmp
test
jnp
jl
pop
les
or
addr16
int
and
das
xlat
lods
mov
jge
cmc
in
rcrl
push
mov
push
mov
pop
mov
in
pop
push
les
dec
imul
in
pushf
cmp
dec
push
hlt
loope
aam
push
xlat
js
or
push
jecxz
fildl
cmpsl
cmp
pop
mov
push
repnz
out
ljmp
pop
mov
mov
mov
push
mov
lcall
pop
sbb
scas
je
in
daa
and
shlb
lods
add
test
mov
rol
sbb
scas
adc
ret
xor
sub
outsb
mov
jne
ja
push
loope
sub
jge
cmpsl
sub
shrl
sti
jp
xor
dec
dec
cmc
loop
lds
xchg
mov
aas
test
push
ficompl
les
sub
cmp
add
add
leave
leave
jo
out
inc
mov
push
dec
push
call
fnsave
push
test
dec
mov
ret
imul
push
and
sub
ds
lods
and
add
mov
mov
lds
jns
movsl
lds
push
xchg
test
jnp
int
adc
sbb
dec
adc
mov
repnz
stos
int
xchg
imul
call
cmp
pushf
lret
mov
jecxz
clc
pusha
mov
ret
xchg
stos
inc
movl
stos
pop
mov
cmpsb
cmp
aas
sbb
cmp
inc
lock
aad
int
es
test
outsb
push
inc
insl
adc
inc
js
push
or
push
jmp
into
push
sahf
stos
add
jge
jno
mov
les
push
xor
bound
sbb
jl
or
sahf
lret
insb
adc
or
fdivl
in
xlat
test
jl
pop
or
test
push
subb
lock
and
cmpsb
fdivrl
dec
nop
in
pop
xchg
test
or
in
mov
dec
cs
ja
sbb
push
adc
pop
adc
add
xchg
cmp
shlb
loope
aam
or
push
add
daa
test
popf
ds
inc
lds
gs
and
add
stc
enter
adc
test
sub
fimuls
xchg
jmp
outsb
xchg
out
addb
mov
in
pop
cmpsl
mov
daa
movsl
sbb
fnstenv
add
add
xchg
pop
xor
cmpl
xlat
inc
mov
shr
pop
mov
mov
and
pushf
inc
insb
pop
and
out
ljmp
and
pop
enter
popf
cli
mov
std
int3
iret
xchg
push
push
mov
aaa
nop
push
fwait
vmovd
pop
adc
icebp
sub
bound
sbb
xor
pop
bound
pop
in
mov
ficompl
add
mov
dec
jbe
or
cmp
in
or
fucom
jl
ficompl
test
hlt
test
mov
icebp
and
lahf
pop
add
mov
jnp
enter
movl
push
pushl
adc
sub
das
out
xchg
xchg
mov
inc
fsub
and
cltd
mov
mov
mov
xor
mov
jo
pop
mov
mov
gs
int
lods
out
scas
mov
xor
andl
xchg
es
jns
test
mov
lods
xor
cmp
fstl
in
mov
push
pop
aad
push
and
sbb
inc
cmpsb
cmpsl
arpl
mov
mov
xchg
sahf
loop
stos
or
aam
test
pop
and
jmp
or
jbe
jbe
pop
insl
mov
outsl
loop
xor
insb
add
mov
out
idivl
sub
dec
std
add
pop
dec
xchg
mov
cmp
jno
pop
push
xchg
jo
cmp
and
ljmp
sub
dec
jle
ret
xchg
pop
int3
gs
inc
stos
rorl
fdivl
fidivrs
hlt
in
xchg
mov
cwtl
lods
std
jp
pop
psrad
or
cs
test
les
shr
decl
lea
jg
add
pusha
dec
out
fidivl
divb
mov
xchg
test
mov
movsl
pop
push
fwait
mov
mov
pop
push
or
adc
mov
sub
adc
mov
fcompl
xchg
sub
popa
sbb
test
enter
scas
vpshaw
jg
cmp
fidivl
les
xor
pop
dec
mov
movsl
ljmp
and
mov
add
sbb
fnsaves
sub
sbbl
cmp
ljmp
push
insl
add
push
lock
cmp
sbb
stos
test
mov
and
dec
les
clc
cmp
testl
push
std
xchg
xchg
inc
xor
pop
shlb
mov
outsl
out
and
enter
xor
notl
mov
cmp
sub
pop
cmpsl
test
std
dec
sub
js
inc
addr16
sub
into
xchg
push
stos
lret
shl
add
inc
sub
daa
or
fistpl
cmpsb
pop
cwtl
jb
sbb
ds
scas
or
jle
push
xor
push
push
lea
inc
cmpsb
dec
adc
adc
js
nop
test
mov
out
or
jg
lret
lret
js
cmp
inc
lods
adc
ret
lret
ret
pusha
fsubs
insl
mov
stc
lret
jecxz
adc
push
icebp
arpl
iret
bound
in
inc
out
cmp
xchg
or
mov
mov
pop
ret
in
jecxz
inc
add
sub
add
adc
out
out
or
nop
mov
in
lcall
jnp
hlt
cld
lret
sub
repz
mov
xchg
push
repz
ljmp
xchg
cmp
xchg
into
iret
test
aad
jmp
mov
xor
dec
mov
stc
or
jl
push
adc
mov
xchg
mov
mov
or
mov
mov
inc
cmp
movsl
xor
mov
or
jmp
loop
sub
jnp
mov
mov
lds
dec
xor
cmp
iret
pop
arpl
lret
sub
cwtl
pop
xchg
test
pop
movsb
xchg
pop
cld
and
jne
mov
mov
adc
sbb
ret
lret
int
and
push
pop
ja
adc
insl
dec
cwtl
adc
ret
jns
mov
sbb
xor
pop
fstps
or
fsqrt
add
stos
ficompl
fldenv
ds
insl
daa
push
cwtl
and
push
arpl
dec
loopne
in
pop
add
test
mov
aad
xchg
out
jmp
add
call
mov
arpl
lcall
add
test
jns
test
xor
fs
xchg
mov
fnstcw
sub
dec
or
out
lods
mov
add
lret
ds
xor
lods
enter
push
and
push
pushf
sbb
adc
add
scas
aam
lret
sahf
les
flds
adc
ja
es
ret
in
addr16
pop
insl
jb
and
cmp
sarb
dec
and
ret
arpl
jb
es
subl
and
fstps
xor
mov
add
clc
jmp
inc
dec
shll
test
jl
or
mov
push
dec
push
cmc
ss
fbstp
inc
ljmp
inc
pushl
mov
addr16
xchg
mov
notb
jl
inc
sbb
out
jmp
les
sbb
or
test
sti
dec
test
movsl
jge
xchg
and
dec
and
mulb
int3
arpl
ds
xchg
lock
dec
test
dec
fildl
cmc
out
subb
cltd
popa
rcr
and
cmc
cmpsl
jne
mulb
xor
xor
sub
jno
xchg
xchg
gs
out
xchg
push
pop
aaa
mov
pop
cs
cmpsl
mov
mov
repnz
shlb
add
jmp
orl
je
test
cmp
mov
jbe
lahf
jns
push
scas
imul
sub
sub
pop
lds
ljmp
cmpsl
push
mov
loopne
pushf
inc
sbb
test
mov
sbb
lods
xchg
pop
jecxz
scas
mov
or
sahf
incb
js
in
cs
movsl
pop
xchg
push
mov
mov
mov
add
add
jb
popa
outsb
xor
sbb
and
dec
fldcw
cmc
lock
test
xlat
sbb
inc
in
test
cmp
jmp
mov
inc
pop
jnp
lock
pushf
sbb
aaa
fidivrs
cmp
or
push
cltd
and
push
cmpsl
lahf
push
add
jmp
jnp
jne
push
mov
in
das
mov
or
dec
cmp
and
stos
cmp
mov
push
rcll
pop
adc
rolb
bound
jl
popf
lahf
fistpl
push
or
test
lds
xlat
leave
daa
pop
push
les
cld
sbbb
rol
movsl
repz
les
push
or
imul
mov
repz
loopne
mov
sub
popfw
cmp
ss
adcb
adc
pop
adc
jo
push
pop
sbb
or
int3
xor
pop
andb
sbb
xor
and
lcall
mov
jmp
lea
and
xor
push
adc
mov
push
and
daa
out
clc
sbb
mov
leave
insb
jbe
sub
jne
shl
sub
cmp
call
shl
jge
imul
sub
aad
mov
adc
sub
xor
lahf
inc
pop
lahf
andb
jns
push
int
mov
mov
pop
aad
and
push
sub
push
adc
add
ds
push
push
imul
pop
roll
in
sbb
or
cmp
mov
mov
adc
adc
dec
ret
cmp
dec
xchg
push
xor
lock
imulb
scas
out
xchg
addr16
and
pushf
jno
adc
mov
push
rep
sbb
cwtl
adcb
mov
ja
ljmp
pop
lods
js
adc
sub
out
rorb
fcoml
popf
shrl
sub
out
mov
jp
mov
adcl
xchg
pop
aas
mov
xchg
icebp
lods
and
cmpsb
xor
push
or
xor
xchg
or
fldt
mov
and
jb
mov
mov
test
ja
fcmovnbe
add
testb
shll
jne
pop
mov
clc
dec
inc
cmpsl
rcrb
jg
lret
add
stos
aam
pop
add
jp
adcl
outsb
push
out
pop
fstl
cmp
xor
sahf
mov
popf
stos
mov
pop
add
mov
orl
mul
pop
es
lods
and
cmp
sub
int3
test
adc
cmpsb
xchg
jl
jns
flds
cmpsl
sub
ljmp
mov
mov
and
push
lret
cld
add
push
rorb
icebp
jno
cs
aad
jno
insb
add
push
and
add
clc
jmp
gs
mov
inc
dec
sub
and
cltd
and
and
lods
call
or
mov
dec
inc
inc
in
push
dec
add
ja
sub
mov
push
jg
les
mov
mov
xor
dec
sbb
sub
adc
xor
cltd
movsb
popf
add
dec
js
repz
mov
sti
ja
decb
mov
mov
mov
xchg
les
mov
xor
icebp
ds
ds
int
xchg
aaa
inc
insb
stc
or
and
popf
pop
sub
cmpsl
test
outsb
jge
ljmp
pop
dec
or
inc
outsb
jo
in
mov
idivl
ljmp
push
pop
mov
pusha
inc
jle
and
fldt
cmpsl
sbb
pop
nop
and
dec
pop
push
test
add
mov
out
cld
inc
push
jge
out
inc
es
ret
js
ret
mov
gs
jle
mov
mov
add
jnp
imul
push
shrb
pop
aam
or
js
jle
dec
sub
jl
adc
movsb
hlt
sbbb
int
iret
les
jle
adc
cli
aam
lods
mov
sbb
and
pop
ljmp
or
lret
cmp
dec
test
mov
insl
mov
ret
hlt
leave
cmp
xor
sub
xor
mov
sbb
mov
push
cmpsl
sbb
xchg
pop
and
in
add
in
scas
das
arpl
xlat
sar
mov
shlb
out
das
popf
in
loop
rcrb
xor
icebp
lds
push
cmp
jo
pop
dec
std
push
dec
push
stos
stos
loop
sbb
xchg
mov
and
push
lret
popa
sub
push
push
pop
mov
sub
inc
js,pn
push
loop
mov
mov
jp
sub
sub
mov
and
xchg
in
add
vpmuludq
inc
inc
cli
adc
pop
js
xchg
shll
in
daa
ret
lret
jg
cmp
test
stos
and
mov
pushf
lods
and
adc
fldt
adcl
jne
inc
out
pop
mov
clc
imul
jle
cmp
xor
call
les
or
jns
jmp
dec
adc
jg
sarl
add
sub
xor
fwait
aam
xchg
je
pop
cs
addl
add
dec
addb
or
add
lea
cmp
dec
loopne
pushf
mov
sub
xor
int3
test
dec
add
or
xchg
out
push
mov
leave
testb
adc
pushf
int
xchg
int3
shll
movsb
outsb
mov
cmpsb
sub
cmpb
dec
jmp
icebp
idivb
cmp
popf
insb
loop
inc
negb
jge
imul
fldt
mov
lods
fnstsw
pop
fidivrs
xchg
addb
cli
cld
and
inc
addr16
cwtl
ror
jle
movzbl
inc
add
inc
fst
pop
bound
mov
and
shrb
add
stc
lret
xor
cmp
lea
scas
and
jmp
daa
into
fwait
nop
das
scas
jp
jmp
dec
sbb
lret
test
and
cmp
mov
xchg
movsl
xchg
ret
sbb
ret
sbb
xchg
decl
loopne
into
les
ja
cs
fmull
mov
lret
pop
adc
stos
cld
jnp
mov
xchg
aam
data16
daa
adc
pushf
sbbb
mov
xchg
cmp
fwait
je
add
mov
xchg
movsl
xchg
pop
sub
xlat
ret
shl
fmul
pop
adc
lods
jge
xchg
loop
nop
and
inc
dec
mov
in
jbe
rcrb
lret
mov
sahf
push
icebp
adc
aam
int3
loope
arpl
lods
imul
xchg
testb
arpl
das
sub
cmp
aad
pop
cmpb
cmpsl
shll
sbb
in
je
push
or
mov
out
lock
cld
ds
jb
mov
subl
testl
js
loopne
cltd
jecxz
daa
out
dec
push
lahf
jo
pop
lcall
cmp
mov
jp
mov
jo
ja
sbb
dec
stos
nop
push
flds
lock
popa
push
push
or
xor
and
jecxz
fldt
inc
cld
outsb
fisubrl
mov
dec
mov
xchg
pop
lock
or
cwtl
add
lock
cmp
mov
xchg
xchg
add
push
addr16
pop
lods
dec
sarb
and
pop
and
mov
dec
xchg
ret
inc
scas
sub
iret
lds
cwtl
xchg
add
inc
mov
mov
sub
sub
pop
std
iret
ljmp
cwtl
in
mov
es
outsb
hlt
jecxz
sbb
lods
jmp
imul
xor
fs
aas
je
fsubl
sub
cmp
lret
lock
xor
sub
js
orl
pusha
cltd
loope
aaa
out
pop
push
mov
cs
add
stos
xchg
loop
mov
cmc
mov
xchg
lea
enter
inc
out
rcl
adc
stos
sbb
in
data16
js
mov
xor
add
popa
bound
xchg
jae
test
pop
fmulp
xor
mov
les
gs
cwtl
pop
mov
mov
push
sbb
xchg
jecxz
faddp
pop
add
outsl
shlb
scas
mov
aam
sbb
insb
imul
pop
popa
cltd
inc
popf
dec
push
adc
mov
jbe
callw
mov
adc
lret
loope
inc
mov
pop
jnp
push
stos
and
dec
dec
ret
add
aaa
movsb
cmp
addr16
and
mov
rcrl
push
ret
mov
sub
cli
push
nop
push
addr16
push
leave
fwait
aad
fdivl
ds
jae
jno
mov
jns
ds
jae
enter
adc
pop
xor
out
out
pushf
inc
cltd
mov
sbb
adc
mov
inc
jnp
xchg
mov
push
call
mov
movsb
bound
rorb
dec
inc
lods
aam
into
shl
sub
ret
inc
mov
adc
push
mov
pusha
xchg
in
aam
icebp
jmp
es
aam
ss
shrl
pop
and
inc
push
ret
push
into
sar
fidivrl
pushf
outsb
push
adc
leave
pop
sub
sbb
enter
jg
stos
jecxz
add
addr16
xchg
mov
cli
inc
jmp
popa
aas
xchg
xchg
sti
scas
and
push
jbe
rcl
hlt
jbe
xchg
add
cli
outsb
push
jb
imul
xchg
ds
ret
repz
sub
add
sub
dec
mov
adc
test
cld
sti
cmp
mov
out
xchg
inc
jne
push
add
cmp
jle
mov
and
aas
jle
fstpt
push
lret
divb
out
cld
inc
ret
repnz
sub
dec
jg
push
jb
jg
mov
popf
inc
orb
inc
add
push
clc
ja
jnp
inc
sub
cmp
lcall
pop
in
and
push
fwait
hlt
mov
imul
aad
shr
outsb
shlb
mov
fs
or
cmp
mov
mov
mov
cmc
imul
ret
add
sub
xor
mov
pop
cmpsb
cmp
ret
jnp
call
mov
push
nop
jbe
mov
push
mov
in
sahf
jg
shll
int3
fwait
add
js
sbb
mov
add
dec
cmp
and
push
cmp
cmp
sub
add
rcrl
xor
push
loopne
popf
and
cs
mov
pop
xchg
test
movsl
xchg
lock
lods
aaa
lret
sbb
arpl
jge
loop
mov
push
cli
inc
popa
pop
sub
je
loopne
jl
add
and
cmp
sbb
dec
inc
loopne
nopl
sti
clc
adc
ds
lods
or
fs
scas
xor
shl
mov
adcb
mov
mov
adc
cs
int3
xchg
jge
mov
roll
aad
mov
sub
mov
push
jl
lret
ss
mov
enter
je
pop
dec
insl
pop
pop
jle
call
lds
das
adc
mov
out
lods
sub
es
mov
lock
cmpsl
stos
push
dec
into
aaa
mov
ret
dec
shlb
lods
adc
and
inc
imul
ja
xor
sbb
pop
or
mov
mov
ret
popa
add
loope
aaa
loopne
adc
test
sbb
arpl
scas
imul
cli
in
jae
cmp
iret
in
les
mov
sub
int3
mov
and
pop
aas
sbb
fadd
or
mov
mov
rclb
sub
insb
and
push
inc
inc
dec
push
sbb
mov
or
nop
fadd
dec
xchg
mov
jecxz
or
shrl
stos
sbb
sub
push
cmpsl
pop
push
inc
cld
imul
rorb
sar
ljmp
push
cs
mov
std
clc
hlt
out
add
inc
mov
fst
pop
mov
frstor
std
dec
sub
jp
add
out
cmpsl
fwait
push
mov
jp
data16
dec
mov
popl
pop
pop
adc
push
out
mov
scas
fbstp
mov
stos
push
push
cld
out
inc
jno
scas
fs
gs
pop
mov
cmp
pop
pop
insb
ja
dec
inc
mov
add
mov
cmp
adc
in
pop
in
jo
xchg
ror
and
mov
popa
daa
mov
and
scas
xor
test
pusha
cmp
jb
data16
lock
jle
sub
iret
arpl
shll
sub
jmp
add
sub
clc
push
mov
aam
stos
call
and
pop
pavgw
mov
cmpb
sbbl
or
sub
or
adc
mov
jg
push
mov
push
lcall
or
out
fidivrl
push
jmp
addb
shll
dec
loope
xchg
pop
lods
cmp
sbb
sbb
fildll
push
mov
divl
push
pop
pop
test
cmp
stos
test
mov
sub
nop
movsb
xor
rclb
gs
aaa
loopne
mov
xchg
mov
mov
push
imulb
xchg
and
lret
pop
cmp
mov
lock
pop
ja
subb
les
xor
push
cmp
or
dec
and
push
ret
push
sbb
cli
jge
xor
decb
fcmovu
and
cwtl
lret
inc
lahf
xchg
rcrb
lret
sbb
rcrb
cmp
test
out
cmp
cltd
jl
and
imul
xor
mov
es
outsl
and
hlt
push
sbb
testl
repnz
jne
addr16
rclb
jmp
fsubrs
add
aas
loope
jl
inc
outsl
repnz
pushf
xor
sbb
test
inc
pop
clc
lcall
imul
and
mov
push
in
test
andb
mov
add
ret
rcr
into
pop
ret
fidivl
daa
mov
mov
fildll
mov
and
leave
out
pop
xlat
pop
imul
or
popf
out
sbb
ss
test
push
movsb
test
cmp
pop
cli
sbb
les
and
lcall
movsl
fdivrs
cmc
mov
cmpsb
jne
inc
fs
lret
jae
cmp
sub
cmpl
popf
sbb
or
adcb
fwait
repnz
fincstp
xor
add
nop
movsl
adc
jne
adc
stos
hlt
ret
cs
idivb
adc
aam
cs
xor
clc
pop
aam
lods
lret
scas
mov
mov
or
adc
mov
out
inc
lret
orb
popa
jge
clc
or
and
sarb
push
cmpsb
in
cltd
jne
rclb
out
clc
std
call
call
leave
dec
xor
sub
addl
leave
fisubrs
out
adc
pusha
nop
nop
iret
push
je
pusha
xor
or
add
out
mov
cmpsl
imul
ror
and
and
add
push
loope
neg
add
stos
cmp
xchg
sbb
mov
popa
push
js
cmp
mov
cltd
lcall
pop
cvttps2pi
cmpsb
rolb
inc
adc
push
cmp
hlt
push
cmpl
mov
es
int3
leave
xchg
jmp
sbb
sub
push
push
mov
mov
fcoms
in
xchg
add
xchg
imul
xor
jne
or
sti
pop
imul
fisubrl
sub
ds
test
xchg
pxor
push
mov
ja
loopne
addr16
xchg
jae
cmpsl
dec
insl
xor
sub
dec
lods
hlt
jecxz
jmp
cmp
test
outsl
sbb
or
lret
pop
xchg
xchg
and
jno
sbb
mov
pushw
int
xchg
movsl
or
adc
xchg
ja
dec
arpl
or
lds
xorb
shrl
sbb
push
mov
jne
mov
sbb
mov
iret
cmp
int
mov
and
jno
rorl
pop
or
or
mov
inc
mov
xchg
mov
lds
cli
stc
into
std
and
outsb
iret
lock
cltd
xchg
or
sti
push
push
mov
xorl
ss
fsubs
out
pusha
mov
and
out
cmp
and
js
rcr
mov
stos
xor
cli
aam
out
je
and
aam
rcll
cmp
jl
loopne
lock
sub
popf
push
lds
mov
icebp
dec
test
fidivrs
pop
push
test
mov
add
sub
jp
lret
push
cmp
push
flds
jge
adc
jne
and
pop
gs
and
mov
lcall
sahf
out
in
scas
push
adc
out
icebp
bound
xchg
pop
filds
in
mov
and
leave
mov
xchg
push
bound
and
insb
add
and
leave
pop
mov
push
inc
orl
mov
adc
pop
mov
cltd
aad
dec
loopne
cmpsb
mov
enter
cwtl
pop
frstor
add
icebp
mov
mov
pusha
sahf
xor
dec
xor
jo
arpl
mov
jae
inc
data16
xchg
mov
or
fisttpll
jnp
and
hlt
jecxz
or
cli
cwtl
jb,pt
data16
rorl
inc
and
lret
lods
int3
cmp
mov
popa
in
inc
and
test
not
sub
sqrtps
mov
loope
add
push
mov
xor
cmp
jbe
out
sub
adc
jbe
test
imul
in
xor
out
adc
lods
adcb
push
mov
mov
ret
jne
lcall
mov
in
or
lahf
test
gs
sarl
idivl
fdivs
insb
add
jle
xor
mov
jmp
cmp
xchg
dec
bnd
fdivl
adcl
adc
xor
xchg
pop
adc
std
in
cli
loop
mov
jne
mov
push
jae
sbb
adc
test
mov
insl
test
call
mov
sbb
mov
mov
andl
mov
mov
mul
icebp
sbb
outsb
ret
cmp
mov
movsb
dec
push
clc
sahf
out
and
iret
repnz
out
mov
in
sbb
push
sub
push
jg
push
sub
and
adc
rorl
ds
loopne
jb
inc
out
gs
and
adc
add
out
imul
add
inc
cwtl
mov
mov
test
or
or
push
sbb
les
sub
ja
cmp
mov
xor
push
mov
mov
xor
mov
out
push
jecxz
mov
les
movsb
mov
stos
sbbl
add
xor
sahf
je
fadd
sbb
loope
push
add
neg
ror
mov
fcoml
dec
dec
cmc
and
xor
mov
mov
aaa
pop
clc
or
mov
mov
jmp
or
cmpsl
inc
mov
incl
mov
repz
xor
push
rcr
mov
sub
jp
out
int
and
mov
mov
mov
mov
stos
cmp
pop
mov
in
lods
adc
inc
dec
cmpsl
mov
leave
pop
scas
out
sub
adc
jp
or
ret
jge
mov
ljmp
pop
lcall
jno
clc
or
nop/reserved
ret
pop
shl
mov
in
cmpsl
mov
mov
movsb
scas
or
adc
repz
sbb
int
test
int
cmp
sbb
sub
dec
js
mov
push
add
mov
ss
dec
pop
shlb
clc
out
loop
sti
mov
sarb
cmc
loop
add
pop
movsl
call
ljmp
mov
fidivl
int3
xchg
dec
fisttps
cmp
dec
ds
mov
jnp
outsb
xchg
movsl
ret
into
dec
and
push
jmp
out
fs
cmp
movsl
das
clc
add
fdivrs
jmp
mov
loope
and
out
fld
jne
xlat
add
les
jb
mov
sub
ficoml
push
add
ret
call
jnp
push
sbb
loop
mov
or
mov
lcall
fwait
xchg
sub
mov
stos
test
test
xor
and
lret
jg
insl
pop
pop
ret
notl
pop
ljmp
mov
cmp
sbb
das
xor
ret
mov
mov
mov
mov
in
xorl
fadd
and
iret
cmp
xchg
pop
dec
pusha
push
and
mov
push
jo
movsb
add
test
push
das
lods
or
loop
bound
cs
push
cwtl
ljmp
shr
shrl
das
scas
and
movsb
lret
cltd
adc
pop
dec
cmpl
or
xchg
subl
enter
push
jnp
pop
mov
jmp
jg
dec
dec
cli
add
dec
dec
fstpt
faddl
test
rcr
and
sub
cmp
cli
repz
jnp
jo
fisubs
push
dec
ss
pop
test
dec
adc
mov
aad
ret
sub
jnp
aad
xor
inc
mov
cs
cmpb
pusha
popa
stos
or
jl
mov
mov
sti
cmp
and
daa
and
mov
test
loop
out
xor
pop
xchg
icebp
pushf
dec
xor
add
add
or
lea
or
iret
pop
xchg
cli
movsl
mov
test
lcall
inc
data16
test
adc
xchg
daa
lahf
out
jne
cmpsl
push
dec
and
loopne
mov
jg
sub
cmp
int
jg
iret
cltd
mov
jl
dec
pop
scas
sub
mov
aaa
repz
popa
test
loope
pop
fwait
dec
fmull
push
xlat
movsb
inc
jecxz
mov
mov
dec
shlb
or
sbb
adc
leave
cmpsl
xor
push
add
sbb
shlb
push
pop
sbb
scas
sub
lret
mov
cmp
cmp
lret
out
je
sbb
jg
and
imul
incl
jl
pop
jo
jo
or
fcomi
cmp
stc
mov
dec
pop
pop
or
cli
xchg
insl
insb
dec
lock
pusha
mov
xor
jne
inc
call
imul
call
aam
stc
sbb
aad
mov
filds
ds
in
push
or
out
movsb
jno
ss
arpl
cli
mov
rcll
or
ds
pop
imul
insb
cs
xchg
adc
sub
test
in
into
and
pop
test
cmpl
call
mov
or
icebp
outsl
out
xchg
int
mov
cmc
cmpsl
les
imul
adc
xor
xor
dec
cmp
xor
hlt
pop
dec
insb
mov
into
mov
and
dec
mov
mov
add
bound
dec
stc
movd
mov
adc
cli
imul
fstpl
faddl
sarb
scas
aaa
jmp
std
inc
movsb
sub
inc
idivb
orl
lods
mov
rorb
xchg
repnz
stos
das
shll
ljmp
pop
jg
cmp
outsb
push
lds
nop
jmp
xor
dec
jnp
pop
pushf
sti
mov
lret
add
xchg
jb
cwtl
loopne
loope
jle
ja
xor
stc
les
into
jne
mov
mov
daa
shrl
inc
jo
xchg
jg
inc
addb
jge
das
add
jmp
ret
or
aas
sbb
orb
add
pop
stc
cmp
into
repnz
hlt
mov
pushl
scas
test
mov
and
mov
mov
sub
cld
pop
jl
btc
push
cmp
mov
sbb
cmp
popa
mov
jae
fcmove
or
pop
ljmp
cmp
dec
push
out
xchg
out
test
add
repz
clc
subb
jb
scas
addr16
rcrb
jno
push
jp
mov
enter
xchg
and
clc
mov
add
bound
pop
mov
icebp
cmp
in
mov
push
enter
nop
add
lock
imul
enter
push
push
mov
sub
aad
loop
pop
sub
out
mov
repz
aaa
jmp
xchg
mov
loope
ror
addr16
or
cmp
addl
pusha
push
ret
mov
es
mov
addr16
fmuls
loopne
test
fwait
scas
dec
mov
ljmp
inc
std
out
sub
out
sbb
iret
shrb
shrb
jnp
cmp
outsb
in
cltd
push
std
mov
fbld
dec
lretw
or
loop
rclb
push
inc
add
gs
add
xchg
ror
test
ffree
xor
filds
sub
pushf
fnstenv
jbe
sti
push
addr16
pop
xchg
or
shrl
or
mov
sbb
pop
xchg
je
insl
push
out
sahf
jle
cli
xor
xlat
jne
push
mov
ss
popw
add
testb
enter
pop
inc
cld
xor
fiaddl
push
mov
iret
xor
loop
in
loopne
mov
adc
sarl
je
jae
xchg
je
int3
cld
mulps
lahf
movsl
mov
out
mov
in
jb
jb
out
cmp
insb
sti
cwtl
jge
pop
add
wbinvd
jb
scas
jecxz
and
cltd
and
aad
iret
add
test
scas
loope
fucom
mov
inc
in
xchg
cmc
mov
addr16
xchg
mov
jno
or
sbb
cwtl
jg
nop
push
add
inc
aas
and
cmp
lock
fildl
scas
ljmp
jl
outsb
fndisi(8087
pop
test
push
mov
mov
cmc
mov
test
lock
repz
jne
jo
scas
pop
add
jp
dec
xor
nop
mov
in
xorb
mov
int3
xor
mov
sbb
shrl
std
scas
insl
dec
dec
or
pusha
mov
div
inc
les
out
lods
mov
jecxz
cld
loope
in
stos
icebp
ja
test
push
sbb
sub
sub
xor
inc
ret
lods
notl
and
mov
setl
aad
in
and
jl
cmpsb
ja
hlt
popa
jbe
mov
xor
cmp
jne
xor
lods
ds
and
mulb
jns
sbb
mov
cmc
xchg
pop
pushf
pop
loop
stos
jp
xchg
sbb
cld
es
sbb
push
jmp
shr
pop
add
icebp
movsl
mov
add
cld
inc
push
popa
sarl
arpl
shr
loopne
lahf
mov
mov
jle
nop
movsb
xchg
xor
in
inc
jo
fsts
rorl
adc
daa
jbe
loop
sub
dec
fwait
gs
lret
jb
xor
mov
shlb
add
es
jbe
inc
jnp
and
call
testl
mov
cld
call
mov
cmp
push
es
fs
mov
mov
mov
in
fildl
incb
mov
sbb
inc
mov
mov
add
dec
push
inc
shll
xchg
push
push
mov
fsubl
sub
push
mov
cmp
and
rcll
mov
cmp
xor
pop
push
stos
inc
add
loopne
xorl
push
ror
mov
pushw
mov
and
push
pop
daa
xor
pop
rorb
pop
and
in
fidivrs
lock
pop
out
js
dec
test
pop
add
lock
std
cmovb
adc
mov
add
sub
jnp
pop
insl
test
cmp
arpl
jmp
test
popf
lea
adc
or
bound
jo
ret
dec
pop
fisubs
or
mov
cmpl
bound
inc
jno
inc
les
mov
fwait
popa
xchg
xor
jne
or
dec
mov
mov
adc
push
adc
xchg
out
lcall
sti
mov
in
nop
ss
outsl
ret
stos
jo
fisttpll
adc
fldcw
sbb
dec
jge
shll
or
lret
xlat
jg
stc
jl
adc
cmpsl
mov
sbb
mov
in
pop
test
aam
xor
ret
fcoms
mov
les
push
ret
fisubrs
fsubrl
or
jbe
fisubl
push
aaa
xlat
lods
mov
ret
fists
mov
mov
sti
gs
setg
mov
dec
scas
into
push
mov
cmp
mov
pop
mov
sub
xor
fldl
dec
aad
inc
mov
pop
mov
xor
mov
and
cmc
xchg
xor
lods
mov
imul
out
idivb
or
enter
mov
cmc
push
test
movsl
enter
sbb
jge
mov
es
sub
cmpl
pop
pop
push
cld
stos
repz
pop
enter
jmp
pop
ss
push
or
stos
scas
int3
add
jnp
lret
dec
mov
orb
jnp
adc
sub
xor
and
fnstenv
sbb
loopne
bnd
cmp
pushf
xor
push
lds
xor
xchg
int3
or
dec
add
in
add
insl
xlat
cmpsl
mov
cmp
xor
xchg
xor
lods
out
inc
popa
rclb
cmp
sbb
leave
aad
cmp
xchg
jle
add
bswap
gs
enter
mov
aas
jp
andl
push
mov
lret
add
cs
mov
mov
and
mov
add
lret
arpl
adc
ret
cwtl
mov
out
rcr
jg
in
fldcw
test
loop
mov
xor
cwtl
or
add
inc
dec
test
jb
test
mov
mov
xchg
xchg
pop
sbb
leave
push
lahf
add
jae
push
arpl
cmp
ss
out
lods
lock
mov
push
mov
inc
mov
pop
shlb
sbb
std
divb
inc
dec
es
cmp
fsubl
daa
lcall
xor
out
mov
adc
add
sub
jecxz
out
add
jbe
push
xor
stos
pop
mov
sbb
add
mov
jnp
aaa
add
rcr
jmp
jb
out
adc
call
stos
xchg
outsl
pop
aaa
roll
jbe
and
incl
sub
mov
push
pop
jnp
pop
mov
rclb
cwtl
or
repnz
add
je
lods
sahf
or
leave
sub
leave
xchg
inc
fnstenv
js
fwait
mov
cmc
ljmp
lea
lea
divl
testb
add
push
add
sahf
imul
push
adc
xorb
sahf
sub
mov
push
push
cmp
test
in
pop
cmpsl
movsl
imul
shl
in
scas
mov
pop
xor
jbe
sub
lods
int3
pop
sti
xchg
scas
lods
popa
push
inc
lahf
orb
arpl
call
and
jmp
shl
or
js
cmpsl
adc
mov
adc
xchg
add
cwtl
sbb
imul
mov
jl
mov
cmp
pop
jno
fs
les
pop
pop
push
cmp
add
loopne
sbb
mov
cmp
call
or
mov
and
pop
xor
sub
out
or
lret
mov
mov
das
xlat
mov
cmp
cmc
notb
repnz
movsb
mov
cmp
es
fadds
inc
das
pop
ret
mov
lret
ret
mov
cld
adcl
lea
loopne
jb
scas
shrb
loop
data16
pop
inc
rolb
mov
mov
inc
lahf
sti
in
cmp
or
je
decb
mov
les
push
push
adc
pop
outsl
sbbl
dec
sti
mov
mov
repnz
rclb
sub
jo
jno
pop
icebp
dec
cmp
pop
fiadds
push
or
lret
push
gs
mov
lcall
js
lock
cmp
dec
pop
mov
inc
js
lods
test
subl
cmp
rol
sbb
movsb
ja
movsl
mov
test
cs
sub
scas
sub
into
lcall
add
pop
or
outsl
cwtl
push
mov
negb
or
push
mov
test
out
jmp
cs
orl
xchg
in
roll
lds
mov
push
pop
mov
mov
jge
mov
imul
sub
or
pop
into
outsb
scas
push
add
fcomps
aad
lods
xorb
int
popl
mov
xchg
adc
mov
mov
xor
push
test
lret
adc
mov
stc
in
push
test
bound
dec
cwtl
addr16
addr16
jns
sub
add
mov
repz
adc
imul
hlt
cmpsl
pop
or
and
stos
sahf
orb
outsb
add
ret
cmpb
iret
sarl
into
sbb
xor
mov
push
push
dec
cmp
in
out
ds
jmp
lret
je
jb
outsl
or
sub
jg
sbb
pop
jo
incb
dec
pop
push
int
incl
out
daa
cmp
cmpsl
enter
movsb
cmp
xor
lods
xchg
push
nop
fidivl
mov
and
jns
out
mov
lods
imul
fidivrs
aad
push
test
xchg
icebp
cmpsl
pop
test
divb
inc
rcll
ror
jmp
shl
ret
mov
flds
ficompl
mov
or
pop
pusha
or
add
and
in
push
push
std
mov
and
sbb
adc
xor
xchg
jmp
xchg
dec
ja
cmp
mov
adc
lods
cmp
xchg
jmp
adc
sub
and
add
add
xor
stc
je
test
inc
xchg
mov
addr16
inc
bound
inc
addr16
test
add
add
lret
cmp
adc
out
mov
lea
adc
outsl
adc
fsubl
ret
out
push
mov
cmp
in
insl
mov
lcall
xor
aam
jle
cmpsl
mov
and
in
mov
jg
cli
fs
arpl
iret
or
mov
jp
dec
sarb
mov
pop
mov
pop
add
dec
mov
push
fsubrl
insl
mov
testb
pusha
test
bound
push
inc
mov
and
xorb
hlt
mov
push
or
lahf
jge
mov
sbb
imul
cli
push
sub
xchg
enter
loope
popa
push
adc
cmpsl
push
pop
cli
idivl
lcall
mov
in
or
pop
mov
jb
insl
mov
cmpsl
xor
push
mov
push
sub
repnz
jne
addr16
pop
xchg
xor
scas
pushf
outsb
sbb
out
popa
imul
pop
test
cmp
fnstenv
pop
adc
and
mov
mov
mov
outsb
jb
mov
addl
cmp
or
push
aaa
addb
std
loope
fnstcw
and
pop
cwtl
xchg
decb
mov
ja
sub
lods
jmp
jmp
cmc
addl
dec
sbb
je
sbb
lcall
sti
mov
xor
ret
pop
daa
xchg
jb
fmuls
mov
add
jmp
fisubs
mov
mov
popl
xor
mov
movsb
shlb
fldl
imul
or
push
mov
fimull
mov
inc
fdivs
jge
jns
push
mov
fldenv
rorl
xchg
shll
mov
cmp
xor
jne
aaa
and
icebp
pop
push
push
stc
frstor
jg
jne
out
lcall
outsb
pop
and
adc
enter
jb
inc
dec
es
aam
out
xor
daa
test
pop
outsb
insl
xchg
mov
scas
rcl
xorl
mov
aaa
jnp
test
push
fs
out
cmc
fcomps
idiv
xchg
adc
insl
dec
cmp
push
jae
push
jo,pn
ljmp
call
jl
mov
xchg
in
sbb
lret
mov
and
mov
cmpsb
out
sahf
fs
arpl
es
iret
cmpsb
mov
xor
xchg
add
mov
mov
mov
mov
stos
or
sbb
mov
jae
ret
int3
sbb
xchg
push
xchg
nop
fistpl
xor
movb
std
cwtl
adc
js
ss
pop
xor
sub
xor
sub
mov
outsl
sarl
mov
inc
and
sub
repz
jbe
push
push
inc
add
mov
jmp
xor
stos
xor
ret
mov
mov
jg
cmp
ljmp
adc
sub
mov
dec
jle
movsl
test
xor
ss
frstor
rorl
sub
cltd
inc
repz
xor
push
imul
jnp
pop
or
addr16
lcall
dec
pop
push
sbb
add
rorb
cmc
inc
pop
adc
dec
mov
adc
sub
xor
popf
push
adc
or
xchg
adc
inc
xor
mov
mov
mov
sbb
insl
push
rcll
ja
sbb
cmp
dec
lds
int3
mov
fs
pop
mov
lret
push
cmp
cmp
jecxz
scas
test
and
xchg
ret
push
or
cs
xlat
jno
arpl
popf
pop
or
not
hlt
xchg
jp
push
mov
pop
sbb
lods
xchg
dec
push
or
pop
xlat
sub
fcmovu
cmp
ss
mov
xor
mov
stos
ljmp
insb
shlb
out
mov
cmp
mov
pop
sbb
xchg
inc
pop
roll
outsb
pop
xchg
addl
cmc
cltd
js
xor
in
xor
mov
dec
incb
add
pushf
bound
or
push
movsl
iret
cmp
and
cmc
push
repz
cs
adc
out
xor
dec
test
adc
or
ja
fwait
addb
cwtl
add
push
popf
hlt
jg
push
dec
cmpb
out
jg
stos
repz
outsl
ja
mov
xor
divl
xchg
cmp
dec
ja
js
sarl
imul
scas
out
jecxz
jge
lea
inc
add
cwtl
push
xlat
inc
add
leave
dec
mull
and
dec
dec
xchg
stc
sbb
aam
or
lods
int
and
outsb
jl
mov
cltd
sti
enter
rcrl
jp
push
outsl
or
mov
push
mov
pop
sub
repnz
ja
jge
push
repz
not
mov
jle
mov
es
lret
pop
dec
jbe
in
jge
adc
daa
call
insb
scas
mov
mov
sub
lods
or
js
pop
icebp
in
mov
xor
push
push
sub
bound
scas
cli
xor
mov
mov
popf
xorl
fdivrp
mov
cmpsl
clc
lds
dec
test
jl
fcoml
sub
jnp
fwait
mov
pop
sub
xorb
pop
insl
cmp
fmull
addl
pop
inc
in
sbbl
lahf
stos
popa
push
jae
fcoml
adc
adc
frstor
xor
int
sahf
sub
push
mov
jl
mov
ret
fwait
ret
cli
mov
call
cmc
ss
rcrb
das
lods
cli
lock
insl
stos
xor
lcall
jae
mov
bound
push
and
inc
mov
divl
aam
mov
data16
cld
mov
push
mov
mov
daa
fistpll
push
mov
push
xor
push
sub
pushf
jg
xchg
repz
pop
mov
mov
mov
lock
dec
push
mov
sub
dec
pop
jle
sbb
sbb
sub
mov
mov
sub
xlat
inc
sub
lret
dec
es
incl
add
dec
call
movsb
fidivrl
sarb
int3
enter
sub
push
aad
pushf
out
jmp
mov
adc
sub
in
rcll
xor
pop
adc
cmp
jne
mov
pop
or
dec
test
mov
cli
jg
pop
lret
loopne
sub
sbb
lea
or
test
out
pop
xor
add
mov
mov
dec
sub
and
stos
loopne
add
nop
lcall
jns
push
lea
cmpl
fs
jge
sbb
jns
lret
and
cwtl
xor
xchg
loop
test
leave
or
push
add
push
and
in
mov
fdiv
sbb
in
add
push
jp
xorb
xor
ja
dec
stos
roll
cmc
test
mov
dec
divb
lcall
ds
ss
es
out
ss
shrl
inc
imul
enter
jb
and
dec
add
sub
mov
xchg
rorb
cli
addr16
pusha
das
int
sti
in
mov
xchg
shrb
popa
cmpb
je
cmp
push
pop
imul
dec
pop
into
lock
in
es
test
cmpsl
jae
insb
arpl
sub
cwtl
js
mov
mov
jg
repz
mov
mov
icebp
ljmp
adc
cs
mov
dec
xorb
xchg
out
fnsave
xchg
std
cli
daa
push
ss
sbb
push
xchg
adcl
cwtl
or
xchg
mov
sbbl
mov
and
sbb
cli
ljmp
int
loop
push
push
pop
imul
pop
and
repnz
dec
lods
add
rcrb
pop
mov
pop
jmp
push
bound
fdivrl
xor
test
xchg
jnp
pop
sbb
push
pop
or
adc
mov
ja
aaa
push
mov
insl
push
mov
jne
mov
pushw
xchg
cli
inc
dec
scas
icebp
jge
imul
repz
aas
sub
mov
or
mov
ja
lods
pop
push
into
cmp
dec
inc
ljmp
mov
jae
fsts
mov
push
cmp
movsl
push
ss
sub
mov
in
dec
lds
cmp
sbb
xor
mov
nop
mov
pop
mov
xchg
cmp
popa
mov
sbbl
push
or
or
and
jo
sbb
out
push
inc
push
push
sbb
push
add
daa
pop
xchg
pop
mov
in
sbb
or
out
sbb
in
inc
or
sbb
inc
dec
dec
pop
mov
out
scas
jge
xor
loop
mov
rcrl
cli
stos
mov
mov
add
pop
jns
add
sti
jb
shll
mov
cmp
clc
pushf
mov
xchg
jl
xchg
mov
cwtl
mov
add
in
outsl
dec
lods
mov
lret
xchg
mov
and
add
rol
pop
cmp
and
xchg
ret
mov
jl
int3
out
jnp
fdivrl
loop
iret
sub
mov
mov
leave
es
xchg
push
je
mov
jbe
mov
sub
stc
sbb
xchg
mov
fs
xorb
ss
ret
push
out
or
inc
mov
scas
addb
jl
jg
andb
lcall
mov
popf
mov
mov
mov
add
out
adc
hlt
mov
add
mov
jns
mov
and
mov
js
sub
paddb
stos
rorb
or
out
mov
leave
or
mov
jge
test
xchg
jl
rol
icebp
rolb
cmp
xor
fnstsw
mov
loop
push
xor
add
rolb
push
inc
add
sub
fstl
lret
fistpll
pop
xor
adc
push
addr16
jno
inc
ficoms
push
xchg
sarb
lcall
arpl
sub
push
jl
and
pop
arpl
clc
ja
adc
orb
push
xchg
mov
aas
sub
call
and
jns
pop
mov
sub
and
mov
loope
adc
jmp
fimuls
test
or
mov
dec
push
or
and
adc
xchg
pop
sub
icebp
push
dec
mov
inc
movsl
enter
into
inc
aaa
nop
jg
inc
jmp
dec
out
mov
mov
arpl
dec
xchg
mov
pcmpgtb
push
ret
mov
clc
dec
pusha
loope
out
mov
inc
outsl
mov
aaa
fsubs
dec
push
lock
into
xchg
inc
inc
ljmp
pop
inc
dec
mov
xchg
sbb
mov
in
fadd
mov
pop
mov
subb
and
pop
inc
or
and
dec
mov
rcr
dec
in
ret
jle
add
pop
insl
push
insb
notl
xchg
mov
ds
sbb
inc
ret
sub
add
iret
mov
dec
add
and
insl
push
aas
sub
sbb
decb
cmp
scas
and
push
pavgb
xchg
dec
or
stos
stos
lahf
pusha
pop
mov
mov
leave
inc
mov
xor
cld
lret
sets
xor
xchg
add
bound
mov
imul
add
mov
stc
jmp
push
ret
das
in
pop
hlt
movsb
addb
mov
fimuls
movsl
mov
lock
dec
sbb
lcall
dec
mov
mov
call
pop
mov
insb
sbbb
fxch
sub
push
int
insl
adc
push
xorb
inc
xlat
jae
in
cmpsb
push
das
cmp
inc
in
neg
jmp
cmp
btr
loop
fsubp
in
rcr
cwtl
incl
insb
push
inc
push
sbb
aam
xchg
push
jl
inc
sub
jge
repz
xchg
xchg
mov
mov
sub
fnstcw
adc
cmp
pusha
mov
out
ret
in
std
adc
pop
test
sub
dec
stc
sti
cs
xchg
sar
xchg
jl
pop
xor
mov
es
dec
pop
test
or
mov
paddusw
cs
rdmsr
lcall
mov
fsubrs
cmp
stos
sub
push
inc
fldt
addr16
std
lods
sarl
push
xchg
into
popa
push
shlb
mov
test
arpl
xchg
int3
xchg
or
rcr
ja
dec
push
repnz
sbb
sbb
sbb
not
dec
ret
or
rorl
and
sbb
and
out
or
dec
mov
jp
cmc
call
jmp
mov
xor
ljmp
mov
js
mov
push
pop
lret
popf
insl
testl
push
jle
cmc
sbb
and
setp
xor
mov
dec
sahf
xchg
dec
sbb
movsl
jo,pn
cmpsb
imul
mov
movsl
addr16
pop
out
jae
mov
jmp
adc
lods
arpl
adc
fwait
in
rorl
shlb
fwait
aad
fadd
cmp
mov
jns
pusha
xchg
mov
adc
dec
push
cmp
pop
in
inc
add
lea
std
shl
test
std
cwtl
fidivrl
mov
pop
dec
ss
repnz
insb
aam
ret
and
ds
in
test
fnstenv
or
aad
call
fs
dec
cmp
sub
into
mov
push
xchg
mov
je
shll
mov
mov
std
sahf
in
fildll
sbb
fists
cltd
loopne
cli
fs
cmp
sbb
leave
cmpsb
xor
dec
xlat
mov
mov
notl
push
in
popf
cmp
and
cmp
mov
jbe
hlt
addr16
push
loop
adc
or
int
jns,pt
mov
jo
push
fcmovu
scas
mov
jmp
out
dec
shl
push
movsb
dec
es
mov
lea
pop
hlt
or
hlt
adc
aaa
mov
aad
cmp
xlat
lods
adc
sbb
dec
mov
ss
or
sahf
push
mov
mov
mov
sub
xor
inc
sub
inc
in
add
jecxz
push
xor
std
mov
add
jecxz
xchg
shlb
or
je
enter
xor
push
dec
inc
cltd
dec
stos
mov
shrb
repz
pop
inc
push
jo
pop
adc
jp
cmpl
inc
mov
imul
jns
push
cmp
rcr
jnp
sti
dec
popf
jnp
mov
mov
mov
insl
clc
jmp
xlat
xchg
and
data16
cs
int
jno
cmp
mov
adc
mov
adc
mov
outsl
icebp
in
xchg
mov
and
mov
mov
fwait
mov
dec
xchg
pop
mov
movsb
rcrl
xchg
ds
push
bound
dec
adc
mov
xor
and
mov
stos
std
jge
add
or
sub
aad
divb
mov
xorb
push
lcall
stos
scas
test
inc
jnp
fldenv
pop
cmc
mov
loop
sub
mov
rcrb
jmp
insl
cwtl
addl
jp
mov
shl
dec
fmul
cmp
aaa
cld
and
or
add
or
pop
nop
inc
cld
mov
imul
leave
lret
inc
insb
popf
xorb
hlt
push
int3
inc
inc
xchg
mov
xchg
and
jbe
les
and
test
mov
fdivrs
mov
pop
xor
pop
in
mov
out
add
into
gs
mov
add
leave
cmp
lods
or
mov
xchg
xorb
dec
iret
repz
subl
insb
in
fisubrl
adcl
jg
test
call
xchg
les
add
out
inc
lret
xchg
pushf
lret
leave
and
test
fdivl
mov
sbb
or
and
jecxz
mov
xlat
mov
or
push
sbb
cmp
out
and
cmpsb
nop
call
sbb
push
out
push
nop
mov
sub
jmp
loope
push
ljmp
cld
dec
insb
lahf
fstpl
xchg
mov
xor
jp
outsl
cmpsl
ret
adc
inc
lahf
mov
xlat
aad
dec
daa
aam
dec
lds
outsb
mov
mov
popf
mov
push
loope
rorb
sbb
pop
dec
xchg
dec
inc
cmpsl
add
and
fsubl
stos
xor
divl
or
dec
add
cmp
imul
pop
int
adc
bound
jle
test
mov
in
imul
shlb
dec
jmp
dec
das
dec
andl
idivl
xor
pushf
insw
mov
jns
cmp
push
cwtl
decl
js
mov
iret
mov
cmp
xchg
xchg
arpl
sbb
gs
pop
int3
sbb
add
mov
cmp
xor
mov
jmp
xchg
xchg
jb
test
xchg
aas
mov
repz
xor
adc
lret
enter
jo
mov
cmp
addr16
push
out
dec
int
sub
dec
nop
lcall
pop
into
pop
outsb
fidivl
cld
pop
cmpl
lea
add
ret
jnp
in
or
adc
leave
sub
push
fucom
push
dec
ffree
push
mov
jno
enter
xchg
push
scas
stos
xchg
loopne
ds
ss
hlt
jo
shll
adc
jne
fmul
scas
xor
mov
pop
push
imull
jne
mov
int3
xor
cmp
sti
xchg
pop
push
jbe
push
lea
sbb
or
aas
roll
xchg
addps
add
push
adc
dec
test
clc
outsb
fwait
xchg
lahf
addr16
xchg
loope
xor
es
xlat
cmpsl
mov
mov
add
or
pop
mov
xchg
cld
sti
imul
sub
and
aam
clc
mov
mov
adc
sub
push
pop
cmc
cmp
sarb
fistpll
iret
movsl
add
scas
jge
stos
out
jb
icebp
adc
in
rcrb
in
and
cmp
sub
jl
jge
inc
fistpl
add
test
cwtl
cs
dec
cmp
cmp
jne
and
mov
cmp
mov
sub
sbb
test
mov
shrb
cltd
das
fcoms
das
dec
pop
incb
jns
jecxz
mov
mov
out
out
mov
sti
push
es
mov
mov
fwait
outsb
jge
punpckldq
add
mov
repz
jno
cli
nop
leave
repnz
push
and
lcall
xchg
xlat
cmp
sub
out
pop
add
and
and
jl
mov
jae
pop
inc
cmpsl
dec
scas
mov
imul
int3
inc
popa
xchg
jmp
push
cmpsl
dec
xchg
adc
lcall
inc
adc
ljmp
iret
nop
pop
out
mov
das
cmp
ljmp
sbb
xchg
push
and
mov
jbe
adc
xor
push
lea
mov
mov
dec
enter
jno
sub
mov
ja
mov
ficompl
divb
jp
sub
inc
cmp
inc
sub
jle
push
cmp
insb
mov
sbb
sbb
fidivs
cltd
roll
xchg
mov
fisttpll
cmc
dec
into
jns
xchg
pop
push
cld
xor
add
sbb
sbb
mov
cmc
nop
xor
dec
inc
inc
jo
push
enter
jecxz
xor
dec
mov
push
ret
sbb
add
inc
pop
ficomps
fildl
fiadds
push
mov
jo
outsb
inc
daa
mov
xchg
and
scas
cli
xor
ss
pop
cmp
dec
xchg
sub
adc
pusha
push
stc
mov
pop
fsts
sbb
mov
pop
fisttps
sub
push
dec
int3
fisubl
call
filds
sbb
xchg
and
cs
pop
lret
push
cs
or
fisubs
push
push
loop
adc
bound
xor
iret
lret
mov
pop
call
jbe
int3
sbb
sti
lcall
adc
mov
cmc
dec
xchg
adcl
subb
xchg
pusha
inc
imul
sub
dec
xchg
xor
xor
mov
lock
inc
outsb
push
sub
or
add
pop
test
push
js
mov
insl
push
rclb
or
leave
pop
adc
jb
jno
cld
mov
or
lods
jae
cmp
dec
movsl
mov
pusha
movl
iret
leave
xor
jb
dec
mov
sbb
outsb
mov
fsubrs
rclb
mov
ret
iret
xchg
jnp
cmpsb
mov
push
fidivs
test
pop
ds
addr16
and
cmpsl
mov
loopne
jae
dec
adc
jb
adc
ficompl
add
add
dec
mov
pop
push
loope
sarl
fcmovnbe
push
lahf
pusha
jl
in
jnp
mov
xor
xor
fsts
je
jge
push
jne
dec
loope
je
or
inc
inc
cmp
das
jg
cmp
movsl
inc
test
xor
jecxz
pop
jae
push
loope
popa
lcall
mov
push
rcl
sub
ja
mul
xor
mov
xchg
cmp
mov
fistps
xchg
aaa
inc
pop
iret
cwtl
rorb
xchg
mov
push
stos
cmp
sahf
fs
pop
push
sub
jmp
jecxz
sti
arpl
mov
fs
ljmp
xor
xchg
and
mov
repz
mov
jne
xor
leave
push
sarl
cmp
loope
and
jl
addr16
lret
shlb
pusha
mov
push
daa
cmpsb
sbb
xchg
inc
cmc
pop
sub
fs
mov
repz
adc
inc
add
or
sti
pushf
lea
jp
push
lods
or
jg
std
push
jbe
loopne
adcl
push
cmpsl
mov
enter
fcoms
out
mov
repnz
loop
insl
dec
add
mov
or
or
lcall
jge
cld
adc
inc
pop
inc
call
inc
fcomip
push
test
fs
mov
movl
fildll
mov
fsubs
jle
sbb
add
addr16
sahf
adc
loopne
and
add
pop
mov
call
mov
mov
mov
popf
push
or
sub
pop
leave
int3
sahf
jp
clc
push
sbb
shrl
movsb
faddl
cmc
cmp
dec
call
adc
jecxz
pop
inc
imulb
outsb
jecxz
mov
or
or
jecxz
cmpsl
sahf
mov
ret
outsl
in
aas
insl
sahf
cmp
jbe
aas
dec
sbb
push
clc
out
movsb
shlb
mov
imul
xchg
jae
insb
push
mov
sbb
mov
xchg
divl
and
loop
push
jno
mov
mov
ret
cmc
sbb
pop
bound
outsb
mov
mov
notl
icebp
xchg
out
repnz
enter
out
jns
fidivrl
dec
repnz
mov
push
xchg
dec
test
bound
bnd
adcb
cmp
dec
in
stos
stos
add
jg
jg
lods
mov
lods
stc
fistpl
sbbb
stc
das
decl
xor
push
lods
shl
adc
xor
scas
mov
sahf
ss
mov
sbb
subl
lods
push
les
gs
push
pop
push
pop
ja
sbb
push
push
push
sahf
or
pop
mov
push
lods
pop
in
cld
ss
xchg
in
and
mov
sub
sub
loop
loope
mov
popf
cli
outsl
pop
mov
loope
fsts
into
mov
data16
mov
idivl
mov
and
iret
dec
aas
cmpsl
mov
lock
sbb
subb
gs
cmp
enter
adc
rorl
aaa
in
das
lret
insl
pop
pushf
sub
cmc
gs
sbb
xor
and
inc
xchg
test
mov
dec
addr16
fisttpl
ficoms
add
pop
loopne
out
mov
sbb
jne
jnp
es
fbld
sbb
flds
cmp
stos
jmp
and
push
aam
add
and
mov
imul
scas
imul
jp
lahf
movsb
shll
hlt
jp
pop
jbe
xchg
dec
cmpsl
rcrb
mov
ret
aam
lock
jnp
mov
fimull
push
leave
sub
add
das
jae
cltd
mov
outsb
sub
cmpsb
sub
cld
push
inc
sbb
adc
mov
pop
pop
inc
test
nop
sub
sub
popa
mov
jp
lock
fwait
sub
mov
push
mov
out
aam
test
das
imulb
sti
les
popa
dec
gs
inc
ja
ja
aam
icebp
sub
loop
aam
test
jb
lods
aas
fsubrs
pop
sub
mov
fsts
dec
sub
xor
outsb
pop
shl
ret
mov
xchg
push
out
xor
mov
dec
add
fwait
lahf
stos
sub
xchg
std
jnp
pop
divb
rol
dec
sti
pop
leave
cmpsl
sub
xor
insl
test
sbb
popf
mov
push
mov
pop
xchg
pop
sbb
movsl
adc
sub
mov
xchg
fisttps
cmp
pop
adc
cmp
mull
sub
loopne
and
sbb
mov
sbb
jp
and
bnd
loope
sub
adc
notl
xchg
pop
adc
in
adc
lock
rcr
mov
outsl
or
or
cld
fsubl
inc
into
mov
fs
orl
mov
dec
int3
cld
mov
fiadds
cli
jae
mov
sub
pop
and
popf
imul
push
out
and
jmp
mov
lret
adc
cmp
mov
enter
add
cmp
out
inc
das
jp
outsb
ljmp
mov
popa
cld
and
push
pop
rcll
sbbl
and
sbb
xchg
inc
cmp
xlat
shlb
rcrl
add
sbb
mov
xlat
mov
and
aaa
lcall
pop
cmc
inc
inc
or
xor
xor
movsl
or
scas
inc
sbb
fldcw
add
mov
jnp
or
xor
jo
loopne
fdecstp
fisttpl
lods
pop
lcall
mov
mov
cmp
adc
pop
jp
imul
adc
les
pop
add
movsb
sbb
movsl
sbbl
iret
or
fidivl
jno
pop
mov
popa
sahf
in
shlb
orb
jge
or
sbb
add
pop
mov
cmp
les
arpl
lock
mov
pop
lahf
xor
pop
stc
orl
cmpsl
mov
sti
aas
fimull
in
pop
fwait
sub
xor
pushf
ret
pop
data16
imul
out
or
xor
or
in
add
int
adcb
mov
int
mov
shlb
xor
sahf
icebp
inc
hlt
clc
loopne
xchg
push
ds
outsb
pop
cmp
mov
push
mov
sub
test
stos
fs
push
add
push
xorb
pop
add
dec
rcr
jb
in
cmc
sub
jle
clc
mov
cmpsl
pop
ss
lret
in
rcrl
je
and
out
mov
sahf
ss
out
mov
pop
scas
pop
cmpsb
inc
arpl
aad
stc
loop
inc
arpl
fdivp
movsb
into
iret
hlt
push
arpl
aam
rcrl
dec
add
and
cwtl
cmc
gs
xchg
inc
push
in
cmp
movsl
mov
pop
mov
sbb
inc
fbld
lods
pop
push
pop
not
dec
lds
pusha
sub
lods
and
fldenv
enter
mov
test
mov
mov
mov
outsb
jl
sub
lods
fdivl
fnstcw
sbb
jo
enter
leave
and
xor
scas
cmp
cltd
or
stos
ljmp
sub
ja
push
and
mov
subl
call
cmpsb
dec
inc
sub
jno,pt
jle
lods
insl
mov
mov
or
lds
inc
jno
mov
rolb
iret
xchg
xchg
sub
jns
mov
jno,pt
fs
fisttps
push
pop
lret
xor
add
mov
fisttpl
subl
pop
fst
adcb
in
sbb
int3
out
fwait
mov
ficoml
mov
vmaxps
mov
sub
inc
add
push
lock
cmp
in
xchg
in
lds
call
cmp
incl
cli
inc
sbb
jne
mov
pop
scas
movsb
imul
sub
cs
push
hlt
sbb
lret
shl
xor
mov
push
daa
rcl
cmp
test
push
mov
cmpsb
fstps
fidivrl
or
pop
or
orb
ret
test
add
push
daa
in
sub
aas
sub
sub
inc
icebp
mov
jnp
pusha
inc
rcrl
adc
push
jb
or
ja
sbb
mov
sub
or
ficomps
xor
fildl
cmpsl
xchg
mov
xchg
dec
xchg
or
jo
lock
mov
in
fs
xor
pop
repz
dec
leave
xchg
mov
stos
adc
shr
add
sbb
shll
outsb
add
add
cli
fidivrs
in
ljmp
shll
adc
mov
icebp
pop
lahf
jbe
push
inc
add
sbb
cmpsl
mov
iret
inc
jge
lock
iret
cltd
sahf
mov
pop
cmp
xchg
lds
or
lret
pop
inc
xorl
or
mov
cmc
pop
jmp
out
pop
imul
cmp
enter
push
inc
xchg
and
cmp
or
inc
mov
pop
in
ret
jp
jmp
lar
mov
js
sub
dec
adcl
sbb
test
sbb
out
or
rcrb
pop
add
mov
or
dec
or
pop
jb
ret
shl
ss
fisubrs
jl
cmpl
cmp
loopne
jge
hlt
push
cmpsl
fs
andl
jmp
stc
cmp
icebp
adc
pop
mov
daa
cmpsl
pop
mov
adc
mov
lods
je
cmpsl
xchg
andl
shlb
lahf
in
push
outsl
sub
sbbl
push
fwait
rcll
adc
lcall
push
mov
pop
stc
xchg
mov
out
jb
leave
inc
fdivl
sbb
and
movsl
dec
dec
shrl
mov
mov
cmp
xor
popa
sahf
cmp
in
ja
pop
mov
jns
dec
popa
cmc
movsb
push
stos
pop
push
cwtl
sub
cmp
sbb
jmp
push
outsb
out
scas
push
push
ja
ljmp
loopne
je
insb
test
cmp
test
jle
mov
out
rcll
xchg
add
daa
xchg
mov
dec
push
mov
cmp
inc
pop
stc
lcall
sbb
repnz
mov
jmp
jge
fs
shll
inc
aam
out
xchg
push
cld
mov
mov
xchg
fcompl
es
and
stos
and
and
loope
pop
cmp
xchg
inc
pop
jg
jo
mov
or
add
cwtl
sub
dec
inc
mov
dec
push
sub
push
adc
stc
inc
mov
add
mov
test
jnp
mov
lret
dec
sbb
pusha
xchg
or
insb
sbb
jmp
ds
test
aam
cmp
xchg
mov
pop
xchg
outsl
xor
mov
cli
cmp
mov
adc
fnstsw
pop
je
xchg
loop
or
adc
dec
pop
out
ljmp
imul
mov
and
jmp
pusha
xor
or
and
int
stos
stos
xor
add
push
or
mov
mov
sub
mov
pusha
dec
xor
push
adc
xchg
gs
or
sahf
iret
outsb
testl
andl
cmove
mov
int
js
lock
fdivrs
in
dec
mov
stos
add
aam
mov
inc
mov
mov
cmpsl
mov
iret
push
sti
or
and
jns
xor
jecxz
es
push
sub
std
icebp
xlat
adc
mov
mov
dec
lcall
push
mov
adc
lods
mov
mov
sbb
mov
sbb
mov
jge
or
xchg
sbb
int3
inc
in
insl
sbb
lret
out
or
iret
push
repz
out
mov
sub
fs
dec
call
adc
aad
aaa
notb
fucomp
movsl
mov
push
push
test
jge
movsl
repnz
ret
pop
pop
mov
es
sbb
push
lcall
push
cs
mov
xchg
sbb
pushf
mov
sbb
test
jae
out
xor
pop
or
ret
cmpsb
jnp
mov
sbb
pusha
stc
jl
sub
sti
mov
enter
fwait
xchg
xor
das
cltd
dec
sub
test
clc
adc
das
inc
dec
xorb
enter
pop
loope
sub
arpl
add
xchg
mov
daa
cmpsl
adc
fcmovbe
xor
jmp
jmp
movsl
gs
orb
inc
iret
sbb
test
je
stos
cmp
test
jno
divl
movnti
push
aam
sub
les
adc
out
push
pop
aad
mov
ret
sub
lret
stos
into
int3
cltd
lods
ret
scas
gs
rolb
lahf
mov
stos
jecxz
icebp
mov
cwtl
insl
sbb
mov
bound
enter
sub
mov
dec
lea
cltd
jmp
jp
mov
das
stos
xor
aad
add
mov
or
imul
cmpsl
and
jg
divb
xlat
inc
neg
pop
mov
mov
jge
sbb
push
lret
jecxz
sti
cmp
cld
mov
push
call
xor
test
dec
dec
lret
pop
jnp
xorb
mov
xor
inc
vpunpckldq
cmp
scas
push
add
mov
sti
ds
pop
notw
pop
jge
daa
jl
cmp
out
popa
xchg
push
fidivrl
outsb
into
mov
fistl
inc
push
dec
xchg
dec
in
sub
pushf
cmpsb
pop
cmp
movsl
push
push
call
out
jg
lea
cmc
cmc
add
xchg
popf
mov
aas
add
add
std
clc
cmp
jp
dec
jne
mov
push
mov
jl
ss
pop
jae
and
jnp
xchg
imul
and
push
sarl
lea
aas
mov
popl
aas
pop
stos
rol
rorb
inc
stos
jmp
pop
jne
mov
imul
sub
int3
add
push
pop
dec
push
push
aad
cltd
call
ret
xchg
fdivrl
adc
mov
adc
mov
lahf
inc
mov
inc
or
icebp
jg
fbstp
mov
icebp
cmpl
push
lods
mov
nop
jecxz
in
jnp
mov
int3
mov
daa
aas
lods
pop
imul
movsl
push
data16
pop
xchg
xchg
push
add
sub
mov
xchg
iret
mov
and
and
ret
xlat
xorb
sub
rcr
sti
xchg
pop
loop
pop
leave
inc
sbb
sbb
fldcw
je
pop
cli
adc
mov
cmp
pop
mov
inc
fldl
in
mov
in
push
add
lcall
xor
aam
shll
xor
nop
sub
or
inc
inc
repz
xchg
je
cmovne
sti
sbb
jne
movsb
les
dec
jp
popa
scas
push
add
xchg
add
cwtl
fwait
push
cld
sbbb
jle
dec
xchg
rclb
mov
and
sub
cli
in
sar
mov
in
popf
bound
cltd
lret
insl
in
mov
xchg
dec
loopne
or
push
call
xchg
xor
std
pop
fwait
aad
icebp
std
inc
pop
call
fcomps
cli
mov
jge
shr
dec
add
frstor
pop
add
push
int3
adc
int3
push
push
mov
shlb
mov
dec
dec
test
jae
arpl
push
lods
lret
int3
xchg
outsl
shlb
test
repnz
jb
cmp
popf
decb
push
lods
adc
cmovle
in
pop
fstps
cltd
js
mov
xchg
test
mov
mov
das
bound
add
jno
in
mov
pop
stos
xor
movsl
jmp
sbb
fwait
sub
aad
cmpsb
xor
aam
and
rorb
cmp
xorl
push
mov
std
dec
test
call
mov
outsl
push
stos
out
cmp
aam
iret
add
cmpsl
mov
js
jne
add
adc
in
push
inc
mov
xchg
cmc
aas
movsb
xchg
sti
push
pop
jae
stos
std
jge
movsb
ret
push
idiv
mov
dec
push
arpl
sbb
rcrl
cmc
xor
mov
mov
lcall
sbbb
in
jmp
jl
in
adc
daa
sahf
lahf
rorb
jae
cmpsb
mov
sahf
xor
push
xor
cltd
scas
sub
scas
xchg
push
sbb
xchg
in
rclb
test
es
push
or
xor
ss
sub
les
dec
pop
test
cmpsb
dec
mov
sub
xor
stos
and
and
outsb
aam
movsl
and
push
pop
rcrl
out
decb
xor
jno
ret
jl
repnz
or
mov
iret
mov
mov
loopne
ljmp
add
xchg
inc
andb
call
add
dec
fmull
fbld
mov
xchg
lcall
add
rcr
je
mov
mov
mov
outsb
adc
adc
dec
mov
mov
addr16
jmp
sub
orb
test
outsb
xlat
add
repnz
inc
daa
and
int
jmp
add
fwait
adc
inc
cmp
in
notb
cmpsb
fildll
lret
push
jno
jbe
lcall
jge
mov
movsb
sahf
pushf
push
aam
cmpsb
pop
out
inc
loopne
jp
sarl
mov
pushf
test
out
add
pop
push
xor
jg
pop
mov
addr16
lcall
mov
cmp
cmp
push
jge
repnz
jmp
rcll
add
mov
stos
repz
fidivrs
dec
and
out
in
in
inc
int
sub
test
in
inc
adc
ret
mov
push
mov
cwtl
loopne
pop
in
push
push
push
and
mov
out
repnz
add
scas
lahf
test
insl
xchg
or
xchg
leave
jno
sbb
xor
lods
test
leave
stc
mov
mov
fwait
out
out
pop
movsb
pop
jp
cmp
daa
xchg
xor
and
lods
and
cmp
loope
jb
addr16
shl
sbb
shrl
cmpsl
adc
xor
lcall
dec
cmp
and
pop
cmpxchg
data16
addb
sbb
inc
dec
push
sarb
pop
js
pushl
aad
adc
repnz
js
jmp
mov
pop
call
in
adc
mov
or
jae
js
mov
mov
add
loope
jbe
iret
push
push
dec
inc
mov
into
xchg
xor
popf
mov
test
inc
lahf
sbb
pop
in
sbb
ret
outsl
push
mov
sub
sbb
stos
stos
and
xchg
mov
push
stos
push
push
mov
push
or
fcomp
adc
dec
and
adc
mov
cwtl
xor
push
xlat
dec
and
push
ljmp
mov
jp
pop
jo
dec
mov
inc
xor
adcl
roll
sub
push
rol
out
div
push
dec
cmp
mov
dec
movsb
call
aaa
xor
movsb
leave
mov
dec
std
or
jns
and
inc
jmp
out
rorb
adc
xor
gs
fidivrs
pop
call
jecxz
aam
mov
dec
lcall
aam
dec
fistl
pop
ljmp
adc
cltd
test
inc
imul
and
sahf
pusha
push
push
arpl
pop
jle
dec
or
xor
daa
jmp
jg
sbb
lods
cmp
or
sarl
insb
mov
lahf
xchg
mov
and
mov
mov
outsb
js
dec
inc
and
stc
inc
aad
lcall
cs
dec
dec
mov
push
std
cld
add
outsl
clc
xchg
pop
sub
sub
cltd
sahf
jecxz
cmp
xlat
test
outsl
ret
subb
xchg
xor
pusha
add
fst
fsubrs
dec
dec
mov
sbb
stos
sbb
sub
push
pop
pop
sbb
and
jbe
jae
inc
repz
in
rcl
dec
cmp
jmp
add
fs
in
icebp
in
into
out
dec
adc
and
test
fsubr
andl
into
out
mov
cmp
push
and
xchg
mov
in
rcrb
ficompl
cmp
dec
popa
popa
je
jnp
mov
mov
mov
test
jns
cmpsb
ss
into
cmp
mov
and
mov
nop
mov
fucomi
pusha
inc
jnp
fs
add
fwait
xchg
mov
inc
cmp
xor
pop
sub
sar
add
pop
loop
xchg
in
icebp
inc
xchg
loop
sbb
sub
jge
repnz
mov
push
fwait
xchg
int3
sbb
out
test
xchg
xchg
inc
insl
js
mov
imul
subl
jns
inc
xor
xchg
insb
ficoms
mov
push
lods
cltd
jge
xlat
jl
stc
fsubl
fwait
sbb
and
cmp
or
sbb
repz
adc
gs
loopne
shl
je
push
inc
push
int3
out
pop
mov
and
wbinvd
dec
pusha
mov
leave
icebp
mov
loope
ficomps
in
jnp
stos
xchg
nop
rcrb
mov
cs
mov
inc
pushf
push
aam
dec
or
mov
or
sarl
imul
icebp
pusha
lock
jg
or
aam
lahf
cwtl
pushf
inc
cmp
dec
add
jae
push
movsb
pop
mov
lcall
cmp
cmp
push
sbbb
adc
or
call
add
xchg
push
pop
pushf
cmp
clc
cmp
mov
movsl
out
js
lret
repnz
xor
push
loope
stos
loope
movsl
jbe
sub
mov
enter
sub
out
xchg
jp
inc
lret
cld
cld
aam
andb
xor
rcl
or
ficomps
fdivrs
push
pop
push
xor
inc
loope
pandn
adc
daa
pop
push
adc
pop
and
sub
dec
hlt
adc
out
dec
cld
add
js
loop
movsl
cmp
aam
add
push
jge
dec
pusha
sbbl
xchg
test
or
mov
and
je
jg
enter
mov
cmc
pop
xchg
mov
shl
orb
lock
ljmp
push
mov
adcb
pop
jbe
or
dec
xor
cld
inc
out
mov
jns
lods
scas
pand
mov
adc
xor
call
jle
push
add
idivl
ss
mov
pop
and
jo
out
stos
inc
xchg
pop
andl
fdivs
rcrb
mov
andb
imul
pop
repz
shll
lahf
sti
enter
push
adc
pop
loope
or
xchg
sbb
xchg
jns
int
clc
decl
addr16
mov
jp
mov
shrb
aam
addl
stc
jle
ja
add
test
inc
mov
mov
lods
test
mov
sub
push
xor
jnp
cmpsl
enter
in
pop
mov
cld
sub
inc
movl
sub
and
sub
ss
in
test
fisttps
ja
xor
and
rcrb
gs
push
dec
leave
pop
adc
daa
gs
cmp
fstpt
mov
mulb
addb
fbstp
add
push
in
call
sahf
shll
and
stc
mov
jns
or
stos
lods
or
or
scas
inc
sti
insl
jg
movsb
es
cmc
scas
call
sbb
imul
lahf
xchg
cld
add
sbb
clc
cmc
jge
mov
int3
data16
or
mov
jno
mov
xchg
loopne
mov
cwtl
pop
push
sub
inc
out
and
xchg
test
scas
xor
mov
cltd
clc
add
sbb
and
push
imul
lock
pop
sub
movsb
mov
es
adc
inc
stc
push
sbb
addr16
jge
lods
jae
and
jl
xor
cmp
idivb
xor
ror
ficomps
mov
lret
rcl
xchg
aaa
and
jns
sti
daa
fldenv
lahf
js
cmp
pop
or
sub
mov
ret
jb
scas
and
in
pop
sbb
lds
fwait
lods
insb
iret
in
adc
jp
jmp
loope
scas
dec
ss
cli
pusha
rorl
add
outsb
test
xchg
addl
icebp
jl
xchg
cmpsb
mov
fwait
or
lret
pushf
xor
notb
sub
sbb
sbb
les
arpl
lods
or
cmp
aad
mov
ffreep
ds
push
lock
mov
icebp
stos
sbb
dec
repnz
mov
inc
push
aam
movsb
push
xchg
sub
lods
push
add
imull
cmp
mov
push
cmp
not
inc
sbb
push
xchg
fs
aaa
fsubrp
rorl
sarb
inc
es
add
dec
das
mov
pop
aad
jg
lds
icebp
pusha
in
mov
shlb
test
leave
lcall
fbstp
push
pop
mov
mov
imul
scas
mov
push
or
ja
mov
sar
inc
sub
ja
fdivr
and
adc
xchg
jns
sub
push
xchg
mov
push
mov
cmp
and
mov
fstl
push
xchg
and
xor
in
mov
mov
decl
pop
std
loope
leave
push
js
mov
scas
insb
pop
sbb
cmp
jae
fidivrl
and
das
hlt
sbb
mov
cld
out
mov
mov
lods
mov
adc
test
out
mov
dec
cmpsb
add
int3
fdivrl
mov
cli
mov
inc
notb
or
adc
xchg
and
pop
push
inc
ret
mov
add
ret
xchg
push
das
or
imul
push
mov
inc
sub
inc
mov
inc
and
pop
xor
xor
sbb
stc
test
dec
out
inc
scas
cwtl
popf
mov
sbb
arpl
pop
faddl
xlat
sbbl
adc
in
push
or
dec
insl
imul
mov
mov
clc
pushf
inc
ljmp
fucomip
adc
push
or
pop
inc
fisttpl
scas
adc
out
fdivrp
xchg
mov
xchg
fcmovbe
fisttpl
inc
icebp
cli
loope
iret
add
pop
and
dec
jnp
out
inc
mov
test
inc
or
mov
das
cmc
jge
cltd
enter
inc
jne
test
enter
or
test
lods
jb
mov
clc
sbb
mov
aas
test
dec
rorb
sbb
dec
mov
push
fdivrs
mov
push
cli
xor
imul
insl
jb
aad
mov
iret
cmp
or
cmp
fsubrs
addr16
sarb
clc
repz
movsb
cli
sbb
or
push
jbe
mov
cmp
into
pop
inc
jbe
pop
ds
cmp
std
bound
into
pushf
jl
imul
add
loopne
inc
sbb
xchg
or
and
sbb
push
cmp
shrb
jnp
mov
mov
and
mov
stos
adc
mov
xchg
and
das
iret
xchg
jl
ljmp
xchg
push
and
adc
jecxz
adc
scas
cmc
push
adc
cmp
subl
aam
pop
inc
jl
add
in
xchg
pushl
mov
shl
mov
jae
xchg
jno
mov
add
xor
mov
and
jmp
xchg
cmp
pop
xor
lock
mov
adc
push
cmp
fsubl
xor
cmpsl
or
xorl
jl
testb
popa
mov
hlt
mov
cmp
ljmp
and
pop
in
sbb
dec
fdivrs
leave
pop
fimull
rorl
lock
ljmp
xor
in
sarb
cmp
int3
or
pusha
push
je
loop
ret
mov
push
push
fiaddl
jnp
jns
test
cmp
pop
adc
bound
mov
add
stos
jo
adc
lret
sti
xor
fiadds
add
aas
mov
xchg
push
sbb
rcrl
cmpb
mov
js
testl
push
imul
sub
mov
cmp
cli
fs
aam
sub
xorl
pusha
roll
daa
push
lret
xchg
fdivp
out
mov
and
mov
enter
cmp
int3
call
fldl
repnz
push
arpl
out
fisttpll
mov
out
pop
sub
mov
xor
sbb
shlb
lds
rolb
insl
arpl
or
or
sbb
ret
decl
cmc
push
or
cmp
push
pop
mov
mov
mov
leave
inc
push
popa
pusha
mov
jmp
adc
push
insl
lahf
add
popf
push
xrelease
faddp
call
and
mov
jl
add
or
fisubrl
dec
mov
push
arpl
or
sbb
push
int
mov
adc
mov
jge
mov
loop
addb
xchg
pop
push
xor
add
push
test
and
not
lret
push
shrb
pop
xchg
imul
insl
sbb
dec
inc
mov
dec
jns
imul
inc
jae
cs
cmc
mov
out
xor
and
pop
mov
mov
in
pushf
cmpsb
push
push
out
outsb
and
add
mov
pop
cltd
pop
jae
inc
imul
xor
pop
mov
nop
and
aam
mov
insb
xchg
ds
ss
inc
jo
mov
sub
mov
test
and
add
add
js
jnp
call
ret
xor
call
in
lds
mov
push
cltd
or
je
jmp
lret
jmp
jmp
xor
fs
xchg
cmp
les
gs
adc
ss
push
xor
insl
cmpsl
pop
add
and
lahf
test
inc
push
dec
pop
cmp
fs
ret
push
xor
mov
jge
jge
stos
lea
add
cli
mov
mov
cmp
std
xor
add
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sbb
add
andb
mov
std
lea
fwait
cmp
and
adc
sub
add
mov
leave
mov
dec
shld
push
fdivp
xor
sub
aad
jecxz
xorb
mov
stos
lret
mov
add
dec
lock
dec
xchg
cmp
push
aad
test
shl
or
das
insl
jp
cltd
inc
cmp
push
inc
rol
push
pop
add
sub
pusha
sub
icebp
push
fcompl
hlt
push
rcll
add
addb
shlb
cmp
xchg
test
add
push
mov
outsb
test
hlt
mov
popa
mov
and
ja
push
test
inc
mov
es
test
jns
out
gs
call
mov
test
in
clc
pop
icebp
int3
mov
loopne
fimull
imul
jae
iret
pop
push
mov
popf
adc
loop
or
xchg
add
mov
mov
mov
scas
rcll
mov
xchg
js
xor
xchg
push
int3
fidivl
dec
data16
ja
dec
repz
sub
js
es
mov
cmovge
xor
mov
inc
pusha
or
mov
fmuls
orl
int3
inc
push
and
loop
push
ds
outsl
add
pop
popa
dec
mov
jmp
jecxz
cld
pop
xor
loope
push
int3
mov
movsl
sub
sub
push
jae
int
fucomip
xor
stos
cmp
fucomi
pop
loopne
mov
lds
jnp
push
adc
lock
iret
dec
ud0
pusha
hlt
mov
pop
push
jnp
add
or
fcompl
mov
add
dec
mov
mov
and
or
pushf
outsb
adc
sbb
dec
lahf
xchg
adc
outsb
and
sub
pusha
stos
fiaddl
or
sbb
xchg
je
add
insb
outsb
cmp
xlat
bound
cmp
jo
cld
les
or
push
mov
cmpl
add
and
subb
loope
loop
and
push
loopne
add
jmp
push
repz
jns
adc
push
cld
into
lcall
repz
repnz
xor
scas
dec
sub
push
jae
cmp
dec
push
mov
pusha
sub
adc
inc
aaa
or
mov
std
leave
inc
jns
mov
xor
pop
lods
inc
insb
pop
and
dec
loop
or
aas
cs
xor
cwtl
inc
cmp
sub
ds
in
mov
aad
xor
adc
out
jmp
push
inc
xchg
fs
jns
mov
cmp
dec
mov
cwtl
and
pop
imul
pop
addr16
jne
test
jbe
or
xlat
mov
stos
jnp
add
inc
push
shlb
push
sub
or
add
push
cld
notb
jmp
pop
mov
xor
cmp
hlt
cmp
daa
sub
inc
xchg
xchg
jo
stos
mov
jbe
add
mov
xchg
aad
mov
call
xchg
in
lret
ret
mov
jbe
fisttpll
jno
inc
clc
lret
inc
movsl
ret
in
push
gs
pop
imul
dec
scas
push
push
add
imul
or
lahf
out
mov
out
mov
inc
jae
sti
mov
pop
mov
adc
outsb
pop
push
jb
in
pusha
iret
push
aaa
sbb
mov
jae
inc
xchg
push
rol
push
xchg
cmpsb
pop
scas
adc
aas
lods
insl
push
cmp
mov
add
icebp
in
add
xlat
int
enter
adc
aam
xor
mov
bound
hlt
icebp
bound
js
add
xchg
dec
xchg
out
in
or
mov
cmpsb
ror
mov
xor
scas
add
sbb
and
dec
pop
jl
fwait
jno
and
std
les
call
push
and
add
and
mov
loop
push
lods
push
xchg
testb
xor
cmp
push
in
push
sahf
jp
cs
aad
lea
dec
lds
dec
xchg
stc
xchg
xor
or
pop
das
scas
out
nop
sub
lods
arpl
pop
addl
js
sub
jg
repnz
xchg
shr
js
imul
pop
push
pop
mov
repz
dec
add
pushl
mov
dec
inc
test
pusha
xor
std
scas
fstl
xchg
sahf
loope
std
jae
seta
stos
in
and
nop
mov
jle
fwait
push
or
jo
pop
cld
pushf
push
inc
sbb
mov
dec
xor
mov
pop
fxch
jle
std
sub
shlb
cmc
into
loopne
add
int
adc
rclb
sbb
into
cmp
hlt
aaa
test
push
mov
mov
stc
mull
inc
mov
enter
lea
int
rcr
xchg
ret
scas
in
out
xchg
shrb
mov
loope
sbb
or
into
jg
xor
dec
push
cmpsb
push
add
inc
add
sub
ljmp
rcr
xor
mov
xchg
xor
stos
mov
cli
push
mov
jl
sbb
xchg
out
into
inc
insb
and
pop
out
xor
sub
es
aad
test
pop
int3
iret
pop
mov
es
ljmp
jb
cld
ret
stos
inc
loope
inc
test
push
sbb
aaa
pop
in
adcl
sub
xchg
cmpsl
out
hlt
mov
imul
aam
scas
arpl
mov
fsubs
mov
or
data16
sub
dec
pushf
cmp
sbb
iret
andb
mov
test
push
test
mov
mov
xchg
push
xchg
in
ljmp
mov
sub
loopne
fwait
movsl
mov
aad
jge
roll
das
xlat
loope
pop
loop
inc
inc
xchg
ror
std
pop
les
xor
push
xor
ds
les
popf
mov
push
out
pop
inc
cmp
inc
jge
mul
cwtl
add
xor
jle
xchg
ss
pushf
movsl
xor
sub
lcall
jb
enter
shrb
sub
push
jnp
cs
push
push
jae,pt
lds
imul
pop
popa
fdivr
cmpsb
cmp
andl
xchg
cmpsb
scas
call
mov
aam
pushw
and
cli
fs
dec
out
mov
mov
xor
es
and
in
xchg
and
mov
cmp
xchg
cld
sub
mov
xchg
add
int
jmp
clc
test
xor
xchg
mov
jp
fists
xor
cmpl
or
in
and
roll
or
std
pop
clc
cmp
mov
mov
dec
shll
xor
outsb
mov
outsl
dec
es
or
xor
push
stos
sbbl
or
push
je
scas
cmpsb
out
fstl
in
mov
mov
xor
mov
mov
dec
inc
shlb
xchg
es
mov
add
inc
dec
push
mov
fwait
mov
cwtl
hlt
sub
mov
adc
aad
cmpsb
cmp
xor
sub
sbb
inc
fldcw
lret
sub
xor
mov
adc
xlat
push
jmp
dec
push
mov
xchg
vpsraw
imul
movsl
out
xorl
add
insl
inc
negl
fildl
sbb
outsb
mov
fwait
insl
xchg
add
lret
gs
sar
fwait
fs
pop
and
fimull
xor
and
mov
sbb
pop
jg
xchg
push
testb
push
xchg
or
out
shlb
stos
imul
mov
shl
xor
idivl
jbe
stos
int3
and
and
fdivl
xchg
or
cs
pop
loop
xchg
pop
dec
lret
movsb
cmpsl
jnp
loopne
mov
cmpsb
shrb
out
fmull
mov
xchg
mov
mov
xor
mov
fstpl
xchg
js
jno,pt
sbb
ss
push
adc
sbb
pop
jecxz
and
mov
pop
andb
outsl
sarb
mov
pop
dec
repnz
je
mov
cmp
inc
or
pop
lods
int
das
dec
cmpsb
inc
xchg
icebp
lds
std
out
push
xchg
aam
bound
push
inc
sbb
mov
inc
cmp
mov
ficomps
adc
lret
hlt
sub
fsubrp
aad
and
iret
mov
daa
fcmovnb
mov
sub
xor
out
and
fwait
push
fiadds
and
clc
jg
dec
mov
and
push
inc
xchg
outsl
out
lret
push
in
mov
add
fidivl
or
stos
cmp
bound
stos
cld
cmp
jg
andb
lods
fsubrp
insl
mov
rorl
js
outsl
lock
inc
push
xor
mov
enter
movsl
rcll
xchg
movsl
mov
clc
push
ljmp
sbb
std
adc
mov
mov
jns
push
sbb
sub
mov
mov
mov
icebp
mov
sbb
jl
cld
pop
daa
js
xchg
in
ss
in
adc
cmp
or
test
outsl
jmp
mov
pop
sbb
bound
sub
and
xchg
lret
mov
ret
stc
int
inc
lret
gs
aaa
pop
or
jl
out
sbb
dec
leave
and
inc
cmp
add
dec
push
push
sar
out
imul
mov
notl
and
push
scas
mov
mov
enter
out
ret
mov
imul
in
loop
push
in
lods
pop
dec
mov
hlt
outsl
jp
lods
pop
out
mov
iret
stos
insl
cmc
cmp
leave
inc
jmp
mov
dec
xchg
iret
bound
out
jbe
aam
xchg
cmp
mov
adc
xor
mov
fldenv
xor
mov
loop
push
mov
scas
mov
int3
mov
dec
outsb
insl
insl
lds
mov
cmp
iret
lods
cmp
fbstp
repz
stos
insl
mov
push
sub
test
fistpll
leave
leave
or
and
imull
push
cmp
add
ret
insb
or
sbb
orl
scas
adc
lcall
popf
gs
es
lcall
push
sub
aas
ja
fisubl
adcl
pop
enter
sbb
push
push
and
dec
insb
pop
pushf
mov
adc
mov
jbe
std
mov
mov
ds
lcall
into
adc
sti
gs
xchg
daa
lds
push
jb
fldenv
pusha
xor
insb
jno
pop
lods
mov
jno
pusha
lods
sbb
out
les
mov
pop
pop
pushf
pop
pop
mov
cs
cltd
cmpl
mov
and
cmpsb
shrl
ds
mov
movsl
sub
push
out
fs
xchg
scas
out
push
clc
pop
xchg
lds
movsb
in
sub
stc
dec
lahf
xor
lahf
addr16
mov
stc
xchg
xor
lret
arpl
mov
push
xor
adcl
dec
imul
stos
cs
fistpl
daa
lahf
push
ljmp
push
sahf
rcll
ret
lods
jge
and
sub
mov
mov
mov
inc
rorl
cmpsb
inc
pop
test
jbe
test
fcmovnb
idivl
cmpsb
xchg
call
lret
jmp
xchg
addr16
fcmove
frstor
inc
inc
sbb
loope
notl
xor
jge
mov
push
pop
mov
in
adc
pop
adc
cmp
out
popf
ficoml
repnz
inc
add
inc
jge
dec
dec
push
and
adc
popf
adc
scas
rorb
retw
in
loop
push
xor
mov
lret
scas
in
movlhps
sbb
fucomip
sbbb
jne
sbb
rcrl
pop
stc
arpl
mov
cmp
shlb
dec
nop
lods
leave
out
aad
inc
xchg
mov
pop
sbb
sub
mov
jb
jmp
xchg
push
sbb
aas
fs
lock
stc
repnz
xor
mov
mov
ficoms
mov
repz
sub
xor
push
insl
aam
push
cmpsl
sbb
push
xor
or
aam
ja
lret
jle
or
inc
mov
push
out
xchg
insb
jl
cmp
and
arpl
pop
inc
pop
lcall
fs
pop
xchg
xor
push
es
iret
jge
and
test
or
or
jp
xchg
add
and
sub
popa
xchg
outsl
incb
cmc
pushf
repnz
test
es
mov
jb
jle
adcb
sbb
mov
addr16
jmp
mov
dec
sub
push
xor
cld
xchg
cmp
xor
push
sub
adcb
out
jno
rclb
jge
push
push
xorl
leave
pop
nop
out
aaa
int
pop
cs
test
mov
push
add
sarb
addr16
outsl
jmp
add
xlat
dec
mov
mov
inc
stc
insl
push
cmp
stc
and
pop
jno
xor
nop
jno
pop
inc
jae
fcompl
cmp
push
sbbb
push
cwtl
je
pop
data16
cli
pop
call
xchg
mov
in
pop
imul
jp
movsl
adc
xchg
pushf
data16
adc
arpl
mov
test
xor
fsub
sbb
insl
pop
andb
jne
out
pop
add
fcomps
mov
cmp
test
pop
jne
sub
push
out
insl
push
imul
negl
jecxz
lods
dec
sub
or
in
cmp
icebp
lods
icebp
movsl
jnp
fwait
int
ljmp
and
icebp
mov
out
icebp
cmc
push
fwait
jle
loop
jne
sbb
xchg
jno
jg
int3
sub
repz
inc
das
scas
pop
pop
adc
mov
and
or
and
mov
stc
mov
lods
xor
out
in
sahf
test
das
cld
jecxz
sbbb
cwtl
mov
pop
dec
lcall
roll
push
fcmovne
rcll
aad
scas
push
pop
and
jmp
pop
mov
icebp
not
lret
shrl
dec
mov
or
and
fsts
test
incb
add
int
frstor
in
mov
stc
dec
rorl
cs
dec
not
xor
mov
movsb
dec
add
xchg
lahf
xor
repnz
adc
test
inc
aas
mov
repz
imul
shrl
and
sub
xor
arpl
aaa
xchg
inc
cmp
fwait
stos
rcrb
pusha
rcll
lock
arpl
das
and
mov
out
push
lahf
pop
aam
adc
mov
mov
pop
adc
push
or
sub
ss
xchg
jp
jge
fdiv
mov
jmp
mov
mov
push
mov
out
mov
push
sarb
enter
xchg
inc
das
loopne
xor
mov
pop
xlat
inc
mov
data16
and
cmpsl
das
mov
sbb
push
add
inc
push
jle
or
pushf
fdivs
mov
out
pop
insl
pop
sti
insb
push
movsl
daa
sbb
dec
jb
mov
jo
xor
mov
sarb
lea
ds
lcall
inc
fistl
insb
addr16
xchg
in
insb
push
push
and
mov
cmp
pop
mov
pop
xor
xor
test
loop
test
inc
fisubs
iret
sub
dec
pop
pop
loope
xchg
and
cmp
ljmp
mov
movsb
iret
ljmp
out
mov
and
push
dec
mov
jnp
cmp
inc
sbb
lret
lds
and
outsl
pop
xchg
int3
jmp
mov
and
push
xchg
inc
dec
pushl
dec
mov
pop
insl
sbb
test
and
sbb
daa
jmp
mov
jp
ljmp
xchg
push
cmp
mov
mov
add
cmp
mov
sbb
rcrl
or
ds
popa
loope
dec
push
ret
adc
fsts
imul
ds
pop
pop
pop
mov
xchg
pushf
push
lods
pusha
sub
add
or
pop
sbb
aam
iret
mov
xor
ljmp
add
hlt
aam
adc
loopne
outsb
popl
xor
and
push
jns
aad
mov
sub
insl
out
and
or
or
mov
push
mov
leave
jle
aas
push
cmp
jle
les
shrl
xor
fistl
dec
mov
inc
cmp
aam
hlt
mov
sub
mov
setae
add
mov
mov
add
ljmp
fbld
adc
jg
test
xor
jg
add
cmp
push
push
andb
mov
cmc
dec
arpl
sbb
and
sbb
leave
and
in
test
jle
inc
int
mov
xor
sbb
out
cwtl
adc
pop
or
cmp
popf
or
mov
decl
ljmp
adc
dec
push
inc
sahf
js
movsl
jnp
mov
sub
sub
stc
cmp
xchg
pop
xor
jmp
enter
cmp
mov
movl
xchg
fldenv
loop
ret
inc
or
and
jmp
pop
sub
insb
popa
cli
orl
addl
xchg
icebp
addr16
ret
lods
movsb
nop
pop
cwtl
or
notl
pop
inc
or
lret
or
ret
jb
mov
sbb
add
outsb
cwtl
cmpsb
push
push
cmp
push
stc
lahf
por
push
in
fbstp
daa
add
jbe
or
lods
insl
insb
adc
jb
scas
mov
mov
inc
mov
mov
sbb
cmp
bound
cmpsb
imul
sub
mov
inc
mov
xor
out
sub
push
lds
in
xor
je
xor
cmp
sbb
dec
data16
mov
call
clc
jae
repnz
notb
fs
andl
xlat
jnp
cltd
cld
inc
inc
lods
shll
adc
subl
mov
push
call
push
ret
out
mov
jb
cli
outsb
and
sti
jnp
pop
xor
fwait
sbb
xchg
fldcw
sbb
je
aas
inc
stc
out
out
mov
cmp
xchg
push
arpl
or
lock
mov
in
pop
and
arpl
enter
popf
xlat
mov
sbb
add
xor
sub
mov
cli
out
idivb
sbb
sbb
imul
imul
cmp
enter
mov
xor
sbb
stos
loopne
fcompp
leave
icebp
dec
mov
stos
and
subb
insb
mov
shlb
insl
sbb
daa
pop
add
xor
push
nop
sub
push
cmp
rorb
ret
test
sbb
mov
xor
scas
sbb
aaa
and
cmp
daa
loope
push
in
pop
mov
xlat
xchg
dec
hlt
sub
in
dec
cmp
or
rcrl
jmp
icebp
and
push
out
xchg
mov
rcr
popa
fmuls
adc
mov
fisubrs
push
ret
mov
jne
cmp
das
movsl
mov
ds
cmp
adc
out
or
xor
push
lods
cmp
xchg
cwtl
outsl
mov
icebp
loopne
push
jl
mov
lods
pushl
btc
mov
cmp
mov
icebp
mov
mov
mov
stos
bound
shll
jae
jno
push
fld
pop
test
add
lock
pop
cmp
and
xchg
fucomi
cmpsl
imul
adc
pop
mov
pusha
adc
cmc
jmp
jns
inc
mov
push
push
ljmp
mov
pop
pop
cmp
popf
in
cmp
rcl
xchg
repnz
pop
in
or
xchg
or
hlt
lret
fwait
in
pop
repnz
pop
in
pop
repnz
pop
cmpsl
mov
shlb
loopne
dec
mov
iret
and
movsl
pop
stos
mov
daa
ret
cmp
fs
cltd
lret
xor
fmuls
fnstcw
dec
sbb
xchg
push
cpuid
add
xchg
fld
jmp
int
out
xchg
push
shl
in
repnz
xor
add
inc
push
mov
iret
jne
and
xor
clc
out
push
dec
mov
ficomps
sbb
repz
xchg
xchg
push
daa
mov
clc
lock
adc
movsb
jns
ds
movsb
mov
pop
mov
push
sub
iret
test
or
in
mov
push
lret
mov
pop
dec
fnsave
adc
mov
insl
or
mov
leave
dec
xlat
sbb
mov
mov
cmpsb
repnz
incb
orl
test
in
inc
add
and
bnd
jmp
mov
shlb
daa
dec
xchg
and
or
adc
fcmovnbe
in
or
or
jge
inc
jmp
xchg
push
cmp
and
je
outsb
mov
cltd
sub
dec
cmp
xor
sbb
loop
mov
sub
mov
adc
movsb
cmp
mov
mov
std
jo
jge
sbb
push
push
aam
jnp
push
rol
pop
loope
mov
push
outsl
imul
xchg
pusha
out
in
fs
add
fisubs
dec
dec
into
shlb
fs
pop
pop
jge
ficomps
aas
pop
lea
int3
das
enter
lcall
inc
xchg
out
div
push
add
jbe
aad
scas
pop
or
into
lahf
mov
fcmovne
jno
cli
aaa
cltd
adc
movsb
xchg
in
test
out
mov
jmp
ror
or
xor
mov
fisubrl
in
sbb
inc
adc
shrb
mulb
cmpxchg
inc
lcall
test
pushf
aad
insb
aad
mov
push
push
clc
inc
xor
mov
inc
mov
inc
popa
mov
andl
lea
inc
daa
jnp
in
xchg
push
xchg
out
pop
sub
orb
cmp
xchg
jne
xchg
iret
dec
or
adc
sub
cltd
dec
shrl
enter
and
leave
sti
cltd
mov
mov
nop
pop
incl
aaa
cmp
add
rorl
fs
add
pop
dec
out
mov
orl
xorl
push
pop
stc
inc
sub
jo
seto
fdiv
jmp
aaa
iret
pushf
push
stc
mov
out
outsl
ret
jno
adc
fcoms
jg
jbe
inc
mov
pop
int3
popa
push
lds
add
push
inc
xchg
jle
cltd
jg
push
fst
fdivs
and
rclb
inc
jb
enter
arpl
hlt
push
popa
data16
xchg
dec
les
in
aaa
testb
and
iret
xchg
sbb
xor
cmp
xor
sub
or
pushf
xor
add
iret
out
push
push
nop
call
mov
out
dec
jge
and
popf
shll
ljmp
scas
sub
pop
mov
pop
xor
fstpl
addr16
hlt
pop
and
push
mov
dec
dec
mov
cli
mov
pop
xor
lret
movsb
fmull
and
lds
mov
in
enter
ret
pusha
insb
int
jb
and
popf
sbb
push
outsl
rclb
jb
dec
hlt
mov
sbb
gs
jns
loope
mov
cmp
orb
aad
mov
enter
ret
jl
mov
or
movsb
test
jl
out
ffreep
push
cmpsb
sub
jne
jge
dec
inc
in
ljmp
lods
or
xor
and
idivb
mov
ss
mov
pusha
daa
movsb
sbb
push
fbld
shll
pop
xor
ja
mov
xor
lea
jae
data16
sarb
hlt
mov
fiadds
xor
or
mov
push
pushf
fiadds
cmc
or
push
je
loopne
movsb
mov
scas
xlat
andl
and
dec
and
icebp
out
cltd
add
loopne
mov
inc
pop
mov
sub
jnp
out
adc
test
dec
xor
into
xchg
adc
icebp
dec
dec
adc
bound
std
cmp
imul
ret
rolb
sub
mov
ja
pop
adcb
daa
dec
iret
lret
mov
les
lret
fstpt
arpl
test
inc
xchg
pushf
sbb
jae
lock
insb
leave
mov
insl
add
add
xor
pusha
lret
bound
jmp
fisubrs
je
stos
xor
mov
xor
mull
sarb
push
add
ljmp
sub
and
outsl
test
mov
stos
dec
mov
incl
add
in
fs
mov
loop
jp
cwtl
cmp
mov
xorl
mov
lret
outsb
xor
and
cmc
sub
xor
loop
scas
xchg
orb
mov
shll
jno
out
js
mov
jg
mov
rol
sbb
cld
jg
push
int3
call
fisubrs
xor
lea
mov
mov
je
dec
sbb
sub
ja
hlt
adcb
push
xor
js
jp
and
pop
insl
push
lret
aad
push
xchg
cs
push
ret
adc
jnp
push
popa
cmp
mov
lret
cmp
mov
enter
adcb
cmp
rclb
jns
mov
out
mov
insl
cmpsl
sbb
fsubs
shl
leave
inc
test
sub
adc
xchg
pushf
push
aas
mov
jge
mov
sub
adc
mov
sub
cs
sbb
insb
sbb
mov
insl
dec
mov
xor
shl
mov
mov
ja
repnz
add
imull
gs
je
ficomps
mov
sbb
pop
pop
lret
or
cld
sti
lock
mov
xor
dec
mov
push
jp
fcomps
into
and
pop
adc
stos
sbb
cltd
rcrl
cld
xchg
in
movsl
inc
inc
push
xchg
fs
or
in
dec
out
mov
inc
into
jnp
fsubrl
mov
mov
lods
lret
xor
inc
xchg
jl
mov
insb
cmpsl
inc
daa
mov
imul
orb
jno
lahf
sbb
pop
mov
mov
call
in
mov
outsb
cltd
pushf
iret
mov
push
cmp
popf
icebp
int
xor
jo
pop
insl
and
xor
sub
jle
int3
jns
mov
xorb
xor
iret
xchg
or
adc
pop
pushf
inc
cs
inc
push
or
lret
xor
jp
shll
fcmovu
in
fmull
fldl
inc
push
idivl
push
push
or
mov
lahf
cmpsb
lods
enter
fldcw
adc
jmp
mov
insb
push
cmp
loope
or
mov
push
cmp
cmp
lret
pusha
enter
std
scas
xchg
xchg
ficoms
popf
iret
xlat
sahf
dec
push
ss
rcll
or
subb
adc
inc
or
jg
daa
ljmp
jle
lock
lods
push
or
lret
push
in
pop
add
fbld
lahf
das
jae
cmc
mov
aad
mov
jbe
xchg
add
stos
jl
push
jp
shrl
stos
jae
insb
jne
sbb
xlat
xchg
mov
dec
jp
and
or
add
jo
call
in
adc
mov
adc
mov
cmpsl
lock
sbb
pushf
cmp
lahf
inc
mov
jecxz
adc
add
pop
dec
insb
aad
mov
sarb
test
push
cmpsb
icebp
inc
mov
ja
add
mov
fsts
mov
je
push
movsb
mov
push
clc
push
loop
add
ljmp
cmp
cmc
jecxz
xchg
int3
xchg
push
fstl
mov
add
pop
sbbb
or
dec
adc
ss
mov
daa
cmp
outsl
icebp
stos
xor
sub
repnz
rcll
ret
cmp
mov
push
adcb
sbb
loopne
hlt
mul
push
enter
es
notb
mov
push
es
xchg
and
fcmovnb
in
xchg
cmpsl
inc
popl
jge
sbb
jne
sbb
xchg
mov
jl
out
jbe
js
fidivrs
pcmpgtb
sbb
sub
mulb
sbb
push
jmp
nop
jmp
out
xchg
sub
ljmp
adc
iret
cld
and
mov
add
aas
mov
dec
dec
movswl
mov
ficomps
sbb
cmp
xor
jl
in
jg
das
nop
mov
loope
mov
sti
leave
dec
xchg
xor
aaa
addl
sub
hlt
shrl
in
bound
mov
sarl
adc
lahf
mov
lcall
xchg
xchg
loop
fstl
bound
outsl
adc
jle
insl
ret
out
or
lods
gs
call
xlat
mov
mov
int3
ret
popa
add
pusha
mov
data16
sbb
bound
pop
pop
sub
gs
fs
sbb
and
stos
add
jnp
test
inc
jmp
dec
sbb
dec
in
push
xchg
cs
xor
and
jbe
cmp
test
mov
xor
sti
mov
fwait
addr16
jns
sbb
test
jne
imul
out
ja
rol
pop
shll
adc
fmull
cmpl
mov
aas
ror
fdivr
mov
lods
pop
rorl
mov
add
inc
inc
fs
jecxz
add
out
icebp
xor
mov
push
sbb
mov
pop
pushf
adc
mov
in
and
add
pop
cli
dec
pushf
xchg
dec
lret
mov
ljmp
and
mov
mov
dec
bnd
testb
push
xor
push
mov
sub
ja
xchg
subl
inc
loope
cmp
lods
xchg
push
and
mov
push
xchg
imul
adc
mov
xrelease
lods
scas
out
iret
inc
insb
mov
sub
fisttpl
je
mov
mov
ficoml
lods
add
push
inc
add
mov
mov
mov
inc
daa
mov
scas
sub
jge
xchg
cmpsb
dec
pop
and
pop
pushl
in
or
mov
push
fidivs
mov
cld
or
inc
ret
cwtl
add
dec
nop
jp
in
loop
pop
sbb
fs
lods
lods
mov
arpl
and
sub
inc
mov
test
add
aam
dec
jne
or
jo
jp
pop
inc
push
js
mov
jmp
scas
and
adc
push
popf
jnp
mov
push
std
and
bnd
lcall
dec
lock
in
dec
pop
aaa
outsb
lods
add
adc
movsl
rorl
cmp
or
aaa
out
test
inc
or
mov
sahf
aad
sbb
in
in
int
out
cmp
addb
xlat
and
icebp
add
push
adc
scas
inc
push
inc
negl
popa
pop
call
out
mov
mov
or
sbb
mov
in
xchg
or
ret
mov
dec
mov
inc
mov
jb
push
adc
sbb
and
and
sbb
mov
pop
ss
push
imulb
ret
mov
mov
ret
addl
adc
or
fsts
adc
in
in
movb
xchg
adc
int
test
pop
inc
adc
std
mov
int
add
jne
cltd
ss
mov
mov
lds
xchg
mov
lahf
and
sub
xchg
add
jge
inc
fnstenv
pusha
and
mov
cli
scas
xor
cmp
repz
je,pt
push
sub
push
xchg
out
adc
mov
fwait
jno
adc
incb
push
mov
shll
mov
jne
ficompl
es
nop
push
jnp
xor
push
push
aas
push
add
fmulp
das
gs
bound
les
or
pop
imulb
and
dec
inc
arpl
ret
mov
adc
pop
xchg
jp
movsl
fidivrs
mov
xchg
inc
pop
or
add
cmc
sbb
es
mov
jecxz
loop
aas
push
cmc
push
sbb
cmp
dec
mov
inc
inc
jo
xor
and
popf
fs
push
pop
dec
in
sbb
mov
lea
mov
cmpsb
outsb
outsb
popa
loopne
repnz
xor
or
sbb
dec
add
mov
or
jg
push
mov
into
jo
ret
idivl
movsl
mov
dec
push
mov
orb
iret
and
push
sub
rorl
add
out
sbb
mov
adcl
sbb
cwtl
sub
stos
popf
xchg
inc
xor
fstpt
push
sahf
sub
mov
mov
pop
dec
daa
mov
adc
cmp
fidivl
aam
sbb
fwait
mov
xchg
testb
clc
add
pusha
mov
adc
lahf
dec
pop
test
push
adc
cli
stos
push
sti
in
in
jno
mov
push
loop
fstpl
adc
sub
pop
adc
mov
cmp
adc
fsts
cmpsl
sub
jl
rcrb
pop
adc
and
sbb
je
mov
cmp
or
ret
and
or
insb
lea
or
and
clts
fs
mov
sub
arpl
or
outsb
pop
lea
xor
in
adc
enter
add
ret
push
aas
fistl
xor
mov
jge
call
mov
dec
enter
inc
insb
mov
jmp
mov
roll
loopne
and
sarb
call
fdivrl
adc
mov
xlat
insl
int3
add
stos
daa
pushf
or
add
aaa
outsb
popf
adc
sbbl
stos
sbb
cli
mov
cmc
clc
aaa
loope
aaa
push
adc
fmuls
mov
mov
mov
xor
test
pop
mov
aas
sar
ret
push
cmp
push
jns
push
add
sarb
push
arpl
js
cmp
test
hlt
xchg
push
xor
fsubs
jns
jp
fisubl
lcall
adc
in
cmc
add
mov
sarb
cmp
into
decl
test
jb
out
sub
jle
rcrb
push
cltd
adc
rcll
xor
adc
aam
ljmp
icebp
push
push
inc
ret
adc
jne
ret
pop
ficoml
mov
push
movsl
pop
add
lcall
pop
ret
or
sahf
movsb
xchg
dec
xor
imul
int3
mov
dec
dec
pushf
mov
cmp
mov
lea
push
pop
jnp
into
ds
fisttpl
popf
cwtl
in
push
xor
or
pop
test
inc
inc
outsl
aad
jge
ja
cmp
xor
add
loopne
sarb
movsb
lahf
jp
sub
sbbl
and
xchg
leave
mov
cld
ror
stc
in
xor
jb
jmp
jecxz
bound
repz
adc
lret
cltd
lds
shll
les
scas
cmp
mov
jl
dec
ret
jb
ljmp
and
xor
hlt
rcll
dec
pop
jl
ja
xchg
test
gs
mov
mov
ret
ret
adc
sbb
lret
fs
negb
loope
out
push
enter
leave
out
stos
scas
push
cmp
stos
cld
das
test
les
pop
in
xchg
je
pushf
sar
cmpb
ret
cmc
mov
mov
mov
cmp
jno
jns
cmpsb
mov
jb
jp
mov
incb
or
mov
repz
sbb
fdivr
lret
mov
sub
sub
sarl
mov
out
cli
ss
or
cmpsl
lods
lds
hlt
mov
movsb
lods
icebp
je
pop
jmp
popf
call
lods
xchg
cld
push
movsb
stos
fldt
or
in
dec
std
xor
mov
ljmp
mov
inc
jae
push
stos
loopne
push
cwtl
mov
enter
mov
repz
and
ljmp
and
dec
mov
jle
sbbb
xchg
xor
cmp
loop
ja
mov
inc
add
xchg
or
inc
paddw
push
cltd
inc
rcrl
dec
xchg
lcall
xchg
lcall
aad
and
or
inc
mov
fisubl
pop
cmpsb
cmpl
shr
xchg
ds
fwait
mov
paddusb
inc
call
movsl
xor
sub
jecxz
popa
xchg
jae
cmp
fsub
bound
ret
mov
jmp
xchg
in
jmp
and
xchg
aad
dec
or
push
mov
rep
shrl
mov
test
mov
xchg
arpl
mov
pusha
mov
inc
cmp
out
inc
ljmp
push
mov
sub
dec
mov
mov
loope
sub
test
and
aad
cmpb
add
out
cmp
aad
sbb
roll
scas
dec
cmc
push
cld
add
mov
pushf
sbb
test
mull
push
lret
lcall
add
mov
aas
xchg
pusha
sbb
adc
push
fcmove
rcr
inc
lcall
or
repnz
jl
sti
mov
push
mov
push
mov
ret
int3
dec
cmpsb
gs
push
je
cmp
cmpl
pop
mov
out
jnp
rolb
movsb
jae
or
jae
into
cmp
jno
movsl
rcrl
fdivr
jne
jge
mov
jo
das
mov
mov
js
repnz
out
xchg
push
xchg
aad
jns
mov
push
dec
xchg
js
insl
je
call
inc
hlt
cmpsb
icebp
cmp
push
nop
sub
add
rorb
nop
leave
call
jge
lds
dec
jns
test
mov
fistl
arpl
pop
shl
sti
mov
mov
clc
enter
ljmp
sub
cmp
mov
dec
cli
xor
cs
mov
lahf
lods
out
es
and
out
aaa
rcrb
lret
mov
mov
pusha
adcl
inc
out
dec
cli
jo
loopne
jmp
mov
jg
push
in
or
outsb
cs
sti
icebp
sbb
fimuls
sub
mov
clc
loope
push
stos
adc
adc
repnz
cmp
add
subl
stc
in
inc
jbe
subb
inc
inc
jg
sbbl
lret
dec
das
push
daa
test
add
shl
insl
jae
xchg
cmp
popa
mov
xor
in
add
lock
push
ds
jne
test
cvttps2pi
push
dec
lods
mov
mov
or
cli
ret
fs
fs
pop
sbb
xor
ljmp
movsb
jl
sti
gs
aas
xor
sub
adc
xchg
scas
or
sahf
in
xchg
lret
out
arpl
out
daa
pop
jle
sub
mov
sti
in
mov
and
inc
andl
mov
and
ss
in
jbe
xchg
ret
hlt
insl
imul
addl
pusha
and
mov
ljmp
mov
stos
jo
imul
push
lret
lods
push
xorl
inc
mov
lock
mov
insb
cwtl
out
loopne
adc
cwtl
testl
rcll
or
push
pusha
jne
and
nop
jmp
sti
cmpsl
jno
test
inc
shll
and
sbbl
adc
test
icebp
sub
adc
pop
clc
push
mov
sarb
add
jp
xchg
dec
inc
call
adc
xlat
xchg
sub
pushf
fwait
pop
adc
jae
mov
nop
dec
insl
push
test
jo
pop
mov
or
mov
stc
inc
push
in
sub
and
lds
sub
mov
push
add
imul
cs
lock
int
test
and
insl
fdivr
mov
sbb
cld
inc
nop
test
inc
cmp
push
adc
inc
insb
xchg
sub
popa
jb
sahf
pop
pop
int3
mov
das
sub
mov
cld
shrl
jns
jb
jns
push
mov
or
out
jp
fwait
pop
repz
cmp
aam
aaa
xchg
sbb
pop
shlb
jae
int
or
out
clc
jnp
xlat
fucomip
mov
in
dec
repz
mov
or
enter
dec
bound
leave
pop
test
sub
mov
iret
jmp
and
mov
negb
dec
data16
movsl
data16
mov
shrb
scas
daa
imul
dec
pop
nop
scas
leave
stos
nop
add
jle
mov
das
add
pop
adc
outsl
sub
xor
mul
and
mov
test
mov
push
fwait
or
push
jo
sub
das
je
push
pslld
call
add
dec
dec
mov
outsl
ss
inc
pop
jne
daa
pop
addl
js
testl
dec
aam
inc
pop
out
ja
xchg
push
inc
repz
leave
sbb
lcall
xlat
sub
pop
pop
shrl
mov
out
mov
lds
movd
scas
dec
mov
cs
dec
es
insb
aaa
xor
test
cld
subb
push
pop
lods
jbe
cmp
pop
fmuls
sbb
sti
dec
lahf
aaa
mov
dec
mov
mov
out
push
xchg
sbb
gs
xchg
sub
in
jmp
jmp
xlat
arpl
xor
or
sub
mov
fucomp
lret
sub
fcompl
inc
fwait
mov
insb
dec
ret
mov
cmpl
hlt
pop
std
sub
sbb
inc
lret
aas
std
pusha
push
mov
xchg
cmp
enter
movsb
xor
push
repz
ljmp
add
sub
ret
add
arpl
lret
fildl
out
add
cld
pop
andl
cli
sbb
push
arpl
add
out
xchg
fsubp
xchg
fcmove
add
jl
lret
test
cld
test
or
xchg
sbb
push
dec
leave
cld
fadd
and
jp
push
int
in
shl
add
in
jne
fnstcw
lahf
jnp
add
push
or
daa
mov
mov
fwait
mov
iret
adc
insl
dec
pop
lock
adc
adc
movsb
pusha
add
aam
dec
cmpsb
fstl
mov
sub
mov
sbb
aad
mov
divb
std
mov
push
mov
push
cmp
xchg
xchg
mov
mov
jle
dec
inc
xchg
jo
imul
jle
call
lds
fsubrs
pop
fsin
dec
sti
pop
sbb
stos
in
push
push
sahf
xor
aas
test
fdivs
rorl
movb
rcrb
mov
cmp
cmp
pop
imul
xchg
and
mov
lret
sti
xor
cwtl
pusha
xchg
mov
pop
fldenv
xchg
add
mov
xchg
fwait
sub
std
push
pop
imul
popa
cltd
adc
cli
push
in
cmp
in
mov
or
push
pop
int3
xor
jecxz
mov
int
pusha
bound
cmp
mov
fld
jge
sti
pop
loop
cmp
repz
dec
mov
add
pop
decb
sbb
sbb
pop
dec
xchg
mov
pop
cmc
jbe
imul
pop
outsl
ds
mov
add
aas
inc
jns
pop
sbb
leave
and
fbld
cmpsb
push
adc
fcomps
or
push
jp
adc
loop
rcrl
push
mov
dec
movsb
dec
call
mov
xchg
fisubrs
in
das
add
popl
call
xchg
or
pop
cmp
pop
call
mov
push
inc
jbe
icebp
das
pop
adc
bound
sub
jp
popa
enter
mov
sti
jnp
jge
out
mov
add
mov
mov
add
jbe
sub
addb
outsl
imul
add
fstpt
movsb
mov
je
call
ficoml
dec
or
aam
pop
daa
mov
cmp
rcl
xor
jno
inc
jo
xor
addr16
gs
mov
push
jmp
xor
push
dec
pop
call
fdivrp
mov
frstor
mov
push
xor
das
mov
and
divl
cmpb
xchg
xor
push
jmp
rol
js
and
aas
lahf
lret
adc
dec
and
push
mov
xor
and
and
xor
mov
push
dec
in
dec
pop
out
std
aas
idivb
xor
xor
clc
leave
cli
mov
cli
jns
ret
out
and
sub
hlt
movsb
cltd
add
and
je
push
adc
jle
jp
push
xchg
rcrb
sbb
out
adc
shlb
and
sbb
xchg
adc
mov
fmull
cmp
jmp
mov
add
andb
addr16
addl
incb
out
cmp
mov
lods
lahf
pop
sbb
dec
in
mov
cmp
out
insb
jne
sbb
fildll
xchg
stos
cmp
xor
xlat
notb
xchg
in
push
popa
bound
fsubrs
ret
lss
dec
dec
mov
mov
mov
push
jge
jg
jge
sarb
movsb
and
add
insb
sti
mov
out
mov
mov
push
out
add
lds
data16
cwtl
push
inc
out
inc
xchg
test
jmp
mov
sub
icebp
push
gs
inc
push
sbb
loopne
lahf
std
sub
pop
mov
add
ret
sub
je
dec
add
fimuls
stos
testl
aaa
outsb
fwait
sbb
dec
pop
dec
add
xor
push
fadds
aas
mov
cwtl
dec
pop
aaa
es
jge
mov
adc
and
push
shrb
cmp
jge
inc
jo
add
push
push
addl
jle
mov
stc
dec
dec
or
ret
dec
rcrb
sbb
mov
dec
shrb
inc
jbe
pop
jl
out
mov
into
clc
loopne
aam
loope
adcl
lcall
insl
xchg
adc
shll
cmp
lods
and
sarb
sub
add
pusha
mov
cmc
and
push
clc
shr
inc
mov
out
adc
ficompl
dec
call
push
cmp
mov
push
iret
sub
je
loope
xor
cltd
out
pusha
mov
frstor
mov
jne
dec
insl
dec
fucom
pop
or
ret
jl
jge
sahf
cld
and
pusha
jns
inc
lock
loop
ljmp
addr16
test
jmp
loop
mov
addr16
push
insl
mov
jo
and
ja
mov
xrelease
dec
mov
hlt
pop
mov
mov
pop
and
sbb
mov
out
push
cmp
mov
nop
gs
mov
jg
cli
fisubrs
mov
sub
push
mov
stos
fildl
or
cld
jns
sbbl
jnp
pop
jle
inc
or
pop
lret
jne
cwtl
push
mov
movb
shrl
repnz
call
mov
push
mov
add
pop
xchg
loopne
inc
push
mov
loopne,pt
lcall
inc
lods
shrb
stos
xchg
push
push
pop
sub
es
ss
mov
sub
out
add
or
mov
xchg
fdivrl
inc
xchg
jp
jg
addr16
mov
cmpsl
addr16
cmp
aam
sub
mov
cmpl
hlt
dec
fsubrp
shl
inc
or
add
jb
mov
xchg
jae
mov
xorl
test
loopne
rclb
push
arpl
sub
iret
push
in
sub
xchg
fdivl
js
mov
mov
repz
sbb
fldl
inc
jnp
push
imul
mov
xchg
pop
adc
xchg
lods
adc
roll
arpl
pop
gs
cmc
xchg
xchg
mov
cmp
xchg
sub
insb
mov
test
jle
out
jmp
xor
jne
jns
pop
test
in
push
and
mov
fldpi
cmp
fildl
lahf
test
lcall
dec
pop
addr16
outsb
jecxz
scas
mov
test
push
push
out
pop
dec
adc
rcl
aad
push
jae
add
push
cmp
xor
ja
dec
inc
lahf
mov
cmp
xor
mov
lcall
out
es
fisubrl
dec
dec
or
and
fstpt
test
test
jmp
dec
lds
and
xchg
or
xchg
mov
pop
aam
push
jmp
cmpsl
pop
leave
jnp
cmpl
stos
mov
xchg
sbbl
jecxz
push
pop
les
fcmovu
dec
cmp
adc
pusha
dec
adc
and
dec
insb
movd
sbb
loope
pop
pop
cmp
movsb
jmp
mov
out
inc
lods
sbb
push
call
mov
xchg
stos
lods
mov
rclb
xchg
mov
cmp
pop
adc
in
pushf
sbb
lds
xlat
sbb
jp
adc
xchg
andps
sahf
push
std
dec
js
mov
jp
push
test
ss
testb
mov
loop
add
push
push
cmp
aas
xchg
or
nop
and
xor
mov
jbe
xchg
mov
xchg
cmpsb
sub
xor
nop
clc
movsl
dec
jno
out
sarb
stc
sbb
jmp
leave
adc
popa
jae
out
push
cmpsb
nop
mov
int
push
xor
in
lahf
leave
push
push
pop
call
or
sub
loopne
pop
mov
lock
mov
movsb
aad
inc
and
aad
imul
and
cmp
pusha
push
imul
out
fcmovnu
loope
out
xor
pop
test
popa
or
lcall
aas
imul
mov
xlat
mov
mov
sbb
rcrb
push
movnti
int3
sbb
push
dec
lock
fldcw
xchg
ja
iret
inc
js
lahf
add
divb
inc
xor
mov
pop
aaa
loop
ss
dec
sbb
sahf
mov
mov
adcl
in
pushl
cmp
or
mov
or
push
and
insb
xor
jl
xor
mov
movsb
sbb
sub
int3
pop
les
sbb
rcl
outsl
lret
rol
hlt
xor
dec
sub
xchg
and
mov
loope
pop
inc
aad
jl
stos
addr16
andb
pop
jmp
push
dec
or
ret
mul
pop
aam
aam
pop
lods
mov
enter
repz
mov
cmpsl
ret
inc
loopne
inc
sub
xchg
sub
and
xchg
xchg
sub
imul
sbb
inc
sub
sub
and
cmp
xor
jmp
inc
cmp
adc
sub
negl
adc
pop
test
movl
out
rorb
mov
or
jmp
mov
clc
loopne
cli
pop
dec
push
js
inc
rcr
int
iret
scas
lahf
cltd
mov
out
test
add
dec
xchg
pop
pop
movsb
add
push
sbb
xchg
pop
adc
out
aas
or
sahf
inc
cs
sbb
push
incb
popa
mov
sar
repz
mov
inc
jp
aaa
jmp
icebp
cmpsl
mov
xor
pop
inc
idivb
adc
out
imul
dec
xchg
push
or
mov
filds
mov
js
jmp
aad
mov
mov
lret
dec
into
stos
sbb
sub
out
mov
je
jmp
es
jb
push
lcall
mov
mov
cmc
jb
or
out
mov
dec
xchg
push
scas
loop
mov
movsl
loope
adc
sub
sub
add
pop
inc
scas
jge
jl
sbb
add
inc
icebp
mov
jno
lds
addr16
jle
fsts
loopne
outsl
rol
push
dec
mov
nop
fmuls
fwait
inc
or
xchg
movb
mov
inc
jo
adc
add
js
push
fadd
test
int3
iret
cmp
pop
lret
mov
push
push
push
dec
in
adc
push
andb
test
test
int3
mov
aam
sbb
adc
ss
and
adc
aaa
shl
sub
or
jb
nop
jno
cmp
stos
push
jae
sbb
out
es
mov
scas
ss
ja
and
out
xor
std
stc
fidivl
fxtract
or
adc
pop
pop
inc
ja
cld
mov
popf
sarl
xor
in
lahf
call
hlt
sub
and
stos
sti
leave
fistpl
div
xor
sbb
fsubr
dec
je
ret
mov
mov
jns
ss
xor
out
sbb
xor
mov
or
dec
push
out
dec
inc
cmpsl
lea
sbb
dec
in
sub
lahf
gs
push
call
mov
pop
mov
pop
inc
mov
cmc
inc
ficomps
outsb
rorl
or
fsubrs
iret
shrb
dec
pop
negl
cltd
gs
lods
push
inc
mov
gs
inc
sahf
add
cli
mov
adc
loopne
sti
aam
jnp
inc
clc
and
xor
nop
arpl
jmp
fistpl
sti
inc
in
outsb
repz
cwtl
jmp
mov
fisubs
movsl
sets
dec
mov
add
mov
pop
mov
in
incl
cmp
mov
lret
pop
mov
jle
fiadds
leave
mov
inc
fwait
insb
xor
test
xor
cltd
and
jg
pop
imul
ret
mov
js
ds
add
ret
out
pop
adc
sbb
push
repz
int3
sbb
clc
adc
sub
movsl
sbb
dec
pop
mov
adc
jle
mov
pop
addr16
push
adc
jp
adc
dec
mov
dec
pushl
xor
sbb
adc
rorl
daa
cwtl
xchg
mov
mov
sbb
in
sbb
lock
and
jmp
mov
divb
lock
data16
movsb
es
inc
mov
mov
pop
xchg
psubusw
xchg
fbld
sbb
jp
or
sbb
cs
dec
sti
push
stc
xor
xchg
inc
popa
mov
hlt
test
pop
and
xchg
and
shr
push
or
mov
in
inc
lahf
mov
xlat
hlt
andnps
push
nop
fstpt
mov
or
imul
jo
sub
pusha
add
popa
pop
jp
hlt
aad
sbb
mov
mov
sub
popa
bound
into
inc
jne
shrb
cmp
ret
test
xor
mov
xchg
ds
imul
xor
in
pop
push
aad
imul
push
add
push
icebp
cwtl
push
or
enter
mov
xor
iret
int
sub
lcall
loopne
pusha
inc
sub
adc
aas
jg
lcall
mov
frstor
xor
cmp
daa
mov
shlb
loop
xchg
rorl
jmp
add
sti
fwait
and
cmp
and
xor
sarl
rcll
or
ret
push
sub
stc
push
push
sti
shll
inc
fs
sub
je
cwtl
dec
inc
mov
add
cltd
cmpsb
daa
jb
clc
fidivs
aad
mov
in
push
cmpsl
mov
and
ret
icebp
sbb
xlat
xor
call
sbb
nop
ffree
ret
je
pop
mov
sarb
loopne
dec
cmpsl
mov
movsb
push
pop
icebp
mov
sub
xchg
sbb
pusha
mov
aas
aas
mov
call
movsl
aam
sbb
icebp
mov
xor
or
jg
insb
pop
mov
add
sbb
es
std
sub
test
mov
sbb
fstpl
lahf
test
sbb
orb
addr16
sub
add
add
mov
mov
push
popa
loopne
xchg
mov
cmc
push
mov
xchg
mov
xor
outsl
mov
pop
push
fsqrt
cmpsl
insb
insb
out
aaa
dec
or
mov
imull
outsb
stos
xor
fs
call
or
rcrb
sub
xchg
jmp
sti
or
add
push
addb
xchg
push
pop
rclb
xchg
push
test
js
add
push
sub
cmp
rorl
pop
scas
subb
push
add
je
scas
push
gs
out
shlb
inc
xchg
push
arpl
sbb
sti
push
cld
in
pop
xchg
loopne
inc
test
pop
xchg
and
xchg
cmp
mov
rcll
int3
and
xor
xchg
js
cmp
sarl
inc
jae
das
push
pop
mov
fisubrs
fistpl
adc
andl
or
mov
sbb
cmp
cmp
sbb
xchg
inc
sub
sbb
and
cmc
jnp
les
movsb
notrack
popa
jns
in
jg
pop
sbb
jns
call
cmp
jno
and
push
cmpb
or
sbb
jecxz
int
jmp
aam
or
or
mov
ret
xchg
mov
mov
sbb
pop
mov
sbb
and
add
scas
sarb
push
loope
mov
retw
scas
adc
rolb
add
lods
jb
push
jge
xor
sbb
and
les
pop
xchg
cmp
cmp
stos
adc
pop
loope
mov
mov
movsb
in
fnsave
das
lock
jmp
pop
jge
int
pusha
xor
adc
aas
divb
lods
mov
pop
inc
in
in
cltd
js
dec
jge
hlt
ljmp
fwait
xchg
adc
in
out
cmp
aam
mov
test
inc
mov
or
ret
pushf
das
mov
std
pusha
into
cmpsb
aad
nop
rcl
lret
mov
pop
aaa
fwait
int
into
shrl
sbb
jo
repz
jnp
fdivrl
pop
ss
adc
sub
push
das
imul
aam
pop
stos
mov
test
jnp
aam
push
flds
inc
cwtl
sbb
je
fidivs
pop
and
xor
popa
cmp
fnsave
cmp
imulb
imul
jecxz
ljmp
loop
imul
pop
mov
sbb
div
imul
pop
sub
jnp
das
inc
gs
sbb
nop
xor
imul
imul
inc
inc
pop
scas
fcomps
jo
ss
jnp
dec
adc
out
fbld
push
mov
pusha
push
ds
in
jle
xchg
iret
arpl
aas
cmp
in
mov
fildll
dec
iret
out
mov
mov
fidivs
push
cmp
xchg
sbb
push
push
test
xchg
enter
cmp
dec
pop
pop
jns
pop
in
mov
fldenv
push
pushf
pop
add
cmp
cmp
jl
testb
mov
and
por
std
mov
scas
ja
adc
fisubrl
mov
xchg
mov
cmpsb
js
jns
cmp
fists
or
adc
mov
push
or
cmp
leave
adc
loopne
pop
lss
or
sub
mov
dec
cmp
xchg
pop
jo
aad
push
loopne
pop
test
xchg
add
sub
or
mov
xor
out
into
das
or
mov
stc
push
je
dec
test
clc
sub
add
jnp
addr16
fsubl
test
punpckhwd
pop
fwait
mov
sub
inc
sub
sub
xor
xor
sahf
xor
add
into
mov
lods
insl
dec
daa
imul
push
add
mov
jle
jb
arpl
dec
or
push
jns
pusha
int3
add
cmp
fisubs
fwait
push
mov
loope
divb
cltd
repnz
cmpl
jecxz
mov
push
addl
dec
add
jp
lea
jns
repz
push
mov
fsubrl
decb
cmp
add
adc
loop
dec
sub
test
adc
adc
es
push
std
or
decb
push
dec
add
inc
pushl
cs
push
dec
lea
mov
imul
out
cmp
test
xchg
ljmp
pushf
fdivrs
pop
add
leave
imul
fwait
fwait
inc
jecxz
outsb
cmp
dec
mov
xor
inc
xor
dec
inc
cmp
mov
cmp
clc
xlat
movsl
pop
fcmovbe
inc
sub
mov
inc
lcall
push
pushf
je
lds
or
in
and
movsl
es
ror
pop
or
mov
out
inc
adc
inc
rol
sbb
ds
dec
inc
add
mov
movsb
adc
cmp
push
jle
xor
loope
cmpsb
inc
pop
jge
sbb
sub
xchg
stos
sbb
test
ss
ja
adc
dec
add
dec
outsb
jo
lea
fldl
xchg
mov
add
adc
pop
and
mov
push
repnz
sbb
popa
mov
jne
mov
mov
in
xchg
cmp
mov
and
cmpsb
jmp
out
jbe
xchg
push
or
push
movb
pop
and
sahf
fucom
out
pop
push
cmp
xor
aad
insb
inc
push
jl
ja
add
test
pop
es
pop
pop
das
ret
stc
inc
hlt
pop
shrb
cmp
mov
jecxz
adc
sbb
pushf
lock
mov
cs
or
stos
mov
dec
cmp
fs
inc
inc
sbb
sahf
cmp
mov
push
ljmp
xchg
mov
repnz
sub
dec
lret
mov
mov
inc
imull
ds
cmpsb
ret
cmp
lods
xchg
aad
iret
mov
sbb
cmp
push
out
or
ficomps
pop
push
push
rolb
scas
out
cmp
movsb
inc
test
and
inc
popf
out
jle
push
movsl
sbb
adc
push
repnz
mov
sbb
test
mov
pop
mov
test
adc
lea
mov
js
inc
mov
push
or
push
je
push
xor
mov
dec
xchg
out
mov
call
or
pop
add
inc
testb
sub
cmp
cli
adc
outsl
stc
fsubrs
or
pop
in
ret
test
jle
mov
cmp
mov
jno
xorl
push
pop
enter
or
mov
sub
andl
mov
dec
pushf
and
mov
pop
xor
push
inc
iret
cmp
insb
pop
xchg
out
and
clc
repnz
incb
lret
jns
xor
xorl
sbb
sub
insb
leave
mov
and
inc
and
repnz
cwtl
cltd
xchg
rep
jp
in
cmp
xchg
outsb
cltd
loopne
fisubs
test
dec
jnp
or
xor
xlat
dec
and
sbb
cmp
push
mov
mov
inc
fdecstp
xor
mov
or
inc
ja
pop
mov
lods
sbb
cmp
insl
dec
pop
cmp
outsl
nop
inc
xor
adc
push
fnstsw
testl
in
dec
fisttpl
ret
pusha
testl
sbb
mov
andl
leave
mov
sbb
ja
lods
push
pop
pop
sub
jle
cmovo
dec
sahf
stc
aaa
fcoms
in
mov
sti
pop
ds
stc
and
add
or
pop
sbb
in
sbb
sbb
xor
xchg
rorb
add
push
out
cmp
cltd
scas
pushf
push
repnz
lods
hlt
call
jno
orl
add
xchg
xor
mov
fld
push
test
xchg
cmp
xor
cltd
mov
cs
xor
jbe
fnstsw
jmp
add
ljmp
cmc
pusha
imul
mov
push
pop
jo
or
mulb
sbbb
xchg
add
mov
jbe
outsb
icebp
pop
mov
xchg
mov
sahf
sarb
sbb
jmp
test
cmp
lods
lods
lret
mov
fdivl
fmulp
xor
jecxz
loopne
mov
in
ss
inc
or
dec
aad
test
jg
addr16
fsts
or
cmovl
jle
bound
sbb
js
lret
cmpsb
mov
lcall
call
jbe
sahf
xchg
cli
insl
lods
test
cmp
xor
dec
imul
cwtl
mov
push
xchg
int
pop
and
daa
shlb
clc
gs
mov
mov
inc
sbb
pusha
xchg
rolb
pop
divb
daa
ds
jne
hlt
jb
or
jmp
xor
fimuls
scas
or
js
out
out
or
jg
sub
sbb
icebp
inc
pop
in
fsubs
in
dec
xchg
cmpsb
add
andb
mov
sub
jecxz
sbb
mov
fisttpll
push
sub
mov
sbb
jmp
sbb
pop
les
fisubrl
add
lcall
nop
cltd
dec
ljmp
mov
sub
sti
jnp
test
xor
or
mov
jns
nop
insb
sahf
cli
in
scas
and
xor
inc
push
inc
pop
and
and
pop
xchg
push
enter
adc
iret
add
sub
push
jge
and
pop
mov
push
pop
pop
sarb
push
xchg
mov
jno
scas
dec
cmp
movsb
jg
lds
adc
cwtl
pop
rorl
jne
popf
addr16
add
in
xor
xchg
or
xchg
dec
xchg
iret
jg
movsb
lods
mov
pop
ljmp
scas
int
jle
fwait
and
insl
insb
repz
int
int
iret
sbb
leave
aas
fildl
mov
xor
add
inc
add
xchg
fsubl
int3
mov
jae
pop
mov
mov
xchg
push
je
mov
xor
into
adc
pop
icebp
inc
inc
xchg
sbb
cmp
dec
popf
and
ds
pop
xor
add
cmp
sbb
cld
loop
daa
lcall
cmp
out
mov
jo
jp
push
sub
inc
popl
mov
test
sbb
insb
dec
sti
fnstcw
lret
cli
cmp
xchg
cmp
subb
aas
sarl
mov
xchg
sti
sub
mov
and
adc
outsl
add
fstl
push
inc
fldcw
sub
inc
sub
sub
movsl
repz
test
repnz
pop
ss
cmc
pop
and
aaa
and
orb
movsl
jno
lahf
imul
insl
cmpsb
imul
call
sahf
in
jg
outsl
sbb
lock
push
xor
lods
movl
fnstcw
inc
push
insb
loopne
cmc
xchg
lret
add
orb
mov
jo
sbbl
pop
mov
add
subb
fcompl
stos
push
xchg
sbb
push
int
popaw
aaa
adc
dec
test
lods
fdivrl
jle
jge
pop
pop
test
mov
imul
jb
addl
int
cwtl
movsb
xor
leave
js
sarb
dec
sbb
and
test
test
pop
inc
push
adcb
sbb
loopne
daa
sbb
fildll
jecxz
fldenv
mov
jle
jnp
fucomip
cmp
sub
mov
xchg
dec
xchg
sub
test
out
xor
mov
arpl
pop
fisttpl
push
mov
mov
or
push
jne
jl
cmpsl
mov
sbb
sbb
adc
mov
jg
movsl
rcll
leave
pusha
jno
xor
inc
bound
mov
inc
pushf
inc
add
jns
test
sub
pop
imul
addr16
pushf
jno
aad
sub
ret
jp
cmc
pop
loop
xor
pop
cmp
sbb
icebp
in
scas
dec
cltd
mov
mov
push
lcall
push
add
scas
shrb
xchg
and
or
notb
mov
jo
xchg
je
dec
push
iret
in
out
sub
int3
in
jb
dec
mov
mov
cwtl
and
adc
daa
cmp
jno
jbe
pop
mov
repnz
leave
xchg
sub
sbb
add
mov
cmp
mov
popf
sbb
push
mov
mov
aad
sub
xorb
mov
and
test
push
mov
je
cwtl
pop
sbb
repnz
sub
mov
clc
add
sti
es
push
loopne
in
cmp
sbb
xchg
adc
mov
mov
or
sti
add
push
sbb
fcom
sub
fnstenv
jecxz
inc
cld
dec
stos
jb
in
and
pop
cwtl
pop
and
lds
insb
xchg
lods
inc
and
int3
sti
hlt
jle
cmp
mov
cmpsl
pop
sbb
insl
xorb
inc
jmp
ficoms
push
inc
xchg
push
xor
js
lahf
rcr
inc
mov
mov
int3
mov
test
fstl
into
repz
aaa
jnp
jo
or
xor
sbb
jne
jne
dec
pop
in
push
gs
out
dec
mov
aaa
cltd
push
call
mov
dec
bndldx
push
paddsw
imul
popf
push
ja
lcall
or
pushl
lret
fdivr
push
mov
sub
and
inc
ljmp
push
test
daa
push
or
sbb
pop
stos
jp
movsl
cld
adcb
les
movsb
cs
jae
ja
test
call
mov
fstl
imul
clc
xchg
cmp
adc
push
cmp
icebp
cld
dec
xchg
fistps
mov
sbb
lods
and
mov
or
cld
jl
add
ja
lods
adc
sub
push
push
push
cs
cmp
cmp
mov
in
fistpll
pop
arpl
in
push
pop
cwtl
cwtl
stc
mov
or
xchg
daa
and
and
dec
popa
jb
xchg
scas
dec
pop
je
dec
add
mov
aas
push
push
fisubl
mov
iret
cmp
popf
shll
imulb
les
adc
add
sahf
outsb
mov
push
into
sar
scas
lods
sub
fdivrp
in
insl
push
jne
pop
pop
add
roll
jg
and
push
jecxz
mov
rorl
pop
dec
loop
lret
xor
out
xor
imul
and
leave
lret
pusha
cmpsl
inc
jmp
jl
mov
pop
and
popa
dec
popa
fldt
mov
lock
test
fsubl
jle
aas
jb
mov
sub
das
repnz
rcrl
jmp
and
test
inc
js
daa
je
or
lahf
inc
jg
mov
scas
cmp
inc
xorb
adc
cmpl
add
icebp
insl
mov
inc
cwtl
and
movsl
pop
mov
mov
jo
sbb
ror
out
scas
out
pop
imul
ja
test
cmc
inc
mov
sub
mov
test
or
and
push
dec
repz
cli
pop
add
or
repz
dec
out
mov
jg
dec
es
out
cli
mov
inc
inc
iret
pop
mov
sbb
xor
jg
mov
pop
lods
dec
jb
inc
add
dec
popf
push
inc
add
out
or
hlt
inc
pop
push
shl
push
movsl
lods
xchg
sbb
stos
subb
and
or
mov
sbb
cmpsb
pop
lods
test
pusha
pop
in
shlb
imul
pop
mov
mov
loopne
cmp
jg
popf
rorb
lods
and
and
pop
jecxz
sbb
test
sub
push
out
xchg
cld
int3
cld
into
lock
inc
repnz
push
jecxz
shll
cmp
pop
faddp
mov
or
fisttpl
stc
jnp
pop
push
pshufw
inc
pop
jmp
shl
jno
aaa
orl
mov
push
push
ljmp
mov
and
lahf
mov
cmp
in
aam
je
fcoml
lahf
sub
sub
lock
adc
jl
dec
xchg
mov
dec
xchg
mov
push
sbb
lea
sub
or
adc
xor
je
push
aam
int3
repnz
mov
mov
inc
inc
pop
out
aam
addr16
fldenv
jno
arpl
xchg
and
dec
repnz
inc
lahf
in
mov
adc
out
icebp
xchg
xchg
xor
bound
ss
inc
sbbb
test
mov
xor
mov
jno
into
add
lea
aaa
andl
mov
out
inc
rclb
fistpll
jne
inc
sbb
aaa
cmp
outsl
push
nop
jbe
mov
jl
mov
jns
xor
lea
cmpsl
pop
out
or
mov
int3
and
and
mov
pop
addr16
adc
jp
mov
cmp
mov
fstps
test
outsl
aas
xchg
sub
mov
lea
into
cmc
aaa
or
sarb
push
mov
or
mov
out
jne
pusha
sbb
xchg
mov
mov
mov
mov
icebp
jbe
or
aas
mov
mov
add
cld
or
jge
or
mov
mov
add
xchg
and
xchg
popf
push
aam
or
int
jle
add
out
xchg
rcll
adc
movsl
outsb
imul
andl
mov
hlt
popf
cli
ret
cli
lock
addr16
add
jecxz
pushf
adc
push
fs
insl
lcall
aad
pop
stc
pop
and
mov
roll
xchg
lahf
mov
pop
cmp
fistps
insb
shll
mov
loopne
mov
sub
mov
dec
adc
cmp
adc
mov
pop
testb
movd
ret
les
mov
adc
cmp
dec
icebp
loop
push
or
sub
jp
cmp
jl
enter
xchg
sbb
xchg
push
es
stos
jge
mov
cwtl
in
stos
shlb
mov
jae
insl
push
add
xor
out
cmp
or
cmpsb
add
inc
jo
addr16
cmc
rcr
icebp
sub
repnz
sbb
scas
adc
addr16
xchg
xor
pop
dec
es
inc
xchg
and
xchg
mov
mov
mov
test
or
call
fwait
pusha
mov
push
stos
and
std
mul
ds
fwait
mull
cltd
lds
test
adc
call
mov
pop
xor
ret
lods
insb
fsubl
dec
ret
dec
xor
adc
mov
lock
mov
popa
adc
lahf
pop
xorb
sbb
cmpsl
dec
xchg
sbb
inc
push
lret
hlt
loope
and
xor
dec
cmp
test
ficoml
test
mov
jns
loop
xor
loopne
sub
sbb
cmp
mov
sti
negb
sbb
xchg
fnstenv
xchg
xlat
shrl
enter
sub
mov
jl
mov
das
push
ret
sub
jae
fwait
jno
and
test
lahf
pop
popa
es
jo
mov
fs
mov
imul
out
sbb
or
inc
sub
gs
mov
xlat
push
ss
aad
aas
ds
enter
adc
fsubr
mov
and
cmp
hlt
and
sbbl
aam
dec
daa
sub
fistpl
inc
ja
jmp
stos
nop
adc
shl
iret
xchg
inc
xchg
inc
inc
jo
lods
popf
loope
push
lea
jbe
cmp
jnp
fs
ret
fdivl
pop
pop
mov
insb
or
jge
cmpsl
adc
sub
jg
inc
lea
popf
push
push
nop
fadd
push
pop
les
scas
add
push
popf
pop
stos
test
jo
test
scas
pop
test
mov
xor
inc
jbe
xchg
xor
sub
ds
and
or
out
or
jns
fidivrs
mov
push
or
daa
aas
mov
push
clc
int
sub
ror
mov
int
sub
loopne
dec
add
xchg
adc
cmp
loopne
cwtl
push
xor
popf
adc
push
jmp
pop
divl
dec
push
and
stc
fstp
xchg
adc
jne
or
in
mov
test
mov
cld
jle
lods
aaa
shll
and
and
rclb
pop
mov
mov
loop
clc
jg
mov
sti
and
mov
and
or
js
pop
push
mov
mov
push
lods
sub
add
dec
jo
inc
sub
repz
cli
mov
push
scas
push
out
js
outsb
xchg
sbb
clc
test
sub
test
movlps
lret
mov
jnp
and
lods
faddp
mov
stos
leave
fidivl
pop
sbb
sub
jno
mov
jl
out
xlat
mov
into
adc
pop
push
adc
pop
xlat
add
pop
xor
dec
and
in
jmp
push
inc
xchg
inc
stc
add
push
or
xchg
xchg
out
or
sbb
das
adc
pop
mov
in
xor
stos
test
shlb
pop
gs
repz
mov
stos
pop
pop
dec
movb
dec
inc
sbb
or
dec
cs
test
fldt
push
sbb
mov
sbb
in
mov
cmp
arpl
mov
inc
pop
push
push
lods
scas
mov
xor
jmp
push
jae
fstpl
inc
pop
dec
fadd
dec
pushf
and
addr16
xchg
xor
adc
mov
pop
dec
and
leave
aaa
aaa
cmpl
lock
fs
inc
lahf
pop
sti
loope
mov
out
cwtl
fwait
dec
lcall
cmc
adc
leave
cmp
xor
int
cmp
inc
jns
mov
fwait
or
mov
lahf
movsb
dec
ja
lahf
push
dec
xchg
test
dec
test
aam
inc
sub
jno
out
imul
pop
ret
push
jl
cmp
in
push
pop
iret
xor
or
cmpb
sbb
and
pop
cmp
insl
mov
mov
add
jbe
adc
xchg
ljmp
es
nop
mov
test
jmp
fsubrs
test
cmpsb
out
lret
mov
or
cld
loope
lcall
jmp
xchg
arpl
aad
jle
mov
les
call
outsb
pop
lret
or
movsb
cld
out
mov
mov
jbe
cld
adc
cmp
sub
dec
jg
add
aad
or
jbe
mov
ret
imull
mov
lret
aas
push
mov
and
inc
sahf
incb
sti
push
sub
scas
addr16
movsb
cmp
push
xor
inc
pop
push
add
test
lret
hlt
and
dec
fcmovnu
call
hlt
notl
fbstp
scas
pop
jne
mov
shl
or
sbb
xchg
xchg
inc
cld
subb
or
jns
mov
inc
cmp
inc
push
mov
lds
js
es
gs
lret
int
adc
pop
call
mov
stos
dec
shrl
xchg
pop
xor
jmp
sub
hlt
mov
push
jns
or
aaa
loopne
out
mov
out
andb
hlt
or
xchg
jno
or
push
sub
pop
scas
adc
pop
or
pop
push
not
sub
popf
arpl
movsl
jnp
test
stos
jns
mov
cs
jnp
adc
push
xor
add
xchg
and
leave
sub
xchg
aaa
mov
jg
xchg
and
decb
lret
addr16
mov
mov
jne
enter
sub
jbe
es
lret
jbe
mov
out
or
out
and
cs
sbb
cmp
jl
cmpsb
cs
cmp
gs
cltd
imulb
cwtl
mov
inc
and
test
test
imul
repnz
mov
jne
xor
mov
iret
add
ret
out
push
push
ret
xor
pop
jmp
cmp
fwait
inc
jno
and
inc
inc
in
addr16
sub
add
mov
sub
inc
sub
cmpsb
mov
mov
pop
push
adc
xchg
subb
cwtl
pop
cmp
shlb
ljmp
rcll
jne
loopne
jae
pop
inc
jge
and
ss
mov
fcomp
hlt
ficoms
leave
cmp
mov
inc
jne
test
sub
mov
js
cmp
push
cmpps
mov
lods
and
cmpsl
je
lods
out
and
inc
pop
scas
sbb
dec
jl
popa
inc
into
gs
or
sti
dec
inc
sub
lahf
cmpsl
shlb
subl
add
pop
fildll
adc
mov
fcom
jmp
mov
jp
cmp
ja
fcomi
xor
cmp
aad
push
xchg
subl
insl
cmp
jl
imul
xor
cltd
lds
pop
push
sbb
cld
inc
or
mov
mov
daa
lret
das
movsb
sbb
jno
lret
sahf
sub
jmp
leave
mov
pop
ffreep
test
mov
out
std
das
scas
add
xchg
add
xor
shll
add
imul
inc
popa
push
rcll
push
jo
or
and
xchg
inc
ds
inc
je
aad
imul
push
and
mov
adc
std
test
sub
mov
aam
test
int
sbb
dec
out
rorb
push
push
adc
dec
stos
and
mov
movsb
push
xchg
or
stc
push
insl
cmc
jae
or
inc
popf
xor
cli
push
cmp
int3
or
movsb
fs
bound
mov
lods
fwait
das
cmp
or
push
inc
pop
jbe
and
push
push
shrb
call
repz
jl
jnp
push
out
mov
or
movsb
fidivrs
xchg
outsl
je
test
outsl
jae
dec
cmp
push
cmp
fstp
inc
nop
jne
iret
arpl
rorl
mov
negb
pushf
dec
repz
mov
dec
cltd
mov
fwait
imul
repz
fldt
lods
mov
sub
aas
mov
mov
dec
int
sub
and
fucom
movsl
mov
add
rcrl
popa
jo
mov
iret
test
loop
cmc
scas
fs
cmp
test
in
xchg
jecxz
jge
jmp
push
mov
inc
push
popf
sahf
and
sbb
push
jecxz
mov
int3
pop
jbe
push
sbb
adc
or
dec
sbb
push
dec
jno
rorl
and
out
xchg
cwtl
data16
jg
dec
and
sbb
dec
nop
lock
dec
xor
cltd
xchg
adc
jbe
fs
aam
das
mov
pusha
popf
aas
push
and
xor
pushf
dec
ret
daa
pusha
jnp
mov
dec
pushf
out
or
in
lret
aad
sahf
mov
fld
iret
sar
in
mov
push
movb
enter
lcall
dec
mov
out
and
stos
lret
mov
decb
xchg
add
lret
popa
jo
xchg
scas
mov
add
mov
jge
nop
add
daa
push
jno
dec
ja
and
lods
jmp
repnz
mov
shrl
jne
jge
fiadds
mov
stos
pop
mov
jbe
mov
xchg
pusha
dec
cmp
scas
jecxz
dec
sbbl
orl
inc
push
sub
dec
popa
inc
sub
insl
add
push
mov
int3
adc
sub
xor
and
pop
sbb
push
bnd
sbb
mov
movsb
movsb
movsb
sbb
cmp
lahf
mov
sub
in
loope
iret
les
loop,pn
inc
xor
gs
inc
mov
jmp
inc
add
add
mov
sbb
xlat
cmp
jl
adc
or
bound
xlat
stc
mov
sbb
loop
insb
dec
adc
imul
push
xchg
push
fwait
outsb
xor
das
pusha
fsubrl
jo
xchg
cltd
jle
hlt
or
dec
call
cmc
out
testb
mov
sbb
clc
ret
add
adc
lock
dec
dec
and
xchg
test
inc
stc
push
adc
clc
xor
loopne
xorb
add
pop
jg
rcll
movsb
dec
push
or
pop
icebp
pop
push
xchg
cmp
pop
mov
add
mov
movsb
push
sti
loop
sub
scas
stc
add
lret
sub
loop
addr16
add
pop
sub
lret
adc
sbb
mov
adc
fwait
cli
mov
loope
add
sub
xchg
lods
jno
jmp
repz
rsm
ja
mov
adc
movsl
imulb
xor
sbb
mov
or
adc
rcrb
int
push
lahf
or
xchg
xlat
jne
adc
mov
out
cmp
and
push
cmp
sbb
int3
out
cmp
cmc
xor
sti
std
jl
call
mov
push
bound
fcmovb
arpl
lcall
cmp
movsl
adc
adc
shlb
scas
popf
dec
adc
out
sti
addb
rep
xor
adc
out
jmp
dec
lods
je
xchg
ds
sbb
cmp
stos
aas
xchg
or
inc
add
mov
adc
sar
mov
mov
dec
fwait
and
add
rorb
fstpl
mov
add
adc
mov
mov
push
data16
icebp
adc
push
movsb
push
scas
jl
jnp
leave
xchg
pushf
adc
jmp
cmp
jae
dec
mov
jne
shrl
jmp
imul
jle
push
inc
jmp
fwait
cwtl
movsb
cmc
pop
insb
inc
aaa
bound
xor
or
jne
mulb
push
xchg
ljmp
dec
outsl
add
insb
out
or
ss
pusha
inc
push
insb
mov
mov
cmp
jl
sub
out
mov
cld
test
push
and
outsb
adc
aaa
fwait
jae
jg
lea
inc
aam
sbb
rorl
cmpsb
or
mov
popa
lock
aad
ss
mov
adc
lods
push
pop
pop
push
or
imul
jmp
xor
xchg
movsl
push
jnp
jmp
lock
inc
mov
popa
out
out
js
lret
sbb
mov
push
fsubr
mov
and
mov
jb
leave
lds
mov
roll
addl
push
lods
fwait
adc
push
sub
test
xchg
dec
xor
or
xor
cmp
mov
ljmp
cmp
xchg
pop
fadds
movsl
sub
or
stos
pop
enter
mov
jmp
lcall
popf
lea
cmp
mov
scas
ror
jno
jnp
add
aam
xlat
and
jg
idivl
cmpsb
add
dec
push
shlb
pop
cmp
outsb
and
hlt
cmp
xchg
dec
sbb
xor
cmpsl
sbb
and
ss
sbb
pop
aam
lods
adc
or
and
xor
lret
hlt
jecxz
cmp
inc
fucom
cli
aad
pop
loop
daa
jmp
xor
or
popf
sti
repz
inc
pop
mov
repz
rcl
dec
xchg
repz
push
xchg
enter
add
mov
and
mov
mov
clc
loope
push
mov
mov
cli
fs
and
adc
addl
mov
call
hlt
mov
bound
mov
sbb
divb
outsl
pop
sub
mov
movsb
pop
repnz
rcrb
decl
jle
in
popf
outsb
aas
rclb
dec
dec
std
push
rol
lods
cli
test
test
lods
or
cmp
pop
mov
pop
push
mov
lods
adc
mov
cltd
dec
xchg
mov
fdivl
loopne
scas
mov
mov
mov
add
mov
dec
in
sbb
xchg
mov
or
leave
jecxz
inc
orl
sbb
adcb
or
pop
loop
popa
fstpl
adc
jno
inc
adc
fisubs
push
xchg
mov
loope
or
mov
mov
bound
jnp
add
lods
lods
andb
and
and
and
push
cs
mov
push
fs
dec
lds
or
xchg
xor
cmp
out
movl
dec
pop
lods
add
cmp
pusha
hlt
ja
js
aam
out
lret
dec
add
ss
repz
lahf
lahf
push
jge
rorb
loop
stc
pop
insb
mov
adc
popa
fimull
int
test
and
icebp
mov
sti
xor
rorl
push
popl
add
mov
xchg
stos
add
adc
jbe
out
fwait
cli
inc
insl
out
or
addr16
jg
add
dec
cmpsb
push
pop
push
inc
sbb
stos
jmp
cmp
sub
xor
mov
cmp
xchg
push
scas
mov
inc
pop
and
filds
push
aam
loopne
or
in
mov
out
sahf
jl
pop
or
push
ss
int3
xchg
xchg
or
push
cltd
cs
adc
test
xchg
adc
jns
xlat
rcr
int
incl
or
in
repz
cmc
xchg
mov
dec
pusha
jo
scas
inc
lds
jle
and
or
aas
cs
sbb
inc
inc
into
mov
mov
xchg
jmp
stos
std
mov
push
push
in
cld
cld
icebp
mov
ljmp
in
add
sbb
cmp
inc
addr16
fs
ds
into
ljmp
movsl
push
and
jecxz
push
push
sbb
popa
stos
jle
call
stos
push
dec
aam
mull
data16
scas
loope
mov
arpl
xchg
cwtl
add
push
dec
cli
cwtl
aad
ds
cld
xor
in
fucomip
decb
jne
in
pop
std
adc
mov
add
les
and
jne
and
mov
add
loopne
sbb
lds
adc
in
mov
xchg
xor
cltd
ljmpw
lret
pop
mov
ret
inc
xor
shll
mov
outsl
loop
sarl
mov
fstps
orb
sub
push
ror
add
xchg
icebp
test
mov
lret
or
add
mov
mov
icebp
out
cmpsl
add
rcrl
dec
mov
mov
and
shl
enter
nop
mov
orl
fisttpl
adc
inc
push
mov
movsl
sbb
jp
hlt
test
inc
testl
adc
add
aas
aaa
scas
push
jle
pop
xlat
mov
dec
jb
aad
inc
dec
stos
adc
shrl
shlb
fldcw
stos
jae
test
xchg
jnp
stos
lds
pop
out
xchg
push
lds
mov
xor
mov
mov
xchg
ficoms
jg
stos
aam
mov
sbb
dec
jb
movsb
pop
sti
test
fbstp
lods
cmpl
cmpsl
int
lahf
imul
or
jo
clc
mov
add
pop
shrl
data16
in
mov
movsl
shl
dec
dec
and
movsl
bound
rorb
mov
insb
pop
shll
insb
jne
xor
jbe
mov
cmc
repz
xor
addr16
inc
shlb
lahf
ret
push
das
or
xchg
pushf
push
push
and
imul
hlt
sub
movsb
mov
and
hlt
dec
scas
fucom
sub
jns
add
das
cmc
mov
xor
adc
cwtl
cmp
add
adc
cli
or
xor
mov
roll
roll
movsb
xor
shll
imul
mov
scas
lret
hlt
mov
and
loop
and
fs
hlt
call
mov
aad
std
and
mov
sbbl
push
xchg
pop
lret
and
movsl
sbb
out
adc
ja,pn
out
xchg
jg
lods
andl
je
xchg
outsb
cmp
dec
clc
add
repz
cld
loopne
repnz
cwtl
xchg
shlb
add
in
cmp
loopne
inc
xchg
fstps
xchg
or
xor
rol
and
cmp
sbb
adc
xchg
fdivrs
mov
pop
dec
cmp
add
push
xor
mov
mov
jo
jo
pop
lahf
das
xchg
pop
enter
mov
and
add
dec
dec
xor
xchg
test
in
cmp
cltd
into
mov
xchg
incb
jle
mov
lds
test
rcrb
sarb
xlat
xor
push
repnz
hlt
sub
dec
andb
mov
pop
inc
out
and
sbb
roll
xor
fistpl
clc
aad
inc
rclb
xchg
adc
out
push
fadd
lret
mov
fldcw
and
idiv
sbb
test
aas
sbb
repnz
xchg
jnp
ftst
mov
lods
cmp
data16
xchg
mov
sbb
je
jge
popf
adc
adc
dec
mov
leave
out
cs
call
stc
jle
jo
sahf
xchg
aas
sub
xor
arpl
jae
sbb
cmp
xor
in
pop
clc
int
fistl
in
fstl
out
in
dec
lcall
inc
or
pop
mov
push
arpl
fsubrl
dec
daa
adc
xchg
xor
sub
jge
aaa
mov
add
inc
mov
mov
xchg
scas
jns
in
add
aam
lret
push
je
int
aam
std
insb
jbe
cmp
fwait
popa
sbb
inc
lret
es
adc
daa
jne,pt
push
bound
or
xchg
sbb
push
sub
jmp
lret
pop
xor
outsl
aad
mov
cmc
jnp
daa
std
repz
push
insl
ret
push
inc
inc
imul
inc
int3
aam
xorb
lahf
in
dec
lods
insb
push
jnp
xchg
cli
push
out
arpl
pop
jne
jle
lret
dec
xchg
mov
pop
xor
negl
mov
and
flds
mov
dec
and
sbb
push
lcall
rolb
leave
mov
pop
sub
cmpl
jo
jns
add
mov
les
jnp
mov
loopne
outsb
fwait
pusha
imul
sub
jo
cmp
inc
inc
push
loop
mov
dec
out
leave
cmpsb
fadd
xor
jl
ds
int
jns
jg
addr16
out
push
popa
or
pop
adc
push
xchg
jmp
sarl
dec
mov
fimuls
scas
int
mov
pop
jg
call
mov
mov
mov
sbb
push
insb
dec
sbb
jp
or
imul
xor
mov
aaa
ja
jle
jae
adc
mov
cmp
sub
ljmp
dec
dec
xchg
xchg
cmpsl
xor
negb
lods
bound
sbb
xor
pusha
xor
mov
movsb
lock
ficomps
es
rclb
xor
pop
dec
ja
mov
fcmovu
fcmovne
and
mov
mov
jno
pop
push
push
std
sub
rorl
sub
mov
sbb
adc
cs
push
xchg
ret
incb
inc
insb
xchg
ja
xchg
xchg
push
cs
mov
xor
and
fnstsw
js
vhsubps
and
inc
xor
or
addr16
fiaddl
jae
mov
inc
mov
push
into
gs
pop
push
sub
js
scas
push
nop
scas
or
adc
sti
push
mov
iret
neg
leave
repnz
mov
pop
aas
cmp
loope,pt
inc
aas
scas
loope
int3
mov
pushf
sahf
andl
adc
dec
mov
add
shr
arpl
dec
scas
xor
cmp
sub
shll
inc
aas
cltd
aas
std
fisttpll
stos
rcr
stc
add
mov
and
mov
adc
pop
mov
push
xchg
es
bound
insb
and
inc
cmp
mov
sbb
lock
mov
sub
xlat
test
movsb
orl
fnsave
dec
adc
arpl
dec
pop
lret
mov
and
xchg
rcl
xchg
stos
in
ljmp
cmp
mov
mov
ljmp
mov
sbb
cmp
addr16
jns
mov
icebp
xchg
sub
es
in
mov
fxch
out
jle
xchg
sub
jle
aam
xor
dec
mov
mov
fwait
repz
push
push
add
pusha
in
jne
add
mulb
adc
bound
push
xor
stos
mov
mov
mov
mov
cmp
iret
lret
lahf
mov
inc
mov
xchg
rcll
ds
mov
push
sub
fcompl
sub
call
pop
imul
jo
test
sbb
jbe
xor
ret
push
xchg
test
pop
xchg
mov
arpl
push
pop
add
pop
cld
das
jo
in
mov
in
nop
and
or
fwait
pop
mov
cmp
push
test
mov
imul
rol
sbb
sbb
jmp
insb
xor
movntq
out
les
repnz
jle
jnp
jb
jg
cmp
push
stos
jns
test
jnp
fsts
test
jns
ljmp
xlat
cmp
iret
jnp
cmp
cmp
loop
cwtl
test
adc
dec
mov
inc
lcall
into
mov
pop
sbb
in
xor
cld
gs
into
xchg
xchg
mov
mov
sub
cmp
mov
dec
and
and
or
add
pop
andl
into
in
sahf
add
mov
fisttpl
insb
cld
jne
cmp
ss
fs
repz
stc
dec
insl
int3
fidivrl
sbb
imul
enter
jmp
pop
fmul
int
loop
and
adc
sbb
shrl
push
out
pop
imul
lcall
sbb
pusha
not
jo
sub
cmp
in
repnz
mov
cmpsb
lock
shll
lea
dec
nop
pop
das
mov
xor
adc
or
scas
lcall
add
jbe
imul
sub
icebp
in
lcall
and
or
mov
xlat
pushf
jae
cld
add
sbb
es
mov
dec
iret
pop
in
repnz
clc
or
xor
and
cmc
mov
sahf
inc
hlt
push
movsl
out
out
sti
lds
mov
jmp
fcoms
adc
dec
jle
adc
or
mov
lret
mov
adc
cld
adc
fs
xor
sub
stos
sub
iret
adc
lret
xor
data16
pop
push
loopne
stos
loop
push
sbb
aas
test
jae
xchg
push
mov
cmpsb
adc
mov
add
pop
stc
ret
ljmp
call
fimuls
mov
xchg
or
pop
int3
pop
fmull
cmp
cs
lcall
pop
jge
les
test
subb
jae
movsl
insl
pushf
test
mov
jge
xchg
lret
lods
rcrb
pop
mov
add
stos
popf
lret
adc
stc
les
inc
add
xchg
dec
push
lahf
inc
mov
fistps
fstpl
push
mov
sbb
push
test
mov
addr16
sar
fdivrs
jae
arpl
adc
ret
scas
and
push
test
push
lea
push
sub
mov
int3
lds
dec
cmp
test
add
cmc
push
inc
add
pop
sbb
mov
call
imul
dec
insl
push
mov
push
pop
pop
loope
out
and
sub
mov
jae
lret
mov
mov
in
cmp
dec
sbbb
cmp
aam
insl
mov
xchg
mov
mov
ret
movsb
jecxz
xlat
pop
out
mov
outsb
gs
loop
incb
cmp
sbb
jl
sbb
in
mov
outsb
ss
lret
lds
dec
adc
jae
mov
aad
xchg
sbb
stc
rcll
jno
xchg
rep
mov
push
loop
ficomps
jo
lea
push
push
aas
insb
jbe
ret
fs
cs
ss
pushf
and
xor
dec
cmpsb
sbb
fisttps
out
cmc
or
sbb
mov
adc
add
out
xchg
cltd
mov
ret
in
sub
or
push
out
xchg
ret
popa
mov
push
sub
lods
mov
dec
xor
mov
mov
fs
and
cli
push
gs
push
mov
scas
out
xchg
ss
test
leave
jge
pop
inc
sahf
adcl
push
jp
nop
mov
and
je
mov
gs
nop
adc
jg
arpl
inc
fistl
sub
push
das
or
jb
shl
inc
outsb
enter
mov
int
lret
pop
int
cwtl
out
mov
cmpsb
cmpb
scas
xchg
cmc
mov
stc
jnp
cmpsl
loop
push
or
loop
out
outsl
nop
push
cmp
out
out
insb
leave
mov
lret
lods
xchg
icebp
cmc
hlt
lret
or
imul
sbbl
rolb
icebp
icebp
or
inc
push
mov
dec
call
add
fs
jecxz
add
mov
sbb
leave
dec
cs
inc
and
mov
xchg
je
cmpsb
mov
inc
lds
sub
clc
cld
xchg
into
cli
int3
xchg
xchg
cmp
xchg
mov
outsl
add
mov
fnstenv
adc
out
out
clc
shll
js
stos
xor
push
mov
push
and
mov
jae
pushf
push
pop
in
add
jb
test
inc
fbld
and
js
jl
dec
push
push
adc
test
sbb
loope
mov
pop
lcall
adc
jb
popl
scas
popa
es
add
add
mov
les
mov
pop
cmp
sbb
jge
add
xchg
cltd
or
enter
mov
add
test
lds
sub
mov
and
jb
addl
xchg
out
push
ret
outsl
push
decb
shlb
cmpsb
inc
iret
fstpl
dec
in
push
mov
imul
mov
pusha
dec
xchg
adcl
pop
lcall
and
lret
adc
std
xchg
js
movsl
xor
push
sbb
outsb
inc
mov
bound
mov
movsb
stc
out
in
dec
cmp
imul
push
fstpt
push
mov
and
xor
xchg
and
inc
outsb
sub
sub
fmull
jnp
xor
jmp
aaa
cmp
push
pop
mov
or
out
dec
or
or
push
das
in
add
loope
sbbb
mov
sub
sbb
lds
and
shl
aad
or
mov
pop
lods
xlat
das
cwtl
hlt
push
xlat
out
sbb
push
rorb
jmp
pop
pop
push
lock
mov
cmpb
inc
xchg
xor
push
test
stos
cmpsb
bound
sbb
inc
fbstp
cmp
mov
sub
dec
cmp
pusha
push
call
dec
sub
push
insb
pop
mov
aas
add
add
and
clc
dec
mov
bound
subb
mov
dec
insl
or
or
ss
int3
pop
lea
jbe
int
jns
push
lret
popf
stos
imul
imul
sbb
jp
adc
mov
xor
ja
inc
sbb
int3
push
addr16
dec
mov
lea
repz
cmpb
push
mov
dec
inc
inc
rcll
mov
fstps
inc
popa
ret
dec
incb
add
pop
mov
adc
aam
fwait
and
into
xor
adc
push
push
fs
add
xor
aam
jmp
out
ss
ficoml
fadd
mov
sbb
hlt
out
or
lret
xchg
fildl
pop
mov
mov
icebp
inc
pop
ja
jnp
jmp
push
pop
fidivs
out
cli
cmpsl
and
pop
ret
or
jmp
jae
pop
subl
mov
sahf
stos
and
ljmp
rclb
lahf
pop
iret
repnz
inc
adc
push
sub
icebp
stc
mov
jl
popl
lcall
notl
xchg
loope
sbb
fdiv
adc
xchg
push
nop
push
mov
jg
popa
cwtl
aam
insl
pop
repz
loope
mov
es
fsub
add
lds
and
push
jle
inc
adc
sub
jo
xchg
push
cld
leave
xchg
xor
loop
icebp
and
jge
mov
test
scas
packssdw
hlt
mov
inc
mov
xchg
movsl
fnsave
pop
and
jp
rcr
xchg
pusha
jl
movsb
test
adc
xchg
sbb
popf
mov
arpl
lds
std
ljmp
lcall
xor
pop
mov
jg
sub
and
or
loope
stos
mov
in
shl
xchg
or
scas
pop
xchg
movzbl
xchg
dec
mov
pop
pop
jp
inc
out
daa
in
movsb
sti
add
lods
pusha
cmp
adc
mov
loopne
lock
jne
inc
or
dec
pop
mov
lock
xchg
lret
cmp
mov
scas
dec
xor
movsb
gs
sub
insl
test
xor
orb
divb
push
xor
adc
sbb
aas
ljmp
add
out
or
lret
repnz
or
and
test
int3
and
pop
lret
push
mov
add
mov
sbb
cmpsb
jns
sub
and
pop
dec
mov
rorb
iret
sub
adc
pop
dec
mov
repz
stos
int
jne
mov
xor
mov
ficoms
stc
cmp
sbb
xor
dec
mov
xchg
lock
bound
jno
sahf
stc
dec
sbb
mov
rol
pop
fldcw
xchg
cmp
cmp
mov
inc
xchg
cld
loope
testl
subb
and
jne
add
outsl
push
sub
int3
mov
xlat
fcmovnbe
movsb
inc
insl
xchg
bound
cs
mov
insb
paddusw
mov
xor
xorb
stos
sub
clc
popa
clc
stc
rcrb
test
xlat
int3
sbb
pop
xchg
fs
dec
ss
add
mov
jmp
sti
xor
mov
lods
push
call
jno
sahf
stos
sarb
push
in
rcrb
bound
lcall
mov
scas
dec
lcall
insb
jae
lds
cmpsl
xchg
pop
cmpsl
repnz
out
das
sbb
add
add
pop
mov
in
shll
jae
in
xchg
fcmovu
mov
mov
mov
repnz
pop
stos
dec
xchg
mov
data16
mov
jecxz
mov
mov
aaa
pop
inc
bound
xor
ds
dec
mov
push
mov
cmp
test
add
dec
jg
popf
ja
mov
mov
sbb
aam
pop
les
sahf
lods
cwtl
push
and
mov
pop
cmp
dec
aaa
out
punpckhbw
ret
popl
loope
xor
gs
pop
ret
hlt
push
push
aam
sub
subb
sbb
or
movsl
ljmp
xchg
movsl
adc
fdivl
push
filds
arpl
arpl
adc
mov
subl
xchg
or
mov
push
pop
popf
clc
sahf
cmc
cli
mov
or
sahf
push
in
mov
xchg
push
mov
pop
popf
xchg
and
divl
xor
cmpsb
test
and
sub
dec
lret
sbb
movsl
pop
fdivl
in
inc
pop
movsl
gs
ja
sbb
dec
push
repnz
jle
ds
pop
dec
into
inc
pop
fstl
out
mov
push
push
fcomps
int3
ds
addr16
mov
stos
or
dec
repz
add
cmp
xor
sub
or
inc
fstpt
dec
pusha
outsl
aad
or
cltd
enter
loop
mov
bound
lahf
xor
aam
cmp
push
mov
scas
into
sbbb
sub
loopne
jnp
scas
sub
mov
cmp
js
ficompl
call
fwait
mov
pop
mov
pop
cmp
cs
jb
imul
mov
insb
sbb
inc
or
scas
lds
loopne
je
mov
xchg
scas
inc
push
cmp
inc
push
dec
push
outsl
or
dec
out
js
mov
por
dec
fisttpl
daa
jp
pusha
and
and
mov
or
aad
fidivs
mov
movsb
fstps
cmp
fdivr
dec
cmp
int3
inc
fwait
or
add
insb
pop
sbb
xor
out
leave
lret
push
sti
aas
adc
pop
inc
in
ror
mov
and
sub
pop
insb
or
sub
sbbb
in
cmpsl
out
pop
xor
mov
sbb
cmpsl
add
pop
outsl
mov
dec
push
mov
scas
mov
xlat
pop
or
fisubrs
sahf
pop
adc
and
repz
test
pop
jl
inc
insb
adcl
mov
clc
xor
pop
jmp
sti
loop
pop
cmp
test
cmpsb
sbb
out
scas
push
mov
push
xchg
lods
pop
add
push
xchg
je
test
pop
into
mov
and
jbe
dec
push
cmc
das
iret
movsl
test
push
enter
and
idiv
fidivrl
jo
bound
xchg
push
mov
mov
pop
mov
sbb
jle
ss
mov
jg
js
jle
dec
pop
jns
loop
stos
xchg
outsb
repnz
mov
sar
ljmp
out
add
jnp
repnz
add
shlb
dec
mov
data16
ficomps
xchg
xorl
scas
test
pop
xor
fxch
push
andb
mov
enter
data16
mov
outsb
xlat
popa
aad
or
in
popa
shr
rclb
imul
movsb
fnstenv
cltd
jbe
xchg
cwtl
fistpll
cld
mov
inc
stos
fs
inc
int3
or
cli
dec
jno
mov
int
push
mov
rcrl
insb
adc
pop
xor
fstpl
pop
push
sahf
icebp
out
xchg
pusha
xor
fsts
jge
or
xlat
lcall
fnstenv
mov
data16
mov
add
inc
mov
add
fsts
mov
mov
loopne
repnz
mov
icebp
mov
ret
dec
add
js
inc
nop
orl
out
rep
insb
rcl
out
popl
stc
sub
outsb
cltd
xorb
jecxz
inc
mov
clc
cmp
cmp
cld
cmp
push
test
sub
int
fs
dec
sarb
jb
xchg
cmp
push
rolb
and
or
sbb
xor
or
inc
movsl
push
cwtl
lret
mov
imul
add
add
cmp
mov
cmp
jns
pop
fnstenv
jnp
push
or
lea
and
or
fdivl
ficomps
test
jge
xlat
lods
mov
sti
sbb
sahf
mov
lcall
mov
pop
repz
adc
fldt
and
dec
mov
and
xor
pop
mov
ss
scas
popa
pop
sbb
pop
jns
jns
scas
test
pop
mov
and
cltd
mov
pop
xchg
int3
pop
sbb
lea
fistl
mov
or
or
imul
xchg
lcall
mov
cmp
ficompl
push
mov
jbe
pop
shlb
sbb
sbb
pop
inc
mov
xor
faddp
in
outsb
add
or
push
inc
das
inc
mov
jns
std
dec
or
and
cs
outsb
into
mov
adc
cmp
lods
push
mov
repnz
cmp
dec
shrl
adc
jae
negl
popa
mov
pop
add
jae
movsl
or
cld
pusha
mov
cmp
rorb
mov
sub
popa
into
scas
push
xchg
and
sahf
repnz
scas
pushf
xchg
inc
nop
add
sbb
inc
pop
pop
cld
jmp
xchg
cmp
rcl
dec
ret
adc
pop
lcall
pop
popa
push
inc
test
or
sub
cmp
pop
mov
push
mov
leave
loope
icebp
idivb
xor
and
pop
mov
push
out
dec
movsb
cmp
ret
aam
mov
xor
imul
or
xor
fcomip
stc
js
and
movsl
dec
icebp
addr16
into
mov
xchg
push
jmp
add
xorl
aaa
stc
dec
popa
xorl
bound
das
or
daa
outsb
jmp
ja
out
push
shlb
fbld
jae
inc
fwait
push
shlb
popf
popa
sbb
lcall
outsl
inc
mov
inc
sti
or
sub
inc
inc
add
lea
mov
mov
xor
cwtl
xor
jno
mov
mov
push
xor
test
mov
add
cmp
xor
ljmp
xlat
cld
lea
sbb
pop
xor
adc
xchg
dec
in
xchg
pop
mov
xor
in
pop
push
cld
and
adc
xchg
xor
aad
in
add
rcrl
sub
test
pop
test
jge
aad
out
scas
ret
jge
mov
pushf
cmc
push
test
in
or
jb
mov
xchg
sbb
jge
pop
inc
out
iret
sub
push
inc
add
mov
jb
sub
xor
lds
push
stos
sub
incb
jno
jae
xor
adc
ja
inc
sub
lcall
ret
dec
mov
cmpsl
fstl
popf
cmp
shrl
pop
or
mov
xor
loop
xor
loop
lods
dec
std
addb
popa
js
into
mov
push
js
push
cwtl
imul
test
pop
xchg
jnp
sahf
inc
mov
nop
jns
adc
insb
jns
mov
jmp
cli
incl
in
out
cs
adc
rol
mov
pop
rorb
xchg
nop
fwait
adc
insl
iret
jmp
jo
jae
outsb
sub
test
and
mov
in
lret
int3
subl
mov
inc
jo
int3
dec
xor
cs
inc
add
fldt
inc
mov
cld
iret
cld
sub
das
mov
xchg
stc
dec
cmp
push
aas
inc
ss
sub
push
pavgb
mov
xor
pop
test
xchg
or
idivl
lahf
out
inc
jmp
xlat
pop
mov
pop
mov
dec
cmp
jge
mov
cltd
test
jns
xchg
cli
adc
dec
sar
ja
adc
dec
and
std
mov
js
jae
daa
xchg
in
ret
pop
daa
mov
repz
mov
push
gs
test
dec
inc
sbb
orl
pop
movsb
insb
mov
sbb
sub
lods
jl
xor
pop
jns
pop
cmc
je
pop
xchg
jb
stc
imul
hlt
jecxz
xchg
push
fnsave
divl
sbb
or
outsb
rcrb
test
popa
jns
fisubrs
pop
add
cld
cmp
jno
mov
out
dec
mov
xor
int3
mov
or
mov
mov
decb
out
hlt
dec
leave
testl
scas
jnp
pop
inc
sbb
sub
mov
shl
jge
popf
pushf
add
ret
mov
mov
aaa
pop
es
or
popf
jb
inc
xchg
sbb
sbb
jo
addl
push
cmp
movsl
aaa
sbb
iret
add
inc
lds
add
addr16
adc
mov
jp
or
and
pop
dec
in
cmp
mov
add
add
imul
sub
cltd
ljmp
aas
push
push
sub
mov
and
xor
mov
fcoms
repnz
test
or
pop
jge
mov
cmpsb
and
fs
cmpsw
movsl
cmpsb
add
and
fbld
pop
or
mov
add
in
jo
cmc
int3
ja
clc
fsubrl
loope
int3
pop
mov
dec
or
je
fldenv
lea
xchg
int
pop
call
xchg
adc
add
jns
mov
in
call
pop
xchg
in
sub
stc
mov
inc
sbb
pop
cltd
adc
or
add
xchg
xor
shlb
push
daa
les
sbb
adc
out
cmpb
fcmovbe
sahf
or
dec
push
pop
jle
mov
mov
test
mov
pop
push
pcmpeqw
jmp
add
xor
fsubl
push
aad
stos
sub
decl
incl
es
lods
push
jecxz
push
repz
repnz
mov
sbb
sbb
xlat
mov
mov
jle
xor
out
hlt
and
push
mov
push
aam
push
lods
mov
jl
jno
mov
pop
imul
insb
inc
cli
test
enter
mov
testl
test
ror
addr16
jmp
cwtl
add
fwait
mov
or
or
xchg
xchg
pushf
lods
mov
adc
dec
mov
lds
mov
jns
add
aas
mov
sub
cmp
aad
imul
mov
jno
jle
mov
mov
mov
mov
std
insb
dec
jne
fldcw
sub
sbb
mov
adc
cmpxchg
push
dec
repnz
jmp
fstl
sti
in
or
imul
movsb
and
mov
add
test
pop
lea
add
inc
cld
pusha
mov
dec
push
push
cmp
pop
ljmp
and
xor
cmp
cltd
outsl
cmp
pop
fidivl
inc
fstps
xchg
cltd
push
ret
mov
dec
call
inc
jg
mov
std
std
mov
push
push
sub
mov
dec
ds
inc
jg
sbb
adc
lds
ljmp
into
push
cmp
fmull
and
pop
or
sub
xchg
mov
icebp
jmp
jecxz
mov
lock
dec
mov
rol
sbb
mov
push
sbb
loopne
sbb
inc
mov
imul
dec
and
and
mov
mov
ds
out
pop
mov
dec
jecxz
sub
jbe
mov
push
pop
mov
icebp
movsb
cmp
adc
lcall
dec
stos
rcll
cltd
add
bswap
and
jecxz
sub
xchg
cmp
jecxz
and
sbb
in
mov
jle
xor
shll
shl
lcall
loop
fisttpl
dec
mov
out
sub
fwait
push
scas
adc
push
mov
xor
mov
mov
cmpsb
mov
mov
das
stc
jl
adc
jne
mov
es
or
bound
and
add
sbb
jge
sub
movsl
fcmovb
lods
xor
pop
dec
mov
ss
jns
push
test
pop
fwait
lock
push
inc
mov
imul
add
pusha
and
lret
xchg
mov
out
mov
adc
mov
dec
mov
mov
repnz
int3
cmp
adc
xor
push
xor
sbb
std
jmp
xchg
shrl
sbb
mov
jb
out
js
fs
mov
arpl
cld
pushf
xor
sub
ljmp
pop
insl
adc
orb
pop
pop
pop
sbb
dec
xchg
xchg
adc
cmp
sbbl
sub
inc
xchg
and
imul
adc
mov
xor
or
mov
inc
or
enter
mov
cltd
jge
or
cmp
out
xchg
sbb
data16
xlat
and
ja
gs
adc
mov
repz
mov
cmp
sarb
jno
iret
jo
pusha
inc
in
jmp
movsb
jo
iret
ret
jne
sub
outsb
repz
lds
xchg
cmc
aas
or
push
mov
cwtl
xchg
mov
fmuls
mov
gs
xchg
jle
sub
outsb
pop
fisubrl
push
negb
sahf
mov
test
pop
xor
push
xor
cltd
pop
push
push
popf
cmp
xor
push
sub
clc
xchg
adc
push
js
mov
pushf
mov
sti
mov
xor
jge
mov
push
push
inc
dec
lret
leave
and
push
mov
in
jl
push
cld
test
fsubrs
push
loope
xchg
bound
andb
fxch
dec
cs
pop
cmpsl
xchg
xor
and
test
or
push
cltd
cmp
lods
mov
xor
enter
out
mov
pop
andb
repnz
xor
cwtl
add
lret
negl
outsl
pusha
clc
fsub
adc
sahf
dec
cmp
ss
call
mov
inc
pop
jle
inc
and
es
ror
jne
fldcw
push
outsl
scas
shlb
mov
jmp
es
jbe
push
dec
fiadds
adc
pushf
mov
aaa
xor
ret
xchg
pop
or
cmp
sahf
jl
stos
xor
mov
inc
imul
je
loopne
fisttpll
scas
pop
mov
daa
fmul
int3
bswap
js
cmp
out
sub
mov
sbb
inc
jecxz
je
xchg
addb
movsb
mov
test
add
bound
xor
sbb
push
in
es
filds
cs
pop
sbb
jne
xsaves
mov
pushf
mov
or
js
ret
popa
in
les
fsts
pop
inc
inc
add
mov
sbb
pushf
addb
mov
jae
outsb
orl
push
popf
mov
neg
dec
clc
iret
xchg
jne
inc
arpl
and
mov
xor
mov
sub
aam
cmp
xchg
mov
ss
mov
jle
mov
lods
lea
cmpsb
xor
gs
fnsave
in
mov
xor
cmpsb
xchg
dec
imul
aas
test
pop
cmp
mov
or
inc
fildl
mov
mov
dec
push
xchg
add
mul
int3
inc
dec
mov
lods
mov
or
or
test
mov
jb
imul
or
adc
fs
jge
sub
mov
pop
sbb
push
sbbl
addps
sub
lds
inc
mov
dec
add
add
and
push
mov
mov
push
sub
or
ds
scas
aad
incb
jecxz
and
mov
sbb
mov
mov
test
fidivrs
fucomip
daa
sbb
push
std
adc
mov
dec
xlat
or
rolb
out
ret
jg
flds
push
sbb
xchg
pop
and
add
and
cmp
out
dec
jo
sar
cmpsb
mov
dec
dec
push
int3
push
shl
lcall
push
jo
lcall
scas
fcomps
daa
mov
pop
lock
js
out
and
int3
inc
in
stos
aaa
sbb
std
and
push
mov
jg
leave
jl
outsb
dec
insb
int3
test
push
xor
mov
ret
inc
sbb
aad
daa
mov
sbb
inc
imul
shl
test
mov
cmp
xor
push
pop
das
push
sub
xor
or
sti
push
lret
imul
pop
xor
fs
mov
out
loop
lret
test
movsl
push
loop
nop
xor
daa
jge
and
add
hlt
in
test
or
push
lea
dec
orl
mov
mov
dec
icebp
sbb
test
jbe
icebp
inc
addb
mov
push
pusha
lea
mov
in
cmp
int
sti
loop
outsb
fistpll
test
stc
push
testb
inc
js
ja
sub
and
stos
cmp
ja
inc
sahf
pop
mov
jl
repz
das
and
fwait
lret
mov
add
stos
addb
or
es
rcrl
jae
movsb
ljmp
dec
out
rol
out
and
sbb
dec
leave
lret
loop,pn
jg
dec
pop
das
or
clc
sub
sti
xchg
sub
ret
fistpll
iret
adc
jne
xorl
or
pop
mov
mov
xlat
outsb
pop
xorl
push
fwait
dec
shl
cmpsb
fwait
and
mov
ss
mov
icebp
sbb
nop
xchg
xor
mov
adc
push
ds
rcrl
daa
add
clc
dec
fbld
push
or
inc
cmpsb
popf
ret
mov
dec
call
inc
mov
test
in
cmp
mov
mov
add
xchg
ret
or
push
sub
sarl
mov
and
inc
push
arpl
subb
aad
jecxz
xchg
iret
adc
cmp
cmp
sbb
icebp
push
push
adc
xor
pusha
sbb
and
jae
mov
popf
or
nop
mov
mov
dec
cmp
mov
testl
popa
jg
ret
ret
mov
into
fbstp
mov
push
fists
outsb
loopne
pop
add
fstps
push
xchg
xor
ss
mov
movsb
inc
jnp
imulb
out
dec
insl
fs
subb
imul
jbe
sbb
test
vxorps
mov
and
scas
cltd
loopne
mov
lcall
cltd
xlat
inc
push
adc
adc
push
sbb
pop
fwait
dec
mov
push
repnz
add
aaa
je
dec
lods
cmp
mov
xor
iret
shll
aad
in
bound
mov
sub
push
inc
js
mov
sbb
jge
adc
test
inc
pushf
clc
in
clc
lods
push
pop
pop
out
loopne
adc
xchg
pop
jb
adc
aam
cmp
mov
cs
and
and
or
adc
jae
mov
daa
sub
icebp
adc
push
mov
add
push
mov
or
sarl
adc
cmpsl
pop
push
aam
imul
cmpsl
fcmove
mov
dec
stos
mov
int3
cmp
iret
jp
mov
add
mov
dec
dec
mov
cwtl
push
imul
and
nop
jmp
mov
lret
sbb
into
jmp
test
lods
out
dec
adc
jnp
pushf
mov
pop
addr16
jmp
jmp
mov
je
xor
adc
dec
jl
jecxz
xor
mov
inc
sti
mov
je
jnp
gs
mov
daa
fdivrs
dec
mov
in
or
cmp
leave
ret
and
or
mov
es
frstor
add
push
inc
jne
and
hlt
fs
mov
ds
ss
mov
ja
push
fwait
lock
jmp
push
adc
scas
sub
cmp
shlb
mov
insl
jb,pt
test
in
cmp
aad
mov
cmp
cmp
test
jnp
jl
pop
les
or
addr16
int
and
das
xlat
lods
mov
jge
cmc
in
rcrl
push
mov
push
mov
pop
mov
in
pop
push
les
dec
imul
in
pushf
cmp
dec
push
hlt
loope
aam
push
xlat
js
or
push
jecxz
fildl
cmpsl
cmp
pop
mov
push
repnz
out
ljmp
pop
mov
mov
mov
push
mov
lcall
pop
sbb
scas
je
in
daa
and
shlb
lods
add
test
mov
rol
sbb
scas
adc
ret
xor
sub
outsb
mov
jne
ja
push
loope
sub
jge
cmpsl
sub
shrl
sti
jp
xor
dec
dec
cmc
loop
lds
xchg
mov
aas
test
push
ficompl
les
sub
cmp
add
add
leave
leave
jo
out
inc
mov
push
dec
push
call
fnsave
push
test
dec
mov
ret
imul
push
and
sub
ds
lods
and
add
mov
mov
lds
jns
movsl
lds
push
xchg
test
jnp
int
adc
sbb
dec
adc
mov
repnz
stos
int
xchg
imul
call
cmp
pushf
lret
mov
jecxz
clc
pusha
mov
ret
xchg
stos
inc
movl
stos
pop
mov
cmpsb
cmp
aas
sbb
cmp
inc
lock
aad
int
es
test
outsb
push
inc
insl
adc
inc
js
push
or
push
jmp
into
push
sahf
stos
add
jge
jno
mov
les
push
xor
bound
sbb
jl
or
sahf
lret
insb
adc
or
fdivl
in
xlat
test
jl
pop
or
test
push
subb
lock
and
cmpsb
fdivrl
dec
nop
in
pop
xchg
test
or
in
mov
dec
cs
ja
sbb
push
adc
pop
adc
add
xchg
cmp
shlb
loope
aam
or
push
add
daa
test
popf
ds
inc
lds
gs
and
add
stc
enter
adc
test
sub
fimuls
xchg
jmp
outsb
xchg
out
addb
mov
in
pop
cmpsl
mov
daa
movsl
sbb
fnstenv
add
add
xchg
pop
xor
cmpl
xlat
inc
mov
shr
pop
mov
mov
and
pushf
inc
insb
pop
and
out
ljmp
and
pop
enter
popf
cli
mov
std
int3
iret
xchg
push
push
mov
aaa
nop
push
fwait
vmovd
pop
adc
icebp
sub
bound
sbb
xor
pop
bound
pop
in
mov
ficompl
add
mov
dec
jbe
or
cmp
in
or
fucom
jl
ficompl
test
hlt
test
mov
icebp
and
lahf
pop
add
mov
jnp
enter
movl
push
pushl
adc
sub
das
out
xchg
xchg
mov
inc
fsub
and
cltd
mov
mov
mov
xor
mov
jo
pop
mov
mov
gs
int
lods
out
scas
mov
xor
andl
xchg
es
jns
test
mov
lods
xor
cmp
fstl
in
mov
push
pop
aad
push
and
sbb
inc
cmpsb
cmpsl
arpl
mov
mov
xchg
sahf
loop
stos
or
aam
test
pop
and
jmp
or
jbe
jbe
pop
insl
mov
outsl
loop
xor
insb
add
mov
out
idivl
sub
dec
std
add
pop
dec
xchg
mov
cmp
jno
pop
push
xchg
jo
cmp
and
ljmp
sub
dec
jle
ret
xchg
pop
int3
gs
inc
stos
rorl
fdivl
fidivrs
hlt
in
xchg
mov
cwtl
lods
std
jp
pop
psrad
or
cs
test
les
shr
decl
lea
jg
add
pusha
dec
out
fidivl
divb
mov
xchg
test
mov
movsl
pop
push
fwait
mov
mov
pop
push
or
adc
mov
sub
adc
mov
fcompl
xchg
sub
popa
sbb
test
enter
scas
vpshaw
jg
cmp
fidivl
les
xor
pop
dec
mov
movsl
ljmp
and
mov
add
sbb
fnsaves
sub
sbbl
cmp
ljmp
push
insl
add
push
lock
cmp
sbb
stos
test
mov
and
dec
les
clc
cmp
testl
push
std
xchg
xchg
inc
xor
pop
shlb
mov
outsl
out
and
enter
xor
notl
mov
cmp
sub
pop
cmpsl
test
std
dec
sub
js
inc
addr16
sub
into
xchg
push
stos
lret
shl
add
inc
sub
daa
or
fistpl
cmpsb
pop
cwtl
jb
sbb
ds
scas
or
jle
push
xor
push
push
lea
inc
cmpsb
dec
adc
adc
js
nop
test
mov
out
or
jg
lret
lret
js
cmp
inc
lods
adc
ret
lret
ret
pusha
fsubs
insl
mov
stc
lret
jecxz
adc
push
icebp
arpl
iret
bound
in
inc
out
cmp
xchg
or
mov
mov
pop
ret
in
jecxz
inc
add
sub
add
adc
out
out
or
nop
mov
in
lcall
jnp
hlt
cld
lret
sub
repz
mov
xchg
push
repz
ljmp
xchg
cmp
xchg
into
iret
test
aad
jmp
mov
xor
dec
mov
stc
or
jl
push
adc
mov
xchg
mov
mov
or
mov
mov
inc
cmp
movsl
xor
mov
or
jmp
loop
sub
jnp
mov
mov
lds
dec
xor
cmp
iret
pop
arpl
lret
sub
cwtl
pop
xchg
test
pop
movsb
xchg
pop
cld
and
jne
mov
mov
adc
sbb
ret
lret
int
and
push
pop
ja
adc
insl
dec
cwtl
adc
ret
jns
mov
sbb
xor
pop
fstps
or
fsqrt
add
stos
ficompl
fldenv
ds
insl
daa
push
cwtl
and
push
arpl
dec
loopne
in
pop
add
test
mov
aad
xchg
out
jmp
add
call
mov
arpl
lcall
add
test
jns
test
xor
fs
xchg
mov
fnstcw
sub
dec
or
out
lods
mov
add
lret
ds
xor
lods
enter
push
and
push
pushf
sbb
adc
add
scas
aam
lret
sahf
les
flds
adc
ja
es
ret
in
addr16
pop
insl
jb
and
cmp
sarb
dec
and
ret
arpl
jb
es
subl
and
fstps
xor
mov
add
clc
jmp
inc
dec
shll
test
jl
or
mov
push
dec
push
cmc
ss
fbstp
inc
ljmp
inc
pushl
mov
addr16
xchg
mov
notb
jl
inc
sbb
out
jmp
les
sbb
or
test
sti
dec
test
movsl
jge
xchg
and
dec
and
mulb
int3
arpl
ds
xchg
lock
dec
test
dec
fildl
cmc
out
subb
cltd
popa
rcr
and
cmc
cmpsl
jne
mulb
xor
xor
sub
jno
xchg
xchg
gs
out
xchg
push
pop
aaa
mov
pop
cs
cmpsl
mov
mov
repnz
shlb
add
jmp
orl
je
test
cmp
mov
jbe
lahf
jns
push
scas
imul
sub
sub
pop
lds
ljmp
cmpsl
push
mov
loopne
pushf
inc
sbb
test
mov
sbb
lods
xchg
pop
jecxz
scas
mov
or
sahf
incb
js
in
cs
movsl
pop
xchg
push
mov
mov
mov
add
add
jb
popa
outsb
xor
sbb
and
dec
fldcw
cmc
lock
test
xlat
sbb
inc
in
test
cmp
jmp
mov
inc
pop
jnp
lock
pushf
sbb
aaa
fidivrs
cmp
or
push
cltd
and
push
cmpsl
lahf
push
add
jmp
jnp
jne
push
mov
in
das
mov
or
dec
cmp
and
stos
cmp
mov
push
rcll
pop
adc
rolb
bound
jl
popf
lahf
fistpl
push
or
test
lds
xlat
leave
daa
pop
push
les
cld
sbbb
rol
movsl
repz
les
push
or
imul
mov
repz
loopne
mov
sub
popfw
cmp
ss
adcb
adc
pop
adc
jo
push
pop
sbb
or
int3
xor
pop
andb
sbb
xor
and
lcall
mov
jmp
lea
and
xor
push
adc
mov
push
and
daa
out
clc
sbb
mov
leave
insb
jbe
sub
jne
shl
sub
cmp
call
shl
jge
imul
sub
aad
mov
adc
sub
xor
lahf
inc
pop
lahf
andb
jns
push
int
mov
mov
pop
aad
and
push
sub
push
adc
add
ds
push
push
imul
pop
roll
in
sbb
or
cmp
mov
mov
adc
adc
dec
ret
cmp
dec
xchg
push
xor
lock
imulb
scas
out
xchg
addr16
and
pushf
jno
adc
mov
push
rep
sbb
cwtl
adcb
mov
ja
ljmp
pop
lods
js
adc
sub
out
rorb
fcoml
popf
shrl
sub
out
mov
jp
mov
adcl
xchg
pop
aas
mov
xchg
icebp
lods
and
cmpsb
xor
push
or
xor
xchg
or
fldt
mov
and
jb
mov
mov
test
ja
fcmovnbe
add
testb
shll
jne
pop
mov
clc
dec
inc
cmpsl
rcrb
jg
lret
add
stos
aam
pop
add
jp
adcl
outsb
push
out
pop
fstl
cmp
xor
sahf
mov
popf
stos
mov
pop
add
mov
orl
mul
pop
es
lods
and
cmp
sub
int3
test
adc
cmpsb
xchg
jl
jns
flds
cmpsl
sub
ljmp
mov
mov
and
push
lret
cld
add
push
rorb
icebp
jno
cs
aad
jno
insb
add
push
and
add
clc
jmp
gs
mov
inc
dec
sub
and
cltd
and
and
lods
call
or
mov
dec
inc
inc
in
push
dec
add
ja
sub
mov
push
jg
les
mov
mov
xor
dec
sbb
sub
adc
xor
cltd
movsb
popf
add
dec
js
repz
mov
sti
ja
decb
mov
mov
mov
xchg
les
mov
xor
icebp
ds
ds
int
xchg
aaa
inc
insb
stc
or
and
popf
pop
sub
cmpsl
test
outsb
jge
ljmp
pop
dec
or
inc
outsb
jo
in
mov
idivl
ljmp
push
pop
mov
pusha
inc
jle
and
fldt
cmpsl
sbb
pop
nop
and
dec
pop
push
test
add
mov
out
cld
inc
push
jge
out
inc
es
ret
js
ret
mov
gs
jle
mov
mov
add
jnp
imul
push
shrb
pop
aam
or
js
jle
dec
sub
jl
adc
movsb
hlt
sbbb
int
iret
les
jle
adc
cli
aam
lods
mov
sbb
and
pop
ljmp
or
lret
cmp
dec
test
mov
insl
mov
ret
hlt
leave
cmp
xor
sub
xor
mov
sbb
mov
push
cmpsl
sbb
xchg
pop
and
in
add
in
scas
das
arpl
xlat
sar
mov
shlb
out
das
popf
in
loop
rcrb
xor
icebp
lds
push
cmp
jo
pop
dec
std
push
dec
push
stos
stos
loop
sbb
xchg
mov
and
push
lret
popa
sub
push
push
pop
mov
sub
inc
js,pn
push
loop
mov
mov
jp
sub
sub
mov
and
xchg
in
add
vpmuludq
inc
inc
cli
adc
pop
js
xchg
shll
in
daa
ret
lret
jg
cmp
test
stos
and
mov
pushf
lods
and
adc
fldt
adcl
jne
inc
out
pop
mov
clc
imul
jle
cmp
xor
call
les
or
jns
jmp
dec
adc
jg
sarl
add
sub
xor
fwait
aam
xchg
je
pop
cs
addl
add
dec
addb
or
add
lea
cmp
dec
loopne
pushf
mov
sub
xor
int3
test
dec
add
or
xchg
out
push
mov
leave
testb
adc
pushf
int
xchg
int3
shll
movsb
outsb
mov
cmpsb
sub
cmpb
dec
jmp
icebp
idivb
cmp
popf
insb
loop
inc
negb
jge
imul
fldt
mov
lods
fnstsw
pop
fidivrs
xchg
addb
cli
cld
and
inc
addr16
cwtl
ror
jle
movzbl
inc
add
inc
fst
pop
bound
mov
and
shrb
add
stc
lret
xor
cmp
lea
scas
and
jmp
daa
into
fwait
nop
das
scas
jp
jmp
dec
sbb
lret
test
and
cmp
mov
xchg
movsl
xchg
ret
sbb
ret
sbb
xchg
decl
loopne
into
les
ja
cs
fmull
mov
lret
pop
adc
stos
cld
jnp
mov
xchg
aam
data16
daa
adc
pushf
sbbb
mov
xchg
cmp
fwait
je
add
mov
xchg
movsl
xchg
pop
sub
xlat
ret
shl
fmul
pop
adc
lods
jge
xchg
loop
nop
and
inc
dec
mov
in
jbe
rcrb
lret
mov
sahf
push
icebp
adc
aam
int3
loope
arpl
lods
imul
xchg
testb
arpl
das
sub
cmp
aad
pop
cmpb
cmpsl
shll
sbb
in
je
push
or
mov
out
lock
cld
ds
jb
mov
subl
testl
js
loopne
cltd
jecxz
daa
out
dec
push
lahf
jo
pop
lcall
cmp
mov
jp
mov
jo
ja
sbb
dec
stos
nop
push
flds
lock
popa
push
push
or
xor
and
jecxz
fldt
inc
cld
outsb
fisubrl
mov
dec
mov
xchg
pop
lock
or
cwtl
add
lock
cmp
mov
xchg
xchg
add
push
addr16
pop
lods
dec
sarb
and
pop
and
mov
dec
xchg
ret
inc
scas
sub
iret
lds
cwtl
xchg
add
inc
mov
mov
sub
sub
pop
std
iret
ljmp
cwtl
in
mov
es
outsb
hlt
jecxz
sbb
lods
jmp
imul
xor
fs
aas
je
fsubl
sub
cmp
lret
lock
xor
sub
js
orl
pusha
cltd
loope
aaa
out
pop
push
mov
cs
add
stos
xchg
loop
mov
cmc
mov
xchg
lea
enter
inc
out
rcl
adc
stos
sbb
in
data16
js
mov
xor
add
popa
bound
xchg
jae
test
pop
fmulp
xor
mov
les
gs
cwtl
pop
mov
mov
push
sbb
xchg
jecxz
faddp
pop
add
outsl
shlb
scas
mov
aam
sbb
insb
imul
pop
popa
cltd
inc
popf
dec
push
adc
mov
jbe
callw
mov
adc
lret
loope
inc
mov
pop
jnp
push
stos
and
dec
dec
ret
add
aaa
movsb
cmp
addr16
and
mov
rcrl
push
ret
mov
sub
cli
push
nop
push
addr16
push
leave
fwait
aad
fdivl
ds
jae
jno
mov
jns
ds
jae
enter
adc
pop
xor
out
out
pushf
inc
cltd
mov
sbb
adc
mov
inc
jnp
xchg
mov
push
call
mov
movsb
bound
rorb
dec
inc
lods
aam
into
shl
sub
ret
inc
mov
adc
push
mov
pusha
xchg
in
aam
icebp
jmp
es
aam
ss
shrl
pop
and
inc
push
ret
push
into
sar
fidivrl
pushf
outsb
push
adc
leave
pop
sub
sbb
enter
jg
stos
jecxz
add
addr16
xchg
mov
cli
inc
jmp
popa
aas
xchg
xchg
sti
scas
and
push
jbe
rcl
hlt
jbe
xchg
add
cli
outsb
push
jb
imul
xchg
ds
ret
repz
sub
add
sub
dec
mov
adc
test
cld
sti
cmp
mov
out
xchg
inc
jne
push
add
cmp
jle
mov
and
aas
jle
fstpt
push
lret
divb
out
cld
inc
ret
repnz
sub
dec
jg
push
jb
jg
mov
popf
inc
orb
inc
add
push
clc
ja
jnp
inc
sub
cmp
lcall
pop
in
and
push
fwait
hlt
mov
imul
aad
shr
outsb
shlb
mov
fs
or
cmp
mov
mov
mov
cmc
imul
ret
add
sub
xor
mov
pop
cmpsb
cmp
ret
jnp
call
mov
push
nop
jbe
mov
push
mov
in
sahf
jg
shll
int3
fwait
add
js
sbb
mov
add
dec
cmp
and
push
cmp
cmp
sub
add
rcrl
xor
push
loopne
popf
and
cs
mov
pop
xchg
test
movsl
xchg
lock
lods
aaa
lret
sbb
arpl
jge
loop
mov
push
cli
inc
popa
pop
sub
je
loopne
jl
add
and
cmp
sbb
dec
inc
loopne
nopl
sti
clc
adc
ds
lods
or
fs
scas
xor
shl
mov
adcb
mov
mov
adc
cs
int3
xchg
jge
mov
roll
aad
mov
sub
mov
push
jl
lret
ss
mov
enter
je
pop
dec
insl
pop
pop
jle
call
lds
das
adc
mov
out
lods
sub
es
mov
lock
cmpsl
stos
push
dec
into
aaa
mov
ret
dec
shlb
lods
adc
and
inc
imul
ja
xor
sbb
pop
or
mov
mov
ret
popa
add
loope
aaa
loopne
adc
test
sbb
arpl
scas
imul
cli
in
jae
cmp
iret
in
les
mov
sub
int3
mov
and
pop
aas
sbb
fadd
or
mov
mov
rclb
sub
insb
and
push
inc
inc
dec
push
sbb
mov
or
nop
fadd
dec
xchg
mov
jecxz
or
shrl
stos
sbb
sub
push
cmpsl
pop
push
inc
cld
imul
rorb
sar
ljmp
push
cs
mov
std
clc
hlt
out
add
inc
mov
fst
pop
mov
frstor
std
dec
sub
jp
add
out
cmpsl
fwait
push
mov
jp
data16
dec
mov
popl
pop
pop
adc
push
out
mov
scas
fbstp
mov
stos
push
push
cld
out
inc
jno
scas
fs
gs
pop
mov
cmp
pop
pop
insb
ja
dec
inc
mov
add
mov
cmp
adc
in
pop
in
jo
xchg
ror
and
mov
popa
daa
mov
and
scas
xor
test
pusha
cmp
jb
data16
lock
jle
sub
iret
arpl
shll
sub
jmp
add
sub
clc
push
mov
aam
stos
call
and
pop
pavgw
mov
cmpb
sbbl
or
sub
or
adc
mov
jg
push
mov
push
lcall
or
out
fidivrl
push
jmp
addb
shll
dec
loope
xchg
pop
lods
cmp
sbb
sbb
fildll
push
mov
divl
push
pop
pop
test
cmp
stos
test
mov
sub
nop
movsb
xor
rclb
gs
aaa
loopne
mov
xchg
mov
mov
push
imulb
xchg
and
lret
pop
cmp
mov
lock
pop
ja
subb
les
xor
push
cmp
or
dec
and
push
ret
push
sbb
cli
jge
xor
decb
fcmovu
and
cwtl
lret
inc
lahf
xchg
rcrb
lret
sbb
rcrb
cmp
test
out
cmp
cltd
jl
and
imul
xor
mov
es
outsl
and
hlt
push
sbb
testl
repnz
jne
addr16
rclb
jmp
fsubrs
add
aas
loope
jl
inc
outsl
repnz
pushf
xor
sbb
test
inc
pop
clc
lcall
imul
and
mov
push
in
test
andb
mov
add
ret
rcr
into
pop
ret
fidivl
daa
mov
mov
fildll
mov
and
leave
out
pop
xlat
pop
imul
or
popf
out
sbb
ss
test
push
movsb
test
cmp
pop
cli
sbb
les
and
lcall
movsl
fdivrs
cmc
mov
cmpsb
jne
inc
fs
lret
jae
cmp
sub
cmpl
popf
sbb
or
adcb
fwait
repnz
fincstp
xor
add
nop
movsl
adc
jne
adc
stos
hlt
ret
cs
idivb
adc
aam
cs
xor
clc
pop
aam
lods
lret
scas
mov
mov
or
adc
mov
out
inc
lret
orb
popa
jge
clc
or
and
sarb
push
cmpsb
in
cltd
jne
rclb
out
clc
std
call
call
leave
dec
xor
sub
addl
leave
fisubrs
out
adc
pusha
nop
nop
iret
push
je
pusha
xor
or
add
out
mov
cmpsl
imul
ror
and
and
add
push
loope
neg
add
stos
cmp
xchg
sbb
mov
popa
push
js
cmp
mov
cltd
lcall
pop
cvttps2pi
cmpsb
rolb
inc
adc
push
cmp
hlt
push
cmpl
mov
es
int3
leave
xchg
jmp
sbb
sub
push
push
mov
mov
fcoms
in
xchg
add
xchg
imul
xor
jne
or
sti
pop
imul
fisubrl
sub
ds
test
xchg
pxor
push
mov
ja
loopne
addr16
xchg
jae
cmpsl
dec
insl
xor
sub
dec
lods
hlt
jecxz
jmp
cmp
test
outsl
sbb
or
lret
pop
xchg
xchg
and
jno
sbb
mov
pushw
int
xchg
movsl
or
adc
xchg
ja
dec
arpl
or
lds
xorb
shrl
sbb
push
mov
jne
mov
sbb
mov
iret
cmp
int
mov
and
jno
rorl
pop
or
or
mov
inc
mov
xchg
mov
lds
cli
stc
into
std
and
outsb
iret
lock
cltd
xchg
or
sti
push
push
mov
xorl
ss
fsubs
out
pusha
mov
and
out
cmp
and
js
rcr
mov
stos
xor
cli
aam
out
je
and
aam
rcll
cmp
jl
loopne
lock
sub
popf
push
lds
mov
icebp
dec
test
fidivrs
pop
push
test
mov
add
sub
jp
lret
push
cmp
push
flds
jge
adc
jne
and
pop
gs
and
mov
lcall
sahf
out
in
scas
push
adc
out
icebp
bound
xchg
pop
filds
in
mov
and
leave
mov
xchg
push
bound
and
insb
add
and
leave
pop
mov
push
inc
orl
mov
adc
pop
mov
cltd
aad
dec
loopne
cmpsb
mov
enter
cwtl
pop
frstor
add
icebp
mov
mov
pusha
sahf
xor
dec
xor
jo
arpl
mov
jae
inc
data16
xchg
mov
or
fisttpll
jnp
and
hlt
jecxz
or
cli
cwtl
jb,pt
data16
rorl
inc
and
lret
lods
int3
cmp
mov
popa
in
inc
and
test
not
sub
sqrtps
mov
loope
add
push
mov
xor
cmp
jbe
out
sub
adc
jbe
test
imul
in
xor
out
adc
lods
adcb
push
mov
mov
ret
jne
lcall
mov
in
or
lahf
test
gs
sarl
idivl
fdivs
insb
add
jle
xor
mov
jmp
cmp
xchg
dec
bnd
fdivl
adcl
adc
xor
xchg
pop
adc
std
in
cli
loop
mov
jne
mov
push
jae
sbb
adc
test
mov
insl
test
call
mov
sbb
mov
mov
andl
mov
mov
mul
icebp
sbb
outsb
ret
cmp
mov
movsb
dec
push
clc
sahf
out
and
iret
repnz
out
mov
in
sbb
push
sub
push
jg
push
sub
and
adc
rorl
ds
loopne
jb
inc
out
gs
and
adc
add
out
imul
add
inc
cwtl
mov
mov
test
or
or
push
sbb
les
sub
ja
cmp
mov
xor
push
mov
mov
xor
mov
out
push
jecxz
mov
les
movsb
mov
stos
sbbl
add
xor
sahf
je
fadd
sbb
loope
push
add
neg
ror
mov
fcoml
dec
dec
cmc
and
xor
mov
mov
aaa
pop
clc
or
mov
mov
jmp
or
cmpsl
inc
mov
incl
mov
repz
xor
push
rcr
mov
sub
jp
out
int
and
mov
mov
mov
mov
stos
cmp
pop
mov
in
lods
adc
inc
dec
cmpsl
mov
leave
pop
scas
out
sub
adc
jp
or
ret
jge
mov
ljmp
pop
lcall
jno
clc
or
nop/reserved
ret
pop
shl
mov
in
cmpsl
mov
mov
movsb
scas
or
adc
repz
sbb
int
test
int
cmp
sbb
sub
dec
js
mov
push
add
mov
ss
dec
pop
shlb
clc
out
loop
sti
mov
sarb
cmc
loop
add
pop
movsl
call
ljmp
mov
fidivl
int3
xchg
dec
fisttps
cmp
dec
ds
mov
jnp
outsb
xchg
movsl
ret
into
dec
and
push
jmp
out
fs
cmp
movsl
das
clc
add
fdivrs
jmp
mov
loope
and
out
fld
jne
xlat
add
les
jb
mov
sub
ficoml
push
add
ret
call
jnp
push
sbb
loop
mov
or
mov
lcall
fwait
xchg
sub
mov
stos
test
test
xor
and
lret
jg
insl
pop
pop
ret
notl
pop
ljmp
mov
cmp
sbb
das
xor
ret
mov
mov
mov
mov
in
xorl
fadd
and
iret
cmp
xchg
pop
dec
pusha
push
and
mov
push
jo
movsb
add
test
push
das
lods
or
loop
bound
cs
push
cwtl
ljmp
shr
shrl
das
scas
and
movsb
lret
cltd
adc
pop
dec
cmpl
or
xchg
subl
enter
push
jnp
pop
mov
jmp
jg
dec
dec
cli
add
dec
dec
fstpt
faddl
test
rcr
and
sub
cmp
cli
repz
jnp
jo
fisubs
push
dec
ss
pop
test
dec
adc
mov
aad
ret
sub
jnp
aad
xor
inc
mov
cs
cmpb
pusha
popa
stos
or
jl
mov
mov
sti
cmp
and
daa
and
mov
test
loop
out
xor
pop
xchg
icebp
pushf
dec
xor
add
add
or
lea
or
iret
pop
xchg
cli
movsl
mov
test
lcall
inc
data16
test
adc
xchg
daa
lahf
out
jne
cmpsl
push
dec
and
loopne
mov
jg
sub
cmp
int
jg
iret
cltd
mov
jl
dec
pop
scas
sub
mov
aaa
repz
popa
test
loope
pop
fwait
dec
fmull
push
xlat
movsb
inc
jecxz
mov
mov
dec
shlb
or
sbb
adc
leave
cmpsl
xor
push
add
sbb
shlb
push
pop
sbb
scas
sub
lret
mov
cmp
cmp
lret
out
je
sbb
jg
and
imul
incl
jl
pop
jo
jo
or
fcomi
cmp
stc
mov
dec
pop
pop
or
cli
xchg
insl
insb
dec
lock
pusha
mov
xor
jne
inc
call
imul
call
aam
stc
sbb
aad
mov
filds
ds
in
push
or
out
movsb
jno
ss
arpl
cli
mov
rcll
or
ds
pop
imul
insb
cs
xchg
adc
sub
test
in
into
and
pop
test
cmpl
call
mov
or
icebp
outsl
out
xchg
int
mov
cmc
cmpsl
les
imul
adc
xor
xor
dec
cmp
xor
hlt
pop
dec
insb
mov
into
mov
and
dec
mov
mov
add
bound
dec
stc
movd
mov
adc
cli
imul
fstpl
faddl
sarb
scas
aaa
jmp
std
inc
movsb
sub
inc
idivb
orl
lods
mov
rorb
xchg
repnz
stos
das
shll
ljmp
pop
jg
cmp
outsb
push
lds
nop
jmp
xor
dec
jnp
pop
pushf
sti
mov
lret
add
xchg
jb
cwtl
loopne
loope
jle
ja
xor
stc
les
into
jne
mov
mov
daa
shrl
inc
jo
xchg
jg
inc
addb
jge
das
add
jmp
ret
or
aas
sbb
orb
add
pop
stc
cmp
into
repnz
hlt
mov
pushl
scas
test
mov
and
mov
mov
sub
cld
pop
jl
btc
push
cmp
mov
sbb
cmp
popa
mov
jae
fcmove
or
pop
ljmp
cmp
dec
push
out
xchg
out
test
add
repz
clc
subb
jb
scas
addr16
rcrb
jno
push
jp
mov
enter
xchg
and
clc
mov
add
bound
pop
mov
icebp
cmp
in
mov
push
enter
nop
add
lock
imul
enter
push
push
mov
sub
aad
loop
pop
sub
out
mov
repz
aaa
jmp
xchg
mov
loope
ror
addr16
or
cmp
addl
pusha
push
ret
mov
es
mov
addr16
fmuls
loopne
test
fwait
scas
dec
mov
ljmp
inc
std
out
sub
out
sbb
iret
shrb
shrb
jnp
cmp
outsb
in
cltd
push
std
mov
fbld
dec
lretw
or
loop
rclb
push
inc
add
gs
add
xchg
ror
test
ffree
xor
filds
sub
pushf
fnstenv
jbe
sti
push
addr16
pop
xchg
or
shrl
or
mov
sbb
pop
xchg
je
insl
push
out
sahf
jle
cli
xor
xlat
jne
push
mov
ss
popw
add
testb
enter
pop
inc
cld
xor
fiaddl
push
mov
iret
xor
loop
in
loopne
mov
adc
sarl
je
jae
xchg
je
int3
cld
mulps
lahf
movsl
mov
out
mov
in
jb
jb
out
cmp
insb
sti
cwtl
jge
pop
add
wbinvd
jb
scas
jecxz
and
cltd
and
aad
iret
add
test
scas
loope
fucom
mov
inc
in
xchg
cmc
mov
addr16
xchg
mov
jno
or
sbb
cwtl
jg
nop
push
add
inc
aas
and
cmp
lock
fildl
scas
ljmp
jl
outsb
fndisi(8087
pop
test
push
mov
mov
cmc
mov
test
lock
repz
jne
jo
scas
pop
add
jp
dec
xor
nop
mov
in
xorb
mov
int3
xor
mov
sbb
shrl
std
scas
insl
dec
dec
or
pusha
mov
div
inc
les
out
lods
mov
jecxz
cld
loope
in
stos
icebp
ja
test
push
sbb
sub
sub
xor
inc
ret
lods
notl
and
mov
setl
aad
in
and
jl
cmpsb
ja
hlt
popa
jbe
mov
xor
cmp
jne
xor
lods
ds
and
mulb
jns
sbb
mov
cmc
xchg
pop
pushf
pop
loop
stos
jp
xchg
sbb
cld
es
sbb
push
jmp
shr
pop
add
icebp
movsl
mov
add
cld
inc
push
popa
sarl
arpl
shr
loopne
lahf
mov
mov
jle
nop
movsb
xchg
xor
in
inc
jo
fsts
rorl
adc
daa
jbe
loop
sub
dec
fwait
gs
lret
jb
xor
mov
shlb
add
es
jbe
inc
jnp
and
call
testl
mov
cld
call
mov
cmp
push
es
fs
mov
mov
mov
in
fildl
incb
mov
sbb
inc
mov
mov
add
dec
push
inc
shll
xchg
push
push
mov
fsubl
sub
push
mov
cmp
and
rcll
mov
cmp
xor
pop
push
stos
inc
add
loopne
xorl
push
ror
mov
pushw
mov
and
push
pop
daa
xor
pop
rorb
pop
and
in
fidivrs
lock
pop
out
js
dec
test
pop
add
lock
std
cmovb
adc
mov
add
sub
jnp
pop
insl
test
cmp
arpl
jmp
test
popf
lea
adc
or
bound
jo
ret
dec
pop
fisubs
or
mov
cmpl
bound
inc
jno
inc
les
mov
fwait
popa
xchg
xor
jne
or
dec
mov
mov
adc
push
adc
xchg
out
lcall
sti
mov
in
nop
ss
outsl
ret
stos
jo
fisttpll
adc
fldcw
sbb
dec
jge
shll
or
lret
xlat
jg
stc
jl
adc
cmpsl
mov
sbb
mov
in
pop
test
aam
xor
ret
fcoms
mov
les
push
ret
fisubrs
fsubrl
or
jbe
fisubl
push
aaa
xlat
lods
mov
ret
fists
mov
mov
sti
gs
setg
mov
dec
scas
into
push
mov
cmp
mov
pop
mov
sub
xor
fldl
dec
aad
inc
mov
pop
mov
xor
mov
and
cmc
xchg
xor
lods
mov
imul
out
idivb
or
enter
mov
cmc
push
test
movsl
enter
sbb
jge
mov
es
sub
cmpl
pop
pop
push
cld
stos
repz
pop
enter
jmp
pop
ss
push
or
stos
scas
int3
add
jnp
lret
dec
mov
orb
jnp
adc
sub
xor
and
fnstenv
sbb
loopne
bnd
cmp
pushf
xor
push
lds
xor
xchg
int3
or
dec
add
in
add
insl
xlat
cmpsl
mov
cmp
xor
xchg
xor
lods
out
inc
popa
rclb
cmp
sbb
leave
aad
cmp
xchg
jle
add
bswap
gs
enter
mov
aas
jp
andl
push
mov
lret
add
cs
mov
mov
and
mov
add
lret
arpl
adc
ret
cwtl
mov
out
rcr
jg
in
fldcw
test
loop
mov
xor
cwtl
or
add
inc
dec
test
jb
test
mov
mov
xchg
xchg
pop
sbb
leave
push
lahf
add
jae
push
arpl
cmp
ss
out
lods
lock
mov
push
mov
inc
mov
pop
shlb
sbb
std
divb
inc
dec
es
cmp
fsubl
daa
lcall
xor
out
mov
adc
add
sub
jecxz
out
add
jbe
push
xor
stos
pop
mov
sbb
add
mov
jnp
aaa
add
rcr
jmp
jb
out
adc
call
stos
xchg
outsl
pop
aaa
roll
jbe
and
incl
sub
mov
push
pop
jnp
pop
mov
rclb
cwtl
or
repnz
add
je
lods
sahf
or
leave
sub
leave
xchg
inc
fnstenv
js
fwait
mov
cmc
ljmp
lea
lea
divl
testb
add
push
add
sahf
imul
push
adc
xorb
sahf
sub
mov
push
push
cmp
test
in
pop
cmpsl
movsl
imul
shl
in
scas
mov
pop
xor
jbe
sub
lods
int3
pop
sti
xchg
scas
lods
popa
push
inc
lahf
orb
arpl
call
and
jmp
shl
or
js
cmpsl
adc
mov
adc
xchg
add
cwtl
sbb
imul
mov
jl
mov
cmp
pop
jno
fs
les
pop
pop
push
cmp
add
loopne
sbb
mov
cmp
call
or
mov
and
pop
xor
sub
out
or
lret
mov
mov
das
xlat
mov
cmp
cmc
notb
repnz
movsb
mov
cmp
es
fadds
inc
das
pop
ret
mov
lret
ret
mov
cld
adcl
lea
loopne
jb
scas
shrb
loop
data16
pop
inc
rolb
mov
mov
inc
lahf
sti
in
cmp
or
je
decb
mov
les
push
push
adc
pop
outsl
sbbl
dec
sti
mov
mov
repnz
rclb
sub
jo
jno
pop
icebp
dec
cmp
pop
fiadds
push
or
lret
push
gs
mov
lcall
js
lock
cmp
dec
pop
mov
inc
js
lods
test
subl
cmp
rol
sbb
movsb
ja
movsl
mov
test
cs
sub
scas
sub
into
lcall
add
pop
or
outsl
cwtl
push
mov
negb
or
push
mov
test
out
jmp
cs
orl
xchg
in
roll
lds
mov
push
pop
mov
mov
jge
mov
imul
sub
or
pop
into
outsb
scas
push
add
fcomps
aad
lods
xorb
int
popl
mov
xchg
adc
mov
mov
xor
push
test
lret
adc
mov
stc
in
push
test
bound
dec
cwtl
addr16
addr16
jns
sub
add
mov
repz
adc
imul
hlt
cmpsl
pop
or
and
stos
sahf
orb
outsb
add
ret
cmpb
iret
sarl
into
sbb
xor
mov
push
push
dec
cmp
in
out
ds
jmp
lret
je
jb
outsl
or
sub
jg
sbb
pop
jo
incb
dec
pop
push
int
incl
out
daa
cmp
cmpsl
enter
movsb
cmp
xor
lods
xchg
push
nop
fidivl
mov
and
jns
out
mov
lods
imul
fidivrs
aad
push
test
xchg
icebp
cmpsl
pop
test
divb
inc
rcll
ror
jmp
shl
ret
mov
flds
ficompl
mov
or
pop
pusha
or
add
and
in
push
push
std
mov
and
sbb
adc
xor
xchg
jmp
xchg
dec
ja
cmp
mov
adc
lods
cmp
xchg
jmp
adc
sub
and
add
add
xor
stc
je
test
inc
xchg
mov
addr16
inc
bound
inc
addr16
test
add
add
lret
cmp
adc
out
mov
lea
adc
outsl
adc
fsubl
ret
out
push
mov
cmp
in
insl
mov
lcall
xor
aam
jle
cmpsl
mov
and
in
mov
jg
cli
fs
arpl
iret
or
mov
jp
dec
sarb
mov
pop
mov
pop
add
dec
mov
push
fsubrl
insl
mov
testb
pusha
test
bound
push
inc
mov
and
xorb
hlt
mov
push
or
lahf
jge
mov
sbb
imul
cli
push
sub
xchg
enter
loope
popa
push
adc
cmpsl
push
pop
cli
idivl
lcall
mov
in
or
pop
mov
jb
insl
mov
cmpsl
xor
push
mov
push
sub
repnz
jne
addr16
pop
xchg
xor
scas
pushf
outsb
sbb
out
popa
imul
pop
test
cmp
fnstenv
pop
adc
and
mov
mov
mov
outsb
jb
mov
addl
cmp
or
push
aaa
addb
std
loope
fnstcw
and
pop
cwtl
xchg
decb
mov
ja
sub
lods
jmp
jmp
cmc
addl
dec
sbb
je
sbb
lcall
sti
mov
xor
ret
pop
daa
xchg
jb
fmuls
mov
add
jmp
fisubs
mov
mov
popl
xor
mov
movsb
shlb
fldl
imul
or
push
mov
fimull
mov
inc
fdivs
jge
jns
push
mov
fldenv
rorl
xchg
shll
mov
cmp
xor
jne
aaa
and
icebp
pop
push
push
stc
frstor
jg
jne
out
lcall
outsb
pop
and
adc
enter
jb
inc
dec
es
aam
out
xor
daa
test
pop
outsb
insl
xchg
mov
scas
rcl
xorl
mov
aaa
jnp
test
push
fs
out
cmc
fcomps
idiv
xchg
adc
insl
dec
cmp
push
jae
push
jo,pn
ljmp
call
jl
mov
xchg
in
sbb
lret
mov
and
mov
cmpsb
out
sahf
fs
arpl
es
iret
cmpsb
mov
xor
xchg
add
mov
mov
mov
mov
stos
or
sbb
mov
jae
ret
int3
sbb
xchg
push
xchg
nop
fistpl
xor
movb
std
cwtl
adc
js
ss
pop
xor
sub
xor
sub
mov
outsl
sarl
mov
inc
and
sub
repz
jbe
push
push
inc
add
mov
jmp
xor
stos
xor
ret
mov
mov
jg
cmp
ljmp
adc
sub
mov
dec
jle
movsl
test
xor
ss
frstor
rorl
sub
cltd
inc
repz
xor
push
imul
jnp
pop
or
addr16
lcall
dec
pop
push
sbb
add
rorb
cmc
inc
pop
adc
dec
mov
adc
sub
xor
popf
push
adc
or
xchg
adc
inc
xor
mov
mov
mov
sbb
insl
push
rcll
ja
sbb
cmp
dec
lds
int3
mov
fs
pop
mov
lret
push
cmp
cmp
jecxz
scas
test
and
xchg
ret
push
or
cs
xlat
jno
arpl
popf
pop
or
not
hlt
xchg
jp
push
mov
pop
sbb
lods
xchg
dec
push
or
pop
xlat
sub
fcmovu
cmp
ss
mov
xor
mov
stos
ljmp
insb
shlb
out
mov
cmp
mov
pop
sbb
xchg
inc
pop
roll
outsb
pop
xchg
addl
cmc
cltd
js
xor
in
xor
mov
dec
incb
add
pushf
bound
or
push
movsl
iret
cmp
and
cmc
push
repz
cs
adc
out
xor
dec
test
adc
or
ja
fwait
addb
cwtl
add
push
popf
hlt
jg
push
dec
cmpb
out
jg
stos
repz
outsl
ja
mov
xor
divl
xchg
cmp
dec
ja
js
sarl
imul
scas
out
jecxz
jge
lea
inc
add
cwtl
push
xlat
inc
add
leave
dec
mull
and
dec
dec
xchg
stc
sbb
aam
or
lods
int
and
outsb
jl
mov
cltd
sti
enter
rcrl
jp
push
outsl
or
mov
push
mov
pop
sub
repnz
ja
jge
push
repz
not
mov
jle
mov
es
lret
pop
dec
jbe
in
jge
adc
daa
call
insb
scas
mov
mov
sub
lods
or
js
pop
icebp
in
mov
xor
push
push
sub
bound
scas
cli
xor
mov
mov
popf
xorl
fdivrp
mov
cmpsl
clc
lds
dec
test
jl
fcoml
sub
jnp
fwait
mov
pop
sub
xorb
pop
insl
cmp
fmull
addl
pop
inc
in
sbbl
lahf
stos
popa
push
jae
fcoml
adc
adc
frstor
xor
int
sahf
sub
push
mov
jl
mov
ret
fwait
ret
cli
mov
call
cmc
ss
rcrb
das
lods
cli
lock
insl
stos
xor
lcall
jae
mov
bound
push
and
inc
mov
divl
aam
mov
data16
cld
mov
push
mov
mov
daa
fistpll
push
mov
push
xor
push
sub
pushf
jg
xchg
repz
pop
mov
mov
mov
lock
dec
push
mov
sub
dec
pop
jle
sbb
sbb
sub
mov
mov
sub
xlat
inc
sub
lret
dec
es
incl
add
dec
call
movsb
fidivrl
sarb
int3
enter
sub
push
aad
pushf
out
jmp
mov
adc
sub
in
rcll
xor
pop
adc
cmp
jne
mov
pop
or
dec
test
mov
cli
jg
pop
lret
loopne
sub
sbb
lea
or
test
out
pop
xor
add
mov
mov
dec
sub
and
stos
loopne
add
nop
lcall
jns
push
lea
cmpl
fs
jge
sbb
jns
lret
and
cwtl
xor
xchg
loop
test
leave
or
push
add
push
and
in
mov
fdiv
sbb
in
add
push
jp
xorb
xor
ja
dec
stos
roll
cmc
test
mov
dec
divb
lcall
ds
ss
es
out
ss
shrl
inc
imul
enter
jb
and
dec
add
sub
mov
xchg
rorb
cli
addr16
pusha
das
int
sti
in
mov
xchg
shrb
popa
cmpb
je
cmp
push
pop
imul
dec
pop
into
lock
in
es
test
cmpsl
jae
insb
arpl
sub
cwtl
js
mov
mov
jg
repz
mov
mov
icebp
ljmp
adc
cs
mov
dec
xorb
xchg
out
fnsave
xchg
std
cli
daa
push
ss
sbb
push
xchg
adcl
cwtl
or
xchg
mov
sbbl
mov
and
sbb
cli
ljmp
int
loop
push
push
pop
imul
pop
and
repnz
dec
lods
add
rcrb
pop
mov
pop
jmp
push
bound
fdivrl
xor
test
xchg
jnp
pop
sbb
push
pop
or
adc
mov
ja
aaa
push
mov
insl
push
mov
jne
mov
pushw
xchg
cli
inc
dec
scas
icebp
jge
imul
repz
aas
sub
mov
or
mov
ja
lods
pop
push
into
cmp
dec
inc
ljmp
mov
jae
fsts
mov
push
cmp
movsl
push
ss
sub
mov
in
dec
lds
cmp
sbb
xor
mov
nop
mov
pop
mov
xchg
cmp
popa
mov
sbbl
push
or
or
and
jo
sbb
out
push
inc
push
push
sbb
push
add
daa
pop
xchg
pop
mov
in
sbb
or
out
sbb
in
inc
or
sbb
inc
dec
dec
pop
mov
out
scas
jge
xor
loop
mov
rcrl
cli
stos
mov
mov
add
pop
jns
add
sti
jb
shll
mov
cmp
clc
pushf
mov
xchg
jl
xchg
mov
cwtl
mov
add
in
outsl
dec
lods
mov
lret
xchg
mov
and
add
rol
pop
cmp
and
xchg
ret
mov
jl
int3
out
jnp
fdivrl
loop
iret
sub
mov
mov
leave
es
xchg
push
je
mov
jbe
mov
sub
stc
sbb
xchg
mov
fs
xorb
ss
ret
push
out
or
inc
mov
scas
addb
jl
jg
andb
lcall
mov
popf
mov
mov
mov
add
out
adc
hlt
mov
add
mov
jns
mov
and
mov
js
sub
paddb
stos
rorb
or
out
mov
leave
or
mov
jge
test
xchg
jl
rol
icebp
rolb
cmp
xor
fnstsw
mov
loop
push
xor
add
rolb
push
inc
add
sub
fstl
lret
fistpll
pop
xor
adc
push
addr16
jno
inc
ficoms
push
xchg
sarb
lcall
arpl
sub
push
jl
and
pop
arpl
clc
ja
adc
orb
push
xchg
mov
aas
sub
call
and
jns
pop
mov
sub
and
mov
loope
adc
jmp
fimuls
test
or
mov
dec
push
or
and
adc
xchg
pop
sub
icebp
push
dec
mov
inc
movsl
enter
into
inc
aaa
nop
jg
inc
jmp
dec
out
mov
mov
arpl
dec
xchg
mov
pcmpgtb
push
ret
mov
clc
dec
pusha
loope
out
mov
inc
outsl
mov
aaa
fsubs
dec
push
lock
into
xchg
inc
inc
ljmp
pop
inc
dec
mov
xchg
sbb
mov
in
fadd
mov
pop
mov
subb
and
pop
inc
or
and
dec
mov
rcr
dec
in
ret
jle
add
pop
insl
push
insb
notl
xchg
mov
ds
sbb
inc
ret
sub
add
iret
mov
dec
add
and
insl
push
aas
sub
sbb
decb
cmp
scas
and
push
pavgb
xchg
dec
or
stos
stos
lahf
pusha
pop
mov
mov
leave
inc
mov
xor
cld
lret
sets
xor
xchg
add
bound
mov
imul
add
mov
stc
jmp
push
ret
das
in
pop
hlt
movsb
addb
mov
fimuls
movsl
mov
lock
dec
sbb
lcall
dec
mov
mov
call
pop
mov
insb
sbbb
fxch
sub
push
int
insl
adc
push
xorb
inc
xlat
jae
in
cmpsb
push
das
cmp
inc
in
neg
jmp
cmp
btr
loop
fsubp
in
rcr
cwtl
incl
insb
push
inc
push
sbb
aam
xchg
push
jl
inc
sub
jge
repz
xchg
xchg
mov
mov
sub
fnstcw
adc
cmp
pusha
mov
out
ret
in
std
adc
pop
test
sub
dec
stc
sti
cs
xchg
sar
xchg
jl
pop
xor
mov
es
dec
pop
test
or
mov
paddusw
cs
rdmsr
lcall
mov
fsubrs
cmp
stos
sub
push
inc
fldt
addr16
std
lods
sarl
push
xchg
into
popa
push
shlb
mov
test
arpl
xchg
int3
xchg
or
rcr
ja
dec
push
repnz
sbb
sbb
sbb
not
dec
ret
or
rorl
and
sbb
and
out
or
dec
mov
jp
cmc
call
jmp
mov
xor
ljmp
mov
js
mov
push
pop
lret
popf
insl
testl
push
jle
cmc
sbb
and
setp
xor
mov
dec
sahf
xchg
dec
sbb
movsl
jo,pn
cmpsb
imul
mov
movsl
addr16
pop
out
jae
mov
jmp
adc
lods
arpl
adc
fwait
in
rorl
shlb
fwait
aad
fadd
cmp
mov
jns
pusha
xchg
mov
adc
dec
push
cmp
pop
in
inc
add
lea
std
shl
test
std
cwtl
fidivrl
mov
pop
dec
ss
repnz
insb
aam
ret
and
ds
in
test
fnstenv
or
aad
call
fs
dec
cmp
sub
into
mov
push
xchg
mov
je
shll
mov
mov
std
sahf
in
fildll
sbb
fists
cltd
loopne
cli
fs
cmp
sbb
leave
cmpsb
xor
dec
xlat
mov
mov
notl
push
in
popf
cmp
and
cmp
mov
jbe
hlt
addr16
push
loop
adc
or
int
jns,pt
mov
jo
push
fcmovu
scas
mov
jmp
out
dec
shl
push
movsb
dec
es
mov
lea
pop
hlt
or
hlt
adc
aaa
mov
aad
cmp
xlat
lods
adc
sbb
dec
mov
ss
or
sahf
push
mov
mov
mov
sub
xor
inc
sub
inc
in
add
jecxz
push
xor
std
mov
add
jecxz
xchg
shlb
or
je
enter
xor
push
dec
inc
cltd
dec
stos
mov
shrb
repz
pop
inc
push
jo
pop
adc
jp
cmpl
inc
mov
imul
jns
push
cmp
rcr
jnp
sti
dec
popf
jnp
mov
mov
mov
insl
clc
jmp
xlat
xchg
and
data16
cs
int
jno
cmp
mov
adc
mov
adc
mov
outsl
icebp
in
xchg
mov
and
mov
mov
fwait
mov
dec
xchg
pop
mov
movsb
rcrl
xchg
ds
push
bound
dec
adc
mov
xor
and
mov
stos
std
jge
add
or
sub
aad
divb
mov
xorb
push
lcall
stos
scas
test
inc
jnp
fldenv
pop
cmc
mov
loop
sub
mov
rcrb
jmp
insl
cwtl
addl
jp
mov
shl
dec
fmul
cmp
aaa
cld
and
or
add
or
pop
nop
inc
cld
mov
imul
leave
lret
inc
insb
popf
xorb
hlt
push
int3
inc
inc
xchg
mov
xchg
and
jbe
les
and
test
mov
fdivrs
mov
pop
xor
pop
in
mov
out
add
into
gs
mov
add
leave
cmp
lods
or
mov
xchg
xorb
dec
iret
repz
subl
insb
in
fisubrl
adcl
jg
test
call
xchg
les
add
out
inc
lret
xchg
pushf
lret
leave
and
test
fdivl
mov
sbb
or
and
jecxz
mov
xlat
mov
or
push
sbb
cmp
out
and
cmpsb
nop
call
sbb
push
out
push
nop
mov
sub
jmp
loope
push
ljmp
cld
dec
insb
lahf
fstpl
xchg
mov
xor
jp
outsl
cmpsl
ret
adc
inc
lahf
mov
xlat
aad
dec
daa
aam
dec
lds
outsb
mov
mov
popf
mov
push
loope
rorb
sbb
pop
dec
xchg
dec
inc
cmpsl
add
and
fsubl
stos
xor
divl
or
dec
add
cmp
imul
pop
int
adc
bound
jle
test
mov
in
imul
shlb
dec
jmp
dec
das
dec
andl
idivl
xor
pushf
insw
mov
jns
cmp
push
cwtl
decl
js
mov
iret
mov
cmp
xchg
xchg
arpl
sbb
gs
pop
int3
sbb
add
mov
cmp
xor
mov
jmp
xchg
xchg
jb
test
xchg
aas
mov
repz
xor
adc
lret
enter
jo
mov
cmp
addr16
push
out
dec
int
sub
dec
nop
lcall
pop
into
pop
outsb
fidivl
cld
pop
cmpl
lea
add
ret
jnp
in
or
adc
leave
sub
push
fucom
push
dec
ffree
push
mov
jno
enter
xchg
push
scas
stos
xchg
loopne
ds
ss
hlt
jo
shll
adc
jne
fmul
scas
xor
mov
pop
push
imull
jne
mov
int3
xor
cmp
sti
xchg
pop
push
jbe
push
lea
sbb
or
aas
roll
xchg
addps
add
push
adc
dec
test
clc
outsb
fwait
xchg
lahf
addr16
xchg
loope
xor
es
xlat
cmpsl
mov
mov
add
or
pop
mov
xchg
cld
sti
imul
sub
and
aam
clc
mov
mov
adc
sub
push
pop
cmc
cmp
sarb
fistpll
iret
movsl
add
scas
jge
stos
out
jb
icebp
adc
in
rcrb
in
and
cmp
sub
jl
jge
inc
fistpl
add
test
cwtl
cs
dec
cmp
cmp
jne
and
mov
cmp
mov
sub
sbb
test
mov
shrb
cltd
das
fcoms
das
dec
pop
incb
jns
jecxz
mov
mov
out
out
mov
sti
push
es
mov
mov
fwait
outsb
jge
punpckldq
add
mov
repz
jno
cli
nop
leave
repnz
push
and
lcall
xchg
xlat
cmp
sub
out
pop
add
and
and
jl
mov
jae
pop
inc
cmpsl
dec
scas
mov
imul
int3
inc
popa
xchg
jmp
push
cmpsl
dec
xchg
adc
lcall
inc
adc
ljmp
iret
nop
pop
out
mov
das
cmp
ljmp
sbb
xchg
push
and
mov
jbe
adc
xor
push
lea
mov
mov
dec
enter
jno
sub
mov
ja
mov
ficompl
divb
jp
sub
inc
cmp
inc
sub
jle
push
cmp
insb
mov
sbb
sbb
fidivs
cltd
roll
xchg
mov
fisttpll
cmc
dec
into
jns
xchg
pop
push
cld
xor
add
sbb
sbb
mov
cmc
nop
xor
dec
inc
inc
jo
push
enter
jecxz
xor
dec
mov
push
ret
sbb
add
inc
pop
ficomps
fildl
fiadds
push
mov
jo
outsb
inc
daa
mov
xchg
and
scas
cli
xor
ss
pop
cmp
dec
xchg
sub
adc
pusha
push
stc
mov
pop
fsts
sbb
mov
pop
fisttps
sub
push
dec
int3
fisubl
call
filds
sbb
xchg
and
cs
pop
lret
push
cs
or
fisubs
push
push
loop
adc
bound
xor
iret
lret
mov
pop
call
jbe
int3
sbb
sti
lcall
adc
mov
cmc
dec
xchg
adcl
subb
xchg
pusha
inc
imul
sub
dec
xchg
xor
xor
mov
lock
inc
outsb
push
sub
or
add
pop
test
push
js
mov
insl
push
rclb
or
leave
pop
adc
jb
jno
cld
mov
or
lods
jae
cmp
dec
movsl
mov
pusha
movl
iret
leave
xor
jb
dec
mov
sbb
outsb
mov
fsubrs
rclb
mov
ret
iret
xchg
jnp
cmpsb
mov
push
fidivs
test
pop
ds
addr16
and
cmpsl
mov
loopne
jae
dec
adc
jb
adc
ficompl
add
add
dec
mov
pop
push
loope
sarl
fcmovnbe
push
lahf
pusha
jl
in
jnp
mov
xor
xor
fsts
je
jge
push
jne
dec
loope
je
or
inc
inc
cmp
das
jg
cmp
movsl
inc
test
xor
jecxz
pop
jae
push
loope
popa
lcall
mov
push
rcl
sub
ja
mul
xor
mov
xchg
cmp
mov
fistps
xchg
aaa
inc
pop
iret
cwtl
rorb
xchg
mov
push
stos
cmp
sahf
fs
pop
push
sub
jmp
jecxz
sti
arpl
mov
fs
ljmp
xor
xchg
and
mov
repz
mov
jne
xor
leave
push
sarl
cmp
loope
and
jl
addr16
lret
shlb
pusha
mov
push
daa
cmpsb
sbb
xchg
inc
cmc
pop
sub
fs
mov
repz
adc
inc
add
or
sti
pushf
lea
jp
push
lods
or
jg
std
push
jbe
loopne
adcl
push
cmpsl
mov
enter
fcoms
out
mov
repnz
loop
insl
dec
add
mov
or
or
lcall
jge
cld
adc
inc
pop
inc
call
inc
fcomip
push
test
fs
mov
movl
fildll
mov
fsubs
jle
sbb
add
addr16
sahf
adc
loopne
and
add
pop
mov
call
mov
mov
mov
popf
push
or
sub
pop
leave
int3
sahf
jp
clc
push
sbb
shrl
movsb
faddl
cmc
cmp
dec
call
adc
jecxz
pop
inc
imulb
outsb
jecxz
mov
or
or
jecxz
cmpsl
sahf
mov
ret
outsl
in
aas
insl
sahf
cmp
jbe
aas
dec
sbb
push
clc
out
movsb
shlb
mov
imul
xchg
jae
insb
push
mov
sbb
mov
xchg
divl
and
loop
push
jno
mov
mov
ret
cmc
sbb
pop
bound
outsb
mov
mov
notl
icebp
xchg
out
repnz
enter
out
jns
fidivrl
dec
repnz
mov
push
xchg
dec
test
bound
bnd
adcb
cmp
dec
in
stos
stos
add
jg
jg
lods
mov
lods
stc
fistpl
sbbb
stc
das
decl
xor
push
lods
shl
adc
xor
scas
mov
sahf
ss
mov
sbb
subl
lods
push
les
gs
push
pop
push
pop
ja
sbb
push
push
push
sahf
or
pop
mov
push
lods
pop
in
cld
ss
xchg
in
and
mov
sub
sub
loop
loope
mov
popf
cli
outsl
pop
mov
loope
fsts
into
mov
data16
mov
idivl
mov
and
iret
dec
aas
cmpsl
mov
lock
sbb
subb
gs
cmp
enter
adc
rorl
aaa
in
das
lret
insl
pop
pushf
sub
cmc
gs
sbb
xor
and
inc
xchg
test
mov
dec
addr16
fisttpl
ficoms
add
pop
loopne
out
mov
sbb
jne
jnp
es
fbld
sbb
flds
cmp
stos
jmp
and
push
aam
add
and
mov
imul
scas
imul
jp
lahf
movsb
shll
hlt
jp
pop
jbe
xchg
dec
cmpsl
rcrb
mov
ret
aam
lock
jnp
mov
fimull
push
leave
sub
add
das
jae
cltd
mov
outsb
sub
cmpsb
sub
cld
push
inc
sbb
adc
mov
pop
pop
inc
test
nop
sub
sub
popa
mov
jp
lock
fwait
sub
mov
push
mov
out
aam
test
das
imulb
sti
les
popa
dec
gs
inc
ja
ja
aam
icebp
sub
loop
aam
test
jb
lods
aas
fsubrs
pop
sub
mov
fsts
dec
sub
xor
outsb
pop
shl
ret
mov
xchg
push
out
xor
mov
dec
add
fwait
lahf
stos
sub
xchg
std
jnp
pop
divb
rol
dec
sti
pop
leave
cmpsl
sub
xor
insl
test
sbb
popf
mov
push
mov
pop
xchg
pop
sbb
movsl
adc
sub
mov
xchg
fisttps
cmp
pop
adc
cmp
mull
sub
loopne
and
sbb
mov
sbb
jp
and
bnd
loope
sub
adc
notl
xchg
pop
adc
in
adc
lock
rcr
mov
outsl
or
or
cld
fsubl
inc
into
mov
fs
orl
mov
dec
int3
cld
mov
fiadds
cli
jae
mov
sub
pop
and
popf
imul
push
out
and
jmp
mov
lret
adc
cmp
mov
enter
add
cmp
out
inc
das
jp
outsb
ljmp
mov
popa
cld
and
push
pop
rcll
sbbl
and
sbb
xchg
inc
cmp
xlat
shlb
rcrl
add
sbb
mov
xlat
mov
and
aaa
lcall
pop
cmc
inc
inc
or
xor
xor
movsl
or
scas
inc
sbb
fldcw
add
mov
jnp
or
xor
jo
loopne
fdecstp
fisttpl
lods
pop
lcall
mov
mov
cmp
adc
pop
jp
imul
adc
les
pop
add
movsb
sbb
movsl
sbbl
iret
or
fidivl
jno
pop
mov
popa
sahf
in
shlb
orb
jge
or
sbb
add
pop
mov
cmp
les
arpl
lock
mov
pop
lahf
xor
pop
stc
orl
cmpsl
mov
sti
aas
fimull
in
pop
fwait
sub
xor
pushf
ret
pop
data16
imul
out
or
xor
or
in
add
int
adcb
mov
int
mov
shlb
xor
sahf
icebp
inc
hlt
clc
loopne
xchg
push
ds
outsb
pop
cmp
mov
push
mov
sub
test
stos
fs
push
add
push
xorb
pop
add
dec
rcr
jb
in
cmc
sub
jle
clc
mov
cmpsl
pop
ss
lret
in
rcrl
je
and
out
mov
sahf
ss
out
mov
pop
scas
pop
cmpsb
inc
arpl
aad
stc
loop
inc
arpl
fdivp
movsb
into
iret
hlt
push
arpl
aam
rcrl
dec
add
and
cwtl
cmc
gs
xchg
inc
push
in
cmp
movsl
mov
pop
mov
sbb
inc
fbld
lods
pop
push
pop
not
dec
lds
pusha
sub
lods
and
fldenv
enter
mov
test
mov
mov
mov
outsb
jl
sub
lods
fdivl
fnstcw
sbb
jo
enter
leave
and
xor
scas
cmp
cltd
or
stos
ljmp
sub
ja
push
and
mov
subl
call
cmpsb
dec
inc
sub
jno,pt
jle
lods
insl
mov
mov
or
lds
inc
jno
mov
rolb
iret
xchg
xchg
sub
jns
mov
jno,pt
fs
fisttps
push
pop
lret
xor
add
mov
fisttpl
subl
pop
fst
adcb
in
sbb
int3
out
fwait
mov
ficoml
mov
vmaxps
mov
sub
inc
add
push
lock
cmp
in
xchg
in
lds
call
cmp
incl
cli
inc
sbb
jne
mov
pop
scas
movsb
imul
sub
cs
push
hlt
sbb
lret
shl
xor
mov
push
daa
rcl
cmp
test
push
mov
cmpsb
fstps
fidivrl
or
pop
or
orb
ret
test
add
push
daa
in
sub
aas
sub
sub
inc
icebp
mov
jnp
pusha
inc
rcrl
adc
push
jb
or
ja
sbb
mov
sub
or
ficomps
xor
fildl
cmpsl
xchg
mov
xchg
dec
xchg
or
jo
lock
mov
in
fs
xor
pop
repz
dec
leave
xchg
mov
stos
adc
shr
add
sbb
shll
outsb
add
add
cli
fidivrs
in
ljmp
shll
adc
mov
icebp
pop
lahf
jbe
push
inc
add
sbb
cmpsl
mov
iret
inc
jge
lock
iret
cltd
sahf
mov
pop
cmp
xchg
lds
or
lret
pop
inc
xorl
or
mov
cmc
pop
jmp
out
pop
imul
cmp
enter
push
inc
xchg
and
cmp
or
inc
mov
pop
in
ret
jp
jmp
lar
mov
js
sub
dec
adcl
sbb
test
sbb
out
or
rcrb
pop
add
mov
or
dec
or
pop
jb
ret
shl
ss
fisubrs
jl
cmpl
cmp
loopne
jge
hlt
push
cmpsl
fs
andl
jmp
stc
cmp
icebp
adc
pop
mov
daa
cmpsl
pop
mov
adc
mov
lods
je
cmpsl
xchg
andl
shlb
lahf
in
push
outsl
sub
sbbl
push
fwait
rcll
adc
lcall
push
mov
pop
stc
xchg
mov
out
jb
leave
inc
fdivl
sbb
and
movsl
dec
dec
shrl
mov
mov
cmp
xor
popa
sahf
cmp
in
ja
pop
mov
jns
dec
popa
cmc
movsb
push
stos
pop
push
cwtl
sub
cmp
sbb
jmp
push
outsb
out
scas
push
push
ja
ljmp
loopne
je
insb
test
cmp
test
jle
mov
out
rcll
xchg
add
daa
xchg
mov
dec
push
mov
cmp
inc
pop
stc
lcall
sbb
repnz
mov
jmp
jge
fs
shll
inc
aam
out
xchg
push
cld
mov
mov
xchg
fcompl
es
and
stos
and
and
loope
pop
cmp
xchg
inc
pop
jg
jo
mov
or
add
cwtl
sub
dec
inc
mov
dec
push
sub
push
adc
stc
inc
mov
add
mov
test
jnp
mov
lret
dec
sbb
pusha
xchg
or
insb
sbb
jmp
ds
test
aam
cmp
xchg
mov
pop
xchg
outsl
xor
mov
cli
cmp
mov
adc
fnstsw
pop
je
xchg
loop
or
adc
dec
pop
out
ljmp
imul
mov
and
jmp
pusha
xor
or
and
int
stos
stos
xor
add
push
or
mov
mov
sub
mov
pusha
dec
xor
push
adc
xchg
gs
or
sahf
iret
outsb
testl
andl
cmove
mov
int
js
lock
fdivrs
in
dec
mov
stos
add
aam
mov
inc
mov
mov
cmpsl
mov
iret
push
sti
or
and
jns
xor
jecxz
es
push
sub
std
icebp
xlat
adc
mov
mov
dec
lcall
push
mov
adc
lods
mov
mov
sbb
mov
sbb
mov
jge
or
xchg
sbb
int3
inc
in
insl
sbb
lret
out
or
iret
push
repz
out
mov
sub
fs
dec
call
adc
aad
aaa
notb
fucomp
movsl
mov
push
push
test
jge
movsl
repnz
ret
pop
pop
mov
es
sbb
push
lcall
push
cs
mov
xchg
sbb
pushf
mov
sbb
test
jae
out
xor
pop
or
ret
cmpsb
jnp
mov
sbb
pusha
stc
jl
sub
sti
mov
enter
fwait
xchg
xor
das
cltd
dec
sub
test
clc
adc
das
inc
dec
xorb
enter
pop
loope
sub
arpl
add
xchg
mov
daa
cmpsl
adc
fcmovbe
xor
jmp
jmp
movsl
gs
orb
inc
iret
sbb
test
je
stos
cmp
test
jno
divl
movnti
push
aam
sub
les
adc
out
push
pop
aad
mov
ret
sub
lret
stos
into
int3
cltd
lods
ret
scas
gs
rolb
lahf
mov
stos
jecxz
icebp
mov
cwtl
insl
sbb
mov
bound
enter
sub
mov
dec
lea
cltd
jmp
jp
mov
das
stos
xor
aad
add
mov
or
imul
cmpsl
and
jg
divb
xlat
inc
neg
pop
mov
mov
jge
sbb
push
lret
jecxz
sti
cmp
cld
mov
push
call
xor
test
dec
dec
lret
pop
jnp
xorb
mov
xor
inc
vpunpckldq
cmp
scas
push
add
mov
sti
ds
pop
notw
pop
jge
daa
jl
cmp
out
popa
xchg
push
fidivrl
outsb
into
mov
fistl
inc
push
dec
xchg
dec
in
sub
pushf
cmpsb
pop
cmp
movsl
push
push
call
out
jg
lea
cmc
cmc
add
xchg
popf
mov
aas
add
add
std
clc
cmp
jp
dec
jne
mov
push
mov
jl
ss
pop
jae
and
jnp
xchg
imul
and
push
sarl
lea
aas
mov
popl
aas
pop
stos
rol
rorb
inc
stos
jmp
pop
jne
mov
imul
sub
int3
add
push
pop
dec
push
push
aad
cltd
call
ret
xchg
fdivrl
adc
mov
adc
mov
lahf
inc
mov
inc
or
icebp
jg
fbstp
mov
icebp
cmpl
push
lods
mov
nop
jecxz
in
jnp
mov
int3
mov
daa
aas
lods
pop
imul
movsl
push
data16
pop
xchg
xchg
push
add
sub
mov
xchg
iret
mov
and
and
ret
xlat
xorb
sub
rcr
sti
xchg
pop
loop
pop
leave
inc
sbb
sbb
fldcw
je
pop
cli
adc
mov
cmp
pop
mov
inc
fldl
in
mov
in
push
add
lcall
xor
aam
shll
xor
nop
sub
or
inc
inc
repz
xchg
je
cmovne
sti
sbb
jne
movsb
les
dec
jp
popa
scas
push
add
xchg
add
cwtl
fwait
push
cld
sbbb
jle
dec
xchg
rclb
mov
and
sub
cli
in
sar
mov
in
popf
bound
cltd
lret
insl
in
mov
xchg
dec
loopne
or
push
call
xchg
xor
std
pop
fwait
aad
icebp
std
inc
pop
call
fcomps
cli
mov
jge
shr
dec
add
frstor
pop
add
push
int3
adc
int3
push
push
mov
shlb
mov
dec
dec
test
jae
arpl
push
lods
lret
int3
xchg
outsl
shlb
test
repnz
jb
cmp
popf
decb
push
lods
adc
cmovle
in
pop
fstps
cltd
js
mov
xchg
test
mov
mov
das
bound
add
jno
in
mov
pop
stos
xor
movsl
jmp
sbb
fwait
sub
aad
cmpsb
xor
aam
and
rorb
cmp
xorl
push
mov
std
dec
test
call
mov
outsl
push
stos
out
cmp
aam
iret
add
cmpsl
mov
js
jne
add
adc
in
push
inc
mov
xchg
cmc
aas
movsb
xchg
sti
push
pop
jae
stos
std
jge
movsb
ret
push
idiv
mov
dec
push
arpl
sbb
rcrl
cmc
xor
mov
mov
lcall
sbbb
in
jmp
jl
in
adc
daa
sahf
lahf
rorb
jae
cmpsb
mov
sahf
xor
push
xor
cltd
scas
sub
scas
xchg
push
sbb
xchg
in
rclb
test
es
push
or
xor
ss
sub
les
dec
pop
test
cmpsb
dec
mov
sub
xor
stos
and
and
outsb
aam
movsl
and
push
pop
rcrl
out
decb
xor
jno
ret
jl
repnz
or
mov
iret
mov
mov
loopne
ljmp
add
xchg
inc
andb
call
add
dec
fmull
fbld
mov
xchg
lcall
add
rcr
je
mov
mov
mov
outsb
adc
adc
dec
mov
mov
addr16
jmp
sub
orb
test
outsb
xlat
add
repnz
inc
daa
and
int
jmp
add
fwait
adc
inc
cmp
in
notb
cmpsb
fildll
lret
push
jno
jbe
lcall
jge
mov
movsb
sahf
pushf
push
aam
cmpsb
pop
out
inc
loopne
jp
sarl
mov
pushf
test
out
add
pop
push
xor
jg
pop
mov
addr16
lcall
mov
cmp
cmp
push
jge
repnz
jmp
rcll
add
mov
stos
repz
fidivrs
dec
and
out
in
in
inc
int
sub
test
in
inc
adc
ret
mov
push
mov
cwtl
loopne
pop
in
push
push
push
and
mov
out
repnz
add
scas
lahf
test
insl
xchg
or
xchg
leave
jno
sbb
xor
lods
test
leave
stc
mov
mov
fwait
out
out
pop
movsb
pop
jp
cmp
daa
xchg
xor
and
lods
and
cmp
loope
jb
addr16
shl
sbb
shrl
cmpsl
adc
xor
lcall
dec
cmp
and
pop
cmpxchg
data16
addb
sbb
inc
dec
push
sarb
pop
js
pushl
aad
adc
repnz
js
jmp
mov
pop
call
in
adc
mov
or
jae
js
mov
mov
add
loope
jbe
iret
push
push
dec
inc
mov
into
xchg
xor
popf
mov
test
inc
lahf
sbb
pop
in
sbb
ret
outsl
push
mov
sub
sbb
stos
stos
and
xchg
mov
push
stos
push
push
mov
push
or
fcomp
adc
dec
and
adc
mov
cwtl
xor
push
xlat
dec
and
push
ljmp
mov
jp
pop
jo
dec
mov
inc
xor
adcl
roll
sub
push
rol
out
div
push
dec
cmp
mov
dec
movsb
call
aaa
xor
movsb
leave
mov
dec
std
or
jns
and
inc
jmp
out
rorb
adc
xor
gs
fidivrs
pop
call
jecxz
aam
mov
dec
lcall
aam
dec
fistl
pop
ljmp
adc
cltd
test
inc
imul
and
sahf
pusha
push
push
arpl
pop
jle
dec
or
xor
daa
jmp
jg
sbb
lods
cmp
or
sarl
insb
mov
lahf
xchg
mov
and
mov
mov
outsb
js
dec
inc
and
stc
inc
aad
lcall
cs
dec
dec
mov
push
std
cld
add
outsl
clc
xchg
pop
sub
sub
cltd
sahf
jecxz
cmp
xlat
test
outsl
ret
subb
xchg
xor
pusha
add
fst
fsubrs
dec
dec
mov
sbb
stos
sbb
sub
push
pop
pop
sbb
and
jbe
jae
inc
repz
in
rcl
dec
cmp
jmp
add
fs
in
icebp
in
into
out
dec
adc
and
test
fsubr
andl
into
out
mov
cmp
push
and
xchg
mov
in
rcrb
ficompl
cmp
dec
popa
popa
je
jnp
mov
mov
mov
test
jns
cmpsb
ss
into
cmp
mov
and
mov
nop
mov
fucomi
pusha
inc
jnp
fs
add
fwait
xchg
mov
inc
cmp
xor
pop
sub
sar
add
pop
loop
xchg
in
icebp
inc
xchg
loop
sbb
sub
jge
repnz
mov
push
fwait
xchg
int3
sbb
out
test
xchg
xchg
inc
insl
js
mov
imul
subl
jns
inc
xor
xchg
insb
ficoms
mov
push
lods
cltd
jge
xlat
jl
stc
fsubl
fwait
sbb
and
cmp
or
sbb
repz
adc
gs
loopne
shl
je
push
inc
push
int3
out
pop
mov
and
wbinvd
dec
pusha
mov
leave
icebp
mov
loope
ficomps
in
jnp
stos
xchg
nop
rcrb
mov
cs
mov
inc
pushf
push
aam
dec
or
mov
or
sarl
imul
icebp
pusha
lock
jg
or
aam
lahf
cwtl
pushf
inc
cmp
dec
add
jae
push
movsb
pop
mov
lcall
cmp
cmp
push
sbbb
adc
or
call
add
xchg
push
pop
pushf
cmp
clc
cmp
mov
movsl
out
js
lret
repnz
xor
push
loope
stos
loope
movsl
jbe
sub
mov
enter
sub
out
xchg
jp
inc
lret
cld
cld
aam
andb
xor
rcl
or
ficomps
fdivrs
push
pop
push
xor
inc
loope
pandn
adc
daa
pop
push
adc
pop
and
sub
dec
hlt
adc
out
dec
cld
add
js
loop
movsl
cmp
aam
add
push
jge
dec
pusha
sbbl
xchg
test
or
mov
and
je
jg
enter
mov
cmc
pop
xchg
mov
shl
orb
lock
ljmp
push
mov
adcb
pop
jbe
or
dec
xor
cld
inc
out
mov
jns
lods
scas
pand
mov
adc
xor
call
jle
push
add
idivl
ss
mov
pop
and
jo
out
stos
inc
xchg
pop
andl
fdivs
rcrb
mov
andb
imul
pop
repz
shll
lahf
sti
enter
push
adc
pop
loope
or
xchg
sbb
xchg
jns
int
clc
decl
addr16
mov
jp
mov
shrb
aam
addl
stc
jle
ja
add
test
inc
mov
mov
lods
test
mov
sub
push
xor
jnp
cmpsl
enter
in
pop
mov
cld
sub
inc
movl
sub
and
sub
ss
in
test
fisttps
ja
xor
and
rcrb
gs
push
dec
leave
pop
adc
daa
gs
cmp
fstpt
mov
mulb
addb
fbstp
add
push
in
call
sahf
shll
and
stc
mov
jns
or
stos
lods
or
or
scas
inc
sti
insl
jg
movsb
es
cmc
scas
call
sbb
imul
lahf
xchg
cld
add
sbb
clc
cmc
jge
mov
int3
data16
or
mov
jno
mov
xchg
loopne
mov
cwtl
pop
push
sub
inc
out
and
xchg
test
scas
xor
mov
cltd
clc
add
sbb
and
push
imul
lock
pop
sub
movsb
mov
es
adc
inc
stc
push
sbb
addr16
jge
lods
jae
and
jl
xor
cmp
idivb
xor
ror
ficomps
mov
lret
rcl
xchg
aaa
and
jns
sti
daa
fldenv
lahf
js
cmp
pop
or
sub
mov
ret
jb
scas
and
in
pop
sbb
lds
fwait
lods
insb
iret
in
adc
jp
jmp
loope
scas
dec
ss
cli
pusha
rorl
add
outsb
test
xchg
addl
icebp
jl
xchg
cmpsb
mov
fwait
or
lret
pushf
xor
notb
sub
sbb
sbb
les
arpl
lods
or
cmp
aad
mov
ffreep
ds
push
lock
mov
icebp
stos
sbb
dec
repnz
mov
inc
push
aam
movsb
push
xchg
sub
lods
push
add
imull
cmp
mov
push
cmp
not
inc
sbb
push
xchg
fs
aaa
fsubrp
rorl
sarb
inc
es
add
dec
das
mov
pop
aad
jg
lds
icebp
pusha
in
mov
shlb
test
leave
lcall
fbstp
push
pop
mov
mov
imul
scas
mov
push
or
ja
mov
sar
inc
sub
ja
fdivr
and
adc
xchg
jns
sub
push
xchg
mov
push
mov
cmp
and
mov
fstl
push
xchg
and
xor
in
mov
mov
decl
pop
std
loope
leave
push
js
mov
scas
insb
pop
sbb
cmp
jae
fidivrl
and
das
hlt
sbb
mov
cld
out
mov
mov
lods
mov
adc
test
out
mov
dec
cmpsb
add
int3
fdivrl
mov
cli
mov
inc
notb
or
adc
xchg
and
pop
push
inc
ret
mov
add
ret
xchg
push
das
or
imul
push
mov
inc
sub
inc
mov
inc
and
pop
xor
xor
sbb
stc
test
dec
out
inc
scas
cwtl
popf
mov
sbb
arpl
pop
faddl
xlat
sbbl
adc
in
push
or
dec
insl
imul
mov
mov
clc
pushf
inc
ljmp
fucomip
adc
push
or
pop
inc
fisttpl
scas
adc
out
fdivrp
xchg
mov
xchg
fcmovbe
fisttpl
inc
icebp
cli
loope
iret
add
pop
and
dec
jnp
out
inc
mov
test
inc
or
mov
das
cmc
jge
cltd
enter
inc
jne
test
enter
or
test
lods
jb
mov
clc
sbb
mov
aas
test
dec
rorb
sbb
dec
mov
push
fdivrs
mov
push
cli
xor
imul
insl
jb
aad
mov
iret
cmp
or
cmp
fsubrs
addr16
sarb
clc
repz
movsb
cli
sbb
or
push
jbe
mov
cmp
into
pop
inc
jbe
pop
ds
cmp
std
bound
into
pushf
jl
imul
add
loopne
inc
sbb
xchg
or
and
sbb
push
cmp
shrb
jnp
mov
mov
and
mov
stos
adc
mov
xchg
and
das
iret
xchg
jl
ljmp
xchg
push
and
adc
jecxz
adc
scas
cmc
push
adc
cmp
subl
aam
pop
inc
jl
add
in
xchg
pushl
mov
shl
mov
jae
xchg
jno
mov
add
xor
mov
and
jmp
xchg
cmp
pop
xor
lock
mov
adc
push
cmp
fsubl
xor
cmpsl
or
xorl
jl
testb
popa
mov
hlt
mov
cmp
ljmp
and
pop
in
sbb
dec
fdivrs
leave
pop
fimull
rorl
lock
ljmp
xor
in
sarb
cmp
int3
or
pusha
push
je
loop
ret
mov
push
push
fiaddl
jnp
jns
test
cmp
pop
adc
bound
mov
add
stos
jo
adc
lret
sti
xor
fiadds
add
aas
mov
xchg
push
sbb
rcrl
cmpb
mov
js
testl
push
imul
sub
mov
cmp
cli
fs
aam
sub
xorl
pusha
roll
daa
push
lret
xchg
fdivp
out
mov
and
mov
enter
cmp
int3
call
fldl
repnz
push
arpl
out
fisttpll
mov
out
pop
sub
mov
xor
sbb
shlb
lds
rolb
insl
arpl
or
or
sbb
ret
decl
cmc
push
or
cmp
push
pop
mov
mov
mov
leave
inc
push
popa
pusha
mov
jmp
adc
push
insl
lahf
add
popf
push
xrelease
faddp
call
and
mov
jl
add
or
fisubrl
dec
mov
push
arpl
or
sbb
push
int
mov
adc
mov
jge
mov
loop
addb
xchg
pop
push
xor
add
push
test
and
not
lret
push
shrb
pop
xchg
imul
insl
sbb
dec
inc
mov
dec
jns
imul
inc
jae
cs
cmc
mov
out
xor
and
pop
mov
mov
in
pushf
cmpsb
push
push
out
outsb
and
add
mov
pop
cltd
pop
jae
inc
imul
xor
pop
mov
nop
and
aam
mov
insb
xchg
ds
ss
inc
jo
mov
sub
mov
test
and
add
add
js
jnp
call
ret
xor
call
in
lds
mov
push
cltd
or
je
jmp
lret
jmp
jmp
xor
fs
xchg
cmp
les
gs
adc
ss
push
xor
insl
cmpsl
pop
add
and
lahf
test
inc
push
dec
pop
cmp
fs
ret
push
xor
mov
jge
jge
stos
lea
add
cli
mov
mov
cmp
std
xor
add
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
