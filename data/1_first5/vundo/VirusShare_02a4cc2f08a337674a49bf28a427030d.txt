or
ror
xor
xor
mov
rol
rol
ror
rol
dec
mov
mov
push
lea
rol
inc
mov
sub
jmp
je
mov
add
cmpl
je
push
push
push
jmp
test
jmp
add
add
push
ror
add
mov
add
inc
mov
and
sub
mov
ror
mov
jmp
push
jmp
subl
push
jmp
int3
call
nop
addl
call
test
je
add
ret
mov
jmp
ds
cwtl
cmpb
jne
nop
nop
shr
xor
add
mov
nop
push
nop
jmp
call
pop
add
add
jmp
call
push
push
dec
call
push
inc
pop
dec
addl
call
mov
mov
push
jmp
and
cmpw
je
jmp
sarl
fsubr
push
add
add
xor
call
add
pusha
jmp
fucomp
shll
fisttpl
add
push
mov
mov
mov
jmp
push
push
mov
jmp
lea
ror
rol
mov
add
push
call
jmp
test
jmp
jmp
lea
inc
mov
sub
cmpw
jmp
mov
call
popa
jmp
mov
ret
add
add
add
hlt
and
mov
mov
add
sub
test
jne
jmp
mov
mov
or
mov
sub
jmp
mov
or
mov
movzwl
jmp
call
mov
and
add
and
sub
mov
sub
add
mov
mov
test
jne
add
ret
ror
mov
jmp
mov
lea
mov
mov
shr
and
jmp
test
lea
jle
nop
nop
nop
nop
nop
mov
rol
inc
mov
jmp
call
mov
xor
mov
add
jmp
shr
and
add
test
jne
mov
mov
pop
ret
add
add
add
jmp
add
add
add
push
or
sub
mov
dec
mov
sub
test
jmp
push
jmp
ret
ret
inc
call
call
nop
call
call
leave
addl
call
ret
add
add
add
shlb
push
and
mov
movzbl
add
mov
lea
ror
or
and
mov
shr
and
lea
jmp
test
jne
movzbl
add
jmp
add
add
xor
cmp
mov
mov
jmp
add
add
add
add
lds
cmp
in
jmp
call
ret
add
add
add
jo
add
add
call
jmp
jne
shl
xor
mov
mov
mov
xor
and
cmp
sete
mov
ret
add
add
add
mov
or
add
and
add
and
xor
mov
lea
sub
test
jmp
call
pushl
ret
mov
rol
dec
sub
mov
ror
mov
shr
jmp
add
jmp
pop
inc
test
mov
and
add
jmp
in
pop
test
je
jmp
mov
mov
mov
rol
ror
mov
mov
add
jmp
and
rol
shr
inc
mov
add
test
je
jns
movzwl
push
jmp
mov
jmp
add
add
add
sbb
add
mov
jmp
add
add
and
mov
test
push
mov
movl
mov
jne
xor
ret
jmp
push
push
push
jmp
call
int3
call
inc
ret
call
dec
leave
addl
push
jmp
pop
jmp
call
subl
jmp
jne
add
jmp
add
jmp
add
and
dec
or
dec
mov
test
jmp
push
jae
call
push
jmp
dec
jmp
pop
subl
push
jmp
push
nop
subl
call
push
jmp
dec
push
inc
call
pop
leave
call
int3
addl
call
ret
add
add
add
jl
js
inc
aaa
and
nop
nop
nop
nop
mov
add
jmp
add
add
add
add
sub
add
test
je
jmp
and
rol
dec
mov
add
mov
sub
jmp
mov
mov
cmp
je
jmp
cld
adc
add
mov
movl
movl
call
lea
addl
jmp
mov
sub
mov
mov
jmp
jne
push
jmp
inc
subl
jmp
test
mov
jne
jmp
add
push
or
and
add
or
xor
mov
sub
jmp
dec
sub
and
sub
mov
movzbl
add
mov
lea
jmp
dec
divl
clc
shr
mov
mov
ror
xor
mov
jmp
cmpl
lea
je
push
push
inc
mov
sub
and
or
mov
sub
shr
jmp
or
and
or
and
mov
jmp
xor
mov
test
jne
add
ret
sub
shl
sub
xor
sub
mov
push
jmp
pop
pop
pop
subl
jmp
jne
add
add
ror
mov
mov
sub
add
add
mov
and
mov
lea
jmp
jmp
lea
nop
movzwl
jmp
add
add
add
adc
cmp
jmp
sub
mov
push
jmp
pushl
jmp
mov
mov
jmp
add
jmp
lea
jmp
add
add
jmp
push
call
nop
push
call
push
call
leave
ret
call
subl
jmp
mov
dec
shr
mov
sub
push
push
jmp
push
mov
movl
mov
push
mov
add
add
sub
xor
mov
push
jmp
add
les
pop
add
add
mov
call
cmpl
jne
jmp
push
push
call
jmp
push
push
and
add
mov
dec
mov
mov
jmp
add
add
cli
jmp
add
add
hlt
add
add
jle
add
jmp
mov
ror
rol
mov
mov
and
dec
add
mov
jmp
xor
inc
or
ror
xor
mov
lea
push
jmp
add
push
or
ror
or
mov
mov
sub
jmp
ror
add
dec
add
mov
and
cmp
jmp
lea
push
push
call
add
mov
xor
and
mov
add
test
jmp
lea
cltd
and
add
sar
test
jmp
push
jmp
call
pop
call
call
jmp
push
nop
subl
jmp
ret
mov
xor
test
je
movsbl
jmp
mov
and
sub
mov
mov
inc
mov
mov
add
add
mov
xor
mov
shl
mov
rep
movzwl
jmp
jne
and
add
add
jmp
jne
add
cmpl
jne
pop
pop
pop
jmp
jle
shr
mov
and
sub
mov
shl
dec
shr
mov
test
jle
ror
shr
or
mov
sub
sub
jmp
pusha
icebp
mov
mov
add
xor
shr
sub
shr
inc
mov
mov
mov
jmp
rol
add
xor
mov
test
jmp
or
sub
xor
rol
sub
mov
add
jmp
add
add
sub
jne
add
jmp
mov
pop
ret
add
add
add
jne
sub
sub
jne
test
mov
jmp
call
push
jmp
push
push
subl
mov
call
push
jmp
jmp
call
call
push
dec
call
push
nop
xorl
mov
jmp
add
sub
sub
or
and
mov
shr
and
add
test
mov
je
dec
mov
jmp
jne
cmp
je
add
cmp
jmp
add
sub
add
cmp
mov
mov
jmp
cmpl
jne
pop
pop
pop
mov
pop
jmp
mov
jmp
call
push
jmp
ret
pop
leave
call
call
ret
push
jmp
pop
ret
xorl
mov
call
push
jmp
push
call
inc
push
nop
dec
subl
mov
jmp
aas
push
sub
test
jmp
jl
pop
xor
pop
jmp
jl
or
and
shl
rol
mov
mov
mov
push
mov
push
jmp
ret
pop
mov
pop
ret
mov
ret
add
add
add
mov
add
add
shll
rorl
lret
jmp
call
add
mov
call
cmp
push
jae
call
push
jmp
call
dec
call
inc
addl
jmp
imul
add
add
in
add
add
in
mov
pop
ret
or
shl
inc
or
mov
mov
movzwl
jmp
add
inc
sub
shr
xor
dec
mov
jmp
std
leave
iret
xor
dec
and
inc
mov
add
jmp
add
inc
jmp
call
call
inc
xorl
call
push
jmp
int3
pop
push
dec
push
call
ret
push
push
subl
jmp
adc
call
add
add
mov
or
mov
jmp
add
jmp
call
push
jmp
jmp
push
xorl
push
jmp
push
call
call
nop
dec
xorl
push
jmp
call
addl
call
test
jmp
fs
mov
add
mov
lea
shl
add
mov
jmp
pop
push
cmc
rol
mov
shl
mov
mov
pop
add
pop
and
shr
dec
mov
pop
ret
add
add
add
mov
dec
das
movsl
mov
ljmp
je
add
ret
pop
pop
mov
jmp
outsb
adc
shr
and
add
test
je
xor
nop
nop
nop
nop
nop
movl
rol
ror
mov
sub
jmp
cmpsb
push
mov
jmp
push
addl
jmp
mov
pushf
jmp
adc
jecxz
sub
or
inc
xor
mov
pop
ret
add
add
add
jmp
push
call
call
push
ret
xorl
push
call
shr
add
mov
jmp
stc
adc
rorb
mov
rorb
or
add
movzbl
add
lea
add
and
rol
or
ror
mov
shr
and
add
jmp
jns
mov
call
enter
ret
call
jmp
pop
mov
add
add
ljmp
jmp
sbb
or
lea
jne
test
mov
jmp
call
cld
add
add
lea
call
jmp
cmp
xchg
lea
push
shr
mov
jmp
mov
je
shr
mov
mov
sub
mov
mov
add
jmp
jmp
loope
mov
out
inc
clc
xor
push
and
mov
xor
ror
mov
mov
mov
mov
cmp
jmp
add
cmp
enter
pop
jmp
jle
sti
movb
add
jmp
nop
nop
nop
nop
nop
movzbl
sub
inc
mov
or
sub
mov
and
add
jmp
inc
inc
jne
mov
add
pop
mov
mov
pop
mov
jmp
dec
in
sub
inc
and
sub
and
mov
xor
add
sub
jmp
mov
xor
jmp
testb
sbb
ret
add
add
add
test
lcall
pop
and
mov
pop
ret
add
add
add
nop
nop
nop
nop
mov
je
test
je
and
or
add
mov
mov
sub
nop
nop
nop
nop
nop
add
sub
mov
mov
jne
add
rol
xor
add
mov
mov
mov
movl
nop
nop
nop
nop
nop
jmp
movl
mov
nop
nop
nop
nop
nop
movl
jmp
lea
call
nop
nop
nop
nop
nop
cmpl
jne
nop
nop
nop
nop
nop
cmp
jne
call
test
mov
nop
nop
nop
nop
nop
je
sub
mov
sub
add
nop
nop
nop
nop
nop
sub
mov
mov
jne
mov
jmp
sub
nop
nop
nop
nop
nop
jmp
sub
shl
mov
movzbl
shl
add
nop
nop
nop
nop
nop
add
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
and
mov
mov
call
cmp
jb
nop
nop
nop
nop
nop
add
cmp
jb
add
cmp
jae
add
nop
nop
nop
nop
nop
test
mov
je
lea
dec
and
and
mov
sub
nop
nop
nop
nop
nop
mov
mov
add
sub
jne
mov
mov
sub
sub
mov
sub
mov
nop
nop
nop
nop
nop
or
or
shl
add
or
mov
movl
jmp
mov
mov
add
add
mov
nop
nop
nop
nop
nop
movl
mov
cmpl
nop
nop
nop
nop
nop
je
pop
mov
mov
or
ror
rol
mov
sub
pop
pop
sub
or
sub
sub
mov
pop
ret
add
popa
add
and
add
add
push
popa
add
add
add
loopne
add
into
pusha
add
add
add
mov
add
test
add
xor
add
popa
add
adc
add
push
popa
add
add
add
loopne
add
into
pusha
add
add
add
mov
add
test
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
gs
outsl
jbe
inc
jb
jae
add
add
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
adc
add
add
add
add
xor
add
add
add
fisttpll
add
add
sbb
add
add
add
xor
repnz
xor
push
ds
ds
ds
xor
cmp
xor
cmp
push
cmp
pop
cmp
xor
cmp
sbb
ds
cmp
aas
loop
mov
aaa
gs
es
xchg
cmp
xor
xor
cmp
add
add
test
aaa
xor
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
lods
rol
add
testb
mov
dec
xor
into
std
lret
out
gs
les
fisubrs
ss
mov
test
ss
insb
fidivrl
add
repnz
cwtl
je
and
aas
je
out
inc
push
fistpll
addr16
je
jmp
add
out
loopne
cmp
pop
std
iret
test
test
rolb
mov
shll
or
int3
int3
int3
lds
andl
ficoml
xchg
pop
adc
rorl
xor
outsl
insl
sbb
jo
lret
xchg
xchg
jae
push
hlt
mov
inc
dec
mov
and
inc
into
add
dec
into
insl
mov
inc
cmp
adc
add
sub
nop
push
push
int
jo
mov
dec
popl
insl
xor
lds
xlat
rorl
insb
repnz
les
mov
cli
xchg
popf
push
mov
outsb
dec
push
dec
cmc
xor
mov
sbb
mov
push
clc
popa
pop
cmpsb
jo
cmpb
dec
inc
or
sub
pop
mov
mov
popf
cs
xchg
cwtl
