ret
ret
push
xchg
xor
xor
ror
xor
and
add
xor
pop
and
sub
mov
jmp
mov
xchg
jmp
add
xchg
xor
xchg
inc
mov
call
mov
jmp
add
fcmovnbe
or
dec
add
mov
jmp
lea
jmp
jmp
push
inc
push
call
leave
int3
push
mov
push
jmp
ret
pop
ret
call
call
push
inc
inc
addl
pushl
mov
pushl
xchg
call
mov
leave
jmp
leave
push
call
call
leave
ret
jmp
call
call
dec
call
ret
dec
push
leave
call
call
leave
leave
nop
add
add
add
sbb
sbb
mov
pop
push
jmp
push
push
jmp
call
xchg
sub
pop
call
push
pop
cmpb
mov
je
cmpb
xchg
je
push
dec
or
mov
xor
sub
pop
add
jmp
and
xchg
jmp
push
push
pop
call
mov
push
push
pop
xor
addr16
jmp
add
dec
mov
mov
mov
xchg
mov
xchg
mov
addr16
mov
xchg
ret
jmp
call
ret
call
call
call
leave
jmp
call
add
add
add
hlt
xor
mov
sub
xchg
jmp
add
and
xor
and
mov
push
mov
push
nop
push
xchg
and
add
mov
jmp
or
xor
pop
and
add
sub
pop
jmp
xchg
add
add
add
xchg
call
xchg
add
xchg
mov
jmp
push
addr16
jmp
add
add
add
add
nop
add
and
rol
mov
jmp
add
xchg
jmp
add
add
xchg
add
nop
jmp
add
push
mov
and
and
mov
sub
push
pop
push
mov
push
mov
call
nop
jmp
pop
jmp
jmp
call
push
nop
call
je
push
xchg
push
jmp
nop
addl
shr
mov
call
nop
movl
mov
jmp
mov
jmp
nop
dec
push
push
call
push
int3
leave
jmp
add
add
add
call
xchg
call
addr16
push
mov
jmp
sub
push
pop
mov
xchg
jmp
cwtl
es
add
call
xchg
call
mov
push
nop
call
mov
jmp
andl
mov
push
mov
xor
addr16
jmp
add
add
add
add
mov
call
push
pop
push
xchg
call
xchg
test
jmp
push
call
jmp
push
pop
call
call
pop
jmp
add
nop
call
xchg
cmpl
xchg
jne
push
xchg
push
xchg
call
mov
push
nop
call
nop
jmp
sub
mov
ror
xor
mov
push
nop
push
xchg
push
mov
push
jmp
dec
addl
add
push
pop
jmp
jmp
jmp
mov
mov
jmp
add
add
add
nop
dec
mov
push
addr16
call
addr16
jmp
dec
xchg
jmp
add
push
nop
xor
shl
mov
push
push
pop
push
mov
jmp
push
jmp
pop
push
ret
jmp
jmp
leave
subl
rol
add
xor
mov
call
mov
jmp
push
xchg
jmp
rol
xor
sub
ror
and
mov
shr
jmp
push
int3
jmp
push
dec
nop
call
dec
add
mov
mov
addr16
jmp
jle
mov
push
pop
jmp
add
rol
or
or
mov
jmp
test
jmp
call
call
push
jmp
inc
call
jmp
call
call
lea
jmp
push
dec
push
jmp
ret
call
int3
call
call
call
pop
mov
jmp
int3
nop
inc
dec
inc
call
call
int3
push
call
call
jne
sub
dec
mov
movzbl
jmp
call
jmp
push
push
leave
call
push
push
call
inc
push
push
inc
xchg
mov
mov
mov
mov
jmp
lea
jmp
call
call
call
push
call
push
push
leave
leave
inc
call
push
pop
inc
dec
dec
call
nop
test
jmp
leave
call
int3
call
jmp
call
dec
jmp
call
jne
shl
dec
or
mov
shr
mov
shl
dec
pop
ret
jmp
push
leave
call
push
call
ret
nop
push
ret
add
add
add
imul
call
test
jmp
inc
pop
pop
call
call
push
push
jmp
call
push
pop
jmp
ret
int3
pop
push
dec
call
leave
call
ret
int3
jne
ret
jmp
jmp
dec
call
jmp
call
ret
dec
push
nop
push
xchg
push
jmp
ret
dec
pop
jmp
call
push
push
addl
mov
rol
add
shl
shl
mov
call
push
pop
jmp
lea
jmp
leave
jmp
call
call
jmp
cltd
jmp
push
ret
inc
jmp
call
push
and
mov
add
xchg
push
mov
jmp
add
xchg
rol
add
or
mov
dec
and
mov
jmp
jmp
jmp
add
add
add
push
xchg
dec
xor
mov
ror
or
mov
sub
nop
push
mov
jmp
push
xchg
call
mov
push
jmp
call
jmp
xorl
pushl
addr16
call
mov
jmp
push
jmp
jmp
jmp
dec
call
leave
leave
xorl
push
jmp
int3
call
jmp
push
nop
addl
inc
sub
and
or
push
shl
inc
xor
mov
and
mov
add
inc
mov
add
xor
and
dec
test
jne
pop
lea
call
push
pop
test
jmp
push
int3
call
push
inc
jmp
ret
push
call
dec
push
jne
add
addr16
jmp
add
sub
add
and
mov
mov
nop
andl
mov
jmp
call
addr16
shl
xor
add
and
or
pop
pushl
nop
push
jmp
call
push
xorl
pushl
mov
push
jmp
push
push
push
push
push
subl
call
xchg
and
and
add
pop
ret
jmp
call
call
call
push
call
leave
add
add
add
jmp
pop
jmp
call
inc
addl
pushl
xchg
call
mov
mov
pop
ret
jmp
push
call
push
call
int3
jmp
push
jmp
call
call
nop
leave
add
add
add
xchg
call
push
pop
and
mov
shl
mov
xor
mov
jmp
push
jmp
ret
nop
jmp
leave
subl
jmp
add
nop
jmp
add
add
add
leave
call
call
pop
call
jmp
pop
jmp
nop
call
ret
jmp
push
call
leave
inc
call
ret
inc
push
ret
push
je
push
addr16
push
jmp
call
leave
leave
call
int3
call
ret
addl
inc
or
add
xor
dec
mov
jmp
add
mov
pop
dec
inc
add
pop
push
nop
call
xchg
call
xchg
call
addr16
push
mov
call
xchg
jmp
mov
or
mov
xor
mov
pushl
sub
or
and
pop
pushl
and
pop
rep
jmp
inc
dec
dec
push
push
jmp
call
push
push
ror
sub
mov
or
ror
mov
rol
add
add
add
xor
mov
jmp
push
mov
call
xchg
pushl
sub
shr
pop
push
jmp
push
call
push
subl
jmp
ret
jmp
call
push
int3
jmp
jmp
push
call
push
call
nop
push
push
pop
push
jmp
ret
xorl
pushl
or
inc
push
and
add
dec
and
xor
mov
dec
mov
add
add
sub
dec
test
jne
pop
pop
call
mov
test
jmp
jmp
push
call
ret
push
jmp
jl
add
xchg
ret
jmp
inc
jmp
inc
leave
nop
leave
push
push
call
jmp
jmp
ret
jmp
call
call
call
push
call
call
call
call
call
dec
call
call
dec
call
add
add
add
adc
add
add
mov
sub
ror
and
mov
pusha
jmp
push
push
call
call
push
push
push
call
push
and
or
or
mov
jmp
movl
mov
add
mov
shr
mov
shr
jmp
call
call
push
ret
add
push
pop
and
mov
mov
addr16
ret
jmp
push
call
call
call
dec
push
int3
call
ret
leave
ret
ret
add
add
add
clc
add
and
aam
xlat
call
pop
push
push
call
push
int3
ret
int3
call
call
push
push
push
xor
mov
test
jmp
nop
call
call
push
call
jle
mov
nop
push
addr16
mov
mov
test
jmp
inc
nop
jmp
int3
jmp
int3
push
leave
nop
jmp
call
xchg
dec
xchg
sub
xor
mov
add
mov
shr
xor
and
ror
and
pop
jmp
jmp
rol
shr
shl
inc
or
mov
mov
nop
add
push
pop
jmp
test
jmp
pop
dec
jmp
call
call
jmp
call
leave
jmp
push
leave
pop
jmp
dec
push
call
call
dec
push
pop
mov
jmp
ret
jmp
pop
call
pop
push
nop
push
push
ret
jmp
add
xchg
movzwl
jmp
nop
call
push
call
call
call
leave
nop
jmp
leave
push
dec
call
call
push
jmp
ret
xorl
xor
pop
cmp
mov
mov
jmp
leave
call
push
call
push
call
inc
dec
call
push
push
mov
jmp
int3
jmp
push
leave
call
push
call
call
int3
dec
push
ret
push
nop
jmp
je
push
jmp
push
pop
call
push
call
inc
inc
addl
add
sub
or
and
mov
call
nop
shl
pop
lea
jmp
pop
call
call
push
push
jmp
push
push
xchg
push
jmp
int3
inc
call
jmp
jmp
xorl
jmp
add
xchg
cmpl
mov
je
push
mov
sub
sub
add
xor
shl
mov
sub
xchg
shr
jmp
push
call
nop
jmp
jmp
push
leave
call
call
push
push
inc
jmp
lea
jmp
jmp
push
push
leave
push
call
jmp
push
mov
jmp
push
leave
push
call
pop
push
call
call
ret
jmp
mov
jmp
call
call
call
call
jbe
add
nop
jmp
movb
mov
movl
xchg
call
xchg
popa
jmp
push
call
call
pop
push
push
call
call
inc
call
dec
nop
leave
jmp
mov
pusha
jmp
nop
call
call
jmp
call
jmp
call
inc
jmp
and
mov
mov
xchg
lea
jmp
ret
inc
leave
call
call
pop
dec
push
push
inc
nop
push
xchg
mov
xchg
jmp
jle
and
mov
mov
mov
sub
mov
sub
xchg
dec
jmp
push
jmp
push
push
call
call
inc
jne
mov
mov
sub
nop
jmp
inc
xchg
ret
jmp
call
jmp
jmp
call
leave
call
call
int3
sub
pop
rol
pop
ret
jmp
push
push
leave
int3
push
call
dec
call
push
pop
push
call
add
add
add
lods
inc
add
pop
call
push
dec
nop
leave
jmp
push
call
dec
lea
jmp
push
jmp
call
call
call
push
jmp
call
xchg
xor
mov
mov
rol
add
add
mov
shr
shl
mov
jmp
call
push
pop
popa
jmp
call
call
call
push
call
call
jmp
dec
leave
call
leave
jmp
mov
call
xchg
ror
ror
mov
mov
push
and
rol
sub
pop
call
nop
ret
jmp
push
push
call
call
call
push
dec
nop
call
add
add
add
dec
cld
jmp
leave
ret
push
pop
jmp
dec
push
ret
call
leave
call
jne
sub
pop
test
jmp
call
push
leave
nop
jmp
push
mov
jmp
jmp
int3
call
push
int3
int3
jmp
dec
push
call
dec
jmp
add
xchg
test
jmp
jmp
call
push
nop
call
push
leave
jmp
call
ret
ret
pop
jmp
push
mov
jmp
jmp
jmp
call
int3
push
push
dec
jle
jmp
push
jmp
push
call
push
push
call
push
call
subl
push
addr16
call
xchg
push
jmp
inc
call
jmp
dec
addl
shr
add
and
rol
dec
pop
nop
nop
nop
nop
nop
shr
inc
mov
or
and
sub
xor
pop
and
or
dec
pop
xor
mov
inc
mov
add
mov
xor
push
pop
rorl
jmp
int3
push
jmp
call
jmp
leave
call
add
mov
dec
jmp
dec
call
jmp
call
push
call
ret
inc
pop
jmp
shr
ror
xor
and
add
add
sub
mov
add
mov
mov
nop
shl
and
mov
or
mov
add
nop
mov
mov
shr
mov
ror
ror
mov
shr
rol
mov
rol
sub
or
shr
mov
jmp
add
mov
movzwl
jmp
leave
call
jmp
leave
jmp
jmp
call
push
call
int3
push
jmp
ret
nop
call
push
inc
push
addl
add
or
add
xor
and
pop
cmp
mov
mov
jmp
jmp
jmp
int3
jmp
push
int3
pop
mov
jmp
dec
dec
jmp
call
inc
call
dec
lea
jmp
jmp
call
jmp
dec
int3
dec
leave
jmp
lea
jmp
jmp
nop
leave
push
push
nop
jmp
jle
or
mov
add
xchg
add
xchg
dec
jmp
jmp
jmp
call
nop
push
call
call
call
call
jne
test
jmp
jmp
call
mov
jmp
push
ret
call
jmp
push
call
call
push
leave
jle
jmp
push
xchg
jbe
fcom
loopne
call
mov
mov
mov
andl
xchg
add
xchg
jmp
ror
jmp
push
call
call
jmp
xor
nop
add
nop
dec
jmp
call
push
push
push
call
push
push
call
call
leave
inc
jne
rol
add
ror
or
pop
and
pop
leave
jmp
pop
call
call
call
call
push
jmp
call
jmp
leave
int3
call
inc
ret
jmp
leave
pop
jmp
leave
push
push
nop
ret
add
add
add
shr
jmp
dec
call
call
ret
dec
je
mov
xchg
jmp
jne
rol
rol
xor
pop
ret
jmp
ret
push
call
push
dec
call
call
jmp
jmp
int3
call
nop
push
int3
add
add
add
mov
jmp
call
ret
int3
push
call
inc
mov
and
add
or
mov
and
nop
cmp
mov
jne
jmp
rep
jmp
push
call
jmp
nop
call
push
nop
inc
add
push
pop
movzwl
jmp
push
jmp
call
jmp
call
call
call
jmp
mov
jmp
push
call
call
jmp
push
leave
nop
jmp
dec
mov
jmp
call
push
inc
call
jmp
push
call
inc
jbe
add
mov
jmp
pushl
sub
mov
or
mov
xor
pop
add
sub
or
mov
mov
push
pop
jmp
call
xchg
test
jmp
jmp
dec
call
push
push
push
pop
push
push
call
push
nop
je
call
push
pop
nop
nop
nop
nop
nop
test
jmp
call
push
pop
jmp
call
call
jmp
call
call
jmp
call
je
call
push
pop
test
jmp
inc
int3
jmp
call
jmp
call
call
int3
dec
je
push
jmp
inc
push
addl
xor
xchg
and
sub
inc
pop
jmp
mov
mov
movsbl
jmp
call
call
push
push
leave
call
ret
nop
jmp
push
rol
jmp
call
call
call
leave
call
push
call
dec
xor
mov
incl
nop
shr
or
ror
ror
mov
mov
addr16
jmp
and
mov
add
xchg
add
xchg
add
nop
pushl
sub
add
sub
add
xor
pop
inc
mov
inc
nop
jmp
fst
mov
inc
cld
addr16
add
nop
cmp
mov
jmp
mov
and
sub
mov
xor
mov
add
xchg
mov
addr16
add
add
shr
mov
mov
jmp
decl
jmp
call
push
ret
call
inc
int3
ret
jne
add
mov
cmpl
push
pop
jne
shr
xor
sub
mov
pop
and
dec
xor
mov
mov
xchg
jmp
mov
jmp
call
ret
call
push
dec
call
leave
inc
call
dec
push
push
jl
pushl
mov
mov
mov
shl
add
pop
pushl
mov
pushl
and
mov
pop
sub
dec
and
shl
mov
add
nop
call
nop
jmp
shl
mov
mov
sub
and
shr
mov
mov
rep
jmp
push
jmp
int3
jmp
call
call
call
pop
call
jmp
nop
int3
inc
jmp
lea
jmp
push
jmp
call
call
push
push
dec
call
dec
call
xchg
dec
xchg
lea
jmp
call
jmp
jmp
call
jne
jmp
test
jmp
jmp
call
call
int3
call
jmp
int3
call
mov
jmp
call
call
call
dec
push
leave
jne
sub
or
or
or
mov
cmp
mov
je
incl
xchg
ror
or
sub
and
mov
cmp
mov
jmp
add
push
pop
or
ror
add
or
xor
pop
push
popl
sub
inc
rol
ror
rol
pop
leave
jmp
call
call
call
call
leave
ret
jmp
dec
pop
call
jmp
jmp
jmp
call
push
nop
ret
pop
add
add
add
shll
in
and
rol
pop
push
jmp
jmp
nop
xorl
pushl
nop
jmp
add
nop
movzwl
jmp
jmp
jmp
push
leave
pop
inc
call
nop
int3
push
push
ret
inc
push
push
incl
nop
add
push
pop
cmp
nop
mov
jmp
call
dec
call
call
jmp
jmp
jl
jmp
test
jmp
push
int3
jmp
push
push
call
call
push
inc
nop
call
mov
jmp
call
call
call
push
call
nop
je
dec
xor
mov
sub
mov
jmp
in
sub
mov
rorb
add
shll
mov
movzwl
jmp
nop
int3
pop
int3
dec
call
push
jmp
call
nop
push
dec
mov
push
pop
jmp
sub
inc
mov
mov
mov
mov
jmp
jmp
add
mov
mov
ror
pop
rol
xor
add
sub
pop
leave
jmp
jmp
pop
push
call
nop
jmp
jmp
jmp
push
call
push
ret
jmp
call
jmp
int3
jmp
ret
dec
jmp
ret
add
add
add
jb
incl
and
fadds
shll
and
mov
mov
mov
mov
call
addr16
mov
nop
xor
add
mov
jmp
mov
jbe
ror
dec
mov
pushl
nop
add
shl
mov
mov
shl
or
and
mov
dec
mov
add
xchg
call
xchg
jmp
mov
sub
mov
mov
pushl
or
shl
sub
or
pop
rep
jmp
push
push
call
push
push
call
call
dec
nop
leave
pushl
addr16
jmp
xor
mov
add
or
add
pop
push
jmp
dec
nop
call
call
jmp
push
call
addl
pushl
mov
call
xchg
jmp
movb
nop
incl
xchg
jmp
nop
nop
nop
nop
nop
shl
and
mov
mov
movzbl
jmp
call
push
jmp
jmp
leave
ret
push
incl
xchg
xor
xchg
inc
xchg
add
sub
sub
inc
shl
mov
and
nop
inc
xchg
inc
xchg
jmp
or
out
call
push
addr16
call
mov
shl
mov
shl
mov
jmp
or
mov
and
or
mov
mov
xchg
call
xchg
mov
xchg
rol
add
xor
mov
jmp
cmp
shr
jmp
call
call
push
ret
jmp
call
pop
push
call
push
ret
dec
je
test
jmp
nop
push
call
push
call
push
int3
call
int3
je
sub
xor
mov
jmp
mov
mov
test
jmp
call
call
inc
jmp
xor
and
pop
and
mov
pushl
or
pop
rep
jmp
call
call
call
call
push
jmp
lcall
add
pushl
dec
xor
pop
and
or
mov
add
mov
sub
nop
jmp
pushl
xchg
call
xchg
push
xchg
call
xchg
sub
shr
and
mov
add
rol
and
sub
or
mov
test
jmp
call
nop
call
call
push
call
nop
je
jmp
add
scas
mov
ror
mov
sub
mov
mov
nop
incl
push
pop
nop
nop
nop
nop
nop
dec
nop
mov
jmp
jmp
dec
inc
inc
push
inc
call
call
call
call
call
inc
push
push
call
jne
jmp
mov
xchg
mov
mov
jmp
or
cli
mov
mov
add
add
xor
ror
add
mov
add
xchg
sub
xchg
jmp
jmp
pop
cld
mov
add
or
decl
or
sub
shr
sub
inc
leave
jne
jmp
sub
xor
mov
sub
mov
shr
jmp
call
call
dec
nop
jmp
pop
push
call
call
jmp
jmp
mov
pop
or
xor
mov
sub
xchg
jmp
lods
int
test
jmp
call
call
call
push
call
lea
jmp
jmp
push
push
push
int3
jmp
shr
jmp
push
call
dec
int3
call
test
jmp
leave
call
call
call
call
push
inc
dec
pop
call
lea
jmp
jmp
push
call
jmp
nop
push
call
push
call
call
ret
mov
jmp
nop
push
call
call
jmp
push
push
pop
push
call
jmp
inc
int3
call
call
jle
mov
nop
jmp
sub
cmp
jmp
mov
jmp
jmp
jmp
pop
ret
dec
inc
inc
push
push
push
jle
mov
mov
add
xor
ror
mov
movzwl
jmp
pop
call
call
push
push
dec
dec
push
leave
shl
or
inc
mov
and
xchg
cmp
addr16
jne
jmp
xor
push
shl
mov
movzwl
jmp
pop
call
jmp
leave
call
call
call
jmp
nop
jmp
outsl
inc
inc
jne
lea
jmp
call
call
ret
call
dec
push
int3
call
mov
jmp
and
xchg
add
addr16
add
xchg
add
xchg
ror
sub
mov
add
addl
xchg
decl
jmp
jmp
push
push
call
call
push
nop
push
int3
jne
jmp
mov
and
shl
mov
and
mov
cmp
xchg
jne
and
push
pop
jmp
test
jmp
call
inc
call
call
call
pop
dec
jmp
leave
je
shl
shr
mov
nop
nop
nop
nop
nop
sub
nop
ror
or
dec
or
mov
mov
mov
incl
xchg
dec
xchg
mov
jmp
call
ret
push
push
call
push
push
ret
dec
jmp
call
ret
jne
jmp
sub
nop
jmp
add
nop
cmpl
nop
jmp
rolb
xchg
add
mov
sub
shl
mov
shl
mov
addl
mov
decl
jmp
call
call
pop
dec
push
pop
call
pop
jne
add
xchg
jmp
or
xor
test
cld
jmp
test
nop
jne
call
xchg
push
nop
call
nop
xor
add
mov
mov
jmp
insl
in
dec
jmp
dec
xchg
jmp
call
mov
push
xchg
jmp
cltd
mov
add
sub
loopne
jmp
fldt
jmp
nop
int3
jmp
push
call
push
int3
leave
dec
subl
mov
xchg
call
xchg
inc
mov
mov
jmp
sbb
incl
lock
mov
push
jmp
push
leave
dec
push
inc
addl
call
addr16
push
jmp
call
addl
jmp
add
xchg
test
jmp
push
call
push
push
jmp
call
call
jmp
pop
dec
mov
jmp
jmp
ret
call
jmp
inc
push
je
pushl
add
rol
sub
xor
pop
add
nop
jmp
add
mov
add
mov
movzbl
jmp
jmp
jmp
shl
jmp
push
jmp
push
call
call
call
push
nop
inc
jmp
nop
add
mov
incl
addr16
lea
jmp
dec
push
call
leave
call
jmp
jmp
jmp
ret
push
dec
push
inc
sub
inc
add
mov
jmp
jp
outsb
mov
xchg
call
mov
jmp
ret
jp
jmp
or
add
mov
add
xchg
push
nop
call
xchg
cmp
nop
jmp
call
mov
cmp
mov
jb
inc
xchg
cmp
xchg
jb
inc
xchg
cmp
addr16
jae
jmp
add
shl
xor
and
mov
add
nop
test
jmp
push
inc
push
push
call
ret
mov
jmp
call
push
push
dec
inc
dec
push
int3
push
call
inc
je
and
and
add
add
xchg
jmp
jmp
popa
mov
mov
jmp
call
call
nop
pop
push
push
pop
int3
je
or
sub
mov
jmp
or
xchg
inc
xchg
inc
xchg
test
jmp
call
jmp
je
or
mov
xor
xor
mov
rol
xor
mov
sub
addr16
mov
mov
jmp
and
xor
sub
mov
mov
mov
add
xchg
push
addr16
jmp
mov
jmp
call
call
push
call
push
push
call
call
int3
jmp
push
jne
sub
shr
mov
pushl
rol
sub
pop
ror
shr
and
add
xor
mov
add
mov
add
xchg
jmp
jns
jmp
push
and
xchg
jmp
call
xchg
cmp
xchg
mov
jmp
ret
push
push
call
call
call
call
ret
push
je
or
mov
test
jmp
push
call
push
nop
push
call
ret
pop
nop
leave
jne
sub
mov
xor
and
mov
or
or
or
mov
jmp
lret
movzwl
jmp
push
int3
call
leave
push
push
call
call
call
call
push
call
jmp
xor
sub
mov
add
nop
add
addr16
push
mov
jmp
sub
call
jmp
push
jmp
ret
call
nop
dec
call
call
inc
nop
nop
nop
nop
nop
jne
mov
nop
xor
xchg
jmp
mov
dec
xor
rol
add
mov
xor
mov
add
xchg
add
xchg
jmp
sub
repz
xchg
call
xchg
jmp
jmp
jns
jmp
push
xchg
dec
inc
xchg
jmp
shr
ror
mov
mov
ror
and
inc
mov
mov
push
pop
incl
push
pop
incl
mov
jmp
mov
pop
jmp
push
call
jmp
push
call
pop
inc
jmp
pushl
add
pop
jmp
add
addr16
add
nop
add
add
sub
or
xor
mov
test
jmp
push
jmp
call
int3
jmp
inc
call
ret
jne
add
addr16
cmpl
push
pop
jne
jmp
mov
nop
xor
xchg
cmpl
xchg
je
xor
xor
mov
rol
xor
inc
pop
nop
nop
nop
nop
nop
sub
mov
sub
and
pop
shl
sub
xor
mov
ror
pop
ret
jmp
call
call
call
call
call
push
call
pop
nop
add
add
add
rcll
rolb
rclb
jmp
mov
decl
nop
inc
mov
jmp
inc
cmp
jne
nop
call
xchg
jmp
movsb
fistl
xor
rol
and
pop
add
sub
mov
mov
pop
or
xor
add
add
mov
pop
and
pop
mov
xchg
cmp
mov
jne
xor
or
mov
add
xchg
jmp
jne
aam
push
mov
add
push
pop
add
nop
or
sub
add
mov
test
jmp
call
nop
push
inc
inc
push
leave
ret
jmp
inc
pop
inc
jne
add
mov
cmpl
xchg
jmp
adc
ljmp
xor
dec
ror
add
dec
mov
pop
add
mov
leave
jmp
call
call
int3
push
ret
jmp
jmp
push
dec
call
add
add
add
test
cld
call
addr16
mov
xchg
and
or
and
mov
ror
sub
mov
and
pop
nop
nop
nop
nop
nop
mov
ror
mov
mov
xor
pop
nop
nop
nop
nop
nop
sub
mov
sub
mov
pop
mov
push
pop
cmp
mov
jne
rol
sub
mov
nop
nop
nop
nop
nop
add
xchg
mov
mov
and
or
mov
shl
and
add
add
xchg
leave
jmp
inc
inc
ret
push
nop
call
jmp
push
dec
ret
jmp
call
call
jmp
dec
lock
mov
or
sub
jl
es
mov
inc
aaa
jg
testb
cmc
or
jnp
jmp
adc
pop
loopne
and
and
mov
jnp
push
xchg
mov
daa
or
roll
das
std
add
lcall
jl
pop
adc
lods
mov
jmp
pop
adc
orl
jle
add
jo
sahf
iret
push
fisttpll
ret
pop
xchg
inc
and
loopne
xlat
loopne
pop
ret
aas
decl
xchg
mov
push
mov
push
cs
ss
adc
lods
add
mov
mov
cmpsl
fwait
in
jnp
push
pop
push
xchg
shr
stos
push
fwait
pushl
imul
or
pop
adc
popa
pop
jne
lods
lcall
lds
cmp
sbb
inc
cli
stos
movsl
mov
sahf
movsl
jno,pn
cmp
stos
pop
dec
mov
sahf
enter
pop
movsb
cs
in
mov
jns
sub
push
ljmp
imul
sbb
add
adc
pop
jl
adc
jns
aas
sub
lds
clc
je
test
inc
add
inc
lods
adc
fldl
push
js
sti
pop
aas
mov
rolb
imul
mov
mov
xchg
fisttpll
push
inc
in
xchg
sbb
shrb
test
shll
popf
add
dec
mov
popf
push
mov
pop
ds
push
dec
fs
lcall
stos
sarl
test
sahf
ret
sub
sahf
inc
dec
fs
dec
fstpl
mov
or
jae,pn
jb
lret
lret
aaa
pusha
mov
xor
enter
clc
and
mov
ret
rcll
jns
ds
dec
add
leave
adc
test
xchg
bound
xor
mov
repnz
lock
or
das
insb
pop
fstpl
dec
jl
mov
aas
inc
into
push
jl
sub
add
ret
jo
inc
ret
inc
sbb
inc
xor
cmc
push
jae
push
mov
sub
jae
xchg
pop
adc
cmp
jo
xor
ja
and
xor
mov
jo
into
daa
das
sbb
popa
mov
adcl
and
std
xchg
push
pop
arpl
xchg
mov
jg
mov
arpl
test
les
add
add
jp
out
xor
sbb
mov
icebp
dec
xlat
push
aas
lds
sbb
cmp
or
xchg
fnstenv
xor
es
and
jne
or
test
add
hlt
add
adc
sub
leave
xchg
imul
div
xchg
mov
dec
das
add
sbb
js
mov
mov
popf
inc
dec
mov
and
lahf
rorb
inc
mov
enter
push
rolb
loope
xchg
enter
add
mov
mov
bnd
xlat
mov
test
fnstcw
popa
out
fs
mov
push
mov
call
fwait
insb
imul
popa
xor
cmp
pop
or
popa
pop
hlt
ficompl
fldcw
mov
inc
in
addr16
mov
mov
dec
sbb
stos
push
mov
dec
mov
call
mov
cld
ficoms
cmpsl
rcll
pusha
xchg
mov
xchg
aam
loopne
ret
push
pop
or
xor
mov
inc
pop
subl
inc
into
insl
jne
shr
mov
jmp
loope
lods
xchg
sarl
cmp
les
test
pop
dec
insl
adc
xchg
lods
stc
mov
icebp
rcll
xor
push
shlb
jecxz
inc
inc
jne
mov
fdivrs
iret
ljmp
or
mov
mov
push
and
jmp
sub
int3
xchg
pop
sbb
mov
sti
ds
or
or
cmp
hlt
xor
push
add
dec
pusha
xchg
addr16
sub
pop
out
scas
pop
mov
pop
stc
cmp
and
and
sahf
das
pop
or
and
sbb
cltd
dec
aad
dec
sbb
dec
xchg
in
in
mov
shlb
pop
mov
mov
pop
add
push
imul
cmp
test
insl
ja
roll
dec
adc
adc
mov
pop
xchg
popf
pop
ds
inc
divl
mov
sbbb
ds
ret
aaa
pop
push
lahf
mov
xchg
neg
adc
out
pop
and
addl
rcll
cmp
inc
inc
into
repnz
enter
cmp
sbb
sub
ljmp
ss
dec
cmpsb
movsb
pop
mov
sbb
lahf
pop
jo
ret
pop
mov
mov
mov
stc
pop
and
xor
lods
cmp
mov
rcr
int
mov
testl
dec
cs
dec
clc
repz
add
call
data16
movsb
inc
xor
pop
ret
jbe
div
shr
les
lock
in
push
arpl
in
mov
push
arpl
pop
adc
out
mov
sub
sub
imul
les
aad
fsub
and
add
aaa
and
add
jp
hlt
and
xchg
mov
das
add
test
fdivl
add
pop
dec
hlt
hlt
imul
dec
cmp
sub
int3
adc
das
ret
cmp
sub
add
lret
aam
jge
mov
stos
pop
push
push
jns
lret
jg
in
dec
cs
sarl
jae
pop
mov
or
push
sub
dec
int3
pop
cmp
jecxz
inc
xlat
and
jb
ja
push
jp
mov
iret
sub
adc
int
shrb
movsb
maskmovq
idivl
test
lahf
xor
inc
ret
push
ds
sbbb
rol
pop
cmc
mov
inc
daa
jle
push
mov
mov
mov
push
and
jnp
xchg
repnz
cwtl
cs
xchg
push
push
fisubrl
lock
sahf
push
mov
ret
test
rcll
fmul
clc
cmc
movsl
repnz
ljmp
pop
ds
ljmp
dec
jmp
inc
outsb
push
pop
rcl
add
movsl
leave
movsl
and
daa
jmp
mov
mov
sar
hlt
dec
xlat
mov
adc
inc
fdivr
out
or
aam
pop
xchg
sar
mov
sbb
movsb
mov
xchg
add
xchg
mov
out
cmpsb
rorb
adc
aad
aam
xor
jg
mov
xchg
fdivrl
ja
sub
mov
lret
sarb
mov
fld
fidivs
fwait
mov
xchg
push
mov
sub
adc
and
push
adc
ljmp
sub
pop
cmp
or
or
xchg
jnp
enter
daa
ret
fstpl
pushf
dec
out
dec
cmp
push
inc
lcall
add
aam
adc
or
je
or
lahf
cmp
in
mov
mov
fprem
int3
pop
jno
mov
adc
mov
enter
cmp
xchg
stc
push
and
sub
outsb
adc
andb
outsl
mov
xor
movsl
out
pop
test
jmp
lods
sub
adc
push
xchg
mov
jl
pop
insb
push
cmp
push
loop
and
repnz
cmpsb
std
aad
mov
popa
xor
pop
sarb
push
repz
sti
xchg
push
xchg
sbb
push
sarl
fidivs
insl
or
cli
mov
outsb
data16
xchg
pop
or
mov
xor
push
dec
gs
mov
cmp
dec
mov
push
cld
and
jno
sub
xlat
cmpl
sub
mov
cmc
lret
xchg
mov
and
sub
ja
mov
aaa
negb
mov
xchg
hlt
fidivrs
sti
jns
fdivrs
push
add
aas
cmp
add
mov
dec
loope
xlat
xor
pushf
push
jle
xchg
mov
or
push
xchg
inc
das
mov
or
xor
sub
pop
and
dec
pop
es
cmc
mov
flds
lret
test
fwait
push
ds
int
add
fwait
pop
icebp
test
xchg
fstl
das
push
fnstenv
jl
clc
jo
sub
xor
rol
push
add
repnz
push
or
xor
cmp
sbb
mov
xchg
rclb
sbb
adc
inc
les
mov
inc
mov
out
sbb
jmp
pop
xor
jnp
bound
cltd
addr16
testl
int3
jns
add
jp
inc
pusha
arpl
xchg
jle
jne
dec
cmp
lahf
lock
dec
ror
leave
inc
ds
pop
mov
stc
or
fbstp
out
jb
rcr
hlt
mov
pop
cmp
icebp
mov
xchg
pusha
into
xchg
movsb
jne
cmp
ja
jne
cmp
mov
jno
out
std
lcall
jge
dec
test
shr
lahf
fistps
mov
mov
sbb
lret
push
xchg
cmpsl
mov
pop
aas
xchg
lods
neg
test
iret
insl
fimull
outsl
push
fistpll
les
add
xchg
fstps
dec
mov
add
lds
jp
bound
push
cmpb
push
loop
mov
addr16
nop
pop
stos
mov
sti
jge
adc
push
xchg
jbe
aam
jecxz
xor
push
sbb
dec
adc
xor
mov
cli
in
jne
sub
mov
bound
jb
mov
cs
mov
xor
pop
fsubs
out
aad
jo
mov
cwtl
decb
mov
xchg
aam
cmp
pop
js
xchg
jmp
je
pop
js
inc
add
mov
std
dec
int3
flds
mov
test
lea
mov
mov
jp
mov
pop
std
inc
bound
jge
dec
mov
loop
push
lock
and
xchg
loopne
jecxz
sbb
lock
add
mov
negb
cmp
cmp
inc
sub
adc
test
adc
lret
cli
arpl
cmpb
das
inc
push
cld
cmpsl
pop
dec
arpl
dec
aad
mov
mov
jle
nop
cmp
sub
inc
cwtl
lods
xor
push
ja
js
movsb
stc
fmul
jbe
dec
and
outsb
jl
or
pusha
shrl
cld
xchg
into
cmp
mov
inc
add
and
ds
sbb
sbb
outsl
adcb
sbb
rcrb
fcompl
or
xor
sub
outsb
in
movsb
sub
inc
jl
stos
pop
xor
repnz
lods
cmp
xlat
xor
ret
es
in
jl
push
mov
filds
xchg
lods
push
or
dec
mov
out
mov
sti
ficompl
inc
sub
movb
test
mov
in
ljmp
lret
xchg
push
loope
cli
clc
sub
in
xchg
dec
stos
enter
adc
add
stc
sbb
mov
mov
andl
jbe
jb
loopne
mov
ds
pop
icebp
jno
enter
int
pop
pop
dec
lret
adc
cmp
fcoms
mov
fsub
pop
adc
or
movsl
adc
dec
sbb
jle
mull
ret
es
sti
or
dec
popf
push
pushf
pop
jae
clc
jge
mov
mov
dec
ljmp
xchg
inc
jg
pop
pushf
pop
jns
inc
mov
loopne
ljmp
imul
mov
or
jne
add
js
jl
mov
and
mov
fwait
imul
xor
cltd
inc
and
ds
xchg
imul
xlat
mov
addb
inc
bound
in
std
and
mov
repz
or
out
mov
fisubrl
inc
push
dec
cmp
ret
fmuls
cs
test
adc
push
xchg
adc
jl
sarb
fsubs
pop
cmpsb
pusha
push
sub
cmc
aas
mov
iret
sbbb
push
add
outsl
mov
cmc
ss
shl
jae
fadds
in
inc
mov
popf
subl
inc
testb
jb
scas
test
movsl
sub
mov
in
ja
test
outsb
pop
jno
mov
outsl
mov
sti
hlt
push
mov
add
mov
bound
add
jecxz
mov
out
sub
pop
cs
xlat
push
aad
add
stc
lret
aaa
in
std
pop
imulb
fsubp
fstp
inc
popf
subl
push
loope
test
jne
xchg
inc
icebp
pop
sub
or
dec
xchg
jbe
mov
pop
mov
repnz
adc
ja
adc
popf
lahf
dec
push
aad
or
inc
nop
mov
xor
pusha
addr16
negb
sub
arpl
add
ret
lcall
pop
out
insb
xchg
pop
cmc
cmp
stos
dec
psllw
push
jne
inc
sub
ds
jp
dec
pusha
int3
pop
popa
cmp
out
mov
adc
ret
out
mov
cmp
out
sahf
xchg
or
cmpb
iret
adc
scas
loopne
inc
stc
ljmp
fstl
adc
stos
xchg
lret
mov
movsl
popf
mov
pop
jnp
imul
aad
add
jb
push
cmp
loope
sub
rcrl
daa
cs
adc
sub
aad
addr16
enter
sbb
push
fstpt
cmc
in
jecxz
in
dec
push
jbe
clc
stos
mov
in
add
idiv
ss
xchg
add
xor
mov
lea
inc
test
xchg
xchg
push
pop
xchg
inc
and
mov
xchg
out
cmpsb
cwtl
ss
in
xor
pop
sub
mov
jle
sub
xchg
adc
ficomps
cmp
xchg
out
push
shll
fidivrl
or
imul
testl
push
cmp
and
ret
mov
jbe
dec
les
sbb
in
sbb
sbb
xchg
add
add
stos
or
imul
pop
pop
call
mov
mov
inc
inc
jno
inc
ret
rcrb
test
inc
ftst
mov
inc
loop
pushf
movsb
add
jmp
mov
jg
sarb
push
dec
cli
mov
lret
push
jp
push
add
fstl
outsl
lea
ret
push
xor
sub
aad
loope
lods
xchg
sbb
sub
rcr
pop
pop
xor
jbe
pop
lcall
and
out
dec
and
enter
popf
mov
mov
out
aam
adc
int
and
mov
int
in
repnz
dec
mov
adcb
jmp
ret
insl
pusha
xor
sbb
mov
fisubs
ret
add
pusha
mov
movsb
inc
fsubrs
or
mov
adc
dec
inc
shlb
adc
or
jmp
andb
push
mov
icebp
scas
mov
imul
cld
mov
std
or
mov
sub
leave
sbb
cwtl
jae
xchg
leave
xchg
mov
pop
push
xlat
in
out
clc
inc
sub
pop
jge
loopne
jg
jae
add
clc
adc
bnd
ja
and
ret
subl
ss
aaa
shll
mov
es
sti
push
push
jl
xor
in
in
or
fnstenv
jg
pop
in
loop
xchg
ds
xor
xchg
adc
hlt
cmpl
xor
inc
pop
lahf
aaa
push
push
sahf
lea
scas
push
fsubl
xchg
push
sub
xchg
inc
mov
and
fwait
inc
aaa
in
cli
hlt
and
notl
and
aad
dec
xor
bswap
clc
pushl
je
movsb
adc
mov
bound
cmp
aad
sbb
jle
push
pop
int3
push
adc
push
xor
cmc
rol
jle
sbb
xchg
out
mov
insl
sti
aad
push
shlb
sbb
jg
push
mov
jnp
addl
cmp
add
aad
je
shl
sarb
imul
aad
lods
std
mov
mov
adc
push
jo
fcomp
fisubrl
loop
xor
dec
xchg
add
shlb
int3
in
adc
add
sar
mov
mov
jle
jns
xchg
cwtl
jp
jbe
add
fists
add
sub
jb
stos
inc
add
sbb
jge
xor
xor
mov
popf
ss
scas
or
leave
xorl
insb
xor
jae
cmpsb
sti
or
mov
xchg
mov
loop
or
jb
jmp
mov
and
mov
fistpll
sub
push
xor
inc
jns
xlat
stos
push
pusha
sbb
sub
sbb
mov
xchg
cmp
mov
ret
xchg
cmp
dec
icebp
mov
in
popa
mov
and
sbb
mov
xchg
jmp
jg
dec
iret
outsb
stos
insl
leave
pop
fwait
mov
bound
add
sub
xchg
lods
mov
fadds
mov
nop
bound
mov
je
lahf
jo
mov
jno
xchg
pop
mov
mov
jg
movsl
mov
cwtl
push
loope
pusha
stos
es
lcall
mov
inc
addl
mov
inc
clc
sub
cs
fcmovnbe
outsl
cmp
dec
ja
cld
jl
gs
lcall
cmp
cmp
sub
push
sub
scas
xchg
add
sub
imul
loope
mov
data16
les
xchg
mov
fldz
adc
push
outsb
cmp
popa
stc
or
cmp
sbb
mov
ret
add
xor
push
dec
sbb
jae
repnz
adc
les
xor
or
add
mov
popa
imul
fldt
xchg
xlat
rcrb
push
cmp
jmp
inc
sub
stos
mov
and
jo
rcrl
in
mov
decb
adc
sti
mov
jno
fadds
xor
leave
pop
jo
fnsave
ret
dec
lea
xchg
mov
cmc
addb
xchg
sbb
je
jns
or
sbb
adc
mov
rolb
xlat
adc
test
repz
je
sbb
mov
sub
jl
out
push
jae
popa
xor
std
mov
lds
cmp
mov
les
jg
jp
cmp
scas
ss
rclb
cmp
dec
das
mov
push
outsl
cltd
lea
mov
inc
xlat
mov
adc
jbe
aaa
push
and
xchg
jl
dec
jno
ret
sub
sbb
add
shrl
test
mov
out
cld
ss
cmp
add
cmp
shll
mov
repnz
ja
cs
xchg
orl
stos
nopl
jge
mov
inc
mov
jmp
jp
mov
dec
mov
push
and
ss
jb
adc
scas
sbb
rdmsr
xor
and
mov
jo
movsl
aad
adc
pop
addr16
adc
lcall
ss
filds
inc
mov
push
xchg
incb
add
sub
add
nop
gs
loopne
lock
mov
xor
icebp
pop
mov
imul
lret
mov
lods
push
lds
jecxz
mov
dec
mov
jno
cmp
pop
xchg
scas
push
out
shlb
fiaddl
and
out
sub
cmp
mov
dec
out
and
cmp
dec
push
fs
mov
mov
cwtl
or
movq
dec
lcall
scas
iret
xor
aam
rolb
icebp
dec
push
xor
mov
pop
ja
jg
mov
popf
imul
cmpsl
xor
push
mov
push
enter
cwtl
or
or
loop
movsl
adc
push
inc
xchg
pop
push
dec
inc
add
push
sbb
je
shlb
dec
and
mov
and
lods
xlat
insb
xor
mov
mov
movsb
repnz
cmp
lcall
mov
and
push
in
aas
das
cmp
jno
aaa
lods
gs
or
mov
cli
mov
movsb
ljmp
mov
push
xor
cmp
adc
test
cmp
cwtl
sub
mov
dec
aas
xor
and
xchg
in
mov
jno
mov
xchg
arpl
mov
dec
gs
notl
cltd
jmp
imull
sti
and
in
jo
pushf
or
inc
push
fcoms
push
jne
imul
adc
cmc
sub
cwtl
push
in
or
scas
push
lcall
pop
nop
jno
xlat
xchg
cmpsb
cmpsl
pop
fwait
and
addr16
rcr
insb
jmp
jle
pop
inc
and
data16
mov
cmp
add
mov
test
insb
push
push
mov
.byte
.byte
