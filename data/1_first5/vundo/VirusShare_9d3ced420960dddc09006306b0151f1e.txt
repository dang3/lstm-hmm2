xor
inc
rol
dec
xor
mov
jmp
inc
cld
inc
push
pop
shr
jmp
pop
hlt
xlat
pop
lret
xor
add
nop
nop
nop
nop
nop
nop
nop
nop
push
push
pop
xor
xchg
inc
mov
call
nop
jmp
nop
nop
nop
nop
push
xchg
rol
mov
sub
xchg
mov
xchg
andl
xchg
push
addr16
xor
mov
and
xchg
jmp
add
push
mov
push
mov
push
mov
test
jmp
nop
std
movsl
sbb
lds
add
mov
nop
lea
jmp
pop
inc
xchg
push
nop
mov
mov
mov
mov
lea
jmp
and
xor
incl
add
lea
jmp
fsts
pop
inc
ficoml
push
xchg
pushl
nop
pushl
addr16
add
shr
push
add
and
inc
mov
sub
inc
and
rol
or
mov
mov
sub
ror
dec
test
jne
pop
lea
call
leave
jmp
test
lahf
ret
jmp
nop
nop
nop
nop
nop
and
or
shr
inc
xor
mov
push
cld
push
mov
push
cld
push
addr16
push
mov
pushl
cld
push
mov
jmp
inc
sub
or
xor
rol
pop
xor
rol
or
or
mov
rol
or
shr
shr
pop
and
mov
jmp
cmp
xchg
jl
add
mov
jmp
nop
nop
nop
sub
nop
lea
jmp
mov
daa
adc
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
or
xor
add
mov
push
xchg
jmp
nop
nop
nop
push
cld
jmp
test
jmp
and
lea
add
mov
jmp
in
ss
jne
and
or
add
ror
and
mov
movzbl
jmp
jl
fidivrs
jmp
lea
jmp
call
xchg
test
jmp
icebp
jne
add
mov
and
pop
ret
jmp
in
push
nop
nop
nop
nop
nop
push
mov
push
xchg
add
nop
push
xchg
push
xchg
jmp
add
addr16
and
xchg
mov
mov
ret
jmp
test
nop
nop
nop
nop
nop
nop
push
mov
or
mov
and
xchg
sub
mov
pushl
xor
pop
andl
xchg
push
xchg
push
mov
push
xchg
jmp
pushl
and
push
add
dec
dec
ror
shr
mov
mov
xor
and
add
ror
mov
shr
xor
inc
dec
test
jne
pop
pop
call
push
mov
push
or
mov
xor
and
shl
ror
add
or
mov
xor
mov
xor
sub
xor
mov
and
dec
test
jne
pop
and
mov
add
call
neg
jmp
sub
sbb
jmp
aam
jmp
xor
sbb
add
addr16
ret
jmp
inc
and
jbe
nop
nop
nop
nop
test
jmp
and
add
call
mov
test
jmp
xor
je
call
addr16
jmp
call
mov
call
mov
rol
add
or
and
add
sub
sub
sub
mov
mov
and
or
mov
and
add
add
rep
jmp
ds
test
mov
add
add
ret
mov
rol
pop
add
jmp
sub
xor
push
shl
add
push
mov
mov
add
sub
pop
shl
dec
test
jne
pop
lea
call
jmp
jne
or
or
pop
inc
or
inc
pop
mov
inc
xor
pop
xor
xor
shr
mov
xor
pop
cmpb
addr16
je
dec
mov
mov
inc
add
and
add
add
add
call
cld
jmp
inc
mov
mov
xchg
mov
push
pop
movl
xchg
shl
shr
mov
ror
sub
sub
sub
xor
mov
shr
jmp
mov
je
incl
pusha
inc
mov
mov
nop
call
xchg
pushl
and
add
pop
ror
or
xor
and
xor
mov
add
xchg
movzwl
jmp
imul
add
xchg
jmp
nop
nop
push
push
pop
cmpl
xchg
jne
push
mov
lea
jmp
xlat
xor
sbb
ret
jmp
sub
xchg
jmp
test
ficoml
nop
nop
push
push
pop
push
mov
push
xchg
xor
inc
shr
add
mov
push
xchg
push
shr
sub
shl
inc
add
ror
ror
and
add
add
xor
and
add
sub
dec
test
jne
pop
sub
rol
mov
mov
call
push
push
pop
jmp
mov
xchg
jmp
mov
xchg
jmp
nop
nop
nop
nop
nop
nop
add
add
add
adc
add
jmp
mov
add
xchg
dec
jmp
aaa
mov
push
dec
pushf
test
test
sti
ljmp
lret
dec
xor
xor
shl
pop
ret
jmp
lahf
jge
nop
nop
nop
nop
nop
cmpb
xchg
je
cmpb
nop
jne
add
inc
mov
inc
mov
jmp
inc
mov
pusha
jmp
cwtl
bound
pop
xor
or
shl
add
xor
mov
mov
jmp
test
jmp
mov
lret
ret
data16
add
nop
xor
push
pop
rol
mov
sub
add
inc
pop
lea
jmp
ret
cld
call
mov
dec
xchg
jmp
in
sub
add
shl
sub
and
add
lea
jmp
mov
mov
and
fucomp
cmp
inc
lea
jmp
jne
test
jmp
lock
jmp
dec
mov
je
inc
sub
mov
sub
xchg
jmp
sub
nop
add
shr
sub
shl
dec
mov
call
cld
jmp
jmp
xchg
mov
mov
ror
add
add
sub
dec
pop
cmp
xchg
mov
jmp
bound
sbb
jmp
mov
push
xor
jmp
jge
fcoms
push
and
jmp
inc
sbb
jmp
jbe
adc
xor
sbb
or
shr
jmp
adc
dec
lods
xchg
xchg
test
jmp
mov
scas
orb
lret
add
mov
add
add
jmp
je
rorb
xchg
add
add
mov
jmp
dec
mov
add
rol
mov
mov
addr16
or
mov
jmp
cmpsl
ret
cmpsl
call
cld
add
xchg
push
popl
movb
xchg
movl
addr16
call
xchg
jmp
or
xlat
movzwl
jmp
push
add
rol
mov
and
mov
cmp
nop
jne
jmp
add
xchg
mov
xchg
and
shl
and
and
mov
xor
mov
and
xor
xor
mov
rep
jmp
and
mov
mov
test
jmp
popa
jmp
or
jmp
push
pop
pusha
jmp
clc
call
mov
popa
jmp
jmp
xchg
jmp
ret
jmp
mov
nop
nop
nop
nop
nop
mov
push
pop
jmp
movb
xchg
incl
addr16
jmp
and
ror
and
shl
xor
mov
jmp
cwtl
rcr
xor
ror
rol
pop
and
mov
add
xchg
add
addr16
add
mov
inc
xchg
jmp
ss
cmp
inc
and
push
pop
movzwl
jmp
call
incl
addr16
add
xchg
jmp
movzbl
jmp
sbb
incl
xchg
xor
nop
inc
cld
sub
xor
shl
mov
jmp
inc
mov
decl
jmp
jecxz
mov
incl
jbe
mov
cmpl
cld
jne
ror
and
add
nop
nop
nop
nop
nop
shr
dec
dec
and
inc
mov
mov
push
pop
add
xchg
add
pop
push
popl
ror
or
pop
leave
jmp
ret
jmp
mov
arpl
add
ror
rol
and
add
xor
rol
mov
andl
xchg
mov
ror
mov
and
add
add
mov
mov
nop
xor
mov
add
addr16
jmp
inc
aad
je
test
jmp
ret
out
je
jmp
push
push
jmp
imul
add
mov
sar
jmp
shr
jmp
adc
xchg
in
insl
sub
sti
lea
jmp
jmp
pop
popa
jmp
shlb
push
and
add
mov
or
sub
mov
jmp
mov
jmp
cmp
jle
mov
xchg
test
jmp
bnd
nop
nop
nop
nop
nop
ror
mov
shl
add
add
mov
mov
xchg
sub
addr16
sub
xchg
decl
jmp
add
mov
inc
sub
test
call
rol
ror
dec
xor
mov
mov
nop
sub
nop
decl
jmp
add
js
mov
incl
int
into
jmp
decb
lea
mov
add
add
pop
add
mov
nop
nop
nop
nop
nop
dec
mov
mov
add
cld
add
xchg
jmp
test
incl
mov
dec
push
pop
mov
jmp
outsl
loopne
jne
jmp
mov
xchg
nop
nop
nop
nop
nop
mov
mov
jmp
call
nop
test
jmp
sub
jne
cmp
mov
jmp
pop
pop
cs
jmp
fisttpll
incl
scas
leave
cmp
mov
add
rorl
jmp
leave
idivb
or
or
and
mov
xor
xchg
add
push
pop
jmp
in
es
lea
jmp
popa
pushf
push
aaa
jmp
dec
jmp
push
jne
push
xchg
push
mov
pushl
cld
push
xchg
push
rol
or
or
mov
ror
shl
mov
mov
ror
or
add
dec
test
jne
pop
pushl
add
pop
call
mov
cld
call
push
pop
nop
nop
nop
nop
nop
test
jmp
je
add
and
mov
and
sub
mov
jmp
fildl
incl
add
ret
pop
mov
test
add
xor
dec
shr
mov
sub
push
pop
add
or
mov
mov
xchg
incl
addr16
dec
xchg
nop
nop
nop
nop
nop
mov
jmp
xchg
push
jmp
sub
nop
jmp
jmp
in
and
xor
in
add
sub
mov
mov
mov
jmp
jmp
pop
mov
leave
dec
push
pop
dec
mov
movzbl
jmp
addr16
mov
xchg
orl
xchg
sub
or
sub
mov
jmp
dec
lds
shl
jmp
or
add
nop
incl
nop
lea
jmp
aas
xor
mov
call
mov
cmp
addr16
jmp
sbb
shl
add
mov
nop
nop
nop
nop
nop
rol
mov
rep
jmp
mov
push
xor
mov
pop
add
add
add
sub
shl
mov
push
push
pop
push
push
pop
pushl
nop
jmp
jecxz
out
jb
inc
xchg
cmp
mov
jb
inc
xchg
cmp
xchg
jae
nop
nop
nop
nop
nop
inc
addr16
inc
cld
test
jmp
sahf
in
sbb
cmp
test
add
add
rol
mov
jmp
and
addr16
push
push
pop
push
xchg
pushl
cld
call
addr16
and
sub
sub
or
ror
mov
test
jmp
xor
mov
jmp
mov
sub
outsb
mov
mov
mov
incl
xchg
dec
xchg
jmp
outsl
jo
je
mov
inc
add
xor
or
mov
add
mov
sub
mov
jmp
sub
mov
sub
push
pop
nop
nop
nop
nop
nop
shr
jmp
mov
jnp
test
test
jmp
xlat
jns
mov
jmp
or
jl
sbb
add
jle
mov
mov
rol
mov
jmp
stos
dec
sub
scas
rcr
jne
nop
nop
nop
nop
nop
mov
mov
xor
cld
jmp
jg
mov
mov
jmp
fldt
outsb
jnp
cli
mov
or
shl
shl
mov
and
nop
cmp
push
pop
jmp
lds
leave
jmp
or
or
xor
xor
mov
jmp
shrb
sub
add
and
xchg
add
mov
add
mov
add
addr16
push
add
mov
or
rol
pop
add
addl
addr16
decl
jmp
pop
dec
jmp
or
inc
sub
shl
add
mov
mov
xchg
incl
push
pop
jmp
icebp
addr16
jne
add
push
pop
cmpl
nop
jne
jmp
scas
adc
inc
call
add
add
add
test
jmp
je
lea
jmp
cltd
bound
jg
add
add
jmp
pushl
mov
xor
or
and
pop
dec
inc
or
xor
mov
mov
nop
nop
nop
nop
nop
add
mov
push
xchg
push
add
inc
sub
rol
shr
and
add
rol
dec
test
jne
pop
add
inc
and
mov
and
add
call
cmp
xchg
mov
jmp
popf
stos
add
test
add
mov
inc
shl
dec
sub
mov
test
jmp
jne
jmp
cwtl
arpl
mov
xchg
xor
nop
jmp
mov
ret
mov
pushl
shr
sub
pop
or
add
or
mov
add
xchg
jmp
cmp
adc
rorb
sahf
out
call
enter
shl
and
add
xor
pop
sub
nop
xor
shr
mov
or
pop
leave
jmp
ret
jmp
roll
nop
nop
nop
nop
mov
xor
mov
add
mov
test
jmp
decb
nop
nop
nop
nop
nop
je
jmp
nop
nop
nop
nop
nop
or
mov
mov
mov
test
jmp
dec
imul
jns
movzwl
jmp
mov
add
add
xchg
add
nop
nop
nop
nop
nop
nop
push
mov
pushl
mov
nop
nop
nop
nop
nop
push
xor
rol
dec
ror
and
add
add
xor
shl
dec
test
jne
pop
and
and
add
call
add
xchg
mov
mov
xor
sub
mov
nop
nop
nop
nop
nop
add
mov
test
jmp
mov
clc
testb
push
incl
cmpl
mov
jne
mov
jmp
mov
xchg
nop
nop
nop
nop
nop
xor
add
dec
mov
nop
nop
nop
nop
nop
mov
xchg
sub
shr
mov
xor
shr
mov
add
mov
addr16
cmp
mov
nop
nop
nop
nop
nop
jne
add
mov
add
add
add
add
add
push
pop
sub
shr
or
shr
rol
pop
mov
xchg
shl
mov
mov
mov
nop
nop
nop
nop
nop
add
xchg
add
rol
inc
mov
pop
or
xor
shr
mov
pop
add
shl
mov
xor
pop
ret
jmp
or
nop
nop
nop
nop
stos
mov
stos
stc
das
mov
inc
push
jns
push
test
push
add
lods
lahf
call
popa
push
les
aam
lock
frstor
out
out
into
daa
stos
jp
js
pop
mov
std
fmuls
aam
or
daa
insb
sar
jnp
bound
pushf
and
jle
repnz
aaa
std
test
das
popa
lahf
xor
lock
mov
sbb
pop
mov
jle
dec
xchg
or
push
and
pop
fidivrl
pop
inc
rclb
mov
push
testl
xor
loopne
ret
pop
outsb
call
out
rcrl
push
lock
jge
xlat
stc
mov
push
sub
lea
aad
mov
ret
std
and
add
arpl
xorl
cmp
sub
push
pop
push
adc
push
bound
sbb
pop
jge
cmp
adc
inc
xchg
es
jb
pushl
push
pop
ljmp
or
mov
loop
lahf
pop
jge
filds
add
rcrb
push
test
addr16
ljmp
ret
sbb
jbe
mov
cmpl
loopne
insl
pop
ret
mov
popa
xor
fdivrl
push
dec
mov
lahf
mov
in
fucomi
sbb
fs
je
jo
loope
inc
jg
xchg
jl
mov
adc
pop
push
mov
add
cmpb
in
shll
or
in
mov
jg
icebp
push
fnstcw
add
mov
lahf
iret
daa
je
mov
std
cmpsb
in
push
pusha
scas
mov
pop
sbb
ret
ret
setae
mov
pop
clc
jge
xchg
mov
dec
sbb
or
xchg
fmuls
cmpsb
mov
push
xor
shll
test
jno
or
jmp
lds
xchg
lahf
nop
imul
and
xor
jg
pop
inc
add
push
data16
or
scas
mov
enter
loope
outsl
or
adc
or
sub
mov
leave
repz
lcall
xor
sbb
jg
push
xor
jge
jbe
scas
xor
cld
sarb
out
dec
cmc
outsl
push
and
add
ds
mov
dec
scas
call
in
sub
or
xchg
push
xchg
fldenv
rcll
mov
sub
mov
mov
sbb
aaa
sbb
lret
or
std
jae
xor
pushf
lcall
shrl
mov
out
push
pop
out
cmpsl
add
pop
fbstp
xlat
pop
movsb
xchg
test
mov
or
inc
cld
mov
jbe
and
js
popf
cs
lret
cmpsb
xchg
mov
testb
insl
add
mov
mov
addr16
inc
adc
pcmpgtw
cmp
out
loope
rcl
ficoml
sahf
inc
sti
out
insb
push
jle
mov
push
mov
push
mov
pop
popw
sarl
lcall
les
out
add
add
into
out
inc
scas
push
push
mov
dec
xchg
cmp
in
mov
push
aam
lret
sbb
loopnew
sub
xchg
mov
imul
push
into
pop
mov
bound
add
adc
enter
mov
xor
loopne
push
pop
inc
mov
fcmovnu
int
push
sub
cmp
pop
jl
sub
xchg
mov
pop
xchg
xor
cmp
add
mov
repz
dec
cmp
and
mov
je
mov
inc
into
data16
push
pop
pop
decb
jne
call
sti
push
xchg
cmc
dec
mov
push
inc
fwait
sbb
push
popa
push
adc
add
fldt
lahf
loopne,pt
imul
frstor
gs
nop
outsb
pop
stos
stos
out
arpl
mov
inc
mov
dec
xor
mov
lret
or
push
jl
inc
push
xchg
cmp
jl
sub
mov
jmp
pop
test
jl
pop
pop
pop
ficomps
clc
daa
ss
jns
popf
mov
movsl
decb
sub
loope
mov
dec
push
inc
addr16
lods
inc
outsl
aad
lcall
ret
in
inc
lods
into
pushf
xor
insb
xor
adc
pop
sub
rcr
notb
in
mov
cmp
dec
mov
lock
scas
add
adc
ret
lret
movsb
cmpsb
fsubrl
insb
test
jae
mov
repz
fsubp
xor
daa
movsb
pusha
out
flds
mov
pop
stos
sbb
mov
mov
mov
adc
rcl
adc
sarl
imul
mov
test
inc
pop
jo
pushf
dec
pop
movsb
xchg
inc
xlat
inc
and
xchg
lcall
mov
in
imul
bound
push
ficoml
out
dec
je
lods
aas
jo
sbb
test
and
outsl
lret
fnstenv
mov
add
and
mov
js
xor
cmp
sbb
jns
lret
dec
push
jl
xorl
sub
jge
inc
shl
in
push
inc
pop
adc
adc
fnstsw
fnstsw
xchg
and
insb
sbb
inc
adc
fsubl
.byte
cwtl
.byte
.byte
push
fadds
and
xchg
adc
in
movsb
outsl
sarb
adc
leave
sub
int
inc
arpl
dec
cmp
push
outsb
lea
xchg
sti
cmp
mov
pop
sub
lea
push
dec
lock
push
pushf
pop
push
aaa
adc
aas
daa
sbb
rorl
fldcw
jmp
outsb
xchg
inc
mov
mov
jae
pop
sbb
jl
inc
dec
out
adc
mov
lahf
cmpsl
ljmp
les
inc
outsb
cmp
js
dec
mov
pop
daa
inc
inc
aad
push
xor
pop
add
outsl
insb
lods
popa
mov
xchg
cli
pop
jae
dec
push
scas
es
sub
inc
movsl
cltd
repnz
pop
push
xchg
dec
popf
cmp
ret
fnstcw
lock
add
lea
pop
pop
idiv
cmpsl
mov
xchg
adc
out
mov
test
loope
fsubrs
clc
dec
push
test
cmpsb
mov
jne
pop
add
call
add
gs
mov
jle
cmp
dec
lock
cltd
gs
rcrl
addr16
mov
inc
in
xchg
dec
cmp
shlb
pop
and
ror
cmp
jbe
ja
xchg
pop
mov
xlat
jnp
ljmp
push
arpl
pusha
cli
pop
enter
cli
cmc
outsb
mov
test
mov
mov
mov
sub
xchg
or
or
mov
add
out
jae
daa
mov
fsubr
inc
into
fs
test
cwtl
in
xchg
fstl
inc
mov
mov
mov
mov
dec
pop
jl
mov
cwtl
or
test
inc
push
jo
mov
mov
jg
push
mov
movsb
or
loope
pop
scas
sub
cmpl
mov
mov
stc
jp
cli
or
add
add
mov
bound
fcoms
stc
mov
mov
cli
ror
mov
lds
jno
aas
ret
rcl
push
arpl
test
pop
mov
sub
sbb
enter
sti
add
mov
push
imul
cmc
ja
loop
lock
xor
sub
mov
jp
add
push
cli
shll
cmc
mov
pusha
xlat
push
and
inc
sahf
clc
dec
mov
imulb
sub
sti
scas
fldenv
push
gs
jle
sbb
jno
xor
pushf
or
pop
and
pushf
sub
cmp
add
jecxz
push
loope
dec
outsb
push
outsb
pusha
shl
push
jo
fstp
adc
lock
xor
xchg
jmp
sbb
out
xchg
in
mov
jp
pop
es
jne
push
sub
pop
leave
push
push
lea
daa
dec
add
or
test
cmpsb
pop
out
lret
out
cmpl
or
xchg
call
in
in
or
sbb
daa
xchg
sbb
call
js
arpl
xor
add
data16
jge
xchg
ret
in
cmp
lcall
mov
cmpl
pop
or
dec
aam
xchg
jo
push
into
clc
jmp
icebp
in
mov
mov
addr16
fidivs
and
jne
adc
out
negb
adc
xor
mov
push
loop
mov
mov
fidivl
mov
inc
outsb
sub
inc
and
sti
mov
sub
xchg
cmc
pop
cmpsb
dec
adc
cmp
ss
or
and
push
cld
sbb
cmp
sbb
jbe
add
jmp
mov
xor
jecxz,pt
and
cmpsl
in
mov
push
add
pop
xchg
inc
in
or
dec
sbb
mov
pop
out
je
les
push
mov
xor
mov
sub
mov
popf
sbb
add
adc
outsl
into
mov
mov
push
mov
xor
ss
rorl
scas
outsl
ljmp
cmpb
aaa
sahf
inc
pop
fs
cltd
pop
hlt
rcrb
cmc
ja
cli
fucomp
repz
adc
mulb
xchg
add
push
or
cmpsl
sub
scas
lods
jno
sub
das
fidivrl
adc
imul
sahf
test
aaa
sarl
fldt
sti
mov
cli
dec
shll
test
jmp
std
pop
jne
and
adc
leave
mov
testb
sbb
xchg
sub
add
jle
jge
out
test
mov
add
lahf
xchg
and
mov
xchg
push
stos
or
fldl2t
into
mov
jl
add
add
xor
inc
test
ficompl
sbb
addr16
scas
pop
adc
dec
andb
sbb
jge
fimuls
pop
adc
pushf
pop
add
xchg
loop
pop
pop
cmp
out
lock
jae
dec
ret
mov
xchg
outsb
cwtl
scas
mov
sbb
movsl
testb
mov
mov
aam
jl
jo
pop
call
insb
arpl
mov
adcb
outsl
adc
mov
mov
imul
mov
mov
aas
pop
push
sbb
popf
mov
cld
jns,pt
adc
fistps
roll
ljmp
rcl
aad
repz
ss
jbe
push
dec
push
outsl
mov
and
push
dec
in
pusha
mov
call
adc
xor
xor
insl
rcrl
or
sbb
fimull
mov
jecxz
push
pusha
fldl
outsl
roll
or
je
ljmp
fxch
push
inc
je
dec
cli
popf
adc
imul
js
adc
out
cmp
imul
clc
sarb
cwtl
cmpb
out
mov
push
lods
ret
push
fmull
aas
push
pop
sbb
cld
popf
xlat
arpl
pop
sbb
in
scas
dec
mov
out
jl
adc
adc
rolb
ficompl
jp
movsl
jmp
sub
jmp
call
cs
dec
popf
enter
push
sbb
mov
sub
mov
fisubl
in
rorl
jle
push
mov
add
jnp
lahf
xchg
lock
adc
add
push
jae
or
ret
fcomip
out
push
and
inc
or
fs
shlb
xchg
movsb
imul
ja
int
push
fnstcw
lea
bnd
xchg
sbb
add
cmp
pop
test
xchg
jmp
jmp
clc
inc
loop
lods
cwtl
mov
std
jl
aad
adcl
push
xor
cmp
dec
xor
mov
dec
mov
sub
or
jl
or
and
adc
ljmp
fiaddl
movsl
pop
pop
pop
lea
sub
or
push
in
pop
adc
outsl
inc
push
in
jl
in
stc
sub
insb
or
outsb
hlt
scas
std
fst
inc
mov
push
push
sub
jns
lock
mov
gs
push
iret
dec
movsb
mov
cmc
mov
push
xchg
test
in
cmpsl
cli
and
jo
jl
dec
pop
in
adc
push
mov
rcrl
xchg
inc
push
add
pop
or
add
mulb
lahf
push
sbb
mov
xor
jl
lds
adc
sbb
push
gs
inc
arpl
iret
mov
and
xor
sbb
or
out
xor
lret
push
jmp
nop
lea
sbb
or
mov
mov
inc
push
inc
xchg
clc
jge
lcall
cld
cmpsl
mov
repnz
jae
cs
xlat
pop
and
lock
and
pop
xchg
test
xchg
mov
mov
lret
or
cli
push
xor
mov
inc
scas
xor
jmp
mov
dec
jbe
cmp
icebp
leave
int
lahf
dec
ret
sub
xchg
std
sti
mov
std
sbb
int
frstor
outsl
xchg
mov
sub
mov
jno
jne
mov
arpl
dec
sub
pop
pop
shll
repz
scas
adc
pusha
sahf
mov
mov
in
insb
inc
add
sti
lret
push
icebp
fstl
xchg
inc
xor
mov
inc
pop
cmc
sub
inc
fiadds
jne
jge
adc
fdivr
sarb
xchg
daa
xor
outsb
int3
xor
loop
mov
dec
or
stos
rcr
or
aad
hlt
lahf
test
aas
mov
xor
add
inc
icebp
push
jmp
inc
dec
data16
add
sarb
adc
gs
xchg
pop
loope
mov
out
xchg
push
imul
dec
mov
pushf
iret
jno
mov
pop
inc
lahf
adc
adc
jbe
loop
mov
dec
in
rorb
push
xor
xchg
xor
pop
es
push
pop
dec
mov
jmp
jg
jae
mov
rol
adc
mov
mov
push
jl
popa
imul
or
pop
repnz
orl
dec
ss
fisttps
xor
sub
push
frstor
rolb
fs
jg
inc
lds
jg
jp
ret
jb
aad
xchg
sbb
stc
cmpsb
xchg
popa
enter
and
stc
inc
jmp
or
sub
mov
mov
mov
cmp
inc
xchg
dec
mov
cmp
jo
in
out
xor
push
mov
fistpll
sbb
sbb
inc
adc
in
imull
lods
data16
xor
movsb
cld
idivb
dec
push
xchg
jmp
lcall
sbb
sti
leave
sub
dec
test
xor
xor
imul
lock
clc
cmp
stos
arpl
stos
or
push
push
dec
mov
inc
lods
sub
mov
lods
mov
mov
mov
cmp
sbb
arpl
pop
or
sub
leave
sti
outsb
repnz
daa
adc
push
add
push
or
cmc
or
jmp
addr16
fnstsw
sub
sbb
sub
lahf
mov
sahf
scas
and
push
mov
cmpsb
mov
pause
push
ds
sbb
dec
pop
subl
lret
lret
in
aaa
jno
repz
out
lcall
and
outsb
push
inc
adc
test
scas
daa
fisubrs
out
movsb
rcrl
pop
inc
mov
xor
cld
stos
aas
insl
sbb
cmp
xchg
cs
js
add
fcmovne
lret
loope
sub
and
repz
pop
xchg
mov
xchg
mov
mov
xchg
arpl
fucomp
loopne
imul
mov
pop
dec
sbb
ficoms
outsb
js
push
mov
fdivrl
adc
adc
sbb
inc
roll
cmp
das
out
repnz
adc
addr16
pop
dec
and
repnz
mov
xchg
enter
sub
push
inc
mov
lea
test
out
cmpsl
pop
push
or
jl
jmp
cld
mov
add
rorl
jl
stos
pop
mov
pop
notb
inc
mov
ljmp
push
jg
testb
push
decl
inc
mov
sbb
divb
pop
fldenv
dec
cwtl
sbb
lea
xchg
cmp
adc
notb
and
or
inc
adc
mov
insl
push
push
mov
repnz
jnp
or
jp
in
jmp
fs
pop
es
lret
lea
jno
jmp
mov
pushf
shlb
cli
loopne
sbb
fldenv
pop
and
in
popa
xor
or
lods
dec
or
stos
out
nop
in
dec
cmp
add
popf
into
jns
mul
out
ficoml
jle
leave
outsl
arpl
cmpsl
test
xchg
dec
jns
jge
fs
xlat
cmp
fiaddl
xchg
outsb
jno
adc
lds
xor
dec
aaa
leave
movsl
dec
scas
test
call
movsl
fwait
popf
in
cmc
aaa
xor
ret
mov
popf
mov
mov
lret
push
fwait
mov
insl
adc
and
clc
mov
xlat
adc
insb
pop
push
pop
inc
movsl
out
xchg
pop
outsl
ret
xchg
jbe
mov
loopne
inc
inc
mov
hlt
jmp
clc
lret
ffree
push
cmp
dec
divl
add
mov
shl
adc
scas
mov
push
or
popf
lret
daa
lea
mov
dec
and
xor
fisubrl
push
cmpb
cld
stos
andl
xor
loopne
cmp
fldl
cmpsb
sub
in
lret
push
adc
lret
xor
jecxz
xor
inc
mov
pop
test
sub
negl
shr
outsb
push
or
push
inc
shl
mov
stc
mov
jns
add
je
sub
pop
jb
fadds
lods
add
cmp
cmp
pop
aad
xchg
js
mull
in
or
jne
cmc
data16
aad
sbb
pop
pop
xor
lret
orl
mov
sub
shlb
add
jbe
mov
mov
loope
icebp
out
lret
pop
xchg
lcall
jp
jo
icebp
ror
cltd
mov
fldt
je
ljmp
mov
add
inc
lods
bound
test
add
add
loopne
xchg
xorl
loope
cmc
arpl
push
es
insl
xchg
dec
iret
mov
fs
jp
xchg
mov
add
push
mov
rorw
ja
lods
and
sbb
add
and
fnstenv
dec
insb
adc
xchg
lret
out
pusha
gs
cmp
mov
mov
mov
sti
test
cli
mov
outsb
cmp
mov
fcmovne
js
mov
into
adc
jmp
sub
adc
data16
.byte
sbb
xor
mov
jmp
cld
xchg
mov
xor
xchg
mov
movsl
fildll
and
mov
sub
imul
push
cli
jne
push
adc
out
push
push
fdivs
xor
mov
push
jbe
scas
lret
jecxz
jmp
push
mov
mov
loop
push
mov
xlat
mov
adc
scas
scas
inc
sahf
and
mov
lds
cmpsl
imul
jp
push
push
mov
push
cs
jge
stos
ret
movb
dec
sub
mov
lea
add
mov
jbe
imul
loope
pusha
xor
ljmp
sbb
lods
in
sahf
subl
bound
push
or
lock
add
imul
inc
imul
pop
cmpsl
push
mov
loop
mov
inc
cmp
aaa
sbb
mov
or
call
add
sbb
iret
dec
shl
push
xor
inc
mov
adc
ret
inc
andl
xchg
movsb
out
lods
jecxz
sbb
pop
push
fs
or
out
ret
aas
das
inc
pop
push
adc
jmp
pop
pop
inc
fsubrs
jecxz
jge
xor
push
mov
dec
push
pop
xorl
pop
call
or
mov
lea
clc
mov
test
jb
aaa
xor
xchg
repz
dec
xchg
jmp
mov
xchg
loope
xchg
rcrb
hlt
insl
in
add
pop
in
xchg
rcr
push
adc
dec
call
pop
mov
mov
jbe
inc
mov
shll
les
jle
mov
clc
push
sub
shlb
pop
add
cmp
and
repnz
repz
shrb
pusha
push
test
repz
mov
mov
movsb
sbbl
lea
mov
or
dec
or
pop
cmp
or
mov
inc
adc
or
loop
shr
add
inc
lods
loopne
inc
movsl
pop
frstor
lock
je
daa
pop
data16
push
ret
inc
sbbb
pusha
add
out
dec
stos
dec
inc
push
daa
test
jg
lret
pusha
xchg
mov
scas
add
adc
inc
iret
xchg
cmp
in
fst
pop
sub
and
xor
mov
push
mov
fmulp
xchg
add
cmp
out
inc
scas
push
cmp
jecxz
test
jl
hlt
inc
sub
daa
xchg
adc
inc
fistps
mov
and
icebp
sbb
cltd
mov
pop
or
xor
imul
lcall
sahf
push
aaa
inc
cmp
stos
cli
cmp
bound
dec
sbb
cmp
jle
imul
sub
lret
ljmp
cli
mov
inc
jo
shll
mov
cmc
xor
dec
push
pop
bound
rcll
lahf
arpl
jb
dec
dec
and
or
cmp
movsb
xor
shr
xchg
jle
cmp
add
or
push
xor
mov
dec
mov
sub
xchg
jnp
push
mov
lret
shlb
sti
mov
mov
fadds
insb
and
push
push
and
lahf
sub
push
test
inc
mov
mov
xchg
insl
dec
sub
pop
das
mov
jb
jge
lahf
cmp
aam
movsl
jl
aas
test
xchg
push
add
xor
sub
cs
pop
ljmp
movsb
push
xchg
cmp
out
inc
lods
in
shlb
outsl
xor
in
fidivrs
test
cmpsb
out
pause
push
test
mov
xlat
lds
popa
lds
and
xor
enter
incb
sub
enter
mov
inc
dec
mov
sbb
push
cmp
stos
cli
xor
xor
cmpsl
lods
outsb
test
dec
insl
xor
xlat
jmp
dec
xchg
jmp
push
mov
add
lods
sub
inc
mov
inc
mov
inc
loope
pop
ret
daa
std
lret
stos
jbe
movsl
lret
int
inc
nop
cmp
or
stos
stos
fcompl
add
outsl
out
adc
and
subl
aad
iret
out
and
pop
fildl
jmp
aas
or
push
fcoms
xchg
inc
fcomi
mov
mov
mov
cmp
push
push
push
cltd
loope
sbb
inc
jg
in
jle
inc
push
loope
mov
popa
lods
out
push
cs
lahf
cmp
dec
mov
dec
loop
mov
xchg
xor
cmp
loopne
fdivl
stos
cld
xchg
xor
mov
ja
or
lret
adc
cmp
mov
scas
cs
fldenv
fldl
cmp
shl
sub
add
xchg
push
mov
test
or
andb
push
xor
sub
daa
out
pop
adc
sahf
mov
in
fisubrs
mov
out
mov
pop
or
add
idivb
jno
mov
sub
dec
cmp
insb
or
sub
sahf
popf
cmp
jg
push
push
jae
mov
and
xchg
scas
cmpsl
and
in
outsb
dec
pop
xor
jg
arpl
out
fnsave
jmp
pop
les
mov
aas
popa
inc
jnp
popa
arpl
fmull
daa
mov
jb
gs
test
sbb
inc
xor
test
sahf
es
cli
jno
daa
mov
xor
movb
movsb
cmpsl
push
scas
lcall
sbb
pusha
and
push
cmpl
and
flds
repnz
jno
mov
pusha
inc
outsl
sbb
push
fisttpll
cmp
aam
hlt
dec
pop
push
test
cmc
aas
sbb
lcall
fistpl
pusha
cs
sub
test
repz
fbstp
or
lret
lods
push
and
sbb
and
icebp
and
and
cld
clc
xchg
aas
inc
cwtl
inc
or
test
pop
mov
or
cmp
rorb
in
mov
cmp
fisubl
and
fs
test
mov
int3
mov
mov
lock
mov
jb
pop
push
xchg
push
pop
mov
data16
icebp
xchg
pop
mov
jb
orl
ret
mov
mov
in
fwait
push
fwait
icebp
and
js
arpl
adc
dec
mov
dec
repz
fnstcw
and
pop
xor
mov
loop
add
in
paddsw
sub
cld
sbb
int
cli
pop
fadd
mov
stos
leave
fildl
shlb
adc
dec
ds
mov
inc
int
xchg
or
pop
adc
adc
movsl
loope
xor
bound
cld
aas
dec
mov
inc
sub
push
pop
or
andl
xor
fmulp
fbld
jnp
adc
xchg
iret
push
lcall
jo
push
scas
or
push
jns
loopne
sti
mov
lods
ficomps
xchg
andb
inc
lods
or
mov
jns
mov
pop
xchg
sbb
cmp
sub
jp
mov
adc
inc
and
stc
xor
and
cwtl
sbb
jno
push
pop
lcall
insl
and
dec
sub
out
jle
mov
sub
js
mov
stos
cmp
mov
cltd
inc
test
adc
or
into
scas
push
clc
sbb
cmp
into
fdivs
clc
test
mov
push
or
icebp
xchg
inc
lret
pop
add
scas
pushf
mov
push
aas
add
shr
test
cmp
imul
inc
or
aas
das
xchg
jo
frndint
or
pusha
out
movups
add
xchg
roll
dec
addb
sbb
or
lahf
cmpb
mov
mov
xchg
inc
xchg
mov
in
push
sub
faddl
leave
loopne
mov
ret
loope
xor
jo
addl
xor
mov
out
bnd
mov
adc
jo
jge
jecxz
push
jbe
insl
lcall
cmp
iret
rcrb
repz
int
sbb
popa
andb
les
mov
aas
mov
mov
and
dec
mov
sar
aaa
dec
cmp
ja
or
icebp
push
mov
xor
pop
cmp
cs
xlat
nop
pop
stos
into
ss
arpl
movsl
bound
jmp
jb
push
ficompl
xchg
xchg
mov
fildll
adc
sub
daa
shlb
cmp
mov
pop
add
mov
dec
or
out
and
in
div
adc
movsb
fucomp
in
test
push
mov
xor
jmp
stc
mov
pop
dec
lods
dec
add
sahf
jbe
xor
fsubs
jge
sub
dec
cli
cmp
rcrb
pop
orl
sbb
lcall
stos
mov
xchg
andb
das
xchg
or
idivb
dec
pop
xchg
fnstenv
dec
push
cmp
xchg
inc
cmpsb
xchg
and
pushf
lods
cmpsl
push
jnp
fcompl
and
xchg
fwait
ret
fcompl
mov
pop
ljmp
sbb
mov
and
in
xor
imul
mov
jns
mov
imulb
pusha
and
cmp
cmp
pusha
rclb
movsb
cmp
push
mov
mov
outsl
sbb
cmpl
rcrl
cli
lods
cmp
data16
arpl
add
popa
and
xchg
sbb
push
rorl
mov
ljmp
dec
push
adc
out
nop
sub
imul
adc
rclb
cmpb
pushf
and
mov
xchg
add
ret
int3
xor
inc
ja
mov
icebp
xchg
ljmp
and
jg
lret
loop
ds
jae
ds
in
mov
aam
add
mov
mov
mov
sbb
or
mov
pop
mov
in
adc
cmp
adc
xchg
cmpsb
iret
insb
cmp
outsb
xrelease
mull
cmp
and
mov
in
in
outsl
fdivp
fwait
inc
daa
and
loop
bnd
test
mov
xchg
add
mov
or
imul
fs
idivl
loopne
xchg
sub
or
int3
add
std
enter
lods
nop
orb
test
mov
rclb
xchg
pop
bound
pop
aad
push
aas
loope
aad
and
add
ds
jg
shlb
or
add
push
cmp
dec
fldl
ds
dec
mov
mov
push
or
and
and
cld
lret
jns
mov
mov
mov
xchg
mov
mov
xor
ret
popa
cmp
push
push
xlat
jbe
icebp
fmuls
sbb
xchg
jg
stos
fwait
data16
mov
mov
inc
idivl
stos
repnz
cwtl
cli
pop
cmp
push
imul
push
adc
sbb
popf
std
inc
insb
jne
lea
pop
pop
jne
push
or
inc
int3
or
mov
xor
cltd
mov
daa
xchg
jp
sahf
sarl
in
repz
roll
cmpsl
inc
and
out
fadds
cmp
or
mull
pop
pop
and
mov
call
cmpb
mov
add
test
cwtl
popf
stc
xchg
xor
js
or
and
incb
push
dec
adc
sub
xor
stc
mov
lcall
lcall
mov
inc
add
sub
pop
lods
aam
push
sbb
push
lret
mov
pop
xchg
std
xor
pop
out
sub
pop
aad
andb
add
pusha
rclb
adc
ds
lcall
lahf
dec
add
ret
nop
call
pop
cltd
dec
cli
int3
xor
cltd
les
sbbl
pop
push
loopne
inc
jb,pn
pop
and
movsb
fnstsw
push
repz
cltd
push
mov
mov
leave
cmpsl
minps
sbb
mov
jns
std
pop
xchg
push
mov
lcall
jecxz
or
cli
out
jecxz
xchg
cmpb
scas
lcall
enter
add
xor
inc
in
outsb
cmp
dec
rclb
push
dec
cwtl
jp
add
xchg
mov
xor
leave
sbb
outsb
imul
jb
and
repnz
sbb
iret
repnz
mov
popa
pop
add
sti
dec
adc
shl
shlb
push
cltd
sti
mov
subb
pop
mov
data16
lahf
add
sbb
bound
jns
pop
popf
mov
mov
jo
repz
cmp
iret
xor
aad
loopne
test
pop
flds
fwait
xor
or
inc
popa
lret
adc
and
adc
movsb
clc
in
mov
mov
js
movsb
push
decl
je
and
sahf
inc
arpl
sub
ss
mov
dec
shr
ss
cmp
mov
fs
lds
adc
xor
mov
mov
rorb
or
cwtl
jnp
xlat
lock
and
dec
loopne
adc
or
bound
jnp
mov
orb
dec
mov
add
jae
pop
iret
call
in
imul
hlt
in
lea
outsb
not
in
test
mov
popa
pop
lcall
pop
dec
ret
mull
fdiv
cmpsl
shll
mov
and
mov
pushf
mov
ficomps
cmp
push
fmul
jle
jecxz
in
push
out
add
jmp
aam
xchg
lea
mov
orb
sub
arpl
notb
mov
sub
je
les
pop
add
stc
mov
das
add
jg
aas
mov
ja
jb
lea
jle
push
lret
and
inc
scas
pop
aas
push
adc
nop
and
mov
adcl
out
scas
push
rcrb
mov
mov
xchg
adc
lock
cmpl
dec
repz
sub
dec
popf
jg
es
jo
jne
push
push
int
xchg
daa
sbb
xchg
lahf
in
jge
out
int
pop
mov
sbb
leave
and
push
jmp
mov
xchg
or
push
shr
inc
test
xchg
sarl
lret
ret
sub
pop
or
incl
pop
fisttps
xor
rolb
sub
mov
mov
pushf
test
or
push
shrb
push
cld
andl
cmc
mov
push
aas
iret
movsb
push
rol
xchg
mov
imul
js
mov
les
dec
push
push
ret
jnp
scas
adcb
mov
punpckldq
adc
in
push
xor
outsb
push
and
repz
push
mov
das
enter
insb
int3
or
fdivrs
cli
xchg
push
add
inc
push
cmp
ds
lods
mov
and
jo
sbb
in
mov
insb
dec
insb
mov
js
jb
xchg
xlat
and
dec
popa
push
push
push
in
sub
fsubl
movsl
push
adc
les
mov
push
hlt
imulb
dec
ljmp
adc
shl
and
xlat
and
and
sub
sbb
add
std
aam
jns
inc
iret
test
xchg
cmp
xor
bnd
mov
dec
cltd
dec
pop
push
jns
xchg
mov
es
sahf
adc
mov
mov
mov
sahf
and
push
adc
out
fwait
subb
pop
fcompl
daa
jl
out
in
fwait
mov
sbb
inc
mov
cmpsl
add
or
or
int3
cmp
mov
dec
push
arpl
shr
cmp
cmpsb
add
sarl
fistpl
inc
pushw
imul
push
xchg
and
fwait
push
testb
pop
jecxz
inc
mov
push
and
lea
scas
in
lods
adc
mov
mov
dec
cwtl
repz
out
gs
imul
add
iret
shll
fidivrl
inc
dec
mov
xor
fisubrs
mov
sbbb
inc
mov
sahf
pop
jnp
adc
mov
and
movsb
imul
fldt
pop
fs
movsl
or
adc
lock
data16
aaa
mov
lahf
pop
test
jne
sbb
stos
hlt
adc
sbb
mov
jle
stc
outsb
mov
mov
sub
push
pop
xchg
enter
mov
xchg
out
jnp
pop
fisttpll
mov
negb
xchg
push
cmc
cli
fists
ret
and
rclb
xor
mov
test
push
and
mov
inc
incb
push
pop
std
loopne
xchg
pop
cmp
adc
sbbl
insl
es
and
dec
inc
jg
int3
dec
nop
scas
jle
loope
xlat
sub
ret
nop
insb
rolb
xor
jae
cmp
mov
adcb
mov
rol
dec
cmp
fisubrs
pop
cmp
lock
enter
sbbl
sbb
or
fisubl
mov
dec
aam
icebp
sbb
stc
inc
inc
and
outsb
insl
push
jae
cli
in
fwait
cmp
rcll
sbb
test
dec
lock
jmp
cmp
jg
cmp
into
test
mov
scas
pop
mov
aad
adc
sbb
cmp
jl
pop
test
movsb
fldenv
mov
mov
hlt
je
insb
add
in
mov
out
jge
arpl
xor
inc
and
inc
insl
imul
sbbl
push
insl
out
push
in
mov
fsubs
xchg
pop
clc
jbe
pushf
pop
hlt
lods
dec
addr16
icebp
insb
xor
jp
in
mov
mov
cs
jne
imul
push
enter
in
in
sub
xor
inc
repnz
sub
and
dec
mov
sarl
pop
push
xchg
movsb
sbb
jmp
insl
js
imul
pop
call
leave
xor
xlat
cmpsl
fimull
jg
mov
lret
push
jne
shlb
jb
int
mov
cld
mov
sub
ret
add
inc
ss
sahf
sbb
nop
pop
pop
sbb
jae
shl
sbb
cmc
fildl
loopne
inc
pop
mov
cmp
xor
inc
mov
das
sahf
loope
mov
dec
jns
push
xorb
popa
sahf
outsb
or
scas
lds
pop
cmp
ljmp
shlb
jle
repz
scas
arpl
push
jp
mov
add
push
dec
mov
pop
addb
cmp
cwtl
mov
lret
cltd
inc
xlat
repnz
call
and
sub
adc
lea
pop
xor
or
sub
enter
cmpl
adc
xchg
pop
insl
mov
fisubs
fcos
adcb
clc
fldcw
xchg
pop
xor
jno
mov
cltd
sub
jnp
imul
ud2
dec
arpl
shll
in
adc
jae
subb
pop
ret
inc
pushf
mov
ja
sbb
cld
aam
cmp
pop
loope
icebp
popa
mov
fsubrp
repnz
xor
inc
xor
jb
divb
xchg
mov
xor
pushf
ret
jg
xchg
popa
pusha
jne
dec
arpl
in
and
pusha
mov
movsb
xchg
cmp
ret
arpl
je
push
in
xor
rcr
rorl
cmp
imul
sahf
mov
xchg
add
mov
jae
push
pop
jge
mov
fldcw
xor
ret
or
push
loop
outsl
inc
fildl
js
sbb
test
enter
out
insb
fwait
repz
pop
test
pop
popa
inc
pop
push
shlb
push
repz
or
sub
ss
xor
mov
test
out
lret
jle
outsb
jb
dec
lds
in
sub
mov
aad
add
jle
cld
insl
cmc
scas
inc
mov
int
add
pop
hlt
in
lods
ret
adc
sbb
pop
jmp
enter
insl
adc
lret
frstor
xchg
mov
ret
pop
cli
js
sahf
mov
sbb
cmpsl
pop
push
mov
push
mov
cs
jbe
mov
jnp
leave
jp
jge
cltd
xorl
loopne
pop
cwtl
xor
add
nop
xor
mov
pop
inc
push
test
movb
xor
jno
mov
push
es
mov
xlat
iret
pop
inc
rcrl
mov
std
imul
das
setg
popl
sub
mov
pop
and
mov
inc
mov
shr
push
xchg
add
test
rol
popf
cmpsb
popf
jno
jge
jle
dec
inc
ss
pop
les
lcall
xchg
aas
jmp
test
lahf
push
xor
xor
xor
pop
fnstsw
xchg
fs
inc
or
dec
push
stc
and
inc
mov
loope
mov
aad
loopne
mov
leave
fs
jb
sub
xor
jnp
fwait
cli
mov
push
int3
jmp
dec
and
xchg
add
stos
push
pusha
push
and
addr16
movb
sub
xchg
or
adc
ds
adc
inc
hlt
lcallw
push
cmc
push
in
ficomps
adc
push
adc
jnp
jbe
or
adc
add
jmp
test
fldt
in
adc
dec
sbb
jbe
mov
mov
inc
mov
bound
fs
sbbl
test
push
fmul
and
xchg
mov
lods
jnp
mov
xor
pop
or
lret
pushf
ljmp
sbb
jle
xlat
add
rorl
mov
jmp
pushf
jle
dec
xchg
cwtl
adc
shll
shl
sbb
jg
es
mov
or
xchg
sub
mov
push
sub
and
dec
or
pop
test
xchg
jb
mov
mov
mov
outsl
stc
ss
rol
mov
jae
jns
aas
mov
dec
push
push
cmp
cmc
jmp
call
lcall
leave
sub
add
hlt
test
jb
fwait
xchg
or
fsubrp
jmp
cmp
and
inc
push
mov
fisubs
xchg
inc
lock
nop
xor
repnz
scas
mov
adc
mov
xchg
das
mov
bswap
and
jg
cmp
imul
jp
lret
adc
push
out
lret
xchg
push
pushl
sub
das
adc
hlt
icebp
test
dec
jo
xchg
nop
stos
cltd
mov
test
sbb
jo
or
dec
pop
fisttpl
or
sub
mov
and
aam
icebp
test
rcll
xchg
gs
into
or
repz
mov
loopne
sbb
pop
sti
or
ja
dec
ret
or
iret
addr16
lea
pop
pop
enter
add
shll
jae
andb
mov
adc
lcall
push
out
les
sub
xorl
pusha
mov
std
cltd
lahf
add
pushf
or
outsb
adc
cmp
in
cmp
ss
cmp
jg
imulb
stc
xor
ficoms
xor
adc
mov
fwait
sbb
fcoms
arpl
loop
add
jg
sub
lds
das
dec
test
or
in
jnp
sub
xor
sar
jae
jmp
or
repnz
int
in
dec
outsb
or
push
nop
imul
jo
flds
dec
aaa
inc
lret
mov
sub
ss
add
pop
push
addr16
inc
inc
lods
rcr
push
ret
push
icebp
pushl
divb
xor
mov
push
imul
push
shrl
dec
lea
cmpsl
sbb
dec
daa
and
mov
out
fadds
adc
jo
loopne
cmp
pushf
sbb
sahf
loopne
lcall
push
cld
and
data16
imul
and
arpl
pop
jmp
adc
inc
fldl
add
aad
aas
shll
push
push
into
mov
push
cmpsl
mov
dec
enter
test
cmp
in
mov
addl
cwtl
mov
outsl
sar
pop
cltd
es
inc
sbb
jg
js
dec
out
scas
lret
inc
out
sub
sub
rcrl
fwait
sbb
cmp
cwtl
push
mov
es
sbb
pusha
or
loop
jge
dec
mov
push
and
xlat
mov
push
mov
or
cmp
mov
pop
and
out
je
inc
push
pop
fisttpll
add
cwtl
mov
int
mov
lea
frstor
es
out
lret
push
fcmovu
xchg
mov
stos
mov
mov
adc
in
mov
xchg
xchg
mov
dec
out
lret
mov
fwait
push
mov
loope
mov
call
pop
jns
stos
cmc
add
push
or
mov
das
pusha
cmp
dec
imul
dec
fmul
loop
mov
in
popf
stc
xor
fldt
inc
aas
mov
jle
loope
clc
dec
push
lods
test
push
dec
mov
jge
sets
cmp
loop,pt
mov
cld
jbe
xchg
inc
inc
sub
mov
loope
fisttpll
test
and
lahf
push
insl
push
inc
subb
ljmp
cld
sbb
push
xor
sar
mov
dec
imul
out
dec
mov
or
jecxz
mov
aaa
inc
or
dec
outsl
add
mov
daa
arpl
insl
pop
into
lods
sbb
fidivl
ficoml
pop
mov
jl,pn
scas
int
sbb
mov
dec
sub
cmpsb
stos
mov
addr16
aad
cmpsl
add
test
in
push
scas
movnti
rclb
jg
lcall
popf
and
inc
inc
icebp
sub
mov
ljmp
sub
inc
sti
adc
das
arpl
and
into
out
ljmp
pop
jo
movaps
inc
scas
test
popa
mov
sbb
es
pop
dec
jge
ja
jno
cmp
push
or
fs
pop
sub
push
orb
je
jo
sbb
inc
add
xor
pop
es
pop
dec
jge
ja
jno
cmp
or
bound
in
cmpsl
out
aas
enter
.byte
icebp
