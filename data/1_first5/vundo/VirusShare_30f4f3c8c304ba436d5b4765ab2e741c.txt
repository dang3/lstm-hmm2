fldcw
incl
inc
add
push
push
je
imul
or
fs
inc
push
jo
push
fs
pop
inc
push
sbb
test
sbb
pop
push
push
mov
push
stc
pop
sti
imulb
call
ret
lea
prefetch
fcmovnbe
fidivrl
push
push
push
mov
mov
push
pop
adc
test
testb
push
cs
cmp
jge
fimull
mov
mov
xchg
smsw
pop
pop
inc
neg
neg
arpl
adc
or
ret
mov
jmp
pop
pop
pop
pop
xor
lcall
leave
je
test
je
push
mov
and
cmpl
and
aaa
pop
mov
shrb
ja
out
int3
out
and
mov
add
xlat
mov
mov
or
add
jg
int3
lret
int3
enter
enter
fmul
loopne
jecxz
in
ret
mov
add
sbb
jecxz
cmp
je
mov
mov
ja
lea
lea
neg
movsb
sti
std
rep
jmp
sbb
lcall
jg
aas
int
pop
sar
mov
mov
sub
rep
cld
mov
sar
js
or
in
mul
insl
ret
cmp
mov
shl
add
pop
decb
ja
stos
or
stos
pop
mov
in
adc
iret
clc
out
fbld
xor
sub
mov
xor
div
add
mov
inc
mov
jne
test
jge
movb
inc
mov
inc
mov
cmp
mov
jle
add
mov
push
mov
mov
inc
dec
jne
add
mov
nop
imul
in
xchg
loopne
popf
jae
shlb
add
fcmovnu
decl
and
add
sub
je
and
das
das
aas
js
popa
pop
je
xor
daa
adc
cmpsl
dec
dec
test
and
add
xor
jmp
adc
ja
clc
ja
lea
add
add
sub
jne
std
pop
loope
dec
mov
jl
pop
xor
mov
mov
push
neg
fdiv
out
jle
js
pop
sub
jmp
inc
daa
jmp
mov
dec
popa
jb
push
and
or
adc
ja
add
pop
leave
inc
add
mov
jmp
ret
repnz
jmp
jne
movsbl
rolb
add
jmp
cmp
sbb
push
push
pop
mov
pop
push
push
push
loope
loope
in
push
les
mov
pop
pop
pop
daa
mov
mov
testl
mov
testl
mov
push
inc
js
shr
pop
pop
mov
mov
cmp
inc
or
mov
mov
cmp
fstp
dec
mov
inc
fiadds
adc
fdivrp
fucom
cmp
push
stc
mov
mov
mov
add
out
mov
std
jle
mov
inc
mov
call
movsl
inc
rcrb
sbb
movsl
rorb
jl
mov
jbe
jg
push
mov
adc
leave
mov
xchg
push
js
data16
mov
lods
mov
cmp
iret
fsubl
xlat
push
add
lret
sbb
jle
sub
add
aaa
mov
ret
lock
xchg
mov
leave
ret
iret
mov
das
mov
cmpb
jne
cmpl
adc
mov
or
pop
add
jne
adcl
mov
add
cmpl
add
xchg
in
inc
or
adc
jbe
push
inc
sti
popf
fnstcw
and
mov
cmp
jle,pt
in
popa
push
mov
add
push
sub
mov
add
push
or
mov
push
sbb
or
sti
lds
mov
jb
outsl
inc
add
inc
outsl
jo
cltd
addr16
and
cmp
jo
in
lea
cmp
inc
push
insb
popa
outsb
add
out
fwait
inc
fucomi
push
fadd
popl
scas
test
xor
xchg
sbb
bound
imul
lea
ja
pop
dec
jb
and
adc
sbb
add
or
add
dec
jne
dec
outsb
mov
and
sbb
jo
push
cwtl
mov
pop
or
jge
jmp
pusha
ljmp
pusha
xchg
cmp
sub
pop
push
jle
add
push
faddl
or
insb
cmp
inc
clc
fistpl
mov
scas
rcrb
stc
int3
mov
mov
nop
dec
cmp
mov
syscall
fmuls
or
mov
mov
xor
jne
testl
xchg
pop
pop
sbb
add
cld
ret
cwtl
aas
je
cld
add
push
cld
add
cmp
negb
mov
mov
dec
mov
adc
outsb
gs
outsb
test
push
aam
jmp
inc
popa
inc
lods
je
repnz
cmp
test
clc
mov
jl
sub
outsb
pop
sbb
mov
push
imulb
fidivrs
mov
shll
jbe
bound
push
push
pop
jne
outsl
in
decl
sub
mov
jmp
or
adc
imul
push
push
mov
decb
das
mov
push
shr
je
mov
pop
dec
je
fistpll
pop
add
dec
add
or
imull
pop
and
pop
and
je
sub
fldt
lret
cmp
cmp
jne
push
adc
fiadds
cmp
pop
jmp
scas
fstpt
push
adc
xchg
inc
jmp
adc
jmp
or
cwtl
aaa
add
inc
rorl
add
add
lea
mov
xchg
test
push
sub
mov
int3
dec
xor
jno
ja
mov
pop
repz
sub
jbe
lock
cmp
jge
sub
js
sbb
subl
mov
imul
mov
jmp
adc
pop
ret
repz
jne
cmp
dec
and
sbb
xor
out
or
cmpsb
ror
in
pop
xor
test
mov
decl
push
push
pop
mov
mov
sbb
or
or
or
into
mov
jo
popa
xor
fiaddl
sub
shl
mov
fdivrl
icebp
jl
icebp
ret
inc
sbb
add
fisttps
arpl
mov
push
jno
pop
pop
mov
fisttpl
data16
cld
shr
or
push
push
and
dec
pop
bsr
lea
mov
lods
sub
or
add
push
mov
mov
sub
mov
and
mov
mov
pop
sub
or
cmp
je
add
lret
fcmovne
fmull
or
je
add
je
bswap
adc
adc
cmp
mov
aas
dec
clc
jmp
or
adc
jmp
push
mov
or
or
add
dec
cs
jg
addr16
sbb
pop
jmp
sbb
or
hlt
mov
xchg
mov
leave
mov
in
pusha
pop
call
sub
cmp
repz
shll
inc
pop
gs
mov
or
dec
pop
or
insb
mov
or
in
pop
loop
cld
jmp
sbb
or
mov
bound
and
add
in
out
sti
mov
jmp
inc
add
jns
fcmove
adc
jmp
push
sbb
sbb
outsl
icebp
lahf
and
fwait
test
xor
push
pushf
rorb
push
add
outsl
cld
or
clc
push
add
movsb
pop
clc
add
sarl
add
add
push
inc
pmulhw
add
mov
stc
push
stc
out
in
cmp
stc
push
cmp
cmp
subb
stc
mov
pop
rep
mov
pop
mov
jle
mov
outsb
adc
jge
shrb
sub
push
add
decl
imul
add
je
enter
add
mov
pop
pop
add
enter
sbb
call
repnz
adc
adc
mov
int3
pop
xlat
icebp
scas
rorb
test
pop
jmp
adcb
ljmp
pop
push
mov
psadbw
and
repz
popa
jge
les
pop
enter
cmc
and
dec
jne
push
or
in
shr
jp
adc
sarb
loop
cwtl
lar
fmuls
add
add
add
and
pushf
imul
pop
sbbl
pop
pop
add
ficompl
xor
adc
call
inc
mov
popa
sub
cmp
jb
dec
cmpw
imul
out
add
cmp
mov
mov
and
or
aam
sub
or
dec
add
or
ret
cmp
jne,pt
aas
hlt
lahf
es
ds
jmp
or
push
pop
pop
mov
or
call
mov
mov
in
decl
add
nop
jae
or
lret
pop
pop
push
loopne
dec
or
pop
inc
ficomps
sbb
ficomps
out
mov
inc
inc
mov
mov
mov
in
inc
lock
insl
imul
scas
aaa
add
idivb
mov
add
add
testb
mov
fnsetpm(287
inc
in
test
sbb
inc
or
call
movsl
dec
cld
loopne
jge
jge
outsb
cmc
ret
and
mov
imul
add
lock
jle
lea
mov
jle
rcll
lods
loopne
pop
decl
push
fcmovnbe
or
mov
in
divb
add
sub
in
inc
dec
mov
push
sub
add
push
fcmovu
push
int
into
push
cwtl
jmp
arpl
sub
arpl
in
add
add
clc
bound
cmp
sub
dec
ret
loopne
mov
add
push
cmpl
cs
das
sub
int3
or
dec
dec
ss
inc
movl
je
or
lea
pusha
clc
push
call
decl
dec
jne
mov
mov
lcall
sahf
inc
nop
and
decl
push
addb
ljmp
and
add
adc
out
mov
cmp
pop
add
and
pop
adc
dec
or
push
cmp
cmc
jmp
mov
addr16
dec
cmp
sbb
xor
pop
test
test
mov
xor
fisttps
repnz
push
aaa
xor
or
push
jb
filds
hlt
mov
test
pop
mov
call
fildl
sbb
push
adc
movl
outsb
add
mul
push
pusha
xchg
in
in
xor
nop
and
pushl
mov
incl
lret
push
pop
adc
aaa
mov
sub
pop
pop
pop
fs
push
loopne
lahf
add
sub
ljmp
pop
push
shrb
inc
dec
pop
jge
mov
cld
lcall
dec
out
xchg
adc
push
mov
cmp
mov
or
ret
ret
test
jne
sub
add
ret
jne
les
sub
fs
cmp
adc
inc
mov
adc
or
mov
mov
mov
add
fadds
push
or
push
sub
adc
jl
cmp
ret
mov
push
test
nop
and
and
sbb
jnp
pusha
pop
test
fs
inc
push
mov
inc
sbb
inc
mov
subl
push
out
pop
adc
xor
add
adc
push
dec
jmp
sbb
push
add
push
or
in
mov
add
sub
fisttps
les
cld
das
cltd
fisubrl
fdivrs
add
jg
push
push
sub
enter
inc
add
cmpl
jo
mov
shlb
mov
xchg
pop
test
fs
adc
jb
xor
cs
or
clc
push
cld
rorb
push
scas
lahf
and
push
mov
fwait
xor
inc
imul
nop
insl
int
lods
push
mov
adc
test
pop
ja
in
hlt
sbb
add
pop
orb
mov
dec
mov
cmpsl
mov
lods
cmp
ret
pop
sbb
arpl
adcb
pop
inc
and
adc
out
jp
js
push
mov
cmp
cld
add
fdivrp
sbb
mov
dec
jne
sub
pop
dec
xchg
push
jbe
and
dec
aaa
das
cmp
and
push
sbb
ret
xor
pop
dec
and
mulb
test
rorb
int3
mov
cmp
or
cmp
inc
mov
popf
sbb
jns
add
fdivs
jne
ret
mov
in
xchg
mov
jo
std
cmpl
pop
sbb
xchg
clc
mov
sbb
mov
mov
xlat
and
mov
psubb
adc
mov
and
adc
ficoml
cmp
dec
jns
bswap
inc
xchg
sub
mov
lock
pop
bnd
bound
add
mov
xor
pop
push
leave
psubsb
xchg
pop
fnstenv
in
pusha
nop
mov
xchg
sbb
push
and
and
pop
repnz
leave
and
aam
xchg
pop
repnz
mov
xorl
push
int3
mov
ficoms
push
enter
nop
sub
and
add
jnp
mov
ds
sub
push
les
sub
mov
lret
add
in
leave
pusha
test
ret
pop
jne
gs
data16
add
add
xor
in
fs
int
cs
insb
push
daa
dec
outsl
or
lret
popa
fs
mov
or
gs
inc
iret
cmc
sub
push
cld
sub
jecxz
out
push
or
push
push
je
cwtl
jnp
add
mov
jne
mov
add
jnp
mov
ror
push
jge
add
sbb
xor
sub
fimull
add
sub
pushf
sbb
adc
mov
lock
xchg
ja
lods
into
sbb
shlb
mov
push
add
push
into
jle
cwtl
cld
mov
call
ret
call
cmpsl
js
add
xchg
in
or
push
xorl
daa
mov
jg
fsubs
sbb
sub
jne
addl
arpl
push
and
jae
push
sbb
sub
pop
es
lret
sbb
inc
or
push
xchg
sub
cmp
shlb
int
flds
nop
pushf
and
outsb
cmp
inc
add
and
pop
shrb
cmp
addr16
mov
push
add
jnp
sbb
pop
jbe
xor
mov
mov
imul
mov
cmc
xchg
or
push
rsqrtps
pop
adc
sbb
and
pop
repnz
lock
mov
xchg
movsl
addr16
and
sahf
jo
mov
mov
jg
add
mov
mov
sbb
pop
test
nop
cmp
push
test
idiv
push
mov
or
adc
adc
add
adc
int
mov
or
xchg
call
mov
xor
out
dec
dec
mov
sub
addr16
jno
nop
and
cmp
pop
jmp
lea
add
mov
clc
add
cmp
paddusw
adc
sub
xchg
nop
xchg
and
and
lods
aad
cmpsb
shrb
fnstenv
jge
dec
and
and
testl
dec
mov
testb
xchg
roll
or
mov
sbb
jge
adc
and
mov
cmp
push
mov
in
fsub
xchg
in
add
or
lret
xor
jecxz
add
ljmp
cmpsb
outsb
movsl
sub
xor
cmpsb
ss
adc
mov
push
lock
jl
add
cmpsb
inc
cwtl
dec
push
inc
and
sbb
add
sub
pusha
loopne
lret
sbb
and
sarl
popf
adc
cmp
mov
mov
pop
add
and
adc
add
add
fwait
mov
aas
call
fcoml
cmp
test
or
fsubrs
jl
add
mov
js
add
push
les
jmp
orb
cmpsb
imul
mov
jl
push
jae
mov
mov
insb
das
aam
push
xchg
lds
out
and
nop
inc
stos
add
add
insb
add
pop
jo
add
and
and
outsl
lcall
xor
push
add
add
dec
add
mov
push
pop
or
add
dec
sti
fdivl
incl
inc
add
add
push
push
add
add
adc
popa
scas
dec
pop
add
addb
push
xorl
adc
add
nop
push
add
inc
inc
add
add
add
pusha
add
imul
add
add
or
push
add
outsl
add
mov
out
sbb
cmp
add
outsb
add
dec
add
pop
or
frstor
push
outsb
inc
adc
and
pusha
dec
inc
add
and
mov
outsl
jg
pop
inc
pusha
and
inc
arpl
fmull
jae
mov
out
cmp
add
imul
fstl
pop
push
or
push
lea
ss
gs
push
pop
scas
stc
pop
xlat
cmp
xchg
pop
push
mov
adc
dec
or
xchg
shlb
push
pop
xchg
add
push
repnz
mov
add
add
repnz
in
sbb
mov
shlb
mov
outsb
js
jne
jg
pushl
data16
push
jns
addr16
ja
jae
outsb
add
pop
and
sar
push
adc
movaps
lcall
add
fdivrl
cvtps2pd
mov
push
xlat
mov
out
jb
push
in
mov
lahf
jb
cltd
popf
das
mov
jb
daa
rcr
xchg
sti
sub
xor
ds
inc
cmc
negl
pop
push
outsb
push
dec
adc
push
or
in
adc
adc
or
aad
test
xchg
aad
or
in
in
sbb
pop
dec
add
mov
in
sbb
push
push
inc
mov
fbstp
push
out
or
add
sbb
fwait
jge
push
pop
xor
sbb
xchg
daa
ss
aaa
push
idiv
daa
inc
xor
ja
fdivrl
and
adc
lds
or
xor
cmp
adc
lods
mov
loop
mov
mov
lds
incl
add
xchg
addl
test
pop
pop
sar
incl
sub
ret
mov
aaa
adc
cmp
pop
pop
mov
dec
sub
pushl
sub
in
add
sbb
mov
cmp
xchg
jmp
xor
sub
mov
inc
js
nop
int
je
jl
sub
adc
jne
in
call
xchg
imul
jns
xor
and
sub
out
pop
clc
stos
je
cld
bnd
mov
or
test
cmc
nop
aas
or
push
jo
ret
adc
mov
call
lret
mov
incb
and
js
add
xor
fwait
cmp
add
dec
cmp
incl
sub
scas
sbb
sub
nop
testb
jo
xorl
ljmp
das
shl
js
fninit
or
dec
jge
sbb
call
push
pop
aas
inc
or
jle
repnz
xorl
iret
and
in
adc
cmp
dec
movsb
andb
dec
cmp
or
and
push
sahf
jle
pop
mov
repnz
out
repz
push
incl
adc
in
dec
sbb
sarb
add
enter
int3
xor
jno
mov
fdivr
call
out
lock
add
adc
popa
sub
pusha
in
nop
cmp
fisubrs
pop
or
dec
pop
cmp
add
dec
nop
fldl
jno
dec
cmp
int
jnp
or
fwait
lret
mov
fldt
pusha
fstpt
cmp
jp
push
aam
aas
lret
mov
push
cmp
pop
add
jb
mov
outsb
pop
mov
call
filds
cmp
mov
outsb
aad
xchg
mov
sbb
in
mov
cmp
cmpsb
outsl
cmp
cmpsb
gs
outsb
jecxz
int3
nop
neg
mov
and
push
and
cld
cmp
imul
mov
insl
or
cmp
arpl
std
fdiv
pop
popa
jne
dec
int
xchg
cmp
and
xlat
xor
jb
pop
jo
arpl
aaa
insb
dec
cmp
adc
lcall
jne
out
cmp
and
lret
mov
js
cmp
arpl
in
ja
xor
icebp
popa
cmp
adc
push
cmp
aaa
adc
lret
fucom
mov
push
jbe
sbb
pushf
mov
mov
je
aaa
jle
in
xchg
add
add
idiv
push
iret
inc
jge
sub
sar
nop
clc
jmp
nop
loop
jp
xchg
repz
cmp
or
push
aas
jle
add
jmp
into
in
and
mov
rorb
test
nop
hlt
cmp
sub
clc
call
cld
loop
addl
nop
repz
in
cli
js
sbb
mov
pop
insb
aaa
dec
mov
testb
or
int3
mov
addr16
clc
sbb
pop
cld
call
mov
repz
outsb
or
cmp
or
jb
xchg
mov
push
dec
push
jecxz
andl
fdivrl
inc
js
add
jge
cld
cld
decl
add
jo
nop
add
lahf
test
cmp
add
and
jp
or
sti
sbb
roll
or
mov
jp
das
jp
push
mov
daa
cmp
or
jns
pop
movsb
xor
and
jns
jge
mov
fcmovnb
jge
add
adcb
mov
in
xchg
pop
push
xchg
mov
ja
or
cmpsb
lock
call
in
nop
jmp
add
mov
cmc
xchg
jns
and
cltd
push
push
imul
nop
popf
sbb
lcall
icebp
mov
xchg
cmp
xchg
add
mov
mov
imul
xchg
mov
xchg
cmp
pop
test
lods
fistpl
jno
lods
dec
lcall
push
jo
xchg
mov
inc
ja
adc
pushl
push
mov
cmp
or
dec
lahf
sub
decl
xlat
xor
cmp
sbb
mov
fidivl
scas
in
fbld
sbb
pop
inc
push
fdiv
jg
mov
and
pop
popa
jno
xor
xchg
or
idivb
sub
add
sub
add
adc
fcomi
idiv
fcomp
mov
fcomps
mov
lret
dec
outsl
jnp
int3
mov
xchg
nop
cltd
xchg
xchg
ljmp
lds
nop
lret
mov
and
push
lret
fstl
inc
negl
mov
das
insl
dec
mov
in
out
mov
mov
orl
cmpl
push
popf
fistpll
mov
xor
add
out
adc
lahf
adc
outsb
jl
call
and
je
bound
call
cld
out
mov
jecxz
jmp
pop
adc
jnp
cli
mov
sti
cli
cmp
and
pop
push
xchg
jbe
je
repz
dec
dec
sub
adc
inc
repnz
fiaddl
out
int
mov
mov
out
clc
int
aaa
mull
xchg
mov
in
lcall
xchg
rcrl
push
into
sarl
cmp
cld
and
mov
dec
aad
mov
dec
mov
sbb
mov
ror
push
popa
mov
pop
fstp
imul
xchg
aad
sub
mov
lret
shll
lock
sbb
adc
push
adc
pop
mov
pop
dec
icebp
jmp
daa
and
shll
xchg
in
mov
fsts
push
aaa
in
xchg
outsl
in
fidivrs
or
adc
rclb
dec
inc
lods
outsl
xchg
cltd
popa
test
in
sarl
mov
jb
sahf
icebp
xchg
adc
lcall
ljmp
hlt
mov
and
std
and
inc
and
adc
mov
ror
xchg
or
aad
xlat
and
int
and
or
loope
incl
jmp
bound
flds
adc
add
stc
hlt
xchg
jbe
mov
hlt
push
pop
enter
inc
sub
xlat
inc
in
add
pushl
aaa
icebp
fnstsw
std
xchg
fimuls
std
nop
jle
repz
add
lock
lea
adc
mov
dec
pop
int
adc
ljmp
mov
stc
fwait
and
std
iret
int
in
add
hlt
or
and
or
mov
cmp
mov
loop
fadd
mov
pop
loopne
adc
mov
sbb
dec
in
cmp
sub
jg
decl
enter
mov
movb
sar
mov
pusha
leave
mov
rorb
mov
xchg
int
mov
xor
fisttpll
call
dec
in
pop
int
mov
in
xchg
mov
cmp
aam
cmp
add
int3
pop
dec
cld
lahf
and
or
in
or
clc
out
gs
mov
int3
sub
lret
pop
or
cmp
ljmp
sub
add
addr16
jmp
adc
adc
ret
pop
cli
inc
lret
fndisi(8087
xchg
xor
nop
xchg
xchg
xchg
xchg
adc
dec
arpl
call
jle
loope
sbb
sbb
sub
enter
in
cmp
inc
lcall
mov
adc
sbb
jbe
xchg
cmp
dec
xor
lea
mov
and
mov
adc
loopne
and
jno
icebp
enter
insb
add
and
adc
fwait
and
ja
cmc
xchg
dec
xor
sub
and
stc
xor
cmp
testb
adc
jecxz
or
pop
ror
xchg
push
fcmovnb
addr16
clc
dec
es
or
daa
and
lret
mov
jmp
andl
ljmp
mov
lret
sti
mov
cmc
cvttps2pi
das
jnp
jle
pop
or
sub
out
pop
clc
lods
movb
sub
pop
add
pop
loopne
scas
xor
lea
mov
int3
dec
push
lds
cld
call
cwtl
or
cmp
push
aaa
push
sbb
cwtl
sbb
jmp
nop
sbb
adc
rcl
sub
test
jne
lock
shl
pop
cltd
ret
sbb
sbb
call
sub
shlb
jge
repz
incl
push
in
loop
mov
rcrl
pop
testl
pop
sbb
fdivrl
and
add
addr16
fcomip
sub
inc
or
pop
sub
mov
and
std
outsl
pop
dec
jbe
dec
push
orb
movl
stos
mov
push
adc
sbb
sbb
xchg
mov
ds
das
cld
in
decl
out
lea
sbb
xchg
pushf
cmpsl
and
mov
sbb
sbb
into
pop
pop
push
stos
adc
fstpt
das
xor
push
out
dec
adc
adc
and
incl
xor
lock
fdivl
shrl
aad
mov
clc
inc
or
into
cmp
mov
insl
sub
push
call
adc
sub
jmp
cmp
xor
rcr
lcall
lcall
sbb
lds
dec
adc
loop
lds
movsb
push
xchg
cmc
inc
push
mov
fucomip
xchg
or
scas
xor
xchg
push
fsubr
or
mov
std
push
jg
jno
cmp
jno
push
jbe
int
sub
imul
inc
mov
aam
js
pop
leave
idivl
jle
repz
dec
decl
stos
imul
lret
add
xor
xchg
inc
mov
hlt
adc
dec
int3
repz
xchg
mov
addr16
repz
enter
mov
adc
cmpsl
lea
jecxz
fwait
inc
rcrb
jge
pop
xchg
push
jge
dec
push
cmp
es
mov
cld
sbb
pop
add
in
movsl
mov
movsl
jb
ret
mov
dec
lret
push
xor
cmc
stos
mov
jb
xchg
or
jo
xlat
fsubrl
mov
xor
adc
rcr
cwtl
add
jp
popf
pusha
push
xor
or
mov
mov
in
adc
xchg
mov
and
je
sub
mov
and
adc
enter
test
std
das
push
ljmp
add
bound
sub
xchg
adc
or
mov
add
pushf
xchg
aad
xchg
lds
xchg
fldl
in
push
sbb
sti
xchg
or
xor
or
add
jb
adc
hlt
jg
mov
adc
sbb
sbb
pop
inc
mov
inc
sub
das
lock
mov
packsswb
inc
sbb
jecxz
adc
inc
dec
pop
ljmp
cs
sub
inc
mov
mov
aam
mov
loope
loopne
or
int
mov
cld
cmp
jae
lods
pop
or
xchg
pop
cli
lcall
xor
aad
in
jmp
sbb
mov
adc
aaa
mov
dec
inc
in
mov
cmp
aaa
mov
idivb
or
add
jmp
ret
jl
push
push
inc
int3
or
add
mov
dec
and
add
lcall
loopne
pop
lock
or
inc
pop
std
and
pop
adc
std
pop
cld
mov
push
out
add
mov
sahf
gs
test
hlt
add
sub
bound
sbb
jg
incl
cmp
and
inc
inc
rolb
add
xor
adc
cmp
call
mov
daa
and
pop
div
mov
mov
int3
negl
adc
lock
jg
cld
enter
adc
lds
jp
incl
movsb
mov
adc
xor
in
push
je
xor
call
mov
hlt
sbb
mov
push
push
adc
notl
mov
pusha
mov
push
xor
jecxz
jmp
xchg
ret
xor
push
adc
arpl
mov
imul
in
jmp
insl
gs
dec
sahf
xchg
mov
cld
ljmp
pop
loopne
mov
and
lcall
das
adc
iret
jo
xor
cmc
fistpll
cmp
xor
pop
loop
mov
iret
ss
jo
add
and
fnstenv
movsb
pop
loopne
or
ljmp
ljmp
add
cwtl
arpl
decl
lock
sha1nexte
in
or
call
jmp
std
pop
cltd
xor
or
inc
add
ret
es
ljmp
jnp
ret
add
dec
and
stc
pop
test
mov
in
sbb
outsl
jg
jb
sub
ljmp
in
loope
xorl
xor
jbe
dec
stos
in
arpl
xor
lahf
mov
call
fs
add
daa
mov
ret
ljmp
fnsave
push
mov
fs
cmpsb
push
insl
in
out
inc
int
jg
mov
jne
mov
jg
out
pop
jge
mov
popf
repnz
out
mov
fisttpl
lcall
jb
into
and
in
pop
out
mov
sbb
lea
iret
sbbl
jno
jg
sar
or
test
jns
sub
mov
fildll
or
sbb
inc
pop
lock
incl
xor
or
push
push
cli
dec
lcall
std
mov
icebp
or
cld
xchg
inc
insl
dec
aaa
add
mov
jg
call
test
jo
adc
repz
push
es
leave
add
decl
dec
add
jl
lds
lock
packssdw
jae
or
pop
xor
mov
xor
xor
and
xor
or
mov
aaa
int
adc
inc
cmp
repnz
sub
mov
je
test
sbb
in
mov
call
and
pop
inc
in
cmp
jnp
sahf
sbb
or
incl
push
lret
xor
loop
nop
adc
faddl
jg
das
shrl
fistpll
loopne
cmp
mov
lahf
add
jnp
nop
dec
mov
lock
ljmp
icebp
or
lea
inc
fistpll
loopne
or
pop
push
inc
dec
outsl
std
ljmp
or
mov
pop
lret
cmp
jbe
jp
pop
adc
fucomip
das
icebp
mov
hlt
cmp
pop
and
jmp
rclb
call
bound
jnp
push
iret
outsb
imul
sahf
sbb
xor
mov
iret
mov
lods
pcmpeqb
and
push
shl
xchg
dec
mov
jnp
pop
cli
das
lock
or
test
push
ret
in
or
lret
cmp
std
incl
adc
mov
adc
aad
call
dec
inc
clc
lea
call
lcall
call
and
sahf
xchg
jo
and
or
mov
add
or
jp
and
mov
out
sub
mov
clc
or
repnz
popa
popa
cmc
fwait
lods
push
dec
in
repnz
push
xlat
clc
clc
or
pop
ds
adc
js
sar
mov
outsl
push
pop
sbb
movsl
scas
adc
nop
outsl
cltd
dec
mov
popl
jl
call
nop
pop
or
inc
cmp
mov
cmp
cmp
fisttps
clc
pop
add
test
cmp
hlt
or
mov
mov
mov
or
mov
lcall
aam
ds
jmp
insl
sub
decl
add
sub
cmc
sub
aad
jns
sub
sbb
cld
add
pop
push
or
jae
mov
xlat
xor
fsts
dec
adc
repz
push
fsts
aas
aaa
shlb
sub
adc
div
dec
outsl
call
mov
cmp
rcrl
icebp
idiv
testb
inc
dec
push
or
inc
sbb
and
pushl
aaa
dec
sub
cmp
dec
cmp
pop
lods
jbe
sub
push
pop
loopne
ljmp
dec
inc
sub
inc
popf
push
inc
cmp
jno
inc
inc
sarl
xchg
fimuls
lret
fcompl
mov
decl
cmp
mov
lret
add
and
dec
xchg
cmp
fs
push
dec
sarb
jns
pop
jp
pop
stos
cmp
into
adc
jnp
cmpsl
sbb
out
mov
call
loop
call
sub
sbb
shll
fs
mov
bound
or
jg
test
add
out
ja
ja
pop
enterw
outsl
aad
decl
js
sub
int
cmp
lock
hlt
call
cmc
adc
jno
push
faddl
rolb
mov
xor
and
cmp
or
mov
mov
adc
add
roll
mov
sub
mov
decl
sbb
or
pop
push
add
pop
lds
fildll
mov
out
loope
adc
sbb
int3
in
and
je
push
xchg
cmc
inc
sbb
neg
sbb
push
jle
hlt
sub
fbld
push
leave
sbb
xor
call
push
fstl
loopne
stc
sub
cld
test
add
inc
sub
or
cmpb
sub
jnp
dec
adc
cmp
fists
pusha
mov
mov
push
in
movsl
or
mov
movb
pop
mov
cmc
add
mov
imul
mov
gs
test
movsl
jne
adc
cmp
mov
jb
mov
mov
dec
push
aas
shll
sbb
ljmp
aas
jle
pop
shrw
repnz
int
jae
incl
fsts
xchg
test
shl
or
stos
dec
test
and
clc
mov
int
xchg
mov
in
les
push
sub
out
jecxz
pushl
enter
add
mov
pcmpgtw
push
nop
or
icebp
adc
ljmp
cmp
mov
enter
mov
push
inc
mov
push
nop
inc
aaa
pop
in
push
or
sub
sbb
idiv
ret
iret
ret
fwait
jecxz
dec
xchg
add
lock
inc
push
add
cmpl
loopne
jp
push
sbb
decl
cmc
or
inc
add
jns
fwait
cmc
mov
cmp
mov
mov
mov
inc
jno
and
jle
xchg
ja
mov
mov
repz
lahf
pusha
and
cmpl
sub
sub
or
lea
decl
pop
aaa
mov
pop
lret
int3
popa
shll
push
xor
push
pop
clc
xor
mov
incb
das
mov
sub
push
mov
call
jle
mov
les
dec
xchg
jmp
in
in
stos
jg
fistpll
cmc
cmc
stc
push
or
std
std
add
call
ljmp
std
push
add
int3
icebp
add
jl
pop
fisubs
xor
test
sbb
and
gs
sbb
inc
or
cli
call
add
into
adc
cld
fisubrs
dec
ljmp
cld
jmp
ja
xor
cs
sbb
fdivrs
or
mov
sar
push
push
pop
hlt
push
mov
and
sub
xor
jno
mov
fistpll
fidivrs
shlb
or
dec
mov
imul
jo
push
stos
sub
stos
xchg
xchg
and
sbb
push
in
mov
adc
xlat
rorl
or
mov
call
call
pop
addr16
xchg
imul
int3
mov
les
scas
cmpsl
jg
dec
or
call
stos
loope
lds
sbbl
inc
inc
movb
fbstp
inc
popa
adc
adcb
push
loop
or
test
call
xchg
sbb
and
inc
push
and
scas
bound
xchg
sub
xchg
adc
es
or
xor
ss
jg
or
sub
add
daa
ud2
jg
stos
mov
sbbl
test
in
lcall
cmp
fiaddl
std
inc
mov
sub
cmp
pop
push
mov
orl
jge
jg
inc
stos
jo
inc
scas
rcrb
lock
lea
pop
popa
nop
sub
lcall
je
cmpsb
imul
jo
adc
div
sub
cmp
scas
jno
xor
loopne
inc
push
les
lret
or
jg
fistpll
mov
call
mov
mov
sub
ss
cwtl
popa
pop
out
adc
incl
roll
in
xchg
xor
and
xor
enter
addb
inc
je
jecxz
mov
gs
sub
adc
pushf
out
cmc
sar
test
lret
mull
push
lods
fdivrp
cmp
or
push
xor
ror
pop
sub
cmp
or
or
lret
xor
sbb
cmp
cmp
jmp
aas
mov
lods
push
ficomps
in
jle
pop
inc
pop
incl
fdivrp
outsl
lret
daa
dec
and
cmpsb
shll
shrl
cmp
inc
inc
push
sbb
pushl
adc
mov
jno
mov
mov
pusha
je
adc
inc
jae
inc
rorb
xor
push
jl
or
pop
clc
decl
hlt
sub
repz
ds
sub
or
aam
mov
ljmp
pop
or
lret
push
sub
push
xchg
xchg
dec
pop
ret
sbb
jmp
mov
pop
and
push
rolb
cmpsb
push
mov
mov
or
loop
push
enter
inc
lcall
rcrb
imul
and
out
inc
inc
pop
call
mov
ror
lcall
cld
xor
fistl
ds
hlt
mov
popa
into
fcoml
sub
sbb
testb
in
and
test
mov
das
icebp
pushl
shl
add
leave
ffreep
cmp
lret
sbb
idivb
cli
cmp
dec
fmull
sub
add
fimuls
lret
jecxz
outsl
cmc
lcall
arpl
lock
or
mov
push
or
int3
icebp
ljmp
inc
fsubl
cmp
icebp
push
dec
sbb
mov
mov
decl
jg
add
sbbl
fstpl
cmp
dec
fsubs
pop
xchg
inc
and
add
jb
test
decl
cmp
sbbb
pop
inc
aam
rcr
mov
pushl
clc
dec
jno
pushf
xchg
stc
lea
jno
inc
lods
push
popa
push
xchg
fildl
lret
adc
incl
ja
push
inc
xchg
and
and
popa
xchg
push
addr16
js
mov
mov
push
dec
popa
sub
sbb
into
mov
call
lods
dec
pop
imul
sub
dec
dec
push
int
rcrb
inc
push
adc
cmp
mov
or
push
or
loop
pop
dec
inc
xor
xor
push
sub
daa
push
adc
pop
or
int
arpl
outsb
cmp
fistps
aaa
into
sbb
mov
cltd
addr16
dec
mov
cmp
and
fucomip
jg
imul
mov
jo
push
hlt
lea
repz
decl
mov
in
push
insb
fldl
or
cmp
lahf
mov
outsl
mov
jmp
xor
call
vshufps
clc
popa
pop
inc
or
jg
es
out
dec
sub
lret
fistpl
dec
cld
incl
arpl
sbb
pslld
sub
mov
incl
mov
push
leave
or
xorb
arpl
inc
xor
ljmp
mov
jmp
jno
into
icebp
repz
ds
cwtl
clc
mov
pop
lock
das
hlt
cld
mov
xor
in
mov
cmp
inc
and
mov
icebp
leave
mov
leave
jg
mov
sbb
adc
imul
adcb
incl
jno
imul
inc
cmp
mov
pop
jmp
dec
or
enter
jno
into
xchg
call
sbb
fistl
dec
pop
sub
or
sbb
stc
cmp
aaa
gs
mov
out
enter
aad
in
and
xchg
mov
jg
add
dec
aas
clc
adc
jecxz
cmp
pop
fists
clc
or
mov
jo
cmc
clc
cmpsb
jp
dec
add
lret
and
roll
jg
jg
adc
pop
adc
outsb
mov
lret
cmpsl
xor
sar
outsb
pop
clc
lcall
cmp
push
loopne
sbb
call
fimuls
pop
arpl
and
mov
adc
xchg
je
push
push
lcall
dec
mov
sbb
adc
mov
inc
or
pop
lock
cmp
pop
aaa
push
sbb
fmuls
pop
jno
ds
mov
aad
jbe
push
rorb
outsb
cld
sbb
cmp
sahf
into
and
mov
out
pop
pop
ljmp
jl
fisubrl
loope
int
shlb
decl
dec
insl
fidivl
cmp
xlat
sbb
sahf
jle
and
mov
lea
push
or
pop
push
pop
xchg
sbb
cmp
decb
hlt
cld
lret
mov
ljmp
cld
mov
nop
sub
test
sub
jne
inc
addl
push
sub
inc
push
ret
xor
push
js
stos
push
test
push
mov
adc
sub
sub
testl
lock
stos
ds
pushf
jg
ret
aad
push
mov
adc
aad
cld
inc
jmp
sarl
and
into
xchg
ss
dec
fistl
or
jg
inc
jno
push
gs
inc
frstor
push
out
xchg
inc
lods
push
mov
mov
imul
outsl
inc
dec
mov
enter
lods
inc
pop
xlat
push
inc
xchg
push
addr16
xchg
mov
push
lock
dec
aad
dec
imul
shl
push
adc
xchg
push
out
xor
cld
mulb
cmp
push
test
push
call
lea
insb
push
enter
lods
push
pop
cmp
ljmp
sub
lock
jne
pop
imul
cwtl
mov
jecxz
popf
pop
jecxz,pt
xor
imul
jg
mov
mov
popa
inc
popa
gs
adc
push
call
iret
xchg
sbb
jmp
movb
push
in
inc
push
subl
lret
lcall
cld
jmp
fucomp
mov
inc
iret
dec
decb
inc
inc
pop
mov
push
adc
hlt
mov
ja
inc
or
cmp
jns
call
sbb
adc
jp
xor
fdivrl
inc
sub
sbb
imul
sahf
and
movsl
pop
pop
insl
adc
xor
loope
xlat
pop
jg
add
nop
ljmp
fbld
into
gs
ss
nop
mov
leave
ljmp
adc
into
or
sub
cmp
xor
fistl
xlat
dec
or
push
popf
icebp
lret
cmp
sbb
push
dec
cmp
sbb
mov
xchg
imul
aaa
jnp
js
jge
fucomip
push
jmp
popf
push
jmp
mov
or
jp
dec
xchg
mov
data16
dec
inc
cmpsb
out
pop
adc
sbb
decl
push
push
push
or
es
pop
adc
pop
mov
fistps
push
push
ljmp
decl
pop
fildl
stos
and
mov
xchg
xor
icebp
cli
lret
mov
out
jle
pop
jae
rcrb
jmp
jns
adc
dec
or
dec
out
jg
mov
daa
pop
and
push
rcr
mov
sub
test
in
or
js
and
or
loope
rcll
stos
jecxz
iret
xchg
repz
out
and
jmp
jecxz
insl
mov
stos
or
mov
cmp
rclb
into
call
cli
jg
ffreep
mov
or
iret
bound
jecxz
aaa
ss
adc
dec
ret
aad
or
mov
aam
xchg
in
mov
sub
adc
mov
gs
add
js
incl
mov
pop
enter
add
out
pop
mov
jl
test
lods
or
pushf
stos
cmp
les
fwait
in
pop
mov
or
mov
or
add
mov
or
ret
sbb
fldt
std
pushf
add
jp
je
or
or
insl
jmp
xchg
xor
ds
aaa
aaa
mov
in
sub
int
out
dec
lret
int
adc
andl
mov
mov
jbe
adc
pop
push
cmp
mov
stc
pop
pop
pop
pop
sbb
push
sbb
pop
cmp
push
stc
pop
mov
icebp
sbb
sbb
sbb
sbb
pushf
std
pop
mov
adc
and
orl
adc
repz
mov
inc
and
and
adc
or
out
pop
es
daa
or
sub
or
push
sub
outsl
pop
mov
push
xor
push
sub
test
and
imul
dec
or
or
or
xor
mov
xor
xor
clc
push
xor
stc
outsl
imul
or
push
or
cmp
or
cmp
jg
mov
or
or
push
cmp
cmp
or
fstpl
or
or
or
inc
push
ljmp
insl
inc
add
aam
inc
push
pusha
enter
or
syscall
or
incl
pop
mov
nop
movsl
inc
clc
mov
xchg
jp
mov
and
pop
mov
add
adc
fnsave
jle
and
ljmp
inc
inc
rorb
or
xchg
pop
xlat
aaa
js
popa
or
mov
aas
sbb
push
outsl
cmc
sti
in
pop
std
or
fs
lret
test
lods
addl
mov
fimuls
rclb
or
and
push
test
mov
ds
js
mov
push
call
cmp
sub
sub
adc
xor
outsl
mov
sbb
aas
xlat
sbb
dec
daa
pop
das
xchg
outsl
sub
pop
push
pop
push
xlat
mov
mov
inc
cmp
jg
insb
or
aad
xor
sub
inc
jno
jne
stc
idivl
inc
cmpl
sub
out
sbb
cltd
sub
cmp
sbb
cld
repz
cmp
sbb
repz
mov
leave
orl
cmp
xor
sub
rcll
ljmp
and
sbb
pop
xchg
js
jecxz
jo
push
icebp
xchg
sub
out
adc
faddp
mov
cld
mov
adc
push
adc
insl
pandn
lods
jle
jbe
adc
js
jae
icebp
into
jge
push
addl
push
pop
jge
inc
test
pop
mov
inc
pop
sahf
loop
call
or
incl
jns
mov
mov
xchg
xchg
stos
sarb
divb
lods
push
push
pop
mov
mull
lods
int3
adc
decl
negl
mov
int
cwtl
and
sub
xor
mov
fnstcw
in
jmp
es
xor
jmp
into
cmp
cmc
add
xchg
ss
repnz
call
pop
cli
fistps
xor
mov
xorl
and
outsl
pushf
push
cli
and
pop
mov
pop
jle
jno
sbb
scas
ret
stos
xchg
imul
int
cltd
sbb
cltd
or
cmp
loope
add
in
mov
cmp
std
add
stc
jmp
sbb
sbb
push
mov
testb
cmp
cld
xor
addr16
mov
mov
push
pop
outsb
or
lret
pop
cld
jae
xchg
push
out
or
pop
cli
incl
or
adc
pop
xor
and
pop
xchg
dec
rcrl
sub
mov
int
sbbl
cmpsl
jp
push
inc
push
xor
push
clc
pushl
mov
loope
fdivs
sti
xor
in
cmc
aam
cmpsl
incl
out
js
popa
push
inc
mov
das
scas
sbb
inc
add
mov
sbb
ljmp
lock
fcompl
push
adc
inc
push
jp
jl
adc
ljmp
fisttpll
xchg
in
mov
movhps
push
fdivs
or
sub
adc
insb
setl
ret
cmp
stc
pop
std
add
add
fildll
or
sub
xor
inc
sbb
pop
and
and
sti
jg
into
sub
sub
cwtl
mov
cmovne
cmp
inc
xor
dec
mov
pop
outsl
in
push
mov
dec
jbe
jns
pop
in
mov
ljmp
jmp
movsl
xor
or
pop
outsb
aaa
jg
pop
adc
pop
push
dec
addl
sub
clc
mov
pop
popf
pop
cmp
adc
pop
movsl
pop
test
gs
outsl
fsubl
pop
mov
adc
or
out
movsl
xchg
incl
lds
or
adc
fildl
adc
or
or
or
cmp
dec
mov
decl
das
pop
test
les
xor
xchg
inc
pop
stc
mul
sbb
xor
cmp
pushf
sbb
and
push
sub
xor
lods
ljmp
mov
cmp
fwait
mov
adc
jmp
jg
aas
push
pop
popf
and
les
inc
cltd
sub
jne
sahf
xor
out
into
jne
xlat
jle
pop
jo
adc
push
mov
pop
das
and
aaa
pop
fidivrs
pop
mov
cs
std
imul
gs
sbb
pusha
subl
or
or
xor
nop
or
into
cmp
dec
or
adc
das
hlt
call
pop
adc
pop
outsl
aas
dec
test
cltd
insl
jns
xchg
inc
jno
mov
aaa
cli
push
insb
cmp
jne
mov
insb
movsb
jecxz
jne
ljmp
xchg
xor
mov
cmp
in
leave
mov
push
mov
xor
jns
cmp
decl
xor
adc
ss
or
or
decl
movsl
or
movsl
or
mov
daa
loop
or
mov
js
decl
pop
in
sbb
mov
mov
ds
cli
mov
mov
cmp
ror
sarl
and
incl
outsl
aad
mov
jg
and
cli
ljmp
hlt
and
and
stos
push
jge
nop
jns
pop
aad
rorb
mov
fildll
adc
not
xor
inc
adc
and
stos
sbb
lcall
jmp
clc
and
xor
sbb
mov
push
mov
or
pushl
jo
jbe
pop
arpl
xchg
and
test
in
or
mov
scas
imul
pop
cli
cmp
fisttps
adcl
movsb
dec
mov
sub
pop
popa
rcll
decl
sbb
inc
or
sbb
in
outsb
and
loope
sub
push
xor
cltd
nop
decl
loope
mov
aaa
xor
call
loope
decl
aas
scas
enter
adc
in
or
in
or
push
jle
out
or
xchg
aaa
cli
incl
lds
insb
add
and
int3
es
lock
inc
sub
inc
jns
daa
dec
int
arpl
lods
xchg
pop
loope
mov
or
fmull
and
lahf
call
or
pop
inc
outsb
pushf
fistpl
pop
enter
dec
xchg
or
ret
aas
addb
add
imul
dec
into
cwtl
sbb
dec
ja
aaa
rcrl
lock
sub
orl
xor
inc
popa
or
jmp
dec
jge
repz
popa
cmp
insb
jmp
pop
cmp
mov
cmp
adc
and
xchg
mov
push
sbb
aas
rclb
lea
test
icebp
call
or
mov
lods
arpl
xor
xchg
push
adc
or
push
push
aaa
mov
ljmp
push
adc
pop
sbb
pop
mov
popa
or
imul
mov
aaa
dec
dec
fwait
adc
cwtl
or
mov
call
xchg
and
mov
sbb
pop
or
mov
lret
sbb
decl
sarb
lea
push
sbb
push
or
mov
cmc
jmp
mull
inc
fadds
clc
or
lahf
mov
mov
das
out
sti
and
adc
mov
decb
lea
mov
add
pusha
sbb
popl
mov
xchg
sub
mov
dec
lahf
or
adc
xor
jg
pop
loopne
or
pop
imul
xchg
pop
mov
push
ljmp
out
dec
mov
jecxz
mov
adc
jno
and
sub
fbld
out
xchg
loop
test
sbb
jg
aad
xchg
clc
out
sbb
push
cmpsl
mov
cmc
and
jg
inc
stos
and
int3
mov
cmp
push
call
mov
daa
out
inc
test
arpl
xchg
sub
or
jb
outsl
lock
ljmp
das
or
xor
or
mov
clc
outsl
icebp
icebp
popa
in
mov
pop
mov
adc
cmpsl
mov
idivb
push
mov
out
inc
sub
mov
add
and
shll
jno
push
ret
pop
les
lahf
shll
enter
fists
or
leave
lret
loop
push
xchg
int3
or
cmpsl
iret
icebp
test
cmp
rclb
outsl
cmc
sarl
aam
int
adc
or
addr16
mov
xor
ficoml
daa
jl
fucom
faddp
dec
fstpt
cld
or
aad
loope
inc
mov
in
xchg
mov
out
incl
mov
hlt
test
ljmp
adc
in
out
cmpsl
mov
and
mov
lock
lret
cmc
icebp
jno
repnz
mov
repz
call
dec
xchg
add
sub
or
stc
push
cli
popf
cmc
xchg
insb
sub
add
xchg
cli
fildl
adc
or
jae
cmp
inc
ret
lods
xor
out
xchg
add
sti
imul
ljmp
push
cwtl
and
or
in
mov
or
add
jne
adc
adc
mov
sbb
mov
pop
and
nop
repz
cmpsl
sbb
sbb
mov
clc
adc
or
movsl
fstpt
lahf
push
pushl
cmp
and
and
xchg
ja
and
lods
cmp
loope
scas
addr16
loope
sub
mov
cs
mov
sbb
fdivr
jp
xor
shlb
sub
outsl
icebp
lods
ds
push
or
jle
outsl
cmp
ljmp
cmp
imul
pop
ds
dec
inc
adc
loopne
rolb
or
incl
cld
outsb
jnp
inc
adc
xor
dec
dec
or
in
adcb
dec
arpl
dec
mov
mov
out
cmpl
push
push
push
push
pop
push
shl
adc
push
pop
inc
pop
adc
mov
fistpl
aaa
inc
pop
or
scas
pop
pop
jp
inc
pusha
jae
and
arpl
lock
incl
gs
dec
addr16
ret
hlt
push
imul
mov
cld
mov
adc
jno
pop
pop
jae
je
jne
clc
das
and
ja
js
jns
jp
jnp
mov
sbb
jecxz
loopne
and
jg
cmp
lock
adc
cmp
jg
and
test
xchg
inc
test
pop
mov
fimuls
pop
cld
mov
mov
cwtl
repz
nop
pop
push
aaa
dec
mov
popa
xchg
jns
pop
nop
xchg
push
sub
pop
test
xchg
xchg
cmp
pop
jno
popa
sub
mov
adc
ret
cmpsl
lahf
mov
mov
imul
jmp
cmpsl
ret
or
test
pusha
stos
lods
mov
add
scas
sahf
mov
movsb
xchg
shrb
jne
pop
push
cmp
cmp
ja
js
mov
jp
cmp
decl
push
jge
in
out
mov
addb
pop
cmp
test
icebp
test
xchg
mov
xchg
lcall
repnz
xchg
add
mov
pop
or
adc
hlt
mov
or
decl
mov
test
xchg
pop
xchg
xchg
mov
jmp
or
lcall
daa
cwtl
popf
or
mov
aaa
lds
mov
push
mov
nop
cmpsl
mov
test
mov
stos
jo
lods
xchg
das
pop
cli
mov
inc
repz
mov
jl
repz
mov
clc
pop
incl
mov
inc
mov
icebp
ss
mov
or
mov
xchg
adc
pop
push
mov
ret
xchg
repz
mov
popf
pop
cmp
cmpsb
ljmp
leave
mov
lret
jo
nop
int
jl
jmp
mov
rcll
add
neg
dec
sahf
daa
mov
cltd
mov
pushf
or
cltd
ret
mov
fisubl
fcmovnu
push
pushl
lea
push
in
loopne
xor
ds
fidivs
jecxz
in
in
fcmovbe
pop
and
xchg
push
ljmp
mov
in
jmp
cmpsb
out
add
lock
jb
mov
dec
pushf
lahf
xor
sub
pop
mov
clc
sbb
jp
aaa
cmp
cmp
adc
fisubrl
icebp
outsl
sbb
mov
ds
das
bound
shll
cmp
ss
xchg
cmp
ja
insb
push
dec
or
dec
ja
dec
push
call
push
int3
mov
out
jge
or
xor
push
and
pop
adc
pop
pop
repz
mov
pop
pop
aam
int3
shlb
negb
popa
mov
popa
fs
movsl
lods
mov
int3
cmc
arpl
xchg
rolb
push
xor
jp
push
mov
cmp
dec
mov
adc
pushl
xchg
popf
pop
popf
icebp
pop
dec
sbb
and
mov
mov
mov
or
lea
xor
loope
and
dec
mov
clc
jb
push
jmp
push
add
icebp
pop
ljmp
pop
xchg
pop
mov
dec
std
pop
faddl
es
push
fcmovnb
or
incl
lds
sti
das
rorb
mov
dec
cld
stc
mov
hlt
icebp
cmp
push
mov
mov
sbb
std
sub
mov
mov
ljmp
sub
inc
add
cmp
xchg
inc
ret
and
dec
push
push
fcmovnbe
or
sbb
shl
push
cmp
adc
sub
cmp
or
sub
xchg
jmp
mov
mov
push
or
sub
js
and
jecxz
lcall
adc
vphsubbw
sub
orb
jge
jno
and
mov
inc
rcrl
jno
sbb
sti
es
push
lock
lcall
lock
into
and
jl
lock
cmp
sti
decl
repz
lds
or
fsubs
jmp
adc
push
js
sub
mov
jmp
xchg
imul
inc
inc
imul
test
mov
pop
xchg
push
mov
iret
inc
icebp
push
ljmp
push
mov
mov
add
adc
outsb
imul
pop
mov
xchg
pop
clc
mov
cld
je
or
std
cmpsb
popa
xor
pushl
adc
cld
and
pop
nop
imulb
mov
pop
nop
lret
arpl
or
pusha
and
xorb
xchg
mov
jnp
jns
jne
push
outsb
arpl
push
aas
dec
xor
xchg
aam
jmp
mov
inc
add
push
sub
aam
inc
popf
sbbl
jno
add
xchg
outsl
cld
nop
repnz
pop
sub
sbb
imul
lods
incl
mov
fs
addl
fnstsw
jl
mov
and
jo
xor
nop
insl
inc
pop
rcll
hlt
jnp
adc
jne
aam
mov
pop
inc
and
adc
jge
repz
leave
push
leave
pushl
imul
pusha
cli
adc
lods
cmp
cmp
mov
daa
insl
pop
outsl
adc
mov
adc
or
aad
jle
hlt
mov
pushl
movsb
addl
fimuls
xor
mov
das
std
or
mov
and
push
call
adcl
nop
pop
sbb
jg
mov
cmpsl
add
arpl
popa
in
pop
mov
decl
dec
or
or
jecxz
insl
out
or
xor
rcll
push
inc
fists
jg
in
jmp
outsl
mov
adc
xchg
pop
pop
shlb
dec
std
in
xchg
insb
jno
pushl
cld
frstor
lds
int3
xchg
sub
sbb
sbb
faddl
outsl
adc
jmp
aam
movsl
adc
sbb
pushl
mov
xor
inc
sahf
xor
jg
sbb
dec
jae
mov
std
adc
xor
mov
ficomps
jmp
andb
fs
data16
sbb
enter
adc
xor
gs
mov
sbbl
xor
sbb
inc
fsub
push
mov
push
dec
enter
lcall
scas
shlb
enter
arpl
pusha
enter
cmpsb
and
lds
pop
pop
sub
push
sub
pop
sti
sbb
dec
test
mov
sub
rcr
out
loop
pop
pop
fsubs
in
pushl
imul
pop
push
bound
hlt
push
pop
pop
sub
or
sub
lods
aaa
decb
jl
cmp
or
std
mov
sub
mov
adc
push
jae
in
fistl
xorl
jp
push
arpl
cld
das
std
pop
std
dec
push
pop
outsl
imul
lock
ljmp
jp
cmp
jp
sbb
testb
pop
xorl
mov
incl
mov
add
pop
mov
push
inc
nop
incb
cmp
mov
xchg
jnp
jnp
jno
lret
pop
mov
es
mov
mov
cmp
sub
sub
sub
sub
fidivs
sub
jp
decl
pop
addr16
dec
inc
and
jnp
mov
or
or
mov
cmpsl
and
mov
dec
outsl
lods
xor
or
inc
inc
dec
sub
mov
test
or
sbb
test
adc
cmc
push
cmp
cli
lret
incl
jno
jmp
cmc
adc
lcall
mov
xchg
or
cmp
movsb
popa
adc
xor
push
sbb
cmp
adc
int
fsubs
adc
jp
adc
jge
sbb
sub
pop
jns
sbb
pusha
push
mov
jno
xchg
ljmp
mov
imul
xchg
dec
add
adc
push
push
push
es
call
js
inc
pop
and
icebp
mov
lcall
mov
jo
out
leave
mov
inc
inc
dec
inc
lret
cmp
in
inc
iret
and
fsubrs
popa
pop
outsl
mov
scas
aad
pop
and
lahf
rcrb
and
push
inc
fcmovnbe
jg
loop
jle
jae
jl
repnz
addr16
lcall
cmp
inc
inc
lret
cld
lret
sbb
dec
gs
test
jg
pop
ja
xchg
sub
cmp
mov
cwtl
in
imul
hlt
lods
rcl
inc
sbb
rcl
jno
mov
repz
mov
push
jp
ss
setb
rorl
or
mov
and
lcall
xchg
add
adc
pop
out
or
repnz
dec
sbb
fidivrl
icebp
adc
cmp
cmpsb
inc
mov
sbb
enter
inc
jg
mov
xor
xchg
push
testb
fisubrs
pusha
das
pusha
mov
mov
mov
xor
or
xor
mov
lods
mov
mov
dec
and
xchg
inc
iret
popa
inc
add
and
dec
pop
movsl
ss
out
dec
hlt
mov
es
call
repz
xlat
pop
push
push
sub
cwtl
push
sbb
xchg
pop
or
cmp
call
and
xor
div
loope
pop
xchg
imul
or
lahf
inc
ljmp
push
sub
or
inc
mov
dec
mov
push
xchg
adc
nop
fcmovu
xor
outsl
dec
adc
pop
loop
adc
push
xchg
sbb
cmp
incb
cmp
ss
fstpt
xor
jnp
cli
call
adc
mov
pop
test
lds
cld
fbstp
lods
mov
or
ret
movl
sub
outsl
and
lds
mov
add
out
aas
push
addb
int
iret
rcl
rcl
cld
stc
repz
xlat
fcomp
fcmovu
loopne
loop
pop
popf
aas
jg
in
out
jmp
ljmp
push
hlt
mov
nop
neg
push
xlat
imul
push
incl
mov
push
add
or
lret
pop
decl
jne
jnp
popf
ret
jp
imul
inc
fidivrl
call
cli
or
jecxz
mov
sbb
xchg
inc
pop
cld
push
rolb
xor
lret
pshufd
scas
insb
push
lcall
sbb
pushf
loope
push
jbe
and
mov
or
in
mov
jg
std
repnz
adcl
rclb
cltd
adc
mov
cmp
fucomip
ljmp
lret
stos
fistl
mov
xor
xchg
call
out
push
lock
push
dec
inc
insl
dec
xor
push
mov
mov
push
adc
inc
dec
adc
xchg
ss
mov
leave
dec
jmp
mov
popf
mov
into
sub
pop
sbbb
nop
js
decl
cli
mov
cmp
and
push
mov
test
rorl
sub
or
call
shll
cmp
rolb
call
adc
cmp
outsl
pushl
cmp
and
cmp
pusha
pop
pop
pop
pushf
cld
sahf
jmp
push
cmp
push
movsl
jno
push
les
xor
sub
aad
push
pop
or
mov
push
jp
pop
outsl
fistpl
mov
insb
cmpsl
pop
pop
inc
cmp
adc
fisttps
loop
adc
cmp
pop
pop
pop
push
dec
and
jecxz
mov
lods
clc
call
cli
lock
pop
aas
dec
int
xchg
incl
cmc
lcall
std
add
test
jns
xor
push
push
cld
xor
and
mov
xchg
call
dec
out
int
setge
call
cld
fcoms
mov
nop
add
scas
push
add
je
dec
aas
mov
push
dec
fwait
ds
test
and
adc
and
pop
cli
call
in
scas
xor
out
rcrb
sbb
test
ljmp
mov
stos
cmp
or
sbb
scas
cld
and
lahf
decl
or
sbb
pop
sbb
fidivl
or
sbb
es
mov
push
jnp
jg
sub
mov
sub
sub
mov
test
stos
mov
int
bnd
pop
inc
rorl
pop
stos
sub
push
jne
cmpl
jmp
xchg
or
hlt
into
cs
mov
mov
stc
pop
ds
inc
dec
jge
or
imul
sbb
loope
nop
shll
add
cmp
loop
outsl
jg
fcoml
mov
std
mov
sub
push
xor
addr16
add
dec
xlat
negb
pop
loop
or
inc
xor
test
push
mov
xor
inc
icebp
aaa
ja
jmp
jmp
stos
adc
mov
pop
ds
push
dec
sub
xor
fmull
add
jg
pop
dec
outsl
sbb
into
jl
sbb
frstor
mov
data16
ss
outsl
jns
jge
lcall
push
adcl
jae
sbb
sub
or
stos
xor
lahf
ret
cmp
push
mov
and
cs
rcr
xor
cmpsb
jg
je
sub
inc
dec
or
in
addl
or
lcall
cmp
lcall
mov
mov
pop
rcrl
or
jp
int
and
xchg
adc
test
jmp
or
ffree
nop
shr
or
xor
insl
sbb
es
cwtl
call
pop
lea
rcr
sub
pop
insl
sbb
aam
jp
out
clc
lds
gs
movsl
dec
jno
ret
add
hlt
leave
and
roll
jle
dec
mov
push
inc
jp
mov
sbb
sbb
dec
sub
or
or
lea
ret
dec
pop
dec
scas
push
adc
call
or
loop
pop
ficomps
add
sahf
inc
mov
xchg
into
imul
or
sub
pop
pop
sub
js
ds
lock
lock
jno
call
js
in
pop
push
xor
or
hlt
mov
idiv
pop
ljmp
leave
adc
in
stos
pop
cmp
jne
lret
mov
movzwl
outsl
icebp
sub
outsb
adc
pop
xchg
sti
inc
add
ud0
mov
add
movsl
sahf
cld
add
push
push
dec
push
jp
push
inc
cmpsl
jns
bound
sbb
mov
mov
insb
movsl
jmp
insl
insb
push
lcall
decl
or
loop
or
fstps
inc
add
ljmp
adc
dec
ss
nop
ds
lods
jmp
insl
add
adc
pusha
out
je
lcall
jg
or
jne
fs
and
push
cmpsl
leave
nop
ljmp
pop
jmp
icebp
test
repnz
popf
inc
jne
sbb
dec
dec
xor
add
shrb
lods
inc
push
addl
pop
add
divb
nop
cli
sbb
decl
test
jno
rcrb
outsl
inc
jle
xor
push
add
test
insl
lock
rep
and
js
sub
clc
mov
add
iret
xchg
inc
sbb
rcr
rcr
das
sub
add
jg
aaa
lods
jbe
mov
sbb
cli
jne
in
push
mov
dec
cmp
or
adc
cmp
sbb
mov
dec
xchg
pop
ljmp
insb
mov
or
mov
adc
jno
xor
decl
add
out
add
lret
cld
neg
insl
sub
das
pop
cwtl
mov
ret
out
pop
cmp
rcll
repz
or
leave
hlt
or
push
lahf
mov
mov
mov
jo
cwtl
pop
jp
add
pop
orb
test
inc
decl
and
xchg
xor
decl
hlt
adc
popa
inc
jle
inc
mov
or
dec
clc
test
pushl
cmp
mov
pop
loop
inc
aaa
cmpsb
enter
cmp
pop
decl
loope
mov
sti
fwait
mov
sub
push
xor
jo
pop
test
imul
xor
jo
push
jmp
mov
inc
pop
cmp
cmp
incl
mov
in
jecxz
adc
inc
xchg
sub
call
lock
add
jp
push
outsl
xor
inc
aad
mov
cmp
fisttpll
std
ljmp
aas
sub
cmpsb
fldenv
in
scas
ds
in
das
std
cmp
dec
cmpxchg
push
aaa
test
int
sub
int
ljmp
push
lret
lret
push
push
imul
insl
shll
inc
call
jge
sbb
aaa
movsl
scas
fiaddl
pop
not
daa
push
insl
hlt
jg
lods
sbb
cmpsb
nop
jns
lods
icebp
sbb
pop
xchg
lcall
inc
xor
stos
sub
outsb
lods
data16
mov
daa
adc
push
repz
lahf
xchg
ljmp
adc
jg
fldt
push
addr16
mov
push
mov
add
dec
incl
cmp
mov
shl
jo
add
ljmp
loopne
inc
jbe
jae
lahf
or
inc
dec
lods
popf
incl
dec
fs
movsl
enter
pop
mov
or
std
xor
dec
mov
test
inc
js
and
js
adc
aad
dec
nop
std
test
and
std
enter
decl
outsl
adc
test
outsl
fnstsw
mov
insl
pop
xor
sti
cmpl
rcrl
aaa
push
mov
jle
mov
sbb
movsl
lds
fcmovnbe
lea
dec
dec
mov
fsubl
cmp
js
pop
ds
xlat
in
insl
pop
jno
xlat
jl
push
mov
inc
js
xchg
inc
sub
imul
cmc
inc
dec
cltd
xchg
mov
js
xor
sbb
xchg
movsl
sbb
divl
push
cmp
add
dec
cmpsb
mov
test
outsl
hlt
das
icebp
jp
dec
or
add
enter
notl
fistpll
decl
and
data16
cli
test
push
jns
jg
sti
adc
pop
out
or
cmp
cli
inc
mov
jmp
sub
fs
popf
outsb
adc
dec
icebp
nop
or
lea
add
lahf
aaa
pop
cmp
mov
and
xchg
roll
lds
insb
xchg
or
mov
popa
enter
cltd
ret
mov
or
aas
pushl
jns
jge
test
stc
iret
lahf
cltd
popf
mov
mov
jmp
xor
fistpll
aad
pop
fstpl
pop
pop
mov
in
js
roll
outsl
or
sub
xchg
xchg
or
dec
lret
or
and
in
clc
in
test
sub
cmp
cmp
dec
dec
ss
jmp
cld
inc
push
push
pop
pop
xchg
popa
mov
mov
sti
imull
fisttpll
or
dec
test
inc
cmp
cmp
lods
and
or
sbb
in
decl
adc
testl
and
dec
notb
test
aaa
clc
mov
cmc
mov
or
mov
mov
cld
xchg
stos
xor
cmp
aam
or
rcrb
mov
call
rol
lds
out
mov
pushl
fs
pusha
xchg
mov
subl
and
or
sar
ljmp
insl
sub
jae
in
mov
icebp
xrelease
stos
push
call
clc
jno
fcoms
dec
ja
or
push
mov
inc
push
pop
loop
pushl
dec
push
xor
cmc
ret
aaa
xchg
test
jmp
xchg
adc
ret
les
jmp
mov
int
mov
jmp
hlt
jge
ja
pushl
inc
add
lock
jae
cmc
pop
insb
insl
aad
add
movsl
mov
insl
xchg
push
insl
adcl
cmp
jbe
cmp
pop
xor
movsb
add
sub
mov
cltd
sbb
mov
dec
cld
adc
or
mov
shll
xor
out
stc
add
mov
sub
aaa
push
or
inc
dec
push
pop
popa
adc
ljmp
cmp
jbe
pop
in
fmuls
es
cmp
std
daa
xchg
inc
icebp
out
loope
jg
dec
lds
adc
lds
out
fcmovbe
and
jmp
and
xchg
and
and
loope
sbbl
add
jp
sub
mov
test
dec
fwait
inc
adc
es
and
in
cmpsl
imul
cmp
dec
sub
hlt
jno
or
add
fsub
enter
fsubr
xchg
xchg
jg
adc
ljmp
jno
std
inc
sbb
jns
ja
sbb
inc
call
jg
add
mov
clc
test
or
mov
ljmp
sti
cmp
xor
jp
mov
adc
scas
pop
adc
inc
mov
lock
fbld
add
xchg
out
in
out
ljmp
aad
lahf
mov
inc
mov
adc
add
ret
shr
or
mov
je
jns
out
stos
add
jo
testl
mov
push
popf
mov
fucom
lret
pop
fucom
divb
inc
aam
pop
in
sub
shl
mov
pop
std
cld
fisubs
inc
jp
dec
or
jge
or
xor
mov
mov
repz
mov
data16
call
jp
push
add
xchg
xor
mov
pop
addr16
incl
jb
pop
pop
jno
out
cmp
mov
xacquire
movsb
xor
call
pop
sbb
testb
or
or
sbb
shrl
in
adc
call
jp
mov
sub
popa
test
scas
dec
cmp
pop
xor
repz
pop
insl
daa
stc
gs
jmp
pop
movsl
and
int3
inc
inc
add
nop
int3
cmp
shll
mov
test
fbstp
mov
testb
push
mov
ss
cmp
jb
xor
mov
in
xchg
xchg
jno
dec
adc
lock
adc
mov
push
lcall
ret
cmp
push
out
nop
fwait
sbb
mov
bnd
ret
and
mov
loopne
ret
aam
out
cld
das
hlt
and
add
pop
dec
dec
test
lahf
dec
fsts
jmp
mov
push
push
jge
lods
and
mov
mov
nop
push
mov
cmp
or
loopne
and
icebp
icebp
xchg
repz
pushl
push
sbb
sahf
jge
daa
add
sbb
lret
jno
loop
mov
jl
andnps
inc
popf
addb
inc
and
adc
out
mov
jmp
sbb
int3
inc
adc
inc
adc
es
and
adc
sti
mov
decl
jle
nop
push
adc
jl
shll
in
adc
pop
dec
jno
or
mov
inc
sbb
in
nop
push
cmp
jno
xor
ret
pushl
sbb
les
jge
fstl
and
addr16
jmp
xchg
sahf
icebp
enter
mov
imul
add
xor
sar
call
inc
int
and
pop
and
pusha
scas
das
inc
mov
ret
push
aad
call
clc
mov
jne
movsl
mov
mov
lods
xlat
int3
xchg
pop
fwait
sbb
ljmp
or
scas
inc
fwait
roll
lods
jmp
sub
dec
cli
jbe
jne
cmp
shrb
and
mov
out
push
mov
add
mov
adc
std
sub
pop
mov
test
sub
jns
sti
mov
or
ret
pop
or
jmp
cmp
cmc
mov
xor
xor
pushf
jl
push
pop
cmp
or
cmp
cmpsb
cmp
insb
sbb
inc
adc
jecxz
inc
adc
fcoms
cmp
jns
decl
sub
push
lret
sahf
lods
into
push
out
pop
mov
prefetchw
cmp
xchg
mov
push
sti
mov
roll
sti
jmp
xor
and
into
aaa
xchg
jno
leave
or
push
xor
or
or
fstp
out
add
test
adc
fstp
sbb
adc
std
cld
cmp
adc
adc
adc
aaa
pop
stc
sbb
hlt
lods
dec
cld
xchg
stos
mov
inc
mov
lcall
mov
pusha
sbb
cwtl
and
mov
or
sbb
jmp
jne
cvttps2pi
sbb
xchg
dec
push
jb
rorb
lret
addr16
jg
xchg
xchg
cmp
mov
and
sbb
or
jmp
pop
xor
mov
lcall
mov
pop
adc
mov
enter
mov
pop
pop
mov
mov
aaa
mov
push
inc
xchg
sbb
cmp
xchg
adc
xchg
lcall
or
dec
hlt
sub
sbb
adc
sbb
mov
incl
dec
or
shll
xor
incl
pop
pop
imul
jnp,pt
xor
data16
push
push
jbe
or
cli
xchg
add
lock
xchg
add
aam
jo
incl
test
inc
aam
push
les
mov
stos
adc
mov
sub
sub
xor
nop
or
sub
addl
pop
jno
push
ret
ds
or
call
push
test
or
pop
or
fists
or
mov
jno
jns
inc
push
nop
push
push
int3
xor
cmp
arpl
nop
push
mov
xchg
xchg
mov
push
mov
push
cmc
incl
jb
sbb
sbb
cld
dec
or
ss
cli
vmread
movsl
xor
call
mov
into
jp
dec
pushf
setno
xchg
out
mov
test
loope
pop
lret
or
push
adc
jp
sbb
xor
sub
xchg
xor
nop
mov
outsl
std
pop
out
pop
pop
mov
decb
nop
aad
pop
mov
pop
ds
shlb
daa
inc
addr16
or
or
jg
mov
and
pusha
add
nop
dec
or
cmpsl
bound
dec
mov
dec
sbb
repz
out
ret
mov
push
inc
adc
mov
fisttpll
lods
push
pusha
and
nop
les
fistps
mov
lods
or
cld
addr16
inc
adc
mov
pop
js
lods
incl
inc
ds
inc
dec
push
out
out
sub
jns
and
adc
dec
and
loopne
mov
je
jnp
aad
inc
fadds
add
aad
fwait
rcrb
call
lret
xor
stc
push
aam
dec
ja
gs
call
fsubrl
push
or
jle
les
in
js
push
fisttps
scas
lret
cmp
pusha
hlt
mov
cld
sbb
or
insb
inc
stc
sbb
push
fsts
out
out
in
cwtl
mov
or
iret
inc
mov
xor
jnp
mov
mov
outsl
adc
mov
add
ljmp
pop
mov
mov
inc
cmp
or
jns
adc
imul
decl
movsl
cmpsb
jecxz
cld
mov
test
lret
push
push
repnz
pop
dec
mov
daa
ljmp
cmpl
inc
bound
repz
or
scas
mov
sarb
test
or
dec
cmp
jb
jg
mov
xor
out
add
inc
dec
cld
inc
xchg
xor
dec
nop
outsl
add
and
or
jp
nop
std
aaa
cmp
jecxz
fisubl
inc
pop
test
incl
sub
in
outsl
sub
add
dec
pop
lds
call
fidivs
insb
dec
lea
or
imul
outsl
mov
inc
xor
add
lods
mov
or
push
mov
cwtl
inc
mov
jns
nop
sbb
xchg
jmp
jns
mov
rolb
jp
mov
pop
in
or
test
or
dec
arpl
call
jp
pusha
stc
jecxz
fwait
scas
jae
mov
sbb
ljmp
and
lock
or
outsb
push
and
sbb
gs
and
pop
add
mov
stc
adc
cmpsb
cltd
lods
lock
add
icebp
scas
push
iret
ds
lds
sub
lcall
mov
or
pop
xor
jp
xchg
clc
in
adc
idivb
stc
add
and
xchg
cmp
pop
ljmp
cld
pop
loopne
push
leave
cmp
fcmovne
movb
adc
push
fidivl
incl
jbe
add
jb
std
aad
insl
mov
or
pop
loopne
subl
cmp
adc
mov
push
out
jg
ucomiss
ja
xchg
dec
sbb
jne
fidivs
sahf
sbb
cli
mov
and
adc
call
cld
add
sub
xchg
in
aad
mov
into
push
sahf
fwait
and
mov
call
lcall
sbb
add
in
es
cmc
push
outsl
add
std
fadd
std
lcall
mov
jp
xor
sbb
dec
shrl
mov
xchg
pop
inc
popa
xchg
shlb
push
cmc
addb
ret
xor
pop
int3
or
and
sub
adc
mov
xchg
sbb
cmpsl
mov
out
mov
lods
daa
fwait
mov
mov
mov
lock
jg
mov
xchg
ja
mov
fnsave
lock
or
call
scas
out
pop
test
pop
rorb
int
lret
daa
pop
xchg
lcall
inc
nop
and
cltd
mov
add
jecxz
fadds
int3
sub
daa
inc
mov
ret
mov
mov
or
nop
in
std
incl
xchg
ljmp
dec
jmp
add
lret
scas
test
add
in
mov
add
sub
seto
sarb
pop
mov
icebp
ret
mov
mov
cmp
cmp
or
jg
incl
ljmp
bound
cmp
inc
pusha
mov
les
decl
mov
add
mov
ret
inc
adcl
dec
inc
pop
push
mov
cli
mov
sti
inc
jns
dec
nop
fildl
cld
jb
and
mov
add
decb
aad
mov
lea
or
mov
xchg
test
pop
arpl
add
xchg
call
or
add
sbb
ret
xchg
lods
sub
cmc
int3
pop
mov
add
ja
lcall
das
jnp
mov
and
adc
xchg
jnp
and
adc
sub
incl
mov
cmp
call
or
mov
add
hlt
sahf
std
lock
and
test
mov
cmp
jg
jmp
add
pop
dec
xor
imulb
aad
sar
pop
into
sub
push
inc
pop
mov
daa
sarb
subl
movsl
incb
int3
xchg
into
dec
or
dec
test
fldl
outsl
ljmp
cmp
pop
add
repnz
sub
xchg
pop
mov
push
adc
cld
dec
data16
int3
cmp
mov
cmp
pop
aas
fists
aad
int3
call
pop
and
jl
es
and
push
inc
test
push
lock
imul
das
std
pop
sbb
lds
or
push
push
decl
pop
or
daa
jns
insl
subb
push
jno
adc
dec
and
aas
jg
ret
es
insb
int
in
inc
mov
adc
int
ja
and
test
xchg
fbstp
or
sub
and
fisttpl
adc
js
jns
or
dec
subb
mov
pop
and
push
popa
aaa
cltd
inc
pop
stc
fbld
decl
loopne
seto
push
dec
push
pop
lea
dec
ja
decl
dec
leave
pop
adc
les
jns
sub
sbb
cmpsb
push
push
call
jmp
sbb
adc
xor
ljmp
push
sti
mov
lret
bound
jle
sbb
jns
sbb
inc
mov
fisubl
xchg
popa
push
out
cmp
cmp
decl
out
daa
in
mov
xchg
push
xchg
int
clc
sub
lcall
mov
sahf
xor
sub
xor
cmp
jns
or
mov
jecxz
and
adc
mov
adc
ja
sub
dec
sub
mov
fucomip
jmp
int3
xlat
in
inc
jnp
push
nop
push
xor
or
dec
and
imul
repnz
insl
and
adc
jp
inc
pop
clc
pop
cld
pushl
sub
push
or
push
gs
ja
mov
std
pushl
adc
sti
cltd
orb
or
lahf
cwtl
aaa
bound
ss
add
or
outsl
adc
add
jg
push
in
dec
or
and
mov
jp
das
cld
ljmp
jbe
and
sti
xchg
dec
sub
cmpsl
xor
xchg
loop
pop
adcl
xchg
adc
ljmp
jno
mov
fstpl
adc
adc
test
pop
pop
mov
adc
adc
fcmovbe
incl
fdivr
inc
clc
push
repnz
bound
ficoml
fidivrl
arpl
sub
ret
inc
sub
mov
repnz
mov
add
repnz
jg
iret
mov
imul
ljmp
repnz
daa
cwtl
bound
sarl
mov
test
inc
push
sub
je
mov
adc
lcall
or
add
mov
mov
je
mov
jg
inc
and
lock
dec
adc
mov
adc
mov
push
add
push
push
mov
push
mov
xor
lock
mov
add
sbb
pop
mov
push
std
lcall
xchg
push
out
gs
pop
xlat
xchg
xor
inc
loop
stc
jp
mov
test
adc
imul
lds
aas
lret
jns
mov
and
pusha
out
cs
cmc
inc
out
call
lcall
loopne
push
xor
mov
push
jge
mov
jo
pop
hlt
push
adc
ljmp
aad
data16
xor
filds
aam
jg
aaa
adc
push
mov
fwait
adc
mov
jmp
addl
xchg
fstps
mov
dec
icebp
shrl
jmp
ds
xchg
test
inc
popa
sub
ljmp
push
push
jle
stc
add
aaa
and
outsl
inc
or
pusha
data16
fildll
adc
lea
in
pop
inc
pop
xchg
cli
adc
orl
or
stos
in
jo
lock
or
lret
xchg
out
push
ds
in
imul
mov
cli
scas
dec
testb
pop
fbld
ret
andb
or
divl
clc
jmp
and
or
cld
faddl
xor
mov
push
or
in
mov
decl
jp
xchg
and
lock
dec
out
push
sar
in
sbb
add
aad
xchg
mov
jmp
or
ret
lret
or
cmc
push
sbb
fadds
lock
jmp
bound
js
mov
push
mov
jg
jmp
mov
push
std
xor
lahf
mov
rolb
dec
cs
mov
mov
mov
jl
in
jo
mov
fldl
pushl
push
push
loope
loope
push
pop
cld
push
and
sbb
cmp
enter
fsubp
stc
sbb
adc
sbb
lea
pop
rcl
or
cld
add
fdivr
clc
insb
lock
ds
fdivrl
hlt
lcall
mov
pop
push
xor
cmc
call
mov
cmc
push
shl
rolb
in
decl
push
je
mov
jno
enter
inc
adc
mov
jg
xchg
cmp
in
push
xchg
cmp
out
mov
xchg
or
in
fadds
xchg
lds
fsubrp
pop
push
xor
xchg
push
pop
pop
outsb
pusha
push
popl
ret
mov
sub
cmp
notb
test
leave
insb
movsb
mov
cld
loope
xchg
xor
mov
mov
out
or
int3
adc
or
push
shl
dec
mov
stos
sub
adc
mov
xchg
xchg
fadd
call
mov
sub
sub
mov
mov
xchg
mov
push
dec
daa
aas
ljmp
inc
adc
jge
xor
std
xchg
ja
mov
adc
notl
or
mov
jg
repz
sbb
out
and
orps
cmp
scas
inc
pop
test
imul
in
addb
adc
mov
push
mov
pop
lods
sbb
push
mov
mov
lcall
jl
xor
and
mov
ljmp
xchg
insb
loope
daa
mov
ljmp
lock
jnp
lcall
adc
inc
rolb
insb
push
fsts
mov
lcall
jle
inc
adc
lret
icebp
cmp
fstps
push
add
decl
loopne
cwtl
lock
sub
dec
xchg
add
in
movsb
xorb
call
js
inc
daa
push
addb
out
and
sbb
xchg
push
xor
fcmovu
cmc
pop
mov
mov
addb
ss
hlt
pop
and
push
cmp
repnz
mov
dec
mov
sahf
cmpsb
ficomps
jno
jle
aad
pop
stc
or
adc
and
mov
loopne
into
push
jp
ds
in
test
call
arpl
test
ss
jnp
adc
mov
mov
and
or
mov
in
mov
pop
mov
lock
or
push
es
adc
pop
pusha
mov
aas
test
sbb
mov
xchg
inc
xchg
fistpll
arpl
xor
pop
pusha
add
jmp
fistl
cli
jmp
xor
sbb
mov
push
mov
jg
sbb
movsb
pusha
cmpsl
jge
adc
inc
jge
or
or
decl
insb
cld
or
jp
adc
cltd
push
mov
ja
lock
or
leave
mov
adc
ja
jp
mov
call
dec
add
push
and
mov
xor
pop
sub
lea
mov
and
push
mov
jmp
je
stc
js
xchg
xor
inc
mov
lcall
jmp
imul
mov
stos
mov
pop
pop
lds
push
movsl
sub
pop
cld
or
mov
dec
jmp
pusha
pop
pushl
gs
mov
cld
xchg
in
jns
inc
jnp
push
jle
xor
cli
movsl
sbb
js
mov
push
aad
decl
xchg
rol
and
and
adc
xchg
aaa
jp
test
test
cld
inc
mov
jo
andl
lcall
dec
push
push
fs
data16
mov
mov
mov
inc
std
sbb
insl
lret
jne
push
fmull
push
add
cli
or
loop
fldcw
sub
cmp
std
mov
mov
leave
mov
and
cmp
jnp
xchg
jmp
sub
std
mov
pop
and
xor
sbb
cmpsl
js
adc
dec
out
leave
repnz
ja
lretw
and
mov
call
mov
es
movsb
loop
gs
push
lahf
dec
cwtl
mov
pop
mov
dec
lahf
fst
cmc
in
mov
icebp
add
ljmp
sub
inc
cmp
mov
icebp
and
mov
jmp
in
scas
adc
inc
fs
lock
push
mov
xor
frstor
aaa
sub
stc
and
iret
sub
xchg
outsl
adc
push
jb
lea
fnsave
pop
jg
loop
outsl
rorb
or
xchg
add
lcall
cli
and
pop
lods
cmp
ja
repz
push
cs
popa
push
pushf
lret
sub
dec
mov
pop
movsl
in
push
es
sub
rcll
mov
cmp
or
jl
dec
lock
rorl
aas
es
or
sbb
adc
pop
aad
decl
dec
xor
dec
sub
cwtl
pop
pop
jne
add
popf
mov
aaa
sbb
fadds
int3
mov
cmpsb
xlat
nop
decl
mov
bound
jmp
push
dec
adc
add
mov
lds
mov
addl
sbb
insl
sub
popa
mov
xor
fwait
mov
ljmp
and
inc
lds
add
jle
mov
cmp
push
xor
imul
xchg
push
in
loope
or
rcr
das
std
cmc
or
pop
push
or
adc
incl
scas
insb
dec
arpl
inc
dec
std
mov
fsubs
and
xchg
jle
mov
lock
hlt
add
sbb
sub
and
jle
bound
adc
decl
sbb
or
xor
out
lea
dec
rolb
dec
sbb
sub
pop
sub
jp
sub
pop
out
dec
out
and
or
dec
inc
rcll
lods
aaa
pop
sbb
xor
sbbb
movswl
lods
mov
jnp
pop
ds
imul
adc
push
ljmp
inc
inc
sbb
xor
cmc
mov
cmp
dec
out
sub
mov
mov
push
movsl
jle
lcall
bound
push
adc
loopne
push
sub
mov
pop
cmc
push
jp
loop
movsb
adc
xchg
adc
add
and
or
ljmp
pusha
daa
pop
add
xchg
sub
push
push
loop
adcl
aad
jp
dec
bound
push
pop
addr16
and
and
sbb
outsl
icebp
call
push
popa
loopne
add
repnz
addb
loop
mov
insl
pop
push
fidivs
loope
adc
mov
inc
int
outsl
mov
decl
and
nop
enter
inc
cmp
mov
fidivrl
leavew
pop
dec
xchg
xor
leave
sub
pop
clc
jg
sbb
outsb
push
xor
fwait
mov
jg
and
bound
divl
into
and
loope
push
or
push
mov
pop
xor
das
pop
gs
mov
loopne
pop
cmc
push
ljmp
hlt
loope
pop
mov
sbb
idiv
outsl
lods
push
icebp
xlat
std
in
cwtl
add
jb
fnstenv
sar
icebp
mov
imul
adc
ss
lea
mov
ljmp
xor
xchg
jae
fimull
inc
hlt
out
pusha
add
sub
daa
push
sbb
andl
pop
xchg
add
adc
cmc
lret
popf
jne
incl
push
mov
nop
mov
jl
pop
orl
jg
pop
clc
mov
pop
sbbl
pusha
push
add
data16
mov
or
cli
adc
or
pusha
push
aas
in
in
test
cld
mov
lock
push
mov
pop
les
scas
xor
sbb
mov
cmp
inc
test
jg
ljmp
popf
xor
sbb
adc
daa
out
in
cmp
or
ljmp
in
pop
subb
cld
frstor
insb
add
jo
es
aad
xchg
out
or
pop
jmp
pop
aaa
lret
inc
out
sbb
stc
pop
aaa
push
std
xchg
adcw
jne
cmc
xor
pop
int
or
cmp
and
pushl
mov
cmp
xchg
push
mov
repnz
int
adc
std
icebp
xor
pop
in
dec
clc
out
add
add
pop
and
push
stc
mov
std
xchg
mov
dec
push
icebp
shll
jle
push
xor
aad
cmc
and
vmovapd
lcall
lcall
xor
inc
add
jge
add
xchg
les
jns
decl
std
sbb
pop
test
insl
mov
and
fisubl
insb
mov
lods
push
dec
and
ds
mov
xlat
jecxz
or
insl
aam
cmp
jecxz
cmpsb
or
sub
pop
jne
xchg
sbb
push
ret
loopne
pop
aad
dec
sbb
popf
mov
aam
aaa
xchg
ret
loop
adc
push
outsl
mov
adc
pop
cmc
push
add
jge
lret
mov
lahf
mov
push
repnz
mov
and
xchg
adc
fs
mov
sub
add
enter
enter
dec
xlat
push
push
int3
sbb
lcall
ret
repz
sub
or
dec
add
iret
push
pop
or
pop
ljmp
fs
out
sub
and
push
psubd
scas
pop
imul
xchg
dec
adc
dec
xchg
cmp
lcall
dec
inc
cmpsb
outsb
sub
dec
repnz
les
fucom
pop
add
cmp
incl
cld
adc
push
jnp
xchg
inc
popf
cmpsl
jnp
add
call
push
out
mov
ljmp
lock
pusha
ljmp
sub
xchg
jo
addb
and
decb
shl
inc
sbb
fisubrl
test
shrb
push
std
jg
aaa
push
xor
ror
dec
dec
mov
and
xor
mov
adc
test
fmuls
or
mov
mov
pop
das
mov
daa
das
push
inc
imulw
jmp
dec
fisttpl
sub
vpshad
lock
das
dec
sti
loop
mov
or
push
xchg
and
test
dec
inc
daa
xor
inc
adc
call
jp
lahf
pop
test
fs
std
movsl
sarl
pop
sub
lcall
add
ds
sar
xor
mov
pop
aam
jmp
das
mov
and
jno
mov
lret
jb
pop
mov
sbb
mov
or
adc
xchg
push
push
and
lods
leave
ljmp
push
rcrl
lret
and
sub
mov
ret
xchg
popa
pop
mov
push
sbb
mov
jmp
xchg
sbb
test
pop
xchg
mov
popf
pop
dec
xchg
or
lock
or
fistl
clc
pop
call
hlt
cli
imul
hlt
stos
pop
loop
out
mov
mov
fsubrl
push
xor
inc
repnz
hlt
push
jmp
mov
cmp
inc
xor
scas
sub
addb
adc
dec
xor
xor
loope
outsl
mov
aad
sets
or
add
or
fucomip
or
inc
ja
lahf
mov
mov
pop
test
jnp
push
arpl
mov
or
outsl
adc
je
pop
cmp
xor
adc
icebp
and
pushl
jne
lds
jecxz
xor
jo
repz
and
mov
fwait
sbb
popw
cli
stos
inc
mov
lahf
mov
mov
ljmp
in
xor
pop
add
dec
xchg
rol
jns
xchg
call
das
mov
mov
xor
movsl
inc
ljmp
pop
mov
into
fiadds
ljmp
xor
sbb
test
lcall
or
xchg
dec
inc
mov
sar
test
ret
ret
push
mov
jb
les
inc
int3
and
push
sub
pop
int
jne
aas
jns
call
mov
imul
xor
and
adc
pop
push
xor
fidivrl
mov
mov
add
inc
inc
mov
cmp
xor
incl
je
jecxz
lret
mov
mov
push
mov
ljmp
cmpsb
insl
jle
addr16
cltd
mov
sti
jno
rcrl
sub
or
nopl
mov
sbb
gs
xchg
sbb
lock
scas
mov
or
xchg
lock
push
sub
cli
pushl
inc
jp
xchg
shlb
push
lret
pop
sti
inc
xlat
icebp
inc
and
loop
mov
push
mov
addr16
fstps
dec
aad
fwait
lcall
imul
or
mov
pop
imul
or
dec
cltd
sbb
popf
or
sbb
sub
or
jne
clc
fnstsw
int3
sbb
loopne
jp
inc
mov
sub
clc
cs
aas
in
mov
mov
add
call
dec
mov
push
dec
adc
gs
add
adc
aaa
push
mov
add
xchg
inc
push
adc
mov
inc
rclb
jbe
and
lods
jg
xchg
lret
mull
push
fistps
cmc
and
mov
push
out
push
and
loop
dec
fstl
decl
ljmp
push
std
mov
test
pop
fstpt
add
popa
dec
loope
mov
lock
pop
adc
add
shll
jge
fistps
and
mov
jns
mov
jg
insb
or
stc
lcall
jl
mov
mov
ret
leave
or
movsb
dec
mov
mov
int
in
jecxz
add
xchg
call
dec
js
jbe
adcb
aam
pop
clc
mov
mov
sub
outsb
iret
fcoml
std
addr16
sub
std
sbb
lock
adc
repz
pop
inc
sub
mov
leave
cmpsb
adc
cmp
push
in
adc
cmp
cwtl
mov
call
cmpl
xor
jp
fstps
and
imul
pop
jns
lods
fnstsw
sbb
call
in
fisubrs
adc
or
sbbb
incl
in
fcoms
xlat
xor
nop
shlb
iret
inc
lock
pop
jno
jmp
mov
aam
fcomps
inc
adc
mov
sbb
dec
or
adc
call
je
insl
shll
mov
cli
call
xor
iret
inc
and
call
xor
inc
int
pop
loopne
and
push
movsb
mov
mov
cld
adc
pop
loop
fwait
push
push
mov
push
jo
and
pop
xor
pop
mov
push
popf
ljmp
inc
test
adc
push
mov
push
inc
push
or
loopne
call
lcall
sbb
pop
xchg
mov
xor
dec
lea
adc
call
sahf
cltd
insb
pop
sub
and
test
and
nop
sub
fcmovb
es
and
fdivp
dec
mov
jge
lcall
push
jns
sub
outsb
lods
jne
add
push
outsl
std
decl
push
push
pop
add
cmp
popf
pop
in
push
xor
inc
outsb
mov
mov
and
call
incl
mov
std
xor
mov
pop
stc
imul
xchg
push
bound
inc
clc
jb
mov
dec
fdivr
add
cmp
jnp
sub
inc
sbb
pop
sbb
jmp
stos
add
es
lea
xchg
dec
imul
es
xchg
es
or
int
push
aam
iret
cs
cmp
push
mov
ficomps
pop
enter
cmp
sbb
adc
inc
mov
pop
mov
gs
push
sbb
cmp
inc
mov
xor
cmc
adc
das
lock
lcall
xor
push
inc
jl
ja
push
stc
pop
pop
sarl
push
pop
or
fdiv
or
add
pop
sbb
and
pop
call
insl
mov
imul
fnstenv
in
pop
mov
rcrl
bound
sbb
sbb
jg
pop
jae
popa
mov
sbb
add
mov
ficomps
mov
and
adc
cmp
lahf
and
test
cli
decl
cmp
adc
out
faddp
popl
aaa
cli
call
dec
push
pop
xchg
adc
xchg
mov
daa
pop
or
cli
pushl
jns
daa
mov
cmp
fnstsw
add
mov
push
pop
dec
out
bound
mov
pop
pop
or
sub
out
pop
dec
inc
test
mov
pop
pop
pop
xor
jne
adc
test
sbb
repz
call
pushl
or
scas
cmc
xchg
xchg
arpl
dec
xor
mov
lcall
dec
fimuls
outsl
pop
push
idiv
cld
daa
sbb
iret
and
add
ljmp
shl
sbb
pop
je
cmpsl
mov
and
in
push
mov
or
insb
sub
in
or
xlat
or
cltd
lock
incl
jae
lds
or
add
mov
aas
pusha
push
lods
adc
mov
push
jmp
clc
mov
cmp
mov
jne
popf
mov
test
mov
int
dec
xor
lock
push
adc
sbb
ljmp
shrl
pop
lret
scas
es
lcall
cmp
test
pushl
inc
inc
mov
cmp
mov
sub
loop
push
lds
cld
addr16
ljmp
out
xor
and
movsl
or
sub
adc
aad
mov
fldenv
jle
jl
mov
adc
lret
jno
push
or
mov
push
lcall
cmp
jg
or
loopne
das
cmp
dec
in
mov
shrb
or
add
sub
daa
repz
ret
sahf
leave
adc
clc
fbld
pop
mov
lods
or
push
or
loopne
add
sar
decl
sub
pop
stos
addr16
xor
sbb
xchg
rcll
inc
mov
incl
in
xchg
pop
aaa
mov
inc
adc
push
pop
std
inc
frstor
ss
decl
xchg
xchg
fwait
push
mov
sub
fmuls
xchg
mov
flds
add
adc
and
hlt
cmpsb
repz
jmp
xchg
repnz
in
in
sarl
dec
insl
cmpsl
in
jmp
add
mov
orl
es
insb
das
push
xchg
or
test
sub
inc
sub
lea
or
adc
push
inc
or
mov
movsb
pop
xchg
aad
incl
cmp
sub
clc
pushf
inc
cmc
sbb
jb
inc
push
lea
mov
ljmp
aam
repz
dec
mov
and
adc
cld
mov
mov
mov
leave
mov
nop
push
ds
push
cmp
fbld
roll
jnp
mov
jo
dec
fwait
add
lcall
mov
mov
jb
push
adc
outsb
mov
jo
push
jo
incl
in
ljmp
and
inc
inc
push
mov
cld
mov
in
int
xchg
cmp
int
ljmp
cmp
push
sub
dec
mov
mov
inc
inc
sub
and
outsl
dec
or
lcall
inc
shll
adc
sbb
mul
dec
cmpsb
out
sub
cwtl
daa
mov
scas
push
sub
push
jmp
aas
xor
xchg
pop
pop
mov
mov
test
scas
data16
adc
decl
fiaddl
jp
cld
int
int
rcrb
jno
lret
imul
call
mov
pop
repz
fnstsw
jg
pop
loop
pop
inc
xchg
fidivs
push
leave
popf
or
jae
js
pushl
xchg
clc
cwtl
or
lret
pop
addr16
dec
fisttpll
jge
mov
pop
and
mov
adc
push
shrl
cmpsb
sub
and
jg
xor
into
fwait
sarb
or
inc
jo
sub
lcall
pop
inc
ret
pop
dec
gs
mov
adc
adc
mov
outsl
hlt
pushl
mov
or
cmpsb
push
mov
pop
hlt
das
std
ds
push
push
rcll
jae
pop
mov
mov
dec
adc
mov
jl
and
gs
test
sysret
and
jno
mov
or
pop
xor
inc
ljmp
leave
inc
das
mov
sbb
push
push
jmp
idivb
in
decl
mov
mov
sbb
lret
jo
jns
scas
nop
mov
mov
lcall
adc
xchg
and
insb
adc
dec
dec
decl
lock
adc
cld
lock
sub
jne
test
into
ja
hlt
aaa
sub
mov
adc
lods
addr16
mov
ljmp
les
stos
adc
mov
pop
shll
add
adc
xor
jno
inc
fincstp
ja
fdivs
xor
fwait
and
or
imul
or
sub
jmp
dec
push
mov
ja
pop
dec
call
leave
add
sbb
outsb
xchg
loopne
dec
cmp
nop
jmp
lcall
mov
jns
or
adc
or
enter
lock
das
cld
inc
cmp
sbb
mov
mov
gs
ja
fidivrs
inc
and
outsb
roll
shlb
inc
or
and
ds
repz
out
inc
inc
push
out
pop
cltd
mov
jg
mov
sbb
jmp
movsl
jnp
mov
or
ljmp
cmp
cmp
rclb
sub
cmp
mov
in
dec
popa
push
sub
sti
das
lock
jle
dec
test
adc
enter
xchg
and
push
jg
ja
inc
or
add
pop
rcr
push
push
mov
std
lret
lcall
loope
add
add
dec
mov
sbb
xor
mov
cmp
mov
movsl
push
es
push
scas
cmp
push
aaa
mov
lds
cmpsb
dec
push
push
xchg
pop
cmp
mov
adc
fisttps
mov
icebp
sbb
sbb
iret
cmp
fldl
call
adc
sub
insl
mov
or
pop
pop
dec
jbe
pop
decl
lea
xchg
repnz
sbb
xchg
decl
movsl
push
repz
adc
popf
cs
mov
sbb
or
adc
pop
push
dec
pop
loopne
hlt
stos
out
enter
decl
push
jp
popf
in
cmpsb
xor
iret
add
lahf
hlt
pop
add
cmpsb
and
xchg
or
mov
inc
mov
test
and
dec
pop
add
xor
nop
and
push
daa
xchg
mov
inc
decl
sbb
xchg
cmc
sbb
sahf
sbb
lahf
popa
dec
out
sbb
push
fucomip
sbb
pop
xor
mov
decl
lcall
andb
sbb
in
lret
in
inc
push
dec
stc
dec
std
pop
clc
inc
into
adc
dec
xor
movsl
mov
jns
jns
xchg
pop
loopne
stos
jae
outsl
sbb
jne
cmpsl
das
jb
cmp
hlt
incl
out
jecxz
lahf
cmovne
adc
or
ljmp
mov
mov
sub
sbb
and
sbb
pushl
sub
adc
std
jne
xor
adc
out
xchg
push
dec
popa
sub
mov
scas
push
pop
out
push
jmp
sbb
pushf
ljmp
cmp
xor
fadds
aaa
fwait
mov
push
cld
fbstp
add
dec
push
fiadds
jmp
sbb
pop
adc
es
incl
xor
mov
xchg
sbb
or
pop
inc
pop
jl
fnsave
lret
mov
outsl
lock
in
mov
mov
in
adc
test
add
dec
add
cmp
mov
cmp
hlt
pop
jb
fs
loopne
push
or
cli
dec
mov
sbb
and
adc
adc
je
mov
or
movsl
or
push
dec
insl
cld
test
xor
jg
ret
lret
inc
and
outsl
pop
mov
push
in
jp
or
xchg
std
ljmp
sbb
mov
cwtl
sarb
popa
dec
push
or
sbb
test
mov
jo
jnp
jp
and
add
add
insl
add
loopne
movsl
sbb
lea
xor
sbb
addb
fists
push
in
push
sub
jno
jp
mov
std
btrl
stos
call
in
mov
sub
dec
jl
aas
adcl
out
push
mov
int3
jp
inc
mov
and
jb
dec
cmpsl
inc
xlat
iret
lock
insb
int3
out
adc
stos
push
mov
cmp
scas
cmp
xor
mov
int3
out
or
jae
imul
xor
ud0
outsl
scas
or
sbb
mov
cmpsl
mov
orl
aaa
decb
into
xor
clts
mov
jecxz
hlt
and
call
rdmsr
pop
push
adcl
jmp
pop
xor
seto
call
inc
filds
bound
mov
or
call
or
or
and
pop
arpl
pop
mov
sub
subl
cmp
lcall
inc
push
popa
movsl
mov
xor
leave
mov
in
lcall
push
push
lcall
mov
xor
push
jae
fs
jne
test
adcl
mov
icebp
outsl
cld
testb
add
ja
push
std
test
das
add
adc
imul
sbb
mov
inc
pop
inc
in
jns
lock
mov
add
adc
imul
adc
jl
jo
cmpsb
lods
dec
sbb
pop
lods
js
dec
or
fisttpl
jne
pop
mov
scas
add
aas
lea
imul
pop
in
incl
jb
cs
aad
mov
repz
daa
mov
mov
stc
pop
push
incl
inc
or
pop
mov
cmp
jo
aam
cvtdq2ps
decl
push
pop
dec
push
ja
or
mov
add
sbb
mov
and
rsm
rcr
aaa
jp
mov
fs
popa
inc
mov
ljmp
cld
inc
mov
or
inc
popa
jmp
or
cltd
repz
outsb
push
cmp
cld
in
call
aas
and
test
adc
sub
xchg
fwait
pop
loop
dec
test
xor
loop
xor
pop
pusha
cmc
dec
incl
xor
enter
dec
push
lea
pop
mov
das
insb
xchg
test
push
leave
test
and
add
sub
xchg
ljmp
lcall
notb
add
lock
push
pop
mov
je
imul
xor
lods
xchg
cli
call
pop
movsb
cltd
nop
inc
rcr
fdivrs
sbb
push
pushf
pop
adc
dec
cld
lods
push
push
imul
dec
sbb
mov
decl
faddl
dec
xor
xchg
adc
jne
aaa
pop
push
dec
xor
mov
cmc
fnstsw
call
adc
add
out
adcl
sbb
aam
std
lds
pop
pop
nop
in
jae
and
sbb
push
pop
push
inc
xchg
aaa
movsb
or
pushl
add
inc
cmp
jno
jp
and
pushf
jne
xor
decl
mov
mov
pop
add
lea
daa
xor
rorb
dec
imul
mov
aam
xchg
and
mov
cmp
movsl
or
cmc
pop
loopne
loopne
call
or
pop
pop
std
ljmp
pop
cmp
inc
mov
mov
subb
or
shlb
rcrb
mov
andb
adc
test
sbb
inc
xor
mov
ss
pop
lea
adc
cmc
fcmovb
fwait
jmp
fbld
jmp
fsubrl
rcll
mulb
xchg
mov
jmp
mov
xor
and
and
fnstsw
xchg
cmp
jge
sbb
out
lret
dec
adc
mov
xchg
push
xchg
add
mov
xor
mov
xchg
fists
inc
pop
jp
jge
in
mov
adc
or
mov
jecxz
icebp
pop
xor
and
lock
inc
fnstsw
addr16
enter
imul
pop
cmp
mov
mov
cmpsb
dec
mov
pushf
add
cld
aas
sbb
test
ljmp
adc
imul
cli
add
enter
js
incl
ja
loope
mov
sub
xor
ljmp
xor
les
inc
push
int3
pop
dec
aas
pop
aad
inc
push
adc
std
lcall
inc
inc
or
jne
adc
loope
mov
pop
decl
dec
std
es
adc
dec
out
inc
test
sbb
cmp
push
xchg
adc
or
iret
xchg
xchg
cmp
lods
jecxz
xchg
hlt
mov
bound
insb
test
test
or
adcb
dec
lcall
std
popa
outsl
sbb
enter
push
fwait
adc
push
sub
pop
shll
mov
fstpl
popf
orb
add
jo
jae
adc
incl
pusha
push
insl
pop
jb
ss
xchg
mov
mov
add
cmc
push
notl
cmp
or
mov
mov
inc
adc
sbb
adc
mov
sbb
xchg
mov
lods
decl
push
lea
in
xchg
fdivs
jp
in
in
or
insl
mov
incl
iret
fiadds
inc
test
add
inc
sbb
or
inc
aad
out
stc
or
jne
popl
pop
xchg
jo
mov
pushl
clc
jmp
aad
fs
or
imul
dec
jmp
nop
std
bound
pushl
sub
dec
and
mov
adc
pushf
andb
pushf
mov
jnp
aad
mov
lds
jbe
ret
add
push
pop
shll
sub
pusha
stc
jmp
mul
lcall
mov
pop
cld
dec
pop
or
jecxz
ljmp
fsts
fiaddl
fisttpll
frstor
aad
jno
jmp
fldenv
cmp
sbb
push
rorl
orb
sahf
jo
stos
mov
adc
fsubrl
movsl
mov
movsb
test
das
inc
pop
or
incl
nop
lds
in
aad
rcrb
mov
pop
nop
push
xor
inc
jge
and
cmp
sbb
rcl
test
sbb
insb
xchg
pop
movsl
mov
pop
iret
add
and
arpl
inc
add
push
pop
push
iret
pushl
xor
insb
outsb
and
imul
sub
add
mov
pushl
sbb
stos
xor
lret
mov
imul
pusha
and
pop
pop
adc
pop
movsl
shl
mov
ljmp
enter
pop
pop
pop
xlat
inc
icebp
and
ud0
std
fcomip
push
in
pop
fwait
xor
pop
orl
or
movb
jg
ficoms
mov
faddp
out
les
adc
jmp
sti
push
movsl
popl
fcmovne
shlb
cltd
movsb
aam
imul
ljmp
sub
sbb
fwait
push
xchg
pop
fildl
les
mov
adc
int
xor
inc
dec
xchg
decb
adc
mov
push
sbb
lods
inc
mov
fcomps
sub
inc
lcall
mov
daa
lahf
adc
push
lret
sub
pop
xchg
pop
pop
orl
ljmp
or
lods
lds
enter
sub
push
pusha
adc
shll
pop
loop
popa
cmpb
add
ss
dec
jae
push
pop
out
test
call
in
or
movl
and
add
xchg
out
push
incl
mov
pop
sub
ret
dec
sbb
sbb
push
pop
sub
jle
nop
adc
pop
cld
sbb
pop
mov
pop
xchg
jecxz
mov
jp
aad
movsl
pop
jg
inc
pop
gs
xor
repz
xor
lea
int
jle
ret
mov
aad
roll
into
popf
leave
out
je
dec
repz
ficoml
push
pop
lods
pop
mov
aaa
pop
pop
xchg
sbb
jmp
out
dec
mov
mov
daa
mov
call
ljmp
icebp
jg
lods
inc
and
mov
cmpsl
sbb
test
push
lcall
inc
cli
lods
bound
pop
enter
sub
mov
sbb
pushl
and
pop
push
fwait
cwtl
icebp
push
int
stc
sti
pop
dec
mov
or
scas
mov
mov
decl
pop
and
mov
into
push
repnz
jle
pop
inc
jb
jbe
shll
sbb
or
jg
fcoms
mov
loopne
dec
dec
jne
test
cltd
mov
sbb
lcall
rorl
aam
popa
mov
out
xorl
ja
out
and
jnp
sub
int
xor
mov
cmp
fstps
xchg
nop
imul
mov
mov
loopne
mov
ljmp
out
jg
mov
pusha
mov
fimuls
lret
push
mov
daa
pusha
notb
adcb
add
and
mov
xor
xor
xchg
jne
ljmp
push
lock
or
mov
loope
xor
test
imul
outsb
cmp
sbb
hlt
pushl
push
dec
das
and
sub
inc
add
call
sbb
sti
inc
ds
sub
dec
pop
std
sbb
adc
cmpsb
inc
xchg
test
cmp
jg
imul
cmp
lods
push
push
cmp
mov
cld
jns
pop
sub
insl
icebp
dec
cwtl
xchg
mov
mov
sarl
testb
call
xchg
ss
out
jno
adc
sub
ret
jb
push
xchg
cmp
mov
or
add
xchg
idivl
mull
jb
mov
and
in
or
jno
or
icebp
jmp
incb
js
jnp
and
mov
imul
mov
scas
sbb
mov
aam
stc
pop
mov
jb
mov
call
ret
lods
leave
sub
mov
mov
sub
test
pop
rorl
mov
jg
push
and
mov
test
xor
or
xchg
insl
jae
aad
fwait
jns
pop
mov
jmp
icebp
cmp
es
mov
insl
je
adc
sub
pop
cli
ljmp
xchg
dec
lods
mov
pusha
mov
aam
enter
inc
cmpl
xchg
push
pop
xchg
aad
adc
loop
jg
movsl
add
push
mov
add
cmpsb
push
enter
jg
jl
popf
xchg
stos
sub
scas
sahf
jecxz
arpl
or
xchg
stc
push
pop
jg
in
fwait
cmp
fisubrl
pop
push
add
push
ret
sub
jnp,pn
mov
mov
testb
rorb
scas
loop
xchg
sahf
xor
or
mov
mov
xchg
xor
dec
fs
idiv
and
lret
sbb
or
jmp
lahf
popa
nop
sbb
nop
aas
sub
mov
sbb
rcr
xchg
and
xchg
push
cwtl
shrd
gs
jns
add
inc
mov
pop
leave
cmp
mov
mov
jg
mov
adc
mov
out
lret
pop
or
push
or
incl
cmp
icebp
push
out
cli
cmp
pop
roll
xchg
fwait
xor
jg
adc
lock
nop
pop
popa
push
loop
testl
idiv
jmp
dec
mov
jmp
or
cmpsl
sti
push
push
push
cmp
cmpsb
out
insb
mov
adc
or
add
xchg
cmp
dec
repnz
pushl
out
mov
xchg
and
mov
and
sbb
mov
enter
push
jne
adc
incl
mov
data16
cmp
ss
aad
sbb
adc
ret
cmp
or
jg
sti
mov
ficoms
jne
inc
pop
fdivrl
scas
inc
add
or
stos
pop
cmp
cmp
stos
lock
and
outsl
jmp
add
or
pop
push
in
out
outsl
jo
lds
outsb
lahf
call
outsb
or
stos
movsl
lahf
rorl
xchg
lea
and
adc
jmp
cmc
and
sbb
cld
xchg
inc
mov
cwtl
sub
in
lds
out
xor
sti
pushl
cmc
xchg
sbb
test
xor
or
add
call
fst
fs
lds
xchg
lods
or
cmp
mov
lods
cmpsl
mov
pop
inc
subl
or
call
jno
mov
sub
cwtl
push
pop
add
popf
mov
cmc
add
mov
xchg
into
sub
orb
xchg
sub
or
xchg
mov
cltd
xchg
pop
aad
inc
adc
daa
xchg
dec
add
movsl
incl
test
mov
cmp
mov
add
push
decl
stc
or
fstpl
imul
or
xlat
ret
ljmp
pop
ret
or
and
imul
dec
xor
push
or
jo
xchg
cmc
xor
push
fistpll
pop
or
mov
mov
icebp
xor
push
movsb
jge
dec
cld
add
xor
test
test
mov
inc
adc
or
jp
and
cs
movsb
pusha
cmp
xor
fisttpll
and
incb
fs
dec
je
ficoms
mov
call
and
jno
push
insb
nop
adc
jno
and
je
adc
mov
in
aam
jnp
jnp
jo
mov
mov
hlt
xorl
outsl
insl
adc
and
jecxz
mov
xor
sbb
outsl
icebp
inc
rcrb
push
ja
insb
fisubs
imul
fistpll
and
mov
adc
imul
pushf
mov
imul
mov
lods
mov
push
mov
adc
xor
lock
clc
insl
movsl
fidivs
movb
jmp
push
push
push
cmc
imul
cli
outsl
fcmovnu
push
fcomps
scas
fidivs
dec
ljmp
xchg
jmp
adc
cmp
adc
pop
loope
movsl
and
adc
inc
mov
inc
data16
push
pushl
inc
add
sub
sub
inc
or
xor
or
stos
pop
loop
adc
mov
icebp
sub
ljmp
add
nop
icebp
or
adc
push
dec
push
and
mov
sub
adc
ljmp
sbb
mov
fildl
and
cmp
adc
arpl
inc
sub
das
mov
adc
ret
pusha
push
cwtl
pop
pop
lds
sti
or
inc
xor
nop
mov
je
mov
sub
cwtl
mov
add
shrb
xor
movsb
sbb
mov
mov
and
call
jl,pt
push
or
adc
jmp
mov
or
sub
idiv
jecxz
jnp
pop
clc
repnz
xor
inc
nop
sahf
jae
inc
mov
jl
jmp
adc
sbb
and
outsl
clc
or
js
pop
cwtl
ret
adc
fs
rclb
mov
mov
inc
lret
mov
or
addr16
jns
ja
push
fisttps
xchg
hlt
or
adc
hlt
ret
imul
cmp
jl
inc
xchg
imul
lods
inc
xor
mov
icebp
push
popf
or
or
pop
push
enter
inc
cmc
fincstp
rclb
je
pop
clc
fildll
mov
arpl
or
lret
movsb
lcall
mov
mov
inc
push
and
cmpl
ja
sti
movsb
jne
xor
aam
cs
mov
aas
aaa
das
daa
pop
pop
add
inc
cmp
sti
decl
cmp
sub
sbb
or
xor
and
adc
inc
cmp
sub
sbb
cltd
in
inc
cmp
or
pop
or
or
push
sbb
sbb
and
clc
int
and
adc
adc
sbb
push
sbb
and
test
pop
jle
lcall
push
push
sub
cmp
sub
xor
daa
inc
mov
decl
cs
and
ljmp
es
cmp
cmp
dec
decl
push
push
push
decl
jns
lock
pop
sbb
pop
inc
repnz
adcb
and
pushl
je
and
and
push
sbb
cmp
imul
jns
jns
push
adc
in
decl
push
js
and
jae
jns
add
je
insb
mov
data16
dec
jg
incl
fs
pop
dec
outsb
imulb
insb
pop
inc
fildll
add
jnp
xor
sarb
push
cmp
add
ret
mov
cmp
movsb
cmp
clc
mov
xor
fwait
mov
lret
in
incl
pop
adc
mov
cmp
push
push
jno
jmp
outsl
test
jp
loope
mov
lds
jmp
pop
fisttps
insl
gs
push
aaa
mov
inc
push
and
stc
sub
add
in
aad
stos
aaa
mov
jns
popf
sbb
pop
add
out
dec
cmp
mov
aaa
ret
push
dec
mov
sbbb
leave
mov
or
loope
jae
leave
mov
jae
insl
gs
dec
cmp
insb
std
stc
out
out
adc
int
xchg
mov
cltd
lea
cmp
aas
sub
jno
aad
pop
push
fsubl
fsubrs
jp
pop
pop
es
jg
jle
fadds
lds
jns
and
pushl
inc
xor
ljmp
loope
lock
jg
mov
fs
ret
mov
or
aam
adc
ja
pop
adc
fcmovnu
ja
jae
jo
stos
cmp
xor
ret
add
jno
adc
mov
jo
das
lcall
pop
adc
call
pop
idivl
sbb
adc
xor
mov
dec
outsb
sbbw
movsl
fisttps
jmp
fistps
xchg
push
data16
and
pop
loopne
call
and
jb
push
adc
icebp
rclb
cmp
ja
xor
push
pop
loopne
adc
lock
add
shll
idiv
je
and
ss
fwait
lcall
pop
rolb
fcmovnu
ljmp
jo
jb
outsb
fnsave
push
adc
mov
js
imul
movsb
xor
push
add
call
mov
cwtl
adc
js
imul
shrl
popf
lret
dec
mov
incl
pop
aaa
faddl
js
cmc
cli
sbb
pop
ja
test
aaa
xor
cld
mov
xor
js
push
jbe
gs
je
imul
incb
cwtl
cmpsb
data16
shlb
jno
pushf
clc
inc
aaa
cli
pushl
and
sbb
fnsave
in
push
sti
pushl
sbb
adc
dec
jae
divb
pop
or
call
pushl
clc
push
addr16
or
xor
cmpl
push
ss
incl
jne
data16
jae
jae
js
out
jb
ja
fisttpl
jns
or
and
add
loop
push
mov
add
cwtl
loopne
in
jl
jge
outsb
adc
fists
push
mov
dec
in
adc
outsb
jno
jmp
and
push
addr16
imul
ja
mov
in
xchg
or
repz
ljmp
pop
pop
clc
jg
outsb
jne
test
outsb
mov
test
add
lcall
mov
pop
mov
adc
fbstp
bound
imul
dec
sub
push
pop
ljmp
xor
ret
mov
jp
into
xchg
adc
cmc
cmc
jo
cmp
js
rcll
pushl
in
jo
sbb
or
mov
and
popa
and
and
jae
push
lcall
test
sbb
cwtl
aam
addr16
push
dec
aas
cmp
xchg
cmc
imul
or
sbb
sub
and
pusha
popf
outsb
push
outsl
out
add
xor
mov
out
call
lcall
data16
fldcw
push
sub
and
or
jb
push
adc
mov
xor
mov
out
jno
sub
and
or
jo
sti
fldcw
cmp
sub
pop
fsubr
cmp
ds
gs
loopne
das
icebp
xchg
clc
jl
jae
jns
add
flds
lcall
and
mov
and
dec
push
mov
jns
stos
gs
mov
push
xchg
cmp
cmp
dec
jno
icebp
jno
mov
dec
std
adc
push
dec
leave
dec
push
and
inc
dec
outsb
and
push
push
adc
hlt
push
je
decb
push
and
icebp
cmp
adc
jmp
mov
in
ljmp
sbb
mov
pusha
pushl
push
jae
adc
in
bound
pop
outsl
dec
mov
enter
arpl
decb
mov
jns
adc
jae
insl
fisubs
popf
adc
ljmp
aam
and
mov
sub
enter
sahf
push
push
pusha
je
adc
ret
inc
mov
inc
push
jp
js
ljmp
popf
pop
popf
inc
in
test
sbb
data16
inc
cmp
sti
sub
cld
jno
repnz
or
jae
data16
xchg
lret
push
or
mov
daa
xchg
mov
or
dec
andb
adc
push
sub
loop
cs
lods
jno
xorb
imul
sub
sub
fimuls
xchg
cs
lea
dec
jb
movsb
cmovno
ljmp
mov
or
sub
xchg
lcall
xchg
cli
or
cmp
ljmp
sub
add
ljmp
add
push
xchg
add
test
pop
clc
xor
mov
cld
mov
push
sbb
or
sub
add
in
outsl
insb
divl
xor
and
cmp
outsl
decl
mov
jnp
das
sub
pop
xor
xor
test
sub
sbb
adc
cmp
pushf
dec
xor
adc
popa
xor
jnp
inc
xor
jg
test
pop
sbb
subps
in
in
inc
insb
inc
adc
daa
push
mov
ss
dec
je
mov
fdivrl
jg
loop
cld
or
inc
cmp
mov
js
repnz
pop
xor
adc
push
add
jge
loop
pushl
call
jne
cmp
xor
xor
sub
call
inc
sbb
pop
inc
add
cmc
add
mov
jg
bound
mov
add
add
loopne
lahf
mov
lea
cli
decl
outsb
dec
cmp
push
loopne
rolb
adc
std
incl
loop
pushf
aaa
lods
cwtl
push
cmp
sbb
call
pushl
add
jbe
ljmp
loop
mov
inc
sar
fildll
andb
pop
loopne
xor
pop
pusha
daa
fsubrl
shrb
les
add
addb
push
jo
jb
mov
incl
outsl
push
stos
and
add
bound
pushf
cltd
jne
add
pushl
mov
pusha
out
nop
jb
subb
daa
insl
add
jp
lcall
outsb
bound
mov
sti
mov
cmp
mov
pop
clc
mov
mov
jo
pusha
push
add
mov
jmp
arpl
push
dec
mov
xor
clc
stos
test
js
insb
mov
das
inc
xor
test
mov
hlt
decl
fists
mov
dec
mov
popf
xchg
xchg
add
outsl
call
add
adc
jecxz
or
adc
xchg
clc
call
pop
lock
pushf
addb
mov
ret
jno
outsl
push
arpl
adc
loopne
repnz
pop
in
jo
and
push
outsl
std
lcall
mov
sti
jnp
addb
lods
or
je
jecxz
out
inc
or
jle
mov
aaa
sub
les
mov
mov
jge
sahf
xchg
push
dec
jl
xchg
push
jge
pop
push
pop
push
aas
sarb
ds
pop
enter
pop
loopne
dec
loop
sbb
aas
mov
subb
sbb
pop
mov
push
dec
js
lret
je
incl
rorb
add
hlt
fadd
add
stos
jb
cmp
in
into
mov
cmpsb
and
cmp
lcall
xchg
xchg
lods
add
xor
sbb
outsb
inc
decl
lret
mov
xor
sub
adc
push
rcrb
fld
in
decl
pop
cld
loopne
repnz
adc
dec
mov
call
roll
div
fisubrs
idivb
add
add
or
lcall
stc
out
icebp
repz
incb
divb
test
mov
cli
or
push
mov
or
inc
mov
call
out
repz
cli
sbb
cld
fndisi(8087
add
out
pop
or
repnz
jb
stc
jne
nop
jg
cli
or
add
inc
add
add
mov
inc
aam
jmp
lcall
pop
aaa
jmp
loopne
mov
add
jecxz
mov
cld
pop
andb
pop
lods
fisubrs
or
das
xor
dec
sub
mov
clc
mov
and
sub
adc
add
repz
or
cs
je
es
cs
or
push
jmp
jb
or
push
dec
sbb
cmc
faddl
pushf
mov
adc
fidivl
or
sub
xor
mov
incl
ljmp
sbb
push
imul
xor
xor
add
mov
pushf
sbb
call
xor
dec
pushf
mov
add
sub
je
je
jne
mov
ljmp
jmp
pop
push
inc
imul
add
add
jno
push
outsl
inc
mov
lods
mov
jb,pt
mul
mov
xor
pop
mov
adc
ljmp
mov
lahf
or
adc
adc
or
enter
roll
mov
xor
hlt
fimull
jle
insl
or
xor
push
roll
lahf
cmpsb
cmp
jecxz
pop
or
jecxz
sbb
xchg
and
dec
jne
pop
dec
xor
adc
sbbl
loopne
cmpsb
adc
pop
add
jmp
cs
call
jb
sub
ret
repnz
inc
xor
outsb
mov
add
adc
insb
rdtsc
out
jecxz
lods
pushf
or
inc
add
mov
mov
ljmp
daa
mov
jns
sar
jns
es
add
jb
insb
pop
inc
imul
or
inc
xor
sbb
repz
mov
jge
jle
pop
mov
outsl
std
push
pop
jno
xchg
mov
in
push
sub
cli
outsl
cld
dec
cmp
push
jo
je
dec
pop
dec
sbb
insb
leave
adc
loop
call
sub
sbb
in
sub
ljmp
lock
adc
sbb
push
sbb
and
insb
jge
enter
ret
rorl
push
cmp
xchg
adc
mov
call
mov
xor
mov
std
add
push
call
pusha
sbb
leave
and
xor
mov
or
inc
sbb
sbb
shll
ret
inc
inc
dec
lret
cli
lods
outsl
inc
push
xor
xor
mov
xor
pusha
pop
lcall
mov
pusha
inc
pop
cmc
xor
inc
jle
mov
sub
jne
sbb
pop
push
pop
sbb
lea
fs
decl
pushl
mov
mov
sbb
aas
cmp
sub
jnp
inc
ret
cmp
dec
cld
lcall
fdivl
sub
cmc
repnz
popa
mov
xchg
cmp
clc
shl
sarl
pushl
or
ss
mov
xor
and
cmp
dec
pop
fcom
or
nopl
pusha
jmp
dec
lods
xchg
dec
cs
ret
pop
push
pusha
cld
loopne
dec
jnp
rclb
mov
idiv
sbb
sub
sub
test
cmp
sbb
sub
push
add
pushf
test
idiv
xor
inc
inc
gs
dec
pusha
inc
jb
pop
ret
add
xor
fnstsw
ds
jne
inc
push
push
adc
ss
aas
adc
in
push
mov
mov
aad
addl
xchg
jb
dec
fcos
ljmp
cmp
sub
adc
das
dec
xchg
mov
or
pusha
pop
lods
pushl
mov
test
das
bound
mov
addr16
inc
decl
sub
gs
lods
or
sbb
add
adc
je
sarb
incl
lcall
insl
pop
jp
out
bts
dec
push
nop
cmp
lcall
inc
sbb
insb
dec
dec
es
into
add
push
and
sti
inc
jmp
pop
xor
and
dec
cmp
leave
mov
dec
xor
pop
jg
hlt
outsl
les
pop
popa
sbb
cmpsl
cmp
pusha
xor
mov
xor
pop
ja
call
push
mov
std
inc
sbb
jle
sbb
rcl
fcomp
loop
mov
or
push
sub
cs
aas
or
and
and
loop
loope
out
push
add
and
sub
ret
cmp
lods
lock
jg
incl
fcmovb
std
loopne
out
pop
cmpsb
adc
in
jae
push
adc
andl
lock
push
lds
call
cld
mov
out
cld
test
xchg
sbb
push
and
lcall
xor
mov
das
or
les
inc
xchg
fwait
and
and
test
cmp
fnstsw
outsl
std
lahf
sbb
pusha
push
push
xor
dec
mov
sbb
mov
jae
lcall
adc
xor
outsl
shrb
adc
aad
cli
push
out
mov
add
jmp
ja
mov
aas
inc
aad
pushl
pop
ss
push
dec
dec
pop
cmp
mov
dec
inc
sbb
dec
or
shr
nop
nop
popf
dec
ret
pushl
or
cmp
rorl
shr
jmp
xor
push
loopne
mov
aam
inc
xlat
ret
rcr
ljmp
ja
je
cmp
lcall
lock
ret
lock
test
std
push
xorl
fs
sbb
add
jmp
xchg
xor
pop
inc
pop
push
xor
inc
xchg
inc
and
and
das
dec
mov
incl
sub
mov
inc
xlat
popf
inc
leave
xor
fistl
sub
add
in
xor
jg
mov
cmp
mov
mov
je
ljmp
and
in
mov
lret
ljmp
pushl
std
cmp
std
roll
mov
inc
push
sbb
push
loop
decl
xchg
sbb
xchg
fmull
or
or
push
adc
cld
sbb
and
adc
and
and
push
mov
bound
sbb
cmp
mov
addl
sarl
and
test
std
bound
ljmp
data16
dec
lock
mov
cmp
sbb
or
xchg
lcall
inc
push
or
push
mov
stc
xor
jo
mov
jns
sub
xor
sbb
mov
dec
jg
cli
xchg
out
sub
hlt
add
test
nop
lahf
fwait
gs
sbb
loopne
jmp
xor
jnp
mov
dec
push
jg
pop
dec
xor
je
loopne
icebp
pop
pop
jo
dec
pop
jp
jo
jbe
lcall
xor
push
lret
test
add
bound
mov
xlat
loopne
xchg
idiv
sti
fucom
mov
adc
ja
pop
jne
sub
decl
dec
or
sbb
sub
ja
dec
sbb
jmp
loopne
pop
clc
push
stos
adc
push
and
jmp
ror
sarl
outsb
jg
sar
jl
xor
popf
cmp
ss
jg
adc
ljmp
and
mov
xor
xchg
dec
dec
sbb
jo
sbb
mov
sar
jmp
jnp
push
or
xor
push
sbb
mov
mov
mov
jmp
xor
pop
jne,pn
aaa
xchg
inc
or
add
push
dec
dec
and
lock
int3
dec
sub
push
scas
call
pusha
and
aaa
dec
inc
inc
mov
lcall
ljmp
mov
cmpsl
mov
leave
mov
mov
xchg
test
aad
sub
mov
inc
jnp
pushf
add
call
xchg
into
xchg
xchg
rcr
ffree
xchg
xchg
fucomp
jl
mov
cmp
or
mov
pop
inc
cmp
sahf
xor
dec
call
cmp
test
imul
sbb
in
faddl
cld
incl
insl
stos
jae
andl
jl
jns
sti
jg
cwtl
addr16
ficoml
sti
inc
xor
cmp
mov
aad
sbb
decl
cmpb
xchg
ret
jb
fidivrl
sub
sbbl
pop
jo
ret
pop
ret
std
xchg
loop
xor
sbb
aas
nop
inc
les
frstor
inc
jg
mov
ret
pushf
xchg
jnp
xchg
out
loopne
fnstsw
jg
sbb
inc
pusha
das
or
inc
insb
subb
mov
test
lcall
lret
pop
and
ljmp
or
orl
gs
loopne
icebp
repnz
in
cli
div
jg
add
std
inc
in
jl
xchg
sarb
push
loope
sub
xor
gs
inc
sub
xor
cmp
dec
push
xor
outsb
mov
cld
loop
push
sub
adc
imul
lcall
sbb
mov
ret
mov
pushl
add
dec
mov
popf
xor
push
je
cwtl
out
nop
inc
xchg
xchg
insl
jg
jg
adc
and
int3
xor
test
jl
lret
mov
fldt
xor
mov
jp
mov
jae
jp
roll
jp
mov
add
mov
mov
sbb
and
cwtl
mov
lcall
test
int3
test
inc
inc
xchg
rol
enter
std
pop
ret
inc
inc
push
jg
incl
fs
sbb
in
push
pop
pop
cli
incl
jle
pop
movl
std
cs
addb
xchg
jmp
ljmp
adc
mulb
nop
cmpsb
jg
lcall
mov
aad
jge
pop
dec
sub
xchg
mov
cmp
cmp
push
sbb
jmp
inc
dec
fstpl
jno
jns
std
mov
dec
or
lock
add
out
fwait
repz
jl
addr16
or
or
call
push
push
xchg
jbe
test
sarl
ret
or
int3
dec
xor
aas
mov
outsb
xchg
adc
decl
inc
int3
stos
les
jb
pop
pop
fwait
jno
add
fidivrl
decl
out
jg
fwait
xorb
xchg
loope
jecxz
andb
pusha
int3
ss
fistl
in
xor
push
mov
lcall
das
xor
cmp
mov
lret
pop
cs
out
dec
cld
call
faddl
jns
xchg
loopne
out
in
shl
arpl
rclb
stc
cli
add
in
out
or
and
outsl
push
decl
ljmp
push
push
push
cmp
cmp
ror
sbb
sbb
rol
xor
jmp
lock
xchg
jmp
enter
bound
and
ficoml
or
xor
out
notl
jne
cltd
nop
sub
xchg
sbb
push
mov
shll
clc
test
or
jnp
scas
aad
es
jge
mov
pop
ljmp
inc
scas
mov
pop
and
dec
mov
repz
std
es
sub
push
jg
jg
mov
ret
test
sub
rdmsr
pusha
mov
jmp
lret
jmp
and
inc
jg
out
in
add
xor
cs
mov
inc
xor
jecxz
aam
pushl
sbb
dec
sbb
aad
jp
jns
sbb
fstpl
in
jecxz
loop
incl
xchg
popa
stos
xor
ret
sbb
call
nop
xchg
xlat
mov
mov
sub
or
leave
sar
jg
jnp
mov
sbb
jb
adc
fisttps
xchg
adc
and
rcrl
imul
mov
leave
mov
pop
ret
bound
push
sbb
ret
mov
pop
jp
movsl
icebp
cmp
mov
xchg
mov
decl
es
jp
fwait
xchg
lock
arpl
gs
pop
jecxz
insb
ds
jno
inc
xchg
cmc
fdivl
cmc
test
jg
leave
push
mov
pushl
pop
xor
xor
sbb
mov
adc
scas
pusha
les
test
outsl
hlt
sbb
lret
cmp
ret
idiv
mov
jmp
adc
dec
cmpsb
scas
sbb
xchg
jnp
popf
and
scas
dec
out
and
xchg
pushf
lods
ljmp
sbb
xor
pop
sub
sub
sbb
int
sbb
shlb
xchg
ljmp
and
dec
or
insl
cmpsb
jns
pop
bound
pop
mov
xor
lcall
xorl
xchg
into
movsb
cmp
jno
push
stos
data16
pop
cmpsb
sbb
ret
dec
cmpsb
or
push
aad
popa
cli
movsl
decl
or
add
les
inc
outsb
jnp
or
outsl
adc
mov
outsb
es
dec
adc
movb
cwtl
fwait
mov
repnz
cmpsb
pop
inc
xorb
das
mov
movsl
lods
leave
dec
cmp
pop
pop
dec
inc
cmp
jmp
and
inc
out
mov
cli
adc
movsb
out
sti
mov
call
out
add
xlat
out
mov
pop
sub
jmp
out
and
xchg
or
call
lret
lea
pop
xor
push
jmp
cli
fbld
pop
cmp
cmp
sbb
jg
jns
adc
mov
mov
adc
or
ret
xchg
dec
outsl
testb
stc
imul
xor
dec
inc
xor
ljmp
and
inc
in
xchg
cmc
push
sbb
cmp
icebp
xchg
lahf
sbb
fiaddl
icebp
mov
xor
movsb
fldt
ja
int
pop
pop
repz
mov
test
sbb
outsb
and
mov
je
pusha
fwait
pop
das
movsb
lods
pusha
lods
cmp
mov
push
push
mov
fnstsw
jno
or
xlat
mov
inc
pop
iret
sbb
sub
mov
loope
loope
mov
fildl
add
pop
sbb
xchg
nop
shll
xchg
cmp
lods
mov
call
in
jnp
test
sbb
inc
pop
pop
inc
int
jg
dec
pop
sti
std
outsl
cld
push
mov
cmp
dec
and
loopne
decl
sbb
sbb
mov
and
fbstp
xor
pop
mov
pop
fbstp
and
outsb
jb
ret
cmp
loope
pushf
mov
test
pop
adc
pop
adcb
xchg
movaps
pop
jb
xchg
sub
test
or
leave
fwait
jns
scas
jb
sub
aam
xor
push
repnz
rolb
inc
mov
out
jg
lcall
lcall
push
xchg
ljmp
test
and
cmp
call
outsl
icebp
mov
repnz
arpl
fs
xchg
add
xlat
ja
stos
aad
mov
cld
decl
aas
pop
dec
rcrl
and
push
aas
aas
cmp
imul
call
adc
or
addl
test
pushl
push
clc
jb
test
addl
scas
mov
or
jb
ret
call
jecxz
leave
dec
dec
jmp
push
push
xchg
jmp
mov
and
xor
sub
fs
xor
pop
sbb
je
pop
fnstsw
jno
pop
pop
fs
test
pushl
add
scas
or
test
aam
fisttpll
sbb
arpl
je
pushf
sub
sbb
mov
push
dec
lret
jno
xor
fs
movsl
decb
mov
mov
dec
push
int3
imul
lret
clc
incl
ljmp
push
sbb
mov
out
fs
cld
fucomip
pop
loopne
mov
bound
imul
jns
push
lcall
call
pop
and
cmp
insl
cmp
xchg
fdivrs
push
sub
out
lods
lcall
push
sbb
adc
pop
imul
pop
int
dec
inc
jecxz
xor
das
popf
cmp
push
cmpsl
stc
enter
dec
jl
sbb
xor
jmp
lods
outsb
pop
xor
insb
ficoml
add
inc
loop
jae
bound
test
je
push
or
jae
ja
popa
xor
inc
xor
test
aaa
mov
jno
fildll
je
jae
mov
xor
cmpsl
mov
mov
loopne
add
jle
jns
decb
in
pop
out
cli
xchg
jo
lock
mov
and
add
xor
jecxz
cld
call
loope
cltd
lea
pop
jo
sbb
push
mov
cmp
push
dec
dec
mov
lcall
shrl
push
gs
lret
cmp
add
iret
adc
lcall
add
ret
fistps
es
aam
jo
sar
call
pop
out
mov
ret
jb
xchg
jmp
cmp
mov
sub
arpl
lods
fwait
sbb
fistpll
dec
dec
outsb
mov
sub
xchg
push
push
cmpb
xor
call
dec
and
movsb
xor
sub
lods
jno
xor
loopne
sti
xor
add
adc
cmp
xor
test
xchg
cs
leave
mov
sahf
or
xor
testb
jmp
add
push
xlat
cltd
and
dec
mov
cli
add
pop
in
les
jmp
lock
rcr
push
mov
aad
in
pop
cld
fisttps
sbb
mov
imul
jmp
in
push
int3
nop
adc
daa
sbb
loope
lret
jge
inc
pushf
xor
lock
daa
cmp
inc
rcrl
incl
mov
xor
mov
stos
aam
das
enter
js
jmp
dec
sub
fwait
inc
sbb
xchg
jae
lds
mov
xor
lods
mov
xor
pusha
das
inc
xor
idiv
aaa
or
sbb
pop
and
pop
mov
xor
inc
sbb
push
inc
push
mov
mov
xchg
add
mov
adc
or
jmp
sbb
lock
ss
aaa
dec
dec
sbb
inc
sbb
in
inc
iret
sub
sar
fidivl
pop
xor
das
cmc
decl
dec
adc
or
test
sub
xchg
loop
push
daa
mov
sub
incl
mov
xchg
int
ret
push
into
push
pop
roll
adc
and
sub
insb
pushf
es
loopne
jmp
jecxz
push
mov
add
dec
xor
mov
push
dec
and
jmp
pop
repnz
fwait
es
mov
dec
mov
pusha
jno
mov
mov
dec
loopne
sbb
sbb
mov
and
decl
stos
xchg
insl
sbb
adc
xor
jnp
sub
retw
push
enter
inc
fistps
xor
dec
adc
jg
fcom
shlb
call
push
push
pop
aas
dec
push
xor
incb
decl
push
addr16
mov
in
mov
mov
jne
push
in
incl
and
ss
inc
cwtl
sub
ret
push
xchg
and
sub
adc
test
jb
fnsave
mov
aaa
clc
push
sbb
cmp
les
fs
or
hlt
jl
arpl
in
xchg
cmp
adc
roll
and
pop
mov
push
shrl
in
movsl
mov
mov
cltd
mov
imul
ret
out
andl
faddl
sbb
jg
std
ljmp
cmpsl
xor
xor
orl
rol
inc
sahf
imul
aam
call
push
and
cmp
lods
test
jb
rclb
aad
mov
jge
xchg
push
das
and
sbb
sub
jge
cmp
shl
sbb
and
xchg
pop
adc
xor
fisttpl
inc
jg
in
pop
dec
xor
add
sti
or
mov
jl
or
out
pop
inc
lods
jle
adc
sub
pop
xor
pop
jno
cmp
incl
out
push
pop
jae
or
mov
mov
mov
mov
es
inc
sbb
dec
ret
dec
lock
ljmp
arpl
and
enter
mov
iret
cmp
adc
dec
sbb
cli
mov
jo
mov
push
add
fisubl
ss
sub
into
dec
inc
ljmp
bound
sbb
add
data16
inc
ds
pop
sti
push
je
or
add
and
xor
inc
das
and
aad
or
xor
pusha
rclb
gs
xchg
cli
decl
dec
xor
sbb
pop
jnp
add
mov
xor
insl
mov
jmp
clc
ljmp
mov
dec
xchg
scas
jae
aaa
movsl
mov
cmpsb
out
or
dec
incl
jg
mov
mov
ret
xlat
popf
testb
sbb
les
out
mov
dec
cmpsb
sbb
push
enter
sub
xor
ret
fwait
xor
jge
jge
pop
inc
dec
loopne
incl
frstor
fcomps
mov
dec
out
pop
lret
das
cmc
pop
ss
push
xchg
ret
clc
and
sbb
lcall
hlt
jbe
add
and
dec
and
sbb
fstl
cli
ljmp
mov
xchg
dec
pop
loope
pushf
cmp
sbb
push
lahf
out
mov
clc
outsl
fildll
sbb
stos
stos
inc
adc
lret
cmp
cmp
mov
in
pushl
jg
cmp
mov
cs
sbb
mov
mov
xor
test
aad
push
jns
cwtl
in
call
cli
or
inc
xchg
dec
ss
incl
add
mov
mov
aad
addr16
imul
push
ja
ret
dec
sbb
push
call
dec
cmp
repz
sub
rcll
xchg
inc
fwait
push
mov
ljmp
dec
cmp
and
in
sub
and
sub
jbe
jns
add
and
stos
out
mov
ja
push
icebp
or
ljmp
xor
add
movsb
sbbb
add
lock
pop
and
mov
adc
mov
aaa
fisubrl
mov
mov
xchg
jne
ret
xor
pushl
jle
lret
shrb
icebp
dec
sbb
sbb
imul
jmp
loop
push
sti
xor
push
aaa
jg
insl
jae
dec
pop
jo
push
jg
aaa
inc
push
and
sbb
inc
push
cmp
das
rclb
or
ret
popf
aam
stos
dec
xchg
pop
loopne
cld
mov
adc
in
std
jg
lock
pop
xchg
inc
outsb
push
push
in
xchg
imul
fbld
push
insb
xor
ljmp
lret
xor
mov
inc
pop
xor
xor
loope
js
push
jmp
inc
test
sub
jp
mov
jmp
pop
xor
jmp
mov
pop
lret
out
aad
cli
mov
sbb
mov
add
mov
mov
in
loop
adc
popa
dec
pop
sbb
fmull
in
rorb
add
pop
gs
in
mov
decl
or
cli
cmp
rorl
jp
pop
jae
fbstp
ret
push
jl
int
xlat
and
mov
or
mov
fdivrs
fcomps
adc
pop
orl
das
adc
insb
pusha
lahf
xor
push
into
dec
shrl
push
jno
sub
in
in
mov
mov
inc
mov
rcrl
call
mov
adc
lcall
push
test
mov
pushl
enter
leave
dec
mov
sbb
or
mov
addr16
sub
popa
sbb
or
jg
lea
xor
pop
or
mov
enter
sbb
xchg
sub
mov
jmp
movsl
jge
cmc
cmp
imull
or
jp
or
ljmp
dec
mov
daa
xor
mov
daa
adc
sbbl
inc
in
dec
xchg
lods
sbb
cmpsl
add
sbb
inc
xor
jnp
mov
and
int
xor
jne
out
sbb
sbb
xchg
std
lods
fdivrp
mov
inc
dec
orl
pop
notl
sbb
fisttpl
sub
scas
jle
mov
mov
cld
dec
sbb
add
in
lock
adcl
in
xor
sti
pop
call
add
movsl
aad
mov
pop
sbb
fcomip
pop
in
aad
jnp
push
and
sbb
bound
push
lret
addr16
jl
and
or
jl
jl
jns
jg
jae
sarl
pop
ljmp
dec
adc
pop
jl
pop
cmp
dec
daa
cmp
adc
xchg
cmp
sbb
inc
sahf
pop
stos
mov
dec
xchg
sbb
int3
push
in
jg
outsl
cld
jb
mov
aas
das
inc
sbb
mov
jmp
mov
jg
jae
adc
push
jbe
and
ret
lcall
push
mov
fwait
in
mov
aaa
fs
in
mov
mov
orl
addr16
push
pop
adc
fucom
out
xor
negb
sub
sbb
mov
mov
adc
ljmp
std
gs
mov
cmp
ss
out
hlt
jmp
push
xchg
jae
adc
incl
ss
pop
and
arpl
push
push
sub
sti
pop
jg
inc
loop
jg
or
int
and
cmc
repnz
xchg
lcall
std
jmp
adc
fldz
mov
xor
pop
inc
jb
je
sbb
push
adc
std
pushl
dec
xchg
scas
mov
dec
xor
pop
clc
mov
cmpsl
dec
push
mov
push
cmpsb
sbb
push
mov
clc
stc
mov
dec
icebp
cli
sbb
cmp
xchg
push
and
add
pop
or
push
gs
imul
test
lcall
ljmp
inc
or
mov
or
dec
lock
dec
cld
adcl
or
lock
push
jg
stos
inc
out
sub
sub
ljmp
jmp
jle
movsb
mov
popa
jecxz
subb
es
enter
sub
ljmp
lods
adc
add
std
sbb
mov
jb
popa
push
sbb
jle
jmp
jg
decl
mov
out
and
add
push
out
adc
loopne
incl
or
push
sub
fsubs
dec
pop
mov
xor
decl
fmul
cmp
sbb
repz
and
dec
or
sbb
xor
add
and
dec
cld
jg
orb
pop
adc
dec
push
sbb
xchg
outsb
sbb
pushl
into
cmpsb
push
movsb
mov
cmp
push
xor
mov
xor
fwait
addr16
jno
sbb
lds
mov
cmp
pop
jp
jno
fistps
int3
lcall
pop
pop
mov
movsl
mov
inc
ljmp
push
or
and
icebp
mov
call
and
cld
inc
or
jg
decl
or
sbb
jnp
cli
xchg
cmp
pop
stos
fstpl
xor
mov
out
addr16
loop
adc
xor
in
xchg
pop
movsb
shll
les
popf
addr16
andl
das
cmc
sbb
pushf
jo
sbb
imull
xorb
std
pop
pop
mov
out
push
loope
add
xchg
xchg
dec
jg
outsl
jg
mov
das
or
std
and
xor
cmpsb
pop
paddd
and
sbb
fwait
sub
lcall
in
iret
mov
sub
push
or
pusha
and
loop
xor
sbb
decb
in
repnz
movb
or
movsb
pop
xchg
fucom
sub
mov
cld
or
lods
xchg
syscall
adc
pop
jge
xlat
push
push
cmp
clc
incl
jne
or
jne
fcmovnu
xchg
or
push
lods
pushl
fistps
xor
xchg
adc
shl
push
ljmp
pop
roll
sub
sub
cmp
mov
jg
ljmp
movsb
sbb
push
sub
stos
test
ljmp
fistpll
lds
push
enter
jg
pop
scas
mov
add
mov
pop
inc
jb
mov
nop
pushl
incb
sub
fdivs
imul
in
icebp
sbb
pop
mov
idivb
dec
call
fidivs
sti
test
enter
incl
push
aam
dec
dec
sub
or
lret
stos
inc
popa
daa
fistps
cmp
dec
adc
or
adc
sar
fistl
jo
jle
or
mov
inc
sbb
sti
mov
xchg
outsb
das
pop
xchg
dec
les
sub
and
xchg
subl
dec
dec
push
incl
fwait
mov
and
scas
lds
jge
mov
and
scas
push
pop
sub
gs
das
lds
inc
mov
xchg
stos
jns
push
xchg
xor
shrl
loopne
in
out
inc
add
cmpsl
mov
or
sbb
fsub
loope
cmpsb
dec
popa
and
fwait
mov
bound
xchg
sub
into
popf
fucomp
pop
test
cmp
xor
dec
decl
ljmp
out
jne
adc
dec
movsl
push
mov
push
mov
lock
sub
push
lahf
lods
call
int
out
xor
sbb
notl
mov
jmp
xchg
cld
lcall
jecxz
or
push
fwait
dec
int3
in
adc
fwait
je
ret
cld
lcall
mov
test
pop
pop
movsl
mov
xor
ja
ljmp
or
in
call
pop
xchg
or
sub
out
cld
ret
or
add
or
fcompl
divl
fildll
xchg
sbb
mov
ficompl
xor
test
inc
mov
push
sar
lcall
sbb
push
cmp
fistps
addl
cmpsl
dec
ret
fucomip
mov
sub
adcb
sbb
gs
mov
stos
jno
rol
or
pop
fbstp
mov
lea
jno
and
mov
jne
inc
dec
scas
mov
inc
gs
lcall
decl
ret
ret
xor
jne
cmp
xor
popf
xchg
cli
incl
xor
dec
xorl
jmp
popa
pushl
or
loope
mov
jge
mov
cmc
dec
outsl
push
test
jg
add
in
aaa
rcll
imul
mov
aas
call
decl
ret
adc
orl
xchg
mov
inc
mov
mov
push
fsubl
outsl
xor
adc
adc
in
mov
les
mov
or
xchg
cmpsb
fisttpl
imull
dec
xor
sub
inc
daa
out
mov
mov
pusha
mov
mov
mov
cmpsb
pop
or
xor
jnp
jp
and
test
cmpsb
add
idiv
inc
xor
fidivrs
sbb
mov
pop
xor
test
loope
lods
cmpsl
nop
lds
aas
movsb
cwtl
push
and
cmp
sub
sub
mov
and
or
inc
ret
jmp
sbb
or
imul
mov
dec
xor
inc
sbb
sub
gs
mov
cmp
outsl
ret
daa
cmpl
jno
mov
clc
hlt
xor
orb
xor
lcall
frstor
or
mov
aad
jbe
sbb
mov
iret
outsl
xor
insl
pop
sbbb
jp
arpl
lcall
inc
add
jg
gs
push
sub
push
or
xor
call
jo
cmpsb
loopne
push
mov
inc
xlat
push
push
fs
push
leave
push
add
sub
adc
sti
movd
adc
mov
xor
push
sbb
orb
inc
icebp
jg
pop
push
das
and
leave
or
sbb
or
dec
cmp
insl
xchg
hlt
in
ljmp
inc
sbb
jl
sub
pop
add
mov
xor
je
push
pusha
outsl
jno
jg
dec
jae
popa
ffree
xchg
mov
mov
lcall
in
fwait
pop
xchg
xchg
aad
dec
xchg
sub
adc
mov
pop
in
cmp
icebp
push
std
sbb
cmpsl
divb
push
pushl
loope
and
mov
fcmove
mov
cld
pop
sub
pop
cmp
daa
push
das
xchg
or
in
decl
int3
sbb
or
xlat
push
sbb
sbb
adc
outsl
repnz
ds
subl
popf
ja
gs
cs
mov
adc
sbb
sub
outsb
xor
add
adc
mov
stos
pusha
xor
mov
dec
insb
sbb
ljmp
insl
dec
pop
sarb
div
fwait
les
sbb
adc
decl
test
daa
je
scas
xor
jge
test
lock
xor
pop
mov
idiv
outsl
iret
xlat
fadds
or
sti
or
stos
xchg
clc
fsubl
adc
ds
nop
or
notb
add
cmpl
fimull
or
popf
pop
inc
int3
test
in
mov
lahf
add
jge
arpl
xor
pop
cli
pushl
add
sbb
out
xor
lds
mov
jg
jb
je
outsl
cld
incl
pusha
inc
movsb
movsb
add
add
rcll
adc
jg
icebp
call
or
jl
mov
and
popa
mov
sub
and
aad
add
dec
jnp
cli
decl
push
test
idivb
ja
idiv
xchg
les
inc
mov
dec
fsubs
mov
leave
stos
pop
push
or
inc
jl
xor
call
mov
xor
xor
lahf
adc
loopne
insl
push
xor
cmc
mov
mov
inc
aaa
pop
sbb
lahf
xor
xlat
sar
decl
and
add
iret
into
into
inc
mov
mov
push
xor
mov
or
and
imul
cli
sub
icebp
popf
dec
xchg
test
shll
or
mov
shrb
data16
sti
stos
sar
push
ljmp
fdiv
in
xor
or
fcompl
adc
inc
sarb
imul
clc
decl
dec
cmp
add
bound
fdivl
ljmp
test
dec
pop
adc
xor
test
and
cmp
sub
cmp
sub
xor
mov
jg
jl
das
loop
ljmp
adc
into
leave
into
out
pop
mov
jo
xor
push
fildll
test
dec
mov
std
outsl
pop
pop
enter
les
insl
cmpsb
and
ljmp
mov
mov
in
xchg
jl
fcomp
out
es
in
sbb
or
push
xchg
mov
mov
and
jnp
lea
pop
sbb
fcoms
shl
decl
imul
cmp
pop
pushf
test
hlt
gs
ljmp
add
cmp
insl
or
cmpsl
xchg
pop
push
pop
xor
jns
sbb
fcmove
xchg
mov
gs
dec
dec
lods
mov
gs
mov
hlt
adc
fiadds
mov
push
pop
dec
cs
sub
cld
mov
pusha
xor
sti
fists
pop
mov
jo
lcall
clc
ljmp
push
iret
inc
int
and
cs
scas
inc
or
mov
mov
push
dec
or
adc
test
ss
int
xchg
loop
mov
in
jnp
add
call
in
notb
push
and
inc
add
stos
std
ljmp
popa
jo
cs
cmp
fstps
push
push
cmp
sti
adc
std
lcall
outsl
sub
into
pop
adc
mov
xchg
lods
adc
js
pop
mov
dec
mov
xlat
andl
jmp
sbb
push
sub
jecxz
leave
xchg
cli
xor
insb
jb
adc
mov
jp
mov
mov
pop
mov
jbe
jle
inc
pop
ljmp
mov
mov
or
sbb
xchg
incl
push
aam
mov
adc
ljmp
dec
and
sti
mov
in
sbb
push
outsl
mov
xchg
fisubrl
gs
xchg
je
ljmp
xchg
arpl
data16
iret
and
fs
push
call
dec
jle
jnp
dec
std
mov
subl
out
adc
pushl
jnp
jp
data16
jl
sub
out
pop
pop
mov
dec
sub
decl
pop
pushf
pop
jge
int3
pop
scas
dec
sbb
push
fcoms
movsl
cmp
dec
xor
lds
mov
mov
cmc
add
dec
pop
mov
add
aad
out
ljmp
leave
and
divl
ljmp
jnp
mov
and
aaa
jmp
or
stos
out
mov
in
mov
clc
pop
push
cmp
imul
xor
call
pop
sbb
fimull
and
push
xchg
mov
or
jg
ret
nop
or
ja
push
jnp
shll
xchg
dec
cmp
lcall
mov
outsb
and
mov
pop
je
stc
mov
std
outsb
mov
jecxz
jne
add
mov
das
or
sbb
adc
or
pusha
cmp
sub
mov
mov
iret
xchg
xor
pop
jle
dec
into
hlt
inc
jecxz
push
subb
lret
xchg
ds
xor
rolb
popl
cli
fmuls
decl
aaa
cltd
fdivr
cld
pop
loopne
iret
inc
sbb
call
xor
push
push
pop
mov
js
or
inc
fnstsw
aaa
sub
mov
or
jns
ljmp
sarl
jp
jl
xor
or
nop
push
jg
shr
adc
es
jp
mulb
pop
cld
pop
addr16
and
in
or
mov
inc
push
inc
add
and
mov
in
cli
mov
sbb
ljmp
sbb
adc
xchg
mov
sbb
lcall
mov
cli
or
cmp
push
sbb
in
push
push
lock
out
test
fisttpll
sbb
decl
dec
ret
cld
lcall
ret
push
sbb
xchg
fiaddl
mov
decl
push
cmp
cmc
sub
mov
xchg
aas
add
cs
jmp
jl
mov
cltd
and
jp
nop
mov
cs
cld
lea
paddsb
std
cmp
jg
in
push
fldt
imul
hlt
mov
test
out
xor
mov
test
fs
xor
xor
xchg
out
lds
jne
inc
sbb
dec
xchg
xor
xchg
add
gs
sbb
repnz
adc
out
imul
aad
out
add
aad
lock
mov
sbb
add
imul
adc
push
stos
dec
popl
int
sbb
cmp
fnstsw
mov
aas
adc
sbb
call
lcall
push
cmp
roll
cli
popa
jge
cmp
call
add
test
sbb
cld
ljmp
scas
ja
ror
loope
and
les
jg
mov
bound
sub
outsl
adc
and
sbb
ss
inc
loope
call
push
movb
mov
and
xchg
mov
mov
xlat
add
or
cltd
pop
and
cmp
mov
call
xor
cmp
sbb
scas
idivl
push
pop
cmp
movb
xchg
inc
sbb
cld
sbb
ljmp
testb
and
inc
imul
pop
adc
ss
das
stos
pop
imul
mov
mov
popa
lock
lahf
adc
jg
ljmp
mulb
mov
lds
outsl
mov
push
pop
scas
mov
cmpsl
incl
das
cmp
sub
ja
xchg
bswap
push
xor
sbb
in
in
xor
ret
sbb
push
call
add
dec
xchg
aas
inc
loope
jg
in
jmp
push
jle
dec
testl
ret
jne
mov
xchg
aas
pop
cmp
pop
cmp
jg
pop
or
adc
ds
or
add
jmp
xchg
dec
decl
and
mov
test
sahf
mov
or
or
jg
mov
data16
jg
sbb
xor
inc
mov
push
ror
or
or
xor
fwait
and
mov
sbb
sbb
and
xor
xor
aaa
xor
push
incl
insb
pop
jp
sbb
comiss
mov
push
inc
mov
adc
daa
cmpsl
ror
jmp
sbb
or
test
push
mov
aas
adc
sbb
sbb
mov
psubd
sbb
add
inc
sbb
int
add
jge
sti
add
push
mulb
fists
xchg
arpl
repz
orb
aas
xchg
cmp
cmpsb
mov
movsl
jns
push
sbb
push
lds
adc
rclb
fists
inc
mov
call
call
loope
sbb
sbb
insb
sahf
xor
jg
jmp
dec
mov
in
mov
es
pusha
leave
cmp
outsl
lock
bound
cmp
pop
and
ss
mov
dec
call
les
push
dec
dec
or
iret
inc
cmc
adc
push
ss
je
inc
inc
idivl
insl
cmpsl
or
or
inc
jae
out
inc
sub
mov
cld
outsl
cmc
jmp
lret
fisubs
xchg
lock
lea
cld
sbb
add
cmc
adc
sbb
or
orl
add
add
mov
dec
xor
xor
pop
ss
mov
aas
lret
cwtl
fs
xchg
daa
jbe
mov
call
jle
mov
mov
and
mov
mov
dec
mov
repz
adc
or
mov
sbb
mov
mov
xor
mov
pop
cmp
dec
pop
cmp
je
lea
cli
inc
or
cmpsl
inc
mov
pop
or
pusha
ljmp
movsl
add
cmpsl
cmpsb
jle
push
ljmp
fs
sbb
mov
mov
mov
dec
xor
add
sbb
sti
popf
sbb
cmp
inc
pop
loopne
out
aaa
sbb
inc
dec
sti
jnp
nop
loop
push
pop
cld
pop
adc
cmc
lea
cmp
fildl
gs
out
sub
inc
xchg
ret
dec
pop
mov
fists
dec
inc
pop
fbld
xchg
jb
xor
in
sbb
mov
mov
or
mov
jb
adc
in
fwait
adc
dec
jge
push
adc
ljmp
push
pushf
pop
stos
lods
dec
mov
adc
lea
adc
nop
pop
addr16
lret
arpl
popf
into
aam
push
mov
sbb
rolb
mov
lods
sbb
or
mov
pop
fnsave
mov
cltd
lret
xor
xchg
clc
adc
sbb
mov
adc
adc
push
fbstp
and
lcall
test
enter
adc
bound
je
cmp
aas
dec
loope
or
pop
popa
cwtl
gs
pop
inc
test
or
pop
ss
insb
stos
cli
incl
adc
cmp
arpl
and
daa
ja
dec
sti
push
and
push
and
stos
rcrb
pop
insb
cli
push
lahf
dec
movsb
daa
pushf
jno
incl
push
dec
pop
xor
scas
inc
cmp
je
mov
and
sbb
lcall
rcrb
in
mov
leave
mov
daa
cmp
and
jl
icebp
lods
movsl
mov
cmpsl
xor
adc
ss
arpl
lcall
shrb
push
sbb
and
fdivs
sbb
push
mov
add
mov
das
sub
pop
mov
stc
fnsave
js
cmc
xor
pop
jle
xor
push
pop
add
pop
lcall
cli
pop
gs
lods
dec
push
adcl
ss
loopne
hlt
xchg
push
ljmp
jmp
mov
push
or
sahf
sahf
dec
pop
pop
sbb
loopne
sub
incl
xor
mov
and
lahf
pushf
test
das
xlat
imul
pop
les
mov
les
call
out
outsl
jmp
pop
lcall
aad
or
decl
andb
addr16
xchg
mov
adc
dec
add
adc
shrb
lock
jnp
notb
pop
in
imul
in
pop
cmpsb
movsl
jmp
xor
movsl
or
orl
jne
fwait
push
mov
inc
pop
push
insl
cmp
and
xchg
jp
loopne
jg
dec
xchg
add
ja
push
addr16
fmull
mov
lock
push
mov
lods
lahf
xchg
sbb
lcall
sahf
and
ds
pop
sub
aad
push
sbb
add
mov
sbb
clc
je
das
cmp
xor
pop
fbstp
and
jmp
mov
std
add
and
jae
sbb
jo
outsl
fs
fldenv
pop
sbb
dec
inc
mov
cli
sbb
inc
jmp
addr16
in
sbb
call
call
cmp
jmp
xor
cli
inc
addr16
push
mov
cltd
push
ljmp
icebp
lret
jl
bound
jl
pop
out
cwtl
mov
mov
pop
loop
and
push
xor
lcall
decl
shrl
add
cltd
push
ljmp
inc
das
mov
das
icebp
inc
xor
add
cmc
fists
mov
in
adc
inc
and
inc
cmpsb
inc
xor
sbb
mov
mov
fcmovne
dec
sbb
nop
adc
adc
or
stos
outsb
inc
and
mov
jo
jle
mov
jg
push
aaa
jge
out
cs
mov
cmpsl
push
add
das
sti
loop
stc
inc
jge
sbb
push
and
test
fiadds
incl
inc
sbb
adc
xor
cmp
call
xchg
stos
sub
xor
push
fs
imul
xor
mov
jb
push
sbb
dec
sbb
aad
sbb
pop
clc
lcall
xor
xor
push
fwait
mov
jl
incl
jae
adc
xor
lods
lcall
cmc
xor
in
adc
sbb
in
jo
lds
xor
or
data16
gs
pop
mov
cmp
sub
repnz
cmp
in
out
mov
cli
dec
std
mov
xor
lcall
sar
call
fisttps
adc
cmp
out
pop
loopne
dec
les
pop
xchg
cmp
dec
cld
mov
ds
mov
dec
sbb
js
jne
dec
inc
decl
test
mov
dec
arpl
mov
sub
stos
inc
pop
loop
negb
stos
insl
pop
pop
push
stos
lcall
pop
jne
lcall
cmp
xchg
lcall
xchg
sbb
sbb
mov
mov
leave
sbb
push
sub
aas
xor
push
mov
call
mov
notl
jns
add
push
sub
data16
call
pushl
ja
inc
adc
xor
insb
adc
jg
lds
cmp
ret
jno
insl
and
insl
dec
movsl
pop
add
stos
dec
and
rol
xor
sbb
inc
pushf
and
jmp
pop
pop
or
pop
int3
xchg
adc
aas
das
je
mov
les
sbb
mov
xor
lock
pop
adc
cmpl
push
dec
xor
jg
out
das
mov
jae
stc
sbb
inc
mov
adc
push
in
outsl
std
or
xchg
cs
mov
push
jp
aam
xor
lods
repnz
or
pushl
decb
lods
inc
mov
les
outsb
ljmp
inc
add
sbb
cld
cmp
ljmp
push
cmp
dec
add
sbb
or
or
sub
addr16
fldt
bound
mov
add
sbb
outsl
inc
and
outsb
push
jmp
xor
mov
xchg
and
jnp
icebp
int
aad
fwait
cmp
jo
incl
mov
mov
mov
stos
mov
ss
or
mov
or
out
xchg
inc
sti
xchg
lahf
cmpsl
add
leave
cmpsl
idivb
mov
push
mov
or
idivb
xchg
mov
sarl
dec
hlt
mov
out
jo
push
push
push
cltd
ljmp
inc
dec
jo
mov
cmp
jp
inc
add
sti
cmp
call
jge
lods
and
sti
sahf
add
pop
push
dec
dec
xor
push
js
lcall
test
pop
xchg
jp
cmp
mov
xchg
das
hlt
jg
stos
mov
jg
mov
hlt
xchg
adc
jg
dec
or
leave
jne
or
mov
or
mov
jge
push
pop
jae
fildl
mov
clc
jg
jmp
mov
xor
sbb
out
stc
adc
sbb
push
popf
xorb
lret
jnp
jb
pushf
pop
xchg
movsb
jns
rcrl
lock
and
sub
dec
or
pop
xor
decl
dec
push
icebp
xchg
push
mov
mov
adc
lock
adc
ja
data16
loop
adc
jns
jnp
cmp
decl
cmp
jp
jp
outsb
or
cmpsb
and
push
or
stos
xchg
mov
adc
fisubrs
outsb
pop
push
cs
mov
jae
push
movsl
cs
xchg
cmp
xchg
or
jg
add
xchg
pop
xchg
add
adc
jno
inc
test
repnz
dec
scas
jae
mov
cltd
jp
adc
push
pushl
orb
dec
xor
xor
sbb
out
pop
pop
inc
add
lock
orl
xor
aaa
lcall
repz
int
pop
into
jnp
inc
lods
and
pop
mov
add
push
pushl
jp
dec
jae
je
adc
dec
mov
arpl
sbb
inc
jns
mov
lahf
mov
sbb
lea
incl
push
pusha
add
add
sbb
adc
pop
add
jg
in
add
pop
lret
and
mov
adc
add
pop
add
movsl
pop
ljmp
adc
add
push
aad
jmp
add
mov
or
sbb
mov
adc
or
pop
stos
mov
jae
outsl
in
pop
xor
scas
pop
push
adc
stos
push
pop
rolb
inc
inc
or
movsl
push
clc
outsl
push
loopne
pop
scas
push
push
or
jg
pushl
mov
cmc
cmp
dec
sub
mov
xor
xchg
xlat
pop
inc
in
push
mov
push
stos
cli
and
sbb
pop
jp
in
repz
or
push
sub
xlat
sarb
fildl
dec
ljmp
cmp
aaa
push
stos
push
cmp
std
out
js
xor
xor
sbb
jg
xchg
pop
dec
icebp
push
mov
cld
loopne
in
sbb
xor
addb
jne
push
push
mov
sbbb
cmp
shlb
call
loopne
sbb
adc
jb
cmp
mov
jb
imul
cmp
jo
jg
fists
push
insl
or
ljmp
and
dec
shl
insb
js
fistpll
ds
jae
andb
pop
push
pop
loop
mov
sbb
fs
lock
ljmp
jno
shrb
inc
inc
aaa
inc
pop
inc
push
inc
pop
dec
inc
sbb
fsubl
dec
bound
repz
pop
push
xchg
shl
add
jne
movsb
jb
jg
ljmp
inc
cmp
xchg
repnz
pop
jb
cmpl
shlb
cmp
test
fbld
movsb
sbbb
aam
daa
dec
popf
pop
lahf
mov
jl
decl
mov
js
pop
outsb
push
jo
gs
push
outsl
mov
js
dec
jno
or
incl
jl
push
pop
inc
sbb
mov
stos
inc
push
pop
cwtl
std
andps
xchg
push
mov
push
add
push
or
sar
aas
and
cli
gs
sbb
sti
adc
decb
or
fucompp
cmp
and
push
adc
inc
je
adc
xchg
or
lcall
jge
or
inc
gs
pop
sbb
and
aas
jge
mov
add
fucomip
loop
frstor
xor
mov
mov
jle
packsswb
pop
or
inc
adc
dec
and
or
in
sbb
lds
adc
clc
pop
jge
lret
mov
mov
imul
outsl
cmp
cmp
add
jg
mov
adc
add
mov
add
adc
xchg
add
dec
push
loopne
xchg
and
ja
mov
jae
adc
mov
push
push
xchg
jbe
pop
js
ss
mov
or
in
cmp
mov
or
mov
das
into
or
and
test
xchg
add
push
inc
hlt
out
call
add
popl
inc
xchg
dec
jp
out
push
call
push
xchg
cmpsl
or
mov
or
aam
fcomi
mov
cld
mov
sub
in
inc
push
jl
test
incl
or
in
or
leave
cs
test
in
push
cmc
sti
lods
jne
cmp
mov
out
pushl
jns
nop
daa
mov
mov
clc
push
pop
pop
fwait
or
mov
lcall
jle
in
dec
push
dec
std
cmp
divl
or
or
and
jl
adc
add
fstl
pop
popl
pop
shll
lds
pop
push
add
ja
push
sbb
mov
pop
add
into
lea
push
jg
aas
mov
mov
out
pop
pop
nop
out
or
fisttpll
or
lea
nop
int
sbb
pop
leave
lods
jmp
push
jg
nop
jmp
pop
lcall
mov
outsb
pop
pop
mov
dec
sub
mov
and
mov
push
test
mov
lds
pop
adc
push
add
jnp
dec
add
add
sbb
or
mov
lret
test
test
and
lcall
dec
or
fs
cs
jge
xchg
nop
movsl
and
in
push
jb
xchg
test
mov
mov
xor
lea
cld
jge
and
or
mov
push
jmp
lods
cmp
shr
cmc
fcoms
adc
mov
int
pop
add
dec
add
mov
cmovle
or
mov
inc
jae
ja
sub
gs
mov
add
mov
add
je
and
aaa
cmp
ds
addr16
jmp
dec
and
xor
js
int
rclb
and
movsl
data16
jns
and
add
lods
jmp
ss
outsb
aaa
jae
xor
out
push
add
inc
jno
jns
jne
mov
and
cmp
add
test
cmp
add
mov
add
fstp
pop
mov
aaa
idivl
jae
jno
and
aaa
dec
add
xlat
push
or
jle
xlat
lods
lods
jmp
insl
daa
add
pop
outsl
jae
cs
aaa
test
cmp
lea
ret
ja
imul
or
daa
dec
add
fldenv
stos
repz
xor
and
sbb
stos
push
inc
fmull
inc
add
push
add
xorl
jns
sbb
test
and
in
dec
mov
or
outsb
sbb
es
icebp
stos
dec
pop
pop
daa
inc
movsb
imul
or
jae
jno
mov
pop
sub
jge
jno
mov
fwait
test
xor
push
fstpt
xor
imul
hlt
in
jg
push
daa
inc
inc
and
data16
mov
jno
mov
outsl
mov
sbb
jae
js
insl
adc
xor
outsb
incl
ja
js
imul
jb
adc
jnp
push
jbe
imul
outsb
imul
jo
sti
jbe
dec
dec
imul
sti
push
add
adc
mov
imul
inc
ja
sub
pop
mov
jae
jb
pop
mov
lcall
push
dec
pop
dec
dec
push
xor
xor
ja
push
pusha
addr16
jns
jne
loop
aaa
adc
mov
mov
inc
inc
sbb
mov
or
sbb
adc
mov
lret
jbe
push
mov
xor
js
dec
popa
imul
jb
xor
cmp
jno
push
and
inc
or
mov
test
push
pop
je
push
cmp
jo
push
cmp
cmp
cmp
push
and
mov
insb
cmp
adc
cmpsl
test
xor
xor
and
push
or
dec
lcall
movsb
sbb
sub
insb
xor
shlb
test
xchg
push
lods
roll
cmp
pop
mov
inc
loope
pop
push
push
dec
push
nop
and
addr16
cli
std
dec
push
push
dec
pop
or
jno
push
dec
dec
cmp
push
push
pop
adc
pop
das
pop
cmp
add
pushl
push
outsb
addr16
ja
inc
or
xchg
lret
ja
loope
outsb
adc
or
test
push
stos
push
lahf
sub
fldl
cmpsb
aas
pop
std
add
pop
enter
scas
pop
daa
sub
test
sub
scas
fcomp
arpl
pop
std
fmuls
bound
addr16
cld
push
inc
push
std
movsl
iret
aas
repnz
mov
dec
ja
daa
inc
and
sbb
mov
and
push
sub
cmp
jl
add
test
inc
inc
lret
inc
aaa
fdivrl
pop
and
mov
xor
call
push
pop
or
mov
rcll
std
or
sub
cwtl
mov
out
or
movsl
decl
fidivs
sbb
pushf
or
adc
pop
fdivp
inc
aam
ljmp
sbb
popa
push
adcb
repz
adc
or
sub
sbb
call
push
sub
ret
xor
mov
frstor
adc
or
jg
outsl
jb
mov
jns
sti
pop
adc
push
sub
dec
jg
stos
jg
lock
mov
add
mov
repnz
incl
inc
sbb
pop
or
jns
aas
inc
add
mov
or
xor
pop
loopne
icebp
nop
icebp
mov
ret
add
cli
and
push
pop
cmp
insl
sub
test
and
ljmp
add
nop
push
adc
mov
adc
std
adc
or
xchg
and
in
aam
add
insl
lods
cs
incl
and
push
pop
repnz
jae
sub
sbb
jns
clc
decl
cmp
sub
pushf
loop
pop
push
and
into
hlt
insb
mov
je
mov
push
mov
jno
inc
lods
mov
add
sub
popa
push
loopne
call
jg
cmc
adc
popf
mov
add
ret
cmp
add
loop
dec
dec
add
and
sbb
pop
mov
int3
or
pop
add
mov
sub
dec
enter
pop
jnp
mov
sti
dec
inc
push
mov
or
and
enter
xchg
xchg
xchg
sti
jg
pushl
adcl
push
adc
adc
xchg
or
jmp
ficoms
fdivs
jmp
aas
cmp
imull
mov
call
jg
mov
leave
mov
add
test
mov
movsb
mov
movsb
incl
test
cmp
mov
xchg
sti
mov
jno
jge
inc
jle
add
mov
pusha
mov
sbb
icebp
ds
pop
cmpsb
movsl
mov
nop
fidivrs
nop
inc
xor
nop
mov
pop
add
cld
in
fmull
nop
mov
jge
or
decl
incl
jecxz
push
stc
cmp
adc
fstpl
mov
xor
rcr
dec
or
lret
jb
jmp
jge
push
ss
add
pop
push
push
cmp
dec
les
and
push
xchg
jmp
sahf
int
icebp
adc
rclb
or
pop
mov
outsl
pop
cmp
sbb
idiv
sbb
or
loop
std
pop
insl
push
mov
lahf
xor
insl
xor
insl
fcmovu
cli
incl
mov
fs
jp
xchg
dec
cmc
sbb
push
xlat
add
fwait
out
ljmp
pushl
loope
sbb
cmp
mov
inc
enter
icebp
lcall
jns
notb
icebp
in
xor
push
loopne
xor
rorl
js
insb
cwtl
push
xchg
xchg
inc
jno
sub
les
inc
int
or
dec
pop
push
adc
push
into
push
aam
xchg
and
push
icebp
add
jecxz
fisubs
xor
inc
add
les
jns
xor
sbb
dec
pop
add
sahf
xchg
imul
lock
outsl
popa
dec
mov
test
enter
outsl
in
pop
jg
sub
sbb
idivl
pop
jmp
sub
jns
sbb
sbb
xor
mov
into
icebp
and
je
xchg
mov
ljmp
out
pop
frstor
mov
fcom
test
adc
pop
cmp
sbbb
jns
ljmp
pop
push
sbb
xchg
xchg
jge
adc
xchg
jecxz
fidivrl
lods
sub
std
hlt
push
xchg
mov
sar
jmp
loope
jmp
and
mov
movsl
sti
or
incl
imul
sub
outsl
push
inc
insl
icebp
inc
addb
push
adc
push
mov
insl
jmp
and
mov
xorl
nop
adc
cmp
xor
test
call
hlt
test
lods
mov
cmp
mov
sub
push
rcll
push
clc
idiv
outsl
push
mov
push
leave
push
cltd
push
cmp
lds
mov
push
push
fisttps
mov
pop
arpl
stos
mov
mov
adc
imul
decl
lea
jns
out
xor
and
sar
lcall
push
ds
fnsave
cmp
cld
jb
adc
add
in
push
loope
sbb
pop
xchg
xchg
js
lcall
in
mov
add
add
inc
cmp
std
mov
sbb
sti
lcall
cli
and
fidivrs
fnstsw
mov
mov
xor
jns
jmp
or
or
and
sbb
pop
ss
loope
jmp
add
sub
mov
or
dec
loope
sarb
inc
pop
or
inc
xchg
icebp
cmc
mov
pusha
imul
icebp
sbb
pop
in
sarl
adc
inc
or
outsl
lret
and
and
push
sar
and
les
aas
mov
ljmp
mov
push
or
jmp
push
push
dec
stos
pusha
rcrb
call
adc
push
subl
scas
sbb
rcll
jmp
push
adc
ja
aaa
or
ja
adc
into
ja
sbb
mov
xor
call
xchg
push
lods
pop
xchg
arpl
push
sbb
inc
outsl
inc
fs
lcall
pushl
and
mov
test
outsl
outsl
push
mov
mov
fdivr
mov
inc
test
rorl
outsl
pop
mov
sbb
test
lea
dec
pusha
push
or
cmp
jns
pop
cmpxchg
pushl
loopne
or
fs
outsl
call
lcall
faddl
cld
jmp
mov
adc
xchg
jl
sbb
ds
repnz
sub
jg
loopne
or
inc
enter
dec
mov
cwtl
add
jmp
jle
imul
js
xchg
call
xor
hlt
dec
incl
in
push
push
test
frstor
lcall
cmc
rcll
rcr
pop
push
jp
inc
popf
adc
fwait
int
pushf
adc
inc
call
dec
outsl
lods
sbb
xor
enter
pop
dec
clc
and
xor
call
in
cmpsb
mov
or
roll
in
adcb
mov
clc
mov
mov
sbb
mov
int
in
xor
jmp
jmp
inc
jne
mov
or
movsb
sub
insl
cmp
or
cmp
xor
cli
adc
ljmp
add
sbb
in
dec
std
nop
int3
sahf
cld
pushl
and
xchg
push
pop
in
cld
or
dec
fldcw
popa
loope
push
incl
call
int3
push
loope
nop
out
loop
pop
sbb
les
xchg
cmp
cmp
dec
jnp
test
or
and
adc
mov
cmpsl
in
ret
adc
gs
xor
pop
clc
mov
xor
out
mov
sub
int
icebp
jg
decl
and
test
push
pop
cmp
or
sar
jmp
jnp
test
xchg
setne
dec
xor
jg
fildll
push
mov
test
or
cmp
lahf
push
rorl
rorl
aad
fldl
adc
dec
jg
jmp
adc
dec
xor
dec
je
adc
mov
es
loope
jp
pop
ljmp
jp
xchg
push
pop
xor
add
loope
xchg
bound
int
jmp
fldl
xorb
jmp
sbb
in
mov
adc
xlat
push
or
or
pusha
fdivrs
outsb
sub
or
shll
inc
icebp
jmp
push
fcoms
or
xchg
cmc
and
incl
cmc
xor
ljmp
aad
rcr
test
pop
sub
xor
out
xor
jg
call
cmp
lcall
and
fistl
sub
cld
push
ljmp
je
lods
add
mov
in
or
cs
lcall
cmp
fldenv
fldenv
enter
pop
int
fnstsw
jg
ret
loope
aas
and
pop
outsl
in
mov
fst
decl
frstor
fdivs
in
icebp
int
popf
in
sub
and
xchg
ljmp
dec
add
mov
std
mov
mov
mov
mov
pop
iret
std
push
adcl
test
or
cs
insl
flds
and
or
lret
mov
push
outsl
or
adc
and
xchg
sbb
push
movl
aaa
aas
fnsave
xor
test
mov
arpl
es
das
add
and
mov
fcompl
fiaddl
lds
pop
xor
jge
fwait
pop
out
icebp
lcall
decl
inc
inc
cltd
out
outsl
movq
ja
pop
cmc
jle
ds
call
sbb
fmull
or
push
adc
inc
jg
insb
out
mov
int
lock
clc
lcall
ds
outsl
jo
adcl
xchg
mov
mov
xchg
arpl
cmpsb
das
pusha
ret
mov
aad
jle
popa
vpandn
xor
mov
mov
pusha
shl
pop
and
cld
jg
mov
xchg
mov
in
mov
imul
jno
pop
or
pop
movsl
leave
mov
pop
mov
lds
ljmp
push
loopne
mov
mov
mov
mov
pop
movsl
ss
jg
faddl
orl
nop
mov
subl
lods
jg
inc
or
iret
pop
adc
xor
cmp
bswap
lods
pop
mov
dec
aas
into
gs
decl
fucom
mov
inc
pop
xchg
jb
les
pop
xchg
clc
decl
fwait
adcl
addr16
cmp
add
sub
xor
int
or
pop
inc
cmp
xor
icebp
outsb
and
hlt
sbb
lcall
test
sahf
outsb
push
es
xor
and
pop
inc
mov
idivl
clc
call
and
dec
sub
or
mov
xor
adc
aaa
lcall
hlt
int
adc
sbb
mov
push
adc
popf
call
mov
inc
popf
push
call
andb
mov
jbe
decl
repz
fidivl
adc
ja
dec
sbb
jl
insl
leave
xor
repnz
insl
std
mov
xchg
mov
xchg
and
lods
or
movsl
add
inc
mov
pop
jns
cmp
insl
imul
dec
sbb
dec
sbb
repnz
out
mov
pop
jb
mov
scas
or
and
fimuls
and
pop
stc
mov
mov
mov
bound
sbb
push
xor
cmp
cld
inc
xor
sub
and
pop
negb
jle
lods
dec
and
ds
xor
insl
test
mov
ljmp
sub
xchg
pushf
stos
add
fldl
add
xor
ljmp
push
ss
mov
mov
dec
sbb
mov
sarl
lea
lcall
sub
cmpsl
or
mov
scas
insb
outsl
push
pusha
pop
imul
call
dec
sahf
sub
add
inc
push
xchg
sub
fstl
pop
out
fisttps
mov
cmc
mov
pop
enter
lock
mov
repz
pop
sbb
dec
dec
stc
rep
fsts
cmp
xor
and
rcll
fs
cmp
add
pop
addl
adc
mov
mov
stc
iret
mov
leave
int
rcl
loope
jmp
mov
ljmp
add
pusha
divl
xchg
pop
pop
clc
xor
xor
int3
sbb
push
push
or
pop
filds
cmp
roll
jbe
vunpcklps
pop
xlat
mov
sbb
jmp
insl
dec
sbb
mov
and
enter
add
in
jle
adc
pop
or
mov
xchg
xor
ljmp
ffreep
sarl
imul
insl
or
push
divb
mov
clc
jmp
pop
sub
and
xchg
test
xor
adc
fistps
xchg
push
mov
adc
jp
inc
dec
sbb
lock
inc
mov
test
mov
lock
bnd
fmuls
push
mov
incl
adc
roll
jne
loop
pusha
xchg
fldt
push
loopne
fidivrs
xor
mov
jns
in
cld
jg
das
lea
sub
shrl
nop
add
add
mov
mov
stc
cmp
adc
call
pop
add
inc
add
orb
push
fidivs
mov
lock
call
into
and
sahf
imul
xchg
sub
pop
jb
fidivs
push
adc
imul
or
rcll
sub
mov
decl
inc
jl
xor
lcall
add
and
mov
jno
movb
int
mov
jp
imul
mov
cmpsb
xor
lcall
mov
cmp
mov
aad
adc
daa
add
pushl
mov
xchg
pushf
sub
mov
repnz
stc
enter
out
mov
jnp
sbb
xor
inc
cmp
leave
dec
les
cmc
testb
int
pop
jae
out
pop
mov
daa
mov
and
icebp
pop
cli
mulb
call
rcrl
push
icebp
mov
ljmp
xor
rcl
mov
mov
mov
dec
adc
mov
mov
mov
mov
sub
xor
push
and
imul
push
jle
xchg
add
mov
outsl
fdivl
dec
sbb
mov
ret
xchg
jp
mov
adc
sub
or
cli
les
mov
mov
fidivl
mov
mov
jmp
add
clc
movsl
mov
lock
or
dec
lods
fistpl
cld
aaa
clc
sbb
lret
cmpsl
and
pusha
sub
push
xchg
in
xchg
icebp
popa
pop
adc
aad
push
lds
and
popa
jnp
pop
mov
popf
stos
mov
mov
push
jmp
or
sbb
popa
lods
mov
xor
xor
je
or
dec
shrl
dec
mov
xchg
fiadds
loope
xor
ljmp
dec
mov
and
pop
add
adc
push
mov
decl
test
addr16
mov
lock
lds
mov
mov
insl
adc
test
xchg
jae
icebp
shl
mov
ljmp
pop
mov
jle
ret
jbe
es
xor
add
fisttpll
or
adc
lods
in
add
mov
xor
outsl
add
pop
aad
xor
jno
shrb
jg
in
xor
pop
cmp
or
xor
dec
mov
sub
xchg
mov
jb
add
pushl
pop
xor
loope
cmp
decl
xor
add
iret
enter
pusha
inc
imulb
push
fwait
push
incb
add
and
adc
movsl
outsb
inc
push
ja
pop
icebp
add
sub
mov
jmp
incl
xor
or
dec
adc
aad
mov
add
call
jp
icebp
in
add
adc
adc
adc
inc
xor
pusha
les
mov
icebp
mov
lcall
ljmp
lock
sub
icebp
enter
and
add
sub
push
xor
call
aaa
push
jns
stos
out
or
pop
js
jmp
aaa
test
push
xchg
enter
inc
cmc
std
or
mov
ja
dec
push
dec
sub
nop
xor
xor
add
jmp
jle
popa
dec
imul
sbbl
imul
push
xor
or
sub
push
pop
aas
adc
inc
xchg
test
mov
lcall
mov
dec
or
push
inc
insl
sti
mov
push
sub
dec
add
int
inc
in
jns
fisubs
mov
mov
xchg
jb
or
movsl
mov
jns
push
in
inc
or
shrl
and
insb
test
and
dec
pop
ljmp
inc
dec
mov
testl
aam
imul
std
ljmp
jno,pt
or
push
ficomps
das
fs
push
push
push
clc
push
add
push
xchg
jg
aas
adc
pop
sub
scas
imul
sub
sub
fisubl
jns
inc
testl
push
jno
je
popa
mov
imul
adc
add
push
incl
icebp
push
push
imul
je
push
cs
loop
cmp
sbb
sbb
push
dec
pop
pop
inc
sbb
int3
adc
outsb
adc
cmp
cmpb
js
call
ljmp
dec
je
xor
cmp
loopne
repnz
adc
jl
and
incl
add
xor
jle
jbe
inc
xor
jge
cld
sub
in
aaa
inc
cli
pushl
clc
jp
xor
pop
into
insb
loopne
cmp
cmp
add
jle
push
icebp
cmp
push
push
dec
push
inc
into
es
sbb
jnp
mov
or
std
mov
xchg
and
imul
ss
imul
inc
xchg
ja
inc
dec
ds
dec
cmp
inc
cmp
dec
dec
cmp
xor
ss
shl
sub
sub
xor
cmp
add
insb
and
adc
cmp
cmp
test
lcall
jg
dec
sti
ljmp
dec
inc
xor
dec
ss
divb
cmp
aaa
inc
sub
cmp
xor
mov
mov
das
std
aaa
dec
cmp
aaa
popa
loopne
jo
cmp
cmp
pop
sbb
in
js
inc
adc
jb
pop
or
cmp
cmp
pusha
jo
push
cld
call
movsb
arpl
outsl
cmp
xor
sub
icebp
incl
or
add
mov
js
push
xchg
or
inc
jg
cs
sbb
push
repnz
ja
mov
ret
repnz
jl
cmpsb
in
jns
mov
dec
ja
sbb
dec
or
jno
or
sti
enter
mov
js
xorb
notl
jle
fnstsw
das
cmc
fildll
sub
sbb
mov
ljmp
jne
outsl
insl
adc
imul
sbbl
sbb
pop
jns
mov
inc
std
pop
inc
push
mov
or
mov
and
push
test
jae
call
nop
data16
dec
push
add
outsb
mov
insb
push
jp
sub
fwait
nop
clc
jg
inc
or
inc
push
int3
add
fisubs
and
out
loopne
clc
pop
pop
mov
add
push
add
adc
mov
add
test
xor
mov
or
adc
add
addl
adc
sub
int3
xor
xchg
rcrb
xor
add
adc
cmp
inc
mov
xor
mov
mov
sahf
push
xchg
sub
add
outsl
sub
push
stos
mov
outsl
mov
ljmp
popa
hlt
stos
loopne
das
cmp
pushl
push
add
and
and
push
sbb
sub
adc
pop
mov
call
fwait
scas
iret
les
ds
stc
fs
stos
fs
outsl
pop
clc
lcall
imul
das
outsl
sarb
jne
fnstenv
mov
test
add
data16
popa
adc
pop
clc
jg
mov
or
jno
jne
dec
ds
jb
les
adc
mov
pop
loope
sbb
outsl
mov
js
push
adc
jns
sub
les
inc
xchg
add
inc
push
pop
pop
pop
jmp
shlb
data16
jge
add
jg
pop
push
jno
shlb
fisubrl
outsb
and
cmp
lock
filds
rcll
xchg
mov
cmp
jb
js
xor
filds
push
push
stos
incl
loop
jns
xor
jb
mov
icebp
jg
dec
and
je
mov
je
dec
test
lahf
adc
or
pop
sub
pop
loopne
movsl
aaa
cmp
jp
xchg
outsl
aam
std
jb
sbb
push
test
in
sbb
sbb
mov
add
cs
mov
popa
xor
or
pop
cld
adc
push
cmp
and
fbld
push
adc
pushf
insb
ds
lds
decl
pop
or
mov
cmp
xor
xchg
icebp
and
jns
leave
cli
xchg
push
popf
jae
mov
xchg
repnz
mov
jmp
sub
test
sub
sub
push
sub
jne
icebp
cs
insl
scas
arpl
add
push
lcall
adc
sub
ja
sbb
push
jl
xchg
jmp
pop
mov
push
adc
or
stos
imul
nop
fmuls
sbb
mov
cld
push
sahf
ret
ljmp
push
mov
pushl
out
sbb
xchg
adc
inc
cmp
jmp
xlat
data16
sbb
repz
lcall
sbb
aam
jno
incl
stc
xlat
and
das
pop
in
jmp
push
or
mov
add
andb
lret
xor
xchg
mov
cli
or
stc
lds
test
or
inc
push
and
xchg
push
aad
push
enter
cmc
add
into
fisttpll
cmc
add
cltd
add
mov
nop
rcr
pop
outsl
or
add
xchg
mov
fwait
test
and
test
push
adc
xchg
dec
add
outsl
add
mov
test
sub
adc
sti
loope
fbld
xchg
inc
repnz
pop
mov
mov
pop
pushl
adc
fists
adc
add
cmc
cld
lds
movsb
jmp
adc
cld
outsl
jg
loop
stos
or
mov
ret
aad
enter
mov
lods
or
adc
mov
mov
add
out
dec
push
adc
pop
fisttpl
mov
int
lock
add
ficoml
cld
in
jb
add
cli
pop
xchg
or
enter
cld
or
sti
xchg
ljmp
div
jmp
or
xchg
sbb
adc
movsb
mov
mov
add
adc
int
imul
sbb
sub
cmp
push
sub
jae
push
addb
addl
inc
dec
pop
inc
push
dec
adc
fiaddl
mov
pop
outsb
push
mov
xor
adc
cmovbe
add
imul
bound
jl
sbb
sbb
or
fmul
mov
es
jp
insb
sbb
adc
jae
or
inc
mov
cmp
cmp
push
lret
cmp
icebp
mov
inc
ds
cmp
cmp
cmp
inc
cmp
aaa
xor
cmp
or
dec
xchg
add
mov
add
inc
shll
add
popa
mov
cld
mov
adc
add
mov
setno
cltd
pop
sub
in
sub
pop
dec
les
and
adc
fcompl
push
add
xor
call
or
dec
daa
and
ss
data16
xchg
pop
mov
sub
push
daa
inc
xor
xchg
mov
pop
dec
adc
lcall
dec
aad
add
je
decl
pop
insl
outsl
jle
inc
fs
cmp
or
lock
fcoms
lret
aas
negb
push
fs
sbb
ja
inc
jle
and
cmp
push
nop
fldz
or
aaa
out
sbb
mov
sbb
repnz
pop
out
or
jae
mov
ffreep
lret
inc
out
add
push
insl
dec
xor
adc
xlat
test
pop
aas
stc
jmp
add
sbb
and
aaa
out
sti
mov
or
cs
imul
shl
add
inc
stos
pop
xchg
loop
dec
cld
cmp
adc
and
cli
popl
sbb
mov
mov
push
push
mov
mov
frstor
xlat
mov
push
push
inc
fistl
lods
std
mov
pop
pop
movb
mov
fisttpl
cmpsl
push
mov
in
out
int3
stc
and
fisubrl
mov
jecxz
xchg
or
enter
fdiv
mov
jge
mov
repz
inc
push
push
aas
clc
pusha
imul
adc
fcmovnb
int
mov
ja
incl
data16
pop
sub
pop
pop
dec
jle
decl
pop
test
push
adc
sar
mov
push
mov
jg
ret
adc
sub
pop
arpl
mov
pop
pop
mov
idivb
or
xchg
dec
add
cmp
push
lret
push
mov
mov
inc
repz
xlat
add
imul
ds
push
or
movsl
sti
jg
cmp
outsb
push
lock
xchg
and
pushl
mov
add
mov
fisubs
lea
cld
decl
jb
mov
push
push
jnp
jmp
insl
aaa
or
jle
out
adc
or
dec
insb
sbb
aam
inc
mov
test
stc
lock
or
das
cmc
mov
packsswb
popf
neg
lods
mov
xchg
pop
loop
pushl
xchg
push
pop
lock
mov
mov
loope
mov
dec
das
mov
pop
or
sahf
arpl
outsl
push
nop
leave
out
andb
xor
push
mov
mov
pop
sub
push
pop
nop
jne
adc
lcall
in
add
fisttps
fs
lock
mov
jmp
ret
popa
pop
xchg
adc
lea
dec
or
mov
mov
push
aas
or
dec
or
adc
dec
xchg
adc
or
in
cltd
inc
aaa
mov
loopne
fistl
outsb
cmp
rorb
scas
dec
shll
sub
sbb
cmp
data16
scas
xor
push
adc
clc
jecxz
cmp
lds
les
pop
sti
decl
or
inc
scas
push
nop
add
or
inc
xor
or
push
pop
lods
mov
pop
push
dec
sar
dec
lahf
shrb
pop
sahf
fwait
shrl
testl
or
bound
sarl
pop
js
push
sbb
mov
addr16
inc
pop
fiadds
pop
pop
in
fstl
loope
outsl
test
cmp
test
adc
sub
lods
or
mov
add
aaa
xchg
aad
mov
mov
mov
hlt
dec
mov
rcll
pop
cmpsl
popa
lods
shll
in
push
fnstsw
and
dec
aad
jb
adc
mov
or
jecxz
ljmp
pop
es
jmp
fstp
das
std
cmovb
pop
pop
push
push
cmp
imul
outsl
xchg
lea
pop
pop
push
stc
mov
pop
jnp
mov
dec
mov
push
daa
nop
bound
push
push
rcrb
hlt
roll
outsl
jge
mov
repz
dec
scas
fs
sbbl
test
stos
adc
jg
aaa
scas
xchg
sti
cld
nop
pusha
jp
xchg
mov
nop
pop
gs
int
pop
nop
rorl
and
out
xchg
hlt
aas
lcall
or
pop
add
inc
push
ficomps
cld
fs
test
shrb
aaa
cmp
add
adc
xchg
mov
adc
imul
fdivr
test
aas
notl
mov
xor
mov
or
fdivs
adc
or
sbb
or
or
shl
xlat
fs
cmpsb
into
jo
jmp
imul
or
or
sub
adc
rorb
or
pop
js
cmp
cmp
mov
aaa
mov
pop
adc
jecxz
enter
lock
dec
sahf
lret
sbb
out
mov
pop
insl
pop
push
xchg
lock
inc
adc
inc
aas
js
test
in
pop
ret
bnd
popf
fmull
movsb
pop
in
stos
jg
fsubs
and
xor
xor
and
addr16
shlb
inc
mov
aam
arpl
sarb
xlat
mov
inc
mov
sub
and
or
punpckhwd
xorl
daa
pusha
or
adcl
pusha
xor
mov
nop
push
mov
pusha
mov
jge
mov
mov
xchg
mov
push
ret
test
inc
cwtl
xor
popa
or
adc
jne
mov
lret
movsb
outsl
mov
imul
mov
or
push
leave
mov
mov
sub
int3
jns
mov
jmp
rcll
rol
xchg
es
xor
pop
sarb
inc
and
mov
roll
icebp
popa
mov
lods
repnz
mov
mov
cld
fisttpl
arpl
dec
adc
aas
enter
lret
mov
xchg
and
mov
push
in
idiv
fildl
scas
pop
inc
js
adc
les
ss
lret
mov
or
push
aas
repnz
rcll
inc
nop
pop
sub
adc
mov
neg
ret
lret
roll
pop
fs
icebp
popa
dec
push
sbb
mov
ljmp
adc
arpl
xor
xor
cmpsb
test
in
adc
jmp
lock
or
repnz
mov
push
pop
dec
loope
fs
xor
mov
add
mov
js
mov
xor
pop
pop
pop
mov
pushf
or
push
testl
insl
arpl
push
mov
xchg
xor
nop
int3
cmp
mov
mov
sub
popa
in
push
xlat
inc
sbb
dec
cs
sub
orl
call
mov
adc
mov
cmp
mov
outsb
push
sub
xor
pop
xchg
jnp
mov
shlb
aaa
arpl
adc
dec
je
movb
pop
pop
mov
push
jns
add
add
mov
imul
adc
push
inc
pop
mov
negb
nop
add
or
adc
add
xor
js
and
mov
xor
fsubrs
push
pop
lea
sub
push
movsb
mov
cmp
mov
rcr
jecxz
add
notb
test
in
lret
xor
insl
repz
lds
aas
inc
pop
out
mov
std
gs
stos
andb
movsb
and
ret
call
mov
movsl
mov
imul
sub
in
aaa
std
test
fs
mov
push
xor
xchg
mov
pop
or
push
or
insl
adc
js
nop
mov
icebp
xor
adc
xor
int3
or
imul
ret
pop
cmpb
mov
push
dec
ljmp
addb
pop
cld
push
decl
xor
fistps
loopne
cld
loopne
cld
fcomps
dec
xchg
mov
push
add
ret
xchg
lret
adc
aaa
or
mov
pop
les
inc
pop
pop
lahf
pop
invd
outsl
test
sub
mov
test
lock
mov
mov
pop
inc
cmc
aas
lret
add
adc
mov
mov
or
or
cmp
nop
lret
adc
incb
add
pop
jno
ret
sbb
stc
inc
repz
adc
fdivs
aaa
push
cmc
and
and
pop
insb
movb
pusha
hlt
std
icebp
mov
dec
push
jnp
repnz
lret
or
mov
into
aad
push
arpl
outsl
sbb
and
dec
or
arpl
rolb
fildll
mov
std
xchg
xchg
mov
xchg
or
int
negl
clc
jmp
test
cmc
xchg
pop
xor
adc
aad
ret
push
scas
dec
and
push
in
dec
push
nop
mov
enter
and
ret
add
adc
jae
sbb
adc
mov
pusha
xchg
aaa
mov
ds
pop
adc
lret
in
iret
sub
nop
lret
cmp
xchg
movsb
or
in
movsb
adc
aad
leave
cmovs
mov
or
stos
nop
dec
adc
mov
incl
push
mov
inc
xchg
or
add
jo
call
inc
sbb
fildll
push
stc
sbb
xlat
jne
add
rcr
jecxz
fidivrl
dec
push
pusha
mov
jg
inc
fdivs
or
mov
xchg
fsubl
arpl
fmuls
adc
and
out
push
xchg
xor
test
inc
mov
sbb
mov
rol
xchg
or
or
cmpsb
fdivs
data16
jmp
sbb
jb
shlb
add
xchg
mov
insl
adc
jmp
push
xor
pop
lock
push
jne
sub
push
sbb
int
dec
outsl
cli
sbb
pop
pusha
pop
dec
fstpt
fcoms
cli
popa
insl
insb
xchg
scas
inc
jns
test
repz
adc
cmp
cmpsb
lcall
jne
adc
xor
mov
xor
or
push
xor
xor
pop
shl
dec
xor
xlat
xchg
clc
ret
mov
xchg
add
pop
push
push
ret
and
adc
fdiv
fwait
call
cmp
ret
dec
mov
fmull
movsb
lds
add
rorb
adc
fsubs
sub
scas
adc
mov
adc
or
or
mov
dec
mov
aaa
js
out
rcrl
fildll
ret
mov
or
call
int
in
mov
lods
add
jle
sbb
push
mov
sbb
in
lods
inc
lret
sub
insl
push
and
test
gs
pusha
push
mov
xor
sbb
fs
rcrb
xchg
test
lret
mov
add
and
dec
adc
mov
test
pop
or
pop
imul
or
or
mov
adc
jnp
inc
loopne
div
dec
mov
mov
sbb
adc
fcoms
or
pop
or
imul
add
push
and
dec
pushf
and
mov
orl
xchg
jle
adc
clc
jb
bound
inc
mov
cmp
mov
push
call
xchg
dec
push
pusha
lods
sub
xor
pop
pusha
not
xor
aaa
fiadds
repnz
or
frstor
cmp
or
pop
sti
aas
roll
addl
cmpsl
stc
or
push
popa
cmpsb
icebp
pusha
adc
mov
js
and
push
lock
mull
sbb
push
lods
ljmp
popf
push
jmp
nop
or
jle
cwtl
add
mov
adc
xor
mov
sbb
jmp
icebp
lret
push
nop
idivl
mov
dec
mov
sub
adc
xchg
pop
or
adc
jmp
arpl
dec
hlt
adc
or
sub
pop
adc
fildl
inc
xchg
mov
xlat
sbb
rolb
test
pop
pop
arpl
mov
lods
mov
inc
pop
pop
dec
loopne
add
add
xchg
inc
dec
js
arpl
mov
xchg
mov
bound
cld
enter
mov
sbb
mov
out
pop
insl
or
je
xchg
push
xchg
or
cmp
dec
adc
je
int3
mov
sbb
ret
jb
js
sbb
pop
es
es
sbb
loop
jp
push
sbb
xor
aas
mov
pop
mov
pop
insl
cli
pushf
movb
jecxz
mov
push
les
adc
xchg
push
dec
jecxz
std
mov
adc
pusha
pop
ss
or
pop
or
fs
pop
rolb
into
mov
jp
fbstp
idivl
daa
cmpsb
or
mov
pop
loope
loope
repnz
mov
pop
push
xchg
mov
fsubrs
push
pusha
push
and
scas
pusha
rolb
ds
mov
aaa
lcall
or
ret
inc
shl
js
push
mov
cmovno
push
mov
int
pop
mov
mov
mov
sbb
push
ret
adc
jecxz
sbb
fldenv
loopne
jmp
test
sub
das
pop
les
stos
cld
fmull
aaa
shrl
mov
mov
insl
push
xor
xor
test
jae
or
sub
mov
xor
and
or
aad
sahf
push
push
mov
push
pop
sub
sahf
pusha
lock
mov
jecxz
arpl
in
ret
icebp
test
test
outsw
lret
add
cld
pop
cmp
sbb
push
xor
pop
popa
sbb
cmp
push
xor
test
pop
mov
pop
cmp
fldt
int
lock
sub
adc
sub
inc
cmp
ja
pop
std
xor
push
sti
lretw
mov
mov
or
sbb
mov
jne
fisubl
lds
dec
and
pop
ja
lret
adc
in
jecxz
lds
sbb
fsubl
sub
das
aad
nop
fadds
sub
icebp
ljmp
fcomp
mov
stc
xchg
dec
nop
cmp
leave
imul
push
lret
out
out
adc
adc
adc
jecxz
jl
or
pushf
xchg
push
cs
pushf
leave
sbb
addl
adc
bound
or
outsl
xor
aam
aas
and
cmpsl
les
stos
inc
rolb
push
dec
mov
das
cmp
xor
iret
inc
push
pop
mov
lret
loop
fildl
push
xchg
cld
ret
mov
loope
popf
aas
sar
leave
andl
inc
hlt
roll
lcall
and
mov
jl
lock
xchg
imul
pop
movsl
mov
lret
adc
mov
and
js
gs
mov
sbb
jmp
dec
mov
push
pop
mov
ret
leave
popf
ljmp
push
fiaddl
loope
cwtl
inc
loop
fcmovbe
dec
mov
sub
mov
and
cmp
sub
cwtl
or
or
imul
dec
cmp
imul
das
loopne
cld
dec
mov
mov
add
das
and
loopne
movsl
inc
sub
nop
fidivrs
add
or
lea
pop
xor
cli
mov
dec
ja
icebp
lret
pop
mov
dec
sub
aam
mov
pop
push
cs
fdivrl
mov
shlb
push
and
fsubs
mov
es
cli
movsl
out
insl
cwtl
sbb
mov
aam
push
push
adc
addl
pop
test
sbb
inc
hlt
or
test
testl
mov
xor
lods
arpl
xor
lods
das
rcll
in
and
fldcw
lahf
bound
xchg
fdivl
add
or
mov
mov
into
lret
adc
test
popf
dec
int
or
push
or
adc
push
int3
mov
sub
sbb
mov
popf
hlt
pop
in
mov
fs
xchg
ret
and
lock
test
shl
pop
pusha
or
mov
stc
pop
cmp
sbb
pusha
loopne
loopne
push
adc
adc
pop
inc
sti
ret
pop
mov
iret
cmp
inc
jecxz
fnsave
adc
xchg
sbb
mov
int3
ja
mov
adc
or
je
sbb
or
add
xor
or
loop
pop
inc
lock
hlt
jno
xchg
pop
or
inc
or
add
sbb
or
pop
dec
popa
pop
mov
sbb
imul
fistpl
in
cmp
adc
sub
xor
inc
cmp
inc
inc
adc
fsubrs
xor
xchg
mov
push
negb
hlt
push
scas
in
imul
dec
or
adc
xor
movsl
or
insl
jp
in
xchg
push
mov
or
xor
aam
outsl
pusha
jl
mov
inc
adc
scas
andb
repz
fsubr
mov
mov
sbb
mov
or
xor
lock
subb
lahf
xchg
pop
push
aas
fidivrs
inc
testl
fisttpl
xor
push
imul
leave
test
outsl
sub
movsl
int
fsubr
das
sti
adc
dec
mov
jl,pt
sub
inc
leave
test
push
mov
xchg
xchg
or
mov
add
or
inc
pop
fldenv
xor
test
lds
pushf
leave
test
push
push
lods
cld
aad
sub
jg
aam
idiv
faddp
aad
dec
jge
pop
jge
dec
lea
cmpsb
xor
rclb
pop
mov
add
mov
jp
adc
mov
adcb
jge
insl
nop
test
and
stos
xor
jmp
xchg
sbb
sahf
fistl
dec
xchg
pminsw
push
adc
movsl
adcl
pop
cmpb
pop
and
cmp
mov
std
xor
mov
cwtl
fildll
subl
lods
dec
sbb
xchg
faddl
pop
shrl
enter
mov
dec
lea
sub
pop
add
fisubrl
insl
xlat
jge
stos
clc
and
push
imul
pop
mov
adc
ja
imul
or
dec
sub
repnz
scas
mov
incl
aam
add
pop
add
jbe
pop
or
shll
int
pop
ds
inc
mov
pop
cmpl
push
fistpll
adc
push
in
push
xchg
lods
insl
mov
jbe
cli
dec
sbb
xor
mov
mov
xor
cmp
sub
pop
inc
xchg
adc
adc
lds
inc
ljmp
mov
frstor
xor
adc
mov
adc
push
mov
sbb
cmp
mov
push
aas
adc
lds
dec
push
mov
dec
cld
js
adc
sbb
xor
test
pop
pusha
inc
and
cld
popa
sbb
enter
pop
mov
mov
adc
sbb
lds
insl
and
pusha
stos
pop
mov
pop
cmp
sub
inc
jmp
inc
jge
rol
test
push
movsb
xlat
push
mov
inc
sub
lods
sbb
cmp
rclb
repnz
pusha
ss
mov
mov
pop
mov
in
fiaddl
xor
loopne
push
push
sbb
and
add
loop
pop
or
int3
or
sahf
adc
xorb
push
mov
jl
and
mov
dec
stc
jecxz
mov
pusha
mov
aaa
mov
adc
xor
xor
push
inc
flds
lret
gs
inc
test
mov
dec
inc
jmp
nop
cmc
cld
loopne
loopne
testb
cmp
jecxz
outsl
and
mov
or
aaa
xchg
pusha
shl
pusha
insl
pop
divl
lds
insl
scas
or
pop
loop
imul
sub
mov
adcl
test
xor
loop,pn
sarl
cwtl
rcrb
pusha
mov
pop
mov
shlb
ret
in
adc
push
xchg
or
repz
mov
jne
and
sbb
loope
xchg
xor
rcll
jl
sbb
cs
sub
jmp
mov
inc
or
or
dec
shlb
fcmovne
out
icebp
lret
pop
pop
push
pushaw
outsl
cmp
xor
daa
sub
adcl
adc
sbb
ja
xchg
cmp
xchg
mov
xchg
push
cmp
rcll
inc
movsb
pusha
mov
inc
add
cld
inc
mov
dec
ret
push
loope
outsl
fcoml
mov
popf
les
jno
sbb
int3
outsb
cmp
imul
xor
movsl
pop
rorb
pop
inc
sub
mov
sbbl
leave
push
xchg
dec
mov
popf
addr16
pop
lock
pop
or
adc
dec
shrb
push
in
sbb
outsb
movsl
jmp
mov
and
sbbb
cmpsl
repnz
arpl
or
mov
pop
push
in
adc
inc
or
push
dec
inc
mov
inc
push
or
jge
rorb
cmp
pop
rorb
cmp
in
mov
push
clc
sub
cmp
lods
pop
xchg
push
imul
xor
mov
or
sub
mov
fstl
daa
nop
aad
repnz
mov
inc
or
lock
enter
add
test
in
push
rorb
pop
push
in
pushf
les
popl
mov
adcl
add
hlt
imul
add
mov
daa
jecxz
xor
pop
jp
xor
test
aam
das
mov
arpl
outsl
mov
or
mov
sbb
sarl
mov
pop
xlat
inc
ljmp
dec
add
dec
inc
add
push
sbb
shll
dec
mov
add
int
out
in
mov
prefetchnta
pop
out
icebp
jno
clc
lods
jbe
mov
inc
or
movl
arpl
adc
int
pop
call
pop
shl
dec
pop
cmp
xchg
lret
xchg
daa
xlat
ja
jo
cmp
rorl
in
push
loopne
das
loop
pusha
jecxz
js
push
cmovae
fists
lds
aaa
inc
in
or
dec
nop
lret
sub
mov
movsb
enter
sti
xchg
mov
aad
push
jp
bound
jmp
mov
push
sarl
fucomi
add
std
push
xchg
adc
or
arpl
cmp
lcall
mov
sub
dec
lret
xchg
push
mov
movsb
add
sbb
std
cs
clc
push
inc
xlat
mov
cmp
insb
out
inc
adc
rorb
lock
adc
adc
fdivrl
lret
into
xchg
rcl
stos
sbb
push
push
push
lock
orb
sub
ret
ret
pop
adc
push
cmpsb
pop
xor
fistpll
pop
les
idiv
lahf
into
push
nop
shrb
sub
xor
push
sub
lcall
ret
cmpsb
dec
mov
dec
cmp
xchg
sti
adc
or
jnp
mov
adc
pminub
jb
push
insl
test
mov
pop
out
push
mov
std
mov
sbb
push
or
lods
push
fisubs
out
out
add
add
push
dec
insb
pop
adc
ffreep
fisttpl
dec
mov
cmp
jp
jne
outsl
inc
sbb
or
js
inc
flds
test
pop
push
mov
std
push
pop
mov
pop
shll
or
pop
push
mov
sbb
mov
lea
push
or
mov
push
xor
lds
inc
cmpsl
push
xchg
push
clc
mov
scas
inc
sub
or
loop
cmpb
loopne
js
and
or
and
pop
bound
jae
cmpsl
adc
cmp
sahf
imul
adc
jo
sbbb
out
and
mov
and
rcrb
in
pop
xchg
cli
jle
loope
in
mov
int
xor
xchg
lret
cmpsb
push
sti
mov
pop
mov
pop
add
in
repnz
or
mov
call
scas
in
xor
jae
or
push
xchg
cmp
lods
out
into
movsb
xor
rcrl
jns
dec
mov
mov
ficompl
xor
cmp
negb
and
mov
adc
or
xchg
cmp
pop
arpl
cs
push
imul
ficoms
pusha
mov
xor
fcmove
sub
orl
rol
bound
jae
push
les
lods
or
adc
out
xor
sub
insb
push
sbb
push
mov
test
negb
xor
and
sub
pop
dec
cmp
insl
mov
xchg
fstps
mov
sub
adc
xchg
adc
xlat
xor
inc
jmp
or
xchg
scas
adc
and
cmp
std
or
in
adc
push
jae
adc
xor
call
enter
adc
inc
pop
push
jmp
or
stos
bound
mov
add
rcl
adc
xor
adc
or
add
cmp
bound
sbb
cmp
pusha
push
pop
adc
or
pop
mov
xchg
addr16
movsb
pop
pop
push
addr16
jecxz
roll
fxch
cld
call
arpl
lods
mov
sub
loopne
sbb
sub
adc
and
arpl
lds
dec
popf
and
cmpsb
mov
inc
mov
push
lahf
insl
adc
int3
js
dec
insl
add
mov
xor
jne
cmp
jmp
stc
insl
mov
adc
ret
in
pop
xchg
and
int3
lret
lret
jle
test
sti
pop
or
push
mov
adc
nop
aam
arpl
mov
mov
and
inc
adc
push
test
cld
fistps
shrb
lret
stos
scas
fldt
sarb
loop
or
mov
or
mov
mov
jbe
cld
fistps
dec
sbb
shll
adc
rclb
xor
push
gs
xorl
add
jbe
cli
daa
push
loope
fs
xchg
rorl
loope
in
pop
dec
outsl
aam
xchg
lock
mov
mov
jo
hlt
adc
pop
push
aam
or
dec
dec
cmp
pop
imul
sbb
insl
incl
and
aas
in
test
and
xor
ficompl
sbb
xor
in
inc
adc
and
ss
pop
call
imull
cs
into
divl
xor
test
push
sub
aaa
push
inc
jmp
hlt
jle
sbb
xor
inc
jmp
mov
cmp
popa
in
out
cmp
enter
jle
sub
decb
test
jcxz
adc
pop
ja
pop
ss
and
sbb
push
lods
inc
mov
loopne
pusha
lds
mov
jo
adc
out
sub
xor
xor
gs
in
adc
out
sbb
add
push
repz
mov
int
push
inc
xchg
syscall
mov
sub
lret
mov
lods
inc
add
sub
xchg
cmp
cld
fdivrp
add
ss
inc
inc
pop
pop
repz
xchg
fadds
stos
jmp
lea
adc
testl
jl
pop
and
call
or
sub
xor
dec
fcmovb
int
push
dec
movsl
push
lods
add
xor
xchg
test
rcl
lret
lods
mov
add
and
insl
outsb
dec
stos
sbb
insl
mov
ret
pusha
adc
fiaddl
pop
sub
insb
enter
out
xor
jne
arpl
test
in
xchg
aad
adc
add
aam
mov
dec
add
loop
or
cwtl
dec
mov
hlt
mov
les
bound
push
or
jge
or
int3
clc
and
push
test
mov
js
enter
sbb
clc
jg
push
jbe
inc
clc
cld
fnstsw
fstpt
repz
jae
test
scas
add
dec
push
sahf
dec
js
pusha
push
stos
dec
pop
loopne
pop
shlb
insl
jne
mov
addb
mov
test
lcall
pop
push
in
sbb
add
imul
adc
xchg
js
jo
ljmp
xlat
jo
fisttpll
ror
stos
sub
xchg
add
sbb
imul
push
popf
lds
or
jl
jnp
dec
aas
cld
add
cmpsb
xchg
cmp
push
pop
int3
insl
adc
out
arpl
test
jno
int
sub
and
xor
and
in
out
dec
cwtl
pop
aas
mov
jle
jne
jmp
jle
enter
pusha
xchg
push
movsl
pop
pusha
jle
fdivrs
mov
imul
in
ja
adc
xchg
repz
xor
icebp
ret
xlat
dec
adc
push
cmpsb
or
imul
or
lods
xchg
ds
sub
jo
stos
push
nop
push
push
dec
pop
pop
addb
jl,pn
inc
rcrb
les
push
lret
loop
sbb
test
adc
inc
int
ret
lods
sbb
ss
cmc
cmp
ret
dec
or
push
ficoml
xor
push
cmp
jg
and
add
iret
enter
and
fsubrl
icebp
or
cmp
mov
insl
mov
nop
pop
push
cmp
and
xchg
sub
mov
stos
sbb
sbb
jmp
adcb
popf
sarl
pop
in
or
mov
jmp
ffreep
ljmp
cld
fdivrs
loopne
cmp
insl
jno
mov
lds
mov
lcall
adc
cmp
rol
dec
leave
mov
inc
aaa
and
pop
mov
jnp
xlat
in
lahf
sbb
mov
xchg
cmp
jge
inc
lret
sahf
dec
scas
out
or
scas
rcll
movhps
popa
fmuls
jge
mov
push
mov
int3
adc
std
pushf
xor
pop
jnp
xchg
mov
daa
mov
push
push
mov
push
xor
in
arpl
and
dec
movsl
loopne
arpl
leave
or
mov
ror
add
icebp
adc
outsb
test
sbb
push
in
xchg
clc
lahf
popa
rorl
cmp
inc
into
hlt
inc
loope
mov
ret
jno
adc
pop
sti
aam
loope
pop
sub
or
incb
sub
xchg
cmpsb
xchg
pop
xorb
or
arpl
testb
mov
aas
mov
imul
adc
rolb
addb
cmp
xchg
notb
shlb
sbb
fistl
dec
fistpll
mov
dec
and
leave
test
enter
imul
cmc
or
cmpsb
xchg
mov
movsl
out
sbb
xchg
adc
cli
popl
jbe
repz
cmpsb
jno
dec
pop
push
push
pop
testl
adc
inc
sub
jbe
addb
push
lods
mov
mov
push
sbb
push
push
push
push
add
mov
xlat
cmp
call
mov
inc
and
leave
lret
test
les
aas
mov
push
movsl
mov
std
sbb
cmp
nop
iret
jl
xchg
sbb
mov
jns
mov
inc
imul
aam
int
lcall
into
lcall
adc
mov
or
lods
shr
pop
xchg
fadds
dec
faddl
xor
pop
xor
cltd
iret
andl
push
lock
insl
pop
pop
dec
sbb
aad
imulb
fcmovb
aas
add
inc
hlt
mov
dec
pop
mov
rorb
adcl
test
or
jecxz
imul
mov
mov
fs
adcl
mov
mov
fwait
or
adc
cld
aad
mov
into
mov
out
mov
ret
shlb
mov
int
pop
cmp
pop
outsl
add
fistps
popa
mov
adc
pop
lods
add
xor
or
push
pop
xor
pop
mov
sub
arpl
cmp
test
enter
sbb
popa
mov
shll
xor
jecxz
les
inc
insb
inc
pusha
dec
sbb
sub
add
jg
xor
out
dec
nop
aam
adc
in
mov
ret
aas
rol
inc
add
cmpsb
pop
xchg
scas
popf
xchg
test
out
mov
insl
sbb
mov
pop
push
mov
aaa
or
add
push
mov
rol
imul
sti
fdivs
sub
mov
pop
pusha
mov
shll
jo
push
mov
mov
xchg
pop
mov
mov
dec
test
add
pop
out
lahf
nop
jecxz
ss
adc
add
fucomip
sbb
sbb
sti
pop
cmp
les
mov
sub
jns
je
mov
hlt
out
xchg
push
repz
shlb
pop
nop
add
scas
call
mov
mov
nop
dec
sub
pop
adc
in
shlb
movsb
enter
jmp
or
and
ficompl
cmp
push
inc
int3
fwait
dec
cli
push
fs
mov
adc
add
imul
or
jmp
inc
clc
lret
pop
mov
cli
mov
idivb
xlat
dec
pop
arpl
cmp
add
ja
mov
test
imul
leave
insl
cmp
xchg
xor
or
xor
inc
adc
jb
out
lods
pop
inc
dec
shrb
or
mov
daa
pusha
cmp
rorb
les
or
leave
or
xor
jecxz
mov
bound
outsl
daa
aaa
lcall
loope
fisttpll
adc
push
out
sbb
pop
es
pop
and
jnp
cmp
test
imul
mov
pop
lock
arpl
mov
push
or
jge
jbe
sbb
xorl
xchg
fiadds
mov
mov
dec
xor
jg
adc
ss
sbb
xor
lea
in
add
add
sbb
out
or
push
xlat
rclb
out
inc
jmp
push
pushf
jmp
movsb
adc
or
addr16
adc
inc
dec
pop
xor
adc
ret
or
cltd
pop
xchg
rclb
push
or
jnp
or
aaa
inc
sub
mov
shll
outsl
sbb
or
call
mov
adc
loopne
push
andl
ja
inc
cmc
pop
or
jns
fisttpl
aad
push
dec
add
sbbl
notl
sbb
jmp
cld
mov
and
dec
cmp
test
std
mov
dec
mov
mov
scas
mov
out
cmpl
jp
adcb
add
sbb
inc
or
loope
xor
outsb
sub
mov
push
movsl
push
lods
add
orb
shrl
xor
int
mov
out
xor
fdivrs
and
movsl
popf
xchg
cmp
ss
fwait
pop
and
sti
xor
frstor
lds
jno
lea
loopne
in
popa
lods
stos
les
or
push
sbb
stos
and
pop
test
xchg
xchg
or
add
stc
dec
mov
lea
mov
std
and
insl
jbe
sti
sbb
push
hlt
mov
add
js
mov
add
inc
fsts
push
mov
mov
mov
xchg
mov
unpcklps
mov
das
setne
jo
cmp
pop
shrb
lock
mov
pop
or
push
pusha
add
pop
not
aas
test
or
pop
les
ret
adc
insb
lds
xor
subl
stos
das
sbb
rcll
insb
push
lods
mov
add
and
mov
push
cmpb
sub
enter
out
lret
push
pop
test
loopne
bound
aad
iret
cmp
push
movsl
ss
sub
andl
adcb
jl
adc
imull
pusha
test
aam
clc
pop
jg
loope
and
mov
es
sbb
mov
and
inc
cmp
ds
call
sub
adc
mov
pop
push
adc
pop
mov
leave
sbb
push
nop
loop
xorl
push
and
shr
add
mov
hlt
or
lcall
inc
fisttps
push
inc
lods
ret
xor
jge
adc
and
jb
out
in
mov
adc
adc
mov
xor
jb
in
and
mov
push
in
pop
andb
insl
push
inc
jne
cwtl
jmp
and
mov
cmc
les
insl
cmp
hlt
mov
test
sub
pop
aaa
pop
sbb
push
iret
ret
inc
shl
lahf
js
mov
mov
cmc
xlat
addl
add
push
mov
bnd
sub
xor
push
dec
or
and
loopne
out
inc
and
dec
and
and
or
pop
adc
mov
jb
or
or
adc
hlt
and
test
test
push
jne
insb
dec
push
fsubrl
push
fistpll
lret
mov
inc
adc
push
adc
jp
mov
mov
nop
sbb
cmp
imul
sbb
insl
mov
inc
lret
stos
mov
xor
add
add
sbb
lds
dec
testb
insb
mov
add
mov
cmpsl
dec
lock
jnp
adc
lcall
das
cmp
sub
mov
arpl
test
cwtl
cmc
dec
dec
incl
sub
xor
mov
sbb
in
aam
mov
decl
dec
fucomi
jo
adc
lcall
push
inc
mov
loop
mov
imul
bound
cld
xorl
pop
decb
sbb
push
push
sbb
lcall
xor
fst
out
jne
movsl
mov
mov
in
push
and
jbe
pushl
push
shll
adc
inc
mov
pop
movsl
hlt
xor
fmull
mov
lods
sub
and
call
jmp
call
pop
data16
dec
or
in
mov
rorb
mov
and
push
xchg
lahf
jecxz
sbb
cli
lcall
inc
std
popa
xor
mov
lea
or
sbb
dec
dec
sti
sar
aaa
ds
scas
clc
sub
xchg
insb
orl
adc
mov
movsl
inc
dec
ret
fists
xchg
lods
lods
outsl
sbb
pop
cli
sbb
lea
inc
lock
decl
call
aad
inc
adc
subb
or
clc
call
push
rolb
jno
mov
pop
inc
cmc
cmp
cmpsb
add
incl
mov
jb
or
daa
mov
fcos
pop
xor
mov
stc
xchg
cmc
testb
test
jmp
push
push
adc
enter
xchg
dec
xorb
dec
cmp
mov
rol
jns
nop
lcall
sbb
xor
or
mov
flds
lods
mov
or
fistl
stc
inc
out
testl
loop
xchg
jle
ss
js
pushl
mov
jno
cli
int
pop
xor
repnz
out
jecxz
or
pop
push
pop
jp
shll
test
dec
in
aaa
ljmp
xor
dec
aad
pop
cmp
call
push
jbe
pop
cmovne
mov
incl
cmpsl
mov
xchg
xchg
icebp
mov
mov
cs
xchg
lcall
cld
mov
xlat
mov
cs
sbb
add
add
pop
in
pushl
push
stos
add
and
add
popa
add
push
xorb
ret
pop
sub
ljmp
shrb
cmc
add
pop
adc
rcl
and
push
cli
push
sbb
movsl
gs
lcall
js
insl
rorb
call
pop
xor
sbb
sub
insl
les
aam
arpl
pushl
lcall
and
push
mov
sub
lret
fwait
mov
jmp
fldcw
adc
push
pop
in
mov
xor
std
lcall
adc
pop
fbld
cld
test
data16
sub
inc
xor
mov
aam
push
cmp
xor
cwtl
pop
test
jb
daa
in
stos
cld
mov
inc
bound
push
xchg
in
cmpsb
pop
jno
mov
fcmove
mov
push
xor
das
cs
mov
outsb
jle
outsl
cmp
int3
mov
aam
daa
jmp
pop
pushl
mov
aaa
sbb
mov
mov
outsl
jnp
jg
mov
idivb
popf
out
test
lea
sub
push
push
mov
shlb
and
lcall
or
jg
call
push
sbb
fsubs
into
cmpsl
sbb
in
mov
mov
or
inc
inc
outsb
dec
cltd
push
sub
out
call
push
push
cmp
and
sub
mov
out
push
imul
out
rclb
pop
sub
cmp
push
mov
clc
pop
in
jle
xchg
jo
jl
mov
cmpsl
icebp
pop
std
test
push
insl
jno
sbb
les
sbb
xchg
cli
xlat
roll
pop
insl
mov
imul
je
pop
int3
sub
push
rcrb
stc
daa
adc
pop
pop
push
loop
jmp
lahf
aaa
xor
out
in
lret
push
push
loop
ljmp
push
fadds
and
xor
push
and
add
xchg
in
es
push
pushf
mov
fisttps
sbb
outsl
decl
aaa
mov
das
icebp
jg
cmp
cmpsb
fstp
dec
je
dec
aaa
and
or
ljmp
mov
out
jecxz
xchg
sahf
aad
add
push
idivb
rolb
push
clc
dec
jmp
xchg
inc
mov
inc
sub
fs
add
jae
add
push
mov
xor
pusha
mov
aaa
leave
rcr
dec
imul
fucomip
daa
cwtl
jmp
push
sub
add
ret
fucomip
clc
outsl
sbb
sbb
mov
jmp
xchg
insb
movsl
add
push
sub
xor
out
sbb
bound
jge
pushl
movsl
sbb
fwait
into
cmp
imulb
pop
push
mov
sub
mov
sub
cmp
shll
pop
sar
or
js
push
cmp
orl
mov
jo
sbb
subl
data16
out
cli
add
mov
aas
sbb
ds
and
int
dec
inc
into
mov
ja
icebp
movsb
andb
test
test
mov
call
pop
icebp
ljmp
jmp
subb
add
push
jl
mov
xchg
insb
pop
add
push
insb
cmpsl
lret
or
or
lcall
outsl
psrld
scas
movsl
jns
rcr
int3
nop
lea
testb
lock
fwait
ret
std
pushl
push
stos
fnstsw
pop
cmp
cltd
dec
outsb
pop
dec
movsb
adc
out
mov
ljmp
sub
jno
pop
sub
push
in
xchg
in
sub
les
mov
ficomps
jbe
mov
aas
mov
sbb
cld
stos
stos
xor
scas
jne
lock
sbb
mov
test
lea
mov
mov
adc
mov
pop
scas
loopne
outsl
mov
sub
jmp
mov
test
fmull
xchg
inc
incl
cld
and
cmpl
or
jmp
or
in
mov
cltd
in
cmp
push
je
enter
pop
aaa
jae
push
into
clc
incl
and
test
mov
enter
in
or
fistps
ret
mov
push
enter
call
xor
out
and
jecxz
jbe
cmp
adc
jns
gs
pop
ret
xor
and
cli
incl
aas
pusha
xor
ret
xor
inc
outsb
leave
ss
xchg
and
dec
pushl
clc
call
xchg
es
cli
pop
jne
cmpsl
jp
mov
jg
pop
or
sbb
ljmp
xchg
out
loopne
ss
mov
mov
sti
mov
rolb
shlb
push
outsb
in
pop
pop
loopne
or
or
stos
or
clc
pop
call
addr16
mov
rol
lods
je
or
fists
lock
pop
sub
jge
push
push
jno
jle
leave
lcall
and
pop
sbb
xchg
lds
sti
xor
rol
mov
repnz
test
cmp
pop
in
negl
stos
repnz
out
ret
sahf
pop
shll
xchg
imul
add
in
mov
pop
and
mov
loop
inc
and
mov
les
lock
sub
imul
stc
xor
push
repnz
les
mov
mov
mov
loope
xor
cmc
lret
in
pop
jbe
bound
mov
sti
lcall
imul
movsl
movsb
in
mov
cmp
cmc
dec
sub
mov
inc
sar
scas
sub
ljmp
cmp
push
je
pop
or
push
clc
movsl
iret
adc
jl
roll
cwtl
ret
scas
sbb
call
call
sar
add
imul
repz
push
or
lcall
mov
cld
loop
lcall
out
hlt
adc
jge
inc
jmp
sbb
xor
sub
pushf
dec
lret
adc
icebp
mov
lock
aad
gs
popa
scas
test
pop
js
in
incl
stos
enter
pop
sbb
xor
lods
cmc
push
dec
sub
mov
mov
test
xlat
fldl
cmp
mov
lods
pop
xor
fdiv
decl
xchg
es
out
sub
mov
das
pop
pop
repz
lcall
bswap
rcrb
mov
inc
outsl
in
mov
adcb
inc
push
pop
xchg
adc
fsts
jae
add
call
add
push
outsl
or
jne
mov
dec
pushf
loopne
cltd
mov
push
aaa
sbb
repnz
adc
mov
mov
sbb
jns
push
adc
adcl
or
pop
or
jo
incl
into
mov
je
mov
xor
cmp
jb
mov
pop
cmp
icebp
ljmp
adc
fmuls
insb
es
sub
fnstenv
xchg
icebp
jl
mov
cld
pop
repnz
dec
add
pop
stos
sub
incb
push
ljmp
mov
cmp
jecxz
mov
loop
lods
xchg
stos
stos
shl
imull
pusha
fistps
test
push
sub
sbb
or
popf
inc
jg
push
fidivrs
fnsave
or
jo
data16
popf
pop
push
xchg
nop
push
pop
mov
push
adc
push
loop
incl
dec
shlb
cmp
mov
dec
iret
ret
dec
hlt
ljmp
push
and
shr
sbb
scas
jle
adc
mov
xor
pop
xchg
mov
shl
or
insl
xchg
xor
icebp
mov
push
jb
pop
sbb
pushl
adc
mov
aam
lret
jo
xor
sarl
sbb
cmpsb
adc
movsl
lcall
mov
sub
filds
pop
incl
adc
in
inc
ret
push
inc
sbb
mov
xor
xchg
sbb
jmp
push
jl
mov
add
fcmovb
pop
dec
dec
clc
test
push
sub
into
lea
mov
mov
dec
jmp
shll
xchg
call
inc
loop
push
cmpsb
lcall
dec
dec
mov
mov
push
sahf
xchg
fidivs
in
pop
xor
popf
call
ljmp
imul
lods
fsubr
or
push
mov
fs
cmp
push
inc
and
jne
inc
mov
clc
inc
out
inc
scas
std
imul
daa
or
orl
or
pop
clc
inc
push
mov
jecxz
push
mov
mov
mulb
incl
xor
mov
mov
push
fcoms
jmp
in
fisttpll
lcall
cs
gs
imulb
xor
pop
jmp
ret
lcall
push
lcall
adc
roll
je
outsb
loope
mov
pop
inc
adc
pop
incl
lret
out
jg
cmpl
aad
stos
scas
ficomps
mov
popf
push
cmp
je
nop
lock
push
cmp
xchg
movsb
shll
divb
imul
dec
xchg
int
dec
daa
aaa
leave
mov
pop
into
fldenv
xor
lds
xchg
enter
lcall
sub
test
add
testl
jnp
rol
test
aas
mov
pusha
jne
push
int
sub
ljmp
lcall
sbb
jmp
fnstsw
into
sahf
hlt
inc
sahf
imul
lahf
jg
cld
subl
xchg
int
cltd
sub
add
pop
add
jo
call
pop
push
sbb
lea
pop
xchg
dec
scas
aad
cmc
sti
xchg
mov
push
jg
sub
dec
sar
xor
gs
push
mov
jmp
les
call
rcrl
push
or
push
xchg
int3
cmp
repnz
inc
insb
pop
and
repz
cwtl
cmp
jecxz
int
idiv
mov
mov
add
dec
pop
ja
sbb
jmp
sahf
xchg
mov
jo
adc
fidivl
inc
jo
lea
xor
push
jae
dec
shl
faddl
adc
adc
loope
loop
ljmp
xor
mov
lcall
pop
jg
pop
mov
loope
mov
mov
out
jmp
dec
test
mov
les
mov
sub
std
jg
aam
stc
cltd
leave
and
notb
jmp
cmp
add
call
sbb
scas
stc
and
add
andb
imul
decl
call
inc
mov
das
fsubs
sahf
fisubrl
into
ljmp
sbb
out
bound
xchg
pop
jl
and
out
dec
or
call
mov
in
pop
rcll
faddp
hlt
and
adc
fcmovne
xorl
loope
mov
jne
ret
pop
mov
mov
incl
iret
adc
lahf
xor
movl
test
lcall
xlat
popl
cmpsb
xchg
dec
jle
jae
fbstp
xchg
lret
bound
mov
push
ficompl
jno
push
push
out
rolb
cmp
push
sub
pop
ret
pop
add
insl
lods
sub
pop
xchg
imull
xor
in
aas
jecxz
dec
jb
dec
pusha
jp
jg
and
push
add
bnd
push
aas
shl
rcll
ret
pop
clc
pop
pop
sub
les
inc
fidivrs
mov
out
out
xchg
int3
push
xor
fisubs
mov
cli
in
lcall
rcr
mov
mov
sub
shlb
fisubrl
call
jmp
mov
icebp
or
inc
mov
pop
mov
idiv
sbb
adc
in
icebp
idivl
imul
mov
or
inc
pop
mov
ljmp
orl
cmp
jle
imul
cmove
aam
hlt
sbb
inc
ja
in
sub
aaa
cli
imulb
pop
sbb
out
repz
cld
jg
nop
fmulp
cltd
or
or
cltd
push
xchg
mov
fistpll
jl
xchg
mov
xchg
aad
push
inc
mov
pop
mov
jmp
mov
fs
cmpsl
mov
stos
les
pusha
ljmp
push
addl
adc
ret
fs
xor
decl
jge
and
jns
orb
mov
lea
icebp
pushl
cli
in
test
sbb
mov
cmp
ljmp
stos
push
ror
out
out
in
stos
xchg
addr16
cpuid
out
aad
sub
cli
jg
ljmp
out
pop
cmpsb
mov
loope
ret
jae
adc
lcall
ds
lret
jb
ds
out
dec
cld
mov
out
mov
out
mov
adc
inc
into
xor
dec
xor
xor
sub
xchg
jmp
pop
dec
add
shlb
call
pop
scas
mov
inc
jo
sti
add
jmp
mov
mov
dec
ret
pop
lds
pop
mov
mov
push
in
dec
call
repnz
inc
call
dec
xchg
pop
fcmovne
add
jmp
call
dec
xchg
xor
add
lods
hlt
out
out
mov
jp
outsl
fwait
cli
cmp
jno
hlt
lcall
push
pop
andb
mov
or
add
adc
mov
xchg
test
or
pushf
fistps
cmp
mov
pop
jae
in
aad
icebp
pushl
mov
loop
int
mov
mov
lcall
xchg
cmpsb
sarl
inc
shld
mov
jo
push
lds
lahf
loop
xorb
stc
cmp
fstp
stc
mov
cmp
in
dec
repnz
add
nop
dec
ljmp
hlt
decl
cmc
int3
test
xchg
add
mov
push
jmp
dec
aad
pop
out
push
jnp
xchg
and
subb
mov
fidivrl
mov
decl
pop
out
add
minps
mov
inc
push
ds
movsl
imul
rorb
and
inc
call
or
push
cwtl
pop
mov
fsubrl
test
test
adc
mov
push
ja
decb
pop
cli
dec
daa
sub
icebp
loope
orl
lcall
push
mov
sbb
sar
ljmp
xchg
mov
jge
mov
xchg
jle
aas
clc
lcall
call
fcom
adc
lret
popa
push
push
subb
lea
jae
fsubs
push
adc
jmp
nop
push
push
call
ret
in
jl
in
out
data16
cs
and
xchg
dec
xchg
pop
jns
dec
push
or
fisubl
les
ss
fcomip
roll
test
push
and
daa
xlat
jb
dec
cmpsl
or
je
cmp
jmp
xchg
fmulp
aam
std
push
and
insb
das
hlt
jg
popf
fisttpll
pusha
push
fs
dec
mov
adc
mov
sub
jb
mov
jns
stc
adc
mov
shll
addl
sar
jg
mov
xor
fldt
lods
jae
rep
sub
xchg
adc
lcall
ret
inc
mov
sahf
sub
push
hlt
jbe
mov
push
ljmp
scas
mov
adc
and
out
sub
and
inc
push
dec
gs
ljmp
inc
test
mov
ret
mov
iret
mov
xor
inc
jb
push
jge
insl
jno
cmp
ficoml
push
mov
hlt
xchg
in
lock
add
stc
pusha
add
push
ljmp
jnp
sub
xchg
pop
fsubrs
cmc
xorb
or
xchg
lahf
inc
pop
mov
or
fmuls
cld
rolb
inc
mov
xchg
cmove
cmp
or
lcall
mov
add
inc
jns
add
rcl
iret
shrb
adc
xchg
jne
pop
pushl
dec
outsl
add
sti
xchg
scas
push
dec
fisttps
into
notl
sbb
lcall
decl
push
movsl
movb
add
mov
decl
int3
sbb
enter
popf
and
pop
pop
adc
mov
insl
out
push
dec
aas
push
xorb
out
push
ljmp
mov
movsb
cmp
call
fcmovbe
mov
into
in
mov
jbe
std
mov
pop
lahf
adc
lds
pop
push
cld
dec
imul
add
dec
cltd
add
sti
shr
add
dec
ret
cmp
fucomi
aas
roll
push
les
mov
add
dec
mov
xor
mov
pushl
out
mov
ss
dec
xlat
jnp
mov
icebp
xchg
inc
enter
adc
inc
add
mov
inc
enter
lret
add
aaa
dec
adc
call
sub
fs
insl
add
hlt
test
jge
add
call
lret
data16
imul
pop
mov
mov
ja
je
or
xchg
pop
cli
imulb
stc
push
fwait
enter
ret
lods
lea
inc
push
push
pushl
xchg
ds
mov
jg
sbbl
mov
mov
cmp
mov
dec
fildl
push
mov
shl
out
jg
fiadds
popf
cmp
adc
mov
or
gs
or
inc
incl
lock
cmc
or
and
or
stos
shrl
lock
lcall
mov
lods
jo
or
pop
fdivrp
inc
pop
test
movsl
in
js
lcall
repnz
mov
loope
jne
and
pop
push
icebp
pop
jno
ljmp
mov
aaa
add
sub
mov
das
je
pushl
push
mov
mov
scas
nop
hlt
push
sub
jle
incl
cmc
jl
in
popf
push
xchg
lock
fcoms
in
cli
test
imul
sarb
dec
sub
sbb
xchg
sbb
ljmp
xchg
outsb
sbb
jmp
daa
popf
xor
data16
fs
sub
pushf
jmp
iret
add
insb
shlb
out
arpl
inc
cmp
xchg
and
jne
repz
pop
cld
xchg
dec
xchg
cmp
pop
dec
pusha
sbb
or
into
and
cmp
dec
push
insl
mov
sbb
inc
ljmp
mov
mov
ja
sarl
or
pop
cmpsb
daa
mov
mov
ret
xchg
fadd
push
xchg
mov
inc
sbb
mov
pop
lahf
ja
call
or
ret
cld
fldt
out
rcll
imul
call
call
cmp
divl
test
mov
jecxz
outsl
mov
pushl
lods
mov
jmp
pop
ficomps
cmp
cli
lcall
cltd
sbb
lcall
dec
aaa
loope
sub
add
jecxz
sub
add
aad
js
aas
test
pop
out
ss
inc
cmp
mov
xor
push
movsb
sub
movsl
and
sub
xor
fnstsw
jmp
jle
add
ds
or
pop
fwait
lcall
pushl
jo
test
mov
pop
insl
mov
sub
push
addr16
je
push
js
ffreep
ss
out
gs
lods
incl
bound
es
mov
mov
cmpsb
sbb
jo
cwtl
test
xor
mov
add
clc
cld
incl
jmp
cli
fnstcw
inc
sbb
cmpsb
dec
out
jg
int3
fmull
jecxz
lahf
test
dec
shll
mov
cld
rolb
and
adc
scas
adc
xchg
cld
sub
mov
jmp
or
sbb
loope
dec
aam
sub
and
pop
loop
out
adc
mov
jle
xchg
push
sbbb
lods
mov
flds
decl
roll
inc
xlat
xchg
divl
cmc
add
add
lret
mov
test
orl
push
jecxz
xchg
mull
push
ret
fwait
and
fists
dec
jnp
fnsave
imul
sbb
inc
mov
ret
xchg
cltd
push
fcmovne
clc
jg
xchg
aam
popa
lods
adc
lods
pusha
pushf
xchg
pop
mov
inc
loope
and
lcall
cmp
add
adc
popa
inc
cmp
push
fimull
and
mov
xor
dec
add
sub
subb
xor
dec
xchg
sbbl
mov
mov
in
add
pop
hlt
push
sub
inc
pop
push
loope
jb
adc
call
out
lods
or
jg
aaa
dec
jno
addl
sbb
ljmp
lret
ljmp
push
ljmp
jns
mov
imul
fsubl
mov
push
mov
imul
jnp
clc
aad
dec
cltd
or
int3
xlat
in
xlat
push
inc
fwait
push
clc
test
shlb
push
mov
push
cs
loope
inc
js
mov
add
addr16
cltd
jmp
popf
dec
mov
xchg
rorb
adc
mov
fistl
pop
loopne
xchg
push
jg
sbb
mov
adc
test
incl
mov
sub
push
aas
js
mov
lret
data16
cmc
fstl
or
jecxz
cmc
in
fbstp
push
or
cwtl
jo
std
sub
mov
sbb
ljmp
icebp
mov
mov
sub
sbb
push
add
es
enter
mov
and
idivl
sahf
mov
sub
std
push
call
adc
pop
jl
lods
pop
adc
incl
add
pop
pop
gs
mov
mov
enter
xchg
jnp
sbb
sti
jmp
movsl
inc
or
mov
mov
and
xchg
pop
mov
pop
scas
push
xchg
pop
mov
fnstsw
pushf
dec
insb
xchg
repz
and
popf
je
decl
push
sbb
pop
mov
stc
mov
popf
pop
movsb
movsb
mov
rclb
stos
pop
add
nop
jne
stc
addb
hlt
imul
mov
inc
das
cmp
cmc
jg
jmp
aas
adc
aas
xor
in
lret
mov
xor
xchg
clc
mov
lcall
std
inc
jl
data16
push
fmulp
xchg
sbb
jb
add
xchg
push
push
inc
mov
or
push
pop
daa
cli
les
loopne
sub
mov
and
dec
cld
call
stos
mov
js
or
push
cmp
or
cli
xchg
push
fucom
inc
sti
clc
dec
and
out
ficoml
popa
loope
ret
shlb
xor
push
add
cltd
cmp
sub
dec
inc
fisubl
mov
pushl
fs
jne
dec
push
add
mov
into
pop
pop
sbb
xchg
dec
xor
xchg
fidivrl
pop
cli
decl
mov
pop
notl
mov
ret
in
pop
hlt
lcall
fwait
jecxz
sub
pop
movsb
adc
cli
and
push
adc
sarb
pop
and
daa
pop
inc
cld
das
mov
and
sbb
lods
loope
ljmp
je
jbe
ja
mov
mov
lock
dec
mov
call
pop
mov
sbb
mov
jp
pop
gs
add
xor
cmp
cld
xchg
and
or
mov
push
out
xchg
mov
lret
call
stos
outsb
add
stos
xor
jae
xchg
and
fnstcw
dec
inc
xor
or
xor
insb
int3
je
in
mov
jmp
and
decl
xlat
fsincos
cmp
inc
mov
ficomps
hlt
test
xor
cld
jmp
cmp
add
std
jge
gs
mull
int3
mov
ljmp
imul
cmp
aam
imul
adc
scas
pop
mov
out
pushl
cli
incl
cwtl
xchg
sub
pop
out
jnp
cmp
mulb
scas
sbb
in
pop
cs
adc
add
aas
jns
cmp
mov
sti
add
inc
iret
pop
adc
xchg
sti
push
aam
dec
fstpl
aas
cltd
cmp
pushl
pusha
mov
fbstp
cmp
ret
push
outsl
arpl
add
xchg
lods
dec
fadds
lock
xchg
cli
data16
into
ret
push
call
lock
test
lcall
lds
int3
idivb
lods
cld
inc
and
jmp
addb
ficoms
push
pop
push
jmp
cs
cmp
stos
mov
movsl
jmp
lcall
and
popf
out
lcall
scas
sar
jo
in
rcrl
stos
lahf
xor
add
fs
mov
pusha
mov
pusha
aad
fwait
out
lock
lods
jns
ljmp
fs
xor
push
pop
xchg
xchg
jp
pop
jmp
fnstsw
pop
mov
cmp
adc
sbb
mov
mov
popf
imulb
jg
cmc
hlt
cmpsl
fs
fcoms
popf
add
cwtl
in
iret
dec
cs
fisttps
outsl
cmc
incl
stc
mov
in
mov
fldcw
fwait
cmc
jl
imul
sar
add
vcmpsd
jle
or
sbb
popf
in
xlat
int3
pusha
fistps
loope
stos
jno
pushl
shll
nop
fimuls
loopne
addr16
sub
roll
push
mov
insb
dec
mov
outsb
std
pop
movsl
idivl
pushl
cld
leave
sahf
fcmove
loopne
xchg
mov
jo
cld
mov
scas
mov
xchg
jle
mov
sbb
das
push
pop
sti
push
sbb
dec
or
fists
adc
int
add
and
lcall
xchg
add
addr16
mov
mov
push
mov
sbb
imul
jne
pop
mov
mov
sbb
scas
inc
or
ret
shll
out
and
or
mov
mov
mov
inc
sub
sub
adc
push
sbb
fistpl
rcr
and
ficoml
mov
outsl
hlt
cs
repz
aaa
leave
out
notb
addl
and
fiaddl
mov
cmp
jecxz
repnz
in
jnp
xchg
jp
mov
decl
inc
rcr
and
fadds
movsl
lods
repz
sahf
movsl
hlt
sub
rclb
sub
rcll
pop
ret
das
lods
cltd
mov
popa
sub
call
clc
scas
scas
notl
scas
or
mov
mov
adc
jmp
add
cltd
fwait
push
notb
jg
fcomip
xchg
adc
push
test
pop
mov
imul
ljmp
and
shrb
pop
mov
or
pop
cli
in
or
gs
aad
sbb
shl
inc
cmpsl
out
mov
adc
iret
inc
jmp
rol
sahf
mov
popa
insb
cmp
js
call
arpl
popa
cli
push
out
xlat
cmpsb
push
outsl
bnd
andl
pushl
notl
ljmp
pop
loopne
lock
and
jno
loope
jp
xorl
rol
mov
push
std
lea
decl
push
sbb
adc
cmc
nop
sbb
addr16
lret
insl
fwait
push
pop
jle
and
lock
call
push
xchg
mov
jo
mov
stos
cmp
insl
dec
pop
in
ljmp
lock
push
sti
or
repnz
pop
outsl
dec
xor
and
xlat
cmp
ret
in
xor
jg
ljmp
dec
pop
push
test
subb
inc
mov
pop
stos
std
push
sub
jbe
iret
fldenv
and
incl
fs
out
add
insb
insl
call
sub
push
loopne
aaa
filds
cli
xchg
push
mov
mov
pop
ljmp
jne
add
cmp
push
xor
xrelease
sbb
enter
add
fbld
inc
xchg
lock
call
and
je
pop
xor
in
or
pop
fnstsw
pop
push
jl
iret
push
cmp
fnstenv
pop
dec
ret
cli
sub
xor
popa
jmp
fwait
iret
outsb
imul
jecxz
adc
dec
std
call
repnz
mov
movsb
inc
sub
push
sub
cmp
aam
arpl
outsl
aaa
dec
out
sti
mov
sti
fbstp
fcompl
adc
outsb
pop
and
and
out
imul
in
in
ljmp
xor
mov
std
fdivrp
mov
stos
stos
sub
in
push
jp
jecxz
jmp
push
andb
pop
push
divb
sub
inc
mov
and
fwait
cli
dec
std
jge
addr16
inc
loop
dec
bound
sub
sbb
push
dec
in
rolb
jbe
cmpsb
pop
mov
mov
js
pusha
add
ljmp
cmpl
mov
sahf
fcomip
aaa
inc
mov
cmp
cld
xchg
mov
orb
lahf
jo
push
cwtl
iret
ja
mov
test
dec
std
pushl
pop
add
aad
repnz
sbb
call
jle
mov
dec
dec
jmp
mov
shll
sbb
stos
loope
xlat
rclb
jmp
incl
out
lcall
pop
jnp
repnz
add
ljmp
dec
je
or
pop
and
fs
pop
test
cld
ds
lcall
out
mov
adc
in
jnp
pop
clc
call
add
mov
jmp
mov
enter
setb
sahf
jl
mov
sub
cmp
dec
jg
and
cmp
ret
sbb
je
push
in
dec
xchg
push
orb
cs
mov
js
rcrl
jp
sbb
negb
pop
mov
in
or
add
roll
shrl
inc
xchg
or
test
call
jns
es
jo
jg
dec
add
sar
lcall
test
das
fidivl
insb
push
push
jge
dec
cld
mov
cmpsb
xchg
sbb
inc
mov
je
stos
cltd
mov
sub
push
es
xor
les
push
lret
imul
std
scas
mov
inc
adc
fistps
mov
mov
sbb
add
jnp
js
xchg
inc
gs
test
add
sub
into
imul
jg
or
repz
sbb
xor
adc
pop
or
push
mov
pushl
clc
jmp
lret
je
cmp
jle
jmp
out
clc
adc
incl
mov
jl
xor
cmp
jmp
icebp
mov
fnstsw
lods
decb
lods
cmp
push
test
adc
stc
pushl
arpl
sahf
mov
adcb
jle
gs
adc
in
out
cmp
vmwrite
imul
push
out
sarl
mov
mov
xchg
adc
cmp
sahf
ficomps
cld
sbb
and
ds
pop
out
pop
ss
cmpsb
jg
dec
inc
stos
adc
push
mov
scas
add
decl
cld
pop
dec
loope
test
lea
cltd
loope
rorl
ja
jg
decl
ja
jbe
sub
and
inc
aad
inc
movsb
adc
mov
and
call
inc
pop
shrb
loop
sbb
sbb
sahf
in
jp
out
cwtl
call
cli
cmp
xchg
les
sub
pushl
inc
add
sar
inc
mov
push
adc
xchg
sbb
mov
fildl
pop
mov
mov
shlb
pusha
mov
cmp
decl
fisubrl
sub
sbb
push
ret
das
inc
les
adc
add
push
dec
xorb
leave
shll
ja
leave
sbb
and
xchg
push
jns
mov
xchg
adc
out
call
and
fidivs
add
lahf
fdivrs
test
xlat
cli
ret
hlt
adc
mov
sbbl
insl
mov
sbb
nop
mov
fwait
mov
scas
inc
in
fcmovnu
pop
ror
incl
std
or
pop
or
push
mov
rorl
loopne
lahf
loopne
xor
push
jmp
push
les
arpl
adc
mov
and
jbe
mov
out
ficoms
add
and
xchg
mov
or
lods
outsb
pop
sahf
push
jne
outsl
mov
dec
jnp
jno
call
pop
or
xchg
fucom
stos
movsl
imul
xlat
lock
sub
cmp
and
in
sub
pusha
xchg
loopne
cltd
adc
mov
jns
out
arpl
adc
sbb
xor
xchg
adc
xor
rclb
jg
pushl
or
xor
fdivp
outsb
xlat
cmpsl
arpl
jp
inc
dec
std
dec
jbe
cmc
je
out
pushf
popf
stos
ds
cli
adc
cmp
mov
xchg
cli
push
sbb
add
div
cld
cmp
stc
clc
scas
int3
push
out
int
nop
imul
pushf
imul
popa
decl
movsb
fwait
ds
test
sub
jp
aam
push
ud0
jbe
push
out
or
sbb
test
xchg
xchg
jg
jns
dec
adc
jl
out
inc
sbb
outsb
push
mov
or
scas
jns
sbb
push
sbb
mov
mov
jg
dec
fcmovb
dec
xor
xchg
fs
dec
sub
decl
int
repz
pop
xchg
or
inc
pop
pop
les
mov
pusha
jg
pushl
pop
aad
mov
and
xchg
cmp
and
push
mov
mov
pop
push
fstps
add
or
adc
call
scas
ljmp
jmp
es
xor
test
sub
scas
rcll
lds
jmp
pushf
fmuls
mov
cltd
test
or
jecxz
fists
inc
mov
pop
addl
mov
jo
sub
aam
pop
mov
call
sub
movsl
frstor
iret
popf
push
add
mov
adc
decl
loop
arpl
fcomps
xor
clc
jg
in
mov
adc
jb
sub
popf
xor
test
pushl
gs
pop
aad
mov
scas
mov
pop
faddl
cmp
bound
bnd
push
loop
int
cld
mov
das
cld
call
sarl
out
rolb
sub
lods
jg
push
mov
mov
push
fwait
cmp
adc
movl
sub
insb
cs
leave
and
sbb
in
std
dec
mov
outsb
mov
fcmovne
leave
cs
popf
dec
out
dec
fstl
aaa
jp
call
mov
adcb
cmp
adc
out
jge
ja
mov
dec
sbb
push
sub
stos
jg
cld
sub
jg
cmp
insl
sub
push
or
pop
pop
mov
out
nop
pop
ret
pop
js
jge
xlat
insl
mov
fisubs
out
and
sub
mov
sub
ja
bound
test
lds
cmp
jne
inc
scas
int
test
bound
insb
lea
out
pop
in
aad
cld
in
jno
aad
sbb
mov
xor
ljmp
loop
call
dec
dec
or
push
daa
movsb
insb
lods
sti
out
jle
outsl
mov
call
push
nop
pop
and
xchg
dec
inc
out
rcrl
mov
call
insl
jge
rcr
xlat
std
and
jge
scas
int3
jg
xor
loop
inc
fwait
sub
or
push
push
rcrl
inc
leave
push
imul
incl
cmpsb
xrelease
lcall
mov
lahf
xor
push
mov
add
adc
jne
mov
nop
jb
mov
xor
sar
mov
inc
movsb
int3
jnp
fstpt
inc
and
dec
cltd
mov
lcall
popa
push
jle
in
push
shr
decb
mov
dec
out
mov
xchg
notl
and
inc
pushf
push
sbb
call
mov
incl
pushf
shr
jmp
cmpsl
xor
rcll
mov
inc
pushl
cli
lcall
jge
aad
xlat
stos
scas
jg
sub
cmp
dec
add
sbb
jmp
push
sar
ds
jns
sub
enter
decl
cld
lahf
ret
cmc
inc
adc
imul
je
cltd
fcmovnu
call
fsubs
cmp
xchg
mov
jnp
or
xchg
je
push
jg
push
decb
sbbb
sub
mov
lret
lret
hlt
jl
fwait
dec
or
push
addb
scas
or
cmp
and
inc
and
inc
pop
mov
leave
mov
iret
lea
mov
es
adc
iret
in
int
ljmp
inc
sbb
and
lret
mov
dec
sub
stc
or
adc
mov
out
ljmp
fisubs
cmp
and
jo
js
jmp
loopne
inc
repnz
push
pop
clc
lcall
sbb
xlat
out
cmp
pop
mul
scas
jo
mov
cmp
test
pop
cmpsb
xchg
loop
popf
and
sbb
pushl
fwait
dec
cmpsl
fisttpl
sbb
dec
int
pop
push
jg
pop
shr
push
orb
aam
xchg
loop
dec
les
mov
cld
lret
inc
sbb
adc
mov
daa
pushf
push
mov
bound
idivb
sbb
decl
call
repnz
and
imul
fmul
xchg
sub
jl
shll
fld
cmp
fucomip
cli
idivl
mov
add
pop
mov
jg
loope
inc
xchg
leave
mov
stos
xor
cwtl
out
jb
pop
mov
jmp
ljmp
leave
stc
ljmp
xchg
out
push
pusha
xchg
push
xchg
push
lret
int
daa
pop
clc
jmp
and
mov
lds
ret
and
adc
xlat
jg
jmp
xchg
jge
aad
mov
lahf
xchg
mov
int
xchg
push
mov
mov
push
std
jmp
addps
or
loope
imul
push
sub
call
adc
jo
jecxz
insb
adc
ljmp
push
inc
xchg
jnp
pop
push
mov
pop
addr16
cmp
jmp
dec
fstl
or
sbb
in
gs
outsl
daa
jnp
adc
push
xchg
decl
std
out
ja
add
popa
mov
leave
mov
imul
mov
incl
and
mov
mov
inc
call
sbb
mov
dec
jae
inc
mov
mov
cmpb
mov
sahf
out
sbb
mov
test
outsl
icebp
movsl
data16
hlt
sahf
ja
stc
in
or
test
pop
cs
aas
fs
sub
nop
aam
or
data16
push
add
sbb
dec
dec
test
mov
lds
xor
push
xchg
push
decl
lods
inc
fldenv
mov
popf
inc
sub
iret
xor
incl
insl
dec
jb,pt
adcb
jecxz
addr16
jb
movsb
cli
jg
cmp
lcall
sbb
xchg
aam
in
or
dec
out
dec
stc
push
cmp
pop
clc
call
jno
aas
xor
sahf
add
jmp
ds
fbld
pushf
jnp
pop
pop
mov
or
cmc
push
cltd
lcall
sbb
mov
repnz
pusha
das
repz
inc
cmc
sub
das
xor
mov
jb
lock
rsqrtps
jne
dec
push
sub
xor
rcrl
ficoml
in
mov
out
fcoml
call
fwait
and
lret
shrl
pop
ficoms
test
idivb
dec
sbb
mov
fwait
push
lret
fimull
in
mov
jnp
mov
fidivl
sbb
jmp
call
aaa
add
mov
call
das
xor
sbb
stc
mov
fucomip
mov
rcr
or
mov
rcrb
ss
cmpsb
lret
cmp
cmpsb
mov
sti
push
xor
inc
dec
iret
andl
decl
shll
mov
shlb
xorw
mov
lret
xor
es
sbb
cmp
leave
or
mov
dec
outsl
loope
jl
cli
call
jl
push
add
movsb
bnd
cmpsb
mov
sbb
dec
jecxz
pushl
repnz
sub
xchg
mov
jbe
dec
aaa
divl
addr16
into
and
jg
sti
xor
jae
push
in
mov
add
adc
adc
rclb
xor
insb
rcr
decl
mov
or
or
outsb
inc
cmp
in
rorl
ljmp
mov
jecxz
stc
lret
in
outsb
cltd
push
and
and
mov
xor
outsb
mov
pushl
jle
fs
push
popa
sbb
ljmp
dec
rolb
test
mov
adc
test
negl
divb
jg
push
negl
inc
clc
clts
push
xchg
or
adc
sar
mov
dec
es
cmp
call
jmp
xchg
dec
out
pop
push
xchg
insb
les
adc
pop
or
dec
mov
mov
inc
ljmp
pushl
loopne
ret
adc
sub
xlat
inc
jp
xchg
pushf
mov
fmuls
push
in
test
popf
mov
es
ret
mov
ljmp
lcall
aas
push
push
push
push
xor
and
js
mov
adc
cmpsl
pusha
lcall
push
imul
fisubrl
sbb
xchg
enter
push
je
mov
inc
xchg
nop
cmp
jp
test
mov
lea
add
das
inc
icebp
call
inc
xor
push
test
gs
xchg
mov
pushl
adc
xchg
xor
mov
std
shl
mov
or
bound
mov
ja
call
dec
xor
lods
rorl
lea
mov
jmp
pusha
push
mov
jg
pop
in
push
xchg
lds
and
lret
pop
or
push
mov
fstpl
or
cmp
push
shlb
out
inc
out
mov
inc
filds
popf
xor
cmp
lcall
xor
mov
add
jmp
jb
int3
jp
nop
cmp
lcall
add
xchg
cmpsb
ret
or
xor
sarl
lods
mov
ss
int
dec
test
push
out
pushl
cs
or
push
out
or
xor
mov
xor
sbb
xchg
sbb
scas
les
ljmp
pop
imul
push
fstpl
decl
stos
xor
call
mov
sub
cwtl
into
in
mov
loopne
insb
inc
call
or
and
pop
scas
popa
pushl
push
repz
movsb
sub
leave
adc
sbb
call
xorb
xchg
cmp
pop
or
sub
xchg
pop
cmp
fwait
inc
jbe
sti
aam
sahf
imul
ljmp
adc
sti
adc
notb
push
andb
mov
inc
pop
sti
int3
cs
push
mov
push
rcrl
call
mov
mov
outsl
dec
ret
mov
mov
and
das
xchg
sub
mov
call
outsl
decl
adc
sbb
daa
stos
sbb
out
jp
dec
cwtl
jmp
loopne
pop
fcmovbe
pop
sub
lcall
sar
lcall
fwait
adc
ljmp
loop
mov
mov
rorb
cmp
pop
mov
mov
sbb
add
sbb
popf
sar
clc
jg
jbe
lret
cmp
movsl
sub
inc
pushf
cli
xor
adc
clc
aad
incl
int3
and
adc
mov
pop
fdivrs
movsl
jecxz
and
fcomps
fbld
repz
ftst
or
sar
ljmp
cwtl
jp
repnz
xchg
adc
pop
sar
mov
xorl
adc
or
dec
cmp
mov
add
stc
pop
add
push
inc
fsub
ljmp
mov
sub
mov
enter
jns
outsl
rcl
hlt
xchg
scas
repz
jecxz
sarl
jns
mov
fsts
loope
sbb
inc
add
or
add
pop
sub
test
call
mov
jb
loop
and
jns
leave
in
push
jecxz
out
lods
fbld
pushf
add
mov
cmp
xchg
inc
cmp
xchg
adc
lods
decl
std
jle
icebp
push
sbb
ret
ljmp
mov
xorl
mov
ja
cmp
jp
popl
add
adc
loop
add
pop
icebp
xchg
and
mov
repnz
mov
mov
pushl
das
jecxz
mov
push
adc
xchg
mov
or
fimull
repz
mov
mov
nop
xor
ljmp
cmpl
lcall
sbb
lods
test
subb
jg
jle
fnsave
xor
jg
push
pushf
out
xchg
fldcw
sub
push
push
jg
cli
mov
pop
cmp
cmpsl
adc
std
jbe
push
jg
mov
pop
jmp
mov
and
pop
mov
das
pusha
push
shr
pop
mov
fs
incl
mov
stos
sbb
sbb
mov
inc
mov
lcall
mov
cmc
pop
push
stos
or
push
mov
or
sahf
ds
jbe
sbb
es
jo
arpl
pop
hlt
pop
xor
mov
lds
cmp
mov
call
inc
pop
mov
repnz
pop
dec
sbb
push
or
ljmp
lock
cwtl
jecxz
ficomps
bound
push
test
movzwl
fsubrs
cmp
dec
jmp
sub
pop
pushf
popf
bound
mov
decl
adc
lcall
test
insl
sub
rcrl
mov
pop
mov
cmp
call
in
mov
lods
lods
push
jecxz
decl
stos
popf
adc
fdivrp
lcall
xchg
out
fs
rol
outsl
aaa
mov
inc
xchg
push
pushl
xlat
jnp
mov
out
nop
xchg
and
add
hlt
fisttpll
leave
gs
popa
sti
in
xchg
or
inc
add
fldenv
mov
sarb
dec
movsl
sar
decl
inc
mov
sub
adc
pusha
mov
nop
adcb
jg
mov
clc
jmp
repnz
aam
xor
mov
fcmovb
mov
mov
sbbb
pop
mov
out
lods
movsb
cmp
mov
dec
push
movsl
xchg
stos
adc
cwtl
lock
sub
or
pop
jnp
inc
int3
mov
pushl
test
sahf
jl
mov
decl
test
dec
cmpsl
jns
and
jl
subl
jge
popa
xchg
and
add
decl
mov
add
xchg
jnp
sub
jno
and
out
xchg
xlat
imul
popf
add
hlt
xor
xorb
jecxz
rorl
mov
stc
cld
xchg
adc
cmp
mov
out
std
sbb
stos
ljmp
or
cmc
aaa
in
loope
mov
fs
out
cld
jg
mov
jo
ficompl
mov
ret
push
scas
clc
pop
call
cmc
outsl
sub
lret
stc
andb
cs
sub
mov
xor
call
mov
aam
xchg
out
outsl
cmp
sbb
or
mov
pop
clc
cmp
inc
les
fnstcw
sub
xchg
incl
mov
xchg
mov
push
mov
xor
jo
ss
mov
sahf
xchg
ljmp
incl
loop
mov
mov
mov
mov
xor
ljmp
xor
outsb
jl
pop
pop
xor
and
xchg
jg
adc
adc
pop
inc
lcall
jmp
mov
cld
lcall
fnop
cmc
test
inc
mov
jbe
and
lods
das
jno
dec
mov
call
dec
outsl
cmc
xchg
pop
popf
adc
mov
dec
sar
jg
sub
xchg
in
inc
jl
xor
in
ffreep
adc
mov
fsubl
stc
pop
lcall
xchg
and
sbb
jmp
sar
decl
les
cld
insb
pop
cmp
add
mov
push
pop
fiaddl
dec
loop
dec
adc
pop
dec
jl
outsl
cmpsl
mov
pop
out
pop
pop
cld
inc
incl
mov
push
jmp
pop
lods
jmp
push
call
push
lret
ljmp
insb
jecxz
mov
and
test
inc
fldl
mov
jb
call
pusha
imul
daa
mov
mov
push
cld
inc
call
sahf
lret
addr16
xor
cli
mov
lods
lcall
adc
dec
pop
repz
sti
stc
insl
sbb
ljmp
lcall
pop
movsb
jge
lods
mov
add
fwait
push
cmp
enter
jge
into
cmp
xchg
fildll
or
mov
shrb
mov
xor
sti
jnp
rcrl
dec
add
sar
xchg
outsb
sbb
rclb
lcall
push
inc
cmp
icebp
mov
int
out
std
insb
pop
addr16
sarl
decl
lock
mov
ret
xlat
popf
arpl
xor
push
lods
int
ss
pop
call
push
mov
mov
lods
iret
inc
sub
int3
and
call
lods
xor
add
and
adc
pop
lods
addb
push
cmpsl
ljmp
mov
jl
decb
and
scas
or
popf
insl
mov
rorb
in
aaa
decb
mov
xor
sbb
sar
mov
lea
mov
stc
push
xor
mov
shrb
shrl
cwtl
push
dec
lahf
push
xor
mov
mov
mov
ljmp
roll
ljmp
daa
lods
lcall
stc
sbb
cli
inc
das
xchg
adc
decl
sbb
mov
mov
inc
shrw
enter
cmp
sbb
dec
aaa
cli
xchg
clc
adc
int3
sbb
mov
cmp
cmp
stc
xor
call
pop
test
sbb
insl
mov
mov
jecxz
push
xor
xchg
popa
fisttps
test
push
jge
sbb
je
and
adc
lock
push
test
jge
dec
inc
mov
dec
xor
mov
cmp
leave
add
add
dec
dec
jo
rcrl
sbb
cltd
out
sarb
push
cmp
add
mov
or
sbb
shrl
xchg
call
les
pop
and
mov
imul
popf
mov
adc
pop
pop
int
add
pop
sub
inc
or
ret
xor
add
daa
subl
xchg
xchg
inc
ljmp
jne
sbb
clc
jae
xor
pop
outsl
cmpsl
lds
shrb
decl
stos
xlat
lret
push
test
xchg
ja
lods
rclb
cli
inc
jno
scas
jne
push
mov
inc
inc
push
lock
jg
gs
cmpsl
clc
mov
out
icebp
cmp
subb
ljmp
iret
mov
das
mov
outsl
push
loope
xchg
sbb
and
cmc
add
inc
adcl
iret
pushf
notl
pop
repnz
cmp
je
jo
lods
shlb
add
addl
rcrl
xlat
cmp
mov
pop
cli
test
ljmp
cmc
lods
mov
out
cltd
jge
mov
push
sbb
xor
sbb
subps
incl
in
jg
mov
ret
clc
cld
sbb
sti
mov
lcall
jmp
push
mov
lods
addl
js
cs
sub
mov
cmp
jnp
loope
lcall
loop
cmp
pop
xchg
sbb
cld
decl
xor
sub
inc
divl
mov
push
sbbb
push
adc
jl
aad
lock
ljmp
inc
leave
gs
repnz
inc
mov
or
in
adc
add
and
mov
fistps
pop
lret
test
and
movsb
cmpsb
lret
loop
cld
stos
inc
cs
cwtl
lock
ljmp
push
lds
pop
outsb
mov
pusha
mov
loopne
ljmp
inc
jg
into
adcl
shll
add
jmp
pop
sub
or
ss
dec
xor
loope
adc
leave
pusha
scas
cld
push
ffreep
sbb
cmp
and
sbb
scas
jg
outsl
adc
adc
dec
stos
mull
xchg
pushl
out
jnp
mov
das
hlt
insl
outsl
icebp
ret
pusha
push
xchg
push
push
nop
push
adc
sub
das
pop
mov
cmp
mov
xchg
incl
inc
and
int3
jnp
idivl
in
std
pop
lods
or
adc
ljmp
and
jmp
ret
jnp
add
jno
add
aad
test
lods
cmpsb
fidivs
test
jge
ljmp
pop
mov
hlt
les
add
cmpl
pop
pop
lret
fsqrt
mov
fsubrl
test
add
pop
jae
jecxz
push
faddl
imulb
inc
lock
add
push
mov
imulb
pop
or
lea
hlt
enter
clc
pop
adc
jbe
sbb
inc
inc
mov
sbbl
fmul
jecxz
sub
mov
lcall
stos
push
jns
mov
sbb
pop
or
fcoml
inc
hlt
mov
inc
movsl
pop
xor
nop
addr16
push
sub
pushl
out
sub
adcl
shll
shlb
and
and
or
hlt
inc
out
sbb
into
dec
sbb
outsl
std
inc
nop
cmc
int
cmp
jl
jbe
ror
dec
aas
je
rol
fcmovb
jecxz
jmp
scas
loop
hlt
xor
sub
mov
jb
orl
aaa
cwtl
pop
jecxz
jns
xchg
popf
dec
dec
std
incl
inc
xchg
movsb
dec
imul
fs
xchg
decl
pop
jnp
and
fwait
loopne
movl
ffree
adc
pop
clc
pushl
insl
add
fcmovu
in
push
pushf
push
add
rolb
insl
das
add
call
add
jl
out
cmp
cmpsl
lcall
dec
fimull
mov
ss
and
sub
mov
cli
cmp
mov
ljmp
hlt
pop
xchg
mov
sar
cmp
pop
cmp
add
arpl
call
push
adc
roll
dec
adc
ficoml
insl
flds
popf
cmp
ficompl
add
clc
test
mov
fisttps
loop
enter
imul
pop
adcb
ljmp
cld
outsl
lods
inc
mov
es
icebp
sub
pop
cmc
adc
mov
decl
into
stos
xlat
fsubrl
jnp
scas
push
orb
xchg
outsb
pop
loop
pushl
shll
es
mov
in
dec
lcall
xchg
mov
cmp
and
push
gs
inc
mov
add
inc
push
cmp
push
out
aaa
sub
and
jns
push
std
jecxz
stos
lret
xor
test
out
rcrl
xchg
outsb
mov
push
fsub
dec
xor
lcall
test
mov
fisttpl
leave
popf
mov
push
out
fimuls
and
mov
pushf
int3
aam
fnstsw
rcll
test
and
pushf
add
jo
movsb
cmp
jns
dec
outsb
inc
ficompl
mov
and
cld
test
adc
and
mov
jge
rcrb
push
imul
mov
pop
add
inc
fdivs
stos
xchg
xchg
in
inc
jo
insl
mov
cmp
inc
push
pop
and
push
ja
pusha
pop
jge
sar
inc
loope
std
xchg
fdivr
ljmp
lcall
push
ds
into
xchg
sub
sub
adc
cmc
stos
jg
in
enter
lea
cli
dec
inc
inc
enter
int
inc
jge
mov
fidivl
std
and
xchg
and
fnstsw
lcall
lea
in
test
push
sahf
xchg
xor
xor
incl
inc
jb
out
aas
jae
cmp
aam
movb
call
and
aaa
dec
imul
pop
and
pop
sar
mov
pusha
lcall
and
imul
mov
clc
inc
repnz
cmp
jmp
outsl
mov
insb
mov
or
cmp
mov
ret
push
lods
insl
stc
pop
cmpsb
je
arpl
xor
mov
aam
rclb
outsb
adc
dec
push
loopne
jmp
mov
icebp
and
xchg
addr16
das
mov
test
pop
add
adc
add
das
loop
out
inc
push
in
and
and
push
cmp
or
or
xlat
std
jns
or
inc
mov
dec
xor
adc
sub
sbb
cmp
sbb
lock
mov
sub
cmc
mov
cmp
clc
call
and
cmp
push
inc
pop
adc
push
mov
call
dec
xor
insb
mov
ljmp
sbb
add
sbb
lods
mov
mov
adc
std
in
mov
fwait
ljmp
lods
jg
incl
inc
fstps
inc
insb
mov
push
shlb
mov
decl
ds
push
push
mov
out
stos
push
sbb
jmp
shrl
or
xor
or
cmp
sub
sar
ljmp
call
sub
xor
outsl
repnz
lods
dec
out
call
jmp
pop
dec
loopne
out
xor
xor
fisubrs
fildll
aam
push
mov
jb
add
add
jo
jecxz
add
xchg
or
dec
or
std
incl
fistl
push
xor
xchg
in
inc
pop
adc
ss
push
imul
add
inc
pop
dec
adc
push
jg
clc
xor
fcoms
or
loope
xchg
cmp
negb
push
dec
add
mov
in
jmp
mov
or
xor
lcall
mov
mov
mov
and
pushl
pop
jge
jmp
syscall
adc
push
jg
or
xor
jmp
faddl
sub
cwtl
cmc
daa
loop
jb
scas
das
jle
jnp
incl
das
mov
pop
mov
into
test
mov
loopne
fwait
imul
and
ljmp
pusha
hlt
mov
mov
xorb
mov
mov
mov
std
out
clc
out
sti
push
es
jbe
xchg
iret
imul
hlt
movsb
ret
cmpsl
jno
push
out
dec
dec
popa
jle
outsl
icebp
dec
dec
movsb
pushf
mov
dec
jne
xlat
jbe
xor
xor
push
xlat
cmp
pop
add
inc
data16
mov
sar
lcall
xchg
out
mov
das
cmp
push
dec
test
arpl
xchg
incl
data16
ss
mov
xchg
loope
stc
cmp
je
push
cs
out
repnz
loope
repnz
xchg
mov
das
push
mov
inc
dec
es
incl
decl
jnp
inc
cltd
mov
mov
push
call
mov
xchg
inc
add
cmpsb
dec
fnstcw
jg
out
lcall
mov
or
xchg
lret
mov
mov
mov
add
dec
daa
ljmp
pop
inc
jle
jg
lcall
rcrb
mov
jge
jo
sbb
mov
push
mul
or
mov
int
sbb
scas
out
sub
push
int
push
mov
call
jae
mov
roll
test
insb
gs
mov
cmp
pop
movl
or
mov
aam
or
adcb
cmp
fcos
decl
out
sbb
or
out
xchg
popf
adc
add
mov
insb
iret
js
sbb
ljmp
fstpt
push
stos
int3
cmp
push
push
cmovo
mov
jae
jecxz
cmovge
imull
lret
decl
dec
adc
leave
add
xorl
mov
mov
pop
push
xor
and
or
add
decl
xchg
sbbb
inc
in
vmovups
xor
inc
lcall
pop
lock
faddp
jp
outsb
mov
lea
dec
mov
lcall
jecxz
outsl
clc
testb
cmp
xor
push
xchg
dec
push
dec
sub
fiaddl
pop
std
incl
add
rcl
mov
outsl
add
mov
sar
dec
in
pop
movsb
scas
inc
jg
or
adc
testl
lcall
mov
je
push
out
add
sbb
je
mov
movsb
loope
xchg
decl
or
jg
xor
in
pop
adc
sbb
lods
xor
xorb
mov
adc
in
xor
fldenv
in
imul
mov
and
loopne
incl
int3
loop
fcmove
jg
jge
pusha
jmp
add
mov
push
push
cmp
idivb
sbb
jg
incl
cmp
cmp
pop
repnz
fs
cwtl
in
cmp
sbb
pop
mov
in
movsl
lahf
ljmp
and
test
lret
or
call
jecxz
int3
scas
enter
pop
imul
lock
divb
sti
data16
add
sti
push
or
cli
sub
mov
mov
lock
jle
cmpsl
mov
ds
jle
pop
enter
pushl
andl
andl
pop
repz
out
and
decl
cmp
pop
jmp
int
cmp
iret
xor
xlat
mov
dec
sub
cmp
cli
orl
mov
mov
iret
jmp
cmp
ret
jle
cmpsl
mov
dec
clc
adc
les
out
shll
aad
decl
ljmp
inc
stc
xor
aad
inc
jno
cltd
les
lods
enter
pop
xlat
into
adc
mov
incl
repnz
lods
in
jmp
test
xor
clc
sti
repnz
test
mov
xchg
ret
or
inc
pop
sub
ret
pop
shll
sbb
ffreep
push
cs
pop
in
and
loopne
dec
pop
mov
je
cmp
notl
jo
rcl
pusha
outsb
fs
lahf
gs
pop
call
call
lcall
out
aad
sbb
ljmp
or
push
pop
popf
add
sbb
sarl
std
in
mov
push
ljmp
cli
lcall
or
or
dec
stos
xor
rorl
jmp
dec
arpl
rorl
addr16
rol
add
incl
fsts
mov
js
dec
dec
sahf
stos
mov
pop
or
cli
add
push
les
fists
sbb
shr
popf
test
int3
or
pop
orb
into
mov
cmp
jb
enter
add
mov
out
adc
cmp
pop
inc
leave
lcall
mov
xchg
adc
into
mov
loopne
call
iret
in
sbb
fwait
xchg
mov
and
mov
call
outsb
sti
mov
mov
jg
mov
pushf
aaa
mov
push
mov
movsb
jecxz
fdivp
xor
mov
mov
jmp
incl
xorb
aas
test
pop
pushf
jb
mov
rorb
lods
lret
enter
add
jns
cmp
imul
daa
test
sbb
cmp
movsl
es
adcl
mov
jns
fwait
std
outsl
repnz
stos
dec
adc
lcall
addl
mov
jp
push
fstpt
or
pop
iret
movsl
incl
call
popa
js
push
jnp
test
mov
lret
sub
add
incl
sbb
jle
pop
inc
push
ds
xlat
cs
in
dec
mov
adc
xchg
xchg
or
dec
mov
in
fimuls
into
push
lods
cmp
ja
mov
mov
inc
data16
inc
and
lret
adc
ljmp
mov
jle
inc
shlb
xorl
jp
sub
pusha
mov
push
pop
shl
add
mov
ljmp
icebp
incl
dec
in
sbb
into
cmpsl
adc
xchg
sbb
mov
cmp
ret
loop
js
jne
stos
cmp
jg
sub
addr16
mov
or
cli
shrb
inc
pop
rcrb
and
call
fucomip
movsb
mov
mov
pop
pop
mov
aas
pushf
inc
cmpsb
jbe
dec
sub
inc
je
mov
incl
lds
or
cmp
pop
jne
in
popa
les
test
xchg
or
push
aas
mov
cmp
xor
sbb
pop
daa
imul
hlt
pop
pop
cmp
adcb
jo
stos
iret
mov
ljmp
std
fildll
mov
jmp
popa
jl
sbbl
fistpll
dec
cmp
aaa
fldenv
push
mov
jmp
fimull
imul
mov
mov
or
dec
cmpb
ret
add
push
pusha
jbe
pushl
jp
push
mov
inc
sbb
xchg
sarb
lcall
pop
out
cmp
xor
clc
lret
mov
inc
in
sub
outsl
mov
std
cmp
sbb
jecxz
xchg
loop
pop
dec
jmp
addl
ljmp
mov
out
scas
addr16
rsqrtps
mov
loopne
sub
icebp
das
lock
mov
fbstp
aam
xchg
mov
nop
mov
push
rolb
fisttps
add
push
and
iret
add
cmpsb
clc
cwtl
inc
xchg
or
mov
mov
mov
sahf
jno
jmp
dec
test
sub
or
cwtl
push
test
jo
jno
add
jge
daa
pop
pushl
adc
xlat
or
pop
out
mov
jle
mov
mov
pushl
clc
jmp
lods
sbbl
cmpsl
mov
stc
sub
cmpsl
inc
mov
leave
call
jp
mov
cmpl
cmp
inc
insl
jp
adc
mov
lcall
jb
sbb
or
pop
movsl
or
mov
sbb
jle
ret
pop
jmp
inc
iret
lock
bound
in
ljmp
xor
and
imul
fistl
or
cld
cli
mov
aaa
fnstsw
mov
pop
cld
decl
push
fadd
enter
in
inc
cmovb
shll
push
jecxz
xchg
enter
movsl
lds
add
jg
je
jnp
stc
imul
push
test
repnz
in
rcr
jle
xchg
arpl
lods
cmp
fldcw
jmp
push
outsl
cld
cmp
and
or
bt
dec
fdivs
incl
inc
dec
mov
mull
daa
imul
xchg
pop
push
repz
ja
jb
sar
push
sub
adc
jle
icebp
cmp
enter
dec
push
loop
inc
mov
inc
cs
cmp
aad
int3
sbb
or
sbbl
sbb
decb
fldcw
jg
leave
ljmp
sbb
sti
jl
test
aaa
insb
jl
loopne
testb
ljmp
addr16
pop
into
movsl
aas
pop
sub
fdivrl
add
xor
shll
xchg
adc
lcall
decl
shll
ds
mov
mov
jge
jmp
jnp
in
addl
sbb
stos
lea
pop
cmc
mov
mov
rcrb
adc
rorl
gs
add
ret
pop
xchg
nop
incl
je
clc
sub
xor
les
aad
lds
add
xchg
push
adc
in
xor
jp
mov
dec
mov
dec
cld
inc
dec
cmp
pop
xor
movsl
dec
decl
mov
fsubrl
mov
lods
mov
pop
nop
fwait
cmp
jmp
test
scas
add
and
insl
sbb
xor
dec
cmp
gs
call
sub
inc
lock
sti
shlb
sbb
or
jmp
pop
jmp
cmp
lea
mov
insl
repnz
add
inc
mov
in
in
push
add
pop
fwait
movsl
aad
lods
aam
shl
insb
fdivrs
ret
mov
push
push
sub
stos
adc
aaa
sahf
ss
ljmp
sbb
jp
ljmp
mov
in
mov
cli
inc
shrb
out
dec
inc
fsubrs
repz
cmp
jb
incl
mov
dec
sub
ljmp
inc
repz
enter
nop
add
mov
push
es
jmp
inc
sub
pop
cmp
test
inc
or
inc
sti
jp
cmp
adc
dec
lods
pop
pop
mov
mov
sar
cli
pop
dec
push
pusha
lret
popl
xlat
mov
js
mov
test
push
mov
add
loop
insb
je
test
aam
jg
cmc
sub
xor
cltd
jge
icebp
pop
xor
loopne
mov
ss
mov
sbb
pop
sar
sbb
lahf
add
cmp
pop
sbb
jne
lea
sub
std
or
decl
out
xchg
aas
fists
push
mov
enter
inc
filds
pop
popa
std
xchg
jmp
sub
ret
bound
into
xor
add
cs
jecxz
adc
imul
ljmp
incl
pop
jbe
and
adc
stos
addr16
movsb
sbb
test
lods
mov
or
hlt
pushl
test
sarl
roll
ljmp
imul
mov
cwtl
ljmp
ret
mov
decb
movsb
or
dec
cmc
imul
out
incl
pushl
lcall
dec
rcrl
xlat
xchg
xor
call
pop
jo
inc
mov
out
jnp
pop
call
mov
adc
cmp
sbb
or
dec
sbb
jg
or
mov
push
jle
mov
into
daa
cmp
or
mov
loop
cmp
shrb
add
leave
lret
sbb
sbb
xchg
mov
mov
xor
pop
or
loope
mov
cmc
dec
jecxz
imul
ss
push
in
sbb
pop
mov
xchg
xchg
push
dec
dec
push
push
jecxz
pop
stos
stc
and
xlat
popa
stos
ret
clc
mov
or
aaa
sbb
movsl
dec
fstpt
xchg
and
imul
fstpl
xor
adc
clc
push
sub
negl
ret
jmp
or
clc
pop
fistpl
imul
sbb
pop
xor
dec
pusha
les
or
call
out
jp
mov
inc
dec
popa
mov
insl
dec
sbb
lods
fcom
in
jmp
rcl
incl
mov
sub
scas
insl
and
jecxz
dec
push
adc
decl
sub
jmp
sub
mov
jae
adc
fsubrs
ljmp
mov
cwtl
subl
mov
pop
loopne
xor
push
lea
test
mov
jg
out
and
fildl
xchg
xchg
fistps
js
mov
lcall
xor
sarb
add
insl
or
mov
lret
in
jle
lock
ljmp
adc
mov
dec
popa
mov
sbb
cmc
xor
and
inc
mov
sbb
test
ljmp
sub
mov
add
fldenv
cwtl
outsl
addr16
lods
and
jg
push
sub
inc
mov
inc
ss
add
sar
cmp
movsb
cli
pop
out
ret
aas
sbb
movsl
inc
and
stos
inc
sub
pop
pop
push
call
dec
jbe
or
jg
or
adc
test
adcl
push
rcrb
cli
pop
call
nop
loop
stos
sarl
push
and
pushl
out
insb
scas
push
jecxz
loopne
dec
sub
mov
add
sarb
cmp
insl
lcall
pop
mov
add
fwait
cmp
push
out
pop
pushl
mov
lods
push
mov
sub
scas
push
rolb
test
arpl
push
cli
lcall
call
xchg
push
jbe
movsl
movsb
push
or
sbb
jne
rclb
dec
mov
push
cmp
inc
dec
push
sub
lds
adc
jno,pn
push
mov
and
cmpsl
cmp
outsl
xorl
or
xchg
in
add
dec
clc
cmp
out
sub
xchg
mov
adc
cwtl
cmp
jmp
dec
sarb
jb
lahf
test
lcall
incb
adc
mov
fcomp
shrl
std
lcall
pushf
pop
adc
sbb
mov
out
sbb
add
mov
fdivrs
dec
push
mov
ret
movsl
xchg
jne
int3
inc
addr16
incl
outsb
movsb
mov
mov
fcoml
testb
incl
pop
das
cmp
mov
pusha
clc
in
push
xor
fnstcw
outsl
fistpll
jmp
or
add
daa
mov
lea
cmp
jge
mov
sub
cmpsb
mov
inc
fisttpl
mov
popa
divb
adc
or
arpl
push
lcall
flds
mov
mov
sbb
adc
cmc
sbb
adc
push
ja
cmp
andb
mov
sub
aam
xor
stc
jbe
xchg
push
sbbl
adc
sbb
outsl
mov
xchg
jb
loop
jno
lcall
imul
incl
fs
lds
and
lds
pop
test
sub
loopne
jg
leave
clc
pushl
add
outsl
add
push
cs
leave
xor
pop
jbe
icebp
in
aam
pop
jmp
xchg
rcrb
inc
in
lods
test
or
sbb
lcall
ljmp
test
in
scas
fildl
xor
push
loopne
aad
jne
sub
inc
std
push
sar
jmp
adc
test
int
fsubrs
mov
movl
inc
xchg
cwtl
cmp
lods
incl
pop
cmp
mov
lea
dec
stc
icebp
out
push
pop
loope
pop
inc
in
add
fwait
pop
mov
sub
push
fnstsw
lea
pushf
jge
cmp
push
hlt
jg
mov
in
lods
push
mov
ljmp
ljmp
push
jl
or
roll
cs
push
cmp
lahf
imul
je
push
stc
cltd
rcrb
add
pop
sub
in
imul
sbb
xchg
lret
push
or
cli
jge
jae
push
ljmp
outsl
ret
xor
aas
shrb
mov
xchg
pop
daa
les
cmp
dec
pop
cli
adc
inc
mov
les
sub
mov
outsb
scas
pop
xor
test
or
pop
imul
ret
sub
jnp
lods
call
mov
aam
jmp
imul
xchg
insl
jnp
fstpl
mov
xor
or
fists
mov
xor
nop
jecxz
leave
mov
sub
aad
pop
arpl
call
repz
xor
cmp
std
jp
xor
lcall
mov
das
dec
xchg
loop
cmp
pop
loopne
adc
adc
pop
stos
incl
in
je
in
ss
movsl
xchg
mov
test
mov
call
sub
dec
push
sbb
add
fiaddl
out
mov
decl
xchg
dec
orl
iret
cs
outsl
inc
pop
mov
lahf
adc
ds
out
xchg
scas
insb
jg
icebp
repz
push
gs
xor
jmp
pop
and
je
in
lcall
sub
les
in
test
dec
and
xor
lret
and
jno
adc
add
ret
rcrb
out
lock
in
push
movsb
ljmp
pop
call
and
fmulp
shlb
imul
push
adc
sbb
lcall
jecxz
adc
add
mov
dec
aaa
add
push
xchg
xor
inc
cmp
inc
sbb
imul
jecxz
or
jl
stos
incl
or
lock
test
push
mov
inc
jle
sahf
scas
scas
cmp
nop
les
test
pop
mov
jl
adcb
out
in
push
or
iret
jle
out
or
mov
dec
idivl
xor
movsl
imul
pop
sbb
mov
and
mov
in
out
fnstenv
and
mov
jmp
mov
mov
adc
das
xor
icebp
mov
jg
xchg
outsb
inc
cmp
add
xor
adc
push
pop
sub
shrb
mov
test
add
decl
popf
imul
cmp
cltd
mov
sbb
pop
out
cs
jae
scas
cmp
lcall
out
xchg
mov
and
xor
xchg
pop
into
int
and
hlt
push
lret
ljmp
mov
mov
repz
fwait
in
loope
cmp
int3
enter
and
mov
divl
push
lahf
sbb
lret
out
aaa
cli
add
lock
mov
dec
clc
mov
jne
in
inc
lahf
cltd
fcmovbe
enter
jp
adc
and
push
or
insl
push
mov
mov
test
dec
decl
push
pusha
xchg
lods
adc
ror
cmpsl
jmp
insl
popf
out
out
xchg
sub
xchg
in
mov
cltd
rcll
dec
ja
sub
mov
mov
push
xchg
or
and
popf
push
or
iret
cmp
or
lcall
mov
xor
in
mov
ss
es
stos
inc
sbb
jmp
lods
out
mov
andb
imul
call
inc
dec
lcall
sti
or
and
xchg
ljmp
std
jl
repz
lcall
jmp
xchg
push
int3
bound
sub
leave
jnp
jns
jg
add
rolb
push
xlat
fldt
adc
mov
sbb
mov
lock
push
ds
xchg
push
addr16
sbb
test
sbb
mov
dec
mov
das
xchg
dec
stos
sub
ljmp
fistpll
adc
inc
sbb
pop
xchg
mov
stos
mov
nop
jl
outsl
cli
mov
dec
es
sbb
lods
mov
movsl
stc
sub
mov
aas
jp
insl
leave
push
add
push
and
pop
psrad
iret
push
imul
jg
xor
dec
mov
test
xchg
mov
adc
mov
push
mov
stc
and
mov
dec
ljmp
and
mov
mov
cmp
add
mov
movsb
pop
push
mov
incl
lds
jecxz
adc
ret
jmp
lcall
lcall
arpl
scas
movsb
push
inc
push
and
xor
pop
and
decl
nop
sub
imul
push
push
das
pusha
orb
lods
lret
aad
jo
shlb
outsl
push
xchg
jo
inc
rorl
xchg
inc
inc
add
xor
jl
std
mov
lcall
mov
out
inc
or
fcoms
adc
pushl
negb
insb
out
hlt
and
pushl
sbb
jg
push
inc
pop
jo
js
jmp
pop
scas
sbb
imul
mov
cmpsl
dec
and
icebp
negb
mov
push
movsl
cmp
xor
push
xchg
movsl
in
ljmp
add
lcall
insb
pop
sub
adc
mov
adc
sub
adc
mov
hlt
movsl
lret
pusha
jb
jle
test
cltd
enter
pushl
mov
test
test
pop
mov
add
ja
and
push
lods
push
loopne
sbbb
test
xlat
cmp
rcll
movsb
je
int
pop
insb
decl
ljmp
or
push
pop
push
xor
dec
es
push
or
sbb
nop
cld
sbb
das
push
or
popf
cmpsl
lar
xchg
cli
mov
daa
pop
insl
adc
fcoms
test
out
mov
add
cmp
call
decl
push
sub
std
xor
jnp
inc
fwait
shrb
cmp
dec
xchg
sahf
hlt
pop
shrl
dec
pusha
pop
data16
fcoml
sbb
cmp
xor
adc
testb
adc
sbb
jnp
jge
das
insb
xchg
adc
mov
ja
jbe
jb
mov
pushl
jmp
aam
fadds
jmp
dec
mov
sti
xchg
push
repnz
cmc
xor
test
xchg
rcrl
sbb
inc
movsb
divb
mov
mov
add
scas
jecxz
ficoml
adc
mov
jmp
dec
lds
sbb
cs
mov
cmp
scas
hlt
icebp
lods
subl
decl
jge
call
ret
dec
imulb
fwait
xchg
xor
xchg
daa
ffreep
mov
stos
sti
call
mov
scas
sbb
out
pushf
ficoms
enter
push
sbb
roll
inc
ljmp
jg
cmp
sahf
xchg
fidivrl
nop
and
mov
and
mov
xchg
js
cmpsb
xchg
call
daa
iret
sbb
xchg
adc
cmpb
and
push
mov
inc
stc
insb
adc
or
inc
mov
xchg
sti
xchg
ljmp
push
decl
mov
ret
cltd
loop
or
shll
xorl
mov
cld
ljmp
dec
pushf
std
mov
imul
outsl
sbb
mov
mov
icebp
in
xor
jge
and
inc
jg
push
imul
into
mov
push
xor
xchg
dec
subl
test
mov
jl
inc
outsl
ss
js
out
sti
lea
jns
mov
decl
and
mov
mov
mov
xor
test
mov
inc
push
jae
aaa
das
std
incl
out
sbb
push
pop
clc
fwait
mov
add
xchg
rclb
lcall
nop
mov
test
int3
stos
insb
cmpsl
ds
mov
cltd
sbb
insl
movsb
cmpsl
xor
adc
jp
ljmp
ret
jb
jb
jecxz
pop
in
xor
fidivs
pop
mov
sbb
or
cld
mov
repz
inc
inc
repnz
lret
push
stos
test
ja
xchg
test
cld
ljmp
push
ja
ss
mov
es
jg
xchg
xor
sub
ljmp
int3
or
aad
dec
outsb
lcall
fistps
lock
mov
movl
popa
xchg
xchg
cld
outsb
jb
enter
or
add
xlat
cwtl
pop
and
pop
jg
cwtl
adc
call
incl
popa
aam
adc
jo
jp
mov
rolb
rcl
mov
or
test
jmp
out
out
and
dec
mov
movsl
inc
sti
xor
pop
dec
int
and
push
xor
add
or
sbb
xchg
mov
fisubrl
or
das
outsb
xor
sar
mov
xchg
push
mov
addr16
mov
stos
rol
andl
mov
fucomip
ret
movsl
pop
jle
push
dec
inc
jp
fbld
cli
outsb
in
call
mov
fwait
ja
adc
push
lret
xchg
leave
ljmp
inc
fstl
xlat
clc
in
outsl
fstps
into
and
int3
inc
ds
ds
dec
arpl
and
pushl
push
push
sbb
sub
scas
sub
clc
gs
test
in
fidivs
loopne
decl
daa
jle
pushf
push
into
rcll
sbb
out
in
loope
and
pop
inc
mov
pop
inc
push
orb
imul
ret
ja
xchg
jecxz
push
ljmp
add
insb
aaa
roll
rcrl
add
lock
dec
push
jle
adc
jp
dec
adc
test
outsb
adc
mov
mov
imull
ljmp
shl
xchg
jns
daa
pop
adc
mov
je
xchg
mov
cld
dec
sar
pushl
addr16
sub
lahf
mov
inc
xchg
fisubl
pop
cmp
lea
cmc
cmp
or
or
push
xchg
call
xchg
test
xor
pop
mov
hlt
stos
loopne
movsb
xchg
jmp
ja
push
pop
fsubr
ds
jbe
push
sarl
mov
ljmp
mov
mov
mov
dec
mov
rcrb
xor
aam
xor
xor
sbb
mov
movsb
mov
pop
ja
pushl
cli
and
repnz
push
sub
jo
in
xor
cltd
aaa
imul
inc
mov
les
orl
jl
push
sbb
mov
js
pop
xlat
jmp
cwtl
jl
outsl
movsl
xchg
cmp
lahf
jmp
fildl
adc
pushl
add
sub
push
jp
int
push
or
sti
scas
pop
adc
lods
fsubp
sbb
stos
pushf
sub
rorl
sub
jmp
out
fcmovnb
mov
mov
mov
stos
js
cmc
push
xchg
xchg
fcompl
pop
ljmp
jne
outsl
adc
xchg
pushf
cmpl
ljmp
sbb
dec
test
xchg
cmp
lahf
hlt
inc
movsb
aam
mov
lcall
jns
mov
sbb
sub
ljmp
cmc
je
mov
mov
add
std
mov
loop
rcl
mov
mov
subb
xor
mov
push
call
pop
and
fisttpll
test
call
push
into
inc
and
mov
mov
call
xor
adc
ret
add
jae
inc
ret
cmp
aas
sub
test
sub
xchg
pushf
test
dec
jo
inc
sub
lret
pop
sub
inc
xchg
push
call
addl
cmpsb
add
shrl
pop
call
fcmovnb
mov
add
sub
and
fs
fucomip
dec
sti
jb
out
imul
jp
dec
pop
dec
mov
lcall
insb
int3
popf
and
and
lea
sub
or
rol
stos
xor
imul
cmc
pushl
je
out
les
xor
push
call
lcall
movsb
mov
scas
dec
jp
lret
stos
jmp
std
mov
cld
lock
pop
clc
inc
stos
xchg
pop
fcomp
xchg
and
fisttps
mov
decl
adc
xchg
mov
sbb
aas
lock
dec
xchg
jb
fbld
fldenv
mov
sub
decl
mov
xchg
bound
xchg
mov
mov
xor
sbb
call
clc
jmp
mov
pop
out
mov
push
rcr
js
roll
adc
mov
xor
jecxz
lea
out
add
loope
add
pop
mov
dec
fbld
jbe
ljmp
call
cld
leave
and
dec
test
inc
xchg
aam
test
cmp
test
sar
mov
push
jecxz
dec
mov
and
add
xchg
cmpsl
jmp
jg
clc
add
or
mov
push
xlat
or
push
pop
xchg
xor
loopne
pop
clc
jg
sti
or
inc
or
xorb
imul
mov
pusha
lret
mov
in
cmpsb
pop
ja
stos
jge
lahf
sbb
inc
adc
daa
mov
xchg
adc
aad
cltd
xorl
dec
xor
xchg
es
mov
dec
jbe
daa
cmp
lods
mov
ljmp
mov
lds
pop
ficoml
jmp
imul
aas
xor
addr16
fistpll
cmp
imul
testb
iret
test
and
push
mov
push
xchg
in
clc
push
mov
lea
lcall
jg
int
mov
jne
movsb
sub
imul
or
pop
or
xor
pop
ljmp
and
and
push
das
dec
ffreep
jae
or
out
add
test
ss
push
mov
repnz
lock
stc
jmp
fmul
or
popa
out
dec
jle
fidivrs
mov
sub
mov
dec
mov
jno
mov
das
std
xor
pushf
xchg
mov
sbb
pop
ds
jle
pop
sbb
ljmp
movsb
notl
or
sub
cmpsb
insl
xchg
add
xchg
and
and
incl
test
push
imul
pop
or
sub
mov
cli
cwtl
aam
and
xor
jbe
enter
das
hlt
adc
lahf
into
add
lds
test
movsl
xor
cld
pushf
int3
fsts
mov
js
lcall
or
or
mov
mov
outsb
sub
mov
frstor
jmp
ljmp
inc
fsubr
into
inc
push
cmpsb
int
addr16
jo
jns
inc
xor
lcall
inc
xlat
jecxz
jecxz
outsb
cwtl
pop
sub
cmp
pop
mov
xchg
fisttpll
insl
clc
dec
aaa
insl
fstpt
fs
mov
ds
faddl
clc
cmc
fimull
int
call
outsl
je
movsl
jno
or
cmp
xchg
dec
sub
repnz
push
lret
stos
sub
mov
in
adc
mov
shl
cmpsl
in
or
jmp
adc
pop
gs
cltd
fsub
lcall
push
faddl
xchg
dec
xlat
fwait
sbb
mov
incl
cld
test
stos
cwtl
test
cmp
and
xlat
or
lret
xlat
and
jmp
add
mov
inc
xor
mov
mov
jae
pop
pop
mov
cmpsb
cmp
mov
dec
mov
sbb
loop
inc
fdivl
fcmovnb
leave
fcomip
idiv
pop
ljmp
xchg
and
sub
mov
cld
mov
fsubs
ljmp
or
add
and
mov
les
inc
decl
outsb
aas
dec
dec
xor
mov
sbb
subb
mov
ss
inc
imul
fs
jmp
mov
jae
xchg
pusha
mov
mov
shlb
inc
lcall
decl
ffree
loop
repz
and
mov
sub
es
pop
dec
cltd
mov
pop
clc
pushl
mov
mov
fbstp
es
jle
iret
mov
or
cmp
cmpsb
sub
add
aam
or
sbb
xor
cli
pushl
hlt
lahf
cmpsl
loopne
jg
sub
ja
pushl
clc
inc
loope
pop
pusha
fsubrl
xchg
nop
fistpl
lods
call
dec
adc
cld
aad
or
fisttpl
dec
mov
test
aaa
cli
cld
iret
cmp
stos
add
adc
mov
add
loope
sbb
mov
in
and
cmpsl
and
inc
les
aaa
lcall
mov
fistl
pop
jnp
mov
sub
push
test
add
popf
std
push
add
popf
sar
std
push
adc
in
sub
xor
or
stos
mov
mov
jnp
loope
sarb
sbb
lret
scas
jp
jg
dec
rolb
repz
mov
sub
or
das
mov
dec
push
lahf
push
dec
lods
adc
jp
dec
iret
lahf
cltd
in
sbb
pop
and
pushf
loope
inc
add
xor
sub
xchg
push
roll
je
arpl
cmp
adc
sub
cmove
cmpb
cmp
and
push
ds
pop
bound
lock
jmp
xchg
mov
pop
mov
repnz
inc
sbb
and
xchg
ljmp
xchg
dec
aaa
or
icebp
stos
inc
int
add
jle
ret
sti
nop
icebp
sbb
push
inc
cmp
sub
int
popf
ds
sbb
sub
jns
js
mov
call
pop
mov
test
push
addl
pop
adcb
or
filds
mov
push
add
out
dec
je
dec
pushl
orb
cmp
dec
test
or
rcrl
mov
jmp
out
fcmovnu
mov
pushf
jbe
inc
push
iret
or
push
adc
ss
fdivr
or
dec
ret
ljmp
pop
mov
in
or
xchg
ss
js
lcall
test
sub
out
pop
lods
out
mov
aas
and
jg
dec
or
in
mov
xchg
and
xor
fdivr
std
stos
and
fucomip
ljmp
sbb
dec
mov
pop
jno
in
sbb
jg
sbb
fdivs
cmc
jl
push
xor
mov
xor
sti
aam
popa
or
call
scas
lret
ss
addb
lea
mov
clc
shl
into
std
call
mov
adc
scas
add
sbb
push
pop
pop
idivb
vpaddb
pop
adc
hlt
insl
pop
add
add
call
test
xorb
ret
lret
and
or
mov
ror
mov
lret
xor
mov
pushl
jle
jbe
push
ljmp
mov
xlat
iret
sarl
pop
xchg
push
addb
mov
or
jg
mov
aam
push
bound
rorb
je
les
pop
or
aas
mov
cmp
int
hlt
decl
jecxz
nop
cmp
xchg
outsb
arpl
loopne
mov
jg
mov
pusha
cmp
aam
outsl
gs
pop
repnz
mov
sbb
ds
cmpsl
xchg
cmp
push
pop
std
pop
cmc
lcall
aas
outsl
scas
mov
push
iret
sub
ja
cmpb
ljmp
js
lock
cmpsb
ja
push
fistl
jge
push
inc
push
xor
pop
xchg
repz
aas
xor
decb
iret
call
jne
mov
add
int3
fmull
or
decl
pop
shlb
dec
call
in
std
mov
pop
sub
xchg
rcl
movsl
jae
cltd
pushw
inc
sbb
lret
movsl
cmc
movsl
cs
cmp
les
or
bound
cmc
inc
sahf
jbe
cmp
outsl
icebp
movsl
jecxz,pn
pop
push
scas
or
add
dec
or
das
mov
pop
adc
sbb
inc
aaa
xor
dec
dec
loope
mov
or
lret
sub
stos
in
dec
lods
cmp
xor
pop
arpl
pop
mov
inc
decl
push
xchg
inc
js
cmp
aam
and
adc
cmp
pushl
sub
pop
xchg
cli
jmp
add
idivb
adc
int
in
push
adc
dec
call
lods
dec
sub
inc
out
sbb
jne
mov
sti
mov
js
lds
call
rcll
js
pushw
fisttpll
fimuls
hlt
repz
jae
fsubrl
dec
mov
addr16
decl
or
xchg
insb
ret
hlt
sbb
xchg
cmp
dec
and
loope
inc
cmc
push
or
mov
jle
cmpsb
shrb
mov
jmp
dec
shlb
xchg
or
push
and
decl
daa
das
shll
repz
pop
and
lock
mov
xchg
and
cltd
pop
jnp
mov
decl
adc
mov
xchg
push
pop
cmp
jne
mov
sahf
int3
loop
jb
imul
push
clc
or
aam
scas
push
ljmp
cld
dec
shl
je
fbld
out
cltd
mov
ss
inc
cmpsb
and
test
incl
in
iret
push
xchg
xchg
inc
lcall
testl
pop
xor
arpl
int3
lahf
jecxz
decb
lret
inc
inc
dec
mov
push
addr16
xchg
repnz
pop
movsl
int3
movsl
push
sti
xor
call
mov
fwait
scas
test
and
std
pushl
les
arpl
add
adc
mov
add
and
or
mov
loop
jmp
fistl
notl
test
and
mov
adc
push
daa
xchg
mov
in
hlt
jnp
pushl
mov
shrl
call
lcall
fs
cli
cs
ror
addb
sub
jg
lcall
or
popf
and
out
pop
mov
jae
std
lds
decl
dec
aad
pop
xor
dec
jmp
stos
daa
jge
pop
inc
add
std
idivb
add
cwtl
decl
jl
shll
fninit
scas
inc
adcl
ficoml
jbe
divl
das
imul
cmp
lock
icebp
movsb
in
loop
pushl
fisubrs
cmp
cwtl
jno
push
andl
dec
je
dec
pop
mov
or
cmp
fisubrl
inc
push
and
mov
cmp
ljmp
jb
mov
push
fimuls
movsb
dec
or
movsb
fwait
arpl
jmp
sbb
rorl
and
push
insl
push
gs
cs
enter
mov
ret
lahf
decl
std
dec
mov
insb
adc
xlat
sub
push
aad
cld
pop
jmp
scas
xchg
decl
or
mov
sti
shll
inc
loope
in
ss
jl
test
incl
popa
jnp
jmp
dec
jp
lcall
cmp
call
sti
jp
adc
cmp
int3
add
cli
add
xchg
jne
mov
das
cmc
pushl
ror
cs
push
push
pop
cmc
push
inc
ret
mov
jge
adc
popf
sbb
incl
ret
repnz
jle
sub
dec
je
and
mov
and
aas
inc
xor
jae
xor
jg
incl
add
and
jno
pop
lret
pop
lods
sbb
lret
shlb
jmp
jns
mov
leave
dec
faddp
mov
mov
xchg
sar
decl
cmp
clc
jmp
fisubs
inc
orl
mov
hlt
sbb
incl
adc
xchg
mov
pop
add
addr16
push
add
pop
cltd
dec
aaa
cli
jmp
push
stos
add
test
jp
cwtl
mov
repnz
lcall
dec
mov
stos
je
scas
fldcw
mov
xor
dec
jb
loope
push
fidivs
adcb
inc
orl
or
sub
mov
call
sarl
mov
cmp
mov
pusha
jno
inc
fcomp
fidivrl
and
iret
rcrl
cmp
rorl
cmc
pop
cwtl
sbb
push
sub
mov
adc
xor
sti
push
xrstor
cmp
pusha
add
inc
mov
sti
jo
pop
push
sarl
in
push
inc
clc
sub
xchg
and
push
mov
xor
aaa
test
xchg
pop
outsl
inc
out
cmp
sbb
pop
out
stc
cmpsb
cli
lcall
test
sbbb
pop
mov
lea
mov
or
add
xor
shll
push
push
loop
fucomip
clc
mov
call
pop
popf
xchg
pop
scas
rclb
daa
cs
mov
xchg
insl
addb
lahf
lret
xor
inc
dec
adc
mov
ficoml
clc
imul
add
fwait
cmp
inc
dec
jg
call
fsubrl
inc
jmp
add
push
cmp
orb
add
and
outsl
das
xchg
pop
xchg
test
add
jle
jg
cmc
sbb
sub
xor
in
push
mov
cmp
decl
add
aad
fistpll
imul
sbbl
jno
or
cmp
std
pop
or
pop
pop
xor
pop
push
repnz
repnz
or
push
mov
cmp
jg
nop
push
into
ret
push
loop
sub
xchg
mov
xchg
or
cs
lret
inc
fidivrs
sar
lcall
pop
cmp
pop
notl
add
or
insw
faddp
inc
fisttps
dec
dec
sub
pushl
sbb
sti
xchg
jnp
sub
add
add
cmc
loopne
hlt
imulb
decl
pop
push
arpl
mov
push
call
and
leave
in
nop
sbb
push
dec
lret
mov
sbb
outsb
cmc
decl
sbb
fsubrs
or
mov
lret
jl
mov
movsl
cmc
jbe
adc
fcompl
mov
lahf
das
cltd
adc
mov
xor
jmp
pop
aaa
das
out
out
rorl
idivl
cmp
mov
fnstenv
push
sub
xorl
fisttps
push
mov
andb
incl
jno
xor
movsb
add
push
adc
add
scas
leave
lret
jg
stc
pop
dec
mov
pop
cld
testb
add
cli
movsb
js
cld
movsb
in
imul
std
and
dec
std
pop
mov
adc
jmp
rolb
daa
fcomps
pop
test
jg
or
cwtl
je
andl
jb
xchg
or
ja
xor
test
and
loope
add
sbb
ljmp
pushl
and
pushf
inc
nop
bound
push
cmp
fnstenv
ljmp
ss
mov
inc
jl
xor
inc
dec
cli
pushf
aam
or
mov
mov
ret
jnp
pop
aaa
sub
inc
into
ret
inc
dec
pop
imul
xchg
sahf
fadds
cld
in
lahf
aam
mov
or
adc
sub
fbstp
ljmp
mull
hlt
mov
sbb
jge
xor
lcall
outsb
push
sub
inc
or
push
sbb
sbb
jmp
adc
pop
stos
sub
and
mov
jg
std
xchg
leave
loop
cmp
xchg
shll
lds
in
and
xchg
ret
mov
and
adc
mov
jg
push
xlat
rol
dec
push
mov
sbb
ficoms
mov
push
aas
popa
push
jno
sbb
pop
pop
clc
xchg
stos
aas
push
lcall
scas
adc
cmc
xor
stos
cli
mov
outsb
cmpsl
inc
je
xor
adcl
inc
mov
xlat
bound
jp
cli
sti
addr16
std
cs
sub
xchg
adc
mov
jmp
lret
mov
xor
push
jmp
and
outsl
std
add
cmp
decl
insb
pop
aam
xchg
cmc
inc
loop
mov
aaa
or
dec
mov
cmp
loope
push
pop
and
mov
mov
add
push
jmp
sarl
cwtl
imul
add
dec
xchg
ljmp
out
mov
outsb
or
mov
icebp
inc
pop
out
jo
adc
fnstsw
lcall
das
call
mov
sub
data16
pop
sub
or
and
out
pop
push
mov
call
fcomip
rcrl
sub
fs
inc
mov
adc
mov
or
adc
xlat
add
xor
xchg
rorb
out
fsubs
shll
sub
in
jp
cmp
xor
pop
jo
orl
or
mov
pop
sub
push
imul
cltd
dec
mov
xchg
sub
mov
fdivl
xor
daa
ja
cmp
rcll
xor
pop
call
dec
mov
cwtl
cmp
xchg
mov
fsubr
sbb
lea
clc
sub
call
add
sbb
push
repnz
sbb
xor
in
loop
mov
stos
pushl
mov
cmp
sahf
mov
push
xchg
and
pop
cmp
shlb
dec
lahf
pop
lea
int3
mov
mov
mov
test
cwtl
add
sub
inc
xchg
xchg
cmpsl
xchg
push
push
mov
or
cltd
mov
pushl
test
mov
cmp
pushf
mov
adc
pop
push
xor
pop
arpl
cmc
aam
xor
cmp
lcall
sbb
in
mov
es
icebp
jae
sbb
mov
out
loope
sbb
outsb
std
decl
push
rorl
lahf
movsb
or
jnp
mov
das
cmc
stos
cmp
add
xchg
cltd
outsb
rorl
or
inc
lret
dec
xchg
cli
ret
jns
cld
jns
int3
stos
xchg
lcall
scas
call
lds
pushl
push
add
out
call
jmp
bound
jg
dec
arpl
test
sbb
jne
je
adc
outsb
xchg
jmp
dec
xchg
loopne
into
ret
dec
adc
bound
lds
clc
repnz
decl
bound
in
test
push
sbb
outsb
adc
mov
addr16
push
mov
incl
push
pop
push
push
push
push
flds
mov
mov
push
mov
cmp
test
xchg
pushf
fwait
repz
lcall
cmp
add
jae
xor
pop
jecxz
and
decl
daa
loope
in
adc
xlat
ror
cmp
sbb
aam
fs
jnp
call
cmp
bound
inc
ret
lods
xchg
in
in
add
ljmp
inc
hlt
sub
pop
inc
inc
pop
fdivrl
stos
pop
sbb
mov
sbb
lds
xchg
mov
js
mov
jg
push
mov
push
adc
push
inc
ljmp
mov
push
mov
das
xor
div
inc
lret
sub
add
mov
inc
mov
push
dec
popf
clc
pushf
repz
lods
xor
daa
push
mov
icebp
das
cmc
ljmp
add
sahf
inc
insb
mov
shlb
xchg
dec
sbb
or
sbb
cmp
lods
add
ljmp
lahf
or
stc
mov
popa
cmpsl
sub
jb
sbb
pop
or
mov
imull
iret
push
push
add
cmp
inc
enter
jno
nop
js
hlt
mov
jg
cmpsl
mov
fldln2
xor
cmc
hlt
mov
jp
cmp
xchg
cltd
or
js
sar
sub
push
xor
out
test
lea
cmc
mov
icebp
jl
test
test
jb
sub
add
std
cwtl
and
lds
insb
cmp
ljmp
inc
icebp
les
xchg
mov
adc
cwtl
ljmp
gs
ret
out
mov
jecxz
sbb
or
movsl
addb
xchg
adc
call
or
andl
xor
sarl
sarb
or
decl
imul
mov
pushf
test
arpl
jg
shll
add
xor
iret
mov
into
popa
popa
cld
pop
outsl
pop
and
ljmp
repnz
ret
xchg
scas
ljmp
pop
jbe
outsl
hlt
jmp
test
jge
mov
lods
add
adc
das
and
xor
mov
out
jmp
or
movsl
pop
pop
cmpb
push
std
test
cmc
push
ret
cmp
jmp
pop
inc
xor
outsb
adc
fildll
mov
stos
jns
ss
out
pushf
or
jg
movsl
push
mov
adc
inc
add
dec
and
lcall
lret
les
in
pop
inc
pop
sbb
js
cld
outsl
mov
pop
data16
call
and
jg
scas
push
mov
push
jbe
outsb
ret
lcall
dec
ret
into
xchg
and
movsb
enter
stos
and
lods
dec
mov
mov
add
push
jne
inc
nop
stos
lock
mov
in
shlb
lcall
popa
mov
loopne
and
pushl
or
mov
les
enter
or
xchg
mov
sub
repz
ljmp
cld
imul
adc
pop
out
and
mov
mov
lcall
dec
repnz
bound
out
mov
imul
fistl
ljmp
pop
push
fldcw
adc
pop
cmpsl
dec
sub
aad
jg
js
mov
sbb
sub
in
add
scas
jb
adc
sub
push
adc
jg
aam
inc
out
jp
pop
jne
xchg
push
ljmp
mov
pop
mov
lahf
aaa
inc
lods
aaa
clc
das
std
adc
push
shlb
test
ds
mov
call
lahf
push
arpl
jbe
sub
mov
es
add
mov
lds
test
add
std
dec
inc
icebp
push
cli
lahf
sub
push
mov
dec
scas
mov
inc
loopne
clc
push
xor
cmpsb
xlat
inc
or
call
int
push
push
cld
xor
mov
cmpsb
adc
pop
incl
jmp
sub
sub
adc
jno
xorb
scas
call
pop
loopne
clc
push
fidivrs
loop
fnstenv
lock
mov
push
jle
push
aam
pop
adc
jmp
or
mov
and
add
ljmp
ss
mov
int3
mov
popw
ds
pop
inc
pop
push
jno
mov
aaa
push
sbb
dec
push
sub
mov
jb
xlat
jbe
xor
sbb
sbb
ds
push
mov
lods
xlat
fidivrs
pop
lods
cmp
add
inc
into
js
inc
stos
pop
out
or
and
inc
mov
into
add
add
das
jmp
xor
jg
sti
rcl
sub
cs
or
push
mov
sti
cmpsl
jl
pop
loopne
fstps
mov
push
sarb
xlat
and
aam
js
add
sbb
dec
dec
xchg
clc
decl
in
push
movsb
push
imul
mov
dec
sbb
sbb
xor
inc
cld
jg
add
mov
cli
xlat
sti
popf
and
les
lcall
inc
xor
xor
loopne
lcall
or
js
jne
loop
loop
decl
stos
push
mov
xor
popf
mov
mov
in
nop
push
push
rcrl
jg
decl
xchg
sbb
daa
push
fsubr
or
stc
jo
addl
movaps
in
pushl
add
cli
out
xchg
fnstsw
mov
pop
xchg
arpl
cld
sbb
addb
enter
jmp
pop
sbb
aad
xor
lods
push
inc
lcall
rcr
test
call
or
mov
stos
pop
loope
inc
std
add
xor
movsl
negb
push
outsl
icebp
fbld
ds
ficomps
sub
or
dec
xchg
jno
xchg
jecxz
in
jae,pt
xchg
lcall
cmp
mov
ffreep
cwtl
jns
bound
mov
jp
and
adc
out
add
aad
das
push
aas
push
add
push
lcall
fisubl
sbb
insl
add
add
jno
mov
call
jmp
xor
insl
cs
adc
sub
aad
cmp
gs
fs
sbb
or
imul
and
mov
dec
lods
jne
push
pop
jle
idivl
mov
inc
cmp
jmp
pop
stc
sub
mov
ljmp
xchg
enter
enter
push
pop
add
call
sbb
fcomi
adc
xor
mov
aaa
mov
adc
aam
insb
shrl
js
push
pusha
mov
lcall
jmp
xchg
and
nop
in
pop
stos
insl
adc
scas
inc
loop
cld
or
lods
outsb
inc
mov
jbe
jo
dec
xor
leave
outsl
cmp
clc
das
insl
xchg
or
ret
jmp
adc
adc
jle
add
adc
adc
lcall
add
mov
pop
and
pop
dec
sbb
sbb
add
popa
push
jne
incl
call
ficompl
cmpb
test
outsb
pop
scas
xor
add
inc
cmp
cmp
mov
ret
adc
push
fs
sti
pop
pop
test
or
sbb
mov
pushl
jle
sbb
fdivrs
test
hlt
sbb
mov
pusha
xchg
push
xor
call
leave
sarl
cltd
nop
pop
xor
add
sub
cltd
mov
decl
fildl
xor
xor
ret
pop
mov
push
lcall
fiadds
repz
xor
xor
lcall
mov
outsb
xchg
add
and
dec
xor
cld
inc
sbb
cmp
jmp
inc
aas
mov
daa
jmp
xor
enter
cld
pushl
pop
jnp
subb
js
mov
mov
jno
xor
mov
jne
int
orb
call
adc
push
xchg
xchg
xchg
sub
dec
test
cmpsb
dec
test
ret
in
push
push
jno
rclb
push
pushl
andb
cmp
repnz
pop
lret
and
jns
in
sbb
rcll
mov
decl
stc
sub
mov
sub
xchg
test
jmp
loop
mov
push
inc
ret
je
clc
popf
cmp
mov
or
mov
jne
sub
ljmp
bswap
mov
and
ret
pushf
rol
push
loop
mov
xchg
push
test
gs
or
cltd
cmp
mov
xchg
or
std
rorl
insl
push
push
jl
adc
and
lcall
mov
xlat
adc
int
sbb
add
scas
cmp
aaa
ficompl
inc
je
pop
xchg
in
mov
jg
test
add
mov
cmp
mov
aaa
mov
mov
orl
jp
pop
and
mov
ds
push
inc
push
sub
orl
add
xor
inc
test
int3
or
add
lcall
std
sti
push
gs
addr16
fidivrs
dec
xor
cmpsl
js
push
push
mov
pop
loop
add
cmp
mov
int3
fs
inc
ljmp
push
xlat
dec
pop
in
mov
aas
push
or
jmp
test
pushl
mov
xor
mov
dec
sub
inc
cmpsb
or
idivl
jno
ljmp
das
test
fldl
stos
sbb
cmpl
aam
enter
xchg
nop
shrb
orb
sub
mov
jl
arpl
lock
mov
and
xlat
test
sahf
push
cld
ljmp
push
mov
lret
inc
pop
mov
ja
sbb
das
incl
cmp
int
mov
mov
inc
js
push
insl
ljmp
std
adc
push
xlat
push
xchg
and
sti
lahf
cs
mov
xchg
pop
adc
ljmp
add
cli
movsb
push
mov
cld
movl
jmp
sbb
sarb
bound
and
mov
jns
fsubs
jb
cwtl
int3
fwait
lcall
mov
mov
scas
out
inc
out
hlt
ljmp
push
xor
stos
in
pop
xor
decl
std
outsl
jmp
test
aas
xchg
mov
call
mov
cli
push
jp
jmp
cmpsb
popa
and
mov
loope
and
lock
mov
popa
xchg
push
inc
popa
retw
and
jg
outsb
adc
pop
gs
or
lods
pop
mov
in
pop
add
sti
loope
inc
loopne
push
xchg
cld
xor
or
out
jae
push
fdivs
sbb
rcl
ljmp
sbb
jns
sub
add
sbbb
dec
add
push
fisttpl
clc
incl
jmp
clc
pop
push
ret
stos
lcall
in
xor
pop
filds
stos
mov
bound
das
jnp
adc
aam
leave
pop
lret
outsl
adc
movsl
cs
adc
lcall
cmc
cmpl
add
or
mov
roll
mov
inc
or
and
iret
xor
jno
stos
jnp
es
hlt
idiv
lcall
scas
cli
shll
cmpsb
dec
xor
fnstenv
fldl
ficoms
fiadds
inc
loop
lret
push
jae
int
or
imul
call
test
cmp
into
jl
sti
pusha
or
ret
sub
xchg
pop
push
push
and
jmp
adc
rclb
xchg
cmp
dec
into
mov
rorb
out
xchg
and
sub
pop
loopne
stos
sahf
ret
test
xchg
push
mov
push
rcrl
sub
cmpsb
or
jns
imul
add
in
sub
out
jne
dec
in
cmp
jl
mov
dec
push
and
lcall
jmp
in
je
stc
xor
pop
sarb
adc
xchg
das
lods
dec
fwait
add
pop
std
pushl
adc
jge
or
adc
mov
jg
add
lret
mov
ljmp
pop
dec
sub
xchg
push
dec
mov
xchg
jb
fnsave
pop
sbb
movsl
cmp
loopne
sbb
jp
hlt
flds
call
iret
jb
sub
lea
inc
xchg
out
or
ret
adc
mov
jmp
xor
cmpsl
lods
push
repz
push
adc
jmp
ret
cmp
negl
cmp
push
push
arpl
add
jmp
jmp
or
xchg
add
and
sub
js
notb
dec
pusha
lods
in
mov
pop
rcll
or
call
fistpl
jo
add
xchg
clc
xchg
or
cli
mov
sbb
in
jbe
push
xor
jle
call
xlat
mov
jns
mov
incl
jnp
xchg
xlat
add
xchg
push
sub
lcall
lcall
fisubs
movsb
jp
not
ss
test
outsl
jge
and
inc
xor
add
lahf
mov
leave
jbe
inc
lret
jbe
aad
push
outsl
inc
add
sti
dec
incl
loope
pop
rcrb
or
jmp
in
mov
call
test
pop
or
call
clc
incl
sti
aad
leave
fadds
xor
dec
and
andb
clc
les
push
dec
mov
iret
inc
insb
sub
cmp
sbb
pop
bound
stos
icebp
fistpll
pop
sarl
pushl
jge
and
iret
pop
sbb
insb
andl
add
ljmp
test
adc
sbb
aam
xchg
out
xor
loop
pushl
cmpsl
xor
movsb
repnz
je
fwait
or
lret
lcall
add
std
fistps
stos
mov
sub
cmp
and
dec
jmp
inc
subl
sbbl
mov
xor
test
int3
imul
pop
push
push
je
push
sub
jle
mov
jmp
or
mov
xor
mov
ficompl
es
out
je
call
xchg
mov
adc
mov
add
push
sahf
aaa
cmpsb
push
cmp
ljmp
push
adc
cmp
jne
push
movsl
or
test
test
inc
push
push
es
icebp
cmp
mov
cmp
lret
sahf
push
pop
push
mov
mov
and
stos
sahf
loopne
mov
pop
das
lock
jg
inc
cmc
xchg
nop
mov
inc
js
int
add
mov
ljmp
cmc
and
cld
or
outsb
mov
insl
test
sub
movsl
jle
adc
inc
mov
shrl
out
xchg
aaa
mov
dec
push
pop
dec
shrd
dec
xor
test
incb
std
es
mov
xor
add
mov
lret
jge
xchg
add
mov
ss
shll
daa
mov
movsl
aaa
cltd
add
nop
cmpsb
imul
mov
pop
or
and
mov
dec
adc
jecxz
push
gs
sbb
ficoms
add
dec
outsb
adc
add
imul
in
subl
sbb
jp
stos
jle
pop
push
je
jp
adc
orl
mov
dec
js
insl
cmp
jne
push
aas
mov
frstor
js
cwtl
mov
movsl
push
inc
fsts
push
dec
je
jp
fcmovbe
mov
sbb
pop
pop
insl
xor
adc
aam
lock
pop
or
mov
test
mov
cmc
dec
ja
inc
stos
inc
push
adc
push
adc
clc
insl
pop
jle
push
pop
outsb
jb
mov
inc
push
add
imul
nop
push
push
jno,pn
ss
aam
sub
push
pop
dec
push
outsb
nop
insb
scas
test
adc
dec
adc
cmc
jns
adc
jnp
ja
ja
jle
jno
add
dec
sahf
and
fildl
outsb
jnp
push
outsl
imul
sub
imul
sub
push
push
dec
sub
adc
test
inc
jo
ret
push
add
loopne
call
rolb
add
shr
outsb
popa
pop
push
inc
sub
insl
mov
jb
je
data16
fsts
sub
sbb
add
mov
pop
pop
sub
xor
xorl
push
inc
shll
push
and
xor
lock
push
dec
pop
mov
pop
xlat
enter
and
gs
aaa
mov
loopne
sbb
fnstenv
xchg
push
mov
pop
daa
ja
fists
add
push
mov
mov
test
js
cmp
add
mov
inc
mov
or
lds
jp
scas
lock
jnp
ljmp
fisttps
sti
mov
push
jp
add
lock
sbb
lock
pop
and
adc
jg
inc
add
test
or
mov
test
inc
lcall
mov
cmc
clc
test
push
xchg
mov
in
add
inc
jp
xor
lcall
fcmovnu
idivb
jle
adc
stc
mov
ljmp
xchg
inc
mov
fwait
ja
enter
popa
aaa
mov
xor
fistl
fbstp
pop
and
das
xchg
inc
addb
or
js
cmp
xlat
or
js
add
inc
test
mov
push
loopne
mov
or
sub
data16
cld
or
in
adc
stos
bound
add
jnp
insb
push
jge
aam
push
and
or
pushl
inc
cld
sahf
dec
mov
fisttpll
adc
fwait
pop
mov
jg
enter
pop
xchg
or
or
in
lret
jmp
out
xchg
mov
pop
add
mov
xchg
and
jns
mov
inc
rorl
or
mov
ffree
iret
ljmp
push
push
enter
lret
incl
mov
xchg
dec
xchg
inc
inc
mov
jp
cli
fs
or
imul
pusha
int3
add
orl
adc
xchg
and
pushl
or
mov
adc
test
inc
adc
or
in
arpl
lcall
mov
outsl
cmpsl
dec
imul
mov
insl
imul
or
decl
shlb
xchg
adc
imul
sub
or
pusha
jns
or
stc
sbb
xchg
add
fidivrl
out
push
mov
mov
hlt
decl
pop
xchg
xor
int
xchg
fstl
call
push
in
xor
xchg
xchg
jge
or
mov
nop
push
sub
adc
pop
push
cld
sbb
add
cmpxchg
bnd
adc
clc
decl
test
loop
lds
inc
xor
outsl
mov
dec
or
ja
pop
in
mov
jle
nop
pop
aas
lock
outsl
push
lock
dec
xchg
pop
adc
jmp
insl
sub
fistl
and
sti
adc
push
outsl
movsb
add
cs
adc
mov
adc
mov
clc
scas
fs
jo
test
fidivl
inc
or
dec
push
stc
inc
test
lcall
dec
in
ljmp
xchg
sbb
cmp
sbb
gs
rorl
pop
in
fistps
cwtl
into
ss
ror
inc
dec
xor
scas
jbe
and
mov
test
pushl
notl
dec
mov
pop
inc
dec
cmc
and
rcll
int3
mov
call
pop
loope
pop
mov
jns
test
cmc
pop
xchg
pop
aas
icebp
or
dec
push
lock
int3
decl
sbb
xlat
sub
adc
add
xchg
aaa
dec
add
aam
insb
fdivr
incl
adc
mov
mov
pop
inc
ds
mov
aaa
rcr
call
xor
pop
in
and
inc
movsl
lret
or
inc
add
call
and
lcall
or
sbb
test
sub
jmp
push
dec
enter
das
es
aad
or
adc
sbb
test
cmpsl
push
pushl
ljmp
dec
js
add
or
in
xchg
out
mov
and
mov
cld
sbb
inc
lea
push
dec
in
or
lcall
push
insl
fstps
mov
jmp
jns
mov
jg
mov
test
dec
in
and
sub
insb
and
lret
jne
loope
imul
mov
negb
popl
pop
pop
imul
pushl
std
decl
rcrl
nop
cmp
or
lock
pop
jns
cmp
adc
stc
or
inc
adc
mov
mov
sbb
mov
pop
lret
or
or
push
pop
dec
and
std
or
mov
dec
rcll
jo
add
arpl
test
addr16
inc
sbb
mov
pushl
leave
jns
aad
jnp
das
pop
aaa
or
inc
aad
data16
cmp
mov
iret
das
iret
decb
adc
out
dec
xor
sub
sub
xchg
pop
lea
sbb
lcall
jmp
adc
xor
xor
lret
push
adc
jnp
jmp
add
push
lea
leave
sub
push
cwtl
dec
mov
sub
js
sbb
call
push
and
popf
xchg
jb
cmp
push
push
lahf
or
cmp
jae
jmp
or
popf
and
dec
daa
sbb
lock
pop
stos
int3
xchg
push
add
sbb
jp
ljmp
xchg
es
repnz
adc
mov
push
into
fistps
push
mov
dec
sahf
and
push
or
sarl
jl
pop
leave
fsubrp
sar
push
and
adc
test
gs
mov
add
sub
decl
push
sbb
sub
sbb
out
mov
cmpsl
sbb
jp
jg
jmp
psrld
imulb
sub
or
in
sti
lea
test
push
inc
dec
arpl
or
dec
xor
lds
mov
dec
jg
lcall
lods
mov
mov
adc
lea
out
xchg
sub
push
cmp
incl
mov
mov
and
mov
fcompl
jecxz
stc
enter
adc
dec
xchg
sub
cwtl
mov
mov
loope
inc
pop
xchg
mov
insl
loopne
outsl
dec
sbb
jge
xor
pop
js
test
jg
jmp
xchg
inc
add
xlat
iret
cmp
incl
loope
cmpb
adc
daa
or
cmp
cwtl
sbb
mov
sub
jnp
ret
fcoms
jge
cmp
pop
cld
jge
dec
xchg
xchg
in
int3
dec
sti
push
jne
scas
jae
cwtl
cmp
sub
xor
xchg
push
pop
adc
insl
in
push
or
jg
inc
and
daa
aaa
cmp
jns
fcoms
sbb
pop
xor
xchg
pop
mov
shrl
incl
sbb
adc
push
push
push
xor
ror
add
cmc
sbbl
out
jae
cmc
stc
ja
sub
adc
pop
mov
jg
push
frstor
out
xchg
jp
or
jle
adc
mov
outsb
aad
mov
js
insl
ljmp
outsl
movb
bound
push
adc
push
xchg
std
std
decl
xor
out
test
fadd
pop
and
xor
mov
lea
das
fdivs
sbb
cmpsb
or
or
lcall
std
cld
decb
mov
push
pop
insl
sbb
rcl
cmc
and
pop
outsl
lock
jmp
and
sbb
pushl
int
push
jl
das
test
pop
mov
push
mov
and
dec
lea
into
shld
decl
and
fsubrs
pop
nop
pop
and
or
stos
imul
mov
inc
push
dec
or
insl
int3
dec
push
push
and
mov
inc
iret
addl
enter
decl
mov
sub
lret
imul
cmp
jg
decl
push
mov
sbb
cmpsb
outsb
mov
sub
lds
inc
fidivrs
and
decl
or
inc
adc
jp,pt
xchg
or
pop
mov
mov
jmp
sbb
pop
sbb
xchg
mov
int
push
and
decl
stc
xor
out
dec
xor
sub
inc
dec
mov
dec
or
mov
and
pop
scas
insl
mov
aas
daa
jp
mov
loop
jge
inc
or
pop
cli
inc
clc
cmp
repnz
testl
jg
lcall
cmp
mov
and
aaa
inc
jmp
es
decl
and
add
sub
cltd
sub
inc
xor
xor
and
cmc
dec
mov
jg
dec
inc
pop
add
icebp
cmp
es
push
aad
popa
stc
xchg
pop
fmull
fimull
or
mov
jno
sub
xchg
pushl
cmpsb
outsb
xor
xor
or
jno
xchg
or
lcall
imul
pop
xchg
xchg
lret
and
punpckhdq
jne
js
jbe
incl
cmp
xchg
movsb
out
es
mov
mov
or
cmp
pop
test
dec
adc
in
je
sbb
cs
mov
and
cmpsb
sbb
sbb
jl
pop
xor
sbb
mov
jp
in
cmpsb
jae
xchg
fwait
xchg
ljmp
stos
jnp
leave
xchg
cltd
aaa
lret
jle
sbb
inc
pop
xchg
pop
sbb
pop
and
jp
xchg
int3
pop
mov
test
sar
in
fdivrl
mov
jmp
sbb
incl
stc
and
lock
lock
mov
std
push
std
ljmp
mov
xor
jecxz
adc
mov
adc
mov
inc
icebp
and
decl
sti
mov
mov
daa
cs
jo
int3
rcrb
sub
out
clc
pop
xchg
or
pop
ljmp
es
shrl
scas
cmp
addr16
sbb
sub
and
out
lock
and
test
jg
adc
push
int3
adc
and
lods
pop
dec
idiv
push
mov
in
insl
es
mov
jns
test
dec
dec
mov
inc
sub
aas
jmp
iret
imul
and
xchg
lods
or
xchg
cmc
sub
cmp
cmpsl
ljmp
les
out
lret
pop
aam
jo
insl
lcall
push
xchg
or
cmpsb
adc
mov
outsl
icebp
decl
xor
movsl
mov
xchg
bound
push
inc
outsl
lock
jg
mov
xchg
adc
sbb
sub
adc
call
push
nop
shll
inc
xchg
or
enter
mov
xor
ljmp
inc
loop
movb
jge
cmp
sub
inc
mov
pop
test
pop
insl
dec
idiv
ss
nop
fnstsw
stos
cmpsb
inc
jmp
mov
es
sub
int
idiv
and
enter
out
roll
clc
dec
cld
decl
xor
or
sub
xchg
test
add
mov
call
sbb
adc
in
mov
lds
in
sbb
pushl
sbb
subb
xchg
and
dec
enter
mov
and
in
xor
push
incl
cmp
test
jp
out
fucomi
cmc
add
aas
inc
inc
adc
loop
incl
data16
nop
add
fistps
inc
sbb
mov
sbb
pop
in
das
std
mov
inc
icebp
or
pop
mov
das
jno
add
or
nop
incb
in
fbld
mov
sub
dec
call
mov
jg
dec
push
pop
or
mov
lock
xor
dec
sti
dec
sbb
mov
jmp
sbb
adc
xor
loopne
or
movsl
sbb
lea
das
dec
sub
jb
cmp
mov
aaa
and
cmp
xor
aaa
imul
add
mov
xor
jne
cmc
mov
mov
filds
adc
dec
add
loop
push
sub
lcall
hlt
std
add
cs
gs
scas
sahf
add
lcall
incl
jmp
rclb
inc
add
enter
call
or
inc
pop
aad
push
shlb
mov
decl
cld
add
divb
jnp
mov
lret
xor
stc
sbb
aad
pushf
adc
test
mov
outsl
hlt
add
out
shlb
jmp
or
pop
push
dec
roll
aaa
jle
dec
jecxz
push
mov
pop
and
sar
jg
and
ret
repz
aad
or
and
pop
lock
std
mov
pop
dec
mov
pop
sti
out
push
mov
call
cli
das
pop
ljmp
push
cmpsb
test
sub
cmp
pushf
adc
popa
jp
jnp
push
mov
repz
js
add
cwtl
sbb
ljmp
xor
pop
mov
sub
or
or
jge
push
adc
or
push
pop
jp
mov
sbb
icebp
pop
jecxz
adc
adc
adc
std
pop
call
and
and
sbb
sbb
incl
outsl
fwait
push
adc
and
sbb
sbb
or
jmp
jge
negl
lds
adc
decl
or
sbb
int3
push
dec
or
lods
dec
push
add
sbb
vunpcklpd
sbb
cmp
test
fcoml
in
jecxz
cmpsb
scas
inc
mov
push
cli
push
test
mov
aaa
pop
add
dec
fistpll
aas
psadbw
enter
sarb
rcll
cmp
imulb
lds
pushl
push
mov
adc
cmp
push
xor
or
sbb
inc
xchg
incb
cmovs
cmp
jge
push
jg
adc
xchg
jmp
or
fnstsw
or
jle
mov
test
mov
mov
popf
add
add
jg
push
lock
fsubs
std
inc
je
imul
fistpll
fstenv
cmc
push
or
mov
push
push
jns
and
int
lds
ss
lcall
and
repz
push
inc
inc
inc
mov
std
adc
call
out
mov
pop
sbb
xlat
std
adc
adc
inc
dec
pop
cli
push
cltd
cmp
repz
dec
sub
push
incl
or
push
adc
iret
test
push
sub
lcall
cltd
out
push
dec
push
sbb
adc
jge
mov
sub
cmp
out
adc
mov
xchg
ljmp
rclb
cwtl
cld
sbb
jl
in
mov
xchg
jns
mov
jg
out
sbb
jb
adc
inc
daa
sbb
cmp
jmp
or
inc
incl
mov
jle
or
cwtl
frstor
and
cs
dec
dec
jmp
call
pop
clc
in
jmp
xchg
js
add
xor
add
call
dec
into
fildl
movsb
addr16
push
and
mov
cld
or
sub
adc
add
jae
push
in
cmpsl
add
push
xor
test
fwait
pop
in
fucomip
adc
movsbl
push
dec
push
cmp
cmp
adc
mov
jg
push
cld
daa
or
stos
lds
mov
fs
inc
push
int
arpl
mov
lea
pop
mov
or
jo
jno
mov
push
clc
incl
mov
xchg
inc
adc
dec
sbb
and
sub
das
sarb
loopne
cmp
pop
sub
call
inc
push
sub
dec
out
and
repz
mov
out
xlat
mov
imul
shlb
mov
or
mov
movsl
lods
pushl
push
test
or
sbb
xchg
test
or
push
cmp
fsubp
pushl
mov
stc
jbe
and
je
mov
test
xor
inc
test
cmove
bound
dec
dec
mov
incl
mov
cmp
lret
dec
push
in
dec
in
push
adc
jecxz
dec
data16
adc
xor
repz
xor
decl
xor
ds
and
in
daa
pop
xor
out
ljmp
scas
enter
outsl
xchg
lahf
dec
sbb
mov
inc
or
daa
in
xchg
pop
mov
jo
pop
cld
idiv
inc
lcall
pop
in
adc
push
popa
pop
std
add
or
decl
xchg
scas
adc
cltd
push
mov
aam
or
cmpsb
aam
sar
incl
mov
or
sti
mov
inc
mov
and
mov
lcall
add
sbb
gs
pop
loopne
stc
xor
adc
in
mov
test
xchg
mov
jecxz
xor
stos
jg
sti
hlt
leave
out
iret
mov
aad
ret
loopne
and
les
movsl
sbb
insl
or
cmp
sti
mov
daa
cmp
sbb
mov
adc
mov
ljmp
cli
dec
or
in
cltd
push
popa
dec
out
jge
outsb
insb
lock
test
push
jae
stos
inc
jmp
sbb
inc
in
ret
cmp
and
adc
js
lcall
cld
cli
icebp
sub
sbb
scas
aas
shrl
sti
adc
lret
push
adc
js
aaa
xchg
push
movsb
xchg
in
movsl
ss
push
mov
add
prefetch
or
mov
mov
xchg
mov
or
and
aam
push
push
jmp
repz
incl
cmp
adc
adc
fs
popa
push
push
gs
pop
pop
dec
sahf
out
mov
ljmp
es
sti
mov
mov
jg
mov
mov
add
mov
out
shl
out
lcall
dec
and
repnz
mov
ds
icebp
jg
push
push
inc
xor
fcomps
adc
je
cmp
mov
adc
ljmp
dec
sub
pushf
jg
sti
subl
bound
inc
sub
inc
ljmp
pop
or
aas
pop
sub
or
inc
out
xchg
clc
in
jnp
mov
inc
testb
mov
repnz
pop
dec
jns
sti
mov
popl
mulb
mov
or
in
xchg
arpl
adc
xor
sub
dec
mov
rolb
mov
mov
cmpsb
mov
mov
pop
xchg
in
push
sbb
cs
pop
dec
adc
decl
out
ljmp
fstps
loopne
shll
mov
movsb
popf
jle
pop
xchg
ja
inc
or
in
jmp
pop
mov
pop
pop
jne
cmp
nop
int3
add
clc
stos
fucomip
decl
in
cmp
and
adc
or
push
testl
adc
js
dec
sbb
pop
out
insb
imul
dec
push
jg
jns
dec
inc
add
sbb
std
data16
addr16
inc
mov
or
sub
cli
jg
cmp
dec
pop
daa
adc
jae
jno
and
dec
ja
je
push
movsb
add
and
call
in
jb
jle
and
scas
insb
push
and
js
mov
jno
data16
dec
and
call
js
jg
dec
popf
and
xchg
inc
lahf
xchg
cmp
jp
test
dec
cmp
jae
loop
popf
stos
or
mov
dec
mov
mov
cmpl
call
lcall
inc
inc
es
cmp
xorb
repz
mov
incb
pop
fwait
cmp
add
add
bound
jg
jne
imul
outsl
jb
fstps
push
jns
je
insl
or
mov
push
out
xor
cmpsl
xchg
jle
mov
inc
aad
jae
push
jl
xor
add
mov
or
fstpl
pop
pushf
jae
or
add
cmp
cmp
or
mov
cmp
cmp
push
pop
sub
inc
pf2iw
push
pusha
xchg
push
add
jp
outsl
push
fcoms
jae
jne
arpl
outsl
arpl
popa
fs
inc
dec
imul
inc
gs
jb
pop
repnz
sti
inc
fs
jae
inc
jb
gs
imul
outsl
push
xor
in
pop
sub
push
push
jae
insb
lods
mov
aaa
inc
insb
insb
or
inc
js
arpl
popa
imul
mov
insb
jae
dec
xor
dec
push
jne,pn
or
inc
mov
or
dec
outsl
pusha
mov
std
fs
gs
popa
fwait
add
fldt
mov
imul
stos
test
bswap
push
imul
or
push
push
test
scas
jns
cmp
adc
push
inc
sti
jg
jg
add
add
pop
inc
sub
add
sbb
and
mov
mov
add
call
inc
add
add
xchg
insb
add
push
xor
adc
nop
lock
inc
sub
add
add
xor
or
inc
inc
pop
mov
insb
mov
inc
push
pop
idivb
aam
daa
push
rolb
and
mov
jbe
add
in
or
imul
daa
xchg
sarb
inc
je
push
jo
add
pusha
dec
sub
sbb
and
sub
daa
sbb
test
gs
dec
nop
pop
cs
out
testl
mov
push
pop
xor
add
pop
mov
add
add
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
nop
adc
adc
push
inc
add
add
add
add
add
add
xor
add
lock
orb
add
xor
add
nop
add
addb
add
add
add
add
add
add
or
add
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
addb
add
js
add
mov
add
add
add
addb
add
add
add
add
add
add
add
or
add
and
add
add
in
add
add
add
add
add
or
add
add
add
push
add
in
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
cmp
test
add
in
add
add
add
add
add
or
add
add
mov
add
push
add
add
add
add
add
or
add
add
and
mov
add
in
add
add
add
add
add
or
add
push
add
test
add
in
add
add
add
add
add
or
add
data16
test
add
in
add
add
add
add
add
or
add
add
add
add
sub
add
in
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
adc
add
add
add
add
add
pop
add
add
add
cmpb
adc
add
fadds
add
faddl
add
loopne
add
out
add
addb
addb
add
add
add
add
add
add
add
nop
add
add
add
rolb
add
add
add
add
add
add
add
add
mov
out
add
add
in
add
add
add
add
add
add
add
loopne
add
mov
add
add
add
in
add
add
add
add
add
add
add
or
add
mov
add
dec
push
add
in
add
add
add
add
add
add
add
xor
add
add
add
adc
add
in
add
add
add
add
add
add
add
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
addb
add
add
add
in
add
add
add
add
add
push
add
subb
add
add
add
add
add
add
add
or
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
push
add
push
add
add
inc
add
dec
add
inc
add
dec
add
movsb
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
xor
xor
cmp
xor
push
cmp
add
add
dec
add
dec
add
dec
add
push
add
pop
add
pop
add
add
add
add
popa
add
add
outsl
add
push
add
push
add
jl
add
jo
add
jnp
add
ja
add
js
add
jg
add
jge
add
add
mov
add
movsl
xor
add
dec
add
push
add
pop
add
arpl
push
insb
add
jne
ss
push
add
rcll
lret
dec
aam
add
add
jae
insb
jl
popa
fnstsw
fistpll
mov
jge
ja
addb
in
add
xchg
add
mov
add
xchg
xchg
add
test
add
lea
add
xchg
xchg
add
popf
popf
add
xchg
add
stos
mov
mov
lahf
add
movsl
mov
add
mov
add
xchg
xchg
add
pushf
lcall
mov
movsl
add
test
add
scas
stos
add
test
add
lods
test
add
mov
add
mov
add
mov
add
mov
add
mov
mov
int3
mov
mov
sarb
mov
add
mov
addl
mov
mov
xchg
mov
xchg
xchg
add
fistps
add
sahf
add
stos
add
ljmp
mov
stos
add
loopne
add
ret
mov
ret
add
rol
into
into
into
add
faddp
roll
mov
loope
lds
loop
lret
add
int
add
int3
enter
iret
add
ror
add
ror
add
aam
add
rcl
add
aad
add
fcmovbe
add
rolb
neg
xlat
add
fstp
add
add
repnz
add
hlt
xlat
add
repnz
fcomi
faddl
repz
add
loopne
add
loop
add
loope
add
mul
add
stc
loop
out
jecxz
add
in
add
out
add
out
add
ljmp
hlt
in
in
add
in
call
add
imul
add
cld
jmp
add
repnz
add
repz
div
add
clc
clc
add
sti
sti
add
incb
cmp
add
cmp
add
add
xor
jp
sub
sbb
adc
add
cmp
cmp
xor
push
add
pop
adc
add
js
scas
popf
xor
sbb
add
add
test
and
or
outsb
jo
je
xchg
scas
cmpsb
es
add
jb
jb
xchg
and
or
add
sub
jge
jbe
push
and
mov
add
insl
sub
aaa
inc
inc
cmp
movsb
mov
add
inc
push
push
dec
inc
aas
scas
lods
lods
dec
inc
add
add
pop
pop
pop
push
dec
cmovo
sbbb
add
imul
inc
inc
sbb
adc
add
push
mov
pop
pop
add
add
lcall
bound
add
xchg
mov
add
add
add
push
push
push
addr16
add
add
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
mov
add
sbb
add
xor
add
add
or
add
add
inc
add
add
add
add
add
add
add
add
sbb
add
and
sub
and
add
sub
add
sub
das
add
xor
add
xor
add
xor
add
cmp
push
aas
add
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
dec
add
dec
add
dec
add
pop
add
push
add
pop
add
pop
add
inc
add
dec
add
add
popa
add
pusha
add
add
insb
add
imul
jo
add
bound
mov
add
imul
xchg
jl
add
jl
add
je
add
je
add
ja
add
js
movsb
jle
add
andb
sub
das
add
xchg
daa
add
lcall
and
xor
sub
lods
aaa
add
mov
add
cmp
inc
mov
add
sarl
ss
dec
add
inc
add
inc
add
pop
add
add
pop
add
popa
add
pusha
add
add
inc
add
roll
int3
dec
add
iret
push
add
push
add
aam
add
push
add
pop
add
arpl
dec
aad
add
push
add
jno
push
fidivrs
pop
fistpll
into
jge
push
loopne
add
lcall
test
jg
jle
lea
data16
add
test
insl
call
lea
jo
popl
jne
xchg
add
xchg
add
add
lahf
add
addb
cwtl
mov
add
lcall
lods
addb
scas
mov
add
mov
add
lea
add
xchg
lea
mov
lea
test
xchg
add
sahf
popf
add
xchg
xchg
add
xchg
xchg
add
popf
lcall
mov
cmpsb
add
mov
add
cwtl
xchg
add
pushf
lcall
lahf
popf
add
mov
sahf
add
movsb
mov
add
scas
lods
add
stos
test
shrb
test
add
mov
add
mov
add
mov
mov
fnstsw
mov
add
mov
mov
test
mov
test
popl
xchg
xchg
add
xchg
add
fcompl
add
lock
add
shlb
add
jecxz
add
repz
add
mov
xchg
divb
add
in
add
loop
add
ret
in
mov
add
iret
iret
add
ret
ffree
ret
add
int
add
fcomp
add
jmp
leave
movb
lret
in
leave
lds
loopne
leave
add
int
add
int3
leave
add
ror
add
ror
add
ror
add
aad
add
rcl
add
aam
add
add
fcmovu
add
add
xlat
rolb
clc
xlat
roll
repnz
add
add
fcom
add
fstp
add
fstp
add
in
rolb
hlt
fildl
fcomi
fiadds
repnz
add
loop
add
mul
add
jecxz
add
call
out
cld
out
add
jmp
add
ljmp
call
cli
in
add
stc
out
add
cld
out
add
repnz
add
std
repz
repnz
cmc
repz
clc
repnz
clc
clc
add
clc
clc
add
std
stc
add
incb
add
jl
xchg
add
jo
pop
dec
add
add
jp
sbbl
stos
pop
mov
mov
dec
sub
daa
sub
add
pop
imul
pop
sbb
adc
add
add
pop
mov
bound
inc
sub
add
add
sbb
add
add
mov
imulb
push
inc
push
xor
roll
add
jmp
push
addr16
inc
inc
xor
loop
and
push
idiv
mov
imulb
lret
test
fcomi
push
jae
add
repz
scas
call
dec
ss
xlat
lret
adc
add
aas
mov
mov
mov
repnz
pop
xor
fmul
int3
and
add
mov
mov
mov
mov
lods
cmp
push
in
in
lret
add
add
mov
ret
ret
ret
ret
ret
mov
sub
or
in
out
je
add
add
dec
push
mov
les
jg
ud0
icebp
in
fstl
add
add
orb
cli
cli
movsl
or
add
popf
mov
xchg
xchg
mov
cli
stc
stc
fstl
add
add
add
mov
fwait
fwait
cwtl
cwtl
test
xchg
xchg
leave
stc
in
adc
add
add
add
mov
xor
sub
pop
and
jbe
add
add
test
movsb
movsb
pushf
mov
jnp
sub
add
iret
iret
test
aad
out
idiv
imul
lea
add
add
add
aad
ror
shl
jecxz
loopne
jecxz
lock
sti
fidivl
add
add
fsub
fsub
ljmp
ljmp
xchg
add
add
add
ljmp
lock
add
add
jmp
lock
add
nop
nop
nop
mov
cld
aas
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
adc
add
adc
sbb
sub
sub
cmp
daa
add
xor
add
xor
add
xor
add
cmp
push
cmp
push
add
jnp
add
jbe
add
jnp
add
jp
add
add
add
inc
add
add
inc
add
inc
add
dec
add
dec
add
push
add
inc
add
add
dec
add
dec
add
dec
add
pop
add
pop
add
push
add
add
dec
add
pop
add
bound
jge
arpl
jl
jp
cmpb
andl
add
insl
insb
add
jo
add
jns
add
ja
add
jle
add
jge
add
test
add
mov
add
xchg
sbb
adc
add
lahf
and
and
xchg
sub
add
mov
das
add
cmpsb
xor
aaa
stos
cmp
and
cmp
xor
cmp
daa
sarb
sub
scas
inc
add
mov
add
mov
add
inc
add
dec
add
pop
add
push
add
pop
add
dec
add
add
pop
add
push
add
push
add
add
dec
add
rorl
dec
add
iret
push
add
pop
add
int3
pop
add
rclb
inc
rcrb
inc
int
add
pusha
add
add
imul
inc
fsubs
dec
fldenv
dec
aam
add
imul
push
fidivs
push
add
jnp
arpl
jnp
push
jecxz
add
js
pop
loope
add
jg
mov
je
xchg
mov
xchg
xchg
je
cmpsb
cmpl
insl
in
add
mov
push
loope
add
xchg
add
fwait
add
fwait
add
test
add
mov
add
mov
add
test
add
nop
mov
mov
mov
mov
xchg
xchg
add
popf
pushf
add
xchg
xchg
add
pushf
cwtl
add
mov
mov
add
mov
cltd
add
mov
mov
add
test
test
add
mov
add
mov
add
mov
add
mov
add
mov
mov
mov
mov
add
mov
add
mov
mov
add
mov
test
adc
add
fcoml
xchg
xchg
add
loope
add
mov
add
out
cmpsb
add
jmp
add
mull
add
divl
add
sti
mov
add
in
add
sarb
fcmovnb
mov
add
test
add
mov
xlat
aam
add
enter
int3
leave
add
ror
add
ror
add
xlat
add
rcl
add
add
fcmovnu
add
fcmovnu
add
aad
add
xlat
roll
repnz
add
fcmovnbe
add
fstp
add
fstp
add
loopne
add
jecxz
add
cmc
loope
ljmp
add
out
add
call
in
hlt
in
in
add
out
jmp
add
clc
in
add
icebp
in
add
repnz
cmc
hlt
add
cld
testl
idiv
clc
add
incb
add
add
add
pop
push
insw
bound
add
add
add
test
mov
xchg
mov
add
or
iret
lret
xchg
pop
add
das
xchg
sub
fwait
mov
inc
jo
lret
into
int3
lret
arpl
cmp
sub
mov
add
add
push
push
test
test
nop
sub
sub
add
add
pop
insb
jo
sar
std
std
lds
jo
gs
sub
add
and
jle
add
add
fs
std
std
std
std
sarl
pusha
pop
adc
add
or
pop
sub
inc
pusha
popa
enter
std
std
std
std
mov
cmp
out
and
add
pop
add
add
std
std
std
std
sti
std
std
std
std
mov
jl
add
mov
or
add
add
std
std
std
std
fdivrs
std
mov
sub
in
in
repz
add
add
idiv
std
fdivrs
std
std
mov
add
aad
sbb
imul
std
std
std
imul
in
out
and
add
add
mov
mov
std
std
stc
push
adc
fcmovnu
call
add
add
mov
mov
inc
and
lock
mov
aam
or
add
add
ret
ret
ret
ret
rol
ret
ret
ret
ret
rcrb
cmp
lock
loop
or
add
rcl
rcl
rcl
rcl
shlb
cmp
lock
loop
lahf
or
add
cmp
ret
rcl
rcl
sarb
xchg
lahf
sub
in
stc
stc
hlt
in
loop
adc
add
add
dec
ds
and
movsl
sub
cli
cli
stc
hlt
aam
sub
add
add
add
mov
jge
movsb
fwait
fwait
xchg
fwait
cmpsl
xor
hlt
std
cli
cli
std
cli
cli
lock
add
add
lods
stos
stos
cmpsl
cmpsl
cmpsl
movsl
movsl
movsb
movsb
fwait
fwait
cmpsl
aaa
adc
cli
stc
stc
stc
and
add
add
add
add
cmpsl
cmpsl
cmpsl
movsl
movsl
movsl
movsb
stos
cmp
fsub
cli
std
std
std
std
stc
sub
add
add
lods
stos
stos
cmpsl
cmpsl
movsl
movsl
mov
sbb
push
or
sbb
mov
add
add
lods
mov
lods
stos
stos
stos
cmpsl
cmpsl
mov
nop
nop
xchg
cmp
cmp
add
add
add
add
mov
stos
stos
mov
cmpsl
test
lahf
xchg
xchg
jle
jle
pop
mov
add
add
add
xlat
mov
fucom
jmp
cld
ljmp
add
add
add
mov
xlat
xlat
xlat
xlat
xlat
fsubrp
out
out
out
repz
cli
cli
cli
clc
aam
xor
add
add
add
out
jmp
jmp
in
repz
cld
cli
xrelease
add
add
add
jmp
in
in
in
in
icebp
icebp
icebp
icebp
icebp
icebp
icebp
in
repz
add
add
add
jmp
in
repz
repz
aad
mov
add
add
add
add
repz
repz
aad
mov
add
add
in
repz
add
add
mov
add
jmp
cld
pop
sarb
add
pop
rolb
pop
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
cld
add
push
aas
clc
mov
add
xor
add
pusha
add
add
add
add
add
add
or
add
add
add
add
add
add
add
pop
pop
add
push
push
add
sbb
add
sbb
and
cmp
sub
cmp
xor
add
js
add
adc
sbb
add
sbb
and
outsl
and
cmp
jge
add
sub
sub
add
add
aaa
add
inc
add
dec
add
dec
add
push
add
dec
add
dec
add
push
add
push
add
inc
add
dec
add
pop
add
pop
add
push
add
pop
add
add
add
insl
add
ja
sbbl
andb
andl
mov
add
imul
outsb
imul
ja
add
je
xchg
mov
add
jne
add
jle
sahf
jnp
add
jge
add
xchg
add
xchg
or
add
mov
add
xchg
pop
add
cltd
sbb
adc
and
sbb
and
sbb
daa
add
nop
sub
sub
sub
mov
add
test
cmp
cmp
add
mov
add
lods
xor
lods
cmp
sub
add
mov
cmp
sub
cmp
add
mov
add
mov
dec
add
mov
pop
orb
xchg
dec
add
push
add
pop
add
push
add
inc
add
add
arpl
popa
mov
push
jb
jb
sub
leave
dec
add
lret
aas
int
add
rclb
dec
enter
les
rcrb
pop
leave
add
add
add
add
imul
aad
add
jo
push
fnsave
arpl
data16
je
je
jne
fnstcw
jne
jg
dec
loopne
add
jo
push
loop
add
jge
push
jmp
jge
mov
jge
cmpsb
cmpl
jl
mov
push
in
addb
out
test
pop
clc
popl
fs
add
test
fs
mov
in
mov
imul
mov
repz
outsb
out
xchg
add
nop
add
xchg
add
xchg
add
cltd
add
nop
add
add
mov
add
xchg
add
mov
add
addl
add
mov
add
nop
popl
lods
xchg
nop
add
fwait
cwtl
add
xchg
xchg
add
pushf
cltd
add
mov
add
mov
popf
add
mov
add
fwait
cltd
add
mov
sahf
add
movsl
mov
add
test
add
scas
lods
add
lods
stos
add
stos
test
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
sarl
mov
add
rclb
xchg
fcompl
add
in
lahf
add
frstor
add
out
add
icebp
cmpsb
add
stc
lods
add
cmc
mov
xchg
cli
mov
sahf
idivl
add
in
add
stc
mov
add
ret
mov
add
rolb
cld
rolb
hlt
ret
test
add
mov
add
leave
lds
lock
lret
ror
add
ror
add
fcom
add
add
cli
roll
out
loopne
add
loop
add
in
add
ljmp
cld
icebp
in
add
sti
cli
add
xor
xor
add
gs
adc
dec
popa
add
xor
lret
cmp
add
push
cltd
mov
add
add
add
mov
mov
lods
xor
add
mov
insb
mov
fstpl
add
add
sub
sub
sub
stos
mov
addr16
jg
fcmovnu
out
in
out
loope
fcoms
add
cmp
sub
sub
sub
scas
lret
add
pusha
pop
jg
fcomp
in
loopne
aam
ja
adc
cmp
movsl
movsb
sub
sub
sub
sub
sub
aaa
mov
add
add
add
push
xchg
cwtl
lcall
cwtl
xchg
xchg
xchg
lea
cmp
sub
sub
sub
shlb
sub
lret
add
add
add
inc
insl
js
mov
out
xchg
xchg
xchg
mov
and
adc
push
xchg
sub
lods
add
add
add
dec
push
je
jle
jmp
addl
imul
add
sbb
sub
mov
add
add
add
insl
insl
jo
fdivr
jmp
cmpl
insl
push
dec
and
and
pop
pop
add
sub
das
mov
push
jae
jmp
addl
push
shld
leave
xor
add
add
pop
add
add
add
imul
jmp
jl
jl
imul
add
repz
div
mov
add
push
pop
push
sub
add
add
inc
push
imul
in
jl
jl
push
push
inc
xor
repz
div
cli
hlt
daa
push
add
or
add
add
inc
push
push
aad
std
fscale
ljmp
and
sub
or
icebp
stc
div
cli
cli
cld
divl
add
add
outsb
std
fmuls
ljmp
cmpsb
sub
pop
jmp
cld
cli
cli
cld
cld
sbb
sbb
add
add
outsb
jecxz
std
aad
rclb
ljmp
sub
pop
repnz
shlb
pop
push
add
add
inc
push
outsb
mov
std
sar
ljmp
add
div
hlt
div
repz
mov
daa
push
push
add
add
adc
mov
rcl
rcl
rcl
fscale
call
push
or
sti
sti
div
hlt
hlt
cmc
div
daa
pop
push
add
add
mov
fs
rcl
rcl
rcl
aad
aad
rcr
std
jp
shld
lock
stc
div
cmc
divl
add
add
rcl
rcl
rcl
rcl
rcl
rcl
std
call
imul
stc
imul
out
stc
stc
stc
cmpsl
or
pop
inc
jge
rcl
std
jmp
into
inc
or
add
sti
sti
stc
stc
stc
div
mov
scas
or
xor
add
add
or
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
loop
arpl
and
sti
sti
sti
stc
stc
div
repz
scas
pop
adc
add
mov
xlat
xlat
loop
loop
xlat
jecxz
xlat
loop
loop
xlat
xlat
jns
adc
cmp
stos
sub
sbb
sti
sti
sti
stc
hlt
hlt
test
or
add
add
add
gs
jecxz
jecxz
in
jecxz
jecxz
jecxz
inc
shld
sti
sti
icebp
sti
div
hlt
lock
push
add
add
add
add
in
in
in
in
in
push
cmp
cmp
stos
sub
and
sti
icebp
icebp
icebp
sti
sti
stc
and
add
add
add
add
jecxz
in
xlat
jnp
cmp
test
sub
and
sti
icebp
hlt
icebp
sub
push
add
iret
or
cmp
cmp
stos
stos
stos
test
sub
sti
sti
mov
add
test
adc
push
pop
test
mov
stos
stos
stos
mov
or
lods
push
sub
add
out
mov
mov
mov
stos
stos
mov
sti
mov
add
mov
mov
mov
stos
mov
mov
sti
sti
sti
icebp
pop
sbb
add
out
mov
ret
mov
mov
mov
out
sbb
add
add
add
add
mov
ret
ret
mov
mov
or
pop
and
sti
and
out
lret
enter
ret
ret
mov
movsl
sub
es
sbb
or
or
or
add
out
int
lret
enter
ret
mov
les
movsb
movsl
movsb
cmp
ss
pop
and
add
lret
int
enter
enter
ret
mov
stos
stos
test
movsb
movsb
movsb
cmp
sbb
out
lret
int
jmp
enter
ret
mov
mov
movsb
movsb
cmp
sbb
add
add
add
out
lret
jmp
int
enter
cmc
cmc
cld
cld
test
cmpsb
movsl
movsl
movsb
cmp
add
out
int
repz
int
int
enter
cmc
cmc
cmc
hlt
cmc
idiv
cld
lock
movsl
cmp
add
add
add
jmp
repnz
div
cmc
cmc
cmc
cmc
div
div
div
cli
cld
hlt
stos
movsb
xor
add
add
add
repnz
cli
div
idiv
idiv
div
div
idiv
cli
idiv
cli
cli
mov
add
add
add
out
repz
cmc
repz
cli
cld
cli
cli
cli
cli
idiv
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cld
cld
xor
add
add
add
repz
div
cmc
cmc
cmc
cld
cld
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cld
cli
cld
cli
cld
cli
cli
cli
cld
cli
cld
cld
cld
cld
cld
cld
cld
lock
add
cmc
div
div
cld
cld
cld
cld
cld
cld
cli
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cli
call
add
out
cmc
cli
cli
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cli
repnz
mov
add
add
stc
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
hlt
mov
pushf
add
add
mov
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
repnz
add
shr
stc
cld
cld
cli
hlt
shlb
add
add
add
push
aas
incl
add
loopne
loopne
incl
add
add
rolb
add
cld
add
rolb
add
clc
add
addb
add
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
rolb
add
sldt
rolb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
clc
add
incl
add
clc
aas
incl
add
add
add
add
add
add
add
add
add
add
add
add
fucomi
fistl
and
sub
pushf
sbb
add
add
add
add
pop
push
push
adc
xchg
cmc
xchg
jl
movl
add
test
arpl
test
movsb
lcall
cmc
stos
jmp
jle
adc
fwait
imul
sahf
ja
decl
imul
mov
fcoml
adc
and
iret
loop
and
mov
cmp
cmc
ret
jmp
cld
jmp
jmp
cmp
aam
jmp
push
lcall
aas
notrack
cmp
popa
pop
dec
decl
arpl
jo
jbe
ss
push
lcall
loop
fistpll
cmp
movsl
xor
jmp
push
incl
xor
cmp
xor
imul
add
pop
mov
in
cli
out
call
hlt
xlat
loop
insb
jl
and
insb
ljmp
pop
jmp
enter
fstp
pushl
inc
inc
stc
add
add
push
mov
scas
mov
xchg
jmp
imul
call
ficoms
jmp
cmc
loop
das
lods
cmp
xchg
jp
ljmp
ljmp
jmp
int
lcall
dec
decl
or
sbb
int3
jae
xchg
fcompl
call
ficomps
fcomi
fdivr
cmp
jmp
addr16
aam
jmp
ror
jmp
int
ljmp
pop
call
cmc
out
push
inc
movsl
dec
int
ljmp
loopne
ljmp
mov
incl
jl
jne
outsl
out
out
out
jecxz
jmp
imul
add
add
jecxz
jecxz
push
test
test
or
pushl
jae
dec
lahf
dec
decl
mov
decl
div
push
in
in
out
in
decl
and
add
test
popf
xchg
jge
test
test
les
mov
lea
std
sti
sti
sti
clc
clc
clc
repz
cs
add
movsb
mov
call
lods
test
dec
mov
pushf
mov
imul
movsl
mov
into
inc
rol
inc
das
mov
stos
test
fdivl
scas
call
lods
stos
call
test
dec
test
mov
xchg
ljmp
jo
pushl
decl
aaa
mov
int
mov
ljmp
jmp
mov
mov
push
sar
clc
loop
cld
in
call
ljmp
incl
add
add
mov
int
icebp
ror
push
std
loope
std
std
loopne
std
loope
loop
jecxz
ljmp
ret
mov
repnz
add
fmulp
out
in
out
jmp
jmp
jmp
jmp
jmp
push
loopne
inc
mov
loop
jbe
mov
or
pop
push
push
pop
push
jl
cmpsb
stos
fwait
cwtl
int3
mov
mov
mov
movsl
dec
aas
ds
add
roll
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
or
add
sub
add
sbb
add
xor
add
add
and
add
add
pusha
or
add
and
pop
imul
or
or
add
add
adc
xor
xchg
jle
aad
push
push
pushf
and
sbb
add
add
add
add
sti
clc
add
js
xor
dec
out
fistpll
clc
lahf
pushl
push
fidivrs
sub
or
add
add
or
sbb
stos
xchg
pushl
lahf
popf
dec
stos
test
mov
lret
sbb
clc
sti
clc
add
dec
mov
xor
mov
mov
stc
mov
xchg
hlt
scas
incb
aad
decb
insl
push
mov
push
push
int
jg
cwtl
jb
decb
bound
mov
decb
mov
mov
sub
push
fs
pop
ljmp
test
jo
pushl
std
repz
in
xchg
ljmp
mov
data16
incl
pop
call
inc
ljmp
jae
incl
dec
dec
ljmp
jle
pop
decl
jno
ljmp
or
adc
add
add
call
xor
aas
aam
decb
push
std
std
ljmp
push
loopne
incl
arpl
cmp
push
jmp
xor
xchg
jl
lcall
ljmp
es
and
and
aas
xor
jne
push
cwtl
je
lcall
adc
add
xorb
cmp
push
popf
jmp
std
ljmp
lcall
jno
ss
dec
ljmp
sarl
pusha
jl
fwait
jne
cmp
das
ljmp
incb
cmp
adc
xor
jo
dec
ljmp
pop
pop
pop
add
add
addr16
xchg
sub
notrack
stc
std
cli
loop
jmp
out
jle
lcall
imul
mov
cmp
lcall
jmp
lret
leave
push
fcom
cld
fstp
fadd
mov
decl
pushl
and
add
addr16
pushf
roll
clc
ljmp
std
stc
mov
loopne
call
hlt
jmp
in
incb
incb
cmp
fwait
ja
xor
sub
ffree
ret
aam
mov
ljmp
push
inc
inc
incl
xor
imul
decb
clc
ljmp
fstl
decl
hlt
in
stc
out
decl
push
push
addb
js
xor
sub
in
aam
in
in
ror
jmp
mov
push
dec
dec
decl
cmp
mov
mov
and
fsts
call
fstpl
call
ficomps
jmp
cmc
in
xor
pop
lcall
sub
fmul
int3
fmulp
int
in
iret
push
fcmovbe
ljmp
pop
lcall
inc
movb
add
cli
cld
cli
add
xchg
sub
pushf
frstor
popf
fisubs
lcall
fisubs
dec
in
sar
test
mov
daa
andb
test
js
xor
out
out
loop
out
jmp
leave
fld
ret
insl
insb
lcall
inc
filds
add
add
add
add
ffree
and
xchg
xlat
xchg
ljmp
loope
ljmp
scas
ljmp
loopne
call
xchg
daa
decl
addb
aaa
xor
out
call
in
lock
out
jmp
mov
repnz
add
add
add
add
fld
sub
mov
aam
mov
mov
pushl
ljmp
mov
pushl
mov
decb
inc
std
clc
clc
cli
hlt
hlt
repnz
out
fsin
lods
mov
inc
decb
or
sbb
add
add
hlt
out
pop
jae
jno
cmp
mov
sub
je
pop
pushl
xchg
nop
mov
mov
movsl
cmpl
std
cld
cld
cld
stc
stc
std
stc
stc
cld
div
sti
repz
mov
inc
adc
add
add
mov
int3
cmpsb
movsb
shrb
mov
inc
lahf
popf
inc
pushf
lcall
xchg
xchg
mov
mov
std
std
std
cli
clc
clc
push
hlt
hlt
div
lock
fdivr
pop
dec
dec
and
add
add
mov
shrl
lods
call
lods
stos
call
test
movsb
dec
mov
sahf
inc
pushf
fwait
inc
popf
fwait
pushl
dec
dec
jmp
mov
dec
iret
iret
push
repz
ljmp
ljmp
and
imul
add
int
movb
mov
fdivl
mov
xlat
mov
aam
stos
call
stos
test
into
cmpsl
movsl
dec
movsb
mov
mov
js
call
imul
pop
pop
jmp
dec
jb
addr16
popf
lcall
inc
xor
xchg
add
add
mov
jecxz
mov
fnstsw
mov
fdivs
stos
call
stos
test
shrb
movsl
inc
mov
popf
mov
mov
movsb
jle
decb
aas
ds
push
ds
add
mov
jmp
ret
in
mov
fidivrs
mov
jecxz
mov
push
fcom
clc
out
std
repnz
div
cmc
out
push
loope
fcmovb
mov
jmp
push
dec
mov
int
movl
int3
leave
in
leave
mov
out
sar
int
neg
clc
not
sar
clc
xlat
sar
clc
fcom
stc
sti
fstp
std
out
lock
div
clc
bnd
aam
incb
add
add
leave
leave
dec
repnz
not
iret
push
ror
hlt
xlat
sar
sti
in
jecxz
loope
loop
loop
jecxz
in
in
in
jmp
loopne
out
out
in
out
icebp
jmp
mov
lahf
repnz
add
ror
int
stc
std
loope
std
jmp
in
out
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
in
out
cld
jmp
lret
cld
mov
popf
loopne
arpl
adc
push
pop
ror
lret
dec
fmulp
enter
jmp
jmp
in
out
jmp
in
out
jmp
jmp
std
ljmp
mov
mov
movsl
cmp
das
adc
push
and
mov
mov
adc
sbb
xor
sub
dec
dec
cmpb
movsb
cwtl
mov
out
test
jmp
inc
ss
sub
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
aad
add
add
add
add
add
add
add
and
add
add
adcb
add
adc
ltr
add
sbb
aas
add
add
or
pop
aaa
sub
bound
xchg
fisubrs
push
mov
sub
outsl
or
out
cmc
out
add
jg
and
dec
std
inc
int
decl
insb
cmp
pop
jmp
movsl
cmp
or
scas
add
add
pop
sbb
inc
xchg
je
stc
enter
int3
stos
cmpsl
call
mov
fidivrl
mov
scas
xchg
xchg
cld
pusha
dec
dec
stos
adc
adc
iret
loop
pop
sbb
lret
pop
ljmp
mov
test
cmpsl
call
cld
mov
jnp
pushf
lcall
jg
das
mov
incl
push
add
adc
adc
andl
scas
xchg
decl
arpl
mov
xchg
xchg
call
mov
ljmp
xor
jns
add
add
add
add
mov
call
jle
fwait
call
divl
call
divl
decl
mov
ds
pop
decl
jae
les
push
xchg
decl
arpl
mov
decl
arpl
xchg
jno
pushl
lods
stos
call
inc
xchg
fucomip
fisttps
push
mov
ljmp
pushl
nop
pushl
xchg
pushl
stc
lcall
icebp
fwait
pushl
xchg
pushl
nop
ljmp
mov
fistpll
dec
incl
ljmp
mov
decl
arpl
mov
decl
arpl
pushf
rolb
jl
inc
cmpsl
movsb
jmp
add
add
popa
jge
ret
dec
fldenv
push
fidivs
push
jecxz
jmp
push
clc
incl
call
js
push
fidivs
dec
fldcw
inc
rcrb
and
pop
pushl
push
daa
call
adc
call
adc
adc
push
adc
sub
jl
push
decl
test
xchg
out
cmc
out
add
xor
dec
cmp
push
incl
pusha
call
push
std
idiv
test
pushf
lcall
jnp
dec
fisubrl
cmp
push
pushl
movl
mov
mov
push
or
lcall
xor
decl
push
push
ljmp
sub
pushl
xor
jmp
inc
decl
inc
inc
mov
add
add
add
add
test
dec
cmp
push
lcall
push
std
idiv
xchg
lcall
aad
pushl
leave
dec
ljmp
les
pop
nop
pop
ljmp
push
or
ffree
mov
dec
mov
ljmp
pop
decl
or
adc
adc
cmp
cmp
pop
inc
inc
ljmp
dec
rolb
add
add
add
add
jg
and
ljmp
in
jmp
out
push
std
idiv
mov
lcall
into
pusha
jmp
sarb
pop
lahf
and
xchg
mov
lea
decl
or
dec
mov
sar
cmc
aad
cld
fstp
push
fcmovnbe
lcall
cmp
pushl
xor
ljmp
push
ljmp
add
jg
jg
and
mov
loope
loope
push
cld
idiv
loopne
ljmp
jp
sub
and
mov
decl
or
pushl
mov
call
mov
fdivr
std
loope
jmp
loopne
jmp
aas
ds
decl
or
or
add
add
jg
sbb
int
loopne
mov
fimuls
incl
mul
push
cld
idiv
xchg
ficomps
adc
decl
or
dec
mov
int
jmp
mov
dec
mov
call
ret
imul
in
push
push
push
jmp
call
adc
add
add
mov
push
jmp
insb
decl
cmc
loop
mov
fcoml
decl
ficoms
loope
jecxz
push
cld
idiv
pop
leave
push
ljmp
decl
inc
mov
fdivr
in
in
aam
out
ror
push
ror
call
mov
jmp
pop
lcall
inc
lcall
adc
cmp
fucomip
fisttps
or
decl
xchg
decl
fstpl
call
ficomps
.byte
fldcw
incl
inc
add
push
push
je
imul
or
fs
inc
push
jo
push
fs
pop
inc
push
sbb
test
sbb
pop
push
push
mov
push
stc
pop
sti
imulb
call
ret
lea
prefetch
fcmovnbe
fidivrl
push
push
push
mov
mov
push
pop
adc
test
testb
push
cs
cmp
jge
fimull
mov
mov
xchg
smsw
pop
pop
inc
neg
neg
arpl
adc
or
ret
mov
jmp
pop
pop
pop
pop
xor
lcall
leave
je
test
je
push
mov
and
cmpl
and
aaa
pop
mov
shrb
ja
out
int3
out
and
mov
add
xlat
mov
mov
or
add
jg
int3
lret
int3
enter
enter
fmul
loopne
jecxz
in
ret
mov
add
sbb
jecxz
cmp
je
mov
mov
ja
lea
lea
neg
movsb
sti
std
rep
jmp
sbb
lcall
jg
aas
int
pop
sar
mov
mov
sub
rep
cld
mov
sar
js
or
in
mul
insl
ret
cmp
mov
shl
add
pop
decb
ja
stos
or
stos
pop
mov
in
adc
iret
clc
out
fbld
xor
sub
mov
xor
div
add
mov
inc
mov
jne
test
jge
movb
inc
mov
inc
mov
cmp
mov
jle
add
mov
push
mov
mov
inc
dec
jne
add
mov
nop
imul
in
xchg
loopne
popf
jae
shlb
add
fcmovnu
decl
and
add
sub
je
and
das
das
aas
js
popa
pop
je
xor
daa
adc
cmpsl
dec
dec
test
and
add
xor
jmp
adc
ja
clc
ja
lea
add
add
sub
jne
std
pop
loope
dec
mov
jl
pop
xor
mov
mov
push
neg
fdiv
out
jle
js
pop
sub
jmp
inc
daa
jmp
mov
dec
popa
jb
push
and
or
adc
ja
add
pop
leave
inc
add
mov
jmp
ret
repnz
jmp
jne
movsbl
rolb
add
jmp
cmp
sbb
push
push
pop
mov
pop
push
push
push
loope
loope
in
push
les
mov
pop
pop
pop
daa
mov
mov
testl
mov
testl
mov
push
inc
js
shr
pop
pop
mov
mov
cmp
inc
or
mov
mov
cmp
fstp
dec
mov
inc
fiadds
adc
fdivrp
fucom
cmp
push
stc
mov
mov
mov
add
out
mov
std
jle
mov
inc
mov
call
movsl
inc
rcrb
sbb
movsl
rorb
jl
mov
jbe
jg
push
mov
adc
leave
mov
xchg
push
js
data16
mov
lods
mov
cmp
iret
fsubl
xlat
push
add
lret
sbb
jle
sub
add
aaa
mov
ret
lock
xchg
mov
leave
ret
iret
mov
das
mov
cmpb
jne
cmpl
adc
mov
or
pop
add
jne
adcl
mov
add
cmpl
add
xchg
in
inc
or
adc
jbe
push
inc
sti
popf
fnstcw
and
mov
cmp
jle,pt
in
popa
push
mov
add
push
sub
mov
add
push
or
mov
push
sbb
or
sti
lds
mov
jb
outsl
inc
add
inc
outsl
jo
cltd
addr16
and
cmp
jo
in
lea
cmp
inc
push
insb
popa
outsb
add
out
fwait
inc
fucomi
push
fadd
popl
scas
test
xor
xchg
sbb
bound
imul
lea
ja
pop
dec
jb
and
adc
sbb
add
or
add
dec
jne
dec
outsb
mov
and
sbb
jo
push
cwtl
mov
pop
or
jge
jmp
pusha
ljmp
pusha
xchg
cmp
sub
pop
push
jle
add
push
faddl
or
insb
cmp
inc
clc
fistpl
mov
scas
rcrb
stc
int3
mov
mov
nop
dec
cmp
mov
syscall
fmuls
or
mov
mov
xor
jne
testl
xchg
pop
pop
sbb
add
cld
ret
cwtl
aas
je
cld
add
push
cld
add
cmp
negb
mov
mov
dec
mov
adc
outsb
gs
outsb
test
push
aam
jmp
inc
popa
inc
lods
je
repnz
cmp
test
clc
mov
jl
sub
outsb
pop
sbb
mov
push
imulb
fidivrs
mov
shll
jbe
bound
push
push
pop
jne
outsl
in
decl
sub
mov
jmp
or
adc
imul
push
push
mov
decb
das
mov
push
shr
je
mov
pop
dec
je
fistpll
pop
add
dec
add
or
imull
pop
and
pop
and
je
sub
fldt
lret
cmp
cmp
jne
push
adc
fiadds
cmp
pop
jmp
scas
fstpt
push
adc
xchg
inc
jmp
adc
jmp
or
cwtl
aaa
add
inc
rorl
add
add
lea
mov
xchg
test
push
sub
mov
int3
dec
xor
jno
ja
mov
pop
repz
sub
jbe
lock
cmp
jge
sub
js
sbb
subl
mov
imul
mov
jmp
adc
pop
ret
repz
jne
cmp
dec
and
sbb
xor
out
or
cmpsb
ror
in
pop
xor
test
mov
decl
push
push
pop
mov
mov
sbb
or
or
or
into
mov
jo
popa
xor
fiaddl
sub
shl
mov
fdivrl
icebp
jl
icebp
ret
inc
sbb
add
fisttps
arpl
mov
push
jno
pop
pop
mov
fisttpl
data16
cld
shr
or
push
push
and
dec
pop
bsr
lea
mov
lods
sub
or
add
push
mov
mov
sub
mov
and
mov
mov
pop
sub
or
cmp
je
add
lret
fcmovne
fmull
or
je
add
je
bswap
adc
adc
cmp
mov
aas
dec
clc
jmp
or
adc
jmp
push
mov
or
or
add
dec
cs
jg
addr16
sbb
pop
jmp
sbb
or
hlt
mov
xchg
mov
leave
mov
in
pusha
pop
call
sub
cmp
repz
shll
inc
pop
gs
mov
or
dec
pop
or
insb
mov
or
in
pop
loop
cld
jmp
sbb
or
mov
bound
and
add
in
out
sti
mov
jmp
inc
add
jns
fcmove
adc
jmp
push
sbb
sbb
outsl
icebp
lahf
and
fwait
test
xor
push
pushf
rorb
push
add
outsl
cld
or
clc
push
add
movsb
pop
clc
add
sarl
add
add
push
inc
pmulhw
add
mov
stc
push
stc
out
in
cmp
stc
push
cmp
cmp
subb
stc
mov
pop
rep
mov
pop
mov
jle
mov
outsb
adc
jge
shrb
sub
push
add
decl
imul
add
je
enter
add
mov
pop
pop
add
enter
sbb
call
repnz
adc
adc
mov
int3
pop
xlat
icebp
scas
rorb
test
pop
jmp
adcb
ljmp
pop
push
mov
psadbw
and
repz
popa
jge
les
pop
enter
cmc
and
dec
jne
push
or
in
shr
jp
adc
sarb
loop
cwtl
lar
fmuls
add
add
add
and
pushf
imul
pop
sbbl
pop
pop
add
ficompl
xor
adc
call
inc
mov
popa
sub
cmp
jb
dec
cmpw
imul
out
add
cmp
mov
mov
and
or
aam
sub
or
dec
add
or
ret
cmp
jne,pt
aas
hlt
lahf
es
ds
jmp
or
push
pop
pop
mov
or
call
mov
mov
in
decl
add
nop
jae
or
lret
pop
pop
push
loopne
dec
or
pop
inc
ficomps
sbb
ficomps
out
mov
inc
inc
mov
mov
mov
in
inc
lock
insl
imul
scas
aaa
add
idivb
mov
add
add
testb
mov
fnsetpm(287
inc
in
test
sbb
inc
or
call
movsl
dec
cld
loopne
jge
jge
outsb
cmc
ret
and
mov
imul
add
lock
jle
lea
mov
jle
rcll
lods
loopne
pop
decl
push
fcmovnbe
or
mov
in
divb
add
sub
in
inc
dec
mov
push
sub
add
push
fcmovu
push
int
into
push
cwtl
jmp
arpl
sub
arpl
in
add
add
clc
bound
cmp
sub
dec
ret
loopne
mov
add
push
cmpl
cs
das
sub
int3
or
dec
dec
ss
inc
movl
je
or
lea
pusha
clc
push
call
decl
dec
jne
mov
mov
lcall
sahf
inc
nop
and
decl
push
addb
ljmp
and
add
adc
out
mov
cmp
pop
add
and
pop
adc
dec
or
push
cmp
cmc
jmp
mov
addr16
dec
cmp
sbb
xor
pop
test
test
mov
xor
fisttps
repnz
push
aaa
xor
or
push
jb
filds
hlt
mov
test
pop
mov
call
fildl
sbb
push
adc
movl
outsb
add
mul
push
pusha
xchg
in
in
xor
nop
and
pushl
mov
incl
lret
push
pop
adc
aaa
mov
sub
pop
pop
pop
fs
push
loopne
lahf
add
sub
ljmp
pop
push
shrb
inc
dec
pop
jge
mov
cld
lcall
dec
out
xchg
adc
push
mov
cmp
mov
or
ret
ret
test
jne
sub
add
ret
jne
les
sub
fs
cmp
adc
inc
mov
adc
or
mov
mov
mov
add
fadds
push
or
push
sub
adc
jl
cmp
ret
mov
push
test
nop
and
and
sbb
jnp
pusha
pop
test
fs
inc
push
mov
inc
sbb
inc
mov
subl
push
out
pop
adc
xor
add
adc
push
dec
jmp
sbb
push
add
push
or
in
mov
add
sub
fisttps
les
cld
das
cltd
fisubrl
fdivrs
add
jg
push
push
sub
enter
inc
add
cmpl
jo
mov
shlb
mov
xchg
pop
test
fs
adc
jb
xor
cs
or
clc
push
cld
rorb
push
scas
lahf
and
push
mov
fwait
xor
inc
imul
nop
insl
int
lods
push
mov
adc
test
pop
ja
in
hlt
sbb
add
pop
orb
mov
dec
mov
cmpsl
mov
lods
cmp
ret
pop
sbb
arpl
adcb
pop
inc
and
adc
out
jp
js
push
mov
cmp
cld
add
fdivrp
sbb
mov
dec
jne
sub
pop
dec
xchg
push
jbe
and
dec
aaa
das
cmp
and
push
sbb
ret
xor
pop
dec
and
mulb
test
rorb
int3
mov
cmp
or
cmp
inc
mov
popf
sbb
jns
add
fdivs
jne
ret
mov
in
xchg
mov
jo
std
cmpl
pop
sbb
xchg
clc
mov
sbb
mov
mov
xlat
and
mov
psubb
adc
mov
and
adc
ficoml
cmp
dec
jns
bswap
inc
xchg
sub
mov
lock
pop
bnd
bound
add
mov
xor
pop
push
leave
psubsb
xchg
pop
fnstenv
in
pusha
nop
mov
xchg
sbb
push
and
and
pop
repnz
leave
and
aam
xchg
pop
repnz
mov
xorl
push
int3
mov
ficoms
push
enter
nop
sub
and
add
jnp
mov
ds
sub
push
les
sub
mov
lret
add
in
leave
pusha
test
ret
pop
jne
gs
data16
add
add
xor
in
fs
int
cs
insb
push
daa
dec
outsl
or
lret
popa
fs
mov
or
gs
inc
iret
cmc
sub
push
cld
sub
jecxz
out
push
or
push
push
je
cwtl
jnp
add
mov
jne
mov
add
jnp
mov
ror
push
jge
add
sbb
xor
sub
fimull
add
sub
pushf
sbb
adc
mov
lock
xchg
ja
lods
into
sbb
shlb
mov
push
add
push
into
jle
cwtl
cld
mov
call
ret
call
cmpsl
js
add
xchg
in
or
push
xorl
daa
mov
jg
fsubs
sbb
sub
jne
addl
arpl
push
and
jae
push
sbb
sub
pop
es
lret
sbb
inc
or
push
xchg
sub
cmp
shlb
int
flds
nop
pushf
and
outsb
cmp
inc
add
and
pop
shrb
cmp
addr16
mov
push
add
jnp
sbb
pop
jbe
xor
mov
mov
imul
mov
cmc
xchg
or
push
rsqrtps
pop
adc
sbb
and
pop
repnz
lock
mov
xchg
movsl
addr16
and
sahf
jo
mov
mov
jg
add
mov
mov
sbb
pop
test
nop
cmp
push
test
idiv
push
mov
or
adc
adc
add
adc
int
mov
or
xchg
call
mov
xor
out
dec
dec
mov
sub
addr16
jno
nop
and
cmp
pop
jmp
lea
add
mov
clc
add
cmp
paddusw
adc
sub
xchg
nop
xchg
and
and
lods
aad
cmpsb
shrb
fnstenv
jge
dec
and
and
testl
dec
mov
testb
xchg
roll
or
mov
sbb
jge
adc
and
mov
cmp
push
mov
in
fsub
xchg
in
add
or
lret
xor
jecxz
add
ljmp
cmpsb
outsb
movsl
sub
xor
cmpsb
ss
adc
mov
push
lock
jl
add
cmpsb
inc
cwtl
dec
push
inc
and
sbb
add
sub
pusha
loopne
lret
sbb
and
sarl
popf
adc
cmp
mov
mov
pop
add
and
adc
add
add
fwait
mov
aas
call
fcoml
cmp
test
or
fsubrs
jl
add
mov
js
add
push
les
jmp
orb
cmpsb
imul
mov
jl
push
jae
mov
mov
insb
das
aam
push
xchg
lds
out
and
nop
inc
stos
add
add
insb
add
pop
jo
add
and
and
outsl
lcall
xor
push
add
add
dec
add
mov
push
pop
or
add
dec
sti
fdivl
incl
inc
add
add
push
push
add
add
adc
popa
scas
dec
pop
add
addb
push
xorl
adc
add
nop
push
add
inc
inc
add
add
add
pusha
add
imul
add
add
or
push
add
outsl
add
mov
out
sbb
cmp
add
outsb
add
dec
add
pop
or
frstor
push
outsb
inc
adc
and
pusha
dec
inc
add
and
mov
outsl
jg
pop
inc
pusha
and
inc
arpl
fmull
jae
mov
out
cmp
add
imul
fstl
pop
push
or
push
lea
ss
gs
push
pop
scas
stc
pop
xlat
cmp
xchg
pop
push
mov
adc
dec
or
xchg
shlb
push
pop
xchg
add
push
repnz
mov
add
add
repnz
in
sbb
mov
shlb
mov
outsb
js
jne
jg
pushl
data16
push
jns
addr16
ja
jae
outsb
add
pop
and
sar
push
adc
movaps
lcall
add
fdivrl
cvtps2pd
mov
push
xlat
mov
out
jb
push
in
mov
lahf
jb
cltd
popf
das
mov
jb
daa
rcr
xchg
sti
sub
xor
ds
inc
cmc
negl
pop
push
outsb
push
dec
adc
push
or
in
adc
adc
or
aad
test
xchg
aad
or
in
in
sbb
pop
dec
add
mov
in
sbb
push
push
inc
mov
fbstp
push
out
or
add
sbb
fwait
jge
push
pop
xor
sbb
xchg
daa
ss
aaa
push
idiv
daa
inc
xor
ja
fdivrl
and
adc
lds
or
xor
cmp
adc
lods
mov
loop
mov
mov
lds
incl
add
xchg
addl
test
pop
pop
sar
incl
sub
ret
mov
aaa
adc
cmp
pop
pop
mov
dec
sub
pushl
sub
in
add
sbb
mov
cmp
xchg
jmp
xor
sub
mov
inc
js
nop
int
je
jl
sub
adc
jne
in
call
xchg
imul
jns
xor
and
sub
out
pop
clc
stos
je
cld
bnd
mov
or
test
cmc
nop
aas
or
push
jo
ret
adc
mov
call
lret
mov
incb
and
js
add
xor
fwait
cmp
add
dec
cmp
incl
sub
scas
sbb
sub
nop
testb
jo
xorl
ljmp
das
shl
js
fninit
or
dec
jge
sbb
call
push
pop
aas
inc
or
jle
repnz
xorl
iret
and
in
adc
cmp
dec
movsb
andb
dec
cmp
or
and
push
sahf
jle
pop
mov
repnz
out
repz
push
incl
adc
in
dec
sbb
sarb
add
enter
int3
xor
jno
mov
fdivr
call
out
lock
add
adc
popa
sub
pusha
in
nop
cmp
fisubrs
pop
or
dec
pop
cmp
add
dec
nop
fldl
jno
dec
cmp
int
jnp
or
fwait
lret
mov
fldt
pusha
fstpt
cmp
jp
push
aam
aas
lret
mov
push
cmp
pop
add
jb
mov
outsb
pop
mov
call
filds
cmp
mov
outsb
aad
xchg
mov
sbb
in
mov
cmp
cmpsb
outsl
cmp
cmpsb
gs
outsb
jecxz
int3
nop
neg
mov
and
push
and
cld
cmp
imul
mov
insl
or
cmp
arpl
std
fdiv
pop
popa
jne
dec
int
xchg
cmp
and
xlat
xor
jb
pop
jo
arpl
aaa
insb
dec
cmp
adc
lcall
jne
out
cmp
and
lret
mov
js
cmp
arpl
in
ja
xor
icebp
popa
cmp
adc
push
cmp
aaa
adc
lret
fucom
mov
push
jbe
sbb
pushf
mov
mov
je
aaa
jle
in
xchg
add
add
idiv
push
iret
inc
jge
sub
sar
nop
clc
jmp
nop
loop
jp
xchg
repz
cmp
or
push
aas
jle
add
jmp
into
in
and
mov
rorb
test
nop
hlt
cmp
sub
clc
call
cld
loop
addl
nop
repz
in
cli
js
sbb
mov
pop
insb
aaa
dec
mov
testb
or
int3
mov
addr16
clc
sbb
pop
cld
call
mov
repz
outsb
or
cmp
or
jb
xchg
mov
push
dec
push
jecxz
andl
fdivrl
inc
js
add
jge
cld
cld
decl
add
jo
nop
add
lahf
test
cmp
add
and
jp
or
sti
sbb
roll
or
mov
jp
das
jp
push
mov
daa
cmp
or
jns
pop
movsb
xor
and
jns
jge
mov
fcmovnb
jge
add
adcb
mov
in
xchg
pop
push
xchg
mov
ja
or
cmpsb
lock
call
in
nop
jmp
add
mov
cmc
xchg
jns
and
cltd
push
push
imul
nop
popf
sbb
lcall
icebp
mov
xchg
cmp
xchg
add
mov
mov
imul
xchg
mov
xchg
cmp
pop
test
lods
fistpl
jno
lods
dec
lcall
push
jo
xchg
mov
inc
ja
adc
pushl
push
mov
cmp
or
dec
lahf
sub
decl
xlat
xor
cmp
sbb
mov
fidivl
scas
in
fbld
sbb
pop
inc
push
fdiv
jg
mov
and
pop
popa
jno
xor
xchg
or
idivb
sub
add
sub
add
adc
fcomi
idiv
fcomp
mov
fcomps
mov
lret
dec
outsl
jnp
int3
mov
xchg
nop
cltd
xchg
xchg
ljmp
lds
nop
lret
mov
and
push
lret
fstl
inc
negl
mov
das
insl
dec
mov
in
out
mov
mov
orl
cmpl
push
popf
fistpll
mov
xor
add
out
adc
lahf
adc
outsb
jl
call
and
je
bound
call
cld
out
mov
jecxz
jmp
pop
adc
jnp
cli
mov
sti
cli
cmp
and
pop
push
xchg
jbe
je
repz
dec
dec
sub
adc
inc
repnz
fiaddl
out
int
mov
mov
out
clc
int
aaa
mull
xchg
mov
in
lcall
xchg
rcrl
push
into
sarl
cmp
cld
and
mov
dec
aad
mov
dec
mov
sbb
mov
ror
push
popa
mov
pop
fstp
imul
xchg
aad
sub
mov
lret
shll
lock
sbb
adc
push
adc
pop
mov
pop
dec
icebp
jmp
daa
and
shll
xchg
in
mov
fsts
push
aaa
in
xchg
outsl
in
fidivrs
or
adc
rclb
dec
inc
lods
outsl
xchg
cltd
popa
test
in
sarl
mov
jb
sahf
icebp
xchg
adc
lcall
ljmp
hlt
mov
and
std
and
inc
and
adc
mov
ror
xchg
or
aad
xlat
and
int
and
or
loope
incl
jmp
bound
flds
adc
add
stc
hlt
xchg
jbe
mov
hlt
push
pop
enter
inc
sub
xlat
inc
in
add
pushl
aaa
icebp
fnstsw
std
xchg
fimuls
std
nop
jle
repz
add
lock
lea
adc
mov
dec
pop
int
adc
ljmp
mov
stc
fwait
and
std
iret
int
in
add
hlt
or
and
or
mov
cmp
mov
loop
fadd
mov
pop
loopne
adc
mov
sbb
dec
in
cmp
sub
jg
decl
enter
mov
movb
sar
mov
pusha
leave
mov
rorb
mov
xchg
int
mov
xor
fisttpll
call
dec
in
pop
int
mov
in
xchg
mov
cmp
aam
cmp
add
int3
pop
dec
cld
lahf
and
or
in
or
clc
out
gs
mov
int3
sub
lret
pop
or
cmp
ljmp
sub
add
addr16
jmp
adc
adc
ret
pop
cli
inc
lret
fndisi(8087
xchg
xor
nop
xchg
xchg
xchg
xchg
adc
dec
arpl
call
jle
loope
sbb
sbb
sub
enter
in
cmp
inc
lcall
mov
adc
sbb
jbe
xchg
cmp
dec
xor
lea
mov
and
mov
adc
loopne
and
jno
icebp
enter
insb
add
and
adc
fwait
and
ja
cmc
xchg
dec
xor
sub
and
stc
xor
cmp
testb
adc
jecxz
or
pop
ror
xchg
push
fcmovnb
addr16
clc
dec
es
or
daa
and
lret
mov
jmp
andl
ljmp
mov
lret
sti
mov
cmc
cvttps2pi
das
jnp
jle
pop
or
sub
out
pop
clc
lods
movb
sub
pop
add
pop
loopne
scas
xor
lea
mov
int3
dec
push
lds
cld
call
cwtl
or
cmp
push
aaa
push
sbb
cwtl
sbb
jmp
nop
sbb
adc
rcl
sub
test
jne
lock
shl
pop
cltd
ret
sbb
sbb
call
sub
shlb
jge
repz
incl
push
in
loop
mov
rcrl
pop
testl
pop
sbb
fdivrl
and
add
addr16
fcomip
sub
inc
or
pop
sub
mov
and
std
outsl
pop
dec
jbe
dec
push
orb
movl
stos
mov
push
adc
sbb
sbb
xchg
mov
ds
das
cld
in
decl
out
lea
sbb
xchg
pushf
cmpsl
and
mov
sbb
sbb
into
pop
pop
push
stos
adc
fstpt
das
xor
push
out
dec
adc
adc
and
incl
xor
lock
fdivl
shrl
aad
mov
clc
inc
or
into
cmp
mov
insl
sub
push
call
adc
sub
jmp
cmp
xor
rcr
lcall
lcall
sbb
lds
dec
adc
loop
lds
movsb
push
xchg
cmc
inc
push
mov
fucomip
xchg
or
scas
xor
xchg
push
fsubr
or
mov
std
push
jg
jno
cmp
jno
push
jbe
int
sub
imul
inc
mov
aam
js
pop
leave
idivl
jle
repz
dec
decl
stos
imul
lret
add
xor
xchg
inc
mov
hlt
adc
dec
int3
repz
xchg
mov
addr16
repz
enter
mov
adc
cmpsl
lea
jecxz
fwait
inc
rcrb
jge
pop
xchg
push
jge
dec
push
cmp
es
mov
cld
sbb
pop
add
in
movsl
mov
movsl
jb
ret
mov
dec
lret
push
xor
cmc
stos
mov
jb
xchg
or
jo
xlat
fsubrl
mov
xor
adc
rcr
cwtl
add
jp
popf
pusha
push
xor
or
mov
mov
in
adc
xchg
mov
and
je
sub
mov
and
adc
enter
test
std
das
push
ljmp
add
bound
sub
xchg
adc
or
mov
add
pushf
xchg
aad
xchg
lds
xchg
fldl
in
push
sbb
sti
xchg
or
xor
or
add
jb
adc
hlt
jg
mov
adc
sbb
sbb
pop
inc
mov
inc
sub
das
lock
mov
packsswb
inc
sbb
jecxz
adc
inc
dec
pop
ljmp
cs
sub
inc
mov
mov
aam
mov
loope
loopne
or
int
mov
cld
cmp
jae
lods
pop
or
xchg
pop
cli
lcall
xor
aad
in
jmp
sbb
mov
adc
aaa
mov
dec
inc
in
mov
cmp
aaa
mov
idivb
or
add
jmp
ret
jl
push
push
inc
int3
or
add
mov
dec
and
add
lcall
loopne
pop
lock
or
inc
pop
std
and
pop
adc
std
pop
cld
mov
push
out
add
mov
sahf
gs
test
hlt
add
sub
bound
sbb
jg
incl
cmp
and
inc
inc
rolb
add
xor
adc
cmp
call
mov
daa
and
pop
div
mov
mov
int3
negl
adc
lock
jg
cld
enter
adc
lds
jp
incl
movsb
mov
adc
xor
in
push
je
xor
call
mov
hlt
sbb
mov
push
push
adc
notl
mov
pusha
mov
push
xor
jecxz
jmp
xchg
ret
xor
push
adc
arpl
mov
imul
in
jmp
insl
gs
dec
sahf
xchg
mov
cld
ljmp
pop
loopne
mov
and
lcall
das
adc
iret
jo
xor
cmc
fistpll
cmp
xor
pop
loop
mov
iret
ss
jo
add
and
fnstenv
movsb
pop
loopne
or
ljmp
ljmp
add
cwtl
arpl
decl
lock
sha1nexte
in
or
call
jmp
std
pop
cltd
xor
or
inc
add
ret
es
ljmp
jnp
ret
add
dec
and
stc
pop
test
mov
in
sbb
outsl
jg
jb
sub
ljmp
in
loope
xorl
xor
jbe
dec
stos
in
arpl
xor
lahf
mov
call
fs
add
daa
mov
ret
ljmp
fnsave
push
mov
fs
cmpsb
push
insl
in
out
inc
int
jg
mov
jne
mov
jg
out
pop
jge
mov
popf
repnz
out
mov
fisttpl
lcall
jb
into
and
in
pop
out
mov
sbb
lea
iret
sbbl
jno
jg
sar
or
test
jns
sub
mov
fildll
or
sbb
inc
pop
lock
incl
xor
or
push
push
cli
dec
lcall
std
mov
icebp
or
cld
xchg
inc
insl
dec
aaa
add
mov
jg
call
test
jo
adc
repz
push
es
leave
add
decl
dec
add
jl
lds
lock
packssdw
jae
or
pop
xor
mov
xor
xor
and
xor
or
mov
aaa
int
adc
inc
cmp
repnz
sub
mov
je
test
sbb
in
mov
call
and
pop
inc
in
cmp
jnp
sahf
sbb
or
incl
push
lret
xor
loop
nop
adc
faddl
jg
das
shrl
fistpll
loopne
cmp
mov
lahf
add
jnp
nop
dec
mov
lock
ljmp
icebp
or
lea
inc
fistpll
loopne
or
pop
push
inc
dec
outsl
std
ljmp
or
mov
pop
lret
cmp
jbe
jp
pop
adc
fucomip
das
icebp
mov
hlt
cmp
pop
and
jmp
rclb
call
bound
jnp
push
iret
outsb
imul
sahf
sbb
xor
mov
iret
mov
lods
pcmpeqb
and
push
shl
xchg
dec
mov
jnp
pop
cli
das
lock
or
test
push
ret
in
or
lret
cmp
std
incl
adc
mov
adc
aad
call
dec
inc
clc
lea
call
lcall
call
and
sahf
xchg
jo
and
or
mov
add
or
jp
and
mov
out
sub
mov
clc
or
repnz
popa
popa
cmc
fwait
lods
push
dec
in
repnz
push
xlat
clc
clc
or
pop
ds
adc
js
sar
mov
outsl
push
pop
sbb
movsl
scas
adc
nop
outsl
cltd
dec
mov
popl
jl
call
nop
pop
or
inc
cmp
mov
cmp
cmp
fisttps
clc
pop
add
test
cmp
hlt
or
mov
mov
mov
or
mov
lcall
aam
ds
jmp
insl
sub
decl
add
sub
cmc
sub
aad
jns
sub
sbb
cld
add
pop
push
or
jae
mov
xlat
xor
fsts
dec
adc
repz
push
fsts
aas
aaa
shlb
sub
adc
div
dec
outsl
call
mov
cmp
rcrl
icebp
idiv
testb
inc
dec
push
or
inc
sbb
and
pushl
aaa
dec
sub
cmp
dec
cmp
pop
lods
jbe
sub
push
pop
loopne
ljmp
dec
inc
sub
inc
popf
push
inc
cmp
jno
inc
inc
sarl
xchg
fimuls
lret
fcompl
mov
decl
cmp
mov
lret
add
and
dec
xchg
cmp
fs
push
dec
sarb
jns
pop
jp
pop
stos
cmp
into
adc
jnp
cmpsl
sbb
out
mov
call
loop
call
sub
sbb
shll
fs
mov
bound
or
jg
test
add
out
ja
ja
pop
enterw
outsl
aad
decl
js
sub
int
cmp
lock
hlt
call
cmc
adc
jno
push
faddl
rolb
mov
xor
and
cmp
or
mov
mov
adc
add
roll
mov
sub
mov
decl
sbb
or
pop
push
add
pop
lds
fildll
mov
out
loope
adc
sbb
int3
in
and
je
push
xchg
cmc
inc
sbb
neg
sbb
push
jle
hlt
sub
fbld
push
leave
sbb
xor
call
push
fstl
loopne
stc
sub
cld
test
add
inc
sub
or
cmpb
sub
jnp
dec
adc
cmp
fists
pusha
mov
mov
push
in
movsl
or
mov
movb
pop
mov
cmc
add
mov
imul
mov
gs
test
movsl
jne
adc
cmp
mov
jb
mov
mov
dec
push
aas
shll
sbb
ljmp
aas
jle
pop
shrw
repnz
int
jae
incl
fsts
xchg
test
shl
or
stos
dec
test
and
clc
mov
int
xchg
mov
in
les
push
sub
out
jecxz
pushl
enter
add
mov
pcmpgtw
push
nop
or
icebp
adc
ljmp
cmp
mov
enter
mov
push
inc
mov
push
nop
inc
aaa
pop
in
push
or
sub
sbb
idiv
ret
iret
ret
fwait
jecxz
dec
xchg
add
lock
inc
push
add
cmpl
loopne
jp
push
sbb
decl
cmc
or
inc
add
jns
fwait
cmc
mov
cmp
mov
mov
mov
inc
jno
and
jle
xchg
ja
mov
mov
repz
lahf
pusha
and
cmpl
sub
sub
or
lea
decl
pop
aaa
mov
pop
lret
int3
popa
shll
push
xor
push
pop
clc
xor
mov
incb
das
mov
sub
push
mov
call
jle
mov
les
dec
xchg
jmp
in
in
stos
jg
fistpll
cmc
cmc
stc
push
or
std
std
add
call
ljmp
std
push
add
int3
icebp
add
jl
pop
fisubs
xor
test
sbb
and
gs
sbb
inc
or
cli
call
add
into
adc
cld
fisubrs
dec
ljmp
cld
jmp
ja
xor
cs
sbb
fdivrs
or
mov
sar
push
push
pop
hlt
push
mov
and
sub
xor
jno
mov
fistpll
fidivrs
shlb
or
dec
mov
imul
jo
push
stos
sub
stos
xchg
xchg
and
sbb
push
in
mov
adc
xlat
rorl
or
mov
call
call
pop
addr16
xchg
imul
int3
mov
les
scas
cmpsl
jg
dec
or
call
stos
loope
lds
sbbl
inc
inc
movb
fbstp
inc
popa
adc
adcb
push
loop
or
test
call
xchg
sbb
and
inc
push
and
scas
bound
xchg
sub
xchg
adc
es
or
xor
ss
jg
or
sub
add
daa
ud2
jg
stos
mov
sbbl
test
in
lcall
cmp
fiaddl
std
inc
mov
sub
cmp
pop
push
mov
orl
jge
jg
inc
stos
jo
inc
scas
rcrb
lock
lea
pop
popa
nop
sub
lcall
je
cmpsb
imul
jo
adc
div
sub
cmp
scas
jno
xor
loopne
inc
push
les
lret
or
jg
fistpll
mov
call
mov
mov
sub
ss
cwtl
popa
pop
out
adc
incl
roll
in
xchg
xor
and
xor
enter
addb
inc
je
jecxz
mov
gs
sub
adc
pushf
out
cmc
sar
test
lret
mull
push
lods
fdivrp
cmp
or
push
xor
ror
pop
sub
cmp
or
or
lret
xor
sbb
cmp
cmp
jmp
aas
mov
lods
push
ficomps
in
jle
pop
inc
pop
incl
fdivrp
outsl
lret
daa
dec
and
cmpsb
shll
shrl
cmp
inc
inc
push
sbb
pushl
adc
mov
jno
mov
mov
pusha
je
adc
inc
jae
inc
rorb
xor
push
jl
or
pop
clc
decl
hlt
sub
repz
ds
sub
or
aam
mov
ljmp
pop
or
lret
push
sub
push
xchg
xchg
dec
pop
ret
sbb
jmp
mov
pop
and
push
rolb
cmpsb
push
mov
mov
or
loop
push
enter
inc
lcall
rcrb
imul
and
out
inc
inc
pop
call
mov
ror
lcall
cld
xor
fistl
ds
hlt
mov
popa
into
fcoml
sub
sbb
testb
in
and
test
mov
das
icebp
pushl
shl
add
leave
ffreep
cmp
lret
sbb
idivb
cli
cmp
dec
fmull
sub
add
fimuls
lret
jecxz
outsl
cmc
lcall
arpl
lock
or
mov
push
or
int3
icebp
ljmp
inc
fsubl
cmp
icebp
push
dec
sbb
mov
mov
decl
jg
add
sbbl
fstpl
cmp
dec
fsubs
pop
xchg
inc
and
add
jb
test
decl
cmp
sbbb
pop
inc
aam
rcr
mov
pushl
clc
dec
jno
pushf
xchg
stc
lea
jno
inc
lods
push
popa
push
xchg
fildl
lret
adc
incl
ja
push
inc
xchg
and
and
popa
xchg
push
addr16
js
mov
mov
push
dec
popa
sub
sbb
into
mov
call
lods
dec
pop
imul
sub
dec
dec
push
int
rcrb
inc
push
adc
cmp
mov
or
push
or
loop
pop
dec
inc
xor
xor
push
sub
daa
push
adc
pop
or
int
arpl
outsb
cmp
fistps
aaa
into
sbb
mov
cltd
addr16
dec
mov
cmp
and
fucomip
jg
imul
mov
jo
push
hlt
lea
repz
decl
mov
in
push
insb
fldl
or
cmp
lahf
mov
outsl
mov
jmp
xor
call
vshufps
clc
popa
pop
inc
or
jg
es
out
dec
sub
lret
fistpl
dec
cld
incl
arpl
sbb
pslld
sub
mov
incl
mov
push
leave
or
xorb
arpl
inc
xor
ljmp
mov
jmp
jno
into
icebp
repz
ds
cwtl
clc
mov
pop
lock
das
hlt
cld
mov
xor
in
mov
cmp
inc
and
mov
icebp
leave
mov
leave
jg
mov
sbb
adc
imul
adcb
incl
jno
imul
inc
cmp
mov
pop
jmp
dec
or
enter
jno
into
xchg
call
sbb
fistl
dec
pop
sub
or
sbb
stc
cmp
aaa
gs
mov
out
enter
aad
in
and
xchg
mov
jg
add
dec
aas
clc
adc
jecxz
cmp
pop
fists
clc
or
mov
jo
cmc
clc
cmpsb
jp
dec
add
lret
and
roll
jg
jg
adc
pop
adc
outsb
mov
lret
cmpsl
xor
sar
outsb
pop
clc
lcall
cmp
push
loopne
sbb
call
fimuls
pop
arpl
and
mov
adc
xchg
je
push
push
lcall
dec
mov
sbb
adc
mov
inc
or
pop
lock
cmp
pop
aaa
push
sbb
fmuls
pop
jno
ds
mov
aad
jbe
push
rorb
outsb
cld
sbb
cmp
sahf
into
and
mov
out
pop
pop
ljmp
jl
fisubrl
loope
int
shlb
decl
dec
insl
fidivl
cmp
xlat
sbb
sahf
jle
and
mov
lea
push
or
pop
push
pop
xchg
sbb
cmp
decb
hlt
cld
lret
mov
ljmp
cld
mov
nop
sub
test
sub
jne
inc
addl
push
sub
inc
push
ret
xor
push
js
stos
push
test
push
mov
adc
sub
sub
testl
lock
stos
ds
pushf
jg
ret
aad
push
mov
adc
aad
cld
inc
jmp
sarl
and
into
xchg
ss
dec
fistl
or
jg
inc
jno
push
gs
inc
frstor
push
out
xchg
inc
lods
push
mov
mov
imul
outsl
inc
dec
mov
enter
lods
inc
pop
xlat
push
inc
xchg
push
addr16
xchg
mov
push
lock
dec
aad
dec
imul
shl
push
adc
xchg
push
out
xor
cld
mulb
cmp
push
test
push
call
lea
insb
push
enter
lods
push
pop
cmp
ljmp
sub
lock
jne
pop
imul
cwtl
mov
jecxz
popf
pop
jecxz,pt
xor
imul
jg
mov
mov
popa
inc
popa
gs
adc
push
call
iret
xchg
sbb
jmp
movb
push
in
inc
push
subl
lret
lcall
cld
jmp
fucomp
mov
inc
iret
dec
decb
inc
inc
pop
mov
push
adc
hlt
mov
ja
inc
or
cmp
jns
call
sbb
adc
jp
xor
fdivrl
inc
sub
sbb
imul
sahf
and
movsl
pop
pop
insl
adc
xor
loope
xlat
pop
jg
add
nop
ljmp
fbld
into
gs
ss
nop
mov
leave
ljmp
adc
into
or
sub
cmp
xor
fistl
xlat
dec
or
push
popf
icebp
lret
cmp
sbb
push
dec
cmp
sbb
mov
xchg
imul
aaa
jnp
js
jge
fucomip
push
jmp
popf
push
jmp
mov
or
jp
dec
xchg
mov
data16
dec
inc
cmpsb
out
pop
adc
sbb
decl
push
push
push
or
es
pop
adc
pop
mov
fistps
push
push
ljmp
decl
pop
fildl
stos
and
mov
xchg
xor
icebp
cli
lret
mov
out
jle
pop
jae
rcrb
jmp
jns
adc
dec
or
dec
out
jg
mov
daa
pop
and
push
rcr
mov
sub
test
in
or
js
and
or
loope
rcll
stos
jecxz
iret
xchg
repz
out
and
jmp
jecxz
insl
mov
stos
or
mov
cmp
rclb
into
call
cli
jg
ffreep
mov
or
iret
bound
jecxz
aaa
ss
adc
dec
ret
aad
or
mov
aam
xchg
in
mov
sub
adc
mov
gs
add
js
incl
mov
pop
enter
add
out
pop
mov
jl
test
lods
or
pushf
stos
cmp
les
fwait
in
pop
mov
or
mov
or
add
mov
or
ret
sbb
fldt
std
pushf
add
jp
je
or
or
insl
jmp
xchg
xor
ds
aaa
aaa
mov
in
sub
int
out
dec
lret
int
adc
andl
mov
mov
jbe
adc
pop
push
cmp
mov
stc
pop
pop
pop
pop
sbb
push
sbb
pop
cmp
push
stc
pop
mov
icebp
sbb
sbb
sbb
sbb
pushf
std
pop
mov
adc
and
orl
adc
repz
mov
inc
and
and
adc
or
out
pop
es
daa
or
sub
or
push
sub
outsl
pop
mov
push
xor
push
sub
test
and
imul
dec
or
or
or
xor
mov
xor
xor
clc
push
xor
stc
outsl
imul
or
push
or
cmp
or
cmp
jg
mov
or
or
push
cmp
cmp
or
fstpl
or
or
or
inc
push
ljmp
insl
inc
add
aam
inc
push
pusha
enter
or
syscall
or
incl
pop
mov
nop
movsl
inc
clc
mov
xchg
jp
mov
and
pop
mov
add
adc
fnsave
jle
and
ljmp
inc
inc
rorb
or
xchg
pop
xlat
aaa
js
popa
or
mov
aas
sbb
push
outsl
cmc
sti
in
pop
std
or
fs
lret
test
lods
addl
mov
fimuls
rclb
or
and
push
test
mov
ds
js
mov
push
call
cmp
sub
sub
adc
xor
outsl
mov
sbb
aas
xlat
sbb
dec
daa
pop
das
xchg
outsl
sub
pop
push
pop
push
xlat
mov
mov
inc
cmp
jg
insb
or
aad
xor
sub
inc
jno
jne
stc
idivl
inc
cmpl
sub
out
sbb
cltd
sub
cmp
sbb
cld
repz
cmp
sbb
repz
mov
leave
orl
cmp
xor
sub
rcll
ljmp
and
sbb
pop
xchg
js
jecxz
jo
push
icebp
xchg
sub
out
adc
faddp
mov
cld
mov
adc
push
adc
insl
pandn
lods
jle
jbe
adc
js
jae
icebp
into
jge
push
addl
push
pop
jge
inc
test
pop
mov
inc
pop
sahf
loop
call
or
incl
jns
mov
mov
xchg
xchg
stos
sarb
divb
lods
push
push
pop
mov
mull
lods
int3
adc
decl
negl
mov
int
cwtl
and
sub
xor
mov
fnstcw
in
jmp
es
xor
jmp
into
cmp
cmc
add
xchg
ss
repnz
call
pop
cli
fistps
xor
mov
xorl
and
outsl
pushf
push
cli
and
pop
mov
pop
jle
jno
sbb
scas
ret
stos
xchg
imul
int
cltd
sbb
cltd
or
cmp
loope
add
in
mov
cmp
std
add
stc
jmp
sbb
sbb
push
mov
testb
cmp
cld
xor
addr16
mov
mov
push
pop
outsb
or
lret
pop
cld
jae
xchg
push
out
or
pop
cli
incl
or
adc
pop
xor
and
pop
xchg
dec
rcrl
sub
mov
int
sbbl
cmpsl
jp
push
inc
push
xor
push
clc
pushl
mov
loope
fdivs
sti
xor
in
cmc
aam
cmpsl
incl
out
js
popa
push
inc
mov
das
scas
sbb
inc
add
mov
sbb
ljmp
lock
fcompl
push
adc
inc
push
jp
jl
adc
ljmp
fisttpll
xchg
in
mov
movhps
push
fdivs
or
sub
adc
insb
setl
ret
cmp
stc
pop
std
add
add
fildll
or
sub
xor
inc
sbb
pop
and
and
sti
jg
into
sub
sub
cwtl
mov
cmovne
cmp
inc
xor
dec
mov
pop
outsl
in
push
mov
dec
jbe
jns
pop
in
mov
ljmp
jmp
movsl
xor
or
pop
outsb
aaa
jg
pop
adc
pop
push
dec
addl
sub
clc
mov
pop
popf
pop
cmp
adc
pop
movsl
pop
test
gs
outsl
fsubl
pop
mov
adc
or
out
movsl
xchg
incl
lds
or
adc
fildl
adc
or
or
or
cmp
dec
mov
decl
das
pop
test
les
xor
xchg
inc
pop
stc
mul
sbb
xor
cmp
pushf
sbb
and
push
sub
xor
lods
ljmp
mov
cmp
fwait
mov
adc
jmp
jg
aas
push
pop
popf
and
les
inc
cltd
sub
jne
sahf
xor
out
into
jne
xlat
jle
pop
jo
adc
push
mov
pop
das
and
aaa
pop
fidivrs
pop
mov
cs
std
imul
gs
sbb
pusha
subl
or
or
xor
nop
or
into
cmp
dec
or
adc
das
hlt
call
pop
adc
pop
outsl
aas
dec
test
cltd
insl
jns
xchg
inc
jno
mov
aaa
cli
push
insb
cmp
jne
mov
insb
movsb
jecxz
jne
ljmp
xchg
xor
mov
cmp
in
leave
mov
push
mov
xor
jns
cmp
decl
xor
adc
ss
or
or
decl
movsl
or
movsl
or
mov
daa
loop
or
mov
js
decl
pop
in
sbb
mov
mov
ds
cli
mov
mov
cmp
ror
sarl
and
incl
outsl
aad
mov
jg
and
cli
ljmp
hlt
and
and
stos
push
jge
nop
jns
pop
aad
rorb
mov
fildll
adc
not
xor
inc
adc
and
stos
sbb
lcall
jmp
clc
and
xor
sbb
mov
push
mov
or
pushl
jo
jbe
pop
arpl
xchg
and
test
in
or
mov
scas
imul
pop
cli
cmp
fisttps
adcl
movsb
dec
mov
sub
pop
popa
rcll
decl
sbb
inc
or
sbb
in
outsb
and
loope
sub
push
xor
cltd
nop
decl
loope
mov
aaa
xor
call
loope
decl
aas
scas
enter
adc
in
or
in
or
push
jle
out
or
xchg
aaa
cli
incl
lds
insb
add
and
int3
es
lock
inc
sub
inc
jns
daa
dec
int
arpl
lods
xchg
pop
loope
mov
or
fmull
and
lahf
call
or
pop
inc
outsb
pushf
fistpl
pop
enter
dec
xchg
or
ret
aas
addb
add
imul
dec
into
cwtl
sbb
dec
ja
aaa
rcrl
lock
sub
orl
xor
inc
popa
or
jmp
dec
jge
repz
popa
cmp
insb
jmp
pop
cmp
mov
cmp
adc
and
xchg
mov
push
sbb
aas
rclb
lea
test
icebp
call
or
mov
lods
arpl
xor
xchg
push
adc
or
push
push
aaa
mov
ljmp
push
adc
pop
sbb
pop
mov
popa
or
imul
mov
aaa
dec
dec
fwait
adc
cwtl
or
mov
call
xchg
and
mov
sbb
pop
or
mov
lret
sbb
decl
sarb
lea
push
sbb
push
or
mov
cmc
jmp
mull
inc
fadds
clc
or
lahf
mov
mov
das
out
sti
and
adc
mov
decb
lea
mov
add
pusha
sbb
popl
mov
xchg
sub
mov
dec
lahf
or
adc
xor
jg
pop
loopne
or
pop
imul
xchg
pop
mov
push
ljmp
out
dec
mov
jecxz
mov
adc
jno
and
sub
fbld
out
xchg
loop
test
sbb
jg
aad
xchg
clc
out
sbb
push
cmpsl
mov
cmc
and
jg
inc
stos
and
int3
mov
cmp
push
call
mov
daa
out
inc
test
arpl
xchg
sub
or
jb
outsl
lock
ljmp
das
or
xor
or
mov
clc
outsl
icebp
icebp
popa
in
mov
pop
mov
adc
cmpsl
mov
idivb
push
mov
out
inc
sub
mov
add
and
shll
jno
push
ret
pop
les
lahf
shll
enter
fists
or
leave
lret
loop
push
xchg
int3
or
cmpsl
iret
icebp
test
cmp
rclb
outsl
cmc
sarl
aam
int
adc
or
addr16
mov
xor
ficoml
daa
jl
fucom
faddp
dec
fstpt
cld
or
aad
loope
inc
mov
in
xchg
mov
out
incl
mov
hlt
test
ljmp
adc
in
out
cmpsl
mov
and
mov
lock
lret
cmc
icebp
jno
repnz
mov
repz
call
dec
xchg
add
sub
or
stc
push
cli
popf
cmc
xchg
insb
sub
add
xchg
cli
fildl
adc
or
jae
cmp
inc
ret
lods
xor
out
xchg
add
sti
imul
ljmp
push
cwtl
and
or
in
mov
or
add
jne
adc
adc
mov
sbb
mov
pop
and
nop
repz
cmpsl
sbb
sbb
mov
clc
adc
or
movsl
fstpt
lahf
push
pushl
cmp
and
and
xchg
ja
and
lods
cmp
loope
scas
addr16
loope
sub
mov
cs
mov
sbb
fdivr
jp
xor
shlb
sub
outsl
icebp
lods
ds
push
or
jle
outsl
cmp
ljmp
cmp
imul
pop
ds
dec
inc
adc
loopne
rolb
or
incl
cld
outsb
jnp
inc
adc
xor
dec
dec
or
in
adcb
dec
arpl
dec
mov
mov
out
cmpl
push
push
push
push
pop
push
shl
adc
push
pop
inc
pop
adc
mov
fistpl
aaa
inc
pop
or
scas
pop
pop
jp
inc
pusha
jae
and
arpl
lock
incl
gs
dec
addr16
ret
hlt
push
imul
mov
cld
mov
adc
jno
pop
pop
jae
je
jne
clc
das
and
ja
js
jns
jp
jnp
mov
sbb
jecxz
loopne
and
jg
cmp
lock
adc
cmp
jg
and
test
xchg
inc
test
pop
mov
fimuls
pop
cld
mov
mov
cwtl
repz
nop
pop
push
aaa
dec
mov
popa
xchg
jns
pop
nop
xchg
push
sub
pop
test
xchg
xchg
cmp
pop
jno
popa
sub
mov
adc
ret
cmpsl
lahf
mov
mov
imul
jmp
cmpsl
ret
or
test
pusha
stos
lods
mov
add
scas
sahf
mov
movsb
xchg
shrb
jne
pop
push
cmp
cmp
ja
js
mov
jp
cmp
decl
push
jge
in
out
mov
addb
pop
cmp
test
icebp
test
xchg
mov
xchg
lcall
repnz
xchg
add
mov
pop
or
adc
hlt
mov
or
decl
mov
test
xchg
pop
xchg
xchg
mov
jmp
or
lcall
daa
cwtl
popf
or
mov
aaa
lds
mov
push
mov
nop
cmpsl
mov
test
mov
stos
jo
lods
xchg
das
pop
cli
mov
inc
repz
mov
jl
repz
mov
clc
pop
incl
mov
inc
mov
icebp
ss
mov
or
mov
xchg
adc
pop
push
mov
ret
xchg
repz
mov
popf
pop
cmp
cmpsb
ljmp
leave
mov
lret
jo
nop
int
jl
jmp
mov
rcll
add
neg
dec
sahf
daa
mov
cltd
mov
pushf
or
cltd
ret
mov
fisubl
fcmovnu
push
pushl
lea
push
in
loopne
xor
ds
fidivs
jecxz
in
in
fcmovbe
pop
and
xchg
push
ljmp
mov
in
jmp
cmpsb
out
add
lock
jb
mov
dec
pushf
lahf
xor
sub
pop
mov
clc
sbb
jp
aaa
cmp
cmp
adc
fisubrl
icebp
outsl
sbb
mov
ds
das
bound
shll
cmp
ss
xchg
cmp
ja
insb
push
dec
or
dec
ja
dec
push
call
push
int3
mov
out
jge
or
xor
push
and
pop
adc
pop
pop
repz
mov
pop
pop
aam
int3
shlb
negb
popa
mov
popa
fs
movsl
lods
mov
int3
cmc
arpl
xchg
rolb
push
xor
jp
push
mov
cmp
dec
mov
adc
pushl
xchg
popf
pop
popf
icebp
pop
dec
sbb
and
mov
mov
mov
or
lea
xor
loope
and
dec
mov
clc
jb
push
jmp
push
add
icebp
pop
ljmp
pop
xchg
pop
mov
dec
std
pop
faddl
es
push
fcmovnb
or
incl
lds
sti
das
rorb
mov
dec
cld
stc
mov
hlt
icebp
cmp
push
mov
mov
sbb
std
sub
mov
mov
ljmp
sub
inc
add
cmp
xchg
inc
ret
and
dec
push
push
fcmovnbe
or
sbb
shl
push
cmp
adc
sub
cmp
or
sub
xchg
jmp
mov
mov
push
or
sub
js
and
jecxz
lcall
adc
vphsubbw
sub
orb
jge
jno
and
mov
inc
rcrl
jno
sbb
sti
es
push
lock
lcall
lock
into
and
jl
lock
cmp
sti
decl
repz
lds
or
fsubs
jmp
adc
push
js
sub
mov
jmp
xchg
imul
inc
inc
imul
test
mov
pop
xchg
push
mov
iret
inc
icebp
push
ljmp
push
mov
mov
add
adc
outsb
imul
pop
mov
xchg
pop
clc
mov
cld
je
or
std
cmpsb
popa
xor
pushl
adc
cld
and
pop
nop
imulb
mov
pop
nop
lret
arpl
or
pusha
and
xorb
xchg
mov
jnp
jns
jne
push
outsb
arpl
push
aas
dec
xor
xchg
aam
jmp
mov
inc
add
push
sub
aam
inc
popf
sbbl
jno
add
xchg
outsl
cld
nop
repnz
pop
sub
sbb
imul
lods
incl
mov
fs
addl
fnstsw
jl
mov
and
jo
xor
nop
insl
inc
pop
rcll
hlt
jnp
adc
jne
aam
mov
pop
inc
and
adc
jge
repz
leave
push
leave
pushl
imul
pusha
cli
adc
lods
cmp
cmp
mov
daa
insl
pop
outsl
adc
mov
adc
or
aad
jle
hlt
mov
pushl
movsb
addl
fimuls
xor
mov
das
std
or
mov
and
push
call
adcl
nop
pop
sbb
jg
mov
cmpsl
add
arpl
popa
in
pop
mov
decl
dec
or
or
jecxz
insl
out
or
xor
rcll
push
inc
fists
jg
in
jmp
outsl
mov
adc
xchg
pop
pop
shlb
dec
std
in
xchg
insb
jno
pushl
cld
frstor
lds
int3
xchg
sub
sbb
sbb
faddl
outsl
adc
jmp
aam
movsl
adc
sbb
pushl
mov
xor
inc
sahf
xor
jg
sbb
dec
jae
mov
std
adc
xor
mov
ficomps
jmp
andb
fs
data16
sbb
enter
adc
xor
gs
mov
sbbl
xor
sbb
inc
fsub
push
mov
push
dec
enter
lcall
scas
shlb
enter
arpl
pusha
enter
cmpsb
and
lds
pop
pop
sub
push
sub
pop
sti
sbb
dec
test
mov
sub
rcr
out
loop
pop
pop
fsubs
in
pushl
imul
pop
push
bound
hlt
push
pop
pop
sub
or
sub
lods
aaa
decb
jl
cmp
or
std
mov
sub
mov
adc
push
jae
in
fistl
xorl
jp
push
arpl
cld
das
std
pop
std
dec
push
pop
outsl
imul
lock
ljmp
jp
cmp
jp
sbb
testb
pop
xorl
mov
incl
mov
add
pop
mov
push
inc
nop
incb
cmp
mov
xchg
jnp
jnp
jno
lret
pop
mov
es
mov
mov
cmp
sub
sub
sub
sub
fidivs
sub
jp
decl
pop
addr16
dec
inc
and
jnp
mov
or
or
mov
cmpsl
and
mov
dec
outsl
lods
xor
or
inc
inc
dec
sub
mov
test
or
sbb
test
adc
cmc
push
cmp
cli
lret
incl
jno
jmp
cmc
adc
lcall
mov
xchg
or
cmp
movsb
popa
adc
xor
push
sbb
cmp
adc
int
fsubs
adc
jp
adc
jge
sbb
sub
pop
jns
sbb
pusha
push
mov
jno
xchg
ljmp
mov
imul
xchg
dec
add
adc
push
push
push
es
call
js
inc
pop
and
icebp
mov
lcall
mov
jo
out
leave
mov
inc
inc
dec
inc
lret
cmp
in
inc
iret
and
fsubrs
popa
pop
outsl
mov
scas
aad
pop
and
lahf
rcrb
and
push
inc
fcmovnbe
jg
loop
jle
jae
jl
repnz
addr16
lcall
cmp
inc
inc
lret
cld
lret
sbb
dec
gs
test
jg
pop
ja
xchg
sub
cmp
mov
cwtl
in
imul
hlt
lods
rcl
inc
sbb
rcl
jno
mov
repz
mov
push
jp
ss
setb
rorl
or
mov
and
lcall
xchg
add
adc
pop
out
or
repnz
dec
sbb
fidivrl
icebp
adc
cmp
cmpsb
inc
mov
sbb
enter
inc
jg
mov
xor
xchg
push
testb
fisubrs
pusha
das
pusha
mov
mov
mov
xor
or
xor
mov
lods
mov
mov
dec
and
xchg
inc
iret
popa
inc
add
and
dec
pop
movsl
ss
out
dec
hlt
mov
es
call
repz
xlat
pop
push
push
sub
cwtl
push
sbb
xchg
pop
or
cmp
call
and
xor
div
loope
pop
xchg
imul
or
lahf
inc
ljmp
push
sub
or
inc
mov
dec
mov
push
xchg
adc
nop
fcmovu
xor
outsl
dec
adc
pop
loop
adc
push
xchg
sbb
cmp
incb
cmp
ss
fstpt
xor
jnp
cli
call
adc
mov
pop
test
lds
cld
fbstp
lods
mov
or
ret
movl
sub
outsl
and
lds
mov
add
out
aas
push
addb
int
iret
rcl
rcl
cld
stc
repz
xlat
fcomp
fcmovu
loopne
loop
pop
popf
aas
jg
in
out
jmp
ljmp
push
hlt
mov
nop
neg
push
xlat
imul
push
incl
mov
push
add
or
lret
pop
decl
jne
jnp
popf
ret
jp
imul
inc
fidivrl
call
cli
or
jecxz
mov
sbb
xchg
inc
pop
cld
push
rolb
xor
lret
pshufd
scas
insb
push
lcall
sbb
pushf
loope
push
jbe
and
mov
or
in
mov
jg
std
repnz
adcl
rclb
cltd
adc
mov
cmp
fucomip
ljmp
lret
stos
fistl
mov
xor
xchg
call
out
push
lock
push
dec
inc
insl
dec
xor
push
mov
mov
push
adc
inc
dec
adc
xchg
ss
mov
leave
dec
jmp
mov
popf
mov
into
sub
pop
sbbb
nop
js
decl
cli
mov
cmp
and
push
mov
test
rorl
sub
or
call
shll
cmp
rolb
call
adc
cmp
outsl
pushl
cmp
and
cmp
pusha
pop
pop
pop
pushf
cld
sahf
jmp
push
cmp
push
movsl
jno
push
les
xor
sub
aad
push
pop
or
mov
push
jp
pop
outsl
fistpl
mov
insb
cmpsl
pop
pop
inc
cmp
adc
fisttps
loop
adc
cmp
pop
pop
pop
push
dec
and
jecxz
mov
lods
clc
call
cli
lock
pop
aas
dec
int
xchg
incl
cmc
lcall
std
add
test
jns
xor
push
push
cld
xor
and
mov
xchg
call
dec
out
int
setge
call
cld
fcoms
mov
nop
add
scas
push
add
je
dec
aas
mov
push
dec
fwait
ds
test
and
adc
and
pop
cli
call
in
scas
xor
out
rcrb
sbb
test
ljmp
mov
stos
cmp
or
sbb
scas
cld
and
lahf
decl
or
sbb
pop
sbb
fidivl
or
sbb
es
mov
push
jnp
jg
sub
mov
sub
sub
mov
test
stos
mov
int
bnd
pop
inc
rorl
pop
stos
sub
push
jne
cmpl
jmp
xchg
or
hlt
into
cs
mov
mov
stc
pop
ds
inc
dec
jge
or
imul
sbb
loope
nop
shll
add
cmp
loop
outsl
jg
fcoml
mov
std
mov
sub
push
xor
addr16
add
dec
xlat
negb
pop
loop
or
inc
xor
test
push
mov
xor
inc
icebp
aaa
ja
jmp
jmp
stos
adc
mov
pop
ds
push
dec
sub
xor
fmull
add
jg
pop
dec
outsl
sbb
into
jl
sbb
frstor
mov
data16
ss
outsl
jns
jge
lcall
push
adcl
jae
sbb
sub
or
stos
xor
lahf
ret
cmp
push
mov
and
cs
rcr
xor
cmpsb
jg
je
sub
inc
dec
or
in
addl
or
lcall
cmp
lcall
mov
mov
pop
rcrl
or
jp
int
and
xchg
adc
test
jmp
or
ffree
nop
shr
or
xor
insl
sbb
es
cwtl
call
pop
lea
rcr
sub
pop
insl
sbb
aam
jp
out
clc
lds
gs
movsl
dec
jno
ret
add
hlt
leave
and
roll
jle
dec
mov
push
inc
jp
mov
sbb
sbb
dec
sub
or
or
lea
ret
dec
pop
dec
scas
push
adc
call
or
loop
pop
ficomps
add
sahf
inc
mov
xchg
into
imul
or
sub
pop
pop
sub
js
ds
lock
lock
jno
call
js
in
pop
push
xor
or
hlt
mov
idiv
pop
ljmp
leave
adc
in
stos
pop
cmp
jne
lret
mov
movzwl
outsl
icebp
sub
outsb
adc
pop
xchg
sti
inc
add
ud0
mov
add
movsl
sahf
cld
add
push
push
dec
push
jp
push
inc
cmpsl
jns
bound
sbb
mov
mov
insb
movsl
jmp
insl
insb
push
lcall
decl
or
loop
or
fstps
inc
add
ljmp
adc
dec
ss
nop
ds
lods
jmp
insl
add
adc
pusha
out
je
lcall
jg
or
jne
fs
and
push
cmpsl
leave
nop
ljmp
pop
jmp
icebp
test
repnz
popf
inc
jne
sbb
dec
dec
xor
add
shrb
lods
inc
push
addl
pop
add
divb
nop
cli
sbb
decl
test
jno
rcrb
outsl
inc
jle
xor
push
add
test
insl
lock
rep
and
js
sub
clc
mov
add
iret
xchg
inc
sbb
rcr
rcr
das
sub
add
jg
aaa
lods
jbe
mov
sbb
cli
jne
in
push
mov
dec
cmp
or
adc
cmp
sbb
mov
dec
xchg
pop
ljmp
insb
mov
or
mov
adc
jno
xor
decl
add
out
add
lret
cld
neg
insl
sub
das
pop
cwtl
mov
ret
out
pop
cmp
rcll
repz
or
leave
hlt
or
push
lahf
mov
mov
mov
jo
cwtl
pop
jp
add
pop
orb
test
inc
decl
and
xchg
xor
decl
hlt
adc
popa
inc
jle
inc
mov
or
dec
clc
test
pushl
cmp
mov
pop
loop
inc
aaa
cmpsb
enter
cmp
pop
decl
loope
mov
sti
fwait
mov
sub
push
xor
jo
pop
test
imul
xor
jo
push
jmp
mov
inc
pop
cmp
cmp
incl
mov
in
jecxz
adc
inc
xchg
sub
call
lock
add
jp
push
outsl
xor
inc
aad
mov
cmp
fisttpll
std
ljmp
aas
sub
cmpsb
fldenv
in
scas
ds
in
das
std
cmp
dec
cmpxchg
push
aaa
test
int
sub
int
ljmp
push
lret
lret
push
push
imul
insl
shll
inc
call
jge
sbb
aaa
movsl
scas
fiaddl
pop
not
daa
push
insl
hlt
jg
lods
sbb
cmpsb
nop
jns
lods
icebp
sbb
pop
xchg
lcall
inc
xor
stos
sub
outsb
lods
data16
mov
daa
adc
push
repz
lahf
xchg
ljmp
adc
jg
fldt
push
addr16
mov
push
mov
add
dec
incl
cmp
mov
shl
jo
add
ljmp
loopne
inc
jbe
jae
lahf
or
inc
dec
lods
popf
incl
dec
fs
movsl
enter
pop
mov
or
std
xor
dec
mov
test
inc
js
and
js
adc
aad
dec
nop
std
test
and
std
enter
decl
outsl
adc
test
outsl
fnstsw
mov
insl
pop
xor
sti
cmpl
rcrl
aaa
push
mov
jle
mov
sbb
movsl
lds
fcmovnbe
lea
dec
dec
mov
fsubl
cmp
js
pop
ds
xlat
in
insl
pop
jno
xlat
jl
push
mov
inc
js
xchg
inc
sub
imul
cmc
inc
dec
cltd
xchg
mov
js
xor
sbb
xchg
movsl
sbb
divl
push
cmp
add
dec
cmpsb
mov
test
outsl
hlt
das
icebp
jp
dec
or
add
enter
notl
fistpll
decl
and
data16
cli
test
push
jns
jg
sti
adc
pop
out
or
cmp
cli
inc
mov
jmp
sub
fs
popf
outsb
adc
dec
icebp
nop
or
lea
add
lahf
aaa
pop
cmp
mov
and
xchg
roll
lds
insb
xchg
or
mov
popa
enter
cltd
ret
mov
or
aas
pushl
jns
jge
test
stc
iret
lahf
cltd
popf
mov
mov
jmp
xor
fistpll
aad
pop
fstpl
pop
pop
mov
in
js
roll
outsl
or
sub
xchg
xchg
or
dec
lret
or
and
in
clc
in
test
sub
cmp
cmp
dec
dec
ss
jmp
cld
inc
push
push
pop
pop
xchg
popa
mov
mov
sti
imull
fisttpll
or
dec
test
inc
cmp
cmp
lods
and
or
sbb
in
decl
adc
testl
and
dec
notb
test
aaa
clc
mov
cmc
mov
or
mov
mov
cld
xchg
stos
xor
cmp
aam
or
rcrb
mov
call
rol
lds
out
mov
pushl
fs
pusha
xchg
mov
subl
and
or
sar
ljmp
insl
sub
jae
in
mov
icebp
xrelease
stos
push
call
clc
jno
fcoms
dec
ja
or
push
mov
inc
push
pop
loop
pushl
dec
push
xor
cmc
ret
aaa
xchg
test
jmp
xchg
adc
ret
les
jmp
mov
int
mov
jmp
hlt
jge
ja
pushl
inc
add
lock
jae
cmc
pop
insb
insl
aad
add
movsl
mov
insl
xchg
push
insl
adcl
cmp
jbe
cmp
pop
xor
movsb
add
sub
mov
cltd
sbb
mov
dec
cld
adc
or
mov
shll
xor
out
stc
add
mov
sub
aaa
push
or
inc
dec
push
pop
popa
adc
ljmp
cmp
jbe
pop
in
fmuls
es
cmp
std
daa
xchg
inc
icebp
out
loope
jg
dec
lds
adc
lds
out
fcmovbe
and
jmp
and
xchg
and
and
loope
sbbl
add
jp
sub
mov
test
dec
fwait
inc
adc
es
and
in
cmpsl
imul
cmp
dec
sub
hlt
jno
or
add
fsub
enter
fsubr
xchg
xchg
jg
adc
ljmp
jno
std
inc
sbb
jns
ja
sbb
inc
call
jg
add
mov
clc
test
or
mov
ljmp
sti
cmp
xor
jp
mov
adc
scas
pop
adc
inc
mov
lock
fbld
add
xchg
out
in
out
ljmp
aad
lahf
mov
inc
mov
adc
add
ret
shr
or
mov
je
jns
out
stos
add
jo
testl
mov
push
popf
mov
fucom
lret
pop
fucom
divb
inc
aam
pop
in
sub
shl
mov
pop
std
cld
fisubs
inc
jp
dec
or
jge
or
xor
mov
mov
repz
mov
data16
call
jp
push
add
xchg
xor
mov
pop
addr16
incl
jb
pop
pop
jno
out
cmp
mov
xacquire
movsb
xor
call
pop
sbb
testb
or
or
sbb
shrl
in
adc
call
jp
mov
sub
popa
test
scas
dec
cmp
pop
xor
repz
pop
insl
daa
stc
gs
jmp
pop
movsl
and
int3
inc
inc
add
nop
int3
cmp
shll
mov
test
fbstp
mov
testb
push
mov
ss
cmp
jb
xor
mov
in
xchg
xchg
jno
dec
adc
lock
adc
mov
push
lcall
ret
cmp
push
out
nop
fwait
sbb
mov
bnd
ret
and
mov
loopne
ret
aam
out
cld
das
hlt
and
add
pop
dec
dec
test
lahf
dec
fsts
jmp
mov
push
push
jge
lods
and
mov
mov
nop
push
mov
cmp
or
loopne
and
icebp
icebp
xchg
repz
pushl
push
sbb
sahf
jge
daa
add
sbb
lret
jno
loop
mov
jl
andnps
inc
popf
addb
inc
and
adc
out
mov
jmp
sbb
int3
inc
adc
inc
adc
es
and
adc
sti
mov
decl
jle
nop
push
adc
jl
shll
in
adc
pop
dec
jno
or
mov
inc
sbb
in
nop
push
cmp
jno
xor
ret
pushl
sbb
les
jge
fstl
and
addr16
jmp
xchg
sahf
icebp
enter
mov
imul
add
xor
sar
call
inc
int
and
pop
and
pusha
scas
das
inc
mov
ret
push
aad
call
clc
mov
jne
movsl
mov
mov
lods
xlat
int3
xchg
pop
fwait
sbb
ljmp
or
scas
inc
fwait
roll
lods
jmp
sub
dec
cli
jbe
jne
cmp
shrb
and
mov
out
push
mov
add
mov
adc
std
sub
pop
mov
test
sub
jns
sti
mov
or
ret
pop
or
jmp
cmp
cmc
mov
xor
xor
pushf
jl
push
pop
cmp
or
cmp
cmpsb
cmp
insb
sbb
inc
adc
jecxz
inc
adc
fcoms
cmp
jns
decl
sub
push
lret
sahf
lods
into
push
out
pop
mov
prefetchw
cmp
xchg
mov
push
sti
mov
roll
sti
jmp
xor
and
into
aaa
xchg
jno
leave
or
push
xor
or
or
fstp
out
add
test
adc
fstp
sbb
adc
std
cld
cmp
adc
adc
adc
aaa
pop
stc
sbb
hlt
lods
dec
cld
xchg
stos
mov
inc
mov
lcall
mov
pusha
sbb
cwtl
and
mov
or
sbb
jmp
jne
cvttps2pi
sbb
xchg
dec
push
jb
rorb
lret
addr16
jg
xchg
xchg
cmp
mov
and
sbb
or
jmp
pop
xor
mov
lcall
mov
pop
adc
mov
enter
mov
pop
pop
mov
mov
aaa
mov
push
inc
xchg
sbb
cmp
xchg
adc
xchg
lcall
or
dec
hlt
sub
sbb
adc
sbb
mov
incl
dec
or
shll
xor
incl
pop
pop
imul
jnp,pt
xor
data16
push
push
jbe
or
cli
xchg
add
lock
xchg
add
aam
jo
incl
test
inc
aam
push
les
mov
stos
adc
mov
sub
sub
xor
nop
or
sub
addl
pop
jno
push
ret
ds
or
call
push
test
or
pop
or
fists
or
mov
jno
jns
inc
push
nop
push
push
int3
xor
cmp
arpl
nop
push
mov
xchg
xchg
mov
push
mov
push
cmc
incl
jb
sbb
sbb
cld
dec
or
ss
cli
vmread
movsl
xor
call
mov
into
jp
dec
pushf
setno
xchg
out
mov
test
loope
pop
lret
or
push
adc
jp
sbb
xor
sub
xchg
xor
nop
mov
outsl
std
pop
out
pop
pop
mov
decb
nop
aad
pop
mov
pop
ds
shlb
daa
inc
addr16
or
or
jg
mov
and
pusha
add
nop
dec
or
cmpsl
bound
dec
mov
dec
sbb
repz
out
ret
mov
push
inc
adc
mov
fisttpll
lods
push
pusha
and
nop
les
fistps
mov
lods
or
cld
addr16
inc
adc
mov
pop
js
lods
incl
inc
ds
inc
dec
push
out
out
sub
jns
and
adc
dec
and
loopne
mov
je
jnp
aad
inc
fadds
add
aad
fwait
rcrb
call
lret
xor
stc
push
aam
dec
ja
gs
call
fsubrl
push
or
jle
les
in
js
push
fisttps
scas
lret
cmp
pusha
hlt
mov
cld
sbb
or
insb
inc
stc
sbb
push
fsts
out
out
in
cwtl
mov
or
iret
inc
mov
xor
jnp
mov
mov
outsl
adc
mov
add
ljmp
pop
mov
mov
inc
cmp
or
jns
adc
imul
decl
movsl
cmpsb
jecxz
cld
mov
test
lret
push
push
repnz
pop
dec
mov
daa
ljmp
cmpl
inc
bound
repz
or
scas
mov
sarb
test
or
dec
cmp
jb
jg
mov
xor
out
add
inc
dec
cld
inc
xchg
xor
dec
nop
outsl
add
and
or
jp
nop
std
aaa
cmp
jecxz
fisubl
inc
pop
test
incl
sub
in
outsl
sub
add
dec
pop
lds
call
fidivs
insb
dec
lea
or
imul
outsl
mov
inc
xor
add
lods
mov
or
push
mov
cwtl
inc
mov
jns
nop
sbb
xchg
jmp
jns
mov
rolb
jp
mov
pop
in
or
test
or
dec
arpl
call
jp
pusha
stc
jecxz
fwait
scas
jae
mov
sbb
ljmp
and
lock
or
outsb
push
and
sbb
gs
and
pop
add
mov
stc
adc
cmpsb
cltd
lods
lock
add
icebp
scas
push
iret
ds
lds
sub
lcall
mov
or
pop
xor
jp
xchg
clc
in
adc
idivb
stc
add
and
xchg
cmp
pop
ljmp
cld
pop
loopne
push
leave
cmp
fcmovne
movb
adc
push
fidivl
incl
jbe
add
jb
std
aad
insl
mov
or
pop
loopne
subl
cmp
adc
mov
push
out
jg
ucomiss
ja
xchg
dec
sbb
jne
fidivs
sahf
sbb
cli
mov
and
adc
call
cld
add
sub
xchg
in
aad
mov
into
push
sahf
fwait
and
mov
call
lcall
sbb
add
in
es
cmc
push
outsl
add
std
fadd
std
lcall
mov
jp
xor
sbb
dec
shrl
mov
xchg
pop
inc
popa
xchg
shlb
push
cmc
addb
ret
xor
pop
int3
or
and
sub
adc
mov
xchg
sbb
cmpsl
mov
out
mov
lods
daa
fwait
mov
mov
mov
lock
jg
mov
xchg
ja
mov
fnsave
lock
or
call
scas
out
pop
test
pop
rorb
int
lret
daa
pop
xchg
lcall
inc
nop
and
cltd
mov
add
jecxz
fadds
int3
sub
daa
inc
mov
ret
mov
mov
or
nop
in
std
incl
xchg
ljmp
dec
jmp
add
lret
scas
test
add
in
mov
add
sub
seto
sarb
pop
mov
icebp
ret
mov
mov
cmp
cmp
or
jg
incl
ljmp
bound
cmp
inc
pusha
mov
les
decl
mov
add
mov
ret
inc
adcl
dec
inc
pop
push
mov
cli
mov
sti
inc
jns
dec
nop
fildl
cld
jb
and
mov
add
decb
aad
mov
lea
or
mov
xchg
test
pop
arpl
add
xchg
call
or
add
sbb
ret
xchg
lods
sub
cmc
int3
pop
mov
add
ja
lcall
das
jnp
mov
and
adc
xchg
jnp
and
adc
sub
incl
mov
cmp
call
or
mov
add
hlt
sahf
std
lock
and
test
mov
cmp
jg
jmp
add
pop
dec
xor
imulb
aad
sar
pop
into
sub
push
inc
pop
mov
daa
sarb
subl
movsl
incb
int3
xchg
into
dec
or
dec
test
fldl
outsl
ljmp
cmp
pop
add
repnz
sub
xchg
pop
mov
push
adc
cld
dec
data16
int3
cmp
mov
cmp
pop
aas
fists
aad
int3
call
pop
and
jl
es
and
push
inc
test
push
lock
imul
das
std
pop
sbb
lds
or
push
push
decl
pop
or
daa
jns
insl
subb
push
jno
adc
dec
and
aas
jg
ret
es
insb
int
in
inc
mov
adc
int
ja
and
test
xchg
fbstp
or
sub
and
fisttpl
adc
js
jns
or
dec
subb
mov
pop
and
push
popa
aaa
cltd
inc
pop
stc
fbld
decl
loopne
seto
push
dec
push
pop
lea
dec
ja
decl
dec
leave
pop
adc
les
jns
sub
sbb
cmpsb
push
push
call
jmp
sbb
adc
xor
ljmp
push
sti
mov
lret
bound
jle
sbb
jns
sbb
inc
mov
fisubl
xchg
popa
push
out
cmp
cmp
decl
out
daa
in
mov
xchg
push
xchg
int
clc
sub
lcall
mov
sahf
xor
sub
xor
cmp
jns
or
mov
jecxz
and
adc
mov
adc
ja
sub
dec
sub
mov
fucomip
jmp
int3
xlat
in
inc
jnp
push
nop
push
xor
or
dec
and
imul
repnz
insl
and
adc
jp
inc
pop
clc
pop
cld
pushl
sub
push
or
push
gs
ja
mov
std
pushl
adc
sti
cltd
orb
or
lahf
cwtl
aaa
bound
ss
add
or
outsl
adc
add
jg
push
in
dec
or
and
mov
jp
das
cld
ljmp
jbe
and
sti
xchg
dec
sub
cmpsl
xor
xchg
loop
pop
adcl
xchg
adc
ljmp
jno
mov
fstpl
adc
adc
test
pop
pop
mov
adc
adc
fcmovbe
incl
fdivr
inc
clc
push
repnz
bound
ficoml
fidivrl
arpl
sub
ret
inc
sub
mov
repnz
mov
add
repnz
jg
iret
mov
imul
ljmp
repnz
daa
cwtl
bound
sarl
mov
test
inc
push
sub
je
mov
adc
lcall
or
add
mov
mov
je
mov
jg
inc
and
lock
dec
adc
mov
adc
mov
push
add
push
push
mov
push
mov
xor
lock
mov
add
sbb
pop
mov
push
std
lcall
xchg
push
out
gs
pop
xlat
xchg
xor
inc
loop
stc
jp
mov
test
adc
imul
lds
aas
lret
jns
mov
and
pusha
out
cs
cmc
inc
out
call
lcall
loopne
push
xor
mov
push
jge
mov
jo
pop
hlt
push
adc
ljmp
aad
data16
xor
filds
aam
jg
aaa
adc
push
mov
fwait
adc
mov
jmp
addl
xchg
fstps
mov
dec
icebp
shrl
jmp
ds
xchg
test
inc
popa
sub
ljmp
push
push
jle
stc
add
aaa
and
outsl
inc
or
pusha
data16
fildll
adc
lea
in
pop
inc
pop
xchg
cli
adc
orl
or
stos
in
jo
lock
or
lret
xchg
out
push
ds
in
imul
mov
cli
scas
dec
testb
pop
fbld
ret
andb
or
divl
clc
jmp
and
or
cld
faddl
xor
mov
push
or
in
mov
decl
jp
xchg
and
lock
dec
out
push
sar
in
sbb
add
aad
xchg
mov
jmp
or
ret
lret
or
cmc
push
sbb
fadds
lock
jmp
bound
js
mov
push
mov
jg
jmp
mov
push
std
xor
lahf
mov
rolb
dec
cs
mov
mov
mov
jl
in
jo
mov
fldl
pushl
push
push
loope
loope
push
pop
cld
push
and
sbb
cmp
enter
fsubp
stc
sbb
adc
sbb
lea
pop
rcl
or
cld
add
fdivr
clc
insb
lock
ds
fdivrl
hlt
lcall
mov
pop
push
xor
cmc
call
mov
cmc
push
shl
rolb
in
decl
push
je
mov
jno
enter
inc
adc
mov
jg
xchg
cmp
in
push
xchg
cmp
out
mov
xchg
or
in
fadds
xchg
lds
fsubrp
pop
push
xor
xchg
push
pop
pop
outsb
pusha
push
popl
ret
mov
sub
cmp
notb
test
leave
insb
movsb
mov
cld
loope
xchg
xor
mov
mov
out
or
int3
adc
or
push
shl
dec
mov
stos
sub
adc
mov
xchg
xchg
fadd
call
mov
sub
sub
mov
mov
xchg
mov
push
dec
daa
aas
ljmp
inc
adc
jge
xor
std
xchg
ja
mov
adc
notl
or
mov
jg
repz
sbb
out
and
orps
cmp
scas
inc
pop
test
imul
in
addb
adc
mov
push
mov
pop
lods
sbb
push
mov
mov
lcall
jl
xor
and
mov
ljmp
xchg
insb
loope
daa
mov
ljmp
lock
jnp
lcall
adc
inc
rolb
insb
push
fsts
mov
lcall
jle
inc
adc
lret
icebp
cmp
fstps
push
add
decl
loopne
cwtl
lock
sub
dec
xchg
add
in
movsb
xorb
call
js
inc
daa
push
addb
out
and
sbb
xchg
push
xor
fcmovu
cmc
pop
mov
mov
addb
ss
hlt
pop
and
push
cmp
repnz
mov
dec
mov
sahf
cmpsb
ficomps
jno
jle
aad
pop
stc
or
adc
and
mov
loopne
into
push
jp
ds
in
test
call
arpl
test
ss
jnp
adc
mov
mov
and
or
mov
in
mov
pop
mov
lock
or
push
es
adc
pop
pusha
mov
aas
test
sbb
mov
xchg
inc
xchg
fistpll
arpl
xor
pop
pusha
add
jmp
fistl
cli
jmp
xor
sbb
mov
push
mov
jg
sbb
movsb
pusha
cmpsl
jge
adc
inc
jge
or
or
decl
insb
cld
or
jp
adc
cltd
push
mov
ja
lock
or
leave
mov
adc
ja
jp
mov
call
dec
add
push
and
mov
xor
pop
sub
lea
mov
and
push
mov
jmp
je
stc
js
xchg
xor
inc
mov
lcall
jmp
imul
mov
stos
mov
pop
pop
lds
push
movsl
sub
pop
cld
or
mov
dec
jmp
pusha
pop
pushl
gs
mov
cld
xchg
in
jns
inc
jnp
push
jle
xor
cli
movsl
sbb
js
mov
push
aad
decl
xchg
rol
and
and
adc
xchg
aaa
jp
test
test
cld
inc
mov
jo
andl
lcall
dec
push
push
fs
data16
mov
mov
mov
inc
std
sbb
insl
lret
jne
push
fmull
push
add
cli
or
loop
fldcw
sub
cmp
std
mov
mov
leave
mov
and
cmp
jnp
xchg
jmp
sub
std
mov
pop
and
xor
sbb
cmpsl
js
adc
dec
out
leave
repnz
ja
lretw
and
mov
call
mov
es
movsb
loop
gs
push
lahf
dec
cwtl
mov
pop
mov
dec
lahf
fst
cmc
in
mov
icebp
add
ljmp
sub
inc
cmp
mov
icebp
and
mov
jmp
in
scas
adc
inc
fs
lock
push
mov
xor
frstor
aaa
sub
stc
and
iret
sub
xchg
outsl
adc
push
jb
lea
fnsave
pop
jg
loop
outsl
rorb
or
xchg
add
lcall
cli
and
pop
lods
cmp
ja
repz
push
cs
popa
push
pushf
lret
sub
dec
mov
pop
movsl
in
push
es
sub
rcll
mov
cmp
or
jl
dec
lock
rorl
aas
es
or
sbb
adc
pop
aad
decl
dec
xor
dec
sub
cwtl
pop
pop
jne
add
popf
mov
aaa
sbb
fadds
int3
mov
cmpsb
xlat
nop
decl
mov
bound
jmp
push
dec
adc
add
mov
lds
mov
addl
sbb
insl
sub
popa
mov
xor
fwait
mov
ljmp
and
inc
lds
add
jle
mov
cmp
push
xor
imul
xchg
push
in
loope
or
rcr
das
std
cmc
or
pop
push
or
adc
incl
scas
insb
dec
arpl
inc
dec
std
mov
fsubs
and
xchg
jle
mov
lock
hlt
add
sbb
sub
and
jle
bound
adc
decl
sbb
or
xor
out
lea
dec
rolb
dec
sbb
sub
pop
sub
jp
sub
pop
out
dec
out
and
or
dec
inc
rcll
lods
aaa
pop
sbb
xor
sbbb
movswl
lods
mov
jnp
pop
ds
imul
adc
push
ljmp
inc
inc
sbb
xor
cmc
mov
cmp
dec
out
sub
mov
mov
push
movsl
jle
lcall
bound
push
adc
loopne
push
sub
mov
pop
cmc
push
jp
loop
movsb
adc
xchg
adc
add
and
or
ljmp
pusha
daa
pop
add
xchg
sub
push
push
loop
adcl
aad
jp
dec
bound
push
pop
addr16
and
and
sbb
outsl
icebp
call
push
popa
loopne
add
repnz
addb
loop
mov
insl
pop
push
fidivs
loope
adc
mov
inc
int
outsl
mov
decl
and
nop
enter
inc
cmp
mov
fidivrl
leavew
pop
dec
xchg
xor
leave
sub
pop
clc
jg
sbb
outsb
push
xor
fwait
mov
jg
and
bound
divl
into
and
loope
push
or
push
mov
pop
xor
das
pop
gs
mov
loopne
pop
cmc
push
ljmp
hlt
loope
pop
mov
sbb
idiv
outsl
lods
push
icebp
xlat
std
in
cwtl
add
jb
fnstenv
sar
icebp
mov
imul
adc
ss
lea
mov
ljmp
xor
xchg
jae
fimull
inc
hlt
out
pusha
add
sub
daa
push
sbb
andl
pop
xchg
add
adc
cmc
lret
popf
jne
incl
push
mov
nop
mov
jl
pop
orl
jg
pop
clc
mov
pop
sbbl
pusha
push
add
data16
mov
or
cli
adc
or
pusha
push
aas
in
in
test
cld
mov
lock
push
mov
pop
les
scas
xor
sbb
mov
cmp
inc
test
jg
ljmp
popf
xor
sbb
adc
daa
out
in
cmp
or
ljmp
in
pop
subb
cld
frstor
insb
add
jo
es
aad
xchg
out
or
pop
jmp
pop
aaa
lret
inc
out
sbb
stc
pop
aaa
push
std
xchg
adcw
jne
cmc
xor
pop
int
or
cmp
and
pushl
mov
cmp
xchg
push
mov
repnz
int
adc
std
icebp
xor
pop
in
dec
clc
out
add
add
pop
and
push
stc
mov
std
xchg
mov
dec
push
icebp
shll
jle
push
xor
aad
cmc
and
vmovapd
lcall
lcall
xor
inc
add
jge
add
xchg
les
jns
decl
std
sbb
pop
test
insl
mov
and
fisubl
insb
mov
lods
push
dec
and
ds
mov
xlat
jecxz
or
insl
aam
cmp
jecxz
cmpsb
or
sub
pop
jne
xchg
sbb
push
ret
loopne
pop
aad
dec
sbb
popf
mov
aam
aaa
xchg
ret
loop
adc
push
outsl
mov
adc
pop
cmc
push
add
jge
lret
mov
lahf
mov
push
repnz
mov
and
xchg
adc
fs
mov
sub
add
enter
enter
dec
xlat
push
push
int3
sbb
lcall
ret
repz
sub
or
dec
add
iret
push
pop
or
pop
ljmp
fs
out
sub
and
push
psubd
scas
pop
imul
xchg
dec
adc
dec
xchg
cmp
lcall
dec
inc
cmpsb
outsb
sub
dec
repnz
les
fucom
pop
add
cmp
incl
cld
adc
push
jnp
xchg
inc
popf
cmpsl
jnp
add
call
push
out
mov
ljmp
lock
pusha
ljmp
sub
xchg
jo
addb
and
decb
shl
inc
sbb
fisubrl
test
shrb
push
std
jg
aaa
push
xor
ror
dec
dec
mov
and
xor
mov
adc
test
fmuls
or
mov
mov
pop
das
mov
daa
das
push
inc
imulw
jmp
dec
fisttpl
sub
vpshad
lock
das
dec
sti
loop
mov
or
push
xchg
and
test
dec
inc
daa
xor
inc
adc
call
jp
lahf
pop
test
fs
std
movsl
sarl
pop
sub
lcall
add
ds
sar
xor
mov
pop
aam
jmp
das
mov
and
jno
mov
lret
jb
pop
mov
sbb
mov
or
adc
xchg
push
push
and
lods
leave
ljmp
push
rcrl
lret
and
sub
mov
ret
xchg
popa
pop
mov
push
sbb
mov
jmp
xchg
sbb
test
pop
xchg
mov
popf
pop
dec
xchg
or
lock
or
fistl
clc
pop
call
hlt
cli
imul
hlt
stos
pop
loop
out
mov
mov
fsubrl
push
xor
inc
repnz
hlt
push
jmp
mov
cmp
inc
xor
scas
sub
addb
adc
dec
xor
xor
loope
outsl
mov
aad
sets
or
add
or
fucomip
or
inc
ja
lahf
mov
mov
pop
test
jnp
push
arpl
mov
or
outsl
adc
je
pop
cmp
xor
adc
icebp
and
pushl
jne
lds
jecxz
xor
jo
repz
and
mov
fwait
sbb
popw
cli
stos
inc
mov
lahf
mov
mov
ljmp
in
xor
pop
add
dec
xchg
rol
jns
xchg
call
das
mov
mov
xor
movsl
inc
ljmp
pop
mov
into
fiadds
ljmp
xor
sbb
test
lcall
or
xchg
dec
inc
mov
sar
test
ret
ret
push
mov
jb
les
inc
int3
and
push
sub
pop
int
jne
aas
jns
call
mov
imul
xor
and
adc
pop
push
xor
fidivrl
mov
mov
add
inc
inc
mov
cmp
xor
incl
je
jecxz
lret
mov
mov
push
mov
ljmp
cmpsb
insl
jle
addr16
cltd
mov
sti
jno
rcrl
sub
or
nopl
mov
sbb
gs
xchg
sbb
lock
scas
mov
or
xchg
lock
push
sub
cli
pushl
inc
jp
xchg
shlb
push
lret
pop
sti
inc
xlat
icebp
inc
and
loop
mov
push
mov
addr16
fstps
dec
aad
fwait
lcall
imul
or
mov
pop
imul
or
dec
cltd
sbb
popf
or
sbb
sub
or
jne
clc
fnstsw
int3
sbb
loopne
jp
inc
mov
sub
clc
cs
aas
in
mov
mov
add
call
dec
mov
push
dec
adc
gs
add
adc
aaa
push
mov
add
xchg
inc
push
adc
mov
inc
rclb
jbe
and
lods
jg
xchg
lret
mull
push
fistps
cmc
and
mov
push
out
push
and
loop
dec
fstl
decl
ljmp
push
std
mov
test
pop
fstpt
add
popa
dec
loope
mov
lock
pop
adc
add
shll
jge
fistps
and
mov
jns
mov
jg
insb
or
stc
lcall
jl
mov
mov
ret
leave
or
movsb
dec
mov
mov
int
in
jecxz
add
xchg
call
dec
js
jbe
adcb
aam
pop
clc
mov
mov
sub
outsb
iret
fcoml
std
addr16
sub
std
sbb
lock
adc
repz
pop
inc
sub
mov
leave
cmpsb
adc
cmp
push
in
adc
cmp
cwtl
mov
call
cmpl
xor
jp
fstps
and
imul
pop
jns
lods
fnstsw
sbb
call
in
fisubrs
adc
or
sbbb
incl
in
fcoms
xlat
xor
nop
shlb
iret
inc
lock
pop
jno
jmp
mov
aam
fcomps
inc
adc
mov
sbb
dec
or
adc
call
je
insl
shll
mov
cli
call
xor
iret
inc
and
call
xor
inc
int
pop
loopne
and
push
movsb
mov
mov
cld
adc
pop
loop
fwait
push
push
mov
push
jo
and
pop
xor
pop
mov
push
popf
ljmp
inc
test
adc
push
mov
push
inc
push
or
loopne
call
lcall
sbb
pop
xchg
mov
xor
dec
lea
adc
call
sahf
cltd
insb
pop
sub
and
test
and
nop
sub
fcmovb
es
and
fdivp
dec
mov
jge
lcall
push
jns
sub
outsb
lods
jne
add
push
outsl
std
decl
push
push
pop
add
cmp
popf
pop
in
push
xor
inc
outsb
mov
mov
and
call
incl
mov
std
xor
mov
pop
stc
imul
xchg
push
bound
inc
clc
jb
mov
dec
fdivr
add
cmp
jnp
sub
inc
sbb
pop
sbb
jmp
stos
add
es
lea
xchg
dec
imul
es
xchg
es
or
int
push
aam
iret
cs
cmp
push
mov
ficomps
pop
enter
cmp
sbb
adc
inc
mov
pop
mov
gs
push
sbb
cmp
inc
mov
xor
cmc
adc
das
lock
lcall
xor
push
inc
jl
ja
push
stc
pop
pop
sarl
push
pop
or
fdiv
or
add
pop
sbb
and
pop
call
insl
mov
imul
fnstenv
in
pop
mov
rcrl
bound
sbb
sbb
jg
pop
jae
popa
mov
sbb
add
mov
ficomps
mov
and
adc
cmp
lahf
and
test
cli
decl
cmp
adc
out
faddp
popl
aaa
cli
call
dec
push
pop
xchg
adc
xchg
mov
daa
pop
or
cli
pushl
jns
daa
mov
cmp
fnstsw
add
mov
push
pop
dec
out
bound
mov
pop
pop
or
sub
out
pop
dec
inc
test
mov
pop
pop
pop
xor
jne
adc
test
sbb
repz
call
pushl
or
scas
cmc
xchg
xchg
arpl
dec
xor
mov
lcall
dec
fimuls
outsl
pop
push
idiv
cld
daa
sbb
iret
and
add
ljmp
shl
sbb
pop
je
cmpsl
mov
and
in
push
mov
or
insb
sub
in
or
xlat
or
cltd
lock
incl
jae
lds
or
add
mov
aas
pusha
push
lods
adc
mov
push
jmp
clc
mov
cmp
mov
jne
popf
mov
test
mov
int
dec
xor
lock
push
adc
sbb
ljmp
shrl
pop
lret
scas
es
lcall
cmp
test
pushl
inc
inc
mov
cmp
mov
sub
loop
push
lds
cld
addr16
ljmp
out
xor
and
movsl
or
sub
adc
aad
mov
fldenv
jle
jl
mov
adc
lret
jno
push
or
mov
push
lcall
cmp
jg
or
loopne
das
cmp
dec
in
mov
shrb
or
add
sub
daa
repz
ret
sahf
leave
adc
clc
fbld
pop
mov
lods
or
push
or
loopne
add
sar
decl
sub
pop
stos
addr16
xor
sbb
xchg
rcll
inc
mov
incl
in
xchg
pop
aaa
mov
inc
adc
push
pop
std
inc
frstor
ss
decl
xchg
xchg
fwait
push
mov
sub
fmuls
xchg
mov
flds
add
adc
and
hlt
cmpsb
repz
jmp
xchg
repnz
in
in
sarl
dec
insl
cmpsl
in
jmp
add
mov
orl
es
insb
das
push
xchg
or
test
sub
inc
sub
lea
or
adc
push
inc
or
mov
movsb
pop
xchg
aad
incl
cmp
sub
clc
pushf
inc
cmc
sbb
jb
inc
push
lea
mov
ljmp
aam
repz
dec
mov
and
adc
cld
mov
mov
mov
leave
mov
nop
push
ds
push
cmp
fbld
roll
jnp
mov
jo
dec
fwait
add
lcall
mov
mov
jb
push
adc
outsb
mov
jo
push
jo
incl
in
ljmp
and
inc
inc
push
mov
cld
mov
in
int
xchg
cmp
int
ljmp
cmp
push
sub
dec
mov
mov
inc
inc
sub
and
outsl
dec
or
lcall
inc
shll
adc
sbb
mul
dec
cmpsb
out
sub
cwtl
daa
mov
scas
push
sub
push
jmp
aas
xor
xchg
pop
pop
mov
mov
test
scas
data16
adc
decl
fiaddl
jp
cld
int
int
rcrb
jno
lret
imul
call
mov
pop
repz
fnstsw
jg
pop
loop
pop
inc
xchg
fidivs
push
leave
popf
or
jae
js
pushl
xchg
clc
cwtl
or
lret
pop
addr16
dec
fisttpll
jge
mov
pop
and
mov
adc
push
shrl
cmpsb
sub
and
jg
xor
into
fwait
sarb
or
inc
jo
sub
lcall
pop
inc
ret
pop
dec
gs
mov
adc
adc
mov
outsl
hlt
pushl
mov
or
cmpsb
push
mov
pop
hlt
das
std
ds
push
push
rcll
jae
pop
mov
mov
dec
adc
mov
jl
and
gs
test
sysret
and
jno
mov
or
pop
xor
inc
ljmp
leave
inc
das
mov
sbb
push
push
jmp
idivb
in
decl
mov
mov
sbb
lret
jo
jns
scas
nop
mov
mov
lcall
adc
xchg
and
insb
adc
dec
dec
decl
lock
adc
cld
lock
sub
jne
test
into
ja
hlt
aaa
sub
mov
adc
lods
addr16
mov
ljmp
les
stos
adc
mov
pop
shll
add
adc
xor
jno
inc
fincstp
ja
fdivs
xor
fwait
and
or
imul
or
sub
jmp
dec
push
mov
ja
pop
dec
call
leave
add
sbb
outsb
xchg
loopne
dec
cmp
nop
jmp
lcall
mov
jns
or
adc
or
enter
lock
das
cld
inc
cmp
sbb
mov
mov
gs
ja
fidivrs
inc
and
outsb
roll
shlb
inc
or
and
ds
repz
out
inc
inc
push
out
pop
cltd
mov
jg
mov
sbb
jmp
movsl
jnp
mov
or
ljmp
cmp
cmp
rclb
sub
cmp
mov
in
dec
popa
push
sub
sti
das
lock
jle
dec
test
adc
enter
xchg
and
push
jg
ja
inc
or
add
pop
rcr
push
push
mov
std
lret
lcall
loope
add
add
dec
mov
sbb
xor
mov
cmp
mov
movsl
push
es
push
scas
cmp
push
aaa
mov
lds
cmpsb
dec
push
push
xchg
pop
cmp
mov
adc
fisttps
mov
icebp
sbb
sbb
iret
cmp
fldl
call
adc
sub
insl
mov
or
pop
pop
dec
jbe
pop
decl
lea
xchg
repnz
sbb
xchg
decl
movsl
push
repz
adc
popf
cs
mov
sbb
or
adc
pop
push
dec
pop
loopne
hlt
stos
out
enter
decl
push
jp
popf
in
cmpsb
xor
iret
add
lahf
hlt
pop
add
cmpsb
and
xchg
or
mov
inc
mov
test
and
dec
pop
add
xor
nop
and
push
daa
xchg
mov
inc
decl
sbb
xchg
cmc
sbb
sahf
sbb
lahf
popa
dec
out
sbb
push
fucomip
sbb
pop
xor
mov
decl
lcall
andb
sbb
in
lret
in
inc
push
dec
stc
dec
std
pop
clc
inc
into
adc
dec
xor
movsl
mov
jns
jns
xchg
pop
loopne
stos
jae
outsl
sbb
jne
cmpsl
das
jb
cmp
hlt
incl
out
jecxz
lahf
cmovne
adc
or
ljmp
mov
mov
sub
sbb
and
sbb
pushl
sub
adc
std
jne
xor
adc
out
xchg
push
dec
popa
sub
mov
scas
push
pop
out
push
jmp
sbb
pushf
ljmp
cmp
xor
fadds
aaa
fwait
mov
push
cld
fbstp
add
dec
push
fiadds
jmp
sbb
pop
adc
es
incl
xor
mov
xchg
sbb
or
pop
inc
pop
jl
fnsave
lret
mov
outsl
lock
in
mov
mov
in
adc
test
add
dec
add
cmp
mov
cmp
hlt
pop
jb
fs
loopne
push
or
cli
dec
mov
sbb
and
adc
adc
je
mov
or
movsl
or
push
dec
insl
cld
test
xor
jg
ret
lret
inc
and
outsl
pop
mov
push
in
jp
or
xchg
std
ljmp
sbb
mov
cwtl
sarb
popa
dec
push
or
sbb
test
mov
jo
jnp
jp
and
add
add
insl
add
loopne
movsl
sbb
lea
xor
sbb
addb
fists
push
in
push
sub
jno
jp
mov
std
btrl
stos
call
in
mov
sub
dec
jl
aas
adcl
out
push
mov
int3
jp
inc
mov
and
jb
dec
cmpsl
inc
xlat
iret
lock
insb
int3
out
adc
stos
push
mov
cmp
scas
cmp
xor
mov
int3
out
or
jae
imul
xor
ud0
outsl
scas
or
sbb
mov
cmpsl
mov
orl
aaa
decb
into
xor
clts
mov
jecxz
hlt
and
call
rdmsr
pop
push
adcl
jmp
pop
xor
seto
call
inc
filds
bound
mov
or
call
or
or
and
pop
arpl
pop
mov
sub
subl
cmp
lcall
inc
push
popa
movsl
mov
xor
leave
mov
in
lcall
push
push
lcall
mov
xor
push
jae
fs
jne
test
adcl
mov
icebp
outsl
cld
testb
add
ja
push
std
test
das
add
adc
imul
sbb
mov
inc
pop
inc
in
jns
lock
mov
add
adc
imul
adc
jl
jo
cmpsb
lods
dec
sbb
pop
lods
js
dec
or
fisttpl
jne
pop
mov
scas
add
aas
lea
imul
pop
in
incl
jb
cs
aad
mov
repz
daa
mov
mov
stc
pop
push
incl
inc
or
pop
mov
cmp
jo
aam
cvtdq2ps
decl
push
pop
dec
push
ja
or
mov
add
sbb
mov
and
rsm
rcr
aaa
jp
mov
fs
popa
inc
mov
ljmp
cld
inc
mov
or
inc
popa
jmp
or
cltd
repz
outsb
push
cmp
cld
in
call
aas
and
test
adc
sub
xchg
fwait
pop
loop
dec
test
xor
loop
xor
pop
pusha
cmc
dec
incl
xor
enter
dec
push
lea
pop
mov
das
insb
xchg
test
push
leave
test
and
add
sub
xchg
ljmp
lcall
notb
add
lock
push
pop
mov
je
imul
xor
lods
xchg
cli
call
pop
movsb
cltd
nop
inc
rcr
fdivrs
sbb
push
pushf
pop
adc
dec
cld
lods
push
push
imul
dec
sbb
mov
decl
faddl
dec
xor
xchg
adc
jne
aaa
pop
push
dec
xor
mov
cmc
fnstsw
call
adc
add
out
adcl
sbb
aam
std
lds
pop
pop
nop
in
jae
and
sbb
push
pop
push
inc
xchg
aaa
movsb
or
pushl
add
inc
cmp
jno
jp
and
pushf
jne
xor
decl
mov
mov
pop
add
lea
daa
xor
rorb
dec
imul
mov
aam
xchg
and
mov
cmp
movsl
or
cmc
pop
loopne
loopne
call
or
pop
pop
std
ljmp
pop
cmp
inc
mov
mov
subb
or
shlb
rcrb
mov
andb
adc
test
sbb
inc
xor
mov
ss
pop
lea
adc
cmc
fcmovb
fwait
jmp
fbld
jmp
fsubrl
rcll
mulb
xchg
mov
jmp
mov
xor
and
and
fnstsw
xchg
cmp
jge
sbb
out
lret
dec
adc
mov
xchg
push
xchg
add
mov
xor
mov
xchg
fists
inc
pop
jp
jge
in
mov
adc
or
mov
jecxz
icebp
pop
xor
and
lock
inc
fnstsw
addr16
enter
imul
pop
cmp
mov
mov
cmpsb
dec
mov
pushf
add
cld
aas
sbb
test
ljmp
adc
imul
cli
add
enter
js
incl
ja
loope
mov
sub
xor
ljmp
xor
les
inc
push
int3
pop
dec
aas
pop
aad
inc
push
adc
std
lcall
inc
inc
or
jne
adc
loope
mov
pop
decl
dec
std
es
adc
dec
out
inc
test
sbb
cmp
push
xchg
adc
or
iret
xchg
xchg
cmp
lods
jecxz
xchg
hlt
mov
bound
insb
test
test
or
adcb
dec
lcall
std
popa
outsl
sbb
enter
push
fwait
adc
push
sub
pop
shll
mov
fstpl
popf
orb
add
jo
jae
adc
incl
pusha
push
insl
pop
jb
ss
xchg
mov
mov
add
cmc
push
notl
cmp
or
mov
mov
inc
adc
sbb
adc
mov
sbb
xchg
mov
lods
decl
push
lea
in
xchg
fdivs
jp
in
in
or
insl
mov
incl
iret
fiadds
inc
test
add
inc
sbb
or
inc
aad
out
stc
or
jne
popl
pop
xchg
jo
mov
pushl
clc
jmp
aad
fs
or
imul
dec
jmp
nop
std
bound
pushl
sub
dec
and
mov
adc
pushf
andb
pushf
mov
jnp
aad
mov
lds
jbe
ret
add
push
pop
shll
sub
pusha
stc
jmp
mul
lcall
mov
pop
cld
dec
pop
or
jecxz
ljmp
fsts
fiaddl
fisttpll
frstor
aad
jno
jmp
fldenv
cmp
sbb
push
rorl
orb
sahf
jo
stos
mov
adc
fsubrl
movsl
mov
movsb
test
das
inc
pop
or
incl
nop
lds
in
aad
rcrb
mov
pop
nop
push
xor
inc
jge
and
cmp
sbb
rcl
test
sbb
insb
xchg
pop
movsl
mov
pop
iret
add
and
arpl
inc
add
push
pop
push
iret
pushl
xor
insb
outsb
and
imul
sub
add
mov
pushl
sbb
stos
xor
lret
mov
imul
pusha
and
pop
pop
adc
pop
movsl
shl
mov
ljmp
enter
pop
pop
pop
xlat
inc
icebp
and
ud0
std
fcomip
push
in
pop
fwait
xor
pop
orl
or
movb
jg
ficoms
mov
faddp
out
les
adc
jmp
sti
push
movsl
popl
fcmovne
shlb
cltd
movsb
aam
imul
ljmp
sub
sbb
fwait
push
xchg
pop
fildl
les
mov
adc
int
xor
inc
dec
xchg
decb
adc
mov
push
sbb
lods
inc
mov
fcomps
sub
inc
lcall
mov
daa
lahf
adc
push
lret
sub
pop
xchg
pop
pop
orl
ljmp
or
lods
lds
enter
sub
push
pusha
adc
shll
pop
loop
popa
cmpb
add
ss
dec
jae
push
pop
out
test
call
in
or
movl
and
add
xchg
out
push
incl
mov
pop
sub
ret
dec
sbb
sbb
push
pop
sub
jle
nop
adc
pop
cld
sbb
pop
mov
pop
xchg
jecxz
mov
jp
aad
movsl
pop
jg
inc
pop
gs
xor
repz
xor
lea
int
jle
ret
mov
aad
roll
into
popf
leave
out
je
dec
repz
ficoml
push
pop
lods
pop
mov
aaa
pop
pop
xchg
sbb
jmp
out
dec
mov
mov
daa
mov
call
ljmp
icebp
jg
lods
inc
and
mov
cmpsl
sbb
test
push
lcall
inc
cli
lods
bound
pop
enter
sub
mov
sbb
pushl
and
pop
push
fwait
cwtl
icebp
push
int
stc
sti
pop
dec
mov
or
scas
mov
mov
decl
pop
and
mov
into
push
repnz
jle
pop
inc
jb
jbe
shll
sbb
or
jg
fcoms
mov
loopne
dec
dec
jne
test
cltd
mov
sbb
lcall
rorl
aam
popa
mov
out
xorl
ja
out
and
jnp
sub
int
xor
mov
cmp
fstps
xchg
nop
imul
mov
mov
loopne
mov
ljmp
out
jg
mov
pusha
mov
fimuls
lret
push
mov
daa
pusha
notb
adcb
add
and
mov
xor
xor
xchg
jne
ljmp
push
lock
or
mov
loope
xor
test
imul
outsb
cmp
sbb
hlt
pushl
push
dec
das
and
sub
inc
add
call
sbb
sti
inc
ds
sub
dec
pop
std
sbb
adc
cmpsb
inc
xchg
test
cmp
jg
imul
cmp
lods
push
push
cmp
mov
cld
jns
pop
sub
insl
icebp
dec
cwtl
xchg
mov
mov
sarl
testb
call
xchg
ss
out
jno
adc
sub
ret
jb
push
xchg
cmp
mov
or
add
xchg
idivl
mull
jb
mov
and
in
or
jno
or
icebp
jmp
incb
js
jnp
and
mov
imul
mov
scas
sbb
mov
aam
stc
pop
mov
jb
mov
call
ret
lods
leave
sub
mov
mov
sub
test
pop
rorl
mov
jg
push
and
mov
test
xor
or
xchg
insl
jae
aad
fwait
jns
pop
mov
jmp
icebp
cmp
es
mov
insl
je
adc
sub
pop
cli
ljmp
xchg
dec
lods
mov
pusha
mov
aam
enter
inc
cmpl
xchg
push
pop
xchg
aad
adc
loop
jg
movsl
add
push
mov
add
cmpsb
push
enter
jg
jl
popf
xchg
stos
sub
scas
sahf
jecxz
arpl
or
xchg
stc
push
pop
jg
in
fwait
cmp
fisubrl
pop
push
add
push
ret
sub
jnp,pn
mov
mov
testb
rorb
scas
loop
xchg
sahf
xor
or
mov
mov
xchg
xor
dec
fs
idiv
and
lret
sbb
or
jmp
lahf
popa
nop
sbb
nop
aas
sub
mov
sbb
rcr
xchg
and
xchg
push
cwtl
shrd
gs
jns
add
inc
mov
pop
leave
cmp
mov
mov
jg
mov
adc
mov
out
lret
pop
or
push
or
incl
cmp
icebp
push
out
cli
cmp
pop
roll
xchg
fwait
xor
jg
adc
lock
nop
pop
popa
push
loop
testl
idiv
jmp
dec
mov
jmp
or
cmpsl
sti
push
push
push
cmp
cmpsb
out
insb
mov
adc
or
add
xchg
cmp
dec
repnz
pushl
out
mov
xchg
and
mov
and
sbb
mov
enter
push
jne
adc
incl
mov
data16
cmp
ss
aad
sbb
adc
ret
cmp
or
jg
sti
mov
ficoms
jne
inc
pop
fdivrl
scas
inc
add
or
stos
pop
cmp
cmp
stos
lock
and
outsl
jmp
add
or
pop
push
in
out
outsl
jo
lds
outsb
lahf
call
outsb
or
stos
movsl
lahf
rorl
xchg
lea
and
adc
jmp
cmc
and
sbb
cld
xchg
inc
mov
cwtl
sub
in
lds
out
xor
sti
pushl
cmc
xchg
sbb
test
xor
or
add
call
fst
fs
lds
xchg
lods
or
cmp
mov
lods
cmpsl
mov
pop
inc
subl
or
call
jno
mov
sub
cwtl
push
pop
add
popf
mov
cmc
add
mov
xchg
into
sub
orb
xchg
sub
or
xchg
mov
cltd
xchg
pop
aad
inc
adc
daa
xchg
dec
add
movsl
incl
test
mov
cmp
mov
add
push
decl
stc
or
fstpl
imul
or
xlat
ret
ljmp
pop
ret
or
and
imul
dec
xor
push
or
jo
xchg
cmc
xor
push
fistpll
pop
or
mov
mov
icebp
xor
push
movsb
jge
dec
cld
add
xor
test
test
mov
inc
adc
or
jp
and
cs
movsb
pusha
cmp
xor
fisttpll
and
incb
fs
dec
je
ficoms
mov
call
and
jno
push
insb
nop
adc
jno
and
je
adc
mov
in
aam
jnp
jnp
jo
mov
mov
hlt
xorl
outsl
insl
adc
and
jecxz
mov
xor
sbb
outsl
icebp
inc
rcrb
push
ja
insb
fisubs
imul
fistpll
and
mov
adc
imul
pushf
mov
imul
mov
lods
mov
push
mov
adc
xor
lock
clc
insl
movsl
fidivs
movb
jmp
push
push
push
cmc
imul
cli
outsl
fcmovnu
push
fcomps
scas
fidivs
dec
ljmp
xchg
jmp
adc
cmp
adc
pop
loope
movsl
and
adc
inc
mov
inc
data16
push
pushl
inc
add
sub
sub
inc
or
xor
or
stos
pop
loop
adc
mov
icebp
sub
ljmp
add
nop
icebp
or
adc
push
dec
push
and
mov
sub
adc
ljmp
sbb
mov
fildl
and
cmp
adc
arpl
inc
sub
das
mov
adc
ret
pusha
push
cwtl
pop
pop
lds
sti
or
inc
xor
nop
mov
je
mov
sub
cwtl
mov
add
shrb
xor
movsb
sbb
mov
mov
and
call
jl,pt
push
or
adc
jmp
mov
or
sub
idiv
jecxz
jnp
pop
clc
repnz
xor
inc
nop
sahf
jae
inc
mov
jl
jmp
adc
sbb
and
outsl
clc
or
js
pop
cwtl
ret
adc
fs
rclb
mov
mov
inc
lret
mov
or
addr16
jns
ja
push
fisttps
xchg
hlt
or
adc
hlt
ret
imul
cmp
jl
inc
xchg
imul
lods
inc
xor
mov
icebp
push
popf
or
or
pop
push
enter
inc
cmc
fincstp
rclb
je
pop
clc
fildll
mov
arpl
or
lret
movsb
lcall
mov
mov
inc
push
and
cmpl
ja
sti
movsb
jne
xor
aam
cs
mov
aas
aaa
das
daa
pop
pop
add
inc
cmp
sti
decl
cmp
sub
sbb
or
xor
and
adc
inc
cmp
sub
sbb
cltd
in
inc
cmp
or
pop
or
or
push
sbb
sbb
and
clc
int
and
adc
adc
sbb
push
sbb
and
test
pop
jle
lcall
push
push
sub
cmp
sub
xor
daa
inc
mov
decl
cs
and
ljmp
es
cmp
cmp
dec
decl
push
push
push
decl
jns
lock
pop
sbb
pop
inc
repnz
adcb
and
pushl
je
and
and
push
sbb
cmp
imul
jns
jns
push
adc
in
decl
push
js
and
jae
jns
add
je
insb
mov
data16
dec
jg
incl
fs
pop
dec
outsb
imulb
insb
pop
inc
fildll
add
jnp
xor
sarb
push
cmp
add
ret
mov
cmp
movsb
cmp
clc
mov
xor
fwait
mov
lret
in
incl
pop
adc
mov
cmp
push
push
jno
jmp
outsl
test
jp
loope
mov
lds
jmp
pop
fisttps
insl
gs
push
aaa
mov
inc
push
and
stc
sub
add
in
aad
stos
aaa
mov
jns
popf
sbb
pop
add
out
dec
cmp
mov
aaa
ret
push
dec
mov
sbbb
leave
mov
or
loope
jae
leave
mov
jae
insl
gs
dec
cmp
insb
std
stc
out
out
adc
int
xchg
mov
cltd
lea
cmp
aas
sub
jno
aad
pop
push
fsubl
fsubrs
jp
pop
pop
es
jg
jle
fadds
lds
jns
and
pushl
inc
xor
ljmp
loope
lock
jg
mov
fs
ret
mov
or
aam
adc
ja
pop
adc
fcmovnu
ja
jae
jo
stos
cmp
xor
ret
add
jno
adc
mov
jo
das
lcall
pop
adc
call
pop
idivl
sbb
adc
xor
mov
dec
outsb
sbbw
movsl
fisttps
jmp
fistps
xchg
push
data16
and
pop
loopne
call
and
jb
push
adc
icebp
rclb
cmp
ja
xor
push
pop
loopne
adc
lock
add
shll
idiv
je
and
ss
fwait
lcall
pop
rolb
fcmovnu
ljmp
jo
jb
outsb
fnsave
push
adc
mov
js
imul
movsb
xor
push
add
call
mov
cwtl
adc
js
imul
shrl
popf
lret
dec
mov
incl
pop
aaa
faddl
js
cmc
cli
sbb
pop
ja
test
aaa
xor
cld
mov
xor
js
push
jbe
gs
je
imul
incb
cwtl
cmpsb
data16
shlb
jno
pushf
clc
inc
aaa
cli
pushl
and
sbb
fnsave
in
push
sti
pushl
sbb
adc
dec
jae
divb
pop
or
call
pushl
clc
push
addr16
or
xor
cmpl
push
ss
incl
jne
data16
jae
jae
js
out
jb
ja
fisttpl
jns
or
and
add
loop
push
mov
add
cwtl
loopne
in
jl
jge
outsb
adc
fists
push
mov
dec
in
adc
outsb
jno
jmp
and
push
addr16
imul
ja
mov
in
xchg
or
repz
ljmp
pop
pop
clc
jg
outsb
jne
test
outsb
mov
test
add
lcall
mov
pop
mov
adc
fbstp
bound
imul
dec
sub
push
pop
ljmp
xor
ret
mov
jp
into
xchg
adc
cmc
cmc
jo
cmp
js
rcll
pushl
in
jo
sbb
or
mov
and
popa
and
and
jae
push
lcall
test
sbb
cwtl
aam
addr16
push
dec
aas
cmp
xchg
cmc
imul
or
sbb
sub
and
pusha
popf
outsb
push
outsl
out
add
xor
mov
out
call
lcall
data16
fldcw
push
sub
and
or
jb
push
adc
mov
xor
mov
out
jno
sub
and
or
jo
sti
fldcw
cmp
sub
pop
fsubr
cmp
ds
gs
loopne
das
icebp
xchg
clc
jl
jae
jns
add
flds
lcall
and
mov
and
dec
push
mov
jns
stos
gs
mov
push
xchg
cmp
cmp
dec
jno
icebp
jno
mov
dec
std
adc
push
dec
leave
dec
push
and
inc
dec
outsb
and
push
push
adc
hlt
push
je
decb
push
and
icebp
cmp
adc
jmp
mov
in
ljmp
sbb
mov
pusha
pushl
push
jae
adc
in
bound
pop
outsl
dec
mov
enter
arpl
decb
mov
jns
adc
jae
insl
fisubs
popf
adc
ljmp
aam
and
mov
sub
enter
sahf
push
push
pusha
je
adc
ret
inc
mov
inc
push
jp
js
ljmp
popf
pop
popf
inc
in
test
sbb
data16
inc
cmp
sti
sub
cld
jno
repnz
or
jae
data16
xchg
lret
push
or
mov
daa
xchg
mov
or
dec
andb
adc
push
sub
loop
cs
lods
jno
xorb
imul
sub
sub
fimuls
xchg
cs
lea
dec
jb
movsb
cmovno
ljmp
mov
or
sub
xchg
lcall
xchg
cli
or
cmp
ljmp
sub
add
ljmp
add
push
xchg
add
test
pop
clc
xor
mov
cld
mov
push
sbb
or
sub
add
in
outsl
insb
divl
xor
and
cmp
outsl
decl
mov
jnp
das
sub
pop
xor
xor
test
sub
sbb
adc
cmp
pushf
dec
xor
adc
popa
xor
jnp
inc
xor
jg
test
pop
sbb
subps
in
in
inc
insb
inc
adc
daa
push
mov
ss
dec
je
mov
fdivrl
jg
loop
cld
or
inc
cmp
mov
js
repnz
pop
xor
adc
push
add
jge
loop
pushl
call
jne
cmp
xor
xor
sub
call
inc
sbb
pop
inc
add
cmc
add
mov
jg
bound
mov
add
add
loopne
lahf
mov
lea
cli
decl
outsb
dec
cmp
push
loopne
rolb
adc
std
incl
loop
pushf
aaa
lods
cwtl
push
cmp
sbb
call
pushl
add
jbe
ljmp
loop
mov
inc
sar
fildll
andb
pop
loopne
xor
pop
pusha
daa
fsubrl
shrb
les
add
addb
push
jo
jb
mov
incl
outsl
push
stos
and
add
bound
pushf
cltd
jne
add
pushl
mov
pusha
out
nop
jb
subb
daa
insl
add
jp
lcall
outsb
bound
mov
sti
mov
cmp
mov
pop
clc
mov
mov
jo
pusha
push
add
mov
jmp
arpl
push
dec
mov
xor
clc
stos
test
js
insb
mov
das
inc
xor
test
mov
hlt
decl
fists
mov
dec
mov
popf
xchg
xchg
add
outsl
call
add
adc
jecxz
or
adc
xchg
clc
call
pop
lock
pushf
addb
mov
ret
jno
outsl
push
arpl
adc
loopne
repnz
pop
in
jo
and
push
outsl
std
lcall
mov
sti
jnp
addb
lods
or
je
jecxz
out
inc
or
jle
mov
aaa
sub
les
mov
mov
jge
sahf
xchg
push
dec
jl
xchg
push
jge
pop
push
pop
push
aas
sarb
ds
pop
enter
pop
loopne
dec
loop
sbb
aas
mov
subb
sbb
pop
mov
push
dec
js
lret
je
incl
rorb
add
hlt
fadd
add
stos
jb
cmp
in
into
mov
cmpsb
and
cmp
lcall
xchg
xchg
lods
add
xor
sbb
outsb
inc
decl
lret
mov
xor
sub
adc
push
rcrb
fld
in
decl
pop
cld
loopne
repnz
adc
dec
mov
call
roll
div
fisubrs
idivb
add
add
or
lcall
stc
out
icebp
repz
incb
divb
test
mov
cli
or
push
mov
or
inc
mov
call
out
repz
cli
sbb
cld
fndisi(8087
add
out
pop
or
repnz
jb
stc
jne
nop
jg
cli
or
add
inc
add
add
mov
inc
aam
jmp
lcall
pop
aaa
jmp
loopne
mov
add
jecxz
mov
cld
pop
andb
pop
lods
fisubrs
or
das
xor
dec
sub
mov
clc
mov
and
sub
adc
add
repz
or
cs
je
es
cs
or
push
jmp
jb
or
push
dec
sbb
cmc
faddl
pushf
mov
adc
fidivl
or
sub
xor
mov
incl
ljmp
sbb
push
imul
xor
xor
add
mov
pushf
sbb
call
xor
dec
pushf
mov
add
sub
je
je
jne
mov
ljmp
jmp
pop
push
inc
imul
add
add
jno
push
outsl
inc
mov
lods
mov
jb,pt
mul
mov
xor
pop
mov
adc
ljmp
mov
lahf
or
adc
adc
or
enter
roll
mov
xor
hlt
fimull
jle
insl
or
xor
push
roll
lahf
cmpsb
cmp
jecxz
pop
or
jecxz
sbb
xchg
and
dec
jne
pop
dec
xor
adc
sbbl
loopne
cmpsb
adc
pop
add
jmp
cs
call
jb
sub
ret
repnz
inc
xor
outsb
mov
add
adc
insb
rdtsc
out
jecxz
lods
pushf
or
inc
add
mov
mov
ljmp
daa
mov
jns
sar
jns
es
add
jb
insb
pop
inc
imul
or
inc
xor
sbb
repz
mov
jge
jle
pop
mov
outsl
std
push
pop
jno
xchg
mov
in
push
sub
cli
outsl
cld
dec
cmp
push
jo
je
dec
pop
dec
sbb
insb
leave
adc
loop
call
sub
sbb
in
sub
ljmp
lock
adc
sbb
push
sbb
and
insb
jge
enter
ret
rorl
push
cmp
xchg
adc
mov
call
mov
xor
mov
std
add
push
call
pusha
sbb
leave
and
xor
mov
or
inc
sbb
sbb
shll
ret
inc
inc
dec
lret
cli
lods
outsl
inc
push
xor
xor
mov
xor
pusha
pop
lcall
mov
pusha
inc
pop
cmc
xor
inc
jle
mov
sub
jne
sbb
pop
push
pop
sbb
lea
fs
decl
pushl
mov
mov
sbb
aas
cmp
sub
jnp
inc
ret
cmp
dec
cld
lcall
fdivl
sub
cmc
repnz
popa
mov
xchg
cmp
clc
shl
sarl
pushl
or
ss
mov
xor
and
cmp
dec
pop
fcom
or
nopl
pusha
jmp
dec
lods
xchg
dec
cs
ret
pop
push
pusha
cld
loopne
dec
jnp
rclb
mov
idiv
sbb
sub
sub
test
cmp
sbb
sub
push
add
pushf
test
idiv
xor
inc
inc
gs
dec
pusha
inc
jb
pop
ret
add
xor
fnstsw
ds
jne
inc
push
push
adc
ss
aas
adc
in
push
mov
mov
aad
addl
xchg
jb
dec
fcos
ljmp
cmp
sub
adc
das
dec
xchg
mov
or
pusha
pop
lods
pushl
mov
test
das
bound
mov
addr16
inc
decl
sub
gs
lods
or
sbb
add
adc
je
sarb
incl
lcall
insl
pop
jp
out
bts
dec
push
nop
cmp
lcall
inc
sbb
insb
dec
dec
es
into
add
push
and
sti
inc
jmp
pop
xor
and
dec
cmp
leave
mov
dec
xor
pop
jg
hlt
outsl
les
pop
popa
sbb
cmpsl
cmp
pusha
xor
mov
xor
pop
ja
call
push
mov
std
inc
sbb
jle
sbb
rcl
fcomp
loop
mov
or
push
sub
cs
aas
or
and
and
loop
loope
out
push
add
and
sub
ret
cmp
lods
lock
jg
incl
fcmovb
std
loopne
out
pop
cmpsb
adc
in
jae
push
adc
andl
lock
push
lds
call
cld
mov
out
cld
test
xchg
sbb
push
and
lcall
xor
mov
das
or
les
inc
xchg
fwait
and
and
test
cmp
fnstsw
outsl
std
lahf
sbb
pusha
push
push
xor
dec
mov
sbb
mov
jae
lcall
adc
xor
outsl
shrb
adc
aad
cli
push
out
mov
add
jmp
ja
mov
aas
inc
aad
pushl
pop
ss
push
dec
dec
pop
cmp
mov
dec
inc
sbb
dec
or
shr
nop
nop
popf
dec
ret
pushl
or
cmp
rorl
shr
jmp
xor
push
loopne
mov
aam
inc
xlat
ret
rcr
ljmp
ja
je
cmp
lcall
lock
ret
lock
test
std
push
xorl
fs
sbb
add
jmp
xchg
xor
pop
inc
pop
push
xor
inc
xchg
inc
and
and
das
dec
mov
incl
sub
mov
inc
xlat
popf
inc
leave
xor
fistl
sub
add
in
xor
jg
mov
cmp
mov
mov
je
ljmp
and
in
mov
lret
ljmp
pushl
std
cmp
std
roll
mov
inc
push
sbb
push
loop
decl
xchg
sbb
xchg
fmull
or
or
push
adc
cld
sbb
and
adc
and
and
push
mov
bound
sbb
cmp
mov
addl
sarl
and
test
std
bound
ljmp
data16
dec
lock
mov
cmp
sbb
or
xchg
lcall
inc
push
or
push
mov
stc
xor
jo
mov
jns
sub
xor
sbb
mov
dec
jg
cli
xchg
out
sub
hlt
add
test
nop
lahf
fwait
gs
sbb
loopne
jmp
xor
jnp
mov
dec
push
jg
pop
dec
xor
je
loopne
icebp
pop
pop
jo
dec
pop
jp
jo
jbe
lcall
xor
push
lret
test
add
bound
mov
xlat
loopne
xchg
idiv
sti
fucom
mov
adc
ja
pop
jne
sub
decl
dec
or
sbb
sub
ja
dec
sbb
jmp
loopne
pop
clc
push
stos
adc
push
and
jmp
ror
sarl
outsb
jg
sar
jl
xor
popf
cmp
ss
jg
adc
ljmp
and
mov
xor
xchg
dec
dec
sbb
jo
sbb
mov
sar
jmp
jnp
push
or
xor
push
sbb
mov
mov
mov
jmp
xor
pop
jne,pn
aaa
xchg
inc
or
add
push
dec
dec
and
lock
int3
dec
sub
push
scas
call
pusha
and
aaa
dec
inc
inc
mov
lcall
ljmp
mov
cmpsl
mov
leave
mov
mov
xchg
test
aad
sub
mov
inc
jnp
pushf
add
call
xchg
into
xchg
xchg
rcr
ffree
xchg
xchg
fucomp
jl
mov
cmp
or
mov
pop
inc
cmp
sahf
xor
dec
call
cmp
test
imul
sbb
in
faddl
cld
incl
insl
stos
jae
andl
jl
jns
sti
jg
cwtl
addr16
ficoml
sti
inc
xor
cmp
mov
aad
sbb
decl
cmpb
xchg
ret
jb
fidivrl
sub
sbbl
pop
jo
ret
pop
ret
std
xchg
loop
xor
sbb
aas
nop
inc
les
frstor
inc
jg
mov
ret
pushf
xchg
jnp
xchg
out
loopne
fnstsw
jg
sbb
inc
pusha
das
or
inc
insb
subb
mov
test
lcall
lret
pop
and
ljmp
or
orl
gs
loopne
icebp
repnz
in
cli
div
jg
add
std
inc
in
jl
xchg
sarb
push
loope
sub
xor
gs
inc
sub
xor
cmp
dec
push
xor
outsb
mov
cld
loop
push
sub
adc
imul
lcall
sbb
mov
ret
mov
pushl
add
dec
mov
popf
xor
push
je
cwtl
out
nop
inc
xchg
xchg
insl
jg
jg
adc
and
int3
xor
test
jl
lret
mov
fldt
xor
mov
jp
mov
jae
jp
roll
jp
mov
add
mov
mov
sbb
and
cwtl
mov
lcall
test
int3
test
inc
inc
xchg
rol
enter
std
pop
ret
inc
inc
push
jg
incl
fs
sbb
in
push
pop
pop
cli
incl
jle
pop
movl
std
cs
addb
xchg
jmp
ljmp
adc
mulb
nop
cmpsb
jg
lcall
mov
aad
jge
pop
dec
sub
xchg
mov
cmp
cmp
push
sbb
jmp
inc
dec
fstpl
jno
jns
std
mov
dec
or
lock
add
out
fwait
repz
jl
addr16
or
or
call
push
push
xchg
jbe
test
sarl
ret
or
int3
dec
xor
aas
mov
outsb
xchg
adc
decl
inc
int3
stos
les
jb
pop
pop
fwait
jno
add
fidivrl
decl
out
jg
fwait
xorb
xchg
loope
jecxz
andb
pusha
int3
ss
fistl
in
xor
push
mov
lcall
das
xor
cmp
mov
lret
pop
cs
out
dec
cld
call
faddl
jns
xchg
loopne
out
in
shl
arpl
rclb
stc
cli
add
in
out
or
and
outsl
push
decl
ljmp
push
push
push
cmp
cmp
ror
sbb
sbb
rol
xor
jmp
lock
xchg
jmp
enter
bound
and
ficoml
or
xor
out
notl
jne
cltd
nop
sub
xchg
sbb
push
mov
shll
clc
test
or
jnp
scas
aad
es
jge
mov
pop
ljmp
inc
scas
mov
pop
and
dec
mov
repz
std
es
sub
push
jg
jg
mov
ret
test
sub
rdmsr
pusha
mov
jmp
lret
jmp
and
inc
jg
out
in
add
xor
cs
mov
inc
xor
jecxz
aam
pushl
sbb
dec
sbb
aad
jp
jns
sbb
fstpl
in
jecxz
loop
incl
xchg
popa
stos
xor
ret
sbb
call
nop
xchg
xlat
mov
mov
sub
or
leave
sar
jg
jnp
mov
sbb
jb
adc
fisttps
xchg
adc
and
rcrl
imul
mov
leave
mov
pop
ret
bound
push
sbb
ret
mov
pop
jp
movsl
icebp
cmp
mov
xchg
mov
decl
es
jp
fwait
xchg
lock
arpl
gs
pop
jecxz
insb
ds
jno
inc
xchg
cmc
fdivl
cmc
test
jg
leave
push
mov
pushl
pop
xor
xor
sbb
mov
adc
scas
pusha
les
test
outsl
hlt
sbb
lret
cmp
ret
idiv
mov
jmp
adc
dec
cmpsb
scas
sbb
xchg
jnp
popf
and
scas
dec
out
and
xchg
pushf
lods
ljmp
sbb
xor
pop
sub
sub
sbb
int
sbb
shlb
xchg
ljmp
and
dec
or
insl
cmpsb
jns
pop
bound
pop
mov
xor
lcall
xorl
xchg
into
movsb
cmp
jno
push
stos
data16
pop
cmpsb
sbb
ret
dec
cmpsb
or
push
aad
popa
cli
movsl
decl
or
add
les
inc
outsb
jnp
or
outsl
adc
mov
outsb
es
dec
adc
movb
cwtl
fwait
mov
repnz
cmpsb
pop
inc
xorb
das
mov
movsl
lods
leave
dec
cmp
pop
pop
dec
inc
cmp
jmp
and
inc
out
mov
cli
adc
movsb
out
sti
mov
call
out
add
xlat
out
mov
pop
sub
jmp
out
and
xchg
or
call
lret
lea
pop
xor
push
jmp
cli
fbld
pop
cmp
cmp
sbb
jg
jns
adc
mov
mov
adc
or
ret
xchg
dec
outsl
testb
stc
imul
xor
dec
inc
xor
ljmp
and
inc
in
xchg
cmc
push
sbb
cmp
icebp
xchg
lahf
sbb
fiaddl
icebp
mov
xor
movsb
fldt
ja
int
pop
pop
repz
mov
test
sbb
outsb
and
mov
je
pusha
fwait
pop
das
movsb
lods
pusha
lods
cmp
mov
push
push
mov
fnstsw
jno
or
xlat
mov
inc
pop
iret
sbb
sub
mov
loope
loope
mov
fildl
add
pop
sbb
xchg
nop
shll
xchg
cmp
lods
mov
call
in
jnp
test
sbb
inc
pop
pop
inc
int
jg
dec
pop
sti
std
outsl
cld
push
mov
cmp
dec
and
loopne
decl
sbb
sbb
mov
and
fbstp
xor
pop
mov
pop
fbstp
and
outsb
jb
ret
cmp
loope
pushf
mov
test
pop
adc
pop
adcb
xchg
movaps
pop
jb
xchg
sub
test
or
leave
fwait
jns
scas
jb
sub
aam
xor
push
repnz
rolb
inc
mov
out
jg
lcall
lcall
push
xchg
ljmp
test
and
cmp
call
outsl
icebp
mov
repnz
arpl
fs
xchg
add
xlat
ja
stos
aad
mov
cld
decl
aas
pop
dec
rcrl
and
push
aas
aas
cmp
imul
call
adc
or
addl
test
pushl
push
clc
jb
test
addl
scas
mov
or
jb
ret
call
jecxz
leave
dec
dec
jmp
push
push
xchg
jmp
mov
and
xor
sub
fs
xor
pop
sbb
je
pop
fnstsw
jno
pop
pop
fs
test
pushl
add
scas
or
test
aam
fisttpll
sbb
arpl
je
pushf
sub
sbb
mov
push
dec
lret
jno
xor
fs
movsl
decb
mov
mov
dec
push
int3
imul
lret
clc
incl
ljmp
push
sbb
mov
out
fs
cld
fucomip
pop
loopne
mov
bound
imul
jns
push
lcall
call
pop
and
cmp
insl
cmp
xchg
fdivrs
push
sub
out
lods
lcall
push
sbb
adc
pop
imul
pop
int
dec
inc
jecxz
xor
das
popf
cmp
push
cmpsl
stc
enter
dec
jl
sbb
xor
jmp
lods
outsb
pop
xor
insb
ficoml
add
inc
loop
jae
bound
test
je
push
or
jae
ja
popa
xor
inc
xor
test
aaa
mov
jno
fildll
je
jae
mov
xor
cmpsl
mov
mov
loopne
add
jle
jns
decb
in
pop
out
cli
xchg
jo
lock
mov
and
add
xor
jecxz
cld
call
loope
cltd
lea
pop
jo
sbb
push
mov
cmp
push
dec
dec
mov
lcall
shrl
push
gs
lret
cmp
add
iret
adc
lcall
add
ret
fistps
es
aam
jo
sar
call
pop
out
mov
ret
jb
xchg
jmp
cmp
mov
sub
arpl
lods
fwait
sbb
fistpll
dec
dec
outsb
mov
sub
xchg
push
push
cmpb
xor
call
dec
and
movsb
xor
sub
lods
jno
xor
loopne
sti
xor
add
adc
cmp
xor
test
xchg
cs
leave
mov
sahf
or
xor
testb
jmp
add
push
xlat
cltd
and
dec
mov
cli
add
pop
in
les
jmp
lock
rcr
push
mov
aad
in
pop
cld
fisttps
sbb
mov
imul
jmp
in
push
int3
nop
adc
daa
sbb
loope
lret
jge
inc
pushf
xor
lock
daa
cmp
inc
rcrl
incl
mov
xor
mov
stos
aam
das
enter
js
jmp
dec
sub
fwait
inc
sbb
xchg
jae
lds
mov
xor
lods
mov
xor
pusha
das
inc
xor
idiv
aaa
or
sbb
pop
and
pop
mov
xor
inc
sbb
push
inc
push
mov
mov
xchg
add
mov
adc
or
jmp
sbb
lock
ss
aaa
dec
dec
sbb
inc
sbb
in
inc
iret
sub
sar
fidivl
pop
xor
das
cmc
decl
dec
adc
or
test
sub
xchg
loop
push
daa
mov
sub
incl
mov
xchg
int
ret
push
into
push
pop
roll
adc
and
sub
insb
pushf
es
loopne
jmp
jecxz
push
mov
add
dec
xor
mov
push
dec
and
jmp
pop
repnz
fwait
es
mov
dec
mov
pusha
jno
mov
mov
dec
loopne
sbb
sbb
mov
and
decl
stos
xchg
insl
sbb
adc
xor
jnp
sub
retw
push
enter
inc
fistps
xor
dec
adc
jg
fcom
shlb
call
push
push
pop
aas
dec
push
xor
incb
decl
push
addr16
mov
in
mov
mov
jne
push
in
incl
and
ss
inc
cwtl
sub
ret
push
xchg
and
sub
adc
test
jb
fnsave
mov
aaa
clc
push
sbb
cmp
les
fs
or
hlt
jl
arpl
in
xchg
cmp
adc
roll
and
pop
mov
push
shrl
in
movsl
mov
mov
cltd
mov
imul
ret
out
andl
faddl
sbb
jg
std
ljmp
cmpsl
xor
xor
orl
rol
inc
sahf
imul
aam
call
push
and
cmp
lods
test
jb
rclb
aad
mov
jge
xchg
push
das
and
sbb
sub
jge
cmp
shl
sbb
and
xchg
pop
adc
xor
fisttpl
inc
jg
in
pop
dec
xor
add
sti
or
mov
jl
or
out
pop
inc
lods
jle
adc
sub
pop
xor
pop
jno
cmp
incl
out
push
pop
jae
or
mov
mov
mov
mov
es
inc
sbb
dec
ret
dec
lock
ljmp
arpl
and
enter
mov
iret
cmp
adc
dec
sbb
cli
mov
jo
mov
push
add
fisubl
ss
sub
into
dec
inc
ljmp
bound
sbb
add
data16
inc
ds
pop
sti
push
je
or
add
and
xor
inc
das
and
aad
or
xor
pusha
rclb
gs
xchg
cli
decl
dec
xor
sbb
pop
jnp
add
mov
xor
insl
mov
jmp
clc
ljmp
mov
dec
xchg
scas
jae
aaa
movsl
mov
cmpsb
out
or
dec
incl
jg
mov
mov
ret
xlat
popf
testb
sbb
les
out
mov
dec
cmpsb
sbb
push
enter
sub
xor
ret
fwait
xor
jge
jge
pop
inc
dec
loopne
incl
frstor
fcomps
mov
dec
out
pop
lret
das
cmc
pop
ss
push
xchg
ret
clc
and
sbb
lcall
hlt
jbe
add
and
dec
and
sbb
fstl
cli
ljmp
mov
xchg
dec
pop
loope
pushf
cmp
sbb
push
lahf
out
mov
clc
outsl
fildll
sbb
stos
stos
inc
adc
lret
cmp
cmp
mov
in
pushl
jg
cmp
mov
cs
sbb
mov
mov
xor
test
aad
push
jns
cwtl
in
call
cli
or
inc
xchg
dec
ss
incl
add
mov
mov
aad
addr16
imul
push
ja
ret
dec
sbb
push
call
dec
cmp
repz
sub
rcll
xchg
inc
fwait
push
mov
ljmp
dec
cmp
and
in
sub
and
sub
jbe
jns
add
and
stos
out
mov
ja
push
icebp
or
ljmp
xor
add
movsb
sbbb
add
lock
pop
and
mov
adc
mov
aaa
fisubrl
mov
mov
xchg
jne
ret
xor
pushl
jle
lret
shrb
icebp
dec
sbb
sbb
imul
jmp
loop
push
sti
xor
push
aaa
jg
insl
jae
dec
pop
jo
push
jg
aaa
inc
push
and
sbb
inc
push
cmp
das
rclb
or
ret
popf
aam
stos
dec
xchg
pop
loopne
cld
mov
adc
in
std
jg
lock
pop
xchg
inc
outsb
push
push
in
xchg
imul
fbld
push
insb
xor
ljmp
lret
xor
mov
inc
pop
xor
xor
loope
js
push
jmp
inc
test
sub
jp
mov
jmp
pop
xor
jmp
mov
pop
lret
out
aad
cli
mov
sbb
mov
add
mov
mov
in
loop
adc
popa
dec
pop
sbb
fmull
in
rorb
add
pop
gs
in
mov
decl
or
cli
cmp
rorl
jp
pop
jae
fbstp
ret
push
jl
int
xlat
and
mov
or
mov
fdivrs
fcomps
adc
pop
orl
das
adc
insb
pusha
lahf
xor
push
into
dec
shrl
push
jno
sub
in
in
mov
mov
inc
mov
rcrl
call
mov
adc
lcall
push
test
mov
pushl
enter
leave
dec
mov
sbb
or
mov
addr16
sub
popa
sbb
or
jg
lea
xor
pop
or
mov
enter
sbb
xchg
sub
mov
jmp
movsl
jge
cmc
cmp
imull
or
jp
or
ljmp
dec
mov
daa
xor
mov
daa
adc
sbbl
inc
in
dec
xchg
lods
sbb
cmpsl
add
sbb
inc
xor
jnp
mov
and
int
xor
jne
out
sbb
sbb
xchg
std
lods
fdivrp
mov
inc
dec
orl
pop
notl
sbb
fisttpl
sub
scas
jle
mov
mov
cld
dec
sbb
add
in
lock
adcl
in
xor
sti
pop
call
add
movsl
aad
mov
pop
sbb
fcomip
pop
in
aad
jnp
push
and
sbb
bound
push
lret
addr16
jl
and
or
jl
jl
jns
jg
jae
sarl
pop
ljmp
dec
adc
pop
jl
pop
cmp
dec
daa
cmp
adc
xchg
cmp
sbb
inc
sahf
pop
stos
mov
dec
xchg
sbb
int3
push
in
jg
outsl
cld
jb
mov
aas
das
inc
sbb
mov
jmp
mov
jg
jae
adc
push
jbe
and
ret
lcall
push
mov
fwait
in
mov
aaa
fs
in
mov
mov
orl
addr16
push
pop
adc
fucom
out
xor
negb
sub
sbb
mov
mov
adc
ljmp
std
gs
mov
cmp
ss
out
hlt
jmp
push
xchg
jae
adc
incl
ss
pop
and
arpl
push
push
sub
sti
pop
jg
inc
loop
jg
or
int
and
cmc
repnz
xchg
lcall
std
jmp
adc
fldz
mov
xor
pop
inc
jb
je
sbb
push
adc
std
pushl
dec
xchg
scas
mov
dec
xor
pop
clc
mov
cmpsl
dec
push
mov
push
cmpsb
sbb
push
mov
clc
stc
mov
dec
icebp
cli
sbb
cmp
xchg
push
and
add
pop
or
push
gs
imul
test
lcall
ljmp
inc
or
mov
or
dec
lock
dec
cld
adcl
or
lock
push
jg
stos
inc
out
sub
sub
ljmp
jmp
jle
movsb
mov
popa
jecxz
subb
es
enter
sub
ljmp
lods
adc
add
std
sbb
mov
jb
popa
push
sbb
jle
jmp
jg
decl
mov
out
and
add
push
out
adc
loopne
incl
or
push
sub
fsubs
dec
pop
mov
xor
decl
fmul
cmp
sbb
repz
and
dec
or
sbb
xor
add
and
dec
cld
jg
orb
pop
adc
dec
push
sbb
xchg
outsb
sbb
pushl
into
cmpsb
push
movsb
mov
cmp
push
xor
mov
xor
fwait
addr16
jno
sbb
lds
mov
cmp
pop
jp
jno
fistps
int3
lcall
pop
pop
mov
movsl
mov
inc
ljmp
push
or
and
icebp
mov
call
and
cld
inc
or
jg
decl
or
sbb
jnp
cli
xchg
cmp
pop
stos
fstpl
xor
mov
out
addr16
loop
adc
xor
in
xchg
pop
movsb
shll
les
popf
addr16
andl
das
cmc
sbb
pushf
jo
sbb
imull
xorb
std
pop
pop
mov
out
push
loope
add
xchg
xchg
dec
jg
outsl
jg
mov
das
or
std
and
xor
cmpsb
pop
paddd
and
sbb
fwait
sub
lcall
in
iret
mov
sub
push
or
pusha
and
loop
xor
sbb
decb
in
repnz
movb
or
movsb
pop
xchg
fucom
sub
mov
cld
or
lods
xchg
syscall
adc
pop
jge
xlat
push
push
cmp
clc
incl
jne
or
jne
fcmovnu
xchg
or
push
lods
pushl
fistps
xor
xchg
adc
shl
push
ljmp
pop
roll
sub
sub
cmp
mov
jg
ljmp
movsb
sbb
push
sub
stos
test
ljmp
fistpll
lds
push
enter
jg
pop
scas
mov
add
mov
pop
inc
jb
mov
nop
pushl
incb
sub
fdivs
imul
in
icebp
sbb
pop
mov
idivb
dec
call
fidivs
sti
test
enter
incl
push
aam
dec
dec
sub
or
lret
stos
inc
popa
daa
fistps
cmp
dec
adc
or
adc
sar
fistl
jo
jle
or
mov
inc
sbb
sti
mov
xchg
outsb
das
pop
xchg
dec
les
sub
and
xchg
subl
dec
dec
push
incl
fwait
mov
and
scas
lds
jge
mov
and
scas
push
pop
sub
gs
das
lds
inc
mov
xchg
stos
jns
push
xchg
xor
shrl
loopne
in
out
inc
add
cmpsl
mov
or
sbb
fsub
loope
cmpsb
dec
popa
and
fwait
mov
bound
xchg
sub
into
popf
fucomp
pop
test
cmp
xor
dec
decl
ljmp
out
jne
adc
dec
movsl
push
mov
push
mov
lock
sub
push
lahf
lods
call
int
out
xor
sbb
notl
mov
jmp
xchg
cld
lcall
jecxz
or
push
fwait
dec
int3
in
adc
fwait
je
ret
cld
lcall
mov
test
pop
pop
movsl
mov
xor
ja
ljmp
or
in
call
pop
xchg
or
sub
out
cld
ret
or
add
or
fcompl
divl
fildll
xchg
sbb
mov
ficompl
xor
test
inc
mov
push
sar
lcall
sbb
push
cmp
fistps
addl
cmpsl
dec
ret
fucomip
mov
sub
adcb
sbb
gs
mov
stos
jno
rol
or
pop
fbstp
mov
lea
jno
and
mov
jne
inc
dec
scas
mov
inc
gs
lcall
decl
ret
ret
xor
jne
cmp
xor
popf
xchg
cli
incl
xor
dec
xorl
jmp
popa
pushl
or
loope
mov
jge
mov
cmc
dec
outsl
push
test
jg
add
in
aaa
rcll
imul
mov
aas
call
decl
ret
adc
orl
xchg
mov
inc
mov
mov
push
fsubl
outsl
xor
adc
adc
in
mov
les
mov
or
xchg
cmpsb
fisttpl
imull
dec
xor
sub
inc
daa
out
mov
mov
pusha
mov
mov
mov
cmpsb
pop
or
xor
jnp
jp
and
test
cmpsb
add
idiv
inc
xor
fidivrs
sbb
mov
pop
xor
test
loope
lods
cmpsl
nop
lds
aas
movsb
cwtl
push
and
cmp
sub
sub
mov
and
or
inc
ret
jmp
sbb
or
imul
mov
dec
xor
inc
sbb
sub
gs
mov
cmp
outsl
ret
daa
cmpl
jno
mov
clc
hlt
xor
orb
xor
lcall
frstor
or
mov
aad
jbe
sbb
mov
iret
outsl
xor
insl
pop
sbbb
jp
arpl
lcall
inc
add
jg
gs
push
sub
push
or
xor
call
jo
cmpsb
loopne
push
mov
inc
xlat
push
push
fs
push
leave
push
add
sub
adc
sti
movd
adc
mov
xor
push
sbb
orb
inc
icebp
jg
pop
push
das
and
leave
or
sbb
or
dec
cmp
insl
xchg
hlt
in
ljmp
inc
sbb
jl
sub
pop
add
mov
xor
je
push
pusha
outsl
jno
jg
dec
jae
popa
ffree
xchg
mov
mov
lcall
in
fwait
pop
xchg
xchg
aad
dec
xchg
sub
adc
mov
pop
in
cmp
icebp
push
std
sbb
cmpsl
divb
push
pushl
loope
and
mov
fcmove
mov
cld
pop
sub
pop
cmp
daa
push
das
xchg
or
in
decl
int3
sbb
or
xlat
push
sbb
sbb
adc
outsl
repnz
ds
subl
popf
ja
gs
cs
mov
adc
sbb
sub
outsb
xor
add
adc
mov
stos
pusha
xor
mov
dec
insb
sbb
ljmp
insl
dec
pop
sarb
div
fwait
les
sbb
adc
decl
test
daa
je
scas
xor
jge
test
lock
xor
pop
mov
idiv
outsl
iret
xlat
fadds
or
sti
or
stos
xchg
clc
fsubl
adc
ds
nop
or
notb
add
cmpl
fimull
or
popf
pop
inc
int3
test
in
mov
lahf
add
jge
arpl
xor
pop
cli
pushl
add
sbb
out
xor
lds
mov
jg
jb
je
outsl
cld
incl
pusha
inc
movsb
movsb
add
add
rcll
adc
jg
icebp
call
or
jl
mov
and
popa
mov
sub
and
aad
add
dec
jnp
cli
decl
push
test
idivb
ja
idiv
xchg
les
inc
mov
dec
fsubs
mov
leave
stos
pop
push
or
inc
jl
xor
call
mov
xor
xor
lahf
adc
loopne
insl
push
xor
cmc
mov
mov
inc
aaa
pop
sbb
lahf
xor
xlat
sar
decl
and
add
iret
into
into
inc
mov
mov
push
xor
mov
or
and
imul
cli
sub
icebp
popf
dec
xchg
test
shll
or
mov
shrb
data16
sti
stos
sar
push
ljmp
fdiv
in
xor
or
fcompl
adc
inc
sarb
imul
clc
decl
dec
cmp
add
bound
fdivl
ljmp
test
dec
pop
adc
xor
test
and
cmp
sub
cmp
sub
xor
mov
jg
jl
das
loop
ljmp
adc
into
leave
into
out
pop
mov
jo
xor
push
fildll
test
dec
mov
std
outsl
pop
pop
enter
les
insl
cmpsb
and
ljmp
mov
mov
in
xchg
jl
fcomp
out
es
in
sbb
or
push
xchg
mov
mov
and
jnp
lea
pop
sbb
fcoms
shl
decl
imul
cmp
pop
pushf
test
hlt
gs
ljmp
add
cmp
insl
or
cmpsl
xchg
pop
push
pop
xor
jns
sbb
fcmove
xchg
mov
gs
dec
dec
lods
mov
gs
mov
hlt
adc
fiadds
mov
push
pop
dec
cs
sub
cld
mov
pusha
xor
sti
fists
pop
mov
jo
lcall
clc
ljmp
push
iret
inc
int
and
cs
scas
inc
or
mov
mov
push
dec
or
adc
test
ss
int
xchg
loop
mov
in
jnp
add
call
in
notb
push
and
inc
add
stos
std
ljmp
popa
jo
cs
cmp
fstps
push
push
cmp
sti
adc
std
lcall
outsl
sub
into
pop
adc
mov
xchg
lods
adc
js
pop
mov
dec
mov
xlat
andl
jmp
sbb
push
sub
jecxz
leave
xchg
cli
xor
insb
jb
adc
mov
jp
mov
mov
pop
mov
jbe
jle
inc
pop
ljmp
mov
mov
or
sbb
xchg
incl
push
aam
mov
adc
ljmp
dec
and
sti
mov
in
sbb
push
outsl
mov
xchg
fisubrl
gs
xchg
je
ljmp
xchg
arpl
data16
iret
and
fs
push
call
dec
jle
jnp
dec
std
mov
subl
out
adc
pushl
jnp
jp
data16
jl
sub
out
pop
pop
mov
dec
sub
decl
pop
pushf
pop
jge
int3
pop
scas
dec
sbb
push
fcoms
movsl
cmp
dec
xor
lds
mov
mov
cmc
add
dec
pop
mov
add
aad
out
ljmp
leave
and
divl
ljmp
jnp
mov
and
aaa
jmp
or
stos
out
mov
in
mov
clc
pop
push
cmp
imul
xor
call
pop
sbb
fimull
and
push
xchg
mov
or
jg
ret
nop
or
ja
push
jnp
shll
xchg
dec
cmp
lcall
mov
outsb
and
mov
pop
je
stc
mov
std
outsb
mov
jecxz
jne
add
mov
das
or
sbb
adc
or
pusha
cmp
sub
mov
mov
iret
xchg
xor
pop
jle
dec
into
hlt
inc
jecxz
push
subb
lret
xchg
ds
xor
rolb
popl
cli
fmuls
decl
aaa
cltd
fdivr
cld
pop
loopne
iret
inc
sbb
call
xor
push
push
pop
mov
js
or
inc
fnstsw
aaa
sub
mov
or
jns
ljmp
sarl
jp
jl
xor
or
nop
push
jg
shr
adc
es
jp
mulb
pop
cld
pop
addr16
and
in
or
mov
inc
push
inc
add
and
mov
in
cli
mov
sbb
ljmp
sbb
adc
xchg
mov
sbb
lcall
mov
cli
or
cmp
push
sbb
in
push
push
lock
out
test
fisttpll
sbb
decl
dec
ret
cld
lcall
ret
push
sbb
xchg
fiaddl
mov
decl
push
cmp
cmc
sub
mov
xchg
aas
add
cs
jmp
jl
mov
cltd
and
jp
nop
mov
cs
cld
lea
paddsb
std
cmp
jg
in
push
fldt
imul
hlt
mov
test
out
xor
mov
test
fs
xor
xor
xchg
out
lds
jne
inc
sbb
dec
xchg
xor
xchg
add
gs
sbb
repnz
adc
out
imul
aad
out
add
aad
lock
mov
sbb
add
imul
adc
push
stos
dec
popl
int
sbb
cmp
fnstsw
mov
aas
adc
sbb
call
lcall
push
cmp
roll
cli
popa
jge
cmp
call
add
test
sbb
cld
ljmp
scas
ja
ror
loope
and
les
jg
mov
bound
sub
outsl
adc
and
sbb
ss
inc
loope
call
push
movb
mov
and
xchg
mov
mov
xlat
add
or
cltd
pop
and
cmp
mov
call
xor
cmp
sbb
scas
idivl
push
pop
cmp
movb
xchg
inc
sbb
cld
sbb
ljmp
testb
and
inc
imul
pop
adc
ss
das
stos
pop
imul
mov
mov
popa
lock
lahf
adc
jg
ljmp
mulb
mov
lds
outsl
mov
push
pop
scas
mov
cmpsl
incl
das
cmp
sub
ja
xchg
bswap
push
xor
sbb
in
in
xor
ret
sbb
push
call
add
dec
xchg
aas
inc
loope
jg
in
jmp
push
jle
dec
testl
ret
jne
mov
xchg
aas
pop
cmp
pop
cmp
jg
pop
or
adc
ds
or
add
jmp
xchg
dec
decl
and
mov
test
sahf
mov
or
or
jg
mov
data16
jg
sbb
xor
inc
mov
push
ror
or
or
xor
fwait
and
mov
sbb
sbb
and
xor
xor
aaa
xor
push
incl
insb
pop
jp
sbb
comiss
mov
push
inc
mov
adc
daa
cmpsl
ror
jmp
sbb
or
test
push
mov
aas
adc
sbb
sbb
mov
psubd
sbb
add
inc
sbb
int
add
jge
sti
add
push
mulb
fists
xchg
arpl
repz
orb
aas
xchg
cmp
cmpsb
mov
movsl
jns
push
sbb
push
lds
adc
rclb
fists
inc
mov
call
call
loope
sbb
sbb
insb
sahf
xor
jg
jmp
dec
mov
in
mov
es
pusha
leave
cmp
outsl
lock
bound
cmp
pop
and
ss
mov
dec
call
les
push
dec
dec
or
iret
inc
cmc
adc
push
ss
je
inc
inc
idivl
insl
cmpsl
or
or
inc
jae
out
inc
sub
mov
cld
outsl
cmc
jmp
lret
fisubs
xchg
lock
lea
cld
sbb
add
cmc
adc
sbb
or
orl
add
add
mov
dec
xor
xor
pop
ss
mov
aas
lret
cwtl
fs
xchg
daa
jbe
mov
call
jle
mov
mov
and
mov
mov
dec
mov
repz
adc
or
mov
sbb
mov
mov
xor
mov
pop
cmp
dec
pop
cmp
je
lea
cli
inc
or
cmpsl
inc
mov
pop
or
pusha
ljmp
movsl
add
cmpsl
cmpsb
jle
push
ljmp
fs
sbb
mov
mov
mov
dec
xor
add
sbb
sti
popf
sbb
cmp
inc
pop
loopne
out
aaa
sbb
inc
dec
sti
jnp
nop
loop
push
pop
cld
pop
adc
cmc
lea
cmp
fildl
gs
out
sub
inc
xchg
ret
dec
pop
mov
fists
dec
inc
pop
fbld
xchg
jb
xor
in
sbb
mov
mov
or
mov
jb
adc
in
fwait
adc
dec
jge
push
adc
ljmp
push
pushf
pop
stos
lods
dec
mov
adc
lea
adc
nop
pop
addr16
lret
arpl
popf
into
aam
push
mov
sbb
rolb
mov
lods
sbb
or
mov
pop
fnsave
mov
cltd
lret
xor
xchg
clc
adc
sbb
mov
adc
adc
push
fbstp
and
lcall
test
enter
adc
bound
je
cmp
aas
dec
loope
or
pop
popa
cwtl
gs
pop
inc
test
or
pop
ss
insb
stos
cli
incl
adc
cmp
arpl
and
daa
ja
dec
sti
push
and
push
and
stos
rcrb
pop
insb
cli
push
lahf
dec
movsb
daa
pushf
jno
incl
push
dec
pop
xor
scas
inc
cmp
je
mov
and
sbb
lcall
rcrb
in
mov
leave
mov
daa
cmp
and
jl
icebp
lods
movsl
mov
cmpsl
xor
adc
ss
arpl
lcall
shrb
push
sbb
and
fdivs
sbb
push
mov
add
mov
das
sub
pop
mov
stc
fnsave
js
cmc
xor
pop
jle
xor
push
pop
add
pop
lcall
cli
pop
gs
lods
dec
push
adcl
ss
loopne
hlt
xchg
push
ljmp
jmp
mov
push
or
sahf
sahf
dec
pop
pop
sbb
loopne
sub
incl
xor
mov
and
lahf
pushf
test
das
xlat
imul
pop
les
mov
les
call
out
outsl
jmp
pop
lcall
aad
or
decl
andb
addr16
xchg
mov
adc
dec
add
adc
shrb
lock
jnp
notb
pop
in
imul
in
pop
cmpsb
movsl
jmp
xor
movsl
or
orl
jne
fwait
push
mov
inc
pop
push
insl
cmp
and
xchg
jp
loopne
jg
dec
xchg
add
ja
push
addr16
fmull
mov
lock
push
mov
lods
lahf
xchg
sbb
lcall
sahf
and
ds
pop
sub
aad
push
sbb
add
mov
sbb
clc
je
das
cmp
xor
pop
fbstp
and
jmp
mov
std
add
and
jae
sbb
jo
outsl
fs
fldenv
pop
sbb
dec
inc
mov
cli
sbb
inc
jmp
addr16
in
sbb
call
call
cmp
jmp
xor
cli
inc
addr16
push
mov
cltd
push
ljmp
icebp
lret
jl
bound
jl
pop
out
cwtl
mov
mov
pop
loop
and
push
xor
lcall
decl
shrl
add
cltd
push
ljmp
inc
das
mov
das
icebp
inc
xor
add
cmc
fists
mov
in
adc
inc
and
inc
cmpsb
inc
xor
sbb
mov
mov
fcmovne
dec
sbb
nop
adc
adc
or
stos
outsb
inc
and
mov
jo
jle
mov
jg
push
aaa
jge
out
cs
mov
cmpsl
push
add
das
sti
loop
stc
inc
jge
sbb
push
and
test
fiadds
incl
inc
sbb
adc
xor
cmp
call
xchg
stos
sub
xor
push
fs
imul
xor
mov
jb
push
sbb
dec
sbb
aad
sbb
pop
clc
lcall
xor
xor
push
fwait
mov
jl
incl
jae
adc
xor
lods
lcall
cmc
xor
in
adc
sbb
in
jo
lds
xor
or
data16
gs
pop
mov
cmp
sub
repnz
cmp
in
out
mov
cli
dec
std
mov
xor
lcall
sar
call
fisttps
adc
cmp
out
pop
loopne
dec
les
pop
xchg
cmp
dec
cld
mov
ds
mov
dec
sbb
js
jne
dec
inc
decl
test
mov
dec
arpl
mov
sub
stos
inc
pop
loop
negb
stos
insl
pop
pop
push
stos
lcall
pop
jne
lcall
cmp
xchg
lcall
xchg
sbb
sbb
mov
mov
leave
sbb
push
sub
aas
xor
push
mov
call
mov
notl
jns
add
push
sub
data16
call
pushl
ja
inc
adc
xor
insb
adc
jg
lds
cmp
ret
jno
insl
and
insl
dec
movsl
pop
add
stos
dec
and
rol
xor
sbb
inc
pushf
and
jmp
pop
pop
or
pop
int3
xchg
adc
aas
das
je
mov
les
sbb
mov
xor
lock
pop
adc
cmpl
push
dec
xor
jg
out
das
mov
jae
stc
sbb
inc
mov
adc
push
in
outsl
std
or
xchg
cs
mov
push
jp
aam
xor
lods
repnz
or
pushl
decb
lods
inc
mov
les
outsb
ljmp
inc
add
sbb
cld
cmp
ljmp
push
cmp
dec
add
sbb
or
or
sub
addr16
fldt
bound
mov
add
sbb
outsl
inc
and
outsb
push
jmp
xor
mov
xchg
and
jnp
icebp
int
aad
fwait
cmp
jo
incl
mov
mov
mov
stos
mov
ss
or
mov
or
out
xchg
inc
sti
xchg
lahf
cmpsl
add
leave
cmpsl
idivb
mov
push
mov
or
idivb
xchg
mov
sarl
dec
hlt
mov
out
jo
push
push
push
cltd
ljmp
inc
dec
jo
mov
cmp
jp
inc
add
sti
cmp
call
jge
lods
and
sti
sahf
add
pop
push
dec
dec
xor
push
js
lcall
test
pop
xchg
jp
cmp
mov
xchg
das
hlt
jg
stos
mov
jg
mov
hlt
xchg
adc
jg
dec
or
leave
jne
or
mov
or
mov
jge
push
pop
jae
fildl
mov
clc
jg
jmp
mov
xor
sbb
out
stc
adc
sbb
push
popf
xorb
lret
jnp
jb
pushf
pop
xchg
movsb
jns
rcrl
lock
and
sub
dec
or
pop
xor
decl
dec
push
icebp
xchg
push
mov
mov
adc
lock
adc
ja
data16
loop
adc
jns
jnp
cmp
decl
cmp
jp
jp
outsb
or
cmpsb
and
push
or
stos
xchg
mov
adc
fisubrs
outsb
pop
push
cs
mov
jae
push
movsl
cs
xchg
cmp
xchg
or
jg
add
xchg
pop
xchg
add
adc
jno
inc
test
repnz
dec
scas
jae
mov
cltd
jp
adc
push
pushl
orb
dec
xor
xor
sbb
out
pop
pop
inc
add
lock
orl
xor
aaa
lcall
repz
int
pop
into
jnp
inc
lods
and
pop
mov
add
push
pushl
jp
dec
jae
je
adc
dec
mov
arpl
sbb
inc
jns
mov
lahf
mov
sbb
lea
incl
push
pusha
add
add
sbb
adc
pop
add
jg
in
add
pop
lret
and
mov
adc
add
pop
add
movsl
pop
ljmp
adc
add
push
aad
jmp
add
mov
or
sbb
mov
adc
or
pop
stos
mov
jae
outsl
in
pop
xor
scas
pop
push
adc
stos
push
pop
rolb
inc
inc
or
movsl
push
clc
outsl
push
loopne
pop
scas
push
push
or
jg
pushl
mov
cmc
cmp
dec
sub
mov
xor
xchg
xlat
pop
inc
in
push
mov
push
stos
cli
and
sbb
pop
jp
in
repz
or
push
sub
xlat
sarb
fildl
dec
ljmp
cmp
aaa
push
stos
push
cmp
std
out
js
xor
xor
sbb
jg
xchg
pop
dec
icebp
push
mov
cld
loopne
in
sbb
xor
addb
jne
push
push
mov
sbbb
cmp
shlb
call
loopne
sbb
adc
jb
cmp
mov
jb
imul
cmp
jo
jg
fists
push
insl
or
ljmp
and
dec
shl
insb
js
fistpll
ds
jae
andb
pop
push
pop
loop
mov
sbb
fs
lock
ljmp
jno
shrb
inc
inc
aaa
inc
pop
inc
push
inc
pop
dec
inc
sbb
fsubl
dec
bound
repz
pop
push
xchg
shl
add
jne
movsb
jb
jg
ljmp
inc
cmp
xchg
repnz
pop
jb
cmpl
shlb
cmp
test
fbld
movsb
sbbb
aam
daa
dec
popf
pop
lahf
mov
jl
decl
mov
js
pop
outsb
push
jo
gs
push
outsl
mov
js
dec
jno
or
incl
jl
push
pop
inc
sbb
mov
stos
inc
push
pop
cwtl
std
andps
xchg
push
mov
push
add
push
or
sar
aas
and
cli
gs
sbb
sti
adc
decb
or
fucompp
cmp
and
push
adc
inc
je
adc
xchg
or
lcall
jge
or
inc
gs
pop
sbb
and
aas
jge
mov
add
fucomip
loop
frstor
xor
mov
mov
jle
packsswb
pop
or
inc
adc
dec
and
or
in
sbb
lds
adc
clc
pop
jge
lret
mov
mov
imul
outsl
cmp
cmp
add
jg
mov
adc
add
mov
add
adc
xchg
add
dec
push
loopne
xchg
and
ja
mov
jae
adc
mov
push
push
xchg
jbe
pop
js
ss
mov
or
in
cmp
mov
or
mov
das
into
or
and
test
xchg
add
push
inc
hlt
out
call
add
popl
inc
xchg
dec
jp
out
push
call
push
xchg
cmpsl
or
mov
or
aam
fcomi
mov
cld
mov
sub
in
inc
push
jl
test
incl
or
in
or
leave
cs
test
in
push
cmc
sti
lods
jne
cmp
mov
out
pushl
jns
nop
daa
mov
mov
clc
push
pop
pop
fwait
or
mov
lcall
jle
in
dec
push
dec
std
cmp
divl
or
or
and
jl
adc
add
fstl
pop
popl
pop
shll
lds
pop
push
add
ja
push
sbb
mov
pop
add
into
lea
push
jg
aas
mov
mov
out
pop
pop
nop
out
or
fisttpll
or
lea
nop
int
sbb
pop
leave
lods
jmp
push
jg
nop
jmp
pop
lcall
mov
outsb
pop
pop
mov
dec
sub
mov
and
mov
push
test
mov
lds
pop
adc
push
add
jnp
dec
add
add
sbb
or
mov
lret
test
test
and
lcall
dec
or
fs
cs
jge
xchg
nop
movsl
and
in
push
jb
xchg
test
mov
mov
xor
lea
cld
jge
and
or
mov
push
jmp
lods
cmp
shr
cmc
fcoms
adc
mov
int
pop
add
dec
add
mov
cmovle
or
mov
inc
jae
ja
sub
gs
mov
add
mov
add
je
and
aaa
cmp
ds
addr16
jmp
dec
and
xor
js
int
rclb
and
movsl
data16
jns
and
add
lods
jmp
ss
outsb
aaa
jae
xor
out
push
add
inc
jno
jns
jne
mov
and
cmp
add
test
cmp
add
mov
add
fstp
pop
mov
aaa
idivl
jae
jno
and
aaa
dec
add
xlat
push
or
jle
xlat
lods
lods
jmp
insl
daa
add
pop
outsl
jae
cs
aaa
test
cmp
lea
ret
ja
imul
or
daa
dec
add
fldenv
stos
repz
xor
and
sbb
stos
push
inc
fmull
inc
add
push
add
xorl
jns
sbb
test
and
in
dec
mov
or
outsb
sbb
es
icebp
stos
dec
pop
pop
daa
inc
movsb
imul
or
jae
jno
mov
pop
sub
jge
jno
mov
fwait
test
xor
push
fstpt
xor
imul
hlt
in
jg
push
daa
inc
inc
and
data16
mov
jno
mov
outsl
mov
sbb
jae
js
insl
adc
xor
outsb
incl
ja
js
imul
jb
adc
jnp
push
jbe
imul
outsb
imul
jo
sti
jbe
dec
dec
imul
sti
push
add
adc
mov
imul
inc
ja
sub
pop
mov
jae
jb
pop
mov
lcall
push
dec
pop
dec
dec
push
xor
xor
ja
push
pusha
addr16
jns
jne
loop
aaa
adc
mov
mov
inc
inc
sbb
mov
or
sbb
adc
mov
lret
jbe
push
mov
xor
js
dec
popa
imul
jb
xor
cmp
jno
push
and
inc
or
mov
test
push
pop
je
push
cmp
jo
push
cmp
cmp
cmp
push
and
mov
insb
cmp
adc
cmpsl
test
xor
xor
and
push
or
dec
lcall
movsb
sbb
sub
insb
xor
shlb
test
xchg
push
lods
roll
cmp
pop
mov
inc
loope
pop
push
push
dec
push
nop
and
addr16
cli
std
dec
push
push
dec
pop
or
jno
push
dec
dec
cmp
push
push
pop
adc
pop
das
pop
cmp
add
pushl
push
outsb
addr16
ja
inc
or
xchg
lret
ja
loope
outsb
adc
or
test
push
stos
push
lahf
sub
fldl
cmpsb
aas
pop
std
add
pop
enter
scas
pop
daa
sub
test
sub
scas
fcomp
arpl
pop
std
fmuls
bound
addr16
cld
push
inc
push
std
movsl
iret
aas
repnz
mov
dec
ja
daa
inc
and
sbb
mov
and
push
sub
cmp
jl
add
test
inc
inc
lret
inc
aaa
fdivrl
pop
and
mov
xor
call
push
pop
or
mov
rcll
std
or
sub
cwtl
mov
out
or
movsl
decl
fidivs
sbb
pushf
or
adc
pop
fdivp
inc
aam
ljmp
sbb
popa
push
adcb
repz
adc
or
sub
sbb
call
push
sub
ret
xor
mov
frstor
adc
or
jg
outsl
jb
mov
jns
sti
pop
adc
push
sub
dec
jg
stos
jg
lock
mov
add
mov
repnz
incl
inc
sbb
pop
or
jns
aas
inc
add
mov
or
xor
pop
loopne
icebp
nop
icebp
mov
ret
add
cli
and
push
pop
cmp
insl
sub
test
and
ljmp
add
nop
push
adc
mov
adc
std
adc
or
xchg
and
in
aam
add
insl
lods
cs
incl
and
push
pop
repnz
jae
sub
sbb
jns
clc
decl
cmp
sub
pushf
loop
pop
push
and
into
hlt
insb
mov
je
mov
push
mov
jno
inc
lods
mov
add
sub
popa
push
loopne
call
jg
cmc
adc
popf
mov
add
ret
cmp
add
loop
dec
dec
add
and
sbb
pop
mov
int3
or
pop
add
mov
sub
dec
enter
pop
jnp
mov
sti
dec
inc
push
mov
or
and
enter
xchg
xchg
xchg
sti
jg
pushl
adcl
push
adc
adc
xchg
or
jmp
ficoms
fdivs
jmp
aas
cmp
imull
mov
call
jg
mov
leave
mov
add
test
mov
movsb
mov
movsb
incl
test
cmp
mov
xchg
sti
mov
jno
jge
inc
jle
add
mov
pusha
mov
sbb
icebp
ds
pop
cmpsb
movsl
mov
nop
fidivrs
nop
inc
xor
nop
mov
pop
add
cld
in
fmull
nop
mov
jge
or
decl
incl
jecxz
push
stc
cmp
adc
fstpl
mov
xor
rcr
dec
or
lret
jb
jmp
jge
push
ss
add
pop
push
push
cmp
dec
les
and
push
xchg
jmp
sahf
int
icebp
adc
rclb
or
pop
mov
outsl
pop
cmp
sbb
idiv
sbb
or
loop
std
pop
insl
push
mov
lahf
xor
insl
xor
insl
fcmovu
cli
incl
mov
fs
jp
xchg
dec
cmc
sbb
push
xlat
add
fwait
out
ljmp
pushl
loope
sbb
cmp
mov
inc
enter
icebp
lcall
jns
notb
icebp
in
xor
push
loopne
xor
rorl
js
insb
cwtl
push
xchg
xchg
inc
jno
sub
les
inc
int
or
dec
pop
push
adc
push
into
push
aam
xchg
and
push
icebp
add
jecxz
fisubs
xor
inc
add
les
jns
xor
sbb
dec
pop
add
sahf
xchg
imul
lock
outsl
popa
dec
mov
test
enter
outsl
in
pop
jg
sub
sbb
idivl
pop
jmp
sub
jns
sbb
sbb
xor
mov
into
icebp
and
je
xchg
mov
ljmp
out
pop
frstor
mov
fcom
test
adc
pop
cmp
sbbb
jns
ljmp
pop
push
sbb
xchg
xchg
jge
adc
xchg
jecxz
fidivrl
lods
sub
std
hlt
push
xchg
mov
sar
jmp
loope
jmp
and
mov
movsl
sti
or
incl
imul
sub
outsl
push
inc
insl
icebp
inc
addb
push
adc
push
mov
insl
jmp
and
mov
xorl
nop
adc
cmp
xor
test
call
hlt
test
lods
mov
cmp
mov
sub
push
rcll
push
clc
idiv
outsl
push
mov
push
leave
push
cltd
push
cmp
lds
mov
push
push
fisttps
mov
pop
arpl
stos
mov
mov
adc
imul
decl
lea
jns
out
xor
and
sar
lcall
push
ds
fnsave
cmp
cld
jb
adc
add
in
push
loope
sbb
pop
xchg
xchg
js
lcall
in
mov
add
add
inc
cmp
std
mov
sbb
sti
lcall
cli
and
fidivrs
fnstsw
mov
mov
xor
jns
jmp
or
or
and
sbb
pop
ss
loope
jmp
add
sub
mov
or
dec
loope
sarb
inc
pop
or
inc
xchg
icebp
cmc
mov
pusha
imul
icebp
sbb
pop
in
sarl
adc
inc
or
outsl
lret
and
and
push
sar
and
les
aas
mov
ljmp
mov
push
or
jmp
push
push
dec
stos
pusha
rcrb
call
adc
push
subl
scas
sbb
rcll
jmp
push
adc
ja
aaa
or
ja
adc
into
ja
sbb
mov
xor
call
xchg
push
lods
pop
xchg
arpl
push
sbb
inc
outsl
inc
fs
lcall
pushl
and
mov
test
outsl
outsl
push
mov
mov
fdivr
mov
inc
test
rorl
outsl
pop
mov
sbb
test
lea
dec
pusha
push
or
cmp
jns
pop
cmpxchg
pushl
loopne
or
fs
outsl
call
lcall
faddl
cld
jmp
mov
adc
xchg
jl
sbb
ds
repnz
sub
jg
loopne
or
inc
enter
dec
mov
cwtl
add
jmp
jle
imul
js
xchg
call
xor
hlt
dec
incl
in
push
push
test
frstor
lcall
cmc
rcll
rcr
pop
push
jp
inc
popf
adc
fwait
int
pushf
adc
inc
call
dec
outsl
lods
sbb
xor
enter
pop
dec
clc
and
xor
call
in
cmpsb
mov
or
roll
in
adcb
mov
clc
mov
mov
sbb
mov
int
in
xor
jmp
jmp
inc
jne
mov
or
movsb
sub
insl
cmp
or
cmp
xor
cli
adc
ljmp
add
sbb
in
dec
std
nop
int3
sahf
cld
pushl
and
xchg
push
pop
in
cld
or
dec
fldcw
popa
loope
push
incl
call
int3
push
loope
nop
out
loop
pop
sbb
les
xchg
cmp
cmp
dec
jnp
test
or
and
adc
mov
cmpsl
in
ret
adc
gs
xor
pop
clc
mov
xor
out
mov
sub
int
icebp
jg
decl
and
test
push
pop
cmp
or
sar
jmp
jnp
test
xchg
setne
dec
xor
jg
fildll
push
mov
test
or
cmp
lahf
push
rorl
rorl
aad
fldl
adc
dec
jg
jmp
adc
dec
xor
dec
je
adc
mov
es
loope
jp
pop
ljmp
jp
xchg
push
pop
xor
add
loope
xchg
bound
int
jmp
fldl
xorb
jmp
sbb
in
mov
adc
xlat
push
or
or
pusha
fdivrs
outsb
sub
or
shll
inc
icebp
jmp
push
fcoms
or
xchg
cmc
and
incl
cmc
xor
ljmp
aad
rcr
test
pop
sub
xor
out
xor
jg
call
cmp
lcall
and
fistl
sub
cld
push
ljmp
je
lods
add
mov
in
or
cs
lcall
cmp
fldenv
fldenv
enter
pop
int
fnstsw
jg
ret
loope
aas
and
pop
outsl
in
mov
fst
decl
frstor
fdivs
in
icebp
int
popf
in
sub
and
xchg
ljmp
dec
add
mov
std
mov
mov
mov
mov
pop
iret
std
push
adcl
test
or
cs
insl
flds
and
or
lret
mov
push
outsl
or
adc
and
xchg
sbb
push
movl
aaa
aas
fnsave
xor
test
mov
arpl
es
das
add
and
mov
fcompl
fiaddl
lds
pop
xor
jge
fwait
pop
out
icebp
lcall
decl
inc
inc
cltd
out
outsl
movq
ja
pop
cmc
jle
ds
call
sbb
fmull
or
push
adc
inc
jg
insb
out
mov
int
lock
clc
lcall
ds
outsl
jo
adcl
xchg
mov
mov
xchg
arpl
cmpsb
das
pusha
ret
mov
aad
jle
popa
vpandn
xor
mov
mov
pusha
shl
pop
and
cld
jg
mov
xchg
mov
in
mov
imul
jno
pop
or
pop
movsl
leave
mov
pop
mov
lds
ljmp
push
loopne
mov
mov
mov
mov
pop
movsl
ss
jg
faddl
orl
nop
mov
subl
lods
jg
inc
or
iret
pop
adc
xor
cmp
bswap
lods
pop
mov
dec
aas
into
gs
decl
fucom
mov
inc
pop
xchg
jb
les
pop
xchg
clc
decl
fwait
adcl
addr16
cmp
add
sub
xor
int
or
pop
inc
cmp
xor
icebp
outsb
and
hlt
sbb
lcall
test
sahf
outsb
push
es
xor
and
pop
inc
mov
idivl
clc
call
and
dec
sub
or
mov
xor
adc
aaa
lcall
hlt
int
adc
sbb
mov
push
adc
popf
call
mov
inc
popf
push
call
andb
mov
jbe
decl
repz
fidivl
adc
ja
dec
sbb
jl
insl
leave
xor
repnz
insl
std
mov
xchg
mov
xchg
and
lods
or
movsl
add
inc
mov
pop
jns
cmp
insl
imul
dec
sbb
dec
sbb
repnz
out
mov
pop
jb
mov
scas
or
and
fimuls
and
pop
stc
mov
mov
mov
bound
sbb
push
xor
cmp
cld
inc
xor
sub
and
pop
negb
jle
lods
dec
and
ds
xor
insl
test
mov
ljmp
sub
xchg
pushf
stos
add
fldl
add
xor
ljmp
push
ss
mov
mov
dec
sbb
mov
sarl
lea
lcall
sub
cmpsl
or
mov
scas
insb
outsl
push
pusha
pop
imul
call
dec
sahf
sub
add
inc
push
xchg
sub
fstl
pop
out
fisttps
mov
cmc
mov
pop
enter
lock
mov
repz
pop
sbb
dec
dec
stc
rep
fsts
cmp
xor
and
rcll
fs
cmp
add
pop
addl
adc
mov
mov
stc
iret
mov
leave
int
rcl
loope
jmp
mov
ljmp
add
pusha
divl
xchg
pop
pop
clc
xor
xor
int3
sbb
push
push
or
pop
filds
cmp
roll
jbe
vunpcklps
pop
xlat
mov
sbb
jmp
insl
dec
sbb
mov
and
enter
add
in
jle
adc
pop
or
mov
xchg
xor
ljmp
ffreep
sarl
imul
insl
or
push
divb
mov
clc
jmp
pop
sub
and
xchg
test
xor
adc
fistps
xchg
push
mov
adc
jp
inc
dec
sbb
lock
inc
mov
test
mov
lock
bnd
fmuls
push
mov
incl
adc
roll
jne
loop
pusha
xchg
fldt
push
loopne
fidivrs
xor
mov
jns
in
cld
jg
das
lea
sub
shrl
nop
add
add
mov
mov
stc
cmp
adc
call
pop
add
inc
add
orb
push
fidivs
mov
lock
call
into
and
sahf
imul
xchg
sub
pop
jb
fidivs
push
adc
imul
or
rcll
sub
mov
decl
inc
jl
xor
lcall
add
and
mov
jno
movb
int
mov
jp
imul
mov
cmpsb
xor
lcall
mov
cmp
mov
aad
adc
daa
add
pushl
mov
xchg
pushf
sub
mov
repnz
stc
enter
out
mov
jnp
sbb
xor
inc
cmp
leave
dec
les
cmc
testb
int
pop
jae
out
pop
mov
daa
mov
and
icebp
pop
cli
mulb
call
rcrl
push
icebp
mov
ljmp
xor
rcl
mov
mov
mov
dec
adc
mov
mov
mov
mov
sub
xor
push
and
imul
push
jle
xchg
add
mov
outsl
fdivl
dec
sbb
mov
ret
xchg
jp
mov
adc
sub
or
cli
les
mov
mov
fidivl
mov
mov
jmp
add
clc
movsl
mov
lock
or
dec
lods
fistpl
cld
aaa
clc
sbb
lret
cmpsl
and
pusha
sub
push
xchg
in
xchg
icebp
popa
pop
adc
aad
push
lds
and
popa
jnp
pop
mov
popf
stos
mov
mov
push
jmp
or
sbb
popa
lods
mov
xor
xor
je
or
dec
shrl
dec
mov
xchg
fiadds
loope
xor
ljmp
dec
mov
and
pop
add
adc
push
mov
decl
test
addr16
mov
lock
lds
mov
mov
insl
adc
test
xchg
jae
icebp
shl
mov
ljmp
pop
mov
jle
ret
jbe
es
xor
add
fisttpll
or
adc
lods
in
add
mov
xor
outsl
add
pop
aad
xor
jno
shrb
jg
in
xor
pop
cmp
or
xor
dec
mov
sub
xchg
mov
jb
add
pushl
pop
xor
loope
cmp
decl
xor
add
iret
enter
pusha
inc
imulb
push
fwait
push
incb
add
and
adc
movsl
outsb
inc
push
ja
pop
icebp
add
sub
mov
jmp
incl
xor
or
dec
adc
aad
mov
add
call
jp
icebp
in
add
adc
adc
adc
inc
xor
pusha
les
mov
icebp
mov
lcall
ljmp
lock
sub
icebp
enter
and
add
sub
push
xor
call
aaa
push
jns
stos
out
or
pop
js
jmp
aaa
test
push
xchg
enter
inc
cmc
std
or
mov
ja
dec
push
dec
sub
nop
xor
xor
add
jmp
jle
popa
dec
imul
sbbl
imul
push
xor
or
sub
push
pop
aas
adc
inc
xchg
test
mov
lcall
mov
dec
or
push
inc
insl
sti
mov
push
sub
dec
add
int
inc
in
jns
fisubs
mov
mov
xchg
jb
or
movsl
mov
jns
push
in
inc
or
shrl
and
insb
test
and
dec
pop
ljmp
inc
dec
mov
testl
aam
imul
std
ljmp
jno,pt
or
push
ficomps
das
fs
push
push
push
clc
push
add
push
xchg
jg
aas
adc
pop
sub
scas
imul
sub
sub
fisubl
jns
inc
testl
push
jno
je
popa
mov
imul
adc
add
push
incl
icebp
push
push
imul
je
push
cs
loop
cmp
sbb
sbb
push
dec
pop
pop
inc
sbb
int3
adc
outsb
adc
cmp
cmpb
js
call
ljmp
dec
je
xor
cmp
loopne
repnz
adc
jl
and
incl
add
xor
jle
jbe
inc
xor
jge
cld
sub
in
aaa
inc
cli
pushl
clc
jp
xor
pop
into
insb
loopne
cmp
cmp
add
jle
push
icebp
cmp
push
push
dec
push
inc
into
es
sbb
jnp
mov
or
std
mov
xchg
and
imul
ss
imul
inc
xchg
ja
inc
dec
ds
dec
cmp
inc
cmp
dec
dec
cmp
xor
ss
shl
sub
sub
xor
cmp
add
insb
and
adc
cmp
cmp
test
lcall
jg
dec
sti
ljmp
dec
inc
xor
dec
ss
divb
cmp
aaa
inc
sub
cmp
xor
mov
mov
das
std
aaa
dec
cmp
aaa
popa
loopne
jo
cmp
cmp
pop
sbb
in
js
inc
adc
jb
pop
or
cmp
cmp
pusha
jo
push
cld
call
movsb
arpl
outsl
cmp
xor
sub
icebp
incl
or
add
mov
js
push
xchg
or
inc
jg
cs
sbb
push
repnz
ja
mov
ret
repnz
jl
cmpsb
in
jns
mov
dec
ja
sbb
dec
or
jno
or
sti
enter
mov
js
xorb
notl
jle
fnstsw
das
cmc
fildll
sub
sbb
mov
ljmp
jne
outsl
insl
adc
imul
sbbl
sbb
pop
jns
mov
inc
std
pop
inc
push
mov
or
mov
and
push
test
jae
call
nop
data16
dec
push
add
outsb
mov
insb
push
jp
sub
fwait
nop
clc
jg
inc
or
inc
push
int3
add
fisubs
and
out
loopne
clc
pop
pop
mov
add
push
add
adc
mov
add
test
xor
mov
or
adc
add
addl
adc
sub
int3
xor
xchg
rcrb
xor
add
adc
cmp
inc
mov
xor
mov
mov
sahf
push
xchg
sub
add
outsl
sub
push
stos
mov
outsl
mov
ljmp
popa
hlt
stos
loopne
das
cmp
pushl
push
add
and
and
push
sbb
sub
adc
pop
mov
call
fwait
scas
iret
les
ds
stc
fs
stos
fs
outsl
pop
clc
lcall
imul
das
outsl
sarb
jne
fnstenv
mov
test
add
data16
popa
adc
pop
clc
jg
mov
or
jno
jne
dec
ds
jb
les
adc
mov
pop
loope
sbb
outsl
mov
js
push
adc
jns
sub
les
inc
xchg
add
inc
push
pop
pop
pop
jmp
shlb
data16
jge
add
jg
pop
push
jno
shlb
fisubrl
outsb
and
cmp
lock
filds
rcll
xchg
mov
cmp
jb
js
xor
filds
push
push
stos
incl
loop
jns
xor
jb
mov
icebp
jg
dec
and
je
mov
je
dec
test
lahf
adc
or
pop
sub
pop
loopne
movsl
aaa
cmp
jp
xchg
outsl
aam
std
jb
sbb
push
test
in
sbb
sbb
mov
add
cs
mov
popa
xor
or
pop
cld
adc
push
cmp
and
fbld
push
adc
pushf
insb
ds
lds
decl
pop
or
mov
cmp
xor
xchg
icebp
and
jns
leave
cli
xchg
push
popf
jae
mov
xchg
repnz
mov
jmp
sub
test
sub
sub
push
sub
jne
icebp
cs
insl
scas
arpl
add
push
lcall
adc
sub
ja
sbb
push
jl
xchg
jmp
pop
mov
push
adc
or
stos
imul
nop
fmuls
sbb
mov
cld
push
sahf
ret
ljmp
push
mov
pushl
out
sbb
xchg
adc
inc
cmp
jmp
xlat
data16
sbb
repz
lcall
sbb
aam
jno
incl
stc
xlat
and
das
pop
in
jmp
push
or
mov
add
andb
lret
xor
xchg
mov
cli
or
stc
lds
test
or
inc
push
and
xchg
push
aad
push
enter
cmc
add
into
fisttpll
cmc
add
cltd
add
mov
nop
rcr
pop
outsl
or
add
xchg
mov
fwait
test
and
test
push
adc
xchg
dec
add
outsl
add
mov
test
sub
adc
sti
loope
fbld
xchg
inc
repnz
pop
mov
mov
pop
pushl
adc
fists
adc
add
cmc
cld
lds
movsb
jmp
adc
cld
outsl
jg
loop
stos
or
mov
ret
aad
enter
mov
lods
or
adc
mov
mov
add
out
dec
push
adc
pop
fisttpl
mov
int
lock
add
ficoml
cld
in
jb
add
cli
pop
xchg
or
enter
cld
or
sti
xchg
ljmp
div
jmp
or
xchg
sbb
adc
movsb
mov
mov
add
adc
int
imul
sbb
sub
cmp
push
sub
jae
push
addb
addl
inc
dec
pop
inc
push
dec
adc
fiaddl
mov
pop
outsb
push
mov
xor
adc
cmovbe
add
imul
bound
jl
sbb
sbb
or
fmul
mov
es
jp
insb
sbb
adc
jae
or
inc
mov
cmp
cmp
push
lret
cmp
icebp
mov
inc
ds
cmp
cmp
cmp
inc
cmp
aaa
xor
cmp
or
dec
xchg
add
mov
add
inc
shll
add
popa
mov
cld
mov
adc
add
mov
setno
cltd
pop
sub
in
sub
pop
dec
les
and
adc
fcompl
push
add
xor
call
or
dec
daa
and
ss
data16
xchg
pop
mov
sub
push
daa
inc
xor
xchg
mov
pop
dec
adc
lcall
dec
aad
add
je
decl
pop
insl
outsl
jle
inc
fs
cmp
or
lock
fcoms
lret
aas
negb
push
fs
sbb
ja
inc
jle
and
cmp
push
nop
fldz
or
aaa
out
sbb
mov
sbb
repnz
pop
out
or
jae
mov
ffreep
lret
inc
out
add
push
insl
dec
xor
adc
xlat
test
pop
aas
stc
jmp
add
sbb
and
aaa
out
sti
mov
or
cs
imul
shl
add
inc
stos
pop
xchg
loop
dec
cld
cmp
adc
and
cli
popl
sbb
mov
mov
push
push
mov
mov
frstor
xlat
mov
push
push
inc
fistl
lods
std
mov
pop
pop
movb
mov
fisttpl
cmpsl
push
mov
in
out
int3
stc
and
fisubrl
mov
jecxz
xchg
or
enter
fdiv
mov
jge
mov
repz
inc
push
push
aas
clc
pusha
imul
adc
fcmovnb
int
mov
ja
incl
data16
pop
sub
pop
pop
dec
jle
decl
pop
test
push
adc
sar
mov
push
mov
jg
ret
adc
sub
pop
arpl
mov
pop
pop
mov
idivb
or
xchg
dec
add
cmp
push
lret
push
mov
mov
inc
repz
xlat
add
imul
ds
push
or
movsl
sti
jg
cmp
outsb
push
lock
xchg
and
pushl
mov
add
mov
fisubs
lea
cld
decl
jb
mov
push
push
jnp
jmp
insl
aaa
or
jle
out
adc
or
dec
insb
sbb
aam
inc
mov
test
stc
lock
or
das
cmc
mov
packsswb
popf
neg
lods
mov
xchg
pop
loop
pushl
xchg
push
pop
lock
mov
mov
loope
mov
dec
das
mov
pop
or
sahf
arpl
outsl
push
nop
leave
out
andb
xor
push
mov
mov
pop
sub
push
pop
nop
jne
adc
lcall
in
add
fisttps
fs
lock
mov
jmp
ret
popa
pop
xchg
adc
lea
dec
or
mov
mov
push
aas
or
dec
or
adc
dec
xchg
adc
or
in
cltd
inc
aaa
mov
loopne
fistl
outsb
cmp
rorb
scas
dec
shll
sub
sbb
cmp
data16
scas
xor
push
adc
clc
jecxz
cmp
lds
les
pop
sti
decl
or
inc
scas
push
nop
add
or
inc
xor
or
push
pop
lods
mov
pop
push
dec
sar
dec
lahf
shrb
pop
sahf
fwait
shrl
testl
or
bound
sarl
pop
js
push
sbb
mov
addr16
inc
pop
fiadds
pop
pop
in
fstl
loope
outsl
test
cmp
test
adc
sub
lods
or
mov
add
aaa
xchg
aad
mov
mov
mov
hlt
dec
mov
rcll
pop
cmpsl
popa
lods
shll
in
push
fnstsw
and
dec
aad
jb
adc
mov
or
jecxz
ljmp
pop
es
jmp
fstp
das
std
cmovb
pop
pop
push
push
cmp
imul
outsl
xchg
lea
pop
pop
push
stc
mov
pop
jnp
mov
dec
mov
push
daa
nop
bound
push
push
rcrb
hlt
roll
outsl
jge
mov
repz
dec
scas
fs
sbbl
test
stos
adc
jg
aaa
scas
xchg
sti
cld
nop
pusha
jp
xchg
mov
nop
pop
gs
int
pop
nop
rorl
and
out
xchg
hlt
aas
lcall
or
pop
add
inc
push
ficomps
cld
fs
test
shrb
aaa
cmp
add
adc
xchg
mov
adc
imul
fdivr
test
aas
notl
mov
xor
mov
or
fdivs
adc
or
sbb
or
or
shl
xlat
fs
cmpsb
into
jo
jmp
imul
or
or
sub
adc
rorb
or
pop
js
cmp
cmp
mov
aaa
mov
pop
adc
jecxz
enter
lock
dec
sahf
lret
sbb
out
mov
pop
insl
pop
push
xchg
lock
inc
adc
inc
aas
js
test
in
pop
ret
bnd
popf
fmull
movsb
pop
in
stos
jg
fsubs
and
xor
xor
and
addr16
shlb
inc
mov
aam
arpl
sarb
xlat
mov
inc
mov
sub
and
or
punpckhwd
xorl
daa
pusha
or
adcl
pusha
xor
mov
nop
push
mov
pusha
mov
jge
mov
mov
xchg
mov
push
ret
test
inc
cwtl
xor
popa
or
adc
jne
mov
lret
movsb
outsl
mov
imul
mov
or
push
leave
mov
mov
sub
int3
jns
mov
jmp
rcll
rol
xchg
es
xor
pop
sarb
inc
and
mov
roll
icebp
popa
mov
lods
repnz
mov
mov
cld
fisttpl
arpl
dec
adc
aas
enter
lret
mov
xchg
and
mov
push
in
idiv
fildl
scas
pop
inc
js
adc
les
ss
lret
mov
or
push
aas
repnz
rcll
inc
nop
pop
sub
adc
mov
neg
ret
lret
roll
pop
fs
icebp
popa
dec
push
sbb
mov
ljmp
adc
arpl
xor
xor
cmpsb
test
in
adc
jmp
lock
or
repnz
mov
push
pop
dec
loope
fs
xor
mov
add
mov
js
mov
xor
pop
pop
pop
mov
pushf
or
push
testl
insl
arpl
push
mov
xchg
xor
nop
int3
cmp
mov
mov
sub
popa
in
push
xlat
inc
sbb
dec
cs
sub
orl
call
mov
adc
mov
cmp
mov
outsb
push
sub
xor
pop
xchg
jnp
mov
shlb
aaa
arpl
adc
dec
je
movb
pop
pop
mov
push
jns
add
add
mov
imul
adc
push
inc
pop
mov
negb
nop
add
or
adc
add
xor
js
and
mov
xor
fsubrs
push
pop
lea
sub
push
movsb
mov
cmp
mov
rcr
jecxz
add
notb
test
in
lret
xor
insl
repz
lds
aas
inc
pop
out
mov
std
gs
stos
andb
movsb
and
ret
call
mov
movsl
mov
imul
sub
in
aaa
std
test
fs
mov
push
xor
xchg
mov
pop
or
push
or
insl
adc
js
nop
mov
icebp
xor
adc
xor
int3
or
imul
ret
pop
cmpb
mov
push
dec
ljmp
addb
pop
cld
push
decl
xor
fistps
loopne
cld
loopne
cld
fcomps
dec
xchg
mov
push
add
ret
xchg
lret
adc
aaa
or
mov
pop
les
inc
pop
pop
lahf
pop
invd
outsl
test
sub
mov
test
lock
mov
mov
pop
inc
cmc
aas
lret
add
adc
mov
mov
or
or
cmp
nop
lret
adc
incb
add
pop
jno
ret
sbb
stc
inc
repz
adc
fdivs
aaa
push
cmc
and
and
pop
insb
movb
pusha
hlt
std
icebp
mov
dec
push
jnp
repnz
lret
or
mov
into
aad
push
arpl
outsl
sbb
and
dec
or
arpl
rolb
fildll
mov
std
xchg
xchg
mov
xchg
or
int
negl
clc
jmp
test
cmc
xchg
pop
xor
adc
aad
ret
push
scas
dec
and
push
in
dec
push
nop
mov
enter
and
ret
add
adc
jae
sbb
adc
mov
pusha
xchg
aaa
mov
ds
pop
adc
lret
in
iret
sub
nop
lret
cmp
xchg
movsb
or
in
movsb
adc
aad
leave
cmovs
mov
or
stos
nop
dec
adc
mov
incl
push
mov
inc
xchg
or
add
jo
call
inc
sbb
fildll
push
stc
sbb
xlat
jne
add
rcr
jecxz
fidivrl
dec
push
pusha
mov
jg
inc
fdivs
or
mov
xchg
fsubl
arpl
fmuls
adc
and
out
push
xchg
xor
test
inc
mov
sbb
mov
rol
xchg
or
or
cmpsb
fdivs
data16
jmp
sbb
jb
shlb
add
xchg
mov
insl
adc
jmp
push
xor
pop
lock
push
jne
sub
push
sbb
int
dec
outsl
cli
sbb
pop
pusha
pop
dec
fstpt
fcoms
cli
popa
insl
insb
xchg
scas
inc
jns
test
repz
adc
cmp
cmpsb
lcall
jne
adc
xor
mov
xor
or
push
xor
xor
pop
shl
dec
xor
xlat
xchg
clc
ret
mov
xchg
add
pop
push
push
ret
and
adc
fdiv
fwait
call
cmp
ret
dec
mov
fmull
movsb
lds
add
rorb
adc
fsubs
sub
scas
adc
mov
adc
or
or
mov
dec
mov
aaa
js
out
rcrl
fildll
ret
mov
or
call
int
in
mov
lods
add
jle
sbb
push
mov
sbb
in
lods
inc
lret
sub
insl
push
and
test
gs
pusha
push
mov
xor
sbb
fs
rcrb
xchg
test
lret
mov
add
and
dec
adc
mov
test
pop
or
pop
imul
or
or
mov
adc
jnp
inc
loopne
div
dec
mov
mov
sbb
adc
fcoms
or
pop
or
imul
add
push
and
dec
pushf
and
mov
orl
xchg
jle
adc
clc
jb
bound
inc
mov
cmp
mov
push
call
xchg
dec
push
pusha
lods
sub
xor
pop
pusha
not
xor
aaa
fiadds
repnz
or
frstor
cmp
or
pop
sti
aas
roll
addl
cmpsl
stc
or
push
popa
cmpsb
icebp
pusha
adc
mov
js
and
push
lock
mull
sbb
push
lods
ljmp
popf
push
jmp
nop
or
jle
cwtl
add
mov
adc
xor
mov
sbb
jmp
icebp
lret
push
nop
idivl
mov
dec
mov
sub
adc
xchg
pop
or
adc
jmp
arpl
dec
hlt
adc
or
sub
pop
adc
fildl
inc
xchg
mov
xlat
sbb
rolb
test
pop
pop
arpl
mov
lods
mov
inc
pop
pop
dec
loopne
add
add
xchg
inc
dec
js
arpl
mov
xchg
mov
bound
cld
enter
mov
sbb
mov
out
pop
insl
or
je
xchg
push
xchg
or
cmp
dec
adc
je
int3
mov
sbb
ret
jb
js
sbb
pop
es
es
sbb
loop
jp
push
sbb
xor
aas
mov
pop
mov
pop
insl
cli
pushf
movb
jecxz
mov
push
les
adc
xchg
push
dec
jecxz
std
mov
adc
pusha
pop
ss
or
pop
or
fs
pop
rolb
into
mov
jp
fbstp
idivl
daa
cmpsb
or
mov
pop
loope
loope
repnz
mov
pop
push
xchg
mov
fsubrs
push
pusha
push
and
scas
pusha
rolb
ds
mov
aaa
lcall
or
ret
inc
shl
js
push
mov
cmovno
push
mov
int
pop
mov
mov
mov
sbb
push
ret
adc
jecxz
sbb
fldenv
loopne
jmp
test
sub
das
pop
les
stos
cld
fmull
aaa
shrl
mov
mov
insl
push
xor
xor
test
jae
or
sub
mov
xor
and
or
aad
sahf
push
push
mov
push
pop
sub
sahf
pusha
lock
mov
jecxz
arpl
in
ret
icebp
test
test
outsw
lret
add
cld
pop
cmp
sbb
push
xor
pop
popa
sbb
cmp
push
xor
test
pop
mov
pop
cmp
fldt
int
lock
sub
adc
sub
inc
cmp
ja
pop
std
xor
push
sti
lretw
mov
mov
or
sbb
mov
jne
fisubl
lds
dec
and
pop
ja
lret
adc
in
jecxz
lds
sbb
fsubl
sub
das
aad
nop
fadds
sub
icebp
ljmp
fcomp
mov
stc
xchg
dec
nop
cmp
leave
imul
push
lret
out
out
adc
adc
adc
jecxz
jl
or
pushf
xchg
push
cs
pushf
leave
sbb
addl
adc
bound
or
outsl
xor
aam
aas
and
cmpsl
les
stos
inc
rolb
push
dec
mov
das
cmp
xor
iret
inc
push
pop
mov
lret
loop
fildl
push
xchg
cld
ret
mov
loope
popf
aas
sar
leave
andl
inc
hlt
roll
lcall
and
mov
jl
lock
xchg
imul
pop
movsl
mov
lret
adc
mov
and
js
gs
mov
sbb
jmp
dec
mov
push
pop
mov
ret
leave
popf
ljmp
push
fiaddl
loope
cwtl
inc
loop
fcmovbe
dec
mov
sub
mov
and
cmp
sub
cwtl
or
or
imul
dec
cmp
imul
das
loopne
cld
dec
mov
mov
add
das
and
loopne
movsl
inc
sub
nop
fidivrs
add
or
lea
pop
xor
cli
mov
dec
ja
icebp
lret
pop
mov
dec
sub
aam
mov
pop
push
cs
fdivrl
mov
shlb
push
and
fsubs
mov
es
cli
movsl
out
insl
cwtl
sbb
mov
aam
push
push
adc
addl
pop
test
sbb
inc
hlt
or
test
testl
mov
xor
lods
arpl
xor
lods
das
rcll
in
and
fldcw
lahf
bound
xchg
fdivl
add
or
mov
mov
into
lret
adc
test
popf
dec
int
or
push
or
adc
push
int3
mov
sub
sbb
mov
popf
hlt
pop
in
mov
fs
xchg
ret
and
lock
test
shl
pop
pusha
or
mov
stc
pop
cmp
sbb
pusha
loopne
loopne
push
adc
adc
pop
inc
sti
ret
pop
mov
iret
cmp
inc
jecxz
fnsave
adc
xchg
sbb
mov
int3
ja
mov
adc
or
je
sbb
or
add
xor
or
loop
pop
inc
lock
hlt
jno
xchg
pop
or
inc
or
add
sbb
or
pop
dec
popa
pop
mov
sbb
imul
fistpl
in
cmp
adc
sub
xor
inc
cmp
inc
inc
adc
fsubrs
xor
xchg
mov
push
negb
hlt
push
scas
in
imul
dec
or
adc
xor
movsl
or
insl
jp
in
xchg
push
mov
or
xor
aam
outsl
pusha
jl
mov
inc
adc
scas
andb
repz
fsubr
mov
mov
sbb
mov
or
xor
lock
subb
lahf
xchg
pop
push
aas
fidivrs
inc
testl
fisttpl
xor
push
imul
leave
test
outsl
sub
movsl
int
fsubr
das
sti
adc
dec
mov
jl,pt
sub
inc
leave
test
push
mov
xchg
xchg
or
mov
add
or
inc
pop
fldenv
xor
test
lds
pushf
leave
test
push
push
lods
cld
aad
sub
jg
aam
idiv
faddp
aad
dec
jge
pop
jge
dec
lea
cmpsb
xor
rclb
pop
mov
add
mov
jp
adc
mov
adcb
jge
insl
nop
test
and
stos
xor
jmp
xchg
sbb
sahf
fistl
dec
xchg
pminsw
push
adc
movsl
adcl
pop
cmpb
pop
and
cmp
mov
std
xor
mov
cwtl
fildll
subl
lods
dec
sbb
xchg
faddl
pop
shrl
enter
mov
dec
lea
sub
pop
add
fisubrl
insl
xlat
jge
stos
clc
and
push
imul
pop
mov
adc
ja
imul
or
dec
sub
repnz
scas
mov
incl
aam
add
pop
add
jbe
pop
or
shll
int
pop
ds
inc
mov
pop
cmpl
push
fistpll
adc
push
in
push
xchg
lods
insl
mov
jbe
cli
dec
sbb
xor
mov
mov
xor
cmp
sub
pop
inc
xchg
adc
adc
lds
inc
ljmp
mov
frstor
xor
adc
mov
adc
push
mov
sbb
cmp
mov
push
aas
adc
lds
dec
push
mov
dec
cld
js
adc
sbb
xor
test
pop
pusha
inc
and
cld
popa
sbb
enter
pop
mov
mov
adc
sbb
lds
insl
and
pusha
stos
pop
mov
pop
cmp
sub
inc
jmp
inc
jge
rol
test
push
movsb
xlat
push
mov
inc
sub
lods
sbb
cmp
rclb
repnz
pusha
ss
mov
mov
pop
mov
in
fiaddl
xor
loopne
push
push
sbb
and
add
loop
pop
or
int3
or
sahf
adc
xorb
push
mov
jl
and
mov
dec
stc
jecxz
mov
pusha
mov
aaa
mov
adc
xor
xor
push
inc
flds
lret
gs
inc
test
mov
dec
inc
jmp
nop
cmc
cld
loopne
loopne
testb
cmp
jecxz
outsl
and
mov
or
aaa
xchg
pusha
shl
pusha
insl
pop
divl
lds
insl
scas
or
pop
loop
imul
sub
mov
adcl
test
xor
loop,pn
sarl
cwtl
rcrb
pusha
mov
pop
mov
shlb
ret
in
adc
push
xchg
or
repz
mov
jne
and
sbb
loope
xchg
xor
rcll
jl
sbb
cs
sub
jmp
mov
inc
or
or
dec
shlb
fcmovne
out
icebp
lret
pop
pop
push
pushaw
outsl
cmp
xor
daa
sub
adcl
adc
sbb
ja
xchg
cmp
xchg
mov
xchg
push
cmp
rcll
inc
movsb
pusha
mov
inc
add
cld
inc
mov
dec
ret
push
loope
outsl
fcoml
mov
popf
les
jno
sbb
int3
outsb
cmp
imul
xor
movsl
pop
rorb
pop
inc
sub
mov
sbbl
leave
push
xchg
dec
mov
popf
addr16
pop
lock
pop
or
adc
dec
shrb
push
in
sbb
outsb
movsl
jmp
mov
and
sbbb
cmpsl
repnz
arpl
or
mov
pop
push
in
adc
inc
or
push
dec
inc
mov
inc
push
or
jge
rorb
cmp
pop
rorb
cmp
in
mov
push
clc
sub
cmp
lods
pop
xchg
push
imul
xor
mov
or
sub
mov
fstl
daa
nop
aad
repnz
mov
inc
or
lock
enter
add
test
in
push
rorb
pop
push
in
pushf
les
popl
mov
adcl
add
hlt
imul
add
mov
daa
jecxz
xor
pop
jp
xor
test
aam
das
mov
arpl
outsl
mov
or
mov
sbb
sarl
mov
pop
xlat
inc
ljmp
dec
add
dec
inc
add
push
sbb
shll
dec
mov
add
int
out
in
mov
prefetchnta
pop
out
icebp
jno
clc
lods
jbe
mov
inc
or
movl
arpl
adc
int
pop
call
pop
shl
dec
pop
cmp
xchg
lret
xchg
daa
xlat
ja
jo
cmp
rorl
in
push
loopne
das
loop
pusha
jecxz
js
push
cmovae
fists
lds
aaa
inc
in
or
dec
nop
lret
sub
mov
movsb
enter
sti
xchg
mov
aad
push
jp
bound
jmp
mov
push
sarl
fucomi
add
std
push
xchg
adc
or
arpl
cmp
lcall
mov
sub
dec
lret
xchg
push
mov
movsb
add
sbb
std
cs
clc
push
inc
xlat
mov
cmp
insb
out
inc
adc
rorb
lock
adc
adc
fdivrl
lret
into
xchg
rcl
stos
sbb
push
push
push
lock
orb
sub
ret
ret
pop
adc
push
cmpsb
pop
xor
fistpll
pop
les
idiv
lahf
into
push
nop
shrb
sub
xor
push
sub
lcall
ret
cmpsb
dec
mov
dec
cmp
xchg
sti
adc
or
jnp
mov
adc
pminub
jb
push
insl
test
mov
pop
out
push
mov
std
mov
sbb
push
or
lods
push
fisubs
out
out
add
add
push
dec
insb
pop
adc
ffreep
fisttpl
dec
mov
cmp
jp
jne
outsl
inc
sbb
or
js
inc
flds
test
pop
push
mov
std
push
pop
mov
pop
shll
or
pop
push
mov
sbb
mov
lea
push
or
mov
push
xor
lds
inc
cmpsl
push
xchg
push
clc
mov
scas
inc
sub
or
loop
cmpb
loopne
js
and
or
and
pop
bound
jae
cmpsl
adc
cmp
sahf
imul
adc
jo
sbbb
out
and
mov
and
rcrb
in
pop
xchg
cli
jle
loope
in
mov
int
xor
xchg
lret
cmpsb
push
sti
mov
pop
mov
pop
add
in
repnz
or
mov
call
scas
in
xor
jae
or
push
xchg
cmp
lods
out
into
movsb
xor
rcrl
jns
dec
mov
mov
ficompl
xor
cmp
negb
and
mov
adc
or
xchg
cmp
pop
arpl
cs
push
imul
ficoms
pusha
mov
xor
fcmove
sub
orl
rol
bound
jae
push
les
lods
or
adc
out
xor
sub
insb
push
sbb
push
mov
test
negb
xor
and
sub
pop
dec
cmp
insl
mov
xchg
fstps
mov
sub
adc
xchg
adc
xlat
xor
inc
jmp
or
xchg
scas
adc
and
cmp
std
or
in
adc
push
jae
adc
xor
call
enter
adc
inc
pop
push
jmp
or
stos
bound
mov
add
rcl
adc
xor
adc
or
add
cmp
bound
sbb
cmp
pusha
push
pop
adc
or
pop
mov
xchg
addr16
movsb
pop
pop
push
addr16
jecxz
roll
fxch
cld
call
arpl
lods
mov
sub
loopne
sbb
sub
adc
and
arpl
lds
dec
popf
and
cmpsb
mov
inc
mov
push
lahf
insl
adc
int3
js
dec
insl
add
mov
xor
jne
cmp
jmp
stc
insl
mov
adc
ret
in
pop
xchg
and
int3
lret
lret
jle
test
sti
pop
or
push
mov
adc
nop
aam
arpl
mov
mov
and
inc
adc
push
test
cld
fistps
shrb
lret
stos
scas
fldt
sarb
loop
or
mov
or
mov
mov
jbe
cld
fistps
dec
sbb
shll
adc
rclb
xor
push
gs
xorl
add
jbe
cli
daa
push
loope
fs
xchg
rorl
loope
in
pop
dec
outsl
aam
xchg
lock
mov
mov
jo
hlt
adc
pop
push
aam
or
dec
dec
cmp
pop
imul
sbb
insl
incl
and
aas
in
test
and
xor
ficompl
sbb
xor
in
inc
adc
and
ss
pop
call
imull
cs
into
divl
xor
test
push
sub
aaa
push
inc
jmp
hlt
jle
sbb
xor
inc
jmp
mov
cmp
popa
in
out
cmp
enter
jle
sub
decb
test
jcxz
adc
pop
ja
pop
ss
and
sbb
push
lods
inc
mov
loopne
pusha
lds
mov
jo
adc
out
sub
xor
xor
gs
in
adc
out
sbb
add
push
repz
mov
int
push
inc
xchg
syscall
mov
sub
lret
mov
lods
inc
add
sub
xchg
cmp
cld
fdivrp
add
ss
inc
inc
pop
pop
repz
xchg
fadds
stos
jmp
lea
adc
testl
jl
pop
and
call
or
sub
xor
dec
fcmovb
int
push
dec
movsl
push
lods
add
xor
xchg
test
rcl
lret
lods
mov
add
and
insl
outsb
dec
stos
sbb
insl
mov
ret
pusha
adc
fiaddl
pop
sub
insb
enter
out
xor
jne
arpl
test
in
xchg
aad
adc
add
aam
mov
dec
add
loop
or
cwtl
dec
mov
hlt
mov
les
bound
push
or
jge
or
int3
clc
and
push
test
mov
js
enter
sbb
clc
jg
push
jbe
inc
clc
cld
fnstsw
fstpt
repz
jae
test
scas
add
dec
push
sahf
dec
js
pusha
push
stos
dec
pop
loopne
pop
shlb
insl
jne
mov
addb
mov
test
lcall
pop
push
in
sbb
add
imul
adc
xchg
js
jo
ljmp
xlat
jo
fisttpll
ror
stos
sub
xchg
add
sbb
imul
push
popf
lds
or
jl
jnp
dec
aas
cld
add
cmpsb
xchg
cmp
push
pop
int3
insl
adc
out
arpl
test
jno
int
sub
and
xor
and
in
out
dec
cwtl
pop
aas
mov
jle
jne
jmp
jle
enter
pusha
xchg
push
movsl
pop
pusha
jle
fdivrs
mov
imul
in
ja
adc
xchg
repz
xor
icebp
ret
xlat
dec
adc
push
cmpsb
or
imul
or
lods
xchg
ds
sub
jo
stos
push
nop
push
push
dec
pop
pop
addb
jl,pn
inc
rcrb
les
push
lret
loop
sbb
test
adc
inc
int
ret
lods
sbb
ss
cmc
cmp
ret
dec
or
push
ficoml
xor
push
cmp
jg
and
add
iret
enter
and
fsubrl
icebp
or
cmp
mov
insl
mov
nop
pop
push
cmp
and
xchg
sub
mov
stos
sbb
sbb
jmp
adcb
popf
sarl
pop
in
or
mov
jmp
ffreep
ljmp
cld
fdivrs
loopne
cmp
insl
jno
mov
lds
mov
lcall
adc
cmp
rol
dec
leave
mov
inc
aaa
and
pop
mov
jnp
xlat
in
lahf
sbb
mov
xchg
cmp
jge
inc
lret
sahf
dec
scas
out
or
scas
rcll
movhps
popa
fmuls
jge
mov
push
mov
int3
adc
std
pushf
xor
pop
jnp
xchg
mov
daa
mov
push
push
mov
push
xor
in
arpl
and
dec
movsl
loopne
arpl
leave
or
mov
ror
add
icebp
adc
outsb
test
sbb
push
in
xchg
clc
lahf
popa
rorl
cmp
inc
into
hlt
inc
loope
mov
ret
jno
adc
pop
sti
aam
loope
pop
sub
or
incb
sub
xchg
cmpsb
xchg
pop
xorb
or
arpl
testb
mov
aas
mov
imul
adc
rolb
addb
cmp
xchg
notb
shlb
sbb
fistl
dec
fistpll
mov
dec
and
leave
test
enter
imul
cmc
or
cmpsb
xchg
mov
movsl
out
sbb
xchg
adc
cli
popl
jbe
repz
cmpsb
jno
dec
pop
push
push
pop
testl
adc
inc
sub
jbe
addb
push
lods
mov
mov
push
sbb
push
push
push
push
add
mov
xlat
cmp
call
mov
inc
and
leave
lret
test
les
aas
mov
push
movsl
mov
std
sbb
cmp
nop
iret
jl
xchg
sbb
mov
jns
mov
inc
imul
aam
int
lcall
into
lcall
adc
mov
or
lods
shr
pop
xchg
fadds
dec
faddl
xor
pop
xor
cltd
iret
andl
push
lock
insl
pop
pop
dec
sbb
aad
imulb
fcmovb
aas
add
inc
hlt
mov
dec
pop
mov
rorb
adcl
test
or
jecxz
imul
mov
mov
fs
adcl
mov
mov
fwait
or
adc
cld
aad
mov
into
mov
out
mov
ret
shlb
mov
int
pop
cmp
pop
outsl
add
fistps
popa
mov
adc
pop
lods
add
xor
or
push
pop
xor
pop
mov
sub
arpl
cmp
test
enter
sbb
popa
mov
shll
xor
jecxz
les
inc
insb
inc
pusha
dec
sbb
sub
add
jg
xor
out
dec
nop
aam
adc
in
mov
ret
aas
rol
inc
add
cmpsb
pop
xchg
scas
popf
xchg
test
out
mov
insl
sbb
mov
pop
push
mov
aaa
or
add
push
mov
rol
imul
sti
fdivs
sub
mov
pop
pusha
mov
shll
jo
push
mov
mov
xchg
pop
mov
mov
dec
test
add
pop
out
lahf
nop
jecxz
ss
adc
add
fucomip
sbb
sbb
sti
pop
cmp
les
mov
sub
jns
je
mov
hlt
out
xchg
push
repz
shlb
pop
nop
add
scas
call
mov
mov
nop
dec
sub
pop
adc
in
shlb
movsb
enter
jmp
or
and
ficompl
cmp
push
inc
int3
fwait
dec
cli
push
fs
mov
adc
add
imul
or
jmp
inc
clc
lret
pop
mov
cli
mov
idivb
xlat
dec
pop
arpl
cmp
add
ja
mov
test
imul
leave
insl
cmp
xchg
xor
or
xor
inc
adc
jb
out
lods
pop
inc
dec
shrb
or
mov
daa
pusha
cmp
rorb
les
or
leave
or
xor
jecxz
mov
bound
outsl
daa
aaa
lcall
loope
fisttpll
adc
push
out
sbb
pop
es
pop
and
jnp
cmp
test
imul
mov
pop
lock
arpl
mov
push
or
jge
jbe
sbb
xorl
xchg
fiadds
mov
mov
dec
xor
jg
adc
ss
sbb
xor
lea
in
add
add
sbb
out
or
push
xlat
rclb
out
inc
jmp
push
pushf
jmp
movsb
adc
or
addr16
adc
inc
dec
pop
xor
adc
ret
or
cltd
pop
xchg
rclb
push
or
jnp
or
aaa
inc
sub
mov
shll
outsl
sbb
or
call
mov
adc
loopne
push
andl
ja
inc
cmc
pop
or
jns
fisttpl
aad
push
dec
add
sbbl
notl
sbb
jmp
cld
mov
and
dec
cmp
test
std
mov
dec
mov
mov
scas
mov
out
cmpl
jp
adcb
add
sbb
inc
or
loope
xor
outsb
sub
mov
push
movsl
push
lods
add
orb
shrl
xor
int
mov
out
xor
fdivrs
and
movsl
popf
xchg
cmp
ss
fwait
pop
and
sti
xor
frstor
lds
jno
lea
loopne
in
popa
lods
stos
les
or
push
sbb
stos
and
pop
test
xchg
xchg
or
add
stc
dec
mov
lea
mov
std
and
insl
jbe
sti
sbb
push
hlt
mov
add
js
mov
add
inc
fsts
push
mov
mov
mov
xchg
mov
unpcklps
mov
das
setne
jo
cmp
pop
shrb
lock
mov
pop
or
push
pusha
add
pop
not
aas
test
or
pop
les
ret
adc
insb
lds
xor
subl
stos
das
sbb
rcll
insb
push
lods
mov
add
and
mov
push
cmpb
sub
enter
out
lret
push
pop
test
loopne
bound
aad
iret
cmp
push
movsl
ss
sub
andl
adcb
jl
adc
imull
pusha
test
aam
clc
pop
jg
loope
and
mov
es
sbb
mov
and
inc
cmp
ds
call
sub
adc
mov
pop
push
adc
pop
mov
leave
sbb
push
nop
loop
xorl
push
and
shr
add
mov
hlt
or
lcall
inc
fisttps
push
inc
lods
ret
xor
jge
adc
and
jb
out
in
mov
adc
adc
mov
xor
jb
in
and
mov
push
in
pop
andb
insl
push
inc
jne
cwtl
jmp
and
mov
cmc
les
insl
cmp
hlt
mov
test
sub
pop
aaa
pop
sbb
push
iret
ret
inc
shl
lahf
js
mov
mov
cmc
xlat
addl
add
push
mov
bnd
sub
xor
push
dec
or
and
loopne
out
inc
and
dec
and
and
or
pop
adc
mov
jb
or
or
adc
hlt
and
test
test
push
jne
insb
dec
push
fsubrl
push
fistpll
lret
mov
inc
adc
push
adc
jp
mov
mov
nop
sbb
cmp
imul
sbb
insl
mov
inc
lret
stos
mov
xor
add
add
sbb
lds
dec
testb
insb
mov
add
mov
cmpsl
dec
lock
jnp
adc
lcall
das
cmp
sub
mov
arpl
test
cwtl
cmc
dec
dec
incl
sub
xor
mov
sbb
in
aam
mov
decl
dec
fucomi
jo
adc
lcall
push
inc
mov
loop
mov
imul
bound
cld
xorl
pop
decb
sbb
push
push
sbb
lcall
xor
fst
out
jne
movsl
mov
mov
in
push
and
jbe
pushl
push
shll
adc
inc
mov
pop
movsl
hlt
xor
fmull
mov
lods
sub
and
call
jmp
call
pop
data16
dec
or
in
mov
rorb
mov
and
push
xchg
lahf
jecxz
sbb
cli
lcall
inc
std
popa
xor
mov
lea
or
sbb
dec
dec
sti
sar
aaa
ds
scas
clc
sub
xchg
insb
orl
adc
mov
movsl
inc
dec
ret
fists
xchg
lods
lods
outsl
sbb
pop
cli
sbb
lea
inc
lock
decl
call
aad
inc
adc
subb
or
clc
call
push
rolb
jno
mov
pop
inc
cmc
cmp
cmpsb
add
incl
mov
jb
or
daa
mov
fcos
pop
xor
mov
stc
xchg
cmc
testb
test
jmp
push
push
adc
enter
xchg
dec
xorb
dec
cmp
mov
rol
jns
nop
lcall
sbb
xor
or
mov
flds
lods
mov
or
fistl
stc
inc
out
testl
loop
xchg
jle
ss
js
pushl
mov
jno
cli
int
pop
xor
repnz
out
jecxz
or
pop
push
pop
jp
shll
test
dec
in
aaa
ljmp
xor
dec
aad
pop
cmp
call
push
jbe
pop
cmovne
mov
incl
cmpsl
mov
xchg
xchg
icebp
mov
mov
cs
xchg
lcall
cld
mov
xlat
mov
cs
sbb
add
add
pop
in
pushl
push
stos
add
and
add
popa
add
push
xorb
ret
pop
sub
ljmp
shrb
cmc
add
pop
adc
rcl
and
push
cli
push
sbb
movsl
gs
lcall
js
insl
rorb
call
pop
xor
sbb
sub
insl
les
aam
arpl
pushl
lcall
and
push
mov
sub
lret
fwait
mov
jmp
fldcw
adc
push
pop
in
mov
xor
std
lcall
adc
pop
fbld
cld
test
data16
sub
inc
xor
mov
aam
push
cmp
xor
cwtl
pop
test
jb
daa
in
stos
cld
mov
inc
bound
push
xchg
in
cmpsb
pop
jno
mov
fcmove
mov
push
xor
das
cs
mov
outsb
jle
outsl
cmp
int3
mov
aam
daa
jmp
pop
pushl
mov
aaa
sbb
mov
mov
outsl
jnp
jg
mov
idivb
popf
out
test
lea
sub
push
push
mov
shlb
and
lcall
or
jg
call
push
sbb
fsubs
into
cmpsl
sbb
in
mov
mov
or
inc
inc
outsb
dec
cltd
push
sub
out
call
push
push
cmp
and
sub
mov
out
push
imul
out
rclb
pop
sub
cmp
push
mov
clc
pop
in
jle
xchg
jo
jl
mov
cmpsl
icebp
pop
std
test
push
insl
jno
sbb
les
sbb
xchg
cli
xlat
roll
pop
insl
mov
imul
je
pop
int3
sub
push
rcrb
stc
daa
adc
pop
pop
push
loop
jmp
lahf
aaa
xor
out
in
lret
push
push
loop
ljmp
push
fadds
and
xor
push
and
add
xchg
in
es
push
pushf
mov
fisttps
sbb
outsl
decl
aaa
mov
das
icebp
jg
cmp
cmpsb
fstp
dec
je
dec
aaa
and
or
ljmp
mov
out
jecxz
xchg
sahf
aad
add
push
idivb
rolb
push
clc
dec
jmp
xchg
inc
mov
inc
sub
fs
add
jae
add
push
mov
xor
pusha
mov
aaa
leave
rcr
dec
imul
fucomip
daa
cwtl
jmp
push
sub
add
ret
fucomip
clc
outsl
sbb
sbb
mov
jmp
xchg
insb
movsl
add
push
sub
xor
out
sbb
bound
jge
pushl
movsl
sbb
fwait
into
cmp
imulb
pop
push
mov
sub
mov
sub
cmp
shll
pop
sar
or
js
push
cmp
orl
mov
jo
sbb
subl
data16
out
cli
add
mov
aas
sbb
ds
and
int
dec
inc
into
mov
ja
icebp
movsb
andb
test
test
mov
call
pop
icebp
ljmp
jmp
subb
add
push
jl
mov
xchg
insb
pop
add
push
insb
cmpsl
lret
or
or
lcall
outsl
psrld
scas
movsl
jns
rcr
int3
nop
lea
testb
lock
fwait
ret
std
pushl
push
stos
fnstsw
pop
cmp
cltd
dec
outsb
pop
dec
movsb
adc
out
mov
ljmp
sub
jno
pop
sub
push
in
xchg
in
sub
les
mov
ficomps
jbe
mov
aas
mov
sbb
cld
stos
stos
xor
scas
jne
lock
sbb
mov
test
lea
mov
mov
adc
mov
pop
scas
loopne
outsl
mov
sub
jmp
mov
test
fmull
xchg
inc
incl
cld
and
cmpl
or
jmp
or
in
mov
cltd
in
cmp
push
je
enter
pop
aaa
jae
push
into
clc
incl
and
test
mov
enter
in
or
fistps
ret
mov
push
enter
call
xor
out
and
jecxz
jbe
cmp
adc
jns
gs
pop
ret
xor
and
cli
incl
aas
pusha
xor
ret
xor
inc
outsb
leave
ss
xchg
and
dec
pushl
clc
call
xchg
es
cli
pop
jne
cmpsl
jp
mov
jg
pop
or
sbb
ljmp
xchg
out
loopne
ss
mov
mov
sti
mov
rolb
shlb
push
outsb
in
pop
pop
loopne
or
or
stos
or
clc
pop
call
addr16
mov
rol
lods
je
or
fists
lock
pop
sub
jge
push
push
jno
jle
leave
lcall
and
pop
sbb
xchg
lds
sti
xor
rol
mov
repnz
test
cmp
pop
in
negl
stos
repnz
out
ret
sahf
pop
shll
xchg
imul
add
in
mov
pop
and
mov
loop
inc
and
mov
les
lock
sub
imul
stc
xor
push
repnz
les
mov
mov
mov
loope
xor
cmc
lret
in
pop
jbe
bound
mov
sti
lcall
imul
movsl
movsb
in
mov
cmp
cmc
dec
sub
mov
inc
sar
scas
sub
ljmp
cmp
push
je
pop
or
push
clc
movsl
iret
adc
jl
roll
cwtl
ret
scas
sbb
call
call
sar
add
imul
repz
push
or
lcall
mov
cld
loop
lcall
out
hlt
adc
jge
inc
jmp
sbb
xor
sub
pushf
dec
lret
adc
icebp
mov
lock
aad
gs
popa
scas
test
pop
js
in
incl
stos
enter
pop
sbb
xor
lods
cmc
push
dec
sub
mov
mov
test
xlat
fldl
cmp
mov
lods
pop
xor
fdiv
decl
xchg
es
out
sub
mov
das
pop
pop
repz
lcall
bswap
rcrb
mov
inc
outsl
in
mov
adcb
inc
push
pop
xchg
adc
fsts
jae
add
call
add
push
outsl
or
jne
mov
dec
pushf
loopne
cltd
mov
push
aaa
sbb
repnz
adc
mov
mov
sbb
jns
push
adc
adcl
or
pop
or
jo
incl
into
mov
je
mov
xor
cmp
jb
mov
pop
cmp
icebp
ljmp
adc
fmuls
insb
es
sub
fnstenv
xchg
icebp
jl
mov
cld
pop
repnz
dec
add
pop
stos
sub
incb
push
ljmp
mov
cmp
jecxz
mov
loop
lods
xchg
stos
stos
shl
imull
pusha
fistps
test
push
sub
sbb
or
popf
inc
jg
push
fidivrs
fnsave
or
jo
data16
popf
pop
push
xchg
nop
push
pop
mov
push
adc
push
loop
incl
dec
shlb
cmp
mov
dec
iret
ret
dec
hlt
ljmp
push
and
shr
sbb
scas
jle
adc
mov
xor
pop
xchg
mov
shl
or
insl
xchg
xor
icebp
mov
push
jb
pop
sbb
pushl
adc
mov
aam
lret
jo
xor
sarl
sbb
cmpsb
adc
movsl
lcall
mov
sub
filds
pop
incl
adc
in
inc
ret
push
inc
sbb
mov
xor
xchg
sbb
jmp
push
jl
mov
add
fcmovb
pop
dec
dec
clc
test
push
sub
into
lea
mov
mov
dec
jmp
shll
xchg
call
inc
loop
push
cmpsb
lcall
dec
dec
mov
mov
push
sahf
xchg
fidivs
in
pop
xor
popf
call
ljmp
imul
lods
fsubr
or
push
mov
fs
cmp
push
inc
and
jne
inc
mov
clc
inc
out
inc
scas
std
imul
daa
or
orl
or
pop
clc
inc
push
mov
jecxz
push
mov
mov
mulb
incl
xor
mov
mov
push
fcoms
jmp
in
fisttpll
lcall
cs
gs
imulb
xor
pop
jmp
ret
lcall
push
lcall
adc
roll
je
outsb
loope
mov
pop
inc
adc
pop
incl
lret
out
jg
cmpl
aad
stos
scas
ficomps
mov
popf
push
cmp
je
nop
lock
push
cmp
xchg
movsb
shll
divb
imul
dec
xchg
int
dec
daa
aaa
leave
mov
pop
into
fldenv
xor
lds
xchg
enter
lcall
sub
test
add
testl
jnp
rol
test
aas
mov
pusha
jne
push
int
sub
ljmp
lcall
sbb
jmp
fnstsw
into
sahf
hlt
inc
sahf
imul
lahf
jg
cld
subl
xchg
int
cltd
sub
add
pop
add
jo
call
pop
push
sbb
lea
pop
xchg
dec
scas
aad
cmc
sti
xchg
mov
push
jg
sub
dec
sar
xor
gs
push
mov
jmp
les
call
rcrl
push
or
push
xchg
int3
cmp
repnz
inc
insb
pop
and
repz
cwtl
cmp
jecxz
int
idiv
mov
mov
add
dec
pop
ja
sbb
jmp
sahf
xchg
mov
jo
adc
fidivl
inc
jo
lea
xor
push
jae
dec
shl
faddl
adc
adc
loope
loop
ljmp
xor
mov
lcall
pop
jg
pop
mov
loope
mov
mov
out
jmp
dec
test
mov
les
mov
sub
std
jg
aam
stc
cltd
leave
and
notb
jmp
cmp
add
call
sbb
scas
stc
and
add
andb
imul
decl
call
inc
mov
das
fsubs
sahf
fisubrl
into
ljmp
sbb
out
bound
xchg
pop
jl
and
out
dec
or
call
mov
in
pop
rcll
faddp
hlt
and
adc
fcmovne
xorl
loope
mov
jne
ret
pop
mov
mov
incl
iret
adc
lahf
xor
movl
test
lcall
xlat
popl
cmpsb
xchg
dec
jle
jae
fbstp
xchg
lret
bound
mov
push
ficompl
jno
push
push
out
rolb
cmp
push
sub
pop
ret
pop
add
insl
lods
sub
pop
xchg
imull
xor
in
aas
jecxz
dec
jb
dec
pusha
jp
jg
and
push
add
bnd
push
aas
shl
rcll
ret
pop
clc
pop
pop
sub
les
inc
fidivrs
mov
out
out
xchg
int3
push
xor
fisubs
mov
cli
in
lcall
rcr
mov
mov
sub
shlb
fisubrl
call
jmp
mov
icebp
or
inc
mov
pop
mov
idiv
sbb
adc
in
icebp
idivl
imul
mov
or
inc
pop
mov
ljmp
orl
cmp
jle
imul
cmove
aam
hlt
sbb
inc
ja
in
sub
aaa
cli
imulb
pop
sbb
out
repz
cld
jg
nop
fmulp
cltd
or
or
cltd
push
xchg
mov
fistpll
jl
xchg
mov
xchg
aad
push
inc
mov
pop
mov
jmp
mov
fs
cmpsl
mov
stos
les
pusha
ljmp
push
addl
adc
ret
fs
xor
decl
jge
and
jns
orb
mov
lea
icebp
pushl
cli
in
test
sbb
mov
cmp
ljmp
stos
push
ror
out
out
in
stos
xchg
addr16
cpuid
out
aad
sub
cli
jg
ljmp
out
pop
cmpsb
mov
loope
ret
jae
adc
lcall
ds
lret
jb
ds
out
dec
cld
mov
out
mov
out
mov
adc
inc
into
xor
dec
xor
xor
sub
xchg
jmp
pop
dec
add
shlb
call
pop
scas
mov
inc
jo
sti
add
jmp
mov
mov
dec
ret
pop
lds
pop
mov
mov
push
in
dec
call
repnz
inc
call
dec
xchg
pop
fcmovne
add
jmp
call
dec
xchg
xor
add
lods
hlt
out
out
mov
jp
outsl
fwait
cli
cmp
jno
hlt
lcall
push
pop
andb
mov
or
add
adc
mov
xchg
test
or
pushf
fistps
cmp
mov
pop
jae
in
aad
icebp
pushl
mov
loop
int
mov
mov
lcall
xchg
cmpsb
sarl
inc
shld
mov
jo
push
lds
lahf
loop
xorb
stc
cmp
fstp
stc
mov
cmp
in
dec
repnz
add
nop
dec
ljmp
hlt
decl
cmc
int3
test
xchg
add
mov
push
jmp
dec
aad
pop
out
push
jnp
xchg
and
subb
mov
fidivrl
mov
decl
pop
out
add
minps
mov
inc
push
ds
movsl
imul
rorb
and
inc
call
or
push
cwtl
pop
mov
fsubrl
test
test
adc
mov
push
ja
decb
pop
cli
dec
daa
sub
icebp
loope
orl
lcall
push
mov
sbb
sar
ljmp
xchg
mov
jge
mov
xchg
jle
aas
clc
lcall
call
fcom
adc
lret
popa
push
push
subb
lea
jae
fsubs
push
adc
jmp
nop
push
push
call
ret
in
jl
in
out
data16
cs
and
xchg
dec
xchg
pop
jns
dec
push
or
fisubl
les
ss
fcomip
roll
test
push
and
daa
xlat
jb
dec
cmpsl
or
je
cmp
jmp
xchg
fmulp
aam
std
push
and
insb
das
hlt
jg
popf
fisttpll
pusha
push
fs
dec
mov
adc
mov
sub
jb
mov
jns
stc
adc
mov
shll
addl
sar
jg
mov
xor
fldt
lods
jae
rep
sub
xchg
adc
lcall
ret
inc
mov
sahf
sub
push
hlt
jbe
mov
push
ljmp
scas
mov
adc
and
out
sub
and
inc
push
dec
gs
ljmp
inc
test
mov
ret
mov
iret
mov
xor
inc
jb
push
jge
insl
jno
cmp
ficoml
push
mov
hlt
xchg
in
lock
add
stc
pusha
add
push
ljmp
jnp
sub
xchg
pop
fsubrs
cmc
xorb
or
xchg
lahf
inc
pop
mov
or
fmuls
cld
rolb
inc
mov
xchg
cmove
cmp
or
lcall
mov
add
inc
jns
add
rcl
iret
shrb
adc
xchg
jne
pop
pushl
dec
outsl
add
sti
xchg
scas
push
dec
fisttps
into
notl
sbb
lcall
decl
push
movsl
movb
add
mov
decl
int3
sbb
enter
popf
and
pop
pop
adc
mov
insl
out
push
dec
aas
push
xorb
out
push
ljmp
mov
movsb
cmp
call
fcmovbe
mov
into
in
mov
jbe
std
mov
pop
lahf
adc
lds
pop
push
cld
dec
imul
add
dec
cltd
add
sti
shr
add
dec
ret
cmp
fucomi
aas
roll
push
les
mov
add
dec
mov
xor
mov
pushl
out
mov
ss
dec
xlat
jnp
mov
icebp
xchg
inc
enter
adc
inc
add
mov
inc
enter
lret
add
aaa
dec
adc
call
sub
fs
insl
add
hlt
test
jge
add
call
lret
data16
imul
pop
mov
mov
ja
je
or
xchg
pop
cli
imulb
stc
push
fwait
enter
ret
lods
lea
inc
push
push
pushl
xchg
ds
mov
jg
sbbl
mov
mov
cmp
mov
dec
fildl
push
mov
shl
out
jg
fiadds
popf
cmp
adc
mov
or
gs
or
inc
incl
lock
cmc
or
and
or
stos
shrl
lock
lcall
mov
lods
jo
or
pop
fdivrp
inc
pop
test
movsl
in
js
lcall
repnz
mov
loope
jne
and
pop
push
icebp
pop
jno
ljmp
mov
aaa
add
sub
mov
das
je
pushl
push
mov
mov
scas
nop
hlt
push
sub
jle
incl
cmc
jl
in
popf
push
xchg
lock
fcoms
in
cli
test
imul
sarb
dec
sub
sbb
xchg
sbb
ljmp
xchg
outsb
sbb
jmp
daa
popf
xor
data16
fs
sub
pushf
jmp
iret
add
insb
shlb
out
arpl
inc
cmp
xchg
and
jne
repz
pop
cld
xchg
dec
xchg
cmp
pop
dec
pusha
sbb
or
into
and
cmp
dec
push
insl
mov
sbb
inc
ljmp
mov
mov
ja
sarl
or
pop
cmpsb
daa
mov
mov
ret
xchg
fadd
push
xchg
mov
inc
sbb
mov
pop
lahf
ja
call
or
ret
cld
fldt
out
rcll
imul
call
call
cmp
divl
test
mov
jecxz
outsl
mov
pushl
lods
mov
jmp
pop
ficomps
cmp
cli
lcall
cltd
sbb
lcall
dec
aaa
loope
sub
add
jecxz
sub
add
aad
js
aas
test
pop
out
ss
inc
cmp
mov
xor
push
movsb
sub
movsl
and
sub
xor
fnstsw
jmp
jle
add
ds
or
pop
fwait
lcall
pushl
jo
test
mov
pop
insl
mov
sub
push
addr16
je
push
js
ffreep
ss
out
gs
lods
incl
bound
es
mov
mov
cmpsb
sbb
jo
cwtl
test
xor
mov
add
clc
cld
incl
jmp
cli
fnstcw
inc
sbb
cmpsb
dec
out
jg
int3
fmull
jecxz
lahf
test
dec
shll
mov
cld
rolb
and
adc
scas
adc
xchg
cld
sub
mov
jmp
or
sbb
loope
dec
aam
sub
and
pop
loop
out
adc
mov
jle
xchg
push
sbbb
lods
mov
flds
decl
roll
inc
xlat
xchg
divl
cmc
add
add
lret
mov
test
orl
push
jecxz
xchg
mull
push
ret
fwait
and
fists
dec
jnp
fnsave
imul
sbb
inc
mov
ret
xchg
cltd
push
fcmovne
clc
jg
xchg
aam
popa
lods
adc
lods
pusha
pushf
xchg
pop
mov
inc
loope
and
lcall
cmp
add
adc
popa
inc
cmp
push
fimull
and
mov
xor
dec
add
sub
subb
xor
dec
xchg
sbbl
mov
mov
in
add
pop
hlt
push
sub
inc
pop
push
loope
jb
adc
call
out
lods
or
jg
aaa
dec
jno
addl
sbb
ljmp
lret
ljmp
push
ljmp
jns
mov
imul
fsubl
mov
push
mov
imul
jnp
clc
aad
dec
cltd
or
int3
xlat
in
xlat
push
inc
fwait
push
clc
test
shlb
push
mov
push
cs
loope
inc
js
mov
add
addr16
cltd
jmp
popf
dec
mov
xchg
rorb
adc
mov
fistl
pop
loopne
xchg
push
jg
sbb
mov
adc
test
incl
mov
sub
push
aas
js
mov
lret
data16
cmc
fstl
or
jecxz
cmc
in
fbstp
push
or
cwtl
jo
std
sub
mov
sbb
ljmp
icebp
mov
mov
sub
sbb
push
add
es
enter
mov
and
idivl
sahf
mov
sub
std
push
call
adc
pop
jl
lods
pop
adc
incl
add
pop
pop
gs
mov
mov
enter
xchg
jnp
sbb
sti
jmp
movsl
inc
or
mov
mov
and
xchg
pop
mov
pop
scas
push
xchg
pop
mov
fnstsw
pushf
dec
insb
xchg
repz
and
popf
je
decl
push
sbb
pop
mov
stc
mov
popf
pop
movsb
movsb
mov
rclb
stos
pop
add
nop
jne
stc
addb
hlt
imul
mov
inc
das
cmp
cmc
jg
jmp
aas
adc
aas
xor
in
lret
mov
xor
xchg
clc
mov
lcall
std
inc
jl
data16
push
fmulp
xchg
sbb
jb
add
xchg
push
push
inc
mov
or
push
pop
daa
cli
les
loopne
sub
mov
and
dec
cld
call
stos
mov
js
or
push
cmp
or
cli
xchg
push
fucom
inc
sti
clc
dec
and
out
ficoml
popa
loope
ret
shlb
xor
push
add
cltd
cmp
sub
dec
inc
fisubl
mov
pushl
fs
jne
dec
push
add
mov
into
pop
pop
sbb
xchg
dec
xor
xchg
fidivrl
pop
cli
decl
mov
pop
notl
mov
ret
in
pop
hlt
lcall
fwait
jecxz
sub
pop
movsb
adc
cli
and
push
adc
sarb
pop
and
daa
pop
inc
cld
das
mov
and
sbb
lods
loope
ljmp
je
jbe
ja
mov
mov
lock
dec
mov
call
pop
mov
sbb
mov
jp
pop
gs
add
xor
cmp
cld
xchg
and
or
mov
push
out
xchg
mov
lret
call
stos
outsb
add
stos
xor
jae
xchg
and
fnstcw
dec
inc
xor
or
xor
insb
int3
je
in
mov
jmp
and
decl
xlat
fsincos
cmp
inc
mov
ficomps
hlt
test
xor
cld
jmp
cmp
add
std
jge
gs
mull
int3
mov
ljmp
imul
cmp
aam
imul
adc
scas
pop
mov
out
pushl
cli
incl
cwtl
xchg
sub
pop
out
jnp
cmp
mulb
scas
sbb
in
pop
cs
adc
add
aas
jns
cmp
mov
sti
add
inc
iret
pop
adc
xchg
sti
push
aam
dec
fstpl
aas
cltd
cmp
pushl
pusha
mov
fbstp
cmp
ret
push
outsl
arpl
add
xchg
lods
dec
fadds
lock
xchg
cli
data16
into
ret
push
call
lock
test
lcall
lds
int3
idivb
lods
cld
inc
and
jmp
addb
ficoms
push
pop
push
jmp
cs
cmp
stos
mov
movsl
jmp
lcall
and
popf
out
lcall
scas
sar
jo
in
rcrl
stos
lahf
xor
add
fs
mov
pusha
mov
pusha
aad
fwait
out
lock
lods
jns
ljmp
fs
xor
push
pop
xchg
xchg
jp
pop
jmp
fnstsw
pop
mov
cmp
adc
sbb
mov
mov
popf
imulb
jg
cmc
hlt
cmpsl
fs
fcoms
popf
add
cwtl
in
iret
dec
cs
fisttps
outsl
cmc
incl
stc
mov
in
mov
fldcw
fwait
cmc
jl
imul
sar
add
vcmpsd
jle
or
sbb
popf
in
xlat
int3
pusha
fistps
loope
stos
jno
pushl
shll
nop
fimuls
loopne
addr16
sub
roll
push
mov
insb
dec
mov
outsb
std
pop
movsl
idivl
pushl
cld
leave
sahf
fcmove
loopne
xchg
mov
jo
cld
mov
scas
mov
xchg
jle
mov
sbb
das
push
pop
sti
push
sbb
dec
or
fists
adc
int
add
and
lcall
xchg
add
addr16
mov
mov
push
mov
sbb
imul
jne
pop
mov
mov
sbb
scas
inc
or
ret
shll
out
and
or
mov
mov
mov
inc
sub
sub
adc
push
sbb
fistpl
rcr
and
ficoml
mov
outsl
hlt
cs
repz
aaa
leave
out
notb
addl
and
fiaddl
mov
cmp
jecxz
repnz
in
jnp
xchg
jp
mov
decl
inc
rcr
and
fadds
movsl
lods
repz
sahf
movsl
hlt
sub
rclb
sub
rcll
pop
ret
das
lods
cltd
mov
popa
sub
call
clc
scas
scas
notl
scas
or
mov
mov
adc
jmp
add
cltd
fwait
push
notb
jg
fcomip
xchg
adc
push
test
pop
mov
imul
ljmp
and
shrb
pop
mov
or
pop
cli
in
or
gs
aad
sbb
shl
inc
cmpsl
out
mov
adc
iret
inc
jmp
rol
sahf
mov
popa
insb
cmp
js
call
arpl
popa
cli
push
out
xlat
cmpsb
push
outsl
bnd
andl
pushl
notl
ljmp
pop
loopne
lock
and
jno
loope
jp
xorl
rol
mov
push
std
lea
decl
push
sbb
adc
cmc
nop
sbb
addr16
lret
insl
fwait
push
pop
jle
and
lock
call
push
xchg
mov
jo
mov
stos
cmp
insl
dec
pop
in
ljmp
lock
push
sti
or
repnz
pop
outsl
dec
xor
and
xlat
cmp
ret
in
xor
jg
ljmp
dec
pop
push
test
subb
inc
mov
pop
stos
std
push
sub
jbe
iret
fldenv
and
incl
fs
out
add
insb
insl
call
sub
push
loopne
aaa
filds
cli
xchg
push
mov
mov
pop
ljmp
jne
add
cmp
push
xor
xrelease
sbb
enter
add
fbld
inc
xchg
lock
call
and
je
pop
xor
in
or
pop
fnstsw
pop
push
jl
iret
push
cmp
fnstenv
pop
dec
ret
cli
sub
xor
popa
jmp
fwait
iret
outsb
imul
jecxz
adc
dec
std
call
repnz
mov
movsb
inc
sub
push
sub
cmp
aam
arpl
outsl
aaa
dec
out
sti
mov
sti
fbstp
fcompl
adc
outsb
pop
and
and
out
imul
in
in
ljmp
xor
mov
std
fdivrp
mov
stos
stos
sub
in
push
jp
jecxz
jmp
push
andb
pop
push
divb
sub
inc
mov
and
fwait
cli
dec
std
jge
addr16
inc
loop
dec
bound
sub
sbb
push
dec
in
rolb
jbe
cmpsb
pop
mov
mov
js
pusha
add
ljmp
cmpl
mov
sahf
fcomip
aaa
inc
mov
cmp
cld
xchg
mov
orb
lahf
jo
push
cwtl
iret
ja
mov
test
dec
std
pushl
pop
add
aad
repnz
sbb
call
jle
mov
dec
dec
jmp
mov
shll
sbb
stos
loope
xlat
rclb
jmp
incl
out
lcall
pop
jnp
repnz
add
ljmp
dec
je
or
pop
and
fs
pop
test
cld
ds
lcall
out
mov
adc
in
jnp
pop
clc
call
add
mov
jmp
mov
enter
setb
sahf
jl
mov
sub
cmp
dec
jg
and
cmp
ret
sbb
je
push
in
dec
xchg
push
orb
cs
mov
js
rcrl
jp
sbb
negb
pop
mov
in
or
add
roll
shrl
inc
xchg
or
test
call
jns
es
jo
jg
dec
add
sar
lcall
test
das
fidivl
insb
push
push
jge
dec
cld
mov
cmpsb
xchg
sbb
inc
mov
je
stos
cltd
mov
sub
push
es
xor
les
push
lret
imul
std
scas
mov
inc
adc
fistps
mov
mov
sbb
add
jnp
js
xchg
inc
gs
test
add
sub
into
imul
jg
or
repz
sbb
xor
adc
pop
or
push
mov
pushl
clc
jmp
lret
je
cmp
jle
jmp
out
clc
adc
incl
mov
jl
xor
cmp
jmp
icebp
mov
fnstsw
lods
decb
lods
cmp
push
test
adc
stc
pushl
arpl
sahf
mov
adcb
jle
gs
adc
in
out
cmp
vmwrite
imul
push
out
sarl
mov
mov
xchg
adc
cmp
sahf
ficomps
cld
sbb
and
ds
pop
out
pop
ss
cmpsb
jg
dec
inc
stos
adc
push
mov
scas
add
decl
cld
pop
dec
loope
test
lea
cltd
loope
rorl
ja
jg
decl
ja
jbe
sub
and
inc
aad
inc
movsb
adc
mov
and
call
inc
pop
shrb
loop
sbb
sbb
sahf
in
jp
out
cwtl
call
cli
cmp
xchg
les
sub
pushl
inc
add
sar
inc
mov
push
adc
xchg
sbb
mov
fildl
pop
mov
mov
shlb
pusha
mov
cmp
decl
fisubrl
sub
sbb
push
ret
das
inc
les
adc
add
push
dec
xorb
leave
shll
ja
leave
sbb
and
xchg
push
jns
mov
xchg
adc
out
call
and
fidivs
add
lahf
fdivrs
test
xlat
cli
ret
hlt
adc
mov
sbbl
insl
mov
sbb
nop
mov
fwait
mov
scas
inc
in
fcmovnu
pop
ror
incl
std
or
pop
or
push
mov
rorl
loopne
lahf
loopne
xor
push
jmp
push
les
arpl
adc
mov
and
jbe
mov
out
ficoms
add
and
xchg
mov
or
lods
outsb
pop
sahf
push
jne
outsl
mov
dec
jnp
jno
call
pop
or
xchg
fucom
stos
movsl
imul
xlat
lock
sub
cmp
and
in
sub
pusha
xchg
loopne
cltd
adc
mov
jns
out
arpl
adc
sbb
xor
xchg
adc
xor
rclb
jg
pushl
or
xor
fdivp
outsb
xlat
cmpsl
arpl
jp
inc
dec
std
dec
jbe
cmc
je
out
pushf
popf
stos
ds
cli
adc
cmp
mov
xchg
cli
push
sbb
add
div
cld
cmp
stc
clc
scas
int3
push
out
int
nop
imul
pushf
imul
popa
decl
movsb
fwait
ds
test
sub
jp
aam
push
ud0
jbe
push
out
or
sbb
test
xchg
xchg
jg
jns
dec
adc
jl
out
inc
sbb
outsb
push
mov
or
scas
jns
sbb
push
sbb
mov
mov
jg
dec
fcmovb
dec
xor
xchg
fs
dec
sub
decl
int
repz
pop
xchg
or
inc
pop
pop
les
mov
pusha
jg
pushl
pop
aad
mov
and
xchg
cmp
and
push
mov
mov
pop
push
fstps
add
or
adc
call
scas
ljmp
jmp
es
xor
test
sub
scas
rcll
lds
jmp
pushf
fmuls
mov
cltd
test
or
jecxz
fists
inc
mov
pop
addl
mov
jo
sub
aam
pop
mov
call
sub
movsl
frstor
iret
popf
push
add
mov
adc
decl
loop
arpl
fcomps
xor
clc
jg
in
mov
adc
jb
sub
popf
xor
test
pushl
gs
pop
aad
mov
scas
mov
pop
faddl
cmp
bound
bnd
push
loop
int
cld
mov
das
cld
call
sarl
out
rolb
sub
lods
jg
push
mov
mov
push
fwait
cmp
adc
movl
sub
insb
cs
leave
and
sbb
in
std
dec
mov
outsb
mov
fcmovne
leave
cs
popf
dec
out
dec
fstl
aaa
jp
call
mov
adcb
cmp
adc
out
jge
ja
mov
dec
sbb
push
sub
stos
jg
cld
sub
jg
cmp
insl
sub
push
or
pop
pop
mov
out
nop
pop
ret
pop
js
jge
xlat
insl
mov
fisubs
out
and
sub
mov
sub
ja
bound
test
lds
cmp
jne
inc
scas
int
test
bound
insb
lea
out
pop
in
aad
cld
in
jno
aad
sbb
mov
xor
ljmp
loop
call
dec
dec
or
push
daa
movsb
insb
lods
sti
out
jle
outsl
mov
call
push
nop
pop
and
xchg
dec
inc
out
rcrl
mov
call
insl
jge
rcr
xlat
std
and
jge
scas
int3
jg
xor
loop
inc
fwait
sub
or
push
push
rcrl
inc
leave
push
imul
incl
cmpsb
xrelease
lcall
mov
lahf
xor
push
mov
add
adc
jne
mov
nop
jb
mov
xor
sar
mov
inc
movsb
int3
jnp
fstpt
inc
and
dec
cltd
mov
lcall
popa
push
jle
in
push
shr
decb
mov
dec
out
mov
xchg
notl
and
inc
pushf
push
sbb
call
mov
incl
pushf
shr
jmp
cmpsl
xor
rcll
mov
inc
pushl
cli
lcall
jge
aad
xlat
stos
scas
jg
sub
cmp
dec
add
sbb
jmp
push
sar
ds
jns
sub
enter
decl
cld
lahf
ret
cmc
inc
adc
imul
je
cltd
fcmovnu
call
fsubs
cmp
xchg
mov
jnp
or
xchg
je
push
jg
push
decb
sbbb
sub
mov
lret
lret
hlt
jl
fwait
dec
or
push
addb
scas
or
cmp
and
inc
and
inc
pop
mov
leave
mov
iret
lea
mov
es
adc
iret
in
int
ljmp
inc
sbb
and
lret
mov
dec
sub
stc
or
adc
mov
out
ljmp
fisubs
cmp
and
jo
js
jmp
loopne
inc
repnz
push
pop
clc
lcall
sbb
xlat
out
cmp
pop
mul
scas
jo
mov
cmp
test
pop
cmpsb
xchg
loop
popf
and
sbb
pushl
fwait
dec
cmpsl
fisttpl
sbb
dec
int
pop
push
jg
pop
shr
push
orb
aam
xchg
loop
dec
les
mov
cld
lret
inc
sbb
adc
mov
daa
pushf
push
mov
bound
idivb
sbb
decl
call
repnz
and
imul
fmul
xchg
sub
jl
shll
fld
cmp
fucomip
cli
idivl
mov
add
pop
mov
jg
loope
inc
xchg
leave
mov
stos
xor
cwtl
out
jb
pop
mov
jmp
ljmp
leave
stc
ljmp
xchg
out
push
pusha
xchg
push
xchg
push
lret
int
daa
pop
clc
jmp
and
mov
lds
ret
and
adc
xlat
jg
jmp
xchg
jge
aad
mov
lahf
xchg
mov
int
xchg
push
mov
mov
push
std
jmp
addps
or
loope
imul
push
sub
call
adc
jo
jecxz
insb
adc
ljmp
push
inc
xchg
jnp
pop
push
mov
pop
addr16
cmp
jmp
dec
fstl
or
sbb
in
gs
outsl
daa
jnp
adc
push
xchg
decl
std
out
ja
add
popa
mov
leave
mov
imul
mov
incl
and
mov
mov
inc
call
sbb
mov
dec
jae
inc
mov
mov
cmpb
mov
sahf
out
sbb
mov
test
outsl
icebp
movsl
data16
hlt
sahf
ja
stc
in
or
test
pop
cs
aas
fs
sub
nop
aam
or
data16
push
add
sbb
dec
dec
test
mov
lds
xor
push
xchg
push
decl
lods
inc
fldenv
mov
popf
inc
sub
iret
xor
incl
insl
dec
jb,pt
adcb
jecxz
addr16
jb
movsb
cli
jg
cmp
lcall
sbb
xchg
aam
in
or
dec
out
dec
stc
push
cmp
pop
clc
call
jno
aas
xor
sahf
add
jmp
ds
fbld
pushf
jnp
pop
pop
mov
or
cmc
push
cltd
lcall
sbb
mov
repnz
pusha
das
repz
inc
cmc
sub
das
xor
mov
jb
lock
rsqrtps
jne
dec
push
sub
xor
rcrl
ficoml
in
mov
out
fcoml
call
fwait
and
lret
shrl
pop
ficoms
test
idivb
dec
sbb
mov
fwait
push
lret
fimull
in
mov
jnp
mov
fidivl
sbb
jmp
call
aaa
add
mov
call
das
xor
sbb
stc
mov
fucomip
mov
rcr
or
mov
rcrb
ss
cmpsb
lret
cmp
cmpsb
mov
sti
push
xor
inc
dec
iret
andl
decl
shll
mov
shlb
xorw
mov
lret
xor
es
sbb
cmp
leave
or
mov
dec
outsl
loope
jl
cli
call
jl
push
add
movsb
bnd
cmpsb
mov
sbb
dec
jecxz
pushl
repnz
sub
xchg
mov
jbe
dec
aaa
divl
addr16
into
and
jg
sti
xor
jae
push
in
mov
add
adc
adc
rclb
xor
insb
rcr
decl
mov
or
or
outsb
inc
cmp
in
rorl
ljmp
mov
jecxz
stc
lret
in
outsb
cltd
push
and
and
mov
xor
outsb
mov
pushl
jle
fs
push
popa
sbb
ljmp
dec
rolb
test
mov
adc
test
negl
divb
jg
push
negl
inc
clc
clts
push
xchg
or
adc
sar
mov
dec
es
cmp
call
jmp
xchg
dec
out
pop
push
xchg
insb
les
adc
pop
or
dec
mov
mov
inc
ljmp
pushl
loopne
ret
adc
sub
xlat
inc
jp
xchg
pushf
mov
fmuls
push
in
test
popf
mov
es
ret
mov
ljmp
lcall
aas
push
push
push
push
xor
and
js
mov
adc
cmpsl
pusha
lcall
push
imul
fisubrl
sbb
xchg
enter
push
je
mov
inc
xchg
nop
cmp
jp
test
mov
lea
add
das
inc
icebp
call
inc
xor
push
test
gs
xchg
mov
pushl
adc
xchg
xor
mov
std
shl
mov
or
bound
mov
ja
call
dec
xor
lods
rorl
lea
mov
jmp
pusha
push
mov
jg
pop
in
push
xchg
lds
and
lret
pop
or
push
mov
fstpl
or
cmp
push
shlb
out
inc
out
mov
inc
filds
popf
xor
cmp
lcall
xor
mov
add
jmp
jb
int3
jp
nop
cmp
lcall
add
xchg
cmpsb
ret
or
xor
sarl
lods
mov
ss
int
dec
test
push
out
pushl
cs
or
push
out
or
xor
mov
xor
sbb
xchg
sbb
scas
les
ljmp
pop
imul
push
fstpl
decl
stos
xor
call
mov
sub
cwtl
into
in
mov
loopne
insb
inc
call
or
and
pop
scas
popa
pushl
push
repz
movsb
sub
leave
adc
sbb
call
xorb
xchg
cmp
pop
or
sub
xchg
pop
cmp
fwait
inc
jbe
sti
aam
sahf
imul
ljmp
adc
sti
adc
notb
push
andb
mov
inc
pop
sti
int3
cs
push
mov
push
rcrl
call
mov
mov
outsl
dec
ret
mov
mov
and
das
xchg
sub
mov
call
outsl
decl
adc
sbb
daa
stos
sbb
out
jp
dec
cwtl
jmp
loopne
pop
fcmovbe
pop
sub
lcall
sar
lcall
fwait
adc
ljmp
loop
mov
mov
rorb
cmp
pop
mov
mov
sbb
add
sbb
popf
sar
clc
jg
jbe
lret
cmp
movsl
sub
inc
pushf
cli
xor
adc
clc
aad
incl
int3
and
adc
mov
pop
fdivrs
movsl
jecxz
and
fcomps
fbld
repz
ftst
or
sar
ljmp
cwtl
jp
repnz
xchg
adc
pop
sar
mov
xorl
adc
or
dec
cmp
mov
add
stc
pop
add
push
inc
fsub
ljmp
mov
sub
mov
enter
jns
outsl
rcl
hlt
xchg
scas
repz
jecxz
sarl
jns
mov
fsts
loope
sbb
inc
add
or
add
pop
sub
test
call
mov
jb
loop
and
jns
leave
in
push
jecxz
out
lods
fbld
pushf
add
mov
cmp
xchg
inc
cmp
xchg
adc
lods
decl
std
jle
icebp
push
sbb
ret
ljmp
mov
xorl
mov
ja
cmp
jp
popl
add
adc
loop
add
pop
icebp
xchg
and
mov
repnz
mov
mov
pushl
das
jecxz
mov
push
adc
xchg
mov
or
fimull
repz
mov
mov
nop
xor
ljmp
cmpl
lcall
sbb
lods
test
subb
jg
jle
fnsave
xor
jg
push
pushf
out
xchg
fldcw
sub
push
push
jg
cli
mov
pop
cmp
cmpsl
adc
std
jbe
push
jg
mov
pop
jmp
mov
and
pop
mov
das
pusha
push
shr
pop
mov
fs
incl
mov
stos
sbb
sbb
mov
inc
mov
lcall
mov
cmc
pop
push
stos
or
push
mov
or
sahf
ds
jbe
sbb
es
jo
arpl
pop
hlt
pop
xor
mov
lds
cmp
mov
call
inc
pop
mov
repnz
pop
dec
sbb
push
or
ljmp
lock
cwtl
jecxz
ficomps
bound
push
test
movzwl
fsubrs
cmp
dec
jmp
sub
pop
pushf
popf
bound
mov
decl
adc
lcall
test
insl
sub
rcrl
mov
pop
mov
cmp
call
in
mov
lods
lods
push
jecxz
decl
stos
popf
adc
fdivrp
lcall
xchg
out
fs
rol
outsl
aaa
mov
inc
xchg
push
pushl
xlat
jnp
mov
out
nop
xchg
and
add
hlt
fisttpll
leave
gs
popa
sti
in
xchg
or
inc
add
fldenv
mov
sarb
dec
movsl
sar
decl
inc
mov
sub
adc
pusha
mov
nop
adcb
jg
mov
clc
jmp
repnz
aam
xor
mov
fcmovb
mov
mov
sbbb
pop
mov
out
lods
movsb
cmp
mov
dec
push
movsl
xchg
stos
adc
cwtl
lock
sub
or
pop
jnp
inc
int3
mov
pushl
test
sahf
jl
mov
decl
test
dec
cmpsl
jns
and
jl
subl
jge
popa
xchg
and
add
decl
mov
add
xchg
jnp
sub
jno
and
out
xchg
xlat
imul
popf
add
hlt
xor
xorb
jecxz
rorl
mov
stc
cld
xchg
adc
cmp
mov
out
std
sbb
stos
ljmp
or
cmc
aaa
in
loope
mov
fs
out
cld
jg
mov
jo
ficompl
mov
ret
push
scas
clc
pop
call
cmc
outsl
sub
lret
stc
andb
cs
sub
mov
xor
call
mov
aam
xchg
out
outsl
cmp
sbb
or
mov
pop
clc
cmp
inc
les
fnstcw
sub
xchg
incl
mov
xchg
mov
push
mov
xor
jo
ss
mov
sahf
xchg
ljmp
incl
loop
mov
mov
mov
mov
xor
ljmp
xor
outsb
jl
pop
pop
xor
and
xchg
jg
adc
adc
pop
inc
lcall
jmp
mov
cld
lcall
fnop
cmc
test
inc
mov
jbe
and
lods
das
jno
dec
mov
call
dec
outsl
cmc
xchg
pop
popf
adc
mov
dec
sar
jg
sub
xchg
in
inc
jl
xor
in
ffreep
adc
mov
fsubl
stc
pop
lcall
xchg
and
sbb
jmp
sar
decl
les
cld
insb
pop
cmp
add
mov
push
pop
fiaddl
dec
loop
dec
adc
pop
dec
jl
outsl
cmpsl
mov
pop
out
pop
pop
cld
inc
incl
mov
push
jmp
pop
lods
jmp
push
call
push
lret
ljmp
insb
jecxz
mov
and
test
inc
fldl
mov
jb
call
pusha
imul
daa
mov
mov
push
cld
inc
call
sahf
lret
addr16
xor
cli
mov
lods
lcall
adc
dec
pop
repz
sti
stc
insl
sbb
ljmp
lcall
pop
movsb
jge
lods
mov
add
fwait
push
cmp
enter
jge
into
cmp
xchg
fildll
or
mov
shrb
mov
xor
sti
jnp
rcrl
dec
add
sar
xchg
outsb
sbb
rclb
lcall
push
inc
cmp
icebp
mov
int
out
std
insb
pop
addr16
sarl
decl
lock
mov
ret
xlat
popf
arpl
xor
push
lods
int
ss
pop
call
push
mov
mov
lods
iret
inc
sub
int3
and
call
lods
xor
add
and
adc
pop
lods
addb
push
cmpsl
ljmp
mov
jl
decb
and
scas
or
popf
insl
mov
rorb
in
aaa
decb
mov
xor
sbb
sar
mov
lea
mov
stc
push
xor
mov
shrb
shrl
cwtl
push
dec
lahf
push
xor
mov
mov
mov
ljmp
roll
ljmp
daa
lods
lcall
stc
sbb
cli
inc
das
xchg
adc
decl
sbb
mov
mov
inc
shrw
enter
cmp
sbb
dec
aaa
cli
xchg
clc
adc
int3
sbb
mov
cmp
cmp
stc
xor
call
pop
test
sbb
insl
mov
mov
jecxz
push
xor
xchg
popa
fisttps
test
push
jge
sbb
je
and
adc
lock
push
test
jge
dec
inc
mov
dec
xor
mov
cmp
leave
add
add
dec
dec
jo
rcrl
sbb
cltd
out
sarb
push
cmp
add
mov
or
sbb
shrl
xchg
call
les
pop
and
mov
imul
popf
mov
adc
pop
pop
int
add
pop
sub
inc
or
ret
xor
add
daa
subl
xchg
xchg
inc
ljmp
jne
sbb
clc
jae
xor
pop
outsl
cmpsl
lds
shrb
decl
stos
xlat
lret
push
test
xchg
ja
lods
rclb
cli
inc
jno
scas
jne
push
mov
inc
inc
push
lock
jg
gs
cmpsl
clc
mov
out
icebp
cmp
subb
ljmp
iret
mov
das
mov
outsl
push
loope
xchg
sbb
and
cmc
add
inc
adcl
iret
pushf
notl
pop
repnz
cmp
je
jo
lods
shlb
add
addl
rcrl
xlat
cmp
mov
pop
cli
test
ljmp
cmc
lods
mov
out
cltd
jge
mov
push
sbb
xor
sbb
subps
incl
in
jg
mov
ret
clc
cld
sbb
sti
mov
lcall
jmp
push
mov
lods
addl
js
cs
sub
mov
cmp
jnp
loope
lcall
loop
cmp
pop
xchg
sbb
cld
decl
xor
sub
inc
divl
mov
push
sbbb
push
adc
jl
aad
lock
ljmp
inc
leave
gs
repnz
inc
mov
or
in
adc
add
and
mov
fistps
pop
lret
test
and
movsb
cmpsb
lret
loop
cld
stos
inc
cs
cwtl
lock
ljmp
push
lds
pop
outsb
mov
pusha
mov
loopne
ljmp
inc
jg
into
adcl
shll
add
jmp
pop
sub
or
ss
dec
xor
loope
adc
leave
pusha
scas
cld
push
ffreep
sbb
cmp
and
sbb
scas
jg
outsl
adc
adc
dec
stos
mull
xchg
pushl
out
jnp
mov
das
hlt
insl
outsl
icebp
ret
pusha
push
xchg
push
push
nop
push
adc
sub
das
pop
mov
cmp
mov
xchg
incl
inc
and
int3
jnp
idivl
in
std
pop
lods
or
adc
ljmp
and
jmp
ret
jnp
add
jno
add
aad
test
lods
cmpsb
fidivs
test
jge
ljmp
pop
mov
hlt
les
add
cmpl
pop
pop
lret
fsqrt
mov
fsubrl
test
add
pop
jae
jecxz
push
faddl
imulb
inc
lock
add
push
mov
imulb
pop
or
lea
hlt
enter
clc
pop
adc
jbe
sbb
inc
inc
mov
sbbl
fmul
jecxz
sub
mov
lcall
stos
push
jns
mov
sbb
pop
or
fcoml
inc
hlt
mov
inc
movsl
pop
xor
nop
addr16
push
sub
pushl
out
sub
adcl
shll
shlb
and
and
or
hlt
inc
out
sbb
into
dec
sbb
outsl
std
inc
nop
cmc
int
cmp
jl
jbe
ror
dec
aas
je
rol
fcmovb
jecxz
jmp
scas
loop
hlt
xor
sub
mov
jb
orl
aaa
cwtl
pop
jecxz
jns
xchg
popf
dec
dec
std
incl
inc
xchg
movsb
dec
imul
fs
xchg
decl
pop
jnp
and
fwait
loopne
movl
ffree
adc
pop
clc
pushl
insl
add
fcmovu
in
push
pushf
push
add
rolb
insl
das
add
call
add
jl
out
cmp
cmpsl
lcall
dec
fimull
mov
ss
and
sub
mov
cli
cmp
mov
ljmp
hlt
pop
xchg
mov
sar
cmp
pop
cmp
add
arpl
call
push
adc
roll
dec
adc
ficoml
insl
flds
popf
cmp
ficompl
add
clc
test
mov
fisttps
loop
enter
imul
pop
adcb
ljmp
cld
outsl
lods
inc
mov
es
icebp
sub
pop
cmc
adc
mov
decl
into
stos
xlat
fsubrl
jnp
scas
push
orb
xchg
outsb
pop
loop
pushl
shll
es
mov
in
dec
lcall
xchg
mov
cmp
and
push
gs
inc
mov
add
inc
push
cmp
push
out
aaa
sub
and
jns
push
std
jecxz
stos
lret
xor
test
out
rcrl
xchg
outsb
mov
push
fsub
dec
xor
lcall
test
mov
fisttpl
leave
popf
mov
push
out
fimuls
and
mov
pushf
int3
aam
fnstsw
rcll
test
and
pushf
add
jo
movsb
cmp
jns
dec
outsb
inc
ficompl
mov
and
cld
test
adc
and
mov
jge
rcrb
push
imul
mov
pop
add
inc
fdivs
stos
xchg
xchg
in
inc
jo
insl
mov
cmp
inc
push
pop
and
push
ja
pusha
pop
jge
sar
inc
loope
std
xchg
fdivr
ljmp
lcall
push
ds
into
xchg
sub
sub
adc
cmc
stos
jg
in
enter
lea
cli
dec
inc
inc
enter
int
inc
jge
mov
fidivl
std
and
xchg
and
fnstsw
lcall
lea
in
test
push
sahf
xchg
xor
xor
incl
inc
jb
out
aas
jae
cmp
aam
movb
call
and
aaa
dec
imul
pop
and
pop
sar
mov
pusha
lcall
and
imul
mov
clc
inc
repnz
cmp
jmp
outsl
mov
insb
mov
or
cmp
mov
ret
push
lods
insl
stc
pop
cmpsb
je
arpl
xor
mov
aam
rclb
outsb
adc
dec
push
loopne
jmp
mov
icebp
and
xchg
addr16
das
mov
test
pop
add
adc
add
das
loop
out
inc
push
in
and
and
push
cmp
or
or
xlat
std
jns
or
inc
mov
dec
xor
adc
sub
sbb
cmp
sbb
lock
mov
sub
cmc
mov
cmp
clc
call
and
cmp
push
inc
pop
adc
push
mov
call
dec
xor
insb
mov
ljmp
sbb
add
sbb
lods
mov
mov
adc
std
in
mov
fwait
ljmp
lods
jg
incl
inc
fstps
inc
insb
mov
push
shlb
mov
decl
ds
push
push
mov
out
stos
push
sbb
jmp
shrl
or
xor
or
cmp
sub
sar
ljmp
call
sub
xor
outsl
repnz
lods
dec
out
call
jmp
pop
dec
loopne
out
xor
xor
fisubrs
fildll
aam
push
mov
jb
add
add
jo
jecxz
add
xchg
or
dec
or
std
incl
fistl
push
xor
xchg
in
inc
pop
adc
ss
push
imul
add
inc
pop
dec
adc
push
jg
clc
xor
fcoms
or
loope
xchg
cmp
negb
push
dec
add
mov
in
jmp
mov
or
xor
lcall
mov
mov
mov
and
pushl
pop
jge
jmp
syscall
adc
push
jg
or
xor
jmp
faddl
sub
cwtl
cmc
daa
loop
jb
scas
das
jle
jnp
incl
das
mov
pop
mov
into
test
mov
loopne
fwait
imul
and
ljmp
pusha
hlt
mov
mov
xorb
mov
mov
mov
std
out
clc
out
sti
push
es
jbe
xchg
iret
imul
hlt
movsb
ret
cmpsl
jno
push
out
dec
dec
popa
jle
outsl
icebp
dec
dec
movsb
pushf
mov
dec
jne
xlat
jbe
xor
xor
push
xlat
cmp
pop
add
inc
data16
mov
sar
lcall
xchg
out
mov
das
cmp
push
dec
test
arpl
xchg
incl
data16
ss
mov
xchg
loope
stc
cmp
je
push
cs
out
repnz
loope
repnz
xchg
mov
das
push
mov
inc
dec
es
incl
decl
jnp
inc
cltd
mov
mov
push
call
mov
xchg
inc
add
cmpsb
dec
fnstcw
jg
out
lcall
mov
or
xchg
lret
mov
mov
mov
add
dec
daa
ljmp
pop
inc
jle
jg
lcall
rcrb
mov
jge
jo
sbb
mov
push
mul
or
mov
int
sbb
scas
out
sub
push
int
push
mov
call
jae
mov
roll
test
insb
gs
mov
cmp
pop
movl
or
mov
aam
or
adcb
cmp
fcos
decl
out
sbb
or
out
xchg
popf
adc
add
mov
insb
iret
js
sbb
ljmp
fstpt
push
stos
int3
cmp
push
push
cmovo
mov
jae
jecxz
cmovge
imull
lret
decl
dec
adc
leave
add
xorl
mov
mov
pop
push
xor
and
or
add
decl
xchg
sbbb
inc
in
vmovups
xor
inc
lcall
pop
lock
faddp
jp
outsb
mov
lea
dec
mov
lcall
jecxz
outsl
clc
testb
cmp
xor
push
xchg
dec
push
dec
sub
fiaddl
pop
std
incl
add
rcl
mov
outsl
add
mov
sar
dec
in
pop
movsb
scas
inc
jg
or
adc
testl
lcall
mov
je
push
out
add
sbb
je
mov
movsb
loope
xchg
decl
or
jg
xor
in
pop
adc
sbb
lods
xor
xorb
mov
adc
in
xor
fldenv
in
imul
mov
and
loopne
incl
int3
loop
fcmove
jg
jge
pusha
jmp
add
mov
push
push
cmp
idivb
sbb
jg
incl
cmp
cmp
pop
repnz
fs
cwtl
in
cmp
sbb
pop
mov
in
movsl
lahf
ljmp
and
test
lret
or
call
jecxz
int3
scas
enter
pop
imul
lock
divb
sti
data16
add
sti
push
or
cli
sub
mov
mov
lock
jle
cmpsl
mov
ds
jle
pop
enter
pushl
andl
andl
pop
repz
out
and
decl
cmp
pop
jmp
int
cmp
iret
xor
xlat
mov
dec
sub
cmp
cli
orl
mov
mov
iret
jmp
cmp
ret
jle
cmpsl
mov
dec
clc
adc
les
out
shll
aad
decl
ljmp
inc
stc
xor
aad
inc
jno
cltd
les
lods
enter
pop
xlat
into
adc
mov
incl
repnz
lods
in
jmp
test
xor
clc
sti
repnz
test
mov
xchg
ret
or
inc
pop
sub
ret
pop
shll
sbb
ffreep
push
cs
pop
in
and
loopne
dec
pop
mov
je
cmp
notl
jo
rcl
pusha
outsb
fs
lahf
gs
pop
call
call
lcall
out
aad
sbb
ljmp
or
push
pop
popf
add
sbb
sarl
std
in
mov
push
ljmp
cli
lcall
or
or
dec
stos
xor
rorl
jmp
dec
arpl
rorl
addr16
rol
add
incl
fsts
mov
js
dec
dec
sahf
stos
mov
pop
or
cli
add
push
les
fists
sbb
shr
popf
test
int3
or
pop
orb
into
mov
cmp
jb
enter
add
mov
out
adc
cmp
pop
inc
leave
lcall
mov
xchg
adc
into
mov
loopne
call
iret
in
sbb
fwait
xchg
mov
and
mov
call
outsb
sti
mov
mov
jg
mov
pushf
aaa
mov
push
mov
movsb
jecxz
fdivp
xor
mov
mov
jmp
incl
xorb
aas
test
pop
pushf
jb
mov
rorb
lods
lret
enter
add
jns
cmp
imul
daa
test
sbb
cmp
movsl
es
adcl
mov
jns
fwait
std
outsl
repnz
stos
dec
adc
lcall
addl
mov
jp
push
fstpt
or
pop
iret
movsl
incl
call
popa
js
push
jnp
test
mov
lret
sub
add
incl
sbb
jle
pop
inc
push
ds
xlat
cs
in
dec
mov
adc
xchg
xchg
or
dec
mov
in
fimuls
into
push
lods
cmp
ja
mov
mov
inc
data16
inc
and
lret
adc
ljmp
mov
jle
inc
shlb
xorl
jp
sub
pusha
mov
push
pop
shl
add
mov
ljmp
icebp
incl
dec
in
sbb
into
cmpsl
adc
xchg
sbb
mov
cmp
ret
loop
js
jne
stos
cmp
jg
sub
addr16
mov
or
cli
shrb
inc
pop
rcrb
and
call
fucomip
movsb
mov
mov
pop
pop
mov
aas
pushf
inc
cmpsb
jbe
dec
sub
inc
je
mov
incl
lds
or
cmp
pop
jne
in
popa
les
test
xchg
or
push
aas
mov
cmp
xor
sbb
pop
daa
imul
hlt
pop
pop
cmp
adcb
jo
stos
iret
mov
ljmp
std
fildll
mov
jmp
popa
jl
sbbl
fistpll
dec
cmp
aaa
fldenv
push
mov
jmp
fimull
imul
mov
mov
or
dec
cmpb
ret
add
push
pusha
jbe
pushl
jp
push
mov
inc
sbb
xchg
sarb
lcall
pop
out
cmp
xor
clc
lret
mov
inc
in
sub
outsl
mov
std
cmp
sbb
jecxz
xchg
loop
pop
dec
jmp
addl
ljmp
mov
out
scas
addr16
rsqrtps
mov
loopne
sub
icebp
das
lock
mov
fbstp
aam
xchg
mov
nop
mov
push
rolb
fisttps
add
push
and
iret
add
cmpsb
clc
cwtl
inc
xchg
or
mov
mov
mov
sahf
jno
jmp
dec
test
sub
or
cwtl
push
test
jo
jno
add
jge
daa
pop
pushl
adc
xlat
or
pop
out
mov
jle
mov
mov
pushl
clc
jmp
lods
sbbl
cmpsl
mov
stc
sub
cmpsl
inc
mov
leave
call
jp
mov
cmpl
cmp
inc
insl
jp
adc
mov
lcall
jb
sbb
or
pop
movsl
or
mov
sbb
jle
ret
pop
jmp
inc
iret
lock
bound
in
ljmp
xor
and
imul
fistl
or
cld
cli
mov
aaa
fnstsw
mov
pop
cld
decl
push
fadd
enter
in
inc
cmovb
shll
push
jecxz
xchg
enter
movsl
lds
add
jg
je
jnp
stc
imul
push
test
repnz
in
rcr
jle
xchg
arpl
lods
cmp
fldcw
jmp
push
outsl
cld
cmp
and
or
bt
dec
fdivs
incl
inc
dec
mov
mull
daa
imul
xchg
pop
push
repz
ja
jb
sar
push
sub
adc
jle
icebp
cmp
enter
dec
push
loop
inc
mov
inc
cs
cmp
aad
int3
sbb
or
sbbl
sbb
decb
fldcw
jg
leave
ljmp
sbb
sti
jl
test
aaa
insb
jl
loopne
testb
ljmp
addr16
pop
into
movsl
aas
pop
sub
fdivrl
add
xor
shll
xchg
adc
lcall
decl
shll
ds
mov
mov
jge
jmp
jnp
in
addl
sbb
stos
lea
pop
cmc
mov
mov
rcrb
adc
rorl
gs
add
ret
pop
xchg
nop
incl
je
clc
sub
xor
les
aad
lds
add
xchg
push
adc
in
xor
jp
mov
dec
mov
dec
cld
inc
dec
cmp
pop
xor
movsl
dec
decl
mov
fsubrl
mov
lods
mov
pop
nop
fwait
cmp
jmp
test
scas
add
and
insl
sbb
xor
dec
cmp
gs
call
sub
inc
lock
sti
shlb
sbb
or
jmp
pop
jmp
cmp
lea
mov
insl
repnz
add
inc
mov
in
in
push
add
pop
fwait
movsl
aad
lods
aam
shl
insb
fdivrs
ret
mov
push
push
sub
stos
adc
aaa
sahf
ss
ljmp
sbb
jp
ljmp
mov
in
mov
cli
inc
shrb
out
dec
inc
fsubrs
repz
cmp
jb
incl
mov
dec
sub
ljmp
inc
repz
enter
nop
add
mov
push
es
jmp
inc
sub
pop
cmp
test
inc
or
inc
sti
jp
cmp
adc
dec
lods
pop
pop
mov
mov
sar
cli
pop
dec
push
pusha
lret
popl
xlat
mov
js
mov
test
push
mov
add
loop
insb
je
test
aam
jg
cmc
sub
xor
cltd
jge
icebp
pop
xor
loopne
mov
ss
mov
sbb
pop
sar
sbb
lahf
add
cmp
pop
sbb
jne
lea
sub
std
or
decl
out
xchg
aas
fists
push
mov
enter
inc
filds
pop
popa
std
xchg
jmp
sub
ret
bound
into
xor
add
cs
jecxz
adc
imul
ljmp
incl
pop
jbe
and
adc
stos
addr16
movsb
sbb
test
lods
mov
or
hlt
pushl
test
sarl
roll
ljmp
imul
mov
cwtl
ljmp
ret
mov
decb
movsb
or
dec
cmc
imul
out
incl
pushl
lcall
dec
rcrl
xlat
xchg
xor
call
pop
jo
inc
mov
out
jnp
pop
call
mov
adc
cmp
sbb
or
dec
sbb
jg
or
mov
push
jle
mov
into
daa
cmp
or
mov
loop
cmp
shrb
add
leave
lret
sbb
sbb
xchg
mov
mov
xor
pop
or
loope
mov
cmc
dec
jecxz
imul
ss
push
in
sbb
pop
mov
xchg
xchg
push
dec
dec
push
push
jecxz
pop
stos
stc
and
xlat
popa
stos
ret
clc
mov
or
aaa
sbb
movsl
dec
fstpt
xchg
and
imul
fstpl
xor
adc
clc
push
sub
negl
ret
jmp
or
clc
pop
fistpl
imul
sbb
pop
xor
dec
pusha
les
or
call
out
jp
mov
inc
dec
popa
mov
insl
dec
sbb
lods
fcom
in
jmp
rcl
incl
mov
sub
scas
insl
and
jecxz
dec
push
adc
decl
sub
jmp
sub
mov
jae
adc
fsubrs
ljmp
mov
cwtl
subl
mov
pop
loopne
xor
push
lea
test
mov
jg
out
and
fildl
xchg
xchg
fistps
js
mov
lcall
xor
sarb
add
insl
or
mov
lret
in
jle
lock
ljmp
adc
mov
dec
popa
mov
sbb
cmc
xor
and
inc
mov
sbb
test
ljmp
sub
mov
add
fldenv
cwtl
outsl
addr16
lods
and
jg
push
sub
inc
mov
inc
ss
add
sar
cmp
movsb
cli
pop
out
ret
aas
sbb
movsl
inc
and
stos
inc
sub
pop
pop
push
call
dec
jbe
or
jg
or
adc
test
adcl
push
rcrb
cli
pop
call
nop
loop
stos
sarl
push
and
pushl
out
insb
scas
push
jecxz
loopne
dec
sub
mov
add
sarb
cmp
insl
lcall
pop
mov
add
fwait
cmp
push
out
pop
pushl
mov
lods
push
mov
sub
scas
push
rolb
test
arpl
push
cli
lcall
call
xchg
push
jbe
movsl
movsb
push
or
sbb
jne
rclb
dec
mov
push
cmp
inc
dec
push
sub
lds
adc
jno,pn
push
mov
and
cmpsl
cmp
outsl
xorl
or
xchg
in
add
dec
clc
cmp
out
sub
xchg
mov
adc
cwtl
cmp
jmp
dec
sarb
jb
lahf
test
lcall
incb
adc
mov
fcomp
shrl
std
lcall
pushf
pop
adc
sbb
mov
out
sbb
add
mov
fdivrs
dec
push
mov
ret
movsl
xchg
jne
int3
inc
addr16
incl
outsb
movsb
mov
mov
fcoml
testb
incl
pop
das
cmp
mov
pusha
clc
in
push
xor
fnstcw
outsl
fistpll
jmp
or
add
daa
mov
lea
cmp
jge
mov
sub
cmpsb
mov
inc
fisttpl
mov
popa
divb
adc
or
arpl
push
lcall
flds
mov
mov
sbb
adc
cmc
sbb
adc
push
ja
cmp
andb
mov
sub
aam
xor
stc
jbe
xchg
push
sbbl
adc
sbb
outsl
mov
xchg
jb
loop
jno
lcall
imul
incl
fs
lds
and
lds
pop
test
sub
loopne
jg
leave
clc
pushl
add
outsl
add
push
cs
leave
xor
pop
jbe
icebp
in
aam
pop
jmp
xchg
rcrb
inc
in
lods
test
or
sbb
lcall
ljmp
test
in
scas
fildl
xor
push
loopne
aad
jne
sub
inc
std
push
sar
jmp
adc
test
int
fsubrs
mov
movl
inc
xchg
cwtl
cmp
lods
incl
pop
cmp
mov
lea
dec
stc
icebp
out
push
pop
loope
pop
inc
in
add
fwait
pop
mov
sub
push
fnstsw
lea
pushf
jge
cmp
push
hlt
jg
mov
in
lods
push
mov
ljmp
ljmp
push
jl
or
roll
cs
push
cmp
lahf
imul
je
push
stc
cltd
rcrb
add
pop
sub
in
imul
sbb
xchg
lret
push
or
cli
jge
jae
push
ljmp
outsl
ret
xor
aas
shrb
mov
xchg
pop
daa
les
cmp
dec
pop
cli
adc
inc
mov
les
sub
mov
outsb
scas
pop
xor
test
or
pop
imul
ret
sub
jnp
lods
call
mov
aam
jmp
imul
xchg
insl
jnp
fstpl
mov
xor
or
fists
mov
xor
nop
jecxz
leave
mov
sub
aad
pop
arpl
call
repz
xor
cmp
std
jp
xor
lcall
mov
das
dec
xchg
loop
cmp
pop
loopne
adc
adc
pop
stos
incl
in
je
in
ss
movsl
xchg
mov
test
mov
call
sub
dec
push
sbb
add
fiaddl
out
mov
decl
xchg
dec
orl
iret
cs
outsl
inc
pop
mov
lahf
adc
ds
out
xchg
scas
insb
jg
icebp
repz
push
gs
xor
jmp
pop
and
je
in
lcall
sub
les
in
test
dec
and
xor
lret
and
jno
adc
add
ret
rcrb
out
lock
in
push
movsb
ljmp
pop
call
and
fmulp
shlb
imul
push
adc
sbb
lcall
jecxz
adc
add
mov
dec
aaa
add
push
xchg
xor
inc
cmp
inc
sbb
imul
jecxz
or
jl
stos
incl
or
lock
test
push
mov
inc
jle
sahf
scas
scas
cmp
nop
les
test
pop
mov
jl
adcb
out
in
push
or
iret
jle
out
or
mov
dec
idivl
xor
movsl
imul
pop
sbb
mov
and
mov
in
out
fnstenv
and
mov
jmp
mov
mov
adc
das
xor
icebp
mov
jg
xchg
outsb
inc
cmp
add
xor
adc
push
pop
sub
shrb
mov
test
add
decl
popf
imul
cmp
cltd
mov
sbb
pop
out
cs
jae
scas
cmp
lcall
out
xchg
mov
and
xor
xchg
pop
into
int
and
hlt
push
lret
ljmp
mov
mov
repz
fwait
in
loope
cmp
int3
enter
and
mov
divl
push
lahf
sbb
lret
out
aaa
cli
add
lock
mov
dec
clc
mov
jne
in
inc
lahf
cltd
fcmovbe
enter
jp
adc
and
push
or
insl
push
mov
mov
test
dec
decl
push
pusha
xchg
lods
adc
ror
cmpsl
jmp
insl
popf
out
out
xchg
sub
xchg
in
mov
cltd
rcll
dec
ja
sub
mov
mov
push
xchg
or
and
popf
push
or
iret
cmp
or
lcall
mov
xor
in
mov
ss
es
stos
inc
sbb
jmp
lods
out
mov
andb
imul
call
inc
dec
lcall
sti
or
and
xchg
ljmp
std
jl
repz
lcall
jmp
xchg
push
int3
bound
sub
leave
jnp
jns
jg
add
rolb
push
xlat
fldt
adc
mov
sbb
mov
lock
push
ds
xchg
push
addr16
sbb
test
sbb
mov
dec
mov
das
xchg
dec
stos
sub
ljmp
fistpll
adc
inc
sbb
pop
xchg
mov
stos
mov
nop
jl
outsl
cli
mov
dec
es
sbb
lods
mov
movsl
stc
sub
mov
aas
jp
insl
leave
push
add
push
and
pop
psrad
iret
push
imul
jg
xor
dec
mov
test
xchg
mov
adc
mov
push
mov
stc
and
mov
dec
ljmp
and
mov
mov
cmp
add
mov
movsb
pop
push
mov
incl
lds
jecxz
adc
ret
jmp
lcall
lcall
arpl
scas
movsb
push
inc
push
and
xor
pop
and
decl
nop
sub
imul
push
push
das
pusha
orb
lods
lret
aad
jo
shlb
outsl
push
xchg
jo
inc
rorl
xchg
inc
inc
add
xor
jl
std
mov
lcall
mov
out
inc
or
fcoms
adc
pushl
negb
insb
out
hlt
and
pushl
sbb
jg
push
inc
pop
jo
js
jmp
pop
scas
sbb
imul
mov
cmpsl
dec
and
icebp
negb
mov
push
movsl
cmp
xor
push
xchg
movsl
in
ljmp
add
lcall
insb
pop
sub
adc
mov
adc
sub
adc
mov
hlt
movsl
lret
pusha
jb
jle
test
cltd
enter
pushl
mov
test
test
pop
mov
add
ja
and
push
lods
push
loopne
sbbb
test
xlat
cmp
rcll
movsb
je
int
pop
insb
decl
ljmp
or
push
pop
push
xor
dec
es
push
or
sbb
nop
cld
sbb
das
push
or
popf
cmpsl
lar
xchg
cli
mov
daa
pop
insl
adc
fcoms
test
out
mov
add
cmp
call
decl
push
sub
std
xor
jnp
inc
fwait
shrb
cmp
dec
xchg
sahf
hlt
pop
shrl
dec
pusha
pop
data16
fcoml
sbb
cmp
xor
adc
testb
adc
sbb
jnp
jge
das
insb
xchg
adc
mov
ja
jbe
jb
mov
pushl
jmp
aam
fadds
jmp
dec
mov
sti
xchg
push
repnz
cmc
xor
test
xchg
rcrl
sbb
inc
movsb
divb
mov
mov
add
scas
jecxz
ficoml
adc
mov
jmp
dec
lds
sbb
cs
mov
cmp
scas
hlt
icebp
lods
subl
decl
jge
call
ret
dec
imulb
fwait
xchg
xor
xchg
daa
ffreep
mov
stos
sti
call
mov
scas
sbb
out
pushf
ficoms
enter
push
sbb
roll
inc
ljmp
jg
cmp
sahf
xchg
fidivrl
nop
and
mov
and
mov
xchg
js
cmpsb
xchg
call
daa
iret
sbb
xchg
adc
cmpb
and
push
mov
inc
stc
insb
adc
or
inc
mov
xchg
sti
xchg
ljmp
push
decl
mov
ret
cltd
loop
or
shll
xorl
mov
cld
ljmp
dec
pushf
std
mov
imul
outsl
sbb
mov
mov
icebp
in
xor
jge
and
inc
jg
push
imul
into
mov
push
xor
xchg
dec
subl
test
mov
jl
inc
outsl
ss
js
out
sti
lea
jns
mov
decl
and
mov
mov
mov
xor
test
mov
inc
push
jae
aaa
das
std
incl
out
sbb
push
pop
clc
fwait
mov
add
xchg
rclb
lcall
nop
mov
test
int3
stos
insb
cmpsl
ds
mov
cltd
sbb
insl
movsb
cmpsl
xor
adc
jp
ljmp
ret
jb
jb
jecxz
pop
in
xor
fidivs
pop
mov
sbb
or
cld
mov
repz
inc
inc
repnz
lret
push
stos
test
ja
xchg
test
cld
ljmp
push
ja
ss
mov
es
jg
xchg
xor
sub
ljmp
int3
or
aad
dec
outsb
lcall
fistps
lock
mov
movl
popa
xchg
xchg
cld
outsb
jb
enter
or
add
xlat
cwtl
pop
and
pop
jg
cwtl
adc
call
incl
popa
aam
adc
jo
jp
mov
rolb
rcl
mov
or
test
jmp
out
out
and
dec
mov
movsl
inc
sti
xor
pop
dec
int
and
push
xor
add
or
sbb
xchg
mov
fisubrl
or
das
outsb
xor
sar
mov
xchg
push
mov
addr16
mov
stos
rol
andl
mov
fucomip
ret
movsl
pop
jle
push
dec
inc
jp
fbld
cli
outsb
in
call
mov
fwait
ja
adc
push
lret
xchg
leave
ljmp
inc
fstl
xlat
clc
in
outsl
fstps
into
and
int3
inc
ds
ds
dec
arpl
and
pushl
push
push
sbb
sub
scas
sub
clc
gs
test
in
fidivs
loopne
decl
daa
jle
pushf
push
into
rcll
sbb
out
in
loope
and
pop
inc
mov
pop
inc
push
orb
imul
ret
ja
xchg
jecxz
push
ljmp
add
insb
aaa
roll
rcrl
add
lock
dec
push
jle
adc
jp
dec
adc
test
outsb
adc
mov
mov
imull
ljmp
shl
xchg
jns
daa
pop
adc
mov
je
xchg
mov
cld
dec
sar
pushl
addr16
sub
lahf
mov
inc
xchg
fisubl
pop
cmp
lea
cmc
cmp
or
or
push
xchg
call
xchg
test
xor
pop
mov
hlt
stos
loopne
movsb
xchg
jmp
ja
push
pop
fsubr
ds
jbe
push
sarl
mov
ljmp
mov
mov
mov
dec
mov
rcrb
xor
aam
xor
xor
sbb
mov
movsb
mov
pop
ja
pushl
cli
and
repnz
push
sub
jo
in
xor
cltd
aaa
imul
inc
mov
les
orl
jl
push
sbb
mov
js
pop
xlat
jmp
cwtl
jl
outsl
movsl
xchg
cmp
lahf
jmp
fildl
adc
pushl
add
sub
push
jp
int
push
or
sti
scas
pop
adc
lods
fsubp
sbb
stos
pushf
sub
rorl
sub
jmp
out
fcmovnb
mov
mov
mov
stos
js
cmc
push
xchg
xchg
fcompl
pop
ljmp
jne
outsl
adc
xchg
pushf
cmpl
ljmp
sbb
dec
test
xchg
cmp
lahf
hlt
inc
movsb
aam
mov
lcall
jns
mov
sbb
sub
ljmp
cmc
je
mov
mov
add
std
mov
loop
rcl
mov
mov
subb
xor
mov
push
call
pop
and
fisttpll
test
call
push
into
inc
and
mov
mov
call
xor
adc
ret
add
jae
inc
ret
cmp
aas
sub
test
sub
xchg
pushf
test
dec
jo
inc
sub
lret
pop
sub
inc
xchg
push
call
addl
cmpsb
add
shrl
pop
call
fcmovnb
mov
add
sub
and
fs
fucomip
dec
sti
jb
out
imul
jp
dec
pop
dec
mov
lcall
insb
int3
popf
and
and
lea
sub
or
rol
stos
xor
imul
cmc
pushl
je
out
les
xor
push
call
lcall
movsb
mov
scas
dec
jp
lret
stos
jmp
std
mov
cld
lock
pop
clc
inc
stos
xchg
pop
fcomp
xchg
and
fisttps
mov
decl
adc
xchg
mov
sbb
aas
lock
dec
xchg
jb
fbld
fldenv
mov
sub
decl
mov
xchg
bound
xchg
mov
mov
xor
sbb
call
clc
jmp
mov
pop
out
mov
push
rcr
js
roll
adc
mov
xor
jecxz
lea
out
add
loope
add
pop
mov
dec
fbld
jbe
ljmp
call
cld
leave
and
dec
test
inc
xchg
aam
test
cmp
test
sar
mov
push
jecxz
dec
mov
and
add
xchg
cmpsl
jmp
jg
clc
add
or
mov
push
xlat
or
push
pop
xchg
xor
loopne
pop
clc
jg
sti
or
inc
or
xorb
imul
mov
pusha
lret
mov
in
cmpsb
pop
ja
stos
jge
lahf
sbb
inc
adc
daa
mov
xchg
adc
aad
cltd
xorl
dec
xor
xchg
es
mov
dec
jbe
daa
cmp
lods
mov
ljmp
mov
lds
pop
ficoml
jmp
imul
aas
xor
addr16
fistpll
cmp
imul
testb
iret
test
and
push
mov
push
xchg
in
clc
push
mov
lea
lcall
jg
int
mov
jne
movsb
sub
imul
or
pop
or
xor
pop
ljmp
and
and
push
das
dec
ffreep
jae
or
out
add
test
ss
push
mov
repnz
lock
stc
jmp
fmul
or
popa
out
dec
jle
fidivrs
mov
sub
mov
dec
mov
jno
mov
das
std
xor
pushf
xchg
mov
sbb
pop
ds
jle
pop
sbb
ljmp
movsb
notl
or
sub
cmpsb
insl
xchg
add
xchg
and
and
incl
test
push
imul
pop
or
sub
mov
cli
cwtl
aam
and
xor
jbe
enter
das
hlt
adc
lahf
into
add
lds
test
movsl
xor
cld
pushf
int3
fsts
mov
js
lcall
or
or
mov
mov
outsb
sub
mov
frstor
jmp
ljmp
inc
fsubr
into
inc
push
cmpsb
int
addr16
jo
jns
inc
xor
lcall
inc
xlat
jecxz
jecxz
outsb
cwtl
pop
sub
cmp
pop
mov
xchg
fisttpll
insl
clc
dec
aaa
insl
fstpt
fs
mov
ds
faddl
clc
cmc
fimull
int
call
outsl
je
movsl
jno
or
cmp
xchg
dec
sub
repnz
push
lret
stos
sub
mov
in
adc
mov
shl
cmpsl
in
or
jmp
adc
pop
gs
cltd
fsub
lcall
push
faddl
xchg
dec
xlat
fwait
sbb
mov
incl
cld
test
stos
cwtl
test
cmp
and
xlat
or
lret
xlat
and
jmp
add
mov
inc
xor
mov
mov
jae
pop
pop
mov
cmpsb
cmp
mov
dec
mov
sbb
loop
inc
fdivl
fcmovnb
leave
fcomip
idiv
pop
ljmp
xchg
and
sub
mov
cld
mov
fsubs
ljmp
or
add
and
mov
les
inc
decl
outsb
aas
dec
dec
xor
mov
sbb
subb
mov
ss
inc
imul
fs
jmp
mov
jae
xchg
pusha
mov
mov
shlb
inc
lcall
decl
ffree
loop
repz
and
mov
sub
es
pop
dec
cltd
mov
pop
clc
pushl
mov
mov
fbstp
es
jle
iret
mov
or
cmp
cmpsb
sub
add
aam
or
sbb
xor
cli
pushl
hlt
lahf
cmpsl
loopne
jg
sub
ja
pushl
clc
inc
loope
pop
pusha
fsubrl
xchg
nop
fistpl
lods
call
dec
adc
cld
aad
or
fisttpl
dec
mov
test
aaa
cli
cld
iret
cmp
stos
add
adc
mov
add
loope
sbb
mov
in
and
cmpsl
and
inc
les
aaa
lcall
mov
fistl
pop
jnp
mov
sub
push
test
add
popf
std
push
add
popf
sar
std
push
adc
in
sub
xor
or
stos
mov
mov
jnp
loope
sarb
sbb
lret
scas
jp
jg
dec
rolb
repz
mov
sub
or
das
mov
dec
push
lahf
push
dec
lods
adc
jp
dec
iret
lahf
cltd
in
sbb
pop
and
pushf
loope
inc
add
xor
sub
xchg
push
roll
je
arpl
cmp
adc
sub
cmove
cmpb
cmp
and
push
ds
pop
bound
lock
jmp
xchg
mov
pop
mov
repnz
inc
sbb
and
xchg
ljmp
xchg
dec
aaa
or
icebp
stos
inc
int
add
jle
ret
sti
nop
icebp
sbb
push
inc
cmp
sub
int
popf
ds
sbb
sub
jns
js
mov
call
pop
mov
test
push
addl
pop
adcb
or
filds
mov
push
add
out
dec
je
dec
pushl
orb
cmp
dec
test
or
rcrl
mov
jmp
out
fcmovnu
mov
pushf
jbe
inc
push
iret
or
push
adc
ss
fdivr
or
dec
ret
ljmp
pop
mov
in
or
xchg
ss
js
lcall
test
sub
out
pop
lods
out
mov
aas
and
jg
dec
or
in
mov
xchg
and
xor
fdivr
std
stos
and
fucomip
ljmp
sbb
dec
mov
pop
jno
in
sbb
jg
sbb
fdivs
cmc
jl
push
xor
mov
xor
sti
aam
popa
or
call
scas
lret
ss
addb
lea
mov
clc
shl
into
std
call
mov
adc
scas
add
sbb
push
pop
pop
idivb
vpaddb
pop
adc
hlt
insl
pop
add
add
call
test
xorb
ret
lret
and
or
mov
ror
mov
lret
xor
mov
pushl
jle
jbe
push
ljmp
mov
xlat
iret
sarl
pop
xchg
push
addb
mov
or
jg
mov
aam
push
bound
rorb
je
les
pop
or
aas
mov
cmp
int
hlt
decl
jecxz
nop
cmp
xchg
outsb
arpl
loopne
mov
jg
mov
pusha
cmp
aam
outsl
gs
pop
repnz
mov
sbb
ds
cmpsl
xchg
cmp
push
pop
std
pop
cmc
lcall
aas
outsl
scas
mov
push
iret
sub
ja
cmpb
ljmp
js
lock
cmpsb
ja
push
fistl
jge
push
inc
push
xor
pop
xchg
repz
aas
xor
decb
iret
call
jne
mov
add
int3
fmull
or
decl
pop
shlb
dec
call
in
std
mov
pop
sub
xchg
rcl
movsl
jae
cltd
pushw
inc
sbb
lret
movsl
cmc
movsl
cs
cmp
les
or
bound
cmc
inc
sahf
jbe
cmp
outsl
icebp
movsl
jecxz,pn
pop
push
scas
or
add
dec
or
das
mov
pop
adc
sbb
inc
aaa
xor
dec
dec
loope
mov
or
lret
sub
stos
in
dec
lods
cmp
xor
pop
arpl
pop
mov
inc
decl
push
xchg
inc
js
cmp
aam
and
adc
cmp
pushl
sub
pop
xchg
cli
jmp
add
idivb
adc
int
in
push
adc
dec
call
lods
dec
sub
inc
out
sbb
jne
mov
sti
mov
js
lds
call
rcll
js
pushw
fisttpll
fimuls
hlt
repz
jae
fsubrl
dec
mov
addr16
decl
or
xchg
insb
ret
hlt
sbb
xchg
cmp
dec
and
loope
inc
cmc
push
or
mov
jle
cmpsb
shrb
mov
jmp
dec
shlb
xchg
or
push
and
decl
daa
das
shll
repz
pop
and
lock
mov
xchg
and
cltd
pop
jnp
mov
decl
adc
mov
xchg
push
pop
cmp
jne
mov
sahf
int3
loop
jb
imul
push
clc
or
aam
scas
push
ljmp
cld
dec
shl
je
fbld
out
cltd
mov
ss
inc
cmpsb
and
test
incl
in
iret
push
xchg
xchg
inc
lcall
testl
pop
xor
arpl
int3
lahf
jecxz
decb
lret
inc
inc
dec
mov
push
addr16
xchg
repnz
pop
movsl
int3
movsl
push
sti
xor
call
mov
fwait
scas
test
and
std
pushl
les
arpl
add
adc
mov
add
and
or
mov
loop
jmp
fistl
notl
test
and
mov
adc
push
daa
xchg
mov
in
hlt
jnp
pushl
mov
shrl
call
lcall
fs
cli
cs
ror
addb
sub
jg
lcall
or
popf
and
out
pop
mov
jae
std
lds
decl
dec
aad
pop
xor
dec
jmp
stos
daa
jge
pop
inc
add
std
idivb
add
cwtl
decl
jl
shll
fninit
scas
inc
adcl
ficoml
jbe
divl
das
imul
cmp
lock
icebp
movsb
in
loop
pushl
fisubrs
cmp
cwtl
jno
push
andl
dec
je
dec
pop
mov
or
cmp
fisubrl
inc
push
and
mov
cmp
ljmp
jb
mov
push
fimuls
movsb
dec
or
movsb
fwait
arpl
jmp
sbb
rorl
and
push
insl
push
gs
cs
enter
mov
ret
lahf
decl
std
dec
mov
insb
adc
xlat
sub
push
aad
cld
pop
jmp
scas
xchg
decl
or
mov
sti
shll
inc
loope
in
ss
jl
test
incl
popa
jnp
jmp
dec
jp
lcall
cmp
call
sti
jp
adc
cmp
int3
add
cli
add
xchg
jne
mov
das
cmc
pushl
ror
cs
push
push
pop
cmc
push
inc
ret
mov
jge
adc
popf
sbb
incl
ret
repnz
jle
sub
dec
je
and
mov
and
aas
inc
xor
jae
xor
jg
incl
add
and
jno
pop
lret
pop
lods
sbb
lret
shlb
jmp
jns
mov
leave
dec
faddp
mov
mov
xchg
sar
decl
cmp
clc
jmp
fisubs
inc
orl
mov
hlt
sbb
incl
adc
xchg
mov
pop
add
addr16
push
add
pop
cltd
dec
aaa
cli
jmp
push
stos
add
test
jp
cwtl
mov
repnz
lcall
dec
mov
stos
je
scas
fldcw
mov
xor
dec
jb
loope
push
fidivs
adcb
inc
orl
or
sub
mov
call
sarl
mov
cmp
mov
pusha
jno
inc
fcomp
fidivrl
and
iret
rcrl
cmp
rorl
cmc
pop
cwtl
sbb
push
sub
mov
adc
xor
sti
push
xrstor
cmp
pusha
add
inc
mov
sti
jo
pop
push
sarl
in
push
inc
clc
sub
xchg
and
push
mov
xor
aaa
test
xchg
pop
outsl
inc
out
cmp
sbb
pop
out
stc
cmpsb
cli
lcall
test
sbbb
pop
mov
lea
mov
or
add
xor
shll
push
push
loop
fucomip
clc
mov
call
pop
popf
xchg
pop
scas
rclb
daa
cs
mov
xchg
insl
addb
lahf
lret
xor
inc
dec
adc
mov
ficoml
clc
imul
add
fwait
cmp
inc
dec
jg
call
fsubrl
inc
jmp
add
push
cmp
orb
add
and
outsl
das
xchg
pop
xchg
test
add
jle
jg
cmc
sbb
sub
xor
in
push
mov
cmp
decl
add
aad
fistpll
imul
sbbl
jno
or
cmp
std
pop
or
pop
pop
xor
pop
push
repnz
repnz
or
push
mov
cmp
jg
nop
push
into
ret
push
loop
sub
xchg
mov
xchg
or
cs
lret
inc
fidivrs
sar
lcall
pop
cmp
pop
notl
add
or
insw
faddp
inc
fisttps
dec
dec
sub
pushl
sbb
sti
xchg
jnp
sub
add
add
cmc
loopne
hlt
imulb
decl
pop
push
arpl
mov
push
call
and
leave
in
nop
sbb
push
dec
lret
mov
sbb
outsb
cmc
decl
sbb
fsubrs
or
mov
lret
jl
mov
movsl
cmc
jbe
adc
fcompl
mov
lahf
das
cltd
adc
mov
xor
jmp
pop
aaa
das
out
out
rorl
idivl
cmp
mov
fnstenv
push
sub
xorl
fisttps
push
mov
andb
incl
jno
xor
movsb
add
push
adc
add
scas
leave
lret
jg
stc
pop
dec
mov
pop
cld
testb
add
cli
movsb
js
cld
movsb
in
imul
std
and
dec
std
pop
mov
adc
jmp
rolb
daa
fcomps
pop
test
jg
or
cwtl
je
andl
jb
xchg
or
ja
xor
test
and
loope
add
sbb
ljmp
pushl
and
pushf
inc
nop
bound
push
cmp
fnstenv
ljmp
ss
mov
inc
jl
xor
inc
dec
cli
pushf
aam
or
mov
mov
ret
jnp
pop
aaa
sub
inc
into
ret
inc
dec
pop
imul
xchg
sahf
fadds
cld
in
lahf
aam
mov
or
adc
sub
fbstp
ljmp
mull
hlt
mov
sbb
jge
xor
lcall
outsb
push
sub
inc
or
push
sbb
sbb
jmp
adc
pop
stos
sub
and
mov
jg
std
xchg
leave
loop
cmp
xchg
shll
lds
in
and
xchg
ret
mov
and
adc
mov
jg
push
xlat
rol
dec
push
mov
sbb
ficoms
mov
push
aas
popa
push
jno
sbb
pop
pop
clc
xchg
stos
aas
push
lcall
scas
adc
cmc
xor
stos
cli
mov
outsb
cmpsl
inc
je
xor
adcl
inc
mov
xlat
bound
jp
cli
sti
addr16
std
cs
sub
xchg
adc
mov
jmp
lret
mov
xor
push
jmp
and
outsl
std
add
cmp
decl
insb
pop
aam
xchg
cmc
inc
loop
mov
aaa
or
dec
mov
cmp
loope
push
pop
and
mov
mov
add
push
jmp
sarl
cwtl
imul
add
dec
xchg
ljmp
out
mov
outsb
or
mov
icebp
inc
pop
out
jo
adc
fnstsw
lcall
das
call
mov
sub
data16
pop
sub
or
and
out
pop
push
mov
call
fcomip
rcrl
sub
fs
inc
mov
adc
mov
or
adc
xlat
add
xor
xchg
rorb
out
fsubs
shll
sub
in
jp
cmp
xor
pop
jo
orl
or
mov
pop
sub
push
imul
cltd
dec
mov
xchg
sub
mov
fdivl
xor
daa
ja
cmp
rcll
xor
pop
call
dec
mov
cwtl
cmp
xchg
mov
fsubr
sbb
lea
clc
sub
call
add
sbb
push
repnz
sbb
xor
in
loop
mov
stos
pushl
mov
cmp
sahf
mov
push
xchg
and
pop
cmp
shlb
dec
lahf
pop
lea
int3
mov
mov
mov
test
cwtl
add
sub
inc
xchg
xchg
cmpsl
xchg
push
push
mov
or
cltd
mov
pushl
test
mov
cmp
pushf
mov
adc
pop
push
xor
pop
arpl
cmc
aam
xor
cmp
lcall
sbb
in
mov
es
icebp
jae
sbb
mov
out
loope
sbb
outsb
std
decl
push
rorl
lahf
movsb
or
jnp
mov
das
cmc
stos
cmp
add
xchg
cltd
outsb
rorl
or
inc
lret
dec
xchg
cli
ret
jns
cld
jns
int3
stos
xchg
lcall
scas
call
lds
pushl
push
add
out
call
jmp
bound
jg
dec
arpl
test
sbb
jne
je
adc
outsb
xchg
jmp
dec
xchg
loopne
into
ret
dec
adc
bound
lds
clc
repnz
decl
bound
in
test
push
sbb
outsb
adc
mov
addr16
push
mov
incl
push
pop
push
push
push
push
flds
mov
mov
push
mov
cmp
test
xchg
pushf
fwait
repz
lcall
cmp
add
jae
xor
pop
jecxz
and
decl
daa
loope
in
adc
xlat
ror
cmp
sbb
aam
fs
jnp
call
cmp
bound
inc
ret
lods
xchg
in
in
add
ljmp
inc
hlt
sub
pop
inc
inc
pop
fdivrl
stos
pop
sbb
mov
sbb
lds
xchg
mov
js
mov
jg
push
mov
push
adc
push
inc
ljmp
mov
push
mov
das
xor
div
inc
lret
sub
add
mov
inc
mov
push
dec
popf
clc
pushf
repz
lods
xor
daa
push
mov
icebp
das
cmc
ljmp
add
sahf
inc
insb
mov
shlb
xchg
dec
sbb
or
sbb
cmp
lods
add
ljmp
lahf
or
stc
mov
popa
cmpsl
sub
jb
sbb
pop
or
mov
imull
iret
push
push
add
cmp
inc
enter
jno
nop
js
hlt
mov
jg
cmpsl
mov
fldln2
xor
cmc
hlt
mov
jp
cmp
xchg
cltd
or
js
sar
sub
push
xor
out
test
lea
cmc
mov
icebp
jl
test
test
jb
sub
add
std
cwtl
and
lds
insb
cmp
ljmp
inc
icebp
les
xchg
mov
adc
cwtl
ljmp
gs
ret
out
mov
jecxz
sbb
or
movsl
addb
xchg
adc
call
or
andl
xor
sarl
sarb
or
decl
imul
mov
pushf
test
arpl
jg
shll
add
xor
iret
mov
into
popa
popa
cld
pop
outsl
pop
and
ljmp
repnz
ret
xchg
scas
ljmp
pop
jbe
outsl
hlt
jmp
test
jge
mov
lods
add
adc
das
and
xor
mov
out
jmp
or
movsl
pop
pop
cmpb
push
std
test
cmc
push
ret
cmp
jmp
pop
inc
xor
outsb
adc
fildll
mov
stos
jns
ss
out
pushf
or
jg
movsl
push
mov
adc
inc
add
dec
and
lcall
lret
les
in
pop
inc
pop
sbb
js
cld
outsl
mov
pop
data16
call
and
jg
scas
push
mov
push
jbe
outsb
ret
lcall
dec
ret
into
xchg
and
movsb
enter
stos
and
lods
dec
mov
mov
add
push
jne
inc
nop
stos
lock
mov
in
shlb
lcall
popa
mov
loopne
and
pushl
or
mov
les
enter
or
xchg
mov
sub
repz
ljmp
cld
imul
adc
pop
out
and
mov
mov
lcall
dec
repnz
bound
out
mov
imul
fistl
ljmp
pop
push
fldcw
adc
pop
cmpsl
dec
sub
aad
jg
js
mov
sbb
sub
in
add
scas
jb
adc
sub
push
adc
jg
aam
inc
out
jp
pop
jne
xchg
push
ljmp
mov
pop
mov
lahf
aaa
inc
lods
aaa
clc
das
std
adc
push
shlb
test
ds
mov
call
lahf
push
arpl
jbe
sub
mov
es
add
mov
lds
test
add
std
dec
inc
icebp
push
cli
lahf
sub
push
mov
dec
scas
mov
inc
loopne
clc
push
xor
cmpsb
xlat
inc
or
call
int
push
push
cld
xor
mov
cmpsb
adc
pop
incl
jmp
sub
sub
adc
jno
xorb
scas
call
pop
loopne
clc
push
fidivrs
loop
fnstenv
lock
mov
push
jle
push
aam
pop
adc
jmp
or
mov
and
add
ljmp
ss
mov
int3
mov
popw
ds
pop
inc
pop
push
jno
mov
aaa
push
sbb
dec
push
sub
mov
jb
xlat
jbe
xor
sbb
sbb
ds
push
mov
lods
xlat
fidivrs
pop
lods
cmp
add
inc
into
js
inc
stos
pop
out
or
and
inc
mov
into
add
add
das
jmp
xor
jg
sti
rcl
sub
cs
or
push
mov
sti
cmpsl
jl
pop
loopne
fstps
mov
push
sarb
xlat
and
aam
js
add
sbb
dec
dec
xchg
clc
decl
in
push
movsb
push
imul
mov
dec
sbb
sbb
xor
inc
cld
jg
add
mov
cli
xlat
sti
popf
and
les
lcall
inc
xor
xor
loopne
lcall
or
js
jne
loop
loop
decl
stos
push
mov
xor
popf
mov
mov
in
nop
push
push
rcrl
jg
decl
xchg
sbb
daa
push
fsubr
or
stc
jo
addl
movaps
in
pushl
add
cli
out
xchg
fnstsw
mov
pop
xchg
arpl
cld
sbb
addb
enter
jmp
pop
sbb
aad
xor
lods
push
inc
lcall
rcr
test
call
or
mov
stos
pop
loope
inc
std
add
xor
movsl
negb
push
outsl
icebp
fbld
ds
ficomps
sub
or
dec
xchg
jno
xchg
jecxz
in
jae,pt
xchg
lcall
cmp
mov
ffreep
cwtl
jns
bound
mov
jp
and
adc
out
add
aad
das
push
aas
push
add
push
lcall
fisubl
sbb
insl
add
add
jno
mov
call
jmp
xor
insl
cs
adc
sub
aad
cmp
gs
fs
sbb
or
imul
and
mov
dec
lods
jne
push
pop
jle
idivl
mov
inc
cmp
jmp
pop
stc
sub
mov
ljmp
xchg
enter
enter
push
pop
add
call
sbb
fcomi
adc
xor
mov
aaa
mov
adc
aam
insb
shrl
js
push
pusha
mov
lcall
jmp
xchg
and
nop
in
pop
stos
insl
adc
scas
inc
loop
cld
or
lods
outsb
inc
mov
jbe
jo
dec
xor
leave
outsl
cmp
clc
das
insl
xchg
or
ret
jmp
adc
adc
jle
add
adc
adc
lcall
add
mov
pop
and
pop
dec
sbb
sbb
add
popa
push
jne
incl
call
ficompl
cmpb
test
outsb
pop
scas
xor
add
inc
cmp
cmp
mov
ret
adc
push
fs
sti
pop
pop
test
or
sbb
mov
pushl
jle
sbb
fdivrs
test
hlt
sbb
mov
pusha
xchg
push
xor
call
leave
sarl
cltd
nop
pop
xor
add
sub
cltd
mov
decl
fildl
xor
xor
ret
pop
mov
push
lcall
fiadds
repz
xor
xor
lcall
mov
outsb
xchg
add
and
dec
xor
cld
inc
sbb
cmp
jmp
inc
aas
mov
daa
jmp
xor
enter
cld
pushl
pop
jnp
subb
js
mov
mov
jno
xor
mov
jne
int
orb
call
adc
push
xchg
xchg
xchg
sub
dec
test
cmpsb
dec
test
ret
in
push
push
jno
rclb
push
pushl
andb
cmp
repnz
pop
lret
and
jns
in
sbb
rcll
mov
decl
stc
sub
mov
sub
xchg
test
jmp
loop
mov
push
inc
ret
je
clc
popf
cmp
mov
or
mov
jne
sub
ljmp
bswap
mov
and
ret
pushf
rol
push
loop
mov
xchg
push
test
gs
or
cltd
cmp
mov
xchg
or
std
rorl
insl
push
push
jl
adc
and
lcall
mov
xlat
adc
int
sbb
add
scas
cmp
aaa
ficompl
inc
je
pop
xchg
in
mov
jg
test
add
mov
cmp
mov
aaa
mov
mov
orl
jp
pop
and
mov
ds
push
inc
push
sub
orl
add
xor
inc
test
int3
or
add
lcall
std
sti
push
gs
addr16
fidivrs
dec
xor
cmpsl
js
push
push
mov
pop
loop
add
cmp
mov
int3
fs
inc
ljmp
push
xlat
dec
pop
in
mov
aas
push
or
jmp
test
pushl
mov
xor
mov
dec
sub
inc
cmpsb
or
idivl
jno
ljmp
das
test
fldl
stos
sbb
cmpl
aam
enter
xchg
nop
shrb
orb
sub
mov
jl
arpl
lock
mov
and
xlat
test
sahf
push
cld
ljmp
push
mov
lret
inc
pop
mov
ja
sbb
das
incl
cmp
int
mov
mov
inc
js
push
insl
ljmp
std
adc
push
xlat
push
xchg
and
sti
lahf
cs
mov
xchg
pop
adc
ljmp
add
cli
movsb
push
mov
cld
movl
jmp
sbb
sarb
bound
and
mov
jns
fsubs
jb
cwtl
int3
fwait
lcall
mov
mov
scas
out
inc
out
hlt
ljmp
push
xor
stos
in
pop
xor
decl
std
outsl
jmp
test
aas
xchg
mov
call
mov
cli
push
jp
jmp
cmpsb
popa
and
mov
loope
and
lock
mov
popa
xchg
push
inc
popa
retw
and
jg
outsb
adc
pop
gs
or
lods
pop
mov
in
pop
add
sti
loope
inc
loopne
push
xchg
cld
xor
or
out
jae
push
fdivs
sbb
rcl
ljmp
sbb
jns
sub
add
sbbb
dec
add
push
fisttpl
clc
incl
jmp
clc
pop
push
ret
stos
lcall
in
xor
pop
filds
stos
mov
bound
das
jnp
adc
aam
leave
pop
lret
outsl
adc
movsl
cs
adc
lcall
cmc
cmpl
add
or
mov
roll
mov
inc
or
and
iret
xor
jno
stos
jnp
es
hlt
idiv
lcall
scas
cli
shll
cmpsb
dec
xor
fnstenv
fldl
ficoms
fiadds
inc
loop
lret
push
jae
int
or
imul
call
test
cmp
into
jl
sti
pusha
or
ret
sub
xchg
pop
push
push
and
jmp
adc
rclb
xchg
cmp
dec
into
mov
rorb
out
xchg
and
sub
pop
loopne
stos
sahf
ret
test
xchg
push
mov
push
rcrl
sub
cmpsb
or
jns
imul
add
in
sub
out
jne
dec
in
cmp
jl
mov
dec
push
and
lcall
jmp
in
je
stc
xor
pop
sarb
adc
xchg
das
lods
dec
fwait
add
pop
std
pushl
adc
jge
or
adc
mov
jg
add
lret
mov
ljmp
pop
dec
sub
xchg
push
dec
mov
xchg
jb
fnsave
pop
sbb
movsl
cmp
loopne
sbb
jp
hlt
flds
call
iret
jb
sub
lea
inc
xchg
out
or
ret
adc
mov
jmp
xor
cmpsl
lods
push
repz
push
adc
jmp
ret
cmp
negl
cmp
push
push
arpl
add
jmp
jmp
or
xchg
add
and
sub
js
notb
dec
pusha
lods
in
mov
pop
rcll
or
call
fistpl
jo
add
xchg
clc
xchg
or
cli
mov
sbb
in
jbe
push
xor
jle
call
xlat
mov
jns
mov
incl
jnp
xchg
xlat
add
xchg
push
sub
lcall
lcall
fisubs
movsb
jp
not
ss
test
outsl
jge
and
inc
xor
add
lahf
mov
leave
jbe
inc
lret
jbe
aad
push
outsl
inc
add
sti
dec
incl
loope
pop
rcrb
or
jmp
in
mov
call
test
pop
or
call
clc
incl
sti
aad
leave
fadds
xor
dec
and
andb
clc
les
push
dec
mov
iret
inc
insb
sub
cmp
sbb
pop
bound
stos
icebp
fistpll
pop
sarl
pushl
jge
and
iret
pop
sbb
insb
andl
add
ljmp
test
adc
sbb
aam
xchg
out
xor
loop
pushl
cmpsl
xor
movsb
repnz
je
fwait
or
lret
lcall
add
std
fistps
stos
mov
sub
cmp
and
dec
jmp
inc
subl
sbbl
mov
xor
test
int3
imul
pop
push
push
je
push
sub
jle
mov
jmp
or
mov
xor
mov
ficompl
es
out
je
call
xchg
mov
adc
mov
add
push
sahf
aaa
cmpsb
push
cmp
ljmp
push
adc
cmp
jne
push
movsl
or
test
test
inc
push
push
es
icebp
cmp
mov
cmp
lret
sahf
push
pop
push
mov
mov
and
stos
sahf
loopne
mov
pop
das
lock
jg
inc
cmc
xchg
nop
mov
inc
js
int
add
mov
ljmp
cmc
and
cld
or
outsb
mov
insl
test
sub
movsl
jle
adc
inc
mov
shrl
out
xchg
aaa
mov
dec
push
pop
dec
shrd
dec
xor
test
incb
std
es
mov
xor
add
mov
lret
jge
xchg
add
mov
ss
shll
daa
mov
movsl
aaa
cltd
add
nop
cmpsb
imul
mov
pop
or
and
mov
dec
adc
jecxz
push
gs
sbb
ficoms
add
dec
outsb
adc
add
imul
in
subl
sbb
jp
stos
jle
pop
push
je
jp
adc
orl
mov
dec
js
insl
cmp
jne
push
aas
mov
frstor
js
cwtl
mov
movsl
push
inc
fsts
push
dec
je
jp
fcmovbe
mov
sbb
pop
pop
insl
xor
adc
aam
lock
pop
or
mov
test
mov
cmc
dec
ja
inc
stos
inc
push
adc
push
adc
clc
insl
pop
jle
push
pop
outsb
jb
mov
inc
push
add
imul
nop
push
push
jno,pn
ss
aam
sub
push
pop
dec
push
outsb
nop
insb
scas
test
adc
dec
adc
cmc
jns
adc
jnp
ja
ja
jle
jno
add
dec
sahf
and
fildl
outsb
jnp
push
outsl
imul
sub
imul
sub
push
push
dec
sub
adc
test
inc
jo
ret
push
add
loopne
call
rolb
add
shr
outsb
popa
pop
push
inc
sub
insl
mov
jb
je
data16
fsts
sub
sbb
add
mov
pop
pop
sub
xor
xorl
push
inc
shll
push
and
xor
lock
push
dec
pop
mov
pop
xlat
enter
and
gs
aaa
mov
loopne
sbb
fnstenv
xchg
push
mov
pop
daa
ja
fists
add
push
mov
mov
test
js
cmp
add
mov
inc
mov
or
lds
jp
scas
lock
jnp
ljmp
fisttps
sti
mov
push
jp
add
lock
sbb
lock
pop
and
adc
jg
inc
add
test
or
mov
test
inc
lcall
mov
cmc
clc
test
push
xchg
mov
in
add
inc
jp
xor
lcall
fcmovnu
idivb
jle
adc
stc
mov
ljmp
xchg
inc
mov
fwait
ja
enter
popa
aaa
mov
xor
fistl
fbstp
pop
and
das
xchg
inc
addb
or
js
cmp
xlat
or
js
add
inc
test
mov
push
loopne
mov
or
sub
data16
cld
or
in
adc
stos
bound
add
jnp
insb
push
jge
aam
push
and
or
pushl
inc
cld
sahf
dec
mov
fisttpll
adc
fwait
pop
mov
jg
enter
pop
xchg
or
or
in
lret
jmp
out
xchg
mov
pop
add
mov
xchg
and
jns
mov
inc
rorl
or
mov
ffree
iret
ljmp
push
push
enter
lret
incl
mov
xchg
dec
xchg
inc
inc
mov
jp
cli
fs
or
imul
pusha
int3
add
orl
adc
xchg
and
pushl
or
mov
adc
test
inc
adc
or
in
arpl
lcall
mov
outsl
cmpsl
dec
imul
mov
insl
imul
or
decl
shlb
xchg
adc
imul
sub
or
pusha
jns
or
stc
sbb
xchg
add
fidivrl
out
push
mov
mov
hlt
decl
pop
xchg
xor
int
xchg
fstl
call
push
in
xor
xchg
xchg
jge
or
mov
nop
push
sub
adc
pop
push
cld
sbb
add
cmpxchg
bnd
adc
clc
decl
test
loop
lds
inc
xor
outsl
mov
dec
or
ja
pop
in
mov
jle
nop
pop
aas
lock
outsl
push
lock
dec
xchg
pop
adc
jmp
insl
sub
fistl
and
sti
adc
push
outsl
movsb
add
cs
adc
mov
adc
mov
clc
scas
fs
jo
test
fidivl
inc
or
dec
push
stc
inc
test
lcall
dec
in
ljmp
xchg
sbb
cmp
sbb
gs
rorl
pop
in
fistps
cwtl
into
ss
ror
inc
dec
xor
scas
jbe
and
mov
test
pushl
notl
dec
mov
pop
inc
dec
cmc
and
rcll
int3
mov
call
pop
loope
pop
mov
jns
test
cmc
pop
xchg
pop
aas
icebp
or
dec
push
lock
int3
decl
sbb
xlat
sub
adc
add
xchg
aaa
dec
add
aam
insb
fdivr
incl
adc
mov
mov
pop
inc
ds
mov
aaa
rcr
call
xor
pop
in
and
inc
movsl
lret
or
inc
add
call
and
lcall
or
sbb
test
sub
jmp
push
dec
enter
das
es
aad
or
adc
sbb
test
cmpsl
push
pushl
ljmp
dec
js
add
or
in
xchg
out
mov
and
mov
cld
sbb
inc
lea
push
dec
in
or
lcall
push
insl
fstps
mov
jmp
jns
mov
jg
mov
test
dec
in
and
sub
insb
and
lret
jne
loope
imul
mov
negb
popl
pop
pop
imul
pushl
std
decl
rcrl
nop
cmp
or
lock
pop
jns
cmp
adc
stc
or
inc
adc
mov
mov
sbb
mov
pop
lret
or
or
push
pop
dec
and
std
or
mov
dec
rcll
jo
add
arpl
test
addr16
inc
sbb
mov
pushl
leave
jns
aad
jnp
das
pop
aaa
or
inc
aad
data16
cmp
mov
iret
das
iret
decb
adc
out
dec
xor
sub
sub
xchg
pop
lea
sbb
lcall
jmp
adc
xor
xor
lret
push
adc
jnp
jmp
add
push
lea
leave
sub
push
cwtl
dec
mov
sub
js
sbb
call
push
and
popf
xchg
jb
cmp
push
push
lahf
or
cmp
jae
jmp
or
popf
and
dec
daa
sbb
lock
pop
stos
int3
xchg
push
add
sbb
jp
ljmp
xchg
es
repnz
adc
mov
push
into
fistps
push
mov
dec
sahf
and
push
or
sarl
jl
pop
leave
fsubrp
sar
push
and
adc
test
gs
mov
add
sub
decl
push
sbb
sub
sbb
out
mov
cmpsl
sbb
jp
jg
jmp
psrld
imulb
sub
or
in
sti
lea
test
push
inc
dec
arpl
or
dec
xor
lds
mov
dec
jg
lcall
lods
mov
mov
adc
lea
out
xchg
sub
push
cmp
incl
mov
mov
and
mov
fcompl
jecxz
stc
enter
adc
dec
xchg
sub
cwtl
mov
mov
loope
inc
pop
xchg
mov
insl
loopne
outsl
dec
sbb
jge
xor
pop
js
test
jg
jmp
xchg
inc
add
xlat
iret
cmp
incl
loope
cmpb
adc
daa
or
cmp
cwtl
sbb
mov
sub
jnp
ret
fcoms
jge
cmp
pop
cld
jge
dec
xchg
xchg
in
int3
dec
sti
push
jne
scas
jae
cwtl
cmp
sub
xor
xchg
push
pop
adc
insl
in
push
or
jg
inc
and
daa
aaa
cmp
jns
fcoms
sbb
pop
xor
xchg
pop
mov
shrl
incl
sbb
adc
push
push
push
xor
ror
add
cmc
sbbl
out
jae
cmc
stc
ja
sub
adc
pop
mov
jg
push
frstor
out
xchg
jp
or
jle
adc
mov
outsb
aad
mov
js
insl
ljmp
outsl
movb
bound
push
adc
push
xchg
std
std
decl
xor
out
test
fadd
pop
and
xor
mov
lea
das
fdivs
sbb
cmpsb
or
or
lcall
std
cld
decb
mov
push
pop
insl
sbb
rcl
cmc
and
pop
outsl
lock
jmp
and
sbb
pushl
int
push
jl
das
test
pop
mov
push
mov
and
dec
lea
into
shld
decl
and
fsubrs
pop
nop
pop
and
or
stos
imul
mov
inc
push
dec
or
insl
int3
dec
push
push
and
mov
inc
iret
addl
enter
decl
mov
sub
lret
imul
cmp
jg
decl
push
mov
sbb
cmpsb
outsb
mov
sub
lds
inc
fidivrs
and
decl
or
inc
adc
jp,pt
xchg
or
pop
mov
mov
jmp
sbb
pop
sbb
xchg
mov
int
push
and
decl
stc
xor
out
dec
xor
sub
inc
dec
mov
dec
or
mov
and
pop
scas
insl
mov
aas
daa
jp
mov
loop
jge
inc
or
pop
cli
inc
clc
cmp
repnz
testl
jg
lcall
cmp
mov
and
aaa
inc
jmp
es
decl
and
add
sub
cltd
sub
inc
xor
xor
and
cmc
dec
mov
jg
dec
inc
pop
add
icebp
cmp
es
push
aad
popa
stc
xchg
pop
fmull
fimull
or
mov
jno
sub
xchg
pushl
cmpsb
outsb
xor
xor
or
jno
xchg
or
lcall
imul
pop
xchg
xchg
lret
and
punpckhdq
jne
js
jbe
incl
cmp
xchg
movsb
out
es
mov
mov
or
cmp
pop
test
dec
adc
in
je
sbb
cs
mov
and
cmpsb
sbb
sbb
jl
pop
xor
sbb
mov
jp
in
cmpsb
jae
xchg
fwait
xchg
ljmp
stos
jnp
leave
xchg
cltd
aaa
lret
jle
sbb
inc
pop
xchg
pop
sbb
pop
and
jp
xchg
int3
pop
mov
test
sar
in
fdivrl
mov
jmp
sbb
incl
stc
and
lock
lock
mov
std
push
std
ljmp
mov
xor
jecxz
adc
mov
adc
mov
inc
icebp
and
decl
sti
mov
mov
daa
cs
jo
int3
rcrb
sub
out
clc
pop
xchg
or
pop
ljmp
es
shrl
scas
cmp
addr16
sbb
sub
and
out
lock
and
test
jg
adc
push
int3
adc
and
lods
pop
dec
idiv
push
mov
in
insl
es
mov
jns
test
dec
dec
mov
inc
sub
aas
jmp
iret
imul
and
xchg
lods
or
xchg
cmc
sub
cmp
cmpsl
ljmp
les
out
lret
pop
aam
jo
insl
lcall
push
xchg
or
cmpsb
adc
mov
outsl
icebp
decl
xor
movsl
mov
xchg
bound
push
inc
outsl
lock
jg
mov
xchg
adc
sbb
sub
adc
call
push
nop
shll
inc
xchg
or
enter
mov
xor
ljmp
inc
loop
movb
jge
cmp
sub
inc
mov
pop
test
pop
insl
dec
idiv
ss
nop
fnstsw
stos
cmpsb
inc
jmp
mov
es
sub
int
idiv
and
enter
out
roll
clc
dec
cld
decl
xor
or
sub
xchg
test
add
mov
call
sbb
adc
in
mov
lds
in
sbb
pushl
sbb
subb
xchg
and
dec
enter
mov
and
in
xor
push
incl
cmp
test
jp
out
fucomi
cmc
add
aas
inc
inc
adc
loop
incl
data16
nop
add
fistps
inc
sbb
mov
sbb
pop
in
das
std
mov
inc
icebp
or
pop
mov
das
jno
add
or
nop
incb
in
fbld
mov
sub
dec
call
mov
jg
dec
push
pop
or
mov
lock
xor
dec
sti
dec
sbb
mov
jmp
sbb
adc
xor
loopne
or
movsl
sbb
lea
das
dec
sub
jb
cmp
mov
aaa
and
cmp
xor
aaa
imul
add
mov
xor
jne
cmc
mov
mov
filds
adc
dec
add
loop
push
sub
lcall
hlt
std
add
cs
gs
scas
sahf
add
lcall
incl
jmp
rclb
inc
add
enter
call
or
inc
pop
aad
push
shlb
mov
decl
cld
add
divb
jnp
mov
lret
xor
stc
sbb
aad
pushf
adc
test
mov
outsl
hlt
add
out
shlb
jmp
or
pop
push
dec
roll
aaa
jle
dec
jecxz
push
mov
pop
and
sar
jg
and
ret
repz
aad
or
and
pop
lock
std
mov
pop
dec
mov
pop
sti
out
push
mov
call
cli
das
pop
ljmp
push
cmpsb
test
sub
cmp
pushf
adc
popa
jp
jnp
push
mov
repz
js
add
cwtl
sbb
ljmp
xor
pop
mov
sub
or
or
jge
push
adc
or
push
pop
jp
mov
sbb
icebp
pop
jecxz
adc
adc
adc
std
pop
call
and
and
sbb
sbb
incl
outsl
fwait
push
adc
and
sbb
sbb
or
jmp
jge
negl
lds
adc
decl
or
sbb
int3
push
dec
or
lods
dec
push
add
sbb
vunpcklpd
sbb
cmp
test
fcoml
in
jecxz
cmpsb
scas
inc
mov
push
cli
push
test
mov
aaa
pop
add
dec
fistpll
aas
psadbw
enter
sarb
rcll
cmp
imulb
lds
pushl
push
mov
adc
cmp
push
xor
or
sbb
inc
xchg
incb
cmovs
cmp
jge
push
jg
adc
xchg
jmp
or
fnstsw
or
jle
mov
test
mov
mov
popf
add
add
jg
push
lock
fsubs
std
inc
je
imul
fistpll
fstenv
cmc
push
or
mov
push
push
jns
and
int
lds
ss
lcall
and
repz
push
inc
inc
inc
mov
std
adc
call
out
mov
pop
sbb
xlat
std
adc
adc
inc
dec
pop
cli
push
cltd
cmp
repz
dec
sub
push
incl
or
push
adc
iret
test
push
sub
lcall
cltd
out
push
dec
push
sbb
adc
jge
mov
sub
cmp
out
adc
mov
xchg
ljmp
rclb
cwtl
cld
sbb
jl
in
mov
xchg
jns
mov
jg
out
sbb
jb
adc
inc
daa
sbb
cmp
jmp
or
inc
incl
mov
jle
or
cwtl
frstor
and
cs
dec
dec
jmp
call
pop
clc
in
jmp
xchg
js
add
xor
add
call
dec
into
fildl
movsb
addr16
push
and
mov
cld
or
sub
adc
add
jae
push
in
cmpsl
add
push
xor
test
fwait
pop
in
fucomip
adc
movsbl
push
dec
push
cmp
cmp
adc
mov
jg
push
cld
daa
or
stos
lds
mov
fs
inc
push
int
arpl
mov
lea
pop
mov
or
jo
jno
mov
push
clc
incl
mov
xchg
inc
adc
dec
sbb
and
sub
das
sarb
loopne
cmp
pop
sub
call
inc
push
sub
dec
out
and
repz
mov
out
xlat
mov
imul
shlb
mov
or
mov
movsl
lods
pushl
push
test
or
sbb
xchg
test
or
push
cmp
fsubp
pushl
mov
stc
jbe
and
je
mov
test
xor
inc
test
cmove
bound
dec
dec
mov
incl
mov
cmp
lret
dec
push
in
dec
in
push
adc
jecxz
dec
data16
adc
xor
repz
xor
decl
xor
ds
and
in
daa
pop
xor
out
ljmp
scas
enter
outsl
xchg
lahf
dec
sbb
mov
inc
or
daa
in
xchg
pop
mov
jo
pop
cld
idiv
inc
lcall
pop
in
adc
push
popa
pop
std
add
or
decl
xchg
scas
adc
cltd
push
mov
aam
or
cmpsb
aam
sar
incl
mov
or
sti
mov
inc
mov
and
mov
lcall
add
sbb
gs
pop
loopne
stc
xor
adc
in
mov
test
xchg
mov
jecxz
xor
stos
jg
sti
hlt
leave
out
iret
mov
aad
ret
loopne
and
les
movsl
sbb
insl
or
cmp
sti
mov
daa
cmp
sbb
mov
adc
mov
ljmp
cli
dec
or
in
cltd
push
popa
dec
out
jge
outsb
insb
lock
test
push
jae
stos
inc
jmp
sbb
inc
in
ret
cmp
and
adc
js
lcall
cld
cli
icebp
sub
sbb
scas
aas
shrl
sti
adc
lret
push
adc
js
aaa
xchg
push
movsb
xchg
in
movsl
ss
push
mov
add
prefetch
or
mov
mov
xchg
mov
or
and
aam
push
push
jmp
repz
incl
cmp
adc
adc
fs
popa
push
push
gs
pop
pop
dec
sahf
out
mov
ljmp
es
sti
mov
mov
jg
mov
mov
add
mov
out
shl
out
lcall
dec
and
repnz
mov
ds
icebp
jg
push
push
inc
xor
fcomps
adc
je
cmp
mov
adc
ljmp
dec
sub
pushf
jg
sti
subl
bound
inc
sub
inc
ljmp
pop
or
aas
pop
sub
or
inc
out
xchg
clc
in
jnp
mov
inc
testb
mov
repnz
pop
dec
jns
sti
mov
popl
mulb
mov
or
in
xchg
arpl
adc
xor
sub
dec
mov
rolb
mov
mov
cmpsb
mov
mov
pop
xchg
in
push
sbb
cs
pop
dec
adc
decl
out
ljmp
fstps
loopne
shll
mov
movsb
popf
jle
pop
xchg
ja
inc
or
in
jmp
pop
mov
pop
pop
jne
cmp
nop
int3
add
clc
stos
fucomip
decl
in
cmp
and
adc
or
push
testl
adc
js
dec
sbb
pop
out
insb
imul
dec
push
jg
jns
dec
inc
add
sbb
std
data16
addr16
inc
mov
or
sub
cli
jg
cmp
dec
pop
daa
adc
jae
jno
and
dec
ja
je
push
movsb
add
and
call
in
jb
jle
and
scas
insb
push
and
js
mov
jno
data16
dec
and
call
js
jg
dec
popf
and
xchg
inc
lahf
xchg
cmp
jp
test
dec
cmp
jae
loop
popf
stos
or
mov
dec
mov
mov
cmpl
call
lcall
inc
inc
es
cmp
xorb
repz
mov
incb
pop
fwait
cmp
add
add
bound
jg
jne
imul
outsl
jb
fstps
push
jns
je
insl
or
mov
push
out
xor
cmpsl
xchg
jle
mov
inc
aad
jae
push
jl
xor
add
mov
or
fstpl
pop
pushf
jae
or
add
cmp
cmp
or
mov
cmp
cmp
push
pop
sub
inc
pf2iw
push
pusha
xchg
push
add
jp
outsl
push
fcoms
jae
jne
arpl
outsl
arpl
popa
fs
inc
dec
imul
inc
gs
jb
pop
repnz
sti
inc
fs
jae
inc
jb
gs
imul
outsl
push
xor
in
pop
sub
push
push
jae
insb
lods
mov
aaa
inc
insb
insb
or
inc
js
arpl
popa
imul
mov
insb
jae
dec
xor
dec
push
jne,pn
or
inc
mov
or
dec
outsl
pusha
mov
std
fs
gs
popa
fwait
add
fldt
mov
imul
stos
test
bswap
push
imul
or
push
push
test
scas
jns
cmp
adc
push
inc
sti
jg
jg
add
add
pop
inc
sub
add
sbb
and
mov
mov
add
call
inc
add
add
xchg
insb
add
push
xor
adc
nop
lock
inc
sub
add
add
xor
or
inc
inc
pop
mov
insb
mov
inc
push
pop
idivb
aam
daa
push
rolb
and
mov
jbe
add
in
or
imul
daa
xchg
sarb
inc
je
push
jo
add
pusha
dec
sub
sbb
and
sub
daa
sbb
test
gs
dec
nop
pop
cs
out
testl
mov
push
pop
xor
add
pop
mov
add
add
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
nop
adc
adc
push
inc
