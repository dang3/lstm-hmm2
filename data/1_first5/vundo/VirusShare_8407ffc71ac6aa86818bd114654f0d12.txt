jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
popf
add
sub
or
push
inc
push
add
pop
add
add
add
push
pop
or
sub
mov
add
cmp
sub
adc
repnz
sub
inc
add
add
push
add
dec
add
add
add
in
dec
add
add
add
hlt
add
add
add
add
add
add
mov
add
add
add
add
add
xor
add
add
testb
add
add
add
pop
add
add
testb
add
or
bound
dec
add
add
add
add
add
sub
add
add
add
add
add
add
add
pop
add
bound
ja
mov
push
add
add
testb
add
add
add
add
add
add
testb
add
sbb
bound
hlt
add
add
testb
add
add
add
add
add
mov
add
add
add
add
add
lea
scas
add
add
add
add
hlt
add
add
add
mov
add
add
add
add
add
add
ljmp
add
add
add
add
fiaddl
addl
les
sub
je
stos
add
add
aad
faddl
scas
add
add
add
bound
popf
add
mov
add
add
out
add
add
add
push
mov
add
add
add
add
add
add
push
add
add
add
add
add
hlt
add
sbb
mov
inc
add
or
lret
add
add
push
add
mov
mov
add
add
add
add
add
ss
add
add
sti
add
add
add
add
add
add
sbb
sbb
bound
dec
add
add
add
add
add
push
add
add
dec
add
add
add
add
add
les
mov
add
add
add
cmp
bound
inc
add
add
addr16
add
add
add
add
add
xchg
add
add
add
add
add
test
scas
add
ljmp
add
add
add
add
add
add
add
add
popl
mov
les
and
scas
add
xchg
loop
movl
mov
add
xchg
add
mov
add
add
scas
add
xchg
pop
add
add
add
add
fiaddl
jbe
jnp
stos
add
test
popl
lea
les
cmpsb
add
add
add
add
add
add
in
aad
xor
add
add
mov
add
add
les
mov
add
add
add
add
loop
inc
add
cltd
add
add
add
bound
hlt
add
add
xor
add
add
and
xor
add
add
jne
xchg
jnp
stc
add
add
dec
add
jg
cmp
filds
bound
push
add
add
add
add
add
add
add
add
mov
add
add
push
add
add
add
push
add
bound
lahf
pop
out
fsubrs
aad
or
or
or
lods
jle
or
mov
xchg
arpl
mov
outsb
jp
mov
xchg
hlt
inc
mov
mov
xchg
jmp
cmp
xchg
mull
xchg
jae
jg
pop
push
sbb
add
mov
inc
pop
pop
cmp
mov
fistpl
cmpsl
andl
xor
push
push
sub
lcall
sub
pop
cs
cli
and
push
js
sub
mov
je
daa
lock
xchg
shlb
in
dec
mov
jle
testb
cmp
cmpsl
call
and
scas
cmpsb
movsl
lods
mov
cwtl
scas
jne
xchg
fldcw
test
inc
inc
xchg
call
pop
add
cmc
add
pop
cmp
divl
enter
outsl
xor
dec
outsb
rclb
repz
popa
push
test
aam
fsub
and
pop
sub
test
fwait
cwtl
mov
into
gs
sarb
push
adc
cmp
into
jg
push
mov
pop
push
call
push
adcb
mov
lret
out
enter
inc
and
repnz
lods
fcmove
add
movsl
repz
in
ds
mov
jno
outsl
lcall
sbb
jb
dec
mov
std
std
push
test
movsl
fimull
inc
jl
mov
mov
into
notl
adc
out
cmp
add
stos
mulb
fnsave
in
cmp
in
jle
inc
loopne
cmp
iret
mov
xchg
push
mov
ret
cmp
dec
movsl
fdivrs
mov
jae
jb
out
sub
imul
and
lock
and
inc
push
in
sub
pop
mov
repz
aad
push
dec
push
js
sbb
adc
xlat
out
sahf
lock
sub
sub
movsb
jns
and
jns
jp
popa
test
push
fsub
jne
mov
dec
les
leave
or
pop
inc
or
and
aam
mov
push
push
dec
xchg
in
ds
adc
insb
dec
or
pop
roll
cmp
sbb
not
cli
clc
cmp
xlat
sbb
add
cmpsl
push
mov
sbb
jp
inc
lcall
sub
pop
mov
jmp
jp
cltd
inc
call
xchg
pop
xor
repnz
lcall
adc
out
mov
xchg
xor
xchg
ret
stc
mov
lods
scas
push
dec
or
xchg
test
xchg
cltd
test
lret
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
movb
xor
pusha
mov
push
pop
inc
or
ds
or
pop
les
jl
insb
icebp
mov
mov
mov
lods
xor
inc
int3
push
cld
popa
in
pop
push
orl
pop
out
dec
sarl
icebp
test
mov
lds
sbb
imul
sbb
pop
mov
rcrb
xchg
add
in
inc
mov
jb
push
aam
xor
out
hlt
outsb
cmc
jecxz
pop
sub
mov
je
arpl
mov
push
xor
or
and
insl
ret
pop
and
loopne
sbb
adc
dec
cmc
js
rcll
hlt
sub
xor
insb
mov
or
dec
add
stc
push
fldenv
mov
fs
pop
jo
pop
pop
cmp
test
in
fmul
mov
push
in
mov
repz
sub
inc
imulb
xchg
jl
decb
popa
push
inc
mov
jecxz
repz
sub
xchg
pushf
or
mov
mov
inc
push
cld
popa
cmc
jecxz
adcl
inc
std
push
aas
jl
jne
out
add
jle
dec
enter
mov
ss
add
shlb
xchg
mov
pushf
inc
mov
push
scas
pop
test
mov
inc
push
loopne
in
repz
cmpl
test
jb
icebp
pop
movsb
or
in
jno
orl
pop
rorl
insb
icebp
pushf
add
faddl
push
cld
popa
in
jno
orl
pop
rorl
insb
icebp
pushf
add
in
fcomip
shlb
push
xor
adc
fadds
pop
sahf
fucomp
xor
inc
dec
ljmp
inc
xchg
sub
xchg
lods
lods
lahf
leave
sbb
xor
out
les
jecxz
push
xlat
mov
sub
sbb
std
subl
or
dec
and
push
int3
test
inc
enter
jno
dec
mov
shrl
jge
and
js
and
inc
mov
out
jg
xor
aas
jno
mov
jecxz
inc
fstsw
mov
hlt
push
insl
ja
cltd
xor
and
add
in
movl
xchg
dec
aad
mov
pop
cli
jecxz
outsb
cmp
inc
gs
push
leave
add
mov
or
ficoml
inc
sarb
and
pop
cli
stos
sbb
jnp,pt
inc
cmc
pop
push
mov
xchg
cld
enter
sub
fwait
sbb
aam
push
or
or
inc
movsb
xchg
les
mov
aad
mov
sbb
mov
push
leave
test
inc
std
cli
les
fcmovne
sbb
inc
cmpsl
lahf
mov
ret
pop
mov
cmp
xor
jo
insl
mov
pusha
cwtl
sub
fdivs
movsl
insb
pop
insl
jge
cmp
jnp
jmp
add
add
je
int3
cli
dec
dec
mov
loope
mov
push
mov
pop
jmp
fnstcw
cmp
fwait
push
into
jno,pt
leave
in
lock
test
jnp
and
cltd
and
inc
inc
rolb
sbb
and
push
scas
sub
mov
pop
pop
lret
dec
push
pop
push
ret
out
mov
je
cmp
push
cmpsl
data16
xorl
xchg
sbb
lods
push
lahf
paddusw
sub
mov
lods
adc
jbe
ss
cmpsl
xorl
inc
js
add
inc
fisttpl
cmp
push
xor
loop
sbb
sub
cmpsb
sub
out
aad
cmp
push
pop
insb
push
rcrl
adcl
mov
fsts
scas
fwait
repz
push
lods
push
rclb
out
mov
lods
shlb
inc
test
into
js
scas
sub
popa
jnp
rcrl
dec
inc
int3
insl
js
xor
sub
iret
shr
lret
sub
inc
mov
dec
mov
iret
xchg
jmp
lea
shlb
notb
test
dec
movups
insl
inc
push
insl
cli
sub
cmp
or
fisttpl
mov
push
dec
iret
int
cmpsl
fs
cmpsb
test
addr16
loopne
xlat
adc
iret
pop
lahf
sub
lds
sub
add
das
addb
add
dec
das
sbb
mov
push
aas
or
outsb
pop
adcb
aad
adc
scas
push
jno
adc
insl
cmp
enter
stos
sti
fisubs
aas
insb
fstps
std
push
jo
or
jnp
jmp
test
and
icebp
pop
mov
inc
or
mov
ret
lahf
mov
push
dec
lods
dec
lcall
jb
sbb
pop
scas
sbb
gs
push
dec
jnp
jns
int3
insl
sub
mov
sbb
jnp
xchg
loopne
pop
or
or
push
push
cmp
adcb
cmpsl
xor
in
pusha
push
jb
mov
jmp
addr16
jno
mov
daa
cmpsl
jmp
call
stos
mov
or
jae
and
addl
out
jne
scas
xor
sbb
int3
ret
les
icebp
sbb
xlat
cmp
aas
or
arpl
mov
push
xchg
dec
insl
pusha
adc
mov
inc
cmp
test
fsubrl
jmp
xor
insb
je
rcl
push
push
ret
inc
dec
xor
mov
dec
xchg
push
jae
std
mov
repnz
les
mov
mov
and
push
xchg
ret
inc
cmp
push
adc
pop
out
lds
adc
xsha256
cmpsb
push
movsl
mov
sti
push
dec
push
mov
mov
je
dec
js
xchg
rolb
jbe
mov
outsb
and
dec
les
insl
sbb
pop
mov
mov
push
mov
mov
scas
es
or
js
leave
cmp
inc
adc
dec
addr16
xor
cmp
push
daa
adc
stos
xor
rorb
movsb
cld
cs
xchg
xor
movsb
mov
or
or
mov
add
push
xor
inc
jne
test
adc
push
je
hlt
leave
sub
shll
and
stos
push
clc
adc
sub
adc
jne
popf
dec
adc
sarb
ja
out
or
and
outsb
test
adc
ja
mov
repnz
fwait
push
xchg
xchg
jae
outsl
jg
push
and
outsb
outsl
pop
sub
daa
jno
out
ljmp
sti
ss
data16
sbb
inc
imul
divb
decb
sbb
in
mov
loopne
pop
scas
sahf
push
push
mov
in
sti
mov
sbb
jbe
fwait
mov
sub
test
les
mov
dec
pop
xchg
cli
adc
jle
sub
xchg
int
sub
push
rol
add
xchg
pop
cmp
arpl
push
push
loope
cmp
insb
fbstp
cltd
ss
push
fadds
fwait
pushf
pop
popf
stos
outsl
imul
rcll
xor
into
rorl
push
outsb
scas
xorl
ret
inc
sbb
shr
clc
mov
add
or
inc
cltd
mov
adc
notb
jmp
cmp
push
pop
cmc
inc
adc
sti
popf
mov
popa
jmp
xor
pop
nop
pusha
cwtl
mov
icebp
jnp
into
jne
jmp
outsb
sbb
mov
dec
stos
mov
cmp
icebp
repz
fs
pop
xor
out
mov
ret
outsb
jb
imul
and
in
xor
mov
cmp
xchg
pop
cmpsb
enter
jne
addr16
sarb
lock
ret
es
or
jle
or
addl
mov
or
sarl
outsb
fadd
pop
xchg
and
lret
imul
or
and
dec
and
adc
mov
or
movsb
stc
dec
or
push
adc
inc
rcrl
into
in
dec
inc
mov
lret
aam
movsb
jecxz
xchg
xchg
pop
hlt
sub
pop
push
stc
lcall
test
in
sub
add
adc
sub
xorl
adc
les
fdiv
add
sbbb
es
arpl
xor
lcall
fisttpl
in
dec
dec
mov
pop
adc
or
mov
dec
stos
inc
inc
repnz
mov
popa
jae
das
insl
sbb
push
loopne
jns
clc
lcall
push
insb
add
and
sbb
shll
ficompl
inc
mov
clc
cmpb
imul
movsb
sti
sub
xchg
movsl
sti
fcmovu
inc
scas
push
inc
lock
mulb
cmpsb
inc
xlat
popa
repz
out
cmp
les
or
cmp
lock
mov
movsb
or
call
movsl
pop
lahf
repnz
xor
cmp
mov
stc
ret
lcall
push
cmc
ds
idivb
test
pop
or
sbb
mov
aam
adc
inc
mov
mov
stc
mov
mov
or
and
aad
dec
jmp
or
aaa
js
pushf
sub
enter
ja
scas
and
incb
xor
jl
lock
jne
jbe
cmp
fisttps
in
ds
jbe
cli
sbb
cmc
cmp
sbb
fdivrl
mov
cmpsb
fidivl
test
aas
addr16
pop
jae
loope
pop
adc
and
daa
pop
lea
jmp
inc
gs
ror
mov
dec
cltd
js
push
and
ds
or
mov
fxch
xchg
loopne
xchg
inc
scas
mov
mov
imul
or
add
adcb
sbbb
int3
out
cmp
rcrl
pop
dec
push
or
sub
adc
dec
push
xchg
xchg
fdivl
mov
imul
or
jno
mov
ret
test
dec
ljmp
inc
pop
fisttps
cld
mov
sahf
scas
es
in
lret
mov
push
std
push
fdivr
sub
or
sbb
in
les
mov
popf
and
push
xor
test
mov
lret
or
xchg
repnz
pop
pop
movsl
adc
in
in
jmp
dec
nop
fildl
repz
xchg
xchg
cwtl
adc
push
xchg
pop
sub
pop
and
push
loopne
aam
fidivrs
pop
scas
aad
adc
dec
in
fidivl
arpl
pop
cmp
je
incl
popf
insb
xor
sub
in
mov
stos
out
das
dec
xchg
sahf
push
and
xchg
div
jb
mov
les
scas
xor
stos
mov
xchg
cmp
dec
cs
movl
aas
sub
xor
pop
xor
mov
fsubl
lods
jle
push
jb
xor
adc
pop
test
mov
cmp
xchg
mov
cmp
jg
cld
xor
mov
imul
cld
les
jb
add
xchg
cmp
cmc
insb
dec
push
ja
imul
lods
out
inc
fdivrl
jmp
mov
aaa
mov
outsl
fnstenv
mov
xor
shl
inc
cmp
scas
in
sub
pcmpeqw
and
mov
sarl
icebp
adc
mov
push
adc
fistps
cs
mov
aas
shr
and
mov
xor
mov
in
sbb
jecxz
clc
out
cmpsb
or
sbb
sbb
xor
dec
jno
adc
daa
xor
dec
inc
mov
mov
in
pop
out
sub
into
adc
cmp
mov
dec
loopne,pt
leave
scas
jecxz
mov
jns
push
push
cs
rorb
mov
cmpsl
jge
leave
mov
sbb
ljmp
push
add
inc
out
adc
in
lahf
cmp
mov
and
dec
mov
add
das
mov
fcoms
pop
into
test
scas
push
pop
idivl
mov
outsl
pop
pop
in
sub
push
lcall
aaa
addr16
lret
cltd
cmp
mov
pop
fwait
or
xchg
ror
dec
lea
jne
lods
imul
xor
test
mov
outsl
fnstsw
subl
mov
push
push
pop
negb
mov
dec
jae
sub
sbb
pushw
or
aam
xor
fcompl
jne
mov
and
sbb
shrb
repnz
pusha
dec
loopne
mov
stc
cmpsb
push
inc
sub
push
add
push
orl
ret
jno
xchg
rorl
inc
cli
pusha
pop
push
cli
test
jmp
pop
outsb
nop
pop
into
push
iret
and
in
cmp
cmpsl
and
subl
lret
adc
jmp
ficoms
out
fdivr
mulb
pushf
push
inc
mov
inc
pop
fadds
pop
pop
loop
adc
sub
mov
fisubrs
cmpsl
lcall
stc
repz
in
and
hlt
pop
jl
add
movsl
jne
xor
minps
and
jno
lret
cld
mov
test
xchg
or
push
push
lahf
shll
lahf
and
jge
insl
lret
and
test
pop
add
repz
mov
das
sbbb
lret
into
xchg
mov
fcmovnbe
rcll
xor
sbb
sbb
pop
popf
add
pushf
stos
cwtl
call
push
iret
insb
das
fisttpl
mov
outsb
xchg
aam
push
jge
cmp
xchg
sub
inc
out
xor
ja
mov
je
std
jo
pop
loopne
iret
push
mov
mov
add
out
mov
lret
out
shll
push
mov
xchg
sbb
xchg
fcmovu
loope
or
ljmp
test
push
xchg
fs
addr16
sbb
push
cmp
dec
adc
test
and
dec
mov
cmp
lret
push
pop
out
repnz
mov
mov
sarl
and
adc
adc
fldt
push
inc
lcall
mov
into
adc
or
clc
int3
mov
das
and
or
fsubrs
repnz
cmp
rcr
xchg
cmpsl
mov
cwtl
lods
mov
test
mov
mov
sbb
push
push
ret
into
mov
and
sub
cmpsb
mov
dec
test
imul
add
imul
or
xor
fistps
pop
mov
sub
in
ds
dec
pop
js
int3
lods
jp
sbb
mov
lods
test
adc
sbb
dec
mov
push
xchg
pop
mov
popa
xchg
mov
push
ds
daa
adc
push
jecxz
mov
es
cld
inc
mov
cmpsb
mov
mov
call
outsb
xor
mov
pushf
imul
fisttpll
cmp
cmpsl
test
leave
mov
or
fwait
mov
mov
lds
cmpsl
cmpsb
sub
xor
and
mov
pop
adc
jge
push
daa
sbb
mov
xor
fs
mov
std
dec
mov
mov
cltd
mov
inc
ds
adc
cmc
iret
pop
dec
adc
jl
xor
icebp
pop
inc
xchg
sti
sub
inc
shr
jp
pop
inc
insl
lea
out
xor
cmp
pushf
test
ss
decb
xchg
pop
xchg
stc
aam
sbb
pop
sbb
add
or
pop
mov
xor
out
repz
ljmp
jecxz
rol
mov
hlt
das
loopne
adc
add
stc
fs
cmp
xor
adcl
scas
push
ljmp
adc
inc
sub
enter
jge
jns
scas
test
inc
dec
add
jmp
pop
in
jbe
insb
cli
jns
js
sub
cwtl
out
repz
out
add
cs
lock
fs
mov
jno
xlat
xor
dec
pop
xchg
and
jmp
mov
pop
loop,pn
dec
mov
cmpsl
les
lock
sbb
sub
int
sete
inc
ljmp
je
fdivrl
and
sbb
sarl
loop
inc
pusha
cmpb
mov
inc
pop
jns
shrb
test
push
mov
and
and
ret
ffreep
sub
shrl
jne
loope
mov
adc
dec
rol
or
mov
lret
cltd
pop
xchg
adc
ljmp
arpl
or
xor
in
adc
mov
adc
sub
js
xchg
rolb
cltd
mov
pop
sub
mov
loope
push
xor
sbb
test
daa
xor
mov
inc
lcall
dec
jle
inc
push
inc
in
or
mov
shlb
xlat
aas
ljmp
rcr
xchg
das
ljmp
xchg
push
or
adc
dec
arpl
cli
aaa
movsb
ljmp
mov
out
pop
add
mov
lret
sarb
adc
add
in
mov
push
sub
imul
aaa
mov
jno
sahf
xchg
xor
or
in
inc
sub
and
lods
dec
mov
scas
and
fimuls
sub
imul
xchg
shlb
mulb
into
fcompl
out
mov
fcmovnu
xor
ja
out
and
jns
add
lahf
loope
sub
and
insl
stos
test
daa
jmp
iret
imul
mov
leave
cwtl
xchg
aad
test
adc
mov
sub
movsl
gs
jne
cmp
jnp
mov
loope
xlat
out
inc
enter
rcrl
xor
mov
mov
push
push
jb
xchg
int3
mov
mov
ljmp
sbb
lods
and
and
mov
mov
mov
scas
push
jns
pop
adc
jno
repz
test
push
popa
in
sahf
jnp
xchg
dec
scas
pop
jae
ds
push
shll
mov
mov
pop
std
fs
jl
sub
xor
sub
xor
mov
push
jbe
aad
and
jecxz
shlb
cltd
sar
dec
sti
xchg
jnp
pop
and
jo
mov
push
movsb
mov
test
inc
and
xchg
int3
sub
mov
imul
dec
adc
rolb
loope
outsl
cmpsb
aaa
jl
sbb
lret
jp
ja
push
dec
in
mov
xchg
repz
rolb
cmp
ret
mov
stc
pushf
stc
push
jbe
les
mov
sbbb
xor
push
flds
cmp
add
dec
pop
mov
and
fisubrl
ret
xor
loopne
lock
add
sub
sbb
test
ljmp
into
and
add
sbb
pop
ret
rcll
ds
push
test
sbb
push
lea
imul
pop
incl
add
lahf
and
and
mul
push
int3
push
and
push
cmp
sub
push
pop
pop
mov
mov
fbld
mov
cmp
sahf
jge
mov
mov
mov
push
add
and
mov
inc
addb
push
int3
js
dec
push
adc
adc
fidivl
or
mov
lods
lds
iret
in
mov
xchg
arpl
popf
loopne
fwait
mov
jle
add
mov
sbb
dec
leave
pop
shll
mov
sbb
ljmp
cli
jp
ret
pop
int3
fcmovne
add
push
repz
ljmp
mov
gs
mov
test
in
inc
outsb
je
jnp
pop
or
cmpsl
mov
push
sbb
xor
jp
mov
and
jge
ds
leave
out
scas
push
jle
popa
inc
and
int3
mov
and
cmp
bound
lahf
mov
mov
les
std
enter
ret
dec
gs
and
inc
pop
int
loope
and
addr16
ja
scas
mov
lea
in
inc
xchg
pop
jle
mov
mov
popf
je
pushf
cmpsb
rcrl
jbe
inc
out
dec
jb
jae
lods
inc
jmp
insl
lcall
vcmpps
es
pop
dec
adc
pop
cli
dec
in
in
fisttpll
mov
subl
mov
les
ljmp
xor
adc
int
ret
rol
cmp
cmp
sub
repz
xchg
sti
lahf
sti
adcb
xchg
cmp
nop
icebp
xchg
imul
int3
popa
inc
inc
popf
sub
push
je
movsl
pop
push
pop
adc
cltd
sti
mov
bound
sub
xlat
ret
mov
sbb
data16
outsl
xor
pop
cli
pusha
inc
add
and
sbb
push
shlb
sar
mov
sbb
dec
outsl
mov
cmp
dec
adc
movsb
mov
mov
clc
in
and
cmp
inc
inc
xorb
es
jb
push
inc
jae
jbe
mov
rcrl
bound
leave
outsb
xor
lds
mov
jb
repnz
lcall
add
mov
or
in
cmc
sbb
xchg
mov
cli
je
xor
outsl
pop
and
pop
lcall
dec
daa
outsb
pusha
or
popa
out
jb
addr16
pcmpeqd
xchg
mov
mov
push
stc
scas
jp
lods
in
xor
push
mov
sbb
xor
jl
add
mov
pop
mov
mov
lock
fldcw
testl
pop
pop
stc
mov
sub
lea
cwtl
out
cs
push
jg
push
aas
mov
sbb
out
iret
repnz
mov
lea
inc
jo
lahf
dec
adc
sbb
or
lahf
pop
xchg
hlt
dec
mov
imul
push
pop
fs
scas
sub
xor
dec
or
fs
adc
adc
dec
fmuls
adcl
addr16
les
or
insl
and
fcmove
sub
jmp
aaa
cmc
insb
xor
pop
jp
cmp
lds
lods
cmp
pop
scas
mov
lcall
jbe
cmc
adc
sbb
sbb
movsb
mov
adc
inc
xorl
jns
ljmp
inc
inc
outsb
pop
adc
icebp
jo
sub
cwtl
popf
jle
mov
insl
shrl
and
daa
xchg
push
jle
dec
adc
adc
inc
int3
push
cld
popa
in
jno
orl
pop
rorl
insb
icebp
pushf
add
faddl
push
cld
popa
in
jno
orl
pop
rorl
insb
icebp
pushf
add
lods
xor
cld
gs
jno
orb
lds
jl
pop
adc
mov
lods
jno
inc
int3
push
jl
insb
mov
jle
cmp
mov
xchg
mov
insb
cmp
jg
or
cmp
sbbb
mov
pushf
in
lods
std
mov
sub
or
sbb
sub
inc
int3
popf
fsubrl
loopne
pushf
in
lods
std
mov
sub
or
sbb
sub
cmp
int3
mov
popf
int
mov
cwtl
ret
push
aas
jns
sub
sub
sbb
test
and
jl
mov
cwtl
mov
xchg
aam
xor
stc
mov
pop
cltd
xchg
and
ss
sbb
push
stc
inc
cwtl
xor
in
pop
dec
adc
jp
add
pushf
out
and
lcall
popf
cltd
mov
add
or
sub
dec
sbb
add
sbb
push
push
popf
bound
enter
std
or
cmp
icebp
adc
pop
xchg
out
inc
cmp
adc
clc
sahf
fbld
pushf
mov
leave
loop
out
jl
cmp
or
jge
fcmovu
insl
push
adc
jmp
test
jge
rorl
insb
cmp
sbb
sub
cmp
int3
popf
fsubrl
mov
pushf
in
lods
std
aad
dec
imul
or
push
lods
mov
mov
iret
mov
mov
cmp
push
jl
pusha
sbb
inc
das
pop
call
mov
mov
cmp
sbb
sbb
and
insl
sub
cmp
int3
popf
fsubrl
mov
pushf
in
lods
std
mov
sub
or
sbb
sub
cmp
int3
popf
fsubrl
mov
pushf
in
lods
std
mov
mov
adc
jbe
xor
sub
or
imul
lcall
jmp
jae
lods
pop
push
dec
jne
push
test
push
enter
ret
aad
mov
insl
addr16
sbb
xor
inc
add
aam
test
add
lahf
test
in
xchg
cmp
xchg
xor
push
sbb
mov
mov
icebp
sbb
sbb
in
aad
inc
push
shl
fcmovne
lea
subb
pop
xlat
dec
cmp
leave
fwait
in
hlt
es
ss
fcmovb
jnp
and
call
movsl
jg
or
adc
movsb
pop
out
pop
adc
dec
cli
das
dec
lahf
mov
push
mov
test
cmp
jno
sbb
cli
jmp
popa
fisubl
jnp
sub
out
cmp
addr16
imul
lea
adc
scas
das
sub
jmp
pop
jo
xor
xchg
mov
cmpsl
fcoms
and
outsb
popa
jae
sub
xor
popa
adc
mov
sbb
pop
mov
dec
and
out
pop
inc
and
mov
add
arpl
adc
lret
sub
or
pop
cld
pop
int
fidivrl
xchg
sub
add
xor
stos
lahf
scas
cmp
in
jg
mov
leave
dec
popf
in
push
cmc
inc
lret
fsubl
cmp
mov
dec
out
push
movsl
scas
sub
dec
sbb
inc
adc
lahf
jb
xchg
sbb
jne
call
cmp
xor
mov
dec
sub
push
sar
xchg
jmp
ljmp
or
in
loopne
pop
aaa
lahf
test
mov
clc
jno
unpckhps
mov
stos
mov
stc
ss
xor
addr16
cmp
inc
xchg
jo
int
sub
std
cmc
fs
add
testb
test
cmp
repz
dec
xor
adc
cwtl
mov
clc
cmp
dec
das
pop
push
fisttpl
enter
xor
popf
daa
mov
iret
lock
subl
inc
add
outsl
mov
sbb
xor
out
sarl
call
testb
data16
cmpsb
sbb
fldcw
ret
mov
cmpsl
mov
xor
repz
dec
jnp
adc
imul
mov
imul
mov
jbe
out
jno
sub
test
mov
ljmp
gs
ljmp
push
push
stos
in
mov
xchg
mov
push
push
insb
cwtl
rcrb
cmp
roll
add
xchg
jl
int
stc
mov
adc
cli
cmp
imul
jbe
sub
mov
jnp
add
orb
or
sub
jmp
xchg
cmp
xchg
inc
dec
pop
inc
lcall
mov
sub
cltd
mov
pop
fcmovnb
xor
out
sbbl
dec
push
xchg
pusha
into
mov
fxtract
ja
inc
fwait
es
test
dec
add
dec
mov
lahf
inc
pushf
fstl
stc
repnz
fwait
test
repz
fwait
outsb
mov
jle
xor
aam
pusha
push
cmp
imul
xchg
and
adc
out
inc
pop
or
fldl
push
cmp
cmpl
and
daa
std
adc
xor
adc
rorb
xor
or
jg
movb
je
scas
sub
mov
loope
sbb
test
out
mov
jp
das
and
add
dec
or
cmovae
lods
mov
fdivs
sbb
sub
inc
rclb
mov
mov
insb
or
jmp
sbb
jnp
sbb
mov
inc
lock
rclb
dec
mov
mov
pop
push
rcrl
sub
mov
jl
mov
add
loope
mov
ljmp
xchg
jg
dec
xlat
out
ret
daa
jo
inc
mov
cli
add
rcl
xchg
adc
xchg
xor
xchg
jle
mov
das
ja
and
xor
xor
push
jb
jmp
out
mov
ja
iret
push
lcall
movsl
sub
js
lcall
movsb
cmpsb
js
stc
sbb
add
jnp
pop
imul
je
rcr
nop
aas
and
pop
fwait
inc
dec
popf
je
ffree
in
xor
push
xor
out
test
outsl
mov
leave
cmp
clc
xlat
fstl
sbb
fdivr
insl
int
sub
int3
in
and
std
xor
popf
faddl
insb
movsl
xor
js
dec
imul
jl
shrb
mov
in
ljmp
bound
outsl
pop
out
data16
je
addr16
adc
pushf
xchg
imul
cwtl
inc
outsl
jbe
dec
inc
rcll
imul
popa
rolb
push
int
mov
in
adc
out
cmp
cmpsb
push
int
ret
sbb
loope
dec
in
inc
imul
stc
mov
ret
push
pop
aad
cwtl
jl
clc
sti
mov
js
outsl
mov
fdivs
ss
push
mov
ljmp
out
fisubl
fldenv
push
adcl
sti
flds
push
or
es
mov
mov
bound
cmp
pop
insl
fistpl
ss
mov
mov
insb
and
scas
out
xchg
mov
std
cmp
shlb
jno
and
cmpsl
cmpsb
or
sbb
lcall
imul
inc
xchg
movsb
or
inc
mov
sub
dec
xchg
add
adc
cmc
mov
cli
clc
mov
lds
pop
dec
or
xchg
mov
mov
cmp
dec
loop
inc
rep
fcmovne
in
jo
out
push
arpl
fimuls
sub
and
mov
aas
das
mov
xor
cmpsl
js
lds
lods
cld
xor
cmc
call
out
dec
jle
and
fbld
mov
jmp
adc
imul
into
cmpsl
data16
push
inc
and
insl
sbb
cwtl
sub
movsl
jg
popf
pop
imul
mov
mov
loope
or
sarl
mov
xor
test
jb
ss
push
xchg
inc
push
and
lea
loopne
repnz
test
clc
jecxz
scas
push
push
andb
inc
inc
inc
in
in
sub
iret
mov
movsb
cltd
dec
fsubrs
jne
mov
sbb
jmp
xlat
fisubl
shr
jns
lods
cmp
popf
push
clc
dec
out
cmpsl
ljmp
pop
push
loope
pop
out
clc
inc
and
js
pusha
mov
add
rorb
cmc
lret
lret
push
in
ja
mov
and
jbe
mov
push
pusha
aad
sbbl
das
mov
mov
mov
in
sbb
inc
arpl
insl
cmp
test
jb
out
inc
rolb
and
hlt
xor
out
out
outsl
inc
popf
xchg
sub
mov
pop
gs
cld
pop
dec
jbe
jp
bound
inc
lret
inc
je
mov
push
lds
push
dec
dec
out
pop
pop
int3
mov
rclb
pop
aas
ja
push
mov
jp,pt
dec
inc
je
test
add
jle
add
sbb
aam
enter
and
daa
into
pop
shll
add
add
fcomps
inc
jae
js
mov
lods
mov
ss
push
hlt
pop
dec
mov
repz
pusha
pop
sub
in
push
mov
cmpsl
repnz
data16
cmp
and
je
bound
push
mov
in
or
push
je
into
loop
mov
scas
sbb
xor
fwait
jge
jge
xchg
xor
out
stc
jl
pop
and
cli
pop
pop
nop
lcall
or
push
rorb
fadd
test
jnp
add
scas
movb
xlat
and
out
fwait
mov
cmc
xor
pop
dec
cmp
or
lods
sub
pushf
add
jo
lcall
sbb
hlt
add
ds
fldl
cmp
shll
icebp
add
and
movsb
xchg
or
int
adc
xchg
sahf
mov
insb
scas
or
adc
mov
icebp
shlb
ljmp
mov
dec
aas
mov
and
cmp
jl
xchg
movsl
xchg
ret
inc
dec
enter
ret
pop
adc
arpl
jp
in
lods
in
lcall
inc
scas
pusha
inc
adc
test
pop
xor
daa
imul
sub
cmp
test
jg
dec
es
dec
fiadds
jnp
inc
ja
pop
insl
add
bound
fstpt
or
out
pop
hlt
adc
das
cli
cmc
sub
xchg
xor
sub
ss
inc
jo
cltd
cli
outsl
mov
out
push
sub
push
fcmovne
stos
pop
xchg
sub
and
sub
xor
jl
lret
dec
sub
jae
stc
idivb
jmp
in
cld
mov
cmovno
sub
push
sbb
xchg
inc
popf
sub
pop
stc
push
jle
or
pop
xchg
fs
movsl
push
xchg
lods
cmp
lods
enter
fsubp
mov
add
mov
inc
xchg
mov
repnz
jmp
mov
xor
push
push
imul
mov
int3
push
gs
and
adcb
mov
jne
push
dec
or
idiv
add
shll
in
xor
movaps
push
mov
data16
aaa
jmp
push
sarb
dec
fildl
mov
jp
mov
inc
xlat
push
jle
xor
push
sub
js
fcompl
mov
inc
dec
test
pop
daa
sub
ret
xchg
stos
es
dec
sbb
sbb
aad
push
ret
xchg
push
int
cltd
negl
das
cmp
sbb
popa
divl
mov
cmp
insl
lods
cld
xor
loopne
add
adc
mov
popf
and
jle
cmp
scas
aam
cltd
rorl
in
in
outsb
in
aad
js
loopne
fsubs
and
mov
mov
into
sti
pushl
imul
xchg
sub
sbb
loop
scas
pop
std
shll
xor
and
jbe
adc
xor
sti
out
sbb
or
mov
sub
int
adcl
mov
adc
mov
add
lods
dec
aad
jmp
push
jmp
fucomip
sub
push
or
xchg
cmp
movsl
pop
jle
lock
add
pop
add
jnp
es
repz
xchg
add
xor
pusha
sub
jg
out
push
ds
jne,pt
lret
fwait
mov
repz
inc
std
pop
fwait
cmc
mov
scas
scas
bound
arpl
in
sbb
mov
pop
xchg
icebp
mov
jo
push
loop
pop
and
xchg
mov
adc
loope
mov
imul
dec
pop
orl
sahf
lcall
js
fisubrl
hlt
aad
int3
fiadds
hlt
inc
inc
and
mov
inc
pop
inc
cmp
icebp
ds
lock
xchg
stos
movups
jmp
loopne
adc
out
ret
cld
scas
rol
gs
test
add
fisubrs
gs
pop
cs
add
mov
in
inc
repnz
std
faddp
jge
arpl
pop
gs
int3
fstpt
or
mov
inc
or
mov
ja
arpl
jmp
mov
and
adc
xchg
adc
mov
mov
ret
mov
movsb
fldt
mov
or
dec
mov
pcmpgtb
int
push
mov
push
cmp
mov
adc
push
jae
cli
int3
mov
rcr
jns
testb
jmp
mov
dec
repnz
out
mov
and
ds
push
gs
and
loopne
cltd
iretw
stos
xchg
stos
sbb
test
movsl
xchg
stos
dec
test
xor
hlt
lds
cmpb
and
and
addr16
mov
mov
inc
sbb
loop
mov
in
int
int
mov
mov
sbbl
imul
and
adc
xor
loopne
ret
add
imul
jp
inc
inc
push
jne
jae
ficompl
cmpsl
movsb
and
jae
stos
pop
jle
repz
adc
mov
sub
sub
pusha
lods
cltd
cmpb
mov
sub
adc
dec
inc
adc
cli
push
dec
adc
jg
push
movsl
push
jl
lahf
ss
popa
mov
mov
xor
push
mov
popa
jns
mov
in
push
insl
jp
decl
inc
push
sub
inc
adc
lret
pop
mov
rcrb
add
in
insl
xchg
sub
fildll
push
in
mov
fwait
hlt
adc
sub
cmpsl
std
outsl
testl
fstps
cmp
imul
cmc
mov
loop
mov
mov
xor
sbb
ret
dec
into
push
push
aaa
add
movsl
sub
mov
fimuls
or
inc
fdivs
xor
xchg
xchg
jge
add
dec
or
push
fisttps
jle
pusha
add
aaa
lea
mov
push
js
sbb
idivl
mov
mov
or
xor
jno
and
jle
rorb
xor
popa
mov
lds
pop
in
inc
pop
sub
add
outsb
cli
aad
xchg
lds
scas
sbbb
xchg
jbe
rcr
dec
mov
lea
lea
sbb
orl
imul
cmp
mov
mov
sbb
test
loope
add
push
add
pop
fcompl
jns
mov
test
sub
lods
mov
popa
pop
push
xor
dec
dec
mov
roll
and
mov
xchg
loope
xor
mov
push
rcrl
shlb
lods
sti
dec
repnz
je
pop
aam
adc
sbb
mov
cmp
cld
shrl
ljmp
mov
and
jp
mov
cmp
aas
sbb
add
jbe
pop
add
sti
xor
push
fildll
cld
xchg
mov
mov
xor
push
xor
xchg
stc
push
ret
adc
inc
push
repz
and
movsb
mov
test
cs
adc
lret
xchg
adc
loope
rolb
pop
ljmp
adcl
dec
mov
mov
inc
inc
bound
inc
jmp
xchg
fldt
or
hlt
jmp
cwtl
aad
push
mov
repz
cmp
ret
ret
andb
lea
add
repz
sub
stc
out
aaa
push
imul
dec
add
dec
dec
push
sti
mov
mov
fldln2
or
or
inc
lock
decb
insb
in
loope
pop
push
test
lods
int3
orb
sub
pop
scas
mov
add
and
adc
fcmovne
js
xor
jl
cwtl
push
or
jp
mov
sub
adc
adc
ja
hlt
insl
and
cltd
and
lret
mov
mov
adc
pop
lea
pop
xchg
repnz
mov
push
cmpsb
out
xchg
ds
inc
pop
cmpsb
jb
xchg
and
add
sub
jno
loope
lods
cltd
lret
iret
pop
jnp
sti
sahf
xor
fnstcw
sbb
mov
lret
in
in
mov
int
mov
jmp
in
lods
addr16
sbb
mov
lahf
mov
sub
test
mov
cmpxchg
sarl
sub
xor
into
sahf
fs
sub
push
rolb
scas
into
xor
and
xor
lret
xor
mov
out
xchg
jle
xchg
out
loope
add
inc
outsl
sbb
sub
rclb
or
jl
sbb
adc
insl
mov
push
mov
bound
or
push
setne
fadds
or
mov
push
insb
fdivrl
mov
roll
add
in
jmp
jne
xor
jmp
idivl
scas
pop
repz
dec
fldt
or
enter
jb
pop
sbb
and
xor
cs
cmp
das
and
push
cmpsl
icebp
pushf
rcrb
arpl
mov
adc
push
imul
dec
cmp
ds
mov
xchg
inc
pop
push
mov
fisttpl
push
scas
cmc
push
nop
xor
faddl
adc
je
mov
orb
push
cmp
dec
gs
sub
shlb
scas
sub
ja
push
stos
insl
insl
cmp
sti
push
call
xchg
int3
in
stc
inc
jbe
jns
xchg
push
cmp
fisubrl
or
mov
shrl
or
sbb
scas
sbb
or
insb
jle
cli
lock
cmp
mov
xor
int3
push
in
gs
or
sbb
cwtl
ljmp
xchg
jmp
negb
popa
mov
dec
imul
mov
aaa
or
and
daa
jo
stc
scas
int
sub
in
pop
sbb
jp
fstl
and
and
loope
xchg
mov
aaa
dec
lock
push
insb
mov
sahf
or
into
sub
pushl
push
std
addr16
and
mov
xor
and
rclb
and
cs
scas
sahf
add
call
in
xchg
jl
xor
in
xchg
pop
test
cli
repz
roll
rsm
shlb
ds
or
call
cs
lods
js
es
fistps
mov
pop
stos
jno
cmp
mov
mov
xor
cmp
and
stc
clc
xor
outsb
je
dec
shlb
jne
cmp
pop
fwait
jb
cs
test
jns
mov
imul
mov
mov
addb
xchg
pop
mov
orl
xchg
inc
popa
movsl
inc
add
fildll
inc
fisubrs
mov
nop
mov
aad
and
orl
mov
repnz
sbb
add
cmp
popa
sbb
jmp
and
pop
sbb
call
adc
xchg
xchg
xchg
stos
pusha
ret
mov
lods
jns
je
jnp
mov
nop
dec
mov
xchg
sub
loopne
or
mov
xor
push
or
cmpsb
push
pop
fnstcw
mov
ret
cmp
xor
mov
mov
outsb
inc
roll
xchg
popf
add
jne
xchg
xor
push
mov
sub
pop
sbb
stos
fmul
inc
xor
and
mov
shrl
or
out
dec
int3
pop
pop
inc
inc
fistps
push
enter
inc
inc
mov
pop
clc
mov
sbb
fcomps
adc
ud1
mov
aas
cmp
fbstp
lret
mov
stc
shr
xchg
shll
mov
cmp
push
adc
lret
jnp
scas
daa
and
add
xchg
pop
adc
inc
mov
jmp
sub
xchg
sub
in
dec
add
icebp
push
scas
push
cmpsb
pop
clc
push
ffree
mov
pop
or
jae
psrlq
xchg
sub
cmpsb
hlt
xchg
mov
jecxz
andb
mov
jmp
push
xchg
fdivs
mov
dec
lds
jb
mov
mov
cwtl
dec
aas
jg
xchg
repz
and
jmp
dec
je
push
fsts
daa
cmp
shl
shll
push
jbe
pop
jg
int3
pushl
inc
mov
jmp
scas
loop
js
dec
xchg
pop
adc
nop
inc
stos
pushf
sub
jne
aas
iret
sbb
sti
and
rorb
hlt
gs
or
mov
lea
push
lea
icebp
sub
mov
cmp
in
pop
mov
push
or
mov
lea
xchg
xor
xchg
push
testl
adc
push
cmp
or
fcoms
jns
dec
add
jmp
mov
jnp
cmp
lret
lret
aad
sti
negb
xchg
cmpsb
cmp
jo
mov
push
stos
and
mov
mov
pop
stos
mov
addr16
addl
aas
sbb
xchg
ror
jb
je
pop
xlat
jecxz
push
int3
flds
cmp
inc
and
mov
sti
in
jle
lds
inc
mov
test
data16
in
cli
aaa
xchg
daa
add
cltd
and
jecxz
adc
and
mov
adc
adc
nop
mov
clc
adc
loopne
adc
sub
add
adc
out
into
xor
cmp
sbbl
sbb
repnz
shlb
int3
mov
pop
inc
pop
push
xor
cwtl
lahf
sbb
ror
js
ret
pop
sub
cmp
sbb
sub
cmp
int3
popf
fsubrl
mov
pushf
in
lods
std
mov
sub
or
sbb
sub
cmp
int3
popf
fsubrl
mov
pushf
in
lods
std
mov
lods
insb
cmp
sbb
sub
cmp
int3
popf
fsubrl
mov
pushf
in
lods
std
mov
sub
or
sbb
sub
cmp
int3
popf
jbe
in
mov
arpl
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
pop
std
dec
adc
outsb
mov
and
or
mov
mov
mov
add
jle
outsb
xor
inc
push
fidivrs
bound
push
fiadds
out
mov
lods
sarb
nop
dec
adc
outsb
xor
jle
outsb
mov
push
pop
in
icebp
mov
mov
sahf
xchg
std
mov
sub
das
jl
push
pop
adc
jle
stos
push
and
repnz
add
lods
mov
mov
cmpl
scas
ret
xor
inc
ret
adc
call
add
adc
daa
sbb
adc
push
les
pusha
pand
out
das
imul
loop
sarb
ret
mov
inc
icebp
cmp
lea
jge
ret
adc
ret
mov
or
jno
mov
cs
ret
jb
rol
xorb
mov
xchg
push
roll
scas
or
inc
xor
rcrl
orb
jp
popf
add
jle
outsb
cmp
inc
push
push
ds
into
push
mov
cli
sahf
out
mov
mov
push
sub
sbb
ss
cmp
scas
les
fistpl
lods
iret
cmpsb
cmp
inc
das
pop
jnp
inc
popa
jnp
imul
out
les
xchg
jmp
xlat
add
cmp
cmp
push
pop
es
push
bound
jb
or
mov
mov
mov
add
jle
outsb
xor
inc
push
push
bound
jb
or
mov
mov
mov
add
adc
into
xchg
pop
nop
scas
ret
shl
std
mov
push
ds
pop
mov
loopne
aaa
cs
cmp
cmpl
add
adcb
push
mov
xchg
ja
pop
jmp
mov
mov
inc
mov
sti
in
arpl
int3
jle
mov
xchg
or
jle
repnz
xlat
nop
xor
sub
mov
xchg
push
call
mov
mov
mov
xor
popf
dec
cmpsl
dec
jbe
push
sub
aam
add
nop
scas
xchg
xchg
pop
sbb
pop
out
popa
xchg
pop
mov
cs
mov
enter
data16
or
cltd
int3
xchg
add
out
stos
andb
push
add
xor
adc
adc
mov
pop
repz
mov
stc
aam
aaa
test
jmp
and
mov
lods
in
cmpsl
fcoml
hlt
jle
dec
std
jnp
jg
andl
mov
lds
mov
add
adc
adc
add
int
ja
out
dec
outsb
mov
sbb
imul
xor
xchg
adc
outsl
sbb
cli
jne
add
or
jle
idiv
fld1
push
adc
mov
sbb
fdivrs
add
add
fcoml
or
rolb
jns
fwait
push
jbe
sbb
jp
pop
dec
xor
push
push
xchg
jno
jp
push
iret
and
popf
leave
aaa
cmpsl
pushf
lret
dec
and
repnz
inc
xor
sbb
mov
rclb
xchg
cmovo
shl
aaa
pop
fcomps
push
in
mov
stc
pop
sahf
movb
push
jmp
sahf
lret
fldenv
notl
pop
popa
ss
loopne
sarb
jns
data16
xchg
push
es
rolb
outsb
sbb
sub
outsb
mov
movsb
xchg
adc
call
push
pushl
mov
sub
adc
pop
aad
movsb
jge
movsl
outsb
les
cwtl
pushw
rcrl
bt
pop
adc
adc
hlt
rol
fimuls
out
cmp
mov
xor
xchg
and
add
lret
mov
daa
fs
jne
xchg
mov
mov
outsl
clc
sti
stc
inc
cli
aam
ja
arpl
lret
dec
repnz
dec
or
stos
ret
adc
clc
sub
inc
mov
movsl
or
push
cmpsb
inc
jb
pop
outsb
jecxz
movsl
cwtl
loopne
sti
jae
jl
cmp
incb
imul
bnd
dec
and
lods
sbb
divb
bound
jecxz
sub
mov
cltd
ret
push
imul
push
jge
jnp
mov
enter
xor
adc
lods
inc
stos
and
stos
adc
bound
push
or
arpl
mov
or
in
leave
idivb
mov
jp
jno
lds
inc
push
mov
jns
inc
push
pushf
add
mov
loope
mov
loope
insb
int3
sub
popa
mov
or
enter
inc
and
jl
in
mov
loop
iret
cmp
insb
scas
jns
xlat
xchg
mov
cmp
inc
insl
or
mov
lret
fistl
push
cmp
xchg
xor
xchg
dec
sbb
daa
les
pushf
imul
int3
add
inc
aas
dec
ret
arpl
jle
out
pop
int3
scas
mov
or
popf
and
cmp
inc
mov
int3
push
aam
push
push
sbb
fadds
adc
rcl
ljmp
jmp
mov
filds
lahf
jle
pop
cmp
scas
cs
dec
shrb
popf
xchg
jmp
negl
idivb
inc
ficompl
test
xchg
test
mov
stc
fistpll
sahf
imul
dec
ja
xor
ds
aam
mov
inc
in
jae
xor
les
inc
push
stos
add
test
icebp
mov
repnz
call
jne
cwtl
push
sbb
lahf
push
mov
shr
scas
scas
arpl
pop
sbb
sub
mov
addr16
mov
push
mov
inc
push
inc
shlb
imul
jae
fnstenv
pop
out
mov
mov
out
or
cmpsb
rolb
push
js
lcall
cmpsl
inc
fsubs
out
push
es
xor
enter
lea
leave
test
and
lret
xor
fucomp
dec
lea
std
popa
mov
push
xchg
cwtl
or
mov
in
cltd
jb
repnz
scas
mov
lcall
jle
xchg
or
jmp
int
lods
cmp
jg
daa
fimuls
and
inc
rcrb
cmpb
popf
insb
cltd
in
fsubs
mov
or
std
inc
mov
mov
pop
test
aam
dec
jne
or
cltd
add
in
movl
out
in
jecxz
pmullw
repz
mov
mov
mov
dec
pop
cmp
inc
mov
ret
fisttpl
xchg
test
dec
cmc
xchg
pop
in
add
scas
add
push
mov
mov
adc
fimull
repz
div
cwtl
and
cmp
mov
rcll
stos
ret
mov
mov
and
mov
insl
jp
addl
add
xchg
cmc
gs
mov
xchg
pop
cmpb
sbb
or
adc
bound
and
ret
fs
xchg
jg
cltd
mov
pop
or
jnp
push
sbb
xor
xchg
lret
mov
add
jne
mov
push
xor
ds
gs
mov
call
out
lahf
mov
enter
js
push
sbbb
cmpsl
call
xor
into
subl
jae
mov
lock
repnz
inc
loop
test
pusha
fwait
sub
lods
outsl
sar
and
xor
and
stos
cmc
add
jno
in
push
dec
xor
int3
inc
mov
mov
fs
xor
je
lahf
leave
adc
hlt
jmp
into
sbb
int
mov
jle
mov
clc
int
test
cmp
insb
mov
lret
lods
fstl
lock
mov
xlat
inc
add
andb
xchg
jo
cmc
ret
sub
mov
xlat
sub
xor
cmp
into
pop
stos
jg
andb
lea
sbb
mov
pop
pop
xor
repz
xchg
aaa
pop
jns
lock
les
aaa
divl
notl
das
cmp
ret
movb
ror
add
mov
xor
xor
movsl
or
sbb
mov
jae
pop
je
outsl
decb
mov
pop
ss
adc
das
ljmp
nop
xchg
cmp
repnz
cmp
test
fcompl
ss
and
pop
das
aas
fbstp
mov
lods
push
or
push
xor
adc
cmpsl
add
scas
mov
cld
mov
xchg
stos
into
fists
push
rcl
dec
pushf
sahf
and
sahf
imul
and
rcrl
xor
dec
pop
pop
inc
insl
in
in
enter
and
pop
cli
data16
mov
jmp
outsl
fiaddl
fstps
xlat
rorl
dec
jl
bnd
loopne
fsubrl
clc
jnp
xchg
imul
jg
scas
jg
push
mov
push
frstor
mov
xchg
lcall
scas
mov
subl
jnp
loopne
cwtl
adc
mov
jg
icebp
cld
dec
repnz
sub
sbb
sbb
repnz
cmc
sbb
in
mov
jle
testl
imul
or
adc
mov
frstor
pop
into
scas
popf
stos
mul
mov
mov
iret
push
mov
xlat
cltd
lds
leave
inc
cmp
mov
dec
jnp
xor
stc
lds
adcb
fimull
std
xchg
jg
aam
test
and
sub
mov
jns
dec
inc
xchg
loopne
jge
movsb
or
fnstcw
ret
bnd
add
mov
inc
pop
pop
mov
jno
add
xchg
ss
add
fistpl
xlat
stc
popa
pushf
outsl
mov
cmc
cmp
movsl
jle
test
xchg
pop
mov
enter
cmpl
scas
push
dec
lret
jl
add
jg
mov
test
cld
mov
ret
dec
dec
dec
or
mov
aaa
dec
ret
cmp
stc
lods
xorl
lods
pushf
ss
jnp
cmp
mov
loope
mov
mov
gs
or
sub
pop
in
add
and
xor
fldenv
jnp
sbb
jo
pop
dec
lods
out
inc
and
cs
hlt
dec
mov
lods
jb
mov
jmp
jb
xchg
xor
lahf
cltd
push
dec
stos
sub
rcrl
adc
sub
scas
mov
cwtl
pushf
fimuls
dec
inc
xchg
wrmsr
scas
sahf
in
mov
imul
pop
dec
push
ret
add
xor
xchg
dec
adc
mov
dec
xchg
fnop
add
push
sti
loope
lods
jbe
pop
adc
mull
rol
jbe
lock
sbb
xor
mov
es
cs
jno
jbe
fbld
es
sbb
mov
push
lds
outsb
and
in
aad
mov
inc
cmp
mov
lcall
mov
fnstcw
popf
std
leave
jb
sbb
cld
inc
fwait
icebp
inc
stc
jbe
mov
or
lcall
xorb
push
jb
push
imul
cmp
mov
ficoms
leave
flds
cmp
enter
mov
iret
mov
mov
iret
adc
push
inc
push
jno
mov
add
mov
xor
out
mov
mov
repz
mov
jle
xor
xchg
mov
popf
pop
in
cmp
mov
call
push
js
pop
repnz
gs
and
arpl
int
xchg
xor
ret
fcompl
cmpsl
jmp
decl
jl
dec
xchg
loop
cwtl
pop
mov
add
hlt
lret
fiadds
or
dec
dec
sub
pop
aad
push
or
gs
pop
cmp
jg
add
popf
jecxz
fiaddl
pushf
jno
cwtl
sub
pushf
das
dec
rorl
xor
mov
enter
ds
out
iret
add
sbb
dec
mov
jae
and
jb
fiaddl
pop
jle
test
in
rclb
and
inc
xor
sbb
xchg
jnp
sbb
push
loopne
imull
inc
cmp
ljmp
scas
andb
inc
xchg
push
push
sub
leave
mov
or
lahf
cmp
push
push
mov
mov
and
ret
sbb
outsb
xlat
push
mov
jle
push
mov
imul
lcall
icebp
outsb
nop
out
mov
sub
es
clc
mov
out
shl
mov
sub
leave
repnz
testl
int3
push
popl
jnp
pop
rcl
mov
xchg
xchg
into
cmp
xor
hlt
pop
xchg
orl
frstor
cmc
mov
jae
stc
into
lret
cli
push
xchg
insl
jle
rorb
or
ficoms
cmpsl
pusha
adc
cltd
cmp
clc
or
imulb
sbbl
adc
push
mov
inc
fstl
in
cvtps2pi
push
bnd
movsb
mov
dec
ffreep
dec
jmp
ds
enter
adc
in
movsb
sub
cmp
push
xor
push
lret
jl
xor
adc
xchg
adc
mov
lahf
lea
loope
cs
into
fsubrl
scas
sbb
mov
dec
ja
mov
pop
pop
out
insb
xchg
std
stc
stos
stc
out
push
pop
push
mov
inc
cmp
fcompl
fldenv
adc
sbb
adc
mov
xchg
add
and
lret
pop
imull
loop
es
pushf
arpl
icebp
xor
cmp
push
jecxz
mov
push
lods
mov
adc
into
add
add
push
les
mov
fisubrs
insl
arpl
add
out
out
cs
enter
lret
mov
int3
push
cwtl
mov
fisubl
xor
call
out
ret
push
fadd
push
addr16
nop
cmp
pusha
pop
pop
nop
add
sub
cwtl
push
rclb
inc
add
inc
cmp
nop
sbb
jb
dec
pop
jbe
pop
ret
hlt
pop
fistl
fdivs
mov
ds
ret
inc
nop
gs
rorb
addr16
add
jge
mov
in
call
xor
xor
mov
xchg
mov
repnz
push
movsl
jae
or
lahf
test
inc
jae
ss
add
add
inc
je
and
cmpb
stc
sbb
xor
in
iret
rcrl
adc
fcomps
inc
mov
xchg
cld
rclb
jb
cmp
lods
mov
roll
ds
out
xor
sbb
jns
xchg
and
aad
notl
test
xchg
cmpsb
mov
inc
push
mov
divl
cltd
scas
mov
clc
mov
cmc
js
dec
cmp
sub
popf
jle
adc
fwait
cwtl
test
push
pushf
sub
add
jge
jo
adc
or
orl
lods
sti
out
addr16
xchg
lret
or
dec
ljmp
imul
dec
cmpb
lret
pop
add
cld
push
stc
jp
movsl
mov
scas
test
mov
push
dec
pop
out
mov
mov
xchg
and
push
adc
fprem
xor
cmp
mov
mov
out
inc
fs
mov
pop
sub
cmp
push
jecxz
or
xchg
xchg
fdivr
pop
or
sbbl
pop
pop
adc
inc
cmp
addr16
pop
inc
cld
imul
jge
sti
fs
adc
arpl
xchg
rcrb
into
jl
pop
shll
dec
std
mov
lret
pusha
pop
xor
xor
pop
idivb
repnz
repz
jl
xchg
mov
in
pushf
in
xor
sub
push
mov
jmp
sbb
popa
test
dec
push
xor
mov
or
pop
arpl
sbb
push
xchg
adc
mov
popa
dec
xor
cmp
imul
out
inc
es
push
mov
subl
xorb
xchg
js
and
or
inc
and
xor
dec
push
cmp
imul
das
pop
mov
jb
lea
adc
shll
fwait
shrl
sahf
inc
insb
pop
insl
cmc
push
push
aad
push
adc
mov
sbb
cld
xor
and
mov
dec
cmp
or
mov
stc
adc
jp
xor
icebp
xchg
pop
mov
sbb
int
stc
cmp
cli
inc
jg
dec
sub
shlb
cmpsb
insl
pop
repnz
dec
pop
pop
push
lcall
sub
mov
mov
pop
stos
pop
lret
in
jp
push
ret
test
loope
ds
cld
xor
mov
add
and
or
push
leave
pop
push
mov
lods
push
cmpsl
dec
fwait
mov
je
stos
cvtps2pd
push
movsl
sbb
testl
inc
bound
mov
push
dec
out
sub
push
mov
nop
rcrl
jg
xor
mov
shlb
shrb
out
lea
pop
fiaddl
push
xor
dec
or
jmp
add
fwait
mov
cmp
rcrl
mov
adc
xor
add
push
loopne
adc
call
sub
pop
jo
rcr
adc
stos
mov
pop
mov
rorb
into
cmp
mov
sar
lock
shll
lock
pop
inc
aaa
inc
jns
cmp
clc
jmp
das
out
cmp
pop
pop
inc
inc
fldlg2
xchg
push
mov
scas
push
fdivrl
push
scas
pop
mov
js
loop
pop
in
add
sarb
cmp
jb
or
xor
daa
pop
pop
pop
cld
adc
lea
cmc
mov
ficomps
movsl
aas
mov
out
cmp
movsl
mov
mov
add
sub
subb
push
xlat
xor
inc
lock
out
nop
enter
xor
test
repnz
push
push
loopne
loope
mov
xor
push
jne
aad
inc
lcall
jo
add
cmp
pop
xchg
lret
add
sbb
and
in
fadd
xor
pop
cmpsl
cwtl
dec
lds
adc
fildll
hlt
cmpl
aaa
insb
call
mov
sub
jg
cmp
arpl
dec
xchg
fisttpll
and
into
movsl
mov
xchg
cmpsl
clc
xchg
pop
mov
mov
adc
aaa
or
fs
mov
dec
jo
subb
add
fwait
xor
xchg
sti
xor
shlb
pop
insb
je
xchg
and
loopne
aad
cmp
mov
mov
addr16
xchg
cmpsb
clc
rclb
cmp
loope
aad
xchg
add
movl
inc
push
adc
out
aas
mov
neg
inc
dec
scas
test
stc
push
addr16
mov
pop
sbb
jnp
xchg
mov
mov
push
sbb
shlb
sbb
and
loope
or
xchg
cmp
xchg
cmpsl
pop
imul
xor
fnstcw
pop
lret
imull
movsb
ja
xor
stc
hlt
iret
mov
jl
jmp
pushf
pop
adc
xchg
mov
cltd
fdivrs
and
ljmp
lods
es
add
cmp
adc
aas
lsl
push
out
inc
and
mov
lcall
adc
jl
in
or
xchg
out
add
in
ret
in
cmp
test
push
mov
add
in
ret
inc
sub
int
lcall
adc
add
cmpsl
movsb
popw
push
jns
fcomip
push
or
mov
in
jmp
xchg
scas
push
scas
xor
outsl
lock
cwtl
icebp
and
push
div
cmp
pop
xchg
jg
lea
cmp
pop
aas
inc
orl
xor
mov
dec
movsl
ret
jae
pushf
inc
into
lret
jbe
scas
add
js
scas
and
mov
cmpsb
iret
and
shlb
pusha
or
dec
arpl
mov
sarl
dec
test
mov
stc
repz
mov
mov
movsl
loop
out
push
cmc
fistps
or
adc
movsb
fcmovu
in
leave
pop
inc
xchg
iret
xchg
push
add
mov
pop
in
inc
sahf
mov
loope
and
in
adcl
maskmovq
sbbl
cmp
mov
mov
out
jns
stos
inc
daa
pop
push
push
outsb
or
mov
lret
aas
adc
loope
repnz
pop
mov
jns
repz
pop
out
lret
test
je
mov
sub
add
dec
and
mov
xor
xchg
adc
jns
pop
mov
push
xchg
push
roll
mov
mov
out
pop
enter
xchg
fiadds
bound
stc
sti
pushl
or
adc
nop
insl
or
dec
push
pop
out
or
lcall
testl
push
mov
and
xor
sub
aas
jle
repz
xor
xor
xor
cmc
cmc
dec
out
mov
lahf
push
mov
push
in
mov
jo
fadds
push
sbb
pop
lret
mov
and
fwait
incb
hlt
mov
adc
jmp
xchg
sbb
cmp
push
push
xchg
mov
lods
sub
jb
pop
jecxz
rcrl
or
jbe
xor
or
add
pop
push
cmpsl
mov
shrl
dec
push
fcomps
sbb
test
ss
in
mov
fidivl
insl
xor
rcrl
jbe
int3
adc
pop
mov
shl
sub
xor
xor
and
or
xor
inc
mov
orb
imul
dec
push
xor
inc
out
stos
xor
adc
jnp
mov
sub
mov
sub
dec
fiaddl
jle
jne
shll
gs
fists
inc
push
imull
int
fs
jo
and
push
xchg
in
jo
pop
sbb
movsl
xor
int3
adc
add
mov
jmp
lcall
psrlw
out
xor
jge
jp
icebp
mul
mov
mov
cwtl
mov
inc
out
testb
shll
test
push
lret
cmpsl
test
sarb
inc
sbb
shll
mov
fiadds
hlt
mov
pop
push
icebp
mov
push
loopne
je
or
hlt
add
mov
in
pop
jmp
out
mov
outsb
xor
inc
push
push
bound
jb
or
mov
mov
mov
add
jle
outsb
xor
inc
push
push
bound
jb
or
mov
mov
mov
add
jle
outsb
xor
inc
psubd
bound
jb
pop
into
xchg
mov
mov
mov
add
jle
outsb
xor
inc
push
push
mov
jge
cmp
push
sub
xchg
dec
movsl
js
push
lds
sub
cmc
ret
xor
mov
gs
pop
xchg
dec
leave
js
push
in
cmc
dec
add
stc
xor
mov
jne
cmp
js
push
sti
cmp
sub
ss
popf
push
xchg
fisubs
aam
fucomip
adc
cmp
mov
fisubrs
jp
mov
std
popa
inc
jno
imul
in
or
push
enter
pop
leave
std
mov
add
mov
stos
mov
in
jecxz
jmp
fcoms
pop
push
adc
dec
fs
aad
pop
inc
insl
pop
cmp
aad
sbb
cmc
enter
aaa
mov
mov
fs
test
cwtl
cwtl
mov
xchg
cmp
jle
and
pop
jo
add
push
cwtl
popf
sarb
jp
or
dec
pusha
cmp
sbbl
shlb
rcll
mov
fsubs
jbe
ficomps
dec
movsl
js
push
in
push
sub
fmuls
call
push
mov
out
sarl
int
stos
pop
mov
pop
add
stos
push
cwtl
aaa
in
cmp
or
adc
enter
xlat
xor
or
mov
mov
cmp
cmp
or
xor
jmp
sbb
aad
in
cmc
sub
clc
xor
mov
jne
test
dec
movsl
js
push
in
cmc
sub
clc
xor
mov
jne
test
pusha
addr16
jne
or
stos
rcrl
sub
mov
push
or
mov
subl
mov
ret
mov
add
mov
pop
nop
out
nop
clc
test
lret
xor
dec
movsl
mov
mov
add
adc
scas
xor
sahf
sub
loopne
xchg
imulb
adcl
fldenv
arpl
adc
pop
add
mov
jne
mov
fists
enter
imul
cmp
mov
in
fidivrs
int3
fmul
or
push
lock
std
mov
les
mov
sub
mov
xor
sub
loopne
test
jge
add
add
test
int3
repz
subl
js
out
addb
xchg
fstl
stc
std
inc
pop
and
sti
push
repnz
mov
ret
imul
sbb
mov
in
daa
mov
mov
in
xchg
stos
ljmp
mov
and
sbb
push
xor
lret
push
loopnew
stos
and
mov
push
lods
in
test
xorb
inc
outsl
sbb
xor
clc
xor
cmpb
mov
add
into
mov
and
inc
sahf
mov
mov
xchg
and
sbb
mov
aad
dec
add
jge
sahf
test
xor
jle
cmp
les
inc
pop
les
ficoms
aad
push
loopne
fists
aaa
arpl
int
push
mov
xor
jecxz
test
fimuls
fsubs
sub
mov
pop
xlat
shrb
fildll
nop
xchg
xchg
je
lock
jmp
adc
push
filds
popf
or
mov
mov
scas
jecxz
adc
inc
fisttps
fisubs
push
xor
xor
ret
jbe
push
cmp
push
xor
mov
shl
aam
cmp
addl
cs
mov
clc
cwtl
or
adc
rcrb
ret
pop
pop
jmp
outsl
push
push
cmp
xor
inc
call
in
arpl
mov
sbb
sbb
jecxz
cmpsl
lahf
xlat
testl
rcl
iret
jne
xor
add
nop
xlat
ret
pop
xchg
outsb
mov
mov
pop
pop
pop
lock
ret
xchg
pushf
std
or
cmp
push
ret
fidivs
and
ss
mov
or
andl
sub
xor
fadd
inc
enter
pop
mov
sbb
lea
fs
push
xor
xchg
and
in
pushl
adc
shrb
ss
cmc
mov
pushf
push
jb
icebp
mov
mov
cmp
lods
mov
sbb
push
mov
jp
adc
mov
dec
jle
mov
addr16
incl
sub
addr16
add
mov
lds
xchg
pop
lret
sub
mov
je
fimull
ds
repz
push
andl
aas
add
inc
cmp
rclb
jb
out
orb
push
fwait
cmp
shlb
insl
push
pop
out
fstps
and
and
lea
push
pop
shl
adc
sti
push
xchg
enterw
aad
ret
mov
push
dec
mov
xchg
sub
pop
xor
sarb
push
sub
dec
dec
rcrb
rcll
in
loopne
or
or
sub
jmp
stos
mov
pmullw
dec
cld
fsubrs
js
dec
addr16
and
nop
mov
imul
pushf
hlt
dec
add
out
repz
jle
pop
xchg
push
adc
shrb
xchg
add
lods
adc
rol
push
xor
fisubrs
mov
out
mov
sub
js
jmp
push
fdivr
cmc
xchg
adc
loop
loopne
enter
divb
or
push
adc
orl
addr16
jne
fimull
jnp
and
or
add
call
xchg
or
std
add
xchg
fistl
pop
repnz
and
outsl
insb
popf
rcr
fwait
jg
sti
mov
cmp
lods
adc
pop
cltd
adc
mov
xchg
jo
jp
enter
ss
cmp
bound
push
nop
cmp
mov
dec
jmp
sub
outsl
int
or
das
cmp
imul
push
outsl
sbb
mov
fs
daa
or
fs
fcomps
cmp
push
popa
leavew
enter
loop
cwtl
dec
add
cli
or
sbb
fnstsw
out
aaa
sbb
dec
and
cmp
std
rcrl
add
inc
fs
in
mov
andl
mov
rolb
adcb
dec
push
or
movl
mov
jmp
push
sub
sbb
jae
pop
jae,pt
mov
fcoms
rol
fcomip
addr16
mov
cli
adc
loopne
fidivs
sub
xor
fmull
fs
gs
xorb
xchg
cs
icebp
dec
nop
adc
out
cld
in
dec
cld
int3
pop
inc
inc
mov
cmp
xchg
std
and
mov
cmc
fstps
mov
sti
mov
mov
pop
adc
les
dec
mov
int3
mov
loope
mov
sub
mov
comiss
xchg
shrb
inc
sub
pop
cmp
add
dec
inc
movsl
ljmp
adc
dec
rcrb
push
inc
adc
pop
xor
jbe
shll
or
sbb
jbe
and
leave
xchg
xorb
xorl
out
and
scas
sbb
mov
insl
xchg
jne
pop
mov
xchg
lock
cmp
fiadds
popa
add
sub
in
popf
in
lock
push
ss
mov
fdivrs
in
xchg
mov
sbb
enter
or
add
mov
lret
inc
hlt
movsl
cs
lods
stos
jo
shlb
ljmp
pop
inc
sbbl
mov
mov
sub
jbe
popf
je
and
jmp
sbb
ret
gs
loopne
das
mov
dec
addr16
xor
xor
sbb
push
lret
xchg
push
mov
inc
cltd
or
sahf
negb
jne
inc
aas
out
movsl
lcall
xor
or
neg
xchg
push
lahf
push
popa
inc
ss
lret
adc
mov
call
cld
test
mov
push
shl
imul
mov
lock
adc
lds
sbb
cmp
dec
jnp
mov
mov
mov
inc
loop
repz
add
jnp
mov
push
and
push
ljmp
or
hlt
dec
stos
outsl
je
inc
inc
mov
daa
pop
cmpsb
mov
push
xchg
xchg
ret
stos
mov
fldt
faddl
lcall
icebp
pop
adc
popf
cmpb
mov
dec
into
xchg
cmp
fwait
mov
mov
leave
sbb
scas
inc
inc
pop
aaa
inc
pop
sub
push
sbb
push
popa
popf
ljmp
je
xor
sub
int3
repnz
dec
mov
pop
mov
les
jbe
jns
incl
xor
mov
aas
test
or
lods
inc
popa
and
cli
dec
mov
jle
inc
ret
inc
cmpsb
fs
sbb
ret
popf
fdivrl
xchg
inc
add
xor
imul
add
and
scas
ret
sbb
in
fsubs
jmp
push
cli
mov
dec
cwtl
xchg
in
sbb
mov
fidivs
stc
mov
std
mov
rorb
jecxz
es
push
aas
jns
cmp
adcb
jb
int
dec
loopne
imul
iret
sbb
addr16
jnp
in
mov
adc
xchg
or
jno
add
fisubl
xchg
in
out
xchg
idivb
jmp
xor
icebp
add
xchg
jp
or
sti
pop
mov
xor
pop
sub
roll
pusha
adc
cs
xor
fmull
jg
mov
ljmp
fbld
xor
lcall
push
jae
dec
and
jo
xor
mov
stos
jbe
shlb
jbe
mov
push
sub
cs
xchg
hlt
mov
call
or
rcl
xchg
bound
cwtl
repz
jge
stos
testl
imul
fldenv
iret
mov
and
or
or
mov
add
pop
cmpsl
pop
pop
adc
pop
mov
cmp
lret
dec
shll
jg
pop
dec
lock
mov
pop
incb
loop
inc
pop
sarl
sub
sub
fsubp
xor
sub
ret
test
cwtl
jg
sti
outsb
push
pminsw
int3
pop
add
cmpsb
sbb
dec
push
test
dec
lea
push
dec
mov
icebp
jmp
adc
xor
pop
ljmp
add
rclb
sahf
pop
mov
xor
xor
popa
mov
mov
xchg
fxch
dec
inc
pop
xchg
je
and
or
inc
inc
xchg
and
pop
insl
jo
or
inc
loope
imul
lret
fcompl
xor
sahf
or
mov
or
sbb
loope
pop
mov
or
jb
pop
inc
jl
ja
andb
mov
mov
cs
scas
ror
aad
lock
inc
sbb
mov
pop
xor
pushf
pusha
sbb
scas
pop
mov
xor
dec
xor
push
aaa
adc
pop
mov
push
cmp
dec
mov
outsb
out
incb
fsts
fwait
jl
mov
adc
sti
popa
mov
inc
not
cld
mov
cmpsl
lock
mov
or
arpl
lahf
out
mov
mov
sbb
insb
pusha
adc
xor
push
sti
scas
test
mov
cmp
icebp
les
fnsave
sub
add
sbb
xchg
movsl
lock
sti
outsb
jle
adc
sub
xor
and
add
fisttpl
inc
mov
dec
adc
popf
fs
inc
mov
push
sub
xlat
mov
mov
sub
test
add
sbb
shrl
jl
mov
sub
sub
out
aad
sti
imul
call
call
ret
stos
test
shll
cmp
add
int
cs
divl
mov
jo
mov
adcb
add
inc
fcomi
mov
cmpsl
int3
jp
stc
pop
push
ret
adc
xor
xchg
add
cmpsb
adc
push
cmp
adc
repnz
adc
jae
inc
jbe
push
push
and
mov
push
int
add
jo
pushf
and
push
mov
fimuls
jle
cmp
movsl
xor
sub
shrb
pop
popa
sbb
sahf
scas
mov
ja
fldcw
jb
xor
test
lea
mov
and
leave
xchg
xchg
cli
push
lcall
orb
sub
sbb
movsb
push
int3
mov
out
mov
arpl
inc
daa
pop
cld
cs
pusha
sti
xchg
ja
lock
rcll
dec
xchg
push
xor
cmp
movsl
imul
xor
and
jbe
movsb
cmp
mov
jne
data16
add
push
jp
adc
popa
xlat
mov
lcall
cmc
push
scas
mov
mov
xchg
clc
push
adc
decb
push
orb
adc
dec
les
les
add
aas
iret
rcll
add
out
pop
push
xchg
fwait
loop
decb
xlat
xchg
jbe
cld
pop
lods
jmp
arpl
adc
lds
fcomps
or
es
mov
mov
push
sub
jno
es
dec
mov
aas
sarb
lcall
sub
shll
push
mov
in
cmpsb
xor
test
outsb
inc
inc
sub
xor
stos
ljmp
inc
inc
pop
enter
in
jo
jns
jle
mov
pop
das
das
dec
sahf
bound
fisubs
dec
mov
xchg
aas
outsb
movsl
pop
adcb
lahf
por
jno
mov
dec
sub
aam
scas
out
pushf
ret
pop
xchg
adc
and
push
push
imul
out
xchg
jno
jb
jb
lods
in
mov
xor
push
dec
lods
outsb
out
sbb
xor
sbb
mov
nop
shll
xchg
imul
add
ds
mov
and
popf
xchg
push
push
dec
ss
das
std
sub
jno
je
mov
push
or
push
sbb
sbb
sub
pop
push
inc
sbb
jbe,pn
test
xchg
xchg
xchg
adc
sub
ret
outsb
xchg
cmp
mov
mov
call
lea
add
pop
sub
sbb
pop
jmp
adc
aas
mov
add
push
push
cmp
test
mov
fdivrs
lds
sbb
sbb
int3
aaa
push
ds
pushf
movsb
int3
cmpsb
pop
push
add
cmp
push
sub
pop
or
jg
xchg
test
clc
sbb
movsl
stos
lcall
repz
push
cmp
popf
in
idivl
outsb
pushf
lret
test
cltd
nop
mov
scas
or
pop
lea
xchg
sub
sarb
and
mov
mov
cmpsl
jg
or
outsl
sub
clc
subb
pop
mov
push
push
aad
clc
and
frstor
add
in
ja
test
int
ljmp
dec
push
sarb
sbbl
add
push
or
loopne
popa
push
mov
maskmovq
imull
shr
mov
mull
cli
loope
dec
ret
or
loop
mov
fstpt
cli
jle
sbb
sbb
mov
mov
jno
int
dec
push
dec
push
subb
cwtl
aam
lea
lret
adc
icebp
mov
shl
in
imul
fadd
lret
lods
xchg
lock
fnstenv
stos
daa
enter
push
jnp
lock
sub
pushf
aas
and
dec
pop
sti
pop
jae
and
in
jle
enter
pop
int
nop
adc
add
sub
push
jnp
dec
addb
imul
das
mov
int
ss
rolb
popf
pop
pop
rcll
adc
lret
mov
adc
out
and
sbb
popf
test
in
test
mov
push
cmc
push
cltd
adc
fildll
fnstenv
cmp
and
in
mov
lcall
push
fimull
addr16
inc
jno
mov
dec
fcmovnu
fldl
push
in
adc
add
cmp
pop
stos
or
add
ret
push
fwait
cmp
xchg
inc
sbb
push
jne
cmc
jge
cltd
pusha
or
push
xlat
add
test
test
xor
insb
shlb
and
fisubl
jp
add
shlb
mov
mov
mov
push
sub
icebp
lcall
sbb
adc
or
inc
cmpsb
xchg
mov
mov
ja,pt
je
and
mov
fstpt
test
aam
xchg
mov
int3
fs
push
sbb
lcall
enter
xor
ss
loope
dec
or
and
inc
or
stc
popa
sarb
inc
dec
test
hlt
lods
popf
inc
mov
lds
std
gs
sub
jecxz
cwtl
into
int
mov
imul
std
xchg
das
scas
nop
pusha
in
adc
ret
shll
insl
push
sub
cld
gs
cmp
push
test
std
out
mov
cmp
mov
into
push
push
andb
cltd
je
aam
sti
scas
jnp
sub
sbb
sbb
lods
sub
mov
or
outsb
mov
fs
ret
mov
push
sub
cmp
in
hlt
daa
push
mov
xor
daa
cmp
or
out
rolb
mov
fs
mov
sahf
jns
das
out
add
ja
stos
xchg
dec
ret
mov
lods
rcr
xor
cmp
out
mov
out
mov
popf
sar
xchg
inc
jmp
loop
or
mov
into
mov
fs
bound
mov
cmc
push
pop
cmp
fdivrl
adc
or
mov
fstps
mov
xor
out
pushf
mov
sbb
adc
xchg
xchg
xor
jmp
push
testl
clc
sub
outsb
cmp
lods
sbb
std
mov
jle
mov
ffreep
pop
jg
insl
jl
sub
ss
pop
out
dec
mov
mov
outsl
js
sarl
sub
mov
andb
jo
hlt
out
xchg
xchg
mov
pop
mov
xor
and
sti
jle
out
int3
lcall
adc
xchg
inc
je
pop
lods
adc
or
popa
xchg
sbb
cmp
lods
rcrl
mov
lret
es
or
arpl
icebp
addr16
jle
insl
dec
movsl
add
aaa
mov
iret
mov
lcall
pop
in
cmp
mov
mov
inc
mov
jae
inc
mov
cmc
cmpsb
sbb
mov
pop
sub
rclb
mov
out
xchg
xchg
fnsave
in
mov
inc
adc
out
out
and
dec
jns
jge
jo
xor
push
testb
repz
fsubl
repnz
or
ss
cwtl
pop
fadds
or
mov
sub
cltd
pop
incb
xor
cmp
test
push
mov
les
mov
jne
sbb
mov
ret
or
cltd
mov
mov
xchg
rolb
pushf
dec
mov
sarb
fcompl
mov
xor
scas
out
int3
daa
outsl
cs
sub
into
sub
adcb
andl
mov
adcl
test
pop
mov
mov
xorb
lock
or
in
das
ljmp
pop
int3
or
push
leave
pusha
add
mov
fnsave
shlb
insl
push
xchg
add
push
jns
mov
push
popf
inc
roll
popf
dec
mov
push
hlt
data16
jno
arpl
mov
sub
jle
sbb
test
dec
push
pop
rorl
xor
call
mov
jns
inc
jecxz
adc
mov
lret
pop
or
aad
insl
mov
pop
push
push
sbb
iret
adc
popa
je
hlt
sbb
add
mov
jne
cmpsl
fst
mov
xor
sbb
add
push
lods
insb
lods
jns
clc
cmpsl
lcall
lods
inc
xchg
subl
adc
aas
push
xchg
jo,pt
mov
sbb
fwait
scas
inc
jb
test
roll
or
sub
xchg
insb
add
xor
xchg
xor
push
inc
push
loopne
jp
inc
mov
xor
bound
jns
setno
fistpll
push
shrb
loopne
aam
push
insb
and
in
push
sbb
in
jne
into
pop
inc
inc
imul
cs
cmp
out
jne
jp
movsl
gs
daa
or
call
pop
inc
aad
inc
aaa
adc
push
clc
enter
sub
xchg
jmp
jmp
adc
test
or
outsb
or
jge
pop
and
int3
clc
pop
dec
fists
frndint
sbb
mov
fsubrp
mov
pop
jno
lret
fdivrs
daa
jmp
into
jb
hlt
jns
subl
cmpb
sub
insb
inc
sbb
inc
xor
pop
xchg
aas
dec
loop
sub
idivl
ss
jns
sbb
inc
lcall
cmp
rep
jg
mov
pop
sub
mov
pop
sti
scas
cmp
sub
or
dec
ljmp
fiaddl
aas
sbb
adcl
adc
cmp
repz
dec
call
jo
addr16
pop
push
sahf
dec
pop
insl
ret
enter
jb
cltd
or
mov
out
and
out
mov
mov
mov
push
add
ljmp
mov
mov
jbe
inc
sub
cmc
test
and
mov
and
mov
les
das
loopne
xor
fwait
subb
sbb
and
into
lds
xchg
ret
fbstp
test
dec
xchg
inc
push
cs
in
push
jns
xchg
imul
pop
nop
ret
loop
stos
mov
fs
jno
pop
push
pop
xor
cmpl
lds
aad
in
cmc
sub
clc
xor
mov
jne
test
dec
movsl
js
push
in
cmc
sub
clc
xor
mov
jne
test
dec
lds
push
in
xor
enter
call
gs
leave
dec
js
push
in
jne
add
clc
xor
ja
inc
mov
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sub
hlt
sbb
jmp
lods
popa
mov
je
adc
mov
xor
and
aam
les
xchg
jge
dec
mov
sarb
je
fs
data16
int
frstor
int
fstl
lea
push
lods
pop
mov
rorb
xchg
jo
inc
mov
cwtl
push
mov
xchg
imul
push
lcall
jo
addr16
cld
adc
aam
dec
jne
mov
ja
dec
enter
xchg
mov
mov
les
dec
shrl
pop
stc
scas
movb
inc
mov
adc
int
frstor
mov
mov
xchg
jl
mov
pop
and
mov
mov
adc
std
addl
mov
orb
nop
xchg
push
gs
add
mov
adc
addr16
lds
fnsave
xchg
push
jg
mov
cmp
cs
fwait
test
scas
in
frstor
in
and
or
xchg
insl
test
inc
mov
xchg
insl
test
or
sbb
frstor
push
xchg
sbb
add
pop
shrl
stc
add
jno
push
mov
mov
insl
mov
xchg
jge
dec
rorb
out
and
and
fs
add
push
mov
les
jne
and
mov
movsb
lods
push
mov
fs
adc
add
xor
and
aam
les
xchg
jge
dec
mov
movsb
lods
push
mov
fs
adc
add
xor
and
aam
xlat
mov
outsb
out
pop
or
push
add
sbb
dec
les
lahf
icebp
push
or
push
fdivs
sub
cmp
add
inc
notb
jne
test
and
dec
repz
movsl
and
xor
cmp
gs
adc
and
shlb
xor
pop
dec
cmpsb
sub
adc
push
mov
fimull
loop
jne
add
xchg
arpl
aad
mov
sbb
jle
xlat
test
sahf
dec
iret
rcl
ret
jne
push
sahf
mov
mov
mov
out
jle
or
adc
arpl
push
and
insl
and
decl
idivb
jle
sub
pushf
pop
mov
dec
stos
roll
xchg
popf
stc
pop
cmp
and
push
pop
out
xor
sub
or
or
mov
mov
mov
and
mov
cmp
cmp
aam
sbbl
ret
jecxz
and
mov
pop
dec
jp
loopne
dec
stos
insl
mov
xchg
xor
xor
daa
sub
rcrb
call
pop
or
mov
or
or
xchg
dec
lods
js
or
sub
rolb
addr16
mov
sbb
pop
pop
jmp
push
aam
xor
jg
mov
fnstenv
jecxz
fsubs
sti
clc
cmp
mov
xorl
lds
ret
stos
mov
and
push
mov
jmp
int
sahf
fnsave
xor
adc
sbb
xor
hlt
xchg
fdivrs
push
fwait
xchg
mov
dec
fldcw
mov
lds
add
dec
xchg
out
xor
mov
add
loope
xchg
or
test
aad
mov
loop
outsb
mov
mov
mov
xor
push
xor
mov
cmp
lods
pushf
mov
xchg
jmp
movsl
into
xchg
imul
ffree
inc
jnp
or
dec
xchg
mov
lock
jge
int3
sbb
mov
stos
into
or
fstpt
dec
in
iret
sub
or
int3
addr16
add
and
cmc
test
mov
and
xor
mov
je
outsb
clc
nop
xchg
adc
movsb
ret
loopne
test
call
mov
iret
xor
push
lods
lahf
js
cmp
rorb
push
inc
ljmp
xor
lcall
addl
cmpsb
das
repz
scas
fcoms
out
stc
jns
push
adc
jg
push
stos
push
add
cs
dec
repz
and
stc
xchg
pop
or
hlt
lea
mov
ds
cmpsl
hlt
adc
fiadds
mov
cmp
cwtl
in
jno
cmpb
movsb
loope
and
sub
sbb
inc
inc
pop
or
xchg
in
dec
lds
fnsave
fidivrl
addr16
testl
in
push
fwait
loopne
arpl
sbb
add
lret
es
rcrl
inc
je
push
adc
sbb
xor
adc
mov
mov
pop
and
aam
inc
fwait
pop
add
cmc
lret
mov
xchg
add
jge
mov
rcll
cmp
jno
cwtl
inc
popf
cwtl
mov
clc
in
or
or
mul
rol
sub
xor
xlat
mov
or
xor
cli
xchg
insl
rorb
dec
cmc
test
sub
dec
data16
out
cwtl
cmpsb
push
mov
dec
mov
pushl
cmpl
in
insb
add
loop
loopne
sub
push
sub
and
mov
cmp
jns
cmp
and
mov
stc
insl
xchg
repz
xchg
clc
sbb
nop
jne
mov
mov
mov
aaa
xchg
push
jge
clc
int3
pusha
loopne
int
mov
shl
xchg
and
jl
xchg
sbbl
push
outsb
out
mov
nop
xchg
inc
stc
xorl
shl
cld
gs
mov
outsb
das
add
in
gs
ljmp
insb
mov
push
xorl
sti
fsubrl
add
and
ljmp
cli
shrl
cmc
push
fisubrs
pop
loope
xchg
xchg
iret
mov
repnz
jl
nop
cld
lea
aad
pop
dec
pop
pop
movsb
sub
fstps
mov
mov
nop
sbb
pop
push
or
jmp
jo
repnz
cmp
jno
movsb
inc
mov
std
add
dec
js
add
ror
mov
adc
pop
jb
and
sub
sbb
aas
sti
add
and
pop
scas
mov
stos
out
inc
cmc
movsb
pushf
mov
cmpsb
loop
cmpsl
rolb
mov
lods
push
push
sahf
mov
push
out
data16
mov
and
ss
rclb
inc
or
pop
cmp
push
cmp
xor
andb
push
or
mov
ds
lods
cmpsb
sub
sahf
and
rcrl
add
xor
movsl
pop
push
xor
popf
add
stc
insb
mov
adc
or
or
and
mov
push
cmpsl
mov
adc
sti
xchg
lret
nop
cmp
push
xchg
push
dec
lock
aad
push
ja
dec
test
fidivrl
dec
pop
and
dec
and
push
push
adc
lahf
pop
pop
icebp
pop
outsl
dec
inc
add
xorb
fisubrs
dec
bound
outsw
imul
cli
shll
pop
jge
cmpsb
cmp
jg
xchg
inc
repnz
stos
jbe
jns
mov
add
inc
fs
jg
and
inc
cltd
call
cmp
push
xor
xor
repnz
mov
mov
or
repnz
mov
xorps
repz
mov
mul
call
jg
dec
bound
pop
jmp
mov
sbb
cmp
imul
push
push
subl
xor
jge
lds
jb
repz
ret
adc
cmpsl
pushl
jge
or
xchg
push
pop
js
icebp
and
xchg
xchg
cltd
addl
sbb
pushf
fstpt
push
aas
leave
xchg
movsl
andb
or
jne
icebp
mov
sbbb
xor
jbe
scas
out
xor
cmpsl
aad
cs
mov
xor
aaa
jno
ret
jne
xor
mulb
cmp
dec
mov
jb
cmp
test
xor
or
test
cli
cmp
int3
push
popf
mov
loop
push
push
idiv
jge
mov
test
lds
and
xor
push
adc
test
xchg
adc
xchg
mov
cwtl
pop
push
or
cmp
pop
outsb
mov
cltd
adc
xchg
hlt
pop
sub
ss
inc
push
ja
push
ljmp
push
lahf
and
xor
jns
insb
addr16
mov
xor
ret
pop
push
andl
dec
or
insl
mov
nop
dec
and
mov
inc
mov
movntss
test
jo
std
sti
in
mov
rcrl
inc
and
dec
sbb
mov
inc
lock
xchg
jo
dec
sbb
lods
push
loop
shrl
cs
mov
push
mov
lahf
adc
add
sbb
jns
cmpsb
fs
stc
jmp
test
cli
inc
pusha
out
nop
dec
push
incl
ret
aaa
jge
lods
or
mov
xor
scas
ljmp
xlat
inc
fwait
negb
nop
or
js
mov
into
mov
adc
xor
adc
push
sbb
insb
mov
pop
sub
mov
and
out
and
clc
sub
jmp
repz
xor
aas
rcl
pusha
and
cltd
imul
xor
cltd
jle
int3
adc
or
inc
mov
and
sub
or
and
enter
xchg
movsb
in
mov
or
mov
xchg
jge
bound
data16
and
xor
movsl
push
outsb
or
mov
xchg
add
sub
xor
mov
imul
ror
repz
repnz
dec
fsubs
scas
sbb
scas
std
fwait
jp
cmp
cmp
sbb
stos
lods
mov
insb
adcb
xchg
mov
aaa
int
ss
jno
push
pop
add
mov
fisubrl
shll
das
add
xlat
out
sar
jmp
ret
cld
repnz
fnstenv
stc
sti
pop
fisttpll
jno
mov
jns
dec
add
inc
sub
and
inc
xchg
imul
cmpsl
mov
pop
shll
sbb
jmp
iret
pop
ret
call
sbbl
sub
inc
xor
sub
and
in
lret
in
into
aaa
sbb
test
xchg
xlat
test
lcall
js
fs
lahf
adc
or
dec
inc
jge
mov
inc
das
incl
int
mov
lock
cwtl
dec
ljmp
sti
sbb
xchg
outsb
push
mov
pop
jmp
xor
icebp
mov
adc
addl
cmp
sarb
loope
ret
ss
aam
popf
and
cmpsl
sbb
push
mov
in
les
fistl
ret
sti
add
jb
add
sub
and
shl
ds
movsb
insl
out
outsb
lea
data16
fsubl
adc
add
test
pop
arpl
ja
adc
cmp
sub
mov
mov
stc
outsl
xchg
sub
repnz
mov
arpl
xor
sbb
pop
icebp
pop
enter
popa
fisubrl
mov
push
push
andb
mov
push
incb
push
repz
rolb
cmp
or
outsb
in
ljmp
fstpt
shlb
pop
inc
sbb
add
je
in
shll
icebp
and
jl
jo
xchg
mov
scas
loop
inc
fdivrs
push
gs
mov
pop
andb
mov
bound
insb
sub
ret
lea
inc
arpl
adc
xor
mov
imul
imul
add
adc
sbbb
sarb
faddl
sbb
in
cmp
lds
imul
fiaddl
jg
lret
test
or
jnp
iret
mov
jl
adc
outsl
jnp
out
in
mov
loope
aaa
and
es
leave
push
adc
in
cmpsl
mov
cmp
outsb
sbb
cmp
lret
cmp
dec
pop
hlt
sbbb
push
inc
xor
dec
outsb
aaa
jno
jg
xor
dec
pop
push
in
inc
sar
sbb
mov
in
mul
cmc
std
aas
ret
mov
mov
mov
xchg
enter
mov
rorl
xchg
or
sahf
add
subl
xchg
addr16
sub
rcrb
ljmp
stc
mov
jge
fwait
pop
mov
bound
scas
xor
in
cltd
and
adc
into
subb
mov
testb
icebp
xchg
ja
mov
mov
xchg
pusha
fstps
dec
jno
popa
xor
daa
cmp
sub
mov
stos
xchg
mov
nop
or
movsb
in
in
cmp
push
out
out
imul
jno
push
in
out
jae
push
push
adc
insb
mov
scas
loop
flds
mov
push
fcompl
jne
xor
sbb
aad
add
sbb
or
mov
and
jmp
inc
lea
mov
rolb
and
dec
daa
test
and
lret
call
inc
dec
xor
leave
push
stc
sbb
idivl
add
test
dec
cmp
jae
adc
dec
stos
add
ret
fstps
add
insb
cmp
outsl
inc
fxch
push
mov
xor
std
xor
sbb
mov
ja
ja
scas
out
sub
pop
ficompl
ds
push
push
inc
cmp
fisttpl
mov
cmp
xchg
push
dec
mov
stos
xor
les
inc
mov
sub
fwait
cmpsb
adc
js
loopne
ret
dec
mov
or
andl
push
dec
int
mov
int
test
mov
push
test
pop
push
icebp
jle
inc
fcomps
iret
idivb
and
and
fnstcw
sbb
xchg
jnp
fidivl
hlt
lds
and
or
jge
jb
ret
xchg
xchg
mov
popa
lea
orb
lds
inc
lcall
and
stos
ficomps
jo
mov
loopne
out
nop
outsb
push
cmpsb
jmp
pop
jae
ljmp
enter
ficoml
icebp
pushf
repz
push
xchg
dec
mov
pop
movsl
push
clc
inc
cs
cmpsb
orb
adc
cmc
cwtl
lret
xor
sub
pop
and
mov
mov
add
fimull
imul
cmp
mov
cs
nop
jb
add
adcb
mov
call
adc
dec
jno
mov
mov
dec
out
test
xchg
mov
mov
and
xor
mov
sbb
dec
in
sbb
fs
scas
sbb
jno
jbe
jbe
mov
xor
mov
mov
popa
push
out
sbb
inc
outsb
jae
xlat
xchg
mov
add
in
enter
fld
mov
push
xor
iret
sbb
sbb
inc
outsl
shll
test
inc
dec
in
aad
sbb
mov
pop
and
push
add
jmp
lret
pop
in
mov
dec
pusha
add
xchg
xlat
jb
ror
inc
mov
clc
pop
xor
inc
test
xor
into
stos
lods
or
lock
mov
lea
out
aam
hlt
les
push
outsb
push
lsl
xchg
lahf
shll
sti
push
jnp
test
lea
insl
sbb
leave
mov
daa
mov
mov
xor
out
xor
push
lds
jg
mov
mov
into
mov
jo
dec
mov
adc
pop
cmpsl
repnz
js
loopne
pop
stos
mov
mov
jno
push
xchg
pop
je
adc
xor
push
test
addr16
ss
shrb
sbb
fildl
jne
sbb
jo
jbe
mov
mov
cli
pop
mov
adc
inc
inc
std
push
cmc
stos
js
cwtl
and
xorb
sub
jb
int
push
pop
push
sbb
rorb
and
popa
mov
push
and
or
fadds
mov
jo
xor
inc
jbe
pop
xor
and
jo
sbb
cs
ss
daa
and
inc
std
mov
jo
ljmp
shrb
dec
roll
imul
cmp
aad
enter
xchg
mov
adc
jnp
lret
xlat
and
pop
pop
gs
lods
pop
mov
pushf
mov
adc
add
pop
push
jnp
add
cmp
shlb
cmp
jp
pushf
jo
lcall
and
popa
jo
test
aam
ds
sbb
lret
sub
sbb
hlt
sbb
leave
shl
xor
addl
xor
jae
bound
push
push
lds
inc
addr16
arpl
pop
mov
lahf
push
gs
into
add
jle
pop
inc
in
cmp
cld
arpl
xchg
mov
pop
pop
movsb
mov
shll
shrb
adc
sbb
shlb
or
sbb
pop
sub
add
inc
mov
ret
cwtl
sbb
insb
mov
out
pop
sub
test
inc
rcl
xchg
or
jno
insb
jns
add
lret
add
pop
xor
mov
xchg
out
into
cmp
imul
scas
mov
adc
mov
nop
xor
sub
pusha
pop
push
mov
in
clc
sub
popa
mov
jmp
or
stos
push
stos
push
lods
out
or
and
je
jecxz
ficoml
xor
xchg
xchg
push
mov
push
add
cmpsl
ja
fnclex
mov
enter
hlt
addr16
cmp
pop
push
add
je
or
cmp
sbb
ror
push
imul
add
and
sub
addb
xor
inc
sti
aaa
enter
add
xchg
xor
or
sar
push
aam
push
fnsave
pop
movl
popf
pop
test
mov
xor
aas
sbb
xor
int
or
add
into
mov
movsl
pusha
inc
and
pusha
sub
dec
cltd
and
push
stos
jmp
xor
cmp
mov
mov
sub
jbe
ret
insl
cltd
movsl
test
fimuls
andnps
adc
or
mov
xor
lret
pop
cmc
mov
xchg
enter
leave
xor
cmp
push
pop
fstpl
shr
jl
stos
dec
inc
pusha
in
mov
lahf
mov
es
ret
stc
jb
and
int
cmpsl
nop
pop
aam
xor
lret
push
movsl
fwait
pop
lods
ret
or
je
pop
bound
sub
cmp
mov
iret
dec
test
push
pop
out
fisubs
lea
cltd
cmpb
or
pop
jecxz
iret
pop
mov
testl
sbb
xchg
xchg
push
and
xchg
dec
push
xchg
flds
sar
push
rcrb
fcmovnu
lret
negb
into
cs
jne
fxch
xchg
shr
adc
subb
mov
cwtl
jnp
mov
mov
mov
imul
and
movsl
push
imul
jnp
mov
sub
jmp
dec
mov
xchg
je
fsubrs
loopne
push
and
jo
pop
xchg
clc
ja
jge
xchg
dec
sbb
sub
xchg
sbb
mov
ret
push
sbb
stc
push
nop
or
shl
es
imul
xchg
pop
popa
cli
aam
mov
jge
adc
notb
xor
cwtl
inc
in
push
stc
fiadds
gs
iret
test
arpl
xor
loop
add
aas
inc
sub
or
push
idivb
fucomip
lea
imul
ficomps
int
ss
loopne
je
dec
jecxz
popf
gs
jno
pop
add
inc
orl
mov
rolb
ret
add
push
mov
cmc
xor
addr16
outsb
ss
movsb
jecxz
and
xchg
xchg
movsb
xor
and
xor
jge
mov
enter
cmp
sbbb
and
call
arpl
mov
cmpsl
lahf
push
dec
lcall
mov
mov
pop
push
lret
leave
or
jecxz
lods
push
pop
cmp
fwait
pop
mov
xlat
push
dec
cwtl
ds
fistpll
add
dec
mov
sbb
clc
shrb
leave
xor
cmpsl
incb
add
push
sti
shrl
in
mov
or
push
sbb
aaa
sub
cltd
lea
bound
xor
test
hlt
dec
cmp
divb
and
cmp
stos
ljmp
push
pop
aad
sahf
mov
es
xor
inc
push
ret
pop
popa
sub
sarb
or
lret
dec
inc
dec
fisubs
mov
mov
jae
cmp
mov
xchg
adc
mov
xor
sub
mov
pop
in
test
pusha
hlt
xlat
pop
jnp
ljmp
or
pop
mov
nop
mov
mov
sub
ljmp
add
cmpsl
mov
stos
mov
pushf
loope
pop
lret
fcomps
pusha
adc
sbb
pop
mov
scas
loop
repnz
or
je
mov
rcl
dec
popf
popf
and
pop
aad
int
scas
cld
cmp
mov
shlb
xchg
fs
icebp
adc
imul
mov
bound
or
xchg
icebp
jb
data16
add
dec
dec
xlat
adc
fwait
push
xchg
fisubrs
xorl
pop
aam
or
lea
je
add
cmpsl
nop
lea
xlat
xor
test
sbb
dec
xor
pushf
sbb
xchg
mov
pop
jnp
dec
xchg
jns
lahf
mov
ret
or
mov
aam
jmp
mov
sbb
adc
faddp
cmc
dec
imul
jbe
adc
mov
in
lods
sbb
cmp
in
pop
dec
adc
jg
insl
clc
pop
aad
js
jbe
dec
inc
outsl
adc
out
ficomps
inc
pop
push
or
lea
bsr
jmp
lea
nop
sub
mov
adc
adc
or
clc
push
pop
test
xchg
jge
sahf
ret
aas
sub
fdecstp
or
inc
test
push
pop
jmp
lret
mov
lret
sub
mov
lods
and
mov
lret
sub
cs
sbb
clc
inc
movsl
js
push
daa
inc
les
hlt
sbb
test
pop
movsb
lods
push
mov
fs
adc
add
xor
and
aam
les
xchg
jge
dec
mov
movsb
lods
push
mov
fs
adc
add
xor
and
aam
les
xchg
jge
dec
mov
movsb
lods
push
mov
pusha
in
adc
add
xor
and
lock
test
mov
fs
push
inc
out
daa
je
adc
dec
and
sub
ljmp
adc
sbb
jp
por
mov
ret
cmp
or
sbb
dec
mov
mov
or
jle
sub
cmp
adc
pop
cmp
sbb
dec
inc
pop
dec
xchg
ss
sti
sbb
pop
scas
dec
fisttpl
outsl
testl
dec
mov
out
gs
int3
shr
pop
and
or
and
in
xchg
test
push
cmpsl
fistl
sub
daa
lcall
ja
cmp
lock
or
inc
xchg
mov
fnstenv
cmp
push
imul
or
xchg
mov
adc
imul
out
mov
or
xchg
ja
test
and
mov
dec
scas
fcmovb
adc
mov
inc
fidivs
jp
adc
movq
sub
stc
sub
cmp
or
jnp
dec
add
stos
enter
fs
push
add
sub
pop
popf
mov
dec
xchg
pop
in
out
cmp
sbb
cmp
sbb
arpl
jge
lret
jno
or
dec
jecxz
sti
push
and
pop
jb
sbb
paddusw
idivl
jg
pop
mov
jmp
outsl
iret
pop
lcall
stos
pop
mov
or
sbb
sub
cmp
lret
cmp
or
sbb
dec
mov
mov
or
sbb
sub
cmp
lret
cs
stc
movsl
lret
mov
repnz
xchg
pop
push
pop
iret
push
lret
iret
dec
sbb
int
xchg
jo
aaa
mov
lods
mov
cld
daa
fsts
adc
test
mov
sbb
xor
fs
pushf
lret
mov
jnp
adc
mov
sbb
sbb
enter
sub
add
xchg
cmp
mov
xor
inc
adc
divl
adc
jnp,pn
arpl
fstpl
push
and
sahf
ss
jl
subl
pop
xchg
push
push
adc
movsb
lods
rolb
and
mov
pop
into
push
xor
add
xor
jl
pop
jnp
rcr
xor
mov
dec
xchg
xchg
sub
stc
jne
or
mov
xor
movsb
bound
sub
push
cs
pop
and
bound
roll
pusha
jecxz
pop
ret
mov
xor
mov
popf
cmp
notl
out
dec
shlb
sub
int3
mov
jg
fmull
dec
scas
cmp
fldenv
sbb
push
and
out
loopne
hlt
xor
dec
ljmp
jo
gs
sahf
mov
frstor
cli
mov
std
mov
and
or
stos
pop
rorb
aad
icebp
pop
push
das
jnp
pcmpeqw
push
out
mov
add
ss
and
mov
cmp
jecxz
gs
dec
loopne
mov
xchg
adc
out
fidivl
jne
out
outsb
into
dec
push
cs
adc
dec
js
cmp
test
xchg
mov
pop
int
fwait
aad
adc
mov
mov
dec
sbb
or
lcall
fnstsw
sbb
fdiv
xchg
and
mov
in
jo
mov
stos
inc
mov
and
mov
jb
lret
sub
leave
sub
mov
adc
jl
xor
add
out
push
push
jae
int
mov
sbb
mov
stos
pop
imul
pusha
cli
loope
lods
fldt
dec
scas
jb
int
sbb
ds
mov
xchg
add
pop
shll
sub
adc
scas
push
and
mov
pop
push
nop
addr16
cmp
movsl
push
sbb
ljmp
sti
rcll
dec
mov
andl
mov
jle
jns
ficoml
push
fbld
je
xchg
mov
ljmp
insl
mov
bswap
push
mov
dec
dec
jo
and
ljmp
aas
lret
jmp
or
add
push
mov
mov
out
lcall
into
pop
ljmp
dec
test
fidivs
stc
xor
and
jg
add
aam
sub
mov
fimuls
psubsb
xchg
out
fdivrp
sbb
pop
es
rol
pop
std
xchg
or
imul
pop
sub
cwtl
test
call
pop
pop
addr16
pand
mov
sub
add
xor
pop
scas
push
and
icebp
cld
imul
mov
push
mov
jl
int
or
lods
out
fistpll
xchg
movsb
jg
adc
icebp
push
jns
fstpl
add
or
or
inc
popa
ss
aaa
nop
les
fdivrl
adc
out
push
stos
xlat
call
xchg
sub
addl
jbe
mov
pop
xor
adc
sub
xchg
inc
inc
or
sti
aam
addr16
shll
inc
or
das
dec
sub
int3
popa
cmpsl
dec
aas
xchg
ds
out
pop
sbb
into
out
and
addr16
cmc
fmuls
lock
cli
push
jae
out
das
mov
pushf
xchg
and
or
xlat
loope
xor
mov
and
scas
outsl
sti
jecxz
aaa
lcall
pop
mov
loopne
sub
push
fwait
adc
imul
pop
or
mov
loope
mov
arpl
cmp
cmp
sbb
scas
push
popa
sub
sbb
sbb
aas
adc
mulb
ret
int
insl
or
mov
pop
test
ds
and
xor
xlat
aaa
pushf
push
pop
jg
loope
sahf
push
insb
outsl
fwait
xchg
mov
dec
mov
rcr
pushf
cli
xor
outsl
in
out
aad
aam
jle
jae
xchg
fsubrs
lock
pop
ss
and
jl
test
jmp
into
mov
out
movsl
test
fmull
les
test
cmp
jg
cs
lahf
rcrl
divb
cmp
sbbl
cmp
data16
stos
xchg
cwtl
icebp
ljmp
das
and
shrl
push
xor
or
mov
imul
nop
pushf
ljmp
dec
cmc
and
sbb
adc
cli
mov
sub
mov
out
jg
inc
je
outsb
xchg
jae,pn
sub
pop
xor
mov
scas
rorl
mov
aaa
dec
sub
loop
sti
inc
sbb
rclb
mov
and
xchg
iret
in
mov
inc
jns
movsl
fcmovnbe
stos
sbb
xor
fsubl
xchg
pop
mov
enter
inc
aad
loopne
clc
ja
pushf
adc
mov
xchg
pop
rorl
lods
cld
or
pop
pop
xchg
jb
clc
pushf
addr16
pop
push
into
clc
iret
xor
xlat
mov
jb
ja
jp
rclb
imul
dec
push
inc
mov
jle
dec
dec
mov
cwtl
arpl
or
mov
fdivrl
out
lds
mov
int
jo
xor
cltd
push
mov
xchg
mov
mov
cmp
shrl
xorl
aad
push
dec
push
fdiv
xchg
mov
sbb
shlb
ds
pop
dec
pop
lea
adc
xchg
stos
cld
sbb
jae
outsb
sbb
mov
xchg
outsb
mov
lods
faddp
call
orl
pop
mov
ret
inc
fnsave
lods
push
cmp
inc
push
cmp
push
xor
jb
je
push
outsl
jecxz
popa
into
xor
pop
ret
cmc
xchg
aas
movsl
fwait
pop
out
scas
cmp
loopne
lods
jns
mov
push
add
sti
in
ss
add
sub
dec
loopne
icebp
subb
mov
outsb
ljmp
cld
rolb
fstl
dec
push
push
xor
xor
fnsave
inc
mov
stos
jb
pop
mov
hlt
push
inc
jns
jecxz
or
cld
fsubrs
inc
xlat
mov
enter
jp
mov
push
or
jp
xchg
push
std
mov
ret
fnstcw
mov
movsb
out
mov
lret
pop
in
xchg
mov
fdivr
in
repnz
out
jb
xchg
push
jg
ljmp
xchg
je
sbb
add
pop
ds
clc
subb
mov
inc
sbb
pop
adc
xorb
fdivl
sbb
mov
out
hlt
mov
push
in
lods
xchg
push
mov
rcrb
hlt
outsl
sbb
fldl
aas
push
je
cmpsl
hlt
dec
jg
mov
leave
and
pop
or
imul
sub
lds
cmp
mov
jg
inc
mov
push
push
jmp
push
aam
std
push
cmp
push
test
lahf
push
fiadds
flds
and
fistpl
sub
sub
push
xchg
xor
ja
insb
push
outsl
and
loope
sbb
cmp
leave
stc
jmp
enter
inc
xchg
fwait
mov
pushf
repnz
inc
sbb
mov
mov
adc
mov
sbb
sub
or
inc
stc
je
cmp
mov
add
push
dec
xchg
rcrb
inc
or
adc
and
add
pop
bound
out
stos
cs
lea
mov
ret
push
jg
push
lock
xor
inc
adc
sub
pop
test
mov
mov
js
dec
sti
test
inc
adc
js
stos
lcall
jne
jecxz
scas
jae
lret
mov
loopne
outsl
ja
xor
push
xor
dec
xlat
cmp
pop
nop
insb
mov
cmc
sub
adc
rcrl
cmp
sti
scas
insl
pop
pop
addr16
outsl
mov
cmp
aas
mov
xor
icebp
outsb
or
stc
jns
jae
lahf
xor
or
push
cmc
imul
xchg
xchg
inc
icebp
xor
or
repz
sbb
lcall
into
bound
bound
push
lcallw
adc
lea
popl
jmp
ss
idivl
ljmp
mov
shrl
inc
shrd
push
insl
mov
inc
clc
insl
pop
sub
addb
aaa
rol
add
cmpsl
sbb
cmpsb
sbb
ret
js
add
into
sbb
sbb
xor
pop
sti
aam
mov
scas
lods
jb
inc
and
dec
pop
out
mov
dec
jnp
push
jb
sahf
pop
adc
fisubrs
fadd
stos
sahf
xchg
test
pushf
adc
inc
pop
adc
rclb
shlb
sub
or
jge
es
fldcw
ss
push
xor
mov
sub
fldl
rolb
data16
inc
jo
ficompl
mov
imul
popa
add
cmp
cmp
lahf
cs
dec
test
dec
movsb
out
mov
imul
imul
and
testl
movsl
leave
add
sahf
mov
sbbl
dec
stos
sub
push
jne
sub
cwtl
adcl
sub
ror
xchg
push
jp
lods
cmp
pop
fistpll
jmp
mov
call
jl
loop
popa
lock
sub
cltd
adc
push
dec
nop
mov
pop
push
inc
dec
push
jno
sti
mov
ret
shrb
adc
call
repz
stos
jbe
lret
and
dec
dec
sub
ret
inc
roll
inc
int
mov
insb
push
and
fldcw
stos
ss
popf
fnstsw
push
lock
mov
je
mov
shl
fwait
mov
xchg
cltd
ja
imul
pop
mov
imul
jo
mov
or
mov
movsb
push
sub
xorl
lods
test
mov
lret
xchg
pop
mov
stos
out
arpl
jmp
mov
push
pop
xchg
jl
push
mov
mov
pop
out
fstps
push
mov
xchg
mov
push
add
cmp
xchg
inc
in
mov
add
or
mov
insb
xor
mov
mov
sub
out
xlat
xchg
cmp
mov
insb
fnstenv
aaa
mov
dec
stc
fmuls
jle
cmp
aas
cmp
ret
adc
xchg
sbb
in
sbb
mov
mov
stos
lods
sbb
imul
mov
shll
sub
jl
cld
push
ffree
in
or
mull
xor
iret
sub
jmp
fdivrl
adc
js
push
xor
aaa
push
dec
mov
dec
popf
xlat
std
sub
andl
inc
or
push
pop
cmpsl
rcrb
aad
cli
call
dec
push
movsb
lds
cwtl
cmp
out
add
popa
cli
xchg
cmp
jno
sti
xor
loope
add
fs
lock
sub
push
out
xchg
and
push
jmp
sub
mov
repnz
xor
xchg
ss
inc
mov
mov
mov
and
and
xchg
je
mov
inc
push
in
jne
push
push
sub
hlt
push
rorl
jns
mov
idiv
push
xchg
mov
stos
insl
popf
out
pusha
data16
inc
fcomps
or
rcll
fadds
shlb
popa
push
pop
aas
fwait
lcall
add
push
stc
cmp
lret
fdivrl
sbb
sub
or
xchg
popf
sbb
clc
sub
push
adc
lcall
jb
xchg
mov
sub
xchg
test
or
lret
cmpsb
hlt
movsl
outsl
mov
aam
mov
lds
scas
das
stc
repz
xchg
inc
sbb
call
adc
fisttps
aam
adc
daa
push
imul
in
fisubrl
jge
dec
cmp
lcall
cmp
data16
int3
and
sbb
mov
sarb
cmp
imul
xchg
pop
xchg
loopne
dec
lea
sbb
add
push
imul
xor
outsb
pop
pop
pop
imul
testb
adc
shr
ljmp
xor
aad
adc
dec
inc
cs
ror
push
add
pcmpeqb
mov
xchg
jne
sbb
and
push
xchg
popf
mov
jmp
inc
mov
pop
jnp
xchg
push
mov
shll
adc
xchg
dec
sbb
imul
rorb
lock
shll
jae
lock
movsb
push
rclb
jae
and
push
xor
insl
cs
push
jle
push
lahf
push
notl
outsl
inc
bound
movb
xor
insb
mov
adc
add
imul
loop
addl
lods
test
lods
shll
cs
cmp
dec
jmp
shrb
add
lea
imulb
std
jle
imul
lcall
mov
add
xchg
sub
fdivrl
pop
pushf
aam
dec
out
add
mov
mov
cmp
jmp
push
das
lods
ficompl
in
push
sub
sbb
stc
les
push
pop
cli
mov
mov
ss
inc
ljmp
xor
fists
cwtl
std
pop
dec
in
push
sbb
add
sti
insl
push
sub
scas
lods
mov
pop
push
xchg
mov
daa
js
mov
imul
push
mov
xchg
lea
sti
std
je
outsb
repz
loope
dec
stos
dec
add
cmp
pop
mov
mov
or
jae
mov
xor
jecxz
add
sbb
pop
dec
stos
out
adc
movsl
lods
andl
mov
clc
xchg
dec
jno
jmp
loope
pop
mov
add
mov
in
mov
out
dec
cmp
ja
mov
jb
cmpsb
pop
stos
push
and
in
mov
sbb
cmp
ja
in
enter
outsb
in
mov
es
cmc
jp
mov
xchg
adc
mov
xchg
jecxz
pop
fptan
pop
imul
adc
sbb
inc
inc
sahf
das
movsl
pop
mov
cwtl
in
xor
mov
ret
jl
ljmp
push
std
mov
sub
and
lret
mov
mov
dec
inc
mov
lock
fnsave
add
adc
push
xchg
mov
test
mov
fldl
and
lahf
mov
push
add
push
add
popa
call
dec
lods
mov
and
stc
sub
lret
fldl
add
mov
incb
cli
sbb
clc
jne
std
sbb
cmp
mov
push
into
scas
jp
jle
out
loope
xchg
sti
mov
pop
adc
movsbl
cmp
sub
lea
or
scas
adc
ljmp
jge
add
pop
add
mov
mov
sbb
imul
ret
andl
push
filds
push
mov
dec
pop
xchg
subb
ret
sbb
test
in
dec
dec
aad
les
pop
shrl
scas
dec
movsb
mov
int
jp
lock
xchg
popf
sahf
mov
or
jl
insb
inc
cli
int3
pop
adc
mov
cli
xchg
out
outsl
scas
nop
push
jnp
pop
test
cmp
jne
xor
mov
or
imul
outsb
mov
pop
data16
sbb
lret
ret
pusha
stos
fidivrl
jle
hlt
shlb
iret
inc
out
stos
test
dec
cltd
loop
pop
or
cmp
ret
or
cmp
adc
adc
into
adc
cs
push
mov
das
addb
jmp
insb
mov
rolb
push
fcoml
in
lods
pop
pop
mov
popf
popf
jns
xchg
and
cmp
cmpsl
inc
cmp
lret
push
idivb
mov
pop
fwait
sub
jo
push
and
bound
insb
xchg
push
push
inc
mov
and
test
pop
xchg
pop
jecxz
push
loop
xor
sbb
mov
arpl
sbb
jecxz
cmp
int3
pop
xor
ljmp
sub
shrl
push
fcmovbe
mov
cmc
cltd
sub
call
mov
pusha
pop
loopne
scas
mov
or
mov
mov
das
scas
jp
daa
outsb
pop
and
mov
push
repz
inc
ds
dec
jl
pushf
push
rcrb
fstpt
fst
xchg
xor
push
lcall
mull
sbb
shlb
pusha
pop
fwait
dec
lods
cmpsl
cmp
out
fdivrs
daa
mov
cltd
aad
sub
std
mov
cmp
mov
inc
ret
sar
movsb
movsl
and
cmp
sti
rcl
stc
push
cmpsl
ds
sub
icebp
sbb
stos
pop
jecxz
cmp
add
xorl
pop
pushf
jne
sbb
mov
jae
lock
mov
sub
adc
shlb
test
jmp
int3
imul
dec
lods
xor
int
shlb
and
dec
loop
pushf
dec
es
cli
int
cmp
mov
movlps
or
and
or
mov
add
and
jg
xchg
dec
or
rcrb
mov
push
sbb
mov
test
jae
call
in
fcomip
in
add
ljmp
sub
cwtl
aas
push
cmp
xchg
rcll
enter
test
inc
repz
inc
mov
mov
divb
les
fs
and
pop
or
cmp
inc
pop
push
jp
push
jmp
push
xor
xor
fs
add
cwtl
data16
repnz
mov
ljmp
sbb
lods
int
sti
mov
or
jbe
or
lds
enter
adc
in
mov
jp
xor
pop
pushf
cld
xchg
movl
inc
and
sti
aam
sbb
negl
in
testl
and
ds
dec
pop
cmp
push
cmp
es
flds
or
loopne
inc
lea
push
add
jecxz
in
jne
xor
sbb
sub
mov
bound
lods
push
fwait
jbe
sub
cs
lcall
insl
cld
std
or
xor
mov
mov
jecxz
loopne
div
fdivp
sub
loop
xchg
push
mov
daa
push
mov
jns
mov
dec
add
ds
pop
std
mov
aam
xchg
jne
mov
int3
leave
sub
loopne
pop
das
inc
sub
dec
sti
push
mov
loop
lcall
jl
mov
push
loopne
push
xchg
lock
jmp
push
bound
sahf
jmp
fstpt
xor
inc
fwait
xchg
mov
lret
rolb
mov
push
scas
notb
pusha
mov
add
or
out
rcrl
inc
das
andb
mov
cmp
pop
inc
lahf
rcrl
dec
xor
add
push
push
pop
jmp
adc
loope
mov
jo
ja
mov
xchg
add
je
sub
xor
mov
lcall
pop
popa
mov
sbb
push
jnp
sub
in
cli
packssdw
repz
lods
sti
inc
jl
push
push
loopne
or
test
bound
iret
cs
iret
mov
mov
enter
or
cmpsl
data16
mov
push
push
mov
mov
cmp
xchg
es
jo
imull
mov
mov
cmp
adc
xor
sbb
jecxz
jb
js
or
xchg
out
call
cwtl
inc
filds
call
jecxz
xchg
cmp
mov
lods
mov
jnp
call
addr16
lock
loope
dec
and
leave
popf
push
dec
popa
pop
dec
popf
pop
pop
xchg
inc
or
js
aad
and
lock
and
and
and
push
insb
push
jle
cmp
pop
and
aaa
mov
push
test
popf
xchg
cmp
out
js
push
pop
aas
jmp
lods
sub
push
mov
pop
dec
dec
lock
pushf
lea
dec
into
or
add
cli
fisttps
aaa
push
cmpsl
mov
dec
aas
shlb
rorb
mov
push
cmp
or
sbb
dec
mov
mov
or
sbb
sub
cmp
lret
cmp
or
sbb
dec
mov
mov
or
sbb
sub
cmp
lret
cmp
or
sbb
dec
mov
mov
or
add
cs
or
shrb
idivb
bound
rcrb
mov
sti
stos
lret
cmp
mov
jge
xchg
add
xor
and
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pop
orb
mov
jnp
pop
ret
fildl
lret
adc
and
xor
bound
xchg
jnp
imul
loop
repnz
lret
jb
and
xor
and
xchg
jnp
imul
loop
repnz
lds
repz
call
jb
orb
int
jecxz
add
shl
sbb
mov
test
mov
aam
adc
inc
sub
sub
and
fs
sahf
mov
mov
push
jecxz
inc
dec
sbb
inc
mov
mov
iret
cmp
xchg
ficomps
dec
adc
ret
sbb
lds
or
jbe
int
gs
lods
mov
bound
insl
adc
push
dec
mov
imull
jno
aaa
inc
jmp
scas
pop
popf
mov
insl
cmp
mov
mov
pop
les
mov
xor
jbe
jae
orb
mov
or
cmp
sub
fildl
lret
adc
and
xor
bound
xchg
push
lret
push
inc
rcrb
push
lcall
je
and
and
pusha
pushl
pop
cmpb
sub
addr16
xchg
sub
mov
inc
scas
pop
and
cmp
pop
stos
and
lret
das
rcll
push
sbb
or
cmp
sub
fildl
lret
adc
and
xor
bound
xchg
jnp
imul
loop
repnz
lret
adc
and
xor
bound
fcmovnb
adc
rorl
and
or
fldcw
sbb
jecxz
out
push
mov
cmp
iret
in
arpl
sub
inc
cmp
ljmp
push
cmp
push
fsubrp
out
dec
mov
pop
ss
and
aaa
cmp
or
sub
insl
iret
iret
cwtl
mov
div
mov
shl
fs
imul
loopne
mov
sbb
enter
push
xchg
xor
repz
mov
dec
pop
or
scas
sbb
in
xchg
push
mov
or
lds
jns
dec
dec
pop
test
loop
push
push
xor
cli
mov
test
cld
mov
jmp
flds
xor
inc
adc
mov
xlat
mov
test
jns
and
mov
mov
negl
insl
inc
jne
mov
stc
pop
add
xchg
cmp
mov
inc
filds
jns
jb
jp
cli
or
call
pop
fadd
fwait
jge
fmull
or
ljmp
push
or
mov
push
push
lea
cs
pop
mov
mov
out
mov
popf
push
aas
jns
ret
movsl
stc
and
or
out
inc
repnz
cmp
jno
nop
rolb
mov
mov
int
rcl
out
es
popa
andb
pop
push
cltd
mov
test
lret
cmc
pop
jmp
sbb
and
inc
push
rorb
xchg
adc
cmc
dec
xor
mov
dec
xor
cli
xor
mov
and
std
test
inc
arpl
xchg
jecxz
pop
decl
mov
or
dec
in
fnstcw
loopne
pop
adc
pop
mov
cmp
adc
pop
adc
shll
jmp
mov
sti
cmp
mov
mov
lret
jnp
iret
jmp
addps
xlat
sub
push
js
and
xor
xlat
cmp
lock
stos
lods
cmp
lods
andb
insb
call
sbb
inc
xor
mov
rcr
js
and
in
movsl
test
lret
loop
sub
dec
out
mov
lahf
mov
imul
imul
jno
adc
push
cmc
lods
daa
hlt
scas
loope
add
dec
sbb
mov
repnz
xlat
mov
lds
jecxz
xor
icebp
sub
aaa
or
pop
pusha
push
and
sub
sub
aam
jo
lock
xor
cs
jmp
sahf
sbb
negl
inc
pop
test
add
movsl
xor
pop
or
pop
mov
mov
adc
repnz
in
mov
incl
add
je
push
push
dec
mov
or
dec
in
mov
mov
mov
pop
push
pop
push
push
jnp
sub
cmp
repz
xor
push
mov
js
insl
xchg
and
int3
movsb
jge
jle
or
fistpll
or
sti
scas
xor
aaa
add
clc
adc
push
out
push
mov
out
out
push
arpl
test
dec
stc
in
addr16
mov
imul
mov
fcoml
cltd
out
jle
fiadds
daa
scas
scas
idiv
rcrb
mov
loop
pop
popa
ror
imul
aad
ss
cmp
xchg
sub
cli
mov
cld
xor
and
inc
or
notl
test
enter
xchg
sbb
add
cmp
mul
or
arpl
hlt
cmp
cmp
fsubs
nop
mov
jae
sbb
fcmovnbe
sbb
jl
test
cmc
sbb
cmp
je
clc
cmp
xchg
add
mov
lret
push
cmpsb
mov
decb
out
or
aas
mov
mov
jae
lods
add
lock
sub
inc
aaa
inc
xchg
fistpl
and
pop
push
aas
dec
das
pop
sqrtps
or
jnp
pop
addb
xchg
adc
cmpsl
push
add
mov
and
ljmp
fisttpll
mov
push
js
mov
sbb
xchg
xchg
sti
cli
push
outsl
add
out
mov
fs
sbb
push
inc
jecxz
aam
jmp
icebp
pop
ret
pop
sub
mov
out
cwtl
dec
inc
pop
mov
aam
rorb
mov
cmpsb
rcrb
pop
sbb
sub
hlt
into
dec
add
pop
cwtl
popf
push
jecxz
inc
inc
enter
mov
and
sbbl
stos
push
xlat
xchg
or
in
jne
shrl
dec
mov
push
cmp
add
repz
enter
insl
jmp
add
roll
push
mov
in
arpl
or
push
sub
jae
fsubrl
loopne
jno
ss
or
adc
gs
jbe
inc
pushw
push
das
push
pop
xor
mov
adc
in
rorl
or
pop
inc
adc
cmp
mov
push
lret
fbld
cld
adc
xchg
xor
or
mov
xchg
mov
cmc
cmp
fnstsw
fidivrl
add
popa
inc
lret
pusha
test
jmp
rcr
out
ds
jbe
fadds
out
push
aaa
and
aas
xor
pop
dec
mov
xchg
push
lea
mov
xor
test
push
cmp
loop
sbb
jmp
pop
call
mov
jno
inc
testb
sub
movb
faddl
xchg
cmpsl
jge
jnp
xchg
scas
mov
or
clc
fwait
mov
jle
mov
enter
cli
xchg
aas
inc
sarl
pop
fdivp
xor
push
ret
aad
mov
mov
sub
fs
hlt
shr
push
dec
mov
jecxz
sahf
dec
pop
xchg
mov
loope
add
pop
popf
lock
jne
jnp
insl
aas
add
fistl
xor
les
and
xchg
or
pop
jae
incb
add
test
sub
xor
scas
and
bound
push
inc
jge
push
and
pushf
lahf
lea
pop
lods
int
sbb
xchg
lock
pop
shll
repnz
insb
rcr
shl
test
pusha
xchg
js
cltd
jge
lds
dec
mov
loop
xor
ss
imul
mov
jns
loopne
orb
mov
dec
std
dec
mov
mov
int3
das
xor
icebp
icebp
sub
cmp
test
and
inc
and
mov
lods
iret
adc
jns
pop
dec
inc
loopne
lret
in
jbe
aaa
in
dec
mov
in
mov
push
cmp
fcoms
stos
addl
xchg
lods
xchg
adc
ljmp
out
ret
ja
fiaddl
cmp
xchg
cld
inc
jo
lahf
xchg
mov
imul
loope
clc
inc
outsb
cmpsl
or
and
sti
sbb
dec
hlt
pop
cli
xor
jo
scas
fsubp
fs
sub
and
pop
out
add
repz
inc
xchg
repz
inc
mov
add
aaa
out
mov
insl
jge
std
mov
mov
add
and
arpl
jno,pn
sub
jl
mov
sbb
stos
popf
leave
jns
cmp
pop
sahf
push
cmpsb
dec
enter
sar
pop
add
or
jno
jl
pop
fsubrs
sbb
jecxz
sbb
stc
and
in
outsb
loop
aam
inc
adc
adc
sar
popa
fstl
lods
jno
je
mov
jne
icebp
cmpsb
cmpsb
int3
adc
dec
cltd
sbb
iret
lods
fadd
mov
ss
push
imul
sub
int3
loop
jnp
js
fistl
gs
dec
movsl
pop
push
jae
insb
jno
mov
mov
adc
pushf
pop
xlat
insl
aam
ret
xlat
hlt
sbb
adc
lds
adc
jl
push
jmp
and
pop
cltd
mov
ljmp
mov
xchg
rcl
test
lahf
and
aam
xchg
mov
dec
popf
jle
aaa
push
popa
sbb
xor
push
aad
jp
popa
loop
dec
popa
ljmp
repz
aam
xlat
repz
add
out
pusha
scas
aaa
out
jno
xchg
insb
jmp
fdivrp
shl
mov
imul
test
sbb
imul
push
sbb
sub
dec
fmull
test
dec
sbb
push
mov
loopne
loope
in
lods
and
stos
push
mov
test
push
and
testl
out
outsl
scas
sarl
inc
incb
cmpsb
xor
popf
pop
out
incb
xor
push
cmp
cli
xor
jle
rclb
addr16
out
testl
roll
lahf
push
data16
sub
fadds
in
jecxz
or
subb
outsl
pop
push
cld
sub
push
xor
sub
out
mov
fdiv
add
call
dec
mov
cltd
andb
std
jne
pop
inc
pop
repnz
dec
add
movsb
das
cwtl
mov
pop
pop
mov
xchg
daa
addr16
xchg
sahf
addl
loop
mov
or
std
insb
push
mov
xlat
mov
mov
or
aad
pop
jne
and
aam
sarb
push
or
push
notb
push
neg
pop
dec
shrb
hlt
xchg
mov
jo
repz
pop
lds
enter
cmpsl
xor
int3
clc
loop
add
addb
popa
xchg
push
movl
and
inc
sti
xchg
adc
mov
mov
addb
xchg
fsub
test
pop
xchg
std
cli
pop
inc
dec
ret
insl
cmp
aaa
jl
dec
iret
clc
mov
add
dec
fwait
dec
lret
push
les
insl
xchg
popf
lea
int
push
sub
xchg
jno
push
test
shlb
rolb
xchg
enter
test
mov
inc
mov
inc
inc
xor
and
fbld
xchg
aad
adc
jo
loop
sub
fcompl
cltd
sbb
inc
adc
adc
fsub
xchg
pop
push
or
push
push
aam
mov
lods
sbb
popl
and
cmp
sub
cmp
cmp
add
leave
outsl
jmp
sarl
movsb
lret
mov
sbb
repz
and
cmpsb
adc
leave
into
shrb
mov
ficoml
addr16
push
adc
ret
fldenv
sbb
cmpb
jmp
rcl
and
rcrl
pusha
fwait
sub
mov
xor
adc
sahf
sub
dec
sbb
xor
cmpsl
sbb
aas
ret
sbb
jb
and
mov
sub
notb
xchg
loop
into
cmp
pushl
jecxz
scas
addl
in
push
or
out
sbb
cltd
cs
cmpsb
sbb
rcl
ds
xchg
xchg
enter
mov
aam
stos
pop
lahf
inc
and
xchg
cmpb
and
mov
mov
or
sbb
cmp
shl
adc
or
iret
jns
or
or
adc
addr16
std
mov
je
ja
in
cmc
push
adc
or
inc
inc
mov
add
add
rcl
mov
ret
mov
push
addr16
cmp
xchg
lret
ja
cmc
fstpt
test
rolb
aam
pop
jbe
sub
mov
jb
mov
or
push
in
aas
cmp
popf
pop
mov
loopne
adc
in
sahf
adc
sbb
xchg
out
nopl
mov
mov
repnz
stos
jmp
rcrl
cmpsb
and
mov
mov
int3
pop
mov
loop
cmpsl
insl
ret
jecxz
jle
addb
fiadds
fnstcw
cmp
jge
cmpb
push
mov
hlt
jne
jecxz
in
aam
cmp
es
and
mov
test
cmp
jns
test
out
jge
sbb
jecxz
shl
inc
les
sub
repnz
out
add
imul
xchg
aas
pop
clc
mov
mov
mov
mov
xchg
stos
jge
inc
aaa
push
test
jg
push
mov
mov
dec
push
cltd
sarb
and
sub
int
jecxz
bound
jno
fstpl
xor
sub
add
cmpsb
outsb
xchg
in
mov
pop
push
inc
iret
inc
int
int
popa
negb
pusha
imul
jb
mov
call
iret
dec
aad
push
leave
cmp
adc
ret
call
lret
or
subb
cmpsl
aam
mov
ja
jmp
int
mov
orb
fldz
xchg
stos
xchg
test
pop
mov
cmc
mov
mov
sub
bound
fidivl
es
mov
xlat
push
gs
mov
popa
cmpsb
fsubrs
pop
cs
pop
and
dec
or
cmp
adc
mov
imul
jge
mov
inc
dec
decb
movsb
cmp
xor
rorl
add
fistpl
lahf
dec
mov
loope
mov
movsl
inc
mov
mulb
insl
jns
mov
and
add
loop
mov
mov
cmp
shlb
mov
or
test
je
pop
mov
out
shrl
fs
jecxz
xor
jns
dec
lds
shll
sub
les
add
lods
call
lahf
pusha
pop
pop
cmp
push
fcoml
push
mov
fisubs
inc
shlb
and
fnstsw
sub
cld
jae
lods
adc
pop
xlat
adc
fdivl
scas
decb
out
pop
inc
or
xor
jmp
sbb
pushf
jne
repnz
xchg
push
pop
push
ficoms
cmp
ficomps
mov
pop
or
sub
pop
jl
pop
jp
mov
lcall
push
push
jne
sti
sbbb
out
push
rep
leave
iret
lods
pop
leave
stc
sbb
adc
pop
mov
pushf
aam
into
lahf
icebp
call
es
test
mov
sub
mov
mov
repnz
addr16
pop
mov
mov
sub
imul
rolb
pop
popa
aaa
xchg
mov
je
adc
cmp
mov
dec
push
mov
inc
dec
jle
out
jle
popa
mov
jne
ss
mull
cld
xor
aas
jno
adc
inc
ja
mov
sub
ret
mov
popf
test
pop
fistl
lahf
xchg
add
mov
mov
xchg
push
bound
cmp
je
dec
and
lods
or
iret
push
sbb
mov
cmp
lret
rolb
mov
cmp
cmp
idiv
imull
fcoms
std
lock
out
sbb
std
dec
or
sub
adc
sub
bound
out
sub
dec
test
or
push
imul
push
xchg
test
inc
sbb
ror
repnz
mov
cmp
std
stos
xorl
push
hlt
lret
ret
shlb
cmp
xchg
pop
dec
dec
fwait
ds
mov
pop
inc
cmp
mov
xlat
sarl
push
mov
push
xor
iret
orl
leave
clc
test
xchg
stc
xchg
cwtl
pop
adc
das
mov
pop
xchg
gs
mov
in
cmp
and
jo
xchg
adc
imul
ret
inc
and
cmp
cmpl
je
sbb
push
mov
pop
fwait
add
dec
in
enter
jge
inc
dec
lahf
out
jns
or
lea
pop
hlt
cmc
test
mov
call
rorl
cmp
add
lds
mov
dec
jmp
xchg
push
insl
xchg
fisttps
push
ljmp
mov
and
cmovp
push
out
jne
js
ljmp
xor
pop
inc
lea
cmpsb
mov
fnsave
jle
push
aam
insl
dec
cmp
loopne
xchg
mov
jnp
ss
stos
push
je,pn
mov
jg
cmc
sbb
fsubr
scas
gs
adc
fidivl
adc
jb
and
mov
aas
arpl
aas
fsincos
ss
test
xchg
pop
ds
mov
adc
stos
add
fucom
inc
iret
push
fdivrs
rclb
outsb
imul
cmp
and
adc
ljmp
push
cmp
sarl
out
push
ret
mov
jg
fcompl
push
js
imul
int3
add
push
adc
loope
loopne
lret
gs
out
jmp
mov
negl
addb
sbb
xchg
insl
pop
mov
jmp
add
xor
jns
dec
cmp
pop
xor
popf
mov
test
push
mov
jne
gs
dec
dec
dec
sbb
mov
pop
add
fstl
mov
notb
inc
loop
push
out
packuswb
arpl
jno
add
and
cmp
mull
sbb
loope
mov
add
out
sbb
sub
or
xchg
lods
icebp
shlb
lods
pop
push
sub
cmp
aad
pop
ja
and
scas
inc
pop
stc
das
mov
inc
popl
mov
loope
ret
jns
les
sti
je
or
out
or
xchg
or
xchg
idivb
testl
ljmp
pop
mov
mov
and
jp
inc
jnp
mov
xchg
mov
push
xor
mov
mov
in
scas
cmp
fsts
jbe
out
pop
push
pop
ficomps
add
enter
aam
in
ds
sbb
xchg
jge
ss
cwtl
cmp
push
jae
sub
add
add
inc
dec
ja
lret
mov
stc
call
jae
mov
subl
sbb
daa
rorb
stos
cmp
mov
add
inc
scas
das
jo
inc
push
das
jbe
decl
lahf
xchg
dec
imul
sbbb
jp
sahf
sarl
std
movsl
insb
pop
gs
dec
push
pop
divb
int3
insl
or
movsl
or
popa
lret
addr16
push
push
add
xchg
out
mov
outsl
repnz
or
jle
aas
or
add
cmp
mov
leave
and
push
nop
sub
idivb
dec
lahf
mov
int3
shlb
jb
mov
push
cwtl
dec
mov
lret
mov
scas
mov
sub
lahf
cmpsl
frstor
adcb
mov
fs
aad
lret
ficoml
call
push
push
loop
push
in
jbe
mov
xchg
fs
out
cld
je
cmp
jns
xlat
shrl
fwait
aam
lret
xchg
push
jns
inc
jns
fnsave
push
or
sti
idivb
xchg
cmp
xor
jno
in
inc
lea
mov
adc
push
andb
mov
dec
mov
call
adc
out
mov
or
mov
cmc
frstor
ss
notl
nop
ja
jbe
dec
lahf
scas
inc
inc
cmp
imul
mov
jmp
mov
or
shlb
sub
out
mov
test
aad
cmp
fsub
in
cmc
push
jle
or
push
mov
xchg
cmp
addr16
mov
mov
jae
rcr
xchg
pusha
call
adc
add
mov
daa
mov
stos
fistpll
or
movsl
repz
adc
jo
sahf
inc
xchg
sub
sub
mov
mov
andl
add
mov
imul
sub
aaa
popf
lea
js
scas
xchg
sub
jno
in
pop
loopne
sbb
sar
enter
push
pop
push
cld
and
mov
push
mov
movsb
fiadds
fnsetpm(287
sbb
fildll
dec
iret
dec
xor
or
lods
lret
ficoml
jb
shll
push
arpl
push
imulb
pop
mov
push
add
mov
add
popa
repnz
outsb
push
inc
inc
xchg
mov
fs
inc
loop
push
mov
cmpl
dec
gs
and
repnz
push
add
mov
jge
add
popa
shll
ret
orl
insb
inc
decl
jb
ret
and
push
iret
xlat
mov
test
jne
ss
in
rcr
sub
mov
stos
out
sbb
cmp
inc
loop
int
or
or
jmp
xlat
mov
inc
sub
cmpl
imul
jb
test
pop
dec
stc
xlat
or
imul
add
dec
repz
adc
das
test
dec
insl
push
push
movsl
imul
sbb
mov
add
ss
stos
jle
adc
loopne
insb
lcall
adc
cld
push
dec
js,pt
adc
or
inc
mov
and
popf
jl
lds
dec
xchg
and
or
cmp
sub
fildl
lret
adc
and
xor
bound
xchg
jnp
imul
loop
repnz
lret
adc
and
xor
bound
adc
imul
loop
repnz
jmp
fwait
inc
mov
bound
xchg
jnp
imul
loop
repnz
lret
mov
in
lret
inc
popf
push
lea
in
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
xchg
repz
sub
cmp
insl
jae
add
pop
jl
mov
mov
repz
repz
add
sbb
sub
cmp
dec
push
pop
arpl
orl
mov
jecxz
repz
add
xor
arpl
subl
ret
mov
ret
mov
adc
pop
arpl
cwtl
repnz
mov
lods
test
ljmp
js
push
push
sahf
pop
push
movsb
jb
inc
pop
mov
testb
cli
mov
sub
jmp
or
sub
push
pop
inc
sbb
pop
call
or
pop
cmc
adc
fcoml
fsubl
mov
les
add
or
insb
jg
xorl
xchg
fcoml
mov
lahf
andb
data16
xchg
xor
std
jo
fsubrl
cmp
jge
add
pushf
repz
mov
add
add
cld
test
jbe
mov
jl
inc
mov
mov
shrl
pop
or
or
cmp
es
dec
push
pop
arpl
adcl
ret
aam
lret
jecxz
repz
ja
push
sbb
sub
xor
push
adc
in
in
stc
xlat
shll
in
xchg
push
pop
jnp
es
aaa
outsb
arpl
or
shl
std
fcmovnu
decl
sub
jne
cmp
dec
add
push
pop
arpl
orl
ret
int3
rcr
jecxz
repz
add
sbb
sub
cmp
dec
push
pop
arpl
orl
ret
int3
rcr
jecxz
repz
add
fwait
scas
or
daa
push
mov
fwait
cmp
loopne
and
push
into
xchg
dec
lods
and
ds
mov
stos
stos
jns
and
dec
cmp
adc
aad
push
loop
divl
sub
mov
push
fldenv
push
jge
jne
jecxz
adc
or
jle
lods
test
jno
cmp
mov
rolb
inc
sbb
mov
pop
aaa
lret
jns
push
sbb
cs
cwtl
fcmovu
and
leave
repnz
lcall
fstpt
out
sub
xchg
dec
into
adc
negl
loope
loope
inc
addb
fsubrs
push
leave
jae
jne
dec
imulb
mov
movsb
cmpb
lock
mov
fnstcw
dec
lock
dec
jecxz
pop
rorb
icebp
cmp
imul
cmpsl
xor
sbb
sub
or
test
mov
aad
fcoms
cmc
fcompl
inc
imul
dec
fidivl
jmp
hlt
cmp
aam
ret
cmp
sti
xchg
lods
outsb
orb
pop
xchg
repz
sbb
dec
lds
popa
xchg
stc
or
mov
adc
js
add
pop
xor
lcall
pop
sbb
mov
ljmp
fsubp
ss
in
orl
das
jno
jg
dec
hlt
or
icebp
xchg
sub
pop
arpl
dec
jno
xor
pop
lret
outsl
fadds
ffree
pop
shrb
js
pushf
add
and
lcall
popa
out
xor
pop
imul
xor
mov
xor
xchg
mov
cs
adc
fmul
inc
dec
shlb
dec
push
or
mov
add
pop
not
dec
das
int
cmp
cmp
pushf
lret
cmpsb
aas
xlat
mov
pop
push
or
lds
or
pop
cs
test
js
movsb
mov
scas
fidivl
ss
outsl
pusha
repz
cmp
adc
cmp
pop
inc
arpl
pop
mov
jmp
dec
jbe
or
inc
xchg
and
mulb
push
mov
or
fimull
inc
or
in
lods
inc
jmp
fsincos
aam
and
test
dec
mov
mov
mov
test
jne
pop
addb
test
pop
and
dec
xchg
mov
icebp
adc
mov
xchg
cli
je
fisttps
popa
ret
or
in
cmc
lret
cwtl
push
mov
sbb
es
decb
push
push
xlat
pushf
in
test
mov
data16
and
stos
or
test
mov
daa
ficomps
add
lcall
jmp
dec
push
adc
inc
jo
lods
lock
jmp
jo
clc
imul
ljmp
mov
add
inc
mov
test
push
mov
dec
ficoml
adc
ret
stos
adc
mov
mov
dec
xchg
lret
cmp
cli
jmp
loopne
cmp
mov
out
loope
or
sahf
gs
sti
in
add
in
loope
imul
outsb
mov
js
mov
repnz
sarb
fidivrs
aaa
sbb
cs
int3
fidivrl
cmp
pop
rcr
jmp
lret
rclb
inc
dec
aas
pop
loope
push
cs
rorb
xor
pop
jne
icebp
xor
mov
inc
fidivrl
loop
mov
and
pop
or
les
mov
out
xlat
sub
xor
mov
lretw
js
jmp
dec
imul
ja
cmc
push
mov
dec
sbb
fcoms
hlt
cmp
mov
sub
add
xor
mov
jns
ds
jae
iret
clc
dec
push
unpcklps
divb
enter
push
sti
xchg
xchg
add
hlt
add
stos
shlb
add
add
mov
dec
dec
repnz
fsts
cmp
lea
xlat
lock
jecxz
pushf
sub
jo
sti
jp
pop
outsl
sub
stos
sbb
lds
or
fcompl
mov
xchg
jmp
mov
fwait
or
lods
cmpsb
cmp
xchg
sbb
sbb
inc
sbb
push
adc
popf
int3
outsb
push
cwtl
mov
cld
loop
push
sbb
loopne
lds
aam
adc
inc
adc
xchg
mov
push
test
in
or
rcll
roll
adc
add
mov
pusha
cmp
popf
jg
gs
push
stc
cmp
jl
sbb
outsb
dec
rcrb
fbstp
in
out
pop
xchg
mov
enter
xor
lcall
pop
mov
fisttpll
nop
jb
mov
jno
jl
and
inc
out
or
aaa
lret
iret
movd
add
arpl
lods
cs
out
insb
iret
mov
sbb
cli
insb
sbb
lcall
and
cmp
mov
into
jl
clc
mov
push
loop
xchg
or
shlb
xchg
jle
add
hlt
sahf
mov
pushf
imull
jo
xlat
mov
cmp
inc
jmp
mov
inc
push
das
xchg
aaa
dec
int3
sarl
xor
push
mov
jg
shlb
ja
and
pop
stos
jno
xor
jp
sub
jge
out
movsb
xchg
push
orps
sbbb
out
cmc
adc
mov
xor
stos
insl
xchg
lcall
mov
pop
xor
dec
inc
int
inc
pop
xchg
mov
frstor
adc
clc
adc
lea
inc
subb
and
es
mov
loopne
mov
fists
sbb
cltd
sub
pop
mov
jnp
repz
sahf
mov
jne
test
jp
mov
mov
push
out
jns
xor
push
js
xchg
je
jl
adc
push
xchg
in
mov
es
ficompl
sbb
jo
adc
out
movsb
cmp
mov
ljmp
sub
pop
loope
jne
and
sub
xchg
pop
sub
xchg
or
movsl
daa
and
fwait
pop
pop
jo
push
imul
jmp
push
test
ret
mov
test
lock
push
pusha
bound
and
pop
xchg
cwtl
mov
pop
sub
mov
pushf
hlt
into
daa
xor
adc
pop
fadd
jb
int3
in
dec
push
cs
xchg
pop
jbe
orl
xchg
inc
nop
jecxz
sarl
mov
jecxz
mov
cltd
or
mov
mov
mov
push
and
push
mov
jns
nop
sub
or
xor
pop
dec
out
xchg
data16
ja
push
mov
push
mov
sub
movsb
out
cmpw
jl
cli
in
cli
xchg
lods
cltd
rorb
divb
test
and
leave
adc
cmp
movsl
loope
cmp
and
inc
push
or
jnp
cmp
jns
sub
pop
test
jl
test
orl
outsb
mov
mov
scas
xchg
pop
cmpsb
iret
xor
popf
xchg
sub
cmp
and
xchg
imulb
mov
js
lea
jnp
mov
cltd
jae
pop
add
mov
pop
hlt
mov
pop
lds
or
sbbl
into
adc
mov
mov
pushl
rcrb
ss
jbe
pop
push
testb
inc
dec
imul
inc
daa
mov
stos
fldt
bound
xor
sub
in
movsb
js
rcll
dec
ljmp
mov
xchg
icebp
enter
scas
xchg
cmpsb
mov
inc
mov
cwtl
mov
jno
push
fsts
lcall
fwait
mov
es
lahf
push
inc
jl
jbe
das
push
mov
mov
push
mov
popa
ret
imul
aaa
pop
xlat
jg
std
xor
xchg
aam
pop
icebp
lret
mov
mov
mov
sub
or
xor
and
and
sub
cmp
enter
sub
dec
push
stc
xor
xlat
repnz
lods
aad
push
in
adc
or
add
mov
sbb
xor
sti
popf
mov
out
xchg
fmuls
test
loopne
adc
add
sbb
les
rorl
and
mov
mov
add
fcoml
mov
xchg
pop
out
inc
subl
arpl
add
stc
out
push
mov
jmp
rcll
cmp
ret
int
shl
test
aad
aad
cld
mov
dec
shrl
aaa
pusha
and
fsubr
or
movsl
mov
lahf
inc
xchg
movsl
scas
mov
in
mov
and
inc
mov
jo
cld
sti
cmpsl
imul
pop
mov
repz
jb
lret
shr
imul
sub
rorb
pusha
sub
pop
sbb
add
adc
out
testl
jae
adc
inc
add
sbb
bound
bound
cwtl
and
outsl
cmc
in
jne
lahf
add
pop
fs
xchg
cld
fstl
mov
cmpsl
jo
movsb
ljmp
sub
push
lock
ror
pop
fcmovb
mov
jl
sub
sbb
dec
push
dec
jmp
shll
push
mov
lods
jle
insb
add
jbe
pop
js
sbb
lahf
mov
lahf
test
repz
aaa
insb
dec
adc
push
sar
cli
clc
add
pop
pop
push
pop
enter
fst
jge
scas
adc
add
call
iret
les
pop
test
jo
in
cmp
lods
rorb
imulb
push
in
in
adc
js
fsubr
pop
add
pushf
sbb
mov
pop
repnz
and
adc
sub
xchg
sbb
movsb
ret
add
mov
xchg
rorl
into
sbbb
inc
and
push
mov
cmp
cwtl
inc
xchg
movsl
popf
lock
adc
out
adc
xor
mov
add
jge
xchg
mov
sbb
dec
loop
nop
hlt
mov
addr16
ja
imul
xor
fsubr
cmpsb
pop
pushf
pop
subb
mov
adc
xchg
mov
cltd
pop
dec
push
mov
dec
lahf
sbb
inc
rclb
outsb
popa
add
dec
pop
scas
or
inc
lock
cmpsl
mov
sub
sbb
push
inc
into
popf
adc
cmp
int
add
xchg
lock
cmp
sbb
daa
push
push
daa
mov
pop
or
lods
or
jb
fsubrp
push
push
mov
sbb
push
sub
jl
adc
repz
or
lock
xor
push
mov
lret
arpl
mov
inc
scas
add
stc
cmp
rorb
inc
scas
dec
cmpsl
ret
inc
movsb
adc
sbb
imul
mov
push
push
mov
mov
jb
mov
loop
inc
cwtl
aas
stc
jge
loopne
leave
and
inc
adc
popa
cmpl
mov
movsl
jecxz
icebp
mov
lds
out
xchg
jb
mov
fisubl
cmp
out
sbb
cwtl
test
or
mov
pop
pusha
imul
in
call
imul
pop
push
fiadds
hlt
enter
inc
sbb
orb
sbb
xchg
cs
sbb
sbb
std
push
enter
movsl
sahf
and
lret
lret
movsb
push
int
jecxz
inc
or
sub
push
and
and
je
inc
outsb
ret
mov
sub
pop
sahf
xor
mov
inc
mov
sbb
repz
mov
cmp
push
push
sub
mov
ja
adc
or
sub
push
in
aad
inc
inc
or
hlt
sbbl
out
cmp
jle
mov
lcall
or
mov
repnz
sub
fstps
or
mov
xor
aas
mov
sbb
pop
mov
jnp
cmp
or
ss
fcomps
into
out
jp
rep
lods
pop
mov
sub
addb
repnz
enter
cltd
rcr
fwait
iret
cs
adc
test
clc
mov
pcmpeqd
iret
mov
xchg
mov
mov
adc
inc
dec
push
pushf
jle
push
subb
popf
or
popf
mov
mov
jg
lret
testb
mov
cltd
add
jns
fisubl
push
insl
push
push
cmpsb
inc
or
clc
inc
cwtl
jno,pt
hlt
pop
in
pusha
lret
xchg
sbb
insl
inc
std
pop
ja
aaa
fadds
nop
xchg
sti
sbb
xor
dec
lods
shl
shlb
xchg
lahf
fistpl
push
xchg
outsl
cs
inc
iret
shrb
nop
sub
jg
jmp
jo
stos
les
pushf
xlat
scas
cmp
cmpsb
lea
push
and
mov
out
sbb
in
adc
pop
or
and
in
fimull
fldt
shrb
mov
sbb
lahf
xchg
and
cmp
cmp
jne
push
shl
cmp
and
dec
cld
sbb
jne
xchg
lods
dec
xchg
lock
cmc
inc
add
bound
cmp
mov
mov
xchg
les
sub
or
in
andl
xor
ss
cmp
push
andl
or
cmp
mov
dec
repz
and
xchg
sbb
ds
in
imul
fs
mov
cld
clc
loope
shrb
xor
pop
mov
cld
pop
subl
jg
sub
fldenv
mov
and
out
aad
pop
pop
ja
push
inc
xchg
aam
movb
mov
loope
lahf
sbb
aaa
insl
popa
cmp
push
aad
add
add
or
std
xor
dec
jle
jecxz
lea
push
push
into
nop
inc
xchg
lcall
inc
cli
and
mov
fcompl
jp
lcall
and
andb
inc
mov
mov
mov
mov
int3
inc
repz
cli
and
sbb
push
adc
pop
pop
iret
movsl
add
les
loopne
das
int
adc
fidivrs
xor
dec
pop
sbb
add
inc
aad
add
je
jecxz
out
sti
mov
sub
call
xchg
in
test
arpl
xor
xchg
mov
pop
sbb
shlb
or
push
push
and
enter
sahf
adc
lods
inc
push
jb
and
jl
addr16
mov
mov
in
ret
in
popf
ret
jge
hlt
cmpsl
call
iret
xchg
cmpsl
movsb
pop
xchg
pop
mov
cmpsb
mov
push
push
push
jae
mov
pusha
fistps
and
pop
iret
mov
or
popl
aad
inc
dec
mov
push
test
movsl
data16
cmpsl
stos
xor
pop
sbbb
inc
xchg
jns
jp
pop
stos
out
bound
shlb
dec
enter
or
sbb
out
mov
enter
xchg
add
xchg
fs
ss
dec
inc
pop
out
loop
test
and
xchg
stc
cmpb
dec
hlt
shrl
fs
js
xchg
shrb
sub
cmc
inc
jns
push
jne
push
inc
es
ljmp
jmp
and
aaa
jle
mov
mov
popf
ret
loop
pop
adcb
pushf
or
test
mov
jbe
xor
xor
mov
pop
daa
add
jl
lcall
mov
test
flds
icebp
in
test
testb
or
mov
enter
js
pop
scas
aaa
andb
add
sarb
sbbl
and
shlb
pusha
lret
xor
jns
js
xchg
mov
adc
hlt
popf
mov
dec
push
lods
sbb
dec
test
rcl
or
adc
jb
mov
xchg
clc
mov
icebp
sbb
jecxz
loopne
movsb
in
mov
adc
orl
test
leave
inc
jl
cwtl
or
mov
push
ficoml
adc
js
mov
push
imul
xlat
dec
adc
or
xchg
xorb
sbb
xchg
addl
and
mov
push
pop
xchg
sti
fidivrl
and
push
xchg
sbb
jecxz
fisttpll
cli
push
jo
sbb
jl
insl
cmc
hlt
lds
enter
lret
lds
or
pop
sarl
cmp
das
sub
add
lcall
cs
out
enter
mov
out
mov
cmp
fdivp
jnp
cmp
jge
enter
cld
daa
test
cmp
mov
fwait
popf
jno
dec
sahf
jp
mov
push
hlt
imul
xchg
pop
xor
push
fstl
rclb
clc
jl
repz
lret
xor
shr
cmpsl
dec
mov
jge
add
sbb
mov
pop
and
sub
es
xor
gs
insb
sbb
jne
ret
pop
addr16
cld
push
pushf
in
mov
sbb
cmp
cmp
xlat
cmpsl
outsb
mov
lods
sbb
mov
lods
iret
push
mov
mov
dec
sahf
cld
cmpsl
cs
mov
pop
in
sub
orb
sub
jnp
lock
jbe
mov
cmp
fwait
andb
mov
lcall
xchg
sub
adc
cmp
int3
arpl
out
and
add
outsl
int
mov
jecxz
sub
fwait
mov
adc
scas
in
out
xor
sti
nop
xchg
dec
and
cld
and
cmp
jge
dec
iret
fs
aas
sarb
xchg
push
mov
jae
mov
sbb
stos
push
fstpt
or
sub
cld
mov
push
push
jge
mov
inc
sbb
out
jmp
out
xchg
je
dec
scas
insb
int
imul
mov
mov
popa
inc
sbb
bound
pop
push
and
xchg
mov
pushf
dec
ss
mov
push
inc
sub
or
xbegin
cmpsl
dec
and
cmp
loop
pop
sub
movsl
add
jbe
or
pushf
daa
sub
call
mov
sbb
pop
mov
imul
bound
es
add
iret
pop
lcall
cmp
roll
stc
inc
cmp
stos
xor
adc
je
fld
jo
int3
cmp
outsl
pop
leave
mov
inc
xchg
pop
fiadds
sbb
jp
cli
jne
jb
push
jge
cld
push
test
popa
daa
xlat
mov
cmp
repz
loopne
pop
ss
push
fldenv
mov
call
fs
add
insl
xchg
aam
add
sbb
jnp
dec
sbb
lcall
pop
push
loop
test
xchg
jle
daa
mov
pop
inc
fs
bound
push
std
dec
dec
andb
or
dec
sub
push
cltd
push
fmuls
pop
mov
inc
outsb
sahf
inc
dec
in
push
jae
aam
mov
adc
xchg
sti
das
adc
add
sbb
lret
cmp
fisubs
dec
std
loopne
xor
movsl
ror
inc
mov
add
pop
out
xchg
xchg
jge
test
jg
lods
xchg
stc
pop
test
xchg
mov
and
or
lahf
lock
mov
jns
rcr
xor
mov
pop
push
jecxz
fisttpll
shlb
pop
inc
fsubr
push
outsb
and
popa
xor
cmp
adc
frstor
inc
test
out
sbb
fisttpll
pushl
test
shl
push
lds
sub
out
pop
sbb
xchg
cltd
xchg
xor
fcompl
add
jb
push
insl
cmp
jne
and
adc
push
jo
push
sbb
push
std
mov
loop
pusha
sahf
clc
repz
fldl
xor
test
adc
add
fcompl
push
mov
push
test
cli
xor
push
add
and
pop
inc
cmp
xchg
pop
xchg
sbb
pusha
inc
push
test
lahf
pop
push
mov
or
pop
add
adc
push
mov
adc
pop
jl
shl
out
ret
test
insb
cmc
into
cwtl
mov
pop
or
fisubrl
jecxz
test
xor
inc
cmp
mov
push
loope
mov
xor
ficomps
mov
mov
push
ljmp
in
pop
fdivr
and
sbb
daa
scas
mov
shlb
push
enter
dec
sahf
xchg
jge
idivb
aam
test
ficoms
push
or
aas
pop
roll
xor
inc
cltd
add
adc
int
push
xchg
outsl
fdivrs
and
insb
push
sub
sub
jecxz
push
dec
sub
shll
pop
sub
mov
adc
std
push
xchg
sbb
mov
adc
lds
dec
shlb
ja
test
mov
pop
ret
xor
dec
push
pop
arpl
orl
ret
int3
rcr
jecxz
repz
add
sbb
sub
cmp
dec
push
pop
arpl
orl
ret
int3
rcr
jecxz
repz
add
sbb
sub
cmp
dec
push
pop
arpl
orl
ret
int3
rcr
jecxz
repnz
add
sbb
sub
cmp
dec
push
pop
arpl
orl
mov
pop
and
or
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
