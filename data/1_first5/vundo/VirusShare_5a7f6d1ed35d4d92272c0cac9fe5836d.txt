add
add
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
shll
sbb
int3
pop
sub
lods
or
add
add
or
add
add
push
movl
jnp
addb
add
add
add
add
jno
sbb
xor
imul
add
add
inc
add
add
cmp
pop
add
add
addl
and
adc
imul
add
add
roll
imul
add
add
add
add
add
add
add
add
add
add
pop
add
add
outsb
add
add
add
add
add
outsb
add
add
add
add
or
outsb
add
add
add
cmp
dec
add
add
add
add
add
add
add
outsb
add
add
add
addb
add
push
add
and
addb
add
imul
add
jno
jne
outsb
add
add
add
jno
add
outsb
add
addb
add
add
addb
add
jbe
jecxz
add
add
jne
jecxz
adc
addb
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
sub
add
lcall
add
cmp
adc
add
add
add
sub
add
add
add
add
add
add
popa
add
add
add
add
add
add
js
repnz
add
mov
add
add
add
sub
sti
add
sub
xor
lcall
add
add
add
jecxz
xchg
add
adc
js
pop
add
sti
add
add
movl
or
addb
add
lcall
add
add
add
add
add
xor
sub
add
add
add
sbb
add
add
add
add
addb
add
add
add
add
addb
add
add
add
outsl
add
ret
add
or
jge
addb
add
add
add
add
add
imul
add
add
add
incb
add
add
add
xchg
add
add
add
add
add
add
add
incb
push
add
add
add
add
add
add
add
mov
roll
mov
sub
pop
add
add
add
add
roll
adc
xchg
add
add
repz
add
add
pop
add
add
add
add
movl
addb
add
add
add
add
addb
add
add
outsb
add
addb
add
add
add
add
push
add
sldt
add
addb
add
outsb
add
add
jecxz
jns
addb
add
add
add
add
add
push
add
addb
add
movl
sub
add
add
add
pop
add
add
xchg
add
pop
add
add
xor
jnp
pop
add
iret
add
add
sub
add
add
cmp
pop
add
add
decb
repnz
lahf
adc
mov
cmp
adc
iret
xor
xor
or
iret
dec
or
rcrl
nop
xchg
loope
xchg
jle
xchg
in
pop
xor
jbe
mov
out
mov
les
xchg
and
mov
loopne
fstpt
cmp
shl
sub
pop
das
xor
add
mov
jl
dec
xor
std
cmp
jecxz
dec
inc
aad
iret
rcll
and
or
mov
data16
pop
adc
lret
popl
cmp
jg
mov
dec
inc
es
sub
ret
and
inc
and
repz
insb
filds
sbbb
cli
pushaw
mov
sbbb
aas
je
aad
shll
adc
xorb
push
push
xchg
pushf
inc
lahf
imul
fcoml
mov
ljmp
sub
test
mov
sub
sti
jb
in
jp
int3
mov
iret
dec
xor
pop
push
and
mov
push
mov
daa
setb
xchg
xchg
xor
jne
out
sbb
roll
adc
sarl
in
mov
ficomps
push
dec
sub
dec
mov
sbb
mov
cmpsl
fdivrl
fsub
mov
mov
shrl
push
sbb
cs
fwait
imul
test
iret
and
leave
ds
arpl
repnz
push
push
or
mov
sbb
jle
sbb
cltd
cwtl
inc
in
cmp
inc
xor
dec
insb
arpl
out
ds
inc
sub
or
pop
testl
test
mov
add
push
loope
call
lock
inc
popf
xchg
lahf
mov
and
movsl
fdivs
mov
jmp
lods
sub
shlb
jne
clc
sti
jb
push
idiv
daa
jge
sbbb
inc
inc
or
mov
jb
test
shl
ljmp
dec
popa
mov
outsb
pusha
inc
sbb
div
mov
push
sub
nop
dec
mov
mov
jnp
sub
sbb
pop
xorl
sbb
push
xchg
mov
jmp
add
or
push
and
icebp
daa
stos
sub
insl
in
cs
lahf
shrl
xor
lret
xor
cmp
lods
xchg
mov
jnp
mov
repnz
loopne
subl
aam
jne
push
insb
mov
aam
mov
movsl
xchg
into
les
inc
hlt
jb
mov
lahf
push
fwait
movsb
repz
daa
push
loopne
push
out
or
mov
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cmp
sbb
push
jae
or
xor
testb
fiaddl
sub
inc
or
es
pop
push
dec
cmp
into
mov
cli
mov
mov
xchg
xchg
cmp
sub
jp
push
pop
or
and
out
aad
cmpsl
out
movsb
cli
cmc
cltd
rcrb
and
sbb
cmp
xlat
jb
orl
ja
popa
mov
gs
in
imull
cmpsb
stc
mov
or
xchg
or
inc
das
jo
inc
cmpsb
das
lret
nop
notb
out
movaps
push
popa
dec
pop
push
lret
or
inc
or
push
add
dec
fwait
dec
arpl
push
jnp
jne
stos
mov
cmp
jns
ljmp
imull
cmpsb
mov
mov
stos
int3
push
and
cltd
rorb
push
imul
pop
std
mov
cmpsb
push
loopne
push
into
mov
cld
stc
ljmp
jp
push
pop
push
dec
test
les
pop
ficompl
dec
sbb
cmp
addl
lret
xchg
arpl
mov
loope
fnstcw
and
jns
dec
cmp
je
fs
outsl
enter
out
mov
or
jecxz
in
adc
outsl
cmp
push
ss
push
dec
push
mov
mov
cli
cmpsb
ljmp
data16
inc
or
es
pop
push
dec
push
mov
mov
cli
cmpsb
ljmp
dec
and
inc
imul
ficomps
add
cmp
push
jg
stc
js
pop
loop
fdivp
icebp
sub
bnd
sbb
push
lahf
lcall
inc
mov
shll
repz
pop
cmp
incl
jge
iret
jbe
push
shl
sbb
mov
lock
rcrl
push
stc
cmpsl
push
push
or
pusha
push
js
push
shll
stos
and
imul
das
ficoms
stc
pop
mov
dec
fisubl
lret
repz
test
push
push
mov
nop
dec
sub
or
push
gs
jae
sbb
jp
loopne
psubw
sub
loop
and
pop
mov
movsb
out
popf
shll
loope
or
mov
negl
pop
adc
out
push
jnp
pop
mov
push
sbb
xchg
add
loope
jmp
dec
movsb
loop
xchg
out
lret
lret
jle
fnstcw
pop
mov
jecxz
movsl
bound
mov
and
nop
ret
cmp
aam
dec
mov
fadds
push
mov
dec
push
in
mov
pop
loop
xor
sbb
jo
test
xchg
and
xor
int3
push
push
pop
jle
sbb
subb
add
and
mov
lods
xchg
iret
jns
cmp
jmp
out
jge
xorb
mov
push
out
mov
pusha
pusha
jne
jno
clc
rcrl
pushl
jns
sub
dec
pop
inc
insl
stc
sti
movsl
push
jno
mov
jl
std
cmpsl
mov
outsl
ss
lret
adc
inc
and
or
aad
dec
shr
push
ds
xchg
cmp
cmp
sbb
xchg
test
jge
aas
xlat
ror
insb
jnp
adc
cltd
pop
cld
jge
fdivrs
cmpb
mov
bnd
cmp
sbb
imul
into
inc
and
shlb
add
adc
scas
xlat
ret
lcall
js
mov
mov
insb
fsubrs
mov
xchg
clc
sbb
push
xlat
and
sahf
sbb
dec
dec
jae
ja
aaa
sub
adc
les
cwtl
jns
fcmovne
sub
cmpsl
out
je
das
dec
add
jo
xlat
inc
es
xchg
pop
lret
pop
lods
loope
cld
inc
into
or
inc
jmp
mov
ja
out
adc
xlat
mov
icebp
pop
jo
or
cmp
adc
or
add
mov
in
test
cld
cmpsl
cmovle
nop
popf
push
fdivs
push
nop
mov
mov
add
pop
mov
jle
sbb
push
es
xchg
daa
neg
push
mov
adc
fs
adcb
pop
mov
cs
pop
icebp
and
and
jae
cmpsb
jbe
inc
push
das
or
xchg
daa
push
ja
push
jnp
inc
mov
add
sbb
sub
aaa
int
dec
inc
jne
aaa
je
sbb
lret
cmc
sub
decl
loop
sbb
cmp
cmpsl
shl
or
repnz
in
inc
shrl
ficompl
jle
arpl
adc
mov
lret
ds
adc
mov
shl
jnp
sahf
fidivrs
outsl
mov
and
mov
fiaddl
or
push
adc
add
repnz
lea
inc
int3
shlb
cmp
ficomps
push
jmp
scas
xor
push
ss
arpl
fldl
push
mov
cmpsl
sbb
or
cmp
or
push
xchg
fcmove
ret
orb
xor
jno
adc
sub
in
xor
jb
pop
xor
popa
jns
mov
insl
push
pop
dec
and
fsub
sbb
popa
jl
gs
inc
scas
xchg
sub
test
insl
pop
sar
lret
popf
adc
jmp
fistpl
xor
lcall
add
pop
mov
dec
push
push
inc
mov
cmp
inc
arpl
es
sub
pop
push
ror
push
dec
cld
pop
push
icebp
xor
cmpsl
popf
orl
bound
cld
pop
mov
fldl
mov
sub
push
movsl
inc
push
test
xorl
xor
fs
and
mov
inc
mov
mov
inc
xor
lret
loop
cmp
pusha
dec
js
test
clc
inc
mov
subl
cmpsl
stos
mov
jbe
push
xchg
pop
pop
pop
cltd
jmp
sub
mov
xor
inc
int3
rep
xchg
or
push
cmpsl
inc
arpl
test
and
mov
pop
cmp
out
sbb
push
test
ss
inc
add
insl
loop
movsb
add
pop
test
mov
sti
inc
mov
dec
scas
pop
or
test
mov
push
rcll
push
out
not
and
xlat
mov
xor
mov
mov
mov
xor
ljmp
insb
lret
lds
jecxz
mov
xor
pop
and
push
mov
jp
pusha
mov
arpl
mov
push
cmc
dec
lea
pop
push
movlps
cmp
out
jle
leave
cltd
outsb
pop
xor
stos
stc
arpl
mov
pushf
xor
mov
sbb
adc
mov
je
dec
scas
subl
mov
scas
push
enter
cmpsb
das
xchg
mov
stos
faddl
jmp
push
inc
and
add
sahf
add
addr16
mov
pop
clc
fs
lods
inc
in
mov
push
test
xchg
fildl
and
out
in
mov
dec
push
cmp
mov
testb
dec
xchg
jl
inc
cwtl
mov
jb
aad
add
inc
ds
rolb
das
fdivs
xlat
xchg
cwtl
cmc
int
xchg
adc
cmpsb
daa
fists
jecxz
lcall
fldenv
xchg
les
xor
cmp
ss
mov
lds
and
ret
clc
mov
adc
sbb
jb
push
movsl
sbb
stos
mov
or
sbb
mov
fwait
test
shl
lds
xor
mov
dec
mov
daa
add
addl
inc
int3
push
je
or
std
xchg
shll
fnstcw
dec
fistpll
mov
and
in
out
jb
clc
ret
es
xchg
fisubrs
mov
and
inc
aad
jmp
mov
jbe
sbb
in
xor
cmc
in
outsb
jle
adc
xchg
add
lret
insb
mov
adc
fstl
stc
jbe
mov
dec
mulb
out
aaa
or
aas
xchg
add
int3
int
dec
mov
inc
enter
scas
xor
fdiv
js
jne
push
mov
jmp
ret
icebp
loop
cs
jb
mov
jmp
pop
xor
dec
add
cmp
push
loopne
add
xlat
add
cmpsl
mov
xor
sub
mov
mov
or
lahf
and
clc
xchg
adc
add
jnp
dec
popf
inc
iret
jl
lret
ds
mov
int
pop
adc
inc
mov
jne
inc
mov
icebp
pop
dec
xchg
xlat
arpl
cmp
cmp
ja
jo
sub
jp
leave
hlt
push
pavgb
out
adc
es
sbb
mov
jo
icebp
mov
push
pop
ret
jmp
pop
jecxz
stos
arpl
dec
xor
ljmp
sbb
sub
data16
inc
push
mov
ds
jmp
xchg
add
cmp
dec
cltd
cld
test
fwait
test
push
inc
cmp
jle
andb
in
and
xor
xor
ja
mov
jecxz,pt
dec
xchg
clc
mov
or
outsl
dec
lods
dec
aam
cld
aas
repnz
int
rcrb
hlt
sbb
xlat
daa
pop
ds
mov
cmp
je
hlt
mov
int3
vpunpckhbw
adc
lock
mov
hlt
lcall
fadd
push
sbb
push
mov
mov
and
dec
cmp
mov
scas
iret
mov
xor
inc
xor
adc
sub
imul
repnz
scas
int3
stc
xchg
insb
push
and
cmp
ja
rorb
mov
adc
stc
subb
loope
idivb
sbb
xchg
dec
popf
cmp
mov
loopne
xchg
cld
cld
push
dec
fscale
aaa
xchg
and
clc
mov
clc
mov
cmc
adc
imulb
cltd
out
in
add
aam
sbb
arpl
mov
ja
sbb
lret
call
cmc
lods
jecxz
adc
pop
cli
jecxz
sub
pop
xorb
lds
stos
mov
pop
rcl
outsb
out
pop
test
mov
add
push
add
scas
xchg
xchg
cmp
inc
int3
cltd
scas
addl
pop
mov
stos
inc
pusha
jge
js
in
lods
je
outsl
mov
adc
les
sbb
adc
aad
mov
cmp
pop
cmpl
loopne
mov
jmp
xchg
lods
popf
out
icebp
stc
mov
jns
mov
inc
sub
sub
push
enter
jge
push
ja
loopne
push
int
test
in
ret
rcrb
mov
dec
popa
push
mov
mov
xor
and
lds
ja
mov
xchg
mov
lods
xor
mov
jo
mov
add
add
sbb
out
icebp
mov
fiaddl
mov
mov
in
push
mov
dec
pop
push
scas
gs
sub
aam
push
or
pop
outsl
xchg
inc
das
and
push
sbb
and
shlb
sarb
cmp
cwtl
imul
and
dec
mov
out
jle
clc
jo
insb
lods
adc
int
or
xchg
loopne
js
add
mov
mov
mov
sub
jo
cmp
into
push
inc
add
std
and
ljmp
jge
inc
inc
ret
mov
xorl
pop
in
es
sub
jnp
ss
push
mov
pop
and
push
mov
idivb
sbb
sbb
shlb
push
into
popa
aad
sub
divl
adc
and
mov
mov
jne
mov
dec
and
js
data16
pop
push
je
cmpsb
mov
mov
lods
push
lahf
sub
add
adc
and
fisubrs
mov
mov
pop
ret
xchg
mov
or
imul
mov
push
inc
sub
call
fisttps
nop
movsb
and
dec
sub
mov
xor
int
fmul
in
lods
jno
adc
pusha
and
das
cmp
push
insb
jp
imul
pop
scas
aaa
mov
xchg
sbb
int
nop
cmc
sti
les
sti
ret
sbb
sub
sbb
xor
cld
cmc
stos
in
lea
pop
aad
xchg
fs
insb
xor
int
icebp
xor
xor
xor
and
mov
call
incl
xchg
or
cli
or
sarb
pusha
les
mov
cmp
mov
add
in
cmpb
jmp
mov
aam
pop
push
cmp
cmpl
lods
cmp
cmpl
jl
sub
in
je
lret
pop
dec
xor
dec
lds
bound
push
cmp
or
pop
aam
xor
or
insb
pop
int
push
mov
and
and
imul
fwait
adc
sbb
mov
in
cmpsb
daa
pop
cmp
sub
add
cmpl
or
ljmp
sub
test
sahf
aas
nop
and
lcall
adc
push
mov
push
sub
cs
movsl
xor
mov
mov
dec
dec
std
pusha
cmpsb
sub
jge
adcl
fimull
call
pop
lods
lahf
ret
loope
sbb
js
call
cmp
sbb
jno
pop
jmp
mov
mov
pop
xor
cli
pop
mov
es
stos
mov
adc
popf
and
test
out
fs
lock
sbb
xchg
sub
scas
mov
mov
inc
out
pusha
cmp
pop
insl
in
add
addr16
dec
cld
lock
xchg
jle
xor
dec
xor
xchg
xor
and
xchg
mov
mov
insl
jle
addr16
das
lock
push
ds
mov
fsubs
pusha
outsl
mov
sti
inc
icebp
adc
push
xchg
aam
stos
mov
enter
mov
lahf
xor
xor
gs
int
sbb
and
inc
stos
push
or
aam
fistpll
mov
gs
inc
push
andl
jbe
xor
sbb
scas
jno
jp
inc
es
ss
jae
mov
jae
call
sbb
mov
sbb
jb
std
push
inc
add
cmp
arpl
dec
orb
int
and
mov
les
jns
mov
mov
push
int3
xor
xchg
push
stc
aad
pop
ja
sbb
divl
jecxz
jle
testl
push
dec
cld
lods
jb
fistl
adc
out
and
cmp
adc
jnp
aam
sbb
cmp
pop
and
je
and
mov
jecxz
and
add
sub
inc
data16
jo
std
push
and
pusha
inc
add
pop
push
shll
pop
cli
dec
fnstenv
add
shrb
addl
mov
push
push
pop
loopne
lahf
pop
mov
test
mov
xor
pop
shrl
pop
xchg
push
lret
pop
jo
xor
inc
loop
cmp
sti
mul
push
inc
scas
xor
mov
mov
mov
mov
push
or
and
insl
dec
fwait
in
imul
add
cltd
popa
add
call
jne
cmp
icebp
call
mov
add
mov
shll
ret
pushf
or
daa
rcll
sub
lret
imul
lret
mov
cld
mov
or
lret
dec
xor
cmp
dec
xchg
cwtl
push
sub
pop
pop
adc
mov
ret
mov
adc
lcall
fdivs
jb
lods
mov
lods
in
mov
pushf
dec
sub
cmp
stc
rorb
mov
mov
and
mov
pop
push
test
lcall
jmp
mov
enter
push
jne
xchg
dec
or
cmpsb
push
lret
sbbb
imul
subl
sbb
sti
lods
cmp
loopne
fcmovb
jg
mov
rcll
pop
clc
stos
gs
in
ds
cltd
loopne
xchg
jmp
fiaddl
sbb
int
xchg
jg
push
pop
mov
cmc
aaa
add
xor
aaa
pop
jns
punpcklbw
jge
imul
fildl
mov
xor
inc
into
jno
outsb
xor
dec
push
dec
outsl
call
push
mov
test
sahf
dec
adc
ja
ret
mov
ds
mov
fs
repnz
cmp
icebp
int3
icebp
sbb
and
push
jno
aas
lea
hlt
mov
out
sub
sub
lds
sti
call
lods
xchg
enter
mov
test
cs
mov
pushf
jno
gs
adc
flds
sbb
daa
inc
cmp
fwait
jp
ds
xor
movsb
ljmp
into
xor
int3
sbb
imul
push
dec
fcomip
imul
push
jge
inc
dec
mov
mov
sub
jle
adc
rorb
push
popf
and
mov
jmp
stc
push
enter
repnz
outsb
andl
sub
inc
mov
mov
inc
pop
sbb
out
mov
aaa
push
mov
and
jl
xchg
cmp
cmp
ljmp
sbb
cwtl
arpl
and
std
mov
jmp
out
mov
roll
dec
mov
ret
push
push
push
push
pop
inc
lea
arpl
dec
lea
aaa
sbb
sub
daa
mov
xchg
add
es
daa
cli
mov
and
push
jns
jnp
xor
cld
and
and
pop
jl
call
cwtl
or
imul
push
fdivrs
imul
mov
mov
int
ror
push
ds
cmp
adc
stos
pop
cwtl
andl
fisubrs
test
loop
pusha
and
ljmp
scas
mov
pop
cmpsb
cmp
lret
lods
adc
mov
cmp
mov
jno
lock
cltd
lods
lods
push
sbb
sbb
lret
dec
xchg
add
push
push
arpl
push
pop
jno
dec
outsb
ljmp
loopne
je
sti
sbb
imul
mov
and
push
std
pop
cmp
ret
mov
cmp
rcll
cmp
push
pusha
scas
popa
and
xlat
loop
movsb
sbb
push
test
mov
jle
test
sahf
repnz
cmp
push
xor
or
movsl
jbe
add
shll
mov
mov
fistl
in
pop
jnp
sbb
ret
adc
sbb
repz
rcr
imul
mov
xor
and
loop
into
inc
lret
mov
pop
aad
int3
fstps
or
int
mov
jg
js
xor
mov
lahf
and
xchg
rcr
pop
dec
popa
pushf
mov
fidivrl
push
or
adc
xchg
sub
cwtl
mov
pushf
jno
pop
xchg
xchg
mov
dec
mov
push
cmp
loopne
ret
lods
hlt
loopne
jge
dec
shll
cmc
jbe
lods
dec
cmpsb
jl
jge
outsb
push
xchg
or
jns
mov
jo
sbb
call
push
fsubs
and
es
xor
push
lea
enter
outsl
inc
cmp
insl
jae
addr16
mov
sub
dec
pcmpgtd
xor
ficompl
sbb
out
or
lods
mov
add
cmpsb
mov
xchg
stos
ss
clc
dec
fsub
imul
lock
gs
sbb
jo
mov
outsb
push
ret
roll
cld
imul
jle
out
loope
pushf
repz
and
ss
popa
rorb
xor
les
cmp
mov
inc
ret
outsl
pusha
pop
sbbb
xor
test
or
or
push
and
fwait
je
into
std
adc
mov
xchg
mov
mov
je
cs
cld
hlt
push
lods
ljmp
inc
xchg
insb
rorb
xchg
adc
icebp
out
cmp
or
not
push
mov
roll
cmpsb
adc
pop
pop
cmp
stos
sahf
or
jns
pop
push
enter
test
test
add
cld
and
push
jbe
jb
push
sub
pop
inc
fnstcw
fsubs
int
pop
sahf
iret
mov
xchg
xor
mov
ss
jne
sub
leave
jbe
les
mov
aas
movsb
movsb
mov
icebp
push
enter
es
incl
pop
jo
dec
test
imul
outsl
arpl
cmc
fwait
sub
cwtl
sti
inc
jge
jp
jbe
gs
xchg
xor
fsubrs
jl
add
fucomi
clc
add
push
orb
push
insb
pop
xchg
repnz
mov
neg
outsl
in
xor
lock
mov
jmp
mov
mov
sub
mov
sbb
ss
cmp
inc
nop
aam
push
jns
jl
ljmp
cmp
aas
inc
jp
push
aam
jnp
jo
add
add
and
popf
outsb
inc
dec
xor
daa
pop
pushf
lret
cltd
pop
and
lds
and
cld
xchg
shrl
std
pusha
mov
lds
mov
pop
mov
dec
lock
jmp
add
or
xor
out
loopne
push
scas
push
not
xor
sbb
xor
test
loope
nop
inc
in
lods
cmp
repz
icebp
push
ljmp
sub
cmp
fs
or
inc
out
imul
pop
outsl
xchg
or
rorb
inc
lret
fcompl
mov
cltd
push
jae
punpckhbw
push
outsb
sarb
xchg
and
aad
push
inc
dec
jae
fdivl
push
cmp
sub
pop
sub
stos
insb
iret
cld
push
inc
loopne
mov
fwait
mov
hlt
dec
mov
shrb
jge
rcrb
xchg
shll
imull
dec
fiadds
mov
sbb
cmp
pop
jbe
mov
push
inc
sub
cmp
pop
popa
mov
das
mov
mov
ss
sbb
popf
sbb
mov
es
dec
push
push
sahf
push
jno
std
xlat
sub
in
and
push
loop
dec
and
push
sti
sti
xchg
ret
pop
jbe
xor
in
xor
scas
mov
mov
add
mov
jmp
test
iret
xchg
lcall
adc
fstpt
enter
int3
mov
push
js
aaa
nop
pop
push
push
xlat
aas
push
in
cltd
lea
push
jbe
push
shrl
fldl
das
pushf
mov
popf
insb
mov
rcrl
pop
loop
add
jae
inc
das
das
test
rcll
rol
jg
movsb
push
incl
adc
imul
in
push
mov
xchg
sbb
mov
add
jno
cmpsb
add
in
push
mov
out
outsb
aas
jae
xlat
les
lcall
dec
inc
or
jle
stos
push
jnp
jmp
std
adc
and
sbb
imul
ret
jl
rcrb
mov
mov
daa
jmp
inc
ret
mov
push
scas
std
nop
test
cmp
pusha
filds
js
loop
mov
lret
ss
push
jo
jmp
mov
push
test
jl
ja
shr
inc
sub
jnp
fistpll
sahf
jo
fidivl
shlb
cmpsb
push
push
xchg
mov
mov
pop
push
daa
sbb
cmpsl
sbb
dec
jmp
orb
mov
comiss
jmp
aas
xchg
ljmp
enter
jno
adc
inc
int3
push
test
mov
int
ss
jp
mov
jnp
icebp
cli
movsb
cltd
pop
out
out
call
ret
cmp
rcrl
or
mov
inc
das
call
pop
sbb
or
cld
pop
nop
mov
sub
or
ljmp
stc
jmp
pop
data16
mov
mov
cld
test
pop
cltd
outsl
out
ljmp
cmpl
push
aad
imul
outsl
jns
insl
scas
or
je
sbb
jp
pushf
cltd
jp
inc
shlb
mov
mov
imul
mov
data16
scas
pop
lret
push
add
mov
jbe
inc
or
es
pop
push
dec
push
mov
mov
cli
cmpsb
ljmp
data16
inc
or
es
pop
push
dec
push
mov
mov
cli
cmpsb
ljmp
bound
js
pop
or
imul
dec
push
mov
mov
cli
mov
lret
subb
sbb
push
fiaddl
push
pop
xor
mov
and
xor
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
popa
jno
inc
out
imul
xchg
outsl
enter
clc
lock
shll
mov
ss
ss
jno
inc
out
mulb
xchg
xchg
add
icebp
push
shll
popa
arpl
ss
jno
inc
out
mulb
xchg
xchg
add
shlb
add
sbb
inc
incl
mov
xchg
call
movsl
jmp
stos
dec
cmp
hlt
arpl
fsts
sbb
xchg
xor
ljmp
in
cmp
push
je
ds
arpl
mov
sahf
sbb
xor
jns
inc
xor
xor
jge
jne
inc
movsl
push
shll
icebp
stc
int3
sub
stos
xchg
cli
popa
dec
jno
sub
push
mov
test
je
aas
mov
icebp
testb
movsb
ss
push
xchg
sub
or
push
mov
mov
lods
jbe
push
dec
push
rorl
pushf
lahf
mov
sbbb
jecxz
ret
sbb
mov
add
adc
mov
pop
cmp
les
adc
lods
jno
inc
out
mulb
xchg
xchg
add
icebp
push
shll
mov
es
jo
movb
and
inc
loop
ret
adc
loope
xchg
dec
shll
push
loop
xlat
push
add
adc
and
cmp
sarl
inc
cwtl
test
mov
and
arpl
sub
in
add
jno
cmpl
add
icebp
push
shll
mov
es
ss
jno
inc
out
mulb
xchg
xchg
add
icebp
push
shll
mov
es
ss
push
fmull
xchg
cmp
aas
inc
iret
cmp
mov
add
mov
add
imul
inc
pop
lock
test
cmp
sub
inc
pop
push
add
or
mov
aam
clc
movsb
lcall
adcb
fdivl
shll
cltd
lret
mov
mov
fadds
pop
dec
dec
mov
push
inc
roll
or
insb
fldlg2
push
mov
int
psadbw
push
dec
mov
ss
dec
dec
add
jmp
and
mov
arpl
cs
or
ss
js
push
out
aas
ret
ljmp
adc
rorb
mov
insb
dec
insl
jae
in
aam
jno
xchg
mov
dec
adc
mov
mov
inc
xor
pop
add
and
repz
movsb
fstps
pop
mov
add
sub
pop
sbb
push
inc
je
or
inc
adc
fsub
test
adc
inc
int
push
mov
cmp
dec
push
rorl
cmp
iret
mov
cmp
mov
xchg
data16
pop
mov
cmp
inc
xorl
test
cld
mov
imull
mov
lock
pop
dec
inc
repnz
xchg
sub
sub
lret
imul
pop
xlat
mov
xor
popf
in
lock
fidivrs
in
ss
ret
insl
push
mov
pop
add
cltd
xchg
out
ss
subl
mov
fistl
fldz
pushf
mul
mov
int3
push
push
cmpl
cwtl
push
sbb
adc
push
into
mov
ret
jbe
repz
and
stc
dec
les
push
lods
sub
mov
mov
cmp
call
sbb
cmp
adc
mov
jnp
jno
adc
iret
adc
shll
outsl
cmp
mov
jmp
push
fsubrp
mov
scas
jl
dec
rorb
ljmp
sub
jl
leave
sahf
cmp
test
lods
cmc
call
adc
sbb
scas
inc
jae
jmp
inc
inc
adc
cmc
in
out
rolb
cld
addr16
rorb
adc
lods
pop
frstor
mov
clc
mov
adc
icebp
mov
insb
push
push
loop
or
jae
mov
out
test
dec
adc
jbe
std
mov
jmp
sbb
icebp
sub
lahf
test
insl
rorb
push
lods
fsubs
pop
sti
push
inc
sti
jnp
push
int
into
lahf
imul
push
sub
mov
std
xor
xchg
in
es
mov
scas
cmp
dec
aam
insl
fidivrl
out
sub
mov
popa
push
shrb
scas
repnz
xchg
aaa
push
pop
mov
cmp
je
insl
or
mov
inc
mov
mov
je
xor
push
packuswb
mov
insb
rcrb
fwait
clc
add
outsl
fsubrs
arpl
jb
mov
sbb
xchg
pop
fnstcw
imul
imul
jae
sbb
push
rcll
jnp
mov
cmpsb
dec
xor
xchg
push
mov
std
xchg
int3
xor
into
push
mov
push
insb
lods
mov
xchg
cmp
or
dec
cmp
or
sti
mov
mov
push
movsl
adc
lds
out
lcall
test
jns
push
decb
shll
push
int
and
push
test
dec
clc
lret
sub
adc
in
scas
pop
xchg
popa
xor
aas
stos
out
cmp
iret
in
movsb
cmp
in
sub
add
clc
add
nop
inc
outsl
cli
mov
xchg
jne
sbb
pop
xchg
lret
inc
dec
mov
mov
cmp
ret
or
leave
outsb
cli
clc
jnp
adc
inc
mov
pusha
and
lods
es
jno
aaa
cmp
jl
xlat
mov
mov
mov
aam
adc
enter
hlt
push
pop
ret
jg
inc
loop
sbb
inc
pushf
test
aaa
cmp
sub
fdivl
imul
jns
aas
jmp
fldcw
or
insb
in
arpl
adc
pop
xchg
repz
mov
sahf
mov
popf
gs
push
cld
push
in
xor
cld
push
push
popf
adc
jge
push
in
loop
adc
jle
out
adc
movsb
dec
movsl
fxam
insl
ficomps
es
pop
mov
frstors
sub
sahf
jmp
fnstsw
filds
in
xor
cld
mov
insl
rcrl
push
loop
cmp
sarl
xor
add
jae
rclb
je
jns
or
dec
lret
mov
xlat
xor
sub
lea
push
jmp
pop
test
ret
data16
femms
mul
arpl
add
mov
out
test
sahf
mov
cmc
pop
loop
roll
dec
cld
inc
inc
loop
push
xchg
into
mov
mov
js
cmp
pop
ss
adc
rcrl
or
mov
fists
cld
adc
mov
stos
add
mov
inc
les
bndstx
inc
popf
push
shll
loopne
pop
addr16
adc
fdivs
and
cs
lods
lret
sub
xchg
cmp
adc
adc
and
inc
fisubl
in
test
movsl
hlt
hlt
mov
jg
jecxz
popa
mov
xchg
test
inc
and
add
movl
jmp
or
push
mov
sub
in
sub
stos
bound
pop
cmp
pop
loop
loop
in
adc
cs
jg
in
xor
ficoms
ja
jge
decb
movsb
lock
pushf
pop
fcompp
dec
outsb
ficompl
movsl
call
mov
pop
shlb
xchg
dec
faddl
add
and
lret
or
shlb
xor
inc
inc
sti
addb
xchg
push
cltd
or
lock
xchg
loope
inc
xor
and
mov
mov
or
bnd
lret
mov
sbb
jmp
cmpsl
sti
dec
xchg
lods
lretw
clc
pop
int
in
leave
adc
stos
mov
cmp
popf
push
in
movl
and
in
mov
and
dec
xchg
test
cmpb
xchg
mov
aas
stos
rclb
hlt
mov
insl
mov
ret
out
push
jns
xor
xlat
mov
xchg
ficoml
jp
repz
clc
adc
sbb
cmp
ret
xchg
in
loop
and
xchg
or
rcr
insb
xor
xchg
sub
hlt
in
or
inc
mov
cli
pushf
dec
sbbb
inc
pop
dec
dec
lret
mov
pushf
cmp
dec
xchg
testl
lret
test
sub
rolb
xchg
and
push
ja
lock
data16
orb
loopne
std
xchg
sbb
push
and
fldl
ffree
mov
stos
or
movaps
insb
fsts
fsubl
aas
fbstp
lds
jge
add
xor
push
aad
dec
xchg
pusha
sbb
sub
jmp
mov
fcompl
js
lds
jae
lret
ret
aaa
xchg
pop
aaa
or
aam
test
sub
jns
scas
jmp
jge
repz
mov
mov
mov
jl
bound
jnp
mov
xor
mov
pop
xor
sbb
loopne
js
fs
adc
loop
daa
mov
jg
jnp
sub
mov
nop
jecxz
sbb
add
inc
ss
mov
out
pop
lods
add
in
mov
in
pop
and
mov
pop
scas
mov
addr16
adc
stos
into
mov
dec
jge
push
mov
push
push
divb
adc
flds
mov
push
sbb
roll
mov
xchg
stos
mov
movsl
jmp
dec
icebp
jne
push
xorl
sbb
jl
lret
sbb
jg
inc
sarl
jne
inc
xchg
imul
inc
dec
into
inc
fisttpll
aas
fdivrs
jne
mov
insb
sbb
ud1
jnp
or
rol
hlt
add
int
xchg
mov
lret
mov
jo
push
lret
repnz
leave
jb
and
loopne
and
imull
cmp
xor
out
xor
or
rolb
movups
push
jae
dec
push
push
into
push
pop
and
adc
rolb
cmpsb
addr16
shlb
dec
add
mov
sbb
sub
adc
js
cld
es
imul
popa
xlat
adc
pop
sbb
insb
pop
cmc
ficomps
mov
mov
jge
mov
clc
push
repnz
jl
mov
lret
adc
aad
fidivl
jmp
jne
hlt
pop
mov
sub
mov
lods
push
and
push
xchg
in
pushw
push
jg
fiadds
es
pop
xlat
push
push
xorl
cmp
clc
insl
enter
mov
adc
mov
inc
cmp
lods
mov
out
aad
sub
out
lret
rcr
repnz
xor
cli
testl
test
dec
sbb
call
jge
adc
push
adc
inc
call
xor
pushf
stos
aaa
jne
mov
cmp
and
test
pusha
in
sub
pop
dec
adc
lock
outsl
insl
loopne
push
jne
sbb
cmp
adc
push
sub
frstor
or
push
mov
test
push
pop
inc
std
dec
mov
aaa
flds
mull
adc
loope
sub
in
pop
das
aaa
testl
xor
repnz
xorl
dec
push
mov
ljmp
lret
add
and
sub
rorl
inc
pop
in
lds
mov
stos
sub
testl
dec
xchg
add
adc
ficoms
roll
js
sahf
mov
leave
clc
cltd
mov
push
aam
nop
and
xlat
lods
jecxz
inc
cli
cmpsb
lea
mov
roll
dec
push
xlat
add
cmp
xor
out
mov
movsl
cmp
adc
inc
xchg
inc
jp
outsb
pushf
pop
testb
ss
loopw
shll
adc
mov
mov
mov
fisttps
andl
push
jecxz
adc
popf
add
shll
aam
int
or
sbb
inc
fldt
inc
add
cwtl
ss
pop
test
out
sti
adc
insl
add
divb
addr16
mov
and
repz
add
cmp
lahf
or
mov
orb
mov
cmp
cmp
movb
mov
fbld
mov
test
mov
xlat
je
or
push
sbb
adc
stc
and
imul
jnp
subl
inc
add
arpl
and
cmp
add
pcmpeqd
std
fstps
jo
or
add
dec
bswap
and
jl
shrb
fucom
jl
adc
sbb
mov
repnz
rolb
fcompl
loope
shlb
js
dec
mov
test
xchg
fsubs
jle
pop
xchg
lret
jle
inc
out
pop
or
lock
lahf
mov
sbb
and
mov
mov
push
in
dec
mov
ss
add
out
xor
les
push
adc
arpl
das
fstl
int
jne
fsubl
cwtl
pop
je
pop
pop
pop
jmp
mov
loop
add
nop
sub
enter
mov
and
sbb
fisubl
imul
out
xchg
xlat
sub
hlt
sbb
cmpl
das
cltd
cmpsl
loop
mov
movsl
icebp
mov
adc
mov
add
inc
icebp
or
sti
jb
mov
xor
imulb
and
rcl
loope
addb
das
in
test
inc
movsl
loope
mov
clc
enter
push
add
enter
shll
dec
lret
scas
cmpsb
lds
rcll
push
jb
push
shlb
pop
js
ljmp
vshufps
mov
ret
scas
xchg
sub
jae
push
or
aas
adc
dec
mov
sti
mul
movsl
sbb
shll
push
lret
xchg
lods
mov
mov
mov
xor
scas
xor
lcall
pop
loop
sub
add
test
mov
jl
ljmp
jbe
mov
inc
mov
mov
in
dec
out
in
dec
arpl
pop
mov
leave
pop
dec
push
ficoms
adc
fsubs
add
iret
mov
dec
jp
lods
stos
or
cmpsl
sarb
cs
idivl
xor
pop
icebp
jmp
cmp
pop
xchg
bound
adc
sub
int
xor
push
test
jecxz
push
and
xor
inc
mov
aad
stos
add
iret
or
jmp
dec
or
pop
pop
test
mov
mov
aaa
fcmovnu
test
stos
loopne
mov
lahf
mov
or
dec
cmp
push
sub
shlb
test
mov
cli
and
icebp
aaa
pop
in
xchg
lock
call
sahf
cmp
sbb
inc
dec
into
cld
popf
sub
dec
cmp
mov
nop
sbb
xchg
cmp
and
insl
std
dec
mov
xor
push
jl
bound
out
push
lret
imul
and
and
push
ja
stc
pop
mov
pop
or
sub
lock
ja
add
enter
push
pop
dec
push
mov
mov
test
std
rclb
scas
stos
mov
pop
sub
scas
pop
or
or
push
arpl
mov
addr16
lea
mov
iret
cmp
and
jnp
loop
mov
fucomp
adc
cmp
inc
dec
push
jge
push
mov
add
rclb
dec
hlt
mov
jmp
js
xor
or
call
cmp
dec
jmp
fmull
mov
pop
pop
fnstenv
movsl
and
jno
popf
ficoms
enter
mov
js
xor
pop
cmc
inc
dec
sub
push
xor
stc
mov
push
and
pushf
imul
inc
stos
lods
in
lods
mov
xor
dec
int3
xchg
scas
mov
cwtl
mov
cltd
xchg
rdpmc
ljmp
dec
mov
dec
xchg
dec
sub
shll
xor
sbb
cmp
fisubl
in
dec
scas
xlat
repnz
fmull
rcr
push
inc
mov
cmp
mov
jmp
jo
dec
mov
outsb
stos
inc
adc
lock
xor
inc
std
push
mov
add
loopne
and
jae
das
add
es
cmp
push
pushf
push
and
sti
inc
dec
dec
test
les
jp,pt
rolb
sbb
sub
xchg
push
sbb
xchg
jmp
les
aas
xchg
cs
mov
es
daa
jo
xchg
loopne
push
push
or
xchg
lcall
pop
pop
mov
loopne
mov
lods
pop
dec
mov
sahf
icebp
jbe
xor
inc
mov
stos
mov
xor
xor
out
push
mov
push
xchg
pushw
out
fists
mov
cmp
cmp
pop
jne
jmp
xor
jno
stc
xchg
not
add
adc
cld
or
stos
cli
add
inc
divb
aam
test
mov
nop
sti
or
pushf
xchg
dec
add
xchg
daa
or
dec
decb
movsl
addr16
arpl
pop
popf
imul
fisttpll
in
je
leave
jl
mov
cmp
cwtl
jae
mov
rorl
mov
sbb
xchg
stos
jmp
int3
jo
mov
bnd
push
inc
or
jno
jmp
cli
mov
inc
mov
into
inc
mov
push
inc
fstps
aad
enter
jb
mov
movsl
mov
cmc
adc
filds
lret
inc
xchg
sub
lock
out
div
mov
mov
imul
xchg
pop
les
aas
mov
push
inc
in
add
pop
aas
or
jbe
mov
dec
mov
mov
jle,pn
dec
xchg
add
dec
push
cmc
inc
mov
fs
popf
leave
aas
jecxz
inc
adc
inc
movsb
push
fidivs
shlb
test
lds
mov
js
cmpsb
push
sbb
inc
negb
mov
daa
clc
xor
lret
rcrl
dec
xor
push
fisubrs
test
aaa
xor
and
push
into
fsub
xchg
cmc
jae
or
push
lret
movsb
sub
popa
scas
dec
jae
stos
enter
cmpl
lahf
xchg
outsl
test
jbe
mov
xchg
sahf
cmp
dec
mov
push
stos
arpl
pop
repz
pop
cmp
sbb
mov
in
and
cs
mov
iret
dec
inc
lock
mov
dec
shlb
mov
or
sbb
mov
dec
sub
mov
mov
pushl
cmp
cmpsb
or
dec
cld
stc
dec
jnp
cld
es
push
or
loop
jnp
cwtl
lock
cmp
xchg
cli
push
cwtl
jbe
jp
lret
pop
push
jo
dec
mov
jne
in
add
gs
mov
dec
fimuls
fwait
push
xchg
mov
gs
inc
lahf
stos
stos
incb
jb
fbstp
dec
cmpsl
mov
or
inc
xchg
mov
xchg
ret
dec
and
add
pop
jecxz
pop
xchg
push
mov
repnz
ds
in
pop
mov
bound
mov
shrb
push
mov
ficoms
sub
xchg
daa
test
pop
out
das
adc
mov
leave
bound
pop
xchg
xchg
insb
xchg
call
pop
frstor
mov
test
icebp
or
sahf
fistl
addr16
pop
fdivrp
xor
and
add
andl
lahf
mov
addr16
xchg
push
inc
push
ljmp
subl
mov
in
gs
sbb
jecxz
sub
xchg
jmp
or
fistpll
dec
fwait
iret
cli
jle
inc
inc
stos
mov
aam
pop
and
js
aam
pushf
sti
pushf
or
or
mov
test
in
les
cwtl
push
sbb
ficomps
push
dec
gs
mov
xchg
in
add
mov
inc
dec
in
adc
adc
lods
jecxz
fndisi(8087
repz
xchg
adc
leave
sub
and
mov
mov
dec
mov
push
xchg
adc
stos
lock
push
push
add
aas
sub
jl
addr16
dec
lods
lock
outsl
xchg
inc
clc
sub
push
xor
lcall
sbb
sbbl
xor
xlat
or
das
push
gs
jle
repz
push
add
jae
test
inc
push
dec
scas
xor
mov
push
dec
mov
iret
inc
pop
add
into
or
icebp
cmp
sub
dec
notb
dec
xor
push
mov
ret
outsb
mov
mov
and
test
lea
enter
mov
repnz
jne
and
in
fimull
std
mov
jmp
test
mov
and
xchg
jne
dec
xchg
ljmp
stos
mov
sbb
std
sub
sbb
mov
sbb
xchg
cmp
mov
je
sub
popf
pop
adc
dec
call
cwtl
sti
lods
dec
std
data16
or
sub
rcll
dec
adc
xchg
adc
pop
lds
mov
cmpsb
out
and
fwait
and
cmp
jns
jp
mov
fwait
add
jge
insb
sbb
jns
in
div
out
sbb
bound
clc
sub
sub
repz
jmp
dec
add
jns
cmp
mov
arpl
pusha
shrb
xorl
sbb
mov
fnstenv
or
sbb
cmc
negl
jbe
sub
fwait
mov
cld
negb
and
lea
es
out
icebp
mov
inc
push
and
mov
ja
inc
mov
outsb
mulb
mov
lds
cwtl
jle
sbb
aad
mov
mov
test
cmp
daa
mov
inc
scas
dec
adc
jo
push
aas
cmp
loop
jnp
test
pop
inc
push
lods
sub
jle
push
test
jo
dec
sub
dec
sub
loopne
dec
jbe
sub
call
icebp
mov
mov
add
bound
pop
xchg
mov
cmp
sub
xchg
jns
out
jno
mov
pop
lea
daa
in
jae
fcmovbe
cmp
fcomps
repnz
cmpsb
test
lret
mov
and
adc
pop
ja
push
lahf
adc
jns
mov
push
arpl
inc
mov
xor
cli
or
cmp
insl
gs
xor
push
dec
ret
pop
mov
std
leave
sahf
dec
sbb
pop
adc
sub
pop
jle
mov
das
or
xchg
mov
cmp
jge
mov
fdivl
jbe
sbb
cld
addr16
fdivl
dec
daa
xchg
jae
std
xor
rcrb
jl
push
mov
js
sub
imul
jp
in
lods
pop
xchg
push
pop
sbb
leave
cmp
js
xlat
das
leave
test
push
imul
imul
xlat
add
cmp
in
mov
ja
jnp
sahf
sarl
push
test
jae
mov
jp
cmp
pop
and
mov
imulb
xchg
lds
loopne
shlb
dec
push
cmp
jecxz
xor
loopne
cli
faddl
lcall
inc
inc
mov
enter
cmp
xor
mov
jmp
icebp
ja
fdivr
lods
cmc
fldenv
inc
pop
push
fstl
test
sarl
es
mov
mov
sub
push
sub
cmp
mov
and
rolb
nop
lret
test
xor
cmp
pop
bound
inc
jnp
lea
in
je
add
imul
push
std
inc
sub
jle
jg
pop
mov
xlat
inc
out
mulb
xchg
xchg
add
icebp
push
shll
mov
es
ss
jno
inc
out
mulb
xchg
xchg
add
icebp
push
shll
mov
es
ss
icebp
shl
mulb
cmpsb
xchg
mov
inc
icebp
push
shll
mov
es
ss
jno
inc
out
mulb
xchg
xchg
add
icebp
cld
imul
rorl
loope
int3
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
das
adc
add
xor
and
sbb
xor
test
mov
movsb
mov
in
xchg
hlt
test
bound
and
push
and
sbb
xchg
in
mov
pop
movsb
mov
movsb
les
adc
add
xor
and
push
cmp
or
xchg
out
cmpsl
mov
sub
out
in
xchg
add
pop
sub
cld
out
push
ja
icebp
sbb
sub
rcll
mov
push
push
fcmovb
in
int3
outsb
cmp
sbb
mov
repnz
clc
adc
or
xchg
jnp
and
pop
xchg
or
shl
aas
jno
pop
movsl
push
jne
mov
into
jae
divl
inc
std
push
add
jnp
xor
cmp
insb
in
pusha
lcall
fsub
int
push
adc
enter
mov
sbb
jge
xchg
xchg
mov
and
mov
mov
jl
and
test
xlat
sub
jne
mov
jne
test
mov
gs
xor
and
push
aas
inc
adc
xchg
std
test
mov
movsb
lods
aam
les
adc
inc
xor
and
xor
pop
xor
sub
stos
rcr
xchg
shll
jno
popa
xor
and
cmp
jns
inc
add
std
nop
out
rcl
test
xor
inc
dec
jp
inc
adc
xchg
in
aad
lds
hlt
test
jne
gs
xor
and
push
and
fs
xchg
in
aad
lds
hlt
test
jne
cmpsb
insb
or
sub
aaa
rorb
pop
sbb
lret
sub
nop
and
mov
push
jne
inc
sbb
jmp
xor
outsb
dec
jmp
loope
repz
bound
mov
pushf
mov
cmp
push
sub
push
cli
xchg
pop
push
xchg
jp
pop
and
sub
xor
cmp
cwtl
xlat
add
inc
jle
or
stos
push
push
mov
fnstenv
stc
les
scas
and
daa
sbb
ret
lock
leave
gs
adc
sbb
fdivp
jne
mulb
rcl
int
into
mov
fcomip
das
sub
lcall
sub
and
cld
test
hlt
mov
imul
lret
sub
sbb
clc
pop
adcl
push
jae
mov
movsb
je
adc
ret
dec
mov
or
jo
daa
sbb
out
jp
rcl
dec
sbb
or
pop
rcrb
daa
aaa
lds
jecxz
enter
pop
pop
mov
out
in
push
js
sub
cs
sbb
hlt
push
jl
scas
test
dec
hlt
cmp
xchg
pop
or
aad
testb
cmp
jle
sbb
into
iret
outsb
jno
mov
jg
sub
xchg
jae
jg
movsb
cld
sub
jo
fisubrl
adc
dec
xchg
xchg
flds
pop
jmp
testl
nop
pop
std
gs
or
adc
mov
stc
fisubrs
cmc
dec
out
dec
jne
insl
push
sub
rol
sub
out
sbb
rcr
lret
outsl
loopne
or
mov
pop
inc
cmovs
jmp
sbb
notb
jecxz
ss
cmp
lods
fwait
jb
or
js
in
or
lahf
push
jb
cmp
bswap
adc
push
xchg
mov
scas
sbb
adc
fidivrl
pop
fs
mov
cmp
push
orb
push
mov
jns
repnz
cwtl
stos
mov
scas
inc
pop
xchg
xor
repnz
repnz
sub
ficoml
add
add
mov
mov
and
in
mov
mov
fnstenv
sub
rclb
pop
cltd
lea
xlat
inc
addr16
daa
je
test
scas
std
push
push
push
cld
dec
dec
inc
sarb
jecxz
fsubrp
cmp
push
jne
in
push
and
mov
rolb
and
mov
fsubs
push
data16
idivb
mov
dec
mov
jno
shll
loope
loope
fiaddl
insl
jp
clc
orb
push
jnp
mov
aad
dec
fcoms
out
lahf
lcall
imul
mov
mov
ljmp
js
lods
pop
add
sub
mov
push
sbb
sbb
lock
movsl
and
out
mov
aad
mov
out
arpl
xchg
xor
aaa
push
xchg
or
mov
popa
lock
xchg
sahf
test
ja
arpl
push
mov
push
roll
outsl
pusha
mov
cmp
cmc
out
cmp
out
pop
sub
mov
jb
xchg
push
jne
outsb
add
fsubr
stos
lods
icebp
loopne
cli
arpl
leave
pop
clc
push
aaa
add
ljmp
push
fbstp
gs
push
mov
jnp
shr
cmp
ss
and
push
or
hlt
pop
and
test
and
imul
hlt
cmp
aaa
jo
lcall
ret
xchg
int3
imul
adc
lods
iret
movl
inc
stos
push
mov
jp
pop
lds
jecxz
cmp
sbb
scas
aad
rolb
mov
in
push
jo
fdivr
xchg
cmp
into
pop
icebp
sub
sbb
pop
push
xor
jecxz
andb
adc
pop
mov
mov
xor
and
iret
add
and
mov
pop
popf
sbb
xchg
pop
pop
cmp
ret
cmp
sbb
mov
repz
int
in
sub
arpl
adc
stc
sub
jecxz
ffree
shlb
scas
fnstenv
sub
jae
pop
dec
push
sahf
neg
pop
add
sub
pop
mov
inc
mov
jle
imul
in
cs
sbb
mov
xorb
clc
cli
insl
cwtl
jb
je
dec
arpl
jne
mov
ficoml
cs
inc
mov
lods
insb
imul
in
and
adc
ljmp
outsb
rclb
xor
lret
test
or
dec
push
fsts
addb
or
or
divl
and
mov
test
sbb
shlb
hlt
stc
notb
push
in
jb
mov
pop
and
jae
ljmp
fisttpll
sbb
xor
pop
dec
cmp
cmp
sub
jmp
lock
sbb
cmp
stos
push
jbe
test
xchg
cmp
jae
out
dec
fidivs
andl
cmpsb
cmpsb
jb
lods
jp
xchg
movsb
decl
mov
add
enter
jmp
das
add
fcomps
adc
ja
rol
push
cmp
xchg
addr16
mov
addl
insb
lods
out
xchg
or
cltd
push
ss
das
cmp
pop
test
jne
repnz
out
jg
mov
or
mov
mov
popf
lock
sub
xchg
dec
ret
insl
jno
mov
mov
cmp
dec
mov
inc
popf
out
cmc
mov
loopne
xchg
cmp
test
out
scas
pop
test
or
addr16
xchg
clc
shrl
cmpsb
lcall
add
xor
pop
repz
cmp
bound
pop
jae
or
adc
xchg
dec
sarl
sbb
loop
mov
push
aad
cmc
jae
xor
bound
lret
jne
fwait
adc
in
lods
imul
mov
and
in
stc
gs
pop
dec
mov
inc
push
fnstenv
arpl
popf
xchg
push
cmpsb
xor
orl
aam
lods
unpcklps
out
xor
add
push
adc
repz
mov
aas
mov
pushf
pop
jmp
cmpsb
pop
dec
sarl
ret
xor
push
mov
mov
jno
and
or
push
inc
mov
ficoml
jg
daa
or
lret
sub
dec
adc
dec
pop
outsl
add
inc
jb
fmull
and
out
in
mov
sbb
dec
aad
cld
out
outsb
into
push
mov
std
popf
xchg
scas
lahf
jne
mov
int3
jecxz
test
cs
ljmp
outsl
shll
repz
mov
adc
inc
xchg
dec
push
mov
sbb
adc
xor
jg,pn
in
and
flds
shlb
fisttps
mov
add
or
xchg
test
sbb
xchg
sub
lea
jne
add
subl
add
push
stos
jle
daa
pop
mov
lahf
sub
push
subb
mov
in
adc
scas
cmp
push
inc
xchg
pop
and
pop
cmp
push
inc
jecxz
inc
scas
hlt
sbb
push
cli
jbe
pop
mov
and
test
lahf
lret
aam
fisttpl
xor
rclb
fs
arpl
pop
rcl
xor
or
adc
adc
stos
mul
jge
inc
and
push
movsb
cmpsl
xor
and
cmc
xorb
xchg
or
psllw
inc
ret
cwtl
mov
enter
outsl
je
bound
insl
mov
and
outsl
call
push
ss
push
mov
lret
dec
bound
mov
fidivrs
cmp
cmpsb
xchg
repnz
cmp
adc
in
dec
repz
dec
dec
push
jecxz
scas
fistpll
mulb
bound
nop
int
lret
jbe
lcall
rcl
adc
dec
ss
inc
push
jecxz
int
fwait
rcrb
mov
int3
mov
push
loopne
jae
mov
pusha
out
dec
cmp
mov
aad
inc
adcl
leave
pop
mov
mov
xor
clc
call
int
lods
xchg
ljmp
mov
and
xor
jb
jmp
push
andnps
jecxz
mov
lea
rcll
add
lret
mov
xor
fistl
mov
popf
ret
sub
les
clc
jns
xlat
push
repnz
movntq
nop
and
adc
xchg
divl
xor
push
xchg
jns
xor
cmpsb
dec
push
xor
nop
push
pushf
fldenv
mov
add
and
sbb
movntq
and
ja
shrl
pop
rorl
lret
add
icebp
out
iret
shrl
les
outsb
xor
mov
sub
inc
pop
inc
adc
lea
shl
mov
mov
xorl
inc
jnp
movsl
push
sub
pop
mov
dec
in
loop
insl
and
mov
inc
pushf
fwait
jbe
jne
mov
movsl
pop
addr16
cmp
movsb
imul
enter
add
lds
mov
aas
roll
clc
out
pop
push
mov
jl
mov
adc
mov
push
and
add
mov
inc
pop
clc
inc
cmpsl
sti
sub
fwait
sub
icebp
xchg
pop
pop
repz
int
ljmp
fs
fwait
addr16
fidivl
mov
push
or
or
xor
jbe
cmp
imul
pop
mov
pop
or
mov
outsl
mov
insl
sbb
mov
out
inc
add
adc
in
adc
fldenv
mov
cmp
mov
movsl
push
and
mov
and
stos
repz
mov
loop
push
mov
mov
roll
out
dec
cmp
lods
jl
ljmp
jmp
cli
push
iret
sbb
je
sbb
or
sub
mov
and
xor
add
xchg
int3
and
mov
cmpsl
cmp
test
pop
nop
popa
jmp
iret
lods
stos
pop
pop
je
xchg
sar
jle
fildl
insl
push
xchg
sub
leave
or
xchg
aam
scas
add
aad
jns
movsl
xor
sub
lcall
out
xchg
cmp
in
xor
xlat
xchg
enter
or
jno
sahf
xchg
mov
test
cwtl
mul
xchg
jecxz
fistps
sub
xor
cmc
aas
movsb
mov
stc
aam
add
xor
pop
leave
fs
mov
inc
jmp
insl
cmp
cmpsb
mov
enter
pop
pop
cmpsl
cmp
push
cltd
xor
lods
and
mov
cmp
neg
jns
jge
xchg
icebp
xchg
xchg
pop
jp
repz
hlt
cltd
cmp
and
cmp
xor
inc
and
pop
pop
push
out
dec
popf
push
dec
and
mov
sbb
cmp
xor
xor
fnsave
dec
sbb
mov
xchg
mov
aad
inc
bound
pop
out
ficomps
out
loop
lret
adcl
fsts
aaa
xchg
loopne
and
testl
mov
xchg
scas
pop
cs
out
add
addr16
adc
pop
jge
imul
fstpt
dec
ficoms
add
pop
cmc
insl
icebp
sub
cmc
idivb
addb
or
inc
push
fs
add
ja
imul
testb
push
push
sbb
cs
xchg
fwait
jmp
mov
mov
sub
call
fsubrl
fistpll
mov
cmp
xor
jno
das
inc
adc
xor
mov
push
jns
push
inc
dec
jb
push
divb
jae
sub
add
ss
scas
push
les
lcall
loop
push
dec
movsl
addb
mov
iret
and
sbb
xor
sahf
and
mov
and
xchg
stos
adc
shll
and
negb
push
mov
xchg
pop
mov
xchg
movsb
cld
add
fisttps
dec
test
add
jmp
cmp
jl
sbb
cmp
stos
cld
jl
push
mov
addr16
nop
scas
xor
pop
and
fcoms
xor
ret
adc
add
cmpsb
outsl
scas
pop
jecxz
lods
test
mov
popf
xlat
cmp
leave
adc
jo
push
sub
xor
pusha
pushf
aad
or
mov
movsb
pop
push
sub
loop
call
in
xchg
rclb
jmp
gs
lret
xor
cmp
sub
sbb
nop
rolb
outsb
push
mov
ret
add
mov
sbb
and
shr
jg
push
daa
xchg
cmpsl
cmp
jae
imul
adcb
scas
mov
and
cmpsl
fldl
mov
enter
sarb
and
jo
je
lret
mov
sbb
pop
xchg
dec
xlat
setp
lock
cmp
mov
leave
int3
imul
mov
xchg
mov
mov
adc
jmp
std
arpl
pop
sub
cmc
push
and
mov
divl
pop
adc
xchg
movl
adc
sti
dec
mov
ds
jne
push
fiaddl
lods
lods
inc
out
in
sub
dec
or
bound
jg
mov
cld
mov
popa
incb
in
out
mov
outsb
int3
fcoms
push
iret
xchg
daa
inc
inc
scas
leave
dec
mov
mov
inc
xor
add
out
enter
add
dec
jb
gs
addr16
add
or
mov
je
roll
or
cli
mov
sbb
adc
jbe
pusha
xchg
or
lret
push
mov
aad
push
pop
cld
and
add
xor
movsb
xlat
adc
xor
xor
test
orl
fbld
stc
js
fmuls
insb
jle
out
roll
add
fs
pop
adc
addr16
inc
dec
and
dec
sahf
pop
in
push
dec
imull
jl
ret
sub
mov
iret
stos
and
xchg
push
pop
sub
xor
pop
in
dec
push
pop
movsb
lods
leave
sub
mov
push
cmp
push
das
jne
out
into
aas
pop
inc
pop
mov
sub
jle
jp
mov
sub
xchg
gs
jb
mov
ret
data16
and
xchg
mov
aad
cmp
adc
mov
dec
or
add
pop
enter
mov
adc
jno
mov
adc
ja
dec
mov
fisttpll
xchg
add
mov
mov
stos
jmp
mov
jns
xchg
sbb
or
pop
and
jnp
and
pop
sti
cmp
ljmp
lods
xchg
xchg
push
pop
ljmp
mov
int3
xchg
pop
inc
sbb
imul
xchg
cli
jmp
add
push
or
mov
and
popf
movsl
xchg
mov
jns
fwait
inc
sub
ds
jecxz
rcrl
xor
sbb
sub
dec
inc
cmp
xchg
in
pop
shl
xchg
icebp
mov
lds
leave
shlb
std
xchg
nop
push
and
xor
xor
std
sahf
popf
lods
push
cmp
jmp
add
lods
leave
xor
pop
lods
insb
aam
dec
or
mov
arpl
adc
outsl
xchg
data16
mov
mov
les
cmp
inc
into
imul
jae
pop
jge
popf
lret
mov
jns
xchg
lret
pop
sub
jns
ret
inc
fwait
idivl
sbb
cltd
outsb
icebp
jl
clc
cmpsl
neg
fistl
popa
and
lret
addr16
aas
inc
push
sahf
ficoms
inc
inc
sbb
adc
ret
cld
mov
inc
fdiv
add
xchg
ljmp
data16
data16
cmpsb
cltd
cs
inc
and
pop
out
mov
into
sub
test
dec
xor
test
shl
fwait
cmpb
cmpsb
fwait
shll
jg
std
xor
test
xchg
add
sahf
out
xchg
xor
imul
adc
mov
xor
push
jp
inc
xchg
jge
pop
xor
dec
test
cld
fwait
sbb
sbb
out
inc
inc
inc
fsubrp
push
sti
test
push
and
push
shr
mov
push
pusha
mov
push
push
loop
cmp
test
arpl
lds
xchg
xchg
bound
or
xor
sbb
pop
bound
xor
in
push
nop
jnp
cwtl
hlt
fcmovnbe
out
mov
outsb
xchg
out
inc
lds
gs
rcr
cli
lcall
sti
mov
rorb
aam
ss
mov
lds
fisttpl
pop
scas
shll
cmp
ljmp
dec
nop
mov
dec
jo
popa
cwtl
pusha
xchg
mov
cmpsl
fadds
adc
sub
je
outsl
pop
aam
seta
cmc
shrl
and
rclb
adc
mov
aaa
mov
adc
jecxz,pn
xor
pop
arpl
fs
push
data16
test
setge
inc
cs
stos
sbb
mov
pop
movsb
test
xchg
jno
cmp
pop
movsl
and
icebp
lret
sahf
mov
test
repnz
jne
cltd
testb
mov
mov
loop
adc
jns
fldl2t
sub
sbb
pop
rorb
push
out
or
push
out
jecxz
push
dec
mov
jae
push
adc
mov
inc
sub
in
les
cld
enter
sbb
in
push
rorb
add
cmp
or
add
subl
mov
out
xchg
xor
xor
mov
loop
pop
mov
ljmp
add
adc
mov
dec
stos
jmp
ja
ret
xchg
inc
add
mulb
mov
inc
ljmp
and
and
ficomps
xchg
cltd
repnz
out
pushf
in
lcall
sub
cmp
dec
jns
data16
aaa
shl
mov
jecxz
shll
jno
pop
lock
pop
inc
pop
xchg
sahf
imulb
sub
scas
pop
cli
jnp
dec
iret
mov
sbb
jecxz
adcl
movsl
stos
lock
call
aam
daa
or
inc
push
scas
stc
iret
mov
int3
in
adc
dec
mov
inc
ja
jmp
cli
pusha
pop
cmp
cmp
not
stc
mov
lock
xchg
dec
adc
sbb
jb
fldenv
pop
inc
mov
fldt
push
cmp
xor
aad
sbbb
add
inc
loope
xlat
out
addl
insb
fcompl
cmp
fiadds
rcll
jecxz
sub
jmp
scas
jecxz
in
push
shlb
jle
dec
adc
sbb
test
mov
pop
mov
dec
fstl
sbb
and
test
xorb
outsb
xchg
dec
scas
mov
lock
dec
sub
idivb
not
imul
inc
fisubs
fdivs
cmp
xor
movsb
sub
sub
sti
popf
iret
pushf
lahf
jb
and
jnp
dec
push
ss
sbb
jmp
push
inc
fisubl
mov
mov
ds
outsb
jbe
xchg
push
mov
fwait
xchg
lods
lret
xor
stos
jno
cltd
push
pusha
and
repz
loopne
fdivs
mov
pop
lods
ljmp
mov
push
mov
xchg
addr16
jge
data16
jae
ret
mov
enter
loope
cmp
mov
sbb
cs
repnz
pop
sbb
popf
shl
push
jne
xchg
inc
mov
lret
and
push
sbb
inc
pop
in
sbb
dec
fcomps
aad
sbb
loopne
jmp
popa
jmp
cmpsl
aam
push
cwtl
inc
rorb
xor
in
cmpsl
into
adc
jb
push
lret
mov
sbb
mov
mulb
mov
mov
inc
outsl
add
in
fistps
test
js
ljmp
inc
int
fisubl
lds
cmp
movl
sub
fstpl
push
aaa
xlat
clc
scas
ljmp
in
cmp
mov
movsb
cltd
fisubrs
cmp
repnz
xor
push
jo
push
movsl
imul
and
xchg
cld
mov
int
arpl
test
fmulp
cltd
jno
loop
jge
mov
mov
xor
movsb
ds
frstor
imul
or
sbb
cmpsl
xor
sbb
stc
push
sahf
cmp
lea
fs
mov
jb
push
fs
sub
fistpl
adc
cmp
mov
push
addl
jle
loop
test
push
xor
cmp
xchg
sbb
or
mov
inc
xchg
daa
mov
mov
jmp
mov
int3
cs
cmpsb
data16
xor
xor
sub
mov
sbb
int3
shll
adc
in
shll
cwtl
xchg
jae
cwtl
ss
mov
lcall
or
sbb
cmp
inc
pusha
mov
in
outsb
adc
xchg
xor
adc
fs
test
mov
or
jno
lds
lds
jns
cmpsb
movsb
cmp
dec
leave
xor
dec
insb
or
bound
jmp
xchg
sub
insl
push
fwait
in
push
lods
mov
js
adc
ret
inc
cmp
in
add
mov
leave
dec
xor
in
dec
lahf
in
mov
movsb
mov
fdivrs
loopne
mov
xchg
out
push
dec
xchg
iret
dec
lea
lods
or
test
sbb
std
cmp
cmpsb
adc
push
cli
shr
clc
dec
xor
sub
pop
lds
mov
inc
mov
and
inc
pop
mov
enter
jne
lock
xor
mov
test
dec
inc
mov
test
popa
cmp
jne
ret
jne
clc
call
pop
mov
jmp
cmpxchg
dec
mov
popf
sub
dec
jae
arpl
jb
add
add
aas
adc
push
xchg
add
fstl
xchg
and
push
inc
bndldx
jmp
out
pop
xor
jmp
sbb
outsb
test
jmp
enter
aas
push
mov
xchg
stos
cmp
pushf
sarb
dec
pop
push
aaa
movsl
mov
xchg
repz
lods
loop
mov
aam
jl
pop
mov
jle
notl
xchg
imul
scas
pop
iret
inc
inc
aas
xchg
xchg
jb
dec
imul
stc
xor
and
push
and
fs
xchg
in
aad
lds
hlt
test
jne
gs
xor
and
push
and
fs
xchg
in
aad
lds
hlt
test
jne
gs
xor
and
push
and
fs
xchg
in
shll
les
adc
add
xor
and
push
and
or
rol
pop
sub
sbb
int3
int3
int3
int3
shrb
loopne
sahf
xor
insb
aad
lds
push
rolb
jo
pusha
loopne
xchg
add
rclb
inc
lock
bound
xor
ret
pusha
loop
icebp
add
mov
mov
lock
jnp
or
cmp
inc
clc
add
arpl
jle
dec
mov
addl
jmp
cmp
dec
mov
jns
mov
pop
add
cltd
add
mov
push
outsb
sub
loop
loop
pop
adc
out
sub
push
add
inc
dec
into
push
push
sub
dec
or
orb
xchg
add
inc
xchg
push
nop
xor
fstl
push
cmp
out
shrl
cmp
enter
mov
sub
mov
mov
mov
ret
jmp
mov
pop
das
pop
clc
mov
push
or
scas
add
sub
mov
and
divl
dec
dec
mov
push
rclb
loopne
nop
adc
cmp
inc
fidivl
pusha
sti
adc
and
xchg
aaa
test
arpl
inc
leave
insb
aad
loope
adc
or
jne
imul
shrl
mov
mov
popa
in
xor
stos
inc
mov
jne
push
in
inc
fisubs
mov
adc
pop
nop
jle
add
rolb
jo
pusha
loop
xchg
add
rclb
inc
lock
bound
xor
ret
pusha
loop
xchg
add
rclb
lds
les
das
jle
lds
mov
mov
fistpl
je
dec
mov
inc
loopne
jae
add
fstpl
test
stos
mov
jp
fwait
or
out
adc
movsb
push
jo
xchg
adc
cmp
fbld
je
test
pop
add
mov
sbb
shrb
adc
adc
fidivs
cmpsl
jb
or
jae
sub
leave
fisttps
repz
repnz
pop
mov
les
ret
jne
imul
aad
xor
out
test
addr16
xlat
insl
lods
daa
test
sbb
mov
cmp
aaa
pop
or
mov
push
and
sub
mov
imul
stos
and
out
push
pop
lcall
data16
and
mov
sub
and
out
pop
and
fucom
orb
hlt
movsl
dec
cltd
and
inc
xor
mov
inc
cmp
push
inc
imul
out
pop
sub
dec
into
xchg
push
mov
pop
cmc
aad
inc
lcall
enter
testl
lret
sub
dec
pop
jl
leave
jge
xor
fisubl
dec
push
lods
dec
into
and
or
adc
aad
lret
push
or
je
mov
or
xor
les
stc
rolb
stos
loope
dec
inc
in
je
sbb
loopne
push
mov
data16
fldln2
out
pusha
mov
mull
jne
sbbl
mov
mov
sbb
push
sbb
jge
fs
cld
imul
lds
sub
sahf
and
mov
movsb
pop
repnz
xchg
addr16
lock
push
insl
inc
inc
sbb
mov
sbb
mov
nop
sub
sbb
dec
test
fucom
sbb
xchg
sti
push
into
outsl
push
rcl
cmpsb
test
es
fdivl
fldenv
mov
out
in
cld
push
mov
cld
and
or
jle
mov
fldl
cmp
sarb
lock
and
mov
and
sahf
imul
dec
jo
inc
std
cmpb
xor
nop
ret
scas
xchg
lea
stos
fdivrs
lea
sub
cmp
push
jnp
scas
in
xlat
xor
adc
icebp
and
in
gs
lret
jnp
sbb
jbe
xchg
cmp
test
jge
sub
sbb
pop
out
rorb
daa
or
loope
push
mov
dec
iret
sub
fwait
test
dec
mov
jo
mov
jg
mov
xorl
popa
jp
in
sbb
inc
sub
pop
adc
mov
push
aaa
adc
xchg
cmpsb
sub
pop
ffree
xor
iret
fs
adc
out
insl
and
les
xchg
lea
jp
sti
mov
mov
lret
shlb
test
mov
insb
xor
je
addr16
popa
and
mov
divl
into
or
ss
xchg
or
pushf
cs
rcrb
jmp
pop
jmp
and
lds
sbb
cmpsl
or
test
cmpsb
movsb
cmp
xchg
ss
daa
icebp
fldl2t
pop
test
repnz
cld
push
sbb
inc
repz
sar
add
inc
mov
fdivr
push
cwtl
mov
pop
jnp
cmp
rcll
in
add
leave
xor
out
mov
add
add
lcall
adc
inc
sbb
cli
push
out
add
inc
push
xchg
add
inc
add
or
shll
clc
pop
mul
sub
sub
push
test
icebp
ror
imul
push
inc
aam
add
shlb
cmp
dec
sub
popf
arpl
jnp
xchg
adc
fdivs
mov
and
dec
lock
je
push
push
mov
jl
xor
mov
out
in
in
lahf
dec
out
imul
jae
xchg
movsl
dec
mov
mov
dec
sub
leave
dec
xchg
out
clc
xor
push
in
jmp
mov
mov
loopne
inc
adc
cmp
pushl
mov
jle
int
cmp
popf
xchg
mov
push
lods
or
mov
dec
nop
fstpt
aaa
xchg
cli
push
movsl
push
inc
sbb
inc
xlat
ss
dec
repz
push
dec
adc
loop
test
leave
jb
test
and
xchg
pop
cld
push
in
in
push
mov
insb
pop
clc
lods
or
andl
xchg
adc
add
mov
mov
cmc
fs
dec
shll
xchg
or
shl
je
fs
bound
or
jnp
lock
insl
or
cs
or
in
mull
push
cmp
in
out
dec
mov
mov
fistps
testb
sbb
out
cmpsb
or
out
lock
insb
repz
dec
sbb
xchg
xchg
dec
shlb
sbb
loopne
mov
aas
test
icebp
sub
rcr
rclb
aas
jo
stos
out
repnz
sbb
dec
fwait
loopne
adc
cld
cmc
inc
ja
insb
dec
movsb
imul
adc
mov
fistl
mov
out
fdivrl
and
es
icebp
daa
mov
insl
jnp
arpl
push
addl
aas
jno
imul
xor
pop
arpl
adc
sub
pop
jecxz
jmp
mov
out
in
mov
inc
iretw
and
cmp
sub
lock
aaa
cmp
cmp
pop
mov
adc
pusha
nop
cld
jae
out
pop
sbb
mov
icebp
add
sti
stos
mov
arpl
add
fwait
sbb
aas
imul
arpl
ret
push
mov
inc
addl
pop
not
fwait
add
loopne
push
ret
push
sahf
pop
mov
mov
cmpsb
or
sbb
cld
std
xor
mov
cmc
fimull
fs
std
imul
mov
call
cltd
je
lcall
add
fwait
mov
sub
js
imul
xchg
out
fucomi
insb
and
out
add
popf
inc
lret
lret
movsb
mov
add
fists
cmp
sbb
push
cmp
adc
lcall
insb
aas
mov
mov
loopne
mov
mov
jp
test
lock
inc
fnstenv
lcall
mov
xor
adc
and
icebp
lods
dec
push
add
push
fsubl
add
cmpsb
jl
pop
mov
jne
inc
jno
daa
cmp
jo
inc
mov
dec
jo
and
je
cmp
nop
add
pmuludq
rcrl
inc
xchg
arpl
pop
mov
dec
jns
mov
popa
dec
dec
or
jge
dec
ret
jae
into
or
bound
daa
sahf
dec
push
in
cs
add
cmp
jmp
pusha
mov
cmpsb
mov
stos
movsl
stos
cmp
jo
int3
push
xor
loope
lret
pop
cltd
add
pop
imul
xor
sti
sbb
pop
lea
leave
inc
pop
fnstcw
jle
cli
ret
stos
pop
and
pop
shr
mov
lret
xchg
dec
and
and
sub
je
std
icebp
lcall
outsb
mov
xchg
fldl
cli
mov
cltd
rol
ret
std
push
popf
jp
enter
aaa
cmp
inc
fs
cmpsl
sbb
add
cmp
jmp
pop
pop
mov
fdivrs
jns
out
xchg
cmp
push
dec
or
push
push
ret
test
push
xchg
fimull
repz
shlb
stos
jge
mov
in
sbb
movsb
lods
outsl
fiaddl
bound
shll
arpl
shl
out
rcll
out
pop
ja
je
repnz
rclb
pushf
in
insl
cmp
out
outsl
daa
lea
mov
add
mov
mov
push
outsl
mov
mov
cmpl
das
fistl
fadds
out
push
test
cltd
sub
and
mov
inc
dec
sti
pop
scas
aas
push
shlb
idiv
mov
and
sti
adcb
lret
push
adc
add
adc
sub
cltd
shrb
stc
sahf
scas
divb
sarb
push
daa
mov
aam
dec
icebp
cwtl
pop
cs
adcb
int3
aam
es
loop
aas
fstl
rcrl
xchg
stos
pop
xchg
cmp
stos
xor
es
lret
movl
daa
and
mov
scas
dec
xlat
adc
add
xor
stos
iret
rorb
adc
mov
dec
scas
iret
add
outsb
pushf
and
aad
push
fidivrs
jge
lods
call
push
pushf
jge
in
push
cwtl
rolb
clc
movsb
sbb
lret
add
mov
and
inc
sub
xor
push
enter
mov
xchg
out
lds
xchg
repnz
dec
insb
mov
and
orl
mov
pop
adc
xorb
add
mov
xor
jle
inc
push
xchg
mov
adc
sbb
lret
cltd
dec
and
icebp
in
cmp
push
pop
sub
test
xrelease
inc
fdivs
outsl
mov
jmp
cli
pop
mov
mov
orb
jno
pusha
xchg
add
lea
aaa
jo
rcrb
enter
shrb
jmp
outsl
fwait
packuswb
shlb
lar
and
mov
pusha
int3
out
xlat
fcomi
cmc
mov
xchg
rorl
jae
jg
mov
push
inc
test
enter
sbb
pop
shlb
push
cmp
mov
lds
pop
roll
add
ljmp
ja
mov
fstpl
repnz
mov
and
arpl
rcll
neg
push
push
pop
arpl
shlb
mov
test
lcall
sub
mov
mulb
add
dec
inc
or
jne
icebp
push
popf
xchg
icebp
dec
lods
je
sub
leave
aaa
cmp
push
repz
xchg
push
rolb
cwtl
push
shll
pop
push
push
push
loopne
rcll
xor
xchg
add
sub
aam
adc
dec
ret
sbb
ds
dec
xchg
jmp
insb
sbb
or
pop
es
and
add
out
dec
out
push
bound
xor
mov
mov
scas
xor
in
into
pusha
pop
in
mov
je,pt
rolb
dec
es
pop
jmp
sahf
inc
fcmovnu
fisubs
stos
pop
push
dec
lea
mov
std
lock
lods
cli
sub
test
sahf
les
mov
or
inc
sub
jnp
das
pop
add
imul
jns
fwait
mov
push
fldt
test
push
fstps
mov
lcall
push
mov
lods
mov
ss
data16
lea
addr16
adc
lcall
cmp
xor
mov
pop
mov
pop
scas
clc
cmp
aam
inc
or
ret
cmp
ret
std
ds
and
outsl
add
add
sarb
inc
push
lret
jmp
push
xchg
stc
repnz
adcb
and
movsb
pop
and
lahf
cwtl
ds
sub
out
rorl
pop
in
inc
int
clc
add
ret
sub
cmp
loop
xchg
aam
nop
xchg
push
adc
cmc
orl
lds
pushf
dec
cmp
sub
mov
test
insl
sbb
lods
push
jo
xor
or
icebp
cmp
pushf
jmp
fs
mov
stos
add
lahf
jp
loop
nop
imul
lret
outsl
mov
adc
clc
clc
or
mov
add
dec
mov
mov
push
hlt
adc
imul
mov
push
imul
pop
and
aaa
xchg
lret
add
and
cli
mul
int
push
jp
rclb
mov
add
cmp
mov
sub
mov
and
je
cmp
pop
fildll
repnz
cmpsl
shlb
lret
les
xor
cli
rcrb
or
add
into
pop
adc
pop
rcll
shrb
inc
pop
insl
outsl
aaa
adc
jns
mov
add
lea
mov
add
imul
lahf
out
dec
push
mov
fcomip
aad
sahf
push
and
mov
pop
adc
imul
ds
out
mov
cli
enter
xor
frstor
out
addl
cmp
cmpsl
push
xor
jecxz
ljmp
loope
aad
cmpsl
and
divb
fadd
xchg
lea
jg
push
xchg
decl
xchg
inc
in
adc
push
sbb
fwait
mov
cmp
loope
pop
or
push
lcall
arpl
adcb
push
jle
incb
pop
je
mov
or
fstps
iret
add
or
mov
xor
ficoml
cmp
lret
xchg
lods
mov
adc
stos
fstpl
sbb
lahf
dec
mov
push
cli
mov
mov
xchg
dec
dec
add
mov
ret
les
outsl
and
pop
fdivl
mov
xor
sbb
and
popa
xchg
xchg
pop
in
adc
cmpsl
mov
cltd
out
mov
xorl
sub
pop
sub
imull
cmp
jo
sbb
push
jg
std
gs
or
xorb
cmp
rcl
ja
xor
cs
cld
stos
push
lret
call
test
xchg
adc
push
hlt
sarb
fwait
stos
lret
adc
sub
aad
xchg
jp
xchg
aas
fistl
mov
xorl
orl
inc
loope
mov
adc
stos
dec
or
pop
dec
popa
insl
mov
cwtl
or
sbb
ds
mov
and
mov
mov
or
data16
push
rcll
clc
pop
out
xor
jne
aaa
pop
push
es
mov
mov
add
xor
ret
call
dec
dec
clc
shrb
or
xchg
mov
jl
sub
roll
mov
sbb
inc
sbb
mov
xchg
xor
push
jne
push
out
sub
push
mov
cmp
cmpsb
push
adc
lock
dec
subb
sbb
dec
fnstenv
hlt
mov
adc
or
push
setns
jge
clc
hlt
in
pop
or
xchg
addl
push
stos
xchg
adcb
aaa
lret
fstl
outsl
outsl
xchg
out
das
or
inc
imul
jno
xor
loope
and
jae
cmpsl
add
adc
jae
data16
cs
add
test
mov
in
jns
xor
movsl
cmp
shrb
adc
push
xchg
cmp
fs
push
decb
xorl
ret
cmp
out
or
ret
out
push
int3
sbb
shlb
mov
addr16
lods
sub
in
cs
movsb
sub
insb
fimuls
inc
and
add
sub
les
sbb
mov
fists
loope
inc
cli
mov
mov
push
jbe
jbe
add
sub
inc
and
add
out
aas
jg
jg
xor
negb
fildl
push
fwait
pop
mov
imul
push
cmp
mov
sahf
ja
loop
scas
outsl
cmc
lcall
push
adc
pmullw
cmp
leave
sub
push
mov
insl
sub
test
stos
mov
push
test
dec
int3
aaa
inc
jbe
mov
cmp
push
cmc
fldcw
xchg
push
call
fmuls
mov
lahf
mov
cmp
stos
dec
lods
xchg
add
mov
cli
lea
mov
xor
clc
sti
jne
rorb
gs
movsb
jecxz
mov
cld
adc
mov
and
rclb
nop
mov
iret
enter
fcoml
sub
sbb
push
in
jecxz
add
inc
lret
lret
sahf
xchg
testl
inc
ss
and
xchg
movsb
cmpsb
xchg
in
repz
push
bound
pop
js
mov
ds
jb
cmc
enter
or
mov
aaa
xchg
pop
adc
lret
shlb
rcrl
aaa
jo
popa
sahf
and
outsl
mov
pop
mov
arpl
or
jnp
subb
shrb
push
sarb
mov
add
bound
fisttps
xor
push
sbb
mov
push
push
jle
insb
popf
pop
adc
xchg
adc
scas
clc
pushf
xor
fnstenv
arpl
adc
pop
jo
jae
sbb
shl
mov
stos
aas
add
dec
shlb
dec
inc
xor
or
pop
xlat
sbb
inc
inc
dec
jl
in
push
out
out
ja
push
mov
add
xchg
lret
xchg
jp
add
jmp
data16
decl
out
pop
daa
cld
sti
scas
data16
leave
mov
and
adc
push
pop
enter
lds
mov
inc
std
and
sahf
cmp
inc
jg
cld
repz
mov
xor
orb
dec
outsl
fsubr
mov
cwtl
pushf
add
jno
cli
movb
push
cltd
stc
out
mov
inc
mov
mov
lret
daa
ss
scas
cmc
pop
pop
out
flds
pop
outsl
jmp
nop
jo
inc
subl
mov
mov
daa
jg
arpl
and
es
cmp
mov
cs
stos
xor
add
lods
xlat
dec
out
cmc
fimull
adc
in
jg
and
mov
mov
inc
shl
xor
inc
mov
ja
scas
cmp
fs
arpl
xlat
out
sub
sub
mov
stc
mov
out
add
pop
ficoms
sbb
and
mov
push
lea
pop
mov
mov
pop
out
mov
cmp
mov
jg
popa
sub
lahf
cmp
iret
fdivs
out
push
pop
in
xor
jae
fstpl
pand
pop
rcll
sbb
xchg
mov
push
inc
mov
rcr
test
cld
push
daa
sbbb
call
int
xchg
and
jns
pop
or
les
push
outsb
ss
aas
jno
add
fstl
adc
adc
cli
xlat
jp
iret
inc
movsl
xchg
fmull
fcmovu
int
mov
aad
sub
push
lds
in
inc
add
jge
or
mov
inc
aad
pop
jmp
int
jno
iret
inc
inc
mov
jge
adc
pop
xor
add
data16
les
sub
fs
data16
inc
pop
add
xchg
popa
leave
mov
pushf
jle
sbb
mov
sbb
or
jg
jne
setne
cli
fisubl
inc
hlt
sbb
xor
rcll
jne
sbb
dec
inc
cmp
outsl
sub
loopne
pop
sbb
mov
sar
mov
clc
sbb
mov
jg
lock
dec
jecxz
inc
les
xchg
add
ret
sahf
aad
xlat
cmp
xlat
pusha
stos
xor
shrb
and
xchg
push
xor
ds
mov
and
ret
es
ja
and
imul
test
sbb
test
mov
jmp
sahf
adc
mov
and
sub
js
sub
lds
addr16
insl
jle
xor
xchg
loope
or
out
in
or
xor
adc
loope
add
pop
mov
cmp
shll
iret
cmp
mov
popa
cmp
or
or
paddusb
scas
popf
ljmp
jmp
test
push
shrb
mov
and
xor
push
xchg
imul
mov
es
pop
mov
stos
pop
pop
call
ss
pop
and
cs
inc
cli
roll
mov
sbb
xchg
in
inc
push
ret
cwtl
pop
lds
jnp
adc
addb
les
add
dec
enter
subps
lret
jns
loope
test
dec
pop
sbb
push
js
sbb
mov
jo
aam
fsubr
ljmp
pop
pop
mov
mov
out
lock
or
push
mov
mov
lcall
int
int
ror
xchg
andl
je
out
mov
lcall
cmp
ljmp
js
cmp
cmp
shll
in
arpl
mov
ds
cmova
mov
pop
sub
loop,pn
stos
xchg
movsb
std
mov
xor
testb
in
xor
mov
cmp
inc
and
addr16
dec
xor
out
out
das
mov
xchg
mov
push
xchg
sti
inc
lret
data16
aaa
mov
xchg
jle
aam
pop
ljmp
dec
sub
jno
pop
lea
cmp
dec
xor
test
sub
pop
cmc
ret
sub
dec
fwait
sub
pop
shlb
cmp
lea
icebp
out
hlt
xor
and
decl
jmp
test
insb
mov
out
inc
jo
pop
clc
jg
test
mov
idivl
push
loopne
jmp
int3
rorb
add
adc
imul
insb
mov
movsb
dec
adc
icebp
test
test
push
cmc
ret
dec
mov
negb
in
fucom
subb
popf
xor
cs
inc
add
add
jmp
std
enter
adc
inc
or
loopne
mov
das
dec
xor
xchg
scas
mov
and
mov
fiaddl
xchg
xor
loop
mov
es
test
ffree
cmp
mov
jns
lahf
popf
jmp
test
jmp
call
xor
jns
lret
adc
int
mov
ss
push
pop
scas
data16
or
inc
cmp
ds
inc
mov
xor
mov
jmp
lds
lahf
js
add
rcl
int
ror
adc
sar
fisubs
call
mov
das
sub
fisubrs
stos
int3
inc
or
fs
pop
xor
es
dec
enter
dec
js
xor
loop
dec
jp
out
sbb
mov
pusha
jo
dec
and
inc
xchg
push
stc
out
and
mov
xchg
into
nop
inc
mov
out
mov
cmp
pop
cmp
sbb
mov
adc
xchg
lahf
sbb
outsb
vmread
dec
mov
mov
test
inc
repnz
inc
pop
popf
loopne
nop
adc
and
inc
ret
pusha
loop
xchg
add
rclb
inc
lock
bound
xor
ret
pusha
loop
xchg
add
rclb
inc
lock
bound
xor
ret
pusha
jecxz
xchg
add
rclb
inc
lock
bound
xor
push
sbb
dec
fistps
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jo
lock
rcrb
sbb
inc
loop
hlt
or
inc
fstl
and
adc
rcrl
mov
sbb
jo
and
push
int
mov
adc
rcrb
mov
sbb
jo
and
pop
leave
and
jg
nop
jge
sbb
nop
in
jnp
mov
mov
sub
movsb
jne
push
fwait
inc
mov
jge
mov
xchg
mov
lds
add
sbb
fnstsw
or
icebp
mov
movsb
push
cmpsb
or
in
pusha
cmp
scas
or
andl
daa
xor
loopne
cmp
mov
hlt
nop
pop
jo
mov
inc
and
std
adc
lods
sbb
mov
mov
cmp
nop
pop
or
push
jae
pop
call
sbb
lock
dec
pop
push
cmp
js
js
push
mov
int
inc
xor
mov
lea
pop
rorb
cmp
nop
or
inc
fstl
and
adc
xchg
adc
jecxz
aad
js
jge
xchg
ret
mov
mov
insl
pop
fs
mov
cwtl
sbb
pop
aam
xorb
xor
xor
ret
pavgw
sub
cmp
push
mov
sbbb
in
inc
fstl
and
adc
rcrb
mov
sbb
jo
inc
fstl
and
adc
dec
scas
sbbb
jg
fidivrl
icebp
popf
out
jmp
movsb
sub
idivb
inc
sub
outsl
fbld
stos
int
sub
pushl
mov
or
mov
pop
mov
cmp
stos
and
cmp
sub
cwtl
insb
into
fldcw
sbb
pusha
and
pop
cmpsl
loop
pop
dec
adc
cmp
push
data16
dec
xor
es
into
out
movsl
pop
pushf
mov
pop
push
jb
lods
cmpsb
int
jge
jb
call
filds
shrb
fs
sti
sbb
ret
jl
outsl
jge
push
xchg
dec
jp
push
ja
sbb
cmp
lea
enter
cmpsb
push
sub
orb
aam
lahf
xchg
data16
in
pop
mov
cmp
lret
js
idivl
adc
fdivr
sarb
sbb
mov
push
test
aam
gs
jns
mov
mov
push
add
or
int3
inc
test
mov
cmp
adc
or
out
jno
cmp
push
or
xor
mov
int
cwtl
mov
sub
into
or
pop
arpl
cmpsb
loopne
iret
test
mov
inc
fldenv
movsb
aaa
adc
xor
data16
stc
lcall
sbb
inc
xor
adc
test
push
cmp
cmp
popa
pushf
js
mov
out
cld
shrl
mov
mov
or
lahf
pusha
out
int
and
stos
jge
adc
repnz
cmc
inc
icebp
mov
inc
push
mov
imul
leave
pop
lcall
adc
sbb
xchg
xchg
popa
fstpt
mov
fadd
sti
js
std
mov
fdiv
sbb
jl
and
fwait
int3
mov
and
lret
leave
dec
sarb
jae
aam
ss
stos
addr16
sub
xchg
sbb
filds
insl
cld
das
lahf
stc
cmpl
in
sub
inc
push
jg
mov
fs
adc
jno
push
push
hlt
aad
sahf
dec
mov
sti
add
fisttpl
xchg
jno
cwtl
push
int3
call
cli
xchg
fadds
cmp
add
adc
mov
loop
rcll
adc
into
lcall
outsb
inc
jmp
and
lea
adc
xor
stos
pop
int3
stc
push
mov
pop
mov
sub
dec
sahf
mov
sahf
jne
das
ret
cmpsb
cmpsb
nop
in
inc
push
pop
aad
lods
movsb
ss
leave
mov
or
sub
fldl
push
dec
lcall
jl
aam
iret
popa
sbb
loop
inc
inc
push
add
leave
xorl
mov
int3
cmc
inc
sbb
adc
xor
sti
out
mov
cmpsl
dec
adc
cmp
aad
cmpsb
sbb
and
stos
imul
fists
mov
sub
add
int
and
and
cmpsl
loopne
jp
enter
adc
sti
mov
dec
push
xchg
repz
rcr
lea
pop
mov
jmp
xchg
dec
sub
movsb
jno
lahf
clc
fiadds
stos
out
jb
xor
push
push
ljmp
outsb
push
xchg
push
and
test
fldenv
xor
cmp
mov
cltd
pop
inc
xor
adc
mov
xor
fistps
cli
mov
pop
scas
sarl
lock
sbb
mov
push
cld
int
pop
shll
pop
es
cmc
xor
mov
fmuls
mov
sar
inc
mov
jbe
mov
out
ss
cmp
movsb
fistpll
ljmp
or
pop
pushf
repnz
dec
fcoms
sbb
push
mov
mov
aam
mov
movsl
aas
ret
mov
xchg
ljmp
fisubl
mov
mov
jae
jp
add
sahf
enter
inc
sbb
xor
xchg
nop
stos
ret
mov
mov
jne
imul
mov
and
and
lock
pusha
sub
in
out
xchg
push
mov
imul
mov
fildl
pop
pshufw
std
xlat
stos
dec
push
sub
mov
push
outsb
mov
cmp
fidivl
inc
es
std
jmp
outsl
push
outsb
in
or
fucomp
adc
xor
sub
in
sub
and
loope
test
out
outsb
stc
xor
ljmp
xor
sub
hlt
inc
xchg
adcb
mov
cmpsb
inc
cmp
push
insb
fcmovnu
mov
mov
mov
cltd
and
cmpl
test
mov
divb
insl
aas
mov
push
arpl
pmaxub
mov
adc
test
repz
leave
sub
in
sbb
cmp
std
cmp
cltd
xorb
sbb
dec
and
cmovb
add
or
xchg
aas
pusha
orb
in
adc
stc
rcrl
mov
push
cmpl
aas
sbb
pop
repz
shrb
sub
or
jmp
pop
mov
push
cmp
out
adc
mov
fwait
cmpsb
add
mov
pop
sbb
mov
in
sbb
popa
andb
addl
pushf
dec
aad
push
shrb
dec
shrl
sub
ret
loop
jae
push
and
jo
sbb
cli
and
cmc
loope
cmp
lock
mov
imul
nop
shrl
rclb
stos
lcall
mov
jnp
jo
fistl
pop
scas
sub
cmpsb
rol
in
sub
das
or
ja
push
jno
arpl
mov
adc
inc
mov
push
andb
xor
int
cli
sbb
cltd
pop
cmp
call
jle
sub
sbb
outsb
add
prefetch
popf
lods
sub
out
sub
add
mov
inc
mov
jl
punpckhbw
icebp
lcall
jmp
ret
cwtl
dec
add
jp
fs
or
and
sbb
lcall
sub
sarb
inc
sub
cwtl
mov
jmp
dec
mov
adc
dec
lret
daa
fs
pop
and
pop
mov
inc
sti
iret
outsl
jo
jl
and
rcll
add
or
inc
test
loopne
outsb
popa
adc
movsb
scas
out
sbbl
xchg
or
in
pop
ficomps
jl
cltd
sub
in
mov
hlt
xchg
jo
iret
jae
xchg
or
lock
ja
mov
jno
push
mov
movsb
push
or
in
rcrl
or
mov
loope
inc
xor
repnz
pop
add
filds
rclb
inc
sbb
es
rorl
loop
pop
subl
sub
mov
cmpsb
jb
popa
push
sub
pop
xor
fimull
and
je
mov
ja
adc
adc
xor
xchg
mov
scas
stos
xchg
mov
cmp
push
mov
xchg
cmpsb
leave
sub
mov
insb
mov
inc
xchg
gs
clc
fsubrs
or
pushf
jecxz
test
rcrb
xchg
mov
sub
xor
sub
cmp
dec
das
fdivrs
and
jmp
les
ljmp
cmp
mov
sub
adc
in
inc
sub
scas
icebp
iret
xor
fidivs
cmpsl
jo
inc
loope
fucomip
ja
add
in
arpl
fisttpl
sbb
xor
mov
jno
sub
push
daa
lret
xor
aaa
jmp
inc
test
repnz
bound
mov
fs
inc
into
dec
dec
pop
daa
call
js
in
sub
mov
dec
jle
jns
mov
enter
cmp
jl
push
aaa
daa
mov
bound
inc
rclb
cmp
cs
cli
jg
xchg
addr16
addr16
fsubr
pop
movsl
lds
inc
hlt
sbb
pushf
jns
das
mov
call
inc
push
or
pop
push
mov
stc
push
jno
lret
lret
pushf
insb
shr
adc
pop
push
mov
loope
dec
lret
dec
stos
shll
movsl
mov
out
test
adc
lret
sbb
mov
adc
dec
cmp
sbb
mov
imul
xchg
shll
out
sbb
in
mov
push
add
and
sarl
mov
mov
or
or
aam
fsubrs
imul
test
mov
and
mov
ljmp
test
jg
ja
fstpl
fnstsw
in
mov
mov
mov
push
xchg
jo
es
js
roll
dec
mov
js
pop
jecxz
push
int3
out
ljmp
movsb
or
sbb
push
fidivrs
jecxz
xlat
mov
mov
adc
or
ret
jp
fidivs
movsb
pusha
pop
mov
ja
pushf
mov
imul
aaa
div
push
dec
inc
int3
mov
pop
cs
out
inc
scas
insb
xchg
lahf
outsb
out
push
xor
sub
mov
adc
cld
mov
testb
mov
add
mov
fiaddl
push
lea
shll
pop
sub
leave
ss
outsb
pusha
out
fisttpll
cmp
push
nop
mov
les
scas
xchg
decb
adc
lcall
ret
xchg
insb
pushf
out
aaa
cld
adc
mov
xchg
lahf
inc
stos
push
add
mov
xor
scas
jnp
push
dec
dec
add
mov
mov
scas
shll
lock
or
add
hlt
test
cmp
ficoml
nop
push
sbbl
cmp
push
pop
inc
xchg
shr
fisubs
xchg
adc
or
arpl
sbb
ljmp
rol
mov
insb
addl
fstpt
pop
inc
mov
mov
xchg
inc
inc
fmull
ds
inc
dec
jne
clc
adc
pop
and
fistpll
hlt
sub
cmp
sub
adc
mov
pop
je
jbe
and
jecxz
int
and
pop
xchg
mov
mov
cmpsl
popa
dec
cmp
inc
loope
mov
push
les
xchg
push
push
stos
cld
clc
dec
inc
cmp
es
inc
sub
shll
mov
adc
pop
int
pop
sub
cmp
scas
fwait
shll
mov
gs
test
in
movsb
loopne
andb
xchg
push
push
fcomp
cmp
mov
negl
test
pop
dec
sar
adc
and
std
xor
mov
sbb
mov
mov
mov
jb
outsl
bound
inc
xchg
ret
mov
jmp
jb
movsl
xor
call
movsl
xchg
sub
mov
dec
aad
xorl
mov
mov
punpckhwd
jle
dec
jb
cwtl
inc
add
pop
dec
shll
push
jb
pop
sti
lock
xchg
ret
in
dec
add
push
lcall
arpl
rcll
stc
in
adc
into
and
pop
add
dec
pop
sbb
mov
lahf
ret
shr
cmp
minps
lea
arpl
and
xchg
sbb
or
xchg
mov
mov
cmpsl
flds
fiaddl
ret
push
lret
sub
push
aam
and
mov
mov
or
int3
xorb
xor
sub
mov
ret
mov
mov
mov
lea
iret
and
jae
xchg
mov
mov
mov
mov
and
test
fwait
jne
sahf
repz
mov
imul
inc
leave
adc
cs
cmp
lock
test
out
jb
int3
cs
jno
out
or
jge,pt
inc
push
push
in
cmp
add
std
mov
pop
cmp
jmp
jns
push
inc
sub
xlat
lahf
xchg
jmp
popf
mov
mov
pop
inc
insb
xor
xchg
fcompl
xchg
int3
mov
adc
sub
outsb
mov
cmc
xchg
inc
push
rclb
inc
mov
pop
xchg
pop
and
rorl
push
xchg
inc
fxch
rorb
sub
mov
mov
into
cli
xchg
xchg
mov
ds
jae
scas
sbb
pop
cmpsb
fdivrp
add
daa
dec
cmp
iret
and
cmp
mov
mov
leave
mov
push
movsb
gs
mov
push
lret
insl
adc
out
mov
add
and
pop
and
mov
mov
outsb
xor
rcrl
sbb
pop
push
jmp
clc
mov
adc
and
mov
lea
add
dec
cmp
pushf
and
xlat
push
push
jp
push
and
fistpl
aaa
hlt
xor
lock
sub
ret
imul
push
cmp
xor
xchg
test
ss
sbb
adc
dec
jg
sub
mov
jp
and
mov
test
testb
mov
mov
jae
add
ljmp
mov
adc
mov
rorb
inc
cmp
mov
jge
xchg
jns
adcb
out
lret
xlat
and
sbb
sbb
movsl
xlat
and
fwait
cmpb
push
out
dec
sub
repnz
cmp
inc
lods
scas
xor
cmp
inc
sub
out
arpl
push
inc
mov
inc
mov
pop
stos
shlb
aad
mov
or
cmp
push
sub
inc
data16
pusha
mov
dec
inc
xchg
jbe
fsubl
and
jge
sub
mov
sbb
mov
lret
pop
mov
mov
jnp
cmc
cld
cmp
jo
and
xchg
ror
test
pop
adc
negb
or
sbb
ja
sbb
mov
dec
mov
pushf
jle
and
xchg
xchg
repnz
jns
ss
adc
js
adc
fcompl
repz
cmp
mov
stos
push
std
xchg
es
jbe
dec
ljmp
movsl
mov
xchg
fsub
mov
in
xchg
dec
popa
call
in
push
arpl
jae
jle
dec
mov
in
sub
mov
xor
mov
jge
test
mov
pop
push
jne
mov
lds
leave
cmp
sti
mov
adc
sbb
js
lcall
bound
jmp
mov
stos
push
test
xchg
fwait
mov
ss
add
sbb
mov
rcll
dec
mov
lret
negl
xchg
sub
xchg
mov
mov
cmpsb
subl
mov
ret
int
idivb
inc
or
stc
sub
aaa
imul
sbb
push
push
mul
lahf
mov
push
dec
into
ss
inc
ja
adcb
popa
sbb
mov
neg
sti
movsb
sarb
lret
sub
insb
mov
xchg
rcrb
dec
es
lock
mov
and
hlt
jne
insl
xor
loope
mov
dec
mov
jne
fs
clc
leave
test
push
cmpsl
mov
push
mov
mov
dec
and
lock
mov
and
loope
mov
mov
in
std
test
inc
pushf
shll
lret
lea
push
std
stos
or
repnz
andb
outsl
stos
cmpsl
inc
jmp
sbb
cmpsb
inc
xor
adc
icebp
mov
sbb
lret
add
aas
divl
cmp
fdivl
mov
cld
dec
lds
pop
inc
lahf
push
xchg
jmp
sbb
pop
inc
dec
xchg
or
push
mov
pop
dec
dec
and
mov
mov
popf
xchg
iret
cmp
fcmovbe
stos
mov
ret
push
js
sbb
inc
test
imul
sub
cmpsl
inc
xchg
lock
mov
or
xor
in
iret
push
cwtl
fildll
cmp
mov
adc
mov
xor
mov
into
pop
pop
cli
cmp
or
addr16
xchg
mov
sub
sti
rolb
mov
inc
mov
adc
inc
insb
stos
jmp
and
aaa
xchg
fs
imul
mov
sarl
cmpsl
jbe
mov
mov
mov
outsb
into
xchg
lods
inc
adc
rol
iret
outsb
es
mov
xchg
jns
jle
cmp
sub
hlt
notb
jmp
mov
out
mov
fucomip
addl
inc
adc
int
fwait
movsl
jb
jns
cld
pushf
ds
xor
mov
sti
in
push
add
xchg
pop
push
pop
xchg
push
dec
cltd
xor
inc
xor
jnp
sbb
push
addl
jbe
and
dec
adcl
lock
scas
sub
aas
xchg
or
mov
aam
pusha
mov
jae
ljmp
push
fldl
fstpt
push
mov
lds
mov
dec
or
fsubr
pop
lock
mov
in
cmp
mov
xchg
iret
push
aaa
stc
das
jno
mov
pop
sub
and
mov
push
inc
rclb
fisubrl
imul
or
popf
movsl
mov
data16
and
add
mov
testl
cmp
imul
in
and
imull
jp
jle
or
cwtl
sub
rclb
lret
adc
pop
xchg
ja
mov
push
cltd
scas
lods
fildl
scas
pusha
ds
clc
daa
inc
jno
andb
mov
xor
push
jmp
or
orl
jp
or
nop
aad
sbb
lahf
daa
aaa
jo
jl
pop
sbb
in
fisubrl
movsb
scas
pop
cmpsl
hlt
rol
dec
mov
sarl
or
push
inc
xchg
test
jg
pop
int
add
jno
pushl
xchg
int
ss
mov
ds
dec
lret
movb
add
mov
pop
addr16
fcoml
outsb
inc
int3
dec
pop
inc
push
cld
or
sub
rclb
stc
and
lds
in
jne
test
add
mov
jp
push
sti
mov
xchg
mov
scas
mov
xorb
cmpsb
cmp
and
mov
mov
pop
inc
pop
cli
aad
mov
rolb
subl
sbb
dec
iret
xor
mov
fisttpl
clc
or
mov
shlb
sti
rep
push
or
daa
jne
add
std
pop
inc
xchg
es
stos
jp
sbb
xor
sub
enter
bound
jne
dec
xor
jp
test
jle
sarb
scas
jb
ret
fs
push
dec
lret
xchg
addr16
and
insl
adc
push
mov
cmc
mov
mov
repz
imul
adc
pop
mov
push
dec
cld
ljmp
pop
xchg
popf
subl
xchg
ss
jl
sub
arpl
lcall
int3
xchg
xchg
xchg
cmpb
loop
push
jne
ja
mov
cmp
cmp
and
pushf
rclb
hlt
add
mov
jns
xor
leave
roll
in
inc
iret
xchg
repnz
jecxz
scas
sub
sahf
cmpsl
int3
jbe
xchg
dec
popf
inc
xchg
insl
jb
loop
dec
xchg
aam
aaa
sub
fidivrl
push
push
cmpl
mov
jge
out
mov
push
mov
adc
fidivl
data16
or
clc
scas
rol
loop
pop
dec
mov
bound
xor
mov
dec
mov
and
xchg
mov
je
sbbb
fldenv
push
shlb
add
sub
pop
and
test
push
push
or
and
and
sbb
std
mov
stos
and
lahf
fdivl
pop
inc
lods
jns
push
imul
mov
push
aam
inc
xor
sbb
sbb
aaa
lahf
lret
xchg
and
ret
push
dec
sti
inc
je
xchg
pop
frstor
jp
jl
sub
fildl
rolb
dec
push
xchg
stos
dec
cmp
lret
loop
xor
std
sub
jne
or
push
das
sti
mov
bound
xchg
mov
fisttpll
loop
xchg
fistpl
ja
adc
ljmp
hlt
mov
pop
xor
xchg
inc
into
push
jnp
mov
pop
std
ss
sbb
call
sbb
mov
mov
lret
cmp
xchg
adcb
pop
les
arpl
push
outsl
sbb
inc
xchg
cmpsb
pop
pop
fcompl
jne
jo
in
dec
lock
push
bswap
adc
mov
pushf
dec
imul
and
fcomi
xchg
lahf
jecxz
insl
fldcw
dec
xor
nop
les
xchg
loope
pop
add
test
in
dec
and
push
iret
int
fldl
stc
insb
inc
sti
dec
test
inc
add
loop
dec
int3
dec
loopne
jg
cwtl
clc
test
xchg
cmc
mov
pop
icebp
jmp
jp
cmc
sub
gs
adc
shlb
aad
aam
movsb
pop
sbb
mov
adc
or
ret
pusha
xlat
or
jne
imul
add
pop
mov
adc
std
jp
lods
lods
jmp
push
aas
xor
loope
dec
icebp
aaa
push
add
dec
movl
stc
lds
mov
pop
inc
xor
mov
xor
mov
push
add
cmp
int
inc
xchg
mov
xor
fst
mov
shlb
cmpsb
or
fldenv
xor
or
push
xor
popf
mov
pop
pop
add
sbb
jae
xchg
cmpsb
cmp
push
out
dec
int3
cmp
fnsave
call
add
lahf
cmp
ss
insb
or
lods
mov
das
jecxz
mov
adc
jb
std
mov
adc
dec
sub
dec
jns
or
lret
popa
insb
jo
sbb
jnp
xor
pop
cmp
inc
int
xchg
aad
cmp
cmpsl
repz
mov
sbb
push
cli
imul
imul
xchg
mov
fs
jecxz
fimull
mov
fsubr
xor
daa
in
in
jns
lcall
mov
push
les
pushf
jae
cmp
fildll
pop
stos
mov
repnz
mov
mov
fs
out
movsl
cmpsl
sub
lret
push
sarl
cwtl
bound
int
test
outsb
lds
add
add
mov
loop
sub
mov
loopne
and
cmc
adc
xor
add
mov
pop
sbb
stos
jbe
mov
xchg
inc
out
not
xchg
cmpsb
inc
xchg
ljmp
rorb
cmp
nop
or
inc
fstl
and
adc
rcrb
mov
sbb
jo
inc
fstl
and
adc
rcrb
mov
sbb
or
inc
fstl
and
loope
icebp
insl
rcrl
mov
popf
nop
repnz
add
ljmp
push
jmp
jb
int3
int3
int3
int3
mov
orl
lods
jecxz
sarl
and
xor
add
adc
insb
testb
push
mov
orl
faddp
into
shrl
and
push
push
add
adc
pop
jae
add
cmpsl
mov
xchg
xchg
out
div
mov
shll
mov
adc
add
xor
push
xlat
mov
clc
ret
out
adc
sbb
xlat
mov
push
push
xchg
jbe
outsl
clc
xchg
xchg
aas
cmc
push
xor
in
insb
aam
out
or
lds
mov
add
sahf
cs
jle
pop
adc
mov
cmp
orl
imul
sub
bound
fidivrl
dec
stos
xchg
add
out
repz
mov
das
pop
sub
icebp
inc
orl
dec
fsubrp
inc
and
outsb
insb
add
mul
xchg
ds
ds
fs
cld
roll
mov
dec
dec
fxam
jno
add
xor
push
mov
adc
jbe
mov
push
dec
push
ja
mov
sahf
orl
faddp
xlat
shll
and
xor
add
adc
jbe
inc
inc
dec
cmp
int3
lret
mov
ljmp
xchg
into
cmpl
inc
inc
insl
imul
add
add
and
shll
loope
stos
out
xchg
fidivs
inc
push
bound
jle
add
add
ljmp
mov
out
repz
into
sarl
and
xor
add
adc
outsb
jae
inc
dec
push
mov
orl
faddp
into
sarl
and
xor
add
adc
outsb
jae
inc
dec
push
mov
xor
aam
das
ljmp
je
nop
jle
popf
mov
outsl
and
mov
lock
sub
leave
std
jns
rorb
sti
fisubrs
pushf
xor
jecxz
add
cld
jo
jg
jmp
dec
xor
dec
mov
jecxz
pop
cmp
mov
add
out
rorb
xor
or
lret
incl
rorb
xchg
jmp
jo
mov
sbb
ss
cmp
and
daa
lahf
ret
add
cmp
jl
jecxz
push
aad
adc
mov
aad
scas
call
fisttpl
jmp
push
test
leave
jns
mov
test
jg
fnstsw
arpl
xchg
jae
mov
dec
inc
inc
cmp
mov
loopne
push
push
push
or
incb
outsb
mov
mov
xchg
dec
or
adc
out
lahf
push
sbb
enter
pushf
jge
pop
ja
fiaddl
mov
mov
mov
mov
adc
stos
daa
je
dec
adc
mov
jno
loop
mov
mov
mov
mov
cmp
xchg
nop
lods
jae,pn
add
cmpsb
or
addb
and
pop
mov
and
mov
insb
dec
cmpsl
push
out
inc
dec
inc
mov
fwait
lahf
sbb
add
jne
cmp
xchg
shr
arpl
push
stc
leave
push
push
pop
or
cmp
push
adc
lcall
std
add
idivb
mov
jp
ja
arpl
lcall
leave
hlt
dec
xchg
mov
mov
push
or
mov
test
enter
add
add
fbstp
xchg
outsl
pop
fildll
push
dec
ds
or
test
sbb
dec
push
sbb
cli
enter
loopne
mov
loope
mov
mov
pop
nop
mov
ds
dec
xor
rclb
push
psubsw
mov
or
sub
mov
mov
call
mov
scas
jmp
aam
repnz
mov
cmp
jg
andl
cmp
addr16
pop
cmp
xchg
xchg
mov
ss
xor
jg
add
cmp
dec
imul
scas
sub
mov
sub
ret
testl
cltd
pushf
jg
fwait
push
sti
addb
adc
dec
mov
dec
imul
hlt
imul
sub
inc
scas
mov
pushf
aas
and
aas
or
inc
cli
out
addr16
sbb
adc
dec
fcomi
loop
mov
in
xchg
add
loop
mov
movsb
xor
sbb
mov
mov
insb
or
cmc
out
push
lea
push
sub
cmp
sarl
xor
out
jns
add
and
les
mov
scas
mov
xor
xlat
pop
sbb
addr16
stc
mov
adc
adc
push
andl
ljmp
pop
jnp
leave
stc
fs
jp
dec
dec
sub
jmp
mov
movsl
fnsave
dec
js
mov
testb
dec
mov
outsb
push
je
daa
popl
mov
ss
add
fnstsw
nop
sbb
push
xchg
daa
mov
mov
mov
sarl
jl
or
std
xchg
jg
mov
scas
pop
push
lret
lcall
pop
pop
jo
xchg
repnz
sub
inc
cmp
sub
xor
cmpsb
cmpb
dec
popa
aaa
and
cmp
in
mov
sahf
or
dec
inc
test
mov
fsubrs
lods
sub
cmpb
fiaddl
dec
or
mov
int3
push
mov
mov
gs
xchg
std
hlt
dec
imul
sbb
std
icebp
jns
dec
pop
mov
add
pop
aam
mov
loope
pusha
leave
je
ret
lods
mov
and
push
imulb
enter
adc
mov
fstpt
loope
loopne
add
repz
or
push
pop
out
and
lret
mov
sub
inc
test
or
xor
or
gs
add
xchg
jp
adc
sbb
cltd
scas
add
xchg
inc
orb
pop
cmc
mov
and
pop
mov
cmp
bound
ss
mov
inc
lahf
pop
jo
insl
sub
hlt
jmp
movsb
dec
daa
mov
dec
into
aaa
pop
shl
dec
ficoms
xor
dec
pop
push
scas
jmp
shr
or
adc
loopne
dec
add
hlt
and
pop
jbe
pop
mov
andb
insl
lahf
and
push
movsb
mov
lock
dec
scas
rcrb
dec
dec
mov
rcr
mov
orb
push
jmp
ss
out
add
xchg
push
jge
int
call
pop
gs
xor
jae
lahf
dec
sbb
sub
insl
push
sub
push
dec
int3
pop
fisubrs
ss
adc
cltd
mov
mov
and
sub
addr16
jno
decb
xchg
aad
mov
sahf
and
fcmovnu
push
in
jbe
mov
hlt
jmp
jb
add
mov
inc
sub
xchg
dec
sub
mov
fnsave
cmp
push
mov
loop
idiv
sti
xchg
pushf
jecxz
pop
fimuls
imul
clc
adc
or
sub
push
add
xchg
pop
add
and
in
rcr
js
jecxz
sbb
cmp
in
cmp
dec
subb
loop
cli
loopne
dec
orl
nop
sub
or
inc
nop
insl
xor
sbb
call
aam
test
jecxz
mov
sbb
fstps
pop
inc
jo
stos
ja
adc
repnz
xor
pop
jmp
xchg
dec
cli
popf
aam
add
mov
push
push
adc
add
or
pop
sbb
stos
jbe
stc
xchg
sahf
mov
jmp
cmp
jge
das
hlt
lock
lcall
xor
mov
push
adc
stos
pop
xchg
mov
xchg
negb
pcmpgtw
mov
scas
xor
jbe
dec
lcall
idivb
repz
mulb
xacquire
icebp
aam
out
nop
xor
xlat
insb
pop
mov
sbb
or
ljmp
lods
xor
fiadds
lcall
or
xchg
repz
gs
and
pusha
jg
xchg
add
adc
xor
sbb
enter
dec
push
or
adc
inc
push
mov
xchg
dec
mov
and
pop
dec
movsl
js
mov
jg
xor
lret
seta
mov
jle
jp
sub
ja
jp
scas
jno
jp
xchg
and
xchg
xchg
push
scas
or
insb
lea
repnz
cld
and
xor
ds
push
and
test
fistps
xor
dec
stos
sahf
jecxz
test
sub
push
cs
pop
xor
xor
iret
add
stc
lods
cmc
mov
or
sub
push
adc
outsl
xor
push
cmp
mov
or
dec
mov
or
pop
lret
out
add
mov
fucomp
aam
repnz
inc
mov
mov
jp
mov
mov
movsb
mov
dec
xor
mov
sarb
jecxz
cs
jne
push
outsb
stos
dec
aaa
xlat
xorl
ja
loopne
ret
pushf
xchg
xor
push
xor
dec
mov
fisttps
js
outsl
add
cmp
fwait
xchg
in
sub
fdivr
push
jae
push
push
loopne
sbb
lock
pop
xlat
daa
add
xchg
insb
xchg
dec
inc
outsl
mov
xor
sub
jns
adc
xchg
push
pop
das
mov
xor
xor
lods
xor
pushf
xlat
jmp
push
xor
push
outsl
mov
inc
mov
mov
or
pop
add
or
push
ljmp
sbb
ficompl
test
push
es
daa
pop
nop
cmp
jns
jmp
popf
sti
and
out
mov
inc
mov
es
scas
jg
sub
jge
adc
sbb
loopne
mov
push
cmpsl
pusha
sub
sub
add
xchg
fistpll
daa
mov
inc
je
cmp
jo
pop
imul
cmp
pop
pop
jne
nop
push
aas
mov
sbb
jb
mov
pop
inc
cmpsl
divl
add
cmpl
adc
imul
incl
outsl
or
outsl
sub
out
cmc
mov
movsl
push
push
and
ljmp
adc
push
cmp
test
cltd
jge
ds
xor
mov
in
dec
mov
mov
pop
rcr
hlt
sahf
and
iret
mov
inc
pop
dec
repnz
jbe
and
xchg
and
ja
push
pop
popa
inc
out
push
fildll
call
or
ficoml
adc
mov
ret
lock
xchg
xchg
int3
in
push
cli
cmp
jo
sti
pop
lock
les
andb
out
add
lea
dec
frstor
fld
dec
mov
bnd
add
shrb
or
jns
repnz
add
movsl
repnz
cmp
adc
outsb
in
je
sub
inc
xchg
xchg
js
div
xor
pop
inc
outsb
pop
popf
cmp
sbb
cmp
jbe
lret
pop
cld
mov
sbb
push
mov
dec
push
jecxz
pop
mov
jbe
push
cmp
add
jae
ja
add
jmp
jmp
xchg
add
cld
inc
mov
mov
ror
inc
repz
sbb
push
lea
sbb
adc
int3
arpl
movsb
cltd
fimull
adc
ret
lcall
jmp
sbb
js
push
jbe
sub
jp
and
mov
mov
sahf
fcoms
mov
inc
xchg
and
imul
clc
mov
shrb
loop
cmpsl
movsl
mov
push
cmpsb
jecxz
push
cwtl
stos
mov
and
pop
add
mov
push
push
cmpsb
add
and
icebp
stos
mov
lcall
mov
cmpsl
lret
push
xchg
xchg
push
pop
into
jmp
vphaddbw
push
or
add
inc
cs
jmp
dec
scas
sbb
icebp
iret
mov
stc
mov
inc
mov
inc
leave
enter
repz
movsb
xor
rcll
sbb
fsts
mov
insb
xchg
jmp
cld
xchg
xchg
inc
xchg
cmp
adc
xchg
lcall
subl
and
adc
mov
pop
imul
push
mov
mov
in
xchg
js
jo
adc
leave
es
aas
les
mov
ja
add
jl
inc
sub
loopne
ret
in
nop
leave
xor
push
add
ret
jae
push
and
mov
andl
lahf
mov
or
or
pushl
sbb
out
sbb
jp
out
das
mov
sbb
mov
cli
fisubrl
add
jle
pusha
cmpsl
push
pop
and
orl
mov
xor
arpl
loop
mov
sub
andb
push
subb
aad
sbb
iret
mov
adc
gs
out
jne
dec
add
adc
daa
sub
stc
dec
fnsave
or
aam
aas
mov
stos
es
fistps
shll
sub
gs
xchg
push
pop
lret
pop
xchg
int
xlat
aam
ds
mov
test
jnp,pn
repnz
lcall
push
sti
add
jb
sub
addr16
call
fmull
dec
lahf
xor
pop
add
or
mov
push
or
pop
push
or
mov
add
iretw
dec
cmp
xchg
fadd
enter
jns
aad
xor
mov
mov
lock
or
sarl
mov
repz
ljmp
and
lock
cmpsb
in
xchg
lcall
sub
add
call
sahf
push
repnz
mov
cmpsl
add
inc
dec
insb
mov
adc
int3
jecxz
inc
lods
mov
lcall
mov
or
ffreep
fs
add
insb
jno
pop
movb
call
push
and
add
dec
rclb
pop
mov
cmp
xchg
and
insl
push
push
add
insl
add
mov
out
in
in
lret
call
std
das
or
sahf
jge
add
lds
loope
and
insl
sbb
fists
mov
cli
iret
int3
fdivs
mov
jb
push
push
xchg
jb
push
out
bound
mov
fists
es
inc
pop
dec
dec
mov
arpl
int3
rorl
nop
push
aad
in
fidivs
mov
movsl
in
popa
add
cli
cmpsl
cli
pop
fcmovb
sbb
push
test
cmp
xchg
scas
and
jmp
dec
in
movsb
fsqrt
gs
lcall
pop
cwtl
stos
daa
arpl
xor
add
xchg
out
mov
cmp
or
rorl
movsb
idivl
mov
xchg
shrb
test
lea
aam
push
lcall
mov
or
shll
jecxz
pop
mov
sub
roll
test
cmp
test
in
add
insl
pop
xchg
sub
mov
fcoml
sar
lods
dec
adcb
lret
sbbb
out
test
push
jb
cmp
pushf
fdivrl
push
orl
jae
cltd
and
xchg
push
je
out
loope
sbbb
mov
jle
mov
sub
jno
aaa
xlat
test
or
addr16
mov
mov
adc
je
stos
xor
push
cmp
dec
iret
dec
mov
xor
dec
loop
jp
mov
adc
pop
sti
popa
and
cmpsl
sub
xor
and
imul
loope
dec
sahf
jl
lret
adc
into
stc
dec
stos
jno
lret
std
adc
mov
in
in
add
push
test
dec
enter
inc
and
dec
icebp
testl
lret
jmp
clc
mov
fidivs
lretw
sub
cmp
push
test
loope
inc
push
decl
sahf
adc
js
dec
stos
mov
jbe
inc
aam
fistpll
and
fadds
push
dec
inc
aas
adc
stos
lret
xor
xor
ret
arpl
negb
shlb
mov
shlb
mov
sub
addb
add
mov
push
pop
fdivl
adc
xlat
mov
lret
xchg
mulb
cmp
faddp
mov
cmp
daa
jo
xor
in
jmp
cmp
sti
xrelease
mov
out
cmp
cmpsl
mov
fldl
cmpsb
xchg
xchg
mov
lods
pop
pusha
aad
je
insb
jb
and
cwtl
daa
jl
dec
xor
movsb
xchg
pop
js
xchg
imul
popf
mov
test
jnp
mov
out
dec
inc
addr16
ljmp
inc
pop
mov
stos
in
out
pop
in
out
es
mov
pop
inc
ljmp
imul
mov
mov
lret
iret
push
xchg
push
xchg
dec
jne
ret
cmp
sbb
mov
pop
or
clc
jnp
xor
and
cli
xchg
insb
testb
and
xchg
jp
jne
in
sbb
jno
mov
and
push
pop
xchg
sbb
fwait
ljmp
adc
mov
dec
or
aaa
inc
fistpl
fimull
cmp
mov
daa
adc
xchg
ffreep
cmp
inc
jmp
lods
arpl
sbb
out
aad
int
jecxz
rol
mov
mov
out
lock
sbb
outsl
push
xor
jbe
movsl
push
jbe
xchg
mov
idivb
jecxz
mov
adc
adc
dec
push
adc
sub
inc
jmp
mov
jnp
fsub
arpl
add
scas
jb
es
or
adc
ja
push
pop
aaa
sbb
clc
orl
in
xchg
dec
pop
fists
je
add
sti
dec
fidivs
push
pop
in
fldln2
xchg
adc
sti
push
lea
xor
xor
and
adc
mov
popa
sti
xchg
sub
adc
fwait
int3
xchg
cs
mov
dec
sbb
cmp
inc
or
mov
adc
mov
sub
sbb
ret
pop
xchg
stc
and
fstl
xchg
or
dec
inc
sbb
pushl
clc
aas
cmpsl
sbb
sub
mov
mov
pop
xchg
out
into
mov
scas
nop
movsb
xor
out
loop
cmp
pop
fwait
pop
scas
jp
ret
test
jmp
mov
test
mov
jnp
dec
pushf
sti
roll
loopne
fildl
rcr
shll
xchg
mov
cli
pop
dec
xchg
in
movsl
mov
add
and
sbb
rclb
xor
shlb
ss
add
push
cmpsb
lods
cmp
cmc
jo
inc
fdivrs
orb
in
cmp
mov
xchg
xchg
cmp
stc
push
rclb
and
mov
inc
push
jmp
stos
add
cmpsb
inc
jp
sti
andl
insl
push
xchg
and
push
mov
sti
jp
out
lea
cmp
imul
push
and
in
js
fnsave
pop
adc
mov
mov
inc
out
push
rcrl
and
dec
inc
and
cld
xchg
in
cmp
mov
test
lock
loope
jl
orl
cmp
mov
fidivs
pop
std
lea
add
les
cmp
xchg
movsb
cmp
jecxz
imul
dec
sbb
xchg
ds
inc
nop
and
jae,pn
imul
xchg
adc
dec
icebp
ss
sbb
js
pop
jge
es
push
dec
jl
or
es
xorl
enter
xchg
fisubl
div
pop
inc
cmpsb
push
scas
mov
jbe
in
sbb
xor
or
pop
or
gs
xchg
arpl
je
loop
in
ret
aaa
mov
ds
mov
cli
fadds
xlat
dec
pop
add
dec
sbb
add
jbe
call
int
add
ds
test
jne
and
icebp
jne
movl
mov
adc
std
add
cli
loop
lods
aas
sub
xchg
mov
or
or
or
ret
out
sbb
adc
xchg
out
jne
gs
lahf
jo
movsl
out
or
dec
sub
jg
cmp
rcr
scas
pop
dec
imul
push
aas
into
mov
mov
jnp
and
xlat
outsl
jle
sbb
sub
call
mov
mov
sbb
out
xchg
xchg
xor
in
xchg
int3
jns
test
scas
test
mov
or
dec
aaa
xchg
push
lods
or
xchg
fsubrl
push
mov
push
packuswb
ficomps
pop
fidivl
cmp
cli
jb
mov
hlt
leave
stc
sbb
cwtl
add
pop
addr16
jns
cmp
int
dec
mov
adc
loop
inc
rcr
popa
inc
xchg
xchg
sahf
push
jbe
inc
cltd
and
sub
xchg
push
call
mov
dec
loope
out
cld
fistps
mov
sbb
nop
lcall
push
clc
xor
or
xchg
push
add
repz
pop
shlb
scas
mov
push
jmp
imul
mov
repnz
idivl
cmp
cltd
sbb
pop
xor
das
sbb
mov
ret
push
sub
popa
cmp
cld
or
pop
sub
add
xchg
xorl
or
out
iret
sub
inc
mov
jns
in
fcoms
adc
sbb
leave
jae
xor
movsl
or
ss
mov
or
pop
insb
jge
mov
dec
add
daa
pop
sti
shrl
lea
jns
jmp
xor
mov
inc
pop
and
lds
xlat
push
arpl
hlt
sbb
imul
mov
ret
xchg
popa
pop
or
bound
push
insl
pop
sbb
pop
lret
std
sub
rcrl
aaa
mov
adc
call
push
in
and
dec
lds
jle
adc
fstl
dec
sbb
out
filds
cmp
mov
jmp
dec
sbb
mov
lret
aaa
cltd
scas
xor
pop
push
je
data16
popa
sahf
ret
rcll
orl
cmpsb
fisttpll
dec
cmp
insl
daa
movsl
test
repz
aam
xchg
loop
pop
jp
aam
cmp
mov
dec
lret
jo
push
xor
mov
cmc
sarb
sbb
loop
fwait
test
leave
cmpsb
mov
lods
adc
testb
push
inc
cmc
jp
cmpb
sub
sbb
jecxz
cld
stos
repz
test
sub
imul
in
adc
xor
adc
add
ret
inc
fsubp
pop
cli
clc
sbb
stos
jmp
fcmovu
and
mov
fnstenv
sbb
add
sub
mov
cmp
sbb
lods
push
out
pop
jns
outsb
sahf
dec
xchg
xor
dec
outsb
cmp
xor
ljmp
aaa
pop
mov
repnz
hlt
test
clc
sub
sbb
stos
xchg
xor
fcmovbe
sub
and
jbe
cmp
les
dec
cmp
inc
inc
mov
jo
nop
or
and
ljmp
xchg
scas
insl
jbe
fisttps
lods
sub
stos
clc
gs
or
aas
sbb
mov
push
xor
add
movsl
jne
test
sub
sbb
mov
jl
or
sar
fwait
adc
push
pusha
cmp
arpl
sarl
adc
mov
rcr
fcoml
bound
std
xchg
loopne
rcrl
mov
push
in
rcll
push
mov
fdivs
mov
fnstsw
cmpsb
mov
and
xchg
loop
dec
arpl
sub
push
subl
fildl
ror
popf
xor
inc
icebp
inc
jbe
lcall
mov
pop
cltd
scas
inc
lds
call
adc
jge
add
mov
scas
mov
addr16
fwait
jae
add
clc
js
pop
cmp
insb
fstl
mov
push
dec
pop
fnstcw
add
jecxz
repz
into
sarl
and
xor
add
adc
outsb
jae
inc
dec
push
mov
orl
faddp
into
sarl
and
xor
add
adc
outsb
jae
inc
dec
push
mov
add
jae
ret
into
sarl
mov
push
adc
outsl
jae
inc
dec
push
mov
orl
pop
ret
dec
rol
and
cltd
mov
push
fs
out
mov
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
sbb
pop
cs
pop
stos
cmp
pop
add
shlb
scas
xchg
fsubp
into
cmc
inc
xlat
jp
push
aaa
push
pop
cs
pop
addr16
sti
jle
outsb
and
xchg
idiv
xchg
xlat
cmpsb
mov
aaa
lods
scas
notb
pusha
test
lods
aam
fmul
in
mov
sahf
stos
mov
xlat
jo
inc
pop
jb,pt
inc
pop
push
dec
cld
movsb
pop
inc
fldenv
xlat
fwait
sbb
jp
sub
repnz
repnz
data16
mov
pop
jecxz
push
out
push
xchg
out
xor
adc
es
xor
cmp
xchg
xor
dec
jbe
pop
fmul
sub
sbb
mov
ss
rol
ret
daa
fistl
ret
addr16
pop
cmpl
imul
into
or
das
out
test
xor
fistps
push
mov
mov
dec
in
mov
inc
jmp
fwait
mov
testb
loop
loope
xchg
mov
push
shrb
addl
mov
aaa
js
push
out
or
in
push
inc
daa
pop
subl
mov
popf
enter
adc
enter
xchg
lret
les
int3
out
mov
dec
inc
push
cmp
adc
sbb
outsb
xor
repz
lods
mov
mov
bound
dec
dec
xor
or
inc
mov
cmp
stc
ret
mov
mov
mov
jb
bound
push
jge
or
inc
outsb
push
sahf
cmpsl
mov
fsubp
into
idiv
out
xlat
push
daa
push
aaa
ds
cs
pop
addr16
ja
inc
outsb
push
sahf
cmpsl
mov
fsubp
into
idiv
out
xlat
push
daa
test
cld
movsb
out
cmp
mov
sub
sbb
or
lods
mov
add
test
dec
or
adc
adc
insb
popf
fs
lds
imul
add
jae
popf
mov
shl
mov
shll
lods
out
lahf
dec
add
jg
push
loop
adc
cmp
out
mov
and
inc
mov
xor
arpl
pop
mov
popf
fmuls
jbe
adc
iret
test
and
push
popf
xorb
or
mov
sbb
test
popf
fcomps
sub
fdivs
adc
sarb
add
xchg
shr
mov
mov
call
ficomps
push
sbb
push
stc
adc
pop
adc
inc
adc
add
mov
cli
jbe
test
pushf
ja
push
push
iret
cmpsb
inc
mov
fmul
test
add
repz
loop
pop
add
in
out
jecxz
xchg
mov
int
and
and
adc
ret
mov
stos
mov
lea
cwtl
lock
into
fidivrs
push
nop
cwtl
sbb
test
mov
mov
clc
test
dec
dec
movsl
push
or
sti
mov
jp
test
cltd
xchg
aad
xlat
aas
fwait
sub
mov
sbb
test
jno
pushf
inc
cltd
outsb
out
cwtl
fbld
jns
push
data16
lock
jno
data16
pop
lcall
loopne
js
shr
inc
push
repnz
sarl
push
jns
out
xor
dec
xchg
rorb
or
xor
xchg
dec
mov
outsl
adc
int3
cmpsb
jne
fcoml
dec
add
push
cli
idivb
das
pusha
cmp
sub
pop
test
sub
dec
mov
add
repnz
popa
adc
lods
test
xor
inc
cwtl
cmpsb
mov
hlt
mov
and
icebp
out
in
pusha
xor
ljmp
dec
gs
sarb
push
xor
out
dec
pop
or
jae
jecxz
out
adc
es
mov
out
mov
test
fnstsw
lods
xchg
mov
sahf
insl
aas
pop
iret
mov
xor
je
push
pop
mov
sbb
inc
cmpb
xchg
and
sbb
leave
stc
sbb
loop
or
fs
popa
ljmp
cmpsb
cmp
add
cmpsb
je
popf
je
out
loopne
int
mov
jb
test
pop
fcmovu
test
scas
xchg
scas
sbb
jb
xchg
or
faddl
mov
fmul
mov
repz
jle
pop
outsl
es
jo
ret
pop
out
out
ss
jbe
pop
out
stc
jb
mov
ret
jb
mov
cmp
cltd
jo
pop
push
mov
mov
aam
jle
push
cltd
fprem
test
xchg
call
mov
scas
imul
inc
mov
iret
in
add
cld
fwait
ljmp
pop
pop
or
push
mov
lcall
fldt
pop
fisubl
fimuls
imul
subl
fwait
out
mov
push
incl
enter
pop
pop
pop
rcll
dec
jo
cli
fmull
push
gs
andb
mov
push
xchg
sbb
sti
insb
push
ret
cwtl
push
gs
mov
xchg
and
jnp
sbb
aam
dec
lahf
scas
and
xlat
mov
int3
out
adc
cmp
sub
ds
fdivl
fwait
ss
leave
sub
adc
pop
jae
mov
sbb
cmp
push
test
mov
mov
cld
aas
add
mov
mov
fimuls
test
daa
pop
pop
pushf
addr16
sti
xlat
popf
fldt
aad
movsb
push
rclb
lods
rcrb
cmp
out
dec
jecxz
and
rcll
mov
sar
pop
out
decl
mov
sarb
dec
ficoms
loope
pusha
mulb
xor
xchg
fdiv
ljmp
out
aad
push
dec
mov
rolb
push
pop
push
sbb
or
cmp
and
pop
lret
xor
cmp
push
and
gs
cmpl
or
insl
push
jbe
adc
jl
enter
xchg
jecxz
push
sbbb
jbe
add
stos
add
push
stos
popf
push
sub
xor
in
out
movsl
lods
mov
fwait
idivl
adc
jmp
push
enter
pushf
push
or
and
mov
test
add
mov
icebp
mov
xor
mov
rclb
mov
add
aam
push
adc
mov
mov
and
pop
inc
and
aaa
jecxz
test
jl
sub
xlat
jmp
mov
jno
cmpb
or
sahf
or
inc
iret
push
cmc
and
dec
loope
push
push
imul
lods
shlb
mov
ret
xchg
jp
jns
add
scas
lock
mov
in
dec
pushf
inc
sti
xlat
cmpsb
push
push
gs
test
or
gs
or
mov
add
xlat
mov
and
push
pop
stos
or
xor
idivl
push
jl
in
stos
in
out
dec
in
cmpsl
xor
sbb
call
xchg
subl
cld
xor
sbb
sbb
fdivp
leave
or
cmpsb
mov
adcb
sub
popa
int
lods
jb
loope
jl
mov
std
push
push
mov
or
clc
mov
jl
popa
adc
mov
push
jle
dec
jp
and
push
jns
mov
lods
pop
in
rcl
aam
sarl
xor
dec
insb
sarb
sub
in
xor
xchg
data16
jl
ret
call
aam
insl
sbb
test
push
testl
sbb
or
inc
sahf
pushf
xor
or
xchg
imul
or
inc
mov
popf
push
cli
xor
sub
test
lods
cltd
repnz
test
lea
add
mov
push
shlb
ja
cmp
icebp
leave
sysexit
lcall
sub
mov
cmpsl
pop
sbb
jp
sub
pop
pop
xor
shrb
cmp
lock
sub
and
jmp
xor
pop
pop
inc
call
mov
fimull
adc
dec
and
repnz
fimull
inc
inc
dec
into
data16
shlb
arpl
sub
in
mov
cmpsb
lods
les
mov
adc
addb
dec
add
rorl
jb
mov
jmp
and
rorb
dec
mov
sub
cmp
scas
lods
sbb
inc
jge
into
inc
xchg
in
addb
push
sub
pop
or
inc
movsl
mov
sahf
lods
push
test
push
dec
imull
or
popa
adc
lret
nop
push
cmp
sahf
dec
inc
and
xchg
inc
nop
inc
inc
sarb
mov
stos
add
jno
cmc
and
fists
roll
mov
and
xchg
into
stos
mov
inc
xor
daa
call
ja
mov
sub
scas
sbb
or
xor
dec
inc
das
dec
std
fcmovnb
rcrl
insl
inc
movsl
out
gs
add
shll
xlat
std
or
push
pop
mov
int3
sbb
mov
push
lcall
rcrl
fisubl
jl
push
xchg
test
dec
les
pop
push
cmc
fsubl
jb
jecxz
ffree
mov
mov
pop
and
data16
mov
xchg
xchg
sbb
push
std
add
sbb
in
xchg
int
leave
pushf
pushf
cld
test
add
testl
out
into
popf
sbb
pop
xchg
out
stos
out
push
sbb
lcall
mov
daa
xor
dec
in
and
cmp
arpl
imul
mov
ret
sub
iret
and
loopne
enter
sbb
iret
mulb
push
es
push
and
addr16
mov
lods
jbe
leave
cmpsl
add
or
xor
fsubs
les
aam
pop
sbb
hlt
ss
in
sbb
aad
frstor
cwtl
xor
lahf
and
es
ret
cwtl
sbb
ss
sbb
dec
and
in
roll
pop
push
mov
movsb
fidivs
addr16
insb
leave
clc
dec
sub
stos
popf
lds
sar
lcall
loop
pop
adc
xchg
iret
dec
popa
inc
fisubrs
aas
rcl
xor
les
fdivrl
jl
sar
fcomi
shl
in
lock
mov
mov
push
rorl
out
mov
pushf
daa
or
cmp
fsubr
push
xchg
insl
fisttpl
in
loopne
cmp
aas
pop
jge
push
stos
jno
pushf
adc
lods
inc
mov
add
push
mov
sbb
sub
mov
jno
stos
add
cmp
xor
jmp
lahf
push
adc
fisttpll
out
fisubrs
mov
pop
iret
cwtl
scas
ret
into
gs
dec
ljmp
adc
add
cmp
xor
out
sbb
cmc
hlt
fdivrs
push
dec
dec
pop
or
pop
dec
push
in
add
pop
sbb
sahf
pop
sub
test
fnstcw
lret
lods
pop
in
xchg
pop
jmp
sti
hlt
mov
xchg
adc
push
lret
push
fcmovnu
out
mov
xchg
movl
movsb
pop
lods
imul
pop
cmp
push
cmp
sbb
sub
jge
adc
mov
jne
fcoms
mov
adc
mov
lds
or
or
mov
ss
out
push
clc
jp
pop
rorb
push
dec
cmpsb
cmp
movsb
fs
lret
movsb
dec
aas
add
sub
sub
ljmp
sar
and
ss
testb
daa
jmp
in
add
mov
rcrb
and
cmp
mov
add
pushf
mov
push
jp
das
gs
cltd
jl
inc
std
clc
xchg
pop
dec
mov
cld
sti
sub
inc
xchg
lcall
mov
mov
fimull
jmp
enter
adc
ret
sub
dec
mov
mov
cmpsb
mov
repz
xchg
jbe
rol
pop
inc
lods
xor
lea
sub
xor
repz
stos
orl
cltd
mov
pusha
fs
in
xor
jnp
dec
and
out
xchg
dec
ret
and
cwtl
imulb
cmpsb
mov
inc
xlat
xor
in
mov
add
std
incb
mov
sbb
xchg
leave
xchg
popf
in
dec
xor
stos
mov
adc
test
cs
jnp
mov
inc
in
inc
test
jl
xor
mov
push
mov
fdivrs
mov
pushl
in
enter
cli
ret
jnp
jecxz
jne
dec
pop
pop
shll
pop
sbb
aad
repnz
mov
mov
mov
and
adc
loope
pusha
test
into
std
notb
cmc
mov
and
cmp
jbe
sbb
cld
mov
pop
les
pop
orl
mul
adc
xchg
arpl
or
dec
push
cmp
jbe
mov
jp
or
pop
jbe
aas
aaa
xorb
jle
sbb
xor
pop
test
arpl
ret
js
mov
cmp
emms
jle
sbb
mov
stos
mov
jbe
imul
cmc
and
jno
aad
pop
lods
hlt
xchg
add
lds
push
add
sarb
out
inc
scas
ret
addr16
cmc
das
mov
lahf
test
push
inc
jg
pop
xchg
fsubl
fcoml
adcb
pop
pop
aam
jne
int3
rcl
add
hlt
repnz
loope
fdivl
cmc
inc
cwtl
mov
mov
std
in
rcl
call
ja
test
cmpsl
push
jb
mov
subb
mov
enter
add
pop
shrl
in
and
int3
das
inc
push
mov
xchg
adc
xchg
push
inc
xchg
xlat
sahf
repz
lea
out
cmp
loope
cmp
decl
testb
adc
loopne
lds
mov
call
jle
cmp
test
cmp
lds
pop
dec
cmp
arpl
inc
mov
mov
ja
nop
lret
imul
sub
or
xor
test
push
aad
js
add
scas
jno
push
push
mov
cli
cmp
inc
popa
cld
or
jmp
pushf
jne
pusha
sahf
les
push
mov
sarb
or
ret
pop
rolw
cmpsb
sbb
data16
pop
clc
lcall
xor
testb
sub
mov
rcr
cmc
jmp
mov
pusha
fidivs
lret
xor
push
mov
aam
sub
xor
cmp
adc
outsb
pop
pop
and
add
dec
cmp
push
mov
test
jnp
cmp
je
or
dec
icebp
lods
inc
test
cmp
addr16
jle
cli
lock
or
xor
insl
rcrb
and
mov
dec
popf
fidivrs
mov
add
mov
xlat
vunpckhps
test
mov
shl
mov
fdivl
xchg
sbb
mov
test
mov
pushf
mov
pop
pop
imul
jl
into
push
in
mov
inc
push
push
mov
adc
jnp
add
sbb
fucomp
sub
jge
je
fbld
cs
lcall
mov
jmp
sbb
rcl
icebp
std
sub
sbb
test
lret
mov
jl
stc
scas
lahf
add
icebp
cmp
push
pop
mov
arpl
outsl
sbb
adc
fs
ret
sub
fistpll
lret
inc
cs
call
sub
or
adc
shrb
lods
es
loop
bound
push
cmp
or
push
inc
sub
mov
rcll
jg
pop
jg
sbb
fld
out
nop
rorb
cs
mov
cmp
int3
xchg
pop
js
and
push
shlb
push
dec
lods
sub
ror
add
mov
pop
cmpsb
mov
jb
mov
pusha
lcall
outsb
les
je
cmc
test
adc
mov
std
fs
xor
mov
aad
orb
mov
inc
pop
inc
fnstsw
mov
jle
push
adc
inc
lods
lcall
in
out
mov
pop
sti
lods
mov
jno
xor
mov
orl
jmp
inc
insl
stc
insb
pop
mov
dec
fadds
adc
outsb
stos
cmp
jmp
int
fcoml
cmpsb
push
cmp
movsl
sbb
iret
loopne
push
in
aaa
mov
cld
lahf
push
pushf
je
sbb
add
or
or
jp
add
int
sub
xor
adc
fdivr
mov
jns
lcall
pusha
mov
mov
out
or
aad
pop
lret
pop
in
push
int3
mov
int
sbb
out
fstpt
push
das
ljmp
adc
leave
fmuls
enter
into
pop
xor
push
jns
add
and
sbb
cltd
call
insb
dec
push
call
ficoms
mov
or
jge
push
repnz
popa
fnsave
lds
sti
fistpl
data16
push
out
and
push
mov
xchg
mov
mov
push
mov
pusha
fisttps
push
and
cmpb
xchg
sub
test
and
lcall
inc
pop
pop
shlb
int3
xor
sub
push
pop
push
pop
fst
movsl
or
fwait
into
ja
cmp
inc
ficomps
push
shrl
roll
add
outsl
dec
or
jg
add
mov
jmp
mov
scas
add
xchg
xor
mov
push
stc
xorb
icebp
mov
es
pop
ret
add
inc
in
cmc
push
sub
ds
mov
mov
pop
mov
insb
movsb
cli
pusha
mov
in
cmpsl
insl
add
mov
jae
mov
sub
mov
jno
mov
sub
xor
in
sbb
negl
cmp
jnp
js
or
mov
sbb
loop
ret
mov
fwait
mov
aas
xorb
outsl
mov
adc
jmp
fisttpll
imul
rorb
shrb
xor
adc
dec
lds
or
je
jl
cmp
cmp
and
inc
js
mov
rcrb
scas
dec
add
cmp
jge
arpl
cmp
fwait
in
mov
fdivr
loop
mov
std
or
or
jb,pt
js
imul
cwtl
shll
cmp
int3
shld
pop
daa
ljmp
pop
movsb
lret
sub
or
int
sti
stos
and
sub
test
ds
lret
pusha
and
shr
or
and
inc
ret
pop
arpl
jns
mov
mov
push
adc
pop
daa
lods
shrb
cmp
mov
push
dec
jge
xor
gs
aas
dec
mov
fs
push
call
outsb
cltd
adc
pop
mov
in
fcmovnbe
daa
lahf
pop
add
sub
out
sarl
mov
cmp
push
xor
fmull
sub
pop
outsl
mov
lods
inc
in
and
out
adc
out
lds
ret
shrl
filds
mov
jp
sbb
mov
nop
sarb
popa
sbb
sbb
loop
lods
add
adc
pop
out
jle
shr
aam
mov
jne
xchg
inc
out
cmp
shlb
int3
or
loopne
push
sbb
jns
xchg
adc
ljmp
out
or
imul
lret
hlt
push
cld
clc
push
pop
push
xor
jbe
cli
cltd
xchg
ucomiss
add
scas
xchg
lea
push
adc
idivb
jno
mov
in
fidivl
mov
dec
sbb
mov
ljmp
mov
inc
aas
or
jb
jg
js,pn
mov
xchg
div
mov
loop
es
push
popa
inc
je
push
xor
xor
icebp
jge
adcb
fldcw
fstpl
fwait
inc
stos
and
push
and
shlb
dec
mov
out
shl
push
out
out
adc
nop
in
push
shll
cmp
ss
mov
outsl
mov
pop
fnsave
fldt
aam
dec
bound
jl
jmp
jg
jecxz
mov
rcl
xchg
cmp
push
jecxz
and
cmp
pop
mov
hlt
and
cmpl
jae
dec
jmp
dec
jmp
pop
xchg
aas
dec
inc
ret
fcmove
in
cmp
jecxz
push
and
mov
push
call
insb
fbstp
jns
push
inc
and
add
sar
into
stos
pop
jmp
cmp
ja
insl
dec
mov
jle
push
jae
pop
or
sbb
mov
ret
pop
ljmp
jg
sub
shl
rolb
mov
movsb
and
in
pop
ja
pop
mov
mov
cmp
mov
xchg
bnd
js
lods
inc
adc
sbb
and
cmc
jle
orb
dec
dec
stc
add
mov
and
jnp
sub
jmp
jne
xor
pop
push
jecxz
sub
xor
out
mov
xchg
movsb
iret
leave
test
and
mov
lret
pop
jle
dec
in
popa
mov
dec
jno
inc
push
das
cmp
leave
shl
lret
cmp
mov
das
mov
jle
pop
pop
icebp
test
inc
add
scas
and
xor
lods
xchg
push
adc
jecxz
bnd
lahf
test
movsl
add
lds
loope
std
movsl
das
ss
push
outsl
pop
test
jns
dec
mov
or
cmpsb
xchg
int
push
andl
pop
pop
mov
sbb
pushf
fidivrl
push
pop
xchg
notl
and
xchg
ss
xchg
adc
jns
inc
fsub
fcmovu
out
mov
shrb
outsb
pop
ds
arpl
js
mov
adc
clc
inc
ss
pop
mov
in
data16
jno
push
fdivl
test
or
mov
dec
dec
mov
push
daa
mov
xlat
add
and
cmp
decb
stc
push
rolb
adc
dec
or
das
pop
sti
adc
js
lds
mov
push
mov
ljmp
daa
add
adcl
push
cmp
mov
dec
sbb
out
mov
cmp
push
xrelease
dec
andb
pop
cmp
xor
adc
jle
mov
cmp
stc
test
jle
sub
inc
pop
cmpsl
jl
dec
mov
mov
add
mov
rclb
cmpsb
rcrb
pop
ret
mov
lds
add
popf
add
arpl
sub
dec
mov
and
push
inc
ret
jle
sti
int3
xor
cwtl
sbb
xor
sbb
jb
jo
xor
out
lahf
dec
out
iret
pop
pop
jp
mov
dec
lods
lds
data16
xchg
ljmp
call
mov
repnz
lcall
push
xor
loop
sahf
push
or
scas
jne
les
fidivs
cmp
cmp
ja
mov
or
or
xchg
cs
subl
push
or
push
popf
in
xchg
stos
add
mov
sti
stc
inc
mov
lcall
scas
push
ret
xchg
subl
loope
lds
sbb
push
pop
sbb
mov
dec
dec
ss
pop
mov
push
lock
pop
sub
lock
jbe
mov
out
jb
xchg
sbb
movsb
inc
lock
dec
jns
add
pop
pcmpeqb
ljmp
sbb
negl
loopne
push
adc
stos
adc
mov
in
insl
in
cmp
or
xchg
sbb
test
push
mov
add
add
ret
push
std
xchg
pusha
repnz
das
and
les
out
push
daa
out
out
idivl
mov
cld
movlps
adc
sub
push
bound
push
add
pop
pop
jno
decl
jbe
sub
test
aaa
mov
sti
in
outsb
fwait
ret
cmp
hlt
es
adc
bound
pop
mov
dec
adc
xlat
jge
push
movb
aam
mov
rorl
mov
scas
and
add
lret
mov
fistpll
xchg
sub
roll
mov
lods
lret
push
mov
lret
xchg
stc
push
addr16
into
push
cmp
pop
ljmp
jb
or
je
and
movsb
jecxz
out
mov
jmp
mov
popf
jae
imul
cmp
mov
jecxz
inc
push
lock
scas
mov
pop
rcrb
jae
fisttps
pop
rcr
enter
pushf
push
das
lods
into
mov
pop
pop
addr16
ja
inc
outsb
push
sahf
cmpsl
mov
fsubp
into
idiv
out
xlat
push
daa
push
aaa
ds
cs
pop
addr16
ja
inc
outsb
push
sahf
cmpsl
mov
fsubp
into
idiv
out
xlat
push
daa
jg,pt
jg
pop
into
addr16
fistpll
scas
push
sahf
jg
mov
xchg
idiv
out
xlat
or
push
aaa
fs
push
push
pop
addr16
ja
out
push
sahf
pop
jno
adc
scas
loopne
outsl
inc
or
cmp
sub
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
pushf
das
jns
icebp
psraw
lahf
xlat
call
pop
add
popa
adc
add
iret
and
fldcw
sarl
psraw
xchg
outsl
subl
mov
popa
lahf
adc
and
or
inc
es
daa
pop
xorl
inc
push
scas
sub
ljmp
push
mov
arpl
dec
mov
xchg
js
cmpsl
les
bound
bnd
ljmp
xor
cmpsb
xchg
mov
push
push
mov
push
mov
pusha
xchg
nop
mov
xorl
lock
lds
adc
lahf
pusha
out
dec
mov
iret
jle
xchg
jno
rorb
outsl
mov
mov
inc
popa
jo
adc
fmulp
push
stos
cmp
push
lock
scas
add
cmc
inc
jmp
inc
mov
es
add
popa
pushf
push
pop
push
rol
dec
push
testl
dec
pop
pop
mov
pusha
xchg
movl
cmp
das
icebp
push
lea
xchg
outsl
lds
dec
sbb
scas
shll
jno
pop
out
aad
fisubs
push
jp
insl
hlt
push
mov
rolb
and
outsl
std
inc
mov
dec
push
mov
sub
outsl
loopne
fnstsw
shrb
fildl
ficoml
or
incl
stos
mov
imul
mov
mov
mov
adc
add
xor
and
shrl
sarl
psraw
xchg
outsl
cmpl
scas
inc
mov
adc
add
xor
and
shrl
add
sbb
jnp
mov
and
int
mov
jmp
not
js
dec
insb
inc
sbb
lret
pop
lahf
testl
sub
sub
sbb
pop
test
cs
inc
ret
cltd
pop
imul
mov
push
cmp
or
add
and
insl
lods
jno
nop
adc
aaa
filds
xchg
daa
cmc
xchg
imul
cmp
repz
and
sub
push
lret
xchg
stc
std
ret
or
rorl
repz
dec
jae
mov
mov
cmovno
push
mov
sbb
adcb
inc
enter
mov
scas
adc
imulb
imul
dec
push
icebp
adc
push
pop
fsub
arpl
enter
repnz
mov
mov
lret
adc
add
cmp
mov
test
out
nop
xchg
ss
pop
fdivrs
inc
mov
call
into
fsubr
mov
jns
fmuls
cs
dec
cs
mov
movsl
or
es
jb
out
icebp
dec
std
sar
mov
xor
mov
xchg
pop
pop
inc
dec
push
mov
jl
jne
pop
out
adc
pop
add
test
or
xor
push
ror
pop
mov
mov
pop
insb
adc
sub
mov
mov
icebp
push
mov
push
pusha
adc
aad
cmp
inc
mov
enter
rclb
adc
pop
int
mov
addr16
adc
hlt
leave
jno
pop
dec
sub
test
pop
and
mov
cli
dec
pop
mov
mov
ds
mov
sub
pop
push
es
inc
loopne
clc
inc
in
push
out
sub
push
out
addr16
xor
lahf
cmpsl
inc
rorb
push
lock
xchg
dec
lret
popa
dec
jl
rorl
and
in
jno
mov
cmc
dec
xor
into
lcall
xor
jb
call
xchg
lods
cs
rorb
sbb
or
sub
jb
addl
add
fwait
mov
mov
dec
mov
mov
mov
fcmovb
daa
jo
decl
imul
adc
xchg
ffree
jb
insb
push
cmp
ret
push
inc
xchg
xor
push
push
or
xchg
mov
push
pop
fildl
mov
add
sbb
jbe
stos
stc
sub
test
sbb
push
fwait
add
mov
repz
xchg
mov
fsubs
add
inc
inc
adcl
gs
lock
sub
jmp
daa
popf
mov
fwait
add
cltd
push
dec
in
sub
insl
push
in
jnp
ljmp
arpl
sub
std
mov
cmc
pop
lcall
cmp
xor
xchg
test
loop
sbb
pop
pop
sbb
lret
push
stos
gs
xor
adcl
push
pop
sub
fwait
ja
cmc
push
imul
mov
ds
cld
negb
adc
jno
cmc
sub
in
sub
scas
fstpl
sbb
and
mov
jecxz
subl
and
add
dec
cli
inc
adc
jp
sbb
inc
ds
mov
imul
loop
test
pop
rcrb
or
popf
loope
cmp
ret
enter
add
pop
jno
cs
xchg
cmpsl
scas
lods
jbe
cli
imul
popl
xor
pop
shlb
in
mov
jecxz
push
push
mov
lret
mov
cmpsb
jb
xchg
mov
ljmp
lret
rcr
std
mov
std
jge
push
in
cwtl
insb
jb
xor
or
mov
add
sbb
cmpsb
cmp
inc
jnp
cwtl
outsb
mov
nop
jae
scas
adc
lods
push
or
jmp
add
xorb
cmpsl
xor
mov
gs
std
pusha
add
mov
sbb
sub
jle
leave
add
pop
sub
arpl
dec
jmp
dec
pop
sub
dec
movsb
or
cs
shll
xchg
add
mov
cld
push
ja
mov
scas
mov
notl
mov
test
pop
push
or
inc
cmp
sbb
rclb
or
call
scas
pop
adc
push
adc
mov
daa
lret
add
cmpb
stos
test
xchg
clc
mov
xorb
dec
popf
pop
jmp
mov
fmul
leave
fcoml
xor
push
adc
push
jp
adc
pop
xor
in
movsl
repnz
jno
adc
add
dec
repz
adc
daa
mov
pop
sahf
pop
clc
inc
jns
or
es
out
into
mov
sahf
fs
loop
bound
fstpl
cmp
pop
std
push
nopl
adc
iret
push
mov
xchg
ja
mov
icebp
cmpsl
std
insl
test
mov
mov
sbb
pop
xor
pop
rorb
popa
cmpsl
xorb
xorb
call
aad
mov
inc
inc
pushf
add
repz
add
punpckldq
out
add
jae
es
lods
xchg
jle
sub
enter
push
icebp
mov
call
enter
push
iret
out
imul
lahf
loope
cmpsb
sbb
test
sub
push
pop
int
incl
loop
cmp
fwait
add
arpl
jne
jne
repnz
scas
outsl
add
xlat
inc
inc
xor
mov
shr
inc
movsl
push
ror
pusha
int
in
or
sbb
ficomps
xorb
inc
stc
mov
and
sub
pop
sbb
adc
in
push
repz
mov
pop
xor
xchg
mov
sub
xor
sub
adc
xor
fwait
test
ljmp
pop
and
jge
inc
lods
sahf
stos
fsubrs
js
test
popf
mov
mov
imul
loope
scas
push
nop
or
inc
cmp
daa
imul
mov
xchg
cs
mov
dec
lret
insb
xor
cmpsl
jae
movsb
jno
push
xchg
pop
inc
adc
fsubrl
jne
out
or
sbb
mov
ja
cmpb
push
enter
ljmp
cmpsl
jbe
test
ss
jge
pop
jecxz
or
jo
pop
mov
test
mov
xor
stos
lea
scas
hlt
xchg
insl
arpl
vmwrite
mov
lea
jo
sbb
mov
in
pop
mov
push
in
ja
cmp
jmp
inc
in
inc
aas
sub
sbb
sbb
pop
xor
add
repnz
sub
inc
mov
out
cmpsl
mov
stc
fwait
add
adc
push
push
push
push
les
mov
imul
mov
ret
out
enter
incb
mov
push
int3
pop
daa
dec
faddl
add
xchg
daa
addr16
pushf
mov
repz
addl
cvtpi2ps
cmc
stc
shll
pop
push
cmpsb
fucomip
cld
xchg
enter
xchg
push
test
popf
loope
xchg
ja
movsl
or
sub
jb
out
iret
clc
ljmp
ja
jg
pushf
or
inc
mov
adc
mov
pushf
hlt
lds
inc
sub
jecxz
xchg
xchg
mov
mov
lds
push
outsb
incl
jne
pop
orb
movsb
jl
adc
jns
xor
pop
add
adcl
sbb
ficompl
cmp
shll
aaa
insb
int
pop
push
ja
dec
movd
mov
outsb
and
ds
push
xchg
mov
lret
icebp
sahf
ficoml
xchg
adc
loope
cmp
data16
sbb
and
jg
push
push
or
test
pop
sbb
mov
lahf
andb
filds
scas
sub
jo
in
pop
mov
mov
mov
repnz
pop
out
and
xchg
pop
xchg
sti
test
mov
mov
mov
ret
jecxz
add
out
push
adc
pushf
sbb
rcr
js
scas
imul
mov
push
cmpsl
out
mov
cmpl
sahf
jne
loopne
das
out
inc
pop
lea
clc
iret
or
sbb
push
cmp
inc
sbb
lret
xor
dec
inc
sub
xor
test
push
dec
lret
and
and
fstp
out
push
push
xor
sbb
fsubrl
cmp
aaa
mov
iret
xor
cmp
jmp
lret
xor
outsl
jb
cmp
aas
data16
or
push
cmp
pop
nop
mov
loop
outsb
out
mov
movb
in
sub
lds
movb
int3
pusha
sti
mov
adc
fs
fistl
dec
iret
push
inc
out
xchg
jo
outsb
scas
fidivl
push
adc
mov
sbb
sub
adc
aad
inc
pop
je
out
lea
js
popa
jg
lods
lods
xchg
or
jmp
jle
movsb
dec
dec
jb
sbb
aas
pop
sbb
add
sub
push
jle
mov
in
pop
test
jnp
into
cmp
cmp
loop
jp
mov
ds
xchg
adcb
lret
fistpll
fwait
int3
add
jns
insl
jecxz
fs
ret
sub
jl
adc
pushf
mov
nop
lcall
pop
loope
mov
clc
gs
outsl
aam
ss
jne
jb
cmpsl
lahf
loopne
daa
mov
pushf
push
xor
pop
mov
movsl
in
inc
cmp
jp
sahf
pop
repz
adc
lock
mov
xchg
dec
add
mov
in
fdivl
sahf
sub
out
sub
mov
rorl
jne
mov
xchg
lods
adc
mov
out
jns
mov
flds
cwtl
int3
test
js
cmp
mov
mov
mov
leave
xor
xchg
in
dec
sub
cmp
das
mov
or
pop
scas
dec
mov
xor
push
mov
adc
in
inc
pop
jae
mov
scas
xchg
leave
adc
test
cli
cs
je
push
jge
pop
dec
pusha
dec
xor
sub
mov
dec
cmp
fnstsw
push
movsb
xchg
mov
inc
add
pop
inc
mov
cld
add
movsl
xlat
or
pop
sahf
mov
rorl
and
cs
ss
inc
dec
pop
rcrl
add
lret
xchg
lock
rcll
in
xor
cmp
push
or
push
xorl
cwtl
jecxz
test
or
xchg
xchg
fidivs
outsb
nop
add
push
lret
fidivrs
xchg
mov
es
jl
dec
add
jne
push
pop
out
push
out
sahf
and
dec
fldenv
vmovd
pushf
dec
or
aad
push
adc
aas
fidivrs
or
push
or
jecxz
icebp
inc
push
sti
jns
lcall
add
add
mov
shll
ljmp
lds
into
push
fidivrs
test
xlat
jmp
scas
daa
sarl
pop
dec
out
add
pop
pop
inc
pop
popa
js
xor
jle
repnz
cmp
lahf
pop
fidivrs
xor
aad
pop
cmp
ljmp
js
roll
loope
inc
or
add
sub
push
mov
test
mov
movsl
scas
mov
int3
hlt
xchg
ljmp
mov
adc
push
inc
aas
std
out
jmp
push
nop
mov
or
pop
aad
fstl
xor
mov
push
stos
shll
push
stos
test
in
adc
jbe
cmp
xchg
leave
iret
jo
jg
pusha
mov
imul
mov
je
shrb
aaa
stos
negb
and
int
loopne
mov
or
bnd
xchg
sbb
inc
shll
sub
xor
stc
xor
cld
aas
repz
into
xor
lods
aas
in
in
imul
mov
inc
mov
pop
cltd
sarb
outsl
stos
fs
clc
jp
inc
cmp
and
in
movsl
mov
loopne
and
mov
jne
push
addr16
push
in
inc
xchg
or
fsubp
fsts
lret
add
std
xchg
adc
adc
adc
jle
sub
jns
ds
mov
arpl
pop
pop
ficomps
xchg
pavgb
mov
mov
add
sahf
out
inc
decl
xchg
jo
xor
or
test
rolb
les
inc
lock
adc
lds
mov
fldt
mov
push
sub
pop
jno
mov
out
stc
add
call
daa
sub
bound
mov
add
fwait
aas
sbb
pop
sbbl
and
jecxz
sub
movsb
jle
bound
into
push
adc
xchg
jmp
lods
push
outsb
inc
bound
cmp
sti
cmp
in
leave
xor
addr16
or
xorl
pop
ret
pop
jns
add
mov
ret
cmp
xchg
movsl
andl
stos
mull
sub
cmp
ds
mov
mov
lock
repz
sbb
or
inc
mov
jbe
add
lea
es
ljmp
out
and
xor
pop
mov
pop
shlb
cmp
pop
adc
int3
mov
mov
movsl
dec
cmp
mov
xor
xchg
lcall
loope
push
dec
sub
cld
xor
cmp
mov
cmpsl
rcl
mov
test
aaa
jg
jge
cmc
sbb
or
incl
push
clc
adc
enter
dec
sub
js
push
add
pop
adc
sub
or
shll
adc
inc
iret
fisubl
scas
mov
adc
fwait
jecxz
in
fists
push
out
mov
xchg
insb
mov
cmp
ja
fldln2
aaa
mov
push
rolb
cmpsl
jnp
xor
fdivrp
jp
cwtl
xchg
js
aaa
fwait
xor
xchg
sbb
out
daa
sbb
adc
int3
jp
pop
mov
sbb
cmpsl
nop
or
in
jae
rclb
and
adc
or
or
mov
cmc
sbb
sub
scas
and
or
mov
iret
ds
pop
sub
sub
ja
out
and
fdivrl
pop
jno
mov
and
not
add
outsb
pop
jg
cmc
xchg
mov
xchg
stc
cmp
loope
mov
hlt
mov
mov
sub
push
and
pop
test
dec
inc
and
inc
adc
popf
xorb
sbb
pop
and
cmpsl
aas
cmc
mov
mov
enter
std
adc
gs
pop
test
pop
dec
and
mov
enter
jne
mov
inc
mov
test
add
ds
mov
mov
xrelease
ss
add
jp
test
shl
shll
mov
out
test
xchg
ret
cmp
insb
mov
mov
add
data16
ss
jge
cmp
pop
inc
adc
stos
push
jp
mov
sbbl
out
daa
sbb
div
sbb
imul
js
inc
mov
test
fdivrl
dec
cmpsb
cmp
pmaxsw
dec
test
pop
cmp
out
inc
add
jo
pushf
cs
ret
movsb
xor
cmc
into
xchg
inc
inc
hlt
dec
mov
or
leave
imul
pop
mov
fldt
loope
mov
rolb
aas
test
mov
cmpsb
test
addr16
insb
or
stos
add
aaa
xor
loop
add
pusha
inc
adc
leave
push
add
dec
movsb
in
hlt
mov
sbb
test
adc
test
repnz
xchg
shrl
shrl
cmpl
jo
andl
stc
push
cmp
aas
popa
or
push
fdivrp
push
into
jb
and
xor
shll
dec
das
imul
test
pop
push
aas
jae
js
bound
jl
jnp
add
dec
add
fildl
sub
repnz
adc
loop
in
in
cwtl
stc
inc
xchg
jmp
mov
ficomps
adc
mov
pop
xchg
and
inc
cmp
xchg
pop
and
lods
ss
call
cmp
pop
push
mov
ja
push
out
sahf
daa
mov
pop
cmp
insb
cmc
inc
dec
aad
push
movsl
xlat
fcmovnbe
pushf
out
mov
data16
in
pop
mov
mov
enter
mov
movsl
inc
shrl
push
and
outsl
and
cmpsl
ss
ljmp
shll
pop
jbe
inc
jp
pop
and
adc
je,pn
test
xlat
in
and
lea
adc
fcmovnbe
pop
das
mov
es
sbb
in
out
or
int
adc
mov
xor
jb
leave
jns
popa
aas
pop
mov
push
jb
or
daa
sub
test
filds
mov
xchg
add
dec
leave
lods
imul
ds
sub
push
push
imull
sub
fwait
insb
adc
sbb
jge
jae
movsl
xchg
jo
jb
aam
jbe
mov
movsl
and
pop
jl
outsb
mov
test
adc
mov
xorl
pminsw
push
mov
mov
xchg
mov
jno
mov
sahf
into
loop
and
test
push
loope
ds
xchg
jo
fsubs
stos
xor
into
iret
int3
das
stc
int
ret
and
jp
cmc
lret
sub
idiv
jmp
or
dec
jb
pop
xor
sbb
or
test
insl
in
aam
mov
cltd
cwtl
push
adc
or
ss
jno
jl
cltd
mov
fs
push
cmp
fisttpll
sbb
loope
daa
jnp
pusha
lock
outsl
outsl
adc
pop
mov
inc
cmp
lret
or
iret
in
rorb
sti
in
idivl
push
cmc
shlb
movsl
and
lods
in
out
or
call
lods
pop
outsl
pop
stos
les
scas
cmpsb
imul
decb
push
insb
xchg
hlt
in
cmpsw
xbegin
or
mov
in
hlt
jecxz
adc
xor
mov
cmc
pop
nop
mov
mov
xchg
mov
xor
fstpl
decl
cmp
inc
pop
cli
and
cwtl
scas
cmp
out
pop
xchg
pop
push
add
imul
xchg
pop
adc
cs
mov
jae
mov
push
je
pushf
cmp
jge
in
jo
movsl
addr16
push
jl
sbb
pop
loop
icebp
and
add
sbbl
adc
daa
push
adc
sub
iret
mov
scas
xor
jg
fisttps
fwait
js
inc
ljmp
vmread
mov
pop
and
mov
adc
dec
icebp
mov
sub
movsb
jae
enter
inc
popa
into
das
leave
sahf
or
xchg
fisttps
or
pop
dec
adc
fmull
sub
cmp
sub
cmp
mov
mov
and
int3
or
ficoms
lods
jge
cmp
add
pop
pop
sub
mov
lret
mov
loop
pop
dec
xlat
out
nop
and
nop
cmpsb
lcall
ffree
call
sti
movsl
jb
add
das
mov
jl
xchg
ficoml
arpl
aad
pop
fsts
jmp
pop
pop
or
add
mov
add
sub
push
xor
shrb
mov
loopne
push
out
push
adc
mov
enter
jae
mov
nop
pop
cmp
push
shrl
lock
jae
daa
movsb
incb
xor
sbb
adc
add
xchg
inc
cmp
push
bound
pop
xor
sbb
testb
dec
enter
mov
les
cmpsb
inc
imul
test
mov
nop
insb
jp
int3
push
xchg
sbb
rorl
jmp
xor
out
fiadds
movsl
mov
imul
imul
and
sti
pop
or
lods
and
xor
fucomip
sbb
mov
lds
jne
dec
subb
mov
mov
push
or
arpl
add
call
dec
pop
mov
insb
push
mov
insl
addr16
xchg
loopne
mov
cmp
lock
in
stos
ljmp
adc
and
xlat
mov
mov
pop
popa
mov
mov
cmp
sbb
ds
push
push
pop
sbb
loopne
mov
pop
aas
mul
shl
cmpsl
aad
mov
stos
stos
xchg
ret
push
add
int
pop
xchg
sbb
iret
pop
vunpcklps
popa
pop
out
adc
test
adc
sbb
leave
jle
mov
jge
or
and
jne
inc
pop
fmull
mov
pop
jp
fucomi
xor
mov
jle
adc
cs
adc
and
and
push
cltd
or
out
jo
jecxz
mov
in
push
sbb
das
call
mov
pop
stos
mov
xchg
stc
ja
clc
scas
int
dec
or
or
xchg
add
insb
adc
sub
fcompl
nop
mov
movsl
into
pop
stos
xchg
xchg
out
adc
push
lcall
xchg
or
in
popa
das
movsl
fldt
sbb
push
mov
cs
sti
incl
test
leave
scas
outsl
mov
mov
jle
icebp
jb,pt
jno
rcl
mov
out
inc
icebp
push
mov
cmp
je
in
push
adc
sbb
sbb
sbb
mov
ret
iret
pop
jecxz
inc
lea
adc
ret
add
lret
mov
cwtl
repz
dec
jge
mov
lret
and
jl
pop
inc
mov
out
dec
or
nop
cmp
cmp
mov
ficompl
or
inc
std
lods
andl
xor
push
shrl
or
aas
push
xor
xchg
leave
test
or
xchg
or
inc
inc
xor
push
sub
aaa
push
inc
and
and
nop
add
shrb
dec
imul
cwtl
xchg
rdpmc
pop
adc
bound
mov
out
pop
popf
add
cmp
dec
push
aas
jbe
add
xor
cwtl
pop
sub
sbb
pop
mov
cmp
or
js
xlat
movsb
cmpsl
fisttpl
fadd
add
mov
mov
xor
repz
es
in
mov
imul
leave
inc
cmp
icebp
xchg
cwtl
xorb
loop
push
or
add
sar
pop
sbb
xor
mov
popf
push
bswap
jbe
daa
or
mov
lahf
imul
pop
mov
ret
push
dec
out
pop
test
sbb
jmp
addl
in
call
push
inc
xor
movsb
jns
push
loope
mov
push
cmp
cltd
mov
inc
fidivrs
rorl
std
pop
xchg
outsl
cmpl
scas
inc
mov
adc
add
xor
and
shrl
sarl
psraw
xchg
outsl
cmpl
scas
inc
mov
adc
add
xor
and
shrl
ret
psraw
nop
outsl
test
dec
mov
mov
adc
sbb
xor
sub
cmp
leave
pop
xchg
outsl
xchg
jg
dec
and
fisttpl
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
