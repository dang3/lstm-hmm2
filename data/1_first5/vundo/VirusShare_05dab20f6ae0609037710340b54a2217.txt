add
add
add
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
in
sub
lea
push
mov
push
call
cmpl
je
cmpl
je
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
push
push
push
pushl
call
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
pushl
pushl
pushl
push
push
call
add
pushl
call
mov
add
cmp
jb
mov
leave
ret
push
imul
jb
je
arpl
mov
sub
push
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
movl
call
push
pushl
call
push
mov
pushl
call
mov
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
mov
push
push
call
mov
call
xor
mov
push
push
push
call
lea
push
push
push
call
add
push
push
push
push
push
pushl
call
pushl
call
push
push
push
push
push
call
pushl
pushl
pushl
call
mov
add
push
push
pushl
call
push
mov
pushl
call
mov
jmp
lea
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
pop
pop
leave
ret
push
push
push
mov
mov
mov
mov
push
add
pop
mov
mov
add
mov
mov
cmpb
je
cmp
jg
mov
mov
mov
movzbl
sub
inc
test
jne
jmp
mov
call
dec
movzbl
sub
push
call
movzbl
sub
add
je
inc
call
jmp
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
pushl
call
pushl
movl
movl
movl
pushl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
nop
add
add
add
add
cmc
add
dec
add
add
add
add
add
adc
mov
add
add
js
xor
add
add
add
add
add
pop
movsl
add
add
mov
popa
arpl
and
jae
jae
dec
dec
push
and
and
push
js
xor
push
push
lea
add
pop
pusha
mov
jne
jne
lcall
lea
dec
mov
add
or
add
mov
add
lea
call
adc
inc
mov
and
in
push
add
add
adc
push
fiaddl
test
loopne
add
adc
or
std
je
push
cmp
adc
mov
push
and
jne
push
clc
add
push
clc
test
lea
hlt
enter
movb
push
jne
lea
add
add
sub
mov
inc
insb
add
inc
gs
mov
outsl
gs
inc
dec
gs
jns
dec
pop
gs
je
dec
add
fs
add
fs
dec
insl
jns
inc
gs
outsb
jae
push
push
pop
outsl
jbe
cs
arpl
loopne
add
mov
add
add
in
add
add
add
ret
or
jb
int3
xchg
jmp
es
in
jns
pusha
out
ds
add
mov
pop
cmp
dec
out
inc
pop
add
pop
insl
aad
popa
gs
es
aam
lret
lds
fsubl
out
pop
dec
dec
push
ffree
pop
or
pop
xchg
shll
sbb
adc
loop
push
xchg
mov
add
in
sbb
sub
out
out
data16
out
aaa
adc
push
push
movsb
dec
fs
ljmp
xchg
lods
cmp
lcall
adc
mov
pop
cmpsl
daa
ret
jnp
fwait
xchg
dec
rorl
pop
push
in
movsb
outsb
push
mov
loopne
sbb
idivl
imul
inc
dec
jle
enter
inc
add
dec
jnp
icebp
mov
pminub
adc
pop
push
push
pop
or
popf
movsl
lret
mov
scas
jg
sar
pop
nop
inc
shll
loop
xorl
roll
pop
fs
adc
idivb
hlt
out
jnp
and
jle
aas
and
sti
add
cmc
or
fcmovbe
mov
dec
into
pop
pop
into
dec
adc
dec
pop
push
sti
mov
lret
jmp
mov
mov
sahf
cltd
sub
cwtl
push
mov
repnz
pusha
repz
cmpsb
sub
rcll
out
add
xor
lea
in
es
insb
add
pop
insb
pop
mov
mov
aam
outsl
adc
cltd
add
push
mov
outsb
sarl
fdivrl
test
js
insb
mov
fidivrl
add
ss
ds
shr
mov
rolb
jmp
sbb
adc
aas
pop
push
jmp
fdivl
cmpsb
xchg
dec
je
aas
pop
cltd
in
pop
insb
or
testl
push
lahf
push
flds
aam
bound
int
xchg
in
out
pushf
or
mov
test
sub
cmp
mov
insb
or
clc
mov
pop
push
cmp
fdivl
push
mov
jg
xor
or
push
or
jp
dec
push
sub
adc
add
mov
stos
sub
lods
sub
adc
or
push
and
jno
sti
es
inc
cmpsb
fimull
xchg
fcompl
cltd
pop
dec
jne
mov
cmp
adc
test
mov
xlat
jns
mov
leave
imul
xor
cmp
jb
clc
xchg
push
adc
cmp
pushf
hlt
jnp
push
popa
lss
mov
push
in
mov
aas
lock
cmp
push
data16
fsubrl
repz
inc
iret
xlat
mov
cs
cld
pop
mov
rclb
mov
dec
mov
ret
dec
sub
add
jg
inc
mov
push
sbb
loopne
add
shll
fcomi
aam
addr16
xor
aas
dec
or
je
jne
pshufw
mov
dec
jmp
fdivp
fnstenv
shll
push
pop
pushf
jno
cmp
js
add
cmp
mov
xchg
iret
mov
addr16
test
push
cs
sub
aam
adc
outsl
test
or
out
sub
push
stc
inc
pop
fbld
mov
filds
push
mov
cmp
jge
sub
lcall
lods
out
xor
sahf
push
adc
pop
jl
mov
fildl
cmpsb
sub
out
pop
sbb
in
vpunpcklwd
lret
repz
jbe
fildl
mov
shrb
push
cmp
or
outsb
lcall
lcall
rclb
xlat
pop
jb
jge
xchg
mov
or
and
or
sub
in
mov
mov
adc
cmc
cmp
jne
add
xchg
out
iret
cmp
leave
inc
cmp
jecxz
pop
push
mov
popa
testb
xchg
xor
and
dec
aaa
int
xchg
jp
mov
aaa
fwait
inc
pushf
stos
cltd
xchg
in
in
loope
daa
out
aam
jmp
lds
and
lock
mov
adc
jne
mov
jge
jnp
into
in
and
inc
xor
sahf
and
in
adc
mov
orb
adc
fildll
adc
dec
das
inc
pop
fbstp
out
cmc
es
sbb
nop
sub
add
loop
sub
lret
lock
mov
addr16
pushf
out
push
fists
call
jg
xor
xor
xor
mov
popf
mov
or
push
je
mov
adc
push
jmp
inc
cwtl
nop
or
or
xchg
push
jo
iret
push
daa
push
pushf
add
xchg
jp
sub
mov
cmpsb
loopne
adc
pop
jge
cs
sub
xor
inc
les
ja
mov
fisubrl
xorb
das
test
cmp
mov
mov
ss
fisttpl
push
sub
in
fdivrl
rcrb
pop
push
mov
bound
fsub
pop
push
in
push
inc
movsb
and
iret
sbbb
mov
int
outsl
cld
push
fmull
addr16
or
outsb
in
pop
sbb
inc
push
add
sbb
and
inc
nop
insb
test
lea
jle
sahf
cmc
inc
add
mov
outsb
out
mov
mov
dec
je
or
std
mov
cmp
push
outsb
fsts
and
popa
mov
sub
xor
fcoml
jnp
and
mov
bound
imul
outsl
sub
aad
sub
addr16
in
scas
mov
es
fdivl
insl
roll
mov
stos
push
or
int3
enter
leave
pop
sub
std
adc
lock
xchg
jle
mov
jo
inc
and
sbb
ret
aad
aam
sub
inc
adc
add
push
mov
mov
or
cli
jp
stos
imul
test
pusha
repz
lcall
push
cmp
es
hlt
inc
mov
data16
push
sub
xor
int3
sbb
movsl
test
and
popf
mov
adc
pushf
in
dec
xchg
out
sbb
push
adc
inc
sbb
push
pop
inc
stos
cmp
lods
les
sub
andb
xchg
inc
mov
adc
xor
mov
or
fstp
sbb
mov
outsl
jo
pop
push
xor
sub
sub
rcll
mov
mov
mov
pop
xchg
das
lahf
sti
jmp
inc
arpl
mov
and
imul
add
int3
sahf
xchg
sbb
xchg
jno
sbb
or
mov
aad
xchg
sub
lods
mov
test
adc
jnp
cmp
push
subl
notl
jle
movsb
fcomps
fs
jne
jle
scas
pop
out
mov
jg
in
mov
and
mov
xchg
pop
insl
jns
add
shrl
lods
inc
and
gs
fisubrs
aas
jno
adc
repz
xlat
dec
js
xorb
xchg
scas
cs
rcrb
cli
loope
xchg
jl
mov
and
mov
jg
inc
les
arpl
in
loopne
sub
into
jbe
mov
inc
dec
mov
inc
fidivrl
or
fdivl
sub
jo
addr16
push
inc
add
aam
or
sub
shl
jno
xchg
aad
clc
js
jl
pop
mov
hlt
flds
xorl
repnz
adc
pushf
xor
xchg
fsubr
push
inc
pop
sbb
add
cmpsb
lods
test
leave
into
jnp
les
ljmp
je
or
stos
leave
movsb
inc
add
ds
pop
push
lods
enter
or
push
in
sbb
pop
push
lock
rol
mov
mov
pop
or
sbb
dec
push
xchg
mov
cmp
inc
imul
and
mov
jns
mov
lock
sbb
sub
add
mov
hlt
jns
out
ljmp
dec
or
sarl
lea
cli
mov
mov
pop
jns
faddl
or
mov
cmp
push
adc
test
ret
push
xor
xor
adc
and
pop
mov
mov
mov
sbb
stos
in
bound
lods
or
fsubrs
sub
in
inc
jno
js
sbb
int3
rcll
rcll
out
out
pop
dec
hlt
mov
aaa
sbb
sub
cmp
adc
or
lret
std
jae
mov
jge
adc
jle
jo
dec
insb
lahf
daa
dec
cli
daa
mov
stc
xchg
test
jmp
mov
xor
stc
lock
dec
ds
aas
dec
push
stos
mov
mov
jmp
sub
lea
mov
cmpsl
jecxz
xchg
jns
dec
and
and
popa
or
xor
push
sub
es
push
stos
dec
sub
repnz
xor
xchg
lds
sbb
jmp
in
push
jl
sbb
fadds
cmc
mov
clc
jp
stc
out
sub
sbb
jge
pop
xchg
dec
repnz
imul
mov
mov
je
frstor
cmpsl
inc
mov
mov
cmp
push
int3
popa
push
mov
sub
mov
push
hlt
mov
dec
ja
sub
mov
adc
sbb
cmp
sub
push
push
lods
cld
xchg
test
int
ret
mov
test
arpl
std
rcl
jno
cmp
cmp
jle
fidivs
jp
out
addr16
stc
fldcw
adc
mov
push
gs
xchg
jp
adc
jbe
inc
jp
fdivrs
jno
jp
cmp
out
or
fcoms
add
lret
cltd
jbe
daa
jle
imul
call
fsts
pop
pop
rorl
enter
fstpt
test
push
lea
push
and
push
aam
rcl
jne
inc
pusha
outsb
int
or
mov
mov
hlt
les
shl
js
insl
jle
aad
rclb
and
test
xchg
jmp
pop
mov
push
xor
rcrl
adc
pop
mov
mov
push
pop
push
adc
push
sti
testw
imul
repnz
pop
scas
xchg
inc
out
add
adc
mov
push
jne
fcomps
mov
mov
outsb
imul
ljmp
leave
addr16
add
xorb
incb
adc
iret
int3
mov
arpl
daa
or
aam
pop
adc
cmpsl
mov
int
or
push
ret
mov
pop
jmp
cmp
jne
sarb
icebp
ds
loope
js
pop
dec
pop
fldenv
bnd
popa
pop
xor
pop
mov
sub
ljmp
popf
imul
push
sub
popa
add
mov
pop
lcall
fisubl
mov
cmp
fnsave
fistps
pop
sbb
in
jmp
in
pusha
arpl
cmc
and
xorl
pop
or
pop
je
out
ljmp
out
cmp
ja
xchg
outsb
fwait
fnstsw
popa
jno
lea
mov
pop
mov
movsl
mov
xchg
imul
push
aaa
sub
push
jl
lret
cmp
mov
push
cli
dec
rorb
pop
ficomps
pop
or
adc
sub
add
std
pop
ds
aas
sub
xor
addr16
and
xchg
inc
movsb
stos
xchg
imul
cmpsl
fwait
sub
cmp
adcb
cmpsb
pop
cs
mov
cmp
xorl
out
jmp
dec
cmp
jne
sub
arpl
movsl
lahf
cmp
lds
push
pushl
dec
push
dec
dec
mov
mov
xchg
mov
push
pop
mov
jns
pop
rolb
jmp
in
or
shr
cmc
pop
call
ljmp
dec
fwait
mov
push
pushl
mov
movsl
test
sti
adc
xor
pop
loope
push
loope
sbb
cmp
push
scas
in
call
push
add
xor
insl
mov
cmp
insb
jge
loope
shlb
shrb
mov
xchg
mov
push
outsl
xchg
fwait
dec
ret
mov
lahf
push
test
fiaddl
and
cmp
lods
sbb
rolb
mov
movsb
aam
call
jecxz
insb
mov
xor
shr
push
jnp
or
cld
out
sub
fsts
xchg
mov
iret
push
xchg
lock
bound
addr16
push
adc
jl
mov
fisttpll
testb
leave
inc
ret
mov
xchg
or
jne
cltd
add
xor
test
jg
sub
inc
daa
stc
or
fisubrl
les
in
push
and
sbb
mov
scas
push
fildll
jmp
clc
divb
inc
mov
push
adc
pop
mov
push
ror
adc
call
imul
loopne
fsub
aam
out
sbb
shlb
fldenv
push
xchg
xchg
and
add
ret
cmp
seta
dec
fldenv
movsb
sbb
sbb
cmp
xor
sbb
mov
mov
xor
inc
add
push
push
and
adc
ss
enter
mov
pusha
ror
pop
push
orb
inc
push
jnp
mov
insb
mov
jecxz
push
clc
stc
xchg
mov
dec
mov
mov
inc
loopne
push
lds
enter
cmp
enter
inc
add
cmp
jns
push
fs
jns
cmp
sub
test
out
lock
jbe
test
neg
mov
push
fildll
adc
push
inc
pop
push
ret
es
push
inc
mov
jnp
aad
xor
mov
sbb
adc
shrb
or
insl
pop
xor
and
or
pop
mov
xchg
jbe
or
pop
dec
sahf
cmp
dec
insb
cmpl
enter
popa
xchg
mov
mov
mov
cmpsl
sub
jge
rorl
ret
stos
xchg
push
fisubrl
sbb
int
mulb
dec
xchg
lock
movsb
pop
sub
shl
test
mov
push
rcll
jmp
neg
insb
lret
pop
dec
shlb
imul
push
call
mov
out
jae
dec
fnsave
call
xchg
or
je
xor
aad
das
mov
push
test
addl
push
jmp
adc
lock
stos
das
fsubl
add
movl
pop
fldl2e
daa
shll
daa
out
js
and
xor
pusha
test
adc
sbb
sahf
shll
loopne
cmp
and
loope
dec
pushf
subl
dec
mov
lods
or
arpl
pusha
rcrb
pop
lcall
jae
ljmp
out
hlt
sarb
adc
mov
lcall
jnp
lahf
jno
push
aam
les
ss
push
das
mov
adc
repz
in
lahf
rcrl
bndstx
xchg
fs
sbb
mov
shll
mov
adc
aam
hlt
mov
dec
pop
xchg
out
xor
xacquire
mov
sub
cmp
pop
pop
push
bound
or
push
or
jo
dec
jnp
mov
je
mov
fs
stos
and
adc
movsl
pop
es
icebp
lcall
into
hlt
push
inc
push
and
sbb
hlt
mov
or
les
and
pop
and
leave
stos
dec
mov
mov
xor
mov
dec
xchg
mov
jecxz
pop
adc
sub
or
mov
pushf
sub
and
jnp
arpl
in
cltd
mov
xor
xchg
shll
push
out
dec
imull
fadds
pop
xor
fs
nop
mov
xchg
fmul
pushf
jmp
sub
ja
inc
xchg
jnp
jmp
in
jge
lahf
mov
std
out
push
scas
cmp
repz
dec
pop
mov
out
int
add
jge
stc
std
scas
push
rorl
push
out
push
fdivrs
sbb
push
adc
jl
scas
lret
daa
scas
push
jne
cmpsl
dec
inc
fdivrp
and
loop
dec
unpckhps
sbb
jae
jp
cmp
pop
mov
pop
outsb
mov
daa
shll
lret
ss
fisubrs
testb
pop
imul
scas
inc
scas
push
int3
lret
fidivrs
negl
jno
js
lret
cli
mov
cmp
ret
icebp
aaa
outsl
sbb
dec
out
js
fs
scas
jae
xchg
jb
add
and
xchg
iret
add
mov
out
pop
push
and
sahf
mov
ljmp
xchg
or
enter
decl
pop
imul
shr
jae
mov
inc
mov
int3
mov
sbb
and
pop
cmc
jmp
shr
or
fwait
push
sub
sub
in
enter
ja
das
or
ds
cmp
xor
cmp
xor
jns
lcall
pushf
or
cmpsb
test
sub
xchg
xchg
xchg
cmp
jno
addr16
imul
je
rcll
sbb
push
fnstenv
fsubrs
or
cltd
inc
jmp
stos
mov
outsb
mov
inc
scas
sub
xchg
push
ds
adc
xchg
inc
xchg
paddsw
pop
ja
scas
pop
adc
fdivrs
adc
fldl
mov
shll
push
aad
das
xchg
lret
out
xchg
sahf
pop
sbb
adcl
or
les
cmp
mov
scas
fwait
loopne
dec
out
mov
push
das
jnp
cmpb
int3
adc
shrb
mov
mov
xchg
mov
jnp
jno
adc
mov
push
dec
test
aaa
das
scas
jo
je
ja
mov
ljmp
xchg
or
and
jg
scas
mov
mov
stos
fsubl
mov
scas
rorb
jbe
mov
push
sbb
aas
out
hlt
push
ja
out
mov
dec
sbb
mov
and
stc
in
shll
in
loope
mov
inc
push
pop
mov
roll
mov
movsl
inc
add
add
adc
js
mov
add
add
in
add
add
add
add
add
lds
add
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
add
str
add
adc
adc
add
popl
dec
adc
xor
add
add
add
adc
add
stos
add
add
add
inc
jb
add
add
add
sbb
sbb
sbb
push
sbb
sbb
sbb
imul
push
jb
outsl
outsb
dec
dec
jo
jmp
addr16
jecxz
out
inc
fidivl
dec
pop
add
sbb
add
add
in
add
mov
sahf
xor
decl
incb
pusha
pop
and
lock
clc
pushf
inc
imul
pop
leave
mov
or
xor
add
add
movsl
inc
mov
fcompl
jmp
in
push
incl
add
pushl
add
add
jne
decb
add
add
incl
cld
je
rorb
and
cmp
testb
add
adc
push
or
lcall
adc
mov
movsl
incl
xor
push
push
decl
add
push
pop
pop
push
adc
sbb
add
add
add
xchg
movb
sbb
xor
dec
sbb
sbb
push
add
cmp
jb
je
js
outsl
add
je
add
gs
gs
outsb
add
gs
dec
imul
add
cmc
je
xor
push
pop
add
add
outsl
add
inc
je
add
ljmp
add
add
add
addl
add
add
xor
add
add
adc
xchg
add
mov
sahf
outsb
add
or
bnd
lahf
inc
or
push
insl
test
sub
push
data16
push
rcl
cwtl
adc
jmp
sbb
jmp
inc
or
dec
cs
mov
movsl
or
inc
and
and
cmpsb
jl
add
jne
sub
es
sub
shl
dec
in
dec
inc
sbb
xchg
cltd
sbb
fcomps
cmp
pop
xlat
push
shl
pushf
rcll
or
leave
add
pop
scas
fstl
pop
cmp
or
fcomps
mov
scas
and
sbb
lea
les
and
cltd
mov
enter
sub
int3
into
push
mov
enter
jg
iret
popa
mov
cmp
mov
mov
jmp
pop
pop
mov
jmp
push
add
scas
shrl
dec
dec
or
pop
or
sub
pop
adc
or
inc
mov
sahf
jmp
mov
je
or
aad
mov
push
lds
xor
add
or
mov
imul
aas
jns
inc
push
testl
es
in
mov
int3
sbb
xor
enter
jae
inc
mov
sbb
lock
inc
jno
nop
aam
das
loop
sub
dec
out
aaa
mov
in
pop
test
mov
mov
and
cmp
cmp
sub
sub
push
push
cmp
les
ss
push
mov
cmpsb
pop
pop
cwtl
sub
subb
cmp
adcl
sub
dec
add
xchg
mov
adcl
push
mov
push
mov
imulb
repz
dec
jnp
pop
fwait
mov
pop
inc
cmpsl
pop
cmc
out
ss
add
mov
insl
inc
push
arpl
or
icebp
out
xchg
addr16
xor
push
push
jns
in
jmp
loopne
scas
cmp
mov
jge
addl
movsl
fisttpll
push
pop
push
inc
in
mov
adc
aaa
xchg
sti
fdivr
test
push
subl
sbb
bswap
outsl
es
fcoml
call
fidivl
cmpsb
inc
jg
jp
iret
loopne
popa
xchg
pop
cmp
leave
mov
add
dec
fsub
pop
rorb
add
es
xchg
pop
lcall
jnp
or
pop
mov
mulb
movsl
jno
das
jmp
fmull
jbe
aas
mov
mov
push
mov
enter
lcall
or
cltd
pop
int3
mov
or
cli
loopne
popf
xor
pop
out
xchg
sub
shlb
sub
cmpsl
lock
fcompl
push
mov
adc
jg
add
lods
or
es
insl
mov
aaa
hlt
sub
gs
pop
rcr
je
cli
xchg
andl
push
add
sbb
cs
push
cmp
leave
adc
and
out
xchg
mov
ljmp
repnz
data16
push
stc
inc
xchg
mov
adc
sbb
xor
ds
iret
jle
arpl
inc
sbb
mov
mov
aam
mov
mov
imul
mov
mov
fwait
jecxz
push
xor
es
inc
or
js
stos
sti
mov
out
sub
dec
mov
mov
pop
divb
jp
pop
or
xchg
lods
xchg
sbb
fnstsw
out
push
dec
sub
fcomps
sub
aas
insb
imul
lahf
or
and
sbb
stc
push
adc
in
sub
pop
mov
mov
sti
shrb
and
lret
in
mov
xchg
icebp
mov
xlat
mov
add
jne
push
fs
in
in
jnp
xchg
push
sbb
ret
pop
ds
jg
push
sbb
fdivrs
cltd
mov
sar
hlt
or
jle
add
int3
idivb
jg
into
cmp
out
test
pushl
ds
adc
mov
dec
lds
cmpsl
push
and
xor
inc
inc
lahf
inc
lds
inc
and
in
test
push
jb
shlb
aas
mov
js
test
sbb
push
std
pusha
mov
and
lcall
or
or
subl
add
es
aad
fdivrs
dec
ret
mov
insb
imul
mov
mov
or
sbb
pop
xor
pop
push
mov
jp
nop
into
aam
pop
mov
loopne
mov
cmpsl
ss
sub
cwtl
xchg
cmp
adc
dec
sbb
mov
sub
std
outsb
or
xchg
lock
cmpsb
dec
pop
xchg
cmovae
hlt
mov
mov
dec
pop
insb
subl
sahf
pop
jecxz
loopne
imul
das
cs
in
jge
fadds
dec
lret
or
inc
and
mov
push
imul
pop
add
mov
repnz
sub
test
lcall
stc
adc
rcll
shl
mov
inc
sahf
pop
sbbl
loope
dec
lock
cmp
jnp
test
rcrl
sahf
jno
imul
sub
std
dec
and
clc
dec
and
mov
mov
sbb
jbe
adc
mov
sbb
adc
inc
fcoms
nop
movsl
int
les
push
cltd
ja
imul
test
in
sbb
xchg
xchg
test
sbb
test
sbb
into
jbe
sub
lods
outsl
dec
push
and
push
mov
push
or
repz
insb
xor
nop
cmp
dec
jb
mov
jo
mov
cmc
adc
repz
fwait
scas
fldt
pop
and
sub
cmp
sub
loop
mov
and
mov
and
inc
xchg
mov
adc
ret
fcomi
or
mov
iret
mov
lret
push
mov
out
pop
add
pop
xchg
cmp
movsb
pop
adc
add
jl
ror
mov
jo
pop
ret
mov
mov
cmp
sub
dec
clc
mov
pushf
pop
out
jle
fsubp
xchg
xor
outsb
or
lods
inc
and
mov
addr16
cmp
sub
sub
jno
enter
in
mov
push
mov
subl
xchg
aad
xor
mov
mov
inc
daa
rcll
leave
or
int
aad
add
lods
inc
jle
mov
call
or
xchg
mov
mov
addr16
adc
and
sub
sbb
nop
fists
cmp
push
mov
sarb
jecxz
insb
in
aam
pop
push
sub
and
fstl
xchg
xchg
xor
into
mov
icebp
sub
jp
pop
daa
push
xor
and
mov
cmp
sahf
out
ret
push
mov
pushf
pop
sbb
pop
cltd
jno
ficompl
mov
cltd
imul
sti
or
loope
lea
or
pop
add
cmp
xchg
iret
test
test
outsb
xor
mov
or
push
andb
addb
imul
jecxz
lret
imul
pop
fsubs
jmp
cmp
gs
aam
jge
inc
cmp
dec
mov
mov
sbb
or
cmp
pop
add
xlat
or
xchg
xor
xor
or
faddl
push
out
and
fs
clc
les
test
jp
and
mov
lahf
into
add
fstps
mov
pusha
cld
rorl
aad
iret
mov
cmp
fisubrl
mov
addl
push
jmp
mov
pop
shr
div
push
stc
gs
lods
fcoms
test
popf
sub
lret
mov
jnp
dec
xor
jle
xchg
mov
mov
push
push
scas
es
pop
add
pop
pop
jecxz
pop
xchg
mov
aad
xchg
xchg
dec
fisubrl
mov
loop
or
sub
xor
dec
arpl
repz
mov
jecxz
sbb
ja
pop
inc
add
xchg
lea
stc
dec
mov
jno
sub
leave
jmp
clc
loopne
addl
rolb
jno
in
adcb
out
les
aam
jge
scas
test
aam
cmc
and
push
pop
rorb
mov
push
loope
aas
pop
loopne
add
xlat
cmpsb
mov
cmpsl
out
loop
jns
scas
je
adcb
add
mov
fucomip
jmp
xchg
sub
movsl
cmpsb
and
mov
imul
sbb
push
jne
add
in
or
xor
inc
sbb
xchg
fisubrl
sub
jecxz
xchg
fdivrs
std
inc
repz
cmp
movsl
addr16
dec
and
xor
rcrb
icebp
pop
int3
xchg
push
lcall
leave
pop
cltd
mov
add
cmp
mov
test
das
ret
push
js
dec
mov
pop
sbb
dec
jle
rcll
into
aaa
mov
jno
pop
jns
mov
pop
scas
push
jno
test
ss
mov
das
test
cli
xchg
push
out
in
test
lock
dec
stc
jbe
push
xchg
in
in
push
or
xchg
andb
mov
dec
dec
sub
mov
movsl
cmpsb
and
push
add
rcrb
xchg
sbb
inc
jne
push
mov
aad
bswap
ja
adcb
outsl
aaa
inc
lret
fdivrl
or
push
mov
mov
call
dec
outsb
adcb
jg
adc
sbb
lds
sub
xchg
and
and
add
jp
in
pop
xor
ret
add
lock
mov
cmp
dec
jg
lea
sbb
mov
xchg
fsubr
or
mov
movsb
aas
pop
cli
ret
mov
mov
sbb
int3
jne
dec
sbb
or
and
push
lahf
repz
jnp
pop
mov
push
jmp
pop
repz
lods
push
int3
pop
inc
push
rcl
fcompl
and
mov
movsb
mov
mov
int3
jl
jg
pop
pop
or
pushf
xchg
js
adc
mov
ljmp
mov
aam
cmp
loop
shll
or
pop
pop
arpl
dec
adc
addr16
sub
pop
pop
in
pop
dec
fstpl
xchg
inc
mov
adc
mov
mov
jg
shl
stos
call
xchg
fisttpl
add
fwait
xor
loopne
sbb
and
into
mov
cli
icebp
xor
aam
stos
ficoms
fildl
test
ds
mov
cmpl
shlb
xlat
fsubrl
test
ja,pn
es
xchg
sub
or
in
les
sbb
jnp
xor
pop
sahf
push
xchg
rcrb
scas
xor
sbb
fildll
add
lahf
pop
sbb
xlat
ljmp
and
lcall
movsb
std
and
call
jmp
mov
es
push
and
dec
outsb
dec
lret
xor
sahf
out
pop
fldt
repz
mov
mov
sarl
dec
pop
pop
add
jo
dec
lret
mov
jmp
or
in
icebp
pop
into
or
fdivs
xor
mov
push
pop
mov
pop
loop
cmpsl
jae
jg
mov
jg
cmp
cmpsb
cmp
gs
jmp
lret
inc
and
pop
jl
shl
popf
fidivs
ljmp
or
xchg
push
iret
loopne
in
fidivrs
jl
lea
jecxz
ret
std
dec
rclb
cli
pushf
dec
push
mov
cli
aas
dec
mov
cmpsb
test
arpl
mov
fdiv
push
sbb
bound
cmp
sahf
inc
into
jb
sub
mov
rcrl
cmpsb
loopne
fwait
adc
sub
shll
sbb
gs
jne
das
and
or
add
jl
or
and
adc
rorb
cmpsb
in
in
pusha
cmp
aaa
pop
dec
mov
fidivs
cmp
sub
adc
outsl
xor
test
pop
es
cmp
add
scas
int
cs
adc
hlt
or
dec
xchg
ret
xchg
xchg
ja
les
roll
xchg
addr16
pop
fucomp
ljmp
xchg
out
das
push
fmulp
rcrb
add
lods
jecxz
hlt
stc
mov
scas
jnp
arpl
in
mov
push
int3
adc
xor
xor
jl
or
loope
push
into
dec
iret
adc
mov
push
add
sbb
lea
adc
mov
inc
push
sbbl
or
jne
jb
jno
cmc
stc
fxch
js
dec
out
pop
push
or
mov
mov
insb
xor
sbb
sbb
xchg
aad
sub
or
aad
push
adc
loope
xchg
ret
push
ljmp
push
push
rorl
mov
insb
test
or
sbb
or
jmp
clc
mov
pop
pop
es
dec
push
rorb
stos
stc
ja
call
lahf
xchg
fdivr
jge
pop
jns
imull
pop
push
lret
fcmovbe
ja
sub
adc
lcall
pop
movl
lock
lcall
sbb
shlb
or
jmp
mov
inc
test
outsl
inc
or
push
cwtl
and
jle
test
sbb
jmp
cmp
frstor
mov
sti
sbb
in
repnz
jle
inc
clc
mov
inc
inc
fndisi(8087
sbb
ret
xor
xor
xor
pop
std
push
addl
dec
dec
or
push
lods
or
test
negb
enter
cmpsl
cs
sbb
fstpt
dec
mov
test
fmull
mov
cltd
mov
jno
iret
push
subl
adc
aad
dec
mov
das
icebp
mov
lret
lea
and
jb
adc
stos
add
js
fisttpll
pop
test
dec
or
mov
mov
pushf
aas
push
dec
iret
sahf
je
lods
cmp
inc
enter
imul
pop
mov
inc
das
mov
xor
orl
xor
push
les
stos
lahf
add
push
lcall
lds
mov
aas
pop
cmpsb
lock
std
test
push
scas
shlw
dec
sub
jmp
sarb
repz
lcall
push
scas
movb
adc
ds
sahf
add
rclb
or
sub
push
and
or
test
pop
sub
pop
or
leave
ss
mov
sti
dec
xchg
das
pushf
mov
and
mov
pusha
ret
xchg
sbb
das
ret
aaa
add
xor
loopne
sub
mov
outsb
xchg
adcb
push
sahf
mov
dec
in
iret
pop
xor
adcl
ret
mov
inc
loop
xor
xlat
dec
jne
aam
mov
pop
adc
ror
or
add
popf
xor
pop
add
and
lock
scas
push
rorl
fimull
lcall
fsubp
out
je
insl
outsl
and
mov
mov
mov
fdiv
xor
push
clc
sub
pop
aas
sbb
or
clc
adc
jno
add
mov
pop
in
scas
mov
rcl
idivl
xchg
in
shll
addr16
add
bound
ss
iret
lret
test
sub
ret
pushf
pop
xlat
sbb
sub
pusha
mov
xlat
pusha
add
sbb
sub
mov
cltd
mov
mov
pushf
sbb
es
pop
sbb
rcl
push
and
sbb
xor
push
loope
cmp
sub
js
dec
xchg
pop
xor
daa
mov
mov
push
dec
hlt
inc
js
jmp
or
pop
mov
imul
fcmovnbe
pop
pop
ljmp
es
cmp
jge
insl
pop
int3
mov
jmp
pop
sub
pop
or
pop
imul
gs
pop
cmp
mov
daa
icebp
into
xchg
int3
lods
dec
inc
mov
mov
push
and
fs
mov
data16
data16
outsl
imull
push
or
jbe
inc
pushf
lods
xchg
xor
negl
insb
dec
ss
gs
sbb
adc
enter
je
out
dec
and
mov
cmp
lods
gs
mov
add
pop
mov
sbb
leave
push
rcl
pop
sbb
xchg
shl
sub
jecxz
das
enter
inc
xor
movsl
lock
cmp
lods
mov
lods
ljmp
pop
loop
lret
lahf
fsubr
les
imul
lock
test
mov
and
pop
subl
mov
rcrl
or
clc
push
aaa
jnp
lock
pop
lret
mov
ss
lret
sbb
push
mov
inc
pusha
or
mov
or
js
adc
mov
adc
js
inc
sub
pop
jne
xchg
pop
sbb
lods
add
nop
cmp
ds
outsl
or
not
jmp
pop
out
out
sbb
shrl
daa
fsub
inc
dec
mov
lea
cli
mov
scas
stc
rol
into
pop
das
xor
cli
xchg
aam
mov
test
dec
es
lret
and
lods
clc
push
push
push
rclb
jmp
test
mov
mov
mov
dec
lea
and
push
pusha
cli
jecxz
cltd
dec
jne
daa
aad
ja
lods
cmp
incb
repz
mov
fsubrp
push
je
xor
out
aaa
mov
xacquire
cli
fistl
filds
push
adc
xchg
insl
imul
and
lds
clc
int
sahf
dec
orl
xor
dec
stos
movsb
jae
push
inc
mov
xchg
jne
mov
cld
mov
lcall
cmc
cmp
cmc
fidivrs
mov
addl
cmp
xchg
iret
out
test
sub
outsb
loopne
jo
lahf
and
lock
sub
cmp
xchg
add
add
add
loope
add
add
add
addl
add
xor
pusha
add
add
add
add
add
add
add
add
add
jle
add
add
add
add
add
add
add
add
into
add
add
stos
stos
add
ja
mov
and
int3
int3
int3
int3
int3
int3
int3
int3
add
add
mull
orb
jo
gs
add
add
add
add
add
add
xchg
add
mov
add
je
add
and
add
outsl
pop
xchg
add
add
xchg
add
add
add
int
sbb
filds
arpl
jae,pn
push
arpl
je
mov
add
outsb
jae
jb
inc
aaa
add
xchg
rcr
enter
mov
adc
mov
lea
inc
testb
cs
cli
mov
ret
add
decb
enter
pop
push
adc
jge
out
mov
lea
decl
mov
gs
inc
rolb
jbe
cmpl
add
adc
xor
push
push
call
cmp
add
cmpsb
xor
push
cld
adc
mov
lea
add
adc
mov
clc
inc
roll
add
sbb
add
add
push
lock
add
add
add
add
add
add
addr16
add
add
push
imul
sti
ja
outsl
imul
arpl
outsl
outsb
out
inc
push
popa
add
inc
push
popa
gs
mov
add
add
gs
addr16
push
dec
jb
daa
fsubrs
fs
imul
add
add
add
push
ja
movsl
xlat
mov
cltd
lods
and
shlb
lcall
or
mov
jmp
insl
rclb
mov
aad
fsts
xchg
iret
shlb
mov
imul
leave
add
adcb
psrld
out
adc
cmp
jnp
lcall
loopne
xor
test
sub
sahf
or
ss
jno
push
movsl
cmp
loopne
jmp
bswap
sub
add
dec
cmp
stos
mov
fs
pop
in
xchg
arpl
dec
xor
push
in
inc
ljmp
mov
mov
aad
ret
cmp
icebp
icebp
mov
lods
push
lds
jb
mov
jl
xchg
sbbb
push
repz
mov
sub
sbb
jmp
scas
mov
mov
mov
add
outsb
cmp
aaa
sub
jnp
dec
xchg
jp
outsb
push
jmp
popa
fs
data16
idivb
fisttpl
ror
imul
js
shlb
sbb
sbb
xchg
ss
mov
cmc
ret
pushl
lds
pop
out
push
add
ss
popa
mul
inc
or
es
mov
mov
mov
or
das
jnp
sub
pop
inc
pop
ret
iret
pop
leave
test
sbbb
add
sarb
aad
paddsw
pop
repnz
xor
cmp
lea
das
loope
repz
imul
into
repz
cmp
jno
mov
orl
inc
adc
cli
jle
ret
push
or
push
outsb
lcall
sub
and
mov
jb
jge
push
push
mov
jecxz
ja
cmp
mov
or
inc
dec
xchg
rcrl
leave
add
dec
add
sub
lods
mov
test
push
fcmovu
mov
pop
iret
push
cmp
push
iret
jl
pushf
insb
fsts
xor
fsubp
mov
out
leave
inc
cltd
mov
mov
mov
mov
add
mov
nop
dec
stos
push
mov
jg
cmp
fsubp
sbb
inc
and
inc
outsl
lods
aas
je
inc
out
test
sbb
xchg
mov
sarb
mulb
or
andl
sbb
cmp
push
adc
repnz
fsts
add
pop
es
add
push
in
mov
jno
mov
fsubrl
mov
push
punpcklbw
inc
lock
ja
ss
push
repz
test
mov
sar
jp
add
bound
push
and
cmp
in
pop
dec
dec
movsl
rcrb
cs
mov
in
dec
adc
or
add
mov
lods
fdivs
mov
call
mov
dec
cmpsl
int3
push
int3
es
ds
pop
lahf
sub
jmp
dec
pushf
push
imul
jae
xchg
ja
out
jno
jl
aam
cmp
jl
jno
scas
mov
jle
cmp
mov
xor
inc
insb
mov
fsubs
insb
or
jae
icebp
das
mulb
push
sbb
sub
dec
fwait
iret
clc
punpckhwd
in
inc
push
clc
pop
pop
pop
cmp
add
repnz
leave
jne
inc
pop
fs
adc
push
or
and
mov
in
cmpsb
sbb
mov
and
bound
ljmp
aaa
mull
xchg
inc
xchg
mov
push
push
gs
outsb
inc
inc
test
xlat
aad
sbb
xchg
add
jmp
mov
inc
inc
push
cld
mov
push
inc
fadds
cmp
mov
mov
jno
mov
mov
faddl
iret
iret
popf
rorl
movsl
adc
mov
add
sub
and
out
int3
inc
fisttps
inc
cmp
nop
jo
add
rolb
and
ja
jmp
insb
add
jns
repz
jns
in
movsl
fidivrl
push
adc
addr16
and
icebp
pushf
xchg
inc
ss
sbb
pop
push
je
push
lods
pushf
ficoms
lods
push
xchg
shl
xlat
add
mov
mov
nop
push
sbb
dec
adc
jecxz
mov
fnstsw
xchg
mov
push
aas
daa
xor
fiadds
adc
and
es
xchg
jecxz
sub
or
jne
dec
mov
dec
test
and
sarl
int3
xorl
or
es
jl
subb
push
insl
in
sarb
jno
pop
iret
mov
pop
mov
cltd
in
lods
sbb
sbb
push
push
mov
inc
test
jno
xchg
ss
pop
shll
add
or
insb
pushw
imul
movsb
push
mov
cmp
push
dec
mov
fistl
test
jb
adc
decb
dec
pop
fimull
xor
hlt
mov
loop
jge
cmp
xor
pusha
jo
pop
enter
pop
pop
xchg
and
xchg
pop
mov
enter
sub
jge
sbb
in
outsl
ret
pop
loope
loopne
pusha
cmp
add
sbbb
in
push
pop
popf
dec
aad
sub
leave
scas
ja
fldcw
sbb
repnz
xchg
jmp
add
loop
mov
or
jno
mov
stos
les
arpl
je
mov
scas
movsl
arpl
out
mov
cli
dec
fcomp
ficomps
out
loopne
cmp
pop
insb
dec
xchg
adc
cmpsl
pop
data16
xor
sbb
loop
push
adc
sti
inc
mov
pushf
push
and
gs
fsubl
mov
jae
cmp
dec
add
push
subl
mov
movsb
or
and
sub
mov
xchg
ret
push
scas
lcall
nop
out
je
psubusw
or
leave
outsl
stos
enter
and
imul
lds
xchg
push
les
das
pusha
jnp
stos
xorl
sub
iret
popf
jmp
sub
gs
fsubrs
dec
add
sub
int3
push
mov
mov
mov
dec
mov
sbb
neg
mov
jl
sbb
push
sar
aad
outsb
cmpsl
jecxz
xor
loopne
inc
mov
mov
sbb
movsl
or
sbb
notl
imul
leave
loopne
mov
bound
sub
fwait
in
ret
adc
shll
add
cmpsb
xor
aaa
roll
dec
sarl
mov
jnp
push
mov
dec
jge
ret
jno
nop
lcall
in
add
out
adc
mov
insl
out
stos
xchg
cmp
inc
push
pushf
fsubrl
aad
adc
push
ljmp
ret
jne
cmp
and
xor
jo,pt
decl
mov
fnsave
cwtl
scas
cmp
add
jnp
repnz
cmovg
jg
outsb
xchg
stos
insl
gs
dec
lds
mov
faddl
xor
adc
cmp
mov
out
xchg
mov
or
sub
insl
orl
xchg
mov
inc
cmp
mov
cld
in
nop
jns
arpl
dec
mov
nop
repnz
xor
ja
ss
mulb
lock
mov
fcmovbe
testb
sbb
je
lret
shll
jg
push
xor
pop
out
mov
adcl
sbb
dec
iret
lods
jae
fdivrs
daa
jecxz
xchg
mov
mov
addb
add
add
js
mov
xchg
int3
aam
addr16
sub
sub
mov
repz
or
sub
clc
bound
pop
xchg
lret
adc
mov
mov
xchg
les
push
mov
jmp
cwtl
mov
mov
wrmsr
movsl
je
mov
xchg
stc
lods
les
stc
insb
decl
mov
pcmpeqd
push
lock
or
pop
mov
xlat
xor
es
add
sub
fwait
in
jle
jp
rcll
stc
pop
in
fcmove
pop
or
jmp
pushw
cmp
pop
mov
mov
les
cli
xchg
insl
enter
xchg
aas
repnz
pop
mov
xchg
mov
xchg
jns
int
lret
adc
sub
dec
lods
shll
fadds
pop
dec
xor
and
negl
addr16
insl
jle
dec
cmc
adc
push
mov
xor
and
data16
test
pop
mov
loopne
stos
xchg
lea
cmp
cmpsl
push
arpl
cmp
sahf
adc
jo
sub
out
les
data16
xchg
lods
es
mov
out
repz
push
scas
sbb
add
mov
sbb
movsl
out
bound
mov
fldlg2
cmovno
inc
sub
dec
jne
xchg
push
inc
push
lods
icebp
jae
cmp
stos
push
push
out
jg
idivl
sbb
dec
ret
xor
sub
pop
cmp
jb
xchg
pop
adc
or
jmp
xlat
out
sahf
aaa
and
mov
sbb
sbb
pop
je
lcall
cwtl
ja
out
ja
sarb
mov
ds
call
push
inc
sbb
rorb
or
std
std
arpl
pop
aam
into
push
or
mov
push
or
ret
hlt
mov
sbb
dec
into
call
pusha
addr16
inc
mov
in
movsl
icebp
xchg
or
fists
jnp
jae
hlt
cmpsb
mov
mov
in
jne
xor
cmp
rolb
fisubrl
ret
lods
imul
mov
push
jb
imul
jae
dec
push
push
mov
jns
arpl
or
or
pop
mov
sbb
push
test
pushf
insb
hlt
and
stos
add
subb
cld
mov
mov
mov
or
addr16
mov
mov
addr16
out
xor
mov
mov
push
adc
and
jae
daa
sub
push
js
adc
xchg
cmp
fisubrl
rclb
out
pop
sub
or
ret
pop
sbb
dec
sub
jmp
dec
inc
sbb
xor
test
fsin
cmpsb
dec
mov
jp
xchg
loope
loop
mov
mov
jmp
mov
mov
or
stc
cmp
rcrb
cld
sar
fdivrl
pop
popa
mov
xchg
call
cmpsb
push
add
icebp
adc
jne
mov
inc
push
mov
inc
jb
add
popf
sub
mov
nop
adc
mov
enter
cmp
push
test
iret
dec
inc
jmp
lds
fld
push
push
cmp
and
push
dec
mov
data16
int
pop
in
inc
lock
jnp
out
jno
test
jle
add
and
ret
notl
lahf
cld
int
les
call
cmpsl
lret
add
dec
outsl
pop
xchg
negl
xor
and
xor
imul
mov
and
inc
push
and
lahf
lcall
mov
sbbb
or
inc
lahf
add
cmp
out
mov
add
xor
icebp
sbb
das
pop
add
pusha
pop
notb
push
jp
bound
xchg
movsb
fnstcw
dec
pop
and
ret
loopne
in
mov
and
popa
movsb
lods
in
and
outsb
cmp
inc
cmp
test
cmp
mov
xchg
dec
or
mov
push
cmp
push
outsl
cltd
mov
mov
mov
or
mov
push
andl
outsb
mov
push
es
fidivrs
xlat
or
mov
rcl
jne
jg
mov
push
out
stos
lds
jno
in
dec
fdivrs
push
jne
push
mov
add
sbb
push
jecxz
xchg
xchg
out
or
shrb
xor
and
push
xchg
sbb
pusha
loop
mov
sub
inc
ret
or
sub
jne
and
clc
add
int
jle
int
outsb
fs
outsb
scas
jnp
test
fs
mov
cmpsb
push
jb
or
jge
xor
lods
inc
stos
jbe
cmp
sub
clc
mov
push
daa
loopne
lock
jmp
inc
jns
xor
sbb
outsl
iret
outsl
add
nop
xor
pop
or
and
mov
leave
cmp
mov
cmc
outsb
sub
push
lcall
xchg
shl
mov
loope
dec
aad
outsl
xor
xchg
pop
cmpsb
mov
push
sahf
mov
sahf
sub
pop
fcoms
mov
or
shlb
mov
popf
jp
adc
outsl
xor
xchg
lret
test
int3
mov
inc
add
jns
lahf
push
call
ret
jg
fisubl
fildll
mov
pop
lcall
mov
popa
out
adc
lods
cs
mov
test
jl
sub
fwait
mov
cmp
mov
push
lahf
push
ja
and
mov
xchg
jl
ss
test
push
ret
lods
adc
pop
std
jo
ss
sub
adc
pop
inc
fisubrs
aaa
or
ljmp
inc
jp
and
imul
adc
sahf
in
sahf
into
mov
inc
sbb
popa
bound
dec
in
imul
mov
pop
push
imul
adc
or
mov
jg
xchg
cltd
cli
mov
nop
fiadds
mov
out
dec
aad
push
dec
mov
jge
test
mov
fadds
gs
inc
jge
push
popa
pushf
icebp
fisttpll
insb
mov
das
dec
cmp
faddl
loop
pop
pushf
sub
or
mov
and
hlt
mov
dec
sarb
clc
js
movsb
loopne
xchg
sahf
mov
xor
mov
out
jle
mov
sti
inc
es
sub
xor
mov
stos
dec
cwtl
das
add
add
jle
lock
fisubrs
out
or
scas
push
bound
mov
es
popl
je
test
sbb
add
insl
sbb
xor
out
pop
mov
into
add
xor
loopne
rcll
inc
inc
sbb
mov
pop
sub
xor
data16
in
pop
pop
ss
pop
jae
jnp
outsb
mov
jge
cmpsb
stc
cmp
pop
push
ljmp
sbb
dec
mov
sub
xor
aad
addb
cmp
pop
out
mov
cs
dec
and
ja
pop
cmp
sub
es
xchg
das
sbb
fildll
and
pop
dec
testl
popf
scas
cmp
stc
lds
es
sarl
jle
cmp
das
mov
repnz
aad
cmp
adc
inc
test
jg
sbb
repz
movsl
loope
gs
ja
jbe
cld
test
cmp
inc
push
adc
mov
add
pop
aam
sub
xlat
or
inc
fmuls
mov
inc
pushf
xchg
sbb
outsl
adc
jle
adcl
pop
xchg
scas
pop
add
es
jae
sub
adc
pop
cmpsl
xor
cmp
arpl
and
fs
add
into
push
loopne
fdivrl
fucomp
aaa
xchg
xor
and
xchg
enter
dec
ja
and
rorb
adc
mov
mov
stc
lea
mov
xchg
adc
dec
jecxz
jnp
push
pusha
cld
pop
fistps
add
sbb
push
data16
outsb
test
mov
inc
push
bound
xlat
cmp
inc
mov
and
ljmp
pop
pop
pop
lods
ror
scas
stc
cmpb
cwtl
mov
cld
pop
cltd
fnstcw
jnp
xchg
dec
sub
pop
xor
dec
outsb
rolb
aad
xchg
fiaddl
cmovs
in
out
cmp
repnz
pop
dec
ret
testl
rclb
gs
xor
xchg
scas
lods
fdivrl
pop
aad
outsl
xorb
daa
aas
cld
and
subl
das
push
push
and
xchg
int3
mov
nop
add
je
insb
mov
negb
data16
mov
ss
sbb
xchg
and
cmp
and
mov
adc
sbb
cmp
popa
mov
xchg
mov
dec
fisubs
mov
jg
dec
fcmovnb
sbb
pop
out
jne
daa
jmp
jle
scas
fadds
inc
aam
adc
jb
cs
inc
loopne
xchg
cltd
adcb
pop
jb
lds
inc
pop
subb
xchg
cli
stc
cmp
mov
pop
mov
repnz
dec
inc
cwtl
push
fnstenv
in
pop
jnp
orb
xchg
ret
or
mov
and
xchg
adc
lret
jg
fistl
cmp
rcrl
sbb
mov
outsl
sub
pop
nop
frstor
mov
out
lea
testl
xor
shr
insb
push
pop
push
mov
jno
lock
cmc
mov
pushf
imul
shlb
shl
or
or
dec
daa
sub
ret
addl
pop
sbb
imul
inc
inc
sbb
repnz
or
xchg
mov
das
clc
ljmp
sbb
orb
or
and
nop
xor
stc
int3
pop
mov
outsb
divl
popa
mov
pop
sbb
dec
lds
add
lret
mov
lahf
mov
or
or
xchg
inc
mov
aam
imul
lret
jmp
aaa
pop
mov
pop
enter
hlt
push
dec
scas
xor
mov
mov
das
push
movsb
loope
test
js
movmskps
or
push
pop
pop
add
sbb
cmp
lods
fdivrs
fsubs
icebp
adc
bound
jnp
mov
mov
roll
jbe
cmp
imul
into
data16
orb
or
test
or
jg
mov
shlb
sarl
gs
mov
call
test
arpl
pop
daa
fwait
and
sub
insb
and
mov
ret
shlb
ljmpw
mov
or
fcoml
and
push
xor
fsubrl
jne
notl
or
sbbl
add
add
add
mov
daa
mov
add
add
sbb
js
add
add
test
add
add
fadds
add
add
add
add
add
out
add
add
add
add
pusha
or
dec
int3
int3
int3
int3
int3
int3
int3
int3
jae
jb
jo
add
incl
add
add
add
and
jne
or
or
adc
add
add
add
adc
add
lahf
push
add
add
psubusb
add
add
mov
add
add
add
add
add
add
add
and
jo
gs
mov
push
imul
add
wrmsr
jg
jmp
mov
enter
or
push
jmp
jae
cld
inc
pop
in
pop
incl
mov
cld
add
loopne
mov
adc
add
add
add
xchg
push
push
dec
fs
push
rolb
lret
in
mov
mov
mov
cmp
add
push
daa
fwait
add
xor
inc
pop
pop
add
lock
jmp
fbstp
call
add
clc
mov
loope
std
dec
and
cld
cld
push
mov
add
mov
push
aaa
sub
cmp
clc
loopne
add
lret
sub
mov
mov
add
lock
push
jne
orb
add
add
add
add
add
add
clc
sbb
sbb
sbb
sbb
sbb
pop
add
add
or
inc
add
gs
outsl
outsb
outsl
insb
test
imul
xchg
push
add
jbe
je
arpl
or
inc
fs
insb
jb
addr16
jge
add
outsl
imul
inc
popa
gs
mov
dec
cwtl
decl
outsl
js
popa
xchg
cmp
lahf
call
sbb
xchg
outsb
sub
insb
lcall
jl
push
and
test
cli
out
adc
je
mov
std
fwait
xchg
sub
in
xchg
int3
pusha
cli
fldt
loopne
lret
or
dec
int
xchg
xchg
cmp
sbbl
mov
pop
cmp
jo
inc
jp
jecxz
push
xchg
dec
and
cwtl
cltd
mov
fdivrp
pop
xchg
cmpsb
shlb
jg
jge
inc
lahf
shl
cli
imul
jo
push
cmpsb
stos
sub
cli
inc
repz
clc
imul
cltd
or
push
es
dec
mov
sti
cmp
xchg
int3
xor
push
in
jb
popa
shl
std
jle
xchg
cs
sbb
mov
jge
jge
dec
inc
jp
sub
jle
std
es
sbb
mov
mov
dec
mov
mov
fsin
bound
mov
mov
lret
test
nop
mov
cmp
mov
mov
inc
in
hlt
or
int3
cmpsb
or
icebp
pop
aad
out
push
jecxz
jge
cmp
mov
xchg
add
xor
dec
repnz
jne
movsb
jl
xor
cmp
jb
cmp
dec
mov
es
xor
pop
arpl
mov
rcrl
xor
jne
insl
stos
and
movsl
imul
call
lea
sbb
mov
push
xchg
pop
sarb
ret
stos
push
xchg
xchg
lods
dec
jns
int
pop
pop
mov
push
jg
dec
adc
sarl
push
or
in
lods
test
stos
adc
scas
test
push
ds
jns
sbb
iret
movsb
sub
cmc
and
mull
gs
sbb
cmp
arpl
stos
add
or
test
add
pushf
popl
mov
inc
fs
or
xchg
xchg
pop
fcomps
push
fsts
or
add
fstpl
add
gs
mov
popf
mov
cmpsb
add
jge
mov
repnz
and
mov
push
mov
stos
sub
sub
push
jbe
loope
arpl
adcb
mov
sub
adc
je
clc
lods
dec
ja
sahf
xchg
add
ja
in
stos
dec
scas
gs
push
test
mov
xor
pushf
xchg
fs
mov
ds
jbe
pop
lods
add
dec
imul
jle
mov
into
loop
shrl
ja
add
and
cmp
cmp
mov
sub
xchg
sub
mov
cmp
inc
jecxz
push
lods
shll
or
dec
sti
cmpsl
sub
push
xor
shlb
shll
or
mov
jno
jns
arpl
mov
insb
push
loop
adc
adc
dec
stos
data16
std
imul
lcall
add
push
xchg
dec
pop
mov
lret
push
cmpsl
popa
cmp
pop
je
mov
or
sub
insb
and
mov
fxch
push
dec
pop
lahf
jbe
aaa
pop
or
sub
jns
sub
lods
pop
jne
inc
jecxz
cwtl
mov
pop
loope
scas
pop
into
xor
cmp
add
and
mov
out
mov
loopne
ffree
pop
test
xchg
adc
cli
pop
scas
enter
cmp
movsb
mov
movsb
or
inc
add
xadd
and
jg
out
pop
mov
jnp
mov
ret
addr16
xor
sub
lret
insl
push
rclb
push
rorl
test
dec
mov
loopne
mov
addr16
pop
shr
jmp
pusha
pop
and
test
test
loope
test
push
sti
mov
mov
dec
sub
pop
fcoms
adc
js
inc
pop
pop
popa
mov
ja
ficoms
sbb
enter
mov
dec
jnp
mov
shll
xchg
mov
cmp
ret
add
stos
xchg
lock
push
daa
cmpsl
xorl
lea
clc
sbb
xlat
mov
push
push
or
sbb
fxch
mov
cmp
xor
cmpsl
in
sbb
stos
push
xor
fmul
dec
test
dec
rcrb
jmp
lea
in
adc
es
mov
stc
decb
repz
sub
out
jae
mov
push
cwtl
ja
in
das
mov
inc
pop
scas
sbb
push
mov
imul
sub
ljmp
clc
aaa
pushl
stc
pop
cmc
das
jp
std
mov
addb
rcl
adc
int3
fsubr
cmp
imul
pop
add
xchg
pusha
mov
sahf
stos
loope
cmc
popa
cmc
adc
fs
icebp
fistl
out
sahf
push
int3
das
and
push
ret
gs
leave
jae
jle
xchg
repnz
int3
pop
sahf
ss
jl
cmp
fwait
jne
mov
in
cmp
push
mov
add
orl
or
pop
cmpb
cmc
aaa
add
xchg
mov
repnz
push
mov
sbb
cmp
lods
ljmp
jne
mov
icebp
add
xchg
jge
jno
into
sbb
lret
pusha
aad
pop
call
ds
dec
in
out
sbb
mov
aaa
adc
push
mov
fldt
push
popa
dec
inc
push
jns
add
pusha
inc
addr16
jne
jp
cmpsl
aaa
dec
pop
movsl
and
pusha
mov
xchg
scas
adc
adc
add
push
lods
sub
in
inc
pop
aaa
popl
pop
mov
push
shlb
and
cld
orl
cmp
and
cli
mov
add
pop
xchg
test
and
movsb
mov
gs
std
nop
insl
xchg
mov
add
mov
stc
xchg
stos
sbb
jp
dec
test
in
sbbl
js
pusha
setno
mov
stc
ljmp
call
lods
sub
inc
pop
mov
adc
shll
mov
pop
fwait
in
cmpsl
sub
or
popf
roll
add
mov
inc
shrl
dec
fdivs
repnz
into
add
push
ret
sub
fwait
das
imul
scas
shrl
clc
imul
clc
fildll
jne
lcall
enter
into
mov
dec
notb
mov
push
rorb
cwtl
test
nop
inc
adc
fwait
xchg
xchg
lret
and
lret
mov
push
xor
jecxz
xchg
into
add
jl
push
or
pop
test
cmp
cwtl
lret
sbb
insl
insl
add
mov
mov
mov
fdivr
mov
aad
ljmp
sarl
xor
out
repz
sahf
push
das
or
sbb
pop
fucomi
jmp
sub
bound
cs
xchg
fsub
ffreep
and
adc
mov
pop
cmpsl
cltd
dec
jbe
cmp
aam
mov
fistpll
outsb
shl
into
xchg
adc
fisubs
dec
push
aas
test
fwait
cmp
test
xchg
das
scas
fcomi
and
jae
or
es
mov
aaa
sub
inc
push
pusha
into
fdivrl
test
cmovne
and
inc
jge
das
jne
mov
pop
xor
mov
icebp
dec
sbb
push
lock
data16
aam
jecxz
loopne
std
mov
lods
xchg
rolb
std
idivl
imul
pop
or
lods
enter
mov
mov
mov
and
adc
xor
fbld
in
inc
push
inc
pushf
data16
fisttpll
push
mov
sti
incl
add
sub
xchg
shlb
dec
pop
popl
fisubrs
aas
fs
mov
or
jmp
test
push
stos
fnsave
incb
adc
cmc
shrb
add
dec
adc
rol
jp
jae
cltd
jno
mov
dec
mov
inc
or
popa
push
pop
mov
pop
leave
in
inc
xlat
mov
adc
fwait
xchg
push
xor
and
sarb
add
pop
and
inc
iret
loop
mov
cmp
cmp
inc
push
test
in
stos
adc
outsl
addb
push
push
cmpsl
and
jno
lahf
cmp
adc
bound
es
cmpsl
ja
in
in
push
icebp
xchg
xchg
xor
or
lahf
cmp
or
or
lods
mov
xchg
sub
dec
pop
adc
dec
inc
xchg
pop
movsl
jb
sbb
xchg
inc
jp
inc
les
rolb
push
iret
loop
popf
push
or
mov
mov
xchg
test
inc
mov
aad
ja
jns
fistl
loopne
rorl
dec
jg
loopne
adc
gs
aaa
xchg
cmp
pop
ret
call
shrl
in
addl
inc
add
outsb
shrb
or
hlt
clc
pop
inc
ret
fs
inc
cmp
ret
mov
cwtl
pop
adc
cmp
sbb
es
roll
cmp
mov
rolb
ficomps
add
insl
fwait
sarl
das
inc
and
pop
fcoml
addr16
fidivrl
sti
mov
lret
test
pop
or
sar
xchg
dec
out
lret
popf
test
xchg
mov
push
fimuls
lret
adc
mov
gs
repnz
int3
sub
lcall
dec
xor
call
mov
sub
jmp
sysenter
and
outsb
ljmp
or
in
cmp
cmp
pop
out
sub
cmp
popa
das
stc
push
add
sub
push
notl
pop
ret
sub
add
das
inc
inc
in
adc
inc
sbb
xor
mov
inc
daa
xor
adc
shlb
repz
fwait
roll
or
aam
insl
movsb
xchg
mov
cmc
outsl
cmpb
sub
test
add
cmpsb
insl
sub
les
pop
xorl
dec
mov
cmpsl
repnz
sbb
cltd
lods
cmp
lret
adc
mov
call
nop
test
leave
cld
fstps
mov
lea
inc
in
or
and
dec
pop
scas
dec
dec
leave
imul
std
std
push
mov
outsl
and
add
je
ja
sti
call
mov
sahf
sti
xchg
add
mov
or
lock
push
dec
cmp
out
cld
out
popa
mov
enter
pop
or
movsb
es
adc
shlb
add
fs
fstps
add
sub
dec
mov
add
cmp
push
mov
lret
mov
out
xchg
int3
add
daa
pop
mov
push
jl
test
jge
jns
push
inc
adc
pusha
aas
mov
mov
out
inc
xor
stos
mov
push
sti
clc
pushf
ss
stos
add
repnz
jge
out
jge
mov
push
cmpsl
add
lods
adc
jmp
mov
notb
daa
xchg
sbb
or
cwtl
mov
lods
lock
insb
lret
ror
cmc
test
mov
sub
cmc
cmpb
cmp
push
stos
dec
push
pop
loope
xchg
jecxz
add
insb
add
sub
push
bound
and
sbb
out
lcall
movsb
daa
xlat
lret
inc
mov
gs
jge
shrb
and
mov
sbb
out
jns
pop
pop
subl
mov
sbb
xor
jno
fistl
mov
roll
cmp
push
xor
xchg
lret
dec
stos
in
sbb
push
sbb
push
xor
jbe
mov
cmp
jnp
stos
xchg
xor
push
fwait
cmp
int
mov
add
mov
shll
sti
int3
int
add
cs
and
xchg
sbb
xchg
std
sbb
fldl
jg
ret
xor
jbe
sub
in
cltd
clc
add
cmpsl
mov
icebp
push
xor
insb
push
je
fmuls
jecxz
push
scas
ret
mov
dec
int3
lret
jmp
ds
pop
cld
ret
pop
addr16
int
xchg
sbb
int3
sahf
data16
dec
inc
sahf
push
xchg
xchg
shll
orb
lret
fmuls
cmp
pop
ss
cltd
mov
pop
movsb
pop
cmpsb
popa
les
insl
adc
mov
fisubs
cmp
cmp
aaa
cmp
in
xchg
jmp
and
xchg
pusha
xor
sarb
jns
jp
mov
sub
das
add
push
mov
adc
pop
addr16
mov
rolb
cvtdq2ps
cmp
mov
and
mov
jmp
dec
fimuls
insb
repz
lods
popf
xor
and
mov
inc
jmp
adc
and
dec
and
movsb
inc
addr16
out
sbb
push
popl
ja
pop
mov
mov
add
mov
add
lret
jge
sbb
sub
inc
ss
and
shlb
hlt
xorl
push
cmpsb
mov
ret
subl
aaa
or
inc
lcall
ljmp
cltd
imul
dec
fcompl
jae
in
dec
in
or
sbb
fsubs
or
pop
andl
outsb
inc
mov
jecxz
or
push
jecxz
xchg
jge
xor
lea
mov
cmp
popa
xchg
stc
out
push
fstpl
push
pushf
cmp
gs
stos
js
inc
mov
adc
out
nop
rcll
inc
inc
xor
lods
dec
mov
dec
enter
inc
cmp
sbb
mov
filds
dec
loopne
test
jle
pop
xchg
adc
sub
add
je
sarb
fisttpl
mov
cmpxchg
outsl
stos
mov
ret
cmc
int
ficomps
push
mov
jns
ljmp
pop
xorb
pop
test
ficoml
in
sub
mov
insb
mov
lret
sarb
fisttpl
insl
addr16
and
cld
outsl
sbb
and
outsb
mov
lahf
or
sub
cli
inc
or
fsubl
pusha
sub
cli
sub
adc
mov
sbb
mov
xor
daa
dec
scas
nop
insl
outsb
sbb
mov
mov
add
pop
mov
cmp
jl
imul
imul
out
mov
in
cmp
xchg
cmpsb
in
or
mov
mov
xor
mov
pop
pop
and
pop
sahf
in
sahf
mov
mov
stos
test
lds
push
mov
repz
sbbb
mov
test
daa
xchg
loopne
sbb
jmp
dec
pop
dec
stos
pop
dec
xchg
xor
or
and
rcll
adc
mov
mov
push
lock
das
xor
loope
sub
insb
into
ljmp
xchg
pushf
xor
adc
cmp
mov
stos
call
fmull
dec
and
xchg
das
sub
dec
scas
add
aam
dec
inc
jbe
sbb
cmp
and
dec
xchg
lea
push
mov
mov
inc
mov
out
in
les
and
inc
std
mov
outsb
outsb
cmp
sbb
xor
mov
jp
xchg
dec
dec
dec
pop
fidivs
into
pop
xlat
push
sub
popa
jmp
and
pop
xlat
fwait
or
mov
call
jg
cli
jecxz
jg
jp
mov
jae
cltd
icebp
lret
jecxz
ljmp
add
dec
inc
fwait
jl
dec
call
dec
mov
sub
mov
daa
cmp
ficoml
cmp
add
dec
fidivl
jg
jecxz
mov
mov
dec
mov
mov
leave
dec
pop
cmp
mov
cli
mov
jle
stos
hlt
aaa
pop
mov
je
out
movsb
push
pop
dec
and
jbe
fs
inc
jb
xchg
mov
popa
jle
push
push
sbb
imul
outsb
xchg
in
lea
jle
sub
ljmp
rorb
test
sub
sub
push
call
jg
pop
inc
jmp
push
cmpsb
xchg
or
push
dec
mov
das
les
adc
jge
mov
mov
push
rcrl
sbb
push
lcall
jl
push
and
mov
xchg
xchg
push
inc
dec
stos
inc
cmp
sbb
lcall
lret
ror
adc
pop
mov
lret
mov
or
push
popf
lahf
orl
in
imul
pop
cld
test
ja
hlt
aaa
sub
fiadds
jmp
shrl
ret
pop
xchg
sub
xor
sarb
nop
push
stos
in
jne
pop
adc
insl
mov
nop
icebp
sub
pop
lahf
lods
fistpl
or
and
cmp
addr16
cmpl
mov
aam
jmp
push
lea
xchg
cmpsb
mov
fstpl
jle
jp
rclb
lcall
cld
push
lahf
or
and
sub
mov
mov
repnz
insb
jbe
ret
insl
mov
jno
xor
mov
push
mov
insb
jge
push
stc
loop
test
mov
scas
test
jae
arpl
pop
dec
cmp
fldcw
addb
negb
pop
xchg
rcrl
push
xchg
push
mov
mov
stc
out
std
imul
dec
loope
scas
xlat
inc
ret
pop
ret
and
mov
jge
dec
icebp
shlb
adc
shrb
adc
jne
lods
jmp
jecxz
icebp
pop
stos
pushf
dec
lret
dec
add
mov
or
sbb
test
cmpsb
pop
xchg
mov
xor
dec
jnp
jmp
or
push
mov
test
shrb
mov
sub
push
ret
shl
xor
pop
add
enter
out
xchg
pop
mov
mov
jecxz
cli
xor
or
sbb
lods
js
js
out
les
jl
jns
aad
mov
mov
sbb
or
add
jge
or
adc
and
ja
pop
push
setae
mov
and
rolb
inc
sti
xchg
xchg
inc
xchg
fwait
mov
cwtl
hlt
test
sbb
jb
mov
pusha
sbb
nop
pop
jmp
mov
mov
popa
test
out
pop
xchg
pop
test
and
pop
popa
outsb
jnp
nop
out
pop
sbb
in
sbb
test
and
cmp
iret
js
test
add
push
dec
das
mov
fildll
dec
cwtl
add
add
decl
add
add
add
add
add
add
add
add
outsl
js
add
addb
add
pop
pop
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
outsb
or
add
add
add
out
add
add
add
add
add
add
add
add
add
mov
movl
add
add
add
add
add
mov
and
insb
add
inc
outsl
pop
jne
outsb
ja
dec
inc
jo
push
insb
gs
mov
clc
imul
rorl
inc
jne
incl
dec
sbb
adc
call
add
std
adc
adc
push
mov
or
pop
out
jne
mov
into
mov
pop
ret
add
push
add
push
rclb
jge
mov
add
add
add
pop
adc
loopne
cld
test
inc
push
call
inc
sub
jne
add
shl
loopne
decl
subl
adc
push
push
call
push
push
call
aam
mov
ret
mov
pushf
lock
jne
call
lea
add
or
add
add
add
add
add
add
inc
inc
add
inc
imul
add
sbb
push
js
add
andl
dec
insb
arpl
inc
inc
or
push
shlb
jb
add
outsb
xchg
insb
cltd
jne
gs
daa
push
outsl
gs
js
xor
add
add
insb
add
add
xchg
sbb
add
add
mov
add
add
add
cmc
gs
mul
ja
xor
mov
dec
cmpsl
jge
cmpsl
sbb
popf
pop
pop
xchg
add
cmp
sbb
int3
sahf
incb
mov
cmp
lcall
inc
push
mov
sub
mov
pop
inc
out
add
xchg
jno
scas
add
or
pop
adc
mov
or
xor
rclb
dec
sahf
inc
add
mov
jb
js
stos
and
loopne
imul
and
jmp
xchg
adc
cmpsl
shll
mov
scas
xor
sub
or
ljmp
shll
enter
mov
mov
movsb
in
jmp
ja
mov
cld
mov
or
lods
xchg
sub
out
jge
mov
sub
mov
inc
pop
adc
stos
or
add
idivl
cmp
aam
daa
lret
insl
jecxz
fisttps
add
arpl
jne
cmpsl
xchg
sub
dec
fwait
lret
cmc
cs
xor
add
stos
fisubrs
std
dec
call
mov
aad
test
ror
push
cmp
pop
push
or
cmp
xor
inc
into
adc
mull
daa
xorl
aam
sahf
jmp
jp
dec
add
cld
int
das
aas
jmp
enter
out
adc
mov
popf
xchg
pop
xorl
fdivs
xor
shll
push
or
cmp
out
pop
cmp
push
movsb
fistps
hlt
jns
rol
jo
aad
subl
leave
mov
and
and
loopne
shll
xor
xor
nop
mov
xor
mov
or
mov
xor
dec
into
fwait
pop
xor
movsl
cltd
mov
pop
lods
std
add
js
jbe
jne
lods
add
rcrb
bound
movsb
mov
pop
push
mov
test
bound
in
in
mov
mov
xchg
sub
mov
mov
rolb
mov
jg
push
jae
mov
scas
or
incb
sub
sbb
and
sub
stos
sub
jnp
ret
insl
lea
xchg
push
incl
or
shll
mov
sahf
outsb
arpl
lahf
xchg
les
rorl
lods
aas
je
xor
add
leave
push
aam
subl
or
sti
pop
fcoms
fldenv
add
pop
mov
fsubs
sbbb
mov
add
cmp
movsb
outsl
ja
sbb
jl
xchg
rorb
in
xor
pmaddwd
aam
sbb
in
sub
jecxz
xchg
and
clc
mov
insb
xor
aas
mov
jnp
jno
mov
out
sub
lods
stos
insl
cmp
lret
lcall
stos
mov
mov
ds
lods
test
push
ret
ja
push
sets
sbb
imul
cs
data16
repz
int
mov
loopne
dec
cmp
test
scas
or
in
pop
mov
and
push
pop
jp
jle
out
nop
popa
pushf
test
push
sbb
jge
jle
stc
dec
insb
rolb
inc
xor
adc
and
pusha
jle
adc
mov
aas
nop
mov
sbb
add
movsb
or
lahf
xchg
iret
jno
and
mov
es
push
in
sbbb
push
mov
and
sarb
mov
jle
mov
xlat
mov
push
lahf
jmp
fdivrs
sbb
sub
popf
nop
fnstcw
jo
xorb
pop
dec
adc
cmc
lods
dec
adc
in
dec
leave
fwait
xor
rcrb
cmp
dec
push
test
cmp
loop
popf
bound
xor
ret
cld
push
mov
clc
and
xor
pop
jmp
sti
ficoms
fstpl
outsb
sub
aad
bound
daa
xchg
ss
mov
test
test
xchg
jbe
roll
mov
sbb
test
xchg
dec
test
adc
test
inc
cmp
mov
pop
push
subb
scas
xchg
mov
lods
mov
mov
push
out
cmp
xor
pop
fdivrs
dec
dec
push
insl
or
xor
out
and
adc
shlb
mov
or
cmp
xchg
jb
jbe
pop
dec
dec
push
call
mov
pop
das
mov
scas
gs
push
jg
jbe
ficoms
sub
test
adc
pop
mov
lret
cli
xlat
adc
in
push
aas
xor
adc
filds
pop
or
jo
sub
fidivs
imul
popf
in
call
or
jo
in
xor
sub
xchg
lret
fstpt
loopne
jbe
xchg
and
push
inc
aaa
sbb
jl
pop
dec
jp
icebp
pop
loopne
pop
add
mov
aad
scas
push
mov
adc
cwtl
sbb
dec
pop
in
jmp
inc
outsb
jmp
xchg
mov
or
neg
push
sti
jnp
cmp
bound
insb
loop
xchg
mov
add
or
mov
mov
add
sar
ss
or
ljmp
and
xchg
ja
mov
imul
loop
add
clc
outsb
sub
imul
push
pop
push
insl
cltd
sbb
jmp
xchg
insl
jg
pop
pusha
int
xchg
mov
mov
dec
nop
mov
mov
cltd
xchg
es
or
lods
xchg
jge
bound
pop
lods
xor
and
sbb
sbb
sbb
int3
int
sbb
mov
mov
jb
cltd
jg
in
enter
mov
adc
cmp
adc
sbb
lret
sub
loopne
and
lret
int
push
sbb
data16
push
xor
mov
add
movsl
inc
or
shr
xchg
sarl
jbe
dec
shrl
lea
and
rclw
and
mov
je
fbld
push
mov
cmp
jne
dec
hlt
jno
cmc
das
push
nop
cmp
jnp
sub
and
pusha
js
outsl
out
and
pop
sti
in
lea
dec
bnd
ret
or
mov
aaa
in
icebp
add
jg
cmpsl
pop
cmc
and
in
fstpt
clc
js
push
sub
out
xor
push
inc
outsb
jle
ljmp
fs
xor
hlt
add
clc
xchg
in
dec
dec
jecxz
cmp
ljmp
lea
cs
fs
std
push
idivl
leave
cmp
ss
jmp
mov
loope
sub
mov
or
fs
xchg
lret
out
jmp
pop
fisubs
push
add
std
outsb
pop
push
lcall
cwtl
add
iret
push
jns
mov
xchg
dec
mov
outsb
and
test
mov
ljmp
push
dec
test
mov
enter
mov
loopne
xchg
lret
mov
jmp
aad
cltd
into
mov
cmp
inc
adc
xchg
lret
pop
daa
enter
decb
scas
xchg
rolb
pop
push
mov
negl
in
adc
rcrl
cmp
sub
popa
cmc
mov
xor
mov
xor
pop
mov
aam
imul
jmp
jle
pop
scas
jmp
out
mov
adc
repnz
push
jo
jae
shrb
arpl
xor
movsl
dec
adc
ljmp
pop
js
test
in
repnz
scas
addr16
xchg
shll
pushf
out
inc
adc
in
or
xchg
mov
adc
adc
inc
lea
testb
push
cli
sarl
jns
and
stc
imul
cli
add
inc
ss
idiv
flds
or
mov
fisttpll
add
loop
jno
loope
or
imul
pop
out
xor
out
subb
xchg
decl
fimuls
outsb
inc
dec
leave
aam
xor
jae
push
mov
jno
xor
hlt
and
push
push
xchg
lret
aad
jmp
lret
jmp
inc
fmuls
imul
xchg
dec
xor
bound
in
inc
test
fdivrp
insl
and
pop
mov
enter
sbb
inc
bnd
cmc
repz
jae
rclb
inc
adc
mov
push
adc
add
negb
xor
xor
jno
test
or
pop
jae
movsl
jnp
in
cli
pop
sbbl
cmp
lcall
inc
in
out
mov
mov
xlat
dec
ficoms
outsb
imul
pusha
cltd
leave
shrl
lods
cwtl
push
cmp
mov
inc
dec
add
fs
jb
mov
cs
cmpb
mov
jae
fimull
lea
lret
sbbb
incl
pop
loopne
mov
cmpsb
in
dec
bound
jb
loopne
js
sbb
xchg
inc
jnp
fistpll
pushl
add
lcall
or
adc
scas
adc
cmpb
popf
test
std
mov
add
jmp
into
gs
push
mov
xor
lock
push
sahf
mov
pop
dec
lret
daa
mov
fbld
lods
addb
sub
test
iret
daa
inc
cltd
movsb
dec
outsb
mov
cmpsl
ja
adc
cmpsb
ret
mov
cmpsl
ds
fsubrl
insb
pminub
xor
into
sub
push
dec
call
mov
adc
xchg
push
adc
jb
mov
mov
mov
adc
cmp
imull
mov
push
jns
mov
xor
cmp
outsl
into
negl
mov
cmp
cmpsb
sub
arpl
xor
incb
xor
jl
fdivs
js
mov
out
out
aaa
cmpsl
add
lea
dec
sub
cs
mov
ret
adc
aas
sbb
add
inc
addl
xchg
cld
idivb
scas
enter
mov
mov
cmc
into
gs
sbb
xchg
and
pop
jbe
std
fnstsw
and
in
or
sar
lret
cmpsb
subb
pop
xor
scas
test
mov
mov
loope
mov
push
out
sub
cmpsl
or
xchg
or
sbb
jne
inc
out
jecxz
fdivrs
data16
xchg
add
rorb
or
sbb
outsl
xchg
sbb
sbb
insl
addr16
xchg
mov
lret
inc
mov
repnz
addr16
pop
cmp
movsb
cmp
sbb
popa
test
shl
imul
popf
xchg
mov
outsl
xor
jbe
ds
hlt
push
xorl
push
push
jno
ficoms
out
mov
lods
aaa
decb
fs
in
inc
pusha
xor
push
xlat
icebp
push
inc
push
jle
push
push
in
jmp
cmp
out
xor
sbb
mov
cmpsl
insl
mov
mov
adc
jle
xlat
lret
xor
mov
gs
imul
cld
dec
and
cmp
jl
pusha
push
std
sub
or
fiadds
adc
aaa
lods
jecxz
shrl
pop
jnp
add
xor
in
xor
jg
mov
mov
out
dec
jl
mov
xor
fstpt
pop
jp
out
cmp
aam
lcall
push
pop
addr16
xchg
out
fimull
stos
cmp
jecxz
sub
pop
shll
mov
jnp
jnp
mov
fcmovnu
outsl
out
test
je
or
mov
xor
push
xor
or
sub
mov
xchg
loop
shl
pop
fdivrs
cmp
mov
xchg
mov
sarl
adc
pop
pop
mov
in
xchg
mov
xchg
pop
pop
mov
inc
push
mov
imul
cmpsb
nop
sub
in
fiaddl
aaa
int3
lret
and
cmp
aaa
lods
gs
mov
fcmovu
cmp
icebp
or
cmpsl
cmp
dec
inc
jmp
sbb
fistpl
fmull
xlat
gs
lcall
and
jle
mov
mov
push
push
mul
mov
dec
inc
and
in
pop
imul
pop
adc
ror
push
xchg
push
out
jnp
adc
jnp
sub
jle
stc
imul
xchg
inc
sbb
rcrl
dec
xor
cli
cmp
jno
jb
icebp
adc
imul
mov
aaa
xor
jg
jle
or
out
jp
gs
jp
push
jbe
mov
and
xchg
pop
outsb
shll
rcrl
fwait
pop
sbb
aaa
shrl
mov
sarl
shl
mov
daa
jmp
xchg
or
popf
icebp
xlat
and
loopne
pop
mov
mov
insl
mov
adc
into
in
cmpsl
enter
mov
imul
pop
push
or
lods
clc
addr16
pop
mov
jno
or
mov
js
push
popa
lock
xchg
dec
pushf
adc
xor
xor
aad
cmp
iret
test
push
dec
adc
inc
and
jnp
mov
pusha
rcl
xor
or
mov
pop
mov
push
pusha
call
les
mov
cmc
push
jle
or
push
sbb
outsb
add
mov
jo
fdivr
ret
jo
cld
mov
pop
mov
pop
push
lea
xchg
dec
cmp
das
push
xor
mov
lods
std
clc
mov
into
dec
cmp
in
jle
push
mov
push
cltd
cmc
sbb
mov
nop
xor
inc
bound
fwait
insb
movsb
and
pop
enter
pop
or
mov
popf
aam
xor
dec
popf
movsb
bound
mov
pop
inc
frstor
inc
aas
sub
in
xchg
sahf
pop
sub
pop
lods
fstps
pop
in
loop
push
sbb
push
push
or
loope
and
gs
push
pop
mov
gs
loop
and
adc
fcomps
mov
aam
in
sub
sbb
adc
addb
xchg
test
repnz
push
fisttpl
push
out
out
out
scas
in
xor
mov
dec
sub
add
pop
aaa
imul
jns
dec
cmp
adc
pusha
and
adc
push
stos
and
xchg
push
in
and
lea
cmpl
shrb
lock
xchg
inc
mov
mov
sahf
lods
and
mov
mov
rclb
xchg
rorb
in
notl
test
inc
sub
leave
aas
push
jg
push
mov
pop
shll
push
popl
lahf
inc
iret
sub
popa
sarb
adc
popa
dec
and
cmpsb
xchg
pop
aas
fcmove
rcl
cld
stos
daa
mov
pusha
cmp
xchg
into
loop
adc
sbb
xchg
pop
xchg
jecxz
fwait
js
xor
push
insl
cs
pop
jecxz
pop
xor
push
xor
cltd
pop
cmp
jmp
out
mov
daa
addl
adc
push
stc
jmp
loope
push
xor
jnp
movb
xlat
xor
test
lea
ljmp
pusha
mov
lret
mov
sti
es
jns
icebp
adc
cs
and
insl
xlat
jecxz
in
shlb
mov
insb
sbb
adc
mov
adc
sti
rcl
fadd
test
xchg
dec
xchg
jb
jp
movsl
sub
je
pop
and
rclb
or
cmp
and
movsb
popf
dec
sub
dec
ljmp
inc
and
push
cmp
push
sub
xchg
mov
invd
xor
fsubrs
mov
sub
fmull
movsl
xor
bound
pusha
pop
mov
xor
gs
outsl
in
aam
mov
mov
mov
dec
push
aaa
jp
add
mov
push
jmp
test
fbld
jmp
mov
xchg
mov
out
inc
push
pushl
jnp
xchg
adc
and
cmp
push
cmp
and
cli
mov
lahf
scas
xor
xor
cmpsb
subb
pop
cmpsl
shlb
repnz
fxch
test
fsubs
mov
pop
mov
stos
mov
push
pop
shrl
jo
icebp
rcrl
stos
jae
arpl
dec
jns
lret
negb
push
dec
pop
pop
adc
pop
adc
add
lret
sub
cmp
and
lea
or
push
fcoml
insl
repz
and
sub
mov
or
mov
cmp
pop
shll
mov
or
fnstenv
mov
movsl
cmpsb
icebp
dec
push
sarb
movq
les
addr16
bound
or
jae
adc
cli
sub
ss
xor
xor
es
lea
and
add
push
mov
or
inc
in
rcrb
les
cmp
pop
mov
push
jge
xchg
jg
xor
add
sub
call
ret
jne
stos
gs
arpl
add
stc
jle
mov
nop
lock
in
mov
jbe
jl
jbe
frstor
insl
cmp
icebp
cli
mov
pop
popf
in
ja
lahf
add
movsl
push
xchg
ficomps
inc
adc
jb
mov
xchg
loop
push
pop
jne
das
inc
dec
or
add
push
sar
pusha
xchg
shll
mov
xchg
add
mov
mov
in
jl
adc
fildl
cmp
pop
dec
push
cmc
xor
adc
sbb
dec
ja
movsl
cmpsl
mov
push
pop
icebp
test
fisttpll
outsb
push
mov
jmp
jno
jno
xchg
stos
pop
inc
push
popa
sbb
scas
mov
cwtl
aad
jo
addl
add
rorl
orl
push
ds
fcmovnu
dec
popa
and
cwtl
ja
xchg
enter
aam
in
popf
cld
pushf
push
jp
add
add
add
add
dec
add
add
mov
add
add
add
add
daa
insb
add
add
xchg
sbb
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
jo
jo
cmpsl
pushl
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
add
add
push
insl
add
add
add
add
add
add
add
add
cmc
add
jge
push
add
pusha
cs
add
add
add
inc
add
xlat
add
aad
add
sub
clc
add
test
add
popa
add
pusha
pop
outsl
ja
jae
inc
add
pop
imul
push
add
add
sahf
add
andnps
test
movl
or
push
cmpb
mov
sbb
push
test
test
std
incl
jmp
test
in
adcl
adc
testl
in
inc
std
decl
incl
shl
mov
cmpl
add
add
add
popl
lcall
incl
adc
loopne
incl
adcl
cld
push
push
push
incl
shl
add
push
pushl
test
cwtl
stc
lea
lea
jne
add
adc
add
add
inc
adc
adc
add
add
add
add
add
add
add
add
add
push
add
add
outsl
jbe
inc
imul
adc
push
popa
gs
je
sub
outsb
jae
add
or
add
cmpsl
imul
add
js
jne
popa
insb
outsl
jae
imul
push
jb
xor
push
add
add
add
add
mov
add
add
add
add
add
dec
add
add
add
xchg
add
fldl
add
add
add
les
mov
inc
dec
int3
outsl
mov
inc
loop
hlt
mov
and
and
insl
daa
out
addl
xchg
fldenv
lods
out
mov
arpl
sahf
shl
das
mov
mov
inc
fidivl
or
fwait
mov
andb
pop
fldcw
add
cwtl
xchg
mov
or
xchg
sbb
mov
popa
aad
int
pop
push
out
leave
lock
stc
cmp
push
shll
sbb
imul
nop
jb
push
add
fstpt
fstl
xor
lcall
or
xlat
inc
xor
push
in
xchg
ror
cmpsl
hlt
ret
jbe
pop
scas
popf
mov
pop
je
jb
ret
and
idivl
cmp
push
inc
mov
fwait
pop
aam
pop
mov
adc
push
cmp
mov
bound
icebp
xchg
sub
fwait
mov
sub
pop
adc
mov
xor
aad
sub
mov
and
dec
ss
mov
mov
in
sub
jp
inc
sbb
xchg
dec
jno
dec
cmp
sbb
add
movsl
adcl
fwait
dec
or
notl
clc
mov
dec
mov
sbb
mov
pop
mov
repz
mov
imul
sbb
rcrl
dec
xchg
xchg
add
fcomip
mov
push
cmp
lods
mov
and
notl
sbb
jle
pop
ds
mov
fisttps
rorb
dec
fsubrs
filds
sahf
shrb
sbb
dec
adc
imul
and
push
inc
jle
repz
pop
je
cmp
cmp
test
mov
fistpl
bnd
push
adc
mov
scas
movsb
cmp
mov
out
test
fisubrl
iret
scas
mov
test
xchg
iret
sbb
and
xchg
push
and
push
xor
aad
addr16
dec
fstpl
mov
sbb
inc
pop
lahf
pushf
sbb
cmc
cmc
jg
dec
ss
cli
imul
stos
sbb
dec
sub
ja
fcomi
lock
mov
cmc
pop
jns
out
ret
into
repnz
les
lea
repz
fnstenv
ror
mov
and
inc
ljmp
mov
shll
cwtl
sti
and
addr16
cmpsb
iret
lods
out
sbb
pusha
and
jge
xchg
fistpll
stos
rol
add
dec
test
jmp
call
daa
ds
insb
pop
test
nop
sbb
stos
pop
in
sti
jnp
into
outsb
push
dec
inc
ret
push
shlb
push
push
inc
mov
sbb
jmp
cmp
loope
pop
fists
das
je
fidivrs
shrb
and
and
cs
lods
pop
fildl
fimull
insl
push
pop
add
scas
mov
repnz
iret
rorl
lock
jnp
ror
cmpsb
shll
addb
fbstp
sbb
mov
outsb
jae
out
rclb
dec
push
xor
testb
pop
neg
mov
cmc
in
sahf
cmp
stos
lahf
and
cltd
xor
push
mov
ficompl
icebp
mov
inc
data16
mov
clc
lret
or
shrl
les
sbb
sub
ficompl
dec
cmp
dec
cli
stc
subl
dec
jp
je
add
mov
movsl
cmp
rorl
jg
pop
xlat
dec
into
insb
outsb
cmp
pusha
add
push
vmovaps
xchg
out
mov
or
lds
std
roll
out
cmpsl
jge
fcmove
sbb
or
sub
inc
mov
mov
scas
xchg
xor
arpl
dec
notb
mov
lods
lods
mov
sub
add
iret
and
out
ret
jg
daa
cmc
stc
pop
ficompl
sti
jb
aas
test
mov
sub
jnp
out
stos
cld
inc
mov
ds
fucom
cwtl
std
test
out
aas
or
icebp
mov
andl
adc
imul
mov
mov
push
jmp
mov
jge
pop
fsubrs
fs
out
dec
push
frstor
gs
lea
sti
sbb
repz
test
sarb
insl
add
mov
add
sub
inc
addl
int3
int3
bswap
enter
sbb
or
xor
test
dec
inc
mov
popf
sub
or
pop
fstpl
in
xchg
ret
psubq
mov
inc
jle
sahf
xchg
pop
add
das
cmpl
ja
aam
sub
xchg
pop
sbb
push
daa
pop
int
cmpsb
push
xchg
rcr
lahf
cmpb
inc
stos
mov
hlt
or
mov
into
aad
or
fisubrs
or
sarb
or
jns
adc
xor
adc
test
lahf
mov
clc
incl
xorl
push
fidivrl
bound
sub
stos
dec
sub
cmp
adc
sub
cmp
mov
jge
dec
dec
mov
sahf
mov
adc
xlat
stos
xchg
push
cli
dec
aaa
jb
and
push
jmp
sub
mov
roll
add
adc
pop
xor
or
arpl
jl
inc
in
es
cs
mov
popf
inc
or
ljmp
cmp
mov
addb
mov
inc
cmp
cmp
cs
lods
fcoms
data16
add
dec
and
imul
ret
mov
sbb
test
pop
je
or
adc
pop
lret
inc
filds
lcall
andl
push
mov
sub
shll
fldt
negb
pushf
jo
pop
sub
pop
mov
daa
jl
jns
xchg
insl
mov
jbe
pop
adc
mov
or
mov
cld
and
add
xchg
repz
js
dec
sahf
dec
outsb
mov
cmp
push
pop
inc
mov
jge
jl
pop
jne
jge
or
rolb
jnp
test
lock
jg
scas
push
lock
movsb
inc
push
push
insb
call
inc
lock
test
push
pop
popa
pushf
jae
pop
push
cmc
or
mov
out
fidivl
roll
mov
or
movsl
fmulp
adc
out
cmp
jmp
sub
push
or
jecxz
pop
mov
pop
fnstcw
add
fldenv
jne
jp
dec
into
xchg
mov
nop
add
in
push
addl
mov
loopne
pop
bound
movsb
nop
jbe
lods
and
sbb
add
pop
or
loopne
dec
push
push
sbb
add
test
aam
inc
mov
xlat
mov
jae
in
data16
sub
jne
xor
incl
sarl
divps
nop
push
lds
andps
sub
insl
stc
mov
repz
mov
out
sbb
xchg
fiadds
pop
test
xor
pop
pusha
xchg
out
sub
pop
mov
ror
rcr
xor
lock
vmread
add
call
loope
les
xchg
xor
add
movsl
inc
divb
loope
inc
lock
dec
mov
mov
cmpsl
pop
and
mov
pop
or
sub
or
mov
pop
jne
jbe
or
jbe
push
cmc
outsb
test
scas
mov
hlt
test
push
adc
sub
fidivl
jmp
or
mov
pop
daa
pop
sbb
fwait
add
fidivrs
js
mov
rcll
les
ds
repz
or
pop
scas
adc
jl
popa
out
sbb
flds
inc
clc
mov
push
insb
xchg
mov
xchg
mov
cmp
push
vmread
setge
and
push
add
fwait
inc
xor
je
rorl
sti
lods
idiv
jg
inc
or
and
mov
int
aad
xor
sub
enter
jmp
lret
fwait
sarb
jge
mov
rol
insb
xchg
push
inc
jl
jge
ja
sar
into
mov
imul
push
add
mov
das
push
adc
dec
push
loop
push
pop
movsl
in
sbb
ja
test
push
jbe
or
jne
add
fdivrs
push
dec
rolb
in
hlt
mov
ret
sahf
test
mov
sbb
lock
add
icebp
push
xchg
mov
mov
xor
movsl
dec
pushf
sbb
sar
xchg
mov
ja
pop
adc
out
cmp
cld
cmp
iret
mov
testb
adc
xchg
sti
adc
out
fcomps
push
scas
lret
fsubrl
xor
iret
xchg
inc
push
aaa
lods
scas
sbb
das
or
mov
mov
jo
cmp
inc
lock
and
std
pop
mov
and
mov
jge
test
fstp
sar
roll
sbb
ror
insl
jecxz
in
nop
sub
fdivp
fdivrs
mov
shlb
push
xchg
jmp
ss
xchg
test
in
jg
jmp
cmp
dec
addr16
int
ret
and
idivl
sub
jb
xor
movsl
aam
adc
jne
loope
and
in
imul
xor
loop
adc
cld
dec
outsl
xor
jne
aas
xadd
adcb
inc
mov
cmpsl
xchg
jbe
push
mov
push
shlb
mov
or
mov
test
fstpt
loope
and
and
xchg
sahf
push
rcrl
add
lret
push
or
movsl
sbb
out
push
imul
data16
rcrb
sbb
call
pop
popa
mov
cs
adc
mov
mov
jge
gs
pusha
fsub
jge
aas
ds
mov
lea
imul
insl
jg
jne
imul
adc
inc
xchg
or
fisubrl
and
mov
call
pop
mov
cld
jg
dec
mov
shl
fsts
and
dec
enter
cs
dec
add
fdivs
out
mov
push
outsl
push
frstor
push
push
mov
and
or
mov
pop
repz
pushf
dec
sbb
mov
lret
adc
sub
scas
movb
cmp
cld
pop
jne
inc
loope
fistpl
mov
mov
dec
arpl
xor
rcl
xor
cmc
mov
sbb
pusha
clc
vmovsd
addr16
addr16
lahf
add
adc
and
mov
cmpb
dec
lods
mov
push
dec
mov
adc
inc
or
imul
fisttpl
mov
pop
shr
loop
lcall
scas
mov
pop
and
adc
push
xchg
mov
es
bound
xchg
ljmp
fnstenv
shlb
dec
movsb
clc
or
pop
mov
adc
push
cltd
xor
mov
les
daa
xor
into
sub
iret
out
sbb
mov
adc
fnsave
ja
or
imul
mov
nop
test
mov
jo
push
movsl
lahf
cmp
pop
jb
out
cmpsb
shl
test
pusha
jecxz
cmp
sbb
lahf
cmp
mull
movsl
pop
aaa
mov
repnz
mov
nop
push
xchg
add
push
jecxz
jbe
out
xchg
repz
pop
inc
ds
or
sub
cmp
sbb
jmp
pinsrw
push
add
rorl
jge
fcmovu
cmp
push
adc
jo
fmuls
aad
fwait
fstl
or
adc
stc
sbb
adc
sti
xchg
stc
std
xchg
out
aas
dec
push
mov
pop
sub
enter
xchg
or
xchg
add
sahf
popa
inc
into
fwait
movsl
mov
lea
lea
mov
popa
adc
cmc
mov
rcl
aaa
and
inc
popf
cwtl
or
mov
testb
in
push
xor
ss
stos
push
lret
jecxz
je
sub
sbb
adc
xchg
sbb
lret
mov
sub
fstl
mov
mov
ja
or
out
push
push
js
jo
scas
inc
inc
loope
push
mull
xchg
inc
scas
out
arpl
push
js
cwtl
sbb
pop
dec
sub
rorb
mov
pop
int
mov
repz
push
outsl
int
pop
dec
pop
inc
mov
pop
rclb
pop
sbb
dec
push
ret
push
cmp
mov
push
and
lods
nop
ror
inc
loope
iret
push
mov
shll
cmp
push
sub
mov
dec
sbb
xchg
push
lret
enter
shlb
xorb
xchg
push
out
scas
cmp
ss
xor
dec
and
rorb
xlat
mov
mov
popa
xchg
inc
stos
sub
call
fildl
test
pop
je
das
xorb
movsb
lods
fdivr
mov
mov
add
sub
mov
jle
pop
and
repnz
or
leave
bound
dec
gs
jns
mov
jb
adc
test
pushf
jbe
lahf
ja
jle
xchg
icebp
int3
aas
stos
dec
test
outsl
dec
loope
int
loop
dec
inc
stos
xor
cmp
xor
add
xchg
fiaddl
lods
insb
xor
sbb
loop
sbb
dec
out
push
add
scas
out
into
push
lret
rorl
jecxz
and
pusha
fdivs
or
lods
push
sbb
mov
adc
lahf
bound
push
repz
sarb
lock
jo
pop
jge
jae
arpl
ficoms
in
jno
sbb
das
cmc
xor
xor
and
es
cmp
sbb
mov
mov
jbe
cld
push
aad
or
jae
das
inc
in
and
cmp
cli
leave
dec
imul
popf
or
push
out
imul
test
mov
cltd
insl
adc
add
cltd
pop
clc
ljmp
fwait
jne
pop
push
mov
dec
sbb
xchg
sbb
inc
push
adc
xor
xchg
sub
sbb
cmp
jl
push
insb
pushf
xchg
popa
in
or
sbb
les
lds
sbb
or
jg
push
mov
arpl
cmp
jp
xchg
notl
fdivrl
roll
cmp
bound
pop
out
mov
mov
add
mov
daa
add
push
cs
daa
lock
mov
lret
inc
xchg
out
loopne
mov
and
fsubs
pop
loop
xor
pop
addl
sub
xchg
fistpll
inc
jo
jne
jge
xchg
xlat
adc
mov
shrb
fisttpl
adc
xor
pop
ficoml
adc
adc
aaa
subb
cmc
and
mov
xchg
bnd
jae
lret
jge
adcb
repnz
test
movsl
mov
adc
loopne
popa
jle
jb
ret
mov
or
xor
pop
outsl
dec
mov
add
xor
push
test
jge
pushf
cmp
cmc
jns
inc
test
push
arpl
inc
push
stos
pop
xchg
out
mov
inc
mov
rcrb
sub
mov
lret
test
mov
bnd
pop
rcr
jnp
mov
or
mov
test
out
mov
or
push
mov
gs
out
jo
xchg
jp
jns
out
add
cmp
rolb
mov
ret
push
leave
pop
cmp
xchg
lcall
ret
cmp
cmp
cwtl
shlb
inc
dec
and
xor
inc
add
shll
les
andb
mov
sub
setns
push
jp
ds
mov
fwait
dec
aam
mov
add
sub
inc
add
call
in
sbb
jl
fistps
sbb
mov
cmp
sbb
lret
push
enter
xchg
je
sbb
jle
fwait
xchg
shl
push
xchg
xor
aad
fs
mov
adc
in
pusha
and
sub
rcrb
imul
adc
in
xor
pop
xchg
and
xor
rorl
add
push
inc
cmp
jp
ds
aaa
and
sbb
mov
rorl
les
hlt
pop
mov
push
sbbl
xchg
xor
cmp
int3
outsl
pop
xchg
dec
in
xor
addl
mov
xor
arpl
pop
sub
imul
in
and
dec
xchg
std
xchg
inc
cmp
cmp
add
call
add
gs
sub
shrl
push
inc
pop
clc
aaa
test
cmpb
xchg
and
aam
jae
filds
int3
pop
xchg
jns
jae
pop
into
or
push
addr16
aaa
test
sub
lahf
inc
xor
dec
pop
repz
pop
shr
clc
pop
js
lea
test
mov
mov
out
outsl
or
lahf
xor
push
fsts
test
loopne
mov
test
add
fists
mov
lods
in
pop
add
les
add
sbb
or
aam
in
icebp
push
add
push
cmc
fldt
out
push
cltd
xchg
dec
cmp
mov
sbb
out
sarl
ljmp
pusha
subb
test
jp
adc
and
add
int
sti
add
bound
cmp
repz
stos
insl
push
std
mov
push
filds
arpl
jno
pop
sbb
enter
lods
pop
outsl
data16
cmp
add
lret
jns
mov
jae
xchg
dec
add
xchg
mov
adc
inc
loop
mov
mov
fcmovnu
repz
push
and
mov
cmpsb
pop
repnz
xor
cs
xlat
rolb
dec
cltd
out
push
cmpsl
xchg
lock
jns
movsb
add
add
add
add
popf
add
add
add
and
add
add
add
sub
add
mov
add
add
add
add
dec
add
add
add
or
add
add
les
add
xor
sbb
sub
mov
sub
add
adc
insl
add
fildll
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
xor
outsb
jb
or
add
add
add
in
inc
adc
push
jne
add
add
add
add
add
add
add
add
lds
add
add
add
add
add
add
add
add
sbb
and
js
add
fs
gs
add
je
fs
push
movb
roll
jecxz
sbb
loopne
add
or
add
fmuls
incl
adc
ljmp
clc
add
test
pusha
cld
add
push
rclb
add
cld
call
inc
insb
xchg
test
push
sar
cmp
sub
add
add
add
adc
leave
add
incl
add
lcall
adc
call
push
mov
cmc
hlt
push
popf
cld
loopne
incl
sbb
dec
push
push
test
movb
cld
lock
enter
add
push
call
add
jne
lret
add
repz
or
fadds
push
hlt
add
sbb
add
xor
add
add
add
add
add
add
add
in
add
add
inc
insb
insl
shll
je
jae
xor
insb
insb
imul
gs
inc
insl
outsl
inc
popa
dec
outsl
add
insb
add
add
push
inc
inc
gs
add
insb
add
outsl
jbe
outsb
pusha
jne
je
je
je
insb
xchg
mov
add
add
add
add
add
add
add
adc
sub
lds
sbb
adc
subl
in
xchg
adc
addl
xchg
js
cwtl
shl
sbb
cs
stc
cmc
xchg
subb
push
lods
and
aam
ret
paddusw
jb
xchg
lret
sbb
sub
clc
push
lods
cmp
iret
sbb
adcl
xorl
or
cs
jne
mov
lea
push
rcrb
jmp
adc
in
shlb
outsl
imul
jno
sbb
jge
and
jne
mov
in
leave
inc
or
sub
in
and
jecxz
xchg
test
and
cmp
inc
jmp
lea
xorl
sahf
aad
scas
aam
ljmp
fs
aaa
xchg
scas
lock
mov
mov
nop
push
pushf
dec
or
shll
fistps
pop
xchg
mov
dec
inc
ficomps
add
jae
mov
int3
shll
int
shlb
jae
testb
fwait
imul
std
js
fwait
jne
xor
lods
add
mov
clc
arpl
sub
adc
ljmp
add
push
stc
sub
icebp
xchg
push
pop
mov
mov
fdivrl
stos
fsubrl
sbb
ret
pop
pop
push
jbe
push
mov
fiaddl
mov
adc
jne
xchg
inc
push
pop
xchg
loopne
icebp
out
out
push
inc
loopne
sub
or
add
mov
mov
jmp
es
xchg
repnz
add
and
insb
or
in
in
mov
and
cld
sub
out
inc
pushf
dec
mov
push
lret
cmp
fwait
stc
out
or
pop
push
fisttps
dec
int3
in
pop
adcb
inc
xor
mov
sub
repz
fwait
lcall
inc
adc
sub
cmpsb
jne
icebp
out
fs
fs
popf
jge
lret
es
cli
or
lods
pop
out
pop
mov
mov
icebp
divl
jns
cmp
sub
les
lahf
push
pop
ret
pushf
sarb
mov
mov
mov
mov
addr16
test
jb
fcmove
lret
movsb
aas
mov
cmp
js
test
mov
sbb
and
adc
cli
and
sub
ds
jl
addb
sub
fwait
cmp
test
dec
adc
lock
out
pop
pop
xchg
xor
fidivrl
push
and
ds
cmp
push
jg
jno
adc
lods
shll
jecxz
mov
jle
dec
jbe
das
or
imul
sbb
ds
or
sar
in
and
xchg
add
enter
imul
sbb
or
push
mov
jne
mov
data16
pop
loope
xchg
shl
ja
dec
call
mov
sbb
je
in
xor
push
inc
jae
push
dec
adc
jnp
outsb
xchg
inc
cmp
xchg
dec
cmp
mov
adc
and
mov
in
jne
push
je
mov
inc
cmpsb
popa
icebp
in
push
mov
cmpsb
jbe
inc
fstpt
mov
jb
adc
dec
push
loop
ret
out
dec
cmp
loopne
out
xor
adc
popa
or
cmpsl
inc
xchg
push
jp
xchg
xlat
icebp
fcom
sahf
es
adc
pop
nop
jl
into
fucomp
pusha
bound
dec
ret
lret
mov
movsb
aam
mov
inc
loopne
aam
call
pop
inc
les
outsl
and
pop
mov
sub
test
orb
sbb
mull
aam
insl
mov
push
loopne
rcll
jl
repnz
shrb
call
pop
and
pop
xchg
jo
adcb
std
or
pushf
xor
mov
xchg
cmp
jge
push
jecxz
addb
add
lods
shlb
sbb
mov
adc
mov
pop
sahf
stc
jbe
sbb
stc
sbb
inc
test
cmp
je
les
dec
aad
mov
sbb
inc
dec
pusha
sbb
outsb
ret
and
adc
call
cmp
push
in
scas
mov
pop
out
leave
jp
rolb
jbe
lret
hlt
movsb
std
pop
push
shll
js
dec
lcall
stc
cmp
lods
leave
adc
js
mov
xor
int
xchg
mov
repz
ja
and
mov
scas
jge
ret
test
inc
cmpsl
jae
mov
pop
inc
mov
ss
imul
cmp
lea
stc
jmp
inc
js
imul
mov
dec
inc
test
cmp
pushf
xor
jle
sub
xlat
pushf
mov
sbb
push
ja
cmp
jle
mov
ja
mov
scas
shr
pop
cmp
pop
xchg
mov
fwait
push
and
fstpt
mov
pop
adc
lea
loop
sti
imul
pusha
mov
imul
retw
inc
shl
inc
xchg
ret
dec
ret
cmp
ljmp
iret
jbe
fcompl
xor
inc
fdivrs
adc
inc
lods
cmpl
nop
mov
fbstp
jmp
sub
xchg
je
pop
cmp
xor
add
fcoml
dec
cld
jmp
push
fcom
das
shrb
xor
jp
or
adc
clc
call
gs
scas
fcoml
mov
push
or
xchg
and
popf
loop
dec
movsb
lds
test
or
jno
jecxz
fistpl
cli
mov
and
dec
fsubrp
xor
jg
xchg
pand
test
jg
fimuls
popl
mov
xchg
cmp
movsl
jne
adc
lahf
sbb
rolb
or
lods
std
jmp
sub
lods
jnp
or
and
cld
sti
cmp
push
dec
add
mov
push
jp
xchg
lods
push
fsubp
dec
mov
push
inc
lods
xor
cmp
pop
enter
sbb
lods
je
sub
and
xor
add
and
or
push
sbb
sbb
dec
jmp
jnp
outsl
inc
and
push
fcoml
dec
iret
dec
scas
jge
mov
rorb
cmp
xchg
sub
add
pop
xor
pop
nop
jb
je
and
aas
push
arpl
dec
jg
adc
dec
fwait
test
ffreep
mov
imul
in
and
mov
mov
xlat
xor
fs
test
cmp
pop
mov
mov
imul
jo
hlt
hlt
sbb
fcmovnbe
sahf
movsb
mov
inc
push
scas
loop
mov
stos
fstpt
in
push
dec
cmp
rclb
sbb
or
push
gs
mov
test
mov
notl
mov
push
fimuls
push
clc
sbb
lock
daa
jno
enter
mov
pop
or
pop
mov
xor
inc
adc
fidivl
cmc
les
sub
pushf
or
xor
xchg
out
ffreep
out
adcl
dec
test
test
fld
xchg
fdivrp
cmpl
cmpsl
inc
rol
cmp
cmp
lahf
add
jecxz
test
xorl
add
mov
mov
rcrb
cmp
lods
add
sub
outsl
mov
ja
or
scas
imul
lea
push
mov
fisttps
int
icebp
xlat
mov
fidivl
cmp
add
cltd
jp
mov
mov
pop
repz
or
cmpb
mov
popa
pop
jge
push
sbb
rcl
rcrl
mov
stos
mov
stos
sub
mov
jno
add
cmp
or
xor
dec
ss
push
add
lock
jo
add
fldcw
inc
cld
add
iret
test
lahf
mov
fcmovnu
adc
mov
dec
mov
xchg
xorl
cmp
outsb
imul
ja
inc
cmpsl
sbb
pop
scas
aas
cwtl
movsb
in
addr16
lret
pushf
push
sub
sti
and
fs
cmp
cmpsl
addr16
cld
mov
fwait
and
mov
push
or
mov
inc
dec
pop
int3
pop
push
imul
mov
ja
shll
cmp
mov
adc
cmp
lods
mov
mov
jmp
arpl
mov
fists
push
nop
mov
lods
pop
xor
pushf
xchg
fs
popf
sahf
adc
jno
sub
sti
adc
pop
xchg
dec
push
xor
xchg
xchg
outsl
mov
aad
cmp
pop
lds
shrb
add
rorl
jne
jnp
ficoms
imul
mov
dec
test
nop
mov
cmp
sub
mov
mov
xor
sub
fucom
movsb
xor
repnz
push
jg
sbb
adc
xchg
mov
dec
test
pop
js
hlt
jecxz
lret
pop
fidivl
sahf
inc
mov
and
pcmpeqw
cltd
adc
adc
subb
xor
dec
mov
ja
cmp
push
outsb
or
in
xlat
adc
lret
outsb
dec
nop
ss
mov
ucomiss
pop
push
test
lahf
pop
lock
push
fidivrs
loopne
and
pusha
das
lds
fdivs
pushf
jns
add
adc
inc
inc
add
hlt
leave
insl
scas
push
xchg
in
sarl
and
xor
pop
lahf
mov
aaa
xor
or
lret
jnp
push
movsl
cmpsb
pop
clc
lret
mov
adc
fs
pop
xchg
add
inc
mov
mov
cmpl
mov
or
xchg
fwait
lods
mov
ss
stos
xchg
cmc
int
xchg
pop
notl
sub
xchg
sbb
lcall
int3
cmp
mov
sub
icebp
xchg
shrl
les
or
mov
cmp
jns
ja
out
jmp
fdivs
xchg
cmp
fsubrl
jge
xchg
dec
addb
inc
popa
mov
stc
call
push
test
and
cmpsb
mov
and
xchg
stc
mov
push
mov
mov
add
jle
adc
add
ljmp
adc
int
clc
xchg
cmp
mov
add
inc
or
and
ja
mov
js
rcrb
push
imulb
lock
loope
push
xor
cmp
pop
inc
frstor
outsb
sbb
mov
push
stc
repnz
rolb
add
push
or
and
repz
pop
bound
jb
andb
imul
data16
xchg
in
mov
out
mov
ljmp
das
lret
xchg
aad
mov
dec
sub
movsl
and
test
adc
cmp
xorl
bound
or
dec
addr16
loop
lea
inc
cld
dec
and
lds
cmp
in
movsb
filds
mov
or
je
dec
fisttps
push
and
mov
jne
mov
jg,pn
sbb
cmp
jnp
mov
inc
mov
xlat
fistpll
js
fwait
cmp
leave
movsb
loop
push
hlt
mov
inc
pop
ret
xchg
cmp
lods
dec
sub
sub
add
pop
ret
pop
add
add
mov
jecxz
imul
pop
shlb
mov
jge
es
lahf
hlt
and
insb
icebp
sahf
mov
shl
xchg
sahf
xchg
clc
dec
inc
imul
test
iret
mov
cwtl
int3
dec
or
stos
lret
repz
ret
jne
int
xchg
inc
cmpsl
imul
mov
xlat
testl
fnstsw
shll
jmp
loop
movsl
int3
add
jp
sbb
xchg
dec
negb
cmp
jecxz
xchg
adc
cld
in
loope
xchg
push
outsl
pop
ljmp
or
and
mov
iret
fadd
pop
ljmp
pop
clc
cld
add
sbb
jns
mov
cwtl
lds
ss
jbe
xchg
into
jae
daa
fistpll
fbld
scas
fadd
push
sarb
sub
xchg
mov
mov
daa
pop
push
or
arpl
mov
into
hlt
push
sub
push
mov
add
mov
xor
mov
sbb
sub
rolb
add
outsb
fadds
mov
mov
outsb
lods
lret
test
lds
ja
andl
ljmp
jmp
push
ss
sbb
mov
in
mov
scas
in
dec
mov
adc
cli
addr16
pop
in
jns
jg
or
dec
mov
dec
mov
bound
ss
sub
pop
push
or
outsb
shrl
dec
push
mov
push
sbb
adcl
int
jle
sbb
insl
sub
dec
jg
loope
xor
mov
ja
or
sbb
aad
iret
cmp
jae
arpl
out
inc
lds
ss
mov
inc
mov
push
ja
data16
scas
cmp
add
jae
dec
inc
cltd
pusha
and
cmp
lret
add
lahf
idivl
adc
rcll
shrl
add
call
mov
xchg
pop
xchg
and
mov
push
loop
inc
insb
xorl
jne
bound
fmuls
sbb
scas
cmp
imul
stc
ret
mov
ds
jo
xchg
es
enter
jg
data16
mov
sbb
sub
dec
pop
push
cmp
sahf
imul
push
pop
loope
xchg
adc
inc
mov
mov
cmpl
aaa
push
or
in
add
ret
fdivrs
push
jge
mov
cmp
and
mov
push
hlt
lret
movl
stos
ss
nop
jecxz
mov
sar
ja
push
lods
stos
mov
lods
fisubs
cmpsb
dec
int
cmpsb
push
sti
cmp
rclb
shlb
rclb
out
push
push
mov
pop
mov
ret
mov
sub
cmp
sub
aam
sbb
push
shrl
dec
outsl
xchg
jo
sbb
cli
out
jno
push
pop
sahf
popf
gs
xchg
int
mov
xchg
gs
imulb
filds
xchg
mov
sbb
popa
lods
pop
mov
or
lds
sbb
add
sub
lods
jg
jmp
test
sbb
dec
bound
mov
out
sbb
mov
mov
pop
out
xchg
sbb
adcl
sbb
ss
or
repnz
jne
jno
or
sbb
fbstp
std
pop
jne
sbb
in
sarb
dec
shl
in
xchg
ds
fisubs
xor
mov
mov
cltd
sbb
sub
stos
or
mov
pop
std
or
ljmp
mov
pop
out
cmp
lock
push
inc
int3
mov
pop
enter
mov
jns
or
adc
dec
popf
sbb
loop
mov
xchg
orb
ret
imul
sbb
cld
push
fistpl
dec
shlb
mov
jns
mov
jo
pop
mov
dec
sbb
push
pop
mov
jle
sub
mov
repnz
repnz
adc
push
jne
xchg
mov
sub
gs
imul
lahf
dec
mov
xchg
cmp
pextrw
xchg
imul
hlt
mov
lods
mov
inc
movsb
roll
les
adc
dec
enter
push
sbb
sbbl
nop
ds
mov
adc
lcall
lahf
mov
dec
loope
or
cmp
cmp
jb
call
xorb
cmp
daa
js
repnz
mov
je
or
popa
popa
adc
xchg
mov
lahf
xor
fisubrl
fs
loopne
hlt
insl
repnz
pop
dec
adc
cltd
mov
movsl
push
data16
scas
adc
out
push
ja
fs
add
stos
lcall
cmp
jb
repz
scas
sub
add
pop
stc
push
sti
pop
ret
sbb
push
xlat
fisubl
inc
dec
cmp
and
mov
mov
pop
xchg
push
cmp
repz
ss
adc
loope
xchg
cltd
mov
sub
push
adc
loopne
pop
pop
imul
inc
lcall
cmp
test
insb
divsd
rcll
es
aaa
adc
push
and
imul
push
pop
cmpsl
dec
jmp
dec
mov
and
push
pop
dec
pop
insl
cs
xorb
dec
daa
dec
ss
lcall
pop
fnstenv
cli
stos
test
rcr
sub
out
ret
jo
and
push
adc
repnz
cmp
and
enter
scas
xor
dec
jmp
inc
js
adc
sbb
aas
enter
ljmp
fisubl
fistl
push
pop
inc
and
adc
and
sbb
jns
dec
dec
fwait
cmp
mov
je
aad
roll
mov
rcr
adc
pop
loop
cmp
mov
outsb
add
sti
mov
stc
jmp
mov
pop
in
sbb
and
pop
cwtl
inc
arpl
data16
xor
jno
std
stos
or
adc
pop
leave
cmp
sub
xor
fcompl
inc
loope
pusha
mov
rcrl
outsb
outsb
popa
add
repnz
scas
xchg
cmp
psrlw
sti
les
int3
push
lret
rcll
cmp
aas
xchg
cwtl
fistpl
mov
hlt
adc
add
jmp
sub
push
jae
fwait
sbb
je
lods
shll
in
cmp
cmpsl
lret
mov
jecxz
push
addr16
jbe
pop
cld
xor
lods
testb
ret
cli
jecxz
cli
ljmp
pop
adc
sbb
stc
push
xchg
pop
dec
jl
pop
scas
pop
sbb
push
xor
notl
mov
jne
loopne
or
iret
xchg
js
test
cmc
mov
xor
lahf
mov
pop
xor
jns
mov
push
sub
add
cli
mov
push
push
ret
fnstcw
shr
xchg
cmpb
pop
jnp
notb
add
jns
xchg
es
dec
call
call
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
ja
pop
or
dec
int3
int3
int3
int3
int3
int3
int3
int3
pop
int
inc
add
add
pop
and
and
outsl
and
les
push
cld
xor
add
add
add
pop
add
add
jmp
add
add
add
or
add
or
add
add
add
cmpsb
sbb
sbb
pop
dec
sbb
pop
xor
add
and
jb
push
dec
jg
jb
fs
add
push
outsb
or
cld
stc
xor
xlat
sar
clc
dec
inc
in
jmp
fdivr
or
decl
jb
add
inc
adc
leave
dec
mov
cld
decl
pop
in
mov
xorb
ret
in
add
adc
sbb
add
adc
adc
push
inc
cld
stos
aam
rolb
adc
loopne
mov
cmp
lea
pop
add
jmp
std
pop
std
je
push
xor
cwtl
rcll
or
call
loopne
lock
push
adc
loopne
add
dec
jne
sarb
jo
mov
call
add
push
add
inc
dec
and
je
add
add
add
add
xchg
sbb
sbb
out
sbb
cmp
out
add
sbb
jae
outsl
test
insb
movsl
insl
insl
add
inc
je
add
movsl
outsb
sbb
inc
outsl
gs
imul
jae
insb
je
pusha
push
insb
imul
inc
push
jne
gs
jae
into
add
jae
loopne
insb
add
add
add
add
pop
dec
into
add
add
daa
jge
out
das
addr16
mov
dec
jae
rorl
adc
add
dec
inc
scas
data16
faddl
aad
or
imul
dec
scas
and
loopne
in
cmp
sbb
or
rolb
imul
jle,pn
shlb
push
ret
xor
lahf
adc
xor
enter
ret
std
ret
push
jns
cmp
cmp
shlb
into
xor
dec
mov
lret
push
jb
cs
xor
outsb
ficompl
push
mov
bound
sub
sub
ljmp
and
faddp
adc
gs
inc
out
addr16
mov
mov
mov
jmp
jge
popa
pop
sbb
orb
sbb
pop
mov
dec
xor
cmp
les
mov
jmp
outsl
or
dec
push
daa
imul
push
xor
scas
mov
jns
jns
sub
sub
andb
cltd
sbb
inc
mov
test
leave
jno
or
mov
cld
sub
shlb
inc
aas
cmpsb
push
add
add
fstpl
les
push
inc
enter
or
nop
jp
mov
sbb
mov
add
xor
je
addr16
shll
es
enter
push
lret
nop
mov
repnz
ja
mov
inc
mov
xchg
cmpb
scas
jbe
fmul
and
ds
orb
and
fisttpll
jns
sub
negl
fdivp
jo
or
mov
xchg
aas
sti
adc
pop
mov
and
dec
in
mov
inc
cmpsl
rorl
and
lods
loope
dec
je
and
sti
mov
push
jo
repz
push
adc
leave
out
and
lds
stos
pop
insb
cmp
push
sbb
pop
add
fldl
stos
sub
mov
xchg
cmp
orl
fnstenv
xchg
stos
std
push
mov
inc
dec
sub
insb
orl
in
addb
cmp
leave
call
aas
jge
mov
orb
rorl
repnz
sti
cmp
add
and
xchg
sbb
push
roll
xchg
push
mov
dec
outsb
pop
pop
pop
adc
das
or
push
fbstp
inc
mov
mov
aas
jbe
je
fcompl
fdiv
popa
add
jmp
push
jl
lea
daa
gs
popf
xor
mov
lret
mov
xchg
dec
xchg
cltd
or
sub
adc
xor
mov
inc
ja
aam
adc
xor
or
clc
mov
fs
mov
or
out
lock
ds
ja
mov
adc
pop
mov
inc
dec
jge
call
mov
arpl
inc
push
sub
ds
or
call
ret
je
fmuls
and
int3
mov
int
ja
xor
lock
mov
sbb
lods
sub
das
fwait
xor
adc
aad
ljmp
add
nop
call
sti
pop
mov
and
mov
iret
or
cmp
in
inc
xchg
jo
pushf
push
stc
mov
add
repnz
dec
incb
addr16
dec
push
test
jae
inc
pop
push
jno
fstl
imul
cwtl
cmp
je
pop
sti
aad
xor
imul
repnz
mov
push
xchg
xchg
inc
sbb
fidivrl
cld
data16
rorl
test
push
adc
lcall
test
dec
adc
push
popa
ja
dec
push
mov
test
jmp
inc
xchg
xchg
mov
ret
sbb
test
sub
dec
inc
mov
sbb
or
enter
mov
iret
cltd
mov
outsl
fdivrs
mov
add
pop
mov
and
push
jle
add
cwtl
pushf
arpl
shr
xchg
out
or
and
jle
xchg
test
mov
sub
inc
mov
cmp
mov
imul
mov
push
movsb
push
cmp
mov
adc
xor
pop
cmp
push
push
pop
scas
mov
mov
mov
mov
movsl
loopne
insl
mov
pop
jmp
mov
cs
and
pop
inc
outsb
outsl
push
dec
repnz
ret
sti
cmp
rorl
cmpl
mov
jg
sti
das
xor
cmp
mov
cld
inc
mov
push
movsl
fsubp
mov
inc
fwait
xchg
shld
or
and
loop
sub
or
stc
push
lcall
les
dec
ds
call
lret
stos
push
lods
aam
testl
fs
pop
jle
push
pusha
repz
ss
imul
sub
insb
imul
loopne
mov
add
loopne
add
aam
icebp
lock
pop
dec
insb
mov
and
or
lcall
sub
pandn
stos
cmp
or
sbb
xchg
test
fisubrs
daa
and
jmp
adc
ss
dec
arpl
fcmovnbe
add
jp
adc
pusha
aad
out
ret
iret
stos
scas
adc
hlt
nop
fcompl
sti
shrl
push
and
jns
mov
lahf
xchg
aad
in
inc
adc
push
aaa
sub
push
addr16
dec
lods
sub
jb
inc
loopne
adc
fidivl
adc
inc
test
in
sbb
test
cld
push
jno
mov
clc
push
movsl
or
das
sbb
jecxz
vpsrad
xor
dec
pop
movsb
jecxz
lods
jmp
add
xor
mov
ljmp
mov
bound
js
pushf
outsl
pop
cmp
adc
shrb
clc
sub
test
rorb
dec
dec
imul
adc
sahf
pop
push
mov
mov
and
mov
pop
lock
imul
enter
rorl
dec
test
jo
dec
imul
addl
pop
outsb
xor
and
movsb
fidivrs
xchg
lcall
push
and
ljmp
enter
xchg
xchg
fimuls
loope
jl
dec
loop
scas
fmulp
jbe
xchg
out
clc
mov
mov
movsl
jmp
in
jne
scas
mov
xor
and
sbb
push
cli
cmp
push
mov
jecxz
jmp
js
popf
xor
pusha
sahf
or
mov
mov
jg
push
xor
mov
jmp
and
adc
mov
mov
ss
scas
mov
adc
subl
arpl
xor
jnp
roll
sbb
pmullw
rcl
ss
and
jp
jno
sbb
sub
push
cmp
add
js
movsb
xchg
test
xchg
fdivl
mov
or
das
inc
mov
ss
mov
xlat
mov
push
fildl
sub
ja
sub
fisubrl
call
jecxz
jge
stos
sub
mov
pop
sbb
repnz
test
mov
push
daa
shll
mov
cmp
in
nop
in
es
dec
and
imul
mov
xchg
fmull
sub
test
cld
xorl
dec
cmp
mov
jnp
test
aas
mov
flds
movsb
jns
xor
addr16
inc
xor
mov
repz
rclb
jne
and
push
mov
sub
jo
mov
sub
hlt
enter
or
pusha
lods
in
pop
jae
stos
or
and
repz
pushf
add
add
cmp
xor
lret
mov
fstl
mov
mov
stos
es
mov
add
cwtl
pop
add
cs
cmp
aaa
cs
mov
jns
add
mov
jo
mov
aaa
pop
mov
sarl
ljmp
lret
and
jle
int3
inc
mov
stos
js
cmpsb
jle
test
mov
mov
jmp
repnz
push
mov
outsb
lret
mov
cmp
addl
xchg
iret
inc
aam
das
repnz
xor
fcomps
sbb
sbb
push
pop
jb
shll
push
jae
fiaddl
and
xchg
ljmp
inc
dec
lret
ret
dec
int3
and
or
std
ljmp
inc
sbb
jle
outsl
sub
mov
lds
xor
mov
cmp
mov
lea
repz
jne
dec
or
test
push
mov
xchg
xor
pop
scas
pop
jno
lcall
pop
push
push
mov
in
push
fnstenv
lods
mov
or
in
xor
mov
mov
sbb
ret
ss
test
mov
and
push
iret
adc
pop
sub
jb
fidivl
fistpll
pop
ror
outsl
mov
es
jne
cmp
mov
or
lret
in
cltd
ss
test
imul
add
push
arpl
imul
xchg
pop
mov
mov
mov
and
bound
mov
dec
dec
xchg
fbstp
mov
cld
ss
lock
jbe
call
shl
test
dec
mov
sub
clc
out
pop
mov
mulb
idiv
cmpsb
inc
push
test
pop
jle
mov
sti
push
pop
push
outsl
sub
dec
cmpsl
mov
mov
dec
in
jge
cmp
fisubl
scas
lds
lahf
add
adc
sub
popf
sahf
sub
mov
shll
adc
gs
mov
pushf
push
and
mov
sbb
in
mov
outsl
lcall
push
or
push
sbb
cmc
outsb
xchg
jle
lock
ds
in
andl
jecxz
mov
mov
shll
pop
sbb
inc
pop
fs
cld
bswap
test
jmp
adc
jecxz
stos
scas
mov
pop
and
ljmp
incl
cmpb
fidivrl
inc
ja
inc
mov
dec
add
mov
xchg
jnp
test
in
data16
and
jmp
jp
sahf
fcompl
adc
test
adc
dec
adc
pop
fs
int3
lods
in
leave
and
leave
xchg
mov
push
xchg
jmp
je
clc
xor
jno
scas
incb
jnp
andl
mov
adc
mov
xchg
dec
aas
xchg
xor
push
mov
in
mov
mov
sti
mov
xor
push
outsl
bound
sahf
imul
jnp
nop
sub
mov
mov
cmp
scas
add
mov
out
lea
out
test
test
loope
bound
dec
mov
jae
xor
and
or
inc
push
add
cmp
push
icebp
sub
int3
sub
sbb
jne
mov
test
fwait
imul
mov
in
mov
xchg
stos
jecxz
inc
xor
cmp
loopne
adc
int
add
mov
shll
pop
sub
push
js
mov
sarl
mov
push
sub
sti
jae
movsl
inc
scas
jns
xchg
cmp
insl
flds
insb
cli
sbbl
stos
lods
inc
xchg
mov
stc
jg
subl
add
scas
cmp
jecxz
shl
jbe
sbb
mov
nop
jne
inc
out
pop
and
cltd
lods
or
or
dec
fcomip
fdivl
test
and
push
jns
push
cmc
sub
dec
cmp
add
gs
and
bnd
xor
fists
fisttpl
jg
sarl
jne
dec
sbb
push
sub
jno
jnp
push
inc
sarl
inc
pop
jbe
push
pushf
bound
lea
mov
mov
jne
mov
test
icebp
repz
mov
push
lret
mov
outsb
sti
and
adc
stc
inc
sar
inc
scas
and
call
lahf
mov
jp
push
loopne
addr16
push
mov
jno
xor
loopne
imul
lret
pop
mov
sub
or
scas
xchg
cltd
ds
dec
mov
cmpsb
xchg
push
add
loope
fists
hlt
pop
test
mov
pop
stos
loope
jo
jmp
bound
cld
xlat
mov
sar
ljmp
adc
or
mov
aam
lahf
fwait
jp
xor
cli
add
dec
xor
lcall
sub
outsb
pop
data16
cmpsl
rcrl
inc
mov
mov
or
movsb
sub
out
fidivrs
enter
jmp
mov
pop
popf
xchg
push
cmp
fldcw
fnsave
fwait
jae
adc
aam
pop
stc
mov
test
rcrl
shlb
xlat
mov
dec
sub
mov
lods
scas
mov
mov
sub
add
add
pop
jo
in
inc
das
xchg
adc
mov
stos
sbbl
pop
movsl
dec
adc
push
cwtl
sub
fs
push
xor
sub
dec
cmp
stc
jnp
jl
js
fstps
jp
sar
cwtl
enter
lock
cmp
add
xor
rol
add
test
fnstsw
or
inc
je
jno
les
fs
ret
xor
mov
mov
cmp
mov
and
push
mov
jp
mov
data16
and
jp
testb
imul
mov
mov
mov
xor
faddl
stos
xchg
mov
pop
cmpsl
into
adc
mov
pop
or
cmp
sarl
xor
lds
lret
int3
adc
aas
addl
sti
idivb
popf
cmp
scas
and
fcmovbe
out
xor
scas
icebp
pusha
adc
outsl
pop
rcrl
jno
repz
je
pop
or
rol
in
mov
stos
add
dec
jne
mov
pop
orl
adc
jb
cwtl
or
loopne
loope
lock
arpl
shll
mov
sbb
stos
mov
mov
xor
pop
aam
lcall
adc
xchg
mov
inc
jmp
cmp
pop
jle
pop
and
dec
subl
and
stos
out
rcll
cmp
mov
gs
dec
lock
push
cmp
ja
or
gs
rorb
int
loope
jl
add
clc
aam
in
xor
icebp
lahf
xor
jmp
stc
dec
icebp
and
add
fbstp
mov
inc
jae
outsl
xor
rcrl
mov
and
call
out
push
xchg
dec
movsl
iret
and
loopne
sub
cmpsl
sub
pop
inc
mov
cwtl
faddp
push
jp
mov
xor
out
push
mov
pop
mov
inc
push
testl
data16
in
and
adc
outsb
inc
jmp
or
jnp
lods
pop
jo
ja
pop
sbb
dec
sub
xchg
mov
shrb
clc
sub
pop
pop
mov
data16
dec
and
add
rcrb
mov
fidivl
add
jecxz
jmp
lods
fildl
movups
add
cli
mov
js
or
imul
bound
jmp
mov
or
mov
or
das
lret
add
ljmp
sbb
sbb
dec
data16
dec
mov
mov
inc
push
dec
stc
cmpb
sbb
cwtl
push
fcomps
cmpsb
jle
xchg
addr16
arpl
les
out
repz
test
xchg
sub
sahf
idiv
push
popf
xor
ret
xchg
notl
stc
pop
orl
nop/reserved
aaa
mov
mov
sbb
in
in
inc
sub
push
es
push
in
testl
mov
xchg
pop
xchg
xor
push
jmp
aam
arpl
test
ja
fsub
jo
cmp
pop
shrl
cmp
call
adc
sahf
pop
mov
outsl
pop
inc
add
je
les
xchg
negb
mov
or
push
fldt
repnz
insl
iret
aam
mov
ja
push
sbb
and
std
adc
dec
nop
mov
mov
mov
aam
out
mov
pop
test
in
push
dec
lock
cmp
fidivrl
stc
shll
sbb
dec
stos
jp
cli
fnstsw
and
dec
or
scas
push
repz
mov
or
and
mov
add
loop
es
roll
ret
std
adc
push
push
aam
cmpsb
cmpsb
adc
mov
dec
adc
and
lock
int3
scas
add
mov
sub
push
or
clc
mov
das
mov
lahf
dec
adc
lcall
push
jge
push
mov
sub
sbb
mov
sarl
add
push
jbe
push
pop
jno
js
inc
fisubl
ljmp
mov
popf
and
pop
cmpsb
js
cmp
add
and
pop
orb
sub
shrb
jns
dec
add
xchg
daa
dec
and
ret
popf
setne
sbb
subb
push
add
nop
xchg
mov
ljmp
rclb
and
je
pop
or
nop
and
incb
sub
sbb
xchg
inc
negb
inc
pop
cmpsl
dec
jbe
jp
adc
and
push
in
shll
ljmp
dec
cltd
ss
xor
nop
or
ss
inc
xchg
lds
lods
inc
mov
push
dec
out
pop
lcall
sub
push
les
cmp
je
cltd
or
dec
push
call
rcll
addr16
in
cmc
xchg
clc
pop
xchg
loopne
sbb
out
xor
or
ret
addr16
push
int
arpl
addb
mov
cltd
inc
ret
into
jbe
movsbl
mov
cmc
jle
out
pusha
inc
lcall
xor
das
jge
test
std
loop
addr16
cmp
decl
shrl
sub
dec
or
les
ja
sbb
add
daa
sbb
inc
add
add
push
sbb
test
add
pop
add
push
add
add
add
imul
add
add
add
add
or
add
add
or
in
in
cmp
add
add
addb
stos
stos
imul
js
js
js
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
ror
add
cld
enter
leave
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
leave
add
mov
add
test
add
jl
add
je
add
insb
leave
add
fs
add
pop
leave
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
leave
add
int3
leave
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
lret
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
lret
cld
lret
add
add
or
add
adc
add
sbb
add
and
add
aaa
lret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
lret
add
pop
lret
add
push
lret
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fmul
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
int
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
int
add
int
add
int
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
into
add
or
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmul
add
in
add
in
into
add
hlt
into
add
cld
into
add
add
add
pop
iret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
iret
add
pop
iret
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
