jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
push
xor
jno
mul
js
push
push
add
push
pop
add
add
stc
add
add
add
add
movl
lea
cmp
stos
add
add
add
add
add
add
xor
mov
add
add
and
jnp
push
add
addb
add
daa
add
add
add
add
add
add
add
add
add
add
add
popa
add
aas
add
add
add
add
add
add
outsb
add
add
add
add
mov
push
add
add
add
lods
add
add
inc
add
insb
add
add
add
test
add
add
or
aas
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
sbb
and
add
add
add
add
add
add
add
xor
mov
or
jo
outsb
add
xor
and
outsb
add
add
add
xor
and
xor
cmp
stc
add
add
add
mov
add
pusha
add
xor
mov
add
add
add
add
add
test
inc
add
add
add
add
inc
add
add
add
add
add
fildl
push
add
or
in
add
add
add
add
add
add
and
add
inc
add
add
add
add
add
add
add
xor
xor
popa
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
pusha
add
add
add
and
outsb
add
add
add
popa
add
add
add
add
pusha
add
xor
xchg
add
cltd
add
add
mov
add
add
add
xor
and
push
add
add
ret
add
add
add
add
add
sbb
cmp
sbb
add
add
test
inc
add
add
add
add
addl
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
add
add
add
testl
add
add
add
add
push
add
add
sbb
add
add
add
add
pop
add
add
add
xchg
add
stc
add
add
add
aaa
add
mov
aaa
add
add
add
add
xor
or
pusha
add
add
xor
cmp
sbb
add
add
push
add
int
jo
stc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
xor
lret
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
push
add
add
add
or
and
push
add
sbb
jo
push
add
add
add
repnz
int
addr16
jbe
mov
mov
in
ljmp
shlb
dec
dec
add
test
push
gs
fisubrl
push
stos
mov
std
mov
or
cmp
push
pop
clc
dec
lret
pop
and
pop
popa
fiaddl
xchg
adc
inc
lods
fadds
pushf
pop
jae
and
adc
in
push
cmp
imul
sbb
push
or
or
mov
or
mov
das
add
outsb
mov
test
pop
sbb
mov
add
fdivr
in
push
or
xchg
int
cmp
orb
cmc
inc
inc
movsl
inc
ret
nop
xchg
arpl
test
dec
push
aas
inc
xor
push
sbb
dec
mov
stos
leave
xchg
pusha
xor
movsl
pop
outsb
push
movsb
shrb
rcl
pop
xchg
rol
pop
mov
mov
jnp
and
rorl
lret
std
dec
ss
and
mov
xor
xor
inc
popf
mov
fiaddl
incb
mov
or
not
mov
data16
xor
pop
dec
xor
addb
xor
jno
mov
mov
mov
xor
dec
pop
add
jl
lret
xor
pop
jl
into
or
popf
es
push
xlat
loopne
mov
jecxz
pop
xor
adc
pop
loopne
sbb
sbb
push
std
jne
data16
je
jmp
adc
mov
push
xchg
das
or
fisttpll
movsl
sti
jp
jns
mov
in
or
out
xchg
dec
add
imul
add
dec
cmp
pop
ret
mov
jae
cmp
pop
es
dec
flds
cld
xor
cmp
ljmp
je
imul
pusha
loopne
repnz
add
sahf
push
jmp
mov
imul
adc
dec
xchg
int3
xchg
cmp
popa
bound
shll
xor
pop
sub
leave
pop
push
xor
es
imul
inc
out
mov
add
sti
pop
ljmp
xor
dec
enter
pop
and
ljmp
add
ljmp
push
pop
mov
and
sbb
jmp
push
add
pop
idiv
sahf
xor
jo
test
mov
mov
jecxz
imul
cmp
pop
pop
jle
popf
mov
add
or
xor
push
xlat
inc
inc
imul
mov
cwtl
sub
sbb
aad
mov
pop
mov
cmp
lret
int3
ret
rcll
rclb
mov
push
push
mov
repz
imull
xlat
movsb
sbb
fdiv
out
xchg
outsb
jg
out
mov
push
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
imul
pop
ficompl
stos
adc
call
dec
fstps
sub
sbb
jns
dec
lret
sub
sbb
stc
push
jp
dec
xlat
pop
test
or
cli
push
lret
xor
sbb
xchg
cmp
insl
aad
into
imul
mov
cmp
outsl
mov
cmovo
mov
inc
call
xchg
in
add
mov
xor
sub
dec
xchg
ljmp
ljmp
iret
mov
adc
aas
inc
cmp
scas
imul
or
mov
bound
es
add
cltd
sbb
sahf
hlt
stos
les
and
inc
loopne
mov
enter
push
jns
cmp
mov
subl
lcall
adc
push
jnp
sub
ljmp
ljmp
ds
sub
lock
jp
dec
rcrb
mov
jae
out
sbb
sub
sub
roll
into
jmp
das
mov
pop
sti
jae
push
push
sbb
inc
cmp
or
dec
stos
and
test
pop
std
jne
scas
adc
mov
or
stc
jp
dec
fstps
sub
sbb
jns
dec
lret
sub
sbb
leave
dec
fstps
sub
sbb
push
xchg
mulb
sub
inc
fidivrs
cmpsb
fisttpll
mov
scas
pop
mov
inc
mov
lea
add
xor
call
stos
xchg
cmp
ficomps
aaa
xor
xchg
ret
jmp
and
push
loope
int3
cld
ficomps
popa
lods
leave
fnsave
int3
out
js
mov
test
mov
jbe
jg
dec
imulb
iret
mov
cmp
cmp
adc
and
pop
jae
add
cmpsl
xlat
xchg
cmp
jle
jmp
aaa
dec
andl
in
jae
cs
lahf
shl
xor
xor
sbbb
mov
pop
mov
ds
jecxz
sub
sub
xor
clc
leave
fs
add
jle
out
repz
imul
insl
iret
fwait
pop
into
jl
mov
loopne
inc
mov
pop
outsl
sbb
mov
add
xor
je
movsb
mov
sub
repnz
pop
adcb
jmp
xor
pop
mov
sbb
ss
lcall
and
movsb
sub
aam
pop
outsb
cmp
xor
ret
xchg
xor
rcrl
push
sbb
gs
and
dec
pop
rolb
jp
and
fidivs
xchg
leave
dec
push
push
dec
inc
mov
lahf
fsubr
jg
sub
xor
jg
cmpsb
scas
lock
nop
mov
insb
addr16
mov
cmp
cmpsl
add
out
cmp
adc
ffreep
xor
dec
insb
fildl
sub
lods
packuswb
cwtl
pop
rcrb
dec
mov
add
cmpsl
xchg
mov
sbb
movsl
mov
pop
and
jmp
andl
add
push
loope
mov
dec
or
stos
jb
pusha
lcall
xchg
bound
iret
cltd
std
sbb
sub
insl
xor
rorl
xor
lea
jno
loope
aam
fnsave
push
shr
add
mov
or
xchg
lds
mov
push
cmp
loop
dec
out
arpl
add
or
and
cmp
dec
inc
dec
inc
pop
sub
cwtl
lcall
popa
aad
sti
xchg
mov
xchg
sbb
push
sar
cmp
cmp
aas
push
xchg
push
mov
flds
add
dec
jl
icebp
int3
sbb
sti
in
adc
pushf
ljmp
add
sub
movsl
or
scas
ret
daa
jmp
js
fwait
pop
adc
lcall
cmpsl
lret
dec
xchg
adc
pop
mov
test
dec
dec
seta
fnstcw
test
fidivrl
aaa
push
test
push
xor
mov
ss
shlb
imul
mov
cmp
bound
and
in
jecxz
outsb
mov
repz
dec
clc
sbb
add
lods
sbb
imul
fmuls
push
roll
adc
pop
je
add
stos
lret
sbb
cmp
lcall
inc
insl
js
push
and
pushf
jl
mov
mov
loopne
xor
sub
pop
orl
aas
lret
xchg
cmp
mov
jnp
mov
ret
fs
jno
sbb
pop
int3
cmp
out
outsl
sub
mov
loop
dec
fiadds
jp
insl
mull
mov
jb
shlb
jle
arpl
fidivrs
jge
pop
dec
movb
push
dec
push
add
cli
mov
imul
call
jmp
cmpsl
sub
pop
std
cmpsb
outsb
mov
mov
fidivrs
push
testb
jno
inc
cs
or
jg
adc
or
in
xchg
adc
es
mov
fstps
mov
mov
pop
addr16
jge
cwtl
mov
lds
jns
cmp
mov
cmp
fwait
mov
out
push
jbe
sub
bound
loope
mov
jecxz
in
fwait
enter
mov
iret
xchg
sub
ds
sub
push
cmp
fsub
adc
int3
test
int
or
cld
rcll
pop
sub
push
sbb
mov
or
jno
sub
push
xchg
sbb
cmp
xchg
pop
ficompl
jo
les
mov
test
or
push
push
movsb
ljmp
sbb
inc
xchg
sub
push
xor
mov
jo
mov
xchg
and
mov
mov
jmp
scas
dec
cmpsb
and
or
mov
cmp
push
cmc
in
gs
out
cs
mov
push
jo
pop
or
lods
xor
fstpl
push
addr16
add
imul
or
arpl
loop
hlt
scas
push
add
sub
mov
frstor
cli
pop
pmuludq
push
or
cmp
daa
lock
outsl
sbb
mov
inc
out
mov
and
cli
add
xchg
mov
popa
pop
cli
and
sbb
jno
iret
addl
in
jns
mov
push
aad
or
js
adc
inc
lods
mov
dec
fbld
sti
shl
iret
push
jp
daa
in
inc
mov
dec
scas
les
mov
add
call
fwait
inc
adc
or
in
ficoml
add
mull
popl
add
int
icebp
push
push
loopne
data16
or
jae
adc
pop
test
sub
bound
leave
lds
sub
adc
jg
push
push
mov
roll
inc
fmull
and
test
sub
adc
cli
rclb
pushf
fisubl
cmovbe
xchg
shl
cmp
or
push
mov
mov
push
sub
push
inc
xchg
mov
xchg
es
dec
inc
jge
inc
icebp
cmp
mov
pop
lods
inc
shlb
mov
bound
enter
rolb
leave
shrl
lahf
pop
arpl
dec
mov
mov
sub
sbb
mov
cltd
and
push
out
cld
mov
pusha
pop
xchg
out
jbe
inc
cwtl
sbb
push
mov
or
push
test
jg
outsl
jne
movsl
fldenv
push
add
shl
test
inc
out
jl
push
loope
jbe
mov
ja
icebp
rcrb
inc
fisttpll
rcll
or
adc
dec
jecxz
minps
mov
sub
les
mov
cmp
dec
jne
sahf
fldenv
push
rcl
addl
or
cmp
nop
or
push
mov
dec
mov
inc
icebp
adc
fmul
or
inc
imul
pushf
nop
cmp
fidivs
ss
sub
push
fsts
stos
test
js
scas
lds
push
mov
pop
cmpsb
adc
fsub
add
sbb
pop
push
outsl
and
pushl
and
mov
fildll
jbe
mov
jge
xchg
xchg
rcrb
adc
ds
mov
mov
jecxz
pop
pop
xor
nop
dec
repnz
pop
push
test
clc
shl
mov
int3
pop
jo
shll
sub
cmp
jp
daa
stos
fmuls
inc
push
mov
or
inc
leave
mov
cmpb
sub
and
sahf
in
lock
lods
inc
aaa
lock
es
mov
sub
lods
xor
ret
dec
pop
cmp
in
add
cli
imul
pop
ljmp
inc
pop
es
inc
mov
shrl
mov
sub
aam
sbb
in
fs
or
je
mov
int3
out
nop
in
stc
inc
outsl
pop
and
pop
mov
sbbl
or
inc
sbb
push
mov
pop
or
sub
test
outsb
inc
and
cmpsb
mov
lods
shrb
nop
inc
stos
pushf
push
fwait
cmp
leave
jnp
mov
out
or
fmull
and
pop
rorb
adcb
jg
nop
leave
sub
lds
sbb
adc
pop
mov
repz
movsb
sub
lods
pop
ljmp
mov
mov
fs
sub
mov
fmulp
clc
arpl
clc
jbe
xor
outsl
push
mov
jo
lret
xchg
test
or
lret
sub
adc
orl
out
push
add
cmp
xor
jecxz
push
adc
or
movsl
and
jp
loope
and
enter
adc
icebp
sbb
adc
ret
test
jecxz
imul
cmp
or
jno
pop
xchg
and
lret
mov
jmp
ss
push
lods
mov
int3
jae
dec
cmpsb
aad
xchg
cmp
sub
cs
out
adc
xor
sahf
mov
push
sbb
xchg
adc
mulb
addr16
lds
mov
sub
mov
and
cmc
or
mov
xchg
mov
sbb
push
or
and
cltd
cltd
push
xor
push
fldenv
jmp
mov
and
sarb
je
adc
stc
add
sub
cld
cmpl
clc
push
fsubrl
fistpl
sub
es
mov
or
sbb
fadds
in
jp
mov
push
cld
push
mov
mov
aam
imul
loope
rcrl
mov
repz
ret
sbb
loopne
ret
ja
xchg
lret
sub
cmp
test
jbe
std
test
lret
add
stos
mov
jnp
push
pop
and
in
gs
in
bound
leave
pop
shll
in
jb
push
das
lock
xor
adc
cwtl
clc
jmp
cmp
pop
lea
hlt
cmp
std
xadd
mov
jnp
in
xchg
enter
push
mov
jbe
shrb
and
je
sub
or
jbe
into
imul
subl
dec
int
cmp
out
add
scas
fadds
insl
xchg
jg
push
scas
pop
insb
sbb
push
dec
mov
push
sbb
repz
pop
mov
dec
subl
call
pusha
ja
leave
sub
icebp
push
dec
inc
insb
xchg
add
addr16
fsubl
jecxz
mull
into
inc
mov
or
in
xchg
outsb
inc
sbb
push
xchg
pop
in
test
aas
xor
add
iret
pop
lret
mull
sbb
jns
xchg
cmpl
jb
sbb
shl
xor
iret
xchg
test
mov
popf
or
add
sbb
inc
js
and
loopne
sub
add
insb
divb
or
mov
sbb
imul
call
clc
sub
xor
lret
out
cmp
sub
test
jmp
outsl
inc
into
add
mov
sbb
aam
ljmp
pop
inc
mov
jmp
repz
popf
repnz
dec
sub
cmpsb
stos
in
dec
aad
sub
adc
dec
mov
cwtl
rcrb
mov
mov
mov
inc
push
lds
int
popa
jg
and
mov
enter
pop
fcmovnu
mov
pop
mov
pop
add
mov
das
jmp
add
push
fwait
add
btsl
lock
fldl
rcll
mov
addl
xchg
sub
pop
fists
sbb
dec
test
sub
test
lahf
fimull
lret
pop
dec
mov
cmp
mov
sbb
in
pop
push
xchg
test
mov
inc
cmp
pop
push
jp
shl
cld
sbb
repnz
dec
insb
xlat
adc
jne
inc
jge
push
pop
jl
adc
xor
or
popl
pop
ss
out
lea
lods
push
lods
test
push
jns
jecxz
in
mov
and
das
shll
mov
fmuls
test
or
cmc
in
xchg
dec
test
mov
movsl
xchg
cld
dec
xor
test
cli
cs
dec
mov
sbb
jne
adc
inc
jne
ja
fwait
jne
xorb
adc
pop
jnp
lods
push
out
inc
sbb
jnp
outsl
jmp
ljmp
mov
adc
push
movsl
jo
mov
in
push
dec
push
mov
or
mov
popf
div
into
add
mov
inc
xchg
test
pop
daa
out
sbb
lahf
jo
dec
mov
lret
insl
outsb
pop
je
jb
xchg
mov
das
fildll
mov
stos
inc
fstps
jecxz
push
pushl
dec
loope
leave
inc
or
mov
or
fists
cmpsb
repz
outsl
mov
into
shlb
negl
fisubs
outsb
or
lret
adc
mov
inc
xchg
inc
stos
rcr
xor
sbb
jg
mov
in
inc
xor
cmp
and
popa
fiaddl
sub
pop
ja
cmp
cld
inc
and
lods
and
ja
lock
rol
add
xchg
xchg
loop
xor
shlb
mov
or
in
dec
push
inc
cmp
add
xchg
in
aam
pop
inc
int
out
aaa
cwtl
xor
aam
adc
jns
scas
arpl
mov
enter
jmp
in
xor
add
pop
lods
in
outsb
push
xor
jecxz
mov
bound
mov
cltd
jnp
and
jl
sbb
lret
popf
jne
jne
adc
xchg
xor
adc
jae
mov
push
cmpsb
add
fisttps
data16
dec
hlt
add
adc
inc
sub
mov
rclb
les
mov
outsb
fisttpl
outsl
xchg
repnz
sbb
or
add
mov
jecxz
sub
pop
nop
sahf
dec
or
ret
out
test
dec
or
cwtl
ja
mov
mov
push
adc
cmp
fisubrl
rcll
adc
xsave
imul
icebp
inc
mov
sub
mov
mov
test
mov
cltd
push
sbb
cmp
jnp
dec
aam
cmp
xchg
enter
xor
jae
aad
ret
mov
mov
ds
cmp
outsb
std
ja
rcll
stos
mov
push
mov
stc
sub
or
dec
or
testl
iret
out
repnz
push
lret
in
push
inc
jns
pop
push
mov
jle
jnp
add
ret
lds
push
fstpt
dec
jl
std
jl
ss
jle
movsl
ffreep
jg
test
out
push
loop
andl
add
dec
clc
pushf
xchg
sub
leave
pop
out
push
fdivl
sbb
enter
pop
ret
rcll
dec
test
lods
pop
cmp
daa
popa
cmp
or
sub
add
addl
icebp
jecxz
adc
popf
or
sbb
into
sub
scas
xchg
mov
xor
in
or
xchg
dec
sahf
rcll
in
jl
cmp
or
ss
or
loope
jns
aam
es
cmp
push
dec
add
pop
cmp
sub
mov
mov
clc
addr16
aas
inc
lret
stos
xchg
rcr
jbe
pop
test
cld
and
arpl
mov
mov
adc
or
scas
mov
pop
sub
mov
or
cld
dec
stos
jmp
cmp
dec
and
push
test
loopne
les
jbe
cli
jb
rcl
sbb
add
jecxz
and
or
fwait
push
mov
mov
outsb
repz
mov
pop
jne
arpl
pushf
enter
cmp
adcl
cmp
cli
push
pop
in
add
orl
bound
add
pop
loope
pop
sti
pop
mov
stos
mov
cmp
dec
dec
les
adc
mov
add
xchg
jge
clc
sahf
sub
movsl
pop
fidivl
add
shll
push
imul
mov
xchg
adc
xor
push
inc
or
int3
lds
jmp
jle
les
fmull
xacquire
test
inc
lods
mov
inc
adc
sub
js
xchg
cs
shll
adc
iret
rcrb
mov
push
faddl
pop
arpl
aad
inc
clc
cld
sbb
push
cmp
mov
call
push
lods
push
cs
je
pop
mov
call
pop
cmc
fcoms
pop
push
ds
pop
lods
push
inc
xchg
stos
testl
or
cmp
cltd
lods
sub
xor
xchg
int3
addr16
imull
outsb
add
mov
ljmp
xchg
jb
cli
bnd
cmp
jl
mov
xlat
add
mov
je
test
cmp
jnp
outsb
push
sub
push
loop
mov
shl
repnz
mov
and
stc
cltd
add
cli
fistpll
mov
mov
push
cmp
inc
rclb
enter
add
call
ljmp
lcall
mov
enter
mov
nop
xor
addl
int
mov
pop
adc
ljmp
fcomps
roll
xor
xchg
and
add
test
insb
xor
fisttpll
or
dec
jne
fistps
mov
lret
sahf
push
dec
mov
pop
test
sub
jl
int
leave
pop
jns
out
push
lods
scas
cmp
or
ds
mov
sub
or
mov
lret
mov
push
shrl
inc
loop
push
leave
daa
sub
pop
sbb
loopne
add
cmc
jo
mov
mov
fstps
in
mov
inc
xor
sbb
scas
insl
jo
or
xchg
mov
push
cmpsl
mov
and
add
xor
popf
xchg
jl
scas
mov
out
lods
aaa
lods
sbb
aaa
inc
cmp
loope
repnz
add
inc
push
inc
mov
mov
jp
mov
cwtl
mov
mov
mov
jne
push
cmp
popa
out
dec
and
faddl
jmp
jmp
push
movsb
sub
in
out
mov
add
xchg
lds
movl
loopne
xchg
pop
sbb
cmp
ficomps
jb
cmp
movsb
jle
jbe
mov
pop
mov
cs
dec
push
mov
mov
xor
or
pop
aam
mov
cmc
shll
and
pusha
jae
cmpsb
jbe
push
negl
jle
pop
mov
push
mov
sti
in
dec
xchg
inc
aam
out
addr16
cmc
pop
frstor
jno
movsb
repz
xchg
setns
ret
push
sub
fmul
sti
pop
pop
adc
mov
adcb
mov
add
vsubps
xchg
gs
add
gs
add
repnz
stc
outsl
xor
loopne
fstpt
mov
dec
mov
cmpsb
and
push
sub
xor
mov
fisttpl
out
cmpsb
lret
xchg
adc
lds
mov
sub
loop
mov
mov
inc
mov
cmp
pop
lahf
add
jo
fwait
stos
cmpl
cmc
sbb
gs
daa
stc
sbb
jmp
ljmp
jg
dec
adc
rorb
testl
push
adc
es
lds
shr
xor
lret
inc
clc
shr
inc
les
lcall
xchg
or
ret
data16
push
push
inc
into
inc
cli
repnz
fsubl
fidivl
and
fldt
loop
pop
test
idivl
pop
inc
popf
iret
rorb
adc
mov
push
fbstp
xchg
js
dec
arpl
loope
in
ja
and
jb
test
push
adc
dec
aaa
sbb
cmpsl
sub
pop
out
imul
lds
push
and
adc
insl
int3
scas
dec
rolb
mov
shrb
mov
jge
lret
add
mov
ss
or
rol
test
aas
pop
sbb
out
add
out
or
std
jg
inc
cmp
int
adcb
in
adc
ja
adc
sti
dec
into
jp
inc
jae
xchg
inc
jbe
pop
xor
mov
outsb
mov
cmp
test
loop
out
div
nop
arpl
jae
dec
int3
dec
clc
out
jo
gs
mov
mov
fiadds
out
jns
pop
pop
inc
push
adc
jl
dec
mov
and
loopne
push
pop
mov
jl
pop
cmc
dec
mov
cmpl
mov
add
mov
xor
test
out
jbe
dec
lods
push
fildll
fstl
cmp
out
mov
adc
leave
fsubrs
xor
inc
shlb
cli
inc
lret
sub
sbb
leave
dec
fstps
sub
sbb
jns
dec
lret
sub
sbb
leave
dec
fstps
sub
sbb
jns
dec
lret
sub
sbb
leave
dec
fstps
sub
sbb
jnp
dec
lret
sub
cltd
lcall
fldcw
jbe
in
or
sbb
cmp
sbb
ss
cmp
test
in
nop
enter
call
inc
sbb
cmp
push
lds
xchg
enter
call
lds
repz
pop
sbb
js
mov
les
lcall
adc
gs
xor
sahf
mov
xor
fwait
out
int
test
out
dec
iret
rolb
arpl
dec
cmp
movl
mov
clc
or
adc
xor
sub
push
popf
pop
je
inc
outsl
sbb
data16
or
inc
pop
cli
stc
adc
cmp
sub
dec
cli
dec
xor
daa
sub
mov
sbb
fwait
xchg
rclb
movsl
xchg
adc
push
out
data16
test
lea
mov
rorb
std
pop
mov
fdivr
sub
lods
in
adc
test
std
mov
data16
jne
or
adc
push
push
cwtl
sub
enter
call
xor
xor
jle
daa
jo
es
test
movsl
movb
push
popf
push
dec
int
xor
scas
outsl
jl
fs
pop
push
js
int
hlt
nop
decb
mov
popf
in
daa
pop
jbe
add
and
pop
xor
mov
cwtl
cmc
test
mov
mov
movsl
clc
push
or
jne
cmp
push
lds
xchg
enter
call
orl
push
cmp
sbb
cmc
pop
pop
inc
popf
mov
cmc
pop
aaa
mov
fstpt
arpl
inc
cmc
and
popa
mov
dec
pop
fwait
cmp
fldt
add
pop
ret
xchg
dec
xchg
sbb
push
stc
popf
xchg
inc
add
test
popf
jno
xchg
mov
dec
ljmp
fists
cli
test
pop
mov
jg
adc
loopne
xchg
mov
clc
div
inc
mov
loopne
inc
je
mov
or
mov
sbb
push
push
jp
cld
lret
inc
adc
dec
add
jp
outsb
cld
xor
fistpll
push
sti
inc
jge
lret
mov
or
mov
mov
sar
add
daa
push
add
out
sub
stos
arpl
sbb
outsb
cmp
test
or
cmp
pop
push
popa
ljmp
popa
add
sbb
jl
pop
adc
cmp
mov
and
mov
iret
add
jnp
ret
mov
sub
jp
sbb
and
sbb
shr
and
xor
dec
dec
ret
and
shl
lea
loopne
adc
pop
pop
fidivs
sar
cwtl
cmc
mov
scas
cmpb
inc
call
hlt
push
and
dec
fimuls
jp
adcb
jecxz
inc
add
ljmp
test
mov
addr16
push
push
sub
cmp
sub
out
ret
es
dec
and
call
xor
call
pop
rolb
int3
inc
mov
push
call
xchg
ljmp
mov
cmp
jle
aam
lock
inc
adc
cmp
test
fs
shl
lret
adc
adc
loop
xlat
mov
into
bound
and
xchg
je
xchg
movsl
pop
pop
inc
lret
shlb
xchg
adc
pop
mov
add
push
dec
mov
aaa
xorl
dec
and
std
sti
jecxz
mov
mov
adc
xor
notb
iret
and
pop
mov
inc
sbb
jge
inc
mov
cwtl
xlat
int
loopne
mov
jno
out
aad
pop
or
jb
aaa
xchg
imul
dec
dec
cs
sub
jbe
rcrb
pop
fcmove
and
rclb
fdivrp
roll
and
clc
fs
cmp
inc
loope
adc
push
push
pusha
sti
insl
loope
or
and
dec
into
pop
push
mov
dec
sbb
xor
xlat
cmc
xor
cmc
cld
rcll
ljmp
inc
adc
xor
in
cmp
int
inc
push
loope
jno
lock
test
outsl
and
iret
jb
sti
push
mov
fs
mov
testl
or
xchg
sub
fisttpl
rcll
xchg
adc
enter
sbb
insb
sahf
inc
dec
xchg
push
lock
icebp
pop
aas
or
push
fs
cmp
sbb
pop
cli
or
jbe
cmpsb
into
dec
adc
insb
stos
mov
rcll
cld
mov
std
lret
inc
push
aaa
mov
fidivrs
mov
insl
inc
roll
ret
jl
sbb
lcall
or
jecxz
jno
loope
mov
loopne
cmc
pop
sbb
lea
icebp
xchg
loop
inc
mov
push
push
mov
push
call
outsb
pop
outsl
loopne
inc
adc
or
xorb
adc
xor
pextrw
cmp
cmp
dec
gs
enter
out
mov
test
sbb
cmp
xor
pminsw
jp
mov
ja
das
sub
stos
std
scas
outsl
jb
push
roll
fisubs
scas
insb
xor
push
mov
cld
mov
pop
es
iret
push
push
add
pop
jg
pop
dec
test
das
sbb
dec
mov
xor
and
dec
sahf
lcall
je
repnz
lds
jo
cltd
dec
mov
xor
rorb
icebp
or
cli
sahf
and
out
nop
in
int3
jecxz
jno
pop
imul
push
ja
pop
mov
dec
xor
stc
pop
mov
xor
in
pop
jmp
mov
dec
and
lds
jns
mov
nop
mov
xchg
mov
int
aam
adc
push
sti
push
cmp
or
std
dec
pop
cmp
into
pop
push
ret
icebp
test
in
fimuls
sbb
mov
pop
in
cld
repnz
dec
inc
mov
mov
mov
inc
mov
dec
stos
movb
adc
cmp
mov
push
fiaddl
adc
aad
mov
jno
loop
mov
or
xor
mov
push
xchg
xchg
push
nop
sti
mov
mov
rcrl
test
sahf
mov
cltd
add
push
out
fnstenv
call
loopne
mov
mov
call
jl
sbb
mov
sbb
mov
sub
ss
xor
lock
pop
mov
data16
lahf
mov
pusha
mov
imul
xchg
pop
cmc
mov
imulb
int3
pop
out
lahf
xor
outsl
ss
inc
imul
nop
mov
or
sub
xchg
in
inc
xor
pop
adc
mov
fiadds
insb
add
daa
cwtl
iret
loopne
dec
xchg
lcall
mov
movsb
fcomp
dec
inc
lea
adc
or
jno
es
fisttps
sbb
outsb
jo
loopne
sub
jb
pop
xchg
and
test
inc
xlat
lahf
sub
xor
jo
mov
lods
mov
call
push
sbb
xlat
jl
cwtl
push
push
insl
and
cmc
in
sbb
xchg
xchg
pop
in
lock
xchg
mov
in
enter
test
mov
or
xlat
and
shrl
lcall
daa
sub
bound
insl
pop
ja
imul
or
cld
and
inc
loop
aad
push
xor
cmp
or
add
stos
xchg
dec
fstp
cmp
add
or
adc
inc
xor
popl
ljmp
and
mov
cmpl
mov
ja
mov
inc
repz
xorb
jp
jmp
dec
stc
int3
in
push
jb
orb
mov
nop
nop
sti
data16
dec
xorb
jns
xor
loop
test
int3
out
jecxz
or
stc
mov
adc
andl
movsb
in
hlt
aas
addb
sub
movsb
popf
out
or
fimuls
adc
daa
jb
pop
sub
imul
int3
adc
rsm
inc
inc
jge
cmp
xlat
into
stos
mov
je
test
jb
xchg
jne
dec
or
mov
sahf
lcall
xor
insl
repz
fstl
das
jne
fs
stc
jno
add
enter
fldcw
mov
leave
les
adc
hlt
inc
jae
incb
fs
out
mov
mov
cli
sti
outsb
jne
sbb
sar
mov
or
cmp
sub
sbbl
movsl
adc
xchg
jl
data16
dec
mov
jbe
push
jae
inc
jl
or
xor
call
sub
dec
pop
lret
adc
ds
dec
pop
mov
aam
sarb
fstpl
fsubs
inc
jg
insb
lea
sbb
ss
push
mov
loope
cmp
mov
dec
mov
inc
dec
push
or
mov
into
bound
pop
cmp
sti
je
adc
mov
pop
push
xchg
repnz
aas
cmpl
inc
hlt
outsb
repnz
pop
xor
je
sbb
push
xlat
outsl
mov
insl
push
mov
add
dec
sahf
add
cmp
enter
xor
dec
insb
pop
xor
push
xchg
jle
and
ljmp
or
ja
loopne
xor
movsl
xor
adc
jle
loop
dec
inc
xor
xor
repnz
cmc
lds
pop
jl
sbb
nop
pop
repz
inc
sbb
dec
pop
push
ljmp
jno
aad
popf
pop
int
push
clc
sub
lcall
fildl
xor
inc
push
add
jne,pn
cli
fists
push
xor
dec
dec
mov
sbb
popl
mov
stos
add
test
lret
ds
push
stos
xchg
fstp
cltd
loop
and
pop
pop
js
pop
fnstenv
mov
in
fnsave
cmp
dec
enter
enter
neg
dec
jno
jae
popf
ficomps
xchg
das
dec
inc
mov
jnp
les
and
xor
add
and
bound
loope
int
push
sahf
xchg
push
mov
xlat
pop
movsl
loope
pop
andl
aaa
jmp
dec
pop
shlb
xor
add
mov
mov
mov
test
xor
addr16
push
mov
pop
inc
ss
test
jl
or
pop
mov
or
js
test
aad
push
ud0
sbb
jmp
lods
sbb
lret
rolb
mov
jnp
push
sbb
ss
sub
test
sub
lods
pop
out
jmp
jmp
out
lock
iret
mov
mov
add
ss
call
adc
or
mov
adc
mov
dec
das
cmp
push
xor
pop
mov
lahf
int
add
loop
jle
jae
jge
in
mov
rorl
popl
sub
cmp
sbb
subb
push
mov
pusha
outsl
add
lcall
adc
add
or
jl
jb
mov
jmp
mov
pop
xchg
in
test
in
push
xchg
mov
or
sbbl
std
shrb
fcompl
nop
mov
xor
mov
ds
mov
movl
xor
jp
jmp
xchg
jb
pop
mov
outsb
jae
mov
imulb
mov
aas
mov
in
sbb
mov
repnz
popf
xchg
mov
hlt
fadds
jp
mov
stos
pop
cwtl
test
inc
dec
add
je
mov
movsl
iret
fbstp
lods
pop
jmp
hlt
jp
sub
in
jmp
cmp
ret
clc
mov
jmp
mov
mov
and
mull
mov
insb
pop
int3
mov
push
cmp
or
adc
stc
dec
cmp
int3
cmp
insl
shlb
mov
sbb
insl
xchg
aaa
and
push
fldt
sarb
and
imul
adc
hlt
loopne
mov
inc
pop
or
dec
push
pop
sbb
subb
jge
adc
lea
push
pop
push
xor
out
cmpsb
aad
in
pop
mov
sbb
sub
cmpsb
mov
fwait
mov
test
jmp
cwtl
sbb
jae
cmpsb
mov
sbb
adc
aaa
das
xchg
jp
in
arpl
aas
xor
loope
sub
je
lret
jmp
xchg
in
es
movsl
movsb
stos
inc
sub
nop
cmpsb
stos
and
idivl
clc
xor
sahf
sub
mov
into
addr16
cwtl
and
daa
neg
test
dec
sbb
outsl
lret
xchg
pop
or
in
xor
jbe
jno
push
adc
inc
lds
adc
mov
xor
pop
test
mov
sub
jle
jmp
xchg
or
ljmp
jno
sbb
cmc
popa
decb
out
iret
push
inc
hlt
xor
inc
arpl
movsl
insl
and
loope
je
call
ljmpw
arpl
xchg
push
mov
in
addr16
ljmp
pop
inc
or
test
movsb
hlt
add
jae
sbb
inc
sub
lret
mov
sbb
cwtl
pop
ds
enter
icebp
jmp
and
out
icebp
push
mov
mov
in
scas
ffreep
in
adc
push
adc
clc
arpl
xor
sub
jl
xor
jp
pop
inc
jne
rcrl
mov
push
rolb
inc
sub
cmp
scas
cli
jl
add
sbb
dec
dec
lods
dec
and
push
inc
sahf
xchg
jecxz
popa
ja
mov
mov
cwtl
pop
adc
lods
aad
cwtl
mov
in
pop
or
xor
into
add
add
js
sarl
jle
nop
cltd
mov
dec
or
adc
xchg
mov
in
push
cli
loope
inc
aam
push
stos
dec
orb
scas
andb
xchg
sbb
sbb
test
push
insl
pop
mov
dec
daa
mov
out
add
jnp
les
out
cs
and
dec
dec
sub
sbb
je
or
les
or
mov
pop
mov
bound
fwait
xor
aas
loop
push
fdiv
popa
mov
repz
mov
imul
push
adc
cmpsl
insb
rol
cs
je
mov
pusha
xchg
filds
mov
push
mov
cld
or
mov
hlt
mov
cwtl
call
jno
xor
clc
adc
add
inc
in
imul
out
sub
shrb
xchg
negl
adc
int
mov
or
cmp
ja
lea
lock
pushf
rcll
cmp
lret
stc
or
or
bound
adc
pop
outsl
inc
xorb
dec
and
mov
jg
xor
loope
loopne
ja
sbb
push
addl
iret
loopne
sub
add
std
pop
xchg
mov
mov
mov
movsl
stos
xor
fistpll
sbb
sub
push
mov
pop
inc
xchg
fs
jbe
cmpsb
loopne
sahf
inc
mov
mov
mov
divb
xchg
dec
xor
pusha
mov
push
out
jno
in
adc
cmc
lahf
inc
xorl
or
fmuls
aas
mov
xlat
pop
scas
inc
jae
xlat
xor
loop
rorl
insl
pop
arpl
ret
js
pop
xor
push
pop
jmp
jo
icebp
cmp
adc
inc
add
loope
nop
xchg
ret
mov
test
xor
dec
aaa
and
shrb
pop
sti
mov
ds
rol
aad
mov
sub
pop
sbb
mov
xchg
mov
cmpsb
cmpsl
jne
mov
push
shll
sbb
sbb
movsb
sar
sbb
in
frstor
lahf
cmp
add
stc
mov
fisttpl
leave
out
out
aam
lahf
dec
out
andb
cltd
or
movsl
ss
into
adcb
xor
pop
insb
mov
shrl
add
dec
cmp
inc
mov
insb
mov
push
rcrb
inc
test
inc
lods
jo
ds
ljmp
jp
hlt
cmp
jbe
test
loopne
outsl
jg
or
pop
in
jne
loop
or
mov
dec
dec
mov
mov
jl
push
out
dec
sti
rol
jno
mov
ljmp
cmp
jo
mov
rcll
push
fldt
xchg
xchg
xor
out
jp
or
push
movsl
xchg
cltd
sub
mov
lcall
sub
mov
xor
push
mov
sub
pop
jno
inc
insb
adcb
and
sbb
jmp
adc
les
test
push
ds
push
lret
test
jno
aas
pop
mov
pop
mov
pop
in
ret
fs
and
sub
stc
xlat
or
arpl
pop
lock
push
mov
jno
mov
pop
sbb
adc
aam
xor
and
adc
sbb
mov
cmp
or
aam
sti
push
xor
fstp
in
mov
or
xor
sub
mov
mov
jp
jp
shrb
dec
or
repz
mov
sbb
mov
xchg
push
adc
arpl
sub
mov
inc
push
out
out
sbb
popa
out
jmp
push
js
shll
sbbl
mov
mov
add
cld
movsl
out
sbb
jb
imul
mov
jge
shrb
popa
jle
out
lret
sbbl
movsl
jge
popa
mov
cmpsl
mov
xchg
in
dec
sub
jge
and
pop
sub
add
stos
sbb
mov
cmp
icebp
rolb
shr
push
lods
lds
cmpl
test
stos
xor
xchg
adc
dec
dec
xor
stos
cli
cli
adc
fdivs
mov
mov
lea
dec
mov
and
pushf
jge
push
mov
pop
lds
mov
jae
sub
enter
xor
lds
pop
jo
scas
divl
xchg
pop
xchg
sbb
ljmp
dec
mov
inc
or
pushf
ret
in
sbb
sub
add
mov
xor
outsl
icebp
int
pushf
mov
sahf
popf
sbb
cwtl
sbb
add
mov
int3
aad
dec
out
mov
in
in
push
bound
and
mov
mov
call
mov
xor
jl
xor
clc
data16
dec
test
push
in
push
arpl
aad
jnp
js
push
dec
into
and
pop
adc
and
xchg
test
das
jg
cmp
int3
jmp
repnz
or
jmp
dec
out
push
out
jl
mov
mov
pop
pushw
es
repz
jmp
xor
mov
inc
imul
jl
stos
or
lods
loopne
xchg
shrl
cli
and
inc
pop
cmp
out
jp
mov
mov
pop
sarl
jecxz
mov
out
lret
adc
js
rolb
ret
or
inc
xchg
cmc
int3
or
int3
ficoms
or
cmp
ja
adc
lahf
mov
popf
mov
les
ja
iret
test
cmpsb
shll
inc
or
lods
in
fistpl
popf
nop
mov
jo
sarb
sbb
sbb
push
mov
inc
jnp
xchg
and
mov
cwtl
push
data16
sahf
clc
jl
in
je
sbb
cmpb
or
adc
fcmove
nop
clc
mov
test
mov
sbb
add
fbstp
sbb
mov
imul
sarb
push
push
in
sub
fsts
aaa
fldenv
xor
push
lods
outsl
daa
jns
repnz
cmp
test
enter
add
lret
rclb
add
jmp
out
shl
dec
adc
cmp
lcall
imul
inc
insb
test
daa
and
adc
xchg
ficomps
pushf
sbb
dec
xchg
mov
pushf
repz
pop
decb
loope
jb
push
fwait
ss
aad
sbb
lret
repz
and
jne
mov
push
test
mov
shr
sbb
sbb
jnp
cmpb
in
std
lock
adcb
mov
jl
ja
out
test
popa
out
ret
jbe
pop
and
fwait
das
rcrb
cmp
xor
in
out
sub
cli
imul
fwait
xchg
test
repnz
inc
jg
jecxz
add
push
pop
decb
xor
jecxz
fldln2
dec
out
mov
fucomip
inc
and
adcb
sbb
lock
inc
xchg
pusha
out
or
data16
xor
jb
adc
mov
hlt
push
xor
loope
cmpl
aad
js
mov
shlb
addr16
aam
and
fs
jae
mov
lea
cmc
idivb
cmp
lcall
mov
mov
pop
push
pop
lea
push
sbb
fmull
jg
imull
loop
in
out
cmpsl
ljmp
shr
pop
inc
jge
and
pop
add
lock
ljmp
dec
mov
xchg
dec
inc
xchg
je
mov
subb
scas
sub
adc
add
jge
push
notb
in
jmp
sarb
testb
ja
fcomip
paddusb
cwtl
push
xor
cmc
and
sahf
js
test
add
lahf
out
or
inc
lock
leave
adc
pop
shll
dec
xchg
ja
call
fldcw
cmp
dec
dec
lds
orl
in
pop
aam
adc
lret
mov
jno
sbb
subb
mov
leave
sarb
frstor
mov
xchg
aaa
mov
rorl
xchg
mov
push
adc
fisttps
push
dec
jecxz
insl
mov
out
into
data16
jns
insb
out
std
icebp
or
cltd
loope
fimull
mov
push
cmpsb
jmp
imul
add
add
xchg
sbb
dec
add
js
mov
cwtl
cmc
test
mov
mov
movsl
clc
push
or
jne
cmp
push
lds
xchg
enter
call
inc
sbb
cmp
add
imul
cld
test
mov
mov
xchg
clc
dec
or
std
sub
adc
call
cmp
pop
test
iret
loop
or
pop
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
jns
imul
dec
dec
pop
insb
daa
add
cli
out
neg
leave
xlat
mov
xchg
ja
inc
dec
push
cmp
sub
sbb
or
stc
out
xchg
fld
leave
xlat
mov
lds
ja
inc
dec
push
cmp
sub
sbb
or
stc
dec
lret
mov
fcmovu
loopne
or
sub
push
ss
aam
fldl
call
xchg
into
push
xor
and
into
push
xchg
xor
test
movsb
sub
in
loope
inc
pcmpgtb
daa
ss
out
shrb
movb
add
insb
stos
sti
out
inc
push
sti
inc
sbb
or
pop
dec
sub
js
push
jns
dec
hlt
lcall
aaa
inc
mov
call
cmp
ss
int
dec
popa
js
sbb
xchg
mov
ret
or
in
adcb
inc
pop
jmp
js
sbb
xchg
mov
mov
adc
mov
mov
xlat
mov
jo
xchg
mov
pop
inc
dec
push
cmp
sub
sbb
or
stc
out
neg
leave
xlat
mov
xchg
ja
cs
pop
dec
inc
aaa
jbe
lea
orb
call
packuswb
and
pop
jo
pop
mov
leave
mov
lock
push
imul
daa
sub
sbb
or
stc
out
neg
leave
xlat
mov
xchg
ja
inc
dec
push
cmp
sub
sbb
or
stc
out
neg
leave
xlat
mov
xchg
ds
cmc
ss
jmp
fldl
mov
mov
add
out
xchg
aam
loope
imul
and
or
in
movsb
adc
inc
jae
popf
ficompl
fisubs
enter
mov
mov
int3
dec
jo
std
test
imul
imul
addl
push
jecxz
xchg
and
and
insb
and
bound
dec
dec
rcrl
sub
jle
mov
dec
push
sub
loope
add
rorl
cmp
inc
xor
stos
cmpl
push
mov
push
ucomiss
or
and
mov
or
inc
xchg
int3
es
out
mulb
inc
jecxz,pn
sub
mov
add
add
cmpsl
adc
adc
or
sahf
movsb
aad
xchg
xlat
test
pop
test
pop
lock
outsb
lds
incl
scas
in
or
xor
subb
and
lcall
pop
jne
mov
dec
mov
jmp
mov
mov
jo
fs
pop
jb
outsb
loope
jno
frstor
sbb
sbb
fwait
pop
sbb
movsb
gs
mov
int
mov
call
sbb
sub
jne
mov
lret
les
dec
xor
add
ja
mov
fcoms
test
jbe
nop
mov
bound
push
int3
dec
cmc
pop
jl
or
pop
jb
sub
repnz
std
stos
fcom
test
ja
addr16
cld
mov
push
xchg
push
pop
loopne
shlb
pop
adc
int
shl
sub
xchg
lcall
std
sub
and
or
icebp
ret
lret
sbb
rorb
cmp
test
rol
jmp
lahf
nop
inc
stos
add
add
outsb
mov
ja
pop
negb
mov
xchg
and
jmp
xchg
enter
adc
clc
or
loop
pop
enter
out
mov
push
lock
scas
jp
pop
popa
iret
nop
iret
xchg
loopne
xor
lret
into
push
cli
or
jne
mov
cmc
dec
movsb
cmc
pop
jae
cli
cmp
pop
dec
fiaddl
lock
cli
cmc
sahf
jl
adc
push
push
bound
pop
dec
popa
push
mov
and
imul
inc
inc
mov
jae
test
imul
adc
daa
stos
js
inc
sbb
pop
add
dec
cwtl
pusha
pushl
imul
inc
mov
jge
mov
imul
mov
ret
lahf
mov
aad
rcrb
jmp
jo
mov
xchg
mov
je
or
add
movsl
pop
stc
xor
lahf
imul
pusha
popa
xor
std
adc
jp
cmp
fildl
sarl
popf
ljmp
cmc
push
test
sub
jno
adc
xchg
mov
mov
dec
mov
inc
fisttpl
js
loope
xor
pushf
leave
mov
sbb
cltd
or
cmpsb
pop
mov
push
dec
nop
andl
orb
mov
or
push
pop
push
cmp
dec
jne
out
cmc
add
subb
lcall
pushf
test
mov
jl
mov
or
mov
dec
imul
clc
fistl
inc
push
insb
icebp
in
pop
xchg
sub
ret
pop
fcomps
fwait
scas
sub
out
add
inc
push
and
jl
add
mov
scas
sub
sub
inc
jb
inc
push
jae
add
inc
out
pop
pop
or
mov
shlb
fisttpl
inc
mov
pop
or
mov
mov
mov
xor
ret
pop
popl
adc
xchg
and
enter
aad
clc
mov
hlt
stos
mov
or
mov
aam
adc
add
int
add
aas
dec
add
jns
push
aas
sub
mov
mov
ret
clc
jbe
lret
xor
xchg
test
cmpsl
rcr
loope
xchg
popa
loope
aam
mov
mov
push
clc
push
sarb
fcoms
mov
jno
push
mov
cld
lods
or
loopne
scas
cmp
push
mov
shlb
cmp
and
movsb
in
xor
out
aam
cmc
xor
bound
dec
mov
dec
cmp
inc
mov
loope
sbb
mov
in
in
xor
jmp
xor
mul
push
push
cli
mov
adc
xchg
xchg
inc
adc
fidivs
add
cmp
cmp
push
xchg
inc
xor
fisubl
mov
popa
mov
ret
push
loop
jge
xorb
andl
adc
xchg
sti
push
xchg
inc
sbb
out
xor
xchg
lods
pop
pop
in
push
test
jb
fistpll
sbb
mov
mov
lret
lock
sbb
sub
mov
loopne
fidivl
fxch
and
xor
arpl
cs
pop
mov
shr
cltd
iret
ret
xchg
sti
fwait
xor
les
into
int3
insl
scas
cmp
das
insb
pop
fwait
scas
sbb
ljmp
pop
or
or
adc
shl
jno
lahf
pusha
sbb
cmp
and
shll
ljmp
imul
fisubs
push
dec
lods
aas
stos
push
stos
scas
push
scas
mov
sbb
sbb
jl
jns
bound
cmp
repnz
xchg
lret
xor
cmp
jbe
cmpsb
and
jo
cwtl
push
paddq
jge
mov
ds
mov
lods
xchg
test
mov
push
mov
cmpsl
push
add
cmp
stos
rcll
sahf
xchg
or
mov
lods
jge
shll
fs
movsb
es
xor
sub
in
in
and
mov
scas
test
inc
dec
sarb
cmpsb
pop
jmp
xlat
call
sbb
fs
icebp
mov
inc
and
loope
int
ficoml
pushf
nop
ja
stos
fs
xchg
stc
repz
adc
push
into
int
repnz
mov
les
popa
cmp
jae
mov
in
andb
mov
or
push
push
pop
mov
cmp
push
sbb
dec
push
mov
pop
aam
push
decl
mov
je
dec
push
sbb
push
dec
mull
fcoms
pop
test
shl
pop
push
mov
jl
adc
loope
jo
in
adc
jnp
add
push
test
test
sbb
in
nop
xor
mov
xchg
jnp
mov
jno
adcl
mov
xchg
ret
cs
loope
scas
or
mov
fsubr
insl
rcll
cmp
mov
loopne
fyl2xp1
std
in
in
ja
popa
es
arpl
mov
fadds
std
jnp
sub
and
inc
addr16
lea
in
fistl
push
inc
xchg
test
adc
xchg
mov
cltd
add
daa
pushf
insb
mov
aad
repnz
jmp
sub
clc
lret
aaa
cli
bound
repz
and
dec
jno
test
xchg
adc
mov
shlb
loope
or
xchg
mov
out
jmp
sub
dec
pop
lahf
xchg
jae
gs
push
outsb
negl
sti
or
ret
jle
gs
sbb
push
inc
test
jnp
xchg
cs
int
xor
cld
fcomi
cmp
jecxz
fs
stos
jb
fsub
hlt
scas
push
je
jbe
lods
inc
pop
fnstcw
push
or
addr16
lods
mov
mov
bound
dec
in
test
mov
jbe
aam
dec
ret
filds
in
fwait
xchg
xchg
sub
dec
sti
cmp
stos
int3
or
loop
xor
into
sub
add
test
fmull
push
std
inc
cwtl
sub
jbe
ja
jmp
fs
cli
mov
cmpsl
xor
inc
test
fimull
or
test
in
push
mov
int3
lcall
push
lahf
jno
call
mov
test
imul
fs
mov
loop
arpl
add
in
mov
sub
adc
and
scas
sbb
pusha
addr16
ret
rolb
add
pop
lds
inc
nop
mul
loopne
std
int3
sub
cmp
push
push
loope
jne
repnz
popa
fistps
add
sbb
insb
adc
outsl
incb
aas
inc
push
cmp
mov
and
gs
jl
gs
sub
adc
jae
and
lods
sahf
push
cmp
or
cmp
xchg
cmpsb
dec
push
push
add
mov
and
bound
in
es
ret
ja
cmp
xor
xchg
aaa
loop
mov
pop
imul
mov
dec
mov
inc
xor
mov
fsubrs
push
jno
popa
or
and
mov
cmp
loope
adc
xor
sbb
aad
fcoms
adc
xchg
in
cmpsl
add
inc
cmp
dec
inc
hlt
xor
cmp
and
mov
push
mov
sub
cld
stc
test
mov
sub
or
jmp
mov
and
pop
scas
dec
repnz
sarb
xor
movb
dec
xor
jmp
mov
push
xchg
push
mov
cli
test
push
scas
push
push
stos
jmp
sbb
cmp
dec
push
pop
cmp
mov
mov
ljmp
push
repnz
adc
mov
std
xor
sbb
stc
pop
aaa
cmp
jecxz
adc
shrb
xchg
jns
in
sub
mov
aaa
pop
xchg
je
jno
daa
jb
xchg
jo
push
das
pop
pop
cmp
test
jmp
push
jo
out
cmc
sbb
mov
je
pop
in
aam
movsb
dec
mov
ret
mov
ds
and
pop
mov
pusha
dec
jg
cmp
cmp
and
stos
mov
fidivs
test
cli
ficomps
insl
xchg
cmpsb
inc
shrd
jecxz
imul
cmp
orl
ret
mov
xlat
sahf
mov
xchg
repnz
cs
lods
push
push
lods
push
dec
outsb
in
push
dec
adcb
inc
mov
mov
loope
xchg
icebp
xchg
cmpsl
mov
push
cmp
or
sub
push
idivb
test
cmpsb
push
push
mov
lret
push
mov
mov
aad
sarb
xor
int
je
inc
xor
or
xchg
insl
push
fdivl
and
pusha
dec
stos
mov
imul
or
pop
call
dec
mov
xor
and
pushf
outsb
loop
fbstp
das
jl
test
jne
iret
ss
jecxz
jae
shlb
shrl
das
idivl
cltd
int3
cmc
dec
jg
pop
cmpsl
fdivrs
enter
daa
adc
rcll
dec
xor
mov
arpl
mov
fsin
fwait
cmp
popa
fmul
and
out
test
cld
adc
aad
cmp
mov
mov
xchg
inc
dec
cwtl
mov
sub
pop
popa
cltd
mov
in
dec
insl
mov
in
xchg
xchg
sub
mov
rcll
loopne
scas
ja
stos
mov
pushf
push
jae
ficoml
xor
jecxz
dec
cwtl
ja
mov
pop
rorl
xor
imul
cwtl
mov
xchg
mov
push
fmuls
mov
mov
ja
jbe
xchg
sahf
sub
int
sub
pop
fistpll
aas
cmovp
repz
mov
adc
std
sub
jecxz
fimuls
pop
push
jmp
imul
out
mov
inc
sbb
dec
adc
xor
pop
push
adc
lcall
jmp
jmp
xor
push
test
test
push
mov
lock
cmp
notb
push
fsubrl
js
pop
pushf
test
test
mov
test
mov
pusha
lcall
movsb
push
loop
xor
shrb
adc
sub
mov
fstpl
jns
mov
mov
push
sub
mov
pusha
xor
fs
out
jecxz
push
test
ljmp
mov
and
ds
lds
fnsave
cs
xchg
ja
jle
sub
xchg
dec
jo
mov
lock
sub
mov
mov
adcb
jle
inc
dec
sub
push
cmp
out
and
inc
jecxz
cmc
jo
mov
dec
xchg
xor
test
and
int3
add
sbb
mov
inc
in
insb
insl
add
sahf
rcr
adc
mov
mov
mov
in
xor
in
mov
jp
inc
in
push
push
jmp
mov
dec
push
add
test
ret
orb
mov
insl
lret
mov
mov
lods
dec
sub
idivb
jns
ficoml
std
inc
sarb
insb
iret
adc
xchg
popa
pushf
pusha
xor
leave
out
xlat
mov
inc
out
cld
cmp
repnz
in
pop
popa
push
loope
fwait
popf
das
jo
fs
insl
inc
sub
int
mov
repnz
lret
dec
movsb
outsl
pop
not
add
jl
cmc
adcl
repz
pop
repz
ret
push
roll
inc
sbb
shrl
mov
out
dec
add
push
fneni(8087
ret
jle
movsb
test
stos
repz
fstpl
aad
add
xchg
imul
xor
fistps
cmp
test
out
push
das
and
std
aas
out
inc
rolb
outsl
pop
mov
or
arpl
push
add
enter
clc
mov
push
mov
xchg
sarl
cmp
shr
arpl
mov
cmp
dec
xchg
add
fimuls
xchg
mov
cs
lock
bnd
mov
pop
jp
add
outsb
cltd
filds
dec
dec
mov
cmpsl
dec
inc
dec
lods
lahf
clc
xor
pop
sbb
js
mov
jne
sub
inc
aam
xor
sbb
pushf
jne
mov
aam
mov
add
sub
cltd
and
mov
fldt
and
aaa
addr16
and
push
in
ja
xchg
cmp
in
and
inc
mov
ja
push
xor
push
pop
ljmp
pop
cwtl
fadd
jbe
stos
jae
mov
xor
cltd
fistps
xchg
sarl
dec
xor
or
push
mov
shrb
sub
jl
iret
push
xor
push
sub
std
cmp
in
push
lret
rolb
repnz
sbb
jb
ja
sbb
inc
lahf
mov
shll
popf
and
repz
dec
jnp
push
sar
sub
sbb
in
lcall
mov
cmp
cwtl
pop
lds
xchg
push
cltd
and
fcomps
lods
arpl
add
rclb
mov
ss
mov
mov
sbb
sbb
xchg
pusha
jp
inc
fisubl
movsb
mov
adc
fwait
lds
dec
lods
jbe
les
xchg
lcall
xchg
cld
dec
inc
push
out
jns
leave
sub
push
pop
repnz
dec
loopne
sub
bound
fistpl
xor
push
and
xor
and
fcomps
pop
popf
mov
mov
out
inc
adc
xor
push
push
add
push
pop
and
lcall
loope
dec
sbb
pop
lret
xchg
mov
or
adc
repnz
lods
aam
nop
add
jno
xlat
xchg
hlt
dec
lahf
nop
out
test
and
bound
mov
imul
dec
mov
jns
test
leave
sbb
push
pop
pop
clc
inc
cmpsl
pop
cmp
test
sti
cmpb
mov
addb
pop
int3
jo
lcall
std
cmpsb
bound
fwait
inc
ret
mov
or
push
push
pop
mov
xor
loope
and
test
add
xchg
lods
bound
xchg
stos
loop
jge
sbb
neg
in
outsb
mov
push
add
in
cwtl
cltd
mov
lock
cmc
fs
cmc
dec
iret
add
imul
add
add
jmp
add
or
insb
or
pusha
jecxz
andb
cpuid
mov
mov
ret
adc
pushf
xor
mov
cmp
je
dec
stos
mov
jmp
push
int
shl
and
fwait
hlt
adc
pop
les
ss
jb
mov
and
mov
mov
shl
inc
or
pause
ret
iret
cltd
orb
pop
and
jno
mov
and
out
loope
mov
test
cs
cmp
xor
push
std
pop
cmpsl
call
jg
scas
loop
push
pop
in
lcall
out
aad
cmp
enter
or
shrl
pop
xorb
push
mov
stos
mov
jge
enter
cmc
mov
adc
pop
sbb
cmp
out
mov
jne
mov
stos
jb
cmp
es
lock
pop
pop
repnz
aaa
xor
test
pop
mov
arpl
mov
and
inc
std
int3
in
pop
jp
ret
inc
imulb
aas
in
je
out
jbe
roll
pop
adc
insl
sub
andl
lods
lret
mov
movsl
popf
jg
mov
imul
dec
lahf
jle
cs
test
fnstenv
xchg
popa
arpl
lock
sbb
dec
mov
pop
ds
sbb
sarl
pop
sub
mov
and
arpl
mov
mov
call
aas
mov
jnp
filds
aad
mov
insl
cs
or
ja
ret
xchg
mov
pop
adc
sbb
cwtl
add
and
add
mov
dec
mov
mulb
lret
jbe
mov
fbstp
and
lock
sub
adc
sbb
xchg
movsb
jno
lods
mov
cwtl
mov
and
push
mov
lahf
enter
les
adc
enter
pusha
fadds
xor
sbb
xchg
scas
aam
loop
inc
aad
mov
push
stos
adc
push
jnp
ret
lds
insb
push
push
pop
cmp
xchg
aas
xchg
cwtl
popf
fwait
cli
sbb
sysenter
xorb
xchg
push
and
push
jns
dec
lods
leave
pop
push
sti
shll
jae
lret
pop
mov
lds
jbe
inc
lmsw
sbb
pop
sbb
xchg
push
inc
aad
insb
inc
icebp
shll
mov
in
das
sub
pop
mov
js
repz
inc
inc
add
xchg
fsts
xorb
adc
sar
pushf
xchg
aaa
pop
pop
xchg
sub
sbbl
cmpsl
mov
divl
push
out
enter
mov
lcall
pop
ljmp
lret
es
nop
cmp
jg
dec
cmp
adc
jne
xor
sbb
jbe
jne
pop
push
pop
int
les
sub
inc
xchg
mov
pushf
adc
add
xchg
pop
mov
mov
xor
pop
xor
dec
and
xor
sahf
test
jbe
addr16
out
adc
mov
jae
inc
stos
or
loop
xchg
aam
pop
jb
inc
or
mov
sti
jbe
nop
loop
push
cmc
sbb
lret
cmp
inc
inc
pop
shl
xchg
adc
pop
inc
inc
mov
pushf
mov
stos
push
push
mov
inc
stc
jno
shl
mov
test
roll
xchg
pop
shrl
stos
mov
std
movsb
jmp
mov
scas
xor
jnp
clc
pop
pop
stos
mov
lahf
fidivrs
mov
mov
inc
repz
adcb
jl
dec
pushf
xchg
outsb
orb
or
mov
adc
dec
popf
push
pushf
lds
sarb
sbb
repz
sbb
push
popf
cmp
push
sbb
add
out
fadd
ret
aad
pop
mov
sbb
or
aad
ljmp
out
das
scas
ss
adc
adc
fidivs
xlat
fldl
xchg
ljmp
mov
cmp
mov
or
mov
cmp
push
das
cmp
imul
add
aas
sbb
mov
mov
dec
in
je
inc
push
je
leave
sub
cwtl
mov
dec
les
dec
mov
rcrl
stc
xlat
push
and
jno
mov
and
adc
mov
insb
mov
icebp
cmpsl
mov
inc
mov
clc
fiaddl
dec
jo
dec
ret
adc
or
cltd
inc
lret
das
cmp
sarb
fsubl
xchg
jle
sbbw
push
aaa
fs
scas
sbb
xchg
aaa
sub
gs
out
push
aad
cmpsb
adc
push
cmp
sub
sbb
or
stc
out
neg
leave
xlat
mov
xchg
ja
inc
dec
push
cmp
sub
sbb
or
stc
out
neg
leave
xlat
mov
xchg
negl
dec
push
cmp
sub
clc
addr16
xlat
mov
xchg
ja
inc
dec
push
cmp
sub
cltd
pop
mov
push
out
pop
jae
leave
mov
popa
js
push
cmpsl
in
mov
leave
lods
cmpsl
repz
mov
daa
jge
jg
or
ja
xchg
xchg
frstor
xlat
popf
out
idivl
push
dec
aaa
jge
outsb
push
int
sub
xchg
frstor
xchg
xlat
test
mov
cmpsl
pop
scas
pop
addr16
sbb
jge
dec
xor
sub
cmp
aam
lds
xlat
inc
insb
xor
out
imul
shll
data16
sub
push
push
arpl
daa
add
stos
jge
jge
mov
sub
jg
sbb
outsl
mov
cltd
cltd
fcmovnb
popf
lcall
popf
fcom
pop
clc
out
ficomps
ret
fst
in
ss
lods
pop
sbb
lahf
inc
pop
sbb
adc
cmpsl
jne
js
jecxz
int
sbb
out
idivb
sub
nop
xchg
scas
cmp
aas
mov
jl
xchg
jl
push
dec
jge
fistpll
insl
jnp
push
push
fxch
xchg
lret
mov
xlat
popf
out
mull
je
fs
adc
ja
shrl
cld
stos
fistpl
rolb
adc
and
dec
and
in
negl
mov
shll
adc
and
jb
inc
ja
out
mov
mov
loope
popf
out
idivl
daa
insl
aaa
jge
or
ja
xchg
xchg
frstor
xlat
popf
out
idivl
daa
insl
aaa
jge
or
ja
xchg
xor
int3
xchg
out
sbb
movsb
jecxz
loope
mov
cld
cmp
push
icebp
xchg
inc
in
shll
or
lcall
lret
incl
cli
sahf
add
sub
sub
jae
adc
jge,pt
daa
xchg
push
lea
mov
jle
testb
fdivrs
stc
sarb
mov
stc
jmp
je
negb
adc
jno
push
ljmp
dec
adc
xor
or
jmp
movsb
lret
out
and
sbb
mov
addr16
or
aam
pop
leave
pop
mov
add
fs
loopne
lods
lods
adc
std
lds
push
es
add
rcll
leave
adc
jge
cmc
xchg
mov
cs
data16
dec
fucomip
outsb
push
xor
xlat
jl
insl
cwtl
cmpsb
in
popf
mov
inc
aaa
out
cmp
cli
or
sub
xchg
ljmp
pop
inc
bound
test
fiaddl
dec
cwtl
pop
out
inc
pop
mov
iret
gs
inc
hlt
data16
hlt
xchg
sub
jne
and
stos
inc
pop
fcomps
cli
xchg
dec
pop
stos
mov
dec
sbb
clc
pop
and
je
movsl
add
sbb
sub
aas
mov
sbb
int
lods
mov
scas
test
sub
out
cmpsl
jae
js
pop
jo
inc
inc
shrl
mov
ret
lods
mov
fs
out
push
mov
mov
ja
xor
movl
xchg
dec
addr16
mov
lock
push
xor
cmpsb
wrmsr
inc
push
popa
or
and
or
out
ds
jae
dec
add
cld
insl
mov
loope
push
jb
hlt
jg
add
pop
rcrl
push
xor
or
and
mov
push
mov
scas
data16
les
cmpsl
add
or
into
in
out
ret
push
loope
and
or
and
inc
xchg
add
roll
sub
sbb
movsl
inc
rcrl
push
aaa
jae,pt
sub
xchg
fdivrs
pushf
ds
clc
cmp
jb
fsubl
ret
idiv
or
adc
shlb
push
lods
pop
cld
in
and
fwait
call
push
pop
pop
call
sbb
cmc
mov
jns
stos
push
mov
mov
stc
push
add
lcall
xchg
push
dec
and
xor
push
je
sbb
mov
imul
cld
xor
les
dec
loop
dec
cmpsb
out
cmpsb
sbb
jmp
fmul
xchg
dec
dec
adc
movsb
dec
insl
mov
loope
test
ljmp
in
xchg
cli
or
pop
jp
cmp
add
sbb
outsb
arpl
inc
dec
jnp
mov
rcrb
mov
ljmp
xor
xchg
cmp
inc
ret
lock
and
mov
push
test
cli
mov
xchg
or
xlat
xor
andb
jmp
in
out
ja
xor
jle
ljmp
imul
dec
sbb
sbb
mov
pop
push
lods
push
outsb
dec
adc
mov
jne
mov
and
into
pop
push
inc
insb
pop
hlt
shll
sub
out
xor
aad
xor
sub
test
jne
dec
add
add
daa
pop
inc
mov
pop
xor
and
aad
iret
cmp
fisubrs
ficompl
cmp
or
pop
jns
mov
fstpl
cwtl
bound
xor
test
into
fcomps
adc
clc
adc
xchg
inc
je
test
stc
in
out
jno
mov
test
loopne
pop
in
cmpsb
add
adc
lds
mov
push
scas
divb
dec
and
stc
test
and
push
and
xchg
mov
insl
inc
or
stos
loopne
sbb
sbb
xchg
or
pop
pop
les
or
inc
pop
or
add
call
shrl
lods
push
or
scas
and
movl
imul
divb
adcl
in
push
sarb
mov
dec
adc
push
mov
lret
insl
xchg
icebp
stos
pop
stos
dec
sub
hlt
mov
push
nop
movsl
in
push
mov
push
or
test
cmp
es
sub
ss
ja
add
lahf
xchg
jecxz
jg
lock
rcrb
inc
or
in
push
xor
xor
inc
jge
fdivs
or
scas
lcall
mov
pop
fisubrl
inc
in
aaa
inc
js
lahf
lods
and
mov
out
adc
sbb
loop
test
pop
or
ret
es
jp
jns
and
pop
or
xor
xor
cmpsb
nop
jb
or
sub
inc
push
bound
addr16
lahf
rclb
pop
cli
mov
pop
sub
xchg
sbb
add
jp
shlb
inc
xor
jge
int3
lahf
jge
lcall
lods
cld
pop
jg
add
cli
sub
or
jge
push
ja
pop
in
push
mov
cli
ret
mov
shll
jns
sub
int3
aas
xchg
pop
ffree
mov
pop
ljmp
repnz
or
incb
xchg
popaw
adc
pop
outsl
inc
push
xor
inc
enter
mov
repnz
jbe
ja
pusha
inc
aaa
sbb
shrb
fcoms
dec
das
sbb
jge
int
es
test
lcall
imul
loopne
pop
movsl
adc
jge
xchg
pop
test
and
inc
ficomps
adc
mov
mov
or
stos
adc
add
iret
mov
lods
pop
loop
push
sub
mov
scas
cltd
inc
insl
jo
dec
outsl
lret
inc
mov
sub
dec
out
xchg
mov
dec
inc
mov
mov
pop
mov
add
mov
adc
fstl
sahf
orl
jl
mov
adc
or
popf
and
push
pop
push
movb
pop
in
mov
xchg
popa
imul
pushf
add
mov
push
adc
inc
inc
sbb
lds
mov
jns
ss
jg
lods
mov
mov
sub
data16
shrl
add
lcall
mov
dec
imul
mov
or
inc
leave
popa
sub
sub
icebp
push
cltd
daa
lock
mov
sbb
je
dec
jp
pop
dec
pop
nopl
xchg
mov
nop
lods
mov
lcall
imul
cmp
jno
mov
lods
shll
iret
repz
mov
jns
fidivs
add
sti
test
fistl
sub
add
into
jmp
pop
cwtl
mov
js
xor
ror
arpl
pop
mov
jecxz
mov
daa
adc
mov
dec
dec
insb
testb
push
lahf
in
test
call
fstl
push
fsubl
std
enter
shlb
or
mov
cmpsl
clc
repz
out
adc
data16
notb
pop
pop
mov
mov
xor
outsl
mov
jecxz
movsb
call
cmpsl
cmp
inc
test
sub
cmpsb
xchg
dec
test
loopne
fisubs
push
cmpsb
xchg
out
in
mov
iret
push
sub
icebp
mov
lahf
es
imul
push
ds
adc
mov
mov
test
cmpsl
je
xchg
add
xor
push
mov
bound
jno
in
movsl
in
cmpsb
jbe
rorb
pop
ss
mov
pop
adc
push
cmp
cmpsl
and
mov
js
pop
iret
and
scas
es
lock
int3
xchg
mov
adc
fcomi
mov
dec
xchg
pop
cmp
lock
fwait
fwait
rcl
pop
lea
fisttps
pop
in
arpl
stc
mov
sub
push
sarl
pop
xor
out
add
movb
push
mov
ficoml
mov
inc
rcrl
xor
mov
dec
in
imul
cmp
push
scas
arpl
lea
dec
popa
popa
and
insb
jo
je
push
loop
sub
popf
sub
movsb
fs
mov
fdivl
sbb
out
or
xor
mov
xor
pop
push
push
xor
fldt
in
add
jnp
outsl
sahf
lahf
bound
inc
popl
or
jle
mov
dec
jbe
and
das
sbb
mov
mov
cmp
jne
sbb
add
jne
lcall
mov
daa
jb
fldcw
pop
pop
xlat
and
fistl
lretw
sub
ds
or
dec
xchg
frstor
test
push
add
ss
aam
push
or
push
rorl
popa
mov
ja
mov
jns
in
aam
mov
and
add
mov
ljmp
lahf
gs
mov
or
test
aaa
adc
inc
hlt
xchg
jo
jnp
insb
daa
push
int
sti
fcoms
enter
pop
adc
shr
jmp
out
xor
in
push
push
add
out
iret
arpl
add
add
es
rolb
xor
mov
mov
enter
stos
mov
dec
je
inc
or
mov
sub
mov
movsb
jo
mov
or
lret
pop
das
push
cmp
in
mov
fsubrs
popf
jne
aas
jne
adc
or
pop
or
jg
push
shl
daa
daa
and
fwait
jnp
aad
fisttps
pop
inc
sbb
fiaddl
sbb
sub
mov
inc
add
dec
fdivr
mov
pop
ds
fistl
sub
push
or
test
pop
iret
push
fstp
fstpt
adc
or
aad
js
push
adc
xor
ja
adc
sbb
cli
mov
adc
push
aas
xchg
or
sub
push
in
ss
and
push
sbb
aam
mov
fcmovnbe
fiadds
das
mov
test
jne
pop
aam
xchg
mov
negl
jg
outsb
arpl
iret
ljmp
int3
cmp
lret
adc
sub
scas
and
mov
ja
cmp
test
inc
adc
rcll
int3
inc
or
sub
jge
shlb
jge
lock
or
dec
jl
xor
scas
js
adc
movl
dec
add
mov
jne
xchg
loope
or
inc
sub
sbb
stos
repz
adc
sbb
testb
or
sub
popa
in
add
xor
dec
leave
mov
add
mov
push
addr16
pusha
lods
push
push
movsb
rcrl
test
push
and
in
shlb
popf
int3
test
mov
inc
add
dec
lahf
rcll
int
mov
je
sub
movl
jnp
pop
test
mov
loopne
pop
das
push
jns,pt
xor
mov
cmp
mov
push
aam
lods
mov
mov
jns
push
fwait
popf
sbb
cmp
jbe
pusha
ret
sub
sti
xlat
pushaw
mov
es
adc
inc
lods
dec
mov
sub
rorb
pop
sub
test
popf
es
aad
dec
aad
shrb
pop
push
sub
push
add
mov
cmpsb
cmc
sti
mov
movsb
push
daa
rolb
bnd
les
add
mov
mov
repnz
popf
pop
notl
adc
xchg
mov
std
mov
movsl
lahf
sbb
addr16
call
fcompl
or
push
bound
mov
xchg
sbb
mov
mov
mov
jne
pop
cmp
lock
push
mov
mov
sub
in
loop
dec
andl
mov
mov
ds
nop
xor
outsb
cmpsl
fidivl
or
ds
sbb
hlt
bound
shll
int
jmp
int
push
pop
mov
cmp
aam
shlb
popf
jp,pt
mov
pusha
dec
sub
fwait
mov
or
push
mov
out
mov
rolb
push
jmp
cmc
xor
mov
xchg
cmp
xor
mov
add
cmp
out
iret
pusha
mov
jle
adc
aad
loop
cmp
out
insl
fwait
loopne
xor
out
out
cli
sub
push
or
sub
cmp
icebp
out
dec
jb
stc
sub
les
cmpsb
pop
cmp
mov
or
xlat
mov
adc
mov
pop
xchg
push
movsl
jb
inc
mov
fildl
ss
mov
dec
pop
pop
icebp
filds
inc
pop
xchg
mov
mov
sub
push
and
adc
testb
fwait
or
stos
push
leave
fmuls
push
movsb
scas
and
pop
cltd
cld
add
addr16
adc
xchg
call
bound
push
scas
mov
fs
cmp
cli
call
lods
lret
add
test
int3
ss
jge
and
add
mov
out
adc
mov
xor
dec
out
sahf
in
push
pop
jno
dec
jmp
popf
or
add
cmp
lret
push
xor
scas
adc
xchg
into
xchg
popf
js
in
push
xchg
dec
mov
inc
lret
cmp
incb
lock
or
inc
mov
aam
mov
jge
dec
jae
xchg
sub
fdivrs
lret
cmp
inc
pop
sbb
xorl
scas
inc
cmpsb
dec
or
test
cmp
loop
adc
pop
mov
add
lahf
or
or
xchg
das
shr
dec
and
or
xchg
mov
mov
idivl
lods
jg
mov
adc
jmp
mov
pop
clc
pushf
lret
cmp
mov
inc
add
sbb
push
dec
cmp
adc
test
jae
mov
pop
push
adc
mov
jb
xchg
into
pop
test
and
int
sub
and
and
or
pop
rclb
xchg
in
pop
or
scas
inc
mov
xor
mov
sub
push
and
mov
inc
jnp
mov
inc
shll
sti
jmp
lods
ds
mov
jae
pop
fwait
mov
jecxz
lea
or
sub
mov
xor
popf
cmp
xor
cld
addr16
lds
push
sub
call
fwait
dec
sahf
jge
cmpb
leave
adc
mov
repnz
mov
pop
mov
sarl
arpl
cld
xchg
xchg
imul
push
dec
stos
xchg
push
jge
pop
jp
xchg
ficomps
bound
mov
movsb
aad
adc
test
out
fwait
divl
sahf
in
xlat
enter
in
int3
inc
cmp
pop
mov
sub
push
xchg
inc
mov
xchg
test
xchg
ret
adc
fcmovne
loopne
sti
cmpsb
mov
inc
ja
sbb
mov
leave
sbb
push
pop
loopne
mov
test
in
jne
sub
pop
repnz
mov
dec
inc
pop
movsb
lds
sub
jae
hlt
pusha
pop
scas
pop
stos
xor
adc
push
stos
or
dec
fistpl
fcmove
mov
mov
xor
adc
inc
sub
mov
icebp
inc
notl
shl
sbb
cmp
xor
movsl
out
int3
lahf
xchg
movsl
mov
lahf
cmp
xor
dec
addr16
fildll
sbb
cld
test
or
decb
ss
inc
adc
outsl
mov
bound
mov
pop
mov
sbb
cs
popf
mov
dec
aad
dec
rcll
lods
or
js
sbb
push
jns
mov
and
adc
int
rclb
xor
lea
nop
insl
jo
xor
xchg
cs
ret
int
xchg
pop
fiadds
and
es
push
push
dec
add
bnd
aas
cmpsb
aaa
cmp
adc
dec
pop
jl
pusha
shlb
cld
bound
lods
xchg
xchg
jecxz
pop
imull
leave
nop
jmp
mov
insl
pop
dec
in
xor
sub
adc
pop
dec
sti
adc
mov
ja
jne
jp
andb
dec
in
sahf
outsb
outsl
add
jnp
addr16
fcompl
cmp
insl
sbb
jg,pn
sub
inc
xor
sub
std
jl
imul
xchg
data16
add
xchg
stos
push
jmp
pop
lret
jns
aam
dec
dec
sarl
xchg
or
scas
and
loope
inc
and
push
and
clc
adc
lahf
xchg
loopne
push
movsl
jecxz
popf
pop
xchg
mov
or
dec
xchg
jne
or
lcall
imul
xchg
sub
adc
push
fnstcw
cld
jle
jae
jbe
fistl
push
cs
dec
jg
add
jg
test
aad
sub
lahf
sbb
or
and
shrl
mov
inc
or
mov
movsb
cmp
call
shlb
or
sub
and
sbb
pop
loopne
popa
ret
sbb
arpl
movsl
jo
nop
jbe
shlb
jle
test
mov
pop
mov
mov
hlt
push
cmpsb
stos
shll
xor
pop
in
pop
jl
int
push
mov
sub
mov
xlat
xor
mov
mov
lea
lcall
test
stc
add
test
dec
pusha
testl
imul
adcl
ffree
nop
sub
into
ficoml
sbb
pop
sahf
push
xchg
rorb
adc
xor
jne
push
or
or
loopne
pop
and
mov
rep
push
ja
mov
lret
adc
xor
cwtl
adc
mov
rcll
adc
enter
outsb
inc
add
dec
add
push
shufps
leave
xchg
mov
enter
xchg
inc
sar
sub
sahf
pop
cmc
mov
int3
adc
pushf
jbe
push
ljmp
dec
sbb
aaa
punpckhwd
test
shrb
addl
repz
out
adc
cltd
fprem1
test
mov
dec
xlat
dec
cld
in
sbb
adc
cmp
lret
pop
lock
push
daa
imull
ret
and
push
inc
xor
pop
cld
sub
sbb
lock
jae
int
mov
push
mov
outsb
xchg
imul
inc
das
cmp
adc
rclb
push
xchg
jmp
aad
pop
ret
xorl
in
sarb
adc
fmull
orl
inc
jge
adc
test
stos
add
adc
mov
sub
cltd
add
enter
cmp
dec
imul
mov
jbe
dec
mov
arpl
scas
popf
lret
bound
test
repz
adc
ret
jge
popf
fwait
enter
icebp
ss
xor
pop
or
icebp
shr
rorw
in
jmp
sbb
pop
adc
dec
sbb
in
les
mov
inc
mov
xchg
lea
add
cld
frstor
or
shlb
pop
movsl
and
mov
jno
sbb
jnp
mov
fidivs
add
push
negb
imul
shrl
dec
mov
mov
sbb
scas
test
pop
mov
std
adc
sub
cmp
loopne
jnp
movsb
arpl
outsb
fwait
adc
icebp
pop
mov
jbe
mov
cld
cmp
push
cmp
pushl
test
mov
js
cwtl
xchg
leave
xor
jp
push
mov
xchg
cmp
mov
insl
push
mov
mov
mov
nop
mov
xor
fsubr
xchg
out
dec
xor
sbb
xchg
cmpsb
andl
out
fs
adc
and
dec
xlat
sbb
xchg
sbb
push
xchg
mov
push
fmull
inc
sbbl
mov
cmp
sbb
lods
mov
mov
xchg
cmp
xlat
cs
into
xchg
loop
jecxz
jmp
negl
adc
or
mov
jecxz
cmp
test
data16
vpmacsswd
pushf
fstl
cwtl
orl
xchg
scas
add
and
mull
adc
scas
xor
iret
std
add
jne
aam
mov
scas
cmpsb
cmc
cmp
bound
repnz
dec
loopne
inc
test
xor
mov
test
js
pop
dec
cmpsb
xchg
lcall
mov
mov
stos
jns
inc
sub
aaa
cmp
mov
movsb
repz
jbe
sub
or
rolb
jno
add
addl
and
push
mov
lds
mov
fsubl
and
lret
es
int
cwtl
stos
js
aaa
sub
adc
aas
push
sub
add
clc
jmp
rcll
inc
add
popf
out
idivl
daa
insl
aaa
jge
or
ja
xchg
xchg
frstor
xlat
popf
out
idivl
daa
insl
aaa
jge
or
ja
xchg
xchg
frstor
xlat
popf
out
idivl
daa
insl
aaa
jl
or
ja
xchg
xchg
frstor
xlat
popf
out
idivl
lea
or
test
loop
rorb
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
lods
mov
out
stc
lea
push
icebp
add
hlt
paddq
les
jg
dec
xchg
dec
test
je
fs
lahf
inc
out
xor
test
adc
jo
hlt
aas
les
pop
les
fstpt
dec
aam
test
out
fs
or
sbb
sub
mov
add
or
test
je
or
add
scas
adc
testl
sub
sub
pop
fiaddl
inc
jne
push
sbb
shll
inc
dec
mov
mov
and
xchg
mov
popa
cli
dec
mov
addr16
jns
aas
popa
sbb
dec
jg
cmp
mov
je
inc
jae
adc
dec
xor
or
mov
loope
cmp
jl
xlat
push
popa
mov
scas
pop
add
adc
ja
inc
sbb
add
cmpsl
mov
les
out
movsl
mov
push
jnp
mov
jae
cmpsl
xor
sbb
cmp
mov
pop
dec
xchg
pop
add
je
xchg
rcrb
and
into
jns
jmp
les
mov
cwtl
jne
jge
pop
ljmp
out
addb
mov
mov
mov
sbb
aad
in
xor
and
xchg
pop
cmp
push
cmpxchg
push
in
call
ret
and
and
add
daa
mov
adc
add
hlt
aas
in
aam
les
jg
dec
xchg
pop
test
push
lahf
inc
out
xor
and
adc
add
hlt
aas
in
aam
les
jg
dec
xchg
pop
test
negl
and
dec
js
shrb
mov
or
lcall
clc
or
push
xchg
inc
aam
cld
xchg
test
jbe
sbb
push
mov
fstpt
or
orb
xor
repz
add
mov
pop
sbb
adc
mov
pop
shrb
imul
xchg
lret
imul
in
sbb
divb
mov
jbe
das
cmpsb
mov
cmpsb
aam
cwtl
icebp
fisttpll
inc
dec
mov
popa
push
cmp
cmp
sbb
fbld
inc
in
mulb
out
push
loop
scas
fcomp
pusha
pop
mov
sub
mov
das
test
scas
in
sub
stc
gs
mov
jmp
test
les
gs
pop
dec
jbe
sbb
adc
sbb
jecxz,pt
mov
addl
dec
das
or
or
ficompl
lock
sub
das
cli
push
mov
addr16
or
cmpsl
inc
scas
pop
ds
push
jno
and
mov
out
inc
pop
les
pop
shrb
inc
jmp
aaa
and
ret
cmpsb
dec
sbb
cmc
test
aaa
outsb
xchg
xchg
pop
aas
ds
nop
sub
ret
hlt
pop
sbb
add
mov
idivl
xchg
in
ss
inc
xchg
rorb
mov
adc
jae
enter
push
rorb
or
jno
mov
push
mov
cmc
xchg
xor
sbb
xor
into
xlat
mov
pop
andb
int3
dec
pop
jge
xor
mov
lods
mov
jle
mov
push
push
test
xchg
hlt
push
cmpsb
pushl
pop
icebp
mov
push
mov
in
in
xor
repnz
mov
adc
stos
or
scas
or
test
dec
mov
mov
fs
mov
pop
push
jl
daa
dec
rolb
jb
dec
into
pop
mov
jae
cmp
int
test
jp
in
add
lea
mov
loop
cmp
add
movl
test
cmpl
cmc
imul
add
jp
cmp
inc
add
mov
xor
cmp
loop
jge
and
shlb
inc
inc
pushf
cmp
mov
in
lds
and
sub
inc
adc
mov
add
mov
divl
sub
mov
rclb
and
scas
sbb
inc
inc
sti
into
jae
jae
jne
sub
xchg
sub
mov
add
pop
sbb
gs
or
add
mov
mov
test
inc
out
ret
stos
mov
inc
ljmp
and
sahf
jl
push
mov
loopne
hlt
ljmp
inc
mov
into
andb
xor
or
loope
popa
xor
jge
or
jno
lahf
mov
imulb
outsl
xor
push
js
es
sbb
out
xor
loop
cmp
repz
test
out
sub
loopne
add
sbb
xor
and
xor
clc
mov
imul
sub
stc
out
pop
inc
mov
push
inc
sahf
xchg
xlat
push
test
push
xchg
out
mov
add
leave
int
dec
xchg
movsb
inc
cmp
dec
mov
popa
xchg
dec
lret
clc
xor
ljmp
test
popa
pop
cld
gs
xchg
and
jb
xor
ret
movsb
dec
mov
cmp
push
push
jg
mov
sub
lds
repz
cli
and
daa
cmp
lahf
xor
test
shll
test
add
or
xlat
pop
adc
arpl
je
je
scas
xor
mov
ret
bound
call
bound
sbbb
mov
jne
add
shr
dec
jle
lret
adc
sarb
iret
or
mov
inc
aad
and
loop
sbb
pushw
jae
or
or
in
pop
ret
lods
sti
inc
mov
fmuls
sbb
shl
dec
dec
cs
jnp
inc
outsl
push
inc
push
mov
xlat
pop
scas
scas
pop
mov
sbb
fisubs
jnp
jecxz
nop
pop
lret
lcall
sbb
sbb
add
fisubrl
dec
inc
cs
psrld
call
ret
ja
mov
popa
mov
ja
push
pop
loop
fimuls
dec
sub
xor
fsts
xchg
scas
mov
jo
fadds
pop
leave
sbb
inc
cmp
fs
mov
push
mov
movsb
mov
out
mov
fldenv
test
stos
lock
int
sbb
mov
aam
aad
sbb
sub
jecxz
sbbl
mov
outsb
out
jne
mov
jle
ja
nop
push
pop
mov
orl
jb
sbb
test
insl
pop
shrl
lock
in
repz
pop
xchg
cwtl
pop
jno
jle
mov
lds
pop
out
xor
imul
pop
arpl
adc
test
xchg
popa
leave
mov
xor
pop
or
scas
cmc
cmp
jle
hlt
lds
mov
gs
dec
cld
cmp
mov
push
cmp
paddusw
pop
cmpb
mov
cmp
lcall
lock
lock
lret
repz
fldl
or
lea
xchg
dec
ret
lret
jne
mov
out
aaa
push
jmp
and
ret
inc
lahf
lock
cli
xlat
push
adc
xor
mov
in
mov
xchg
or
mov
scas
imul
rorl
pop
in
ret
lods
nop
mov
push
andl
mov
insb
pop
sbb
and
jle
jnp
sti
popa
fidivrs
addr16
inc
jae
mov
mov
fmuls
fisttps
lods
enter
cmpsl
lods
inc
jo
pop
push
test
out
lret
je
in
jge
mov
pop
aad
jbe
fnstsw
les
cli
inc
jg
xor
lret
jl
sbb
xchg
pop
loopne
jno
divl
adcb
push
and
push
popf
push
jne
aam
jecxz
jle
adc
fistpll
orb
add
pop
xor
nop
jmp
push
bound
push
mov
frstor
cmpb
ret
inc
insb
cmp
xchg
push
inc
in
mov
sbbb
jne
es
push
ja
inc
shrb
push
pop
push
mov
pop
mov
mov
test
pop
add
xchg
mov
xchg
and
sub
jb
jp
mov
push
add
insl
or
mov
and
mov
push
adc
test
pop
cmpsb
push
subb
jmp
push
aam
mov
and
add
push
push
inc
enter
adc
mov
lcall
mov
cmp
adc
adc
sbb
xor
dec
int3
mov
addr16
jle
cwtl
adc
int
fdiv
fdivl
adc
cmp
mov
and
fnstenv
sub
jle
cmp
mov
ss
adc
cwtl
mov
cmp
imul
jle
mov
mov
push
aad
jb
inc
sbb
nop
loopne
xchg
jl
mov
cwtl
jae
dec
scas
xchg
jmp
addr16
sbb
leave
add
cmpsb
ret
out
adcb
and
jecxz
dec
xchg
out
jmp
js
outsb
jno
jl
mov
mov
pop
pop
rorb
cmp
movb
and
jl
sti
hlt
in
popf
stc
cmp
mov
mov
loopne
add
sub
mov
lcall
enter
inc
mov
ret
loope
aas
push
out
imul
subl
testl
pop
pop
sahf
jbe
inc
inc
dec
xor
cmpsl
or
aaa
cld
dec
mov
cli
andl
add
jo
jne
add
popa
add
ljmp
push
pop
jecxz
cmpsl
stos
pop
mov
aad
mov
mov
test
sti
test
je
repz
and
xchg
cwtl
out
lret
or
xor
out
out
sbb
pop
push
jnp
aas
inc
outsl
pusha
mov
inc
jns
xchg
aad
push
pop
cmp
add
inc
mov
mov
xchg
rol
jnp
sub
sbb
inc
inc
push
ja
in
and
mov
or
push
jns
daa
or
inc
sub
sub
xchg
test
cltd
mov
mov
adc
js
lds
stc
or
rcll
push
repz
mov
xor
ret
es
sarl
ds
scas
push
jge
sbb
stos
cmpsl
je
dec
cltd
mov
push
int
in
mov
sbb
cmp
push
or
addb
mov
push
inc
pop
mov
inc
mov
xchg
lds
mov
sahf
and
lahf
pop
stc
adc
or
adc
and
pop
sti
push
aaa
mov
js
sahf
pop
sbb
xchg
movsb
mov
out
pop
xchg
inc
mov
sub
shlb
aam
sbb
mov
push
sbb
pop
aas
int
outsb
mov
mov
jl
cld
and
cmp
into
out
pop
mov
daa
icebp
sbb
pop
shll
lods
xor
imul
push
mov
enter
jns
pop
jns
pop
mov
sbb
jecxz,pn
xchg
mov
int
clc
in
bound
fstpt
andb
pushf
nop
mov
scas
ret
mov
and
push
mov
xchg
dec
adc
movsl
test
aaa
sub
sub
out
add
push
push
fsubl
jns
jge
inc
aam
divl
loop
mov
out
cmpb
mov
sub
mov
leave
outsl
or
rolb
loope
and
lock
pushf
shlb
pop
cmpl
std
dec
adc
stos
mov
mov
inc
lwpins
jns
xor
shll
scas
je
in
pop
cmpsl
xchg
aam
cmpsl
decb
pop
cmc
enter
or
fistl
mov
fildll
push
dec
push
inc
gs
jmp
shll
xor
sbb
std
xor
mov
cmp
aad
cltd
enter
jnp
movl
mov
out
cs
mov
mov
popf
push
pop
or
lret
jg
shlb
inc
adc
lret
pop
pop
pop
mov
dec
test
lret
inc
dec
push
shl
and
xor
mull
aaa
push
xor
imul
ret
arpl
lahf
outsl
jns
icebp
mov
mov
pop
ja
repz
xchg
orb
notl
jo
ret
fdivr
nop
or
mov
jle
gs
test
sti
sti
xor
pop
sbb
xor
icebp
add
and
ja
xor
mov
or
mov
movsl
outsl
sub
cwtl
cwtl
pop
pop
push
in
cmp
xchg
jmp
and
sub
sarb
xchg
jne
sar
aam
cmp
mov
sbb
cmp
frstor
jge
jne
adc
popf
lock
negb
or
test
push
mov
fsts
mov
nop
jmp
jle
lock
dec
dec
repz
and
dec
sub
mov
mov
mov
pop
dec
mov
icebp
shlb
mov
dec
popf
dec
push
add
ss
out
lock
adc
into
hlt
repz
push
pop
pop
inc
call
push
sbb
add
sbb
dec
pop
cmp
fists
inc
fptan
pusha
pop
push
or
cltd
and
sub
cld
and
push
daa
movsl
sub
mov
mov
roll
lods
rclb
adc
test
push
pop
jbe
lahf
ret
xchg
lods
lret
and
xchg
sub
jge
mov
push
mov
inc
inc
hlt
xchg
jle
sbb
daa
and
dec
pop
xor
sti
fdivrl
sub
jle
scas
roll
das
in
icebp
aas
and
pop
std
and
cmp
subb
push
add
add
in
mov
sbbl
jmp
and
or
in
pop
push
aad
jbe
mov
push
movsb
mov
pop
lret
mov
pop
stos
in
ds
xor
jmp
iret
jbe
mov
inc
fxch
push
cs
orl
repnz
ret
hlt
xor
rcrb
in
jo
pushf
xchg
repz
mov
jnp
test
mov
push
fidivs
daa
ret
stos
xor
mov
loopne
add
sbb
xor
fs
pop
out
adc
pop
lods
mov
mov
sbb
gs
push
rcrb
inc
sub
add
notb
ja
xor
cmp
les
push
adcl
addl
nop
test
inc
and
sub
mov
xchg
mov
shll
icebp
mov
cmp
loopne
rol
shlb
add
fs
and
lods
bound
inc
daa
test
arpl
sbb
in
mov
test
mov
mov
fdivl
cmpsb
test
sub
jge
ret
push
nop
jne
xchg
pop
mov
dec
outsb
dec
test
lcall
lret
and
cmpsb
mov
xchg
fimull
arpl
fldenv
mov
mov
jns
push
stos
idivb
add
es
sar
outsl
mov
mov
xchg
lock
es
stc
imul
mov
xchg
imul
js
xor
test
sub
jo
lds
add
inc
jge
aad
cmp
pop
hlt
aad
push
inc
cmpsl
or
lea
insb
push
add
and
push
and
and
jae
xor
popa
xor
mov
sub
push
shlb
mov
arpl
push
xchg
or
inc
inc
incl
loope
xlat
push
jg
inc
cmp
scas
mov
mov
test
outsb
popf
xchg
xor
cmpsb
mov
ja
push
xor
push
mov
jns
in
mov
sbb
jge
mov
fdivl
icebp
mov
or
jl
imulb
inc
adc
cmp
xchg
jne
divps
clc
push
ss
scas
mov
fs
scas
pop
lahf
cmp
push
mov
adc
in
movsb
adc
or
mov
outsb
fmull
or
ja
cmp
adc
ret
fisubrl
xchg
jnp
imul
fwait
inc
adc
cmp
das
shll
mov
test
cmp
mov
cmc
andl
ret
mov
add
or
insl
fists
cli
lods
xchg
mov
aam
xor
repnz
push
xor
rol
xor
mov
mov
inc
push
and
jge
fcoms
stos
pop
cmp
cltd
sti
mov
mov
adc
or
repz
push
cmp
inc
dec
into
outsb
roll
outsb
adc
mov
dec
es
xchg
call
pop
push
jp
sbb
lods
ret
scas
aad
bound
sub
in
out
push
cmp
or
or
adc
call
call
hlt
adc
ret
add
xor
sahf
adc
movsb
or
xchg
and
bnd
in
mov
movsb
aaa
imul
sahf
jle
hlt
mov
popl
shlb
mov
jbe
cmp
negl
sbb
out
por
nop
aam
lea
leave
xchg
jl
mov
xchg
pusha
test
push
inc
inc
mov
and
negl
outsl
mov
xchg
jno
jmp
adc
cmp
push
cli
xlat
repz
cmpsb
xor
mov
movsl
jae
mov
cmp
test
pushf
mov
xor
call
stos
call
adc
sbb
cmpl
xchg
lods
scas
sub
push
adc
add
inc
push
cmp
xchg
fcompl
cs
pop
andb
and
xlat
movsl
adc
xor
dec
jae
sbb
popf
sti
ljmp
and
popa
mov
popf
fcmovbe
push
rcrl
test
call
or
lahf
and
mov
stos
push
mov
arpl
or
or
scas
lret
jmp
or
mov
push
cmc
or
loope
mov
pop
xlat
mov
dec
test
insb
adc
inc
aad
aad
fidivl
mov
cmpsl
enter
inc
adc
pop
pop
aaa
into
mov
add
mov
movsl
pop
dec
push
movsl
add
bound
push
add
xchg
inc
ret
lods
mov
mov
xchg
arpl
mov
test
stos
pusha
in
in
into
dec
sbb
dec
adc
jp
sbb
fwait
stc
mov
test
sarl
fistpl
inc
cs
out
inc
ljmp
std
imul
jne
jno
sbbb
out
stc
inc
mov
add
stos
popf
jp
mov
xor
test
cs
lretw
push
xor
fs
push
mov
dec
out
cmp
push
xchg
dec
loope
in
dec
xchg
lods
mov
or
jns,pn
xchg
mov
jmp
sub
scas
and
jne
imul
adc
je
jp
mov
orl
popf
and
mov
outsb
fsubl
mov
pop
push
outsl
mov
mov
out
push
jno
pop
test
daa
out
mov
sahf
aad
mov
inc
dec
aad
cmp
aad
int
add
rcrl
fdivr
clc
cld
push
test
movsb
xor
adc
push
fdivp
and
inc
in
sub
orl
int3
cs
mov
inc
stos
pop
jl
ds
pushf
pop
mov
pushf
mov
xchg
cwtl
pushw
mov
jno
nop
pushf
push
mov
adc
jns
sbbl
xor
mov
pop
divb
xchg
adc
enter
mov
les
pop
enter
test
sahf
sti
jno
lea
push
xchg
out
pop
test
lock
ffreep
push
test
dec
in
into
mov
xor
adc
mov
movsb
icebp
mov
mov
jo
xor
stc
imul
call
scas
les
rol
push
mov
pushf
sbbb
jp
xor
call
and
push
roll
test
fnsave
int
pusha
loopne
int3
out
inc
cmp
sbb
in
outsl
insl
loopne
adc
mov
test
dec
negb
inc
rcr
out
lret
loopne
ficompl
movsl
mov
xrelease
test
mov
jecxz
aaa
pop
clc
in
jp
xchg
repz
in
sti
jecxz
data16
sbb
pop
lret
xor
xlat
cmp
loope
mov
push
jl
add
sbb
dec
xor
cmp
xor
out
and
gs
sahf
xchg
movsb
or
dec
sub
jmp
inc
shlb
int3
shr
adc
push
xor
cmp
sbb
stc
jecxz
orb
cmp
xchg
cmp
or
dec
sahf
test
lret
hlt
inc
push
repz
lods
and
flds
mov
adc
pop
cmp
dec
pop
das
mov
mov
mov
cmp
add
cmp
icebp
fs
test
sub
xlat
icebp
push
outsl
aam
int
mul
data16
or
cmp
pop
loopne
test
or
sub
xor
push
inc
xchg
ret
adc
sbb
cmp
sbb
hlt
sub
xchg
mov
js
scas
mov
popf
and
mov
aam
les
mov
xor
lea
fwait
pop
lret
cmp
pop
loopne
cs
stos
push
iret
aas
outsb
faddl
ret
stc
aam
into
jmp
adc
or
test
pop
int
push
mov
inc
pop
mov
sbb
in
cmpsl
cmp
leave
inc
jae
push
jno
inc
pop
lret
movsl
fbld
ss
mov
mov
leave
lock
lret
outsl
ljmp
jecxz
mov
mov
sub
push
xor
lods
jg
in
clc
push
insb
cwtl
jae
leave
std
mov
mov
dec
jg
loope
clc
int3
outsb
hlt
testl
and
data16
rorl
sub
in
mov
aas
and
and
jo
mov
rcrl
xor
xchg
clc
add
jle
inc
data16
push
mov
ficompl
pusha
shlb
push
or
jmp
xor
push
cmp
gs
iret
shll
pusha
test
jne
pop
out
fs
out
xor
and
adc
add
hlt
aas
in
aam
les
jg
dec
xchg
pop
test
push
lahf
inc
out
xor
and
adc
add
hlt
aas
in
aam
les
jg
dec
xchg
pop
test
sub
inc
jg
decl
sub
in
aam
les
outsl
movsb
dec
mov
test
push
mov
and
xchg
pop
add
or
dec
movsl
aam
mov
cmp
pop
mov
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
jbe
data16
inc
sti
ss
repz
or
idivb
pop
jp
outsb
mov
cmpsb
xchg
xchg
xchg
jbe
data16
inc
mov
mov
scas
push
lret
out
outsb
jle
jl
sbb
xchg
jbe
data16
push
testb
xchg
xchg
mov
movsb
testb
mov
inc
leave
push
pop
call
scas
push
mov
cltd
incl
pop
sbb
xchg
sub
pop
push
jge
mul
xchg
roll
push
or
mov
insl
call
mov
mov
dec
outsb
cmpsl
inc
rcr
es
outsb
mov
fnsave
mov
popf
popf
pop
jecxz
dec
mov
add
and
xchg
nop
and
inc
lods
adc
push
cmp
arpl
dec
xor
fwait
adc
dec
xchg
mov
mov
jmp
cmpsb
inc
push
mov
mov
in
pop
push
jge
mov
xchg
push
int
hlt
add
cmp
es
xor
xchg
out
and
sub
cmp
testl
push
scas
push
cmpsl
testb
ja
addr16
cmpsb
push
xchg
xor
aas
aaa
into
adc
mov
ret
mulb
sbbl
mov
sbb
inc
rclb
add
mov
outsb
ficoml
cmp
jl
jle
push
cli
dec
repz
adc
data16
mov
mov
push
scas
push
mov
outsb
jle
push
cmpsb
push
xchg
xchg
jbe
data16
inc
mov
sahf
push
scas
push
mov
outsb
jle
push
cmpsb
push
xchg
xchg
jbe
inc
int
imul
dec
sub
jnp
daa
das
mov
dec
inc
mov
jnp
fcmovbe
pop
lcall
mov
jge
mov
enter
lods
idivl
lock
jle
sbb
cmp
mov
mov
in
or
movsl
enter
adc
insb
xorb
rcll
pop
icebp
push
out
aam
lock
pop
sub
lea
out
dec
leave
test
cmpsb
jl
popf
lea
xchg
fwait
ljmp
inc
in
xchg
jecxz
cmp
sub
xlat
or
stos
outsb
sub
loope
dec
rcrb
out
mov
lock
stos
and
xchg
lahf
and
fimull
xor
jmp
mov
lods
push
shr
cmpsl
add
fistpll
jo
push
out
jns
and
test
dec
mov
mov
out
in
imul
fs
jp
paddusw
stc
in
push
sbb
mov
out
cmpb
mov
cmpsb
sbb
aas
jns
jo
test
jnp
lret
and
in
push
je
jp
enter
insl
xchg
jge
mov
ficompl
rorl
cmpsl
xchg
int
repnz
xlat
and
std
push
mov
push
sbb
aas
mov
loope
lcall
or
in
jle
xchg
dec
inc
mov
jle
add
adc
clc
call
in
push
add
cs
repnz
repz
aam
adc
and
aas
rorl
in
push
adc
cmc
or
sbb
iret
sarl
ja
setae
loopne
sarb
sbb
icebp
int
pop
test
xor
jge
dec
insb
fwait
jmp
pop
jne
push
test
jecxz
enter
jmp
xor
jecxz
je
add
imul
pop
bnd
int
and
outsl
out
push
out
lods
movsb
dec
mov
sarb
hlt
or
jge
jle
mov
sub
xlat
dec
mov
mov
testl
dec
mov
test
repnz
lods
jge
in
insl
addr16
fs
vunpcklps
push
mov
pop
cltd
inc
mov
mov
xchg
fs
ss
push
xchg
lock
mov
xlat
pop
xchg
jle
loopne
outsl
sti
icebp
pop
mov
mov
sub
int3
xchg
mov
xlat
mov
dec
pop
cmpsl
clc
fiaddl
pop
pop
pop
loope
aas
test
add
icebp
mov
jns
ja
push
daa
lea
lods
jle
inc
daa
loopne
cmp
xor
scas
out
in
fucomp
xchg
mov
mov
xor
dec
pop
leave
xorb
push
xor
pushl
xchg
pop
mov
sbb
fwait
inc
and
imul
sub
outsl
cmpsb
jae
ss
pop
out
pop
or
sbb
clc
insl
test
ja
mov
and
add
xchg
xor
scas
inc
or
xor
jecxz
jnp
xchg
test
iret
pusha
frstor
xor
jne
xor
adc
jno
jnp
rolb
xchg
jg
pop
add
xor
gs
and
repnz
xchg
pop
add
lahf
inc
push
sahf
mov
adc
mov
repnz
cmp
cmpsl
lods
insl
jo
out
rolb
vcvttps2dq
mov
adc
int3
roll
aas
or
xchg
and
mov
xchg
or
add
lret
shr
mov
sbb
and
mov
sub
lea
xor
mov
pop
jbe
call
in
inc
inc
lahf
cltd
mov
mov
aam
jne
jae
cmp
push
push
or
andl
fists
adc
mov
sub
bound
int3
call
add
rorl
push
sub
jmp
sahf
cmp
outsl
repnz
jne
fstps
pop
push
out
scas
bound
lods
dec
mov
mov
jno
ljmp
inc
movsb
in
jg
xlat
into
loopne
arpl
xchg
mov
out
cli
mov
and
sarl
sbb
adc
dec
stos
push
out
clc
inc
push
or
cltd
jmp
fidivl
divl
cs
mov
dec
test
testl
xchg
vpmaxsw
adc
push
ds
jns
call
cmpsl
pop
inc
mov
push
adc
dec
jmp
imul
enter
mov
bound
mov
dec
leave
or
mov
call
test
divl
and
sbb
xlat
inc
test
xchg
sar
fnsave
xor
jge
sbb
jmp
repnz
aam
movsb
cmp
aaa
dec
pushl
push
cmpsl
test
jns
mov
scas
imul
mov
inc
xlat
addr16
xchg
dec
add
push
jb
mov
imul
loop
fldl
lcall
adc
pusha
cmpl
cmp
sahf
rolb
mov
add
hlt
xchg
test
int
adc
insl
mov
rorl
ficomps
cmp
movb
or
mov
cs
enter
push
xchg
fs
shl
pushf
in
mov
or
cltd
mov
out
xor
ss
scas
jp
addr16
dec
out
sbb
mov
add
inc
aad
adc
imul
stc
stos
sub
xor
in
mov
test
es
mov
jbe
add
call
inc
xlat
inc
insb
or
dec
out
or
mov
sbb
mov
pusha
addl
loope
adc
mov
jle
sub
ror
int
mov
dec
inc
mov
mov
cwtl
xchg
leave
inc
fsubs
mov
jnp
pop
test
xor
mov
movsb
or
leave
mov
shll
jecxz
fdivrl
jp
push
jno
lret
call
inc
push
insl
mov
icebp
test
icebp
push
mov
lods
in
outsb
rclb
inc
dec
add
pop
adc
leave
out
mov
loop
sbb
outsb
out
mov
push
jl
xlat
mov
addr16
xorl
insl
pop
fdivs
mov
add
dec
dec
pusha
or
sub
loope
lods
dec
jp
jge
popf
int3
aam
mov
xchg
fcoms
mov
cmp
out
jmp
ror
lock
lcall
adc
adc
push
sahf
adc
gs
iret
adc
jnp
mov
push
fcomps
jb
jns
cmp
shll
cmpsl
cmp
cli
dec
aaa
mov
loopne
ja
inc
mov
leave
bound
lret
gs
call
push
jmp
cmp
int3
cs
push
xor
lahf
cmpsb
jb
sbb
sub
sub
out
mov
cmp
push
sbb
repz
and
mov
fwait
mov
data16
pushf
xor
ljmp
jl
jo
test
andb
fmuls
push
scas
jecxz
mov
dec
ja
std
lds
test
push
fdivp
xor
fcmovne
jg
ss
inc
jecxz
mulb
adc
mov
es
mov
ret
arpl
fldenv
mov
inc
ss
mov
out
add
push
test
and
mov
adc
and
roll
xchg
or
dec
iret
sub
lahf
dec
pop
ficoml
mov
stos
push
cmp
into
xor
mov
sub
adc
es
cmp
xchg
mov
fdivs
sub
push
sbb
push
sub
mov
push
pop
xchg
jl
iret
cwtl
xchg
lret
test
aam
cmpsb
out
dec
nop
add
scas
ja
insb
loope
aam
and
push
fs
outsl
clc
insb
cwtl
test
call
mov
dec
andb
push
loop
dec
xor
jge
or
xor
movsb
and
mov
or
xor
inc
lahf
rolb
sbb
das
push
inc
shrd
mov
jae
and
push
repz
data16
or
cmp
dec
dec
cmpb
pop
or
shlb
mov
add
lds
lods
lret
outsl
cld
push
aas
jp
aam
aas
cmpsl
insb
test
lret
dec
ret
mov
jmp
mov
hlt
mov
add
cmp
loop
pop
int3
clc
call
mov
add
mov
pop
sbb
int3
rclb
sub
les
aas
sbb
push
bound
fstp
cwtl
xchg
mov
ds
push
ja
xor
lods
xlat
repz
mov
mull
lret
mov
xchg
xlat
mov
pop
fdivs
es
test
testb
loope
adc
mov
add
xchg
push
mov
repz
shll
lds
push
mov
adc
rcr
into
cmp
inc
shlb
inc
mov
push
push
cmp
xor
pushw
aaa
push
aad
cmc
mov
xor
cli
pop
mov
mov
sub
jo
fdivrs
or
xchg
mov
push
jp
lods
out
es
dec
jp
dec
cltd
pop
push
aam
les
push
loop
pop
mov
mov
inc
mov
loop
and
push
icebp
xor
sar
sub
popf
cmp
add
xchg
popa
rclb
xor
shrb
cs
rcrb
sbb
outsl
xchg
add
adc
stos
gs
outsl
lcall
push
cli
dec
mov
or
xlat
sbb
mov
push
and
rolb
xchg
inc
mov
or
dec
mov
jmp
arpl
fwait
pop
nop
xor
adc
pop
ja
imul
xchg
leave
sbb
es
dec
push
mov
pop
shll
inc
dec
jmp
aam
ficomps
imul
jns
test
cmp
sbb
lret
or
push
aaa
dec
xchg
mov
mov
xchg
cmp
pop
rolb
mov
ja
mov
movsb
adc
mov
scas
inc
mov
or
orb
sbb
and
stc
sarb
ljmp
and
ret
cwtl
add
pusha
testb
ret
repnz
jl
sub
mov
jno
add
nop
aad
jnp
mov
jns
dec
adc
fists
jne
push
adc
loop
js
inc
enter
xor
adc
jge
xor
shlb
add
loope
pop
dec
sbb
aam
lods
push
mov
adc
subl
fsubl
or
fwait
out
sbb
lcall
les
cmp
adc
xorb
mov
test
lret
xchg
mov
xchg
mov
jne
mov
jo
iret
jb
xchg
inc
cmc
jg
shll
and
lock
outsb
call
jge
aaa
mov
add
dec
inc
call
inc
xlat
jo
fimuls
jmp
mov
in
sub
dec
push
fcomip
push
insw
xor
cmpl
mov
lcall
xchg
lahf
pop
lods
sub
inc
data16
shr
outsl
mov
mov
enter
loope
ja
xchg
lcall
pushl
stc
stos
push
or
movsb
mov
mov
pop
je
sub
clc
mov
lcall
add
aad
in
jae
call
mov
fwait
adc
cld
mov
insb
pop
imul
popf
lea
out
sub
fstl
ss
jnp
out
mov
cltd
mov
cmp
idivb
aam
mov
and
scas
das
xor
insl
stos
push
xor
fwait
stc
push
jnp
mov
mov
mov
cld
xor
mov
dec
add
or
mov
lahf
push
mov
mov
repz
inc
popf
lods
mov
pop
mov
das
sbb
cmp
jg
fldl
ja
adc
fwait
xor
fcomps
std
cmc
stc
mov
imul
subl
shrl
mov
mov
lahf
mov
jno
or
sub
mov
sub
push
mov
sub
jne
into
dec
sbb
xchg
adc
outsb
aad
icebp
sbb
int
arpl
cmp
mov
sub
or
ds
addl
rcrb
and
sbb
shlb
push
push
and
bound
mov
fsubl
dec
mov
stc
mov
and
xor
xor
stos
inc
add
lods
nop
dec
enter
dec
insb
add
and
add
push
icebp
push
and
pushf
ss
pop
xor
adcb
dec
dec
dec
sub
setno
out
sub
idivl
movsl
sub
in
fwait
cmp
inc
cs
daa
add
cwtl
cs
outsl
imul
xchg
and
in
push
pop
push
imul
inc
sub
inc
add
icebp
lds
push
or
jp
enter
stos
or
stos
xor
jge
xor
push
sub
fildl
mov
ret
mov
mov
repnz
std
aas
push
mov
sub
xchg
shlb
cmp
lock
jle
es
push
sarl
dec
push
dec
push
lret
and
icebp
out
mov
dec
mov
dec
mov
ret
repnz
mov
repz
dec
xor
add
lods
or
aas
jg
push
jl
pop
mov
add
mov
fistps
jl
xchg
imulb
and
xor
aas
ljmp
cmp
movsl
and
push
scas
out
loopne
xorb
shlb
aam
das
and
push
xlat
lahf
jle
lods
sar
push
imul
subb
scas
mov
xor
mov
adc
jmp
mov
sub
mov
xchg
mov
pop
sub
call
and
xchg
fsubr
mov
movsb
aaa
idivb
daa
pop
sub
aas
test
dec
aas
mov
lret
fcomi
mov
ljmp
je
orl
sub
jne
ja
jmp
fists
push
fwait
pop
xor
cwtl
or
dec
inc
mov
pop
cmp
fwait
mov
adc
mov
push
dec
jno
jecxz
test
xor
pop
and
ficomps
andl
dec
and
aam
out
and
xchg
mov
shl
out
adc
nop
push
cmp
push
xchg
incl
xor
roll
test
mov
imul
jb
shl
sti
pusha
cmpsb
sub
shlb
in
pusha
xchg
outsb
test
movsl
das
jnp
xor
cmp
and
inc
push
jnp
cmc
mov
aad
xchg
jo
and
sbb
jg
and
add
jle
adc
in
jnp
lahf
ja
daa
cmp
mov
lret
add
shlb
sbb
sub
push
xchg
lcall
and
ds
lods
addl
sbb
in
push
std
or
jne
pusha
sbb
adc
arpl
jo
fmul
test
jno
jb
jnp
loopne
inc
jne
hlt
rcrb
push
xor
mov
lods
rcrb
mov
and
sub
jne
enter
ds
jbe
je
sub
das
mov
lds
xor
mov
in
ret
insb
enter
in
push
mov
add
icebp
std
in
mov
inc
xchg
add
and
mov
xor
mov
add
fincstp
lret
and
cmp
gs
sahf
and
add
jne
mov
mov
es
std
add
bound
test
cld
inc
jb
cmp
pop
dec
fs
xlat
jnp
je
jg
and
and
mov
fiadds
negb
push
ss
cmpsb
add
sar
test
out
mov
inc
lds
jmp
jle
or
mov
mov
addr16
movsb
in
insl
pop
jge
mov
stos
stc
lea
repnz
lahf
xchg
pop
lret
dec
int
and
jae
loop
sbb
jnp
mov
push
mov
dec
xor
push
pop
out
mov
and
sbb
and
xchg
cwtl
cmpsl
xchg
mov
out
or
out
add
xor
sarl
out
adc
xchg
popa
jnp
pop
stos
mov
push
fisubrl
mov
pushf
aam
bound
mov
and
inc
xchg
add
pushl
sarb
xorl
stos
cltd
sub
jl
mov
add
fldenv
idivl
inc
ja
fbld
mov
jl
das
push
int3
sbb
mov
and
xor
pushf
repnz
jbe
into
inc
mov
add
jno
je
bnd
or
dec
nop
fldcw
xlat
sti
insb
popl
addb
in
rcl
xchg
lods
cld
in
in
cmp
adc
pop
mov
test
aas
cli
cli
or
cmp
sbb
xchg
mov
pop
stc
adc
jbe
pop
xchg
jae
xchg
mov
jmp
leave
lock
fs
loope
inc
das
sub
cwtl
adc
sbb
sarb
mov
push
inc
loopne
sarl
movsl
addr16
loop
or
bound
push
dec
xchg
jecxz
sub
jge
fcmovu
test
es
movsb
int3
push
lea
cmp
inc
cmpsb
adc
notb
sbbb
int3
hlt
int
xchg
mov
or
add
outsb
mov
mov
dec
cmp
jg
enter
leave
dec
sti
lods
mov
inc
faddl
dec
pop
int3
std
enter
cmp
sbb
rcrl
dec
hlt
and
stos
mov
cmp
jno
nop
fistpl
cmp
jge
roll
inc
pop
push
ficoms
fidivrl
jmp
daa
sti
cmp
add
dec
scas
and
outsl
das
lea
adc
mov
push
shlb
mov
lret
je
inc
push
mov
test
and
sbb
mov
loope
jbe
testl
sub
int
jbe
mov
or
ss
sahf
outsb
xor
adc
jae
bswap
inc
push
sub
ljmp
mov
js
sbb
inc
push
pop
mov
iret
ja
jmp
sbb
push
dec
push
pushf
leave
cld
sub
dec
mov
fstps
clc
enter
fstpl
jb
stc
cmpsl
mov
rorl
push
jl
xchg
inc
or
inc
in
clc
clc
adc
cmp
in
mov
mov
push
idiv
jle
ss
lds
repz
js
in
hlt
cmpb
jecxz
les
mov
addr16
les
loopne
insb
sbb
cmpb
xchg
cmpsb
addr16
cmpsb
mov
into
adc
fcmovne
lcall
mov
push
xchg
cld
pop
test
adc
lods
mov
sub
js
repnz
sub
addl
adc
dec
push
jno
xor
ficomps
fwait
and
pusha
xchg
and
rcrl
jmp
or
cmc
mov
sbb
sbb
or
pop
push
scas
fistpll
xchg
insb
arpl
stos
inc
notb
adcl
or
shlb
pusha
xor
adc
out
dec
or
push
in
mov
mov
jmp
in
pop
outsl
pop
adc
scas
out
add
repnz
mov
flds
push
dec
aam
loop
xor
iret
jmp
add
outsl
jnp
loope
lea
push
cld
fdivrs
inc
insl
ja
outsl
daa
gs
cli
pop
and
jo
cmpl
dec
sahf
pop
fsubs
stos
andps
push
cwtl
rolb
or
jp
lods
fstpl
out
xor
cmp
divb
inc
pop
mov
mov
jp
xlat
xchg
shrb
rorl
mov
aam
push
cwtl
inc
les
push
int3
frstpm(287
aaa
sbb
jns
push
insb
pop
insl
dec
inc
aad
xchg
hlt
cmc
mov
sub
cmc
repnz
test
movsb
cmpsl
xchg
sahf
out
jae
mov
fidivs
loopne
mov
adc
out
bound
xor
ss
inc
jp
sub
or
mov
pop
jae
push
sahf
imul
or
and
dec
fcomp
rcll
jg
outsl
imul
lods
enter
xor
sbb
orb
cmpsl
subps
cmp
sti
mov
push
jbe
gs
daa
mov
cltd
push
mov
jae
shll
xor
mov
push
repz
jmp
fimull
pop
push
ret
cmc
ret
cmp
sub
outsl
cmp
or
push
int3
push
sbb
repz
out
ficoml
xor
out
in
jne
and
jp
push
out
inc
mov
sahf
push
scas
push
mov
outsb
jle
push
cmpsb
push
xchg
xchg
jbe
data16
inc
mov
sahf
push
scas
push
mov
outsb
jle
push
cmpsb
push
xchg
xchg
jbe
out
out
inc
mov
es
push
scas
xchg
outsb
jp
push
cmpsb
push
xchg
sub
ficoml
inc
mov
sahf
push
scas
push
jle
dec
out
jl
or
xchg
popa
out
testb
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
imul
in
adc
add
outsb
mov
cs
hlt
ret
mov
dec
icebp
cmp
sub
or
and
and
add
jno
popa
lods
push
popf
inc
call
cmc
pop
inc
dec
icebp
pop
loopne
rcrl
cmp
or
sbb
push
popf
push
lea
cmp
and
jnp
jno
js
jp
mov
popf
pop
mov
jns
popf
inc
bound
pop
xchg
pop
push
insl
push
test
leave
xor
lods
std
adc
sahf
and
insl
pop
xchg
outsb
mov
mov
cmp
in
and
aas
lock
arpl
pop
dec
mov
pop
insb
rcrl
push
ret
jnp
push
shl
xor
icebp
enter
mov
inc
insl
test
je
mov
xchg
push
ficoms
dec
and
and
mov
lea
mov
loopne
pop
jne
in
shll
ljmp
jge
imul
icebp
jge
sbb
and
adc
push
int
mov
pop
lea
pop
cwtl
dec
jmp
sbb
inc
xchg
je
mov
clc
sub
lds
out
cmp
mov
movsb
push
je
add
cmp
sbb
pop
xchg
pop
xchg
mov
pop
mov
add
push
popf
inc
lea
pop
orl
sbb
and
adc
add
jno
popa
lods
push
popf
inc
lea
pop
orl
sbb
loop
dec
mov
or
testb
mov
adc
jl
mov
pop
mov
pop
xchg
into
mov
sbb
or
pop
push
int
loopne
arpl
cmpsl
push
js
pop
xor
dec
lea
aad
movsb
add
push
lock
push
dec
cmp
call
mov
subb
repnz
inc
jbe
ficoms
lods
mov
ds
ljmp
pop
arpl
or
mov
arpl
movsl
sub
gs
xchg
fistpl
imul
adc
or
xchg
jge
aaa
stc
es
pop
push
call
test
push
dec
in
and
ret
es
pop
push
jb
jae
js
mov
dec
inc
das
sub
sbb
mov
popf
dec
movsb
and
push
movsb
push
push
and
or
sub
repnz
stos
mov
out
pop
popa
sbb
xchg
mov
es
jp
push
lock
clc
jg
int
inc
dec
jno
inc
arpl
jecxz
in
test
out
sbb
loop
adc
icebp
or
lock
sysret
imul
pop
in
push
ret
dec
int3
imul
clc
mov
call
ss
repnz
add
mov
fisttpll
xchg
push
xchg
bound
or
stos
inc
jecxz
repnz
sti
fcmovbe
pop
dec
push
xchg
push
ja
daa
jecxz
push
push
inc
cmp
push
mov
shr
push
iret
aad
or
or
add
sub
icebp
jns
push
test
shlb
inc
pop
insl
pop
pop
fiaddl
mov
fwait
add
js
lret
sub
dec
jae
sbb
mov
cmpsb
fwait
push
enter
in
add
cltd
mov
push
sbb
out
shl
push
daa
pop
sub
cmp
into
adc
or
rclb
sub
outsb
jb
movb
insb
xchg
andb
fiaddl
mov
sub
int
add
dec
jb
pop
mov
jmp
mov
shl
stos
inc
test
sub
mov
lahf
add
pop
sahf
mov
mov
cmp
fs
rorl
adc
int3
pop
jne
push
mov
cmp
cld
push
test
and
pusha
adc
cmp
into
xor
inc
lret
cs
mov
cmp
imul
sahf
test
jge
mov
mov
test
add
dec
repnz
push
movsl
xchg
cmpsl
push
ljmp
mov
int
cmp
je
cmpsb
sub
ret
repnz
negb
mov
dec
out
xchg
push
xor
jp,pn
cs
mov
xchg
xchg
xor
push
inc
adc
mov
push
mov
xor
ja
daa
cs
add
adc
xor
insl
mov
mov
cltd
jecxz
add
and
jmp
pop
mov
in
in
js
pop
lds
xorl
inc
cld
jbe
mov
xor
pop
and
xor
or
mov
xor
shll
xor
jbe
push
ss
call
arpl
scas
inc
adc
cmc
add
mov
js
mov
fs
cmp
fwait
inc
test
aas
ret
jo
das
lcall
ds
jl
jne
hlt
xor
xlat
cmc
or
in
nop
nop
pop
ss
lret
data16
enter
into
add
sub
loopne
lcall
aam
out
push
mov
jne
int
cmpl
inc
jo
mov
mov
dec
lods
add
pop
adc
xlat
movsl
or
outsb
or
sahf
in
sarb
or
aas
inc
mov
fisubrl
pushf
ret
scas
dec
cld
inc
shlb
dec
out
ss
xchg
xor
rol
jb
shrl
lock
std
add
iret
jmp
std
test
xchg
fwait
lods
fimull
inc
cmp
pop
test
push
mov
ret
sbbb
out
rorb
movsl
sbb
sub
push
jo
lret
mov
insl
xchg
adc
dec
or
sub
lock
push
mov
insb
pop
subl
pusha
sbb
jns
mov
mov
pushf
ss
imul
xchg
push
adc
jnp
cmp
and
sub
cltd
insb
daa
js
lret
cli
adc
fyl2x
mov
scas
and
mov
rcl
je
jns
xor
shrb
cli
and
mov
mov
daa
xchg
xor
sub
pusha
adcl
sub
sahf
xor
test
in
ja
add
subl
repz
cmp
push
call
int3
cwtl
add
sub
push
sbb
jecxz
pop
jns
mov
out
and
xchg
je
or
dec
or
lahf
cltd
es
cmpsl
add
rcr
inc
adc
fnstcw
adc
push
add
sbb
stos
ja
lock
lahf
sbb
fs
mov
push
mov
and
jno
or
ficompl
outsb
adc
aam
js
lcall
dec
cmp
test
movsb
arpl
rorb
mull
pop
shl
scas
scas
test
leave
cmc
pop
cmp
mov
push
xchg
loopne
inc
subl
ljmp
mov
lret
loopne
xor
xor
std
add
test
lret
and
mov
addr16
pop
sub
cmp
add
loope,pn
jo
sbb
fsubrp
cmp
shlb
sbb
mov
cmp
jns
shll
cmp
inc
out
or
jne,pt
call
repnz
adc
sbb
xor
jmp
js
shl
jecxz
jl
clc
push
sub
push
push
adc
loope
jbe
out
cmc
lcall
into
mov
dec
repz
test
jg
xchg
dec
cmp
popf
outsb
inc
rorb
fldcw
int3
add
sbb
lret
push
jbe
sub
inc
icebp
outsl
stc
loopne
push
lea
cmc
mov
fstpt
sbb
call
mov
int
inc
testb
pusha
mov
inc
in
xchg
xor
xchg
outsb
imul
mov
roll
mov
sub
pop
fs
ds
rcrl
push
andb
nop
or
imul
push
xchg
sub
mov
jnp
push
movsl
add
fnsave
adc
adc
adc
filds
jp
and
xchg
mov
popa
jecxz
mov
pop
sub
cwtl
daa
xor
fnstsw
pop
xlat
pop
add
out
xchg
mov
rcll
ret
xor
mov
jge
in
inc
xlat
mull
adc
jl
out
sbb
inc
mov
call
dec
jecxz
inc
xlat
pop
jmp
push
push
jecxz
sbb
lahf
gs
cld
repz
mov
mov
outsb
clc
pop
movl
test
push
or
cmp
pop
cld
xor
jnp
insb
clc
fcmovbe
js
cmpl
cs
xchg
sub
roll
aaa
hlt
cmp
bound
push
add
mov
add
dec
and
ret
pop
stos
arpl
jnp
out
aam
pop
sahf
test
mov
in
repz
gs
fldcw
add
pop
out
xlat
imul
adc
sub
push
sbb
xchg
xor
adc
enter
mov
xchg
jge
mov
xor
jns
mov
pushl
divb
lds
test
je
fstpl
fidivrs
sbb
lods
sbb
xor
sbbb
and
and
ficoml
jp
sbb
hlt
je
push
sub
pop
add
sub
addr16
clc
add
and
gs
fwait
pop
mov
xchg
in
cwtl
jmp
pop
aaa
dec
call
or
mov
outsl
cltd
stc
cwtl
and
adc
or
sti
mov
mov
push
and
lret
mov
push
pop
mov
dec
dec
aam
fstenv
loop
sub
xor
and
and
jnp
mov
xchg
repnz
into
inc
fstpl
loopne
mov
in
aas
aam
push
pop
mov
jne
adc
testb
popf
or
dec
push
insl
jnp
adc
daa
outsl
mov
dec
xchg
imul
insl
mov
push
mov
daa
pop
pop
ret
sub
jns
push
popf
xor
fwait
jo
lds
inc
inc
mov
test
add
mov
or
xchg
xchg
cli
fdivrs
adc
repz
daa
lea
pop
cltd
mov
mov
pop
lods
testl
mov
push
jmp
xor
and
ds
repz
scas
jl
adc
add
out
sub
cmpsb
sbb
inc
mov
xchg
adc
xor
push
std
mov
out
shrl
jle
es
mov
popa
rcrb
pop
inc
adc
xchg
js
fstpl
mov
in
lock
sub
jo
mov
xchg
scas
cmp
push
mov
cmpsb
adc
pop
ljmp
dec
into
mov
mov
mov
pop
adc
movsb
sub
mov
cwtl
ss
mov
push
andb
bound
and
inc
xchg
pop
imul
das
fstps
test
mov
es
ja
mov
inc
adc
pop
mov
out
push
push
cli
and
mov
mov
jle
in
nop
orb
data16
push
outsl
setne
dec
xchg
pop
cld
jae,pn
icebp
cmp
cmp
mov
aad
jbe
jmp
int3
cmp
xchg
dec
xchg
aad
fists
mov
nop
js
push
xor
fdivp
adc
shll
into
ret
lock
sbb
js
orl
lret
decb
bound
mov
ret
and
cwtl
dec
sbb
mov
mov
mov
mov
sub
scas
pop
loop
mov
push
push
mov
cmpsb
ficomps
sbb
mov
and
inc
pop
popa
inc
mov
stos
pop
cmpl
sub
xchg
push
js
cmc
lcall
es
add
lret
xchg
dec
mov
cwtl
or
incb
xor
sub
ljmp
jbe
addr16
jns
repnz
imul
outsb
mov
fdivr
mov
lea
xor
shl
or
mov
add
negb
cmp
push
mov
imul
imul
or
and
pop
inc
fnsave
shrl
cmc
inc
inc
lods
push
mov
fnstsw
pop
xor
mov
and
iret
sti
xchg
sub
mov
out
rolb
repz
test
jae
pop
out
mov
jge
iret
lods
sbb
enter
dec
les
scas
adc
xor
in
popf
xor
sub
shlb
clc
or
push
mov
push
dec
jae
imul
cmp
add
sub
pop
in
push
lcall
mov
pop
xchg
rcll
out
jmp
pop
dec
add
aad
mov
mov
jbe
xchg
aas
cmp
jae
mov
setg
aaa
pop
jno
inc
test
mov
out
sahf
sub
test
mov
jb
push
xor
mov
mov
jle
mov
push
repnz
clc
lret
push
sbb
pusha
xchg
jp
dec
push
sub
pop
pop
xor
dec
out
test
mulb
dec
mov
repz
push
xor
rolb
sahf
cmp
sbb
and
pop
adc
or
xlat
cltd
insl
jns
jmp
in
jb
lods
or
gs
xchg
daa
push
cwtl
jecxz
inc
daa
outsl
fs
hlt
pop
jo
jecxz
je
rcrb
mov
jecxz
jecxz
scas
sub
push
push
test
mov
pop
xchg
test
popa
sub
mov
mov
cwtl
andl
aaa
sbb
rclb
out
mov
mov
or
pop
xchg
clc
ljmp
xor
cs
data16
in
enter
jne
or
pop
hlt
jae
test
jbe
leave
and
int3
fidivrs
sub
adc
shrl
cmp
ret
shl
stos
lcall
mov
nop
mov
sub
cli
cmp
gs
sub
sahf
repnz
lret
adc
or
loopne
icebp
push
jo
adc
dec
fwait
lret
or
ret
pop
jmp
push
sbb
fstps
fdivl
movsl
mov
pop
mov
aaa
mov
fldenv
test
sub
adc
test
mov
outsl
sub
push
movsb
mov
add
repnz
mov
xor
inc
jnp
xor
mov
fst
addr16
or
add
pop
add
push
jle
mov
adc
mov
mov
sbb
fisubrl
push
mov
jno
cmp
rcl
in
pop
dec
sbbb
cmp
js
xchg
rcrl
or
adc
or
js
std
xchg
pop
test
xchg
movsb
push
movsl
mov
sbb
push
loopne
pop
stos
push
mov
and
mov
das
xor
cltd
mov
adc
push
pop
xchg
or
int3
imul
inc
and
andb
dec
repnz
out
cwtl
jae
inc
sub
leave
out
int
cmp
push
out
mov
lds
or
jge
ljmp
sub
jne
dec
aad
popa
push
fisubrs
cmp
ja
jns
mov
sub
push
gs
in
mov
cwtl
xchg
flds
jo
rep
inc
lret
mov
xchg
rcl
ja
add
out
and
mov
cmpl
mov
clc
bnd
mov
inc
mov
mov
clc
aaa
in
add
cmp
add
cmpsb
dec
call
nop
or
mov
or
inc
pusha
add
imul
jne
mov
adc
mov
out
mov
movl
mov
pop
test
pop
je
mov
in
es
dec
rclb
push
cmc
push
jns
jae
cmp
mov
cwtl
sub
jecxz
fisttps
sbb
pop
jno
cmp
jmp
sub
imul
int3
dec
cmpsl
leave
jae
sub
sub
jb
out
inc
cmp
addr16
mov
div
insb
cltd
add
ss
ja
arpl
sbb
mov
pop
or
and
sub
push
pop
push
test
jb
mov
xchg
xor
out
mov
loope
mov
out
push
andl
pop
int3
push
loop
ljmp
es
lret
inc
pop
push
jbe
rcrb
jecxz
mov
inc
mov
jnp
xchg
fs
sahf
mov
shr
mov
dec
arpl
int
lods
cmp
in
in
jle
push
push
loop
and
jbe
and
stos
push
fcmovne
mov
int3
add
jbe
cmpsb
add
shlb
popf
pop
fs
or
fstps
test
jo
arpl
mov
cwtl
add
pop
push
shll
push
icebp
push
xor
and
mov
dec
xchg
pop
sahf
mov
rcl
stos
dec
test
mov
daa
adc
fdiv
leave
cltd
vpmullw
fldl
cmc
pop
add
xor
icebp
push
adc
mov
mov
xor
jge
mov
pop
xchg
xor
cld
orb
mov
imul
ds
push
xor
aas
mulb
push
int
mov
and
out
lock
mov
iret
push
enter
fwait
cmp
xor
adc
sub
rclb
jmp
inc
sub
inc
bound
lea
mov
and
fidivl
mov
mov
pop
insb
mov
mov
inc
and
scas
or
mov
dec
mov
mov
adc
rolb
or
lret
ret
cmp
js
leave
sub
push
xor
clc
mov
and
add
sbb
push
sub
xchg
add
jno
add
lret
call
repz
lods
pushf
cld
sbb
mov
cmp
add
jns
push
xor
push
stc
add
ljmp
aam
sub
imull
xor
mov
jbe
and
cmp
mulb
add
lds
mov
aam
xor
mov
jno
aas
inc
pop
dec
jl
filds
mov
mov
fwait
xor
dec
jg
adc
mov
pop
xor
fcmovnb
xchg
in
cmpsb
call
ljmp
and
jl
sub
fcoml
mov
test
mov
shlb
test
jne
mov
xor
pusha
std
mov
push
fisubrl
jp
xchg
xor
jns
repz
cmp
mov
add
mov
sbb
inc
push
mov
push
scas
dec
movsl
cmp
loopne
push
mov
nop
fisttps
xchg
stos
cmp
in
dec
fistpll
mov
sarl
jno
add
xchg
es
and
push
xchg
sub
call
pop
mov
sarl
test
mov
popf
into
xchg
xchg
jmp
in
std
mov
mov
xor
push
dec
push
jbe
sub
xor
addr16
aad
adc
fildl
out
xchg
jl
or
int
cmp
cmpsl
xchg
loop
jp
mov
imul
jle
rcr
jbe
es
imul
into
loopne
fcompl
ja
idiv
push
ljmp
out
sub
xor
add
mov
sub
imul
sub
addr16
mov
loop
ja
das
ja
mov
cmp
repnz
push
add
mov
sub
hlt
push
nop
jae
dec
mov
sub
rcl
and
ss
mov
mov
push
test
xchg
cwtl
jge
lret
lahf
jb
ret
mov
xchg
jno
add
cld
mov
imul
jns
daa
js
ljmp
mov
and
ficoml
ds
movsl
push
mov
xchg
icebp
mov
inc
add
add
mov
jne
stos
push
imul
fwait
dec
ret
and
mov
or
jnp
leave
mov
into
fmull
xor
jae
sub
stos
push
cmpsl
push
mov
mov
enter
fsubs
popa
mov
or
stos
jl
cltd
cmp
push
gs
testl
and
cltd
jae
cmpsb
scas
cmp
jbe
cmp
imul
mov
dec
cmp
pop
shrb
lea
push
mov
roll
out
jbe
insl
fs
dec
lock
mov
int
ss
cli
sbb
sarb
cmp
xor
jne
sub
and
xchg
stos
cltd
das
inc
dec
mov
push
xor
jae
mov
dec
ja
mov
mov
cli
push
sbb
es
lods
scas
xchg
jnp
flds
pop
adc
repnz
fdivrs
fs
movsb
add
push
lret
pop
clc
fwait
jae
fs
and
mov
lods
sahf
pushf
xor
push
push
in
fldenv
or
xchg
scas
imul
pop
shll
xchg
bnd
xor
rorb
push
insb
push
sahf
mov
inc
je
les
push
xlat
sbb
add
mov
leave
ror
cmp
mov
pop
lds
lahf
ja
jnp
sub
lods
sahf
pop
scas
lcall
mov
ds
push
mov
xchg
xor
ja
pop
mov
test
inc
xor
mov
hlt
cmc
lahf
mov
ss
dec
dec
mov
and
pop
add
adc
dec
stos
repz
inc
ds
es
cld
in
mov
subb
jg
mov
sbb
add
ja
cmc
cmp
sub
rcl
dec
sbb
mov
fiadds
jp
in
mov
and
pop
push
xor
pusha
push
mov
and
mov
out
add
cs
add
mov
popf
jbe
push
xchg
xchg
sbb
pushf
outsb
mov
pop
ja
enter
dec
jmp
inc
mov
adc
lock
mov
fildll
and
fwait
cmpsl
gs
orb
and
int
add
xchg
addb
pop
fimuls
mov
inc
dec
jb
xor
and
mov
and
mov
inc
or
scas
pop
outsl
xor
jmp
sub
dec
sub
cli
jne
int
xchg
and
mov
jg
aad
lods
mov
in
dec
fldl
int
mov
inc
lea
pop
orl
sbb
and
adc
add
jno
popa
lods
push
popf
inc
lea
pop
orl
sbb
and
adc
add
jno
popa
lods
push
popf
inc
lea
pop
orl
sbb
adc
int
mov
rorl
pop
cmp
cmp
loop
repnz
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
or
stos
and
ljmp
push
or
pop
aam
sub
icebp
push
lcall
and
push
lret
jno
dec
sbb
sub
jp
push
lcall
push
fisubl
or
jnp
push
sbb
dec
sarl
andb
pop
addl
mulb
inc
push
pop
ljmp
sbb
jle
repz
push
or
int
push
loope
iret
adc
ret
jmp
fildl
jo
lahf
sahf
outsl
outsb
cmc
jge
dec
cmpsl
icebp
cmpsl
les
lods
pop
jns
pop
mov
lret
rcr
mov
lahf
cmp
nop
pop
xchg
insb
mov
pop
in
mov
pop
adc
and
inc
out
sbb
int3
popa
cmp
mov
push
pusha
popf
addr16
jne
jmp
inc
cli
mov
popf
jb
jg
push
sub
mov
xchg
insb
out
mov
xor
cmp
add
in
dec
cmpsl
lret
cs
imul
inc
stos
and
push
lret
jno
repz
sub
jp
push
out
adc
outsb
pop
in
cltd
hlt
scas
sub
add
es
mov
ret
push
scas
pop
test
mov
push
leave
inc
into
inc
loop
mov
sbb
hlt
inc
jecxz
xchg
adc
jne
in
bound
fwait
sbb
ljmp
mov
mov
jp
push
lcall
and
push
lret
jno
popa
sbb
sub
jp
push
lcall
iret
test
cmp
mov
shlb
dec
fmull
das
inc
jns
push
push
lock
aas
mov
mov
shlb
push
push
jae
pop
aas
pop
bound
repnz
add
xchg
inc
iret
mov
push
mov
das
fwait
call
popa
ficomps
mov
aaa
out
xor
mov
add
jb
cmp
imul
sbb
or
push
inc
inc
dec
aam
popf
pop
push
out
dec
subl
scas
out
or
inc
stos
adc
xor
or
sub
pop
pop
les
inc
mov
leave
in
inc
movsl
push
push
inc
test
fisubs
adc
js
jne
ljmp
xor
xor
les
daa
ret
clc
and
inc
push
pushf
cltd
inc
stc
popl
jmp
mov
pop
stos
inc
icebp
roll
lock
gs
sarb
mov
pop
addr16
mov
add
adc
add
insl
loop
push
xor
js
hlt
add
aaa
les
mov
push
cmp
mov
insl
pop
pusha
jo
gs
mov
sub
mov
pop
push
lea
mov
adc
clc
ljmp
movl
xor
pop
test
pushf
add
cmc
les
xor
and
or
xchg
fwait
test
push
cmp
arpl
loop
test
imul
arpl
sub
dec
aaa
add
cmp
ret
das
ret
in
add
xchg
sbb
mov
vphaddubd
cmp
call
inc
scas
aas
pop
xchg
mov
fsubs
cmp
push
push
mov
decb
mov
outsl
fidivl
fstpt
scas
jns
ljmp
into
popf
dec
aaa
gs
ljmp
ret
jge
or
test
sbb
fs
sub
mov
adc
xor
jb
mov
inc
out
mov
insb
jecxz
add
idivb
jb
mov
orb
cltd
aaa
add
cmp
xlat
mov
add
dec
adc
or
mov
push
test
fmuls
insb
or
jnp
adc
cmpsl
cmp
fcomp
loope
pop
mov
lret
arpl
jge
inc
cwtl
cmpsb
cwtl
je
pop
idivl
movsl
aas
sub
cs
inc
xchg
cmp
pop
flds
repz
or
add
scas
cmpsb
add
outsb
fnstenv
xchg
jmp
jae
lods
cmp
mov
je
stos
je
adc
mov
mov
lahf
push
sub
adc
sbb
movsl
xor
loop
test
hlt
mov
xor
ljmp
ret
push
jo
mov
cmpsb
xor
or
cmpsb
loopne
cmp
out
inc
mov
inc
or
ljmp
insb
jnp
divl
lahf
div
cmc
xor
filds
scas
push
int
pop
xor
inc
add
and
repz
loope
jb
pop
int
clc
insl
call
shrl
xchg
pop
out
xchg
andl
sub
data16
sub
rorb
shl
add
sub
cmp
or
fimull
pop
out
push
test
ja
and
rcrb
ss
push
xor
daa
mov
pusha
lods
add
orb
call
in
push
icebp
lds
sub
xlat
out
out
adc
testb
rdmsr
pop
enter
cmp
fstps
frstor
lret
mov
scas
dec
test
xor
leave
adc
insb
xor
jno
push
jb
cmpl
popf
icebp
leave
and
aad
icebp
in
pop
dec
rcll
xchg
cmp
ds
push
jecxz
jne
nop
sbb
adcl
pop
repz
mov
mov
mov
inc
das
mov
push
push
into
jno
pop
mov
inc
mov
icebp
xchg
xchg
dec
cld
mov
mov
mov
stos
or
movsb
arpl
aad
setno
mov
push
sbb
cmc
inc
push
out
sbb
jmp
dec
sbb
sbb
fnstenv
inc
pop
pop
jp
push
dec
shrl
cmp
jbe
dec
lds
mov
push
mov
jl
dec
ret
aas
sbb
mov
frstor
jmp
jge
imul
fnstsw
lahf
pusha
xor
xor
sbbl
lea
fiadds
pop
jo
es
add
or
and
nop
mov
mov
mov
mov
movsl
or
mov
lahf
into
scas
mov
inc
cmpsl
cmp
jp
mov
or
jo
loopne
jl
inc
es
mov
lea
negb
jbe
bound
shrl
daa
and
mov
and
xchg
sahf
pop
xor
mov
daa
daa
insb
test
bound
ljmp
fbld
insb
mov
test
mov
inc
movsl
inc
add
sub
xchg
sub
test
pushf
decb
push
movsb
rorb
mov
xchg
adc
int
ficoml
mov
mov
xchg
ss
sbb
jbe
jecxz,pt
sub
dec
stc
aas
cmp
scas
sti
ret
mov
jae
add
es
inc
lea
insb
mov
dec
pushf
inc
xor
jno
push
pop
mov
outsb
lea
xchg
cmp
sub
sub
insl
or
lods
jbe
push
mov
and
dec
mov
into
pop
or
xor
sahf
fildl
test
push
std
subb
inc
sub
test
jne
adc
adc
pop
inc
xor
aad
cltd
cmc
xor
daa
inc
mov
mov
test
inc
xchg
loope
iret
add
dec
dec
cmpsb
mov
lcall
xchg
mov
loopnew
mov
lods
jmp
jnp
xlat
dec
and
lret
shlb
jp
sub
dec
pusha
push
out
lock
scas
dec
push
dec
sbb
pop
jg
sub
sahf
cmovae
xlat
stos
dec
daa
gs
jge
enter
lods
mov
mov
pop
testb
in
and
test
inc
lds
insb
pop
int3
cmp
lahf
daa
jecxz
xor
aam
cltd
add
jns
sub
or
and
jmp
lret
fimull
outsb
pushf
and
mov
fs
add
pop
cmpsb
cmp
add
faddl
push
cmp
pusha
jne
ja
jbe
imul
ss
out
pop
sub
into
leave
stos
xchg
mov
xchg
inc
ja
mov
fucomi
bound
xor
push
or
push
popa
push
push
dec
inc
lods
pop
cmpsl
mov
pop
shl
xor
movsb
popf
pop
fidivl
dec
xlat
imulb
push
pop
cmpb
inc
sarl
scas
out
lds
mov
fidivrl
adc
pop
mov
mov
sbb
loope
cmp
xor
movsb
pushl
lret
lock
subb
insb
xor
sti
inc
mov
ds
mov
push
sbb
dec
into
cmpsl
dec
dec
bound
ljmp
nop
jp
mov
pop
test
jnp
testl
push
movntq
out
pop
xchg
out
repz
xchg
and
cmpsl
push
mov
stos
rorb
xchg
and
xchg
xchg
inc
xlat
imul
arpl
mov
add
adc
out
data16
xchg
inc
xchg
and
aaa
xor
hlt
add
pop
xchg
inc
xchg
push
mov
and
test
aam
adc
ljmp
movsl
mov
dec
pop
andb
pop
cmp
icebp
insl
fsubs
and
or
call
rorl
popf
rcrl
fwait
stos
loop
fnstsw
xor
hlt
lock
rcl
push
jb
scas
sub
mov
addr16
fisubl
pushf
in
mull
lahf
jge
sbb
pop
test
dec
sub
jmp
out
jae
push
cmp
dec
jne
or
lahf
add
je
sbb
out
push
test
enter
mov
pop
add
xchg
xchg
das
adcl
daa
mov
xchg
outsb
fwait
xlat
jbe
loopne
sahf
aas
xchg
dec
hlt
lret
inc
dec
negb
inc
and
cli
add
mov
adc
test
pop
ds
inc
js
jle
cmp
mov
ret
jecxz
adc
inc
dec
ja
xor
pop
in
insb
addb
dec
jle
pop
inc
push
addr16
mov
jns
rcrb
push
stc
sarl
adc
fstpl
pusha
or
shrb
dec
and
sbb
xchg
subb
push
movsl
clc
push
inc
pop
pop
pusha
xchg
pop
icebp
adc
and
aas
cld
cmc
cmp
into
in
lea
ja
fcoml
ss
movsl
cmp
cmpsl
insb
inc
jecxz
and
loope
idiv
outsb
imul
cmc
cmp
xchg
fs
push
loop
adc
inc
mov
pop
lahf
xchg
sbb
add
mov
xchg
cmp
mov
aaa
adc
mov
dec
fsubrl
push
dec
je
aad
cltd
or
jnp
daa
mov
mov
mov
jle
push
addb
mov
add
mov
and
xor
popa
and
lock
cli
sub
imul
inc
fnstsw
adc
and
sbb
icebp
and
cmpsb
adc
sbb
jno
cwtl
insb
or
fstpl
sbb
adc
xchg
push
mov
xchg
loopne
jns
mov
orb
and
jmp
push
les
push
das
cmp
pop
sub
xchg
mov
sbb
fdivrp
out
sub
or
push
mov
pop
lods
inc
push
das
shl
out
mov
mov
fdivs
push
sbb
es
mov
xchg
mov
inc
cmp
or
mov
ret
test
jmp
in
sub
fidivrs
or
cmp
add
fs
xchg
in
icebp
xchg
outsb
hlt
inc
adc
es
popf
mov
adc
jne
pop
xor
inc
adc
mov
mov
dec
mov
sbbb
rorb
in
xor
push
inc
cld
outsb
decl
test
push
mov
cmp
popf
or
std
mov
xor
sbb
xor
add
sbb
jmp
insl
aam
loop
iret
lret
dec
pop
xor
pop
outsl
out
dec
sahf
fsub
std
inc
xchg
stos
ljmp
fisubs
lahf
xor
jnp
test
lock
sub
mov
addr16
sbb
lret
cmp
inc
cmpps
mov
gs
mov
adc
or
loop
loope
pop
xor
aad
xor
sbb
shll
fidivs
sarl
dec
scas
outsl
dec
cltd
sub
inc
cmpsb
lds
test
xor
and
dec
arpl
sub
addr16
adc
mov
jnp
adc
xchg
clc
and
lds
jl
mov
faddl
mov
bound
fdivs
mov
in
or
and
push
jl
lret
mov
inc
pop
ficomps
mov
mov
out
cmp
sahf
enter
push
xchg
pushf
jno
dec
fcmovne
push
iret
repnz
pop
sub
cs
aam
ret
xor
mov
insb
movsb
xchg
xchg
cmp
xchg
sbb
cmp
cmpsl
xor
subl
pop
lea
mov
lcall
jbe
pop
jmp
adc
std
xchg
enter
jns
pusha
xor
call
xchg
int3
cmp
mov
bound
imul
cli
gs
aaa
mov
aas
push
aam
out
cmp
dec
cmc
pushf
adc
out
pop
scas
imul
mov
jp
pshufw
cmpl
xor
jbe
stos
stc
add
std
jbe
pop
xor
sbb
jecxz
dec
inc
inc
les
sbb
ja
and
xchg
mov
add
fnstenv
out
adc
xchg
aad
in
fmull
inc
xor
imul
rorl
into
pushf
or
ja
js
out
mov
xor
aam
scas
sarl
shlb
gs
inc
and
xchg
push
mov
and
mov
xchg
call
jecxz
or
rcr
mov
mov
pop
mov
fadds
or
daa
movsb
fs
lret
push
adc
pop
fcmovb
lock
sub
xlat
mov
mov
and
sub
ljmp
adc
mov
jmp
jg
stos
rcl
in
and
cmp
xchg
int
push
xor
rcrb
insl
shll
mov
push
int3
adc
cltd
imul
fnsave
push
data16
mov
mov
test
add
xchg
cmp
addr16
inc
ret
sub
insl
jns
call
xor
sbb
sbb
add
mov
mov
pushf
cmpsb
xchg
aam
inc
xor
in
jp
push
xchg
add
cmpl
mov
fs
in
std
mov
xchg
mulb
fwait
jl
icebp
pop
cmpsb
ja
and
icebp
jnp
test
push
jle
ljmp
inc
testl
cmp
and
divl
std
dec
lds
cs
insb
int3
cmpl
out
bound
jo
icebp
or
enter
adc
mov
out
inc
mov
scas
lea
arpl
negl
cmp
pop
jne
xchg
mov
js
outsl
xor
adc
insb
jmp
test
fldl
in
lcall
pop
cld
sbb
cmpsl
mov
les
outsl
stos
es
sbb
sbb
push
xchg
push
aas
out
xor
das
mov
jecxz
jb
pop
sub
popf
mov
lret
sub
jnp
iret
mov
cmp
mov
mov
mov
cmp
into
loope
mov
icebp
fimull
cmc
xchg
pop
inc
cmpl
mov
inc
enter
xor
shll
mov
lret
inc
jae
idiv
hlt
cmp
notl
outsl
adc
in
push
movsl
roll
jb
adc
shrb
push
lods
divb
push
inc
fs
dec
jnp
jo
cmp
sub
rorl
rcl
push
mov
cli
fisubl
jmp
in
or
int3
jae
movsl
dec
xor
push
or
cmpsb
jge
dec
jo
mov
adc
out
or
mov
adc
xor
dec
shrb
adcl
out
cmp
outsb
loop
adc
outsb
mov
push
lcall
xor
cli
jge
dec
cmp
outsb
jl
aad
xor
dec
sbb
inc
mov
adc
inc
test
pop
out
xor
les
pop
push
cmp
test
mov
jae
sbb
and
mov
adc
mov
xor
push
dec
jbe
das
add
rclb
push
call
mov
pop
jmp
push
jg
lds
cwtl
mov
xchg
and
xlat
jbe
mov
xchg
bound
ss
lret
idivl
mov
icebp
addl
jno
push
cmp
mov
test
repz
mov
add
roll
test
mov
aaa
ss
nop
bound
cmp
jb
mov
xlat
cmp
rol
mov
test
mov
clc
or
xorl
sbb
jo
push
push
xor
lock
jns
pop
sbb
into
in
mov
jl
jo
dec
add
pop
jae
sub
fucomp
scas
movsb
aaa
mov
mov
ror
into
mov
sub
pop
dec
xlat
xchg
add
mov
adc
mov
sbb
ret
mov
stc
dec
or
pusha
xchg
jne
jg
sub
ss
lods
cmpsb
dec
out
push
aad
clc
fsubrp
and
fs
mov
push
int
cpuid
lret
mov
test
push
xor
mov
pop
jmp
pushf
into
xchg
push
mov
cmpsl
shr
and
mov
dec
xor
movsb
mov
inc
vmovdqu
push
push
aaa
sub
xlat
in
push
js
inc
ja
lret
imul
xchg
lret
mov
pop
aam
test
sub
xchg
xlat
push
movb
inc
adc
in
cld
cmc
mov
ljmp
cmp
pop
mov
and
dec
sub
in
orb
sbb
mov
sub
es
shll
outsb
arpl
jmp
insb
add
sub
mov
in
ror
sub
dec
cmp
out
xchg
mov
mov
pusha
and
pusha
mov
push
sbb
mov
test
testl
sbb
in
jmp
dec
movsb
mov
dec
popf
jmp
imul
add
jmp
push
loopne
out
mov
mov
pushf
or
mov
lret
jecxz
mov
jmp
sahf
inc
xchg
mov
enter
add
and
lahf
cmp
cmp
cmpsl
or
mov
pop
lahf
pop
mov
xchg
xchg
xchg
ja
mov
out
jl
stc
cmp
mov
je
hlt
or
pop
jno
pushf
pop
push
shrl
push
lcall
sahf
cmp
and
fs
inc
sub
push
xchg
fldcw
aad
clc
mov
imul
push
jge
mov
movsl
call
xchg
xor
xor
dec
cs
aam
sbb
cmp
fistpll
inc
into
in
in
jle
jmp
imul
into
xchg
out
stc
pushf
add
das
jno
das
jne
pusha
cmp
push
rolb
push
mov
nop
movhps
jp
test
push
jno
push
ret
shrb
popa
sbb
inc
xor
sub
pop
fsubr
fcmovnbe
je
pop
inc
rorb
sbb
inc
or
or
in
lock
or
mov
ljmp
ret
dec
std
stos
cmc
or
push
enter
pop
shll
dec
rcrl
sub
icebp
pushf
imul
sbb
or
cmpsl
dec
mull
out
js
int
add
and
int
iret
scas
inc
add
aad
ss
loop
or
or
imull
repnz
outsb
xchg
mov
lods
ja
mov
xor
adc
test
push
cmp
ret
cmp
roll
cmp
fstp
jp
adc
cmp
scas
pop
dec
xor
adc
sub
mov
mov
js
mov
fwait
adc
push
cmp
sub
cld
adc
roll
mov
call
lret
mov
pop
outsl
mov
sbb
pop
scas
jne
or
fsts
loop
int
xchg
jns
pop
loope
dec
lea
push
cmpsl
xor
mov
mov
and
jge
insb
push
ljmp
fsubrl
add
clc
bound
mov
clc
push
jno
pushl
popf
shlb
inc
in
js
movsb
cltd
mov
mov
movsb
pop
cmp
fcompl
push
ret
lahf
cld
jae
mov
mov
cmp
stos
sub
adc
imul
imul
in
mov
inc
ljmp
mov
movsb
jne
mov
lods
sub
mov
sbbl
cmp
ror
push
addr16
cmpsl
movsl
nop
mov
mov
add
insl
call
mov
adc
int3
sar
or
fsubs
je
in
ret
loope
shrb
dec
outsl
fisubs
test
mov
jae
and
test
dec
icebp
pop
adc
out
fs
lods
cmpl
xchg
mov
push
scas
rcrl
daa
dec
push
out
jbe
xchg
lahf
cmp
gs
pop
insb
ja
add
jno
push
outsb
fwait
inc
xchg
sub
mov
inc
jge
xchg
fdivr
setle
jp
popf
xor
notl
ret
int3
ljmp
xor
cmpsb
mov
adc
imul
ljmp
adcb
jnp
adc
sbb
xchg
push
in
pop
cmpl
inc
jb
jg
aam
rcl
mov
cmpsb
insl
movsb
sub
mov
movsb
and
sbb
sub
mov
in
jno
repz
pop
daa
xchg
imul
add
and
mov
add
fwait
cmpsb
popa
jne
mov
or
out
ja
inc
pop
mov
mov
out
add
push
and
sahf
mov
pop
shlb
dec
pop
stc
imulb
int
sub
xchg
cli
nop
push
scas
xchg
push
jno
psubusw
adc
ja
mov
cmc
mov
into
xorb
aad
fistl
and
push
lret
jno
popa
sbb
sub
jp
push
lcall
and
push
lret
jno
popa
sbb
sub
jp
push
lcall
and
cli
jne
popa
sbb
sub
jp
imul
aad
popa
ficoml
inc
cli
icebp
ljmp
mov
sub
mov
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
