jle
add
mov
in
inc
xchg
ja
outsb
int3
ret
pop
scas
inc
sbb
mov
test
call
mov
sub
lahf
ret
jbe
lock
test
jns
pusha
int3
jnp
xor
clc
inc
rclb
jo
adc
pop
jb
push
xor
mov
xchg
lret
lock
add
loope
xchg
mov
ds
jae
pushl
into
shrb
gs
pushf
cmp
enter
jns
adc
push
mov
cmp
dec
sub
insb
movsl
mov
pop
stc
fs
ror
dec
test
cs
in
gs
jns
dec
cbtw
and
test
divb
cmp
lods
lret
jb
cmpsb
enter
int3
xchg
in
mov
mov
jae
sahf
xorl
stc
mov
xchg
and
aas
add
jae
xor
jp
nop
push
dec
cmpsb
outsl
cmp
fs
shll
pop
and
push
popf
rol
in
push
outsb
aas
int3
out
ret
mov
ret
or
jge
push
test
add
call
mov
add
rolb
lds
push
mov
idivl
pop
mov
push
push
test
add
add
call
hlt
cmp
stc
pusha
xchg
push
add
ret
add
jmp
aad
and
push
dec
sub
lods
sub
jecxz
xor
or
je
push
clc
shl
rcl
xor
sub
mov
nop
mov
jae
shr
sub
add
pop
pop
ret
push
clc
sub
mov
mov
jae
rcr
adc
add
pop
pop
xor
call
push
clc
sub
sub
mov
nop
mov
jae
rol
add
add
pop
pop
test
jne
push
push
and
lea
lea
call
test
fwait
jmp
pop
jmp
lea
pop
ret
pop
jmp
pop
push
in
and
pop
ret
push
clc
sub
mov
nop
mov
jae
rol
and
add
pop
pop
push
push
push
and
lea
add
call
out
jp
xlat
int
jg
push
pop
jmp
push
mov
stos
movsl
imul
jecxz
jmp
pop
push
mov
push
clc
cmp
add
call
xchg
pop
ss
insb
and
clc
sub
rol
sub
add
jmp
sub
in
xchg
clc
mov
xchg
jmp
aas
movsl
out
fimuls
and
int
cmp
adc
add
xor
push
clc
mov
ror
add
call
aam
sbb
out
xchg
clc
shl
mov
add
jmp
pop
enter
dec
clc
mov
xchg
jmp
sbb
pop
fisttpl
or
push
push
push
test
add
call
in
add
ret
add
jmp
test
ffree
xchg
jns
mov
pop
call
push
push
and
add
call
jge
mov
ss
sbb
jmp
int3
jb
add
jmp
test
test
xchg
notrack
pop
push
push
push
sub
add
call
pop
imul
nop
sub
add
cmpsl
push
jecxz
push
mov
push
push
and
add
lea
call
jmp
sbb
pop
fwait
sti
aad
imul
or
cltd
lods
push
push
ss
pop
jmp
pop
shl
push
clc
rcr
sbb
add
add
call
arpl
stc
xlat
cltd
mov
clc
sbb
add
jmp
cmp
or
xchg
jmp
inc
ficoml
push
and
addl
jmp
push
push
push
test
lea
lea
call
cmp
cld
lods
repnz
je
inc
add
jmp
sub
cmp
or
cli
orl
pop
xor
push
push
test
add
call
add
popf
cld
fdivs
fistpll
inc
add
jmp
inc
ret
gs
mov
imul
movsb
pop
adc
jle
pop
push
push
push
test
add
call
and
enter
jle
inc
add
jmp
mov
pop
in
mov
and
mov
pop
call
push
push
sub
add
call
lods
dec
sbb
adc
add
iret
add
jmp
mov
out
sub
mov
push
clc
sbb
sub
mov
nop
mov
jae
ror
adc
add
pop
pop
push
push
push
test
add
call
mov
pop
xchg
mov
dec
int3
mov
jp
inc
add
jmp
mov
mov
pop
jmp
pop
jmp
push
push
and
lea
add
call
adc
pop
push
inc
mov
aam
imul
pop
jmp
clc
xor
and
add
jmp
fwait
hlt
lods
add
loopne
mov
sub
push
push
xor
jne
jmp
pop
cmc
outsl
mov
jb
add
xor
jne
jp
repnz
imull
jbe
jo
jmp
jo
shll
jb
jns
xor
fs
push
push
jns
je
dec
in
jmp
ffree
jmp
lds
inc
ljmp
dec
add
add
pop
push
push
push
push
push
xor
add
call
xchg
dec
dec
xchg
xor
pop
jmp
push
dec
jmp
dec
insl
cmp
add
jmp
roll
faddl
pop
call
push
clc
cmp
sub
mov
nop
mov
jae
shl
cmp
add
pop
pop
jmp
call
push
push
test
add
call
mov
jbe
inc
add
jmp
and
divb
push
push
push
test
lea
lea
call
aad
xor
js
pop
jl
inc
aad
cmp
inc
push
jp
inc
add
jmp
mov
and
out
ficoms
sub
jle
pop
call
push
push
test
add
call
or
add
rolb
sub
rol
cmpl
xor
jle
pop
pop
push
push
test
add
lea
call
shrl
pushf
add
iret
out
xlat
repz
inc
add
jmp
leave
mov
mov
dec
mov
pop
sub
add
mov
push
clc
rcl
sub
mov
mov
jae
shr
sub
add
pop
pop
add
push
clc
sbb
mov
add
call
fistpl
xchg
clc
add
jmp
test
pop
inc
mov
fiaddl
addl
and
jmp
data16
icebp
cli
cld
xchg
popa
sarb
cmp
jae
roll
add
or
clc
shl
add
sub
mov
nop
mov
jae
shl
adc
add
pop
pop
add
mov
push
clc
sub
cmp
add
call
pop
mov
adcb
and
clc
add
jmp
shlb
or
jle
cmp
xor
xchg
jmp
aaa
cld
or
sbb
xchg
xlat
addl
jmp
push
push
clc
ror
add
call
in
jae
in
scas
dec
xchg
clc
sbb
mov
shr
add
jmp
and
clc
ror
xchg
jmp
mov
mov
jno
add
ret
cmp
fsts
push
push
test
add
call
cmp
push
outsb
ficompl
jecxz
add
ret
add
add
dec
adc
mov
pop
push
push
push
push
and
jne
jmp
insl
or
mov
cli
enter
xor
jne
jp
push
sbb
jle
mov
sbb
mov
mov
sbb
cs
mov
xchg
iret
ss
les
lea
pop
call
pop
pop
push
clc
mov
shl
sub
mov
nop
mov
jae
rcr
and
add
pop
pop
push
push
push
xor
lea
lea
call
xor
jmp
dec
add
mov
int
ret
add
push
pop
jmp
pop
push
push
clc
sub
sub
mov
mov
jae
ror
sub
add
pop
pop
add
mov
push
push
xor
add
lea
call
ror
dec
fs
push
mov
pop
jmp
stc
lea
xor
add
jmp
jbe
lods
shlb
movsl
jmp
pop
push
push
clc
mov
add
call
mov
xor
inc
orb
pop
xchg
clc
shl
add
jmp
scas
imul
rolb
testb
je
add
add
add
cwtl
adc
and
subb
jmp
mov
add
push
push
xor
lea
lea
call
push
push
loop
jmp
pop
jmp
jmp
add
jmp
inc
insb
or
stc
shll
in
add
add
add
push
push
test
add
add
call
inc
or
jbe
inc
add
jmp
mov
adc
leave
enter
jle
pop
mov
push
clc
rcr
add
call
sub
xchg
clc
mov
mov
add
jmp
dec
or
inc
js
leave
clc
adc
shl
adc
xchg
jmp
xchg
decb
pop
test
scas
xor
xchg
in
leave
pop
push
push
and
inc
lea
call
mov
call
pop
jmp
pusha
sub
stc
push
add
jmp
inc
push
adc
push
push
and
add
add
call
xchg
inc
mov
or
mov
cmp
add
push
sub
jmp
pop
call
mov
push
clc
xor
add
sub
mov
mov
jae
ror
sub
add
pop
pop
xor
push
clc
add
call
int3
mov
cmp
add
jmp
arpl
int
or
scas
clc
shl
ror
mov
xchg
jmp
out
lods
clc
addl
jmp
push
push
call
push
push
and
add
lea
call
cmpsb
add
jo
popf
call
jmp
movsb
add
jmp
ss
out
add
push
clc
mov
sub
mov
mov
jae
rol
and
add
pop
pop
call
pushl
movzbl
push
push
xor
add
call
adc
jbe
sbb
add
xor
or
pop
pop
or
jmp
pop
pop
push
clc
mov
add
or
add
call
and
fsubs
gs
mov
add
add
jmp
popf
aaa
aas
adc
jo
pop
mov
mov
clc
sar
add
xchg
jmp
insb
cmp
iret
and
xchg
addl
jmp
sub
push
push
clc
adc
mov
add
call
mov
cmpsl
xchg
clc
add
jmp
cmp
xor
mov
xchg
jmp
popf
or
dec
andl
add
sbb
scas
cmp
mov
push
push
test
add
add
call
mov
je
or
add
jmp
add
mov
mov
pop
mov
push
clc
sub
sub
mov
nop
mov
jae
shl
cmp
add
pop
pop
shr
push
push
sub
add
call
lods
xor
jmp
pop
jmp
imul
add
pop
xor
jnp
cmc
aad
loop
add
push
mov
push
clc
add
or
add
call
pop
mov
jge
xchg
clc
sub
or
add
jmp
cmp
clc
xchg
jmp
scas
mov
push
or
sub
jmp
add
inc
add
push
push
sub
inc
add
call
sbb
jp
push
pop
jmp
and
rolb
mov
and
dec
sub
loope
add
add
mov
add
call
inc
sub
adc
add
add
insl
hlt
imul
jecxz
pop
add
call
push
push
xor
add
lea
call
lahf
adc
pop
inc
mov
jmp
pop
jmp
lock
ss
add
jmp
inc
or
dec
push
enter
jmp
pop
pop
push
push
test
lea
add
call
aas
mov
or
sbb
dec
xorl
les
add
dec
push
cmp
sub
jp
pop
mov
push
add
push
push
and
jne
jmp
jmp
add
xor
jne
jp
shrb
fnsave
sub
mov
push
or
dec
cmp
jb
jns
cwtl
push
daa
pop
pop
jns
je
rcrb
pop
jp
mov
jp
dec
gs
ficomps
and
add
pop
push
push
push
push
push
and
add
call
das
jmp
pop
jmp
mov
and
add
jmp
pop
fiadds
add
loope
call
push
push
xor
jne
jmp
mov
ja
xor
jne
jp
addr16
inc
mov
jo
jmp
xchg
adc
jns
xor
cmpl
xchg
ja
dec
rcl
dec
jbe
adc
inc
mov
fstpt
ljmp
sub
fs
pop
pop
push
clc
shl
add
call
jae
or
test
xchg
clc
add
jmp
adc
sbb
add
xchg
jmp
xchg
xor
and
jg
cmp
ficompl
clc
or
cmp
sub
mov
mov
jae
ror
test
add
pop
pop
mov
add
push
push
and
jne
jmp
mov
shlb
and
pop
sbb
sbb
stos
jo
jmp
fwait
outsb
xor
cmp
dec
jns
fadds
xchg
ret
jns
je
es
mul
inc
js
fsubrl
pop
outsb
mov
jp
dec
and
out
add
add
pop
push
push
push
and
jne
jmp
mov
loope
cmpsl
jae
add
jp
lock
jo
jmp
outsl
adc
inc
cmp
jb
jns
pcmpeqd
pushf
cmpl
inc
push
negb
jae
mov
jp
bound
dec
bound
movsb
and
add
add
fwait
out
scas
jb
out
jecxz
cmp
jmp
out
add
call
test
jmp
pop
jmp
jb
movb
add
pop
in
push
out
push
push
push
and
jne
jmp
sbb
jne
jp
dec
mov
jo
jmp
pop
cmc
les
jne
jne
add
jb
jns
mov
add
sbb
loope
dec
mov
in
call
rorl
movsb
and
add
add
push
push
test
add
add
call
inc
jbe
add
movl
jle
pop
push
call
push
push
test
add
call
push
lock
push
jle
inc
add
jmp
or
lods
push
jne
pop
das
jno
fdivr
mov
pop
pop
push
push
test
add
call
push
stos
aam
int3
pop
pop
insb
lds
jmp
rolb
sahf
int
outsl
xor
in
pop
mov
push
push
clc
sub
mov
nop
mov
jae
shl
sub
add
pop
pop
push
push
clc
sub
mov
mov
jae
ror
cmp
add
pop
pop
call
push
push
and
jne
jmp
sti
sbb
xchg
ljmp
mov
lds
cmpb
dec
push
adc
jb
jns
mov
adc
hlt
jns
je
mov
mov
mov
in
rorl
add
add
pop
add
push
push
xor
jne
jmp
ja
inc
adc
ds
jne
jp
cmpl
insl
jmp
push
xchg
jb
jns
int3
jo
jns
je
xchg
sbb
jns
idivb
pop
cmpsb
outsl
mov
fildl
add
movb
cmp
clc
add
call
cs
nop
mov
add
shl
cmp
add
jmp
push
pop
push
movsb
pop
div
clc
shl
xchg
jmp
pop
mov
addl
jmp
push
push
push
clc
shl
add
call
push
mov
xchg
clc
add
add
jmp
mov
dec
jb
sub
xchg
mov
xchg
jmp
test
std
test
testb
xchg
cmpb
push
call
pop
push
push
test
add
call
jle
push
adc
xchg
sti
pop
int
add
movb
sbb
jae
xor
jmp
add
mov
add
push
push
sub
jne
jmp
push
jge
les
leave
jne
jp
or
mov
jmp
push
and
out
jecxz
cmpsl
cltd
cltd
xchg
jns
je
decb
dec
ds
jp
sbb
iret
add
pop
mov
push
push
and
lea
add
call
in
jmp
pop
jmp
sub
add
jmp
in
call
loop
push
push
push
push
push
xor
add
call
ss
cmp
adc
adc
jmp
pop
mov
or
or
add
xor
pop
adc
add
push
push
test
lea
add
call
cld
enter
or
add
push
pop
jbe
inc
add
jmp
xchg
rol
xlat
lcall
pop
call
jp
pop
mov
push
push
test
add
call
inc
add
mov
cli
and
rolb
xchg
sahf
lcall
in
pop
add
push
push
push
clc
sbb
sar
mov
add
call
ret
xchg
xchg
clc
add
add
jmp
cmp
repnz
clc
xchg
jmp
add
addl
jmp
push
push
clc
add
call
or
mov
out
xchg
clc
add
jmp
loope
mov
mov
add
pop
add
add
pop
testl
je
stos
xor
fsubr
aaa
xor
add
jo
fldl
add
add
add
add
inc
std
mov
ficomps
and
clc
add
jmp
orl
shl
ror
xchg
jmp
scas
out
xor
lcall
sbb
push
push
and
jne
jmp
jmp
push
pushl
jp
add
stc
into
dec
jecxz
push
lret
jo
jmp
cs
push
inc
mov
into
loope
jb
jns
mov
dec
mov
push
je
mov
ja
repnz
push
mov
repz
jp
mov
cmp
and
add
add
push
push
and
add
call
dec
mov
arpl
jmp
pop
jmp
xlat
scas
inc
insl
mov
test
add
jmp
mov
xchg
sub
mov
xchg
ja
sbb
add
call
out
daa
jl
sbb
clc
add
jmp
mov
mov
jle
daa
pop
xor
shr
rol
xchg
jmp
ret
jmp
and
lret
jmp
mov
xor
push
push
clc
sub
sub
mov
mov
jae
rcr
xor
add
pop
pop
push
call
push
clc
add
call
xor
stos
mov
insb
and
clc
sbb
shr
add
jmp
mov
cmp
shlb
sbb
shl
xchg
jmp
je
fstl
xchg
addl
pop
mov
pop
push
push
xor
jne
jmp
loope
xchg
dec
mul
shll
xor
jne
jp
dec
int3
loopne
add
std
hlt
ljmp
cmp
insb
scas
movsl
lret
gs
jns
aad
add
fs
out
inc
aam
push
mov
jp
fistpl
sub
les
repnz
dec
jl
les
add
add
pop
pop
push
push
and
add
call
push
pushf
inc
mov
int
sbb
push
mov
es
pop
add
jmp
in
sbb
lret
fisttpll
inc
pop
jmp
pop
push
push
clc
add
call
and
leave
push
xchg
or
outsl
xchg
clc
add
shl
or
add
jmp
repz
xor
cli
enter
iret
add
add
mov
xchg
jmp
in
bound
ds
fwait
pop
addl
jmp
push
push
push
sub
add
call
adcl
push
movsl
ret
stos
aad
mov
rolb
push
mov
adc
loopne
push
push
push
sub
jne
jmp
jb
cmp
adc
movsb
mov
jp
outsb
stos
test
jmp
sahf
lea
ds
jb
jns
mov
and
jle
push
jns
je
addr16
repnz
jp
lods
sub
int3
movsl
enter
cld
lea
lea
pop
push
push
ret
push
push
sub
add
lea
call
test
mov
jmp
pop
jmp
lret
dec
add
jmp
popa
or
pop
imul
pop
push
mov
push
push
and
inc
add
call
clc
dec
jmp
pop
loop
mov
sbb
push
cli
or
cmp
add
jmp
jno
fsubrp
shr
add
pop
add
push
clc
shr
sub
mov
mov
jae
shl
add
add
pop
pop
push
push
xor
push
push
test
add
call
fcmovnb
adc
inc
and
xchg
repz
xor
add
jmp
mov
sarb
mov
push
push
and
add
call
push
inc
aas
jmp
pop
jmp
outsl
insl
out
repz
sub
ret
add
insl
jmp
pop
mov
push
push
test
add
call
cmc
std
mov
roll
push
aas
jmp
lahf
mov
mov
pop
mov
mov
push
push
test
lea
lea
call
in
out
and
jle
inc
add
jmp
sub
xchg
sub
out
mov
pop
mov
push
push
xor
jne
jmp
nop
bnd
int3
and
mov
jp
cmp
jmp
add
pop
jns
cli
lret
aam
jns
je
push
bound
mov
jp
adc
jnp
inc
lea
pop
mov
mov
mov
push
push
test
lea
lea
call
mov
inc
inc
je
inc
add
jmp
pop
int3
pop
stos
call
xor
jbe
pop
jmp
pushl
push
clc
sub
add
call
in
or
xchg
clc
adc
xor
add
jmp
loop
mov
push
add
clc
cmp
mov
xchg
jmp
popa
jne
xchg
lcall
add
shlb
popl
add
push
push
test
add
call
xor
jp
inc
add
jmp
dec
add
mov
bound
inc
mov
pop
pushl
popl
add
push
push
and
jne
jmp
das
adc
xor
jne
jp
jo
outsl
les
fdivl
and
out
and
jns
je
inc
cmc
pusha
mov
jp
xchg
push
inc
cld
scas
jae
sub
pop
pushl
push
push
and
inc
lea
call
cmc
ljmp
inc
jmp
pop
jmp
dec
mov
fidivrs
or
pusha
add
jmp
iret
jmp
pop
popl
add
pushl
push
push
sub
jne
jmp
mov
xor
jne
jp
cmp
add
loopne
mov
jo
jmp
orb
imul
jb
jns
push
mov
mov
sbb
dec
or
xlat
out
roll
pop
mov
jp
mov
dec
adc
les
popl
push
clc
cmp
add
call
lea
outsl
pop
movsb
addr16
xchg
clc
add
add
jmp
sub
push
and
jmp
or
out
and
mov
add
jns
lods
push
jmp
add
push
push
and
jne
jmp
hlt
in
mov
xor
jne
jp
mov
sub
push
or
notl
add
jecxz
mov
or
je
or
mov
mov
jp
dec
xor
outsb
xchg
ss
push
and
add
call
inc
jmp
pop
jmp
inc
sub
push
push
inc
add
jmp
out
push
push
jmp
pop
popl
add
push
clc
xor
mov
add
call
sub
inc
mov
add
jmp
sbb
clc
mov
xchg
jmp
add
add
dec
in
add
loopne
jge
add
push
push
test
lea
add
call
jns
pushf
mov
dec
je
inc
add
jmp
popf
mov
pop
push
pushl
push
clc
sub
mov
mov
jae
sar
sub
add
pop
pop
call
push
push
clc
or
add
ror
add
call
arpl
and
and
clc
mov
mov
add
jmp
mov
push
push
clc
xchg
jmp
pop
dec
insl
jle
add
push
cmp
aam
fcoml
push
xor
add
cmp
dec
xor
fildl
add
add
jmp
pop
jmp
movsl
lea
enter
add
pop
push
arpl
jmp
jecxz
cmpl
je
push
push
clc
mov
adc
ror
sub
mov
nop
mov
jae
rcr
xor
add
pop
pop
push
push
push
sub
inc
lea
call
push
xchg
divb
jmp
mov
add
ret
add
xchg
add
jmp
pop
call
add
cmpl
je
push
push
and
add
lea
call
andl
add
add
jmp
jge
push
jmp
jmp
pop
pusha
mov
shl
push
clc
cmp
add
call
das
ret
jecxz
je
add
add
jmp
cmp
dec
enter
clc
or
xchg
jmp
cs
imul
push
push
push
test
inc
lea
call
sbb
jle
inc
add
jmp
test
and
je
ficoml
fistl
jecxz
push
push
push
test
add
call
mov
inc
add
jmp
pop
ljmp
push
push
call
push
push
test
add
call
in
stos
movsl
into
pop
push
adc
sub
inc
add
jmp
or
movsl
mov
push
xchg
add
je
test
in
jp
pop
mov
push
push
test
add
call
fnstenv
inc
add
jmp
out
mov
pop
push
push
push
push
and
jne
jmp
push
jo
mov
sub
add
pushl
jp
pop
cwtl
pop
mov
outsb
xor
push
call
testl
jns
ror
dec
jns
je
sbb
lock
jp
in
int3
mov
stos
xchg
cmp
add
add
int
add
pushl
push
clc
shl
sub
mov
nop
mov
jae
shr
sub
add
pop
pop
call
push
clc
add
sub
mov
sub
mov
nop
mov
jae
ror
sbb
add
pop
pop
mov
push
push
sub
add
call
push
ret
ret
jmp
pop
jmp
mov
bound
add
jmp
pop
jmp
pop
sub
push
push
sub
inc
add
call
jg
dec
jl
sbb
xchg
into
fcmovu
sub
cmp
movb
xchg
aad
or
leave
xchg
add
inc
clc
push
push
xor
add
call
jb
jmp
pop
jmp
dec
pop
scas
cmpsl
cli
fiadds
lock
arpl
jmp
pop
add
push
push
test
add
call
inc
outsl
mov
iret
jbe
inc
add
jmp
rolb
movb
mov
sub
jle
pop
push
push
push
and
lea
add
call
test
or
jp
rorl
mov
rolb
add
or
loopne
push
push
clc
add
call
cmpb
imul
add
xchg
clc
add
jmp
pop
dec
cmp
xchg
jmp
xor
add
push
cmp
insl
jmp
pushl
call
push
push
clc
mov
sub
mov
nop
mov
jae
rcl
and
add
pop
pop
push
push
push
clc
mov
mov
sub
mov
nop
mov
jae
shl
cmp
add
pop
pop
call
push
push
sub
jne
jmp
adc
push
lret
xor
jne
jp
dec
fisttps
lea
jmp
rcrl
ss
jns
outsl
pop
ret
inc
jns
sahf
jns
je
or
shrb
dec
mov
jp
cmpsl
push
cmp
cmpsb
adc
or
les
popa
mov
add
push
clc
add
call
fwait
cmp
and
clc
ror
adc
add
jmp
pop
cmp
mov
shr
shr
xchg
jmp
pop
movsb
inc
adc
addl
jmp
pushl
push
push
test
inc
add
call
out
mov
mov
inc
add
jmp
insl
mov
aam
jbe
or
lret
mov
out
pushl
push
call
push
push
test
lea
lea
call
adcl
je
inc
add
jmp
mov
pop
add
push
clc
sub
add
add
call
ret
sti
add
jg
les
js
je
add
sbb
add
jmp
mov
add
xchg
jmp
rcll
mov
das
jle
add
xor
cmpb
decl
push
clc
add
call
push
fxch
and
clc
add
jmp
shlb
rolb
xchg
jmp
pop
insb
pushf
in
adc
sub
and
push
popf
jmp
mov
or
jne
pop
push
clc
mov
shl
adc
add
call
pop
xor
shl
or
and
clc
add
jmp
imul
sbb
xchg
jmp
repnz
fldenv
js
cmp
jmp
pop
leave
push
push
and
jne
jmp
xor
xor
xor
jne
jp
aaa
nop
adc
movsb
sub
jo
jmp
cmpsb
mov
xor
xor
cld
ret
faddp
lret
pcmpeqb
and
mov
pop
xor
inc
popa
add
pop
ret
push
push
clc
sbb
add
call
pusha
or
sbb
and
clc
add
jmp
cmp
popf
clc
xchg
jmp
jmp
inc
leave
mov
addl
jmp
mov
push
push
clc
adc
sub
mov
nop
mov
jae
ror
test
add
pop
pop
mov
mov
push
clc
add
call
push
xorl
je
add
ror
add
add
add
jmp
hlt
out
outsb
pop
sahf
clc
mov
xchg
jmp
cmp
int
addl
jmp
dec
add
push
push
test
add
call
mov
pop
mov
dec
add
add
jmp
imul
mov
mov
pop
not
and
pop
push
clc
add
mov
sub
mov
mov
jae
ror
sub
add
pop
pop
leave
ret
push
push
and
jne
jmp
mov
je
rcll
loop
xor
jne
jp
int
popf
test
mov
push
stc
clc
popf
jo
jmp
imulb
rol
or
jns
test
fnsave
jns
je
xor
jae
int
push
mov
jp
adc
pop
pop
aam
les
push
push
clc
sub
add
call
rolb
lea
and
and
xchg
clc
mov
add
jmp
push
xor
add
fildl
xchg
jmp
lea
call
mov
mov
push
push
test
inc
lea
call
lods
pop
pop
jle
xchg
mov
add
jmp
popa
jo
pushf
mov
pop
add
push
push
push
push
and
add
add
call
fstps
sbb
or
jmp
test
roll
add
jmp
pop
push
push
push
test
add
call
pop
popf
jmp
add
rorl
je
inc
add
jmp
lods
pop
stc
mov
jle
pop
mov
mov
add
push
clc
mov
mov
or
add
call
mov
addb
roll
add
jmp
inc
dec
sar
cmc
add
add
pop
add
add
push
mov
add
xor
cmp
jmp
mov
push
clc
mov
add
call
or
or
clc
or
rol
add
jmp
sbb
push
aaa
clc
xchg
jmp
adcb
pop
movsl
addl
jmp
test
je
add
push
clc
cmp
shr
add
call
mov
push
pop
xchg
clc
cmp
or
add
jmp
aas
dec
cs
clc
xchg
jmp
mov
addl
jmp
mov
push
push
and
inc
add
call
pop
and
jmp
pop
jmp
or
jmp
push
roll
jne
and
iret
jmp
pop
push
push
push
push
and
jne
jmp
mov
jle
mov
jne
jp
cmp
clc
adcb
seto
jmp
mov
pop
jb
jns
pusha
stos
dec
jns
je
test
jecxz
je
ja
testb
shlb
and
ja
push
into
inc
sbb
pop
mov
xor
pushl
push
push
xor
jne
jmp
scas
stos
cmp
mov
dec
pop
xor
jne
jp
leave
shlb
mov
jo
jmp
mov
jb
jns
je
mov
xor
mov
rorb
add
pop
call
call
push
push
and
add
call
dec
sub
sbb
push
arpl
mov
jno
add
jmp
xor
bound
jmp
pop
test
jne
push
push
push
sub
jne
jmp
jge
xor
xor
jne
jp
ret
int
in
popf
faddl
jmp
clc
jns
or
jns
aam
xchg
jns
je
and
jle
mov
jp
testl
fs
pop
push
mov
xor
push
push
test
inc
lea
call
data16
rcrb
movl
mov
pushf
xchg
call
call
push
push
and
add
call
xchg
or
xchg
push
and
jmp
pop
jmp
push
xor
bound
cmpsl
add
jmp
xchg
jmp
pop
call
mov
push
push
xor
add
call
jecxz
dec
xlat
je
inc
mov
fucomi
adc
jmp
and
in
filds
add
jmp
aad
cmp
in
movl
push
push
test
inc
add
call
iret
or
mov
jbe
inc
add
jmp
adc
das
stos
pop
in
sbb
push
or
mov
pop
mov
mov
test
jne
push
clc
shl
add
call
xor
cmp
adc
out
popf
push
mov
clc
or
add
jmp
lret
incl
add
add
xor
xchg
jmp
cld
xchg
addl
jmp
mov
push
push
test
inc
lea
call
sub
fstl
xchg
test
divb
inc
add
jmp
test
stos
mov
pop
add
push
push
xor
inc
add
call
add
inc
and
adc
jmp
push
stos
mov
add
jmp
mov
out
add
mov
push
push
and
add
call
movsl
add
iret
push
sbb
or
add
jmp
xchg
dec
jmp
pop
mov
push
push
test
lea
add
call
pop
sub
roll
xchg
fwait
nop
mov
std
mov
pop
add
add
test
je
push
push
test
add
call
outsl
imulb
or
pop
addr16
ja
sti
jl
add
movb
fs
frstor
daa
adc
push
out
test
jne
push
clc
mov
add
call
sub
out
popf
aaa
add
clc
add
jmp
mov
leave
add
add
add
popa
movsb
mov
addl
jmp
add
push
clc
sub
mov
mov
jae
rol
test
add
pop
pop
inc
push
clc
adc
mov
xor
sub
mov
mov
jae
shl
xor
add
pop
pop
inc
push
and
push
clc
sbb
cmp
mov
sub
mov
mov
jae
rcr
sbb
add
pop
pop
push
push
clc
sub
mov
nop
mov
jae
rol
adc
add
pop
pop
pushl
push
mov
push
clc
sub
mov
add
call
or
mov
cmpsb
inc
lret
push
jp
jl
add
or
add
jmp
pop
cmc
in
imul
jmp
inc
mov
push
addl
jmp
xor
pushl
call
push
clc
adc
add
call
jno
jns
pusha
add
mov
stos
push
lcall
out
add
jmp
and
mov
sbb
or
xchg
jmp
cmp
add
xor
sar
jmp
call
pop
push
clc
xor
add
call
xchg
add
cli
in
xchg
clc
add
jmp
inc
ss
scas
pop
fdivr
shr
xchg
jmp
mov
fimuls
dec
lea
jge
add
rorb
mov
add
test
jne
push
push
and
add
lea
call
and
xchg
xchg
lcall
pop
rorb
add
jmp
enter
ficoms
xor
push
push
sub
jne
jmp
xchg
inc
cmp
loopne
stos
mov
and
stos
repnz
rclb
and
clc
cmp
sbb
out
xchg
fprem
add
nop
sarb
je
pop
test
test
jp
xchg
xchg
enter
mov
add
add
jecxz
jg
push
test
lea
lea
call
ljmp
inc
add
jmp
inc
mov
pop
mov
push
clc
adc
mov
add
call
mov
mov
add
sub
adc
add
jmp
xchg
arpl
add
add
pop
add
add
stc
cli
sbb
cmp
cmp
jne
push
mov
push
clc
add
call
jno
add
pop
lcall
mov
add
add
jl
add
or
add
push
add
mov
and
stos
in
loopne
fmuls
loop
mov
push
clc
sub
mov
nop
mov
jae
rol
or
add
pop
pop
mov
mov
push
clc
mov
add
cmp
sub
mov
nop
mov
jae
shr
and
add
pop
pop
add
push
push
and
jne
jmp
dec
mov
sub
mov
jne
jp
mov
lock
insl
jmp
sahf
mov
cmpsb
mov
loop
add
push
mov
push
je
lods
pop
lock
call
or
inc
push
push
dec
cmp
add
lea
pop
mov
add
push
clc
add
add
add
call
aam
inc
xchg
clc
add
jmp
call
clc
sub
xchg
jmp
shl
mov
outsb
shlb
lahf
addl
jmp
pop
jmp
xor
push
clc
mov
add
call
std
dec
rcl
adc
sub
shl
xor
add
jmp
fstpl
stc
dec
fdivr
mov
ror
mov
xchg
jmp
cmp
outsl
negb
arpl
je
rcrb
or
add
call
fwait
js
mov
push
popl
or
add
or
add
jmp
mov
ljmp
add
or
add
ja
sahf
clc
cmpsb
sub
bound
and
test
push
jmp
pop
pop
leave
push
push
xor
jne
jmp
mov
jne
jp
stc
shlb
cmp
mov
jmp
out
and
cmp
in
les
xchg
insl
in
xor
je
inc
pusha
cs
jnp
mov
jp
lea
repz
inc
add
pop
ret
push
push
clc
add
call
lahf
repnz
jl
add
add
jmp
call
inc
fcmovnu
or
add
or
add
mov
mov
fbstp
in
sbb
add
or
rorl
add
push
test
inc
add
call
push
inc
outsl
lret
or
ret
add
jmp
cmp
cmp
addr16
dec
add
jle
pop
push
push
call
push
push
and
jne
jmp
xlat
loopne
xchg
ss
stos
adc
jp
cmpsb
loope
fidivs
sahf
cmp
jmp
mov
cmp
jecxz
lock
jns
arpl
dec
mov
jns
je
js
pop
arpl
sarb
push
inc
mov
je
xor
les
pop
pop
mov
sub
push
push
test
inc
lea
call
in
add
movl
pushl
pop
lea
push
push
sub
jne
jmp
gs
jge
in
jne
jp
stc
fs
out
in
inc
repz
jmp
pop
jmp
sbb
fidivl
jns
adc
mov
ss
jns
je
in
push
jp
iret
jle
je
test
cs
inc
add
pop
push
pushl
push
push
test
inc
lea
call
add
push
jmp
lcall
std
jbe
inc
add
jmp
fcomps
mov
iret
push
sbb
out
push
push
push
sub
lea
lea
call
cmp
mov
or
add
jmp
or
push
push
clc
add
call
xchg
jecxz
mov
add
add
jmp
repnz
jl
or
xchg
jmp
pop
je
jmp
add
imul
cmp
fucomi
popa
add
add
clc
add
push
and
add
call
push
aaa
fstl
je
jmp
pop
jmp
cmp
add
jmp
loopne
loopne
mov
push
idiv
call
push
arpl
loopne
add
add
add
add
or
push
pop
jmp
pop
shrb
dec
lock
jmp
jg
jno
lock
loopne
add
push
clc
add
call
pop
cmp
in
sbb
xchg
clc
sub
mov
add
jmp
mov
add
mov
aaa
add
mov
adc
xchg
jmp
sub
xor
cmp
jmp
mov
jmp
pop
push
push
sub
add
call
cmp
into
jmp
pop
jmp
movsl
sbb
int3
mov
add
mov
pop
leave
push
clc
or
add
add
call
mov
mov
xchg
clc
add
jmp
push
daa
jmp
scas
clc
or
or
xchg
jmp
idivl
jb
outsb
addl
jmp
ret
push
mov
push
clc
sar
mov
mov
add
call
in
sbb
jae
sub
xor
or
add
jmp
pushl
mov
stc
add
add
mov
xchg
jmp
movhps
xchg
lcall
push
cmp
jmp
call
push
push
xor
jne
jmp
cmp
ljmp
xor
jne
jp
xor
xchg
sub
outsb
je
jo
jmp
cs
jb
shll
loopne
movsb
dec
push
and
or
test
loop
nop
pop
repnz
inc
mov
xchg
jae
jp
mov
cmp
add
pop
mov
xor
push
clc
xor
sub
mov
nop
mov
jae
rcl
adc
add
pop
pop
push
push
call
push
push
and
jne
jmp
jg
fildl
jg
divb
jp
dec
roll
cmc
fidivs
imul
pop
das
mov
jns
rol
cli
icebp
jns
je
mov
mov
popf
xor
in
jmp
movsb
and
add
add
add
pop
pushl
push
push
sub
jne
jmp
addl
jp
js
xchg
mov
ja
xchg
jmp
mov
push
add
inc
xchg
addl
cmp
jns
mov
test
jns
je
das
mov
in
int
mov
jp
sbb
jg
push
es
les
pushl
push
push
and
jne
jmp
mov
mov
mov
jne
jp
testl
jo
jmp
push
xor
js
lods
movsb
mov
mov
jbe
or
sbb
cmp
mov
mov
jp
test
sbb
jne
push
clc
sub
mov
mov
jae
rcr
add
add
pop
pop
pushl
call
push
clc
add
cmp
sub
mov
mov
jae
shr
test
add
pop
pop
leave
push
push
and
jne
jmp
aas
popa
in
or
push
outsl
xor
jne
jp
in
dec
in
dec
jmp
sarb
jb
jns
pushf
hlt
push
outsb
inc
jns
je
sbb
rorb
icebp
xchg
clc
aaa
xor
adc
push
mov
push
push
xor
add
lea
call
push
xchg
adc
add
sbb
push
sub
pop
call
push
mov
push
clc
ror
add
call
lds
mov
cmp
pop
and
clc
cmp
mov
add
jmp
movsb
cwtl
les
clc
mov
mov
xchg
jmp
shll
out
addl
jmp
xor
push
push
push
push
xor
add
lea
call
xor
je
fcomps
jmp
pop
jmp
push
out
xor
add
jmp
mov
cmp
loopne
call
push
push
and
jne
jmp
dec
xchg
test
jp
xor
hlt
jne
cmp
jo
jmp
fcompl
scas
add
jns
mov
jns
je
push
adc
ss
loopne
xor
das
sbb
daa
add
pop
pop
pushl
pushl
push
push
xor
jne
jmp
je
mov
shrb
divb
jp
mov
pop
push
push
jo
jmp
xchg
out
jle
xor
mov
pop
repz
cltd
addr16
idivb
je
xchg
ja
hlt
rcrl
sarb
les
inc
out
loopne
lea
add
add
pushl
pushl
call
push
clc
mov
rcr
mov
add
call
daa
ret
mov
rclb
lds
add
jmp
cmc
and
pop
rorl
jnp
stc
ffree
clc
xchg
jmp
lds
sub
pusha
add
mov
jmp
leave
push
clc
rcr
shl
mov
add
call
pushf
mov
mov
pop
mov
add
mov
mov
add
jmp
out
pusha
ret
jp
clc
xchg
jmp
clc
adc
cmp
adc
push
clc
sub
mov
mov
jae
rcr
or
add
pop
pop
push
push
clc
mov
sub
mov
nop
mov
jae
ror
and
add
pop
pop
mov
push
clc
add
call
mov
and
clc
mov
mov
add
jmp
mov
lock
jo
pop
clc
ror
xchg
jmp
lock
inc
repnz
jmp
call
push
push
xor
add
call
sti
sub
mov
sbb
or
sub
imul
lds
jmp
add
ret
mov
in
mov
xor
push
clc
sbb
sub
mov
mov
jae
sar
sbb
add
pop
pop
push
push
call
push
clc
adc
sar
sub
mov
mov
jae
sar
or
add
pop
pop
pushl
pushl
pushl
push
push
xor
jne
jmp
push
cli
adc
mov
in
jne
jp
inc
fwait
adcb
into
xorb
sbb
sbbl
gs
je
fwait
add
ret
aam
push
aaa
adc
lahf
or
addl
add
call
leave
ret
push
push
xor
lea
add
call
cmpsb
mov
cmp
pop
jmp
pop
mov
or
add
push
jmp
pop
push
push
clc
sub
sbb
add
call
pop
jno
xorl
add
or
cmp
add
jmp
sub
inc
lret
outsb
pushf
mov
clc
mov
rcl
mov
xchg
jmp
cmpb
popl
cmp
jmp
mov
push
push
test
add
call
js
lret
jp
mov
add
ret
add
or
add
xorb
je
pop
add
push
mov
push
clc
sub
mov
nop
mov
jae
rol
add
add
pop
pop
mov
push
push
test
add
call
push
mov
pop
jp
inc
add
jmp
dec
rorl
sub
insb
pop
mov
je
pop
add
push
clc
add
call
xchg
fldcw
shrb
xchg
clc
add
jmp
movsl
cmpsb
lret
sbb
clc
xor
xchg
jmp
aam
jecxz
addl
jmp
push
push
push
xor
add
call
fiaddl
push
mov
jmp
pop
jmp
push
add
jmp
jmp
pop
push
lea
push
push
clc
or
add
call
xchg
testb
rol
and
fistps
add
add
shr
xchg
jmp
sbb
cld
out
cmp
push
addl
jmp
push
push
push
push
test
lea
lea
call
mov
mov
add
jmp
leave
mov
pop
pushl
call
pop
push
push
sub
jne
jmp
mov
aas
jae
mov
ljmp
sahf
mov
pop
mov
xchg
lock
jmp
stc
cs
fs
cmp
mov
lea
sbb
xchg
rorb
mov
and
add
add
push
push
test
add
call
fdivp
js
add
lds
inc
add
sub
lock
lcall
sub
je
pop
push
push
push
sub
jne
jmp
loop
mov
xor
jne
jp
sub
test
jo
jmp
sbb
jns
xor
lea
je
je
lret
nop
mov
sti
icebp
mov
jp
imul
lahf
rcll
movsb
and
add
add
push
push
push
xor
jne
jmp
or
test
iret
data16
xor
jne
jp
ja
mov
loopne
or
push
jo
jmp
ja
repz
subb
xlat
jns
sti
push
shr
inc
test
cmp
pop
cwtl
insl
jmp
outsl
adc
lret
mov
and
jle
rcr
cmpsl
add
pop
push
call
movw
push
push
and
jne
jmp
or
or
sub
jp
adc
loop
lret
dec
inc
mov
jo
jmp
jae
jl
mov
ja
jb
jns
mull
pop
sbb
jns
je
cmc
cmp
jp
pushf
int3
into
lret
das
lea
lea
pop
pop
leave
push
clc
adc
sub
mov
nop
mov
jae
ror
or
add
pop
pop
ret
push
push
clc
add
call
daa
les
jge
pop
and
clc
adc
add
jmp
or
aam
fwait
gs
out
clc
cmp
xchg
jmp
sbbb
addl
jmp
mov
push
clc
mov
or
add
call
stos
pop
push
push
aam
dec
and
clc
add
jmp
cwtl
nop
jecxz
add
clc
ror
xchg
jmp
in
adc
arpl
cmp
push
push
push
and
lea
lea
call
sub
push
pop
jmp
xchg
inc
les
xchg
push
popa
jmp
pop
push
push
push
and
jne
jmp
vzeroupper
stc
push
xor
jne
jp
dec
mov
hlt
scas
jb
jns
inc
pop
and
cmc
dec
movsb
push
call
inc
test
or
sarb
mov
mov
aas
push
push
dec
pusha
lea
add
pop
mov
push
clc
mov
cmp
add
add
call
sti
sub
inc
and
clc
sub
add
jmp
and
imul
add
add
or
xchg
jmp
sbb
in
into
ret
in
add
jp
sub
rorl
aas
dec
and
jne
jmp
push
rcrb
adc
xor
jne
jp
idivl
enter
jo
jmp
or
lods
fldcw
add
jb
jns
ds
mov
sbb
jns
je
pushf
lret
mov
jp
sub
fmuls
add
add
add
rclb
inc
mov
les
add
add
cmc
jmp
pop
jmp
push
mov
or
cmpsb
scas
dec
or
in
test
jbe
mov
mov
push
clc
sub
mov
mov
jae
sar
sbb
add
pop
pop
mov
push
push
test
lea
lea
call
add
lods
mov
add
rolb
xchg
mov
pop
add
add
push
clc
adc
adc
sub
mov
mov
jae
sar
and
add
pop
pop
add
cmp
jb
pop
push
clc
shl
add
shl
sub
mov
mov
jae
shl
xor
add
pop
pop
pop
push
push
and
add
call
enter
in
jmp
pop
jmp
stc
or
xchg
repz
mov
pop
leave
push
push
xor
jne
jmp
mov
jecxz
insl
push
cmpsl
or
shlb
and
out
int
sub
lret
in
inc
das
inc
xlat
jo
jmp
mov
pop
jne
add
mov
outsl
xlat
pop
jns
je
jle
shl
mov
jp
aam
mov
pop
ret
push
push
test
add
call
push
popa
ds
ret
dec
xchg
mov
dec
jle
inc
add
jmp
bound
sub
movsb
je
add
mov
pop
push
push
push
test
lea
add
call
and
cmpsb
fsubrs
jbe
inc
add
jmp
add
push
in
test
mov
or
sub
jbe
pop
mov
push
push
clc
add
call
scas
out
loopne
and
push
and
clc
or
add
jmp
and
mov
sub
sbb
sub
sar
xchg
jmp
jno
mov
ret
ds
fwait
addl
jmp
mov
push
push
xor
add
add
call
mov
jbe
dec
daa
mov
lahf
shr
sbb
pop
test
dec
mov
ret
or
jg
mulb
loop
add
mov
pop
push
push
xor
inc
lea
call
in
jmp
pop
jmp
into
xlat
repnz
outsl
push
cmp
add
pop
leave
push
clc
add
call
sbbb
pop
and
scas
idiv
xchg
clc
add
jmp
sahf
inc
rorb
ret
mov
clc
mov
xchg
jmp
dec
mov
pop
test
add
xchg
add
add
push
and
add
call
mov
pop
xor
loope
aam
push
add
jmp
jmp
out
push
jmp
pop
mov
push
push
push
clc
shl
rcl
add
add
call
push
mov
cli
flds
bnd
pop
and
clc
add
jmp
jno
mov
cmpsb
sub
xchg
jmp
notb
test
add
sub
cmp
jmp
mov
mov
push
push
xor
jne
jmp
sub
call
jne
jp
je
sbbl
push
aaa
inc
fidivs
jns
pop
rcr
jns
je
lods
inc
loopne
pushf
mov
jp
test
push
lea
lea
pop
mov
mov
push
push
and
lea
add
call
std
dec
xchg
sub
lret
push
adc
jne
mov
jmp
dec
push
inc
shld
loopne
jmp
push
push
test
add
call
jmp
ret
lret
shl
mov
xchg
dec
mov
add
rolb
jmp
push
xor
rorb
xor
je
pop
mov
push
clc
shl
sbb
sub
mov
mov
jae
rcr
xor
add
pop
pop
cmp
jne
mov
mov
push
push
test
add
call
jge
test
arpl
sbb
push
ss
je
inc
add
jmp
inc
icebp
push
into
inc
scas
popa
dec
decl
xchg
mov
pop
pop
pop
leave
push
clc
sub
sub
sub
mov
mov
jae
shr
xor
add
pop
pop
ret
push
push
clc
sar
sar
mov
add
call
pusha
aas
push
loopne
sub
in
dec
and
clc
adc
sbb
rcl
add
jmp
daa
test
cmp
add
add
or
add
addr16
jle
arpl
add
test
mov
push
clc
add
call
fcomps
mov
add
mov
add
jmp
sbb
adc
es
sbb
xchg
jmp
jge
subl
popf
cmp
jmp
add
push
clc
shr
mov
add
call
pop
mov
sub
int3
mov
lods
mov
add
add
add
jmp
nop
fistl
clc
mov
xchg
jmp
js
dec
dec
subl
cmp
fstl
push
test
lea
add
call
aas
push
push
lcall
mov
inc
add
jmp
repz
sbb
enter
xchg
out
mov
pop
push
push
push
and
add
lea
call
mov
jmp
lods
hlt
int
shll
fildl
adc
in
push
call
push
push
and
add
call
push
fwait
shll
jmp
pop
jmp
out
pop
aam
fsubs
lds
jne
xor
mov
xor
push
push
clc
sub
mov
mov
jae
rol
adc
add
pop
pop
push
push
clc
rcl
shl
mov
sub
mov
mov
jae
shl
or
add
pop
pop
call
mov
xor
push
clc
sub
mov
mov
jae
ror
sbb
add
pop
pop
mov
push
clc
shl
sub
mov
mov
jae
shl
add
add
pop
pop
test
je
or
push
clc
add
call
enter
xchg
clc
shl
adc
add
jmp
rorb
out
lahf
mov
add
add
add
xchg
cs
mov
add
gs
cmp
jmp
test
je
or
test
je
push
push
test
add
call
aam
gs
dec
stc
in
in
icebp
jp
inc
add
jmp
inc
dec
stos
rclb
jle
inc
aad
in
sub
jp
pop
or
push
push
sub
lea
add
call
sub
lds
jmp
pop
jmp
and
adc
add
mov
loop
cmp
jne
mov
push
push
test
add
call
jae
push
int3
iret
je
inc
add
jmp
add
mov
aaa
dec
sbb
pop
jmp
cmp
jne
mov
push
clc
adc
shl
sub
mov
nop
mov
jae
sar
sbb
add
pop
pop
jmp
push
clc
xor
add
call
in
arpl
add
xchg
clc
add
jmp
in
sub
add
dec
and
jmp
in
push
add
add
je
out
arpl
aad
clc
push
jne
push
push
test
inc
add
call
dec
mov
add
jmp
lods
mov
cmp
cs
mov
mov
pop
mov
push
push
test
lea
add
call
sub
les
cmc
push
cmpsb
lret
jp
inc
add
jmp
call
push
sub
xor
jbe
pop
jmp
cmp
jne
mov
push
clc
mov
cmp
or
sub
mov
mov
jae
shl
cmp
add
pop
pop
jmp
push
push
test
lea
add
call
div
outsl
sub
ret
add
add
dec
cltd
mov
pop
cmp
jne
mov
sub
push
push
and
lea
add
call
or
cld
pushf
cltd
adc
push
pop
jmp
cwtl
mov
add
jmp
enter
cli
stos
pop
xchg
repz
pop
lea
push
push
push
sub
jne
jmp
sub
jne
jp
addb
inc
jo
jmp
jmp
hlt
divl
or
inc
jb
jns
sbbl
je
cmp
mov
test
in
dec
cld
and
movsb
and
add
add
push
pushl
push
clc
shr
shr
add
sub
mov
nop
mov
jae
rcl
test
add
pop
pop
pushl
call
push
push
test
add
call
inc
mov
and
xor
add
ret
add
setne
mov
loopne
sarb
pop
add
push
push
sub
jne
jmp
add
cmpsl
adc
xor
jne
jp
and
mov
cltd
jo
jmp
and
popa
aam
enter
cmp
fcmovbe
pop
ret
scas
jns
je
mov
out
cwtl
ljmp
jnp
and
sbb
add
pop
pop
pop
pop
push
clc
cmp
or
add
call
xchg
cmp
js
add
push
xchg
clc
cmp
mov
add
jmp
stos
add
mov
lret
cmp
add
pop
add
add
mov
dec
into
jp
addl
jmp
leave
ret
push
push
and
add
add
call
add
sbb
rol
rolb
imul
out
arpl
mov
push
push
test
lea
add
call
stos
jle,pn
inc
add
jmp
roll
xchg
xor
ffreep
dec
push
mov
pop
push
push
push
test
add
call
push
test
mov
add
jmp
xchg
cmpsl
into
stc
outsl
push
push
push
clc
mov
mov
sub
mov
nop
mov
jae
shr
cmp
add
pop
pop
xor
mov
push
clc
mov
add
call
mov
dec
and
clc
add
jmp
jg
ret
movsb
test
pop
inc
clc
xchg
jmp
rolb
and
dec
addl
jmp
mov
push
push
and
add
call
sub
pop
jmp
addr16
inc
pop
lcall
sar
ror
cwtl
jno
jle
jecxz
rep
push
clc
shr
sbb
add
call
sahf
fsubs
imul
or
jo
inc
and
clc
add
add
jmp
bound
scas
out
imul
in
inc
and
jmp
sub
cmp
nop
jmp
push
add
mov
pop
cmp
rcrb
push
test
add
call
push
arpl
add
rolb
mov
pop
pop
pop
leave
push
push
and
add
add
call
xor
jmp
pop
jmp
mov
or
cs
jmp
je
mov
jecxz
aad
subl
add
aam
sbb
sar
shr
add
add
call
aam
insb
xchg
clc
mov
add
jmp
lds
mov
add
push
clc
mov
cmp
cmp
xchg
jmp
push
icebp
dec
inc
nop
addl
jmp
push
mov
push
clc
mov
shl
sub
mov
mov
jae
rcr
add
add
pop
pop
push
push
push
push
push
test
add
call
scas
mov
xor
inc
add
jmp
lret
jo
jp
mov
pop
call
push
push
xor
lea
add
call
jl
push
jmp
pop
jmp
pushf
sbb
lds
jmp
test
in
mov
xor
push
push
push
test
add
call
add
dec
js
xorl
add
jmp
adc
jp
pop
push
push
clc
shl
cmp
add
call
ret
jecxz
sub
jae
adc
clc
sub
sbb
adc
add
jmp
push
inc
pop
or
int
out
clc
add
mov
xchg
jmp
sti
lds
add
add
call
push
push
sub
add
add
call
hlt
pop
mov
add
jmp
pop
jmp
aas
add
pop
add
jmp
jl
shrl
hlt
lahf
outsb
scas
jmp
pop
mov
xor
push
clc
mov
sub
mov
nop
mov
jae
rcl
add
add
pop
pop
mov
add
push
push
sub
lea
lea
call
sbb
push
pop
jmp
gs
xchg
inc
add
mov
ret
add
inc
jmp
pop
add
push
clc
sub
mov
nop
mov
jae
rcr
adc
add
pop
pop
add
mov
push
push
sub
lea
lea
call
mov
pop
jmp
rol
inc
and
jmp
jnp
call
lock
jmp
pop
mov
add
push
push
push
test
lea
lea
call
fidivrs
inc
add
jmp
jb
xor
jp
pop
sub
push
clc
add
call
xor
jnp
ja
mov
xchg
clc
add
jmp
push
fimuls
adc
daa
sub
adc
clc
shl
ror
mov
xchg
jmp
sub
sbb
cmp
lea
push
push
push
test
add
call
loopne
sbb
dec
jge
add
movl
push
dec
mov
dec
push
js
sub
xchg
dec
mov
pop
push
push
push
push
and
add
add
call
mov
jmp
fbld
add
adc
loop
push
call
add
push
push
test
lea
lea
call
fwait
int
add
rolb
ficoml
sbb
pop
mov
push
push
xor
jne
jmp
sub
add
jp
push
mov
cmp
or
sbb
sbb
test
sub
subb
jns
je
cwtl
xchg
xchg
sahf
jge
dec
mov
in
jp
inc
xchg
out
ds
pop
lods
cmpsb
add
pop
add
push
push
and
add
call
add
cmpsb
xor
pop
dec
jmp
pop
jmp
or
add
shrl
jmp
pop
movswl
dec
push
clc
add
sub
mov
mov
jae
rol
sub
add
pop
pop
xor
mov
push
clc
sub
mov
mov
jae
shl
xor
add
pop
pop
mul
push
clc
xor
sbb
adc
sub
mov
nop
mov
jae
shl
and
add
pop
pop
pop
push
push
test
add
call
pop
imul
aad
testl
or
pop
mov
das
cmp
pop
cmp
je
add
push
clc
sar
mov
sub
mov
nop
mov
jae
ror
or
add
pop
pop
jmp
push
push
sub
jne
jmp
mov
bound
xor
jne
jp
pop
maskmovq
stos
pop
cmc
shll
jmp
and
dec
jb
jns
adc
jno
adc
xchg
jge
pop
jne
cli
mov
jp
out
mov
les
add
pop
pop
pop
pop
push
clc
sub
mov
mov
jae
shl
adc
add
pop
pop
leave
ret
push
push
test
add
call
cltd
cwtl
xchg
fsts
stc
je
repnz
jp
inc
add
jmp
cmc
or
leave
jle
pop
push
mov
push
push
push
and
jne
jmp
mov
jno
and
fnstenv
shlb
jp
add
mov
mov
sbb
movsl
testl
jns
inc
pop
jg
sbb
std
mov
mov
jp
test
cmp
int
daa
loop
cmp
add
add
pop
push
push
push
push
and
jne
jmp
xchg
lahf
and
xorl
jp
lds
jo
jmp
xchg
sbb
pop
jb
jns
jecxz
stos
lock
xchg
cmpsl
or
adc
fbstp
mov
jp
rolb
xchg
ds
lea
add
pop
push
mov
push
push
sub
lea
add
call
sbb
pop
and
xchg
jmp
pop
jmp
mov
cmp
xchg
add
jmp
aad
jmp
pop
mov
mov
push
clc
shl
add
call
mov
stos
test
push
and
clc
shl
cmp
add
jmp
or
xor
mov
shr
xchg
jmp
pop
push
sbb
test
jb
fcompp
cmp
jmp
mov
push
push
clc
or
add
call
adc
js
mov
add
jle
xchg
clc
ror
adc
rcr
add
jmp
fdivs
nop
dec
jg
add
clc
rcr
rcr
xchg
jmp
in
xor
cmp
jg
add
test
mov
jmp
mov
shr
mov
push
clc
mov
adc
sub
mov
nop
mov
jae
shr
adc
add
pop
pop
add
push
clc
add
call
add
out
cs
rcr
xchg
flds
xchg
clc
sub
add
jmp
insl
lret
mov
push
and
jmp
pop
js
add
repnz
and
loop
fcoms
mov
add
fs
call
out
in
sub
mov
pop
jmp
mov
lds
jmp
std
inc
sub
pop
shl
push
clc
mov
sub
mov
mov
jae
shr
sbb
add
pop
pop
mov
push
clc
sub
mov
mov
jae
ror
adc
add
pop
pop
add
push
push
xor
jne
jmp
icebp
ljmp
int3
fbstp
in
jne
jp
and
das
or
jo,pt
jmp
push
xchg
pop
inc
bound
fdivs
jns
ficoml
adc
out
mov
jp
mov
int
xchg
add
pop
xor
lea
xor
push
push
test
lea
add
call
es
arpl
cs
fwait
sbbb
inc
add
jmp
jb
dec
mov
pop
sub
mov
shr
push
push
and
jne
jmp
insb
stc
fldt
out
je
cmp
cmp
xor
jne
jp
mov
mov
scas
repz
daa
xor
stc
sbb
jo
mov
fbstp
jns
mov
in
dec
nop
jns
je
hlt
add
inc
sarl
sbb
aas
mov
jp
repz
xor
fstps
add
add
pop
mov
push
clc
sub
or
add
call
enter
cld
adc
mov
je
add
shl
mov
add
jmp
cmp
pop
clc
mov
or
ror
xchg
jmp
cmp
jp
leave
addl
jmp
add
mov
push
push
and
add
add
call
sub
pop
jmp
lods
cmp
stos
xlat
xor
cmpsb
add
jmp
das
cmpsl
sbb
pop
shl
push
push
sub
add
lea
call
pop
jmp
sbb
jmp
pop
jmp
outsb
add
mov
ret
or
into
sar
loop
mov
push
push
test
lea
lea
call
ret
jp
inc
add
jmp
pushf
cld
enter
scas
and
sbb
sub
pop
add
push
push
and
jne
jmp
sub
pop
shll
cmp
jp
fstl
dec
nop
xor
sti
push
lcall
mov
adc
xchg
dec
repnz
xchg
gs
jns
je
or
insb
aaa
mov
into
mov
jp
into
cmc
les
add
add
pop
xor
lea
push
push
and
jne
jmp
insl
jp
xor
jne
jp
jl
push
xchg
aam
or
jo
jmp
fcoml
mov
in
jo
in
cli
imul
in
in
xchg
mov
das
dec
xor
inc
sub
push
ljmp
pop
xor
sub
add
push
clc
rcl
mov
sub
mov
nop
mov
jae
rcl
add
add
pop
pop
pop
dec
jne
push
clc
sub
mov
mov
jae
shr
and
add
pop
pop
mov
pop
pop
push
push
and
inc
lea
call
enter
pop
jmp
mov
cmp
jnp
add
jmp
push
pushf
dec
cmp
jecxz
pop
pop
push
clc
add
call
fists
xchg
clc
rcr
mov
add
jmp
les
sbb
inc
aad
mov
xchg
jmp
or
jno
and
testb
push
jmp
leave
push
push
and
add
call
rorl
xor
in
cltd
adc
pop
jmp
pop
jmp
aam
push
call
rorb
push
fistpl
pop
out
sub
jmp
pop
ret
push
mov
push
push
test
add
call
adc
cltd
testb
jae
stc
je
inc
add
jmp
jge
rorl
mov
mov
pop
push
push
push
push
xor
jne
jmp
or
xor
jne
jp
mov
lret
inc
dec
repz
jmp
xchg
sbb
ret
cltd
jb
jns
or
xor
adc
jnp
outsl
dec
pop
ja
mov
jp
sub
add
add
pop
push
push
clc
cmp
sub
mov
mov
jae
rcl
xor
add
pop
pop
mov
push
push
sub
jne
jmp
pop
cmp
divb
jp
nop
jp
icebp
aam
jo
jmp
loopne
dec
gs
jns
inc
pushf
mov
je
and
in
int
mov
lock
jne
xor
inc
lea
pop
mov
shr
push
clc
add
call
jo
xchg
pushf
stc
jp
in
xchg
xchg
clc
or
add
jmp
hlt
sbb
clc
shl
sub
xor
xchg
jmp
in
cmp
add
addl
jmp
mov
mul
cmp
je
push
clc
xor
mov
sub
mov
mov
jae
rcr
or
add
pop
pop
add
push
push
test
add
add
call
and
fsubrs
test
inc
add
jmp
inc
cmp
cmp
enter
jle
pop
mov
mov
push
push
xor
jne
jmp
and
or
cli
rclb
js
and
fs
test
aad
sbb
jmp
lock
popl
mov
idivb
jb
jns
push
shrb
push
jns
je
cmpsb
sub
hlt
dec
stos
mov
jp
or
les
add
pop
mov
push
push
test
add
call
dec
scas
cmp
outsb
in
push
shrl
mov
or
je
inc
add
jmp
cmc
inc
clc
adc
inc
xchg
jmp
ljmp
jle
pop
pushl
push
push
test
add
lea
call
popa
cld
clc
aam
popa
sbb
xchg
push
sahf
and
add
add
roll
insl
js
loope
mov
stc
push
pop
mov
pop
pushl
push
push
test
add
call
pop
je
inc
add
jmp
mov
jbe
inc
cmp
outsb
mov
or
sub
jp
pop
pushl
pushl
push
push
test
lea
lea
call
dec
mov
xor
fcmovnb
arpl
xchg
fdivs
ret
add
add
icebp
pop
pushl
pushl
push
clc
shl
shl
sub
mov
mov
jae
ror
sub
add
pop
pop
call
push
push
and
add
add
call
fs
jmp
pop
jmp
cltd
add
jmp
and
out
xchg
dec
jmp
pop
mov
mov
push
push
sub
add
add
call
mov
cvttps2pi
imul
adc
xchg
imul
push
inc
test
sbb
stos
jmp
pop
sub
jne
push
clc
sbb
mov
cmp
add
call
dec
popa
sbb
xchg
clc
adc
ror
add
jmp
test
pushf
clc
sar
mov
xchg
jmp
push
or
and
outsl
ret
addl
jmp
pop
pop
pop
push
push
and
add
call
scas
outsb
mov
stos
call
jmp
pop
jmp
nop
mov
dec
adc
sub
ss
out
leave
push
clc
mov
ror
cmp
sub
mov
mov
jae
shl
cmp
add
pop
pop
ret
push
mov
push
push
and
jne
jmp
dec
adc
jns
mov
jp
sub
jo
jmp
or
inc
jns
xchg
sbb
neg
sbb
jns
je
adc
loopew
cmp
mov
jp
jnp
adc
sub
add
add
push
push
and
jne
jmp
inc
inc
dec
fbstp
cmp
jp
andl
dec
jmp
adc
jne
iret
jb
jns
fsubrs
inc
ds
je
and
out
aaa
mov
jp
sahf
pusha
xor
or
add
pop
mov
push
push
and
jne
jmp
push
loopne
jl
loop
xor
jne
jp
jbe
rol
cld
insl
aam
inc
movsb
sahf
iret
jo
jmp
or
add
into
lret
jns
lret
and
dec
mov
push
je
mov
shrb
jo
in
jp
outsb
fiaddl
dec
cmc
addb
push
push
and
jne
jmp
cltd
jae
push
loope
inc
mov
jne
jp
data16
jo
jmp
into
xor
mov
jb
jns
cwtl
push
clc
sbb
add
sbb
jnp
das
ds
mov
jp
xchg
mov
subb
cli
movsb
lahf
sti
add
add
pop
mov
xor
push
clc
mov
xor
sub
mov
nop
mov
jae
shl
and
add
pop
pop
mov
xor
rep
push
push
and
jne
jmp
testb
jne
jp
imul
jmp
lods
fsubrl
mov
ret
jb
jns
in
lock
sti
fwait
icebp
sti
fcomip
jns
je
dec
inc
adc
mov
jp
and
xor
repnz
jns
les
add
pop
popa
push
push
sub
jne
jmp
push
inc
xor
jne
jp
pop
dec
rcll
jb
popa
out
jo
jmp
push
pop
and
out
ror
stos
jb
jns
and
xor
fstpl
jns
je
or
add
jno
add
sbb
les
add
add
add
push
push
and
jne
jmp
inc
xchg
divb
jp
popa
inc
loope
jo
jmp
and
test
mov
sub
sub
je
mov
pop
sub
int
sarb
cmp
ret
push
clc
mov
sbb
add
call
sbb
sbb
push
and
clc
add
jmp
data16
push
push
mov
or
mov
xor
xchg
jmp
mov
pop
addl
jmp
mov
push
push
and
jne
jmp
gs
insl
dec
xor
jne
jp
sub
add
xlat
movsl
jbe
leave
lahf
jo
jmp
push
xor
jl
shr
jns,pt
cmc
add
enter
je
pop
out
popf
and
dec
call
fisttps
in
xor
add
add
push
decl
jne
push
clc
mov
cmp
sub
mov
mov
jae
shr
add
add
pop
pop
mov
push
push
and
lea
lea
call
xor
jmp
pop
jmp
aad
add
jmp
stc
sub
pushf
jmp
pop
movzbl
push
push
and
jne
jmp
push
xchg
mov
xor
jne
jp
pop
push
push
stc
mov
sub
sub
enter
mov
jmp
loope
xchg
movd
dec
sahf
enter
je
movsb
jmp
mov
jp
ja
or
add
mov
mov
push
clc
sbb
add
call
push
mov
in
and
pop
enter
std
xchg
clc
ror
adc
or
add
jmp
testl
mov
cmp
adc
shl
xchg
jmp
clc
or
xor
std
leave
mov
and
cmp
xchg
jmp
movl
mov
push
push
xor
add
call
dec
stos
in
stos
sarb
test
adc
add
fucomp
add
jmp
loop
call
ret
pop
add
push
clc
sub
mov
mov
jae
shr
test
add
pop
pop
and
push
clc
mov
sub
mov
sub
mov
nop
mov
jae
shl
add
add
pop
pop
mov
ret
push
push
and
add
call
or
inc
push
jmp
pop
jmp
or
hlt
sahf
sub
lods
ds
and
pop
push
xor
inc
push
push
sub
jne
jmp
pop
cmpb
leave
jne
jp
lods
dec
stos
lds
mov
or
lods
inc
xchg
jb
jns
inc
add
clc
mov
loopne
insl
inc
mov
jp
aas
and
call
push
push
test
add
call
cmpsb
fwait
push
jle
inc
add
jmp
cmp
loopne
fs
jae
inc
adc
inc
mov
pop
lea
push
push
test
inc
lea
call
out
je
aad
add
inc
add
jmp
xchg
pusha
jnp
dec
rcll
pop
xchg
mov
pop
call
test
jne
push
push
xor
jne
jmp
sub
js
pushl
jp
mov
out
xor
jmp
push
in
push
fistpll
jb
jns
clc
movsl
cli
call
adc
adc
mov
jp
mov
fbstp
adc
les
lea
pop
mov
push
push
and
inc
add
call
mov
jmp
mov
popa
aaa
adc
dec
mov
movl
mov
out
pop
ret
push
push
and
add
call
inc
pop
mov
pop
jmp
decb
fdivp
out
push
push
clc
shl
cmp
or
sub
mov
mov
jae
shl
and
add
pop
pop
mov
push
push
test
add
call
rep
mov
inc
ss
mov
add
ret
add
jmp
cli
jb
and
movsl
fstpt
pop
sub
mov
push
push
and
jne
jmp
rolb
dec
addb
cmpsl
xor
jne
jp
mov
mov
jbe
nop
jae
pop
jns
jnp
mov
movsl
sbb
insl
adc
fstpt
dec
or
xor
les
add
pop
mov
andl
push
clc
sub
mov
mov
jae
ror
or
add
pop
pop
push
mov
push
push
push
xor
jne
jmp
sub
jmp
daa
movsl
shrl
fsubrl
sub
or
mov
pusha
jmp
xchg
jmp
jb
jns
push
repz
jns
je
xor
and
fstpt
nop
jno
jne
sbb
les
insb
mov
and
add
call
test
jmp
pop
jmp
sub
pop
cwtl
jp
lds
jmp
ficoms
jmp
pop
and
mov
push
clc
cmp
sub
mov
nop
mov
jae
sar
xor
add
pop
pop
lea
inc
push
push
and
jne
jmp
test
jge
jae
rdtsc
shlb
jp
push
fs
xor
jo
jmp
movsb
jge
jb
jns
mov
mov
jns
je
jnp
sbb
dec
pcmpgtd
lahf
jmp
jp
mov
inc
lea
pop
push
push
push
xor
jne
jmp
pop
rcr
xor
jne
jp
jo
pop
sbb
out
inc
lcall
jo
jmp
mov
arpl
jb
jns
insl
mov
sbb
cmp
leave
sub
scas
mov
jp
sub
enter
pop
and
test
add
mov
mov
lea
push
clc
mov
shl
add
call
and
repnz
mov
add
mov
adc
add
jmp
pop
out
ror
sbb
repnz
adc
add
xchg
jmp
out
pushf
pusha
repz
mov
cmpsb
and
call
push
push
and
add
lea
call
je
stc
jmp
pop
jmp
jp
in
scas
xchg
adc
jmp
fcos
out
test
je
call
test
je
push
push
xor
add
call
xor
out
mov
and
or
mov
xchg
hlt
mov
add
aam
jmp
pop
call
push
push
xor
add
call
xchg
push
imul
add
or
dec
push
imul
je
push
push
push
xor
lea
lea
call
lods
call
jmp
dec
daa
pop
xchg
pop
je
in
add
jmp
jns
out
xor
pop
lea
push
push
xor
lea
lea
call
idivb
int
movsb
fsubr
sbb
adc
movsb
add
jmp
shll
push
ljmp
out
call
lea
push
push
test
add
call
pop
loop
add
movb
cmpsl
rorl
les
test
idivb
pop
dec
jne
mov
test
je
push
push
test
add
add
call
adc
mov
scas
les
add
lds
pop
outsl
push
js
or
pop
repnz
pop
mov
sub
mov
push
clc
xor
add
call
sub
xchg
clc
add
jmp
dec
int3
pop
jbe
stos
mov
adc
xchg
jmp
iret
and
test
mov
add
lock
jmp
mov
push
clc
add
call
push
mov
pop
addr16
test
clc
add
jmp
pop
adc
xchg
or
mov
clc
mov
shr
xchg
jmp
sbb
dec
or
addl
jmp
jmp
movb
incl
push
push
xor
add
lea
call
arpl
cmp
add
arpl
lock
jmp
pop
jmp
push
clc
sub
mov
nop
mov
jae
shl
or
add
pop
pop
mov
push
clc
sub
mov
mov
jae
shl
test
add
pop
pop
movzbl
incl
xor
push
clc
cmp
add
call
ret
jno
xchg
clc
add
jmp
lock
loope
pop
xor
mov
add
sbb
xchg
jmp
mov
jge
push
pop
jmp
inc
mov
and
push
push
test
add
call
add
sti
out
cmp
lds
and
in
jle
pop
inc
inc
shr
je
push
clc
sub
mov
mov
jae
rcr
xor
add
pop
pop
test
je
mov
push
push
sub
jne
jmp
cmp
repnz
xor
jne
jp
xorl
rdtsc
mov
pop
pop
dec
xchg
push
shrb
sub
inc
scas
je
inc
jns
je
fisubs
jno
es
sub
or
dec
inc
lea
pop
sub
mov
mov
push
push
xor
add
call
mov
jmp
pop
jmp
xchg
ret
mov
or
fwait
adc
sbbb
pop
incl
inc
mov
push
push
xor
jne
jmp
pop
dec
fistl
jp
in
dec
pop
push
inc
xor
scas
sub
xchg
jg
mov
loop
xchg
and
sbb
ljmp
pop
lret
mov
jp
push
dec
or
aas
xchg
xor
lea
lea
pop
dec
jne
push
clc
add
call
mov
out
mov
mov
xchg
clc
mov
add
jmp
sub
mov
clc
mov
xchg
jmp
sbb
add
jae
sbb
jmp
jmp
mov
jmp
push
push
xor
jne
jmp
push
jne
jp
and
or
nop
test
out
in
jo
jmp
xchg
sub
mov
pushf
adc
sbb
jns
je
and
pop
bound
stc
xchg
leave
jp
or
dec
out
fs
dec
add
pop
call
push
push
test
add
call
lret
xor
inc
add
jmp
jl
sub
jp
pop
test
jne
cmp
jne
push
clc
adc
sub
mov
mov
jae
ror
adc
add
pop
pop
lea
push
clc
sub
mov
mov
jae
shl
cmp
add
pop
pop
call
push
clc
sub
mov
mov
jae
shl
add
add
pop
pop
test
je
mov
sub
push
push
sub
lea
add
call
imul
pop
jmp
lock
rolb
mov
ret
add
fldpi
movsb
sbb
xor
addr16
pop
mov
mov
push
clc
shl
ror
add
call
in
inc
sbb
cmp
clc
rcr
add
jmp
rorb
test
mov
add
add
rol
xchg
jmp
cmp
add
inc
pop
pop
cmp
incl
push
push
and
lea
add
call
cmp
roll
jmp
pop
jmp
lock
or
xor
pop
ret
faddp
jmp
pop
inc
mov
dec
jne
push
clc
add
call
daa
daa
lods
cli
icebp
xchg
clc
add
jmp
and
in
adc
fadds
xchg
jmp
mov
addl
jmp
jmp
sub
push
clc
mov
cmp
sub
mov
nop
mov
jae
sar
add
add
pop
pop
jmp
dec
push
push
xor
jne
jmp
mov
xor
jne
jp
test
das
mov
cltd
movsb
jo
jmp
push
mov
sbb
sbb
xchg
mov
in
out
mov
in
mov
sarb
clc
leave
and
mov
movsb
and
add
add
dec
push
clc
or
add
call
pushf
inc
icebp
out
cmpsb
pop
sub
insb
and
clc
sub
add
jmp
mov
sar
mov
xchg
jmp
sahf
dec
test
mov
out
addl
jmp
mov
push
clc
mov
add
call
loop
ret
dec
xchg
or
or
mov
add
jmp
dec
shll
inc
pusha
out
xor
sar
xchg
jmp
inc
js
addl
jmp
movzbl
shl
add
push
push
sub
lea
lea
call
in
and
jmp
pop
jmp
andb
sbb
daa
jno
add
jmp
sti
std
mov
out
incl
push
clc
add
call
ficomps
or
subb
jl
add
mov
shr
add
add
jmp
js
cmp
jo
clc
xchg
jmp
push
or
mov
and
aam
dec
jmp
lea
mov
call
push
clc
sar
mov
add
call
inc
push
lods
mov
fucom
mov
xchg
clc
mov
mov
add
jmp
pushf
imul
add
push
add
add
divb
add
jle
cmp
jmp
cmp
jb
inc
push
push
sub
add
lea
call
rol
mov
jmp
pop
jmp
mov
xor
add
cmp
jb
push
push
test
add
call
gs
scas
std
jp
inc
add
jmp
sbb
mov
je
pop
inc
push
clc
or
mov
sub
mov
mov
jae
sar
test
add
pop
pop
cmp
jae
inc
inc
push
push
sub
jne
jmp
xchg
psrad
jg
xor
jne
jp
and
into
or
shlb
jmp
cmp
jb
jns
pop
push
mov
jns
je
mov
mov
ljmp
stos
jns
xchg
push
ss
inc
lea
pop
test
je
push
clc
sub
add
rcl
add
call
mov
or
jle
pop
and
clc
xor
shl
add
jmp
cmp
shrb
roll
rcl
xchg
jmp
dec
sub
xlat
push
imulb
addl
jmp
mov
push
clc
adc
sub
mov
nop
mov
jae
rcr
adc
add
pop
pop
sub
push
clc
rcl
sub
mov
mov
jae
rol
cmp
add
pop
pop
mov
mov
push
push
and
add
call
mov
out
outsl
test
jmp
or
add
mov
incl
push
clc
sub
sub
mov
add
call
insb
xlat
pop
inc
arpl
jae
dec
and
clc
sub
add
jmp
cmp
jo
shr
sar
xchg
jmp
rcr
cs
fldenv
test
adc
roll
out
pushl
add
add
iret
add
add
add
xchg
clc
add
jmp
sarb
pop
mov
xor
mov
xchg
jmp
addl
nop
push
jne
cmp
rorl
push
aas
aas
test
add
call
jne
jae
int
ret
pop
lret
inc
add
jmp
out
mov
pop
dec
jne
push
push
test
inc
lea
call
mov
fwait
mov
inc
add
jmp
add
xor
jle
pop
mov
xor
inc
push
push
and
add
call
pop
add
lret
xchg
outsl
jmp
pop
jmp
orb
jne
sbb
add
jmp
mov
jmp
add
mov
push
push
test
add
call
call
push
mov
lret
scas
cli
cmc
cmp
ljmp
add
or
jl
or
stos
mov
mov
sub
jbe
pop
mov
mov
push
push
test
add
call
mov
xchg
pop
insb
xor
je
inc
add
jmp
sub
xchg
sub
add
call
push
push
xor
lea
add
call
jae
mov
inc
ds
sbb
or
xorb
add
push
jmp
pop
incl
mov
xor
push
clc
adc
shl
sub
mov
nop
mov
jae
rcl
and
add
pop
pop
cmpl
je
mov
pop
push
push
and
add
add
call
iret
stos
or
jl
jmp
pop
jmp
imulb
add
jmp
rorb
push
clc
sub
mov
nop
mov
jae
ror
test
add
pop
pop
sub
pop
push
push
and
inc
add
call
outsl
cmp
jmp
roll
add
jmp
push
shrb
cmp
push
push
test
lea
add
call
jno
cwtl
sbb
add
rolb
sub
xor
jle
pop
ret
push
clc
add
call
xor
ja
xorb
clc
shl
adc
add
jmp
mov
ss
jl
pop
into
inc
jp
xchg
jmp
leave
shl
popf
mov
add
jg
mov
jmp
mov
mov
push
clc
mov
sub
mov
nop
mov
jae
rol
test
add
pop
pop
and
push
push
xor
jne
jmp
stos
push
divl
in
xor
jne
jp
filds
mov
int3
outsb
hlt
jo
jmp
ror
cmp
jb
jns
cld
andl
pcmpeqb
addr16
lret
mov
jp
pop
popa
inc
ljmp
pop
mov
push
clc
sub
mov
mov
jae
shl
and
add
pop
pop
jmp
sub
mov
push
push
test
inc
lea
call
jne
xor
je
inc
add
jmp
hlt
xchg
xchg
dec
cld
pop
in
test
mov
pop
cmp
jne
lea
push
push
and
jne
jmp
mov
pop
adc
push
xor
jne
jp
cmp
mov
scas
dec
sbb
pop
adc
lcall
xor
mov
jnp
push
je
int
pop
mov
jp
mov
add
add
pop
mov
mov
push
push
and
add
call
jo
test
minps
add
jmp
scas
fs
loope
incl
add
add
sub
mov
mov
jae
sar
add
add
pop
pop
cmp
je
xor
ret
push
clc
mov
sub
mov
mov
jae
rcl
sbb
add
pop
pop
push
push
push
test
add
call
push
push
push
outsb
js
xchg
fs
jbe
inc
add
jmp
xor
push
mov
pop
xor
mov
push
push
xor
jne
jmp
ja
mov
xor
jne
jp
cld
sbb
lods
ja
jb
jb
jns
cmpsl
pop
test
stc
or
je
test
dec
jbe
scas
push
dec
push
in
adc
add
lea
lea
pop
mov
push
push
test
add
add
call
icebp
insb
icebp
xor
roll
clc
and
jp
inc
add
jmp
adc
inc
pop
xorl
in
jp
pop
mov
push
clc
sub
mov
mov
jae
ror
sbb
add
pop
pop
lods
push
clc
add
mov
sub
mov
mov
jae
rol
add
add
pop
pop
mov
pop
push
push
xor
add
call
cwtl
sbb
jns
arpl
pop
jmp
pop
jmp
lods
inc
sub
or
add
nop
insb
pop
jmp
pop
ret
push
push
sub
lea
lea
call
dec
inc
outsb
pop
idivl
jmp
pop
jmp
push
pop
jmp
add
jmp
and
iret
or
ret
pop
push
push
clc
sub
mov
nop
mov
jae
shl
xor
add
pop
pop
mov
push
clc
mov
cmp
xor
add
call
data16
or
xchg
clc
sbb
cmp
add
jmp
testl
add
xchg
jmp
ja
xchg
mov
add
stos
cmp
sbb
aam
cld
push
clc
sar
rcl
sub
mov
nop
mov
jae
sar
xor
add
pop
pop
push
push
push
clc
adc
xor
sub
mov
mov
jae
shr
or
add
pop
pop
push
push
push
xor
jne
jmp
mov
xor
jne
jp
cmpsb
es
mov
imul
and
add
mov
shld
fistpl
stos
shr
or
les
jbe
insb
jns
je
in
dec
fists
jbe
lods
call
add
pop
mov
push
push
sub
add
call
jno
pusha
fimull
dec
dec
scas
mov
adc
add
add
jmp
ss
ficompl
jmp
pop
mov
push
push
test
add
call
mov
in
in
sub
xorb
roll
pop
pusha
das
dec
dec
and
les
pop
add
pushl
mov
push
push
xor
add
call
jl
imul
pop
jmp
pop
into
xor
or
push
lock
pop
add
add
push
clc
sub
adc
sub
mov
mov
jae
shr
and
add
pop
pop
mov
push
clc
adc
add
add
call
fsubrl
testl
ljmp
or
or
or
sub
xchg
jmp
nop
sarb
push
test
mov
addl
jmp
add
push
clc
rcr
mov
add
call
jmp
mov
xchg
clc
mov
xor
add
jmp
out
icebp
clc
sub
xchg
jmp
in
adc
out
pop
add
addl
jmp
xor
push
push
and
add
call
jg
jmp
pop
jmp
sahf
adc
inc
add
jmp
test
loop
lea
push
push
and
jne
jmp
pop
pop
mov
ljmp
jne
jp
pop
xchg
mov
sbb
sbb
inc
repnz
jb
jns
push
jp
jns
je
push
fisttpl
adc
jge
mov
out
push
sbb
add
lea
pop
mov
push
push
xor
jne
jmp
jnp
xor
divb
jp
push
lahf
cwtl
xor
jmp
or
mov
jb
jns
call
daa
rep
or
je
cmpb
mov
jp
in
lea
and
and
add
add
rorl
push
mov
sub
jne
jmp
add
and
test
xor
jne
jp
das
push
or
mov
push
sbb
in
pop
sub
insb
jbe
adc
jmp
mov
jp
ret
push
jle
aad
int3
rcrb
inc
lea
pop
xor
push
push
test
add
call
les
sub
icebp
sbb
ret
add
or
fsubrs
inc
xor
test
scas
jnp
sub
jbe
pop
rol
push
push
xor
jne
jmp
aad
rcll
jp
ljmp
insb
or
cltd
jo
jmp
mov
jns
mov
dec
sub
jns
je
adc
dec
add
leave
jp
js
jnp
mov
in
mov
add
add
lea
pop
xor
push
push
and
jne
jmp
sti
out
cmp
add
xchg
xor
jne
jp
rclb
popl
addr16
jo
jmp
jle
iret
adc
pop
pop
xchg
xchg
jb
jns
xchg
loop
es
mov
or
stos
mov
jp
in
mov
les
add
pop
inc
cmpb
jne
push
clc
sub
mov
nop
mov
jae
shl
cmp
add
pop
pop
cmp
je
inc
push
push
sub
jne
jmp
mov
push
mov
mov
pushl
jp
mov
jmp
cwtl
push
scas
pusha
jge
jns,pn
cld
mov
jo
push
je
sbb
lods
adc
mov
jp
push
fs
test
add
add
pop
cmp
jb
mov
add
push
push
test
add
call
in
testb
fdivrl
add
ret
add
jmp
pop
mov
xchg
mov
mov
pop
movzwl
mov
push
clc
sar
shl
add
call
push
sbb
dec
and
clc
add
mov
mov
add
jmp
shrb
clc
xchg
jmp
into
mov
and
cmp
and
push
clc
sub
mov
nop
mov
jae
shl
cmp
add
pop
pop
mov
push
clc
sub
sar
sub
add
call
lret
pop
xchg
clc
mov
add
jmp
sar
out
xchg
mov
add
add
shr
xchg
jmp
popf
add
repz
jmp
add
pop
cmp
jbe
push
push
test
add
call
mov
jnp
icebp
pop
jle
inc
add
jmp
sub
fstp
mov
xor
je
pop
cmp
jae
push
push
test
add
call
cwtl
cld
hlt
mov
jp
inc
add
jmp
jb
imul
ljmp
sub
mov
mov
jae
sar
xor
add
pop
pop
pushl
push
clc
sub
mov
nop
mov
jae
sar
add
add
pop
pop
push
push
push
test
lea
add
call
daa
cmc
imul
je
inc
add
jmp
sbb
xor
jp
pop
xorl
push
clc
shr
shr
add
call
clc
or
jl
add
or
sbb
shl
add
jmp
pop
cmpsl
push
sbb
push
in
int
clc
sub
xchg
jmp
test
out
shll
and
cmp
mov
or
push
clc
call
push
push
test
add
call
inc
inc
subl
and
xor
inc
add
jmp
imul
dec
lds
repz
pop
pop
pop
pop
push
push
and
lea
add
call
dec
shr
adc
or
icebp
loopne
add
jmp
pop
jmp
pop
leave
ret
call
popf
out
sarb
sahf
out
.byte
or
