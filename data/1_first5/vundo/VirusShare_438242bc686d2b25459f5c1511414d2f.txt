jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
adc
or
push
pushf
jne
push
stos
pop
cmpsb
push
add
or
add
add
add
add
add
cmp
inc
add
add
add
or
daa
add
add
sbb
sub
ltr
add
add
add
add
add
add
jg
daa
add
add
add
adc
add
add
stc
add
add
add
add
add
add
and
mov
add
test
arpl
jg
add
add
pop
add
add
add
sbb
into
add
add
push
add
pop
add
add
sbb
sbb
cmp
cmp
add
into
add
cmp
add
add
add
and
pop
add
add
add
push
add
add
sbb
adc
push
add
add
push
add
add
verr
imul
add
add
add
add
add
arpl
add
add
add
cmpsb
add
add
bound
loop
roll
add
lldt
call
add
add
add
add
add
ltr
add
add
add
add
add
add
add
add
add
verr
add
das
add
add
insl
add
add
call
add
add
pop
add
add
add
add
enter
loop
popa
add
add
add
add
verr
add
add
push
add
pop
add
jge
cmp
add
add
lock
pop
add
add
add
add
add
add
js
xor
sbb
adc
xchg
add
add
mov
mov
addr16
add
add
add
or
push
add
add
iret
add
add
add
add
add
add
add
add
pop
add
sbb
sbb
add
add
add
jne
push
add
add
add
add
mov
add
verr
add
add
mov
push
add
add
call
add
str
add
add
verr
add
popl
insl
add
add
add
add
add
insl
add
add
add
add
add
push
add
push
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
pop
add
xchg
cltd
add
add
cmp
push
add
add
add
add
add
add
cmp
dec
add
add
add
add
add
add
add
add
add
add
add
mov
ljmp
add
aaa
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
cltd
add
add
push
add
add
add
add
add
add
js
add
add
verr
scas
add
push
add
add
add
scas
add
add
add
add
into
add
add
mov
sbb
add
add
or
add
ltr
add
and
push
add
add
mov
add
add
and
pop
add
add
sbb
or
pop
add
add
adc
add
add
ja
sbb
jo
inc
dec
jecxz
test
adcb
das
loopne
xchg
push
call
orb
sub
loopne
loopne
int3
xor
pop
inc
cmp
cmp
sbb
and
push
mov
xchg
xchg
cmp
mov
ss
add
sbb
xorb
mov
mov
and
add
dec
pop
sub
iret
popf
lea
mov
xlat
sub
jbe
or
sub
stos
lods
jns
dec
stos
xchg
pop
jp
daa
add
or
stos
jmp
aad
call
mov
cmpsl
in
cli
sti
jb
jge
bound
mov
cld
test
sbb
inc
xor
fninit
ret
add
adc
inc
add
in
fstl
mov
rolb
cwtl
repz
jecxz
sti
dec
add
out
and
daa
add
mov
xchg
xor
test
inc
jno
fwait
leave
mov
cmp
or
test
add
xchg
dec
xrelease
mov
repnz
xor
mov
adc
in
add
test
and
cmp
std
ror
sbb
nop
xor
stos
and
ret
js
jno
xchg
push
popf
cmp
or
dec
popa
out
aam
xor
push
or
mov
xor
sbb
ja
test
xchg
loope
mov
and
mov
aam
enter
icebp
in
aaa
js
cltd
scas
add
fxch
fisttps
insl
jecxz
out
clc
mov
xor
icebp
nop
mov
mov
mov
test
dec
js
add
mov
imul
mov
xor
movsb
fnsave
cmp
mov
scas
fidivl
push
and
int3
std
inc
push
lret
adc
into
icebp
dec
fwait
pop
cmp
dec
scas
add
xchg
push
mov
xchg
scas
std
jmp
sti
xor
inc
pop
stos
mov
repnz
adcl
sub
pop
insl
scas
mov
mov
xchg
sub
mov
test
inc
dec
iret
arpl
lods
shrl
adc
orl
clc
inc
sbbb
mov
mov
aam
rolb
or
mov
adc
xchg
cmp
enter
cmp
icebp
adc
test
shlb
mov
insl
pop
pop
jg
mov
adc
add
shr
jge
fistpl
ret
sti
sbb
push
inc
les
jns
iret
and
pop
scas
push
push
lods
mov
imul
test
adc
lds
scas
movb
mov
mov
loopne
loopne
mov
addl
rolb
int3
and
and
sub
xchg
push
mov
roll
xchg
xor
sub
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
pushf
jl
insb
out
testb
inc
xchg
or
leave
push
in
fs
mov
ss
jl
insb
pop
testb
cmp
sbb
js
lock
in
add
mov
push
into
pop
scas
es
ss
gs
jne
inc
out
push
lahf
and
mov
iret
or
pop
fcoms
pop
jecxz
xor
sbb
cmp
in
xchg
decl
mov
fcomps
daa
arpl
cmc
jl
out
push
out
inc
dec
imul
popl
test
xor
insb
mov
pop
scas
outsl
xor
enter
mov
scas
push
inc
cld
test
xor
sbb
mov
xchg
push
mov
cmpl
mov
jb
adc
sub
addb
arpl
pushf
es
sub
cld
push
pop
mov
cmpsb
fs
add
jne
mov
into
or
adc
test
mov
mov
popf
pop
mov
and
xchg
push
dec
sahf
mov
imul
out
loope
xchg
cmp
sub
sbb
adc
jle
outsl
aad
movsb
push
mov
xchg
lea
cmp
dec
movsb
jo
imul
fcomps
test
inc
repz
loopne
adc
hlt
and
cmp
lret
ds
mov
and
lods
push
sti
ss
scas
jl
insb
cmpl
or
setbe
sbb
or
cld
push
in
data16
push
mov
ss
jl
insb
out
testb
sub
sbb
or
cld
push
in
data16
push
mov
ss
jl
jg
fistpl
shll
leave
test
js
cmp
fimull
std
cmc
dec
sub
xchg
cmp
pop
mov
loope
imul
dec
sbb
sbb
iret
sbbl
shrb
cmp
push
hlt
pop
push
cmp
sbb
gs
add
minps
icebp
jb
sub
imul
test
lret
clc
cs
inc
cs
pop
cmc
cmpsb
or
xchg
mov
imul
neg
test
shlb
stos
xor
shll
adc
push
pop
cmp
in
fiaddl
add
faddp
jbe
out
jns
adc
mov
shrb
mull
int
push
cmp
jmp
addr16
mov
xor
shl
jb
shrl
push
loope
fistpll
pusha
or
mov
sbb
add
movsl
pop
inc
lea
inc
mov
or
mov
inc
arpl
push
cmp
rcl
movsl
jbe
leave
push
jge
jle
out
movsl
movsl
adc
add
mov
lret
loopne
mov
push
dec
mov
lock
fwait
fwait
inc
jp
out
xchg
xchg
test
mov
imul
adc
lcall
mov
mov
das
fidivl
aad
and
insl
inc
jo
push
addr16
xor
arpl
pop
fistl
push
les
cmp
cld
jmp
pop
cld
adc
into
in
rcrl
jge
sti
jae
mov
mov
mov
mov
sbb
ja
rcrb
sub
pop
aas
sarb
es
push
imul
inc
inc
cmpsb
std
ss
pop
lea
pushf
aad
nop
jecxz
rorl
xorb
mov
jnp
add
xchg
ret
or
sub
arpl
mov
mov
in
sbb
cs
cmp
enter
fsubl
rorb
mov
jmp
lret
rcl
lods
stos
mov
push
aam
fimull
xor
push
ficoms
sub
jnp
inc
cld
data16
addl
outsb
sub
mov
ljmp
mov
popa
sti
jl
fsubl
mov
insb
xchg
imul
fisttpl
xor
adc
inc
negb
int
fs
rcrl
sbb
loop
sub
and
sub
out
pusha
mov
jo
cmp
mov
fimuls
add
incl
push
mov
push
add
inc
scas
daa
dec
cmp
repz
ret
popl
mov
and
pop
add
sub
test
add
push
mov
and
sub
xor
es
pop
bound
inc
movsb
inc
sahf
cmp
xor
dec
add
dec
add
and
int3
fcoml
fnstsw
add
arpl
daa
int
repz
and
and
jge
cmp
jbe
lcall
add
enter
add
cmpsl
xor
push
mov
pop
imul
mov
adc
iret
negb
imul
pop
pop
test
scas
cmp
xchg
xor
inc
fyl2xp1
inc
push
push
je
push
dec
add
mov
cmp
inc
sbb
aaa
jae
push
sahf
fsts
mov
cmc
mov
shrl
xor
sbb
sahf
insl
push
sarl
call
cwtl
fistl
add
rolb
fcoml
push
inc
mov
sbb
sub
mov
mov
or
outsb
adc
add
lahf
mov
or
push
xor
punpckhwd
dec
push
or
mov
mov
or
lods
cmpsb
outsl
aas
ss
sub
xor
lods
mov
xchg
js
movsl
std
mov
lock
cld
iret
and
or
test
into
add
cmp
jge
in
insb
cmc
mov
lcall
mov
daa
cs
mov
das
pop
mov
lahf
test
dec
shll
pop
fwait
addl
jle
cs
pop
gs
jle
test
push
xchg
scas
adc
fxch
inc
or
lret
popa
xchg
data16
jnp
sbb
push
cs
in
or
test
and
dec
ret
xchg
divb
dec
push
std
lods
xchg
jno
xchg
test
xor
fwait
incb
dec
sbb
in
pop
test
xorb
xor
lret
mov
sub
shrl
xor
jmp
mov
andb
mov
fsub
fldenv
xchg
sbbb
inc
mov
push
inc
das
test
push
inc
lahf
push
cmp
mov
test
ljmp
xor
push
or
ds
cmp
lcall
mov
lret
xor
das
hlt
popa
xchg
aam
jl
add
repz
stos
add
push
scas
xchg
mov
mov
mov
in
mov
mov
xlat
outsl
lcall
arpl
pextrw
sahf
add
or
aas
cli
dec
subb
cmp
adc
jns
push
mov
jg
subl
mov
sub
dec
cli
push
gs
pop
sbb
out
add
jg
stc
mov
lock
popf
push
pop
sbb
int3
push
in
leave
fwait
cmp
inc
jae
and
loopne
dec
leave
je
jp
jae
movsb
lods
ja
xchg
xchg
lods
ljmp
and
adc
or
pop
sub
sar
lret
adc
inc
push
test
aaa
jl
jge
mov
lods
xorb
int
cltd
and
jmp
mov
test
aas
jne
lods
push
dec
sti
loop
out
enter
loope
pop
or
cmc
add
in
add
jp
and
repz
in
adc
in
push
sbb
inc
dec
mov
xor
outsl
mov
popf
fwait
jo
mov
test
jnp
mov
stos
pusha
sbb
pop
ss
and
je
cmp
jmp
rcr
cltd
repz
addr16
fisubrl
sbb
mov
mov
imul
lahf
lods
dec
xchg
fstpt
mov
inc
lret
decb
sti
clc
sbb
jg
stos
arpl
jecxz
adc
movsb
fdivp
jns
jmp
sub
lret
add
jns
jbe
sub
cmp
push
jb
test
push
sub
jg
xor
ja
or
or
cmp
mov
inc
notl
je
lods
mov
sub
xchg
fadds
add
test
jmp
pop
in
mov
fistl
sbb
push
addr16
push
cli
mov
mov
das
cwtl
mov
je
sub
sub
inc
pop
sbb
in
bound
or
sbb
lods
xlat
mov
bound
test
xchg
add
jl
sub
popf
mov
jbe
fnsave
mov
add
int3
push
mov
shld
lods
xchg
xchg
push
jecxz
pop
xchg
and
push
dec
stos
add
fsubs
mov
or
addr16
mov
pop
xchg
push
mov
push
cmp
pusha
enter
push
dec
xchg
pop
sti
dec
rclb
add
xchg
push
sub
adc
stos
sbb
idiv
mov
sub
xchg
xchg
cs
sahf
push
push
enter
sbb
or
test
add
rorl
fildll
out
push
mov
jge
sbb
fisttpll
fiaddl
jmp
jo
scas
out
sbbl
out
out
or
jmp
pop
enter
fistps
mov
mov
jmp
movsl
lret
sub
mov
lea
mov
dec
test
imul
lods
pop
imul
sbb
cmpsl
pop
fadds
push
enter
add
aas
sbbl
dec
scas
mov
sub
mov
pop
mov
test
in
xor
mov
lds
mov
icebp
or
jge
ret
pop
movsl
icebp
aad
jbe
pop
mov
out
sub
repnz
sbb
add
mov
and
lods
test
out
fildl
leave
aas
std
bound
mov
push
jbe
lcall
aad
lods
push
popa
test
orl
mov
test
dec
add
jg
cmpsb
mov
dec
push
mov
outsb
notb
test
movsb
leave
or
cltd
xor
cs
add
or
and
mov
rcll
aas
in
inc
jbe
and
mov
or
pusha
notl
enter
inc
mov
xchg
test
ret
hlt
lcall
lock
xor
decb
cwtl
or
outsl
inc
xor
xor
nop
push
mov
bound
push
push
sub
pop
xor
jae
out
push
adc
or
les
pop
jae
add
inc
inc
cmp
sbb
cld
xchg
or
cmp
ds
jae
pop
mov
sahf
jno
mov
in
push
pop
pop
mov
add
sub
xor
cmpsb
lods
std
or
faddl
mov
inc
jmp
aad
jge
cmpsl
fsubs
inc
cltd
xor
fadds
sbb
outsb
fldt
jo
adc
aas
mov
nop
pop
xchg
dec
rcll
sbb
mov
xorl
sub
lret
inc
adc
or
es
sub
mov
clc
shll
mulb
lods
nop
pop
jmp
jno
fcmovbe
add
xor
jns
and
push
cli
aaa
mov
mov
mov
flds
mov
or
mov
nop
popa
int
imul
adc
inc
movsl
jle
stos
cmp
sub
jl
jmp
gs
mov
dec
add
jl
inc
pop
cmp
js
test
and
arpl
lds
addr16
cwtl
jl
sbb
sub
xor
rcrl
movsb
test
and
add
lret
xor
dec
lahf
or
pop
or
jnp
xor
and
dec
repnz
pop
popf
or
subb
jns
dec
loopne
sbb
clc
xchg
lret
adc
add
and
mov
ror
cli
andb
dec
push
ss
jge
sbb
popl
test
jl
mov
and
mov
push
cwtl
sub
adcl
add
ret
into
inc
sub
rcr
shlb
mov
sub
test
mov
sub
scas
sbb
jp
lods
hlt
ljmp
ljmp
ret
jge
jge
in
push
dec
xchg
fs
pop
mov
in
and
and
fs
dec
sbb
pop
cmp
mov
ja
inc
adc
pop
adc
cmp
lds
pop
fists
push
ja
hlt
clc
movsl
mov
scas
adc
das
push
les
je
push
mov
add
stos
fiadds
testl
dec
push
jp
cmp
adcb
int
repz
cwtl
sahf
dec
dec
jns
mov
dec
pop
dec
dec
mov
ret
sub
cmp
dec
shrb
sbb
faddl
push
mov
into
xchg
nop
ja
dec
arpl
adc
ja
cmp
out
add
roll
adc
cmp
cmpsb
insb
orl
inc
lea
mov
cs
inc
imul
jae
sbb
sbb
clc
mov
mov
inc
or
jne
sbb
inc
mov
cmp
jb
stos
add
roll
mov
fwait
cmpb
push
adc
ja
dec
and
adcb
rorb
in
out
push
mov
sbb
pop
daa
jb
test
add
repz
scas
dec
hlt
rorb
pop
dec
gs
imul
sub
imul
sbb
dec
popf
push
pop
xlat
icebp
das
rorb
in
or
cmp
sar
adc
mov
or
jo
adc
pop
loop
inc
sti
sub
loop
cli
and
xchg
xchg
in
ret
xchg
pushf
gs
movsb
shll
stc
mov
call
xor
cs
or
subl
cmp
imul
enter
mov
pop
aam
inc
leave
addr16
jge
push
inc
jne
ret
lds
pop
aad
fsubl
jns
andb
xor
and
or
inc
and
mov
popf
xchg
jo
add
dec
pop
popa
enter
cs
jae
sbb
cmp
jp
mov
rorb
popa
dec
cmc
xchg
mov
jl
lahf
ds
mov
lds
clc
jmp
hlt
mov
cld
mov
fsubrl
int3
pop
mov
cld
pop
cltd
lahf
push
jg
adc
mov
push
sbb
push
nop
push
aas
jmp
movsl
adc
adc
adc
loopne
mov
cwtd
aaa
pop
pop
nop
out
pop
rcl
subb
aaa
idivl
push
mov
rcrl
or
push
xchg
push
iret
and
mov
aad
mov
call
sbb
repz
in
mov
fbld
sbb
movsb
jmp
xchg
lods
lret
ret
mov
xchg
mov
aaa
enter
push
xor
sbb
mov
popl
repnz
lcall
jp
jno
mov
xchg
xchg
mov
ficoms
xor
or
inc
jbe
dec
movsl
mov
jg
sbb
repnz
fdivrl
mov
ljmp
data16
outsl
clc
scas
fwait
cmp
lods
jbe
mov
imul
iret
std
pop
jb
notb
rcrb
inc
addb
lret
xchg
scas
push
pop
cmc
mov
bound
ss
aam
inc
icebp
cmp
pop
cmc
cmp
aas
or
jns
dec
mov
mov
je
frstor
mov
pop
cmpsl
jnp
or
or
xchg
int
rorl
fsubr
cwtl
stos
adc
popf
or
xor
lret
jno
xchg
sahf
mov
popf
mov
add
xchg
sub
xor
loope
dec
sbb
lcall
inc
aaa
sub
xlat
jge
cmp
xchg
jno
aad
out
hlt
xlat
pop
popf
test
or
push
hlt
lcall
xor
push
jnp
pop
enter
xor
cld
lahf
or
inc
or
pop
sbb
adc
es
xor
scas
std
nop
dec
arpl
and
lret
subb
jbe
aaa
mov
cs
movsl
sahf
mov
xor
pop
mov
and
lea
xlat
popf
daa
inc
pop
mov
xchg
mov
pop
cmp
pop
push
fdivr
dec
ljmp
xor
ret
push
fcomi
ja
test
mov
add
ds
cmpsl
dec
or
inc
scas
mov
jg
clc
out
cs
push
test
jl
lfs
bound
loop
je
out
data16
jmp
psrld
stc
jecxz
push
notb
pop
loope
sub
mov
xlat
mov
arpl
dec
cwtl
lods
out
jae
jb
mov
outsb
inc
mov
je
test
lock
sbb
mov
testb
or
sub
ja
xchg
sahf
outsl
xchg
pop
cmp
shll
mov
loopne
add
adc
inc
filds
test
inc
mov
pop
fildll
gs
mov
sbb
dec
test
cmp
cmc
fmul
sbb
or
sbb
out
or
adc
aam
sub
fs
add
insl
mov
mov
inc
iret
in
inc
jg
lret
mov
fidivrs
push
test
rcll
clc
arpl
pop
add
jnp
cltd
cmpsb
push
je
jb
adc
sub
mov
mov
or
insl
hlt
xchg
push
inc
mov
sub
movsb
shlb
ret
dec
repz
cli
pop
mov
js
push
push
or
inc
les
push
repnz
xchg
out
push
stos
jp
mov
je
movsb
sbb
inc
mov
jecxz
jne
inc
or
jp
sbb
out
sti
shrl
sbb
mov
jecxz
out
shll
and
movsb
stc
xchg
inc
imul
sbb
dec
cmp
cld
scas
push
stos
sbb
sub
daa
xorb
sub
fildll
push
add
mov
test
or
push
je
add
mov
test
inc
inc
stos
sbb
jge
mov
mov
dec
les
adc
jp
xor
add
int3
nop
bound
gs
mov
adc
mov
add
xor
xchg
cmpsl
cmpsb
xlat
popl
aaa
cmp
out
insl
pop
jb
mov
hlt
int
pop
dec
dec
inc
dec
add
pushf
lahf
loopne
test
nop
lahf
xor
bound
into
jb
mov
pop
and
lret
clc
sbb
jb
mov
pop
jb
incl
push
fdivl
out
add
jecxz
scas
in
push
inc
mov
rol
pusha
vpaddb
cwtl
test
insb
arpl
dec
and
scas
and
and
mov
aad
leave
pop
xchg
pop
pushf
repz
aam
sbb
adc
adc
lret
or
inc
jb
addr16
test
mov
and
call
ljmp
sahf
orb
imul
dec
jnp
aad
fstps
leave
push
aam
sbb
xor
scas
push
fldt
jecxz
mov
jge
lds
test
sub
add
add
sub
xor
and
push
psrlq
aaa
mov
mov
jb
cmp
out
test
shlb
mov
ja
clc
jno
adc
and
push
outsb
fldz
pop
std
in
jns
inc
pushf
inc
pusha
jbe
lock
movsb
fisttpll
loope
lret
ds
cmp
pop
jo
jmp
pop
stos
mov
aaa
stos
adc
mov
mov
inc
es
mov
cmpsw
sbb
push
shll
js
jae
adc
inc
xchg
mov
aas
xchg
jns
test
ljmp
xor
popl
movb
out
clc
nop
push
lods
jmp
leave
push
fdiv
pop
add
mov
shrl
mov
pop
or
mov
enter
aam
mov
inc
cmc
into
mov
fs
sbb
push
jg
mov
in
shl
jno
mov
jp
pop
daa
test
scas
or
push
add
push
arpl
ljmp
mov
shlb
cli
sbb
mov
pop
adc
or
cmpsb
inc
fs
xor
ficomps
adc
dec
xchg
push
dec
jo
movsl
jmp
add
into
mov
sbb
lcall
add
jl
adc
mov
cld
imul
out
les
and
cmc
sbb
dec
loop
sub
mov
das
jns
dec
lret
mov
test
je
fistpl
sbb
push
cmp
inc
add
push
fdiv
dec
inc
cli
imul
int3
insb
stc
lret
inc
dec
sbb
cld
push
add
mov
inc
xchg
and
or
int3
xchg
xchg
std
shrl
cmpsb
inc
mov
add
inc
fadds
shlb
mov
jno
popa
and
stos
or
push
nop
or
add
sub
pop
cmpsl
outsb
lds
xchg
psrlw
outsl
fs
push
in
in
dec
jno
dec
cmpsb
addb
dec
dec
sub
aam
pop
fstpl
xchg
les
push
pop
pop
je
fisubl
and
and
push
popf
into
or
rcl
push
insl
add
lret
hlt
xor
in
push
dec
lret
shl
jb
push
mov
sahf
push
in
out
or
push
dec
inc
js
inc
mov
sbb
inc
fsubl
aad
adc
or
xor
inc
xor
dec
cli
mov
cmc
cmpsb
fucom
xchg
xchg
lahf
rorb
test
pop
imul
mov
push
jmp
out
pushf
popl
dec
loop
rolb
cmp
imul
pop
inc
pop
push
fxtract
cs
xchg
cmc
ljmp
mov
push
sti
adc
xor
fmulp
test
mov
hlt
lcall
lret
lea
scas
int3
addb
jg
xchg
and
xor
popa
push
je
aam
xchg
sahf
push
sbb
fisttps
dec
daa
cwtl
cli
gs
adc
mov
pop
je
cmp
aas
adc
jb
cmpsb
sbb
or
pop
cmpsb
out
out
xor
fwait
test
testl
loope
cmp
pusha
dec
sahf
and
push
sbb
out
lret
lods
std
inc
cld
ret
jg
ss
mov
push
jbe
jecxz
add
mov
sbb
cmp
pop
mov
and
cwtl
push
cwtl
inc
sbb
mov
stos
outsb
xchg
cmc
jbe
adc
sbb
out
xor
dec
jnp
nop
mov
fistpl
jp
xor
jbe
sub
sub
mov
pop
pop
jmp
or
cmc
sub
mov
stos
ljmp
or
cwtl
push
mov
lret
das
cmpsb
and
std
inc
xchg
je
jmp
js
testb
sub
sbb
or
cld
push
in
data16
push
mov
ss
jl
insb
out
testb
sub
sbb
or
cld
push
in
data16
push
mov
ss
jl
insb
out
testb
sub
sbb
or
cld
push
in
fdivl
push
mov
pop
mov
js
push
xchg
sub
sbb
int3
mov
fdivl
jno
sahf
rcr
jecxz
repz
cmp
sbb
je
mov
fwait
popf
test
int
fucomp
in
stc
std
or
cmp
imul
popf
test
mov
stc
std
or
cmp
imul
mov
leave
cltd
stos
mov
jle
push
sub
cmp
and
testb
call
inc
mov
add
mov
jno
mov
xchg
gs
ja
stc
adc
push
mov
fsts
in
test
testb
cmp
sub
fisttpl
enter
push
stc
inc
or
cmp
add
cmpsb
pop
xor
jns
jns
adc
dec
sub
cltd
int
and
out
cld
pop
jns
dec
lods
jge
mov
lds
xchg
pop
repnz
mov
shll
xor
push
in
stc
add
cmp
rclb
into
pushf
fmul
pop
push
shrl
cs
sti
call
sub
pop
pop
imul
popf
test
int
fucomp
in
stc
xchg
insb
or
outsl
sub
ss
sub
sub
hlt
cld
pushf
fcmove
cld
leave
dec
mov
mov
push
js
sub
adc
sub
cmp
sti
in
mov
faddl
dec
sbb
pop
pop
pop
or
pop
pop
imul
popf
test
int
fucomp
in
stc
std
or
cmp
imul
popf
test
int
fucomp
in
stc
std
or
inc
lcall
push
int3
inc
mov
adc
lahf
mov
xchg
mov
pushf
out
sbb
adc
push
fwait
xchg
test
es
lret
push
movsb
stos
std
std
fwait
je
in
mov
pushf
rol
sbb
push
jns
xlat
pop
repz
inc
pop
outsl
sti
mov
push
cmp
repz
pop
mull
sbb
in
dec
repnz
aaa
mov
fdivr
dec
and
adc
out
mov
jne
das
sar
mov
sub
or
out
scas
push
pop
sarl
stos
adc
add
adc
int3
scas
cmp
pusha
dec
inc
test
out
jns
ss
sbb
xchg
xchg
aam
fisttpll
jg
aam
inc
out
std
lahf
pop
in
sbb
lods
fwait
and
xchg
ljmp
mov
push
dec
scas
xchg
rcrb
xchg
mov
shr
dec
test
mov
adc
rcrl
imul
jbe
loop
dec
test
in
int
push
into
imul
pop
sbb
pop
int3
add
neg
cmc
and
adc
mov
dec
popf
into
push
push
pop
inc
aam
cmp
pusha
fistpl
adc
inc
rolb
aaa
rorb
jbe
jl
add
cmpsl
scas
movsb
mov
scas
mov
mov
push
cmp
dec
or
pop
jo
jge
loope
loopne
mov
and
stos
jge
xor
flds
mov
cmpsb
jecxz
imul
jb
dec
pop
cmp
push
cli
push
cmp
test
and
pop
cld
xabort
lret
mov
ret
jp
outsl
inc
adc
std
aas
repnz
movsb
clc
enter
xor
pop
sub
pushf
lea
hlt
clc
out
or
rorb
popa
in
pop
dec
ljmp
iret
mov
loop
sbb
data16
xchg
pop
jae
js
mov
pop
mov
mov
cmc
gs
scas
jmp
sbb
outsb
int3
mov
mov
shll
rorl
mov
clc
sbb
fnstcw
outsl
push
loopne
lock
or
subb
jle
jno
inc
ret
lahf
and
outsb
adc
add
mov
xchg
hlt
in
and
and
iret
and
sub
sub
divb
addr16
jb
adc
xor
shl
aaa
sbb
imulb
mov
and
addr16
pop
ljmp
push
mov
sbb
adc
push
jmp
stos
or
outsb
pushf
push
mov
pop
cmp
push
shr
mov
mov
xchg
mov
notl
not
outsl
mov
fcmovb
ja
jno
test
div
jl
daa
jge
push
cli
in
sub
push
mov
push
orl
lahf
add
iret
fwait
add
mov
jmp
dec
add
or
mov
scas
leave
sub
cmp
cmp
push
pushl
out
sub
mov
out
out
sub
jle
cmpsb
imul
push
push
mov
push
mov
sub
sbb
imul
mulb
js
ja
sbb
xor
adc
add
add
arpl
push
jp
or
mov
in
jg
cmp
test
adc
dec
adc
in
aam
leave
aam
sub
jg
jl
data16
test
push
cmpsl
mov
jl
movsb
std
push
out
enter
loope
pop
pop
sahf
das
mov
mov
iret
lea
lea
push
pop
data16
xchg
xchg
xchg
mov
add
pop
les
lods
inc
mov
cwtl
icebp
sbb
mov
repz
popa
shll
shll
inc
add
lock
sbb
sahf
iret
das
push
lods
add
call
ret
jae
out
push
in
std
mov
push
fstps
leave
mov
pop
imul
mov
sub
mov
sbb
movsl
mov
popf
or
inc
fs
push
mov
nop
stos
fdivrl
je
xor
xchg
aaa
pop
ss
inc
and
cli
mov
aas
out
sbb
aam
rcrb
pop
mov
and
arpl
bound
in
cmc
push
cmp
push
arpl
sub
mov
xchg
sub
loopne
in
cmp
mov
jnp
leave
fdivrl
mov
test
inc
dec
sub
imul
mov
mov
or
fldenv
or
mov
jb
scas
test
daa
add
jl
jae
fdivs
adc
in
fiadds
inc
aam
cld
imul
data16
jg
stos
pushf
mov
daa
mov
icebp
sbb
faddl
negl
and
aam
iret
dec
lret
enter
outsb
and
sub
fcmovnb
mov
loop
sarb
adc
out
xchg
push
jecxz
or
and
testl
add
pop
and
lods
push
jo
std
sbb
out
pop
scas
push
xor
xor
sbb
mov
outsb
loopne
push
fwait
inc
push
mov
nop
mov
mov
sbbb
dec
push
xchg
fstps
dec
add
jae
mov
push
mov
icebp
push
push
orl
mov
push
stc
inc
push
cmp
jnp
add
and
mov
das
outsl
mov
ljmp
sub
aaa
push
push
cmc
sub
or
jmp
data16
cmp
xor
mov
fdivrs
rcpps
pop
xchg
les
stc
loope
out
mov
jge
test
jo
frstor
mov
popa
fsts
js
popa
repnz
loopne
inc
sub
daa
jmp
jge
call
cmc
sbb
cmc
sbb
jbe
out
addl
mov
cmpsb
in
dec
mov
cltd
xchg
xor
pop
adc
and
mov
rcrl
cs
pop
jp
cmpsb
or
inc
xor
testl
lods
das
imul
popf
sub
shrb
or
or
xchg
das
push
dec
dec
mov
dec
cmpl
cmp
dec
mov
dec
cmp
fsub
loopne
sbb
leave
push
pop
gs
nop
leave
pop
inc
cmpsb
mov
sbb
popf
push
stos
sbbl
lods
repnz
shr
in
jb
sub
xor
inc
mov
pop
shl
cli
in
dec
cmp
jns
ret
jbe
bound
fsts
je
dec
adc
pushf
inc
adc
hlt
inc
dec
out
adc
push
mov
xchg
test
pop
es
scas
icebp
pop
shll
std
divl
lcall
cmp
nop
out
inc
repnz
push
push
mov
xchg
out
push
xor
lods
in
jo
movsb
cmpsb
leave
or
adc
sub
mov
ret
loopne
or
jecxz
scas
stos
and
sub
int3
pusha
sbb
or
mov
and
fs
ret
jb
test
subl
ja
pop
jnp
dec
xlat
xchg
jns
pop
fs
cld
fistpl
scas
lret
inc
xor
test
mov
cmp
movsl
aaa
or
out
mov
add
in
addb
jno
into
dec
dec
jmp
cld
dec
lret
add
add
out
mov
add
jl
inc
cmpsl
fyl2xp1
mov
lret
test
popa
pop
mov
loopne
or
dec
fisubl
clc
and
push
jg
loop
es
xor
fcoms
fwait
pusha
push
xchg
fimuls
cmp
inc
pop
push
bswap
addl
hlt
jmp
sbb
or
test
mov
mov
push
or
inc
mov
fdiv
jo
sbb
mov
sbb
imul
popa
aad
loope
out
out
mov
lahf
movsl
les
js
mov
cmc
lahf
push
pop
fxtract
cmp
lahf
mov
add
mov
cmp
inc
sbb
jno
inc
push
mov
int3
push
mov
xor
int
scas
and
mov
xor
mov
jb
ret
out
pop
dec
jns
inc
sbb
push
stos
sbb
rorl
inc
mov
gs
push
mov
push
or
les
int
mov
push
push
or
movsb
sbb
hlt
out
clc
outsb
inc
loope
mov
bound
dec
push
daa
dec
sub
mov
out
jp
out
bound
push
lret
mov
lahf
and
and
inc
mov
add
js
sbb
adc
cltd
ljmp
inc
cwtl
add
mov
cld
in
pop
jo
jge
sahf
dec
jecxz
test
sbb
insl
pop
inc
mov
cmp
jbe
and
pop
push
jnp
push
adc
add
mov
push
cmp
test
pop
subb
sbb
jne
leave
pop
ljmp
push
pop
outsl
aaa
push
jbe
sbb
xchg
in
mov
int
ds
inc
fcoml
inc
fsubs
ljmp
or
data16
push
popa
lret
mov
sub
mov
lods
insb
push
push
icebp
add
adc
mov
jo
stc
sub
inc
jg
movsb
or
push
nop
push
lret
insb
xchg
sbb
popf
sbb
mov
inc
mov
mov
lcall
xchg
sbb
mov
adc
repnz
cmp
sbb
outsl
loope
jmp
jge
xchg
jp
adc
loop
insb
lods
in
test
and
rcl
xor
int
jnp
nop
ret
push
into
xchg
mov
aas
xor
ja
mov
insb
push
outsb
pop
push
push
cwtl
scas
shll
and
mov
fimull
dec
loope
roll
popa
add
and
jae
dec
xchg
xchg
adc
jmp
iret
xchg
inc
gs
movsb
cmp
pop
adc
cmpsl
fstpt
xchg
dec
mov
push
add
fsubr
fsubl
pop
push
aaa
fwait
lcall
and
or
addr16
dec
cmp
fimuls
lret
stc
mov
pop
fistps
xchg
adc
push
pop
ljmp
ljmp
xchg
or
inc
xchg
pop
out
mov
pcmpeqw
adc
aam
or
adc
out
mov
cmpsb
mov
push
and
pop
inc
and
dec
lea
sahf
xchg
mov
je
mov
inc
sub
in
or
mov
sbb
cmpsl
popa
aam
mov
add
xchg
pusha
gs
sbb
and
or
inc
sbbl
jns
sub
pop
mov
mov
jecxz
es
jno
in
mov
xchg
dec
mov
push
es
add
jl
add
dec
sbb
jecxz
mov
cwtl
cmc
cmp
dec
out
mov
dec
daa
inc
jg
pop
cmp
inc
xchg
jne
jecxz
dec
push
and
xchg
xchg
fcomi
jp
cmpsl
push
inc
sub
pop
pop
dec
and
lds
mov
roll
insl
subb
fisubl
inc
pop
shlb
xchg
int3
fstps
pop
adc
in
jne
push
mov
adc
push
jno
bnd
stos
sbb
mov
xlat
aaa
xchg
std
mulb
fldl
add
fisttpll
adc
and
inc
xor
cmp
push
xchg
nop
ja
and
scas
mov
sbb
ror
and
sub
xchg
xchg
add
mov
push
outsl
imul
mov
dec
xchg
mov
das
mov
divl
jno
and
mov
xchg
jp
xchg
dec
inc
loop
int
sub
clc
insb
mov
inc
xor
scas
sub
scas
sbb
stc
out
loope
stos
cmc
mov
mov
push
or
lahf
test
push
sub
fstpl
cmpsb
jge
into
mov
cli
fcmovb
pop
ret
das
cld
ror
xlat
aaa
pop
shll
lcall
adc
adc
jns
jle
outsb
cmp
xchg
addl
cmp
or
xchg
lcall
out
cld
insb
out
ret
cli
pop
cmp
fwait
lret
insl
out
jg
out
popa
dec
in
shl
cmp
jge
dec
neg
sahf
pop
in
xchg
std
inc
xor
add
faddp
ja
inc
adc
sbb
cltd
pop
enter
add
cld
dec
aad
lcall
cld
jnp
out
jbe
sbb
push
jl
xchg
pop
xlat
dec
mov
lcall
cwtl
inc
jp
push
sub
jl
or
out
xchg
outsb
popf
dec
cwtl
fdivrs
inc
mov
inc
adc
into
adc
mov
and
ret
or
addr16
pop
scas
sub
push
inc
mov
lds
cmp
js
mov
lret
ljmp
xchg
mov
rcrl
cld
inc
into
jnp
sti
jp
push
inc
add
addr16
mov
lea
and
imul
mov
cltd
xchg
cmp
xchg
pop
adc
lock
jae
sbb
adc
pop
push
flds
jmp
arpl
inc
loopne
imul
mov
test
jp
adc
adc
mov
call
push
outsl
lods
push
push
adc
movsb
das
notl
fcomps
loop
xor
push
aaa
fwait
ret
in
lret
jnp
mov
push
inc
into
dec
cld
add
repz
hlt
fsubrl
push
ja
mov
mov
mov
int
mov
or
jne
cmovae
int3
dec
cmpsb
cld
pop
push
lods
addr16
push
mov
pop
add
inc
stos
mov
push
adc
adc
insl
lcall
pop
sarb
js
pop
mov
add
pop
lods
cli
add
sub
call
andb
dec
push
popa
mov
lea
mov
cwtl
into
jge
inc
shlb
push
dec
pop
mov
inc
xchg
or
dec
xchg
ret
sbb
test
jb
add
sbb
fstl
les
paddb
or
stos
pop
pop
and
push
sbb
or
pop
mov
jno
repnz
jae
cmpb
cltd
sub
imul
cmp
mov
mov
inc
in
and
cmp
stc
xor
or
xor
sbb
push
mov
jmp
xchg
xor
sarl
or
mov
aad
shr
mov
add
outsl
jbe
js
xor
andb
fneni(8087
dec
lods
cwtl
and
pop
xor
adc
dec
stos
sub
add
jecxz
jo
cwtl
mov
test
cmp
adc
lahf
dec
aam
into
push
cmpb
leave
sti
popa
scas
push
in
add
sub
ljmp
push
aam
jl
incb
ret
subl
incl
pop
lea
aad
cs
fcoms
imul
lea
push
or
sbb
subl
xor
sbb
enter
inc
dec
cmp
iret
fidivrs
xor
dec
jge
xchg
jne
test
xor
mov
pop
ds
lret
aad
dec
xor
nop
fistl
mov
push
sub
sti
xor
testl
mov
imul
jo
jnp
push
ret
xchg
pop
outsb
xchg
jmp
xor
mov
jne
mov
repnz
jl
in
out
movsl
pop
insb
or
inc
fiadds
xchg
or
inc
xchg
cmp
fildll
arpl
inc
mov
or
hlt
xchg
lods
or
or
sub
cmp
jle
rcrl
push
cmc
hlt
shlb
pop
cmovnp
push
cmpsl
xchg
add
push
and
cld
xchg
mov
xchg
out
xor
movb
pop
sbb
divl
mov
xorl
out
adc
push
cs
loope
aas
fidivrs
dec
imulb
test
mov
or
jg
jp
jle
push
scas
push
jmp
std
test
divb
xchg
lret
icebp
pusha
mov
or
call
mov
cmp
mov
sbb
ja
repnz
movsb
adc
jp
shlb
daa
int
cli
js
leave
sbb
dec
pop
stos
mov
or
in
rolb
nop
dec
mov
mov
sbb
shl
push
mov
and
adc
pop
aam
out
mov
fsub
cltd
dec
ret
loopne
int3
adc
aas
jmp
out
cmp
xorb
mov
cmp
mov
dec
pop
mov
fistps
setns
inc
adcb
out
push
inc
lahf
push
and
jae
out
mov
adc
arpl
sub
icebp
je
cmp
cwtl
cmc
lret
cwtl
nop
or
lahf
jp
ss
mov
and
ficoms
aaa
sub
push
xorl
into
sbbl
sti
adc
mov
pop
pand
pop
adc
lret
test
dec
rolb
cmp
nop
inc
xchg
repnz
test
repz
pop
adc
aaa
inc
lahf
add
into
out
inc
mov
jge
mov
pop
fwait
mov
dec
mov
dec
and
mov
ss
or
mov
adc
outsb
insl
mov
movsl
cltd
daa
sbb
adc
cmpsl
xchg
push
add
push
and
xchg
out
push
scas
xor
push
pop
jge
dec
cwtl
pop
in
add
cwtl
gs
xchg
mov
fists
push
into
addl
dec
sub
lret
cltd
cmp
push
mov
imul
cmp
mov
movsl
fst
rorb
lds
aas
loop
mov
incl
push
mov
pop
push
pusha
test
in
les
sub
insl
fisubs
pop
xlat
push
negb
push
mov
int
fsubrs
fildl
push
out
sbb
cltd
sahf
jp
adc
xchg
mov
roll
loopne
push
jo
and
mov
push
scas
mov
adc
notb
sbb
add
add
push
cmpb
mov
xor
int3
sub
inc
jge
xchg
test
push
push
rolb
sbb
and
push
xchg
insl
xor
mov
fstpl
cld
push
adc
jb
xor
test
and
add
mov
jno
cmp
insl
movsb
and
mov
cwtl
mov
mov
div
dec
mov
dec
adc
scas
jmp
inc
mov
push
mov
arpl
sti
pop
dec
aas
sbb
sub
dec
cmp
xchg
fldz
xor
pop
shrl
push
mov
ffreep
cmpsb
out
add
outsb
cmp
roll
xchg
test
lea
sbb
jecxz
adc
js
addr16
mov
mov
aaa
nop
cmpsb
push
mov
stos
cmp
or
push
out
out
cmp
cltd
pop
mov
repz
xor
jle
xor
test
ljmp
addr16
call
loop
and
cmp
ret
es
xchg
push
sbb
lret
pop
jae
imul
cs
and
mov
pop
das
int3
dec
les
data16
jecxz
mov
push
or
rclb
rol
cmp
jecxz
divl
cs
xchg
loopne
xor
cmp
sub
cmp
bound
loop
push
in
stos
out
in
inc
mov
dec
pop
mov
mov
or
addr16
test
cmp
movsb
sbb
loope
pop
orl
push
ror
push
cmpsl
xchg
lods
aaa
popf
out
stos
mov
mov
into
pop
lcall
mov
outsl
mov
dec
cmc
push
sbb
test
xchg
dec
repz
jnp
mov
rcr
jmp
xchg
inc
mov
pusha
adc
pusha
aaa
xor
and
jmp
mov
xor
fimuls
aaa
ret
outsb
fisubrs
push
or
sti
mov
stos
dec
and
and
mov
frstor
pushf
push
ds
divl
adc
cli
fdivp
ror
test
mov
cmp
pop
sub
or
popf
sbb
js
xor
int3
push
fldenv
leave
add
sbb
pop
bound
shrl
ljmp
jmp
pop
mov
fnstcw
int3
frndint
cmp
mov
std
fsub
aad
jbe
jle
sar
jbe
aas
mov
sub
mov
pop
add
xor
cmpsb
sub
xchg
cli
jmp
je
sbb
add
fwait
jmp
mov
iret
icebp
mov
dec
adc
addr16
shrb
mov
fistpl
cltd
mov
insl
aas
mov
fisubrl
and
add
xchg
loopne
adc
pop
push
cmp
mov
jp
pushf
push
sti
jge
shll
mov
jns
ja
xchg
push
int
add
ja
sbb
dec
dec
inc
cmc
sahf
jg
or
das
lods
das
add
and
sbb
dec
dec
pop
pop
imul
popf
test
int
fucomp
in
stc
std
or
cmp
imul
popf
test
int
fucomp
in
stc
std
or
cmp
imul
popf
test
int
fucomp
in
stc
std
or
cmp
jmp
lea
add
push
and
adc
add
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
imul
xchg
testl
movsb
mov
sub
push
fadds
test
mov
inc
or
js
and
pop
xchg
idivb
out
sbb
test
adc
inc
shlb
addb
sbb
mov
fildl
ret
xor
cmp
xor
xor
cli
xor
dec
lds
jecxz
dec
cmp
rcl
xor
scas
mov
ficoml
mov
addb
or
out
imul
mov
dec
jmp
in
mov
addr16
xchg
cmpsb
cmp
inc
loope
jns
add
clc
daa
fstl
fdivr
mov
lods
xorl
ficomps
es
shlb
adcl
xchg
jbe
pop
push
jge
or
leave
jnp
enter
in
and
xchg
cmpsb
xchg
out
in
dec
sub
insl
negl
cld
and
sub
and
push
fwait
mov
dec
xchg
pop
xchg
testb
mov
es
jbe
mov
add
mov
fistpll
and
inc
mov
xchg
jl
sbb
lods
inc
mov
and
and
and
fidivrs
in
mov
mov
push
stos
push
enter
rcll
xlat
lock
fsts
add
adc
sub
or
jnp
cmp
or
sbb
call
push
fadds
test
mov
inc
push
xchg
pop
xchg
idivb
out
sbb
call
push
fadds
test
mov
inc
push
stc
cwtl
inc
out
push
dec
sub
stos
pop
jno
loop
add
inc
stc
mov
sbb
in
inc
pop
sub
insl
and
test
out
into
je
je
loope
icebp
sbb
jmp
hlt
push
or
ss
out
xchg
sbb
cltd
xchg
xchg
pop
lea
push
or
dec
sub
sahf
add
sahf
loopne
dec
ds
cmpsb
gs
mov
lahf
pushf
inc
fnstcw
inc
insb
pusha
out
mov
repz
ret
push
imul
dec
push
je
jne
mov
fists
jae
imul
mov
cmp
push
mov
test
push
xorl
int
loopne
mov
mov
scas
sub
in
call
jle
pop
mov
and
pop
adc
and
push
enter
aam
mov
xchg
add
fwait
mov
rcrl
fidivs
and
sub
dec
jl
or
arpl
sub
pusha
or
cmp
cld
sub
sbb
mov
xor
xchg
xor
int
or
dec
out
outsl
imul
push
mov
loope
scas
sbb
xor
dec
mov
jae
xor
bound
dec
jle
mov
data16
in
push
add
inc
popa
pop
out
push
sti
movsl
ss
fs
xor
shlb
pop
ficoml
or
adc
mov
lock
push
popf
jne
jg
stos
xor
push
adc
je
mov
fwait
add
mov
rolb
mov
ret
pop
mov
or
dec
call
iret
cltd
lret
repnz
jle
loop
mov
dec
scas
mov
xor
cwtl
cmc
popf
jno
xor
push
in
cmpsb
scas
repz
pushf
nop
je
jnp
aaa
mov
mov
outsl
and
push
push
mov
add
add
and
xchg
ljmp
movsb
and
xor
xchg
cmc
inc
cmp
add
push
push
sub
cmpsl
xor
inc
imul
mov
push
js
nop
inc
inc
pop
fs
mov
out
jg
out
cmp
mov
xchg
sub
outsl
jne
mov
push
mov
lea
sub
iret
js
xor
xor
loopne
and
sbb
cmp
sub
jge
in
mov
movsl
pop
add
mov
pop
dec
lea
mov
jno
mov
scas
xorb
jmp
pop
xchg
sbb
adc
lret
push
cmp
lret
popa
jl
mov
sar
adc
test
sub
loope
popa
xlat
std
mov
inc
je
in
sbb
test
lock
sahf
sarb
bound
in
mov
jo
lea
pop
pusha
hlt
int
xor
cmp
jp
cmpl
cmpl
outsl
mov
out
mov
rcl
sub
test
in
inc
insl
ds
add
sbb
sbb
call
loopne
jnp
mov
cwtl
inc
sub
gs
dec
loope
gs
cwtl
into
ror
inc
jecxz
andl
jecxz
jb
jmp
retw
rcl
pop
push
cli
mov
and
xor
mov
jns
mov
shll
hlt
sahf
or
in
sbb
ds
mov
stos
imul
xor
ljmp
and
or
pop
pusha
test
dec
jmp
or
sub
cmp
pop
push
cld
mov
rolb
ficomps
push
cmpsl
cmpsl
inc
jl
jle
jno
add
pop
fld
or
xor
sarb
je
imul
sbb
xchg
in
or
push
inc
rcl
adc
xchg
mov
mov
outsb
iret
mov
ffreep
test
leave
fdivrl
loope
test
pop
clc
pop
lret
mov
movsl
jmp
mov
jbe
insb
popf
push
and
dec
adc
push
out
mov
and
fst
scas
arpl
lret
addr16
push
mov
or
add
arpl
xchg
sbb
lds
push
enter
adc
dec
pop
cmpsl
roll
sub
mov
out
adc
cmp
jns
mov
adcb
fstpt
push
iret
adc
insb
cmp
cmc
js
int3
cmp
inc
inc
jl
enter
inc
rclb
jne
das
out
call
sahf
xchg
subb
mov
inc
sub
aam
ja
arpl
stc
dec
inc
cmp
inc
mov
jl
in
cltd
inc
lea
sub
or
lret
mov
add
aaa
iret
mov
ss
stos
daa
daa
sbb
jbe
xor
push
jo
ret
test
lret
js
out
mov
or
mov
cmpsb
jl
or
adc
pop
mov
add
imul
push
fnstsw
xchg
movsb
add
fbld
sub
push
lock
pop
push
sarb
ficomps
xchg
fs
mov
push
xchg
cmc
repnz
push
pop
xchg
fldenv
loop
sbb
inc
loop
mov
cmp
sahf
idivb
sub
popa
or
dec
mov
hlt
fnstsw
push
addl
push
ret
cmpsb
push
cmp
insb
push
mov
pop
xor
cmp
add
subps
loope
lds
xor
icebp
mov
std
cli
ret
ret
adc
std
push
mov
inc
mov
outsb
and
push
lods
add
lods
dec
mov
andps
mov
lds
gs
push
int
addb
mov
out
subl
fwait
lea
fnstcw
mov
pop
pop
stc
les
clc
and
inc
std
fldenv
push
test
fbld
nop
xchg
pushf
xchg
aas
inc
cmp
mov
adc
pop
sub
fildll
stc
jg
cltd
dec
lahf
je
sub
aaa
js
xchg
dec
sub
pop
out
cmc
enter
and
xchg
cli
and
addr16
sub
and
mov
jl
das
push
iret
mov
mov
shrl
ficoms
mov
stos
cmp
int3
cli
xchg
inc
dec
rclb
adc
mov
inc
das
jno
pop
loope
shll
inc
testb
insb
in
ret
cmp
hlt
inc
pop
dec
shl
cmpb
and
popa
in
adc
aad
cmp
mov
jge
pop
fsts
cmp
sub
pusha
insl
mov
fwait
mov
fldl
and
rorl
lock
dec
rolb
push
imul
movsb
and
or
filds
stc
lds
lret
push
sub
sub
mov
sub
les
insb
ljmp
dec
add
jno
mov
mov
dec
jns
mov
push
fisttpll
test
test
xlat
sbb
scas
jp
xchg
jno
insb
push
and
xchg
jle
sbb
or
jecxz
movsb
mov
ret
fwait
and
sbb
sarl
xchg
nop
loopne
mov
mov
mov
and
test
sahf
lcall
mov
adc
or
xchg
add
popa
stos
mov
jb
aaa
add
fst
out
mov
pop
int3
jp
std
jnp
mov
mov
push
aad
loope
loop
xor
add
mov
insb
mov
inc
mov
jns
sub
xchg
out
sbb
sbb
push
fucom
add
dec
ficompl
dec
lahf
mov
cmp
rorb
stc
push
sbb
or
ss
lods
cld
sbb
xchg
in
sbb
aas
pop
mov
add
mov
add
mov
sbb
scas
and
add
cli
cmp
hlt
aaa
leave
sbb
add
adc
mov
mov
test
sub
ud0
inc
xchg
pop
add
test
in
xchg
dec
pushaw
xor
jne
jecxz
stc
stos
shl
pop
xchg
xchg
jae
jne
jne
fisubrl
mov
fwait
mov
loopne
bound
xor
push
mov
or
stos
mov
add
jmp
fwait
stos
mov
aaa
int
push
jmp
cmpsl
cld
xchg
mov
sub
inc
mov
sbb
sub
je
popa
adc
adc
pop
pusha
sarl
adc
xchg
arpl
inc
mov
repnz
outsl
lret
test
and
push
cmc
xlat
leave
call
inc
stos
sub
in
or
jp
sti
js
mov
divl
fisttpll
out
jecxz
je
jmp
mov
ror
loop
dec
xor
cli
sti
popa
test
in
jne
mov
inc
loopw
cmp
push
stos
mov
mov
dec
push
pushf
in
lods
cld
pop
xchg
movsb
lea
push
xchg
jge
or
dec
hlt
cmp
out
jbe
xor
sahf
jno
mov
cld
iret
int3
lcall
mov
pop
aad
cld
bound
lcall
add
out
sub
jecxz
push
xchg
in
jb
ret
fistpll
xchg
scas
mov
mov
jno
sub
dec
mov
sub
sub
ja
loopne
push
xadd
sub
cwtl
or
mov
stc
push
push
xchg
inc
ljmp
jge
add
sub
loopne
add
xor
inc
pop
jb
pmaxsw
xor
mov
enter
fdivs
daa
cmc
add
mov
mov
int3
sub
and
test
adc
outsb
sub
pop
std
subl
inc
fsubrl
jnp
pop
decl
cmp
lret
mov
pushf
pop
pop
xchg
imul
imul
push
mov
hlt
cli
inc
inc
loope
sub
xchg
push
and
adc
push
outsl
add
pusha
iret
mov
push
or
iret
push
adc
xorl
push
in
sbb
dec
and
daa
lret
fucomp
adc
push
sahf
das
in
mov
out
jmp
adc
push
arpl
sbb
in
jle
mov
fcmove
lods
jnp
xor
xchg
int3
daa
or
cld
sbb
add
loope
int3
pop
jb
fs
and
adc
mov
rclb
pop
cmp
mov
es
dec
lret
cwtl
dec
add
aaa
addr16
pop
and
lods
in
pop
jb
insb
sub
mov
pop
add
jb
pop
rorl
out
lds
jge
pop
iret
pop
jb
sub
fistpl
mov
xchg
inc
outsb
aam
insl
inc
movsl
scas
cmp
stos
outsb
cmpsb
mov
jns
adc
imul
xor
sbb
mov
sbb
adc
sbb
mov
lea
cmc
xor
cwtl
mov
sub
mov
jae
fdivr
dec
lods
out
js
jmp
leave
mov
jle
arpl
xor
dec
mov
adc
sub
xchg
sahf
fcompl
mov
pop
enter
gs
mov
mov
cmp
mov
mov
sub
mov
insl
lcall
movsl
jp
mov
push
lods
iret
push
movsb
hlt
shr
mov
outsl
ret
adc
das
sbb
daa
mov
mov
ja
push
daa
mov
loope
es
dec
adc
mov
mov
jp
pop
dec
gs
imul
mov
pop
and
jge
fsubl
sbb
dec
xchg
sub
add
mov
jb
out
push
imul
sbb
lahf
dec
xchg
and
push
jns
outsl
sbb
jl
popa
push
insb
notb
pushf
nop
cs
adc
lods
int
and
pop
ss
jg
mov
psubusw
push
hlt
dec
push
mov
mov
or
dec
test
dec
sbb
jecxz
je
imul
and
fsubrs
cmpsl
out
jne
pop
hlt
push
repnz
sub
stos
test
push
push
loop
stos
push
pop
nop
pop
fmull
jb
sti
inc
xchg
xor
or
push
dec
int
jne
inc
pop
mov
jo
lret
mov
sbb
testl
xor
jle
imul
cmp
xchg
les
pop
es
pop
nop
cmc
sahf
jp
push
into
jl
popf
adc
pop
sub
sbb
add
jae
cmp
xchg
add
sbb
add
aad
mov
cli
sbb
fmuls
pop
dec
dec
aam
adc
xchg
imul
mov
mov
lcall
mov
ja
call
mov
sub
cmp
mov
shll
mov
cld
cmpsb
pop
sub
enter
outsl
shrl
or
xchg
sub
push
sbb
mov
fists
jb
stos
daa
enter
shrl
adc
cmc
insb
leave
cmc
sbb
jmp
mov
test
loope
je
sbb
inc
movsl
std
pop
mov
fiaddl
stos
inc
ret
fdivrl
xor
xchg
icebp
sahf
test
mov
mov
mov
mov
mov
imul
outsb
js
mov
addr16
scas
and
clc
xchg
dec
mov
pop
jb
sub
lock
inc
xchg
xchg
ja
rcr
lods
sbb
inc
jb
xchg
push
dec
rcrb
sbb
and
or
imul
repz
cmp
push
outsb
add
sbb
mov
scas
dec
mov
and
or
daa
in
data16
enter
xchg
aaa
and
cmpsb
cmp
scas
fxch
mov
sbb
push
pop
lahf
inc
lea
jle
sbb
rcr
and
mov
pusha
mov
mov
fsubl
mov
mov
ret
or
insb
in
mov
sub
sbb
mov
add
aad
ret
movsb
repz
shll
adc
pushf
adc
inc
inc
call
daa
pushf
jg
int3
decb
ret
fisttps
jno
fnsave
loope
pop
jae
pop
pusha
popl
cmp
ljmp
mov
test
fucomip
test
xchg
push
in
loop
outsl
xchg
xchg
pop
sbb
or
dec
dec
outsl
xorl
dec
adc
fcompl
js
loopne
jp
adc
movsb
fs
std
mov
lret
cmp
xor
xchg
jne
mov
popf
pop
stos
and
push
mov
sbb
icebp
outsl
cli
xchg
les
push
xchg
fwait
xorb
pop
js
cmpb
cmp
mov
loopne
cmc
in
jg
inc
lret
es
iret
int3
pop
jne
shr
rol
aas
pop
icebp
jl
jns
out
les
inc
lret
in
push
pop
sahf
push
fistps
mov
ss
xchg
lds
mov
enter
xor
aas
std
mov
lods
dec
movsb
das
test
int
das
movswl
lret
push
aad
daa
mov
cmp
cmp
popf
and
jl
lock
or
mov
leave
xor
adc
xchg
loopne
add
sbb
int3
loop
jge
imul
inc
ds
cmp
test
adc
xchg
fisubrs
sti
pushf
stos
mov
and
push
jns
mov
push
aaa
xchg
push
xor
cmp
adc
xchg
cltd
out
inc
push
mov
mov
in
ret
push
mov
lds
pop
cmp
mov
adc
outsb
mov
jmp
add
mov
mov
pop
add
mov
fisttpl
in
fs
mov
xchg
push
inc
inc
cmp
outsb
jge
add
jo
daa
mov
adc
in
xchg
repnz
push
cmpl
js
pop
rep
ret
stc
jmp
mov
xchg
fsubrl
std
xor
popa
das
das
aas
add
int3
xchg
pop
and
dec
insl
mov
les
aam
mov
push
aas
stc
scas
and
sahf
dec
dec
inc
sub
pusha
push
scas
out
cwtl
cmp
lds
push
in
add
roll
mov
mov
insb
xchg
das
fidivrl
cli
out
inc
loopne
mov
mov
and
add
pop
out
cli
jns
and
shlb
loope
imulb
subb
jno
inc
jns
rol
lods
push
xor
std
imulb
xchg
mov
mov
lea
xor
sbb
or
pop
fwait
sbb
pop
icebp
int3
pop
mov
jae
xchg
out
stos
popa
inc
rorl
nop
dec
daa
jns
imul
xchg
jno
ljmp
iret
int3
leave
jne
std
repnz
clc
jmp
nop
mov
push
stc
mov
ljmp
cmp
cmp
cmp
inc
or
lock
loop
lahf
sbb
faddl
outsb
xor
sarl
jg
pop
scas
cwtl
sar
mov
mov
inc
cltd
and
jb
or
inc
pop
rclb
sbb
cmpsb
es
arpl
pop
sti
mov
xchg
in
jle
hlt
mov
pop
mov
adc
fsubl
jbe
js
mov
cld
sub
test
xchg
lret
jl
test
call
and
js
popf
xchg
pop
pop
sbb
or
adc
xchg
cmpsl
sarl
in
push
ror
out
sbb
push
jp
fisttpl
lods
push
in
shlb
and
pop
ja
movsb
dec
mov
jecxz
aad
cmpsl
mov
adcb
add
out
mov
in
inc
ljmp
scas
sbb
mov
jl
lock
test
sub
test
cmp
out
fnsave
inc
fstps
xlat
add
cmpsl
lock
imul
sbb
mov
daa
or
dec
lock
inc
xchg
test
mov
and
imulb
stos
stc
dec
mov
xchg
add
jo
loop
arpl
add
mov
aaa
lea
lahf
jbe
fsubs
inc
cmp
or
loope
ss
cmp
adc
dec
adc
cld
cmp
push
adc
ds
daa
cld
or
sbb
cwtl
repz
inc
nop
pop
cmp
adc
in
fmulp
sti
dec
sbb
ds
test
repnz
pavgw
fs
mov
add
xchg
mov
out
adc
push
sahf
decb
imull
inc
pop
sti
imul
in
fisubrl
imul
ret
stos
or
xchg
dec
lock
xchg
mov
fnsave
pop
loopne
mov
popa
add
cmpsl
adc
adc
mov
mov
rolb
pop
add
and
jae
xchg
xchg
mov
mov
xchg
loop
xchg
mov
into
outsl
movsb
mov
lret
mov
sbb
sbbb
pop
scas
and
sarb
xor
cld
addb
testb
sbb
dec
adc
mov
iret
out
mov
imul
jbe
in
sbb
mov
adc
mov
daa
mov
popf
ret
in
mov
dec
jbe
lods
cwtl
dec
dec
lret
xor
loope
push
cwtl
mov
mov
imull
inc
mov
insl
push
inc
mov
sub
cmpsl
ficoms
sti
notb
jle
int3
push
push
pop
sub
xor
out
andb
out
out
xchg
mov
or
sahf
dec
hlt
jl
mov
fnstcw
lahf
or
mov
cmp
push
jp
jg
jge
ret
sub
xor
sbb
jmp
imul
adc
mov
sub
mov
cli
notl
sbb
lock
ficomps
into
imul
aas
xlat
mov
mov
mov
bound
push
enter
fs
add
in
cli
inc
pop
ds
inc
or
push
inc
call
popa
daa
sub
es
fistpll
aad
mov
inc
loopne
insl
rorb
push
xor
pop
cmp
std
pop
bt
out
test
in
out
jb
lea
pop
mov
stc
aam
xor
adc
xor
in
fistl
arpl
aad
cmpsb
out
scas
mov
into
dec
xor
movsb
stos
lods
leave
push
mov
outsb
rcll
imull
jnp
or
jns
jo
cmp
repnz
sub
in
popf
daa
lea
in
adc
cmp
pop
push
iret
mov
sub
sbb
cmp
xchg
dec
rcl
lock
iret
pop
adc
add
pop
mov
sbb
loop
frstor
cld
mov
movsl
icebp
jne
mov
cli
jns
dec
jp
push
adc
cwtl
mov
xchg
out
mov
outsl
sbb
test
dec
inc
push
and
aam
es
mov
je
les
sub
adc
adc
fwait
adc
rcll
ss
scas
in
cli
sbb
aad
cmp
lea
and
roll
jbe
or
inc
inc
sti
mov
sub
rcrl
mov
xlat
cwtl
adc
inc
ja
jl
mov
cmc
xchg
shr
adc
dec
fucomi
in
or
aam
je
pop
adc
jo
pop
insb
cmpsl
testb
sub
cmp
or
sbb
call
push
fadds
test
mov
inc
push
xchg
pop
xchg
idivb
out
sbb
call
push
fadds
test
mov
inc
push
xchg
pop
xchg
fadd
call
push
fadds
test
test
mov
inc
jl
and
adc
sub
or
cwtl
push
call
push
fdivs
xor
pop
pop
mov
pop
pop
sub
xchg
pop
orl
ret
daa
xorl
pop
mov
jne
inc
jecxz
sbb
and
jae
arpl
popf
pop
mov
ja
pop
jecxz
leave
xor
in
inc
fisttpl
lret
pop
sub
push
aad
ret
xor
push
push
cmpsl
and
ja
push
ret
push
jl
mov
lds
push
or
rorb
pop
sub
cmpsb
or
stos
sub
out
or
out
pop
add
dec
outsl
dec
pop
push
push
mov
inc
outsb
fiaddl
adc
pop
shrl
pop
lcall
mov
cmpsl
dec
xchg
jbe
push
out
lahf
jb
popa
sub
xor
rorw
mov
pop
int3
aam
adc
sub
push
je
daa
dec
shlb
mov
add
int3
xchg
xchg
testb
pop
mov
mov
mov
cmpsl
add
add
push
out
divl
fistl
mov
mov
repz
xchg
popa
cmc
jne
ja
dec
mov
pusha
scas
add
jecxz
ret
or
ss
mov
je
call
les
test
ret
iret
jo
aaa
cmpsb
cmp
icebp
xor
inc
xlat
hlt
push
addl
arpl
xchg
daa
xorl
pop
mov
ja
inc
jecxz
adc
and
jae
arpl
xchg
daa
xorl
pop
mov
ja
inc
jecxz
adc
jl
pop
jle
in
xor
pop
add
push
sbb
fisttpl
xchg
sbb
clc
cltd
mul
aad
les
bound
jbe
test
scas
add
cmpsb
xor
inc
sbbb
popa
xchg
sub
jnp
outsl
push
std
notb
mov
xor
xchg
jb
fcmovbe
scas
jno
pop
movsl
inc
mov
or
pop
add
cmovnp
dec
xor
in
xchg
cmp
jge
and
jle
or
pushl
lock
push
cltd
or
sub
nop
pop
inc
dec
pop
outsb
repnz
ret
xor
imul
adc
inc
mov
sbb
into
nop
pop
test
dec
push
xor
fldl
push
mov
call
cltd
out
mov
aaa
sub
mov
mov
jecxz
sub
cld
xor
push
cmpsl
push
xchg
and
cmp
insb
dec
das
nop
pop
stc
mov
int3
mov
push
mov
repnz
rorl
xor
icebp
enter
pop
out
or
sub
push
push
push
les
add
inc
mov
adc
repnz
sub
sbb
aad
jecxz
out
mov
mov
aaa
mov
fnsave
sti
sbb
inc
mov
pop
cmc
cltd
negl
pop
adc
stos
insl
mov
ret
stos
dec
scas
adc
cld
arpl
test
lret
xor
push
or
std
jne
lea
cmpsl
mov
test
mov
pop
mov
int3
xor
sub
call
into
pop
test
mov
inc
or
loop
mov
push
stc
cmp
insb
fisttps
leave
xchg
push
push
add
int
pop
js
rolb
inc
jns
add
xor
insl
cld
xor
inc
pop
dec
push
adc
xchg
dec
les
fdecstp
lret
jmp
lcall
popf
gs
sub
ljmp
mov
loop
psubusb
add
fsubr
int3
mov
dec
popa
mov
imul
inc
xchg
mov
push
add
and
jno
std
pop
sbb
sub
push
sbbl
xchg
mov
push
xchg
arpl
xor
pop
push
adc
cwtl
pop
in
xor
clc
ja
push
fisttpll
cmc
mov
fs
dec
aam
cmpsl
aad
fstpt
push
add
xor
int
cmpsb
jb
or
xchg
ljmp
jge
and
inc
stos
xchg
clc
cmp
mov
or
or
push
jae
adc
xor
inc
sub
mov
mov
push
dec
pop
pop
loopne
daa
sahf
add
ds
out
mov
mov
je
sub
or
mov
cltd
mov
push
xchg
push
fimull
inc
push
out
nop
inc
fwait
ds
shr
jecxz
movsl
rclb
nop
mov
outsl
ret
jg
lock
mov
iret
les
jo
mov
inc
movsl
sub
mov
push
pop
test
push
aam
mov
and
ja
icebp
dec
sti
mov
mov
inc
fdivrs
cmp
xchg
lahf
mov
aam
dec
fmull
xor
or
imull
movsb
nop
lods
stos
stc
je
test
sbb
mov
sbb
int3
bound
fmuls
ret
xchg
cmp
push
sub
xor
adc
daa
push
mov
cmp
cmpsb
popf
lret
xor
fstp
adc
imul
gs
mov
xchg
and
mov
push
add
int3
fimuls
xor
jb
or
call
jle
mov
lahf
inc
xor
sub
push
loope
jnp
outsb
and
and
das
cmp
mov
fdivrs
ror
dec
add
iret
mov
pop
flds
adc
or
xlat
xchg
mov
mov
out
movsl
and
pop
and
sub
inc
jno
and
sahf
hlt
or
pop
ljmp
jno
adc
popa
mov
mov
push
ds
push
test
in
mov
sub
aam
inc
pop
or
add
or
add
xchg
cltd
fbstp
pushf
das
pop
int3
jae
add
mov
divb
dec
push
xchg
mov
pop
fdivr
push
in
cmpsl
outsb
jo
shll
mov
jne
scas
jle
popf
lds
out
in
inc
inc
add
adc
jo
testb
push
adc
movsb
adcl
adc
pop
rclb
xor
rcrl
sub
sbb
data16
kmovb
xor
lea
imul
jmp
dec
xchg
scas
jbe
sbb
outsb
push
loopew
shll
inc
xchg
cmpsb
inc
lods
and
and
nop
sub
popl
dec
adc
out
lea
iret
test
rolb
jecxz
mov
movl
inc
and
xchg
test
mov
and
pop
icebp
xchg
call
arpl
mov
enter
int
cltd
test
sub
sbb
and
xor
and
out
xor
sub
bnd
xor
lock
push
or
mov
pop
loop
aam
adc
daa
hlt
and
jecxz
cmp
cli
fcoms
lock
in
sub
lock
inc
mov
aaa
or
push
das
mov
xor
sub
int3
mov
dec
cli
dec
dec
stc
mov
lods
dec
ret
jle
adc
mov
nop
sbb
inc
adc
jmp
mov
mov
out
mov
jbe
fildl
stos
aaa
and
sbb
in
loope
sbb
jno
xlat
pop
xor
mov
int
xor
xchg
sub
mov
add
and
and
adc
aad
sbb
push
mov
and
ljmp
push
ss
push
and
movsb
add
adc
imul
adc
jecxz
inc
shrl
mov
sbbb
addr16
imul
bound
xchg
mov
dec
mov
inc
xor
dec
fcoml
aaa
cmp
mov
rolb
sub
pop
ja
ss
shlb
and
nop
mov
cld
jle
fidivrl
nop
fwait
mov
mov
out
inc
cli
push
arpl
pushf
pop
and
mov
push
imulb
add
xchg
outsl
xchg
push
mov
popa
xor
movsb
dec
into
jmp
sbb
fs
inc
pop
mov
add
add
in
push
xor
subb
xchg
fbld
dec
adc
std
test
pop
movsl
repz
xchg
xor
jne
je
pop
jo
mov
jno
add
xchg
cmp
in
icebp
or
xchg
mov
addr16
popa
pop
or
ffree
loope
icebp
inc
sub
mov
test
pop
pop
lret
push
dec
ss
pop
sub
inc
xchg
ja
push
fmull
sbb
xor
and
cltd
push
shl
in
push
ss
xchg
sbb
stc
cs
inc
lods
inc
lods
jl
addr16
out
outsl
inc
xor
lock
or
lcall
pop
sbb
cmp
shrl
add
fisubrs
jno
dec
fadd
sub
and
aaa
aas
inc
add
jle
xchg
popf
xor
and
aad
mov
and
fnstenv
insl
pop
dec
add
inc
pop
cmpsl
call
push
xchg
and
mov
mov
adc
fs
aad
je
adc
mov
cmp
adc
lea
imul
cmp
jnp
xor
jb
sarl
pop
cld
in
mov
sbb
add
jnp
cmp
in
std
lds
jno
mov
jnp
push
test
xor
mov
xlat
lods
cmpsl
push
inc
jne
outsl
shl
sub
pop
fstl
int3
dec
sub
mov
xchg
ret
repz
sbb
mov
lahf
shll
gs
xchg
push
add
and
mov
mov
push
lahf
cltd
jge
cmp
jg
mov
cs
cmp
addr16
test
or
xchg
push
dec
and
cmpsb
pusha
mov
jae
inc
xor
not
sub
sub
inc
cwtl
outsb
hlt
ficoml
sbb
mov
push
dec
leave
test
ds
or
push
pop
repz
push
sarl
aaa
jns
cmpsl
mov
js
dec
pop
std
xor
in
dec
or
cld
pop
fmuls
mov
int3
fldt
or
dec
mov
arpl
lahf
fisttpl
push
imul
sbb
jae
pop
rorl
fstl
jge
jo
xorb
mov
das
aad
and
test
movsl
xor
inc
mov
sahf
in
mov
out
ret
pop
lret
mov
cmp
aas
or
sub
push
idivb
lods
mov
pop
andl
xor
xchg
in
sub
cmp
clc
cmp
add
into
pop
push
js
test
and
call
push
push
cwtl
test
sub
mov
pop
dec
ljmp
insb
and
outsb
popa
notb
dec
out
xor
divl
loopne
sub
out
pushf
call
push
cmp
and
dec
call
xor
add
lcall
xor
mov
inc
xor
pushf
stos
jmp
cmp
aas
imul
dec
xchg
jle
or
mov
aad
mov
loop
in
pop
pop
cmp
cli
sub
xor
sub
dec
or
in
and
jns
xor
cwtl
push
jp
jnp
sbb
subl
dec
or
or
adc
jno
jbe
mov
sub
xchg
or
xor
enter
push
pop
out
jmp
shll
sbb
cmp
scas
std
mov
mov
push
add
testb
pop
shlb
mov
test
jecxz
ret
or
mov
adc
cmp
dec
popa
sahf
push
dec
or
shr
dec
mov
mov
push
insb
pusha
add
rclb
or
sbb
punpckhbw
and
testb
mov
cld
sbbb
sbb
ret
or
mov
mov
add
mov
jg
inc
push
scas
fdivrp
je
push
sub
ss
sub
loopne
pop
stos
add
outsb
aam
jb
add
fdivp
mov
adc
lock
out
mov
inc
into
test
pop
mov
dec
xor
into
sahf
out
pop
out
dec
out
out
adc
nop
mov
test
jcxz
push
lds
das
sti
in
mov
pop
push
bound
jecxz
xor
pop
push
cld
pop
mov
cmc
icebp
xchg
out
xchg
mov
add
out
mov
shrb
fucomp
push
cmpsb
inc
push
pop
inc
mov
or
in
loope
dec
mov
jne
adc
pop
aad
mov
mov
cmp
dec
jb
mov
out
dec
lahf
out
adc
sbb
hlt
jmp
push
inc
mov
and
jno
xchg
stos
ror
sbb
dec
inc
inc
cmpsb
and
lea
inc
mov
inc
xlat
pop
popf
int
add
adc
mov
adc
inc
mov
jl
mov
mov
xchg
ficompl
imul
push
dec
xchg
fsubrl
jge
and
jg
sub
xlat
xor
sub
pop
jo
out
push
jno
cmp
mov
movsb
dec
fwait
cli
lea
xor
jmp
mov
dec
dec
adc
jo
aas
mov
rclb
cmpsb
and
jb
fwait
stos
add
ljmp
or
cmpsl
in
push
iret
std
push
push
mov
mov
dec
stos
ret
adc
mov
pop
shlb
rol
sub
inc
mov
mov
pop
lret
fsubl
imul
mov
push
repnz
and
decl
aam
rcll
loopne
jns
insl
inc
repnz
jns
mov
loop
mov
leave
mov
enter
pop
mov
xchg
addr16
push
lahf
call
xor
pop
fdivrs
std
jbe
hlt
bound
xor
lahf
inc
dec
jb
es
mov
cmp
pop
jle
mov
dec
insb
add
ds
lcall
out
xor
adc
fnstenv
jle
cmp
and
cltd
rcll
fwait
dec
pop
jmp
inc
pushf
cmp
jle
lret
ds
in
and
fnstcw
lods
push
jp
jo
push
or
cli
push
mov
loope
sub
sub
popa
jne
sub
or
fstpt
aad
pop
lcall
cmp
sti
fbld
iret
lock
dec
jg
mov
fnsave
mov
fwait
in
jl
inc
scas
cltd
mov
inc
call
fmul
push
test
loopne
push
add
xorb
sbb
mov
adc
outsl
xor
call
cld
dec
cli
rcl
push
rol
push
mov
lock
ss
add
pop
push
cmp
clc
and
mov
lods
xlat
inc
cmp
mov
mov
aas
sti
lahf
pop
xchg
subb
sti
bound
fnsave
inc
addl
push
pop
mov
sbb
insb
scas
imul
mov
ud2
mov
and
xlat
push
ret
test
lcall
jp
sbb
mov
mov
cltd
fsubrl
stos
loopne
dec
mov
das
xchg
xor
adc
scas
xchg
jp
mov
shl
or
xchg
aas
insl
insl
iret
out
lret
dec
js
aam
pop
mov
stc
and
cmp
outsl
push
inc
sub
dec
mov
js
cmp
aam
fwait
dec
aaa
out
mov
ret
fwait
sbbl
jp
push
sub
jg
repnz
and
push
imul
pusha
sub
rcrl
lock
sbb
inc
inc
push
repz
pop
ret
inc
es
inc
add
mov
xchg
sarl
add
mov
cmp
mov
call
push
xor
push
gs
lcall
or
aam
int3
mov
outsl
jns
imul
daa
pop
ja
cli
lcall
add
push
icebp
xchg
lret
mov
cmpsl
pop
cmp
and
cmp
cmp
mov
int3
jmp
mov
mov
lods
and
out
jge
mov
lock
in
xchg
push
push
cltd
orl
je
das
sbb
mov
cmp
sbb
fidivs
inc
xorl
mov
push
xor
jecxz
mov
sbb
sarl
add
mov
sbbb
xchg
inc
std
clc
stos
sub
adc
xor
xor
xchg
js
lods
xor
lods
push
mov
in
lds
cld
add
cmp
orl
push
fmuls
nop
sub
xchg
mov
out
inc
fadd
xchg
test
xchg
xorl
mul
ficoms
into
or
repnz
hlt
inc
sub
outsb
addb
sbb
loope
loope
loopne
mov
test
xchg
icebp
aaa
xor
fiaddl
or
ds
popa
sub
dec
hlt
xchg
repz
enter
imul
xchg
adc
inc
ret
add
out
push
push
push
call
jl
cwtl
xor
loopne
mov
push
jp,pt
push
xchg
mov
fcomps
dec
stos
mov
add
cmp
lea
test
xchg
aam
cmp
cwtl
lret
fmulp
cmpsb
inc
add
mov
jle
pop
ja
nop
lods
inc
dec
popa
mov
sub
and
mov
fs
cmpl
adc
cmpsw
out
stos
in
pop
shrb
push
pop
loopne
jae
call
jns
call
jmp
lcall
mov
addr16
cmp
mov
fiaddl
movsb
fbld
mov
sub
js
hlt
jecxz
leave
sub
scas
pop
std
jo
outsl
inc
arpl
popf
outsb
cli
cmpsl
xchg
dec
bound
lret
dec
stos
push
or
jle
and
jno
jp
clc
rcll
cmp
xchg
push
pop
sbb
and
dec
scas
dec
cmp
pand
sbb
imul
cwtl
xor
jb
scas
in
insl
inc
in
in
sahf
sub
pop
jbe
sbb
int3
minps
or
movb
stos
aam
xchg
add
stos
adc
imul
test
mov
xchg
aas
sub
sub
int
shrb
imul
push
pop
push
push
sub
lret
js
cld
or
out
ret
jns
imul
mov
inc
xchg
popf
lcall
popa
test
ss
out
stos
dec
lret
dec
push
dec
es
lret
sub
xor
insl
push
jl
mov
ret
jmp
sub
add
adc
out
xor
mov
test
mov
dec
push
mov
addr16
xchg
lods
mov
fiadds
fwait
out
fs
jp
mov
sbb
dec
mov
adcb
sti
gs
fistl
inc
out
gs
inc
xchg
lods
xchg
mov
shr
push
dec
jo
adc
xchg
xchg
xchg
repz
push
inc
stc
in
inc
arpl
stos
in
stos
jp
out
les
xlat
pushf
jle
rep
sahf
jp
cwtl
popa
sub
loopne
in
shl
inc
fwait
movsb
xor
ds
xor
or
sub
mov
jb
xchg
mov
cmp
push
loop
std
xchg
mov
aam
lods
dec
add
nop
cmp
jg
fiadds
mov
mov
inc
pop
dec
pop
dec
mov
push
lods
xchg
subb
or
outsb
sbb
lds
cwtl
pop
pushf
sbb
mov
fadd
lret
push
sarb
fdivrl
xacquire
push
test
mov
sub
xchg
ljmp
fidivrl
push
loopne
in
mov
or
sub
or
add
sbb
outsl
sub
mov
insl
xchg
push
jl
jbe
push
pushf
shll
and
ret
sub
sbbl
out
fmuls
sarb
jge
mov
pop
and
add
or
fisubrs
shlb
pop
fsubs
and
or
and
stc
sub
rolb
add
and
push
mov
jns
mov
xor
cmp
in
pusha
arpl
or
xlat
aas
std
cmpsb
jge
pop
call
mov
adc
test
mov
dec
inc
gs
push
mov
js
out
stc
pop
incb
popa
dec
dec
push
nop
or
jno
insb
mov
sub
mov
mov
pop
adc
fcoms
int
sbb
das
lods
call
rorb
fbstp
lds
mov
add
pop
sub
ljmp
mov
lret
bound
popf
push
xchg
imul
adc
sbb
sub
mov
mov
mov
xchg
hlt
sbb
mov
push
inc
scas
adc
ljmp
fsts
mov
cmp
in
shrl
cmpsl
and
in
outsb
lds
loopne
mov
mov
jb
pop
outsl
enter
add
sbb
insb
cltd
xor
sub
inc
dec
mov
movsbl
push
jl
ja
fcomps
or
mov
jns
in
rcll
ficoml
aas
and
or
ljmp
jle
mov
movsl
push
int3
stos
sub
push
lea
xlat
jg
push
cmp
dec
mov
lret
push
hlt
xchg
xor
test
popa
or
hlt
mov
mov
jbe
xchg
mov
outsb
inc
inc
jmp
adc
fidivl
xor
aas
je
adcl
adc
pop
xor
push
push
cmpsb
ss
lock
aam
push
inc
frstor
adc
add
hlt
mov
add
ds
cmpsb
adc
jp
or
inc
scas
inc
mov
lahf
nop
cli
sbb
lret
jp
mov
jg
jnp
aaa
shll
adc
movsl
xlat
dec
sarb
fbstp
imul
js
stos
cmc
test
rep
sbb
test
int3
push
mov
sbb
mov
add
sbb
ret
inc
or
call
rorb
xchg
icebp
xor
bound
jecxz
sahf
add
jns
cmc
xchg
stos
add
fcmovbe
dec
ds
icebp
mov
je
lret
pusha
xlat
pusha
fdivrl
jo
ljmp
add
push
sub
xchg
pop
and
pop
pop
jnp
jno
leave
cmp
pusha
push
cmp
movsl
pop
jb
and
xchg
jb
imul
mov
push
rep
jecxz
mov
test
hlt
repz
sub
and
aam
mov
add
clc
jge
dec
jmp
xchg
push
out
divl
arpl
xchg
daa
xorl
pop
mov
ja
inc
jecxz
adc
and
jae
arpl
xchg
daa
xorl
pop
mov
ja
inc
jecxz
adc
and
jae
xlat
xchg
incl
pop
shll
ja
rcll
cmpsl
das
mov
xchg
xchg
push
out
divl
jecxz
xchg
fdivrs
pop
mov
mov
sbb
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
test
mov
fdivrs
fcom
sub
cmp
or
sbb
dec
movsl
pop
push
test
mov
adc
enter
sub
cmp
or
sbb
test
dec
movsl
pop
push
test
mov
adc
enter
push
out
cltd
js
sbb
sub
and
jne
or
mov
ds
fnstsw
mov
or
or
shrl
mov
sbb
cltd
lcall
fcom
sub
sbb
push
test
loop
sub
jg
hlt
sahf
mov
jnp
aad
xchg
cmc
or
clc
dec
shlb
inc
mov
xor
adc
mov
and
sub
push
lds
ss
jns
xor
lcall
aaa
pusha
mov
hlt
cwtl
sub
mov
movsb
or
mov
in
xlat
and
sti
mov
xlat
xor
sbb
xchg
or
test
mov
adc
enter
sub
cmp
or
sbb
dec
movsl
push
adc
xor
into
or
adc
lods
daa
test
inc
mov
jbe
add
jecxz
xor
and
adc
inc
dec
cmpsl
ja
mov
xchg
push
negl
je
pop
jmp
fnstcw
inc
int3
sbb
or
pop
test
fcom
sub
cmp
or
sbb
dec
movsl
pop
push
test
mov
adc
enter
sub
cmp
or
sbb
dec
movsl
pop
push
test
lods
call
sub
or
mov
addr16
adc
push
pop
xchg
stc
aam
inc
cmp
mov
cmp
xor
mov
or
mov
cmp
jb
jmp
jno
push
mov
adc
xchg
stos
dec
iret
pop
ljmp
in
in
outsl
or
xchg
push
incb
pop
pusha
inc
mov
xor
xor
stos
lahf
add
subb
or
adc
aad
ret
mov
out
and
cmpsb
pop
lret
std
mov
mov
xchg
ret
lock
push
xorl
mov
mov
cmc
stos
mov
dec
jnp
loop
ss
inc
shrb
push
lahf
hlt
pop
pop
ret
xchg
sbbb
sbb
mov
out
mov
adc
pop
xor
popa
lds
dec
jge
setl
ror
es
dec
lea
movsl
mov
dec
jns
gs
outsb
stos
stos
jl
jp
inc
pop
or
fwait
mov
ror
mov
inc
fldl
jle
shrl
push
enter
xchg
sbb
insl
sbb
cmp
jb
jb
pop
lock
aam
inc
test
push
pop
add
adc
addb
xchg
iret
add
fdivrs
test
push
jmp
insl
imul
mov
adc
lds
push
ljmp
pusha
push
icebp
aaa
pop
push
mov
lods
mov
into
xchg
test
xorl
cltd
or
pop
mov
stos
movsl
fdivrl
js
jmp
repz
jmp
je
stos
mov
insb
dec
jno
adc
dec
roll
mov
into
out
addb
jl
jae
and
push
mov
out
xchg
icebp
inc
xchg
mov
int3
jb
aam
icebp
lds
cmp
jae
mov
cmc
push
sub
jno
mov
cmp
push
mov
sarb
and
fnsave
ret
cmp
push
and
je
test
out
push
inc
out
outsl
dec
mov
call
mov
push
subl
add
jae
enter
jle
movsl
xor
adc
sub
int
rorl
sub
imul
mov
dec
daa
sbb
push
inc
mov
jne
jl
cli
imul
push
addr16
sbb
ror
ja
pushf
push
je
push
fsubrs
shlb
mov
and
shrl
xchg
xchg
cmp
sbb
mov
inc
adc
ja
daa
loope
xor
lcall
repz
push
sarl
mov
stc
inc
cld
out
push
cltd
iret
sub
mov
cs
aam
cmp
fimuls
mov
fs
push
jl
jae
mov
jmp
dec
jg
orb
ljmp
ds
or
jecxz
test
dec
or
or
popf
push
div
sahf
mov
shr
cmpsb
stc
adcl
lea
shr
imul
mov
dec
xor
xchg
cmp
push
shll
sar
loopne
jno
mov
ror
mov
sub
adc
and
icebp
loopne
mov
add
popa
sbb
push
xchg
mov
xor
jo
mov
and
cmp
cmc
lea
ss
fstps
inc
out
mov
push
movsl
fisttps
lcall
sbb
mov
dec
push
lret
sub
mov
mov
mov
push
mov
mov
push
inc
add
icebp
test
xor
fnstenv
mov
mov
leave
xor
cltd
fs
dec
sbb
rclb
add
cli
inc
jge
jnp
inc
push
cmp
scas
xor
mov
push
xchg
push
int3
xor
shr
or
mov
adcl
dec
mov
cmp
mov
pop
ret
stc
sbb
pop
aad
gs
sub
sub
cmp
cwtl
dec
mov
xor
jae
add
scas
dec
xchg
int
xorl
mov
imul
iret
test
gs
out
loopne
movsl
ja
xchg
iret
mov
call
push
test
scas
sub
adc
jne
pop
jmp
add
in
xlat
test
push
and
mov
enter
das
cmpsl
pop
mov
or
mov
and
fcomp
les
stc
test
int3
or
mov
ljmp
inc
aaa
mov
jmp
sub
aam
pop
xor
pop
xchg
pop
adc
bound
inc
pop
das
xor
push
mov
push
repz
repnz
icebp
push
cmp
shlb
rorb
repz
push
xlat
jmp
subl
cmpsl
ja
push
adc
dec
mov
test
dec
add
cli
outsl
or
cmp
ret
nop
inc
ss
dec
push
dec
fadds
test
adc
inc
cs
pushf
mov
mov
xor
loope
outsl
lahf
cmp
mov
mov
push
sbb
insb
cmpsl
sub
mov
clc
shll
mov
cmp
stc
enter
sbb
jno
jbe
push
xchg
cmp
push
and
in
ljmp
stos
pop
inc
jnp
dec
outsb
pop
pop
into
mov
enter
adc
mov
inc
or
imul
adc
or
and
cmpsl
sbb
cs
cmp
js
mov
sbb
or
insl
jns
js
popf
inc
in
cwtl
cmp
mov
rcll
xor
int
push
pop
dec
push
inc
push
shll
cmpsl
inc
jb
cwtl
lret
mov
ds
fwait
out
mov
cltd
negl
pop
or
pop
dec
jmp
daa
cltd
outsb
and
sti
insb
and
fcomp
cli
pop
xchg
pop
popf
out
xchg
inc
orb
push
push
mov
icebp
aas
mov
fidivs
mov
jp
sub
sahf
push
lret
inc
push
cmpsl
and
testb
lock
and
or
mov
imul
cmpsb
sahf
fwait
jo
or
mov
mov
mov
sub
ljmp
adc
inc
mov
mov
jo
mov
add
int
mov
fcmovb
test
jne
insl
jmp
enter
push
or
data16
xor
jl
add
cmc
loope
fs
icebp
mov
and
xchg
pop
repz
inc
jo
sub
lfs
sbb
or
das
push
xor
mov
jg
mov
pushf
xor
xchg
push
loopne
or
test
jae
outsl
pusha
push
fidivl
repnz
mov
lcall
iret
cmp
mov
test
ret
ret
or
pop
or
mov
fs
adc
mov
ja
sbb
jg
cltd
stos
loop
fwait
xchg
jne
mov
sti
popf
int3
fs
jbe
shll
sub
sbb
jecxz
call
inc
pop
into
mov
mov
jecxz
jle
std
repz
dec
mov
std
lret
sbbl
mov
scas
push
pop
add
xor
mov
and
fstl
xor
cmp
les
outsl
inc
jns
es
jnp
pushf
fwait
cmc
and
inc
insb
adc
out
jmp
or
and
shll
mov
arpl
inc
inc
inc
xor
adc
movsb
movsl
rol
dec
scas
mov
pop
fistps
mov
out
arpl
ret
daa
sbb
push
or
hlt
xor
hlt
cmc
sti
lret
jns
and
or
adc
mov
inc
test
xchg
shlb
cmp
nop
les
imul
les
stos
les
mov
out
sbb
imul
das
xchg
adc
les
scas
arpl
cmp
xchg
sub
adc
push
jnp
jne
inc
sub
jb
lea
mov
hlt
push
loope
push
stc
cmp
pop
mov
sarl
sub
popa
int
xchg
pop
cmp
je
add
push
pushf
fwait
enter
jle
sahf
sti
insl
mov
cmp
cmp
cmp
and
cltd
mov
or
pop
ss
mov
cmpsl
inc
pop
or
stc
dec
cwtl
rorb
subb
lahf
sbb
xor
call
sti
sbb
adc
arpl
cwtl
into
push
push
jp
test
in
loopne
ss
cmpsl
cld
bound
jne
xor
dec
add
ds
jmp
in
cwtl
mov
mov
mov
inc
subl
faddp
leave
xchg
jnp
stos
mov
das
mov
popf
or
lahf
jb
or
push
pop
xor
test
aaa
xor
cltd
dec
dec
inc
lcall
stos
test
mov
xchg
xor
cmc
cs
repnz
in
mov
cmp
scas
mov
arpl
enter
pop
insb
inc
mov
push
xchg
pop
jp
mov
out
les
mov
xor
inc
or
push
in
je
xor
gs
or
repnz
mov
cmp
fcompp
or
mov
dec
or
lahf
subb
push
adc
xchg
jle
add
cmpsl
cmp
loopne
shlb
cmc
jecxz
or
jmp
fs
mov
sub
int
arpl
push
xchg
shll
clc
mov
subb
mov
push
daa
das
adcb
xchg
lcall
lahf
stos
inc
pushf
ss
std
cmp
cmpsl
out
pop
sbb
add
or
push
roll
pop
jns
ret
insl
xor
or
sti
sbb
scas
add
inc
cmp
cmpsb
and
jmp
in
pop
jbe
lahf
mov
add
mov
add
aad
sbb
popa
rolb
xor
das
movsw
jb
lds
push
mov
sub
cmp
cwtl
jp
fnstsw
push
stc
repnz
mov
push
les
mov
jmp
stc
hlt
push
xor
fstps
sarb
loope
adc
ret
xor
mov
fwait
lahf
xchg
shrl
jle
jmp
test
icebp
push
cmp
icebp
jno
sbb
add
les
dec
or
lret
xor
mov
aam
imul
ret
push
dec
lcall
push
pop
lret
inc
data16
dec
mov
stc
mov
push
pop
lret
xor
add
jo
inc
jge
cmp
push
or
mov
xor
aas
mov
das
andl
fistpl
add
pop
mov
pop
data16
pop
insb
testl
repnz
in
sub
lahf
in
mov
add
sub
pop
pop
xchg
mov
outsb
mov
dec
je
pop
dec
fdivs
and
xchg
sbb
ds
xor
pushf
xchg
shll
pop
clc
aam
add
mov
sbb
loop
push
js
push
push
xor
push
push
pop
xlat
fwait
sub
add
loope
je
mov
xor
add
pop
test
mov
icebp
cmp
movsl
jmp
test
inc
cmpb
sbb
loope
fisttpl
movsb
and
or
imul
fistpl
inc
js
int3
xchg
fwait
icebp
xor
imul
movsb
ret
loopne
xchg
jns
dec
pop
sbb
mov
js
pop
pop
fs
pop
xor
push
pop
xor
icebp
add
lret
xchg
in
out
sub
testb
and
out
into
out
test
jns
xchg
fildl
dec
adc
loop
sbb
xchg
jge
lock
rcrl
mov
and
jge
pop
cs
mov
add
data16
mov
pavgw
je
sar
xchg
jmp
pop
push
jp
xor
mov
push
fisttps
leave
inc
adcb
mov
push
in
dec
movsl
scas
testl
cmpsl
inc
mov
out
push
fisttpl
rcrl
mov
sub
cmpsl
inc
push
sub
ret
sahf
and
dec
sub
insb
fdivl
cmc
mov
mov
inc
xor
cmpsb
mov
mov
xchg
mov
lea
inc
adc
js
xchg
push
test
in
out
mov
pop
nop
cmpsl
pop
out
scas
sbb
push
pop
mov
test
xchg
pop
pop
push
and
xchg
les
lcall
pusha
cs
out
and
inc
call
cmp
dec
addr16
and
daa
cmp
rcl
ja
mov
mov
mov
cmpl
mov
inc
pop
mov
push
inc
andl
jg
sub
fdivrl
lds
jb
enter
adc
in
cmp
jg
mov
jno
jae
and
mov
notb
imul
jns
addr16
push
add
lods
rcrl
ja
xor
mov
sub
fistps
add
and
jecxz
inc
mov
jo
leave
and
outsb
movsl
xchg
aad
jno
inc
or
dec
adc
jle
sbb
int3
xor
out
lahf
xor
cmpsb
pop
jo
cmp
inc
sarl
pushf
in
into
cwtl
xchg
pop
stos
fdivs
push
fidivrl
cltd
add
in
fidivrl
test
sbb
or
lds
data16
xchg
mov
add
or
cmp
scas
pop
fisubs
add
push
or
sahf
jmp
daa
into
add
outsb
mov
pushf
andl
inc
and
cli
inc
mov
cs
or
lods
add
adc
cwtl
ljmp
xor
and
jp
pop
out
dec
sbb
js
fimull
push
bound
out
push
test
jbe
movb
fdivs
das
or
in
in
adc
push
jno
push
xchg
fists
sub
inc
ljmp
adc
mov
pop
pop
adc
xor
inc
and
aad
aaa
outsb
fisubrs
in
add
cmp
pop
xor
cmp
push
pop
mov
jnp
hlt
push
inc
jecxz
pop
pop
xor
inc
jbe
fwait
test
cmp
loope
xchg
xchg
or
sbb
jb
sbb
mov
cmp
data16
xor
negb
mov
fdivs
cmp
cli
jp
das
jle
in
mov
adc
aam
push
in
out
mov
in
mov
es
andl
xchg
add
lods
cld
jp
and
fcmovnb
push
lcall
ror
popf
jmp
jne
push
andb
mov
aas
mov
dec
lods
or
mov
xor
inc
adc
sub
inc
sub
or
or
in
inc
mov
push
out
cli
cmp
lods
adc
xor
sti
mov
lods
mov
add
mov
test
jnp
hlt
rclb
xor
loopne
rorb
in
or
inc
mov
and
test
das
clc
jbe
cmpsb
mov
sysret
cmc
loop
push
or
adc
lock
fstpt
outsl
jmp
mov
pavgw
popa
adc
cmpsl
jbe
lods
xchg
in
test
cmp
adc
push
dec
and
xchg
lods
and
dec
mov
pop
mov
insl
dec
inc
pop
push
int
pop
leave
xor
in
add
pop
mov
mov
repz
test
jb
imul
lods
mov
mov
push
in
lcall
lds
add
mov
xchg
insb
mov
insb
insl
xchg
add
and
jge
nop
pop
jb
sbb
lods
fbstp
dec
das
jno
call
xor
les
push
sub
sub
pusha
jg
cmp
addr16
das
clc
cmp
xlat
add
rolb
jne
ret
loopne
cmp
cli
cld
ja
and
cmp
sbb
das
sbb
mov
fs
sahf
sub
orb
lahf
jle
js
aaa
lret
dec
lock
pushf
mov
dec
adc
call
push
mov
adc
mov
fildl
or
xor
outsl
mov
flds
xor
jg
pop
mov
scas
cld
or
pusha
mov
jge
xlat
leave
nop
out
sti
xor
and
aam
jecxz
push
mov
fistps
and
inc
or
and
xor
xchg
gs
mov
jae
mov
pop
cmp
divl
xlat
sub
leave
jae
dec
jle
push
hlt
dec
fsubrl
sub
xchg
add
push
popf
out
adc
in
push
outsl
ss
pop
add
arpl
fwait
repnz
loope
test
mov
jae
insl
mull
add
mov
sahf
loop
mov
repz
lcall
mov
or
sti
int
push
push
pushf
inc
imul
lret
xor
leave
outsl
pop
inc
and
pop
lods
jmp
loop
mov
movsb
gs
jmp
mov
ss
xlat
fcompl
push
out
shrb
cmp
bnd
rcr
jle
lret
cmp
lods
push
cld
mov
pop
fisubrl
ror
push
mov
push
mov
inc
sbb
xor
inc
mov
pop
cmpsb
jae
in
mov
add
std
daa
push
jl
les
mov
movsl
dec
cltd
jg
pop
lods
xchg
lods
sbb
inc
loope
push
lahf
mov
ss
sbb
and
test
adc
mov
dec
cltd
in
add
inc
sbb
jmp
scas
push
mov
lret
push
insb
adc
mov
out
and
cld
jecxz
jno
push
fldcw
dec
fwait
call
and
mov
sub
sarb
ret
cmpsb
shl
and
adc
es
in
dec
inc
test
test
insl
pop
popa
dec
adc
stos
mov
or
clc
sbb
aam
cmp
and
and
ss
scas
stc
sub
lock
mov
push
insb
shll
dec
cmc
jp
mov
repz
adc
xlat
cmp
xor
aad
enter
fsubrl
and
pop
jbe
sub
fidivs
std
jno
sbb
std
mov
lahf
enter
imul
inc
and
loope
push
mov
scas
stos
add
and
sub
pop
mov
xor
xor
imul
daa
loopne
mov
daa
cmpsb
pushf
pusha
push
add
push
ret
test
xor
add
pop
push
and
loope
icebp
mov
jne
sub
adc
fsubrl
int
stos
outsl
dec
cmp
lret
sti
inc
in
movsb
mov
push
add
jae
imul
jmp
and
mov
xor
in
push
mov
or
adc
stos
push
mov
cmpl
sub
mov
push
adc
xor
adc
add
addr16
cmp
out
fs
lods
js
test
or
pop
push
shll
mov
dec
ljmp
imul
lahf
push
inc
pop
popf
mov
mov
xchg
mov
mov
test
push
out
or
mov
jno
pop
aam
sub
fiadds
jne
sahf
mov
pushl
jp
xchg
and
xor
jle
dec
aas
clc
fistpl
in
movsb
jbe
enter
xchg
fs
jg
out
pop
pop
outsl
into
or
mov
sub
sub
mov
jno
ret
jle
jge
ret
sbb
jg
jg
adc
jg
xchg
jge
and
stc
pop
fs
cld
mov
enter
cmovo
clc
pop
or
push
repnz
xor
fildll
hlt
rorb
jecxz
mov
movsl
sbb
repz
xor
push
or
fbld
and
or
mov
push
aam
mov
lea
pop
jns
nop
mov
or
push
inc
testl
repnz
in
shlb
adc
pop
inc
cli
int3
jle
ja
jnp
shlb
mov
sarl
rolb
test
add
jns
call
rcrl
lahf
sub
aad
xchg
sbb
inc
inc
xor
lods
cmp
sbb
cmc
fiadds
mov
xorl
ret
xchg
or
arpl
pop
cmpsb
cmp
push
sub
call
sarl
and
inc
test
cmp
sbb
fsubr
jb
cmp
xor
repnz
and
mov
out
cmp
mov
pop
add
imul
mov
or
mov
rorl
data16
sub
cmp
mov
lret
push
in
push
daa
stos
pop
adc
data16
mov
jne
mov
adc
enter
sub
cmp
or
sbb
dec
movsl
pop
push
test
mov
adc
enter
sub
cmp
or
sbb
dec
movsl
pop
push
lods
lds
xchg
call
movsl
fcom
sub
cmp
or
sbb
dec
movsl
pop
push
test
mov
adc
dec
and
xchg
pop
or
outsl
in
cmc
xchg
mov
cmpsl
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
fs
je
inc
jo
pusha
nop
xor
jbe
sbb
in
hlt
int3
loopne
loop
nop
mov
xchg
mov
je
inc
jo
pusha
and
xor
add
adc
hlt
shl
rol
movsb
repz
mov
mov
pop
push
sub
sbb
adc
std
xor
cli
fwait
test
fsub
ret
mov
inc
add
jmp
pushl
lds
cmovnp
mov
pop
dec
movsl
sti
in
mov
cmp
call
incb
push
cmp
sub
hlt
adc
imul
scas
mov
mov
adc
inc
mov
popl
mov
or
cld
dec
pop
movsb
orb
dec
xchg
mov
lea
push
xor
fildll
cmc
aas
icebp
adc
pop
pop
ret
mov
lret
stc
mov
sub
dec
pusha
in
in
xor
lds
mov
jnp
test
pop
xchg
mov
fldt
ss
or
mov
ret
out
test
mov
push
insl
push
inc
pusha
push
jp
adc
add
or
fcomp
jmp
lods
xchg
sahf
mov
les
xor
and
inc
push
outsb
dec
pop
adc
in
cwtl
mov
movsb
std
rcl
divb
adc
gs
arpl
add
inc
dec
cmpsl
test
xchg
mov
repnz
lds
adc
and
insb
jl
add
adc
in
hlt
rol
aam
movsb
nop
mov
test
je
inc
jo
pusha
and
xor
add
adc
in
hlt
rol
aam
movsb
nop
mov
test
pop
sti
push
daa
jae
sub
lret
js
inc
fs
pop
mov
jo
ds
and
mov
or
pushf
into
daa
outsb
pop
xchg
in
movsl
inc
add
add
cs
jge
mov
jo
out
sahf
jb
mov
mov
dec
inc
daa
ss
xbegin
int3
and
and
jmp
xchg
sub
icebp
pop
cmp
xchg
mov
push
inc
pop
sub
ficomps
loopne
shlb
pop
pushf
adc
clc
mov
jae
fimull
jno
and
push
xor
mov
and
sbb
stc
das
std
fnstcw
push
sbb
mov
shll
adc
add
sub
fnsave
pop
aam
cmp
push
out
inc
int
insl
popf
popl
in
cltd
jns
and
mov
mov
xchg
cmc
lcall
mov
xchg
or
jb
mov
add
mov
mov
push
rcll
sahf
lret
js,pt
fnsave
xchg
ffree
rep
and
cltd
in
xchg
xor
push
push
rcll
pop
sbb
test
push
div
test
imul
and
cltd
add
test
clc
mov
pop
push
aas
jecxz
cmp
ds
mov
xchg
push
jecxz
sahf
popa
loope
mov
fwait
pop
mov
mov
jmp
pop
add
lcall
mov
aad
cmp
and
aam
insb
dec
cmp
mov
push
das
add
in
mov
icebp
outsl
dec
in
sub
xor
loop
pop
outsb
xor
dec
mov
add
movsb
loopne
loope
pop
lret
mov
fcoml
dec
inc
cwtl
mov
mov
and
cltd
aaa
out
sub
arpl
int3
cmp
sahf
enter
mov
lcall
jno
and
mov
lret
jle
sar
cli
nop
xchg
cmc
push
das
into
cmpsl
iret
mov
fisttpl
jbe
in
adc
or
or
mov
mov
test
adc
cmp
push
jl
hlt
lcall
sub
xchg
pop
inc
fistpll
sbb
add
cmc
clc
dec
dec
popw
push
hlt
xor
sbb
das
mov
nop
cld
fwait
sbb
adc
sbbl
imul
rcrl
xor
cmp
jns
pop
push
jbe
sbb
nop
daa
pop
mov
jbe
mov
icebp
inc
mov
lret
imul
out
mov
xchg
insl
neg
mov
inc
sub
testb
and
push
pop
jnp
addr16
xor
aas
mov
add
popa
and
sbb
jl
lcall
inc
pusha
dec
sahf
sbb
push
bound
add
in
call
or
nop
cli
fwait
pusha
lcall
pusha
mov
cwtl
dec
xchg
ja
mov
lods
ret
movsl
xor
jae
leave
shll
addr16
jle
inc
fldenv
mov
mov
test
in
mov
ss
sbb
sbb
cs
sub
test
cs
xor
cmp
sarl
and
pop
xor
push
inc
mov
mov
dec
cmp
test
mov
xor
pop
addps
js
shl
iret
mov
int
scas
or
data16
imul
push
fs
sub
in
iret
xor
dec
and
xor
popa
movaps
mov
jno
dec
fbstp
aas
es
lods
xor
xchg
and
mov
dec
xor
adc
in
int3
insb
sub
xadd
and
jl
push
or
push
mov
inc
cmp
jno
xchg
pushf
into
or
mov
inc
aam
stc
inc
sbb
add
xchg
adc
or
push
dec
scas
test
xor
fwait
sbb
mov
jmp
aam
pop
cmp
inc
add
rep
mov
inc
jno
pop
aaa
cs
cli
movl
mov
jne
gs
or
test
xchg
aas
aaa
sbb
nop
rorl
adc
mov
ds
jne
movsl
pushf
xor
push
cld
mov
rorl
jo
ret
aaa
add
sbbb
scas
nop
ja
gs
loope
mov
mov
es
loopne
cmc
pusha
out
popf
jnp
dec
leave
and
pop
ret
arpl
dec
push
test
sbb
je
xchg
xchg
in
add
sbb
test
dec
or
sbb
mov
sub
sub
test
out
mov
jg
repz
shl
pop
into
pop
pop
aas
fisttps
fists
or
loopne
fs
and
mov
cmp
push
out
push
mov
cmp
or
jge
lret
pushf
sub
inc
pop
out
mov
mov
mov
sub
shrb
sub
xchg
adc
push
cmpsl
or
sti
ftst
cmp
pop
repnz
pop
test
push
adc
mov
sub
mov
add
icebp
call
and
push
aam
jl
pop
sbb
imul
iret
and
mov
jl
inc
lea
out
sbb
jae
arpl
push
lcall
lods
mov
cmc
out
cli
popa
mov
test
xchg
mov
jmp
cmp
call
jns
leave
das
xchg
push
punpckldq
or
icebp
mov
pop
dec
push
in
js
repnz
adc
lahf
adc
in
jb
int
pop
into
jmp
adcl
mov
adc
mov
or
jns
push
jno
mov
xor
add
inc
imul
das
adc
outsb
call
push
jecxz
pop
pop
push
dec
fnstsw
mov
and
data16
pop
movsl
sbb
adcl
sahf
sbb
sti
les
xor
sbb
jnp
fistpl
push
mov
inc
and
clc
jg
mov
jg
pop
sbb
stc
daa
js
inc
sbb
sub
mov
pusha
and
xor
inc
aas
int3
dec
add
pop
lock
ret
lret
jbe
add
mov
mov
or
mov
stc
cmc
movsl
mov
repnz
loopne
xor
push
js
in
dec
repnz
repnz
or
loop
pusha
xor
and
pop
in
in
fucom
and
pop
or
loop
dec
es
push
outsl
mov
jne
jmp
lods
cwtl
inc
filds
aaa
mov
dec
mov
cltd
cmpsb
xlat
mov
mov
fistpll
test
mov
sub
data16
int3
pop
cltd
pusha
sar
sbb
adc
stos
pop
scas
scas
sahf
cld
mov
std
imul
adc
ret
and
cli
in
popa
sarb
pop
sub
mov
xchg
fisubl
jns
cld
sub
xor
leave
cmp
dec
push
push
shll
pop
or
jge
jae
xchg
push
cmpsl
mov
and
mov
sub
ljmp
pop
repnz
out
xor
hlt
and
inc
adcb
or
aam
enter
dec
jg
push
cltd
dec
test
popf
mov
sahf
das
jp
mov
inc
pop
push
fsubp
dec
stc
fldenv
jmp
mov
jnp
mov
dec
push
xchg
sub
sbb
pop
out
xor
clc
gs
in
loopne
inc
cmp
inc
mov
outsb
and
aas
shrl
sub
xchg
aas
int3
cltd
loopne
sbb
addl
stc
mov
lahf
movsl
mov
adcl
inc
imul
mov
leave
dec
sbb
mov
pushf
inc
or
mov
daa
cmp
insb
and
sbb
add
cmpsl
ljmp
movsb
test
inc
sbb
cmpsb
scas
mov
das
inc
push
adc
bound
les
nop
jmp
add
inc
outsb
pop
pop
pop
mov
mov
fbld
pop
movsb
jne
movl
movsb
mov
ljmp
jge
stos
fs
ret
and
push
clc
mov
shl
sbb
rcl
or
xchg
das
and
cld
imul
popf
pop
test
lods
pusha
pop
test
fsubrs
pop
lcall
xchg
dec
shlb
aaa
sarb
mov
pop
in
scas
repz
adc
aam
lock
sub
and
push
mov
shrb
and
mov
nop
xchg
insb
outsl
adc
lock
repz
push
repnz
and
je
dec
push
dec
adc
fadds
xor
dec
lret
lret
in
xchg
rcll
pushl
sub
jp
stc
and
lahf
mov
scas
dec
pop
stos
mov
shrl
aam
cmpb
mov
int
pop
dec
daa
mov
and
outsl
push
xchg
hlt
dec
dec
push
mov
std
fisubrs
insl
mov
popf
xchg
and
sub
or
fstps
out
leave
mov
add
mov
mov
jae
data16
aas
push
push
cmp
sbb
es
cld
add
xor
jmp
dec
inc
lcall
sahf
dec
mov
cmp
sbb
ret
ss
test
vandps
jb
push
pop
das
add
adc
fwait
scas
cmp
mov
incl
sbb
push
icebp
and
cmp
in
rorl
ds
je
cmpsb
dec
outsb
bound
enter
rclb
leave
xchg
xchg
pusha
adc
dec
fsubrl
cmp
out
je
fildl
and
mov
jbe
lret
cmp
repnz
rcr
pop
outsl
add
mov
add
cmc
lcall
mov
adc
stos
sbb
xor
std
insl
pop
jecxz
enter
insl
subl
repz
inc
xchg
and
mov
cld
in
mov
mov
daa
cmpsb
push
cmpl
push
mov
push
jno
adc
xlat
xchg
or
jl
add
or
pop
outsb
cmp
inc
sbb
pop
popa
mov
xor
lods
addr16
test
jg
rcll
and
and
and
inc
pop
add
jmp
jg
mov
mov
mov
in
mov
jb
rcl
loop
cmpsl
mov
mov
xor
fwait
sub
adc
mov
push
pop
jmp
add
pop
andb
mov
or
push
and
test
stos
lret
mov
fwait
sbb
js
and
insl
lods
test
xchg
inc
pop
call
cmp
lcall
mov
ret
scas
lcall
cmp
inc
push
add
dec
das
ljmp
inc
das
fisttpll
aam
sbb
inc
scas
mov
shr
andl
xchg
js
sti
xchg
sbb
add
xlat
fadd
dec
inc
mov
aas
loopne
and
loope
outsl
test
pop
fsubs
add
enter
mov
sbb
add
or
mov
pushf
dec
jp
lahf
and
sahf
stos
push
mov
dec
pushf
mov
mov
lcall
test
aad
or
xchg
inc
mov
inc
push
jl
cld
fadds
ret
pop
stc
add
sarl
mov
cmpsb
push
and
add
lret
lahf
mov
in
xlat
or
mov
pop
or
jecxz
iret
xchg
xchg
rolb
cmp
loop
jle
fisttps
sub
push
fwait
cmc
push
mov
loop
jo
das
shlb
mov
lods
int
add
cmpsb
sub
imull
and
adcl
fs
sbb
pop
pop
add
mov
push
daa
dec
mov
mov
pop
fs
rcll
fadd
push
pop
jb
push
mov
mov
pop
add
scas
or
in
cmp
dec
xchg
subb
dec
push
loope
jo
and
pop
rcrl
xchg
gs
movsb
jg
push
idivb
mov
dec
jmp
mov
sbb
push
xchg
lcall
add
and
stos
pop
push
adcl
xchg
cmp
repnz
push
iret
mov
or
aaa
out
sbb
sub
pop
clc
xchg
pop
xor
imul
in
enter
test
add
out
enter
jle
mov
sub
mov
dec
lods
cwtl
inc
imul
lahf
out
mov
xchg
sub
test
adcb
xor
pop
std
xor
sbb
add
adc
adc
insb
hlt
aad
bound
sub
cmc
cmp
cltd
nop
jne
into
stos
adc
test
fmuls
lcall
ret
inc
icebp
xlat
push
rorl
subl
jp
sbbl
insb
jno
jne
orb
cmp
dec
decl
push
sbb
frstor
subb
ja
out
loopne
scas
sub
xchg
xchg
out
loopne
and
add
or
das
and
xchg
loop
push
push
or
filds
shlb
jl
add
fucom
addr16
jmp
cli
sub
loopne
sub
insl
xchg
mov
adc
test
xchg
ljmp
pop
jl
and
adc
push
jo
shll
lods
push
or
movsl
push
add
inc
test
sbb
mov
sbb
clc
out
daa
pop
scas
stc
mov
insl
lods
jmp
cmpsl
cs
inc
xchg
inc
jo
mov
dec
inc
dec
add
mov
aad
fsubr
js
icebp
fucomp
sub
rolb
lock
call
xchg
ljmp
rorl
and
jge
or
fimull
and
cli
pop
adc
mov
sbb
add
pusha
xchg
shlb
lock
cmp
imul
scas
push
mov
mov
and
sbb
jnp
sub
icebp
loopne
lds
mov
xor
and
es
addr16
pushl
jnp
mov
mov
sbb
inc
mov
ret
jnp
test
lcall
pop
pop
adc
push
rcl
pop
push
lea
xchg
jle
popa
sbb
or
sub
mov
ss
add
inc
popf
xor
jp
aaa
cmp
xchg
sbb
and
sbb
mov
into
cmp
scas
outsb
hlt
addr16
or
testb
scas
mov
leave
mov
and
in
jecxz
add
inc
stc
scas
xchg
jb
popa
insb
notl
and
sahf
xor
mov
stos
xchg
or
adc
xor
xchg
inc
pop
push
in
addr16
push
out
sahf
push
mov
frstor
mov
push
pop
sbb
test
add
jno
mov
cmpsb
daa
loope
push
adc
loop
into
leave
or
mov
arpl
mov
test
cmp
stos
out
mov
cmpsb
fisubl
fistps
sub
pop
aad
shll
pusha
outsb
mov
je
sbb
push
push
fs
mov
ss
nop
dec
lret
dec
std
leave
adc
dec
push
test
mov
loope
movb
sbb
lock
adc
pop
dec
mov
js
inc
jb
push
stc
jne
dec
pop
lcall
daa
mov
jae
mov
cltd
and
push
add
outsl
pop
mov
lock
cmp
lret
xor
push
int
clc
push
mov
lcall
decb
sbb
mov
mov
aam
cmp
push
sbb
push
mov
icebp
int
inc
push
ret
mov
popa
inc
mov
dec
mov
fnsave
lods
sahf
movsl
mov
mov
jne
aam
mov
jmp
adc
lock
mov
fstl
sahf
addb
ret
data16
mov
mov
jo
cltd
mov
out
pushf
mov
loope
hlt
inc
ss
test
test
shll
mov
add
mov
clc
fstl
fs
or
dec
add
add
dec
mov
sub
push
adc
inc
xor
test
xor
pop
push
adc
mov
lret
aam
push
outsl
mov
dec
pop
dec
xchg
cmpsl
lock
xor
push
sarb
jle
xchg
mov
popf
arpl
xor
push
idivl
mov
mov
mov
daa
cli
inc
bound
jb
xor
outsb
pop
mov
mov
mov
inc
jle
cmpsb
push
xchg
pop
iret
outsl
ds
je
inc
ret
loope
imul
or
jns
push
sbb
push
rcr
push
xor
notl
lods
insl
lods
or
test
loopne
nop
int
pushf
push
push
mov
sbb
lea
inc
lcall
jno
push
adc
fs
xchg
mov
loop
add
mov
lods
push
or
sub
mov
addb
push
add
idivl
fwait
rcl
sbb
js
je
std
pop
out
adc
or
add
adc
mov
test
movsb
xchg
xor
push
fucomip
ja
bound
jae
bnd
out
inc
imul
jns
xchg
ret
sbb
lock
fists
inc
and
adc
out
clc
pushf
lea
sub
mov
jmp
jge
dec
js
cmp
pop
lock
daa
xor
fwait
je
pop
ret
sbb
fstl
sub
inc
dec
stos
or
ret
orb
cmpsl
add
addl
stc
loope
push
gs
outsb
mov
addr16
es
cmp
add
lods
lret
enter
mov
mov
rol
pop
aad
sti
repnz
mov
in
stos
jg
addr16
mov
lea
cwtl
rcrb
fucom
insb
dec
dec
add
jl
jle
dec
mov
cltd
lahf
mov
adc
mov
cmp
inc
sub
jne
mov
inc
ds
arpl
scas
mov
lods
ret
faddp
adc
inc
sbb
adc
sbb
fidivrs
xchg
add
pop
adc
adc
rolb
lahf
sub
in
or
inc
jb
pop
out
out
and
jns
int3
dec
pop
outsb
movlps
mov
dec
inc
or
imul
add
cmp
pop
mulb
sbb
inc
mov
push
sti
popa
push
aad
push
and
xchg
stos
xor
xor
test
push
popa
dec
ret
jmp
std
push
xor
nop
out
cmp
das
sub
imul
loopne
or
filds
jbe
or
pop
into
push
push
in
or
adc
xor
pop
movsl
cmpsb
push
lcall
ret
sub
popf
lret
imul
xchg
mov
cld
cltd
in
inc
xchg
jns
dec
loop
cmp
sahf
sbb
mov
fistl
cmpsb
push
fmulp
ret
pop
xor
fmul
movups
push
inc
jge
leave
imul
call
scas
push
cmp
xlat
jp
int3
into
fistpll
push
loop
mov
mov
add
xor
leave
mov
int
jne
stos
cmpsb
scas
insb
pop
addr16
sbb
push
mov
dec
mov
xor
push
cltd
insl
dec
pop
add
jo
and
mov
incb
adc
lahf
in
arpl
add
ficomps
inc
mov
das
mov
mov
adc
inc
jbe
fadds
mov
xlat
sbbb
pop
mov
mov
push
rcll
cmp
std
push
mov
jo
cmp
mov
add
jmp
loopne
cs
std
jp
inc
push
mov
cli
push
mov
xor
and
in
stos
pop
mov
inc
jg
cli
mov
push
gs
cli
femms
mov
in
fstpl
mov
les
outsb
movsl
mov
pushf
data16
stc
mov
xchg
jns
cmp
aas
int
add
fimuls
add
xlat
addr16
aam
inc
mov
and
daa
mov
fildl
insl
daa
sti
mov
imul
test
iret
out
or
and
and
pop
test
cmc
sahf
lahf
push
inc
and
dec
arpl
mov
pop
xchg
repz
iret
jno
scas
pusha
ret
sub
mov
pop
mov
ffree
jb
jg
ss
imul
cwtl
rorb
aas
std
jns
fwait
loopne
stos
clc
sbb
inc
sbb
mov
xor
pop
cs
outsl
and
inc
xchg
and
lds
jmp
jle
jbe
push
dec
loop
push
mov
xor
out
dec
stos
enter
dec
add
xor
outsl
cmp
mov
mov
mov
test
bound
xor
pop
jge
xor
add
in
xchg
roll
pop
push
flds
arpl
std
sbb
sbb
loop
jb
gs
xor
push
inc
mov
rcrb
stos
cmpsb
nop
add
and
mov
stos
adc
sahf
test
stos
repz
stos
and
mov
push
xor
test
jo
ss
add
mov
dec
clc
scas
mov
sbb
orb
std
mov
inc
pop
cld
mov
xchg
xchg
rcrl
fsts
in
inc
mov
push
add
lock
and
divb
mov
orl
push
inc
dec
lahf
push
pusha
and
xor
add
adc
in
hlt
rol
aam
movsb
nop
mov
test
je
inc
jo
pusha
and
xor
add
adc
in
hlt
rol
aam
movsb
nop
mov
test
je
inc
jo
pusha
and
xor
add
adc
in
hlt
rol
aam
movsb
nop
mov
test
jbe
inc
jo
pusha
adc
test
xchg
and
rorb
push
lock
rcrl
cmp
jnp
imul
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
cmpsl
add
xor
sub
jno
xorl
mov
shll
loope
icebp
cmpsl
add
xor
inc
notl
popa
xlat
jno
xorl
mov
shll
mov
mov
xchg
xchg
xor
inc
notl
popa
xlat
jno
sub
xchg
je
cmp
or
mov
hlt
dec
in
cmpsl
xchg
mov
mov
in
cltd
iret
hlt
inc
xor
push
addr16
lret
xor
or
int
jae
int3
and
shrl
outsb
mov
bound
pop
pop
cmp
dec
pop
pop
mov
and
popf
daa
jl
outsb
clc
popa
jge
mov
xchg
js
adc
xchg
icebp
in
push
xor
inc
out
cmp
mov
std
mov
loope
stos
pop
cs
push
push
jl
loope
out
in
movsb
scas
into
pop
inc
cld
inc
je
repnz
jge
pop
pop
sahf
jno
shll
cmpsl
push
inc
jl
xchg
out
rolb
pop
xor
fdivrl
adc
xchg
ja
pop
xchg
pushl
jbe
inc
cmc
aas
lock
add
xor
inc
notl
popa
xlat
jno
xorl
mov
shll
loope
cwtl
loope
ficoms
loop
repnz
mov
xchg
and
xor
fs
jnp
add
add
xlat
and
inc
mov
push
xlat
jno
stc
xor
fiadds
mov
push
mov
out
dec
xchg
push
out
notl
popa
xlat
jno
xorl
mov
shll
loope
icebp
cmpsl
add
xor
inc
notl
popa
xlat
jno
xorl
mov
shll
loope
icebp
cmpsl
add
pop
cmp
mov
cmp
out
ret
add
lods
inc
fsubl
mov
in
icebp
sahf
or
cmp
mov
mov
outsl
and
xor
or
or
in
pextrw
sbb
jbe
or
xchg
repz
insb
cmp
push
jnp
stc
sarb
xor
bound
xorb
imul
mov
sbb
leave
mov
int3
and
stos
ret
inc
jno
stos
pop
cmp
sbb
lret
mov
inc
in
lcall
orl
lret
cli
sbb
cmpsl
test
mov
xor
mov
fs
dec
push
adc
or
push
xlat
mov
jns
out
shll
lret
add
aam
ss
shl
xchg
xor
insb
int
xlat
scas
push
sbbl
cmpsb
add
bound
dec
mov
out
pusha
jle
cmpsb
pop
pop
mov
sti
lcall
aad
mov
out
cmp
les
push
cmp
push
jg
or
mov
xor
inc
lret
aaa
in
pop
aas
mov
mov
add
add
jg
mov
nop
and
mov
popf
sbb
lret
inc
movsl
ljmp
std
mov
in
ror
mov
test
lcall
mov
add
xor
add
fwait
std
mov
lcall
push
scas
jg
add
push
outsb
mov
xchg
pop
test
jl
dec
jo
rcrb
fsubrl
sbb
inc
xor
pushw
xchg
into
imul
sub
das
std
loope
adc
cwtl
mov
ss
xor
push
jle
pushf
clc
test
test
int3
mov
xor
dec
pushf
pop
lock
jo
add
out
xchg
xchg
xchg
xor
mov
in
lock
std
inc
mov
rorb
cmp
test
ljmp
fistpll
out
push
adc
adc
ret
or
inc
and
insl
js
jns
push
adc
fcmovu
sub
rolb
bound
insl
xor
cmp
lock
push
ret
fidivs
mov
hlt
ljmp
out
xlat
lock
and
and
add
cmp
jecxz
xor
ficoms
inc
int3
push
pop
pusha
dec
adc
xor
call
sarl
mov
cmc
clc
xchg
jae
fwait
push
pop
dec
mov
dec
popa
in
stos
dec
cmp
pusha
sti
outsl
push
pop
mov
jns
and
jne
inc
aam
jae
jp
push
xor
sub
adc
aam
mov
xor
jnp
out
aam
dec
enter
mov
push
mov
fidivl
aam
test
sbb
dec
test
adc
jo
ja
mov
fdivrs
addr16
push
mov
orl
sub
mov
push
or
lods
inc
mov
ljmp
sti
push
pop
lret
out
imulb
lcall
cltd
fidivl
xor
jg
sub
repnz
mov
or
jl
std
mov
xor
xlat
sbb
addr16
mov
jmp
and
ds
mov
lahf
mov
pop
push
loopne
xchg
pushl
vpunpcklbw
addr16
sbb
add
lea
out
jmp
xor
sub
sbb
roll
mov
mov
mov
push
dec
outsb
sar
jo
mov
dec
shrl
push
jbe
adc
mov
jbe
out
cld
push
repnz
sub
cmp
push
sub
orb
mov
pop
push
mov
rorl
out
arpl
jbe
pop
xchg
lret
cmpsb
fninit
jge
xchg
int3
pop
andb
insl
jae
lahf
scas
insb
xorl
icebp
and
jle
daa
scas
js
outsl
sti
insl
aad
pushl
test
pop
popf
ja
imul
adc
test
mov
adc
loop
lea
shll
adc
divb
xor
rcrb
add
je
sub
pop
leave
loopne
popf
jnp
cli
out
into
mov
aaa
push
lods
outsl
ja
jno
loop
or
pop
add
imul
dec
cmp
push
enter
adc
movsb
xorb
cmp
xchg
sarl
lock
arpl
iret
add
mov
test
mov
jnp
and
inc
aam
outsb
mov
mov
jecxz
pop
add
push
ret
ja
clc
or
test
sahf
int
sbb
imul
mov
jg
xlat
jbe
ljmp
push
add
sub
push
imul
data16
es
sbb
mov
pop
xor
shll
ret
out
sbb
sbb
daa
dec
sub
and
pop
sahf
hlt
cmp
xor
dec
inc
cmp
sbb
lcall
pop
mov
clc
fstl
add
xchg
xchg
jns
mov
cmp
fistps
sti
push
cmp
jge
shll
fmuls
inc
dec
in
icebp
mov
js
add
pop
cmovne
je
addb
mov
xchg
pop
out
repnz
xchg
push
rclb
lods
jmp
push
xchg
sbb
mov
fdivrs
pusha
sbb
jge
pop
subb
leave
mov
sbb
icebp
cli
mov
fstl
pop
movq
or
xlat
add
into
xchg
dec
jge
xlat
jmp
fldcw
sub
mov
ja
lds
mov
aam
mov
popa
xchg
outsb
push
and
aam
ss
mov
jb
fidivrs
dec
mov
inc
sbb
cmp
xchg
cmpsl
das
ret
int3
daa
sbb
cli
pop
imul
fcomps
dec
add
or
mov
jo
iret
gs
pusha
pop
out
xchg
cld
lret
test
pop
rorl
jno
inc
add
jne
cmp
popf
movsl
jge
xor
in
in
imul
mov
jne
outsb
xor
stos
lret
mov
mov
mov
cmp
pop
fisubs
dec
and
into
enter
sbb
and
add
daa
mov
dec
clc
sti
popf
adc
arpl
cmp
bound
pop
shrl
adc
mov
xlat
xchg
fldt
movsb
popa
mov
xor
gs
ret
lcall
jae
das
push
add
xor
popf
les
cld
pop
mov
int
popa
sub
roll
test
mov
lock
ljmp
dec
ljmp
sub
mov
in
adc
sbb
push
pop
mov
into
push
sub
enter
jg
in
dec
pop
xchg
adc
ja
test
sarb
mov
std
pop
jg
sub
xchg
sub
and
lea
cmpsl
push
lods
push
scas
popf
jb
push
sbb
insl
rorb
addb
push
sarb
ds
add
and
mov
sub
test
fmuls
inc
lahf
shld
xor
xchg
repz
or
push
sbb
aam
sbb
imul
pop
repz
dec
gs
xchg
mov
or
add
fistl
imull
je
push
test
cli
xor
sub
ja
in
pusha
loope
outsb
xor
pop
es
lds
sahf
dec
push
pushf
mov
scas
in
aam
andps
stos
inc
repnz
hlt
fnstcw
mov
cmp
and
movsl
adc
pop
jg
fimull
cmc
sub
adc
popa
mov
fsts
lret
mov
fstl
xor
outsl
xor
movsl
cmp
outsb
aam
imul
aas
popf
xchg
mov
aad
adc
popf
loop
push
lahf
push
test
mov
jns
movsb
mov
ret
scas
push
or
test
lret
sub
jbe
inc
mov
mov
adc
fisubs
dec
dec
xchg
add
push
mov
addr16
rol
scas
out
mov
lret
test
push
xchg
lods
jle
psubsw
aad
shll
scas
scas
jno
add
pop
dec
popf
and
add
lret
pop
jnp
test
sbb
cmp
scas
sub
sub
sbb
mov
loope
and
add
insl
add
outsl
lea
cmp
and
jne
out
push
push
xor
xchg
push
ficoms
mov
push
xor
xchg
adc
hlt
jmp
rclb
je
sub
nop
addr16
sahf
mov
add
sbb
dec
and
out
mov
out
fisubs
sub
sbb
pop
xor
loope
mov
mov
sti
push
adc
ds
add
push
shr
arpl
dec
add
or
mov
inc
in
xor
aad
inc
xchg
rcrl
mov
adc
mov
aaa
inc
jne
xchg
test
test
cld
mov
adc
fimull
mov
add
dec
inc
hlt
jbe
dec
js
pop
daa
jmp
push
add
xchg
popa
or
std
pushf
xlat
sub
sub
pcmpgtb
push
lret
mov
imulb
jbe
test
fistpl
pop
jle
leave
rcr
push
mov
lock
mov
add
addl
dec
sub
cld
xlat
push
loopne
sub
mov
ret
mov
cmp
jb
mov
push
adc
sub
cmp
jle
stos
inc
dec
scas
jecxz
lds
push
and
or
stos
ret
inc
dec
inc
mov
enter
insl
stc
aam
insl
cmp
es
pushf
lds
xor
ret
mov
rol
xchg
hlt
decl
sbb
jmp
iret
pop
adcb
xchg
mov
cmp
push
in
aas
cmp
add
shrl
repz
mov
cwtl
imul
xlat
jo
push
std
les
in
mov
je
cmp
fwait
adc
cmp
insb
jbe
fdivl
sbb
sub
xchg
mov
push
mov
sub
cmp
cmc
lods
test
cmp
ljmp
ret
fmul
loop
ret
js
push
cli
hlt
add
sarl
fldcw
cmc
pop
push
xchg
int3
jnp
jns
inc
lock
mov
dec
pop
ficoml
scas
xorw
daa
outsb
fisubrl
push
jns
or
in
ret
jnp
addr16
jae
lahf
lret
inc
xlat
popa
fcomps
jnp
ljmp
lds
dec
loop
xchg
gs
roll
fildll
fists
mov
cmp
jo
test
mov
cmp
cmp
shll
stos
xchg
inc
dec
sub
cmpsb
xchg
pop
xor
mov
adc
push
fsubrs
in
inc
sbb
shrl
pop
cmpsb
push
jle
xor
add
pop
xor
roll
stc
mov
inc
dec
sti
addr16
sbb
imul
cmp
push
lret
scas
xchg
push
sbb
sbb
out
push
jb
xchg
mov
out
xor
push
jg
mov
and
bound
inc
or
stos
repnz
outsb
or
sbb
sub
push
pop
repz
pop
xor
or
jae
cmpl
das
mulb
or
dec
mov
xchg
sbb
jno
jae
das
jb
jae
inc
add
xchg
hlt
xchg
pop
push
fcom
scas
push
xlat
xor
in
add
pop
enter
or
mov
xchg
jge
outsb
sbb
cmp
jmp
testl
cmpsb
aam
mov
cmp
aaa
loope
lret
ss
xlat
push
aaa
outsb
jg
push
data16
xchg
dec
pusha
cmp
mov
mov
mov
fildl
add
out
xor
mov
ss
mov
pop
imul
cmpsb
push
push
jnp
in
sub
les
bound
daa
leave
xor
mov
out
sbb
push
enter
jge
xchg
js
dec
pop
mov
insl
scas
mov
or
sub
xor
adc
lahf
mov
out
subb
call
adc
mov
jns
and
jl
outsb
mov
dec
hlt
call
ret
pop
insl
xchg
mov
and
popa
lret
leave
movsb
fwait
lods
testb
outsl
jae
lods
mov
adc
mov
mov
mov
repnz
push
popa
mov
mov
push
shll
ds
std
lock
and
popf
lods
mov
fldt
sbbb
xchg
adc
lcall
mov
fmull
out
pop
std
fnstenv
stos
nop
out
movsb
sbb
rclb
sbb
mov
cmp
dec
sub
mov
add
ret
stos
gs
xchg
jo
out
cmp
shrl
xlat
rolb
shlb
test
fistps
or
adc
or
pop
leave
push
mov
pop
lds
xchg
lahf
rolb
dec
push
movsb
jl
pop
add
lds
rcll
cmp
rol
mov
cmp
push
dec
fs
pushf
mov
divl
lods
add
inc
push
lods
pushf
mov
je
jle
add
int3
stc
push
xor
jno
push
inc
std
mov
adc
lret
je
xor
sbb
xor
push
rcll
jb
cmpsl
and
aad
mov
add
imul
sbb
fmull
das
dec
lahf
push
sub
sub
fadds
xchg
repnz
loop
scas
ss
out
cmp
out
in
mov
xor
pop
sub
in
mov
or
sub
push
lock
xor
in
popa
lods
xchg
es
mov
in
aas
fistpl
inc
push
sbb
and
scas
cmpsb
jae
test
pop
and
xor
add
shll
daa
loop
sbb
cmp
sarl
mov
les
insl
or
fistpl
cmp
jbe
sti
sub
xor
rol
sbbl
test
or
mov
adc
dec
out
icebp
mov
decb
mov
hlt
lcall
aas
and
imul
iret
lea
aas
add
loope
out
gs
adc
xor
pop
aas
std
loope
xchg
pop
ret
push
push
cmpb
inc
cmp
dec
fcmove
or
dec
je
cmp
js
jb
push
adc
adc
hlt
xor
into
jp
pop
mov
jno
or
push
ret
xchg
sub
into
clc
cmpsb
jb
push
xlat
int3
movsl
ljmp
loopne
push
lock
sbbl
inc
lret
int
mov
stos
sti
jl
push
sub
cmc
movq
inc
push
fstps
jge
les
adc
mov
xor
lock
lcall
fidivs
cmpsl
ss
or
xor
dec
cs
fsubrl
xchg
adc
imul
jae
inc
mov
mov
adc
pop
jnp
pop
lds
and
inc
movsl
dec
aas
in
lock
push
outsl
inc
addb
movsb
cmp
das
cltd
jbe
pop
insb
ret
ret
mov
call
xchg
push
cmp
push
call
es
aaa
aaa
jno
imul
xor
rolb
mov
fucomp
pop
sub
icebp
push
push
hlt
test
cltd
push
imul
xor
loopne
fsubr
fmull
push
mov
inc
inc
ret
aam
jae
pop
push
xchg
cld
pusha
xor
sub
cwtl
sub
or
pushf
inc
push
mov
mov
lock
mov
jmp
sbb
adc
lret
sbb
xor
ja
dec
scas
insb
mov
jno
and
adc
mov
adc
mov
and
and
lods
and
stos
jp
les
mov
pop
adc
and
out
arpl
cmpsb
clc
inc
lds
roll
xchg
fisttps
imul
ds
lock
jecxz
fldcw
scas
cld
into
adc
jg
cmp
int3
push
xchg
ficompl
dec
cltd
lret
push
inc
iret
aas
vpmacsdd
sahf
and
iret
fwait
pcmpgtd
enter
mov
add
mov
lock
dec
call
inc
addr16
push
mov
scas
sbb
loop
hlt
cmp
or
push
pop
das
mov
pop
inc
arpl
fmull
xchg
sub
ss
mov
jp
fdivrs
fildll
sbb
cld
xchg
repnz
test
adc
imul
aaa
test
pop
cmpsl
je
test
cmp
lods
pop
push
sbb
push
pop
leave
in
dec
test
cld
imul
aam
out
xor
sbb
jns
in
fiaddl
lods
and
mov
xchg
in
stos
and
dec
stc
rorl
andb
sbb
enter
stos
lods
imul
dec
les
jl
adc
shrl
loopne
iret
cwtl
insl
cmc
fildl
pop
test
jb
add
int
ss
daa
cmp
clc
pop
mov
add
aam
sbb
xor
fwait
mov
dec
aas
sub
stc
add
xchg
rcrl
pop
popf
mov
notl
xchg
pop
and
jecxz
push
dec
xor
fadds
aaa
lods
pop
pop
popf
pop
xor
jl
in
mov
and
in
mov
sub
in
orb
dec
sub
mov
and
mov
and
or
idivb
dec
loopne
pop
xlat
orl
out
cmp
popa
insb
call
int
sbb
inc
cwtl
add
and
inc
les
or
cli
fs
ror
adc
cli
in
std
mov
aas
ss
dec
mov
add
cld
xchg
fisttps
lret
mov
cld
mov
imul
call
cltd
movsb
sbb
mov
adc
jo
sbb
rolb
pop
gs
ljmp
imul
frstor
jnp
pop
test
adc
or
int
lods
or
popl
shll
sub
daa
movsb
pop
sarb
inc
pop
jge
add
movsl
or
inc
mov
test
rolb
mov
mov
push
mov
mov
and
push
scas
lahf
mov
jge
daa
push
rclb
ret
inc
in
xor
xchg
shlb
rolb
test
cli
stos
pushf
shlb
mov
cmp
mov
xor
hlt
data16
mov
push
test
std
mov
and
shr
pop
ret
jb
dec
loopne
mov
mov
xchg
sbb
lcall
js
outsl
dec
ja
mov
mov
call
stc
or
lds
xor
inc
flds
xor
cltd
adc
out
stos
js
dec
inc
js
dec
sbb
pop
aad
stos
out
arpl
mov
inc
nop
fsubr
outsb
out
out
jae
sub
xor
movsl
out
mov
mov
ljmp
scas
insl
decb
int
test
dec
pop
or
or
lods
mov
test
addb
sbb
stos
xchg
and
loope
in
enter
ja
push
push
stos
jns
pop
cld
dec
ds
stos
cli
xchg
sub
pop
out
dec
mov
jp
dec
inc
mov
out
js
inc
pop
movsl
data16
xlat
jb
sti
gs
push
in
movsl
nop
aaa
mov
nop
fbstp
mov
inc
imul
in
xlat
mov
sahf
filds
push
cmpb
movsl
or
dec
xchg
pop
mov
std
aam
ljmp
fwait
leave
sbb
test
jno
push
xchg
enter
test
push
sbb
ficomps
inc
orb
xor
and
pop
and
push
cmp
out
addr16
pop
xor
fstp
push
sti
ficomps
lahf
rcll
fnsave
jo
mov
xor
arpl
xor
xlat
xchg
inc
fcmovu
cmp
clc
mov
xor
lret
scas
cmp
mov
pop
rcrl
and
lds
loopne
testb
mov
scas
mov
cmc
popf
loop
cwtl
sbb
push
pop
jp
je
inc
testb
outsb
loope
inc
pop
subb
xchg
mov
push
mov
neg
jecxz
call
emms
jno
movsb
xor
outsb
mov
push
inc
cwtl
aaa
ljmp
or
popa
sbb
out
xlat
js
or
inc
add
add
mov
add
lock
mov
dec
test
xor
int3
mull
cmpsl
mov
or
out
shl
test
jo
dec
clc
mov
cmpsb
pop
inc
inc
pop
pusha
scas
inc
sbb
add
mov
enter
cmp
mov
jno
shll
aas
mov
and
push
popa
xlat
jno
xorl
mov
shll
loope
icebp
cmpsl
add
xor
inc
notl
popa
xlat
jno
xorl
mov
shll
loope
icebp
cmpsl
add
xor
inc
not
popa
xlat
jno
add
xchg
pop
mov
ja
inc
loope
icebp
cmpsl
add
xor
inc
notl
popa
xlat
jno
xorl
adc
cs
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
lahf
nop
pop
les
mov
movsb
cmc
cmc
jg
or
rcrb
and
push
fisubrs
sete
test
mov
movsb
dec
aam
les
jg
adc
add
cmp
and
jp
inc
out
je
fs
pop
inc
das
cs
rorb
pop
mov
jg
adc
daa
into
push
ficoml
pop
mov
iret
push
nop
add
pop
lds
outsl
rol
jg
xchg
ja
and
mov
mov
mov
xchg
xchg
inc
pop
sarb
rcll
or
sbb
jmp
clc
test
je
inc
and
out
pop
sub
in
pop
push
dec
cmp
cmp
adc
inc
fidivl
pop
mov
enter
cmpxchg
movsb
dec
shlb
xor
imul
inc
mov
decl
loopne
jl
sub
out
lds
jg
out
ljmp
ds
push
add
imull
jnp
sarl
xchg
test
push
xor
cmp
add
cwtl
decb
push
sbb
movsb
das
sarb
dec
aam
les
jg
adc
lods
scas
ss
stos
out
insb
call
xchg
pop
jmp
fdivs
or
cmp
out
sub
inc
mov
add
ret
ja
sub
pop
xlat
fnsave
jno
data16
sbb
jns
xor
pop
enter
les
jg
adc
add
xor
and
push
filds
jmp
pop
test
mov
movsb
dec
aam
les
jg
adc
add
xor
and
push
filds
jmp
sbb
mov
mov
inc
mov
push
je
repz
pop
push
aam
orb
ja
fbld
jg
int3
or
aad
sbb
jmp
test
pushf
jnp
jno
ljmp
xchg
jne
ret
xchg
clc
adc
push
and
pop
cmp
ret
and
out
pop
shll
push
mov
pop
adc
sub
decb
sbb
xchg
movsb
jl
into
out
in
mov
push
jns
and
adc
xchg
push
gs
daa
dec
mov
int
pop
fsubrl
out
ret
jns
insl
js
mov
cmpsl
out
jmp
pop
rolb
jnp
mov
movsl
test
arpl
cmp
lea
data16
xchg
mov
aad
dec
popf
ficoms
aam
rclb
mov
cmp
sbbl
mov
push
mov
sahf
les
test
jns
mov
or
aam
scas
adc
push
or
jmp
hlt
int3
dec
pushf
fcoml
cmp
rolb
or
scas
sti
push
stos
gs
fimull
push
int3
push
push
add
int
or
cmp
push
inc
pop
icebp
push
cmp
hlt
test
jg
or
mov
fimull
mov
test
test
rcrl
mov
scas
imul
xor
lds
and
push
mov
adc
vunpcklps
test
je,pn
std
push
cli
test
sbb
repz
pusha
xor
repz
scas
pop
sbb
mov
mov
fstpt
scas
push
insl
data16
xor
push
cmp
cmp
gs
test
daa
test
cmc
pop
js,pt
xor
jo
lock
iret
ret
int
xchg
pop
gs
test
inc
add
mov
gs
pop
pop
inc
inc
es
int3
js
ret
in
fmul
lret
loopne
sub
cmp
sti
lret
aad
insl
loopne
das
in
sbbb
scas
add
ljmp
push
ffreep
mull
ret
pop
rclb
xor
dec
mov
lods
cmpl
mov
mov
add
in
cmp
jo
xorl
and
pop
fldenv
es
or
jae
fmull
dec
gs
fdivr
xchg
lahf
pusha
pop
in
xor
sub
fdivr
jge
arpl
out
mov
test
shlb
push
mov
cmp
pop
outsb
and
and
xor
enter
sbb
out
mov
in
test
mov
pop
daa
shr
xchg
or
xchg
push
pop
mov
push
xchg
data16
push
or
add
sub
fistl
mov
adc
push
arpl
sahf
cmp
div
mov
call
add
lahf
cltd
jns
pop
jmp
sbb
int3
mov
in
repz
int3
add
mov
aaa
mov
mov
fidivrs
sahf
jecxz
inc
movsl
stc
mov
lret
es
in
or
or
fstpt
outsb
out
mull
pop
cmp
jb
mov
cmpsl
jbe
repz
addr16
in
and
aaa
mov
mov
int3
in
loopne
stos
xor
dec
popa
pop
jae
cmp
sbb
insl
out
fiaddl
loope
rcr
mov
push
xor
xor
sub
mov
push
int3
dec
mov
stos
adc
addl
jb
dec
push
cmp
cs
sbb
dec
sbb
push
nop
xchg
mov
daa
fisubs
inc
sti
daa
mov
out
or
jge
ret
or
lcall
es
push
inc
xchg
sbb
ficoml
repz
fistps
xorl
jns
insb
leave
nop
fisubl
imulb
scas
mov
mov
xchg
pop
lock
jecxz
pop
push
adc
std
sub
lcall
xchg
xchg
int3
mov
sbb
cmc
cmpsb
sub
std
xor
cmpsl
xor
enter
mov
jnp
inc
jo
xchg
mov
add
mov
test
scas
mov
push
and
add
popf
and
sbb
xchg
scas
sbb
stc
dec
sbb
stos
pop
xchg
push
scas
sahf
wbinvd
inc
mov
mov
mov
mov
inc
pushf
bound
push
sbb
push
jge
das
insb
int
cmp
pcmpgtb
jo
inc
imul
fucomip
mov
in
lock
push
sbb
jns
pop
xchg
fisubl
call
aas
xorb
pop
roll
mov
inc
icebp
sahf
xchg
or
repz
sbb
or
mov
retw
gs
lcall
fstps
das
stos
shld
mov
xchg
xchg
xlat
ret
adc
dec
out
mov
in
out
movsb
stos
movsb
rclb
popa
ret
and
leave
xchg
inc
pop
push
lea
fsts
sub
shll
jbe
sbb
subb
add
or
mov
mov
ja
adc
dec
push
jg
jno
xchg
incb
push
pop
dec
xor
ret
outsl
cmp
pop
push
xchg
mov
jecxz
cli
adc
mov
dec
add
jae
cmpb
js
xchg
xchg
push
and
fs
mov
dec
adc
add
and
rcr
lret
jae
aas
je
push
cmp
fwait
dec
cmp
jp
pop
mov
decl
fnstsw
pop
adc
push
data16
dec
popa
addr16
inc
adc
dec
pop
xchg
xchg
lret
insb
pop
fwait
cmpsb
in
out
ret
push
dec
xchg
ret
push
mov
push
dec
imull
dec
add
popa
and
inc
push
ja
pop
add
shll
jl
adc
jge
xchg
push
scas
jne
mov
add
jg
call
mov
xlat
add
das
out
mov
lods
jnp
testl
push
shl
aad
test
jl
es
fwait
testl
inc
adc
aas
dec
push
lret
xor
decb
adc
push
and
mov
repz
addl
mov
push
sbb
clc
dec
xor
jle
out
fsub
dec
int
mov
xchg
mov
mov
out
jg
adc
inc
pop
push
add
xorb
sub
insl
cmp
jmp
or
mov
inc
or
adc
outsl
mov
stc
dec
mov
fstps
outsl
jmp
and
adc
pop
cmp
int3
pop
xlat
testb
ss
adc
bound
mov
jg
push
or
add
cmp
pop
jae
dec
xor
ljmp
and
jge
mov
push
test
pop
test
pop
in
testb
aas
std
mov
cmp
push
mull
xor
sahf
test
pop
push
es
mov
xor
rcr
and
stos
xlat
inc
lods
rcl
lcall
adc
lods
xchg
movsl
das
insl
pusha
or
or
mov
pusha
push
outsl
mov
out
add
test
sbb
sarl
fsub
or
mov
lds
pop
loope
inc
and
hlt
xchg
pop
push
ret
pop
xchg
push
jp
in
out
cmc
imul
inc
push
cs
out
push
xchg
or
and
push
lcall
in
push
stos
popf
xor
jns
or
bound
or
xchg
sahf
scas
jecxz
fwait
lock
xchg
xchg
jp
aas
mov
sbb
ds
and
call
fwait
push
mov
aad
clc
xchg
mov
xor
movlhps
mov
repz
aas
ror
push
sub
test
aam
in
jmp
sub
ret
movd
repz
jle,pn
jno
pushf
test
out
es
pusha
callw
push
icebp
stos
ja
xchg
rorb
loope
dec
add
push
mov
popf
push
lret
add
jecxz
xor
mov
loop
or
inc
jge
mov
ret
iret
push
mov
sub
inc
aam
add
out
pop
ja
inc
sbb
jbe
mov
mov
cld
je
test
data16
call
fisttpll
ja
imul
mov
push
insl
les
fisubrs
push
fcoml
pop
scas
lcall
stc
inc
add
rorl
ret
adc
xor
dec
cs
lcall
addr16
adc
mov
fcoml
push
dec
sbb
lods
jne
cld
mov
and
dec
cmpb
add
scas
sub
jl
inc
incb
ficoml
dec
dec
jnp
sahf
leave
sub
roll
pop
enter
cmp
xor
aam
sahf
sbb
lods
mov
pop
cwtl
and
jnp
fstp
scas
js
pop
mov
js
adc
xchg
loop
aad
xor
mov
inc
jno
sahf
addr16
push
push
fisttpll
inc
pusha
xor
fiaddl
arpl
mov
shrl
mov
adc
ret
mov
test
pop
sbb
cmpsb
in
pop
js
and
aaa
outsl
ss
mov
jo
mov
pop
sbb
lock
pop
ja
rorl
bnd
mov
mov
lret
dec
ljmp
mov
test
mov
pop
int
adcl
add
mov
jb
xchg
sbb
int
mov
add
les
sbb
int
mov
xor
mov
je
movsb
cmpsb
das
add
mov
test
jne
jb
imul
mov
dec
adc
mov
lret
pop
pop
shlb
adc
mov
lahf
mov
nop
mov
flds
es
jo
std
ss
dec
mov
nop
rcl
pop
push
lea
inc
or
jbe
mov
mov
mov
sub
nop
jl
pop
lea
imul
shl
push
sub
jg
push
cmp
sbb
ficoms
fistl
xor
pop
xchg
xorl
inc
fucomip
or
xchg
mov
cli
pop
or
scas
mov
jecxz
xchg
imul
inc
test
mov
cmp
clc
hlt
loope
push
cmp
push
js
popf
hlt
in
scas
gs
or
call
outsb
xchg
cmp
cmp
pop
dec
loop
addr16
enter
jp
out
adc
jmp
pop
xchg
inc
and
xchg
int3
mov
and
stc
dec
lret
xchg
fsubl
insb
push
stos
rorb
add
push
aam
je
lret
mov
insl
pop
xchg
cmpsl
pop
int
mov
loop
push
sbb
popf
dec
or
sub
dec
hlt
inc
push
in
mov
push
cs
mulb
jns
ret
idivl
fstpl
jo
pop
pop
adc
sbb
jno
pop
add
xlat
push
clc
mov
cmpsb
test
leave
or
xchg
sub
jne
sub
in
loopew
add
mov
sbb
cs
aaa
sbb
ret
xor
fcoms
daa
adc
sti
cmp
mov
sub
cmpsl
into
testl
adc
lret
clc
out
enter
jnp
imul
cmpsb
cwtl
mov
hlt
out
inc
jbe
test
sbbb
stc
hlt
sbb
mov
or
test
punpckhwd
icebp
mov
hlt
and
ja
lock
add
jb
xorb
int3
imul
aas
sbb
push
call
sub
dec
int
adc
xor
push
sbb
sbb
sub
aas
pop
enter
or
orl
test
mov
mov
pop
mov
pop
push
jle
mov
lcall
xchg
stos
arpl
pop
push
lret
add
cmp
xchg
add
sub
cltd
xor
and
stos
push
aad
xchg
push
inc
repnz
push
pop
bound
xchg
jle
jg
jl
sarb
pop
adc
dec
push
sub
out
fistps
push
out
inc
push
into
out
ljmp
cmp
andb
add
push
pop
call
push
jb
mov
adc
insl
cmp
daa
xchg
add
imul
incl
std
ss
dec
cmp
dec
mov
inc
jmp
cli
addb
std
dec
cltd
test
js
adc
mov
clc
xlat
leave
mov
inc
stc
test
mov
jl
aad
in
sub
adcl
repnz
cli
es
add
or
mov
pop
icebp
lcall
dec
addb
mov
cmpl
sub
cs
outsb
and
add
mov
push
in
add
fwait
lahf
jbe
imul
adc
mov
call
imul
movsb
dec
test
inc
inc
andl
rclb
nop
pop
sti
test
popa
mov
and
push
fisubrs
roll
fcomp
dec
js
mov
inc
add
dec
addr16
imul
xchg
sahf
decb
nop
add
jno
mov
adc
push
shr
test
loop
mov
pop
dec
jb
fcoms
dec
jne
xor
pop
insb
iret
lret
inc
out
push
dec
dec
add
cltd
outsl
cmp
out
cmp
and
mov
addr16
sbb
cmc
leave
inc
cmpsb
mov
fisubrl
mov
xor
mov
xlat
pop
xchg
mov
xor
in
mov
jns
addr16
xchg
bound
int3
loope
outsb
mulb
sarl
push
mov
jnp
dec
sub
inc
xchg
sub
mov
inc
jo
dec
or
dec
cmp
and
push
mov
popa
dec
lret
stc
pop
cmc
movsb
bound
mov
and
aam
jae
in
mov
mov
ret
repnz
and
jmp
es
add
sbbl
rcll
js
cmc
lahf
jl
aad
mov
sub
adc
mov
je
cmp
out
dec
mov
pop
mov
ja
push
aaa
cli
dec
xchg
mov
pop
push
aad
sti
aad
ret
out
test
js
pop
mov
ss
lahf
sub
mov
jp
out
or
mov
aam
cmc
jno
fs
and
pop
lods
mov
std
mov
fisttpll
push
je
mov
scas
push
dec
ds
addl
push
outsl
push
pusha
fbstp
fcoml
leave
mov
mov
lods
out
mov
les
pop
leave
popa
jmp
stc
loopne
adc
inc
rorb
jmp
sbb
push
adc
iret
insb
jbe
into
insl
nop
xchg
into
out
insl
sahf
sbb
mov
decb
mov
std
mov
push
push
pop
mov
fwait
shll
push
lret
pop
loopne
adc
fiaddl
popa
push
or
in
or
jge
jp
pop
daa
lea
jmp
popf
pop
insl
mov
lahf
cmpsb
out
xchg
or
shlb
inc
add
push
movsl
lcall
jg
or
pop
out
cli
les
xor
inc
ret
sub
test
sbb
sti
dec
xlat
outsb
sub
mov
int3
mul
xchg
pop
jno
arpl
or
lock
inc
jmp
mov
js
sahf
rcrl
push
je
adc
ja
repnz
aad
movsb
pop
lret
outsl
fnstenv
popa
inc
mov
div
loopne
push
xchg
shrl
sub
roll
insl
stos
popf
inc
mov
inc
bound
push
lret
and
lahf
je
arpl
or
nop
push
dec
cltd
mov
in
xor
sbb
dec
cmp
lret
and
dec
jno
scas
or
dec
cmp
test
ret
pusha
lahf
daa
jle
xor
mov
sbb
and
push
cmp
fwait
inc
inc
xor
mov
mov
jg
aas
arpl
lea
dec
es
mov
sbb
inc
and
sbb
and
ds
notl
and
sub
and
inc
int3
mov
jle
clc
call
ret
stos
aam
test
cmp
inc
scas
mov
push
ljmp
pop
arpl
push
ss
push
pop
rcll
mov
shlb
pop
add
leave
lret
add
mov
dec
dec
cmp
das
sub
jns
das
icebp
stos
ret
jmp
and
adc
insl
repnz
cmpsb
testb
test
subl
adc
mov
fisubs
push
mov
scas
jbe
stc
push
mov
fisubl
mov
inc
cmpsl
dec
insb
test
pushf
push
mov
lahf
lea
popf
or
lret
cmp
inc
xchg
pop
cmp
repnz
cwtl
lret
mov
push
repz
es
jecxz
bound
out
jb
imul
add
or
scas
aaa
imulb
inc
out
adc
das
cmc
jmp
cld
stos
pop
and
iret
jno
mov
repnz
jl
pop
daa
jne
add
dec
loop
cmp
shll
cmp
loop
pop
xchg
pop
dec
cmp
add
repnz
loope
iret
push
roll
in
jbe
mov
or
sbb
cld
lret
adc
js
cmp
inc
pop
clc
les
xchg
arpl
loope
xchg
inc
or
icebp
cmpsl
push
lahf
hlt
sti
mov
xor
add
ss
mov
lret
sbb
ret
cmp
mov
shrb
in
jae
fdivrp
xchg
mov
scas
outsl
push
xor
xor
rcr
test
sub
bound
mov
push
imull
inc
mov
pop
add
sarl
mov
adc
enter
pop
js
out
and
mov
mov
adc
mov
mov
push
test
sti
and
mov
push
insl
outsb
sub
and
int3
outsl
cli
mov
imul
popa
orl
clc
pushf
add
mov
jae
in
sub
out
testl
shlb
sbb
sub
mov
shlb
sahf
outsl
jne
sub
jp
mov
cmc
jg
jno
cmpsl
fwait
aas
test
adc
pop
jecxz
pop
push
dec
pushf
lock
adc
push
and
xchg
push
nop
xchg
out
std
aaa
pop
andb
repz
push
push
xchg
dec
and
imul
xchg
sti
fisttpl
je
xor
rcll
pop
sbb
dec
shrl
mov
push
loopne
sub
pop
pop
push
jo
lock
ja
pusha
bound
pop
dec
mov
in
les
es
cli
rorb
ror
fstps
xlat
xchg
jae
add
out
add
mov
sbb
add
mov
xchg
les
icebp
insb
jo
test
shlb
inc
or
test
jbe
shrb
je
clc
mov
cli
mov
adc
cmpb
lcall
jb
out
leave
arpl
popf
stos
and
sbb
xor
xor
jo
test
ficoml
sarl
ss
jnp
int3
cmpsb
xchg
cmpsl
pop
ret
xorb
xchg
scas
dec
and
popa
sar
jnp
shll
cmpsb
scas
adc
push
test
decb
mov
stc
and
addb
insl
cwtl
and
sarl
iret
cs
push
jae
pop
jl
std
dec
sub
adc
mov
pop
push
pop
ret
out
xchg
outsb
push
mov
push
pop
mov
cmc
int
adc
jmp
clc
mov
mov
inc
enter
xor
les
xor
idivb
push
loopne,pn
xchg
mov
mov
mov
push
out
out
jmp
dec
in
inc
xor
pusha
lahf
out
cltd
in
mov
enter
cs
xor
jecxz
fwait
or
pop
push
aas
adc
roll
push
xor
rcll
aas
push
push
xor
jns
xor
es
nop
popa
xchg
and
and
cmp
dec
dec
inc
mov
inc
int3
mov
fcmovne
testb
adc
pop
fldenv
movsb
push
bound
jo
jl
loope
ja
push
lock
cld
sahf
or
test
pusha
jmp
push
repnz
inc
cmp
fiaddl
mov
xchg
loop
lcall
fdivp
imull
aas
lods
lret
xor
jl
xor
pop
mov
ror
cld
push
sub
xchg
je
mov
adcb
mov
lock
in
rorl
mov
sub
pop
arpl
int3
test
aam
les
jg
adc
add
xor
and
push
filds
jmp
pop
test
mov
movsb
dec
aam
les
jg
adc
add
xor
and
push
filds
jmp
pop
mov
lods
aas
mov
outsl
lock
adc
mov
inc
out
jge
orb
push
pusha
cs
aas
in
aam
les
jg
jmp
scas
add
sub
cmp
or
sbb
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
