add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
sbb
add
test
call
add
or
pop
add
push
add
add
add
pusha
add
add
add
add
add
mov
add
mov
add
add
add
adc
adc
adc
xor
add
cmp
imul
jo
popl
scas
add
add
add
add
mov
add
add
outsb
add
add
add
add
add
jo
mov
add
lea
inc
add
add
add
add
lea
stos
add
add
add
add
lea
dec
add
add
mov
add
add
add
cmp
jo
mov
add
lea
inc
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
popl
aas
add
add
sahf
add
or
or
add
cmp
and
bound
mov
add
stos
add
add
add
add
add
add
cmp
aad
push
add
add
add
add
add
add
stos
add
flds
lret
add
inc
add
add
push
add
add
add
pop
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
adc
imul
add
or
add
enter
mov
ljmp
add
add
add
add
add
add
add
add
or
outsl
add
add
add
add
add
add
add
add
ljmp
add
outsl
add
add
add
add
add
add
add
mov
add
add
add
add
add
cmp
sbb
cmp
pop
add
sbb
popl
and
mov
add
bound
testl
sti
add
add
add
stos
add
add
add
in
stos
add
add
adc
sub
add
stos
add
add
add
jb
stos
add
add
arpl
sub
add
stos
add
add
add
stc
add
add
lret
add
add
add
cmp
je
leave
add
je
outsb
add
add
pop
add
add
add
ret
add
mov
add
add
add
add
add
sbb
jb
mov
add
add
add
stos
add
add
adc
ljmp
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
and
icebp
add
add
mov
adc
sub
repnz
add
add
or
add
add
push
add
or
add
add
mov
or
add
add
add
add
mov
shl
xchg
push
sbb
int
cmp
and
jg
aad
pop
and
push
das
shlb
out
imulb
popf
push
dec
out
cmp
sbb
mov
push
outsl
fstpl
and
out
std
pop
jl
dec
shrl
pop
rorl
in
xchg
sub
andb
in
cli
jp
pop
xorb
dec
cwtl
inc
inc
adc
push
mov
ja
fmulp
es
add
test
cmp
pop
mov
movsl
xchg
js
in
clc
aaa
mov
into
add
stos
inc
push
mov
shlb
in
xor
cltd
xor
jo
and
push
sbb
jae
push
xor
dec
movsb
mov
stc
sub
push
stc
pop
cmp
jbe
cmc
ljmp
subb
leave
mov
jl
sub
sarb
adc
sub
pop
cmpsl
js
add
sbbl
fwait
adc
mov
int3
xchg
aas
mov
dec
mov
dec
inc
push
xorl
or
dec
sub
xchg
push
les
mov
mov
pop
pop
into
stos
sub
dec
xchg
push
xchg
mov
pop
xchg
pop
sbb
arpl
dec
pop
add
add
fstp
add
test
xchg
fs
mov
testb
ret
dec
sub
jecxz
iret
pop
sub
jp
push
cltd
or
in
lods
lcall
popa
stos
es
mov
cmpb
testl
cltd
idiv
inc
fsts
and
xor
mov
iret
or
loop
das
fcomps
add
int3
pop
les
mov
adc
enter
jno
pop
or
mov
adc
add
or
das
adc
ljmp
test
lret
lds
inc
adc
mov
std
or
mov
decl
incb
adc
roll
cmpsb
mov
cmpsl
jo
mov
movsl
fwait
ret
mov
lock
mov
fs
ljmp
inc
gs
mov
jge
fs
into
cmpb
jecxz
jne
mov
push
pop
clc
imul
aas
sbb
icebp
xchg
lods
bound
pusha
pop
pop
mov
lret
in
popa
jns
jne
push
movsl
mov
adc
jmp
dec
shll
xor
imul
mov
arpl
daa
int
sbb
daa
rclb
jb
push
fsubrs
out
fidivrl
push
mov
push
cmp
fimull
adc
insb
fwait
pop
ret
in
cwtl
sbb
cmpsl
in
inc
mov
pop
add
mov
jmp
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
and
xor
add
adc
push
add
and
xor
test
jne
add
adc
xor
xor
add
adc
test
movsl
push
shlb
xchg
jne
pusha
hlt
adc
and
xor
add
adc
test
movsl
push
mov
inc
mov
testl
xchg
dec
mov
inc
insl
mov
and
je
iret
cmpsb
scas
mov
outsb
test
outsl
mov
pusha
dec
ficoml
icebp
cltd
js
xchg
lock
mov
stos
or
loope
lds
mov
xor
enter
jle
jbe
inc
ficoms
decb
mov
dec
xor
mov
mov
mov
mov
sbb
xor
outsb
sbb
fisttps
jg
inc
hlt
push
mov
mov
sbb
add
fistpl
std
pushf
lret
mov
inc
ficoms
adc
mov
adc
inc
les
xor
add
adc
test
movsl
push
mov
inc
mov
test
jne
add
aam
lds
popa
movsb
jno
or
cmp
shl
mov
out
clc
add
adcb
daa
test
jno
and
sbb
inc
repnz
fwait
shll
daa
lds
shll
andl
popa
dec
test
insl
adcb
inc
movsl
push
mov
inc
mov
test
jne
add
aam
and
xor
add
adc
test
movsl
push
mov
inc
mov
test
jne
add
aam
and
xchg
std
mov
jo
pop
jnp
jbe
sub
push
push
movsb
and
stos
into
pushf
rclb
mov
test
mov
daa
and
lods
push
enter
out
movsb
mov
push
jae
loop
iret
cli
jle
imul
inc
add
inc
ret
clc
in
bswap
sub
cmp
iret
push
add
call
pop
mov
pop
cmp
loope
mov
int3
and
push
jne
jmp
xor
sarl
popa
sub
dec
lods
gs
int
and
or
pop
or
cwtl
mov
mov
jl
in
push
js
test
jmp
mov
mov
je
or
shrb
daa
out
fisttpll
inc
and
or
pop
xchg
push
jp
repnz
mov
cmp
fs
fsts
dec
sarb
inc
jge
in
cmp
shll
mov
call
cld
mov
jl
dec
lea
lds
ljmp
add
mov
inc
dec
xor
mov
mov
aas
test
mov
popf
shrl
int
mov
mov
jno
mov
mov
or
jecxz
push
lods
inc
ret
arpl
jbe
les
hlt
loopne
add
and
mov
imul
testb
adc
jmp
add
fcoml
mov
pop
mov
cwtl
insb
cwtl
ljmp
ret
push
incl
sub
sub
push
outsl
mov
movsb
in
mov
push
pop
lcall
addb
out
push
pop
aad
and
sbb
sub
pop
in
mov
insl
cmp
mov
mov
das
push
inc
xchg
mov
pop
lods
out
int
add
insb
xor
cwtl
addl
sbb
jmp
mov
and
into
push
mov
nop
cltd
jg
aam
jge
xchg
out
or
mov
mov
in
xchg
adcl
dec
shll
push
push
mov
hlt
or
js
adc
loope
and
sti
in
adc
and
jne
jb
add
mov
add
ja
dec
hlt
inc
call
cmpsl
xchg
xchg
or
add
daa
data16
icebp
sbb
push
add
cmp
fs
sbbl
int3
jne
jl
xor
add
out
mov
daa
sub
sub
or
mov
cmp
jo
jno
add
fisubrs
push
push
fisttps
hlt
xor
push
outsl
sub
sbb
nop
fadd
sbb
out
les
lods
and
jbe
iret
sbb
pop
and
adc
or
sbb
in
sub
das
push
pop
mov
mov
and
loop
push
flds
popf
dec
dec
mov
insb
stos
clc
dec
mov
sub
jbe
lea
and
cmp
mov
rcrl
add
push
sbb
scas
pop
cmc
scas
sub
hlt
add
fwait
pushf
jns
cmp
jns
mov
pop
xlat
rcl
sub
sub
pop
push
mov
mov
inc
or
imul
scas
loopne
xor
push
loopne
push
cmp
ss
dec
pop
mov
rcrl
inc
cmp
cli
test
jns
je
popa
cmp
cmpsb
push
pop
lret
stos
outsb
in
mov
adc
mov
mov
inc
mov
not
idivb
out
mov
xor
rcl
sarl
hlt
xchg
fisttps
clc
lret
das
int3
out
pop
xorb
dec
xor
cmp
dec
jecxz
push
cwtl
add
jb
mov
mov
outsl
lret
popf
sub
lock
dec
push
bound
sahf
lock
push
mov
lret
pop
in
add
pop
jno
stc
push
pop
pop
ss
sbb
and
aas
gs
push
in
jge
and
test
lds
sub
inc
fstpl
cmp
lods
je
sahf
rorl
outsb
loop
xchg
add
push
fcompl
push
inc
outsb
jae
insl
jmp
xchg
dec
add
and
dec
arpl
pop
mov
ds
fwait
aaa
add
pop
adc
loop
cmp
ja
mov
ret
pop
cmp
xlat
stos
dec
cmc
lret
das
add
mov
pop
ret
cmp
cmpsb
test
js
xchg
jbe
insl
jge
add
dec
and
mov
dec
add
sbb
lret
ret
leave
sub
movsb
fwait
mov
mov
inc
dec
xchg
cs
xchg
aam
pop
imul
cld
stos
sub
faddl
cmp
push
and
jge
push
cmp
inc
out
lcall
gs
in
adcl
dec
iret
sub
and
fistps
xchg
add
mov
mov
jge
cmp
cli
mov
mov
addl
dec
push
dec
shrl
into
fdivrl
jo
jge
and
mov
loope
rcrb
add
sbb
andb
dec
adc
push
dec
imul
cmp
std
adc
movups
js
int
push
jbe
jae
xchg
pop
subl
sub
mov
push
dec
or
sbb
mov
and
jno
cli
gs
cmp
popf
movsb
inc
sub
gs
fnstsw
mov
loop
scas
cmpsb
mov
and
fxch
xchg
sub
subb
out
int
push
inc
cmpsl
das
dec
add
ret
outsb
jnp
mov
sbb
mov
mov
sbb
mov
shrl
cmp
cmp
mov
xor
push
dec
pop
xchg
dec
mov
inc
ja,pt
push
cwtl
and
mov
adc
cmp
shll
test
movsl
in
aas
push
stos
dec
lods
ss
loop
adc
mov
push
push
pusha
inc
mov
hlt
push
add
fisttps
or
ret
stos
inc
bound
xchg
fiadds
inc
adc
pop
adc
cmp
sbb
xor
push
mov
mov
cli
test
es
loope
popa
dec
orb
js
ret
cwtl
scas
enter
jno
adc
or
into
fimull
daa
ja
mov
inc
pop
xor
shl
popa
push
mov
lsl
jns
mov
push
shrl
xor
and
out
add
or
stos
jno
lock
sar
push
add
jo
add
aaa
mov
aas
enter
inc
jle
outsb
es
inc
push
insl
and
or
dec
test
sub
flds
sbbl
loope
adc
leave
stos
xchg
dec
sbb
jecxz
in
pop
rclb
repz
ss
pop
flds
jno
pop
mov
add
ja
pop
push
cld
icebp
lret
sbb
mov
into
add
lahf
hlt
incl
adc
jno
jb
out
mov
xchg
in
mov
in
loope
fcmovu
cbtw
rcll
mov
jecxz
adc
xor
inc
jae
imul
out
fcmovnbe
sub
sarb
mov
outsb
ficompl
movsl
bsf
bound
dec
dec
dec
cmp
sahf
cmpsb
out
cmp
push
call
ret
dec
lcall
fcmove
and
mov
cmc
lret
out
pop
in
push
int
xchg
cmpsb
mov
popa
loopne
xchg
jno
pushf
mov
add
leave
and
adc
hlt
aad
enter
push
inc
fs
repnz
jl
push
out
and
sbb
mov
mov
lods
cld
movsb
inc
fstps
dec
jle
pop
jno
and
jb
movsl
sub
dec
or
jo
lock
add
dec
inc
mov
jbe
dec
out
pop
aad
adc
cmp
push
pop
lret
inc
int
push
lret
dec
insl
dec
inc
sub
pop
mov
insb
inc
jno
jp
mov
mov
jl
ret
std
jne
mov
dec
push
in
adc
sub
ss
or
shr
fldenv
mov
jo
cmp
and
rcrb
lret
mov
rcrb
mov
jbe
sub
push
push
mov
aas
xchg
mov
std
mov
test
sub
rcr
in
sub
add
arpl
loop
mov
pop
movsb
fnop
xchg
lods
mov
or
push
mov
fs
cmp
and
xchg
mov
scas
mov
adc
pop
or
imul
dec
out
lods
xchg
mov
cmp
insl
cmpsb
lods
pop
divl
dec
and
mov
jb
loopne
mov
push
pop
cld
rcrb
aas
push
lea
xchg
pop
mov
jnp
cmp
out
add
mov
pushf
out
stc
sub
pop
int
inc
or
add
insb
jb
lret
lret
sbb
dec
test
aam
push
je
mov
sbb
clc
stos
adc
mov
pop
fwait
and
mov
gs
xchg
xlat
cmp
psubusb
fwait
mov
cmp
int
push
mov
pushl
add
cmp
mov
imul
js
adc
inc
mov
js
idivl
pushf
imul
mov
hlt
loope
cmpsb
iret
sub
mov
mov
call
negb
mov
cli
addr16
ss
and
pop
jb
inc
in
dec
jne
sarb
mulb
jno
xchg
cmpsl
cmpsl
sbb
dec
lret
xchg
jns
pop
gs
daa
testb
iret
mov
aas
adc
orb
call
jp
dec
in
movsl
mov
out
sbb
aad
sbb
insb
dec
flds
lds
dec
pop
xor
sub
cmc
mov
sbb
jb
data16
xchg
jmp
push
xchg
cmp
add
cmpsb
lret
scas
inc
cwtl
jg
mov
or
jp
xchg
and
ljmp
push
movsb
ljmp
sub
repnz
in
or
fstl
or
in
imul
lret
mov
testl
lods
mov
xchg
aam
out
pop
and
stos
ss
cli
adc
or
cld
into
out
push
inc
fsubrs
xor
into
mov
push
es
popa
sub
cmc
cld
or
imul
inc
pusha
popa
loop
ljmp
repz
mov
test
mov
repnz
xor
clc
push
aaa
jne
hlt
outsb
insl
sarb
add
adc
js
sub
lahf
dec
push
lods
lds
xchg
lea
jbe
adc
push
mov
or
cmp
xchg
outsl
aaa
sbb
gs
push
push
mov
adc
pop
xchg
cltd
dec
cs
stos
dec
scas
filds
mov
mov
mov
xor
push
sub
push
mov
adc
mov
cmc
add
test
adc
mov
mov
std
ss
adc
cmp
sub
leave
pusha
mov
push
and
test
pop
cmp
add
dec
push
in
dec
inc
adc
mov
les
dec
insb
clc
js
fldt
popa
xchg
lds
aad
aaa
cmp
push
mov
mov
cmp
sahf
pop
loopne
mov
loopne
dec
jg
stos
or
shlb
cmp
lods
je
popf
mov
cwtl
jo
pop
mov
fisubrl
cmp
pushf
ret
mov
hlt
jge
jge
insb
pop
inc
inc
jae
lret
gs
out
rcrb
or
push
aad
and
and
push
or
jg
mov
int3
subl
sub
mov
jl
dec
inc
out
jp
aam
adc
pop
mov
push
and
imul
or
sarl
addr16
mov
test
cmp
push
mov
or
ljmp
pop
iret
pop
pop
pop
je
inc
in
insl
movsl
cs
stos
pop
push
xor
add
jge
adc
mov
cmp
and
lods
mov
inc
xorb
push
and
jmp
out
sti
in
std
pop
data16
sub
xchg
jmp
mov
orb
in
das
mov
fistl
ret
cmp
push
cmpl
mov
orb
pop
ljmp
loope
xchg
jae
mov
inc
push
xor
or
insl
or
in
repnz
lods
loop
push
fwait
xchg
ja
ss
daa
dec
push
cltd
insb
and
rorl
adc
arpl
and
pop
test
ljmp
cmp
cmp
xor
rcrb
and
sub
pop
imul
repz
inc
icebp
push
xor
pop
xchg
out
lds
adc
xchg
mov
fimuls
and
jl,pt
adc
sub
jnp
cld
adc
iret
and
mov
push
mov
fistps
movsl
adc
insb
dec
mov
fisubs
ret
sbb
mov
cmp
out
adc
xlat
dec
xor
push
dec
cmc
fdivs
jb
aas
xchg
mov
fwait
fwait
and
and
popa
jle
and
repnz
cmp
out
iret
push
inc
cmp
test
cmp
adc
mov
les
jo
stc
loope
xor
das
movb
xchg
popa
jmp
cld
test
push
mov
or
movsl
call
xchg
mov
and
outsb
insl
dec
mov
jl
in
push
sbbb
imul
and
rol
mov
icebp
lea
das
jp
out
dec
or
pop
repz
pop
mov
fsub
mov
inc
into
sti
gs
sahf
cld
xchg
push
xchg
movsl
sub
sar
mov
call
mov
push
in
jge
test
loope
cmp
lahf
dec
movsl
push
cmp
fimull
jle
call
fs
imul
vmovq
aad
adc
lcall
cs
lret
xchg
bound
jno
bound
loope
lea
xlat
inc
adc
mov
enter
sbb
test
insb
jnp
jp
sbb
mov
lea
outsb
mov
sbb
das
mov
aam
les
push
cmp
xchg
jg
mov
test
mov
and
cmp
pop
pushf
cmp
and
nop
popa
aam
mov
scas
or
test
int3
or
mov
push
jmp
jae
scas
jno
addl
int3
aam
mov
or
enter
lock
or
dec
jb
dec
mov
test
sbb
pop
insb
insl
add
lret
sahf
mov
or
or
inc
fsubrs
sub
xchg
or
leave
push
mov
cmc
mov
scas
cmp
push
mov
icebp
xchg
sbb
sbb
movsb
outsl
out
fbld
cmp
adc
cltd
sti
shll
out
jecxz
sbb
mov
enter
inc
push
dec
xchg
fstl
push
pop
addl
jge
dec
add
dec
in
sahf
fisttpll
cmp
shlb
int3
mov
mov
incb
mov
inc
mov
ja
mov
fsubl
inc
leave
negl
aas
in
mov
pop
jae
lds
dec
into
dec
xchg
int3
adc
movsb
mov
stos
add
mov
push
movsb
das
out
mov
inc
pop
xchg
pusha
jae
lock
ret
push
jle
push
mov
push
fisttpll
jae
mov
xchg
sbb
data16
mov
add
mov
xchg
inc
push
pop
dec
int3
push
fimull
push
lds
mov
add
jl
xchg
push
ja
int3
cwtl
push
sbb
jl
mov
out
cld
ljmp
std
mov
scas
mov
movsl
popa
sti
fisubs
aad
ror
leave
lret
xor
cli
sub
insb
int3
push
roll
cmp
scas
scas
ret
stos
int
scas
rcrb
jb
mov
inc
in
cs
int3
xchg
xchg
push
push
in
jmp
aad
stos
les
pop
push
dec
cmp
fs
sbb
push
mov
and
pushf
imul
dec
adc
jb
push
fidivrl
dec
mov
clc
dec
hlt
stos
imul
std
fcompl
inc
adc
sti
push
ficomps
lods
push
stc
xchg
cmp
sbb
cmp
xchg
fwait
aaa
imul
sub
es
imul
int3
jecxz
scas
mov
xchg
test
mov
popa
and
lcall
popa
jmp
add
xor
xlat
das
popf
lods
xchg
lds
mov
and
mov
mov
adc
movsl
push
sub
xchg
and
xchg
adc
mov
pop
lcall
imul
push
xchg
add
sbb
lock
mov
xchg
lods
shll
mov
xor
cli
add
movsb
mov
add
jne
mov
jo
rcll
xor
int
cmc
imul
out
cmp
fcmovbe
push
xlat
mov
cmpsl
movsb
scas
test
rolb
inc
xchg
inc
and
fistpll
push
cmp
stos
xor
loop
je
aad
int
cwtl
xchg
imul
push
mov
je
add
aam
xchg
xor
in
loopne
pop
bound
adc
test
mov
mov
pop
test
gs
fisubl
cltd
pop
ja
mov
add
mov
push
hlt
or
cmpsl
cmp
icebp
sti
ljmp
xchg
and
adc
cwtl
or
sub
pusha
insl
mov
jle
mov
add
negb
loop
cltd
call
mov
xor
out
jns
dec
dec
push
jle
or
jecxz
int
js
pop
gs
add
mov
sub
aam
pop
fstp
xor
mov
ds
je
sbb
fnstcw
aaa
pop
and
cmp
add
xor
sub
movsb
xchg
sahf
mov
int
sub
mov
hlt
add
daa
adc
xor
outsb
or
or
pusha
sbb
push
scas
stc
fs
fcmovnbe
daa
xor
inc
bound
rorb
dec
ret
mov
xlat
shrb
push
inc
aad
pop
mov
clc
out
xchg
dec
pop
repnz
push
mov
data16
pop
pop
jae
andb
loope
leave
xchg
test
ret
in
xchg
popf
adc
xchg
inc
xchg
jmp
cltd
ret
int3
mov
inc
cmp
mov
mov
mov
dec
sub
sbb
mov
sub
in
mov
movsl
or
jmp
addr16
pop
mov
repz
clc
dec
or
paddsw
adc
mov
movb
movsl
daa
out
shll
pushl
sarl
mov
sub
jge
push
inc
in
in
push
add
push
xchg
or
inc
adc
es
nop
into
fdivl
inc
add
cli
xor
stc
push
cmp
inc
push
cmp
sarl
push
sbb
push
std
xor
stos
add
jbe
daa
mov
fsts
xchg
cmp
bound
dec
jne
sub
cli
add
lods
lock
pop
jmp
push
out
mov
add
addr16
popl
adc
mov
dec
subb
lret
adc
jp
xchg
cmpsb
sbb
dec
cmp
mov
mov
shll
adcb
xchg
sbb
add
jecxz
adc
lea
sub
dec
jge
add
dec
cli
jle
ja
stos
stos
cmp
pop
pop
mov
xorb
jnp
cld
mov
push
cmp
inc
into
test
aaa
add
or
push
test
dec
rorl
dec
repnz
loopne
adc
adc
sub
scas
cmp
push
jle
sbb
push
popf
into
orl
stc
inc
outsb
cld
out
cs
sbb
mov
mov
xchg
sub
sub
jg
pop
data16
in
and
insb
push
rorl
popf
mov
xchg
inc
or
mov
popf
stc
movsl
ret
dec
jnp
adc
push
jecxz
ljmp
out
and
aas
xchg
loop
sub
leave
inc
out
jle
mov
mov
lods
jge
pop
outsl
lea
mov
jo
hlt
xchg
inc
das
aad
or
stos
jge
stc
je
or
test
cmp
mov
and
jmp
sub
out
mov
sbb
push
gs
cmp
xor
cld
addl
or
push
scas
jae
and
shlb
enter
and
push
lcall
jge
jp
dec
xchg
pushf
arpl
xchg
xchg
stos
inc
xchg
push
push
pop
lock
inc
or
sti
pusha
add
je
pop
pop
push
fimull
out
cltd
xor
pop
icebp
rorb
outsl
stc
pop
dec
popf
repnz
fsts
pushf
xlat
inc
cmpsb
pushf
insb
cmpsb
fcomps
aas
mov
cmp
or
cld
lea
js
in
pop
pop
push
xchg
xchg
sbb
sbb
je
jo
cld
add
fidivs
aad
in
cmc
test
movsl
push
mov
inc
mov
test
jne
add
aam
and
xor
add
adc
test
movsl
push
mov
inc
mov
test
jne
add
aam
and
xor
add
adc
test
movsl
push
mov
inc
mov
test
jne
add
aam
and
xor
add
adc
test
movsl
push
jne
inc
mov
cs
add
fisubrl
lret
loop
rorb
pop
push
inc
int
loopne
sbb
clc
push
enter
test
cmp
repnz
ret
sub
sbb
bound
xor
add
lret
pop
stos
sub
sbb
inc
clc
or
in
dec
xlat
dec
cli
push
cwtl
fwait
push
mov
loope
mov
sbb
jbe
lock
and
lret
pop
jae
sbb
cmpsl
cwtl
stos
mov
pop
testl
mov
push
adc
std
leave
or
mov
es
and
or
and
adc
adc
jge
sti
sbb
cmp
and
xor
addr16
mov
inc
cltd
ja
adc
pop
int
cmpsl
dec
sub
fwait
jb
movsb
scas
push
aaa
mov
lret
inc
in
ja
adc
xchg
cs
mov
jge
clc
lea
adc
ja
jno
adc
js
dec
ret
sub
sbb
jp
dec
enter
test
mov
sahf
pop
xchg
and
cmp
inc
orb
push
mov
mov
inc
lret
pusha
mov
popf
push
mov
fisubs
pop
xchg
jg
sbb
nop
pop
lea
add
fs
enterw
sub
sub
sbb
clc
push
enter
test
mov
repnz
ret
sub
sbb
clc
push
enter
test
mov
repnz
mov
fsubp
leave
lock
ret
or
sbb
inc
rorb
dec
popa
cmp
cmpsl
loopne
addr16
cmp
mov
sbb
fnstsw
mov
mov
inc
and
push
add
jp
lods
mov
push
int3
cltd
scas
or
xor
addb
sub
mov
es
inc
leave
inc
mov
mov
mov
movsb
pop
popf
js
icebp
xchg
pop
imul
aad
pop
fsubl
adc
push
mov
fcomps
popf
sub
sbb
xchg
xchg
mov
mov
mov
sub
jecxz
inc
xchg
ss
mov
pop
cmp
inc
dec
cmovb
aad
inc
add
insl
xor
imul
cltd
rclb
insb
sbb
xor
movsl
lods
fidivrl
out
lret
ja
or
lret
and
out
std
es
sub
aam
mov
test
sub
push
inc
mov
sub
add
pop
aad
mov
jb
adc
mov
dec
push
clc
push
into
jbe
mov
jle
int3
ret
lret
out
shll
mov
and
jmp
nop
clc
sub
and
popf
adc
pop
in
sbb
inc
dec
inc
sbbb
rorb
push
insb
ss
lods
addr16
mov
mov
dec
scas
xor
dec
addb
mov
mov
clc
cmpl
test
cmp
xor
xlat
and
mov
adc
add
test
cli
mov
cld
lahf
ror
movl
ss
icebp
or
push
ja
popf
push
pop
jle
mov
int3
std
xor
rorb
out
shlb
js
fdivrl
sub
xchg
data16
sti
cmc
xchg
int3
stos
jmp
jecxz
cmp
mov
mov
and
and
and
in
mov
cmp
mov
or
pusha
mov
add
xchg
lds
call
loopne
mov
mov
ja
imul
xor
mov
mov
jb
insb
and
in
addr16
arpl
cli
inc
jg
lea
inc
mov
adc
iret
mov
stc
adc
popa
sub
wrmsr
xor
data16
push
pop
aas
push
aaa
shrl
xchg
xor
add
ret
pop
inc
loopne
sub
cwtl
mov
sbb
not
stos
jecxz
mov
mov
roll
xchg
and
neg
add
sub
hlt
scas
inc
scas
cmp
inc
addr16
fisubrs
cmpsb
not
movsb
js
iret
test
mov
loopne
adc
repnz
push
test
loop
in
mov
lret
and
xchg
lcall
subb
test
mov
cli
pop
in
fstpt
jecxz
add
ret
sub
push
xor
cmpsb
mov
cmovne
push
int
adc
pop
and
insb
lret
and
dec
sti
adc
inc
mov
int3
jne
push
imul
cmpsb
addl
mov
lret
into
jmp
xlat
sub
outsl
jecxz
loop
test
add
ja
and
lret
jno
mov
popa
mov
pop
push
xchg
pop
adc
adc
xchg
cmp
loop
daa
movq
rorl
movsl
in
and
mov
dec
mov
or
xchg
movsl
and
push
xchg
pusha
xchg
mov
repnz
mov
out
fs
cmp
mov
jne
loop
or
out
hlt
xchg
push
push
stos
and
adc
cmp
push
sbb
adc
loop
dec
es
scas
add
mov
dec
pop
inc
je
fs
pop
mov
in
test
ror
push
movl
jb
jecxz
aad
push
lret
push
loopne
mov
push
xlat
push
jg
jmp
inc
cmp
pop
mov
push
rorl
insb
into
idivb
mov
movsl
inc
repnz
subb
adc
mov
xchg
fdivl
jno
pop
subb
mov
xchg
and
cmp
cwtl
cmp
mov
enter
adc
mov
sahf
clc
jmp
jmp
jo
ljmp
sarb
pop
enter
xor
lds
mov
mov
ror
xor
addb
mov
cmpsl
pop
shlb
movsl
jg
push
sahf
in
aas
sbb
fscale
in
adc
shl
jl
pop
adc
mov
mov
and
cmp
inc
xchg
mov
fadd
ds
jge
or
xor
xchg
xchg
push
pop
inc
rclb
sahf
lds
pusha
loop
adcl
ret
cmp
push
imul
sub
lahf
cmpsb
into
mov
pop
rorb
lret
jo
inc
jmp
cmpsl
aaa
pop
aam
rcrb
aaa
xor
jnp
pop
sbb
enter
into
repz
imul
subb
test
pop
sub
std
cltd
jecxz
adc
inc
out
daa
ja
cmp
addr16
xchg
inc
pop
pop
dec
std
pop
add
dec
inc
icebp
js
insl
sbb
shll
mov
aas
push
adc
or
imul
or
pushf
inc
ret
fdivs
inc
sub
pop
inc
add
aam
addr16
pop
jmp
adcl
test
test
jmp
add
fwait
scas
dec
incb
jmp
nop
pushf
int
mov
mov
aam
fcoms
movsb
add
cmp
aam
mov
mov
add
idiv
and
jne
pusha
inc
fisttps
adc
or
xchg
inc
in
inc
sub
cld
iret
scas
add
repz
dec
testl
aad
jns
rcrl
inc
sub
add
hlt
sbb
jb
dec
test
cmp
aam
incb
jp
and
imul
icebp
shrb
data16
xchg
inc
fcmovnb
push
loopne
sub
add
fdiv
outsl
pushf
fwait
lods
ss
xor
cmp
icebp
imul
dec
js
test
int3
loopne
fdivrl
iret
iret
inc
insl
repz
xor
and
cmp
pop
cltd
cmp
pop
nop
int
mov
in
hlt
adc
repz
faddl
mov
mov
and
push
mov
imul
call
out
dec
and
ljmp
xor
js
jmp
jmp
inc
dec
loope
cmp
das
and
fnstcw
jecxz
rcll
mov
xchg
cmp
push
out
aad
mov
int
xchg
cmp
bnd
outsl
hlt
gs
lcall
mov
fucomip
xchg
and
lret
shrb
push
sti
or
add
cmc
mov
mov
and
xchg
cmpsb
out
int
hlt
jge
pop
fistpl
and
in
jl
dec
frstor
push
adc
mov
ja
fldt
out
sub
repnz
cmp
cmpl
mov
cmpsb
push
fildl
daa
clc
and
or
test
sbb
push
xor
cltd
pop
pushf
lds
mov
xor
sub
sahf
dec
sub
ljmp
stos
and
mov
xchg
pusha
dec
out
out
int3
inc
pop
imul
iret
xorl
adc
fs
sub
push
jns
push
cmp
fucomp
add
and
xor
fs
std
jp
sarl
sti
and
cwtl
outsl
adc
cld
jecxz
ficoml
fidivs
pop
cmpsl
or
cmpsl
cmp
inc
mov
frndint
mov
enter
dec
xor
fmuls
out
xor
pop
jno
inc
lcall
lods
mov
xor
pop
fidivrl
pushf
add
in
cmp
ficoms
mov
mov
mov
lods
cli
and
sbb
mov
push
lds
xchg
movsb
add
nop
lds
mov
jecxz
add
push
pusha
or
ljmp
popl
mov
mov
int
mov
lahf
add
mov
adc
or
sbb
mov
jae
arpl
loopne
nop
xchg
ret
xor
pop
lret
sbb
ficomps
les
cmp
jmp
enter
pushl
mov
cmc
jno
pop
cltd
clc
adc
cmp
insl
cltd
cmp
cli
hlt
mov
mov
dec
nop
mov
mov
nop
rcll
shll
push
xchg
inc
stc
stos
fdivl
dec
ljmp
shrl
mov
jb
jl
sub
dec
sarl
mov
rorl
lods
inc
repnz
popa
xchg
inc
lcall
lahf
jbe
clc
lahf
fldcw
fcmovb
xchg
pop
xchg
add
push
aad
sar
mov
mov
fmuls
pop
xor
outsl
sbb
add
std
add
sub
xchg
pop
sbb
loope
mov
std
jne
pop
addl
mov
mov
mov
xor
mov
add
add
sbb
movb
sub
movsl
icebp
mov
sub
sbb
aad
pop
das
mov
jne
mov
push
lds
adc
mov
mov
loopne
xchg
push
rol
dec
jle
push
or
sbb
out
scas
xchg
jmp
cltd
mov
rcrl
push
mov
lret
in
pop
sbb
mov
dec
or
adc
jo
in
in
aas
sub
jge
cmc
or
mov
jo
mov
pop
mov
add
mov
fwait
mov
xor
push
add
mov
das
seto
scas
iret
pop
xor
pop
mov
sbb
sbb
test
pushf
mov
fidivrl
push
adc
xchg
aam
pop
loopne
mov
push
mov
insl
mov
bound
xchg
je
lock
popf
int3
lods
repnz
xchg
ja
nop
pop
xlat
lods
add
scas
jmp
mov
or
mov
add
cltd
inc
inc
rcrl
and
inc
dec
cs
leave
in
addl
lahf
test
aam
inc
mov
pop
cmpsl
adc
fsubl
jo
in
roll
add
xchg
pop
push
mov
push
push
and
aaa
addb
mov
or
or
pop
and
ljmp
push
push
inc
sub
out
daa
icebp
loopne
mov
adc
or
xor
sbb
mov
pop
sbb
dec
in
ljmp
adc
xor
xchg
stos
mov
xchg
inc
mov
lock
imul
addr16
mov
loop
jg
fs
sub
int3
or
add
xlat
jbe
add
movsl
test
fidivs
ds
ss
add
push
aad
sbb
xchg
sub
xor
test
jmp
movsb
jno
jecxz
sub
and
jb
out
xorb
popa
cmp
in
adc
sti
mov
enter
sub
enter
inc
cli
fidivs
mov
add
pop
adc
insl
push
cmp
sub
lea
xchg
push
xchg
adc
add
mov
cld
jge
roll
mov
int3
fmuls
xchg
add
dec
aad
push
sub
jle
int
jnp
push
add
shll
jl
xor
jb
fldcw
movsl
lahf
rol
sub
subps
xchg
int3
lock
mov
cli
clc
scas
jp
mov
add
pop
pop
outsl
mov
int3
sbb
nop
mov
xor
out
and
push
sarb
or
int3
xchg
fldl
mov
cli
mov
xchg
sbb
sbb
jo
cmc
mov
adc
pop
pop
loop
dec
insl
lret
repz
cli
cld
cmp
mov
cli
je
addr16
jp
js
push
fisubrs
rorb
sbb
jg
inc
push
sbb
mov
jge
inc
mov
sahf
pop
inc
clc
push
test
xchg
jne
lea
mov
lods
xchg
cld
movsb
mov
jnp
cltd
dec
mov
fdivrp
in
cmpsb
out
cmpsb
rorl
add
mov
sub
repz
and
sbb
sbb
pop
jb
movsb
loopne
adc
call
lods
fiaddl
gs
std
popa
fwait
xor
pusha
mov
stos
inc
idivl
adc
xchg
sbb
inc
faddl
in
mov
jecxz
mov
xorb
xor
mov
sti
scas
dec
jl
dec
push
in
ret
sbb
pop
dec
cmp
add
xor
adc
cli
js
pop
mov
mov
jbe
in
xorb
jae
sub
pop
or
mov
sub
daa
loopne
lods
pop
jno
rol
clc
sarb
dec
jns
bound
mov
fdivp
pusha
hlt
outsl
push
fisttps
xchg
xor
mov
xchg
mov
mov
out
push
mov
shll
fld
clc
xchg
jl
pusha
js
stc
inc
pop
xchg
xchg
mov
shrl
sbb
mov
pop
neg
dec
and
out
cmpsb
add
xor
xchg
adc
fisubrl
stc
fs
lods
sbb
pusha
sub
inc
clc
inc
cmp
fldcw
add
cmp
add
xchg
mov
xchg
xor
popa
mov
mov
out
mov
xchg
jo
inc
mov
enter
pop
rcll
aad
or
int
popa
repnz
push
fcmovnb
add
cmpsl
imul
cmp
jns
roll
or
cwtl
shrl
loop
push
cmp
in
sub
lcall
lahf
mov
push
aas
rol
jmp
cmp
mov
sti
lods
sub
push
int3
mov
stos
sbb
popa
mov
in
int
lahf
pop
mov
sub
ljmp
cmp
dec
mov
leave
fdivrp
ret
dec
into
lret
push
sbb
es
pop
lods
mov
inc
das
dec
inc
jle
out
sbb
int3
inc
subl
imul
inc
xor
mov
jg
aad
test
in
jo
mov
add
push
inc
lods
push
xor
sub
lret
lock
sbb
out
pop
inc
mov
dec
sbb
sarl
and
arpl
fldenv
into
shl
jg
jns
out
cs
pop
adc
push
xchg
sti
ljmp
lea
push
jb
sarb
push
inc
xchg
and
popa
daa
add
mov
pop
mov
xor
xor
ss
sbb
mov
test
outsb
and
add
arpl
and
fcomip
mov
ljmp
lds
movsl
push
daa
mov
xchg
and
cwtl
fdivl
outsl
xchg
mov
scas
into
addr16
pop
xor
xchg
incb
and
sbb
push
pop
subl
cwtl
sub
loop
mov
and
div
popf
mov
jo
jne
sbb
mov
sbb
sub
sbb
jb
pusha
int3
add
movsb
fildl
sub
cmp
mov
fnstcw
rorl
rorl
lods
and
mov
sar
jp
out
adc
cmc
pop
addb
inc
in
das
add
addr16
cld
adc
test
js
push
or
popf
imul
adc
jle
cld
adc
aas
aad
sub
push
mov
sti
jb
sbb
test
bound
int3
push
dec
fisttpl
xor
js
xchg
cmp
adc
das
pop
pop
insb
sti
lcall
jge
rcrb
sub
in
pushf
adc
cmpsb
dec
xchg
push
xacquire
clc
lock
in
loop
data16
pop
lds
pop
mov
add
mov
or
jbe
cli
imull
mov
sahf
and
pop
mov
or
push
jno
nop
and
pop
scas
or
rep
add
add
pop
es
aam
es
xchg
and
ljmp
pop
xor
rcl
and
test
fnstsw
add
mov
adc
push
mov
arpl
les
sub
dec
test
add
cmp
xchg
out
cwtl
pop
xchg
sbb
dec
pop
xchg
pusha
jge
out
js
pop
and
lret
xchg
pop
testb
xchg
and
movb
xor
enter
fisubrl
scas
or
fldcw
int
popa
sub
jns
dec
js
sahf
sbbb
jle
inc
dec
shrl
cli
aas
popf
inc
mov
andb
idivl
push
call
out
pop
and
sbb
mov
lock
jne
iret
insl
mov
or
push
inc
mov
jnp
sub
push
xor
lret
aad
stos
mov
mov
hlt
fldl
dec
inc
rcrl
mov
test
adc
xor
dec
dec
stos
lret
shl
adc
add
pop
insl
in
lahf
sbb
loopne
pop
or
and
mov
sbb
push
sub
mov
jo
cmpsl
enter
mov
test
push
cmp
push
jg
add
and
xchg
nop
in
cmc
into
sub
ja
mov
ret
push
cmp
insl
cli
xor
and
inc
mov
xchg
shll
pop
pop
mov
push
jg
and
sbb
jmp
test
bound
jb
fildll
push
test
nop
arpl
jl
lret
leave
pop
xor
xor
pop
lret
in
fwait
and
imul
ja
mov
popf
es
pop
inc
pop
push
adc
sub
xor
cmp
out
popa
or
add
sbb
xor
sbb
or
cmpsb
dec
jp
and
pushf
movsl
shll
mov
scas
push
test
test
les
lods
mov
addb
mov
aad
add
ret
pusha
cwtl
or
mov
aas
repz
flds
push
push
fs
nop
add
loope
dec
jmp
lcall
clc
mov
sbb
push
sub
aam
lds
mov
cmc
xor
mov
movsl
xchg
inc
adc
pop
rcr
sub
pop
loope
movsb
or
push
int
bound
mov
mov
outsb
outsb
mov
test
insl
pop
jmp
jge
jmp
push
in
cmp
xchg
lret
mov
pop
hlt
inc
or
popa
mov
mov
jbe
xor
insl
mov
add
shlb
mov
cmp
dec
lcall
aam
mov
pop
lahf
movsb
aaa
adc
data16
mov
lea
inc
ret
lret
push
loop
pop
test
push
int3
inc
aas
sbb
jb
mov
xchg
or
inc
scas
push
inc
insb
xor
sub
adc
add
cmp
add
jmp
push
pop
inc
fldln2
fcoms
cs
or
fnstcw
sub
ja
cltd
cmp
mov
and
clc
mov
adc
xor
icebp
leave
enter
xor
pop
mov
adc
or
shrb
cmp
pop
adc
sbb
mov
lock
xor
and
popf
ja
ds
xchg
or
or
orl
or
fmulp
push
outsl
stc
insb
aad
outsl
add
or
addr16
mov
outsl
sub
ret
dec
fldl
push
mov
cwtl
and
js
cmp
mov
inc
adc
call
mov
adc
jns
cmp
adc
inc
and
pop
daa
jne
jnp
or
incl
mov
sub
push
notb
jge
lea
jge
mov
inc
bound
lahf
scas
push
call
stc
loop
push
mov
cmpsb
into
xor
stc
mov
mov
fsin
in
popf
clc
rcl
fst
xor
pushf
mov
inc
xor
push
imul
stos
xchg
pop
xlat
stc
test
sbb
cli
jns
and
jb
mull
shrb
mov
adc
arpl
fistpl
lret
repnz
sarl
data16
in
ds
and
lret
and
xor
jb
sbb
stc
testl
adc
loope
xchg
fldt
mov
addr16
dec
xlat
call
divb
into
out
cli
das
in
je,pt
fsubrs
xchg
shr
cmp
sub
xor
pop
dec
adc
rcll
pop
pushf
lea
xchg
sbb
cmp
mov
mov
mov
test
out
lret
cld
sbb
jg
int
aas
in
xor
jne
and
into
in
scas
jnp
push
dec
iret
inc
repz
cmpb
ffreep
adc
sbb
mov
call
mov
loopne
pop
js
sub
or
enter
push
cmc
mov
sub
mov
fmuls
pop
mov
mov
sbb
clc
push
enter
test
mov
repnz
ret
sub
sbb
clc
push
enter
test
mov
repnz
ret
sub
sbb
clc
push
enter
test
mov
repnz
ret
sub
sbb
enter
and
addr16
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
out
or
cmp
test
xchg
and
push
cmp
push
mov
fmul
lret
ljmp
cmp
sub
dec
les
push
lret
test
mov
scas
enter
call
mov
add
xchg
jo
inc
out
fsub
lret
xchg
mov
pop
sbb
data16
pop
jge
outsl
movnti
imul
add
inc
mov
xchg
pop
sbb
bound
mov
cmp
sub
mov
inc
mov
jnp
addr16
sbb
or
rorb
cmp
ficoms
ficoml
push
and
or
mov
pop
fdivs
inc
sub
pop
pop
mov
jnp
push
fsubrs
fxch
aaa
out
adc
loopne
imul
movsl
jl
or
pop
lret
ficompl
sub
lahf
pop
lahf
fmuls
mov
sub
lret
cmp
loopne
inc
stos
mov
fxch
aaa
mov
sbb
clc
cmp
dec
jp
shr
push
test
loopne
hlt
aam
cli
clc
mov
jle
inc
push
xor
aas
daa
imul
lret
int
int3
lret
shll
lods
mov
pop
orb
loope
xor
sub
push
sbb
std
lret
ffree
iret
test
cltd
stos
subl
dec
dec
push
dec
dec
jp
push
lcall
test
fmul
enter
call
cmp
sub
pop
pop
dec
dec
jp
push
lcall
test
fmul
enter
call
xchg
fwait
jne
push
shrl
or
cltd
lret
mov
int
jo
dec
pop
xchg
cmpsl
mov
dec
jg
cmp
xor
mov
dec
les
shrl
sbb
mov
dec
out
sahf
js
or
leave
adc
or
out
add
push
shrl
jecxz
dec
lret
nop
gs
push
xchg
inc
pop
inc
jns
lahf
daa
cmp
pop
pop
out
pushf
pusha
cli
mov
mov
mov
aam
lods
jecxz
and
jns
fwait
jo
insb
ds
call
psrlq
bnd
pop
enter
xchg
test
loop
xchg
test
fldl
outsb
fbld
mov
gs
and
or
lcall
mov
test
dec
push
add
jmp
imul
or
push
jo
loop
sub
push
cwtl
stos
dec
repnz
cs
ja
mov
es
xchg
loopne
lahf
mov
lcall
mov
mov
ret
push
mov
inc
arpl
xor
movsl
aad
adc
pop
or
je
inc
xchg
push
mov
pop
mov
popl
sub
enter
dec
or
aaa
inc
jp
fadds
mov
lock
inc
push
rclb
rorl
imul
pusha
push
dec
lods
inc
sub
pop
jg
notb
mov
stc
cmc
stos
sti
xor
push
or
add
cltd
adc
in
xchg
mov
enter
fxch
sub
mov
enter
mov
sub
es
out
les
add
ss
cli
and
mov
sbb
cmp
xchg
adc
dec
das
inc
jge
dec
aaa
aaa
orl
or
mov
mov
clc
rcl
out
pop
dec
lods
loopne
jge
gs
js
mov
sbb
scas
popf
mov
push
outsb
out
pop
inc
out
rolb
out
pop
lcall
jo
mov
imulb
lods
inc
and
push
test
fld
test
push
inc
cld
cmp
jl
and
sbb
pop
jle
fstl
push
adc
mov
push
and
lods
jle
pop
xchg
mov
imul
fs
sub
fcmovnbe
out
adc
jmp
outsb
mov
test
inc
hlt
outsl
fbld
dec
mov
jne
addl
les
jne
mov
test
popf
mov
sub
outsl
or
xor
sbb
idivl
fsubr
dec
add
gs
cltd
out
mov
stos
and
rcll
into
or
mov
mov
xchg
pop
notb
decb
lahf
pop
pop
dec
add
and
fiaddl
std
je
cwtl
into
add
sbb
xchg
lods
sti
gs
repnz
push
ja
sbb
sub
inc
sub
popa
xchg
mov
jge
fisttpll
push
adc
das
out
pop
mov
jns
jle
pushf
fists
and
fst
fdivr
insb
hlt
cmp
addb
cmp
mov
in
lret
out
rcrl
jnp
cmp
pusha
push
je
inc
popa
ss
push
fsubrs
lcall
pcmpgtw
loope
std
shll
push
movsb
scas
pop
fnstenv
imul
repnz
mov
testb
sub
outsl
add
clc
mov
sub
in
mov
subb
jecxz
xchg
jno
or
jbe
dec
xor
mov
mov
fstpl
cwtl
add
repz
inc
cmp
cmp
xchg
push
lret
test
adc
outsl
push
or
mov
dec
out
mov
mov
and
loopne
jne
xor
mov
cmp
iret
or
cmp
nop
cltd
mov
mov
or
mov
inc
xchg
loopne,pt
push
jno
aaa
dec
xor
nop
mov
pop
test
repz
ficomps
and
lret
aam
ljmp
cld
xchg
sbb
mov
xchg
sub
push
adc
fsts
ss
stos
ja
push
push
jns
dec
and
add
cmpsl
insb
xchg
jecxz
subl
call
pop
int
push
test
movsl
out
mov
push
fnstenv
cwtl
ret
jo
adc
into
repz
push
pop
shrl
dec
loop
add
movsl
test
ret
out
negb
mov
add
or
push
testl
sti
dec
adc
test
dec
mov
cli
cmc
popf
in
push
cs
and
sbb
push
mov
fwait
and
or
popf
hlt
pop
ja
scas
push
lahf
mov
mov
adc
je
or
cmp
movsl
je
push
mov
pop
jnp
movsb
add
xchg
pop
push
aad
adc
lret
xor
in
dec
sarl
pushf
jmp
xor
xor
dec
pop
mov
cmp
mov
fsubrp
push
movsb
int
or
mov
mov
xor
imul
xchg
pop
out
add
popf
mov
pop
int3
xor
dec
cmp
and
imul
scas
push
loope
pusha
lahf
add
add
pushf
scas
jns
push
enter
pop
divl
adc
mov
std
sbb
sub
jp
mov
sub
or
ficomps
rcll
mov
dec
mov
test
mov
push
adcl
inc
jns
sti
ret
inc
sbb
and
in
loopne
and
shlb
fsubl
xchg
aam
hlt
orl
push
ljmp
dec
add
or
nop
xchg
inc
sbb
sbb
int
or
jecxz
dec
int3
ficompl
and
push
pop
test
dec
add
cmp
into
jg
stos
adc
popf
inc
rorb
mul
jmp
or
cmp
mov
sub
test
ds
push
mov
jno
int3
add
xor
or
daa
int3
pop
sarb
out
cltd
roll
repnz
jp
sub
rcll
sub
inc
sti
rcrl
stc
scas
cmp
lcall
fdivrs
and
fwait
aas
in
aam
xchg
or
or
icebp
insb
shrb
jmp
repz
adc
in
jbe
rorb
inc
cmp
mov
jl
push
xor
dec
inc
jecxz
mov
xor
mov
jns
cmp
cmp
jmp
and
stos
loopne
jno
leave
push
enter
adc
pop
push
push
pop
or
push
clts
sub
cmp
xor
test
popf
mov
cmp
mov
push
out
and
rolb
loop
jl
adc
movsbl
jns
inc
and
iret
and
mov
ret
ficomps
mov
push
popf
ljmp
xchg
jae
imull
xchg
pop
pop
das
pushf
scas
insl
test
roll
inc
add
dec
inc
aas
jg
movsb
hlt
mov
or
mov
jo
jns
or
js
mov
push
inc
mov
enter
stc
movsb
cwtl
jecxz
add
fisubrl
inc
dec
pop
popf
adc
insl
sub
push
imul
stc
fs
push
pop
ficompl
jns
outsb
push
and
lock
ss
adc
mov
mov
adc
inc
xchg
and
cli
jns
mov
data16
daa
add
xor
dec
fisubrl
push
mov
push
scas
mov
inc
pop
mov
out
cs
insb
mov
add
lods
mov
fcompl
movsl
cmc
stos
lds
rcr
pusha
mov
movsl
mov
shr
pop
pusha
cmp
sbb
repnz
mov
fcmovu
jo
xchg
ds
mov
mov
inc
sbb
ss
and
pop
jp
hlt
adc
push
in
jo
xor
out
sub
jo
cmp
jns
outsb
xor
or
pop
ljmp
xchg
sub
cmp
jbe
xchg
div
xchg
mov
idiv
shrl
hlt
sbb
add
push
cmp
and
hlt
mov
and
adc
jle
xchg
sub
mov
sub
movsl
xchg
adc
cmpsl
fstpl
xchg
inc
movsb
jb
cli
scas
jns
mov
gs
jmp
ret
mov
xchg
mov
scas
sub
adc
mov
test
add
mov
mov
orl
in
push
es
lds
mov
and
mov
mov
inc
xor
pop
daa
jecxz
jne
push
fisttpll
push
lods
imul
scas
jecxz
cltd
xchg
stos
dec
out
dec
mov
popa
fldt
push
subl
jne
mov
scas
addr16
bound
lock
pop
or
and
xchg
cmc
ds
or
push
leave
sbb
xchg
sbb
sbb
loope
push
dec
dec
in
das
jmp
xchg
shll
outsl
pusha
or
mov
push
mov
lds
js
mov
pushf
xorb
sbb
outsl
or
cmp
lock
mov
mov
cmp
sti
mov
add
mov
dec
fistl
cli
les
inc
adc
fiadds
add
xchg
lret
mov
xchg
jmp
enter
jl
and
dec
cltd
pop
cmp
mov
xlat
pop
lds
loopne
ja
jae
aas
mov
xchg
ret
mov
mov
and
push
jae
inc
jb
fistl
jg
push
cmp
hlt
in
movsb
loope
adc
xorl
jmp
stos
or
xchg
mov
sbb
daa
pusha
jg
ret
sub
push
xor
scas
out
and
ret
xor
add
out
cmpsb
rcrb
push
psllw
addr16
imull
outsl
movswl
fwait
repz
cmp
inc
outsb
add
cmpl
int
jle
mov
shrl
add
and
test
cs
aas
imul
lcall
sbb
push
lds
mov
scas
jno
mov
aas
pop
mov
or
dec
lret
dec
adc
mov
out
jmp
orl
push
in
mov
mov
scas
cmp
das
adc
iret
addb
std
flds
call
sahf
jge
dec
sbbl
xor
popf
sub
in
pop
daa
dec
fwait
mov
scas
adc
xchg
pop
jl
adc
xchg
sbb
popf
jge
xlat
mov
xor
mov
bound
push
jo
call
jl
cltd
outsw
stc
data16
jg
mov
jle
and
stos
lods
xor
loopne
nop
push
out
movsl
lahf
inc
add
je
dec
and
xchg
sarl
push
lock
iret
jle
icebp
call
inc
loopne
int
add
dec
hlt
cmpsl
xchg
sub
mov
addr16
adc
adcb
xor
xlat
cs
and
imul
imul
xchg
push
adc
mov
and
mov
scas
add
fcomi
idiv
push
push
pop
mov
adc
jl
adc
dec
adc
gs
lahf
jb
push
lods
xor
inc
inc
inc
push
test
out
je,pn
cmpsb
ds
shrb
or
push
mov
pop
cwtl
arpl
pop
cmp
shl
cmp
cli
out
or
mov
sub
ss
jno
and
mov
pop
dec
cmp
push
push
jmp
push
popa
xor
push
mov
iret
fcompl
add
icebp
sub
lcall
mov
mov
outsl
imul
adc
fsubrs
sbb
cmc
scas
pusha
aam
fwait
imul
jne
loopne
inc
adcb
shrb
xchg
mov
or
loop
outsl
dec
xor
in
ss
leave
pop
jo
jg
cmp
mov
fdivl
mov
lea
xchg
add
cld
movsb
seta
in
sub
test
ja
idivl
cmpb
mov
sbb
imul
xlat
aam
push
mov
mov
std
lcall
movsl
les
sti
push
dec
lods
xchg
jle
inc
cld
cmpsl
or
and
mov
cmpb
jno
lcall
cmp
cmpsl
xchg
icebp
inc
shll
and
cmp
or
mov
inc
push
xor
dec
fwait
das
inc
stos
push
inc
xchg
pusha
inc
xchg
arpl
jg
in
shr
sub
jge
mov
xor
subl
mov
add
inc
fcmovbe
les
jno
call
sub
pop
inc
inc
enter
bnd
rcrl
add
mulb
mov
push
jnp
lea
iret
in
push
push
jno
jns
int
lret
sarb
les
sub
fidivrs
mov
hlt
pop
push
arpl
aad
or
dec
addl
xor
les
mov
fld
xor
xor
push
mov
in
mov
lcall
fwait
pop
cs
out
sub
or
xlat
sbb
pushw
pop
push
mov
mov
or
mov
cwtl
cmpsb
loop
and
mov
mov
imul
or
mov
mov
push
scas
aam
sbb
jmp
adc
cmpsb
lds
xchg
push
mov
mov
and
subl
imul
dec
cwtl
negl
scas
aas
dec
mov
mov
popl
das
push
lret
mov
xchg
sbb
jb
mov
fidivs
ja
imul
mov
cmp
outsl
mov
leave
lods
push
xor
cltd
popa
lret
fdivrs
xor
sbb
and
jmp
int
movl
cld
test
fildl
xchg
mov
loope
mov
push
popf
jmp
xchg
lods
ss
jecxz
or
call
add
lret
aas
bound
cltd
jecxz
pop
imul
jecxz
xor
pop
scas
jg
or
jne
test
cmpsl
sub
mov
sbb
mov
pop
test
inc
les
jne
lret
and
lods
movsb
jae
idivb
cmpsb
arpl
out
int3
cmp
cs
pop
lock
mov
scas
ret
xlat
outsl
data16
mov
addr16
jl
xchg
in
aad
stc
lds
adc
xchg
dec
xchg
dec
aas
test
inc
adc
sub
mov
js
test
loop
dec
clc
xchg
orb
cmp
out
mov
jl
xlat
cmp
fcoms
inc
rcll
data16
jne
aam
repnz
fimuls
jnp
leave
add
push
mov
cmpsl
pop
sahf
lods
xchg
or
jmp
or
aam
outsl
les
xor
mov
bound
or
stos
jnp
and
das
mov
cmovle
jno
fwait
cwtl
mov
jmp
insl
push
mov
outsb
fsubrl
dec
push
pusha
jge
stos
ficoms
xchg
add
inc
pop
cld
adc
mov
lods
adc
inc
rolb
sub
sti
mov
push
stos
dec
and
rcrb
jno
mov
in
xor
sub
jbe
push
sbb
adc
mov
scas
and
and
ds
mov
add
outsb
gs
pop
out
mov
push
insl
pusha
ljmp
fwait
nop
popa
sub
sti
fcoms
or
ljmp
insb
sahf
adc
xor
and
mov
enter
idivl
mov
jae
lods
push
xchg
loopne
xor
jge
push
push
xor
adc
jle
pop
xchg
jo
dec
inc
push
outsb
jbe
shrl
cmp
lcall
sbb
mov
inc
andl
and
sbb
leave
pop
mov
shll
insl
fs
inc
xchg
and
test
add
jb
cld
or
popf
outsb
or
iret
sbb
mov
cmc
push
test
mov
imul
repz
adc
jecxz
xchg
repnz
sbb
aad
or
jbe
push
jg
ret
frstor
loopne
outsb
shrb
hlt
mov
and
cmp
ds
test
test
xchg
push
sub
addr16
je
nop
loopne
adc
jle
sti
emms
lock
incl
addr16
out
push
mov
rcll
lds
cmpsb
int
sub
sub
adc
cld
mov
ret
addr16
in
push
insb
adc
es
aas
push
sub
mov
mov
jae
out
xchg
lea
fidivrl
sub
cs
adc
or
or
ss
fisubrs
jle
nopl
je
sub
mov
inc
or
pop
aaa
jge
loopne
cmp
mov
movsl
call
xchg
daa
mov
xor
mov
cli
jmp
bound
cli
sbbb
jge
push
pop
add
mov
sub
es
pusha
cmp
pop
push
repz
push
add
shr
call
push
daa
pop
pop
into
and
and
aad
repz
pop
in
mov
mov
mov
jb
in
loop
jo
and
fs
mov
jle
lea
sub
sub
mov
sbb
dec
bound
cvtps2pi
xor
pop
in
and
addr16
ja
push
push
xor
fistpll
add
or
imul
in
rorb
outsl
cmp
dec
sbb
aad
nop
xchg
cmp
pop
cli
adc
mov
and
xlat
push
or
cmp
jb
and
mov
xor
add
pop
inc
pushf
aam
loop
mov
inc
cmpsl
scas
ja
inc
xor
hlt
out
test
sub
movsl
mov
ret
add
int3
inc
rol
jbe
mov
dec
pop
pop
dec
fldenv
jmp
ljmp
xlat
push
push
dec
mov
ret
ret
jge
cs
test
fldln2
add
sbb
xor
lahf
sbb
fisubrl
fstps
jge
addr16
mov
popf
inc
jno
out
aas
pop
in
sbb
andb
push
rcr
cwtl
fwait
dec
daa
test
push
arpl
or
pop
jnp
test
shll
movb
pop
pushf
jecxz
out
adc
popf
jb
es
sbb
int3
imul
push
jbe
addr16
sub
mov
xchg
and
gs
or
push
shlb
lock
xor
adc
dec
popa
sbb
xor
push
adc
xlat
lock
pop
ret
add
loop
mov
mov
out
push
in
dec
addb
sub
cli
xchg
es
push
sbb
outsl
popf
testb
inc
mov
iret
jle
outsb
jae
imul
dec
pop
fiadds
loop
popf
in
out
test
dec
in
and
outsl
mov
or
push
pop
mov
mov
ljmp
mov
shrb
cmp
jo
sbb
cmc
jae
aaa
sahf
cwtl
xor
hlt
inc
adc
xchg
and
inc
popf
dec
aaa
icebp
insl
call
lret
iret
sbb
setne
jns
imul
sti
movsl
movb
mov
stc
cld
incb
fbld
call
xor
cmpsl
pushf
hlt
add
imul
imul
push
addr16
add
mov
div
mov
xor
or
lea
mov
jle
das
int3
lahf
jle
rcrl
xchg
scas
mov
loope
out
sub
push
xchg
test
xchg
int3
cltd
xor
sub
sub
outsl
adc
in
push
push
cmc
push
mov
je
lods
popf
mov
mov
inc
aas
ja
lods
aam
mov
popa
sub
and
insb
shl
out
mov
enter
xchg
dec
mov
mov
int
das
into
mov
fwait
jbe
mov
or
cmc
addr16
cmc
out
int
lcall
inc
popa
clts
or
inc
insl
push
je
ja
add
or
flds
dec
or
imul
fcmovnu
outsb
jp
stc
push
cmp
loop
dec
nop
push
out
push
jmp
or
lods
dec
ret
push
rorl
jno
fsubrl
mov
cmc
sbbb
dec
cli
mov
sbb
cmp
fldl
fcmovbe
inc
pushf
rolb
xchg
jne
clc
mov
nop
lcall
lock
lock
cmp
jle
and
call
jns
imul
movsl
stc
jnp
mov
pop
xor
or
jb
mov
aam
push
mov
xchg
mov
loope
hlt
or
pop
cmpsl
rolb
repz
adc
les
mov
out
cli
pop
dec
adc
sbb
in
xchg
shrb
insl
popa
xor
popa
fists
add
or
sub
dec
dec
jp
push
lcall
test
fmul
enter
call
cmp
sub
pop
pop
dec
dec
jp
push
lcall
test
fmul
enter
call
sub
sub
dec
loopne
js
push
mov
scas
test
fcom
enter
call
mov
add
pop
pop
pop
dec
jp
ljmp
mov
inc
aaa
add
inc
inc
scas
jb
bound
pop
xchg
sub
sarb
ret
and
push
jecxz
xchg
jle
outsb
mov
mov
scas
jb
bound
xor
and
sarb
cs
push
sbb
mov
scas
jb
bound
xor
and
rcr
loope
sahf
imul
xchg
aas
in
add
or
dec
or
ljmp
cmp
btr
and
xchg
push
jecxz
cmpsb
adc
cs
popf
jb
jne
adc
push
filds
mov
sbb
cmp
pop
das
add
inc
dec
sub
pop
ljmp
jl
sarb
and
xlat
mov
inc
scas
sbb
pop
cs
and
pop
outsb
inc
rorl
mov
insl
sub
xchg
and
xchg
outsb
dec
fiadds
adc
mov
ja,pn
lahf
push
rcll
jecxz
pop
mov
dec
mov
jmp
movswl
and
aas
xor
or
sub
and
mov
bound
and
shlb
ret
pop
loop
xchg
data16
mov
scas
sbb
jo
push
mov
mov
repnz
lcall
pop
in
aaa
daa
scas
pop
out
push
mov
lea
dec
mov
xchg
dec
lock
dec
xchg
or
add
xor
sub
incl
sbb
xchg
add
xor
and
sarb
ret
push
loop
xchg
jle
outsb
mov
mov
scas
jb
bound
xor
and
sarb
ret
push
loop
xchg
jle
outsb
mov
mov
sub
mov
jo
cmpl
test
movsl
fmull
push
inc
ss
loop
or
ljmp
push
insl
cmp
sub
lods
data16
and
roll
jle
hlt
pop
sbb
ds
js
jb
ror
mov
jmp
cmp
or
stos
ret
mov
cmp
mov
adc
cmp
lods
sti
jge
sub
dec
std
dec
icebp
or
sub
xor
jg
lcall
mov
sbb
adc
bound
lret
mov
scas
xchg
jl
jbe
out
sbb
std
shrl
cmp
pop
add
das
push
imul
mov
cmp
push
mov
addr16
xor
sarl
xchg
lcall
jp
pop
inc
pop
pop
mov
sbb
mov
jae
jne
mov
xchg
cmpsb
add
call
gs
inc
pop
dec
or
popf
push
xchg
nop
test
rcr
pop
les
xor
jno
rcr
insl
mov
in
sub
pop
and
cmpsl
cld
repnz
xchg
sbb
or
loopw
pop
nop
cmp
dec
jb
push
fadds
in
push
dec
sbb
lds
jns
shll
mov
test
and
inc
aaa
insl
jp
mov
mov
scas
cmp
fisttpl
or
test
mov
test
int3
push
pop
test
add
psrlq
clc
xchg
mov
cmpsl
pop
dec
ljmp
pop
lret
cwtl
in
out
sbb
pushl
push
test
out
aas
adc
cmp
ret
pop
rcrb
sarl
ret
jnp
pop
sbb
jge
xor
loope
lahf
push
sbb
faddl
rclb
cmpsl
xor
xchg
mov
cmp
sub
insl
xchg
out
jg
rorb
mov
sbb
xchg
test
cmp
xchg
test
mov
pop
add
sub
jecxz
push
daa
movsl
shlb
xlat
and
imul
or
js
adc
imul
int3
pop
mov
add
inc
mov
adc
sarb
lcall
movsl
adc
daa
xchg
push
adc
aam
cli
pop
insl
xor
lods
jl
and
pop
push
shll
inc
lods
cmp
sub
adc
mov
rcr
jae
mov
outsb
dec
out
xor
mov
xchg
sahf
in
xlat
mov
dec
sub
dec
mov
jnp
js
add
xchg
in
xor
jl
mov
mov
inc
pop
xchg
out
call
xchg
ds
adc
xchg
mov
xchg
jge
test
and
or
xlat
mov
xchg
xchg
jb
arpl
ret
sbb
cmpsl
in
push
rcll
pop
mov
stos
hlt
ficoml
sbb
xor
mov
jns
popf
add
jnp
lods
inc
ret
lret
popf
js
scas
adc
adc
inc
xchg
ficomps
xchg
xor
mov
std
xor
jmp
cmp
fnstenv
mov
shrl
dec
icebp
or
popf
fucomip
pop
shlb
push
mov
sar
mov
cltd
aas
repz
jb
addl
fnsave
negl
sub
cmpsb
jle
sbb
or
movsb
inc
or
daa
add
fbstp
dec
outsl
out
das
int
push
pushl
sbb
aaa
rcrb
adc
add
or
in
stc
or
int3
push
mov
xchg
test
arpl
out
jl
data16
daa
sarb
cmp
out
push
dec
in
mov
mov
jo
loop
insl
pop
rcrb
pop
iret
aam
cwtl
mov
xor
cmp
jp
xchg
mov
xor
mov
clc
or
inc
jno
in
mov
jmp
inc
adc
sub
cli
xor
movsb
daa
fwait
xor
add
jge
scas
call
jge
loopne
sbb
pop
push
std
call
inc
jl
push
clc
bound
adc
dec
mov
pop
mov
jae
mov
fcomps
pop
fldenv
cltd
sub
test
mov
push
pop
rclb
or
pop
stc
loope
pop
xchg
pop
mov
rcll
fidivs
and
inc
xchg
pop
mov
xchg
add
popf
hlt
dec
jbe
into
ljmp
les
and
std
mov
xchg
int
mov
and
lret
test
and
pop
pop
pushw
mov
jmp
cmpl
pop
xor
cmc
mov
stc
je
das
insl
cmp
pause
sbb
lret
sub
push
lcall
xchg
int
into
subb
pop
mov
inc
jae
mov
mov
jnp
aas
xchg
xor
sub
fcoml
test
xorb
and
fsubp
test
test
test
xchg
adc
idivb
mov
xchg
loope
fildl
incl
arpl
xor
xor
cmp
ficoml
xchg
sub
push
mov
inc
hlt
xor
or
sti
jo
push
mov
js
clc
test
xlat
movsl
mov
lret
fildll
add
rcl
mov
out
stos
pop
bound
std
lods
sahf
jg
jge
cs
xchg
popf
enter
mov
adc
nop
cli
mov
aam
mov
mov
bswap
js
jg
dec
sbb
ret
mov
fisttpl
jecxz
call
jno
inc
jmp
js
mov
in
push
lea
ljmp
push
mov
add
sbb
push
bnd
imul
popf
adc
adc
mov
mov
outsl
popa
or
aad
hlt
xor
das
mov
out
out
inc
insl
fldenv
xchg
sbb
leave
lret
ficoms
xor
ret
and
out
ja
les
mov
push
adc
int
pop
mov
int3
jle
ljmp
or
xlat
push
sub
jb
push
mov
jge
inc
insb
pushf
loope
xlat
es
int3
adc
fs
int
add
mov
ljmp
mov
stos
and
sbbb
sbb
into
cwtl
cmpsl
mov
repz
pop
add
push
adcb
mov
and
sub
imul
ret
xor
cld
sub
jo
decb
shlb
mov
hlt
lcall
ja
xor
sub
push
popf
push
ret
repz
jmp
xor
pushf
fidivl
scas
jle
imul
ja
fidivrl
fsubl
xor
in
fsubr
paddusw
cmc
ja
add
js
rep
dec
mov
repnz
testb
push
pop
dec
scas
pop
enter
pop
insl
xchg
jbe
sub
mov
inc
xchg
push
xchg
sbb
push
movsl
mov
pop
fldl
jp
into
dec
out
sbb
rcrl
fbld
mov
and
jno
sbb
mov
cs
sub
cmp
test
cs
xor
incl
incb
mov
xchg
jmp
in
push
ret
outsl
les
pop
fildll
pop
pop
repz
sahf
into
sbbl
test
push
cli
xor
dec
xchg
mov
mov
daa
push
mov
mov
pop
inc
pop
inc
adc
xor
aas
mov
and
and
xor
outsb
rorb
test
sub
and
pop
dec
jo
push
jcxz
addb
adc
pusha
fwait
sbbb
adc
shlb
cmp
adc
mov
mov
xchg
leave
test
fimuls
mov
lods
nop
jl
dec
jmp
cmp
test
test
loopne
push
stos
mov
lods
and
imull
push
push
fs
out
sub
pop
push
cltd
or
xor
call
jecxz
jnp
adc
in
cs
pop
xchg
push
sbb
loopne
mov
dec
lea
add
push
jnp
xchg
dec
ss
cld
and
enter
jle
cmp
adc
xchg
xchg
rorl
divl
xchg
and
dec
push
and
push
pop
or
push
mov
pop
pop
jmp
clc
mov
add
xchg
adc
outsb
sbb
imul
xor
xchg
pop
bound
push
stos
sbb
sti
and
adc
lock
pop
sbb
pop
mov
push
inc
and
jge
pop
push
inc
shl
repz
dec
cmp
std
and
jo
jmp
ljmp
repz
pop
push
arpl
popa
lret
pop
jecxz
mov
cld
mov
scas
filds
dec
mov
stos
dec
adc
cmc
lods
ljmp
jecxz
aaa
ds
lahf
bnd
cmpsb
cltd
jecxz
outsl
int
lcall
sub
xor
inc
repnz
mov
add
in
fcompl
pop
pop
lcall
daa
ror
lret
and
push
loope
aam
stc
aam
test
mov
and
pusha
mov
movsb
push
stos
loop
popl
xor
sbb
push
mov
cld
adc
dec
iret
mov
gs
test
xchg
xlat
lahf
pop
in
jno
or
mov
jl
cmpsl
sbb
jo
or
das
sub
xor
dec
sbb
lret
stc
jae
int3
out
sbb
hlt
mov
adc
arpl
stc
dec
lea
sti
std
aam
stc
lds
lock
mov
xchg
daa
in
insb
add
imul
aam
and
and
mov
bound
sahf
into
adc
js
jg
xor
dec
mov
ret
cmc
mov
sub
je
fs
pop
mov
xchg
dec
push
sbb
push
add
xor
push
inc
insl
mov
xlat
xor
mov
cwtl
cmc
push
sahf
sub
fwait
cmp
push
or
xor
fildll
mov
bswap
or
dec
mov
mov
out
orl
mov
inc
push
jno
or
jb
inc
xchg
mov
mov
xor
mov
xor
pop
les
adc
ss
ret
out
loope
jo
cmc
mov
xor
shll
lods
es
andb
inc
jb
xor
jge
push
out
cmpl
jp
scas
sub
jbe
lret
in
push
shrb
jl
pop
cmpl
push
add
pop
and
mov
mov
cmp
fucomp
sub
pop
dec
sbb
push
stc
imul
out
call
and
lcall
rcr
push
dec
adc
cmp
clc
shrb
cmp
inc
cs
or
fidivrl
cmp
or
add
std
push
xchg
jp
cmp
dec
adc
xchg
das
push
icebp
ret
movsl
and
loopne
frstor
xor
or
ja
xor
scas
jb
or
fldcw
or
in
pop
pop
adc
movsb
sbb
lahf
sub
mov
mov
add
xchg
inc
insl
test
mov
jno
dec
jg
or
roll
cli
int3
test
scas
mov
jns
jmp
sub
rclb
mov
rep
bound
mov
xorl
iret
add
pop
call
push
jo
mov
out
or
movsb
sub
mov
sbb
out
lret
push
push
adc
cmp
cwtl
mov
cmp
loopne
aam
addl
imul
notl
cld
add
xor
jno
movhps
andb
pop
inc
repnz
rorb
test
pop
movsl
in
ficoml
cmp
pop
in
aas
add
ljmp
outsb
dec
inc
orl
push
aaa
cmp
push
xor
ds
mov
fwait
scas
xchg
sub
pop
imul
dec
mov
rcl
aam
or
fstps
dec
push
and
push
xchg
js
adc
jns
mov
andb
and
push
cmpsl
mov
in
outsb
inc
push
inc
stos
out
shrl
dec
nop
fdivr
in
sub
hlt
cltd
pop
sbb
je
sbb
lods
inc
popa
inc
mov
push
das
bound
xchg
dec
fcmovbe
sti
or
pop
xor
xor
out
sahf
test
xchg
push
push
mov
in
mov
popf
dec
dec
cwtl
cs
out
out
mov
loope
xchg
pop
jbe
out
arpl
fwait
xor
adc
push
rorb
mov
push
push
adc
scas
xchg
incl
jp
ss
pop
push
mov
sbb
sbb
sahf
sbb
jb
insb
ds
popf
pop
outsl
cmp
rcr
andl
or
aaa
call
mov
aad
mov
adc
scas
add
frstor
inc
push
cs
push
cmpsb
xlat
iret
and
jl
imul
lret
jle
mov
sbb
lret
or
inc
cmp
adc
jno
movsl
fsubrs
fcoml
jae
mov
je
test
shll
adc
push
cmpb
orl
push
inc
ficomps
ja
push
in
mov
mov
nop
push
and
mov
clc
mov
sub
add
sahf
lcall
dec
test
xchg
add
push
out
mov
ret
adc
sbb
sub
cmp
cmpsl
bound
add
jl
xchg
jbe
jl
dec
popf
inc
loop
inc
mov
mov
jb
bound
or
subl
das
fdivrp
mov
in
lods
popf
mov
out
cmpsl
push
dec
adc
mov
out
dec
mov
add
jle
in
mov
cs
xchg
mov
add
hlt
mov
sti
jl
xor
mov
or
ljmp
cmove
jp
cmp
pop
add
push
xor
repz
stc
sbb
jle
mov
inc
cmp
test
and
outsl
hlt
sub
mov
insb
dec
push
xchg
and
inc
jb
jno
lods
jo
leave
jb
movsl
fdiv
pop
mov
les
mov
lret
aas
pusha
mov
jne
mov
push
adcl
inc
xchg
sub
pop
insl
daa
rol
out
jle
cmp
pop
repz
ret
decl
cmc
sbb
and
adc
xlat
rclb
or
mov
inc
push
movsb
push
xchg
loop
dec
jne
mov
dec
push
pop
jno
dec
in
add
push
ljmp
add
pushl
popf
fistpl
mov
stos
cmpsl
pop
push
adc
lret
cmp
sub
mov
subl
inc
out
push
in
add
icebp
jg
pop
sub
xchg
push
mov
sub
dec
sub
test
xchg
pop
test
cld
pusha
into
adc
mov
jne
push
add
mov
jne
pop
lret
xor
shll
cwtl
xor
or
adc
subl
mov
cld
arpl
push
inc
adcb
iret
cmp
xchg
lret
push
push
dec
mov
fstps
sahf
or
ret
jns
loope
rorb
inc
xchg
bound
jmp
sbb
lahf
adc
cmp
xchg
out
sti
inc
or
shrb
movsb
xchg
cmc
std
in
cmp
pop
mov
jp
adcb
int3
xor
sub
cmpsb
dec
in
sahf
add
sbb
call
bound
fsubs
iret
jp
pop
roll
push
cmp
mov
push
sub
dec
loope
enter
push
jp,pt
adc
mov
repz
mov
pop
xor
push
les
pop
xor
and
jnp
nop
mov
cwtl
jbe
in
dec
add
or
and
jl
fs
sbb
xchg
inc
shr
lcall
stos
sbb
aas
pop
into
and
rolb
les
mov
inc
iret
ja
das
int
inc
out
in
loop
xor
out
sahf
and
dec
rolb
lahf
xor
movsl
mov
jb
push
into
mov
loope
int
pop
add
ljmp
fdivrl
inc
pusha
test
icebp
sbb
pop
mov
adc
mov
cli
jne
adc
or
push
lea
jmp
lret
shll
mov
ljmp
fldpi
jp
mov
and
fs
add
push
adc
ret
out
xchg
loop
inc
in
adc
cmp
das
mov
std
and
scas
fs
sti
cmpsl
ss
xor
test
leave
testl
pop
cld
sbb
jns
ja
pusha
push
adc
adc
out
pop
scas
push
jno
pop
xchg
pop
add
xlat
add
inc
sub
lds
call
xrelease
sbb
daa
imul
ja
and
mov
pop
inc
out
adc
iret
jb
fsub
cmp
jne
fdivl
inc
mov
pop
mov
sub
xchg
imul
inc
pop
pop
mov
adc
sbb
cmpsb
xchg
aam
lahf
mov
sub
add
or
pop
jnp
mov
pop
xor
fcmovu
jb
mov
ret
mov
dec
sub
pop
add
mov
enter
hlt
sbb
in
xchg
push
cmp
sbb
xor
stos
sbb
fistpll
in
add
icebp
lds
xor
test
push
jle
or
sbb
or
inc
ficoml
push
mov
dec
sub
arpl
push
fdivs
test
mov
in
dec
adc
test
xchg
dec
fldl
movsl
cmpsb
xchg
es
cmp
movsl
push
sbb
fistl
js
inc
insl
dec
outsl
mov
cmp
mov
aaa
push
xor
dec
lock
addr16
sub
mov
js
cmp
mov
fbstp
xor
popf
movsb
and
scas
sbb
lds
pop
jb
xor
jmp
call
xlat
iret
outsb
mov
mov
jmp
sbb
stos
inc
ljmp
repnz
int3
enter
xchg
je
mov
inc
dec
popf
shl
leave
out
mov
cmp
push
mov
mov
mov
roll
sbb
or
scas
mov
xor
pop
daa
movsl
fisttps
mov
pop
sbb
imul
andb
xchg
sub
mov
sbb
pop
mov
out
out
push
mov
mov
cmpsb
xchg
sub
lret
push
decl
mov
mov
lods
xor
xlat
imul
xchg
pop
jo
inc
jmp
mov
inc
mov
sub
push
and
dec
outsb
mov
cld
push
inc
shrl
push
popa
adcl
add
test
push
sbb
push
dec
and
dec
push
sar
or
imul
lret
cld
mov
bound
out
jno
pop
mov
adc
inc
loope
xchg
js
push
popa
mov
sub
pusha
subb
ret
jecxz
cwtl
xchg
sub
in
sbb
mov
outsl
call
lods
adc
pop
icebp
mov
shlb
pushf
push
notb
add
mov
mov
lock
lret
push
pop
jl
shrl
pusha
dec
jne
insb
call
add
cmpsb
stos
dec
adc
sbb
rcrb
fimuls
xor
inc
dec
cmp
inc
xlat
hlt
cmp
js
pop
mov
sar
sub
scas
clc
cmp
sbb
dec
shll
inc
lods
testl
and
in
and
jno
push
push
jecxz
mov
push
call
push
daa
cmpsl
into
sub
jns
shrl
or
sub
sti
scas
lock
in
cmp
pop
pop
sarb
rorl
clc
maskmovq
divl
mov
mull
out
and
jle
dec
shr
sbb
out
mov
sub
jns
jl
xchg
enter
stos
and
fimull
sahf
mov
dec
inc
lods
jo
fdivrl
scas
sbb
rorb
jle
loop
fdivrp
cs
lcall
xor
aas
addr16
mov
xor
xor
in
ljmp
outsl
imulb
adc
mov
or
dec
jno
fs
pop
fstpt
jg
orl
add
mov
push
cmc
shll
xor
mov
mov
jg
popf
mov
cld
cmpsl
or
bound
sbb
xchg
loopne
fcoml
mov
adc
bound
push
pop
and
shll
loopne
movsl
mov
lret
repz
cmp
push
lea
and
aam
pusha
cwtl
push
jecxz
mov
lods
in
iret
test
and
fbstp
sbb
lds
mov
pop
insb
push
shlb
mov
xor
mov
cltd
adc
adc
int3
lcall
sbb
aam
jno
mov
cmp
push
cmp
mov
incb
out
xor
and
sarb
ret
push
loop
xchg
jle
outsb
mov
mov
scas
jb
bound
xor
and
sarb
ret
push
loop
xchg
jle
outsb
mov
mov
scas
repnz
bound
xor
mov
cs
loop
xchg
jle
outsb
mov
mov
scas
jb
bound
xor
and
sarb
ret
push
loop
loop
repnz
ret
mov
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
add
adc
and
xor
dec
push
xor
je
aaa
xchg
xchg
xlat
movsb
out
test
cmpsl
hlt
mov
inc
adc
and
xor
inc
pop
push
pop
fs
je
test
xchg
xlat
movsb
out
test
cmpsl
hlt
mov
inc
adc
and
xor
inc
pop
push
pop
fs
je
test
mov
aam
shl
aad
repz
ret
jo
jne
and
pop
fwait
dec
roll
and
aam
fstpt
mov
or
mov
call
jbe
mov
call
cmp
mov
out
notb
cmpsl
movsl
dec
sti
push
jle
dec
nop
jge
adc
pushf
scas
and
mov
pop
subl
lds
hlt
mov
mov
xor
push
stos
pop
cmp
hlt
sbb
inc
sbb
xchg
aam
sbb
jg
push
ficoml
mov
fdivr
popa
test
aas
les
hlt
out
ret
push
lretw
add
fists
in
fs
cmp
push
jecxz
mull
js
arpl
mov
mov
inc
adc
and
xor
inc
pop
push
pop
fs
je
test
xchg
xlat
movsb
out
test
cmpsl
hlt
icebp
popa
sub
bound
jb
and
push
or
inc
hlt
stos
icebp
mov
inc
ljmp
jb
pusha
sbb
and
cmp
dec
xor
testb
fwait
xor
mov
rcrb
and
push
add
imul
je
test
xchg
xlat
movsb
out
test
cmpsl
hlt
mov
inc
adc
and
xor
inc
pop
push
pop
fs
je
test
xchg
xlat
movsb
out
test
cmpsl
hlt
mov
inc
jne
mov
ret
xchg
mov
sahf
pop
ljmp
cmpsb
sub
rolb
mov
mov
cmc
mov
lods
xchg
and
nop
arpl
data16
or
and
pop
mov
stos
out
sub
pushf
jns
call
and
shll
ret
push
pop
mov
sti
imul
sbb
das
cmpsb
stos
out
dec
and
sahf
int
cmp
and
or
pop
std
add
add
xorb
or
cmp
sub
sbb
cmp
mov
fisubl
incl
dec
cmp
aam
sub
aaa
jp
aaa
nop
call
mov
mov
mov
test
in
imul
xchg
stos
xchg
adc
and
loope
test
xlat
dec
out
cmpb
sbb
outsb
jp
push
push
xchg
mov
lods
push
sbb
cmpsb
push
subl
inc
in
mov
cmp
sbb
std
icebp
cmp
or
in
or
push
sub
cwtl
xor
insb
jp
mov
lds
sbb
cmp
push
test
cld
jne
add
pop
xchg
xchg
gs
call
inc
cmc
lret
xor
or
pop
inc
aaa
lock
mov
push
sbb
cmp
movsb
inc
cmpsb
add
pushf
jmp
lret
jp
divb
lret
pushf
xchg
loop
mov
sub
xchg
xchg
push
ds
arpl
daa
sub
out
outsb
shlb
push
xor
and
jp
and
in
pop
pusha
mov
sahf
out
cmp
xor
filds
dec
incl
scas
test
cmpsl
cmp
jle
pushf
popf
fs
push
gs
daa
cmp
int
es
sahf
in
gs
mov
test
nop
jg
jp
push
rclb
ret
pop
ljmp
push
lea
jmp
ja
aaa
cmp
add
out
pop
mov
out
sub
mov
nop
xor
pop
push
and
mov
jno
in
inc
repnz
or
or
adc
dec
std
jae
dec
clc
cmp
push
cmp
sub
rcl
pop
xchg
cld
fldpi
pop
push
rcr
mov
add
jp
mov
cmp
aam
mov
pop
pop
adcb
ljmp
mov
and
lock
ret
clc
ds
and
dec
inc
cmpb
mov
sub
dec
nopl
adc
mov
mov
add
and
jae
xchg
pop
push
js
aam
inc
xchg
addr16
sahf
pop
sarl
mov
sbb
sbb
sub
ss
cmp
aas
sbb
mov
mov
adc
ds
inc
and
adc
lea
bound
test
push
cmp
pop
or
lcall
loopne
adcb
fisttps
pop
mull
jno
add
pusha
mov
push
out
mov
mov
sti
sub
pushf
loope
pop
sub
xchg
in
inc
pop
cmpsl
movsb
dec
addr16
mov
add
cmpb
js
sbb
hlt
bound
jo
scas
test
jl
mov
mov
outsb
push
rorb
pushf
popa
and
fidivs
out
xchg
or
inc
dec
push
pushl
cmp
add
sbb
les
cmc
sarl
adc
sub
dec
xchg
push
dec
and
jp
jg
mov
and
cmpsl
mov
rcrb
scas
fnstcw
adc
fistl
sbbb
inc
cmpsl
push
mov
xchg
inc
push
nop
cli
push
ror
dec
inc
xlat
iret
cmpsb
dec
sub
popa
push
popa
jge
push
xchg
or
cmp
scas
mov
mov
fcompl
cmp
push
out
sub
add
cwtl
in
pop
frstor
test
sbb
or
inc
push
outsl
mov
sub
sbb
or
loop
aam
lahf
inc
hlt
dec
jp
repnz
lret
adc
addl
jae
repnz
jmp
mov
sahf
in
lahf
jl
add
ja
or
push
xchg
sbbl
repnz
enter
in
outsb
leave
in
mov
stc
adc
pop
adc
mov
mov
mov
mov
mov
loope
les
or
int3
addr16
pusha
out
jmp
inc
pop
cwtl
decl
or
pop
add
add
sbb
insb
sub
xor
das
pop
mov
out
js
inc
jae
cmp
xchg
jne
push
stc
mov
cmp
popf
push
mov
iret
or
rclb
jge
xchg
cmp
rcrl
and
jnp
sbb
xchg
ds
rclb
inc
mov
jle
dec
pusha
or
cwtl
adcl
sbb
inc
inc
iret
mov
or
je
jecxz
scas
adc
lret
xlat
sti
mov
jae
lret
push
or
dec
jns
cmpl
or
cmp
ds
jno
jmp
stos
sar
inc
rorl
test
daa
mov
in
sbb
scas
jp
lret
lds
push
stc
fmull
js
hlt
sbb
fldcw
popa
and
add
dec
sub
cmp
sub
nop
insl
jg
loopne
push
in
pop
cltd
xor
fcomi
testl
gs
fsubrl
jae
arpl
pop
stos
outsb
imul
mov
outsl
cmp
sub
push
push
stos
cmp
push
scas
sbb
sub
add
or
push
mov
mov
scas
pop
movsb
mov
test
xor
sbb
out
mov
adc
mov
sarl
test
jae
or
frstor
inc
cmp
add
out
xchg
push
pop
repnz
mov
sub
sub
push
inc
scas
jb
cmc
pop
jne
movsl
lcall
xor
sub
push
insb
or
lret
xchg
mov
rcll
in
es
loope
test
out
icebp
negl
push
xor
cmc
sub
mov
inc
mov
jge
filds
mov
inc
xorb
fisubrl
xchg
and
repnz
push
jnp
mov
insl
bound
mov
or
mov
jge
mov
push
jmp
mov
mov
mov
imul
jp
flds
inc
xor
jno
xchg
adc
pop
int
mov
mov
push
add
sbb
mov
cld
xchg
out
repz
cltd
out
push
mov
mov
fsubrs
sbb
pusha
inc
loopne
push
lret
mov
mov
dec
jge
ja
cld
dec
xor
sbb
lahf
push
mov
scas
js
inc
push
xchg
sub
loop
dec
jg
push
rorl
pop
sbb
push
cld
adcl
dec
cltd
jecxz
int3
popa
loope
inc
xchg
pop
xchg
out
mov
orl
or
mov
das
push
ja
sub
inc
fdivs
lock
enter
inc
add
push
sub
mov
fbld
imul
out
test
or
sbb
lret
push
push
andl
aam
in
cli
lods
mov
xchg
icebp
lods
cmovle
out
push
stos
push
or
xchg
or
fmul
lods
xor
fistl
dec
test
xor
fimuls
adc
fadds
enter
outsb
bound
call
dec
mov
sbb
xlat
mov
pop
cmp
xor
and
mov
xchg
cmp
jmp
mov
mov
ja
inc
sbb
stos
lcall
adc
sub
enter
mov
decl
add
ret
jnp
rcrb
stos
mov
repnz
inc
pusha
out
xor
jb
cmc
mov
sbb
lock
cmp
sub
shrb
fisubl
es
stc
out
movsb
lcall
enter
aaa
ret
push
jmp
sbb
and
or
out
mov
sahf
arpl
and
add
inc
rorb
jnp
add
inc
jg
and
inc
push
rorl
add
movsl
inc
jnp
mov
mov
inc
je
out
pop
dec
mov
jge
icebp
cmp
or
repnz
gs
movb
pop
imul
inc
mov
mov
cmp
loopne
xorl
jb
lea
xchg
ficomps
iret
jae
push
outsl
pop
scas
or
das
sti
xchg
pop
les
xchg
xchg
lcall
jp
stos
pop
pop
mov
lahf
test
out
push
jmp
decb
add
repz
stc
cmp
mov
pop
or
jl
xchg
mov
ret
mov
xor
cmp
mov
and
cmp
orb
cmpsl
hlt
xorl
cmpsl
in
jmp
xchg
mov
addr16
mov
pop
jmp
out
aaa
rcrl
call
mov
xchg
push
inc
and
inc
loope
jns
jae
add
bound
inc
out
mov
fmuls
jmp
loope
subb
mov
stos
loop
into
jmp
inc
push
repz
sub
scas
ljmp
xor
mov
out
fdivrs
test
fisttpl
or
sbb
pop
fildl
aad
ret
rcrl
jns
sbb
cld
insl
pop
inc
gs
xor
scas
jg
mov
cli
icebp
mov
cwtl
mov
push
mov
fsubrp
xor
and
cmpsl
inc
pop
out
jmp
or
repnz
and
loop
fnstenv
dec
mov
into
dec
push
test
andl
das
dec
popf
orl
stos
pop
sbb
cmp
sbb
lods
daa
cmp
adc
inc
stos
or
nop
and
mov
clc
lret
push
mov
and
mov
mov
mov
into
inc
xchg
xchg
sub
push
jl
and
lahf
out
and
pop
sub
addr16
pusha
push
test
int
addr16
push
dec
jl
inc
inc
or
test
sbb
data16
inc
pop
jg
mov
out
dec
xchg
js
rclb
mov
int
jb
inc
ljmp
push
cwtl
xor
imul
pop
jns
clc
js
cmp
pop
faddl
ja
daa
sub
out
pop
addb
stos
punpcklbw
adc
bound
mov
cmp
fstps
xchg
xlat
insb
cli
sbb
jmp
fwait
negb
jnp
adc
cmpsl
sti
repz
sbb
stc
stos
mov
dec
inc
ret
or
mov
push
je
jbe
dec
enter
jp
xchg
pop
push
xor
cmpsb
aaa
jmp
iret
sbb
loope
mov
pop
sub
jmp
subl
movsl
shlb
push
jbe
sbb
cltd
jl
xchg
mov
test
sub
dec
je
idiv
ds
mov
xorl
push
mov
ljmp
out
mov
push
mov
aad
outsb
pop
xchg
aad
add
cwtl
push
or
xchg
pushf
scas
push
jo
addr16
dec
fs
xchg
xchg
je
sbbb
sbb
les
sahf
sbb
push
stc
out
in
xor
jg
ja
sub
mov
adc
sub
ss
pop
imulb
orb
pop
mov
sub
lahf
loop
daa
xor
jbe
ret
jbe
jbe
adc
lcall
test
cmpsb
adc
inc
int3
adc
into
xor
addb
pop
jmp
out
fdivrl
mov
arpl
fisttpl
sbb
push
filds
gs
mov
or
fsubrs
mov
dec
jae
shl
xchg
inc
cmp
dec
jle
movsl
fadd
push
jnp
mov
cwtl
enter
mov
mov
out
adc
cmc
int3
out
mov
sbb
data16
movsl
sbb
subb
mov
scas
scas
xor
scas
pop
fnstenv
mov
xchg
dec
div
dec
cmp
cs
enter
pop
xor
psubd
xchg
and
xlat
mov
jmp
jae
icebp
xchg
outsb
mov
jae
push
jae
lods
flds
sbb
ja
mov
sbb
mov
adc
sbb
sbb
ror
leave
mov
mov
lret
adc
xchg
in
fildl
adc
and
pop
sbb
in
aas
mov
inc
addr16
invd
cmpsb
cwtl
gs
fmul
fildll
in
int3
sbb
mov
cmp
pop
pusha
push
add
xchg
fdivrs
inc
add
xor
pop
pop
mov
arpl
add
sub
jge
adc
push
lret
add
inc
cmp
incl
jo
sbb
gs
jmp
jmp
lahf
cmp
xor
mov
gs
daa
pop
pusha
jg
andb
inc
jl
fnsave
xor
movsl
xchg
ds
mov
mov
cmp
sbb
lock
mov
inc
mov
push
and
adc
mov
sbb
sti
rolb
insb
and
push
and
in
jle
sti
mov
das
out
jge
in
sbb
cwtl
aas
mulb
jne
sbb
jnp
das
dec
push
mov
add
push
cmp
xor
lret
popa
xlat
imul
or
inc
imul
adc
mov
jl
xchg
jecxz
aaa
rorb
and
xchg
imul
insl
push
xchg
movsl
jae
jecxz
sbbb
clc
andl
mov
stc
inc
cld
mov
inc
fcomi
lahf
fcmovb
mov
add
adc
inc
out
pop
sbb
stc
jb
push
in
push
push
dec
or
fdivl
jecxz
stos
repz
insb
js
xlat
enter
inc
iret
das
cmp
outsl
out
cld
adc
out
test
ret
fnstsw
xlat
add
js
es
push
jb
pop
mov
leave
jge
icebp
pop
mov
enter
ss
xor
icebp
mov
std
fucom
xor
ja
cs
xor
adc
sbb
xchg
sbb
add
add
push
loope
rcrb
pop
fistl
or
mov
popf
les
popa
xchg
mov
or
clc
daa
lea
in
cmpl
lret
insb
dec
cmpsb
or
inc
leave
pop
jne
popa
and
mov
or
lea
and
pop
jb
in
int
or
jo
shll
lods
in
inc
paddq
add
outsl
and
dec
jno
jns
mov
nop
shll
dec
xchg
es
out
mov
movsl
rorb
lret
outsl
in
out
ffreep
inc
jb
out
fistl
cmp
repnz
sti
cmpsb
test
xor
mov
enter
rorl
mov
cs
cmp
andb
cmp
mov
inc
sti
adc
sub
sbb
and
xchg
push
in
or
gs
sub
daa
jmp
je
xchg
or
jbe
lea
pop
mov
fadd
pop
pop
add
jns
lahf
pop
divb
cmc
fcmovnb
std
mov
push
fsts
data16
cwtl
lcall
dec
mov
xchg
mov
sbb
mov
mov
in
ja
aas
psrld
cmp
pop
jno
push
in
xchg
mov
inc
jecxz
lea
push
or
xchg
daa
dec
je
les
shlb
jns
in
shll
sahf
jecxz
cmp
imul
in
arpl
popf
int
and
test
scas
dec
sbb
pushf
push
shrb
adc
add
or
test
xor
adc
rsqrtps
push
inc
insl
jp
mov
mov
lods
push
xchg
xchg
ja
icebp
sub
hlt
movsl
cmc
out
adc
scas
jns
ret
outsl
mov
int3
inc
fadd
push
fistpl
mov
lock
arpl
ror
orl
inc
push
rorb
pop
dec
lahf
jbe
add
xor
roll
dec
mov
stos
popf
popa
mov
rcll
loop
xor
mulb
push
movsb
aam
test
adc
sub
mov
sub
call
das
clc
and
outsl
pusha
xchg
xchg
push
mov
mov
xchg
out
mov
ljmp
daa
sub
lret
js
add
stos
adcb
addr16
lods
xchg
mov
movsl
mov
jae
jecxz
lret
rol
sahf
jno
sub
xchg
nop
pop
jo
inc
push
ljmp
sub
and
jecxz
mov
cwtl
push
cmpsb
mov
sub
flds
out
pop
xor
out
inc
pushf
mov
dec
jne
lea
or
popf
inc
out
popa
lcall
jge
mov
int3
mov
push
xchg
call
add
cmpsb
lods
testl
sbb
jecxz
nop
std
add
dec
or
notl
pop
add
xchg
jmp
mov
insb
mov
push
cmp
xchg
loopne
fwait
pop
icebp
lea
xor
or
test
fs
scas
sahf
ficoml
xchg
testl
call
ds
icebp
ret
insl
outsb
xor
std
inc
inc
cld
fld
inc
cmc
cmp
cmp
pop
jbe
or
popa
roll
push
movsl
sbb
dec
es
or
arpl
lds
or
std
xchg
loop
lret
dec
gs
ljmp
mov
insb
or
mov
aaa
aas
add
and
fs
dec
sbbb
std
lret
sub
inc
stc
out
ja
cld
mov
nop
sub
pop
pop
jns
arpl
mov
lods
mov
pushl
ljmp
mov
lods
loop
bound
push
and
mov
cmp
mov
test
mov
pop
fisttps
jns
seta
fwait
lret
adc
adc
cmpb
push
sub
cs
push
adc
in
test
lahf
inc
sub
movsb
shrl
mov
ret
adc
pop
xor
enter
outsl
psllq
test
lret
ljmp
pop
test
jmp
adcb
sbb
stos
mov
stc
push
loop
loop
out
lea
cld
sarl
mov
cmp
insb
push
xchg
sbb
das
xchg
lahf
pushf
fstpt
stos
jl
jmp
cmp
divl
jo
xor
sub
inc
jb
or
add
int3
or
popf
pop
push
cmc
int
mov
out
xor
mov
adc
pop
fstl
gs
cmp
fstl
inc
mov
loopne
subb
out
pminsw
leave
xchg
mov
lods
inc
fcmovne
incl
sti
mov
divl
loopne
add
sbb
xor
test
pop
aas
pop
push
in
rcl
lret
cmpsb
inc
aam
add
cltd
mov
daa
imul
jns
pop
pop
mov
movsl
xor
mov
and
popl
fadds
sub
fcoml
jl
rcrb
fwait
sub
jp
add
cmp
pop
add
bound
jmp
cmp
mov
popa
ret
mov
cmp
mov
lahf
inc
sub
sbb
lods
jb
dec
adc
mov
loopne
dec
mov
call
and
incl
dec
jge
inc
hlt
or
jg
aaa
lods
jle
jecxz
fdivl
add
mov
inc
cmpsl
arpl
inc
pushf
sti
pop
inc
sbb
mov
xchg
inc
jmp
divl
aam
loop
cmpsl
test
cmp
aas
adc
xor
loope
xor
sub
inc
cmp
bound
les
lds
dec
enter
xchg
inc
lods
mov
js
push
aad
push
add
mov
outsb
push
push
imul
aas
cmp
fcmovbe
dec
icebp
mov
mov
ljmp
mov
add
add
aaa
jmp
fwait
pusha
call
add
rcll
and
inc
mov
pop
js
popa
mov
imul
mov
rcrb
cltd
pusha
push
push
iret
push
ja
aas
scas
push
or
dec
repnz
inc
mov
mov
or
in
add
adc
loope
loop
test
pop
or
daa
pop
outsb
sub
or
pop
enter
jb
or
xor
cmp
push
loope
lret
aad
test
lcall
test
xor
mov
js
add
pop
sbb
inc
mov
test
mov
jp
loope
jae
mov
mov
dec
push
stc
jl
adc
mov
mov
add
stos
xchg
cmpsb
sub
subb
pusha
jb
or
ret
xchg
fildll
cli
add
imul
dec
cmc
cmp
rol
push
xor
notl
mov
pop
adc
push
gs
jle
sbb
addr16
mov
in
popf
or
pop
jnp
push
cmp
jle
loop
rol
mov
add
jb
cmp
and
cwtl
daa
es
or
and
repnz
out
push
mov
dec
dec
ficoms
data16
inc
pop
push
pop
fs
je
test
xchg
xlat
movsb
out
test
cmpsl
hlt
mov
inc
adc
and
xor
inc
pop
push
pop
fs
je
test
xchg
xlat
movsb
out
test
cmpsl
hlt
mov
inc
adc
and
xor
inc
pop
push
pop
fs
test
xchg
movsb
out
test
cmpsl
hlt
mov
inc
adc
and
xor
inc
pop
push
xchg
in
hlt
enter
jge
out
xorb
or
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
aam
sahf
repz
ret
mov
ror
mov
push
jae
inc
push
push
dec
and
xor
jle
cltd
jecxz
repz
ret
mov
mov
cmp
add
push
jae
inc
cld
push
dec
dec
pop
xor
jle
xchg
jecxz
repz
cmpsb
rcl
mov
jmp
push
inc
xor
popa
ja
fs
nop
sahf
mov
movb
sbb
and
out
shrb
cmp
and
jno
mov
scas
push
or
aaa
cltd
pop
loope
rcll
aaa
repnz
cli
addb
inc
add
sahf
out
jl
subb
or
loope
jle
roll
sbb
les
mov
dec
jmp
test
add
mov
jmp
jbe
cs
bound
or
mov
sahf
sub
cmp
jmp
loope
cmp
xor
add
jle
shll
xchg
jae
push
jnp
mov
icebp
jb
and
mov
dec
pusha
mov
jle
dec
jecxz
repz
ret
test
mov
and
pop
arpl
jae
inc
daa
push
push
and
outsb
add
std
out
mov
ret
fcmovbe
stos
mov
in
lds
jb
es
daa
and
push
or
pop
mov
mov
incl
sub
or
dec
sub
xor
push
jle
out
lods
mov
mov
fidivs
push
arpl
jae
inc
ds
dec
and
outsb
add
mov
sahf
repz
ret
mov
mov
cmp
push
arpl
jae
inc
ds
dec
and
outsb
add
mov
pop
fwait
imull
adc
xlat
ret
jp
decb
pop
push
lret
push
daa
add
nop
fwait
rcr
mov
shrl
xor
shll
das
and
ljmp
lret
inc
mov
popa
xchg
mov
and
orb
ljmp
test
pusha
mov
mov
and
mov
jmp
dec
pop
or
jmp
in
push
icebp
movsl
test
xor
insl
add
cs
in
je
mov
mov
lea
data16
fbstp
mov
mov
inc
pop
add
mov
iret
movsb
xchg
das
mov
shlb
nop
sti
cmp
xor
mov
outsl
mov
pop
or
cwtl
sub
push
inc
xor
cwtl
mov
popa
sub
xchg
xchg
cmp
lcall
notl
lret
add
outsl
lods
xchg
sub
mov
test
lods
ss
mov
sbb
dec
addr16
inc
add
movsl
mov
lea
notb
and
jnp
ret
mov
ja
sar
daa
sbb
sub
jmp
push
in
cmp
ljmp
cld
xchg
dec
repnz
inc
dec
mov
push
test
std
cwtl
add
out
mov
lods
and
shrb
fidivrs
sub
lret
add
dec
mov
iret
fld
dec
xchg
pop
aaa
in
mov
out
jmp
fbstp
lahf
xor
cmp
stos
je
jp
sbb
mov
ljmp
pop
imul
push
cmc
adc
xchg
pop
fiadds
and
add
adc
aaa
pop
mov
int3
int3
jl
fsub
leave
cltd
scas
push
lret
mov
fs
sub
push
bound
mov
push
jmp
je
jg
int
xchg
dec
mov
xchg
and
imul
mov
in
inc
push
cs
push
int3
inc
cmp
sub
stc
inc
enter
inc
popa
or
and
mov
dec
loopne
xor
push
xlat
pusha
popa
mov
popa
fsubl
cli
jp
jg
loop
push
and
dec
lret
sub
lahf
sbb
add
sub
stos
ret
lret
cmp
ljmp
pusha
lock
js
fwait
jle
sbb
pushf
xor
inc
sahf
push
xchg
cmp
out
and
lods
jb
addr16
or
fs
fwait
shll
test
or
daa
push
pop
sbb
ret
mov
inc
add
dec
pushf
jo
or
movsb
and
add
inc
xchg
cmpsl
add
sub
inc
and
add
jmp
add
inc
insb
iret
and
ds
dec
jl
cmpsl
adc
sub
sbb
push
sbb
or
jo
xchg
pop
push
mov
mov
sahf
cmpsb
inc
xchg
cld
xor
adc
push
cmpsl
sti
popa
iret
in
mov
loop
xorb
stos
add
mov
mov
dec
fistl
iret
lods
inc
out
insb
pushf
xor
sahf
inc
mov
insl
mov
or
and
iret
mov
stos
mov
inc
and
dec
lret
cmp
sahf
add
cmpl
pop
push
popa
push
pop
push
jecxz
jge
mov
mov
jg
fs
divb
gs
mov
mov
mov
mov
or
jae
lods
in
mov
imul
mov
pop
in
xor
pop
push
sub
cmp
mov
orl
and
pusha
push
movsb
pop
add
push
dec
sub
xchg
xchg
cmp
les
iret
inc
xor
xchg
xchg
mov
loope
lcall
adc
ret
jnp
pop
inc
fwait
pushf
lock
mov
mov
ljmp
mov
and
insb
and
or
sub
scas
shrb
sbb
add
outsb
fisttpl
out
imul
jmp
cld
dec
mov
incl
cmp
fstpt
lret
sbb
cmp
xlat
mov
cmp
mov
in
std
sbb
icebp
out
sbb
jns
push
xchg
pop
sub
rol
jmp
flds
lea
js
or
insl
pop
lret
adc
iret
lret
test
pop
xchg
repnz
mov
jp
scas
xchg
mov
stos
mov
dec
mov
fwait
push
mov
cmpsl
jne
fdivl
lcall
insl
cld
inc
andl
and
loop
jge
mov
mov
xchg
popa
out
push
lret
xchg
mov
or
inc
fs
inc
rcll
mov
outsb
and
rorl
ss
inc
insb
cs
sub
add
stos
lcall
or
add
addr16
sbbb
push
loopne
push
fdivrs
insl
xor
or
pop
test
pop
ss
addr16
mov
data16
pop
mov
push
push
add
lock
and
jle
adc
sub
dec
and
push
int
inc
sub
movsb
dec
mov
and
out
icebp
js
pop
or
int
cmpsl
jmp
divl
stos
std
fildll
inc
or
pop
sub
ja
jle
cmp
jo
jl
mov
clc
daa
adc
xchg
xor
cs
mov
movsl
push
mov
daa
jmp
cltd
pushf
jle
jo
add
dec
push
xor
call
cmp
fnsave
push
or
std
fstps
scas
and
mov
mov
rol
sub
or
dec
das
cmp
ja
cli
test
inc
cs
inc
mov
lret
incl
int
and
arpl
mov
sbb
jmp
push
mov
mov
add
sahf
or
pushf
outsb
adc
sub
dec
sub
insl
outsl
test
and
sub
dec
jno
mov
push
fwait
mov
movsl
fdivs
outsl
mov
pop
cmp
lcall
fldt
pop
jle
push
aad
xchg
and
jnp
iret
mov
mov
pop
rclb
fwait
jmp
pop
rcrl
xchg
xorl
add
and
xorl
roll
cmp
adc
ret
jecxz
int
add
push
jp
mov
leave
mov
cmp
inc
pop
popa
in
cmpsb
enter
scas
sbb
mov
les
std
popa
std
lret
push
lret
fwait
dec
in
rolb
sbb
mov
imul
pop
aas
mov
aaa
popf
jmp
loop
fwait
push
scas
call
fwait
xor
rcll
mov
lea
push
roll
sbb
mov
inc
push
push
bound
and
mov
bound
cmp
add
nop
mov
fs
inc
clc
cmp
inc
or
es
clc
das
notb
jae
or
ds
add
daa
or
add
jle
fldt
nop
data16
les
iret
mov
mov
out
cmp
mov
stos
mov
ss
dec
in
js
incl
xor
outsl
lcall
aam
insl
xor
fmull
pop
lcall
ficoms
cmpsb
jp
cmp
pop
sbb
imul
lahf
push
cs
sbb
mov
dec
rol
bound
mov
dec
lock
popa
dec
scas
add
xchg
jecxz
jb
push
outsb
call
test
sub
pop
or
nop
fbstp
xor
and
push
sbb
lret
jnp
sbb
ret
lret
fucomi
aad
inc
xor
mov
cmp
dec
outsl
data16
popa
in
cmc
aad
jno
pop
cmp
jp
out
out
xor
test
adc
outsb
mov
jnp
gs
push
or
ffree
dec
les
repnz
push
mov
sub
dec
cmc
pop
scas
movl
imul
cmpb
cli
sarb
imul
mov
jmp
cmpsl
loope
inc
cmp
lahf
in
push
fldcw
jl
inc
loope
or
jb
or
scas
adc
add
xor
cltd
ret
fstp
jns
in
ja
mov
dec
pop
inc
jl
push
jg
dec
xchg
xor
leave
scas
or
cli
sub
push
xchg
pop
scas
into
sub
fnstcw
lock
push
fs
insb
inc
das
pusha
cli
push
not
mov
mov
xor
std
push
sub
std
xchg
pop
mov
rcrb
imul
std
nop
xchg
out
mov
nop
ds
jle
inc
adc
shlb
ja
inc
shll
rsm
lods
in
mov
xchg
outsb
push
xchg
jmp
push
and
das
fnop
stos
stos
add
or
inc
pop
popl
or
sub
push
add
scas
inc
insb
ret
ret
mov
mov
fistps
xchg
cwtl
dec
sub
push
arpl
arpl
cwtl
insb
pop
pop
enter
push
pushf
pop
insl
pop
sbb
sbb
pop
cmc
jg
dec
js
pop
adc
in
dec
pop
dec
icebp
or
mov
ror
ljmp
cmp
out
arpl
mov
mov
sbb
adc
push
or
fs
push
pop
fidivs
int3
mov
in
mov
mov
dec
mov
aam
into
cmp
inc
pop
pop
out
gs
cmp
jmp
mov
jg
stos
mov
into
inc
in
xlat
add
xchg
cmc
xor
dec
adc
push
push
mov
adc
negl
jae
lcall
pop
iret
jle
sbb
push
xor
and
jmp
test
cmc
addr16
popa
int
test
push
lods
xor
pop
mov
adc
xchg
push
xchg
mov
xor
jg
cmp
pop
mov
nop
add
and
mov
cmp
and
aad
xchg
cmp
jmp
test
in
cmp
add
lods
imul
iret
out
jae
jl
in
inc
push
jmp
fbstp
les
jae
outsl
mov
adc
lds
int3
jns
dec
popa
push
lods
add
loopne
out
xor
xchg
push
jl
inc
gs
pop
test
testb
mov
inc
add
push
mov
add
push
mov
into
cmp
movsl
push
jl
cltd
pushl
repnz
pop
loop
les
fldl
xchg
xchg
sbb
mov
push
imul
jge
xchg
insb
out
mov
scas
sahf
and
inc
sbb
int3
sbb
imul
mov
and
or
jae
in
xchg
sbb
fstps
movsb
pop
inc
inc
leave
out
jb
addr16
dec
mov
jl
xchg
pop
rorl
or
mov
das
jp
lods
and
fnstcw
bnd
xlat
lahf
mov
and
sub
ficoms
adc
mov
outsl
sarl
lds
mov
xor
popa
ds
push
inc
inc
std
jns
sbb
shr
adc
jge
insb
mov
adc
ss
cltd
movsl
in
scas
shrl
out
call
fbld
fwait
stos
insb
fadds
addr16
jae
mov
imul
dec
jle
dec
imul
push
add
xchg
push
es
inc
add
dec
pushl
sub
in
cmpl
dec
add
fisttps
and
xor
aas
insl
das
adc
ljmp
fidivl
and
sbb
cmpsb
inc
das
pop
leave
ja
xchg
add
mov
notb
mov
jp
hlt
mov
xchg
fcmovnbe
jae
idivb
stc
fucom
out
mov
cltd
stc
adc
mov
cmp
clc
lahf
lcall
sti
das
loope
in
add
rcrl
repnz
sahf
and
icebp
in
and
jge
in
scas
or
and
data16
xor
daa
shll
inc
sbb
inc
int
aam
adc
ljmp
inc
inc
fcoms
inc
lods
xchg
xchg
imul
cmp
sbb
inc
test
push
or
or
mov
and
scas
mov
cmpsl
inc
pop
lcall
mov
xchg
or
push
adc
sub
xchg
aam
loope
cmpsl
push
cmpsl
mov
dec
adc
xor
cld
add
jmp
mov
lock
mov
cmp
test
lock
mov
mov
cmp
test
push
hlt
mov
adc
roll
dec
adc
cwtl
mov
jge
loop
or
add
dec
xor
hlt
in
lods
loope
mov
imul
adc
lods
dec
sub
adc
lret
mov
jnp
inc
jbe
sub
out
xlat
ss
push
dec
dec
push
xchg
jns
xchg
pop
or
lret
or
lret
xchg
mov
mov
jmp
lods
repnz
pushf
add
jecxz
and
repnz
mov
dec
test
cld
cltd
repz
jne,pn
int
mov
jnp
test
jecxz
add
test
cmpsl
mov
mov
imull
mov
aad
insb
outsb
arpl
rcrb
cmp
mov
adc
xor
mov
cmp
sbb
fstpt
mov
xchg
std
cmc
stc
pop
stos
xor
in
out
dec
call
mov
push
cmc
fisttpll
mov
lahf
lea
mov
pusha
jl
pop
lds
into
push
dec
mov
ffreep
repnz
jno
jg
mov
adc
dec
pop
iret
loop
out
pop
adc
or
ds
flds
pop
sbb
es
jl
sbb
or
jae
loopne
in
sti
dec
pushf
jmp
cmp
testb
out
mov
test
lahf
xchg
mov
out
jno
push
stc
jl
cltd
push
cmp
and
add
stos
pop
repz
cmp
jne
aad
or
mov
adcl
xor
add
lock
or
and
test
fiadds
mov
out
test
jbe
and
dec
mov
sbb
pop
add
mov
and
orl
mov
mov
adc
cltd
adc
nop
hlt
bound
inc
test
dec
mov
inc
jge
dec
clc
fidivl
mov
sti
jp
lahf
mov
div
jg
imul
xor
into
add
pushf
xchg
sbb
mov
mov
mov
lock
mov
mov
pop
pop
popa
sti
cmp
add
mov
gs
inc
xor
or
popa
mov
fwait
pushf
std
inc
cmpsl
mov
bound
fmuls
xor
jb
mov
enter
data16
pop
outsl
jne
dec
scas
add
in
lock
adc
test
xor
cmpsb
add
adc
sti
mov
hlt
imull
fwait
mov
sub
and
inc
cmp
mov
inc
push
sbb
negb
add
and
lods
sahf
mov
aad
mov
hlt
cmp
sbb
stos
jl
push
xchg
dec
ret
bound
pop
and
popf
shlb
sbb
incl
daa
into
sub
and
pop
shrl
outsb
addr16
shlb
pop
xor
xor
pop
xchg
dec
xchg
fst
dec
out
dec
rcll
push
rol
push
bound
push
inc
xor
dec
inc
call
fmuls
mov
test
pop
ret
fisttpl
jae
test
mov
xchg
rcll
adc
xor
rorl
inc
sub
iret
push
xchg
lret
aad
cltd
inc
or
push
leave
mov
or
mov
xor
push
loopne
mov
cld
mov
jo
and
scas
aas
lret
repnz
xorb
pop
mov
pop
addr16
out
jne
jo
and
pop
hlt
mov
mov
das
mov
in
pop
dec
push
mov
pop
inc
jg,pt
aad
ret
fnstenv
add
fidivs
icebp
mov
push
insb
mov
ja
cwtl
aam
add
sbb
adc
mov
daa
call
mov
cmp
leave
sbb
sahf
or
aaa
btr
sub
xor
repz
lcall
test
xchg
into
fbstp
push
mov
enter
and
jge
mov
inc
jecxz
leave
jmp
push
push
stos
dec
or
sub
mov
clc
lods
mov
aad
mov
mov
outsl
lret
mov
mov
push
cld
lret
or
dec
cmc
mov
jmp
int
out
decl
in
jecxz
mov
inc
xor
inc
add
xchg
xor
mov
push
xchg
sbb
push
sbb
mov
inc
inc
sbb
push
fdiv
ds
repz
jne
imul
rcrb
jb
insl
sbb
rclb
lods
xchg
mov
mov
cltd
push
movsl
add
cwtl
sarb
insb
inc
pop
fsts
subb
mov
add
pop
js
mov
sti
cmp
das
add
jno
sub
mov
lods
or
mov
and
shll
mov
aaa
das
xchg
add
xor
push
fdivrl
pop
and
loope
leave
int3
aaa
lahf
insb
adc
xor
and
push
and
xchg
adc
loop
call
push
add
in
cli
jno
cwtl
bnd
fs
cli
lcall
jg
loopne
stc
in
pop
cmp
mov
into
mov
jb
inc
stos
xor
jmp
inc
inc
pusha
cmp
test
repz
aad
mov
repnz
pushf
push
mov
xchg
in
jge
xor
mov
sub
xchg
in
sbb
and
jo
add
or
cld
or
test
into
adc
cmp
pop
cmp
push
jne
loope
mov
int3
fdivrs
push
sub
jb
sbb
cltd
les
rcrl
faddl
sbb
ficoml
cmp
push
loope
sbb
xchg
jmp
cmpsb
popf
pop
pop
call
push
jmp
insl
movsb
push
sar
sarb
pop
fmull
in
push
push
addl
jo
jecxz
loope
sbb
mov
lahf
fsts
sub
fcoml
flds
pop
mull
fsub
movsb
lret
mov
popa
pop
stos
mov
into
pop
jb
add
xchg
pop
push
adc
xchg
fsubs
xor
shrb
or
mov
xchg
sbb
mov
xchg
sub
rep
cmp
mov
shl
lret
lods
adc
mov
test
ret
ss
fstl
out
jl
xor
sbb
adc
pop
push
ss
push
in
inc
push
aad
dec
insl
sti
into
notb
lods
popa
cmp
xchg
dec
call
dec
push
xchg
repz
sub
adc
lods
fs
jbe
xor
jne
push
pushf
mov
sub
mov
inc
pop
popa
popl
loopne
icebp
add
pop
repz
jecxz
lds
jge
mov
pop
pop
jecxz
hlt
xlat
movsb
leave
lret
mov
fldl
mov
adc
outsl
divb
push
movl
insl
xchg
pop
mov
sarb
sbb
mov
sbb
jbe
cli
das
or
hlt
pop
mov
leave
popa
xor
mov
and
pop
xchg
or
fwait
dec
and
icebp
stos
cmp
push
les
cld
xor
iret
and
jl
lret
or
insl
jno
pop
and
in
repnz
or
xor
fisttpll
push
pop
push
inc
je
fstpl
mov
mov
gs
and
push
sub
push
jbe
daa
ficompl
mov
push
push
ror
in
and
rclb
adc
xchg
and
pop
sbb
xchg
inc
xchg
push
cmp
leave
out
loope
imul
xchg
add
insl
fs
mov
test
jg
xchg
or
loopne
cmc
lahf
cltd
or
cmp
out
ja
aas
nop
ds
mov
aam
lcall
mov
cmp
stos
das
std
loopne
data16
stos
mov
jle
mov
lds
cmc
xchg
add
lds
pop
ret
mov
push
fbld
stos
loop
clc
in
dec
adc
push
and
inc
cli
dec
sub
cmp
cwtl
mov
mov
cld
push
lcall
shlb
and
scas
or
jecxz
rcrb
sub
mov
inc
cmovae
ja
mov
mov
stos
lods
pop
xchg
mov
aad
fnstcw
sahf
rolb
gs
stos
sub
xor
push
ret
push
loope
push
dec
jo
cmp
cmp
push
and
test
pop
cmp
push
mov
xchg
adc
push
add
and
repnz
sbb
int
es
ficoms
addr16
or
fwait
addr16
jnp
inc
inc
xor
sbb
dec
add
mov
inc
fistl
jle
test
cwtl
mov
rcll
cmp
pop
sbbb
jae
mov
fcomps
lcall
inc
in
sub
dec
pusha
imul
push
fisubs
imul
ret
mov
mov
cmp
push
arpl
jae
inc
ds
dec
and
outsb
add
mov
sahf
repz
ret
mov
mov
cmp
push
arpl
jae
inc
ds
dec
and
outsb
add
mov
sahf
repz
ret
mov
mov
cmp
push
arpl
jae
inc
ds
dec
and
outsb
add
mov
ret
mov
mov
cmpl
arpl
flds
int3
xchg
cld
sub
in
inc
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
push
fimull
out
pop
mov
inc
mov
lcall
fstpl
int
std
ds
jns,pn
or
out
pop
sahf
dec
mov
insl
sbbb
lods
outsb
popf
xor
push
std
ds
movsl
js
or
scas
sub
pushf
stc
pop
scas
insl
aad
enter
mov
dec
jae
inc
cmp
xchg
dec
ja
cmp
mov
test
shr
icebp
or
jae
int
lock
loopne
imul
and
xchg
push
std
mov
arpl
mov
xchg
dec
cmpsl
cmp
xchg
jb
ja
dec
pop
cmc
lret
pop
lea
jg
nop
int
mov
xor
fisubs
fdivr
shr
mov
cmpb
pushf
fisttpl
outsl
and
int
cld
shr
loop
add
sbb
lods
lds
mov
sahf
call
sbb
and
mov
into
pop
scas
scas
or
pop
add
jbe
dec
std
shr
inc
inc
push
pop
out
cmp
sahf
xor
cmp
pop
pop
out
jl
push
xchg
and
loopne
es
sbb
fidivrs
dec
xchg
push
xorb
and
or
insl
jmp
fcomp
enter
mov
inc
push
cwtl
push
xorb
fmull
aas
fistpll
mov
push
mov
pop
jno
popa
cs
xchg
jle
push
rorb
jge
insl
scas
popf
pop
lea
jle
outsb
fstpl
int
std
ds
cs
sub
mov
insl
scas
popf
pop
lea
jle
outsb
fstpl
int
std
ds
cs
sub
xchg
stc
xor
jle
ffreep
ljmp
adc
push
xor
sti
scas
lret
mov
cmpsb
jg
test
ret
push
lods
ja
push
mov
dec
add
loop
into
fwait
push
push
les
cltd
push
pop
aaa
add
jns
xchg
push
aam
loope
fisubs
cmp
adc
jmp
add
out
cmc
fmul
mov
xorl
mov
call
xchg
out
adc
nop
push
pop
add
xor
sub
cmp
cmpsb
leave
fistpl
and
xchg
int3
inc
rcl
jecxz
xor
fdivl
ret
out
and
xor
daa
popa
rcl
dec
insl
test
fstl
add
pop
inc
dec
jmp
or
mulb
jne
imul
lock
xor
and
les
aam
sbb
in
add
mov
inc
sbbl
int3
pop
test
inc
xchg
aas
inc
cvtps2pi
icebp
sub
call
test
push
mov
pop
lods
jbe
cmp
iret
xor
pop
sbb
je
les
cmp
ficompl
sub
fstl
jmp
mov
cmp
xor
int
jae
mov
out
inc
stos
mov
aad
ljmp
pop
sti
popf
add
loop
push
into
mov
outsb
xchg
ja
mov
or
movsb
movsl
out
jle
imul
leave
fbstp
mov
push
jnp
test
divb
int
and
in
push
sbb
fwait
cmp
iret
sbb
sub
je
fwait
sbb
aad
xchg
dec
push
roll
cmp
mov
xor
aaa
inc
jns
lahf
xor
movsb
or
xchg
hlt
push
rclb
out
addb
jg
ret
mov
xchg
cli
and
popf
mov
pop
xchg
loopne
jne
dec
out
mov
pusha
dec
lcall
mov
out
mov
and
jns
in
mov
in
cmc
fisttpll
inc
push
mov
sbb
mov
xchg
popa
add
mov
sbb
shrl
jmp
push
push
pusha
mov
lcall
stc
xchg
repnz
data16
jbe
push
xor
mov
mov
jne
pop
cmc
sub
pop
mov
in
repnz
pop
xchg
jmp
and
push
call
mov
mov
cmp
cwtl
roll
enter
sub
fst
out
ret
push
jno
or
xchg
sub
mov
stos
sbb
loop
sub
jg
inc
repz
lcall
xchg
jmp
push
int3
pop
dec
addl
ds
jle
xchg
cmpsb
mov
js
mov
jbe
enter
mov
fs
fsubs
inc
mov
push
sti
mov
xchg
inc
push
aas
pop
ss
pop
push
fdiv
xor
push
pop
mov
lea
decb
mov
inc
fcoml
in
xor
into
mov
jle
fs
xor
pop
pop
lret
lods
xchg
push
imul
cmpb
ret
lock
rclb
and
movsb
insl
das
shrb
outsb
push
arpl
xor
mov
mov
push
mov
cmp
clc
ret
sbb
add
cmp
fnsave
push
jno
push
fstpl
subb
mov
inc
add
adc
out
push
jge
mov
ret
add
in
fstp
lret
pop
add
push
add
xor
outsl
mov
cmp
xchg
adc
xchg
add
sarl
in
ret
insb
sbb
in
fs
nop
hlt
xchg
jge
ss
or
hlt
xchg
add
out
ss
cld
xchg
adc
outsl
fcoms
scas
movsl
xor
mov
into
in
dec
faddp
dec
mov
cs
mov
les
adc
and
scas
sub
mov
xchg
sbb
jecxz
clc
mov
jnp
out
or
sub
scas
std
int
push
push
insb
sarl
test
test
mov
xchg
sbb
jbe
mov
sub
lcall
repnz
aas
jp
sbb
in
mov
gs
mov
add
sub
mov
adc
cmp
push
movsb
sub
cltd
movsb
test
mov
scas
and
jae
pushf
mov
cmp
cmpsl
mov
in
outsl
inc
aad
in
movb
sti
cmp
loopne
gs
xor
pop
sub
popf
imul
pop
cmp
adc
adc
fs
pop
out
mov
add
inc
aam
ss
add
push
pusha
in
fadd
jl
into
adc
xchg
das
mov
lds
stos
push
jle
inc
scas
push
mov
out
dec
xchg
sbb
fcompp
or
add
push
fcompl
jg
push
lcall
mov
sub
std
int3
call
movsl
das
or
fimuls
xor
lahf
gs
and
and
add
bnd
fidivrl
clc
mov
adc
mov
hlt
imul
int
repnz
or
inc
push
lods
push
pop
clc
jl
cwtl
dec
or
mov
pushf
stos
mov
cmp
cmp
jns
or
jle
in
add
loopne
enter
in
sbb
or
out
mov
or
jmp
popl
out
or
ret
xchg
mov
dec
dec
js
insl
xchg
iret
idivb
aas
lcall
mov
mov
adc
shlb
jo
insl
jp
mov
push
cmpsb
les
bnd
push
and
je
sbb
nop
inc
ret
loop
push
push
scas
fs
mov
sub
insl
inc
mov
push
add
clc
xchg
rol
aas
xchg
push
es
and
aam
xor
mov
or
and
and
insb
nop
ja
xor
mull
inc
mov
lret
int
test
out
or
js
mov
test
inc
push
loop
cmpsl
or
call
cmp
pop
lret
jp
sbb
out
test
jb
pop
dec
ud1
mov
mov
adc
xchg
outsl
dec
insl
enter
push
outsb
pop
dec
mov
mov
out
jns
xor
sarl
shl
pop
and
enter
xchg
outsl
or
in
inc
std
cmp
sbb
fcmovnbe
rorl
in
add
shrl
int
mov
adc
addr16
cmc
mul
mov
mov
rcrl
pop
push
pop
decl
mov
xchg
notb
dec
jp
mov
clc
loop
push
insb
inc
or
xor
ret
lcall
sbb
sbb
xchg
jno
inc
and
inc
xor
in
cmp
and
cmpsb
jg
fdivrs
push
cltd
pop
scas
cwtl
dec
push
and
mov
ret
test
cmp
push
in
popa
insb
aas
jb
lcall
jno
jne
sub
pop
mov
xchg
mov
pop
icebp
jmp
mov
sarb
push
inc
dec
xor
pusha
scas
xchg
and
cmp
or
mov
jbe
into
out
dec
add
movsl
stos
pop
dec
and
sub
mov
and
stos
pop
movsb
fadd
mull
lret
fs
out
jmp
je
jno
jg
fs
fwait
mov
faddl
dec
inc
or
into
movsl
mov
lods
sarl
shl
push
lea
push
lea
fmull
adc
mov
adc
cmp
call
cmp
push
fldt
pop
lock
hlt
xor
push
imul
dec
pop
inc
call
push
rcrb
inc
in
and
cmp
mov
cmp
shl
sub
xor
and
push
iret
add
test
cmp
icebp
out
mov
xor
add
nop
xor
mov
loope
jae
cmpsb
inc
das
or
movsb
jmp
mov
push
sbb
mov
outsl
xchg
stos
test
pop
sub
mov
adc
push
into
stos
lea
pop
mov
stc
shll
xor
pushf
push
pop
fsincos
adc
testb
inc
dec
mov
inc
xchg
insl
adc
mov
push
cli
inc
jo
xor
mov
imul
fwait
and
out
jle
cmp
pop
mov
dec
inc
adc
popf
and
stos
aas
sub
aam
push
jg
push
adc
sbb
fidivs
jecxz
cmp
test
dec
leave
sbb
jnp
mov
mov
adc
xor
por
mov
test
sbb
jge
sub
xorb
mov
jecxz
lods
aam
lret
jmp
adcl
mov
mov
pop
repnz
sbb
dec
out
test
fdivl
push
fisubl
divb
xchg
mov
pop
mov
hlt
push
icebp
pop
negb
add
sti
pop
jnp
fisttpll
lahf
push
dec
push
mov
pop
insb
rcrl
pop
test
sub
lcall
push
imul
push
cs
mov
lock
mov
inc
dec
sub
xchg
mov
aam
lahf
dec
and
loope
stc
in
test
push
sub
inc
ret
js
push
fdivr
xchg
je
inc
imul
add
cmp
mov
add
inc
loop
mov
dec
xorb
and
arpl
fsubl
das
stc
mov
dec
add
lretw
mov
aas
add
sbb
movsb
dec
idivb
out
lcall
mov
mov
cli
shrl
loopne
mov
sbb
jmp
aam
adc
sub
jle
sbb
fmul
or
bound
xchg
push
les
outsl
mov
jmp
loope
adc
inc
fdivs
xor
lret
mov
adc
sbb
or
mov
dec
xchg
iret
push
int
fisttpll
roll
loop
test
inc
xchg
loope
movsb
inc
rolb
mov
sbb
call
mov
ret
inc
fs
ficoml
loop
sbb
mov
push
mov
repz
mov
pop
mov
out
xor
xchg
pop
dec
in
rcrb
and
xchg
cmpsb
jb
xchg
test
sahf
insb
push
jns
sub
jg
mov
sbb
mov
mov
nop
lds
jne
nop
cltd
xor
jo
call
in
out
lret
clc
sbb
jne
add
mov
xchg
jmp
inc
movsb
ret
push
aaa
popl
aas
xor
sahf
stc
jl
jecxz
add
in
cmpsl
loop
outsb
inc
jmp
inc
mov
mov
add
sub
ds
test
mov
pop
std
inc
jae
mov
jo
mov
mov
jb
sub
out
dec
in
testb
pop
adc
jb
add
push
hlt
ja
dec
push
cmpsl
les
jle
lds
xchg
dec
sub
cmpsl
lahf
dec
sti
icebp
arpl
adc
lods
sbb
cmpsb
shrl
fidivrs
jns
xor
xor
dec
sbb
scas
std
xor
sub
mov
aam
fstl
xchg
jmp
push
sti
pop
mov
aaa
fadds
pop
in
mov
jecxz
sahf
jo
mov
xor
sahf
sbb
push
lcall
inc
mov
cmp
mov
rcr
stos
sub
iret
inc
loopne
pop
sbb
cltd
dec
cs
xor
mov
cmp
cmp
cmp
ret
imul
dec
arpl
ss
xor
aas
xchg
lret
jbe
filds
xor
pop
jno
add
subl
out
inc
jge
jl
or
push
sub
add
jno
inc
test
inc
shlb
loope
mov
std
clc
out
sbb
in
testb
iret
or
aaa
test
pop
mov
fucomi
nop
cmp
xchg
push
fdivrl
out
nop
xor
cli
cmpsl
mov
mov
sbb
jle
jo
cs
mov
dec
arpl
xor
movsl
adc
sbb
insl
dec
adc
lea
popf
fwait
fwait
outsl
push
push
add
cli
cld
mov
les
mov
sub
dec
pop
outsl
in
xor
lods
popa
cmp
xchg
pop
mov
pop
repnz
mov
mov
xlat
cld
jmp
rcrl
fdivl
cli
shll
adc
mul
das
cmp
fistps
xor
pop
cmpsl
idivb
xor
ja
add
punpcklwd
jmp
loop
imul
in
inc
push
out
out
cmp
xchg
fnstcw
stos
icebp
jp
cmpsb
inc
aas
sub
testl
xor
sub
xchg
btl
ret
scas
mov
add
sub
addr16
jo
movsl
sub
lock
dec
std
and
in
imul
and
jle
lcall
lods
repnz
push
out
jnp
sbb
adcb
aaa
je
and
jmp
sbb
cli
cli
xorl
mov
add
shrb
int3
lahf
adc
push
xor
pop
mov
push
xchg
cmp
clc
mov
xor
xor
jle,pt
inc
fbld
cltd
stos
scas
dec
and
aad
mov
pop
loop
sbb
xor
aad
or
mov
inc
add
jae
adc
cmpsl
rorb
shlb
fdiv
loopne
pop
and
es
mov
fmuls
mov
ror
mov
daa
sub
push
mov
jno
sahf
lahf
xchg
popf
hlt
and
lock
es
pop
push
jecxz
shll
xor
lret
inc
ret
les
mov
jg
cmp
nop
push
int3
and
inc
xor
sbb
sub
int3
inc
rcrl
push
movsl
ret
in
mov
add
addb
add
in
movsl
iret
test
cmpsl
sti
in
jb
aam
jecxz
dec
add
lds
xchg
enter
fmull
sub
sub
bound
outsb
add
xchg
fisubs
pop
mov
pop
mov
mov
mov
insl
movsl
dec
adcl
and
dec
xor
fwait
lret
mov
dec
shl
or
insb
bnd
lea
dec
out
in
out
dec
nop
sbb
mov
mov
repnz
sahf
cmp
xchg
add
xchg
sub
mov
fcmovb
daa
les
xor
push
call
xchg
aam
pop
shrl
and
mov
xorb
xor
adc
cmp
sbb
push
fldl
repz
add
cmp
sbb
inc
lea
sub
inc
pop
sbb
xchg
mov
pop
les
push
imul
push
testl
nop
or
in
mov
push
lds
mov
adc
repnz
sbb
sarb
leave
mov
popf
and
xor
repz
sbb
mov
add
shrb
push
xor
sti
cmp
jp
test
jno
cmp
add
leave
lret
js
add
mov
cmp
xchg
rcrl
cmp
lods
xor
mov
movsb
add
xchg
in
mov
jne
fimuls
pop
stc
jecxz
pop
push
jmp
mov
xchg
sbb
sahf
jl
xorb
into
mov
mov
pusha
cld
inc
dec
int3
mov
mov
fcmovu
shll
mov
test
mov
xchg
ret
adc
movsl
insl
add
xchg
lret
mov
xor
lret
lods
adc
pop
movsl
mov
lret
pop
or
in
nop
adcb
cmp
push
mov
int
xchg
bound
and
dec
shrl
inc
or
out
add
jb
pushl
push
lcall
aas
sbb
push
and
sbb
cmpsl
popf
dec
std
outsl
mov
cmpsl
cmp
mov
xchg
js
push
mov
inc
ljmp
in
sahf
mov
sti
dec
out
xchg
int3
cmp
outsl
push
insl
fists
dec
cmpsl
cmp
pop
sarl
test
loop
adc
push
push
in
out
sbb
push
xchg
jg
adc
stc
push
cmp
xor
lods
xor
adc
and
popf
mov
mov
dec
aam
xor
mov
sub
ds
fs
jns
jg
push
cmpxchg
daa
clc
cmpsb
faddl
int3
push
aam
sub
adc
mov
xor
push
fcomps
lahf
push
push
sub
push
dec
mov
mov
imul
cmp
fstl
bound
xlat
inc
aam
jbe
xor
add
dec
or
cmp
sbb
loop
iret
ss
xchg
mov
inc
test
adc
adc
ret
jns
int3
or
or
adc
or
push
rdpmc
cli
sbb
lret
das
fs
es
sub
inc
lea
int
push
mov
fiaddl
cld
dec
out
push
ret
xchg
mov
and
jl
out
pop
imul
pop
loope
sbb
push
and
int3
xchg
mov
push
add
jp
adc
mov
test
div
leave
xchg
std
stc
sbb
and
sbbb
xchg
outsb
insl
mov
cmc
push
out
pop
xlat
mov
jbe
in
lea
test
fiadds
fcmovb
data16
push
stos
les
arpl
mov
stc
and
mov
mov
sub
pop
ror
es
push
ss
imul
xchg
inc
cmpsl
push
pop
sbb
popa
leave
lea
inc
sub
cmp
ljmp
cld
scas
jl
dec
mov
inc
sub
jne
or
jo
js
xor
xchg
mov
mov
mov
xchg
jno
mov
push
adc
int3
jo
sbb
xchg
jmp
inc
ss
sarb
jno
jne
in
mov
call
xor
xchg
fiadds
mov
jle
xchg
fadds
stc
mov
aaa
divb
jno
les
or
jo
movsb
outsl
or
enter
shl
sti
cs
cs
lds
xchg
lret
push
bound
cli
data16
scas
and
or
scas
sub
xchg
pop
lock
pop
pop
test
pop
mov
out
adc
add
shll
push
ljmp
lods
nop
lods
aaa
stos
fnstenv
mov
mov
push
mov
cmp
dec
or
sarl
adc
xor
and
mov
sti
push
pop
in
mov
mov
sub
jle
enter
data16
jl
pop
jl
mov
js
out
movsl
dec
sub
xchg
cmp
sub
in
sahf
fdivr
mov
xchg
push
cmp
cwtl
cmp
mov
das
movsl
jo
loope
sbb
add
movsl
sub
add
mov
arpl
cmp
fwait
cmp
push
inc
js
mov
repz
repz
jle
jns
inc
sbb
fisubs
lcall
jmp
add
cld
jnp
inc
jecxz
lahf
inc
and
pusha
and
scas
fnstsw
icebp
mov
push
cmpsb
xchg
cs
fwait
jne
pusha
addb
adc
fbld
mov
out
jns
push
in
movsl
sbb
sub
add
repnz
and
pushf
sub
dec
push
adc
pop
in
cmp
or
dec
pop
sbb
das
adc
lods
addb
dec
idivb
push
mov
es
add
sub
cmp
shlb
sbb
mov
sbb
xor
cld
mov
sbb
mov
inc
sbb
outsl
jns
arpl
out
xchg
inc
sbb
daa
and
push
or
cmp
xchg
and
xor
insl
sub
in
add
sbb
jns
insb
icebp
dec
cwtl
addr16
sbb
outsl
scas
out
inc
aas
in
jg
mov
lods
test
push
push
xchg
lret
xchg
inc
sub
sahf
sub
xor
popl
test
ret
ret
xchg
adc
imul
add
mov
test
jo
push
mov
repz
cmp
dec
mov
test
xorl
repz
lods
xchg
dec
dec
cmp
jne
lahf
call
adc
scas
insb
and
cli
xchg
into
xchg
inc
inc
loopne
dec
xor
hlt
adc
nop
xchg
push
lods
sub
xorl
lds
cmpsb
std
cmp
mov
cwtl
and
pop
clc
jmp
lahf
mov
rorb
jbe
scas
push
jbe
ret
jne
sbb
push
daa
ljmp
and
jle
mov
je
mov
pop
push
hlt
icebp
adc
daa
sbb
sub
xchg
push
jg
and
add
call
out
lods
iret
mov
cmpsl
imul
mov
xchg
xor
xor
dec
xor
push
mov
cmp
inc
jge
sub
leave
cli
mov
cmp
fstpt
sub
mov
insl
scas
popf
pop
lea
jle
outsb
fstpl
int
std
ds
cs
sub
mov
insl
scas
popf
pop
lea
jle
outsb
fstpl
int
std
ds
cs
out
ljmp
lods
scas
popf
pop
lea
jle
fstpl
fisttpll
std
aaa
add
sub
or
mov
in
outsb
popf
mov
lods
sbb
inc
adc
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
repnz
push
xchg
cwtl
pop
adc
adc
xor
adc
mov
xchg
inc
xchg
push
bound
push
xchg
and
xor
add
adc
mov
adc
push
bound
push
mov
clc
xor
add
adc
loop
repnz
fildl
adc
jb
push
in
imulb
and
ds
icebp
jl
add
es
aad
sbb
aaa
mov
adc
and
addr16
fimuls
out
pop
add
mov
jae
dec
mov
into
es
fimull
and
out
sbb
jb
add
adc
pushl
bound
ret
push
loope
mov
push
repnz
cmp
mov
lea
jle
in
and
test
leave
adc
xchg
stc
shrb
pop
adc
lcall
sbb
imul
cli
rcl
sbb
pop
out
dec
mov
addl
cmp
cwtl
push
xchg
and
xor
add
adc
loop
repnz
sbb
or
pop
xchg
push
push
mov
sbb
popa
jecxz
nop
inc
lods
ja
mov
xor
add
jae
cs
cmp
repnz
inc
loope
mov
mov
lahf
push
mov
adc
jno
lea
and
jb
arpl
xor
add
adc
loop
repnz
add
adc
inc
xchg
push
bound
push
xchg
and
xor
add
adc
loop
repnz
add
adc
inc
xchg
push
bound
add
mov
lods
movsl
sbb
jle
cmp
inc
lahf
test
test
dec
call
pop
push
mov
sub
in
insb
pushl
mulb
mov
mov
mov
mov
add
movsl
sbb
test
insb
push
push
mov
cmpsl
xor
ret
jecxz
jmp
cmpsl
mov
mov
push
pop
push
xchg
popf
dec
mov
fistl
fsubr
sahf
or
cwtl
insb
mov
out
sbb
mov
cmp
arpl
cmpsl
mov
inc
shlb
inc
xchg
arpl
xor
es
lret
push
into
jae
jge
dec
test
pop
mov
test
add
in
ja
inc
rclb
mov
mov
xchg
cmp
loop
mov
mov
mov
fsubr
sub
gs
lcall
and
dec
mov
jecxz
mov
dec
out
daa
pusha
mov
fsubrl
xor
jecxz
repnz
aam
adcl
inc
insb
loope
fistpl
dec
and
fdivl
sti
in
jae
mov
divl
lahf
sub
repnz
movsl
mov
jl
movsb
fnsave
aad
xor
test
int3
lods
int
testl
xchg
pop
jge
push
inc
ficomps
inc
jbe
pop
mov
shll
mov
jp
xchg
xor
pop
xor
sbb
sbb
jmp
cmp
cwtl
pop
incb
in
lods
in
incl
or
pop
or
adc
mov
jbe
into
jo
sbb
xor
cmp
jb
push
es
mov
lret
push
pusha
jmp
js
std
arpl
ljmp
loope
or
push
mov
jne
imul
jnp
hlt
lea
nop
popf
popa
insb
fdivs
aad
pop
cmp
outsb
cmp
fs
mov
mov
pusha
aad
out
in
scas
jnp
ja
test
xorl
mov
and
scas
mov
mov
pop
sbb
mull
pop
mov
pop
pop
xor
outsb
xchg
andb
xchg
or
sbb
jecxz
outsl
addr16
cmp
xor
inc
addr16
out
inc
in
mov
pop
rol
gs
jns
and
shll
dec
adc
sbb
out
imull
jmp
repz
push
pop
sbb
outsb
and
xlat
sbb
dec
ret
outsl
dec
rcrb
push
int
outsl
sbbb
add
xor
adc
ds
add
lods
scas
xor
sti
int
mov
ja
cmpsl
mov
jbe
inc
int
gs
pop
sub
out
pop
lret
jbe
jns
push
ret
cld
sbb
jg
imul
and
cmpsl
sbb
lods
repz
add
push
mov
jl
mov
ljmp
sbb
dec
stc
jmp
pop
sub
stc
sbb
fwait
jb
adc
dec
shlb
repz
les
scas
mov
bound
push
int3
cmp
ljmp
fwait
test
jne
sub
mov
adc
lea
push
pop
sub
and
mov
mov
adc
in
dec
and
mov
int
adc
cwtl
out
xchg
dec
push
dec
in
lea
aad
pop
jo
pop
adc
sub
xor
sub
jns
repz
loopne
scas
push
je
popa
mov
cmpsb
push
dec
mov
sbb
movsb
popf
call
xchg
loope
jbe
push
inc
rol
xorb
adcl
lret
mov
and
int
insl
cld
mov
popa
push
sbb
mov
or
mov
repz
out
adc
inc
push
mov
xchg
pop
add
and
stos
stc
mov
notb
popf
fstl
lcall
test
icebp
dec
adc
push
jmp
adc
jns
in
icebp
shlb
stc
pop
inc
aas
mov
cli
dec
jg
pusha
adc
lods
mov
divl
cmp
pop
push
jp
sbb
ds
xchg
fnsave
aad
movsb
aam
sarb
cmp
paddusb
adc
shlb
jo
out
cmp
xor
decl
inc
cmp
out
jmp
cld
das
xor
rorb
pop
cwtl
push
je
aam
iret
iret
adc
in
mov
xchg
int3
aad
pop
push
push
xchg
divb
add
mov
jp
push
sbb
add
ss
jno
repnz
fwait
inc
stos
js
pop
push
jge
lret
cli
mov
xchg
dec
loop
fcmove
add
cmp
mov
fisttpll
dec
ds
ret
xor
inc
push
ja
adc
out
xchg
ds
add
push
stos
fs
jl
in
fidivrs
or
mov
lea
stos
dec
mov
rcr
xor
or
loopne
incb
dec
out
jne
xor
dec
pop
cmpsb
jnp
xchg
lock
cmp
out
int3
cmpl
aaa
outsl
iret
and
lea
imul
in
push
aas
jns
sarb
and
mov
rorb
stos
cli
or
xchg
mov
add
nop
xor
cs
loopne
or
popa
fwait
rclb
and
or
mov
mov
and
or
inc
mov
imul
mov
popf
mov
cmp
mov
mov
aad
or
sub
movb
jne
js
or
lods
inc
adc
mov
jnp
int3
and
or
mov
pop
dec
mov
pop
push
cmp
jl
add
aad
sub
xor
mov
adc
and
sub
pop
mov
lret
mov
push
jo
or
sahf
push
cltd
outsb
fistpl
out
ja
sahf
adc
sbb
fstl
les
inc
cmpsl
jg
rorl
xor
out
or
arpl
dec
insb
repnz
rclb
popa
lods
in
push
rcl
adc
movsl
ret
insb
xor
mov
fldcw
push
cwtl
imulb
cmp
ds
les
inc
jmp
mov
gs
pop
mov
dec
pop
ss
iret
push
mov
cli
push
dec
mov
sub
in
xor
adc
andl
xchg
adc
sub
mov
adc
xchg
xchg
jns
mov
lahf
in
les
push
lods
leave
or
mov
mov
test
xor
pop
mov
add
lock
sahf
mov
rclb
push
ds
lds
mov
fdivrl
sbb
shlb
xchg
or
add
push
add
int3
insl
mov
or
jl
dec
and
dec
sar
cld
je
shll
rcr
jo
cmp
cmp
repnz
mov
fstp
movl
jge
sub
xlat
std
inc
pop
sbb
jle
fisttps
repz
sahf
cwtl
scas
rorl
leave
pop
dec
mov
enter
mov
inc
popf
mov
mov
fdivrp
gs
cmp
scas
xchg
mov
enter
mov
loope
out
mov
inc
add
rcl
imul
aad
xor
vmovd
sub
cwtl
xor
dec
xchg
cwtl
outsl
lea
adcb
stos
cmp
sub
idivl
mov
xor
outsb
lock
xor
pop
mov
and
loop
stc
sbb
dec
adc
xor
insl
jg
je
push
outsb
mov
mov
nop
xor
js
mov
dec
xlat
cmp
sbb
mov
cmp
adc
xchg
mov
pop
ret
push
mov
loop
popf
outsb
mov
imul
in
mov
dec
add
cmpsl
jle
add
outsl
adc
enter
mov
lock
mov
test
xchg
mov
adc
lahf
adc
loope
scas
inc
pop
push
pop
push
sub
sub
aam
xor
call
bound
cwtl
sub
dec
fstpt
pop
enter
mov
xchg
aaa
xchg
xor
addb
push
add
xorl
pop
jne
xor
std
rcll
or
pop
mov
aaa
add
inc
pop
std
bound
mov
pushf
jmp
popa
dec
sahf
pop
mov
inc
mov
inc
inc
int
iret
xchg
testl
jne
out
pop
sbb
sub
jecxz
mov
ret
icebp
push
or
xchg
inc
icebp
sarl
push
xchg
or
ret
cmp
mov
inc
jne
adc
insl
push
cmp
das
mov
outsb
xlat
dec
in
lahf
pushf
bound
or
fnstcw
cmp
mov
and
cmp
jns
es
cwtl
jl
out
lods
jb
aam
aam
aas
lcall
and
mov
push
sub
jnp
xchg
les
cmp
pushf
mov
push
lds
mov
pushf
fstl
adc
or
scas
pushf
push
adc
je
sub
jecxz
add
mov
sbb
push
lods
cmp
fsub
xorl
loope
insl
into
in
loop
add
jnp
adc
add
adc
dec
xchg
leave
sub
add
into
decl
in
les
enter
je
sbb
mov
fadd
cltd
xchg
mov
int
push
inc
push
push
dec
and
pushf
dec
fucom
dec
mov
test
mov
popa
fldt
push
sub
xor
mov
inc
fbstp
push
mov
sub
mov
int3
jl
bound
jae
pop
cmp
mov
subl
xchg
test
lcall
jne
xchg
cmpb
mov
ret
data16
pop
mov
stc
xchg
andl
sti
call
mov
xor
pop
cmp
in
or
mov
repz
lods
or
cmp
pop
ret
mov
cmpsl
stc
rorl
jne
test
mov
fdivrl
inc
dec
inc
or
sahf
mov
add
mov
sub
pop
jp
in
insb
imul
adc
sub
movsb
stos
ret
bswap
inc
shll
pop
or
mov
xor
push
and
out
mov
and
jb
jl
lods
inc
ret
sti
incl
mov
pop
aas
stc
cwtl
dec
cli
mov
pusha
push
cmpsb
out
fisubrs
sbb
aaa
cmpl
fadds
sbb
enter
out
add
ljmp
pop
dec
mov
mov
sub
inc
movsl
enter
pop
shrl
adc
das
push
stos
fs
repz
pop
mov
mov
rcll
js
sbb
scas
lret
inc
das
daa
shrb
sti
shll
mov
ja
leave
add
mov
cwtl
or
or
jo
push
popf
ret
and
cmp
push
test
inc
popf
xchg
nop
ret
test
xchg
pop
das
leave
cmc
cmpsl
pop
or
cmp
nop
push
ffreep
fnstcw
inc
push
and
loopne
xor
or
cmp
orb
out
outsb
or
mov
and
mov
push
sub
gs
mov
iret
hlt
adc
cmp
out
xchg
cmp
xlat
add
pusha
lea
or
repz
xchg
pop
and
push
push
cmp
and
les
mov
dec
dec
sbb
jmp
mov
lret
stos
push
fldl
pop
inc
and
cs
dec
mov
pushf
scas
push
mov
sbb
and
dec
stos
sbb
test
lcall
gs
jbe
inc
sahf
or
fidivrl
mov
pop
je
call
orb
icebp
test
jo
nop
sar
hlt
int3
or
cmp
adc
cltd
dec
cmp
insl
loopnew
dec
cmc
and
jo
sub
sbbb
mov
sbb
aas
hlt
adc
add
xchg
jnp
push
repz
popf
fisttps
or
enter
inc
popf
push
lock
sbb
outsl
push
push
push
loope
xchg
sub
sti
shr
or
inc
std
dec
scas
xor
and
leave
cmp
xchg
bound
jge
sbb
push
iret
in
sbbl
pop
inc
inc
gs
push
xchg
push
push
out
inc
xor
invd
sbb
sub
les
test
stos
and
push
outsb
stos
dec
cs
jno
orb
mov
iret
iret
cmp
add
add
repz
sub
cmc
jg
mov
cmp
sbb
adc
stc
outsb
lods
xor
movsb
dec
push
sub
pop
jnp,pn
out
add
sti
sbb
xchg
sti
inc
in
adc
imul
repnz
jb
inc
int
fadd
sub
call
popf
inc
dec
cwtl
jne
push
inc
mov
xchg
and
mov
add
fsubrl
push
mov
dec
sbb
xlat
add
rcr
jmp
pop
jle
in
bnd
fldt
fdivrs
out
push
movsl
stos
pop
sbb
in
ficompl
xchg
stc
aas
loop
push
ja
mov
jg
push
mov
test
call
jae
push
imul
call
push
adc
cs
jmp
cmp
sbb
jp
or
cmp
jns
loopne
lds
arpl
inc
sbb
nop
je
out
lds
fbld
lods
js
aad
fldt
arpl
fdivrs
pop
sbb
pop
add
loopne
dec
add
xor
ds
scas
out
lods
jo
mov
push
cli
and
lods
dec
inc
add
pop
xor
repnz
fcoms
dec
xlat
or
cmpsb
mov
pop
jmp
ss
je
loopne
jnp
xchg
addb
inc
test
or
dec
fnstcw
sub
jns
pusha
negl
inc
mov
push
pop
cwtl
ja
imul
pop
cwtl
lahf
ret
enter
and
pop
stc
mov
sub
rcrl
call
lock
mov
and
sbb
aam
insb
rcl
cmp
aas
cld
xor
cwtl
xor
jp
mov
sub
sub
mov
addr16
dec
outsb
pusha
mov
xchg
mov
movsl
imulb
dec
hlt
inc
mov
push
sbb
sti
sub
cs
xchg
mov
sti
sbb
ficomps
popf
pop
cmpsb
outsl
sbb
jmp
popa
fisttpll
xchg
int
mov
and
lods
sub
aam
das
sbb
fiaddl
insl
or
fcmovne
and
out
mov
idivl
push
and
nop
cmp
imul
mov
shl
mov
lds
sbb
frstor
dec
outsb
insl
mov
push
pop
jo
int
sub
and
push
pop
adc
sbb
out
rcrb
xchg
stos
pop
inc
cmp
and
jno
ljmp
int
in
and
inc
pop
jecxz
push
xor
push
sub
mov
mov
push
adc
lds
jg
inc
sbb
xchg
das
dec
aaa
xchg
stos
stos
xchg
je
cmp
andb
inc
sub
ret
roll
xchg
imul
xlat
mov
loop
stos
sbb
sbb
xor
inc
int3
adc
daa
xchg
lahf
test
pushf
push
sbb
sbb
movlps
add
dec
pop
xchg
xchg
push
push
dec
and
push
add
ret
push
and
push
cwtl
pop
lret
cmpsl
aaa
ror
xchg
sbb
inc
in
outsl
mov
aas
mov
cmc
stc
loopne
out
mov
jo
loop
lfs
sbb
xor
sahf
jnp
out
sub
adc
in
cmc
int3
pop
mov
xchg
jnp
in
or
ljmp
movsl
or
daa
iret
repnz
std
and
stc
and
add
mov
dec
cwtl
out
dec
adc
imul
sub
push
pop
cwtl
data16
push
iret
xlat
adc
push
in
inc
push
stos
dec
dec
test
mov
push
bound
push
mov
add
and
add
test
mov
pop
jge
mov
or
aas
cwtl
cmp
mov
ss
mov
pop
xchg
sbb
push
cmpsl
movsb
stos
js
rcr
push
dec
pop
cmp
push
adc
test
cli
fidivrs
shll
pop
test
icebp
js
and
sbb
lcall
or
sub
dec
and
add
cli
add
jmp
push
mov
ja
icebp
stos
pop
push
ret
jb
jb
vpsrlw
dec
push
jae
std
xchg
in
xor
sarl
sbb
push
inc
andb
xchg
loop
loop
inc
adc
mov
mov
adc
dec
cmp
and
add
push
fwait
hlt
shlb
cmp
cmpsb
nop
mov
arpl
roll
xchg
inc
out
and
sub
push
enter
pop
xchg
sbb
lock
lods
add
lret
inc
push
xchg
mov
adc
lods
movsb
aad
mov
xchg
cmpsb
cmpsl
or
sub
clc
pop
mov
rcrl
std
aad
lcall
mov
or
xchg
rolb
mov
jle
setle
lcall
jge
in
xchg
gs
or
sub
paddusb
push
xchg
jae
adc
jle
push
iret
jo
incb
mov
popf
pop
nop
or
fs
cmc
cmp
or
cmpb
jecxz
in
or
in
xchg
xlat
cmp
push
rclb
mov
fidivs
mov
xchg
fsubrs
inc
xchg
xchg
push
pop
imul
repz
out
sbb
inc
sbb
and
mov
mov
outsb
lret
add
in
scas
xchg
sbb
sahf
call
call
subb
jg
test
aas
dec
mov
xchg
pop
scas
push
movsl
sahf
outsl
or
xor
fistpl
fistpll
into
loopne
jns
call
mov
sbbl
mov
adcb
cmp
mov
sub
add
push
pop
das
and
daa
sub
lea
popa
sbb
jecxz
push
and
aam
sub
sti
sub
cld
sti
pop
push
hlt
xor
sbb
add
sub
cmp
out
jns
dec
js
adc
dec
ret
push
jno
mov
inc
inc
lret
mov
mov
lds
fld
lods
gs
fxch
adc
pop
imul
jge
xor
pop
lock
gs
xor
cmp
push
rcrb
mov
sub
sub
pop
mov
dec
lahf
int
and
pop
test
xorb
adc
in
decb
adc
push
aas
test
mov
jbe
jge
add
adc
mov
outsl
or
jge
stos
sub
flds
mov
inc
fsubrs
cmp
xchg
jnp
addl
xchg
xchg
stos
in
cld
or
push
mov
jp
enter
dec
mov
movsb
add
jo
nop
ficomps
jge
adc
xchg
xorl
lods
push
mov
sbb
loope
lds
sub
xchg
adcb
jge
mov
addb
jmp
fsubl
fdecstp
xlat
orl
loopne
dec
sbb
pushl
sub
movsl
or
jne
push
jnp
call
sbbl
push
and
dec
mov
mov
mov
inc
jle
mov
xchg
jle
push
or
or
push
in
leave
mov
adc
push
jb
add
pop
inc
std
and
inc
mov
dec
xchg
push
imul
mov
or
cld
sub
ret
aas
mov
adc
lret
cmp
pop
pop
xchg
cli
dec
mov
jae
mov
inc
outsl
push
xchg
stc
mov
in
mov
aas
fidivrl
pop
adc
xor
hlt
cld
pop
cmp
jl
lret
int
ja
mov
testl
xchg
and
les
inc
lock
notl
or
xchg
negl
fsubr
lcall
pusha
dec
xlat
lds
dec
jno,pn
cli
fs
mov
push
in
dec
mov
pop
repz
sub
push
out
sbb
or
sub
xchg
fcompl
in
int
jge
popf
mov
add
aas
mov
clc
cmp
insl
xchg
enter
mov
movsb
xchg
in
add
fldl
push
call
dec
or
dec
fs
into
xchg
shrl
daa
sbb
rolb
add
mov
clc
fisubrs
or
mov
addr16
jo
adc
leave
mov
ja
and
mov
sub
jns
mov
inc
stos
jl
cltd
shll
pop
sbb
out
addb
fists
in
xor
pop
cmp
lea
xchg
mov
or
push
dec
jbe
xlat
mov
cmp
or
iret
ljmp
sbb
fs
inc
mov
fs
cmp
fimull
mov
lret
test
clc
lods
cltd
or
mov
inc
add
outsb
scas
and
xor
hlt
cmp
sub
jecxz
aas
mov
adcl
add
adc
loop
repnz
add
adc
inc
xchg
push
bound
push
xchg
and
xor
add
adc
loop
repnz
add
adc
inc
xchg
push
bound
push
xchg
and
xor
add
adc
loop
repnz
add
adc
addb
arpl
push
xchg
and
xor
add
adc
loop
repnz
push
jmp
insl
cs
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
