push
testl
or
and
mov
out
pop
push
insb
mov
jo
pmulhw
push
lahf
test
xchg
popf
lds
cmp
dec
adc
gs
mov
mov
call
lea
xor
dec
jae
pop
ljmp
xchg
sbb
add
push
push
push
js
add
fdiv
test
jge
and
mov
rcll
mov
jle
inc
test
fwait
jle
pushw
fisttps
sbb
mov
pop
mov
aad
fidivrs
inc
jmp
outsb
adc
xor
cmc
frstor
cmp
xor
repnz
ljmp
pop
mov
mov
mov
das
mov
int3
pushf
dec
adc
dec
xchg
ja
movb
mov
dec
repnz
push
jb
inc
lret
inc
xchg
push
in
xchg
add
sub
jbe
mov
test
push
cmc
mov
lret
lods
popa
enter
sti
loope
lods
les
and
pop
frstor
or
xchg
or
mov
iret
idivl
jle
ret
lcall
inc
rcrl
push
divb
ljmp
push
mov
and
inc
in
int
xor
dec
mov
cmc
lock
add
mov
xor
cmpsl
jbe
dec
popa
mov
das
dec
jp
addr16
fisttps
pop
lea
cli
dec
aad
fisubrl
sbb
movsb
or
mov
pushf
mov
hlt
nop
xchg
mov
inc
mov
sahf
test
stos
and
cmp
push
pop
test
push
ds
je
xchg
push
dec
sub
adc
scas
sbb
aad
mov
and
imul
add
xlat
orl
mov
mov
pop
ffree
mov
pop
lret
test
fiaddl
addl
cmp
mov
lds
out
jbe
fnstenv
testl
outsb
xchg
mov
data16
stos
inc
lret
dec
mov
sub
push
sahf
out
or
scas
mov
adc
test
mov
outsl
mov
stos
pusha
in
daa
test
xchg
mov
pop
push
fcompl
fdivl
lods
jle
repnz
sbb
lock
xor
movsl
mov
sub
mov
jmp
inc
stos
mov
aad
dec
std
and
add
xlat
xchg
mov
mov
fnstsw
inc
xchg
cmp
sbb
sub
or
hlt
xchg
jne
add
mov
cmp
movsb
arpl
pop
push
rcrb
cmp
cmp
cmpps
xor
pop
popa
cmp
mov
addr16
das
je
outsl
mov
sub
bound
pop
stos
and
faddp
mov
lods
cmp
outsl
add
sub
or
mov
push
shlb
das
loopne
cltd
ret
inc
out
jbe
out
fwait
mov
jmp
mov
adc
call
sahf
dec
std
pop
xchg
inc
mov
mov
ja
pop
lahf
sub
mov
cmp
loope
mov
push
das
and
cmp
enter
inc
jno
sub
in
pop
cs
jge
in
xchg
dec
pushf
sub
pop
xchg
in
lock
in
js
ret
loop
andl
jl
inc
dec
insb
cs
jge
cmpsb
shlb
outsl
hlt
es
jbe
mov
roll
xor
cmp
jmp
outsl
pop
add
mov
dec
adc
mov
sarl
cmp
fdivrl
inc
pop
cli
jo
mov
cmpsb
adc
subb
pop
lret
and
test
sub
cmp
pop
cltd
jbe
ljmp
xchg
and
jae
js
outsb
pop
stos
cmp
or
or
dec
xor
xchg
fiadds
lahf
sub
jnp
in
adc
mov
mov
icebp
push
xlat
add
cmp
lret
jne
jmp
mov
outsb
and
scas
mov
xchg
ja
push
jg
out
pop
cld
iret
inc
stos
cmpb
jns
mov
pop
outsb
sahf
push
xor
sbb
pop
movsl
cmp
stos
int
sbb
cmpsb
movsb
aam
and
shl
aam
add
mov
lcall
aas
cli
sub
sbb
adc
lods
movl
std
fcomip
push
les
cwtl
cmp
mov
add
xor
xchg
mov
dec
pop
rclb
cmp
loop
call
fdivs
mov
imul
cltd
imul
lahf
push
mov
jno
stos
mov
cli
sub
loope
dec
arpl
inc
xchg
ss
cmp
xor
add
jg
add
nop
adc
pop
mov
cld
xchg
push
push
ficoms
shll
int
lds
je
or
add
mov
sbb
jno
dec
outsl
cltd
into
outsl
sub
xchg
les
icebp
xchg
add
xchg
clc
int3
mov
xor
je
fisubl
sub
lds
movsb
mov
movsb
imul
dec
es
xor
cwtl
pop
push
jge
xchg
push
dec
inc
insb
mov
sub
push
out
lcall
dec
mov
and
andl
jbe
sub
push
xchg
mov
and
push
push
jp
int
sbb
or
loop
clc
add
into
test
jle
xor
lods
xor
push
xor
sub
lea
call
out
stc
inc
push
mov
nop
es
cld
repz
mov
xor
push
adc
jg
std
mov
test
inc
out
loope
fs
pop
pop
and
sub
insl
cld
or
cmp
xchg
mov
jns
dec
and
adc
adc
fisttpll
ss
dec
mov
sub
dec
mov
fdivs
or
ret
pop
sub
add
cmp
mov
popa
xchg
adc
out
mov
mov
push
cmp
jmp
fbld
jo
sbb
xor
xlat
fidivrs
mov
nop
pop
pop
clc
ret
pop
jle
xchg
jno
mov
daa
cltd
and
aaa
mov
cmp
xchg
mov
mov
hlt
mov
mov
jbe
jecxz
or
orb
in
je
adc
dec
loop
sbb
ja
dec
xor
mov
lods
nop
adc
lcall
jp
enter
repnz
out
lock
inc
sbb
xchg
das
aad
jae
jmp
mov
add
aaa
test
adc
divl
dec
adc
in
lods
lods
push
pusha
jp
push
cmc
cmp
inc
mov
cs
scas
jb
xchg
nop
sub
sbb
xorb
cmpsb
movsl
fldl
shrb
push
je
movsl
and
fsubl
in
scas
mov
iret
outsb
in
inc
dec
lcall
js
ret
es
dec
in
inc
mov
xchg
add
je
sub
pop
loop
jle
adc
push
add
int
xchg
or
xchg
je
in
dec
add
test
fdivrs
inc
dec
jb
in
jmp
fnstenv
scas
nop
fdivs
rcrb
sarb
stos
scas
negb
in
lcall
or
lock
push
shrb
mov
loope
rcrl
clc
sub
into
fildl
sbb
inc
or
ds
insb
or
adc
push
add
inc
push
pop
adc
and
sahf
mov
jns
out
addr16
repnz
xchg
pop
imul
pop
push
das
pop
or
cmc
repnz
cltd
icebp
jb
dec
adc
push
repz
inc
xchg
cmp
cmpsl
out
popa
mov
sbbl
das
nop
mov
lock
sub
stc
loop
aad
adc
xor
js
std
shr
shrb
xor
cli
out
daa
jae
mov
jne
ljmp
iret
out
cmp
and
repz
mov
cs
fisubs
es
xchg
and
mov
mov
fsubrs
jns
call
imul
and
mov
sub
je
repnz
inc
dec
inc
cmp
dec
xchg
push
dec
xchg
or
sbb
aad
inc
aaa
cmp
scas
bound
outsb
cs
daa
mov
inc
std
ret
ss
out
in
dec
mov
xor
repnz
inc
bound
or
and
sub
sbb
pushl
dec
lret
out
movsl
fidivrs
js
in
jno
daa
in
rclb
rcll
adc
pop
incb
aas
and
and
mov
jp
ds
push
ret
mov
dec
je
iret
mov
or
imulb
addr16
mov
add
push
mov
push
lcall
jecxz
addr16
into
adc
adcb
sahf
sub
lea
ljmp
stc
cmp
je
imulb
sbbl
add
movsb
cmc
mov
xchg
out
xor
cmc
shll
mov
out
and
das
outsb
scas
add
scas
aas
out
and
dec
push
pop
inc
xchg
dec
cli
xor
jbe
imul
mov
std
movsb
rcr
ffreep
and
mov
fs
fldenv
push
jl
mov
pop
push
adc
cmpsl
add
push
xchg
dec
pop
fs
jecxz
shlb
sbb
fsts
mov
mov
pop
test
push
es
ljmp
and
fstpt
jno
inc
leave
imul
sbb
call
outsb
stos
lcall
mov
mov
xchg
xor
jae
stos
sti
push
test
jmp
cltd
jle
xor
outsb
pop
sti
add
mov
imul
xor
data16
xchg
test
stos
je
sbbb
loopne
fisttpll
and
enter
inc
test
mov
loop
pop
and
xchg
in
lret
adc
pop
movsb
lea
xchg
pop
inc
jno
fwait
pop
sbb
cmp
cmpsb
mov
loopne
cmp
lret
les
mov
subb
adc
xchg
stc
enter
subb
stos
mov
ror
adc
in
adc
xchg
movsb
imul
lret
shld
xor
cmc
add
imul
in
cs
fcmovbe
and
inc
bnd
sbbb
push
daa
invd
mov
sub
fildll
mov
jecxz
mov
adc
mov
lods
and
xor
addl
dec
mov
adc
ret
iret
cli
pop
sub
in
inc
aaa
or
adc
and
or
dec
cs
jle
lods
scas
cmpl
stos
sbb
hlt
cwtl
xchg
cltd
mov
iret
adcl
xchg
mov
mull
push
in
aaa
mov
aaa
push
mov
pop
mov
push
addl
xchg
inc
outsl
lret
cmpsl
sti
or
ret
out
mov
mov
popa
sub
lret
push
xchg
je
jmp
inc
pop
inc
push
inc
ret
push
push
lods
mov
push
in
std
jg
push
jle
jno
inc
ds
mov
loope
iret
mov
enter
and
fwait
mov
xor
test
xchg
cs
mov
fidivrl
repnz
les
aas
push
and
int3
mov
mov
adc
ja
xchg
xchg
and
out
hlt
pushf
and
clc
sarl
xchg
in
leave
gs
cmpsb
sti
bound
scas
mov
nop
mov
loop
push
andb
push
sub
jge
icebp
sub
jnp
push
mov
push
or
sarl
and
stos
push
movsb
cltd
sti
jl
pop
mov
fcompl
lret
mov
ss
popa
sarb
sub
xor
divl
inc
sub
cld
mov
ljmp
cmp
sahf
aad
dec
insl
mov
lods
fisttps
test
arpl
push
dec
loopne
mov
mov
fiaddl
cmc
xor
xchg
lds
addr16
in
push
testl
fstps
mov
mov
inc
enter
push
adc
cmp
fcomps
sti
mov
xor
test
test
cltd
fcos
jnp
arpl
sbb
jo
cmp
dec
push
pop
mov
xchg
and
test
lahf
dec
imul
jnp
mov
xor
cltd
jle
mov
neg
hlt
push
icebp
leave
int
add
fcompl
xchg
lods
cmp
jno
orl
clc
and
sub
push
pop
mov
dec
jne
cli
iret
ss
xor
stos
adc
lock
aam
cmp
inc
adc
ret
lahf
mov
call
adc
adc
xor
or
and
les
andb
daa
push
sub
pop
mov
cli
je
cmp
adc
ja
sti
push
inc
mov
push
jle
push
aam
int3
lret
jno
pusha
and
addr16
sub
jo
inc
test
mov
fstpl
xor
mov
sahf
js
dec
mov
mov
fld1
push
inc
mov
popf
jns
cli
and
ss
into
repnz
bound
sbb
sub
shrl
mov
sti
mov
push
jp
in
pop
mov
in
test
mov
adc
movsl
idivl
das
pusha
jmp
adc
loop
sub
sub
fwait
int3
lahf
inc
outsl
mov
xor
test
push
cmpsb
inc
lods
hlt
nop
loope
or
jmp
call
jmp
jg
or
inc
adc
or
push
out
mov
jge
xchg
fiaddl
push
inc
push
inc
push
shrl
and
js
jg
push
mov
sbb
das
adc
outsb
fnstcw
jo
pop
std
outsl
dec
sub
addl
andl
xchg
cmp
test
pop
fcmovne
push
icebp
ret
or
fisubs
and
mov
adc
loope
cli
ficomps
dec
aad
rol
in
loope
dec
mov
pop
testb
pop
pop
in
insl
push
push
es
stc
call
and
inc
adc
lea
loope
cmp
inc
gs
sahf
sub
lea
mov
mov
mov
call
xor
outsb
out
ss
leave
fisttpl
push
jnp
scas
rcrb
cld
sbb
dec
stos
or
mov
dec
jbe
sbbl
nop
cs
shrb
orl
jnp
xor
and
cld
push
cmp
and
xor
sbbl
stc
ss
mov
pop
fnstsw
mov
adc
fildl
repnz
pop
enter
pop
shrl
mov
in
sbb
fcoms
movsb
mov
sub
lcall
outsb
dec
cmp
pop
mov
daa
mov
cmpsl
pop
loope
mov
adc
and
or
xlat
ds
fstp
add
sub
cs
les
fisubrl
clc
cmp
xchg
enter
add
mov
mov
sbb
arpl
jno
xchg
push
gs
loop
cmp
stos
adc
ds
out
xchg
mov
scas
pop
jecxz
insb
dec
cmp
cmp
ret
cmp
ret
andb
fiadds
mov
loopne
mov
cmp
rorb
and
and
scas
push
lods
adc
cmp
mov
jmp
jno
insl
add
cmpsl
adc
loopne
call
sbb
xchg
sbb
orb
int3
mov
push
xchg
adc
mov
inc
mov
mov
test
les
mov
jmp
mov
sbb
fdivr
movsb
jmp
in
mov
pusha
std
push
cld
aaa
icebp
xor
cmp
or
inc
and
scas
lahf
repz
xor
into
push
dec
mov
jo
popa
test
add
jnp
lret
push
xchg
loope
mov
pop
dec
popa
lcall
mov
outsl
pop
mov
addr16
cmpsl
loop
adc
cmp
add
add
push
mov
push
sbb
lcall
icebp
clc
sbb
xor
addr16
out
sub
jl
mov
mov
push
pop
ljmp
das
and
mov
xor
dec
inc
pavgb
dec
pop
sbbl
sub
and
jmp
lods
add
push
or
movsl
jecxz
push
sub
xchg
pop
iret
mov
outsl
mov
mov
aaa
in
pop
sbb
daa
xor
scas
add
cmpsb
fcoms
mov
pop
pop
ljmp
lahf
dec
mov
add
jns
clc
xchg
mov
arpl
jns
das
cmovg
push
jno
jle
aad
loope
push
ljmp
lret
outsl
push
ret
or
and
icebp
test
subb
insl
pop
mov
inc
stos
test
nop
pushf
dec
cmp
jbe
call
ss
dec
jbe
xor
add
adc
push
fidivrs
xchg
cmp
clc
addr16
adc
loop
jge
inc
rclw
lds
sub
and
mov
cmc
les
jb
inc
lods
jo
ret
push
mov
sti
pusha
xor
push
mov
adc
ror
cltd
outsb
mov
cmp
negl
cmpsl
adc
stos
in
jecxz
push
push
in
mov
and
sahf
sub
bound
aaa
sbb
stos
and
jb
xor
pusha
jmp
sbb
repz
push
into
in
mov
mov
insl
sub
test
mov
jg
inc
mov
mov
leave
arpl
bnd
push
addr16
test
rcl
faddl
das
cld
loop
add
mov
mov
clc
cli
adc
jns
pop
mov
test
inc
mov
fstl
les
ret
lock
repz
mov
les
inc
or
push
cld
xchg
lea
popf
test
aas
xchg
inc
cmp
inc
mov
cmc
loop
call
mov
mov
loopne
inc
mov
hlt
popa
mov
sub
adc
loop
inc
xor
das
push
xorl
jp
dec
test
jno
xchg
mov
inc
pmullw
push
xlat
popf
ss
jns
pop
pop
imul
je
data16
inc
push
cwtl
in
fnstenv
push
stc
push
cli
lahf
cmp
addr16
int
push
or
push
xor
pusha
clc
mov
dec
pop
gs
mov
enter
lea
scas
jp
pop
xor
jp
sub
jns
insl
popa
and
lea
sahf
inc
xor
int3
shlb
inc
imull
fimull
inc
mov
icebp
sti
xchg
decb
push
test
push
inc
jl
dec
xchg
test
mull
xchg
dec
inc
ret
mov
loopne
mov
aad
repz
pushf
call
stc
std
dec
icebp
mov
in
in
gs
jmp
aad
cmc
or
xchg
inc
or
pop
in
fstpt
lret
sub
inc
add
xchg
jne
cmp
orb
inc
pop
sbb
mov
mov
mov
les
in
in
jge
xchg
push
addr16
pop
xchg
pop
lahf
rolb
mov
stc
adc
mov
movsl
mov
loop
inc
xchg
adc
int3
jge
and
mov
mov
xor
xorb
lds
mov
xchg
arpl
lods
pop
sub
mov
jo
jae
ret
imul
test
loopne
pop
or
fdivrs
mov
jmp
xor
lcallw
xor
pop
push
nop
clc
mov
sub
nop
inc
push
clc
inc
rorb
les
pop
or
sbb
test
sti
cmpsl
fwait
adc
enter
into
cltd
jb
cmpsb
sub
js
sbb
pop
adc
loopne
push
sbb
aas
adcb
and
divb
repnz
fwait
lret
pushf
adcb
mov
insl
outsb
fdiv
sbb
imul
pop
push
in
out
fs
ljmp
push
mov
sub
and
mov
add
dec
mov
ret
imul
rol
xor
movsb
or
or
stos
push
cmp
push
dec
arpl
push
adc
repnz
mov
mov
dec
je
insl
fs
mov
arpl
idivb
mov
es
inc
pop
popf
xor
adc
and
idivb
xor
mov
or
or
mov
jg
xchg
push
shl
jae
and
inc
dec
xchg
sbb
js
outsl
shll
test
lock
mov
lret
repz
cmovns
dec
fsubrl
das
cmp
mov
insl
jae
push
lds
inc
sbb
or
test
sahf
mov
pop
mov
shl
sbb
push
adc
mov
mov
jg
in
mov
xlat
inc
jg
fildll
sbbb
push
jmp
test
adc
ficompl
sbb
ret
in
xchg
imul
mov
ret
bound
je
jns
jae
scas
out
iret
jle
xchg
out
mov
jl
js
ror
push
ljmp
xchg
in
test
leave
cs
xchg
je
fiadds
fsubrl
jo
je
xchg
scas
pop
addr16
dec
pop
jnp
jnp
lret
xor
pop
inc
lock
outsl
push
jp
sub
jb
adc
xorl
cmp
push
sub
push
mov
es
mov
ret
fbstp
mov
int3
loopne
incl
std
pushf
cmc
mov
mov
jno
lock
cltd
jl
add
cmpsb
dec
sub
xchg
xlat
lds
adcb
insl
mov
or
sbb
lds
mov
adc
cmpsl
das
in
jbe
or
mov
push
je
adc
js
adc
out
lods
xor
push
es
imul
movsl
loope
inc
dec
mov
cmc
mov
jae
mov
xchg
out
je
loope
and
divb
into
add
mov
cmp
nop
or
outsl
and
jg
fistpl
test
mov
xor
or
stos
popf
test
aam
flds
dec
or
fwait
add
push
jb
popa
lock
sahf
fstpt
cwtl
imul
es
test
cmp
xchg
jg
pop
mov
mov
mov
add
push
inc
pop
sbb
xor
or
push
mov
and
and
loopne
and
orl
out
cmp
ljmp
pop
push
in
pop
mov
mov
inc
mov
ds
sub
add
aam
mov
adc
addr16
clc
add
sub
push
outsl
imul
imul
pop
fucompp
jp
cmpsl
sbb
shll
es
call
mov
ret
inc
pop
std
inc
or
push
loope
cmpsl
cmp
push
cmpsb
aas
pop
jnp
mov
pop
lret
cmp
pusha
in
xorl
enter
rcr
lods
lret
mov
xchg
push
mov
into
xor
ret
mov
in
frstor
scas
dec
inc
sbb
dec
and
mov
insl
mov
int
filds
fdivr
dec
ficoml
sbb
subl
xchg
cs
ljmp
jle
push
lds
enter
out
jo
js
and
sub
mov
xor
jmp
inc
push
rorb
stos
leave
or
jno
xchg
sub
lahf
xchg
mov
mov
repnz
xchg
and
adc
mov
and
fistps
outsb
mov
fisubl
xchg
sbb
jg
repnz
adc
into
push
pop
xchg
adc
pmuludq
jno
push
leave
mov
jmp
xor
jno
enter
outsb
in
push
sahf
and
popf
out
fisubs
loopne
gs
lds
out
mov
push
std
mov
mov
fstl
xchg
je
mov
cmp
sti
mov
mov
or
movsb
movsl
bound
lahf
leave
and
test
mov
jne
dec
sbb
or
pop
mov
xor
shrb
div
inc
ja
pop
ss
repnz
sbb
push
pop
mov
hlt
fadds
mov
jae
mov
pushf
adc
cli
insb
rcrl
aam
scas
adc
mov
icebp
inc
add
int3
js
iret
ret
mov
fcmovbe
and
xchg
dec
mov
nop
out
and
pusha
dec
pop
xchg
std
xor
fildll
xchg
jecxz
es
lods
or
push
push
sbb
fdivs
xchg
dec
push
rol
fs
mov
inc
cmp
cmp
push
push
add
dec
push
cmp
cmp
cmp
frstpm(287
pushf
sub
mov
xchg
adc
add
inc
movsb
add
adc
out
dec
cmp
cwtl
mov
push
hlt
out
es
imul
inc
js
out
push
test
push
jl
dec
or
sar
jl
pop
arpl
mov
clc
or
stos
and
insl
movsb
fidivl
dec
ljmp
in
dec
lds
push
ja
popl
fists
pop
test
cmp
jns
mov
sub
cmpsb
adc
pop
adcb
repnz
cmp
add
lcall
and
int3
stc
pop
popf
xor
scas
lea
pop
scas
push
imul
iret
sti
inc
pop
pusha
mov
je
in
addr16
cmc
imul
push
test
sbb
pop
jmp
or
mov
fistpl
push
mov
fists
aam
lcall
sarl
sub
adc
icebp
lds
mov
mov
test
fmulp
dec
xchg
dec
fldl
lods
mov
mov
bound
jbe
and
mov
lds
ficoml
aad
jb
cltd
test
mov
out
faddl
movsb
arpl
jp
ljmp
or
adc
mull
addl
pushf
loopne
das
shl
repnz
fstpt
dec
sub
arpl
dec
cwtl
popf
popf
pop
cmpb
xor
inc
add
mov
cmp
int3
adc
sub
inc
in
inc
jp
cmp
incb
jmp
inc
inc
jbe
push
aas
lcall
cmc
ficomps
jle
loop
adc
scas
pop
leave
jge
fs
clc
or
lods
stc
inc
out
adc
ret
stos
inc
adcb
mov
call
sbb
jno
lcall
fs
sti
push
nop
mov
cmpsb
push
pop
jne
std
inc
adc
adc
out
dec
mov
push
jne
fsts
sahf
shlb
lcall
dec
mov
inc
enterw
shrb
mov
fisubrl
test
andl
xchg
jl
and
push
pop
pop
mov
inc
xchg
cwtl
and
jmp
repnz
mov
repnz
jne
xor
arpl
mov
dec
mull
fsubrl
ja
xchg
pop
push
push
idivb
js
lcall
pop
data16
jl
mov
lock
mov
hlt
pushf
pusha
xor
ss
and
rep
add
cmp
adc
xor
or
cmpsl
mov
mov
xchg
jo
dec
fists
in
xor
xor
lea
das
push
adc
cmp
cmp
iret
andl
jno
cli
xchg
bound
sti
std
test
movsl
push
inc
shl
or
and
sub
adc
cwtl
xchg
mov
jnp
shll
mov
fidivrl
or
loopne
dec
xchg
call
shl
loope
jmp
mov
xchg
icebp
mov
fmul
and
pop
pxor
xor
in
mov
cmp
pop
jne
push
cmp
mov
inc
fcmovne
cmpsb
add
xor
sbb
test
jp
test
scas
inc
aad
pusha
dec
mov
in
push
js
scas
or
xchg
add
in
jns
test
xchg
add
lret
xor
popa
jo
mov
fcoms
ret
rclb
mov
mov
ja
out
fwait
mov
xor
sbb
mov
add
insl
popf
test
xchg
in
pop
dec
push
dec
push
fcomps
fidivs
pop
and
push
cmp
inc
sarl
xchg
in
fdivrs
mov
pop
mov
sbb
xchg
push
and
js
jno
dec
imul
jmp
addr16
ja
iret
xor
insb
lock
pop
movsb
mov
test
inc
sbb
test
xchg
iret
lret
xor
out
pop
into
mov
push
mov
fidivs
xchg
mov
sbb
and
mov
dec
cmc
adc
or
fildll
jne
sub
arpl
xchg
and
push
push
scas
xchg
int
push
adc
push
std
mov
pushf
ficoms
in
ljmp
scas
fistpl
mulb
movsb
and
leave
mov
push
arpl
sub
sub
cltd
roll
popl
xor
and
stos
movsb
mov
clc
cmp
lahf
adc
out
mov
mov
pop
xchg
mov
repnz
lds
lds
mov
outsb
test
into
push
icebp
mov
pusha
add
mov
or
jbe
aas
inc
dec
and
cmp
inc
adc
or
mov
pop
or
xchg
andb
or
cltd
lock
mov
xor
ret
roll
sbbl
aaa
test
cmp
xchg
fnstenv
or
int3
test
fsubr
pop
fs
jne
or
push
lds
aas
movsl
lods
push
or
movsb
mov
or
jmp
loopne
outsl
ljmp
mov
adc
push
out
insl
inc
inc
test
inc
cmp
or
mov
fnstcw
movsb
jle
mov
xor
sbb
lret
outsl
push
shlb
cs
and
and
les
sbb
mov
jp
out
xchg
mov
push
dec
cmp
out
mov
jno
adc
dec
rcrb
out
mov
jno
jmp
xchg
cmp
add
repnz
data16
jno
stc
push
mov
ret
aaa
aaa
adc
cmp
jmp
shl
mov
imul
push
inc
sub
inc
aad
mov
xlat
inc
js
mov
or
fs
outsl
mov
mov
out
add
or
enter
aam
in
pop
outsl
pop
mov
sbb
mov
cmp
js
push
push
push
mov
pop
rorl
mov
push
out
test
adc
aaa
push
and
and
and
insb
aam
mov
fisttps
jl
adc
push
push
test
loopne
aad
cmp
push
jne
dec
pushf
sub
sub
jl
sbb
je
daa
out
cmp
test
xor
notl
mov
jnp
jecxz
in
cli
lahf
xor
jecxz
imul
mov
jmp
and
mov
mov
sub
push
mov
rcr
push
push
add
cmp
ret
notl
mov
fbstp
pop
in
icebp
inc
xchg
cmp
inc
pop
xor
lcall
mov
scas
mov
push
xor
popa
xor
imul
pop
mov
test
push
mov
inc
xchg
pop
or
xor
xchg
mov
jae
pop
mov
add
jge
movb
mov
sub
add
pop
icebp
cli
mov
daa
ljmp
icebp
cmp
movsl
sub
scas
loopne
out
pop
mov
shll
jmp
xchg
movsb
xlat
ss
push
sub
aam
pop
cmp
js
and
cld
xor
inc
or
clc
adc
adc
mov
ficoml
inc
insb
jle
insl
int3
mov
mov
inc
mov
insb
and
fmuls
sarb
sub
mov
mov
fdivrs
inc
or
pop
rclb
nop
push
jmp
add
fimull
mov
sub
lock
pushf
sub
sub
push
adc
jnp
push
jo
push
or
lods
dec
test
xor
dec
adc
pop
sbb
mov
pushf
stos
insl
and
mov
stc
ds
inc
cmp
inc
cld
cld
arpl
mov
pop
sub
push
xchg
adc
cs
test
dec
out
cmp
pop
jb
or
add
stc
es
and
sub
subl
jle
inc
loope
std
xchg
mov
test
sub
sar
mov
and
mov
xchg
inc
jmp
int
xchg
daa
jle
sbb
jo
pop
dec
adc
push
pop
movsb
sbb
cmpb
add
jp
inc
jp
std
pmaxsw
lret
mov
mov
shrl
cmp
xchg
in
stc
divl
lds
xchg
roll
in
aaa
jae
jne
or
data16
mov
stos
cmp
add
in
loope
sbb
lret
sub
cmpsl
sbb
push
cmp
mov
stc
sbb
cltd
mov
push
mov
sbb
mov
rcl
stc
adc
jbe
jo
test
iret
inc
stos
xor
in
ficoml
push
sbb
out
mov
sti
fdivrs
xor
or
jp
in
mov
pop
in
jae
add
add
jbe
test
pop
fbld
inc
out
in
jbe
mov
mov
mov
jg
popf
pop
pop
dec
mov
dec
je
dec
je
sbb
push
mov
fcom
aaa
imul
jne
or
test
fimull
sahf
das
mov
pop
lret
arpl
push
ret
pop
xchg
fiadds
out
lods
push
cwtl
hlt
and
in
cmovno
adc
lcall
push
rorb
push
cs
out
int3
and
adc
xor
sbb
push
mov
lret
pop
jae
leave
movsb
std
push
shl
pop
lods
xor
mov
xchg
int3
fcmovbe
xor
mov
scas
pop
jp
push
jo
xor
shl
cmpsl
js
pusha
or
iret
cmpsl
xchg
imul
pop
xchg
dec
lahf
notb
sbb
pop
mov
lds
jae
ljmp
gs
ljmp
fsub
movq
pusha
enter
push
sbb
fadds
adc
sbb
insl
shl
lret
cmc
mov
testl
cmpsb
jg
adc
scas
push
pop
inc
lea
out
fs
scas
lret
jb
mov
adc
outsb
adc
dec
mov
cs
and
outsb
outsb
add
mov
fwait
out
inc
mov
xor
push
inc
hlt
into
pop
inc
dec
mov
mov
xchg
test
sub
inc
mov
les
inc
or
cmp
out
fidivrl
mov
or
stc
cmp
or
ljmp
inc
sti
lret
fwait
into
jns
rcrb
test
inc
push
inc
sub
test
inc
pop
pop
mov
jmp
scas
and
mov
outsl
psadbw
das
pop
push
test
call
push
scas
adc
xor
and
sbb
pop
mov
test
inc
cmpsb
inc
push
sbb
sbb
push
pop
add
add
mov
stc
mov
loop
pop
loope
jno
xchg
cmp
cmpsb
aam
scas
add
pop
cltd
inc
imul
out
jbe
mov
dec
jbe
stos
cwtl
aam
jg
pusha
push
lds
jge
adc
add
pop
add
mov
mov
push
xchg
xorl
test
and
add
or
pop
les
imul
sub
add
xchg
mov
movsb
mov
mov
call
push
popf
subb
in
in
pop
lock
xchg
in
mov
jl
mov
cmp
mov
and
mov
mov
xor
lret
jmp
jae
adcb
dec
je
mov
fwait
cmpsl
arpl
push
mov
xor
push
inc
push
movsb
push
jg
xchg
jecxz
jge
push
pop
dec
xchg
ret
shlb
dec
add
out
inc
cmp
lods
shll
ret
ret
inc
or
sbb
addl
aas
icebp
cmp
lock
mov
mov
dec
sub
sub
dec
sbb
jb
push
rclb
cmp
imul
adcb
sbb
aas
mov
hlt
hlt
cmp
pusha
push
clc
inc
sub
xorl
push
mov
mov
dec
inc
adcl
pop
insb
mov
mov
jge
std
xchg
jp
insl
test
and
sub
xor
xor
sbb
jle
jno
insl
dec
imul
imul
or
jb
inc
add
push
test
dec
rcrb
xchg
pop
add
xchg
push
add
xor
or
aam
mov
cmpsl
lret
std
adc
shlb
mov
sub
divb
pop
add
mov
fwait
push
jno
in
dec
mov
sahf
les
xchg
inc
mull
xor
mov
loope
scas
jp
cmp
cmp
adc
push
sbb
dec
push
aam
inc
rolb
or
in
pushf
sbb
lock
in
add
or
pop
cmovl
push
sub
js
cmp
mov
fmuls
stc
or
insb
lock
shrl
inc
mov
mov
mov
mov
or
jnp
subl
pop
dec
sub
push
mov
push
ret
arpl
sub
pusha
out
stos
test
xchg
and
xchg
or
pause
add
mov
push
ljmp
dec
cmp
imul
jmp
ficoml
jmp
adc
mov
xchg
inc
and
ljmp
add
mov
mov
sbb
inc
push
dec
adc
aas
or
adc
sbb
jl
aam
sahf
insb
addr16
ret
mov
je
fists
jl
sub
out
jae
mov
sbb
addr16
jnp
push
aad
xor
xchg
repz
loopne
flds
sub
fwait
inc
mov
push
cmp
mov
adc
addb
leave
shrl
jns
imull
rcrl
out
adc
push
aad
inc
sbbb
add
pop
outsl
sbb
cmp
mov
mov
aam
sahf
into
negb
pop
and
push
push
mov
test
fstpl
dec
adc
jmp
jle
pop
loop
dec
pop
ja
and
xchg
rcrl
lahf
test
test
sbb
cltd
sahf
shlb
or
sbb
test
push
inc
loopne
cmp
loopne
int3
call
dec
gs
hlt
lahf
pop
sti
aad
fldcw
lods
push
stos
faddl
jae
adc
mov
jmp
xchg
fmull
mov
fists
jecxz
hlt
in
lea
mov
insb
inc
add
mov
aam
pop
sbb
sub
cwtl
mov
dec
clc
inc
push
and
mov
aad
jns
arpl
pop
mov
or
adc
or
sub
ja
aas
xor
dec
lods
cmp
xchg
aaa
clc
adcl
push
push
xor
ret
shl
or
xor
lcall
jecxz
mov
test
pop
jo
lods
imul
cwtl
mov
mov
jle
mov
mov
pop
jb
jbe
fwait
loope
hlt
jns
pushf
push
dec
call
push
ljmp
in
das
pop
test
cmpl
sahf
in
cmpsl
jb
cwtl
notl
and
pop
xchg
int3
stos
pushf
lret
inc
xchg
into
daa
xchg
or
inc
scas
xor
daa
fcompl
mov
jge
mov
push
sub
call
scas
mov
cli
test
cmp
cmp
in
leave
insb
dec
mov
push
cld
sbb
hlt
jle
and
mov
add
sub
sub
jg
inc
in
lret
jg
xorb
push
mov
xor
adc
insl
cmpsb
ss
inc
push
sub
push
inc
loopne
je
push
push
adc
xor
popa
dec
in
xchg
outsl
mov
xchg
inc
sub
xor
mov
mov
push
xchg
cwtl
jl
cld
cld
out
xchg
mov
jmp
adc
xchg
mov
sub
fsubs
shlb
aaa
add
mov
push
jecxz
imul
out
aas
iret
dec
sub
inc
scas
aad
push
repz
into
sub
mov
cmc
adc
xchg
lcall
movsb
call
sub
xchg
movl
jl
pop
xor
push
pop
outsb
xor
cmp
mov
and
aaa
mov
push
inc
jno
cmpsb
mov
push
add
cmc
fwait
jg
cmpsl
adc
fsubrs
xchg
or
inc
call
jge
aaa
mov
xchg
into
dec
sbb
mov
sti
sbb
loopne
movsb
mov
inc
cmp
push
xor
sub
test
ja
xlat
add
lret
shll
fnstcw
in
sbb
inc
insl
mov
loop
addb
jp
orb
inc
movsb
ret
scas
jno
fisttps
stos
js
adc
inc
mov
jp
addr16
jg
stos
cli
mov
inc
movsl
imul
movsl
cmp
mov
xchg
in
arpl
lods
pop
test
jecxz
faddp
sub
cmp
call
fimuls
icebp
ret
popa
mov
cmp
mov
roll
sbbl
and
shll
mov
ja
inc
cmc
popf
xchg
jge
pop
popa
push
fildll
mov
or
stos
jnp
pop
xor
je
or
in
push
les
xor
xor
test
outsl
pop
jae
jno
xor
fiaddl
sbb
cmp
inc
lods
cmp
je
dec
xchg
and
or
push
sub
pushf
fimuls
psubsw
dec
popa
lods
jecxz
sbb
in
scas
jp
sbb
cmp
mov
adc
mov
mov
std
outsb
cmp
xchg
scas
icebp
and
push
fidivrs
aaa
jns
xchg
cmp
arpl
pop
lcall
jo
jp
cli
adc
insb
lret
jb
outsl
inc
repnz
pop
mov
dec
in
mov
rolb
xorl
inc
int
fbld
cmp
lcall
adc
sub
xchg
jbe
mov
xchg
movsl
nop
adc
icebp
imul
stc
mov
mov
lods
bound
jo
mov
pusha
adc
and
retw
lods
jle
xor
xor
xchg
cmp
dec
sbb
lods
fdiv
jo
clc
mov
in
imul
imul
or
cld
cmp
insl
push
stc
cli
dec
jnp
pop
mov
inc
inc
and
mov
pop
xchg
out
adc
mov
sbb
xchg
inc
adc
loopne
and
push
pslld
push
xchg
insb
scas
call
mov
or
int
out
stc
xor
inc
pusha
dec
inc
jg
sub
inc
cmp
inc
xor
fildll
lret
inc
push
out
and
mov
xor
sahf
sbb
int
shlb
hlt
xor
pop
adc
mov
test
mov
das
mov
xor
pop
pop
fistl
leave
xchg
out
insl
insb
adc
xchg
cwtl
int3
ret
jb
shlb
and
add
or
cld
add
and
jg
aas
cmp
loop
enter
outsb
jns
cmp
gs
mov
dec
sbb
scas
mov
xchg
sub
xchg
test
xchg
rcll
xorl
arpl
fadds
sub
push
lcall
inc
or
pcmpgtb
fisubrl
vcmppd
arpl
and
xchg
xchg
xor
shrb
mov
int
and
adc
and
and
or
mov
and
out
mov
sub
add
sbb
mov
add
imul
lds
push
add
dec
sti
cmp
sbbb
stos
in
sub
mov
sti
pop
pushf
dec
mov
dec
aam
mov
mov
fisubrl
jns
cmp
sbb
mov
inc
enter
push
push
push
lret
xlat
push
mov
fldcw
xchg
add
and
roll
pop
add
ror
mov
xchg
push
jne
push
and
aad
add
adc
jmp
mov
scas
inc
outsl
mov
jp
adc
xchg
ror
add
push
adc
mov
jg
test
fdivrl
jo
xor
ds
enter
out
and
sti
mov
mov
std
out
mov
pop
inc
repz
mov
and
shrb
jnp
aam
mov
adc
in
testl
sbb
sbb
or
inc
mov
scas
out
xchg
lods
sub
test
xor
sbb
mov
sub
ficoms
pop
mov
es
jl
sub
push
push
inc
cli
aam
xor
adc
mov
or
loope
mov
push
and
xor
mov
outsl
fsubrl
lds
jl
jge
test
js
dec
je
js
idivb
pop
mov
add
cmp
push
movsl
js
rorb
out
cmp
test
fsubr
incb
cmp
sbb
push
je
xchg
push
cmp
mov
ret
cmp
mov
cltd
sub
outsb
xor
xchg
pop
sbbl
cwtl
jge
mov
adc
sbb
add
mov
out
loop
xchg
loope
push
push
pop
jno
mov
pop
fidivl
cltd
pop
mov
sti
out
mov
add
fcomi
xor
scas
ret
test
data16
sbb
push
mov
jb
push
dec
loope
sub
bound
movsb
xchg
daa
jne
out
sbb
fcoml
repnz
loop
scas
daa
cmp
std
dec
std
mov
pop
cmp
int3
adc
std
adc
pop
dec
fmulp
imul
movaps
cmp
cmpsb
xlat
dec
pop
cmp
icebp
out
int
pusha
lahf
jns
in
repz
clc
mov
or
dec
setbe
cmp
and
pusha
jg
lock
sbb
mov
clc
sub
lods
mov
fwait
mov
or
push
sub
mov
or
cmp
xchg
mov
cwtl
mov
mov
call
pop
mov
push
dec
imul
cmp
incb
nop
test
and
or
dec
and
and
andl
xchg
push
stos
and
adc
xor
pop
aad
mov
or
cmp
repnz
mov
adc
pop
jecxz
adc
xorb
fistpl
mov
xlat
mov
clc
mov
push
rolb
lods
leave
dec
popa
out
outsb
test
or
fidivl
jne
mov
jmp
push
daa
push
mov
in
xchg
pop
pop
jb
or
scas
cmp
push
inc
pop
iret
mov
fdivrl
xchg
mov
insb
fildll
das
loopne
mov
and
nop
idivb
movl
ret
lods
dec
push
fcoms
or
jp
insb
lahf
mov
sub
dec
add
clc
adc
pop
push
dec
cmp
lock
push
lea
dec
jl
scas
ss
aas
adc
iret
mov
xor
out
les
push
adc
iretw
push
les
cmpsb
aam
and
jnp
outsl
xlat
pop
jb
sub
pop
pop
shrl
mov
xor
xchg
mov
cmp
jns
xchg
or
or
dec
inc
cld
xor
pusha
push
adc
sbb
dec
sahf
loope
roll
cmc
sub
cltd
dec
repz
iret
sub
sbb
xor
in
ja
or
sub
pop
cmp
jne
lock
pushf
js
ret
xchg
in
inc
ljmp
push
xchg
pop
stc
lods
mov
lods
ja,pt
or
or
in
scas
or
add
mov
icebp
stos
mov
ds
sbb
fwait
sbb
fs
pop
jg
cmp
shll
fisubrs
imul
cmp
inc
rolb
aam
push
les
test
mov
les
sub
push
sub
push
adc
and
inc
imul
xchg
push
adc
xchg
pop
push
mov
popa
jno
sub
pop
bound
push
inc
push
nop
loopne
cwtl
test
arpl
ret
cmp
in
sub
rol
mov
nop
xlat
and
in
lods
out
mov
das
dec
jno
cli
cltd
cld
out
das
lcall
clc
lock
cmp
scas
add
pusha
ja
jp
inc
sub
lret
lods
ret
cmp
mov
jbe
icebp
cmp
nop
pop
dec
xchg
test
cmc
xchg
int3
or
mov
jne
ret
dec
and
dec
or
dec
test
jns
adc
enter
es
pop
push
jo
xor
mov
imul
mov
jo
jb
xor
lea
xor
popf
fsub
lock
cmpsl
ret
pop
cwtl
lock
lods
dec
lea
xor
nop
subl
les
lds
bnd
or
inc
jecxz
in
popf
and
fisubrl
cmc
mov
lds
ret
ret
add
dec
xlat
les
xchg
xlat
mov
jo
popa
sbb
fwait
push
fbld
or
or
stos
lahf
insl
xor
test
or
fcmovu
mov
cmp
mov
lret
jno
add
sbb
and
loope
push
mov
xor
cmp
xchg
pop
ljmp
mov
loopne
or
sub
mov
test
out
cmp
fs
ja
jp
rorl
xchg
fmull
dec
ljmp
pushf
into
out
sbb
sbb
sub
jp
addb
es
adc
outsl
xchg
dec
ret
mov
mov
sbb
div
xlat
and
add
ljmp
dec
fimuls
lcall
ds
bnd
or
fsubs
bound
imul
push
movsb
cmp
incb
cmp
subl
adc
push
subb
negb
and
and
or
lahf
arpl
mov
mov
xchg
js
movsb
sbb
xor
mov
mov
mov
aad
and
mov
ds
cld
orl
mov
inc
and
xchg
mov
cmp
mov
in
or
push
cmp
inc
mov
mov
and
into
lock
xchg
dec
push
push
pop
in
test
daa
stc
ffree
sub
call
dec
and
adc
stos
in
push
add
and
jl
in
mov
aas
dec
incl
loope
scas
ljmp
and
jecxz
dec
dec
js
jbe
jl
shrl
add
push
xor
pop
fmul
insl
and
xchg
add
inc
jle
int3
dec
jno
mov
mov
and
and
icebp
sub
repz
out
push
loop
pop
rorb
clc
adc
rcl
nop
sub
or
pop
sbb
addr16
mov
fwait
stc
test
ljmp
mov
mov
test
lds
xchg
ss
in
xlat
roll
scas
imulb
imul
adc
push
mov
ja
or
pop
adc
cmc
jns
xchg
cmpb
mov
push
rorl
jle
outsl
iret
fisubl
lret
and
xchg
sbb
out
fcoms
push
mov
adc
mov
mov
adc
rorb
imul
dec
fbld
dec
mov
scas
nop
fisttps
leave
push
pushf
adc
cmpb
or
push
pop
fstl
pop
pop
dec
int
cmp
enter
loop
mov
fiadds
dec
jge
rorb
lods
sahf
pop
shrl
cmp
pop
add
lret
jo
mov
push
repz
into
cmp
lahf
daa
xor
pop
jo
sti
xchg
jnp
jae
not
add
dec
cmpsl
mov
sub
fstl
lret
subl
jb
jnp
push
fnsetpm(287
mov
and
push
test
mov
xchg
sti
add
pop
mov
pop
pop
sbb
scas
lock
pop
inc
out
jle
adc
push
mov
inc
mov
and
jno
lcall
cmp
inc
mov
popl
insl
push
js
or
cmp
cmp
adcb
ss
repz
into
insb
hlt
jae
aad
sbb
cli
lock
lret
ret
pop
cmp
adc
jne
sub
cld
inc
sub
mov
aas
cs
cmp
mov
push
cmc
outsb
es
test
pop
mov
add
mov
pop
fsubrp
xchg
lcall
pop
filds
jp
clc
rcrb
cli
sti
add
xchg
bound
stos
shl
mov
lea
icebp
movsl
and
and
xor
push
xor
fs
sbb
vprotw
scas
mov
andl
into
fldcw
shr
xlat
call
aam
sbb
adc
dec
xchg
rclb
sbb
lret
es
adc
ja
cli
repnz
decl
xor
sbb
sbb
gs
arpl
aaa
sbb
xchg
add
xor
int
mov
jns
dec
cltd
mov
scas
mov
pop
js
add
push
test
dec
ret
push
pop
bswap
cmp
and
sbb
outsl
fisttpl
jae
and
mov
in
and
push
adc
xlat
or
das
and
inc
mov
ja
mov
and
xor
iret
mov
and
enter
mov
mov
ret
push
pop
ds
jp
in
stc
jae
lahf
lret
movlps
out
hlt
lock
icebp
sub
mov
xor
cmp
add
xor
pop
lret
rcll
cmpsl
dec
push
out
clc
or
je
sbb
leave
sti
leave
pop
xor
mov
inc
pop
stc
insb
push
cwtl
cmp
cli
cli
fstp
cs
aaa
push
and
in
pusha
push
xor
sub
sub
testl
xor
ja
sbb
adc
dec
rclb
xor
dec
cld
cld
popf
jnp
pop
cs
out
enter
incl
lods
clc
mov
call
rcr
loope
mov
jne
mov
popa
mov
inc
dec
insb
lcall
push
lods
push
lcall
sbb
mov
loope
mov
dec
cmc
jbe
xchg
mov
aaa
aam
andl
inc
lods
fs
push
push
scas
lcall
jge
pop
add
xchg
ja
cmp
add
fs
ret
pusha
sti
mov
jb
mov
xor
jns
jle
jns
testl
lea
push
sti
sbb
pop
and
add
sbb
pop
add
shrb
fistpll
ds
jl
cmpsb
dec
aam
and
outsb
sub
sbb
dec
mov
xchg
outsl
push
std
loope
cmp
stc
int3
or
rclb
xor
adc
mov
mov
fcmovb
maskmovq
testl
sbb
add
xor
mov
or
insb
repz
mov
push
leave
cld
out
mov
insb
mov
xor
mov
and
vmovlps
cmp
cmpsb
daa
pushf
inc
pop
rclb
jno
mov
lods
pop
insb
jbe
sbb
mov
insb
inc
stos
aad
int3
or
testb
in
ficomps
dec
add
inc
leave
jmp
xchg
xchg
pop
shlb
jle
dec
aam
dec
out
jl
sub
and
push
mov
and
sahf
jecxz
cmp
push
test
xor
cmp
jo
push
jle
adcl
popa
cwtl
iret
jo
push
mov
inc
or
mov
inc
mov
ret
pushf
mov
mov
add
test
mov
pop
psubd
ret
out
dec
and
loope
pop
lods
mov
xor
rcr
xchg
cs
jmp
aaa
push
flds
mov
fucomip
ds
pop
or
std
ret
jae
or
daa
jmp
bound
push
jnp
sbb
mov
inc
jne
int
dec
fstpl
orps
jbe
loope
jns
xchg
pop
lods
mov
push
clc
stos
pop
or
fisttpll
or
cli
xchg
xchg
mov
pushl
inc
shrb
mov
loope
mov
mov
adc
fistps
xor
aas
xor
or
push
lret
fnstcw
popa
nop
pop
or
pop
js
into
mov
mov
into
mov
int
in
mov
mov
cmp
dec
nop
mov
ljmp
cli
mov
test
in
cwtl
pop
and
add
xchg
nop
xor
sbbl
les
stc
dec
mov
loop
divl
and
and
and
inc
ss
push
push
movsl
idivb
inc
arpl
sub
popa
pop
mov
fisubs
lea
call
add
pop
lods
int
mov
cli
xchg
movsb
push
imul
dec
add
or
test
cmp
shl
inc
dec
jg
sub
outsl
rcll
cmpl
xchg
sahf
pop
mov
cltd
push
idiv
inc
loopne
and
mov
insl
add
cmp
fiadds
scas
enter
mov
pop
mov
adc
insl
adc
hlt
into
faddp
or
xchg
dec
scas
push
jp
jle
repnz
sbb
stos
popa
add
xchg
and
aam
outsb
clc
out
cmpsb
aam
inc
cmp
add
es
test
out
mov
arpl
test
ja
iret
xchg
sub
jecxz
cld
movsb
test
dec
inc
insb
pop
shl
in
jg
hlt
xor
add
fidivrl
cmc
jno
and
pop
mov
mov
into
mov
push
rorl
icebp
jnp
mov
hlt
shrl
movsl
jp
xor
sti
lds
cwtl
push
cwtl
xchg
push
dec
ja
mov
ljmp
and
icebp
outsb
ret
fs
or
dec
test
pop
lea
push
outsb
aaa
adc
ds
push
leave
mov
push
insb
sub
fmull
mov
aad
mov
adc
mov
test
inc
in
mov
xor
in
rcrl
bound
cli
insl
jne
sub
popf
pop
inc
imul
mov
int3
hlt
inc
int3
fiadds
sub
lahf
outsl
sbb
loopne
iret
jg
pop
push
xchg
or
fisttpll
test
insl
test
mov
leave
mov
push
call
add
std
or
fwait
and
fwait
mov
xchg
and
jbe
push
push
xchg
insl
jnp
mov
scas
xlat
sbb
dec
push
jae
ret
adc
fsubrl
push
in
in
jnp
cld
out
cs
in
sbb
xlat
push
xlat
xor
adc
pop
and
and
sbb
and
sub
dec
cmpsb
arpl
and
into
adc
sub
dec
xchg
xchg
or
sub
roll
out
imull
mull
xchg
stc
inc
pop
les
add
cmpsb
sub
inc
and
push
cmpsl
scas
cli
pushl
sti
add
and
push
movsb
pop
repz
jnp
and
jo
xor
mov
aaa
pop
movb
stos
iret
fstpl
icebp
mov
fwait
xchg
mov
dec
cmpsl
out
mov
cld
inc
mov
stos
jp
dec
aas
lret
ret
push
pop
sbb
or
in
sub
inc
inc
inc
jle
movsl
xchg
dec
icebp
ds
inc
add
push
jb
cwtl
pop
cmp
hlt
add
mov
sub
jbe
mov
inc
mov
outsb
jae
inc
mov
sub
pop
dec
xor
fidivrs
imul
fnsave
cmp
and
jg
ljmp
sahf
and
stc
fmull
sbb
lret
es
pusha
mov
sub
sub
xor
sti
mov
push
inc
mov
xor
scas
les
fwait
test
dec
movsl
test
outsb
sub
and
xchg
mov
inc
or
xchg
inc
stc
daa
push
mov
inc
test
addb
fs
lods
push
jp
test
xchg
out
movsb
push
fmuls
cmp
in
xor
stos
xchg
mov
push
fistpll
fidivrl
push
push
or
push
dec
divl
mov
push
adc
stc
repnz
les
js
sub
out
ds
inc
outsl
popf
mov
sub
popf
pushf
rol
sbb
add
inc
sbb
jo
adc
aas
in
mov
jbe,pn
fiaddl
into
pop
push
arpl
xchg
rcrb
jae
mov
jle
ror
outsb
add
es
stos
xchg
loop
shlb
push
je
add
cwtl
pop
jecxz
frstor
pop
loopne
cltd
repz
gs
push
pop
add
cli
mov
data16
push
lds
push
xlat
jle
xchg
cld
adc
adc
data16
dec
push
iret
addr16
rcll
push
loopne,pn
sub
dec
add
pop
sub
movsl
subb
and
pop
bound
cmpsl
push
and
or
inc
fld
or
mov
stos
mov
pop
mov
jp
sbb
movsl
out
lock
push
movsb
sub
pop
stc
inc
insl
fsubl
flds
push
mov
xor
sbb
addr16
mov
jno
ljmp
nop
repnz
adc
notl
repnz
nop
mov
and
mov
aas
aam
sbb
jl
inc
mov
xchg
insb
adc
out
xor
cmpsb
sahf
jle
fcomi
pusha
xchg
jmp
sbb
xchg
in
push
sub
xor
lahf
dec
inc
jne
fwait
or
or
or
jp
lret
cltd
repz
test
fs
aas
dec
jle
xchg
shrl
push
sbb
and
int
adc
push
mov
xchg
lcall
xor
xchg
ret
and
or
in
sub
aad
mov
pusha
arpl
inc
mov
in
push
push
andl
add
jae
fs
bound
lret
sti
jp
test
dec
add
add
jo
mov
cmp
mov
push
cld
cmp
lods
sbbl
jb
inc
and
dec
data16
push
subb
mov
aaa
andl
out
add
in
in
into
outsl
sbb
add
sbb
dec
push
xlat
aaa
xchg
jno
xchg
pop
or
adc
ret
and
mov
fcmovnu
or
add
out
pop
mov
fistps
out
pop
xlat
lds
les
jae
pop
jns
roll
pop
xchg
leave
ljmp
outsb
movsb
fcmovnu
subps
js
xchg
rclb
mov
xlat
xor
xor
ficoml
lahf
dec
adc
cld
jns
out
movsb
jae
dec
fadds
jmp
int3
aas
pop
out
mov
ljmp
or
add
dec
inc
in
lock
pop
push
fcompl
into
lods
dec
jl
push
les
cmp
jno
pop
push
cmp
mov
arpl
xchg
jns
popl
or
mov
add
pusha
jg
pop
lock
clc
lcall
in
insl
movsb
push
pop
mov
insl
sbb
inc
icebp
outsl
mov
mov
push
or
xor
mov
lret
rcl
shlb
xor
popf
lret
hlt
leave
les
dec
daa
aas
ljmp
push
es
rcrl
aaa
dec
add
adc
divl
jmp
push
call
addr16
mov
and
mov
and
sahf
test
add
mov
fildl
pop
into
lcall
mov
and
cmpsl
cwtl
xor
sub
cmp
xor
xchg
mov
add
je
push
dec
aaa
adc
pop
fldl
mov
out
call
mov
scas
xor
and
push
mov
shlb
xchg
cltd
ret
lock
mov
mov
push
mov
cltd
not
faddl
loop
stos
fmull
fstp
ja
cmp
fbld
mov
notl
xor
shlb
nop
scas
fisubrl
pop
mov
xlat
lahf
pop
jnp
or
sbb
xchg
inc
xchg
stos
jb
sahf
xor
dec
adc
sub
and
sub
pop
jns
xchg
add
pop
lcall
ljmp
mov
out
xchg
hlt
lret
in
pop
xlat
mulb
push
mov
bound
ss
iret
aam
and
mov
and
aad
out
mov
mov
inc
cltd
aaa
lcall
jecxz
mov
in
stos
sbb
shll
and
test
dec
sbb
std
mov
insl
jg
sub
ret
ret
dec
aad
dec
lcall
cld
dec
sahf
int
fs
ljmp
scas
cmc
pop
cwtl
add
faddl
pop
fistpll
cmp
fadds
dec
cmpsl
mov
mov
rcr
adc
ret
jle
mov
pop
test
pop
out
movsl
int3
xor
adc
push
dec
mov
scas
inc
enter
gs
lahf
or
andb
mov
adc
bound
aaa
roll
push
and
mov
sub
je
add
or
into
cmp
jmp
pusha
jge
and
dec
and
rcl
cmp
mov
js
loope
sbbl
mov
mov
jno
aam
test
stc
and
pushf
inc
jne
mov
add
mov
mov
pop
dec
mov
call
mov
push
mov
maxps
dec
cmp
jne
shlb
push
push
aas
adc
mov
inc
xor
out
xchg
ja
pusha
mov
data16
test
movb
fldz
add
ds
push
inc
lds
lret
fs
xor
jno
lret
mov
or
call
rorl
mov
inc
jo
pop
cmp
divl
rol
int
push
pop
push
push
jge
jmp
mov
lods
idiv
push
sbb
or
roll
xchg
ds
inc
cs
shrl
mov
xchg
xor
in
ljmp
mov
bnd
cmpsl
je
and
insl
rcll
push
insl
pop
inc
int
mov
jb
pusha
mov
mov
adc
int3
and
adc
cmp
xchg
cmpsl
xchg
add
data16
or
pop
scas
sti
xchg
add
mov
add
push
divl
mov
fnstcw
rcr
hlt
lahf
and
mov
sub
or
sub
test
mov
ss
dec
pusha
movsb
pusha
stc
and
test
inc
xchg
jmp
hlt
dec
fbld
cmp
subl
cltd
adc
pop
lds
dec
dec
xor
jne
add
sbb
dec
xchg
push
daa
aam
dec
iret
cmpsl
jne
jo
outsl
sbb
cmp
in
imul
add
sbb
inc
jge
js
fdivr
jmp
je
lock
fbld
stc
test
xor
rcrl
pop
push
pop
or
push
ljmp
mov
push
pop
movsb
pop
add
jne,pn
repnz
mov
cwtl
sbb
xor
xchg
or
add
bound
leave
mov
enter
pop
pop
or
sbb
movsb
dec
cmp
fs
cmpsl
in
aam
out
adc
fwait
xlat
test
loope
xchg
or
push
push
sbb
pop
xchg
xchg
mov
fbld
mov
xor
gs
mov
lahf
inc
imul
mov
dec
dec
push
pop
mov
dec
adcl
xchg
cs
push
mov
jns
pop
lds
push
lret
ficoms
jge
inc
aam
rolb
repnz
scas
push
mov
xchg
xchg
sahf
ret
sub
mov
into
xor
loope
lods
jno
adc
daa
pop
dec
imul
xlat
clc
sub
stos
and
add
push
loop
mov
fisttpl
mov
in
adcb
adc
js
cwtl
addr16
hlt
sub
cmp
sbb
cli
fdivs
lods
mov
mov
outsb
aad
mov
stos
xchg
in
loope
leave
or
mov
mov
jbe
test
xlat
mulb
sahf
sti
incl
mov
and
aam
ljmp
unpckhps
sbbl
sbb
sub
mov
fs
jo
mull
add
arpl
inc
lahf
mov
rorb
popa
ror
mov
and
faddl
mov
xchg
nop
push
add
rcrb
push
fnsave
xchg
cmc
push
repnz
pop
push
jmp
add
daa
dec
push
push
sbb
mov
and
sahf
fisubl
cmpsl
or
dec
lods
mov
mov
xor
mull
add
adc
mov
popa
push
push
xlat
lcall
imul
mov
fldt
ds
subb
leave
or
and
mov
pop
add
daa
push
sbb
cli
mov
sahf
mov
and
test
loop
mov
int3
xchg
std
xchg
mov
sbb
sahf
jmp
das
cmpsl
xchg
mov
and
mov
js
xor
add
lock
xor
and
jne
loopne
jge
out
sub
dec
hlt
or
xchg
loope
push
xchg
andl
jae
mov
pop
add
inc
adc
jmp
mov
shrl
mov
je
lcall
cmpsl
adc
fwait
jbe
pop
jmp
xor
cltd
add
cwtl
in
push
jge
xor
jle
dec
cmpsb
cmp
mov
ss
pop
mov
mov
mov
xor
cmpb
dec
mov
ret
gs
scas
dec
aas
cmp
and
out
jl
in
jg
adc
popa
lock
pop
push
arpl
loope
das
jge
mov
dec
sub
xchg
mov
andl
movsl
leave
sahf
sub
mov
aas
adc
xor
or
int3
and
loop
mov
mov
sub
imul
push
popa
dec
lcall
iret
adc
push
aaa
ret
adc
xchg
push
insl
xchg
enter
sub
mov
fs
mov
stos
cltd
push
sarb
stos
mov
ror
jb
ret
or
add
hlt
lods
sbb
popa
sbb
pusha
push
dec
pop
pop
loopne
fadd
scas
inc
or
or
jbe
addr16
jg
mov
push
rclb
mov
adc
or
jb
lret
xchg
mov
or
jb
subb
mov
rol
push
shl
test
sub
xchg
roll
jge
mov
adc
fisubs
xorl
lahf
adc
or
dec
insl
adc
clc
arpl
xlat
dec
add
fs
and
and
or
scas
lods
aad
push
jbe
into
sti
imul
jp
xor
in
push
insl
into
adc
mov
ja
mov
int
es
aam
xor
jno
sub
clc
test
out
imul
xchg
cwtl
push
sub
sbb
sbbl
sbb
fdivs
xlat
adcl
loope
test
pop
std
lods
mov
add
push
sahf
or
subb
sbb
movsl
and
or
adc
dec
mov
sbb
mov
vpminub
push
or
push
jnp
push
and
mov
outsb
fcompl
mov
rcll
mov
push
fcompl
dec
repnz
call
popf
pushf
xchg
adc
pop
imul
daa
mov
fisubl
jno
pop
sbb
jl
repz
mov
test
sahf
mov
arpl
inc
cltd
or
mov
sti
add
and
push
pop
and
push
shrl
lahf
popf
jae
lods
mov
sbbb
aam
subb
xor
push
add
pop
imul
and
fimuls
jmp
repz
or
cmp
negb
pop
jnp
lret
push
and
fstpt
out
inc
xor
ds
jnp
inc
push
push
lock
push
sub
add
arpl
xor
fdivr
ficomps
std
fldz
and
rcrb
and
test
mov
inc
cmp
xor
xchg
fistpl
jge
movsb
pop
fwait
not
and
sbb
pop
js
test
pop
add
xchg
cwtl
ret
pop
and
test
or
push
dec
int3
mov
movsw
mov
es
les
mov
sbb
scas
cmp
xor
rclb
inc
addl
popf
jo
sbb
in
out
pop
popf
or
mov
daa
lea
jmp
rorb
sub
jbe
in
les
mov
xchg
sbb
push
push
adc
dec
jp
xlat
out
movsb
movsl
adc
inc
test
inc
lock
rorb
push
jne
mov
nop
inc
jbe
fsubp
add
inc
dec
or
push
aad
mov
loopne
sbbb
mov
xor
test
pop
inc
mov
xchg
pusha
xor
aad
adc
mov
sarl
les
daa
out
stos
ja
and
leave
lock
lahf
inc
subl
fistl
jge
xchg
sub
jecxz
lret
cltd
mov
dec
insb
jne
dec
rcrb
mov
cmp
xor
and
push
sub
and
xor
out
jl
adc
roll
and
push
mov
test
outsb
cs
aas
pop
xor
loop
push
into
pop
arpl
push
dec
inc
insb
les
mov
mov
sbbl
sub
mov
push
rcrb
mov
cmpsb
test
in
cmp
sbb
and
rcrb
inc
sbb
or
outsb
popa
out
jb
scas
push
testb
mov
fdivs
pop
jecxz
jmp
frstor
cmp
mov
mov
shlb
sub
mov
hlt
mov
mov
cmp
xor
sub
adc
or
arpl
pop
sub
lock
imul
adc
jo
ucomiss
dec
gs
rcrb
repz
nop
xchg
ret
pop
cmp
fwait
ds
outsl
lock
call
mov
sahf
mov
andl
mov
xor
and
and
pop
mov
and
outsb
stc
je
das
pop
std
pop
aam
cld
xchg
in
jmp
test
sub
js
mov
rclb
outsl
js
bound
or
inc
imul
push
adc
xlat
or
pop
fidivrs
xor
xor
movsl
sub
mov
xor
cltd
jae
pop
dec
stos
sbb
js
stos
int
cld
pusha
add
xor
mov
push
ja
stos
add
fistps
icebp
lods
enter
aad
and
inc
push
lds
xor
stos
data16
mov
in
loopne
les
stos
push
scas
mul
mov
dec
or
push
sbb
add
icebp
arpl
in
pop
inc
fildll
push
insb
pop
loopne
mov
jb
or
adcb
cmp
sbb
sahf
fwait
lahf
lock
sub
xchg
int
pop
push
enter
inc
pop
cld
pusha
insl
xchg
sbb
mov
push
out
ljmp
jl
mulb
iret
lods
in
leave
adc
lahf
pop
sbb
inc
mov
fidivrl
sub
clc
pop
das
into
cmp
movsb
sbb
sbb
icebp
mov
popa
cltd
jle
enter
rolb
cmp
loop
dec
xchg
outsl
test
out
adc
jle
out
jmp
jb
rorl
mov
add
mov
aaa
mov
adcb
arpl
mov
xchg
sbb
sbb
add
pop
iret
mov
mov
int3
shlb
fiadds
scas
fstl
sub
pop
dec
mov
popf
in
out
mov
add
sub
lret
jecxz
in
push
push
sti
jmp
shr
aas
scas
cmp
lock
jo
jl
addr16
arpl
or
xchg
into
icebp
pop
mov
stos
xchg
xor
rol
xchg
and
mov
int3
dec
inc
shlb
sub
lock
xor
mov
adc
push
rol
addr16
fistps
cmpl
dec
dec
aaa
and
push
pop
test
fwait
das
movsl
loope
and
pop
leave
jbe
hlt
push
loop
test
or
jle
enter
push
jle
cmpsb
dec
dec
push
xchg
xorb
jne
inc
out
cmp
ret
dec
imul
mov
stos
mov
xchg
std
daa
xor
cli
jne
stos
or
cltd
add
pusha
in
cmp
lods
imul
nop
mov
mov
cmpsl
mov
cmc
mov
cmp
int
push
push
ficompl
fwait
mov
mov
jg
aas
jl
push
push
dec
push
out
xchg
add
call
mov
jno
popf
xchg
cmp
movsl
xor
fmull
int3
inc
cmp
pop
xchg
xchg
mov
leave
out
imul
mov
pop
ret
pop
mov
mov
or
cmp
xchg
test
and
pushf
mov
call
sahf
pop
push
loopne
sti
pop
mov
cmp
inc
dec
mov
lahf
fbld
mov
incl
mov
xchg
or
push
enter
lea
fists
lods
test
testl
enter
in
and
push
out
xchg
xor
mov
stc
xor
sbbl
mov
pusha
mov
jge
dec
mov
sbb
jnp
cmpsl
adc
pop
add
pop
sti
adc
inc
fidivrl
jl,pt
sbb
pop
xor
popl
sti
sbb
and
sbb
fwait
das
lcall
xlat
sub
add
outsb
in
xchg
test
shlb
insb
aaa
jecxz
loop
cmp
scas
test
int
lock
je
mov
mov
jge
pop
mov
jmp
icebp
roll
ja
jmp
outsl
fldl
inc
jae
outsb
push
mov
dec
cli
push
cwtl
fsubrs
pusha
fistpl
sbbb
fcom
imulb
cs
jmp
sbb
lea
rcrl
das
or
iret
sarb
enter
xchg
scas
rol
nop
divb
push
shlb
mov
adc
xor
mov
push
out
loope
iret
lock
stos
mov
out
jmp
dec
gs
sbb
xchg
sub
push
xor
sub
dec
popf
mov
data16
pushl
leave
add
mov
jl
xchg
fwait
jae
sbb
imul
xchg
jne
orl
test
das
fldenv
inc
cltd
sbb
mov
push
fwait
mov
xorl
adc
loop
inc
mov
lds
or
fisttpll
cs
orl
jns
mov
lock
dec
ljmp
push
sbb
sbb
or
aaa
ja
add
imul
jbe
loope
decl
divl
sbb
and
mov
jl
jecxz
gs
cmc
dec
clc
mov
xchg
rcll
jmp
push
add
and
sub
add
inc
iret
push
popa
lret
mov
pusha
dec
stc
pop
inc
adc
xchg
mov
lods
fxch
inc
les
insb
or
push
or
imul
imul
loop
arpl
sub
repnz
fsubr
xor
jne
mov
push
and
add
addl
shrl
mov
mov
push
and
cmp
daa
or
cwtl
mov
mov
dec
inc
adc
gs
adc
shl
pop
sub
jns
fcoml
mov
xchg
dec
imul
in
and
cltd
mov
mov
js
xchg
or
sub
fsts
cs
adc
insl
inc
xchg
sub
rcrl
xchg
jbe
ja
mov
scas
xchg
xchg
push
ljmp
inc
out
std
imul
xchg
int3
insb
jae
pop
xlat
adc
xchg
pop
mov
js
test
mov
loopne
clc
fnstcw
or
pop
fsubrl
mov
sub
push
push
adc
out
cmpsl
pusha
xor
dec
stc
addb
cmp
sbb
mov
mov
mov
push
ficomps
lret
push
stos
mov
hlt
leave
in
lods
mov
jns
movsb
out
stos
enter
lret
es
or
cwtl
lods
rcll
mov
cmc
ds
xor
mov
or
lret
test
adc
inc
lret
aam
jl
enter
adcb
mull
xchg
outsl
jecxz
ss
cmp
mov
cmp
out
lds
sub
push
pop
jl
add
out
cmp
lods
pop
lret
mulb
out
pop
cmp
push
fidivrs
les
sub
fwait
or
subl
outsb
push
mov
daa
cmp
xchg
xor
inc
sbb
inc
shrb
push
jo
sbb
stc
mov
xchg
xor
sub
sbb
outsb
xchg
incb
mov
loope
in
out
subb
ret
nop
loope
mov
out
mov
out
test
xchg
mov
test
sub
xchg
dec
dec
test
scas
pop
roll
lds
cli
pop
or
dec
jb,pt
mov
fbstp
and
arpl
and
pushf
aas
xchg
sahf
or
and
xor
ret
lret
sub
insb
cltd
mov
es
insl
and
stc
out
xchg
gs
push
xchg
and
sbb
mov
sub
dec
mov
cmp
sub
shlb
cmpsb
jle
xchg
jbe
cltd
lods
inc
inc
clc
aam
xchg
int3
sbb
mov
cli
cmp
mov
push
scas
testl
jmp
out
call
push
iret
mov
call
pop
cwtl
push
cmp
sbb
mov
sbb
mov
bound
jecxz
mov
idiv
das
adc
inc
push
out
pop
push
adc
enter
scas
scas
in
les
je
push
dec
shrb
adc
mov
ffree
lret
and
or
cmp
test
mov
bound
jmp
jbe
ja
out
sub
in
mov
and
or
popf
dec
psrld
subl
scas
add
xchg
movsl
stos
lds
mov
inc
std
and
or
lcall
adc
mov
mov
stos
dec
movsl
mov
clc
popa
lods
leave
cwtl
orb
outsb
shr
repz
popf
push
mov
push
pop
cmc
xchg
or
pop
jge
call
pop
sbb
repnz
into
xor
jg
and
movsl
orl
push
ret
cmp
bound
xor
xor
and
sbb
test
sahf
test
sbb
icebp
sbb
repnz
aaa
fwait
add
or
mov
lea
addb
mov
pop
mov
or
and
pop
adcl
dec
or
outsl
jg
mov
pop
jns
xor
add
inc
xchg
add
cmp
mov
pop
mov
repz
scas
push
lds
and
sub
fwait
add
iret
add
push
loopne
mov
xchg
jecxz
je
ljmp
and
xlat
sahf
bound
sti
adc
dec
clc
lret
inc
lods
sub
loopne
sbb
push
out
imul
jp
jo
inc
mov
ret
and
and
fwait
or
cmp
mov
loope
ja
roll
je
sbb
mov
mov
xchg
jne
sbb
adc
in
lods
rorl
leave
fnsave
adc
jb
jno
ret
xchg
sbb
xchg
addr16
lds
cmp
mov
dec
pop
sub
in
adc
xor
jo
in
mov
cmp
lret
inc
and
dec
stos
pop
mov
scas
mov
jp
adc
jbe
popf
cmc
or
dec
push
inc
push
lods
push
std
adc
xor
fsubrl
or
inc
aam
push
lods
addr16
pop
inc
adc
lcall
shll
jp
aad
mov
jmp
or
or
mov
cltd
add
xor
int3
fcomps
add
pop
mov
pop
dec
push
dec
data16
mov
stos
push
pop
sbb
push
dec
es
sub
cmp
movsl
shrb
loop
jo
jo
out
inc
mov
mov
xor
jb
outsb
cltd
xlat
inc
sub
ds
ret
lock
shll
xchg
lods
mov
call
arpl
inc
aaa
pusha
pop
fcmovb
pop
push
mov
mov
rcrl
arpl
stc
jg
xor
in
test
imul
leave
mov
mov
sbb
pop
insl
jnp
lahf
rcll
pusha
xlat
sbb
push
xor
shlb
push
insl
dec
insb
jl
mov
xor
stos
mov
sbb
push
push
push
repz
jbe
jno
int
pop
jmp
lock
cli
xchg
imulb
xor
jns
lods
push
and
add
pop
icebp
adc
or
hlt
mov
fildll
xchg
or
div
test
mov
add
cmc
into
out
adc
mov
push
ret
sbb
lcall
adc
scas
enter
stc
jbe
in
jbe
mov
fisubrs
clc
jnp
add
mov
test
out
rcrl
inc
hlt
sbb
jmp
push
dec
lret
fcmovnb
mov
scas
add
int3
and
insb
inc
scas
shlb
cmp
dec
bound
inc
cmp
cmc
ficoms
jg
ret
xchg
add
in
mov
fwait
int3
imul
mov
cld
jmp
ljmp
aad
mov
js
mov
sarb
dec
xlat
sub
xor
movsl
ljmp
imul
std
mov
add
jnp
call
inc
xor
inc
push
ljmp
cmpb
mov
dec
push
shr
jg
jae
jo
loopne
or
arpl
mov
imul
cmp
nop
stos
dec
ss
jmp
outsb
cltd
sahf
adc
cs
push
mov
daa
xor
sub
jmp
inc
stos
fsubrs
fbstp
arpl
es
sbb
adc
push
add
xor
or
rclb
sbb
push
fdivs
int
mov
daa
mov
adc
stos
lea
gs
jno
push
mov
orl
xlat
ficompl
sbb
xor
jle
inc
loope
mov
sti
loopne
fsubl
or
mov
jo
in
cmp
or
jno
stos
mov
movsl
ljmp
cmc
ljmp
jne
aad
mov
push
pop
dec
cmp
jg
jns
das
mov
into
lcall
out
adc
push
divb
cmp
dec
mov
add
jmp
repnz
push
and
cmp
nop
adc
sub
inc
inc
in
bound
shrb
enter
mov
mov
js
adc
mov
cmpb
cmpsb
push
rorb
and
leave
dec
ja
lds
test
adc
mov
sbb
scas
call
inc
cwtl
ret
and
add
xchg
pop
sbbl
dec
call
aam
xor
xchg
mov
mov
sbb
inc
pusha
repnz
inc
test
push
data16
push
outsb
lods
addr16
adc
xor
cmp
adc
pusha
xlat
pop
cmpsb
out
fs
xor
cmp
xchg
push
fsubrl
mov
and
fwait
aas
clc
ja
push
xor
mov
add
jns
leave
mov
dec
push
das
push
scas
xchg
jl
cwtl
scas
mov
inc
jp
lcall
movsb
cwtl
jl
mov
add
xchg
push
in
test
cld
mov
es
mov
jp
xchg
inc
push
or
xchg
xor
pop
outsl
add
fs
mov
fisttps
jge
jb
push
push
mov
push
adc
cld
push
sub
in
fcmovb
shlw
out
cmp
cwtl
jp
dec
dec
dec
roll
dec
test
lret
lock
sbb
in
push
fstps
popf
jg
loop
aaa
testl
cmp
and
push
lea
sbbl
std
cmp
out
jmp
cmp
jle
ja
dec
mov
out
fisttpl
mov
inc
repz
push
push
popa
xlat
sub
outsl
leave
and
mov
mov
es
dec
jno
aad
push
xchg
das
push
dec
rorb
jmp
das
mov
cmp
into
sti
ret
or
sub
dec
xchg
push
addr16
test
mov
and
insl
incl
inc
sub
es
mov
imulb
mov
mov
add
inc
lahf
enter
imul
subb
push
pop
mov
pop
in
andb
loope
push
or
out
jno
aad
lea
stc
xor
xchg
stos
scas
mov
add
fbld
push
sub
ds
or
adc
cwtl
gs
jmp
sbb
jecxz
xchg
cmp
lods
push
cltd
add
mov
mov
sbb
outsl
xchg
mov
adc
push
jg
push
insl
inc
out
and
sti
pop
pop
ljmp
push
xor
imul
pop
xor
or
outsb
out
sbb
mov
push
shr
insb
sarl
and
movsb
and
je
mov
sahf
inc
push
push
mov
repz
dec
dec
jo
sbb
jae
cltd
cmp
jae,pn
movsb
pop
and
movsl
inc
ret
outsb
add
inc
sbb
mov
test
xor
out
inc
inc
ja
and
xor
ret
mov
xchg
dec
jl
sbb
aaa
sbb
pop
lods
lods
xchg
pop
cmp
or
xor
lods
jecxz
jl
adc
sub
ret
stc
pop
repnz
scas
in
out
adc
fsts
sub
pop
jg
test
xchg
xchg
mov
jns
in
ficompl
das
or
jo
sub
mov
in
and
xchg
mov
loopne
mov
mov
jp
pushf
movsl
hlt
adc
or
mov
int3
xchg
jle
aaa
stc
and
xchg
test
stc
dec
jp
inc
imul
sbb
mov
jmp
jns
int3
sbb
mov
imul
sti
out
inc
imulb
lret
addl
in
sbb
cmpsl
stc
enter
cltd
xor
mov
dec
adc
arpl
add
popf
pop
xor
xchg
inc
testl
jecxz
std
jle
clc
jp
int
add
insb
ficoml
cmc
xor
sbb
mov
push
lret
push
dec
push
dec
in
loop
dec
dec
inc
fsub
loope
int
or
push
fucomp
popa
or
mov
aaa
inc
push
push
addr16
iret
call
pop
fwait
push
lcall
insl
dec
in
les
mov
xor
xor
sahf
pusha
pop
pop
mov
stc
jb
or
mov
test
mov
in
inc
jo
adc
js
lock
pushf
or
movsb
movsb
mov
cmp
pop
icebp
push
adc
sbb
insb
cmp
insb
or
mov
mov
cwtl
sbb
add
mov
jle
gs
mov
push
aaa
fisubl
mov
and
and
nop
sbb
les
mov
loopne
test
rcrl
lret
fistpl
mov
inc
or
xchg
mov
rcl
or
jo
adc
xchg
inc
xchg
addr16
dec
inc
in
jns
jns
test
ret
cmc
or
pop
or
adc
ror
adc
mov
outsl
cmp
lret
jg
add
add
imul
mov
or
jg,pt
std
iret
sbb
xor
lods
loop
sub
fidivrs
mov
lret
es
mov
mov
int3
ret
dec
mov
rol
sbb
fiadds
loopne
test
mov
sub
xchg
sbb
push
addr16
mov
adc
inc
loop
mov
sub
mov
test
adc
js
lock
add
mov
push
or
jge
out
cli
sub
add
mov
push
addr16
jb
pop
mov
cli
nop
mov
cmp
push
addr16
sarb
mov
call
imul
inc
or
in
inc
loopne
movsb
lret
pop
loop
aam
cmp
jno
xor
nop
mov
pop
dec
mov
mov
jle
aam
das
popf
hlt
dec
dec
iret
sub
push
sbb
cmp
sub
inc
mov
mov
sub
out
test
dec
xor
sbb
xchg
xor
cltd
mov
in
push
int
add
dec
add
daa
fisttpl
gs
jg
ljmp
jecxz
xchg
out
cmp
pop
fcmove
in
dec
and
cmp
repz
push
iret
aas
jg
inc
pop
inc
scas
dec
xor
inc
push
pop
inc
adc
and
sub
stos
hlt
loop
repz
push
addr16
test
cmp
sbb
cs
mov
movsb
int
lahf
fwait
les
test
aas
dec
push
cmp
dec
stc
cmp
push
mov
lahf
lret
inc
jecxz
mov
bound
sub
stos
push
push
sbb
mov
loope
dec
push
dec
jl
lcall
nop
or
xorl
scas
lret
nop
jmp
mov
call
sbb
pop
mov
push
jne
nop
xor
lods
mov
xchg
xchg
pop
orl
add
loope
cmp
xchg
ret
push
sub
xor
test
xor
rcr
xchg
lret
sub
push
push
pop
lea
add
jne
imul
inc
pop
push
dec
flds
shll
iret
pop
mov
lea
inc
test
fisubl
das
addr16
jl
xchg
push
xchg
jnp
int3
mov
insl
call
jb
outsl
fistpl
inc
mov
xor
dec
sbb
add
jbe
pushf
data16
mov
test
movsl
loop
cli
fsubs
rcl
nop
movsb
icebp
pop
cmp
lcall
imul
add
pop
push
sub
rcrb
jecxz
cmpsl
js
jmp
mov
adc
push
mov
or
lea
jmp
stc
pop
mov
push
out
cmpsl
push
aad
outsb
lods
sahf
cmp
mov
mov
adc
imul
cld
insb
adc
rcr
in
repnz
hlt
jno
jle
xor
add
jecxz
sbb
push
mov
into
cs
jecxz
ficomps
leave
cltd
insl
out
push
push
call
fbstp
inc
xor
lock
test
loope
mov
jae
lret
pop
test
insb
adc
in
push
push
xor
ss
add
sub
mov
pop
decl
jno
iret
add
dec
jecxz
cld
bswap
fdivl
in
pop
je
shll
iret
dec
out
mov
push
lcall
rcr
cmp
adcb
inc
std
iret
mov
insl
shrb
or
cmp
jne
incl
sub
cmp
in
mov
sbb
xor
cwtl
lcall
push
xchg
mov
dec
cs
sub
pop
shll
inc
xchg
out
sbb
dec
movsl
inc
repz
test
and
mov
mov
jbe
movsb
shrd
pop
addb
mov
mov
push
loope
sbb
mov
or
xor
push
ds
ret
inc
int3
int
pop
ljmp
out
arpl
jecxz
push
or
movsl
out
js
in
fidivrl
dec
push
push
adc
aam
ret
jb
movsl
adc
andl
mov
mov
inc
std
fisttpll
pop
xchg
add
in
jae
imul
ret
lea
pop
xchg
ret
push
aas
jb
or
aaa
cmc
push
sbb
bound
push
mov
xchg
jl
insb
jl
mov
pushfw
out
sub
xlat
lret
or
pop
jl
push
fdivrp
mov
and
call
inc
es
xor
clc
add
mov
je
inc
push
je
xchg
mov
pusha
xchg
mov
mull
mov
push
inc
jge
std
hlt
aaa
inc
adc
jo
push
lods
popa
pop
mov
dec
adc
ss
mov
push
pop
pop
xor
into
dec
test
xor
sbb
into
call
mov
fwait
push
jle
shrb
cld
jo
cltd
ljmp
out
popf
lods
push
test
pusha
jne
dec
rcl
dec
cmp
ja
xabort
adc
and
std
mov
in
ss
cld
cmp
enter
in
outsb
ret
mov
jecxz
pop
or
dec
aad
mov
jg
ds
ja
lret
adc
pop
add
dec
and
adc
shll
adc
jmp
js
andb
fimuls
or
mov
dec
push
orl
sbb
push
jecxz
push
lods
sub
mov
lods
pop
imul
lods
orl
sbb
cmc
cs
dec
xchg
mov
fs
cmc
movsl
or
test
and
cmp
repz
adc
xor
mov
sbb
sbb
sti
mov
cmc
movsl
jnp
sbb
push
jb
pop
xchg
xor
xor
mov
mov
add
push
in
sbb
jmp
xchg
add
mov
mov
dec
push
stc
xor
xor
jl
femms
mov
les
test
xchg
xchg
mov
mov
or
and
dec
and
xchg
lods
xor
jbe
sbb
lret
push
xor
lods
cmp
std
add
mov
inc
cmp
lret
das
xchg
sahf
cmpsl
out
xchg
jne
fs
aam
cmp
dec
imul
out
jnp
out
stos
pop
test
xchg
jno
pop
popa
push
test
enter
sub
sbb
dec
jb
dec
jmp
mov
hlt
jmp
aad
test
mov
or
mov
inc
fadd
mulb
arpl
xor
lret
mov
pushf
in
sub
enter
and
xchg
ljmp
xchg
stos
insl
out
mov
push
jnp
les
and
mov
or
jecxz
jae
out
cltd
scas
mov
loopne
imul
aam
cmc
arpl
or
loop
and
int3
in
mov
rorb
mov
push
xchg
je
adc
stos
mov
mov
sub
mov
add
push
xchg
neg
stos
inc
inc
mov
or
in
inc
or
or
popf
fbstp
pop
sahf
imul
push
ds
clc
xchg
xlat
ret
xorl
stos
mov
je
stos
int3
ret
mov
and
out
test
cli
lret
adc
lahf
push
add
lret
push
cmp
les
push
cmp
xchg
inc
add
clc
mov
pop
testl
ja
pop
pop
test
aad
lods
xor
popf
shlb
adc
pop
cmp
jl
sbb
mov
mov
xchg
sahf
imul
fs
mov
fisttps
mov
sahf
ja
add
mov
sub
push
push
fmul
pop
je
dec
mov
push
insl
and
ja
mov
das
sub
mov
pop
js
stos
icebp
dec
mov
dec
aam
sub
adc
push
xchg
ja
testb
roll
push
inc
lods
and
orb
sub
movsl
cwtl
fcoml
jnp
cmc
or
aad
cld
mov
fs
out
dec
mov
pushf
arpl
sbb
sarl
mov
inc
dec
addl
ret
into
sub
popa
fidivrs
fwait
xor
les
rol
dec
sub
push
out
xchg
push
out
imul
inc
cmc
or
fucomp
inc
shl
shl
xor
insl
cmp
fimull
out
stc
pop
push
fsts
cmc
setnp
mov
leave
adcl
pushf
out
scas
jno
cwtl
out
and
adc
cli
ret
pop
arpl
mov
mov
sub
inc
and
jne
dec
call
lret
dec
sbb
sahf
adc
or
and
call
fdivrs
add
jcxz
sbb
sub
xchg
sbb
sahf
lcall
arpl
sbb
fdiv
lret
and
jg
xlat
inc
sub
inc
dec
or
daa
mov
ljmp
mov
and
cwtl
cs
push
add
in
mov
and
jle
jne
mov
andb
and
push
pop
mov
sub
dec
ss
enter
pop
or
les
insb
insb
lcall
mov
ds
inc
std
into
sahf
fbstp
test
mov
stos
sbb
std
jge
mov
icebp
aam
loopne
jbe
dec
mov
stc
movsb
ficoms
jmp
xchg
test
test
inc
lcall
xchg
sbb
cld
insl
loop
mov
in
mov
sbb
mov
xor
lods
stos
fcomi
testb
inc
pop
sbb
mov
sbb
lahf
mov
fs
add
bound
add
mov
xor
add
mov
cli
loop
lock
jns
dec
test
repz
adc
stos
mov
sbb
out
mov
lock
inc
lds
icebp
adc
xorl
stc
idivb
pop
ret
xchg
das
adc
in
adc
imul
ret
add
or
xor
xchg
adc
rcll
cs
push
and
aad
scas
scas
jne
ss
mov
and
mov
dec
push
sbb
cmp
push
sbb
mov
mov
fwait
xchg
xor
icebp
mov
test
out
ds
enter
mov
inc
adc
xor
out
cs
push
mov
adc
xchg
lahf
ja
jae
andb
daa
jne
sbb
adc
dec
xchg
cld
sub
in
lods
sarb
icebp
adc
dec
or
outsb
pushf
pop
jmp
jne
movsl
stos
pop
out
subb
imul
mov
inc
insb
push
xchg
inc
jno
ss
xchg
inc
dec
sbb
jb
xor
mov
lods
push
mov
fiaddl
mov
xchg
arpl
mov
cmp
push
sub
cmp
popf
add
cmp
sbb
add
test
mov
gs
nop
test
push
inc
adc
dec
sarl
divb
or
dec
adcb
sti
pop
inc
add
jo
fidivrl
dec
iret
insb
lcall
mov
xchg
mov
repz
mov
or
jns
mov
lahf
pop
xchg
push
inc
aas
stos
aam
icebp
hlt
adc
ret
xorb
testb
sub
arpl
sbb
ficomps
push
insl
testl
mov
cli
mov
pop
outsl
jg
sbbl
sub
jne
rol
xor
mov
aad
inc
mov
push
xchg
in
imul
fs
jmp
inc
pushf
scas
or
pop
jmp
cmp
fscale
dec
jo
cmpsl
cmp
lds
dec
and
daa
fmulp
pop
mov
cmpl
jo
sub
bound
loopne
cs
repnz
imul
jae
sub
push
movsl
sub
subb
cmp
fldt
jl
or
notb
add
out
add
mov
pop
bound
lock
cmpb
sahf
push
xor
or
mov
mov
dec
mov
xchg
mov
xchg
adc
sti
mulb
push
mov
shll
cmp
leave
popa
pop
sub
sub
outsl
imul
int
jnp
cmc
fwait
stc
je
add
fdiv
stos
jg
adc
lahf
movsb
sub
sti
jb
pop
dec
jnp
pop
xchg
and
popa
cmp
popa
cmp
stc
lock
test
xchg
jne
mov
repz
or
nop
xchg
lahf
cs
adc
xlat
ja
fst
faddl
imul
insl
push
xchg
inc
cmp
inc
sbb
movsb
xchg
sbb
loop
xchg
aad
push
sarb
adc
mov
jnp
fwait
stos
out
mov
sub
cmpsl
pop
push
sbb
dec
stos
icebp
js
sbb
in
inc
and
outsb
add
mov
inc
jmp
stc
mov
mov
sub
aaa
je
outsb
and
xchg
add
dec
pop
push
mov
das
ss
dec
mov
jmp
idivb
out
inc
dec
add
in
dec
mov
movsl
roll
inc
jo
jmp
mov
add
xchg
scas
mov
test
or
mov
inc
imul
xchg
aaa
inc
pop
imul
xor
mov
add
dec
jbe
push
movsb
mov
xchg
push
popa
pusha
jmp
loop
nop
jb
scas
dec
cltd
mov
and
iret
incb
bound
jmp
aad
test
outsb
jle
jmp
pusha
pusha
inc
pop
fdivr
jno
in
push
in
mov
add
fcmovnb
adc
imul
adcb
dec
outsl
cmp
clc
sub
jo
stos
mov
xorl
stos
dec
and
jne
cmc
add
lret
or
xchg
mov
mov
int3
out
sub
jle
jns
mov
cli
aaa
divl
pop
cmpsb
das
inc
pop
xchg
ret
pop
or
pushf
adc
and
cmp
outsb
stos
sub
les
lcall
out
pop
mov
out
lret
dec
inc
pop
lods
paddusw
sub
jne
and
jae
cmp
fwait
add
cld
cwtl
mov
sub
mov
int3
and
push
pop
dec
sbb
jnp
cld
inc
subl
dec
jo
notb
in
out
inc
dec
imulb
adc
xchg
lret
lret
or
inc
rolb
pusha
nop
rolb
rorl
cmp
add
or
ljmp
popa
push
js
cmp
sbb
add
jbe
movsb
add
jae
push
xor
ret
clc
add
jns
les
movsb
inc
jb,pt
outsl
mov
pushf
sbb
lahf
call
jmp
fs
jo
fcmovu
sbb
sub
dec
imul
cltd
jnp
add
jae
mov
dec
sub
or
xor
mov
xor
pop
and
dec
mov
pop
int
std
cmp
popa
arpl
pop
dec
xchg
int
mov
dec
jne
inc
xchg
cmpsl
or
lret
je
inc
dec
and
test
mov
repnz
movsl
sahf
xchg
inc
cmp
dec
dec
xor
jecxz
mov
xor
aaa
jge
xchg
popa
addb
sti
cmpsl
lahf
xor
mov
pop
popf
popa
jecxz
call
cmc
and
pop
iret
ficoms
insl
les
jg
jl
loopne
out
in
pop
in
fs
js
rolb
push
mov
xchg
fld
iret
jge
iret
outsb
call
dec
sbb
add
das
push
push
iret
inc
sbb
sbb
fadds
icebp
jbe
lock
adc
sbb
aad
mov
push
jbe
cli
hlt
rcll
mov
or
stc
popf
pusha
jbe
xchg
inc
out
mov
xchg
testl
and
lds
movb
and
push
inc
inc
or
js
mov
lock
mov
ljmp
sub
mov
mov
jnp
and
jnp
rcrb
lea
sbb
mov
mov
xor
mov
mov
sbb
mov
loopne
xchg
pop
or
insb
lcall
mov
pop
mov
gs
and
xorb
inc
jnp
bound
jnp
cli
sbb
pop
push
push
enter
or
dec
adcl
jns
mov
jecxz
cs
out
loopne
movsl
jo
push
jo
mov
frstor
add
inc
xchg
inc
ja
sub
enter
mov
adc
jo
stos
mov
outsb
lret
cmp
jl
jno
aad
in
inc
or
cmp
addb
lcall
xor
or
enter
cmp
orl
xchg
jnp
outsb
pushaw
ret
push
icebp
bndldx
add
jge
in
dec
hlt
dec
stc
aad
int
push
sub
mov
sahf
aam
movsb
cmp
mov
push
into
out
mov
cmp
fcomip
daa
bound
clc
mov
stos
cmp
mov
out
mov
insb
sarb
or
inc
mov
sub
or
popf
adcl
fsubs
xchg
inc
daa
fidivrl
into
mov
xor
outsl
sbb
sar
enter
out
ficoml
mov
jg
mov
shl
fs
cmp
scas
push
outsl
dec
out
adc
mov
or
daa
ja
das
in
fstpt
cltd
lahf
sub
neg
out
dec
std
loop
fldenv
jecxz
testb
push
mov
movsb
xlat
icebp
cmp
push
sahf
or
mov
lea
lea
enter
push
push
in
or
mov
pop
bound
in
pushf
xchg
out
xchg
fisubrl
mov
mov
pop
das
mov
fildl
jecxz
mov
dec
dec
outsl
ret
mov
cmp
aam
ss
push
inc
les
fistps
cwtl
and
movsb
into
dec
daa
dec
inc
jl
add
sub
cmpsl
xchg
jg
add
shrb
lods
iret
jecxz
lea
ss
pop
pop
sahf
jg
mov
fldt
hlt
cmp
mov
add
sar
cs
data16
ljmp
int3
adc
in
mov
es
inc
das
dec
sub
mov
mov
or
dec
mov
sahf
std
cld
inc
lea
enter
xchg
cmp
dec
adc
mov
mov
xchg
sbb
into
rolb
jnp
or
popf
mov
sbb
ret
sbb
and
mov
rcl
jle
insb
xorb
loope
or
or
cmp
test
sbb
js
mov
std
movzwl
lods
jg
lods
pop
mov
or
mov
shr
cmpsb
pop
inc
cmpsl
jge,pt
sub
jmp
push
xor
jbe
iret
xchg
clc
imul
add
fsubl
loope
jge
inc
mov
adc
int
iret
mov
popa
cmpsb
mov
mov
sub
std
or
add
push
mov
clc
int3
ja
xchg
shll
rclb
ret
sbb
cmp
jle
gs
xchg
mov
lahf
mov
mov
dec
mov
in
push
dec
cmpsl
gs
fstpl
lods
roll
call
aad
cmc
daa
push
mov
jno
adc
push
mov
or
aaa
jl
mov
hlt
jecxz
fwait
aad
outsl
icebp
les
fcompl
push
pop
ds
sti
xchg
and
dec
xor
fwait
push
add
or
jb
jno
and
mov
ret
push
mov
inc
mov
aas
movsb
inc
out
dec
cmpsb
test
lahf
out
popf
addr16
ffreep
cmp
pusha
lock
dec
sub
or
jnp
sbb
or
mov
sub
scas
pop
ljmp
mov
add
in
and
jbe
adc
jo
cmp
push
mov
mov
push
sbb
xchg
into
clc
or
mov
test
imul
lret
stc
sub
stc
sub
in
imul
pusha
xor
push
lcall
push
sbb
dec
lahf
pop
mov
fisubs
mov
and
lds
inc
aam
xchg
adc
aaa
add
test
jno
in
push
mov
fcomip
sbb
mov
or
sahf
cs
pop
faddp
fidivrs
idivb
test
cmp
mov
popf
imul
cmp
mov
shrl
aam
cli
out
pop
adc
in
dec
lahf
popf
loope
cld
pusha
jns
add
ret
mov
cmp
or
lea
movsb
pop
fisttpll
xor
mov
jp
or
data16
std
pop
cmp
movsl
xchg
movsl
and
inc
mov
push
jns
jb
ja
add
mov
fstpl
add
hlt
mov
and
sbb
lods
lcall
push
outsl
inc
call
decb
repnz
jno
push
add
mov
imul
hlt
loop,pt
mov
das
stos
mov
scas
jmp
push
mov
pop
mov
hlt
leave
addr16
lahf
dec
sbb
jge
sub
and
jae
mov
cmpsl
mov
es
pusha
pmaxub
leave
cltd
mov
addr16
sahf
fstp
or
stc
int3
cld
scas
mov
data16
dec
insb
jae
cld
lea
faddl
mov
jg
mov
jecxz
mov
add
insl
cmp
adc
mov
mov
dec
das
imul
shlb
je
ret
lret
nop
jbe
jb
mov
aam
cmp
mov
add
inc
mov
loopne
fnstcw
mov
arpl
mov
dec
daa
pop
or
rclb
add
push
in
out
push
or
clc
mov
push
fbstp
hlt
mov
mov
fisubrl
inc
mov
sub
pop
cld
dec
cli
mov
xchg
cmc
outsl
outsl
lahf
sbb
fldt
popa
xchg
nop
or
xor
pop
int3
xor
ret
ss
inc
cltd
xchg
push
rclb
pop
xchg
xorl
in
jle
daa
xchg
mov
dec
das
jmp
arpl
jl
cmp
test
fistps
cwtl
jne
repz
xor
sub
shll
xor
popf
nop
movb
dec
iret
out
lahf
es
lret
sbb
pop
mov
inc
inc
rorb
scas
push
pop
ficoms
push
mulb
aam
std
adc
push
aas
mov
push
push
leave
add
fwait
add
cmp
movsl
imul
sub
nop
mov
mov
aaa
mov
sbb
popa
mov
dec
cld
jl
js
inc
sbb
jno
dec
adc
int3
mov
sbb
and
pop
aam
adc
cmpsb
add
out
std
or
inc
inc
das
or
leave
push
push
xor
inc
mov
mov
xor
jno
lea
incb
outsl
sub
pop
cs
mov
pop
std
ja
push
mov
iret
and
push
aad
ret
nop
adcl
jle
lret
wbinvd
pop
and
aam
rcrb
pop
les
or
sub
mov
mov
push
push
ds
pop
in
mov
xor
xchg
mov
cmp
or
push
jge
ret
int
mov
pop
aad
sub
fs
jnp
add
shr
jg
sti
xchg
jnp
test
clc
jmp
cmp
xor
sarl
dec
and
cmpsb
mov
pop
sub
bnd
pop
jge
jmp
pop
call
mov
es
call
sub
dec
lret
xor
ja
addr16
test
leave
or
pusha
xor
inc
shlb
andl
into
mov
jne
pushf
dec
lods
shll
arpl
sub
xor
xchg
sbb
sub
lret
push
in
dec
scas
cmp
faddl
xchg
dec
mov
push
sub
repnz
stos
mov
dec
inc
push
lret
div
xchg
imul
xor
shll
push
push
es
add
inc
inc
sub
add
mov
cltd
fnstsw
cmp
cmp
shlb
sbb
xchg
pop
lea
loopne
xchg
mov
gs
dec
fwait
and
pop
hlt
mov
fadd
gs
push
shlb
divb
in
and
jmp
lret
jno
outsb
cmp
mov
stos
out
in
jge
pop
ljmp
push
incb
mov
out
sbb
cmp
jmp
lahf
jnp
ljmp
outsl
pop
cli
cmp
and
stos
ss
pop
stos
dec
push
ret
ja
cmp
popf
sub
sub
call
arpl
std
push
xor
add
data16
aad
lock
movsb
xor
imul
mov
lahf
sbb
xchg
bound
xor
jmp
stos
jbe
push
rorl
fmulp
cmp
inc
mov
insb
or
ds
int3
cmp
imul
in
mov
adc
or
cmc
movsl
adc
or
pop
add
jmp
shlb
sub
push
aam
aas
mov
dec
mov
cli
adc
in
dec
sub
clc
cmpsb
add
dec
dec
test
push
xchg
notl
sub
es
mov
push
cmp
pop
xchg
sub
xchg
shll
mov
fs
inc
mov
pop
orl
mov
sub
aaa
mov
stos
outsl
push
xor
dec
ss
xlat
mov
scas
arpl
inc
pop
xchg
dec
pop
inc
jb
stos
mov
xchg
xchg
pop
and
aaa
rorl
mov
mov
roll
fsubr
add
leave
or
cs
xlat
in
data16
mov
sti
icebp
and
dec
sti
rorl
jle
push
lcall
call
push
sub
jb
aaa
sub
cmp
sub
jge
jne
mov
jns
mov
rcrl
movsl
aaa
mov
ret
sbb
out
repz
cmp
add
cmp
push
mov
in
push
pusha
push
fs
out
push
and
test
cmpsb
daa
loop
test
pushf
mov
loopne
push
cltd
push
cmpsl
and
test
popf
sbb
repz
adc
shll
adc
scas
push
daa
mov
pop
repnz
dec
pushf
sub
fprem
and
pop
pop
xchg
push
xchg
aad
lcall
fstps
sahf
cmpb
xor
outsb
xor
es
es
stos
enter
dec
aas
dec
push
dec
insl
push
fbstp
lds
imul
mov
dec
jp
mov
add
in
mov
pop
clc
cld
jne
cld
call
aad
mov
dec
push
jno,pt
cmp
stc
mov
jb
inc
popa
and
adc
addr16
and
jno
xchg
rcll
fimuls
fiadds
lods
dec
adc
mov
stos
hlt
pop
xchg
std
or
aaa
loop
and
jno
std
arpl
xchg
jl
mov
popf
sahf
fwait
leave
jno
cs
test
sbb
mov
rorl
dec
out
fnstcw
adcb
icebp
insl
cmp
sub
icebp
repnz
psrad
ja
js
cmp
fnstenv
inc
cwtl
in
es
cmp
xchg
sub
js
mov
or
xchg
sar
jmp
push
in
push
xor
cmc
pop
int
jno
outsb
shl
push
scas
inc
lea
ret
ret
push
inc
ficompl
pop
dec
addr16
aaa
add
xchg
repz
cs
loopne
mov
sub
out
jge
or
push
popa
iret
lahf
dec
ret
push
mov
mov
mov
leave
sub
cld
sbb
cmp
enter
dec
hlt
sar
leave
jne
das
imul
dec
push
es
repnz
fldenv
lea
test
dec
pop
les
popf
std
frstor
jge
mov
sbb
ljmp
push
js
adc
mov
inc
push
sbb
xchg
jbe
nop
jge
daa
aaa
cmpsb
mov
add
xor
test
aaa
adc
mov
mov
movsb
stc
gs
fists
sbbl
loop
punpckhwd
cmpsl
jg
adc
mov
mov
test
push
mov
jl
mull
jmp
and
shr
or
and
mov
hlt
movsl
and
das
add
fldl
pop
mov
sti
lds
xor
jecxz
cwtl
lahf
mov
sarb
enter
or
aas
ds
fwait
xchg
pusha
lods
push
pop
add
arpl
cmp
add
outsb
pop
ja
lock
icebp
and
pop
rolb
dec
pop
jge
orb
and
mov
jg
movsb
pop
andb
ficoms
popf
xor
out
cmp
jb
pop
mov
mov
jp
sbb
fildll
pushf
lods
das
pop
fdivr
jb
jg
dec
ret
dec
lock
cmpl
cmc
loope
pop
xchg
aad
stos
add
push
jns
stos
lods
sbb
mov
xchg
jno
adc
dec
sbb
jno
in
cmp
in
sbb
je
lds
mov
or
in
sbb
mov
inc
fdivrl
add
or
jmp
andl
icebp
or
mov
sub
xchg
aas
movb
fmul
mov
aas
sub
cmp
stc
sti
cli
out
mov
xor
sub
add
fs
push
fbstp
in
adc
inc
mull
ret
loopne
movsb
jb
add
test
out
dec
xchg
inc
inc
xor
out
sbb
aad
jle
add
icebp
aam
stos
out
dec
mov
es
inc
xor
cmpsl
pushl
mov
inc
js
sbb
les
sbb
xor
mov
xor
inc
stc
or
xchg
jnp
aam
dec
xor
test
hlt
mov
fs
add
jns
repz
lods
cmp
mov
loop
out
call
je
scas
dec
sub
sub
add
cmpb
lea
lods
mov
xor
push
mov
inc
lds
dec
inc
out
mov
iret
ja
cltd
fimuls
test
xchg
xor
ljmp
pop
repnz
sub
popa
adc
or
or
mov
mov
cld
sbb
fs
xor
faddl
mov
fldenv
stc
sub
enter
fs
mov
cmp
scas
ret
ret
mov
xchg
scas
insl
jno
cmpsb
xor
mov
loop
inc
mov
cli
mov
jmp
push
cmp
dec
inc
dec
or
loop
ret
xchg
adc
cmp
fisttpl
mov
sbb
dec
ja
xchg
dec
lock
jbe
testl
jae
ret
cmp
push
mov
movsl
mov
mov
movsl
daa
push
cmc
cmp
aad
popa
adc
xchg
pusha
jno
inc
inc
pop
imul
inc
jmp
pop
cmp
xor
shrb
int
out
aaa
mov
lds
cmp
xchg
add
pop
incl
sbb
inc
mulb
out
mov
jne
sub
inc
push
je
lea
adc
imul
and
test
sub
call
js
cmpsb
imul
pop
aad
inc
repz
sub
stos
adc
dec
movsl
iret
sbb
mov
aas
mov
lods
jae
rcr
dec
xlat
jo
testb
out
incb
xchg
dec
cltd
add
js
ret
shll
daa
aas
jo
jae
cld
popa
fstl
sub
test
push
jg
pop
cli
add
das
movsb
and
pop
lea
sub
xchg
mov
adc
enter
fsubrs
lods
fs
out
push
mov
and
stc
inc
sbb
push
mov
pop
fldcw
aad
out
sub
loop
test
mov
out
das
ds
outsl
push
shrb
fnstenv
loopne
fsubrl
jmp
jecxz
and
shll
mov
fs
bound
icebp
notb
lods
xor
mov
add
mov
push
leave
out
push
mov
stc
lods
add
jg
add
cmpsl
roll
rclb
pop
int
push
pop
jae
lret
mov
cli
aam
mov
and
outsl
dec
fistps
mov
shlb
rorl
nop
or
sbb
push
xor
jl
jne
sbb
xor
push
jmp
push
sub
xor
inc
cmpsb
divb
push
testl
mov
push
ljmp
push
pop
cmp
jle
sub
xchg
out
push
popf
xor
mov
cltd
and
ret
cltd
jg
inc
inc
xor
decl
call
or
pop
mov
inc
daa
fcomip
xchg
cmc
stc
loopne
icebp
repnz
and
cmp
sub
fldenv
sbb
lock
xor
pop
test
or
xor
int
mov
scas
cmp
fsubrs
fstpt
or
outsb
mov
mov
lock
xchg
xor
ret
int3
outsl
jecxz
lahf
outsl
inc
fisubrl
cmp
int3
cmc
jl
cmp
imul
cld
or
test
or
push
addr16
push
mov
mov
sub
jns
sbb
lods
in
orb
pop
push
add
jns
nop
cmpsb
inc
fsubs
cmp
or
jg
inc
mov
mov
mov
xor
maxps
jmp
mov
sti
jns
and
jl
int
fdivl
dec
jnp
leave
jmp
adc
mov
or
inc
pushf
fsubrs
sub
pop
outsb
ja
or
aaa
addb
mov
sbb
outsb
pushf
and
xchg
cltd
rcrl
dec
das
pop
loop
add
shlb
xor
movsl
aaa
popf
mov
xor
or
dec
xchg
int3
sbb
adc
sbb
fsubs
push
mov
rolb
add
xchg
adc
cs
mov
loop
xchg
cmp
cmp
pop
call
out
divb
xor
inc
mov
jle
sbb
and
scas
ds
ficoms
fdivrl
stos
jo
mov
pusha
iret
jns
js
push
and
fistl
fdivl
pop
daa
inc
and
jmp
lea
outsl
dec
test
xchg
mov
jnp
jae
stos
fadds
pop
mov
xor
dec
nop
lret
mov
and
add
sub
pop
repz
mov
adc
push
mov
pop
cmp
in
fcomp
jle
push
stos
rclb
and
dec
add
mov
jbe
and
mov
xorb
sbb
orl
test
dec
sub
cmp
pop
jnp
jecxz
mov
jo
mov
jmp
cli
ret
mov
push
ss
jnp
or
bound
mov
push
fsubp
or
inc
push
dec
sahf
push
jmp
xor
pop
in
scas
nop
xchg
sub
or
fldenv
mov
add
mov
insl
and
negl
xor
aaa
lds
mov
mov
cmp
sub
xor
sub
xchg
sub
movsb
cmp
addr16
stc
inc
cmp
xor
daa
cmp
cld
jns
jo
xchg
xchg
out
aas
shlb
jmp
mov
push
push
jns
xor
ret
add
mov
mov
mov
in
sbb
dec
das
int
xor
loope
fisubrs
adc
rcrb
movl
cmp
adc
movsb
mov
icebp
push
out
js
daa
mov
leave
pop
lods
cmp
push
rcrb
sahf
in
pop
pop
jo
in
pop
push
ss
cmc
sub
loope
popa
mov
sub
pop
push
out
scas
aas
dec
enter
push
ficompl
and
adc
fdivrs
xlat
addl
adc
nop
cld
test
shrl
insl
dec
mov
pop
dec
mov
xchg
mov
cmp
push
add
or
adc
aam
xchg
test
jb
rorl
sub
jmp
out
push
stos
sarb
int
add
jnp
push
xor
loopne
jb
adc
aad
test
dec
scas
mov
out
jb
incl
scas
addr16
xor
sub
fisttpl
cmpsl
popa
mov
inc
lods
sbbb
xor
cwtl
popf
dec
and
add
cmp
loop
cmc
add
out
ja
adcw
adc
push
pop
cmpsl
fstpt
lahf
mov
xchg
sub
cmp
lahf
stos
xlat
ret
and
push
add
int3
mov
sub
pusha
fs
imul
fbld
jno
iret
into
mov
push
inc
sbb
and
ret
xor
fisubrl
ljmp
add
push
jno
cmc
stc
sbb
cmp
push
or
aas
mov
and
xor
daa
mov
dec
add
scas
add
loopne
pop
icebp
adc
leave
sub
xchg
push
fcomps
leave
dec
xchg
mov
rclb
lahf
leave
adc
rorl
mov
jo
dec
or
loope
lds
or
sub
mov
push
sbb
in
push
insb
mov
or
out
stc
ficoms
or
push
cmp
sub
addr16
je
jg
bound
mov
outsl
icebp
inc
bnd
jno
mov
call
mov
push
stos
or
movsl
jnp
mov
jle
xor
push
add
subb
adc
pop
frstpm(287
and
lea
fldl
jo
aad
insl
push
ljmp
leave
or
in
xor
les
jp
add
aad
pop
jno
mov
les
jnp
int
mov
mov
lods
lret
adc
aam
es
cmpsb
mov
int3
and
sbb
and
test
cmpsb
iret
aam
mov
aad
and
cmp
sub
arpl
out
rolb
out
iret
popa
frstor
dec
xchg
rcl
ljmp
aam
mov
mov
mov
clc
xchg
mov
sbb
negl
push
push
std
adc
sub
mov
imul
movsb
add
jge
leave
mov
les
popf
stos
mov
cmp
imul
xor
mov
xchg
push
lret
add
mov
data16
and
mov
je
icebp
xor
cmp
cld
xor
and
push
and
xlat
cmp
adc
mov
je
xchg
inc
pop
xchg
lret
adc
sbb
mov
int
mov
shl
addr16
cmp
inc
data16
js
mov
scas
sbbb
adc
push
mov
add
int3
and
je
dec
ret
pusha
mov
ljmp
xor
loopne
xchg
and
lock
mov
add
jns
push
mov
sbb
add
lcall
sub
not
fwait
arpl
outsb
push
sub
sbb
xchg
mov
jno
pop
and
scas
movsb
aad
cli
pop
sub
or
mov
mov
dec
test
xor
inc
cmp
cmp
imul
out
js
and
mov
movntq
out
fdivrp
mov
fisttps
out
sub
pop
call
cmpsb
inc
gs
or
pop
test
sbb
xchg
dec
addb
insb
call
jb
into
inc
mov
loope
pop
jnp
sbb
mov
sub
dec
adc
push
test
aas
cmpsl
xchg
arpl
sbb
mov
lds
loopne
adc
inc
ret
lret
dec
dec
mov
jbe
rcrl
addr16
mov
mov
inc
xor
xlat
jns
push
das
inc
ljmp
mov
and
jle
fld
fdiv
pop
stos
test
push
push
rclb
xor
pop
adc
cmpsb
mov
in
lret
cltd
xchg
mov
stos
aas
or
insl
xorl
into
rcrl
or
lock
mov
adc
jnp
fistps
sub
xlat
ss
cmp
and
cwtl
in
inc
fimuls
xchg
sub
sbb
xchg
inc
xor
add
mov
out
pop
pop
sub
rcrb
popf
es
mov
pop
xchg
roll
ja
pusha
cmc
cmp
cli
or
mov
lods
add
xchg
bound
stos
loopne
cwtl
mov
fidivl
dec
jge
aam
pextrw
pop
mov
jbe
mov
movsl
mov
cmpsb
xor
sbb
sub
scas
shr
mov
cs
imul
push
mov
ret
sbb
add
cmpsl
ss
sbb
es
ds
imul
aaa
in
dec
mov
adc
into
pop
fcmovnbe
nop
scas
call
sbb
sbb
shlb
sub
xor
adc
movsl
jecxz
jo
and
fadds
add
push
add
pop
popf
mov
push
pop
rclb
add
lock
push
lods
mov
sub
movsl
xchg
popf
movb
pop
cmc
repz
outsl
fmull
aam
jle
jb
or
lahf
inc
je
divb
jg
negb
sahf
loopne
xor
stos
xor
aam
ljmp
into
jge
push
add
mov
and
scas
orl
add
mov
or
test
sbb
jmp
jmp
test
jle
inc
adc
shlb
ds
cmpsb
push
adc
stc
nop
cmp
xchg
and
pop
fdivl
fdivr
nop
repz
in
and
cmp
repnz
and
mov
dec
out
lret
cmpsb
faddl
dec
and
xchg
add
sub
inc
mov
ds
ret
inc
mov
xchg
xor
mov
shl
cltd
sti
mov
push
leave
mov
xlat
mov
shl
je
lret
inc
dec
sub
cld
insl
movsb
jno
pusha
loop
adc
jp
imul
cmp
push
and
leave
scas
mov
dec
xor
dec
and
add
jle
in
leave
popf
bound
add
sub
add
dec
int3
out
test
xchg
jae
imul
fimuls
das
lods
push
daa
push
lods
mov
xor
pop
jne
mov
call
jl
mov
cmp
push
insl
inc
inc
pop
push
andl
popa
call
jge
xchg
cwtl
jae
stos
jns
xchg
iret
push
lods
mov
and
mov
cmp
mov
pop
out
insl
int3
lahf
cmc
add
movsl
pusha
mov
lcall
xor
sub
jnp
sbb
imulb
cltd
aaa
fdivrs
mov
test
fistps
jl
xchg
push
and
test
ljmp
repz
jl
call
inc
rorb
inc
dec
cs
lret
mulb
pop
push
cwtl
cmp
hlt
orl
adc
dec
pop
xchg
jo,pn
xchg
adcl
mov
sub
dec
test
arpl
add
sbb
lcall
dec
xor
jns
pop
inc
outsl
stos
imull
loopne
adc
ret
mov
push
mov
add
mov
cli
adc
test
jp
rcll
cmp
jmp
xor
scas
sbb
shll
ljmp
or
add
aas
ja
lcall
in
lret
cmp
adc
mov
jne
dec
gs
adc
es
shrl
jo
inc
outsl
fs
dec
aas
mov
pop
fsubrl
pop
aaa
scas
outsb
clc
shrb
cli
sbb
adc
jmp
daa
xor
loop
into
imul
fs
fnstsw
inc
jp
imul
cmp
lret
hlt
int
push
and
pop
scas
jmp
sarb
dec
stos
in
int3
lds
loopne
inc
jo
stos
out
lds
push
pop
inc
aad
out
jl
movsl
xor
cmc
add
mov
jns
inc
xor
jbe
outsb
pop
aaa
mov
ret
fdivrl
mov
dec
sahf
bound
xor
subb
test
cmp
or
adcl
loopne
push
pop
mov
or
gs
mov
push
sub
ret
mov
pushl
xchg
sbb
shrl
aaa
lahf
or
adc
adc
mov
clc
loop
cmp
mov
xor
outsb
jg
cmp
or
fs
dec
cmc
outsb
jne
jb
add
mov
sub
and
push
data16
pusha
mov
or
inc
dec
sub
std
in
push
js
xchg
test
pop
lds
movsb
das
jmp
push
lock
in
xor
mov
sub
or
roll
cmp
fisubl
test
loope
mov
or
lahf
stos
inc
or
push
add
fldl
mov
scas
or
adc
mov
push
inc
push
push
icebp
and
int
cltd
xchg
and
mov
and
shl
mov
or
and
xorb
mov
sbb
test
xchg
imul
test
outsl
jb
mov
sub
rol
ljmp
xlat
pop
movsb
or
sti
mov
loop
cmp
inc
add
scas
rorb
dec
stos
jb
dec
dec
out
shlb
inc
nop
jns
mov
xchg
lahf
jo
out
jle
inc
sbb
shlb
jecxz
insl
dec
xchg
cs
les
cwtl
bound
ljmp
call
fsubs
xchg
sti
test
pop
nop
inc
in
mov
and
inc
inc
xor
push
sbb
mov
xor
lahf
cmp
and
mov
push
push
scas
out
lahf
data16
lods
mov
stos
mov
loope
fstpl
or
repnz
sub
shrl
dec
cmp
lret
rcrl
sbb
enter
andl
test
mov
mov
xchg
inc
cwtl
jecxz
popa
mov
arpl
mov
push
sbb
mov
and
das
mov
fistpl
mov
in
stc
or
jmp
fisubl
lret
dec
pop
mov
std
jg
out
nop
sarl
cmp
rolb
cmpsl
push
pop
mov
mov
pop
in
shll
stos
cmp
ret
nop
sbb
into
jae
or
jo
repnz
out
scas
mov
dec
or
and
mov
repnz
fistl
inc
mov
xchg
test
fnsave
and
arpl
aas
pop
mov
andl
jge
popf
movsl
xchg
idiv
jecxz
adc
or
inc
cld
jg
inc
inc
cmp
sbb
xor
out
xchg
push
cld
or
xchg
lods
shlb
lods
stos
and
add
out
dec
inc
in
outsb
jecxz
iret
dec
cltd
icebp
test
or
jle
addr16
jge
push
sub
ss
movsl
mov
out
lds
jb
test
imul
dec
jmp
lahf
das
dec
lret
push
fsubr
or
inc
lcall
dec
leave
inc
jl
cwtl
xlat
lea
cmp
pop
lea
fcompl
push
notl
jp
lock
mov
enter
mov
dec
mov
in
seta
pop
testl
pop
popa
mov
insb
inc
sbb
int
add
repz
and
adc
orl
push
and
xlat
imul
push
add
mov
jns
jmp
push
test
sub
or
cmpsl
xchg
test
xchg
fidivl
sti
xchg
daa
clc
fsubrp
stos
mov
leave
or
add
jo
sbb
jns
dec
xchg
cmp
aaa
rcll
fistpl
sbb
mov
sbb
or
jne
dec
repnz
cmp
test
xchg
jnp
jb
dec
lcall
addr16
jp
mov
movsb
hlt
push
pop
sbb
sub
sbb
and
icebp
and
movntps
idivl
adc
repz
mov
cld
mov
mov
or
cmpsb
lahf
aaa
mov
sar
push
lds
gs
mov
xchg
xor
sub
adc
mov
mov
lds
sbb
scas
in
mov
cmp
in
xchg
lcall
call
sub
sbb
or
out
pop
or
lock
xor
repnz
xchg
imul
dec
stc
xor
popf
or
sub
lahf
xlat
loopne
fstpt
dec
rcrl
idivl
cmpl
imul
lahf
dec
jge
xor
push
push
pop
push
add
sbb
jo
clc
mov
pop
add
mov
add
xchg
fmul
jg
mov
icebp
ja
mov
jnp
scas
cmp
ss
mov
sub
in
shlb
popf
or
in
jmp
lret
mov
or
loope
in
mov
loop
xchg
lret
in
pushf
ja
dec
imul
mov
repz
insb
xchg
add
popf
jne
outsl
push
int
cli
pushf
jp
sub
lcall
inc
mov
jne
push
cmc
jle
into
cmc
dec
add
jecxz
sub
sarl
cmc
movsl
or
pop
mov
and
push
popf
in
xor
mov
lret
ja
hlt
out
scas
ret
scas
into
and
mov
in
in
add
dec
jbe
fsts
bound
cs
add
dec
aad
iret
sub
adc
sarb
je
sub
sub
addr16
cmp
clc
sub
xlat
push
push
sbb
inc
sub
push
mov
add
loop
sub
sub
xor
test
xor
ret
sbb
dec
or
out
dec
jp
adc
lds
in
push
movsl
in
cmp
subb
incl
fnsave
dec
sbb
int
data16
dec
dec
add
out
sarl
nop
fmuls
mov
test
push
xchg
das
leave
sbb
movsb
arpl
test
jbe
icebp
pusha
ret
xchg
mov
loop
testb
xchg
sahf
pusha
adc
std
jns
cmpsl
push
adc
push
stos
or
movsb
aam
les
cmp
and
repnz
sbb
push
into
jbe
lcall
lds
xor
pop
lahf
fsubl
dec
outsl
jns
push
add
sub
xchg
out
jecxz
xchg
std
pop
sub
leave
aaa
dec
mov
out
into
fnsave
lret
adc
fs
out
jo
lock
pop
or
jbe
inc
xchg
add
sub
mov
xchg
mov
andl
jge
inc
les
or
negl
fsubp
rcrl
mov
add
mov
daa
cmp
xchg
jecxz
in
shrl
cmp
jnp
mov
xor
push
xchg
xor
mov
lods
arpl
pop
add
call
aam
lods
mov
addl
pusha
lea
fsubrs
sarl
nop
jmp
or
adc
jmp
or
cmp
lock
lcall
test
divl
addr16
xchg
mov
push
sti
hlt
sub
xchg
and
stc
sbb
mov
cli
push
divb
rcll
inc
lcall
xor
inc
mov
push
jne
pop
cltd
cmp
xor
pop
out
in
adc
pop
cmc
sub
jl
or
movsb
xchg
jne
or
push
sub
mov
sub
dec
cmp
push
xchg
stc
lods
pop
jp
lret
add
cmp
stos
clc
andb
jae
and
add
jbe
test
leave
and
inc
pop
pop
lods
push
or
push
loop
cli
hlt
pop
aam
inc
cmp
in
mov
push
cmpsl
aaa
iret
jo
fucom
lahf
out
jmp
adc
dec
xchg
dec
sbb
or
cmpsl
mov
cmpsb
sub
mov
sub
lcall
mov
xor
mov
rolb
ss
mov
cmp
mov
pop
out
and
test
fisttpll
xchg
repz
dec
adc
xor
stos
pop
not
jb
ficompl
xchg
jecxz
fcoms
sbbb
add
ljmp
fdivr
or
fistps
sub
loopne
sbb
xor
xchg
jecxz
jnp
hlt
dec
mov
aad
stos
lea
mov
js
pop
xchg
cmpl
push
jbe
dec
addl
and
mov
inc
psubb
xchg
or
aad
adc
jp
and
fidivs
enter
push
stos
outsl
xor
lds
or
cli
mov
shrl
add
jecxz
mov
popf
mov
jecxz
cli
out
imul
push
xchg
sub
mov
out
stos
xorl
daa
in
int3
imul
push
cmp
inc
cli
insl
jmp
repnz
push
shr
lret
cwtl
fs
pushf
insb
push
inc
imul
lret
adc
lock
mov
jmp
lock
inc
ljmp
sub
repnz
adc
mov
inc
out
pusha
insb
ret
mov
fcomps
loopne
movsl
adc
aas
cmp
adc
dec
lcall
daa
out
mov
pop
add
xor
xor
ja
mov
jmp
xchg
arpl
ss
jb
push
or
imul
insb
aad
cmp
adc
adc
dec
stos
cmc
nop
pop
cmc
shr
xor
push
clc
pop
pop
mov
push
adc
popf
int3
ja
in
cmp
adc
xchg
pop
call
inc
adc
int
push
pop
push
sub
out
js
add
subb
mov
rclb
repnz
fsubr
or
and
adc
mov
xchg
loope
mov
cmp
and
mov
scas
in
scas
ja
cmp
pop
mov
rorl
push
add
mov
and
vhsubps
mov
clc
movsl
out
jae
je
jp
xor
push
cmp
pushl
icebp
dec
mov
pop
jge
in
loop
out
and
xchg
orl
mov
fprem
movsl
cli
push
sarl
inc
mov
fsts
repz
dec
ficoms
outsb
xor
sub
mov
int
xchg
es
fsubr
xchg
and
lods
out
mov
xchg
push
or
fnstenv
shrb
mov
sub
fcmovnbe
and
shll
test
sbb
sub
xchg
jne
cmpsb
jg
scas
btr
fwait
cli
pop
pop
in
dec
lods
bound
or
loop
out
jmp
dec
dec
pop
push
mov
inc
add
inc
shll
fwait
xchg
cmpsb
sub
xchg
or
inc
sbb
decl
mov
mov
dec
std
inc
push
scas
cmpsl
cld
mov
jno
in
pop
mov
cli
sub
add
jmp
xor
xchg
pusha
loopne
in
inc
cli
xchg
adc
out
mov
push
mov
mov
push
xor
mov
call
hlt
jbe
test
pcmpeqw
cmp
mov
test
xor
ja
jl
cmp
xlat
mov
repz
jb
shl
mov
imulb
test
lahf
stos
ret
mov
cltd
addr16
fsubl
inc
dec
mov
stc
popf
js
lcall
lds
mov
jge
dec
fsub
movsb
jp
adc
sarb
sub
add
lods
or
test
lea
jmp
mov
add
inc
xchg
adc
cmpsl
popl
bt
and
xchg
ljmp
pop
mov
insb
das
cmp
push
inc
rorb
pop
cmp
lods
cmp
daa
xor
fldenv
test
shll
mov
ja
ficomps
push
sbb
je
mov
bound
insb
jge
mov
sub
idiv
scas
outsl
subl
inc
ds
jge
les
add
leave
fsubl
xor
jne
sub
popa
mov
xor
notl
cwtl
lret
mov
fsubrl
loopne
scas
je
cmpsb
inc
pop
dec
movsb
jo
cmc
outsl
fs
or
movsb
xchg
call
out
insb
jecxz
aam
sub
push
sbb
int3
leave
jnp
xor
and
pushl
sti
in
sti
loope
mov
stos
fcoms
out
push
mov
cmc
mov
sbb
or
in
jg
push
cmc
out
rolb
std
push
test
mov
mov
sbb
roll
add
pop
out
mov
push
jo
repz
pop
jns
out
cli
loop
js
xchg
ja
pop
and
cmpl
inc
fcomps
movsb
rcr
mov
rclb
ljmp
sub
xchg
and
pop
mov
adc
lods
xor
lods
pop
adc
subl
ljmp
mov
insb
mov
sti
adc
sub
jne
and
and
cwtl
es
fisubs
pop
mov
mov
shll
sbbb
inc
xchg
leave
mov
push
pusha
jo
rcll
jle
push
mov
or
push
inc
adc
outsl
xchg
adc
insl
mov
leave
xchg
xchg
and
cmp
orl
or
stos
pop
jge
repz
les
jmp
dec
xchg
in
xor
push
inc
fwait
sub
mov
xchg
test
mov
out
mov
ret
pop
mov
test
pop
push
mov
pop
cli
sti
incl
fstl
rorl
mov
mov
sub
mov
pop
add
in
in
lock
ret
sbb
shll
mov
xor
clc
test
lahf
aad
jg
cld
or
jo
jecxz
mov
loope
in
push
dec
or
out
mov
mov
arpl
push
lahf
jge
or
mov
test
in
std
or
jb
add
into
sbb
cs
sbb
jno
sahf
cmpsb
mov
jo
lret
inc
arpl
in
cltd
shll
daa
ret
xor
es
xchg
cmp
in
xor
pcmpgtb
adc
push
js
imul
imul
mov
jno
push
dec
add
mov
jg
xor
lock
pop
inc
mov
mov
pop
jae
jmp
cmp
test
lods
je
ss
leave
mov
scas
daa
jl
add
push
lret
insl
sbb
cmp
xchg
stc
sub
cwtl
sub
adc
xor
sub
fs
or
mov
or
dec
lahf
and
mov
mov
pop
pop
jecxz
sbb
rolb
mov
inc
scas
popa
pop
inc
lret
daa
iret
gs
cld
push
idivl
sahf
loopne
cmp
das
cld
shlb
int
dec
ljmp
xor
lock
and
mov
loop
sub
add
daa
xor
loopne
xchg
xchg
sbb
or
scas
jle
lods
shrl
pop
stos
push
dec
mov
push
jns
shll
mov
insl
cmp
gs
rcrl
xor
push
lods
mov
test
out
push
jnp
inc
cmpsl
lahf
xchg
adc
dec
imul
pop
push
stc
jecxz
inc
cmc
add
dec
outsl
in
push
in
push
jecxz
iret
outsb
mov
mov
or
push
icebp
ds
ffree
xor
mov
inc
dec
cmpsb
mov
and
push
frstor
orl
or
pop
shlb
sub
out
test
sbbl
sub
fstpl
pop
dec
sahf
sub
sbb
sub
in
or
cmpsl
jns
jp
lds
dec
imul
ds
sbb
iret
jae
sbb
jmp
fadds
jmp
call
cli
into
into
cmpl
push
pop
push
les
nop
fistl
not
outsl
mov
mov
cli
fistps
xor
emms
pop
lret
aad
or
ret
int
push
mov
pop
pop
mov
out
scas
mov
lds
inc
in
ss
push
jp
cltd
inc
daa
push
pop
xchg
cmp
data16
shr
and
leave
mov
lock
jo
or
mov
insl
jo
adc
std
dec
add
push
and
mov
add
jo
jecxz
and
notb
hlt
sbb
test
push
sub
inc
movsb
adc
pop
jo
inc
pop
jmp
dec
mov
push
add
pop
cmp
mov
jg
popf
sbb
or
out
hlt
or
push
mov
out
std
stos
jmp
out
popa
push
jp
adc
sbb
push
jne
cld
cmp
add
add
outsb
ficompl
mov
mov
incb
addr16
jp
pop
dec
scas
cmp
add
lds
test
cmpsl
sbb
loopne
dec
inc
xor
xchg
jns
or
inc
sub
fidivrl
push
mov
test
xchg
ds
adc
aas
aad
stos
mov
js
cltd
das
jb
push
mov
mov
js,pn
ret
sub
rorb
mov
stos
push
sbb
jbe
add
leave
insb
jno
ds
shlb
and
or
clc
pushf
adc
mov
flds
lret
rcl
lret
ficoms
dec
testb
inc
mov
bts
jg
scas
jge
push
in
mov
mov
jnp
into
loopne,pt
stc
insb
sarb
pop
dec
inc
int
sbb
mov
shlb
addb
dec
mov
sub
xor
xor
xchg
neg
out
push
and
add
std
mov
ds
or
jbe
loopne
dec
mov
sub
adc
in
jmp
rol
dec
stos
pop
cltd
movsb
push
ret
mov
imul
mov
shrb
push
in
push
shl
pop
push
lods
cmp
push
out
call
push
stc
mov
xchg
jno
int
std
ret
in
fnsave
test
divb
mov
or
mov
adc
jbe
fldenv
inc
stc
dec
sub
sbb
push
mov
movsb
and
push
push
pop
inc
cmp
xchg
clc
dec
pop
scas
mov
shlb
jp
mov
or
xchg
mov
mov
fstl
leave
insl
jge
mov
xchg
adc
in
adc
mov
adc
cmc
popf
mov
pop
out
inc
f2xm1
dec
dec
pop
ror
int
out
dec
add
add
and
in
ja
inc
inc
rclb
fnstenv
lods
push
movsl
xlat
mov
leave
mov
movsl
pop
js
pop
hlt
adc
mov
jno
fwait
dec
pop
int3
xchg
mov
js
mov
adc
cmp
adc
xorb
adc
outsl
in
out
push
rorl
xchg
iret
push
or
roll
lcall
mov
pusha
jno
push
out
mov
xchg
test
mov
stc
and
jno
dec
mov
arpl
jmp
cmc
adc
sub
or
clc
scas
mov
movsl
pop
in
test
pusha
sarb
fcmovu
sub
add
pop
in
pop
mov
sbb
pop
pop
flds
scas
jle
or
out
xor
sub
roll
mov
and
call
in
out
imul
add
test
dec
int3
sub
jge
lods
jae
fldt
call
je
mov
sub
inc
inc
cmp
dec
aas
std
or
jo
mov
std
nop
aad
out
xchg
leave
xor
in
sbb
mov
sbb
outsl
fcoml
fistps
lods
mov
ficoml
mov
imul
mov
cmp
in
mov
dec
mulb
in
clc
push
sub
sub
ja
cmp
js
cwtl
shrl
fisttpll
ja
sub
loopne
fimuls
inc
bound
push
dec
add
or
ret
and
sbb
faddp
or
cmp
and
mov
xor
js
xlat
fisubs
shll
sub
aaa
sub
dec
sbb
pusha
sbb
inc
jg
inc
stos
loope
pop
mov
testl
ret
jb
decl
fdivrl
mov
cmp
inc
les
push
lret
mov
out
stos
imul
icebp
adc
aam
xchg
jae
dec
test
add
fists
jmp
lret
sub
cs
pmullw
mov
daa
sbb
icebp
xor
hlt
into
jp
dec
lret
jmp
jo
sub
mov
add
fldcw
out
push
mov
or
mov
enter
lds
inc
dec
sbb
adc
sbb
arpl
int
ret
add
jmp
dec
repz
aad
pusha
mov
jbe
sub
adc
loope
int3
fldcw
pop
iret
pop
push
cmp
add
gs
imul
mov
ret
cmpsb
pop
dec
divl
pop
and
jp
rcll
xchg
daa
jae
xchg
mov
dec
inc
and
pop
mov
lsl
or
mov
mov
mov
jmp
sbb
shlb
jns
push
inc
mov
pop
in
stos
and
mov
sub
imul
add
dec
sub
adc
in
jg
notl
sarb
inc
lds
in
jmp
outsl
inc
les
aas
outsl
cmp
push
cli
shlb
or
popa
popa
jae
es
sarl
adc
lahf
and
xchg
push
sbbb
xor
aad
pop
push
xchg
rcll
sub
mov
addl
aaa
sub
add
fdivp
loope
into
push
cmp
das
mov
leave
add
mov
adc
sbb
leave
adc
fnsave
xchg
dec
xor
sbb
xchg
jno
leave
dec
pop
mov
icebp
pop
mov
leave
hlt
and
sub
adc
fmuls
mov
jns
pop
cmpsl
push
push
repnz
stos
loopne
push
sub
repz
adcl
sti
xchg
lods
xchg
popa
jbe
sub
jo
xchg
cmp
and
sub
jg
psllw
dec
add
repz
cwtl
sarb
dec
fsts
scas
repz
jl
jg
icebp
xchg
mov
sub
lock
and
iret
sub
mov
inc
dec
jge
addr16
pushf
jnp
insl
inc
pop
movsl
lds
adc
and
xchg
in
lret
mov
jge
call
mov
xchg
iret
xrelease
sbb
xchg
sahf
push
jl
mov
push
sub
sahf
push
stos
adc
mov
cmp
mov
ds
pop
mov
pusha
jecxz
cs
sub
outsl
mov
imul
mov
arpl
movsb
sbb
mov
and
call
aaa
ror
mov
loope
call
or
test
adc
ljmp
sub
repnz
fiadds
sahf
cld
fcomip
pop
test
test
mov
xlat
inc
adc
pushf
pusha
xor
pop
pop
es
mov
loopne
and
xor
lds
popa
fwait
pop
insl
push
push
mov
mov
mov
add
push
sahf
jle
push
sub
or
pushf
and
lahf
push
bound
imul
mov
movsb
movsl
xor
cwtl
mov
lock
mov
ror
inc
inc
add
sahf
fsubrl
xchg
cmpsl
cmp
pop
es
or
inc
xchg
sbb
imul
jbe
cld
xor
push
bnd
or
mov
xchg
mov
jecxz
sub
jo
or
xor
in
jns
icebp
cmp
lock
inc
fdivl
inc
ja
cmp
and
mov
mov
and
lock
hlt
pop
cs
xor
pushf
adc
adcb
jno
outsb
xchg
pop
or
jnp
js
and
cwtl
rcll
subl
xor
jns
in
pop
jmp
mov
push
insl
sbb
outsb
lahf
push
mov
sbb
or
sub
cmc
pop
sti
cld
in
xchg
sahf
xor
mov
mov
dec
fistps
pop
stos
ret
or
loopne
push
push
jle
sbb
add
bound
jb
and
test
xor
popa
iret
add
inc
push
push
mov
ret
jp
mov
sbb
xor
fldz
cmp
in
mov
into
pop
mov
add
inc
or
mov
dec
push
lock
adc
js
adc
jo
pop
sbb
mov
lret
aam
mov
pop
xchg
jns
enter
mov
cmp
mov
or
movsb
je
mov
loop
sbb
outsl
into
gs
out
das
jae
jne
xor
jmp
sti
mov
mov
dec
out
dec
cmp
or
xchg
sub
repnz
std
mov
xor
xchg
in
or
or
xor
in
out
jns
cmp
int3
shl
stos
fldenv
add
stc
gs
les
xchg
fs
outsb
xor
push
fwait
adc
mov
or
cwtl
gs
in
fwait
and
push
fmull
xchg
lcall
inc
push
xchg
dec
cmpsl
push
pusha
outsb
push
rclb
cmp
insb
cmp
xchg
inc
inc
jo
jae
mov
iret
push
call
jns
cmc
cmpsl
dec
lahf
dec
cmp
pop
pop
aam
cltd
ret
xor
call
dec
and
mov
push
jg
xchg
subl
push
outsl
xchg
leave
dec
pop
or
xchg
leave
pop
xchg
xor
push
aaa
lods
xchg
test
pusha
jbe
add
jnp
mov
enter
stos
outsl
data16
loopne
sbb
dec
xor
jb
jl
out
out
xor
sbb
xor
xlat
call
or
cwtl
dec
and
repnz
out
push
mov
aaa
into
mov
xor
cmc
sbb
daa
imul
mov
pop
imul
aad
jge
popa
enter
or
sbb
lea
push
and
push
xor
jns
pop
sub
movsl
js
cmp
sti
mov
outsb
mov
mov
in
push
mov
aad
ja
popw
pop
mov
mov
inc
scas
movsb
iret
push
fbld
movsb
mov
dec
xchg
mov
shll
dec
out
andb
sbb
insl
insb
xchg
adc
pop
imul
lods
or
enter
cmpsl
sub
cmp
add
adcl
cmp
lds
fistl
xor
call
adc
adc
jae,pt
loop
and
ljmp
pop
mov
jne
xchg
in
ljmp
es
or
jg
jle
rcrl
ret
push
jecxz
mov
call
mov
lret
fldl
push
mov
das
mov
iret
mov
push
dec
xor
aas
daa
fimull
add
lea
jb
rcll
jge
faddl
push
mov
push
dec
popf
adc
ss
sarl
mov
subb
imul
push
fdivp
lahf
jge
pushf
mov
mov
inc
mov
mov
push
ss
cmp
sbb
or
hlt
leave
out
xor
and
adc
mul
cmc
or
scas
sub
in
in
add
sbb
pop
in
xchg
stos
mov
shrb
mov
inc
pushf
cmp
adc
icebp
mov
lock
pop
sarl
pop
call
sarb
testb
lcall
incb
add
imul
repz
popa
rorb
orb
nop
and
out
sarl
stc
scas
sti
rcl
pushf
fisubs
and
or
xchg
ret
insb
pop
fldt
jle
shrb
mov
sub
pushf
imul
daa
stc
icebp
dec
aam
sub
dec
inc
iret
stc
and
mov
ret
mov
push
in
sahf
pop
sarb
ret
cmc
pop
pop
mov
jbe
pushf
lods
dec
cmp
call
pop
add
pop
out
and
sub
mov
jo
bound
push
mov
pushf
xor
icebp
enter
mov
in
test
mov
fists
sti
pop
icebp
mov
sbb
sbb
out
loopne
ret
mov
out
xchg
push
lcall
rorl
cli
jns
movsl
inc
fsubr
ds
scas
clc
outsb
add
mov
movl
adc
jbe
push
lret
dec
shl
add
dec
inc
ds
jmp
sbbb
mov
xor
xor
iret
xor
int3
sub
fisubrl
push
add
imul
clc
es
push
lcall
lock
lahf
lret
sub
flds
and
sbb
loope
orl
xchg
dec
dec
sub
sahf
push
shrl
pop
dec
xchg
push
mov
je
push
jmp
scas
cmc
nop
lods
xchg
adc
inc
mov
call
jo
data16
push
or
shl
mov
sub
daa
pop
mov
lahf
jbe
in
ljmp
pop
pop
push
adc
pushf
es
pop
xchg
jl
push
push
cmpsb
and
mov
inc
pop
ret
cmp
addb
out
sti
cmpsb
cli
pop
push
push
jmp
or
movsb
sbb
inc
xchg
push
roll
leave
rolb
je
or
jnp
stos
jmp
xor
sbb
inc
sbb
lock
enter
cmp
pop
adc
mov
cmp
pop
xchg
lods
cld
push
xchg
or
xchg
mov
jg
push
js
rorl
xchg
xchg
push
js
fwait
popa
lahf
adc
xchg
push
mov
pop
xor
fwait
sbb
pop
dec
push
xchg
movsb
mov
mov
mov
inc
sub
sub
aas
dec
mov
mov
push
sub
mov
repz
sub
mov
or
or
push
mov
cmc
in
adc
dec
rorl
lods
xchg
cli
mov
jmp
pop
mov
adc
in
sub
jo
out
dec
xchg
mov
aaa
jno
pop
movsb
js
xchg
jo
mov
sbb
movsl
gs
ret
aas
loopne
inc
dec
insb
ffreep
test
aam
pop
popa
imul
scas
mov
gs
pop
mov
mov
adc
sbb
arpl
add
dec
or
jge
cmp
in
lahf
int3
mov
jmp
push
scas
sub
xor
push
push
mov
sub
cmp
push
xor
scas
shll
xor
mov
xor
mov
xor
rcrl
or
cmp
mov
inc
mov
daa
divl
ljmp
aad
xchg
inc
shll
jbe
adc
mov
testl
mov
data16
mov
andb
pop
test
mov
call
mov
in
pop
out
jle
lret
adc
jge
xchg
jns
pop
shrl
mov
and
movswl
inc
mov
push
adc
jb
dec
mov
jl
mov
fbld
mov
push
mov
dec
subb
xchg
inc
adc
enter
shl
mov
cmpsl
add
bound
imul
inc
daa
dec
cltd
cmc
cli
pop
imul
push
adc
xchg
dec
cmp
and
add
mov
ret
fwait
dec
mov
cmp
xor
ret
pusha
scas
sbb
sbb
push
cs
mov
xchg
push
sbb
inc
cmp
test
pop
xor
jmp
dec
cmp
xor
mov
pop
inc
int
adc
push
mov
clc
dec
cwtl
adc
or
inc
aas
add
jg
imul
pslld
sbb
sbb
popa
mov
xor
push
inc
imul
xchg
out
outsl
into
ljmp
and
lcall
pop
xor
out
popa
aas
mov
shrb
push
xchg
xor
and
mov
mov
mov
imul
out
mov
rorl
lret
sti
mov
aaa
sbbb
leave
test
xchg
lret
cmc
mov
imul
andb
and
lret
les
mov
movsl
dec
pusha
xchg
xor
push
pop
push
sub
mov
cmc
sbb
insb
std
imul
push
push
sub
mov
std
sbb
test
xor
push
jl
call
addb
icebp
xchg
rcrl
mov
push
into
cli
sti
jo
jbe
aad
push
stc
lods
imul
push
push
push
sub
ror
jo
mov
nop
inc
movb
pop
fmull
mov
ss
lret
test
addr16
cmpsb
mov
shrb
xchg
inc
lret
ljmp
push
jl
add
out
jmp
ja
js
std
ja
pushf
push
lret
pop
mov
push
insb
cs
mov
leave
fisubrl
pop
out
test
les
and
fwait
in
mov
fsts
lret
cli
movsl
dec
cltd
aad
jmp
xor
sbb
sbb
test
scas
or
cli
xor
addr16
mov
mov
cmp
or
test
test
xor
lret
push
aaa
pop
mov
xor
leave
pop
xchg
stos
in
in
in
fstps
popa
mov
jg
inc
testl
dec
ljmp
cmpsb
fiadds
ljmp
scas
cmp
or
mov
xlat
jecxz
push
rcrl
lock
or
xchg
add
sub
xchg
add
jo
mov
pop
sti
adc
in
dec
pop
cmpsb
sub
je
or
sub
pop
sahf
mov
sti
jecxz
and
idiv
hlt
cli
outsl
cmc
add
cmp
adc
add
popa
push
daa
in
repz
cmc
mov
pop
jns
shl
aas
ss
sbb
push
mov
mov
dec
or
mov
push
stos
dec
iret
flds
adc
adc
imul
mov
pop
pop
xchg
iret
cmp
fwait
mov
mov
push
cmp
into
xor
aas
jmp
xchg
movsl
fs
test
leave
dec
test
jp
mov
pop
or
out
dec
push
dec
int3
ret
subl
add
cmp
add
sbb
movsl
pop
sbb
lds
push
jo
dec
jp
xchg
js
fisttps
inc
jmp
incb
sub
pop
dec
xor
mov
inc
push
push
xor
cwtl
jp
int3
pop
mov
lret
cmp
outsl
dec
and
clc
sub
sahf
cwtl
ja
ja
pop
add
insb
sbbl
sbb
push
loope
outsb
sub
sti
flds
ret
clc
xor
lret
cmp
mov
mov
dec
stc
mov
in
stos
int
rorl
jmp
out
inc
dec
or
pop
jne
daa
dec
repz
push
xor
repnz
sbb
push
popf
test
or
sub
in
flds
sbb
fwait
out
lea
xor
pop
jmp
movsl
les
pusha
mov
lock
cwtl
jl
jecxz
dec
ss
sbb
inc
cmp
and
imul
nop
jmp
dec
fisubl
inc
or
and
es
sbbl
in
or
jmp
cld
inc
mov
sahf
xchg
pop
scas
jmp
daa
mov
in
adc
mov
test
mov
and
mov
xor
cmp
mov
imul
pop
imul
jle
testl
dec
sbb
sar
lods
aas
or
lret
adc
cmp
pop
inc
leave
cmp
int
push
lock
mov
adc
int3
xchg
and
lea
and
es
test
sub
cld
popa
xor
pop
cs
inc
mov
sbb
jo
ret
jno
mov
xor
sub
cli
push
fs
sub
pop
data16
frstor
fisttpl
jmp
jo
add
rcl
std
scas
mov
xor
add
xor
sbb
arpl
lock
fcoml
push
cld
dec
iret
pop
inc
or
lods
movsl
loop
lret
xor
out
addr16
nop
repnz
mov
addr16
jge
xchg
ljmp
xchg
xor
push
mov
mov
push
or
notl
jmp
roll
shll
sub
add
into
fwait
jp
daa
xchg
arpl
xchg
sbb
mov
divb
ss
testl
sub
ret
dec
cmpsl
int3
in
xorb
sbb
test
imul
ljmp
imul
pop
fisubs
mov
in
in
hlt
cmc
or
dec
mov
pop
fwait
sbb
repz
dec
cmp
mov
decl
xchg
adc
jns
pushf
pop
fsub
std
or
dec
sbbl
in
sti
adc
sub
mov
cmp
rcrl
inc
dec
mov
jnp
cs
fdivrp
push
mov
mov
push
jb
xchg
int3
sbb
dec
and
loop
ret
std
lret
pop
jp
push
mov
cmp
mov
jo
dec
and
cmp
out
inc
mov
inc
lea
cltd
push
data16
jno
or
mov
jb
push
out
mov
adc
mov
decb
movsl
xchg
pop
lahf
cli
into
data16
pop
aam
pop
lret
or
sbb
mov
pop
loope
insl
adc
rcll
and
call
je
lods
bound
insb
ficoms
aam
lods
adc
and
aam
cmpsb
jo
or
scas
pop
jp
mov
lret
js
std
add
nop
mov
mov
and
sti
push
test
xchg
or
xchg
outsl
outsl
or
call
sbbb
pop
aaa
pushf
repz
inc
inc
or
test
das
add
cmp
adc
mov
sbb
pop
or
jb
jg
shufps
les
push
mov
lret
fadd
sbb
sbb
rcll
xorb
jle
sbb
jnp
push
mov
icebp
sar
pop
mov
mov
mov
mov
pusha
icebp
add
std
push
jne
add
test
ljmp
mov
add
popl
sarb
daa
xor
xchg
adc
mov
jbe
jnp
and
pop
call
loope
pop
lcall
cld
test
and
cmp
cmp
scas
inc
ljmp
cmpl
ss
and
mov
sub
scas
jns
or
mov
outsb
push
xor
jle
jb
int3
mov
cmp
insb
clc
or
or
arpl
arpl
clc
repnz
adc
jo
fsubrl
cmc
sahf
cld
lahf
nop
in
jb
sbb
push
push
dec
mov
mov
sti
scas
stos
jnp
iret
jb
mov
push
inc
scas
je
shrb
in
push
das
adc
cmp
out
lds
icebp
cmp
dec
dec
cmp
stc
pop
sub
push
ss
enter
es
shrb
aas
cmpsb
inc
xchg
stos
or
jecxz
and
mov
add
fwait
roll
push
dec
roll
cld
movsb
cmc
add
add
aad
out
xor
bound
add
jl
xchg
and
jbe
loope
adc
xchg
ja
xchg
push
es
mov
popa
push
cmp
lods
pushf
pop
incl
push
mov
sbb
gs
dec
outsl
mov
ret
mov
test
and
gs
lcall
in
jo
sbb
aad
push
adc
fisubrs
mov
mov
fsts
xor
pop
test
call
mov
or
loop
gs
stos
adc
mov
xchg
lea
in
addr16
push
shrb
je
jmp
scas
fcompp
adc
pop
cmp
fcomp
aad
lahf
adc
mov
iret
movsl
mov
and
leave
lock
inc
sub
hlt
adc
pushf
push
aas
xchg
add
sub
inc
adc
push
jecxz
or
ja
aam
cmp
sub
bswap
scas
sub
jl
repnz
lea
jge
mov
test
loopne
jecxz
add
xchg
mov
xchg
mov
addr16
inc
ds
add
loop
fistpll
cmp
jle
nop
push
sbbb
sub
jae
ja
sbb
inc
aaa
cmc
sbbb
jge
inc
insl
iret
sbb
adc
xchg
push
add
mov
data16
jmp
test
dec
adc
sbb
std
xchg
fmul
insb
pop
pop
mov
or
mov
inc
jnp
mov
mov
fldl
pop
xchg
dec
adc
cmp
inc
xor
hlt
lahf
cld
ds
cs
imul
and
xchg
ficoms
sub
xlat
adc
push
pop
cmc
pop
sub
cmp
push
pop
aaa
adc
jnp
js
insb
adc
xchg
cmpsl
js
inc
and
movb
movsl
mov
les
sahf
push
adc
push
inc
xchg
ds
pop
sahf
push
ret
ljmp
aas
out
mov
mov
xchg
pop
jle
inc
xlat
dec
mov
add
lods
dec
cmp
mov
sub
or
xchg
rcll
pushf
stc
mov
cmpsb
rorb
mov
push
sti
jns
testb
pusha
dec
push
int
and
cltd
sbb
or
in
mov
mov
jo
das
dec
aam
pop
mov
push
gs
lcall
xchg
js
arpl
lods
das
inc
int3
sub
mov
fidivl
arpl
mov
jecxz
test
jb
int
xchg
sub
push
adc
ljmp
cmc
in
js
xlat
hlt
rcr
sbb
jbe
inc
jns
ds
jp
fistpl
sbb
sub
fmull
nop
rcl
hlt
cmp
pop
sub
dec
push
sub
mov
sbb
push
out
sub
xorl
push
or
fcoms
lock
out
pop
add
stos
fs
cmp
notb
pop
adc
sbb
inc
and
xor
sub
and
in
ljmp
addb
cmp
xlat
cmpsl
sbb
movl
mov
out
xor
je
gs
adc
cmp
jmp
push
push
push
xor
xor
popa
mov
pop
cmpsl
shll
push
dec
pop
addr16
pop
fwait
jne
scas
and
xchg
push
push
add
pop
enter
nop
test
in
push
sbb
cmc
test
popa
cmp
cmp
dec
pop
test
mov
sbb
sub
and
mov
xchg
mov
lds
jns
pop
shlb
adc
cmpsl
pusha
xchg
xor
pop
arpl
sub
fs
stc
sarb
addr16
fsincos
sub
mov
lods
into
fs
insb
call
pushl
push
cmp
lock
and
cmp
xchg
vpsubsw
inc
mov
jge
push
dec
and
add
jbe
test
jno
and
xor
ja
mov
sub
jmp
rolb
lret
fisubs
out
mov
jl
and
cmpsb
mov
xchg
ja
popa
movsl
loopne
fsubs
scas
rcll
lret
mov
icebp
popf
mov
and
and
push
xchg
sub
popa
xchg
mov
sub
int3
push
sbb
lcall
mov
ja
fisubrl
push
push
jb
sub
jae
test
lcall
mov
shr
clc
mov
sahf
mov
out
add
pop
test
or
mov
fwait
repz
hlt
bound
xor
lods
jno
pop
in
sbb
mov
setg
fiaddl
dec
xchg
add
sub
in
stos
lods
pop
push
add
cmc
mov
add
pop
mov
cmp
cwtl
push
pop
xacquire
lret
fcomps
dec
dec
loopne
mov
adc
xor
inc
cmpsl
mov
out
out
xchg
dec
push
notb
scas
pop
fisttpl
adc
push
push
mov
test
inc
dec
xor
ss
mov
flds
pop
repz
pusha
std
jge
cmp
xchg
pop
stc
xchg
es
lret
out
arpl
cmc
imul
sbb
xor
xchg
jo
fs
pushl
inc
jge
or
xchg
xor
lods
insb
inc
cmp
cmp
in
jp
pop
cli
add
repz
mov
jno
xchg
movsb
outsb
jns
adc
testl
jg
lret
iret
add
fbstp
leave
cmc
outsl
push
mov
cmp
imul
movsb
test
int
jmp
sbb
xorb
ss
pop
sbb
xchg
dec
in
jecxz
xchg
add
mov
xchg
lock
push
cmp
std
es
mov
sbb
out
jge
adc
pop
mov
movsl
popa
mov
loope
dec
sub
adc
mov
shrl
lods
ja,pn
mov
cmpsl
and
cwtl
fwait
jb
push
or
mov
cmp
sub
cmp
fsubs
hlt
cmp
cwtl
pop
arpl
cmp
std
sub
add
scas
addr16
movsl
cwtl
jne
sub
pop
outsb
aad
fs
sub
xor
les
mov
jecxz
and
jecxz
mov
pop
inc
xchg
ss
mov
mov
sbb
mov
sahf
push
xor
jge
adc
sub
mov
sub
push
iret
es
jl
xchg
std
ret
mov
mov
xchg
ret
xchg
shll
in
pushf
insb
push
push
mov
pop
popf
sbb
cld
inc
sbb
inc
lret
in
mov
xchg
pop
stos
inc
push
fs
aad
mov
mov
int3
cwtl
test
pusha
inc
xchg
fldl
out
inc
and
out
mov
jmp
leave
mov
faddl
mov
cmp
dec
hlt
dec
es
mov
inc
fsts
mov
in
xchg
clc
sbb
mov
mov
lgs
repz
sub
push
push
xchg
sbb
ljmp
xor
xorb
pop
mov
lock
and
call
xchg
jle
sbb
sub
xchg
jb
insl
lcall
jl
dec
roll
push
sub
sub
push
insl
cmpsb
test
mov
sub
cmp
pop
in
loope
or
cmc
mov
mov
shrl
mov
pop
dec
out
hlt
jg
dec
dec
out
inc
sbb
xor
cmpsl
xchg
nop
call
push
icebp
int3
inc
sub
mov
xor
js
cmp
stos
and
add
jl
punpckhdq
add
push
lret
stos
and
daa
mov
pop
mov
fstpl
mov
xchg
and
push
jle
xchg
test
mov
xor
in
and
aas
jno
mov
repz
dec
lock
std
mov
mov
mov
subl
mov
xchg
dec
jae
pop
movsl
es
imul
inc
inc
aaa
inc
jnp
loope
jge
sub
sub
jmp
push
or
loope
mov
addr16
sbb
mov
leave
hlt
inc
imul
aas
xor
js
jmp
jo
dec
jb
inc
adcb
dec
push
or
sub
jb
mov
fwait
push
mov
or
and
sbb
add
jl
icebp
mov
mov
jl
pushf
or
data16
aaa
xor
fnsave
std
or
xor
fsubrs
or
mov
cmp
mov
xchg
call
stos
aad
insl
test
rolb
es
xor
arpl
repnz
inc
lea
push
mov
loopne
push
fs
sub
sahf
cld
cmp
sti
js
cmpsl
push
aam
loop
fbstp
push
insl
pop
test
mov
nop
out
out
lret
fdivrs
sub
sbb
or
xor
add
dec
cwtl
push
jno
inc
daa
mov
and
mov
call
insb
sbb
sub
in
xchg
mov
pop
popa
ds
jmp
and
jno
cwtl
push
cmpsb
xlat
popf
pop
pop
xchg
in
inc
pop
or
fwait
cmpsb
push
sahf
mov
or
inc
cld
jl
adc
pushf
dec
mov
mov
and
sub
jp
pop
mov
push
xor
cmpsl
outsb
aam
push
fs
mov
jbe
or
aaa
mov
jge
xor
sbb
test
or
loopne
addb
insb
sti
sub
in
dec
push
loop
mov
cmp
sbb
in
sahf
daa
pop
inc
sub
xor
mov
daa
sub
pop
xlat
mov
out
jnp
ja
repnz
fldt
dec
shlb
lods
enter
xchg
stos
push
sub
mov
rorb
int3
mov
popa
adc
icebp
rcrl
into
sti
cwtl
push
aad
dec
pusha
push
test
xor
ret
dec
cmpsb
xchg
cld
lahf
cmp
pop
dec
or
loopne
daa
rcrb
imul
xchg
inc
mov
pop
rorl
aaa
imul
or
lcall
mov
jno
adc
inc
adc
dec
out
add
and
jg
push
jns
sub
aad
mov
and
shrl
mov
push
stc
mov
mov
jmp
xchg
lods
test
sbb
fwait
cmpl
fwait
xor
imul
ljmp
sub
dec
dec
sbb
daa
lret
iret
lahf
nop
mov
es
sahf
lods
mov
mov
xor
add
sbb
ja,pt
stos
rcl
jne
dec
or
jp
addr16
xlat
and
or
push
add
xor
push
out
das
arpl
scas
xchg
jns
xchg
jns
fcmovnbe
arpl
jne
pop
das
xchg
mov
xor
xor
adc
cmp
bnd
sbb
aaa
inc
jbe
outsb
loopne
fistpll
and
sub
outsl
pop
mov
jo
push
icebp
jge
lea
outsb
fistl
jne
popf
lcall
or
daa
pop
jle
xor
push
xor
ficoml
xchg
sbbb
imul
jmp
inc
not
push
repnz
pusha
jmp
sbb
jl
test
or
repz
xchg
leave
fists
jmp
xor
adc
jmp
dec
push
sbb
mov
in
pop
add
push
or
cmp
mov
xchg
xor
ja
cltd
int
out
cltd
adc
ss
in
and
inc
pop
xchg
int
movsb
jne
push
pop
popa
aad
mov
jmp
jg
cmc
test
push
mov
insl
push
into
es
sbb
outsb
ja
mov
cmp
outsl
enter
or
lcall
mov
dec
aaa
lcall
and
aas
pop
outsl
xor
lret
add
jbe
out
mov
sub
cwtl
jmp
jno
leave
push
repz
loopne
jae
jle
jecxz
xor
out
cmp
repz
pop
les
xchg
sti
data16
nop
xchg
xchg
lcall
stos
adc
lods
xor
xchg
adc
push
fldl
mov
add
jno
fadd
int
insb
or
and
leave
sbb
inc
jbe
push
xchg
cwtl
fisubrs
std
push
sar
push
cmpsb
pop
mov
mov
push
push
out
adc
das
scas
xor
stos
movsb
and
pop
inc
push
std
push
aas
xchg
bound
shlb
cmp
ret
pushf
inc
cmpsl
pop
pop
mov
adc
pop
les
nop
sub
bound
scas
dec
pop
adc
jno
mov
ja
pop
mov
loop
movsb
and
daa
pop
dec
inc
pop
stos
mov
xor
cmpl
jp
adc
xlat
cli
ja
iret
loop
aas
or
addb
lahf
mov
dec
lods
push
fstpt
scas
jp
mov
mul
fsubrs
in
xor
mov
inc
push
fisubrl
mov
sbb
dec
xor
pop
add
ficoml
mov
lahf
rclb
fs
aas
es
ds
hlt
cmp
sbb
inc
and
lods
cmp
jecxz,pt
dec
add
push
cwtl
or
and
lea
popa
cwtl
out
leave
test
int
bound
cli
imull
movsb
les
dec
cmp
sbb
mov
push
dec
enter
insb
ljmp
lods
xor
xchg
jg
icebp
daa
jecxz
dec
insl
bound
inc
xchg
pop
sub
push
mov
dec
int3
mov
or
push
or
and
sub
push
repz
pushf
mull
or
mov
out
mov
xor
loop
inc
or
xor
and
xor
push
ds
fucom
loop
xchg
add
jnp
fwait
or
pusha
mov
incb
ss
lods
jl
aam
repnz
imul
xchg
clc
mov
in
lahf
sub
mov
and
scas
mov
in
int
loopne
mov
fdivs
cs
xor
sbb
stos
sbb
dec
dec
jbe
mov
clc
clc
push
push
mov
xchg
push
fists
mov
iret
pushf
lcall
insl
or
stos
adc
ret
pop
fcomps
add
jecxz
pusha
cmp
jbe
adc
mov
jns
outsl
mov
adc
orl
inc
js
jbe
mov
mov
and
push
popf
ret
sub
stc
push
xlat
sub
xchg
jno
pop
mov
lcall
sub
xor
test
add
push
lods
test
pusha
push
popf
lock
inc
push
add
stc
stos
and
movsl
test
dec
rcrl
mov
subl
aad
xor
loope
into
add
bound
popa
jl
pop
cmc
lcall
out
or
aad
outsl
mov
int
ds
popa
mov
xor
sub
push
aas
xchg
insl
push
pop
test
shll
dec
inc
mov
inc
mov
sbb
inc
jle
loop
adc
adc
inc
sub
xchg
mov
and
sub
insb
sbb
push
test
push
xchg
stc
or
rep
sub
adc
cld
inc
xor
xlat
sub
push
adc
mov
hlt
sbb
loopne
xchg
xlat
push
les
pusha
or
jg
sbb
push
and
dec
ds
mov
pop
mov
loope
cld
hlt
data16
lock
sti
jle
xchg
fmull
filds
or
sbb
mov
push
sahf
pop
jecxz
xchg
sbb
es
cwtl
xor
out
cmpsl
mov
mov
add
mov
fmull
pusha
and
js
sarl
orl
mov
pop
stos
mov
loope
mov
les
mov
push
in
ja
fwait
mov
into
adc
sbb
test
cmpsb
pop
mov
cld
popa
movsl
rorb
data16
rorl
push
jo
adc
dec
orb
push
fldl
xchg
test
lret
inc
test
inc
sbb
lods
stos
xlat
aam
adc
adc
ret
mov
into
pop
pop
lock
pop
or
mov
inc
insl
sahf
mov
sti
or
dec
pop
daa
and
and
aas
add
jbe
es
jge
imull
or
ret
orb
lock
call
pusha
mov
ja
sbb
in
ficompl
pmuludq
and
push
mov
inc
ja
iret
pop
mov
jmp
andb
outsb
movsbl
pushf
mov
outsl
add
in
mov
push
xlat
bound
repnz
sub
mov
sti
ret
mov
mov
rcrl
push
outsl
test
or
and
sub
rorl
dec
jge
xchg
pop
mov
aad
xor
push
sbb
and
daa
push
mov
scas
fwait
sub
scas
mov
test
jmp
incw
mov
inc
xchg
insb
lods
mov
mov
ljmp
pop
arpl
mov
sbb
sub
ds
jne
xchg
lret
pop
loope
push
and
xor
or
push
aam
aaa
mov
imull
repnz
fcoms
out
mov
dec
sbb
roll
pushf
fwait
push
lock
movsb
push
adc
pop
mov
pop
jne
and
cmp
and
ret
popa
mov
lcall
rorb
jge
mov
and
push
pop
ror
sbb
cmp
ja
loop
pop
iret
dec
pop
pop
movsb
mov
int
int
dec
frstor
fstpt
shr
adc
fmul
loop
faddl
cmp
cmp
imull
paddsw
icebp
jns
hlt
sub
je
xor
fdivrl
sub
cld
mov
sahf
out
call
push
out
jle
cmp
xchg
mov
daa
out
daa
lret
inc
xor
sub
std
shll
jle
push
int
or
test
iret
cmpsb
xchg
sub
push
mov
sti
cmpsl
dec
inc
loope
movlps
sub
repz
bound
daa
sbb
je
sub
loop
jecxz
scas
jb
popa
pop
fimuls
cmp
int
cli
sbb
pop
fs
xchg
xchg
cmp
ds
cmp
inc
push
das
mov
stos
pop
or
xor
std
and
cmp
fistpll
cltd
icebp
addr16
pop
push
mov
or
sbb
es
shlb
adcl
jae
lods
mov
xchg
fdivrl
xchg
pop
sub
int3
pop
jmp
aad
pop
xor
mov
cmp
sahf
or
lahf
add
xor
sbb
xchg
andb
push
jne
jbe
and
shrb
lds
xchg
repz
mov
dec
dec
test
sahf
addb
cli
sub
mov
ficoms
lea
lods
loope
adc
leave
push
imul
push
cmp
iret
or
cmp
mov
jnp
xchg
jmp
dec
cltd
repnz
je
insb
cmp
mov
mov
jnp
mov
sbbl
or
lds
mov
stos
inc
cmp
dec
test
push
outsb
aad
jbe
test
inc
ficoml
popf
jb
insb
push
cs
push
mov
xchg
mov
push
inc
sbb
sub
mov
or
rorl
jle
les
jle
and
sbb
sahf
imul
mov
pop
cwtl
rcll
mov
out
jns
loopne,pn
mov
lock
hlt
scas
sbb
mov
jo
mov
scas
xchg
sub
fwait
mov
push
repnz
pop
inc
xchg
orl
cltd
loopne
dec
or
cmp
dec
cli
jno
insb
cmp
loope
add
cltd
mov
push
repnz
lcall
popa
dec
sub
mov
cli
ss
push
jmp
js
add
fwait
mov
adc
xchg
repnz
out
or
repz
arpl
fcmovu
int
adc
scas
xchg
push
pop
lds
mov
fsubrl
mov
in
jecxz
pop
mov
pusha
enter
add
jg
lods
sbb
cmp
mov
jmp
rolb
or
lret
scas
pop
xchg
push
and
xlat
xchg
adc
inc
test
lock
sbb
rclb
mov
outsb
mov
pop
pop
repz
in
sub
mov
int
scas
not
data16
jae
pop
adc
mov
out
aam
ljmp
stc
ja
fldenv
sub
insb
js
jae
mov
daa
sub
or
cmpsb
or
push
push
sub
xchg
sarb
jmp
sub
inc
jg
jb
popf
mov
std
imul
nop
test
lods
adc
mov
shll
jmp
in
arpl
cmp
enter
xor
test
mov
mov
popl
jo
xor
je
movl
and
test
xorl
and
cltd
xchg
dec
sub
add
out
loope
fucomip
mov
or
jl
enter
js
icebp
in
ds
bswap
xlat
xor
pop
ficoml
push
add
movsb
gs
adc
add
jp
mov
fcoms
arpl
pop
and
lock
dec
xchg
outsb
rcll
mov
mov
addl
and
and
les
stos
pop
dec
cmpb
ret
jo
repnz
sbbl
mov
mov
sub
mov
jnp
imul
add
popa
ds
adc
inc
mov
inc
cmpsl
add
aas
int
clc
xchg
mov
orb
mov
sti
mov
mov
jne
xchg
jg
xchg
into
lods
add
sub
push
lods
sub
in
pop
inc
outsb
ja
leave
mov
shlb
mov
and
mov
inc
dec
rol
pop
movsl
js
jbe
mov
mov
jae
add
or
lds
dec
jne
xchg
sahf
nop
movsl
xchg
mov
jecxz
lret
mov
or
push
dec
fnstenv
xchg
test
mov
jb
mov
mov
and
mov
enter
dec
sarl
sub
outsb
lods
mov
icebp
rclb
cmpsb
add
fnsave
cld
andb
add
and
scas
sub
pop
fcoml
popa
cltd
inc
and
jns
outsl
dec
sbb
out
jmp
mov
jle
lret
insl
hlt
in
pop
sbbl
cmc
xor
lods
pop
dec
xchg
cmpsl
push
ss
cmc
and
inc
out
sub
in
cmp
pop
and
andb
jmp
rol
fcomp
orb
test
mov
in
mov
or
mov
mov
xchg
mov
iret
mov
mov
in
lret
inc
sbb
fmul
mov
mov
sahf
dec
mov
mov
mov
aaa
sub
jne
dec
adc
es
xchg
aas
stc
js
dec
aam
pop
push
xchg
cwtl
scas
jns
cmp
cld
hlt
jge
push
es
pop
push
pop
popf
jbe
push
sahf
test
icebp
pop
test
ret
cmpsl
aad
mov
xor
nop
push
pop
xchg
hlt
lods
dec
add
fcomi
mov
cli
or
leave
outsb
sbb
lods
mov
jecxz
mov
js
xlat
outsl
dec
xlat
ja
sbb
fildll
add
rcll
sub
in
mov
sub
sahf
lea
cmpb
jp
xor
and
mov
push
push
add
pop
pop
fbld
push
adc
out
jae
dec
filds
or
or
scas
enter
outsl
lods
popa
and
pop
sub
sbb
mulb
aaa
lahf
loopne
dec
adc
divl
int3
or
iret
xchg
or
and
push
push
iret
jne
mov
add
loopne
push
xlat
cmp
xchg
mov
sbb
mov
fs
fsubs
xchg
mov
cmp
int3
shrl
mov
adc
adc
inc
sub
ds
loope
mov
orb
mov
pop
data16
into
xchg
rorl
cwtl
sub
jle
inc
inc
movzwl
das
push
mov
adc
nop
or
adc
inc
lock
insl
xor
mov
mov
bound
fwait
mov
jbe
dec
lret
and
mov
xchg
sub
stos
push
daa
lahf
pop
pop
ss
imul
cmc
rcll
cmp
lahf
mov
aam
adc
push
or
lcall
xchg
push
push
lret
pop
cmpsb
cmp
mov
fs
xor
rcll
ds
push
xor
push
push
int
inc
inc
adc
xchg
mov
ret
xchg
pop
lea
sub
xchg
dec
movb
outsb
imulb
sbb
repnz
push
aaa
aaa
and
jl
mov
lea
stc
sub
jl
pop
mov
shl
scas
stos
aaa
jg
std
test
rclb
and
xchg
imul
push
lcall
loop
xor
mov
jae
clc
fwait
imul
cli
pop
mov
outsl
es
into
fcmovu
mov
mov
fdivl
mov
mov
sahf
fiaddl
faddp
xlat
xor
fidivrs
lret
inc
arpl
scas
jle
jg
xchg
sti
pop
movsl
jp
rclb
loope
out
test
scas
adc
adc
icebp
inc
lcall
mov
or
pop
jg
aas
sbb
hlt
loope
lahf
xor
push
pushf
or
pop
das
outsb
add
or
jl
mov
mov
pop
mov
dec
add
mov
pop
mov
xchg
and
fsubrs
loop
lods
fwait
iret
mov
mov
adc
and
adc
pop
mov
lret
and
pop
aaa
and
and
clc
sbb
call
stos
popa
orl
mov
mov
aaa
add
adc
leave
std
pop
cs
push
mov
push
mov
ljmp
ret
xor
mov
inc
nop
fadds
pop
mov
xchg
arpl
cmc
pop
jp
cmp
push
outsb
pusha
xor
inc
lods
mov
push
xor
jae
xchg
or
xchg
push
cmp
aas
adc
or
mov
push
cli
jne
push
stos
mov
or
or
add
jne
aad
sti
mov
jge
mov
jge
cmp
jmp
rorl
mov
daa
rorb
jecxz
gs
and
lret
adc
mov
aas
and
xor
mov
push
cmp
inc
xor
xchg
sub
jg
cmp
in
jnp
addr16
pusha
or
outsb
sbb
in
and
shll
xchg
loopne
inc
jno
gs
stos
test
pop
cmpsb
gs
sahf
cli
mov
rorl
jbe
int3
fstpl
pop
fsubr
cpuid
cmp
arpl
and
pop
in
sub
xchg
ds
or
mov
push
test
rcrl
mov
pop
inc
sti
mov
mov
mov
orl
cmp
into
push
push
adc
sbbl
jbe
rol
lret
cmpsb
fnsave
push
sbb
scas
inc
rcrl
cmp
icebp
jle
test
popa
sti
clc
xlat
fiadds
cli
out
clc
psubusw
cmpsl
in
adcb
cmp
into
outsb
sbb
outsl
add
xchg
and
arpl
push
cltd
inc
sub
lret
daa
cmp
dec
iret
cld
mov
dec
mov
jnp
mov
add
dec
js
adc
xor
pop
sbb
dec
fs
mov
ljmp
mov
test
aad
adc
int
mov
cmpb
inc
push
sbb
sub
add
push
cltd
push
inc
fnstenv
in
or
ret
stc
and
gs
adc
adc
nop
or
mov
scas
stos
mov
push
in
dec
jb
pop
data16
lods
test
out
jg
cmp
cmp
leave
imul
lods
pop
lock
xchg
push
and
sbb
call
loop
lock
fs
adc
mov
subl
or
push
cmp
push
arpl
lods
add
jmp
pop
adc
xor
push
jg
imul
out
or
into
xor
sub
dec
lods
in
inc
sub
loop
loope
push
push
stc
pop
adc
cld
je
dec
pop
inc
add
scas
sbb
fadd
or
fwait
test
xorl
xor
out
adc
ss
dec
loopne
add
push
rclb
ficoms
shl
cs
seta
icebp
jnp
mov
repz
mov
negl
mov
lds
lret
loope
imulb
daa
push
js
or
repnz
cmp
xor
std
imul
cmpsl
xor
in
fisubs
sub
pop
sub
inc
stos
mov
push
scas
iret
dec
xor
fistl
scas
mov
dec
push
daa
mov
mov
ret
out
sub
xchg
mov
fs
mov
arpl
sbb
cmpsl
sub
mov
or
mov
nop
pop
xorl
sti
insl
and
mov
or
sti
jle
scas
jl
jns
cmpsb
or
inc
xchg
scas
lret
sbb
xor
iret
aad
push
dec
dec
push
push
das
fdivl
lock
fsubrs
push
lods
jae
shlb
movsl
jmp
out
imul
sbb
and
mov
dec
adc
pop
cltd
jbe
add
fldl
js
jbe
push
movsb
sbb
add
sub
imul
jge
stc
movsl
jo
cmp
jbe
lret
outsl
ja
push
push
repnz
fisubrs
push
mov
pop
push
sbb
popf
sbb
ljmp
imul
shrb
pop
dec
mov
int
sbb
push
bound
xadd
adc
sahf
push
loopne
scas
andl
sbb
movsb
out
jmp
add
mov
sti
jecxz
cli
stos
pushf
scas
dec
or
test
push
aaa
rolb
pusha
mov
cmpsl
pop
movsl
arpl
pop
loopne
ja
mov
dec
sbb
daa
nop
mov
int
gs
mov
lock
int3
insl
add
add
sahf
mov
xchg
and
mov
fcoms
xchg
and
insl
dec
fdivrp
adc
mov
mov
mov
scas
cmpsb
pop
pop
inc
dec
sub
xor
add
push
push
mov
loop
and
mov
pop
loope
out
lods
mov
or
xor
pop
jmp
pusha
and
pop
mov
out
push
cmpsb
outsb
test
push
int3
sbb
mov
adc
into
jno
inc
arpl
lret
movsl
lds
bound
inc
stos
add
inc
xor
inc
add
fs
dec
subb
sub
dec
arpl
push
pop
xchg
ficoms
inc
out
xchg
jl
je
pop
sub
xor
enter
pop
int3
int3
xchg
iret
lock
popf
xor
mov
jmp
mov
sbb
xadd
jmp
sahf
xchg
int3
mov
shl
xchg
rclb
das
xchg
fldt
jle
cmp
loope
pop
jo
xor
adc
imul
addr16
or
out
cmp
inc
xlat
adc
mov
ret
jae
xchg
in
ja
sbb
xor
in
es
ffreep
add
jnp
imul
fs
adc
rorb
test
push
xor
scas
test
mov
cltd
xor
scas
imul
repnz
mov
shl
mov
adc
push
inc
or
addl
jnp
pop
out
xchg
lods
adc
jne
test
lods
mov
repz
jp
and
or
pop
dec
movsb
es
ret
iret
add
shl
sub
mov
outsl
xchg
xchg
xchg
incl
popf
adcb
lret
pextrw
je
out
adc
lcall
sub
dec
xchg
sbb
cmpl
or
out
sbb
or
dec
cmp
pop
fiadds
sbb
or
dec
cltd
sbb
pushf
call
popf
cmp
adc
jle
pop
lahf
dec
add
leave
and
mov
test
lods
jmp
out
push
int3
sbb
or
aas
pop
and
mov
lcall
inc
xor
rcll
ds
inc
ret
jmp
outsl
fwait
push
xchg
fnstsw
icebp
lret
ds
jb
int
pop
and
sub
pop
and
sub
inc
cmpsl
hlt
xchg
jns
les
cmp
je
or
xchg
daa
shlb
dec
jne
and
jb
mov
jle
in
in
dec
rcll
or
pop
and
xor
subb
out
jmp
mov
scas
in
xchg
fwait
aas
test
cmpsl
push
push
mov
std
or
add
jb
push
jge
outsb
sub
inc
out
sti
dec
ret
gs
popa
mov
or
pop
ret
jae
push
mov
mov
outsb
push
movsl
add
sti
stos
sbb
mov
jno
andb
ss
add
cmp
jae
jl
jg
test
sub
ja
icebp
mov
mov
mov
iret
lds
call
scas
xor
addr16
adc
pop
movb
movsb
pop
or
stos
arpl
cs
mov
adc
out
cmp
nop
loopne
xchg
push
loope
mov
cltd
sbb
int3
aam
lahf
sub
call
jmp
ja
mov
test
mov
pushf
icebp
add
pushf
or
add
int
xchg
lret
int3
adc
add
mov
cmpsb
loopne
dec
push
and
xor
scas
outsl
inc
mov
les
adc
dec
cmp
dec
pushf
sarb
push
test
test
jge
pop
lods
fsubs
test
xor
mov
lcall
fdivs
and
add
inc
and
leave
xchg
xchg
enter
add
and
sub
xor
dec
insb
xchg
out
lret
test
lret
in
inc
imul
lcall
imul
mov
sbb
out
icebp
or
pop
lds
jo
pop
stos
mov
add
test
add
xchg
les
xchg
sahf
xchg
repz
and
push
outsl
cmpsl
cli
jge
out
xchg
mov
ficoml
stos
leave
push
nop
mov
bound
mov
sbb
aam
mov
mov
idivb
mov
xor
test
jmp
sbb
and
popa
jno
xchg
ss
int3
xor
add
cmp
mov
lods
lret
or
and
pop
sub
cmp
sbb
mov
mov
mov
or
sub
add
in
movsl
mov
and
pop
lcall
ss
mov
lret
addr16
ljmp
cmp
sbb
test
xchg
jecxz
sub
ret
rol
jp
adc
sub
shrb
aam
jb
mov
les
inc
xor
sub
xchg
fdivl
adc
sub
xchg
or
push
adc
lds
incb
scas
enter
pop
jge
jp
pop
pop
jecxz
roll
in
je
sarl
ret
pop
scas
jno
dec
dec
xlat
xor
xchg
pop
hlt
push
test
cld
fsubrs
int
fstpt
rcll
sbb
jge
mov
and
mov
mov
mov
inc
movsb
cmp
jg
xchg
cs
dec
stc
sbb
dec
pop
rcl
sub
xchg
cmp
push
shrl
xchg
pop
jmp
sbb
and
fmulp
jnp
icebp
cs
popa
fsubrl
das
ja
xlat
iret
das
jl
lret
lcall
pusha
fsubrs
push
add
fnstcw
sub
inc
test
mov
push
mov
je
aas
mov
mov
jns
lret
cltd
ror
mov
imul
mov
cmp
mov
pushf
pop
and
rcrl
addb
add
fsubs
popa
push
bound
mov
and
sub
mov
insb
pushf
pushf
mov
ds
mov
and
clc
dec
xchg
xchg
mov
scas
pop
subb
xchg
int3
loopne
aam
jp
xchg
xchg
dec
ss
xchg
lock
aam
int3
fisubl
jno
pop
lcall
adc
pop
jmp
jl
lar
mov
push
jne
imul
cmovg
out
mov
add
add
fs
add
push
cmp
jecxz
lods
xor
pop
mov
or
dec
mov
dec
call
mov
aad
inc
icebp
xchg
fisubl
jb
scas
jge
fsubl
jl
and
scas
jne
mov
sahf
nop
cmp
in
mov
rcll
jle
cmc
outsb
rorb
pop
rcrb
in
or
jl
xor
test
mov
mov
shlb
jbe
push
hlt
sahf
jae
lcall
lods
iret
pop
xlat
ret
lahf
mov
nop
mov
shll
xor
fbstp
insb
mov
jbe
lds
dec
push
pop
leave
popa
and
fdivrs
cmp
add
cmc
insl
fisttpl
jl
push
lret
xor
add
jmp
sub
push
jns
push
sub
test
add
and
inc
mov
gs
xchg
and
push
sub
in
push
insb
mov
leave
or
les
repz
loope
xchg
insl
jb
and
push
mov
fsubr
sbb
mov
sbb
xor
sti
mov
loopne
cltd
sti
loope
and
dec
aam
ss
imul
and
scas
fdiv
lock
fldl
lcall
mov
cmpsl
pop
pop
xchg
xchg
leave
mov
push
insl
adc
pop
aas
xchg
push
add
xor
int
sbbb
std
xchg
sbb
xchg
and
inc
pop
dec
sahf
enter
loop
add
rcl
pop
roll
outsl
cmp
dec
xor
in
jne
pop
repnz
jle
jno
push
adc
mov
nop
xchg
push
and
mov
push
int
dec
fldt
inc
mov
push
push
aaa
jle
cmc
or
fs
lahf
or
cmp
jo
test
or
pop
pop
cmc
in
subb
add
or
ret
lds
jl
andl
aas
clc
inc
adc
lods
scas
xor
push
cli
mov
mov
mull
js
shlb
adc
xor
fldl
scas
xlat
mov
shrl
sbb
jnp
pop
shl
sub
xchg
std
adc
jg
mov
fwait
aam
xchg
inc
mov
cmp
or
in
xor
pop
sbb
test
jp
leave
call
push
mov
inc
arpl
dec
stc
or
mov
stos
stos
insb
ror
mov
int3
hlt
sub
push
aam
adc
shrl
sub
mov
test
sbb
jl
inc
testb
jae
out
cmp
outsl
sbb
sbb
filds
icebp
mov
lods
jae
sbb
xor
sti
leave
clc
outsl
loopne
pop
cmp
xor
in
lahf
push
mov
mov
pop
lcall
mov
mov
mov
outsb
ja
popa
popa
test
test
mov
int3
inc
inc
mov
xchg
in
xor
inc
mov
mov
push
fstpl
adc
add
in
data16
ljmp
insl
lcall
push
enter
cld
sub
in
dec
cmpsl
jo
xor
aam
mov
pop
jle
mov
cli
je
jbe
mov
cmp
icebp
iret
mov
and
push
mov
cld
idivb
lods
hlt
pop
mov
addr16
pop
out
push
sbb
cltd
andl
loope
dec
mov
push
outsb
aad
xor
adc
mov
mov
mov
lret
adc
lods
mull
pop
xor
pop
jge
cld
movsl
or
imul
mov
leave
jp
mov
popf
adc
and
popa
lock
int
push
xor
std
jne
cs
mov
and
arpl
push
mov
mov
enter
mov
fs
cs
outsl
test
push
jns
outsl
or
test
ret
or
inc
in
mov
pusha
ror
nop
xchg
sbb
in
addr16
das
dec
loope
adc
adc
xor
lahf
dec
repnz
cmpsb
stos
jp
add
mov
mov
pop
inc
push
or
subl
inc
test
add
cmpsb
cmpsb
pop
aaa
notb
sbb
dec
cmpsb
jp
inc
fstl
xchg
push
ss
mov
mov
xor
sub
jecxz
imul
ret
lret
push
mov
lret
out
test
sub
xchg
cmpsl
adc
scas
add
inc
lds
cmp
cld
dec
jge
fsubrs
sbb
cmp
and
lea
lock
add
sarb
inc
pop
mov
mov
decb
nop
pop
jns
jns
cld
popa
popf
jns
and
push
sbb
xor
inc
mov
gs
mov
js
pop
jle
mov
shrl
pop
lea
in
std
mov
js
ss
adc
jp
inc
sub
ret
imul
jmp
data16
pop
movsb
int
jle
hlt
stos
sti
and
popf
pop
and
add
xor
adc
push
or
dec
icebp
inc
jg
jo
scas
push
cs
jbe
mov
aad
mov
imul
pop
cmp
data16
inc
dec
int3
shlb
sbb
inc
or
lret
shrb
jb
jl
inc
dec
sub
or
dec
outsl
pusha
sub
insb
jnp
shrl
in
or
std
leave
shlb
in
sbb
mov
ret
jp
xchg
daa
xchg
sbbl
in
loopne
or
mov
rorb
xor
mov
xchg
ja
push
fwait
js
sub
leave
mov
mov
jge
sbb
adc
cmp
xor
je
mov
jle
inc
or
jbe
cmp
mov
push
mov
dec
inc
hlt
add
xchg
mov
cmp
rorl
fucomip
mov
jge
jno
stos
fcmovnb
in
jle
or
adc
mov
inc
test
fxch
dec
mov
or
jmp
mov
mov
xchg
and
inc
sbb
push
mov
xchg
out
xor
pop
fdivrs
pusha
mov
xchg
jnp
sub
call
fbld
adc
out
cmpsb
repnz
inc
and
add
loope
mov
cmp
sub
arpl
test
adc
add
lea
sub
mov
xchg
stos
in
lock
loopne
inc
jbe
clc
sbb
mov
sti
adc
lcallw
add
leave
loope
dec
dec
shlb
cmpsb
or
sti
dec
scas
lret
push
lahf
shl
add
jbe
inc
insl
mov
mov
push
push
mov
clc
ljmp
pushf
roll
mov
loop
stos
mov
cmp
mov
lock
call
mov
mov
mov
loope
test
push
inc
cmp
cld
loop
push
inc
mov
cmc
test
jmp
out
mov
jno
decb
pushf
imulb
sub
enter
sti
pop
je
movsb
jae
addr16
jnp
pushf
jno
dec
mov
push
push
repnz
or
in
jb
cli
dec
sbb
push
mov
mov
xchg
or
push
or
jl
aam
aad
data16
aam
test
shrl
sub
sub
dec
adc
in
dec
dec
ja
mov
dec
aad
call
int
add
mov
movsb
pop
inc
cmc
add
dec
push
test
bound
lds
mov
push
mov
fsub
mov
pmaxub
rcll
imul
mov
cmp
pop
mov
iret
add
dec
push
loop
sub
aaa
pop
dec
fwait
lods
das
rolb
jae
mov
es
jge
inc
loop
hlt
mov
outsb
outsl
clc
jb
std
jmp
xor
and
popa
cmp
std
nop
lock
dec
clc
lcall
andb
or
sbb
mov
insb
sbb
xor
and
je
inc
sbb
or
cld
movsl
sub
mov
mov
jae
into
mov
and
inc
pop
pushf
popa
fcmovnbe
je
xchg
and
out
dec
push
adc
pop
into
lret
sbb
shrl
pop
in
sub
test
loopne
cmp
mov
jae
adc
dec
arpl
jae
mov
rcll
aas
int
cmp
dec
cli
imul
xchg
repz
inc
daa
sub
sub
cli
inc
xchg
insl
aas
aaa
adc
or
or
in
je
mov
mov
pop
arpl
fcomp
into
inc
push
popa
imul
or
testl
pop
xchg
test
shlb
mov
mov
aad
adc
or
filds
or
and
add
fcomps
push
sbb
outsl
subl
dec
insl
pop
and
divb
lds
ljmp
dec
pushf
outsl
mulb
popf
std
xor
sbb
out
addr16
pop
fmuls
pop
es
dec
jle
push
rcrb
pop
dec
sbb
out
cwtl
imul
jbe
cmp
dec
pop
mov
push
cld
lcall
loope
shr
lret
cmpsl
bound
cmp
and
fcomi
sbb
arpl
in
adc
stc
loope
rcl
push
cwtl
mov
jl
xchg
in
cmpsl
movsl
nop
xchg
leave
mov
xor
push
cwtl
cmpl
inc
jge
jl
or
shlb
mov
jp
mov
out
es
inc
clc
or
pop
sti
rcrb
js
xor
movsl
aas
shlb
jle
and
mov
aam
imul
push
int3
pop
ret
cmp
xchg
cli
fs
ds
aad
xor
pusha
cmp
and
aaa
lock
sti
addr16
iret
enter
add
out
idivl
lret
cld
mov
xchg
and
push
or
inc
push
dec
mov
in
cmpsb
or
jle
or
inc
adc
gs
xchg
shll
add
mov
sub
or
cmp
adc
imul
orb
inc
cmpsl
ja
daa
bound
and
push
mov
ret
adc
push
and
and
loope,pt
rclb
popf
xor
push
sbb
push
das
sti
cmp
xor
in
loope
or
das
das
jmp
mov
orl
dec
subb
pop
dec
sbb
aad
shll
inc
mov
pop
push
dec
repz
aas
aad
loopne
xchg
adc
or
idivl
jne
xlat
int
adc
mov
std
in
jo
push
test
mov
mov
mov
shl
or
shll
add
lcall
data16
ficoms
shrb
push
repnz
cmp
inc
loop
or
clc
ja
inc
fidivrs
lret
push
jmp
lds
adc
or
aam
cmp
sub
enter
insl
xor
hlt
sbb
fisubl
pop
cmpl
adc
inc
sbb
push
in
les
and
cwtl
cmp
sub
jmp
mov
dec
xor
dec
fistl
xor
inc
xor
lcall
xchg
adcl
cmp
gs
pop
in
jne
sub
bound
and
loopne
outsb
cmp
adc
repnz
or
xor
xchg
in
sub
sahf
dec
pop
mov
and
and
cltd
mov
mov
insl
mov
jl
fiaddl
mov
jle
cmp
pop
pusha
jle
repnz
xchg
not
mov
bound
es
inc
rorb
aam
sub
arpl
inc
push
in
js
lcall
jb
cmp
jae
cmp
jp
cli
sbbl
push
in
dec
gs
test
jg
stos
inc
cmp
add
push
jg
pop
je
and
mov
out
dec
push
inc
pop
aas
xchg
mov
nop
sbb
pop
sub
adc
bound
or
test
inc
jns
push
int
mov
mov
lcall
inc
js
jle
or
sbb
or
add
cmc
in
lret
repz
xor
or
adc
push
xor
loope
cltd
fstpl
xchg
push
loop
fstps
jns
dec
sbb
jno
clc
sbb
or
sbb
decb
shll
fucom
and
jle
xchg
nopl
adc
jl
loopne
mov
aad
es
add
stc
lea
or
jle
sub
scas
xor
xchg
pop
push
ficomps
xor
mov
jb
jnp
loope
rcr
jne
mov
call
push
sbb
loopne
pop
ds
push
fnstcw
mov
xchg
roll
sbb
fildl
mov
xor
sub
cmc
jnp
push
cmp
pop
pop
dec
test
push
out
mov
xchg
jmp
mov
mov
jno
pop
inc
call
jmp
pushf
push
and
mov
sub
push
mov
addr16
and
xchg
adc
ds
pop
sarl
es
mov
and
and
xchg
das
and
js
mov
ljmp
lods
aaa
test
sub
fisttpll
mov
cmp
arpl
adc
adc
jnp
out
ja
iret
ret
insb
adc
pop
cltd
cmpsb
repnz
push
sahf
lods
loopne
add
div
enter
mov
pop
ljmp
dec
mov
add
xor
adc
not
bswap
inc
mov
inc
iret
and
pop
hlt
xchg
es
shl
pop
fwait
lret
in
loop
jnp
or
add
add
mov
adc
cmp
pop
mov
adc
pop
and
sti
fdivl
pop
pop
fnstsw
sahf
xchg
adc
mov
inc
in
xchg
sbb
inc
lahf
push
cltd
xor
or
cmp
mov
push
lcall
lock
sub
mov
mov
xor
cmp
cmp
test
insl
push
ror
xor
or
cltd
mov
lods
dec
pop
pop
inc
sub
test
repz
popf
mov
test
xchg
fst
push
push
mov
pop
mov
lret
dec
dec
sbb
pop
popa
insl
and
xchg
sahf
mov
sbb
lahf
sub
and
ss
popf
outsl
lret
jg
or
mov
hlt
push
mov
sbb
ss
out
int3
mov
sahf
mov
mov
add
push
cmpsl
push
fmull
mov
add
fxch
and
mov
test
dec
hlt
jb
jg
fistpll
xchg
or
add
inc
cmp
xchg
cmp
aaa
sbb
pop
pop
xor
jnp
sbbb
arpl
pop
adc
cmp
dec
imul
mov
pushf
add
or
and
inc
xor
out
lds
cld
xchg
pop
jno
nop
ret
add
pop
inc
cmp
mov
or
mov
xor
inc
lea
hlt
add
xor
je
jmp
mov
daa
push
xor
push
mov
clc
mov
sbb
mov
negb
lret
mov
jo
jae
mov
cli
pop
test
lret
rorb
add
sub
cli
sti
or
adc
aaa
gs
add
iret
adc
ret
push
mov
rorb
int
dec
in
mov
add
div
je
lret
mov
lcall
mov
jnp
daa
or
and
icebp
ficoml
cmp
imul
ljmp
fistl
sub
dec
xor
and
or
ss
sbb
pop
jle
add
imul
push
loopne,pn
mov
push
loopne
cwtl
gs
js
stos
and
jbe
shll
adc
or
sti
cmpsl
repz
adc
mov
cmp
mov
cmp
sbb
add
dec
xchg
sub
pop
stos
in
ret
mov
adc
cmp
cmp
or
test
sub
pop
sbb
movsb
rclb
ja
adc
mov
dec
out
mov
in
loop
clc
push
add
push
ljmp
adc
inc
jge
jl
jno
or
ljmp
scas
or
push
popa
aaa
cmp
mov
mov
jnp
arpl
adc
add
jp
lods
fucomp
mov
movsl
stos
cmp
and
scas
dec
or
jmp
sub
sbb
jecxz
es
in
rol
gs
and
ficoml
iret
imul
xor
imul
out
pop
addl
stos
push
push
outsl
clc
mov
push
inc
sbb
movsl
jl
sub
call
insb
dec
inc
mov
push
js
orb
xchg
mov
sarl
pop
ret
xchg
decb
loope
lcall
dec
and
ss
inc
jns
test
out
fldenv
pop
stc
dec
ror
sarb
pop
add
add
inc
cld
push
fstl
jg
push
in
and
scas
adc
scas
lods
inc
testl
sub
jg
push
in
push
pop
pop
push
xchg
pop
daa
inc
subb
mov
sub
ficoml
test
out
jbe
mov
or
and
lock
in
clc
sahf
mov
dec
adc
in
inc
roll
in
mov
xchg
inc
mov
xchg
cmp
icebp
jnp
fsubrs
push
xor
add
sub
cwtl
les
pop
icebp
push
sub
mov
fildll
adc
xor
lahf
mov
jb
dec
clc
xor
loopne
inc
xor
data16
out
inc
sahf
pop
xor
pop
push
jns
xor
cmp
inc
aad
pop
movb
cltd
inc
mov
fnstsw
jne
jnp
push
mov
popf
jno
test
pop
call
repnz
pop
out
cmp
test
shrl
mov
xchg
std
in
sub
or
iret
fstpt
push
dec
dec
mov
jl
ret
repz
cmp
inc
xor
mov
lock
jns
aaa
outsl
sarl
lea
inc
add
mov
xchg
pop
aam
out
fisttpll
jecxz
outsb
dec
add
or
stc
jp
ss
add
shr
popf
push
sub
push
fnstcw
lret
mov
fidivl
std
xor
adc
jnp
pusha
push
stos
and
mov
out
data16
pop
push
sti
insl
xorl
loop
sbb
sub
bound
jb
mov
out
cmp
pop
negl
jmp
or
dec
shll
enter
repz
mov
inc
mov
inc
add
mov
pop
shl
cmp
lea
pop
and
mov
leave
aad
aam
addr16
adc
aam
push
out
and
mov
or
rcr
int
sub
pop
jle
push
cmp
jbe
sti
shrb
mov
cs
aad
lret
cmpsl
xchg
ljmp
jge
imul
out
mov
mov
fsubl
in
and
enter
dec
bound
fnstenv
insb
cli
xorb
xchg
iret
fdivl
mov
jns
push
jae
mov
mov
jbe
dec
in
inc
outsb
lcallw
pop
jge
in
fsubp
ret
adc
insb
repnz
cmpsl
icebp
pusha
jbe
xchg
cmpps
xchg
leave
sti
push
push
cmp
pop
lcall
or
pushf
push
jg
xlat
xor
cmc
hlt
xchg
sub
cmc
nop
cmpsb
divl
dec
aad
jae
mov
and
rcr
ret
mov
sbb
fs
lods
push
cltd
pop
cmp
fdivl
mov
xchg
mov
add
add
inc
loope
movsb
mov
pop
js
dec
inc
mov
in
movsb
ja
mov
test
test
cmpsb
ret
test
mov
rorl
cwtl
stos
inc
mov
icebp
jbe
jns
outsb
dec
nop
aaa
sbb
enter
pop
cltd
andb
sarb
sarb
push
out
insb
cmpsl
jg
out
jno
xchg
and
orl
aas
adc
xchg
or
roll
aaa
dec
xchg
xor
shrl
mov
jecxz
inc
mov
pop
and
out
xchg
fdecstp
adc
loopne
fsubr
ds
fsubr
and
mov
cmp
js
orb
aam
pavgw
mov
jecxz
inc
mov
jle
out
lretw
push
mov
sub
jge
inc
mov
popf
cmp
aaa
aam
imul
dec
mov
cmp
cmovg
insb
push
xchg
stos
movsb
das
mov
notl
xchg
add
fdivr
les
sti
rclb
shlb
sbb
inc
loop
or
mov
adc
test
pop
cmp
idivl
dec
rorl
mov
hlt
ss
cmp
xor
mov
add
mov
cwtl
adc
shlb
add
adc
mov
cmc
int
test
mov
dec
inc
imul
push
lock
into
cmp
jg
jns
jle
int3
sbb
scas
dec
sbb
in
fdivrp
pop
jle
sub
fcmovne
fldt
push
sbb
xchg
pop
or
xor
cmc
cmp
into
pusha
sbb
aaa
scas
aaa
add
add
in
sbb
in
bound
stc
pop
fbstp
mov
cmp
lret
jmp
test
data16
scas
add
pop
aam
mov
mov
jecxz
lock
push
push
xchg
aad
adc
cmpsb
cmp
cmp
dec
cmp
popa
hlt
push
das
aas
dec
sahf
mov
cmp
sub
cmp
lods
cmp
outsl
inc
neg
sub
repz
andl
mov
leave
or
into
popf
xor
psllw
inc
icebp
pop
fwait
jmp
sbb
daa
add
cmpsl
movsl
jb
ljmp
xchg
std
mov
fs
outsb
movsl
aam
imul
orb
mov
ja
bound
or
and
lds
pop
jbe
jl
fnstsw
fcomps
mov
dec
call
sbb
push
test
movsl
dec
and
xor
push
pop
rol
shrl
add
lahf
xchg
mov
outsl
and
push
mov
jecxz
mov
push
aad
mov
pop
dec
jne,pt
mov
mov
jae
gs
insl
ds
jmp
dec
lcall
mov
cmovle
dec
push
leave
aam
leave
mov
mov
cmp
inc
jge
decb
mov
test
jns
cld
push
sbb
dec
jecxz
out
xchg
jecxz
sti
and
mov
pop
cld
stos
lock
imul
fdivrl
loope
and
pop
aam
mov
jns
add
mov
and
cmp
call
fadds
stos
push
imul
rol
enter
aam
add
sbb
test
adc
test
mov
test
sbb
inc
push
and
push
jl
push
push
xor
testl
add
pop
popf
xlat
adc
add
inc
clc
mov
mov
pop
pop
inc
hlt
addr16
arpl
shlb
sbb
repz
jbe
adc
inc
pusha
mov
mov
loopne
jnp
std
inc
outsl
dec
gs
mov
dec
out
cmp
fucomp
push
test
stos
xlat
pop
inc
inc
lods
daa
xorl
sub
mov
xchg
mov
xor
push
fsts
outsb
jmp
sbb
clc
ret
int
insl
cmpsl
mov
lahf
cltd
outsb
adc
mov
js
ficoml
mov
push
jle
jbe
and
mov
xchg
inc
sbb
jnp
out
mov
jmp
loope
lret
pop
lret
mov
loopne
scas
push
or
stos
inc
ljmp
jmp
add
loop
sub
cwtl
out
loope
pop
popa
and
jecxz
xchg
arpl
push
xor
loop
test
sub
mov
xor
adc
cmpsb
add
or
arpl
mov
mov
jle
scas
and
inc
or
lods
xchg
pushf
sbb
or
es
cmpsb
cmpsl
insl
or
cld
and
mov
fmuls
add
lea
pop
dec
insb
jns
xchg
mull
push
lods
fcompl
dec
jno
cld
push
mov
mov
mov
xchg
imull
fsubs
ret
ja
mov
sub
arpl
xlat
mov
inc
int
loope
sub
adc
and
xchg
push
push
dec
cli
dec
xor
call
xchg
pop
out
nop
movsl
movsb
inc
and
lret
mov
sbb
sbb
test
loopne
push
pop
loope
push
repz
mov
mov
mov
jnp
mov
lock
add
dec
outsl
inc
lret
or
cmc
adc
js
lret
jl
jecxz
test
rorb
or
adc
and
jb
icebp
mov
xchg
loopne
fisubrl
mov
pop
cmpsl
sbb
test
sub
inc
fwait
mov
les
pushf
lea
mov
int3
aam
les
push
push
and
movsb
aad
sub
clc
and
test
ror
jmp
es
loopne
lds
add
sbb
sbb
inc
push
out
mov
and
sbb
aaa
or
fcomp
ss
pop
and
cmp
jo
mov
mov
cmp
adc
pop
sti
sbb
rorb
mov
jo
sbb
mov
push
ja
push
outsb
cld
and
test
xor
cmp
sub
loop
push
out
mov
lock
jg
jo
popl
std
scas
lret
loopne
popf
popa
mov
fwait
icebp
inc
xchg
jl
in
jae
add
outsb
repnz
jg
jno
fistps
sbb
push
inc
cmc
jbe
repnz
xchg
adc
insb
push
xchg
cmp
pop
lds
test
loopne
jbe
cmp
cli
inc
mov
insl
movsl
clc
out
sub
dec
sub
ret
jno
push
aas
fs
push
mov
sub
mov
sub
mov
mov
cmpb
push
jnp
or
es
jne
lods
lret
stos
xor
movl
add
xor
jecxz
je
out
dec
mov
sub
out
pop
fisttpll
adc
mov
cli
in
jmp
mov
pop
mov
fs
shll
sub
lahf
and
jmp
push
xor
inc
fwait
inc
lods
nop
ud1
xchg
into
cli
fcmovne
cli
imul
pop
lahf
sub
dec
mov
ds
fs
movsl
xor
mov
mov
mov
fs
ret
std
in
xchg
and
cmc
push
jp
lea
out
add
icebp
incl
int3
pop
imul
fwait
or
arpl
adc
pop
mov
out
mov
out
leave
dec
cmp
test
jbe
outsb
mov
outsl
inc
and
aad
cmp
mov
pop
popa
sub
jge
shrb
adc
aam
jle
scas
pusha
in
add
ror
adc
ficoms
sub
mulb
mov
fdiv
mov
mov
fdivrl
add
jns
push
lahf
loope
add
jo
xor
andl
pop
jl
fwait
jns
cli
in
dec
fdivrs
mov
fcompl
pop
pushl
adc
int3
aaa
pop
out
dec
test
pusha
xchg
fsubr
ja
xor
es
call
xchg
outsb
and
or
rcrb
aad
sub
in
inc
sbb
dec
arpl
rolb
xchg
sarl
mov
aad
sub
pop
adc
jl
lret
lods
inc
lock
sti
mov
in
mov
mov
pop
lock
jb
hlt
add
push
cltd
jge
imul
insb
mov
pop
das
jae
xchg
mov
pushf
sbb
in
jmp
or
sbb
cmpsl
cmpsb
pop
or
push
pop
dec
aas
cmpsb
fildl
mov
pop
imul
xchg
push
or
cwtl
roll
scas
push
dec
or
sub
mov
jno
mov
in
imul
lcall
fdivrl
fisubrl
in
pusha
xor
rorb
jb
adcb
inc
xor
std
xchg
xchg
cmpsb
lods
cli
pusha
insl
sarb
jae
mov
clc
dec
adc
notl
pop
pop
popf
popa
out
pop
das
jb
pop
add
push
cld
roll
adc
scas
inc
push
mov
inc
insl
dec
jo
xor
imul
inc
or
pop
and
lds
push
dec
sub
mov
push
push
and
ss
cwtl
adc
and
dec
scas
jb
cmp
push
jbe
adc
movsl
cltd
adc
pop
andl
mov
lcall
iret
shlb
rorl
aas
in
cmp
out
fsubl
pushf
outsl
pminsw
testb
sbbb
jge
test
cmpsl
sub
adc
dec
ret
divb
fcmovb
pop
aas
lahf
mov
shrb
dec
lds
xchg
mov
push
jle
fmuls
and
cwtl
imul
call
sahf
mov
in
cli
pusha
aas
or
js
std
test
mov
cli
decb
aad
add
xor
mov
movsb
dec
xchg
sbb
leave
mov
or
cld
jp
xchg
push
jnp
pop
subl
mov
lahf
aaa
pop
mov
mov
in
or
repz
das
push
dec
lods
mov
insb
hlt
inc
dec
clc
and
mov
inc
aad
insl
sub
dec
xlat
subb
sbb
aaa
inc
jle
fcmovnb
repnz
and
leave
push
out
push
daa
mov
imul
lods
jl
mov
mov
andb
int
test
daa
mov
xor
loope
mov
xchg
loop
or
mov
shlb
aad
in
ficompl
les
sbb
out
ret
dec
shrb
cmpsb
pop
das
repnz
es
mov
add
sahf
add
in
mov
pop
pop
por
pusha
xor
loopne
xor
test
sbb
enter
cmpsl
lret
fdivs
jg
outsb
out
rcll
je
mov
jo
shrl
pop
ret
jmp
ret
jmp
lcall
mov
mov
adc
push
xor
jle
addr16
cli
mov
mov
xor
push
mov
add
xor
sbb
cmp
stos
sub
and
imul
cmc
xor
dec
pause
xor
lea
in
dec
gs
and
ljmp
mov
leave
add
cli
pop
imul
addr16
lret
shll
jp
fs
sahf
iret
rclb
lds
shr
adc
sti
xchg
xchg
imul
dec
out
adc
out
leave
mov
dec
jo
mov
leave
mov
mov
mov
xchg
aam
call
clc
stc
ds
adc
inc
sub
movsb
movsl
aaa
mov
xchg
movl
xor
mov
sbb
out
jbe
push
repz
mov
mov
add
frstor
fwait
and
jns
sub
addl
adcl
lods
adc
jmp
dec
lds
enter
xor
lahf
cld
jge
mov
push
xor
inc
stos
scas
push
mov
addb
fstpt
popa
xchg
addl
pushf
lea
cmp
sub
repnz
mov
xchg
fnstenv
inc
mov
sub
aad
je
pop
sub
sub
popf
dec
sub
cld
int
divb
dec
dec
mov
push
mov
inc
sub
lret
ja
test
push
mov
cwtl
sub
mov
ljmp
stc
insb
fwait
outsb
mov
pushf
xchg
out
adc
cmp
int3
jbe
int3
addl
mov
pop
push
mov
fbstp
aaa
pop
lcall
cmp
xchg
idivl
add
xor
push
or
daa
nop
dec
aas
adc
sbb
and
inc
test
ljmp
pop
jnp
ret
sbb
sbb
or
add
xor
mov
sbb
mov
dec
es
sub
mov
ja
xor
int
stos
nop
cs
popf
add
arpl
sub
sbb
mov
aad
rorb
mov
test
mov
sbb
shr
sti
add
test
rcl
sbb
push
icebp
icebp
xchg
add
std
dec
je
push
xchg
pop
lret
ljmp
call
loopne
test
sbb
js
gs
loope
inc
pop
mov
mov
fidivrs
dec
lds
or
ljmp
push
xchg
pop
add
es
lret
enter
sub
movhps
orl
cwtl
push
clc
add
sbb
mov
push
pop
jmp
stc
stc
mov
pcmpeqb
push
ja
jecxz
fmuls
mov
loop
push
lock
outsb
sub
mov
mov
add
mov
stos
adc
incb
shll
bound
mov
test
ret
lods
mov
and
test
mov
dec
dec
jbe
and
sub
movsb
incl
jmp
enter
sub
pop
mov
adc
mull
mov
mov
jo
mov
negb
sbb
iret
fstpt
addr16
jns
pop
cltd
cli
shrb
xchg
xchg
in
mov
int3
adc
lods
xchg
dec
pop
inc
repnz
ja
pop
xchg
repz
add
out
call
addr16
mov
mov
xor
mov
cmpsb
mov
out
mov
out
mov
add
iret
loop
or
jecxz
pop
or
or
je
popa
push
pop
jnp
js
adc
scas
fwait
stc
xor
jae
adc
and
fs
int3
lcall
rcl
in
clc
adc
jns
xor
push
cmc
sub
dec
das
pop
mov
mov
ftst
or
jle
cltd
std
fidivrl
es
mov
mov
cmp
jb
nop
stos
push
add
imul
movsl
outsl
out
jmp
fcompl
scas
repnz
pop
push
mov
xchg
jmp
fsubl
fidivl
cli
jns
push
push
rorl
gs
sti
test
stos
int
fisttps
pusha
lock
ret
loopne
lods
bound
sub
iret
stc
pushf
fs
inc
repz
das
stos
or
divps
or
iret
jg
add
mov
jp
enter
dec
into
aam
push
mov
add
aad
jmp
pop
and
lahf
mov
fisubrl
pop
cli
dec
ljmp
cmp
inc
xor
daa
lods
shll
loop
add
dec
dec
mov
mov
add
fistpll
popl
add
xchg
ret
and
sarl
aad
aad
mov
mov
add
stc
rolb
dec
push
pop
push
push
pushl
mov
test
add
sub
push
ret
call
movsb
sub
sub
mov
adc
icebp
iret
ret
test
sub
ss
push
rorb
xchg
cmpb
les
in
mov
movsb
pop
and
add
xchg
rclb
mov
push
cmc
push
and
adc
adc
sarl
daa
jmp
into
daa
pushf
pop
popa
pop
mov
fisubl
imul
call
push
and
jecxz
test
xchg
inc
jo
adc
cmp
mov
jno
testl
addr16
inc
test
in
lahf
jns
inc
shrl
or
jge
out
jns
orl
mov
andl
scas
orb
lret
fnstcw
dec
and
leave
pushf
cmpl
pop
out
ljmp
or
imul
and
dec
ljmp
out
jb
sbb
insl
lret
loopne
jbe
jae
dec
dec
insl
imul
fxch
std
lret
xor
loope
pop
push
mov
mov
push
into
push
fisttpll
sahf
movsb
xchg
xor
test
mov
jp
cmp
jb
jmp
sbb
mov
xor
ss
cmp
leave
loope
jge
insb
push
sub
push
inc
mov
mov
inc
jl
addb
pop
inc
sbb
dec
mov
adc
mov
and
js
cli
and
sti
js
jae
das
das
adc
pop
out
sbb
mov
das
mov
sbb
xchg
sub
dec
lock
cld
roll
imul
xchg
fcmovne
cs
test
pushf
push
push
scas
mov
xor
sbb
dec
adc
and
not
or
dec
add
int3
fsts
inc
outsb
popf
sub
push
inc
in
out
std
cmpsl
stc
or
cmc
jns
pop
ja
in
cld
test
add
jns
jns
arpl
push
fwait
and
repz
dec
test
xor
mov
inc
dec
push
cmpsl
inc
sub
stos
shll
out
inc
xchg
iret
push
movsb
xchg
in
xor
movl
mov
dec
in
add
lret
cmp
sti
inc
sub
mov
sbb
icebp
cld
pop
lock
in
in
lock
inc
jno
cltd
ret
add
into
aas
fpatan
inc
dec
std
sti
jle
xchg
xlat
aam
cmpsl
ret
push
mov
int
sbb
fcoms
inc
out
push
cs
jne
je
hlt
push
and
aam
fwait
pop
push
sbb
dec
ror
insl
dec
push
aas
repnz
fs
sbb
shrl
pop
xlat
pop
or
mov
int3
xor
jmp
shrb
insl
ja
enter
popa
fidivrs
xchg
test
fwait
or
cmp
dec
roll
out
loopne
lds
adc
xor
cmc
jno
daa
sbb
cmp
dec
inc
mov
xor
les
roll
mov
in
adc
ss
insl
call
xorl
les
push
sub
jg
cmp
fs
das
cmp
lret
xchg
pop
into
add
cltd
add
out
pop
pop
pusha
mov
lods
mov
mov
enter
add
cmp
mov
xor
in
ja
lds
mov
add
adc
out
imul
xchg
aad
lods
stos
jo
ret
inc
ds
mov
jno
inc
inc
stc
addr16
add
jge
outsl
jb
inc
xor
adc
or
out
loop
sarb
pushf
mov
out
imulb
nop
sub
mov
pop
std
ja
loopne
outsb
inc
jmp
mov
hlt
fadds
leave
mov
cmc
or
cltd
or
xor
pop
imul
mov
push
test
mov
adc
aaa
sti
out
jbe
cld
and
stc
cmp
sbb
jnp
test
loopne
lret
mov
les
ret
mov
sbb
cwtl
not
pushf
xor
push
sub
cmp
das
insb
shlb
das
lods
andb
scas
mov
pop
sbb
call
pop
cmp
jp
lds
in
push
sbb
xor
test
mov
mov
push
pop
enter
pop
lods
ljmp
ret
test
aas
cmpsl
enter
gs
mov
sub
cmp
lret
pop
xchg
mov
add
mov
inc
sahf
add
pop
pop
push
lock
stos
movzbl
cmpsb
jle
jg
and
push
jl
inc
subl
daa
fdivrl
ret
fsub
aad
and
scas
aas
cmp
or
es
push
xchg
ret
testl
inc
mov
pop
shrl
pop
or
loop
hlt
lahf
popf
lcall
and
sbb
mov
out
push
xlat
pop
bound
adc
mov
cwtl
jge
leave
loope
or
fmull
std
out
sahf
or
in
cmc
dec
mov
cmp
mov
jne
xchg
jle
and
jb
movsl
xor
dec
lcall
aad
dec
mov
mov
outsl
pop
stc
cmpsl
jo
mov
pop
push
sbbl
sbb
mov
or
lcall
jns
inc
movb
aad
loop
mov
pop
ror
dec
cmp
push
lock
shll
sub
mov
test
enter
jo
out
add
push
sub
out
mov
mov
lds
inc
insl
daa
sbb
jno
dec
mov
out
flds
scas
or
mov
not
xchg
mov
into
inc
jbe
testb
push
sub
dec
add
xor
popf
mov
iret
pop
mov
shr
xchg
push
mov
shll
jle
cmp
fwait
add
push
dec
mov
repz
dec
cmc
cmp
cwtl
xor
gs
jmp
mov
dec
cmp
in
test
jae
pop
jae
add
inc
pusha
xchg
js
cmpsl
in
mov
mov
gs
clc
mov
jg
dec
adc
subb
ja
inc
add
insl
dec
enter
mov
cmp
jp
push
sahf
into
in
lret
test
fiadds
push
xor
dec
mov
and
jg
mov
inc
leave
mov
ret
int
xor
cli
loopne
push
xchg
mov
fs
out
fcoml
lea
and
cmpl
push
add
dec
subl
aad
pop
cli
stos
jns
push
pop
inc
push
pop
mov
mov
in
cld
push
shrl
imul
or
sub
mov
pop
xchg
lcall
cmpsl
fisttpl
sbb
repz
add
cmp
int
xchg
bound
inc
orb
and
pushf
push
push
mov
dec
sbbb
push
dec
mov
inc
ret
cmp
dec
out
mov
push
mov
shll
stos
push
pop
lods
aas
bound
nop
das
test
xor
jle
jnp
shlb
ljmp
fwait
stos
in
pop
jns
cmpsb
in
dec
dec
mov
push
aad
in
mov
jmp
loope
repz
inc
ret
inc
out
inc
call
inc
xchg
pop
push
clc
out
loopne
push
lcall
nop
je
outsl
mov
ret
xchg
mov
dec
xor
pop
dec
pop
ljmp
out
mov
jo
fisubl
push
sbb
sbb
mov
xor
addr16
int
jmp
jg
out
sub
orps
in
xchg
inc
jg
enter
sub
les
adc
push
jbe
mov
in
ss
shr
lods
imul
test
bnd
push
fsts
subl
jns
pop
cmp
mov
cltd
xchg
mov
mov
insl
out
adc
test
adc
fmull
or
out
pop
cmpsb
jb
mov
mov
lock
mov
or
shrb
std
mov
ds
sub
nop
mov
fs
add
and
push
into
sbb
ret
push
sahf
or
adc
shrl
mov
movsb
jo
xor
xchg
insl
setnp
add
incb
cmp
mov
mov
sub
test
sub
sbb
in
mov
add
fmulp
or
cmpsb
in
loopne
dec
scas
adc
pop
ja
xchg
jp
fsubs
inc
sahf
fisubl
pop
aad
jp
shl
sbb
xchg
jl
ss
sub
test
cmc
int
mov
in
ja
out
jmp
arpl
or
loope
mov
push
fwait
nop
movlps
dec
fwait
popf
push
xchg
xchg
and
gs
pop
and
inc
loop
mov
bound
xchg
mov
in
xor
call
test
adc
test
inc
inc
cli
cli
lcall
xor
rolb
push
mov
ja
int
aas
aad
nop
mov
outsb
sub
ja
push
push
xor
jle
cmc
sbb
fsqrt
fdivr
dec
cmpsb
mov
jae
clc
scas
jae
jb
xlat
cmc
fwait
pop
adc
lea
sbb
push
cltd
enter
mov
inc
mov
ljmp
or
jmp
jae
pop
psubusb
movsb
adc
sub
mov
or
and
leave
std
mov
mov
lcall
dec
or
pushf
xor
std
orl
adc
icebp
movsb
or
inc
lea
insb
ficompl
sti
shl
push
xchg
xor
adc
lds
leave
lds
mov
daa
xchg
lods
popa
sbb
mov
icebp
xchg
xor
jecxz
push
loop
lds
rolb
iret
adc
jg
clc
jle
push
pop
testl
gs
icebp
nop
sar
cmp
popf
dec
stos
sub
push
jns,pt
xchg
shrl
call
out
jnp
pusha
lea
push
scas
stos
in
dec
movsl
jns
push
push
test
ss
arpl
sbb
mov
xchg
vpaddd
rorl
outsb
aas
test
xchg
incb
cmp
push
pop
cmpsb
mov
enter
cmp
sub
and
push
lahf
mov
in
mov
add
pop
lret
dec
out
mov
mov
inc
pop
sub
outsl
outsb
loope
das
in
testl
xchg
ucomiss
pop
sbb
jno
cmp
lods
imul
jl
out
sbbl
lods
sbb
clc
pop
roll
mov
or
dec
mov
aam
ja
aam
ffreep
icebp
aad
out
xchg
fcmovnbe
cmpsl
sbb
jnp
jns
xchg
adc
aas
mov
cltd
xchg
fcomp
imulb
dec
add
aas
sahf
imul
inc
xchg
icebp
xor
lea
rcrl
pop
out
mov
insb
repz
jnp
ljmp
sub
xorb
enter
sub
out
push
arpl
les
jno
add
jne
inc
pop
inc
sbb
decb
add
inc
dec
pop
xchg
mov
and
mov
xchg
cmp
mov
push
std
lcall
mov
movsl
aam
aam
les
bnd
fisubs
js
les
lret
fwait
mov
sub
aad
inc
jb
into
lahf
or
inc
mov
jmp
cmp
mov
mov
mov
test
lret
testb
inc
sar
iret
add
ficoml
mov
mov
je
jmp
jle
jl
and
mov
ret
or
test
ljmp
fs
stc
loope
pop
mov
sbb
out
daa
add
jmp
outsb
push
adc
or
pop
js
out
jns
call
lret
inc
fsts
ds
arpl
jmp
dec
test
jb
inc
cmp
and
pusha
xor
mov
rcrl
bnd
push
mov
cltd
mov
das
fwait
xchg
adc
push
xor
sbb
in
and
sub
mov
add
pop
pop
int3
cmp
sub
aas
pop
aaa
pop
pop
push
jb
xor
aaa
sahf
mov
test
xchg
xchg
xchg
out
xchg
int3
pop
es
xchg
jl
and
cltd
mov
stc
adc
sub
lods
push
out
sub
jle
push
mov
enterw
push
in
jmp
fwait
into
push
pusha
mov
inc
jo
sbb
bound
loope
jnp
sbb
sahf
scas
add
popa
sub
fwait
jmp
mov
stc
push
sti
push
inc
rcl
int3
sub
cmp
shll
inc
push
mov
pusha
xchg
add
jmp
cld
dec
outsl
jo
sbbb
popa
insb
popl
dec
stos
lahf
test
in
outsl
fmulp
shrb
xor
push
hlt
xor
das
ret
movsl
sub
iret
movsb
xchg
mov
dec
sub
data16
sbb
in
addb
ds
mov
aaa
mov
xchg
mov
lds
jmp
mov
std
sbb
adcl
fsubrs
pushaw
dec
xor
es
xor
xor
outsl
js
jmp
and
mov
pop
movsb
xchg
dec
cmp
cmp
insl
outsb
jge
jnp
jb
aaa
sub
dec
scas
xor
sub
jae
cld
fildll
pop
xchg
in
sbb
call
jo
negl
mov
pop
loop
clc
lock
dec
cli
pop
sub
pusha
xor
arpl
and
pop
and
sbb
ja
negl
ja
add
cmc
sub
leave
pop
jge
pop
pop
adc
jge
mov
add
jge
and
imul
inc
cli
mov
pushl
lret
sub
push
imull
push
pop
cmpsb
call
cs
addr16
cld
xchg
mov
test
insl
push
test
test
push
outsl
and
test
adc
mov
mov
cmp
mov
inc
lea
pop
cmp
xor
mov
stc
xchg
or
jbe
or
lods
in
sub
mov
idivb
and
mov
mov
jae
mov
xor
mov
loope
gs
bound
pop
es
jg
fmuls
fcompl
imul
push
mov
xor
cli
fdivl
cmp
movsl
pop
cmp
or
xchg
dec
pop
xchg
sbb
cmp
cmp
aas
loop
xor
repnz
gs
out
mov
outsb
cmp
test
clc
or
outsl
sub
lcall
jmp
fcomip
xchg
ffree
and
inc
push
mov
movsb
dec
adc
xchg
and
rorl
cmp
xchg
std
mov
in
data16
xchg
xchg
sbb
cmp
imul
xchg
mov
imul
jge
or
xchg
adc
jmp
out
sti
js
jl
xchg
xchg
insb
out
aam
mov
movsb
divl
jge
xlat
jmp
test
imul
loope
adc
inc
cmp
or
or
sbb
sbbl
rorb
mov
hlt
dec
mov
add
aad
jo
test
xor
mov
jge
push
popf
pop
cmpsb
rorb
cmp
lds
sbb
out
sbb
or
mov
and
mov
adc
sub
inc
jl
and
xchg
mov
fwait
std
mov
cmc
int
pop
push
std
mov
inc
mov
insb
pop
mov
es
icebp
test
adc
pop
mov
pop
inc
add
mov
dec
insl
jmp
pop
fcmovnb
cwtl
les
andl
cli
mov
clc
gs
cltd
sbb
ss
ss
push
push
xor
mov
and
pop
cmpsl
shlb
and
je
data16
loope
nop
xchg
or
or
and
or
mov
inc
mov
xchg
shlb
lds
push
jmp
fistl
pop
sbb
push
testl
int
js
push
mov
repnz
sub
push
imul
mov
out
pop
js
test
cmc
jae
xchg
inc
dec
mov
sub
jge
lods
in
pushf
js
mov
push
add
lahf
lahf
xchg
jo
sbb
rcrl
or
pop
add
popa
mov
ljmp
addr16
shll
mov
inc
add
mov
es
aaa
add
push
or
cli
mov
lods
mov
jbe
je
je
dec
dec
sbb
dec
aaa
jge
jo
cmpsb
lods
xlat
mov
clc
sarb
dec
jo
mov
push
sbb
in
mov
scas
dec
adc
jge
lret
jb
cmc
fs
dec
or
and
ljmp
mov
mov
xchg
mov
inc
mov
jae
gs
mov
push
out
sub
mov
scas
mov
mov
scas
gs
mov
cmpsl
test
negb
cmp
int
xor
dec
adc
hlt
outsl
rcrb
and
push
mov
or
sbb
push
aas
ljmp
cli
and
push
or
mov
lods
imul
adc
dec
fadd
aaa
sbb
xlat
fsubl
add
ja
sti
jge
and
mov
dec
sahf
pushf
pop
ficoml
xchg
fnstenv
dec
movsl
xor
add
clc
cmc
mov
test
jl
fstpl
daa
xchg
sub
mov
movb
push
adc
jbe
push
lahf
fwait
cmpsl
sbb
push
aaa
mov
adc
mov
test
cmp
xor
dec
adc
shr
loop
cmp
pop
in
mov
pop
ds
mov
push
icebp
lock
subb
lcall
aas
mov
fidivl
push
into
or
movsb
xor
or
dec
cmp
sub
inc
stos
push
xchg
mov
out
outsb
or
xchg
or
or
mov
lods
mov
xor
shlb
lret
inc
notb
outsl
in
mov
nop
inc
dec
dec
loope
popf
add
dec
stos
insl
jae
pop
inc
repz
sbb
arpl
and
std
xchg
in
test
fs
xor
sub
pusha
jnp
adc
mov
in
dec
dec
int
std
pop
xchg
cli
xor
xchg
mov
sbb
fs
cmp
lcall
mov
out
pop
test
std
ret
arpl
stos
lret
hlt
lods
clc
cld
mov
inc
sarb
mov
pusha
push
sbb
ret
jg
mov
jle
les
aad
jl
mov
pop
mov
and
mov
pop
test
sbb
or
cmp
mov
lahf
inc
stc
adc
jb
cltd
out
push
fisttpll
js
ljmp
add
rorb
push
add
sub
in
cmp
push
cmp
movsl
and
add
jl
addb
icebp
out
fdivs
jmp
mov
test
sub
popa
mov
cld
mov
mov
mov
sti
in
arpl
in
es
cmpsb
ja
pop
das
out
inc
fldcw
popa
mov
sbb
pop
cmc
test
aad
fstl
scas
loop
sub
pop
jae
push
fldl
es
mov
xor
je
push
lcall
cmp
dec
lret
push
fchs
gs
and
mov
test
hlt
push
add
jno
lock
and
mov
shlb
and
inc
cltd
or
shrb
idivb
pop
pop
mov
pop
dec
iret
jmp
or
dec
push
mov
mov
cmp
sbb
pop
xchg
xlat
jle
dec
dec
push
aaa
fcomip
jecxz
or
mov
lcall
mov
or
and
sahf
cmp
sahf
xchg
sub
imul
jb
inc
jno
sub
aas
je
pushl
cs
in
lcall
test
cmp
lods
adc
push
adc
mov
xchg
mov
das
fwait
mov
clc
adc
outsl
push
sahf
pop
daa
jge
std
lahf
ja
sbb
pop
ficoml
ss
xchg
mov
xor
and
or
jg
add
cld
or
mov
xchg
sub
leave
jnp
xchg
cmp
es
pop
mov
mov
shlb
jbe
xor
cmpsb
es
cli
in
shll
jne
scas
or
dec
add
push
inc
cwtl
dec
mov
xor
out
addb
leave
or
aad
mov
pop
xchg
test
enter
repz
fsts
das
push
test
shl
adc
mov
arpl
stc
jae
out
frstor
mov
sarb
mov
movsb
rclb
fistpll
ja
movl
and
into
jb
out
add
mov
daa
loope
rcll
gs
jno
fnstsw
mov
sub
or
jbe
ficompl
fcom
fildl
out
adc
cmc
lea
scas
addl
mov
das
out
sub
mov
leave
push
push
call
sarb
inc
push
or
fwait
inc
jns
sub
insb
adc
jle
pop
pop
cmp
clc
xchg
add
xchg
insb
jecxz
push
rcrl
out
mov
xor
int
arpl
mov
jne
add
sti
push
mov
cwtl
or
stc
xor
outsb
inc
das
mov
lahf
sub
adc
push
xchg
bound
clc
add
or
jmp
arpl
add
ljmp
sbb
jne
fsubrl
sbb
fsubrl
fsubrs
mov
clc
loope
xor
cli
xorb
xor
out
sarb
xchg
aas
std
xlat
sub
xchg
push
lahf
sbb
dec
imul
sub
sub
and
mov
inc
pop
add
outsl
mov
fsubrp
inc
je
adc
repz
jge
mov
loop
out
inc
shr
cmp
inc
push
lret
sub
adc
sbb
outsb
dec
mov
repz
lret
insb
flds
xchg
push
sbb
int3
les
xor
or
mov
stos
or
mov
add
xlat
loope
cli
lea
sbb
mov
cmp
mov
jno
paddsb
fsin
xchg
mov
lea
adc
sbb
cmp
outsb
push
xchg
push
aas
maskmovq
xchg
or
lock
mov
pop
mov
jae
push
push
repnz
cmp
sub
inc
cmp
shl
sbb
pop
push
ja
je
mov
divl
notl
push
les
popa
sub
mov
jg
std
jns
imul
jmp
out
in
sbb
sahf
mov
sarl
mov
mov
inc
ja
mov
cmc
lret
sub
sub
push
or
mov
scas
lods
mov
xchg
psllq
add
jl
es
repz
xor
clc
pop
push
and
push
out
mov
mov
push
pop
xor
out
and
inc
ficoml
push
pop
test
mov
mov
cmp
ja
jno
xor
sub
bound
cltd
sarl
mov
sub
repnz
nop
sti
or
sbb
cli
cltd
mov
dec
leave
mov
testl
push
xlat
fsts
sbb
or
hlt
test
fsubs
pop
stos
dec
inc
sub
inc
jbe
cmpsl
sbb
dec
add
in
cwtl
pop
push
jp
dec
scas
xchg
repnz
push
jns
gs
mov
lods
in
cmp
aas
or
jb
js
dec
xchg
dec
rolw
or
inc
cmp
jle
inc
cmp
sbbb
xchg
loopne
xchg
cmpsb
and
add
dec
fs
sbb
enter
loopne
push
pop
cmp
pop
mov
rcl
push
add
mov
flds
out
push
add
add
sub
hlt
cwtl
popa
and
or
pop
rcll
xchg
mov
pop
sub
mov
test
inc
ljmp
outsl
enter
fnstenv
push
out
in
mov
mov
mov
sahf
pushf
xor
addb
inc
cli
push
outsb
push
addr16
fstl
outsl
inc
push
mov
sbb
mov
jb
dec
call
ds
or
lret
mov
adc
sarl
fwait
pop
fisubrs
adc
sbb
sub
enter
stc
jmp
and
ret
out
in
mov
nop
ja
add
push
jp
jbe
sti
adcl
jnp
popa
sbb
mov
mov
popa
std
sbb
inc
inc
outsl
in
and
stos
orb
call
mov
mov
fwait
push
and
xchg
test
xchg
sbb
and
aam
out
pop
in
push
mov
out
push
mov
outsb
cmp
mov
or
mov
cltd
out
push
data16
or
adc
outsb
mov
pop
mov
mov
xchg
test
aad
sarl
sub
outsl
js
cwtl
lcall
mov
adc
iret
xor
mov
sbbl
std
pop
popa
out
inc
xlat
pop
push
xor
rcl
inc
sub
push
roll
sub
add
cmp
cld
xchg
sarl
out
insb
xor
leave
dec
pop
mov
ds
stc
movsl
adc
adc
loope
ds
int
icebp
testb
test
ljmp
push
lea
stos
mov
stos
xor
cmpsl
pop
lahf
jbe
xchg
mov
mov
mov
jle
jl
in
ja
dec
pop
xchg
lock
cmp
shlb
fwait
es
jge
lret
jl
rorb
inc
sub
bound
movsl
fxch
pop
imul
mov
push
repnz
test
adc
cmpsl
cmc
scas
or
jle
cli
mov
scas
pop
sbb
cld
insb
lret
gs
int3
push
mov
outsl
and
or
testl
xchg
jnp
inc
mov
mov
cmp
fsts
test
les
popf
xchg
inc
test
cmp
mov
outsb
mov
push
daa
sbb
lods
jle
int3
lods
out
jp
fidivrl
inc
notb
fildll
fldenv
ss
andl
pop
inc
jo
cmp
scas
enter
or
adc
mov
fstl
cmp
cwtl
add
cmpsb
add
lods
push
inc
sbb
outsb
pop
repnz
jno
lds
ss
iret
push
daa
lods
data16
add
stos
jno
push
push
push
mov
mov
jbe
sbb
add
lret
cli
in
cmp
mov
test
dec
movl
sub
mov
inc
ljmp
sbb
iret
mov
adc
daa
out
bound
ret
aas
push
das
cmpsl
daa
mov
sbb
xchg
mov
cmpsb
and
jns
insb
psubusw
xchg
and
mov
add
push
mov
or
jbe
sub
cmpsl
sub
shl
adc
dec
test
pop
rcll
dec
mov
jo
mov
cmpsb
sti
xchg
or
repnz
shl
gs
sub
mov
push
or
sbb
sarb
and
push
fwait
dec
mov
scas
outsl
jg,pn
icebp
mov
idivb
js
shr
mov
and
in
mov
mov
dec
add
cmpsb
jle
rorb
xchg
jb
mov
jmp
dec
inc
pop
rorb
push
or
cmp
xor
negb
push
mov
mov
mov
mov
mov
and
addb
es
je
mov
rcll
je
cmpsl
or
ret
addb
fwait
ja
lods
stos
in
insb
mov
outsl
sbb
push
sahf
push
pop
xchg
test
mov
mov
xor
lret
scas
js
mov
adc
clc
leave
orb
rorb
dec
lods
scas
pushf
xchg
mov
ljmp
lds
fldenv
cmc
lods
shll
out
mov
dec
addl
adcl
cmpsl
inc
lock
push
dec
ret
push
cmp
sbb
dec
cmpsl
sub
sub
stos
mov
lods
imul
jmp
dec
cmp
and
imul
int
lea
pop
push
pushf
imul
mov
mov
cli
fists
or
jle
mov
lea
mov
mov
ret
jae
mov
pop
mov
or
and
inc
fwait
mov
movl
xlat
std
jb
cmp
add
pop
test
das
das
mov
push
xchg
or
daa
push
add
fcoms
xchg
xor
shlb
cli
xchg
cmpsb
popf
dec
sub
out
clc
fbstp
xlat
ret
aam
sub
pop
imul
shrb
popf
mov
mov
in
pop
inc
in
push
ss
call
sbb
fimull
mov
xor
xchg
xchg
dec
mov
jns
popf
xor
mov
or
lock
sub
add
push
adc
sbb
pop
inc
scas
vmread
gs
iret
enter
lret
outsb
xor
int3
mov
pop
mov
lret
push
and
add
loop
pop
and
stc
stos
lods
sub
adc
pop
jbe
add
popf
and
xor
adc
mov
or
mov
sbb
adcl
pop
and
add
int
xor
mov
dec
cmpsb
lcall
pop
jbe
dec
inc
in
xchg
outsb
push
mov
mov
push
fs
call
shrb
mov
rclb
ss
setle
test
or
outsb
ljmp
or
dec
fldt
cmp
dec
arpl
inc
push
jns
sbb
sub
rcll
stos
or
push
mov
mov
and
addr16
lods
sub
test
fstps
idiv
add
lods
loope
rol
es
scas
adc
mov
in
sub
xlat
lea
int3
popa
sbb
jmp
stos
lea
cmp
pusha
mov
xchg
mov
in
jl
push
add
cmp
movsl
shl
xor
arpl
mov
push
xchg
lea
dec
in
js
inc
fistps
and
fwait
iret
or
push
dec
dec
rcrl
mov
addr16
dec
xchg
lods
jle
shrb
call
ret
mov
js
decb
lods
lret
mov
mov
shll
ds
mov
and
ss
push
lret
mulb
mov
aas
xchg
jae
fists
out
ja
dec
out
int
leave
pop
add
xor
jnp
inc
and
and
sbb
add
shrb
xchg
test
cltd
mov
out
mov
mov
test
hlt
pop
lock
xchg
test
aaa
dec
push
clc
sbb
std
insb
sbb
aas
aaa
repz
pop
inc
adc
push
jns
mov
mov
inc
jmp
mov
or
mov
movsl
jns
cmp
push
xchg
lret
cmpb
adc
inc
out
loope
cmp
cwtl
andl
jmp
mov
mov
or
xchg
pushl
dec
mov
mov
mov
ljmp
fldt
div
aad
inc
pop
dec
aaa
out
xor
mov
popa
xchg
ret
pop
lds
add
cmpsb
jns
jle
or
scas
leave
cli
xchg
adc
lods
mov
loope
pusha
jecxz
fwait
test
lcall
mov
cmp
sbb
std
dec
andb
xchg
inc
in
ss
xor
push
inc
sbb
je
jge
pop
sub
loope
sarb
adc
inc
data16
mov
and
loope
mov
iret
mov
insl
push
test
dec
ret
mov
cmp
lds
fisubs
and
mov
sub
sbb
mov
shl
mov
aaa
pop
inc
push
js
sbb
loope
mov
or
cli
dec
cs
sbb
xor
xor
test
pop
incl
scas
add
popf
and
mov
sbb
pusha
cmpsl
add
fwait
lcall
dec
and
sahf
xchg
fistl
icebp
rorl
sub
aam
ds
pop
xchg
jle
jnp
push
pop
or
jle
repnz
jo
hlt
push
in
fistps
add
jbe
je
fistl
loop
add
and
std
cmc
scas
fdiv
sbb
mov
dec
cmp
addr16
mov
and
fimuls
add
adc
adc
ljmp
add
gs
and
mov
ljmp
sbb
adc
mov
or
ficoms
rsm
mov
mov
mov
or
test
sub
stos
andb
cs
nop
outsb
pop
scas
mov
adc
or
addr16
mov
xor
mov
data16
and
pop
push
sahf
outsb
mov
push
adc
bound
and
lret
fs
std
fbstp
nop
mov
push
xchg
jae
or
adc
cwtl
nop
jbe
fistpll
cmp
test
xor
sub
xlat
or
fistps
popf
xchg
lods
and
fnstcw
mov
pop
nop
out
aam
mov
iret
jge
inc
ljmp
pop
pusha
sbb
insb
mov
ja
lcall
cmpsb
int3
mov
lock
stc
inc
inc
in
shrb
sbb
xchg
cli
jp
and
and
hlt
ds
jmp
aaa
pop
push
jnp
mov
adc
and
in
test
mov
xchg
jb
inc
push
sub
adc
adc
cwtl
inc
sub
repz
loope
xor
lret
outsb
xchg
testb
add
cwtl
mov
sbb
out
movb
push
in
scas
push
lcall
jl
or
and
add
pop
call
or
xchg
or
mov
and
push
clc
mov
mov
sub
push
aaa
shlb
cmp
sub
test
fisttpl
push
nop
cmp
lahf
cmpsl
cmp
fs
jns
mov
or
aas
xchg
sbb
push
popf
loop
stc
pop
arpl
rorb
sti
sub
jg
dec
arpl
push
push
and
adc
push
fidivs
mov
add
dec
cwtl
lcall
push
fwait
or
jl
loope
mov
repz
sub
jge
adc
scas
out
inc
dec
sub
dec
add
lcall
jne
daa
sbb
dec
mov
push
xchg
push
popa
dec
dec
cmpsl
pop
adc
arpl
mov
pop
add
xchg
mov
out
jecxz
pushf
add
mov
inc
and
cmp
cmp
lock
lock
adc
cmp
int
adc
push
jl
xor
mov
cmp
and
sub
or
divl
fs
movsl
or
xchg
and
lods
push
xchg
adc
lock
sarl
out
adc
mov
mov
pmaxub
push
pop
mov
clc
xor
cs
mov
fs
sar
sbb
adc
cmp
flds
repnz
mov
sahf
cmp
jp
mov
inc
sbb
push
fcompl
jmp
or
push
ds
xchg
push
mov
pusha
jbe
jo
gs
cmpsb
lret
dec
mov
add
stc
push
out
xor
rorb
repz
adc
inc
icebp
mov
mov
das
loop
mov
sbb
push
pop
push
lcall
sbb
rcrl
adc
pop
lock
cmp
pop
inc
popf
xor
lods
mov
mov
call
jo
daa
aad
aad
xchg
xchg
ds
cmp
push
adc
mov
aas
fnstcw
sbb
cmp
mov
into
lret
add
adc
or
outsb
dec
std
stos
nop
mov
cmpsl
nop
mov
mov
jle
lret
repz
iret
cs
fsubrp
or
fst
cmp
out
sub
sub
mov
lock
out
sbb
xchg
xor
dec
lds
sub
cmc
lock
xor
lret
pop
xorl
insb
mov
int3
mov
adc
push
pusha
fisttpl
sahf
add
imulb
push
pop
push
pusha
adc
lcall
push
inc
aad
fbstp
lods
add
and
mov
or
cmpsl
sbb
dec
xor
mov
or
lea
fstpl
fs
add
insl
mov
xchg
inc
jbe
jbe
test
in
push
shlb
or
out
lea
cmp
push
cld
jg
fstl
and
sbb
movsb
dec
outsl
pop
fdivl
mov
lret
mov
mov
mov
leave
fidivrl
jbe
push
inc
das
add
dec
mov
mov
out
in
mov
mov
mov
mov
lods
mov
inc
inc
or
jmp
and
adc
and
aam
repz
pop
jl
and
push
fcomp
push
loopne
pop
pop
aas
jecxz
and
andb
outsb
jns
mov
sti
cmp
adc
inc
mov
int
sbb
fisubrs
lcall
mov
out
add
ret
lret
sbb
mov
adc
jno
push
mov
sar
sub
adc
cmp
test
cmp
and
adc
mov
cmp
sub
cli
ret
jp
sbb
lea
inc
movsb
mov
sbb
dec
mov
pushf
scas
sar
jg
pushf
push
es
std
lods
and
arpl
pop
sbbl
and
pop
inc
push
ss
xchg
jo
sbb
mov
lock
or
adc
in
les
ja
push
mov
shr
xchg
or
and
xchg
add
push
pop
sarb
push
je
cmp
sub
mov
lea
mov
in
sub
xchg
inc
fwait
inc
inc
push
js
pop
ret
leave
add
sarl
vphadddq
ret
push
mov
inc
sahf
notl
push
cwtl
insb
dec
repz
sbb
mov
mov
jns
push
subb
rol
jle
shll
hlt
adc
dec
push
jbe
pushf
mov
add
cmc
sbb
rclb
shll
std
fidivl
dec
mov
sub
jnp
ljmp
pop
and
pushf
push
pop
mov
idivl
jmp
pop
test
loop
out
mov
sbb
cld
adcb
scas
xchg
inc
push
add
lds
rcr
jp
xchg
imul
lret
in
jb
adc
and
scas
cmc
es
adc
inc
jl
mov
jle
mov
movsl
or
lret
cmp
test
lea
pop
jle
jnp
rorl
or
cli
push
cmp
xor
or
lock
int
out
xchg
or
adc
ja
dec
sbb
xchg
and
pop
pop
daa
or
adc
xchg
into
mov
mov
mov
mov
xor
mov
test
and
fiadds
mov
stos
xchg
pop
loop
jbe
push
xlat
jnp
lods
sub
stos
xchg
std
movsl
push
xor
test
push
xor
lahf
filds
icebp
enter
mov
sub
jbe
or
cmp
out
jl
fdivrs
mov
popf
pop
shl
stc
outsl
stc
lock
fildl
inc
xchg
rclb
mov
mov
and
pusha
cmp
jl
pop
popf
sbb
xor
sbb
xchg
mov
lea
xchg
mov
push
rep
imul
outsl
loope
xchg
cmp
iret
out
cmp
sahf
sub
and
sarl
test
mov
out
mov
mov
sbb
hlt
lret
hlt
xor
and
jecxz
mov
adc
mov
push
movsl
insl
dec
fldz
popa
pop
ja
cmp
movsl
sub
das
fs
lods
cmp
dec
stc
scas
pop
dec
dec
jns
add
lds
insl
sbb
test
push
les
push
jg
gs
push
pop
xor
mov
mov
daa
aad
dec
cltd
movsl
or
ja
xchg
inc
mov
outsb
ljmp
mov
outsb
push
xchg
push
andb
fisubs
sbb
adc
movsb
into
leave
xor
mov
and
add
pop
jl
ljmp
xchg
movsb
cmp
loop
jge
push
dec
and
iret
sub
sbb
adc
cwtl
bound
cmp
std
fwait
adc
mov
lahf
sub
push
in
or
jg
xor
push
cmp
outsl
in
loopne
insl
inc
pop
xchg
add
xchg
in
mov
dec
sub
pop
rorb
mov
adc
inc
mov
pop
mov
cmp
fnsave
xor
pop
pushf
mov
aas
cmp
push
popa
pop
out
iret
mov
divb
movsl
or
mov
lock
lahf
fisttpl
sti
and
jne
test
rorl
jg
in
and
roll
scas
pop
lahf
lret
insb
cmp
arpl
and
add
push
pop
mov
idivl
std
dec
loope
ret
ljmp
setno
push
and
push
adc
pop
push
xor
mov
xor
insb
pushf
mov
inc
test
fwait
pop
push
pop
sub
fistps
mov
stos
mov
pop
xchg
jno
cli
rcrb
push
add
push
push
xchg
or
push
or
pop
arpl
roll
mov
sbb
sub
pop
out
out
add
daa
das
lock
cmpsb
cmp
out
dec
jo
dec
jmp
stos
xchg
and
xor
cli
xchg
jge
xor
pop
scas
mov
mov
int3
scas
add
fstps
imul
lea
jnp
mov
pop
insb
mov
lcall
jnp
jl
imull
mov
dec
push
cltd
sub
cs
aas
in
fwait
lock
and
ds
jns
adc
test
dec
andb
je
mov
push
push
xor
aas
enter
sahf
mov
push
insb
fs
aad
cmp
and
lcall
adc
mov
iret
xchg
incl
dec
sub
adc
lret
xchg
scas
pusha
scas
out
cmpsl
rorl
sub
mov
out
add
pop
dec
pop
aam
pop
stos
fldenv
int3
adc
movsb
mov
sbb
cli
ds
cvtpi2ps
adc
push
sub
scas
push
xor
push
js
loope
jnp
in
lds
xchg
rolb
mov
dec
loope
sbb
repnz
push
push
mull
inc
adc
or
xlat
pop
addr16
js
adc
arpl
jecxz
jg
push
mov
or
push
fstpt
in
movsl
scas
mov
cmp
mov
push
xchg
inc
insb
xor
inc
mov
fisttpll
mov
test
mov
inc
shrl
dec
dec
jns
cmp
adc
mov
jns
aas
xchg
mov
jne
dec
popf
xchg
cmp
mov
dec
xchg
ja
ljmp
aas
sbb
out
fs
shrl
fs
in
jmp
jge,pn
xor
add
pop
mov
or
sbb
push
sbb
push
mov
lods
movsb
sahf
fcomps
test
mov
xor
xor
call
pop
into
mov
rorl
push
inc
jne
pop
add
insb
hlt
mov
mov
dec
pusha
inc
dec
stos
incb
mov
pop
push
shrb
push
push
push
mov
xchg
pop
add
jle
arpl
xchg
jp
mov
scas
and
ret
jbe
movsb
mov
ffreep
inc
cs
inc
xor
and
outsb
shrl
dec
dec
mov
js
cmp
lahf
mov
sub
xchg
cmp
ficomps
jo
mov
or
sub
mov
cli
or
push
pusha
sti
roll
ljmp
jle
and
cmpsl
imul
adc
in
xor
stos
push
fsubrl
xor
loop
xor
sbb
sbb
outsl
daa
lods
lahf
rolb
xor
sub
add
cs
push
xor
out
or
in
sub
cmp
subl
pop
jbe
fsub
mov
lods
and
jns
cs
sub
cmpsl
jg
sub
xchg
sbb
incl
jbe
inc
into
dec
aam
dec
mov
pushf
or
out
scas
mov
fidivrs
adc
fs
stos
add
mov
dec
pop
push
jle
mov
movsl
xlat
mov
sbb
pushf
call
jmp
rorb
lea
mov
jmp
jge
fs
xchg
add
jmp
and
repz
dec
inc
add
mov
nop
or
daa
fistl
jb
scas
lret
pop
mov
imul
pop
ljmp
push
dec
int3
cmpb
pop
out
mov
xchg
ja
fdivs
xor
lods
jne
mov
sub
les
stos
js
stos
rorl
pusha
push
mov
sub
pusha
dec
lahf
scas
adc
xor
in
dec
jmp
xchg
mov
mov
add
in
cmpsb
adc
jmp
imul
bound
push
sbb
test
ret
adc
adc
bound
pop
push
xor
mov
out
sub
in
mov
out
jno
out
lock
or
push
add
or
xor
ret
pop
and
out
pusha
lds
lods
insl
jecxz
mov
add
cmp
out
faddl
pop
xor
push
out
stos
and
mov
out
mov
mov
and
xor
dec
inc
xor
cli
cmp
cmp
xchg
mov
dec
outsb
out
dec
mov
addr16
xor
pop
pop
loopne
fs
xchg
bnd
mov
leave
mov
lcall
sbb
cmp
or
std
inc
dec
lret
fimuls
aas
jno
xchg
fs
mov
out
imul
xor
je
sub
clc
mov
xchg
jnp
rclb
xor
pop
mov
cmp
lods
pop
xor
inc
lock
insb
mov
dec
push
sbb
jno
ljmp
jne
stc
mov
stos
lcall
add
sbb
sub
shlb
fistl
pop
inc
mov
push
cmp
xchg
mov
call
lcall
aad
mov
les
sbbb
sub
mov
mov
push
xor
cwtl
sub
pusha
call
or
sub
loopne
test
out
clc
pop
dec
nop
lret
jp
sbbl
xchg
pop
add
cld
push
inc
out
movsb
inc
out
iret
jb
push
lret
and
push
adc
ja
xchg
cs
inc
sub
lret
sub
mov
push
popl
adc
dec
or
xchg
push
adc
pop
push
insb
inc
xchg
mov
dec
or
sub
rorl
inc
fnstenv
in
sbb
or
punpcklbw
bound
and
jp
pop
je
dec
ret
jp
adc
js
outsl
mov
test
dec
rcll
in
xorl
aad
je
rol
push
cmp
pop
loopne
mov
sahf
scas
ficomps
jge
jno
mov
das
rcll
push
add
mov
daa
sbb
mov
mov
jne
lods
enter
jmp
mov
pop
sbb
loop
inc
add
sahf
mov
loope
gs
push
pop
xchg
xchg
mov
int3
xlat
jl
adc
test
mov
mov
inc
test
add
or
inc
clc
adc
sub
neg
inc
shlb
mov
dec
pusha
xor
inc
mov
mov
movswl
push
nop
jg
pop
push
cmc
mov
mov
fdivs
dec
mul
ss
sbb
lea
add
mov
roll
jae
lret
add
aad
inc
ja
insb
in
mov
sub
pop
or
clc
cmpsb
sbb
push
hlt
loop
lcall
fldcw
push
pop
add
dec
imul
jmp
push
or
out
adc
mov
sbb
pop
cmpsb
inc
int3
push
minps
mov
adc
add
jb,pn
incl
push
mov
mull
pop
dec
das
cmp
push
adc
push
lahf
lods
mov
clc
sti
in
pop
mov
inc
mov
mov
into
sbb
aad
movsb
pop
cmpb
adc
fmull
mov
sti
ja
imul
fiadds
mov
mov
pop
or
jg
adc
xlat
cmp
pop
es
arpl
andb
cmp
outsb
les
lea
xor
mov
xchg
push
cmpb
loopne
fdivrp
push
jns
or
mov
icebp
sub
sbb
mov
insl
jge
int
jge
mov
cli
rcrb
in
mov
cmc
or
sbb
popa
inc
pop
mov
inc
adc
fs
mov
xchg
ret
jnp
add
xor
sub
aas
adc
inc
xchg
sahf
popa
out
or
mov
je
mov
xchg
inc
push
nop
scas
enter
pop
mov
and
xor
mov
lods
dec
push
push
xor
pop
int
ret
outsb
cmp
pop
mov
push
pop
fs
mov
mov
adc
xchg
test
add
lcall
test
shl
xchg
aad
mov
movb
leave
or
xchg
mov
inc
fistps
es
jns
inc
mov
adc
jns
push
mov
xchg
push
jge
insl
out
iret
clc
loope
push
in
sbb
xchg
test
or
rclb
dec
xor
jne
or
insb
movsl
in
xor
call
hlt
jge
adc
insl
xchg
dec
mov
das
adc
dec
lods
cmp
outsl
insb
add
push
aas
subl
inc
sbb
mov
jle
push
fnstcw
ja
lret
jle
iret
jns
pop
shrb
and
mov
pop
and
push
xchg
add
mov
iret
outsb
and
and
in
pusha
aam
xlat
lret
add
inc
adc
clc
xlat
loopne
and
xor
fsubrp
mov
cmpsb
fimull
in
xor
movsb
sahf
xchg
xchg
adc
jae
jno
or
pop
mov
nop
in
mov
repz
push
stos
sbb
stos
popa
ret
xchg
inc
xchg
sub
test
or
ss
mov
sti
and
lahf
adc
jns
insb
cmpsl
add
mov
iret
mov
jbe
jecxz
push
sub
pop
adc
outsl
xor
outsl
jp
clc
popl
dec
ret
xchg
and
pop
push
jo
jne
push
sti
cmp
sahf
sbb
mull
fs
pop
mov
push
call
fldcw
dec
nop
popa
jle
out
mov
lret
or
popf
add
imul
mov
sbb
rclb
in
mov
lret
enter
fisubrs
pop
test
in
xchg
cltd
pop
mov
mov
add
dec
sbb
ret
jae
cmc
js
dec
pop
adc
mov
cs
or
mov
inc
test
adc
mov
data16
test
add
cmp
jo
enter
pop
adc
pop
xor
jb
int3
dec
cmp
push
sbb
in
xchg
add
or
inc
jbe
add
sbb
push
cmp
stos
gs
js
hlt
fnstsw
icebp
out
dec
in
and
xor
pop
xchg
mov
mov
fistl
loopne
cwtl
jae
in
xchg
inc
scas
mov
aaa
jae
push
dec
dec
pop
lods
cmp
dec
sub
dec
jns
jle
xor
cmpb
loope
rolb
mov
pop
stc
insl
cli
or
mov
sbb
xchg
mov
nop
push
bound
fidivrs
sbb
mov
or
xchg
jo
xchg
call
push
sbb
into
lret
add
cmp
sub
imul
inc
add
inc
inc
xor
scas
movsl
mov
cmc
jl
pushl
push
divb
adc
and
jmp
pop
xor
imul
lcall
insl
mov
leave
cltd
pop
loope
jg
mov
aas
ds
add
hlt
iret
int
sub
sti
mov
das
adc
data16
movsl
jb
outsb
jns
sbb
inc
ja
pop
jle
aaa
andl
js
xor
pop
imul
push
lcall
inc
jbe
lods
dec
popa
jecxz
xchg
ss
mov
add
loop
orl
nop
leave
cmc
or
adc
xchg
arpl
jb
push
inc
xchg
rcrb
jmp
stos
aaa
add
aam
push
adc
scas
jo
mov
pop
fdivrs
aam
lods
xor
in
test
push
inc
rcl
lahf
jl
cmpsl
cli
fildll
mov
test
ds
js
popa
and
lods
mov
mov
lahf
cltd
pop
mov
addr16
out
xor
lock
mov
jo
outsl
mov
or
popf
outsl
das
loopne
push
scas
add
ljmp
sbb
out
push
jae
pop
es
arpl
sbbl
pusha
jne
sahf
mov
dec
mov
bound
inc
sahf
jne
jae
add
add
dec
pop
adc
aas
clc
and
mov
enter
les
cmpl
push
dec
xorl
mov
int3
js
ret
fcomps
in
mov
adcl
popa
hlt
fldenv
insl
jge
mov
cmp
jne
mov
int
int
dec
mov
dec
std
pop
xchg
subl
test
mov
lds
cli
jnp
and
testb
dec
sub
and
xor
mov
push
test
repnz
adc
and
stos
std
sub
jno
xchg
sbb
fsubl
js
and
mov
icebp
pusha
mov
cltd
into
mov
sub
mov
cmp
mov
push
loope
andl
mov
sbb
sti
xor
out
aaa
gs
dec
js
lret
or
mov
subb
pop
test
lods
adc
mov
cmp
mov
sbb
idivb
mov
xor
clc
cmp
aam
leave
adc
sbb
mov
rcrb
mov
fstl
pop
fnstenv
repz
push
mov
outsb
lods
push
dec
test
test
sbb
daa
pushf
enter
sub
xchg
call
fcoml
push
enter
lock
in
gs
cmp
out
or
aam
out
jmp
pop
pop
jle
rcrb
stos
xor
jno
roll
roll
data16
and
adcb
adc
loopne
jecxz
jno
stos
sahf
jnp
xchg
jb
mov
pop
es
pushf
pop
cmp
es
xlat
adcb
dec
sti
test
fld
push
inc
ret
add
ja
inc
cwtl
or
inc
inc
sbb
mov
push
mov
mov
mov
adc
lea
push
pop
cmc
jge
or
xchg
xchg
sbb
mov
dec
xlat
cwtl
ljmp
pop
loop
or
add
jmp
out
jns
mov
dec
xor
cmp
mov
push
or
xlat
in
push
dec
test
fucomi
xor
xchg
nop
pop
cmpsl
xor
lret
outsl
dec
rdtsc
inc
das
aas
dec
cli
xchg
ja
mov
lcall
loopw
ror
mov
lds
popa
mov
nop
push
xchg
cmpsl
cmp
insl
cmc
xchg
sub
cmp
mov
pop
dec
pushf
int3
mov
xchg
push
adc
push
mov
add
daa
and
out
lahf
mov
aaa
pop
adcl
aas
jp
push
inc
std
lock
mov
jle
iret
xchg
cli
les
jecxz
mov
jns
loopne
or
pop
aam
add
jge
daa
inc
dec
inc
and
sbb
das
ss
cmpsb
mov
cwtl
int3
and
frstor
jl
sahf
push
xchg
pop
nop
mov
outsb
addl
int
test
mov
inc
push
jle
sahf
rolb
sub
pop
push
addr16
mov
lea
call
aam
xchg
int3
jg
stos
lea
or
nop
sub
and
test
xchg
push
aas
xchg
jmp
push
cld
or
add
xor
loope
xchg
sub
add
stos
pop
fistpl
adc
pop
xlat
mov
jg
subb
dec
push
jns
ljmp
mov
mov
mov
xchg
cmp
repz
cltd
and
pop
les
dec
pusha
incl
pop
add
sti
mov
mov
imul
xchg
cmp
pop
adc
popf
sarb
mov
and
lds
rorl
mov
test
pop
cli
adc
adc
sbb
pop
addr16
popf
xor
and
adc
push
movsb
mov
and
imul
xchg
jnp
in
outsl
in
jb
mov
sbb
xor
call
push
xchg
sub
sbb
repnz
popa
ror
pop
repnz
xchg
stos
loopne
push
mov
pusha
or
popl
adcb
push
xchg
mov
test
sub
dec
sub
addr16
xlat
test
mov
mov
and
inc
push
adc
bt
mov
into
jbe
je
mov
sbb
sarl
dec
cld
xor
or
jb
xlat
xor
dec
into
jle
enter
xchg
or
mov
fwait
clc
in
dec
lcall
or
int3
lea
mov
stos
jmp
frstor
mov
jno
sbb
sti
lods
repnz
shll
scas
jp
jmp
les
xchg
fisubrl
lahf
mov
xor
lahf
mov
or
jne
lods
sub
ss
and
lret
mov
aam
or
adc
or
in
fadd
add
in
fs
pop
mov
lods
std
sbb
jecxz
jbe
fnstenv
dec
push
jmp
dec
xor
mov
dec
mov
push
call
adc
and
fcompl
sub
das
mov
mov
or
cmp
div
mov
jle
shrl
es
fmulp
sbb
lods
pusha
popf
jo
mov
jbe
mov
popf
pop
mov
jo
aad
dec
fcmovne
mov
and
pop
ret
sti
mov
ja
xchg
addr16
add
dec
or
gs
rclb
ret
mov
dec
xchg
jp
mov
mov
lods
aad
outsb
rcll
imul
cmp
lock
lock
ret
pop
add
clc
mov
mov
je
shlb
out
rorb
dec
cmc
push
inc
or
jecxz
outsb
orb
mov
sub
push
lahf
adc
sub
sbb
mov
fsubl
mov
mov
pop
outsl
push
jae
ljmp
inc
lahf
das
shlb
push
leave
test
and
mov
push
in
pop
loop
int
and
adc
loop
mov
mov
sbb
out
dec
lods
mov
in
xchg
add
std
cmp
dec
mov
xchg
push
pop
out
mov
mov
xor
sub
out
sbb
cld
rcrl
out
push
jb
int3
mov
adc
dec
popf
jno
cmp
pop
nop
mov
fst
lcall
sbb
addr16
sarb
add
dec
and
and
mov
push
jno
inc
add
add
jl
lods
lea
cmpsb
xchg
jo
sbb
cmp
sbb
repz
mov
popf
pop
pop
fisttpll
sub
cmp
mov
inc
scas
push
mov
lea
jp
jne
test
hlt
push
mov
jo
inc
sub
mov
pop
mov
jge
push
cwtd
cmpsl
mov
mov
jns
dec
aad
pop
cmp
imul
dec
and
xchg
sbbl
loope
pop
mov
cmp
imul
mov
loop
aad
inc
jmp
cld
int
push
pop
inc
sub
or
icebp
and
cs
jge
movsb
notl
push
and
stos
roll
cmp
push
ficompl
push
nop
mov
loope
mov
sarl
or
adc
or
jp
pop
ljmp
sub
test
jp
cmp
pop
cmp
repz
cld
xchg
clc
lock
sub
push
in
les
cmp
mov
stos
mov
insb
cld
add
insl
aam
cmc
dec
pop
sbb
mov
sbb
insb
push
sbb
dec
dec
mov
sbb
ret
or
jno
cmp
icebp
xor
aam
arpl
mov
fstl
jp
rcll
mov
pop
pusha
mov
mov
outsl
inc
cmp
add
or
add
mov
mov
mov
push
mov
in
lret
mov
sub
push
lock
ret
daa
mov
cmp
idiv
mull
mov
sbbb
inc
xchg
das
dec
dec
cmp
test
sub
mov
loope
pop
ret
jno
mov
loopne
xor
sbb
adc
jle
xchg
sti
in
push
dec
ret
jge
vprotd
pop
or
pop
popa
and
push
push
xchg
push
cmp
or
cmpsl
pop
imul
jnp
fcmovne
lret
fdiv
sbb
push
ss
sub
mov
stos
add
cmp
cmp
xchg
mov
pop
xchg
add
xchg
pop
mov
cmp
mov
sub
psrlq
pop
jmp
bound
and
xchg
ret
lock
xchg
test
daa
or
pop
jo
out
repnz
pop
mov
cmpl
mov
push
ss
dec
and
loopne
jle
fucomip
mov
cli
inc
jne
mov
and
aam
mov
or
mov
mov
pop
loopne
nop
xchg
out
fidivs
mov
int
cmp
push
or
mov
sbb
pop
mov
das
stos
xchg
call
repnz
sbbl
into
add
add
lret
dec
repnz
xchg
push
cmp
xchg
xchg
sar
insb
jae
sar
mov
sbb
andl
mov
and
es
inc
xchg
lahf
ret
xor
push
push
push
ret
test
sarl
subl
shll
leave
xchg
jp
pop
lods
sub
fadds
rcr
jecxz
inc
push
inc
andb
mov
push
adc
lahf
sub
imul
pusha
decb
xor
add
out
in
into
inc
push
orb
dec
adc
push
xchg
lcall
insb
imull
or
xchg
shll
jae
clc
xor
pop
dec
add
mov
jge
fwait
hlt
mov
mov
in
mov
inc
jecxz
pop
push
out
and
iret
scas
inc
out
cmpsb
add
push
dec
dec
jb
push
fs
mov
jb
push
push
je
test
xor
mov
mov
jmp
aaa
push
push
lea
cmp
adcb
in
ljmp
jl
add
mov
or
popf
sbb
mov
ljmp
or
das
push
mov
dec
inc
mov
fwait
cmp
mov
sub
nop
sti
jno
imul
arpl
movsb
or
test
lret
movl
lahf
mov
dec
or
xchg
popa
mov
jno
and
inc
xor
sti
or
or
xor
sub
repnz
fsubrs
push
push
xlat
clc
mov
mov
je
sbb
mov
test
adc
out
aas
lea
stos
cli
add
lcall
xchg
sti
sub
std
jns
fcompl
mov
repnz
jmp
mov
and
mov
addr16
jmp
fwait
inc
sbb
pop
stos
outsl
cmc
dec
sbb
mov
mov
jle
sub
jno
sbb
mov
pop
es
adc
jp
ss
cmc
test
das
mov
adc
add
mov
insb
xor
cwtl
xchg
xchg
jns
test
idivb
dec
loop
lahf
arpl
push
xchg
add
mov
dec
repnz
test
jne
push
push
xor
jns
sbb
sbb
loopne
daa
enter
fiaddl
sub
and
jmp
adc
insb
dec
stos
fcomip
mov
jns
push
jg
ss
stos
adc
fsubl
add
sub
pop
ds
cmpsb
lret
jl
mov
jmp
les
cmp
cmp
int3
mov
lcall
cmp
and
in
add
xor
pop
jo
mov
scas
icebp
pop
mov
cmpsl
nop
sub
xchg
shl
pop
mov
lods
xchg
cmp
and
and
lods
xor
int
inc
bound
mov
ljmp
cmpsl
sti
icebp
adc
mov
pop
cs
and
mov
nop
gs
setnp
cmp
sbb
rorl
testl
movsb
in
lret
lds
and
pop
jmp
push
rolb
inc
out
scas
loopne
cmc
push
push
das
add
fcoms
adc
jne
xor
dec
mov
lea
aad
icebp
decb
dec
jmp
in
shll
fcoms
pop
enter
push
add
sub
adc
sub
mov
and
and
loopne
cltd
psadbw
mov
xchg
clc
lds
loopne
js
adc
les
pop
jb
or
sub
arpl
cmpsb
fnsave
xchg
xchg
arpl
push
xchg
cltd
push
insb
mov
pop
sub
popa
jl
std
clc
jb
jbe
insb
shll
push
jge
push
mov
inc
jle
cmovl
jmp
movsl
jbe
xor
push
pop
in
stos
or
test
in
and
and
gs
gs
shl
push
pop
mov
mov
mov
in
mov
les
popf
cld
cltd
cmp
data16
xor
dec
fldl
cwtl
cmp
sti
push
cmp
xor
mov
xchg
insl
dec
mov
sbb
cli
fsubrs
insb
ljmp
cli
das
fs
cmp
fs
xchg
xchg
mov
cli
in
add
sarb
mov
testb
xchg
outsl
bnd
ljmp
loop
aas
inc
push
fwait
sub
inc
rcl
adc
out
jne
pop
int3
mov
les
fldcw
in
sub
mov
fnsave
into
loop
sub
fldt
push
int
clc
inc
int
aad
je
xchg
push
mov
inc
pop
ljmp
out
hlt
orb
rolb
sbb
dec
aam
lcall
popa
scas
nop
xchg
jnp
sahf
fldcw
inc
or
mov
test
adc
dec
lds
adc
stos
stos
mov
mov
ret
repnz
pushf
in
jo
jmp
cmpsb
mov
loope
sbb
mov
mov
in
repz
popa
adc
sbb
ret
push
jnp
cwtl
dec
mov
xor
hlt
push
ljmp
xchg
and
mov
and
inc
loope
loopne
jno
mov
iret
enter
mov
inc
mov
js
add
adc
insb
arpl
aaa
mov
sahf
jne
clc
push
inc
or
jecxz
es
lret
push
cmc
sti
daa
nop
dec
in
mov
ret
sub
sbb
lock
outsl
dec
insb
pop
fadds
add
out
cmpb
insb
imul
pusha
ljmp
dec
mov
inc
cld
pop
inc
jle
fcomps
cmp
scas
shll
fsub
outsb
frstor
push
dec
das
adc
and
shll
sbb
xchg
and
xchg
repnz
test
sti
xor
daa
cmp
push
imul
cmp
inc
xor
push
in
jnp
pusha
mov
and
sub
fidivrl
inc
test
add
lods
pusha
and
sbb
cmc
xchg
push
test
adc
leave
popa
mov
mov
frstor
inc
pop
or
stos
mov
jae
stc
ret
inc
mov
adc
mov
adc
or
jno
shl
lods
adc
rcrl
push
push
aas
push
orb
mov
push
adc
push
mov
sti
mov
movsl
loop
outsl
jno
inc
fnstsw
fwait
mov
add
adc
add
fsubrs
or
sub
adc
cli
out
movsl
pop
loop
scas
sub
dec
sbb
test
mov
jnp
lock
repnz
fstl
sbb
call
mov
push
mov
jns
inc
test
or
movsb
stos
xchg
push
out
mov
cmpsb
inc
mov
cmp
fistps
mov
push
jbe
mov
fcmove
xchg
stc
mov
lods
ret
push
adc
out
cmp
pop
sbb
push
in
aad
xor
sub
mov
test
jg
sub
pop
enter
insb
dec
push
ds
lret
repz
push
add
clc
cwtl
andb
enter
mov
push
loope
jecxz
xor
pop
arpl
xor
icebp
stc
jecxz
dec
mov
aaa
fadds
sbb
dec
add
pop
ss
int
es
mov
lret
xor
xchg
es
jns
mov
jp
mov
iret
jmp
xor
xchg
icebp
outsb
rcrl
out
xor
pushf
jge
mov
jbe
xchg
dec
lcall
inc
sbb
jmp
test
popf
test
and
in
sbb
adc
mov
ljmp
jno
push
icebp
and
cmp
push
and
loop
int3
mov
jmp
mov
xchg
repz
add
lahf
stos
cs
fisttpl
adc
mov
xchg
gs
xor
push
inc
lcall
pop
pop
push
lock
ds
es
pop
ror
pop
push
mov
push
lret
push
data16
jns
shlb
sahf
cmc
add
pop
cmc
adc
mov
fldt
icebp
fnsave
rolb
xlat
push
xchg
xor
or
pop
mov
add
jmp
aas
jne
mov
push
xor
or
test
ret
or
mov
push
push
push
sbb
adc
pop
mov
adc
and
in
jno
cltd
lods
enter
sbb
negl
js
cs
jp
rcll
fdivrl
cmp
jmp
xor
jne
nop
gs
dec
outsb
pop
aas
stos
xorb
out
jo
pop
shr
fisubl
jle
invd
sbb
xchg
shll
outsb
loope
push
xchg
sbb
push
daa
and
mov
sub
mov
sub
inc
scas
cmpsb
movsl
or
or
jne
mov
sarb
stos
sbb
ficompl
scas
jmp
movl
adc
inc
ja
pop
push
and
lret
cld
scas
test
jne
cltd
out
outsb
cmp
popf
mov
mov
dec
test
scas
fldl
push
js
xchg
sub
ror
mov
int
sub
lods
into
hlt
or
loope
add
add
test
mov
fs
cmp
lret
stos
call
out
xlat
iret
mov
jbe
jle
aam
or
sbb
mov
lcall
stos
or
cmpsl
xchg
lods
pop
andb
xor
movsb
mov
test
cld
out
incl
fistps
in
lcall
rcll
push
pop
repz
ret
cli
mov
push
or
sub
je
mov
mov
into
je
sbb
into
stos
inc
jno
push
or
mov
push
jmp
outsb
aaa
jecxz
into
inc
xor
xchg
inc
movsl
jge
in
jo
clc
aaa
dec
jg
inc
cs
and
ss
pop
inc
adc
inc
ficoms
je
call
inc
fs
mov
addl
jge
nop
pusha
arpl
clc
sbb
mov
rcll
jae
sub
rorl
lahf
cmp
pop
adc
mov
test
add
in
pop
addr16
ja
mov
adc
repnz
sub
pop
or
inc
out
sbb
add
or
sub
cwtl
adc
fsubrl
test
add
mov
movsl
out
out
cmpsb
sub
xchg
adc
loopne
mov
jl,pn
adc
lods
inc
insl
pop
cmp
cmc
icebp
jns
test
lds
push
in
cmc
or
nop
push
shll
punpcklwd
sbb
dec
xor
and
and
push
sbb
insl
mov
and
fsin
push
int3
sub
cmpsl
and
mov
std
out
mov
mov
ret
repnz
inc
and
xchg
push
mov
jno
rcr
stos
and
mov
lods
cs
mov
dec
addr16
mov
dec
decb
int
inc
outsl
adc
add
dec
pop
int3
and
movsl
jl
jnp
aas
adc
mov
pop
jne
add
repnz
mov
push
mov
mov
scas
mov
xor
int3
adc
add
mov
fisttps
fwait
out
imul
and
adc
mov
sarl
push
sbb
push
push
sub
scas
das
pop
cmp
test
loope
jle
cltd
decl
clc
jg
out
xchg
cmp
mov
rcrl
push
aad
js
mov
outsb
and
xchg
shrb
sahf
cli
test
or
outsl
shrb
andl
dec
mov
pop
pushf
pushf
xor
or
scas
xor
lcall
or
sbb
outsb
or
mov
adc
fists
cmp
cwtl
outsl
mov
sbb
pop
rcll
mov
call
in
jns
jns
push
in
stos
jbe
mov
mov
mov
stos
pop
leave
test
mov
sahf
fs
aad
adc
aam
movsl
idivl
or
call
xchg
shr
push
push
jmp
sub
sub
sub
ljmp
and
lds
cld
inc
stc
sub
fcmovb
call
push
jnp
int3
nop
or
add
lahf
xor
and
mov
pop
add
push
shll
leave
lcall
lcall
add
jl
test
lock
popf
arpl
sbb
cmp
enter
xchg
daa
test
insb
dec
xchg
pop
pop
jb
lret
cltd
lret
pusha
or
xor
mov
xor
inc
popf
es
incb
ds
insb
lods
cmp
filds
xor
mov
or
lods
jnp
pop
adc
int3
movsl
imul
aam
jns
cmp
push
sub
loope
dec
fidivs
pusha
cmpsl
mov
inc
and
inc
inc
xlat
mov
sub
outsl
and
mov
push
ret
add
xor
mov
mov
mov
jecxz
loope
add
jmp
shrb
pop
repnz
ret
js
xor
out
out
and
or
add
add
add
xchg
add
dec
ret
stos
add
xchg
popa
and
iret
fs
xchg
stc
jp
jae
dec
repnz
lods
call
mov
aad
jo
aas
or
push
repz
repnz
adc
inc
push
js
je
sbb
mov
xor
in
std
pop
jnp
mov
sbb
jl
out
pop
js
stc
dec
pop
int
mov
mov
cmp
pop
xor
adc
mov
cmp
xor
rcrl
mov
cmpsb
sub
test
push
fcoml
mov
jl
mov
gs
clc
pop
pop
or
jno
adc
xor
aam
jno
pop
fnstenv
xchg
das
out
es
mov
aaa
xchg
add
inc
dec
adc
pop
cld
nop
loope
mov
jne
lea
sub
sub
lea
push
dec
inc
mov
stos
inc
rorl
cmc
sub
fdivl
jg
sub
arpl
push
icebp
int3
inc
add
outsl
fsubs
movsb
adc
rcrl
pop
mov
jo
shrb
jae
call
je
decl
pushf
mov
repz
sbb
lods
sbb
je
dec
mov
lock
push
pop
test
dec
mov
cmp
cmp
mov
xchg
call
leave
push
jle
outsl
icebp
loop
imull
std
dec
leave
rcrl
adc
xor
stos
fstl
xchg
shrb
push
jmp
sbb
lods
add
mov
popf
pop
cltd
cmp
testb
add
addl
dec
pop
pop
push
mov
cltd
jno
sbb
add
xchg
jbe
mov
adc
cmp
dec
int3
ss
stos
and
mov
jne
cmpsl
mov
add
mov
push
lret
mov
ljmp
fsubp
or
xor
in
insl
xchg
push
lea
nop
mov
sbbb
xlat
sbb
mov
aad
decl
sbb
js
ss
test
mov
movsb
dec
sbb
mov
aaa
xlat
mov
test
pop
or
daa
and
test
xor
dec
mov
or
sub
movsl
pop
adc
push
popf
enter
sbb
xchg
or
add
xor
icebp
and
repz
cmpsb
sbb
ss
lret
test
and
xchg
hlt
lds
adc
int
clc
pop
jae
pop
jno
dec
jge
sub
push
mov
ret
sti
or
xchg
stc
cltd
or
mov
ret
xor
ja
ljmp
mov
sbb
pushf
in
ljmp
sarb
movsb
ja
push
bound
push
lahf
push
or
dec
loop
pop
ret
sarl
dec
sub
gs
test
rcll
mov
adc
inc
mov
and
shlb
stos
xor
xchg
insl
push
jmp
shll
dec
enter
repnz
xchg
xchg
pop
lock
adc
xchg
daa
test
ret
repz
rcll
push
test
xlat
fld
popf
push
ja
mov
rorb
testb
adc
fs
leave
in
jne
cmpsl
incl
outsl
sar
or
mov
push
data16
pop
dec
aaa
xor
cmp
loop
fcoms
mov
scas
push
ds
pushf
lret
mov
stos
aaa
sti
dec
fs
push
dec
sub
dec
cmp
shll
pop
jl
jg
out
into
rcll
pop
sub
movups
xchg
mov
adc
pop
mov
cltd
jb
mov
fs
mov
int3
cmp
mov
and
rcrb
popa
jmp
mov
fisttps
or
and
xchg
popf
or
movsl
mov
sbb
or
lret
dec
lods
or
icebp
xchg
pop
repnz
fimull
insb
es
hlt
popf
push
iret
cmp
inc
iret
in
add
xor
pop
xchg
loopne
mov
aas
mov
adc
pop
filds
aaa
and
jne
icebp
arpl
fcmove
bound
test
outsl
lods
into
mov
xor
adc
sub
lock
pushf
inc
adc
in
jb
test
pushf
je
cltd
push
cmpsb
jg
ficoml
jns
ret
inc
cmpsl
call
pop
mov
push
xor
push
push
es
xchg
mov
out
xor
push
pop
mov
pop
ret
lret
pop
lcall
call
leave
jnp
je
xchg
xlat
aas
push
std
into
movsb
imul
xchg
jb
push
ret
imul
sarl
loope
movl
xor
gs
mov
bound
lret
dec
inc
and
sub
arpl
xorl
push
push
or
push
cs
jno
push
mov
ret
es
xor
sub
xor
bound
aad
mov
lret
adc
cmp
jnp
sbb
cmp
jecxz
or
and
add
js
cmpsl
pop
or
cld
movb
in
sarl
dec
jno
mov
and
adc
mov
enter
jae
gs
ljmp
cs
je
mov
push
outsb
push
in
dec
inc
adcb
cmp
lods
pop
rclb
clc
shll
and
or
inc
inc
popf
es
adc
mov
mov
inc
mov
push
nop
stc
mov
ret
sub
fcmovbe
fcoml
sub
add
sub
jmp
push
cmpsl
lcall
pusha
sub
pop
cmp
inc
addr16
loopne
mov
jo
adcl
mov
cmp
push
adc
jl
movsb
cmp
arpl
jp
push
inc
xchg
repz
hlt
adc
mov
mov
addb
out
stos
sub
mov
and
inc
out
or
pop
rcl
lds
pop
inc
xchg
inc
pop
dec
decl
dec
or
les
sub
into
jp
add
iret
dec
sahf
push
std
push
popa
push
movsl
dec
xrstor
cmc
add
xor
popf
hlt
inc
test
or
jge
das
cmp
movsb
adc
js
das
and
arpl
mov
pop
lret
int
out
addb
mov
push
xchg
lock
insb
mov
arpl
inc
ds
add
outsl
mov
adc
dec
pushf
push
fstpt
mov
cmpsl
fcompl
outsb
loop
adc
or
inc
push
insb
or
ss
inc
jne
sbb
int3
xchg
call
rclb
int
jl
sahf
push
in
adc
pushf
mov
cli
cmpl
dec
inc
mov
and
daa
mov
or
notb
xor
fldenv
sbb
xchg
mov
jle
stc
push
adc
cmp
jge
test
inc
push
dec
push
xor
rclb
int3
sub
mov
jno
mov
adc
mov
adc
mov
sarl
jb
mov
push
pop
lcall
inc
sahf
xor
xor
call
enter
loop
mov
pop
sbb
out
ret
jbe
out
and
and
jle
dec
pop
les
or
mov
cmpsb
or
jae
push
xchg
pop
push
into
xor
mov
inc
ja
stos
je
movsl
inc
mov
cmpsl
lds
add
xor
jle
jns
push
cmc
je
stos
mov
fildll
inc
pop
movsb
sti
sti
dec
pushf
outsl
add
cmp
cmp
scas
mov
jae
outsb
pop
mov
rcrb
dec
lcall
outsb
lock
aaa
in
pusha
cli
fistps
sahf
inc
push
mov
fwait
sub
dec
xchg
clc
pushf
dec
test
leave
cmpsb
mov
shr
int3
fsub
push
fisubrs
dec
mov
push
pop
mov
shlb
stos
xor
mov
imul
xchg
mov
fs
rcll
mov
xor
movsl
fimuls
push
sti
mov
insb
ret
sub
fdivs
imul
and
je
and
mov
test
dec
jmp
push
or
addr16
jno
cmpsb
stc
test
sub
mov
rcrl
mov
adc
or
notl
int
ljmp
rcrl
movsl
movsb
fisttpll
mov
adc
mov
sar
imul
or
fistl
xlat
dec
fwait
jb
dec
sub
xor
push
out
test
pop
jp
and
sub
mov
lret
jmp
hlt
jb
dec
movsl
xor
xchg
je
test
xchg
mov
imul
outsl
jecxz
xchg
ja
int3
sub
mov
mov
sub
test
out
fidivs
sub
sarl
and
mov
and
std
dec
mov
adc
fimull
jns
fcoms
mov
cltd
push
ja
sub
pop
sbb
xor
scas
cmc
adc
je
cmp
jns
jmp
push
inc
adc
cltd
jnp
xchg
aas
or
repnz
push
lahf
loopne
outsl
std
push
dec
mov
jnp
cs
mov
mov
push
jne
cmp
adc
sbbb
mov
jae
cmpsb
and
in
sti
push
sahf
xor
sahf
fcoml
sbb
mov
stos
push
jnp
push
scas
outsb
fs
ss
sbb
into
push
inc
inc
adc
xchg
mov
and
push
mov
jns
inc
jmp
clc
jmp
stos
adc
or
and
enter
jne
xchg
mov
nop
leave
into
inc
cmp
cmp
sarb
mov
jmp
adc
dec
pusha
xor
jno
adc
and
int
and
movsb
jae
inc
sub
and
out
sbb
and
pop
xlat
cltd
ljmp
dec
pop
mov
jg
mov
jne
adc
inc
fnstcw
insl
stc
loope
icebp
push
cmpsb
mov
jmp
jg
xchg
cld
xchg
sub
jno
adc
loopne
mov
out
jo
push
mov
out
inc
sarl
push
cs
push
arpl
xor
in
and
lock
lret
mov
in
jb
lret
jnp
cli
jb
ja
or
andl
repz
fs
jb
lahf
sub
inc
sbb
jbe
add
in
aaa
inc
ja
and
push
inc
cmpl
loope
cmpsb
stos
cli
adc
cwtl
xor
jb
and
pop
addr16
scas
fcmovb
cmp
inc
mov
add
or
inc
js
lods
jle
fs
or
fucomip
xor
mov
into
cmp
loopne
sbb
repz
sahf
xchg
pop
pop
add
push
jo
imul
lret
xlat
and
out
stos
imul
jmp
lret
rclb
sbb
xlat
dec
enter
add
repz
nop
pusha
bound
mov
jle
push
popa
icebp
loop
xor
inc
push
jns
subl
mov
cltd
mov
stos
shrb
dec
loope
test
mov
add
sbb
fnsetpm(287
sbb
cmp
mov
mov
xchg
repnz
mov
adc
cwtl
xchg
and
mov
cli
jno
cmp
mov
mov
cli
push
or
sahf
and
pop
xchg
jne
inc
lret
xchg
sub
pop
int3
cli
outsl
orb
add
sbbb
pusha
mov
rolb
cmpsl
lahf
pop
fistl
jns
incl
jecxz
ffree
mov
mov
xchg
jp
sahf
mov
das
cmc
dec
test
xchg
lock
testb
jo
outsl
sub
jae
gs
pop
outsl
inc
movsb
add
movb
sahf
lahf
adc
xchg
pusha
jno
mov
ja
cmp
int
lcall
mov
xlat
les
out
popa
loope
xchg
lea
jno
cmp
decb
mov
and
out
pop
fwait
sahf
jge
pop
and
fst
inc
out
int3
mov
inc
cs
mov
loopne
or
movsb
pop
push
jae
int
or
xor
sbb
loop
xchg
push
pushf
cld
rcrb
std
enter
lcall
push
scas
xor
adc
mov
inc
sbb
push
push
xchg
out
call
xchg
rolb
imul
dec
or
pop
jnp
mov
sbbl
test
hlt
mov
mov
pop
cmpb
push
shl
test
mov
mov
push
repnz
push
sar
clc
imul
mov
pusha
jp
adc
pop
add
lret
xlat
rcpps
pop
aam
jg
dec
shr
shlb
pop
cli
out
inc
cmp
cli
in
inc
stc
or
iret
dec
jle
mov
lahf
sub
inc
lods
cmpsb
xchg
sbb
das
jne
sti
loopne
cmp
lds
mov
out
jecxz
or
and
sti
and
jnp
orb
mov
cmp
ret
pop
out
shll
push
jae
inc
icebp
adc
jns
loope
cmp
rorl
jg
fs
push
inc
xchg
fwait
addr16
inc
xchg
rclb
xor
scas
loopne
or
cmp
add
cli
sarb
vpcmpeqb
mov
xchg
shll
jecxz
xchg
and
in
cmp
ljmp
jmp
insb
mov
pop
sub
sbb
push
pushf
jl
xor
sti
jp
int
insb
mov
sbb
outsb
jg
push
imul
outsl
sbb
push
dec
push
inc
scas
cmpsb
adc
stc
lahf
cmp
std
or
test
cmovno
or
jp
repz
mov
insl
mov
out
movsl
lods
pop
mov
je
in
lods
jne
aad
xlat
mov
adc
fidivs
loop
sbb
insl
lods
sbb
stos
jecxz
mov
fisubrl
addb
pop
dec
push
enter
out
push
sbb
nop
inc
cmp
sub
xor
xchg
xor
aad
jae
push
xchg
std
sbb
das
inc
mov
push
xor
xlat
mov
or
ret
addr16
loopne
cmp
jnp
mov
jno
pop
outsb
pop
out
out
xor
cld
push
shll
lods
cmpb
pop
loop
and
mov
insl
test
stc
push
movsb
pop
test
sbb
push
out
push
scas
or
imul
mov
add
std
dec
jno
inc
jo
pop
push
adc
add
movsl
cmpsl
sbb
and
dec
pop
dec
adc
mov
testl
and
and
loop
add
xchg
jns
loop
jle
clc
jl
call
or
jecxz
call
mov
and
ficompl
or
andl
sub
int3
dec
int3
xchg
ljmp
repz
scas
add
ljmp
mov
es
repnz
popf
outsl
insb
rorb
addb
scas
push
orb
adc
data16
shrb
mul
ret
mov
shlb
push
pop
or
aam
loop
arpl
rolb
insb
and
and
xchg
ss
dec
push
pop
sbb
pop
not
imul
in
loop
jo
jbe
xchg
lret
push
pop
mov
mov
sub
ja
dec
pop
inc
test
sti
mov
mov
dec
cmpl
or
add
test
dec
notl
movsl
popa
movsl
lods
pop
andb
lahf
jg
push
rcr
es
sbb
mov
test
call
ljmp
std
fwait
mov
adc
enter
dec
xor
scas
inc
lret
pop
xor
scas
stos
movsl
jecxz
cmpb
pop
popa
xchg
mov
ss
mov
and
hlt
mov
and
pop
int3
adc
in
mov
add
cmpsb
xchg
push
dec
jnp
and
pop
and
sub
inc
xor
scas
cmc
sti
or
mov
sub
dec
cmp
outsl
add
jmp
jo
xor
mov
sbb
pop
mov
cmp
aaa
xlat
aad
int3
mov
lods
pop
pusha
dec
and
adc
add
inc
movhlps
sub
or
cmp
test
xchg
and
adc
nop
xchg
adc
jne
pop
nop
outsb
xor
in
js
cmpb
lods
mov
test
lret
add
ss
xchg
mov
enter
or
cmp
mov
fwait
lret
or
stc
gs
mov
or
xorl
pop
inc
pusha
dec
pusha
push
je
jle
jbe
mov
adc
fistl
shl
jecxz
push
repz
pop
insb
dec
jg
xlat
addb
test
fadd
pop
and
fsub
imul
sbb
add
and
mov
aas
fnstenv
lods
xchg
mov
inc
jp
ret
frstor
pushf
and
mov
xchg
sub
incl
cltd
mov
mov
lret
cmpsb
movsl
mov
insb
dec
jns
das
mov
push
xor
xor
push
pop
inc
and
jp
dec
ret
testb
sub
nop
mov
jg
xchg
outsl
stos
cs
mov
mov
pop
mov
daa
lods
and
and
std
in
mov
incb
test
packssdw
jmp
push
mov
push
add
aad
in
mov
out
sti
in
push
mov
mov
std
sub
lock
pop
aam
mov
outsb
ret
mov
push
pushf
adc
popf
add
mov
repz
int3
dec
dec
cwtl
and
ljmp
push
mov
jge
xor
into
adc
and
ret
vsqrtsd
dec
mov
mov
jmp
rcrb
subb
cld
idiv
xor
add
mov
rclb
rcrb
or
mov
push
test
movsl
mov
out
sarl
inc
push
mov
or
add
jl
or
mov
jge
add
dec
and
ret
mov
sbb
imulb
lds
jp
pop
out
inc
dec
jnp
outsl
repnz
inc
into
mov
outsb
inc
dec
pop
fcomps
adc
jmp
imul
aam
addr16
fwait
cmp
push
in
scas
push
fnsave
in
fucomip
push
jp
cli
jg
cmp
scas
pushf
adc
pop
and
adc
adc
inc
push
jnp
sbb
mov
lret
add
out
xor
arpl
and
fstps
pop
mov
inc
popa
xchg
mov
mov
push
out
lahf
movq
aad
push
lret
movsl
bound
mov
inc
inc
pop
fcomps
sbb
mov
imul
repz
xchg
cwtl
xor
pop
in
dec
xchg
and
mov
push
int3
add
push
or
jp
add
mov
lods
xor
cli
jmp
add
xchg
test
pop
outsb
xchg
xchg
fnstsw
mov
sub
mov
add
out
cwtl
ficoms
adc
xchg
sub
shlb
cmp
test
dec
inc
dec
jle
ja
cltd
test
or
xor
and
push
cld
cmpsl
push
imul
scas
push
fs
and
data16
and
mov
mov
outsl
rcll
std
mov
xchg
jo
sti
inc
sbb
mov
dec
test
pushf
mov
lret
ja
pop
subl
popa
mov
lods
mov
lcall
sub
aad
jle
fmuls
out
sbb
hlt
pop
lods
sbb
adc
add
sub
lcall
in
out
insb
pop
mov
xor
stos
and
jnp
sbb
add
outsl
lods
sub
out
es
call
rorb
mov
push
sbb
push
loope
flds
pop
cs
sub
inc
out
xor
dec
sub
dec
ljmp
or
sub
pop
xchg
fldt
and
sahf
loope
jmp
mov
loope
hlt
jne,pn
lret
movsl
push
lea
or
fcomp
adc
es
sub
mov
mov
jecxz
insb
call
mov
lods
mov
sub
inc
btc
sub
stos
xchg
test
popa
xchg
push
ficoml
adc
test
or
push
sub
push
sbb
loope
inc
mov
cli
jecxz
xor
lods
adc
cwtl
push
mov
pop
addr16
outsb
push
push
int3
jg
mov
sbb
test
inc
adc
mov
addl
nop
cmp
mov
push
sub
aad
mov
loope
nop
lds
mov
loopne
push
adc
test
fimuls
add
pop
adc
ret
inc
in
pop
xor
inc
sbb
scas
sbb
mov
imull
shr
mov
cmpsl
enter
and
adc
ss
mov
jo
outsb
out
xor
push
shll
sbb
sub
aam
xor
test
cwtl
pop
mov
out
les
dec
adc
add
ret
movsb
mov
adc
or
mov
test
mov
push
pusha
pushf
call
or
nop
outsb
lds
rol
mov
pop
dec
lcall
fstl
imul
jp
cmpsb
hlt
adc
or
mov
sbb
js
hlt
push
repz
aaa
rorl
mov
dec
cld
outsl
mov
cmpsl
mov
dec
mov
decb
lods
sbb
lods
push
xchg
adc
test
mov
jne
in
fnstsw
dec
in
or
or
out
decl
xchg
je
sub
pop
pop
mov
adc
fidivl
cmp
movsl
fwait
and
and
fwait
punpckhdq
loope
out
add
aad
mov
fadd
arpl
xor
push
mov
sbb
lods
sti
pusha
lcall
jne
mov
ss
sub
subl
leave
mov
je
js
out
into
popf
jge
pop
cmpsb
xor
imul
scas
aas
sub
dec
out
pop
lahf
clc
repz
bound
icebp
stc
cli
out
dec
and
mov
mov
sub
or
clc
imul
pop
faddl
stc
ret
or
addr16
sub
enter
scas
call
sub
fstl
cmp
inc
pop
pop
sbb
out
push
cmpsl
pop
xlat
shrb
gs
mov
cwtl
nop
adc
stc
mov
xchg
xchg
pop
sbb
xchg
icebp
cli
and
stos
daa
adc
pop
cmp
std
fs
insl
repnz
dec
rclb
dec
or
sbb
andl
out
xor
imul
mov
std
sarb
and
cmp
mov
or
repz
push
jbe
jg
fwait
lods
cmp
xor
add
xor
stc
movsl
xchg
cmc
hlt
dec
and
ficomps
shl
movsl
mov
pop
jl
xor
cltd
nop
ja
mov
inc
aaa
inc
xchg
mov
xor
mov
mov
dec
sub
adc
pop
pop
stos
jne
movzwl
popa
mov
adc
fstpt
jle
jo
mov
bound
repnz
ds
pop
subl
aad
loopne
cmpsb
mov
loopne
js
fadd
test
rclb
mov
dec
xor
in
fcmovbe
and
loop
imul
add
mov
push
mov
adc
lods
push
fs
fs
mov
push
add
int
sub
je
inc
pop
push
push
push
lock
pop
sbb
out
ret
lea
repz
out
into
fnsave
scas
jnp
std
dec
dec
int3
stos
movsl
sub
mov
lock
dec
or
pop
cmp
gs
cmp
aas
mov
cwtl
push
or
sahf
mov
xor
cmp
mov
ljmp
cmp
rcrb
std
loop
inc
decb
stos
mov
mov
fwait
test
cld
adc
push
in
iret
out
or
test
out
lret
pop
jb
push
inc
sbb
ss
xor
mov
inc
aas
fwait
cmp
pop
cli
add
add
cmp
sub
enter
inc
scas
rcl
fwait
push
sbbb
loopne
inc
mov
xchg
cmpb
inc
sub
jg
ljmpw
popf
inc
hlt
jmp
sbb
mov
and
shl
mov
movb
lea
pop
xor
fwait
ret
push
inc
leave
jl
sbb
or
notb
in
lods
xlat
sub
push
adc
mov
xchg
mov
xchg
dec
fstpl
pmaxsw
rclb
shrb
lock
ss
pop
jnp
push
in
gs
lret
mov
sbb
rcl
andl
cmpsl
pop
movups
shll
push
push
je
clc
test
or
pop
cmp
or
hlt
aam
pop
sub
data16
sub
pop
pop
ljmp
pop
jecxz
pusha
imul
inc
out
cld
fbstp
jae
cli
repz
lock
cmp
lds
and
ja
fisubl
fs
mov
push
mov
cmpsl
int
pop
popf
push
push
arpl
movsl
loope
dec
cmp
mov
fistpl
movsb
ds
jne
add
pusha
lahf
ret
inc
mov
scas
jp
cld
sti
jp
in
cltd
pop
and
xor
xchg
in
cwtl
int3
lret
je
and
negl
and
negb
cmpsl
insl
mov
push
dec
mov
fbld
cmpsl
and
out
mov
rolb
mov
add
push
add
sahf
sub
sub
imul
mov
mulb
inc
decb
or
mov
push
xchg
imulb
inc
xchg
xor
hlt
push
and
cmp
pop
jp
pop
and
push
mov
pop
jo
add
mov
enter
test
xor
repz
test
loopne
pop
add
mov
fisubl
and
sub
mov
ds
and
ret
cmpl
or
mov
jb
pop
cmc
mov
mov
mov
xor
lods
lahf
inc
pop
cmc
xchg
fistpll
out
fcompl
or
inc
arpl
pop
cmp
je
movsb
cmp
push
mov
dec
ficoms
push
add
sub
inc
mov
mov
ss
jbe
jge
out
scas
pop
push
push
jp
jg,pn
ljmpw
pop
add
pop
repnz
sti
stc
sarb
push
faddl
ja
dec
cmpb
fmulp
push
das
movsl
mov
ret
sbb
and
sti
arpl
dec
daa
mov
push
pusha
pop
cmp
adc
in
add
ret
jno
mulb
sub
dec
dec
es
jp
test
cli
subb
add
cmp
or
cmp
pushf
movsl
xchg
addr16
xchg
arpl
add
xchg
xchg
push
fists
lea
imul
les
mov
cli
mov
outsl
fnsave
scas
sub
jb
push
adc
xchg
pop
mov
jae
lret
pop
sub
xchg
jle
daa
fistpll
or
stos
cmp
movsb
add
mov
ret
pop
ror
or
or
mov
pop
jae
pop
rclb
sub
adc
sbb
iret
scas
push
or
xor
jmp
cmpsl
xchg
adc
pop
and
and
into
or
pop
pushf
cltd
fcomip
pop
iret
imulb
lods
jns
call
or
jge
cltd
xchg
or
or
add
mov
inc
cmc
xchg
dec
xchg
stos
and
stos
jo
cmovg
inc
jmp
daa
lods
out
xor
andl
push
clc
mov
aad
or
push
inc
and
push
test
aad
pop
rcrl
xor
xchg
cmpb
push
fistpll
adc
xchg
iret
and
inc
push
cmpsb
fldenv
mov
xchg
and
sub
fwait
mov
ss
push
jmp
push
push
pop
and
arpl
pop
daa
fldcw
inc
inc
iret
cld
fcmovnu
push
nop
pop
pop
sub
sbb
jae,pt
jno
xchg
and
add
pop
xchg
cmp
mov
loope
lret
adc
int
cmpl
int3
int3
pminsw
nop
ss
outsl
sbbb
arpl
ds
std
mov
push
dec
in
mov
inc
lret
and
test
mov
push
popf
push
jb
dec
jl
dec
aad
lods
outsl
pusha
ret
add
movsl
xor
pop
imul
movsl
je
loopne
test
mov
jne
or
adc
popf
repnz
pop
test
adc
enter
fsubrl
sbb
movsb
inc
xchg
pusha
pop
cld
and
das
ss
leave
cmp
sahf
pop
fisubrs
cmc
js
adc
gs
add
xchg
mov
or
mov
subl
mov
into
cmc
inc
jns
xor
ljmp
push
cmpsl
cmp
mov
cs
fsubl
push
sbb
jp
popl
test
aaa
insb
lods
insb
loopne
pushf
inc
test
xchg
jmp
insb
sbb
int3
mov
xchg
outsl
test
add
or
sbb
push
dec
adc
sbb
lock
insb
mov
adc
xchg
sahf
pop
jb
add
cmp
outsb
xor
scas
pop
pop
xor
call
movsb
int3
sahf
sbb
in
mov
clc
ret
mov
out
les
jecxz
xor
movsb
cmp
popf
adc
out
arpl
mov
mov
int
mov
outsl
and
add
jns
fsubr
mov
xchg
push
xchg
fiadds
movsl
pop
jmp
lods
xchg
insb
fs
test
xchg
push
std
aad
add
dec
pop
sbb
cld
inc
sarb
movsb
repz
repz
pop
and
cmp
ffreep
dec
lret
inc
push
push
ja
xchg
aaa
inc
cmpsb
xor
ret
dec
inc
jp
rolb
pusha
mov
and
std
pop
test
mull
jecxz
loopne
xchg
enter
push
xor
jl
imul
dec
ja
mov
pop
mov
out
lcall
lods
jmp
jmp
fcompl
push
adc
pusha
fcompl
jp
test
cmp
pusha
loop
aam
mov
cli
mov
ds
imulb
jp
vphaddbw
inc
push
stc
into
pop
sub
jae
in
stc
inc
pushf
fsubrl
je
mov
stos
sub
push
inc
repnz
and
in
sub
pop
lods
jg
pop
xchg
das
fstp
loop
xlat
push
adc
push
dec
cmp
cli
mov
fwait
enter
adc
ds
pop
push
inc
add
sbb
xchg
push
or
andb
pop
push
xchg
sbb
leave
inc
lcall
pushl
dec
lahf
insb
rclb
cmpsb
mov
xchg
dec
adc
pop
lret
mov
and
push
lods
int3
adc
and
in
push
mov
into
ja
icebp
dec
jno
pop
sbb
std
movsl
or
pop
inc
adc
andb
outsl
push
enter
jecxz
and
lret
jne
in
es
pop
movsb
xchg
mov
out
sbbl
inc
ret
cmp
jb
and
pop
imul
sbb
pop
popl
jae
mov
js
xchg
push
or
mov
lret
mov
xlat
dec
xor
out
sub
xor
xchg
pop
push
into
jo
dec
lret
xor
mov
in
pop
push
sub
int3
or
pusha
shr
rcrl
call
sub
cmpsb
aam
xor
subl
out
movsb
lahf
inc
notb
movsl
cmpsl
cli
ja
popf
pop
mov
in
xchg
adc
jne
lcall
sbb
std
call
sbb
or
fmuls
xchg
pop
mov
jmp
dec
mov
inc
or
in
hlt
pop
loopne
and
adc
push
cmp
inc
push
test
jo
pop
pop
roll
lea
addr16
cmp
arpl
mov
xchg
fsubrs
jb
pop
cmc
aam
cmc
or
add
push
pushf
rcll
je
jnp
push
push
int
fists
jp
inc
push
out
cwtl
in
xchg
shr
sbb
sbb
add
js
mov
les
cmp
ds
lret
shlb
xchg
lcall
das
and
dec
movsb
dec
jmp
mov
sti
mov
lahf
clc
aad
add
or
arpl
push
push
out
lret
js
out
out
mov
insb
hlt
or
out
inc
jmp
jo
push
arpl
push
sub
mov
and
aaa
jno
sub
or
pop
jb
mov
test
outsb
sahf
and
lret
inc
fs
lods
inc
and
or
add
pop
cltd
mov
and
push
xchg
orl
xor
or
xchg
repnz
xchg
mov
pop
in
ja
int3
sbb
jbe
cwtl
mov
scas
ja
hlt
aaa
ret
dec
scas
cs
iret
adc
ljmp
xchg
nop
aas
aad
lock
fnsave
add
pop
aas
in
lcall
xor
bound
jecxz
or
pop
jecxz
push
lock
jmp
adc
aaa
in
sbb
mov
push
inc
aad
ljmp
ss
cmp
xchg
rolb
and
test
cmp
or
add
push
xor
test
xchg
cmp
lahf
and
in
loopne
sub
lahf
arpl
dec
push
test
dec
push
inc
adc
jp
jl
testb
cmp
sub
pop
stos
adc
ljmp
push
push
or
and
inc
mov
xchg
push
les
mov
insl
fs
sub
xchg
scas
cmpsb
movsl
pusha
add
pop
clc
cwtl
dec
inc
ja
outsb
loopne
dec
sub
sbb
and
pop
jns
outsl
push
xor
xchg
roll
jnp
inc
mov
mov
addr16
test
ds
jge
inc
inc
cmc
pop
imul
lahf
ret
inc
mov
imul
mov
das
test
pop
sar
in
cmpsb
or
and
roll
loop
gs
sbb
add
movsl
lock
push
mov
fimuls
pop
imul
push
push
mov
test
out
fisttpl
add
dec
xorb
push
cmp
mov
push
inc
jne
inc
icebp
xor
adc
out
mov
lahf
fcomps
loop
daa
imulb
dec
or
stos
mov
test
push
push
mov
jle
mov
popa
sbb
and
jnp
nop
mov
sub
xor
fidivl
es
inc
jg
mov
aam
into
popf
pop
pop
mov
mov
imul
inc
jb
add
push
adc
xchg
push
or
jmp
ja
lret
lea
mov
filds
xor
mulb
cmp
das
data16
or
cli
daa
jns
lret
mov
dec
aam
jae
arpl
sub
iret
lods
mov
test
lods
inc
out
inc
add
lahf
sub
push
fsts
fsubrl
ljmp
mov
pop
addr16
sub
jle
outsl
popa
xlat
pop
xchg
mov
add
adc
ljmp
je
inc
sbb
out
sbb
push
outsb
add
sbb
inc
mov
mov
shrb
pop
stos
add
adc
aas
dec
aaa
add
mov
cli
pop
das
cmp
icebp
pop
jg
mov
and
fcmovb
sbb
mov
clc
cs
pop
inc
mov
sti
leave
scas
testl
mov
scas
je
mov
sbb
in
inc
xchg
dec
dec
lret
div
add
js
shrb
add
xchg
jbe
cld
jbe
sbb
lock
repnz
imul
dec
cmpl
pop
xlat
dec
ja
mov
cmpsl
xor
push
sub
sar
xchg
clc
cli
leave
lret
lahf
call
xor
and
loopne
or
bswap
shll
xor
out
icebp
lret
insb
add
cld
pop
jno
mov
out
xchg
es
xchg
ljmp
add
xor
jle
sbb
movsl
xchg
jns
jbe
aaa
sbb
ret
int3
cmp
idivb
or
jnp
xlat
shlb
inc
icebp
xor
dec
cltd
mov
repnz
popf
imul
popa
mov
add
fimull
mov
inc
clc
js
xchg
xor
sub
pushf
mov
and
push
mov
aam
nop
add
inc
outsb
rcll
mov
lea
scas
jge
cmp
rcrl
pop
mov
mov
inc
test
push
jno
jge
mov
outsl
mov
cld
in
aas
call
push
jle
rcl
lret
mov
dec
stos
rcrl
push
call
cmc
in
push
dec
sub
add
push
xor
adc
pushf
xchg
jge
enter
iret
call
cmpsb
pop
mov
std
gs
sbb
pop
inc
mov
mov
xchg
sbb
sahf
subb
dec
xor
test
mov
repz
xor
gs
clc
out
cmpsl
idiv
adc
xor
lods
cmp
imul
bound
out
jmp
popf
adc
sbb
call
sbb
xchg
xor
test
xchg
cmp
mov
adcb
es
xchg
adc
dec
iret
sbb
out
ja
ss
mov
out
inc
xchg
addr16
inc
nop
aam
mov
mov
lret
out
gs
imul
sbb
lcall
pop
cld
push
out
mov
xchg
jne
xor
mov
popa
stos
push
mov
out
dec
cmp
pop
push
aad
addb
ficomps
fmul
xchg
lea
jmp
call
lcall
cmp
inc
lahf
or
cmp
ror
test
je
cmp
gs
into
subl
lods
push
lret
add
push
add
xor
xchg
xor
xchg
jno
pop
jb
mov
xorl
mov
loop
lcall
lret
mov
mov
in
lods
outsb
fwait
data16
add
in
jne
mov
jo
xchg
mov
push
mov
pop
lods
sub
lret
mov
push
jge
push
pop
repz
xchg
adc
leave
ret
sub
in
movsl
add
push
and
jecxz
cmp
pop
cs
out
std
in
pop
xchg
jp
lret
pusha
mov
jno
aaa
pop
imul
mov
xchg
cltd
lods
xorb
mov
mov
loopne
push
cmpsb
jge
inc
add
xchg
mov
add
movl
and
and
out
add
adc
pop
or
and
adc
push
ret
mov
mov
ret
mov
popf
imul
or
and
into
mov
add
mov
add
pop
iret
loope
xchg
mov
orb
fsubrs
leave
repz
mov
add
lea
sbb
add
xchg
gs
adc
kandnw
dec
jo
or
stc
cmpsb
jo
mov
push
mov
pop
cmp
push
addr16
and
in
cmpb
gs
mov
scas
jo
mov
popa
lahf
mov
int3
ds
sbbl
pop
sbb
addr16
lahf
push
pop
xchg
adc
dec
hlt
lds
inc
cmpsl
les
hlt
rorb
repnz
adc
cltd
mov
xor
rcrl
or
das
je
imul
loope
lods
xchg
inc
pop
rcrl
or
push
in
stos
dec
cmp
jl
pop
sbb
sbb
loope
mov
adc
cmc
mov
adc
jp
gs
lret
push
pop
adc
test
cwtl
stc
mov
push
dec
xchg
pop
xor
mov
sarb
iret
mov
je
sar
pop
test
and
and
add
cmp
push
mov
in
mov
mov
and
xlat
jb
ss
jg
mov
aas
mov
jae
mov
mov
push
mov
mov
fildll
mov
popf
cs
dec
dec
std
xchg
leave
and
add
mov
pop
mov
movsl
push
inc
inc
subb
ficoml
stos
iret
jbe
adc
insb
cmp
ja
mov
add
and
sub
ja
dec
push
push
or
and
fwait
test
xchg
mov
clc
xchg
fildl
jge
and
cmpsb
outsb
cmp
pushf
mov
and
into
jmp
inc
aad
xchg
mov
mov
or
jl
mov
pusha
add
repz
out
aaa
out
rcl
mov
je
adc
or
mov
int3
stos
out
jo
jbe
gs
pop
and
ss
mov
ds
push
in
jbe
adc
dec
mov
rclb
push
adc
push
fs
lea
dec
inc
clc
sub
mov
stc
jno
lods
stc
inc
mov
jns
dec
jl
test
push
dec
mov
out
cmpsl
xchg
out
pop
lods
pop
fs
lods
and
roll
dec
jl
inc
mov
in
mov
sub
or
aaa
push
pop
jp
mov
in
pusha
aaa
sub
fldl
mov
outsl
inc
sub
dec
xchg
lahf
xchg
out
or
add
inc
mov
je
mov
sti
loope
ja
sbbl
cmp
cmp
mov
hlt
and
xor
or
sub
sub
adc
mov
das
xchg
addr16
clc
lock
mov
cmp
jle
int
pushf
jb
xor
sub
je
push
lahf
mov
sub
stc
shll
cmp
inc
sub
xchg
xor
inc
mulb
scas
cmp
adc
push
push
mov
and
mulb
xchg
pop
outsl
in
int
push
outsl
mov
cld
cmpsl
mov
imul
or
inc
xchg
add
xor
nop
push
cmpsl
dec
fmul
or
adcb
popa
cmpsb
and
fisubs
pushl
lods
das
stos
lret
adc
dec
pop
add
outsb
movsb
cmpsb
mov
cmpsb
sbb
lds
jbe
push
cli
sbb
out
in
cmc
lret
xor
mov
push
push
sbb
push
call
iret
or
jne
mov
fstpl
aam
mov
mov
lods
mov
mov
mov
sub
lock
imul
xchg
sbb
xchg
add
pop
cld
in
or
jbe
mov
push
arpl
xchg
dec
divl
cmp
mov
cmp
or
stos
iret
icebp
jnp
es
pop
shlb
push
cmp
mov
xorl
mov
inc
xor
mov
add
fmulp
or
and
pop
je
adc
int3
push
sbb
scas
pop
push
aas
shrb
push
cmpsb
insl
sbb
test
inc
enter
add
mov
and
rorl
sub
out
daa
scas
cmc
lds
push
testl
jg
mov
sub
push
lcall
and
mov
fisubl
out
fisttpl
inc
aas
cld
addr16
fisttps
lcall
fldl
outsl
repnz
stc
roll
jbe
add
xchg
cltd
gs
jno
int3
jl
push
xor
divl
pop
adc
jle
test
lds
addr16
dec
enter
fsubrp
jbe
push
repnz
xchg
add
mov
imul
lret
push
aam
mov
fs
sub
sub
sbb
sarl
lods
xchg
cwtl
ret
mov
mov
rcrb
call
sahf
aaa
cs
fwait
cmp
xor
fdivrl
mov
jno
push
xor
xchg
or
into
les
mov
int
xchg
es
add
pop
decb
jecxz
mov
pusha
daa
mov
mov
push
adc
idiv
pop
pop
test
jae
inc
cmpb
xlat
jmp
xchg
jg
jmp
mov
push
xor
roll
div
cld
push
xor
leave
pushf
jge
arpl
scas
jecxz
add
hlt
xchg
add
inc
sub
fwait
scas
push
or
mov
mov
xlat
and
add
aaa
out
rolb
sub
adc
shrb
jo
push
std
faddl
dec
jbe
push
adc
les
add
adc
std
adc
call
test
adc
sbb
xchg
adc
cmp
dec
inc
fisttps
pop
xchg
daa
sbb
lock
pop
cmp
test
sbb
add
dec
mov
cmp
aas
xchg
js
xchg
mov
push
pop
int
in
outsl
jns
stos
aas
xchg
mov
and
call
cld
test
jl
mov
in
imul
pop
ss
xor
pop
jmp
dec
leave
add
inc
xor
pusha
loop
sbb
lea
push
dec
dec
cli
xchg
cmp
fbld
movsl
mov
sbb
ret
mov
mov
or
lds
lret
jecxz
mov
lock
arpl
mov
add
pop
sub
mov
bound
pop
js
push
dec
lock
ret
jb
in
mov
fmuls
icebp
int3
jns
xchg
filds
pop
mov
jno
daa
cmp
pop
insl
sti
sbb
add
push
rcrl
loop
xchg
adc
insb
mov
inc
fdivl
xor
push
jno
call
sub
leave
jle
popf
pop
out
aad
scas
mov
out
sbb
pop
js
fs
xchg
iret
in
data16
mov
out
leave
lock
pushf
and
imull
fsubrs
xchg
in
out
sub
push
xchg
jbe
push
push
scas
clc
mov
push
insl
ds
les
inc
lock
cmpb
mov
jns
jne
jae
mov
inc
mov
sub
push
loop
out
and
jp
mov
sbb
into
jg
test
xchg
mov
fwait
cmp
decl
jae
lods
movsl
xchg
adc
xchg
icebp
stc
add
loopne
cmp
add
and
mov
movsb
out
pop
xchg
sbb
rcll
mov
lods
xor
cmp
inc
mov
loopne
dec
imul
mov
outsl
lahf
mov
sbb
ds
out
scas
push
push
cmp
cwtl
test
jge
lcall
xor
push
loope
fdivs
test
adc
xorb
jmp
vpaddsb
xlat
aad
rorb
insl
stos
sbb
cmpsl
or
adcb
and
pop
jnp
mov
cmp
jb
jp
movl
rorb
cmp
lds
sti
sub
and
cmpsl
jb
inc
pop
popf
sub
shlb
add
sbb
push
cmp
lahf
stc
inc
popf
mov
iret
mov
add
jnp
ljmp
jge
push
faddl
mov
xchg
adc
push
outsl
inc
cld
mov
leave
push
insl
pop
xor
lret
movsb
sub
movsl
movsb
insb
insb
sbb
out
jmp
dec
add
in
pushf
xchg
in
out
or
push
fcmovnbe
xchg
mov
das
adc
mov
lods
jle
clc
test
dec
add
lds
mov
jno
frstor
fstl
rol
cli
ja
push
jp
fs
imul
out
stc
jmp
jb
add
add
scas
lods
ret
cmp
lock
dec
mov
in
mov
push
mov
sub
xchg
dec
ds
idiv
xor
xor
sub
sub
loope
dec
sbb
and
xchg
push
enter
cmpl
lods
push
lds
loop
imul
mov
pop
dec
ja
lret
xchg
outsb
pop
mov
lcall
fsubrs
push
imul
int
mov
or
out
stos
mov
push
jae
sbb
mov
add
in
stos
pop
xchg
aaa
adc
cmp
sbb
into
test
jb
ss
jecxz
stos
sbbl
xchg
lret
or
push
mov
test
insl
lods
sub
int
shr
and
mov
popa
pop
and
or
fdivrp
std
push
xchg
pop
leave
pop
pop
cmp
mov
pop
push
add
icebp
loop
ret
lea
loopne
xlat
aad
and
bnd
pop
mov
cmc
push
daa
mov
int3
dec
test
sbb
push
pop
mov
mov
int3
outsb
mov
push
out
js
push
test
cmpsl
stc
out
and
or
test
sar
xchg
incb
mov
int3
popf
adc
lret
dec
xor
push
xorl
add
mov
mov
jno
push
inc
test
adc
sbb
xchg
out
cmp
jo
cli
push
mov
int3
xchg
out
pushf
iret
xor
mov
mov
or
pusha
xor
lea
jbe
faddl
push
jae
andl
int3
stos
cmpsl
mov
sub
jle
or
xchg
jbe
mov
scas
cmc
inc
jmp
mov
xchg
icebp
sti
outsb
aaa
mov
jg
sahf
adc
movsb
das
mov
xchg
xchg
cmp
adc
inc
fs
out
es
sahf
insl
sbb
fistps
pop
add
pop
icebp
sbb
add
loope
push
popf
dec
jmp
xchg
push
add
push
jl
jnp
mov
xchg
movsb
mov
cmp
cld
pop
dec
mov
stos
sub
sbb
movsb
push
test
or
das
jecxz
push
pushf
inc
push
add
lea
inc
xor
ret
bound
lcall
fs
arpl
jne
or
popf
inc
pushf
mov
cmp
xchg
out
xchg
mov
sub
lock
cmp
mov
xchg
int
pop
int
or
repz
aam
hlt
je
cmp
inc
clc
push
loope
cmp
xchg
push
sbb
adc
add
in
push
adc
js
or
and
inc
flds
pop
icebp
scas
pop
xchg
in
and
daa
pusha
in
pop
push
mov
insl
fisubl
insb
test
cmp
jns
cmpsb
xchg
mov
lret
popa
lret
push
testl
dec
fsubrs
and
test
aas
jns
arpl
add
add
push
pop
leave
mov
in
daa
sbb
mov
lds
add
jl
outsl
jb
inc
dec
leave
xchg
and
push
cli
lahf
xchg
jno
jg
jge
mov
pop
sub
mov
mov
lret
movsl
cld
icebp
scas
dec
jp
mull
ja
stos
push
decl
test
push
push
sbb
out
fdivp
push
test
popf
loope
sub
xchg
pop
jmp
pusha
dec
pop
xchg
push
cmpsl
popf
dec
and
inc
cmpsl
not
dec
loope
xor
jmp
stc
nop
push
lods
mov
pop
cltd
sbb
mov
into
mov
data16
cmpsl
divl
ret
sub
mov
or
pop
in
je
stos
xchg
das
imul
and
es
adc
inc
mov
pop
insl
addr16
inc
sub
jb
sub
daa
test
push
les
andb
adc
add
or
push
cmp
leave
adc
jbe
fisttpll
imul
xor
rclb
pop
push
inc
sahf
out
push
in
add
call
loop
xor
add
mov
in
ljmp
inc
lcall
fs
push
dec
loop
ret
cltd
pop
mov
stos
adc
xor
loope
sbbl
xlat
cmp
xchg
ja
mov
fsubrl
bound
mov
adc
xchg
xor
lcall
push
out
push
jns
rorl
out
jle
and
ds
jae
je
ljmp
out
xor
inc
sub
xchg
rorb
mov
cld
jecxz
fisubrs
xchg
cmpb
lahf
ret
mov
mov
mov
aad
or
sahf
scas
clc
test
dec
fists
jmp
pop
xor
mov
pop
xchg
push
adc
shll
test
ficoms
movsl
or
dec
xor
pop
addr16
adc
adc
mov
dec
loopne
and
pop
xor
movsb
xor
pop
pop
jecxz
lds
mov
inc
inc
negb
sahf
dec
insb
dec
repz
xchg
inc
add
enter
mov
out
add
ret
sbb
dec
stos
shll
pop
inc
ret
pop
and
iret
movsb
jecxz
dec
ja
mov
sbb
scas
fstpl
mov
adc
push
dec
in
xchg
push
push
popa
imul
sbb
or
pop
cwtl
add
out
sarl
das
lcall
jnp
inc
inc
cmp
inc
daa
movsb
stos
dec
loop
jge
pop
in
pop
mov
dec
int
xchg
mov
nop
mov
test
cli
and
rcr
lret
das
cmp
nop
pop
xchg
flds
push
push
in
out
mov
mov
xchg
push
jns
lods
push
mov
push
loopne
pop
add
cmp
mov
adc
fsubrs
addr16
xchg
sub
pop
pop
test
mov
daa
outsb
push
scas
movsl
roll
cmpsl
outsl
loopne
ret
data16
shl
sbb
jg
or
sub
adc
sahf
jmp
lea
mov
mov
push
dec
lock
jle
cmp
or
movl
cmp
cltd
add
adc
push
pushf
scas
adc
jg
or
add
push
stc
pop
in
ret
cmpsl
loopne
int
jno
cmpsb
fwait
mov
dec
int3
adc
loop
fcomps
repz
dec
aaa
out
cmp
push
or
xor
mov
lahf
xor
shl
push
mov
jle
mov
cld
scas
je
xor
xor
shll
cmpsl
shlb
pop
ds
dec
fs
add
xchg
dec
les
sub
movsb
ds
or
cmp
sahf
shll
cmpsl
les
jge
mov
popf
push
xchg
fidivs
jle
mov
mov
clc
popa
arpl
sahf
mov
mov
repz
add
loopne
std
es
push
outsb
movsb
adc
jmp
sbb
or
xchg
clc
repnz
jg
xchg
inc
jmp
pop
les
mov
lods
inc
icebp
hlt
cwtl
mov
sahf
jle
pop
jle
shlb
in
repnz
test
mov
lret
push
lret
dec
outsb
je
fidivs
adc
pop
mov
jp
sbb
jb
les
push
jle
es
adc
xlat
iret
fnsave
cmp
inc
out
mov
in
sahf
out
scas
push
stos
cwtl
movsb
cmp
cmp
cmpsl
cmp
shrl
in
xchg
mov
xor
xor
xor
mov
fiaddl
lea
sbb
nop
psubsb
jmp
push
inc
sub
cmc
or
jecxz
imul
cmp
aas
jo
lret
xor
sub
jg
sub
outsb
mov
cmpsl
push
scas
aaa
mov
mov
mull
xor
loope
aas
xchg
pop
push
mov
pop
in
insl
push
push
or
dec
jo
rcl
add
sub
rcrb
mov
je
sbb
sbb
sti
shll
mov
mov
mov
cmpsb
aad
inc
pop
adc
test
sbb
aam
xchg
popa
mov
movsb
repz
cld
lea
xor
or
in
mov
xchg
pusha
adc
mov
imull
inc
jns
rcr
cmp
aam
mov
mov
cmp
pop
cmp
bndstx
lret
lea
loop
pushl
cld
jecxz
mov
cmpsl
and
jns
scas
mov
sbb
jle
lock
imul
cld
pop
bswap
pusha
fidivl
push
mov
xor
sarb
sbb
mov
lret
cmpsb
in
ja
push
test
loope
mov
push
adc
jg
jmp
fisttps
dec
call
sub
sbb
rolb
ljmp
mov
cmc
dec
orl
pushf
ret
xlat
mov
pop
mov
out
push
ret
out
orb
and
xchg
repnz
mov
cmp
jne
lahf
addr16
cmpsb
in
lods
nop
or
and
sbb
rcrb
pop
cli
ret
jns
sbb
movsb
in
xchg
stos
movsl
imul
mov
inc
dec
pop
popw
sbb
fisttps
pop
cmpsl
mov
xor
loopne
lods
ljmp
mov
inc
xlat
mov
and
mov
pop
neg
ss
adc
insb
mov
imul
cld
leave
out
mov
push
bnd
cmp
jne
jbe
stos
cmpsb
in
loope
and
subl
or
pop
mov
loope
push
xchg
cmpsb
push
shr
fidivs
xchg
in
loop
sub
mov
dec
nop
pop
clc
gs
addr16
sbb
inc
push
xchg
enter
lock
push
ss
in
push
scas
cmp
jnp
movsb
jb
das
pop
add
adc
loope
jno
sbb
cmp
fldcw
mov
jbe
sbb
arpl
xor
fcompl
sub
mov
ja
mov
cmpsb
test
lods
pusha
out
cmpsl
cmp
jmp
cmpsb
iret
test
jb
test
ljmp
fidivl
clc
xchg
movsb
dec
mov
pop
pushl
adc
dec
dec
filds
leave
adc
in
jle
popa
cli
imul
mov
pop
fs
mov
pop
pusha
pushf
div
shr
mov
fwait
mov
cmp
add
and
add
xor
inc
add
mov
inc
fstps
cmp
jno
lret
cld
push
push
xchg
cmc
push
popa
xchg
sub
inc
and
ljmp
out
loop
mov
in
and
xor
aam
in
pusha
mulb
and
ret
aam
push
push
xchg
mov
xchg
icebp
in
cli
gs
out
jecxz
xchg
xchg
popf
jecxz
ja
mov
adc
fists
mov
lcall
fs
lret
out
push
mov
adc
rcrl
lods
and
cmpsl
jmp
jnp
add
aas
outsl
mov
repz
xchg
test
jns
xchg
mov
imul
dec
and
xor
out
mov
inc
aad
xchg
add
lahf
pop
add
arpl
testl
mov
in
xorb
out
and
and
push
or
out
dec
sbb
loopne
icebp
jl
lds
push
xchg
out
out
in
fidivrs
lcall
enter
sbb
lret
pop
in
arpl
out
gs
sbb
shl
adc
ja
dec
mov
call
fimuls
mov
cltd
sbb
pop
mov
lods
jne
pop
sub
ss
or
and
cld
pop
xchg
fists
fbld
push
dec
mov
mov
lods
cmp
lods
sub
or
mov
pusha
xor
scas
jmp
xchg
out
and
aaa
leave
mov
mov
dec
call
sub
rcrl
jmp
imul
jb
mov
popf
lods
jae
jmp
jae
sbbb
test
into
ret
push
and
ficompl
popa
adc
xchg
add
loopne
and
test
sub
into
dec
mov
dec
gs
xchg
push
mov
dec
jo
and
and
sbb
aam
dec
scas
mov
insl
out
jge
mov
jge
lds
icebp
out
sbb
into
fnstsw
aam
ret
dec
adc
stos
xchg
clc
adc
nop
add
xchg
subb
cli
xor
rorl
push
push
xchg
jecxz
or
incb
test
pop
roll
aas
push
pusha
or
cmp
inc
mov
daa
shl
es
addr16
imull
sub
out
call
sbb
cmc
lcall
push
inc
stc
jp
inc
call
lds
adc
fwait
into
xor
paddsb
fwait
test
jne
and
scas
sub
pop
jne
int
mov
in
xchg
dec
clc
mov
and
int3
or
insb
push
lock
push
push
or
mov
sub
je
filds
aaa
or
popf
and
sti
testb
pusha
ficoml
jge
arpl
adc
mov
and
xlat
jb
mov
fwait
into
test
xchg
xor
adc
xchg
imul
cli
and
pop
outsb
add
das
xchg
orl
pop
jmp
dec
mov
mov
test
icebp
pop
dec
and
mov
dec
mov
adcb
fisttpl
jne
sbb
fnsetpm(287
insl
pushf
jbe
in
arpl
pop
ret
mov
push
mov
sbb
out
lods
dec
sub
ret
sarb
xor
inc
pop
test
test
leave
xchg
mov
add
cmp
mov
and
push
nop
push
cwtl
jno
imul
loope
mov
divl
jp
aam
push
cmp
adc
leave
outsl
xchg
cmpsb
loope
lret
test
and
insb
cwtl
and
fcompl
into
jmp
popa
jns
lock
push
lea
sbb
adc
xor
adc
mov
fisubl
scas
fcmovbe
inc
es
mov
ror
inc
mov
into
inc
or
ja
outsb
popa
and
scas
int
ss
pop
fisubrl
xor
cli
cmc
aas
fists
pop
cmpsl
pop
sbb
and
add
add
and
add
nop
push
push
incb
adc
mov
insl
sub
pop
inc
fildl
mov
adc
jbe
jmp
mov
movsl
lods
in
mov
gs
movsb
inc
stos
push
fs
add
les
loope
fimull
fisubl
in
xchg
int3
mov
xchg
adc
sub
push
push
sub
addr16
subl
stos
pop
push
sti
aaa
sub
shlb
pop
pop
adcb
test
dec
xlat
pusha
addl
in
scas
mov
or
lods
lock
fwait
dec
icebp
xchg
icebp
aam
roll
pop
movsl
add
push
lods
dec
outsl
lds
dec
jmp
mov
mul
scas
mov
mov
hlt
add
ljmp
mov
dec
mov
push
mov
out
and
hlt
enter
in
and
or
or
sub
not
pop
sbb
dec
push
stc
int
inc
ljmp
fldcw
jb
add
or
dec
xchg
lcall
pop
push
mov
icebp
aam
mov
jle
out
sub
js
adc
fsubrs
aam
add
shlb
or
sub
jo
cmpsb
adc
mov
stos
adc
out
or
ljmp
es
push
pop
add
sahf
fadd
push
imul
mov
add
pop
mov
mov
cs
xchg
cmpsl
cmp
cmc
xchg
push
fbstp
scas
cld
sti
in
jne
sti
addr16
in
pop
push
mov
xchg
adc
mov
or
inc
aaa
mov
pop
or
jns
push
sbb
xor
cmp
clc
jns
and
push
loopne
pop
inc
dec
movsb
or
mov
push
out
out
popf
mov
jge
dec
in
out
pushf
jo
xchg
mov
sub
das
pop
int3
xor
or
sub
les
pop
stos
inc
mov
mov
daa
aad
pminsw
adc
push
cmpsl
dec
sbb
in
push
jbe
push
sti
jmp
clc
and
adc
add
fdivrs
mov
mov
mov
shrl
add
xor
pusha
xor
mov
mov
movsl
add
mov
lods
pop
js
mov
mov
cmpsl
leave
lcall
ss
sti
out
pop
rcll
and
sbb
adc
sbb
test
pushf
fwait
add
pop
or
fmul
cs
mov
mov
add
push
mov
into
fists
jle
pushf
imulb
mov
sbb
xchg
mov
jmp
sbb
fcompl
and
repz
mov
sub
push
scas
fnstcw
sub
push
xor
mov
hlt
fisttps
xor
setge
pop
dec
push
scas
mov
fnstenv
xchg
or
inc
pop
xlat
jae
push
xchg
xor
xchg
jo
popf
call
sti
js
loopne
addl
or
rcrl
cwtl
shrl
xor
gs
dec
lcall
jo
jne
lret
push
addb
pop
nop
jg
and
and
dec
jae
jecxz
inc
mov
mov
xchg
sub
fucom
shrb
cmp
xchg
adc
cld
sbb
cld
mov
test
dec
decb
inc
mov
mov
movsl
push
jno
lahf
jge
jle
pop
fists
call
or
push
stc
imul
sub
ret
repz
xor
sub
data16
pop
dec
or
imul
enter
cmpsl
sbb
je
and
iret
jl
mov
cmp
repnz
test
sbb
sub
ljmp
cmp
out
push
or
int3
pop
inc
movsl
sbbl
jno
pop
jmp
mov
xorb
xchg
sahf
sbb
jbe
mov
sub
loop
inc
arpl
fsub
pop
jmp
dec
aas
ficompl
roll
shll
push
mov
leave
xor
ret
lea
pop
gs
lret
in
ds
mov
aaa
mov
scas
xor
or
xchg
cmp
das
dec
or
xlat
push
mov
adc
pop
xor
xlat
sbb
jmp
subb
mov
jmp
cmp
mov
sub
mov
lds
xchg
mov
dec
adc
testl
fcomps
xchg
orl
movsb
sbb
add
mov
in
or
dec
cmpsb
jae
das
push
outsb
add
inc
jle
sbb
xchg
in
jae,pn
clc
push
push
les
sub
ret
jnp
mov
mov
sbb
fstpt
jp
in
out
fsubl
xchg
sahf
stc
mov
arpl
fpatan
fcmovnu
mov
das
xchg
sbb
adc
dec
adc
xor
lock
mov
cmc
popa
xor
dec
daa
test
es
push
jmp
loope
mov
xchg
adc
add
jl
test
scas
test
lods
mov
cld
sbb
mov
pop
and
mov
mov
bnd
sbb
pusha
pop
or
mov
push
cmc
xor
inc
mov
lret
xor
or
jge
movsl
dec
mov
cmpsb
sub
sub
pop
xor
cmp
mov
sub
xor
and
sti
mov
adcb
pop
jne
in
adc
xchg
push
push
popf
xchg
jle
repz
cmpb
fmul
repz
sahf
mov
jbe
sbb
loope
xlat
or
aas
adc
jecxz
mov
xchg
outsb
xchg
hlt
add
mov
inc
sar
cmpsb
mov
arpl
clc
xor
fstl
mov
jp
xor
cld
sbb
test
addr16
sub
mov
roll
adc
cmp
mov
add
jbe
adc
jmp
push
ja
jl
cmp
inc
cwtl
sbb
daa
inc
cmp
jle
xchg
inc
sbb
cmp
imul
lret
dec
inc
fcmovne
xchg
jecxz
imul
rcrb
jp,pn
xchg
jns
mov
mov
lret
pop
mov
mov
test
add
mov
stos
lods
std
loope
sbb
outsb
int
add
test
addr16
js
add
mov
int
test
or
loop
inc
into
scas
sub
pop
jg
pop
jb
add
lea
adc
stos
loop
inc
ret
and
cltd
pop
stos
push
cmp
jg
arpl
popa
xlat
inc
jo
repnz
pop
std
dec
adc
sub
test
or
pop
cld
mov
xchg
orl
push
and
or
ss
add
imul
push
inc
rorl
clc
push
repz
xchg
sahf
outsb
sbb
push
pusha
push
mov
dec
cmp
in
inc
fisubs
xor
vpaddsw
push
insl
ss
aam
inc
movswl
arpl
es
jge
shlb
pop
cmp
pop
mov
and
dec
mov
push
pop
jne
cmpb
cmp
sbb
je
sub
cld
sub
jmp
insb
jle
dec
loopne
enter
movsb
inc
inc
out
pusha
into
adc
int3
mov
push
add
push
test
jle
imul
shlb
hlt
xor
mov
jmp
das
cmp
jmp
ss
mov
and
adc
fcoms
add
mov
in
and
popf
or
add
cmpl
pop
xor
pop
push
xor
dec
push
inc
dec
add
jbe
imull
sti
dec
inc
frstor
clc
gs
call
dec
neg
cmpsl
loop
movsl
fcomi
test
sbb
lods
or
jbe
dec
test
int3
fisttps
js
in
out
loop
jnp
xor
shrl
pop
inc
lock
jl
pop
stos
mov
sbb
bts
into
lods
xor
xor
inc
xchg
les
push
pop
clc
pop
and
mov
rcr
jb
cmp
cmpsb
cli
inc
cmp
gs
push
cld
repnz
in
jl
xchg
insb
sbb
add
ret
stos
insw
and
push
cmpsb
add
sub
test
mov
loope
aaa
adc
int3
fmul
cltd
mov
and
mov
flds
arpl
insb
mov
jmp
xchg
add
lahf
inc
popf
movsl
shl
add
repz
xor
shll
adcl
push
xchg
add
dec
push
orl
pop
push
pusha
push
dec
fbld
mov
and
das
mov
in
cmp
cmp
rcrl
mov
push
mov
aad
mov
loope
daa
xor
xor
push
out
movsb
insb
ja
mov
dec
xor
mov
xchg
fcomps
fcomps
icebp
data16
push
sbb
jl
jne
das
mov
or
jge
fimull
mov
inc
mov
xchg
or
and
sub
push
into
jle
popf
cltd
mov
inc
sub
out
pushf
mov
mov
and
mov
popa
rcrl
mov
lea
push
push
push
jo
call
std
pop
pop
in
pop
popa
data16
xchg
xchg
mov
aaa
outsl
out
les
das
jecxz
pop
adc
lahf
movsb
jae
cmpb
std
fs
inc
addr16
fldcw
dec
xor
xchg
nop
std
push
roll
imul
sbbb
fs
adc
mov
push
cs
insl
jnp
out
mov
or
ss
iret
push
ret
mov
out
jg
pop
insb
aas
out
leave
ljmp
cmpsl
push
xlat
pop
cmpsl
mov
push
mov
or
sub
cmpsl
push
dec
sbb
cmc
testb
test
stos
lea
xchg
pop
cld
and
das
inc
dec
addr16
insb
cmpsl
bound
jmp
fwait
xchg
push
nop
movsb
test
pusha
cmp
loopne
push
mov
sub
int3
dec
mov
jecxz
jle
or
or
out
jg
push
stos
mov
cmp
insl
out
mov
imul
add
cwtl
lret
cmpsb
mov
adc
dec
lods
in
push
cmc
or
mov
push
jnp
test
push
ret
fwait
push
dec
pop
jnp
adc
sbb
push
ss
ficompl
fnstcw
sbb
loop
xor
inc
popf
jae
and
push
xor
ja
inc
ja
cmp
sub
cs
add
in
sbb
push
leave
out
add
fcomps
rorb
mov
push
and
fwait
add
mov
mov
cmpsb
adc
pop
fs
js
pop
sub
icebp
cmp
jno
jmp
cs
pop
dec
call
cmp
cmp
xlat
dec
push
cmp
cmpb
iret
mov
dec
in
xchg
mov
or
mov
and
negb
jle
mov
fstps
jp
jns
inc
pop
mov
icebp
daa
inc
in
xor
mov
stos
nop
sub
js
sub
and
sti
cmpsl
sbb
add
pop
mov
and
dec
stc
ja
and
push
push
pusha
je
xor
mov
mov
stos
popf
jle
mov
fistpl
and
scas
adc
lods
std
add
rclb
and
or
mov
jmp
pop
xchg
xchg
scas
imul
ficomps
mov
add
dec
mov
repz
xchg
xor
push
pop
cltd
cli
dec
test
xchg
or
pop
or
sub
xchg
jmp
xor
jo
mov
bnd
jl
mov
push
mov
xchg
mov
sbb
adc
lcall
mov
ret
dec
notl
repz
xchg
adc
add
out
add
add
mov
into
fcomps
mov
xchg
lret
mov
push
mov
adc
inc
dec
pop
ss
int3
and
pushf
push
fsub
push
inc
push
xor
outsl
mov
mov
mov
push
mov
cmpsb
test
jg
cli
ja
xchg
mov
pusha
sti
pop
insb
or
repz
jo
in
inc
cmc
and
push
pop
xchg
lret
aaa
ror
imul
cmc
fisubrs
out
mov
imul
ret
mov
sub
rorl
stos
ss
mov
push
repz
xchg
pop
jne
mov
in
loopne
test
inc
pop
loopne
in
inc
pop
imul
sti
insl
cmp
addr16
ret
mov
pop
dec
das
inc
xchg
fisubs
fldenv
lret
dec
cmc
xor
jmp
andl
out
sahf
xor
imul
and
sub
add
cmpsl
pusha
mov
cmpsl
rol
call
jl
sub
pop
in
mov
mov
sbb
andl
data16
jl
push
pusha
xlat
ret
pop
cmc
inc
insl
into
jmp
push
xchg
xchg
adc
dec
or
mov
ret
pop
pop
rcr
in
or
aas
jecxz
pop
bound
jmp
lret
repz
jbe
mov
jne
out
inc
jecxz
loopne
inc
xchg
pop
fisttps
sar
dec
cli
sub
push
ljmp
jnp
jl
in
dec
repnz
add
mov
nop
dec
sbb
pop
scas
inc
lock
mov
or
jp
test
insb
inc
popa
sbb
mov
mov
lahf
pop
xchg
ds
fwait
or
std
fldt
pusha
cmp
inc
repnz
push
sbb
adc
pop
xchg
jl
cs
sahf
fildl
sbb
mov
mov
mov
pop
pushf
mov
imul
mov
xor
xor
mov
jae
movb
int
mov
loope
push
out
push
mov
adc
mov
push
orb
pop
add
cmp
nop
cwtl
mov
cltd
and
add
lods
sbb
lret
aas
lock
psllw
enter
ficoml
ds
jecxz
sbb
orl
ffreep
jo
aad
jbe
mov
fisttps
fstpl
lret
andl
cmp
dec
mov
sti
pop
jns
mov
mulb
sbbl
mov
stos
xor
rolb
clc
aad
cmp
scas
sahf
stos
cld
dec
jbe
stos
fmull
aas
dec
test
push
fucomp
movsb
push
mov
dec
fnstenv
pushf
out
in
gs
aad
in
addl
pop
jmp
jb
xchg
jnp
or
push
sub
sub
jbe
jmp
sbbb
std
xchg
popa
jge
aas
std
dec
test
push
fsubrs
xor
out
loopne
aam
xchg
sbb
inc
in
mov
sbb
inc
adc
pop
test
fs
push
into
insl
pop
sub
xchg
push
mov
xor
cmp
dec
in
push
repz
rol
fidivrl
cmp
leave
stos
test
dec
pusha
insl
test
js
push
cmp
jge
and
arpl
int3
out
add
or
fucomp
push
jae
fidivs
test
xchg
je
mov
xor
jp
fildll
and
ret
mov
cmp
push
icebp
cmp
mov
je
lock
test
sub
es
cmp
or
sub
shr
add
mov
fadds
xorb
xor
inc
insl
popf
lods
cld
cmp
fmuls
pop
mov
fsub
xchg
sahf
push
fdivl
push
xor
popa
mov
out
and
xchg
ja
loop
mov
sahf
lock
or
dec
in
out
test
stos
iret
push
mov
xorl
arpl
inc
stc
inc
fcmovne
not
add
adc
and
inc
inc
and
dec
xchg
inc
cmpsl
and
mov
mov
test
push
addr16
iret
repz
les
out
sarb
in
enter
adc
int3
arpl
xchg
aas
jmp
loopne
pcmpgtb
sbb
push
pop
add
and
jmp
stos
div
mov
mov
jae
movsb
lahf
mov
insl
fsubrs
add
stos
loop
and
sti
inc
pop
daa
int
and
js
sbb
aam
into
movsb
clc
fcmovb
mov
aaa
xor
sti
jb
cmpsl
xchg
pop
mov
mov
cmp
add
xchg
in
push
dec
mul
rolb
jle
icebp
fsubrs
sbb
fstps
cld
out
negb
jp
mov
mov
sub
and
pop
adc
or
sub
and
inc
xchg
xchg
mov
push
xor
outsl
push
mov
lret
enter
dec
pushf
adc
sub
test
jb
dec
jo
adc
repz
mov
mov
cli
sub
outsb
nop
cli
sbb
outsb
pop
lds
and
jne
cmp
and
inc
cmp
out
mov
loope
ret
xor
cli
test
imul
push
jnp
adc
notl
lods
mov
push
adc
or
jo
imul
cmp
cmp
cmp
xchg
lock
add
test
jmp
dec
adc
push
sub
addl
arpl
xor
sub
mov
ljmp
ret
jl
xor
sub
push
sub
dec
lahf
mov
sub
lods
push
testb
js
push
dec
inc
adc
adc
jl
pop
les
push
xchg
mov
sbb
xor
push
push
popf
ret
rorb
ret
aad
push
call
dec
lahf
ret
dec
sub
dec
ror
add
repnz
test
int
dec
fdivrl
das
aam
in
xchg
and
push
add
and
pop
gs
aas
jno
jbe
lds
test
daa
xchg
nop
or
icebp
push
ret
loopne
push
dec
pop
mov
mov
mov
call
popf
jno
dec
cmpsl
mov
xchg
jmp
cli
adc
int3
sti
push
push
sbbb
jne
stc
rorl
rcr
add
dec
jle
aam
leave
sbbl
aam
shlb
jne
dec
subb
sbb
mov
jp
adc
mov
cwtl
mov
dec
jne
loopne
mov
inc
rcrb
sbb
imul
mov
mov
pop
add
inc
ret
lock
dec
into
jne
mov
mov
cmpsl
aam
add
in
dec
jmp
lahf
mov
inc
xor
sbb
aad
pcmpeqw
daa
scas
test
sbb
jl
loop
pop
in
test
in
aas
xchg
lods
lret
fdivp
ret
call
push
dec
xlat
xor
insl
lret
cmp
mov
fs
dec
xchg
add
push
lahf
in
nop
mov
cmp
sbb
dec
into
jl
dec
push
in
testb
aad
jb
inc
dec
jg
or
movsl
rcl
sbb
outsb
add
dec
andl
pop
insl
cld
adc
out
std
mov
xchg
aas
sbb
fs
cmp
push
sub
sbb
cli
add
test
xchg
fwait
or
and
in
adc
jg
rcr
icebp
movsl
loopne
nop
cmp
push
loopne
inc
into
mov
sbbb
daa
push
int
inc
fsubr
pushf
fmull
inc
addb
cmp
enter
call
dec
jno
dec
mov
xchg
mov
mov
ret
loopne
fcoms
dec
push
sbb
pop
cmp
lds
repz
jne
jmp
pop
jb
and
fnclex
adc
sub
mov
dec
int3
adc
cltd
dec
js
and
mov
jmp
out
std
mov
push
dec
fimuls
sub
and
add
mov
arpl
imul
pop
stos
jge
adc
out
inc
xor
ja
dec
ljmp
xor
mov
cmp
mov
adc
arpl
push
cwtl
imull
iret
and
iret
outsb
and
mov
lea
out
push
out
in
jle
mov
sbb
gs
mov
test
pop
cmp
pop
loop
xlat
jbe
sub
mov
jns
dec
inc
dec
push
jle
xchg
cmp
mov
add
adc
dec
push
cwtl
aam
stos
rclb
inc
daa
xchg
aam
mov
or
test
or
loop
psrlq
dec
push
inc
insb
insb
inc
stc
aam
xchg
popa
imul
inc
iret
fs
add
cmp
mov
aas
and
fdivrl
data16
jns
push
lods
or
push
movsl
orl
sub
add
xor
outsl
call
push
cmp
sub
push
jne
jne
inc
jo
xchg
sbb
jne
mov
pushf
lock
int3
mov
jmp
dec
cs
imul
orl
pop
negl
int3
add
je
in
or
inc
pop
push
xchg
jns
in
cmp
and
xchg
jns
fs
out
dec
sbb
scas
push
subb
pop
jl
aad
ret
rclb
cs
enter
add
inc
cmc
pushf
out
cmc
pop
insb
ret
adc
or
imul
int3
ret
bound
movsl
add
ficomps
data16
adc
inc
lock
in
pusha
mov
add
xchg
lods
repz
jp
fcoms
stc
cs
sti
lds
add
mov
jecxz
fsts
dec
xor
pop
sti
lods
pop
dec
xchg
sub
inc
lahf
adc
sub
adc
jns
in
sbb
inc
push
lods
and
push
lea
xchg
call
lds
scas
sbb
xor
clc
fisttpl
adc
lcall
cmp
lock
jno
mov
iret
das
loop
dec
pop
mov
xchg
push
sbb
daa
scas
and
pop
dec
mov
pop
lods
loopne
lods
sbb
mov
dec
clc
add
outsb
int3
test
fwait
inc
sbb
adc
adc
stc
scas
cld
cwtl
adc
and
add
inc
sbb
mov
out
adc
dec
xor
jns
pop
pop
jbe
ds
pop
int
cmp
mov
or
pop
adc
or
addb
cmp
cltd
mov
out
cwtl
cmp
loopne
and
aam
int3
sub
cmp
lods
cltd
ds
pop
mov
mov
inc
fmul
jno
adc
bnd
lods
out
sbb
fidivrl
jb
jo
and
jno
clc
mov
ret
jp
cmp
int
subps
mov
lret
push
out
pop
cld
xchg
lock
pop
loope
mov
dec
mov
sbb
fsubs
aaa
xchg
inc
push
adcl
xchg
pop
jbe
adc
test
jae
lcall
pop
jne
lcall
insl
out
mov
mul
or
push
out
add
inc
mov
out
dec
ss
fldt
jp
test
clc
loope
jnp
mov
test
pop
jne
and
fisubrs
pop
outsl
inc
insl
dec
jp
adc
cmp
lahf
push
pop
inc
mov
add
sbb
pop
and
push
test
lock
movsb
sub
jge
out
ja
fnstsw
pop
pop
in
mov
dec
and
inc
inc
dec
ljmp
dec
mov
push
add
hlt
shll
test
push
fbstp
in
imul
cld
sub
cmc
add
imul
not
lock
sub
pop
js
das
mov
sub
in
ret
add
sub
adc
clc
jle
sbb
out
out
jns
in
fwait
inc
add
cmpsb
fsubl
xchg
ss
adc
sbbb
push
js
jae
dec
ds
mov
inc
enter
arpl
inc
inc
jns
int3
push
jbe
pop
xchg
xor
daa
loopne
jno
mov
ficoms
adc
and
test
push
fisttpl
fistl
decl
fadds
mov
mov
arpl
mov
and
lret
sbb
sbb
or
stos
adc
xor
test
adc
cmpsl
ret
repz
cmp
ss
dec
test
out
cli
ficompl
adc
pop
subl
pushf
lahf
jle
aam
jle
fnsave
test
xor
mov
ret
mov
lds
sbb
jg
sti
push
leave
outsb
dec
call
push
gs
in
movsl
push
xchg
and
xchg
or
bound
mov
fisttps
jo
out
push
fists
popa
clc
push
divl
in
cmp
xchg
sahf
jne
inc
pmaxsw
cmc
dec
les
sbb
adc
sbb
adc
cmp
mov
into
das
pop
pop
xor
pushf
js
mov
aaa
dec
aad
push
les
dec
and
je
push
sbb
add
cmc
pop
add
push
addl
xlat
mov
pop
add
cmc
cmp
push
cwtl
xlat
mov
xchg
andl
sub
mov
sub
out
or
int3
mov
stc
ljmp
xor
push
mov
xor
cwtl
ret
lods
orb
inc
nop/reserved
xor
mov
lock
mov
loopne
int3
adc
add
jo
pop
pop
mov
clc
cmc
mov
or
inc
rcrl
in
add
cmc
mov
daa
outsl
inc
pop
mov
jae
lret
std
jge
xchg
and
xor
xchg
jle
mov
or
fsub
aas
das
stos
sbbb
mov
adc
int
popa
out
lods
dec
adcb
mov
xchg
insl
push
cli
push
or
sub
lods
or
pop
pushf
adc
cli
jbe
jnp
fwait
and
mov
xchg
loop
jge
mov
xchg
sub
mov
sub
loop
loop
push
jmp
sub
xorb
adc
push
imul
cmpsb
cltd
lret
cmp
sub
in
inc
out
cld
test
xor
mov
push
push
xchg
ficompl
and
lds
cmpsl
adc
mov
aas
das
sbb
add
pop
xlat
jne
lea
pop
push
lea
pop
xchg
shll
mov
imul
xchg
inc
stos
fisttps
lods
dec
in
cli
cwtl
lods
out
punpckhbw
cld
hlt
mov
nop
adc
xchg
stos
insl
data16
dec
roll
shll
jo
in
out
sbb
loop
mov
fwait
xchg
jge
jl
dec
jbe
clc
popa
test
inc
aad
pop
popl
pop
aad
sub
cli
ror
sub
pop
sub
or
fwait
call
insl
insb
xor
leave
sbb
sub
cmp
out
mov
icebp
pop
jecxz
pop
sbb
das
mov
ds
daa
stc
lret
cltd
cmc
in
aad
mov
rol
pop
fidivl
shll
fstpt
mov
bound
pop
out
sbb
rorb
por
bound
js
jo
and
pop
jge
enter
dec
mov
paddsb
xor
mov
outsb
cmp
lods
in
movsl
mov
movzbl
adc
shrb
enter
roll
js
mov
shrl
adc
and
adc
cltd
cwtl
xchg
xor
stc
aas
inc
add
or
fidivrs
adc
out
cli
push
lahf
mov
clc
movsb
add
push
in
arpl
test
cmp
cmp
bound
mov
leave
iret
dec
pop
pop
hlt
push
out
mov
dec
mov
push
adc
stos
fwait
leave
shl
popf
cmc
add
push
and
inc
mov
in
sub
pop
cmc
sbb
rcr
mov
lods
xor
mov
movsl
cwtl
mov
cmp
dec
addr16
addl
fwait
push
push
push
mov
jnp
std
pop
dec
clc
mov
aam
cltd
stc
or
or
fptan
pop
mov
push
inc
cmp
rclb
cmp
push
data16
lcall
inc
in
daa
icebp
bound
movsl
mov
out
add
pop
jg
mov
pop
cwtl
xor
int3
dec
sub
push
int
dec
std
mov
pop
cmpsl
jmp
xchg
cld
add
loop
mov
movsl
push
filds
push
mulb
sbb
push
sub
popa
mulb
cmp
fdivrs
filds
mov
test
cmc
addr16
jnp
dec
jnp
out
lods
adc
add
sbb
or
out
rolb
dec
sbb
pop
cmp
inc
incb
in
xchg
pusha
jns
adc
jmp
push
adc
add
cltd
sub
lea
inc
cmp
enter
sub
cmp
cmp
daa
mov
mov
enter
daa
or
roll
pushf
pop
sub
and
pop
shl
in
jecxz
mov
in
fisubs
sbbl
xor
imul
pusha
mov
aam
imul
lahf
jbe
sub
mov
insb
lret
sub
out
mov
cltd
dec
or
xchg
mov
ljmp
adc
repz
pusha
push
inc
arpl
cmpsl
add
mov
jne
mov
pop
dec
sbb
mov
pop
fs
pop
sbb
cltd
or
cmpsl
lcall
out
cmp
imulb
jb
jno
pop
push
sbb
repz
sbb
das
push
jge
repnz
loope
mov
pusha
mov
sti
jmp
rcl
inc
cltd
addl
popf
sub
popa
out
dec
iret
and
mov
xchg
dec
pushf
jne
sbb
orb
or
sar
sahf
jecxz
pop
xchg
xchg
clc
jno
popf
mov
pop
rorb
cmp
imul
adc
dec
mov
mov
sbb
lret
jmp
or
fnstsw
adc
mov
loopne
xor
sub
les
mov
rclb
negb
push
or
mov
jg
pop
rclb
inc
xor
and
mov
lahf
dec
mov
push
es
sbb
cltd
cli
xchg
into
andl
xchg
rclb
sarb
sarl
aam
jmp
dec
cmpl
loope
ja
cwtl
and
jne
cmpsb
mov
sbb
sub
pop
into
in
data16
sbb
hlt
cld
shrb
leave
lods
jl
lods
xlat
ja
mov
pop
incl
xchg
clc
in
or
bound
data16
mov
mov
jmp
fcoml
jo
ljmp
xor
inc
in
rcr
cld
pop
mov
cmp
cmp
cld
or
xchg
inc
add
orl
fdiv
mov
add
in
mov
clc
dec
inc
mov
add
shrl
std
dec
dec
out
aas
shlb
loopne
aas
les
ret
test
cltd
and
jmp
pop
push
sbb
dec
xchg
repnz
cmp
les
add
pusha
sub
scas
mov
stc
fmuls
lods
cmp
sarb
mov
lret
mov
mov
sub
mov
lcall
arpl
push
xchg
lods
cmpb
push
push
sarl
dec
filds
fists
add
je
pop
sbb
add
lcall
jge
lcall
or
or
pop
rclb
and
cltd
jp
insb
cld
lock
movsb
and
inc
gs
aam
pop
rolb
dec
insb
or
stc
push
repz
fdivrp
or
es
lret
movsb
fbstp
int3
push
jne
popf
arpl
pop
xchg
fbld
or
ljmp
in
sbbb
subb
and
outsl
mov
push
jge
adc
aam
or
pop
leave
cmp
pop
iret
dec
push
ret
sub
jp
fstpt
mov
cmpsl
push
sub
dec
sbb
rcll
cmc
jp
sbb
add
xor
loope
fwait
sub
mov
push
sbb
dec
sbb
jle
jno
xchg
xor
daa
xchg
pusha
or
ss
scas
mov
lret
and
rcrl
imul
pop
rol
xor
dec
mov
pop
std
push
mov
scas
fs
repnz
push
lret
jl
dec
je
xor
cmpsl
xchg
xor
inc
gs
outsl
jnp
sub
jle
les
ficoml
add
leave
fptan
testb
dec
pushf
call
fs
subb
xlat
shrb
xchg
test
dec
int3
dec
sbb
int3
aaa
nop
xchg
adc
loop
jecxz
gs
fcmovne
push
movsb
mov
repnz
add
xchg
ret
fstpl
ljmp
cmpsb
mov
fcompp
lds
idivl
mov
popf
add
aaa
pop
adc
mov
inc
out
push
pop
sub
gs
popa
xor
or
sbb
jmp
repnz
jno
jmp
adc
fisubrs
pop
jecxz
jo
sub
pop
iret
xchg
xchg
clc
adc
xchg
stc
sub
insl
cmpsb
xchg
xchg
sarl
cmp
add
sub
das
push
xchg
pop
jne
leave
push
leave
sub
insl
xchg
xor
rcrl
sahf
adcl
je
sub
push
ficompl
xor
inc
sbb
sbb
je
add
insb
addr16
lods
mov
rclb
cs
pop
push
xor
hlt
mov
pop
les
pop
sbb
loope
lods
jl
adc
pop
in
xchg
sbb
mulb
jmp
addr16
scas
popf
pop
mov
loop
pop
sub
into
xchg
loop,pn
sub
and
add
jne
test
clc
pop
jno
push
adc
jg
iret
loopne
mov
mov
fbstp
fsubl
sbb
aad
or
test
cmpsb
dec
xchg
push
mov
mov
xor
shll
inc
xchg
mov
dec
imul
sub
ljmp
imul
xchg
and
mov
push
pushf
xchg
insl
xchg
and
loope
jmp
pop
pop
nop
dec
popf
dec
negb
mov
flds
sbb
inc
cld
jp
sti
mov
pop
push
movsl
xchg
mov
mov
sbb
sbb
add
mov
lods
rclb
subb
pop
and
loope
inc
js
jbe
dec
push
jmp
xchg
arpl
stos
mov
mov
inc
cmc
fwait
lahf
mov
sub
std
inc
in
outsb
aad
mov
mov
sbb
int
pop
mov
pop
fsubrp
int
insl
add
jge
cmc
push
jnp
insb
jns
sbbl
mov
shl
iret
sub
xor
stos
adc
mov
aad
mov
add
and
sbb
add
and
out
hlt
and
adc
or
fcom
inc
dec
ficoml
jp
lods
test
jg
hlt
inc
vmwrite
out
inc
hlt
jae
addr16
mov
fcomps
popa
shlb
push
cs
in
and
pop
add
mov
xchg
fwait
out
push
pop
mov
jge
je
ffreep
icebp
xor
mov
jno
cmp
mov
fimuls
outsb
mov
cmp
rcrl
aad
adcl
out
jg
pusha
repz
loop
push
jecxz
sub
out
out
popf
xor
dec
jmp
pop
mov
rcrb
jne
int
aad
js
enter
add
fdivrs
rcl
bound
mov
mov
mov
rorl
inc
sub
xchg
or
je
push
jmp
adc
jp
lcall
mov
mov
cmp
mov
popf
lods
cltd
leave
inc
xchg
imul
or
dec
std
repnz
fimull
in
and
js
icebp
fisttpl
push
cmp
xor
cmp
sub
ja
add
mov
lea
dec
outsb
mov
pop
jmp
or
sbb
mov
shrl
scas
call
xchg
mov
out
mov
in
mov
sbb
xor
dec
lret
xor
movl
cmc
inc
mov
xor
jle
pop
push
test
add
cmp
ja
cmp
dec
stc
scas
push
hlt
and
sub
enter
mov
scas
testb
cwtl
adc
mov
sbb
dec
insl
xchg
mov
outsb
shl
push
lods
lock
pop
mov
mov
push
nop
iret
popa
cmpsb
scas
or
daa
push
sbb
ljmp
pop
xor
ret
mov
mov
or
pop
js
rdpmc
test
psllq
add
push
je
jne
inc
xor
cmp
pop
pop
mov
test
int
sub
and
jbe
hlt
mov
sbb
hlt
jle
out
inc
or
add
lret
push
pop
push
sti
xor
enter
int
pushf
pop
stc
jecxz
sbb
pop
add
push
sub
popa
mov
jl
mov
test
divb
imul
push
rcrb
jne
shrb
jno
xchg
adc
sbb
je
lods
lcall
int
jno
popf
push
push
xchg
jno
enter
es
mov
pop
pop
jle
int
jo
adc
xlat
adc
fcoml
aad
outsl
push
aas
xchg
cmp
sub
lds
mov
ss
data16
xor
imul
fwait
lea
lcall
jns
lret
lds
cmpsb
pop
push
ja
mov
aaa
pop
shll
push
inc
icebp
ds
in
mov
cmc
jne
xor
xor
adc
into
jmp
loop
dec
aam
sqrtps
ljmp
mov
pop
sub
imull
dec
insb
mov
outsl
mov
mov
jp
out
sbbl
push
movsl
ret
push
xor
in
xchg
adc
stos
inc
pop
mov
jne
or
movsl
mov
pushf
pop
insl
mov
jmp
fdivl
or
push
lcall
outsl
adc
cmpsb
shlb
shll
mov
adc
int3
add
sub
and
mov
scas
sbb
imul
xor
xchg
fnstcw
int3
sub
clc
mov
push
mov
lret
dec
jp
xchg
xor
psrad
add
jge
adc
mov
xor
inc
xor
adc
xor
xchg
sub
shrl
fisttpll
jno
bswap
rol
sbb
gs
dec
rol
mov
cmp
mov
pop
xor
enter
adc
mov
sbb
outsb
lret
jbe
pop
out
push
lret
out
fbstp
push
pop
fiaddl
mov
and
add
into
les
cmp
mov
sti
sbb
lahf
orl
or
cmp
jg
inc
and
sbb
in
out
pop
or
xchg
sbb
ds
inc
iret
pop
adc
pop
lret
les
popf
adc
nop
dec
dec
gs
xchg
lret
cwtl
sar
inc
adc
mov
icebp
sbbb
je
sub
cld
add
outsb
jl
add
les
sbb
shll
fstpt
jno
in
js
push
push
and
sbb
test
pop
fs
adc
ficompl
sbb
xor
adc
push
call
pusha
and
icebp
rolb
mov
daa
adc
lret
cmc
mov
push
loop
sbb
adc
pushf
jb
es
fstps
add
mov
dec
cli
inc
cltd
sbb
and
xchg
push
pop
jg
fcompl
add
xchg
ret
cmp
lahf
clc
stos
pop
xor
inc
sub
cltd
xor
movsl
xchg
mov
pop
loop
sub
mov
cmp
aam
int
xchg
xchg
xor
dec
aam
pcmpgtb
xchg
sbb
outsb
mov
adc
fists
test
push
fdivs
xchg
call
add
cmp
daa
mov
pop
mov
inc
mov
fisubs
mov
add
int3
inc
mov
add
aad
loop
js
outsl
mov
pop
out
mov
and
out
fwait
pop
sbb
into
xchg
mov
out
jg
out
xchg
sub
sti
inc
inc
and
inc
mov
test
cmp
lock
mov
arpl
das
cltd
jns
xor
adc
dec
std
popa
dec
mov
sub
push
repnz
mov
lods
icebp
add
xchg
or
out
mov
in
cltd
or
ja
cmp
imul
inc
in
shrl
mov
mov
fimuls
or
adcl
xchg
add
fmuls
cmp
push
aas
fsubp
lds
jle
mov
stc
test
inc
inc
das
clc
int3
fwait
arpl
test
mov
mov
fwait
xor
loopne
and
mov
pop
add
mov
insb
scas
jnp
dec
aam
pushf
in
lds
enter
pop
pop
out
and
popf
fisttpll
mov
mov
xor
pop
in
sub
jb
mov
in
mov
es
out
jbe
hlt
aam
push
pop
daa
push
pop
das
pop
push
nop
cmc
dec
cmp
dec
orl
pop
jp
adc
test
mov
pop
stos
dec
popa
aaa
sbb
cmp
cwtl
scas
sbb
push
jle
xchg
jnp
scas
repz
pusha
incb
roll
shrb
popf
out
push
or
xchg
fnsave
and
imul
orb
pop
jns
or
adc
adc
popf
lods
es
or
adc
arpl
inc
fwait
cmp
and
jl
xor
stos
jecxz
xchg
xor
stos
ja
out
or
mov
or
in
pop
cmp
push
repnz
call
mov
xchg
mov
filds
mov
aaa
mov
xchg
stc
pop
enter
jg
fcompl
popf
mov
jmp
mov
dec
mov
inc
dec
cld
xor
gs
pop
fistl
sti
leave
dec
xchg
mov
or
cli
imul
lds
nop
mov
cmc
js
dec
adc
movsb
test
pop
add
iret
ljmp
and
sbb
push
fimuls
stc
mov
int
out
xchg
sbb
xchg
loop
inc
cmc
dec
jae
add
loopne
add
adc
es
loop
sahf
test
scas
xor
adc
gs
mov
sub
and
inc
jle
in
push
por
fdivp
int3
adc
jne
dec
ds
out
hlt
xchg
cmp
push
dec
sahf
enter
mov
cmp
cwtl
adc
cs
jmp
dec
repz
scas
add
fidivrl
cmc
in
mov
mov
or
pop
and
out
and
dec
inc
xlat
jb
mov
adc
pop
out
jno
mov
add
insb
add
adc
or
lods
xchg
inc
rorb
jecxz
pop
xchg
cwtl
out
incl
sti
xchg
pusha
sbb
inc
add
int
mov
cmp
ds
or
pop
insl
loope
and
aaa
inc
mov
xchg
pop
fstl
push
mov
or
or
rolb
mov
sub
xchg
adc
xor
out
sahf
out
push
ficompl
jno
call
or
adc
jo
cmc
jmp
mov
inc
js
cmp
out
jne
pop
mov
lret
bound
les
sahf
xor
pop
test
mov
jnp
add
gs
and
mov
fdivp
mov
xor
and
out
adc
push
mov
fs
jnp
and
out
jbe
mov
sbb
add
and
push
xor
fldt
mov
jns
repnz
insb
sbb
shlb
inc
imul
mov
jnp
xchg
lds
dec
dec
into
or
sub
call
pop
out
mov
pop
xorb
mov
add
inc
and
push
addr16
mov
pop
jb,pn
push
cmp
fnsave
test
shl
or
xchg
cmp
cwtl
jmp
dec
aaa
into
push
repnz
rorl
enter
std
xchg
xlat
lods
or
sti
sahf
pop
push
mov
push
or
jae
push
mov
pop
ds
or
divb
fwait
mov
fmul
popa
or
shll
sarb
xor
cltd
sub
mov
pushf
lods
cli
push
and
xor
adc
insl
repnz
clc
shll
pushf
sbb
push
aas
push
add
jp
mov
pop
shll
stos
stos
mov
mov
orb
mov
push
jns
dec
push
xor
in
xchg
loop
cs
sbbl
mov
inc
lcall
xchg
inc
pushf
outsb
adc
mov
das
gs
in
jnp
test
mov
xor
loopne
pop
mov
pop
imul
shrb
push
data16
sahf
jle
cmpsb
jae
mov
pop
cwtl
mov
mov
xlat
pop
jo
push
jo
imul
mull
fadd
xchg
jp
push
and
dec
cmc
out
arpl
ret
insl
mov
clc
movsl
movsb
cwtl
cltd
adc
popa
cli
les
das
push
cmp
pop
orb
int3
dec
rcl
lods
loope
dec
push
idivb
fucomi
mov
jbe
into
dec
mov
jg
hlt
imul
xchg
imul
ret
insb
sbb
rol
movsl
mov
arpl
pop
cmpsl
jb
andb
cmpsl
fcmovu
pusha
and
insb
adc
sahf
subb
mov
sub
dec
repnz
shl
adc
xchg
sub
jg
call
cmpsl
mov
ficomps
mov
jo
popa
aad
shl
mov
and
push
out
scas
pusha
scas
sbb
rol
jmp
popf
test
outsl
push
push
imul
rol
mov
adc
call
bound
pop
stc
add
push
iret
je
and
mov
sbb
repz
lods
mull
jae
sub
and
js
ss
movsb
mov
cs
fucomi
inc
ja
js
icebp
mov
in
push
and
jmp
fs
mulb
pop
mov
mov
in
and
in
cmp
les
loop
mov
bound
pop
or
add
rcrl
decb
mov
iret
hlt
movsb
enter
cmp
repnz
inc
and
fxch
mov
int
arpl
sbb
popa
cwtl
sub
fsts
insb
pop
mov
stc
add
test
stos
mov
mov
das
hlt
push
pop
pop
test
outsl
stos
xor
aad
pop
mov
adc
push
or
ffreep
cmpsb
mov
cmp
sub
repnz
xchg
rclb
outsb
add
test
jnp
cmpsl
sbb
aaa
push
in
mov
jo
sub
ror
lahf
dec
xor
pop
sti
in
jae
fst
sbb
adc
faddl
or
xor
ja
fisubrl
xor
mov
mov
shll
imul
or
jp
push
push
lea
jle
jp
shl
cs
loopne
aad
cmp
imul
push
inc
xor
addb
repz
lret
pop
in
fldpi
fisttpl
gs
lret
test
pop
lret
push
xor
inc
xchg
int
push
filds
loopne
xchg
push
movsl
test
add
pop
lcall
repz
in
pcmpeqw
adc
cmp
rclb
dec
scas
mov
mulb
mov
or
or
jno
inc
repz
fsubp
pop
insb
mov
call
aaa
sub
dec
int3
rcrl
enter
test
cld
cld
les
dec
mov
xor
or
mov
aad
inc
out
inc
dec
cmp
mov
stos
and
fadds
stos
cmc
sub
testl
xchg
push
xchg
cmova
sub
ret
outsb
mov
mov
pushf
notb
adc
lret
es
add
ret
jne
and
pop
push
jmp
inc
pop
or
pop
pop
addr16
test
jae
push
jl
inc
fimull
stc
sub
and
adc
data16
mov
lods
xacquire
lock
push
aam
mov
insl
adc
out
lds
pop
pop
aaa
lock
jno
xchg
into
out
xor
nop
hlt
inc
xor
xchg
in
sbb
outsl
test
dec
nop
std
jecxz
adc
sarl
les
repnz
xchg
sbb
out
inc
xchg
aam
ds
fiadds
and
sub
imul
jbe
mov
gs
mov
inc
js
cmp
bound
gs
es
sub
pushf
ss
mov
cmp
rorb
dec
and
lahf
jnp
test
shlb
mov
mov
mov
mov
cmp
adc
xor
mov
xchg
int3
into
ret
sub
in
insb
xchg
lods
ret
out
fucomp
jle
mov
xor
xchg
add
nop
xor
sbb
pshufw
xchg
jle
out
in
dec
and
pop
aaa
xchg
imul
aas
jne
lret
mov
jge
xchg
sub
mov
test
int3
int
js
pop
dec
les
jbe
mov
insb
jg
cmp
mov
fdivr
mov
dec
sub
lock
add
adc
cmpsl
mov
and
das
adc
lds
aas
ret
pop
xor
xor
mov
or
inc
stos
stos
aas
ja
cs
xlat
sub
loopne
cmc
jl
aas
icebp
jns
cmp
out
lods
jg
sbb
xchg
push
xorl
mov
enter
xchg
jmp
adc
xor
adc
jnp
orb
cmpsl
gs
inc
sub
mov
into
pop
push
icebp
test
lods
pop
mov
pop
mov
cmp
xchg
icebp
jo
adc
test
outsl
push
mov
mov
cmp
es
pop
shll
add
test
or
add
xchg
cmp
xchg
sbb
adc
scas
pop
push
adc
mov
andb
movsl
sbb
and
xor
dec
inc
mov
cld
cmp
jo
pop
cld
lcall
arpl
cmp
fisubl
and
mov
xchg
mov
xchg
insb
mov
sub
mov
jge
pop
fdivs
jne
gs
shlb
sub
lret
inc
dec
lods
mov
or
adc
loopne
cmp
leave
icebp
pop
pop
mov
out
jge
inc
jnp
shrl
popf
outsl
push
jge
xchg
and
call
pop
sbb
outsb
cli
and
xchg
jnp
movsl
and
xchg
jae
xchg
jmp
or
pusha
pusha
subb
outsl
outsb
adc
and
das
dec
pop
mov
sahf
iret
or
cmpsl
cltd
mov
mov
sub
or
sahf
insl
jmp
daa
xor
pop
leave
add
push
loopne
inc
test
pop
jle
mov
sub
mov
lcall
lahf
xor
dec
jecxz
mov
out
dec
cmp
sbb
gs
in
inc
aam
sub
jecxz
inc
stos
leave
je
sub
shlb
imul
popa
mov
pop
cwtl
lods
and
loop
ljmp
fnstcw
xchg
das
lret
add
leave
stos
iret
adc
xchg
test
repnz
loope
rcll
lods
dec
daa
sbb
push
jg
mov
xor
call
cs
mov
insb
adc
fwait
out
clc
xor
outsb
sarl
out
sbb
jb
dec
pop
add
inc
xor
sbb
cmpl
clc
dec
xchg
inc
pop
push
arpl
subb
leave
int3
or
or
or
sub
pop
out
pop
pop
pop
push
je
xor
xchg
xchg
mov
inc
mov
inc
dec
lret
xchg
lock
jb
iret
cs
shl
pop
jl
or
out
rcll
push
mov
push
loop
addr16
dec
sub
push
repnz
xchg
xchg
in
cmp
jne
sbb
enter
xor
mull
push
inc
mov
push
push
cmp
cmc
pop
shrl
dec
sarb
mov
add
flds
xchg
fdivl
add
icebp
pop
rclb
xchg
add
jbe
in
jnp
rclb
test
ret
inc
inc
cs
add
push
xor
aam
addl
xchg
stc
hlt
lods
sub
cmp
sar
fsubr
les
sub
dec
xor
cmpsl
sub
pop
xchg
xchg
ltr
cmp
pop
lret
mov
add
pop
sub
sub
jno
into
dec
dec
ss
shl
sbb
jo
sbb
ja
cmpsl
int3
adc
mov
cmpsb
mov
or
imul
cmpsl
push
test
xorps
jbe
fcmove
dec
xchg
sbb
in
push
mov
fwait
mov
adc
adc
cmp
inc
insb
dec
test
jmp
mov
mov
fadds
adcl
cli
push
std
es
int3
inc
iret
push
fs
adc
push
arpl
out
orb
stc
int3
push
cmp
or
jmp
lea
in
gs
loop
cmpsb
aas
push
xor
jmp
loopne
mov
int
dec
or
ret
stos
dec
dec
subb
outsl
xchg
scas
pop
rcrb
out
lahf
push
push
in
ljmp
or
test
pop
cmc
in
hlt
mov
mov
shll
mov
out
bound
lret
out
and
mov
movsb
sarl
jp
mov
subl
adc
ds
adc
dec
cmp
inc
aaa
inc
stc
jbe
mov
xor
inc
sub
push
and
pop
mov
jno
fs
jp
mov
movsb
mov
push
pop
dec
or
mov
xchg
rol
add
push
adcb
call
mov
push
xor
in
sub
leave
popf
popa
mov
mov
mov
insb
cld
or
xchg
sbb
xchg
negb
aas
jge
cmp
shrl
dec
jns
jae
aam
enter
cmp
stos
add
inc
icebp
add
das
or
sbb
lahf
iret
push
mov
out
in
or
mov
pushf
jns
mov
mul
dec
mov
xchg
in
and
xchg
sub
lds
or
jb
mov
dec
fistl
pusha
sub
fdiv
hlt
ds
sarb
outsl
lods
stc
mov
adc
outsb
scas
cwtl
iret
push
out
or
mov
imul
pushl
into
std
ss
adc
or
and
dec
push
insl
or
fwait
scas
mov
inc
mov
jecxz
outsl
lea
mov
cmp
sti
jbe
sti
jae
into
outsl
inc
xor
cmp
imul
or
shll
sub
arpl
pop
add
sbb
push
push
out
add
jns
insl
incl
into
push
loope
add
jb
adc
js
outsb
loop
loop
lods
jmp
dec
push
sub
insl
daa
ret
push
add
sub
push
jmp
inc
pop
cmpsl
shll
imul
fldenv
inc
jbe
sahf
dec
cmp
sub
push
movsl
lret
es
mov
sbb
pop
and
pop
push
test
mov
adc
cmpsl
lods
inc
inc
dec
add
mov
or
arpl
icebp
push
leave
xor
rol
xchg
addl
out
inc
jne
or
mov
push
fwait
inc
out
cmp
push
popa
add
adc
shrb
and
loopne
lods
mov
push
or
cmp
jge
iret
or
sbb
mov
andb
sub
mov
mov
jmp
mov
mov
pop
dec
mov
add
lret
push
enter
fildll
mov
push
mov
pop
sbb
add
ljmp
leave
imul
pop
dec
push
arpl
ss
sbb
xor
add
call
push
dec
cmp
dec
or
ror
jb
or
cmp
or
mov
aas
jo
sbb
mov
sti
iret
inc
out
mov
xor
pop
insb
or
push
cmp
test
fsubr
mov
lret
or
std
and
push
nop
xchg
or
mov
dec
jge
xor
mov
into
pop
jae
mov
mov
cltd
arpl
xchg
jecxz
stos
cmpsb
jp
insb
adc
scas
xor
pop
imul
cld
loope
divb
dec
mov
push
test
sahf
push
adc
pop
insl
lret
mov
push
mov
ja
push
loop
xchg
inc
scas
sbb
add
mov
xor
mov
cmp
sti
lahf
dec
sbb
and
xchg
or
lods
push
push
lahf
mov
mov
movsb
addr16
aam
jg
jne
cmp
sub
adc
inc
jge
dec
or
dec
lret
mov
sbb
pusha
mov
bound
popf
loop
stc
pusha
mov
adc
sbb
xchg
mov
and
mov
pop
xchg
out
dec
add
jne
cmpsb
call
sub
imul
testb
aaa
sbb
es
sbb
cmp
push
adc
mov
mov
clc
sbbl
lcall
mov
ror
pop
dec
cmp
icebp
cmp
add
divl
jo
cmp
es
cmp
xchg
mov
jg
subl
push
insl
push
mov
int
add
push
dec
push
mov
adc
es
sti
fcoms
mov
cltd
push
cwtl
add
inc
jl
int
xchg
cld
push
push
push
popa
imul
or
aaa
loope
mov
mov
mov
fsub
leave
mov
out
cld
lahf
adc
mov
add
les
shll
adc
loopne
es
push
sub
ret
and
add
jnp
fisttpl
dec
mov
jg
loopne
fcoms
sarb
js
stc
adc
jnp
insb
push
add
shl
inc
jno
cmp
dec
and
inc
xor
xor
mov
push
repnz
push
sbb
jno
out
xor
push
cmp
push
sbb
js
xchg
sub
sbbl
mov
mov
pop
cmpsb
pop
or
lock
lods
mov
mov
or
inc
test
dec
int3
daa
incl
push
cltd
cmp
dec
and
loope
jne
jb
je
jae
ljmp
adc
int3
sub
daa
add
pop
fmuls
lock
fldt
ret
lahf
hlt
mov
jnp
ss
clc
add
jne
xor
push
aad
pop
pop
inc
dec
jns
xchg
lcall
dec
inc
and
clc
mov
xor
int3
cmpl
jae
incb
lahf
mov
aaa
enter
push
inc
push
sarb
ljmp
adc
sub
mov
sbb
inc
jo
pop
loope
pop
stc
ljmp
aas
aam
iret
loope
mov
ret
shll
xor
mov
jnp
out
dec
sahf
jo
inc
xchg
sbb
inc
sbb
jb
and
mov
mov
sbb
cltd
aaa
ds
push
jbe
rclb
xchg
rcrl
fdivr
mov
fldl
jns
pop
das
mov
sub
push
mov
xor
pop
shrl
mov
sbb
and
dec
jmp
push
push
add
or
ljmp
dec
xchg
and
push
or
and
movsb
std
sub
mov
jg
inc
cmp
xor
sub
sub
dec
inc
ja
out
push
outsl
bound
xor
ja
push
lea
decb
xor
aas
dec
pop
pop
mov
cwtl
lds
push
add
mov
jmp
mov
rcll
lea
mov
push
mov
mov
insb
rorb
xchg
xor
mov
daa
popa
sbb
pop
aaa
insl
psadbw
pop
sbb
and
jecxz
jecxz
loopne
sbb
popa
scas
ss
jmp
jns
pop
cmp
fidivs
insb
test
adc
stos
inc
or
sub
add
fsubp
arpl
add
fwait
and
sbb
pop
mov
adc
adc
rcl
inc
ret
in
out
rcll
pop
insb
sarl
je
sbb
test
fdivrl
lret
jmp
jmp
fnsetpm(287
mov
jne
pop
jg
and
addb
cmp
into
clc
idivb
mov
dec
jo
push
add
test
ss
pop
xor
xchg
lock
loopne
dec
push
cwtl
jo
cld
bound
icebp
push
insl
ds
jp
adc
jl
mov
mov
mov
jae
ss
repz
jmp
iret
insb
add
aas
int
mov
or
pop
sub
jb
adc
xor
sub
jg
sbbb
sub
sbb
jp
cs
popl
cmp
icebp
mov
adc
sub
in
inc
pop
jle
sub
inc
addr16
sbb
movsb
repnz
daa
and
int
ja
inc
scas
test
cmp
jle
repnz
pop
stos
add
xchg
imulb
jg
dec
inc
stos
dec
mov
cli
jge
dec
and
popf
sbb
je
and
aad
xchg
sub
mov
les
adc
int3
pop
mov
sub
roll
js
mov
mov
push
test
push
inc
insl
lds
adc
lock
mov
daa
loop
mov
push
cs
iret
push
test
push
dec
dec
push
sub
push
iret
and
inc
cmp
jb
pop
inc
jecxz
loop
xchg
cld
and
xchg
fsubrs
mov
jmp
insl
jge,pn
lods
aaa
cmp
mov
repnz
add
int3
add
mov
mov
scas
mov
fistl
cltd
inc
lods
test
insl
push
xor
jmp
pop
xchg
sub
mov
movsl
add
add
das
mov
out
inc
or
push
sarl
dec
inc
ret
in
dec
icebp
adc
cmp
or
add
cli
xor
mull
nop
in
xor
and
cmovl
hlt
or
add
mov
into
inc
jmp
sahf
sahf
repnz
cmp
xchg
daa
push
inc
adc
sti
dec
xor
gs
jbe
mov
push
out
mov
xor
ljmp
sub
icebp
and
inc
iret
mov
xchg
xor
stos
jecxz
fiadds
js
repz
push
xchg
mov
inc
fadds
shlb
insb
and
or
jecxz
test
dec
out
jne
outsb
mov
xchg
mov
fimuls
add
ficoml
adc
lock
ljmp
xchg
aad
push
cmp
out
jbe
hlt
fcoml
stos
fidivl
push
loop
aad
cmp
stos
pop
sub
popf
mov
roll
push
push
hlt
mov
lcall
inc
jg
dec
cmp
je
stc
ljmp
out
call
adc
or
testb
push
jne
adc
pop
stc
add
mov
sub
xor
int3
ret
mov
xor
testl
cmp
outsb
dec
mov
mov
add
or
sub
stc
push
xlat
sti
push
mov
aad
jecxz
insl
mov
xor
sbb
adc
fucomp
fcompp
movsb
push
pop
sbb
scas
xor
sbb
adc
bound
iret
bound
jge
jb
jl
fidivrl
mov
jp
repz
ss
enter
lea
dec
jnp
mov
mov
mov
xor
das
or
mov
mov
sbb
pop
or
nop
insl
insb
loop
fiadds
mov
adc
jmp
xor
push
jns
or
pop
in
fldz
add
xor
sub
ljmp
test
add
jge
inc
in
pop
iret
jnp
ds
popf
push
mov
lahf
cmp
enter
sub
inc
fcmove
andb
push
cmp
lret
stos
test
stc
inc
mov
sub
or
enter
jmp
jnp
inc
jmp
fistpl
test
sub
and
movsb
unpckhps
pop
adc
push
inc
sub
xchg
testb
adc
loope
mov
and
mov
adc
scas
add
or
in
gs
clc
cmp
mov
push
and
fidivrs
push
mov
enter
inc
xchg
add
or
adc
add
addr16
out
sbb
jl
push
xor
jp
xchg
and
push
loopne
enter
add
jo
mov
mov
inc
fnstenv
fdivrs
jo
adc
rcr
lock
inc
adc
or
movsb
mov
inc
pop
mov
dec
iret
jl
jp
outsb
cmpsl
cli
int
sbb
scas
loopne
sub
hlt
lret
into
fistpl
subl
push
or
pop
clc
xor
out
jnp
int3
pop
and
sbb
addl
aas
jle
cltd
or
test
cmpsl
push
cmp
cmp
fistps
or
mov
shrl
repnz
repnz
in
out
fwait
ret
fcompl
jne
sti
cmp
xchg
pushf
fisubs
loopne
mov
mov
sbb
adc
out
mov
inc
int3
scas
repnz
push
pop
xchg
dec
out
lods
adc
mov
cmp
ljmp
std
mov
std
sahf
out
decl
popf
dec
add
enter
push
mov
loope
sbb
xor
push
cmpsl
aam
mov
sub
dec
push
stos
xor
cmpsl
rcrb
sbb
rolb
xchg
repz
aam
dec
mov
mov
test
xor
mov
mov
inc
sbb
test
ljmp
je
aad
jo
gs
add
lock
inc
mov
faddl
sub
dec
pop
pushf
out
int3
outsb
insb
loope
jo
mov
jmp
mov
outsl
mov
mov
daa
sbb
imul
or
and
xchg
pop
mov
subl
mov
mov
cwtl
js
jb
rcrb
addr16
fnsave
in
xor
mov
loopne
pusha
clc
loop
push
or
aas
loop
adc
lods
lret
mov
jge
cmp
cmpsl
or
lock
repz
cmp
mov
fsubrp
xchg
xor
aam
dec
cmp
mov
scas
scas
sub
repz
mov
bnd
jo
outsl
adc
sarb
xchg
mov
xlat
push
aad
fdivrl
roll
lods
cmp
xchg
mov
dec
sbb
inc
movsl
shlb
scas
sti
mov
in
pop
enter
in
dec
cwtl
adc
loopne
sbb
and
out
insb
test
mov
jbe
loop
mov
cmp
jne
inc
lahf
dec
cmpsb
aam
pop
jp
sti
pusha
mov
test
push
xchg
mov
movsb
jecxz
jle
pop
add
mov
ds
mov
jmp
xchg
adc
ret
rcrl
inc
xchg
sahf
cmp
lods
or
mov
sub
ficomps
inc
and
in
pushf
inc
js
sahf
nop
movsb
iret
sarl
sbb
cld
mov
jg
movsl
stos
jle
pop
sub
addr16
orb
dec
xor
aaa
cltd
dec
fwait
aas
pop
pop
mov
pop
ljmp
sbb
or
sub
jp
xchg
loop
out
stos
movsb
fstpl
sbb
fs
in
negb
cld
mov
xchg
adc
icebp
push
or
sbb
jle
mov
out
mov
aad
sub
mov
mov
sbb
sti
ret
pop
popf
pop
push
out
aaa
cltd
hlt
shll
test
and
sbb
cli
fldenv
push
in
push
sub
sbb
adc
cmp
and
in
pushf
cmpsl
sub
sub
jae
pop
pop
push
jnp
mov
je
sub
xchg
cmc
jge
repnz
mov
das
mov
cwtl
jmp
cmp
sbb
int
add
mov
inc
mov
cmp
xlat
xchg
xchg
inc
stos
insb
jae
adc
pop
jp
cmpsl
jmp
inc
push
inc
mov
jnp
cltd
daa
push
mov
js
inc
shl
mov
push
jle
mov
or
into
push
clc
xchg
mov
hlt
scas
cltd
hlt
aad
outsl
cltd
pop
push
es
mov
jge
stos
mul
call
roll
cld
push
or
xor
xchg
insb
mov
add
movsb
ret
pop
popa
js
jg
dec
addr16
dec
sub
push
pop
jg
lds
test
fistpll
or
lret
outsl
mov
imul
xchg
scas
sti
jp
ja
lock
mov
sub
hlt
adc
lea
stos
sbb
shll
xchg
inc
pop
lds
jp
push
fdivr
rcr
adc
pop
movsb
notb
outsb
add
pop
flds
popa
addr16
rorb
xchg
movsb
lahf
out
lock
sub
mov
cs
adc
rorl
mov
fnstcw
jp
sarl
or
stos
mov
add
cmp
push
repnz
cs
mov
xor
or
ds
inc
push
inc
andb
aas
push
in
mov
mov
rclb
mov
push
jae
data16
mov
pop
mov
divl
inc
mov
mov
jne
icebp
arpl
out
stos
sbb
daa
mov
ljmp
fs
adc
test
mov
cmp
in
mov
scas
lock
dec
adc
loope
je
ret
bnd
aad
rorb
arpl
jge
inc
or
xchg
jmp
in
imul
inc
into
sbb
adc
adc
cmp
jle
sub
push
pop
ror
inc
pop
cli
pop
pop
jge
add
test
xchg
jle
fsts
lods
jp
xchg
les
sub
push
mov
sub
pop
stos
xchg
fbld
inc
pushf
popa
movswl
xlat
out
inc
mov
in
loopne
cmp
mov
out
daa
cltd
mov
fs
jne
mov
loope
adc
repnz
movsb
sbb
rcrb
pop
xor
sub
push
cmc
mov
jge
xlat
pop
out
add
shr
inc
xchg
out
jge
sub
pop
cmc
fs
hlt
adc
jmp
add
in
rcr
jl
stos
iret
xchg
sub
pushf
push
bound
mov
aam
or
adc
out
push
fcmove
push
adc
jnp
in
push
and
push
insb
clc
bound
movsl
stos
xchg
xchg
test
ds
xchg
in
mov
xor
popf
xchg
sub
hlt
adc
movsb
aam
icebp
fs
fidivl
or
xchg
cltd
std
fisttps
mov
pop
or
icebp
or
inc
hlt
jl
adc
sub
fdiv
xchg
jb
loop
and
pop
xchg
xchg
popa
mov
or
jecxz
jno
inc
imul
adcl
pusha
and
shlb
addr16
and
outsb
sbb
leave
shll
pop
push
imul
jge
iret
in
sub
repnz
sti
stos
scas
in
inc
daa
hlt
decl
mov
pop
sub
mov
jge
popf
into
jmp
scas
cmp
int3
push
test
int
jns
push
pusha
xor
cmp
pop
sbb
xchg
mov
xchg
pushf
cmpsl
xchg
sbb
loopne
pop
or
pop
sbb
xchg
push
and
popf
pop
mov
imul
lods
in
cmc
insb
popa
mov
sub
call
popf
sub
pop
popaw
pop
xchg
cmp
rcr
cld
loopne
sbb
aas
shrb
dec
push
cmp
lret
mov
mov
jg
negb
cmpsl
and
shlb
sub
inc
adc
push
insl
sbb
mov
clc
mov
iret
push
cmpsl
mov
ds
sub
mov
ja
ljmp
iret
inc
ljmp
lds
sbb
dec
je
cs
xchg
ret
sbb
insb
imul
mov
sbb
adc
daa
sbb
push
mov
cmp
in
xchg
mov
cltd
sub
sub
dec
idivl
jnp
cmpsb
push
inc
loopne
fucomi
dec
mov
das
push
jb
repz
outsl
xchg
bound
idivb
cmp
mov
mov
movsb
pop
or
mov
or
and
lds
dec
cmpsb
ret
mov
js
in
xchg
out
inc
cmp
stos
ffreep
mov
xchg
fstl
and
psubq
xchg
das
pop
push
fcompl
insb
in
repnz
jnp
pand
sti
sub
in
mov
aam
or
push
ds
clc
cmp
lcall
jmp
adc
mov
fldenv
mov
lea
push
mov
mov
mov
iret
add
mov
add
les
int
lcall
xchg
lds
scas
dec
movsl
adc
and
pop
lret
std
enter
pop
push
in
dec
xor
mov
adc
mov
mov
push
inc
dec
adc
jle
cs
cli
push
out
loope
dec
movsb
add
xor
mov
push
sub
sahf
add
dec
lahf
lret
pop
leave
add
ret
pop
mov
xchg
inc
sbb
and
xchg
jne
add
xchg
cmpl
sub
loope
mov
mov
iret
lret
fnstcw
sti
ret
pop
adc
add
jg
pusha
jp
add
mov
test
mov
lret
stos
in
clc
aad
imul
xchg
pop
negb
test
insl
dec
fistpll
aaa
stc
sahf
mov
in
bound
push
xorl
addr16
jo
mov
mov
xchg
scas
pushw
das
mov
cmpsb
or
dec
popf
loopne
fsubs
aas
movsl
mov
sbb
xchg
pop
clc
mov
and
into
dec
mov
shl
xchg
mov
in
sbb
loopne
cmp
ss
rcll
popf
shlb
xor
push
dec
pop
inc
jo
jb
repnz
mov
lahf
es
xchg
pop
call
pop
mov
push
shll
sbb
cmp
push
lret
out
hlt
push
cmp
sub
sbb
pop
xor
stos
xchg
and
sbb
pop
dec
outsb
jecxz
std
xor
push
cmpsl
adc
push
lret
and
jle
sbb
cmc
cmc
pop
lods
out
dec
negl
or
adc
jbe
push
test
jp
into
push
rolb
pop
fwait
push
aas
and
adc
adc
dec
xchg
mov
or
aam
lods
movsl
push
lock
pop
sbb
sub
mov
mov
mov
jp
mov
test
and
jno
popa
daa
js
mov
dec
lock
ret
leave
sbb
dec
pop
test
xor
leave
jnp
pop
ja
cmc
or
gs
rclb
xchg
aaa
add
ret
stc
mov
loop
aam
adc
push
mov
stc
sbb
jp
xor
in
dec
in
pushf
mov
adc
jp
testb
pop
out
fcomi
cwtl
sub
mov
adc
cli
je
out
jp
mov
fs
or
clc
ja
or
push
cmp
lret
scas
push
jae
je
xchg
push
lahf
ret
jle
leave
xchg
in
pop
ss
test
sub
shrb
pop
push
loop
adc
cmp
out
inc
sbbb
mov
test
inc
add
or
or
dec
push
sub
and
add
int3
cmp
daa
in
test
rorl
mov
lcall
iret
arpl
xchg
ljmp
mov
push
fsubrs
cli
pop
mov
push
pop
mov
and
lahf
jns
repnz
rcll
jne
cli
sbb
clc
fwait
or
fwait
xor
mov
cmpsl
dec
shl
das
idivl
cld
in
pop
incb
pushf
push
fucom
idivl
adc
xor
fbstp
ret
jl
ret
xor
xor
loope
mov
fimuls
sbb
sub
xor
cmpsb
or
jg
cltd
lock
sub
cmp
rol
push
ja
lcall
mov
jg
mov
mov
lea
das
cmp
xchg
jle
mov
loopne
sub
fistpll
pop
mov
adc
xor
daa
aad
decb
mov
mov
mov
movsl
mov
cwtl
cli
repnz
pop
pop
lret
call
fwait
iret
rol
outsb
scas
xor
ja
fs
sub
add
js
daa
pop
and
std
shrl
xor
in
sbbl
inc
adc
pop
pop
xchg
dec
addr16
push
out
into
xor
adc
mov
int3
les
repz
ja
je
add
mov
inc
mov
xchg
fstl
xor
dec
or
jp
sbbl
insl
insb
rcrb
rolb
sbb
mov
fadds
pop
mov
addr16
test
jb
fildll
int3
sub
cmp
leave
shrl
pop
bound
fdivr
sub
cmpsl
mov
push
clc
sbb
mov
or
addb
lods
xchg
hlt
int
out
scas
test
xorl
or
out
loop
adc
inc
fstp
adc
fstp
punpckhbw
mov
dec
and
fs
and
jg
fsubrp
clc
jo
popf
and
call
cmp
push
mov
iret
cwtl
xchg
mov
mov
jmp
pop
jle
and
push
mov
jle
and
inc
stc
js
mov
roll
imul
jmp
sbb
les
dec
fwait
xor
adcl
add
push
or
adc
sbb
fs
sub
les
xor
push
push
add
sub
lds
xor
insb
adc
adc
xor
in
pop
mov
cmp
xor
add
das
inc
out
test
test
xor
repnz
sbb
int
sbb
sbb
lret
xchg
xor
not
xlat
sub
jb
stos
inc
icebp
add
cmp
cmp
or
test
sarl
sbb
lds
lcall
jecxz
cld
or
data16
xlat
and
inc
inc
jmp
adc
mov
out
jno
push
inc
and
xor
dec
xchg
sbb
push
pushf
jp
imul
sub
pop
lahf
scas
testb
jae
sarl
dec
test
mov
and
cmpsb
negl
scas
sub
in
xor
lahf
es
mov
iret
sbb
ficompl
mov
or
xchg
insb
dec
cltd
fidivs
cmp
push
pushf
mov
jb
jae
arpl
dec
rcrl
in
clc
popa
pop
cmpsb
movsb
dec
inc
loop
lds
push
iret
insb
mov
out
nop
loop
adc
dec
in
fbld
or
mov
cmc
jge
xor
sahf
fwait
ja
pushf
adc
stc
lds
inc
pop
fldcw
sub
mov
jmp
fdivrs
fstpt
negb
pop
loopne
xor
in
bound
mov
inc
dec
test
dec
cmp
sub
mov
sahf
mov
mov
in
adc
pop
aam
dec
dec
adc
popf
out
sbb
mov
jb
adc
lds
mov
icebp
lret
dec
cmpsl
loope
test
insb
cmp
repnz
mov
loop
in
repnz
jns
dec
fxch
pop
stos
cld
push
popa
xchg
adc
data16
pushf
es
jb
pop
cwtl
cwtl
mov
push
push
data16
out
add
cltd
adc
lods
mov
adc
insb
jecxz
mov
fnsave
mov
xlat
add
fsub
push
mov
mov
daa
cmp
popa
js
rcrl
inc
or
dec
js
pop
movsb
mov
ffree
xor
pop
in
lds
adc
push
aad
insb
js
movsl
ffreep
adc
dec
in
sbb
fnstcw
push
jmp
xchg
rcrb
pop
jp
int
ljmp
cmpsl
cmp
pop
push
lods
lods
push
mov
and
pop
arpl
add
nop
mov
pop
es
ret
pop
in
xchg
cmpb
xchg
pop
sub
sub
pop
repnz
insb
movsb
out
cmp
in
dec
cmc
repnz
mov
mov
testb
jnp
std
rorb
addl
inc
fcoml
pop
sub
jnp
aad
shl
push
dec
cmp
mov
mov
inc
push
pop
out
xor
icebp
cld
push
mov
jp
push
gs
lds
pushf
fstps
stos
mov
fidivs
repnz
mov
inc
xchg
adc
and
jge
rcrl
jbe
push
xchg
cli
adcb
clc
add
ss
gs
js
rsm
adc
insl
das
gs
psllw
dec
xchg
cmpsb
jp
inc
mov
arpl
leave
push
sarl
ja
dec
xor
addl
cs
movb
call
addb
pop
xchg
sti
ficoml
shr
cmp
jmp
xor
andb
mov
add
es
imul
sbb
enter
test
sbbl
adc
js
sahf
sarb
cmp
push
add
stos
imul
pop
push
jo
out
xchg
movsl
int3
inc
lds
out
aaa
mov
adc
mov
cmp
and
bound
push
daa
lock
sub
sub
cmpsb
xchg
dec
xchg
add
sub
outsl
bound
add
mov
jne
and
jnp
cmp
fnstcw
sbbl
sbb
push
mov
inc
test
or
or
push
pop
stc
fcomps
dec
jl
xor
stc
ljmp
rcrl
xchg
push
imul
xchg
or
stos
mov
lods
fdivs
jecxz
cmp
je
cli
aaa
cmp
ret
les
jge
insl
arpl
xlat
insl
mov
and
add
repz
fsubs
in
lcall
arpl
adc
mov
push
ret
xor
dec
mov
mov
push
push
sarl
enter
test
mov
and
sbbl
xor
pop
and
out
bound
lahf
jg
leave
dec
sbb
jno
cmc
pushf
cmp
daa
lret
push
sbb
test
cmp
mov
bnd
fbld
xor
jbe
rorl
cmc
insb
xchg
or
and
cmp
mov
aaa
inc
cwtl
ret
mov
js
in
dec
sahf
lods
mov
popa
pop
mov
mov
out
mov
dec
pop
adc
pop
lods
xchg
rcll
sub
leave
aas
pop
scas
fnstsw
push
dec
fs
insl
lcall
arpl
dec
jle
fs
mov
cmp
lahf
jmp
xor
test
cmp
pushf
sub
xchg
xor
sbb
mov
pop
hlt
dec
dec
gs
test
jnp
pop
mov
stc
dec
stos
pop
scas
and
decl
jl
or
lret
adc
xor
call
jae
std
je
adc
cld
arpl
jbe
in
out
push
dec
inc
mov
mov
incb
push
cmpsl
inc
test
mov
dec
xchg
imul
rcll
jl
rcrb
aaa
imul
add
mov
inc
je
xchg
dec
mov
insl
in
push
jno
jno
jecxz
inc
xor
fnsave
adc
push
mov
cmpsb
std
shlb
notl
ja
stos
sub
loopne
push
xchg
outsb
icebp
xchg
shlb
mov
jae
or
mov
dec
lods
leave
dec
int
push
sbbb
xor
or
cwtl
movsl
repnz
push
or
jno
nop
sub
pop
cmpb
pushf
sbb
mov
pop
pushf
jle
xchg
pop
dec
pop
xor
xchg
jno
cmp
push
push
add
mul
push
xchg
call
and
loop
orb
scas
sub
mov
mov
sbb
mov
lock
sti
and
inc
mov
and
adc
pusha
gs
das
or
iret
push
std
mov
or
repz
in
mov
adc
jge
xchg
sub
jle
pop
mov
inc
test
sub
mov
stos
out
jne
add
aas
jae
pop
inc
lea
or
xchg
sub
ficomps
inc
scas
push
ffree
cmp
pushf
adc
outsl
mov
xchg
outsl
addb
xchg
push
ss
push
std
push
scas
mov
pop
push
add
push
cmp
out
push
xchg
lea
inc
mov
loop
int
fwait
mov
fucom
xchg
xchg
imul
shll
xchg
pop
jno
out
stc
std
mov
xor
addr16
mov
or
adc
cmpsl
gs
fwait
push
push
jecxz
lods
push
jnp
jno
ljmp
pop
fwait
test
adc
or
inc
dec
xor
pop
mov
into
cmc
mov
daa
fdivrp
mov
cmp
icebp
mov
mov
mov
mov
mov
or
stos
xor
sbb
stos
sti
nop
pusha
xchg
andb
push
mov
movsl
sub
cmp
sbb
scas
popa
fstl
imul
sub
dec
lret
icebp
mov
divb
loope
ret
add
dec
and
cmp
nop
out
sti
aas
inc
add
push
loop
cmp
pop
jp
mov
mov
add
lret
movsl
jl
push
add
test
pop
jmp
mov
je
andb
ret
pop
sub
jae
inc
sub
mov
pusha
hlt
stos
mov
cmp
mov
mov
jne
cmp
jns
stos
xor
add
hlt
lret
outsl
jl
jle
sbb
push
xchg
or
dec
fdivl
pusha
out
stos
pushf
add
rcl
dec
sub
or
jne
lahf
int3
add
xor
add
in
nop
pushf
xchg
hlt
push
jne
sbb
loopne
fimuls
test
pop
loope
addr16
sub
fdivrl
jnp
aam
sbb
sbb
je
xor
cmc
jg
frstor
mov
xor
inc
insl
xchg
mov
cmp
pusha
loopne
out
jecxz
stc
fwait
sub
in
ds
rolb
push
sub
out
dec
jmp
jmp
pop
fiadds
mov
fisttpl
inc
cmp
push
fwait
outsb
jmp
or
inc
addl
or
inc
data16
call
fnsave
mov
pusha
push
push
fucom
sbb
mov
and
add
int
das
sub
rcr
aam
cmpsl
sti
xchg
pop
add
iret
cmc
push
push
push
and
aad
gs
fwait
xchg
pop
pop
mov
hlt
fcomps
dec
add
push
in
dec
ret
xchg
filds
push
jb
mov
and
dec
stos
push
jle
sub
xchg
mov
mov
and
push
je
cmp
mov
sub
push
jge
jne
mov
add
gs
mov
int3
nop
mov
into
cmp
pop
jmp
mov
mov
inc
sub
mov
fisubl
lahf
mov
sbb
add
in
rorb
pop
cmpsl
in
icebp
fildll
fnstcw
sbb
push
or
mov
and
jno
cltd
inc
mov
pushf
add
movb
pop
and
cmp
lret
xor
cltd
outsb
movsl
imulb
ficompl
mov
into
cmp
xchg
mov
fsubrl
pop
sbb
mov
out
aaa
in
test
imul
mov
jmp
xor
cmp
push
popf
inc
inc
fstl
mov
sub
daa
xchg
ds
sub
lahf
addr16
fs
jge
mov
mov
or
sub
and
push
mov
push
test
hlt
repnz
shlb
push
xchg
push
clc
fcmovnbe
cld
test
and
xor
xchg
adc
mov
or
loope
daa
jns
int3
hlt
faddl
dec
push
sbb
mov
inc
inc
cmpsl
movsl
jmp
int
pop
loope
cmp
xchg
cmp
les
or
stc
mov
rcll
sub
jns
pop
rcrb
das
mov
lock
aaa
or
cli
shlb
ficompl
cmpsb
xchg
push
mov
fsubs
jl
movsl
pop
mov
insb
pop
dec
inc
das
je
mov
call
xchg
jmp
push
insl
inc
stc
sti
faddp
dec
dec
fisubl
xor
push
sub
inc
mov
xor
aas
lret
das
insb
out
jnp
repz
inc
push
repz
jb
out
and
inc
push
push
fidivrs
int
in
push
call
fwait
movsl
lret
and
cmp
xchg
popa
jmp
icebp
push
fadd
jecxz
jns
dec
jbe
xlat
ret
js
push
out
outsl
pop
shlb
jbe
pop
jbe
push
mov
dec
in
enter
mov
imul
addr16
mov
cmp
mov
test
out
leave
jb
dec
je
lods
and
xchg
into
mov
xchg
pop
icebp
jmp
test
into
loope
inc
ja
mov
out
and
stos
pop
aad
cmp
scas
fwait
jge
dec
dec
sub
daa
fiaddl
cmp
stos
out
inc
mov
push
jecxz
sub
or
fbld
mov
jle
lahf
mov
inc
adc
mul
in
pop
sbb
or
jg
leave
inc
dec
pop
or
xchg
mov
inc
xchg
lret
test
jno
mov
lahf
cmpsl
jbe
subb
out
xor
sahf
enter
icebp
fstl
lock
loopne
add
push
rcl
cltd
jp
xchg
faddl
pop
sub
mov
cmp
fdiv
mov
and
movsb
std
fcoms
daa
mov
pop
test
push
cmpsb
xchg
xchg
xor
push
arpl
test
mov
mov
xchg
in
pop
jns
sub
fcomps
test
into
les
push
add
xor
xchg
adc
rcll
dec
fildl
rcr
dec
adc
stos
data16
add
sarl
cmpsb
stos
sbb
mov
int3
testl
sub
mov
stos
jno
jno
leave
mov
ret
aaa
jge
push
jo
pop
push
decb
arpl
into
stos
aad
jne
imul
mov
or
mov
add
push
mov
ljmp
test
imulb
jbe
dec
xchg
cmpsb
test
outsb
push
xor
ds
push
test
push
addr16
mov
lods
loop
stos
mov
cwtl
aaa
aam
aad
cmpsl
iret
add
clc
push
imul
push
push
mov
les
lock
jo,pn
imul
mov
jl
xor
inc
push
mov
addl
lahf
xchg
daa
leave
pop
cmc
or
test
adcb
mov
popf
mov
add
jae
sub
les
jge
jecxz
inc
lods
in
int3
cmc
test
inc
scas
mov
jno
test
out
out
jge
or
and
xchg
jp
sub
and
sub
dec
sbb
push
cmp
pop
mov
sbb
call
add
test
sub
mov
or
mov
adc
loope
out
std
push
or
dec
or
jbe
add
fldt
mov
test
inc
sub
xorl
adc
fadd
lods
sub
add
icebp
ret
pop
mov
sub
sub
jl
mov
test
ja
loopne
sbb
jb
hlt
cmp
or
mov
fmull
lock
xchg
das
pushf
adc
sbb
xor
xor
sbbb
and
push
cmpsb
hlt
mov
push
adc
int
cmp
xchg
decl
add
daa
mov
xchg
jne
xchg
jns
fwait
stos
neg
sbb
adc
scas
fwait
pop
sub
lock
xor
lds
push
fwait
adc
into
sub
test
jl
cmpb
insl
out
and
mov
lods
add
mov
jno
sub
aad
leave
icebp
dec
cmp
and
jecxz
xor
and
cmpsb
xor
push
dec
dec
pop
mov
sub
pop
inc
and
xchg
jle
aad
icebp
sbb
xlat
int3
jns
jnp
inc
into
fnstsw
xor
add
pop
mov
aam
testb
scas
cmc
lahf
push
fisttps
inc
pop
xchg
or
mov
adc
test
das
rcr
sub
push
arpl
cmpsb
inc
clc
xorl
scas
xor
js
pusha
adc
ficoml
fstps
inc
fisubl
popa
cwtl
enter
loopne
insl
adc
pop
out
pop
xor
shrl
adc
xchg
movsl
add
decb
or
and
mov
outsb
in
sub
nop
stc
push
add
jo
nop
sbb
sbb
jne
int
pop
pusha
out
mov
mov
cs
dec
or
call
and
repnz
int3
jg
movsl
leave
imul
sbb
xor
cltd
add
jo
adc
jae
inc
cmp
fisubrl
sub
fldcw
mov
imul
mov
mov
dec
sahf
mov
outsb
xchg
hlt
lods
fsts
insb
aad
imul
out
test
xlat
and
lret
je
cmc
jge
cmp
lret
sbb
popf
rclb
nop
jns
xchg
and
mov
inc
xchg
xchg
dec
push
insl
cmpsb
mov
in
inc
lods
cmpb
cmp
cmp
shll
cmc
and
je
lahf
add
iret
ds
aas
ljmp
movsl
in
xchg
push
sahf
dec
pop
jl
popa
out
mov
and
push
insb
inc
stos
out
sub
pushl
insl
fs
or
loopne
std
inc
mov
daa
out
fs
unpcklps
adc
xlat
cwtl
xor
sbbl
dec
and
jmp
mov
or
in
or
jecxz
mov
ret
or
cmp
jb
xorb
addl
dec
push
jno
in
jle
mov
test
adc
es
pop
xor
pop
sbb
and
test
inc
dec
shrl
out
sbb
mov
sub
js
xchg
subl
jmp
mov
ret
push
movsb
outsb
dec
fistpl
sub
pushf
sub
adc
xchg
adc
lock
mov
les
stos
adc
push
rol
scas
lcall
mov
push
shlb
sbb
jbe
jo
dec
xchg
lods
outsl
pop
inc
push
pop
dec
fidivrl
cli
lock
out
sub
je
push
xchg
dec
mov
adc
add
daa
sti
jp
jl
mov
mov
inc
arpl
lret
jge
pusha
movsb
test
addr16
mov
fsubrs
lret
adc
push
lret
sti
nop
std
jp
push
lods
fwait
bound
insb
rcrl
ljmp
fmull
frstor
mov
nop
xchg
loopne
into
cli
or
movsb
xlat
pop
lret
in
sbb
mov
cmp
jmp
lods
orb
inc
or
dec
xor
sub
cmpsb
xchg
loope
push
lret
inc
divb
ja,pt
inc
pop
jp
test
or
mov
fsubr
push
pop
or
inc
jl
jnp
jo
sub
dec
sti
adc
pop
sub
int
xchg
push
push
unpcklps
add
fldl
lcall
sahf
push
dec
in
dec
mov
int
jnp
scas
shlb
jno
lods
dec
and
leave
push
and
fcoms
les
sub
out
xlat
out
mov
out
or
leave
pop
psubusw
lret
and
xchg
and
jge
imul
xchg
ljmp
push
pop
cltd
sbb
gs
jg
movsb
pop
add
fldenv
push
fnstsw
xor
mov
ss
xchg
mov
loopne
fadd
call
int
ret
test
add
jo
xchg
cwtl
sbb
in
fst
lea
jnp
cmp
insl
stos
out
dec
xlat
test
jo
loopne
lahf
pop
push
push
ss
iret
add
test
mov
out
jg
push
or
cmp
adc
hlt
mov
inc
jp
cmp
jecxz
or
jbe
pop
or
cwtl
das
mov
lea
ficomps
inc
lea
sti
pop
int
xchg
dec
xchg
inc
ret
out
bound
push
xchg
cmp
cmp
data16
sub
stc
push
inc
pop
rorl
adc
repnz
or
add
repz
fwait
push
in
xchg
xchg
fs
sub
pusha
ljmp
fcomp
mov
jge
lods
fisttpll
call
xchg
mov
pop
into
adc
ret
sub
and
pop
fdivrp
pop
pop
dec
jge
outsb
mov
scas
fcom
dec
mov
pop
adc
fiadds
cld
sarl
insl
xor
movsb
cli
jae
sub
ljmp
jb
xchg
jl
ds
and
aad
xchg
ljmp
push
cmp
mov
mov
scas
jo
loope
mov
test
adc
insb
popf
cmp
add
sti
in
cltd
mov
dec
int3
mov
filds
arpl
mov
pop
sub
fs
in
mov
mov
test
subb
jp
and
mov
add
inc
push
cmpsb
popf
sbb
out
mov
mov
pusha
ds
mov
xor
xchg
push
sar
mov
fcom
xlat
jecxz
dec
cmp
sbb
test
out
push
lahf
arpl
rorl
pop
mov
xchg
mov
adc
in
pop
dec
adc
mov
mov
mov
popl
xor
or
hlt
lcall
adc
adc
mov
jo
cmc
inc
or
dec
mov
mov
mov
add
add
sub
or
mov
ja
ljmp
xor
mov
dec
push
mov
fldt
jmp
pusha
dec
outsb
in
addb
ret
loope
cmc
mov
dec
hlt
sti
sbb
push
ret
mov
insb
in
sbb
mov
sub
pop
sahf
and
mov
cwtl
and
aas
jecxz
sti
out
std
cmpsb
mov
mov
and
or
and
mov
loop
dec
cmp
jle
outsb
daa
or
push
loop,pn
loopne
mov
xor
inc
jmp
and
mov
in
js
mov
adc
aas
cwtl
fbld
fs
mov
or
imul
push
sub
lret
add
cmp
iret
jb
roll
icebp
cmpsl
outsb
pop
mov
subl
out
pop
out
lahf
lret
jge
push
jb
je
stos
lcall
xchg
mov
sbb
sub
add
mov
adc
mov
out
es
push
stos
sbb
scas
jno
imul
cld
push
push
loope
sbb
mov
mov
stos
add
pop
aad
sbb
jbe
lods
lret
xchg
or
xchg
bound
inc
cmpsl
inc
dec
icebp
stc
mov
jb
add
popa
push
or
lods
inc
lahf
pop
sahf
mov
xor
hlt
xchg
mov
outsb
dec
sbb
jnp
jecxz
jnp
iret
mov
mov
lods
in
and
subl
add
rcl
in
pop
cmp
ds
out
aam
in
fsts
xchg
cmpsl
dec
aas
js
cli
or
divps
call
xor
cltd
loope
mov
daa
ljmp
addb
push
sbbl
lldt
cmpsl
icebp
notl
or
dec
jecxz
cmc
cld
shlb
cmpsb
inc
subb
mov
js
xor
sub
cs
mov
sbb
mov
call
testl
cmpsb
mov
inc
pop
stos
adc
loope
push
scas
imul
xchg
cmp
pop
mov
cli
and
fdivp
and
aam
push
jo
imul
jl
shrl
popf
aad
iret
sbbl
inc
xchg
mov
pop
movsb
inc
pop
and
dec
jb
js
pop
mov
and
popf
fsub
mov
sbbb
test
sub
push
es
jp
std
pop
cld
out
leave
cwtl
js
adc
or
mov
rorl
inc
xlat
loopne
lret
xor
dec
stos
popa
out
cmc
mov
fnsave
cmpsb
ret
and
lea
inc
insb
sbb
jecxz
aad
and
inc
xlat
xlat
pushf
shll
add
je
mov
sti
inc
add
xchg
add
out
or
xchg
lods
mov
stos
in
pop
mov
cltd
sub
mov
enter
jbe
mov
es
fsub
pop
mov
sbb
push
out
jp
add
nop
mov
rcrb
movsl
jbe
insl
push
add
rorb
push
push
cltd
cld
aaa
rcll
mov
cmp
inc
out
mov
dec
or
mov
scas
sub
testb
cwtl
test
aad
iret
mov
mov
jg
mov
sbb
popf
sub
shl
imul
negl
xchg
push
xchg
stos
aas
or
sti
inc
pop
fdiv
mov
stos
imul
subl
pop
mov
ja
loop
add
les
jnp
movq
pop
xchg
cmc
mov
cmp
into
add
sub
push
xor
dec
je
push
add
lahf
cmp
movb
movsb
lcall
and
cmp
add
jae
adc
inc
outsl
push
mov
aas
xor
or
lcall
out
mov
shll
lret
mov
mov
in
test
add
or
xchg
push
cmp
imul
sub
jmp
dec
call
rcrb
aam
xchg
or
pop
leave
mov
xchg
mov
fldl
inc
push
push
inc
jno
mov
sar
add
push
push
out
mov
icebp
mov
ror
loop
divb
data16
imul
mov
les
pop
adc
inc
sub
or
imul
fnsave
fldl
cmc
rcrl
clc
sub
fwait
dec
out
incl
xchg
adc
and
and
pop
adc
mov
jb
xchg
inc
jle
jmp
loop
clc
jae
jmp
addr16
in
xchg
xchg
xor
jo
rcrl
inc
push
inc
shlb
xchg
outsl
loopne
dec
add
push
mov
loopne
ljmp
cmp
ret
mov
test
lcall
and
or
or
mov
and
and
mov
sbbb
insb
jne
mov
jmp
imull
cmp
xchg
je
jl
adc
adc
or
addr16
dec
lods
jmp
and
scas
in
movsl
iret
xlat
dec
push
ljmp
jp
mov
add
stc
xchg
sub
bound
arpl
mov
sbb
ss
jmp
push
in
cmc
cmpsl
sarl
or
xchg
test
or
ds
aaa
mov
jne
jl
jb
cmp
loopne
dec
pop
adc
fidivrs
clc
dec
std
or
bound
insb
sar
sub
es
add
add
mov
addr16
pop
add
ret
push
mov
nop
fld
push
insl
jb
dec
lcall
sti
out
icebp
ds
jae
test
pop
mov
mov
sub
int3
mov
addr16
outsl
pusha
xchg
push
or
leave
jp
pushf
push
int
xchg
mov
push
adc
ret
and
movsl
mov
adc
sti
and
jnp
lea
sub
jp
std
leave
lea
mov
popa
leave
mov
mov
sahf
movsb
mov
xchg
mov
stc
or
aad
insb
mov
insl
pop
idivl
sub
test
pop
lods
push
cmp
call
xor
clc
pop
imul
jmp
push
sbb
inc
mov
xlat
xchg
mov
movsl
mov
and
jne
hlt
adc
popf
xchg
lods
in
sub
mov
jb
and
lods
inc
pop
scas
movsl
cmp
stc
insb
cmp
pop
je
sahf
jne
addr16
das
add
je
xor
mov
and
and
push
int
dec
fcmovb
in
popa
fidivrs
xchg
dec
add
cmp
dec
pop
fwait
js
push
dec
test
test
fs
inc
aas
shl
movsb
push
add
sahf
jne
in
xchg
fs
push
xor
xchg
ja
cmovbe
out
mov
ss
sahf
addr16
dec
mov
adc
mov
or
jl
jbe
fstl
dec
out
cli
cmc
insb
dec
xor
pop
push
pop
sbb
lods
fstpl
xlat
jl
lcall
lds
inc
bound
push
cltd
mov
scas
addr16
shll
or
xor
mov
mov
arpl
ljmp
aad
mov
mov
movsl
fs
add
lock
hlt
inc
lds
and
in
pop
jns
fcoml
out
fcmovbe
in
sub
xlat
daa
jle
jmp
xchg
ja
xchg
out
scas
push
das
sbb
xchg
sbb
cmp
xor
or
cs
and
scas
xchg
std
in
int3
pop
sbb
mov
inc
sahf
sub
shl
outsb
jl
mov
dec
aad
jmp
jge
mov
cmp
dec
rorl
cmpsb
sbb
cltd
jb
sub
inc
add
dec
pusha
xchg
sbb
mov
jle
into
xrstors
inc
loop
leave
les
les
add
inc
push
push
sbb
bound
in
jmp
in
dec
jns
pop
jle
leave
sbb
test
xchg
iret
cmp
mov
out
mov
push
lret
xor
stc
clc
dec
sbb
or
outsl
push
xchg
iret
ja
push
stc
or
mov
inc
ljmp
jbe
inc
gs
das
push
push
jnp
jle
mov
dec
push
aad
insl
es
js
fmull
aaa
push
sbb
sbb
dec
and
jecxz
outsl
fwait
mov
inc
dec
push
sbb
ja
loop
jns
lods
fnstcw
pop
or
aas
or
test
cwtl
stos
xchg
jp
mov
aam
sbb
stos
lds
add
dec
dec
sbb
rclb
jnp
les
or
int
lret
dec
sbb
int3
add
adc
lods
mov
pop
or
rorl
mov
fiadds
add
xor
sub
add
jae
mov
cmc
pop
pop
xor
repz
imul
ljmp
enter
mov
jae
sub
arpl
fwait
adc
or
sqrtps
rorl
mov
pop
idivl
bound
jns
into
push
daa
jmp
ja
loop
add
mov
push
dec
lods
mull
jle
gs
push
push
mov
outsl
scas
loopne
data16
mov
add
and
jge
add
xor
jle
dec
push
rorb
mov
in
sbb
pop
xchg
sbb
imul
push
hlt
xor
sub
cmpsb
nop
stc
imul
scas
push
hlt
ljmp
mov
add
repnz
jmp
adc
js
rcr
and
stos
adc
scas
out
mov
cmc
loope
pop
or
stos
mov
jnp
inc
hlt
cltd
orl
fadds
loop
arpl
add
sbb
mov
clc
ss
xchg
push
mov
and
pushf
sub
data16
jge
pop
sbb
adc
cmpsl
push
inc
push
in
test
aaa
hlt
jecxz
dec
fsub
inc
cmp
dec
lcall
mov
test
in
xchg
ja
outsl
test
mov
inc
int
mov
filds
js
outsb
cmp
ret
jge
cmp
cmpb
int3
add
int3
mov
add
ja
mov
sti
jle
sub
xor
adc
xor
mov
sar
jmp
out
xchg
dec
ja
adc
push
push
leave
pop
mov
or
sbb
mov
dec
and
dec
mov
jbe
movsb
into
fldl
negl
imul
testb
mov
inc
je
inc
int3
sub
push
cwtl
stos
jecxz
ffree
mov
dec
adc
test
jecxz
mov
fdivs
in
cmp
push
inc
sub
imul
add
test
mov
fildll
push
push
imulb
addr16
cltd
mov
and
sub
sbb
push
sub
adc
lret
mov
outsl
fs
fsubs
pop
nop
mov
cmp
mov
pop
fmulp
fisttpll
xor
push
scas
mov
lahf
fstpt
xor
mov
add
addr16
out
stos
mov
push
repz
call
dec
jne
clc
shrb
clc
jbe
inc
les
mov
dec
and
add
push
sub
or
xchg
jbe
sbb
push
jb
outsl
pop
imul
stc
sahf
frndint
jp
jmp
xor
push
aam
xchg
adc
add
fwait
pusha
std
xchg
cltd
adc
loopne
pop
cltd
sbb
add
adc
js
ss
cmpsl
js
sarl
sub
pop
nop
fidivrl
cmp
int3
pop
mov
sub
pop
sbb
mov
lods
loop
push
pop
add
xchg
mov
fwait
popf
cli
cmpsl
add
add
push
sbb
inc
sarl
popf
jo
jae
xor
pop
mov
repnz
out
fidivrl
dec
aas
fldcw
shrl
loope
daa
hlt
orl
mov
loop
cs
cli
cmpsl
dec
rolb
sub
add
mov
ja
cmc
loopne
addr16
testb
scas
fbld
xor
enter
testl
clc
js
stc
sbb
mov
stos
dec
fwait
int3
rorb
shlb
dec
leave
or
mov
inc
in
jecxz
notb
loop
imul
or
mov
in
div
jle
adc
inc
pop
shr
shll
push
cmp
shrl
lret
inc
inc
lahf
inc
adc
sub
ljmp
xor
insb
fwait
out
insl
out
lcall
cltd
pop
or
ffree
call
test
mov
loop
push
pop
stos
divb
sbb
and
adc
inc
imul
xchg
pop
sub
into
push
jnp
jg
push
mov
outsb
mov
push
jns
aam
push
mov
and
and
cmc
push
enter
imul
pop
xchg
incb
lcall
into
icebp
dec
xor
sbb
sub
cld
add
mov
notl
xchg
push
inc
push
sub
les
and
inc
and
mov
rclb
hlt
lret
cmpsb
ret
and
test
je
ljmp
push
loopne
pop
xor
adc
lret
repz
out
mov
outsl
es
sub
cld
iret
int
inc
mov
push
std
fldt
lret
in
loop
hlt
cmpb
leave
and
ds
sar
add
inc
in
lret
adc
lret
outsb
push
pop
imul
pop
jmp
fadds
pop
leave
push
das
repz
in
mov
insl
fdivrs
xchg
das
inc
lret
pop
insl
mov
in
loop
dec
pop
ror
mov
xchg
daa
or
mov
lret
mov
mov
movsl
and
jne
daa
jbe
inc
fnstenv
xchg
cmp
mov
insl
bound
dec
std
insl
push
xor
imull
cmc
fcomps
outsb
dec
dec
mov
jnp
rolb
xor
negb
mov
fimull
sub
enter
mov
shll
fcmovne
orl
and
and
or
fidivrs
mov
mov
jle
stos
jecxz
fisttps
and
je
movsl
dec
fdiv
mov
xor
push
cmpb
rorb
jno
mov
mov
les
push
mov
pop
or
and
ficompl
insb
loop
sbb
popa
jl
push
adc
mov
or
lcall
jne
xor
cmp
sti
loop
sbb
mov
mov
mov
jns
add
icebp
sbb
lret
hlt
mov
adc
or
sbb
mov
add
sahf
inc
sbb
decl
cld
test
enter
dec
addr16
mov
dec
dec
es
inc
or
je
sahf
push
mov
xchg
sub
decb
jbe
fs
sbb
push
bound
lret
jnp
test
jl
jbe
dec
adc
dec
push
inc
out
sbb
stos
mov
pushf
adc
rol
inc
and
or
ret
dec
xchg
call
clc
or
dec
or
loope
je
in
inc
xor
xchg
jns
fwait
and
xchg
add
ljmp
and
jg
cmp
push
cld
pusha
test
adc
mov
ss
adc
cmc
mov
inc
sbb
push
dec
fsubrl
and
repz
sbb
xor
inc
cmpsl
in
add
jbe
pushf
out
jl
je
cmp
or
mov
add
stos
pop
lret
aam
pop
cwtl
sbb
add
mov
cmp
mov
notl
orl
aam
cmc
shll
or
cmp
cli
jmp
out
imul
pushf
pusha
inc
xchg
cltd
outsl
fcoml
jge
xchg
lahf
pop
jmp
shr
pop
mov
xchg
push
cwtl
push
aad
dec
xchg
repz
das
loopne
push
add
mov
add
xchg
and
inc
hlt
outsb
dec
fdivrl
stc
adc
lods
js
cmp
jo
or
and
std
push
lcall
push
push
and
sbb
mov
into
movsl
mov
push
adc
xchg
pop
lahf
pop
ret
sub
scas
dec
ja
jne
aas
fs
mov
stos
fdivrp
es
dec
or
cmp
insb
inc
pop
mov
cltd
push
shll
xchg
loop
cmpsl
jg
inc
mov
adc
movsb
jg
push
sub
push
dec
xchg
xor
jnp
add
mov
and
inc
jmp
into
sbb
mov
pop
fistpll
jb
cwtl
imul
mov
lods
je
lods
mov
imul
dec
mov
jbe
imul
addb
pop
lods
mov
add
fwait
push
ds
imul
and
in
mov
add
push
fcmovnb
call
xchg
dec
cld
negb
push
sub
into
testb
push
icebp
jg
in
mov
cmp
movsb
push
insl
add
imul
sti
fwait
pop
xor
cmp
and
in
sbb
leave
popa
out
xlat
aad
xor
dec
ficoms
outsl
sbb
add
lahf
lahf
ficomps
fwait
adc
bnd
cli
leave
jbe
test
and
mov
loopne
arpl
rorb
jns
xlat
in
xchg
push
popa
cmp
jae
jns
sub
movsb
test
loope
fsts
add
dec
inc
cs
sub
sub
pop
out
or
jmp
adc
cli
ss
arpl
mov
xor
dec
stos
cmpsl
mov
pop
test
out
shlb
sub
aad
mov
repz
xor
aas
fsubl
cld
and
adc
outsl
decl
insl
andps
xchg
out
xor
les
test
loop
pop
rorl
scas
dec
pop
fldt
adc
lods
in
lods
incl
add
and
popa
shlb
mov
dec
lds
cmp
inc
insl
add
subps
ljmp
int
inc
movaps
cmpsl
les
std
out
jo
js
leave
popa
push
jnp
lock
xchg
sbb
fnclex
jnp
enter
cmp
rclb
ja
in
xorb
aad
and
lea
and
sub
mov
loop
dec
adc
inc
jg
add
dec
mov
push
jbe
sub
mov
sbb
cmp
sbbl
test
insl
adc
cmp
aas
daa
lods
mov
imul
push
stc
xor
dec
enter
clc
inc
aas
fnstsw
jo
xchg
lock
pop
fisttps
push
mov
jl
sub
scas
in
jge
clc
xchg
cld
shll
push
cmp
test
mov
adc
jns
das
xorl
das
dec
push
and
lea
and
push
jnp
divl
cwtl
dec
dec
adc
enter
fadd
out
adc
in
xchg
push
xchg
add
cmp
cli
mov
sti
stc
insb
xchg
enter
fidivs
xor
aam
mov
push
push
lcall
mov
mov
out
pop
test
cmp
cmp
xchg
sub
es
sub
add
mov
stos
sbb
ja
insb
fimuls
addr16
push
jbe
push
adc
pop
xchg
fistps
rcl
pop
push
sbb
mov
aad
mov
jecxz
movsb
test
xchg
inc
push
lahf
mov
and
inc
jbe
ja
ficoms
sarb
cmc
jle
push
cmp
xor
loope
arpl
push
xchg
call
mov
inc
aad
lahf
xchg
lret
cmpsl
mov
aam
loopne
mov
movsl
inc
xor
and
mov
les
push
test
divps
and
inc
mov
cltd
data16
or
int3
cwtl
xchg
sbb
std
mov
push
mov
negl
shr
lods
fsub
in
mov
scas
in
add
inc
dec
add
add
dec
mov
mov
pop
fs
mov
pop
sub
insb
jae
shll
inc
push
sub
sub
pop
out
jmp
mov
dec
add
and
inc
cmp
data16
or
pop
sahf
leave
enter
pop
jb
outsl
push
cmp
mov
insl
pushf
insl
sbb
cmc
xor
andb
addr16
fisttpl
clc
stos
jl
mov
mov
mov
mov
popa
mov
lcall
cld
les
popa
mov
arpl
pop
or
cmpsb
xchg
in
pusha
repz
add
dec
lods
mov
loopne
jb
lahf
and
into
lock
mov
cmp
movsl
cltd
insl
stos
test
clc
notb
jbe
test
enter
mov
scas
mov
inc
je
cmp
pop
mov
mov
sbb
mov
fcmovnu
or
fdivrl
mov
adc
arpl
sub
popa
cmpsb
clc
jl
mov
dec
add
rcrb
pop
sub
imul
aam
andb
push
in
or
inc
out
imul
outsb
std
xor
adc
je
imul
dec
xchg
je
leave
je
xchg
pusha
subl
fsts
and
repz
sbb
stc
out
xchg
or
ljmp
orb
dec
jae
or
lcall
icebp
outsl
fsubrp
mov
push
ret
and
jbe
xchg
sub
cmp
push
test
and
mov
jbe
stos
mov
loopne
add
pushf
xlat
pop
mov
mov
out
and
orb
dec
aad
push
lds
movsb
bound
ljmp
inc
or
pop
pop
cmp
mov
loope
xlat
cmc
sub
pop
xor
mov
sub
add
clc
push
dec
mov
int
adc
dec
pop
mov
add
and
ja
dec
inc
shrb
cld
arpl
out
add
lahf
mov
sub
lea
in
or
ds
or
jle
push
mov
nop
push
adc
out
sbb
add
cwtl
jb
sti
stos
jle
icebp
out
or
sub
fdivrp
leave
sbb
sbb
outsl
mov
fcomi
and
ret
and
mov
into
loopne
ret
cmpsb
rcrb
pop
cmc
mov
icebp
pop
out
cmp
into
lret
sbb
dec
pop
mov
stos
pop
rolb
cs
sarb
mov
mov
movsl
inc
xor
fsts
sbb
incb
jb
lahf
in
lret
sub
push
add
xchg
lds
sub
shl
adc
fsub
test
stos
or
test
jg
out
adc
loopne
jbe
loope
mov
pushf
movsl
jp
out
out
xchg
aas
aad
push
or
cmp
push
jnp
imul
push
mov
negl
lock
mov
sbb
int3
insb
jae
loope
bound
ret
or
pop
dec
add
or
sub
fadds
out
xchg
inc
xlat
pop
or
scas
add
xchg
cli
dec
jnp
dec
divl
fbstp
cs
imul
jmp
mov
mov
inc
mov
push
push
and
mov
shr
fidivl
out
jg
sub
mov
ret
in
cmp
jbe
push
sbbl
cmpsl
pop
cld
out
push
cmc
fists
mov
mov
mov
mov
sub
cli
leave
das
mov
or
insb
inc
mov
das
mov
sti
jo
dec
scas
mov
cmp
add
mov
jge
outsl
lcall
sbb
inc
mov
or
cmp
xchg
sbb
in
mov
inc
adc
xchg
aad
ljmp
inc
or
push
push
add
and
cli
aam
test
push
push
sarl
cld
adc
mov
lock
adc
sarb
xor
mov
mov
jne
negb
pop
and
xor
jg
xchg
das
negb
xchg
mov
xor
je
cmp
hlt
cmp
pop
add
shrb
popw
pop
shrd
in
jp
inc
inc
ljmp
xchg
sahf
arpl
mov
adcb
and
rcrb
fdivrs
lret
pop
xor
hlt
sub
insl
mov
gs
sbb
orb
sub
stos
mov
aaa
and
push
push
icebp
cmpsb
imul
pop
push
fs
imul
xchg
imul
fldcw
mov
ja
fst
xchg
xor
inc
inc
adc
xor
xchg
out
push
test
jae
dec
std
std
fnstcw
sub
and
mov
mov
cmp
shrb
push
outsl
inc
out
test
cmp
loopne
cmpb
roll
pop
mov
imul
mov
mov
std
cld
in
daa
loop
adc
cltd
jge
clc
aaa
roll
inc
jg
push
cmp
cmp
pop
repnz
imul
sub
in
ret
inc
add
mov
ret
out
push
dec
sub
mov
cld
pop
jmp
aaa
add
bound
mov
decl
mov
mov
jno
cmp
jnp
repz
inc
lock
push
inc
pop
push
pop
sbb
test
iret
bound
rolb
mov
mov
dec
xchg
inc
jp
out
cmc
cmpsb
cmc
pop
addl
sub
rcrl
mov
mov
xor
scas
jge
sbb
sbb
loopne
xor
mov
jbe
push
xchg
out
aaa
lea
outsb
popf
adc
pop
pop
imul
dec
stos
push
cltd
subl
out
xor
aad
aaa
sahf
dec
daa
ds
mov
xor
insb
or
cmp
mov
or
jb
test
cmp
cs
and
and
mov
adc
in
shlb
jne
loopne
enter
jns
stos
mov
ss
gs
loope
fisubs
repnz
and
out
test
adc
jns
shll
test
nop
cmp
mov
sti
push
jp
daa
lods
rclb
jmp
push
sub
aas
jp
out
jnp
outsb
mov
call
loope
push
das
add
aam
jl
mov
std
jno
in
nop
cwtl
es
and
psubusw
inc
test
dec
notb
out
or
pop
mov
mov
loope
xor
in
pop
ss
gs
outsb
and
mov
push
lods
mov
and
push
pop
adc
or
dec
data16
mov
pop
lea
sti
je
xor
add
sub
or
arpl
xchg
xchg
xchg
push
xor
cmp
ja
push
addr16
sbb
xor
and
inc
rclb
negl
jl
jecxz
cs
mov
lock
jno
sbb
mov
push
mov
rep
mov
lahf
repnz
xor
sbb
xor
adc
daa
lcall
loop
push
mov
adc
imul
ja
pop
rcrb
push
fcomp
pop
push
fdivrp
stos
jecxz
jbe
daa
icebp
lret
xchg
fldenv
mov
mov
jne
aam
idiv
movsb
mov
pop
xor
fstl
lea
cmp
and
dec
outsl
mov
push
sub
or
aam
mov
movzbl
std
pop
loop
push
sub
mov
pop
push
pop
inc
mov
dec
ss
adc
inc
add
das
xchg
mov
js
imul
sbbl
loope
jb
push
mov
shrb
repz
adc
jge
pop
ja
jle
iret
sti
and
inc
push
jmp
sub
and
cvtdq2ps
mov
pmaxub
jo
ficomps
push
rclb
dec
pop
out
sbb
data16
ljmp
pop
push
test
test
sbb
inc
cs
roll
cmp
jbe
stc
mov
scas
rcrb
xchg
lds
arpl
xchg
rcrl
out
inc
rcrb
mov
jl
out
pause
frstor
xor
dec
loopne
or
ret
sub
rclb
cmp
jge
mov
and
sub
iret
addb
cld
loope
int3
leave
cmc
nop
mov
iret
mov
xlat
repnz
dec
int
jecxz
and
cmp
pop
jle
dec
mov
leave
or
sub
and
cmp
lahf
out
test
mov
sbb
aas
sbb
cmpb
sub
mov
jns
xlat
fistpl
xor
mov
aam
fisttpll
dec
or
popa
inc
adc
fcoms
test
insl
and
mov
das
lcall
sbb
push
adc
mov
loop
fadds
cld
and
sbb
fnstsw
out
dec
or
mov
sbb
and
inc
insl
ja
inc
dec
je
and
mov
mov
xor
orb
icebp
andb
into
daa
or
adc
and
insb
fwait
mov
push
aas
mov
roll
cmp
ds
jae
pop
repz
js
sub
ds
push
in
mov
jns
repnz
xlat
mov
leave
and
push
fmuls
test
xchg
fnsave
mov
in
or
inc
sahf
pop
lcall
inc
pop
out
js
xlat
sbb
test
leave
push
or
jns
fisttpll
push
mov
daa
out
aaa
dec
fbstp
adc
push
cli
mov
xchg
jae
cmp
jb
outsb
cli
jae
pop
aas
jae
jbe
stc
mov
icebp
jl
inc
stos
mov
in
cmpsl
lock
lods
dec
clc
shrb
pop
sub
sbb
inc
xchg
movnti
leave
stc
jnp
mov
cmp
movsb
mov
sub
repz
push
inc
outsb
xlat
icebp
lret
sbb
xchg
leave
jle
call
and
mov
les
or
popf
sahf
dec
mov
gs
fwait
dec
ja
lret
sbb
xchg
les
aas
stos
pop
inc
sub
mov
dec
or
mov
push
lea
jnp
jg
icebp
pop
add
push
rorb
aam
pusha
imul
adc
pop
ja
or
stos
or
js
add
push
jae
cld
ficoml
mov
icebp
jno
xor
mov
sbb
testb
push
cmc
pop
imul
imul
fbstp
repz
xchg
or
test
pop
aaa
mov
add
cs
dec
cmp
dec
ret
pop
xchg
sub
rcl
lea
popa
mov
loopne
out
jmp
adc
pop
mov
ret
sbb
push
and
mov
inc
push
adc
jge
test
rol
sbb
or
xor
ljmp
aad
or
xchg
mov
stos
orl
mov
sbb
frstor
jecxz
in
xlat
hlt
das
mov
jg
pop
sub
adc
fsub
pop
flds
into
mov
inc
dec
pop
xor
add
xchg
cmpsl
scas
lds
or
fisttps
loope
or
das
lret
mov
fists
mov
add
cmpsl
outsl
push
xchg
mov
inc
xor
sbb
mov
xchg
xor
sbb
jl
cwtl
xchg
loope
inc
roll
push
xchg
and
aad
lret
test
repz
cmp
and
pop
mov
in
or
cmpsl
mov
xchg
adc
xchg
add
pop
pop
into
lret
jmp
add
imul
xor
xor
sbb
mov
int
inc
push
std
mov
inc
jbe
aam
push
fldenv
lods
mov
add
sti
daa
fcoml
sti
mov
pop
cmpsb
sbb
scas
test
dec
mov
cmpsl
sbb
les
xor
inc
xor
aaa
js
lret
xchg
push
add
xchg
das
dec
xlat
jl
inc
inc
and
mov
rcrb
mov
jno
mov
mov
push
push
pop
mov
loope
enter
xor
and
cmp
stos
cmc
sbb
loop
and
cmp
rdmsr
adc
test
test
bound
scas
mov
movsb
test
or
scas
ljmp
pop
je
sbb
sbbb
in
xchg
or
leave
imul
jns
jle
push
push
jge
test
jo
mov
cmc
and
mov
cmp
std
ds
bound
xor
scas
arpl
sbb
in
lods
xor
mov
addr16
push
dec
adc
mov
lret
mov
setne
shll
enter
iret
lret
jb
adc
inc
inc
ret
fs
daa
mov
sbb
loop
xchg
cmc
jno
bound
icebp
push
icebp
aaa
inc
inc
lret
imul
inc
sbb
out
mov
sub
inc
xchg
push
mov
or
insl
fs
loope
adc
out
and
pop
lcall
dec
lods
icebp
jg
dec
mov
imul
jle
jnp
stos
test
mov
xchg
nop
mov
jle
jae
push
rcl
jle
fwait
pusha
cmp
iret
jno
cbtw
movsb
dec
arpl
xor
xorb
push
jne
insl
push
adc
adc
add
add
lock
cli
inc
jmp
and
addl
aad
cmp
fldenv
int3
add
jo
pushf
lds
clc
ss
ja
xchg
dec
dec
inc
xor
stos
movsl
es
jns
jp
adc
mov
data16
sub
cmp
push
frstor
mov
dec
inc
ret
loop
pop
fcoml
popa
leave
cmp
inc
adc
insb
sbb
mov
jbe
ret
jecxz
cmp
int
mov
sbb
dec
sbb
imul
popl
stos
jmp
inc
out
rclb
fs
pushw
sbb
jmp
lcall
dec
jge
push
adc
xor
mov
inc
pop
dec
mov
inc
mov
test
mov
sbb
push
jo
push
call
pop
loop
push
lea
dec
sbb
xchg
inc
inc
pop
movsl
xchg
and
je
test
arpl
cld
insl
push
movsb
push
and
arpl
mov
xor
add
jmp
aaa
add
repnz
arpl
in
stos
sub
jle
popf
lds
sub
xor
js
dec
and
sbb
out
or
jmp
add
cmp
pop
dec
xchg
dec
jae
fiaddl
mov
xchg
pop
scas
insb
pushf
mov
sti
incl
push
and
adc
enter
xor
cmp
xor
les
pop
rclb
cmp
in
sahf
bound
loope
pop
lods
and
adc
inc
daa
cmp
andb
jnp
mov
pop
pop
out
in
scas
adc
aad
sub
pop
inc
and
pop
mov
sti
and
insl
insl
xchg
pop
xor
pop
lea
mov
je
pop
lcall
mov
cmp
movsb
repnz
faddl
jmp
stos
jb
cmp
mov
xchg
repnz
jl
adc
cli
dec
call
jnp
and
jmp
fadds
inc
iret
test
stos
sbb
data16
dec
and
les
mov
aas
pop
jl
cmpsb
or
sub
daa
stc
scas
faddl
int
mov
pop
shlb
stos
orl
stos
sbb
and
push
xor
dec
mov
rcrb
inc
out
cmpsl
jno
push
es
outsb
aas
pop
mov
jge
inc
sbb
cli
popf
mov
jbe
cltd
arpl
and
dec
aaa
add
jne
lahf
loope
push
jnp
popa
dec
out
cmc
xor
and
lret
iret
push
sub
mov
outsl
sbb
jp
xor
inc
mov
mov
jb
gs
test
stos
mov
mov
xadd
ljmp
mov
pop
adc
or
xchg
shlb
addl
xor
rcrb
jecxz
or
cmp
test
jp
cli
gs
insl
xor
jae
ret
lds
loop
xchg
cmp
pop
in
hlt
insb
arpl
ljmp
xor
xlat
sbb
inc
insl
adc
sbb
cmc
inc
cmc
popa
or
adc
mov
and
pop
into
adc
adc
sbb
pop
xchg
push
stos
sbb
jnp
inc
out
dec
or
mov
adc
sub
aaa
scas
insb
add
es
cmpsl
jecxz
enter
dec
mov
mov
mov
daa
xor
sbb
push
pop
xchg
xor
jnp
cmp
imul
jl
negl
pushf
lds
xor
add
ret
adc
push
ja
mull
push
and
pop
stos
mov
sub
outsb
in
ss
mov
dec
mov
jne
repnz
fisubrs
clc
iret
mov
ficompl
pop
push
jb
addr16
imul
sbb
enter
outsl
je
mov
cmp
out
dec
lahf
xchg
sbb
and
hlt
icebp
jne
call
xchg
add
dec
ror
push
cltd
loop
leave
dec
cmpl
les
push
in
mov
ljmp
and
aad
mov
aaa
mov
xchg
mov
and
arpl
sub
sbb
mov
mov
xor
xor
int
adc
popl
in
shll
call
nop
fldcw
mov
out
push
dec
and
jle
and
cmc
out
hlt
ret
cs
andb
xchg
sbb
js
xor
popf
and
out
in
cmp
and
mov
xchg
shlb
mov
repnz
cmp
add
sti
dec
xchg
or
xor
cmp
mov
sbb
adc
mov
cmpsb
cmp
sbb
decb
lcall
fdiv
jnp
pop
fwait
loopne
in
or
shll
mov
mov
cltd
fimull
lds
lods
iret
popa
sub
dec
enter
mov
push
arpl
sti
jne
not
sbb
xchg
insl
out
test
call
jae
clc
sub
push
movsl
mov
pop
xchg
adc
xor
add
push
fnsave
mov
int
insb
je
dec
jge
pop
inc
mov
int
out
addl
into
pop
es
xchg
mov
jne
in
or
xchg
insl
das
sub
decb
shll
mov
sbb
movsb
xor
cmp
mov
xchg
or
pop
lods
das
cld
xchg
mov
jbe
repz
dec
iret
adc
mov
aad
mov
pusha
inc
push
mov
fs
repnz
dec
pusha
in
sub
push
ljmp
icebp
mov
pop
popf
add
movsl
dec
shl
iret
jne
arpl
aas
gs
insl
pop
mov
adc
adc
xchg
insl
sbb
popf
pop
mov
aad
fnsave
cwtl
push
xchg
in
bnd
mov
fdiv
mov
dec
dec
lret
js
inc
fmuls
dec
mov
insl
inc
jae
jp
push
roll
or
iret
daa
push
rclb
iret
cmp
mov
inc
fcomps
imul
xchg
int3
scas
lods
roll
imul
ret
pop
and
lret
mov
jno
addb
aaa
xor
dec
inc
lods
jno
ss
test
pushl
scas
das
sub
les
ficoms
and
adc
add
push
cmpsb
or
int
enter
movsl
xchg
sbbl
loopne
js
scas
out
int
or
dec
nop
fwait
jne
and
sub
adc
mov
xchg
mov
repnz
pop
mov
and
push
fcmovne
jns
ds
cmp
mov
dec
adc
or
fiaddl
mov
shrl
mov
aad
mov
mov
subb
mov
dec
cwtl
fadds
imul
push
and
mov
or
xor
xor
cmpsl
test
popf
jecxz,pt
shlb
in
dec
push
shrl
enter
cmp
and
leave
sub
daa
mov
adc
cmpl
rorb
mov
shrl
mov
xor
push
mov
lret
inc
in
mov
mov
bound
mov
pushf
adc
adc
push
or
cmp
sarl
scas
insl
mov
push
or
xor
fdiv
inc
ret
out
aaa
popa
mov
out
outsl
std
dec
xor
push
push
inc
ds
jge
xor
jmp
sub
sub
popa
mov
in
mov
imul
or
fs
cltd
test
inc
mov
inc
or
or
sti
jl
push
push
inc
add
aad
adc
adc
or
fcomp
xchg
adc
insl
adc
clc
inc
into
pop
or
leave
jnp
in
mov
inc
fcoml
adc
lret
jae
shll
call
repz
cmpsl
inc
inc
cmp
jg
fdivs
addl
mov
lret
push
ss
push
into
outsl
in
mov
mov
lret
fisttpl
push
cmp
xchg
data16
xchg
shrb
xor
cltd
xor
jg
jl
cwtl
sahf
inc
pop
stc
adc
xchg
pop
inc
das
sbb
add
aad
xor
loop
inc
push
mov
call
jecxz
cmpsl
mov
push
or
mov
xor
xor
lods
add
sbb
mov
dec
adc
jecxz
push
inc
mov
jmp
mov
je
jbe
push
mov
das
jmp
andb
mov
pop
and
cs
cmpsl
pop
xor
aad
movsl
je
icebp
mov
rolb
inc
add
leave
jge
mov
sbb
sbb
mov
jns
and
in
repnz
stos
mov
scas
outsl
popa
pop
pop
and
ret
pop
hlt
mov
add
mov
or
jae
pop
push
in
push
loope
pop
adc
or
xor
jp,pt
push
dec
pop
cltd
mov
mov
pop
notl
call
mov
lret
mov
sbb
inc
mov
jo
dec
push
insl
pop
push
ljmp
mov
inc
out
arpl
mov
loopne
push
sub
dec
mov
daa
dec
cmpsb
mov
inc
js
hlt
lds
mov
mov
xchg
movb
xor
cltd
iret
fsubrl
into
xchg
jmp
mov
xor
inc
push
push
jmp
push
roll
mov
lret
xchg
sbb
sti
lcall
movsl
sahf
sbb
loopne
sub
jae
xlat
mov
push
sub
mov
sbb
xor
push
xor
xchg
mov
adc
mov
dec
pop
dec
iret
sti
out
and
fmull
cmp
aad
push
inc
ljmp
adc
adc
xchg
xlat
outsb
fwait
jmp
mov
pop
lret
cmp
jl
loope
arpl
aas
pop
push
mov
adc
cwtl
cmpsl
and
sbb
pushf
pushf
push
iret
push
aad
sub
sub
adc
iret
jo
repnz
lahf
sti
inc
andb
scas
pushf
loop
push
dec
fldl
inc
and
add
and
and
testb
imul
xchg
loope
fstl
pop
xor
pusha
pop
pusha
and
lahf
and
mov
int3
dec
into
sbb
and
mov
roll
xchg
test
insl
sub
std
push
pop
cmp
jl
add
inc
mov
cltd
addr16
cmp
xlat
pop
sub
sbb
push
mov
or
mov
fldt
out
pop
inc
lcall
jmp
inc
repz
cs
mov
loope
xchg
orb
adc
or
inc
hlt
fnstsw
mov
xchg
xor
xchg
orb
xchg
mov
stc
push
and
shl
stc
aam
fdivl
xchg
lcall
out
outsb
dec
mov
xor
sub
dec
add
ror
stos
out
scas
xorl
test
lods
jle
xor
push
call
ret
mov
fisttpl
outsb
mov
cli
std
and
jmp
mov
xor
stos
loope
cmp
mov
xlat
pop
or
leave
or
jmp
xor
adc
dec
repnz
mov
in
xchg
ljmp
jne
rcr
int3
lods
nop
add
cli
lds
mov
dec
and
scas
andl
xorb
repz
xchg
addr16
ja
mov
into
add
jmp
inc
jle
in
jb
stos
xchg
fildl
sub
jle
fdivl
js
lahf
aas
in
rorl
cmc
ret
cmp
lahf
insl
pop
ljmp
in
push
test
js
mov
mov
push
xor
push
xchg
jl
pop
dec
and
rclb
sbb
gs
inc
or
xor
loope
into
jmp
icebp
sahf
loope
mov
aas
out
dec
sarl
adc
xchg
mov
je
xor
cmp
cmp
push
push
aad
xor
call
cmpl
test
cmp
ljmp
enter
jne
jmp
push
movsb
sub
sub
mov
mov
lahf
int
mov
sub
roll
jnp
xchg
sahf
inc
push
mov
cmp
and
or
xchg
das
test
es
ret
mov
aas
pusha
push
xchg
add
pop
arpl
dec
loop
push
xor
sub
mov
add
add
push
inc
pop
pop
arpl
xor
jg
fldcw
dec
shl
lock
sbb
dec
xor
scas
pop
in
iret
in
int
adc
push
jecxz
in
mov
pop
shlb
cmp
call
sbb
test
dec
dec
sti
pop
jb
addl
std
xchg
movsb
cmp
dec
jne
mov
test
mov
je
divl
adcb
mov
shrl
cmp
xchg
and
xchg
or
inc
fidivl
popa
mov
sbb
movsb
pop
sub
mov
cmp
jns
sbb
add
pop
and
stos
loope
in
jae
xchg
ret
jbe
mov
pushl
cld
xor
pop
mov
add
jg
loope
das
xchg
push
aad
cmp
xor
mov
mov
push
stc
sub
sub
aas
and
fidivs
inc
inc
or
js
data16
push
jmp
mov
cld
mov
xor
and
out
stos
adc
xchg
nop
mov
fnstenv
or
fld
inc
add
push
mov
repnz
lcall
mov
jae
es
jno
jnp
div
push
push
xor
stc
sbb
pop
sub
mov
dec
inc
sarb
xchg
sub
cmc
andb
rcll
insl
cld
and
push
sub
cs
dec
fidivs
adc
and
cmpsb
push
jb
outsb
aam
mov
mov
fsubl
pop
push
in
pop
in
insb
mov
cmpsb
sub
dec
int
xchg
inc
pop
dec
daa
fcmovnbe
push
shlb
scas
insl
sub
jns
xor
es
lahf
ret
imul
mov
sub
lods
inc
in
sub
test
lcall
out
or
lock
cmp
movsl
fistpl
inc
aam
mov
fwait
mov
call
jae
or
or
cltd
and
push
ja,pt
test
aaa
in
imulb
addb
std
jns
push
push
in
dec
mov
mov
mov
jg
les
mov
aaa
sub
mov
pop
cmp
fimull
in
lahf
mov
and
add
mov
jp
jno
add
dec
xlat
and
jnp
lds
add
movsl
daa
loop
add
mov
stos
or
dec
pushl
lret
mov
vshufps
iret
stos
fisttpl
pop
stos
add
mov
mov
inc
xlat
fcoms
jns
pusha
sub
jns
popf
outsb
sub
faddl
mov
leave
les
lods
mov
jecxz
mov
xchg
nop
dec
xchg
mov
rcll
std
scas
jmp
test
push
negb
test
jle
inc
inc
cwtl
or
in
mov
xor
out
push
das
or
mov
cs
out
sahf
rclb
daa
xorl
dec
xchg
lret
jmp
clc
dec
adc
push
movsb
sub
rorl
aad
test
bt
xor
or
add
ljmp
lock
fsubrs
xorb
into
jb
test
aas
push
xor
push
shrl
cli
shlb
adc
lret
and
push
push
sub
pushl
add
and
pushl
jecxz
jno
pop
mov
mov
pop
aam
add
inc
fadd
out
adc
mov
int3
add
mov
jge
xchg
enter
mov
shlb
iret
pop
jnp
and
xor
push
test
push
add
mov
pop
and
dec
mov
sbb
push
jne
scas
jp
mov
into
outsb
ljmp
xchg
lahf
sbb
fimuls
imul
outsb
mov
and
mov
clc
int3
dec
xor
adc
pop
lcall
lods
movsl
push
ljmp
dec
pushf
lods
jno
int3
lcall
sbb
shr
xchg
inc
cmc
cs
stos
sbb
lea
pusha
add
outsl
sahf
shl
jae
jmp
inc
ds
hlt
pop
dec
mov
xor
fucomp
and
testb
js
int3
je
dec
sti
imul
cs
cmc
shlb
shr
nop
mov
push
out
push
cmp
and
adc
push
cs
mov
inc
test
jne
loopne
inc
loopne
mov
push
mov
cli
adc
ljmp
adc
rcll
in
and
das
aas
xor
sbb
mov
out
mov
and
inc
jge
mov
jo
jbe
test
pop
cwtl
fwait
pop
push
rcl
sub
hlt
inc
fstpl
adc
ret
mov
js
out
out
or
xor
mov
xchg
rcrb
inc
sbb
jbe
nop
xchg
fildll
call
mov
mov
sarb
roll
sbb
jae
je
pop
mov
mov
pop
sarl
mov
inc
pusha
jecxz
mov
mov
and
dec
dec
movsl
movsl
in
mov
divl
mov
cltd
das
repnz
jns
inc
movsl
jp
scas
adcb
aam
mov
xchg
subl
je
xchg
push
adc
dec
ss
imul
push
mov
loope
loop
in
push
iret
js
inc
xor
jns
xchg
sub
insl
jp
add
inc
xchg
mov
mov
lsl
mov
and
inc
or
add
fisttpll
xorb
cmpsb
mov
adc
sti
hlt
int
test
jno
and
ljmp
rolb
cmp
shl
xor
stos
lret
xchg
sbb
call
mov
dec
adc
das
pop
jne
add
pop
add
adc
mov
dec
xchg
ret
std
test
mov
gs
mov
std
loop
lahf
ret
pop
mov
pop
addr16
pop
rcrb
adc
adc
sub
lea
fiadds
cld
adc
stc
adc
mov
jne
sbb
mov
and
fnop
push
outsb
push
insl
dec
mov
test
clc
push
shll
mov
outsb
adc
addl
in
or
inc
test
push
jl
les
cld
into
or
mov
insl
or
in
stc
adc
idiv
lret
push
xchg
push
xchg
mov
lret
push
aad
sbb
mov
out
call
int
sub
dec
nop
sbb
in
imul
or
xchg
jmp
adc
mov
hlt
jecxz
pushf
scas
jns
xor
xorl
cmp
shrb
xchg
mov
outsl
lea
and
mov
clc
mov
add
lret
push
fsubs
inc
test
je
cmpsb
pop
notb
inc
inc
das
sbb
xor
jbe
out
push
jbe,pt
push
jmp
test
cmp
pop
enterw
shrb
std
add
loope
mov
aad
mov
xchg
clc
adc
shlb
adc
inc
in
pop
cmp
inc
dec
sahf
out
pop
out
push
or
inc
sbb
inc
ja
popa
fisubrs
mov
sub
mov
sub
push
jmp
pushf
cmpsl
enter
or
and
je
dec
test
in
xor
enter
cmp
xchg
cmc
sub
sub
enter
pop
jecxz
cld
mov
fstpl
test
and
push
xchg
push
outsb
popf
or
fld
or
mov
xchg
cmp
xor
lods
cmp
mov
or
in
push
mov
dec
xchg
fcoms
mov
push
arpl
adc
fildl
add
push
inc
cmpsl
push
pop
mov
mov
sbb
mov
cmp
dec
movsb
jecxz
jg
cmc
xlat
leave
fwait
mov
add
dec
mov
cmc
out
repz
push
jmp
pop
jno
xchg
push
push
shlb
ljmp
adc
push
mov
cs
inc
lds
sub
int3
ret
adc
pop
pop
jle
jb
cwtl
lea
sub
pop
dec
mov
push
rol
lods
xchg
and
ss
neg
and
and
jle
jo
xor
sub
sub
mov
enter
sub
dec
add
scas
adc
adc
and
add
fxch
sbb
punpckhbw
pop
or
sub
mov
xor
ds
rclb
insb
fcomps
cli
int3
lea
xchg
dec
ret
ljmp
and
je
mov
test
movsb
xchg
out
scas
xorl
jbe
mov
outsb
pop
mov
cs
xchg
daa
in
stc
push
mov
clc
movsl
dec
dec
jb
adc
mov
das
mov
xor
sbb
mov
bnd
cmpsl
pop
jno
pop
leave
aaa
adc
stos
sub
int
movsb
adc
loopne
jbe
out
pop
mov
sbb
sub
leave
stos
and
jns
xchg
or
sarl
sbb
pop
popf
dec
xchg
cli
nop
xchg
popa
das
and
int3
jno
adc
test
std
cli
sub
add
insb
adc
sbb
pop
call
fwait
add
out
in
cltd
jp
jg
mov
sbbb
lcall
dec
in
hlt
lahf
popa
test
push
pushf
cmp
insl
sahf
mov
mov
cmpsb
int
aaa
js
xor
jmp
jb
cltd
addl
cmp
fcmovnb
or
jnp
out
lock
test
daa
sbb
jl
cmp
loope
adc
cld
outsl
insl
dec
adc
xchg
mov
repz
mov
lcall
pushf
push
mov
dec
lods
jmp
mov
fcmove
jae
mov
repz
dec
jno
push
gs
mov
call
xchg
push
push
sti
out
or
lods
pop
std
les
dec
repnz
ja
psubq
fidivs
lret
rcrb
xor
rorl
in
das
mov
aaa
je
xor
pop
mov
stc
cmp
cmp
or
ds
push
out
mov
int3
and
and
or
lea
ret
inc
cmc
popf
bound
mov
lcall
inc
cmpsl
lret
test
add
scas
hlt
rcrb
nop
mov
or
mov
dec
scas
sahf
cmp
pop
rcrb
arpl
sbb
or
sub
xchg
xchg
adc
mov
pop
enter
pop
in
adc
mov
jnp
jb
adc
dec
mov
mov
andl
add
adc
sarb
lock
jp
enter
xor
cmpsl
lods
popa
fsubs
movl
or
loope
add
shrl
cmp
cmpsl
cmp
into
inc
xor
mov
arpl
aam
call
pop
jo
add
pop
mull
das
leave
bound
and
inc
sub
frstor
add
sub
adc
push
pop
xlat
sub
mov
ss
sbb
in
dec
xchg
or
inc
iret
mov
adc
outsl
shll
and
fldl
cmp
test
in
xor
test
mov
xchg
adc
cltd
iret
mov
fsub
mov
loop
gs
in
cmpsb
out
adc
sub
popa
push
xor
cmc
loopne
push
mov
in
push
ja
fadds
dec
jo
pop
mov
fsubr
and
or
shrb
cmp
push
das
xor
mov
lea
inc
pusha
call
fidivrs
in
js
push
or
movl
in
mov
insl
push
movsb
stos
xor
xchg
sahf
or
cli
inc
mov
lret
xchg
push
sub
aad
mov
lea
jle
test
fcomip
stc
adc
das
cltd
data16
cli
push
aas
and
insl
bound
cmp
addl
mov
popa
mov
mov
in
adc
inc
pop
inc
inc
mov
inc
out
call
clc
ljmp
das
push
mov
sbb
jmp
mov
sub
jl
jns
lret
iret
inc
mov
pop
xor
adc
sbb
jecxz
fadd
adc
sbb
or
sbb
lds
out
js
out
test
outsb
pop
jnp
repz
mov
adc
pop
pop
push
push
sbb
mov
adc
out
jb
xchg
scas
rorb
test
or
inc
push
push
out
outsb
mov
mov
dec
pop
jle
stc
sub
adc
push
dec
outsl
imul
loopne
adc
lods
xor
movsl
imul
lret
adc
or
sub
jg
xchg
pop
xor
inc
insb
in
adc
cmp
in
sub
lret
pop
mov
jecxz
mov
icebp
and
dec
lret
xor
imul
ljmp
test
and
and
and
je
mov
pop
fnstsw
dec
adc
into
cmpsb
jns
ss
xchg
sub
inc
ret
mov
mov
pushf
sbb
sti
jl
pop
dec
push
jle,pt
scas
or
leave
je
inc
mov
mov
or
test
ds
outsb
ret
cmpsb
daa
inc
bound
stos
aad
xor
pop
xchg
in
mov
push
mov
jno
inc
jg
int3
fimuls
inc
addr16
cmp
xchg
xor
fisubs
xlat
rcrl
rclb
mov
orb
loope
ljmp
loop
mov
movsb
mov
mov
push
push
jo
lret
mov
icebp
pop
cld
and
int3
decb
push
jno
pop
push
out
sbb
push
movb
sbb
mov
aas
push
in
int
out
sbb
repz
loop
outsb
pusha
jbe
adcl
out
cmp
les
xchg
jb
gs
jle
test
xchg
bound
pop
xchg
mov
dec
mov
das
jecxz
scas
popa
es
lcall
aam
mov
push
mov
addb
cmpsb
push
int3
pop
mov
or
call
sbbb
scas
pop
sbb
mov
xor
mov
dec
outsl
sbb
push
dec
pop
shrb
mov
xor
mov
sbb
sub
inc
or
adc
push
and
hlt
pop
push
aas
cli
arpl
mov
outsl
mov
mov
mov
mov
sti
fldcw
repnz
fcompl
ds
adc
std
in
mov
enter
mul
popf
xor
cmpsb
insb
sbb
push
fwait
jno
mov
cmp
in
fidivrs
mov
and
xchg
mov
out
add
push
push
xchg
incl
sbb
mov
xchg
sti
adc
cs
stc
int
loope
je
int
cld
sar
cld
and
jp
fwait
addr16
fists
cltd
bound
cltd
int3
jmp
nop
lods
pop
daa
dec
mov
mov
rorb
cmp
mov
jg
aaa
mov
mov
xor
ljmp
fmulp
adcb
pop
sbb
xchg
fcomi
mov
add
and
movsb
inc
dec
out
push
lock
daa
push
popf
lds
inc
movsl
sub
sub
iret
loop
push
test
adc
cmp
and
push
ret
lret
stc
adc
cli
mov
sbb
sub
mov
or
inc
or
add
pop
sahf
push
nop
out
adc
pop
popa
into
mov
push
shr
lds
mov
mov
mov
repnz
mov
or
das
mov
dec
arpl
sbb
mov
fistl
test
dec
push
push
sbb
mov
jle
lea
xchg
xchg
ficompl
movsb
xor
mov
mov
out
add
xlat
jns
jb
aam
leave
insb
inc
ja
push
das
push
xchg
fsub
insl
cmc
ja
cwtl
iret
in
clc
outsb
sbb
sbb
inc
adc
add
cmp
mov
ds
cltd
mov
mov
dec
hlt
js
cmp
fstl
insb
and
mov
subb
push
adc
xor
jns
test
dec
push
pop
addr16
pop
or
jecxz
fmull
subb
hlt
jnp
invd
out
add
mov
mov
imul
leave
add
and
xor
scas
and
add
in
je
jno
popf
inc
mov
pop
stos
out
cmpsl
dec
addr16
xor
ljmp
adc
adc
jbe
pop
mov
arpl
sbb
add
int3
repnz
jb
fldcw
iret
mov
mov
movsb
inc
aaa
xor
notl
add
xor
aam
adcb
imull
cmpsl
dec
stos
dec
dec
add
add
sub
test
fisttps
in
aas
mov
pop
add
adc
inc
mov
movsb
sbb
dec
mov
sbb
movsl
stc
xor
imul
dec
lret
inc
lods
adc
stc
stc
cmp
stos
push
int
xchg
daa
movsb
lcall
mov
cmp
movsb
sbb
mov
xchg
shlb
and
cmp
push
test
inc
xchg
jmp
andl
lret
xlat
gs
add
es
cs
cmp
sbb
mov
push
mov
jae
lret
dec
push
jbe
xchg
in
inc
and
scas
insl
subl
mov
dec
and
inc
mov
sarb
test
sub
lret
repz
jl
js
add
inc
lock
pop
jno
jnp
pop
fistpl
xor
xor
sbb
xor
loop
jae
add
pusha
lods
outsl
and
aas
sub
call
inc
pop
add
rolb
push
std
inc
jns
arpl
sarb
mov
in
sti
pop
lods
lcall
mov
lods
jb
icebp
sbb
mov
jo
iret
out
fcmovnb
or
cmp
push
sbb
cmp
lods
das
push
add
and
loop
mov
loopne
cwtl
jge
pop
test
and
imul
mov
lret
adc
mov
jmp
loop
dec
jecxz
and
imulb
sub
pop
fwait
push
xchg
insl
dec
push
lcall
sahf
je
mov
push
jl
mov
imul
mov
push
add
pop
xor
pop
arpl
int3
jno
sarl
inc
shl
or
inc
fstl
pop
lods
ret
push
out
and
adc
cmp
movsb
cwtl
sbb
gs
xchg
sub
js
outsl
cmp
stos
pop
add
cmp
js
mov
mov
int
icebp
jbe
and
xchg
in
push
stos
mov
inc
lock
subl
or
jle
add
nop
sbb
or
pop
jle
test
iret
lds
lcall
insb
dec
mov
cmp
mov
repz
iret
mov
mov
xlat
fists
shrl
and
jne
ficoms
sbb
sbb
pop
inc
xchg
jmp
pop
or
mov
mov
fwait
jl
adc
xlat
push
addb
xor
adc
test
xor
mov
push
mov
add
xor
pop
imul
inc
mov
cld
push
addr16
xor
cs
and
mov
push
adc
add
adc
scas
inc
fiaddl
daa
rcll
addl
aas
sbb
daa
loopne
sarb
cmpsl
or
scas
in
inc
notl
sub
cld
imul
mov
stos
sbbb
repz
int3
sub
add
jl
fiadds
clc
xchg
push
leave
pusha
faddl
pop
mov
pop
and
jmp
aaa
test
lods
cmp
jl
pcmpgtw
insb
test
fsubrp
xchg
stos
and
or
mov
jno
sti
aam
and
fistps
add
test
and
inc
sub
ljmp
sbb
and
xchg
or
out
pushf
sub
or
lea
jp
scas
mov
jnp,pn
or
sahf
push
and
mov
sbb
shr
ljmp
push
fadds
stos
inc
jecxz
cmpb
rcl
iret
sub
clc
lret
jb
jp
in
jb
inc
fistps
call
push
imul
rcr
es
adc
pop
pop
push
enter
or
pop
out
xchg
aam
add
lahf
ljmp
shlb
xor
xor
add
es
sbb
cmc
sbb
mov
sahf
scas
jmp
xchg
cmp
jne
add
mov
fbstp
and
pushf
jns
xchg
sbbb
ret
adc
push
cli
scas
jnp
sbb
add
subl
sub
ljmp
and
lea
aad
and
inc
jge
subl
lcall
adc
cmpsl
in
ljmp
xorb
lahf
pop
int3
mov
std
in
dec
inc
jge
push
sub
cmp
test
mov
mov
and
popa
scas
jmp
int
adc
add
push
into
add
mov
cmp
adc
mov
pushf
int
mov
int
adc
mov
inc
negl
sti
or
cmp
inc
xor
xor
jns
xchg
es
mov
add
dec
ret
fwait
imul
mov
mov
ss
fnsave
xchg
jno
ja
mov
add
ljmp
mov
jne
addr16
mov
jb
mov
mov
or
dec
jno
repnz
push
push
mov
ja
and
repnz
in
test
mov
mov
sbb
lret
push
orb
in
je
sub
pop
mov
or
cmp
add
mov
out
gs
fwait
insb
loopne
popa
pop
into
enter
adc
mov
sbb
or
ret
jae
cmp
les
stc
into
jns
add
repz
repz
into
fstpt
jo
stos
mov
or
ds
push
test
dec
xchg
leave
cli
mov
mov
cld
mov
iret
repz
xor
jl
idivb
test
daa
mov
insl
xchg
push
inc
xchg
push
cmp
adc
or
aas
inc
andl
fbld
enter
adc
ret
pop
add
and
popa
sbb
sub
pusha
cmpsl
addr16
sub
out
mov
push
ud2
aas
and
mov
jbe
inc
jge
aas
into
popa
xchg
adc
or
cmp
iret
mov
cmp
in
movsb
imul
dec
xchg
and
stc
cli
dec
cltd
scas
ficoml
or
and
pusha
lods
xchg
out
ljmp
test
das
inc
cmp
cmp
es
cmp
sub
xchg
xchg
andl
xchg
sti
and
sahf
and
and
popl
nop
inc
push
test
icebp
add
push
adc
sub
clc
imul
mov
sub
jnp
dec
insb
cwtl
jno
mov
insl
shl
arpl
mov
inc
test
push
pop
rol
insb
xor
idivb
inc
bound
call
fcomps
leave
xchg
insb
xor
rcrl
cld
nop
arpl
or
lahf
mov
mov
in
pop
lret
insb
shrl
ds
mov
js
cwtl
xacquire
jecxz
ret
rorb
and
inc
ret
push
add
mov
xor
in
shll
adc
out
shll
dec
sbb
lock
push
xchg
fldcw
cmpsb
push
cmp
in
nop
lret
xlat
push
mov
push
test
pop
dec
inc
mov
pop
push
jle
scas
mov
into
push
ret
pop
or
in
pop
xor
sti
sub
in
cmpb
xlat
jmp
call
push
icebp
dec
xor
mov
mov
sbb
add
dec
xchg
xchg
mov
call
sub
lahf
fcmovne
rep
pop
add
rcrl
xlat
into
lret
xchg
sub
rclb
mov
lods
adc
stc
clc
mov
sbb
or
jno
popf
cmp
xor
ljmp
lcall
lret
and
mov
lret
add
ret
or
ret
repz
dec
mov
repz
frstor
push
inc
mov
fwait
push
ret
cli
fadds
mov
std
repnz
add
pop
das
mov
adc
xchg
mov
mov
and
and
cwtl
fists
push
stc
cli
mov
push
es
lods
fwait
mov
rcrl
pushf
shrb
mov
mov
leave
add
lods
pop
pusha
mov
jg
mov
pop
mov
test
std
loopne
lds
and
sbb
ret
pusha
imul
mov
fdivr
pop
xorb
std
sti
dec
aaa
or
xlat
mov
mov
jns
test
ret
mov
lret
fyl2x
int3
mov
stos
cmp
in
and
cmp
dec
enter
sub
aas
add
ret
cwtl
mov
faddl
pop
icebp
push
adc
mov
lahf
std
pop
mov
in
hlt
ds
ret
sbb
pop
inc
cli
mov
lret
arpl
adc
pop
xor
test
jns
xchg
adc
mov
add
aas
pop
add
push
aad
add
add
adc
jg
and
xchg
mov
fdivrs
out
dec
out
mov
js
std
stos
test
arpl
out
mov
iret
enter
int
sti
ds
repz
sub
cwtl
dec
pop
movsb
pop
test
add
push
repnz
pop
cmpsb
inc
imul
cmp
je
mov
push
je
mov
leave
in
sub
pop
mov
cmpsl
sbb
jl
xchg
push
pop
jae
lret
cld
mov
out
and
xchg
insb
icebp
je
or
jb
movzwl
es
sahf
inc
outsl
dec
dec
insl
pop
nop
jns
or
adc
push
cmc
js
mov
les
and
dec
ss
call
adc
neg
rcrb
int
jae
std
sbb
fcomip
jmp
cmp
dec
xchg
dec
cmp
stos
cmp
jg
std
pop
cwtl
sti
ficoml
push
adc
xchg
xchg
add
inc
int
fwait
ljmp
sbb
sub
inc
das
dec
pop
or
lret
sbb
mov
scas
lods
lret
aas
dec
adc
jne
mov
inc
aas
rcll
repnz
aam
addl
xlat
fwait
insl
fstpt
jge
sti
inc
mov
pop
sbb
and
mov
pop
lods
mov
push
sub
iret
bound
mov
push
mov
roll
pop
in
fs
xor
mov
sub
rorl
data16
pushf
aam
es
adc
dec
jbe
lcall
pop
scas
mov
dec
mov
outsl
dec
lea
add
mov
mov
repz
jge
jle
cli
rcll
adc
push
scas
hlt
ds
lahf
movsl
jae
pop
jno
clc
test
clc
std
adc
inc
das
call
xlat
rorb
ret
lcall
xchg
stc
int
lea
push
jno
je
jae
xlat
imul
cs
leave
pop
sbb
jmp
movb
xor
jmp
test
fldcw
xor
dec
push
lahf
out
push
mul
mov
mov
jp
movsl
push
mov
jbe
push
cmp
cli
pop
inc
cs
push
and
jne
mov
stc
xchg
mov
ficoms
call
jg
inc
adc
stc
pop
test
stc
lds
cld
ljmp
aas
push
cltd
adc
mov
xor
pop
lods
adc
mov
mov
stc
out
sub
dec
int
xlat
xchg
call
inc
es
ljmp
test
push
stos
xchg
cmpps
mov
arpl
and
jae
cmp
aad
cmpsb
mov
lcall
pusha
cmp
mov
aam
sti
dec
inc
mov
icebp
int
add
mov
popa
add
xor
push
fistl
pop
jg
add
mov
dec
ret
lods
mov
push
in
lret
add
push
inc
movsb
test
cmpsb
jnp
inc
and
dec
add
repnz
push
rorl
sahf
jecxz
lahf
arpl
pop
cmpb
jnp
out
mov
xor
hlt
cmp
aas
inc
negb
movsl
sub
sbb
and
add
dec
pop
daa
sub
cld
dec
mov
mov
aaa
into
insb
pop
mov
add
rcr
mov
je
stc
or
fwait
aaa
ds
mov
lahf
aas
lea
mov
or
mov
mov
cmp
mov
fs
mov
mov
mov
or
sti
or
divb
xchg
jle
xor
xchg
push
adc
adc
arpl
fcoms
aad
cmp
aam
xchg
push
aad
in
into
dec
rcrb
or
out
loop
cmp
cwtl
sbb
push
mov
add
or
jmp
shl
aaa
outsl
cltd
scas
xchg
inc
mov
jae
lret
in
dec
pop
and
fiaddl
sub
xchg
add
jge
mov
js
mov
inc
dec
stos
aaa
sub
cld
jg
or
popa
xchg
lock
fsubp
xor
cmp
jo
mov
dec
add
outsl
fs
dec
mov
jb
pop
xor
cmpsl
pop
into
mov
test
mov
sub
ret
mov
repz
or
lret
xchg
ficoml
inc
inc
in
cmpsb
push
hlt
out
ljmp
pop
dec
rcrl
inc
mov
pop
and
je
jne
pop
hlt
push
mov
sbb
popa
dec
movsb
ds
stos
jmp
shll
cltd
sub
xchg
jecxz
cmp
dec
fcoms
test
lock
popa
add
cwtl
in
std
imul
or
aaa
nop
imul
adcb
adc
jl
add
out
mov
xor
test
adc
je
push
mov
inc
imul
sub
sahf
test
adc
popa
dec
fs
fcomps
lahf
dec
mov
add
mov
add
mov
rclb
subb
jo
cmc
mov
out
cmp
mov
cwtl
inc
dec
mov
jo
inc
xchg
xchg
mov
test
jl
or
mov
dec
dec
repnz
xchg
mov
mov
scas
sbb
jmp
imull
mov
xchg
ud1
or
cwtl
iret
mov
mov
or
lcall
lcall
mov
sahf
dec
movsb
out
and
int3
add
lret
push
mov
and
bound
xchg
or
pop
dec
cmp
ror
shrl
fbstp
sub
fdivrl
mov
adc
or
pushf
mov
ja
mov
xor
and
hlt
inc
push
in
jmp
dec
loopne
ret
mov
jbe
lret
add
xor
addl
data16
imul
pop
or
popf
lahf
fwait
ret
je
inc
push
shrb
or
aaa
outsb
sub
cmc
not
xchg
mov
push
jg
inc
xlat
xchg
mov
sub
jle
inc
cmp
push
mov
jb
mov
lea
jnp
mov
sbb
cmp
pop
lods
mov
cmp
jp
jmp
adc
add
push
pop
fisttpl
cli
mov
or
fisttps
outsl
fwait
push
andl
in
or
dec
js
in
jp
mov
xlat
repnz
add
cli
mov
test
ret
sub
test
mov
mov
xor
xchg
daa
and
cmp
sbb
inc
push
inc
mov
adc
sub
sbb
lret
rcrl
mov
jns
sti
pop
ret
sti
mov
mov
in
push
xor
jnp
sub
inc
das
push
iret
loope
inc
stos
mov
lret
popa
mov
out
mov
imul
test
sub
xchg
or
sbb
mov
xor
xchg
cld
xchg
push
jbe
pop
fwait
push
inc
and
aas
cmp
dec
xchg
movb
out
adc
pop
ss
pop
pop
or
and
in
push
mov
and
adc
daa
dec
outsb
iret
xchg
push
mov
test
into
ffreep
outsb
add
cmp
repz
and
mov
lock
stc
ret
ss
clc
int3
dec
pusha
mov
inc
adc
ljmp
add
daa
sbb
xchg
adcl
or
aad
adc
fisttpll
test
shlb
filds
mov
arpl
xor
loopnew
sahf
lret
addl
xor
call
addb
mov
adc
lcall
mov
add
xor
imul
lcall
sub
iret
mov
jmp
mov
js
in
iret
cmpsb
jecxz
in
adc
pop
mov
xor
inc
inc
mov
popa
jmp
aad
pop
pop
ss
pop
xchg
and
push
shrl
pop
adc
ret
fwait
repnz
repz
xor
jnp
repz
jmp
cmp
pusha
dec
iret
sbb
addr16
inc
dec
lods
nop
push
push
lcall
inc
mov
andnps
jnp
rorl
cmc
and
mov
movsl
xchg
mov
ljmp
xor
lcall
sahf
shl
xlat
adc
and
pop
movsl
cltd
inc
rcrb
cmp
cmp
cli
call
aas
daa
inc
sbb
add
js
sti
inc
in
in
fbstp
push
aas
pop
dec
cli
pushf
addr16
jge
push
and
sbb
mov
push
orb
mov
popf
push
mov
lcall
shr
sbb
test
or
out
ja
test
stc
adc
flds
and
movsb
outsb
adc
ret
stos
ja
xor
jle
xlat
or
mov
mov
lea
xchg
adc
ljmp
orl
dec
add
int
jns
add
inc
xor
fsub
xchg
jge
fimuls
jp
push
push
push
jns
and
in
cmp
test
call
or
mov
shl
mov
outsb
push
aad
bound
mov
pop
pop
out
jp
or
xchg
out
fmuls
lods
dec
dec
data16
fisubrs
stos
insb
and
into
leave
dec
push
les
rcrl
arpl
xchg
dec
int3
adc
push
add
mov
mov
mov
out
into
push
loop
popa
jbe,pn
lret
adc
jle
out
jo
pop
mov
mov
jp
and
movsl
je
fists
nop
inc
es
repz
xor
in
xor
insb
cmp
add
cmovo
jne
push
or
mov
push
stos
push
fidivrl
mov
push
pop
sahf
inc
subb
xchg
sbb
lea
icebp
out
or
add
mov
ja
loope
jecxz
cwtl
xor
push
icebp
sub
jecxz
mov
hlt
mov
sub
cmp
pop
mov
cmp
in
add
adc
inc
scas
cwtl
and
leave
xor
or
cmp
stos
pop
lret
movsb
fnstcw
popa
popa
add
add
loope
les
stc
shl
inc
pop
mov
bound
xchg
aad
fs
cmpsl
jno
or
cltd
cmp
dec
jae
xchg
mov
xlat
in
or
iret
sti
jmp
das
daa
mov
test
imul
rcrb
push
stos
divl
mov
or
cs
push
lock
dec
ljmp
scas
mov
mov
es
inc
xchg
aam
adc
dec
je
lahf
filds
xor
add
add
fdivl
in
ja
std
xor
mov
pop
xor
mov
add
test
mov
call
fdivs
or
push
push
sub
mov
nop
jb
in
jno
mov
cmpsl
push
or
mov
add
xor
fwait
enter
jge
add
xchg
es
ljmp
imul
jmp
or
and
dec
mov
orb
sub
addb
mov
jecxz
std
jge
add
cmp
insb
fsubp
pop
jle
dec
add
out
pop
inc
clc
inc
inc
or
sti
and
test
lcall
xorl
add
push
or
popf
mov
call
sbb
pop
test
push
sub
or
sub
adc
aad
xchg
fimull
sub
or
mov
fistps
jne
pop
mulb
mov
mov
arpl
nop
out
out
pop
and
xchg
sub
push
dec
fwait
arpl
inc
bound
mov
push
pop
in
pop
cmpl
mov
loope
arpl
aad
push
fldl
enter
rcrl
shl
push
jl
cmpsb
lods
xlat
lods
fs
inc
testb
mov
inc
jne
or
inc
iret
xchg
cs
or
cmp
test
gs
inc
in
cmp
lret
outsl
jo
popa
push
sbb
rcr
enter
rcrb
jp
mov
cmc
dec
and
jmp
cmp
or
into
mov
add
or
je,pt
cmc
popf
push
push
mov
jns
dec
sarl
call
movsl
mov
bound
ljmp
outsl
sub
dec
sub
cmp
in
cmp
sbb
cmp
and
clc
out
or
sbb
xor
lock
and
xchg
sbb
in
xchg
fistl
push
imul
pushf
push
ror
cmp
repnz
pushf
and
fildll
mov
and
loop
cmpsl
pop
push
ds
shl
dec
or
mov
push
sub
in
mov
pop
xor
sub
aas
aad
lods
adc
push
les
mov
std
je
sbb
cmpsb
rorb
mov
jmp
jb
xor
sbb
push
out
lea
add
xor
out
cltd
push
aaa
test
mov
pop
in
adc
in
scas
mov
or
cmp
mov
cmp
mov
dec
jbe
fwait
bound
jb
adc
inc
cmp
inc
push
sbb
mov
mov
fnstcw
jecxz
lret
pusha
sbb
inc
scas
push
jle
add
pop
ja
xchg
add
jae
fcoml
add
rcrb
mov
int
shll
or
jg
sub
push
aaa
mov
ret
in
in
add
fmulp
adc
or
or
outsl
pop
dec
push
mov
inc
andb
jbe
cmp
mov
xor
push
adc
in
loopne
xor
inc
mov
mov
lea
daa
cwtl
lea
mov
inc
xchg
imul
cmp
dec
dec
sbb
stos
mov
sbb
movsl
mov
push
add
xor
mov
roll
or
mov
pushf
sbb
ret
das
mov
je
adc
mov
ret
and
cli
cltd
jecxz
mov
sbb
sbb
sub
scas
mov
in
mov
or
jecxz
lcall
pushf
dec
push
cwtl
lcall
xor
push
stc
pushf
pop
sbb
mov
adc
lea
mov
aam
mov
sbb
mov
xorl
add
xor
sbb
push
into
pusha
and
jns
mov
mov
cs
mov
mov
pop
pop
ret
add
and
push
jl
lock
dec
in
mov
mov
cltd
xchg
push
and
nop
repz
lahf
sahf
add
and
popa
into
fsts
mov
outsl
cwtl
adc
add
pop
loop
imul
loop
aas
fildl
lcall
shlb
cmp
mov
in
dec
arpl
out
sbb
daa
jns
inc
or
pop
ror
lds
lahf
lds
rcll
in
clc
pop
aas
pop
out
dec
mov
mov
inc
aaa
loop
cmp
arpl
loope
push
insb
into
jmp
push
ljmp
inc
adc
add
movsl
jo
cmp
jbe
test
xchg
in
add
into
mulb
and
fimull
imul
call
mov
inc
pushw
cmp
push
lds
dec
adc
fmull
mov
jmp
lods
inc
cli
pop
inc
sbb
rclb
xchg
jnp
jno
mov
pushl
stos
mov
iret
test
and
mov
popa
push
lahf
xchg
test
xchg
cli
adc
mov
inc
out
mov
add
je
adc
das
es
sub
out
push
das
negl
mov
ss
divb
aam
mov
cmp
mov
imulb
ss
shrb
insl
xchg
mov
mov
add
fistl
into
pop
idiv
cmp
xchg
mov
dec
cltd
daa
or
mov
sbb
int
lds
push
mov
rcrl
sub
push
jecxz
push
mov
testl
cld
iret
mov
or
and
iret
sbb
sbbl
push
mov
test
aas
or
cmp
inc
popf
xchg
sbb
shrb
sahf
xchg
imul
mov
pushf
cmp
mov
xor
jmp
inc
xchg
divb
stos
int
adc
xor
imul
int
inc
adc
cmpsl
dec
pop
push
daa
insb
mov
jnp
pop
lahf
xlat
push
lcall
andb
push
push
rcr
adc
inc
stc
xchg
push
in
mov
movb
test
dec
add
dec
add
add
dec
mov
fcoms
adc
stc
adc
xor
xchg
mov
leave
stc
sbb
loopne
cltd
ja
jecxz
sbb
jnp
xor
push
js
xchg
fimull
mov
jne
rorl
pop
xlat
cmc
mov
xchg
aas
shll
cmpsb
or
sub
mov
fcompl
test
mov
mov
pushf
lahf
lods
fabs
in
jbe
mov
inc
nop
add
cld
ss
sbb
aas
insl
lcall
out
out
ret
jl
aas
dec
sbb
jle
data16
aad
test
push
in
jecxz
push
shr
jecxz
or
add
inc
xor
lcall
push
or
mov
faddl
sub
outsb
orl
adc
nop
pop
mov
pop
lret
mov
rcll
mov
mov
add
adc
mov
in
pop
icebp
jmp
inc
inc
mov
jns
mov
inc
icebp
inc
dec
push
ds
pushf
arpl
jnp
mov
dec
pop
push
sub
mov
outsl
and
push
pop
out
jb
rcll
dec
out
jae
pop
fsubrl
mov
leave
loope
push
movsb
sbb
push
stos
out
sarl
addr16
adcl
adcl
test
dec
pop
mov
push
inc
mov
insl
loop
inc
cwtl
xchg
adc
and
lods
xchg
repz
dec
aaa
push
fdivrp
das
sbbb
fisttpll
add
ds
out
stc
xchg
ficoms
inc
xor
es
in
test
add
les
and
adc
xor
push
imul
ljmp
test
mov
mov
xchg
cld
mov
in
jg
xor
out
dec
adc
lock
nop
jo
mov
jb
jmp
pop
sbb
test
cmp
mov
xchg
mov
or
fdiv
stos
stos
mov
sar
mov
push
and
bound
mov
xchg
cmc
mov
sbb
mov
data16
fs
lret
push
inc
inc
jle
cmpsb
mov
mov
jno
jl
ds
and
sti
mov
cmc
hlt
push
mov
push
sbb
orb
pushf
rcrb
outsl
cmpl
inc
mov
and
in
gs
mov
dec
jae
jl
add
xchg
sbb
xor
mov
and
jo
mov
dec
sub
jle
in
je
lea
pop
mov
imul
lods
and
and
xchg
inc
scas
fldt
xchg
out
pop
dec
std
jl
mov
fldt
out
int
jb
pop
sbb
and
sbb
jnp
repnz
out
inc
mov
jbe
test
jne
mov
pop
cmpsl
das
jns
ficoms
mov
push
pop
das
jns
negb
insb
jl
int3
movsl
cmpsb
mov
inc
xchg
aam
cltd
jno
fnsave
jb
and
lea
jl
and
lcall
mov
or
pop
clc
adc
sub
das
pop
loop
shl
out
pop
jnp
push
pop
inc
lcall
repnz
in
aaa
mov
cmp
fisttpl
xchg
jecxz
ret
adc
fimuls
or
mov
xor
ss
add
add
or
fisubrl
andl
and
iret
inc
or
cmp
xchg
test
pusha
scas
lea
icebp
xor
nop
sub
cmp
bound
xchg
jle
adc
jns
fidivl
xor
mov
lods
lcall
cwtl
add
add
popa
pop
pop
pop
push
push
xor
xchg
pop
mov
cmp
out
xchg
mov
jmp
inc
xor
out
lock
rcl
call
mov
mov
adcb
pushf
lds
jg
cmpsb
and
dec
insl
and
loop
mov
ljmp
shrl
lods
hlt
ss
mov
das
cltd
pop
or
or
sbb
ljmp
lods
jne
lret
testb
fcompl
ret
stc
jnp
ds
das
enter
pusha
and
or
cmp
outsb
and
xchg
in
aaa
cmp
jp
cmp
xor
mov
imull
cmpsl
mov
pop
scas
lods
push
aaa
insl
fsubp
int
icebp
sahf
ret
push
gs
movsb
or
mov
pop
std
outsl
out
in
push
rclb
mov
lods
cmp
push
in
add
sub
mov
push
xor
std
bound
jmp
mov
fwait
or
pop
jno
imul
mov
enter
fimuls
push
inc
inc
movsl
mov
add
imul
mov
xor
test
push
sbb
test
cmpsl
mov
mov
jns
or
enter
dec
dec
shl
stc
jl
je
call
or
movsb
int3
out
cmp
cmp
cwtl
push
sub
sarl
sub
push
cld
and
adc
cmp
mov
push
mov
pop
lock
loopne
dec
popa
pop
inc
bound
test
stos
rorb
fmul
cmp
mov
mov
and
lahf
enter
add
sub
ret
xchg
sub
das
dec
push
mov
mov
in
mov
pushf
cli
sbb
pushf
add
mov
jp
lret
push
inc
add
aam
fcompl
sahf
pop
dec
mov
outsl
insb
jb
imul
rcll
push
nop
mov
cltd
push
scas
aam
pop
jp
or
jmp
mov
cmc
int3
inc
mov
add
jb
lock
fmull
and
push
aas
mov
dec
mov
push
fcomi
sbb
clc
xchg
js
inc
js
icebp
lret
cmp
pushf
loop
sub
test
mov
scas
enter
jns
jle
mov
out
pop
enter
pop
sub
outsl
je
bnd
pop
and
mov
xchg
movsb
lea
lock
mov
mov
xchg
insl
cld
ret
ret
in
mov
dec
icebp
sub
inc
push
in
ret
mov
stc
sbb
dec
aad
cwtl
test
dec
nop
int3
cmpsl
pop
out
sbb
add
dec
dec
mov
jns
push
jne
pop
pop
xchg
mov
test
sbb
xchg
aas
insl
iret
std
cwtl
push
ret
pop
jbe
add
out
lret
cwtl
scas
pop
movsl
sub
mov
jle
mov
rcrb
xchg
imul
xor
stos
andb
push
mov
sti
sbb
sub
in
xor
nop
lods
pusha
stc
push
or
mov
or
xchg
push
push
sub
and
adc
js
out
xchg
pop
repnz
mov
pop
fcompl
out
into
mov
adc
sbb
neg
cs
rclb
iret
sbb
into
sub
sub
popa
push
rolb
push
add
mov
jno
inc
xchg
addl
fld
adc
or
js
and
mov
pushf
mov
ja
jae
push
cmpsl
adc
lret
dec
hlt
iret
pop
shrb
aas
xlat
packsswb
cmp
cltd
je
out
dec
les
lods
mov
mov
dec
sbb
lahf
mov
cmp
into
and
shl
dec
sub
mov
stc
or
outsb
and
aam
les
shl
fnstcw
enter
repnz
sbb
das
jb
and
sub
add
mov
sbb
push
xchg
xor
sub
mov
sub
cmpsl
add
aad
xchg
js
add
ss
iret
stos
shrb
adc
test
dec
aad
icebp
fdiv
push
ret
mov
mov
inc
jb
aam
loope
jbe
cltd
lock
outsl
dec
enter
sahf
jne
dec
lcall
aas
out
jne
dec
jmp
ja
fwait
mov
push
pop
and
iret
add
sub
fwait
cmp
mov
in
push
sbb
jbe
adcl
cmp
ffreep
iret
sub
push
std
pop
frstor
adc
jl
or
aaa
dec
jnp
cmp
dec
subb
cmpsl
js
seto
fldt
jo,pn
mov
lcall
push
add
mov
dec
and
cld
fisubl
in
cmp
loope
in
pop
mov
int3
and
mov
test
scas
push
pushf
sbb
or
mov
mov
das
cltd
mov
add
xor
pop
mov
lods
cmp
mov
jl
test
jbe
cmpsb
sbb
insl
cmp
pop
rol
cmp
jecxz
cltd
into
gs
cmc
xchg
aas
lea
shrl
lock
jb
ret
cmp
mov
xor
dec
inc
jecxz
push
xchg
out
and
gs
test
lods
leave
test
repz
and
pop
jl,pn
push
fs
or
les
mov
shll
test
std
mov
mov
adc
je
add
stos
popf
xchg
movsb
aam
mov
mov
mov
mov
or
bound
mov
and
into
pop
lea
lods
xchg
pop
adc
push
mov
mov
jmp
or
icebp
test
cmp
sub
dec
sbb
xlat
js
movsb
jge
sbb
insl
imul
pop
sti
and
and
lret
aad
mov
inc
push
mov
aaa
jbe
jmp
cli
sbb
popa
pop
popa
or
pushf
popa
ja
xchg
out
push
xor
adc
push
cmp
mov
mov
cmp
xchg
mov
or
stc
sbb
mov
push
inc
nop
pop
femms
lcall
push
pushl
aaa
enter
mov
xchg
insb
test
push
pop
sub
into
lods
push
cs
or
jnp
xor
jne
popa
in
aam
mov
mov
xor
adc
cmp
out
lods
push
mov
jne
push
sub
std
lea
test
sbb
das
movsb
movsl
cmpsl
and
jb
dec
out
mov
cmc
loopne
icebp
cmp
into
int
add
sahf
and
jno
test
mov
loope
inc
mov
ret
or
cmp
shrl
push
inc
lds
inc
leave
jbe
jae
mull
mov
sbb
mov
push
sbb
adc
cmp
dec
or
add
or
push
jge
movsl
add
rorb
add
loopne
mov
cmpl
js
jnp
mov
subb
pop
and
mov
add
push
xlat
into
test
inc
clc
xchg
sbb
sbb
xor
push
sbb
pushf
addb
cmp
push
adcl
cwtl
mov
push
leave
jae
mov
and
xchg
insl
push
fsubrs
lcall
push
mov
mov
cmp
fs
scas
pop
test
inc
stc
rolb
in
jecxz
mov
and
jo
shl
iret
jl
pop
jns
je
mov
arpl
leave
rorb
jecxz
sub
fbstp
xor
push
andb
and
or
cmpsb
sbb
mov
icebp
sub
enter
lret
loopne
xchg
ja
lds
cmp
push
adc
stos
fwait
out
fcoml
sbb
dec
ja
aas
fdivr
sbb
repz
outsb
xor
pop
in
stos
outsb
aam
je
xor
es
fildl
mov
fldt
mov
jg
sti
mov
cmp
cltd
mov
mull
aas
fisttps
and
insb
mov
movsl
out
fwait
mov
fs
popf
xlat
sbb
mov
adc
inc
xchg
arpl
stos
jmp
arpl
daa
pop
and
and
cwtl
popa
push
xchg
js
jo
in
rcrb
test
adc
adc
pop
xor
push
xor
int3
in
call
clc
inc
mov
lret
shlb
pop
xchg
fmul
add
xor
subps
adc
cmp
mov
rcrl
dec
lret
ficoms
cs
jnp
insb
lods
scas
call
dec
dec
inc
ret
imul
testl
aas
cmpb
xchg
add
lahf
or
lods
push
add
cmp
add
aam
cmpsl
fiaddl
mov
push
outsb
aaa
dec
and
dec
lods
jne
ljmp
mov
jge
and
insb
pusha
lret
jb
xor
das
std
popl
insb
sub
add
jg
int
sbb
pusha
lea
jae
mov
sub
loope
sbbl
jo
loopne
mov
xchg
push
lret
int
lret
mov
out
and
aaa
sbb
push
imul
fadd
pop
movsb
mov
push
jne
xchg
scas
ljmp
push
sbb
jge
jo
repnz
cmpsb
jp
dec
fimuls
xchg
lods
cmp
jbe
jbe
dec
lods
fs
mov
push
pause
add
in
pop
arpl
je
imul
nop
cmp
pop
jg
iret
inc
adc
push
jno
jb
jno
jb
mov
lods
testb
sbb
jp
enter
ret
test
dec
push
mov
jne
adc
clc
ffreep
sbb
jno
adc
push
adc
xchg
mov
std
aad
push
test
bound
popf
fsubrl
cwtl
aad
push
inc
jmp
aam
scas
xchg
scas
mov
out
mov
or
and
inc
sub
adc
cmp
jecxz
jmp
push
mov
testl
mov
jge
jno
les
pop
int3
xchg
add
les
jp
xor
inc
pop
and
dec
cmp
sub
xchg
movsl
addr16
dec
and
mov
or
mov
std
and
mov
popa
hlt
pop
test
incl
cltd
ror
adc
loopne
jne
add
clc
pop
jmp
add
push
subb
sbb
loope
push
jno
out
sub
data16
push
or
aaa
mov
mov
mov
sbb
sbb
ljmp
andl
in
push
out
add
lcall
push
incb
sub
jns
sarl
insb
rcrb
mov
out
cli
sub
xor
cmp
xchg
sbb
icebp
js
pushf
out
sub
popf
lods
js
shl
jno
jmp
dec
mov
test
adc
mov
cmp
sub
iret
int3
inc
mov
sub
sub
jae
sbb
test
bound
jno
and
mov
jg
stc
in
jge
arpl
sbb
push
int3
jne
push
dec
xor
mov
bound
outsb
cmp
dec
mov
xor
or
in
inc
mov
lahf
add
les
xchg
mov
push
sbb
jge
push
jns
mov
es
movsb
or
icebp
repnz
cli
add
dec
shrl
mulb
and
push
sbb
mov
scas
push
aam
and
repnz
mov
call
sti
fldenv
addl
cmpsb
dec
je
xor
ret
movsl
sbb
xlat
in
xchg
jmp
xor
sbb
xchg
add
xor
xchg
mov
rcr
arpl
addb
adc
and
fwait
test
pop
cmp
gs
outsb
mov
scas
gs
insb
push
pop
mov
lock
std
fisubs
int3
test
mov
es
sub
gs
mov
int3
or
loope
cmpsb
popa
xchg
popa
mov
lods
push
pusha
int
push
sbb
insb
jae
mov
imul
loopne
mov
adcl
in
imul
xor
in
cmp
outsb
hlt
out
sbb
push
filds
sbb
dec
xor
inc
enter
cmpsl
sar
xor
mov
mov
cmpsl
and
xlat
arpl
jns
or
or
mov
mov
inc
mov
add
orl
inc
das
ss
cwtl
rclb
jbe
and
push
test
and
iret
popa
mov
outsb
push
stos
ror
or
mov
ret
pop
fistl
loope
mov
pop
pop
scas
jle
mov
and
mov
addr16
or
xlat
les
test
inc
xchg
js
seta
sahf
push
pop
clc
stos
dec
lret
mov
and
dec
pop
dec
jecxz
punpcklbw
xchg
jnp
out
addr16
xor
xor
xchg
sbb
lea
inc
ficoms
std
xchg
icebp
mov
out
sbb
loope
mov
ja
shl
arpl
jo
fiaddl
mov
lock
mov
call
loopne
xchg
lahf
sub
add
dec
xor
popf
jecxz
push
mov
lock
push
std
jb
cmpsb
popf
sbb
insl
and
cmpl
adc
test
out
inc
mov
jl
push
sbb
lret
dec
pop
ljmp
pop
add
mov
bound
or
sub
pushf
or
bound
mov
mov
nop
cmpb
pop
ficoml
shrl
dec
mov
and
jo
sub
ret
push
lcall
rorl
inc
rcrb
add
test
sub
inc
test
or
mov
lds
fwait
shl
loop
dec
fwait
xchg
sbb
mov
arpl
adc
cmp
fisubrs
data16
cmp
ljmp
mov
pop
cmp
out
incb
lods
sbb
call
fs
cmp
imul
mov
test
xchg
in
jmp
mov
pop
in
sahf
mov
test
cmp
popa
mov
in
leave
jmp
mov
jmp
test
inc
ljmp
sub
jp
xchg
out
xchg
fwait
lret
pushf
push
adc
mov
lock
push
mov
jae
test
ss
and
add
fidivs
out
mov
and
xor
lods
cmp
out
lods
xchg
inc
jge
push
mov
xchg
aam
xor
in
hlt
das
or
jno
loope
and
addl
sub
push
out
outsb
mov
jno
xorl
mov
bndldx
jnp
int3
iret
scas
and
pop
popf
packssdw
fdivl
xchg
mov
fs
lods
xor
jo
ret
xor
out
loopne
out
mov
pop
adc
cmp
add
mov
bound
daa
ror
jno
add
pop
inc
jnp
mov
enter
add
dec
jno
mov
out
test
mov
clc
sbb
dec
add
mov
sub
adcb
repz
or
out
or
stc
pop
lret
push
jae
cmp
sbb
inc
push
jp
test
mov
push
sbb
shl
fisubl
iret
xor
push
push
adc
movsb
dec
cli
adc
ds
insb
xlat
lret
ds
cmp
xor
jb
lcall
push
stc
pop
xor
or
fsubl
dec
sbb
jg
mov
dec
push
dec
mov
jo
testl
sub
clc
mov
mov
or
pop
or
xchg
adc
sub
pavgb
mov
iret
xchg
cmp
lcall
sbb
fwait
inc
shll
sub
or
fs
adc
sub
loope
push
imul
je
rorb
das
stos
jne
mov
int
mov
cmp
mov
cmp
mov
cmp
sarl
popf
dec
mov
push
loopne
xchg
and
jno
data16
dec
mov
out
push
test
pop
scas
sub
mov
jp
jl
cmpsb
jg
lea
add
imul
jecxz
icebp
nop
xor
xchg
jnp
std
or
out
sub
call
scas
mov
xor
adc
cmp
mov
sub
je
push
mov
fdivs
pushf
hlt
fwait
js
ja
sbb
sbb
repnz
mov
pop
inc
inc
lahf
adc
mov
jl
clc
lods
mov
dec
scas
jne
lds
fst
sbb
xchg
fisubs
mov
out
test
xor
test
mov
sbb
cmpsl
dec
xchg
addr16
xor
jl
sbb
test
mov
rcll
pop
stos
sbb
mov
xchg
mov
push
sbb
lods
or
fldl
test
lcall
xchg
adc
dec
jae
or
sub
lods
add
xchg
jnp
adc
mov
or
pop
lcall
pop
loopne
sub
push
lcall
insl
sbb
inc
dec
addr16
xor
outsb
out
je
xor
mov
je
jne
xchg
mov
movsl
aam
adc
push
sub
shrl
or
push
addl
pop
in
shl
in
inc
or
mov
jo
repnz
pop
dec
int3
inc
mov
or
std
pusha
dec
inc
pop
pop
iret
fisubrs
lock
sarb
push
xchg
outsb
push
adc
fists
aad
or
call
jge
mov
cmp
outsb
daa
movzbl
sub
pushf
lds
jno
and
scas
adc
sub
cli
fidivl
out
jb
sub
mov
movsb
pop
inc
cmpsb
addb
sub
cli
data16
mov
push
pop
nop
xchg
loop
loop
call
push
sbb
mov
in
jmp
xchg
push
sti
pop
imul
cld
mov
and
xchg
lods
and
iret
pop
jle
imul
loop
ljmp
in
dec
lahf
js
imul
jecxz
dec
mov
ljmp
mov
push
cmp
add
inc
int3
sbb
lahf
in
das
std
adc
call
testb
push
sbb
clc
mov
fdivrl
xlat
lahf
mov
fidivs
into
stos
xchg
inc
xchg
mov
push
nop
ss
mov
sti
cmp
lods
or
jl
dec
pop
adc
stos
dec
mov
push
loop
repnz
mov
test
xchg
jb
mov
adc
clc
sbb
lret
sub
aad
lds
push
popa
shrb
loope
fstpl
add
ja
fmuls
mov
add
xchg
lods
cs
sbb
sar
imul
mov
out
sub
cmp
xchg
jne
fwait
and
xchg
push
fs
nop
mov
hlt
rorb
push
cwtl
and
ja
movsb
pushf
in
cmpsb
leave
lahf
loopne
repz
cwtl
xchg
mov
js
out
and
mov
jns
inc
mov
xchg
js
pop
rorb
movsl
sbb
lahf
mov
sub
bound
xchg
test
les
test
and
fwait
daa
pusha
fistpl
pop
in
pop
negb
push
mov
aad
jle
xlat
stc
cmp
imul
das
das
jmp
rcll
dec
mov
mov
inc
roll
jne
push
sub
sub
mov
mov
xor
stc
dec
aaa
shlb
adc
out
cltd
jg
xchg
sar
mov
xor
add
jb
mov
push
insl
mov
jnp
pop
pop
add
inc
add
rcll
test
dec
push
jns
insl
jns
notb
add
int3
push
inc
jno
pop
lret
lods
pop
mov
pusha
mov
lret
pushf
data16
jge
mov
adc
andb
stos
mov
sbb
mov
sub
mov
pop
cwtl
decb
cltd
and
mov
rclb
stos
ret
out
je
mov
mov
outsb
xchg
mov
popa
out
sarb
mov
out
loop
pop
adc
cmp
jbe
mov
ljmp
jae
dec
inc
jmp
clc
outsl
sub
inc
add
pusha
insb
pop
jecxz
push
mov
rcrl
sbb
insb
sti
push
pushf
pop
mov
xor
in
push
or
int
adc
or
stos
xchg
popf
sub
xorl
popf
mov
dec
mov
xchg
insb
imul
mov
xor
adc
fstl
fneni(8087
xor
out
or
adcl
je
pop
jns
mov
test
cmp
push
jae
pop
push
cmpsb
push
mov
icebp
aam
stos
in
mov
mov
roll
ljmp
pusha
aam
push
data16
mov
or
rol
lcall
push
test
jge
mov
jns
pop
mov
aas
nop
jle
rolb
ja
jmp
xor
jb
insl
int
lods
adc
adc
sbb
subl
sbb
or
in
sar
push
fs
repnz
in
mov
jb
xlat
xchg
aaa
mov
cli
adc
sub
cmp
xor
adc
nop
add
jg
mov
lcall
loop
sahf
cld
pop
push
popa
add
push
sbb
mov
jbe
mov
xor
inc
sub
adc
fwait
add
cmc
sub
pop
mov
lcall
pop
jp
iret
in
or
mov
push
int3
pop
aas
push
cmp
hlt
test
and
mov
gs
jmp
out
mov
mov
movsl
pop
jmp
pop
dec
mov
mul
aam
jmp
sub
fisubs
or
stc
inc
aas
sbb
xor
aaa
pop
scas
jge
iret
loope
mov
jbe
jecxz
stos
pop
test
cwtl
xor
xor
push
pop
lods
xlat
push
xchg
add
mov
jp
jne
or
cld
std
add
push
cmp
mov
adc
cli
imulb
mov
pusha
enter
subl
jp
les
lcall
jg
mov
testl
inc
xchg
ret
push
sbbl
inc
fstpt
mov
sbb
hlt
jge
or
imul
cmp
push
sbb
outsl
xchg
insb
mov
dec
sarl
jne
dec
ss
jno
cmpl
repz
lcall
stc
hlt
out
fadd
stos
or
pop
sti
xor
arpl
jo
fimuls
jns
sarb
xchg
adc
es
data16
sub
dec
rclb
jns
pop
test
orb
out
sbb
loope
mov
fistl
js
cmc
dec
push
pusha
mov
gs
shll
into
movsb
pop
mov
inc
sbb
cmpl
stos
sbb
cwtl
mov
cwtl
fmuls
push
adc
in
lods
out
fcom
cmpl
pop
popf
adc
xor
bound
jno
adc
add
outsl
pop
ficoml
fcoml
pop
enter
or
outsl
sub
fistl
mov
xchg
fcmovu
adc
push
call
dec
mov
sbb
adc
andl
lock
push
sub
les
cmp
jns
gs
and
or
mov
out
repz
leave
or
mov
ljmp
imul
sub
and
cmp
mov
jnp
mov
adc
in
in
loop
jno
cmc
lret
push
xor
inc
push
xchg
lret
xchg
adc
push
xchg
and
test
outsb
sti
into
xor
test
jecxz
clc
sahf
xor
inc
shrb
or
and
stos
mov
jmp
push
outsl
in
cmp
sbb
or
push
rolb
into
add
fbld
or
subb
jl
loopne
mov
mov
dec
jl
popa
scas
int
fidivrs
int
adcb
dec
jp
outsb
mov
mov
scas
fbstp
mov
pop
push
push
scas
xchg
dec
cmpsb
mov
or
inc
sbb
ret
cmp
add
scas
xor
dec
lds
out
xor
hlt
mov
movsb
mov
ret
mov
cld
jecxz
lock
cmp
mov
shl
push
dec
jl
push
xchg
push
repz
inc
jno
rcl
bound
push
fdivs
cmp
push
xchg
das
jp
orb
cmp
cmp
jp
clc
adc
mov
mov
dec
or
jl
inc
movsb
rolb
adc
dec
lahf
dec
ds
cmp
dec
dec
xor
mov
aad
fcmovnb
pop
js
push
arpl
jbe
add
sub
cmpb
push
fists
mov
lds
lcall
jns
sub
pop
lahf
mov
push
jbe
scas
and
sbb
call
rol
or
call
movsl
scas
rcrl
int3
xchg
pop
mov
sbb
sbb
lea
or
js
mov
mov
mov
sbb
xor
inc
and
arpl
mov
xchg
mov
jbe
mov
adc
mov
cwtl
test
xor
dec
call
test
imul
mov
jle
in
int3
adc
fcompl
add
ja
dec
out
sub
es
dec
or
mov
xchg
rorb
cmp
fwait
push
movsb
jle
sahf
subl
xchg
sahf
sahf
mov
inc
add
pop
cmc
iret
lods
int3
in
dec
pop
decb
pop
xchg
and
fstps
aas
clc
test
mov
mov
fbstp
mov
and
cmpsb
in
dec
lods
dec
mov
xor
or
jo
jno
xor
push
pop
lcall
adc
pop
cmc
imul
pop
jmp
pop
add
push
dec
add
inc
aad
call
repz
push
imul
sub
sbb
rclb
push
lahf
push
in
loopne
loopne
xchg
lock
push
out
ret
dec
push
popa
xchg
dec
dec
cmpsb
jnp
pop
das
orl
ret
lock
xchg
out
je
fs
cmc
mov
fimuls
jmp
mov
sub
sbb
dec
jo
nop
mov
sahf
push
notl
push
push
fisttpl
das
insl
popf
fs
jo
gs
leave
jno
pop
cmp
fxch
in
jae
addr16
gs
popl
jecxz
mov
insl
xor
mov
sub
mov
xlat
ret
clc
mov
sub
xlat
adc
insl
mov
xchg
pop
pop
mov
ja
movsl
outsb
rcrb
pushf
jle
daa
bound
in
add
fs
jmp
fidivs
gs
mov
cmp
mov
mov
sbb
jae
insb
xchg
push
in
mov
data16
ljmp
and
inc
cld
js
cltd
aad
aas
or
mov
fdivr
pop
pop
xor
test
call
sarb
mov
jecxz
js
ljmp
mov
fs
fbld
jb
rclb
shll
jnp
mov
mov
sub
enter
push
push
lods
cld
sti
push
pop
mov
lahf
arpl
leave
cmp
push
ret
jecxz
xchg
jbe
xor
push
cmp
xchg
sahf
inc
cmp
in
inc
sub
mov
pop
cltd
add
xchg
ss
mov
addb
hlt
into
leave
or
clc
jae
jae
cltd
fsubrs
cmp
lahf
jnp
pop
xchg
cmpl
mov
dec
pop
lret
int3
into
fwait
je
jbe
mov
ffreep
sbb
push
lea
add
jne
hlt
clc
xor
enter
dec
add
fcomps
rolb
jb
cmp
jge
repnz
cli
jae
test
scas
push
cmp
push
aam
jbe
xor
push
std
pop
in
xchg
cmp
and
inc
outsb
cmp
mov
jmp
shlb
sub
push
stos
xor
sbb
adc
jge
mov
or
arpl
mov
imul
hlt
sbb
cwtl
jmp
add
dec
loope
push
cmp
mov
test
repz
inc
xchg
aas
pushf
add
out
dec
lret
sub
push
dec
pushf
insl
es
js
jo
pusha
jge
ds
xor
rcr
xor
cld
pop
insb
mov
add
add
dec
xorl
push
push
repnz
lods
add
sub
cs
and
jmp
ret
lret
clc
sahf
sti
push
lret
or
ljmp
xor
xchg
jne
push
inc
cs
adc
fsubrl
ret
inc
enter
repz
aad
xchg
cwtl
aam
inc
mov
ror
push
mov
mov
add
sub
mov
in
sbb
or
and
addl
icebp
dec
mov
mov
cmp
xor
inc
addr16
fildll
inc
adc
push
movsb
mov
stc
jmp
mov
ret
xchg
mov
out
push
cmp
pusha
loopne
lret
jle
insb
lret
inc
ficomps
inc
jbe
out
dec
push
cmpl
and
push
rsqrtps
fs
leave
xchg
aam
iret
adc
lret
mov
ss
jg
movsb
push
adc
repnz
fxam
sbb
loop
ficoml
jecxz
movsl
jns
add
pushf
xchg
cltd
and
out
pop
test
xor
xor
in
addl
lret
mov
xlat
mov
sbb
repz
in
xlat
jecxz
pushf
push
lods
rol
fstpt
in
ja
mov
cmpsb
sbb
out
int3
push
std
mov
outsb
adc
jp,pn
mov
push
mov
xor
cmp
shll
jae
mov
mov
lock
and
lret
mov
lds
jmp
sbb
mov
cmp
or
xchg
xor
roll
mov
cmc
xor
sbb
iret
mov
ss
xchg
icebp
xlat
xchg
shrb
mov
xchg
scas
shlb
mov
cltd
add
je
lods
push
fisttpll
popf
xchg
aas
push
add
shll
dec
xchg
loop
arpl
and
jb
push
scas
aas
stos
jnp
mov
std
mov
out
ja
aaa
lock
mov
sti
push
sbb
enter
testb
mov
or
aaa
test
xchg
jl
sub
mov
cmc
out
or
jae
pop
sbb
sbb
xchg
xchg
dec
add
and
mov
je
and
insl
add
call
dec
jb
sbb
dec
lret
pop
int3
out
cmp
dec
jb
xor
mov
shlw
sub
cmp
fcomps
movsb
or
sbb
jbe
mov
pop
xchg
adc
lret
or
dec
lret
lds
xlat
sbb
push
rcrb
dec
stc
and
out
push
fcmove
clc
nop
shl
inc
xor
jne
jno
imul
jp
stos
call
add
mov
ljmp
test
cmp
mov
mov
inc
mov
cltd
negl
pop
in
mov
mull
ss
jecxz
out
mov
aaa
imul
mov
out
mov
xchg
pusha
sbbb
mov
mov
mov
repz
or
pushf
in
stos
pop
fs
inc
scas
subb
jae
pop
enter
pop
jl
fistpll
mov
inc
pop
cmp
pop
aaa
dec
test
imul
les
lcall
arpl
dec
aad
out
cmpsb
addr16
mov
mov
mov
xchg
cmc
pop
inc
les
out
ret
aam
mov
pop
pop
out
jbe
je
frstor
add
lahf
jmp
inc
or
push
push
cmp
adc
out
lcall
jp
in
or
jle
faddp
dec
push
addl
ja
mov
data16
lods
cs
push
aam
in
stc
sub
shlb
fistps
cmpsb
fisttps
adc
cld
mov
jecxz
cmp
pushf
mov
sub
xchg
xchg
outsl
ss
lods
inc
sbb
sbb
mov
jb
pop
pushf
jno
mov
push
je
xchg
mov
cmp
pushf
push
fstps
outsl
lock
xor
cmpsb
inc
jle
inc
jne
aam
es
jno
pop
in
mov
push
cltd
push
mov
pop
cltd
ffreep
adc
das
lcall
ljmp
xor
and
test
jle
test
mov
shlb
stos
lds
gs
sub
jge
jp
jno
lret
xor
jp
mov
and
shrl
stos
or
sub
data16
rcl
dec
and
or
xchg
mov
sbb
mov
or
insl
inc
mov
mov
inc
push
hlt
aaa
xchg
sar
mov
jmp
fiaddl
push
test
jl
mov
in
fs
jo
cmp
into
sbb
pushl
lahf
pusha
jne
inc
dec
dec
popa
fcmovbe
lret
dec
mov
or
fstpl
inc
inc
stc
push
pop
mov
dec
jbe
add
je
loope
out
std
aaa
in
sbbb
mov
fdivs
jl
push
push
sarb
inc
cmp
in
lret
fadd
jmp
xlat
xchg
es
sub
mov
ror
cmp
lods
mov
out
dec
and
rcrl
mov
cltd
and
loope
xchg
imull
rcl
push
test
inc
loop
mov
xor
out
and
loop
or
dec
scas
stos
dec
mov
aad
stc
adc
cld
and
les
nop
xor
fsubl
sbb
je
lds
fcmovnbe
xor
xor
bound
push
pop
insb
pop
push
jns
mov
faddl
in
cmp
in
xor
stos
or
lahf
ds
mov
lods
inc
adc
sahf
enter
jae
pop
mov
ret
faddp
pop
or
mov
jg
dec
imul
test
loop
aad
xlat
xchg
sbb
jae
lods
test
addr16
push
test
mov
loop
mov
and
fistpl
dec
inc
lahf
add
loopne
inc
mov
pop
into
mov
pop
das
add
and
in
add
cs
mov
dec
jl
mov
ds
inc
repz
pop
jae
lahf
mov
cmp
mov
scas
lea
pop
cmp
xchg
imul
shrl
xor
mov
insl
jecxz
out
dec
call
cwtl
pop
push
sub
mov
dec
fwait
sub
mov
mov
pop
adc
arpl
stos
mov
sti
insl
jno
add
insb
std
lret
clc
outsb
nop
or
divb
lahf
mov
or
aam
cmc
negl
cwtl
call
lods
add
shlb
cmc
fidivrl
sub
jecxz
dec
nop
ret
rcrb
and
movsb
gs
out
lea
dec
shl
jle
or
jle
fldt
mov
out
lock
mov
xlat
arpl
adc
pop
mov
loope
mov
pop
xchg
jmp
add
clc
roll
jno
jecxz
dec
sub
paddd
andb
addb
adc
mov
pop
movsl
std
insl
repnz
out
adc
orb
loopne
xorl
push
sub
orl
pushf
mov
pusha
mov
ljmp
lods
les
xor
int
push
mov
loope
adc
shrl
inc
rcrb
mov
es
pop
and
push
add
push
adcl
dec
mov
popf
iret
or
ljmp
stc
xchg
jp
inc
addl
xchg
ret
dec
adc
cltd
fbstp
into
push
mov
mov
idivb
jg
daa
imul
mov
fs
mov
xlat
dec
and
or
and
loopne
inc
fldl
xchg
icebp
scas
cmc
insl
in
notb
jne
mov
sub
call
lcall
scas
sub
inc
je
scas
cltd
fldenv
sbb
pop
xor
or
inc
xor
cmpsl
pop
pop
arpl
fcmovne
add
insl
or
mov
push
movsl
jns
inc
inc
fstpl
rorb
or
ss
inc
mov
sub
jle
jbe
repz
jo
lock
jo
jl
into
into
add
sbb
pop
dec
mov
mov
or
mov
add
push
popf
cwtl
adcl
fdivrs
rcl
shr
js
pushf
cmp
adc
jle
loop
add
pop
lret
sbb
cmp
cltd
mov
xchg
sub
test
jle
out
adc
fs
aaa
pop
lret
aam
pop
jmp
mov
lret
sbb
shll
xchg
or
movsb
fdivrp
in
or
sub
lret
or
and
aaa
mov
sub
mov
push
out
jno
call
cli
xchg
test
push
cmp
inc
push
nop
add
jo
jo
push
mov
cmc
mov
aam
cld
cli
call
popa
xchg
ja
fwait
xchg
push
es
std
jle
sbb
jne
loope
sub
push
cmp
mov
or
dec
mov
jmp
xchg
push
stos
cmpsl
jl
adc
fcmovnbe
cmpsb
fcomps
dec
bound
fists
gs
inc
and
jp
adc
fwait
out
pop
inc
xor
in
xchg
psllw
push
jle
outsb
adc
outsl
xor
in
fists
in
int3
insb
testb
aam
dec
cmp
insl
jge
fisttps
mov
movb
pop
fwait
insb
mov
xchg
add
out
sub
aas
add
jecxz
xchg
jno
arpl
out
dec
out
icebp
pop
and
dec
hlt
fcmovbe
loop
rolb
mov
xchg
inc
pop
inc
mov
dec
out
adc
or
xor
lret
imul
pop
ja
mov
jmp
loop
lods
sbb
bound
inc
into
mov
rolb
jo
testb
arpl
pop
inc
icebp
sti
and
inc
jne,pn
stos
je
nop
and
arpl
gs
inc
sub
push
inc
icebp
push
addr16
inc
mov
fistl
sub
pushf
bound
mov
negl
jae
js
mov
pop
hlt
or
insl
stc
push
add
inc
jle
roll
aam
arpl
ret
fs
fstpl
cmp
sub
cwtl
add
fmulp
lret
mov
push
loopne
mov
pop
and
jge
push
loopne
inc
and
pop
mov
pop
iret
and
inc
leave
xor
divl
cld
dec
je
mov
or
imul
lds
pop
loopne
andl
mov
imul
mov
jbe
inc
inc
lret
test
jl
out
rcr
hlt
fwait
push
push
push
fs
lock
imul
mov
mov
int3
pop
pushf
and
movsl
subb
std
dec
cmpsb
push
and
dec
jmp
add
or
add
mulb
cwtl
pop
jmp
mov
xchg
mov
gs
dec
lret
pop
push
in
lret
arpl
mov
in
sti
inc
push
fs
and
shrb
das
data16
in
push
sbb
fucomip
nop
out
aaa
pop
push
cmc
ljmp
sbb
or
sbb
inc
fiadds
popa
pusha
jne
stos
insl
xchg
cwtl
dec
jne
jno
jo
insb
add
movsb
aad
xor
test
lret
dec
clc
mov
ret
mov
pushf
pop
test
repz
xchg
sbb
mov
imul
pop
lds
int
jnp
pop
shr
jo
sbb
inc
jmp
fsincos
mov
mov
cmp
push
movsw
xor
push
std
rclb
sbbb
pop
add
push
inc
inc
and
jecxz
adc
add
ret
dec
pop
xchg
sbb
je
sbb
cli
out
or
fsubrl
xchg
cmp
adc
push
dec
adc
push
sar
mov
adc
xchg
cmc
dec
fdiv
rcrb
inc
aaa
cmpsb
out
mov
push
frstor
repnz
movsl
push
ret
pop
xchg
lds
faddp
jp
sub
pop
outsb
clc
std
call
dec
out
ss
ljmp
pop
mov
sub
test
dec
in
aas
int
fldenv
and
mov
cmp
arpl
jns
testb
mov
xor
or
inc
sub
shr
test
xchg
lret
iret
adc
lock
xchg
inc
gs
push
mov
scas
inc
pcmpgtw
mov
jne
das
adc
xchg
mov
pop
call
adc
mov
loopne
stos
aaa
sub
cltd
icebp
push
cmp
pop
scas
adc
in
or
sbb
or
add
insl
xchg
int3
xchg
jns
outsb
xchg
adc
jno
and
cmp
icebp
cmpsl
arpl
out
push
scas
rorb
adc
cli
sub
aaa
sub
bnd
out
jno
ret
push
arpl
lds
jae
xorl
or
push
stos
pop
test
push
push
cmp
int
test
inc
fistpll
jg
cmp
sbb
jl
push
xor
add
and
add
addr16
movsb
mov
and
mov
xchg
pop
mov
lcall
in
jne
popf
add
xchg
adc
pop
cmpl
xchg
das
add
popf
mov
jae
push
xchg
mov
inc
add
push
mov
enter
fcomip
ret
xor
jb
inc
movsb
in
shlb
xchg
inc
jb
aas
out
jl
bound
imul
inc
xchg
jecxz
push
sbb
dec
psraw
mov
fildl
xchg
outsb
push
orb
adcl
loopne
int
into
imul
inc
sub
repnz
lret
xchg
cs
cmc
adc
out
and
dec
cmp
test
mov
dec
adc
fisttpll
aas
sub
dec
add
stc
outsb
xchg
icebp
incb
inc
mov
dec
sub
jo
adc
mov
jmp
or
push
nop
push
ret
push
es
sub
sti
pop
xor
push
icebp
xchg
xchg
fwait
xlat
insl
mov
dec
out
mov
stos
xor
std
jnp
insl
inc
es
ficoms
mov
test
lods
aad
cmp
add
sub
loope
and
push
sahf
jno
dec
mov
cmp
push
lret
inc
incb
scas
adc
push
pushf
pop
lods
out
andl
sub
and
ja
adc
mov
jg
add
cmp
adc
jns
and
rcrl
stc
mov
mov
les
mov
jnp
push
mov
cmp
lret
cmpsl
push
lcall
hlt
add
mov
ljmp
mov
sarl
clc
ret
lret
mov
js
xchg
pop
inc
xchg
scas
loopne
gs
imul
cmc
sarl
jecxz
adc
outsb
ds
mov
popf
out
icebp
mov
mov
flds
and
in
lock
popf
xor
fwait
xchg
mov
out
repz
add
xchg
xor
daa
mov
fdivs
pop
pushf
mov
xor
cld
int3
dec
and
xchg
movsb
sbb
jp
int
jnp
sahf
push
mov
lcall
and
dec
cwtl
push
add
jae
insb
lock
sysenter
test
jge
leave
aas
pop
mov
xor
sub
xchg
sti
in
leave
mov
add
sti
imul
and
repnz
arpl
test
xchg
sub
testb
insb
out
inc
call
lock
xchg
pop
aad
cmp
and
orb
mov
fcoms
mov
in
data16
in
dec
shrl
sbb
pop
lahf
mov
out
xchg
push
xchg
into
push
es
dec
icebp
cs
das
pop
adc
push
mov
repnz
mov
cmpsb
fdiv
dec
shrl
sub
pushf
add
ret
stos
mov
int
loope
pop
sub
test
data16
push
dec
xchg
loope
jle
and
sbb
lret
dec
popa
pusha
sbb
lods
cmpsl
imul
repz
outsb
sahf
fcoms
cwtl
sub
jne
inc
je
cli
and
sarl
pop
mov
fimull
in
add
add
fld
jno
push
cmpsl
jno
pop
mul
in
xchg
cmpsb
xor
jo
in
adc
mov
push
adc
dec
jno
push
cmpsl
popf
adc
fldlg2
inc
loopne
pop
lahf
out
rcrb
mov
nop
xor
mov
popa
jno
xchg
sbbl
add
data16
sbbb
test
pop
xchg
sbb
mov
pop
jg
xchg
popf
filds
or
in
cmp
jno
testl
imul
xor
fcomi
push
xchg
mov
xchg
pushf
jae
dec
testl
sbb
inc
loop
int
addl
mov
mov
es
movsb
cwtl
adc
popa
fistl
xor
mov
sahf
andb
gs
frstor
xlat
pop
call
movsb
test
adc
test
js
xchg
pop
or
pop
fisttpl
adc
rorl
cltd
mov
enter
sub
cmp
mov
jno
lahf
jbe
roll
mov
add
lods
cmp
cmc
test
insb
mov
lret
fldt
pop
cmc
loop
inc
and
daa
pusha
int
mov
and
pop
lret
and
cmc
aas
add
mov
mov
add
sbb
leave
jne
das
sbb
cmp
xchg
mov
scas
cld
stos
les
sub
inc
mov
rol
and
xor
mov
adc
cmpsl
pop
loopne
mov
lea
cli
cmp
cwtl
push
cmp
pop
scas
stos
dec
and
xor
and
jp
pop
aaa
add
rcrl
lea
add
sub
xchg
test
daa
dec
nop
pushf
push
pushf
fwait
lret
jmp
jo
jmp
xchg
jg
aas
xchg
sahf
subb
xchg
pop
mov
lret
jne
loope
fistps
pop
cmp
out
orl
fwait
cli
shlb
popf
jo
je
shrl
xchg
cli
xchg
gs
push
mov
repnz
adc
mov
inc
sbbb
into
jmp
jmp
mov
test
mov
sub
and
out
stos
cmpsl
and
xchg
sbb
dec
cmp
push
neg
in
les
arpl
fdivl
lds
out
shlb
jp
iret
jle
sbb
xor
pusha
icebp
scas
aas
dec
fidivrs
xor
leave
mul
cmp
aam
clc
adc
in
inc
repz
cmc
adc
imul
jns
dec
jge
xchg
mov
jmp
mov
test
or
add
jbe
sbb
insb
xchg
mov
jmp
mov
adc
test
cwtl
clc
ficompl
int
jle
mov
fsts
push
pop
sbb
sub
sbb
inc
dec
pop
dec
les
mov
push
js
mov
lea
inc
std
cli
sub
jge
xor
scas
daa
les
imul
pop
inc
scas
pop
mov
pop
mov
dec
out
jne
mov
stos
dec
mov
mov
out
lods
insl
xchg
pop
outsl
push
xchg
std
fsubrs
repnz
mov
pop
shll
pop
cmp
mov
je
adcb
dec
mov
mov
int3
mov
xor
pop
fdivs
mov
ljmp
adc
es
test
ljmp
jl
stos
sub
dec
test
cmp
pop
pop
jne
dec
mov
shrl
clc
inc
mov
inc
sbb
xor
mov
pop
pop
mov
mov
ficoms
inc
data16
xor
mov
sti
inc
jns
lahf
shlb
int
dec
and
fs
into
cmp
mov
sub
cld
fcmovbe
dec
mov
xchg
popf
or
dec
decb
xchg
cwtl
pop
call
push
lods
aam
ret
divb
pop
add
cmc
mov
or
mov
pop
pop
in
fiadds
pushf
jecxz
inc
xchg
sar
jno
inc
ljmp
dec
imull
xor
stos
xor
orl
mov
add
jns
xchg
xchg
mov
lret
pop
pop
mov
fwait
mov
or
fs
mov
andl
xchg
sub
pop
repz
scas
hlt
push
out
sub
inc
scas
inc
int3
mov
xchg
sub
lock
std
in
lods
mov
mov
cmp
mov
aas
and
cmp
call
cmpsb
test
stc
mov
mov
lret
ljmp
push
ljmp
gs
rcr
shlb
loope
pop
dec
pop
icebp
mov
movsl
mov
fs
test
ja
mov
addl
inc
jge,pn
test
lret
out
xchg
cmp
in
sbb
popa
sub
ret
inc
mov
pop
jnp
insb
imul
lea
dec
add
fcompl
leave
rcrb
mov
jne
mov
sbb
jne
shll
mov
cmpsb
push
push
adc
mov
push
hlt
hlt
aam
cmp
xchg
imul
mov
aam
int
lods
loopne
mov
sub
outsb
cmp
mov
int
int
test
xchg
cmc
lds
adc
fsubr
loope
loope
mov
mov
cmp
bound
arpl
mov
mov
xor
xchg
out
stos
push
jp
inc
push
xor
inc
iret
jno
lods
and
adc
pop
sub
mov
adc
mov
imul
rorb
out
mov
rolb
cmp
lahf
jmp
mov
aad
push
cli
lock
mov
sub
xor
enter
repz
pop
pop
scas
aad
add
aas
sbb
inc
loopne
or
js
mov
dec
ficompl
mov
scas
fcmovnu
xchg
pop
adc
cmp
orl
loope
jnp
cs
das
outsl
push
insb
push
fldt
lock
sbb
push
movsl
jecxz
stos
js
jnp
add
test
jecxz
push
lods
pop
cmp
fbld
ret
mov
jmp
test
xchg
dec
dec
jno
inc
lret
xchg
jo
enter
and
out
sub
lds
sub
sub
in
sub
flds
aas
mov
inc
lret
out
movsb
fisubl
cs
pop
pop
adc
or
dec
mov
mov
jl
sarl
loopne
and
jecxz
in
mov
push
cmp
in
test
arpl
fstpt
add
das
sbb
mov
xor
push
les
pop
clc
cmpsb
xchg
and
cmpsl
inc
je
cmpsb
call
adc
ss
jg
sbb
je
add
jo
pop
mov
daa
popa
add
insl
movsb
in
push
lds
pop
shl
xor
jle
rorb
movsb
mov
mov
in
xchg
cmp
mov
lahf
jno
push
jg
sbb
sbbb
idiv
cmc
enter
test
imulb
jmp
sahf
sarl
gs
jg
addr16
sbb
xor
popa
stos
mov
or
mov
adc
mov
xchg
imul
and
or
or
imul
xor
jl
testl
outsl
repnz
jecxz
test
nop
stos
in
loop
push
mov
mov
sbb
repz
aam
fs
add
push
cmp
mov
imul
inc
cmp
movsl
mov
call
sti
mov
push
scas
stos
loopne
cld
mov
jae
andl
adc
sub
out
sbb
lret
std
xor
outsl
inc
xchg
jmp
ja
mov
idivl
push
jmp
cmpsl
add
iret
ja
add
xor
xor
mov
popf
aad
jne
mov
dec
lret
xchg
and
xor
outsl
cmovb
mov
jb
je
lea
fildll
pushf
pop
outsb
push
push
arpl
stos
mov
inc
mov
pop
push
xchg
mov
xchg
in
pop
movsb
scas
lret
ljmp
movsl
and
int3
cld
lods
negb
inc
fiaddl
adc
and
ja
pop
mov
cmp
push
test
shl
ss
or
mov
dec
add
stc
int
jle
lea
pop
xchg
test
lods
testb
lret
out
sbb
fs
dec
pop
sub
pop
clc
loopne
ret
inc
ss
pop
cmp
bound
dec
push
dec
jge
and
fdivrl
cmc
hlt
mov
dec
lahf
int3
arpl
add
pop
ret
push
mov
or
pop
int
mov
enter
pop
cmp
iret
mov
cmovp
mov
mov
repz
movsb
mov
loope
and
rolb
add
xchg
sub
shrl
sbb
sub
in
in
xchg
jae
pop
lcall
and
sbb
repz
inc
add
mov
aaa
popf
dec
mov
lret
in
jno
int3
cmp
sbb
cwtl
negb
rcl
xor
in
xor
pop
scas
hlt
int3
ja
cs
int3
jl
or
mov
sub
lock
aaa
jl
mov
xor
cmp
jg
push
movsl
push
mov
jle
outsl
inc
and
dec
mov
and
mov
shrl
js
xchg
dec
mov
mov
pop
iret
cmp
or
add
sub
xor
fwait
mov
xchg
jl
in
test
loopne
inc
out
mov
leave
arpl
sbb
inc
push
and
js
mov
lock
ja
sub
sub
xchg
push
rcrl
frstor
es
cmp
inc
stos
sub
push
push
jae
adc
pop
mov
xchg
xor
cli
inc
mov
out
sub
pop
mov
push
add
stos
js
adc
rcrl
pop
push
outsb
xchg
push
cmp
xchg
fdivrl
lods
test
sub
out
cmp
enter
out
push
cli
push
clc
inc
dec
addr16
arpl
push
ret
rorl
push
stos
push
movsb
call
cmpsl
test
andb
inc
loopne
or
mov
sub
iret
in
sbb
and
das
lcall
pusha
nop
mov
sub
sar
jmp
pop
cmp
insb
jecxz
lds
xlat
int
inc
jmp
call
lret
push
add
clc
es
jo
mov
dec
rclb
and
call
pusha
das
mov
dec
mov
inc
dec
test
call
or
popf
sbb
jle
mov
mov
aaa
cwtl
xchg
xchg
mov
and
pop
lret
and
rclb
test
call
jo
cmp
push
pop
cmpsl
xor
out
jbe
cmp
jge
cmpsb
pop
outsb
pop
clc
lret
xchg
jo
enter
mov
cwtl
jg
adcb
dec
movups
pushf
xor
mov
shlb
or
dec
xor
adc
leave
add
loop
mov
mov
xor
inc
sub
sbb
jl
dec
int3
divl
fnstcw
or
sbb
or
jg
aad
jge
sub
daa
inc
adc
jne
clc
loope
jno
xchg
data16
push
incb
jle
sub
adc
cmpsb
push
adc
shll
adc
mov
adc
and
jg
nop
imul
dec
xchg
xor
adc
ja
hlt
push
aad
out
or
xlat
inc
inc
imul
cli
inc
stos
dec
cmpsb
inc
insl
loop
ja
jge
mov
and
push
xor
enter
lcall
fisubs
dec
pop
lock
scas
mov
call
cmp
mov
pop
gs
push
call
cld
int
std
repnz
clc
pop
dec
cltd
loop
test
mov
and
or
jmp
loope
sbb
push
ja
dec
addr16
sub
enter
jae
and
jns
mov
cmc
pop
fldl
cmp
lods
lods
out
sbb
or
sub
cmp
aaa
push
pop
dec
cmpsl
jns
mov
or
fiadds
pop
jnp
cmpsl
ds
sbb
adc
cltd
jo
adc
idivl
std
jmp
cmpl
out
add
jb
mov
nop
iret
fsubrs
shl
jle
dec
or
add
fisubrl
jnp
mov
xchg
cld
push
push
pop
shll
and
arpl
outsl
dec
jne
loopne
adc
adc
int3
adc
dec
cmp
outsb
xor
jecxz
sub
lea
lahf
fldenv
mov
pop
adc
loop
repnz
test
into
iret
jne
xchg
pop
or
and
push
js
out
lods
frstor
out
mov
insb
pop
mov
ljmp
cmp
xchg
shlb
inc
xor
in
pop
mov
jecxz
mov
sti
in
push
orl
lds
incb
and
imul
fprem
push
adc
test
xor
sarl
and
jae
pop
pop
lahf
fldcw
cmp
rcrl
cwtl
insb
add
shrb
insb
icebp
or
lods
sub
pushf
mull
sti
lock
insb
inc
mov
popf
rcrb
fcmovu
xchg
dec
pop
xor
jns
call
push
popf
cmpsl
scas
xchg
imul
out
adc
sbb
pop
sub
jnp
outsb
push
xor
nop
pop
jns
sar
jg
fidivrl
sbb
xor
arpl
lods
sbb
fnstenv
adc
mov
jg
sbb
call
in
pop
pop
mov
xchg
adc
sbb
or
xor
and
xchg
mov
icebp
xchg
dec
add
out
shlb
push
ret
rcr
mov
cmp
push
loopne
aam
loope
test
pop
jmp
sbb
sbb
add
add
clc
mov
push
shrb
sbb
push
fildl
add
add
mov
sbb
mov
jb
lds
dec
mov
dec
xor
lods
dec
lret
push
xchg
lret
ret
adc
lea
dec
xchg
push
fmull
dec
sti
mov
push
push
mov
call
inc
xchg
inc
sub
ljmp
sub
mull
mov
cltd
dec
lock
inc
pusha
hlt
repz
mov
push
in
das
add
add
mulb
rcll
ja
lcall
adc
scas
or
jns
ja
jne
xor
lret
jnp
jae
pop
xchg
in
inc
jns
int
xchg
shrb
aaa
pop
xlat
scas
inc
testb
jae
jl
movsb
fs
imul
push
adc
pop
xchg
outsl
into
sets
add
in
push
roll
outsl
mov
ret
mov
xor
push
and
and
scas
add
out
jp
faddl
lahf
insb
jae
dec
sahf
testl
arpl
fsts
loopne
std
es
and
mov
lea
stos
sub
sahf
sbb
js
std
xor
out
or
xor
lahf
insb
les
xchg
rcl
jb
mov
enter
iret
mov
xchg
stos
sub
psubb
int3
and
mov
mov
mov
xchg
addr16
mov
push
xchg
outsl
pop
xor
enter
xor
and
jge
enter
fs
mov
mov
ljmp
mov
ret
pop
push
mov
hlt
inc
jnp
mov
cmp
mov
mov
dec
jl
mov
shrl
push
and
jns
push
dec
js
xchg
mov
orl
add
push
mov
cltd
ja
adc
in
sbb
push
arpl
or
rorb
loop
push
lret
mov
sti
cmpsl
shll
mov
adc
mov
sub
xorl
push
test
mov
je
cmpsb
andl
les
movsl
les
xor
stc
mov
sbb
push
jecxz
or
push
mov
ficoml
repz
sahf
or
and
lods
clc
sbb
sbb
mov
dec
out
mov
or
xor
jl
iret
int
cmp
jbe
lret
inc
call
repnz
jg
mov
fwait
inc
mov
xor
addr16
pusha
out
fildl
mov
adc
sub
test
ret
test
and
lds
lcall
adc
ljmp
cli
int
lea
daa
ss
or
sbbb
inc
inc
mov
outsl
das
pop
lods
jb
dec
in
sub
xor
int
les
fwait
test
stos
mov
dec
mov
sti
or
fwait
pop
xor
mov
js
pop
in
clc
rcr
add
dec
mov
pop
in
pop
call
fcmove
fdivr
cmp
jae
mov
lods
jle
aam
inc
addr16
jp
out
sub
mov
clc
repnz
cld
adc
cltd
stc
mov
ds
xchg
es
ret
xchg
sbb
xor
les
adc
enter
out
mov
pusha
mov
mov
push
jecxz
pop
mov
xchg
test
imul
imul
and
test
mov
fld
test
dec
loopne
push
adc
std
popf
jl
and
jmp
stos
push
out
xor
or
jmp
and
push
shrl
test
push
rep
loopne
sarl
adc
popa
xchg
and
repnz
add
mov
data16
jb
ficomps
mov
xor
imull
add
mov
xor
popa
fadds
and
out
mov
fists
dec
addr16
sub
cmp
aas
cltd
lock
add
pop
xchg
pop
xchg
push
inc
mov
fsubrl
cmp
es
mov
jb
and
mov
cmp
xlat
ljmp
push
adc
mov
call
or
out
std
hlt
pop
pusha
mov
and
or
push
pop
sti
mov
fists
jbe
fs
mov
mov
andb
popa
push
dec
das
jbe
lods
inc
mov
test
rcrl
shrb
and
leave
jle
push
adc
inc
mov
dec
sub
popa
pop
pop
jecxz
sbb
sbb
sahf
xor
jno
ss
add
int
jno
gs
not
dec
pop
sbb
out
cltd
stos
pushl
into
jmp
jmp
data16
xlat
mov
insl
adc
sbb
fwait
fs
xchg
test
jmp
xchg
mov
repz
mov
enter
rorb
mov
and
sub
imul
mov
or
jmp
cmp
imul
or
and
dec
vpacksswb
push
fnstsw
pop
xlat
ljmp
icebp
sub
add
mov
popa
xchg
xchg
cmp
jne
ja
inc
sete
call
lock
test
sub
mov
loopne
sbb
inc
xor
andb
push
mov
repz
push
mov
lahf
call
andb
andb
mov
icebp
popf
xlat
arpl
xchg
les
popf
cmp
dec
push
imul
addr16
pop
sbb
test
sbb
sub
add
in
dec
test
and
add
mov
std
cmc
cmp
rclb
test
push
dec
xor
mov
sbb
movsl
pop
bound
sti
sub
stos
dec
push
cwtl
outsl
ljmp
xorl
cld
mov
and
xchg
mov
out
jns
cld
scas
jmp
aam
lds
mov
out
dec
dec
ret
and
pop
inc
test
add
in
adc
adc
pop
leave
xor
xchg
shl
and
xchg
jae
pop
cmp
inc
cmp
fisubs
push
add
dec
mov
scas
adc
pop
or
jbe
add
inc
shrl
mov
sub
aaa
addr16
imul
sub
mov
bound
in
shl
sub
pop
cli
gs
int3
jns
enter
into
and
dec
int
xor
add
jnp
ljmp
ret
sahf
xorb
lea
fdivrs
pop
jno
loope
jb
xor
mov
sbb
out
mov
ss
test
icebp
xchg
push
pop
jbe
mov
push
adc
adc
sub
rcr
xchg
push
stc
push
enter
icebp
imul
push
adc
and
sbb
push
push
mov
mov
xchg
fs
xor
fdivrs
xchg
xor
in
xchg
xchg
jo
push
add
sub
loop
data16
pop
imul
lret
push
rcl
sub
dec
jb
jnp
jnp
push
inc
addr16
fbld
mov
adc
subb
sbb
jnp
iret
clc
std
rcll
shll
jns
push
aas
dec
mov
or
pop
add
ss
shll
mov
insl
ljmp
and
jle
jnp
mov
adc
mov
mov
dec
test
lea
cwtl
pop
inc
cs
imul
inc
jno
popf
lods
jmp
add
jg
mov
fwait
xor
out
inc
test
add
fldl2t
lea
mov
xor
dec
scas
inc
shrb
inc
jge
lahf
mov
cmp
ret
jge
sub
adc
dec
adc
cmpb
mov
imul
xlat
lea
pop
pop
xor
jl
int3
inc
add
sbb
movsb
push
in
add
jnp
shlb
mov
aas
xchg
mov
cli
shl
fdivrl
hlt
es
push
fwait
and
sti
dec
jecxz
pop
out
xchg
lods
dec
pop
xchg
ss
insb
push
dec
pushf
int3
dec
jae
inc
idivb
push
lret
fstps
jnp
rolb
adc
lock
mov
xchg
out
push
enter
mov
test
or
and
jns
into
sub
mov
ljmp
lods
pop
fiaddl
and
jns
sbb
jae
jmp
dec
or
and
orb
add
xlat
push
test
clc
outsl
xchg
sub
jb
push
mov
outsl
sub
add
adc
sub
and
ret
mov
add
pop
sub
and
rclb
sahf
int
inc
mov
add
insl
call
inc
scas
imul
adc
push
addb
push
test
inc
aaa
pop
test
sbb
popf
mov
xchg
jmp
add
lahf
adc
in
enter
jmp
xchg
pop
sbb
xor
mov
sbb
in
xchg
arpl
mov
dec
and
ret
cmp
and
add
add
into
icebp
xlat
xchg
dec
inc
cwtl
xor
into
filds
fisubrl
ja
shrl
bound
nop
pop
fcmovnbe
jo
int
xor
push
lcall
inc
sti
in
lods
xor
sbb
lds
mov
mov
inc
cmp
mov
add
in
dec
jl
lods
loopne
mov
xor
loopne
stc
or
adc
jp
sbb
sbb
fisttpll
or
out
sbb
adc
xchg
push
jp
out
in
mov
daa
cmp
das
mov
into
movsbl
jnp
pop
mov
adc
in
imul
and
pop
mov
int3
jmp
and
out
sub
test
pop
xor
or
outsl
loope
imul
xchg
test
sarb
ja
jns
mov
cmc
cli
cwtl
pop
lret
adc
dec
movsb
xor
xor
enter
inc
fwait
add
out
push
lret
ljmp
mov
insl
cmpsl
xor
push
leave
imulb
sarl
xchg
cmp
mov
aad
daa
sarw
cli
xor
or
push
push
jmp
pushf
dec
dec
into
push
sti
ret
jle
or
ss
jb
lods
into
rol
fcomps
sub
mov
fs
js
or
fnstcw
dec
add
xchg
sub
add
and
xchg
mov
icebp
xchg
mov
xchg
pop
xor
ja
mov
sub
push
orl
adc
mov
cwtl
sahf
lock
sub
lods
cld
mov
push
dec
fistps
xor
jne
ret
xor
aas
aam
inc
les
fwait
pop
scas
cld
adc
pop
xchg
sub
in
insl
outsb
mov
add
mov
shrb
outsl
lret
int3
icebp
jae
stos
jle
sub
mov
push
xchg
movl
out
pop
sbb
push
xor
jge
sti
xchg
out
rcrb
and
int
sti
xor
pop
loop
jecxz
lods
pop
adc
aad
and
lret
test
pop
add
cltd
or
sarb
xchg
mov
adc
rolb
into
outsb
and
cltd
jle
or
push
add
js
into
lahf
out
mov
dec
cs
push
lds
std
cltd
ja
mov
xlat
push
mov
pop
mov
inc
dec
test
sbb
hlt
lcall
outsb
shrl
pop
sub
out
test
push
dec
loope
inc
stc
cwtl
xchg
jmp
enter
add
jp
jp
and
insl
sbb
adc
jb
mov
mov
mov
imul
mov
and
add
es
outsb
push
pop
jns
test
push
mov
in
stc
inc
and
pop
adc
sub
icebp
sub
xorb
mov
push
xchg
add
fstl
mov
fxam
jle
pop
in
lret
loope,pn
jl
int
mov
lret
push
pop
pop
add
loopne
mov
mov
repnz
lods
test
or
sub
add
cmp
roll
mov
pop
jge
inc
dec
ret
mov
dec
add
mov
bound
cmp
hlt
adc
and
arpl
addr16
inc
cli
ljmp
int3
sarl
cmp
popa
dec
xchg
decb
sub
std
add
add
push
sbb
mov
cmp
sbb
mov
js
mov
cld
add
loop
and
sub
fwait
lret
rcrl
jg
cmp
repnz
inc
cwtl
stos
hlt
cltd
bound
fldl
sbbl
adc
ud0
mov
inc
cmp
sbb
add
pop
ja
push
fisttps
push
cmp
mov
ss
in
flds
pushf
lret
or
iret
scas
cs
dec
pop
ja
ds
lea
test
mov
lods
mov
out
or
sahf
subl
loopne
cmp
xchg
loop
sbb
out
and
mov
scas
in
xor
mov
mov
add
pop
dec
jns
push
xlat
stos
mov
sub
loopne
jno
das
dec
pushl
jp
cmp
lock
sbb
adc
cmpsb
scas
add
sub
sbb
sub
es
jbe
testb
cmp
loop
clc
test
jne
push
mov
push
push
inc
inc
xorl
int3
xchg
mov
lcall
sti
push
adc
mov
popa
daa
lea
popf
pop
es
leave
gs
jg
xor
outsl
sti
popf
rcrb
mov
insb
rclb
jp
inc
aaa
jbe
icebp
shl
lret
mov
cmp
xchg
mov
pop
xchg
sub
and
in
ljmp
or
stc
dec
xchg
push
cli
lea
pop
add
cmpsl
repnz
sbb
and
adc
das
pop
inc
mov
fucomp
aam
in
adc
push
or
add
mov
mov
mov
mov
push
mov
mov
scas
andl
xchg
mov
enter
jb
push
pop
pop
mov
ss
pop
mov
sub
xorl
jne
xchg
sbb
scas
sbb
push
sub
mov
inc
fsubr
push
mov
mov
rcll
mov
add
mov
test
adc
or
mov
inc
lods
mov
xchg
mov
inc
lahf
shrl
mov
sbbb
or
add
lahf
cmc
insl
lods
sub
cmpsb
push
fisubs
fwait
stos
dec
mov
and
xchg
lods
int
mov
add
add
adc
in
repz
stos
pop
ret
adc
aam
icebp
imul
out
mov
outsb
imul
adc
int
or
lods
repnz
cmp
daa
stos
dec
movb
jle
outsb
push
aam
sbb
jns
inc
sbb
lds
imul
pop
in
adc
cmc
mov
and
xchg
js
add
sbb
cmp
pushf
cmpsb
dec
pop
rcll
xchg
and
mov
adc
jo
cmp
mov
xor
decb
cltd
sbb
pushf
mov
dec
cmp
push
xor
scas
xchg
xchg
call
stc
je
push
or
lret
adc
es
cli
fbld
sti
divb
push
stos
lcall
int3
imul
maxps
testb
add
sub
ret
test
test
lock
sub
scas
out
and
adc
in
jp
insl
add
push
sbb
or
push
inc
or
cmp
leave
ja
iret
fwait
add
inc
std
cmp
imul
mov
stc
ds
lret
imul
pop
stos
jl
repz
pop
and
mov
pop
repnz
stc
je
inc
mov
add
push
hlt
xorl
sbb
cmp
or
shll
dec
scas
test
into
cmc
xor
mov
pusha
out
jb
push
and
scas
inc
pop
mov
fcomps
in
push
mov
js
ret
jb
dec
push
jl
jae
fisttpl
mov
shlb
xchg
sahf
mov
aad
pop
add
xchg
fstpt
aaa
jmp
repz
and
jp
jae
aad
pop
sti
call
aam
pop
add
enter
mov
ds
outsl
arpl
mov
int
cmp
test
aad
out
ljmp
add
and
call
mov
xlat
add
sbb
and
mov
pop
jnp
bound
pop
je
pop
xchg
test
nop
push
jns
mov
dec
add
adc
aad
mov
and
mov
adc
adc
xchg
stos
inc
dec
sbb
sub
xchg
gs
mov
fsub
push
test
and
jnp
jp
nop
mov
scas
js
inc
shll
xchg
and
xchg
out
inc
clc
test
pop
cmc
mov
pushf
push
fstl
mov
aam
in
xchg
mov
outsl
out
adc
cli
sub
mov
xchg
leave
jns
pushf
sbb
sahf
sub
pop
das
fcoml
sbb
popa
xor
cmp
daa
aas
and
mov
mov
test
mov
mov
scas
lods
push
xorb
add
push
les
cmpsl
add
shl
jmp
jmp
pop
fsubrs
cmc
adc
nop
ffree
mov
xchg
jl
xor
and
sbb
mov
outsl
cltd
out
mov
sbb
lret
shr
cmpsb
xor
cmpsb
add
mov
pop
insb
divb
mov
mov
inc
mov
in
in
aad
pop
xchg
fsubp
jg
and
mov
inc
stos
jne
inc
sti
xchg
mov
cwtl
js
fwait
shl
mov
inc
sti
add
xor
add
adc
add
cmpsb
xchg
or
shrl
adc
cwtl
adc
sbb
fidivs
inc
push
repnz
sbb
loop
lods
es
cwtl
aam
jg
mov
mov
adc
xchg
push
js
mov
nop
addb
jb
mov
push
cmc
inc
jbe
xchg
fbld
sub
or
or
pop
lods
insb
dec
xor
lcall
ret
add
mov
dec
mov
jl
cld
sub
adc
adc
xchg
out
add
es
mov
sub
int
or
ror
aas
loopne
or
mov
dec
adcl
mov
xchg
add
in
and
dec
xor
cmp
sub
out
mov
repz
popf
sti
cmp
cld
sbb
fisttps
xor
fistl
pop
insb
fstp
jmp
int
sub
mov
and
cmc
in
test
stos
mov
in
shlb
mov
mov
in
add
ret
movsl
push
and
popf
out
inc
leave
mov
pop
dec
push
lea
and
mov
mov
sbb
js
dec
push
pop
out
mov
mov
shlb
call
lods
mov
mov
stos
mov
sbb
mov
pop
and
icebp
enter
cmp
and
int
push
lcall
or
mov
enter
cmp
add
adc
mov
ror
pop
in
xor
push
out
push
fs
inc
or
pop
iret
fld
out
and
sub
loope
mov
imul
push
mov
ret
insl
cmpsl
shl
sub
lret
mov
test
mov
xorl
and
cmp
cltd
push
addr16
xor
sub
mov
xchg
fnsave
cmp
cmp
adc
add
and
dec
bound
bnd
and
leave
ret
lahf
and
dec
insb
imul
pop
pop
mov
rolb
jbe
test
sub
aas
or
out
push
fcomi
out
mov
js
dec
lcall
fidivrl
std
pop
mov
mov
pop
test
sbb
mov
inc
adc
movsb
hlt
mov
sub
mov
ret
mov
outsl
add
jmp
jns
mov
mov
lahf
lods
push
or
insb
mov
es
pushf
es
sub
fs
lcall
pop
cmp
dec
xchg
inc
leave
call
or
pop
mov
cmpsb
jecxz
and
cmpsl
popf
enter
es
ss
testb
sbb
arpl
add
pop
push
daa
movsb
outsb
je
inc
hlt
xchg
scas
addb
jbe
jno
or
in
dec
mov
in
mov
ds
mov
xchg
lock
lret
inc
fisubs
dec
inc
dec
and
iret
int3
dec
sbb
xchg
int3
xlat
xchg
inc
loopne
stos
stos
pop
jl
push
mov
test
xchg
push
dec
sub
fisubrs
inc
daa
mov
adc
sub
addr16
or
add
fs
in
icebp
cs
inc
adc
aam
mov
jle
test
add
push
dec
cmp
push
xchg
sbb
movsl
push
or
test
ret
xchg
int
std
jae
std
sub
mov
xchg
push
jl
cmp
add
out
push
lds
and
jmp
mov
jcxz
adc
mov
loop
or
rcll
inc
sub
ffreep
clc
lret
out
push
add
inc
inc
shr
or
pop
jbe
jecxz
and
xor
pop
push
dec
inc
subl
sbb
sub
repz
adc
inc
mov
rorb
js
inc
les
push
leave
es
fidivs
repnz
aaa
fdivr
push
sbb
incb
cwtl
jbe
and
mov
dec
sub
insl
dec
lea
mov
pop
shr
out
dec
sub
pop
je
addb
jbe
jno
cli
adc
sbb
js
add
xor
pop
mov
mov
mov
inc
sbb
jae
stos
add
inc
xchg
test
xchg
mov
stos
sub
loopne
jbe
xchg
push
test
mov
es
or
sbb
push
xlat
mov
mov
hlt
adc
mov
jno
sbb
sbb
mov
es
scas
jge
clc
jns
test
mov
stos
mov
outsl
sbb
mov
into
fildll
or
pop
adc
hlt
mov
les
imul
jne
test
frstor
jbe
push
push
sahf
xor
test
push
repnz
xor
adc
adc
xor
rol
lods
dec
cwtl
push
xor
cltd
inc
mov
nop
cli
insl
icebp
mov
add
sbb
dec
stos
stos
mov
ret
dec
into
arpl
xchg
or
nop
sbb
test
movsb
orl
dec
push
sbb
dec
movsbl
jmp
mov
in
decb
cmpsl
xchg
mov
pop
mov
inc
out
inc
dec
dec
jg
js
mov
and
cs
imul
stos
and
or
fcoml
adc
out
inc
inc
or
push
cmp
xchg
pop
xor
test
movsl
push
and
in
repnz
pop
xchg
adc
test
test
adc
mov
cmp
test
roll
outsb
xor
and
fstps
push
push
cmpsl
jp
insl
push
loope
stc
pop
pop
aad
mov
mov
lret
pop
lods
popf
mov
dec
sbb
fdivrs
xor
xchg
mov
push
mov
xor
cmp
mov
push
sti
mov
gs
jl
scas
xchg
sti
push
inc
pop
out
icebp
aas
subl
nop
jns
mov
pop
fs
and
ret
fwait
shrl
addr16
test
mov
lret
mov
out
pop
into
mov
mov
iret
or
lret
xchg
xchg
repz
shlb
jno
and
sbb
mov
pop
pop
daa
scas
ja
out
aaa
shlb
and
and
jg
mov
clc
adc
cmc
pushl
out
mov
movsl
add
ret
lods
arpl
test
mov
jne
ljmp
inc
in
sbb
add
jmp
xchg
push
cmc
lods
sbb
popa
movsl
sub
sbb
dec
sub
pop
cmp
mulps
jp
mov
es
cltd
fwait
sub
repz
xor
xchg
stos
sahf
dec
lahf
jp,pn
cld
add
loopne
or
pop
ficoms
sub
loop
adcl
jo
jl
scas
shrl
xor
xchg
cmp
in
stos
and
xchg
push
into
jbe
sub
in
jecxz
sub
mov
orl
js
sbb
jp
mov
pop
test
or
mov
lods
mov
xchg
jbe
mov
mov
xchg
cmpsb
fcmovu
xor
insb
inc
std
lret
fstpl
mov
cs
add
inc
cmpsl
sub
js
or
mov
stc
mov
loopne
jne
add
or
jbe
mov
mov
mov
sbb
cmp
cld
push
push
scas
in
push
test
ljmp
sub
sub
xchg
das
and
sub
and
std
out
je
xchg
and
aas
mov
movsb
call
loope
pop
loopne
into
mov
mov
mov
or
fadds
repz
incl
jo
xlat
scas
cmp
push
or
outsb
dec
imul
loopne
dec
mov
pop
stc
lret
push
loope
in
mov
mov
cmp
stos
ret
xchg
imull
jge
sub
pop
es
outsb
jl
jg
aaa
sub
xor
pop
jno
xor
inc
dec
jmp
add
xchg
test
push
mov
in
cmp
add
outsl
xchg
jo
dec
gs
dec
test
inc
je
cmpsl
in
and
fildll
out
mov
fs
mov
scas
push
addb
xchg
mov
push
sbb
mov
push
xchg
into
rcrl
and
nop
sbb
or
pushf
lret
push
sub
idivl
shrl
ret
ja
and
in
mov
lret
lret
lret
cwtl
xorb
mov
sbb
push
mov
sub
das
lret
les
pop
push
push
lea
lods
dec
fs
repnz
out
mov
dec
fstpl
dec
lods
inc
xchg
lret
push
sub
stos
mov
adcb
movsb
inc
pop
add
add
cmpsb
ss
and
popa
js
lret
in
sarb
jne
push
mov
in
test
pop
insl
in
push
mov
popa
das
mov
dec
cmp
sub
out
and
gs
mov
inc
aaa
mov
pushw
adc
cmc
jo
push
jb
pushf
cmpsb
lds
mov
push
dec
jmp
jecxz
test
clc
call
sbb
adc
lds
sub
out
jp
movsb
fdivl
and
xor
dec
sahf
mov
loop
pop
pusha
outsl
scas
sti
out
gs
mov
loop
int3
jae
out
popf
lods
bswap
jmp
cld
mov
jo
idivb
por
lods
es
andl
lea
add
xchg
inc
lret
xlat
dec
jl
les
in
cmc
dec
jnp
fsubrs
mov
inc
data16
mov
cmp
les
pop
push
sub
dec
push
ret
in
lea
std
pop
mov
fwait
insl
scas
outsl
call
jno
mov
pop
lock
adc
test
xor
mov
and
aas
popa
pop
mov
add
pop
add
push
in
arpl
add
mov
sub
fistpll
xchg
ret
jnp
daa
jae
inc
adc
push
dec
sti
rorb
inc
std
pop
and
sub
in
movsl
inc
xchg
push
jmp
repnz
stos
inc
mov
xor
add
sbb
push
mov
pop
xchg
add
push
ds
jecxz
mov
hlt
fucomi
add
push
shrl
in
popf
fisubs
add
subb
test
dec
mov
lods
fidivl
outsb
lea
mov
cmc
xchg
jmp
push
or
dec
sub
add
mov
icebp
xchg
call
xlat
icebp
or
mov
fsubrp
arpl
push
add
inc
mov
xchg
cltd
iret
imul
cmp
mov
sbb
push
enter
push
adc
cld
push
stc
pop
stc
outsl
sub
in
inc
xchg
ficompl
loopne
addr16
jmp
and
jno
into
push
addl
xchg
push
jb
pop
sbb
lret
or
xor
into
test
into
cmpsb
mov
cmp
xchg
sbb
js
sbb
xor
and
adc
pop
mov
dec
mov
loop
outsl
dec
js
xor
jg
out
jmp
push
push
push
gs
rolb
popf
or
push
std
sub
in
push
fwait
mov
std
jne
addb
mov
sub
orb
aad
pop
test
pop
mov
sarl
and
lcall
or
push
mov
repz
xchg
imul
mov
scas
cltd
jnp
std
in
shr
or
inc
mov
sub
fs
pop
sahf
sub
push
dec
test
insb
adc
mov
add
jno
and
ss
movsb
leave
push
lahf
jnp
jge
mov
sbb
add
call
jns
divb
push
icebp
dec
mov
mov
pop
hlt
cmp
xchg
and
shll
inc
fwait
xchg
push
mov
leave
es
ds
adc
rol
mov
fs
test
inc
sub
outsb
iret
mov
call
scas
loope
lods
adc
sahf
arpl
loopne
pop
nopl
mov
mov
stos
popf
lds
in
jbe
jo
int
xchg
pop
enter
fsub
roll
sar
cmpsl
dec
push
arpl
fdivr
test
movsb
jo
ret
shll
ret
adc
mov
adc
idivl
nop
cld
lods
pop
jbe
pop
cmp
popf
add
adc
out
push
mov
xchg
cmc
ret
and
hlt
stos
data16
cmp
in
out
or
imul
pusha
mov
lods
aad
rcll
mov
orl
movsl
inc
add
lahf
fwait
popf
fistpll
repz
loope
push
and
test
mull
addl
insb
push
scas
xchg
mov
movsb
mov
sub
loop
sbb
cmp
negb
dec
or
outsb
add
leave
pop
jl
add
in
loopne
call
sahf
dec
and
std
pop
mov
lods
cli
sti
add
lea
outsb
inc
outsb
mov
push
cld
insl
inc
stc
cmc
fbstp
or
movsl
xorl
or
sbbl
popf
xchg
push
outsb
inc
sub
aad
pop
subl
add
loopne
xchg
test
xchg
lods
cli
mov
jle
ljmp
jg
jmp
inc
test
jo
cmp
xchg
out
clc
addl
cld
sub
push
mov
les
push
xchg
scas
xchg
fisttpl
imul
xchg
scas
aaa
popf
sbb
dec
scas
movsl
add
sub
sub
pop
mov
pop
sbbl
out
outsl
fsincos
mov
push
jl
ret
sti
cmc
fnsave
lods
mov
sub
cmpl
jle
sbb
stos
push
pop
lds
cmc
icebp
push
mov
and
pop
add
jg
scas
scas
sub
sub
insl
leave
pop
fstpt
push
inc
pop
in
push
in
adc
dec
inc
push
popa
fisubl
in
inc
in
dec
fidivrs
mov
xorb
cmpsl
mov
xchg
add
sub
cmp
mov
sbb
xchg
or
inc
idivl
lcall
cmp
ret
sbb
int3
notb
sbb
pop
lods
ret
insl
mov
cli
stc
out
or
ret
insw
aad
adc
sbb
add
aas
mov
js
repz
mov
sahf
std
lock
shll
pop
adc
repz
sub
inc
hlt
cmp
inc
subl
dec
loopne
adc
adc
dec
fstl
lret
add
mov
and
mul
andl
dec
testb
jp
lods
xor
dec
lea
jbe
lret
movl
cwtl
sbbb
daa
lret
scas
or
insb
dec
lahf
and
push
iret
cmp
inc
push
add
inc
push
call
dec
lret
insb
out
ja
jg
mov
and
pop
shrb
std
jp
sub
jle
jmp
sti
loop
sub
dec
and
repnz
inc
test
rcll
add
jno
loopne
xor
or
mov
mov
nop
mov
cmp
cmp
out
push
fisubs
je
cs
jecxz
dec
push
mov
cmp
pop
inc
xchg
ljmp
jno
push
add
lret
iret
in
idivl
cs
and
lds
jmp
test
xor
ljmp
lret
mov
outsb
pop
dec
xor
pop
jno
pop
pusha
pop
js
jb
mov
stos
add
push
enter
xchg
jecxz
orb
test
out
dec
mov
stc
dec
fnstsw
sbb
pop
fwait
xchg
cli
dec
dec
xor
or
fs
out
fistpl
andb
or
hlt
ljmp
mov
mov
hlt
mov
xor
out
hlt
iret
cltd
or
int3
pop
jg
xor
leave
adc
pushf
xchg
xchg
xor
cli
mulb
sub
jp
adc
lret
adc
pop
lcall
es
fs
xor
push
and
jb
ret
stos
adc
cmp
fimuls
mov
hlt
and
into
push
xchg
loopne
pop
pop
xlat
cmp
bnd
gs
xchg
in
rorl
jl
subl
shll
mov
adc
and
or
jnp
xchg
notb
loope
jb
fldt
insb
in
fwait
adcb
es
inc
rcrl
sub
pop
jecxz
loop
mov
mov
ljmp
daa
mov
jl
add
stos
xor
mov
scas
outsl
xor
xor
filds
cmp
leave
mov
fdivr
xchg
or
fadds
jne
push
out
sub
fcoml
loop
sub
pop
jno
pop
xchg
stos
std
push
pop
xor
fildl
dec
pop
std
add
cmpsb
or
jp
mov
lret
js
ss
jbe
xchg
les
adc
add
popf
inc
jmp
add
mov
rcrl
pop
mov
mov
iret
push
repz
jl
rclb
xor
addr16
push
insb
in
pop
inc
rolb
xchg
or
inc
adc
xlat
mov
iret
cwtl
call
pop
mov
pop
push
fcompl
push
push
cmp
pop
mov
mov
xor
dec
sub
ja
adc
cmp
lret
outsl
pop
xor
into
mov
push
repnz
testl
adc
xchg
fwait
xchg
or
mov
nop
repnz
xchg
aam
dec
or
push
jb
clc
jnp
mov
sbb
jle
movsb
pushf
fdivr
pop
xor
out
fwait
subl
repz
and
xchg
xor
ret
push
mov
mov
inc
fidivrs
loopne
in
loopne
cld
and
insl
inc
sbb
test
xchg
lahf
imul
lods
sbb
sbb
inc
insb
dec
push
arpl
and
rcr
test
into
sarb
ret
lds
int
cs
sbb
dec
dec
push
stos
lock
outsb
dec
jo
in
int
lcall
mov
and
pop
pushf
sbb
adc
mov
dec
jae
xchg
jne
push
inc
and
test
lods
sbb
flds
gs
sbb
and
aas
testl
fmuls
sti
loopne
aad
mov
sar
stos
ret
fistps
inc
pusha
inc
jo
inc
xor
iret
cs
xor
mov
in
loopne
jnp
out
pusha
popa
je
loop
pushf
cmp
arpl
inc
mov
movsl
mov
jl
push
outsl
lds
add
cli
jns
mov
cwtl
cmp
add
and
pusha
gs
ds
into
jecxz
outsl
cmc
pop
cmp
mov
push
cld
lret
aaa
pop
pop
xchg
pop
dec
fidivs
cmp
dec
pushf
dec
mov
push
and
out
push
adc
pop
pop
loopne
mov
mov
inc
daa
xorb
insl
jmp
pusha
jno
cmp
ror
jnp
jmp
rorl
and
rcrb
sbbb
fs
inc
pop
sub
in
pop
xchg
xor
xchg
mov
xchg
mov
int3
fldcw
xchg
xchg
mov
cli
mov
jecxz
push
sbb
sub
dec
fildl
cmp
ja
adc
push
fucomi
ret
call
aas
js
cmc
gs
mov
out
adc
inc
mov
jecxz
dec
xor
fcomi
mov
popa
mov
js
shlb
mov
fldt
pop
adc
and
mov
dec
into
out
ficoml
iret
push
push
push
loope
imul
call
pop
aad
fistps
cmp
mov
adc
xchg
xor
cli
outsl
xchg
dec
cld
mov
add
mov
mov
xchg
cmp
pushf
add
test
dec
xchg
std
aaa
in
call
movsl
imul
bound
adc
inc
loop
xchg
jl
jp
push
inc
sub
and
popa
cwtl
lret
out
pop
cld
mov
push
shrl
mov
lcall
fstl
clc
dec
lods
in
sub
movsl
shlb
cld
jno
negl
adc
add
lcall
lret
inc
testl
daa
into
icebp
hlt
mov
and
sub
js
pop
das
and
outsl
pop
fwait
pop
jne
push
mov
cwtl
ljmp
orl
sahf
mov
lret
lea
adc
fs
ja
dec
lahf
vphaddudq
mov
xchg
mov
insb
dec
cmpsb
cli
enter
push
mov
pushf
add
add
and
xchg
mov
ds
adc
les
sbb
inc
adc
or
mov
pop
jmp
mov
cwtl
xlat
into
int
into
cmp
or
add
jb
xor
inc
mov
jnp
jl
mov
fcmove
sub
xchg
add
outsb
jbe
in
ret
rcl
jg
into
fidivs
cmpsl
lcall
xchg
mov
daa
fisttps
lea
scas
test
inc
in
push
fbstp
std
jg
pop
mov
push
jmp
enter
mov
xlat
out
sti
out
ret
cwtl
pushf
maxps
stc
fwait
js
mov
push
std
push
adc
inc
mov
add
fs
fs
sbb
pop
pop
add
sub
rolb
mov
movsb
and
loopne
dec
not
xchg
xor
xchg
inc
xchg
dec
cld
scas
pop
hlt
in
dec
rolb
sbb
or
stos
pushf
push
jno
inc
push
inc
inc
aaa
xlat
fidivl
loopne
fdivrl
scas
stos
jle
jae
lock
mov
mov
inc
test
push
fstps
popa
stos
and
imul
or
jnp
add
pop
fdivr
fistps
mov
push
push
loope
lds
scas
cmp
adc
sbb
test
xor
inc
pop
pop
cmp
fcoml
mov
outsb
fucomi
mov
add
and
inc
sub
aad
inc
xor
dec
jns
outsl
cmc
repnz
in
cmp
sbb
add
sbb
pop
ficompl
adc
xchg
jo
pop
iret
cwtl
add
lret
fldl
ja
aad
cwtl
out
dec
and
cmp
lock
arpl
ror
push
icebp
cmpl
inc
cmpsb
mov
outsb
inc
repnz
jne
shll
sbb
cltd
mov
inc
push
loop
mov
jnp
int3
rorl
test
cmp
mov
mov
cmp
mov
dec
mov
mov
stc
jne
sub
lods
or
sbb
lret
test
dec
dec
pop
sti
shlb
rolw
ficoms
movsl
push
gs
and
fiaddl
ss
xchg
adc
push
inc
leave
push
jecxz
andb
imul
cmp
and
int
mov
loop
int3
adc
jns
shll
pusha
cmc
ret
mov
ret
pop
mov
std
scas
enter
test
cwtl
cltd
pop
call
fwait
and
dec
sar
jg
pop
rorl
int3
rolb
inc
dec
fidivrs
add
inc
bound
dec
sub
or
dec
gs
inc
pushf
imul
pushf
scas
and
mov
jl
mov
mov
mov
add
bswap
pop
cmp
unpcklps
dec
inc
andl
jo
mov
mov
push
mov
loop
xchg
lock
inc
shr
pop
jnp
testl
loop
xchg
ds
bound
sti
dec
enter
adc
scas
pop
jb
sbb
mov
mov
adc
loopne
popa
stc
jnp
loopne
xchg
movsl
dec
pop
out
pop
dec
and
fnstcw
ret
iret
mull
mov
xchg
fisubrs
or
jge
bound
or
sbb
xor
rclb
mov
jl
and
jmp
shll
je
testl
jns
cmp
add
test
es
inc
add
lods
hlt
xor
inc
shr
and
inc
mov
or
mov
jle
sbb
iret
mov
xchg
mov
pop
push
lods
inc
cmp
shrb
adc
sti
sbb
and
std
ja
je
jne
xchg
xor
fnstenv
push
test
and
push
push
mov
fucomp
dec
push
fcmovb
lea
add
or
subl
lock
popf
inc
and
mov
push
rcrb
lds
mov
mov
dec
and
pop
pop
ja
fiaddl
in
movsb
cmp
lods
pop
icebp
xchg
mov
ret
pop
mov
scas
out
ret
loop
clc
repnz
add
inc
orb
decl
fistl
mov
xchg
orb
mov
test
ror
push
mov
lcall
test
punpcklbw
cmp
dec
xchg
mov
xor
mov
pop
push
cs
cmp
inc
inc
add
xchg
ret
mov
add
fsts
in
outsl
mov
cmp
pop
mov
popf
pop
scas
pop
sub
enter
leave
jno
arpl
sbb
fnstenv
pop
jl
mov
push
mov
add
sub
fwait
adc
adc
xor
xor
xchg
adc
xorl
mov
mov
cmp
idivb
stos
cmp
push
pop
pushf
mov
mov
push
adc
mov
adc
xchg
ds
scas
mov
dec
mov
daa
push
mov
test
test
or
and
es
or
sbb
stos
in
jns
inc
rcrl
jne
sbb
or
inc
sbbl
jo
lcall
fwait
iret
xchg
xchg
out
cltd
fstpl
lea
jge
cli
sub
or
jns
fwait
pop
cmc
scas
push
xchg
loop
jmp
mov
fwait
add
sbb
mov
push
gs
add
mov
scas
loope
in
pop
push
stos
add
sub
mov
stc
test
loop
inc
cli
imul
movq
jae
xorb
adc
out
jns
inc
adcl
push
icebp
jmp
pop
bound
arpl
ja
lret
sahf
outsb
dec
xchg
sbb
inc
insl
pop
loope
push
mov
mov
fsubrs
or
dec
push
incb
addr16
ret
mov
sbb
int3
inc
adc
mov
ljmp
and
adc
or
sbb
inc
daa
inc
jbe
add
dec
push
mov
or
movd
xchg
testb
inc
outsl
add
pop
push
aaa
lret
ss
xchg
push
cmp
fwait
sbb
mov
popf
stos
roll
scas
lock
adc
scas
ret
in
add
repz
lock
adc
adc
arpl
sahf
popa
pushf
push
cmp
jge
jl
nop
pushf
scas
sbb
push
pop
ret
mov
and
daa
xchg
cmp
test
xchg
jae
cmp
xor
jae
jl
lahf
je
inc
or
cli
scas
sbb
jns
cltd
idivb
cs
jne
stos
stos
in
pop
orl
arpl
cmp
repz
pushf
and
daa
inc
mov
nop
mov
inc
sti
idivl
jno
iret
adc
cwtl
mov
jle
xchg
clc
cmp
sti
jl
push
andb
int3
sbb
pop
mov
dec
mov
ja
jne
cmp
xor
repnz
call
cmp
std
nop
lea
pop
cmp
stos
es
les
dec
icebp
in
mov
test
loop
dec
andb
aam
mov
sbb
or
fs
ret
xchg
outsb
adc
inc
lea
mov
sbbl
add
xchg
sub
test
loope
and
pop
in
sub
cmpsl
and
in
rcrb
and
enter
test
addr16
dec
fiaddl
mov
mov
sahf
mov
rorb
mov
inc
adc
dec
or
lahf
loopne
push
data16
fdivrs
jno
test
nop
mov
sbb
cmpsl
mov
aaa
movsl
dec
hlt
xchg
fcomip
in
ret
lret
push
pusha
test
mov
sqrtps
aaa
xor
inc
inc
sbb
rorb
jo
scas
inc
xchg
inc
xor
test
push
cwtl
data16
adc
mov
fwait
xor
adc
mov
fstps
imull
in
push
push
push
andl
mov
inc
daa
sbb
mov
and
sbb
pop
and
mov
das
fildll
push
xchg
es
push
rcrb
lock
shll
fisubl
lret
ds
cmp
call
pop
loope
sub
andl
fs
pop
je
repz
inc
xchg
test
lea
popf
adc
lret
xchg
bound
pop
cmc
dec
mov
lret
call
mov
insl
gs
outsb
push
outsb
jae
scas
sar
push
xor
and
ret
sbbl
xchg
mov
imul
pop
xor
or
dec
fs
insl
leave
insb
rsqrtps
into
mov
lcall
fnstsw
stos
sbb
xchg
cmc
xor
loopne
add
inc
xlat
adc
adc
fisubs
sahf
jbe
insl
push
lock
andb
sbb
sbb
inc
and
mov
xlat
mov
dec
cmp
push
inc
push
outsb
push
dec
mov
pusha
jmp
add
sbb
mov
add
cmc
fdivs
pop
push
add
mov
sbb
jb
js
fsubp
adc
sub
cmpsl
mov
push
out
pop
or
xchg
add
aam
faddl
push
and
xor
dec
mov
int
and
imul
jge
cmp
jle
movsl
test
mov
in
imul
adc
and
andb
adc
xchg
in
ds
xchg
icebp
movsl
cmp
fs
fists
inc
sub
movsb
xlat
mov
sbb
sub
pop
lcall
ficoms
in
xor
sti
stc
call
push
out
cltd
icebp
push
mov
inc
shrb
mov
les
lods
mov
cmp
lods
push
xchg
adc
dec
fisubl
and
inc
adc
cli
gs
ja
cmpsl
mov
ret
push
mov
in
dec
movb
push
inc
sub
icebp
cmpsb
out
repz
enter
movsb
outsl
adc
ja
in
imul
fsubrs
pop
cmp
clc
fcomps
lret
repz
scas
pusha
ret
mov
mov
cmp
mov
pop
jg
fwait
inc
mov
mov
in
xor
adc
jmp
lcall
or
jl
pop
fisubl
mov
movsb
loop
push
loopne
movsl
jge
add
add
cmpb
sub
ret
inc
lcall
mov
inc
loopne
test
inc
xchg
push
jo
loope
or
fcoml
cmp
ljmp
mov
jmp
aas
sub
cmp
adc
arpl
bound
lock
outsl
inc
hlt
cmp
enter
or
jne
clc
add
and
mov
lock
loop
inc
mov
jecxz
xchg
xchg
mov
pop
or
clc
xor
shrl
ret
gs
and
push
push
sbb
mov
nop
ja
or
sbb
iret
xchg
shl
sbb
mov
cmp
test
add
ja
adc
dec
das
sub
int
lret
sti
push
out
xor
mov
mov
xor
xor
bnd
xor
pop
in
add
popa
roll
jecxz
inc
fcmovne
jo
imul
sub
lahf
mov
movsl
pop
sub
cmp
movsl
adc
sbb
mov
sahf
sbb
and
vmovss
cmp
add
or
nop
insb
xlat
repnz
jnp
lahf
push
insl
xchg
xlat
stos
js
xchg
jns
mov
lds
sub
inc
cmp
and
pop
cmpb
pop
mov
sub
cmp
repz
inc
in
loop
cmpb
xchg
test
push
cmpsl
test
fldenv
icebp
sub
addr16
jge,pt
and
jns
int
adc
push
mov
hlt
fdivs
lahf
xchg
push
mov
or
jge
enter
add
push
insb
sbb
mov
jb
push
xchg
enter
or
lods
cmp
inc
dec
adc
add
cmp
lret
lods
popf
das
adc
mov
add
mov
into
into
stos
push
loope
sti
sbb
push
out
daa
mov
fadds
sahf
sub
and
dec
inc
sbb
ss
jmp
testl
loopne
sub
stos
jne
mov
outsb
dec
adc
lds
inc
jns
add
or
in
cmp
mov
negl
push
les
cmp
shrl
cld
add
bound
movsb
andl
xor
mov
cmc
test
rcrl
xchg
push
stos
mov
es
das
cmovnp
imul
inc
arpl
push
push
mov
aam
in
pop
add
cmp
jne
mov
xchg
movsb
pop
xor
inc
add
jo
mov
hlt
push
pop
dec
push
xor
adcb
fwait
xchg
push
inc
sub
adc
push
rorl
ss
pop
sub
mov
push
fucom
xchg
adc
and
mov
gs
cmp
or
xchg
dec
arpl
jge
cmpsb
mov
mov
int3
dec
or
push
int
push
xchg
add
mov
xchg
ja
cmp
arpl
ret
fxch
cwtd
icebp
mov
out
lds
jmp
mov
lret
scas
pop
movsl
inc
adc
and
mov
lret
enter
popf
sbb
cli
or
sbb
jns
gs
mov
cs
pop
loope
outsb
mov
mov
jae
push
and
and
fwait
xchg
jae
mov
fistpl
sub
mov
and
xchg
cmpsl
push
jae
push
lea
jne
mov
cmpl
sahf
shr
mov
cmp
push
mov
adc
fcomip
aas
dec
bswap
sti
and
fdivrs
stos
je
mov
ja
push
and
test
pop
jge
lods
data16
adc
fbstp
push
icebp
adc
clc
mov
lds
lret
enter
pop
jecxz
fs
out
sub
pop
jecxz
lret
into
xchg
leave
sbb
roll
adc
jb
fs
adc
js
cwtl
xchg
jnp
cmp
adc
xchg
nop
repz
mov
outsb
jae
into
mov
mov
loop
stos
xlat
mov
push
push
sub
mov
inc
xor
pop
clc
dec
adc
adc
mov
jno
cmpsb
mov
pop
pop
push
xchg
mov
push
xchg
pop
mov
mov
adc
adc
mov
lea
mov
pop
int3
adc
cmp
adc
xchg
test
cli
sub
inc
mov
notl
sti
outsb
shll
pop
or
mov
mov
inc
scas
lods
mov
shlb
rcll
cmp
xchg
outsl
mov
push
push
insl
adc
or
inc
dec
jg
inc
stc
push
sarl
pop
test
pusha
ds
jmp
jb
sahf
and
jmp
bnd
sbb
mov
and
cmp
ja,pt
sub
clc
xchg
out
sbb
push
xchg
lock
mov
xchg
sbb
aam
lret
stos
outsl
jg
inc
mov
xlat
sbb
dec
mov
out
mov
lea
mov
fistpl
add
hlt
loope
and
cld
lods
shr
daa
int3
push
loop
ficoml
or
and
fwait
cmp
in
cld
ret
add
xchg
adc
pop
xchg
lods
cmp
push
or
loop
test
pop
sbb
or
cmp
loopne
mov
push
rorb
stc
pop
jnp
xorb
mov
aad
fistpl
mov
insb
sti
in
ret
daa
jb
fcoms
pop
pop
push
jge
and
dec
xor
push
repz
iret
in
lcall
inc
aad
scas
outsb
adc
cli
mov
xchg
sub
fisubrl
imul
mov
fistps
mov
pushf
jo
adc
sub
jae
push
js
mov
pop
int
mov
test
rcrl
pop
pushf
and
pop
js
out
lods
test
daa
sub
lret
repz
divb
adc
mov
jne
and
sti
imul
out
cmp
jp
int3
mov
dec
insl
arpl
add
lock
sub
add
fstpl
std
lahf
sub
ret
or
in
mov
pop
setp
add
hlt
enter
push
add
dec
pop
adc
ret
out
pop
mov
jbe
cli
push
mov
leave
xchg
jae
cmpsl
aam
jbe
dec
dec
pslld
dec
cltd
xchg
mov
push
stos
lahf
sub
or
sbb
mov
adc
stos
imul
test
lea
cwtl
push
test
sbb
ljmp
add
ret
lods
das
adcb
int3
dec
out
aaa
mov
call
test
jnp
push
mov
ljmp
dec
push
inc
xchg
adc
or
pusha
push
adc
pop
shlb
jbe
inc
mov
bnd
fs
sbb
push
ss
icebp
repnz
fstp
rol
mov
jp
inc
das
and
cltd
push
sbb
loope
sbb
out
adc
push
punpcklbw
nop
sarb
fs
mov
ds
fbstp
sarb
subl
dec
mov
les
rolb
or
inc
inc
popf
pop
loop
mov
inc
xchg
rcrb
jno
clc
and
jbe
pop
cld
das
dec
pop
sahf
popf
andl
fcmovne
dec
mov
push
loopne
in
daa
insl
jecxz
sbb
sub
sub
pop
sub
shll
jb
xchg
xor
inc
push
sbb
cmp
jb
cmp
subb
jg
pop
push
push
ljmp
mov
insl
iret
cmpsl
in
call
cmp
mov
or
xchg
iret
push
jo
xor
inc
push
jg
fisttpl
and
data16
mov
dec
ret
xchg
pop
sub
push
ss
popa
movsl
inc
and
testl
cmp
cmpb
scas
mov
pop
or
lahf
push
mov
sti
pop
mov
lret
adc
sbb
das
in
cmc
sub
jmp
push
inc
out
enter
test
jmp
repnz
daa
ret
mov
cmp
xor
sarl
dec
out
in
sbb
jae
std
sbb
jae
movsb
test
pop
push
pop
xchg
inc
gs
and
xor
repnz
pop
mull
hlt
and
fisubrs
xor
int
out
adc
and
lcall
add
mov
repz
xchg
xchg
mov
xchg
ds
mov
in
aad
mov
sub
adc
cmc
add
sub
mov
gs
mov
ss
cmp
daa
xor
jmp
into
popf
xchg
cld
or
sbb
loopne
mov
xor
dec
or
dec
lock
sti
add
clc
sbb
sbbb
stos
cmp
or
incl
inc
test
cmp
fimull
stc
notl
inc
cmp
sub
sbb
pop
and
push
mov
jbe
push
mov
sub
cmc
mull
popf
push
add
xchg
push
fcoml
faddl
nop
pop
pop
in
dec
fcoml
out
outsb
and
iret
sbb
xor
inc
adc
aam
push
pop
imul
shl
scas
inc
mov
movsl
jnp
rorl
inc
mov
movsl
insb
cmp
add
loopne
rolb
into
cltd
fisttpll
inc
and
inc
or
loop
cmpsb
pop
daa
jae
popa
iret
cmp
sbb
insb
mov
jecxz
testl
cltd
xor
dec
or
roll
mov
mov
lret
cmp
dec
mov
clc
sub
in
mov
add
std
dec
les
push
adc
test
pop
cmp
jbe
int3
jmp
xchg
and
push
lods
pop
xor
or
xchg
or
test
addb
jle
or
ret
and
xchg
sub
test
stc
xchg
sti
lods
negb
jl
aam
or
jmp
or
data16
mov
arpl
and
mov
sbb
in
dec
test
ja
sub
xor
test
mov
cmp
inc
push
jno
xchg
sub
and
mov
sub
mov
test
cs
pop
add
cld
jl
mov
mov
push
inc
adcb
add
cmpl
pop
int3
xchg
stc
mov
inc
dec
rcll
dec
test
mov
repz
int
les
mov
lock
pop
setb
scas
test
adc
and
add
mov
and
pop
cltd
call
or
dec
fisubrs
movsl
int3
sub
mov
cmp
push
shlb
lret
mov
in
cmp
lahf
in
jge
cld
cli
dec
dec
sub
mov
pop
pop
push
sub
daa
scas
ja
cmp
fistl
mov
pop
ret
test
outsb
dec
mov
ficomps
xchg
or
or
jo
or
or
mov
aaa
nop
xchg
jl
inc
mulb
fwait
negl
dec
rcr
pop
aad
lods
test
rcrb
lahf
mov
mov
xchg
stc
pusha
cmp
setle
push
jb
mov
jecxz
jp
xchg
and
pop
lods
mov
leave
and
adc
adc
pop
and
or
icebp
jmp
jmp
pop
mov
jge
mov
fstps
cmpsl
xchg
mov
fcmovnu
mov
and
pop
push
xchg
ret
stos
add
faddl
and
or
cmp
dec
imul
fs
and
in
int
mov
push
xorb
out
lds
das
pop
shrl
mov
cwtl
andps
mov
mov
push
push
sbb
mov
fmull
test
mov
xchg
dec
lcall
shr
cmc
fdivrp
inc
insl
mov
xor
cs
popl
stos
push
jo
sbb
xchg
add
outsb
mov
mov
dec
ds
sbb
or
jle
or
icebp
and
out
aam
xchg
icebp
lods
cmp
aam
int3
and
push
cmc
jl
lret
mov
imul
popa
jg
add
in
test
jl
sarb
pop
sarb
jmp
in
sbbb
add
sbb
movsl
ljmp
cli
test
add
cli
add
pop
mov
push
cmp
inc
xchg
or
call
lret
mov
jo
test
mov
sarb
mov
xor
cmp
add
cmp
je
unpckhps
dec
fwait
test
mov
in
idivb
and
dec
add
lods
aas
insb
enter
ss
cmpsb
jo
ss
test
inc
ja
mov
jle
fld
loopne
std
cs
lret
mov
jmp
int
xchg
lds
aam
loop
shll
cli
adc
dec
mov
aam
imul
insl
dec
fists
dec
and
push
aam
or
in
mov
out
movsl
stos
xchg
and
jg
clc
mov
fimuls
adc
sar
mov
gs
xorb
jp
jnp
frstor
jle
enter
dec
aam
fistl
test
ja
mov
inc
imul
in
testl
fildll
mov
xor
ja
ljmp
lahf
out
nop
lds
js
movb
movsl
sbb
inc
jnp
iret
mov
xor
or
pop
lret
std
lret
movb
xor
int3
push
cmp
int
mov
mov
cmp
xor
sub
stos
cmp
lret
stos
jg
sbbb
ret
mov
repz
cmpsl
ss
pop
in
in
adcb
inc
adc
jne
xchg
mov
mov
popa
mov
xchg
stos
xor
dec
fstp
lcall
xor
shl
adc
sti
ljmp
inc
ficompl
mov
sahf
push
nop
jo
add
push
dec
push
sub
pop
shll
jmp
les
fiadds
jbe
fildll
es
popa
mov
mov
out
arpl
dec
loop
adc
jp
mov
mov
pop
fsubrl
scas
out
mov
repnz
jno
push
ss
pop
pop
and
mov
xchg
lods
out
in
pop
cmp
mov
dec
add
leave
stc
jne
adc
add
dec
mov
popf
adc
jne
jp
push
mov
jmp
rorl
or
in
out
fcmovnbe
imul
jnp
fstpt
ret
orl
cmc
sbb
nop
pusha
fiaddl
mov
push
dec
sbb
test
mov
ret
pop
push
lcall
in
xor
mov
mov
mov
test
rorb
cs
pop
add
mov
shl
icebp
mov
pusha
pop
out
sub
mov
fiadds
clc
pop
sbbl
sub
lock
xor
push
xchg
pop
jns
out
fsubrl
dec
test
loopne
addb
mov
popf
ss
cltd
dec
aad
or
adc
mov
mov
ljmp
xor
push
mov
jbe
mov
xor
and
dec
hlt
and
in
add
push
je
xchg
xor
inc
ret
jmp
stos
aad
and
inc
inc
mov
lret
xor
fdivs
loop,pt
push
cmpsb
add
fldl
push
xor
pop
xor
sahf
aam
xchg
and
add
sub
sub
stos
and
imul
dec
xor
xchg
jg
xchg
dec
insb
and
dec
stos
xchg
imul
jg
jle
call
cmp
mov
movsl
ret
mov
dec
mov
aas
fistpl
repz
jg
arpl
data16
dec
sub
cmpsl
cmp
pop
dec
push
iret
jge
xchg
sub
and
fs
roll
mov
pop
lods
aas
repnz
lcall
inc
dec
ds
in
adc
call
push
xchg
xor
clc
sti
adc
pusha
scas
dec
pop
pushf
mov
jne
mov
adc
testb
add
xor
pop
mov
sub
pop
aad
inc
jp
dec
xchg
jo
push
inc
jmp
shrb
loop
push
and
daa
pop
outsl
xchg
stc
xchg
xor
xchg
xlat
daa
or
cmp
lcall
and
loopne
and
mov
pop
popf
adc
lcall
mov
sahf
xor
pop
movl
dec
jg
or
jg
imul
xor
stc
inc
outsb
movsl
adc
push
xor
insl
xor
mov
arpl
jnp
fcmovnu
mov
xor
jp
mov
pop
lods
frstor
call
and
je
dec
mov
lahf
cwtl
push
add
popf
inc
lds
jecxz
es
orl
leave
das
cmp
addr16
aaa
filds
pop
jg
jbe
lds
push
idivl
aam
sti
loop
mov
xor
sbb
add
movsl
adc
test
into
xchg
inc
lods
xchg
cmp
hlt
jg
ret
ds
roll
lret
inc
testb
jae
ljmp
cmp
xchg
jb
stos
dec
pop
pop
sbb
or
or
jge
lds
xchg
test
inc
ja
adc
or
adc
jbe
jle
stos
push
leave
inc
scas
pop
test
mov
incb
add
mov
mov
daa
xor
and
mov
dec
adc
pop
mov
pop
and
mov
sub
imul
sbb
idivl
xchg
shrb
sarl
pop
add
sub
data16
icebp
test
add
popf
vmovsd
add
scas
mov
mov
int
xor
xchg
mov
iret
lcall
mov
add
jge
lea
mov
js
loope
aaa
cmpb
fwait
popa
cmp
push
into
xor
insb
divb
sahf
xchg
jle
cltd
adcb
dec
movsb
jnp
out
fcomi
outsl
and
or
je
pop
gs
push
fiadds
lds
lods
je
push
bound
loopne
clc
mov
or
lret
xchg
mov
xor
loop
mov
fwait
sub
sbb
orl
xchg
xchg
outsl
loope
call
shl
mov
pop
nopl
jns
pop
popf
push
ss
fistpll
scas
sbb
sarl
dec
fdivs
arpl
int3
or
sbb
pop
and
pusha
out
and
mov
js
dec
add
in
adc
pusha
stc
sub
pop
jns
pop
in
jecxz
mov
xchg
pop
push
adc
call
push
pop
push
mov
or
ds
dec
xlat
sub
cld
adc
mov
loopne
inc
lods
dec
xchg
enter
insl
xor
outsb
mov
or
hlt
mov
mov
adc
shlb
sub
add
dec
push
popl
pop
and
push
imul
mov
and
fcomi
jmp
add
test
adc
xchg
xchg
js
cmp
shll
mov
fisubs
dec
dec
arpl
sub
je
cmp
dec
call
push
rcl
adc
mov
pop
popa
cmp
sub
test
mov
mov
xchg
sub
push
and
xor
int
pop
icebp
fsubs
lret
test
repnz
mov
in
insl
mov
or
jo
shrl
in
dec
testb
add
lds
push
lahf
jnp
xor
inc
mov
inc
xor
fwait
jbe
cltd
add
mov
adc
aas
pop
cmp
ret
xor
sbb
jns
scas
sbbl
xor
add
jecxz
iret
mov
cmpsl
push
cltd
cmovns
inc
movups
dec
dec
inc
xorl
into
mov
iret
gs
inc
xor
stos
cs
cmp
js
cmc
test
jae
add
push
daa
mov
das
lock
pop
dec
sbb
jle
in
lods
jns
movsl
mov
sub
mov
rorl
pop
jne
daa
lret
test
push
adc
inc
orl
cmp
or
lcall
mov
cmp
mov
sub
push
mov
aad
lret
jmp
xchg
and
push
jno
das
jno
xchg
cmp
pop
mov
loope
cmp
xlat
arpl
imul
filds
mov
fistpll
loope
in
pop
in
jmp
ret
fnstcw
inc
push
xchg
aad
test
ds
outsl
ret
rcrl
push
add
jb
out
add
sbb
xchg
rcrb
cmp
aas
faddp
popf
mov
pop
mov
mov
aad
pop
gs
pop
push
fldenv
xchg
ret
or
outsl
iret
and
jne
ror
sti
mov
insb
test
gs
push
call
sbb
ja
mov
test
dec
cmp
fisubs
cmp
iret
aas
lock
add
xchg
rcr
or
outsb
add
stos
sbb
xor
adc
sub
out
and
cmpsb
sub
or
mov
ds
gs
xor
out
jb
mov
mov
sub
test
sbb
cmp
jno
rol
or
jae
push
mov
and
cltd
cmp
and
fildl
push
bound
and
leave
xchg
cmpsb
lea
loopne
loope
pushf
daa
sub
inc
rorl
jns
fldcw
lahf
imull
mov
loopne
sti
xchg
frstor
pushf
adc
addb
mov
shrl
jge
dec
xor
in
aas
mov
loope
mov
cmp
cld
ja
push
inc
jae
add
mov
add
adc
mov
dec
test
xor
xchg
pop
test
iret
dec
or
push
push
addr16
stc
adc
in
mov
push
jmp
out
stos
or
adc
ds
cld
loope
pop
pusha
sub
xchg
jg
add
jle
cmp
add
push
adc
sbbb
jecxz
incb
hlt
add
push
push
mov
cs
mov
push
cltd
cmp
push
dec
test
xor
pop
adc
mov
xchg
jae
push
inc
lret
clc
outsl
sub
sbb
inc
xor
dec
jbe
mov
cli
sti
push
mov
or
dec
xor
das
or
xor
push
mov
scas
dec
icebp
pop
cld
jecxz
clc
sub
imul
cli
mov
les
add
addb
pop
mov
lock
push
adc
in
push
loope
mov
sbb
adcb
subb
ljmp
mov
inc
dec
or
mov
pop
cmpsl
cs
cmp
push
sbb
push
jmp
negl
cmpsl
loope
push
xor
rcrb
cmp
push
cltd
pop
mov
popa
xchg
mov
push
loop
mov
pop
xchg
out
cs
or
pop
test
and
or
dec
jg
aam
mov
ds
sahf
shlb
insb
jo
insl
scas
jl
sbb
push
dec
xchg
inc
data16
xchg
fs
pop
inc
pushf
adc
adc
fs
dec
insb
stos
mov
movsb
jo
bound
in
jl
jbe
adc
shlb
add
out
mov
rcrl
mov
inc
int3
jecxz
mov
add
rcll
arpl
push
enter
dec
adc
xor
fisttpll
push
and
push
xchg
shrb
dec
push
ljmp
lahf
fldcw
and
in
loop
sbbb
add
mov
fisttpll
xchg
fistl
add
adc
mov
jp
es
jecxz
inc
cmp
stc
in
mov
mov
mov
pop
push
shll
das
daa
mov
ja
arpl
push
inc
sub
ja
mov
sbb
push
iret
les
mov
add
push
in
popl
fnstenv
mov
mov
shll
hlt
in
sbb
js
ljmp
adc
dec
pop
jp
dec
lock
aam
cmpsl
sub
dec
loopne
push
into
xor
add
push
aas
sbb
daa
mov
pop
cmp
roll
pop
pop
sbb
jb
popa
pop
xor
add
pop
daa
adc
xchg
adc
sbb
dec
dec
mov
mov
add
cmp
lahf
movsb
push
pop
rol
out
out
push
push
cmp
sbb
std
mov
dec
out
mov
sbb
mov
movsl
xor
nopl
adc
aas
leave
nop
or
cwtl
call
jno
xchg
gs
scas
xchg
pop
fstpt
mov
fwait
push
add
and
dec
test
sahf
mov
out
cmpsl
sub
jmp
addr16
fmul
push
negb
cld
dec
fdivrs
je
ja
jmp
fstpt
mov
cmp
icebp
jmp
shlb
and
pop
jne
rorb
push
flds
incl
and
rol
or
dec
xchg
mov
jp
cmpsl
mov
cltd
xchg
adc
or
mov
lret
cmc
jg
aam
fldl
das
jge
or
push
mov
push
leave
add
push
ljmp
pop
or
push
push
adc
ss
jmp
mov
jecxz
hlt
mov
negl
xchg
xchg
popa
imul
cmp
sti
test
fwait
add
pop
sbb
fdivrs
out
mov
int
das
insb
pop
pop
loop
push
jle
inc
mov
bnd
fisubrs
xchg
cmp
push
push
rorl
add
xchg
mov
cmp
mov
add
inc
insl
nop
fwait
or
and
add
xorl
cmp
cmp
mov
jmp
test
sahf
movsl
mov
sub
xchg
pop
cwtl
push
rorl
sbb
add
movsb
push
addr16
push
rep
pop
push
ds
sbb
les
jne
inc
out
xor
ret
pop
repnz
dec
pop
pop
mov
dec
movsl
jbe
clc
out
push
adc
jb
mov
in
mov
dec
test
aaa
inc
aad
jge
mov
pop
pop
stc
shlb
jo
lods
pop
mov
stc
call
sub
push
out
pop
cmp
cmp
mov
adc
hlt
ss
in
sbb
repz
arpl
dec
sbb
mov
add
jb
dec
cs
xchg
mov
jmp
adc
push
lahf
popa
xchg
push
dec
xlat
fs
test
pop
jecxz
push
xchg
dec
xor
mov
xor
mov
lock
lock
sub
add
movsb
xchg
fldt
dec
push
push
pop
inc
jnp
push
or
inc
dec
addr16
stos
xchg
out
xor
mov
lcall
lea
sarl
inc
nop
pop
int3
call
aad
sbb
and
jg
stos
mov
adc
mov
stos
dec
add
sbb
sub
ljmp
xchg
test
jl
push
test
dec
push
and
js
shlb
jg
pop
lret
sub
mov
das
cli
outsl
aas
cmp
std
jp
mov
dec
xor
ret
pop
rorb
out
xlat
jl
sbb
mov
bound
jmp
std
idiv
add
xor
mov
cwtl
popa
out
xchg
jge
push
sub
repnz
fwait
mov
mov
jnp
mov
aam
je
lret
push
movsl
mov
push
ret
cld
cltd
add
cmpb
lods
adc
xchg
dec
adc
xchg
imull
adc
gs
sbb
ja
or
cmp
xchg
out
xchg
inc
into
outsb
int3
cmp
sbbb
jge,pt
hlt
mov
sbb
andl
push
mov
cmp
cmp
pop
inc
xlat
dec
dec
out
mov
cmp
dec
and
or
test
push
push
fdivrl
jno
cmp
xorb
fadds
int
dec
hlt
pop
bound
pop
loopne
repz
pop
mov
push
add
loopne
shlb
jge
mov
lods
jmp
mov
leave
dec
mov
fcmovu
push
nop
mov
mov
fistpl
mov
and
mov
lcall
inc
jb
push
xor
xlat
leave
xchg
dec
xchg
fwait
dec
add
mov
nop
outsl
and
pop
dec
cmp
push
test
ja
xor
enter
std
lcall
xor
int
and
inc
cld
jno
adc
mov
add
xchg
out
mov
dec
sub
dec
pop
popl
mov
push
mov
cmpl
xchg
popl
jmp
dec
imul
or
dec
testb
push
xor
jmp
sbb
lret
inc
sbb
inc
inc
adc
jne
jbe
iret
dec
loopne
cmpb
scas
pop
mov
mov
mov
lods
inc
lcall
push
dec
add
daa
mov
sbb
mov
adc
mov
push
pop
add
sbb
dec
jne
push
les
sub
test
in
out
sbb
sub
arpl
xchg
mov
out
popa
jle
mov
push
pop
and
jae
pop
jne
nop
mov
aam
fsts
aaa
and
mov
mov
push
iret
mov
mov
pop
mov
jl
mov
outsb
mov
add
dec
sar
test
cld
push
ss
mov
in
outsl
sbb
lcall
cmp
movsl
pop
nop
pop
out
xchg
and
cmp
push
popa
push
mov
bound
ret
push
arpl
mov
xchg
mov
fistpll
inc
das
and
aaa
repz
ja
data16
cmp
setae
add
and
and
mov
pop
mov
xor
cmpsb
jecxz
jnp
dec
outsb
or
add
cmpsb
add
and
push
push
icebp
or
sbb
jl
mov
dec
std
xor
sub
jle
jbe
xor
mov
cmp
xor
out
pop
mov
cmpsb
in
ret
adc
mov
pusha
mov
fwait
sarl
push
jno
lea
push
push
push
fdivr
mov
cmpb
fcompl
insl
repnz
xchg
dec
cld
cmpsl
shrb
jo
in
adc
push
xchg
popa
push
scas
ucomiss
loop
sub
cmp
mov
hlt
data16
mov
fwait
pop
imul
ljmp
jp
jae
dec
or
xor
fs
data16
sar
xchg
xchg
push
inc
and
mov
fnstcw
cmp
sbb
xchg
enter
inc
add
out
test
mov
lods
ljmp
or
jl
lods
or
movsb
mov
ss
hlt
daa
dec
push
fwait
pop
or
sbb
push
mov
cli
mov
push
out
or
sbb
dec
hlt
lods
icebp
pusha
jnp
pop
dec
loop
jb
outsl
mov
hlt
inc
movsb
and
addr16
push
inc
insl
push
cmp
push
loope
lods
inc
xlat
sbb
mov
sub
popf
add
in
sub
cmp
mov
or
add
jmp
and
stc
sub
inc
movsl
pop
jl
add
jmp
push
or
and
push
ret
orb
andl
add
mov
pop
xor
mov
shl
add
jbe
fldt
add
ljmp
pusha
mov
pop
xor
hlt
inc
imul
mov
inc
jmp
push
insl
add
aam
jp
ja
cs
sti
repz
xchg
lods
fistps
outsb
out
xchg
mov
mov
inc
fadd
pop
mov
fcomip
mov
sbb
mov
test
xchg
mov
hlt
sbb
in
adc
test
cld
jne
int3
testl
pop
lret
xlat
adc
mov
pop
mov
xchg
hlt
xchg
imulb
push
ss
js
out
cltd
jl
sub
sub
out
sti
outsb
pop
int3
cmp
jle
lods
mov
imul
or
mov
outsb
inc
mov
sbb
push
sarb
jp
outsb
pop
dec
cld
mov
mov
jge
lahf
dec
cmp
xlat
dec
jmp
loop
imulb
out
pop
adc
shrb
ja
inc
cmp
xlat
cli
pop
xchg
push
lcall
rcll
or
rcll
stc
fimuls
inc
push
ljmp
std
add
xor
and
fidivrl
fwait
and
mov
popa
push
mov
jmp
out
jns
jmp
jp
xchg
shr
add
mov
dec
pusha
ret
fistl
mov
mov
cld
cwtl
jmp
or
jle
leave
test
cmp
mov
mov
pop
mov
into
push
add
cmpsb
sbb
cli
or
xchg
xlat
jmp
mov
dec
cmpsb
in
push
mov
test
mov
ss
nop
add
int3
sahf
adc
jge
inc
jb
scas
adc
jns
mov
test
jo
loop
xor
mov
sub
mov
pop
pop
lds
xchg
mov
into
rclb
cmp
jp
push
mov
mov
std
test
mov
int
sbb
inc
push
inc
aam
fdivrl
dec
or
mov
cld
cmp
xchg
cld
jbe
stc
dec
jp
mov
cld
mov
lahf
in
loopne
cmp
and
movsb
mov
in
and
xor
stos
sbb
jle
nop
je
loop,pn
mov
rcrl
mov
gs
or
shll
xor
in
mov
jp
out
addr16
outsl
in
xchg
pop
js
clc
inc
dec
test
loop
loop
dec
push
mov
adc
pop
test
or
ljmp
sti
icebp
jne
xor
mov
cmp
sub
stos
cwtl
and
ret
ret
test
pop
test
fnstsw
cmc
int
push
mov
in
subl
xchg
fcompl
mov
scas
adc
cmpsl
iret
mov
jle
push
adc
shrb
inc
pusha
les
mov
mov
repnz
or
dec
mov
bound
xor
pop
sub
xchg
jbe
xchg
loopne
stos
scas
mov
jl
pop
scas
or
das
xorl
mov
mov
mov
test
mov
aas
lods
jo
mov
lods
push
ljmp
push
mov
call
in
jl
jle
mov
cltd
sbb
stos
mov
dec
push
outsl
xchg
lcall
out
fs
std
cli
aad
cmp
and
lea
pop
ljmp
pop
jbe
mov
clc
aam
popa
shll
inc
stos
test
stos
repz
repz
mov
scas
pop
jecxz
mov
cli
adc
add
call
add
pop
in
rorb
stos
notb
lods
sbb
jb
fnstcw
fcmovb
icebp
ret
cmp
jbe
sub
mov
cmpsb
pop
sub
bound
inc
mov
cmc
in
popa
sbb
jae
cmp
mov
xor
xlat
lahf
sti
push
adc
jle
pop
adc
cmp
sahf
xorb
push
cwtl
mov
dec
scas
pop
inc
jge
dec
test
fadd
adc
sub
mov
movsl
es
xchg
stc
das
pop
cmp
addb
leave
dec
mov
push
rcrb
neg
push
lods
lods
push
int3
cmpsl
imul
xor
int
cmp
mov
cmc
add
push
fsubrl
xor
dec
jp
stc
or
out
mov
inc
iret
or
inc
inc
cli
pop
cmp
inc
cmp
pop
loop
xchg
aas
adc
jns
in
dec
jmp
ficomps
inc
xchg
xor
or
adc
mov
loopne
pop
sbb
adc
and
push
xor
jl
je
adc
adc
flds
pop
jg
push
test
sub
xchg
sti
dec
mov
out
mov
xchg
inc
je
mov
dec
add
lods
ror
cmp
leave
jbe
int
call
mov
dec
inc
fisttps
pushf
pop
addr16
stc
cmp
xor
sub
cmc
jp
imul
lds
mov
fimuls
push
mov
and
mov
sbb
out
sub
xorb
inc
das
xchg
jle
scas
adc
in
data16
xchg
xor
cmp
in
pop
xchg
ljmp
insb
pop
pop
aad
nop
int3
and
add
aaa
cmc
cmc
loop
mov
in
mov
sahf
add
add
push
arpl
lods
pop
fistps
mov
push
mov
hlt
and
das
int3
pusha
xchg
data16
popa
cmpsl
ds
pushf
add
dec
rolb
fldt
add
xchg
insb
mov
pop
sti
sub
daa
jnp
adc
aad
xchg
stos
iret
addr16
jp
cmp
pop
inc
adc
jecxz
loope
add
add
lds
xor
jae
pop
push
loop
cld
shr
push
test
in
test
stc
mov
sub
add
js
add
jno
sub
jae
lret
mov
outsl
jb
xor
add
or
rolb
in
imul
xlat
pop
cmp
clc
out
andb
iret
ja
mov
dec
cmpl
add
sub
cltd
or
jl
flds
es
ret
jmp
push
rorb
nop
je
push
loopne
adc
mov
push
jmp
aas
xchg
out
lods
dec
orb
repnz
jae
sub
fadds
insb
iret
push
movsb
xchg
dec
mov
mov
iret
addr16
mov
rcl
fsubs
push
sbb
roll
test
les
push
push
icebp
or
mov
fildll
dec
sbb
inc
mov
cwtl
in
addr16
or
pop
ret
jmp
add
mov
pop
mov
pop
outsl
sub
and
jbe
jp
jne
out
pop
ret
mov
push
cmpsl
xchg
in
out
dec
fwait
neg
adc
ss
hlt
cmp
std
cmpsl
or
sub
aaa
ja
call
pop
xor
les
mov
fcmovne
dec
push
mov
stos
adc
mov
mov
movsl
and
fcmovne
or
mov
xchg
lcall
mov
jmp
inc
pusha
shll
or
xorl
xchg
aaa
dec
test
jge
push
loope
add
ret
xchg
aad
push
mov
inc
cmp
dec
or
stos
xchg
mov
rcr
cmp
xchg
push
jb
or
and
push
cmp
cmpsl
sbb
sbb
inc
and
sbb
mov
add
cmc
xor
adc
jle
cld
cmp
jmp
mov
sub
xchg
cmp
pop
mov
jns
xchg
mov
outsl
cmp
int
daa
sub
and
cli
and
jo
mov
cmp
push
shrl
inc
stc
insb
jae
fbld
jp
mov
das
in
fcompl
int
xchg
fnstcw
cwtl
sbb
lret
push
int
iret
int
or
cmp
cmpsl
dec
mov
mov
scas
cmp
xchg
jge
cwtl
mov
pop
loopne
pop
cmpsl
adc
in
inc
pop
push
or
pop
pop
sbbb
das
lret
stos
mov
push
nop
repz
icebp
negb
test
mov
ret
push
jo
fucomi
and
jge
cmpsb
dec
mov
cs
push
int
xchg
sub
sbbl
mov
mov
or
mov
test
insb
cmpsl
jp
xor
jp
inc
pusha
movsb
push
push
cmpsb
fisttpl
imul
test
mov
adc
cmc
pop
add
sbb
into
jno
adc
lcall
pushf
mov
mov
in
dec
push
mov
mov
mov
cli
mov
out
jge
mulb
add
add
add
cltd
ret
into
jbe
push
mov
cmc
aam
es
ljmp
sbb
lcall
popa
xchg
xchg
je
stos
aaa
arpl
jns
sub
xor
dec
pop
pop
fdivl
pop
das
and
cmp
ret
pop
jne
icebp
xor
outsl
std
mov
adc
repnz
inc
xchg
fcompl
fisubrs
and
movl
movsb
idiv
ja
js
push
sbbb
push
cmp
sti
lahf
cld
test
dec
inc
and
jg
cmpsl
cmp
outsb
mov
xchg
xor
data16
sub
pop
xor
mov
mov
and
cmp
pop
xchg
clc
adc
and
sar
into
lds
iret
test
loope
std
jno
or
popf
jmp
dec
lret
call
mov
pop
pop
jns
ret
cmp
insl
fdivr
into
sbb
fstps
and
add
out
cmp
cmp
inc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
rolb
add
push
add
add
add
add
add
repz
add
add
addb
add
or
add
add
add
add
adc
or
add
add
add
sub
add
push
add
orb
add
add
mov
add
add
add
adcb
add
lock
adcb
add
add
adcb
add
push
add
add
add
add
add
add
add
sbbb
add
or
add
xor
add
pop
add
cmpb
add
addb
adcb
add
test
add
add
add
or
add
add
add
or
test
add
or
add
add
add
add
or
add
add
push
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
or
add
add
add
mov
add
or
add
add
add
or
ljmp
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
test
or
adc
add
or
add
rorl
mov
add
or
add
ret
or
test
add
or
add
add
add
les
add
add
add
add
add
add
add
add
add
lds
add
add
or
add
add
add
or
insb
add
add
add
add
add
push
add
add
add
add
add
mov
push
add
or
add
in
add
add
add
add
add
add
add
or
cmp
add
add
add
dec
add
mov
add
sbb
pop
add
add
add
add
add
add
add
or
xor
adc
or
or
or
or
or
add
add
add
add
add
add
add
add
je
add
je
add
je
add
je
add
jne
add
jne
add
jne
add
or
push
jne
add
or
test
or
mov
or
mov
mov
add
pop
add
add
sbb
add
sbb
add
sbb
add
mov
add
add
cmp
add
mov
push
add
dec
add
add
gs
je
dec
popa
imul
inc
jb
popa
je
push
jb
je
arpl
outsl
arpl
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
outsb
imul
je
dec
outsb
je
jb
popa
arpl
add
inc
jo
popa
insb
insb
push
popa
arpl
add
popa
inc
jo
popa
insb
insb
push
popa
arpl
addr16
popa
jae
je
jb
jne
push
inc
jo
popa
insb
insb
push
popa
arpl
addr16
outsb
je
jne
je
add
inc
jo
outsb
imul
push
popa
arpl
add
popa
inc
jo
outsl
outsl
outsb
push
gs
imul
dec
jae
inc
jo
outsl
outsl
outsb
push
jae
jb
dec
jae
inc
jo
outsl
outsl
outsb
push
jae
jb
js
push
gs
insb
dec
outsl
outsl
data16
popa
insb
dec
outsl
outsl
outsb
add
dec
outsb
imul
add
popa
jb
jne
add
sbb
add
insb
add
dec
xchg
add
add
add
mov
add
and
add
add
add
push
add
cmp
add
fiadds
add
and
add
jns
add
add
xor
add
push
cld
add
xor
add
aam
add
xor
add
mov
add
mov
add
sub
add
xor
add
add
add
add
add
cmp
add
pop
push
add
push
add
add
add
lods
jbe
add
or
loopne
or
add
add
pusha
jbe
add
add
add
lcall
or
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
call
scas
add
xchg
push
subb
shlb
inc
outsl
insl
jo
arpl
add
dec
cmpsl
push
inc
scas
jbe
inc
dec
adc
stos
xor
xor
add
push
shll
adc
mov
pop
inc
clc
dec
adc
add
xor
or
mov
inc
jo
scas
sbb
cmp
fisttpll
dec
mov
inc
inc
aaa
mov
dec
jno
inc
insb
push
lds
mov
xchg
sub
in
test
in
pop
inc
les
mov
shrl
sbb
adc
cmpsl
inc
inc
lea
in
inc
lret
jp
xor
fisttpll
les
mov
dec
fnstenv
jmp
jp
cmp
jle
clc
adc
inc
inc
out
iret
jno
cs
dec
cmp
dec
pop
insb
or
fwait
shrb
add
mov
ss
dec
sbb
inc
mov
sahf
adc
or
dec
jo
mov
js
insl
outsb
scas
shlb
dec
push
xchg
and
dec
mov
dec
and
enter
sahf
loop
sbb
ret
mov
dec
dec
ds
mov
pop
iret
ja
push
daa
outsl
push
insl
or
pop
xor
iret
dec
lret
adc
xor
mov
xor
daa
and
les
bound
and
push
mov
xor
mov
push
loope
dec
iret
dec
das
and
fldz
mov
push
std
aam
pop
bound
mov
cmp
fidivrs
inc
xlat
je
dec
pop
sub
fcoms
sub
xchg
repnz
loopne
notb
bound
sub
gs
add
sub
fisttps
lcall
pop
je
lahf
cmp
xlat
lods
push
inc
addl
stos
movl
loop
into
dec
sub
dec
lret
cli
int3
jbe
popa
adc
xchg
into
test
ret
adc
hlt
sarl
push
add
pusha
stos
loopne
ja
int
test
dec
enter
xchg
dec
pop
icebp
lret
adc
test
adc
imul
mov
aaa
inc
fildl
sub
mov
int3
dec
push
into
mov
scas
inc
das
sub
ret
jl
lds
scas
cmpsb
ret
das
push
pusha
pop
pop
scas
or
addr16
je
cmp
or
gs
cwtl
add
adc
fwait
lcall
xor
pop
inc
pop
pop
adc
mov
pop
out
test
push
cmc
int
ret
mov
push
mov
push
ja
sub
jne
ja
nop
push
scas
cmpsl
je
into
mov
nop
and
repz
pop
inc
daa
aaa
pusha
dec
ret
aaa
inc
andb
inc
outsb
dec
les
and
pop
fisubl
iret
ret
dec
je
push
imul
sbb
inc
int3
jns
lcall
shl
jp
add
xlat
lods
pop
pushf
mov
jge
and
push
jo
movsl
push
sbb
int
adc
dec
insl
mov
mov
ret
cmp
and
inc
pop
mov
sub
sahf
lods
inc
xor
ds
mov
lret
fidivrl
inc
js
std
repz
in
gs
loope
aad
push
xchg
out
aad
xlat
push
das
repz
push
nop
cs
fiadds
dec
xor
lds
inc
pushf
dec
lret
mov
jns
mov
push
lea
dec
clc
sahf
cmp
mov
push
ss
cli
dec
lods
add
cmp
xchg
scas
inc
popf
jg
aaa
xor
outsl
lock
enter
xchg
lret
leave
into
xchg
add
incb
pop
sahf
fs
pop
and
repnz
je
scas
or
movsb
push
decl
push
push
mov
mov
cs
add
xchg
or
inc
cmpsl
dec
shlb
jns
dec
fcoms
cmp
add
je
mov
push
push
ss
mov
insl
lea
cli
je
int3
push
addl
ret
dec
jno
scas
or
pop
inc
dec
les
add
push
sbb
iret
inc
cli
xchg
fwait
and
dec
in
inc
add
fildll
pop
mov
mov
ss
xchg
fbstp
popf
jg
pushf
push
lret
and
stos
aam
fwait
inc
popf
inc
push
sub
mov
cmpsl
int
lret
out
pop
mov
xorl
pop
lret
fdivrs
xor
dec
pop
add
or
or
pop
adc
inc
push
repz
cmp
lcall
lds
add
push
cmp
push
mov
jg
push
test
mov
and
dec
out
and
dec
inc
lds
mov
xor
fnstenv
ja
aad
or
mov
dec
jp
pop
adc
cmc
pop
mov
adc
pop
in
idiv
cmc
push
push
jno
std
xchg
sub
inc
dec
int3
jp
bound
or
sahf
inc
mov
scas
bound
pop
ret
outsb
jbe
lds
push
dec
sbb
stos
or
lret
jbe
add
inc
lds
imul
lret
sti
ja
pop
je
in
push
inc
inc
lds
xor
mov
dec
jmp
das
mov
push
mov
fs
pop
jg
imul
mov
scas
add
int
push
lret
insl
iret
or
pop
bound
iret
ret
popa
ret
scas
mov
push
xor
sti
pop
pop
ret
xchg
rolb
dec
adc
fmuls
inc
jb
aad
lcall
xchg
xor
pop
mov
sub
dec
add
out
int3
jl
lods
imul
cmpsb
adc
cmpsl
fcomps
inc
fidivs
dec
jns
int3
inc
iret
or
pop
inc
inc
dec
test
pop
int
js
xchg
test
rol
dec
sub
push
ret
in
pop
addr16
push
ja
dec
lods
adc
jno
xlat
arpl
pusha
add
sbb
push
scas
lds
push
dec
arpl
inc
sahf
adc
mov
mov
jge
inc
add
sbbl
test
std
scas
test
lods
inc
cs
jns
jg
dec
inc
lea
mov
add
adc
icebp
cmp
xchg
or
inc
xor
mov
xorb
jne
in
sbb
dec
test
mov
jne
sub
ss
out
sbb
push
and
and
sbb
jge
xor
mov
dec
adc
mov
xchg
insl
sahf
cmpsb
jbe
jmp
popf
movsl
pushf
ljmp
mov
addr16
cli
push
mov
jbe
push
cltd
inc
popf
inc
pop
stos
pop
ret
mov
pmaxub
dec
jl
or
test
bswap
xlat
xchg
lods
icebp
or
pop
xor
adc
sbb
les
mov
gs
inc
sub
loop
mov
sbb
js
pusha
push
inc
jp
dec
into
dec
mov
lods
inc
xchg
cmp
add
out
inc
jge
cmp
ret
ret
sub
jo
mov
jge
push
add
xchg
inc
adc
scas
dec
or
out
mov
xchg
xor
hlt
dec
mulps
xchg
rolb
sti
mov
lods
fiadds
lods
mov
pop
clc
movl
cld
insb
ljmp
and
scas
ds
out
enter
test
pop
stos
inc
and
scas
loope
and
enter
jns
jae
sbb
add
cmp
mov
stos
div
dec
xor
cmpsb
xor
outsb
or
cmpb
dec
lds
inc
dec
push
mov
out
in
mov
dec
in
or
je
jnp
push
loopne
test
in
out
movsl
ret
adc
fcmovu
dec
add
push
pop
adc
jno
outsl
pop
int3
nop
push
dec
iret
std
stc
and
stos
movsl
pusha
push
sub
insl
mov
hlt
in
and
push
cmp
xor
std
xchg
push
int
mov
popa
or
out
int
imul
inc
push
push
xor
repz
push
jo
mov
pusha
mov
cmp
lods
push
leave
pushf
je
push
sbbl
imul
sbb
sub
dec
stos
imul
loopne
adc
int3
fstpl
test
les
sbb
jl
inc
xor
dec
mov
or
fmull
mov
inc
adc
adc
push
daa
pop
push
gs
xor
lods
outsb
xor
and
mov
add
lds
call
int
test
inc
sub
mov
jbe
or
lods
or
add
loop
adc
ret
xchg
flds
fidivs
sub
mov
add
push
out
into
arpl
arpl
gs
lods
dec
testb
sbb
nop
jp
mov
je
pop
pusha
sbb
fisubrs
sub
cmove
mov
lods
ljmp
ret
adc
repz
insb
jbe
mov
iret
xchg
scas
outsl
push
inc
pop
jge
dec
and
lods
jle
jmp
sub
rcrl
pop
jmp
decl
push
inc
lret
cmp
lds
push
scas
es
fists
lret
xor
sub
aam
jl
pop
inc
int3
inc
out
out
inc
push
into
mov
in
outsb
mov
push
and
mov
dec
push
arpl
mov
pop
ss
sub
and
sub
and
xor
push
clc
jne
and
push
arpl
xor
sbb
fnstenv
push
and
mov
das
and
jl
push
jae
les
push
sub
xchg
jne
insb
cmpsb
adc
mov
and
xor
cmpsb
or
stos
add
jle
pop
jnp
xchg
leave
lret
and
cwtl
jle
imulb
jns
ds
outsl
xor
loop
or
xchg
and
xchg
int3
pop
addl
dec
subb
sub
adc
xor
scas
out
pop
enter
mov
dec
les
in
in
inc
movsl
sub
dec
lods
bound
push
jp
push
jbe
cmp
aaa
fimull
jecxz
insl
inc
std
es
es
bound
cmp
mov
loop
inc
scas
sub
inc
xor
and
inc
xor
sbb
gs
inc
pop
notb
or
inc
push
xchg
lods
xchg
scas
or
inc
insl
lea
push
scas
add
inc
inc
lods
outsb
ljmp
lods
pop
xlat
push
xchg
inc
inc
inc
jnp
cmp
xor
xor
xor
ror
xor
adc
mov
mov
loop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
or
pushf
push
add
mov
orb
push
jbe
add
add
adc
or
fs
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
das
out
sbb
inc
and
movb
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
rolb
cmpb
and
jnp
icebp
push
inc
sub
jmp
scas
dec
fsub
mov
inc
je
adc
sub
aas
or
notb
pop
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pusha
jmp
jo
outsb
setl
inc
pop
xor
shlb
int3
adc
mov
int
xchg
ror
into
out
cld
test
or
add
cmp
add
jle
sub
mov
sbb
xlat
les
cs
iret
pop
gs
dec
loope
hlt
sbb
fidivrs
cld
jmp
mov
lret
test
cmpsw
jmp
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
mov
push
and
jmp
fstps
fwait
jmp
cmp
jmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
sub
mov
jne,pn
jnp
icebp
push
inc
sub
jmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
out
adc
push
call
cmp
sbb
inc
out
sub
add
lea
xchg
xchg
xchg
jmp
mov
jmp
dec
inc
add
sub
sub
sub
inc
dec
jmp
sbb
sub
sub
pop
xorl
push
lea
xchg
xchg
xchg
mov
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
fucomip
inc
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
jmp
inc
push
nop
mov
inc
lcall
std
repnz
jmp
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
mov
pushfw
push
call
jg
xchg
stos
fwait
cmp
add
push
push
xchg
pop
sub
lea
lea
xor
jmp
jne
jnp
icebp
push
xchg
jmp
sub
imul
mov
mov
pop
xchg
xor
jmp
shll
aaa
movsb
or
testb
lea
pop
push
lea
xor
pop
pop
xorl
lea
xor
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
mov
pop
add
nop
sarb
test
pusha
add
xchg
sub
add
xchg
xchg
push
mov
mov
mov
pop
add
add
add
sub
xchg
push
jmp
or
iret
pop
pop
xorl
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
fildll
repz
add
jmp
xlat
xchg
push
xchg
mov
xchg
pop
xor
sub
sub
sub
sub
xor
pop
xorl
xchg
add
add
add
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
lcall
cmpsl
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
xlat
and
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
test
jmp
add
push
mov
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
aad
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
add
add
adc
ret
inc
jns
pop
jmp
insb
xor
xchg
jmp
pop
add
xor
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
jmp
xchg
ror
into
out
cld
test
or
jmp
add
cmp
add
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
jmp
sbb
fidivrs
js
mov
ret
jmp
scas
mov
xor
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
mov
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
jmp
jne
jnp
icebp
push
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
adc
das
or
das
cmp
sbb
inc
out
aam
lock
ret
inc
jns
sub
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
jmp
xor
shlb
int3
adc
div
test
jmp
add
sub
add
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fsubrp
fnstcw
js
mov
sub
and
inc
push
jmp
nop
mov
lret
jmp
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
jmp
xchg
sahf
jg
repz
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
orb
lret
add
das
jnp
icebp
push
jmp
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
jmp
cmp
sub
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
popa
jmp
adc
jmp
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
fnsave
jmp
xlat
les
cs
pop
gs
jmp
cmp
dec
loope
hlt
sbb
fidivrs
ljmp
lea
nop
mov
lret
test
cmpsw
push
std
repnz
ret
pushfw
push
call
ds
in
lea
add
sub
sub
sub
jmp
imul
inc
sub
push
xchg
add
lea
mov
add
lea
pop
xchg
push
xchg
mov
xchg
add
pop
jmp
es
mov
cmpb
push
xchg
lea
add
xor
lea
sub
pop
xchg
lea
add
sub
push
lea
xchg
mov
pop
pop
xorl
add
add
lea
lea
jmp
cmp
sbb
inc
out
mov
add
add
mov
decl
jmp
push
call
add
add
add
pop
popfw
jmp
jmp
insb
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
ficoml
fs
xchg
ror
into
out
cld
test
lock
call
cmp
daa
cmp
sub
mov
sbb
xlat
les
cs
pop
jmp
gs
jmp
dec
loope
hlt
sbb
fidivrs
ljmp
lea
nop
mov
sbb
pushf
push
call
lret
add
sub
add
add
push
add
add
mov
mov
sub
xchg
pop
jmp
lock
add
add
sub
sub
sub
lea
lea
pop
xorl
xor
inc
dec
sub
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
add
es
adc
mov
cmpb
repnz
jmp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
loopne
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
jb
inc
jns
pop
insb
jmp
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
imul
jmp
mull
xchg
ror
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
pushfw
push
call
dec
loope
hlt
sbb
add
jmp
js
add
jmp
push
nop
mov
int
lret
xchg
pop
xchg
add
add
xchg
sub
sub
add
sub
add
add
add
add
pop
xorl
push
sub
pop
add
sub
push
xchg
add
lea
mov
add
lea
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
in
add
adc
add
add
lea
push
xchg
add
mov
mov
pop
lea
pop
xorl
push
lea
sub
pop
lea
push
mov
mov
pop
sub
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
shll
aaa
jmp
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
jmp
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
mov
pushfw
push
call
fs
xchg
ror
into
xor
lea
lea
sub
sub
pop
xorl
push
add
jmp
mov
sbb
xlat
les
test
add
sub
add
xchg
push
jmp
pusha
sbb
mov
push
add
add
jmp
push
nop
mov
pop
scas
mov
shll
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
repnz
sar
lahf
in
mov
jmp
test
ret
xor
ljmp
xor
pop
add
dec
sub
sub
lea
pop
xorl
xor
add
sub
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
dec
add
push
dec
dec
outsl
jl
jmp
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
jmp
fsub
mov
inc
je
adc
loopne
pop
aas
push
jmp
shr
inc
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
jmp
xor
sub
mov
int3
adc
div
fs
jmp
xchg
jmp
ror
into
out
cld
test
or
add
addl
jle
jmp
sub
mov
sbb
sub
xlat
les
cs
iret
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
mov
pushfw
push
call
mov
pop
xchg
add
sub
add
add
sub
push
xchg
mov
add
pop
add
sub
add
add
push
xchg
jmp
cli
stos
or
xchg
lea
pop
xorl
jmp
fwait
cmp
add
add
add
push
add
xchg
xor
sub
xchg
pop
add
sub
xchg
lea
lea
add
sub
push
add
xor
pop
push
lea
lea
jmp
popa
xchg
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
clc
shll
aaa
movsb
or
push
jmp
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
jmp
movsl
jp
mov
inc
pop
xor
shlb
xor
jmp
int
xchg
ror
into
out
cld
test
or
add
sub
add
jle
sub
mov
sbb
xlat
les
cs
iret
pop
jmp
gs
dec
loope
hlt
sbb
fidivrs
ljmp
mov
lea
nop
mov
lret
test
cmpsw
push
std
bnd
jmp
inc
sar
lahf
in
mov
mov
test
xor
jmp
imul
stos
or
push
and
fstps
fwait
cmp
adc
push
dec
jmp
dec
outsl
jl
pop
mov
es
jmp
mov
sub
mov
or
icebp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
call
or
add
sub
push
lea
pop
push
mov
add
pop
xor
push
mov
sub
sub
sub
sub
pop
pop
xorl
lea
lea
sub
add
add
add
xchg
add
add
sub
add
xchg
push
xchg
xchg
mov
lea
mov
pop
lea
sub
sub
push
mov
lea
sub
mov
xchg
lea
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
dec
loope
hlt
sub
sub
xchg
lea
pop
xorl
lea
add
add
lea
lea
add
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
cmpsw
push
std
repnz
sar
push
add
add
add
sub
lea
add
pop
xchg
push
mov
lea
xchg
sub
xchg
add
pop
xchg
xchg
add
add
add
add
sub
add
push
xor
sub
xchg
xchg
pop
push
jmp
pop
lods
jne
lds
add
add
add
lea
sub
lea
jmp
popa
add
pop
push
mov
mov
mov
xchg
pop
dec
inc
push
add
xchg
xchg
xor
add
pop
add
add
sub
add
jmp
inc
jns
pop
insb
sub
add
inc
sub
sub
sub
xor
add
sub
add
add
xchg
xchg
xchg
inc
add
push
jmp
div
fs
pop
add
add
sub
add
pop
xorl
xchg
lea
lea
push
mov
add
jmp
mov
sbb
and
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
test
mov
xchg
jmp
xchg
arpl
ficomps
icebp
add
add
add
inc
add
add
push
jmp
scas
mov
lds
rorb
or
rcll
sbb
shr
push
mov
sub
pop
push
lea
add
mov
mov
pop
jmp
or
pop
add
add
add
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
stos
fwait
cmp
das
adc
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jmp
jnp
icebp
push
inc
sub
mov
scas
dec
jmp
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
mov
call
dec
sub
daa
aam
jb
rolb
add
add
xchg
xchg
push
mov
sub
pop
push
mov
pop
xchg
xchg
push
xchg
mov
mov
pop
lea
sub
sub
add
sub
lea
pop
xorl
lea
push
mov
lea
mov
mov
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
jmp
lods
loop
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
jmp
lret
test
cmpsw
jmp
push
std
repnz
sar
lahf
in
mov
mov
jmp
test
xor
jmp
imul
stos
or
push
and
fstps
jmp
fwait
cmp
jmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
jmp
es
mov
cmpb
jnp
icebp
push
inc
sub
add
add
sub
loopne
pop
aas
jmp
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
add
and
pushf
ror
jmp
mov
jmp
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
lods
loop
sub
xor
cmp
dec
loope
hlt
sbb
pusha
sbb
mov
js
mov
sub
nop
mov
jmp
lret
jmp
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
movb
add
jmp
adc
cmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
jmp
scas
dec
fsubr
das
in
imul
xchg
popf
adc
loopne
lock
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
jmp
inc
jns
pop
insb
xor
xchg
pop
add
inc
jmp
movsl
jp
mov
jmp
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
jmp
test
or
add
cmp
jle
sub
jmp
mov
sbb
xlat
les
cs
pop
gs
jmp
dec
loope
hlt
sbb
fidivrs
ljmp
lea
nop
mov
lret
test
cmpsw
push
std
repnz
jmp
jmp
mov
test
mov
sbb
cli
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
jmp
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
call
lods
jne
jnp
icebp
push
xchg
add
add
lea
add
add
pop
xorl
push
mov
mov
mov
mov
xchg
pop
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
das
cmp
sbb
cmp
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
push
dec
jmp
adc
div
fs
jmp
xchg
ror
into
out
cld
test
or
add
sub
add
jle
sub
mov
sbb
xlat
les
xor
cmp
dec
loope
hlt
sbb
fidivrs
test
clc
jmp
lea
nop
mov
xor
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
jmp
and
movb
icebp
and
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
pop
pushfw
push
call
andl
shr
lods
jne
jnp
mov
mov
lea
pop
jmp
sub
adc
add
lea
xchg
mov
mov
xchg
pop
xchg
sub
inc
xor
xchg
lea
xchg
dec
inc
sub
add
sub
sub
pop
xorl
xchg
sub
add
xchg
xchg
sub
sub
sub
xchg
dec
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
xchg
div
fs
adc
jmp
jmp
add
jmp
xor
xchg
add
lea
mov
pop
sub
add
lea
push
xchg
pop
pop
xorl
jmp
hlt
sbb
fiadds
jmp
mov
lea
nop
mov
add
push
lea
lea
lea
add
pop
jmp
dec
mov
test
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
imul
stos
or
add
lea
mov
add
lea
lea
pop
add
add
sub
sub
jmp
add
add
add
push
jmp
pop
lods
jne
jnp
jmp
push
inc
sub
pop
xorl
add
dec
xchg
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
popa
xchg
popf
add
sub
push
xchg
pop
push
mov
pop
push
xchg
xchg
xor
add
xchg
pop
push
xor
sub
pop
dec
inc
lea
xchg
add
add
lea
pop
xorl
push
sub
sub
add
xchg
lea
pop
xor
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
sbb
int
sub
sub
lea
jmp
call
add
sub
sub
jmp
mov
sbb
xlat
les
incl
sar
mov
xchg
pop
add
add
dec
xor
pop
xorl
jmp
mov
ljmp
push
add
add
mov
decl
dec
push
call
add
add
add
aam
popfw
jmp
pushfw
push
call
mov
lret
test
add
add
lea
lea
sub
sub
lea
pop
xorl
add
add
lea
sub
add
add
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
push
jmp
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
jmp
icebp
push
inc
sub
scas
dec
fsub
mov
pushfw
push
call
xchg
popf
adc
loopne
sub
jmp
clc
lea
push
add
pop
sub
add
sub
sub
lea
lea
xchg
sub
add
add
add
lea
pop
xorl
xor
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
outsb
jmp
setl
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
jmp
hlt
jmp
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
push
xchg
jmp
test
xor
imul
stos
or
push
and
call
dec
xchg
stos
fwait
cmp
sub
jmp
dec
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
mov
jmp
popa
jmp
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jmp
jns
pop
insb
jmp
xor
xchg
pop
add
and
outsb
setl
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
add
pushfw
push
call
test
or
or
xchg
cmp
jle
push
mov
lea
mov
lea
sub
mov
pop
add
add
lea
xchg
lea
sub
add
sub
sub
add
inc
push
mov
mov
mov
pop
push
add
sub
xchg
lea
lea
pop
jmp
ds
in
sub
add
pop
xorl
sub
sub
xchg
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
push
and
fstps
fwait
cmp
jbe
sub
dec
add
push
dec
dec
outsl
jl
pop
mov
out
push
mov
cmpb
jnp
icebp
push
inc
sub
jmp
in
jmp
imul
xchg
popf
adc
loopne
pop
aas
or
push
in
pop
clc
shr
sub
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
jmp
inc
jns
pop
insb
xor
xchg
pop
add
and
pushfw
push
call
setl
and
xchg
add
add
push
mov
mov
sub
xchg
mov
pop
sub
sub
jmp
test
or
add
lea
push
mov
lea
mov
lea
pop
pop
xorl
add
sub
inc
add
push
mov
xchg
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
arpl
add
or
add
sbb
add
xchg
lea
sub
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
scas
mov
shll
lea
add
add
pop
jmp
fdivs
push
xchg
test
sub
sub
sub
sub
lea
pop
xorl
xchg
add
sub
add
dec
xchg
sub
add
sub
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
adc
dec
outsl
jl
xchg
lea
add
add
push
jmp
pop
lods
jne
jnp
icebp
jmp
push
inc
sub
mov
mov
lea
pop
push
add
mov
lea
pop
xchg
add
sub
pop
xorl
sub
xor
xchg
push
xchg
add
pop
jmp
inc
out
aam
jb
xchg
lea
xor
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
jmp
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
jmp
into
out
cld
test
or
add
cmp
add
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
cpuid
pushfw
push
call
sbb
fidivrs
ljmp
add
add
rolb
sub
xchg
pop
xchg
sub
add
sub
xchg
pop
xorl
add
sub
xor
sub
add
sub
sub
xchg
inc
sub
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
ja
dec
jmp
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
jmp
inc
sub
scas
dec
fsubr
cs
imul
jmp
xchg
ss
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
fld
inc
jns
pop
insb
xor
xchg
pop
add
and
add
jmp
por
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
iret
cmp
sub
mov
sbb
xlat
les
cmp
jmp
gs
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
shr
stc
ds
in
mov
mov
test
xor
imul
stos
jne
jmp
push
jmp
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
sub
inc
sub
scas
dec
fsub
jmp
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
ret
pushfw
push
call
lds
dec
sub
daa
add
add
add
xchg
xchg
push
add
lea
mov
sub
pop
lea
pop
xorl
inc
sub
lea
add
sub
lea
lea
push
jmp
div
fs
xchg
rcrb
mov
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
cld
test
jmp
or
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
jmp
repnz
sar
lahf
in
mov
jmp
mov
test
xor
imul
stos
or
push
and
jecxz
fstps
xor
ja
dec
add
push
jmp
jmp
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
jmp
scas
dec
jmp
fsub
mov
inc
je
jmp
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
jmp
insb
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
imul
fdiv
fs
xchg
ror
into
out
cld
test
or
add
add
pushfw
push
call
xor
sub
mov
arpl
pushf
add
add
sub
add
jmp
pop
gs
dec
add
sub
push
add
lea
jmp
mov
ljmp
and
shr
pop
push
nop
mov
xor
pop
xorl
add
add
push
lea
add
add
mov
pop
push
add
sub
lea
pop
xchg
sub
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
mov
out
pop
add
jmp
and
sahf
jg
xchg
stos
sub
lea
sub
add
sub
sub
sub
sub
xchg
lea
pop
xorl
lea
lea
lea
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
cwtl
icebp
xchg
xchg
sub
sub
sub
xchg
sub
sub
lea
xchg
sub
add
xchg
lea
pop
xorl
xchg
sub
add
sub
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
out
aam
jb
inc
jns
sar
roll
ret
mov
sub
sub
sub
sub
push
lea
sub
mov
mov
pop
sub
add
push
jmp
pop
push
decl
rcrl
or
mov
add
add
add
add
incl
roll
xchg
sub
sub
sub
add
add
sub
jmp
sub
mov
sbb
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
test
cmp
dec
loope
xor
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
loopne
lret
test
cmpsw
push
std
bnd
inc
sar
lahf
in
mov
cmc
dec
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
test
pushf
push
call
adc
dec
lea
sub
sub
jmp
adc
mov
cmpb
xchg
push
lea
add
xor
lea
sub
lea
pop
lea
sub
add
sub
add
xchg
push
add
mov
add
add
xchg
pop
push
add
lea
xchg
pop
sub
sub
push
lea
mov
lea
pop
pop
xorl
dec
inc
xchg
xchg
sub
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
pop
xor
jmp
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
shll
xlat
jmp
lods
loop
xor
cmp
dec
loope
jmp
jmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
ffreep
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
and
pushfw
push
call
test
sub
inc
xchg
dec
inc
xchg
lea
pop
xorl
push
mov
add
lea
lea
mov
pop
xchg
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
add
push
mov
pop
lods
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
shl
loopne
pop
aas
or
xor
pop
clc
shll
aaa
movsb
or
jmp
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
inc
add
pop
shr
sub
int3
adc
repnz
div
fs
xchg
jmp
ror
into
out
cld
test
or
add
addl
jle
sub
jmp
mov
sbb
jmp
xlat
les
cs
pop
gs
lock
loope
es
hlt
sbb
fidivrs
jmp
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
movl
jmp
mov
dec
dec
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
jmp
outsl
jl
sub
es
mov
cmpb
jnp
icebp
push
jmp
inc
sub
mov
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
movl
jmp
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
jmp
out
cld
test
jmp
or
add
addl
jle
sub
mov
jmp
jmp
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fsubrp
loope
mov
ljmp
lea
nop
mov
inc
push
mov
data16
cmpsl
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
jmp
cmp
jbe
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
jmp
addr16
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
jmp
mov
inc
je
adc
loopne
pop
aas
or
push
movl
jmp
ret
rcll
or
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
jmp
mov
inc
pop
xor
shlb
int3
adc
div
fs
movl
push
call
ror
into
out
cld
test
or
add
incl
add
xor
sub
add
add
add
xchg
sub
sub
pop
xorl
lea
xor
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
hlt
sbb
push
sub
mov
add
add
pop
sub
add
push
xor
pop
dec
inc
push
lea
lea
add
add
mov
mov
pop
jmp
test
xor
imul
xorl
add
inc
xchg
xchg
jmp
sahf
jg
xchg
stos
fwait
cmp
in
add
add
xchg
xor
sub
pop
xchg
sub
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
xchg
popf
adc
loopne
xor
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
jmp
pop
insb
xor
pop
mov
pop
add
and
outsb
jmp
setl
inc
pop
xor
shlb
int3
adc
div
fs
jmp
xchg
jmp
ror
into
out
cld
test
or
add
out
xor
sub
mov
sbb
xlat
les
cs
pop
gs
dec
mov
pushfw
push
call
hlt
sbb
mov
pop
daa
xchg
push
xchg
lea
add
jmp
push
nop
mov
pop
scas
mov
shll
pop
lea
lea
add
add
add
add
xchg
xchg
add
push
mov
mov
mov
lea
pop
sub
sub
pop
xorl
xor
push
lea
lea
lea
lea
pop
xchg
push
add
add
xchg
xor
sub
xchg
pop
xchg
add
dec
push
add
mov
mov
lea
add
xor
pop
jmp
in
imul
push
mov
mov
mov
mov
xchg
mov
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
rcll
or
das
cmp
jmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
jmp
xor
shlb
push
dec
adc
hlt
xchg
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
pushf
push
call
xlat
jmp
jae
test
jmp
dec
loope
hlt
sbb
jmp
push
add
add
pop
jmp
nop
mov
lret
test
shll
cmpsl
xsha256
cmpsb
rcrl
mov
add
add
roll
xor
cmp
add
adc
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
mov
push
xchg
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
sub
jmp
mov
pop
lods
jne
jnp
icebp
jmp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
in
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
mov
jmp
inc
out
jmp
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
outsb
setl
inc
pop
xor
shlb
jmp
adc
div
jmp
fs
xchg
ror
into
out
cld
test
or
add
addl
out
jle
sub
mov
sbb
xlat
les
cs
mov
pushfw
push
call
cmp
dec
loope
hlt
sbb
in
sub
dec
lea
sub
sub
pop
xorl
sub
xor
sub
xchg
add
sub
dec
sub
xchg
lea
push
lea
add
mov
pop
push
sub
xchg
xchg
sub
xchg
add
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
dec
outsl
jl
pop
jmp
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
popf
adc
loopne
pop
aas
jmp
or
push
clc
shll
aaa
jmp
movsb
or
xor
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
fidivs
sub
pushf
movsl
jp
mov
inc
pop
xor
repnz
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
sahf
jmp
cmp
jle
sub
jmp
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
fsts
mov
lea
nop
mov
lret
xorl
jmp
stc
ds
in
mov
mov
jmp
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
fsts
push
dec
dec
outsl
jl
xor
es
jmp
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
fistps
push
clc
shll
jmp
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
add
pushfw
push
call
sub
pop
shlb
mov
sub
or
push
mov
pop
sub
add
lea
pop
xorl
xchg
add
add
lea
add
add
lea
sub
sub
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
lods
loop
xor
sub
xor
lea
add
dec
xchg
xchg
push
mov
mov
mov
mov
xor
jmp
test
cmpsw
push
pop
sub
add
sub
xchg
xchg
sub
sub
pop
xorl
push
xchg
jmp
cli
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
jmp
icebp
push
inc
sub
jmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
jmp
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
pushfw
push
call
daa
aam
jb
inc
jns
lea
dec
add
pop
xorl
xchg
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
por
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
iret
cmp
sub
mov
sbb
xlat
les
cs
pop
gs
jmp
sbb
jmp
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
jmp
jmp
mov
test
xor
imul
stos
jmp
or
push
and
jmp
fstps
fwait
cmp
jbe
in
jmp
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
popa
jmp
