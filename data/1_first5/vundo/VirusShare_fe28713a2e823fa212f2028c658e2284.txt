sub
std
adc
ja
aam
mov
addb
call
and
pusha
stos
popa
jl
mov
inc
xchg
out
mov
addr16
nop
jl
mov
movsb
shl
mov
imull
sti
sti
dec
adc
lods
popa
adc
adc
test
mov
xor
enter
jecxz
sahf
in
sub
dec
mov
sbb
or
shll
fimull
sub
arpl
std
xchg
inc
cs
push
scas
inc
dec
repz
lea
push
sub
testl
shr
mov
les
adc
mov
test
jle
pop
imul
fisttps
xchg
sub
pop
push
sub
cmp
jo
cmc
mov
stos
rcll
jns
inc
scas
mov
jne
sub
push
mov
jg
mov
or
es
aam
ds
mov
ss
pop
adc
jl
les
add
mov
sub
ja
scas
js
mov
add
out
sbb
mov
sahf
jle
cmp
out
mov
mov
stc
mov
sahf
xchg
push
xor
jp
dec
adc
lea
call
mov
xorb
add
dec
data16
out
test
std
push
mov
lret
or
lods
push
lret
movsb
and
xor
addl
ret
dec
jo
outsl
popa
in
pop
add
xor
insb
push
jecxz
mov
test
cltd
aam
or
jg
adc
mov
in
imul
and
adc
jns
lret
jecxz
lds
pop
clc
bound
in
xchg
adc
pusha
mov
mov
nop
mov
sub
sub
jg
lock
fcoml
imul
push
insl
movsl
or
aad
cwtl
out
mov
sbb
sbb
add
push
cmpsl
ds
jg
fcompl
sbb
and
jl
add
cmpsl
data16
lods
repz
and
cmp
dec
popf
mov
test
std
add
ret
imull
iret
inc
fwait
xchg
cmp
mov
out
fs
push
addr16
scas
pushf
mov
les
dec
dec
lock
and
pop
sub
add
jne
movsl
cld
ja
pop
sub
into
sahf
sti
adc
add
add
into
inc
pop
fiaddl
ja
daa
int
icebp
cmp
fsubrs
daa
cld
call
lea
and
adc
aaa
add
outsl
stos
mov
cmpsb
movsl
pusha
gs
pusha
js
stos
shrl
mov
sub
sbb
into
cmpsb
push
sub
fnsave
push
into
jns
push
popa
jecxz
js
fwait
cmpsl
jo
dec
mov
negb
cmp
ljmp
dec
adc
pop
int3
daa
jl
es
lret
nop
dec
sar
dec
pop
dec
mov
rcrb
xor
movl
add
insb
mov
dec
sbb
dec
jecxz
jbe
loopne
jecxz
pop
cmpsl
add
gs
push
cmp
xchg
enter
cmp
push
adc
nop
lret
in
xlat
cmpb
jle
xchg
lret
loop
sbb
cs
jge
or
pop
pop
or
lods
rorl
sbb
pop
sub
mov
mov
and
sbb
jne
xor
xor
pop
clc
sbb
sahf
pop
movsl
stc
inc
mull
or
cs
jbe
jns
mov
lahf
nop
pop
rclb
and
pushf
sub
xchg
in
add
add
pop
xor
cmp
cmp
rol
mov
mov
call
arpl
nop
cmc
dec
pop
pop
arpl
jno
rcl
add
arpl
add
mov
lahf
mov
xor
adc
inc
int
xor
imul
imull
add
nop
sbbb
mov
push
mov
xchg
ds
jb
xchg
ljmp
loopne
pop
test
jo
outsb
fsubl
subl
leave
loopne
lcall
dec
iret
jmp
in
repnz
mov
in
shll
outsl
rcr
jns
out
fwait
xchg
pop
mov
data16
test
adc
mov
xchg
pop
cmpsl
xor
mov
jmp
mov
leave
ja
push
dec
and
inc
lahf
fmul
test
movq
in
call
imul
daa
adc
arpl
xchg
aam
stc
jg
sub
out
das
xchg
or
fstpt
sbb
dec
pop
mov
aaa
das
jle
dec
leave
xchg
pop
sbb
mov
push
aam
mov
ss
adc
dec
push
push
outsl
xor
mov
xchg
jp
sbb
jp
cmp
xor
pop
xor
add
mov
jno
inc
cmp
jecxz
cmp
pop
xchg
repnz
add
mov
pop
mov
mov
ret
ror
fs
dec
pop
pop
je
jecxz
mov
sbb
insl
mov
or
aam
mov
shlb
jnp
loopne
xchg
fmuls
les
es
das
cli
and
jbe
loop
lcall
and
dec
push
std
icebp
aam
push
mov
cmp
push
adc
pusha
gs
addr16
popf
scas
mov
pushf
mov
cmpsl
mov
mov
xor
pop
cwtl
xor
daa
push
adc
and
bound
js
clc
pushf
cld
inc
je
out
add
mov
das
clc
loop
iret
daa
xor
sub
mov
mov
sub
test
or
dec
push
hlt
sbb
mov
and
jns
arpl
sbb
movsb
mov
enter
dec
call
cli
fsubrl
xchg
pop
jns
xchg
fwait
clc
sub
xchg
mov
cmp
scas
enter
std
push
mov
cmp
test
push
push
push
sub
shll
adc
cmc
mov
mov
cmpsb
shrb
push
sbb
mov
and
sbb
movsb
jmp
repz
xlat
test
sti
push
je
sbb
addr16
enter
xor
xchg
lods
cmpsb
add
cmp
pop
xchg
mov
sbb
movsb
lea
loopne
xor
or
adc
inc
aam
xchg
sbb
shr
aaa
mov
in
stc
jl
decl
sub
and
push
jns
sbb
mov
inc
or
dec
cmc
outsb
mov
and
add
adc
xchg
aaa
pop
or
pop
lret
cmp
pop
push
shlb
cld
adc
rorb
and
add
popf
or
loopw
jmpw
sbb
jmp
jp
add
mov
xchg
es
mov
stos
xchg
dec
lahf
xchg
or
xor
and
cld
movsb
in
je
add
test
ds
sbb
jo
iret
jnp
or
mov
and
add
pop
sar
xorb
jno
and
cmc
sbb
out
sbb
stos
test
cmp
stc
push
mov
push
in
test
rcl
out
outsb
mov
loopne
bsr
jnp
pop
repnz
in
jb
xchg
mov
xor
pop
sbb
inc
jle
xor
cmpsb
ret
dec
inc
pushf
cli
cmp
ret
movsb
adc
insl
jne
je
std
dec
xchg
mov
sbb
ljmp
lods
mov
push
pusha
test
and
xor
mov
fstl
stc
xchg
pop
add
lods
xor
movsl
mov
shrb
cmp
push
adc
mov
lret
mov
dec
mov
daa
xchg
dec
fmul
ret
or
mov
pop
mov
in
outsb
adcl
stos
inc
mov
lret
mov
call
jo
scas
icebp
push
mov
push
push
mov
push
cwtl
fdivr
mov
or
lods
or
mov
sub
jmp
sub
test
jb
sbb
mov
pop
lcall
hlt
pop
fsubs
ss
cli
arpl
adc
inc
pop
mov
outsl
adc
xchg
test
cld
mov
adc
xchg
add
push
jp
sbb
pop
adc
jp
inc
lea
cld
mov
sahf
sbb
lods
cmp
and
pop
pop
fidivl
xorl
lds
in
and
jae
xchg
iret
adc
leave
push
sbb
inc
stos
push
in
in
xchg
mov
and
inc
lds
rolb
xchg
mov
loop
daa
enter
mov
xchg
push
mov
fstpl
adc
scas
sub
jge
mov
faddl
test
fbld
fmuls
mov
rorb
add
xor
mov
xor
mov
and
icebp
sub
mov
inc
and
icebp
xlat
fdivr
pop
cmc
adc
pop
out
dec
popf
adc
stc
fdivr
cmc
js
dec
xor
jge
jle
xchg
xchg
orl
cwtl
push
test
pop
in
nop
data16
jecxz
les
out
lods
lcall
pushf
sub
bound
scas
pop
mov
mov
insl
scas
cmpsl
xor
and
cmp
flds
cltd
inc
jns
add
jnp
shlb
push
cmp
cmpsl
mov
sub
in
dec
mov
cmp
outsl
jg
mov
mov
add
adc
mov
sub
sti
sahf
mov
dec
add
out
mov
shrl
clc
cld
fstpl
arpl
adc
mov
outsb
adc
test
jl
and
insb
add
lcall
in
and
dec
mov
xchg
lret
inc
scas
loope
mov
mov
push
movsb
in
stos
jl
xor
mov
imul
sub
js
sub
fucomi
outsb
aaa
clc
std
dec
call
inc
cwtl
mov
xlat
dec
repnz
sub
jge
mov
in
fdivrl
inc
dec
add
ret
jnp
fcoml
lods
rsm
cmp
into
mov
cmp
nop
in
and
test
fcomi
in
cltd
jecxz
sbb
adc
mov
add
mov
aad
dec
inc
inc
loopne
cwtl
movb
and
lds
stos
push
sub
jb
mov
jmp
movb
jns
pop
pop
jbe
lret
adc
sbb
add
cli
cli
xchg
mov
jbe
mov
cld
imul
out
mov
xor
lret
mov
push
shl
mov
js
out
mov
add
pop
mov
out
jne
out
sub
xor
ss
lahf
mov
push
pusha
pop
adc
and
mov
or
lcall
adc
in
enter
cmpb
sahf
add
repz
stos
jmp
adc
lock
push
pop
pop
mov
test
ds
xchg
xor
jno
adc
sbb
or
mov
jmp
mov
dec
clc
mov
insl
push
out
outsl
shrl
cmpps
xlat
andb
push
jmp
cmp
cwtl
pop
mov
xchg
fldl
xor
mov
daa
dec
jl
mov
daa
pop
xor
rclb
int3
dec
sub
add
shll
mov
scas
sarl
push
sbb
adc
jecxz
cmpb
out
pushl
iret
cmpsl
cmpl
test
mov
adc
addr16
lahf
sbb
imul
popf
inc
lods
add
inc
cmp
mov
lahf
data16
sub
int
fildl
push
popf
dec
orl
fisubl
cwtl
shrb
mov
pusha
int
stos
inc
mov
push
iret
xor
cmp
pop
sub
insl
xchg
mov
iret
bound
dec
rorb
iret
mov
add
and
xor
adc
add
imul
cwtl
adc
push
sbb
or
mov
lcall
jnp
in
push
or
out
adc
aad
ss
push
cmp
lret
or
ljmp
push
scas
adc
insl
inc
adc
cmc
in
je
outsl
sub
rorb
dec
xor
test
jmp
jo
fs
cli
push
cwtl
repnz
int3
inc
xor
mov
inc
sub
lcall
mull
mov
stos
inc
sbbb
sbb
lods
push
shr
mov
hlt
xor
xlat
cmp
adc
pop
push
adc
rolb
add
lahf
mov
sbb
icebp
leave
ret
rcrl
push
dec
sub
push
sbb
inc
stc
or
mov
dec
push
shlb
mov
cmp
or
add
sub
les
outsl
cs
icebp
jecxz
dec
mov
and
ljmp
dec
fs
pop
xchg
mov
dec
iret
out
lds
clc
je
cli
and
fstl
inc
into
add
jbe
cmp
test
inc
dec
mov
punpckldq
xor
mov
out
pop
and
jns
jmp
mov
cmp
adc
xchg
jp
pop
sahf
out
popa
test
mov
sbb
test
push
jae
dec
leave
sub
adcl
int
das
inc
aam
enter
inc
mov
lds
leave
nop
push
mov
in
adcb
cmpsl
aad
or
dec
outsl
pop
repnz
dec
inc
cmp
inc
adc
xor
pushaw
xchg
movsb
aaa
sub
outsb
mov
sbb
add
fwait
push
ficompl
lcall
insl
dec
in
daa
rcrb
imul
pop
inc
push
pop
int
cltd
scas
cld
nop
rorl
mov
out
push
jmp
xor
data16
add
aam
enter
fstps
sbb
mov
sti
gs
jg
mov
mov
dec
lahf
mov
and
das
cmp
imul
xchg
bound
adc
js
iret
inc
nop
dec
mov
fld
cs
mov
inc
sbb
mov
cmp
enter
ret
loope
and
icebp
dec
movsb
mov
push
into
inc
sub
pop
inc
jecxz
mov
arpl
mov
sahf
test
lcall
lods
xchg
cmp
leave
divb
sub
sbb
jo
xchg
lods
scas
jns
xchg
or
sbb
testl
sub
popf
movl
ficoms
xchg
addb
cmc
loopne
and
add
jmp
sti
pop
jp
inc
lods
mov
add
mov
addr16
fisubrl
loopne
pop
addr16
or
cmpsb
orb
and
test
ja
iret
enter
dec
mov
fbld
lret
shll
pop
jb
out
mov
mov
pop
mov
pop
movsl
jae,pt
pusha
dec
int
push
out
sahf
push
iret
mov
adc
jecxz
in
and
xor
inc
out
sbb
fstl
dec
mov
xor
dec
sbb
jg
xlat
cmp
xor
jecxz
add
xor
jle
loopne
push
jmp
sbb
mov
notl
jne
push
jne
pop
pop
sti
xorl
sbb
mov
push
sub
in
dec
dec
xor
pop
mov
jae
pop
push
mov
mov
xchg
stos
enter
insb
jns
jno
pop
or
push
fadd
jmp
and
gs
ret
or
cmpsb
push
fadds
mov
filds
stos
push
mov
or
jecxz
in
rclb
ljmp
mov
xor
enter
in
jae
add
dec
sub
cmp
lods
and
add
pop
jl
and
inc
pop
icebp
or
stc
pusha
mov
psrld
roll
adc
mov
jecxz
hlt
jno
rcll
test
pop
imul
mov
xrelease
out
scas
fldl
mov
je
pushf
pusha
cmc
push
stos
mov
outsb
mov
pop
inc
mov
lcall
popa
out
movsb
push
and
test
dec
xchg
mov
aas
mov
cmp
js
les
mov
inc
ret
xchg
addb
mov
aaa
cli
sbb
jnp
rdmsr
fnstenv
push
mov
push
repz
aam
shrb
test
popf
push
cmp
push
sbb
xchg
mov
pop
btr
sub
clc
jne
add
xor
mov
int3
and
push
or
inc
jae
pop
fisubrl
dec
mov
lcall
fistps
es
jg
pop
mov
lret
int3
cmp
js
xchg
fwait
jg
loope
add
mov
stos
mov
movsb
je
push
inc
mov
cltd
shrl
fwait
xchg
jl
dec
push
sbb
aad
or
fdivl
pop
fucom
shl
sbb
dec
jmp
xchg
test
sarb
or
int
add
xorl
outsb
jb
xor
aam
test
cmp
push
mov
mov
sbb
inc
pop
sub
stos
ds
push
jp
jg
mov
pop
es
fidivrs
lahf
jnp
mov
je
push
jnp
dec
mov
mov
fs
dec
xchg
pop
jbe
cli
out
xlat
pop
xor
cmp
mov
pop
mov
mov
or
iret
popa
int3
push
cmp
xor
jns
mov
inc
pushf
push
gs
imul
and
jg
cmpsb
push
rcll
loope
sub
sbb
fists
jecxz
xchg
bnd
idivb
insl
pop
in
cmp
rcll
ljmp
jo
mov
mov
out
jns
pop
xor
mov
cmp
js
mov
xor
sbb
and
mov
scas
out
cwtl
pop
mov
pop
aam
mov
and
jns
cmc
cltd
mov
push
outsb
pop
jne
test
enter
in
sbb
inc
enter
cmp
stos
mov
fisubl
pop
push
ret
xlat
pop
jmp
jne
pop
sub
sbb
add
out
inc
push
pop
xchg
add
outsb
add
push
add
mov
shrb
xchg
ds
jbe
mov
jg
in
scas
ss
in
setb
pushf
sbb
fnstsw
and
data16
sbb
xor
jbe
out
and
es
xchg
out
ficoms
sub
xchg
out
rolb
jae
push
xor
hlt
test
movsb
les
in
imul
ja
aam
rol
pusha
xlat
jmp
jle
xchg
jbe
inc
dec
inc
idivl
jbe
das
mov
shrl
shl
push
mov
insl
dec
xchg
lods
push
xor
adc
stos
and
lock
jne
cmp
imul
call
stos
sahf
pop
mov
sti
xchg
mov
loopne
cmpsl
push
call
out
mov
stc
jae
data16
mov
andl
iret
jp
push
lods
mov
insb
push
mov
cmp
imul
inc
fisubrl
test
add
inc
jle
ret
jbe
mov
or
movsb
jge
std
mov
dec
jno
cmpsb
lods
shlb
push
sbb
mov
sbb
mov
lcall
fcomps
mov
mov
mov
negl
push
dec
aad
lcall
leave
sahf
stos
inc
sub
add
leave
add
xchg
pop
mov
lcall
cld
pop
xor
movsl
pop
sahf
je
dec
mov
mov
lret
mov
test
aad
cli
pop
ja
jmp
sub
sub
push
rorl
push
add
or
aas
mov
cmp
sahf
in
mov
outsl
jl
jb
in
xchg
out
add
insb
stc
ret
in
js
jb
fisttpll
adc
rcrl
stc
sbb
iret
mov
ret
cmp
inc
adc
push
pop
popa
aaa
jmp
mov
out
jp
xchg
pop
hlt
movsb
push
in
dec
leave
shl
sub
and
add
repnz
and
ficompl
jo
mov
push
imul
adc
cmpsb
dec
cmp
rolb
inc
repz
push
push
inc
jl
mov
stos
js
sub
movsb
cmpsb
rcr
sbb
lcall
jne
aaa
sub
mov
cld
push
add
nop
push
and
add
int3
arpl
gs
rcll
sarl
lock
inc
cmp
sub
mov
test
mov
adc
dec
std
pop
sbb
clc
adc
sar
stos
mov
gs
pop
test
roll
bound
in
push
inc
push
inc
jecxz
fdivrs
stc
insb
int3
cmc
mov
jno
arpl
xchg
or
adc
cwtl
inc
stos
fbstp
or
push
jl
dec
inc
pusha
pop
xlat
enter
sbb
push
sub
lcall
xchg
stos
lret
push
sub
pop
mov
fnstcw
pop
sarb
or
push
es
mov
pop
je
outsb
mov
daa
mov
pushl
je
xchg
std
mov
mov
ljmp
shrb
pop
repz
adc
fcmovnb
lods
jge
add
es
xor
ficomps
xchg
mov
hlt
dec
icebp
ljmp
loopne
jo
dec
jp
dec
add
or
out
mov
enter
sbb
push
mov
add
add
into
and
jl
inc
sub
stc
stc
pop
cmpsl
adc
inc
lret
and
shll
mov
sub
fnstcw
push
pop
pop
or
xchg
sahf
lds
adc
xlat
or
push
dec
cld
push
mov
frndint
test
lods
pusha
lea
mov
sahf
mov
add
push
mov
pop
test
in
mov
clc
fwait
pop
mov
rolb
mov
xchg
sub
xor
pcmpeqb
xor
or
in
and
inc
mov
pop
stos
push
mov
in
mov
in
ds
fdivrl
dec
frstor
pop
std
out
xor
xor
lds
sub
cmp
into
js
test
xchg
pushf
mov
mov
xchg
dec
icebp
adc
pop
sbb
pop
stos
fwait
out
subl
sti
mov
out
cmp
sub
ja
aas
fnstcw
movsb
inc
mov
dec
lods
mov
sub
mov
mov
in
add
sub
mul
push
nop
push
aas
aam
fstpl
pop
cltd
sbb
fwait
int3
ss
sbb
mov
add
xor
aas
test
sub
lods
push
cmpl
adc
push
pop
inc
addr16
xor
push
movsl
push
dec
and
fwait
cli
repnz
cmc
mov
jbe
push
ret
mov
push
pop
push
jb
ss
scas
xor
mov
sub
jl
fidivs
push
mov
fldcw
fisttpl
pusha
and
mov
jns
xchg
shrb
outsl
mov
stos
sub
xchg
sbb
mov
xchg
lret
fcoml
inc
repnz
push
sbb
push
aad
and
imul
stc
pop
mull
pop
ficomps
fwait
pop
pop
imul
lret
xchg
jne
jne
fnstsw
jp
mov
push
xor
mov
sbb
cwtl
jno
mov
subl
pop
or
push
jl
sbb
mov
test
add
push
je
jp
mov
ljmp
xchg
icebp
out
add
shrl
dec
pop
sarb
xchg
mov
shlb
roll
data16
jo
fnstsw
movsl
or
ret
out
sti
xchg
xor
pusha
ror
xlat
jns
or
in
popa
sub
scas
inc
or
cmp
nop
xchg
inc
sub
jmp
xchg
mov
xor
lods
jo
insb
mov
cmp
rcr
in
push
sbb
adc
xchg
add
mov
sbb
mov
fwait
dec
psubw
ja
rolb
sbb
test
dec
fsts
mov
or
leave
jle
cmpl
movl
dec
ljmp
inc
shl
arpl
sbb
mov
in
mov
mov
mov
mov
andl
push
jbe
dec
and
xchg
pop
adc
xchg
js
and
lds
pop
pop
cmp
adc
cltd
or
cli
lea
rcl
stos
jmp
mov
cld
pop
ss
xchg
loop
bound
adc
inc
divl
fldt
jnp
dec
and
push
fld
sti
scas
xchg
into
aam
and
in
out
fists
test
mov
enter
mov
xchg
mov
idivb
xchg
out
idiv
xor
pop
add
inc
and
push
and
push
fs
hlt
cmp
adc
xchg
sbb
inc
sti
and
aad
push
test
xchg
push
dec
sbbb
push
push
inc
inc
add
cmpsb
xor
xor
movsb
sbb
test
notl
daa
mov
mov
insb
mov
in
pop
mov
add
sub
xor
loopne
and
adc
sub
mov
lock
mov
imul
in
mov
dec
cmp
fistpll
stos
dec
xor
xchg
out
out
call
dec
push
or
or
ja
xchg
jns
mov
inc
repz
stos
loopne
push
inc
mov
es
pop
shlb
push
sub
not
out
dec
rcrb
and
out
adc
in
xchg
sti
dec
and
xchg
in
xor
lcall
or
cld
andb
adc
xchg
ror
cld
fmul
cmp
or
and
enter
adc
and
add
movb
mov
lret
sub
fistl
stos
neg
inc
jmp
dec
lods
adc
call
ret
jle
inc
adc
cmpb
dec
outsb
into
cmp
popf
stc
sti
xchg
jecxz
xor
mov
and
add
in
sbb
cmpsb
xor
push
sbb
aas
cmpsb
and
jg
xchg
hlt
jp
data16
mov
or
jns
jb
ret
pop
sbbb
stos
fwait
es
outsl
mov
xadd
mov
in
xchg
mov
jmp
sbb
decl
push
xchg
sbb
mov
rcr
sahf
sub
out
and
sbb
ret
mov
aaa
call
xor
jl
sub
sbb
fcompl
cmpsb
jae
or
push
rcr
jno
cmc
ljmp
mov
xor
ljmp
ret
or
sub
jge
shrb
mov
scas
jecxz
test
pop
rcrb
cli
cwtl
fdivrl
mov
push
push
jg
pop
loop
mov
cmpsl
rcr
arpl
cmpsl
pop
out
add
ret
mov
int
mov
push
js
sbb
outsl
dec
push
push
aam
pop
pop
call
sub
jecxz
repnz
push
icebp
jmp
das
jge
xor
fimull
jmp
xor
je
outsl
xchg
cld
mov
pop
or
add
add
pop
dec
or
fwait
int
xchg
adc
pop
cli
jae
lcall
jecxz
mov
or
outsl
cmpsl
and
dec
cwtl
add
pop
js
hlt
enter
adc
xchg
adc
jmp
int3
push
add
call
in
or
lea
or
stos
push
xor
inc
cmp
in
add
or
pop
inc
rclb
lock
bound
shrb
in
aad
js
mov
or
fucom
lcall
jle
rorb
jmp
repnz
rcl
daa
rorl
or
jle
sbb
push
popa
lock
or
xor
or
shrl
push
push
or
jbe
mov
jne
inc
adc
mov
out
jb
pop
xchg
push
addr16
cli
enter
and
int
ss
inc
fldenv
mov
cmp
dec
add
mov
pop
movsl
xchg
in
sbb
sub
inc
mov
fldl
or
dec
ror
and
jl
sub
arpl
and
push
rcrl
jnp
mov
jg
stos
push
add
lret
cmc
movsl
lock
fstpt
stos
clc
ds
out
pop
push
sub
and
inc
mov
jb
leave
test
and
xchg
lea
negl
aas
fcmovne
out
push
sub
loop
repz
stc
sub
xchg
dec
fistl
jl
mov
lret
jge
icebp
fsubrl
test
and
lock
js
scas
shlb
sub
inc
movb
and
inc
cmp
ss
sub
mov
subb
arpl
fstpl
mov
aad
fcoml
push
mov
scas
dec
adc
loope
imul
mov
out
mov
push
push
loop
xchg
jle
jo
adc
inc
je
pop
push
int
mov
divl
jg
imull
push
lret
mov
sub
std
mov
add
pop
sti
mov
push
scas
jl
add
fwait
cmp
cmc
pop
addr16
dec
aam
insb
fbstp
pop
es
add
jbe
mov
ret
mov
rcrb
jge
mov
mov
adc
inc
mov
bound
mov
jmp
pop
bnd
or
es
pop
push
ret
enter
sub
sbb
popf
add
mov
outsl
lcall
mov
test
popa
test
aaa
xor
test
inc
cmpsl
dec
xchg
push
xchg
xchg
outsl
or
imull
popa
and
arpl
pop
pop
jno
jmp
popf
mov
and
mov
cmp
sbb
add
mov
rorl
insl
mov
jmp
call
push
lods
add
fcmovu
jp
jae
test
xchg
adc
mov
or
cmp
outsb
mov
pop
out
sub
inc
hlt
loopne
aad
mov
ss
push
push
sbb
mov
jae
stos
popf
inc
xchg
push
loop
pop
into
jnp
cs
ds
mov
mov
mov
dec
sub
pop
fsubs
mov
push
sub
and
push
sub
jo
xchg
ret
js
and
movsl
or
aam
xor
dec
jle
cmp
neg
in
jb
or
pop
stos
data16
mov
dec
mov
add
imul
clc
push
ja
idiv
inc
test
xchg
mov
jmp
jne
pop
shrl
and
sbb
rorb
nop
pop
lods
sub
in
xor
mov
mov
mov
rol
je
mov
imul
add
rolb
jb
cld
pop
sub
inc
int3
xchg
test
mov
sbb
fisttps
adc
fwait
add
xchg
jecxz
test
or
bound
clc
into
out
cld
in
test
lret
and
lock
jp
and
xchg
ret
movsb
mov
jnp
fiaddl
pop
xchg
fldl
jmp
in
cs
sbb
xor
divl
insb
es
jl
mov
and
insl
cmp
out
fstps
inc
cmp
inc
mov
jae
push
test
jno
mov
push
mov
mov
mov
mov
jp
mov
push
mov
cmc
dec
kandw
into
mov
pusha
push
popf
adc
scas
push
scas
jns
jg
and
hlt
xchg
and
in
xor
mov
bound
insb
and
sub
sub
mov
jecxz
inc
stos
mov
fiadds
lds
jnp
cmp
add
ja
xchg
jmp
mov
mov
jne
mov
stos
push
hlt
add
add
pop
ljmp
fsubrl
push
into
push
xchg
mov
lods
mov
insb
mov
mov
lods
mov
mov
mov
push
ret
inc
aam
cmp
cmpsb
imul
inc
lcall
idivb
pop
push
mov
or
inc
mov
adcb
js
xor
dec
outsb
fdivrs
sub
neg
sub
out
xchg
cs
insb
jecxz
insb
inc
or
lock
inc
std
push
stos
lret
sub
std
push
repz
xchg
push
repnz
ret
orl
ret
push
stc
inc
mov
lret
rcll
dec
cmp
dec
jp
arpl
popa
in
jnp
mov
jmp
movsl
andl
dec
mov
mov
jno
push
jns
mov
jnp
sub
movsb
dec
mov
stos
pop
mull
stos
adc
lret
shlb
and
aaa
outsb
enter
data16
mov
push
and
jbe
push
xor
mov
aaa
ljmp
jno
mov
jae
jbe
mull
movsb
mov
jl
notb
cmp
scas
fldcw
cmp
mov
push
fmull
es
popa
dec
cmpsb
stos
ret
into
sahf
sub
xor
cwtl
adc
xorb
mov
inc
push
mov
mov
jl
add
out
mov
xorb
pop
inc
pop
movsb
fildll
sub
outsb
ss
xor
imul
out
or
sub
in
lock
js
testl
rorl
push
mov
es
push
jmp
xchg
jbe,pt
push
adc
sahf
and
and
call
ds
rclb
push
mov
inc
mov
scas
cmp
fdivrl
ret
dec
adc
mul
lret
lea
addr16
push
out
pop
addb
inc
mov
rcrb
insb
inc
shll
bound
sbb
and
push
add
jnp
ret
int
pusha
clc
pop
mov
push
sub
subb
dec
outsb
dec
sbb
ss
sub
jmp
mov
xor
enter
xchg
sahf
ret
vpsubb
aad
jmp
and
scas
in
ss
cmc
in
scas
fs
je
jb
shll
nop
movsb
mov
inc
add
repnz
iret
test
fadd
inc
into
jg
in
outsl
sbb
xor
sbb
pop
inc
fdivrl
lret
arpl
jno
mov
insb
ss
daa
ret
out
lret
fcomps
cmc
aaa
insb
lahf
or
adc
shrb
mov
insl
mov
lock
lahf
popf
sbb
inc
jnp
sbb
test
push
jle
mov
fcoml
mov
adc
sbb
je
cltd
pop
mov
popf
lods
mov
fwait
out
push
xchg
xor
fnstcw
xchg
push
leave
fcmovbe
lcall
mov
mov
push
std
aaa
mov
ss
push
cmp
xor
xor
popf
push
inc
mov
xlat
jb
mov
rorb
mov
push
jle
inc
repz
sahf
mov
push
mov
ljmp
dec
in
aas
push
gs
aad
std
leave
cmp
stos
fbld
mov
aas
mov
xor
aaa
pop
add
cmp
test
mov
add
movsb
sub
jg
sub
repnz
inc
mov
mov
xor
into
pop
inc
je
popf
idivl
cmp
or
dec
mov
mov
repz
pop
jmp
add
add
mov
std
lods
xchg
sbb
jge
mov
xor
lods
dec
out
or
or
daa
enter
imul
stos
jae
dec
sub
pop
mov
pushf
aas
sbb
in
cmp
push
clc
push
mov
mov
and
sarl
mov
mov
and
xor
sbb
jmp
stos
popf
leave
ror
or
pop
out
mov
nop
ss
mov
ss
lret
jp
xlat
inc
xchg
insb
rcrb
and
stos
popa
pop
sahf
adc
push
je
out
mov
inc
in
mov
mov
lret
les
jge
ret
bound
pmulhw
xor
int
mov
inc
sbb
bound
scas
les
adc
dec
lea
dec
cmpsb
push
out
push
add
jge
adc
mov
pop
int
xorb
popa
cmp
scas
je
inc
pop
sbb
mov
ja
iret
xchg
xor
enter
in
mov
and
cltd
lret
mov
xlat
mov
popa
mov
inc
mov
into
xchg
mov
pop
into
push
sub
xchg
fistpll
sub
insb
lock
add
or
push
test
fstpl
das
sahf
adc
stos
or
lret
dec
jae
jp
sbb
xor
ret
xchg
std
fwait
test
pop
pop
add
xor
mov
jle
lcall
dec
mov
mov
or
jnp
std
cs
adc
test
rolb
xor
maskmovq
negl
mov
adc
test
jl
mov
add
sbb
cltd
ss
adc
or
movsb
lock
mov
fs
xchg
scas
inc
adc
les
out
insl
f2xm1
cmp
mov
js
xchg
jp
mov
push
push
out
je
ss
lcall
enter
push
pop
sbb
jae
cld
push
ljmp
aas
sbbl
mov
or
inc
cmp
mov
pop
insl
test
pop
scas
fdivrp
in
negl
arpl
inc
dec
sbb
sahf
pusha
cmp
jno
push
loope
sub
aaa
cmp
loope
test
mov
and
test
je
inc
cld
mov
int3
aaa
or
and
mov
sbb
daa
loop
pop
lods
push
rclb
shll
shl
pop
hlt
inc
cmp
imull
cmpsb
adc
xchg
inc
mov
xchg
sub
stos
inc
cltd
loopne
sub
add
xchg
inc
cmp
iret
jnp
ja
and
test
lret
shl
adcl
rorl
in
ds
pop
xchg
mov
adcl
adc
sbb
jle
jle
xor
cmp
imul
dec
xor
and
je,pt
hlt
ficompl
les
test
pushf
insb
out
and
xchg
cli
and
or
and
xor
mov
in
in
pop
inc
aaa
data16
cwtl
dec
ret
loopne
hlt
aam
sbb
xchg
enter
inc
lahf
aas
loopne
outsl
dec
xor
stos
add
adc
inc
pop
dec
insb
push
idiv
dec
mov
ror
int
xchg
test
adc
dec
enter
imul
in
ja
rorb
mov
loope
push
cmp
push
or
mov
push
and
pop
sub
sub
pop
iret
lahf
xchg
gs
idivb
cld
adc
int
cmpsb
cmc
cs
lret
lahf
mov
mov
fnsave
jg
dec
inc
push
lods
stos
popf
xor
xchg
mov
loopne
adc
dec
mov
loop
mov
mov
imul
out
cmp
mov
fnstenv
mov
dec
fst
and
push
les
negl
adc
xor
js
pushf
push
xchg
push
js
test
sti
std
inc
xchg
outsb
xchg
hlt
jle
sbb
in
cmpsb
and
shlb
jl
add
jmp
push
aas
mov
push
repnz
insl
or
push
iret
mov
ret
popf
mov
jb
mov
out
popf
push
insl
aas
xor
shlb
leave
sysenter
leave
repnz
addr16
les
in
mov
mov
mov
dec
sbb
lahf
movsb
mov
cmpsl
fwait
jg
cmp
jle
mov
ret
adc
sub
icebp
xor
add
addr16
ds
inc
loop
jmp
movsl
sbb
clc
popf
mov
stos
popf
pop
shr
jae
dec
scas
mov
insb
or
jp
sbb
call
test
xchg
add
pop
in
add
jge
and
cmp
dec
adc
mov
in
dec
cltd
sub
or
test
cltd
xchg
rorl
movsl
add
jne
scas
jp
add
daa
mov
xor
imul
in
daa
loope
sbb
test
cltd
iret
nop
mov
cmp
mov
or
in
pusha
sub
mov
outsl
das
int3
test
or
push
out
seto
ds
and
jecxz
xchg
and
pop
adc
or
mov
push
pop
or
push
push
sub
jmp
dec
mov
xor
fisttps
xchg
xor
push
cmp
sub
cmp
mov
xchg
iret
dec
xor
in
das
rcr
xor
in
mov
mov
aaa
cli
jp
test
mov
popa
xchg
in
stos
cmp
cmp
mov
xchg
pop
test
jg
adc
pusha
aaa
sbb
push
pusha
jmp
loope
jne
out
outsl
jmp
cld
pop
fs
fcom
scas
mov
xchg
lret
rcl
dec
dec
aaa
subb
xor
ss
inc
cmp
popf
mov
loopne
jp
stos
repz
jbe
pop
push
movsl
cmc
out
subl
xchg
movsl
push
scas
hlt
xchg
cmp
bswap
pushf
pop
mov
and
mov
add
ret
push
mov
sub
orl
das
inc
mov
fisubl
call
push
jg
aam
aaa
pop
xchg
int3
xchg
dec
faddp
adcb
hlt
mov
fwait
lret
inc
movsb
rolb
test
pop
adc
mov
ret
xor
xor
mov
mov
jmp
inc
adc
push
in
int3
mov
mov
into
lods
and
cmpsl
cli
imul
mov
in
dec
ret
pop
out
pop
sar
xor
ljmp
adc
cmp
sub
pop
push
push
push
sub
dec
cmp
jmp
mov
lock
adc
je
jbe
inc
mov
addl
adc
mov
and
hlt
mov
jge
outsl
dec
push
loope
jmp
adc
adc
jecxz
scas
daa
add
je
or
adc
cmp
pusha
insl
popa
or
xchg
das
mov
ds
dec
insl
or
rolb
pop
jle
cmp
loop
je
cmp
inc
ljmp
int
inc
and
cmp
mov
cmp
push
xor
clc
loope
stos
bound
leave
dec
das
dec
cmp
cwtl
add
sbb
div
ljmp
xor
orl
and
add
adc
mov
inc
popf
lret
out
jmp
push
mov
push
clc
sbb
js
or
or
cmp
xor
cmp
roll
sbb
pop
loope
xchg
mov
pop
mov
mov
xchg
imul
inc
cs
sbb
xorl
pop
aaa
aas
aas
mov
std
sti
sbb
sub
faddp
pop
sub
je
sub
mov
int
aaa
dec
xlat
shl
or
addr16
mov
inc
xor
jmp
adc
fdivl
jns
mulb
lret
push
mov
rcll
popf
pop
fnstsw
mov
mov
sbb
decb
dec
pushl
push
popl
pop
in
and
sub
push
out
sarb
cmp
add
test
fstpt
loop
jo
or
daa
lds
pushf
lock
test
gs
mov
enter
add
sbb
jmp
cmp
scas
adc
cmpsb
inc
out
adc
adc
fwait
std
jns
std
jl
pop
xor
jcxz
ret
inc
sbb
xchg
xor
or
outsl
lahf
bound
orb
jb
divb
adc
push
arpl
mov
xor
xlat
mov
cld
mov
mov
sbb
jl
ret
out
int
sub
std
gs
lock
fmull
inc
and
lcall
aaa
stos
xchg
div
inc
je
stos
cltd
adc
arpl
jmp
leave
xor
push
mov
pop
xor
inc
pop
aam
sbb
cmp
sub
adcb
out
mov
mov
arpl
jnp
ds
sbb
in
push
mov
and
and
or
xor
xchg
lods
jp
faddp
out
cmpsl
adc
pop
push
mov
out
iret
mov
rep
fnsave
stc
out
lock
ds
test
and
pop
ljmp
mov
frstor
lock
outsl
dec
jne
mov
test
and
lods
and
push
pavgw
push
test
jne
cmp
dec
aad
xchg
add
mov
lods
and
call
jae
out
xchg
adc
int3
or
lcall
in
pop
enter
std
jno
leave
rorb
add
mov
out
stos
xchg
jae
orl
incl
leave
lahf
pop
arpl
fisttps
jg
jp
aam
out
mov
clc
sbb
fstps
in
out
adc
cmp
insb
add
or
jne
jne
adc
or
fs
outsb
xchg
add
mov
cli
and
dec
stos
xor
int
lcall
mov
out
rorb
sarl
jecxz
pop
add
add
push
mov
sub
add
jns
fstpt
jle
notb
jle
out
les
dec
mov
clc
or
sub
dec
inc
adcb
and
cmp
push
shl
mov
push
jl
popa
sbb
es
inc
dec
pusha
rcrb
push
or
push
aam
adc
fbld
inc
cmp
or
add
dec
insl
andb
jmp
das
xchg
test
dec
cwtl
push
cwtl
shlb
pop
loopne
push
inc
lea
add
ss
xchg
repnz
call
xchg
scas
movsb
sbb
inc
push
movsl
dec
jb
pop
divb
insb
ds
add
adcl
pop
jg
cmc
cli
sbb
mov
add
fistpl
repnz
test
std
add
jno
add
cmp
mov
stc
into
movsl
repnz
lock
psraw
clc
mov
fdiv
mov
mov
gs
cmp
iret
jne
leave
decb
mov
jne
xlat
out
lods
jmp
adc
inc
mov
mov
dec
or
xchg
idivl
lds
lds
das
bound
ss
call
sbb
add
test
test
cmp
imul
sub
sarl
repnz
mov
arpl
inc
jge
cmp
xchg
test
or
mov
add
xchg
pushf
jmp
cmp
sarb
test
test
pushf
das
fcoml
or
fisttpll
sub
inc
cmp
lea
sub
lds
cltd
lret
pop
aad
lahf
jnp
cltd
out
adc
cwtl
movb
sbb
int3
fs
jmp
insl
stc
fstps
jp
and
out
cmc
xchg
and
mov
pop
mul
fimull
sbb
sbb
jne
mov
inc
sbb
add
adcl
rclb
adc
movb
sub
push
or
imul
push
adc
js
aad
mov
jg
stos
jge
jl
lods
shl
data16
mov
mov
cmc
int
sub
or
in
mov
lret
mov
insb
sbb
or
sub
test
and
lcall
jmp
xor
in
cmp
or
out
inc
xor
and
testb
je
loop
pop
jne
mov
scas
fmuls
enter
ficoms
mov
rcr
aaa
push
xchg
sub
fidivl
xchg
lahf
xor
push
push
test
scas
lods
iret
out
mov
test
xchg
mov
inc
rcrl
loope
xor
enter
shrl
xchg
nop
rclb
xchg
iret
xchg
sbb
nop
dec
sar
and
dec
loope
jae
and
inc
xor
jb
mov
das
stc
pop
fisubrl
notb
sbb
in
stos
or
sub
in
cld
xor
mov
data16
ljmp
add
xlat
loop
inc
push
or
std
insb
pop
dec
int3
cmp
push
and
out
pop
jns
push
je
mov
cmp
jg
out
sbb
pop
or
rorb
fsubrs
cmp
fnsave
movsb
inc
pusha
cwtl
outsl
dec
xor
test
ds
rolb
mov
mov
cli
insl
xchg
fnstenv
mov
xchg
es
pop
loopne
in
inc
gs
jo
sbb
push
cmp
pusha
dec
mov
testl
xor
fimull
cmp
ss
adc
stc
inc
nop
negl
add
push
xor
jl
pop
xchg
xchg
pop
push
mov
mov
lea
out
push
dec
fdivr
add
xchg
scas
popa
add
push
call
sbb
scas
out
sub
mov
pop
adc
inc
in
into
adc
shll
sub
cwtl
sub
or
lea
sahf
or
fstl
loope
pop
mov
fsubrs
and
stc
pop
lret
int
inc
outsb
pop
push
dec
mov
inc
push
cmp
cs
xchg
dec
inc
sbb
rcrl
jg
mov
cmpsl
dec
xor
shl
scas
cmp
pop
push
push
ja
fwait
xor
nop
inc
or
pusha
in
xchg
shrb
push
mov
dec
in
xchg
bound
dec
scas
frstor
and
adc
fidivrl
test
mov
mov
xchg
movsb
popf
jae
xchg
and
add
sub
enter
aaa
push
jle
and
movsl
or
cmp
mov
xchg
or
movsb
std
xchg
call
inc
push
mov
inc
sbb
pop
push
ret
jo
push
pop
imul
leave
aam
mov
test
push
push
repz
out
and
mov
xchg
ss
and
add
stos
inc
movsl
dec
lret
and
ja
push
add
push
das
pushf
stos
mov
nop
push
xor
dec
cmc
lds
pop
hlt
outsb
repz
lds
and
add
jo
sbb
into
ficoms
push
xlat
xchg
rcr
mov
stos
fcomps
lds
sbb
stos
mov
push
sbb
cmp
pop
call
sub
xor
repz
shlb
sub
push
outsb
imul
sbb
xorb
stos
test
or
imul
xchg
sbb
mov
jno
jo
sti
dec
cmpb
ret
pop
shll
mov
pushf
or
push
bound
stos
sti
cmp
lahf
inc
mov
mov
pop
int3
push
call
cwtl
data16
xchg
test
loope
movsb
or
jne
xor
inc
dec
dec
push
mov
into
ficompl
stos
add
in
or
mov
adc
push
sub
daa
push
adc
mov
lea
sbb
ror
xor
test
into
mov
cli
xchg
pop
sahf
inc
adc
imul
enter
int3
in
imul
sub
mov
dec
sub
pop
clc
ret
pop
bound
std
subl
adc
data16
pop
call
cmpsb
mov
fwait
pop
mov
test
sbb
adcb
mov
andl
lock
push
imul
add
dec
adc
sbb
dec
fwait
mov
pop
cmp
test
insl
mov
repz
enter
and
cmpsb
push
pushf
pop
mov
dec
popf
test
hlt
xchg
aam
movl
pop
outsl
shll
dec
jp
insb
mov
data16
add
out
fsts
mov
lods
into
imul
ljmp
push
std
pop
adc
stc
xchg
mov
ret
and
cmp
or
sub
in
mov
jmp
sarb
jns
hlt
mov
negb
out
iret
iret
jo
jmp
enter
push
aas
push
lret
pop
fs
xor
scas
dec
ljmp
dec
inc
jecxz
xor
sub
repz
movsl
loop
sbb
adc
cld
dec
cmc
ret
xor
mov
or
mov
movsl
insl
xor
scas
xor
pop
sub
xchg
scas
xchg
insl
aam
inc
jge
test
xor
in
xchg
fcmovnu
push
pop
loopne
mov
icebp
fildl
pop
xlat
and
mov
pop
lods
jg
lret
cmp
mov
xchg
mov
scas
and
leave
cli
shl
sub
sbb
rcrl
jno
inc
xor
divb
xlat
sub
add
cmc
pop
lret
xchg
adc
mov
dec
mov
and
xor
rclb
pusha
imul
cli
ss
jge
jnp
sub
mov
roll
bound
lahf
je
add
pop
ja
inc
out
push
or
sub
dec
jge
xlat
stos
and
test
add
in
inc
loopne
in
mov
sub
pop
mov
scas
push
pushl
adc
mov
in
subb
aaa
mov
imul
or
subb
sbb
mov
dec
push
test
mov
jo
cmp
inc
gs
insb
cmp
lret
mov
cmp
mov
repnz
pop
imul
sub
insb
jno
lret
mov
insb
and
getsec
push
sbb
iret
cwtl
lcall
sti
dec
inc
and
jo
and
sar
and
rolb
mov
aad
stc
stos
cwtl
jmp
mov
add
insl
jbe
test
shrb
cmp
xchg
xchg
xchg
iret
mov
jmp
pop
aaa
add
sbb
cld
mov
inc
sbb
cmc
and
adc
and
lea
or
rcl
push
xchg
in
sbb
insl
notl
adc
push
loope
dec
cld
adc
out
and
xchg
idivb
scas
fcoml
je
pop
push
movsl
dec
daa
sti
mov
mov
addr16
cld
jmp
xor
sub
pop
shl
hlt
out
add
sub
roll
mov
imul
pop
arpl
lret
out
xor
mov
pop
out
ds
mov
xchg
out
mov
insl
daa
sarb
aaa
xor
call
inc
pusha
mov
aas
add
jl
push
dec
inc
shlb
stos
shll
clc
ret
xchg
icebp
push
and
sbbb
loopew
sub
subps
cli
iret
test
int3
dec
lret
mov
fstps
lock
mov
lds
rcrl
jp
cmc
mov
cmpsb
push
movsl
js
mov
lahf
je,pn
sahf
xor
xorps
imul
dec
and
xchg
rolb
or
int
ds
repnz
in
shll
adc
push
xor
or
pop
dec
or
adc
sub
or
pop
fdiv
nop
mov
mov
xchg
in
xor
xchg
gs
mov
pushf
cwtl
push
mov
xchg
dec
lock
xchg
mov
xor
loopne
or
sbb
testb
adc
adc
mov
arpl
and
test
sbb
adc
jb
faddl
pushl
mov
test
sbb
sbb
cmpsl
adc
int
leave
dec
push
sub
cmp
dec
mov
mov
in
push
mov
ret
xchg
addr16
fldt
and
insb
enter
or
leave
sbb
or
jp
jne
sahf
push
popa
jae
cli
mov
movsl
sti
js
icebp
mov
dec
add
sbb
popf
push
test
mov
xchg
adc
fwait
cld
or
mov
out
pop
sub
lea
or
nop
fst
sbb
xchg
movsl
fistpl
nop
push
mov
push
fistl
xor
fdivs
mov
ds
mov
fsubs
dec
adc
cli
mov
add
cmp
es
xchg
scas
pop
sub
xchg
or
push
popf
js
xchg
sbb
out
aad
pop
dec
and
inc
shrl
rcrb
mov
mov
mov
mov
add
fisttps
or
xor
pop
push
dec
push
sbb
je
rcrl
dec
ficomps
xlat
dec
jno
lods
sti
clc
popa
inc
jns
xchg
xor
push
inc
jg
sbb
pop
outsb
adc
test
fsubrp
out
icebp
imul
scas
dec
jbe
hlt
cmp
or
sti
pop
pop
fbld
sbbb
popf
dec
in
cmp
test
sbb
cmp
repnz
mov
jno
pop
aad
xor
std
dec
leave
pop
push
xlat
sub
sub
aaa
push
push
popa
cmp
xchg
or
call
data16
out
shll
shlb
repnz
data16
jno
push
mov
icebp
and
jmp
lcall
mov
test
aam
icebp
sbb
mov
cwtl
push
jno
je
movsl
and
or
pop
jg
popf
mov
rolb
ss
cs
mov
es
aas
fnstcw
pop
ret
jecxz
fs
push
gs
mov
add
sub
ja
sub
xchg
call
out
movsb
sbb
lret
add
xor
inc
aas
xchg
pop
in
mov
push
mov
xchg
jae
jge
cli
scas
mov
daa
into
xor
or
pop
and
dec
jmp
insl
fcompl
scas
ja
push
frstor
sbb
cwtl
mov
or
in
sbb
outsb
shrl
sbb
vpsadbw
jmp
jmp
ja
ret
divb
mov
pop
jb
rol
lock
lahf
test
jl
test
sar
xor
insb
imul
jl
aas
dec
cmp
inc
das
test
add
mov
or
movsb
fwait
pop
sub
inc
mov
xchg
fcmovne
leave
data16
and
hlt
out
inc
push
lock
mov
sbb
dec
add
xor
ds
iret
daa
sbb
in
mov
jnp
sub
mov
sbb
pushf
sub
cli
xchg
movsb
mov
dec
push
fsubl
dec
sbb
mulb
sub
push
repz
fbld
ljmp
pop
pop
insb
dec
inc
jbe
pushf
stc
in
imul
imul
xchg
int
idiv
add
or
int
idivl
jnp
aad
push
and
cmpsb
or
cmpsl
dec
pop
xor
in
cltd
cmp
bound
pop
ret
and
or
fnstenv
dec
inc
stc
or
pop
das
dec
xor
cltd
sar
inc
ret
sahf
out
sub
jne
in
cmpsl
push
xchg
adc
jecxz
nop
int
mov
aam
popf
add
sbb
stc
mov
nop
incb
js
adc
jp
push
das
add
movsl
hlt
xchg
add
fisubrs
jp
adc
test
adc
incb
push
cmp
fistl
mov
push
mov
xchg
icebp
dec
shll
loope
lods
jae
jb
xor
ret
add
xor
jecxz
clc
enter
mov
cmpsb
daa
push
sbb
sub
outsl
or
fldl
insb
sbb
ja
leave
pop
add
dec
pop
sub
cmp
add
xchg
xor
xor
les
cmp
push
cltd
lahf
jmp
dec
dec
lret
pop
mov
outsl
dec
push
pop
ret
or
cmp
xchg
mov
inc
push
pop
xchg
inc
test
aas
imul
cmpb
dec
mov
shrl
jbe
sbb
xor
daa
loope
dec
mov
xchg
mov
inc
sub
out
xchg
mov
cli
jb
ljmp
xchg
push
les
adc
test
shrl
fstps
dec
enter
mov
mov
sub
dec
or
repnz
in
cmp
pusha
cmp
fmul
mov
mov
pop
lods
mov
cmpsl
out
mull
mov
xchg
ror
addl
leave
push
mov
mov
adc
adcb
ficoml
mov
je
stc
and
inc
shll
pop
or
mov
jo
fwait
pop
ret
mov
call
das
push
add
push
cs
sahf
mov
and
push
mov
into
clc
push
sahf
fstl
lcall
das
testl
pop
sbb
test
pop
sahf
nop
insb
cmc
dec
aad
stos
and
or
lock
sbb
mov
xchg
divl
bound
push
jp
cmp
and
inc
cmc
sub
pop
test
push
cmp
call
sub
add
jnp
dec
jmp
xor
jmp
ljmp
int
testl
add
sub
sbb
pop
addr16
fcomp
mov
mov
sahf
push
jb
test
xchg
cmp
int3
push
repz
push
mov
std
subb
xorb
fsubs
push
add
arpl
pop
or
or
xchg
insb
pusha
imul
jmp
push
sbb
mov
into
test
popf
cs
ljmp
faddp
outsb
insl
in
pop
dec
push
ss
xchg
mov
mov
rcrb
cmpsb
and
xchg
xor
mov
test
cmp
mov
lret
jge
lahf
leave
mov
cld
int
js
lods
sub
stc
cld
ljmp
xor
or
push
mov
dec
ret
test
imul
add
test
fdivs
sahf
inc
idivl
jge
push
dec
aam
addr16
jecxz
in
xchg
fmuls
xor
push
out
inc
pop
test
xchg
mov
cmpsl
stos
cmp
aam
lret
loop
or
mov
out
pop
dec
lds
ret
mov
dec
add
xor
sbb
fucomip
or
imulb
das
fildll
mov
sbb
jg
mov
cld
cmc
push
sub
in
fs
scas
sbb
jp
lods
movsl
cwtl
push
xor
dec
es
pop
iret
push
movl
push
mov
outsl
xor
xor
faddl
cmc
cmp
dec
push
cmp
cmp
cmp
mov
repnz
xchg
sbb
push
inc
sbb
sti
xor
cmp
jnp
push
and
insl
pop
dec
mov
out
lea
xor
stos
or
flds
mov
in
cs
mov
sbb
mov
jb
sbb
sbb
sti
sbb
xor
arpl
jne
and
inc
sub
jl
push
scas
ret
scas
and
xor
xor
iret
xchg
lods
insb
shr
mov
aad
icebp
jecxz
jno
repz
mov
add
lds
mov
jp
xor
js
cmp
sbb
xchg
adc
pop
adc
jae
lahf
fcompl
pop
push
pop
stos
push
xchg
jbe
dec
std
adc
dec
pop
scas
push
sbb
das
cwtl
loope
dec
dec
outsl
and
call
ficoml
xlat
ret
push
or
jmp
mov
sub
cmp
das
test
rorl
pushf
leave
fidivs
inc
int3
pushf
out
movsl
popf
xchg
inc
or
push
pop
cmp
pusha
xor
add
rcll
jmp
int
or
aam
in
cmpb
out
jg
mov
shlb
jecxz
or
cmc
sbb
jb
push
lock
int3
insl
xchg
fld
push
adcb
jecxz
inc
jo
insb
mov
js
xor
sti
xchg
incl
jns
test
roll
adc
dec
popa
pop
je
out
push
hlt
add
adc
and
sbb
sub
es
cmp
gs
pusha
fldl
add
das
movsl
pop
test
jg
les
gs
out
mov
int
cmc
adc
bound
movsl
cmp
scas
cmpsb
mov
cli
or
in
sbb
clc
shlb
xchg
arpl
mov
add
jbe
cmp
push
dec
scas
aam
sub
pop
cmc
inc
add
aam
idivb
push
decb
call
dec
fstps
push
std
popf
push
movsl
shll
dec
repnz
jl
pushf
lahf
cmp
jnp
out
add
push
into
std
cwtl
test
data16
mov
mov
sbb
dec
mov
push
fwait
jle
or
ljmp
aam
jl
fwait
sub
ss
cmp
stos
fld1
cld
mov
fldcw
cmp
jmp
popa
pop
push
dec
pop
ja
or
push
xchg
in
stos
mov
popa
xchg
pop
or
xor
mov
jns
in
sub
lds
hlt
push
push
repnz
outsl
sbb
xlat
fnstcw
ljmp
gs
movsb
orl
xchg
sbb
idivb
call
call
mov
fcomp
xchg
mov
adc
mov
xchg
shrb
fistpll
int3
cmpsb
jge
sbb
xchg
add
add
mov
fmul
lahf
lods
psraw
pushf
xchg
jg
jp
mov
daa
leave
lds
and
std
xchg
mov
int
sub
lret
xchg
pop
cmpsl
aam
fwait
adc
fcomps
push
clc
fwait
sbb
jnp
cmpl
into
push
add
rorb
rcr
and
movsl
int3
and
mov
jo
dec
push
push
gs
int
les
nop
push
movsl
testb
lods
adc
std
loope
es
sbb
inc
inc
cmp
sbb
sub
call
mov
jns
cmpsl
mov
pop
repz
movsb
fsubl
add
or
mov
or
sti
jo
fwait
mov
xor
xorl
mov
test
popa
outsb
and
mov
mov
cmc
in
jl
jne
and
mov
jo
movsl
icebp
mov
dec
loop
xchg
add
insb
addr16
mov
loopne
lcall
dec
and
call
bound
pop
mov
cmp
xchg
sub
leave
pop
fcompl
push
repnz
je
aad
shlb
mov
inc
enter
mov
aad
sbb
inc
xlat
or
ret
xor
dec
or
test
gs
jnp
cmp
out
ja
dec
fld
dec
insb
aaa
cmpsl
sti
arpl
inc
iret
insb
dec
push
xor
push
cmpsl
inc
xchg
adc
pop
pop
in
add
xor
mov
std
out
add
mov
mov
popf
lcall
idiv
sbb
or
jns
mov
popa
pop
mov
push
cltd
mov
sub
out
cmp
ss
fadds
in
sbb
and
loope
jno
mov
pusha
jge
pop
jmp
sbb
inc
and
stos
lret
jne
jecxz
jg
incl
lea
stos
push
lcall
sub
add
push
insb
cwtl
dec
inc
iret
sbb
mov
test
flds
lret
dec
dec
inc
xchg
xchg
or
fcompl
in
jl
test
sub
ror
jecxz
and
or
scas
inc
pusha
mov
or
xor
call
lcall
fists
stos
inc
cmp
add
adc
inc
test
mov
aad
mov
xchg
inc
scas
shrb
insl
inc
insl
or
iret
clc
popa
add
ret
mov
cmc
test
inc
int3
enterw
popf
imul
jl
pop
in
rol
xlat
jle
fidivl
scas
movsl
xchg
lahf
adc
movsl
aaa
mov
mov
clc
cmp
mov
pusha
jg
add
sahf
xchg
pop
lret
cli
or
enter
sarb
push
mov
cmp
xchg
sub
inc
lds
push
cwtl
mov
cmp
stc
pop
ljmp
leave
popf
cmp
sti
jl
aaa
jg
xchg
movsl
mov
sbb
inc
cmpsl
rorl
inc
lock
idivl
cmp
or
push
xchg
sbb
pop
sub
xchg
gs
gs
sub
iret
into
adc
jmp
mov
popf
pop
fwait
add
ret
fwait
pop
adc
inc
in
push
test
adc
aam
pop
insl
add
cwtl
and
and
cmp
in
mov
and
mov
loopne
push
or
or
jbe
sahf
pop
add
fwait
sbb
into
add
mov
mov
in
xor
dec
and
add
ret
in
push
cmp
enter
loop
cwtl
icebp
mov
inc
mov
push
jb
adc
shrb
or
xor
add
inc
frstor
xchg
in
sahf
cmp
loopne
pushf
mov
test
cmp
shll
imul
mov
mov
adc
into
dec
rorb
test
pop
inc
fistl
movsl
rclb
push
clc
mov
jae
aam
lods
hlt
jle
outsb
das
pop
in
inc
add
inc
jne
and
jo
mov
jo
adc
ret
jo
insb
pop
lock
xchg
jb
jns
push
pop
mov
push
pop
mov
sbb
cmp
sti
jae
fldl
loopne
rcrl
add
cmp
push
and
jnp
inc
or
mov
jae
xchg
xchg
push
xchg
hlt
mov
ja
aas
call
mov
leave
data16
mov
mov
mov
add
dec
insb
mov
mov
cmp
adc
mov
test
in
xor
dec
popa
add
daa
clc
call
stos
es
pop
xchg
xor
stos
in
fistpl
int3
sbb
jl
pop
pop
ret
insb
and
out
push
add
pop
mov
cmpb
pop
add
xchg
stos
lret
xchg
inc
shl
sub
push
popf
mov
mov
lcall
lret
xchg
insb
sahf
mov
fcoms
aaa
popa
adc
cmp
fst
mov
fnstcw
push
hlt
aad
add
jnp
shll
pop
adc
and
xor
inc
aad
clc
addr16
int
inc
lea
mov
jmp
pop
shlb
subb
sbb
push
xchg
cmp
sub
pop
xor
jge
dec
cltd
jl
cmp
movsl
loopne
es
loopne
call
in
and
mov
int3
jne
out
test
popf
sbb
jae
add
mov
xor
stos
jb
aaa
inc
test
sub
scas
adc
xchg
jno
movsb
jnp
or
jns
hlt
and
popa
jo
andb
adc
into
dec
loop
gs
movsl
inc
enter
cmpsb
sti
dec
jmp
or
dec
fdiv
xor
out
jmp
sbb
xor
xchg
mov
pop
les
adc
cmpsl
xchg
fstpt
and
mov
movsl
je
xchg
lret
add
pop
push
mov
adc
cwtl
mov
push
xchg
mov
mov
loopne
jp
test
sub
test
mov
loopne
sub
stos
flds
imul
add
mov
push
add
lods
adc
pop
pop
mov
iret
sub
divl
dec
addr16
mov
loope
add
sbb
xor
xchg
add
test
cltd
in
movsl
into
sub
cli
arpl
aas
lret
or
jo
jb
adc
faddl
js
mov
stos
stos
sbb
int3
adc
leave
iret
xchg
and
scas
mov
loope
mov
and
and
test
xor
shll
imul
jmp
inc
xchg
push
cmc
adc
push
aad
into
movsl
sub
pusha
cmc
jns
jbe
add
fldenv
sbb
jbe
xchg
cmp
aam
sahf
pop
inc
lds
push
mov
sbb
sbb
test
lahf
fnstcw
xchg
sbb
push
popa
adc
push
adc
jne
shlb
out
outsb
int
jmp
lret
sbb
notl
mov
les
or
repnz
cmp
xor
int3
mov
aam
mov
stos
adc
or
cmc
insl
or
add
stc
xchg
mov
stc
inc
aaa
pop
sub
cmp
xor
mov
lahf
mov
jns
sub
adc
scas
or
jb
push
mov
cmp
push
xor
mov
mov
mov
xchg
shll
pushf
outsb
sub
dec
sahf
shlb
push
pop
inc
dec
comiss
insb
nop
jo
iret
cmp
sub
xchg
pop
fidivrs
jnp
mov
call
pop
pop
lret
je
int3
cmp
daa
xchg
lsl
mov
movsl
enter
arpl
xchg
lods
pop
das
hlt
jnp
lds
mov
stos
cli
sub
mov
cmp
inc
jbe
and
cmc
imul
out
pop
js
cmp
aaa
pop
cltd
in
fmulp
cmp
jne
lods
pop
adc
pusha
lods
testl
mov
mov
int3
aas
mov
mov
ss
sub
sub
and
lahf
in
cld
push
rorl
pop
mov
jo
out
xor
out
inc
jmp
and
iret
push
dec
imul
outsb
push
fisubrl
mov
das
outsb
push
pop
push
cmp
mov
push
imul
pop
mov
test
fcomps
fadd
xchg
pushf
repz
in
push
sbbl
mov
insb
xchg
xchg
test
out
dec
xchg
pushf
push
aas
inc
jnp
jo
cli
push
dec
fdivl
call
lret
fcoml
xchg
jmp
outsb
es
xchg
mov
cmp
adc
shrl
rcll
test
lea
adc
sub
bound
fwait
xchg
jmp
out
pop
sub
inc
or
xor
or
xlat
push
sbb
pusha
in
cld
rcrl
adc
mov
mov
stos
jnp
fiaddl
test
mov
stos
jnp
push
loop
cmp
in
in
jge
ficomps
xlat
dec
loope
push
cmp
mov
push
cltd
adc
es
lret
jbe
mov
loopne
cli
sbb
addr16
addl
cmp
andl
dec
add
and
xor
push
f2xm1
into
inc
cmpxchg
push
or
jno
cmp
xchg
dec
lods
movsl
mov
xor
xor
idivl
ret
push
mov
dec
adc
cld
ret
jbe
mov
jle
inc
ret
imulb
mov
aad
jl
popf
push
ds
sub
push
add
push
push
push
pop
out
daa
push
in
sbb
lret
push
and
faddl
out
add
ljmp
inc
out
cwtl
pop
or
test
addl
addr16
aaa
dec
mov
sub
jecxz
das
repnz
adc
fsts
jmp
jo
out
mull
in
xor
mov
inc
add
scas
aad
pusha
mov
test
cmpsb
adc
adc
sub
movsl
in
int
dec
mov
sbb
mov
jo
adc
sub
push
or
pop
repz
mov
adc
or
rolb
into
sbb
fwait
jmp
pusha
int
xchg
cltd
lock
cmp
mov
leave
push
jl
or
dec
push
push
add
fsubrp
sub
sbb
pop
mov
jne
in
dec
mov
int3
or
sub
int
push
and
mov
in
pop
into
sbb
sub
fs
jnp
jnp
cld
cmp
xchg
xchg
cmpsb
xor
popf
imul
jo
popa
mov
jo
rorl
leave
in
out
in
dec
xlat
sbb
jecxz
inc
jne
rolb
jle
add
inc
aaa
mov
test
push
pop
mov
sbb
xchg
mov
shll
pop
mov
pop
jmp
xor
push
or
sbb
fdivs
ret
xchg
add
cmp
push
lcall
dec
cmc
bound
mov
ljmp
mov
xchg
xchg
lods
pop
mov
sub
jmp
mov
mov
loope
mov
pop
sti
vmread
aas
lcall
decl
adc
mov
add
inc
jp
pop
inc
mov
mov
mov
imull
pop
das
cmp
jns
rcr
jmp
and
push
sbb
push
mov
or
and
cli
fstpt
xchg
sub
minps
push
sbbb
mov
jle
adc
sbb
movsb
push
mov
in
push
in
push
dec
or
dec
jg
sbb
mov
imul
mov
mov
inc
ret
dec
fisttpll
dec
mov
xchg
stos
or
cld
mov
mov
mov
in
xor
stos
pop
mov
fmul
sti
ds
mov
and
inc
adc
popa
mov
jg
push
push
scas
cli
dec
fiadds
ss
insl
lods
out
pop
ja
xchg
hlt
dec
mov
sbb
sbb
jg
mov
jb
cmp
lret
shlb
mov
push
jns
jo
push
ret
enter
lods
subb
push
xor
in
add
adc
mov
add
imul
js
test
mov
push
mov
je
adc
fcmovb
xor
test
adc
inc
jl
mov
mov
aas
xchg
test
insb
jecxz
fisubrs
push
xchg
pop
jbe
cmc
in
stos
jns
in
enter
pop
pop
sub
sahf
push
cmpsl
adc
insb
dec
arpl
jo
lds
ret
sub
lahf
cmpsl
test
or
hlt
out
cwtl
and
jae
dec
mov
sbb
outsb
cwtl
cltd
enter
in
pop
scas
fldl
int3
mov
push
fdivr
imul
or
sub
scas
test
test
jge
sub
mov
scas
repz
mov
mov
out
sub
or
sub
pop
add
sub
sub
jp
and
dec
jne
data16
mov
sub
popf
xchg
call
js
mov
inc
jno
sti
mov
xchg
into
fistps
mov
cmp
into
cmpsb
adc
cmp
mov
lahf
inc
dec
movsl
sahf
inc
lret
dec
dec
xor
iret
ds
rcrb
mov
jmp
scas
sub
fbstp
insb
mov
jns
mov
pop
scas
xorb
lods
pop
aam
pop
into
loop
leave
cmp
mov
clc
inc
jbe
push
push
add
stos
cld
xor
xor
ret
aaa
jp
ss
push
sub
je
shrb
popa
shrb
dec
ss
xor
cmp
jge
in
add
fwait
enter
mov
gs
mov
mov
cmp
fisubrl
mov
mov
mov
mov
std
sbb
lahf
fidivrl
push
cmc
add
sub
push
into
pop
cld
outsb
sbb
gs
and
xchg
cltd
icebp
pop
or
sbb
sub
mov
xor
inc
pop
push
push
adcl
or
jge
adc
pop
push
adc
sub
rcrb
mov
data16
pop
sub
mov
dec
add
lock
leave
cmpsl
adc
pop
dec
xorl
cmp
testb
imulb
fsub
add
inc
push
arpl
xchg
sbb
popa
js
inc
push
ret
pop
enter
fiadds
mov
jno
cld
mov
push
inc
call
mov
rcl
ljmp
fcoml
and
dec
xchg
jecxz
push
cwtl
fisubrs
mov
popa
xor
push
jne
dec
loope
jmp
inc
xchg
frstor
mov
mov
test
fs
fildl
fs
sub
pop
out
popf
fstps
fcoms
sub
out
bound
push
jg
pop
adcb
fsubs
stc
js
jae
adc
mov
mov
adc
cld
xchg
test
sub
xchg
adc
xchg
in
xor
ret
mov
hlt
test
je
cmp
cmpb
xor
sbb
dec
xchg
pop
test
dec
popf
sub
test
pushf
lret
cmp
mov
and
and
and
and
stos
mov
movsb
and
sbb
add
cmp
sub
pop
push
or
sub
sub
cmc
icebp
jnp
cmpsb
pop
pushf
hlt
mov
mov
dec
mov
outsl
aaa
sbb
sti
add
iret
cmp
repz
inc
call
pop
repnz
xor
js
lret
cmp
cltd
and
and
scas
jle
add
adc
sysenter
cltd
stc
fs
out
inc
xor
pop
les
lds
fdivl
mov
loopne
xchg
adc
dec
and
cmpsb
mov
and
mov
mov
sub
cltd
mov
int3
es
or
add
addb
cmc
mov
aad
add
jl
xchg
call
insl
or
xchg
xor
pop
or
shrb
and
adc
mov
fcmovnu
ds
ss
notb
mov
test
addr16
mov
pop
mov
dec
xchg
adc
pop
leave
sbbb
sahf
int3
mov
out
bound
dec
mov
mov
or
das
shr
inc
in
jb
dec
bound
sub
mov
xchg
cltd
bound
scas
fs
movb
push
ret
call
add
repnz
inc
lock
adc
loope
loop
roll
call
dec
int
xor
push
sub
lock
es
out
dec
or
sbb
sbbl
mov
fisttps
testb
clc
sarl
sub
push
inc
mov
int
ljmp
fneni(8087
jle
nop
dec
loop
call
pop
mov
cmp
call
iret
fwait
push
xor
dec
clc
adc
aas
cwtl
push
pop
in
xchg
ds
ret
je
data16
xor
arpl
pop
mov
movsl
int
inc
pop
jb
jmp
push
sbb
js
in
xlat
mov
lret
jmp
jp
es
testl
fisubs
jl
adc
outsl
dec
lret
xchg
xchg
add
shlb
rolb
jo
or
loope
jmp
out
push
hlt
mov
push
dec
add
pop
loop
pop
adc
push
aas
rcrl
mov
subb
fwait
fs
insb
into
mov
lcall
and
test
popf
fbstp
loop
ret
cmp
mov
xchg
jnp
popf
imul
or
push
xor
data16
inc
adc
mov
cli
sub
cmp
and
xor
mov
add
outsl
call
imul
xchg
test
jecxz
cmc
aam
call
pop
inc
arpl
out
in
sti
ret
xor
outsb
inc
in
into
dec
stos
ret
mov
mov
cmp
movsl
add
adc
sub
jb
mov
loop
cmp
insb
jno
jge
out
lahf
clc
movsl
and
addr16
jns
mov
push
mov
cmpsl
out
arpl
fsubrs
xchg
xor
mov
xlat
inc
shlb
popa
pop
fcompl
dec
inc
stos
dec
shll
push
xlat
cmp
add
add
orb
add
push
sahf
int
sahf
pop
mov
cmp
pop
ja
scas
xchg
jge
lcall
adc
stc
pop
sbbl
notl
fucomp
mov
inc
pop
cmc
mov
shl
cmpsb
cmp
inc
out
jmp
dec
sti
arpl
mov
dec
lahf
inc
repz
jl
cmp
inc
dec
pop
call
mov
rcl
cmc
cltd
fisubl
sub
outsl
jne
mov
neg
mov
and
dec
les
fcompl
out
add
clc
daa
adc
and
popf
in
push
cmpsb
loope
clc
jb
lret
and
or
pop
pop
icebp
mov
mov
js
add
lods
mov
int
stc
xchg
push
pop
push
mov
addb
repz
insl
xor
mov
pop
pop
push
getsec
fstps
inc
cli
sub
icebp
rolb
rol
add
scas
icebp
les
sbb
sbb
jae
cmp
adc
inc
lods
jno
int3
pusha
ret
add
rcl
test
sahf
and
in
push
icebp
gs
dec
xchg
adc
sbb
jo
xchg
sub
movsb
lds
sarl
adc
pop
sub
and
cmp
cmp
std
shrb
xchg
sti
jae
xlat
and
cmp
pop
push
push
and
stc
out
test
movsl
mov
mov
mov
inc
ret
imul
pop
push
mov
test
sbb
xchg
lds
push
rclb
mov
mov
cmp
cmp
xor
rolb
cmpsb
mov
sti
xor
push
and
stos
push
adc
xchg
sbbl
and
gs
daa
jg
inc
stos
pop
sbb
cmp
push
ds
rol
sbb
outsb
outsl
push
inc
loope
ss
insb
cmp
rdtsc
push
jo
icebp
mov
push
inc
push
inc
push
sbbb
fisubs
movsb
int
cli
leave
mov
or
push
jg
xchg
out
mov
or
lea
out
mov
rolb
dec
ja
rcrb
xchg
sbb
sub
sti
out
xor
lock
aas
mov
cs
imulb
int
sti
dec
pop
orb
inc
out
adc
push
std
out
cmp
fbstp
jno
push
inc
cwtl
pop
lahf
xor
sub
and
sub
dec
hlt
enter
add
bound
repnz
xchg
dec
sbb
sbb
insl
hlt
push
jl
in
mov
outsl
cmovns
mov
std
mov
push
aaa
in
inc
jbe
in
mov
ja
enter
sbb
inc
push
sbb
js
test
fstpt
pop
push
jo
scas
or
adc
mov
cmp
repz
outsl
add
and
sahf
int3
ud0
xor
insb
or
mov
or
or
lods
and
insl
lcall
mov
scas
fistps
pushf
int
jge
sar
push
outsb
andl
push
jb
jmp
ss
lds
or
push
xchg
outsb
push
arpl
adc
iret
ret
xor
testb
inc
jae
mov
mov
xor
jae
sub
jle
pop
movsl
ror
sti
push
ret
lock
push
and
xor
loopne
xor
jp
imul
mov
shlb
lds
iret
xor
dec
sbb
xchg
mov
dec
mov
fisubl
xchg
int3
sub
jne
mov
pushf
add
pusha
xchg
bound
sbb
shlb
jmp
les
ret
mov
or
shl
pop
movsl
xchg
sub
ljmp
add
sarb
les
mov
popa
add
dec
xor
sbb
repnz
mov
pop
push
clc
nop
cmpsl
aad
ret
pusha
xlat
sub
gs
and
jns
fstpl
arpl
test
mov
cmp
and
pop
jbe
fs
inc
cmpsb
iret
cs
mov
ret
add
push
dec
repnz
pop
pop
packsswb
pushf
inc
and
sahf
dec
rcrb
inc
dec
mov
or
fs
gs
or
das
add
push
xchg
shrl
insl
adc
xor
lahf
out
inc
lret
dec
and
stc
daa
xchg
repz
and
sahf
mov
repz
jbe
jbe
mov
inc
mov
or
dec
jmp
test
or
sub
fisubl
cmp
js
sub
mov
sbb
mov
mov
ljmp
pusha
bound
je
mov
push
stos
jnp
inc
xor
jg
movsb
andb
sti
push
inc
inc
addr16
in
mov
daa
inc
insb
or
ret
pop
push
fnstsw
test
mov
in
push
enter
mov
mov
int
dec
clc
in
jg
dec
ja
cmc
bound
xor
ficoms
arpl
dec
test
push
outsl
pop
and
mov
mov
repz
and
sub
inc
lods
cmp
inc
out
jmp
dec
cmc
movsb
sub
fs
pop
push
adc
out
cmp
mov
aaa
xorb
cli
fdivrl
or
jns
mov
into
push
in
push
subb
inc
mov
jbe
or
sahf
sub
imul
out
mov
cli
add
rcrl
into
repnz
sbbb
sahf
xchg
cmp
test
xor
inc
dec
js
add
mov
adc
adcl
jle
fs
lret
mov
pop
and
xor
pop
mov
ljmp
sahf
pop
cmp
cmp
adc
inc
xor
mov
insb
cmpl
jle
imulb
stos
jbe
cmp
aad
adc
mov
imul
arpl
pop
push
or
ljmp
les
mov
enter
jg
jnp
leave
outsb
aas
push
fwait
js
push
test
jg
dec
jo
sub
cwtl
popf
xor
daa
cwtl
xchg
ja
loop
lock
mov
lret
push
push
es
popf
iret
fwait
lods
and
in
testb
pusha
pusha
hlt
push
inc
dec
jae
sti
jnp
xor
push
sbb
add
fucomip
sub
cwtl
insb
sub
jo
pushf
loop
sbbb
dec
mov
mov
push
mov
nop
icebp
and
jnp
fdivrp
cmpb
pop
aad
movsb
and
jo
xor
cmp
xor
addl
sub
sbb
or
sub
inc
pop
pop
pop
repz
cltd
xor
push
ljmp
sub
inc
push
jecxz
aam
adc
dec
pusha
xor
mov
push
std
cs
jae
inc
les
nop
push
xlat
movsl
lcall
hlt
stc
popa
cmp
pop
sbb
jae
cs
sub
cs
ret
push
sub
adc
sti
sbb
sbb
cmp
mov
cld
mov
test
xor
dec
jmp
push
fstpl
cmp
jbe
jb
aaa
movsl
or
gs
scas
repnz
repnz
stc
roll
frstor
add
mov
daa
iret
and
inc
sub
adc
jno
je
mov
imulb
xchg
mov
cmpsb
xor
add
xchg
sub
xor
mov
jp
push
andb
sub
push
or
or
sub
sahf
pushf
pop
in
pop
cmp
pop
sbb
pop
mov
push
outsb
stos
cld
lock
dec
add
mov
in
out
or
aaa
ret
cs
inc
mov
std
add
jb
aaa
sub
dec
js
and
scas
mov
shrl
movb
leave
addl
aad
unpckhps
push
cltd
sarl
outsb
mov
jl
popf
mov
mov
pop
sbb
clc
ficoms
pop
dec
mov
push
and
xchg
fisttps
dec
clc
cmp
iret
out
fimull
cwtl
push
xchg
adcl
jmp
and
xchg
or
loopne
mov
stos
inc
push
mov
loop
mov
pop
add
testb
jle
add
insl
cmc
xor
mov
insl
or
jp
lds
mov
jp
or
addr16
push
cmpsl
sbb
adc
mov
xor
inc
scas
xlat
cmp
mov
mov
mov
xchg
icebp
clc
shrl
add
mov
out
mov
scas
ret
or
jne
fiaddl
mov
test
hlt
or
in
into
pop
roll
popa
fildll
ret
mov
ljmp
and
sub
sbb
sbb
mov
and
fwait
shlb
adc
clc
rcr
xchg
sub
out
stos
xchg
mov
orl
aad
mov
mov
dec
outsl
jno
aam
mov
and
cld
ret
add
es
cmp
lea
and
jp
mov
out
mov
lock
inc
cmp
or
jmp
dec
stos
mov
leave
pop
fs
setle
sub
and
std
push
shlb
bound
out
jmp
jmp
bnd
lcall
mov
ljmp
ret
jo
repnz
das
sub
dec
dec
pop
clc
cmp
and
std
inc
insl
xlat
add
xlat
mov
jnp
imulb
int
out
inc
enter
pop
loope
shr
mov
xchg
loop
mov
aaa
cli
out
add
xchg
jnp
jecxz
divb
xchg
popa
dec
fs
in
out
div
movsl
jp
les
gs
in
das
fsubrs
scas
sbb
add
jge
std
lahf
addr16
pop
movsb
add
sub
xor
inc
dec
bound
sub
gs
mov
imull
ja
push
xor
dec
xchg
dec
sub
mov
shrb
fdivp
xor
imul
daa
fstpl
js
arpl
pop
pop
je
pop
out
gs
or
inc
ret
mov
adc
aaa
sub
std
call
mov
aaa
mov
pop
aad
cmp
jbe
mov
add
xor
pop
rolb
push
and
mov
popa
cmpsl
dec
lods
movsl
subb
nop
js
int3
xchg
lods
iret
ret
or
mov
ja
xchg
mov
aam
xchg
cmp
loope
insl
or
insl
fstpt
sub
lods
sbb
adc
mov
push
push
data16
mov
repz
sbb
scas
mov
adc
mov
mov
cmp
sbb
add
outsl
adc
insl
inc
jo
dec
shrl
sub
mov
push
lock
jl
xlat
ja
enter
orl
xor
push
push
mov
cmp
mov
mov
lea
loope
or
shlb
shl
fisubs
pop
pop
roll
fs
dec
inc
xor
xor
mov
pusha
pop
inc
lods
enter
inc
insl
popf
arpl
add
rcrl
lea
rclb
cmpsb
and
sahf
mov
pop
xor
and
push
sarb
inc
mov
xor
mov
mov
mov
cmpsl
adc
ret
mov
bound
adc
outsb
cmp
scas
mov
out
fcmovb
and
or
js
jno
mov
and
outsl
sub
scas
repz
lcall
and
data16
ret
sub
add
xor
les
jecxz
fwait
lds
ficoms
sbb
xchg
js
pushf
fs
xchg
inc
or
ficompl
je
jae
je
jbe
aam
push
lahf
pop
mov
pop
or
dec
pushf
divb
pop
mov
rcpps
adc
adc
add
leave
ret
shlb
xchg
mov
jae
mov
xlat
and
out
push
arpl
andl
imul
push
inc
mov
fdivrs
imul
fdivp
cwtl
or
inc
mov
jp
addr16
rorl
cli
mov
dec
mov
dec
decb
inc
pusha
cld
pop
stc
iret
ljmp
sub
in
inc
in
pop
jmp
js
xchg
cmp
add
mov
push
xor
pop
dec
xor
jmp
enter
pushf
daa
lahf
push
cmpb
rcl
int
push
mov
mov
dec
daa
xor
adc
repz
adc
mov
push
push
fstps
mov
daa
clc
lock
mov
sti
fisttps
js
dec
xchg
repz
or
sub
sahf
ja
ss
ja
inc
cwtl
push
imul
cmp
andl
and
xor
xor
outsb
fsts
lock
and
pop
mov
repz
insl
cld
fnsave
outsb
daa
and
test
or
in
repz
jg
mov
sahf
repnz
jg
loop
aad
ficomps
add
neg
fsts
xchg
lcall
shrl
lret
add
push
xchg
sbb
sub
sub
pop
xchg
and
inc
roll
and
push
push
push
xlat
add
pushf
sub
orb
inc
push
insb
roll
and
std
add
adc
and
add
jecxz
test
call
mov
cmp
inc
and
scas
mov
add
mov
sahf
stc
cwtl
test
inc
test
in
xchg
jb
pop
lahf
add
sbb
fnsave
mov
test
cmpsb
pop
jl
pop
mov
clc
inc
loopne
rorb
shrl
xchg
mov
js
les
test
rcrl
inc
inc
pop
ror
push
loop
mov
jno
mov
inc
cld
loopne
cmp
ljmp
xorl
test
xchg
repz
jl
xchg
lret
shll
jns
mov
cmc
mov
hlt
clc
imul
pusha
lcall
lahf
shrb
test
hlt
negb
mov
fnstenv
adc
push
adc
dec
inc
mov
sbb
rorl
cmpsb
push
fsubrs
js
xchg
and
push
mov
and
jecxz
pop
mov
pusha
lock
jne
push
xor
sub
pop
sub
xchg
pop
adc
cmp
mov
push
addr16
pop
xlat
or
add
std
out
mov
mov
xor
sbb
jle
icebp
mov
dec
neg
sub
and
mov
mov
adc
sbb
pop
push
loopne
std
mov
aad
lret
adc
in
mov
movsb
mov
cmp
dec
mov
loop
fdivr
xchg
outsb
add
xor
nop
push
nop
jns
popa
cs
clc
cmp
in
xor
fisubrl
lret
popf
insl
jge
or
imul
mov
in
leave
dec
test
mov
fs
test
jnp
repz
or
mov
dec
aas
push
xor
pushf
lods
aam
sub
imul
mov
popf
jmp
movsb
pop
call
pop
dec
dec
aas
gs
or
scas
outsl
arpl
mov
out
in
mov
lock
daa
stc
scas
lods
js
pusha
xchg
xchg
adc
or
fs
in
jnp
add
mov
push
mov
jbe
cs
stc
and
icebp
iret
stos
or
dec
add
adc
mov
inc
sub
sbb
sbb
and
mov
and
jmp
xor
sbb
cmp
fimuls
mov
cmp
lret
lret
mov
and
repz
push
scas
lcall
repnz
in
pop
in
adc
push
xchg
in
loope
pop
mov
es
addr16
jl
stos
pop
popa
rolb
xchg
inc
test
inc
jecxz
xchg
cld
xorl
lret
pop
sbb
aad
mov
call
xor
loope
test
mov
loop
sahf
xchg
xlat
or
scas
mov
arpl
and
dec
push
notb
int
roll
push
adc
mov
mov
faddl
xchg
or
hlt
call
inc
idiv
filds
and
pop
rcr
fidivrs
pop
lods
and
stos
cmp
sbb
adc
gs
in
idivl
addr16
jle
icebp
mov
and
mov
ljmp
lret
fmuls
add
mov
movsl
inc
push
cmp
jg
pop
add
push
xchg
cmp
fxch
out
cltd
mov
cwtl
test
ds
push
js
pushf
mov
cltd
xchg
dec
xchg
cmc
fdivrs
int
dec
ficoms
pop
pop
add
pop
cmp
aam
push
les
loop
sbb
dec
aad
sbb
stc
fisubl
clc
jne
and
test
or
mov
sub
pusha
stc
aas
enter
aad
pop
xor
mov
xchg
ds
xchg
fwait
pop
insb
insb
mov
adc
xor
add
lahf
sbb
sub
mov
sub
jmp
jecxz
iret
push
adc
adc
movsb
pop
adc
rclb
out
popf
dec
push
adc
fsts
inc
or
dec
dec
aad
icebp
aas
outsb
insl
xchg
adcl
sbb
je
inc
insb
jbe
dec
xchg
call
pop
push
dec
cld
sub
add
mov
sbb
inc
sbb
pop
fcoml
stos
mov
and
lret
adc
int
dec
and
and
mov
shlb
mov
fs
fdivrs
dec
mov
inc
add
decl
loope
addr16
incb
gs
scas
je
je
dec
lods
sarl
vfmaddsubps
jns
and
xor
dec
inc
sub
mov
inc
fisubl
aas
movsl
push
fdiv
or
in
and
push
or
addr16
and
arpl
std
shrb
in
aaa
mov
xchg
adc
pusha
mov
bound
test
add
out
ja
leave
jmp
cwtl
scas
jp
pop
aas
lret
data16
cli
out
aas
sbb
xor
inc
xor
sbb
cmp
sar
and
or
add
push
push
scas
inc
lea
push
and
mov
popf
je
xor
fwait
push
lret
mov
call
les
loopne
mov
inc
inc
sbb
aam
repnz
xchg
test
jne
lods
mov
add
sub
xor
push
aas
fwait
shr
imul
xchg
sbb
push
jg
inc
mov
mov
cmp
popa
pcmpeqb
adc
int3
sub
outsl
fs
mulb
ss
aam
testl
sbb
dec
clc
shll
pop
out
inc
pop
dec
shlb
test
fnstcw
xchg
movsb
sbb
mov
sti
cli
and
or
adc
push
push
out
mov
outsb
pop
add
mov
stos
pop
insb
and
inc
mov
inc
ret
jns
in
mov
jp
es
int3
add
jg
and
add
loope
jle
inc
into
push
sbb
sbb
sub
popa
adcb
cmp
mov
daa
sti
test
imul
jne
mov
add
fnstenv
and
cmp
test
xor
sbb
xchg
fcmovnbe
popf
mov
dec
jp
es
jne
cmp
fldl
inc
sbb
pop
sub
ficompl
fcmove
loope
in
cs
outsb
hlt
xchg
or
mov
mov
dec
jo
and
std
std
adc
jecxz
mov
push
lock
adc
fdivrp
fldenv
xchg
add
inc
shrd
cmp
push
aam
mov
cmp
rcll
xor
insl
adc
repnz
psubsw
jae
pop
fwait
cmpsl
and
call
jle
subb
and
pop
push
sahf
lea
pop
mov
rorl
xor
or
or
scas
aad
mov
push
cmp
jmp
mov
pop
push
jl
adc
icebp
in
jp
xor
mov
xor
xchg
int3
enter
fdivl
fsubrs
pusha
xor
jbe
lcall
jle
fcmove
cmp
addr16
cmpsb
xor
leave
cmp
int3
inc
add
ljmp
xor
imul
fs
mov
in
insb
dec
inc
lods
insb
or
je
ror
sbb
insb
gs
xorl
sti
mov
adcb
mov
fdivs
stos
sub
clc
dec
lahf
jge
pop
into
jge
and
xor
xchg
stc
and
decl
roll
mov
mov
xor
and
sti
inc
rorl
fsubs
loope
mov
bound
push
popf
ret
xchg
mov
sub
pop
jg
xchg
xchg
gs
leave
jp
xchg
add
jg
dec
stos
mov
into
aad
fisttpl
pop
adc
pushf
cmc
mov
out
mov
jecxz
mov
adcl
cmp
jmp
ds
or
push
inc
add
std
dec
mov
jle
inc
cmc
fwait
jne
mov
jne
sarb
add
sub
jae
mov
dec
mov
adc
sahf
push
lahf
inc
insb
jbe
fcompl
iret
and
aam
std
imul
fnstcw
mov
loopne
hlt
pop
es
jno
mov
jno
js
addb
xchg
gs
popf
lds
inc
mov
scas
mov
mov
xchg
jp
in
fwait
fs
push
add
jbe
iret
pop
mov
lods
jle
push
push
jle
dec
aas
xchg
test
inc
das
sbb
or
lods
orl
xchg
add
inc
pop
jns
pusha
cmp
dec
movsb
pop
adc
cmp
add
jle
cltd
call
jl
push
ljmp
jmp
mov
lods
sub
jns
mov
push
fdivrl
push
mov
pop
xorl
and
xchg
jo
sahf
stos
jg
std
xchg
movb
loop
pop
leave
and
lahf
mov
dec
adc
sahf
popf
adc
dec
cli
dec
xchg
sub
fs
xchg
subb
jns
fstl
cmp
mov
ds
and
stos
cli
popf
lahf
dec
pop
xchg
fcmovnbe
jl
inc
xchg
sbb
lret
in
pop
push
adc
xchg
cmp
roll
iret
add
xor
push
dec
jecxz
add
xor
sahf
adc
mov
adc
adc
inc
push
add
jb
cld
jb
inc
cmc
adc
into
cmpsb
adc
mov
xchg
ret
fstpt
jae
movsl
nop
mov
hlt
test
jp
repnz
sub
mov
mov
mov
jbe
cmpl
push
cli
push
inc
ret
inc
sbb
cld
sbb
push
mov
mov
xchg
xor
cmpsb
lea
aas
test
cmp
inc
divb
pop
xchg
xchg
repnz
add
jmp
lds
movsl
cld
out
sbb
jp
movsl
mov
pop
idivb
test
mov
leave
cmp
mov
fwait
jmp
push
push
jg
pop
xchg
aam
inc
addr16
scas
roll
mov
shlb
jno
test
lods
sub
movsb
fistpll
push
and
jmp
pushf
ljmp
sbb
mov
mov
add
dec
push
clc
ss
and
sti
push
xchg
ret
mov
lds
cmp
add
jge
sbbb
xor
push
iret
add
fistpl
mov
cmp
mov
lods
into
cmp
push
cmp
addr16
test
rclb
dec
xchg
lret
pusha
das
ds
adc
push
pop
add
add
pop
gs
cmp
mov
pop
pop
push
dec
or
or
mov
push
mov
test
cmp
cmp
repz
or
pop
cmp
pop
sub
mulb
cwtl
mov
xor
push
xlat
sbb
aad
sub
lret
cmp
ljmp
cmp
mov
mov
push
mov
cmpsl
mov
js
inc
or
leave
aaa
dec
sub
push
or
pop
aaa
mov
cmpsb
xchg
jnp
inc
sub
dec
mov
fidivs
fisubl
jmp
shl
repz
out
and
out
jbe
jo
or
je
jns
mov
in
bound
adc
inc
fistl
aad
stc
add
add
or
adc
dec
repz
incb
hlt
leave
mov
movsl
js
sbb
call
jecxz
daa
mov
out
daa
and
int3
fsubs
dec
sub
or
xchg
mov
jne
arpl
xchg
out
xor
clc
mov
sub
cld
and
mov
mov
jl
outsl
adc
adc
add
pop
xor
and
test
push
movsl
pop
int3
and
pop
dec
adc
add
mov
cmp
dec
roll
sub
popf
inc
adc
cmp
push
pop
cmpsb
mov
jbe
scas
jns
mov
mov
mov
in
jae
push
hlt
mov
mov
sub
mov
decl
push
decb
cmp
in
jae
sarl
sbb
pop
in
testl
loopne
popf
popf
ds
inc
subb
and
fisubrs
enter
inc
push
inc
clc
sub
sbb
pop
gs
sarl
jno
dec
adc
jle
addl
movsl
pop
xorb
xchg
xchg
cmp
dec
cltd
pop
sub
mov
fistps
sahf
ret
jle
aas
jns
fs
cmp
add
jbe
lods
das
es
xchg
lods
ss
shlb
mov
inc
mov
in
jns
mov
or
dec
in
add
xchg
and
or
adc
or
xor
out
leave
dec
adc
pop
outsb
add
out
adc
test
xchg
pusha
loopne
or
mov
jne
pop
sub
jle
mov
int
and
imul
mov
lds
cmp
push
inc
pop
in
fdivr
or
and
dec
xor
shll
mov
push
dec
enter
or
into
push
jmp
mov
jp
or
int3
dec
repnz
clc
jle
push
movsb
xchg
ljmp
dec
cmp
pusha
iret
dec
push
filds
pop
jno
nop
mov
sub
scas
push
or
cli
dec
inc
jbe
jp
mov
sbb
int
sbb
sbb
loope
stos
push
pop
mov
pushf
popa
adc
leave
push
aaa
cmc
or
jmp
cs
imul
sub
mov
cmpsb
lea
mov
cmp
sub
cmc
std
push
shlb
sub
shll
add
jl
jg
out
popf
cmp
int3
push
push
pop
mov
jmp
adc
jb
sbb
loopne
inc
sbb
pop
or
fsubrs
jo
mov
jns
pop
adc
enter
sbb
inc
mov
out
dec
xchg
or
pop
mov
cltd
cmc
push
mov
dec
repz
xchg
jb
push
js
and
mov
or
jbe
push
testl
push
add
sub
enter
lock
fcmove
dec
mov
stos
in
mov
shl
ror
aaa
hlt
or
stc
cmc
xchg
fsubrs
aas
scas
shrl
cwtl
insl
aaa
ja
jae
js
or
aam
popa
and
roll
and
out
sub
push
mov
mov
mov
jl
rolb
out
in
jge
pop
gs
push
push
lahf
mov
add
outsb
and
in
gs
nop
pop
mov
imul
sub
sub
test
int3
stc
je
imul
gs
fmull
mov
dec
fwait
popl
add
sbb
fsubrl
in
push
mov
movsl
in
insl
or
mov
fistps
xchg
jne
pushf
dec
enter
pusha
cmp
pop
cmp
test
adc
pushf
adc
mov
pop
push
push
jne
adc
inc
popa
sahf
ljmp
mov
std
xchg
arpl
mov
int
lcall
xchg
js
filds
pushf
inc
push
hlt
sarb
xor
sarb
pop
fwait
push
stc
fisubl
push
cli
fistpl
ss
shlb
out
int3
mov
xor
or
xor
repnz
xor
shrb
fldenv
mov
pop
fistpl
cltd
pop
das
inc
push
xor
fisttps
leave
outsb
adc
outsb
test
xchg
nop
fadds
jnp
int
test
sarl
test
push
rcr
sbb
lret
mov
jne
mov
mov
fcomp
lods
nop
xor
sbb
ss
dec
xorl
xlat
mov
jl
int3
repz
jns
xor
push
sbb
push
lods
dec
bound
mov
sbb
arpl
xor
test
or
mov
das
add
cs
push
loopne
sbb
sbb
int3
inc
shll
mov
fsubr
enter
dec
mov
or
lds
fwait
dec
or
in
inc
dec
mov
push
lret
hlt
lcall
sbb
nop
cmc
das
dec
sbb
jl
push
iret
mov
and
adc
pop
out
out
test
jecxz
push
faddl
inc
dec
push
mov
lds
sbb
or
fwait
cmp
out
sbb
int
mov
xchg
imul
sar
add
push
push
mov
pop
ret
fs
movsb
jnp
mov
out
stos
push
xchg
lods
jge
dec
jg
adc
movsb
dec
mov
stos
inc
sbb
add
mov
xchg
iret
incl
mov
push
mov
in
pop
out
sub
in
cltd
scas
cmp
inc
int3
shlb
or
xchg
add
or
xchg
inc
cs
xor
push
fcompl
adc
sbb
out
pop
iret
cs
mov
cmp
add
sahf
mov
dec
jns
ret
xchg
jno
and
add
ret
insb
pop
sbbl
imul
dec
push
push
mov
pop
test
inc
jge
lcall
sub
inc
push
out
add
mov
leave
sub
add
dec
stc
pushf
cwtl
sub
inc
aaa
inc
bound
andb
add
icebp
out
sbb
mov
xchg
enter
pop
pop
leave
fsub
inc
movl
iret
test
imul
push
pop
call
pushl
ss
and
inc
add
repz
ret
adcb
pop
mov
inc
mov
or
es
sbb
xchg
cmp
jb
aaa
pop
ja
xor
push
xor
adc
adc
lret
movsl
scas
cli
push
and
xchg
aaa
mov
push
lods
sub
stc
test
dec
into
or
lods
adc
imul
adc
cmp
cmp
jnp
pusha
xchg
mov
and
push
je
lds
jns
inc
cmp
enter
sub
jl
adc
fiadds
sub
pop
cmp
dec
insl
adc
insb
cs
popf
aas
insl
scas
arpl
movsb
flds
repnz
adc
addr16
pop
pop
icebp
push
mov
add
jnp
ds
lahf
fldcw
push
mov
test
incb
jae
popf
dec
cmc
fmuls
xor
fbstp
mov
mov
mov
xor
sub
mov
into
mov
cs
adc
pop
outsb
dec
sub
ljmp
cmp
leave
loopne
daa
inc
dec
add
ficomps
test
out
dec
pusha
mov
adc
pop
lret
pop
or
leave
sub
xor
bnd
insl
mov
sbb
add
xchg
into
dec
dec
loope
mov
cs
push
repnz
cmpsb
shlb
mov
popa
cmp
sbb
mov
or
and
fdivrs
sbb
cli
popl
ljmp
fstps
pop
jecxz
xlat
xchg
in
cmpl
cs
pop
mov
das
xchg
ss
mov
testl
call
lods
mov
dec
push
push
inc
aaa
lcall
cmpsb
test
mov
jno
sbb
mov
and
jp
testl
push
dec
mov
pop
xchg
stc
es
xor
mov
addr16
in
sbb
push
push
fnstsw
loope
mov
mov
fidivl
dec
adc
jbe
js
or
das
out
repnz
push
pop
in
fwait
movsl
dec
pop
enter
in
repnz
repnz
mov
out
in
jns
iret
pusha
inc
sbbb
add
fmul
adc
dec
push
add
add
loope
xchg
das
sbb
pop
and
adc
mov
sbb
mov
mov
push
cmc
inc
call
cmpsl
rolb
mov
fcoms
les
cwtl
movsbl
mov
jge
shr
jb
and
or
mov
xor
push
pop
mov
jne
mov
imul
fistpll
inc
push
lock
divl
push
push
enter
daa
push
cmp
pop
aaa
xchg
jo
rcll
mov
sahf
xchg
mov
or
sbb
nop
pop
dec
mov
dec
or
mov
cmp
lcall
pusha
sahf
rorl
xor
jge
sbb
stos
popf
je
or
sub
adc
aaa
call
movsl
jl
fldenv
out
cmp
out
out
repz
mov
and
sti
dec
inc
sbb
inc
dec
insb
aam
cmp
dec
sbbl
sub
mov
adc
loopne
fs
lock
fidivrl
jp
notb
mov
loop
loope
call
xlat
xor
cmpsb
lods
inc
mov
sub
shrl
loop
pop
cmp
jbe
outsb
xor
xlat
or
mov
pop
adc
push
adc
and
shlb
mov
xor
inc
loope
je
xor
push
fmuls
lahf
adc
xor
inc
ss
stos
cli
inc
das
cli
rcll
jae
out
sbbb
mov
movsb
or
repnz
mov
repnz
push
shrl
ret
cmc
ficoml
xchg
arpl
add
rcrb
and
test
ljmp
add
mov
cltd
movsl
mov
fsubrs
xor
test
popf
out
dec
cltd
shl
dec
lret
test
jg
or
inc
sub
add
push
mov
fimull
pop
and
jnp
cmpxchg
or
cmc
ret
stos
dec
jbe
notl
mov
ja
xchg
xor
mov
mov
jmp
test
xor
loop
xor
lock
jns
les
mov
and
lcall
inc
adc
mov
mov
and
pop
mov
addl
mov
ror
cli
mov
adc
inc
shrb
xor
lcall
xchg
sbb
xor
ret
std
negl
sbb
dec
pushf
jno
sti
jp
ret
push
insb
popa
call
mov
jne
xchg
popf
daa
or
imul
xchg
and
roll
loop
mov
cmp
xor
and
out
pop
sub
nop
popa
out
xchg
int3
jmp
rolb
cmp
roll
lahf
xor
add
xchg
sbb
mov
dec
and
lock
push
test
jnp
scas
and
in
adc
push
cmp
lret
or
inc
or
xor
push
es
dec
add
inc
cmpb
xchg
xchg
push
stos
jle
xor
mov
and
mov
jnp
loope
mov
ja
jle
jmp
cmpsl
adc
pop
ljmp
mov
inc
xor
cmp
dec
push
ficoml
push
mov
push
leave
jle
scas
aaa
inc
mov
cmp
mov
leave
dec
movsb
push
mov
xchg
movsb
aam
inc
xchg
xchg
lods
dec
int3
pop
cmp
adc
dec
adc
xlat
inc
insb
dec
and
movsl
mov
fbld
or
fadd
lock
mov
sub
cmpsl
adc
jmp
push
jl
sub
fisttps
mov
xchg
jmp
mov
hlt
stos
mov
xchg
dec
inc
gs
pop
bound
push
inc
inc
int
cmpsb
cmpsl
clc
test
jb
fildl
xchg
mov
enter
sbbb
sbbl
fwait
ret
bswap
es
fadd
or
pop
pop
xchg
adc
lock
fsubl
rcl
or
or
push
sbb
mov
fnsave
test
movsb
adc
lods
fs
push
jmp
stos
push
ds
iret
and
add
repnz
mov
les
es
dec
pop
xchg
pop
cmc
add
pop
adc
inc
jmp
fwait
mov
test
mov
add
aad
jo
clc
icebp
call
mov
nop
stc
push
jbe
daa
fidivs
mov
sub
movsl
cmp
lds
rcrb
loop
aad
pop
dec
mov
or
shll
jb
push
xchg
jbe
in
lret
mov
outsb
inc
dec
and
dec
cmpsl
add
lods
adc
mov
inc
lock
or
add
ljmp
test
push
add
jecxz
push
sbb
repnz
lcall
nop
xor
in
iret
and
mov
push
mov
cmp
push
imul
inc
scas
je
cmp
shll
cld
jmp
sub
aas
push
outsb
cs
cmpsb
fcmovu
lock
cwtl
out
icebp
sub
call
mov
push
inc
adc
add
mov
cs
mov
jbe
int3
and
mov
add
movsl
xor
cmp
push
push
mov
mov
mov
test
jmp
jo
cmp
aad
aad
dec
cld
sahf
loopne
inc
xchg
push
sub
dec
scas
ror
and
mov
dec
sti
push
popf
mov
sti
jmp
bound
inc
lahf
mov
clc
punpckhwd
jp
mov
dec
xchg
lret
jbe
or
and
mov
cmp
xchg
mov
stos
rorl
mov
icebp
pminub
push
mov
cmp
sub
shl
test
jle
add
mov
dec
outsb
mov
adc
jmp
repz
pushf
fcmovu
cmp
fdivrl
cwtl
add
mov
sub
testb
or
xor
int3
in
pop
pusha
addr16
sub
xchg
inc
movsl
fsubrl
sub
jmp
adc
mov
inc
jnp
fwait
dec
jns
or
mov
int3
xchg
xchg
int
notb
inc
test
cmp
inc
push
mov
jecxz
cwtl
cwtl
icebp
sub
and
je
shlb
cmp
adc
dec
das
pop
pop
add
or
or
jbe
xor
pop
mov
outsb
hlt
sbb
movsl
mov
or
gs
div
mov
xor
jmp
mov
lods
aad
cmc
and
sti
jl
scas
cmp
dec
outsl
cmc
andl
sbb
xor
pop
mov
cli
dec
test
shrl
or
mov
inc
or
fistps
mov
jns
adc
iret
fdivs
cs
push
jno
jl
push
and
push
cmp
dec
test
fcoml
fistpll
stos
int
sbb
fisubs
inc
aad
pop
cmpsb
repz
inc
xor
lret
jmp
stos
jl
loopne
das
cmp
inc
mov
add
jg
add
mov
sbb
dec
xchg
dec
rolb
add
leave
adc
popf
mov
shlb
pop
cmp
push
enter
cs
xor
inc
mov
negl
mov
sub
adc
inc
pop
cwtl
std
dec
and
inc
les
mov
add
cli
lods
pusha
out
imul
xorb
test
pop
loop
in
and
gs
jae
xor
cmp
pushf
mov
aam
or
lret
mov
sub
sub
jl
or
clc
cli
sbb
jne
mov
fucomp
push
in
out
xchg
icebp
add
out
adc
movsb
add
std
mov
es
dec
loopne
xchg
dec
aad
aaa
cmp
inc
daa
pop
pand
add
and
test
sahf
bound
sub
out
jp
int
pop
cs
leave
inc
je
icebp
jl
out
jnp
jb
scas
jns
out
or
lds
or
stos
mov
ja
or
jmp
and
test
out
cs
ds
push
fsubp
mov
adc
adc
sti
scas
sbbl
ret
lret
xchg
cmpsb
inc
or
and
dec
push
cld
test
sub
mov
stos
xchg
cmpsl
or
push
mov
out
popw
loopne
test
inc
in
cmp
fistpl
or
xchg
daa
sbb
test
sub
ljmp
mov
or
sub
jp
in
enter
outsb
test
pusha
cmp
lcall
dec
les
in
mov
xor
mov
rol
mov
gs
ds
addb
jg
jecxz
xchg
and
sub
mov
push
pop
out
pop
lret
popf
or
fidivrl
mov
mov
cmp
pushf
mov
xchg
fsubrs
lcall
push
adc
mov
jp
punpcklbw
icebp
in
icebp
loop
mov
pop
and
add
or
mov
pop
in
mov
shrd
inc
xchg
mov
sub
shrl
mov
imul
jl
mov
mov
into
mov
daa
lods
aad
cmp
pushf
push
cmp
daa
dec
dec
outsb
xchg
repz
in
jns
xchg
nop
add
mov
lret
xchg
adc
xor
or
lock
loopne
add
jo
sbb
out
imull
xchg
stos
mov
ror
jne
cmpsb
hlt
lahf
pop
lods
or
lods
outsl
cmp
jb
arpl
mov
inc
pop
add
jmp
mov
inc
jbe
popf
inc
xlat
xor
inc
or
repnz
jnp
xor
mov
cld
push
imull
sbb
add
dec
das
push
sub
jl
inc
inc
and
mov
jle
pop
rcl
pop
and
mov
xchg
hlt
jmp
leave
sub
adc
gs
dec
out
push
loopne
xor
sti
sub
std
xchg
inc
mov
add
jl
clc
testb
icebp
ss
push
jb
sub
inc
scas
cmp
aas
imull
popf
xchg
lea
es
push
fnstcw
mov
dec
or
mov
mov
lcall
dec
pop
mov
pushf
xor
pop
dec
out
inc
jle
mov
movsl
push
iret
clc
xlat
xchg
popa
scas
fcos
mov
cwtl
xchg
repnz
sbb
pushf
shrw
xchg
sti
sub
test
orb
into
gs
movsl
jne
cmp
xlat
push
inc
sarb
stc
add
sub
or
push
and
ja
out
xor
add
sub
aaa
mov
push
sub
js
add
jo
mov
movsl
scas
push
pop
frstor
fistl
adc
cmp
sbb
mov
into
or
lods
sbb
lods
inc
pop
pop
ljmp
ss
out
or
in
push
push
sub
clc
lods
lods
and
jbe
mov
sbb
pop
mov
sbb
mov
or
insl
cmp
dec
lcall
pushf
xor
shl
pop
clc
out
fwait
clc
mov
add
adc
mov
es
add
add
jmp
ja
mov
cs
push
xor
adc
sarl
mov
sahf
push
dec
cmpsb
cmp
in
mov
xor
stc
adc
mov
mov
scas
shr
loope
cmp
dec
ss
mov
and
dec
inc
pop
or
or
sub
ljmp
dec
divl
mov
lds
es
addr16
xchg
cli
cmpsl
jl
or
sarl
idiv
lcall
js
nop
xchg
xchg
bound
lods
or
in
iret
mov
mov
cmp
leave
pop
rcr
push
or
jns
inc
inc
out
pop
xchg
loop
jno
sub
jle
dec
mov
sbb
xor
add
pushaw
arpl
daa
in
xchg
pushl
in
in
mov
or
in
cmpsb
push
xlat
xchg
popf
cmp
jmp
jnp
jno
and
mov
jo
leave
adc
push
ret
cmpsb
loop
xchg
or
or
stos
adc
inc
dec
fcompl
lea
les
mov
pop
xlat
xor
pop
mov
rcrl
in
or
clc
in
add
testl
fldcw
mov
test
jo
dec
cs
or
mov
lods
xor
cmp
mov
push
xor
sub
push
cltd
call
cmp
inc
xchg
fs
imul
test
mov
stc
lahf
outsl
cmpsb
pop
insl
in
lcall
push
mov
xchg
mov
sbbl
ja
jge
push
pop
into
or
std
mov
imul
ljmp
repz
arpl
push
cmp
cmp
mov
xor
or
pop
jns
fst
mov
rorw
mov
sub
int3
adc
aam
mov
and
lods
add
test
adc
lods
fwait
pop
imull
js
sbb
sbb
push
ret
inc
leave
gs
jmp
mov
xor
cmpsl
jo
mov
mov
sbb
and
movsl
add
jns
sti
aas
ja
sbb
jmp
cmc
sub
mov
sbb
mov
xchg
sbb
inc
and
pop
push
sub
insb
dec
fcompl
fidivl
pop
push
dec
push
call
mov
jae
xor
add
mov
inc
mov
incb
fists
arpl
adc
mov
femms
scas
sahf
inc
repz
lea
sbbl
rorl
lds
sahf
fucomp
jne
mov
rorl
lahf
dec
or
mov
in
jl
ja
out
pop
ret
adc
movsb
and
scas
dec
xor
xor
pop
insl
and
mov
pushf
mov
lcall
lcall
stos
lds
dec
push
mov
and
insb
xchg
cmpsb
add
pushf
push
in
ds
into
adc
sub
mov
inc
out
and
mov
push
out
push
int3
mov
cli
sbb
in
pop
jp
sub
push
cmc
sub
in
cmp
jo
jae
xchg
and
test
mov
pop
and
and
sbb
push
push
mov
sub
mov
js
repz
lock
es
repz
cmpsl
mov
or
sub
or
test
xchg
test
adc
inc
loopne
andl
imul
je
xchg
es
add
in
int
rsm
dec
sarl
pop
xor
add
xchg
jle
in
jnp
mov
xchg
xlat
pop
push
push
adc
out
insb
rcrb
mov
mov
ret
jle
lcall
pop
push
std
cltd
gs
cmc
ja
cmp
cltd
jb
movsl
jle
stc
popa
jmp
mov
stos
leave
mov
sub
add
jnp
xchg
inc
outsl
mov
lcall
push
imulb
xor
imul
xlat
je
jne
xor
cmp
push
push
xor
cmc
inc
and
and
pop
out
xor
lds
pop
imul
sarl
scas
fildll
mov
sbb
movsl
sub
pushf
lea
mov
adc
mov
xor
mov
xor
push
cli
sub
out
popf
adc
adc
rorb
mov
adc
fcompl
xchg
rclb
jl
xor
and
aam
pop
insb
out
cmp
push
sbb
dec
sti
loopne
pop
insl
not
add
push
adc
jo
jno
lods
mov
pop
shlb
mov
sub
inc
push
and
jecxz
lret
and
out
pusha
mov
loopne
sub
inc
cmp
add
sub
inc
enter
xchg
test
cld
shr
push
dec
nop
leave
stc
dec
pop
aam
xor
push
pop
push
mov
test
sarb
adcl
ds
jg
fldl
push
popf
lods
mov
scas
pop
add
cmp
fcoml
pushf
xchg
pop
inc
xchg
mov
cld
cmpsb
test
iret
dec
mov
pop
rol
mov
testl
js
mov
iret
in
inc
mov
in
ljmp
pop
cwtl
jae
mov
notl
arpl
xchg
mov
repnz
das
jp
or
imul
push
iret
int3
push
repnz
pop
jo
push
test
mov
daa
add
xor
cld
imul
cwtl
pop
push
out
ja
movsb
in
adc
mov
cmp
shrb
fiaddl
out
test
in
jmp
div
leave
cmp
and
push
push
icebp
testb
push
sbb
shlb
mov
xchg
sub
lds
aad
inc
stc
mov
jno
and
sbbl
sub
loope
push
push
jg
cwtl
cli
add
ljmp
push
pop
mov
jl
stc
mov
inc
mov
jge
in
pop
mov
leave
cmp
jge
mov
mov
ficompl
adc
or
leave
jne
cwtl
jecxz
adc
sarl
cmp
inc
pushf
movsb
sub
sub
mov
fs
push
out
jns
push
and
fstps
jbe
xchg
mov
je
lret
pop
sub
enter
pop
pushf
btr
and
xchg
insl
ret
mov
leave
cmp
cmpsb
and
pop
pop
adc
push
test
lods
cli
push
nop
cs
jg
sbb
call
mov
pop
add
mov
jp
pushf
int
xchg
inc
mov
aam
pusha
xor
pop
clc
popf
and
xchg
inc
out
fiaddl
in
scas
add
and
movsl
cmp
or
mov
adc
push
xor
jmp
mov
sbb
in
enter
fldl
imul
or
inc
sub
aam
and
lods
cltd
sbb
ficoml
ss
stc
fldt
sahf
orb
xchg
repz
sahf
jns
dec
xchg
aaa
inc
push
pop
mov
xchg
adc
lea
popa
jnp
mov
inc
mov
aad
mov
inc
popa
cmc
decb
insl
push
pop
fucomip
jp
je
movsb
and
mov
rep
mov
fildll
xchg
out
pop
sub
pushf
roll
call
push
arpl
pushf
pop
ret
in
cmp
jo
fst
dec
sub
daa
jne
pop
sbb
dec
push
cmp
xlat
inc
and
movsl
mov
xchg
es
mov
sub
call
push
add
imul
push
scas
pop
or
and
add
cltd
in
outsb
jne
mov
das
ret
repz
or
mov
xchg
sub
nop
mov
dec
mov
xor
stos
mov
mov
xchg
orl
sub
dec
in
xchg
in
add
fstpt
nop
mov
push
scas
push
pusha
lods
jns
cmp
jp
and
testl
sub
mov
pop
inc
pop
lret
bnd
pop
mov
jae
fisubrs
sub
jbe
jg
idivl
mov
mov
xchg
imul
mov
push
in
add
test
dec
in
inc
test
cld
fcmovnb
cltd
loope
xor
or
pusha
inc
xchg
es
mov
jle
pop
out
in
outsb
adc
pop
pop
and
mov
aas
push
aam
adc
jne
fdivs
mov
jae
sti
out
in
inc
fdivrs
adc
jecxz
cmp
lret
adcb
rcll
pushf
loope
lea
cli
roll
int3
test
js
mov
mov
ficomps
jge
adcl
arpl
jecxz
cltd
lock
dec
mov
loopne
fistpll
pop
aad
mov
pop
test
xchg
cmp
add
das
out
test
xchg
xchg
data16
and
fst
lds
jmp
cmp
ds
iret
inc
inc
fsubrp
cmpsb
mov
xor
xor
pop
insb
sbbb
push
nop
jmp
mov
and
lret
or
add
out
shr
jbe,pn
stos
lcall
mov
iret
dec
lcall
adc
pop
pop
xchg
negb
lret
aam
lock
xchg
adc
ret
push
pop
bound
sub
imul
inc
inc
fsubrl
xor
gs
pusha
dec
imul
out
js
cli
dec
inc
sbbl
jo
enter
dec
pop
mov
dec
xor
enter
mov
sub
cld
sbb
cmpsb
push
sbb
or
or
sbb
mov
subb
ja
in
cs
enter
sbb
xchg
xor
das
cmpsb
adc
mov
movsl
sub
pusha
pop
xchg
addl
lret
ffreep
push
add
insb
outsl
xlat
dec
or
jb
and
or
mov
xchg
orl
cmp
sahf
lcall
pop
jae
outsl
pop
inc
pop
mov
stos
div
cmpsb
icebp
aad
les
dec
mov
jmp
mov
lods
out
xchg
fwait
jecxz
cmp
lret
test
add
xchg
sbb
lds
ret
pushf
dec
or
jnp
cmp
push
adc
sbb
and
fbld
cmp
in
xchg
lods
sahf
scas
inc
mov
push
lret
cmc
aas
mov
ficoms
outsb
in
pop
jae
inc
test
mov
xchg
inc
fwait
mov
sub
iret
push
cmp
clc
arpl
cld
cmove
or
rclb
inc
jo
sub
push
rolb
pop
pop
inc
das
dec
push
jne
cmc
mov
mov
stos
cwtl
repnz
xchg
push
mov
popf
les
sbb
pop
sarb
lahf
leave
out
dec
add
adc
or
mov
jle
xor
mov
test
adc
test
daa
ret
dec
decl
imul
adc
fucomi
xor
adc
jecxz
daa
cmpsb
mov
dec
aaa
jnp
mov
call
js
mov
lds
add
sub
xchg
add
mov
dec
dec
mov
sbb
dec
adc
ja
fstpl
fisttpll
pop
notl
repz
cli
insb
mov
iret
loop
or
jl
push
push
mov
push
inc
shlb
ficompl
test
icebp
mov
jnp
add
push
and
lock
das
data16
ret
jnp
ss
mov
and
repnz
pop
leave
fwait
add
fists
stos
mov
loopne
pop
daa
pop
or
lahf
out
aam
sub
xchg
cmp
pop
lods
iret
xor
pop
push
dec
out
imul
iret
rorb
adc
aam
dec
iret
xor
popf
test
and
outsl
sahf
mov
roll
out
xchg
ret
sub
xchg
push
stos
gs
add
shl
pop
xor
jecxz
mov
and
jnp
push
into
cmp
or
mov
mov
xor
nop
or
pushf
fidivl
clc
xchg
scas
pusha
lods
js
sbb
xor
xchg
or
dec
xor
pandn
xor
and
xor
enter
or
jmp
sub
fmul
lods
push
cld
cmpl
call
pop
push
mov
scas
jmp
cmpsl
cmp
enter
push
pop
js
ret
sbb
ljmp
mov
xor
outsl
push
inc
xorl
and
push
pop
fcomps
pop
lods
or
mov
aam
nop
pop
sub
dec
pop
push
adc
xor
out
inc
add
test
lcall
mov
jns
and
aas
js
stos
fnsave
movsb
mov
cmp
rol
jae
ljmp
and
roll
mov
dec
cltd
cmp
or
popf
jle
mov
mov
jnp
ds
or
add
xor
add
mov
xor
popf
dec
cmp
mov
pop
repz
daa
or
inc
repz
das
push
testl
jl
jge
insb
scas
flds
sbb
adc
and
es
inc
jge
pshufw
rorb
cli
les
push
pop
add
call
ss
inc
cmp
leave
shll
jle
xor
xchg
add
xchg
les
mov
jmp
sub
pop
sub
push
mul
ret
out
lret
loopne
push
movsl
xor
jl
mov
test
scas
mov
push
jle
in
sbb
repz
movsl
pop
shlb
shlb
imul
inc
inc
ja
xlat
adcl
or
xchg
cwtl
adc
cltd
sub
cmpl
inc
iret
pop
mov
mov
test
sbb
add
sub
xor
adc
rcrl
int3
mov
pop
cltd
mov
int
mov
clc
jecxz
pop
fwait
enter
aaa
and
or
jb
add
and
xor
testl
aad
je
decb
pop
fs
repz
push
pop
cld
adcb
aaa
mov
pop
mov
iret
pushf
mov
mov
xor
add
pop
sbb
mov
jns
hlt
and
mov
push
loopne
dec
xbegin
dec
sub
testl
sarb
lods
dec
mov
mov
mov
out
ret
lret
pop
lret
test
stos
and
fsub
or
clc
roll
nop
mov
out
pop
xlat
fimuls
xchg
jg
imull
pop
pusha
jns
xchg
push
inc
jne
leave
imul
in
ret
mov
test
dec
cmp
dec
jle
xchg
mov
fidivrl
adc
or
sarb
arpl
loop
cltd
daa
rcrb
les
pop
mov
push
cmp
mov
adc
aaa
loopne
xchg
stos
cmc
imul
fsubp
outsl
fisttpll
mov
inc
cs
xor
add
ret
or
rolb
les
pop
or
lock
or
and
inc
popf
inc
mulb
add
js
das
in
and
repnz
popf
vpcomb
sahf
fistl
fiaddl
mov
cwtl
leave
xlat
fiadds
sub
adc
popf
jg
push
lds
fisttps
jnp
push
lahf
jge
push
add
sub
enter
jns
addr16
enter
jb
mov
or
shll
push
popa
dec
push
xchg
testl
jae
sarb
lods
and
push
call
dec
mov
xchg
push
adc
cmpsl
mov
xor
mov
cs
jo
test
in
push
dec
dec
lock
cs
mov
or
jno
into
shrb
dec
sbb
push
cmp
lcall
imul
ja
fdivl
je
dec
insl
jno
inc
lods
out
sbb
mov
jecxz
mov
add
cmpsl
jl
fidivs
inc
jae
xchg
mov
enter
mov
test
fs
mov
popa
jge
lahf
sbb
sbb
and
shl
push
fmulp
inc
ret
aaa
popf
das
mov
out
cs
pop
icebp
sub
mov
and
jmp
xor
and
pop
push
fwait
mov
dec
pushf
xlat
fwait
mov
inc
cli
mov
arpl
rcll
aas
jb
jno
dec
mov
dec
jns
outsl
out
adc
call
xchg
es
xor
das
sbb
lcall
mov
dec
mov
je
mov
aam
jmp
mov
pop
daa
cld
mov
dec
mov
jg
adc
leave
lods
xchg
mov
adcb
push
js
loope
mov
xlat
popl
sbb
and
and
testl
aas
cltd
fnstcw
insb
arpl
sti
add
sub
pushf
push
or
shlb
call
pop
mov
stos
inc
lods
mov
xchg
cmp
push
pushf
push
jg
pop
xor
rcr
xchg
icebp
addl
cld
jecxz
call
repz
dec
sbb
lahf
int3
xor
rcll
cmpsl
jns
out
cwtl
mov
push
dec
jns
jg
aam
les
or
push
add
lcall
orb
aad
ret
pop
xchg
in
adc
ret
inc
jmp
and
test
stos
mov
jecxz
ja
xchg
dec
mov
ret
cmp
lock
mov
gs
mov
jmp
imul
pop
unpcklps
mov
insl
in
cmpsb
lock
mov
xchg
clc
dec
and
adc
lret
aaa
add
test
fbld
inc
std
icebp
mov
ret
sbb
lods
and
and
sbb
loop
inc
sub
in
cltd
test
in
lcall
inc
jge
out
sbb
adc
movsl
and
jmp
mov
add
fiaddl
movsl
sbb
jg
fcom
mov
dec
in
cmpb
imul
movsb
sub
mov
repnz
les
sahf
add
mov
xor
cli
pop
rorb
pop
add
pop
inc
cmc
sub
jecxz
mov
addr16
xchg
mov
fsubrl
aaa
ror
mov
imul
add
data16
or
add
jecxz
data16
jae
mov
ds
imul
xchg
add
mov
shlb
in
scas
int
jle
shll
mov
or
xchg
mov
xchg
sbb
inc
test
inc
mov
rclb
add
mov
xchg
pop
cmp
test
pop
sub
lea
push
adc
cmpsl
push
insb
pusha
gs
stos
mov
dec
and
cld
xchg
ljmp
lea
fistpll
sbb
aad
jno
dec
mov
mov
push
fdivp
jl
aad
add
loop
mov
jge
pop
fsubrs
scas
or
sbbl
jl
mov
push
xchg
push
pop
nop
adc
jmp
or
cmpsb
outsl
lods
adc
push
insb
addr16
sti
xchg
push
xor
adc
jp
push
mov
std
pop
mov
shlb
mov
mov
xchg
adc
inc
repz
notl
mov
push
hlt
mov
add
pop
sbb
nop
das
mov
mov
fadds
inc
add
shrb
daa
scas
addb
or
push
mov
inc
data16
orb
cmp
arpl
push
cmp
add
and
loope
mov
xor
dec
cs
mov
and
inc
adc
mov
repnz
sub
subl
hlt
push
int
cmpsb
and
push
mulb
ficoms
cli
mov
sbb
xchg
lods
jne
or
push
lret
push
pop
fnstcw
mov
fisubs
subl
ret
push
stc
sbb
inc
popf
ficompl
dec
int3
aaa
out
sub
leave
in
lret
inc
sub
pop
inc
mov
icebp
sbb
or
popa
or
or
dec
popa
fldcw
or
mov
pop
push
xlat
push
imul
xor
inc
lahf
std
xor
arpl
hlt
dec
pop
insl
adc
push
add
aas
push
jp
dec
test
pop
ret
push
aas
scas
pop
std
cmp
ret
int3
mov
in
test
bound
mov
inc
aad
xchg
push
mov
stos
mov
das
lret
adc
jae
mov
pop
scas
lds
out
xchg
inc
and
fcomp
pop
adcb
out
fcmovne
mov
xchg
add
fsubrp
cld
lods
mov
cli
mov
aas
jmp
bound
cmpl
out
push
movsb
pusha
lret
hlt
aad
fcom
jne
inc
inc
stc
pop
xor
call
adc
mov
imul
iret
add
sahf
int3
xor
pushf
mov
lret
jecxz
xchg
aas
and
mov
mov
les
shll
xlat
loop
popa
out
add
lea
lcall
adc
xchg
xchg
js
in
add
mov
imul
ja
sub
add
lea
fwait
insb
inc
and
dec
stos
xor
stos
jmp
repz
ds
inc
dec
sub
push
add
ret
jmp
push
dec
and
int
inc
mov
jbe
data16
into
push
mov
pop
cli
mov
cmp
and
mov
mov
push
lret
adc
test
adc
dec
out
xlat
xchg
push
push
xchg
incb
dec
add
sub
mov
lods
dec
outsl
push
mov
sbb
aad
iret
mov
push
and
xchg
sahf
cmp
xor
mov
mov
jb
cmp
sahf
jns
dec
vmovhpd
add
jmp
mov
xlat
out
aas
xchg
fs
push
jp
mov
test
pop
mov
sub
inc
fmuls
inc
push
clc
jge
sbb
stos
test
mov
fdivrl
push
in
xchg
cmpl
jne
sub
add
jp
aas
sub
mov
jge
lahf
pop
xchg
inc
cmp
sbb
repnz
inc
mov
push
pop
add
inc
push
mov
and
test
lcall
fisttps
push
dec
pop
aad
ja
jns
scas
mov
lods
mov
or
aaa
pop
aaa
inc
sti
and
stos
int
mov
mov
push
shlb
jge
add
push
adc
cld
sub
pop
push
add
sahf
jg
and
popa
sahf
cmc
fldl
push
jecxz
sbb
dec
mov
aam
sub
ror
pop
repnz
je
andb
js
gs
or
daa
add
rcll
pop
mov
jno
sahf
inc
leave
sub
fcomps
cmp
jge
sub
addr16
enter
int
mov
dec
in
and
mull
xor
in
or
push
fimull
enter
sub
jae
pop
cmp
jne
mov
data16
push
out
hlt
xchg
push
xor
lcall
icebp
and
adc
int3
inc
pop
idivl
loope
adc
in
inc
cld
popf
bswap
incl
jg
ja
xor
jg
mov
push
out
outsb
cmpsl
cmp
arpl
cli
cmpsl
outsb
inc
loopne
icebp
dec
mov
dec
cmp
fisubrl
jle
out
sahf
inc
ljmp
shll
xor
loop
mov
xchg
xchg
inc
jge
shlb
icebp
xlat
cmc
aad
add
mov
aaa
sub
jb
jge
mov
jge
or
jl
push
sbb
or
sbb
xor
inc
test
adc
lds
jg
jg
lods
mov
mov
imul
and
mov
adc
xor
rcl
dec
rolb
lds
dec
mov
sbb
and
and
dec
jle
sbb
cmp
jne
icebp
sbb
mov
jecxz
out
mov
jns
addl
sub
sbb
or
inc
adc
jns
dec
ja
shlb
cmp
dec
rorl
vpminsw
int3
dec
cmp
adc
adc
lea
and
testl
jne
dec
push
adc
add
inc
jp
add
jmp
inc
cld
stc
sub
cmp
sub
icebp
mov
adc
mov
repz
popa
jbe
movsb
fnstcw
jp
je
icebp
ljmp
lret
xchg
arpl
lahf
sub
add
insl
sbb
scas
je
stos
out
shll
cmp
mov
rclb
pop
push
movsb
scas
xchg
lret
jp
mov
lret
stos
xlat
mov
aad
pop
dec
xor
or
scas
cmc
mov
ljmp
jp
pop
fnsave
mov
daa
cmp
sub
push
jnp
adc
jl
and
mov
mov
push
sub
cmp
inc
sub
and
push
or
das
xchg
test
pop
pop
jp
or
mov
movsl
and
jne
dec
pusha
and
std
loope
cmpsl
xor
lds
repnz
push
lret
jb
jecxz
jne
cltd
pushf
xchg
hlt
fildll
ja
sub
ret
jno
mov
cwtl
sub
stos
pop
cmp
cmpsb
lds
inc
out
jb
daa
jp
mov
push
std
loopne
dec
test
sub
es
cmp
fldcw
les
adc
mov
nop
in
inc
dec
push
mov
push
loope
mov
pushf
pop
push
bound
jne
adc
mov
inc
mov
out
cltd
pop
pop
psrlq
cmc
sbb
ret
fsubl
fidivs
shr
push
fdivr
fbstp
daa
pushf
repz
lret
fldl
xchg
insl
data16
rclb
insl
mov
movsl
aad
repnz
sahf
xchg
les
out
out
stc
loop
jp
xor
rclb
lods
adc
push
test
out
jg
sub
jo
or
jp
or
pop
sbb
test
add
lock
out
inc
ret
or
lea
sbb
pop
mov
arpl
sub
outsl
or
movsl
fsubrs
mov
into
cmpsb
dec
dec
aam
lea
lods
cmc
ret
xor
xchg
jno
jo
mov
sbb
xlat
push
cmpsb
fdivrl
ss
ret
clc
sbb
mov
pop
xor
nop
dec
fistpl
negl
dec
push
imul
mov
test
hlt
lods
ss
cmp
and
mov
jecxz
data16
push
sbb
xchg
ret
mov
dec
or
stc
outsl
frstor
jae
aas
cmpb
ret
and
rcr
xchg
sti
jae
cld
call
loope
xor
mov
gs
xchg
gs
ud0
rcrb
sahf
lea
cltd
mov
int
out
cwtl
adc
adc
dec
not
inc
inc
call
push
mov
and
aam
jae
ret
pop
into
jl
mov
mov
jne
out
xchg
leave
cmp
lds
cmpl
dec
cld
dec
mov
and
adc
gs
or
adcl
dec
dec
xchg
vcvtsd2ss
shll
test
movsb
jmp
shrl
mov
sbb
jo
mov
xlat
jmp
dec
jne
adc
je
inc
ficompl
fcomp
movsl
dec
mov
push
mov
aad
xchg
andl
out
sti
sti
aam
xchg
jp
shll
aas
scas
cltd
leave
pop
mov
out
in
popf
mov
or
jp
jge
jmp
call
movsl
jle
std
mov
roll
mov
push
mov
or
mov
mov
stos
jno
orb
dec
sub
pushf
mov
sub
imul
clc
sub
fiadds
mov
imul
cld
sahf
pop
jp
imul
sbb
cmp
xor
popa
hlt
inc
or
pop
pop
test
repnz
cmp
sub
test
popf
out
stc
sbb
xchg
mov
pop
es
lret
leave
loopne
lret
adc
inc
mov
imul
cmp
pop
cmp
addr16
mov
pop
cmp
sub
adc
jmp
xchg
adc
movsl
testl
and
lret
push
mov
fiadds
cmc
bound
out
xchg
iret
xchg
nop
fsubs
xor
push
movl
shll
dec
fsubrl
outsb
sub
xchg
fstpt
cmp
mov
push
shr
popa
push
dec
mov
or
inc
in
mov
out
mov
out
xor
cmp
jmp
cmp
inc
sti
dec
jb
inc
xchg
mov
add
jb
jl
jle
loopne
dec
stc
in
add
mov
mov
test
ljmp
movsb
popf
insl
sbb
jo
dec
stos
push
imull
lahf
sub
mov
push
movsb
fs
cmovb
mov
leave
sbb
jecxz
movsl
sbb
xchg
lods
shlb
or
fmul
call
mov
inc
jno
mov
daa
lods
fs
fnstcw
cwtl
inc
adc
pushf
sub
ret
jae
pop
xor
nop
mov
sub
int
lods
xlat
xchg
adc
insl
imul
and
cmp
or
xor
pop
jecxz
enter
add
inc
js
jbe
imul
inc
orl
lods
idivb
movb
gs
jbe
mov
rolb
in
dec
dec
mov
pop
insb
jge
imull
sbb
rcrl
mov
cltd
imul
push
mov
or
loop
pop
jge
lods
mov
sub
mov
add
jb
movntq
mov
push
sbb
push
into
sub
ret
xor
xchg
in
inc
outsl
aas
pop
jl
push
pop
push
lret
lret
sbb
pop
push
cmp
xor
daa
inc
dec
add
enter
sub
mov
or
ljmp
xchg
inc
leave
stos
inc
inc
mov
adc
inc
sub
jge
cmp
stc
mov
int
pop
in
testb
push
je
inc
cli
jge
jecxz
or
insb
push
call
aaa
cmp
mov
push
cmpsb
jmp
testl
outsb
das
sahf
xchg
lret
xchg
adc
movsb
mov
cwtl
jmp
cwtl
lahf
mov
lret
nop
lock
popa
addr16
int
xchg
mov
bound
jmp
inc
std
xchg
push
adc
mov
adc
or
inc
jno
aad
into
cmp
movsl
es
rcr
repz
xor
aas
jl
in
dec
sub
dec
adc
rolb
jnp
out
rclb
push
jecxz
icebp
cmp
lds
sahf
pop
cwtl
jmp
jo
sti
lcall
ret
sbb
inc
adc
iret
xchg
xor
pusha
or
xchg
adc
mov
cmp
pop
out
das
inc
imul
pusha
stos
jae
cmp
add
rcll
movsl
loop
int3
mov
aas
and
iret
jae
pop
jecxz
ret
push
ds
popf
leave
arpl
sub
insb
insl
add
das
or
or
popf
push
mov
inc
push
mov
jmp
xor
sbbb
mov
push
dec
scas
or
push
lea
cli
test
push
push
and
mov
popa
loope
mov
dec
mov
inc
cwtl
push
xor
into
fcoml
adc
ret
lret
inc
clc
jge
adc
outsb
test
adc
cmp
xchg
push
and
push
stos
inc
fisttpl
cld
iret
sti
fidivrl
scas
lea
pop
inc
out
cltd
into
lods
adc
cwtl
jnp
mov
pop
jnp
lcall
xor
dec
popf
pop
pop
adc
jg
out
sbb
out
aam
movsl
sbb
je
or
inc
mov
adc
add
mov
jnp
outsl
sbb
loop
aas
loope
add
xor
jp
scas
xchg
repz
lcall
pop
xchg
xchg
xchg
imul
mov
test
out
or
mov
xor
and
test
add
js
inc
stos
ret
outsb
sub
mov
push
in
sub
sbb
push
into
mov
or
inc
lret
loop
pop
subb
dec
aam
les
nop
je
jne
push
ljmp
pop
dec
mov
push
stos
pop
sub
cmc
imul
scas
dec
dec
xchg
add
sbb
js
push
sarb
int
mov
decl
loope
sub
cmp
or
sbb
mov
mov
jge
sbb
inc
push
mov
mov
fs
mov
pop
jg
push
push
inc
ret
mov
mov
mov
fisubrl
pop
jne
pop
inc
and
push
pushf
mov
mov
cmp
lea
sbb
push
leave
fsubs
fmull
mov
xchg
daa
in
cmp
adc
cli
repz
ljmp
dec
mov
jmp
and
loope
jl
into
cltd
insl
stc
pop
xchg
add
dec
mov
mov
jb
push
test
mov
lds
fucomp
xor
xor
notl
mov
fdiv
popf
leave
into
stc
in
and
cmpsl
mov
popf
jl
xchg
lret
pushf
fbld
daa
jo
adc
je
lret
mov
movsb
into
sub
movsb
ja
popf
test
out
nop
into
mov
mov
arpl
test
sub
lret
fcmovb
sub
sub
pushf
rorl
or
inc
cmp
push
xor
lcall
mov
js
inc
dec
add
fs
aam
mov
or
mov
inc
mov
xor
ljmp
out
jecxz
jp
std
and
rclb
jnp
dec
sub
loop
enter
js
cltd
jo
outsb
pop
rcrb
movsl
push
push
mov
pop
adc
cli
hlt
mov
pop
adc
add
leave
dec
add
push
aas
jo
mov
leave
call
jnp
or
jb
daa
mov
in
mov
into
cmc
sub
dec
inc
lds
jp
inc
ljmp
sbb
and
jno
in
int3
inc
xchg
xchg
push
fiaddl
aas
hlt
add
pop
fistpll
popa
dec
sahf
leave
xchg
mov
inc
dec
mov
or
mov
and
jae
or
jle
mov
pop
push
adc
xchg
add
pop
std
fs
aas
pop
cltd
lock
aad
mov
mov
lods
jne
adc
xchg
mov
cmp
cs
add
shrb
insl
xor
in
pop
cmp
xor
sub
lret
mov
pop
push
mov
xor
pop
in
ljmp
rdpmc
mov
faddl
lock
stos
mov
jae
andl
mov
inc
xchg
mov
push
xor
das
enter
push
insl
mov
adc
repz
xor
cltd
and
mov
sbb
and
add
add
lods
fisubl
int3
adc
loopew
orl
and
and
ret
cmp
ja
test
mov
in
hlt
sub
call
test
sbb
sbb
std
popf
ds
pop
inc
les
iret
push
arpl
or
cwtl
xor
sbb
add
popf
mov
adc
mov
mov
cmp
push
cltd
and
mov
in
push
insb
jg
fisubs
inc
loop
inc
and
push
xchg
mull
xor
xor
lahf
cmpsl
addb
jl
fildll
ds
adc
outsl
mov
repnz
movsb
fwait
sub
xchg
movsl
int3
les
or
leave
xor
lret
lcall
inc
int3
repz
in
dec
pusha
ror
cld
das
movb
mov
outsb
clc
popf
cmp
push
pop
enter
inc
and
outsb
push
jecxz
inc
mov
lods
pop
bound
adc
cmp
idiv
mov
mov
push
nop
push
mov
xor
aad
or
lahf
push
test
inc
pop
mov
dec
push
jno
das
push
sub
or
popa
stc
addr16
mov
adcl
ret
jg
lcall
sbb
or
loop
cmp
xor
out
out
push
rcr
add
xchg
push
shlb
mov
cmp
xor
jns
xlat
mov
sbb
icebp
pop
inc
sbb
arpl
adc
out
dec
clc
in
xor
mov
scas
repnz
or
cmpb
push
jns
lret
into
adc
jno
out
xchg
stos
push
jnp
hlt
pop
frstor
fcmove
in
or
outsl
mov
stos
push
negl
fimull
pushf
sbb
popf
dec
dec
sti
mov
movsl
cmp
sub
je
push
sub
jb
fucom
js
jp
lcall
and
xchg
xor
push
xlat
push
adc
cmp
push
xlat
andb
xlat
mov
fsubs
jmp
sahf
aas
sbb
fsubp
mov
div
jmp
mov
push
mov
ret
test
jmp
nop
mov
in
and
pop
mov
cli
inc
sbb
jl
push
mov
enter
fdivs
xchg
jno
stc
insl
shll
xor
dec
push
pop
mov
rcrb
or
imul
dec
dec
leave
mov
lcall
push
sub
mov
xor
xchg
and
mov
into
mov
out
adc
repnz
cs
xor
fdivrs
mov
mov
shll
adc
dec
ja
in
iret
mov
ds
add
cli
xchg
lret
in
cmp
aaa
imul
or
pop
fwait
xchg
lret
mov
fnstsw
xor
sti
and
jmp
movsl
mov
rolb
jns
pusha
xor
outsb
jns
and
imul
mov
lods
push
xor
in
jle
ss
call
adc
fwait
jne
hlt
ds
jle
stc
sub
and
sub
xchg
mov
je
stos
cs
sbb
popa
inc
adc
jbe
sub
ficoml
repz
pop
fidivs
cmc
dec
int3
sub
bswap
jne
mov
outsb
push
imul
or
out
rol
test
mov
lods
gs
cmp
xor
sbb
cmc
ds
push
push
inc
ja
pop
jge
pusha
ficoms
sbb
xor
mov
push
adc
add
scas
fs
push
lods
mov
xchg
ret
inc
sub
pop
mov
shll
bound
sub
shlb
jae
int
mov
mov
jno,pn
mov
into
aas
inc
decl
jmp
lahf
cmc
adc
mov
inc
sub
jno
mov
ret
or
fildll
jl
mov
sbb
jbe
inc
sbb
sub
inc
add
int3
stos
xor
sub
cmp
roll
inc
mov
jmp
int3
pop
ror
out
test
or
jp
outsl
imul
shrl
xchg
gs
fdivl
pop
pop
das
aad
das
loopne
mov
push
das
and
fmul
cmp
xchg
clc
xchg
fildl
movsl
jo
push
push
inc
sub
jecxz
je
push
adc
lea
mov
sub
mov
ljmp
into
inc
jo
or
inc
data16
popa
in
sahf
sbb
repnz
xlat
cmc
dec
mov
inc
pop
xchg
in
push
push
out
or
cmp
out
mov
xor
add
sub
dec
mov
mov
mov
lret
jo
adc
cld
inc
add
cwtl
inc
repz
add
pop
mov
dec
and
pusha
mov
scas
cli
test
pop
shrb
jp
fstpl
xor
fwait
rcll
pop
push
xorb
lock
mov
stc
mov
sub
xor
dec
notb
cltd
inc
insb
ds
sahf
call
cmp
sti
sub
js
mov
mov
std
mov
mov
cmpsb
enter
fisttps
lret
cmc
xchg
shlb
push
inc
out
inc
mov
mov
cwtl
jmp
movsl
int
dec
xor
and
push
out
and
jbe
sbb
faddl
inc
icebp
fs
jecxz
into
js
inc
or
bound
mov
cmp
xchg
sub
stos
rcl
les
es
lods
mov
cli
mov
inc
nop
xor
fwait
cmp
xchg
bound
in
pusha
out
and
push
jl
xchg
mov
out
adc
cmpsb
xchg
and
pop
jecxz
jle
dec
sahf
cmp
test
xlat
dec
das
dec
popa
mov
inc
sub
push
test
lods
mov
fstpl
movsl
pop
aam
mov
fcmove
movsl
cmp
jp
adc
inc
mov
xchg
leave
sbb
out
pop
jb
xchg
pop
ljmp
mov
scas
push
xchg
or
popf
jnp
scas
or
repnz
enter
sub
inc
pop
or
negb
int3
jns
mov
inc
push
and
fs
mov
push
jo
xlat
mov
xchg
and
in
mov
mov
cmc
pop
lock
pop
pop
ds
ficoml
movsl
mov
call
call
jne
pop
aad
in
iret
mov
fs
mov
sub
in
iret
dec
xchg
mov
stos
shlb
lock
outsl
inc
lock
and
pop
das
mov
cmp
scas
loopne
sub
cmpsb
dec
js
loopne
xchg
xor
cmp
out
sub
outsl
jle
adc
inc
rolb
xlat
je
xchg
mov
pushf
mov
movsl
sbb
mov
lahf
mov
movsb
mov
push
inc
rorb
test
fdivrs
jl
mov
rolb
pushf
loopne
push
loop
fisttps
ja
es
mov
loopne
mov
xchg
fimuls
pop
hlt
jge
cmp
sbb
mov
rcll
jns
test
jns
sbb
call
in
mov
lcall
xchg
cld
ljmp
mov
mov
in
rcll
mov
xor
das
lret
xor
cmp
push
adc
mov
mov
addr16
insl
jbe
in
xchg
js
mov
add
jnp
jno
xchg
mov
sub
in
push
ja
jno
ret
push
pushf
xor
sbb
test
loop
jp
aaa
in
test
repz
divl
push
mov
pop
call
push
jne
test
sub
xchg
lea
sahf
test
ss
or
push
sbb
sbb
stc
repnz
dec
scas
gs
xchg
syscall
sbb
adc
add
xchg
inc
cs
jbe
sti
loop
jns
stos
aam
push
lods
sub
stc
gs
xchg
hlt
fistpl
test
pop
dec
push
or
arpl
and
xor
ret
xor
xchg
sbb
jns
scas
add
adc
clc
jl
call
aaa
dec
adc
or
push
push
inc
repz
mov
add
xlat
sub
scas
adc
adc
rol
movsb
notl
cwtl
repz
dec
jns
cmp
add
stc
out
repnz
pop
cld
das
push
je
push
clc
fmul
shl
pop
mov
lods
push
cmp
push
inc
dec
inc
or
clc
insl
cmc
adc
inc
jmp
stos
pop
movsl
popa
xor
stc
and
iret
loope
xchg
xor
test
lcall
cmp
outsb
sbb
imul
subl
ljmp
pusha
sbb
sar
inc
inc
in
lock
push
adc
mov
jmp
cli
shlb
aaa
jmp
cmp
dec
sub
cmp
jo
icebp
out
out
sbb
fsub
xchg
pop
in
aam
loop
lcall
mov
pop
push
push
push
es
lret
shrl
shll
mulb
lahf
out
and
sbb
add
in
rcll
or
sbb
subb
pop
and
loope
cmpsl
add
dec
sbb
sub
push
mov
fidivrl
rcr
cmp
jbe
dec
bound
mov
mov
cmp
aaa
sub
cmp
and
lock
sbb
push
push
and
mov
pop
leave
or
aas
sbb
imul
fldt
stos
ss
loop
push
fisubrs
mov
push
jo
sub
jp
inc
lods
pop
arpl
jecxz
fwait
ret
jle
mov
std
inc
out
shrb
cmp
sub
sahf
incb
aad
and
rclb
leave
cmp
cmp
and
cmp
imul
out
adc
pushf
scas
xlat
mov
insl
stc
jmp
lods
sbb
mov
lock
lahf
adc
repnz
xor
xchg
gs
dec
mov
jl
cli
mov
cwtl
mov
jge
mov
pop
sbb
sbbb
gs
sbb
cmp
int3
pusha
jne
loope
jae
lret
call
fldcw
frstor
mov
push
ficoml
inc
cmc
loop
jb
nop
lods
fldt
scas
xor
fistpll
push
xchg
xchg
test
push
imul
es
adcb
rcrb
in
xchg
sbb
push
adc
sbb
mov
in
xchg
push
outsl
out
add
jb
int3
xchg
push
push
out
adc
push
or
es
jl
ds
mov
cmp
xchg
pop
sbb
test
xchg
das
hlt
out
mov
dec
movsl
in
and
xor
ror
xchg
mov
push
std
cs
aaa
fidivl
cmc
pop
mov
aas
int3
mov
mov
or
cmc
or
mov
in
lods
dec
xchg
push
mov
das
mov
stos
stos
fs
push
dec
not
fadds
xlat
dec
or
jecxz
test
stos
inc
lea
adc
push
xor
test
imul
inc
ljmp
testb
insb
mov
jle
pop
adc
lock
xchg
cmp
aas
int
outsl
lock
out
loop
dec
cmc
mov
jp
out
jp
stc
popf
and
movsb
fdivl
adc
or
lods
mov
jnp
inc
cmp
mov
mov
or
loop
mov
outsb
dec
iret
fstpl
xor
push
pop
fimull
jnp
mov
scas
sarl
pop
or
out
xchg
cs
lea
xor
sub
das
inc
xchg
and
push
cmpsb
mov
push
xchg
jo
sub
add
jno
jae
jg
jo
fdivrs
outsl
int
xchg
in
xorb
inc
sbb
mov
fisttpll
push
add
repnz
push
xchg
jmp
sar
scas
repz
scas
xchg
mov
add
jle
and
jecxz
movsb
aaa
and
mov
rclb
cmp
or
repz
ss
lods
loop
movsl
pop
mov
jge
loopne
cmp
test
and
and
mov
orb
mov
push
and
pop
add
mov
pop
clc
iret
clc
scas
jno
imul
dec
mov
adc
leave
fdivl
decb
js
cld
sbbb
mov
loopne
and
mov
repz
mov
js
jg
add
xorl
and
mov
cmpsl
pusha
fwait
xor
add
pushf
jnp
dec
cmp
loopne,pt
sbb
xor
lds
inc
stos
xchg
sub
fidivrl
fwait
and
cs
cmc
aad
imul
adc
das
mov
in
or
and
sbb
mov
out
jp
and
mov
enter
lret
mov
jmp
je
pop
aaa
icebp
mov
lahf
cmp
repz
mov
clc
pop
sbb
mov
out
stos
aad
movsb
aaa
mov
data16
jb
fsubl
jnp
sub
in
mov
popa
jns
movsb
fiadds
push
les
cmp
incb
inc
sahf
mov
cmp
pop
and
inc
dec
movsl
push
jmp
mov
loope
xorl
push
ljmp
sub
lahf
mov
xchg
cmp
push
and
ret
loope
add
ja
leave
and
pop
cmp
loopne
arpl
or
pop
lods
mov
into
push
in
and
sbb
pop
in
mov
or
popa
or
or
das
movsb
or
add
fidivl
sub
fstpl
or
push
cmpsl
stc
imul
adc
ret
sub
add
jle
and
aam
pop
daa
dec
jecxz
call
iret
xchg
and
lcall
addr16
or
mov
dec
ror
push
xlat
nop
jge
push
es
jl
push
mov
test
push
cmp
add
pop
iret
icebp
add
ja
mov
stc
sub
xchg
mov
addb
xchg
sub
mov
das
adc
mov
bound
daa
sub
jp
sbbl
mov
cmp
scas
mov
nop
out
sahf
cmp
and
cmp
outsl
add
data16
pushf
shrb
lcall
inc
push
lret
shll
ds
or
jbe
dec
cltd
mov
pushf
out
xchg
cld
xchg
jecxz
sbb
fnstcw
bound
jl
loopne
and
and
cmpsl
pop
ljmp
jbe
sbb
pusha
jl
inc
lcall
lods
mov
pop
lock
imul
pop
dec
jle
and
add
rcll
dec
and
jp
fs
int
test
add
out
rorb
mov
adc
scas
dec
stc
movl
ss
mov
push
fcmovu
push
jne
hlt
es
jo
cmp
jl
mov
incl
out
mov
negl
into
fadd
or
lret
sub
jnp
stos
xchg
ret
lret
jae
mov
push
jle
fstpt
enter
and
imul
cld
mov
push
pop
push
sub
jbe
pop
repz
sbb
sub
push
data16
arpl
divb
subb
aas
fs
jmp
fisubrs
loopne
sub
and
dec
mov
into
hlt
adc
push
adc
addb
or
dec
xchg
xor
lods
xchg
in
jbe
jmp
mov
and
push
ja
call
dec
add
divb
insb
or
xor
add
pop
rcrb
sbb
mov
push
mov
outsb
jg
shrl
jecxz
es
cmp
testl
addr16
lods
mov
push
aaa
fcmovb
fldenv
aam
cmp
imul
jmp
je
cwtl
or
xor
test
fidivrl
das
popf
bound
stos
add
adc
ret
fwait
xor
stos
jbe
ret
xor
in
add
ss
roll
sbb
pop
pop
dec
test
add
push
jl
push
jl
jmp
andl
dec
add
and
ds
push
adc
out
aad
and
sbb
push
adc
sahf
fsubl
clc
daa
mov
push
cmpb
jp
pop
and
push
mov
sub
test
ret
loopne
popf
push
in
cmp
sbb
inc
cmp
cli
inc
mulb
and
pop
push
mov
fidivl
add
push
xor
pop
inc
mov
ja
adc
jo
pop
mov
int3
push
into
jg
sbb
fisubrs
xor
push
into
add
lcall
xor
push
sub
mov
outsl
xor
jp
lcall
cs
jl
push
xlat
lcall
dec
std
mov
fsubp
cmova
in
andl
roll
push
pop
decb
hlt
mov
xor
push
add
mov
call
ja
xor
sub
movsl
sbb
imul
inc
arpl
pop
test
movsb
dec
out
push
arpl
push
in
xor
leave
cmpsl
adcb
mov
leave
xor
adc
or
addb
adcl
fisubrl
dec
test
out
or
mov
jl
data16
add
pop
into
mov
xchg
int3
cmp
fs
cs
dec
jp
out
ds
xor
add
dec
ret
and
jb
loope
jle
repz
xor
and
scas
and
test
cmp
xchg
lcall
ret
add
mov
int
out
scas
xchg
pusha
in
add
lret
adc
add
dec
lcall
mov
cmp
cmp
mov
mov
repnz
xchg
mov
adcb
or
cmc
dec
mov
mov
call
or
pop
enter
jbe
rorl
sbb
xlat
cwtl
cld
out
pop
pushf
adc
es
pop
aam
xor
addr16
insl
enter
and
sub
xor
js
aam
cmpsl
mov
push
mov
jbe
adc
push
or
lahf
test
dec
mov
push
popa
icebp
inc
popa
jnp
push
andb
aas
out
add
jo
dec
adc
cmpsl
cmp
bound
or
hlt
cmp
add
fsubs
jmp
fiaddl
sahf
in
add
roll
ds
jp
mov
jo
call
xchg
ljmp
or
lahf
fildll
mov
arpl
mov
jge
xchg
cmpsb
dec
inc
lds
imul
ss
sub
xchg
push
add
jb
pop
lods
push
js
sub
aaa
cwtl
popf
dec
popa
adc
scas
mov
rcrl
jnp
add
dec
jae
and
enter
jns
in
pop
add
push
mov
xor
add
mov
imul
out
pop
cmc
sbb
cld
lahf
jne
mov
scas
push
push
jg
add
or
stos
inc
stc
xchg
cmp
das
add
repnz
insb
push
inc
ljmp
fcomps
lods
sbb
lret
jmp
daa
mov
out
lcall
cmp
stos
aas
cli
out
add
pop
pop
lcall
sub
jp
xchg
addr16
fistpl
shll
test
xor
xorl
mov
xchg
js
jnp
out
push
cltd
fnstcw
pop
dec
jbe
pop
xchg
out
fld
stos
cmpb
lock
xor
test
in
cmpsl
pop
adc
cmc
jge
inc
mov
push
inc
jg
mov
fbld
outsb
push
loope
add
pusha
imul
aas
aas
ds
dec
push
into
test
inc
push
movsl
ljmp
and
mov
outsl
push
push
cmpsb
aam
scas
xor
sub
jp
mov
loopne
add
cmp
pop
test
les
pop
cmp
push
cmpsl
jp
testb
push
add
fisubrs
mov
clc
js
fsubrp
or
mov
mov
lds
rolb
cli
bound
mov
jp
and
ss
adc
mov
push
fsub
add
xchg
add
sub
inc
cs
cmp
andl
rorb
or
adc
icebp
sbb
aam
cld
dec
pop
shr
adc
and
stos
push
mov
push
xorb
jp
inc
push
pop
pop
mov
roll
pop
imul
mov
inc
sub
sti
jo
pop
ds
rcr
cmp
daa
inc
dec
call
inc
inc
mov
js
sbb
in
loope
das
call
fisubl
sbb
dec
dec
push
mov
pop
mov
mov
dec
clc
clc
push
jns
scas
ljmp
cmp
fwait
imul
enter
jno
stc
mov
negl
addr16
out
mov
les
out
push
popa
mov
mov
mov
loope
xchg
sbb
hlt
add
lea
adc
sar
sbb
cmp
jno
jnp
or
stos
bound
movsb
ficompl
ret
lock
push
sub
arpl
shll
into
gs
es
aad
sbb
je
push
jne
call
xor
xor
adcl
out
adc
push
out
lea
rcll
cmp
test
jns
leave
rcrb
fadd
lock
addb
addb
movsl
iret
cmp
sub
lds
mov
xchg
and
sbb
data16
mov
or
cmp
mov
jb
inc
push
inc
sbb
jle
push
inc
insl
or
rcr
cmp
push
sahf
mov
mov
cmp
sbb
aaa
test
push
cs
outsl
pop
dec
lea
xchg
rol
mov
mov
sti
push
dec
push
push
mov
inc
cli
cmc
idiv
push
shrl
xchg
adc
mov
pop
push
xchg
shlb
in
call
sbb
mov
sub
popf
push
bnd
popf
cli
aad
lods
stc
push
push
jg
loopne
popa
sbb
int3
dec
loopne
mov
clc
or
push
les
and
outsl
adc
jo
or
fwait
repnz
mov
test
xlat
xchg
fldenv
mov
sbb
and
adc
stos
pusha
pop
scas
xchg
pop
xchg
push
stc
popf
add
jmp
jnp
mov
inc
sti
push
xor
cmp
xor
cmp
jb
repz
into
and
or
mov
push
sbb
jle
test
out
jae
or
adc
aam
call
pop
mov
xor
fwait
mov
sbb
insb
shll
jo
jle
jno
mov
inc
mov
nop
and
addr16
int3
jp
xor
rolb
push
pusha
outsb
movaps
jbe
testb
inc
ss
mov
cmp
jno
adc
iret
sub
das
mov
jo
rcrb
xor
icebp
adc
mov
xchg
rcrb
ds
jg
push
loope
int
fldl
xchg
mov
dec
or
push
pop
jmp
mov
cmp
bound
add
ss
repnz
repnz
cmp
movsb
jmp
sbb
repz
lcall
jl
cmp
and
pop
and
mov
ljmp
or
imulb
xlat
faddp
or
and
int
mov
idiv
dec
lock
scas
push
sbb
or
pop
loop
sub
pop
push
add
dec
mov
mov
psllw
cwtl
push
lods
push
push
in
mov
cld
repz
sub
xchg
mov
ds
popf
or
in
push
inc
pushf
jg
shlb
sbb
mov
fld
sub
movsl
lock
cmp
data16
shlb
in
iret
pop
out
mov
jno
lret
stc
jns
ljmp
and
in
ljmp
int
push
into
mov
push
mov
add
xor
stos
mov
cmp
sbb
aam
jl
dec
hlt
aas
cmpsb
and
leave
push
jmp
fisttpl
add
adc
lods
pop
shl
sarl
mov
adc
scas
xor
outsb
adc
js
scas
xor
add
sbb
or
fucom
or
test
dec
push
scas
cwtl
jcxz,pn
adc
mov
les
xlat
pop
mov
cltd
lahf
add
aas
fs
cmp
rorl
mov
das
push
jo
jl
inc
mov
and
jnp
cmpsb
xor
mov
imul
jmp
or
call
lret
dec
dec
sub
inc
mov
mov
push
sar
pop
add
dec
imul
pop
and
xchg
sbb
pop
and
or
add
xchg
shr
negb
aas
stos
adc
test
dec
xchg
inc
xor
pusha
push
inc
loop
ror
shll
mov
sahf
sub
jecxz
or
fdivr
lds
add
adc
imulb
loop
jg
fildl
push
pop
push
xchg
ret
adc
jno
and
mov
fwait
xchg
sub
nop
cli
or
and
push
jge
xor
rcl
je
lret
pop
push
jns
call
fists
add
cs
add
adc
and
jbe
out
mov
imul
lret
adc
mov
vpsubd
mov
out
mov
cmpsl
xor
inc
jne
dec
jne
in
jp
pop
test
movsb
inc
cmp
dec
sbb
mov
or
dec
scas
inc
inc
fdivrl
add
shlb
dec
dec
cmpb
mov
xor
mov
push
ds
notl
stc
fsubrp
leave
icebp
inc
pop
int
sbbb
stc
xor
incl
int3
fsubrl
lock
mov
inc
xor
mov
imul
jb
mov
pop
ds
loop
lods
dec
mov
dec
cmp
mov
push
push
lods
xchg
mov
adc
sbb
ficoms
pop
arpl
popf
mov
imulb
jmp
test
pop
xor
lahf
mov
movsb
cli
enter
lcall
mov
pop
mul
in
fs
aam
sbb
add
sub
inc
test
jmp
andb
and
cmc
subb
pop
sbb
pop
popa
mov
lret
dec
cmp
pop
mov
mov
push
xchg
aaa
xor
jno
lret
inc
call
int3
sub
push
enter
es
imul
mov
sub
daa
push
es
shl
xchg
out
fimull
lds
xchg
les
xor
scas
fildll
data16
fs
push
jge
mov
cmp
jnp
xchg
out
inc
inc
mov
fwait
inc
hlt
aam
jge
lea
mov
xchg
xor
sbb
imul
dec
or
es
data16
push
and
inc
push
imul
sar
pop
in
mov
std
jge
or
into
dec
push
cmp
and
cli
pop
or
cld
xor
std
testb
repnz
xchg
xor
mov
cmp
test
jnp
and
xchg
sub
push
daa
cwtl
mov
push
lcall
es
and
inc
jne
add
and
movsl
pop
push
jno
xchg
inc
sub
push
frstor
or
push
in
mov
into
test
cwtl
jmp
xor
dec
and
pushf
inc
enter
xor
add
divl
test
rcr
ficompl
cmp
mov
adc
lret
shrb
pop
fwait
cmpsl
cmc
and
pop
add
dec
les
js
sub
cmp
and
fistps
jo
pop
fwait
lret
dec
add
rolb
sub
sbb
push
rolb
inc
xlat
iret
pushf
jecxz
pop
out
std
negl
push
outsl
sbb
ljmp
out
sbb
call
cmp
lret
repnz
pusha
cmpsl
push
enter
out
in
pop
inc
push
jge
pop
jo
cs
movsb
xorl
mov
add
add
daa
pop
jge
jbe
ret
loop
enter
push
pop
xor
enter
mov
iret
sub
imul
push
ret
pop
int
jmp
sahf
mov
adc
xor
cmp
sar
xchg
aas
cli
loop
adc
mov
xchg
jge
pop
pop
xor
pusha
mov
adc
xor
pop
scas
add
xor
inc
jns
std
xor
decb
sub
testb
mov
inc
loopne
and
add
lods
or
cmp
adc
std
cwtl
jno
jae
cmp
loopne
or
xor
ret
call
lret
out
adc
mov
cmpsb
push
adc
lretw
push
repnz
inc
das
sub
or
xchg
jnp
iret
sbb
scas
mov
dec
cwtl
push
mov
insb
inc
fs
push
out
out
and
xchg
repz
dec
cmc
and
mov
repz
cmp
mov
mov
inc
test
xor
fsubl
jb
sbb
mov
add
sbb
shll
test
or
pop
pop
pop
sbb
test
stos
notl
or
pop
shll
inc
push
jmp
lods
xorl
and
xchg
scas
xchg
dec
inc
cld
or
jne
jp
mov
or
hlt
or
enter
cmpsb
dec
cmp
sbb
in
out
out
xchg
cmpsl
aas
push
fs
in
stos
out
mov
mov
mov
add
xchg
mov
lret
adc
sbb
sbb
add
and
push
or
pop
mov
out
cmp
or
add
sahf
push
or
push
icebp
mov
dec
jl
mov
jne
loop
dec
inc
test
loope
gs
or
out
sbb
add
int
cmp
pusha
cwtl
int3
mov
inc
fmul
adc
adc
popa
push
push
cmp
ret
adc
xchg
and
push
cld
loop
push
int3
sti
ljmp
jp
aad
adc
sbb
mov
fsubr
mov
movsb
pop
clc
cmc
cwtl
push
scas
sub
dec
sbb
popf
sbb
push
fildll
or
or
repnz
dec
iret
imul
test
nop
cltd
add
fnstcw
jne
ret
ljmp
add
repz
jo
mov
andl
mov
test
stos
mov
jb
adc
enter
sub
or
pushf
sub
jno
imulb
push
cmp
jno
iret
push
pop
mov
icebp
push
ja
dec
lahf
das
pop
sub
mov
dec
stos
pusha
loopne
mov
aaa
add
loop
gs
idivb
adc
je
or
loope
inc
out
push
or
xchg
sbb
and
add
jo
push
jae
sub
add
sbbb
faddl
ljmp
cmp
adc
sbb
loop
inc
fimuls
imul
or
xchg
mov
hlt
sbb
stc
loop
jne
sahf
cmc
dec
sarl
test
loopne
and
xchg
push
sub
jge
es
mov
loope
jo
js
sbb
in
add
in
push
fwait
mov
scas
and
outsb
rorl
int
out
cmpsb
in
ljmp
lret
cmpsb
sbb
mov
push
dec
pusha
inc
cmp
dec
mov
mov
jp
or
sub
xchg
xchg
pop
sub
arpl
push
rcrb
or
lahf
lea
popf
lods
jbe
mov
loop
iret
mov
cmp
mov
cli
push
adc
adc
pop
pop
or
push
cmpsb
orl
out
push
cmc
pushf
sbb
xor
jo
xor
scas
push
mov
insl
loope
lahf
rcrl
or
scas
adc
sbb
xor
mov
addr16
mov
add
xor
or
mov
fadds
iret
filds
dec
jbe
cld
cwtl
dec
imul
xchg
out
mov
hlt
adc
jmp
clc
movsl
mov
aas
xchg
pop
jle
and
add
popa
imul
call
sti
in
je
or
push
mov
cmp
inc
jmp
in
nop
dec
iret
cmp
test
js
movsl
xchg
mov
cli
or
and
push
pop
outsb
lret
sbb
xchg
xchg
ficoms
sti
dec
jge
mov
mov
pop
jno
add
stos
lock
add
xchg
sub
inc
call
add
mov
shlb
enter
rcrl
push
fistpl
jg
cmpsb
inc
in
insl
pop
incl
or
jge
stos
adc
pop
arpl
in
and
add
sub
shrb
xor
pop
icebp
rcrb
loope
xchg
imul
xor
cmp
mov
cmpsb
xlat
cmp
cltd
adc
and
in
mov
test
mov
jle
aad
je
jecxz
jnp
popf
push
jmp
fsub
cmp
add
aaa
push
jecxz
jp
bound
clc
mov
shll
outsl
add
mov
ss
sbb
icebp
sbb
dec
mov
dec
mov
or
cmp
adc
andl
test
enter
addl
ss
dec
ds
rclb
adc
mov
xchg
imul
outsb
mov
jb
jmp
or
sub
iret
scas
movsb
iret
lahf
test
cmp
dec
add
fimuls
mov
sbb
loope
clc
cmp
pushf
xchg
xchg
fildll
jno
or
add
sahf
iret
dec
dec
jmp
adc
push
cs
xchg
int3
ficoms
fists
cmp
repz
and
pusha
imul
jnp
aad
je
xor
cli
adc
inc
rorb
into
sub
push
out
xor
mov
adc
aaa
dec
cmp
rcpps
cltd
test
xchg
or
loop
in
sbbl
cmc
dec
mov
cmp
out
bound
xor
inc
dec
cmp
add
mov
les
gs
fists
mov
jnp
or
aad
cmpsb
add
mov
cwtl
mov
xchg
sbb
and
lea
xchg
aas
cwtl
ljmp
in
sbb
lret
fs
repnz
xor
lcall
bound
test
inc
sbb
data16
lret
pop
test
fwait
lods
into
pop
adc
jbe
xlat
inc
sahf
scas
nop
mov
xor
sub
test
push
jae
inc
lahf
scas
dec
popf
jae
dec
and
inc
aaa
push
mov
in
sub
cmp
loope
sub
ljmp
pop
adc
cltd
pusha
ja
dec
sub
scas
fwait
movsl
out
scas
idivl
mov
aaa
push
adc
test
scas
lahf
push
test
cmpps
jo
out
xchg
jns
cmpsb
jbe
mov
xchg
cmp
sub
adc
dec
sbb
test
fneni(8087
in
mov
push
xchg
push
fstpl
repz
pop
ljmp
cltd
jle
inc
xor
in
pop
adc
push
enter
test
std
outsb
fucomp
loop
or
fnstsw
or
out
daa
inc
xchg
hlt
push
jl
push
mov
loopne
shr
loopne
test
cld
repz
outsb
adc
outsb
push
int
out
lret
sub
push
int3
dec
mov
pop
push
adc
mov
shll
aad
mov
xor
lods
mov
adc
lahf
inc
fnstsw
popf
or
adc
sti
in
sahf
idivb
nop
jae
jge
arpl
inc
and
inc
sub
test
inc
inc
shll
ficompl
jbe
adc
lock
test
mov
out
add
stos
imulb
push
outsl
std
mov
test
pop
addr16
int
dec
jns
insb
push
sti
adcl
popf
daa
scas
inc
adc
push
das
xchg
sub
xchg
or
enter
jmp
or
jb
inc
inc
xchg
pop
cmp
or
mov
pop
mov
sbb
pop
jo
orb
xor
je
ljmp
xor
nop
adc
js
add
lds
inc
sbbb
test
jmp
mov
add
test
loop
fcmovu
mov
sbb
es
mov
movsl
add
daa
je
mov
pop
sub
lret
pop
bound
daa
sub
pushf
mov
sbb
mov
jno
cmp
fiaddl
xlat
insl
jmp
jne
push
cmp
sbbl
mov
repnz
std
fdivrs
sbb
sbb
loop
mov
test
pop
inc
lret
push
jmp
push
call
and
dec
mov
sub
and
cmpsl
sbb
adc
jno
mov
jge
es
addr16
add
jl
mov
push
cli
nop
lock
and
subl
pop
shll
hlt
inc
push
mov
add
lea
divb
in
push
push
imul
stos
sub
xchg
loope
popl
add
mov
or
mov
adc
inc
lcall
mov
stos
test
sbb
xor
and
lock
inc
hlt
shl
dec
orl
sahf
clc
mov
arpl
add
mov
ret
scas
dec
ljmp
mov
adc
and
xchg
pusha
xchg
xor
mov
pop
arpl
push
mov
dec
daa
mov
dec
lret
pop
adc
sti
add
sbb
jnp
repnz
pop
stc
test
sti
mov
lea
and
call
pushl
outsl
aaa
es
mov
cmp
cmp
test
adc
sbb
pop
in
adc
enter
insb
lods
mov
and
cmpsl
dec
mov
repz
fwait
scas
int
jg
ret
sub
fadds
mov
rorb
sub
inc
and
mov
push
mov
adc
movsl
das
cs
or
jb
popf
scas
fcompl
mov
mov
mov
add
pop
addr16
mov
pop
cld
movsb
push
out
xchg
scas
bound
cmpsl
pop
xchg
repnz
jle
jg
shl
adc
fwait
dec
push
mov
jg
or
subb
rorl
pop
test
push
aaa
mov
iret
adcb
inc
sub
loop
inc
jno
adc
ffreep
ljmp
mov
add
jmp
hlt
jmp
dec
add
cmc
cltd
icebp
mov
cwtl
mov
sbb
sbb
or
mov
call
das
xor
shlb
fwait
mov
les
adc
cmp
insb
mov
push
jne
arpl
movsl
push
lea
imul
bound
inc
push
cwtl
movsl
sar
ss
pop
jns
xchg
aaa
test
sub
cmp
jbe
add
pop
sbb
jge
repnz
jbe
mov
clc
icebp
jo
loope
cmp
daa
cmpsb
clc
xchg
adc
fs
ss
jl
call
in
cld
popf
imul
fwait
loope
xor
jg
lods
adc
in
mov
repnz
loopne
sub
xchg
xor
aad
pop
xchg
clc
fldt
mov
adc
aam
loope
mov
stos
insb
and
fsubl
loop
mov
pop
jnp
es
cmp
neg
adc
repnz
mov
imul
push
push
aad
push
in
cmp
xorl
cli
mov
dec
outsl
into
das
jns
shl
rolb
cmp
mov
cmp
in
loop
in
inc
dec
sbb
rcr
adc
and
imul
xchg
dec
or
lret
mov
aaa
jno
inc
bound
push
jb
out
and
sub
push
xchg
mov
mov
xchg
mov
add
pop
sub
push
test
fsubrs
push
xchg
push
mov
xchg
sysret
jnp
fsubrs
out
cmp
icebp
jl
cmp
push
rolb
ds
std
sub
pop
xlat
cmc
insb
pop
jp
pop
cmp
sub
fdivs
adc
call
push
iret
and
fistpll
repz
aaa
adc
inc
adc
pop
fs
inc
jno
push
push
scas
js
xchg
mov
daa
or
out
mov
mov
cmp
pop
out
mov
push
push
jmp
cs
mov
insb
js
or
pop
test
sahf
fadd
sub
sub
inc
dec
push
rol
and
jne
test
xchg
or
or
mov
inc
scas
dec
jmp
lcall
cmp
and
jmp
jge
aad
pop
adc
pop
lahf
sbb
nop
sbb
movsb
fdivrp
mov
xchg
xor
push
lods
adc
or
mov
pop
jge
orl
jle
mull
pop
ljmp
ds
xorl
leave
dec
mov
inc
stos
xchg
aam
xor
subl
inc
popf
push
xchg
push
call
cld
mov
jecxz
xchg
pop
mov
cmp
and
loopne
cmpsl
cmp
mov
fstl
jae
dec
shll
fimuls
cmpsl
pop
sbb
addb
inc
jne
popf
jle
lods
subl
sahf
mov
sbb
in
lock
in
or
scas
push
xlat
icebp
xchg
dec
call
test
inc
push
sbb
pusha
xor
inc
mov
lret
add
cmp
mov
shll
pushf
out
mov
xlat
enter
xchg
aad
mov
push
lcall
xor
pop
daa
iret
shrb
dec
cmp
inc
aad
cmpsb
loopne
dec
push
fdivr
inc
enter
mov
in
test
sbb
fisttpll
lahf
loope
lahf
cmp
sahf
and
ljmp
mov
loop
daa
iret
in
mov
cmp
sub
xchg
call
insb
pop
jns
adc
xchg
je
sub
inc
xor
es
pusha
jnp
lcall
mov
push
cmp
push
inc
ja
inc
push
popf
mov
and
aad
ds
lret
sbb
fnstcw
mov
pop
xacquire
mov
ret
xlat
xor
icebp
jbe
aad
mov
andl
incl
lods
mov
xchg
sbb
cli
xor
jno
idivb
loope
insb
inc
pop
sbb
cmc
ret
shlb
xchg
mov
adc
cmp
fldenv
xor
and
jmp
stc
dec
or
loop
add
add
ss
nop
add
xchg
enter
inc
and
mov
xchg
clc
ret
push
lds
xor
out
jle
std
sbb
cli
add
mov
xchg
aam
insb
xchg
or
xor
mov
push
mov
dec
mov
jne
fisttpl
xchg
mov
es
xchg
outsl
mov
xchg
add
test
lea
pop
add
cs
mov
leave
jecxz
mov
xor
ljmp
jecxz
mov
mov
ds
outsb
mov
out
inc
mov
pop
push
cltd
jecxz
or
dec
push
sub
lcall
jns
test
int
test
pop
xchg
adc
lret
jns
out
shrb
cmpsl
jmp
ljmp
or
psubusb
mov
mov
inc
sbb
and
inc
imull
ja
lds
aaa
ss
or
sub
ljmp
adc
xchg
sub
aad
push
lock
sbb
xchg
popf
cmc
inc
lods
arpl
inc
aas
add
sub
jnp
xor
mov
outsb
pop
and
test
daa
scas
out
sub
divl
mov
dec
dec
xor
adc
lock
bound
jne
nop
jmp
or
dec
jmp
test
pop
popa
mov
xor
lock
sbb
add
sbb
jmp
in
sbb
inc
mov
shlb
cmp
dec
movsl
inc
outsl
and
in
ljmp
stos
jns
jno
dec
push
jno
shrl
sbb
lret
subb
mov
aad
sbb
int
repz
xlat
add
mov
scas
jp
es
daa
je
add
adc
lds
test
xchg
cmpsb
test
and
mov
cmp
add
inc
sbb
std
jae
dec
pop
aaa
mov
add
aam
mov
insb
xlat
jnp
aam
pop
jg
xor
stos
mov
and
mov
xchg
push
lods
and
aas
and
jmp
push
pop
pop
loope
mov
test
jge
mov
mov
icebp
fidivrl
xchg
vmovss
dec
inc
sbb
and
psubw
psraw
mov
stos
shr
adc
jae
in
sbb
push
gs
mov
out
inc
sysenter
or
mov
ja
sub
mov
ret
jp
mov
rol
pop
mov
dec
and
pop
push
ja
icebp
jns
add
fldt
sub
dec
inc
outsb
enter
subl
inc
xlat
rorl
and
test
adc
mov
push
and
iret
ret
in
xor
iret
movlps
and
jae
add
dec
gs
mov
sbb
int3
adc
jns
shrl
out
xchg
mov
pop
mov
popf
adcl
dec
rolw
mov
repz
cs
and
fildll
pop
bound
or
jg
inc
sbb
xchg
sbb
mov
stos
xchg
movl
ja
cld
idivl
test
push
nop
push
in
sbb
add
jno
xchg
loop
adc
cs
es
lret
xor
mov
pop
incb
pop
xor
add
iret
jno
mov
repz
cmpsb
and
dec
dec
jbe
sub
sub
fcoml
mov
cmc
inc
inc
test
adc
jns
sbb
out
fwait
rcrl
inc
mov
test
repz
inc
test
scas
jg
cmpsl
mov
ljmp
xchg
test
and
movsb
pop
enter
addr16
cltd
out
sub
lret
fisttps
lret
insb
call
mov
imul
adc
jbe
les
hlt
jne
cmp
test
cmp
gs
push
test
jmp
push
into
mov
sarl
fstps
roll
xlat
cmpl
pop
insl
mov
xor
cli
xor
ret
stos
pmovmskb
sub
and
std
mov
jns
jmp
sub
aaa
and
xchg
push
iret
fmull
call
xchg
mov
out
mov
int3
inc
movsl
dec
push
sbb
cmpsb
push
fidivl
xchg
ret
or
arpl
adc
and
les
push
ds
outsl
mov
mov
dec
pop
push
fbstp
rcrb
mov
fbld
rorb
pusha
pop
sub
popa
xchg
js
addr16
call
js
inc
lret
shrl
pusha
sbb
dec
cmp
cmpsb
push
cmp
sahf
dec
test
and
jo
sarb
add
leave
adc
scas
or
or
outsl
fst
xchg
flds
cltd
insb
mov
pusha
push
out
sbb
stos
imul
add
fs
and
repz
xchg
pop
rcrl
std
push
popf
push
dec
or
push
lock
or
call
sahf
das
aas
adc
push
cmp
fsubrs
xor
lock
mov
ret
sbb
lods
cmc
dec
ljmp
iret
pop
xchg
mov
mov
sbb
push
rorb
leave
js
enter
mov
mov
sbb
jo
sbb
inc
ss
jg
xchg
aas
ret
test
repnz
push
aad
call
iret
mov
fsub
mov
jp
dec
fsubl
daa
data16
adc
sub
iret
addl
push
jle
mov
dec
aas
dec
adc
sub
das
jno
xchg
adcb
pop
xchg
fldt
xor
ret
fldt
adc
mov
popa
mov
mov
cmpsl
adc
and
mov
lcall
or
xor
repnz
cmp
xchg
enter
sbb
sahf
or
push
ds
inc
cld
dec
loop
je
je
je
popf
outsl
ret
idiv
mulb
pushf
lock
clc
jg
sbb
xchg
ret
pop
pop
sbb
lods
int
inc
mov
lcall
inc
call
int
push
lock
data16
loop
dec
pop
lods
jnp
sbb
pop
movsb
cmp
mov
andb
aam
and
mov
dec
mov
jge
movsb
pop
sub
mov
ja
mov
loopne
mov
adc
jmp
in
pop
push
xchg
cwtl
fcoms
lret
int3
insb
adc
push
add
hlt
pop
andb
inc
mov
pop
adc
mov
jo
jno
jp
imul
fwait
pop
mov
add
out
add
push
xor
ja
movl
daa
insl
js
sub
jae
mov
loope
sub
icebp
pop
or
rorb
ljmp
das
push
and
arpl
stc
stc
xlat
cs
jns
sbb
in
or
mov
out
xchg
mov
fldt
jg
and
dec
flds
jb
adc
mov
inc
pushf
ret
push
mov
andnps
stos
mov
das
movsb
pusha
cmp
mov
cmpsb
push
ret
push
push
out
dec
test
sbb
push
ret
mov
xchg
icebp
or
mov
cmpsb
or
lret
lea
shlb
cmp
call
ret
mov
fsubl
sub
aad
mov
jb
sbb
dec
mov
push
mov
test
ret
inc
out
sbb
jo
pusha
mov
enter
pop
js
fistpll
notb
mov
in
sbbl
xor
dec
int
inc
push
jg
add
stc
xor
push
shl
add
jle
xchg
inc
dec
mov
jne
cmpsb
fwait
mov
push
adc
mov
lods
xchg
ljmp
cld
jp
lret
push
std
or
repz
pushl
aam
cli
imul
outsb
and
je
fistl
js
out
mov
scas
shrl
mov
or
and
inc
dec
mov
xor
pop
icebp
dec
cmpsl
push
jno
push
adc
or
push
lock
push
aam
mov
int3
add
lret
push
push
and
in
xor
dec
cld
xchg
pushf
mov
aam
sbb
dec
test
sub
jle
mov
mov
mov
xchg
or
fwait
mov
test
fldl
xchg
sbb
cmp
shrl
sub
jno
dec
dec
mov
inc
icebp
ret
cmpsl
fcoml
data16
mov
lods
std
stc
xchg
orb
aas
pop
lcall
dec
movb
daa
adc
cmp
xor
cli
out
xchg
mov
xchg
mov
jnp
and
icebp
sbb
shll
repz
mov
leave
js
cmpsb
mov
fidivrs
cmpsl
and
sub
jge
cmp
shrl
xchg
mov
cmp
cmc
push
into
popf
xor
daa
cld
dec
push
adc
push
sbb
cld
adc
and
xchg
stc
xchg
cs
rcrl
inc
fidivrl
call
popa
xchg
nop
jg
imul
xchg
ljmp
outsb
imul
jb
pop
out
xchg
xorl
int3
jo
inc
cmc
add
xchg
pop
cli
out
pop
ret
les
inc
mov
mov
push
lahf
mov
and
mov
stos
mov
aas
sub
mov
scas
loopne
cli
test
ljmp
lahf
stc
jo
mov
xchg
push
sbb
cmpsb
mov
pushw
inc
mov
sahf
dec
push
movsb
out
stos
cs
mov
ss
add
xchg
hlt
roll
nop
xor
out
sub
int3
mov
and
cs
mov
cwtl
int
in
inc
cmpsl
lods
adc
push
aad
push
mov
sti
int3
pop
es
insl
addr16
add
in
gs
mov
test
xchg
rorl
imul
movsb
test
addr16
rcr
lods
lcall
sub
or
cmp
inc
fcompl
lods
rorb
in
movsl
dec
push
fdivr
xor
addl
arpl
repnz
sbb
adc
adc
jecxz
in
mov
inc
jmp
sbb
divl
repz
outsb
pop
jle
mov
movsb
in
pop
cmp
cmpsb
push
clc
repnz
test
int3
push
cmpsl
xchg
popf
incb
sub
pop
xchg
pop
hlt
scas
aam
dec
inc
lcall
xchg
add
or
test
data16
call
test
sub
mov
scas
jmp
dec
ss
or
jo
cwtl
aad
mov
push
cld
rcrb
pop
jb
sub
flds
es
icebp
pop
xor
sub
xchg
enter
lds
nop
ss
push
bound
jmp
arpl
cmp
lahf
add
lock
ds
sub
call
daa
xchg
out
mov
test
or
dec
mov
pop
dec
push
adc
testb
and
add
rorb
xchg
jmp
mov
imul
ficomps
pop
dec
xor
mov
lea
mov
add
jl
lods
das
xchg
in
popf
out
lds
les
sahf
adc
sub
ja
xor
jb
imul
out
shr
fmuls
fdivr
cmc
addl
mov
add
mov
mov
dec
dec
shll
call
aad
movb
je
pushf
inc
aad
rcll
mov
cmp
je
stos
mov
jmp
inc
fcomi
adc
lea
dec
jno
ret
xchg
ss
jae
sbb
lcall
repnz
lea
cmpsb
mov
popf
sahf
or
adc
mov
and
pandn
je
lods
dec
into
cmp
rcrb
pop
or
pop
or
inc
push
in
inc
lret
inc
adc
add
leave
lcall
fsubrp
add
jo
sub
mov
lock
xor
xchg
xchg
pop
add
arpl
pop
les
rorl
aad
mov
pop
imul
ficompl
stos
adc
cmp
fdivrs
cltd
mov
lock
arpl
scas
pop
cs
and
add
mov
sahf
xchg
adc
xlat
inc
push
int
cmp
mov
sbb
xchg
and
imul
sub
repz
js
jge
pop
sahf
jns
cli
ja
les
xchg
scas
push
inc
mov
mov
add
cmovle
and
inc
mov
das
xor
sub
lcall
call
shrl
pop
outsl
insb
mov
fstpt
ret
dec
xlat
sbb
cs
popa
inc
pop
jp
pusha
fbstp
test
repnz
jmp
arpl
fildl
mov
sub
and
movl
stos
mov
sahf
lea
sarl
das
idivl
popf
push
add
scas
push
call
cmpsl
or
cld
and
fnstsw
mov
shlb
sbbb
rcrl
movswl
cltd
pop
mov
mov
test
fwait
pop
sub
xchg
cmpsl
daa
pop
insl
loopne
in
subl
aaa
sub
push
cmpsl
jns
fildll
into
inc
mov
adc
sbb
int
outsl
xor
cmp
add
mov
inc
push
jl
jge
iret
or
sar
dec
mov
insl
xchg
add
jecxz
jecxz
shrb
mov
push
stc
loopne
xor
mov
jo
lods
push
fs
or
push
hlt
cltd
inc
push
bound
jg
in
push
lcall
adc
in
lods
xchg
adc
aas
cld
int
dec
xchg
aad
or
call
push
mov
gs
mov
xor
mov
out
lcall
adc
inc
sbb
jne
push
inc
lock
andb
sbb
popf
stc
mov
sub
stos
fdivl
adc
fdivrl
rcrl
call
pop
mov
lds
aas
push
jle,pn
mov
loope
pusha
push
dec
es
jp
jo
mul
sahf
cmpsl
scas
bound
daa
repnz
test
adc
pop
push
xor
jl
ss
cmpsb
adc
in
dec
fs
mov
add
and
add
rcl
sbb
dec
push
aas
sbb
push
cmp
sub
xchg
lock
sub
adcl
ss
dec
shll
push
test
mov
in
mov
dec
rcrl
stos
jae
cmpsl
jne
xchg
pushf
adc
in
cmp
movsl
sbb
data16
mov
push
sub
xchg
aas
inc
movsb
outsl
adc
jle
add
mov
push
cmpb
ja
mov
stc
ljmp
iret
mov
orl
add
out
push
shll
mov
orb
call
rorl
sbb
sbb
xor
xor
pop
sbb
ljmp
test
leave
xor
imul
lds
imul
fs
lods
adc
adc
aad
xchg
mov
lds
ret
xor
dec
fsubs
aam
std
scas
add
cli
xchg
mov
xor
or
roll
iret
ret
test
or
jo
outsb
push
adc
jnp
stos
dec
pop
sub
and
ret
pop
cwtl
movsb
mov
imul
shll
xchg
mov
mov
add
in
mov
gs
in
insb
adc
outsb
sub
aad
jno
outsl
jb
shr
nop
jbe
ja
sti
pop
or
mov
loope
jb
adc
add
inc
xor
push
popf
jae
es
sub
adc
sti
sbb
rol
aam
js
ret
test
clc
adc
pop
mov
std
push
push
mov
jecxz
pop
pop
xor
lea
sbb
mov
ret
test
in
ja
idivl
push
mov
in
incl
and
lahf
push
scas
dec
pop
mov
fsubr
add
and
adc
inc
addb
push
or
sub
je
cmp
popf
xchg
cwtl
lret
test
out
sbb
jae
notl
add
push
sub
call
cmp
adc
sbb
and
pop
dec
xor
xchg
mov
jbe
inc
cmp
pop
popf
dec
aaa
nop
mov
dec
repnz
and
sub
fidivrl
adc
jecxz
movsl
cli
jl
dec
inc
stos
cmp
fwait
loope
mov
aas
jge
mov
outsl
jge
aaa
cmpsl
dec
inc
jg
dec
lret
insb
dec
les
fists
xchg
nop
loop
add
mov
pop
and
icebp
pop
jbe
pusha
outsl
outsb
sti
xor
sub
xchg
aaa
sub
les
add
dec
out
lds
scas
xchg
out
adc
cmp
xor
lahf
mov
cmpsb
repz
out
xor
push
hlt
fstl
xchg
pop
xor
inc
lods
sbb
xchg
shrl
leave
mov
xlat
mov
mov
inc
xchg
mov
mov
push
mov
cmp
xchg
and
xorl
loope,pn
nop
inc
mov
push
dec
loopne
lret
negb
in
jb
jecxz
and
mov
aaa
xor
add
xchg
arpl
js
ss
jo
popf
lock
sti
jl
aam
insl
cltd
and
mov
pop
ja
out
ret
sbb
shll
in
jmp
xchg
dec
cmpsl
mov
lcall
ja
les
aaa
or
jg
mov
push
sti
out
js
adc
push
pop
jmp
popa
mov
sub
es
ret
call
adc
enter
mov
xchg
mov
nop
es
inc
xor
push
dec
mul
pop
jecxz
lods
sti
xlat
dec
fs
sbb
pop
insb
enter
sub
js
push
sti
mov
aaa
aam
push
mov
lds
mov
push
shll
popf
sbb
mov
cli
sbb
cmpl
xchg
in
rolb
dec
out
cmp
cli
xchg
fcoms
sub
pop
push
sbb
xchg
pop
es
inc
mov
mov
ficomps
out
icebp
pop
or
dec
jnp
lds
push
cmp
cld
stmxcsr
mov
sbbb
rcll
movsb
pusha
ja
testl
push
sbb
leave
dec
sbb
ret
fwait
cmp
arpl
mov
lret
lea
inc
mov
std
dec
xor
imul
or
mov
inc
jp
xor
jb
pop
jl
push
test
push
push
clc
mov
cli
mov
pop
inc
test
push
in
push
add
mov
add
jnp
movsb
mov
and
mov
jno
pop
in
pop
add
sub
dec
and
sub
mov
call
sub
loop
adc
fmul
jg
mov
mov
and
int
inc
roll
adc
and
xchg
fwait
xor
xor
je
lds
adcb
sti
addl
sti
add
or
mov
or
cmc
sub
lea
movsl
jb
arpl
clc
xchg
icebp
add
mov
xchg
repnz
mov
ficoml
adc
xchg
stc
cmp
js
jns
sbb
int
cmp
mov
xorl
enter
pop
stos
dec
inc
les
sub
sub
subl
push
pop
in
dec
ret
shll
or
int3
das
pop
sub
mov
repz
add
jp
mov
cmpsl
jns
add
xchg
pushf
lea
js
mov
pop
xchg
aas
pop
dec
mov
mov
stos
js
xchg
out
iret
insl
es
jne
jecxz
push
lock
mov
lcall
pushf
enter
pop
sbb
add
ret
call
sub
mov
imul
jmp
ret
movsb
rorb
dec
xchg
sub
sbbb
or
clc
popf
cmpsb
inc
out
dec
sub
fimuls
inc
mov
mov
jecxz
sti
cmp
cmp
sti
jbe
inc
stc
pop
push
imul
adc
ret
fisubrl
mov
test
lret
cwtl
mov
aam
push
pop
in
mov
lock
dec
push
inc
es
cmp
pop
sub
pusha
stc
dec
leave
dec
adc
mov
pushf
stc
push
cltd
icebp
mov
mov
jmp
mov
mov
pop
ja
ja
mov
mov
xchg
enter
or
adc
jmp
jne
arpl
insb
stos
xor
nop
hlt
rorl
int
mov
popa
gs
inc
stc
sbb
sbb
xlat
mov
mov
xchg
jge
stos
dec
add
xlat
xor
push
pop
in
pop
xchg
lahf
and
inc
push
inc
fldcw
sub
jo
mov
or
xor
iret
jb
sub
pop
inc
pop
sbb
mov
sbb
adc
and
push
sbb
cltd
fimuls
mov
xor
or
es
shl
inc
mov
dec
xor
push
cmp
ret
xor
pop
add
xor
ss
enter
or
ror
int
adc
cltd
aaa
push
adc
sbb
fstpl
inc
ret
in
xor
or
fnsave
clc
repz
sarb
aaa
xchg
xchg
jbe
and
fists
iret
xor
loop
aad
mov
cs
mov
xchg
pusha
and
add
xor
adc
and
lds
adc
lock
add
cmpsb
sbb
sbb
cmc
jns
mov
mov
push
sbb
shrb
iret
cltd
adc
fs
sub
adc
addr16
dec
sub
xor
stos
jbe
out
push
lret
push
arpl
sarl
mov
mov
cmpsl
inc
iret
and
mov
inc
pop
adc
adc
aas
cmpsb
sbb
push
mov
adc
loop
aaa
mov
dec
fidivs
push
loopne
cmp
int
jg
jnp
mov
xchg
adc
je
cli
add
mov
xor
push
nop
pushf
sub
sub
mov
mov
sarb
sbb
lods
rolb
cld
fisttpl
jecxz
add
add
jne
fldcw
cmp
ja
stc
sbb
popf
xchg
fstps
cltd
adc
cmp
loopne
test
stos
inc
stos
es
sarb
and
int3
fld
add
lcall
imul
arpl
je
pop
scas
movsl
fwait
addr16
jbe
test
pusha
lret
cli
fld1
jno
cmpsb
sbb
push
push
rclb
jne
aas
mov
mov
fs
in
add
sbb
inc
test
push
std
mul
sbb
xor
or
out
cli
andb
and
cmp
sub
xor
lcall
lock
shll
dec
mov
or
mov
pushf
mov
divb
cmpsb
dec
int3
dec
scas
dec
dec
dec
out
push
cltd
pop
mov
into
mov
fcmovu
push
push
rolb
cli
sub
mov
clc
mov
cmc
data16
mov
cld
hlt
xchg
jle
xchg
inc
cmpsl
cmp
lcall
and
pop
pop
jl
ss
mov
push
ret
dec
ds
stos
aas
les
loope
or
loop
mov
testb
cmpsl
jbe
dec
jp
shrl
push
cmp
mov
mov
divb
mov
or
mov
fnstsw
dec
sbb
bound
nop
rclb
jmp
mov
mov
lds
rorl
imul
push
lcall
mov
flds
cmp
mov
cmp
xchg
das
mov
movsb
push
add
repnz
aaa
dec
cltd
sbb
sbb
mov
popa
int3
push
xor
mov
dec
push
jge
xor
sbb
shll
cwtl
push
sbb
scas
pop
push
lret
fcompl
mov
xlat
cmp
sbb
jnp
add
fwait
cltd
mov
outsl
jge
ljmp
xor
jnp
xchg
roll
ss
sub
out
inc
inc
push
xchg
mov
test
and
insl
outsl
je
cmp
push
jne
lret
popf
out
enter
add
mov
sub
aad
mov
pop
shlb
sub
xor
pop
icebp
lahf
nopl
sbb
fisttps
mov
ficoms
push
sub
sbb
jo
enter
rcrl
mov
movsb
insb
sub
rcll
sub
ljmp
pop
lods
pop
adc
pop
mov
sbb
dec
dec
mov
xchg
mov
jb
cmp
xchg
sti
cmp
das
xlat
adc
sbb
out
test
leave
xchg
imul
pop
mov
jns
fmull
clc
repnz
push
mov
or
arpl
jmp
or
xchg
xor
fimull
fwait
pop
ss
dec
repz
pop
fldl
fwait
pushf
xlat
arpl
ss
dec
xor
and
inc
mov
push
pop
scas
and
dec
xchg
hlt
mov
inc
sub
leave
ret
scas
fists
xlat
in
fsubp
push
mov
add
cwtl
into
cmc
js
sahf
stos
in
addb
sub
sbb
push
movsb
adc
jl
dec
and
test
mov
sbb
jno
dec
inc
pop
rcrl
subb
insl
fs
insb
vaddpd
mov
mov
insb
ss
jns
sbb
adc
adc
mov
out
enter
add
test
fstps
mov
aam
nop
adc
pushf
int
cli
push
outsl
ret
outsb
pop
pop
xor
dec
inc
shr
in
jbe
pop
inc
xchg
add
scas
lods
and
cmpsb
ds
aam
xchg
es
push
add
insl
cmp
fldl
inc
or
add
in
dec
scas
mov
jmp
enter
push
call
mov
and
or
lcall
mov
aad
push
lods
hlt
lods
lret
cld
insl
inc
cmpsb
lahf
cmp
loop
xor
mov
mov
mov
lahf
mov
ss
stc
mov
shrl
mov
mov
test
sti
out
or
call
push
mov
out
cwtl
cwtl
push
mov
lock
and
mov
hlt
scas
imul
cmp
push
push
comiss
mov
inc
pop
jmp
and
fisubrs
aas
js
aaa
js
sbb
lds
xor
fcmovu
mov
xchg
pop
filds
xchg
insl
pop
fwait
cmp
add
xor
fmull
data16
mov
lea
inc
inc
ljmp
lods
inc
mov
jp
xor
mov
cmp
and
push
lods
mov
lcall
out
fsts
adc
sub
sbb
ljmp
test
test
pop
push
hlt
rol
push
mov
xor
data16
mov
test
stc
aad
xchg
ss
adc
sbb
aas
adc
dec
push
ds
jno
mov
vsubsd
adc
sarb
ds
cltd
mov
es
ud2
fsts
mov
adc
sahf
lods
mov
or
bnd
cltd
daa
nop
jmp
or
add
xchg
cmp
sbb
lea
rclb
cmpl
pop
mov
outsb
lock
add
in
pop
cmp
fwait
repz
test
cmp
or
jmp
cmpsl
jge
test
or
scas
test
out
sub
jecxz
jbe
inc
mov
cmp
push
std
cld
sub
out
sbb
je
jp
jns
aaa
jnp
subb
dec
dec
xchg
ret
fadd
mov
pop
int
vpshufd
sbb
mov
sub
aaa
cmp
popf
adc
jo
imul
fwait
mov
lcall
mov
or
ljmp
jl
adc
fildl
inc
loop
mov
stos
push
cmp
movsl
cmpsl
cmp
pop
ss
mull
ljmp
or
cmpsl
add
jp
xchg
push
push
rcrl
lock
xchg
sbb
in
or
mov
js
test
aaa
push
jecxz
jp
add
pop
fmulp
in
dec
repnz
xor
sub
add
adcl
push
xchg
arpl
or
movsl
jg
add
adc
imul
jecxz
adc
xchg
das
cwtl
jl
pop
ficoms
add
inc
jmp
jge
mov
sub
jp
ficomps
mov
sub
adc
inc
xor
scas
xchg
imul
into
xchg
lfs
jno
dec
sub
pop
lahf
cli
lods
dec
push
shr
add
icebp
vpmacsdd
cmp
int3
fst
fsubrs
loop
dec
xor
sahf
ss
adc
jno
mov
jmp
fnop
ljmp
mov
jge
cmpsl
mov
xchg
mov
imull
aam
das
jp
aam
xchg
int
int3
adc
out
idiv
aaa
push
xchg
sub
fnstcw
cmp
mov
incl
sub
insl
hlt
cltd
les
and
jge
push
and
nop
scas
sbb
mov
in
fistpll
enter
out
cwtl
int3
mov
outsb
ficoms
bound
jg
mov
arpl
pusha
dec
inc
mov
dec
mov
scas
cmp
xchg
popf
jae
test
lret
fisubs
out
sbb
cld
cmp
cltd
fstps
jns
sub
pop
inc
mov
fs
push
or
std
inc
jmp
rorl
add
cmpsb
push
adc
stos
sub
mov
and
pushf
sti
inc
dec
out
leave
sti
mov
jae
and
nop
nop
xor
push
mov
lock
scas
adc
pop
sub
jne
jmp
cwtl
test
cmpsl
xor
popf
sub
outsl
bound
mov
stos
pusha
pop
scas
cmpsb
int3
lods
jmp
lahf
mov
test
outsl
and
mov
scas
enter
pop
adc
scas
mov
or
imul
adc
arpl
stos
dec
pop
outsb
sub
push
movsl
negl
xchg
insl
fildll
aaa
add
scas
pop
sub
sbb
add
mov
add
stc
fists
push
gs
insb
cmp
xlat
loop
lret
jbe
std
pushf
mov
in
jmp
movsb
mov
and
cmp
push
cmp
fwait
dec
andl
push
out
mov
dec
dec
into
outsb
loop
call
lea
sub
dec
sbb
sbb
dec
mov
sub
or
roll
xchg
daa
aam
loop
and
sub
xchg
dec
in
ss
outsl
iret
out
jmp
xlat
adc
and
dec
sub
or
add
popa
bound
int
es
sbb
imul
pop
mov
add
or
and
jecxz
fmull
add
mov
icebp
ss
add
add
std
sbb
std
movsb
rcl
mov
xchg
cmp
mov
and
jo
dec
sahf
rorl
cwtl
mov
cwtl
sbb
sub
out
mov
stos
add
adc
roll
jns
aas
stos
pop
jg
and
push
inc
and
mov
mov
loop
mov
mov
cmc
pop
mov
test
and
mov
push
and
pop
xlat
or
xlat
mov
sub
testb
and
es
sub
leave
mov
push
or
dec
sti
ror
jle
aas
dec
cmp
dec
sbb
push
aam
or
xor
shrl
inc
in
jo
mov
pushl
mov
mov
sahf
bound
pop
aaa
and
ret
sub
imul
mov
inc
ds
test
cs
jb
sub
insb
aas
mov
movsl
mov
xor
push
ds
xor
cmp
sub
push
adc
dec
cmp
lcall
insl
aas
icebp
pavgb
dec
pop
sbb
pop
push
xchg
jle
ffreep
or
fs
cmp
mov
sbb
xor
push
mov
shl
mov
pop
stc
cmp
mov
push
xchg
pop
mov
xor
cmp
call
mov
jbe
mov
pop
jne
int3
les
push
jp
xor
dec
push
mov
lods
out
pop
stos
pop
or
sahf
std
pop
pop
add
lock
inc
pop
out
mov
fidivrl
popa
and
pop
lods
push
iret
fildll
dec
or
loope
pop
and
jno
mov
in
insb
pusha
dec
outsb
dec
mov
jbe
mov
push
neg
lock
leave
mov
jne
xchg
lcall
movsb
adc
cwtl
sub
adc
mov
fnstcw
xchg
ljmp
aam
cmp
push
or
mov
addr16
jmp
inc
mov
jne
movsl
pop
pop
mov
shrb
cs
jo
dec
jl
mov
lods
scas
mov
aaa
xchg
cmc
push
lcall
sub
data16
sbb
and
fidivs
mov
add
insl
aas
jle
jmp
aas
push
adc
lahf
cltd
xchg
pop
mov
mov
sub
lret
dec
imul
in
xchg
data16
les
inc
inc
push
mov
push
sub
aam
mov
scas
pop
push
add
jl
pop
lahf
cmp
xchg
sbb
and
bnd
scas
sbb
adc
mov
loope
xor
sbb
mov
fldcw
cmp
or
cwtl
movsl
hlt
ret
sub
or
xchg
jmp
cmovge
sub
add
cltd
out
ljmp
ficomps
inc
icebp
inc
sub
adc
adc
inc
insl
mov
pop
decb
pop
push
adc
sti
mov
pop
jbe
inc
mov
icebp
sbb
pop
imul
fsubrs
push
in
push
dec
cmp
jmp
pop
dec
cmpsb
ficompl
mov
inc
arpl
dec
fdivl
mov
hlt
lock
pop
mov
sbb
or
or
xlat
test
pop
int3
ret
xchg
clc
pop
mov
jo
repnz
inc
or
dec
push
mov
pop
fiaddl
push
sbb
call
sub
xchg
mov
mov
and
xchg
inc
dec
jae
out
xchg
mov
cmpsb
adcb
xchg
call
dec
add
addr16
push
bswap
aaa
xchg
cmp
xorl
push
out
daa
in
mov
pop
rcll
push
xchg
and
mov
or
sub
inc
int
xchg
clc
or
bound
data16
adc
pop
fmull
sbb
push
jmp
pop
sahf
cmpsb
xchg
call
cmpsl
iret
nop
fisubs
int
mov
mov
lahf
xchg
pop
or
fld
cli
mov
add
xor
out
xchg
xor
pop
sub
jno
pusha
xor
scas
ja
js
inc
inc
adc
jecxz
and
aaa
mov
into
sbb
fdivl
icebp
jl
cmp
jmp
cmp
mov
jno
xor
xor
js
sbb
fisubl
std
cltd
jb
add
dec
out
xor
pusha
inc
repz
repz
pop
test
mov
sti
mov
fbld
call
jns
push
adc
std
lds
pop
mov
cmp
dec
jecxz
fsubl
lods
arpl
ljmp
sub
adc
sbb
xor
pop
mov
outsb
stc
cmp
fisttpl
sbb
mov
jb
adc
jecxz
imul
jmp
mov
test
rcrl
mov
imul
or
in
inc
cltd
test
pop
jae
pop
jge
mov
sti
xchg
jae
lods
rcl
shll
out
ss
mov
cld
bnd
je
push
lock
xchg
arpl
cltd
mov
push
push
mov
push
ds
mov
adc
add
imul
dec
or
add
cli
fdivrs
xor
mov
nop
add
mov
dec
mov
pop
ret
les
jae
xchg
subb
cmp
fsubrl
cmp
add
adc
add
xchg
out
adc
mov
das
cld
nop
rorb
push
xor
mov
test
dec
out
out
stos
dec
dec
lret
sbb
xchg
call
int3
cwtl
push
adc
fnstcw
dec
ret
add
dec
pop
rol
mov
add
ljmp
lcall
jg
fs
clc
repz
push
jo
imul
cmp
push
cmpsl
xchg
cmpsb
adc
mov
xlat
bound
jp
clc
sub
scas
loop
mov
jo
lret
push
xor
stos
in
std
out
lods
in
inc
ds
add
mov
cs
lods
iret
rcl
shlb
add
or
inc
lahf
ljmp
xchg
jno
hlt
push
push
mov
outsb
mov
dec
mov
jle
jbe
push
jecxz
pop
sbb
dec
iret
push
dec
cli
jbe
stc
mov
pop
mov
push
mov
aas
or
xchg
je
push
pop
pop
bound
mov
out
icebp
and
mov
hlt
jl
xchg
lahf
int
mov
es
lock
rolb
ds
ds
and
bound
xchg
test
mov
mov
repnz
dec
push
sbb
enter
push
ljmp
ret
push
sbb
xor
xchg
stos
ja
subb
int
push
test
movsb
add
push
popa
nop
lea
dec
ja
pop
xor
outsl
and
dec
mov
test
inc
in
in
movsb
loop
adc
fsubrl
cli
mov
scas
add
outsb
movsl
sahf
pop
cmp
mov
push
fldt
sub
adc
fwait
mov
and
xchg
xchg
test
adc
in
pop
cli
inc
mov
cmp
out
loopne
sti
ds
outsl
imul
jmp
sti
mov
enter
adc
push
sbb
call
gs
xchg
and
xlat
sub
cmc
movsl
cwtl
gs
sbb
fstps
xor
or
filds
fisttpll
xor
lods
mov
and
das
pop
push
sbb
insl
ds
push
xor
daa
test
dec
xlat
hlt
stos
insb
or
pop
jle
and
bnd
add
aam
stos
mov
in
mov
inc
out
je
sub
in
pop
cmp
ret
fsubr
stos
add
loopne
jg
mov
jp
shll
adc
pop
cltd
mov
in
jnp
pushf
loopne
stos
mov
jns,pn
cmp
mov
mov
mov
add
lods
cmp
js
jg
sbb
push
adc
fdivp
in
imul
sub
imul
mov
jo
in
in
pop
add
mov
mov
fwait
sbb
or
lock
jl
or
aam
int3
jg
pop
xchg
push
dec
xor
ja
pop
fiadds
add
or
xchg
stc
cmp
sub
cmp
pop
fs
pop
cmpb
and
movsb
inc
sbb
loop
sbb
cmp
mov
fucomi
nop
cltd
cmp
push
out
inc
xchg
adc
jo
fistps
jmp
inc
je
arpl
push
or
gs
repz
inc
xchg
cli
andl
sarl
xchg
sbb
cmpsb
push
in
sbb
shl
aad
sarl
or
popa
jnp
dec
lods
fcoml
mov
movsl
jno
rcrl
xchg
jge
test
shll
inc
fsubrl
fs
or
xlat
int
sbb
pushf
lret
xor
scas
stc
lock
xchg
mov
ja
lcall
lcall
popf
mov
pop
fdivr
adc
jae
and
sbb
cmp
pop
xor
xchg
sbb
into
inc
push
add
sbb
jmp
clc
add
std
sti
les
inc
push
cmpsl
test
push
pop
imul
icebp
lcall
out
in
imul
add
xchg
out
pop
mov
fcoms
jp
sub
cmp
mov
incb
and
jbe
loope
or
mov
adc
lahf
mov
int3
out
aad
inc
mov
xchg
xchg
popa
data16
insb
cmc
call
call
aas
mov
imul
sub
inc
jbe
mov
jbe
mov
cmp
jbe
mov
xchg
ss
lock
rorl
addl
aam
sbb
inc
add
jno
pop
jecxz
out
negb
rclb
sbb
rorb
fsubs
out
data16
or
int
icebp
push
mov
sbb
imul
sarl
clc
or
xor
cmpsl
in
dec
scas
jae
nop
cltd
mov
js
loopne
sub
jle
shr
scas
out
adcb
cmp
xchg
mul
xchg
dec
sbb
jp
ss
cwtl
sbb
fildl
int
lret
add
xor
push
addb
inc
xor
mov
jg
ja
popf
or
test
repnz
mov
repz
push
dec
dec
in
xchg
inc
and
std
das
ss
mov
loopne
mov
mov
add
repz
fldt
test
adc
mov
jge
jo
and
lds
out
fwait
loope
mov
cmp
imul
xor
xlat
mov
add
dec
fcmovbe
cmpb
xchg
and
xchg
mov
repnz
aam
xchg
lcall
sbb
adc
aaa
adc
in
aam
inc
call
and
es
arpl
loope,pn
add
int3
and
push
xchg
aad
push
add
push
pop
push
sbb
adc
jmp
mov
aam
cs
or
dec
xor
mov
mov
shlb
pop
inc
mov
mov
xchg
inc
mov
mov
dec
das
sub
addb
je
sub
mov
mov
aad
nop
out
xor
stos
fidivrl
mov
test
scas
lret
mov
mov
push
loopne
inc
sbb
std
and
add
ljmp
push
xor
test
daa
adc
xchg
out
cmpl
jae
mov
out
fimull
jmp
sub
adc
or
jecxz
cmp
and
mov
or
sahf
mov
xor
sbb
xchg
xchg
xchg
nop
cmp
cmp
int
test
or
and
push
jecxz
inc
inc
sbb
imul
xchg
push
in
lock
int
push
les
dec
aad
in
cmpsl
xchg
sbb
push
out
jecxz
xchg
and
sti
mov
push
addr16
outsb
and
sahf
push
sub
repz
outsl
mov
and
clc
stos
pushf
xchg
loop
mov
xchg
mov
sti
pop
sub
mov
add
icebp
rorl
push
xchg
int3
cmp
inc
clc
pop
pusha
dec
sbb
xor
aas
lret
out
in
cmp
xchg
pop
jge
add
xchg
fadd
movsl
jo
add
fdivs
or
lds
xchg
in
jo
add
jmp
sub
test
movsl
sbb
xor
inc
aaa
cmp
pop
mov
shrl
jp
daa
adc
hlt
and
mov
inc
scas
adc
mov
jb
add
inc
adc
int3
movl
mov
jae
adc
push
test
cwtl
lds
fwait
outsb
sbb
xchg
mov
push
pop
cmp
inc
jl
pusha
cmpsl
sbb
daa
xchg
cmpsb
xor
sbb
mov
sbb
cmp
pop
mov
in
jne
lods
std
pop
push
fs
jo
sub
mov
popa
sub
push
pusha
sbb
add
push
out
movsl
movsl
call
fidivs
jae
orl
rcrb
xchg
rcll
js
out
xchg
jge
mov
xor
adc
mov
cmpb
push
or
add
add
sbb
dec
nop
mulb
xor
pop
cld
xchg
sub
jmp
repz
xchg
fisubl
xchg
stc
dec
aas
bnd
inc
mov
in
out
and
aaa
dec
xor
sti
pop
sub
fnsave
push
sbb
sbb
push
pop
fmull
ret
adc
sub
mov
xchg
repnz
fsts
adcl
inc
je
mov
jp
mov
xor
pop
loopne
xchg
xchg
cs
leave
xchg
and
and
in
jb
ret
mov
cmp
mov
xchg
xchg
push
popa
aas
sti
cld
mov
adc
xchg
jnp
pop
pop
cmp
cmc
inc
mov
jb
mov
add
xchg
clc
jns
jecxz
imul
lret
out
sub
or
pop
xchg
mov
data16
mov
call
lahf
inc
jno
mov
les
pop
outsb
sarb
lahf
push
data16
jbe
shr
xchg
xor
popa
fidivrs
or
and
test
and
test
pop
and
xor
ficoms
hlt
repz
jbe
clc
in
push
dec
mov
repz
rol
and
gs
dec
inc
xor
cmp
xchg
repnz
addr16
ss
mov
sbb
notb
stos
mov
fwait
jb
rcrb
adc
ja
dec
lcallw
repz
dec
das
sub
add
fs
sub
aaa
push
enter
cmp
mov
push
cmp
lahf
mov
cs
leave
imul
mov
sbb
lds
repz
rclb
repnz
dec
mov
lret
and
sbb
fwait
add
mov
sbb
xor
push
dec
mov
jmp
out
or
popf
mov
out
outsb
fsubl
push
incl
and
mov
jno
loopne
mov
leave
les
jns
xor
mov
push
imul
xchg
jne
test
loope
xorl
outsl
cmc
out
and
test
pushl
dec
cmp
dec
sbb
faddl
out
inc
xchg
loopne
mov
cmp
ljmp
je
dec
imul
dec
mov
sbb
mov
lea
jae
arpl
out
idiv
inc
mov
pop
fisubs
mov
adcb
ljmp
std
xchg
imul
outsl
push
push
rcrl
dec
loop
xchg
mov
adc
push
mov
mov
cltd
iret
add
sbb
pop
pop
out
cmpsb
ret
and
movsl
jae
scas
inc
loop
dec
cs
pop
arpl
jg
pusha
icebp
jle
sbb
cmpsb
pop
adc
inc
fsubrl
adc
orb
jmp
xor
outsb
xchg
fistps
adc
fisubrs
loope
cmpsl
fsts
jecxz
adc
pop
rcrl
test
push
xor
pop
adc
enter
pushf
mov
pop
fxam
lret
mov
repnz
jl
repnz
xor
xor
add
into
clc
call
lods
ret
or
mov
pusha
shll
and
scas
ret
sub
inc
data16
test
xor
cmpsl
jmp
icebp
xchg
popf
aaa
aaa
fmull
dec
cmp
push
add
inc
notl
or
cs
int
inc
addr16
sbb
out
sub
pop
fwait
or
add
aad
add
lds
aaa
push
fldz
stos
sub
mov
xor
stc
dec
adc
push
cmp
dec
xor
lods
dec
cmp
inc
and
popf
mov
fisubrl
and
lds
insl
cmpl
or
scas
sub
add
dec
dec
mov
pop
sub
or
pop
xorb
je
aas
cmpsl
adc
fsub
test
mov
pop
pop
xchg
push
mov
test
dec
movsl
pop
mov
xchg
pop
das
jno
fwait
sub
in
inc
adc
ljmp
into
fstps
jnp
fbstp
cmc
mov
ret
scas
out
lds
mov
gs
mov
push
es
ficoms
push
adc
fnsave
movsb
test
push
cmp
bound
stos
mov
xchg
jno
je
mov
dec
mov
fisttpl
mov
push
dec
pop
jmp
mov
arpl
mov
dec
sub
sub
push
es
sub
icebp
add
call
out
das
cmp
fidivs
mov
xor
sub
jae
sub
cwtl
or
mov
mov
jecxz
insb
mov
rolb
xchg
mov
mov
out
mov
add
inc
pop
imul
das
adc
mov
mov
pop
fdivrp
bound
and
loop
xor
les
mov
push
dec
imul
cmp
les
in
inc
mov
lock
test
and
subl
cs
rolb
or
ret
in
add
fisubl
lcall
inc
test
cmp
dec
xchg
mov
adc
out
pop
dec
mov
sub
mov
stos
jns
mov
fldcw
ja
imul
xchg
pop
mov
sub
loop
das
pop
cltd
ss
outsb
dec
aad
imul
daa
mov
jge
xchg
mov
cmp
addr16
inc
cmpsl
jnp
gs
movsl
stos
jle
insb
pop
dec
fisubs
sbb
in
scas
ss
dec
pusha
arpl
push
sahf
leave
fnstcw
sbb
test
xchg
adcb
lahf
lods
popf
add
jbe
ds
xor
mov
xor
scas
imul
test
pop
sarb
outsl
rcrb
cs
dec
leave
add
xor
fnstsw
mov
insb
xor
fmull
push
scas
es
lods
adc
jne
jb
popa
mov
popf
int3
into
mov
clc
repnz
xchg
jecxz
rorl
adc
sub
jp
mov
pop
jb
daa
ds
mov
inc
and
mov
shr
insb
or
jnp
in
sqrtps
jbe
pop
in
mov
xor
cmp
and
xor
sub
jb
int
fistpll
bound
or
pusha
shlb
mov
cli
inc
dec
inc
scas
xchg
nop
adc
movsl
test
xlat
add
or
sbb
imul
fimull
lods
sti
out
or
xchg
lahf
cwtl
mov
or
in
add
jbe
jae
shrb
xor
and
sub
cwtl
fldcw
enter
ja
and
repnz
mov
popf
pop
xchg
adc
rolb
out
push
jl
xchg
jno
sbb
iret
push
xchg
bnd
fadds
dec
scas
sub
int
aas
arpl
inc
aaa
daa
frstor
into
push
mov
or
loope,pt
add
xchg
ss
mov
mov
dec
pop
arpl
add
mov
mov
push
into
insb
cmpsl
cmp
push
imul
negl
adc
test
movsb
push
add
adc
das
inc
jbe
ja
sub
mov
lock
repz
push
jbe
divl
cmc
cmpsb
aam
jp
mov
loopne
mov
pop
ja
mov
jbe
mov
leave
test
repnz
flds
mov
js
insl
push
in
xor
lahf
stc
cmpsl
mov
jno
adc
xchg
test
js
hlt
movsb
mov
cmp
in
fistl
std
imul
or
sbb
or
mov
ret
mov
sahf
jo
out
jmp
popf
or
dec
xchg
pop
push
mov
jl
xchg
mov
sub
adc
adc
xchg
outsb
mov
test
xchg
out
jnp
fildll
xchg
add
mov
mov
mov
lret
mov
repnz
pop
sahf
lahf
icebp
mov
or
sub
out
add
adc
or
fcmovnb
imul
outsb
outsl
inc
ljmp
adc
push
je
cmp
cmova
scas
push
test
pop
rclb
pusha
mov
fldt
add
ret
out
or
sbb
xchg
mov
mov
fidivl
test
mov
xchg
cmp
pusha
ret
mov
pusha
mov
mov
lret
aas
inc
add
push
test
mov
mov
aaa
adcl
jl
sub
rorl
push
xor
xchg
arpl
dec
push
add
or
insl
jp
adc
loopne
add
sub
inc
pusha
popf
push
lcall
push
lahf
stos
jl
std
sbb
ljmp
mov
or
dec
int
test
mov
test
mov
jmp
mov
jmp
mov
pusha
arpl
dec
mov
add
fistl
mov
rorb
cwtl
test
test
mov
out
jo
jg,pt
jo
jns
cmpsb
inc
push
into
sub
jg
hlt
fidivs
stc
adc
clc
dec
push
push
daa
ret
jp
sub
cmp
cmp
orb
cs
sbb
pop
pop
ds
scas
pushf
mov
mov
pop
adc
sub
outsb
xchg
in
jl
cmpsl
lret
lret
lods
inc
or
daa
int3
push
inc
xchg
sbb
fildll
stos
xchg
mov
inc
push
addb
in
mov
jl
cld
xchg
sub
sbb
mov
iret
jae
aam
sub
das
xchg
cmpsl
xchg
icebp
fistl
inc
mov
fwait
je
lds
jmp
inc
mov
sbb
in
jmp
hlt
jbe
test
mov
mov
jg
fdivl
sub
in
or
sbb
pop
inc
pop
icebp
js
adc
enter
mov
mov
mov
ret
je
and
leave
pop
insb
pop
mov
dec
cmp
xor
lods
es
mov
ret
cld
in
xchg
xchg
adc
push
mov
fidivrs
call
cmp
daa
in
jne
das
push
mov
cmp
jnp
in
sarb
jb
movsb
movsb
jecxz
jb
or
lea
adc
out
sub
fsubrl
icebp
stos
fldcw
pop
cltd
pop
imul
dec
mov
aas
aas
lea
insb
roll
xchg
and
adc
sub
int3
fmuls
mov
pop
aaa
xchg
inc
ficoms
dec
dec
es
mov
pop
mov
or
mov
imul
aaa
inc
jmp
jge
mov
pop
xchg
je
test
or
mov
lds
adc
adc
jb
into
or
sub
mov
or
call
xchg
mov
subl
sub
je
mov
int
sti
push
push
ja
aaa
nop
out
xorb
xlat
xor
mov
xchg
sarb
daa
add
and
sbb
dec
sysexit
jae
fsubl
cmp
xchg
mov
bound
sahf
mov
lea
fiadds
adc
in
loope
mov
mov
pop
mov
cmpsb
aam
ss
dec
mov
leave
sub
xchg
jp
xchg
rcl
push
push
xor
xchg
jne
test
mov
orb
gs
gs
data16
mov
and
adc
adc
adc
jmp
icebp
ret
lods
add
es
dec
lcall
dec
dec
jmp
adc
stc
push
les
clc
push
or
jbe
mov
cmp
daa
in
lock
les
or
jo
aas
mov
imul
nop
xor
ret
out
scas
ficoms
les
and
stos
das
push
ja
daa
ds
jae
mov
push
xor
jo
xchg
imul
loop
push
inc
pushaw
lea
int
dec
lahf
std
aad
ds
insb
dec
insb
aaa
js
jg
addl
add
push
inc
add
cmp
cs
stos
mov
cmp
cmpsb
mov
imul
rorb
fcmovnbe
sbb
jne
add
mov
stc
mov
mov
das
test
movd
sbb
xchg
iret
insb
or
push
cmpsl
mov
and
imul
cmp
xchg
xor
xlat
imul
sub
fildl
sbb
pop
sbb
pop
outsb
cld
outsb
scas
aam
sbb
adc
fwait
pop
lcall
sahf
aas
enter
pusha
mov
jg
popf
rclb
push
xchg
add
dec
inc
stos
mov
ficoms
int3
test
into
imul
in
stos
mov
sbb
aam
scas
subb
cmp
inc
dec
sbb
out
cmpb
divb
stos
scas
ret
add
and
pop
imull
subb
in
shl
stc
adc
stos
imul
gs
xchg
jo
push
hlt
cmp
lret
iret
jle
jne
or
pop
adc
stos
dec
xor
movb
les
outsl
sbb
test
xor
jmp
sbb
cmp
and
cli
mov
pop
xchg
jo
sti
and
mov
pushf
lods
sbb
jp
je
mov
and
sti
out
adc
xchg
pop
dec
and
inc
push
inc
enter
sbb
jge
out
inc
lret
pop
push
mov
das
dec
iret
jnp
push
mov
imul
dec
adc
loope
jge
cs
in
add
mov
pop
rolb
les
pop
and
ffree
pusha
jne
pop
lock
fstl
cvtps2pd
push
xor
mov
or
adc
ss
adc
test
rcr
mov
into
js
movsl
cwtl
ret
cmpsb
and
or
jmp
out
push
adc
adc
sbb
cmp
xor
fidivrs
leave
and
dec
enter
std
cmp
mov
pop
and
fadd
cmp
aaa
jno
inc
fwait
mov
dec
mov
push
ss
sbbl
adc
mov
shr
fdivl
fxam
sbb
mov
lcall
xchg
test
add
pop
xor
or
into
mov
repz
out
test
fstl
iret
pop
lcall
adc
hlt
push
mov
xor
push
cmpsb
test
sub
out
add
dec
sbb
adc
pop
inc
push
fwait
shl
and
sbb
push
inc
rcll
mov
pop
pop
mov
mov
xchg
adc
adc
xchg
ret
xchg
in
out
loopne
mov
sbb
jge
and
mov
and
adc
cmp
sbb
cmp
rcll
pop
ds
imul
pop
xor
iret
lods
cmp
inc
rep
jb
testb
xor
lret
mov
pushf
arpl
xchg
inc
pop
and
iret
flds
xchg
jne
insl
aas
lock
insb
int
xor
sub
movl
sbb
jbe
nop
aad
rolb
jnp
mov
jo
fildl
mov
out
ljmp
loop
mov
fdivr
cmp
ret
scas
inc
inc
xchg
xchg
lock
das
sahf
xor
divb
or
push
dec
movsl
es
mov
pop
pop
lock
nop
js
cwtl
xchg
lods
fistpll
cmp
sub
aad
insl
cmpsb
clc
inc
mov
pop
decb
add
xchg
fmull
pop
jnp
nop
shll
stos
mov
mulb
pop
sti
clc
popf
inc
sbb
adc
pop
mov
inc
mov
stos
xchg
jge
cld
ret
ds
outsl
push
push
inc
in
fnstcw
repz
add
push
stos
rcr
movsl
repz
aam
frstor
push
xchg
cltd
mov
mov
dec
loop
test
jae
jne
dec
not
cmp
xchg
outsb
sbb
push
sar
mov
addl
movsb
repz
data16
out
pusha
cmpsl
sub
push
je
cwtl
pop
in
ja
xchg
cmp
sbb
sub
add
cmpsb
xchg
lret
cmpsb
xchg
xchg
cltd
stc
jle
int3
cmp
das
jecxz
ja
cmpsl
and
stos
gs
fdivrl
lock
ja
jg
je
out
mov
pop
push
mov
pop
aad
cwtl
or
jae
inc
or
xor
enter
dec
inc
movsl
lods
ftst
push
jno
push
mov
lret
fiadds
popf
jmp
xchg
ljmp
fsubrs
stc
inc
mov
int3
and
ljmp
movsb
mov
aad
loopne
and
fsubr
out
mov
rolb
sub
fisubl
push
sub
xchg
jl
fcomps
loope
sub
imul
ljmp
lds
int3
sbb
out
xchg
jno
inc
fwait
pushl
out
inc
mov
fstp
sbb
stc
clc
jg
dec
inc
pop
lds
push
es
int
mov
push
xchg
xchg
in
xchg
add
inc
inc
add
lea
movl
cmpsl
mov
push
out
daa
xchg
fldcw
push
cld
lods
lea
and
jae
xchg
jae
cld
pop
mov
push
inc
jb
mov
and
les
das
test
aaa
and
pop
decl
in
rorb
hlt
pop
je
inc
insb
mov
sub
cs
mov
push
fisubrl
sahf
dec
arpl
es
call
xchg
cmp
fmull
ds
movsb
pop
imul
and
test
out
into
pop
and
lods
lds
adc
dec
ret
popl
loope
pop
or
pop
scas
stc
push
sub
mov
jmp
mov
imul
mov
mov
stc
iret
xchg
pop
imul
pusha
sub
popa
mov
test
push
sub
jns
sbb
pop
mov
out
xchg
test
inc
lea
cmpl
mov
dec
in
rolb
adc
and
push
pop
jmp
push
inc
xchg
jns
dec
pushf
cmp
sbb
movsb
sbb
pushf
mov
ja
inc
test
call
shl
cmc
cwtl
les
fiadds
push
das
cmp
sbb
in
pop
lock
loop
nop
sub
dec
inc
pop
cmp
mov
fxch
test
stc
dec
in
fpatan
outsl
clc
dec
xchg
roll
xchg
in
lods
js
sub
jae
test
cmpsl
push
jnp
xor
lahf
pop
imulb
movsl
fwait
jbe
or
mov
add
ja
es
aas
sbb
xchg
xchg
cmc
scas
sub
mov
orl
inc
sbb
cmpsb
cmpb
xor
xor
mov
ds
scas
mov
xchg
xchg
xor
les
das
cltd
cld
sub
sbb
int3
outsl
scas
mov
or
sub
or
out
push
fsubrl
sahf
jecxz
pop
pop
xor
pop
jg
mov
sub
out
iret
mov
rorl
fisttpl
dec
cmp
xchg
pop
inc
push
xorl
outsl
fdivp
lret
scas
mov
insb
rorl
leave
add
fwait
push
mov
aam
mov
mov
mov
stos
je
pusha
cli
int3
xchg
or
dec
push
pop
in
fidivs
inc
mov
mov
enterw
mov
cmp
cld
rolb
adc
mov
cltd
pop
loopne
out
adc
in
icebp
repnz
xchg
dec
mov
sbb
out
test
clc
stc
stos
addr16
dec
mov
push
out
gs
imul
jne
push
push
faddl
jnp
adc
xchg
jl
loop
xor
sahf
gs
xchg
ss
outsl
imul
ss
rorl
fimuls
imul
iret
clc
stos
add
jbe
sbb
out
mov
maskmovq
mull
dec
hlt
addr16
insl
add
dec
jle
sbb
andl
into
pop
jbe
xchg
pop
lock
xchg
ret
jg
into
in
in
adc
scas
dec
movsl
and
push
insl
mov
and
in
mov
jge
xchg
js
add
xor
mov
scas
fimuls
imulb
jp
xchg
jns
stc
mov
in
jno
fsubrl
or
xchg
imull
loop
inc
jb
xor
add
scas
inc
bnd
mov
shlb
out
incb
test
das
adc
data16
shr
inc
rcr
in
mov
jle
jecxz
stc
sub
xor
xorl
mov
mov
fldl
adc
push
movsb
xor
or
shr
aas
add
sahf
enter
fcomip
mov
push
adc
insl
and
cwtl
jecxz
test
repz
aad
sub
push
inc
pop
pop
add
mov
or
stos
fdecstp
mov
je
ja
in
loope
bswap
aaa
cwtl
jg
jne
lods
pusha
popf
fistl
adc
add
call
push
daa
adc
stc
push
and
repz
adc
inc
js
aam
sub
sub
pop
pop
push
pop
rcrl
sbb
adc
mov
aas
mov
int3
lods
xor
pop
sub
sar
add
sbb
addr16
idivl
mov
jno
inc
aaa
data16
pop
xchg
adc
cmp
mov
add
outsb
insb
or
fnsave
dec
mov
ljmp
mov
rcrl
sahf
data16
inc
int
inc
sbb
lret
push
nop
ret
or
gs
mov
xchg
in
leave
outsb
push
add
in
lret
xor
adc
mov
and
push
and
insb
push
jmp
push
mov
cmp
icebp
add
shrl
ds
shll
jmp
outsl
xchg
xchg
adc
popa
shlb
addr16
stos
add
sbb
outsl
rclb
sub
sub
mov
fmulp
add
imul
mov
ja
mov
insl
inc
lock
add
xor
xchg
dec
outsb
xchg
add
jnp
mov
gs
fistpll
ficoms
push
xchg
jge
jns
into
push
stc
push
imul
lret
mov
insb
int3
popf
mov
push
mov
lahf
dec
les
and
jl
testl
ficoml
outsl
iret
stc
xchg
ror
inc
cli
add
sub
mov
cmc
pop
lds
into
jbe
aas
imul
cs
imul
pop
lret
xlat
sahf
lods
testl
aaa
xlat
xchg
push
sbb
into
jne
ds
inc
jp
or
mov
xchg
popa
inc
scas
mov
cmp
pop
push
lods
xor
jmp
mov
jae
mov
xchg
sbb
iret
aas
test
loop
add
ljmp
add
outsl
sbb
je
or
testl
pushf
aad
clc
mov
nop
push
push
push
sbb
ds
xchg
and
mov
sbb
shrb
fisubl
out
inc
mov
xlat
js
ds
loopne
lods
pusha
fadd
dec
lock
std
stos
mov
add
cmpsb
daa
sub
xor
pop
sbb
and
lcall
sub
xor
push
adc
mov
jp
rolb
ret
shll
push
mov
test
int3
pusha
pop
pop
add
jg
cltd
repnz
fwait
je
and
lds
in
jl
fbld
lahf
jo
pop
xor
stos
mov
cmp
test
inc
aad
popa
xchg
in
leave
cmp
je
sbb
adc
dec
int
jmp
cmp
arpl
frstor
rcl
sti
sar
daa
push
sub
xchg
std
scas
add
or
push
das
fstl
xchg
aas
cmp
mov
xchg
jg
call
push
fdivp
mov
icebp
jle
std
sub
in
iret
jns
hlt
add
repnz
push
jle
jp
add
push
stc
lret
pushf
jg
cmpl
hlt
jne
dec
sti
lea
and
pop
ds
call
test
jle
cli
lods
into
inc
inc
nop
jbe
ss
cmp
xchg
fs
fwait
in
loop
or
insb
or
mov
adc
rorb
daa
mov
icebp
loopne
js
in
sub
push
push
jg
inc
mov
mov
xchg
clc
pop
pop
fdivs
sahf
pop
es
lea
lds
adc
mov
nop
fwait
mov
jne
hlt
inc
cmpsb
mov
popa
js
pop
loope
ss
insb
and
daa
push
dec
xchg
shrb
enter
adc
sbb
movsl
dec
sbb
inc
add
adc
xor
in
es
and
aas
pop
xor
outsb
mov
dec
loop
lds
stos
ljmp
sbb
in
mov
mov
loopne
jno
jne
inc
lock
inc
inc
adc
push
jne
mov
pusha
movsb
cmc
cmp
dec
mov
mov
xor
ss
inc
iret
or
xorb
push
adc
sbb
jns
movsl
dec
dec
cld
xchg
popl
outsl
notb
jo
ljmp
pop
shll
mov
push
dec
sub
rorb
std
jg
dec
pop
inc
xor
push
or
and
pusha
xor
popf
call
aam
or
and
loope
mov
loopne
rorb
pop
subl
add
jecxz
xchg
aam
pop
dec
out
fs
pop
dec
insb
fistpll
pand
xchg
fwait
jne
insl
xchg
xorl
sahf
jg
dec
in
insb
fstpl
rcrl
pushf
in
iret
ja
test
mov
xchg
ret
insb
or
sbb
or
jg
test
mov
or
add
testl
int
sbb
out
imul
aaa
pop
ds
in
bound
sub
sbb
pushf
adc
pushf
fcom
push
lods
movsb
inc
or
xchg
xor
sti
and
leave
mov
fstp
sub
loopne
ret
cmpsb
sbb
push
in
or
jno
and
sub
mov
xor
iret
inc
sbb
dec
mov
xchg
pop
ret
xor
test
jmp
mov
mov
push
scas
dec
inc
out
adc
jp
js
jb
or
les
jne
fadds
sbb
push
int3
cmp
jmp
xchg
cltd
sub
inc
fistl
lock
aaa
in
fnstsw
adc
cmp
mov
sbb
rcrb
fisubrl
mov
mov
inc
cmp
je
pusha
inc
pop
popa
and
mov
aam
stos
xor
aas
push
mov
jne
push
and
jnp
cmp
dec
sbb
loopne
rcrl
lea
jae
scas
loope
pop
pop
lock
inc
mov
test
pusha
or
pop
fs
faddl
adc
daa
cli
sti
push
mov
jmp
js
mov
aad
bound
aaa
scas
das
das
out
inc
xchg
fnstsw
or
jnp
scas
es
mov
or
push
or
push
mov
je
fld
xchg
sahf
sub
pop
pop
loop
add
stos
lods
mull
scas
fs
inc
pop
jmp
and
mov
adc
push
mov
sbb
fisttpl
push
dec
mov
in
add
sbb
cmpsl
adc
sub
or
jo
loop
dec
or
mov
dec
scas
aas
dec
mov
iret
adc
pop
fadd
hlt
pop
mov
sub
out
cmpsl
mov
xchg
sahf
fimuls
xchg
inc
jmp
cld
push
imul
cmpsl
add
add
pop
shrb
and
enter
repz
ljmp
push
int3
dec
scas
jb
push
enter
xor
sarl
xchg
push
jp
outsl
idivb
add
jbe
add
cld
jg
or
negl
cmp
das
cmpsb
lret
dec
ljmp
movsb
popf
int3
add
sub
cmp
inc
enter
cmp
inc
push
mov
hlt
leave
mov
fwait
xlat
pop
add
pusha
mov
mov
ret
notb
lds
mov
cmpsb
lret
lea
ja
xchg
movsl
mov
out
jb
gs
mulb
dec
iret
or
mov
cmp
adc
sub
std
int3
or
lahf
jne
sbb
mov
fs
lds
add
pop
xor
mov
cmp
dec
fistpll
lahf
int
and
jle
sub
mov
mov
xor
push
mov
lret
xchg
out
cmp
imul
aaa
sub
outsb
mov
push
jbe
ret
dec
pop
seta
and
imul
mov
xor
enter
inc
xchg
fdivrp
xor
sbb
repz
shr
fst
test
jmp
and
insb
sbb
cwtl
jge
jmp
pop
or
pop
jmp
sbb
aam
or
test
mov
imul
pop
out
rolb
lea
push
icebp
bound
rcrl
cld
pop
and
pop
arpl
add
inc
and
pop
leave
mov
test
inc
sbb
es
scas
mov
loop
adc
in
mov
lods
jae
aaa
stos
pop
mov
mov
mov
or
int
dec
add
out
push
dec
xchg
jo
loope
rolb
push
inc
dec
jns
std
adc
mov
aam
inc
mov
je
xchg
movsb
or
cli
and
int3
out
jge
dec
out
fidivrl
insb
push
inc
push
clc
icebp
dec
je
gs
addr16
xchg
xchg
mov
or
cmp
push
mov
jbe
sub
add
dec
jecxz
and
sbb
or
push
adc
sbb
push
scas
sbb
inc
lock
test
jmp
mov
inc
pop
addr16
pushf
pop
cmp
jecxz
lds
and
dec
ljmp
xchg
popa
xchg
inc
dec
out
add
xor
fwait
sub
scas
test
pop
xor
xor
dec
fsubrl
popa
cmpsl
xchg
fs
stos
out
or
push
inc
jg
pop
aam
repnz
cmp
inc
cmp
ret
dec
into
insl
mov
push
sbb
jbe
xchg
pushf
divl
stos
outsb
xor
iret
inc
loopne
xor
rcl
sub
ficoml
mov
ret
inc
int
push
adc
je
adc
ficoms
inc
lcall
mov
insl
cmc
xchg
mov
xchg
cmpsb
xchg
rorl
pop
pop
or
daa
and
or
repz
adc
mov
pusha
outsl
push
scas
push
lds
hlt
nop
leave
mov
cwtl
fistl
inc
scas
mov
out
xchg
lret
jns
xor
cmp
popf
cwtl
mov
inc
fwait
jb
xchg
imul
into
and
dec
dec
mov
mov
cmp
and
js
cli
mov
in
mov
popf
pop
mov
fs
jmp
mov
ds
leave
or
mov
mov
std
lahf
jb
jle
sub
cmp
popa
push
bound
fadds
jecxz
dec
fnstsw
js
fisttpl
sub
xor
jl
mov
inc
pop
inc
ret
cmp
outsl
jbe
xor
pop
mov
push
xor
sbb
sub
pop
out
or
in
ljmp
xorl
test
xchg
push
lret
jbe
ss
mov
out
aaa
inc
lahf
or
adc
mov
jo
ret
mov
daa
iret
fisttpl
nop
loopne
add
cltd
push
rorl
mov
hlt
lret
iret
inc
push
pop
lock
adc
data16
inc
mov
mov
fisttpll
mov
push
rcrb
in
and
pop
jnp
mov
leave
imul
sub
xchg
mov
mov
ljmp
jns
cmc
cmp
inc
xor
mov
test
xchg
lods
cmc
adc
fsubs
and
push
testb
cmp
and
test
pusha
jmp
jle
sbb
cld
fadds
inc
insl
fistpl
mov
and
cli
scas
push
out
nop
arpl
mov
das
jl
dec
xlat
outsl
sub
push
int3
or
cmpsb
jbe
js
cmpsl
jg
mov
push
xor
cmpl
daa
adc
fsubr
fildl
les
dec
xchg
fwait
mov
loopne
stos
mov
aad
ffree
nop
sub
cmp
enter
pop
lahf
jb
mov
inc
popa
enter
adc
lret
xor
push
aam
cli
inc
fdivs
rolb
iret
sbb
jo
popf
sbb
jge
addr16
pop
imul
gs
ds
aad
sbb
sub
cs
push
loope
inc
cld
fldcw
mov
mov
xor
mov
out
lahf
xchg
cmpsl
daa
cmp
push
jb
mov
adc
xor
mov
lcall
inc
adc
std
cmp
push
loope
cmp
mov
movsb
sbb
mov
notb
js
mov
push
cmp
repnz
xor
insl
xor
push
int3
and
arpl
xor
popa
cltd
lock
xchg
test
out
incb
adc
or
inc
mov
aam
fidivs
jae
fimuls
mov
sub
xlat
fsubr
insb
jl
shll
push
js
sbb
repnz
push
lods
jb
iret
loop
mov
adc
addr16
adc
pop
or
imull
sbb
or
pop
arpl
inc
dec
cmp
orb
testl
lret
ljmp
mov
mov
pusha
cmpsl
pop
daa
fcomps
ljmp
popf
data16
aam
pop
sub
push
mov
or
pop
scas
dec
push
repnz
ficoml
dec
inc
mov
stos
add
ss
imul
in
fildll
daa
inc
jns
aas
pop
notl
pushf
loopne
sub
cmp
bound
popa
xlat
xchg
sbb
mov
cmpsl
lcall
or
leave
sbb
add
cld
nop
fcoms
jno
push
xlat
bswap
subl
xchg
xor
lds
data16
pusha
icebp
cmp
pop
idiv
lock
inc
jl
lods
aad
out
mov
xor
mov
call
imul
mov
testb
push
mov
movsb
add
cmc
aaa
xchg
dec
push
mov
jae
sub
dec
pop
lods
std
sbb
pop
mov
mov
dec
adc
sbb
xor
inc
call
fwait
xchg
sbb
jle
inc
push
pop
lods
cwtl
mov
cltd
loope
dec
lea
cli
stc
hlt
jb
cmp
mov
push
adc
sbb
pop
cmp
pop
inc
aad
mov
sti
sub
clc
js
cmp
mov
jmp
jmp
ds
notl
repnz
and
fsubrs
cmp
fsubrl
mov
cmp
push
cwtl
cld
inc
dec
sarl
les
fisttps
decb
popf
test
sbb
jno
xchg
and
out
ret
push
fcompl
in
in
sarb
adc
sti
dec
sbb
hlt
jbe
popf
mov
xor
int
imul
popl
lret
aad
jnp
dec
ljmp
je
adc
xchg
gs
add
mov
cmp
daa
push
into
or
or
repnz
push
mov
xor
add
bound
push
and
push
push
pop
and
cmp
jle
popa
bound
rclb
sub
mov
xor
sahf
pop
lahf
mov
add
adc
int3
loop
clc
out
jb
mov
arpl
mov
rclb
loop
test
es
lret
jg
in
push
jne
push
cmp
push
scas
sub
aad
xchg
int3
int
mov
dec
sbb
addl
gs
leave
jecxz
pop
and
adc
push
mov
mov
pop
dec
orb
pop
mov
pusha
sbb
jo
inc
ret
and
std
mov
add
cmc
pop
daa
out
pop
and
addr16
jne
outsb
mov
or
mov
sbbb
push
cmp
sbb
nop
cmpsl
call
push
sub
xchg
pop
xchg
test
mov
xchg
dec
push
pusha
mov
test
aad
mov
rep
fldcw
in
aas
shll
aad
push
push
hlt
or
push
loop
cmpsb
inc
or
fsubl
insb
loop
clc
cs
clc
add
jecxz
dec
outsl
popa
xor
sti
mov
out
cmp
testb
mov
lea
adc
in
jbe
dec
ljmp
imul
shlb
ds
cmpsb
aad
mov
mov
jb
pusha
dec
xor
outsl
pop
stc
push
mov
jge
or
fiaddl
movsl
sbb
ret
jns
cmp
cli
mov
enter
add
fldcw
filds
and
dec
in
out
gs
pop
aad
clc
jmp
leave
dec
stos
negl
clc
pop
orb
mov
mov
movsb
and
xchg
cvtpi2ps
mov
or
addr16
mov
in
sub
add
rcrb
in
adc
push
insb
xchg
int
cld
xchg
mov
push
sbb
mov
jg
fwait
in
pushf
loope
sbb
xchg
push
aad
sub
adc
ret
inc
mov
out
lret
fs
or
xor
and
inc
cltd
push
cmp
mov
or
cmp
jmp
push
cmp
sub
cmp
xorb
and
lahf
sti
sahf
scas
push
rcrl
push
popf
add
inc
pop
sbb
mov
mov
xchg
outsl
sar
add
in
fcomps
jb
pusha
lret
push
lea
mov
gs
fstpt
gs
shrb
jle
xchg
add
cs
addr16
scas
or
mov
mov
mov
les
sahf
pop
dec
xor
bound
lock
xchg
arpl
test
iret
inc
mov
rorl
pop
das
popf
fiaddl
lock
mov
scas
sub
mov
sbb
xor
in
add
pop
xchg
dec
jle
cmpsl
jo
psrld
aad
js
sarb
cltd
xor
nop
out
and
pop
daa
lret
push
push
mov
dec
inc
call
pop
adc
cmp
scas
pusha
push
movsl
ljmp
lea
leave
pop
and
inc
add
xchg
push
dec
xor
mov
pop
adc
mov
cmc
test
xor
movsb
inc
adc
sbb
leave
push
andb
push
sbb
in
hlt
ljmp
movsl
jp
lret
pop
addl
dec
shll
pop
or
dec
mov
rcrb
frstpm(287
xchg
inc
lods
and
dec
push
subb
jae
mov
lcall
cmp
push
or
inc
cmp
mov
sub
iret
and
adc
dec
rclb
jmp
mov
sbb
fs
push
cmp
fcomps
call
pop
or
jecxz
sbb
add
out
xor
xrelease
push
sub
xor
mov
sbb
xor
cli
popf
push
adc
orl
push
pop
or
xchg
mov
sbb
je
fisttpll
lret
xor
and
mov
ljmp
iret
lret
add
inc
ret
fucomi
inc
pop
mov
dec
cwtl
or
ss
cmp
pop
adc
jbe
xchg
push
lea
and
mov
cmpsb
lock
stc
dec
lock
jg
shl
push
inc
fsubs
aas
cli
out
push
ds
dec
ljmp
movb
rcrl
sub
imul
or
push
insl
test
mov
fucomip
js
mov
add
jmp
cli
loope
pusha
mov
sbb
movsl
jl
mov
ds
test
mov
imul
insl
push
insl
insl
push
les
loop
push
xor
pop
jns
push
add
mov
jo
mov
jle
adc
inc
xchg
pop
pop
xor
xchg
sbb
mov
jb
jge
insb
lret
jecxz
dec
xchg
lods
sub
xchg
insb
ret
mov
jne
xor
lret
mov
push
pop
adc
pop
cmpb
insl
mov
ret
mov
push
or
outsl
mov
dec
adc
mov
mov
test
cld
cmp
cmp
or
push
xchg
shlb
xor
mov
iret
mov
lods
sub
mov
call
fs
shrl
pop
stc
add
fwait
sub
jl
push
daa
enter
dec
ror
lods
iret
xchg
cld
sbb
leave
in
test
loop
clc
inc
mov
inc
inc
movsl
fimuls
cmp
ss
cmp
xchg
xchg
mov
pop
jle
mov
std
mov
sahf
push
or
adc
jno
fbld
mov
outsl
pop
fwait
out
insl
fwait
and
popa
jle
pop
jl
cmp
test
icebp
imull
out
push
inc
in
push
fidivrs
sbb
dec
mov
fcompl
ret
adc
and
loop
dec
mov
das
daa
adc
repz
lods
mov
loope
pop
fisubs
fdivrl
adc
leave
mov
sbb
push
sub
lret
pop
xchg
cmp
or
rol
pop
ret
mov
inc
pusha
pop
lcall
cmpl
popa
mov
popa
int3
or
push
fcom
mov
out
jle
xchg
cli
adc
mov
mov
les
js
cmp
inc
push
add
adc
jmp
or
popf
push
jle
xor
test
fstpl
adc
imul
jb
rcll
testb
xorb
jl
loop
out
stc
mov
stc
pop
loope
mov
pop
xor
adc
jg
xchg
push
adc
lea
shll
push
xor
in
stos
daa
fcoms
add
stc
mov
mov
fisttpl
not
testb
std
call
lock
jmp
psraw
mov
les
rcrl
arpl
pusha
ja
lcall
in
sub
loope
ss
idivl
cmp
mov
dec
push
js
cmp
bound
mov
cltd
sbb
bound
in
in
stos
pop
add
sbb
cmp
adc
inc
imul
sbb
addr16
mov
jns
sbb
xchg
negl
iret
pusha
cwtl
out
add
cmp
jecxz
loop
stos
icebp
mov
fwait
or
repnz
scas
std
popa
stos
or
out
shrl
scas
mov
je
idivb
jge
fcmovnbe
hlt
cmc
pop
test
insb
sub
loopne
enter
aaa
fwait
insl
imul
hlt
adc
rclb
dec
cmp
push
incl
mov
xor
les
or
gs
sti
mov
jo
das
push
aad
inc
pop
insb
push
or
pop
cs
ljmp
icebp
xchg
sbb
dec
pop
stc
scas
pop
jae
addr16
lock
popa
xor
sub
push
adc
andl
xlat
xor
mov
dec
jecxz
sbb
xchg
aas
dec
sti
repz
xchg
cmp
dec
inc
loopne
fidivrs
push
gs
out
and
sbb
into
sbbl
daa
stc
in
test
int3
jno
mov
popw
push
in
stc
addr16
fldt
rorl
rcr
cmc
add
fisttps
mov
fwait
lods
das
lods
mov
cmpsb
div
or
daa
and
test
mov
jecxz
inc
stc
in
fnstsw
movsl
xchg
push
aam
mov
ljmp
imul
pop
out
dec
int
mov
adc
dec
mov
pop
dec
sub
mov
mov
adcl
out
lods
push
enter
cs
xor
jg
repz
aas
arpl
in
cmp
cmp
mov
jecxz
test
cli
xor
push
jae
xchg
popf
in
mov
inc
xchg
call
xor
es
pop
jmp
arpl
shrl
sub
xor
cmpb
lahf
call
mov
outsb
and
movsl
aam
cli
in
jg
jecxz
in
pop
pushf
cmc
fadds
xacquire
adc
mov
cmpsl
or
stos
mov
icebp
cmp
sbb
sub
push
fildll
inc
ficomps
xchg
lret
push
into
mov
loopne
imul
addr16
jb
push
jmp
or
popf
inc
adc
loope
xchg
insl
jbe
and
sbb
jecxz
test
jbe
bound
outsl
enter
and
mov
ljmp
stc
add
data16
fistpll
pushl
out
push
jne
nop
dec
jle
jns
xchg
in
xor
add
stos
je
aas
cmp
fwait
add
mov
pop
movsb
cmp
jne
sahf
push
ret
sbb
mov
in
aas
push
push
cmp
mov
push
pop
xor
inc
stc
mulb
jle
imul
or
addr16
lea
sbb
add
jl
jp
cli
scas
call
pop
inc
dec
sti
xchg
das
hlt
icebp
iret
scas
jb
dec
adc
int
incl
movsl
mov
mov
icebp
sbbl
inc
daa
jo
jbe
jo
fisttps
mov
jno
mov
loopne
push
fwait
mov
or
cmp
sbb
fs
mov
sub
or
jns
push
pop
aas
ljmp
popa
jp
in
icebp
negb
adc
xchg
add
push
adcb
icebp
pop
mov
cmp
push
pop
sbb
pop
mov
in
aas
or
fdivl
icebp
adc
mov
shld
mov
or
sub
clc
les
repnz
or
mov
mov
adc
sub
mov
or
inc
lea
loopne
dec
cmpsb
xchg
out
xchg
jnp
movsl
fcoms
push
adc
jb
sbb
mov
lret
mov
pushf
push
neg
mov
pop
sub
mov
push
fadd
pop
xchg
adc
les
and
sbb
test
cld
pop
jle
sbb
add
push
mov
xchg
cld
push
pop
les
pop
add
jmp
lcall
xor
xchg
adc
ja
pop
push
ss
test
inc
add
pop
loop
bound
testb
rclb
cmp
adc
dec
mov
add
mov
ss
imul
and
mov
cmp
inc
push
jmp
adc
mov
fildll
push
jge
push
and
xchg
in
or
out
pop
cmp
sti
pop
jl
push
mov
sub
jecxz
pop
pop
inc
pop
and
adc
addr16
jp,pn
insb
dec
fists
and
cld
jge
xor
lcall
cmp
mov
mov
push
sbb
adc
fmul
push
mov
adc
repnz
adc
test
lcall
pop
jmp
pop
adc
mov
dec
push
loopne
daa
jb
pop
jmp
sub
and
jae
xchg
xor
push
inc
jo
dec
bound
add
sub
arpl
mov
mov
sub
movsb
sbb
jecxz
aaa
adc
mov
xchg
je
loope
into
pushf
nop
fadd
add
mov
and
stos
adc
and
jne
inc
sbb
pop
outsb
and
mov
jp
insl
hlt
loop
inc
mov
pop
shll
xchg
add
push
cmp
imull
push
sbb
ret
add
cmpsb
adc
test
mov
imul
mov
push
and
jo
mov
pop
stos
inc
call
cmpsl
adc
mov
fcomps
mov
repz
cwtl
and
and
mov
xor
sub
sbb
adc
aas
pop
subb
shl
adc
mov
pop
into
icebp
xchg
lret
std
popa
jmp
or
cmpsl
mov
and
push
sub
cld
mov
dec
shll
flds
hlt
mov
mov
pop
mov
scas
inc
sbb
rcrb
mov
inc
xchg
xor
push
mov
daa
mov
cmpsl
shr
sub
into
enter
stc
iret
mov
adc
push
rcrb
mov
in
jge
dec
or
lea
imul
cmp
shlb
outsl
out
add
lret
fstpt
xchg
scas
rcrl
mov
sbb
loope
into
inc
out
xor
or
cs
sbb
mov
js
jbe
sbb
mov
mov
hlt
stos
sub
out
cmpsl
jo
js
lock
leave
adc
iret
test
adc
lcall
push
lret
jp
push
rep
jo
add
stos
cltd
push
xchg
pop
or
stos
xor
xor
and
push
ja
test
sub
inc
or
das
or
aaa
test
jge
sub
popa
insb
ror
aaa
ja
data16
sub
lcall
flds
mov
inc
lods
and
nop
in
bnd
jg
fwait
mov
pop
dec
outsb
stos
and
pop
push
pop
or
rcrl
sub
pop
fsubrl
sbb
daa
and
sbb
aam
clc
imul
dec
loopne
lfs
adc
in
push
and
push
jno
inc
sbb
sbb
inc
mov
pop
in
inc
adc
cld
fnstcw
lret
jge
je
jne
out
mov
sub
mov
push
dec
sub
and
lret
cli
or
lds
lock
add
jge
dec
int
xor
ljmp
or
adc
fldl
jle
xchg
push
sarb
arpl
xchg
loopne
aaa
movsb
adc
mov
xchg
loope
fwait
cmpsl
xchg
mov
xor
xor
jg
dec
lds
mov
daa
xchg
std
popf
icebp
out
out
push
xor
or
and
push
jecxz
mov
mov
xor
arpl
lcall
inc
in
mov
lds
lret
mov
or
sub
andb
adc
pop
rcll
xor
pop
xor
mov
scas
pop
sbb
sbbb
fiadds
pop
incb
rcrl
add
out
xor
push
mov
out
mov
adc
lock
jle
lods
mov
inc
sbb
out
in
gs
sbb
fiaddl
inc
mov
bound
or
jno
sub
enter
mov
mov
pop
push
mov
sahf
xchg
lahf
das
jb
or
fcomps
iret
cmp
or
sub
jecxz
mov
ljmp
arpl
leave
cld
scas
or
cmpsb
mov
enter
hlt
mov
ljmp
mov
push
push
push
sbb
jecxz
jmp
dec
adc
andb
dec
pop
sbb
mov
pop
inc
and
aaa
inc
insl
adc
pop
adc
lret
in
lods
stos
xlat
int
cltd
or
outsl
cmp
xchg
inc
ret
mov
outsl
in
mov
cmp
add
or
inc
jp
outsb
pop
scas
hlt
mov
pop
fst
das
adcb
lret
lock
in
call
lea
jns
push
movsl
fs
ret
dec
xor
lea
add
cmp
test
or
xchg
xchg
add
fstps
jecxz
mov
mov
dec
jo
insl
mov
cmp
orl
push
or
xor
cmpsb
mov
inc
mov
mov
jnp
xor
xor
xor
in
cmc
mov
iret
pop
pop
int
shrl
add
jmp
ss
push
decb
sbb
inc
push
cmp
mov
popf
leave
sbbb
dec
push
jo
adc
int3
jo
mov
mov
enter
mov
xor
fs
test
daa
scas
leave
xorl
push
cmp
cld
stos
mov
jo
or
xchg
in
loopne
lods
inc
test
sbbl
xchg
out
sub
or
add
das
into
scas
repnz
out
testb
or
outsb
push
mov
mov
sub
add
clc
jnp
arpl
add
pop
or
test
popf
imul
loopne
cld
cli
sahf
rcrl
int3
sub
das
add
jbe
popa
sbb
adc
int
test
adc
mov
jp
cld
inc
sub
mov
or
insb
cmpsl
subb
negb
inc
icebp
call
jo
jb
mov
and
xor
adc
dec
dec
add
pop
cmc
mov
push
ljmp
push
ljmp
and
mov
pushf
jg
movsl
xchg
mov
adc
dec
hlt
mov
pop
and
movsl
lcall
xchg
adc
add
sbb
ss
jl
addb
mov
ret
iret
stos
mov
xorl
lock
or
xor
sahf
jmp
mov
adc
pop
fcmove
mov
lret
xor
iret
pusha
movl
inc
xchg
out
mov
mov
enter
clc
xchg
push
sbb
push
enter
adc
add
rorl
loope
fadd
jno
jp
lahf
push
push
or
loop
idivl
adc
xor
in
mov
loop
jge
dec
fidivs
aad
mov
cltd
aas
push
mov
mov
call
adc
ficoml
out
dec
cmp
mov
cmp
inc
push
pop
inc
dec
orb
or
fimuls
cmp
pop
popf
pusha
fnstenv
mov
mov
sub
add
repz
or
xchg
mov
stos
js
insb
pop
aad
loope
shrl
fcompl
xchg
push
fists
mov
stc
lock
push
aam
xchg
imul
stc
stos
jge
dec
inc
enter
cmpb
and
scas
push
pop
cwtl
bound
or
sbb
xor
mov
jmp
imul
movsb
mov
sti
jle
jbe
cwtl
sub
loopne
add
mov
mov
add
jecxz
cltd
or
push
or
cltd
movsb
movsb
jle
adc
clc
out
push
mov
into
es
mov
mov
mov
or
in
scas
movd
inc
cmp
cmp
adc
mov
inc
push
jle
paddsb
jmp
popa
xchg
adc
push
cmpsb
push
shr
inc
sahf
or
mov
xor
fcmovnb
adc
mov
ja
sub
inc
jmp
je
sub
lea
inc
adc
jae
es
xchg
jnp
scas
or
pop
imul
dec
jmp
mov
xor
push
cmc
mov
popa
mov
repz
add
mov
sub
std
xchg
xchg
sbb
sub
or
cwtl
jge
daa
call
imul
ficoml
mov
lret
push
sbb
jb
bound
ljmp
fldcw
dec
mov
and
sti
add
push
xchg
mov
test
test
rcrl
int
or
in
call
pop
stc
or
xor
inc
jnp
xor
cmp
add
jns
and
mov
daa
push
shlb
iret
lds
mov
jbe
aad
stos
mov
mov
cli
pop
xorb
jnp
xlat
insl
daa
adc
jo
not
fucom
adc
test
dec
jnp
inc
xlat
loopne
int3
add
das
fsubl
xor
mov
jl
mov
jge
sub
cmpl
loope
jnp
addr16
mov
push
sbb
push
pop
dec
std
nop
or
lcall
adc
dec
fcomps
jae
sub
or
mov
and
aam
pop
jecxz
fildll
leave
add
std
lock
aas
jmp
xchg
sbb
pop
ficomps
test
int
push
sti
inc
pop
loope
dec
cmpsl
mov
jne
outsl
mov
iret
inc
es
add
mov
xlat
dec
cmc
cmc
lods
pop
scas
mov
outsb
jecxz
xor
into
icebp
inc
movsl
sub
sub
lcall
mov
insb
pop
cld
out
inc
bound
pushf
inc
fwait
mov
jns
std
inc
loopne
dec
pop
push
mov
popa
or
dec
pop
xor
add
push
imul
repz
loope
pop
pop
mov
repnz
cs
loop
push
fwait
jmp
in
int
not
mov
test
clc
inc
gs
ljmp
xorb
sti
xchg
sbb
adc
adc
pusha
add
jno
jg
hlt
mov
cmp
cs
das
popa
test
jbe
out
rcrb
and
lds
rcll
pusha
sub
pop
xchg
rorb
aas
jmp
sub
jae
int3
mov
mov
inc
mov
bound
insb
dec
popf
mov
dec
cmp
inc
xchg
cwtl
insb
jp
and
xchg
cli
sub
cmp
push
push
sbb
mov
fldenv
mov
jle
sbb
outsb
filds
cmp
into
shlb
xor
jnp
xor
ds
ja
je
cmpsb
cs
add
inc
cli
push
insl
push
lcall
data16
inc
scas
das
outsb
jb
push
sub
jnp
pushf
jle
push
rolb
test
push
mov
clc
pop
je
outsb
mov
sub
pusha
loop
mov
je
lds
shr
scas
mov
lds
push
icebp
and
jnp
in
sbb
out
push
cli
jle
or
and
dec
lock
outsl
aaa
movd
outsb
dec
outsl
cmpsb
das
sarb
sti
je
cwtl
xchg
sbb
in
or
aaa
pop
lods
or
das
lcall
sub
cmpl
ret
lea
insl
jbe
push
dec
fisubs
sbb
or
cmc
pop
jo
enter
or
rcrb
sti
mov
mov
xorb
das
mov
mov
cmpsb
xor
dec
xchg
mov
std
lods
loope
leave
sahf
rcll
xor
fimuls
movsb
mov
and
push
cmp
jp
jle
cmpsb
aaa
mov
adc
stos
test
pop
and
push
test
fs
pusha
pop
insl
xor
fs
loope
push
xchg
daa
or
mov
pop
in
jl
and
adc
fistps
jne
lea
and
cmp
pop
xor
es
sbb
movsl
sbb
pop
push
shlb
cmpl
out
mov
mov
xchg
cmp
mov
pop
shl
imul
les
mov
lret
call
or
push
xor
sar
scas
cmovle
ljmp
jae
adc
shrl
dec
dec
popf
rcrl
fstpt
xchg
je
loopne
sbb
sahf
fildl
push
lods
add
add
int3
out
pop
insl
addb
xor
add
mul
adc
push
dec
mov
out
repz
nop
cltd
das
lret
pop
ss
or
push
test
dec
pop
les
pop
icebp
pusha
dec
stos
fstpt
outsb
sub
cmp
nop
jno
jb
push
inc
mov
js
inc
jle
push
leave
test
into
into
cmp
inc
add
jne
adc
rcl
fs
mov
jecxz
gs
shll
xor
cmpb
addr16
dec
js
pop
arpl
sbb
mov
mov
cmpsl
cmp
adc
lock
dec
sahf
jbe
fsubrs
rcrl
mov
notl
or
add
and
cmp
adc
mov
sbb
sub
adc
daa
out
subb
pop
lcall
mov
pop
cmpsb
ljmp
mov
cmpsl
cmp
mov
popf
iret
dec
lods
xor
sahf
adc
jns
inc
test
pusha
sar
lret
outsb
mov
push
mov
call
mov
fwait
jp
mov
shlb
sahf
int
out
jge
mov
inc
mov
filds
pop
xchg
fisttps
inc
mov
jge
pop
js
out
stc
mov
cli
in
and
adc
das
add
inc
rcll
adc
xor
pop
ret
jge
mov
pop
int
out
icebp
dec
mov
loope
or
jecxz
loopne
dec
inc
rolb
and
test
lahf
lret
dec
sbb
inc
mov
inc
aaa
imull
movsb
inc
xchg
shlb
insl
ss
sub
and
pop
add
mov
dec
out
outsb
fsubrl
mov
int
insl
dec
jbe
rorb
sbb
iret
push
mov
jo
int3
scas
in
xor
xchg
cmp
lock
out
mov
out
stos
lcall
and
outsl
mov
fnstenv
jo
jno
ret
push
imul
repnz
jg
dec
pushf
fcomps
xor
mov
gs
loop
std
int
lret
jo
loop
adc
loope
das
in
cmp
cld
xor
pop
xor
pop
and
mov
jb
adc
jne
pop
popa
sti
xchg
pop
sbb
mov
jmp
clc
push
mov
and
mov
fimuls
loop
jmp
dec
mov
mov
cmpsb
inc
push
arpl
sbb
or
push
pop
outsb
dec
lahf
pushf
jne
inc
popa
mov
mov
int3
mov
adc
sbb
jp
ror
lret
dec
push
ja
movsb
jle
iret
rcr
and
xor
xor
dec
lret
cs
int
in
aas
std
and
jle
push
js
outsb
mov
pop
mov
mov
das
and
test
sbb
cmp
repz
int
inc
lods
std
xchg
xchg
or
mov
loopne
aas
out
or
mov
in
lock
loope
sub
xor
and
inc
rcr
repnz
pop
je
pop
scas
sub
dec
pop
out
mov
jb
andb
fsubrp
in
mov
mov
cltd
xor
test
sbb
cltd
lock
and
jecxz
cmpb
cmp
cli
cmpsb
and
lock
xorl
fndisi(8087
fldlg2
cmp
mov
cmp
test
fsqrt
push
mov
test
push
push
push
dec
out
dec
aaa
jl
leave
loope
cmc
add
les
push
sub
dec
clc
sbb
inc
imul
pop
in
adc
pop
rolb
jo
xchg
rcl
push
shll
fldl
push
out
lret
add
sub
adc
addb
in
or
stos
in
setge
sbb
scas
or
xor
daa
xlat
xor
sub
cs
inc
cmp
insl
orl
sub
mov
dec
xchg
pop
rorl
inc
xchg
or
cmovg
les
fsubrs
out
sbb
icebp
mov
pop
movl
mov
xchg
jl
mov
mov
das
sbb
js
and
sbb
int3
repnz
daa
sbb
test
adc
mov
in
lods
pop
lahf
jbe
or
cmp
pop
in
add
or
sbb
sbb
in
jmp
adc
push
jne
xchg
jnp
jne
mov
mov
stc
pop
pusha
repz
in
mov
xor
xor
push
and
mov
adc
outsl
push
outsl
ret
mov
rcrb
pop
dec
lret
in
inc
in
jmp
jbe
aam
bound
mov
pop
repz
cmc
and
mov
dec
into
adc
xor
cs
sbb
mov
pop
pop
push
jo
aaa
int3
in
fistpl
push
bound
loope
clc
loope
lahf
or
pop
and
repnz
push
adc
movsb
pop
lods
loopne
jmp
jno
cmp
xchg
or
dec
pushf
dec
mov
pop
pop
mov
imul
and
mov
stos
jg
in
mov
std
repz
clc
test
jo
or
mov
sbb
cmp
push
or
stos
dec
push
mov
mov
mov
cli
push
inc
lods
pop
fwait
stos
jp
and
and
add
scas
mov
out
out
cmpxchg
mov
dec
pop
idivb
cmp
aas
mov
stos
insl
imul
pop
addr16
sbb
mov
stos
insl
out
xchg
cmp
cmp
repnz
rolb
popa
aad
fidivrl
sub
inc
out
sub
sbb
xor
out
shlb
sub
add
mov
or
cmp
sbb
dec
dec
mov
cwtl
xor
dec
lods
mov
in
sub
inc
cmpsl
mov
fstpt
add
cmc
xchg
js
and
rsqrtps
inc
mov
js
sub
or
inc
sub
fisttpl
push
insl
and
testl
pop
mov
jecxz
mov
test
or
insb
push
jp
dec
sbb
rclb
fwait
call
stc
es
sbb
mov
jno
xchg
push
xchg
cvtdq2ps
xor
rolb
ret
dec
xchg
dec
sub
out
imul
cmpsl
add
jge
cwtl
subl
repnz
outsb
mov
aad
js
in
es
outsb
inc
jbe
lret
mov
cmp
add
cmpsb
mov
push
adc
cmp
sub
shlb
push
and
hlt
dec
idivl
dec
xor
test
lahf
sbb
add
mov
fimull
inc
shl
out
lds
inc
jo
mov
test
push
addr16
sahf
mov
shll
push
xlat
jl
call
push
inc
xor
mov
adc
lcall
dec
inc
aaa
jg
adc
lods
jne
cmpsb
insb
stos
and
pop
jg
iret
mov
bound
pop
add
or
adc
insb
fistpll
pop
or
cmp
rcrb
mov
and
cltd
test
adc
push
outsl
cwtl
leave
or
loop
sahf
je
jle
ret
sbbl
in
mov
or
in
int3
jp
adc
add
jbe
add
test
mov
adc
xchg
mov
push
jo
fistps
mov
movddup
stc
call
xchg
xor
fisttps
xor
cwtl
sub
repnz
mov
cli
jns
movsb
arpl
clc
adc
sbb
sbb
cmp
test
js
or
xor
add
inc
or
pop
jecxz
mull
in
fcoms
dec
pop
call
flds
in
sti
loopnew
mov
push
std
add
jae
in
dec
andb
loopne
fcoms
out
stos
int
sbb
mov
fwait
shlb
mov
xor
jo
jno
adc
hlt
sbbb
sbb
pop
rorl
outsb
jg
in
cmp
push
and
adc
cmp
dec
rorl
dec
outsl
aaa
mov
push
xchg
xchg
mov
mov
push
outsl
nop
inc
je
adc
out
add
mov
movsl
pop
add
test
add
sub
imul
pushf
imul
jb
or
fstl
cmp
xchg
mov
sti
outsb
movsb
jecxz
es
xor
mov
jmp
and
jecxz
movsl
cmp
dec
stos
push
jb
and
fisubs
xchg
pop
lret
dec
pusha
pop
xlat
bound
fisttpl
ljmp
adc
jmp
mov
jle
xor
pop
push
movsbl
test
jle
sub
xor
aas
xlat
lahf
push
adc
ds
xlat
inc
test
mov
popf
call
push
lahf
out
sbb
push
jl
dec
mov
iret
stos
fs
sysenter
xchg
add
sbb
push
aam
hlt
movsb
std
cwtl
repnz
jb
pop
mull
rcl
and
inc
pushf
imul
mov
mov
aaa
in
js
add
xor
mov
js
cli
xchg
je
mov
stos
popa
arpl
dec
or
fsubrp
lock
sbb
insl
mov
sti
loopne
cmp
js
cmpsb
dec
ljmp
xchg
xchg
mov
sbb
or
mov
mov
insl
aaa
mov
dec
pop
lds
addb
shlb
sub
xchg
adc
pop
ret
adc
ja
xchg
jns
outsb
mov
mov
int3
hlt
or
mov
daa
push
dec
fs
jb
aas
jnp
gs
pop
xor
adc
fisubs
dec
inc
or
jno
inc
sub
pop
xchg
ds
or
pop
test
mov
pop
jmp
push
sbb
xchg
imull
adc
mov
icebp
shrd
insl
and
cmp
aaa
pop
jnp
out
sbb
popa
ljmp
fcmovb
scas
jb
cmc
ret
int
adc
je
nop
mov
mov
cld
sub
lret
mov
jmp
and
ficoms
push
mov
popf
jb
mov
inc
inc
pop
mov
call
push
je
and
cltd
in
inc
lcall
mov
data16
imul
loope
inc
mov
addl
xorb
pop
mov
and
ror
out
cld
jno
shlb
ret
push
add
cltd
xchg
std
sbb
cmc
adc
xor
stos
sbb
addr16
lret
or
jno
aad
or
in
in
jo
aad
adc
lret
bound
push
in
pop
dec
aaa
dec
cld
jne
sarb
in
xor
adc
pop
fisttps
insb
jne
dec
mov
add
test
fcompl
repnz
sbb
stc
fmul
lock
adc
push
test
nop
test
fsubr
stc
imul
dec
cmp
out
sbb
mov
bound
mov
mov
mov
movsl
pop
sub
mov
jge
lock
push
cmp
inc
and
and
test
sahf
push
sub
mov
pop
xchg
iret
mov
popa
mov
arpl
mov
data16
jno
loopne
pop
push
jmp
aaa
mov
lds
add
clc
adc
or
rclb
mov
pop
dec
ja
pop
in
mov
jb
aad
int
inc
pop
test
out
inc
dec
fadds
push
loop
push
lret
cmpsb
sbb
dec
lret
pop
lret
sub
fs
and
pushl
jecxz
add
fs
xor
mov
in
andb
sub
xor
mov
fs
outsl
mov
int3
push
add
mov
ss
sub
mov
jnp
addr16
out
pushf
add
add
mov
popa
mov
ja
ret
pop
sbb
mov
jge
xchg
lods
shl
cmpsl
divb
inc
movsb
ljmp
pushf
jl
sbb
dec
stos
add
push
rcrb
lret
jmp
xchg
nop
icebp
aad
cmp
insb
int3
rol
aaa
inc
mov
jns
cmp
adc
addb
stos
mov
ss
cmc
mov
and
popf
fnstcw
ljmp
push
lock
xchg
aaa
add
rcl
add
jl
loopne
adc
push
jl
adc
movsl
add
jno
in
scas
xchg
stos
push
notl
jle
cmc
rorb
and
and
gs
mov
cmp
jecxz
xor
lcall
shrl
jp
push
add
push
shlb
cld
sub
popl
add
orl
inc
mov
nop
push
push
imul
xor
cmpxchg
ficompl
cli
xchg
test
lods
rol
loopne
mov
pop
inc
add
insl
roll
pop
add
or
or
aad
test
or
mov
sbb
xor
or
mul
mov
adcw
mov
add
loope
inc
leave
xchg
and
scas
push
xor
fwait
cmc
inc
xor
push
pop
and
scas
push
testl
mov
adc
aam
xchg
outsl
mov
fisubs
or
in
je
lret
xor
push
cmp
js
mov
insb
xchg
fnsave
fs
inc
dec
sbb
repnz
ds
cld
push
stos
loopne
mov
cltd
movsl
cwtl
gs
repz
aaa
aam
sarb
aas
mov
test
xchg
clc
int
dec
leave
addb
sbb
incl
mov
mov
cmp
out
cmc
mov
dec
cmp
add
sbb
lcall
sub
addr16
sar
sbb
std
xor
adcb
dec
ret
xchg
in
jns
dec
lock
xor
xchg
inc
es
aam
lret
xor
in
test
xor
imul
jp
cs
sub
in
jecxz
xor
insl
test
and
cmc
bound
lea
or
push
fcoms
jbe
movsb
push
jo
ffree
xorb
adcb
sbb
sub
sub
xchg
adc
add
mov
and
lret
fsubrs
iret
dec
push
and
cld
rcl
cmp
sub
aad
and
mov
jge
out
sub
push
frstor
jmp
lcall
aas
es
cmpsl
mov
adc
fcoms
pop
insb
jge
sbb
sub
fwait
cmp
test
aaa
mov
inc
sar
adcb
or
mov
inc
iret
cmc
xchg
test
imul
in
sub
sub
out
push
fnstcw
pop
call
lretw
jne
fbstp
imul
mov
jbe
ss
jge
dec
fldcw
daa
sbb
cmp
mov
bound
mov
mov
jo
insl
lret
movsl
dec
imul
jo
cwtl
inc
roll
mov
push
mov
mov
sbb
lea
lods
jb
sbb
cwtl
push
js
mov
sub
cmc
adc
adc
shrb
jb
push
fs
push
inc
movsl
jl
imul
frstor
sti
pop
lock
addr16
mov
jbe
lea
aad
shl
mov
ffreep
dec
fmuls
sbbl
out
mov
call
xchg
imul
aas
mov
push
je
or
jno
mov
jg,pt
or
pusha
dec
scas
shl
jnp
inc
sbb
push
push
pop
icebp
dec
dec
or
jp
dec
mov
pop
sub
cmp
ja
inc
mov
xor
ss
adc
mov
cli
inc
inc
test
popf
jmp
mov
fmul
add
mov
mov
jae
je
repz
inc
scas
ljmp
sahf
pop
mov
add
pop
mov
jb
lcall
mov
push
fxch
hlt
or
jp
sbb
mov
neg
xchg
inc
adc
inc
xorb
add
sub
jne
dec
push
adc
sbb
xchg
push
jl
outsl
fsubs
lds
out
enter
adc
sub
adc
je
push
stos
aad
xor
cmpsl
adc
jno
add
add
loope
mov
sub
adc
dec
loope
mov
push
ret
scas
jb
cmpb
negl
pop
push
daa
mov
mov
imul
dec
andw
std
jl
rorb
enter
dec
sbb
clc
out
test
insl
cmpsb
pusha
addr16
sbb
stos
insb
lea
xchg
hlt
push
test
loop
mov
int
inc
jp
xchg
incb
pop
cs
or
push
mov
sbb
xor
in
add
mov
andl
mov
push
testb
xor
lahf
sub
ja
nop
out
sbb
or
fcmovne
in
adc
cwtl
test
and
negb
pop
fsubs
aad
xor
and
inc
mov
xor
stos
lods
or
adcl
lret
es
xchg
or
fbstp
in
mov
shrb
mov
mov
mov
mov
ds
incb
push
std
cmp
lcall
xor
loopne
mov
mov
push
fmulp
push
push
dec
ret
jecxz
mov
adc
xchg
pop
xchg
ret
or
aaa
inc
int3
int3
mov
fwait
mov
leave
dec
out
mov
xchg
add
ss
or
jbe
jle
lret
or
or
divb
lods
push
imul
mov
cmp
test
aas
push
nop
idiv
mov
mov
call
lock
mov
xchg
xor
out
cmc
cmp
adc
cmc
sbb
jge
push
icebp
loopne
xor
lock
in
pop
lret
jno
cltd
xchg
xchg
gs
lds
xchg
imul
or
cmp
cmp
xor
test
dec
hlt
mov
icebp
out
stos
fnstcw
shld
cmp
sti
and
xchg
and
xchg
pmulhw
fs
pop
xor
push
les
push
xchg
or
cmpsl
mov
lds
mov
js
jne
cld
adc
in
fldpi
jge
mov
movl
sub
xchg
imul
imul
pushf
sbb
pop
or
inc
imul
add
clc
daa
pop
cmc
cmp
xor
shll
fbstp
push
jecxz
js
fldt
movsb
aaa
xor
ja
decl
sub
mov
inc
jns
rcl
xlat
xor
push
std
jb
pop
push
xor
inc
jle
inc
fdivr
and
xchg
sbb
inc
mov
xchg
sbb
inc
icebp
jo
xorb
xor
push
xor
negl
sbb
sub
inc
push
inc
int
and
insl
leave
push
and
gs
mov
aaa
xor
mov
dec
iret
push
subb
inc
pop
xchg
push
in
popf
nop
mov
ret
movsb
pop
rcl
cmp
mov
jo
pop
aam
adc
xor
push
repz
hlt
idivl
sub
stc
mov
pop
dec
push
jne
cmc
mov
cmp
addr16
in
mov
jns
or
xor
mov
or
push
out
xchg
movsl
test
icebp
mov
cmp
inc
or
xlat
lret
imul
lock
sub
push
jmp
aad
out
push
push
cmpsl
pop
aaa
mov
mov
add
psrlq
sbbb
pusha
mov
mov
jns
add
loopne
mov
enter
xchg
inc
lret
iret
xor
pop
cld
add
dec
pop
stos
in
addr16
sbb
and
dec
int3
fmul
sub
les
ljmp
mov
sub
jmp
sbb
push
xlat
cmpsl
sbb
inc
adc
popf
jl
je
repnz
push
xor
scas
dec
dec
out
push
in
xchg
in
add
clc
xchg
xchg
add
fsubl
inc
or
mov
jg
js
jne
cmp
jo
icebp
push
dec
and
mov
outsl
push
inc
loopne
test
out
je
out
push
fistps
imul
loope
jecxz
rorl
adc
adcb
mov
outsb
popf
les
adc
sub
das
cld
or
add
lea
mov
push
pop
push
ss
sbb
outsl
or
xchg
imul
sub
dec
dec
or
push
mov
in
ss
jb
xchg
mov
test
jge
loope
add
push
and
push
jl
xchg
test
lret
into
xchg
push
pop
jmp
xor
add
xlat
lds
mov
fcoms
inc
mov
testb
mov
xlat
ret
insb
cmp
push
inc
sbb
dec
sarb
push
and
push
idivb
push
adc
loope
pop
int
inc
cmp
mov
inc
pop
imul
in
mov
rcrl
push
push
clc
cld
aad
add
mov
mov
leave
mov
cld
cs
insl
mov
in
incb
pop
loope
mov
pop
push
xchg
xchg
sub
or
jb
push
sbb
pop
ja
lock
add
xor
repz
xchg
shl
ret
sub
adc
push
mov
imul
cmp
jne
stos
aas
xorl
shll
aam
test
or
push
inc
mov
mov
bound
fidivrl
imul
daa
inc
loope
scas
jmp
test
or
pop
sub
bound
mov
adc
lock
out
into
mov
and
xchg
lods
mov
jne
adc
lret
push
xchg
inc
adc
filds
dec
scas
sub
ljmp
jge
aas
lahf
adc
or
cmp
pushf
stc
repnz
cld
inc
out
adc
cltd
stc
and
out
pop
mov
sbb
add
mov
cmc
cltd
cmp
push
sub
mov
mov
stos
or
cld
xlat
addr16
inc
jae
das
and
fwait
push
inc
adc
fbstp
sub
loopne
pop
jecxz
in
data16
add
popf
cmpsb
xchg
pop
rep
xchg
push
outsb
or
daa
pop
addr16
push
inc
pop
les
nop
shlb
jle
decb
call
or
outsb
or
scas
sarl
popf
imul
push
cmp
and
iret
xchg
jmp
cli
mov
add
cmpsl
dec
lret
test
jne
push
and
mov
xchg
push
ljmp
dec
in
faddl
add
lret
gs
cmpsl
imul
dec
jg
aam
sahf
lcall
aad
into
cmc
popf
clc
pop
mov
icebp
aad
ljmp
shlb
cmp
test
imul
pop
andb
ds
dec
mov
dec
xchg
push
in
pop
pop
mov
ss
sbb
cld
fmuls
shlb
rcrb
leave
mov
push
cld
je
push
inc
push
pop
inc
popf
adc
sbb
mov
sub
jb
loop
xlat
into
mov
adc
outsb
and
outsb
notl
sub
dec
pop
lea
in
daa
dec
icebp
pop
cmp
dec
sub
test
out
add
popa
pop
add
lahf
andl
add
mov
cmp
sub
xor
loopne
mov
stos
jbe
jge
sbb
test
mov
dec
fistl
push
bound
sbb
and
xor
cmpsl
cvtdq2ps
stos
sub
ret
adc
cmp
in
xchg
jns
mov
or
fisttpl
fstl
mov
cltd
loopne
mov
in
mov
mov
mov
aad
mov
jo
pop
test
pop
gs
jns
pop
fbld
push
fdivr
mov
xor
mov
mov
daa
je
mov
jmp
sbb
outsl
push
hlt
dec
ljmp
cmp
xor
adc
ret
adc
push
ljmp
cltd
lret
inc
add
cmc
or
repz
mov
loop
and
iret
int3
repnz
mov
cmp
pushf
in
lock
dec
adc
pushf
cld
sahf
sbb
adc
adc
push
push
sbb
mov
lret
in
bound
cmp
dec
inc
xchg
adc
and
xor
cmp
mov
xor
jnp
enter
cmc
mov
loopne
scas
xor
pop
add
xchg
in
std
test
dec
push
mov
sahf
inc
push
test
popf
xchg
lea
neg
out
mov
mov
roll
clc
mov
movsb
loope
jecxz
gs
xor
add
xchg
sbb
mov
cli
cwtl
sub
shrl
sub
bound
mov
sbb
jle
push
xchg
jl
flds
aad
mov
movsb
int3
mov
mov
pop
xor
jp
lods
mov
lret
xchg
idivl
sti
cli
or
or
sti
cmc
push
cli
loope
cmp
mov
adc
je
int
or
ljmp
jo
ret
arpl
out
imul
cmp
sbb
jecxz
sbb
or
xchg
movsl
sub
push
pmuludq
sbb
scas
repz
cmpsb
xor
out
popa
orb
mov
pop
shll
cmp
xchg
pop
test
fadds
cmpsb
inc
stos
hlt
add
mov
cmp
add
mov
rol
mov
xor
mov
and
sti
jbe
and
pop
scas
cmp
mov
push
xor
and
test
pusha
cs
sub
fnsave
mov
int3
dec
insb
cli
lods
mov
rep
jg
dec
ljmp
push
xor
mov
sub
js
cmp
xor
insb
pop
sub
cmc
pop
adc
mov
adc
std
popf
xchg
adc
xor
mov
push
mov
ret
xor
add
cmpb
and
and
rorl
test
xor
mov
pusha
pop
mov
bound
je
jno
popf
push
sub
leave
mov
push
lods
aad
imul
dec
jb
xor
ret
mov
add
ds
dec
push
ljmp
pop
push
push
loop
gs
lahf
cmc
popa
lods
rcrl
inc
xchg
jl
lods
les
call
or
push
push
mov
stos
dec
dec
dec
lods
lcall
fs
out
shrb
mov
shlb
stos
insl
inc
ss
repnz
dec
sti
imul
xchg
xchg
in
lret
std
xchg
leave
clc
mov
pop
jecxz
stos
xchg
dec
push
mov
mov
insb
and
mov
pop
js
adc
jnp
inc
popf
push
xor
mov
movsl
pop
jecxz
and
mov
xchg
push
xor
arpl
imul
ja
ja
test
xchg
jecxz
cli
jne
adc
pop
sub
nop
jmp
adcb
inc
stos
xchg
je
add
and
mov
adc
jl
or
faddp
adc
fwait
pop
out
icebp
iret
or
fadds
push
stc
ffree
mov
xchg
outsb
dec
push
fldenv
mov
jl
add
das
push
stos
fistpl
push
and
call
fnsave
test
push
out
leave
test
int
leave
jne
jbe
push
cmp
in
out
aaa
mov
and
stos
fldt
xor
adc
push
dec
inc
js
adcl
pop
int3
sub
psubsw
cld
jbe
and
jae
fistps
or
rcll
outsl
push
push
leave
int3
xor
add
cmp
push
mov
xchg
lods
movb
add
popa
and
add
cltd
div
incl
daa
xor
jb
popa
aaa
inc
je
sub
js
dec
mov
lock
lahf
int3
sub
test
jecxz
xchg
in
adc
sub
sub
sub
inc
xor
cmp
xchg
xor
push
sub
mov
pusha
into
aam
mov
inc
sahf
int3
and
scas
pushf
xor
test
inc
mov
ds
add
xchg
jp
std
inc
push
and
data16
sub
sbb
cmp
push
ficompl
mov
leave
stos
lods
mov
inc
fildl
xchg
mov
cmp
inc
aad
mov
aam
cli
inc
loope
dec
pop
xor
dec
dec
pop
movsl
dec
not
xor
in
and
jge
fnstcw
mov
sub
add
out
shll
jbe
aad
xchg
cld
pushf
mov
and
cld
add
fsubrl
dec
cli
mov
loopne
pop
rcll
xchg
ljmp
inc
inc
test
or
or
adc
add
xchg
mov
sub
push
mov
repnz
xchg
fisubs
push
push
stc
jmp
dec
jnp
fidivrs
cld
dec
test
jbe
outsb
mov
pop
add
je
rolb
scas
and
enter
xchg
lahf
xor
mov
into
xor
shl
mov
pop
xor
insl
scas
test
js
push
popf
add
push
pop
pop
jb
insl
fs
addr16
cld
sub
das
xor
mov
pushf
xor
aas
inc
call
sti
das
mov
and
mov
dec
sbb
push
out
push
orl
inc
and
insb
vorps
into
out
into
stos
inc
in
jne
mov
enter
jle
or
out
xor
add
push
cmp
xchg
inc
and
mov
mov
sbb
lods
mov
sbbb
dec
in
rcrl
sub
cmpl
mov
dec
inc
push
test
testb
adc
mov
pop
mov
data16
aad
push
lret
loopne
dec
std
and
dec
jno
lret
sti
arpl
mov
cmpb
sbbl
ja
mov
mov
jecxz
or
inc
mov
cmp
inc
cs
push
stos
popa
fsub
loop
and
or
aad
pop
fs
pop
movsl
xor
inc
pop
clc
test
repz
xor
in
dec
fmuls
test
sbbb
inc
sahf
dec
mov
pop
subb
mov
je
out
fdivl
dec
lret
ret
xorb
inc
shrb
call
aad
push
cltd
daa
pop
inc
push
add
add
mov
out
in
mov
xchg
loop
pop
sub
jne
ret
popf
lods
das
lcall
jecxz
test
add
sbb
pushf
pop
repz
das
xchg
xchg
add
sbb
out
cs
adc
test
fsubp
sbb
test
movsb
scas
lea
xor
loopne
jnp
sti
rcll
out
arpl
xchg
jns
gs
xchg
push
in
bound
add
pop
xchg
ret
stos
jae
es
test
sbb
pop
pop
or
int3
dec
cmp
mov
fwait
js
or
out
mov
cli
sub
mov
shlb
loop
cmp
and
js
ljmp
mull
aam
xchg
loopnew
repnz
out
aam
pop
adc
shlb
inc
test
push
test
iret
add
pop
adc
sahf
cmp
xor
hlt
jo
mov
jne
ljmp
aad
adc
mov
jbe
jecxz
mov
movsb
aaa
add
aad
pop
inc
movsb
inc
insb
xchg
dec
ss
pop
jno
out
mov
insb
repz
fmull
push
mov
push
cmpsb
xor
into
mov
mov
repnz
pop
cld
outsl
xchg
movsl
xchg
les
push
mov
daa
mov
imul
je
daa
push
cmpsl
pop
push
lock
xlat
inc
mov
lret
and
push
leave
outsl
fcmovb
cmp
in
inc
jmp
and
jne
pushl
das
mov
fists
cmpsb
pop
mov
aaa
dec
mov
mov
pop
cmp
jge
lock
or
in
aad
mov
xor
out
or
outsb
in
aas
sbb
out
fistps
cmp
inc
pop
push
add
filds
pop
pop
mov
insb
je
pop
add
push
int3
cmc
adc
dec
add
test
push
or
mov
ds
rcrb
sub
jp
out
inc
lret
push
push
inc
movsl
ds
add
out
and
xchg
test
and
aas
js
push
pop
outsb
xlat
sub
xchg
cmp
int
fdivrs
mov
mov
fildl
pushf
xchg
aaa
sbb
mov
cli
or
pop
stos
adc
jne
xchg
mov
std
je
pop
fmull
and
sbbb
pushf
insl
xlat
add
cmpsl
mov
xchg
sub
movsb
imull
xor
orb
push
sarl
out
push
cmp
sti
leave
or
ret
popl
cmp
push
cli
sbb
sbb
lds
pop
sub
repz
adc
xchg
std
lock
daa
cmp
inc
es
out
sub
dec
int3
enter
addr16
xchg
push
xor
lahf
out
shrl
inc
out
jo
cltd
test
stc
jl
in
dec
and
mov
in
mov
scas
mov
lret
dec
push
push
scas
mov
rclb
or
fidivs
insl
fs
out
ret
mov
scas
orb
popa
mov
pop
dec
sub
lods
sbb
xchg
ret
jecxz
xchg
cli
cmp
aas
ss
das
nop
fsubl
adc
imul
sub
arpl
int3
cmp
inc
outsb
xor
adc
mov
or
cld
or
stos
sub
in
int3
push
and
out
int3
sbb
sub
imul
sbb
stos
xor
xchg
adc
lods
add
mov
mov
cmp
cmpsb
testl
in
cmpsb
sbb
sub
shll
xor
jl
je
pop
loope
cmp
add
testl
addr16
imul
stos
xor
andb
xorb
adc
fmul
push
push
test
int
push
xchg
into
sahf
in
fildl
and
mov
adc
xor
mov
and
inc
subb
lea
xchg
pop
sbb
pop
popf
and
sahf
pop
mov
push
xor
pop
mov
bound
xchg
xchg
add
xor
xor
mov
xlat
mov
mov
mov
loope
xor
incb
jmp
push
scas
and
mov
sub
add
lods
and
sbb
insl
setns
jge
fnstenv
xchg
ret
lea
adc
imul
fsub
in
shl
mov
out
shll
mov
test
sub
jg
xor
js
jle
jmp
dec
lret
xchg
mov
add
push
mov
inc
mov
fisubl
int3
pop
aad
int3
loop
flds
popa
jg
test
das
jnp
dec
push
sbb
cmp
pushf
and
pop
pop
jmp
ds
mov
or
push
mov
repnz
arpl
dec
xor
jg
jp
sub
sbb
jb
repz
stos
inc
mov
or
out
loope
int
popa
dec
test
mov
cltd
mov
icebp
imulb
push
mov
dec
push
imulb
addl
xchg
pop
lods
outsb
or
sub
out
push
out
push
scas
imul
in
leave
add
cltd
mov
dec
loope
jb
loopne
stos
pop
mov
cmc
mov
sub
es
inc
cmp
sub
arpl
sbb
into
sub
sbb
fcmovu
insb
clc
repz
push
cmp
push
mov
jnp
xor
mov
and
inc
dec
cmp
cmp
mov
pop
mov
xor
jns
mov
adc
gs
xorb
mov
bound
adc
xchg
mov
cmp
xor
sub
mov
or
ds
loop
pop
xor
or
testl
fs
jnp
dec
in
xor
das
xor
out
ret
mov
mov
push
es
sbb
popf
out
inc
mov
inc
and
or
aaa
mov
movsb
call
jnp
aaa
or
loop
adc
bound
sbb
insl
cmc
cmp
jmp
rcr
mov
enter
mov
pop
add
clc
ss
in
lcall
push
stos
push
jb
sub
sbb
scas
je
xor
test
pop
mov
cmp
mov
cmpsb
mov
ss
test
lock
cmp
loopne
xorb
int3
popa
aad
inc
push
divb
lds
jne
dec
mov
sub
jo
xchg
fidivs
xchg
xchg
inc
jl
out
cmp
jl
push
push
insl
jg
xor
adc
xchg
lods
sub
stos
inc
add
push
sti
daa
aas
adc
and
xchg
ss
cmpsl
call
fs
jg
dec
mov
jb
sub
gs
or
sub
and
mov
mov
ljmp
out
mov
test
or
rorl
add
cmp
es
push
sbb
or
and
cwtl
test
dec
pop
inc
jns
mov
mov
shl
ss
clc
jg
push
xor
shlb
push
fisttpll
cs
sbbl
push
jge
clc
ds
push
mov
push
int
outsl
xchg
pop
arpl
cmp
mov
int
loope
repz
adc
out
dec
cli
xchg
repnz
insl
or
pop
cli
inc
jno
mov
je
dec
cmpsl
les
mov
add
nop
sub
xchg
pusha
ret
or
in
mov
and
cmpsl
add
out
adc
add
push
in
xchg
pop
bound
fidivrs
rcll
bound
ficomps
mov
push
in
mov
fstpl
push
scas
cmc
sahf
xor
jbe
shl
imul
lods
daa
hlt
jne
imul
xor
mov
pop
int
push
xor
push
leave
and
nop
lds
or
and
test
aam
mov
jo
jo
ret
fidivrl
xchg
js
inc
mov
std
or
mov
push
out
jecxz
in
adc
fcoms
cltd
mov
ret
test
mov
dec
mov
mov
add
lods
or
cmp
cmp
push
xor
sbb
and
fucomp
lret
es
mov
xlat
xchg
jmp
add
push
cmp
sub
xchg
push
cmp
stc
add
dec
push
mov
rcr
lahf
jg
pop
mov
clc
scas
out
push
sti
rclb
shrb
mov
setg
xlat
out
add
aaa
cmpsl
fsubp
cmp
idivl
push
sbb
dec
and
push
popf
cmpsb
aam
mov
add
insl
push
cmp
and
mov
imul
es
pop
push
jno
dec
xchg
sbb
inc
dec
sbb
xor
rorl
mov
add
test
lahf
out
push
pop
imul
ret
jl
into
test
jmp
xchg
fidivl
add
jl
jns
std
mov
call
lret
sub
cmpsb
movl
mov
imul
mov
test
cmp
scas
push
in
movsb
mov
jmp
rorb
in
jno
jmp
xor
lods
mov
pop
ret
aam
cmc
aad
xchg
cld
and
mov
mov
test
test
je
cmp
jne
push
inc
aaa
lock
insl
add
push
stos
xor
fdivs
and
jg
mov
push
add
loope
mov
int3
test
outsb
xchg
icebp
jge
jle
cld
into
inc
sub
ja
adc
js
test
jp
out
out
dec
xor
cmp
hlt
int3
jmp
ljmp
out
mov
cmp
cmp
dec
or
sub
mov
or
mov
lods
mov
jp
jb
fadds
fsubr
jmp
inc
mov
push
and
mov
lret
pop
jmp
cli
inc
in
jp
fistpl
push
mov
pushf
mov
popf
lds
add
mov
in
add
mov
lods
inc
daa
xchg
mov
mov
lahf
push
sbbb
xor
xchg
inc
sbb
pop
out
sbb
jo
dec
je
std
cmp
mov
inc
and
pop
add
sbb
aas
insb
mov
clc
add
pop
mov
sub
iret
pusha
xchg
push
add
jg
xor
pop
mov
imull
push
call
adc
inc
xchg
sbb
cmpsb
cmp
dec
sar
mov
sbb
pop
jge
mov
mov
inc
icebp
ss
ss
add
stos
jp
popl
fistps
push
iret
xorl
lahf
shrb
aaa
aas
leave
shlb
mov
cmpsb
dec
mov
addl
lds
and
dec
into
je
mov
movsb
aam
fcmovnbe
cs
pop
in
fmul
mov
xor
aad
add
ss
inc
scas
jo
addr16
mov
jnp
and
xchg
push
imul
cmpsl
xor
mov
lahf
mov
push
gs
jge
insb
scas
pop
pop
mov
gs
leave
ret
lock
mov
fnstsw
test
sbb
hlt
sbb
add
sub
popf
dec
out
aas
int
scas
cmp
mov
mov
xchg
out
fmuls
xchg
test
add
xchg
enter
in
shll
or
fs
popf
orl
imul
ret
in
push
out
pop
inc
jne
sbb
lret
out
jne
cmp
add
mov
dec
js
or
dec
pushf
cmpsb
sbbw
push
sbb
rorb
mov
in
sbb
mov
into
je
orb
sub
add
rorb
and
testb
xchg
or
dec
or
in
xchg
out
mov
daa
sub
repnz
xchg
adc
xchg
nop
aas
pop
mov
inc
fldt
dec
push
or
xchg
lods
jae
push
pop
push
mov
roll
icebp
jnp
shrb
push
lds
mov
cmp
push
stc
je
pop
sbb
and
sub
dec
and
pop
daa
in
lahf
pop
add
out
cltd
sbb
in
push
cli
adc
jb
out
mov
mov
or
mov
scas
mov
es
xor
mov
mov
js
fistpll
sbb
pop
push
pop
or
ss
add
xor
xchg
jo
jge
inc
or
pusha
dec
in
fsubrl
lcall
jmp
push
out
neg
out
iret
or
aam
cmp
dec
ret
enter
and
inc
push
lods
xchg
xchg
mov
cli
xor
negb
dec
jmp
daa
mov
xchg
int3
push
or
sti
mov
xor
or
imul
push
outsb
dec
js
fiaddl
andl
sub
sub
aaa
add
outsl
std
dec
addb
in
in
mov
cli
jmp
in
rclb
and
cmpsl
fistpl
aas
data16
mov
lea
addr16
mov
and
rol
and
daa
push
dec
jg
nop
bndstx
mov
pop
stc
popa
inc
xchg
jae
sarb
scas
cmp
jbe
mov
jo
cmc
subb
sahf
lds
sbbb
cltd
sti
aad
mov
or
mov
adc
add
das
je
xor
pop
dec
ret
lods
and
jg
sti
mov
sub
into
or
nop
cs
cmp
jecxz
cmpsb
xchg
jp
xlat
out
add
lcall
lea
in
sbbb
dec
adc
pop
mov
mov
into
imul
fs
lcall
mov
adc
int3
aaa
and
aad
or
mov
test
pop
loope
lret
xorl
hlt
xchg
lods
lea
enter
scas
sub
test
jp
fimuls
push
dec
and
lods
and
and
mov
mov
xchg
inc
mov
push
out
aas
push
jg
and
mov
push
aaa
outsb
push
stos
and
inc
mov
sbb
mov
and
jp
push
cmpb
rcrl
jb
adc
mull
aaa
cmp
sbb
mov
cmpsl
mov
sahf
mov
sub
jno
mov
jle
mov
push
addb
lret
test
aas
lods
out
inc
cmpsb
stos
ljmp
addl
mov
shlb
fs
fnstcw
sti
fildll
int
cld
in
ret
cmc
fists
test
roll
loopne
data16
ret
xor
std
aaa
test
jl
jbe
mov
sbb
enter
movsl
fdivrs
push
cld
sbb
jle
mov
sbb
call
cmpsl
cmpsl
imul
jno
and
fsub
cli
lret
dec
pop
in
int
insl
jbe
add
repnz
flds
sbb
sti
out
push
mov
subl
jo,pt
enter
into
inc
addl
lods
in
dec
jmp
dec
push
pop
addl
daa
aaa
sbb
xchg
mov
es
ret
mov
cmp
fmuls
fnsetpm(287
insb
fistpll
aaa
aam
les
xor
in
stos
inc
pop
call
out
pushf
xchg
outsl
vpshlq
lahf
mov
cmpsl
rorl
in
push
mov
jb,pn
mov
mov
das
leave
mov
push
dec
loop
cmc
cmp
inc
mov
xchg
xchg
ret
test
aas
add
and
imul
jl
push
scas
stc
xchg
enter
in
sub
xchg
stos
mov
jmp
repnz
psubw
test
ret
jb
mov
adcl
push
cmp
sbb
fldlg2
lods
push
sbb
xor
adc
movsb
fistpl
or
fimuls
and
or
dec
jge
jbe
mov
pop
mov
jmp
lcall
cmpsb
ret
or
push
fs
sub
loopne
mov
fldcw
push
int
mov
insb
xor
push
out
js
sub
popl
dec
adc
scas
cmp
mov
pop
inc
jecxz
dec
sbb
std
pusha
pop
js
out
mov
testb
lret
es
push
stos
mov
aad
fcmovne
js
xchg
es
ss
sub
mov
insb
jne
clc
outsl
shrl
clc
filds
pop
ljmp
scas
mull
push
pushf
mov
shl
push
jp
neg
mov
std
cmpsb
sub
add
mov
xor
popf
in
call
jo
jnp
ljmp
jg
sub
push
je
das
pushf
mov
test
inc
aam
movsl
and
or
cmp
sbb
jle
leave
adc
or
dec
repnz
sbb
pop
and
ja
pop
add
aam
outsb
xlat
mov
scas
sarl
cwtl
gs
in
mov
sub
xor
jle
sbb
mov
das
dec
and
inc
rolb
mov
or
dec
sahf
push
mov
xchg
popa
jae
iret
mov
add
mov
xor
std
jle
mov
xlat
jg
andl
jo
xor
dec
test
mov
fbstp
jb
mov
lahf
xor
cmp
push
int3
push
aad
in
push
mov
push
add
lds
imul
and
shl
rcrl
ja
repz
mov
outsb
or
inc
lret
cmp
ja
mov
push
jle
mov
sub
push
in
mov
push
mov
xor
or
mov
mov
cwtl
mov
in
lock
ds
sbb
divb
push
pop
sbb
pop
cmc
jle
das
sbbb
xchg
jle
outsb
cmp
and
sbbb
in
test
push
aaa
xchg
je
bound
xchg
out
xor
cmp
mov
addr16
enter
push
or
fprem1
in
mov
lcall
sub
bnd
xrelease
lds
mov
mov
and
sbb
loope
jno
mov
xor
jns
in
clc
mov
push
imul
test
in
sbb
jl
cmp
ja
dec
lea
add
pop
cmp
lds
rcl
out
xchg
gs
push
cltd
out
sahf
data16
or
test
dec
pop
je
clc
gs
movsb
cli
pop
sarb
add
xchg
lods
mov
std
bound
orl
sbbb
popf
sti
mov
das
insb
inc
xchg
xlat
fdivr
int
mov
inc
stos
xlat
loop
cmpsl
mov
push
xchg
push
addr16
and
stos
mov
lds
dec
jns
sahf
in
ljmp
dec
xchg
out
shlb
jns
jbe
out
push
sub
sbb
and
rcl
in
aam
jns
push
xor
lds
sarl
pop
outsl
or
pop
sub
jl
push
iret
pop
push
jle
aad
lds
imul
cmpsb
mov
sbb
mov
into
sarl
lcall
dec
dec
mov
jae
dec
adc
xchg
gs
xlat
push
out
lods
xor
stos
inc
xchg
pop
in
jle
test
scas
jne
xchg
addr16
jo
xchg
rorb
xor
cmp
inc
mov
xor
pop
imul
js
adc
adc
pop
or
sbb
pop
aam
jbe
lret
cwtl
cld
xor
lods
lods
xchg
sub
fidivrs
popf
ret
cmp
pop
mov
inc
shrl
out
dec
xor
cmp
sub
xchg
jnp
sbb
rolb
jo
xor
jl
cli
test
cwtl
addr16
faddp
adc
test
aas
movsl
push
std
fistpl
test
mov
lods
lret
xor
dec
dec
adc
movsb
or
cld
xchg
mov
je
testl
cmp
push
add
push
js
mov
ret
pushf
lahf
shrb
mov
dec
loopne
addr16
mov
or
clc
iret
test
js
mov
les
pop
enter
or
out
push
sub
sbb
xchg
add
mov
in
fnstsw
cmp
inc
and
mov
or
sti
les
mov
out
xchg
dec
adc
mov
mov
lds
cwtl
push
mov
xchg
lock
leave
pop
push
mov
das
cmc
push
hlt
xor
lcall
xor
push
outsb
addr16
stc
clc
icebp
cmc
dec
xchg
lret
fisubrs
xlat
push
ficomps
ljmp
in
rcrl
std
mov
inc
jae
ret
jge
pop
xchg
or
mov
mov
adc
mov
das
mov
popf
pop
je
mov
adc
aam
sub
dec
in
out
jnp
jecxz
pop
sub
mulb
mov
inc
mov
popf
int
hlt
cmpsl
jmp
add
or
js
lcall
push
mov
lahf
popf
dec
outsl
pop
mov
arpl
push
xchg
mov
aam
cmpsb
aad
mov
pop
sbb
and
in
aaa
jne
dec
lea
mov
jmp
dec
xchg
sub
xor
sbb
je
xor
jmp
dec
enter
cld
fwait
mov
and
sbbb
sub
and
mov
out
mov
jmp
jle
shll
mov
jecxz
imul
sub
cmp
mov
jecxz
fistl
add
fstl
loop
adc
gs
push
mov
xchg
mov
out
adc
mov
xchg
push
lret
push
movsb
insb
idivl
dec
add
xchg
cld
cs
sti
xor
ret
mov
leave
mov
mov
mov
dec
lahf
iret
int
lahf
sbb
push
xor
das
sbb
scas
sbb
mov
mov
pop
or
cwtl
inc
adc
ret
cli
or
lock
scas
mov
bound
jae
pop
mov
mov
mov
push
sbb
sub
sar
ds
lahf
jecxz
ret
adc
in
cmp
cmpb
nop
jl
in
popa
mov
add
rcrb
in
mov
push
dec
inc
rcll
test
cmpsl
jg
dec
js
repnz
call
sbb
rclb
sbb
fdivrl
call
aaa
adc
pushf
sbb
add
and
and
pop
jecxz
aaa
int3
fstpl
movsl
pusha
push
jmp
or
add
lods
leave
push
dec
mov
outsb
or
orl
adc
jb
xchg
cmp
add
mov
mov
rol
dec
in
cmp
frstor
mov
loope
mov
sbb
out
or
mov
je
int
ja
pop
sbb
jnp
lods
sub
xor
cs
test
cmpsl
or
and
loope
lret
pop
or
pop
push
repnz
stos
jl
lcall
pop
jg
punpcklwd
out
push
jmp
outsl
mov
jecxz
jecxz
aad
pop
out
add
mov
outsl
inc
sub
jo
and
add
dec
inc
cmp
push
sub
mov
push
subl
cmpsb
sub
jb
adc
add
inc
sub
pop
push
add
and
jl
pop
rorl
sbb
push
cld
negb
sbb
and
lahf
ficoml
stc
xlat
xchg
test
mov
jecxz,pn
dec
inc
mov
aas
jbe
div
or
icebp
xchg
sub
inc
iret
push
pop
add
pop
stos
adc
mov
call
fcmovnb
jns
jmp
test
cwtl
add
fildll
sbb
mov
rclb
mov
or
fldenv
outsl
add
mov
scas
fwait
lret
pushf
nop
int3
jb
and
pop
xor
jns
inc
jg
bound
stc
ss
inc
mov
cmp
adc
mov
xchg
jae
or
pop
mov
inc
mov
and
xor
lods
add
fsubs
sbb
inc
push
cmpsb
xchg
inc
mov
daa
mov
adc
sbb
inc
stc
cmp
pop
addr16
cmpsl
data16
jae
or
pop
cld
cmpsl
xchg
cmp
cli
jmpw
cld
dec
inc
pusha
and
jle
insb
push
jle
xchg
sahf
inc
mov
push
add
jbe
stos
sbb
lahf
aas
mov
ljmp
push
xchg
sbb
popa
adc
addl
loope
cmpl
xor
adc
pop
mov
rol
and
cmp
xor
lcall
ss
push
sbb
repz
repnz
in
scas
ja
xchg
into
xchg
jg
add
loopne
xchg
aaa
or
sub
in
aad
sbb
fsubrl
in
jbe
lds
mov
in
mov
std
hlt
xchg
inc
bound
pop
lds
or
call
cld
inc
mov
cmpsl
outsl
pop
scas
pop
add
adc
or
outsl
pop
movsl
aaa
incl
mov
fisttps
movsl
popa
push
inc
int
dec
pop
fs
sbb
pop
inc
sbb
and
sub
das
xor
rolb
sub
stc
xor
pop
iret
push
fcompl
movsb
insb
sbb
lcall
dec
insb
in
je
mov
mov
push
push
rol
jo
scas
fstpl
arpl
mov
fwait
nop
cwtl
push
cmc
test
inc
inc
jle
sub
stos
and
sub
iret
shll
add
stos
push
lds
ret
popf
arpl
repz
inc
idivb
add
cmpsb
jbe
sbb
push
and
xor
std
cmpsl
fs
shll
sub
adcl
sub
add
xor
xlat
test
cs
and
lds
sub
add
or
fists
ds
inc
cmpsb
add
loopne
movsb
std
mov
sub
xchg
cwtl
lods
test
test
arpl
add
dec
sbb
ficompl
cltd
sbb
add
in
repnz
pusha
adc
mov
xor
mov
test
sub
adc
cmp
mov
stc
imul
test
addl
xchg
fcoml
aam
push
mov
pmaxsw
push
ds
ja
pop
rcll
fiaddl
xor
fidivl
lods
shl
jl
sbb
sbb
imul
add
test
xchg
sbb
xor
mov
pop
xchg
jae
cwtl
std
lods
sub
adc
mov
sbb
mov
sub
cmpsl
pusha
fdivs
xor
mov
or
and
push
adc
dec
sub
push
mov
pop
mov
sub
out
sbb
adc
roll
repnz
inc
dec
jo
sahf
adc
cmp
bound
mov
clc
int
and
divb
imul
mov
mov
xchg
pop
dec
cmp
xchg
addr16
or
jns
mov
aas
in
fsts
sub
pop
out
in
inc
push
lock
fld
insb
aas
add
or
pop
sub
push
cmc
add
adc
and
jmp
sbb
pop
repz
clc
lock
loope
mov
aad
xor
pusha
jg
inc
sbb
loope
rorb
imul
in
and
jg
sbb
rclb
sbb
push
test
xor
mov
daa
ds
xor
sub
and
cld
pop
jle
inc
cli
or
mov
dec
and
jo
outsl
aaa
and
pusha
test
cmp
dec
fsubs
inc
lods
pop
and
sub
js
push
dec
notb
stos
xchg
repnz
xor
jbe
sub
push
in
arpl
or
pushf
and
pop
sub
into
sahf
out
inc
sub
testb
push
pop
or
loope
sbb
imul
sbb
ret
sbb
leave
enter
and
jp
fchs
shll
mov
popa
aad
mov
nop
adc
jno
fidivs
cmp
pop
sub
cltd
fdivs
cli
xor
pop
imulb
gs
xlat
pop
js
or
out
pop
mov
cwtl
das
icebp
sub
jno
insl
test
pop
sahf
inc
je
push
inc
mov
cmp
xor
and
sbb
fidivrs
sbb
clc
fidivrl
jecxz
in
shrl
cmpsb
scas
lds
push
jl
shll
ret
mov
cmpsl
popf
jne
test
loop
ja
lods
pop
push
in
out
push
lods
jno
sbb
into
inc
adc
ljmp
ds
pop
jnp
pop
adc
sbbl
jbe
push
std
lods
mov
ja
add
lret
cmpb
push
fcoms
sbb
push
cmpsl
mov
pop
or
push
pop
addl
xorl
ret
jno
xchg
sub
sub
cmp
xlat
push
xchg
mov
dec
xlat
jbe
or
inc
inc
sarb
call
sub
test
sahf
or
pop
sbb
jae
sahf
negb
or
hlt
dec
pop
lea
test
in
pushf
fsubs
outsl
xlat
cmp
pusha
pop
cmp
movsl
jle
add
jp
mov
dec
mov
and
in
jne
xlat
fwait
or
xor
dec
mov
inc
cmpsl
push
mov
in
mov
arpl
insl
popf
negb
or
mov
mov
pop
dec
mov
pop
xor
cmpsb
nop
add
mov
push
aaa
js
push
dec
adc
jge
pop
aam
ror
mov
lock
pop
aam
test
cmpsl
ret
and
pusha
aad
shll
xor
leave
shl
cmp
or
or
aas
fs
fwait
jecxz
add
sub
aam
fistps
jb
mov
cs
cld
das
or
jnp
into
fstpt
sbb
jae
loope
push
insb
sub
sub
dec
lret
in
enter
rcrl
ret
mov
mov
out
outsl
add
cld
xor
js
sbb
sbb
xor
dec
jbe
mov
jae
divps
sub
ja
fstps
fs
cltd
sbb
fdivrl
js
mov
ljmp
cli
adc
cmc
mov
add
stos
lret
mull
jno
loopne
loopne
sub
sbb
and
lock
lock
dec
dec
scas
xchg
clc
fadd
pushf
push
dec
xor
inc
js
and
cltd
adc
pushf
out
fs
cmpxchg
mov
inc
out
jo
gs
lods
nop
jbe
repnz
sbb
sub
ds
icebp
inc
iret
jbe
xchg
jge
cmp
mov
stos
cmp
pop
ror
pop
out
cmp
or
call
pushf
mov
jmp
pop
in
mov
xor
mov
inc
sbb
test
das
adc
rcl
aad
jl
ss
in
test
push
mov
int3
orl
add
ds
ret
xchg
aam
cmp
rcr
sbb
ja
jmp
clc
fildl
jg
shrl
lds
daa
outsl
cmp
lea
cmc
int
out
mov
push
or
loopne
and
jp
rcr
insl
jecxz
or
sub
mov
andl
popa
or
jnp
loop
xchg
mov
dec
mov
adc
dec
mov
pop
cmp
icebp
daa
xlat
xchg
jg
xrelease
xlat
negl
scas
cmpsb
xchg
inc
mov
and
punpckhbw
rolb
mov
inc
push
je
outsb
bound
inc
lret
test
enter
jmp
negl
mov
in
or
ja
jg
and
and
call
in
jp
add
lods
xchg
rcrb
rcrl
sub
fildll
xchg
mov
fcmovb
fnsave
inc
adc
mov
outsl
xor
jl
pop
adc
mov
fcomps
adc
mov
cmp
adc
ret
push
into
aas
jae
push
out
push
mov
mov
test
cmp
je
pusha
push
test
cltd
mov
adc
inc
xchg
ja
push
xor
rorl
fcmovu
adc
or
dec
gs
sbb
inc
repz
cmp
std
into
inc
and
mov
cmp
pop
jg
bound
mov
dec
xchg
mov
mov
dec
jge
inc
addr16
movsb
mov
rcl
sub
sub
aas
frstor
cmp
xchg
aad
lahf
jnp
and
outsb
or
in
and
in
bound
jno
int
in
mov
jbe
lods
shll
pop
out
arpl
inc
jle
xor
cmp
testl
push
add
outsl
hlt
mov
dec
js
sarb
mov
push
popa
adc
jmp
hlt
imul
daa
sar
cltd
andl
mov
repnz
subb
cmpsl
daa
mov
jp
xchg
or
push
mov
fistps
jo
sbb
mov
mov
dec
nop
test
xchg
fsubrp
ds
sub
xchg
dec
push
dec
mov
outsl
mov
movsb
jo
cmp
pop
shlb
push
sbb
lods
pop
mov
in
push
shrl
xchg
fstl
adc
out
xor
add
int
mov
xchg
cmp
cltd
xor
and
je
inc
adc
out
aas
loope
lods
out
sahf
scas
insl
outsl
jl
dec
cwtl
mov
and
cmp
pop
mov
popf
push
add
sub
xchg
inc
inc
testb
jb
adc
jg
xor
lds
clc
roll
lock
mov
dec
or
xorb
lods
add
sub
jmp
lock
enter
ret
in
clc
lds
sbb
xor
xor
leave
aas
out
vorpd
jb
inc
push
push
or
aad
pop
cli
jmp
xor
aaa
push
pop
repz
push
or
push
clc
push
mov
movsb
jecxz
xor
sbb
or
nop
mov
pop
push
jae
inc
aas
adc
decb
adc
rorl
fcmove
dec
sub
rolb
mov
sub
movsb
test
pop
sarb
and
dec
into
std
shll
fsubrs
sarb
sar
repz
enter
lds
pop
lods
std
push
jge
repz
int
mov
dec
ret
xchg
outsl
or
cmc
xchg
mov
xchg
movsb
hlt
push
sub
sti
inc
in
adc
lahf
stc
out
sbb
add
imul
fs
fnstenv
and
mov
mov
nop
dec
sahf
lods
add
mov
lods
out
fwait
js
bound
out
js
in
adc
pop
inc
lock
ss
jnp
dec
bound
daa
cmp
and
pop
jae
push
lret
ret
sti
rsqrtps
inc
or
add
mov
inc
mov
adc
sbb
sub
loope
jno
std
cs
mov
loope
xchg
andb
in
pop
mov
repz
xchg
adc
stos
stc
scas
xchg
inc
addr16
adc
adc
sarl
mov
call
gs
jecxz
lds
fimull
in
dec
sub
out
fs
loop
jecxz
into
scas
and
sub
jmp
cmp
jae
movsl
sbb
lods
jns
mov
xchg
or
xor
sub
jmp
sub
sbb
sub
pop
int
aaa
test
scas
cmpsl
mov
sub
push
pop
repz
addr16
aad
cmc
xlat
push
loopne
jno
gs
repz
shll
xchg
push
adc
out
adc
push
mov
sbb
rcrl
mov
xor
xchg
outsb
cli
xchg
ret
sbb
sub
xchg
push
out
ja
nop
mov
add
dec
jge
stos
popa
sub
cmpb
test
mov
out
out
jge
movsb
lds
enter
dec
sahf
lds
clc
into
fnstsw
imul
mov
sahf
fs
push
xchg
dec
lea
sub
movsb
loopne
mov
xor
inc
leave
dec
cmp
hlt
mov
xor
je
fs
inc
test
jle
dec
hlt
ss
das
mov
iret
fs
jmp
adc
sub
dec
dec
sbb
fidivrl
push
push
jno
mov
mov
rcll
inc
lret
divb
mov
xchg
pop
shrl
out
sbb
in
fstpt
lods
or
les
jb
and
pop
mov
pop
add
fisubrs
cwtl
ss
movsl
divb
popf
gs
lcall
and
cmp
cmp
int3
cmp
pusha
mov
adcb
pusha
cmp
jle
lods
mov
pushf
jb
divl
adc
push
repnz
cbtw
popa
add
push
inc
jae
inc
fucomi
dec
jge
icebp
and
push
mov
pushf
mov
pop
push
xor
pop
push
adc
jecxz
fnstenv
mov
xor
push
inc
push
adc
sti
dec
lea
rclb
jbe
jne
sbb
or
imul
jbe
sbb
pop
dec
fsubrp
aam
mov
add
fcomps
lock
jg
mov
mov
push
ret
test
inc
sbb
out
and
mov
sub
adc
in
add
mov
sarl
ja
or
xchg
pop
or
mov
mov
push
hlt
ret
scas
pop
mov
mov
jns
gs
ret
in
dec
jno
pop
daa
repnz
push
out
movsl
inc
ret
xor
push
sbb
or
mull
sti
add
cmp
mov
insb
jae
mov
push
jb
gs
add
and
pop
push
jbe
insl
lret
ja
lret
popa
sub
test
xor
insb
out
lea
mov
stc
lahf
jno
or
push
cwtl
dec
insl
fistl
push
pop
pop
xor
stc
pop
mov
addb
lods
sahf
and
and
hlt
stos
ret
jl
mov
sbb
cmpsb
scas
cmp
shl
lcall
mulb
enter
add
mov
pop
lcall
mov
test
mov
subb
pop
sub
jo
jle
cmpsl
dec
mov
push
loop
aad
sahf
decb
mov
andb
test
add
pop
in
nop
ret
in
or
jne
sbbb
ds
loop
inc
adcl
dec
fbld
add
dec
jecxz
call
rcll
outsl
and
in
pop
adc
js
pop
push
push
cmpsl
sub
jo
test
pop
jge
and
scas
notl
add
mov
sbb
cmp
sbb
aam
sti
mov
push
outsb
push
ja
mov
loop
jo
or
pop
outsb
adc
sbb
xor
cmp
push
xor
xchg
cmp
sbb
add
sti
dec
push
push
sarl
inc
pop
dec
add
and
pop
cli
sarl
sti
add
rcll
bound
dec
jns
inc
inc
fisubl
std
xor
sti
je
push
out
xchg
cmp
mov
sub
and
clc
imul
add
ret
movsl
push
push
scas
pop
repz
mov
sub
mov
inc
lea
push
dec
jo
add
pop
xor
mov
push
cmp
push
jge
fwait
das
mov
in
fisubrs
and
add
sub
imul
dec
repnz
xor
les
iret
aam
addps
repz
movsl
outsb
dec
sarl
out
scas
or
iret
mov
mov
mov
push
ljmp
test
cltd
fstp
test
or
sub
jecxz
repnz
push
out
dec
xchg
add
in
ret
shl
xor
sbb
pop
dec
dec
or
nop
cmp
cmpsb
and
fcoms
enter
sub
in
test
loope
add
adc
adc
cmp
insl
mov
jnp
in
vdivsd
int3
rclb
clc
int3
dec
and
movd
fdivs
add
dec
mov
cmpsb
fs
daa
pop
adc
mov
mov
and
cli
xchg
icebp
dec
xchg
sbb
cmp
mov
cmp
adc
pop
add
jns
inc
and
cmp
jmp
fsubl
ss
subb
subb
push
loopne
out
mov
pop
pop
mov
daa
push
inc
sbbb
sbb
ret
add
push
xchg
or
ficomps
and
ja
and
push
jge
mov
or
aad
mov
push
std
xor
icebp
and
lods
push
and
in
ljmp
enter
lahf
or
mov
mov
fidivrs
xchg
sbb
lock
stos
inc
cmp
test
test
push
mov
addr16
xchg
rcll
pop
aam
sub
xchg
or
dec
popa
mov
and
pop
jecxz
adc
mov
lahf
cmc
movsl
popf
fistps
mov
mov
andb
out
sub
popf
sub
aad
jo
sbb
mov
lds
push
fwait
jl
imul
rorb
mov
push
aad
lret
mov
sbb
fsubrs
out
cli
lret
sbb
dec
jle
xchg
jb
dec
js
mov
cmp
mov
insl
out
cld
and
lock
stos
pushaw
and
xchg
repnz
popa
out
cmp
or
scas
or
jge
push
cltd
cmp
data16
and
in
scas
lret
mov
stos
add
out
cmpsb
sbb
jmp
lea
addl
scas
mov
jl
imul
clc
ds
jb
pushf
lret
aas
test
flds
xor
xchg
enter
sub
mov
cltd
cmp
mov
xchg
adc
std
sti
es
push
cmp
mov
sub
cwtl
stos
and
jl
mov
popa
fsubrp
nop
repz
dec
fs
sub
mov
and
xchg
sub
push
fnsave
pop
sbb
push
je
inc
std
jmp
call
js
gs
dec
xor
shl
mov
stos
clc
mov
arpl
dec
mov
fimuls
dec
add
sub
dec
dec
imul
jbe
jns
lock
cmp
dec
aas
xor
in
sbb
lock
ret
cmp
cmc
lcall
adc
lret
leave
push
push
xchg
cmp
scas
loope
jle
xor
sub
fdivl
mov
adc
or
or
rep
cmp
data16
xor
jge
push
jmp
pushf
push
jno
jno
movsb
int
ret
gs
mov
jecxz
jne
push
and
jns
sbb
sub
outsb
push
jno
xchg
mov
outsl
inc
inc
or
fs
pop
pushf
rcrl
xchg
cmp
jns
mov
cmc
inc
inc
gs
outsb
fsubl
in
and
test
jmp
lcall
movsb
xchg
dec
outsl
add
pop
push
adc
loop
sbb
sahf
push
inc
cmp
rep
insb
lods
xchg
stos
shll
cmp
xchg
mov
cmp
fimuls
sahf
mov
mov
movsb
mov
cmp
mov
ja
cmp
scas
aam
outsl
inc
loopne
mov
lea
je
jl
mov
stc
jb
mov
data16
or
xor
mov
add
ss
mov
xlat
into
xchg
icebp
cmpsl
scas
inc
push
push
mov
gs
scas
cmp
mov
push
fnstcw
inc
out
inc
addr16
fs
js
push
xchg
jbe
dec
add
lret
into
jp
aas
pop
fdivr
cmp
test
jnp
pop
pop
sbb
inc
lods
cmp
in
xor
add
adc
addr16
jecxz
cmp
push
subb
or
int
sub
sbb
idivl
xor
das
test
lcall
dec
cmp
idivb
ljmp
sub
cmp
sbb
in
sbb
inc
aaa
mov
push
decl
fmuls
fadds
dec
test
adc
mov
push
push
cwtl
jecxz
xlat
bswap
xor
push
sub
insb
xor
and
mov
decl
cs
cwtl
add
or
mov
outsb
mov
and
xor
ret
in
xchg
inc
push
add
push
clc
inc
mov
and
mov
andb
loopne
inc
pop
mov
mul
bound
fcoml
dec
lds
pop
pop
push
arpl
inc
push
mov
jns
leave
cmp
lock
or
xchg
pop
mov
xchg
mov
sti
out
xchg
xor
pusha
mov
sbb
mov
dec
push
mov
push
movsl
sti
mov
sbb
dec
cwtl
into
cmp
and
mov
pop
icebp
push
fadds
pusha
std
das
addb
and
dec
lret
subb
mov
inc
adc
push
xchg
jle
mov
xor
mov
mov
rorl
lcall
xor
enter
xchg
shll
adc
xor
pop
and
adcb
and
pop
fists
push
rol
jle
cld
icebp
fcmovbe
add
xor
xor
cmc
xchg
cmp
adc
pop
mov
mov
addr16
fld
dec
sub
ds
int
xchg
addr16
mov
das
push
xor
flds
daa
aad
inc
bound
das
push
xlat
cltd
fcmovnbe
mov
lds
outsl
xchg
mov
sahf
aaa
ret
inc
push
iret
out
daa
or
push
adc
xchg
pop
xor
sub
into
outsl
xor
jle
cs
daa
dec
gs
ss
sbb
dec
xchg
add
add
loopne
aaa
mov
sub
push
xor
mov
inc
lret
push
or
push
cwtl
mov
jns
hlt
jnp
xchg
sub
mov
shll
in
in
mov
out
pop
mov
subb
xchg
add
mov
pop
push
lods
and
in
insl
outsb
push
or
fstpl
mov
icebp
insl
push
outsl
adc
pop
fucom
mov
pop
mov
jb
mov
or
mov
xor
into
add
mov
sub
jg
out
sarb
jns
pop
aam
repnz
xor
cmp
pop
pop
jl
into
icebp
push
jecxz
xchg
sub
cmp
mov
jg
xchg
sbb
mov
and
and
cmp
sti
push
stos
xchg
scas
lret
push
loope
cmp
stos
iret
dec
mov
inc
jnp
insb
repz
jg
jbe
jnp
dec
pop
xor
jp
cmp
scas
arpl
cmp
add
stc
rclb
movsb
inc
jl
sahf
xchg
mov
jl
add
cmp
dec
loop
or
ds
dec
in
stos
lods
popf
push
test
cmp
sahf
aaa
sbb
mov
cmp
mov
enter
das
and
in
sub
pop
inc
rorb
mov
data16
bound
pop
jp
inc
dec
sbb
mov
push
adc
das
xor
loopne
push
sub
adcb
sub
sub
mov
std
sbb
push
push
or
lret
mov
ret
push
lods
dec
and
mov
stos
mov
je
xor
sarl
movb
das
iret
dec
inc
jns
in
lea
lock
push
loopne
in
mov
outsb
inc
mov
fstpl
pop
cmp
insb
shlb
adc
stos
xor
inc
or
mov
aad
loop
xchg
gs
test
mov
imul
jmp
lods
sti
mov
xchg
sub
in
jb
adc
daa
mov
add
push
pop
xor
rcrb
stos
jne
inc
addr16
cmp
in
xchg
sub
in
sbb
xor
xchg
cmpsl
xchg
fwait
push
cmc
ss
cmp
jmp
daa
repnz
fs
rclb
insb
out
and
add
or
lds
ror
mov
xlat
mov
pop
push
mov
pop
lods
stos
ret
fildll
fiadds
xchg
mov
pop
aaa
clc
sbb
icebp
xchg
lock
scas
int3
sahf
sbb
pop
shl
fsub
jnp
fmuls
mov
mov
pusha
dec
push
stc
lret
pop
repz
ficoml
les
rolb
lahf
bound
fs
sub
ds
cmp
fdivr
sbb
cmp
dec
sbb
jg
fistps
cld
add
ret
adc
ret
adcb
loop
dec
sub
and
adc
mov
in
or
ret
and
out
adc
sbb
jge
xchg
je
and
mov
mov
lahf
xor
push
cmp
mov
cmc
xchg
jecxz
add
xor
add
mov
ljmp
push
psrlw
adc
lds
mov
ss
xor
mov
adc
out
mov
and
push
daa
mov
lcall
lea
push
jo
jnp
lret
xchg
iret
jg
add
inc
jmp
push
mov
test
pop
pop
xor
popa
fnstenv
xlat
aaa
push
cmp
push
xchg
dec
fimuls
sub
add
push
mov
call
loop
adc
addb
std
ret
lcall
pop
clc
push
hlt
jp
lods
ljmp
dec
push
push
push
jl
fs
sbb
dec
cld
sbb
jge
cmpb
psubsw
sub
les
adc
xor
push
pop
shrl
sub
rolb
int3
call
movsl
add
xor
jae
adc
mov
subb
jbe
pop
loopne
or
push
orb
hlt
xor
push
pop
xchg
enter
dec
out
xchg
and
aas
repnz
rcrl
cmp
imul
pop
jo
inc
in
scas
push
mov
dec
or
in
popf
movsb
or
push
sbb
aad
add
sbb
cmpsl
dec
add
inc
jo
cmpsl
dec
in
fwait
cmp
inc
jp
outsl
jge
ss
inc
mov
sbb
mov
aas
fisubrl
mov
cmova
mov
hlt
fbstp
cld
mov
int3
scas
mov
pop
push
mov
adc
cs
pushf
repnz
xor
xor
mov
rolb
mov
stc
ja
push
sub
mov
mov
cmp
sbb
inc
push
or
mov
xchg
outsl
fnstcw
es
mov
adc
jge
inc
xchg
movsb
fidivl
xor
je
lret
adc
jne
dec
aam
je
lea
xchg
in
push
mov
mov
push
inc
pusha
push
incl
jb
cld
cltd
hlt
imul
test
xchg
enter
dec
inc
xor
adc
sub
inc
mov
inc
popa
test
icebp
add
into
gs
and
shll
pusha
icebp
or
in
cli
push
adc
sbb
das
add
xor
cld
or
or
cs
mov
push
sub
and
lahf
adc
adc
and
mov
fmull
cmpsb
mov
and
mov
outsb
test
aaa
aas
xchg
mov
jae
dec
fisubs
jno
dec
ret
ljmp
sub
mov
lds
sub
pop
stc
loop
test
or
ret
jg
mov
pop
bound
cmp
push
xchg
hlt
lock
pop
xlat
shl
add
test
inc
jle
scas
dec
cmp
xor
cmp
mov
jnp
aad
aad
jnp
cmc
repz
pop
cmp
stos
cmp
mov
rcll
inc
inc
jmp
insl
sub
mov
dec
js
inc
cmp
pop
xchg
sbb
test
pop
pop
mov
data16
ljmp
mov
in
in
lahf
mov
mov
mov
insb
rclb
push
xchg
aas
inc
fs
sbb
daa
xlat
into
inc
arpl
xchg
repz
dec
out
shlb
scas
stos
and
std
jmp
jbe
cmp
mov
mov
sbb
push
fisttpll
jg
int
stc
xchg
movsl
ret
sahf
je
cwtl
xor
leave
push
test
repnz
sub
ljmp
rsqrtps
filds
fnop
or
and
jl
jb
and
repnz
jmp
push
dec
pop
imul
lret
dec
jp
xor
lea
rcr
and
mov
mov
add
push
jb
idivb
xchg
inc
mov
mov
jl
xchg
fldl
adc
push
sbb
jno,pt
add
xchg
xlat
cmp
mov
jp
test
push
sarb
fisubl
arpl
insl
ret
add
lods
adc
adc
cld
sbb
ror
inc
mov
clc
mov
sbb
push
pop
movsb
icebp
jle
and
nop
popf
pushf
addr16
pop
jns
vpaddd
pusha
imulb
mov
push
fsubrl
cwtl
test
sbb
jne
hlt
inc
mov
adc
lea
xor
ror
xchg
nop
movsl
out
bnd
shl
cmp
xlat
orb
dec
sahf
and
test
sub
icebp
mov
scas
mov
and
arpl
or
mov
dec
cmp
or
xchg
adc
jmp
outsb
in
out
les
inc
loop
xor
cmp
dec
mov
ret
mov
mov
jp
xchg
mov
adcl
and
mov
and
shrl
clc
cmp
iret
pop
adc
lods
mov
adc
inc
jns
ss
cmpsl
loop
cmc
adc
jmp
pop
mov
aam
mov
lcall
push
imul
push
pop
add
pop
xchg
loop
popf
dec
cmp
fadds
int
fistl
mov
pop
xchg
std
popf
addl
and
stos
scas
jns
push
ja
test
repz
loope
fs
inc
inc
dec
les
xchg
adcl
hlt
test
call
dec
xor
mov
mov
rcll
int3
sti
lcall
sub
cwtl
push
cmp
lods
bound
inc
push
jmp
dec
fadd
das
and
mov
into
inc
and
sbb
jmp
xorl
sbb
stos
adc
mov
lods
mov
pop
push
adc
orb
popf
and
add
mov
out
dec
test
xchg
fidivrl
pushf
decb
or
inc
sbb
or
push
jle
pusha
in
xor
popf
dec
inc
aam
je
jge
ret
add
xor
inc
popl
dec
jb
or
pushf
xchg
inc
sbb
xor
xchg
and
test
mov
jbe
ss
push
or
lcall
push
lds
mov
jbe
sbb
mov
xor
rcr
lea
sub
cmp
cmp
movsl
push
les
pop
rorb
pop
sbb
or
inc
dec
sub
xchg
adc
or
mov
popf
push
xchg
data16
push
xor
and
movsb
dec
repnz
popf
inc
adc
mov
mov
pop
pop
into
roll
push
out
js
adc
sbb
pop
sahf
mov
imul
mov
aam
nop
sti
orl
xchg
jle
jns
int3
mov
or
jae
mov
jecxz
and
rclb
pop
dec
lds
mov
mov
fnstenv
dec
imul
daa
idiv
xchg
ljmp
cmp
lcall
mov
mov
jmp
cmp
sub
xchg
in
pop
fmull
lret
fsubs
ret
sbb
into
xchg
push
and
mov
sbb
xchg
inc
mov
xor
or
scas
sub
adc
mov
popf
cmc
pushf
xor
in
jne
loop
arpl
and
popa
es
in
test
pusha
es
pop
xchg
mov
sub
out
loope
push
aaa
dec
add
xor
xchg
movl
lods
ret
shl
pusha
out
pop
aaa
dec
adc
leave
pop
icebp
aaa
mov
inc
pop
mov
jb
repnz
or
xchg
inc
inc
inc
lahf
jns
fwait
int3
cmc
cmpsl
mov
mov
aaa
push
js
mov
jno
push
call
adc
out
mov
shll
addb
and
decl
sti
lods
push
and
imul
push
cmpsb
in
cmp
mov
cmp
inc
imul
repz
dec
jle
sub
pop
pop
enter
orb
dec
imul
mov
lock
mov
jne
mov
loop
pop
mov
sub
cmp
push
push
sahf
test
xchg
repz
call
mov
sub
sub
insb
cmp
jbe
test
push
lods
push
pop
pop
xchg
ljmp
cmp
inc
jb
mov
pop
std
js
in
dec
adc
aas
adc
push
or
outsb
push
jae
repnz
xchg
lret
push
jecxz
leave
adc
lds
xor
cmp
fiadds
ficompl
cs
loop
sub
xor
mov
xlat
aam
aad
jmp
enter
gs
ret
mov
mov
sub
lods
xor
mov
push
push
cmp
sbb
iret
xorb
aaa
xchg
dec
jecxz
cmp
loopne
push
xor
xchg
jnp
and
sbb
aas
jmp
jmp
std
adc
test
mov
jge
out
mov
jb
dec
les
or
pushf
rolb
xor
sti
xchg
cmp
stos
mov
xchg
cmc
add
outsb
and
cmpsl
add
cmp
push
xor
jmp
popa
outsl
cwtl
mov
mov
xchg
push
xor
push
insb
std
rorl
lods
call
sub
arpl
enter
pop
movsl
dec
xchg
fiaddl
fcom
xchg
scas
loope
test
inc
cmc
and
ss
jns
hlt
in
adc
stos
mov
xor
das
loop
mov
jmp
std
ficomps
pop
add
mov
rcrl
das
sbb
sbb
mov
aaa
fildll
lods
cwtl
cli
and
out
lods
xor
mov
inc
enter
sbb
lahf
pop
fiaddl
test
xchg
mov
cmp
int3
jmp
loop
mov
mov
lcall
inc
dec
ficoms
sub
lahf
out
ss
and
shll
in
xchg
int3
mov
mov
dec
int
insb
jbe
inc
mov
loope
sbb
popf
adc
int
mov
mov
adc
fs
xor
clc
adc
push
arpl
hlt
dec
fmul
jge
cwtl
fdivs
fstpl
clc
aaa
out
test
sub
or
fldenv
int
sub
pop
pop
xor
rep
xchg
sub
inc
call
or
cld
sbb
sub
push
pop
xchg
int3
sub
adc
popl
ret
jb
icebp
ret
push
adc
xchg
imul
sbb
dec
mov
sub
dec
ja
adc
mov
mov
sti
mov
fwait
negb
xchg
bound
loope
lds
fdivr
pop
mov
fstps
rol
cwtl
add
mov
jmp
in
xor
push
lretw
es
ficomps
rolb
pop
shll
jb
stos
loopne
or
dec
rcll
sbb
cmp
jae
ret
andl
push
test
or
int3
add
out
js
out
je
pop
jae
inc
inc
or
cld
insl
and
add
sbb
or
lds
clc
xchg
xor
jg
jbe
xor
pushf
xchg
mov
jae
mov
or
jns
das
sbb
pusha
inc
mov
dec
sbb
inc
outsb
pop
and
shll
lods
push
ss
or
std
xor
addr16
aas
jb
mov
xchg
sbb
out
mov
push
cwtl
mov
sbb
aaa
pusha
loop
mov
mov
cmp
fnstenv
sub
xchg
int
test
or
adc
cltd
jne
jbe
mov
ret
xchg
jle
pushf
cli
mov
adc
out
push
sbb
sbb
dec
sbb
push
in
lcall
mov
push
mov
ret
cmpsb
sarb
xlat
hlt
shlb
imul
jecxz
sbb
push
pop
lcall
shr
cmpl
dec
stos
add
inc
adc
fcoms
cmp
roll
add
repz
mov
adc
pop
cmp
or
mov
test
sahf
xchg
lea
jge
subb
loop
pmulhw
cli
cs
mov
frstor
orl
cmp
ja
sub
aaa
loopne
mov
dec
ficoms
lcall
out
das
aam
setbe
mov
fisubrs
push
cld
mull
test
push
pop
enter
mov
jae
push
aaa
and
mov
cmp
mov
inc
and
aam
jb
ljmp
aaa
jbe
loopne
popa
icebp
pushf
jae
dec
in
stos
adc
aam
pushl
push
loope
fwait
lret
sahf
testl
jns
mov
test
icebp
pop
adc
mov
shrl
push
sbb
xchg
jg
cmp
push
sbb
scas
adc
cmp
mov
add
lcall
pop
jae
jmp
inc
pop
add
jns
add
dec
dec
mov
mov
push
push
or
or
or
dec
cmp
xchg
dec
aas
mov
testb
lea
pop
lods
sbb
push
cmp
mov
sbb
mov
xor
mov
icebp
mov
mov
or
inc
cmp
dec
push
mov
pop
insl
ljmp
out
adc
fldenv
lcall
call
popa
lea
cs
sub
fists
push
test
test
imul
cmp
and
movsb
cltd
adc
lods
mov
stos
faddp
loope
lahf
cwtd
pop
insb
aam
insl
sub
ret
xor
push
imul
ds
out
std
jmp
xor
xchg
push
inc
jno,pn
aam
jmp
inc
lods
scas
jb
inc
add
mov
cmp
inc
jle
dec
in
inc
in
leave
jmp
les
adc
add
and
into
lret
pop
add
fsubrs
addr16
pusha
adc
xchg
pop
mov
cmc
imul
roll
insl
fsubrp
pop
decb
pop
cmpsl
sbb
stos
lahf
mov
stos
test
ror
xor
dec
ret
daa
jge
push
loopne
data16
fisubrs
cli
movsl
push
das
mov
push
xor
mov
pop
clc
mov
fwait
in
inc
fidivrl
pop
dec
jns
mov
or
fmull
ja
imul
lods
outsb
jmp
test
xchg
lods
aas
mov
pop
add
and
ret
push
pop
fidivrs
sbb
xchg
jp
push
ret
aam
sti
loop
inc
lods
int
pop
test
pushf
jp
add
lods
adc
add
je
jp
int3
mov
cmp
bound
push
push
add
lcall
push
mov
mov
stos
mov
cwtl
and
pop
inc
lods
or
mov
inc
loope
aas
rclb
inc
pop
inc
pop
sbb
repnz
pop
loopne
stos
js
mov
hlt
stos
and
sti
lds
fildl
pop
push
loopne
imulb
add
js
adc
sbb
push
fdivrs
cmpsb
clc
xor
add
adc
rcrl
js
fistpl
mov
ret
cmp
push
jmp
test
cmp
sbb
data16
pushf
mov
sub
addl
pop
loopne
sbb
dec
addl
mov
xlat
cmp
mov
xchg
lcall
and
cmpsl
lods
mov
stc
lea
lcall
rcrb
lret
pusha
aad
dec
lahf
push
mov
roll
rorb
or
dec
mov
mov
fs
mov
std
jmp
lds
inc
fisttpl
mov
lock
int3
insl
xor
xchg
sub
mov
mov
push
dec
fnstsw
dec
sbb
lcall
mov
jmp
imul
or
cmp
jmp
or
shrl
mov
jno
sahf
fstp
mov
mov
dec
mov
fldcw
jb
mov
loop
pop
pop
sbb
add
mov
fldenv
imul
pusha
and
jecxz
imul
popa
dec
inc
cmc
cmpsb
mov
pop
lock
nop
dec
sub
lret
icebp
fnstsw
mov
mov
inc
das
js
mov
iret
subl
pop
mov
pop
aam
cmp
imul
rorb
jns
mov
push
jle
dec
xchg
cli
jae
loope
not
aaa
lret
inc
xchg
lret
notb
sbb
or
and
sub
dec
ret
das
out
mov
cmp
jl
outsb
clc
dec
pushf
faddl
xchg
ret
cwtl
xor
scas
stos
mul
cwtl
pushf
jge
mov
sub
jns
mov
jecxz
sbb
ficomps
or
scas
inc
xchg
pop
inc
daa
in
mov
or
jno
mov
aam
inc
movsb
or
pusha
jecxz
enter
mov
ds
push
pop
test
adc
sarl
jg
sub
sbb
xchg
inc
les
out
iret
sbb
test
add
fldt
addl
fsubrl
fiaddl
int3
ficomps
dec
sarl
lods
shr
fstpt
inc
lahf
xor
push
mov
pop
jge
mov
sbb
sbb
daa
fcoml
ret
fnsave
popa
push
xchg
and
push
add
jno
mov
mov
or
inc
ja
shlb
jp
lret
pop
pop
xor
push
sbb
inc
sti
call
decl
mov
mov
pop
clc
sub
jo
popa
in
mov
sub
and
lcall
rcll
sub
push
mov
imul
das
or
data16
in
cmp
add
inc
std
push
lds
out
imul
cwtl
adcb
sub
pop
mov
shrb
pop
add
cmc
in
xchg
or
loopne
fs
cmp
inc
imul
aas
in
mov
sbb
mov
fisubrl
dec
push
popl
les
cwtl
mov
hlt
jp
clc
inc
nop
xchg
or
cltd
dec
push
orb
and
and
and
and
inc
dec
push
icebp
jns
lods
mov
mov
stc
and
clc
sub
dec
movsb
xchg
test
sbb
cld
lock
imul
xor
and
and
mov
insb
fisttpll
xchg
inc
xchg
or
sub
adc
adc
das
pusha
and
lret
adc
les
addr16
stos
xchg
cmp
mov
cmp
stc
inc
mov
push
sub
xchg
jp
xchg
cs
pop
sarl
fwait
pushl
test
pop
mov
mov
xor
push
cmp
sarb
jg
out
jo
in
push
iret
lret
xor
les
pusha
insl
popf
cmp
xor
jge
mov
inc
mov
lahf
push
dec
and
or
xchg
xchg
insb
inc
push
xchg
inc
imul
dec
inc
or
sti
lds
adc
dec
ja
mov
pop
bnd
jmp
sbb
ds
aas
mov
iret
xchg
cli
fdivrl
xchg
mov
lret
das
sbb
jae
xchg
mov
cwtl
cmp
icebp
in
xchg
out
pop
add
mov
lret
inc
jne
stos
dec
push
pop
int
xchg
xor
nop
adc
push
and
jl
mov
sub
dec
xchg
das
icebp
pop
cmpsl
pusha
fwait
hlt
adc
aad
leave
adc
ja
insl
scas
add
cmp
push
add
dec
je
test
dec
ficoml
scas
xor
pushf
push
repz
call
cwtl
aad
mov
repnz
jno
pop
pusha
add
jo
fstps
add
dec
jbe
les
xor
push
cmp
or
and
jp
scas
sub
ret
xchg
test
clc
outsb
push
jbe
orl
jmp
mov
out
insl
mov
sbb
jecxz
sub
xchg
imul
sbb
shll
mov
push
adc
lret
xor
lods
test
and
test
aad
mov
and
xor
push
ret
fisubrl
setne
js
xlat
jg
jb
bound
lahf
das
or
ss
cmc
stos
pop
aas
call
out
das
adc
sti
mov
cmp
lahf
test
out
shl
pop
lods
mov
in
lret
pop
clc
mov
inc
cmp
ss
xchg
shll
sbb
xchg
movsl
pop
fwait
out
arpl
dec
cs
mov
or
sbb
aam
std
push
xchg
dec
cltd
orb
outsb
outsb
decl
mov
push
and
lahf
in
mov
in
push
ss
mov
clc
aam
lods
ret
sar
cmp
mulb
dec
push
jg
adc
lahf
sbb
int
pop
shll
ja
aas
sbb
into
adc
lods
push
jmp
inc
sbb
call
ja
jecxz
call
ljmp
xor
adc
in
insl
adc
test
adcb
mov
adc
stc
mov
nop
mov
cltd
push
test
jmp
lcall
scas
lahf
bound
sub
imul
push
mov
push
add
push
mov
mov
pushf
loopne
push
movsl
xchg
movsb
leave
outsb
or
xor
mov
jnp
push
or
jns
push
pop
jns
push
cmp
sbb
out
mov
aad
fstps
cmpsl
in
lret
fs
mov
idivb
dec
or
inc
out
push
xor
sbb
add
jns
xor
or
cmp
cld
loopne
inc
fisubs
dec
aam
je
mov
xchg
cld
jo
sub
dec
push
add
and
mov
jmp
pop
dec
xchg
push
fsubrl
cld
mov
data16
test
fidivl
inc
pop
ret
pop
push
stos
push
adc
push
xchg
aam
mov
fisttpl
and
xor
cmpsl
gs
lcall
jmp
jmp
push
and
mov
loope
in
in
cmp
jmp
leave
push
adc
fistl
jle
mov
cmp
and
mov
fadds
lcall
mov
mov
imul
pop
pop
cmp
andl
call
lcall
sub
and
pusha
cmpsb
mov
nop
repz
aad
adc
aad
lcall
scas
push
shl
js
and
cli
mov
cs
mov
xchg
adc
cmpsb
imul
scas
push
xchg
sub
mov
sbb
shl
lock
xchg
inc
pop
jge
inc
dec
xor
cmc
dec
cmp
mov
aad
xchg
test
adc
cmp
std
out
daa
push
rcrl
outsl
les
mov
dec
mov
enter
lahf
and
fisubl
fisubs
jle
mov
sbb
fidivrs
sub
int3
ja
mov
loop
cmp
daa
mov
add
jmp
or
jp
into
mov
cld
cmp
inc
push
les
add
call
stos
mov
cmp
loope
push
cmp
xor
insb
aas
inc
push
mov
stos
dec
in
jnp
stos
stc
dec
jae
xlat
incl
or
scas
xor
mov
pop
js
data16
int3
dec
dec
fnstsw
sbb
in
dec
aas
test
call
out
push
subb
lahf
loop
adc
test
add
push
xchg
movsb
cld
aam
insb
imulb
lods
jns
int3
or
inc
xchg
dec
sti
dec
insb
ss
icebp
out
cmp
fmuls
add
or
mov
mov
push
jp
in
or
out
mov
lahf
adc
roll
sbb
andl
push
inc
movsb
jo
or
sbb
pop
pop
mov
jae
bound
hlt
mov
inc
fldenv
push
lahf
cmpsl
aaa
repnz
pop
push
and
scas
mov
sbb
add
jl
pop
sbb
fs
jbe
popf
inc
fs
lea
fnstcw
stos
or
call
in
cs
adc
fisubl
repz
xor
cmc
add
mov
pusha
mov
mov
push
mov
lcall
inc
iret
cmc
sti
les
nop
sbb
xor
or
mov
adc
xor
push
dec
jle
cmpl
ds
cltd
cwtl
sbb
mov
dec
loope
js
rol
std
jo
or
cltd
ljmp
leave
jg
xchg
add
out
pop
jbe
daa
nop
push
xor
and
sub
pushf
enter
cwtl
jns
inc
into
pop
sahf
cmp
repnz
insb
rcrb
dec
pop
and
dec
out
cltd
fistpll
pop
loope,pt
dec
insb
popa
jl
nop
shrl
mov
mov
lods
mov
cmovbe
lret
fsubs
add
xor
and
ljmp
pushf
dec
pop
incl
adc
xor
es
mov
pushf
xor
jae
iret
mov
dec
jecxz
push
into
sub
or
pop
mov
scas
or
lds
sub
ljmp
mov
add
js
loopne
mov
out
sub
mov
outsl
in
adc
es
jb
ret
mov
roll
jnp
inc
add
test
movsl
iret
dec
addb
sub
cltd
clc
cmpsl
jne
xor
push
jp
xchg
sub
lahf
test
mov
push
stos
mov
cmp
inc
dec
xchg
ret
mov
cltd
out
scas
pusha
mov
int
iret
mov
cmp
popa
jns
setno
adc
rorl
xchg
ret
test
movl
cs
mov
call
scas
inc
mov
shlb
mov
pop
sub
add
fstpt
stos
data16
iret
enter
out
cwtl
rclb
nop
xor
idiv
sub
jne
xor
and
notb
push
int
pop
rol
shrb
shrb
sub
insb
mov
push
push
sbb
inc
ja
in
sub
sub
dec
xchg
loope
outsb
and
add
lock
hlt
fldcw
pop
cld
sub
mov
fiadds
addr16
cli
sub
add
mov
mov
and
lahf
js
add
xchg
sti
xchg
xor
imul
insl
sub
xlat
lds
popa
and
cwtl
stos
adc
cmp
outsl
dec
mov
mov
jp
cs
mov
hlt
add
xlat
xchg
xor
insl
divb
out
stc
iret
jb
fcomp
pop
fcoms
test
xor
cs
xchg
jae
notb
inc
add
mov
sbb
jae
sbb
in
pop
or
and
jo
shll
mov
sub
or
jno
or
jae
and
in
jmp
pop
cvtps2pd
movsl
xchg
pop
adcb
and
in
dec
rclb
jno
pop
pop
and
icebp
pop
jecxz
in
bound
loopne
add
mov
adc
sub
pop
scas
adcl
lods
inc
pop
inc
test
in
or
push
bound
mov
into
and
cmc
push
xchg
jmp
mov
and
adc
cli
icebp
xor
cld
lcall
ljmp
mov
push
mul
out
push
sti
mov
xchg
jb
pop
cmpsb
div
sti
rcrb
popf
mov
cltd
and
cmpb
aas
clc
popf
mov
loope
out
es
and
mov
bound
jmp
daa
dec
mov
fcmovnu
mov
mov
pop
xchg
dec
push
inc
test
xor
fisubrs
imul
test
xor
xchg
outsb
fwait
push
jb
popf
xlat
mov
jl
hlt
and
inc
dec
dec
add
mov
xchg
ss
adc
out
test
or
ds
and
push
jns
xchg
jecxz
pop
mov
sbbb
ljmp
mov
sub
xchg
loopne
std
sub
lods
lds
mov
popa
sbb
mov
movsl
cmp
aas
push
push
pusha
mov
ror
or
cmp
outsb
inc
add
in
divb
fnsave
movsb
int3
cmpsb
mov
movsb
sbbb
mov
cmp
sbb
sbb
sti
fisubs
aas
fisubs
xor
add
mov
stos
jnp
cmp
or
icebp
xlat
rorl
movsb
aas
mov
enter
jb
and
jb
mov
jle
push
xchg
frstor
push
iret
ficompl
mov
or
sub
xlat
jp
and
mov
mov
add
es
xor
xchg
cmp
repz
mov
jg
subb
js
mov
test
mov
cli
push
xor
idivl
mov
lock
sbb
mov
pop
jb
leave
pop
mov
cmpsb
leave
push
fistpl
incl
sub
icebp
mov
jecxz
mov
mov
lret
sbb
sbb
cmp
add
mov
xchg
pop
fisttpl
mov
push
call
push
dec
popa
out
mov
int
mov
fwait
sub
test
lahf
inc
mov
popa
lea
cltd
and
push
push
add
mov
fadd
xor
leave
loop
es
sbb
dec
popf
adcb
push
or
push
jg
call
in
jo
imul
mov
sbb
xor
scas
jbe
pop
mov
ljmp
aaa
jge
xchg
xchg
xor
fs
rolb
aam
add
aad
shll
sbb
nop
sbb
sahf
lods
fwait
jg
add
gs
scas
jo
js
into
xor
movsl
testb
jns
lcall
loopne
movsl
stc
pop
and
or
push
sub
adc
out
nop
arpl
adc
xor
vmovupd
pusha
dec
aam
jnp
sahf
movsb
and
cmp
fnsave
call
fiaddl
data16
cmpsl
pop
movsl
sbb
mov
sbb
sahf
pop
mov
outsb
push
icebp
iret
or
mov
jae
les
daa
lods
in
xchg
xchg
test
inc
stc
mov
pop
scas
inc
lret
repnz
lods
call
mov
lea
insl
insb
stos
sbb
push
dec
and
test
xor
rcr
insb
cmp
enter
pop
testl
jecxz
lret
test
loope
addr16
dec
cmp
xor
sbb
out
xlat
mov
call
pushf
insl
sti
inc
jae
orl
jl
sub
in
mov
and
jne
inc
mov
insl
ret
or
or
lcall
pushf
dec
rcrb
mov
cmp
fisubl
scas
sbb
aaa
or
dec
push
mov
in
neg
lret
cmpsl
and
and
mov
lcall
lods
push
into
mov
pop
sbb
push
cmc
lds
push
or
orl
shl
pop
sbb
in
cltd
hlt
aad
lret
push
outsb
daa
inc
clc
or
loopne
add
xchg
fwait
sti
or
inc
outsb
cmp
cmpsb
jmp
push
sbb
insl
and
and
les
aaa
and
cmp
call
jo
xchg
lret
aam
jge
xor
push
jns
adc
dec
addr16
mov
mov
pop
aad
add
sbb
fs
jns
dec
cmp
adc
aaa
xlat
xchg
dec
push
jno
mov
les
clc
or
jb
js
ror
out
sahf
xchg
lods
stos
mov
cmp
scas
fiaddl
mov
loope
into
ds
sub
mov
fxch
call
test
divb
aas
popa
sub
inc
jne
xor
add
mov
pushf
inc
adc
jecxz
je,pt
fmull
fisttpll
cmp
test
std
sti
or
mov
std
inc
fwait
out
fidivrs
dec
rcrb
ja
test
jne
mov
shlb
iret
mov
push
or
cmc
jg
sub
shrl
nop
push
xchg
ret
xchg
cmpsb
jne
cltd
jecxz
repz
cwtl
add
mov
push
xchg
test
jmp
push
mov
jmp
imul
into
lcall
mov
mov
rcrl
dec
lahf
icebp
jmp
mov
xchg
inc
pop
xchg
loope
add
add
lcall
aaa
fisubrs
and
icebp
popf
es
in
incl
aad
jle
int3
or
cmpsb
ret
xor
mov
stos
sbb
sbb
scas
mov
xor
imul
adc
and
add
xor
dec
sbb
mov
jae
cmp
adc
clc
jae
jnp
out
aaa
or
push
adc
aam
push
mov
daa
rcrl
inc
sub
loop
fadds
adcl
aad
in
add
push
fcompl
cmp
fs
adc
dec
xchg
dec
movl
dec
bound
mov
loope
pop
lcall
and
call
add
xor
adc
mov
in
dec
aaa
loop
insl
fstl
ret
add
inc
xchg
and
int
jno
push
lods
dec
scas
inc
xchg
clc
inc
movsb
inc
pop
adc
fisttpll
imulb
cmc
push
sarl
or
add
stos
enter
cmc
inc
pop
adc
stc
inc
xchg
sbb
loopne
or
inc
fsubl
jo
dec
repnz
mov
xchg
dec
dec
mov
call
adc
scas
lds
stos
aas
push
jae
pop
ss
out
jmp
mov
outsb
enter
xchg
push
ds
add
fstpt
rol
or
cli
clc
mov
jecxz
loopne
out
stc
ljmp
inc
xor
xor
add
movsb
lea
or
sbb
icebp
loope
push
leave
pop
pop
mov
dec
dec
xor
xchg
nop
fnstcw
in
jmp
jp
cs
adc
xchg
mov
mov
and
ret
jns
xchg
mov
mov
lret
in
fsubl
dec
sbb
mov
dec
jge
insl
xchg
push
jge
push
loopw
pop
stos
in
pop
and
add
jnp
xor
stos
add
cmc
pusha
add
adc
inc
xor
inc
adc
cli
and
shrb
jbe
addb
push
clc
dec
xlat
fcomps
mov
fiadds
add
cmp
inc
push
int
arpl
into
arpl
test
aam
xor
add
push
iret
scas
jae
inc
mov
subb
dec
and
aaa
add
add
decl
jecxz
fdivrs
js
mov
cmpsl
filds
cwtl
in
sbb
mov
inc
xlat
lcall
sub
mov
rcrl
sub
lea
outsl
pop
fmulp
and
sub
outsb
or
rcl
xchg
mov
dec
daa
xchg
push
dec
mov
push
mov
fstl
xchg
jae
mov
adc
out
negl
mov
daa
jp
adc
sbb
iret
sahf
or
cwtl
scas
mov
rolb
add
mov
lock
cmp
sub
cld
adc
dec
cltd
dec
leave
scas
jmp
pusha
dec
hlt
lcall
loopne
xchg
mulb
push
inc
js
mov
out
pop
hlt
fidivrs
xchg
sbb
scas
dec
mov
repz
pop
add
mov
inc
js
mov
sbb
popf
mov
sbb
fcmovne
push
inc
sub
dec
cmp
sub
mov
cmp
mov
ds
add
out
testl
lret
fcomps
pop
test
loop
dec
pop
pushf
adc
push
into
mov
lods
andb
mov
xchg
test
femms
mov
pop
xchg
pop
xchg
das
push
cwtl
fisubrl
and
cld
add
sub
pop
loopne
les
scas
mov
dec
ss
cld
cli
testl
test
scas
cmpsb
enter
rorb
stos
je
subb
jecxz
xor
mov
or
xchg
insl
sbb
in
mov
mov
xor
rolb
out
addr16
inc
rcl
mov
addr16
addr16
js
cmpsl
lea
push
lods
mov
insb
sbb
out
ds
jo
int
inc
aad
out
clc
or
je
psubsw
sbb
cld
or
pop
sbb
mov
pop
stos
adc
out
jns
xor
cmpsb
xchg
jo
sbb
mov
mov
loopne
xchg
ret
pop
push
lock
mov
pushf
cmp
jge
out
pop
or
repz
loope
jge
add
repnz
aas
int
ds
mov
pop
push
jecxz
jge
nop
cmpsl
repz
leave
xchg
adc
push
mov
or
push
mov
push
inc
rcrl
cli
outsb
adc
lahf
mov
ljmp
add
rcr
jae
cmpsl
cltd
sbb
incl
cmp
ja
xchg
gs
mov
sbb
sub
mov
jns
and
and
xor
stos
push
inc
fwait
push
ficomps
sub
test
fwait
inc
mov
dec
fimuls
xlat
fcoml
inc
jmp
out
push
cmc
or
push
add
clc
xchg
int
xor
sbb
jno
mov
test
mov
push
mov
adc
pop
xchg
cmp
hlt
in
inc
mov
dec
sti
lcall
dec
and
push
outsb
in
das
and
pusha
loope
xchg
inc
add
ret
cmp
push
orb
mov
push
fnsave
jl
lock
cmpsb
outsb
add
mov
push
dec
sub
xchg
bound
leave
mov
dec
xchg
clc
pop
es
punpcklbw
mov
cmp
push
mov
cmp
mov
lahf
fiadds
push
push
dec
add
clc
sbb
std
fsts
lods
decl
lcall
stos
out
test
cs
mov
add
inc
jae
notl
imul
inc
jae
das
jp
movsb
pop
xchg
cwtl
lods
mov
addr16
test
sarl
push
add
and
cmc
push
mov
lods
test
xchg
push
push
stos
xor
cmpsb
jmp
add
mov
movsl
roll
and
inc
repz
cli
mov
stc
das
incb
pop
push
test
jnp
scas
pop
push
mov
shrb
xchg
ret
sbb
mov
loopne
adc
out
testl
adc
add
xchg
lret
andb
add
lods
adc
imul
flds
xchg
mov
add
push
add
popa
loop
lret
add
inc
xor
mov
xchg
scas
mov
xor
cmpl
pop
jns
hlt
cmpsl
inc
push
adc
iret
sbb
xchg
outsb
jne
adcb
add
popl
push
jae
das
and
adc
jne
and
je
leave
outsb
pop
cmpsb
daa
out
or
fistl
inc
cltd
rcl
mov
adc
imul
dec
jl
mov
lret
adc
adc
dec
lds
mov
icebp
mov
fsubrl
pop
mov
js
jl
pop
or
je
aaa
in
hlt
ret
int
dec
popf
les
cli
xchg
push
xchg
shll
lock
dec
mov
lahf
clc
call
ss
in
mov
clc
fsubrl
fisubrl
out
or
or
cmc
mov
out
scas
and
xor
scas
pop
test
stos
test
mov
shll
out
addl
xor
in
cmpsl
push
jmp
and
insl
sbb
lods
int
push
sbb
jge
clc
jecxz
loop
lcall
mov
mov
sbb
int
pop
mov
mov
jnp
adc
ficomps
cmp
cld
mov
xor
pop
or
iret
sub
movsl
mov
sti
in
add
sub
jecxz
sar
sub
jne
std
push
sarb
mov
and
in
lret
mov
mov
fists
jb
mov
mov
xlat
jg
jecxz
scas
rolb
xor
enter
mulb
jg
dec
int
sub
aam
fimull
fsub
imul
lcall
pop
and
jbe
mov
push
in
or
test
pop
out
gs
in
xchg
leave
inc
dec
or
rcrb
sub
dec
lret
xchg
push
mov
sub
push
sbb
inc
xchg
jl
cltd
imul
outsl
gs
jg
add
sbb
aaa
mov
jno
shll
jbe
mov
loope
inc
cmpsl
dec
xchg
ret
pop
fldt
mov
dec
test
and
icebp
insl
test
add
in
ja
pop
mov
lods
addr16
sar
in
push
fwait
push
mov
mov
jmp
int
add
adc
insl
cmpsb
or
lds
mov
je
sub
popa
xchg
pop
or
add
insb
inc
sub
dec
xchg
xchg
adc
mov
jne
mov
xchg
in
stos
ret
sub
movsb
rcll
and
cli
xchg
jns
dec
mov
sub
jecxz
mov
cmc
sub
clc
loopne
push
out
incb
or
add
into
add
jg
or
mov
inc
pop
push
leave
add
cli
xchg
add
mov
ret
add
and
daa
adc
lock
clc
lods
push
adc
aaa
jp
ss
imul
jecxz
adc
mov
inc
add
inc
push
adc
inc
enter
es
shlb
fldt
xchg
push
jg
xchg
xor
xor
mov
sbb
aas
fsubr
pop
xchg
inc
cmp
adc
cltd
adc
jmp
in
setp
testb
rcll
or
enter
mov
cmc
mov
fidivrl
enter
pop
cli
cmp
push
arpl
lcall
loope
es
int3
pushf
mov
leave
xchg
js
pop
xor
inc
adc
lods
pop
outsb
xor
jno
cmpsl
hlt
fstpt
movsl
rcrb
out
std
sbb
lea
dec
xor
xor
xchg
mov
adc
cwtl
std
adc
dec
xor
fidivrl
jg
mov
imul
mov
cmp
mov
fwait
in
mov
jne
mov
jle
jp
xchg
imul
ja
push
stos
jb
push
mov
mov
ret
mov
or
dec
sub
scas
outsl
cld
inc
push
rcrb
mov
jnp
ja
push
pop
aas
mov
fdiv
mov
or
lea
pop
sbb
dec
push
movl
jno
cmp
test
fs
hlt
fidivrs
repnz
jne
and
push
lahf
sbb
outsl
and
jnp
cs
ja
xchg
fisttpl
and
icebp
bound
xor
out
sub
jnp
xor
icebp
jb
mov
fs
imulb
mov
lds
mov
pop
dec
mov
fldcw
inc
or
jo
and
sub
mov
movsb
pusha
or
jns
outsl
cmp
jns
movsl
add
inc
icebp
mov
repz
jae
pushf
insb
jmp
inc
dec
outsb
cwtl
int3
jnp
mov
es
cmpsl
add
sub
addr16
pushl
stc
sbb
dec
rcrl
fildll
cwtl
jecxz
and
or
test
xorb
cmp
idivb
xchg
jecxz
pop
jo
xchg
or
xchg
jg
add
negl
ret
test
imul
and
cmp
xor
ljmp
and
rep
xchg
test
aad
mov
sti
cld
inc
aam
add
std
mov
scas
nop
dec
jmp
xchg
inc
xor
outsb
pop
outsl
mov
cmp
fidivs
dec
jge
adc
cmp
das
add
loop
mov
mov
data16
dec
sahf
lds
and
pop
jbe
mov
push
mov
mov
bound
aam
insb
gs
and
lods
imul
inc
pushf
or
mov
ja
aad
mov
inc
sub
pop
jb
enter
or
lock
jecxz
ds
jb
push
test
gs
loope
fwait
mov
das
sub
mov
div
jns
and
push
xor
psubusw
inc
stc
test
sbb
or
aad
and
inc
je
daa
adc
icebp
xor
and
lret
shlb
adc
add
frstor
scas
jb
adc
pop
shrb
and
fwait
xchg
add
aas
pop
jnp
js
ja
xchg
cmpsl
call
cmpsb
fidivrl
inc
negl
ret
out
inc
in
aam
loopne
mov
pop
xor
sahf
lods
jno
mov
cmc
pop
outsb
pushf
fsts
add
testl
pop
cltd
cmp
cs
jno
je
mov
pop
sub
aas
lcall
sbb
out
sub
or
in
xchg
adc
repz
and
cld
pop
xorb
in
test
imul
int
cwtl
xchg
pushfw
in
out
lea
pop
pop
pop
dec
hlt
xchg
mov
lahf
dec
icebp
aam
clc
or
and
insl
jne
pusha
xchg
rolb
in
ret
pop
pop
cmp
shlb
insb
das
lods
cld
mov
loope
cli
enter
rorb
add
push
sbb
and
test
cmc
sub
out
mov
xchg
mov
int
scas
lret
ljmp
or
xlat
mov
dec
sub
mov
jecxz
cli
mov
ja
pop
dec
jp
add
outsb
sbb
mov
mov
xchg
push
int
dec
or
pusha
test
sub
aad
add
mov
jns
hlt
lahf
xor
mov
xor
ret
inc
or
sub
pop
pop
rol
jmp
mov
imul
jp
xor
adc
lcall
lret
adc
pop
dec
out
insl
adc
cli
sbb
xor
popa
imulb
mov
icebp
pop
ljmp
sahf
addr16
mov
jb
cmp
loope
mov
mov
fcmovb
xor
and
or
dec
clc
jne
je
repz
jbe
cwtl
mov
or
fcmove
pop
popf
fbstp
or
cltd
push
xor
dec
sbb
sub
scas
push
insb
aam
cmp
push
mov
stc
fcmovb
je
push
add
inc
push
xchg
dec
stc
adc
pop
cmp
mov
negl
popa
mov
ja
fwait
cmp
jno
jecxz
xor
insl
sbb
mov
bound
ja
aas
rclb
xlat
add
aad
or
out
inc
jg
sarb
mov
and
pop
out
bound
out
movsl
mov
shll
ret
push
add
pop
xor
mov
or
jmp
repnz
jb
push
icebp
out
in
adc
outsb
loop
dec
cmc
rcr
pop
adc
dec
outsl
out
mov
adc
cmp
adc
out
ret
mov
mov
sub
push
sbb
fistl
orb
xchg
or
add
ja
push
and
mov
jae
pop
leave
es
std
mov
hlt
repnz
mov
fstpt
fwait
stos
dec
add
jle
inc
js
aaa
ret
and
imul
xor
xor
pop
dec
mov
jl
bound
adc
sbb
inc
push
ljmp
ja
fidivl
jae
push
je
iret
nop
sub
xchg
movsb
add
xor
push
jecxz
adc
fwait
mov
jl
cltd
lods
gs
inc
out
cwtl
push
mov
cmpsl
mov
xchg
jo
mov
jne
pop
stos
enter
lret
adc
sbb
fdiv
imul
sbb
cmp
pop
iret
arpl
loop
js
mov
hlt
adc
sbb
adc
xchg
decl
outsb
jo
cltd
jl
cmpsl
or
inc
mov
pop
test
in
cmp
lods
or
icebp
js
loope
sti
mov
ret
xor
and
add
outsl
inc
stc
pusha
and
mov
ja
ds
jns
insl
or
js
xchg
adc
cmp
loop
pop
mov
clc
or
mov
shll
addl
inc
stos
fisubrl
sbb
xchg
inc
or
push
stc
pop
push
sub
incb
add
fwait
and
mov
outsl
push
aaa
fisttpl
idiv
scas
push
das
repnz
repz
jnp
fs
negb
and
xlat
sahf
aas
push
xor
shll
cmc
sub
jb
bound
xor
inc
and
sub
add
adc
imul
mov
shll
insb
lret
fisttps
and
ds
data16
push
into
aam
cltd
or
mov
out
fnstsw
and
fiaddl
das
subl
pop
lods
scas
aaa
or
jns
fistpll
aad
cwtl
sub
stc
pushf
loope
sub
out
pop
lahf
shl
iret
jno
inc
lea
frstor
outsb
xchg
xlat
fildl
lods
mov
sti
push
pop
aad
or
adc
call
loopne
push
push
mov
pop
int
inc
rorb
push
add
pop
sbbl
cmc
test
cmc
mov
iret
enter
call
and
fsubrs
sub
inc
sbb
sahf
aam
adc
andl
push
test
xor
jmp
or
cmp
inc
call
xchg
sub
icebp
add
cmp
cmp
addr16
clc
add
mov
add
popf
cmp
into
sub
push
mov
stc
and
jo
loope
and
test
inc
pop
test
jae
cmp
call
iret
mov
cltd
std
icebp
mov
mov
push
and
cmpb
test
lds
and
stos
add
std
xchg
shrl
mov
sahf
pop
popa
xor
fisttps
fidivs
rcll
jl
mov
push
out
call
cmp
enter
push
inc
shlb
and
push
mov
fwait
xchg
and
jno
pusha
lea
adc
adc
imul
mov
inc
sub
les
xor
inc
inc
loop
out
mov
add
hlt
mov
arpl
in
fidivrl
adc
orl
mov
popf
repz
out
push
sbb
lret
punpcklwd
arpl
adc
xchg
mov
shl
or
pop
lea
pushf
cmp
cmpsl
cmp
adc
pop
andb
std
aas
inc
or
and
int3
push
xchg
push
rol
fsts
in
lret
and
lods
and
inc
push
jo
and
xor
mov
outsl
add
xorb
push
imul
adc
sbb
or
cli
inc
jae
pop
mov
jne
mov
dec
loop
sub
adc
push
cmp
lahf
dec
mov
rcll
testl
insb
and
push
mov
mov
sbb
scas
jg
cltd
adc
into
pop
dec
mov
frstor
pop
lret
sub
mov
xchg
jg
enter
adc
in
insb
push
je
or
cld
lock
jecxz
xchg
jae
jmp
or
inc
lret
cmp
jecxz
cmp
fisubrl
or
push
adc
add
cmp
xchg
daa
sbb
inc
jns
ficompl
adc
mov
popl
roll
in
adc
and
int
push
pop
icebp
or
dec
in
xlat
sub
lock
pushf
sbb
adc
in
lods
mov
lea
lcall
mov
mov
cmp
movsl
mov
and
sub
ja
movsb
out
mov
incl
mov
aaa
push
xor
mov
mov
cmpsl
mov
pop
mov
xlat
cmp
outsl
adc
cmp
mov
push
rol
std
or
shlb
or
mov
dec
and
movsl
lret
add
jle
scas
xchg
in
call
mov
jbe
test
add
test
xchg
or
xchg
fidivl
mov
test
sub
push
add
iret
int
mov
push
mov
mov
xchg
roll
sbb
stos
pop
test
mov
mov
jne
imul
push
sub
dec
sbb
push
pop
fld
and
es
loope
mov
mov
shrb
dec
in
mov
and
mov
mov
and
xor
inc
insl
sub
dec
or
sbb
mov
and
xor
xchg
addb
and
lock
pop
xchg
test
push
pop
or
ret
mov
stos
mov
cmp
in
fcmovbe
fmuls
imul
mov
and
sub
inc
inc
das
and
nop
xchg
data16
sbb
test
repz
rcll
mov
mov
loopne
lret
bound
adc
lcall
cmp
ss
cmp
into
dec
sub
mov
dec
loop
mov
and
cmp
lahf
ss
inc
or
dec
dec
addl
out
enter
jg
rcrb
arpl
jns
xor
fiaddl
jp
jg
decl
lods
mov
mov
mov
adc
xlat
sbb
lret
imul
xor
push
stc
jb
outsl
pushf
out
xchg
orl
in
andb
mov
loopne
lds
jge
push
mov
loopne
je
dec
in
mov
addl
mov
jns
cli
mov
cmp
mov
jae
xchg
jg
out
vucomiss
jns
xor
dec
push
xor
mov
test
repz
mov
mov
dec
and
xchg
sbb
outsb
movsb
mov
adc
pop
or
sbb
sbb
out
shrb
nop
loope
testl
mov
insb
jne
push
pop
movsl
scas
jbe
and
stos
lods
cltd
inc
cld
or
addr16
adc
xchg
adc
pop
dec
pop
xchg
inc
or
push
scas
flds
in
imul
mov
cmpsb
cltd
cs
cmpsb
inc
jnp
push
es
push
jp
pusha
int3
mov
mov
orl
inc
pop
ja
arpl
xchg
mov
and
ds
jns
dec
cmp
insb
pop
loop
jmp
negb
popa
dec
repz
fldl
hlt
push
inc
mov
cld
adc
enter
cmp
loopne
stos
sub
mov
push
xchg
pop
xchg
mov
pop
into
dec
push
lret
fwait
push
mov
and
and
ret
xor
psubw
mov
dec
add
or
ss
xlat
je
sub
jge
pop
cmp
and
pop
push
jecxz
pop
push
bound
call
imul
enter
dec
sub
adc
pop
cmp
aam
push
push
inc
lock
nop
fld
push
cmp
jg
mov
mov
cmpsl
pusha
or
das
aad
adc
shrb
test
pop
gs
jns
cmpb
xchg
push
xchg
out
mov
jle
add
jp
inc
xchg
hlt
push
lret
xchg
imul
jp
aas
pop
lea
enter
cmpsl
int3
inc
ljmp
xlat
fidivrs
lahf
inc
flds
sarb
dec
clc
in
jae
pop
xchg
inc
in
mov
out
cmpsl
cltd
sbb
test
sti
cmpsb
dec
scas
and
xor
fwait
xchg
mov
popa
fisttps
and
into
inc
iret
les
jb
sar
inc
push
lods
in
and
sub
jns
mov
jns
pop
cmp
hlt
xchg
int3
stos
stos
dec
jbe
push
mov
mov
movsl
cmp
out
lret
stos
adc
adc
ficoml
add
cmpsb
and
test
xor
and
jmp
fimull
push
mov
xchg
pop
sub
mov
xchg
mov
sbb
int3
push
mov
sahf
pop
fsubl
pop
pop
les
ss
shll
add
dec
push
pop
dec
pop
hlt
insb
xor
sub
sbb
sbb
test
mov
scas
add
dec
jbe
push
negl
sub
pop
xchg
cmp
mov
cs
pushf
pop
ror
movsl
inc
jns
ljmp
jno
in
lret
lret
std
jb
cld
mov
fisubl
leave
outsl
push
pop
lds
ja
jbe
xchg
aad
pusha
insb
in
cmp
cmp
inc
mov
sub
xor
fnsave
mov
sbb
dec
lods
jnp
mov
cmpsb
mov
or
xchg
aad
xchg
pusha
das
nop
inc
mov
insb
lods
mov
mov
into
mov
xchg
pop
call
popf
push
mov
out
cmpsb
jns
out
xchg
mov
ret
loop
or
inc
push
fwait
and
jne
sbb
or
clc
add
rcrl
mov
add
mov
xor
and
add
xlat
dec
dec
mov
pop
dec
jp
nop
mov
inc
xor
push
mov
xchg
sbb
mov
sbb
xlat
push
das
ss
popf
jbe
lock
scas
ds
jmp
in
data16
daa
inc
mov
movb
ja
enter
je
xor
dec
jmp
xor
push
inc
pop
mov
dec
inc
ret
dec
xor
pusha
cmp
je
nop
je
fsubs
xor
dec
das
adc
fistpll
pop
or
cmp
and
inc
cmp
fldt
rorb
mov
shr
lock
lods
adc
sahf
frstor
mov
das
inc
cmpsl
mov
cltd
xchg
test
mov
insb
sub
mov
movb
repnz
test
js
mov
int3
aaa
bound
or
dec
enter
xchg
out
jno
lds
xor
fisubl
bound
and
push
and
nop
xlat
lods
sub
ss
icebp
adc
sbb
jl
loop
fistpl
cld
push
in
xor
and
es
jo
cmp
add
xor
lea
xor
aaa
outsl
ret
pop
xchg
testl
rolb
out
shlb
roll
mov
clc
mov
add
ror
xchg
jecxz
and
pop
dec
mov
ja
cli
out
mov
lcall
dec
into
or
cmp
push
pop
mov
aam
mov
add
sarl
xchg
mov
mov
lock
loop
mov
test
nop
mov
xchg
inc
mov
push
or
mov
xchg
pusha
xchg
sub
inc
push
aam
clc
sbb
fnstcw
stos
sub
pop
mov
cmpsb
dec
gs
sbb
loope
mov
das
and
cmp
jae
popa
mov
fists
jmp
enter
xor
and
jbe
sbb
rolb
out
in
or
pop
xlat
rep
popa
push
ret
stos
gs
cltd
and
or
hlt
or
pop
mov
arpl
mov
shrb
ljmp
fdivl
or
pop
cmp
xchg
cwtl
ret
fcmovu
pop
test
xchg
push
jb
xchg
and
loop
movsb
push
test
imul
pop
adc
mov
fimull
jmp
push
push
ret
dec
adcb
add
cmpsl
leave
push
in
cmp
jg
sub
mov
in
xorl
nop
out
pop
jge
jno
inc
js
sbb
pop
or
fmulp
and
push
ficompl
shll
add
inc
mov
jg
fs
adc
mov
pop
push
jecxz
adc
mov
and
mov
leave
aam
shrl
sub
sub
and
je
ljmp
in
fst
push
aas
js
aas
inc
imul
and
mov
push
in
bound
mov
and
js
push
mov
push
or
pop
jo
sarl
jg
push
dec
xchg
into
sub
jne
sti
dec
inc
mov
test
adc
pop
cmp
addb
xchg
test
push
jmp
outsb
fcoml
jl
push
cltd
mov
jp
xchg
push
data16
adc
ret
adc
pop
stos
loopne
or
jne
cld
fwait
inc
jle
shll
addr16
dec
mov
hlt
fwait
push
sbb
enter
pop
sub
jae
notl
test
loop
icebp
cltd
sahf
mov
repz
lds
lds
pop
ret
cmp
mov
jno
xchg
lods
imul
rol
loope
mov
push
call
inc
jbe
sbbl
test
inc
lret
pop
cmp
sub
inc
in
pusha
xor
test
arpl
fistl
pop
repnz
xchg
cmp
sarb
subb
adc
bswap
mov
in
and
test
out
xor
outsb
repnz
push
ja
add
mov
jmp
insl
pop
loopne
in
pushf
inc
mov
int3
pop
mov
rorl
cmp
lret
in
iret
jbe
or
daa
hlt
stos
cmc
or
mov
add
pop
fldt
push
and
js
repz
mov
rorl
sahf
aam
mov
mov
push
push
mov
xor
popf
stos
push
xchg
lds
cmpsb
push
xlat
push
inc
int
cmpb
xlat
rolb
mov
int
cmpsb
mov
mov
mov
mov
pop
ret
lea
push
mov
xchg
nop
popa
mov
sbb
sub
xchg
data16
push
xchg
clc
unpcklps
sub
lods
mov
pop
ljmp
mov
jle
aad
add
adc
jecxz
sarl
inc
xor
adc
mov
iret
adc
lea
cmp
xor
and
inc
je
mov
jecxz
cltd
jle
into
pop
mov
lret
cmpl
add
jae
jbe
inc
jne
test
or
xchg
daa
jp
outsl
cld
xchg
shlb
call
fs
sbb
lods
mov
cmpsl
outsb
cmp
jnp
pop
movsb
jg
sub
imul
pop
lret
mov
xchg
inc
mov
movsl
out
sub
xor
dec
mov
iret
sub
push
xor
inc
sbb
mov
cmp
mov
xchg
jmp
cmp
idiv
push
test
push
push
jne
mov
mov
ret
cmpb
ror
dec
adc
in
ficomps
data16
dec
aas
mov
and
push
sub
in
bound
xchg
mov
popa
sub
aaa
push
mov
xchg
es
cld
and
int3
dec
imul
sub
add
sub
lahf
mov
mov
loop
jle
cmp
rol
imul
aaa
sub
daa
mov
lret
inc
loop
and
femms
call
mov
iret
jo
cwtl
xchg
jmp
ss
std
and
cwtl
mov
jecxz
lods
sbb
lods
nop
das
push
out
cmp
pushf
std
test
jnp
movsl
and
sub
inc
ljmp
push
or
push
loopne
ret
add
inc
test
in
cltd
mov
add
sbbb
sbb
hlt
aas
push
pop
xor
rclb
or
clc
popa
jne
fs
lret
cmp
add
xor
outsl
addr16
cmp
mov
push
aas
cmovnp
jle
or
fcompl
xor
mov
fsub
adc
pop
comiss
adc
cmp
push
xchg
sbb
ljmp
sbb
push
es
faddl
or
cmp
test
mov
daa
ds
sub
imulb
cmp
cltd
shl
mov
lock
xor
icebp
lret
in
inc
xor
inc
push
repnz
mov
push
movsl
fs
mov
lret
lods
mov
lods
push
es
xchg
sub
mov
fistps
inc
sarb
xor
stos
push
ror
mov
ds
imul
pop
int
xor
adc
add
mov
adc
jb
xchg
adc
lods
pop
icebp
xor
mov
jp
mov
sbbl
push
mov
in
jecxz
pushf
dec
loopne
push
test
shrl
addr16
fstps
jnp
inc
sbb
cld
adc
dec
inc
out
pusha
sub
mov
ret
xchg
push
insl
and
pop
repnz
popa
or
ret
repz
aaa
jg
packssdw
lods
rcr
xchg
jbe
mov
add
iret
xor
cmp
and
xor
xchg
adc
aad
sti
ret
cs
js
call
mov
scas
iret
sub
cmp
insb
or
sbb
xor
inc
clc
insb
cli
inc
in
dec
ds
das
ret
repnz
cmc
fimuls
ja
cmp
loopne
pop
pop
rolb
sbb
outsl
jns
inc
fwait
or
xor
les
out
aaa
mov
lea
mov
xor
lds
sub
daa
push
jg
lahf
mov
stos
or
test
and
jo
sub
fsubs
imul
mov
mov
imul
call
test
outsl
push
xor
leave
adc
das
addr16
sub
dec
out
jmp
mov
addr16
xchg
adc
mov
lahf
and
pop
aaa
aas
lret
pop
inc
rorl
push
push
inc
xchg
mov
add
or
outsb
mov
ja
or
or
jno
stc
dec
inc
add
and
aaa
jl
pop
jnp
push
gs
repnz
outsb
cmp
or
and
ss
dec
ss
jmp
xor
shr
mov
sub
cld
js
cmpsb
fldenv
mov
stc
mov
mov
lret
jp
out
jo
dec
test
jb
xchg
test
sbb
aad
xor
xchg
and
adc
nop
jb
lea
movsl
push
loop
sub
inc
mov
clc
push
pop
js
int3
or
jg
xchg
cwtl
cwtl
mov
ffreep
xchg
out
or
jg
cltd
mov
rorb
fcoml
out
pop
mov
and
stos
xor
cmp
push
pusha
aaa
add
jle
mov
stos
mov
imul
inc
enter
inc
xor
sub
sbb
mov
jmp
jecxz
outsl
sbb
xor
aad
xchg
and
or
sbb
dec
pop
sahf
mov
insl
xor
jo
xchg
insl
push
pop
sub
dec
movsl
bound
dec
push
inc
and
push
adc
push
repnz
add
cmp
mov
mov
mov
mov
lahf
in
push
iret
gs
sbb
pop
das
push
sub
sahf
jne
add
rolb
pop
xchg
push
enter
dec
push
mov
sbb
pop
cmc
jo
cmp
mov
dec
test
cmp
int3
push
add
xchg
icebp
pop
sub
xlat
les
fbstp
filds
cmpsb
fcmovb
mov
xchg
jge
adc
insb
cmp
rolb
jnp
sbb
ja
fistpll
xor
dec
push
imul
sbb
push
push
fnstsw
mov
sar
sbb
sarl
es
pop
mov
scas
and
mov
xor
movsl
mov
jecxz
and
lret
xlat
add
inc
cmc
inc
sub
imul
mov
cmp
cwtl
pop
jl
mov
cmp
mov
push
dec
je
add
sbb
mov
push
add
xchg
push
push
pop
jge
add
das
cs
int3
lods
mov
pusha
mov
ror
and
add
xchg
test
clc
add
clc
pop
lock
lret
mov
or
mov
sar
inc
dec
test
pop
pop
dec
adc
push
pusha
dec
sahf
jno
ja
cmp
add
sbb
push
pop
pushl
add
popa
pushf
or
push
in
sbb
xor
fcomi
pop
xlat
sbb
inc
fwait
sbb
out
and
mov
and
and
je
outsb
mov
int3
cltd
xor
faddl
jns
cmp
je
xlat
pop
neg
jp
or
jle
add
push
dec
inc
xor
repnz
cmpsb
cmp
jle
mov
jmp
fnstcw
pop
mov
mov
add
add
cmp
sbb
aaa
lods
mov
call
lcall
adc
addr16
mov
loopne
ljmp
mov
cmp
mov
jle
stos
hlt
mov
inc
outsb
das
cmp
jo
popf
adc
je
mov
cmpsb
popf
into
sti
ffreep
in
push
sbb
enter
jmp
add
xchg
sbb
lret
outsb
imul
cli
shrl
lret
push
lret
fcmovbe
flds
mov
jbe
mov
into
sti
outsb
mov
roll
lods
jnp
fwait
rolb
push
dec
mov
xlat
add
push
mov
shrb
dec
dec
ja
test
sbb
push
sbb
in
xchg
insb
aam
ja
bound
jmp
xor
xchg
pusha
pop
ret
adc
nop
cmp
add
sarb
xchg
pushf
sub
ja
mov
cmp
stos
push
cmp
mov
xchg
arpl
imul
into
mov
ja
push
flds
les
bound
mov
xor
andb
add
adc
sbb
pop
adc
stos
cs
inc
leave
push
push
sbb
jge
add
cli
adc
fisubrl
std
fwait
xchg
popa
dec
fs
sub
jnp
push
int
out
sti
xchg
mov
push
mov
das
mov
out
mov
and
mov
je
popa
mov
sub
pop
into
add
adc
or
stos
jmp
scas
add
fnstenv
loopne
in
push
mov
dec
test
or
cmpsl
nop
cmp
lea
sbb
shl
test
mov
popa
aam
imul
inc
in
repz
ret
cmp
rcl
push
inc
shrb
adc
lods
pop
mov
test
inc
or
pop
aam
xchg
movsb
aad
jl
jle
jb
insb
pop
lret
sbb
nop
aaa
inc
mov
in
stc
sbb
and
xchg
popa
lret
mov
shr
loopne
adc
loope
fidivl
sbb
dec
mov
sbb
or
jge
cmc
xchg
out
mov
out
loop
dec
sub
mov
into
xchg
rcll
outsl
cltd
jle
inc
xor
test
mov
xor
dec
bound
or
in
cmpsb
jg
std
scas
aad
inc
jl
xor
test
mov
ret
cmp
outsl
fdivrl
mov
xchg
fsubr
dec
push
outsb
jno
shrb
out
and
mov
das
cmp
out
movsb
aam
jmp
xchg
mov
xchg
xchg
push
xchg
stc
xor
js
ret
mov
rclb
ret
mov
stos
or
faddp
std
jl
and
mov
dec
xchg
mov
test
jae
push
das
or
add
enter
pop
push
mov
cmpsb
call
mov
mov
hlt
rcrb
pushf
inc
xchg
out
divl
sbb
mov
dec
mov
inc
dec
jge
jge
in
adc
cltd
fisubl
cmp
arpl
icebp
ljmp
dec
xchg
loope
das
jne,pt
pop
out
clc
xchg
push
ljmp
popf
in
clc
sub
sub
cmc
les
xchg
fsts
push
jae
repz
mov
inc
push
xchg
inc
fwait
xchg
fstpl
out
mov
es
imul
aad
idivl
shrl
jne
call
jmp
mov
scas
lcall
lcall
xchg
imul
pop
push
iret
shrb
adc
mov
lea
int
fiaddl
mov
push
xor
iret
xchg
scas
pop
xor
addb
xchg
into
mov
lods
ror
pop
xlat
jns
mov
int3
push
jb
push
outsb
enter
ds
fs
push
mov
arpl
inc
jb
inc
jo
fistpll
xchg
popa
test
add
cmpsl
inc
cmp
jbe
inc
int
ds
adc
imul
mov
jnp
add
mov
or
icebp
pop
xchg
pop
mul
dec
jge
push
mov
cmpsb
xchg
ss
add
js
push
xor
fidivs
repnz
adc
stos
xchg
mov
xor
inc
ss
push
ret
lret
mov
jg
test
sti
test
imul
mov
rorl
sbb
jmp
sub
jnp
addr16
hlt
enter
hlt
xor
adc
mov
out
inc
outsb
or
in
mov
fimuls
xlat
sub
loopne
cli
out
mov
ret
xchg
or
hlt
arpl
xorb
les
jg
movsl
cmp
fisttpl
ret
jae
andb
adc
jne
adc
ljmp
push
xor
loopne
je
xchg
push
adc
and
xor
mov
xor
sub
dec
adc
sub
mov
mov
adc
mov
int
shll
std
sbb
pop
sbb
cmp
cld
mov
adc
sub
daa
mov
add
adc
mov
xchg
jecxz
cld
mov
rolb
out
xchg
mov
popa
jmp
fimuls
test
mov
movsl
rclb
aaa
dec
push
push
push
stos
fiaddl
xorl
into
pop
sbb
adc
lea
push
mov
nop
aad
add
sub
mov
jmp
das
repnz
int3
repnz
roll
movsb
sub
pusha
jb
ret
jns
insb
movsb
test
into
loope
int
mov
pushf
cmp
push
imul
pop
movsb
adc
mov
rorl
jge
dec
lds
mov
mov
push
hlt
pushf
test
in
mov
dec
push
std
jnp
iret
clc
adc
ror
add
sbb
in
ja
into
dec
mov
push
adc
clc
arpl
loope
icebp
mov
aam
outsb
or
fsubrs
mov
sub
mov
or
inc
mov
mov
movsl
cmp
fldcw
iret
test
add
aad
xchg
xchg
xlat
aam
dec
dec
mov
xchg
add
arpl
idivl
xchg
cmc
movsl
xchg
pop
movb
dec
andb
mov
jae
dec
and
pop
push
mov
cltd
addr16
scas
js
js
aam
xchg
ds
xchg
out
inc
add
dec
mov
out
aas
test
scas
aas
cmpsl
pop
push
cmp
jae
lret
scas
in
ficomps
sbb
pop
int3
or
in
push
add
fidivs
out
add
cmp
fisubrs
sub
mov
sub
sub
xchg
aaa
adc
imul
push
dec
je
loopne
iret
dec
ret
or
or
fstl
jnp
pop
dec
jecxz
lcall
push
neg
add
adc
mov
pop
adc
mov
jno
or
sub
sub
leave
into
pop
sbb
pop
leave
jbe
cli
outsb
jne
adc
fsts
mov
imulb
push
jb
popf
and
or
mov
mov
arpl
cmpsl
xchg
jns
push
bound
popa
mov
shrb
pop
fwait
andl
hlt
mov
cmpsl
mov
xlat
push
mov
push
ror
xchg
nop
cmc
popf
sub
push
lea
cltd
xor
testb
cltd
pop
je
push
in
inc
push
aad
or
adcl
mov
fs
jl
dec
pop
push
jns
test
insb
push
aas
stos
mov
lcall
mov
sub
add
subb
stos
fldcw
jle
mov
sar
pusha
insb
or
cltd
fistpll
inc
pop
xchg
outsb
mov
repnz
push
cwtl
cmp
pop
or
xchg
mov
sub
or
clc
ret
shr
adc
in
pop
xchg
cmp
sahf
inc
xchg
and
inc
clc
pop
fsubs
stc
ss
xchg
pop
mov
mov
pop
xor
jmp
stos
xchg
idivl
int
pusha
push
mov
shl
xor
arpl
sub
je
icebp
xor
mov
movsb
ficoms
orb
cld
imul
mov
sbb
sub
lea
mov
out
inc
mov
pop
dec
fucom
xchg
mov
sub
scas
mull
sub
adc
xchg
pop
inc
aam
pop
and
cwtl
mov
imul
enter
loopne
ljmp
pop
test
loope
movsb
and
push
dec
jl
aas
or
lret
cmp
inc
lcall
cmp
into
mov
or
push
xchg
stc
dec
mov
bound
int3
cmp
icebp
lahf
loop
add
cmp
mov
mov
push
mov
out
jge
repnz
and
sub
imul
mov
mov
mov
pop
jg
fiadds
cmpsb
dec
mov
jmp
out
mov
push
cmp
pop
pop
movsb
fst
cmp
sbb
or
cmpl
pop
sbb
dec
das
mov
cmpsb
cmp
popf
and
frstor
jns
enter
add
das
dec
inc
adc
xor
leave
cli
shlb
in
in
mov
mov
nop
mov
pop
inc
out
push
push
push
mov
pop
imul
pop
push
lods
mov
mov
xchg
mov
xor
ror
imull
loop
mov
daa
cmp
pop
jmp
fimuls
lcall
mov
js
mov
scas
push
icebp
cmc
arpl
ret
adc
jns
rorb
fistl
repz
jae
fsubr
sub
mov
pop
ss
loop
imul
and
in
mov
jbe
and
xor
aad
lea
and
hlt
mov
or
or
test
sbb
les
dec
mov
mov
in
mov
and
jp
push
iret
inc
or
in
pop
and
mov
lods
divl
dec
cmc
inc
adc
push
cmpsb
enter
and
rcrb
cli
sub
jo
loopne
test
das
daa
mov
sub
fisubs
rcrb
pop
imul
mov
shrb
je
sub
push
js
je
rorb
nop
idivl
inc
mov
fbstp
push
int3
push
dec
call
inc
pop
rcrb
scas
test
lods
data16
pop
jle
pop
fwait
lods
subb
and
stos
scas
icebp
in
and
dec
test
cwtl
mov
and
shlb
xor
mov
test
mov
dec
jg
cmp
iret
add
and
pop
xor
adc
push
aad
scas
mov
pusha
pop
cmp
cmp
jae
mov
xor
aad
pop
scas
ss
and
mov
sbb
mov
jne
cmp
adc
mov
lods
js
out
in
fsts
mov
or
pusha
cmc
push
test
in
arpl
ljmp
add
sahf
add
mov
mov
loop
std
xorb
fwait
pop
sti
mov
insl
add
jb
repz
aas
xchg
adc
rolb
push
addl
ds
cld
add
jle
xlat
push
xchg
push
mov
cmp
pop
adc
push
dec
mov
jge
jo
clc
pop
scas
out
xor
fs
and
cld
adc
mov
pop
dec
mov
pop
es
or
add
inc
inc
sub
mov
push
sub
lock
cli
add
and
popf
lock
inc
and
lea
cmpsb
xchg
hlt
sarb
pop
adc
pushf
sbb
sub
or
pop
cltd
scas
inc
mov
inc
insl
loope
into
cmp
inc
aad
mov
aad
xchg
mov
test
rcl
xor
and
inc
addr16
xor
into
imul
arpl
jnp
lret
and
lahf
and
scas
subb
andb
or
cld
dec
add
ror
movsb
or
jo
jg
add
sbb
lret
xor
cs
cld
or
mov
cltd
sub
add
out
sub
jge
jno
lods
jb
cld
fadd
inc
js
push
sub
mov
or
push
push
addr16
in
in
sbb
jns
jl
fisttpl
adc
inc
xor
dec
dec
pop
stos
pop
leave
aam
add
inc
fldl
add
and
push
pop
cmp
test
inc
cmp
or
lcall
movsb
add
pop
jns
out
add
lea
pop
sbb
sbb
ret
push
mov
jge
or
sbb
cmp
mov
es
call
mov
lds
test
jp
in
sbb
jnp
push
lea
jl
in
lea
xchg
lahf
movl
movsl
jae
pop
jecxz
lods
testl
inc
dec
sub
das
xorb
bound
mov
stos
xor
mov
div
mov
dec
lds
js
adc
jbe
or
sar
mov
jnp
xchg
sbb
pop
cld
call
inc
cwtl
iret
testb
sti
aad
into
sbb
dec
rcrb
xorl
jle
add
sbb
fs
addr16
ja
mov
fsubl
mov
aam
outsl
add
xchg
fcoml
mov
sbb
add
je
icebp
mov
add
add
out
adc
int3
push
fisubl
test
lcall
shrl
push
addr16
lods
mov
mov
fisttpll
jns
outsl
insl
adc
jmp
add
stc
je
and
mov
sbb
inc
cmc
vcvtps2pd
aad
fwait
cld
int
pop
or
add
fs
push
in
xor
dec
push
sub
pop
push
sti
dec
loope
lods
mov
mov
sbb
inc
jmp
sub
cmp
add
mov
push
js
ja
adc
mov
aad
push
insl
rol
sahf
ret
fsubs
jns
scas
sub
lret
test
inc
iret
popf
sarl
cmp
in
movsb
cmpb
imul
pop
add
dec
or
xchg
and
jo
push
dec
aad
mov
cwtl
pop
movsl
xchg
cmpsl
out
and
mov
mov
repz
arpl
scas
mov
sub
sub
push
fstps
mov
into
js
or
ja
gs
pushf
push
lret
lds
pop
shrl
jge
or
mov
jge
int3
and
mov
cs
mov
xor
adc
aas
iret
loopne
adc
daa
mov
das
outsb
jecxz
dec
push
shrb
xchg
addr16
xchg
push
xchg
fnstsw
jl
lahf
divl
cltd
lods
cmp
out
inc
clc
xchg
xlat
and
sbb
sub
aam
stc
cmc
inc
adc
ja
sub
rcrl
popf
mov
out
inc
add
aad
test
stc
ja
aam
or
shlb
xor
jne
ds
mov
xor
sarl
jmp
in
sub
faddl
clc
iret
add
or
cmp
out
pop
mov
ds
fnstsw
lock
pushf
mov
je
sub
test
push
sbb
enter
sbb
clc
jb
cmp
jbe
or
push
in
mov
out
mov
jno
or
loop
rcl
shl
cmpsl
mov
int
dec
mov
sbb
subl
adc
mov
mov
movsl
inc
cmpb
cltd
stc
push
push
insl
xchg
add
mov
mov
out
mov
xchg
xor
vpunpcklwd
popf
loope
aam
xor
sub
out
xchg
mov
movsl
inc
leave
mov
enter
mov
push
and
in
xchg
popf
f2xm1
inc
dec
push
ljmp
imul
pop
xor
add
mov
sub
xchg
jae
shrb
bound
pop
stos
pop
add
popa
movsb
shrl
es
stc
fcmovu
and
jae
mov
adc
in
gs
jp
mov
addl
iret
jbe
sarb
lods
cs
test
hlt
test
xchg
fcmove
lods
pop
dec
icebp
push
std
das
cmp
aad
mov
sub
out
xlat
cwtl
add
dec
push
add
mov
in
lods
lret
aam
add
cmpb
adc
xchg
orl
stos
pusha
lock
fstpl
xchg
pop
pop
sarl
dec
push
test
faddl
pushf
mov
js
sti
pop
clc
pop
movsb
and
out
movsb
jne
fucomp
push
sahf
mov
in
jmp
push
iret
pop
int
sbb
fdivrl
pop
not
jge
inc
pusha
push
mov
mov
inc
jp
std
sub
popl
jmp
movsl
push
jb
imul
loopne
test
pushf
xchg
mov
stos
xor
mov
outsl
cwtl
sar
mov
pop
dec
jne
mov
xchg
loop
inc
xchg
imul
ficoml
ret
cmp
sbb
mov
pop
mov
lds
dec
jle
cmp
arpl
insb
mov
cli
cmp
push
lea
pop
cmp
test
mov
outsb
push
inc
aaa
dec
mov
lret
and
or
inc
add
push
roll
xchg
sbb
cmpl
sub
cmp
lds
mov
enter
popf
sub
in
orl
mov
mov
imul
mov
stc
pop
rep
mov
push
dec
fildl
fcmovnu
sahf
or
test
sbb
lahf
mov
adc
push
add
sub
push
push
inc
leave
push
popf
fstl
inc
ds
psrad
pop
aad
inc
mov
xchg
loop
mov
jae
scas
jo
jmp
outsl
mov
sbb
jb
xchg
cld
add
je
and
jne
pop
popa
push
lods
dec
push
lret
dec
das
insb
mov
inc
mov
mov
iret
sbb
push
fsts
enter
ljmp
sti
nop
ds
sub
or
jno
inc
scas
aaa
gs
dec
mov
in
mov
push
push
movsl
sbb
aas
outsl
test
movzwl
imul
addr16
mov
int3
icebp
das
and
int3
scas
inc
outsb
mov
ror
andb
or
jo
cli
mov
pushf
pusha
xchg
iret
pop
icebp
pop
mov
scas
pop
push
out
pop
fists
repz
gs
incb
pop
mov
jecxz
lods
push
fldt
pop
loopne
lret
sti
fdivl
out
out
hlt
xor
and
add
lret
pop
imul
inc
mov
loopne
inc
xor
lea
imul
shl
cmpsl
xor
mov
stos
cmp
push
inc
pop
jne
daa
test
mov
pop
leave
in
dec
push
inc
gs
cmc
sbb
or
cmp
clc
xlat
movsb
inc
pop
cmp
push
lods
sbb
or
xchg
shlb
rep
mov
mov
sub
fdivl
pop
enter
dec
cmp
dec
nop
mov
xor
cld
add
jl
jne
push
inc
in
cmp
mov
andb
pop
push
xchg
stc
inc
xor
test
push
rcll
fidivl
add
shll
lret
test
vmovaps
cwtl
dec
shll
in
aam
mov
cmp
mov
push
in
mov
insl
cmc
adc
jmp
jnp
or
scas
sbb
xchg
addr16
push
daa
dec
xor
adc
pop
popf
fistpl
popf
sbb
dec
daa
test
jb
repnz
negb
add
test
jbe
cltd
or
or
or
ljmp
dec
ljmp
sbb
andl
xchg
les
dec
sbb
dec
add
imul
jne
mov
sbb
xchg
push
sbb
insb
pop
or
sbb
addl
dec
pop
iret
jnp
and
dec
xchg
gs
pushfw
fsubs
insb
daa
sub
pop
leave
xchg
aas
arpl
scas
and
push
jb
test
scas
push
or
jo
dec
xor
push
xor
xlat
in
cltd
dec
mov
sbb
outsl
popfw
pop
test
cmpl
rcrb
push
sbbl
out
xor
ret
jno
repz
sbb
pop
adc
mov
cmp
mov
jno
addl
fwait
pop
aaa
xor
shrb
sbb
test
sub
repnz
xchg
add
jle
les
mov
lods
ret
or
daa
orl
loope
out
shrl
ret
in
push
add
es
das
mov
sub
add
movsb
pusha
jle
enter
daa
xor
mov
aaa
jae
in
adc
ja
push
jle
push
insb
push
jns
cli
cmp
push
xchg
push
mov
es
cli
wbinvd
xchg
stc
jg
repnz
es
in
jb
rcrb
xor
out
push
call
inc
out
jns
aam
inc
or
sub
add
test
movsl
and
xor
bound
fisttps
or
mov
clc
in
cli
pusha
dec
shlb
aaa
sub
xor
stos
pop
or
std
arpl
gs
sbb
std
in
fisttpl
pusha
cmpsb
mov
dec
dec
xchg
fcoms
ljmp
mov
out
das
pushf
imul
insl
jecxz
cmc
andl
push
test
xor
daa
mov
inc
sub
inc
lahf
jns
inc
xorl
outsl
inc
enter
lock
xchg
scas
push
repz
cld
jg
pop
cmp
outsb
fsubs
pop
jle
in
xor
pop
sbb
push
cmp
repz
pop
or
pop
ljmp
and
mov
lahf
cld
inc
push
mov
dec
mov
aad
jbe
js
and
dec
or
test
dec
movsl
shl
out
insl
in
movsb
jle
aaa
dec
jns
dec
testl
stos
mov
dec
loope
dec
ljmp
into
popa
fildl
lret
cli
loope
repz
pop
mov
repz
leave
test
in
mov
sarl
xlat
or
mov
mov
fstps
ja
jno
or
sub
idiv
ret
daa
out
or
jae
popf
icebp
adc
icebp
mov
adc
in
mov
or
rcr
mov
movsb
stc
xchg
daa
outsb
fcom
adc
add
mov
negb
inc
shlb
sub
shlb
outsb
push
mov
shr
mov
icebp
mov
jmp
pop
push
push
dec
leave
loope
sahf
xchg
lret
popa
push
mov
jl
sti
adc
mov
xor
stc
push
sbb
xchg
outsl
enter
sahf
mov
adc
jne
addr16
sbb
clc
or
in
in
daa
sbb
pop
mov
inc
imul
mov
test
inc
lahf
fisttps
in
jle
aaa
jl
js
cmp
nop
cmp
lods
into
mov
lock
push
out
test
push
pop
pxor
rclb
aaa
loopne
and
xchg
add
mov
pop
mov
fidivl
aaa
push
mov
xchg
gs
call
pop
and
dec
inc
out
push
mov
into
pusha
stc
pop
roll
loopne
fldenv
or
sarl
aaa
rorb
ja
jne
pmulhw
mov
jge
in
dec
jle
xchg
sahf
fidivrl
xor
clc
and
dec
adc
mov
mov
sub
ljmp
outsb
imul
cmp
mov
mov
inc
dec
bound
cltd
fwait
dec
adc
mov
mov
push
dec
push
sbb
xchg
sahf
in
repnz
mov
in
cmpsb
and
loop
sbb
dec
fsubrp
add
and
jno
xchg
push
push
push
xor
jge
sbb
push
testb
mov
and
lds
inc
dec
dec
pop
mov
out
jl
mov
xlat
jb
sub
into
outsl
push
pusha
rorb
fldenv
sbb
push
test
push
xchg
lds
xor
lahf
shrb
xchg
fs
imul
or
loope
inc
jmp
shld
js
shlb
int
cltd
je
out
and
sub
dec
mov
sahf
sub
xchg
mov
or
xor
mov
leave
xor
insb
pop
push
movsb
and
adc
mov
rcll
cltd
pop
adc
das
ja
lret
jns
dec
inc
xchg
decl
inc
inc
icebp
pop
int
cmpl
daa
inc
adc
sub
mov
add
mov
sub
inc
or
mov
sarb
dec
push
fbld
sub
int
adc
push
mov
adc
mov
mov
jmp
jmp
je
inc
sbb
adc
clc
imul
push
inc
int
shrl
inc
adc
mov
test
xchg
sbb
mov
shlb
add
mov
hlt
sti
pop
sti
jbe
or
xchg
mov
imul
mov
adc
sbb
mov
stos
sub
sub
out
inc
push
cwtl
mov
dec
fs
adc
mov
cltd
push
mov
insl
mov
jo
inc
shl
mov
dec
insb
shl
nop
mov
mov
fs
jecxz
mov
insl
and
inc
stos
adc
cs
rolb
psllq
imul
aaa
dec
xchg
jo
lock
ret
pop
push
push
jg
add
and
bound
or
sti
xchg
imul
xchg
cmp
loopne
stos
movsl
cmp
fisttpll
rol
sub
and
notb
out
jnp
mov
stos
data16
add
nop
dec
pop
cmp
mov
inc
sub
fidivs
in
xor
into
rep
dec
out
in
pop
push
out
jecxz
and
nop
pop
cwtl
leave
dec
mov
adc
mov
scas
pushf
in
mov
add
js
rclb
fldl
loope
jne
xlat
pushf
xlat
inc
js
or
mov
mov
dec
xchg
push
inc
scas
add
mov
or
repnz
pop
incb
cmp
sub
lds
std
cltd
fldl
mov
xor
ljmp
cmpsb
ficoml
pusha
xor
rcll
movsl
out
ror
and
sbb
or
insb
mov
sahf
mov
fldl2e
insl
mov
mov
or
mov
sub
mov
dec
push
add
pop
mov
or
or
test
mov
dec
in
push
xlat
lock
sti
add
jnp
adc
sbb
adc
push
out
add
xchg
mov
stc
and
and
cmp
stos
add
and
and
iret
or
lret
push
sbb
mov
dec
int
dec
xor
adc
pop
add
das
inc
cmp
pop
xor
mov
cmp
jecxz
cltd
adc
mov
std
jge
fwait
imul
outsb
push
jl
enter
enter
mov
jp,pn
leave
inc
inc
testl
mov
aas
addr16
mov
enter
sahf
pushf
imul
mov
inc
out
xor
jp
sub
pop
loopne
mov
fcmovnb
push
ja
into
ds
add
inc
pop
rorl
and
lahf
and
test
popf
ret
pop
jo
stos
imul
aam
mov
movsb
movsl
dec
loopne
jecxz
pushf
sbb
or
adc
cltd
pop
xor
mov
pop
xor
out
push
popa
pop
lock
dec
or
push
push
jno
test
xchg
cmpsb
testl
adc
lock
dec
cmp
lds
nop
daa
cmpsb
out
mov
jb
xchg
add
sub
and
cwtl
ror
shll
inc
cmc
dec
je
adc
clc
in
aas
or
xor
test
cmp
mov
fdivrl
push
sub
ljmp
or
dec
aaa
fcomps
lods
out
inc
adc
push
push
and
fadds
test
ret
adc
xor
xchg
pop
jo
dec
dec
mov
cld
sarb
enter
cmc
cmp
adc
bound
mov
dec
shlb
jno
adc
hlt
shll
fistpll
push
dec
adc
pop
xor
xor
xlat
mov
push
and
pop
jp
sbb
imul
push
or
cmp
sahf
cmpb
sbb
insl
inc
push
pushf
cmpsb
ficomps
outsb
inc
pop
mov
mov
fcomi
add
sbb
fsubs
into
pop
push
mov
push
xor
sbb
aad
mov
jne
cli
dec
sub
pop
push
adc
lahf
adc
fmuls
lock
scas
ss
movsl
pusha
cs
push
push
aas
adc
jb
pop
cmp
xor
cmp
nop
dec
push
test
dec
mov
fbld
inc
outsb
mov
inc
out
cltd
jo
xchg
cltd
std
jge
mov
mov
xor
iret
jno
std
popf
jo
out
enter
cmova
pop
insb
stos
das
cmpsl
sub
mov
sbbb
inc
pop
cwtl
les
inc
ljmp
mov
add
sahf
movsb
sub
ljmp
notb
fcoms
sbb
popf
xchg
ds
jl
int3
dec
and
aam
fdivrl
popf
sub
shlb
xor
test
xchg
inc
mov
es
inc
xor
insl
or
sub
cs
out
jmp
js
xchg
xor
fisttpll
fld
xor
scas
je
scas
aam
xchg
je
movsb
cmp
out
in
xchg
aad
movsl
frstor
push
adc
cmp
pop
insb
push
dec
xlat
cltd
mov
outsb
add
add
jg
lock
ljmp
inc
jmp
subl
push
push
sub
dec
inc
push
jb
aam
shrl
loopne
std
jmp
pop
and
pop
adc
shl
setnp
push
add
push
cli
push
sbb
es
adc
and
jl
xchg
mov
jns
jns
cltd
imul
mov
cmp
pop
mov
lahf
test
sbb
shld
enter
xchg
cltd
xor
or
cmp
hlt
mov
mov
lock
je
xchg
sbb
iret
sbb
mov
ljmp
sub
or
rcrb
push
cmpsb
mov
xchg
jo
and
sahf
iret
scas
mov
lea
sub
loopne
int
cltd
aas
cmp
cltd
imul
scas
sbb
testl
ds
repnz
idivb
adc
mov
or
mov
push
scas
xor
loope
lock
push
stos
mov
inc
lahf
ret
fdivrl
xchg
aam
and
mov
out
adc
fwait
sbb
mov
clc
or
leave
lret
int
stos
lds
sub
xor
insl
mov
hlt
test
jno
bound
mov
ja
pop
loopne
xchg
xchg
incb
adc
cltd
je
out
sub
xlat
popa
in
pushf
test
rolb
ss
fwait
shr
das
sbb
dec
pop
push
test
xlat
addr16
xchg
xor
and
leave
outsl
jb
pop
pop
scas
mov
movsb
jg
push
movups
xchg
pop
xor
ds
xchg
pop
adc
xchg
push
push
xor
pop
or
push
sbb
and
or
mov
arpl
xchg
dec
jge
mov
fsubs
and
dec
sahf
imul
jmp
popf
in
or
outsb
sub
pop
jg
add
icebp
pop
pop
hlt
int3
imul
or
aad
rclb
inc
and
xchg
adc
cmp
and
addr16
mov
lods
mov
inc
pop
pop
sbb
mov
outsb
aam
dec
js
jo
mov
notb
fsubl
sbb
das
pop
push
movsb
mov
int
orl
fimull
ja
add
hlt
jbe
mov
sbb
out
xor
cmp
pop
xchg
es
inc
out
ficompl
fldl
lds
shll
xor
pop
xor
out
test
addr16
jo
xor
push
add
loope
push
adc
and
in
xchg
cli
mov
mov
pop
fmuls
ret
mov
mov
cwtl
push
fisttpll
add
lahf
lret
sahf
out
mov
mov
inc
xor
cmp
mov
das
sub
loope
out
cltd
xchg
add
jg
xchg
and
js
push
enter
repz
rcr
mov
daa
mov
mov
jp
lret
xchg
clc
jp
xor
lods
faddp
mov
mov
adc
fs
jno
sub
add
pop
js
jo
add
dec
sti
ret
adc
xchg
or
in
mov
push
repnz
lods
pop
lea
sub
subl
std
jb
dec
push
lret
add
into
shll
icebp
add
insl
fs
subl
pop
mov
inc
fisubrs
cmp
popa
or
testb
jae
mov
sbb
nop
inc
mov
cmp
push
arpl
cmp
jne
mov
ficompl
mov
fldt
jnp
out
into
push
pop
pop
cs
out
jge
mov
sbb
ss
imul
dec
and
cli
call
push
lret
les
xor
inc
cmpsb
mov
cmc
adc
pop
in
xor
pop
add
or
xor
ret
in
scas
mov
shl
arpl
push
sub
mov
cmp
imul
jecxz
hlt
aas
aad
repz
pop
fstpt
fldt
mov
xor
pop
add
fdivrs
data16
es
pop
pop
add
lock
cwtl
dec
call
imul
into
rcr
test
les
popa
insl
movsl
nop
sbb
add
or
sub
test
mov
repnz
mov
add
inc
lods
add
fbstp
sub
adc
jnp
cs
fwait
pop
mov
pushf
cs
push
mov
push
mov
out
xchg
xchg
mov
jp
inc
pop
xchg
notb
mov
icebp
xlat
inc
lcall
xor
je
add
divb
push
sti
mov
mov
push
ljmp
sub
inc
jae
jo
sub
mov
mov
cltd
iret
fcomp
orl
clc
mov
rcrb
std
ret
sbb
daa
iret
out
rol
pop
ljmp
xchg
adc
xor
xchg
icebp
jg
dec
sub
cwtl
push
adc
ret
adcb
mov
gs
imul
lcall
out
imul
jg
mov
sub
inc
push
lcall
test
sti
dec
jecxz
or
sbb
sbb
repnz
ds
dec
xchg
xchg
rcll
int3
inc
pop
mov
add
cmp
stos
loopne
sub
std
fs
imul
icebp
sub
sbb
push
orb
push
sub
aam
dec
mov
loop
rol
js
xchg
cltd
push
test
in
andl
add
pushf
repz
in
loope
out
lret
dec
mov
xor
scas
bound
mov
insb
jmp
sbb
loopne
xchg
dec
into
sbb
xor
sub
int
adc
into
push
int3
repnz
enter
ds
mov
xchg
je
push
xchg
jmp
xor
jae
mov
clc
cld
mov
pop
nop
push
lea
test
mov
pushf
xor
movsl
and
int3
inc
pop
xchg
lret
pop
pop
jge
stos
fdivrl
scas
pushl
in
popf
rorb
insb
ficompl
inc
xor
push
mov
mov
sbb
jp
hlt
hlt
adc
into
cmc
sub
bound
ja
loop
cld
in
nop
mov
and
sub
ja
and
or
cmp
bts
add
xor
sldt
mov
popa
test
pop
pop
or
sahf
pop
test
xor
mov
out
sbb
sar
jns
push
je
popa
jb
in
push
adc
fmull
add
jmp
addr16
sbb
jg
ficoms
or
sbb
mov
arpl
gs
divb
jo
push
push
adc
adc
icebp
ljmp
data16
ss
sbb
and
sub
stos
cmp
cmp
lcall
and
inc
shlb
and
xchg
jno
or
stos
push
cltd
dec
adc
add
shrb
cltd
jnp
cmp
cli
pop
jge
or
nopl
setb
jecxz
mov
mov
mov
stos
jnp
or
sahf
data16
xlat
inc
add
sub
cmpsl
pusha
xchg
jae
xor
cli
in
jbe
test
cld
rcl
xchg
enter
es
mov
and
aaa
mov
call
aaa
xor
cmpsb
push
and
fisubrl
and
clc
or
xor
adcb
xchg
popf
mull
add
sbb
push
sub
xchg
leave
or
roll
fsubl
lret
aad
pop
sbbl
and
imul
cmpsl
cwtl
mov
test
xchg
mov
jg
imul
aas
mov
test
jnp
cld
test
adc
add
shl
push
push
mov
outsl
das
mov
int3
popf
repnz
xchg
mov
mov
inc
or
push
pop
outsl
scas
hlt
lea
push
jg
lcall
jg
insb
pushl
leave
call
mov
bound
sub
add
call
sbb
push
imul
mov
sbb
repnz
cwtl
mov
inc
lret
int
sbb
adc
xor
lods
arpl
lea
ds
into
mov
mov
repnz
nop
add
jmp
stos
cmpsb
mov
adc
or
push
push
mov
push
cmp
add
sub
and
cmpsb
jno
inc
insb
cmp
lds
repnz
pop
or
jle
arpl
cltd
mov
stos
push
cmp
mov
jl
in
mov
sub
ss
and
inc
test
xchg
lock
pop
fldt
mov
dec
mov
or
push
mov
sbb
sbbl
mov
popa
xorl
out
subl
and
mov
mov
lea
shll
push
add
push
imul
sub
movsl
adc
sbb
pop
aaa
mov
lods
push
cmp
mov
xchg
scas
out
pop
stos
sbb
in
call
inc
addr16
and
cs
out
mov
or
cmp
imul
pop
xchg
jae
dec
lahf
add
mov
mov
or
in
arpl
xchg
xchg
addr16
gs
xchg
loope
aad
dec
push
shll
adc
adc
xchg
xchg
hlt
fdivl
mov
lods
xchg
flds
aaa
mov
pop
aam
adc
lea
test
sub
push
leave
testb
mov
cmp
and
mov
cmp
loope
xchg
lock
mov
aas
adc
test
pop
mov
mov
mov
adc
jle
mov
jno
mov
imul
clc
xchg
movsl
and
cltd
aas
loope
loopne
cltd
push
hlt
nop
xchg
mov
jp
inc
insb
cmp
js
jmp
add
testl
jle
in
leave
fidivl
inc
test
lock
cmpsb
mov
out
cmp
pop
inc
jge
cmc
sarb
lret
add
mov
pop
leave
jp
pop
iret
jmp
xor
mov
xchg
cmpsb
icebp
mov
and
add
lret
imul
jmp
adc
fwait
xchg
lock
in
imul
out
xchg
movsb
aaa
jne
imul
push
imul
dec
fwait
and
and
incl
mov
into
out
stos
lds
inc
or
xchg
inc
lock
pop
sbb
movsb
mov
stos
loopne
sbb
test
dec
add
mov
lcall
iret
out
xor
cli
shrl
mov
in
arpl
mov
or
pop
sbb
xchg
out
mov
inc
adc
jecxz
pop
and
mov
pop
rolb
inc
cmc
or
mov
cs
mov
into
dec
jae
adc
add
jmp
dec
xchg
and
movsl
mov
mov
outsl
xchg
and
lods
jmp
cwtl
adc
dec
or
mov
dec
xor
mov
mov
icebp
inc
insb
push
ds
add
mov
jns
mul
ret
add
insl
xor
cmpl
rcll
sub
or
mov
in
xchg
adc
add
ljmp
movsl
bound
add
aad
xlat
and
pop
mov
mov
insl
sbb
in
xchg
xlat
pop
xchg
xchg
push
mov
lret
hlt
idivb
cmp
insb
lods
cwtl
and
jns
test
inc
dec
jl
jl
clc
imul
cmp
test
arpl
mov
aaa
insl
inc
outsl
rcrl
mov
iret
mov
push
cmp
or
repz
mov
popa
call
icebp
ja
pusha
ret
pop
sbb
rorl
pop
addl
lods
ja
jb
test
popf
clc
jb
shlb
add
pop
mov
outsl
adc
rorl
or
add
lret
aad
cs
xchg
stos
loope
insl
xchg
jo
sbb
out
xlat
sbb
js
mov
jecxz
mov
div
jno
pop
sbb
lcall
outsl
mov
out
outsl
adc
push
inc
cmp
in
cmp
cs
jl
sbb
ja
shrl
jbe
stos
sbb
loope
lret
iret
push
rcrl
jnp
arpl
adc
fdiv
inc
mov
add
aad
aas
or
adc
sub
subl
inc
je
mov
push
inc
adc
xchg
ret
push
mov
cli
push
movsb
cmp
pop
push
popa
cmp
add
fadd
subl
fimuls
bound
out
push
push
xorl
fisttpl
pop
mov
lods
sub
and
jno
pop
xchg
xchg
lock
xlat
in
sub
mov
lods
jecxz
imul
shll
testl
add
xchg
imul
lcall
adc
bound
xlat
out
pop
or
pop
mov
loop,pt
jle
shlb
pop
xor
in
pop
or
mov
and
jns
jmp
sub
pop
dec
imul
in
into
xor
mov
pop
sub
ret
scas
ja
pop
and
mov
jle
cmp
int3
les
push
and
cs
fs
cmpsl
fisttpll
mov
lods
test
orb
sarb
add
mov
mov
test
sub
or
pushf
adc
sub
push
mov
xor
cmc
xlat
mov
or
mov
stc
loop
rcrl
movsb
mov
xor
add
cmpsb
ljmp
cs
es
pop
xor
dec
mov
scas
subb
popa
cmc
mov
inc
outsl
hlt
inc
nop
testl
cmc
mov
gs
pop
dec
xor
leave
add
adc
insl
cli
lahf
pop
in
vpaddsb
sbb
js
rclb
fs
jecxz
xchg
lds
out
test
enter
sub
es
aas
mov
or
ljmp
pop
and
mov
stos
and
out
mov
fs
mov
lods
push
cmpsb
cmp
insl
push
jecxz
fbld
sarl
repz
or
outsb
loopne
mov
sub
call
and
test
vpminsw
cmp
push
es
dec
imul
lods
or
jmp
mov
xor
mov
insb
xlat
lods
adc
fidivrs
lds
adc
insl
push
lcall
or
pop
addr16
in
popa
adc
sub
mov
xor
insl
or
cld
fldl
xchg
adc
mov
mov
inc
pop
hlt
scas
and
das
xor
mov
orl
mov
frstor
fldt
cwtl
add
sub
popa
inc
out
outsb
arpl
jmp
inc
jg
jecxz
ficoml
jp
mov
clc
sbb
loope
pop
gs
popf
in
fildl
mov
insb
fcompl
sti
psrlq
push
aaa
inc
mov
sub
mov
shl
dec
cmpsb
test
dec
mov
xor
fmull
jge
xchg
pop
mov
lret
ja
lahf
les
call
lcall
bound
sbb
mov
cli
mov
loopne
inc
jmp
xor
rorl
sahf
aaa
adc
or
pop
pushf
mov
aam
push
lahf
jecxz
mov
mov
push
sbb
mov
in
sub
ds
bound
mov
outsb
add
cmp
xchg
push
mov
jae
cmp
push
out
xchg
sbb
dec
adc
insb
sarl
add
iret
dec
xchg
jge
enter
in
in
scas
popf
aas
ja
sbb
xor
ljmp
nop
sbb
cmpsl
sbb
dec
out
push
mov
movsl
push
jmp
inc
xchg
push
cmp
ret
jmp
push
jp
push
jno
in
xor
sbb
pop
xchg
data16
in
in
pop
xor
jo
pop
or
shlb
push
movb
jbe
sub
push
pusha
aam
insl
mov
leave
stos
sub
sub
xchg
outsb
enter
into
jne
mull
pop
jg
out
or
jmp
xlat
rclb
jge
adc
jne
xor
mov
and
dec
push
mov
mov
cmp
push
push
outsl
popa
in
loop,pn
push
pop
lea
js
leave
adc
cmpsl
add
pop
scas
push
push
xchg
pusha
lods
xchg
mov
mov
dec
fs
cmpsl
mov
cltd
jp
flds
dec
stos
pop
inc
sbb
xlat
cs
das
fldl
fcomip
and
mov
mov
cmp
gs
xchg
lods
lcall
mov
in
popf
popa
fucompp
into
jl
xchg
mov
or
and
fcoml
aas
dec
fwait
push
sti
add
jp
cltd
mov
jnp
pop
loope
inc
xor
xchg
adc
xor
imul
mov
cmp
mov
in
dec
and
jb
pop
mov
dec
cli
enter
in
lea
jle
or
jp
mov
outsb
cltd
cld
cltd
sarb
and
lock
out
pushf
out
mov
std
sbb
push
push
mov
shrl
pop
mov
mov
pop
ljmp
movsl
in
xchg
push
stos
arpl
push
enter
stos
push
imul
stos
lds
shrl
mov
imul
or
pushf
sub
dec
cltd
jnp
xchg
cld
adc
cmp
pop
pop
sti
ret
adc
cmc
int3
repz
xchg
mov
or
ficomps
pop
cmp
lret
in
push
add
xor
bound
sbb
or
aad
fidivrs
cmp
lock
call
xor
sahf
mov
test
clc
cmp
nop
daa
or
mov
lcall
fisttpl
pop
popf
push
jns
sbb
nop
into
push
mov
nop
aad
outsb
cwtl
mov
leave
nop
popf
in
stos
jl
mov
pop
fldcw
aas
inc
std
push
sbb
push
cmp
pop
mov
inc
test
mov
pop
adc
js
cmp
or
adc
xchg
and
mov
fs
outsl
fwait
subl
add
lret
fidivs
sbb
data16
xor
xchg
push
or
sti
ficoml
fcompl
loope
test
mov
dec
loope
dec
xchg
test
mov
jns
cmp
dec
xor
inc
push
lea
test
mov
xchg
in
scas
pusha
xor
movsl
mov
hlt
mov
nop
push
adc
push
push
ds
pop
movsl
scas
xor
scas
mov
sbb
mov
jge
orw
adc
adcl
insl
ljmp
push
mov
mov
mul
push
or
ss
ficomps
lods
and
cmp
add
dec
jmp
xchg
jge
shll
adc
unpcklps
or
jno
inc
cwtl
adc
cmp
mov
adc
test
pop
mov
pop
inc
stos
xchg
sbb
cmp
dec
dec
xor
push
mov
push
xlat
sub
clc
xchg
jecxz
lahf
xor
inc
imul
in
jmp
mov
outsb
mov
outsb
xchg
mov
dec
mov
decb
xchg
pushf
ljmp
cmp
stos
push
jle
enter
sub
test
sbb
enter
xchg
inc
push
fbld
andl
mov
mov
test
mov
popf
adc
sbb
mov
lcall
mov
or
outsl
adc
aad
sub
xor
fdivr
adc
xor
pushf
daa
dec
mov
and
jnp
dec
dec
xlat
inc
loope
cmp
mov
pop
cmp
sbb
mov
outsb
lods
mov
enter
dec
scas
es
mov
jmp
ss
lahf
and
dec
sti
cltd
scas
das
xchg
mov
insb
and
aam
arpl
jnp
outsb
mov
pusha
loopne
push
sub
pop
ja
mov
js
and
sub
and
addl
fsubl
xchg
int
out
cwtl
inc
clc
cmp
mov
addb
add
xlat
inc
xchg
loopne
push
xchg
mov
push
repnz
icebp
nop
xor
mov
adcb
mov
fwait
pop
sbb
cltd
xchg
lock
test
cmp
loopne
and
mov
cmp
cwtl
ss
hlt
fdivl
enter
pop
sub
jb
lods
movl
push
out
mov
inc
cwtl
nop
mov
rcrl
add
out
imul
jae
icebp
mov
sub
ja
xor
jbe
js
jae
addb
cmpl
out
push
dec
mov
and
jae
fsubrl
out
lods
adc
inc
xchg
jne
fprem1
mov
sub
push
add
push
arpl
into
push
pop
mov
jg
dec
imul
add
daa
jo
ret
std
or
push
mov
mov
out
xchg
mov
in
and
cmp
movsl
add
xlat
loopne
out
push
rclb
out
cmp
push
mov
sub
add
and
xor
test
push
pusha
shll
mov
inc
mov
mov
mov
cwtl
xchg
insl
mov
into
xchg
fs
and
or
adc
lahf
fyl2xp1
fadd
out
dec
sbb
lahf
xor
cmp
in
adc
jne
dec
pop
jl
sub
das
cmp
xchg
rolb
jg
adc
jbe
or
nop
push
pop
cmp
jb
or
adc
mov
push
data16
sbb
lods
xbegin
mov
dec
push
gs
ja
imul
add
adc
push
pop
xor
and
sahf
pop
or
sbb
push
add
xor
inc
mov
shrb
sbb
aad
scas
fwait
in
push
or
faddl
adc
icebp
push
or
lret
adc
xchg
jl
loopew
push
jl
ljmp
push
std
inc
sbb
movsl
jns
test
jmp
xchg
dec
add
and
adc
std
xor
mov
dec
cwtl
or
dec
sbb
mov
sub
sub
pop
adc
sti
jo
inc
fistl
std
mov
xor
cltd
mov
leave
mov
leave
xchg
sbb
xchg
mov
aaa
mov
push
mov
lret
testb
jo
iret
cmc
pop
sbb
and
inc
jne
cmp
push
imul
mov
test
movsl
inc
data16
and
add
xchg
int
in
ret
iret
fs
divb
roll
je
adc
mov
cmp
gs
adc
adc
mov
mov
movl
sbb
mov
out
or
ret
loop
add
push
jecxz
stos
test
test
ret
jnp
jmp
hlt
xchg
iret
sti
add
jns
pushf
ja
dec
cwtl
mov
jge
xchg
nop
rcrl
pop
and
cmp
jae
sub
dec
pusha
xchg
pop
mov
sbb
insb
shr
inc
stos
xlat
xchg
jmp
pop
insb
jns
test
push
int3
clc
fldl
les
xchg
mov
stos
push
bound
pop
enter
mov
lock
ss
aad
rcll
outsb
in
shlb
jae
gs
scas
lock
sar
inc
movsb
mov
sbb
in
iret
mov
mov
dec
fldcw
int3
jecxz
daa
mov
xor
xchg
mov
push
inc
mull
push
add
xlat
jo
aas
fistpll
stos
inc
jmp
push
inc
push
sbb
push
jmp
pop
cwtl
stos
xchg
mov
out
mov
dec
pushf
aas
jg
orl
popa
repz
pushf
fsubrs
adc
mov
push
stc
mov
std
dec
inc
dec
sbb
dec
int3
icebp
lret
jge
inc
jg
fcompp
pop
fnstcw
imul
add
idivb
mov
push
cwtl
push
or
cwtl
shlb
cmp
ljmp
aad
cld
bound
lods
js
mov
and
push
cmp
fs
dec
fwait
cmp
mov
pop
cld
subl
lods
dec
xlat
push
mov
fidivl
and
and
mov
pop
dec
fdivr
iret
push
repz
dec
xchg
int
ficoms
sti
xorl
and
ds
sahf
xchg
lcall
xor
movsl
cmp
sub
push
cmp
insl
xor
adc
ficompl
cmp
sub
lcall
xchg
xor
cmp
push
inc
lcall
jecxz
sub
adc
leave
inc
inc
hlt
test
mov
inc
lods
or
int3
xorb
adc
aam
in
mov
inc
adcl
rcrb
and
pop
bound
nop
pushl
in
icebp
sbb
ss
mul
push
es
ds
test
sub
jnp
addr16
mov
add
and
movsl
in
loop
int
dec
and
jae
lret
pop
sbbb
dec
push
icebp
lahf
sbb
xor
lret
fwait
dec
or
icebp
sub
test
aas
das
shrb
inc
gs
in
leave
inc
ja
mov
hlt
fwait
xor
xchg
inc
loop
and
xlat
test
jge
mov
jb
adc
out
aam
and
mov
pushf
push
add
outsl
movl
dec
sbb
cltd
adc
sbb
fidivrl
lret
insl
jb
xchg
cmp
cmc
faddl
mov
fs
imul
sub
das
mov
cli
adc
pop
cltd
cld
negl
or
cpuid
out
fistpll
mov
xor
pop
ret
cltd
push
lods
rorb
arpl
cltd
and
cmp
insb
or
jg
repnz
repnz
mov
sbb
sahf
or
push
xor
loopne
adc
xor
or
mov
mov
aam
daa
dec
pop
bound
xor
adc
lea
sub
mov
inc
mov
mov
sub
sbb
or
bound
dec
in
or
dec
scas
int
fwait
push
ds
cmp
das
jns
push
xor
in
pop
inc
xchg
push
sub
sar
lods
mov
and
mov
mov
mov
aaa
lds
lds
pop
jno
insb
jp,pn
push
jo
cmpsl
cmp
jecxz
icebp
push
add
fisubrs
addr16
hlt
pop
push
in
pop
jae
aad
push
mov
test
sub
int
roll
cmpsl
fisttps
hlt
xchg
dec
fwait
sahf
push
pop
mov
cmpsl
mov
inc
out
mov
mov
out
pop
bound
mov
pop
rorl
je
out
fwait
mov
inc
mov
mov
popf
rcrl
push
adc
inc
jne
or
das
xchg
dec
pop
lcall
mov
xlat
push
cwtl
fisttps
mov
xor
fsub
jno
inc
lods
mov
fisttps
mov
push
repz
push
add
and
aad
fists
mov
jle
dec
xor
cmp
test
mov
cmp
sub
fdivrl
jmp
mov
add
push
dec
or
mov
mov
ja
add
dec
push
cmc
push
sahf
sbb
daa
mov
loope
arpl
lds
adc
mov
enter
jge
fistps
sbb
pop
out
xlat
popa
pop
mov
cmp
aas
mov
xor
mov
adc
aaa
cld
mov
pushf
js
outsb
fwait
in
test
mov
pop
dec
jg
jb
test
les
jne
pop
inc
test
je
rorl
fiadds
mov
lods
jo
movsb
scas
or
in
push
xchg
sub
jb
cmpsb
push
rcll
out
mov
scas
hlt
je
lds
pushf
icebp
fisubl
shlb
jo
dec
sbb
mov
stc
add
inc
cld
and
dec
jbe
scas
xchg
dec
movsbl
mov
enter
int3
popa
leave
aam
mov
pushf
mov
ljmp
out
stc
movsb
cwtl
jns
je
pop
std
push
iret
xchg
mov
js
shlb
mov
call
jmp
clc
inc
outsb
push
test
adc
and
mov
cmp
es
mov
nop
mov
shr
xor
insb
out
sbb
xor
movsb
sub
adc
add
cltd
mov
aam
add
push
jp
xor
xchg
mov
out
lods
shl
out
xchg
mov
mov
cmp
shlb
movsb
stos
mov
cmpsb
mov
jg
in
je
cli
jmp
cli
pusha
xchg
push
push
dec
iret
lods
jg
scas
inc
aad
push
lret
xor
int
leave
or
pop
pop
jle
push
loope
or
inc
or
push
pop
adc
or
mov
in
addr16
pushf
or
push
dec
mov
imul
cmpsl
push
stos
stos
mov
call
and
and
jg
sub
mov
mov
cmp
push
insl
pop
inc
clc
lds
lcall
mov
fstpt
push
stc
sbb
pop
adc
repnz
add
cltd
pop
movsl
nop
out
sbb
xor
sbb
nop
aas
jl
adc
pusha
push
dec
push
aaa
mov
pop
andl
or
add
mov
loopne
lock
les
mov
in
inc
xor
push
adc
sti
cmp
outsb
in
imul
mov
pop
ret
lock
inc
int
or
orb
xchg
popf
aaa
inc
inc
js
cli
inc
mov
dec
int
test
cs
xor
mov
push
outsl
or
fistps
cmp
fidivrs
pop
dec
push
push
stc
push
in
inc
ret
mov
lea
fildll
insb
pop
xchg
repz
cmp
ror
imul
push
incb
rcr
push
and
in
inc
cs
dec
push
jl
push
mov
mov
test
mov
imul
sbb
push
or
push
fstp
shl
xor
dec
cmp
out
dec
ret
es
repnz
inc
cmp
and
lods
sahf
int
add
mov
loope
aad
fs
and
adc
daa
xchg
movsb
pop
xorb
pop
adc
sbb
pop
xchg
gs
pop
inc
and
xor
and
sbb
mov
bnd
mov
shrb
ljmp
pusha
shrb
push
repz
sub
sub
ja
xor
cmpb
xlat
in
jmp
jp
jae
sub
jnp
fwait
xchg
mov
and
mov
mov
cmpb
jb
cmpsl
out
mov
add
cltd
mov
or
std
test
stos
out
jno
or
adcl
or
std
ret
push
daa
into
sbb
sahf
dec
in
pop
loopne
dec
scas
mov
lds
sbb
or
and
fidivs
pop
testb
ja
repz
or
imul
cli
cmpsb
lods
into
push
push
rol
jbe
dec
in
imull
jo
out
into
loope
mov
movsb
jge
insb
sub
fmull
test
jl
xchg
pop
je
inc
arpl
xchg
movsbl
sub
jl
mov
lret
and
sbb
mov
mov
call
inc
mov
mov
mov
adc
adc
sahf
xchg
mov
xlat
pop
aad
xchg
enter
mov
jmp
test
push
mov
loop
dec
addl
in
jno
sbb
fsubrs
mov
push
cmp
and
mov
imul
jnp
dec
xlat
add
stos
push
cmp
xchg
mov
dec
push
sub
mov
mov
sub
stos
int3
test
and
sub
cs
pop
fs
dec
nop
imulb
popf
roll
jp
ret
xor
mov
sub
push
xchg
lock
fildll
in
repnz
inc
push
sub
mov
sbb
call
pop
repz
xor
mov
sub
add
sbb
xchg
lods
cmc
insl
mov
xlat
mov
ljmp
data16
adc
push
ss
ret
rcr
pusha
pop
inc
fwait
lcall
jmp
or
mov
pop
lds
loop
mov
nop
mov
add
and
xlat
fsqrt
xor
adc
or
push
outsl
stc
lods
stos
ja
cltd
xchg
ret
std
push
mov
push
fistl
sbb
inc
xchg
pop
pop
jl
sub
or
sbb
je
cli
sub
mov
aas
inc
adc
xor
fdiv
cltd
mov
dec
fsubl
mov
enter
das
jp
xchg
jb
mov
or
xor
cmc
push
dec
pop
int
jne
enter
stos
cli
adc
fimuls
dec
lock
push
mov
scas
js
bound
out
push
mov
jo
mov
arpl
xor
lods
sbb
or
bound
outsl
test
aad
cmc
inc
aas
stos
std
orl
je
or
pop
dec
push
sub
pushf
inc
jo
aad
mov
xor
mov
rolb
fs
push
fmull
xchg
enter
xchg
and
shrl
clc
sub
daa
mov
mov
and
pop
out
or
or
scas
movsb
or
ss
ret
lcall
leave
movsl
jmp
shlb
xor
sbb
je
scas
dec
mov
mov
xchg
adc
dec
iret
pusha
rclb
loope
pusha
inc
mov
fnstenv
insl
dec
pop
or
pop
jle
out
sbb
cwtl
sbb
ss
cltd
inc
insl
aad
ljmp
nop
xlat
cmpsb
outsb
jg
xchg
jbe
lea
lea
js
sbb
lcall
push
xor
add
mov
xor
cmc
ss
adc
jnp
mov
fs
das
xchg
mov
mov
or
jno
and
lahf
jp
outsb
loopne
inc
call
push
sbb
mov
ret
cmp
cltd
mov
fld
insl
int
adcb
loopne
fidivs
ficomps
cwtl
mov
jo
pop
out
pop
enter
test
sbb
or
fistl
aaa
pusha
sti
inc
inc
ret
lock
or
stos
sbb
push
xor
xor
scas
les
mov
nop
push
push
repnz
pop
lret
push
orl
sar
xor
sbb
and
iret
outsb
andl
fnstenv
insb
fimuls
into
nop
jbe
pop
sub
cltd
xchg
stos
inc
fcoml
push
repz
je
push
in
hlt
and
add
push
sbb
inc
adc
push
mov
hlt
jg
cmp
notb
and
dec
push
mov
cmpsb
or
jg
cmp
mov
adc
dec
jae
mov
lahf
outsb
fisubs
dec
pop
inc
pop
jp
pusha
add
mov
imul
mov
xchg
sbb
xor
xor
loope
jb
xchg
gs
and
daa
or
or
cmpsb
jb
inc
test
jae
mov
add
in
add
pop
test
xchg
cmp
inc
adc
iret
add
fcomip
push
sbb
xor
adc
xor
xchg
add
lret
lds
jae
out
rep
mov
cltd
sbb
sarb
sbb
lods
inc
or
lret
sub
sti
aaa
jne
loope
sbb
sbb
adc
scas
pop
aas
pop
mov
jge
or
insb
loope
xchg
adc
and
dec
paddb
jae
jg
or
mov
pop
mov
mov
aad
add
add
mulb
icebp
lock
pop
and
in
dec
out
dec
dec
pop
jne
push
aam
xor
pop
inc
mov
cmp
loop
xchg
mov
cmp
aaa
popa
push
lock
dec
inc
jl
lock
add
and
movsb
push
mov
stc
out
push
in
pop
xchg
pop
push
mov
iret
fdivrl
je
sti
push
mov
dec
or
hlt
ja
mov
scas
das
pop
add
iret
add
sub
pop
jle
push
cmovae
or
adc
mov
mov
iret
das
and
pop
push
fwait
mov
cmp
into
shlb
cmpsb
nop
xorb
lcall
and
dec
xor
mov
adc
insl
sar
mov
mov
pop
cmp
nop
icebp
xchg
repz
pop
or
ljmp
xchg
adc
adc
inc
jl
xor
inc
pop
mov
jo
inc
sbb
loop
cmp
imulb
jb
add
fsubl
and
mov
ljmp
cmc
sbb
inc
aaa
call
lds
test
and
or
jge
pop
jmp
and
in
mov
dec
in
inc
xchg
jmp
ficoms
insb
aaa
mov
xchg
jecxz
repnz
pop
adc
adc
out
and
rorl
in
pop
jns
push
add
repnz
lret
cmpb
fbld
dec
or
movsb
adc
mov
jo
repnz
or
lret
les
jmp
mov
pop
addb
adc
call
test
ds
shrb
xchg
and
push
xor
jecxz
mov
cltd
jg
xchg
nop
shrl
xor
lahf
mov
cld
sub
xlat
int
inc
push
push
sbb
data16
push
xor
or
out
call
imul
jle
popf
xchg
pop
outsl
pushl
les
shlb
sub
cltd
gs
inc
stos
pop
test
and
jno
js
sahf
add
mov
push
insl
or
sub
daa
jg
dec
pop
sub
mov
mov
inc
add
fnstsw
repz
jl
orl
outsb
in
add
fldl
mov
movsb
les
sub
sarl
stc
xor
ja
cmc
or
mov
enter
mov
sub
ljmp
pop
xchg
jge
sub
dec
fcoml
cli
push
dec
js
enter
pop
addb
popa
adc
cs
stos
popf
mov
pop
push
mov
jmp
lock
mov
leave
or
cmpsb
push
inc
call
mov
dec
int3
adc
lcall
or
adc
inc
test
insb
sahf
ficomps
hlt
ret
iret
jbe
loope
popf
inc
in
out
mov
adc
pop
mov
out
jnp
neg
mov
pop
jae
jge
xchg
mov
rcr
js
scas
jns
inc
setb
out
xchg
and
jbe
pop
cmpsl
jecxz
fsubs
jo
pop
repnz
and
lds
iret
mov
add
or
ret
dec
or
jp
dec
dec
adc
les
popa
jg
call
jne
or
pop
jnp
daa
mov
in
adc
push
aam
mov
jbe
scas
push
cmp
push
dec
loop
mov
idivb
push
dec
push
xlat
sub
mov
push
das
ss
pop
xchg
lods
sub
jmp
sar
pop
inc
pop
push
arpl
pop
fisttps
inc
inc
test
rorl
aaa
test
movsb
inc
mov
data16
icebp
lods
or
mov
pop
jo
cmp
rcr
or
shlb
jle
sahf
ret
mov
xchg
shl
dec
push
nop
add
mov
xchg
xchg
adc
jle
bound
push
pop
lods
push
add
das
sub
cmp
popf
push
xor
dec
xorb
rcl
mov
nop
mov
jge
scas
ds
mov
rolb
sbb
cmpsl
scas
mov
fidivs
repnz
cmp
int
mov
addr16
imul
loop
cmpsl
into
je
jge
push
pop
inc
jns
scas
or
sub
dec
mov
shrb
mov
aaa
fs
inc
cmpsb
mov
loope
sti
jge
out
adc
jnp
gs
xchg
int3
mov
ja
loop
sbb
outsl
push
sbb
or
mov
out
sub
pop
test
out
cmpsl
lret
stos
cltd
pop
in
xchg
in
sub
mov
leave
test
adc
xchg
movsb
cmp
push
push
mov
jo
and
imul
out
jno
dec
jmp
shl
or
les
sub
fidivs
push
std
pop
dec
ljmp
cmp
ror
popf
ljmp
xor
add
pop
jmp
jl
inc
cld
xor
and
lods
cmc
push
jns
leave
adc
stos
data16
sub
lea
imull
test
adc
in
ljmp
adc
outsl
cli
inc
leave
inc
or
scas
sti
shr
mov
mov
mov
dec
cmp
jg
ret
loop
mov
push
xor
enter
inc
mov
mov
mov
aas
mov
js
lds
test
daa
dec
mov
jno
fisubrl
out
sub
jnp
jae
lods
addb
xor
nop
out
sbb
push
or
xchg
sti
jno,pn
pop
pop
cltd
dec
mov
mov
decl
out
add
movsl
stc
jno
and
inc
mov
mov
dec
je
dec
es
ljmp
mov
jecxz
sub
gs
insl
mulb
sub
sub
aas
sub
adc
add
or
jbe
fildll
les
insb
cmp
enter
sarl
xor
cld
mov
cmp
arpl
lret
mov
lods
push
sbb
mov
xlat
add
xor
scas
sbbl
cmp
inc
add
sub
fdivrs
lock
dec
xchg
lea
int3
idiv
scas
in
cwtl
ljmp
adc
push
mov
int3
or
sbbl
xchg
sbb
xchg
loop
cli
fldenv
repz
scas
jns
xor
js
lods
enter
push
and
and
lods
subb
push
rcrb
and
imul
adc
xchg
jns
or
adc
aad
xchg
inc
mov
xor
cli
icebp
lcall
mov
mov
xchg
or
out
mov
lahf
aaa
jecxz
xor
xchg
xchg
in
into
sarl
push
mov
sub
and
imulb
shll
mov
push
or
inc
call
test
mov
insl
pushf
sbb
adc
xchg
shl
out
loop
sbbl
push
jle
mov
jecxz
fiadds
test
shr
xchg
inc
mov
sbb
rolb
pop
clc
rol
aas
sbb
rcr
mov
inc
pop
dec
fnstsw
in
pusha
jbe
pushf
cwtl
and
sub
std
mov
ds
enter
pop
pop
lods
outsl
test
cmp
out
das
xrelease
mov
jmp
popa
or
dec
fildll
mov
stos
xor
inc
adc
addr16
mov
add
test
xchg
popa
pop
adc
jmp
adcb
test
scas
push
jne
in
pop
push
mov
data16
add
cs
aam
mov
add
pop
inc
push
and
bound
mov
pop
and
inc
daa
sbb
cmp
push
in
cmp
push
push
bound
outsb
sbb
cmpsb
cwtl
adc
scas
enter
xchg
movsl
inc
hlt
mov
mov
jno
xor
mov
adc
lods
mov
add
adc
sbb
add
push
cmp
pop
push
fbld
repz
pusha
jle
mov
js
mov
cwtl
sub
add
push
add
sbb
cld
ror
sti
ds
cltd
mov
outsl
adc
cwtl
push
lock
xor
pop
stos
inc
aas
xchg
ljmp
cmpsl
adc
xor
imul
push
cmp
adc
dec
jnp
call
inc
insb
movups
rcrl
das
mov
movsb
pop
add
mov
xchg
push
ds
push
sbb
inc
xchg
push
lods
jle
lcall
std
mov
sti
loopne
push
pop
outsb
pop
xor
pop
xchg
jmp
fs
clc
pop
rorl
clc
outsb
arpl
cli
cli
mov
adc
repnz
sbb
pop
mov
mov
aam
int
fistpll
cld
xor
mov
jl
adc
mov
rorb
repz
mov
dec
mov
nop
ds
pusha
mov
mov
lahf
mov
int
mov
sub
nop
notb
scas
mov
mov
sbb
mov
in
popa
jo
jae
stos
mov
les
cmc
lods
dec
jo
imul
push
test
clc
ljmp
sub
xor
into
sar
les
aaa
fcmovbe
push
outsl
and
lea
adc
cmp
jno
cli
pop
adc
shlb
dec
aad
cmc
cld
lahf
inc
fadds
mov
push
das
or
xchg
clc
cmp
sbb
inc
in
js
roll
mov
and
lcall
push
inc
push
insb
shlb
repnz
std
push
sub
and
push
pop
pop
into
mov
jbe
inc
or
jo
or
lods
cmpsb
repnz
push
clc
pop
in
aam
xchg
pop
es
popa
push
jge
mov
mov
add
mov
mov
jno
mov
test
xchg
scas
leave
xor
or
ss
xor
arpl
cmp
sub
std
jnp
cwtl
imul
mov
fcom
sbb
test
insb
jge
push
les
cwtl
aaa
imul
fmulp
lret
mov
clc
aam
outsb
sub
jno
jg
call
adc
push
dec
mov
lock
mov
repz
xor
cmp
mul
xor
pop
mov
xor
xorl
inc
jle
enter
cmp
jge
sbb
lret
xor
dec
pop
and
movsb
fs
int
jge
dec
sub
ja
sti
enter
mov
or
insl
push
mov
nop
aaa
push
adc
repz
and
fstps
mov
and
ss
xor
push
jmp
xchg
or
jbe
ficompl
andb
xchg
mov
ljmp
ret
fdivl
dec
std
icebp
loopne
dec
pop
test
ret
pop
stc
rcrb
ficompl
sahf
rol
mov
testb
test
rorl
push
cmp
xchg
cmpb
or
mov
repnz
imul
out
in
mov
aam
inc
add
les
xor
fadds
lods
outsl
and
andb
sbb
orb
je
xchg
in
in
out
idiv
jecxz
cmp
add
fidivs
inc
jne
cmpsb
fsubl
fstpt
mov
aad
jbe
xchg
repz
lcall
cmpl
sahf
mov
jae
jp
rcrl
inc
xchg
in
push
lea
xor
inc
pop
gs
fcmovu
xor
mov
push
push
fstp
mov
aaa
lock
fwait
repnz
push
dec
mov
mov
jbe
hlt
fcmovbe
jns
mov
int3
push
fstpt
mov
loope
enter
dec
xor
mov
fdiv
insb
shlb
fisttpll
loop
cmp
sbb
push
jae
push
xor
adc
mov
out
xor
fsubs
xchg
iret
push
mov
dec
pop
sbb
xchg
movl
jp
dec
inc
inc
mov
das
in
test
push
sbb
cmc
pop
jo
imul
mov
lsl
in
mov
sub
in
and
daa
in
sbb
sbb
push
in
inc
int3
mov
loopne
loope
inc
data16
lahf
push
inc
inc
aas
pop
push
xor
mov
lret
loop
cwtl
mov
dec
dec
cs
cmp
sbb
out
mov
dec
das
fiaddl
pop
pop
sub
sub
out
imul
gs
test
adc
hlt
scas
and
fs
mov
pop
repz
fwait
dec
mov
outsb
or
bound
outsb
mov
imul
aad
in
and
cmp
fidivrl
inc
movsl
and
and
push
movsl
pop
stos
push
lret
out
jl
lods
push
cmp
jecxz
jb
fwait
push
std
bound
mov
dec
vmwrite
js
pop
cmp
mov
shlb
fs
aad
pop
mov
shl
pop
addl
lret
shrb
aas
arpl
popa
mov
mov
ja
outsl
cmc
int3
or
movsb
imul
adc
and
flds
dec
sti
fsubs
mov
jmp
inc
jl
or
enter
mov
loop
or
popf
mov
enter
jge
pop
cmpsl
ds
out
jbe
pop
flds
pop
inc
test
sbb
cmp
bound
adc
test
cmp
in
sub
es
push
data16
out
in
xlat
leave
mov
inc
fldz
pop
dec
popa
movsl
ss
lea
pop
xchg
out
bound
add
outsl
fisttpll
jno
in
dec
lds
stos
mov
sbb
or
mov
mov
mov
add
add
jp
sub
mov
fcmovnb
dec
push
inc
pop
xor
inc
int
subl
test
pushl
jg
out
clc
enter
dec
scas
mov
rcrb
mov
cmp
and
or
xchg
loope
clc
imul
int
cmpsb
inc
movsl
and
imul
jnp
cmp
and
push
call
stos
inc
xchg
xor
fisttps
lcall
adc
mov
mov
inc
mov
add
adc
ror
mov
xor
cmp
test
std
dec
or
cltd
sbb
bnd
dec
inc
lock
add
inc
imul
orb
sbb
fmulp
incl
lret
insl
cli
xchg
push
outsb
and
movsb
pop
mov
pop
jecxz
push
insb
jno
hlt
idivb
cmp
mov
xor
fneni(8087
daa
sub
out
jp
and
inc
or
stos
ja
mov
iret
xor
jmp
and
sub
ss
shlb
vmovntps
shlb
sub
call
ss
mov
cld
stos
fmuls
push
xchg
xor
xor
shll
sbb
repz
int
and
mov
inc
popf
cmp
push
out
and
mov
int3
add
mov
xor
sahf
push
int3
push
in
stc
cmp
out
pop
ljmp
addr16
outsb
dec
insb
popa
pop
xchg
adc
and
ds
xchg
mov
inc
sub
adc
mov
lds
lods
sti
das
insb
adcb
mov
and
sbb
pop
in
jae
fsubr
push
repz
sti
mov
pusha
repnz
sub
inc
adc
mov
xor
sar
lea
roll
xchg
nop
sbbb
add
push
cmp
jne
inc
pop
in
adc
and
sbb
jmp
daa
add
mov
mov
adc
dec
xchg
orb
stos
and
jbe
loopne
cmp
cmp
or
mov
add
int3
and
sub
cmp
shr
lock
mov
pop
adc
xchg
leave
inc
lea
xlat
testl
and
pushl
out
push
jbe
sbb
aas
es
dec
mov
out
inc
cmp
leave
imul
jns
adc
fisubrs
mov
fwait
or
jb
mov
push
cmove
cmp
xor
jae
sti
std
xor
enter
repnz
loopne
jo
mov
push
pusha
jge
cwtl
mov
stos
push
aaa
mov
call
sti
lds
iret
test
push
dec
xchg
fs
push
add
mov
dec
xor
push
push
repnz
lock
gs
dec
sti
pop
mov
and
pop
dec
mull
test
mov
mov
mov
ficomps
cs
lods
or
mov
adc
push
out
mov
or
imul
jnp
shll
rclb
lcall
insb
cmp
sub
or
test
cmc
shl
out
callw
lea
out
lods
xor
mov
inc
add
in
cld
jle
data16
pop
sub
cmc
lret
and
cld
lcall
arpl
or
adc
mov
aad
outsb
xchg
lea
jo
and
incb
inc
out
mov
xor
outsb
mov
or
repz
int
sbb
jmp
icebp
rcrl
ret
mov
data16
sub
popf
and
jnp
pushf
adc
jne
gs
or
push
int3
xchg
xchg
sbb
inc
cmp
xchg
or
test
cmp
lahf
cld
je
dec
mov
pop
mov
push
loope
les
lret
adc
jge
testb
nop
leave
daa
mov
pop
cmp
mov
cmc
cli
bnd
fidivrs
push
mov
push
mov
xor
mov
dec
dec
jecxz
gs
mov
int
enter
aaa
andb
xor
xlat
bt
lea
pop
sbb
les
push
jb
sahf
inc
loope
faddl
call
xorl
cmpsb
adc
pushf
mov
fbld
cmovp
add
arpl
mov
gs
inc
fisttpll
rcrl
jnp
out
jnp
sbb
insb
nop
xchg
jne
jecxz
or
xchg
fwait
mov
pop
and
pop
or
xchg
jp
lret
rol
and
add
xchg
in
ret
push
stos
sarl
dec
dec
or
adc
pop
pop
mov
ret
shrl
je
cmp
test
imul
cmp
cmp
cmc
xchg
lods
stos
add
imul
movsb
jle
in
xor
push
push
xchg
sarb
jbe
sti
add
leave
subl
adc
lock
in
xchg
xor
ljmp
inc
cmpsl
data16
push
loop
cmpsl
mov
lcall
jns
sub
inc
sub
inc
push
cmpsb
add
pop
xchg
mov
mov
cli
cmp
pop
enter
dec
sbb
adc
nop
lea
test
mov
ds
adc
pop
xchg
sub
fildl
xchg
pop
aam
jnp
inc
mov
pop
pop
mov
adc
or
sahf
sbb
ljmp
icebp
mov
mov
pop
ds
jbe
nop
pop
pop
dec
mov
nop
repz
xor
pop
xor
lock
les
loop
mov
xchg
hlt
xlat
xor
aad
shlb
xchg
mov
cmp
test
arpl
in
xchg
mov
cmpb
or
sbb
lret
imul
jmp
add
sub
mov
out
sub
mov
cmpsl
lahf
jne
inc
adc
lods
push
and
mov
js
adcl
push
jl
fs
inc
jno
sub
or
je
and
mov
cmp
negb
pop
sbb
pop
cmp
push
in
popa
stos
xorw
cmp
jp
subl
inc
lahf
int3
lret
sub
push
div
mov
xlat
push
mov
dec
adc
cld
in
xlat
sbb
fildll
das
dec
pop
or
out
pop
stos
cs
mov
dec
ret
mov
pop
sub
sub
cmpb
pop
cli
pop
mov
pop
cmpsl
cmp
xchg
xchg
sub
andb
imul
jb
fwait
inc
cmp
jns
jnp
push
push
mov
cmp
sbb
push
push
mov
popa
pop
dec
add
in
jo
push
shll
push
jge
test
pop
ljmp
pop
cltd
inc
stos
movsl
push
lcall
test
filds
inc
enter
xchg
in
inc
ret
jmp
movsl
bound
xchg
and
xor
xor
jmp
jb
fadds
fwait
inc
cmp
add
sti
cmpsl
cmp
je
xchg
cltd
int3
push
loop
jl
xchg
in
adc
adc
jmp
mov
sbb
mov
imul
ja
jbe
test
push
cmc
and
lods
push
pop
push
mov
in
arpl
mov
xlat
push
push
xlat
xor
pop
es
call
jnp
xor
xchg
rorl
jns
adc
ds
orb
mov
mov
or
cld
in
and
sbb
lret
setno
or
cwtl
orb
mov
sub
mov
push
lds
and
mov
add
dec
aad
orl
inc
mov
flds
mov
hlt
cwtl
test
sbb
sbb
and
push
jb
pop
add
pop
fcoml
ljmp
popf
test
testb
lcall
jo
jle
adc
xchg
pop
or
xchg
adc
mov
sahf
sbb
imul
aaa
sub
imul
bound
mov
xchg
mov
test
stc
and
rorl
out
sub
xor
sub
fmuls
sbb
xor
dec
ss
popf
pushf
jl
xor
jge
dec
inc
push
les
jmp
int3
stos
jmp
pop
dec
stc
add
fwait
testb
nop
fmull
push
mov
out
and
mov
push
loop
idiv
rclb
pop
stos
stos
sahf
repnz
jecxz
and
das
popf
adc
mov
add
add
or
ret
lock
or
and
lret
dec
mov
inc
repz
outsl
fdivrs
ja
mov
sbb
add
or
jae
jmp
cmp
out
andl
lea
sub
xor
mov
test
bound
push
xchg
aad
push
push
mov
mov
push
mov
sbb
fsubrs
ss
push
clc
aad
push
lods
push
adc
cmp
jecxz
cmpsb
stc
adc
js
xor
mov
push
popf
sub
call
jne
jo
cltd
scas
adc
sbb
dec
jb
inc
jge
dec
jo
and
hlt
adc
sub
cmp
xorb
flds
pop
xchg
jge
xor
push
jb
inc
mov
aad
stos
cmpsb
jl
adc
and
mov
jo
call
xchg
arpl
rol
add
and
scas
xor
fwait
adc
push
subb
pop
mov
lea
cltd
lds
adc
nop
jb
pushf
xlat
shll
inc
push
ds
add
mov
xchg
and
iret
stos
sub
loopne
mov
adcb
aas
cs
mov
sarl
sub
aam
inc
jmp
xchg
ret
je
mov
mov
cmp
fldl
into
pop
xor
ret
mov
sbb
mov
or
push
jno
dec
mov
insl
xor
jle
or
xchg
xchg
sbb
xor
mov
imull
out
out
mov
jne
test
dec
adc
inc
mov
in
cs
mov
jbe
jp
inc
jle
sub
movsb
add
add
dec
mov
outsb
and
stc
and
xor
scas
push
or
loope
sbb
hlt
pop
cmc
inc
jle
or
xchg
arpl
mov
fsubl
xchg
into
xchg
jns
out
mov
enter
outsb
or
xor
xor
mov
add
inc
xor
xchg
test
je
leave
add
mov
sbb
mov
mov
pop
xor
insl
dec
std
jne
inc
imul
add
lea
dec
out
fwait
pop
inc
and
aad
cmp
push
sbb
cmpsb
mov
int
dec
and
and
aam
aad
call
or
or
dec
and
popf
xchg
cli
pop
xchg
cs
addl
and
cld
jnp
and
int
cmp
out
sub
call
cmpl
ljmp
sbb
clc
jbe
inc
add
into
insb
xchg
pop
sahf
xchg
push
push
push
jg
outsb
repnz
in
gs
sbbb
inc
sarb
addb
mov
or
pop
andl
jmp
jno
xchg
or
call
fdivr
push
xor
daa
jmp
fcmovu
sub
adc
movsb
inc
pop
xchg
sahf
cs
mov
nop
insb
std
add
testl
cmp
test
cmp
xchg
or
mov
ror
mov
fistl
enter
gs
lea
jecxz
dec
adc
jns
adcl
cmp
push
test
fidivs
repz
mov
adc
das
stos
test
inc
mov
pop
lcall
jp
inc
pop
xchg
xchg
ds
xchg
push
les
in
and
sti
push
sbb
xlat
in
dec
pushf
in
jb
bound
andb
adc
pusha
or
sbb
mov
fstps
or
sub
mov
es
mov
xchg
outsb
scas
jb
fwait
or
mov
lret
in
aas
sbb
and
psrld
jne
insb
ds
xor
test
xor
out
hlt
mov
cmc
in
repnz
mov
jmp
test
std
push
fdiv
arpl
faddl
data16
lea
stc
dec
mov
xchg
xchg
cmp
inc
ret
sahf
cmp
icebp
pop
jbe
add
mov
mov
or
test
ret
dec
push
faddp
test
lcall
dec
in
mov
cltd
mov
test
adc
ret
insl
in
xchg
cs
dec
and
adc
les
mov
sbb
jl
and
xchg
jbe
bound
sbb
inc
insl
into
aas
outsl
pop
mov
fwait
add
xor
jae
add
mov
adc
sub
jo
push
je
clc
into
rolb
push
mov
inc
dec
xor
xor
xchg
add
lods
inc
add
pop
sti
fistps
insb
scas
inc
movsb
push
jmp
imul
pop
repnz
mov
in
inc
rcrl
insb
mov
dec
inc
pop
dec
fbld
lock
fstps
xor
lret
shll
les
lods
gs
nop
pop
mov
adc
stc
sti
jb
clc
in
iret
jo
popa
gs
jae
sub
mov
addr16
adc
or
sub
add
test
fwait
xor
das
test
xchg
pop
xorl
lahf
imul
inc
test
adcl
popa
cmp
xchg
sbb
aaa
outsl
sub
ret
movsb
pop
mov
jnp
xorl
fnstcw
lods
bswap
call
push
push
inc
xchg
inc
ret
xchg
and
fstps
fbstp
pop
cmp
shll
mov
pusha
lret
call
mov
adc
icebp
inc
pop
xor
xchg
add
loop
sub
jl
or
insb
mov
and
aas
aad
pop
sub
pushf
rcll
sti
mov
xchg
jno
insl
push
cltd
or
jnp
sbb
push
inc
pop
cld
dec
fs
ret
ret
pop
cmc
jle
push
sub
add
jmp
lahf
add
jae
push
jne
push
adc
xchg
std
xchg
push
repz
out
popl
or
fs
mov
cmp
pop
cmp
pop
out
pop
or
inc
xchg
xchg
aas
cltd
sahf
jns
jns
mov
lods
mov
es
notl
leave
sub
adc
aaa
js
jns
pop
jge
inc
mov
push
mov
xchg
fs
mov
cld
push
fs
or
loopne
sub
mov
lock
into
jg
enter
push
out
idivb
push
cli
pop
fisubs
sub
fmuls
mov
repz
xor
and
mov
push
and
mov
cmp
sub
int
adc
push
dec
je
dec
xchg
mov
arpl
mov
pop
push
sub
adc
dec
insb
inc
mov
clc
rcrl
aam
imul
mov
ja
jg
dec
push
popa
pusha
jmp
xchg
mov
jecxz
push
and
repnz
les
adc
pop
cmp
mov
cld
shl
xchg
xchg
inc
and
in
pop
js
nop
out
aas
pop
dec
movsb
repnz
stc
or
gs
add
test
inc
xlat
subl
enter
jg
out
pop
xchg
insl
jb
mov
xlat
inc
mov
pop
ljmp
mov
outsl
cmp
lds
test
into
mov
dec
sbb
jmp
loopne
jne
mov
enter
sub
nop
adc
divb
insb
pop
jmp
dec
xor
xor
pop
fyl2x
add
insb
out
push
arpl
jp
mov
xlat
jle
dec
sbbl
testl
les
mov
cmp
mov
and
faddl
js
mov
out
pop
test
pop
mov
xchg
and
push
inc
fwait
subl
inc
sbb
or
or
rolb
scas
jge
test
mov
movsb
outsl
lods
mov
test
jp
inc
test
lahf
es
sub
jbe
rcll
jge
jno
imul
sub
popf
mov
inc
call
adc
sarb
iret
repnz
shl
sbb
dec
and
jne
movsb
lods
mov
xor
hlt
arpl
lds
cmp
cmpsl
loopne
stos
or
jle
std
test
hlt
inc
in
daa
and
cltd
scas
jmp
adc
sbb
or
popa
sahf
dec
xor
xor
dec
test
leave
pushf
add
dec
xor
inc
in
int
scas
jb
push
cmpsl
pop
outsl
jo
rep
inc
mov
push
icebp
inc
add
pop
mov
leave
repnz
jns
icebp
sbb
push
sbb
flds
adc
pop
aaa
fcmovbe
adc
ret
mov
ja
mov
nop
push
sbb
out
rcr
sbb
ret
les
idivb
repz
push
int3
and
sbb
push
imul
dec
aas
pushf
pusha
push
aam
rorb
loop
pop
pop
movsl
out
lcall
bound
push
mov
pop
cmp
and
insl
aam
mov
shlb
push
adc
jbe
dec
negl
icebp
shll
pop
jns
test
mov
jmp
lock
and
lret
imul
iret
aad
xchg
jl
cmp
inc
or
mov
scas
push
jo
ljmp
mov
xor
xchg
xchg
jbe
sbb
sbb
pop
test
xchg
adc
mov
push
xor
pop
outsb
add
mov
jns
wbinvd
cld
movsb
sub
in
lods
ljmp
lret
nop
pslld
rorl
repnz
add
int3
xchg
mov
insl
cmp
stos
das
pop
and
dec
sbb
add
push
je
adc
push
ret
push
sbb
cmpsl
in
sub
mov
xor
dec
push
xchg
cld
and
into
sbb
push
mov
in
xlat
orb
mov
shr
lcall
mov
mov
bound
add
push
cmp
xchg
fiadds
or
jecxz
push
mov
imul
sahf
jae
pop
test
loopne
mov
sbbb
lods
inc
push
and
sub
in
gs
loopne
ss
xor
inc
lret
outsb
shlb
scas
imull
or
mov
fstpt
fistps
jge
test
xor
test
movsl
sti
mov
cwtl
movsb
fwait
and
lods
cmp
xchg
or
pop
scas
mov
mov
fcmovu
xchg
in
mov
insl
add
outsb
adc
mov
adc
add
repnz
sbb
test
adc
or
rcr
sub
mov
xchg
arpl
push
es
scas
fstpt
pop
push
fstl
fstl
and
add
in
cli
into
lret
aas
lds
insb
clc
lret
add
adc
inc
hlt
aad
xchg
pop
pop
pop
mov
test
lods
lcall
das
lret
push
mov
lret
scas
mov
mov
lcall
xor
xorl
inc
mov
repz
mov
push
mov
xor
and
jge
shrl
sbb
dec
xorb
cmc
pop
jnp
cmc
outsl
and
sbb
cli
scas
je
sbb
xor
and
inc
push
stc
mov
sbb
sub
pop
dec
daa
xor
dec
nop
and
test
or
shl
fdivrp
repz
sbb
rcll
mov
movsl
scas
pusha
mov
jbe
xor
call
bsr
mov
shlb
test
cs
into
xchg
test
adc
rclb
xor
inc
dec
sbb
cltd
iret
add
push
stos
xor
xchg
mov
sbb
cmc
fdiv
imul
jno
movsl
and
or
mov
push
fidivrs
leave
imul
xchg
fs
jmp
sub
cmc
xchg
scas
adc
dec
jbe
mov
jb
xor
or
ljmp
shr
shl
pop
inc
jns
fwait
mov
xchg
or
leave
mov
push
addr16
jle
sub
and
adc
add
add
adc
test
jmp
or
scas
xor
inc
cmp
mov
sarl
mov
lea
test
and
or
mov
push
mov
aas
imul
sarl
aas
xchg
xchg
xchg
lods
jno
jns
addr16
pop
lods
sbb
cmovb
jbe
je
int
cmpsl
sub
xchg
sub
mov
popf
insb
or
cmp
lcall
out
pop
xchg
ljmp
sub
mov
sub
and
add
cmc
mov
push
fnstenv
mov
cmpsl
dec
mov
test
jl
push
dec
xchg
lods
xor
cmp
mov
test
jns
arpl
daa
inc
in
jge
push
fwait
fs
flds
and
ror
js
cmp
fidivrl
shlb
adc
cmp
aas
decl
addb
sbb
iret
test
enter
xchg
xchg
ret
icebp
rcrb
cld
adc
mov
xchg
xor
cmpsb
cwtl
xchg
ret
jb
repz
out
xor
pop
test
inc
loop
jecxz
lock
cmp
clc
mov
imulb
test
nop
sbb
or
cmp
aad
sbb
push
push
xchg
out
cmp
fdivrs
xor
push
adc
push
jp
sbb
lods
test
push
jmp
pop
repnz
lods
outsb
push
mov
mov
add
inc
sub
dec
jle
adc
xor
xor
dec
test
pop
or
int3
out
dec
jl
xor
jecxz
ds
push
cld
into
in
adc
lcall
sti
xchg
ficompl
sub
pop
mov
adc
push
dec
xor
lods
pop
sbb
lret
cmpxchg
sahf
push
inc
and
pop
aaa
or
out
xor
fnstcw
sub
jns
xchg
inc
inc
push
push
aad
in
jle
cmp
lret
mov
hlt
cmc
cmc
sti
mov
adc
es
mov
jmp
mov
sub
fmull
mov
loope
loope
cmpsb
add
inc
icebp
shlb
xor
pop
cmp
sahf
notb
adc
xor
ret
andl
std
les
jmp
xorb
xor
dec
sub
arpl
add
jge
xchg
call
adc
add
push
lcall
repz
jge
add
test
pop
sub
mov
adc
push
or
test
notb
scas
push
cmc
adc
xchg
call
lods
jae
push
adc
and
adc
stos
push
mov
mov
jnp
mov
jbe
cwtl
cmpsl
test
cmp
add
inc
cmc
stos
pop
sub
mov
add
ljmp
adc
adc
mov
fiadds
into
les
jno
cld
mov
cmp
mov
stc
stos
cmp
push
push
popf
dec
xor
cs
pop
lret
ljmp
cmpsb
roll
push
cmp
xchg
movsl
sbb
pop
sbb
xchg
cli
xchg
test
add
sbb
mov
rcrb
cmp
fs
fistl
fst
lds
jge
jo
or
out
roll
mov
or
dec
cmpsl
das
mov
xchg
push
xchg
pop
orl
inc
mov
out
mov
push
push
hlt
sub
cmpsl
aas
outsb
mov
insl
pop
mov
inc
cmp
fistpll
mov
cmp
rol
cmp
push
mov
das
sub
es
shl
cmpsl
paddw
mov
mov
dec
cmp
dec
or
push
dec
fldenv
xchg
add
xchg
inc
fidivl
int
cmpsb
sbb
aaa
lret
rep
movsl
fldenv
mov
stos
js
sbb
mov
ds
inc
cwtl
pop
add
and
adc
in
sahf
jbe
std
xlat
pop
adc
pop
sub
cmpsb
pop
inc
shrb
icebp
dec
inc
sahf
push
pop
outsb
jmp
dec
mov
inc
es
mov
pop
xor
jo
mov
and
mov
into
inc
divl
test
scas
imul
mov
pop
pop
and
xchg
fldl
stc
mov
movsl
cmc
out
xor
out
dec
ret
addr16
cmp
decb
push
aad
sub
and
mov
enter
add
adc
sub
and
fwait
int3
frstpm(287
mov
cmp
push
mov
dec
adc
push
mov
stos
push
subb
cmp
pop
lret
lcall
jg
out
cltd
inc
insl
fimuls
rolb
mov
adc
jle
fmull
fdiv
test
push
xor
fcmovne
shll
dec
jno
sub
jmp
lret
out
fiaddl
push
pop
arpl
mov
sbb
movsb
adc
xor
dec
jge
outsl
cwtl
jb
fistl
lock
test
lret
stos
mov
aad
gs
pop
jbe
cli
outsb
sti
ret
xchg
cwtl
fbstp
repnz
or
ljmp
out
sbbl
repz
mov
repz
mov
lret
into
loope
sti
mov
mov
bnd
das
cmp
lea
mov
clc
cmp
mov
or
pop
xor
and
mov
loope
cmpsl
cld
out
enter
mov
xor
xor
cs
out
adc
shl
lret
xchg
out
mov
icebp
ja
add
mov
or
ret
test
aad
push
mov
push
push
test
push
inc
int
cmp
fwait
push
or
inc
or
rdmsr
mov
sbb
dec
ret
xchg
and
imul
mov
mov
sbbl
rcll
push
movsl
sarl
adc
aas
or
stos
mov
lods
ss
insb
mov
test
je
mov
pop
out
iret
jp
bnd
pop
iret
xchg
add
pop
sub
jbe
add
mov
vfrczpd
mov
jg
add
pop
sub
jbe
xchg
and
dec
and
sbb
push
bound
pop
cmp
xchg
imul
inc
push
sbb
ljmp
xchg
repz
sbb
lahf
jb
and
pop
or
lods
out
pushf
in
int
fst
pop
int
and
push
or
cmpsb
push
sbb
insl
insl
enter
ficoms
jmp
sub
sub
push
sbb
rclb
bound
push
outsl
xchg
push
and
or
fwait
xor
jp
cmp
sub
daa
loopne
loopne
lock
std
jno
sbb
mov
lret
fdivl
mov
in
cmpsl
aaa
push
pop
adc
dec
aaa
xchg
lcall
jle
ds
adc
daa
pop
cmp
push
subl
cs
cmp
adc
js
cwtl
xchg
push
int3
mov
jmp
iret
inc
scas
adc
push
fildl
or
sub
and
pop
dec
push
jle
orb
add
into
mov
add
pop
cwtl
and
bound
cmc
and
and
xor
xchg
push
in
jae
pop
ss
shlb
jecxz
jl
imulb
je
adc
xor
cmp
push
xchg
and
cmp
mov
push
pushf
push
sub
fucomi
inc
jle
pop
je
arpl
clc
add
clc
lea
jnp
movsb
or
and
or
insl
mov
sbb
xchg
mov
push
mov
jae
test
pop
int
testb
sbb
mov
xor
push
aad
inc
jbe
add
xchg
xor
mov
xor
xchg
les
cltd
mov
addr16
es
rcrl
icebp
movsb
mov
cld
orl
xlat
fistpll
push
sub
mov
push
mov
xor
xchg
je
psubsb
mov
aam
cld
flds
stos
push
xchg
pop
xchg
xor
leave
push
push
ss
jmp
mov
lahf
jp
mov
aad
ret
xlat
icebp
push
mov
in
imul
add
ja
sarb
inc
mov
pop
pop
imul
sub
data16
cmp
ds
test
adc
xchg
jmp
cld
cmp
popf
outsl
pop
hlt
cmpsl
push
aaa
xor
cld
pop
sahf
push
out
call
mov
lea
ficoms
xor
jmp
push
clc
pop
xor
inc
cs
in
sub
popa
and
ss
addr16
xorb
jne
in
pop
popf
xchg
sahf
out
jo
and
jl
addb
fs
pop
mov
push
int3
sahf
lret
add
sahf
aaa
fimuls
lea
fcomps
pop
divb
cmp
mov
or
jle
jg
inc
mov
sub
gs
mov
dec
hlt
xchg
aas
push
movsl
aad
and
psrlw
out
testb
or
int
mov
inc
sub
sub
ljmp
inc
test
inc
scas
inc
jb
les
sahf
push
jle
lock
jno
mov
sarl
ficoml
rcl
sub
sahf
and
lahf
aad
cmpsl
cmpsb
ljmp
movsl
movsb
shrl
lods
mov
mov
dec
pop
jne
and
fnstsw
xor
or
sbb
ss
cmp
shll
add
loop
pop
sbb
xchg
daa
dec
inc
pop
pop
cs
lods
push
fidivrl
add
loopne
mov
cs
push
cld
andb
mov
inc
xchg
push
ljmp
lds
popl
or
ljmp
cmp
pop
daa
out
enter
mov
adc
test
add
xorl
arpl
mov
imul
inc
popf
add
xor
loopne
iret
jecxz
and
cmp
inc
push
sti
push
call
xchg
out
cmp
inc
xchg
xchg
pop
cmp
addb
inc
test
out
pop
push
das
ds
inc
mov
fsubr
cmp
add
xchg
in
int3
or
adc
in
jae
lods
mov
or
mov
cmpsb
lea
bnd
sbb
add
jl
pop
adc
xchg
sub
and
adc
js
add
ret
dec
jg
cli
stos
jbe
pop
or
icebp
leave
xchg
xor
mov
and
imul
push
pop
mov
xor
cmp
add
cmp
sbb
fstpl
aas
divb
inc
or
dec
jne
xchg
mov
nop
fiadds
xchg
jns
call
ja
in
push
mov
push
es
leave
or
jae
push
xchg
jne
mov
popa
lock
xor
sbb
rcll
adc
sub
add
icebp
sbb
jnp
fidivrl
mov
cmc
dec
xchg
pushf
and
and
jl
lock
nop
sub
cwtl
arpl
mov
gs
push
xchg
adc
outsb
sub
scas
xchg
sub
call
jmp
dec
cld
shr
jge
loope
es
enter
sbbb
cmp
cltd
adc
push
in
lock
pop
jecxz
pop
loope
lcall
fisttpl
pop
cmpsl
repnz
mov
xor
cmp
bound
sub
repz
scas
adc
dec
sub
pop
divl
outsl
and
ret
adc
imul
xchg
jmp
push
test
jmp
into
push
cmpsb
mov
sub
repnz
push
lds
addr16
xor
dec
cltd
mov
xchg
outsl
js
mov
in
sbb
loope
jg,pn
xor
push
fucomp
fwait
das
push
or
in
sbb
cmp
imul
push
fdivl
nop
insb
mov
not
adc
add
movsl
vpsrlq
inc
inc
xchg
aam
or
test
mov
sti
push
jno
fiadds
arpl
popf
ret
lret
lds
jecxz
jno
jp
inc
inc
or
inc
and
push
in
pop
jo
cmp
hlt
mov
fisttpl
fsubrl
cs
and
pop
lahf
cs
addb
mov
lods
fnstenv
sub
scas
lea
scas
jb
sbb
int3
sub
imul
cs
cmp
dec
scas
pop
fidivrl
lods
pop
ret
pushf
sub
mov
cld
mov
xchg
mov
sbb
push
sub
adc
loopne
xchg
out
adc
call
sub
rcll
mov
mov
cwtl
sub
lock
addb
test
push
and
cwtl
jge
adc
xchg
sahf
jne
pop
mov
jns
flds
mov
stc
int
xchg
mov
addr16
xchg
mov
imul
pop
and
das
xor
jb
dec
or
add
outsb
aaa
insl
jmp
add
jg
push
imul
mov
push
mov
sub
arpl
aad
push
jbe
std
jne
and
mov
jge
js
lret
data16
aad
sub
or
scas
mov
cs
add
cmpsb
rcrb
loope
ljmp
cmp
out
or
cmp
adc
pop
jle
mov
pusha
lret
xlat
cmp
ss
shlb
rdtsc
mov
mov
jno
mov
fstps
push
cs
dec
mov
xor
or
lds
mov
shll
pmaxub
adc
addr16
out
or
lock
fdiv
inc
xchg
sbb
pop
mov
repz
push
lock
inc
cltd
sbb
nop
jp
int
and
push
xchg
pop
rcl
or
and
sbb
dec
push
or
fsubs
sub
or
fildl
cmpsl
push
and
push
inc
push
sub
xor
xor
lret
stos
pop
push
jno
mov
jp
xchg
inc
and
xor
divl
cmc
loope
or
adc
push
addr16
cmpsb
mov
outsl
dec
dec
addr16
in
mov
stc
mov
sbb
inc
out
fwait
jle
add
sub
sub
fsubr
and
or
push
inc
jp
inc
pop
push
push
es
stos
les
push
adc
pushf
pop
out
in
fldl
movsl
dec
leave
push
inc
and
dec
bound
lods
cwtl
frstor
cmc
inc
iret
test
xchg
arpl
fiaddl
fisubl
mov
and
mov
cmp
stos
in
mov
pop
pop
mov
xchg
jmp
jno
out
cmp
mov
xor
cmpsb
cmp
fcomip
mov
and
fs
cld
mov
stos
ret
in
push
stos
inc
mov
dec
mov
jg
push
fs
jmp
loop
in
lds
leave
std
and
cmp
cmpsb
push
adc
arpl
movsl
inc
mov
xchg
or
cmp
fidivrl
jmp
movsb
dec
sbb
push
ss
inc
ja
ret
subl
repz
sbb
in
ret
inc
xchg
jecxz
pop
add
push
fs
fidivs
cmp
fildll
and
dec
enter
xchg
in
jo
and
sbbl
testl
movsl
pop
dec
jbe
inc
sub
mov
movsb
sbb
loope
rcrb
push
bound
clc
add
dec
dec
or
dec
mov
adc
call
sti
inc
pop
mov
out
scas
jo
pusha
sbb
or
stc
ret
jne
sub
inc
add
adc
xchg
push
jbe
jae
stos
pop
mov
xor
jnp
fs
adc
sub
scas
leave
inc
sub
test
xchg
std
cltd
jg
popf
lock
lock
popl
loope
test
pop
addb
repnz
cwtl
arpl
sahf
jae
test
fnsave
aad
scas
add
cmc
stc
fstpl
mov
mov
dec
sti
mov
bound
mov
lods
push
out
pusha
jnp
and
push
loopne
jnp
or
inc
adc
scas
cmc
xchg
xchg
mov
mov
imul
xor
jb
shrb
pop
ja
dec
mov
nop
dec
in
outsl
inc
lcall
scas
adc
cmp
xlat
dec
in
repnz
mov
adcl
xor
add
adc
icebp
aad
int
repz
je
outsl
repnz
out
int3
mov
fwait
sub
repz
jns
mov
add
loope
inc
jmp
and
out
sub
mov
pop
shrb
adc
stc
in
stos
fwait
lret
jns
cmp
cmovne
rclb
dec
or
jae
jnp
loopne
fstpt
subb
loopne
stos
push
aaa
mov
lods
mov
dec
adc
lret
sub
shlb
sahf
adc
cltd
stos
shl
jmp
pop
in
xorb
outsb
jb
jae
mov
lods
add
ret
roll
rorb
add
push
cli
jge
repnz
sbb
nop
xchg
rcr
inc
inc
sub
pop
mov
jns
mov
stos
or
mov
and
mov
call
outsl
jae
inc
xor
mov
call
jl
cmp
mov
mov
fsubrp
and
inc
daa
fmuls
mov
dec
insb
stos
push
mov
icebp
jg
adc
cs
testl
jno
sub
xor
jg
cs
dec
jmp
stc
repz
xlat
data16
nop
stos
inc
fcomi
push
pop
insb
dec
movsl
xor
rorb
xchg
mov
pop
and
jno
cmp
enter
hlt
aaa
add
sbb
shrl
adc
push
inc
js
sub
pop
push
fwait
imul
andb
insl
inc
sbb
mov
pop
nop
lcall
adc
mov
cmp
cmc
arpl
cmc
xor
je
outsl
out
out
cld
lcall
jg
pop
xchg
jb
mov
sbb
or
mov
arpl
push
ljmp
in
lods
push
add
mul
dec
dec
loopne
push
jo
ret
xchg
inc
mov
scas
faddl
aaa
out
jg
hlt
dec
mov
cmp
pop
and
into
add
sub
ror
sub
adc
inc
sbb
ja,pn
mov
or
or
sub
cmp
fdivrl
mov
push
push
rcrl
push
mov
and
cli
into
cltd
mov
inc
pop
data16
mov
dec
or
jo
cmpsl
xchg
scas
xlat
adcb
test
ja
int
adc
rclb
addb
adc
and
in
or
cmp
inc
push
or
dec
mov
pop
push
or
into
jae
lret
add
cs
mov
lock
inc
add
mov
push
call
aas
clc
lds
pop
xor
inc
aaa
inc
push
rclb
xchg
jno
mov
mov
sbb
inc
cmp
and
fists
pop
ja
jp
add
in
aam
lahf
jae
std
mov
and
xchg
or
imul
dec
or
cs
jl
jo
fwait
testl
notl
mov
inc
js
dec
mov
outsb
movsb
dec
lods
repnz
sahf
in
xchg
adc
dec
lret
mov
jmp
fadds
fwait
push
dec
xor
lea
imul
clc
out
xchg
test
ret
mov
or
popa
js
fldl
lahf
aaa
aad
sub
dec
or
out
sbb
inc
pop
mov
push
mov
mov
push
popa
adc
xlat
fsubrl
adc
add
mov
clc
mov
lret
ret
adcl
or
movsl
jle
aaa
jno
testb
cltd
push
pop
pop
dec
push
std
cli
pop
mov
bound
add
inc
and
sub
stos
or
push
add
and
sbb
fwait
aam
in
sbb
cmpsb
dec
push
inc
fidivrs
or
addr16
fstpl
idivl
nop
mov
or
dec
jae
int
aaa
pop
or
lret
mov
and
mov
jge
aas
sbb
jl
push
or
int3
mov
pop
push
in
aaa
xor
ret
or
rcrl
sahf
dec
imul
movsl
mov
shlb
dec
and
fstps
pop
or
stos
scas
mov
dec
inc
pushf
sub
movsb
ret
adc
cmp
sub
movsb
pop
pop
cld
mov
jnp
iret
fdivr
orl
xchg
jns
adc
or
popa
imul
cmpsl
mov
mov
fcomps
and
sub
cmp
pop
push
orb
push
ljmp
xchg
out
xchg
xchg
push
xchg
sub
stos
iret
inc
ret
shl
mov
or
aad
mov
mov
mov
and
cmp
jmp
or
mov
int3
mov
cld
test
xor
filds
mov
sub
call
sub
push
pop
call
test
js
int3
add
pop
lahf
push
adc
scas
es
fs
pop
icebp
adc
push
add
mov
jne
adc
push
push
call
or
jno
ljmp
jbe
push
stos
rcl
sub
dec
add
mov
sub
addr16
fs
aas
push
insb
cltd
arpl
aas
cmp
mov
dec
into
loope
cmc
loop
shrl
movsb
testl
cli
cmp
outsb
lock
das
mov
fsubrs
xor
or
add
lcall
xor
sbb
imul
cld
adc
in
or
movsl
jl
cltd
xlat
dec
stc
mulb
testb
cmpsb
dec
arpl
loope
out
cmp
pusha
add
pop
and
inc
xorb
sub
mov
add
lods
aaa
jbe
sub
add
popa
mov
jecxz
int3
leave
sub
add
aam
fidivl
push
jmp
cmp
xor
popa
cwtl
hlt
cmp
mov
mov
sbbb
leave
and
inc
xor
add
fdivl
dec
ret
mov
test
jo
nop
mov
pop
and
inc
push
jo
inc
lret
mov
mov
daa
fs
scas
sub
cmpsb
push
push
push
les
mov
cmp
jmp
push
leave
xorb
pop
fdivl
lret
jnp
subb
push
pop
jge
push
mov
out
sub
jne
ja
xor
jl
pusha
jp
push
add
int3
inc
adc
pop
mov
cmp
jp
leave
pop
push
add
or
push
pop
int3
fidivs
xchg
xchg
xchg
adcl
out
std
ja
fstl
loope
cltd
lret
pusha
test
fdivl
fisubrs
mov
fimull
mov
addr16
cmpsb
popf
xchg
enter
das
xchg
xchg
out
sti
or
fdivs
outsl
mov
pop
insb
das
mov
fnsave
gs
daa
sbb
xchg
fbld
popa
in
fstps
add
jg
dec
add
imul
ds
adc
sti
in
ja
sbb
popf
test
rorl
and
mov
repnz
es
out
pop
sub
adc
xchg
insb
cmp
xor
inc
or
or
cs
mov
divl
xchg
pop
outsb
outsb
dec
xchg
fwait
sti
sbb
das
inc
mov
fimull
cmpsl
sub
sbb
xchg
adc
push
add
xor
inc
cmpsl
mov
push
push
ja
push
loope
es
inc
jno
jge
addr16
mov
add
jae
aaa
jnp,pt
pop
fimuls
pop
mov
cld
cmp
or
fsubr
push
lock
jge
dec
data16
ret
mov
cli
movsl
lcall
sub
adc
rcll
jne
adc
lcall
movsl
sub
fisubrs
fcompl
push
std
push
dec
sbb
and
out
cmp
fildl
xor
loopne
in
fdivrl
and
sbb
sti
fildll
mov
sbb
call
loop
movsl
inc
cmp
pop
add
inc
pop
outsb
jle
pop
flds
call
mov
push
xchg
xchg
mov
ds
data16
es
mov
adc
bound
cmpsb
mov
int
popf
pop
jb
fs
xchg
je
pop
jl
rolb
out
and
lcall
push
and
adc
push
sub
fstpt
push
subb
in
push
xor
aad
data16
aad
sub
jmp
lock
test
ljmp
mov
lods
das
sbb
mov
outsl
cmp
jno
xchg
add
ja
fstps
into
mov
aad
cmp
jle
dec
loope
out
movsl
mov
mov
fdiv
xchg
sub
shrb
dec
adc
add
pop
adc
jnp
loope
out
pushf
mov
cld
sub
cmc
push
or
jbe
enter
xchg
mov
jl
lar
jmp
insb
sti
xor
push
out
dec
iret
adc
loopne
mov
push
popf
dec
adc
rolb
loop
add
fdivr
es
in
daa
push
lret
mov
add
int3
aaa
scas
xchg
fcmove
pop
sbb
xchg
pop
cmc
xor
lds
lcall
hlt
xchg
cmp
gs
clc
negb
ss
push
or
add
push
xor
arpl
and
in
sbb
mov
adc
mov
lret
adcb
sbb
into
ds
mov
xchg
fwait
mov
loope
sub
lock
aad
mov
fcompl
mov
xchg
sbb
mov
mov
js
cmp
and
push
dec
fdivl
out
jb
mov
js
lea
es
xor
mov
mov
xor
add
lods
shrl
mov
or
out
cwtl
push
popa
shld
inc
add
leave
fwait
ret
jmp
es
aam
push
add
test
je
xchg
or
int3
xor
and
cmp
xchg
jb
xchg
mov
sbb
xchg
add
adc
stc
jecxz
jbe
inc
push
fnstcw
fwait
cmp
jmp
add
mov
add
lahf
pusha
jae
clc
xchg
outsl
into
das
daa
cs
push
cli
lcall
cwtl
and
adc
popf
mov
lret
decl
movsl
push
xchg
sub
jp
in
and
and
mov
div
nop
sub
sub
lods
cwtl
push
push
stos
xor
in
mov
push
lcall
subb
add
pop
int
lcall
scas
push
inc
fistpl
xchg
rol
ljmp
mov
inc
cmp
lods
cmpsb
push
test
inc
or
loop
out
leave
ret
in
pop
xchg
das
popa
or
xchg
jae
inc
inc
js
idivl
repz
in
insb
insb
fisttpll
jecxz
jne
and
fwait
je
adc
xchg
fs
cmpsl
in
fistps
adc
mov
dec
popa
negl
loop
shlb
inc
cwtl
xchg
jmp
shll
daa
movsb
icebp
les
or
push
push
lods
xor
push
into
dec
int
push
mov
xor
nop
ja
push
nop
pop
popf
or
adc
cmpsb
cmp
sbb
jnp
ss
push
hlt
dec
sbb
jecxz
xor
mov
std
stc
bswap
adc
jg
xchg
shlb
scas
clc
jae
jecxz
mov
xor
addr16
in
fwait
pushf
rcrb
aaa
out
idivl
lock
scas
xchg
mov
jl
inc
popa
mov
jns
jge
dec
stc
xchg
fwait
dec
adc
stos
dec
jns
repnz
fdivrs
fisttpl
loope
scas
sub
in
popa
das
cmp
mov
xchg
out
cmpsl
push
dec
imul
call
sub
jns
fstl
das
cmp
mov
adc
cmpsb
pop
cli
outsb
cmpsb
mov
adc
mov
mov
xchg
call
pusha
mov
cmp
sahf
stc
mov
sub
clc
lds
ja
mov
scas
loope
insl
dec
je
or
ja
pop
inc
arpl
cld
inc
mov
call
js
mov
ja
fidivl
xchg
fldcw
push
push
dec
jmp
movsl
leave
ret
out
sub
aas
into
bts
add
fdivs
add
movsb
mov
fwait
xor
hlt
scas
and
stos
inc
into
sbb
clc
mov
enter
shlb
stos
lret
adc
inc
sub
push
sbb
jns
push
mov
in
test
ljmp
lahf
sub
inc
pop
push
ret
arpl
jle
bswap
jns
rorl
xchg
pop
outsl
movsl
sbb
enter
xchg
mov
mov
xlat
inc
daa
in
aas
lret
pop
push
dec
jge
in
sbb
cmp
repz
lods
fwait
sti
outsb
test
xchg
mov
add
mov
adc
fcomps
jae
inc
int
xchg
loope
adc
test
mov
mov
sbb
cwtl
loope
mov
test
cltd
xor
stos
lea
push
and
loopne
jno
leave
xchg
das
pop
out
jmp
or
xor
or
out
push
dec
pop
gs
and
cmp
mov
shll
jmp
jg
adc
lahf
push
pop
js
jg
les
inc
xor
xlat
or
inc
ljmp
jne
adc
jg
rorb
leave
add
imul
inc
in
scas
and
test
dec
inc
adc
sub
ljmp
ret
repnz
or
and
mov
sarl
arpl
fwait
into
jle
mov
inc
jg
inc
out
bound
jp
fcoml
les
cmp
out
mov
bound
mov
dec
addr16
xchg
lock
test
fs
xchg
out
dec
mov
sub
jbe
dec
pop
enter
xor
lret
test
sub
mov
inc
cwtl
fld
jge
jp
fisubrl
rcrb
pop
cli
ljmp
outsb
scas
dec
ss
lods
shlb
add
push
sub
pop
and
inc
adc
mov
pop
dec
cmp
pop
data16
inc
sbb
sbb
lods
es
dec
xchg
xchg
jmp
inc
gs
std
outsb
fidivrl
or
adc
pop
and
cmovl
jbe
imul
dec
push
movsb
adc
stos
das
mov
mov
arpl
in
or
and
in
loop
fldt
cltd
sbb
and
or
mov
cmpsl
cltd
mov
xchg
and
movsl
pusha
pusha
les
out
pop
lret
loopne
outsl
lahf
and
pop
mov
pop
shll
mov
mov
add
mov
std
test
dec
dec
mov
bound
addr16
dec
or
jo
in
dec
in
add
jmp
sti
sub
int
dec
out
insb
push
insl
push
fnstenv
aad
std
cmp
stos
adc
push
aas
es
dec
adc
pop
rcll
cmp
lret
iret
out
insb
insl
sub
xor
mov
cltd
add
pop
xchg
and
mov
sti
or
push
ljmp
int
lret
jb
push
sbb
pop
mov
sti
push
push
repz
ret
sbb
dec
inc
mov
cmp
fnsave
repnz
pop
inc
test
jnp
shrl
sbb
rorb
stos
pop
fwait
lds
jns
mov
in
repz
and
rcrl
adc
push
xchg
loope
and
xchg
insl
out
inc
or
andb
or
sbb
sbb
ficoml
dec
pop
or
cmpsl
push
call
div
popf
mov
pushw
inc
push
aad
add
rol
and
imul
inc
push
lahf
xchg
in
adc
fdivs
sub
mov
int
xchg
enter
sub
sub
jns
add
rcrb
xor
test
dec
inc
mov
sbb
add
cmc
jmp
mov
je
out
into
stos
xor
popf
js
and
xor
or
int3
or
in
jg
fildl
and
int
sahf
stos
mov
lahf
dec
arpl
fnsave
arpl
push
pop
xor
cmpsl
dec
push
xor
cli
jae
sub
sbb
stc
shrl
rcrb
xor
xor
xor
jnp
xchg
push
es
mov
std
mov
xor
xorl
jp
lcall
test
jle,pt
je
js
add
nop
js
mov
leave
div
sbb
fidivl
sbb
jmp
pop
lds
cltd
mov
mov
pusha
scas
mov
aam
addr16
popa
add
sub
fwait
imul
iret
mov
jle
js
xchg
loop
insb
lea
mov
mov
ficompl
fsub
inc
jl
daa
or
stos
divl
cmp
sbb
div
xlat
es
and
stos
mov
jle
mov
insl
subb
lahf
jne
pop
inc
ret
fcmovu
jae
sub
in
popa
mov
daa
jl
inc
stc
xchg
loop
lods
jne
cmp
addr16
cmp
dec
js
repz
inc
jno
ljmp
seto
xchg
lds
cmpsl
sar
imul
or
sub
test
pop
inc
cmp
sar
dec
mov
icebp
dec
mov
bound
fistpl
scas
sbb
aas
popf
out
pop
jns
mov
addr16
pushf
ljmp
cmpsb
and
and
add
ds
dec
mov
add
stos
sub
inc
dec
add
scas
jbe
adc
shll
mov
inc
mov
mov
insl
out
mov
sbb
fcompl
inc
xchg
lock
xor
cmpsl
rcrl
mov
push
add
lods
cmp
cltd
out
and
xor
test
in
push
jnp
bound
push
push
lds
pop
mov
scas
out
push
xchg
je
jnp
mov
jp
inc
ss
adcl
sub
fists
mov
and
xchg
adc
call
pop
xchg
sub
test
add
or
dec
mov
bound
lahf
cmp
mov
adc
icebp
addr16
mov
imul
push
in
push
stos
jns
out
sbb
dec
rcl
in
ss
add
fwait
jge
mov
shlb
sbb
xchg
out
adc
mov
mov
cmp
and
rcrb
mov
sbb
adc
jns
inc
mov
or
pop
add
call
loop
imul
push
cmp
or
lods
in
lods
xchg
xchg
daa
mov
pop
or
sbb
mov
mov
xchg
pop
nop
pop
jno
in
push
push
lods
sti
push
js
ds
sbb
popf
add
into
xor
testl
out
mov
mov
adc
dec
adcl
sub
stc
jmp
dec
pushf
cwtl
ret
inc
mov
add
sahf
mov
mov
insb
ljmp
outsl
je
out
pop
fisttpl
xor
cmp
pop
notl
pop
and
das
jl
mov
inc
test
push
repnz
jp
xchg
sbb
jp
push
int
and
decl
jp
cmp
mov
xchg
scas
hlt
ret
dec
fs
lcall
je,pn
lcall
inc
pop
dec
lds
mov
out
mov
inc
pop
cld
outsl
int3
cli
jg
jo
mov
dec
insb
mov
mov
lcall
fptan
mov
shrl
fcoms
mov
adc
inc
push
inc
stos
gs
xchg
mov
in
lcall
jnp
scas
sbb
dec
mov
inc
mov
dec
pop
add
daa
adc
inc
add
inc
sbb
inc
sahf
sub
loope
lods
icebp
lret
lret
ror
adc
xchg
test
push
movsb
push
cli
in
loopne
js
ret
inc
fdivs
stos
xor
loope
cli
or
dec
mov
and
push
push
test
popa
sub
data16
inc
lea
popa
pusha
aaa
xor
inc
ficompl
insl
mov
in
push
gs
and
movsl
fdivr
es
inc
movsb
sahf
movsl
inc
mov
or
xor
out
stos
or
push
movsb
cmp
sarl
cld
jmp
sti
into
pop
lock
push
xchg
lcall
les
jbe
pusha
xor
notl
lea
ja
adc
pop
lds
sub
sbb
jl
out
inc
test
and
hlt
ret
add
clc
xchg
cwtl
cmp
fmull
je
mov
inc
xchg
mov
aam
xchg
pop
sub
sbb
test
daa
je
pop
in
cmp
cltd
int
into
or
loop
sbb
cmp
add
push
test
add
leave
sti
adc
inc
xchg
xchg
imul
sbb
les
jbe
stos
jne
pcmpeqb
or
or
mov
scas
sbb
pop
sahf
imul
in
jae
sahf
or
icebp
ud0
rorl
stos
sub
movsl
cli
cmpsb
and
daa
lock
cmc
into
mov
or
add
adc
fmuls
ret
xor
adc
lret
pop
das
cmpsb
push
xor
popl
out
push
mov
mov
js
mov
mov
pop
fidivrs
mov
and
sbb
pop
or
xchg
and
out
dec
mov
pop
cmp
es
or
sbb
pop
psubw
cmpsl
push
push
lea
push
lock
lret
xor
in
mov
aas
pop
add
sahf
and
xchg
mov
adc
out
cmp
cltd
or
mov
mov
mov
fwait
ret
int
into
sub
inc
out
and
add
adc
add
cmpb
push
push
rcrl
add
jl
pop
into
xor
ja
cli
fmuls
dec
imul
mov
mov
cwtl
push
sbb
stos
or
jae
xor
mov
aaa
mov
lea
adc
pminub
lcall
sahf
jmp
pop
lods
adc
aaa
pop
fdivr
push
insb
addr16
cmpsb
push
xor
aas
call
inc
mov
or
inc
lock
ss
pop
ret
mov
sub
in
loop
adc
imul
nop
fsts
dec
jge
sbb
jns
popf
out
rolb
movsb
mov
test
in
fcom
jbe
mov
addl
jne
sbbl
test
mov
xchg
push
adc
fwait
cmp
pop
mov
scas
xchg
xlat
popf
inc
xchg
inc
bound
sarb
push
outsb
stos
mov
lods
adc
ret
xor
fdivs
xor
pop
cmpsb
adc
into
in
jge
imul
loop
pop
out
push
bound
js
fisubrl
repz
dec
andl
dec
xlat
push
cwtl
addr16
les
adc
sbb
mov
mov
nop
ja
mov
pop
test
push
ljmp
lcall
push
jo
divb
sbb
mov
int
cmc
and
xor
daa
xchg
dec
int3
or
scas
in
adc
scas
push
lret
lcall
rol
shrl
jg
xor
inc
outsl
sbb
pusha
outsb
pop
outsb
jnp
enter
mov
mov
lcall
add
xor
mov
pop
and
cmpsb
cmp
cs
shll
jo
jb
and
adc
roll
jb
cs
cmp
or
jbe
or
pop
lea
inc
fs
adc
stos
lock
sti
xchg
or
jmp
mov
or
jmp
sbb
hlt
bound
pop
xor
movsb
xor
fwait
xchg
mov
iret
push
xor
movsl
scas
jecxz
or
xchg
xchg
dec
pop
or
popa
adc
sahf
test
sti
inc
addl
adc
sub
mov
test
daa
push
dec
outsl
mov
imul
or
lds
ja
sbb
jb
hlt
std
filds
and
xchg
mov
insb
xchg
dec
jbe
xchg
add
jno
jo
icebp
aas
repnz
pop
jg
jmp
add
adc
cli
or
sub
fucom
das
dec
add
or
inc
add
je
scas
ljmp
movsb
lret
inc
cmp
jl
and
xchg
and
xor
fwait
ja
std
shrl
push
fisubrl
cmp
pmuludq
dec
inc
pop
mov
pop
xchg
enter
dec
fisubs
mov
jl
sti
push
sub
xchg
fiadds
jmp
lods
dec
mov
stc
repz
xchg
cmpsb
jecxz
inc
jmp
push
negb
sbb
out
xchg
jbe
arpl
lea
sbb
sbb
call
call
xchg
lcall
popa
push
rol
or
imul
jge
cmpsb
popa
loope
sub
shrl
andb
xlat
lods
and
xchg
dec
insb
out
cwtl
test
xor
icebp
and
fisttpll
daa
jns
jecxz
mov
jnp
push
push
loope
sub
mov
addr16
lods
mov
lods
adc
test
ret
daa
test
or
xor
jno
mov
cmp
fistpll
dec
mov
int
in
cmpsb
and
dec
js
dec
pop
mov
dec
and
fistps
inc
mov
mov
add
xor
and
xor
pop
and
punpckldq
push
xlat
movsb
xor
add
dec
rcrl
gs
sub
rcll
pop
sbb
adc
outsb
cmp
xor
lods
add
out
or
das
lods
cmc
repnz
pop
push
dec
movsl
ds
dec
rorb
push
ljmp
mov
cltd
add
imul
dec
adc
xchg
xor
pop
insb
and
fcompl
mov
sub
sbbb
push
pop
pop
negb
aas
jecxz
mov
jge
int3
icebp
pop
das
imul
mov
out
aas
stc
in
mov
incl
dec
outsl
mov
jecxz
mov
outsb
pop
cmpsb
in
mov
stc
sbb
cli
xor
call
add
aad
aaa
mov
jb
cmpsl
add
imul
pop
jecxz
push
cmpsb
and
dec
nop
or
ret
pop
js
dec
clc
insl
fisttps
cmp
mov
test
mov
out
incl
outsb
or
js
xchg
sbb
push
int
icebp
xchg
xorb
cs
xor
lods
in
lea
test
sahf
scas
popa
xchg
push
iret
outsb
out
movsl
cwtl
out
jmp
ficoml
enter
enter
out
int
icebp
pusha
imul
sbb
fsubp
pop
std
sbb
dec
and
fs
xrelease
test
sbb
xchg
jg
cmc
inc
cmp
lcall
pop
js,pt
xchg
ret
and
fildl
ljmp
pusha
cmpb
cmp
stos
lock
mov
push
fcoms
or
mov
into
outsb
inc
lock
nop
cmp
sbb
out
popf
sub
pushf
or
pusha
sahf
js
test
mov
imul
pusha
into
adc
mov
xor
aad
push
mov
sarb
push
mov
enter
mov
lods
dec
xchg
sub
pop
sbb
xchg
fimull
out
mov
lea
stos
push
lahf
jl
loopne
xchg
cmp
pop
fnstcw
insl
lret
sub
lods
sarl
xor
pop
push
xchg
inc
lcall
mov
icebp
jle
mov
out
ss
clc
cmp
out
fwait
js
cltd
push
aaa
add
xchg
push
popa
xchg
imul
adc
shrb
icebp
leave
lret
filds
push
cmp
xchg
push
add
adc
mov
push
int
repnz
test
test
adc
mov
mov
adc
enter
ret
test
lods
jmp
sbb
js
data16
sub
and
push
add
dec
xchg
mov
mov
xor
ficomps
das
pop
cltd
xchg
sub
cmp
ret
sub
aas
stc
popf
jns
out
push
push
sarl
je
cld
pop
sahf
jns
jg
test
andl
jnp
enter
int3
rorb
fcmovbe
test
xchg
jno
push
gs
mov
gs
push
loop
and
add
neg
test
adc
shl
or
push
lods
roll
adc
jl
daa
jbe
fimuls
mull
jmp
xchg
mov
rcl
rolb
test
das
inc
push
sub
lods
loopne
shrl
insl
xor
jle
pop
mov
jp
pop
adc
lea
cli
dec
dec
call
mov
loop
into
ret
xchg
fsubl
mov
bound
iret
lods
cwtl
ficompl
adc
pop
shrl
ja
mov
rcll
jecxz
push
add
pushf
inc
dec
or
or
cmp
dec
xchg
pushf
mov
nop
inc
push
out
imul
cs
inc
pusha
pushf
movlps
jbe
outsb
aaa
dec
movl
imul
pop
mov
cmp
out
or
push
pop
das
cltd
mov
movsl
mov
out
int3
div
scas
popa
mov
mov
xor
mov
js
test
lahf
inc
jns
adc
mov
sahf
call
dec
adc
or
mov
inc
pop
dec
mov
gs
jne
pop
leave
or
ret
inc
cs
inc
mov
inc
fimull
push
push
daa
mov
inc
jle
loop
fadd
pop
pop
sub
je
sub
ja
mov
sub
movhps
orl
stos
push
or
jb
stos
sub
push
and
cmp
inc
gs
mov
shlb
dec
out
fstl
xchg
jecxz
mov
and
popf
cmp
inc
iret
ljmp
and
subl
pushl
out
adc
dec
loope
les
in
jle
out
imul
push
fistps
push
push
mov
cmp
subl
or
ret
or
adc
adc
imul
test
popf
xlat
mov
xchg
jne
xlat
test
repz
push
repz
pop
xlat
mov
xlat
es
fiadds
pop
outsl
dec
mov
xchg
stos
jmp
jecxz
xchg
repnz
in
add
cmp
jmp
daa
jp
sub
jno
icebp
add
mov
jmp
lods
popl
lret
into
and
mov
in
dec
shl
ljmp
lods
jae
pusha
pop
mov
inc
pop
push
sub
push
test
enter
daa
xor
dec
fcoms
pop
mov
mov
or
jo
jae
xchg
hlt
loop
inc
mov
mov
sub
pop
mov
decl
add
or
rcr
les
or
cmpsl
addr16
shrb
cmc
pop
pushf
xor
sti
cmpsl
loop
lds
sbb
out
push
jle
loope
div
bound
rcl
sub
sti
daa
out
adc
xchg
pop
dec
popf
jge
lcall
lds
sarb
lods
push
pushf
mov
je
xchg
notb
dec
iret
add
test
addr16
lock
aad
dec
cmovb
fs
or
pop
scas
call
mov
dec
rorl
jl
push
scas
or
sub
jge
jmp
xor
or
or
pop
test
pop
loopne
nop
scas
xchg
push
jl
shrl
repz
int3
xlat
out
pop
lock
ja
pop
imulb
dec
cmp
test
aaa
call
dec
push
mov
mov
jl
add
jmp
jae
mov
ds
sub
inc
dec
in
stos
mov
push
iret
dec
mov
push
push
jnp
movsl
and
mov
jae
in
dec
or
mov
fsubs
push
std
mov
jmp
mov
movsl
cmpl
gs
hlt
cwtl
jl
cmc
jne
jge
stos
dec
outsb
xor
gs
ljmp
mov
push
pop
sub
adc
mov
xchg
jb
aam
lcall
jmp
jnp
cmp
in
xchg
push
add
mov
icebp
rcrb
scas
xorb
cmpsl
push
cmp
mov
jae
sahf
cmpb
xchg
lret
jbe
mov
test
jmp
cmp
jmp
popa
cwtl
jns
sbb
inc
loope
sub
adc
xchg
mov
xor
sub
jne
push
xor
imul
nop
adc
bswap
mov
les
nop
neg
lahf
sbb
adc
imul
sub
mov
repz
fidivl
jge
test
xchg
pop
es
add
ret
test
jecxz
inc
int3
mov
hlt
jnp
or
mov
xchg
dec
xchg
test
sarb
pop
addr16
add
lea
inc
lea
insb
cmc
add
push
and
adc
mov
mov
jo
mov
push
or
cmpsb
fcompl
and
lock
xor
xchg
sbb
dec
mov
das
nop
stos
inc
cwtl
jae
outsb
lret
jle
movsl
in
stos
lret
mov
notb
movsb
mov
call
dec
pop
sub
aam
std
adc
leave
xor
adc
bound
and
scas
push
push
test
mov
sub
out
pop
rorl
icebp
mov
inc
and
xor
mov
pop
or
aam
cli
es
lahf
fdivrs
pop
pop
lar
adc
sbb
mov
mov
xchg
test
aas
inc
jmp
or
outsl
pop
idiv
xchg
test
jge
sub
mov
pop
addl
xor
push
dec
xor
in
aas
stos
jae
cld
gs
cmpsb
cmp
call
push
cli
fbld
ljmp
sub
js
outsl
dec
fwait
mov
cmpsb
inc
nop
pop
cltd
xchg
inc
xchg
cmpl
pushf
dec
mov
sbb
daa
add
push
lds
push
or
jmp
dec
jle
into
lret
cmc
scas
popa
inc
cmp
xchg
out
push
sbb
adc
mov
adc
shrb
pop
xor
sbb
in
lock
push
outsb
mov
push
cwtl
push
ljmp
mov
scas
fildl
xorb
or
data16
dec
loope
std
lret
fmul
insb
jns
mov
jmp
sub
ja
push
stos
add
sbb
aad
jg
push
insl
dec
je
adc
fisubs
xlat
test
fstpl
leave
jmp
fstl
pusha
jnp,pn
add
jmp
mov
fdivs
sti
dec
cs
ret
fimull
out
sub
repz
xchg
jg
cmp
mov
inc
pop
lea
test
sbb
or
sarl
aaa
dec
mov
and
mov
push
mov
push
cmpsb
lret
push
xor
push
push
lods
inc
push
in
dec
jb
cmp
jb
mov
mov
addr16
push
inc
or
jno
frstor
popf
add
lret
adc
es
ret
jne
out
mov
inc
cmp
daa
mov
inc
ret
ljmp
adc
xchg
sarb
repnz
pusha
out
popf
xor
insb
jecxz
addr16
push
dec
int
lock
inc
or
mov
std
aas
stos
xchg
rcll
je
cmp
push
mov
pusha
xchg
jmp
aad
push
jne
sahf
mov
jge
sbb
rcrb
test
rclb
jae
lods
dec
aam
in
jb
dec
lods
cmp
mov
into
das
xor
jl
outsb
lea
shr
cltd
stos
leave
dec
stc
sbb
imul
inc
punpckldq
and
sub
pop
xchg
loopne
cmp
lret
fwait
in
pop
pop
leave
outsb
es
xchg
push
imul
mov
fsubs
je
dec
mov
pop
push
xchg
arpl
xchg
adc
xchg
fucomp
xchg
mov
sbb
xchg
sbb
jp
stos
sub
arpl
cmp
outsl
xlat
xchg
or
xchg
in
mov
je
hlt
stos
scas
push
inc
mov
cmp
faddl
cmpsb
js
pusha
aad
jne
into
andb
sub
sub
in
mov
insl
jecxz
das
or
add
mov
test
ljmp
cmp
inc
rcrb
jbe
repz
adc
mov
daa
outsb
mov
cmpl
jns
data16
jge
push
sysret
inc
pop
pop
ret
mov
adcl
movsb
cltd
jg
xchg
in
mov
scas
cmp
or
xrelease
inc
inc
iret
test
ret
sarl
xchg
lods
add
outsl
mov
sahf
push
out
cwtl
ficoml
add
xlat
aad
js
or
xchg
xchg
hlt
mov
jns
es
sub
fistps
adcb
lods
neg
add
sub
jnp
adc
dec
add
call
gs
aam
lds
fbstp
sbb
mov
lds
out
testl
ja
push
inc
add
das
cmc
mov
pushf
pop
mov
sarb
xchg
xchg
or
xor
loope
aas
pop
mov
xor
test
mov
pop
jnp
mov
jb
or
fnstcw
out
insb
test
pop
xor
or
pop
sbb
fsubl
xchg
cmpsl
pop
or
jmp
inc
xchg
mov
and
hlt
sbb
iret
dec
int
loop
loope
imul
ret
dec
int3
adcl
imul
insl
hlt
and
es
rcll
ficomps
inc
data16
jo
jmp
rclb
mov
and
std
lock
lock
inc
or
movsl
push
push
or
jns
xchg
sar
jnp
popf
push
sub
xor
xor
jmp
iret
mov
rolb
or
iret
push
addl
xchg
mov
mov
les
xchg
loopne
mov
lahf
idivl
xchg
popf
fsubrl
pop
dec
and
pop
dec
adc
mov
xchg
jmpw
mov
popa
mov
das
pop
sbb
rcrl
mov
push
inc
and
ja
mov
mov
jp
cmc
mov
sbb
cmpsb
cmp
in
lret
mov
mov
xchg
and
out
movsl
push
pop
xchg
sahf
cmp
cmp
lret
cwtl
outsb
les
pop
mov
dec
mov
ljmp
mov
adcb
sahf
dec
mov
in
mov
pop
in
sbb
cmc
int3
or
cltd
mov
js
adc
in
out
jecxz
add
pop
push
insl
es
cs
pop
adc
add
push
mov
dec
roll
add
or
insb
test
lcall
dec
cmp
jle
push
jl
sub
daa
rcll
subb
shlb
cmp
inc
or
ja
out
aaa
adc
fs
lock
dec
leave
jge
jmp
addb
inc
rorl
inc
test
mov
out
sbb
pop
and
popf
and
arpl
push
dec
nop
xor
mov
call
popa
pusha
or
mov
aad
push
mov
mov
int
aam
js
mov
push
pop
sbb
sub
bound
jns
xor
mov
dec
fdivl
lods
fdivrl
mov
mov
adc
inc
push
aam
imul
insl
inc
cmpsb
sbb
sbb
add
adc
negb
push
push
mov
pop
dec
lcall
repnz
cs
mov
imul
add
push
mov
orl
daa
leave
aas
pop
lcall
and
push
aas
cmp
outsl
xchg
pop
and
cmp
lods
inc
mov
lds
insl
sbb
push
and
bnd
mov
ljmp
or
adc
es
push
call
lods
hlt
adc
rorb
mov
dec
jmp
jecxz
scas
pop
ss
mov
sub
inc
loop
pop
jle
das
dec
jl
mov
das
push
rcrb
fs
addl
rcr
popa
mov
outsl
loope
or
test
adc
sub
jnp
mov
xorl
mov
push
stos
outsl
push
sbb
dec
mov
jp
daa
jno
pusha
and
add
dec
mov
or
or
xor
js
inc
inc
inc
adc
cmp
mov
sub
in
mov
mov
cmpsb
lods
ret
shlb
neg
cltd
jne
cmp
fmulp
dec
jne
mov
dec
fwait
pushl
pop
pop
test
push
ja
dec
int3
mov
jbe
aad
decb
mov
and
pop
jecxz
cmp
xor
mov
dec
fstl
packsswb
cli
mov
shrb
mov
adc
subb
pop
iret
or
or
mov
imul
dec
xor
fsub
roll
shrl
xchg
cwtl
push
dec
sbb
sub
shll
add
add
iret
push
test
sbb
jg
loopne
cld
cmp
aad
cmpsl
ret
inc
movsb
aam
xor
add
test
jl
xor
ja
les
push
mov
dec
xor
adc
jae
pusha
push
mov
or
pop
push
daa
arpl
sub
shl
fs
push
fadds
dec
loopne
ljmp
ret
xchg
push
jg
jge
xor
arpl
pop
les
inc
push
cli
sbb
jne
pop
ret
dec
outsl
dec
pushf
ss
das
popf
xor
add
dec
sub
adc
lcall
imul
mull
pop
scas
add
daa
testb
loop
or
fstl
rclb
push
push
into
inc
sub
into
in
push
shlb
icebp
js
std
mov
push
or
enter
or
jg
or
pop
inc
stos
rorl
mov
pop
mov
cltd
imul
lcall
imul
jbe
inc
decl
xlat
inc
adc
mov
lret
ja
repz
clc
bnd
repnz
dec
sub
popf
xchg
imul
cmc
xchg
jle
pusha
jl
rol
mov
pop
fcompl
ret
lret
sti
or
vpmullw
inc
shl
dec
cli
sub
adc
sbb
mov
push
fnstenv
xchg
inc
and
ds
pop
inc
pusha
mov
aam
je
xchg
sub
test
movsb
out
push
jb
pushf
cmp
mov
cmp
mov
jge
mov
jge
out
lcall
inc
sub
jae
gs
mov
daa
xchg
roll
adc
or
add
mov
and
push
adc
xchg
jb
orb
push
enter
iret
jmp
stos
sbb
roll
xlat
cld
dec
push
mov
outsl
inc
and
hlt
cmp
push
add
mov
test
cmpsl
dec
es
and
fwait
xchg
sarl
shll
push
jnp
shl
cwtl
sbb
dec
lock
aam
or
icebp
push
ja
jbe
cltd
rclb
fdivrl
or
pop
cmc
pushf
dec
adcl
inc
sub
add
mov
inc
and
xor
push
mov
pop
and
sbb
and
pop
into
fwait
pusha
enter
and
adc
sbb
imul
aam
inc
pop
loopne
push
scas
adc
test
xchg
outsb
cmp
test
iret
in
fidivl
xor
jnp
movsl
sahf
or
movsb
test
mov
cmp
pop
and
mov
pop
mov
adc
dec
cmp
mov
shll
aas
aaa
ret
stos
in
push
popf
stc
mov
rcl
mov
test
jo
xor
into
push
push
cmp
in
dec
mov
inc
mov
xchg
out
leave
fdivs
lahf
sbb
test
adc
inc
jge
or
fisubs
cmp
rcrl
aad
jnp
aaa
fidivl
mov
push
jmp
lock
add
xchg
push
cmp
in
jecxz
sub
aad
scas
pop
ret
inc
and
sub
idiv
push
jp
push
mov
mov
and
insb
jg
test
push
sub
pop
sub
loopnew
adc
inc
mov
jnp
push
dec
popf
sub
in
mov
cmpsl
fisubl
lahf
dec
cmpsb
hlt
leave
mov
scas
cmpsl
out
stos
out
pop
mov
jo
sub
push
xrelease
sahf
in
inc
mov
in
mov
push
sbb
cmp
int3
out
ss
mov
gs
jbe
sub
mov
icebp
dec
xchg
sahf
jp
imul
xor
sub
lock
popf
cli
pop
roll
jge
sar
fdivs
in
jle
in
mov
shll
or
lcall
lret
add
jb
pusha
mov
cltd
mov
out
testb
push
mov
and
dec
lahf
repz
aas
jge
push
psubsw
adc
mov
mov
sub
xchg
fcompl
inc
bnd
mov
mov
lea
xchg
mov
xchg
ja
xchg
inc
push
pop
in
and
push
sbb
in
jne
xlat
or
rorl
and
jbe
or
inc
dec
dec
pop
andb
cmp
shll
cmp
stc
fdivr
jae
test
pop
lods
dec
es
std
push
in
mov
sbb
dec
push
repz
daa
push
jecxz
pushf
sub
ja
leave
mov
pop
jno
out
jb
xchg
inc
push
mov
mov
int
lahf
sbb
dec
lock
cmp
mov
mov
rcrb
adc
sub
icebp
push
inc
or
loopne
jae
add
cmp
mov
jnp
mov
mov
ljmp
fcmovnbe
push
out
gs
or
adc
pop
imul
ficoms
mov
rorb
xchg
and
stc
data16
dec
aad
shrl
inc
fstp
xchg
movhps
data16
push
cld
clc
mov
pop
xchg
mov
jge
sub
mov
xchg
mov
jl
sub
xchg
lods
mov
mov
push
pop
jae
push
and
push
xorb
into
scas
push
scas
ds
jmp
jge
in
xchg
add
sub
int3
adc
or
cmp
or
inc
pop
push
addl
loope
pop
int3
mov
fcoml
test
icebp
lods
xchg
lods
cmp
sbb
popf
bound
add
lock
inc
xchg
mulb
inc
xor
aad
add
das
jbe
popa
sub
add
mov
dec
lea
jecxz
inc
xlat
cmp
add
mov
jge
jl
mov
jne
add
out
ds
xchg
inc
pop
and
add
popa
sti
fldcw
and
gs
push
and
sub
mov
jg
ret
inc
repnz
xor
mov
lret
mov
je
sub
xor
inc
lahf
fs
mov
dec
clc
leave
mov
leave
insl
jge
jae
lds
std
daa
cmp
mov
mov
jmp
ljmp
dec
push
insl
fldt
inc
test
nop
dec
into
in
in
lcall
or
xor
mov
movsl
cmp
inc
mov
popf
xor
dec
mov
rcrb
loop
fwait
push
je
loopne
inc
mov
adc
daa
data16
dec
negl
mov
xchg
jg
add
dec
adc
mov
daa
test
popf
les
sbb
and
xor
loop
std
cld
mov
in
jo
jbe
jmp
xchg
shrb
ret
xorb
xor
push
insl
inc
xor
adc
loope,pt
sub
adc
push
imul
inc
popf
sbb
cmp
push
adc
insl
daa
dec
lods
cmp
test
inc
int3
cli
ret
das
mov
xchg
lods
outsl
leave
xlat
movsl
out
xchg
mov
das
idivl
daa
mov
pusha
mov
out
xor
add
stos
dec
jnp
ds
ret
ds
mov
xchg
cli
push
int
pop
mov
mov
mov
xchg
ret
mov
mov
cmc
jno
xor
into
dec
pop
push
inc
aad
mov
popa
call
sbb
push
mov
inc
mov
cs
add
call
cmpb
fists
aam
adcl
add
shrl
testl
outsl
push
mov
mov
mov
subb
popf
and
ret
push
sahf
inc
das
cld
jp
fs
mul
pop
cmpl
mov
pop
lods
int
into
mov
movsb
jnp
jecxz
pop
push
inc
pop
fsub
cmpb
sub
je
cmp
scas
cmp
or
add
cwtl
lock
mov
inc
cmp
in
and
in
outsb
pop
inc
stos
sbb
adc
push
aad
int
xorb
filds
mov
scas
and
mov
xor
addr16
add
je
fwait
adc
arpl
cld
jg
xlat
push
and
pop
push
leave
mov
push
or
push
jmp
push
xor
cld
or
in
movsb
add
push
add
inc
sub
pop
or
les
aaa
dec
imul
mov
push
out
add
push
inc
mov
jb
scas
pushf
xor
jmp
testb
push
dec
add
dec
sahf
call
test
rcrl
xor
fistl
mov
adc
cmp
fdivrs
in
cli
jp
mov
into
inc
add
push
or
cmpsb
movsb
mov
adc
lret
jg
insl
nop
jge
lea
out
cmpsb
movsl
dec
sbb
pop
xchg
into
imul
add
mov
std
jle
adc
jne
popa
mov
dec
and
cs
lock
pop
push
outsl
xchg
mov
jae
out
adcb
mov
scas
outsb
js
mov
aas
movsl
xor
and
insl
sub
push
es
aaa
xor
mov
jge
cmc
xchg
add
and
cmp
sub
out
add
call
xchg
popa
xlat
outsl
jnp
xor
mov
sbb
ds
dec
and
outsb
push
ljmp
icebp
icebp
pop
icebp
out
lods
iret
les
outsl
ljmp
lock
ljmp
xor
js
mov
dec
adc
jo
jg
popa
mov
enter
loop
lret
mov
out
xchg
pop
imul
jl
scas
xor
stos
mov
push
in
sbb
ss
outsl
rolb
jge
inc
rcl
jo
xchg
or
loopne
or
mov
pushf
sub
arpl
adc
pop
in
das
mov
aad
enter
nop
mov
rcrb
push
xor
push
rclb
inc
stos
repnz
in
mov
cltd
sbb
addr16
add
imul
stos
inc
lock
test
jae
pop
push
test
mov
pop
fstpt
scas
and
test
xchg
sub
xchg
in
and
pop
mov
mov
mov
xorl
pop
sbb
xor
push
inc
xlat
xchg
or
or
inc
fcmovb
sub
cmp
call
inc
mov
adcb
loope
stc
cmp
jbe
xlat
fsts
test
mov
fiaddl
test
xchg
inc
lcall
jb
dec
lret
shlb
imul
int3
dec
mov
mov
sub
and
push
inc
jge
xor
or
mov
pop
mov
rcl
cmp
cld
or
dec
dec
ret
dec
fwait
sbb
mov
mov
pop
popa
push
std
shrl
pusha
xchg
mov
jp
ds
sbb
cmp
jo
push
xor
cmp
adc
xchg
in
push
xchg
fdivrl
shll
or
das
icebp
mov
fisubl
sbb
pop
push
pop
fsts
dec
mov
inc
popa
popf
mov
outsl
cltd
sbb
jp
xchg
addl
push
jge
xchg
ja
jp
adc
leave
lret
test
stos
fsubl
mov
xchg
sbb
shlb
xchg
fsubs
imul
stc
sub
sub
rclb
sbb
mov
aas
sbb
ljmp
jo
lcall
adc
mov
push
cmc
push
outsl
inc
xchg
scas
pusha
aas
aam
and
mov
push
bound
fldl
jge
sub
lret
jno
fsubs
movb
mov
jg
lret
mov
mov
adc
sub
insb
out
xchg
mov
js
adc
adcb
jb
inc
insl
ss
outsl
xchg
cmp
mov
push
repz
ficoml
jne
stos
mov
mov
mov
fdivs
xchg
int
aad
mov
rol
xor
xor
mov
es
jmp
add
jno
xchg
icebp
and
cmp
sbb
inc
leave
sbb
jne
es
rorl
imul
adc
add
mov
adc
cmp
adc
pop
pop
fld
in
jge
int
sbb
lcall
outsb
mov
push
push
imul
pop
or
and
push
aaa
pop
gs
cs
adc
and
mov
fidivl
in
jno
sub
xchg
dec
pop
addr16
mov
push
decb
out
movsb
sub
or
pop
nop
sahf
nop
in
ret
in
jns
je
fidivs
out
and
xchg
test
sbb
outsl
leave
adc
cmpsl
jg
mov
jge
in
cltd
ficoms
nopl
test
lahf
sub
aas
and
fwait
and
nop
xchg
out
sub
enter
fdivrs
and
addr16
and
dec
jnp
test
xchg
outsl
loop
inc
dec
jae
addr16
cmp
sub
sub
jno
notl
cmp
mov
cli
mov
inc
xchg
or
or
hlt
test
xor
fisttpll
insb
test
orb
lret
flds
cwtl
push
ja
imul
addl
pop
adc
push
scas
lret
dec
in
sbb
pop
mov
ja
or
sub
xor
subb
pop
int3
push
push
mov
cltd
mov
ret
xchg
mov
mov
sbbb
test
and
jg
or
rcrl
cmc
xor
or
push
ret
lods
lods
test
ja
inc
xchg
pop
data16
inc
jae
testb
sarb
xchg
or
inc
dec
imul
xor
roll
popf
pop
mov
movsb
ret
andl
jl
sahf
jno
outsb
ficompl
mov
sub
jbe
pop
add
and
das
in
repnz
cmp
adc
xlat
jge
xor
mov
push
xor
andl
jbe
mov
dec
lds
and
sbb
repnz
xchg
push
mov
mov
sbb
mov
mov
repz
mov
xor
loopne
push
rorb
testl
lcall
cmp
mov
mov
sub
jg
popa
das
push
dec
ror
inc
nop
icebp
roll
mov
shll
sbb
sahf
stc
sbb
cmp
push
enter
xor
aas
adc
ljmp
mov
lods
inc
lahf
fcoms
pop
pop
mov
popf
repnz
lret
add
addr16
rolb
jbe
imul
or
ljmp
popf
push
fstpl
jge
push
ljmp
dec
wrmsr
leave
decb
mov
cltd
outsl
pop
pop
cmp
mov
pusha
xchg
imul
movsl
shl
mov
mov
hlt
ljmp
push
dec
shll
xchg
inc
addr16
call
cmp
xchg
mov
leave
clc
cmp
inc
pop
adc
stos
aad
jge
call
jo
sub
fucomip
mov
std
aaa
sbb
out
enter
push
jae
leave
pop
test
aad
popa
and
test
xor
stc
pushf
or
fcmovu
and
lea
push
std
adc
mov
mov
mov
or
adc
shlb
adc
mov
adc
cmc
lret
ficomps
mov
xor
test
and
js
mov
sbb
test
sbb
int
inc
mov
adc
mov
dec
addb
cmpsb
xchg
pop
fnsave
jecxz
rcr
mov
jmp
cmpsl
xchg
inc
shl
sub
and
inc
xchg
jnp
sbb
mov
pop
lret
and
mov
imul
rorb
les
cmpsl
repz
cmp
mov
jno
cmp
push
mov
in
push
sbb
and
mov
aad
add
sub
in
adc
popa
ja
jle
pop
es
outsb
lahf
pop
fcmovb
insb
mov
sub
and
dec
sarl
outsb
mov
cltd
pop
adc
pushf
js
push
dec
fiaddl
and
mov
xor
add
pushf
cmp
jb
sbb
leave
adc
stos
repz
jp
adc
lret
out
fisubs
and
sti
cmc
pop
jge
loop
mov
addr16
mov
jo
das
fsub
int3
bound
in
mov
shrb
jo
scas
data16
leave
call
pop
push
nop
dec
lret
fcomps
add
inc
push
scas
and
ret
ss
test
in
popa
rolb
lea
push
mov
add
repz
xchg
cmp
push
pop
xchg
scas
sti
loop
scas
or
sub
dec
mov
jge
jg
sbb
leave
icebp
in
sbb
repz
push
hlt
mov
or
mov
icebp
fsts
cmp
cmpsb
icebp
aam
adc
cmc
daa
jb
and
sub
mov
mov
leave
pop
xor
ret
arpl
cmp
push
ret
pop
xlat
popf
scas
imul
jns
gs
or
or
out
jge
mov
mov
dec
push
lret
cmp
pop
sti
ds
sub
add
dec
mov
fmull
fwait
sbb
ljmp
push
lret
enter
and
xchg
adc
add
es
pushl
int
pop
ds
ljmp
jae
dec
xor
stc
jmp
rcl
push
inc
lods
inc
lods
jo
lods
lea
mov
mov
lds
mov
fistpll
out
push
into
movsl
adc
or
or
shrl
test
mov
ds
loopne
aaa
sbb
push
popf
bnd
outsb
fistpl
cmp
mov
mov
stc
mov
mov
cltd
push
xchg
xor
ret
and
data16
jno
xchg
fs
sbb
stc
icebp
jge
sbb
outsb
xchg
mov
test
ja
sahf
jnp
dec
aam
lods
push
imul
mov
dec
dec
out
or
and
mov
lds
add
ljmp
cltd
adc
and
hlt
in
jecxz
int3
sub
and
nop
and
mov
in
adc
fwait
sbb
test
scas
and
cwtl
mov
cmp
fnstcw
jl
add
jecxz
adc
in
inc
inc
loope
dec
sarb
pop
jne
mov
fdivrs
loope
iret
call
fs
test
sub
aaa
and
sub
jnp
mov
scas
push
mov
fistl
cmpl
jo
cmpsb
cmc
sbb
rol
mov
mov
cwtl
mov
rorl
jecxz
pop
dec
paddb
ja
and
adc
icebp
xchg
ss
push
insl
fnstsw
shlb
jge
popa
stos
outsb
mov
push
call
mov
movsb
inc
fadd
cli
push
adc
addr16
add
push
in
in
adc
sarl
ss
xor
xlat
stos
mov
sbb
cmpl
jp
les
mov
lods
mov
gs
movsl
push
jmp
ror
xchg
mov
xor
cmpsl
in
mov
ss
cmp
gs
cltd
inc
mov
int3
enter
xchg
cmp
repz
inc
sete
xchg
sbb
and
jbe
aaa
fmull
cmc
pop
cmp
inc
stos
cld
shll
rorl
xchg
sahf
mov
test
fdivs
cmp
push
test
push
hlt
and
es
lock
inc
or
es
push
mov
sbb
xchg
jge
sbb
and
je
push
jno
stc
add
jl
cmpsl
inc
or
notb
or
push
sbb
adc
es
pop
adcl
add
add
lock
or
inc
jns
add
mov
dec
cmp
push
sti
mov
dec
mov
aam
mov
ja
sub
inc
xchg
sub
xchg
sahf
mov
insl
add
insb
xor
outsb
dec
mov
orb
add
dec
fs
sbb
push
pop
inc
lds
mov
pop
pop
mov
jle
mov
inc
test
jg
dec
cmc
imul
mov
js
in
adc
or
push
sub
or
pushf
andb
and
data16
cmp
pop
inc
fistps
mov
call
in
cwtl
lahf
mull
movsl
push
jmp
jo
jmp
lock
test
cmpsb
fisubs
mov
mov
daa
rolb
fdivl
xor
sbb
std
and
das
xchg
arpl
fsubs
jne
mov
xchg
cmp
out
push
daa
push
popf
repz
cmp
aam
xorl
xchg
push
sub
shlb
mov
js
xchg
pushl
push
filds
rcrb
loopne
push
rol
mov
nop
enter
paddsw
into
lret
dec
pushf
inc
cmp
aas
push
xchg
mov
data16
dec
decl
sbb
stos
popf
mov
out
add
or
cmp
into
mov
rcrl
ss
jle
stc
fisttps
push
mov
sbb
xchg
mov
pop
dec
jge
mov
std
aad
xchg
mov
ds
lcall
mov
xchg
mov
addr16
xchg
scas
xchg
inc
bound
jne
sti
lahf
popf
mov
adc
push
mov
inc
arpl
xchg
into
jmp
and
scas
mov
or
xchg
mov
fisubl
test
jae
cmpsb
loope
leave
push
popa
rorl
adc
sbb
and
jae
ljmp
xchg
adc
jmp
add
ja
cmp
test
dec
call
mov
cltd
push
mov
xlat
cmp
jle
int3
test
call
lds
add
dec
leave
inc
int3
and
jns
mov
lods
in
in
add
repnz
push
xor
dec
inc
pop
shll
jae
fdiv
pop
pop
push
inc
jge
nop
ficoml
and
sti
mov
cld
sbb
inc
rorb
adc
inc
in
jbe
aaa
lds
push
sbb
fidivs
out
xchg
fbld
dec
in
fcomps
popf
xchg
sysexit
mov
pop
gs
lret
cmp
in
xchg
jmp
sidtl
dec
in
pop
ljmp
push
inc
dec
mov
xor
rcrb
cmp
hlt
psrlw
std
xchg
sahf
dec
mov
mov
pop
es
sbbb
dec
lea
sbb
shlb
xor
stc
pop
es
lock
vmovdqa
mov
adc
or
in
das
in
loopne
stos
stos
movsl
outsb
xchg
pop
cmp
out
imul
push
push
xchg
mov
sbb
andb
add
scas
loope
xchg
mov
pop
leave
test
xlat
mov
xor
or
fcoms
bnd
loope
and
lods
imul
mov
imul
ret
int
stos
std
add
and
enter
imul
adc
mov
addl
lret
popa
sbb
inc
jo
ret
jo
cli
mov
jge
das
adc
loope
notb
arpl
add
rcrl
mov
push
jno
jl
sub
mov
add
iret
stos
push
or
cmp
movb
cmpsb
mov
mov
fnstsw
movsb
dec
imul
jno
or
and
lret
roll
jle
loope
jbe
xchg
mov
stos
xchg
ljmp
js
lret
out
sbbb
fwait
mov
mov
scas
inc
xchg
jns
xchg
sub
jp
mov
pop
jmp
mov
jp
rorl
jo
and
pop
mov
sub
mov
sbb
mov
add
sub
hlt
cltd
sub
fs
mov
adc
sbb
aad
lds
outsb
shlb
xchg
in
lds
loopne
pop
xchg
push
inc
mov
cmc
lods
adc
and
ljmp
data16
pop
jns
adc
xor
sti
xchg
jno
insl
lret
jmp
dec
int
imul
shlb
xor
push
rcl
xchg
les
lods
fcompl
add
sub
lcall
mov
xor
pushf
loop
addr16
mov
jle
test
push
out
pop
cld
scas
iret
popa
adc
fs
mov
pop
mov
jle
sub
xor
mov
cmp
repnz
loopne
and
and
dec
sub
jns
mov
cmp
in
loope
lods
xor
outsl
jne
in
cmp
add
dec
ficompl
sbb
mov
lcall
lret
ja
jae
mov
sti
pop
pop
add
gs
ds
mov
xchg
push
scas
out
adc
inc
or
arpl
push
pop
lcall
sbb
into
sub
ret
add
and
aaa
les
or
sti
inc
mov
daa
loope
inc
imul
rorb
mov
xor
in
hlt
xchg
lock
out
into
push
or
lcall
and
mov
jecxz
cli
jecxz
xchg
mov
push
cmc
loop
xor
fld1
xchg
push
inc
adc
inc
stos
shll
mov
pop
jae
pop
xchg
mov
arpl
daa
jo
inc
mov
jbe
aaa
testb
mov
adc
jmp
xchg
test
or
aaa
mov
mov
jp
pop
retw
iret
lds
push
cwtl
cmp
dec
xchg
cmp
insb
xor
sahf
xor
lea
xor
das
mov
cs
pop
mov
pop
xor
mov
js
jno
xchg
in
movsb
cmp
mov
sub
mov
mov
repz
fisttpl
jecxz
add
loope
aas
imul
test
lds
push
mov
ljmp
stos
cld
jb
jp
mov
sbb
fmull
sbb
push
aam
sbbl
movsb
lods
pop
dec
int
mov
mov
aaa
mov
in
stos
rol
sub
insl
sbb
outsb
cmp
xor
mov
mov
lcall
or
fwait
xor
jmp
aad
sahf
pop
les
fsub
pop
stos
lahf
cmp
cli
sbbb
jl
lret
adc
jbe
fnstenv
icebp
shlb
xchg
das
stc
fcoml
aad
notl
mov
mov
inc
mov
addr16
jo
lods
imul
cs
push
js
ja
pusha
lock
fimuls
jle
dec
negl
and
data16
decl
push
arpl
movsl
ret
cmp
mov
sbb
cmc
out
add
push
xchg
dec
mov
mov
fcompl
mov
outsb
mov
mov
jb
test
jo
sbb
addr16
stc
encls
imul
mov
pop
stc
pop
roll
cli
int
out
cmp
inc
push
xchg
jnp
mov
scas
cmovg
push
mov
mov
stos
lea
jae
les
ret
cltd
out
xchg
aaa
rcrb
mov
mov
test
add
aam
div
insb
scas
popf
mov
and
mov
pop
mov
mov
mov
sub
enter
xchg
sub
sbb
jmp
jmp
add
jp
inc
pop
out
xor
fidivrl
or
cltd
mov
lea
mov
jno
sub
inc
mov
rcr
fbstp
pop
mov
mov
and
cmc
pop
les
gs
mov
xor
in
out
pop
sbb
mov
testl
pop
outsb
or
jns
xchg
xor
sub
shl
sub
adc
popa
xchg
sub
stos
inc
add
xor
pop
cld
jmp
pop
mov
sub
sub
pop
mov
loop
mov
adc
rcrl
addl
mov
cmp
mov
arpl
fwait
sti
sbb
push
mov
lcall
inc
xor
cmp
icebp
push
test
adc
ljmp
es
cmp
imul
jg
pop
jo,pn
out
fisubl
out
or
movsl
and
pop
jmp
lods
or
lahf
lods
sar
inc
push
push
pop
cmp
pop
mov
add
mov
ja
notb
xor
popf
and
jl
out
and
inc
aad
sti
fcom
add
ficoml
lret
xchg
nop
push
and
clc
insl
xchg
lods
and
sub
inc
jae
inc
mov
call
loop
cwtl
clc
inc
lahf
add
shlb
add
mov
pusha
add
mov
gs
jnp
das
repnz
loopne
add
cmp
into
scas
leave
fcmovnu
stos
dec
cmpsb
cmp
push
jle
lods
dec
aad
leave
mov
pusha
mov
test
and
loopne
add
das
imul
sub
xchg
inc
pop
dec
and
inc
js
enter
scas
das
jb
or
dec
lret
ja
idivl
mov
ret
test
xchg
push
mov
popa
insl
pop
mov
add
pop
add
cmp
dec
lret
mov
mov
ficomps
adc
cwtl
leave
pop
out
lea
jmp
pop
pop
loope
add
jecxz
mov
or
notb
cmp
cltd
mov
pop
outsl
cmp
out
mov
xchg
es
xchg
xchg
mov
lret
mov
rcl
ljmp
test
into
loop
stos
xchg
push
sub
sub
push
dec
inc
sbb
fwait
mov
mov
inc
dec
adc
imul
lods
lds
pusha
hlt
rcr
add
or
or
and
nop
sbb
lds
cld
xchg
sub
dec
mov
outsl
lahf
sbb
adc
jmp
jno
inc
loopne
mov
mov
adc
test
xlat
bound
out
fcomip
jle
lret
out
adc
inc
cmc
shl
adc
mov
sbb
aaa
sbb
or
inc
or
xchg
adc
mov
sti
bound
mov
shrb
sub
loope
and
cltd
andl
adc
stos
lds
adcb
addr16
mov
or
xchg
mov
std
pushf
mov
mov
mov
xor
mov
or
ja
fiaddl
xor
data16
push
jle
add
fldcw
and
test
or
lret
mov
or
icebp
loopne
sbb
icebp
into
out
jmp
cli
mov
rcl
xor
jmp
popf
add
or
adc
cmp
cmp
in
ljmp
dec
inc
cmp
sub
or
sub
push
test
jns
aam
in
cmp
aam
jmp
ljmp
int3
sbb
cmc
xchg
rcll
out
andb
aad
xor
les
sub
xchg
mov
insb
adc
dec
cmpsb
cmp
ret
cmp
mov
jle
push
les
cwtl
addl
cmp
popf
jb
cmp
mov
mov
icebp
push
pop
repz
pop
imulb
mov
popf
cmp
xchg
seta
and
pop
out
movsl
cltd
fnstcw
sub
mov
mov
cmp
and
push
cltd
mov
pop
jmp
cmpsl
daa
inc
popf
les
in
ficoms
lock
mov
mov
mov
scas
jge
and
sbb
arpl
or
fadds
push
jle
sub
mov
sbb
mov
ljmp
push
mov
sarl
fwait
mov
test
test
andl
adc
ljmp
test
jge
jg
jp
pop
inc
insb
pop
aam
jae
mov
push
pop
ja
jns
mov
jp
js
adc
push
in
cmc
pushf
lret
xchg
cmp
dec
addr16
pop
mov
cmp
loop
rcr
in
cli
mov
push
addr16
sbbb
inc
lahf
cmp
inc
cmp
ret
or
cs
jle
addr16
pop
and
mov
inc
dec
mov
aam
sub
xchg
lds
lcall
mov
dec
daa
cmpsl
shlb
mov
cmp
sti
sub
push
push
mov
fildll
cmc
jbe
sub
sub
daa
mov
xor
and
push
daa
xchg
stos
outsb
push
cmp
shlb
cmp
dec
xor
insb
cmpsl
lock
or
testl
mov
or
out
inc
testb
in
fidivrl
lock
mov
push
jmp
push
cld
add
add
cmc
and
cmp
fistl
mov
mov
mov
sub
cmp
test
cld
xlat
test
mov
inc
cmpl
in
jae
fwait
aaa
sbb
in
or
xor
jbe
cmp
out
jns
xchg
dec
or
jns
loope
repz
ds
sub
mov
fs
fldl
and
ss
push
jno
popf
out
pop
push
mov
and
inc
inc
loopne
lret
iret
jmp
in
shll
sahf
add
xchg
mov
mov
jne
cmp
push
lret
aad
test
or
scas
int3
jno
jo
andl
adc
lcall
mull
mov
jg
sbb
cmp
jmp
cmpsl
mov
xchg
rorl
inc
sub
push
sub
sbb
lds
cmp
shll
fldlg2
les
stc
xorb
push
rcl
imul
movsb
sub
xchg
scas
inc
subl
mov
sbb
lods
dec
and
jmp
sbb
jne
insb
xor
push
repz
push
push
add
int
movsl
insl
mov
cmp
test
ror
pop
aad
jne
adc
js
lahf
jmp
insb
sbb
and
mov
mov
scas
sub
in
jns
push
jge
in
fsubrs
loopne
clc
push
cmpsl
adcl
ljmp
mov
sarl
dec
jo
inc
dec
push
pop
mov
xor
add
and
data16
pop
mov
das
sbb
and
movsl
cmpl
cltd
les
jb
push
and
mov
or
sahf
test
push
sbb
fistpll
out
cmpb
ds
xorl
jae
nop
ficoms
push
mov
push
add
out
popa
sbb
push
xchg
pop
test
test
mov
sarl
pop
or
hlt
leave
rcrl
icebp
xchg
iret
add
movl
popa
das
jmp
aam
inc
nop
adc
call
inc
xchg
adc
mov
jns
aaa
xchg
out
mov
xor
xor
fwait
lahf
dec
jecxz
ss
stos
mov
and
nop
xor
ret
cmp
push
leave
cs
mov
test
mov
jmp
push
neg
test
shrl
fisubl
mov
push
cwtl
xchg
stos
cmp
pop
icebp
mul
scas
push
daa
lock
adc
push
inc
mov
hlt
push
cmc
fwait
pop
inc
js
push
faddl
mov
cmp
inc
push
xorb
jnp
push
les
push
mov
insl
cmp
call
scas
sahf
dec
aas
xchg
iret
nop
push
sar
out
dec
lds
out
ret
mov
adc
icebp
and
xchg
xor
inc
imulb
push
inc
pop
outsb
or
mov
pop
push
inc
in
pushf
jg
invd
sub
sahf
test
loope
adc
inc
in
das
add
sub
arpl
cmp
jae
test
insl
sub
xor
push
lcall
pop
dec
inc
icebp
push
or
push
fiadds
cmp
mov
xor
cmp
and
jnp
faddl
mov
out
mov
jl
xchg
push
xor
ja
imul
cld
sbb
jno
add
xorb
shrl
shlb
push
ds
inc
lret
xor
gs
xchg
call
std
stos
push
dec
mov
inc
nop
stos
imul
rclb
sub
repnz
sbb
sub
mov
sub
in
inc
fildll
sbb
mov
dec
imul
sbb
rol
ds
mov
lea
pop
xchg
movsl
test
iret
cmpsl
push
scas
mov
pop
icebp
or
pop
cmp
shrl
mov
sti
inc
mov
pushf
in
mov
xor
fs
scas
add
loop
ss
arpl
and
inc
in
fs
mov
add
pop
es
xchg
mov
cmpsl
mov
sti
adc
sub
arpl
dec
loope
dec
imul
je
in
pop
push
mov
outsb
mov
fcmovbe
cwtl
cmp
es
pop
ficompl
inc
jae
jmp
fwait
xchg
loope
jmp
clc
adc
push
mov
scas
in
xchg
fmulp
call
dec
cmpsl
sbb
aas
cmc
mov
jns
iret
fisubs
ja
inc
sahf
test
pop
mov
cwtl
pop
sbb
insb
xor
sbbb
and
push
cltd
push
scas
xor
subl
and
pop
rol
cmp
out
mov
fs
loopne
mov
adc
and
pop
push
push
cmc
pop
aaa
fsubs
scas
cmp
cmp
lcall
movsl
in
adc
movsl
aaa
pusha
dec
push
out
lcall
in
lret
jbe
jne
jg
mov
test
xchg
fnstcw
or
adc
jecxz
dec
mov
or
jno
mov
or
xchg
out
lock
cwtl
jns
cmp
pushw
hlt
mov
xor
mov
int
sub
aaa
imul
bnd
lahf
mov
mov
xchg
push
xchg
push
daa
icebp
add
sahf
jno
add
in
cltd
sub
in
mov
adc
daa
fwait
roll
test
jo
mov
dec
std
andb
sub
pop
loope
xchg
and
inc
mov
inc
ffree
cmc
mov
test
mov
jae
pop
mov
lcall
in
mov
outsb
dec
leave
add
add
dec
cmp
jge
lret
and
out
cmp
in
xchg
push
ds
mov
dec
mov
mov
inc
push
sbb
dec
add
sub
or
and
lock
and
hlt
inc
mov
loopne
add
fcmove
jnp
pop
mov
enter
test
add
inc
push
insb
dec
outsl
in
dec
les
sti
lret
or
pandn
lahf
xchg
push
clc
push
mov
add
int
xor
movsl
es
stos
push
fldt
aam
aas
ds
push
dec
mov
cltd
faddl
jo
xor
fnsave
sahf
or
insl
or
fcoms
pop
icebp
xchg
mov
rcrl
jnp
inc
inc
mov
jge
dec
inc
sbb
daa
out
or
enter
das
sbb
push
mov
adc
mov
lods
nop
push
fucomi
movsb
cs
inc
mov
out
mov
jnp
outsl
and
and
imul
inc
pop
xchg
repz
dec
in
jge
jns
ss
mov
add
or
stos
int
fnstcw
inc
cmp
lods
lahf
cmp
inc
adcb
std
or
lods
cmpsb
out
arpl
mov
mov
mov
jp
fdivrs
fnsave
int
in
inc
hlt
inc
stos
aas
rolb
xor
push
xchg
and
push
jge
repz
xchg
mov
sti
inc
inc
out
into
mov
nop
mov
mov
aam
mov
push
dec
mov
in
stos
rcr
xor
popa
sbb
mov
dec
pop
mov
cmp
jg
aam
scas
outsl
inc
mov
jp
mov
ds
fisubl
adc
xlat
jmp
imulb
or
mov
rol
pop
mov
mov
insl
arpl
inc
xor
stos
xor
sar
sub
xchg
jg
mov
mov
test
mov
adc
cmpsl
jg
add
xchg
test
cmpsl
enter
jl
jl
pop
lcall
push
mov
sub
push
fisttps
pop
das
shl
sti
add
pop
mov
inc
jg
adc
fidivl
xor
repz
mov
sub
dec
lds
into
arpl
add
es
xchg
cmpsl
add
dec
mull
cld
mov
pop
mov
mov
js
out
adc
test
iret
sub
in
sub
or
aad
imul
sbb
enter
xchg
mov
xchg
mov
scas
jl
pop
jae
jg
ret
push
and
or
out
std
jb
mov
or
cmp
mov
ret
loope
jne
mov
mov
gs
add
lcall
and
xchg
fcoms
loop
scas
rorb
push
mov
xchg
ja
ret
movsb
rclb
push
test
out
fmuls
inc
sub
jne
xor
fstps
shll
dec
cmp
aaa
mov
rclb
pop
jno
cmp
adc
mov
pop
movsb
fmuls
xchg
sti
dec
cld
in
scas
int
xchg
mov
pop
dec
or
mov
addr16
jo
ja
lret
stc
jl
addb
std
shrb
insb
push
out
daa
jb
mov
push
jge
mov
mov
hlt
cmp
clc
mov
and
std
fcomps
inc
sbb
es
lods
lret
adc
mov
push
int3
mov
icebp
mov
and
test
inc
rolb
test
sbb
test
pusha
pop
ficoml
es
into
dec
pushf
sub
pop
stos
data16
cmp
aas
xchg
lahf
int3
cld
leave
ja
pusha
jl
adc
pusha
insl
jbe
mov
aad
and
loope
outsl
mov
stos
sbb
push
jnp
jo
cmp
mov
xchg
sub
daa
adc
cmp
hlt
jecxz
xchg
repnz
sub
inc
push
lods
aam
leave
imul
pop
test
mov
jecxz
ljmp
cmp
pop
icebp
aaa
js
jg
cmc
out
movsb
nop
lret
or
cwtl
push
gs
test
leave
fcomi
mov
popf
inc
push
enter
push
out
fiadds
jbe
jbe
je
mov
push
inc
dec
mov
aam
nop
xchg
push
jnp
pop
cmp
jns
aaa
rdpmc
mov
enter
rolb
daa
ret
mov
sbb
je
sarl
movhps
inc
xor
fidivs
int
lahf
add
rclb
push
adc
loopne
nop
pop
in
pop
cli
xchg
pop
in
push
push
inc
fs
push
xor
xchg
dec
sbb
cli
lods
test
pop
data16
sbb
push
xorb
cwtl
adc
cmpsb
ret
cmp
xor
idiv
outsb
inc
xchg
fnclex
jnp
jns
jp
aas
call
dec
cmpb
dec
scas
push
mov
add
push
aad
lret
and
inc
xor
mov
loopne
mov
sub
adc
jne
cmp
xchg
mov
push
les
pop
inc
jle
and
ss
gs
pushf
ljmp
xlat
add
sbb
shlb
jnp
jecxz
mov
dec
adc
je
fs
cmp
icebp
pop
cmp
mov
push
push
dec
int3
rdtsc
ss
and
mov
mov
leave
jo
mov
rclb
das
jb
rcrb
lahf
and
xchg
cmp
xchg
push
loope
xchg
ljmp
xor
mov
lcall
iret
ja
lcall
cmp
cmp
sbb
add
inc
subb
test
mov
inc
lods
in
pusha
mov
aam
adc
cmp
fistps
icebp
icebp
mov
and
jg
jo
adc
jl
adc
xor
push
push
pop
pop
add
sbb
shl
xchg
fs
imul
cmp
add
push
inc
and
cmp
inc
push
loopne
flds
jecxz
mov
divb
pop
fldt
sub
jb
in
sbb
repz
ret
das
cmp
mov
add
cmp
inc
xchg
jmp
push
aam
xchg
pop
lods
cmp
or
xchg
aaa
or
jne
cwtl
adc
push
adc
hlt
cwtl
aam
sbb
dec
xchg
mov
or
or
xlat
lahf
and
xchg
mov
or
xor
adc
rcrb
pop
inc
and
mov
xchg
adc
sbb
push
push
or
ja
cwtl
xchg
add
das
sbb
or
lds
les
and
test
lods
xchg
in
xchg
push
xchg
mulb
ljmp
jecxz
into
push
out
test
rcrb
cmp
daa
adcl
aas
imul
mov
mov
cli
in
das
cltd
fbstp
pop
jb
and
push
loopne
push
imul
xor
push
xchg
sub
lods
mov
push
xadd
xor
mov
and
push
inc
in
pusha
out
in
loop
jp
jecxz
arpl
or
cmp
fldenv
rcrb
in
repz
adc
add
mov
and
or
add
in
mov
jbe
add
and
insb
and
push
icebp
sbb
cmp
daa
dec
jge
and
stos
inc
in
nop
push
jnp
cmp
xchg
stc
and
add
inc
das
xchg
lcall
pop
fisubrs
mov
xchg
xorl
jg
mov
push
jno
mov
cmp
jp
out
mov
ss
cmc
dec
int
adc
dec
rcrb
xor
xchg
ficomps
in
outsb
sbbb
repnz
ljmp
sbb
xor
push
subb
aas
rclb
loopne
pop
dec
rcll
push
test
rep
jge
mov
and
cltd
xlat
movb
jg
rcrl
mov
inc
scas
scas
in
xchg
push
fdivr
inc
ficoms
gs
xor
les
fsubs
xorb
jns
imul
ss
rsm
lods
jns
das
dec
push
mov
cld
andl
test
cmp
xor
sbbl
lods
stc
cli
cmpsb
mov
jo
pop
loop
cmp
fiadds
mov
loopne
loop
mov
push
mov
inc
outsb
lds
rclb
lock
or
insb
stos
or
test
or
cmp
xchg
flds
enter
cmc
and
mov
jno
adc
mov
pusha
xor
das
and
rorb
icebp
jmp
je
stos
cli
inc
imul
mov
leave
jl
lds
shrl
fs
inc
mov
pushf
and
jno
xor
ja
cli
xchg
inc
or
sbbb
call
xchg
jmp
jno
xor
fdivrs
mov
pop
mov
or
daa
cmp
inc
negb
cmp
ja
out
xrelease
lock
enter
add
and
mov
push
mov
mov
insl
jbe
loopne
jnp
test
fidivl
push
ss
jecxz
sbb
mov
jns
pop
mov
xchg
push
pop
std
cmpsl
push
hlt
mov
or
scas
jno
ss
repnz
xor
jbe
stos
mov
out
xchg
xor
sti
pop
mov
pop
lea
enter
sub
les
in
orl
xchg
inc
and
mov
fwait
push
lahf
repz
dec
fdivrs
loop
fs
mov
data16
test
fwait
push
out
pop
mov
cmc
subb
mov
dec
insb
ret
adc
addb
fisubs
and
mov
sbbl
cs
gs
rorb
sarb
mov
mov
xchg
je
mov
mov
cmp
inc
mov
add
inc
lods
mov
mov
testl
inc
xor
lods
adc
jmp
movl
rcrl
aam
inc
mov
mov
aad
adc
push
insl
dec
and
fsub
pop
lods
push
mov
data16
adc
outsb
lahf
mov
cld
jnp
ljmp
movsb
pop
outsl
testl
cmp
adc
and
inc
pop
hlt
sub
jbe
out
fsubs
das
mov
aaa
rorl
mov
out
mov
lds
clc
cld
lds
pop
or
sbb
data16
push
cmp
stos
lods
fdivl
add
loop
mov
mov
push
mov
flds
loope
enter
scas
sub
push
xchg
lds
sub
fadds
popa
jae
cmp
fidivs
scas
add
lahf
xchg
call
fs
adc
aam
imul
and
push
movsl
push
xchg
xchg
cmpsb
movb
or
jnp
push
xchg
mov
lods
jmp
cmpb
jecxz
pop
cmp
dec
mov
or
mov
not
mov
sbb
mov
mov
jnp
xchg
cmp
test
ja
adc
popa
lcall
daa
fldl
sub
movsb
rclb
fistl
fwait
add
xor
ret
negb
dec
lock
mov
movsl
lock
sub
dec
jecxz
push
xor
or
sbb
sub
icebp
pushf
adc
dec
cli
inc
jg
xorb
sub
test
in
sbb
push
xchg
sub
mov
cs
sbb
repz
into
add
adc
sbb
fstl
and
push
dec
out
cmpsb
imul
adc
stc
stos
cmp
or
jg
aam
and
aad
cmp
sbb
mov
repnz
js
xchg
xchg
pop
lret
outsb
cmp
or
out
cltd
sub
push
fadd
xchg
pop
mov
pop
scas
cld
sub
ja
stc
xor
xchg
inc
inc
int
dec
pop
sti
test
mov
std
or
dec
scas
mov
sub
loope
repnz
scas
fwait
and
daa
push
ja
loop
push
xchg
cmp
adc
sub
test
xor
adc
sarl
enter
fdivl
cmp
rorl
add
sub
xor
mov
pop
dec
lret
mov
lcall
out
dec
cmp
lretw
inc
jmp
subb
jbe
lds
cmp
in
psubq
hlt
xchg
jl
push
movsl
cmc
xchg
test
sub
mov
xchg
sbb
or
sbb
inc
mov
dec
int3
mov
mov
mov
add
xchg
pop
shl
mov
cwtl
out
orb
jbe
nop
xlat
mov
xchg
cs
or
nop
das
mov
jb
sbb
push
push
pop
insl
loop
inc
pusha
sub
mov
xchg
adc
push
mov
push
out
and
shll
adc
sbb
hlt
sub
push
add
dec
js
xchg
sub
popf
dec
pop
adc
sbb
gs
xor
xor
push
mov
enter
and
mov
adc
jno
shrd
jbe
inc
sub
fcom
call
sub
and
icebp
loope
arpl
mov
cmp
inc
sub
test
add
sub
adc
mov
jae
movsl
or
sub
jmp
and
cmp
aas
mov
jmp
in
int
jb
inc
xchg
daa
mov
out
mov
incl
inc
icebp
cmp
dec
push
pop
pop
push
icebp
ljmp
and
mov
cwtl
jne
popa
out
mov
xlat
pop
xor
jle
mov
cmp
shlb
pop
imul
add
jnp
pop
xorl
adc
mov
pop
out
bound
sbb
inc
jno
or
sbb
ret
mov
xchg
rol
fstpt
lret
or
push
pop
cmp
mov
xor
lcall
cmc
pusha
out
std
xlat
cmc
xchg
inc
icebp
fists
xchg
js
jge
pop
sahf
cmp
xchg
jnp
pop
call
push
mov
imul
and
clc
ljmp
repnz
shlb
inc
rolb
lcall
cmp
jae
imul
adc
xchg
and
nop
call
fstps
mov
sub
insb
and
xchg
or
fstl
mov
sub
stos
push
push
or
add
into
mov
dec
sar
pop
dec
stos
sbb
cmpsl
jbe
clc
cltd
xor
adc
arpl
or
mov
pop
in
lock
cmc
cs
xor
scas
movsl
stos
jnp
jg
testl
inc
mov
bound
jle
xor
push
mov
mov
and
xchg
mov
adc
repz
scas
lcall
cld
mov
imul
mov
or
xchg
frstor
jno
movsl
subb
jae
pop
add
push
insl
pop
dec
xchg
je
mul
jne
les
add
scas
add
movsb
rorl
jo
sub
xchg
push
fdivrl
insb
lods
rorl
movsl
jle
xor
push
inc
loop
dec
inc
dec
pop
adc
push
adc
nop
jnp
cwtl
loope
push
fstps
xacquire
fbld
cltd
cltd
dec
sub
and
cmc
jmp
int
rol
ljmp
es
mov
push
mov
adc
scas
nop
stos
xchg
js
mov
shlb
addr16
imulb
fcoml
cmp
sub
adc
adc
fists
jns
jl
leave
inc
inc
rolb
jp
clc
fnstcw
cs
add
fidivl
sbb
mov
pop
pop
pop
out
jae
addr16
mov
adc
arpl
cmpsw
sub
js
jle
mov
cmp
pop
xor
and
out
xor
adc
push
repnz
sub
cmp
push
int
loop
lea
mov
sbb
adc
icebp
ja
xor
pop
in
mov
pop
push
icebp
pop
dec
lods
es
xchg
cmp
repnz
xchg
rclb
subl
push
rcrb
adc
loop
mov
mov
je
mov
sbb
daa
aad
pop
out
je
rorb
repnz
fidivl
cmp
cmp
aam
aad
test
in
pop
out
xor
mov
jo
sbb
out
shlb
imul
and
mov
jb
xchg
vcmpsd
mov
inc
pushw
xor
std
in
sub
jmp
sub
mov
test
xor
pop
cmp
lds
pop
mov
sbb
or
inc
push
xchg
test
divl
lret
shl
scas
out
pop
jae
subl
xchg
cmp
test
dec
inc
sbb
mov
mov
dec
loope
out
mov
inc
mov
out
push
mov
sbb
daa
or
stc
push
adc
ret
sub
pop
stos
mov
pop
xchg
stos
pusha
int3
sub
imul
iret
cmpb
movsb
jo
ret
and
pushf
add
dec
hlt
pusha
jb
stos
popl
ret
ljmp
jge
mov
std
push
adc
daa
mov
dec
stc
cmp
negl
loopne
cmp
sti
stos
push
insl
sbb
and
add
in
popf
test
and
lods
adc
popa
insl
jp
insb
movsb
sahf
or
mov
adc
dec
out
add
in
pop
and
xor
or
mov
pop
iret
aas
push
sbb
cmp
pop
outsl
pop
adc
xchg
add
push
cmp
and
subl
xchg
jns
es
jns
ret
lret
cli
cmp
mov
mov
movsb
enter
or
rcl
mov
xor
loopne
mov
das
negb
das
ds
out
pop
xchg
lods
arpl
mov
lea
push
into
add
adcb
fwait
adc
iret
pop
or
outsl
push
fsubs
pop
xchg
mov
fcoms
mov
movsl
in
lret
scas
jle
sbb
and
inc
punpcklbw
scas
ret
hlt
mov
imul
mov
maxps
int3
ja
sbb
pop
pop
int
int
and
or
add
aaa
dec
insl
sub
jge
pop
ljmp
fwait
xchg
cli
mov
enter
push
outsb
movsb
cmp
push
insb
pop
aam
xor
adc
ret
addr16
in
je
decl
mov
xor
dec
idivl
or
dec
inc
push
jae
push
xchg
pop
insb
push
pop
outsb
adc
dec
pop
stc
cwtl
sub
lods
mov
rorb
negl
xchg
push
adc
xor
movsb
loope,pn
or
imul
rorb
pusha
adc
pop
pop
sub
outsb
call
jae
pop
jge
and
ja
mov
mov
dec
jae
inc
dec
fidivs
mov
daa
jb
mov
pop
sbb
clc
in
or
fwait
inc
sub
push
dec
sub
pusha
jno
int
xchg
fisttpll
test
mov
jmp
mov
enter
mov
fs
cmp
repnz
outsb
movsb
jns
sub
mov
out
scas
sub
fs
cltd
mov
lods
dec
xchg
add
pop
icebp
call
jmp
daa
aam
and
fldenv
std
cld
push
xchg
aaa
mov
lret
jl
mov
mov
adc
xchg
repnz
leave
mov
and
jno
lret
xor
ror
add
mov
or
lret
loop
shll
fs
in
ja
push
xchg
fwait
in
shlb
pop
dec
lret
adc
cltd
ss
fadd
dec
lock
or
inc
jp
lahf
push
scas
add
adc
outsl
adc
xor
mov
out
mov
inc
gs
adc
sbb
adc
sub
out
sahf
sbb
shrb
jmp
ret
mov
inc
add
adc
fisubs
or
loop
or
jnp
daa
ret
test
sub
xchg
dec
or
iret
xor
mov
iret
insb
lds
or
test
data16
clc
mov
pop
stc
leave
or
into
and
mov
js
pop
mov
sub
push
test
addr16
jmp
jge
cmp
sbb
mov
mov
arpl
xchg
jb
je
stos
loop
mov
xchg
loopne
cltd
aaa
mov
call
aas
jl
stc
cmp
push
mov
stos
xor
arpl
inc
cmpsb
cmpsl
dec
jbe
aam
cmp
jnp
rorb
or
lret
repz
cmp
repnz
popf
mov
inc
xchg
aam
inc
imul
lea
dec
dec
cli
imul
repz
mov
call
mov
stos
adc
lods
fsub
pop
or
ret
push
mov
mov
aaa
dec
bound
cmp
les
jae,pt
push
pop
sahf
lcall
cmp
push
push
in
fildl
jg
mov
adc
pop
rcll
pushl
or
sti
mov
and
outsb
scas
mov
adc
push
dec
movsb
or
xchg
mov
in
sahf
rol
dec
jp
insl
cmp
cmp
faddl
add
mov
shrb
jmp
jl
lret
mov
mov
stc
xchg
add
fcoms
insb
movsl
ds
mov
repz
pop
xchg
in
leave
mov
rcrb
lret
data16
inc
sti
orl
push
pop
lcall
sbb
cmp
xchg
in
push
lods
shrl
or
mov
adcb
lcall
insb
jle
fadds
or
jmp
pop
or
adc
imul
mov
dec
data16
cmp
es
loop
int
push
test
fsubl
cmpl
mov
ja
mov
dec
out
into
inc
add
inc
mov
add
sub
and
jno
lea
pop
setbe
data16
ja
repz
ds
add
fsubr
lcall
sahf
shrb
sbb
cmpsb
adc
lcall
add
or
sbb
xlat
mov
lods
add
fstpt
pop
xchg
push
sti
out
out
scas
lods
loope
mov
lret
leave
popa
mov
mov
outsb
xchg
shlb
cld
bound
jbe
std
and
add
scas
sahf
pusha
mov
lahf
insl
mov
mov
add
arpl
or
enter
out
fisttpll
push
aad
pop
test
pushf
jo
pop
iret
inc
inc
cmp
dec
movsl
loop
cmpb
sub
push
arpl
xchg
dec
pop
cmpsb
sbb
loope
iret
stos
clc
push
ret
push
mov
aam
mov
push
adc
or
jno
clc
jmp
out
test
mov
push
popf
ljmp
in
jae
sti
in
jns
and
dec
push
ss
fidivrl
xor
scas
imul
sbb
sahf
shlb
fstpl
inc
mov
sub
mov
jle
mov
mov
push
xor
js
cmp
pop
into
leave
fcoms
cld
pop
sbb
call
sbb
addr16
aam
imul
mov
aaa
jmp
clc
outsb
mov
stos
movsb
out
js
push
push
xchg
mov
not
dec
sub
xchg
cmc
pop
xor
adc
lahf
cwtl
ficomps
popf
pop
jg
xor
cmc
outsb
sarl
xor
ljmp
mov
call
mov
aaa
cmpsb
sbb
xchg
push
ljmp
dec
xor
test
aad
cld
lret
push
clc
mov
gs
std
movsl
lret
popf
inc
xor
xchg
sub
sub
ss
insb
cmpb
add
push
sub
mov
leave
and
daa
fstps
jmp
mov
xor
sti
lahf
dec
sub
cmp
fistpl
daa
mov
sbb
mov
xchg
stos
aad
pop
add
jecxz
or
imulb
mov
cmpsb
xchg
sbb
mov
mov
cmp
repnz
jne
in
jbe
push
mov
jmp
sub
cmpsb
call
out
push
mov
pop
xor
sub
push
push
mov
add
mov
sub
fs
dec
outsb
jecxz
pop
inc
test
je
pop
and
daa
and
fst
or
loope
mov
pop
inc
pop
es
mov
cmp
mov
mov
les
notl
lcall
in
cmp
mov
and
cmp
or
mov
inc
out
ret
and
mov
adc
sbb
leave
cmpsl
inc
dec
push
test
adc
lods
iret
push
inc
xchg
das
clc
cmc
inc
call
jne
adc
imul
das
cmp
fildl
test
mov
jmp
test
lock
xchg
ja
mov
nop
jbe
aas
addr16
mov
lds
lahf
out
push
ss
fimull
aad
addr16
sbb
movsl
mov
mov
ds
xchg
stos
jp
push
sbbb
addb
adc
jl
cmp
xchg
insl
ret
xchg
jnp
shrl
clc
std
out
outsl
inc
jecxz
notl
xor
std
sub
or
mov
mov
add
cmp
jae
sub
outsb
addr16
shrb
mov
shll
push
dec
or
mov
dec
add
aam
inc
testl
cmp
push
xor
push
test
push
xchg
pop
push
jae
and
das
inc
sbb
fcoms
ljmp
js
mov
adc
loop
test
gs
subb
das
add
or
jne
push
xor
pop
test
rcrl
popa
lcall
inc
xlat
loopne
flds
push
lret
pop
dec
js
iret
scas
enter
or
sub
jmp
xlat
stos
push
pop
movzbl
mov
outsl
mov
adc
mov
popa
es
add
adc
push
insl
sbb
pop
test
inc
lods
decb
sub
adc
mov
sub
enter
jle
test
jbe
into
jle
subb
imul
aaa
mov
xchg
jl
pop
fadds
mov
sub
xor
fistl
pop
xchg
das
ljmp
jae
push
pop
mov
and
hlt
mov
outsb
cli
inc
dec
mov
mov
xchg
inc
ja
push
xchg
xor
push
rcl
adc
pop
and
mov
fsubl
mov
push
xchg
mov
divb
mov
or
sub
out
mov
repz
or
orb
pop
dec
test
xlat
popf
add
inc
lock
adc
pop
pusha
fadds
cmp
cmp
cmp
sbb
lds
xor
xchg
pushf
cwtl
jmp
adc
sub
xchg
adc
xlat
pushf
dec
fcompl
les
xchg
aam
in
insb
add
loop
imul
inc
xchg
negb
mov
add
repz
ljmp
test
je
dec
enter
sahf
push
inc
mov
les
push
iret
lea
pop
lcall
push
jl
inc
xchg
test
push
mov
jl
repnz
into
and
mov
dec
sub
out
adcl
sub
movsl
mov
cmp
rorb
decl
sbb
mov
movsb
dec
fiaddl
orb
mov
inc
stc
mov
popf
cmp
pop
add
pusha
in
xchg
xchg
out
push
repz
arpl
xor
or
mov
loop
cmp
cmp
les
into
ljmp
and
loope
lret
jle
xor
adc
cltd
in
push
inc
insl
xchg
lret
ret
cmp
fisubrl
sub
loope
scas
xor
jbe
cltd
push
mov
cmp
mov
xchg
inc
arpl
in
fsts
rclb
jne
adc
adc
push
adc
mov
push
mov
loope
jp
push
mov
bound
aad
mov
add
jmp
fs
aaa
jl
mov
cmp
mov
fistl
je
icebp
dec
daa
mov
inc
fimuls
in
lret
sub
lock
int
xor
jl
jnp
jns
mov
mov
idiv
mov
into
xchg
in
fisttpll
sbb
inc
test
das
cmpsb
pop
mov
lods
or
lods
and
lock
pop
inc
jnp
loopne
scas
mov
mov
mov
push
inc
push
pop
sbb
push
lods
rep
xor
rolb
fs
mov
stos
adc
outsl
pop
inc
xor
test
push
jmp
andl
aas
cmp
inc
sub
inc
pop
in
mov
pop
ja
mov
ja
ss
jecxz
enter
rcrb
test
xchg
push
int3
ja
push
fstl
dec
dec
sbb
insb
push
xchg
fimull
and
pop
and
je
pushf
mov
xlat
jbe
push
pop
shll
push
in
sbb
jp
dec
mov
cmp
imul
ret
arpl
push
adc
addb
pop
add
jg
aaa
dec
scas
mov
or
push
mov
in
fs
or
call
test
aas
sub
fwait
std
ret
js
or
push
aaa
cld
fcoms
sti
cmp
push
jnp
add
push
lock
test
pop
loope
adcl
popl
and
inc
sahf
test
fdivr
rcl
out
adcb
sarb
inc
ss
cmp
push
ret
jne
sub
arpl
lds
int
adc
movl
sub
mov
insb
push
push
rclb
test
adc
inc
scas
mov
xchg
and
add
imul
arpl
stc
push
xchg
fwait
or
or
xchg
out
mov
push
and
call
lock
dec
pop
mov
inc
xchg
xchg
mov
mov
aad
inc
mov
mov
adc
inc
or
lea
push
insb
push
push
jp
out
rcl
stc
push
nop
add
out
mov
fadds
add
int3
enter
mov
push
sbb
mov
into
jb
adc
pop
test
pop
dec
adc
and
cmpsl
inc
cld
push
lock
fcmovnbe
and
push
xor
xor
dec
fisubrl
push
lret
aad
sbb
mov
out
sub
and
out
lock
std
inc
pop
add
mov
xchg
mov
js
jle
xor
or
mov
js
jmp
hlt
sahf
mov
push
sub
mov
push
cmp
xor
jmp
loop,pn
or
and
mov
into
aad
pusha
mov
ljmp
xchg
jg
movb
xchg
es
adc
aad
jge
mov
mov
lea
ret
xchg
xchg
mov
push
mov
in
fiadds
out
fldenv
cmpsb
je
xchg
es
xchg
out
lcall
or
mov
int3
add
jmp
fcompl
clc
imull
or
dec
sub
inc
pop
sub
int
adc
adc
popf
cld
mov
cmp
push
add
call
repz
dec
mov
and
add
fucomi
pop
out
lds
xchg
xchg
mov
mov
pushf
clc
testb
or
push
and
xor
cltd
adc
iret
and
cmp
add
cmc
jae
xchg
add
fistpll
rolb
mov
xchg
jne
sbb
mov
out
pop
je
call
mov
jb
call
lret
lret
and
mov
and
sbb
cmp
iret
jbe
pop
js
dec
and
xchg
aam
pop
pop
cmp
mov
loop
addr16
adc
fmulp
xlat
push
mov
pop
mov
sbb
fisttpll
add
rcr
sub
and
xlat
je
adc
cmp
ret
jo
add
push
inc
jb
cmp
rcr
sub
fdivrs
mov
out
inc
or
testl
test
insl
pusha
sbb
ss
outsl
fcoml
aaa
jl
out
adc
pop
adc
lods
xor
adc
icebp
xchg
mov
dec
loope
or
stos
push
fwait
inc
std
nop
orl
xor
out
pushf
lret
es
aaa
sbbl
arpl
cs
jl
ja
cmp
and
pop
xor
cmc
leave
add
adc
push
divl
cmp
add
xchg
push
rcr
mov
pusha
out
repz
pop
xchg
in
mov
stos
jge
sub
push
in
fisubl
rcrl
jns
imul
cmp
mov
add
flds
adc
sub
and
xchg
add
mov
lcall
cli
sbb
jb
mov
sbb
movsb
xor
mov
sahf
inc
sbb
pop
outsb
pop
cmpsb
adc
add
push
je
push
sbb
inc
leave
ds
fnsave
mov
mov
lret
push
aad
rcll
pop
les
imul
cmp
movsb
es
and
mov
repnz
out
aam
or
adc
mov
orb
mov
inc
jae
xchg
repz
xorb
inc
xor
aam
addr16
popf
je
leave
pop
adc
dec
add
jae
mov
dec
add
or
dec
lret
popa
push
push
cli
scas
fsubs
xchg
jecxz
leave
in
inc
add
rclb
cltd
cmpsl
std
dec
popl
pop
or
outsb
pop
and
addb
xchg
or
rcr
xchg
das
push
pop
push
mov
pop
test
jb
mov
jae
lcall
loop
mov
or
xor
jbe
das
mov
cmp
add
mov
jno
pop
dec
popf
adc
xor
fistpl
sub
dec
jg
or
js
gs
mov
test
fldl
std
mov
aam
xor
mov
pop
call
push
push
dec
iret
push
js
sub
and
add
mov
jbe
pop
jb
pop
fildll
cld
and
int3
lods
fidivl
jge
mov
in
lods
jne
push
or
mov
mov
mov
push
ja
mov
or
xchg
repnz
xor
scas
je
xor
add
cmp
pop
mov
push
inc
movsl
popa
or
push
xchg
mov
lods
shl
inc
sub
pop
or
xchg
lea
mov
push
and
adc
in
pop
mov
sub
cli
push
jb
bound
int
jmp
leave
xor
addr16
out
mov
mov
rclb
mov
in
arpl
jecxz
push
loop
dec
bound
adc
lcall
mov
mov
sub
arpl
mov
shl
gs
jne
es
push
pop
sbbb
mov
add
mov
cli
hlt
popf
into
sbb
lret
sbb
pop
push
and
sub
jb
mov
cmp
sahf
pop
sbb
lcall
lret
nop
sbb
stos
cmpsb
test
jae
jp
xlat
cs
push
xchg
pop
mov
xor
push
cmpsl
arpl
ss
push
mov
cs
in
push
inc
fbstp
jo
sarb
aam
in
int3
mov
sbb
jg
dec
push
adc
mov
cmp
scas
ja
mov
mov
and
cmp
xchg
pop
bound
lds
push
lret
pop
loopne
inc
test
mov
jns
cmp
ds
mov
int
mov
fistps
xchg
lods
data16
add
outsl
cmpsb
xchg
hlt
adcl
test
or
xchg
sbb
jne
out
pop
cld
cmp
dec
mov
cmp
dec
mov
in
das
inc
or
orl
jmp
mov
inc
in
aad
and
popf
call
xor
cld
clc
pop
in
mov
mov
sbb
in
lock
mov
adc
rorb
or
cld
jne
and
inc
cmp
jl
inc
sbb
imul
inc
test
daa
int
in
inc
daa
pop
syscall
test
fistpll
mov
sahf
xchg
es
cmp
jecxz
mov
xor
inc
add
or
pushf
push
ficompl
frstor
into
cmc
xor
xchg
mov
jge
or
out
fiaddl
cmp
push
and
jg
ss
mov
jge
leave
and
xchg
cmpsb
mov
mov
jp
mov
mov
test
jmp
or
inc
das
lds
pushf
mov
adc
or
in
cmp
mov
pusha
imul
lea
mov
xor
sub
in
jb
cmp
sarb
sub
mov
lds
and
test
push
popf
in
xchg
test
xor
and
lds
jg
push
cwtl
xchg
inc
jnp
push
xchg
ljmp
inc
sub
mov
enter
mov
lret
cwtl
stc
mov
add
cmc
push
and
aaa
and
mov
dec
inc
cmp
scas
jae
pusha
cmp
cmp
insl
push
aam
lods
aam
call
mov
stc
sub
inc
es
adc
or
dec
pusha
movsb
iret
aad
jae
push
shrb
sbb
loopne
movsb
jle
mov
movsb
push
cli
mov
jne
push
mov
dec
test
insl
sub
and
push
ret
cmp
xor
andl
jno
in
testb
jg
cwtl
add
cmpsb
pop
mov
sub
and
lds
push
in
pop
int3
dec
dec
jl
push
fwait
xchg
xchg
outsl
insl
sbb
adc
gs
mov
or
ja
cwtl
in
aad
add
outsb
loope
adcl
inc
loopne
aam
js
rcrb
sub
test
mov
cmpsl
mov
mov
adc
jecxz
add
pop
and
cld
adc
aaa
cld
cs
bound
dec
jle
pushf
cli
call
mov
iret
push
and
scas
cmpl
add
push
and
movsb
push
xor
ljmp
push
subb
mov
ss
dec
mov
sbb
loope
sub
out
push
jb
in
ss
push
rorb
fistpl
and
gs
mov
test
cltd
push
into
cli
inc
addl
adc
mov
sbbb
lods
cpuid
push
jne
cmp
sub
mov
add
push
pop
sbb
jmp
call
mov
loopne
cmpsb
jo
mov
sahf
insb
movl
loop
jns
enter
and
or
ret
xorl
subb
mov
mov
test
mov
or
push
fwait
cld
outsl
xchg
addl
xchg
out
and
push
add
push
mov
cltd
mov
push
loop
popl
add
icebp
inc
int
sub
mov
mov
scas
cmp
movsb
inc
lds
ret
int
or
cltd
add
scas
test
inc
cmp
cmc
xchg
pushf
out
cs
rorb
sub
pop
push
and
cmc
loopne
stos
ja
into
push
mov
jp
sub
aaa
push
addr16
or
decb
fnstenv
inc
enter
mov
mov
es
xor
or
xchg
lret
cmp
rol
adc
push
mov
scas
fs
push
mov
out
jl
fwait
and
inc
pop
pushf
pushf
jge
xlat
sub
les
pop
inc
jb
pop
ret
lods
aam
mov
mov
adc
mov
icebp
jmp
push
inc
cmp
cmp
xor
insl
jne
xor
in
mulb
jo
jmp
daa
jae
add
or
add
add
aad
xor
cmp
mov
push
jmp
fidivs
ficoms
ss
sarl
cltd
or
xor
lods
sbb
lds
repz
stc
mov
xchg
pop
add
dec
sbb
xor
scas
rolb
enter
shlb
call
push
pop
mov
sub
jne
cld
push
aad
and
mov
sbb
in
inc
jg
inc
jle
cmp
jg
push
aad
roll
mov
rcrb
scas
loope
inc
out
testl
mov
and
cli
sub
xlat
imul
sbb
rcrb
sub
inc
inc
mov
mov
es
neg
loopne
out
pop
sub
xchg
cwtl
ret
dec
fdivrp
dec
mov
lcall
push
test
add
cmpsb
sbb
jno
xor
or
cmp
mov
sbb
shll
lds
fnstcw
rcrl
repz
fldcw
dec
xchg
push
cmp
mov
inc
mov
cli
loop
mov
mov
enter
and
jmp
xor
lret
dec
pop
xchg
jbe
add
lods
sbb
xchg
lret
mov
sub
ljmp
mov
daa
cltd
pop
pop
xchg
in
fdivs
imul
adc
rorl
js
add
jp
xor
mov
xor
pushf
jns
add
mov
mov
int
fwait
mov
sbb
adc
mov
cs
adc
inc
xor
mov
adcl
outsl
or
dec
outsl
movsb
push
cwtl
jo
mov
ss
add
add
jo
mov
dec
fwait
mov
test
int3
pop
inc
sub
jecxz
in
xchg
mov
sbb
scas
xchg
inc
xrelease
lods
push
xchg
sbb
dec
sub
imul
inc
adc
push
cmp
lods
andb
cltd
mov
aad
popf
jl
sbb
cmpsl
and
lods
das
sti
les
inc
arpl
dec
lcall
jbe
bound
ret
lock
out
loop
sahf
jp
jnp
or
cmp
scas
jmp
mov
lods
stc
and
imul
sbb
arpl
je
xchg
int3
cld
pop
mov
lock
mov
inc
fildll
xlat
ror
push
xchg
icebp
push
daa
sbb
repz
scas
imul
and
jl
into
jae
cmc
cltd
mov
shll
shll
sub
dec
test
stc
shlb
adc
stos
cmp
das
xlat
xor
add
xor
lods
push
adc
out
fsubrp
insl
imul
test
les
notb
xchg
xor
out
xchg
addr16
sub
and
push
aaa
cmp
fidivrl
push
or
aam
lret
sbb
imul
pop
push
lods
xchg
fs
xchg
call
int3
lret
pop
repnz
fnstcw
mov
jl
mov
lods
dec
out
movl
data16
inc
sbb
adc
mov
pop
xor
add
mov
mov
jne
out
mov
push
in
sbb
jl
cmpsl
out
movsb
dec
ret
mov
sub
stos
lods
push
mov
or
push
sub
and
mov
paddw
xchg
adc
ret
xor
jo
cmp
jae
iret
mov
iret
into
jle
dec
outsb
lret
push
xor
pushf
andb
pop
mov
ljmp
or
sub
mov
gs
mov
jnp
sbb
inc
out
jge
sub
arpl
leave
mov
jb
sbb
mov
dec
jg
mov
inc
ret
mov
fwait
mov
mov
push
insl
and
push
inc
cli
jg
into
pop
ja
mov
and
stc
sub
adcl
roll
sbb
push
fwait
arpl
push
push
in
or
stos
insl
and
xchg
mov
into
pop
add
adc
fbld
cli
cs
xchg
dec
cmc
jmp
and
mov
jecxz
adc
daa
cmovb
aas
push
int
cmp
sub
stos
addr16
js
mov
lret
dec
xor
pop
dec
xchg
jmp
scas
push
cmpb
fmuls
jmp
xor
cmp
pop
pop
or
shll
je
adc
pop
rep
mov
negl
mov
xlat
push
std
lods
cwtl
cmp
xchg
test
jnp
cli
pushf
cmpsb
lret
mov
popf
jno
pop
fdivrl
andb
adc
out
adc
add
inc
std
cwtl
inc
pop
pop
repz
sti
iret
inc
adc
pop
mov
add
iret
movsb
push
fidivrl
iret
xor
xchg
jle
push
and
and
lahf
arpl
enter
push
icebp
inc
lahf
xlat
outsb
dec
fwait
inc
mov
aas
dec
add
aas
mov
arpl
xchg
mov
pushf
fmull
inc
mov
mov
pop
test
aaa
sub
mov
jo
jae
mov
inc
xor
push
xchg
mov
push
int
mov
test
cmp
inc
jno
mov
fstl
xor
movsl
mov
adc
icebp
outsl
shl
push
adc
jns
test
push
imull
add
jns
inc
cmpsl
and
dec
out
inc
cwtl
add
mov
add
mov
movsl
loope
pop
push
lods
testb
xor
divl
movsb
mov
jbe
enter
mov
inc
mov
icebp
and
and
push
out
movsl
imul
clc
inc
xchg
ret
push
xor
xlat
push
inc
aas
mov
adc
lods
mov
xchg
mov
add
jecxz
and
and
lret
mov
sub
testb
mov
inc
and
dec
sub
aas
movsl
or
ror
js
xchg
into
xchg
out
dec
push
fnstsw
es
cmp
rolb
and
test
cmpsb
xchg
and
pop
movsl
lea
clc
stos
in
cmp
mov
fsubrs
mov
clc
pop
inc
icebp
adc
xor
ja
lds
cmp
out
xor
xlat
inc
pop
sbb
stos
inc
and
adc
subl
outsb
nop
sahf
movsb
inc
hlt
xor
push
or
push
push
cld
jmp
pop
imul
stos
rol
mov
jge
sbb
out
loopne
jnp
aad
fst
std
into
adc
adc
cli
add
orb
xchg
jae
loop
push
mov
xlat
mov
sbb
xchg
or
popf
and
popf
lds
movsb
xchg
mov
test
lret
lods
push
loopne
shrb
xchg
xchg
lret
inc
hlt
dec
cmc
pop
popa
dec
scas
stos
in
loopne
mov
aaa
cmc
mov
inc
mov
cmp
je
jl
pop
dec
push
pop
cmp
and
addr16
bound
dec
push
dec
fisubl
mov
scas
aaa
rol
lods
jmp
lcall
lcall
add
lahf
andl
xor
jae
aaa
xchg
push
sub
inc
fiadds
movsb
adc
xchg
or
inc
cmpsb
or
add
std
cmp
mov
nop
cltd
push
mov
test
push
fdivs
mov
cmp
pop
jle
je
outsb
es
shl
push
lods
inc
push
cmp
sahf
icebp
and
dec
cmpsb
jp
ret
loope
lods
xchg
sub
movsb
cltd
ja
cwtl
jecxz
lds
ds
loopne
mov
or
cmp
inc
mov
dec
push
sub
ret
notl
sahf
push
push
cs
mov
jb
leave
adc
les
lods
add
jge
xlat
push
sub
fadds
daa
ret
scas
dec
add
jecxz
mov
adc
hlt
mov
sbb
aaa
inc
sti
repz
and
sarl
jmp
jno
mov
call
cmpl
bound
fcmove
add
stos
push
shl
sub
xchg
xor
inc
xor
xchg
mov
cmp
dec
dec
pop
dec
neg
mov
jecxz
add
fadds
xor
mov
cmpsl
add
movsb
ret
add
pop
sahf
pop
xchg
jl
sti
and
dec
mov
pop
add
pop
pop
push
push
les
adcl
jge
in
inc
and
test
mov
je
push
repnz
dec
ss
outsl
je
mov
iret
pop
mul
or
dec
sub
in
mov
push
and
mov
cmp
adc
xorb
fistl
adc
enter
leave
bts
cmp
andl
push
sub
or
lahf
leave
mov
shl
push
pop
aad
jb
pop
pop
or
fstpt
sbb
xor
jg
or
insl
dec
inc
lret
push
repnz
adc
mov
xorl
ljmp
out
jno
pop
add
mov
push
inc
or
add
push
mov
repnz
adc
xor
loop
add
rcl
pop
pop
push
xlat
leave
jno
in
lods
inc
xor
cmc
hlt
ja
clc
jge
xchg
xchg
mov
sti
inc
jmp
pop
sbb
mov
lret
sbb
xor
pop
xor
jo
inc
fld1
xlat
inc
lret
iret
xchg
test
sti
icebp
cwtl
lds
add
in
push
hlt
xchg
add
push
push
leave
mov
shlb
mov
mov
adc
clc
iret
mov
shll
inc
xchg
dec
cmp
mov
xor
rclb
dec
jge
cli
jp
pop
popf
adcb
test
negl
fbstp
ss
inc
mov
imul
add
push
mov
lods
mov
cmpsb
negl
add
js
cmp
in
dec
insl
movsb
mov
aam
fldl
bound
nop
push
and
adc
xsha256
cmpsb
aad
fwait
sbb
cwtl
cmpsl
xchg
add
push
ja
inc
push
xchg
xor
sbb
cld
push
std
outsl
jmp
xchg
mov
xchg
adc
data16
filds
inc
sub
push
push
xchg
lods
mov
mov
popa
push
xor
xor
filds
imul
push
clc
inc
cmpsl
in
mov
ficoms
scas
nop
dec
inc
insb
sarl
and
xor
mov
sub
dec
mov
outsb
mov
rcl
jge
subb
add
pushf
movsl
add
shll
mov
push
mov
sub
mov
inc
push
js
mov
jb
sbb
sbb
dec
cmp
rcrb
sub
divb
dec
mov
fucomip
push
xchg
mov
imul
rolb
mov
mov
in
push
mov
inc
arpl
loopne
sbb
dec
frstor
popf
es
mul
pop
jmp
data16
nop
push
icebp
imul
or
movsl
add
push
ret
popa
mov
lods
mov
loopne
cmp
cmp
cmp
sbb
imul
gs
lods
cmp
lea
mov
pop
inc
xchg
xor
sbb
dec
lock
loope
imul
out
push
cmp
mov
jg
mov
lock
call
sbb
in
inc
sbb
ret
mov
lods
push
js
ret
mov
pop
stos
aam
xchg
hlt
and
inc
daa
iret
xchg
pop
add
push
cmp
or
repnz
cmp
dec
fwait
shrb
inc
iret
sarb
iret
int
xchg
scas
int
adc
jle
inc
xor
push
lods
add
dec
lds
jge
enter
cmpsl
and
sbb
fs
jb
popa
and
inc
xchg
data16
test
xor
fmull
subl
outsb
lock
shll
popl
cmp
and
adc
push
arpl
repz
adc
insb
out
rcrb
xor
pop
cs
lods
sbb
dec
fstp
mov
jecxz
in
push
xlat
mov
mov
mov
lock
andb
push
push
jle
push
or
push
js
pop
push
jp
xchg
xor
and
andl
mov
lock
int
cwtl
dec
fistps
in
cmp
adc
add
lods
in
cmp
xorl
push
ss
cli
jecxz
ret
cltd
add
fwait
push
push
jp
push
orl
out
cmpsb
mov
mov
leave
sbb
pop
mov
push
fldt
insb
add
mov
or
cmpsl
inc
fcmovb
push
icebp
jmp
jns
cld
cmp
xor
loopne
adc
cmp
ret
pandn
bound
movsb
mov
or
mov
mov
cmpl
int3
call
rorb
push
pop
xchg
jmp
stos
outsb
push
js
fistl
mov
adc
stos
sub
push
test
inc
push
in
jmp
mov
loope
mov
jns
cwtl
mov
int3
scas
mov
or
ljmp
mov
inc
xor
fwait
arpl
ja
add
jbe
out
dec
cmp
sarl
jmp
lcall
dec
adc
je
jb
push
push
mov
mov
fneni(8087
or
xchg
lds
fstpt
icebp
pop
scas
mov
mov
clc
mov
sahf
fbld
sti
leave
mov
jecxz
xor
adc
cmp
mov
dec
mov
aam
aam
mov
jp
and
scas
mov
test
xor
adc
pop
rcll
cltd
in
lret
gs
mov
cmp
push
xchg
sub
xor
cmp
fnstenv
in
xchg
mov
daa
leave
lods
adc
dec
in
sahf
shlb
pusha
shll
sarl
or
cmp
push
mov
xor
cmpb
stos
push
pop
fdivr
insb
mov
pop
xchg
lret
shl
leave
mov
popa
stos
mov
pop
imul
adc
push
es
xchg
cmp
test
vcvtpd2dqy
push
xor
stc
mov
mov
add
dec
and
lcall
and
inc
adc
fisttps
push
jb
out
xchg
or
mov
mov
sub
fsub
add
dec
xor
or
xchg
mov
cmp
test
pop
das
and
orb
jge
fnstenv
jnp
push
push
fsub
leave
sbb
and
jecxz
popf
dec
jb
bound
fcoms
add
das
adc
js
add
jmp
jno
cmp
sbb
shlb
push
out
xchg
mov
sbb
inc
cmc
mov
or
inc
pop
lock
ret
sbb
mov
mov
sub
aaa
push
cmp
scas
add
dec
mov
rol
mov
mov
aad
push
call
mov
pop
dec
mov
xchg
std
sub
dec
shlb
and
movsl
fsubrl
outsl
jle
push
movsl
ret
pop
or
xor
inc
push
sarl
imul
jbe
push
or
cld
test
adc
outsb
sti
pop
mov
mov
fnstenv
imul
sti
lcall
sub
xchg
repz
outsl
jns
popf
push
jmp
cmp
ds
das
fcomp
dec
jmp
addr16
int
xlat
fwait
add
adc
popf
movsb
repnz
loop
adc
les
adc
dec
jmp
stos
aam
or
mov
imul
mov
fmull
lods
pop
xor
cltd
sti
fs
stos
std
inc
mov
mov
sarb
dec
cmpsl
xchg
cmp
and
pushf
push
lret
out
pushf
mov
mov
andb
sbb
pop
mov
push
fisubrs
cmp
xchg
mov
or
cmpb
lds
and
mov
xchg
or
lcall
dec
addb
bound
repz
sbb
cmpb
sub
gs
std
scas
push
mov
xor
in
lahf
fs
pop
daa
dec
push
rcl
divb
pop
scas
stc
cmp
push
sub
loop
stos
fwait
ret
cwtl
jo
xchg
pop
cld
mov
fdivl
imul
popa
aad
push
test
hlt
or
push
sbb
xchg
push
sarl
bound
mov
insb
cwtl
loop
jmp
inc
cmpsl
loope
mov
cmc
jge
leave
push
push
xor
or
cmpsl
lcall
or
movsl
je
xchg
les
mov
inc
aam
daa
das
lar
das
dec
lods
data16
cmp
and
sub
xor
ljmp
add
cld
fdivp
lods
movsb
add
pusha
rcll
iret
outsb
push
xor
int3
inc
jg
mov
std
test
pop
xor
mov
mov
repnz
push
arpl
out
repz
fidivrl
cmp
adc
cmp
cmp
std
insl
push
rclb
xlat
gs
mov
lods
jne
lods
jge
lea
in
test
test
stc
ljmp
mov
pop
nop
cmp
pop
es
fisubrl
mov
jno
inc
xor
test
dec
lret
stos
push
mov
in
fbstp
jb
and
inc
jmp
sub
int3
vorps
or
jp
clc
dec
je
into
jmp
mov
in
or
and
and
jmp
fisubrs
sbb
mov
push
jne
jmp
leave
or
or
push
inc
xchg
popf
cltd
ficomps
and
fcmovne
les
lods
popa
push
das
imul
pop
lods
roll
push
cmpsl
push
jb
test
insl
sbb
jecxz
xor
out
pusha
jne
cmp
xchg
out
hlt
sbb
inc
xor
adc
bound
push
movsb
sti
jg
int
mov
xchg
in
mov
insb
sub
or
fidivrs
sbb
pushf
jae
ja
cld
stos
stc
push
xchg
inc
and
shlb
lods
movaps
mov
jb
addr16
in
pushaw
sti
jmp
lock
cld
ds
adc
pop
test
out
add
mov
lret
mov
inc
je
add
xchg
push
loop
xchg
cmp
loope
outsb
jb
xchg
fmull
div
adc
mov
aaa
inc
shll
rcrb
bound
movsb
mov
xchg
pushf
pop
adc
nop
fiadds
push
lcall
dec
xor
ja
push
pop
cmp
xchg
jno
adc
out
in
lret
mov
divb
rorb
aas
cs
rolb
add
sub
les
hlt
mov
xchg
inc
js
or
sti
enter
dec
xlat
std
dec
pop
sub
or
jmp
sbb
mov
lret
repnz
xchg
sub
cmp
mov
outsb
js
dec
mov
mov
ds
addr16
pop
aas
mov
ss
jb
std
and
cmp
aas
pop
dec
fdivrp
inc
rcrb
scas
mov
sbb
in
out
scas
jl
mov
cmp
clc
jnp
xchg
es
in
jne
pop
mov
push
sbb
fwait
dec
std
or
xchg
std
pop
imul
fisttpl
movsl
repz
test
jge
call
inc
fsubrl
and
pop
xchg
repnz
inc
in
xor
testb
divl
fmull
loopne
out
bnd
push
push
and
mov
sub
call
icebp
jnp
mov
mov
int3
ret
jne
out
push
cwtl
fidivl
push
adc
clc
add
out
out
and
add
icebp
add
aam
insb
pop
int3
sbb
lcall
outsb
mov
mov
jae
adc
ljmp
cld
ret
mov
adc
ds
xchg
lret
inc
cli
subl
lret
gs
adc
outsb
bound
orb
xchg
lret
repz
cmpsb
out
into
sub
adc
insl
add
rep
fcoml
test
add
daa
pop
int3
notb
out
cmp
lods
jmp
adcb
dec
or
imul
in
jne
xor
aaa
fwait
aad
sbb
sbb
and
mov
movsl
pop
or
push
jae
pop
das
adc
sub
insl
ja
cmpsl
jle
loope
adc
sbb
xchg
ret
inc
je
push
or
fildll
pop
jmp
inc
in
and
add
aaa
mov
inc
sar
and
mov
inc
sbb
fwait
xchg
add
sub
sub
lret
test
mov
sub
loope
aad
sarb
fwait
mov
frstor
rolb
out
ficoml
add
arpl
push
jns
gs
ljmp
insl
je
test
push
ljmp
xchg
mov
dec
inc
mov
sbb
and
movsb
test
dec
shl
cmp
mov
das
inc
dec
ss
stos
xor
inc
add
cmp
fmul
or
mov
lret
popf
or
outsb
mov
xchg
mov
mov
push
fsubrs
xchg
adcl
dec
ss
dec
mov
xchg
mov
movsb
lods
clc
loope
shrb
cmpl
adc
mov
lahf
xor
cmovge
sub
dec
test
jnp
out
andb
loop
inc
pop
jne
fldt
xchg
notb
adc
mov
inc
aad
pop
or
xlat
inc
aam
out
js
cmp
dec
in
jns
lcall
xor
ret
cwtl
js
mov
cltd
add
pop
stos
mov
inc
jo
mov
sbb
push
adc
icebp
xchg
cltd
xor
pushf
and
js
mov
mov
dec
pop
out
fwait
dec
icebp
jbe
fsubrl
xor
mov
pop
and
mov
xchg
cmpsl
sub
sbb
mov
outsb
dec
push
xchg
out
iret
mov
test
mov
mov
and
inc
xlat
mov
out
jno
inc
xchg
mov
cmp
movsb
sbb
addr16
ret
jae
inc
popa
and
out
cmp
pop
mov
ret
xchg
inc
cmc
jg
xor
js
and
insl
ret
cmp
and
sahf
cmovbe
inc
andb
sti
adc
xchg
sbb
cli
inc
jmp
das
dec
push
cs
add
cmp
mov
jne
mov
push
jmp
inc
jecxz
decb
adc
mov
lahf
push
sub
fisttpll
sub
test
pop
lret
xchg
fildl
pop
call
pop
mov
mov
cmpsb
lds
add
pop
clc
cmpsb
jecxz
outsb
push
mov
ret
int
incl
outsl
hlt
mov
pop
orb
in
xchg
iret
je
int3
daa
jo
rclb
pop
loope
pop
js
fdivs
pop
call
daa
repnz
sti
pop
mov
fildll
inc
nop
lahf
sahf
and
cmp
aaa
adc
lds
mov
mov
out
ljmp
loope
and
mov
lock
adc
and
inc
xor
and
sbb
push
mov
jae
rcrl
fs
cmp
mov
pop
or
jmp
popa
std
sbb
lahf
jmp
sbb
dec
shll
pop
in
insb
stc
in
rolb
dec
jle
inc
test
lea
xchg
fsubrl
xchg
aas
iret
cmp
pop
mov
outsl
inc
iret
xor
pop
cld
and
mov
inc
movsb
sub
in
shrb
mov
pusha
in
add
xchg
aas
test
aad
and
lea
loop
and
xchg
mov
pop
xchg
sub
jo
sbb
xchg
push
jb
sbb
rcll
lods
mov
imul
mov
and
mov
imulb
in
push
jns
jecxz
imul
dec
cmpsb
enter
test
xchg
sbb
and
sbb
push
out
adc
shrb
in
sub
sar
aas
movsb
adc
adc
dec
insl
pusha
fmuls
stos
add
inc
inc
icebp
xchg
sbb
cs
cmp
xchg
repnz
std
mov
push
idivb
push
das
daa
iret
cmp
adc
icebp
push
push
mov
dec
stc
xchg
ljmp
dec
rorl
mov
inc
mov
pop
test
lcall
mov
sub
bound
sbb
push
mov
mov
jne
push
inc
dec
jae
mov
insb
mov
adc
jg
cs
fsts
pop
out
cmpsl
mov
xchg
jnp
cmp
mov
shr
lahf
gs
into
push
daa
mov
roll
addl
sub
cmpsb
jbe
in
xor
mov
stc
repz
jle
and
push
add
jl
add
sub
push
insl
mov
imull
adc
rcll
add
bound
and
jg
rolb
popa
xchg
movsb
sub
int
or
stos
push
add
xchg
dec
sub
test
sahf
adc
repnz
adc
xchg
cmp
adc
adc
and
nop
and
adc
repz
xor
out
ljmp
outsb
jns
mov
cwtl
dec
std
mov
stos
add
jb
loop
ret
imul
adc
adc
inc
ret
stc
sbb
and
int3
jns
out
pop
nop
dec
adc
cmovge
insl
stos
sti
subb
std
iret
in
ret
or
mov
sbb
push
inc
inc
sub
adc
inc
outsl
fs
xlat
loop
or
enter
xchg
scas
std
pushf
dec
pop
mov
shlb
inc
cmp
and
sub
popf
pushf
sahf
jmp
fistpl
push
fwait
mov
dec
out
adc
sub
popa
cli
call
dec
sub
lock
scas
insb
pusha
lods
sti
inc
jnp
lret
aaa
cmpsl
or
gs
ljmp
mov
lahf
sbb
stos
pusha
pop
aad
inc
mov
stc
or
xchg
push
je
sbb
ss
or
sahf
out
cli
cmp
add
xchg
adc
sub
popf
cmp
pushf
das
cmc
sub
and
push
inc
xchg
sub
add
cmp
addr16
lods
sub
push
jb
dec
hlt
xchg
jge
dec
xchg
loopne
imul
xchg
into
inc
loop
dec
popf
mov
or
mov
adc
icebp
imul
xor
add
jns
insl
loop
add
jns
adc
das
stc
pop
add
add
jecxz
adc
loope
scas
xchg
jmp
xor
jmp
je
lds
cmp
out
jmp
rorl
fstl
or
shrl
xor
xchg
add
sub
adc
out
pop
lret
cmp
mov
ret
push
mov
dec
insl
adc
fnstenv
mov
xchg
mov
cmp
push
push
xlat
int3
push
add
xor
call
popf
fs
fnsave
push
and
xchg
movsb
mov
fstp
xchg
mov
adc
xor
cmp
ficoms
cmp
ja
mov
push
xlat
push
scas
loope
test
mov
jg
cmp
iret
lcall
adc
lret
pop
push
fimuls
cmp
mov
jnp
rorb
sti
scas
mov
push
leave
repz
addb
mov
xchg
movb
pop
push
data16
lock
push
aad
int
shll
push
mov
call
jmp
ret
cs
mov
pop
mov
xchg
jb
adc
sbb
cmp
mov
push
cli
icebp
inc
mov
pushf
leave
pushf
addr16
shrl
add
in
cmp
sub
out
popa
aas
jl
cmpb
lret
pop
lock
mov
sub
mov
adc
lea
das
cmpsb
scas
xlat
mov
cmp
jp
hlt
in
rclb
das
adc
or
xchg
std
sbb
dec
add
pop
xchg
push
sub
and
lret
cmp
mov
in
mov
add
dec
fwait
popf
push
daa
out
fdivrl
adc
in
popa
movsl
iret
pop
mov
xchg
in
je
xchg
test
es
mov
cmpsl
and
iret
mov
stos
and
xor
stos
nop
or
leave
fs
repz
fiadds
pop
enter
inc
fists
rolb
out
mov
sbb
and
mov
vsubsd
sti
sub
cmp
mov
xchg
mov
in
jecxz
pop
pop
push
in
aam
adc
xchg
leave
scas
mov
adc
js
or
sbb
cmpl
into
xlat
and
and
fbstp
insb
leave
imul
sbb
lods
sub
filds
ret
call
pushf
push
insl
and
dec
fidivrl
sub
ret
lret
sbb
sti
rorl
mov
gs
test
and
cmp
mov
sbb
sub
cmp
push
outsb
xchg
lock
cs
and
jl
pop
popl
jbe
pop
xor
dec
ss
xlat
adc
cwtl
xchg
jo
aad
ja
mov
push
adc
sub
hlt
rol
xor
ror
inc
outsl
jns
sar
pop
ljmp
ret
imul
testb
aad
cmp
fadd
daa
and
das
dec
ret
test
sub
jecxz
sub
ja
sub
fs
pusha
xchg
arpl
sbb
pop
sub
jns
and
lahf
lods
xchg
fs
loope
xchg
scas
stos
sahf
cmp
data16
mov
sub
leave
mov
xor
scas
fdivp
fists
mov
subl
inc
stc
adc
jge
bound
xchg
and
ss
mov
mov
movsl
in
sub
push
pop
and
mov
dec
pop
repz
mov
mov
xchg
cmpsl
lahf
sub
pop
cmpsb
test
subl
pop
pusha
dec
popf
jle,pn
sbb
pop
xchg
pop
sti
pop
or
int
out
out
inc
shrb
and
sahf
mov
stos
lea
sbb
mov
push
fcompl
add
sub
jmp
cmpsb
insl
insl
pop
xor
xchg
lds
lret
lods
jnp
xlat
in
and
jne
les
jle
sub
dec
and
imul
xor
xlat
and
rclb
sub
ja
rcr
xchg
call
mov
fisubrs
sar
xchg
and
imul
jnp
jl
mov
movsb
popf
mov
ja
mov
in
mov
mov
das
cmp
pop
xor
inc
cmovnp
js
jg
cmp
jnp
inc
sahf
loope
jno
mov
test
and
ljmp
fcomps
mov
arpl
addr16
popa
rorl
jmp
popf
outsl
inc
daa
lods
mov
sub
mov
mov
push
jg
push
mov
repz
sbb
adc
test
xor
adc
orl
xchg
sbb
push
push
ss
in
sub
call
xor
or
jge
scas
daa
mov
mov
cmp
jmp
xchg
mov
loopne
pop
fsubrs
pop
push
adc
lcall
sti
out
mov
loope
int3
loope
jnp
dec
aas
push
popf
les
inc
add
ret
sub
loope
mov
call
std
nop
push
adc
fstl
adc
mov
or
add
mov
jle
mov
or
xlat
and
lea
pop
ja
shld
jno
in
jnp
xchg
test
rorb
pop
or
rorb
mov
aad
sbb
push
xor
bound
jns
jecxz
in
mov
xorb
push
int
cltd
adc
dec
sub
pop
sbb
pop
popa
nop
xchg
and
repnz
mov
jmp
cmpsb
hlt
sub
jle
jb
nop
out
cmp
les
xchg
mov
sub
dec
adc
in
pusha
mov
mov
jae
dec
adc
jecxz
addl
mov
pop
xorl
pushf
fbstp
ret
in
jle
cmp
pop
xor
sahf
test
mov
sbb
push
ret
cmp
jle
out
inc
mov
out
sbb
add
popf
pushf
testb
lahf
and
dec
mov
mov
fidivs
xchg
or
inc
pop
mov
stc
xchg
inc
imul
insl
mov
fldl
dec
dec
popf
mov
cmpsb
mov
pop
cs
lret
aas
mov
sbb
ret
mov
fwait
jb
sbb
pop
dec
out
loope
test
and
rolb
pop
pusha
lret
cwtl
imul
cmc
insl
jno
xor
lahf
rcl
scas
idivl
out
push
hlt
jmp
lcall
mov
pop
and
inc
push
loop
mov
mov
mov
jbe
add
mov
xor
imul
or
cmpb
and
inc
loope
jne
pop
std
aad
mov
out
out
fst
inc
stos
scas
pop
add
xor
dec
test
cwtl
lods
mov
stos
mov
sbb
enter
mov
stos
xchg
add
fsubp
sub
jl
in
out
mov
xchg
in
pop
insb
and
xchg
test
xor
gs
jne
bound
jmp
movsb
mov
cli
fmul
sub
push
inc
jmp
xchg
leave
into
pop
loopne
aaa
cwtl
cmpl
lcall
add
jmp
bound
sub
inc
dec
dec
jo
push
sbb
inc
mov
fimuls
jns
mov
out
daa
dec
arpl
popf
jae
cmpsb
dec
je
leave
or
jo
mov
mov
lahf
insl
jmp
adc
andb
inc
loopne
test
push
pop
jg
fbld
out
sub
movsb
ret
pop
push
dec
push
jmp
loopne
imull
jl
sbb
push
push
adc
ret
jnp
mov
adc
pushw
and
mov
leave
icebp
add
jge
pop
cmp
cmp
daa
mov
and
cmpsb
fidivrl
pop
xor
sarb
sarl
sub
pop
sbb
lock
in
aad
ljmp
cmp
inc
out
pop
stc
cltd
mov
das
jecxz
mov
std
sub
movsl
pop
mov
icebp
cld
dec
shl
aaa
push
lds
or
fwait
jle
aam
add
xchg
mov
addr16
push
call
push
mov
in
adc
sub
push
cmp
push
rcll
inc
adc
pushl
test
push
fwait
sbb
test
pop
or
insl
add
pop
insb
cmc
test
imul
je
gs
dec
mov
ret
jns
dec
dec
add
roll
pop
out
call
sub
repnz
add
jo
mov
movsb
jno
or
cmp
mov
int
push
add
mov
xor
pop
pop
mov
hlt
mov
gs
sbb
mov
mov
enter
pop
mov
add
mov
lock
mov
mov
jno
cli
test
add
flds
iret
iret
movsl
sub
xchg
addr16
sbb
neg
jmp
or
pop
outsl
xor
test
mov
testl
mov
aas
dec
sub
outsb
pusha
inc
in
fidivrl
mov
mov
xor
insl
in
daa
repz
test
inc
cmp
ds
sbb
mov
sbb
repnz
ror
and
imul
orl
or
and
mov
ret
fnstsw
addl
mov
push
mov
loopne
scas
mov
rcll
pop
mov
rcr
pushl
leave
sti
or
icebp
imul
lods
mov
mov
pusha
sbb
fadd
cs
inc
xor
test
jo
mov
inc
out
das
cmp
mov
into
in
mov
mov
stos
scas
iret
pop
xchg
pop
and
xor
aaa
dec
push
orb
hlt
jecxz
data16
dec
mov
pop
clc
call
pop
add
jnp
test
movsl
pop
getsec
mov
push
sbb
pop
or
je
leave
adc
push
stc
fmul
sub
inc
mov
mov
push
fistpl
cmp
lods
adc
pop
js
and
add
and
adc
rorl
or
imul
jge
loope
xor
popa
and
sti
fwait
xchg
push
add
jmp
es
leave
xchg
and
lea
inc
or
popa
loope
and
and
test
mov
sbb
sbb
sbb
lret
pop
rcll
stc
dec
jo
cmpsb
ficoms
iret
aas
shlb
mov
jbe
mov
repz
and
icebp
in
pop
daa
int
arpl
mov
push
cltd
mov
movsb
int
or
das
in
push
out
cmpsl
lcall
sub
xor
inc
xor
lods
add
mov
push
xchg
xor
xor
test
sub
mov
inc
pop
mov
lds
ds
xchg
out
cmp
fdivl
paddb
and
xor
pop
mov
inc
push
call
jnp
aaa
mov
or
jg
imul
ret
sub
cmp
pusha
lock
fimull
pop
aas
sbb
sub
int
xchg
push
xchg
insl
stos
mov
jne
push
gs
mov
push
push
sub
leave
xor
jbe
ss
in
dec
scas
xor
sub
in
sub
mov
mov
sub
mov
cmp
ret
sub
cmpsl
cmpsb
dec
sahf
mov
mov
push
in
arpl
adc
sub
sub
js
mov
push
insl
cwtl
jae
pushf
pop
out
adc
dec
jmp
daa
in
rcrb
call
nop
outsl
jge
in
pushf
sahf
popf
popa
movsl
xor
fldl
loope
and
sahf
pop
or
int3
scas
or
scas
and
shll
mov
jle
jns
testl
mov
sbbl
jl
shlb
inc
sti
rcr
test
addb
mov
adc
mov
in
ss
rolb
mov
mov
and
out
lret
mov
aam
xchg
mov
mov
ljmp
xchg
mov
mov
pop
push
ret
popf
xchg
js
out
push
cld
push
fsubs
and
sub
xor
mov
ss
lods
sbb
adc
arpl
shrl
das
mov
hlt
xchg
xchg
mov
sti
adc
jae
push
into
daa
js
adc
test
cld
repz
and
in
and
cwtl
insb
cmp
xor
adcl
vsqrtsd
xor
out
mov
jbe
or
std
aaa
cmp
push
mov
lahf
shll
xchg
int3
in
xor
icebp
dec
andl
add
enter
js
mov
lea
sub
sbb
xchg
pop
push
into
test
lret
sbb
cmp
loope
push
std
sub
data16
pop
jp
push
mov
ja
xor
lods
mov
sub
mov
push
int
ja
or
xchg
cmpsl
add
xlat
push
in
jle
das
dec
movsb
xchg
clc
xor
test
dec
loop
sbb
push
js
testl
mov
mov
cwtl
in
add
cltd
jl
mov
sbb
in
push
imul
mov
aad
lret
pushf
sbb
adc
into
xchg
inc
inc
mov
mov
fsubs
sbb
or
sub
mov
sub
push
lea
mov
popf
lock
paddq
mov
pop
sbb
pushl
inc
and
inc
sub
rcrl
mov
jg
mov
xchg
lds
xor
imul
push
jb
movsl
mov
push
lods
mov
cmpsb
push
mov
ret
cmc
ror
add
aam
addb
add
push
sbb
dec
pop
jecxz
scas
pop
icebp
mov
pop
sbb
jmp
sbb
or
push
pop
mov
cmp
fnstsw
lds
pop
shll
pushf
shll
in
shlb
mov
stos
lock
out
test
jge
add
call
xchg
inc
xchg
movsl
lcall
subl
xchg
mov
aad
jle
rcrl
in
push
or
clc
lock
inc
test
aam
xchg
ret
add
push
ljmp
xor
xchg
adc
iret
and
lods
or
jmp
mov
push
jbe,pn
movsb
lcall
ljmp
jo
or
lea
jmp
mov
cmp
pop
in
das
add
stos
dec
sub
imul
in
pop
push
pop
dec
in
add
rcl
sub
mov
jo
or
jnp
out
adc
cli
and
push
lcall
movsb
jnp
rorl
jg
jo
push
mov
sub
cmpsl
cmpsl
pop
stos
je
xor
sbb
repz
jmp
test
arpl
cmc
mov
mov
clc
jmp
jp
daa
in
repz
cs
shl
mov
or
cmp
inc
jo
clc
orb
jecxz
adc
fistps
lea
push
pop
inc
or
dec
push
jmp
jp
adc
push
fstpt
push
stc
mov
ret
std
scas
loopne
mov
imul
mov
stc
push
cwtl
stos
mov
mov
xor
dec
lea
push
xchg
sub
addr16
das
push
fildll
in
in
xor
test
shrl
xchg
cli
cli
addl
adc
sub
pop
insb
add
add
mov
pusha
outsb
pop
adc
add
jle
adc
lret
sub
ss
mov
stos
fs
lock
fs
or
xor
stc
sub
ja
rcrl
hlt
push
ret
jp
jbe
je
mov
cmpsl
push
test
dec
aad
adc
sub
cmpsb
add
xor
pop
pusha
lods
adc
test
fcmovbe
dec
testb
inc
xor
aad
mov
pop
jmp
and
test
sub
jge
inc
cltd
nop
loope
ljmp
in
push
push
cmp
aad
cmp
mov
or
dec
push
jb
push
shlb
gs
jecxz
rcl
push
scas
sbbl
daa
aam
dec
add
adc
dec
sub
sbb
mov
ds
sub
xor
loop
in
stos
or
inc
js
sbb
xchg
loop
insb
mov
mov
xor
push
push
inc
or
cmp
jb
pop
mov
jle
pop
mov
aad
sar
adc
int3
aaa
and
fsub
and
adc
jae
dec
mov
add
jns
rcl
or
mov
or
jge
mov
aas
dec
scas
in
stos
arpl
cwtl
pop
addr16
jle
call
jge
xor
cmp
es
push
das
test
rolb
jg
cmp
pop
int
pusha
outsb
and
mov
mull
pop
pop
scas
jl
bound
aad
mov
add
sub
insb
lret
sti
clc
mov
or
mov
test
icebp
mov
pop
mov
sub
mov
inc
test
or
icebp
push
pop
ds
out
fcoml
mov
mov
hlt
ret
and
mov
in
pop
or
jns
pop
push
jle
lret
fstpt
enter
ja
jno
pop
test
adc
lods
popl
mov
lcall
and
and
arpl
gs
lcall
sbb
jne
adc
call
pop
in
sbbb
jae
mov
or
outsl
je
in
dec
mov
push
xchg
xchg
and
shrl
cs
xchg
push
stos
pop
iret
hlt
xor
icebp
sub
mov
data16
jb
push
mov
add
add
and
outsb
push
push
jecxz
push
ds
stc
fstpt
push
xor
inc
sbb
cmc
adc
sarl
jg
testl
cltd
xor
nop
mov
jnp
jle
mov
push
loopne
and
mov
sub
dec
dec
nop
mov
into
inc
sub
stc
repnz
cld
push
lcall
aam
xchg
or
cmpsl
pop
icebp
fsubrl
xchg
mov
pop
lret
arpl
arpl
ljmp
lock
pop
sahf
into
pop
andl
jmp
sbb
mov
mov
jp
lea
pop
mov
push
cmp
mov
imul
mov
push
gs
mov
in
test
xchg
inc
xlat
arpl
out
hlt
shl
dec
aad
inc
repz
imul
push
cmc
mov
xchg
stc
mov
dec
dec
push
sbb
inc
pop
or
in
xorl
dec
mov
jmp
or
mov
sub
mov
sarl
jno
test
jno
xor
adc
call
add
addr16
lds
cmp
pop
imul
rcrb
add
mov
andb
out
test
addr16
negb
lds
dec
test
inc
mov
push
mov
sub
rol
xchg
inc
je
enter
int3
movb
popf
clc
out
pusha
fbstp
std
cmp
test
jnp
lock
dec
std
jbe
xchg
pop
aaa
and
je
popa
push
aaa
jg
cmp
sbb
repnz
jae
mov
dec
cli
mov
push
mov
mov
mov
jle
or
adc
movsl
jmp
mov
lods
jl
dec
cltd
inc
pop
xor
fcmovu
or
adcb
xlat
mov
cld
aad
jle
setns
push
and
test
icebp
and
sub
push
rcll
out
add
ds
cmpsb
popf
dec
mov
mov
dec
pop
jecxz
popf
pop
inc
iret
xchg
jl
in
pop
xchg
loope
test
mov
inc
lods
sbbb
stos
sbb
bound
sub
jge
loop
int
push
lea
add
shrl
or
sti
pop
xor
sub
das
mov
push
cld
cli
stc
insl
dec
jecxz
in
shlb
pop
imul
ljmp
sub
outsl
popa
or
mov
add
cltd
shll
clc
arpl
hlt
sbb
aam
add
inc
int
repz
xchg
lahf
and
iret
cmp
cmpsl
xorl
pandn
inc
xchg
in
pop
jno
aas
call
pop
inc
cmc
mov
cs
in
cs
push
out
js
pop
stos
mov
push
pop
int
dec
lret
mov
stos
sti
mov
outsl
push
adc
addr16
adc
push
mov
sub
jmp
lret
out
js
sbb
mov
das
movsl
xor
xchg
insb
push
pop
add
mov
mov
daa
inc
mov
cmpsl
fdivs
mov
int
icebp
xchg
xchg
sti
push
cmp
mov
xor
int3
mov
cmp
dec
sub
inc
xor
sbbl
and
cmp
jmp
ds
shlb
cwtl
cltd
jnp
sub
mov
sar
lods
jo
xchg
fiaddl
fistpl
cmp
adc
lods
in
mov
dec
lret
jae
movsl
sbb
push
mov
mov
incb
popf
pop
inc
out
or
xchg
in
bnd
jmp
cmpb
jp
cli
xor
fdiv
inc
cltd
push
imul
pusha
fildl
mov
and
rorl
cmp
jne
ret
inc
lret
mov
sarb
stc
sub
pop
loopne
jns
leave
daa
shlb
sbb
lcall
imul
and
mov
ret
inc
ljmp
mov
dec
pop
mov
dec
xor
in
dec
cmpsl
fdivrl
jge
sbb
pop
cmp
xchg
insl
cmpsl
lods
jge
add
in
repz
mov
outsb
imul
cmp
cs
sub
xchg
push
or
in
sbb
jo
xor
into
mov
push
ja
popa
push
mov
out
add
push
sub
push
pop
xor
jge,pn
adc
adcl
lds
jae
sub
movsb
xor
das
xor
push
pmulhw
jns
std
jge
lcall
jae
dec
jl
add
add
imul
mov
imul
shr
loope
test
rorb
rolb
movsb
cli
and
pop
mov
js
in
ja
pop
pop
jno
mov
bound
mov
mov
test
hlt
mov
mov
sahf
xlat
add
repnz
in
fnstcw
clc
adc
ret
and
mov
cmp
mov
mov
cmp
mov
jbe
inc
dec
push
stc
dec
sbb
jmp
jo
ja
lds
inc
cli
shl
test
push
icebp
mov
jnp
call
mov
pop
fisubs
xchg
addr16
lds
mov
fisubs
scas
push
cmp
dec
inc
loop
push
js
imul
sub
adc
sbb
iret
sar
jno
icebp
ds
sbb
jmp
adc
clc
push
or
ret
xor
xorb
xchg
cmp
or
cmp
mov
dec
add
sub
leave
test
lock
lock
mov
out
lcall
mov
movsl
mov
dec
das
and
fs
jg
lret
pop
cmpsl
popf
movsl
lahf
mov
pop
cmc
pop
lcall
shrl
mov
mov
sub
adc
ret
rcr
cmp
cwtl
test
mov
pop
ret
cli
dec
sar
lfs
sbb
xor
sub
jno
fisttps
mov
ljmp
mov
mov
jne
push
mov
enter
popa
flds
pop
movb
add
mov
xorb
inc
sbb
dec
pop
xor
shrl
dec
in
jbe
sbb
fmulp
lds
mov
into
pop
push
cmp
lcall
sub
js
pop
sub
ret
les
jb
inc
nop
pop
ret
mov
sbb
sbb
pop
dec
mov
mov
test
mov
arpl
inc
test
mov
sub
int
stos
cmp
lods
sbb
lea
inc
repz
xchg
sub
pop
es
test
add
fwait
and
adc
popf
dec
push
or
jmp
sbb
hlt
cmp
xor
shl
mov
pushf
pop
mov
adc
repz
pop
mov
icebp
xchg
xor
adc
adc
pop
jge
mov
xor
xchg
sub
inc
cltd
xor
lret
daa
in
loopne
sub
sub
cmpsl
repnz
xor
xor
sti
fcomps
mov
enter
fsts
inc
out
out
data16
aad
or
xor
stos
inc
fstpt
lods
mov
jb
shl
cld
add
cmc
dec
in
jl
jno
mov
or
inc
icebp
cmp
movsl
sahf
and
or
pop
and
cltd
ds
add
xchg
orb
mov
clc
mov
jb
sbb
bound
inc
mov
loopne
add
cmc
dec
icebp
sti
hlt
xor
enter
pop
xor
mov
mov
jge
scas
fdiv
shll
hlt
adc
dec
js
je
xor
ret
sub
xorl
out
ret
xchg
adc
lods
push
cli
xor
arpl
fstl
js
dec
mov
dec
mov
sub
outsb
add
xor
sahf
lods
push
sbbw
inc
test
mov
cs
popa
add
lahf
dec
negl
cmpsl
outsl
add
test
aam
jo
mov
cwtl
add
jne
pop
negb
dec
fldt
push
jnp
cs
xchg
push
mov
mov
stc
xor
xor
fdivs
xchg
push
into
in
out
xor
daa
or
lea
negb
jg
sahf
cli
leave
into
movsb
xchg
or
xor
mov
lret
jns
ret
cmpsb
lock
mov
ljmp
sub
insl
push
mov
xor
adc
pusha
int3
fcmovnb
jmp
push
filds
sbb
push
lret
sub
icebp
lahf
sub
adc
in
dec
lds
mov
inc
sub
xchg
sub
insl
pop
fisubrs
sbb
ja
and
pop
jmp
push
out
jne
xor
inc
jae
hlt
cmc
js
cli
out
add
cmp
out
mov
or
push
nop
xor
xchg
jo
loope
fcoml
notl
lahf
lret
fcoms
pop
dec
je
xchg
xchg
es
mov
fldt
ficoml
cmp
jb
inc
test
dec
leave
inc
lods
xchg
sti
inc
mov
out
hlt
mov
mov
jecxz
popf
dec
pushf
mov
mov
lea
scas
cwtl
enter
adc
push
movsl
sub
aad
push
mov
ss
jp
loopne
sbb
lahf
push
insb
jns
adc
rcrb
das
out
stos
fcmovb
fisttps
or
testb
xchg
xchg
mov
push
outsb
push
call
or
pop
ret
psraw
in
push
ror
push
mov
in
stos
add
dec
cmp
daa
ljmp
jb
mov
js
fmull
aam
cmpsb
aaa
jb
shlb
dec
sbb
jg
jae
jg
fsubl
adc
xor
cmp
outsb
movl
xchg
or
mov
dec
stos
inc
movsb
add
sub
inc
xchg
pop
movl
std
pop
aaa
cmpsl
ficoml
mov
fs
rorb
repz
lret
fidivs
push
mov
xchg
cli
rcl
stos
cmpsb
pop
cmp
out
subb
sbb
addl
pop
fwait
xchg
adc
dec
mov
mov
or
push
scas
test
push
insb
insb
mov
push
jmp
adc
push
mov
sbb
out
ret
sbb
dec
dec
repz
movsb
in
leave
mov
lea
sti
int3
jl
dec
test
sub
push
xor
xlat
fistl
mov
sbb
movsl
scas
pop
mov
arpl
xchg
loopne
xchg
bound
xor
nop
cmp
popf
sbb
bnd
lret
mov
loopne
insl
and
div
sbb
pop
cmp
enter
ja
jl
mov
jge
jg
mov
xchg
movsl
cwtl
mov
inc
xchg
dec
sti
mov
orl
data16
fists
cwtl
cmpsb
cmp
sub
push
mov
pop
iret
add
int3
mov
xor
notb
adc
pop
cmp
fistps
cs
jp
dec
cmpsb
ljmp
or
clc
inc
add
push
pop
enter
sbb
imul
jp
cmp
daa
pop
jg
leave
testl
int3
fidivl
cmp
test
aas
xchg
sarb
ficoml
bound
fistpl
pusha
add
sub
rcrl
adc
push
mov
sbb
int3
fistl
loope
and
jbe
pop
loope
mov
jne
jle
test
mov
push
sbb
push
imul
pop
fs
inc
imul
add
in
nop
sti
mov
xchg
lds
cltd
pushf
push
sbb
pop
mov
shrl
cmp
rclb
cmp
out
shll
pop
jns
pop
dec
into
shll
bnd
add
call
shll
pop
dec
pop
mov
mov
daa
dec
dec
sbb
dec
out
loopne
jb
xor
jb
stos
iretw
cli
sub
scas
or
pop
call
add
and
inc
insb
adcl
cmp
and
jle,pn
leave
mov
sbb
pop
or
hlt
scas
push
pop
push
cmp
pop
mov
dec
pop
pushl
out
adc
int
test
cli
pop
imulb
dec
mov
push
dec
test
insb
shr
cmp
mov
pop
popf
adc
in
popf
jnp
cmp
rcr
data16
pop
pop
fiadds
das
pop
and
ss
adc
jb
jae
out
fcmovne
sbb
lea
dec
nop
push
adc
mov
repz
sbb
pushf
test
and
out
inc
pusha
mov
adc
ret
fisttps
hlt
js
dec
xlat
cmpsl
icebp
jmp
dec
mov
dec
test
pop
adc
inc
jmp
push
mov
movsb
popa
pusha
pop
cmpsl
pop
push
sub
lods
or
sbb
dec
pop
mov
ljmp
dec
daa
es
fdiv
adcb
movsl
out
lds
xchg
xlat
in
pop
sub
loope
out
push
xorl
add
cmp
sbbb
and
pop
cmp
sahf
xchg
insb
loopne
mov
push
dec
mov
or
adc
cmpsl
dec
in
mov
in
mov
adc
scas
mov
inc
or
pop
adc
jnp
sbb
movsb
ja
push
dec
adc
popa
fisubrl
and
fwait
sub
shlb
dec
test
fnstenv
cld
aaa
push
addr16
scas
jle
sub
add
adc
push
fmul
mov
inc
cmc
xor
push
das
inc
or
sbb
push
inc
ficompl
add
rorl
mov
stc
int
add
enter
decl
aad
add
or
push
in
out
and
mov
decl
lods
aam
or
shl
jmp
lods
int3
imul
test
mov
sub
mov
int
ret
rclb
or
out
imull
outsb
addr16
mov
jp
lock
xchg
aam
adc
add
ret
aas
or
nop
xchg
subl
xchg
pop
call
repnz
rol
pushf
adcl
and
in
sub
faddl
mov
mov
aam
not
movsb
sahf
fisttpll
jge
icebp
imul
jbe
movsb
jnp
cltd
xchg
mov
aas
outsl
lret
pop
cmpb
inc
out
adc
cmp
or
cmpsb
les
cli
enter
arpl
inc
daa
mov
pop
sbb
mov
imul
mov
dec
imul
xor
xor
int3
test
add
mov
outsb
repz
test
test
test
mov
dec
fsubs
scas
push
adc
orb
icebp
aad
call
adcl
in
add
lret
push
xchg
mov
or
xchg
les
sub
fucom
imul
mov
adc
jle
jne
xor
cmp
loope
inc
pop
cmp
mov
dec
icebp
inc
mov
movsb
fadds
lods
jl
dec
cmp
fisttpl
lock
pop
jg
mov
pop
mov
movb
in
cld
inc
inc
push
xchg
out
mov
sti
daa
sub
sub
inc
push
nop
sbb
pop
outsb
jl
fidivs
scas
arpl
dec
mov
cld
inc
loop
outsb
xor
lods
and
fldcw
mov
mov
or
push
stc
cmc
lods
push
inc
inc
adc
or
push
push
pop
pusha
add
sbb
fsubs
out
xorps
enter
pop
nop
and
push
inc
sbb
sbb
pop
call
cmp
push
pop
mov
lcall
rclb
cmc
adc
out
xor
push
or
leave
mov
ss
pop
xlat
loop
xlat
inc
cmp
adc
sbb
jae
rol
inc
push
xlat
xchg
lea
dec
lret
daa
lea
dec
lret
into
push
mov
hlt
sub
dec
sbb
mov
mov
stc
jne
test
adc
and
jo
test
adc
and
pop
rcll
pop
mov
push
icebp
dec
and
roll
in
cmp
push
loopne
stos
xchg
out
fistps
pop
push
test
subb
filds
jge
or
mov
test
push
dec
push
daa
sbb
or
aaa
fnstsw
xor
push
pushf
cld
pop
pop
test
bound
and
cmpsb
push
jecxz
repnz
dec
jecxz
mov
dec
mov
dec
aaa
jge
sbb
xchg
fdivr
scas
daa
push
mov
dec
fildl
mov
addb
sub
sbb
out
loop
xchg
addb
loopne
fnstcw
mov
adc
lcall
hlt
mull
mov
bound
mov
cmpsb
pusha
movsl
pop
and
fbld
push
test
dec
mov
mov
xchg
sub
xchg
xor
ds
ds
scas
push
int3
cld
mov
add
insb
std
inc
test
inc
out
sbb
adc
pop
mov
sub
fcmovne
leave
or
sub
xor
int3
xchg
sahf
push
push
hlt
arpl
ret
cmp
rolb
sbb
clc
and
mov
push
or
mov
fadds
loopne
mov
mov
push
pop
mov
sbb
outsb
ds
inc
ret
ss
jp
cmp
mov
outsl
mov
out
repz
pop
xor
xor
dec
dec
push
pop
cmc
jno
movsb
mov
adc
jne
cmc
xlat
push
jns
push
sub
pop
xorl
push
repz
in
sbb
ds
out
mov
out
movsb
mov
jno
mov
inc
pop
inc
jl
repnz
out
dec
rcl
dec
xorl
mov
mulb
fwait
out
cmp
push
sbb
xor
ret
pop
into
lret
dec
pop
fisttpll
add
shll
mov
rcr
and
and
push
icebp
sbb
mov
enter
outsb
jg
enter
arpl
pop
scas
mov
push
xor
jl
push
and
nop
cmp
mov
les
lds
lret
mov
aad
out
imul
sub
xchg
repz
and
adc
inc
inc
test
pavgb
das
scas
xchg
xor
dec
cld
cmp
or
mov
cwtl
pop
ret
xchg
rclb
inc
or
shrl
push
inc
add
adc
rorl
nop
pop
lahf
dec
sbb
aam
clc
fcomps
test
lods
push
aad
xchg
fimull
shlb
push
lea
xor
lods
ret
push
jnp
das
ljmp
dec
mov
dec
pop
inc
je
or
arpl
outsl
cmp
js
dec
rcll
cmp
fld
popa
sti
sub
adc
xchg
jns
pop
std
jecxz
lods
mov
jmp
inc
outsl
or
or
jns
pop
sbb
and
shrb
rdpmc
rclb
mov
add
jb
je
es
jmp
mov
cmp
cmc
ljmp
and
popa
test
xchg
leave
fistpl
pop
pop
and
sub
outsb
testb
inc
lods
and
cmpsl
insb
int
xlat
out
fstpt
insl
lods
movsb
stos
push
arpl
ds
sti
test
push
push
xchg
lock
pop
or
add
and
pop
testl
and
push
repnz
xchg
mov
push
je
fwait
and
mov
movsb
cmp
push
and
adc
lods
fnstenv
xchg
mov
dec
out
mov
adc
rcll
adc
aam
fnstcw
cmp
adcl
dec
lcall
add
scas
mov
push
jge
stc
faddl
fldenv
pop
mov
scas
lret
clc
in
push
test
xchg
loop
divb
ja
add
mov
dec
lods
int3
add
pop
cmpsb
mov
in
shll
addl
movsb
jb
ret
mov
inc
call
faddp
iret
mov
and
ljmp
lock
and
insb
pop
sub
fadd
inc
outsb
pusha
adc
cld
mov
pusha
sub
das
pop
cmpsb
std
mov
and
mov
jge
dec
pop
loopne
sbb
cmp
xor
mov
and
push
lds
fstl
outsl
mov
gs
call
lods
mov
insl
cmpl
push
jg
sbb
mov
leave
inc
stos
sbb
xchg
mov
and
stos
dec
push
jne
xor
mov
pop
adc
dec
jecxz
ss
out
loopne
mov
pop
push
cmp
xchg
or
xor
popf
sbb
dec
gs
orb
popa
out
ja
je
xchg
xchg
pop
dec
xchg
jne
rcr
dec
xor
int3
rorb
daa
fsts
dec
cmp
roll
cmp
dec
xchg
and
clc
loop
les
or
sarl
xchg
jg
cmp
nop
lods
sahf
and
fucomi
loopne
sahf
std
cltd
lds
arpl
add
xor
pop
xchg
movsb
lret
cmpsb
add
xlat
aaa
push
jns
add
insl
rcl
shr
adc
cmp
lret
out
sub
mov
push
mov
dec
daa
filds
jno
insb
add
mov
lock
adc
sub
aad
mov
jae
fildll
and
jae
les
cmp
rolb
sbb
out
mov
lret
sub
inc
jns
orl
jae
sbb
xchg
addr16
or
imul
fbstp
in
push
or
addr16
pusha
pop
inc
shl
push
pop
mov
push
add
aaa
adc
loop
mov
sub
mov
rclb
rorl
mov
cmp
mov
dec
addr16
ficoms
jae
mov
push
mov
lahf
pop
jg
and
push
fstl
sub
sub
sub
mov
pop
push
movsb
lods
stos
push
lock
adc
mov
xor
rcrl
daa
test
push
xor
rcll
xor
cmp
lods
rclb
xor
cmp
andl
neg
xchg
push
jl
mov
mov
add
sbb
mov
sbb
out
lret
push
daa
push
and
fwait
pop
add
jle
inc
adc
pop
and
fldl
icebp
es
int3
std
aad
inc
lods
sti
mov
or
sbb
imul
les
std
out
aad
repz
or
stc
push
mov
fidivrs
xlat
push
jp
lea
pop
shl
jg
movsl
pop
sub
decl
inc
loop
test
jmp
jge
adc
push
mov
jge
pop
mov
mov
push
into
roll
rorl
mov
jns
pop
adc
add
out
jg
mov
jmp
mov
sarb
mov
sbb
mov
sbb
adc
imul
aaa
mov
inc
pop
cs
clc
push
loop
xlat
ja
divl
jg
cwtl
push
add
add
adc
repz
les
cld
sbb
xor
push
sub
dec
mov
imul
push
inc
out
add
and
rcll
jno
inc
mov
test
adc
cmc
sbb
add
xchg
xchg
mov
ds
cmp
cmp
imul
je
push
inc
std
mov
mov
leave
iret
xchg
cmc
sbb
push
push
sub
cmp
xchg
inc
xlat
das
lret
add
das
xor
push
jp
fildll
mov
pop
or
mov
mov
mov
add
stos
sti
scas
cmpl
add
sbb
xchg
inc
cmp
and
and
adc
sahf
arpl
dec
cmp
test
cltd
lret
push
mulb
push
in
sbb
mov
stos
add
loopne
adc
lahf
leave
cmp
outsb
icebp
fdivrl
pusha
inc
mov
pop
fimuls
gs
jg
lea
pop
ficompl
mov
sub
sahf
sbb
jns
adc
mov
xchg
push
jb
icebp
loope
imul
pop
mov
mov
aas
and
add
pusha
int3
jbe
pusha
aas
je
andb
imul
push
ja
jecxz
sti
rcrb
add
femms
mov
mov
test
sub
aad
sub
fcmovu
dec
fwait
in
jno
jp
pop
push
xchg
in
inc
add
loopne
cmpsl
out
dec
lcall
push
in
mov
pop
add
cmp
pushf
jno
rcr
shrb
stc
and
inc
mov
pushf
pop
in
scas
std
insb
jo
and
jle,pn
in
mov
sahf
fsub
and
inc
das
mov
mov
and
fs
xchg
stos
lret
xor
cmp
cmc
cwtl
lret
add
aaa
out
mov
xchg
adc
iret
dec
aam
iret
cmp
rorl
lock
mov
rorl
mov
cmc
inc
mov
das
iret
enter
lahf
add
lods
pop
sarb
jge
jne
cwtl
in
mov
cmpsb
or
jecxz
iret
cmc
cld
subb
in
popa
sbbl
inc
mov
cld
jbe
jle
mov
jns
in
lods
mov
add
push
cmp
push
movsl
das
push
sbb
lods
mov
mov
pop
jbe
inc
je
and
sbb
push
std
xor
inc
mov
loopw
xchg
lea
pop
push
push
clc
adc
icebp
or
repz
in
adc
roll
or
adc
fidivrl
ljmp
insl
lret
jne
data16
decb
scas
dec
iret
test
sarb
dec
mov
test
enter
inc
dec
mov
xor
xchg
pop
sbb
leave
cltd
pushf
xchg
sub
cmpsb
test
in
cmc
lcall
jno
xor
fucomi
movsb
lret
xchg
mov
in
push
imul
sub
cmp
add
xor
or
inc
pusha
push
aad
cmp
lea
out
bound
or
jecxz
sub
dec
out
test
stos
daa
stc
pop
test
pop
fidivrl
jne
xchg
xor
xor
or
sbb
push
dec
fisubl
pop
insb
sub
sbb
xchg
or
loope
xchg
jae
rcll
in
popa
add
xorb
or
aas
out
push
inc
sub
mov
xchg
pop
lods
dec
sub
mov
cmp
pusha
int
iret
mov
xorb
jl
pushf
cmp
icebp
push
push
test
pop
out
pusha
and
jecxz
mov
or
rorb
lea
scas
xor
neg
xchg
xor
jns
xchg
push
pusha
pop
lret
call
lea
rcll
xlat
mov
std
mov
icebp
int
ljmp
mov
fsubrs
subl
jbe
jge
pop
ja
nop
cmp
mov
lret
in
push
sbb
scas
adc
out
adc
int
sti
mov
clc
jmp
fidivrl
xchg
stc
cwtl
loop
loop
inc
scas
orb
push
aaa
xchg
sub
sub
pop
sub
outsl
sbbl
cmp
xor
fucompp
lea
cmp
jecxz
xchg
pop
mov
faddl
test
aad
enter
sub
mov
and
sub
shl
push
shl
es
and
and
outsl
cwtl
sbb
cltd
popf
lahf
cmpsl
dec
sub
stos
aaa
add
inc
or
mov
pop
push
lret
lock
dec
dec
bound
cld
adc
dec
mov
scas
dec
xorl
cmp
out
pop
mov
and
sti
sub
rcrb
aaa
ljmp
inc
repz
ja
lret
jae
xchg
lds
inc
cmp
stos
lods
stos
mov
cld
jbe
test
lret
rclb
and
push
aaa
push
and
push
add
cmp
outsb
mov
dec
out
pushf
jle
sub
mov
fimull
sbb
lods
add
xchg
iret
lds
outsl
rolb
out
stos
gs
push
mov
mov
stos
cld
sub
fwait
ss
mov
leave
mov
stos
nop
jp
popf
and
dec
hlt
lea
cwtd
pop
stc
icebp
ljmp
jmp
stos
je
pop
pop
push
arpl
mov
loop
pop
xchg
push
inc
jbe
lea
std
and
xor
int3
dec
mov
enter
mov
fdivrp
mov
loop
mov
data16
das
fcoml
fs
mov
das
add
outsl
or
lcall
mov
push
imulb
mov
out
push
mov
dec
cmp
rcl
sub
mov
lock
sub
xchg
mov
addl
add
mov
jbe
fwait
dec
sub
jg
addl
cs
sti
xchg
lods
cmp
xchg
push
add
and
mov
daa
pmullw
inc
sahf
pushf
rcll
rol
adc
mov
adc
fimull
adcl
adc
inc
addl
lea
sub
cmp
push
or
ljmp
pop
das
mov
in
mov
loope
push
or
push
and
mov
or
cmp
cwtl
xchg
mov
fldl
xor
or
daa
inc
lods
lret
push
test
pushf
imul
sub
adc
jl
push
pop
out
jb
sbb
loopne,pt
fcmovb
adc
out
data16
insb
xchg
xchg
xor
and
sahf
das
in
dec
pop
ss
pop
mov
xchg
lock
aas
fwait
cli
xchg
cmp
xchg
push
rep
cvtdq2ps
xorb
pop
insl
cmp
fadd
ds
insb
sbbb
out
sub
sub
icebp
out
fadds
push
jns
sbb
dec
push
das
mov
lcall
jle
fsubrs
arpl
ret
mov
in
xorl
cmpsb
and
or
mov
push
call
push
jbe
test
push
mov
adc
pop
sbb
cli
dec
sbb
ret
sub
fcmovb
sub
aad
push
popf
inc
stos
int
adc
xchg
test
test
outsb
push
fidivrl
lds
jb
pop
xor
jnp
andb
cmpl
and
cmp
call
mov
std
inc
fidivl
jns
inc
xchg
xchg
mov
inc
mov
sub
cmp
or
xchg
popf
repnz
xchg
orl
fsubr
aas
cmp
dec
mov
into
cmp
aaa
push
leave
pop
int3
out
fdiv
mov
xor
push
jle
lods
call
xor
sub
sub
aas
xchg
mov
add
xchg
cmpsb
pop
and
fildll
jns
adc
aaa
lahf
inc
clc
arpl
xchg
or
stc
repz
sub
shrb
outsb
inc
int
jae
addr16
inc
adc
xor
add
push
mov
pop
outsb
movsl
xor
outsb
xchg
pop
adc
js
rcll
out
mov
xor
scas
xorl
lds
mov
cmpb
xchg
in
movsl
inc
sub
pop
push
out
shl
adc
and
sahf
push
imul
add
or
les
enter
idivb
std
aad
arpl
pop
divl
mov
adc
dec
inc
pop
lret
mov
bound
arpl
lahf
cmp
lds
mov
mov
jecxz
mov
ret
mov
dec
sbb
pop
lods
inc
xchg
xchg
icebp
imul
push
sbb
clc
xchg
pop
sbb
dec
and
mov
sarb
and
icebp
imul
push
adc
dec
outsl
test
mul
jp
mov
cmp
aas
movsl
mov
aaa
imul
mov
xor
push
loope
sti
xor
mov
mov
sbb
and
ret
pop
dec
out
mov
aam
cmpsb
out
inc
mov
scas
cmpsb
fimuls
test
inc
push
jg
and
test
or
cs
leave
sbb
js
lods
pop
test
sbb
cmp
out
lcall
and
inc
push
lret
fldl
pop
jae
add
pop
scas
xor
loop
mov
jno
jmp
cltd
loop
das
pop
lret
fcompl
in
adc
lahf
xchg
fldl
push
mov
aad
jae
add
insl
mov
sub
push
and
mov
pop
xchg
cs
or
cli
mov
js
data16
push
push
adc
lcall
insb
and
sbb
mov
inc
fs
xor
fnstsw
cmp
std
pop
cmc
pop
ja
sbb
out
jle
mov
insl
push
rcr
into
int
sub
dec
jo
imul
shl
std
in
push
daa
and
pushf
push
dec
cli
fimuls
mov
outsl
mov
sub
pop
aaa
jecxz
push
sub
mov
lock
sti
stos
mov
sub
push
test
bound
sbb
lret
xchg
in
jne
loop
jns
scas
ljmp
mov
test
in
inc
shrl
test
xorb
pop
stc
add
mov
lock
pop
inc
adcb
dec
pushl
filds
dec
pop
pop
popa
rcl
pop
or
fidivrs
cmpb
hlt
pushf
xchg
mov
push
mov
push
lahf
movsl
or
out
sbb
sbb
jns
test
jnp
cld
dec
mov
enter
dec
pusha
mov
inc
fneni(8087
std
pop
push
dec
push
xchg
test
xor
test
out
idiv
add
stos
mov
xchg
int
jecxz
cmpsl
movsl
adc
outsb
cmc
mov
sbb
adc
mov
pop
sub
xor
sub
jg
dec
pop
and
inc
push
addr16
idivl
mov
pop
dec
int
adc
inc
mov
xchg
dec
sub
inc
jmp
push
cmc
mov
sbb
push
push
adc
repnz
jl
popf
mov
jo
nop
mov
or
sbb
inc
or
xor
arpl
mov
mov
sub
mov
neg
idivb
adc
push
adc
cmp
or
mov
jno
dec
sub
lret
out
jg
mov
jmp
mov
jae
add
add
cmpsl
cmpsb
dec
js
inc
faddl
xchg
loop
pushf
mov
inc
scas
or
sbb
lods
mov
popa
rcl
arpl
cli
aad
adc
push
jno
fcoml
jo
push
adc
fsubrp
mov
mov
inc
mov
arpl
les
push
pop
fstp
pop
inc
sti
sbb
roll
outsb
notb
ret
xchg
add
aaa
bound
les
adc
xchg
sub
ret
mul
xchg
pop
in
xlat
adc
call
mov
mov
insb
into
stc
add
clc
fwait
adc
cwtl
xor
movsb
cwtl
push
gs
pop
rclb
out
and
lret
cmc
rclb
mov
sub
xchg
addl
mov
cmp
insl
std
mov
dec
or
jle
inc
enter
into
mov
jns
push
mov
sub
outsb
push
mov
or
fnstsw
jmp
adcl
mov
push
fcmovb
xor
imul
addl
fnsave
mov
sbb
or
mov
xor
mov
jne
mov
popfw
pop
or
sbb
jle
cmp
or
leave
call
and
les
mov
push
mov
sbb
push
mov
popa
sbb
push
mov
xor
jle
xchg
xor
cmpb
push
shl
ljmp
cld
pushf
xor
pusha
shll
add
lahf
aas
cmp
or
pop
cmpsb
sbb
pop
aaa
adc
imul
pop
inc
loope
js
adc
popf
cmpsb
fnstsw
data16
add
insl
sbb
inc
inc
out
jo
pop
push
cmp
test
add
daa
lret
add
imul
pop
sbb
lahf
push
push
test
pop
jae
mov
xchg
test
outsb
jno
pop
xor
std
push
mov
js
into
loope
xchg
icebp
push
ljmp
loop
xor
in
mov
sbb
cmp
sti
mov
push
xchg
scas
mov
adc
add
imul
cmp
push
mov
sbb
jno
mov
mov
adc
lds
out
shll
icebp
xlat
or
sub
movsb
leave
sub
push
lock
test
add
add
pop
and
adc
sub
sbb
inc
xchg
push
cli
cmp
movsl
aaa
jge
sub
push
xor
insl
cmp
mov
jbe
cli
xchg
daa
notb
sahf
push
push
and
jg
in
into
nop
pop
cmp
mov
fmull
jmp
mov
ja
test
push
mov
pop
jnp
dec
inc
jle
mov
mov
pushf
loope
add
jbe
jl
jne
xchg
push
jo
out
and
mov
bound
pop
les
sbb
ljmp
mov
adc
subb
xor
xchg
xchg
in
jbe
minps
es
sub
pop
dec
jg
popf
lahf
sub
mov
sbb
aad
test
adc
xchg
scas
or
das
inc
neg
cmpsl
sti
or
push
icebp
test
mov
lahf
push
inc
fldenv
jecxz
das
lds
test
mov
data16
ljmp
int3
or
push
lahf
adc
jmp
adc
jg
mov
cmp
into
and
loope
cmc
sub
insl
icebp
add
in
rclb
adc
push
enter
lret
add
inc
loop
sbb
push
cmp
add
jp
inc
fidivl
xchg
jecxz
sbb
pop
xor
or
or
lahf
sub
and
push
inc
push
fmuls
mov
mov
jbe
stos
dec
scas
add
adc
xchg
jp
mov
fstl
xlat
jne
call
lret
mov
sbb
jne
mov
adc
movsl
sbb
scas
in
mov
or
or
inc
push
add
push
fcomp
cmpsl
mov
test
pop
jge
xchg
mov
negb
pushf
adc
xor
or
adc
int
adc
sbb
int
dec
push
lods
cmpsb
imul
mov
inc
leave
pusha
lods
fisubrl
mov
outsl
xor
lock
aas
sarl
mov
mov
xor
pop
xor
test
ss
fsubl
dec
pop
icebp
push
das
int
inc
xor
loop
and
aas
xor
xor
dec
inc
push
pop
xor
add
hlt
xor
dec
xchg
add
into
pop
mov
lret
xor
lret
and
shll
xlat
fstpt
lods
sub
aad
mov
sub
movsb
icebp
jbe
or
mov
in
bound
lcall
sbb
loope
stos
adc
mov
dec
pop
jl
fldcw
outsb
mov
je
mov
xchg
int3
mov
scas
lock
push
nop
pusha
jnp
or
je
dec
pop
popf
xchg
mov
in
out
sbbl
movsl
gs
xor
push
push
movsl
sti
adc
clc
cltd
dec
outsb
xchg
pusha
pop
pop
jbe
mov
jmp
cmp
sub
or
pop
pop
sarb
dec
add
jle
adc
lcall
jbe
arpl
test
cld
imul
or
adc
xor
dec
jg
fisttps
lcall
arpl
or
mov
push
aam
cwtl
mov
jb
mov
mov
xchg
pop
fstpl
mov
stos
aad
mov
inc
shll
mov
fcomp
sbb
add
dec
and
xlat
outsl
xchg
mov
inc
movsb
pushf
ljmp
mov
test
fldenv
xchg
push
outsl
mov
sarl
out
jb
lret
add
icebp
inc
mov
pop
and
pushf
scas
pop
pop
mov
jmp
loope
out
pop
push
in
push
pusha
pop
outsl
loopne
je
sub
jecxz
in
and
shlb
loop
adc
xor
loop
and
xchg
insb
inc
sar
cli
insb
xor
jecxz
aam
mov
and
cmp
dec
sub
imul
mov
mov
arpl
cmpsb
rol
mov
pop
jg
push
mov
lock
add
xchg
push
push
dec
lahf
jge
and
gs
xlat
leave
cmp
rcr
pop
insb
xchg
das
lock
pop
inc
in
mov
incb
outsl
add
std
pop
sub
icebp
push
jle
add
adc
loop
pusha
mov
in
ret
sub
gs
dec
jne
inc
pushl
push
and
inc
dec
push
sbb
and
dec
pop
mov
push
push
cmp
dec
and
push
das
fildl
xchg
sub
xor
mull
push
cltd
xchg
xchg
cmc
stos
jns
loop
lods
xchg
imulb
iret
cmp
sub
pop
out
ret
mov
adc
addr16
mov
ja
or
insb
pop
xchg
adc
adc
jbe
adc
dec
hlt
xor
movsl
test
cmpsb
sbb
dec
cvtps2pi
jecxz
pop
cmpsl
insb
pop
les
pop
into
insb
push
or
ljmp
mov
hlt
test
pop
jl
lret
test
out
mov
pop
popa
les
movsb
leave
sbb
jmp
popa
inc
das
xor
and
stos
or
iret
xor
sarb
jg
fisttpl
pop
jns
repz
sub
insb
aad
in
inc
jle
repz
orl
and
add
pop
nop
mov
shll
hlt
repnz
scas
roll
xor
push
mov
nop
xor
cmc
ljmp
mov
add
xchg
addr16
adc
sbb
mov
mov
and
insl
cmpsl
cmc
push
jmp
xor
sbb
mov
inc
sub
adc
pop
cmp
add
or
xchg
std
insl
fldenv
cmp
dec
mov
jmp
test
jge
sahf
push
and
lahf
mov
neg
daa
jne
mov
clc
sub
cmp
into
jg
sbb
adc
mov
adc
notl
cli
add
xchg
movsb
sbbb
adc
xchg
aas
pmaxsw
fcoms
adc
pushf
mov
adc
mov
cmp
jle
mov
xor
cmp
cmpsb
insb
fcmovnu
popa
and
inc
adc
jecxz
and
or
scas
in
stc
pop
dec
idivb
jge
push
jle
jmp
sub
mov
push
orb
frstor
outsl
mov
mov
inc
adc
arpl
sbb
gs
mov
sbb
cmp
push
cmp
adc
sub
jnp
dec
sbb
bound
movsb
inc
sub
xor
std
cld
lods
add
not
mov
adc
inc
mov
mov
daa
pop
scas
pop
std
jb
dec
dec
cmpl
mov
pop
jmp
or
inc
xor
sbb
push
addb
xchg
ja
jae
adc
int
in
repz
lds
ficoml
lods
insl
xchg
adcl
cmpsb
cmp
int
pop
xor
mov
add
hlt
loop,pt
jo
enter
sbb
xor
cmp
arpl
loop
inc
aas
aam
push
inc
push
cmp
fld1
mov
xor
movsl
inc
pop
mov
push
out
jle
loopne
lcall
inc
mov
cld
repz
add
out
je
shrl
add
movsl
data16
sub
mov
push
iret
mov
dec
stc
in
call
and
mov
jge
pop
into
and
add
rol
push
push
cltd
test
or
and
dec
jl
fidivs
push
mov
or
sbbb
xor
xchg
mov
mov
sbb
test
mov
je
adcl
pop
mov
cwtl
push
sbbl
in
cmc
push
mov
add
nop
lea
adc
pop
arpl
aaa
cs
int3
cmc
clc
imul
mov
mov
xor
js
pop
adc
dec
or
add
dec
xor
arpl
xor
insl
sahf
jp
add
out
xor
push
dec
test
xor
and
popa
sahf
add
add
mov
mov
pop
and
ret
ret
cmp
cmpsb
add
adc
pop
cmp
iret
fdivrs
test
add
js
popf
lds
mov
mov
cmpsl
mov
int3
sub
sub
mov
push
in
test
popf
popa
nop
iret
rcl
and
pop
xchg
dec
mov
and
sub
icebp
aad
mov
out
push
jo
push
adc
jnp
mov
mov
jne
stos
sahf
mov
or
push
or
repnz
cmp
cs
xor
leave
cmp
es
cmp
cld
rcrb
fiadds
adc
mov
mov
mov
sbb
xor
std
imul
std
shl
mov
icebp
sbb
leave
pop
jno
repz
push
cmp
push
xlat
dec
dec
sbb
push
add
movsl
jecxz
pop
push
into
bound
push
inc
sti
push
dec
in
cmp
dec
mov
cltd
icebp
push
add
mov
andl
fwait
xchg
into
xchg
js
and
push
push
mov
inc
clc
sub
xchg
repnz
xchg
jp
cmp
pushf
loope
jmp
xchg
mov
fldz
push
add
lods
lods
sbb
mov
lods
cmpsl
ret
fs
pop
sbb
daa
and
data16
sbb
or
mov
jno
movsb
lahf
repz
xor
jp
sbb
inc
cltd
in
mov
inc
popf
mov
pop
sahf
inc
jns
hlt
xchg
ljmp
jae
popf
repnz
scas
outsl
hlt
mov
add
xor
pop
fidivs
lret
jne
pop
test
pushf
mov
add
cmc
add
pop
idivb
in
xchg
lahf
sbb
sarb
out
add
mov
mov
or
pushl
inc
mov
iret
push
sahf
in
insb
lds
repz
mov
stos
pop
dec
ret
mov
leave
cwtl
xor
xchg
jmp
loope
icebp
push
push
daa
lods
cmpsl
loop
repnz
stos
sarb
xor
outsl
sbb
or
and
jge
and
shll
fwait
int3
pusha
fdivp
or
sbb
adc
psllw
pop
adc
sub
or
push
lea
shlb
in
jl
inc
stos
fnstcw
add
jge
jg
cli
shr
fdivs
inc
pop
pop
and
and
add
popf
pop
pop
push
loop
push
dec
int3
stc
out
test
icebp
pop
imul
add
pop
push
out
dec
dec
call
cmpsl
adcb
inc
push
mov
jno
test
in
sbb
jmp
pop
andl
ret
scas
dec
inc
push
ret
not
cwtl
fsts
fwait
ret
mov
mov
xchg
jp
leave
fwait
iret
inc
insb
jecxz
sbb
jl
out
test
fidivrs
inc
std
bound
dec
sbbl
add
test
in
in
in
push
dec
dec
js
mov
popf
push
or
xchg
test
jge
or
fs
stos
jnp
cmp
pmuludq
mov
pop
inc
pop
xchg
cmp
dec
outsl
inc
imul
add
movsl
out
inc
es
jno
dec
push
add
mov
xor
out
ret
mull
xchg
pop
and
jg
dec
pop
mov
cli
pop
push
or
push
jne
inc
ret
mov
iret
push
fstp
out
repnz
sub
inc
pop
shlb
xlat
and
popa
sbb
jge
cmp
pushf
adc
test
repz
xchg
xor
xchg
push
sub
sub
push
lret
sbb
dec
aam
xor
sub
jno
push
gs
sub
pop
xor
jbe
mov
in
mov
xchg
addr16
outsl
xor
scas
fadd
mov
sbb
call
mov
jnp
fisubs
lret
sar
bound
decl
push
sbb
testb
call
nop
or
pop
jns
mov
add
pop
lods
sub
sub
sbb
push
cltd
xor
inc
mov
inc
jb
popf
lock
ja
mov
popf
roll
leave
mov
dec
sbb
or
icebp
sub
popf
iret
xchg
ret
outsl
dec
dec
and
adc
lret
sub
mov
cmp
mov
outsl
push
xorb
lahf
dec
rcll
mov
or
mov
xor
sbb
insl
and
loop
dec
inc
mov
pop
fcompp
push
inc
cld
mov
push
subl
and
ds
pushf
sbb
sbb
lods
lret
ss
mov
inc
mov
jecxz
dec
ljmp
sbb
adc
call
stos
aas
cmp
mov
inc
int
push
jg,pt
or
push
jmp
push
sti
cmp
mov
repnz
push
loop
xchg
popa
and
mov
lock
ljmp
sub
mov
dec
repnz
pop
gs
mov
mov
xor
add
or
decb
mov
inc
jmp
imul
mov
mov
pop
cmp
jo
shll
lods
addb
mov
add
lock
xchg
dec
mov
ret
jbe
fsubs
ljmp
sbbb
or
jg
stos
add
arpl
lret
lods
inc
ss
mov
xchg
rcll
mov
xchg
cmp
jmp
fwait
push
push
add
pop
lea
or
inc
in
hlt
add
sbb
nop
ret
stc
out
rcl
ss
orl
push
scas
stos
stc
cmp
lock
sbb
pop
outsb
cmp
mov
cltd
mov
fmuls
jle
add
imul
dec
int3
enter
ja
cmpsl
aas
and
xor
pop
insl
fs
fnsave
jmp
std
test
xchg
xor
sbbb
xchg
jne
adc
stc
or
xlat
jne
leave
push
cmp
aam
div
push
xchg
icebp
mov
or
jge
xor
sbb
push
mov
shl
addr16
hlt
addr16
mov
repz
push
mov
fistl
mov
hlt
xchg
add
sub
dec
and
arpl
sub
xchg
adc
movsb
push
cmp
sub
or
outsb
and
push
out
lds
cltd
sbb
add
sbb
les
lret
ret
movl
xchg
in
stos
jo
test
pop
jbe
jp
repnz
or
pop
mov
push
sub
call
pusha
ffreep
enter
inc
jbe
mov
push
push
mov
adc
pop
mov
sbb
add
sub
nop
add
or
imul
mov
je
adc
popa
mov
jle
je
push
loopne
fwait
ret
xor
das
cmp
jb
push
adc
out
mov
push
loope
adc
hlt
addr16
xchg
out
fwait
clc
in
es
cmp
mov
in
sbb
push
in
cmp
jecxz
shl
hlt
push
sub
add
cmp
dec
add
lods
sarb
cmp
scas
jae
popa
mov
mov
push
insb
das
scas
sar
ljmp
sti
int3
and
xor
push
out
push
test
pop
mov
push
movsb
fbstp
sub
je
es
mov
mov
bound
clc
mov
outsb
pop
lock
loopne
mov
xor
decl
call
mov
popa
mov
dec
fcmovu
fs
push
loop
das
sub
icebp
mov
fdivrs
sub
mov
mov
add
je
cmpsb
clc
dec
int
fsubrl
xor
xor
movsb
push
and
inc
and
pop
mov
sbb
popa
fwait
push
insl
cmpb
push
cmp
push
notb
scas
cmp
js
or
xchg
xchg
sub
out
loopne
test
lods
and
mov
and
imul
xchg
sbb
add
f2xm1
dec
mov
push
pop
aaa
or
repz
loopne
shl
sbb
aaa
mov
cmpl
or
and
mov
sub
inc
insb
pop
add
sarl
and
dec
addr16
ljmp
cmp
out
negl
adc
test
stos
sbb
push
mov
iret
rcrb
inc
outsb
bound
adc
sub
mov
imul
pop
rcrl
push
xor
test
dec
repnz
or
xor
mov
dec
inc
es
sub
or
jp
test
xchg
and
enter
clc
fcmovbe
arpl
shrl
cld
add
insl
je
movsb
jo
rcrl
pop
gs
lds
dec
repnz
dec
sbb
test
and
adc
mov
les
std
cltd
icebp
es
jb
shll
ss
vmulps
lahf
dec
repnz
mov
cmpsl
jne
dec
mov
cld
cli
cli
jne
in
cmp
sbb
add
xor
cmpsb
mov
es
xchg
fldenv
and
fs
scas
int
icebp
mov
insl
enter
test
fwait
pop
jae
fcomps
add
jnp
cmp
push
xchg
jle
es
mov
jne
inc
jne
inc
addr16
pop
jl
imul
pop
jl
rcr
adc
sub
pop
or
inc
push
mov
rol
les
xchg
cmpsl
pop
cmpsb
shlb
fisttpl
gs
mov
rcr
pop
jns
addb
mov
fimull
inc
dec
addl
pop
cmpsb
fiadds
jns
or
lret
or
jno
sbbl
push
cmp
push
sub
cmp
out
fimull
out
mov
or
jp
into
pextrw
bound
add
add
aam
sarb
add
pop
inc
and
out
lds
pusha
xchg
leave
mov
mov
imul
cmc
repz
sub
sub
loop
jg
mov
leave
test
xor
mov
mov
cltd
cltd
mov
aam
mov
or
push
jp
jp
push
inc
adc
aad
enter
push
cltd
sub
out
push
xchg
scas
fildll
xchg
mov
jae
lock
call
ja
adc
adc
mov
loope
pushl
pop
aam
rclb
adc
out
add
repz
xor
dec
and
dec
stc
arpl
loop
ljmp
dec
jns
imul
mov
lcall
lds
int3
sbb
dec
xchg
sbb
les
test
or
xor
shl
adc
das
mov
stos
or
js
mov
inc
add
cli
sbbb
sub
cmp
test
filds
sub
xchg
in
dec
fs
cmpl
pop
mov
lahf
cmp
ja
popf
scas
jo
inc
shlb
or
add
push
negl
int
sub
xor
arpl
sbb
mov
into
jae
lret
cmp
sti
pop
leave
inc
scas
push
das
clc
rolb
sar
push
aas
jb
stc
and
xor
enter
xor
insb
add
fsubl
sbb
or
fwait
cmp
mov
loop
je
xchg
jbe
inc
push
adc
dec
out
xchg
adc
sub
pop
test
imul
and
movsl
push
mov
dec
push
into
adc
fldenv
ds
mov
sub
in
sub
cmp
cmc
scas
cmp
inc
inc
out
or
imull
xchg
cmpsl
lahf
or
int
inc
loope
imul
push
aad
cmpsb
or
int3
sub
iret
jge
fldenv
pop
pop
idivl
insl
lea
inc
lock
adc
pop
bound
mov
sub
mov
and
adc
enter
push
push
xchg
lcall
pushf
xchg
xchg
lods
bound
fmull
cmp
rep
xchg
mov
pop
jp
ss
fisubl
adcl
rorl
dec
jge
sub
cmp
sbb
lock
call
cmp
ficoms
inc
in
jmp
and
push
addr16
idivl
push
mul
add
test
dec
adc
mov
pop
add
rolb
push
movsb
inc
add
mov
sub
jl
mov
in
xor
ja
jg
arpl
xor
inc
int
call
inc
fdivrl
pop
add
addb
push
mov
outsb
fadds
sbb
mov
in
shl
fsts
sti
cs
push
pop
sub
and
cmp
addb
shlb
jmp
sbb
xlat
pusha
sarl
fsubl
adc
cli
fs
sbb
cwtl
test
inc
mul
mov
lods
mov
pop
xor
pop
jecxz
mov
cmp
lea
es
mov
push
push
inc
sbb
leave
cs
mov
les
lods
fidivrs
inc
sub
pop
sub
arpl
lahf
lret
inc
out
gs
and
sbb
and
mov
mov
mov
decl
push
mov
hlt
cmp
ret
lahf
mov
leave
adc
xchg
movsb
xchg
push
in
jnp
popa
in
add
sub
ljmp
inc
mov
xor
mov
mov
sbb
xchg
mov
mov
pusha
or
mov
scas
xchg
or
mov
mov
icebp
test
pop
cmpsb
ret
icebp
cltd
ss
adc
inc
fdivrl
daa
jne
add
cmp
or
push
add
xor
out
push
scas
add
sahf
arpl
jecxz
pop
cld
add
sbb
push
gs
ret
fmull
js
jecxz
add
inc
test
jbe
in
lret
push
sbb
cwtl
fwait
ss
in
rolb
and
ss
daa
ror
and
outsl
cmp
xchg
mov
xchg
out
dec
xor
arpl
enter
test
frstor
jg
insl
inc
jg
xchg
inc
push
cmp
dec
jmp
in
out
pop
adc
sbb
shrl
fisubl
test
scas
dec
add
inc
test
rcl
cmc
mov
pop
dec
push
push
mov
nop
fistps
loop
pushf
lea
jne
iret
int
jbe
stos
dec
cli
mov
inc
mov
scas
test
pop
lock
shrb
sub
mov
xchg
sub
cmp
cmp
dec
leave
int
leave
mov
sbb
jo
pop
cmp
fsub
cmp
nop
mov
xchg
xor
data16
rcrb
jno
pusha
mov
out
inc
adc
cwtl
addl
push
lods
jle
loopne
mov
mov
and
pop
push
into
movsl
add
testl
cmp
dec
cwtl
dec
sub
xor
sub
lcall
mov
or
out
push
sbb
dec
pop
iret
push
iret
cmp
int3
aas
cld
dec
mov
cwtl
loopne
daa
xchg
pop
xor
xor
add
popf
pop
data16
pop
mov
fstpt
arpl
mov
sbb
push
insl
fnstenv
je
roll
xor
addr16
add
fadd
neg
dec
mov
or
mov
xor
and
pop
in
sbbl
jb
mov
pop
rcr
push
pop
iret
mov
lret
jle
xlat
icebp
cmp
mov
inc
adc
icebp
outsl
mov
mov
push
ja
mov
jle
fdivp
adc
loopne
jnp
lret
sbb
and
fisttpl
or
jne
cld
and
shrb
mov
shl
in
cmp
jne
sbb
adc
xchg
jp
inc
lods
cs
dec
aaa
out
popf
cs
cmpsb
pop
fnstenv
cmp
gs
pop
sub
push
insl
fsubs
push
outsb
scas
loope
xchg
lret
inc
leave
inc
faddl
je
cmp
and
xchg
add
cmp
add
pmaxsw
iret
xchg
push
xor
repz
xor
ret
push
shl
inc
imul
lods
ljmp
jbe
jp
mov
mov
daa
dec
inc
cmpsb
and
push
cwtl
xchg
adc
ss
sbbl
xlat
mov
and
jmp
mov
push
push
scas
int3
cmpsl
ret
push
cmp
dec
jecxz
jl
jae
fbld
adc
int
sbb
popa
dec
adc
jno
std
fbstp
mov
sti
scas
fildll
inc
xlat
add
icebp
rclb
mov
pop
aaa
jbe
mov
outsl
pop
outsl
push
push
sub
pushl
xchg
pop
mov
lods
or
and
rcll
aaa
inc
insl
pop
adc
movsb
jecxz
sub
lret
inc
push
out
call
call
data16
iret
add
sti
xchg
aas
push
add
test
mov
cwtl
inc
or
aam
out
jno
sub
sbb
das
mov
jns
movsl
lret
data16
xchg
xchg
gs
xlat
add
pop
xor
xchg
outsl
xlat
bound
out
cmp
ljmp
lea
fcomp
pop
les
jno
push
leave
sbb
pop
clc
pop
jp
lock
jbe
call
or
pop
test
aas
std
jb
repz
mov
sbb
mov
jno
cmp
cmc
fidivrl
ret
and
cmp
pop
push
jg
test
add
aad
adc
fwait
adc
and
out
je
mov
xchg
adc
das
negl
mov
jnp
adc
loop
test
push
sbb
lods
ss
jge
lock
lods
pusha
jmp
inc
lea
out
jns
testb
mull
jmp
mov
xor
and
mov
subl
out
add
fadds
add
jae
fld
or
sbb
lds
sub
push
scas
pop
mov
sahf
popf
mov
push
sbb
pop
sbb
sbbb
mov
rcll
jmp
dec
stc
push
out
test
loope
push
loopne
rclb
movsl
fmulp
popf
aas
add
out
lret
add
ficompl
es
inc
fs
ljmp
lea
lcall
adc
js
inc
jg
into
inc
stos
gs
xchg
lea
inc
sbb
sub
inc
shrl
dec
and
dec
pushf
mov
push
jg
rep
arpl
jmp
popf
mov
xchg
icebp
push
sub
and
cmc
cli
xor
out
push
add
pop
hlt
mov
out
mov
mov
lcall
lds
mov
outsl
sub
cli
or
inc
lock
jns
and
push
in
and
bound
shrl
lahf
pusha
mov
dec
add
or
in
sbb
xor
lret
sub
fisubrs
lret
repnz
inc
sub
push
mov
mov
inc
inc
mov
mov
fdivs
lds
jbe
scas
imul
loopne
scas
icebp
add
sub
jnp
mov
dec
or
push
aaa
xchg
inc
jb
dec
mov
into
xchg
or
ss
repz
pop
mov
xchg
sbb
mov
push
in
dec
imul
inc
movsl
mov
mov
inc
lds
add
cmp
lcall
push
xchg
dec
dec
mov
call
movl
mov
ror
add
lahf
inc
test
sbb
fwait
or
repnz
popf
es
andl
xchg
iret
sub
mov
icebp
mov
test
into
add
adc
jb
cli
hlt
movsl
cld
fldenv
sub
mov
sbb
mov
in
sub
mov
aam
mov
es
out
adc
mov
scas
repz
pop
scas
leave
insl
test
or
sub
xor
sbb
mov
cwtl
xchg
andb
scas
fildll
or
sub
and
xchg
adcl
mov
xchg
mov
movsl
mov
popa
sub
mov
mov
xor
insb
jl
push
scas
xor
sub
add
pop
push
or
mov
pop
adc
mov
xlat
cmpsl
es
lret
scas
mov
into
fsub
inc
aaa
jecxz
fcmovnu
hlt
sub
aas
pop
test
mov
sbb
jp
clc
mov
cmovp
lcall
aad
sub
enter
xor
mov
and
mov
or
loop
cmpsl
inc
fists
insl
xor
jnp
js
es
sub
or
jne
mov
pop
xlat
addb
out
mov
push
mov
jp
fadds
out
and
cmp
inc
push
pop
orl
jae
xor
sub
int3
pop
mov
xchg
jae
or
xor
jnp
pop
js
fs
sbb
add
cmc
sahf
mov
push
or
fcoms
sahf
test
and
outsl
dec
je
adc
cmp
xchg
les
adc
adc
sbb
test
mov
add
inc
mov
xor
shl
insl
push
lods
jl
aad
rcl
in
outsb
stos
and
mov
lret
pop
sub
aaa
sbb
push
dec
iret
popf
push
fadds
insl
fldl
cmp
or
mov
sbb
fistps
loopne
aad
in
mov
test
mov
addb
sub
into
adc
mov
adc
jmp
mov
cmp
sub
std
xchg
xchg
mov
mov
add
fmul
lret
or
ret
arpl
mov
sbb
bound
mov
adc
pop
es
jae
and
xlat
sub
test
dec
or
neg
cmp
cmpsl
aaa
push
mov
aas
jg
cld
pop
js
sahf
lea
or
mov
jl
sbb
xor
imul
xor
imul
std
subb
mov
xor
stos
add
mov
ljmp
jne
aaa
aaa
jnp
cs
sub
push
out
or
lods
mov
push
adc
dec
xchg
inc
mov
shlb
scas
sub
ret
pop
test
mov
and
pusha
xor
sub
mov
sub
outsb
rolb
divb
and
xor
push
popf
sub
out
outsl
push
dec
or
lret
mov
rorl
dec
add
jg
fdivl
add
mov
adc
nop
out
data16
insb
out
cmp
cmpsl
test
xchg
pop
cmpsb
jecxz
xor
outsl
test
stos
jns
add
jno
jmp
inc
mov
sbb
or
cld
sub
fs
inc
cs
jns
mov
cmpsl
out
sbb
xchg
push
adc
xor
data16
push
mov
fidivrl
inc
into
fisttps
or
jae
mov
or
outsb
mov
mov
pop
xor
dec
sbb
out
bound
jle
mov
and
es
fldcw
cmp
cli
dec
lods
jne
mov
ja
mov
sub
add
leave
jb
sub
mov
cmp
xor
mov
cmpsb
rsm
mov
or
fsubs
pop
imul
adc
mov
icebp
cmpsb
imul
xchg
clc
aaa
fs
loop
in
mov
jge
es
and
es
cltd
cmp
gs
cmpsl
push
popf
test
das
xchg
fnstcw
movsb
lock
pushf
shr
push
and
cmp
inc
movsl
mov
lcall
mov
and
mov
fsub
sbb
aas
mov
xchg
ja
pop
adc
leave
jmp
xchg
es
adc
enter
xchg
cmpsb
rolb
ror
cpuid
ss
or
leave
iret
call
es
mov
and
xor
movsb
nop
test
hlt
imul
mov
andb
hlt
adc
and
ja
dec
in
jbe
sub
sub
call
and
movsl
mov
mov
cmc
jle
xor
jge
xchg
mov
lret
mov
mov
fs
icebp
movsl
adc
loope
aad
aam
or
je
jne
xchg
lods
arpl
insb
sub
push
push
sbb
aad
mov
xchg
sbb
pop
cli
jns
adc
dec
sbb
js
mov
dec
and
out
cmpsl
pop
mov
mov
imul
outsb
cmpsb
jecxz
int3
mov
mov
mov
clc
cli
cmp
fdivp
movsl
adc
mov
xchg
mov
mov
push
scas
xchg
mov
lret
dec
sbb
int3
jle
mov
cmp
pop
fldenv
cs
xorb
outsl
xor
inc
jle
lcall
jnp
and
cmp
out
ja
or
orl
dec
push
es
mov
push
shr
pusha
pmullw
imul
jno
daa
sarl
negl
inc
add
xor
cwtl
xchg
pop
jo
mov
mov
int
inc
adc
shr
inc
push
pop
repz
pop
stos
cmp
js
xchg
test
xor
lcall
sbb
lods
adc
ljmp
push
inc
inc
scas
lcall
out
hlt
pop
cmp
leave
incb
loop
or
loop
in
and
gs
leave
aad
mov
cwtl
out
es
scas
int3
adc
mov
js
dec
out
mov
mov
sub
fsubrs
jae
test
shrl
jl
icebp
push
mov
fwait
pop
sbb
rorl
jle
and
cwtl
fisttps
xchg
and
lret
data16
sbb
shlb
and
or
mov
ss
mov
mov
dec
leave
mov
cmp
repz
stos
and
push
jbe
mov
mov
inc
clc
in
mov
jno
dec
ret
loop
jnp
lret
ret
cmpsb
adc
mov
xlat
dec
cmp
ret
and
inc
inc
rcl
mov
out
jle
fcmovu
sub
jne
outsl
mov
push
sti
sbb
jg
mov
mov
aam
ljmp
stos
repnz
mov
rcrl
mov
test
ret
inc
jne
fyl2x
mov
xor
repz
mov
xchg
inc
or
mov
out
jg
cltd
xor
adc
adc
cmpsb
cmp
xor
ret
xor
mov
outsb
pop
mov
inc
or
les
jno
dec
int3
daa
sub
jno
dec
mov
xchg
lahf
sti
divl
ja
repnz
sub
sar
call
repz
push
lods
mov
jnp
or
jmp
out
sti
jb
aaa
stos
setno
inc
popa
jnp
gs
mov
stos
cmp
sub
aaa
mov
call
pop
jp
sub
xchg
mov
and
inc
test
inc
cmp
ja
xor
je,pn
or
cmp
arpl
add
stc
fistl
test
jmp
push
sbb
fdiv
inc
imull
shlb
add
test
push
xlat
frstor
daa
repz
jge
inc
jbe
inc
fcmovne
in
jg
jbe
ret
dec
push
inc
sub
jp
add
sahf
add
mov
jno
int
pop
nop
mov
mov
xor
pusha
out
jo
pushf
mov
xchg
dec
popf
cmc
movsb
xorb
inc
ret
adc
pop
pusha
add
fsubl
xchg
add
out
jne
jecxz
or
or
adc
add
jno
add
lcall
cld
lahf
fidivrl
push
inc
mov
into
adc
dec
popl
and
dec
jg
test
subl
mov
mov
dec
nop
stos
and
clc
cmpl
mov
jnp
movsl
stc
or
rcrb
xchg
movq
aam
das
sbbb
mov
sbb
das
pop
lods
ret
xor
sti
into
popf
scas
gs
mov
xor
pop
test
cmp
clc
aad
push
mov
jb
xchg
inc
cmp
pusha
xor
pop
lods
js
push
lock
inc
or
lds
fwait
add
lret
pop
adc
gs
sti
add
sub
andl
and
cmp
xlat
pop
and
test
inc
sbb
fldcw
popf
and
enter
les
dec
enter
ud1
lods
cmp
push
roll
mov
xchg
adc
dec
mov
nop
pop
ljmp
int
xchg
sub
sub
bound
jmp
sbbb
or
dec
inc
test
pop
dec
call
inc
or
loopne
or
jl
or
iret
pop
imul
ja
leave
shll
xor
jae
mov
pushl
mov
pop
sbb
cmp
lcall
push
in
test
push
xchg
xor
loop
and
fs
jecxz
mov
rcrb
enter
subl
ret
ja
outsb
sbb
xor
jp
mov
xchg
aam
push
in
cmc
cmp
sbb
lods
test
push
bound
scas
xor
aam
sbb
cmp
inc
inc
lds
xchg
pop
xor
inc
cwtl
and
adc
dec
push
shll
ret
and
adc
and
stos
add
lret
enter
cld
insb
stc
dec
sbb
popf
mov
dec
test
mov
fwait
add
jecxz
dec
inc
mov
int
jne
mov
shr
mov
jp
push
repz
out
xchg
sub
dec
inc
sbb
sbb
mov
cmpsl
fdivs
jl
mov
ret
push
dec
gs
jnp
loopne
rclb
arpl
pushf
jns
lea
in
cmp
cwtl
add
sub
ja
test
mov
mov
mov
rcr
ljmp
popf
stos
jno
cwtl
out
aas
mov
in
sbb
lock
sub
dec
cmp
int3
loop
insl
aas
xchg
add
lods
push
sbb
das
sbb
xchg
mov
stos
dec
adc
out
inc
popa
mov
mov
jl
les
mov
push
or
roll
mov
ja
mov
lret
int
sahf
mov
pushf
popa
cmp
mov
lods
clc
test
jns
and
sub
push
inc
test
jo
inc
scas
push
in
cmpsl
fisubl
imul
or
pop
inc
sbbb
popa
mov
std
mov
push
jb
cld
bound
pop
es
scas
pusha
xchg
shlb
addl
popa
fisttpll
cmp
cmp
fidivrs
cmp
mov
or
dec
scas
inc
xchg
cmp
pop
mov
add
cltd
sbb
cmp
fs
sahf
pop
icebp
shll
mov
aam
loopne
pop
mov
push
mov
jo
pushf
loopne
call
subl
dec
into
cs
or
mov
cld
out
sbb
pushf
pushf
inc
insl
sbb
jp
xchg
jg
and
insb
std
in
adc
lret
ja
int
cmp
inc
ljmp
and
lods
xchg
mov
out
mov
push
in
test
add
mov
xchg
out
les
mov
sbb
or
lret
aam
add
adc
pusha
sub
mov
and
aam
stos
icebp
adc
adc
adc
dec
cmp
cmpsl
lods
push
std
add
ret
fwait
out
cmp
xchg
push
scas
mov
sub
adc
pop
xchg
mov
sahf
fmul
stos
adc
sahf
lods
repnz
pop
mov
inc
xchg
shll
mov
orl
cmp
xchg
add
push
rclb
movl
cmp
sub
push
int3
ds
mov
push
adc
stos
inc
jecxz
add
lods
mov
push
ret
push
hlt
fwait
push
lret
or
fldcw
daa
pop
xor
data16
jge
or
pop
inc
icebp
pop
inc
push
dec
pop
loop
mov
and
xchg
or
insb
inc
rcrb
mov
jmp
jne
add
cwtl
lcall
mov
adc
push
aad
inc
ret
xchg
insb
xchg
add
js
sarl
dec
and
pmuludq
pushf
inc
std
pop
adc
add
imul
or
popa
xor
mov
stos
jae
mov
subb
test
repnz
movsb
xor
int3
popf
dec
push
push
xor
or
sbb
ljmp
push
scas
lods
rcrb
mov
pop
pusha
scas
jl
not
mov
mov
pop
dec
sub
in
cli
push
enter
mov
adc
mov
rorl
lods
add
sbb
mov
add
mov
arpl
pop
cmpsb
fsubrs
adc
cmp
loope
ljmp
dec
dec
loopne
xchg
sbb
popf
inc
add
add
out
psubusb
add
dec
xchg
xor
icebp
insl
push
inc
repz
mov
jae
into
mov
jbe
movntps
shlb
rcll
jnp
insl
cltd
inc
mov
popa
int3
in
and
push
mov
outsb
ret
repz
loopne
inc
jle
aas
sub
shr
mov
jmp
mov
cmpsl
dec
shll
cmp
adc
mov
or
out
es
push
mov
jnp
jno
loopne
rolb
cmpsb
js
inc
xchg
mov
neg
push
mov
mov
or
sub
ljmp
decb
ret
enter
xor
je
mov
jo
push
and
push
mov
mov
push
mov
mov
out
jo
out
shrb
shll
cmp
test
imul
popa
xchg
imul
imul
sbb
pop
sti
dec
mov
mov
push
test
and
jne
or
leave
add
fcompl
mov
stos
lcall
jl
sub
pop
scas
xchg
push
stc
lods
pop
sbb
lea
lods
ds
lock
ja
lds
mov
pop
or
icebp
mov
dec
adc
jp
iret
mov
lods
sbb
cmp
imulb
cwtl
push
or
inc
loope
popf
out
cmc
rcrb
jnp
adc
insb
xchg
cmpsb
dec
adc
cmp
repnz
dec
addr16
push
pop
push
daa
ds
jecxz
gs
mov
or
out
pushw
pop
xchg
mov
push
cli
push
es
mov
lcall
lcall
lods
xor
cmp
into
add
add
jo
cmp
andl
std
push
aam
sbb
in
add
push
push
xor
insl
cs
push
inc
mov
jg
andb
stos
out
lock
add
and
add
xchg
stos
sub
pop
pushl
cmp
and
jne
ret
fnstenv
xor
hlt
repnz
rcrb
mov
and
push
push
hlt
out
add
out
adc
call
inc
clc
gs
xchg
jg
pushf
push
jmp
addb
leave
mov
mov
jmp
shrb
pop
jecxz
push
idivb
push
and
dec
xorl
orb
cmp
stos
push
ret
pop
xchg
jns
lret
data16
stos
fidivs
scas
std
xor
fiadds
inc
or
lahf
xchg
and
fsubs
ljmp
inc
fldenv
out
or
jae
gs
jo
push
sub
sbb
insl
push
push
sub
mov
lret
or
dec
jge
push
pop
ja
jg
ss
enter
add
mov
mov
inc
add
inc
sbb
aaa
jp
cmp
push
mov
xor
cmp
mov
arpl
lret
inc
sub
daa
pop
call
out
mov
test
xlat
xor
lods
bsr
aaa
.byte
push
and
mov
sub
mov
jmp
push
call
test
jmp
xor
push
jmp
movl
mov
jmp
je
mov
jmp
sub
shr
test
jmp
call
mov
xor
jmp
je
push
subl
jmp
lea
jmp
idiv
push
pop
test
jle
jmp
je
jmp
mov
je
mov
test
jmp
push
xorl
pushl
and
add
jmp
je
jmp
mov
mov
xor
mov
jmp
mov
mov
test
jmp
lea
push
call
jmp
jne
mov
jmp
push
xorl
call
jmp
add
add
mov
jmp
call
jmp
xor
mov
mov
jmp
nop
nop
nop
nop
nop
nop
mov
mov
test
jmp
push
and
mov
sub
add
jmp
lea
jmp
test
jmp
nop
nop
nop
nop
nop
push
push
pop
jmp
shr
push
mov
jmp
push
push
mov
lea
jmp
nop
push
push
push
push
nop
nop
nop
nop
nop
mov
jmp
jne
nop
nop
nop
nop
nop
push
pop
cmpb
jmp
push
push
subl
push
subl
jmp
mov
and
incl
incl
jmp
push
pop
cmpl
je
mov
mov
jmp
push
call
jmp
jne
pushl
jmp
pushl
jmp
nop
nop
push
andl
push
push
nop
nop
nop
nop
nop
push
push
call
jmp
jne
jmp
push
mov
mov
xor
jmp
pop
jmp
test
je
push
addl
push
xorl
jmp
lea
jmp
je
push
pop
test
jmp
call
add
pusha
jmp
mov
mov
mov
jmp
push
jmp
jle
mov
movzwl
and
mov
jmp
call
push
pop
cmp
jmp
and
push
pop
cmp
jne
and
nop
nop
nop
nop
nop
add
jmp
nop
push
pop
cmpl
jmp
andl
push
mov
jmp
push
pop
cmpl
je
jmp
nop
push
and
mov
jmp
push
jmp
lea
jmp
add
jmp
call
pop
test
pop
nop
nop
nop
nop
nop
jne
add
mov
pop
ret
nop
nop
nop
nop
nop
add
jmp
neg
sbb
neg
ret
nop
nop
nop
nop
nop
test
pop
jmp
push
jmp
test
jmp
nop
nop
push
jmp
push
andl
jmp
call
pushl
jmp
nop
nop
nop
nop
nop
lea
mov
jne
mov
jmp
xor
mov
lea
push
mov
jmp
cmpl
jmp
mov
ret
pushl
call
jmp
lea
push
jmp
mov
jmp
push
lea
push
call
jmp
nop
nop
nop
push
or
mov
jmp
push
jmp
movzbl
add
mov
jmp
push
addl
pushl
jmp
pushl
call
jmp
and
mov
add
shr
and
jmp
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
and
mov
push
nop
nop
nop
nop
nop
mov
mov
and
mov
push
jmp
pushl
jmp
mov
mov
mov
and
jmp
push
call
jmp
add
jmp
cltd
pop
mov
jmp
mov
ret
nop
nop
nop
nop
nop
mov
testb
mov
jmp
pop
jmp
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
adc
or
inc
or
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
or
movsb
or
pushf
or
xchg
or
mov
or
test
or
jl
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fcom
or
loopne
or
in
or
add
or
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
or
cwtl
xlat
or
rcl
adc
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
or
sbb
or
and
or
sub
or
xor
or
cmp
or
inc
fmuls
adc
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
or
js
or
mov
or
pushf
fmuls
adc
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
add
add
mov
add
add
sbb
add
call
mov
jmp
xor
jmp
sub
sub
add
jmp
mov
jmp
or
mov
test
je
jmp
add
add
jmp
mov
mov
jmp
mov
jmp
lea
push
je
jmp
mov
jmp
lea
push
push
subl
jmp
decl
jne
jmp
xor
mov
jmp
call
test
pop
jmp
add
lea
jmp
pushl
jmp
add
push
pop
cmpl
jne
jmp
mov
add
jmp
xor
mov
leave
ret
nop
nop
nop
nop
nop
jne
sub
decl
jmp
pop
pop
jmp
mov
popa
jmp
nop
nop
nop
nop
nop
jne
mov
test
jmp
je
push
addl
jmp
mov
jmp
push
call
pushl
mov
jmp
test
je
jmp
sub
pushl
push
jmp
push
pop
jmp
jle
or
mov
add
add
jmp
mov
pop
jmp
test
je
jmp
push
call
push
push
jmp
pop
leave
ret
nop
nop
nop
nop
nop
dec
jne
jmp
lea
push
call
jmp
movzwl
jmp
jmp
call
push
push
jmp
mov
test
jmp
sub
add
pop
lea
jne
jmp
jle
add
mov
jmp
mov
test
je
or
mov
jmp
mov
add
add
push
jmp
push
call
add
push
addl
jmp
shl
shr
or
xor
jmp
sub
mov
mov
jmp
pushl
call
test
je
jmp
push
addl
jmp
add
dec
jne
pop
jmp
jmp
andb
incl
jmp
jmp
mov
add
add
jmp
jmp
push
call
jmp
jmp
add
push
pop
cmpl
jne
jmp
lea
jmp
pop
pop
leave
ret
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
push
pop
movzbl
incl
jmp
push
jmp
and
add
jmp
pop
pop
jmp
push
push
addl
jmp
or
mov
and
add
nop
nop
nop
nop
nop
add
shr
jmp
pop
jmp
pushl
push
call
mov
jmp
je
test
je
jmp
pop
pop
pop
ret
jmp
test
je
jmp
mov
jmp
mov
jmp
nop
nop
nop
nop
nop
pushl
jmp
and
mov
sub
jmp
add
pushl
nop
nop
nop
nop
nop
push
push
call
add
jmp
mov
mov
incl
dec
nop
nop
nop
nop
nop
jne
jmp
mov
jmp
add
test
jmp
mov
push
pop
jmp
jmp
lea
jne
call
push
jmp
call
test
jmp
pop
pop
pop
jmp
pop
jne
push
pop
cmp
jne
jmp
pop
jmp
lea
push
call
jmp
pop
pop
ret
mov
jmp
test
pop
je
jmp
jmp
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
add
mov
sub
mov
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
incl
dec
jne
nop
nop
nop
nop
nop
jmp
sub
jmp
sub
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
mov
shl
movzbl
add
nop
nop
nop
nop
nop
incl
nop
nop
nop
nop
nop
xor
mov
lea
push
nop
nop
nop
nop
nop
call
nop
nop
nop
nop
nop
push
pop
cmp
pop
jb
nop
nop
nop
nop
nop
add
push
pop
cmp
jb
nop
nop
nop
nop
nop
add
push
pop
cmp
nop
nop
nop
nop
nop
jae
add
sub
add
test
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
mov
add
mov
sub
nop
nop
nop
nop
nop
mov
mov
incl
nop
nop
nop
nop
nop
dec
jne
mov
jmp
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
incl
nop
nop
nop
nop
nop
incl
push
pop
push
pop
cmpl
nop
nop
nop
nop
nop
je
mov
nop
nop
nop
nop
nop
pop
nop
nop
nop
nop
nop
sub
pop
pop
nop
nop
nop
nop
nop
leave
ret
nop
nop
nop
nop
nop
add
add
add
add
or
add
add
clc
fisttps
add
loopne
add
fisttps
add
fisttps
add
fisttps
add
add
add
loopne
add
or
add
add
movsb
fisttps
add
loopne
add
fisttps
add
add
add
add
inc
loopne
add
or
pushf
fisttps
add
or
and
or
push
loopne
add
add
add
fisttps
add
loopne
add
fisttps
add
fisttps
add
fisttps
add
add
add
loopne
add
or
add
add
ret
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
mov
je
popa
insb
inc
jb
gs
add
jb
jne
insb
push
jb
je
arpl
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
incl
inc
gs
gs
je
jo
imul
std
add
je
inc
add
inc
push
xor
cs
insb
add
test
dec
imul
inc
inc
dec
xor
cs
insb
add
inc
push
jns
dec
add
add
add
add
add
ret
add
add
rolb
add
add
xchg
add
dec
cld
and
cs
add
xor
addb
add
add
add
nop
dec
aaa
in
xor
add
rorb
add
add
addb
add
inc
or
add
addr16
or
and
popf
or
add
add
mov
dec
push
add
or
pop
push
xchg
or
pop
inc
dec
push
nop
int
add
add
add
xchg
xor
mov
xor
out
push
xor
inc
xor
xchg
ds
shll
mov
cld
xor
xor
mov
sub
aaa
mov
xor
xor
jmp
lock
cmp
cmp
cmp
cmp
aaa
ds
imul
xor
xor
xor
sahf
cmp
sub
inc
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
insb
cmp
je
js
jl
cmpb
cmp
cmp
cmp
cmp
cmp
add
cmp
xor
add
add
sbb
or
test
inc
add
push
add
add
pop
add
add
add
add
xor
add
dec
add
test
inc
add
add
add
add
add
lock
add
pop
sbb
add
add
add
cmp
inc
xor
xor
inc
inc
xor
xor
inc
cmp
cmp
aaa
inc
cmp
cmp
xor
xor
xor
xor
cmp
ss
inc
xor
inc
inc
cmp
aaa
xor
inc
inc
inc
inc
inc
inc
