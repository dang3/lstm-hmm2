inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
fyl2x
std
cltd
or
add
xchg
push
cmc
cmpb
or
pop
add
add
add
add
adc
nop
add
add
add
add
mov
mov
add
xchg
add
add
add
add
movsb
add
add
add
add
jle
and
xchg
mov
add
jbe
xor
mov
cmp
add
lock
push
add
popf
add
add
add
add
add
jae
jbe
push
add
add
add
cmp
add
add
ja
jno
in
add
xchg
add
add
add
jbe
jno
dec
add
add
cmp
add
add
add
add
rolb
cmp
add
jno
dec
add
add
add
push
add
mov
inc
add
cmp
add
add
add
add
add
add
add
push
add
jno
mov
out
push
add
loopne
push
add
add
ja
popa
add
inc
add
add
add
add
add
cmp
add
data16
add
add
add
add
scas
add
jbe
xchg
add
add
mov
push
xor
jbe
push
add
add
add
flds
jbe
inc
add
add
outsb
add
mov
add
add
cmp
add
xor
jbe
push
add
add
add
add
dec
add
push
adc
in
add
pop
add
push
add
add
cmp
push
push
add
add
add
add
cmp
add
add
add
cmp
add
add
add
add
cmp
add
mov
push
add
add
add
add
jle
addl
inc
add
add
xchg
add
add
cmp
out
add
add
add
in
add
add
add
cld
add
add
add
out
mov
cmp
add
add
add
add
add
add
add
pusha
add
add
xchg
add
add
add
loop
in
add
jns
aaa
add
add
add
mov
add
add
add
add
add
cmpsb
add
add
test
add
mov
add
add
dec
add
or
jbe
push
add
push
add
add
dec
add
add
add
dec
add
add
add
push
add
add
inc
add
pop
add
add
add
inc
add
add
dec
add
add
insb
add
into
add
add
cmp
add
add
add
popf
add
add
add
add
add
add
fadds
dec
add
add
cmp
add
adc
cmp
add
add
add
push
add
add
add
cmp
add
xor
add
add
add
cmp
add
add
add
add
inc
add
add
add
add
jge
les
push
or
pusha
add
add
addr16
add
add
add
add
add
sbb
add
ja
pop
add
add
mov
add
add
jge
push
inc
or
or
xor
scas
cmp
cmp
dec
lods
scas
out
mov
jb
sti
xchg
and
bound
into
xlat
jecxz
ja
into
lods
push
fistl
pop
pop
push
adc
pop
xor
mov
inc
sbb
push
and
scas
aam
ror
cmp
mov
adc
mov
mov
jle
es
rcr
or
mov
rcll
repz
xor
mov
push
cmp
mov
cmpsl
aam
adc
test
or
loopne
xchg
jae
repz
mov
out
mov
rcll
loop
or
shrb
insb
sub
loope
mov
mov
mov
push
and
faddp
shlb
stc
aam
leave
mov
adc
mov
aam
push
nop
pop
mov
sub
sti
or
push
aaa
and
iret
jge
add
mov
pop
ss
scas
pop
fildll
push
in
and
pushf
lcall
xchg
lods
fistps
leave
xor
mov
dec
sarl
sub
and
push
xor
cmp
aad
push
rorb
iret
fisubrs
repnz
int
sbb
daa
fstl
push
mov
xchg
cld
outsb
js
xor
mov
sbb
inc
pop
mov
lcall
cmpsb
dec
ja
pop
rorl
push
jne
pop
xchg
add
or
sahf
mov
xchg
pop
xor
hlt
sub
ret
adc
repz
js
jns
mov
lods
stos
jbe
or
dec
mov
imul
cmc
adc
dec
xchg
int3
adc
or
rcrb
cs
push
xchg
xlat
or
lret
and
out
lds
fsubp
mull
imull
and
sub
push
mov
cmc
push
cwtl
add
mov
jg
call
xchg
dec
gs
sub
outsb
push
add
xchg
adc
mov
pop
mov
mov
xchg
push
aaa
cwtl
inc
roll
push
push
in
stos
add
mov
adc
xchg
shr
fistpll
int3
mov
in
icebp
sbb
push
out
and
add
xchg
mov
add
push
jbe
fstpt
popf
push
jp
hlt
add
inc
sub
cmc
sbb
inc
sub
fdivl
xor
iret
pop
shrl
dec
sub
lret
leave
pop
cmpb
loop
push
scas
jno
dec
sub
repnz
dec
cmpsl
es
jge
inc
or
dec
cmp
popa
addr16
mov
jno
nop
or
mov
mov
fbld
movsb
or
cmp
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
sahf
push
mov
mov
xor
sub
ds
pop
fadd
jle
outsb
push
sahf
push
mov
mov
pop
fisubrs
jle
sahf
adc
cs
sub
dec
out
jle
outsb
pop
xchg
xchg
cmpsb
es
movl
xchg
push
mov
pop
into
adc
add
jno
fisttpl
sbb
sbb
gs
daa
cmp
sub
ss
add
mov
fs
pop
cmp
or
mov
push
outsb
inc
rcrl
mov
xchg
icebp
add
in
lea
lea
in
int
mov
push
popa
push
xchg
push
xor
into
sti
and
out
jle
sub
rorb
out
sbb
mov
pop
ficoms
lahf
lock
roll
fmulp
gs
jno
inc
mov
inc
mov
mov
pop
icebp
scas
dec
xchg
ss
ficomps
sub
cli
imul
imul
adc
out
rorl
jl
push
cmpsl
ds
pop
fimuls
outsb
notl
push
mov
cmpsl
aaa
inc
push
hlt
fs
outsl
bound
dec
lret
cmp
xchg
jle
mov
push
fnstsw
fimull
cmp
add
jg
inc
int
shll
pop
subb
fmul
push
imul
mov
cwtl
sbb
mov
push
jmp
in
pop
into
outsb
jle
mov
sahf
push
scas
ds
dec
out
jle
outsb
push
sahf
push
mov
mov
pop
into
outsb
jle
mov
sahf
push
scas
ds
dec
out
jle
outsb
push
sahf
xor
and
or
inc
xchg
ds
pop
ss
outsl
xlat
mov
sbb
dec
and
adc
mov
mov
inc
inc
sahf
mov
xchg
sub
jp
push
ret
imulb
lahf
stos
xor
push
std
stos
imul
pop
cmp
loopne
ret
dec
xor
pusha
sahf
outsb
je
repz
push
sub
clc
jmp
dec
std
jo
jno
popf
add
or
sbb
sub
cmp
mov
loop
scas
outsl
sbb
stos
sub
push
cmc
imul
lock
shll
xor
push
fwait
mov
xor
ficoms
cltd
and
push
xchg
push
push
popf
pop
xor
mov
add
test
mov
movsl
rcll
popa
cmp
rcll
add
push
ja
pop
adc
add
or
imul
jne
and
push
push
sbb
mov
xor
jo
roll
insl
jge
cltd
adc
and
je
movsb
ljmp
pusha
jne
inc
add
jo
mov
and
xor
pushf
adc
mov
pop
shlb
adcl
fistl
sbb
mov
or
sbb
sbb
dec
repnz
adc
enter
xchg
cli
pop
mov
aaa
xchg
ret
mov
repz
jmp
int
inc
dec
cmp
xchg
scas
scas
xchg
mov
repz
test
xchg
push
cli
das
adc
hlt
or
std
sub
mov
cmp
jg
mov
icebp
shlb
or
dec
in
jle
inc
jmp
adc
mov
js
pop
sub
aaa
or
stc
ljmp
out
pop
jnp
dec
push
add
int3
adc
xchg
scas
add
gs
orl
outsb
shlb
inc
mov
or
sub
mov
fs
maxps
mov
cmpsl
leave
int
aam
push
push
sub
test
mov
int3
mov
sbb
dec
imul
es
rclb
cs
pop
and
and
in
push
rorb
lea
das
pop
mov
icebp
shl
lea
sahf
xchg
pop
out
add
cmpsl
aad
cmc
stos
inc
mov
bound
adc
ss
jnp
mov
pusha
xor
mov
bound
decb
jle
and
loopne
in
shrl
incb
mov
rcll
rcrl
dec
test
sbb
sub
sub
cmp
roll
adc
jae
cli
scas
sbb
les
mov
lret
jo
push
sub
pop
mov
push
xchg
sub
mov
mov
insl
mov
jge
ja
push
or
pop
jge
lahf
lret
repz
rolb
fxch
xor
xlat
cmp
mov
lret
sub
push
in
repnz
inc
aaa
popa
xchg
xlat
jo
lcall
push
sbb
mov
jns
fwait
repnz
nop
es
ficoml
xchg
rol
shrb
nop
leave
inc
mov
push
pop
add
dec
mov
adc
or
popa
xor
arpl
frstor
or
inc
adc
push
in
jns
enter
imulb
loopne
rclb
adc
jge
jmp
push
dec
push
pop
cltd
xchg
in
adc
lds
xchg
into
nop
inc
loopne
xchg
dec
jae
fdivrl
int3
repz
pushf
div
ror
pusha
cs
inc
xor
adc
lahf
jno
add
loope
test
inc
or
xchg
pop
scas
out
outsb
or
stos
add
aam
sub
movsb
std
lret
inc
pop
cld
push
xchg
dec
ret
sub
movsl
lcall
sbb
cltd
bound
cltd
push
or
rclb
ja
push
xor
xchg
pop
sar
mov
hlt
cwtl
adc
imul
pop
mov
jne
lods
push
into
scas
cld
test
ss
fstpt
sub
mov
mov
or
shlb
mov
lea
in
xor
mov
pop
enter
subl
mov
loopne
int3
adcl
xor
xchg
cmp
stc
nop
pop
mov
shl
cmp
mov
lock
fcom
loopne,pn
jge
test
and
jb
and
jecxz
fwait
gs
pop
enter
dec
insl
icebp
out
outsb
dec
pop
ja
or
les
and
hlt
test
daa
jae
addr16
push
inc
jp
ja
mov
test
ficomps
in
sbb
or
arpl
push
dec
fcoms
daa
inc
imul
xor
mov
dec
xor
mov
outsb
adcl
scas
sbb
leave
xlat
and
testl
or
mov
cmc
rorl
out
popa
int3
bound
lret
stos
and
lock
rclb
mov
out
ficompl
mov
daa
stos
popa
push
insl
popa
push
in
sub
mov
or
xchg
xchg
gs
shrb
into
jle
jge
jnp
lret
addl
xor
mov
stos
leave
pop
lea
adc
shrl
in
std
out
sbb
cmp
enter
xchg
sub
mov
inc
pop
sub
aad
mov
inc
cwtl
addr16
out
ljmp
imulb
shll
aas
pop
popl
data16
or
dec
rcll
push
sbb
pop
or
fistl
mov
scas
leave
inc
pop
cmpl
sbb
loope
push
pop
adc
xor
je
and
scas
imul
addl
addb
popa
fdivrl
repnz
outsb
scas
std
or
shrl
xor
jne
cmp
sbb
xchg
ret
or
pop
jmp
testl
in
fsubs
addr16
cmp
mov
or
push
aaa
popf
push
push
pop
mov
inc
mov
jge
mov
sbb
imul
repz
mov
ja
cs
clc
ds
cmp
ss
adc
iret
mov
es
pop
pop
test
push
inc
roll
movsl
or
int
mov
mov
jno
out
movsl
bound
add
mov
div
ja
in
out
pop
sbb
and
mov
pushf
inc
cmpsl
dec
adc
lea
fwait
sub
test
pop
stc
jb
repnz
arpl
jg
mov
adc
lahf
sub
xchg
lahf
and
cmpsb
sub
test
mov
leave
fdivs
mov
mov
jle
subb
dec
push
aaa
ficoml
lret
bound
sub
sub
jl
mov
cmovnp
fwait
cmp
cmp
fisubs
xchg
pop
mov
fwait
jnp
push
cmpsl
inc
call
dec
je
lret
sbb
cmpsb
lods
jle
xchg
jp
xchg
push
es
mov
push
shrl
mov
outsl
cmpsb
fcompl
stc
sub
imul
mov
repnz
mov
cmp
push
adc
jae
jnp
xor
mulb
xchg
call
and
sub
int3
xchg
aaa
pop
pop
or
push
cmp
add
shl
jae
xchg
and
aam
jecxz
inc
or
les
or
add
dec
xor
test
mov
push
sbb
mov
sbb
out
ja
pushf
jle
fmul
popa
ds
popf
jno
push
insl
insl
pop
shr
sti
stos
cmp
mov
inc
add
fwait
cwtl
sub
push
std
mov
dec
stos
mov
add
daa
stos
mov
lea
add
and
sbb
xchg
test
cmp
xchg
ljmp
testl
sub
mov
mov
in
fnstenv
test
cmp
scas
mov
pop
pop
subb
fwait
mov
cmc
leave
popf
sbb
jne
in
cmp
fmul
jmp
mov
dec
stc
add
sbb
mov
sub
mov
xchg
mov
dec
out
pusha
je
call
xchg
or
dec
imul
shlb
inc
int
sub
cmp
add
cmp
fistl
scas
mov
jmp
xor
daa
lds
xchg
add
mov
pop
cmp
stos
sti
push
xor
test
xor
int3
push
lea
int
adc
inc
stos
pop
cwtl
add
mov
movsl
sub
pop
cld
icebp
inc
cmp
or
jo
push
movsl
inc
xor
scas
stos
cmp
iret
mov
pop
sbb
divl
and
mov
rcl
fwait
and
xor
test
popa
push
sbb
jns
mov
sahf
test
in
inc
inc
out
daa
push
loopne
pop
add
mov
sbb
leave
and
pop
and
pop
xor
mov
xor
pop
adc
xchg
out
in
std
cmpsb
inc
jecxz
xchg
cli
add
jecxz
sarb
icebp
mov
jb
cs
ljmp
lock
or
shr
xchg
and
shrl
xchg
movb
out
or
int3
movsl
pop
and
sub
push
jnp
adc
bound
jnp
and
stos
iret
push
addr16
lods
cltd
idivl
std
cwtl
add
cmp
xchg
rclb
jne
cmp
mov
pusha
aad
sub
testb
dec
lods
cs
out
cs
dec
icebp
mov
addl
les
mov
das
mov
cs
stos
ljmp
fstps
adc
mul
adc
clc
jne
push
or
shlb
test
pop
ror
sti
add
push
adc
leave
int3
jge
cmpl
and
repz
outsb
mov
in
push
jg
lods
pushf
jo
xchg
and
jbe
push
rcrb
xchg
xor
fiaddl
in
pop
add
xlat
jnp
cmp
pop
pop
add
jp
cwtl
add
dec
mov
sub
fucomp
inc
mov
mov
clc
pop
jbe
add
shlb
lcall
inc
cltd
test
divb
fcoml
xchg
xlat
adc
mov
push
hlt
pop
lea
gs
sub
outsl
add
jb
repz
xchg
mov
add
push
clc
cmp
xchg
mov
push
sub
mov
loope
shll
sub
test
pushf
loop
test
push
push
out
test
lret
fstps
pop
xchg
das
pop
sbb
inc
aas
or
xor
mov
push
push
rorl
sub
inc
pop
push
fnstenv
hlt
repz
jmp
leave
adc
adc
dec
fiadds
sti
les
sarl
mov
das
or
push
pop
add
or
mov
jno
in
dec
pop
and
insb
movsb
sub
imul
imul
das
mov
ret
sub
push
and
adc
pop
mov
add
sbb
testl
cmpb
and
mov
push
cmp
inc
sub
adc
scas
insb
xchg
push
les
cmp
xchg
jnp
mov
sqrtps
pop
out
loope
xchg
add
cmc
adc
and
daa
sbb
lahf
pop
jl
out
inc
lea
jae
or
and
cli
stc
inc
jns
pop
inc
sub
add
cmpsb
mov
lcall
sub
das
mov
mov
sbb
outsl
or
shlb
clc
pmulhuw
mov
stos
cmp
mov
add
fcomps
out
rorl
cmp
subl
push
mov
xchg
lcall
fcmovnbe
mov
int
jo
pushf
dec
pop
fidivl
cmpb
cmp
dec
scas
mov
mov
test
call
push
dec
or
and
popf
xlat
scas
lds
jne
and
adc
jne
push
push
test
das
sbb
decb
shrl
orl
fs
push
add
outsl
dec
jg
mov
ja
lcall
adc
push
hlt
sub
dec
jmp
xchg
pop
mov
flds
or
add
stc
jne
pop
out
in
jmp
jge
imul
rorl
cmpsb
test
mov
xchg
xchg
mov
sarl
ror
mov
push
xchg
js
rcrb
push
mov
daa
pop
and
xchg
ds
or
mov
xor
pop
cmp
popa
stos
jno
ficoms
xchg
dec
push
push
sbb
sub
popa
loope
cmpsb
enter
icebp
push
loope
cmp
sub
adc
pop
mov
shrb
arpl
call
or
js,pn
mov
in
xchg
lods
cmp
movsl
mov
push
xchg
cmp
mov
cmp
cmp
or
dec
movsb
push
cmp
fldl
mov
in
push
push
inc
into
jae
cmp
or
xchg
fs
jns
jecxz
mov
pushf
jle
inc
in
cmp
sub
shlb
into
mov
iret
aas
mov
outsb
mov
mov
sub
inc
stos
mov
cld
pop
sbb
stc
lods
inc
fistps
push
stos
daa
xchg
pop
loope
out
add
pop
jl
movsl
jne
ds
cs
rcrb
cmp
or
jb
xor
in
ss
rol
cltd
cltd
adc
sar
jl,pt
push
jmp
pop
jp
test
fwait
cwtl
movsb
push
addr16
mov
data16
mov
pop
jno
sub
movsl
cs
dec
push
aad
mov
jb
sub
mov
mov
mov
pop
arpl
call
mov
shll
xchg
mov
movsb
call
aas
dec
sub
into
outsb
out
rcl
inc
mov
icebp
pop
push
dec
imul
cmc
mov
mov
sub
xor
jae
inc
push
loopne
mov
movsl
imul
sub
and
addr16
jle
fs
ds
fiaddl
push
dec
mov
ret
int
and
js
cwtl
jo
jg
jb
mov
jmp
inc
mov
cmp
cmpsl
lock
xor
adc
pop
clc
sub
sub
scas
bound
idivb
mov
fistpll
popf
mov
cmc
shlb
les
aad
orb
mov
mov
js
and
movsb
mov
lds
adc
jbe
mov
jle
int3
es
push
sub
sub
sub
lea
int
cmp
mov
test
call
addr16
push
adc
aaa
mov
mov
push
inc
cwtl
and
xchg
enter
cmpsb
in
mov
mov
inc
loopne
ret
aad
jnp
mov
mov
jbe
dec
jo
sbb
scas
out
inc
test
je
mov
xor
jno
cmc
fwait
test
sbb
xchg
mov
cld
push
scas
or
stc
mov
xchg
hlt
int
imul
mov
inc
mov
sub
inc
jnp
mov
mov
lock
xor
dec
icebp
mov
insl
push
or
arpl
stc
mov
addr16
outsl
int
dec
lds
jge
imul
fldenv
and
outsw
jae
pop
pop
push
cmp
stos
fsubrs
push
xor
cmp
mov
pop
aad
inc
enter
imul
fmull
inc
clc
ret
lds
cmpsl
scas
xchg
in
enter
loop
insb
cmc
mov
popf
fs
mov
inc
scas
xchg
or
jb
cmc
out
xlat
lcall
popf
fidivrs
or
sub
pusha
lcall
cmp
mov
mov
iret
sbb
lcall
pop
or
adc
xchg
mov
xchg
mov
adc
xor
jo
cmp
pop
inc
lds
cmpsl
push
loope
adc
dec
subb
ss
xchg
jb
bound
dec
sahf
mov
in
and
push
dec
pop
pop
add
in
and
sarl
testb
lds
inc
lods
out
push
enter
call
xor
and
aam
xchg
cltd
mov
and
in
xor
sub
lods
loop
pop
lahf
push
add
xlat
cli
shll
loop
inc
cmp
mov
push
insl
jp
mov
sti
mov
enter
mov
loop
icebp
lret
xlat
lods
lcall
sahf
xchg
test
dec
sarl
je
shrl
ss
cmpsb
and
mov
xor
xor
outsl
mov
call
jle
cmp
mov
in
pusha
jecxz
fisubrs
loope
jmp
stc
enter
cmp
sbb
imul
popa
mov
dec
movsl
adc
pop
in
dec
rcll
adc
and
pushf
inc
mov
add
xchg
push
call
rorl
or
jns
stc
lret
std
ret
popf
les
stos
sub
xchg
lahf
fstl
outsb
inc
in
pushf
cmc
popf
jo
xorb
orb
lret
jbe
lea
push
bound
cmp
outsb
mov
fcoms
push
jecxz
in
inc
rorb
fwait
jmp
fs
outsl
addr16
lods
jb
cmp
rcrl
pusha
stos
and
and
ret
jl
xor
xor
repz
insl
leave
push
push
aam
mov
stos
mov
xor
pop
add
jbe
loop
sbb
and
xchg
xchg
mov
mov
or
cmp
cmp
jle
lret
dec
mov
inc
inc
test
clc
add
xchg
xor
movsb
shlb
mov
in
jmp
mov
jb
mov
jg
mov
dec
loop
loopne
mov
leave
and
pop
sub
push
mov
cmp
inc
sahf
popa
dec
cmpsl
xchg
ljmp
jne
pop
mov
and
push
sbb
ss
je
push
dec
xchg
scas
nop
daa
add
jb
or
mov
stc
mov
jb
xchg
push
out
jl
and
jnp
enter
push
xchg
add
sbb
leave
cmc
jnp
jg
addb
jns
test
xlat
es
adc
mov
fistpl
dec
aas
mov
test
fs
jbe
push
or
out
mov
int
in
insb
and
cmp
xor
shr
jp
lds
clc
fldcw
fsub
jmp
int
jns
ljmp
sbb
call
add
popa
inc
cmc
jecxz
jmp
cli
push
stc
jno
inc
pushf
out
in
cmc
mov
sbbb
inc
or
lea
pushf
cmp
mov
sbb
lds
sub
add
xor
cmp
mov
rolb
addr16
xchg
adcb
pop
mov
xor
xchg
dec
xor
dec
stos
lcall
jns
dec
push
sarb
and
cmp
and
in
push
push
push
sub
xor
lret
sbb
pop
mov
jmp
sbb
push
dec
in
mov
idivb
xor
enter
dec
test
loop
loopne
mov
inc
sub
lea
test
gs
xchg
pop
imul
cmp
pop
cmp
sti
sarl
lods
out
sbb
ds
inc
pushf
clc
sub
pop
cmp
sub
mov
mov
xor
jo
push
push
lock
jg
shr
add
icebp
cmp
lret
in
fldcw
hlt
leave
inc
out
xchg
or
cmp
and
ljmp
loope
jae
adc
pop
shr
dec
vmread
mov
and
addr16
xor
mov
leave
mov
or
lret
dec
adc
ret
inc
mov
int
ret
bnd
imull
push
jecxz
outsl
data16
aad
mov
int
test
mov
mov
cmp
test
sub
sbb
cmp
add
and
movsb
pop
mov
imull
rep
aam
out
pop
loope
mov
sub
sub
das
dec
aas
lret
pusha
dec
sub
jge
dec
mov
mov
xchg
orl
out
cmp
add
imul
dec
loope
mov
push
mov
and
xchg
and
push
mov
arpl
dec
inc
rorb
pop
stc
jne
push
add
cmp
movsl
mov
hlt
loope
xor
adc
xchg
jne
mov
sahf
jle
jp
rol
adc
xor
push
xor
outsl
cmp
imul
lods
loop
lods
dec
sbb
sqrtps
sti
les
mov
push
mov
jno
aaa
popa
push
clc
fs
les
dec
sahf
cmp
fdivrl
aas
aas
aam
hlt
lcall
push
movsb
inc
scas
mov
adc
and
push
ja
add
jno
in
xchg
pop
push
pop
dec
and
push
mov
jl
xorb
xchg
cmp
or
je
push
js
inc
xlat
shrb
fisttpl
adc
icebp
add
dec
cmp
cmp
arpl
jbe
inc
mov
cltd
aaa
xor
dec
ficomps
outsb
jle
mov
sahf
push
scas
ds
dec
out
jle
outsb
push
sahf
push
mov
mov
pop
into
outsb
jle
mov
sahf
push
scas
ds
dec
out
jle
outsb
push
sahf
push
mov
mov
pop
into
outsb
jle
mov
sahf
push
scas
ds
dec
out
jp
push
lcall
dec
ficomps
out
jno,pn
popa
movsb
add
mov
xor
add
adc
pop
out
dec
fidivrs
insl
mov
fisubrs
jle
outsb
pop
std
dec
in
ds
mov
lods
push
lods
pop
out
dec
fidivrs
insl
mov
cmp
outsb
int
cld
dec
in
ds
lea
mov
out
dec
fidivrs
insl
mov
cmp
outsb
out
sub
fisttpl
push
fsubs
mov
out
cmp
cmpsl
scas
loop
jne,pt
mov
cmpsb
sbb
clc
xchg
inc
dec
imul
inc
loopne
or
js
mov
inc
xor
add
clc
rorl
cld
push
dec
lea
scas
inc
stos
loopne
mov
out
jle
add
mov
bound
popa
mov
push
mov
int
and
sarl
push
insl
push
enter
popf
lcall
xchg
movsl
loop
insb
sub
dec
add
in
mov
sub
aad
dec
add
pop
cltd
ret
cs
push
outsl
xchg
add
leave
cmpsb
mov
adc
mov
fstpl
mov
out
dec
fidivrs
insl
mov
cmp
outsb
int
std
dec
in
ds
lea
mov
xchg
cmp
sub
pop
out
sti
pop
iret
pop
aas
lods
push
cmp
jmp
pop
enter
and
pop
ret
push
add
mov
or
insb
fmuls
stc
xchg
sbb
push
mov
iret
adc
sahf
cmp
outsb
int
std
dec
in
ds
lea
mov
out
dec
fidivrs
insl
mov
cmp
outsb
int
std
dec
in
ds
lea
mov
dec
gs
stos
fs
lods
xchg
repz
in
imul
cmp
in
xchg
cmpsb
stos
out
dec
jmp
js
xor
movsl
fs
mov
cmpsb
fbld
and
xchg
pop
inc
mov
rorl
bswap
aad
out
push
add
lahf
repz
xchg
jg
mov
dec
subl
push
out
mov
push
mov
sbb
jmp
aad
hlt
adc
push
push
dec
jne
adc
cmc
mov
jb
jmp
sbb
nop
addr16
ss
or
mov
and
xlat
add
inc
outsl
mov
mov
pop
leave
or
ds
dec
sub
lds
ds
mov
addl
mov
mov
push
aam
xchg
test
aaa
imul
cmp
xchg
int3
push
leave
xor
and
sub
or
jbe
pop
inc
gs
push
xchg
cmpsb
lret
out
pop
xor
add
into
mov
faddl
and
clc
ret
stc
hlt
stos
ss
jnp,pn
mov
add
or
mov
call
mov
mov
icebp
adc
inc
adc
mov
push
aas
lret
shl
push
std
mov
loop
mov
sbbb
fnstcw
mov
mov
and
push
pop
movsl
ret
add
mov
inc
push
bound
stc
xor
aad
pusha
xlat
mov
push
int
out
mov
inc
jp
arpl
mov
mov
je
pop
mov
sub
repnz
xor
test
mov
dec
xchg
fistpll
mov
in
cli
jb
xor
in
leave
mov
fidivrs
or
push
sbb
lods
outsb
add
push
adc
xchg
lahf
pop
sbb
repnz
ss
sbb
imul
into
push
sub
push
jmp
cmp
scas
fiadds
arpl
push
push
ja
in
and
sbb
adc
sbb
imul
mov
mov
jns
aad
outsb
cltd
dec
adc
sti
ret
jbe
pop
push
fs
popf
sti
clc
dec
mov
sub
movsl
pop
inc
xchg
or
lds
fs
lods
mov
add
out
inc
fisttps
adc
fwait
fwait
xor
jns
mov
jbe
mov
fs
inc
pop
shl
js
add
jb
ds
sbbb
mov
push
inc
pusha
loopne
clc
sub
push
jb
outsb
aad
cs
push
jno
pop
cmp
cmpsb
xor
xchg
xchg
adc
js
push
pop
push
dec
lock
loop
adc
sbb
sbb
pop
in
lods
cmp
jecxz
dec
test
frstor
pop
sub
aaa
add
add
lret
in
dec
push
cmpsl
stos
inc
fists
sub
je
dec
ret
fcom
jno
ljmp
mov
xor
and
sbb
xor
mov
cmp
clc
adc
pop
xchg
mov
loop
mov
pop
aad
mov
adc
inc
adcl
push
xchg
fldenv
es
subl
inc
xlat
xchg
mov
and
mov
scas
imul
fstps
into
leave
push
clc
mov
notl
lods
sbb
mov
imul
and
fs
pop
out
and
fdiv
dec
cmp
out
popa
sbb
sbb
imul
lods
dec
adc
call
cmp
mov
stc
pushf
int3
push
jl
push
inc
leave
filds
sbb
shll
push
adc
scas
loope
lret
stos
popa
inc
mov
test
loopne
xor
jns
jp
repz
insb
repz
adc
dec
adc
xchg
ljmp
adc
adc
movsb
out
xor
mov
in
imul
filds
jl
adc
lods
ss
lahf
push
cld
imul
pop
add
mov
jmp
xchg
sti
or
pop
icebp
orps
pop
outsb
lahf
push
and
dec
into
pop
inc
shr
cltd
jl
push
jae
mov
cmp
cmp
jle
jno
subl
sbb
adc
xor
in
stos
xchg
std
fisubrs
test
stos
sbb
mov
jno
into
les
out
hlt
xchg
cwtl
stos
incb
cmpsb
mov
pop
or
mov
das
sbb
and
xchg
xchg
pop
jbe
ret
push
mov
mov
jp
adc
ljmp
push
into
pop
xor
lahf
dec
adc
inc
jp
pusha
push
mov
scas
adc
jo
in
scas
jo
popa
xlat
sub
mov
ja
adc
outsl
xchg
or
cltd
mov
repz
adc
mov
adc
cwtl
push
js
mov
gs
mov
inc
pop
jne
in
and
enter
push
stos
jae
lods
sbb
sub
or
or
jno
fnstsw
push
scas
sub
inc
xlat
sub
mov
pusha
xchg
insl
adc
cltd
pop
ret
popf
ds
stos
or
sbb
add
std
or
add
mov
mov
arpl
pop
dec
jne
adc
sub
rclb
test
mov
mov
xlat
mov
mov
testb
popf
xchg
mov
push
and
enter
sbb
xchg
fidivs
push
xchg
pop
dec
scas
cmp
dec
lds
dec
mov
adc
sti
push
in
mov
es
cmp
xchg
lahf
xchg
in
or
scas
out
mov
xchg
fwait
outsl
jbe,pn
vpsrad
jmp
loopne
stos
js
es
cs
jp
stc
lock
lock
jb
jb
mov
xlat
lahf
fwait
in
loopne
mov
push
enter
aad
test
mov
ja
mov
aaa
stos
xchg
mov
jge
jbe
cs
push
pop
mov
aas
add
movsl
pop
sub
or
movsb
and
repnz
adc
mov
insl
push
and
lret
shrb
lcall
mov
rcrl
mov
xchg
sub
stos
cwtl
dec
dec
aas
bound
fwait
iret
aad
xchg
dec
dec
and
vpshad
test
push
daa
mov
pop
clc
adc
int3
out
xchg
sub
icebp
mov
or
cmpsb
mov
xchg
movsl
out
lods
hlt
pop
sbb
pop
jle
cmpl
sub
ss
data16
nopl
push
mov
sahf
xor
repz
cmpsl
and
add
push
fisubs
mov
pop
pop
popa
test
fcompl
inc
inc
fcomps
je
das
mov
and
pop
loope
xor
mov
jns
das
lret
xchg
pop
mov
inc
xlat
inc
stos
lods
xchg
sub
clc
loop
into
out
jo
cli
int
js
mov
cmp
push
dec
mov
pop
pop
xlat
push
xlat
mov
outsb
cmp
mov
fdivl
iret
mov
inc
adcl
es
push
jae
xor
pop
xor
cli
push
adc
inc
ss
xlat
pushf
pop
add
dec
jbe
jg
cmp
lret
popa
ljmp
popa
outsl
testb
pop
shll
add
and
xor
lret
test
xchg
dec
mov
jb
fidivs
pop
cmc
rorl
mov
or
jbe
mov
adc
pop
je
mov
dec
push
das
loopne
outsb
sub
sbb
cmp
dec
cmp
loop
outsl
in
scas
xchg
cld
cmpsl
lret
push
les
fadd
xor
aam
xchg
adc
ror
hlt
dec
lret
dec
mov
fcoms
das
popa
push
pop
cmp
push
inc
loopne
pop
je
stc
sarl
repnz
mov
jle
pop
out
lret
cld
sbb
jmp
ja
push
add
inc
jp
lret
push
cmpsb
sub
in
sub
sbb
rolb
adc
mov
aad
js
lahf
lea
add
jb
arpl
lods
mov
lret
movb
pop
pop
icebp
dec
int
idivl
mov
inc
xor
mov
shrl
repnz
sbb
loope
loop
and
out
mov
and
stos
lcall
mov
adc
aaa
pop
jl
push
sbb
pop
aam
lea
aad
ja
cmpsl
add
jl
divb
mov
fldenv
rolb
xchg
scas
ljmp
call
mov
lods
sbbl
xchg
in
movsl
lcall
out
lds
and
aas
xchg
or
or
inc
jne
cmp
insl
mov
lret
mov
cmp
test
aad
fidivrl
hlt
ret
jns
es
lock
and
xchg
jns
jae
cmp
xchg
ud1
mov
jo,pn
test
loopne
xchg
lock
lret
jle
flds
mov
xchg
jl
ds
lahf
ror
bound
vmovdqu
mov
push
pop
test
pop
outsl
pop
add
adc
and
push
adc
cs
lahf
test
mov
dec
and
xchg
mov
cmpsb
jle
pushf
outsb
pop
jmp
repz
int
lods
push
inc
lret
and
mov
jb
or
out
and
js
outsl
mov
adc
into
or
and
sbb
dec
lods
sub
xchg
pop
cmp
repz
addr16
xchg
dec
test
in
in
aas
dec
mov
repz
stos
adc
xor
mov
adc
ficoms
hlt
jmp
test
lret
mov
filds
pusha
loopne
inc
mov
mov
push
add
das
mov
aas
add
aam
aam
jecxz
jns
mov
std
pusha
push
jbe
xor
xor
add
adc
xor
pop
pop
mov
imul
pop
imul
repnz
addl
das
repz
lret
outsl
xor
inc
adc
lods
inc
in
popa
jno
mov
mov
ret
and
inc
shll
jne
gs
jl
loopne
fildll
dec
xor
or
mov
addb
loop
out
rcrb
test
push
cmp
adc
jno
adc
mov
aad
mov
fwait
test
stos
adc
push
xlat
xchg
push
xchg
out
xchg
in
in
sbb
jne
mov
add
cltd
dec
mov
cmpl
jle
lahf
rorb
int3
xchg
mov
mov
adcb
xchg
scas
sbb
push
insb
push
addb
dec
lock
jae
xor
push
cld
mov
andb
rorb
loopne
cmp
aas
test
lret
les
call
loope
mov
fiadds
mov
or
call
xchg
push
lret
xor
inc
jle
pushf
scas
in
scas
sub
js
nop
cmpsb
movsb
dec
lcall
call
push
mov
in
repz
fcomp
idivb
add
mov
add
fwait
nop
push
ja
xorb
loopne
sbb
mov
scas
shrb
inc
mov
dec
cwtl
cltd
push
lret
loop
sub
out
push
mov
pusha
jg
mov
sbb
jne
cld
stc
xchg
jecxz
mov
and
mov
daa
xchg
cmp
inc
push
andb
shlb
sub
stc
out
add
cmp
imul
lahf
test
pop
push
push
jno
xor
sbb
dec
andl
xchg
popa
pop
cwtl
clc
lods
sbb
and
aas
or
sahf
jo
jbe
cmp
adc
sbb
mov
sub
repnz
cld
in
cmpb
pusha
xor
push
std
push
or
push
and
cmp
outsb
mov
xchg
cmpsl
subl
fiadds
loopne
sub
dec
push
lea
dec
push
sbb
inc
pushf
pushf
push
mov
jno
lds
inc
inc
adc
lods
lds
cmp
add
xchg
or
xchg
mov
cmpsl
pop
ljmp
into
dec
sbb
and
hlt
out
out
scas
xchg
lock
call
cmp
fistl
or
adc
and
mov
adc
setbe
push
pushw
aaa
mov
jg
push
or
sahf
add
adc
jg
inc
hlt
fdivs
inc
jne
repz
jae
sbb
dec
pop
andl
fistl
gs
mov
mov
sar
lea
lods
das
pop
test
leave
push
add
inc
cmp
pop
sbb
repz
mov
jno,pt
pop
mov
icebp
mov
dec
jmp
imul
cld
cld
popf
mov
jo
fbstp
add
sarl
inc
movsl
xchg
and
mov
pop
sarl
mov
and
xchg
sub
ja
fsub
scas
jnp
and
lods
test
adc
mov
push
rcl
jns
fwait
pop
scas
add
frstor
jl
push
push
in
jb
dec
icebp
jecxz
in
cmp
test
sub
sub
mov
pushf
fdivrl
mov
push
int3
xor
inc
mov
lcall
out
inc
fdivr
ret
ss
int3
push
jge
jmp
xlat
add
push
in
add
mov
pusha
inc
test
sahf
adc
jns
lods
dec
jae
movsl
out
ficomps
adc
mov
faddl
aas
popa
add
stc
lock
sub
mov
or
ljmp
xlat
jnp
scas
add
sbb
pushl
roll
sarl
les
and
mov
out
sbb
sahf
push
outsb
out
mov
xchg
mov
xchg
stos
push
mov
fistpll
add
mov
mov
jg
in
dec
push
mov
or
inc
and
xchg
cltd
pop
fs
adc
repz
sbb
mov
fwait
test
in
fnsave
imull
xor
loop
or
mov
sti
and
notb
mov
dec
mov
lret
sub
and
push
fstl
or
adc
and
xchg
xchg
lahf
insb
loope
movsl
xor
cld
pop
xchg
sbb
test
adc
movsb
mov
jns
mov
jl
pop
sub
aad
pop
mov
notl
xchg
jb
out
sub
es
les
sbb
pop
jle
dec
lahf
adc
mov
dec
push
cmp
lock
ficompl
and
icebp
lea
cmp
and
jns
hlt
ja
mov
inc
mov
leave
shrl
es
pop
insb
int
cld
cld
rolb
aad
jmp
mov
lret
lret
xor
sub
push
dec
add
aas
inc
jb
sahf
leave
or
cmp
aad
cwtl
add
ss
mov
cmc
or
imul
inc
lcall
outsb
or
push
sub
fadd
bound
bound
xchg
inc
sub
sub
out
xor
in
push
xchg
pop
stc
lcall
pop
inc
xchg
pop
jge
cmp
sbb
subb
ficoml
pop
aas
and
and
mov
and
mov
in
test
les
bound
ss
sti
jbe
lcall
dec
repz
negl
mov
pop
imul
inc
lea
lods
jge
mov
sbb
outsb
rolb
leave
xchg
fisttpl
xor
mov
aad
jmp
test
filds
pop
push
push
cld
aam
stos
outsl
and
lahf
sub
nop
xorb
xor
xor
adc
sub
and
push
cmp
fwait
dec
orb
cli
in
insl
sbb
and
aad
jne
enter
xchg
sarb
inc
out
jmp
jp
mov
xchg
and
je
jl
push
in
jecxz
jg
mov
ja
sbb
fsubs
pop
ds
loopne
jne
leave
imul
xchg
xorb
repnz
pop
add
shl
out
pop
xor
in
or
dec
mov
loope
xor
cmp
sbbb
xor
aad
dec
test
or
dec
dec
adc
sbb
out
enter
sar
imul
mov
sub
loop
shrl
sbb
pop
pushf
xor
lock
repnz
cmp
pop
les
sar
or
stos
inc
out
and
mov
pop
shr
mov
cmpsl
fldcw
pop
push
mov
je
push
paddd
adc
out
jb
pushf
inc
jg
ds
adc
shl
je
xchg
orb
cmp
ret
add
mov
repz
testb
in
mov
dec
in
lock
imul
fldt
pop
or
mov
fisttpll
dec
dec
push
pop
pop
sbb
sbb
ljmp
add
out
dec
mov
xlat
scas
cltd
pop
push
sub
stos
xchg
iret
cmp
call
test
insb
or
xchg
cmpb
mov
jo
mov
stos
or
inc
inc
iret
out
gs
les
cld
jecxz
js
scas
mov
add
aaa
movsl
cld
sbb
lods
pop
mov
jb
inc
lret
in
hlt
es
adc
imulb
cmp
pop
mov
or
xor
negb
sbb
lock
sub
sub
imul
rorb
shl
fnsave
fistps
xchg
sbb
inc
jg
sbb
cmp
adc
xchg
dec
xchg
insl
mov
inc
cmpsb
push
cwtl
or
add
rorb
jae
pusha
or
pop
cmp
out
cmp
inc
inc
stos
icebp
aaa
mov
nop
cmp
push
insl
mov
lds
inc
shll
mov
popf
xchg
sub
cmc
cwtl
frstor
insb
add
inc
cmp
divl
sbb
test
bound
fwait
jns,pt
or
sub
adc
lahf
in
cmp
push
push
das
je
mov
inc
cmpsl
lcall
loope
cltd
in
and
mov
sub
or
pop
aad
clc
xchg
test
cmp
sub
and
aad
lock
aam
pop
scas
or
xor
cmp
ret
and
or
fstpl
push
inc
aad
jp
shll
push
inc
cmp
test
ret
push
outsb
sarl
leave
into
fwait
insl
xor
ret
mov
pop
icebp
push
enter
pop
les
test
fldl
rcrl
cltd
sbb
ret
mov
repnz
mov
jge
nop
stc
mov
int
push
push
out
int3
pop
mov
add
into
mov
aad
rcrb
aam
cmp
arpl
stos
jo
dec
push
aad
ljmp
adc
in
inc
mov
cld
or
adc
addr16
ret
mov
cld
xor
js
jg
shr
cld
es
and
dec
adc
mov
shld
mov
and
fistl
int3
mov
hlt
sbb
dec
pop
jnp
mov
push
jno
push
fdivrl
sub
mov
adc
ljmp
mov
pusha
cmp
cmp
push
daa
sbb
jge
jne
lret
push
adc
ret
mov
push
lret
out
mov
sub
cmp
xor
xchg
inc
ret
movsb
sahf
jmp
sbb
iret
pusha
insb
addl
pop
or
lret
xchg
pushf
popf
and
jb
je
mov
adc
xchg
push
mov
pop
pop
cmp
xorl
ret
rolb
popa
fbld
stc
mov
dec
sub
cmp
xchg
add
push
gs
es
inc
int
call
xor
popf
and
jge
adc
dec
or
xchg
cwtl
xor
cwtl
adc
jb
fwait
movsl
mov
push
and
xchg
iret
loop
add
gs
jmp
into
int3
imul
dec
hlt
ljmpw
inc
dec
fstpt
jne
xor
jnp
xlat
add
sub
stos
call
xor
dec
fs
and
dec
fldl
rolb
push
daa
fdivs
sbb
pop
inc
jns
int3
pop
push
cs
mov
jbe
cmp
ret
pusha
push
aaa
lods
inc
int3
in
mov
cwtl
mov
cmp
adc
dec
fidivs
add
xchg
jb
ja
or
jg
push
scas
test
test
rcll
neg
jmp
in
xor
mov
mov
inc
adc
fistl
xchg
inc
xchg
scas
jmp
or
and
and
dec
and
sbb
lcall
and
lods
das
fisubl
push
pop
sbb
adc
int3
test
push
dec
call
or
inc
xchg
or
xchg
dec
daa
adc
xchg
and
les
insl
mov
cmp
outsb
int
std
dec
in
ds
lea
mov
out
dec
fidivrs
insl
mov
cmp
outsb
int
std
dec
in
ds
lea
mov
out
dec
fidivrs
insl
mov
cmp
outsb
int
std
dec
in
ds
lea
mov
out
dec
fidivrs
insl
mov
cmp
outsb
addr16
std
dec
lcall
icebp
push
push
mov
sub
push
push
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
sbb
pushf
cmp
mov
fwait
or
sbb
sub
cmp
dec
enter
call
pushf
cmp
push
js
push
cmp
sub
cmp
and
pop
clc
sub
jl
push
or
lock
loopne
add
cwtl
shrl
dec
fcomps
mov
jl
mov
cmp
inc
jmp
xchg
lock
push
bt
push
mov
rcll
sub
not
add
dec
and
add
sub
dec
enter
mov
cltd
push
mov
xchg
or
dec
aaa
ja
sbbl
pop
jnp
call
mov
mov
mov
and
push
dec
pop
sbb
mov
mov
dec
cltd
lea
aad
cmpsl
call
jecxz
cltd
pop
orb
dec
pop
pop
jge
andl
and
mov
ret
pop
fsubrl
je
rol
and
dec
fwait
mov
fisttpl
mov
int3
dec
fdivrl
push
fidivrl
pusha
enter
call
pushf
jle
outsb
xchg
cmp
test
cltd
call
pop
in
push
pop
and
sbb
pop
int
cltd
cmp
subb
lds
pop
das
sbb
adc
fimull
fstpt
dec
fistps
in
push
sbb
sub
cmp
dec
enter
call
pushf
cmp
fdivrl
push
sbb
sub
cmp
dec
enter
call
dec
movsl
xorps
lcall
out
aaa
pop
mov
sbb
cltd
notb
pop
sub
loopne
and
rcl
mov
xchg
test
ss
xor
clc
shll
mov
pusha
lret
mov
roll
pusha
arpl
and
xor
repnz
loopne
jmp
jo
lods
leave
mov
jg
mov
xor
les
pop
ja
adc
enter
lock
xchg
test
lods
xchg
sar
fucomp
js
aaa
data16
xchg
sbb
jecxz
outsb
fcomip
push
ja
sub
repz
mov
cmp
call
xchg
sbb
jae
mov
mov
jle
test
xchg
jg
dec
sarb
into
dec
js
adc
stc
js
hlt
cmpsb
pop
jb
adc
fildll
xchg
mov
lods
sub
fs
push
in
push
xlat
inc
mov
incb
jmp
scas
push
jnp
iret
ds
stc
adc
repnz
sub
sarb
sub
xor
adc
dec
sub
lcall
setg
jge
and
add
aam
clc
ss
rorb
cmp
mov
mov
incl
imul
adc
clc
add
rol
mov
push
jns
je
xor
cwtl
mov
sbb
fnstenv
xor
inc
cmpsb
sub
jb
cltd
fldt
jnp
jnp
repnz
inc
push
stos
aaa
push
aad
mov
stc
mov
out
sub
and
mov
inc
dec
push
adc
pop
clc
repz
push
ds
mov
push
mov
dec
imul
out
fnstsw
push
mov
repz
fsubrl
mov
in
lahf
mov
sub
push
jnp
jno
in
cmpsb
sub
cmc
sub
sbb
jno
shl
and
test
inc
sbb
inc
cmp
mov
js
cwtl
xchg
mov
push
cmpsl
insb
jae
in
push
cmp
mov
add
adc
mov
cs
pop
loope
cmp
push
enter
int
call
cmp
jo
adc
cmpsb
adc
push
or
push
daa
movups
sub
pushf
ss
pushf
repz
inc
cmpsl
dec
test
inc
xor
call
inc
xchg
and
scas
jl
les
fnstcw
clc
cmp
jge
lret
pushf
cli
adc
xor
xchg
dec
repnz
or
sti
stos
aas
nop
pop
jnp
xchg
and
or
sti
push
or
jmp
mov
aaa
ja
or
stc
add
mov
fwait
addr16
stos
jle
xor
add
mov
jmp
fs
xor
shl
hlt
out
fcomi
cmovno
dec
pop
push
popa
cs
ljmp
xchg
es
sti
and
jecxz
outsl
mov
stos
mov
es
push
add
sub
push
loopne
dec
push
cmp
and
mov
lock
ret
adc
fprem
inc
fmul
xor
cmp
aas
movsb
in
shlb
dec
push
out
or
lcall
mov
jp
add
xor
es
xchg
sbb
lds
dec
testl
sub
add
ret
or
xchg
and
sbb
push
xor
aam
stos
fs
jno
scas
mov
lahf
mov
dec
aas
and
xor
out
ds
jnp
dec
aas
pusha
call
out
jne
mov
push
adc
mov
sub
or
fiadds
lcall
sbb
mov
xchg
outsb
ds
mov
addr16
xor
xor
int3
add
adc
and
orl
movsl
pop
xchg
mov
in
pushf
in
xor
shll
mov
adc
mov
flds
out
xchg
loop
arpl
sti
cltd
cltd
or
stos
loope
xor
imul
icebp
loope
nop
lahf
dec
je
push
insb
mov
inc
pop
cmc
mov
fwait
pop
or
popf
pop
cmp
xchg
jl
outsb
subb
xor
add
xor
push
je
es
pop
add
loope
pop
dec
mov
repnz
push
jmp
push
cmc
jl
mov
push
or
out
mov
add
add
movsb
sub
clc
add
test
out
push
xor
sarb
sbb
jmp
inc
in
pop
lahf
out
cmc
sub
pop
bound
movsl
cld
and
js
cltd
add
xchg
mov
sbb
jp
jbe
std
inc
xchg
adc
sub
mov
xchg
aam
cltd
mov
testb
pop
mov
rorl
mov
xchg
cmpsb
clc
cmpsb
test
call
call
fists
dec
jge
mov
mov
ljmp
xor
add
lret
clc
mov
pop
mov
xchg
leave
int3
inc
lds
das
jg
push
cmp
pop
mov
iret
int
popf
inc
lods
or
scas
add
jmp
push
xchg
jno
ret
xchg
jns
mov
daa
imul
xchg
pusha
cmp
mov
xorb
in
or
movb
push
mov
imul
idiv
pop
xor
sub
enter
xchg
ret
js
cmp
iret
inc
cltd
sub
xor
fisubl
lock
mov
sbb
inc
mov
testl
sub
cmpsl
jae
bound
mov
gs
flds
cmp
scas
adc
insl
je
into
orl
pop
inc
fwait
rcll
int3
bound
jo
mov
out
push
mov
pop
in
outsb
adc
add
adc
int3
scas
test
push
mov
cmp
jmp
arpl
jno
test
sbb
shll
push
lods
mov
cs
imul
stc
popf
repnz
xlat
inc
mov
mov
xchg
push
pop
inc
and
pop
aam
dec
xor
ja
ds
pop
aas
fsubrp
sti
xor
mov
inc
and
lea
shlb
test
aad
push
fdiv
shr
dec
pop
cmp
je
fcoms
adc
sbb
iret
sahf
mov
mov
push
ss
and
les
std
and
scas
popa
push
ret
stos
popa
cmp
test
xchg
loop
sub
push
out
pop
fdivs
cmpsb
adc
dec
cmp
mov
cs
push
mov
and
jo
paddsb
jne
xchg
push
sarl
or
pop
outsb
and
pop
xor
push
mov
nop
sub
js
inc
xor
xchg
xchg
mov
cmp
test
leave
or
mov
shll
pop
cmp
outsb
xlat
adc
adc
add
enter
bound
sbb
sub
xorl
sub
jnp
and
in
aad
inc
dec
xchg
cli
inc
iret
sub
insl
jne
mov
inc
sti
ss
push
pop
xchg
mov
xchg
in
cmp
xchg
and
mov
push
xor
push
add
xchg
add
nop
pop
mov
loopne
mov
loop
pop
xor
mov
iret
fisttpl
fistpl
push
lret
lcall
aas
xchg
mov
pop
dec
push
ja
add
xchg
lock
dec
loope
jno
out
je
cli
sub
stc
sbb
or
jl
bound
adc
loop
xor
xchg
aad
xor
movsl
pop
push
jb
movsl
dec
pop
ficoms
es
mov
popl
sbb
sub
out
cmp
stos
add
into
in
jp
cmp
cmp
gs
pop
and
je
call
movsl
bound
imul
push
ljmp
popf
in
push
fstp
mov
or
cmp
push
loopne
push
adc
or
enter
pusha
cmpsl
int
xchg
push
jae
xchg
movsb
add
repz
mov
mov
lret
call
mov
fsubr
mov
sbb
sub
subb
lea
jo
icebp
in
xor
lahf
mov
fldl
inc
loopne
das
pusha
mov
dec
orb
mov
outsb
mov
int3
inc
imul
repnz
out
xor
and
push
les
pop
sbb
jnp
adc
xchg
lea
cmp
xor
cltd
mov
mov
cmp
mov
pop
leave
adc
bound
xchg
push
jecxz
les
repz
pop
jb
loop
lods
fdivs
aam
ds
or
mov
pause
sub
jmp
into
inc
push
mov
fisubs
sub
cwtl
inc
mov
push
xchg
xor
jno
lock
mov
nop
push
lahf
mov
ljmp
lods
das
push
rol
sub
fdiv
je
stc
loop
xor
add
and
fcmovbe
aam
dec
lds
outsl
add
dec
add
les
pusha
in
into
in
sub
aam
enter
mov
ret
cmp
clc
cmp
cltd
movsb
mulw
mov
daa
lods
push
sbb
out
and
adc
lret
mov
push
fisubs
jecxz
sbb
test
lahf
cltd
push
pop
movsl
outsb
in
mov
or
push
xlat
std
cmp
mov
mov
sub
popf
gs
das
mov
incb
add
dec
lock
dec
aam
bound
fsubs
mov
and
shlb
mov
jae
clc
inc
xchg
enter
adc
insb
push
dec
andl
ds
cmp
pop
push
movsb
adc
movsl
fsts
mov
xchg
cmp
sarb
inc
and
pusha
call
cmp
dec
push
xor
aad
dec
cmp
jp
inc
pusha
sbb
lea
push
and
xchg
shrb
mov
and
sbb
xorl
mov
int3
push
stc
and
sarb
test
test
jmp
in
mov
pushf
push
xchg
les
or
or
cmp
push
add
addb
add
les
clc
xor
ds
fwait
jb
cmp
loopne
out
xchg
cmp
xchg
mov
out
xor
ror
mov
sub
aaa
xor
add
pop
enter
pop
fsubr
mov
add
adc
les
mov
adc
lret
sbb
dec
mov
mov
mov
mov
cmp
adc
mov
loopne
fdivrl
ds
push
ret
jmp
popl
cmp
fistpll
mov
push
jb
aas
jnp
sub
out
mov
lock
and
bound
xor
cwtl
mov
or
out
jl,pn
push
jp
sub
iret
fildll
xor
loope
mov
arpl
xchg
insb
jo
rol
aas
arpl
inc
jno
xchg
das
push
in
cmp
add
xchg
pushf
ucomiss
fdivp
inc
mov
in
lock
cltd
dec
xor
adc
xchg
inc
in
testb
mov
fisubrl
outsb
mov
imull
rolb
push
lcall
xchg
dec
lret
outsb
clc
cmpsl
lock
xor
adc
xchg
push
bound
fidivrs
jmp
mov
rcr
subb
loopne
in
fwait
pop
lahf
aam
into
xor
mov
pop
and
bound
stos
in
dec
adc
icebp
enter
lcall
push
lahf
ja
jp
mov
insl
adc
inc
jno
add
cmpb
int
mov
mov
jno
or
ret
sub
xchg
andl
fldcw
push
and
xor
out
test
xor
fldt
or
idivb
sub
shrl
inc
mov
and
pushw
ljmp
insb
xor
mov
hlt
cwtl
scas
loope
data16
sbb
xor
push
mov
push
add
jnp
aam
fs
mov
lods
adc
das
outsl
aad
jb
std
out
decl
cmp
shlb
out
lds
rclb
xchg
mov
xchg
lds
mov
sbb
mov
fdivrp
out
inc
pusha
sbb
frstor
ss
fildl
sahf
jmp
xchg
shlb
pop
xor
or
int3
cmc
cmp
in
lods
add
adc
aas
and
nop
repnz
push
imul
xchg
inc
add
aas
popf
or
cwtl
insb
fs
mov
into
sarl
mov
and
sbb
or
xchg
mov
xchg
fcomp
cmp
roll
mov
fs
cmpsb
and
mov
rcrb
push
xor
push
pop
jbe
std
das
lcall
push
mov
in
push
mov
pop
ret
in
enter
push
scas
sbb
mov
jb
insl
sbb
pop
push
sbb
pop
fcmovne
psllw
repz
hlt
rolb
push
insb
adcl
dec
xor
ficoms
mov
out
or
adc
mov
out
sub
jne
outsb
lds
xlat
cmp
shlb
dec
mov
gs
loopne
pushf
aam
push
mov
inc
mov
xor
jecxz
push
pop
jb
ret
imul
sbb
jl
bound
sbb
sub
xor
ret
repnz
push
out
popf
subl
mov
inc
rcrb
mov
add
leave
shlb
mov
mov
sbb
loope
pop
dec
ret
out
inc
add
enter
pusha
loop
push
jecxz
inc
or
sbb
fwait
pop
out
inc
sub
pop
hlt
add
sub
ljmp
jno
out
imul
xchg
lret
jno
mov
fwait
xchg
fistpl
pop
cmpsb
fs
call
fcoms
movsb
add
jge
jbe
int
loope
mov
jbe
xchg
or
fs
mov
pusha
iret
ret
enter
pop
add
sub
xchg
or
lock
or
cmp
inc
loop
pop
xchg
push
dec
fistpl
xchg
aam
js
adc
push
dec
mov
mov
xchg
xchg
int3
aad
pop
lea
push
popf
jo
scas
push
insb
mov
push
insl
insl
in
xchg
rcrl
adc
cmp
loopne
adc
fistpll
pop
and
pop
lahf
dec
lods
notb
dec
fstpt
loopne
add
mov
or
call
jmp
leave
repz
test
and
sub
dec
adc
imul
push
add
cltd
jns
and
xchg
or
out
jg
push
pop
xchg
je
xor
fs
mov
stos
test
call
lcall
in
lahf
cwtl
mov
test
lcall
sbb
test
fsubr
mov
int
mov
in
mov
fwait
imul
jg
loope
xor
pusha
loopne
xor
js
in
dec
repnz
insb
mov
adc
and
inc
cmp
inc
inc
or
sub
ljmp
or
mov
sub
inc
pusha
fwait
and
cmp
int
mov
push
or
dec
cmc
ja
enter
xor
pop
out
mov
dec
test
pop
pop
sub
cmc
push
lea
xor
cmp
ret
xor
insl
ljmp
sub
inc
rorb
and
fildll
mov
inc
mov
shrl
std
lods
shll
daa
adc
insl
int
js
sub
sbb
imul
ret
fidivs
push
hlt
aas
jae
lcall
jbe
and
ret
push
inc
cld
loope
fnstcw
shlb
je
dec
add
jge
out
addr16
mov
dec
aas
jbe
rclb
xor
sub
mov
xchg
adcb
call
mov
dec
jmp
push
mov
xor
into
movsb
sti
or
outsl
seta
std
adc
int
lock
pop
inc
xchg
cmp
insl
popa
inc
popf
inc
add
pop
xor
mov
push
and
mov
decb
lahf
or
les
outsl
inc
mov
ja
add
mov
xchg
jl
aam
mull
pop
test
xor
jbe
ficoms
push
jecxz
push
or
lea
daa
jne
mov
cmp
mov
push
or
shrl
lods
stos
imulb
sub
enter
out
gs
add
pop
pop
test
sahf
push
mov
add
ja
je
inc
orl
out
xchg
xchg
fisttpll
inc
inc
xchg
push
xchg
jb
aas
xorb
std
push
inc
sbb
xchg
mov
or
push
loop,pn
jg
or
sbbb
fimuls
mov
repnz
test
aaa
cltd
and
insl
imul
push
or
xor
push
push
sbb
pop
sub
mov
icebp
mov
inc
pop
sbb
mov
es
rol
cmp
mov
cmp
xlat
push
inc
inc
push
stos
push
inc
adc
mov
clc
push
pushf
mov
lea
loopne
mov
outsb
sub
xor
aad
xor
ror
fst
rclb
cmp
ret
js
push
adc
les
sub
inc
addb
jno
cmpsb
sahf
inc
inc
xor
mov
mov
lock
fsts
loope
add
insl
push
dec
mov
arpl
inc
sbb
cmp
sbb
loopne
lahf
pop
les
or
test
and
movsl
cmp
cmp
xchg
pop
ret
push
push
or
js
cmp
jmp
and
mov
xchg
mov
add
mov
xchg
ret
add
outsb
ds
mov
cli
pop
std
xchg
adc
inc
cltd
daa
sbb
dec
xor
mov
xchg
xor
ljmp
xchg
lods
mov
in
add
inc
roll
mov
flds
out
jp
mov
cmp
jmp
arpl
or
add
mov
jns
aaa
mov
xchg
iret
adc
mov
sbb
and
fwait
xchg
dec
outsb
out
call
push
mov
std
dec
adc
pop
pop
enter
pop
and
cli
lahf
aam
push
xchg
mov
push
cmp
xor
leave
clc
gs
inc
mov
dec
mov
inc
notb
sar
repnz
push
mov
xchg
push
loop
repz
jge
rorl
outsb
sbb
outsl
in
aas
test
repnz
jge
sub
pop
scas
jp
add
lret
sub
jl
into
add
cmpsb
pop
jns
int
ja
inc
mov
inc
cwtl
pushf
xchg
mov
cltd
loope
fldl
add
sbb
pop
cltd
insl
jno
sahf
and
loope
and
mov
lea
mov
pop
cmpsb
mov
jnp
hlt
or
push
sub
iret
mov
sub
sub
xor
and
mov
jg
decb
lret
inc
cwtl
xchg
mov
or
xchg
lret
adc
cmp
test
test
and
out
popf
enter
jle
dec
dec
test
and
repnz
mov
xchg
pop
fdiv
add
lahf
mov
seto
movsl
subps
loopne
shr
pusha
push
std
mov
or
inc
jmp
dec
mov
adc
dec
enter
mov
and
cli
cmp
add
mov
lds
jmp
popa
iret
out
cmp
popl
sub
call
fldt
mov
sbb
inc
iret
adc
xor
mov
adc
addl
jnp
mov
sbb
push
xor
cmpsb
and
fcompl
icebp
pop
call
push
push
aas
xchg
loop
pop
xor
mov
add
cmp
lahf
cmp
cwtl
test
xchg
scas
sahf
repnz
pop
dec
int
cmp
xchg
xchg
add
fld
sbb
xor
ret
test
fst
push
mov
aad
cwtl
roll
mov
or
jnp
lret
shrb
sub
add
dec
scas
xlat
push
popa
add
imul
xchg
iret
push
cmp
mov
push
push
xchg
pop
jmp
pop
push
mov
dec
sbb
jle
adc
mov
sahf
sbbl
pop
popf
rol
xor
xor
add
leave
repnz
xor
mov
out
dec
fsubrs
lds
pop
adc
ret
clc
xchg
dec
ret
rcl
imul
sbb
fld
sbb
cld
arpl
imul
pop
jle
push
jne
or
jbe
ret
pusha
sbb
xchg
movsl
sarb
pop
int3
dec
fdivrl
push
sbb
sub
cmp
dec
enter
call
pushf
cmp
fdivrl
push
sbb
sub
cmp
dec
enter
call
aam
aam
mov
js
push
sbb
sub
cmp
dec
enter
call
pushf
cmp
fdivr
insb
call
mov
sub
dec
scas
les
add
lea
fstpl
ret
call
in
pop
cmp
dec
dec
pop
jge
jge
stc
lea
int
std
out
in
lcall
das
sub
pop
jge
insl
jg
jg
das
scas
jne
ret
iret
lods
out
in
jns
cs
push
pop
dec
aas
ss
xor
pop
jmp
lret
les
or
push
daa
in
sbb
adc
dec
bound
mov
xchg
imul
repz
dec
and
pusha
imul
mov
jg
das
sarl
mov
outsl
xchg
andl
dec
enter
adc
mov
fidivrs
iret
or
decl
or
push
jle
jo
sahf
pop
scas
inc
stos
and
int
add
in
scas
sbb
or
shlb
insl
pop
bound
andb
xor
iret
inc
and
test
mov
cmp
xchg
test
das
bound
adc
scas
push
lret
and
add
jp
lock
mov
fnstcw
shlb
outsb
jg
fistpl
cmp
mov
std
out
dec
fisttpl
xchg
pop
dec
das
sbb
pop
dec
outsl
insl
cmp
loop
dec
leave
jmp
mov
sbb
inc
dec
push
das
and
es
or
ror
call
call
or
pop
jae
jns
push
and
and
adc
sub
icebp
jmp
lret
mov
in
lcall
das
sub
pop
jge
insl
jg
lea
int
std
out
in
lcall
das
sub
pop
jge
insl
jg
sub
adc
mov
add
push
xor
fwait
nop
xchg
cli
mov
cltd
leave
out
out
leave
aaa
icebp
lahf
add
sub
push
imul
out
repz
stc
pop
imul
dec
push
movsb
stos
insl
xchg
fists
fistps
out
in
inc
adc
sub
outsb
push
or
loopne
cs
ja
or
mov
jns
xchg
xor
xchg
mov
iret
iret
lret
jne
cld
cmp
sahf
jo
ret
loope
adc
ret
pop
adc
jle,pn
push
out
sbb
or
inc
and
sub
in
mov
std
sbb
push
clc
shll
jns
rcr
push
fwait
sbbl
xor
divb
mov
or
jmp
push
and
jbe
push
aas
mov
cmp
jl
fsubrs
mov
dec
mov
xchg
adc
jl
jae
andl
push
mov
pop
mov
xchg
idivb
mov
mov
pop
xor
enter
mov
js
scas
add
mov
xor
rcll
mov
pop
mov
pop
fistps
or
xlat
push
mov
pop
ret
jmp
pop
mov
scas
push
push
inc
push
mov
rcll
jno
and
fildl
pop
rorl
add
mov
out
loope
jb
add
cltd
fdivs
stos
sub
stc
xchg
mov
mov
sbb
outsl
jne
loopne
pop
sbbl
mov
fcmovnbe
xor
jmp
outsl
scas
ret
sub
jnp
and
mov
jmp
xor
adc
repz
repz
cs
mov
mov
stc
jmp
sti
scas
jno
lods
xor
dec
cmp
mov
es
xchg
jo
mov
jae
push
push
ja
push
add
pusha
sbb
and
jmp
mov
push
xchg
pushf
xchg
mov
testl
mov
add
bound
out
jge
leave
dec
movsl
adc
scas
mov
mov
or
push
cwtl
mov
adc
daa
jge
xor
repnz
sub
aaa
sub
xor
jg
js
inc
or
pop
add
clc
mov
and
wrmsr
aam
dec
mov
jecxz
pop
out
sub
in
push
or
fcomp
loop
sbb
inc
sbb
ljmp
subl
cmp
mov
xchg
jo
pop
pop
jnp
push
negb
cmp
xor
xor
sbb
popa
pop
dec
ret
adc
dec
push
xor
int
cmp
fstpt
stc
fsubrl
pop
cmp
into
mov
cmc
ss
nop
inc
mov
pushf
addb
insb
insl
inc
sar
rorl
mov
push
dec
adcb
in
mov
mov
jecxz
aad
sbb
sarl
sti
stos
lock
adc
bound
dec
mov
sahf
cltd
pop
mov
sbb
sub
push
loopne
addr16
bound
mov
jmp
mov
clc
cmp
inc
adc
mov
jb
ja
lret
mov
pop
movsl
xor
inc
cmpsl
outsb
pop
cli
mov
and
lret
popl
mov
int3
pop
push
test
dec
test
sti
pop
fcmovne
add
dec
cmp
push
out
sbb
inc
and
jg
gs
sbb
shrl
movsl
jp
cmp
fiadds
imul
and
es
mov
in
cmp
lods
dec
test
fisubrs
mov
loop
push
orl
adc
popa
pop
mov
sub
call
fidivrl
cmp
pop
add
xchg
stos
movsb
test
push
dec
mov
mov
add
andl
sub
pop
sub
and
and
in
repz
xor
stos
jp
add
sarb
add
cli
push
inc
xor
gs
imul
enter
inc
adc
pop
div
push
ret
inc
mov
pop
leave
loopne
fmuls
movb
add
pusha
dec
cli
in
jg
mov
mulb
pop
fsubl
icebp
jbe
adc
mov
mov
jmp
mov
jmp
repnz
cmp
popa
orl
adc
cmp
scas
mov
cmp
cmpsb
add
dec
or
jle
adc
dec
mov
ror
loope
dec
faddl
inc
test
dec
adc
mov
dec
sub
ljmp
cmp
pop
jbe
xor
mov
xor
xchg
fsts
roll
jbe
test
movsl
loope
in
dec
mov
je
insb
in
cmp
and
outsb
cmp
adc
in
cld
mov
add
sbb
das
mov
popa
into
aad
addl
repnz
mov
fidivs
xchg
inc
cli
imul
lcall
or
mov
sti
xchg
ret
pop
hlt
pop
gs
jp
stc
and
and
nop
xchg
ljmp
int3
jle
mov
or
sbb
push
sub
mov
xor
das
inc
sbb
mov
enter
neg
lods
addb
repnz
inc
xchg
push
cwtl
imul
pop
js
out
outsb
xor
jg
and
push
xchg
dec
adc
sahf
fsubr
jl
hlt
lods
add
rolb
lea
inc
dec
dec
cld
mov
xlat
add
pushf
push
nop
imul
push
cmp
dec
js
repz
or
jnp
sbb
repnz
cli
or
or
fwait
mov
sti
xor
mov
or
add
cmpb
imul
cmp
xchg
scas
and
js
out
shrl
insl
mov
bound
push
ljmp
stos
aas
inc
push
imul
lods
fiadds
rcrb
and
fidivs
mov
push
sub
xchg
add
movsl
out
cwtl
daa
adc
jge
or
xor
xor
sub
fiadds
int3
dec
lcall
pop
pop
out
lds
call
ja
pavgb
and
lods
jne
rclb
pop
sbb
push
fwait
cmp
push
xchg
stos
lea
ds
cs
jne
xchg
cmp
mov
stos
mov
shlb
or
mov
cmp
pusha
cmp
and
cld
jns
jmp
xor
popf
xor
sbb
hlt
leave
push
shll
les
pop
popf
jbe
or
subb
dec
jae
ljmp
sbb
push
dec
in
ja
imul
cmpl
test
xchg
cwtl
xchg
test
cmp
faddl
jbe
out
jns
fdivrp
xor
sbb
and
into
push
fnstsw
in
enter
and
mov
xor
mov
stc
push
sub
lret
decb
xchg
mov
add
jb
aad
mov
push
mov
xchg
inc
xor
cmp
cmp
add
inc
cltd
scas
dec
fwait
adc
les
xchg
xor
dec
imul
aas
dec
jl
or
inc
ds
lock
jmp
iret
pop
push
incb
std
scas
mov
sbb
push
sub
push
mov
sbb
testb
push
xchg
jecxz
adc
ret
or
dec
shl
loope
in
mov
push
dec
xchg
or
es
lea
testl
insb
and
xchg
cli
xor
sti
insb
jo
loop
dec
lret
js
sub
push
xor
pushf
out
jae
or
hlt
shrb
sbb
dec
pop
xchg
jnp,pn
pop
ss
ljmp
xchg
sub
and
lret
es
xchg
out
dec
nop
sub
data16
shll
std
dec
pushf
int3
xor
cmp
adc
shll
dec
inc
mov
fists
sbb
mov
pushf
int3
mov
shlb
push
xor
jnp
loopne
jno
es
sti
lcall
das
xchg
cli
ja
stc
repnz
and
push
loop
push
out
jne
mov
adcb
sub
insb
shr
jmp
cmp
or
mov
ret
xor
fimull
push
jo
mov
add
mov
and
or
fisubrl
ret
call
mov
push
test
xchg
repnz
push
addr16
jns
in
popf
xor
imul
cmpl
divb
roll
cmp
daa
mov
xchg
pusha
push
inc
das
or
fs
xor
stos
out
push
mov
out
repz
leave
push
movsb
in
add
movsb
lret
push
pop
sub
mov
gs
inc
lretw
dec
jae
xor
aad
rcrb
mov
add
lods
shlb
pushf
int
js
sub
mov
jmp
and
in
fdivs
add
add
mov
push
jle
lea
ljmp
cltd
xchg
gs
fiadds
sbb
fstl
inc
mov
dec
sbb
mov
repnz
imul
fnstcw
push
dec
aam
xchg
cmp
mov
lea
and
mov
sbb
add
and
sbb
ja
loopne
inc
xlat
inc
jne
jbe
xor
adc
jns
inc
mov
cltd
ret
shrd
hlt
mov
inc
lea
jg
pop
adc
pop
mov
dec
cmp
loopne
and
sbb
adc
ret
mov
jb
lea
dec
pop
fisttps
cmp
stos
in
jbe
or
xlat
icebp
push
jae
cwtl
std
pop
fldcw
xchg
fld
push
pop
nop
out
or
dec
mov
scas
xchg
cmp
sub
mov
test
roll
sub
pushf
ja
sub
popa
lahf
imul
cli
push
jo
inc
cmc
inc
jne
cmp
push
lret
cmp
xor
xor
scas
fisubl
and
das
sub
imul
pop
stc
in
jle
ret
cwtl
cld
adc
adc
aaa
mov
movsl
xor
cmovns
and
or
add
ret
dec
push
fmul
pop
adc
rclb
arpl
stc
popf
sbb
sbb
imul
push
push
adc
mov
shlb
test
dec
cwtl
or
jae
shlb
imul
sub
cmc
inc
lcall
mov
mov
dec
stos
push
push
les
test
adc
fsubrl
mov
mov
push
or
cld
mov
cmp
in
pop
repz
repnz
adc
inc
mov
inc
loope
js
out
adc
leave
leave
push
sbb
cmc
test
mov
push
push
ffreep
push
sbb
pop
push
ja
jle
xlat
mov
cmp
dec
cwtl
paddsb
mov
or
inc
mov
pop
xor
cmp
push
pusha
ljmp
mov
pushl
dec
dec
les
iret
add
movsl
cmc
and
dec
insb
dec
and
xchg
in
scas
pop
cmp
jo
cmp
popf
repz
loope
inc
int
sub
xchg
push
mov
ret
lea
mov
divl
mov
das
cmp
add
push
or
icebp
jge
inc
push
std
cmc
int3
jno
xor
fninit
fnstsw
dec
push
idiv
mov
leave
inc
xor
cltd
mov
jge
das
push
jno
mov
lock
icebp
jle
xor
pop
out
out
pop
cmp
or
jecxz
lock
in
mov
jl
mov
add
pusha
pop
jb
das
fmul
xor
push
cmpsl
btsl
mov
mov
dec
pop
inc
adc
pop
lcall
clc
movsl
inc
test
lods
xchg
mov
stos
jbe
jnp
sub
lret
lods
andb
mov
ja
pop
xchg
lcall
lret
sbb
cmp
loopne
jle
shlb
and
cmpsb
cmpsb
xchg
shlb
das
jle
xchg
out
mov
cwtl
xchg
mov
xchg
sti
cwtl
xchg
test
jmp
stos
xchg
andl
into
subl
test
mov
adc
mov
xchg
jne
repz
push
push
and
je
mov
into
lret
pop
add
inc
mov
mov
jmp
xlat
ficoms
adc
nop
in
out
data16
dec
cmp
mov
sbb
jae
cmc
int3
and
mov
sub
push
mov
outsl
add
out
cmp
call
jbe
push
aad
fdivrs
mov
adc
xchg
pop
aas
xor
push
rol
add
sahf
push
sub
jb
je
int
adc
jo
xor
xor
mov
push
into
fld
rorb
cmpl
aam
fwait
cmpb
jae
push
and
dec
divb
arpl
sub
cmpsl
or
push
push
inc
test
push
adc
aas
call
mov
xor
lock
es
pop
rcl
pop
fnstsw
clc
inc
sbb
xor
arpl
mov
gs
jle
sbb
cs
xchg
cmp
push
es
mov
and
loop
and
inc
ds
fcmovbe
sbb
test
aaa
sbb
sbb
add
fiaddl
into
mov
jae
xor
mov
and
pop
sbb
stos
mov
pop
idivl
jmp
mov
cmp
mov
popa
mov
cld
and
out
sub
sub
xor
fucomi
xchg
mov
cs
and
add
or
in
cmpsl
jnp
adc
push
cmp
or
enter
pop
add
cld
push
loope
inc
mov
inc
outsb
les
mov
test
push
sub
xor
outsb
jno
pushf
sbb
fsts
ljmp
sbb
add
dec
mov
call
mov
adc
cmpsl
cmp
ret
mov
xchg
into
lods
inc
or
adc
mov
insb
data16
add
jae,pt
mov
pop
or
std
outsb
rolb
cwtl
sbb
cmp
sti
sbb
arpl
mov
or
add
lea
enter
dec
ja
jae
jp
and
call
lret
mov
adc
insb
or
lods
mov
mov
lods
add
jmp
dec
inc
shrb
jb
mov
xor
or
inc
cmpsb
addr16
xchg
mov
lcall
push
add
loop
inc
and
stos
and
outsb
push
or
scas
pushf
mov
xchg
xchg
jno
push
or
adc
push
mov
adc
hlt
xchg
bound
adc
inc
mov
mov
xor
stc
dec
dec
adc
jb
aam
shlb
inc
sbb
movsl
enter
int3
jp
mov
mov
mov
fwait
aas
mov
loope
sub
push
jl
lods
dec
std
pop
jge
mov
and
add
lock
lret
cmc
jo
xor
inc
std
and
aas
gs
inc
repz
dec
pop
test
loope
in
sahf
sbb
mov
add
push
cmp
dec
das
mov
sub
in
jmp
cmp
faddl
ret
or
insb
test
mov
dec
pusha
in
cmp
stos
sbb
push
fs
aaa
cmpsb
cli
subb
loop
cmp
xlat
out
into
add
jecxz
pop
shrd
fstps
in
jg
cmpsl
xchg
mov
xlat
mov
jmp
out
mov
scas
add
jle
pop
cmp
in
sbb
xlat
mov
jl
insl
inc
andl
test
add
add
mov
cmp
pushf
loop
lcall
mov
sbb
xor
jl
repnz
xlat
dec
stc
imul
ficomps
inc
cmpsl
test
dec
sahf
rcll
mov
dec
negl
push
dec
fadds
cmp
or
lods
inc
dec
out
adc
fsub
testl
and
inc
pop
adc
xlat
mov
inc
xchg
inc
fadds
gs
xchg
push
and
inc
stc
fdiv
insb
pop
sbb
jge
mov
mov
cmp
dec
adc
loopne
call
lcall
inc
testb
xchg
mov
or
mov
cld
ljmp
ja
mov
jbe
mov
jl
iret
jbe
xchg
out
push
inc
pop
pop
xor
aaa
in
xor
adc
inc
fldl
cmp
call
push
or
or
rorb
stc
fs
paddsb
testb
dec
mov
xchg
sbb
jae
lahf
xchg
pop
sub
insb
into
and
ficomps
pop
pop
lcall
fimuls
fs
sbb
add
mov
addr16
aaa
adc
or
je
fmuls
push
mov
dec
jp
mov
lods
dec
mov
jne
mov
cwtl
shll
lcall
xchg
xor
cmp
sahf
cld
mov
mov
inc
mov
ss
sbb
mov
xor
pop
jnp
stos
mov
les
stc
loopne
pop
pop
xchg
imul
dec
jno
fdivr
addl
test
stos
ja
fiadds
outsl
mov
sbb
and
xchg
xlat
loope
shll
insl
cld
sbb
or
jecxz
mov
mov
in
push
cmp
xorl
sbb
xlat
add
dec
adc
mov
call
sti
shlb
sbb
icebp
roll
xlat
mov
in
out
call
ss
leave
test
and
push
lock
gs
in
cmp
mov
xchg
mov
and
sahf
sub
lret
stc
fisttpl
add
jmp
fisubs
ret
jae
xchg
xchg
lock
data16
inc
loop
lret
icebp
or
mov
jno
lds
cmpsl
lahf
push
sub
cs
lds
fildll
xor
sub
fidivrl
into
cmp
cmp
scas
insl
mov
aas
clc
xor
mov
jns
fstl
push
mov
inc
das
sub
ss
cwtl
dec
fcom
jge
sbb
add
inc
sbb
enter
mov
ds
lahf
or
inc
pop
out
pop
in
ljmp
addr16
sahf
ror
pop
mov
mov
xchg
jp
cmpsl
pop
aad
cmp
int
mov
jnp
mov
fidivs
dec
cmp
push
inc
shr
ret
add
mov
lret
mov
adc
mov
inc
jbe
sub
jg
fidivrl
es
stc
add
or
and
push
inc
mov
aaa
aaa
and
mov
inc
jge
mov
movsb
les
lods
aam
jle
adc
sbb
adc
scas
jg
test
xchg
xchg
xor
add
mov
ret
pop
repz
lret
bnd
cmpsb
sub
into
adc
mov
push
mov
push
adc
incl
jnp
cmpsb
mov
xorb
mov
xlat
xor
cmp
mov
add
cmp
incb
aad
rorb
dec
sub
cmp
in
stos
movsl
lahf
mov
push
sbb
inc
lret
les
aad
shll
int
add
inc
call
pop
repz
xor
aad
jp
lret
mov
or
lds
stos
push
ljmp
mov
sarb
call
out
and
popa
insl
cmpsl
jp
add
adc
je
lret
filds
pop
or
inc
push
pop
pop
fwait
repz
into
add
push
movlhps
dec
sub
fcoms
xor
lock
sbb
dec
or
std
add
mov
fs
dec
mov
pop
stos
cmpb
push
xor
pusha
scas
sbb
cmp
push
pop
iret
nop
push
jo
sbb
or
ljmp
lcall
int
inc
insl
sbb
xor
out
or
into
sbb
adc
sbb
test
shrl
insl
jle
and
clc
push
and
inc
mov
adc
mov
in
stos
or
xlat
bound
nop
data16
out
ret
pop
cmp
sub
xchg
dec
cmp
in
xor
and
mov
pop
inc
je
push
adc
push
mov
dec
jle
xchg
xchg
lds
stc
lods
add
and
arpl
dec
mov
out
mov
and
mov
dec
stos
mov
dec
and
push
aam
push
cmpsl
lea
jge
jno
xchg
das
xchg
in
inc
xor
sbb
pop
int3
clc
mov
cmp
or
jae
neg
aaa
add
xor
sub
aas
push
push
add
push
sbb
int
push
jl
inc
cli
jns
sub
jmp
push
arpl
add
nop
cwtl
std
pushf
mov
or
push
fidivrl
or
push
pop
ja
mov
jo
cli
scas
lods
mov
std
out
in
lcall
das
sub
pop
jge
insl
jg
lea
int
std
out
in
lcall
das
sub
pop
jge
insl
jg
mov
mov
std
out
sub
push
int
sub
pop
jge
test
rcrl
fstpl
outsl
insl
add
das
sub
mov
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
add
mov
xchg
or
jg
test
xchg
movsl
push
mov
lds
sti
in
cmc
pop
add
mov
gs
jne
test
xchg
pop
movsl
push
mov
add
or
pop
add
mov
gs
jne
test
mov
lds
mov
pop
pop
scas
jno
and
sub
sbb
in
pop
ss
je
subl
sahf
jns,pt
lret
insl
push
add
adc
pop
cmovp
mov
js
push
negb
repnz
arpl
das
out
mov
xor
into
jne
xchg
outsl
test
xorb
cmp
out
inc
loopne
jne
or
adc
icebp
fisttps
add
andl
cmc
inc
lds
lret
out
push
jmp
pop
insl
rol
imul
jle
xorb
ljmp
fwait
cmpsl
jae
mov
gs
push
popf
pop
xchg
jnp
mov
leave
scas
adc
sahf
inc
out
push
gs
jne
test
xchg
movsl
push
mov
lds
jle
dec
cmc
aaa
inc
shll
out
testl
ja
test
dec
movsl
data16
les
aad
xchg
pusha
scas
jo
inc
mov
inc
cmpsb
adc
loopne
les
outsl
mov
les
orb
out
in
dec
out
sti
or
push
gs
jne
test
xchg
movsl
push
mov
lds
jle
dec
cmc
pop
add
mov
gs
jne
test
xchg
movsl
push
mov
lds
jle
dec
cmc
pop
add
cmp
fnstcw
lret
jle
cmp
sbbl
mov
bound
and
mov
notb
add
or
call
fstpt
mov
test
sub
cltd
jb
ljmp
sbb
mov
mov
ss
sti
mov
cmp
ljmp
shll
mov
insb
shll
sarb
push
popf
mov
cmp
movsb
sub
int3
push
int
bound
in
jno
and
dec
aas
mov
movsl
insl
mov
xchg
sbb
mov
aam
jecxz
lcall
inc
cmp
mov
cmp
xor
insb
jnp
sub
sub
sbb
lret
adc
inc
cmpsl
sbb
cmpsb
xor
jae
in
iret
movsl
or
mov
cwtl
mov
adc
xchg
sbb
lods
and
into
cltd
inc
aas
cli
test
mov
mov
jg
testl
or
adc
xchg
out
cwtl
inc
ja
push
pop
fdivr
imul
inc
es
jmp
adc
rcll
mov
sahf
xor
in
out
out
out
pop
int
movsl
push
sub
pop
push
or
and
mov
fsubs
je
jne
and
insl
bound
pop
lgs
xchg
push
mov
pop
loope
xchg
jns
fistps
test
cltd
or
push
dec
test
pop
or
cmp
add
jb
inc
stos
add
jg
sbb
xchg
fldcw
mov
sarb
and
mov
lock
test
dec
mov
mov
sub
test
ja
stos
cwtl
in
and
cld
fisubrl
lahf
call
cld
xor
incb
fnstcw
cltd
mov
cs
fcompl
imulb
fisttps
enter
push
sti
repnz
xchg
ds
outsl
jne
pop
divl
repz
mov
in
sahf
ja
push
jne
daa
lret
inc
jecxz
aaa
jno
push
mov
ret
add
adc
jg
push
and
push
repz
imul
inc
cmp
lods
add
and
lock
mov
imul
das
mov
add
cmp
insb
lret
loop
into
arpl
out
out
jns
inc
pop
mov
xlat
xchg
dec
negl
mov
pop
xor
xor
outsb
mov
sbb
test
bound
push
mov
push
test
pusha
push
xchg
dec
pop
addr16
call
test
in
and
push
xlat
test
adc
pop
xchg
inc
shl
fisttpl
jl
insl
mov
lods
or
adc
rcll
andb
or
xor
jecxz
inc
inc
sahf
shl
mov
stc
rcr
cld
jbe
icebp
scas
push
imul
sbb
into
jl
lret
es
push
fcmovnb
mov
fsubrl
adc
pop
adc
push
adc
in
shl
mov
inc
mov
mov
insl
and
push
sbb
dec
shlb
push
sbb
cmpsb
ficompl
and
xchg
pop
fcoml
jno
hlt
pop
mov
push
imul
lods
push
push
cld
or
stos
sbb
inc
rolb
sbb
imul
pop
ret
jo
imull
lds
stos
loopne
sbb
xchg
push
jp
cmp
adc
adc
mov
jnp
jle
push
scas
push
push
adc
fmul
push
std
sub
cmp
push
jb
pop
xchg
clc
jle
inc
adc
xchg
dec
orl
push
int3
jp
fstps
and
aad
fbstp
mov
cmp
aam
nop
xlat
icebp
lods
pop
cmpsb
inc
clc
out
mov
das
stos
arpl
fistpll
mov
adc
jne
xchg
push
inc
insl
ljmp
dec
adc
out
ret
push
adc
push
and
rclb
mov
or
subb
cmp
sbb
mov
jmp
movsl
sbb
jb
out
mov
ljmp
cmp
push
pop
test
jno
fwait
inc
pop
bound
sahf
jae
popf
das
mov
aad
jb
sub
leave
int
adc
push
imul
and
or
mov
mov
cmpsb
fwait
xchg
rol
push
inc
les
sub
pop
mov
sub
fst
add
daa
movsb
or
dec
pop
sbb
add
or
adc
lahf
dec
jecxz
cmp
cmp
mov
cmpsl
fsubp
add
add
mov
mov
mov
push
shlb
xor
push
fwait
inc
cmp
jae
or
cmc
aad
hlt
fsubr
arpl
or
mov
ret
jb
or
dec
sub
outsb
cmp
ret
bound
fwait
gs
pop
push
mov
mov
and
mov
iret
test
jbe
fmuls
leave
hlt
lcall
inc
ss
cmp
jle
daa
mov
fbld
stos
out
ficompl
orb
bswap
fisubl
mov
jnp
fwait
add
sbb
je
cmp
or
scas
or
sub
xchg
inc
add
movsb
push
dec
decb
mov
dec
in
push
call
jmp
inc
xchg
sub
sbb
xchg
sub
repz
dec
std
adc
mov
mov
sarb
inc
push
jne
sti
sti
mov
aad
cmp
inc
orl
cmp
xor
dec
stos
jle
cmp
pop
jb
xchg
inc
mov
fimull
sarb
loope
jno
mov
sbb
test
daa
inc
push
lods
or
sbb
aas
push
pop
or
addr16
stos
jle
repnz
loope
daa
ds
xor
mov
je
or
enter
jae
mov
std
pop
ja
jp
daa
mov
dec
cmpsl
xlat
aaa
adc
and
arpl
rclb
pop
cmp
adc
dec
dec
inc
std
into
cmp
inc
push
mov
lcall
and
std
xor
jg
sub
sub
jle
dec
inc
movsl
leave
popf
enter
dec
jl
sbb
xor
mov
xchg
movsl
call
sti
sbb
dec
lahf
push
adc
cwtl
mov
inc
mov
jge
fdivrs
mov
mov
mov
jb
lahf
scas
cmp
in
stc
pop
add
xchg
imul
mov
mov
adc
rcll
icebp
and
jge
mov
aaa
xchg
mov
adc
stos
pushf
push
jb
orb
push
loopne
pop
in
jne
aas
add
sbb
sub
nop
mov
pop
insl
jbe
sub
jecxz
testl
adc
xchg
outsb
push
vgetexpsd
sbb
rcl
mov
repnz
xor
or
in
dec
pop
dec
xor
cld
and
lea
in
aam
push
shrl
js
in
std
push
inc
jl
xchg
sbb
loope
sbb
add
mov
inc
idivl
pop
lock
xchg
and
adcl
mov
push
test
lock
outsb
out
sub
clc
popf
cmp
popf
in
xor
or
inc
jbe
hlt
or
mov
pop
mov
cmp
mov
jge
lods
imul
in
bound
adc
mov
gs
jb
nop
es
mov
push
pop
cmp
ja
fcmovb
scas
xchg
rorb
loopne
mov
mov
pushf
cmp
test
pop
or
pop
test
out
cld
call
arpl
ljmp
push
insl
leave
call
icebp
or
into
sti
fstl
ja
pushf
and
shl
scas
movsl
shll
push
outsb
push
sub
sub
sub
pop
lret
push
adcb
rorl
push
loopne
sub
sbb
push
adc
sbb
stc
mov
pop
out
inc
sti
cltd
mov
xchg
cli
ss
sub
test
sbb
js
icebp
mov
imul
mov
cld
scas
sub
ljmp
rorl
cwtl
or
test
xchg
rolb
fsubrs
sub
test
aaa
sub
sub
sahf
loop
xchg
pop
popa
pop
sub
dec
js
fidivrs
mov
jmp
lds
daa
xchg
mov
jg
add
jbe
negb
je
xchg
jmp
dec
jo
dec
mov
jp
movsl
mov
xlat
js
xchg
fldt
sub
cmp
cltd
mov
inc
fs
in
sbb
pop
sbb
cld
pop
inc
mov
dec
lcall
pop
subb
sarb
push
sub
mov
int
stos
dec
cmp
stos
popaw
cmp
add
pop
ret
fisttps
lcall
mov
cmp
push
sbb
shll
mov
push
mov
arpl
daa
or
mov
inc
or
std
aas
mov
xchg
imul
loopne
out
ret
sub
fcoml
xchg
hlt
push
inc
mov
pop
or
aam
or
inc
dec
push
arpl
xor
int3
or
in
in
je
sbb
adc
mov
ficompl
xor
inc
add
jmp
sbb
test
fsubrl
add
sahf
inc
sahf
ficoml
fdivs
mov
cwtl
fsubl
jae
push
adc
dec
popf
mov
pop
sub
sbb
lods
outsb
subb
mov
add
push
sarl
adc
aad
fldenv
cmp
sahf
fidivl
pop
lock
mov
xchg
adc
or
and
fwait
inc
mov
mov
imul
shrl
in
adc
and
add
cvttps2pi
push
inc
pusha
movsl
rclb
push
ret
dec
es
push
push
lock
mov
xchg
in
push
pop
sahf
lods
stc
outsb
or
es
loop
in
push
test
das
and
shlb
push
fimuls
imul
pushf
xchg
fldt
push
inc
test
and
xchg
popa
inc
cli
push
mov
inc
mov
fsubs
mov
jae
outsl
inc
mov
cmp
or
cmpb
outsb
lods
fcmovb
or
inc
int3
ds
dec
xchg
inc
jbe
xchg
enter
loope
iret
shll
push
xchg
mov
xor
loop
ss
xchg
incb
fcompl
cmp
in
push
leave
shrb
nop
mov
push
fnsave
cmp
sbb
pushf
incb
cli
pop
jmp
sub
cmpb
insb
dec
inc
vxorps
pop
test
xchg
mov
mov
cmpsl
stos
inc
test
mull
negl
ret
ret
mov
neg
and
sahf
out
test
xor
in
mov
push
clc
lret
inc
mov
test
adc
sub
xorb
mov
push
dec
mov
or
pop
stos
mov
fcoms
ja
pushf
hlt
outsl
insb
xor
fistps
ret
dec
or
xor
xor
xchg
cmpsb
push
mov
jecxz
add
mov
push
jmp
dec
mov
jg
inc
xchg
push
or
dec
loop
test
sbb
out
testb
inc
js
roll
iret
movhps
out
cmp
int3
leave
js
aas
jge
sub
dec
push
sub
push
or
js
pop
loop
cwtl
sub
faddp
push
or
mov
std
loop
int
xrelease
out
mov
sbb
xchg
xchg
inc
inc
in
shr
adc
insl
sub
and
mov
mov
xchg
stos
jns
cmp
lods
xchg
sarb
mov
stos
mov
pop
in
sub
xor
inc
pop
xor
imul
push
in
stc
inc
sti
cs
jp
out
mov
sbb
fcmove
mov
xchg
mov
mov
push
ja
imul
std
sbb
mov
nop
into
es
pop
mov
loope
add
adc
cmp
aad
je
inc
push
hlt
je
leave
cwtl
xchg
rorb
cmp
add
lcall
push
filds
pop
cmpsb
stos
iret
jmp
mov
pop
push
mov
dec
das
jne
pop
or
jmp
call
fidivrs
loopne
ss
ret
xor
in
repz
movsb
mov
push
adc
inc
or
lods
jecxz
or
movsl
mov
push
push
rolb
and
xor
cmp
adc
xorl
adc
cld
in
fsubs
mov
int
imul
jle
mov
scas
repz
pusha
sub
jae
pop
lods
rolb
adc
aam
jns
mov
adc
jns,pn
push
jl
pop
ss
addb
pop
jg
in
mov
pop
cmpsl
sub
clc
sbb
hlt
mov
popf
jbe
push
push
jb
mov
cmp
jecxz
xchg
insl
cmpsl
mov
mov
nop
jecxz
lcall
inc
sub
addr16
hlt
jns
out
lret
roll
stos
das
stos
dec
xor
dec
imul
fiaddl
or
inc
aad
jp
or
rcl
push
stos
xor
xchg
bound
rcr
push
stos
lret
or
pop
ljmp
jno
movsl
shrb
pop
lods
mov
xchg
movsl
and
hlt
shlb
out
sub
and
rclb
pop
jae
test
pop
add
lods
imul
mov
sub
mov
mov
out
dec
pusha
or
sub
int3
jg
jmp
scas
adc
dec
add
pop
jg
mov
inc
sub
dec
add
call
loop
test
mov
fdecstp
and
cltd
int
mov
cmpb
inc
mov
out
mov
xchg
dec
xchg
and
inc
out
sub
push
sbb
mulps
sub
sub
mov
or
std
mov
cmp
mov
fwait
loop
hlt
and
inc
hlt
jae
push
pop
pushf
int3
jl
pop
xor
dec
push
gs
add
xchg
and
adc
inc
jb
clc
cmp
mov
mov
sub
loope
jb
push
out
loop
aaa
pop
add
cmp
nop
fimuls
out
and
xor
clc
rol
loopne
addb
xor
mov
insb
lock
sub
sti
sbb
into
aam
insb
xchg
repz
out
fnstenv
dec
or
lcall
mov
mov
or
and
pop
daa
jge
cmpb
fcoml
test
mov
stos
jno
int3
cmp
insl
enter
enter
sub
jp
xchg
adc
inc
movsb
fdivr
mov
rcr
pop
mov
inc
jne
shll
into
icebp
enter
sub
xchg
mov
leave
incl
pop
scas
jge
and
jne
sub
sti
xchg
and
and
pop
ds
int
cld
pop
pop
lahf
cs
int3
dec
and
cmp
jmp
test
fdivrs
xchg
int3
jmp
jge
into
cmp
push
push
cmp
push
mov
xchg
jb
push
fistpll
xor
inc
inc
fdivr
das
mov
rol
jmp
in
int3
sub
popf
adc
out
rorl
loop
aad
xor
negb
mov
pop
inc
sub
push
mov
mov
notb
adc
inc
cmc
aad
pusha
adc
movsl
cmp
inc
jg
rorl
mov
mov
ficompl
jmp
jl
into
and
jns
outsl
xor
bnd
xchg
pop
stc
jg
clc
lret
nop
subb
in
cld
rclb
out
adc
loopne
jmp
ret
insb
leave
iret
pop
inc
lahf
cmpsb
jns
inc
or
sub
inc
call
lcall
pop
xchg
dec
push
stos
mov
xchg
in
mov
sub
orb
lret
fdivp
adc
dec
stos
sbb
sti
push
mov
and
pop
or
push
loope
aaa
jb
adc
jl
loop
jbe
je
cltd
out
imul
int
adc
dec
imul
orb
sbb
daa
sti
jmp
idivb
cli
cmc
aaa
insb
jo
xor
je
loope
sub
xchg
fisubl
cs
lods
mov
add
shlb
lahf
fiaddl
je
fsts
leave
ja
ljmp
inc
dec
lea
scas
outsb
xchg
cmp
test
pop
dec
sahf
dec
mov
sub
sbb
sub
rorl
ret
je
mov
sub
pop
or
sbb
movsb
jge
shr
cltd
xchg
stos
xor
inc
in
pop
xor
cmp
or
push
cmc
gs
flds
pop
lahf
xor
cmpsl
or
je,pn
mov
stc
cmp
popa
inc
leave
ret
imul
push
gs
xchg
clc
addr16
lock
pcmpgtw
sbb
outsl
js
out
push
sbb
add
out
push
pop
cwtl
hlt
dec
add
aas
ds
or
testb
bound
cmp
xlat
inc
out
sbb
cs
shrb
dec
sub
mov
mov
loope
xchg
sub
mov
insl
out
cli
jbe
lods
das
push
int3
mov
dec
sbb
xchg
mov
scas
pop
or
aad
loope
cmpsl
adc
lcall
addr16
in
imul
push
mov
enter
aad
lock
outsl
inc
mov
mov
jle
int
jae
inc
sbb
dec
inc
add
mov
pusha
sbb
je
in
lods
mov
sbb
sbbb
pushf
sub
sbb
push
ret
stos
mov
sbb
cmp
in
push
jl
sbb
jg
mov
fcmovnbe
inc
mov
mov
or
and
and
add
jmp
test
xchg
xor
cmp
pop
loopne
or
sahf
loope
aad
stos
jb
push
mov
scas
push
leave
jle
mov
shrb
add
xor
sbb
sub
sub
inc
cltd
push
sbbb
sbb
sbb
lret
pop
fists
mov
stc
fwait
mov
xor
cwtl
out
and
cwtl
xchg
mov
scas
orl
jl
pop
sarb
push
in
aad
and
lods
decl
repz
sbb
push
inc
jae
cmp
push
cs
and
mov
sbb
xchg
push
or
pushf
push
xchg
fidivrs
dec
dec
xchg
lret
sbb
jl
nop
push
adc
leave
fs
leave
mov
fwait
inc
fwait
pop
push
mov
push
cmp
sbb
dec
insl
sub
push
fstps
mov
mov
inc
int3
adc
divl
adc
xchg
lahf
cs
mov
push
add
and
xchg
adc
push
enter
int3
inc
xor
fmulp
cltd
shrb
pusha
lods
sbb
shl
xchg
mov
inc
inc
sbb
mov
out
movl
adc
ss
popf
dec
test
nop
cmp
xor
pop
xchg
dec
and
cld
or
les
ficomps
add
ljmp
push
add
into
pop
pop
mov
aas
iret
or
lock
clc
add
js
ficomps
jmp
loope
out
xchg
jl
movsb
mov
dec
mov
repz
orl
pop
addr16
inc
bound
or
push
mov
stos
or
mov
loopne
dec
hlt
in
sti
pop
push
sub
shll
dec
mov
jae
mov
enter
testb
push
add
pop
notb
mov
xchg
dec
cmc
andl
dec
ret
out
jl
mov
orb
cmp
add
adc
push
mov
inc
clc
arpl
call
and
clc
insl
mov
inc
sti
movsl
jb
jae
add
xchg
int3
fcmovbe
jns
fwait
mov
imul
cld
cli
push
mov
aaa
les
mulb
dec
push
mul
ja
or
xor
cltd
pop
iret
imul
sbb
cli
mov
xor
jnp
adc
lods
xchg
std
mov
ret
pop
jge
mov
pop
mov
xlat
dec
fmuls
xchg
sti
sub
dec
xlat
sbb
sahf
ljmp
ds
mov
nop
out
mov
or
pop
mov
jo
test
adc
dec
hlt
sti
inc
mov
std
push
inc
js
rcl
push
out
pop
adc
sub
fadds
sti
pop
mov
dec
scas
mov
dec
pop
sbb
and
add
ljmp
mov
movsb
xchg
movsb
push
push
icebp
push
pop
add
sub
cmpsl
jne
cld
imul
fnstsw
ret
mov
jnp
icebp
and
loopne
pop
inc
cmp
test
dec
insb
fcoml
mov
xor
ret
xor
adc
fildll
push
inc
cs
xchg
mov
mov
das
mov
pop
enter
rcll
cmp
call
sbb
lds
in
mov
ret
aam
inc
mov
out
repnz
stos
sub
or
rorb
lret
gs
les
jmp
pop
fisttps
push
lods
pop
test
pop
or
clc
xor
ret
movsl
test
lcall
out
push
gs
jne
test
xchg
movsl
push
mov
lds
jle
dec
cmc
pop
add
mov
gs
jne
test
xchg
movsl
push
mov
lds
jle
dec
cmc
pop
add
push
xor
jle
into
cmc
fiadds
push
mov
lds
jle
dec
cmc
pop
add
mov
gs
jne
test
xchg
xchg
femms
mov
mov
movsl
adcl
adc
add
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
cmp
out
clc
fsubrp
into
xchg
sti
int
mov
dec
outsb
jp
dec
dec
sbb
dec
cmp
sub
iret
dec
out
enter
cwtl
mov
test
push
jle
outsb
sbb
stos
dec
sbb
cmp
sub
sar
out
loopne
lock
cmpl
inc
dec
adc
sbb
aaa
push
jns
jo
jge
enter
xchg
nop
sahf
je
mov
mov
mov
test
insb
jnp
xor
inc
data16
cmp
pop
mov
popa
test
dec
sub
movsl
pop
push
dec
jecxz
mov
enter
cs
insl
mov
pop
sub
push
out
dec
cs
fwait
out
mov
mov
arpl
push
hlt
test
insb
andl
scas
popf
ds
sarb
rorl
mov
mov
enter
test
mov
and
push
cs
shl
cmp
arpl
mov
or
outsl
mov
xchg
sbb
push
sub
sbb
enter
dec
mov
mov
inc
jle
outsb
pusha
pop
jno
add
adc
cmp
xor
cli
lods
scas
popf
fimuls
mov
pop
dec
outsl
or
push
cmp
dec
pop
addr16
inc
fcomps
ljmp
imul
ljmp
sbb
das
dec
dec
sub
mov
call
scas
mov
jle
outsb
js
push
cmp
sub
fdivr
enter
call
scas
mov
jle
outsb
js
push
cmp
sub
fdivr
or
mov
xchg
xor
addr16
pop
lahf
or
xchg
cmp
clc
repz
xchg
scas
mov
call
pop
dec
sub
pop
push
push
into
sbb
enter
jno
add
xchg
fs
sbb
subb
test
js
aad
stos
xchg
cmp
sub
ljmp
mov
pop
lret
mull
mov
pop
jno
add
xchg
mov
loopne
sti
and
jecxz
leave
ds
fcmovb
inc
enter
add
dec
mov
std
cmp
addr16
cmp
xor
lods
push
stos
nop
sub
inc
jle
sub
pop
ret
and
jns
mov
xchg
jne
lret
inc
subb
or
adc
adc
sbb
les
inc
dec
cmp
mov
shll
jle
insl
cwtl
pop
adc
push
repz
sbb
and
push
divb
jbe
aad
rcll
daa
dec
xor
repnz
enter
cltd
mov
xchg
leave
cmp
sbb
sbb
mov
mov
fimull
pop
stc
push
fnstsw
and
dec
push
lret
or
xor
xchg
rcrb
add
sub
mov
cmpsl
ja
inc
dec
jae
xchg
push
pop
cmp
imul
xor
rorl
xor
mov
decb
and
inc
loop
scas
mov
mov
in
fildl
push
or
outsl
jl
add
jmp
jne
inc
push
cmp
or
leave
and
sbb
das
cs
aas
sub
movsl
lods
cmpsb
mov
pop
xor
nop
jb
pop
lea
test
pop
test
std
pop
and
fisubrs
pop
or
inc
add
ds
outsl
outsb
mov
xchg
sar
mov
mov
pop
adc
faddl
jmp
jle
sub
out
and
pop
push
lock
sub
call
adc
adc
adc
aam
insb
and
rorb
push
jae
int3
es
iret
sbb
rclb
mov
mov
and
insl
xor
repnz
sahf
rcrb
xchg
or
xor
mov
or
xchg
and
mov
pop
sub
lods
cli
sbb
js
addr16
mov
pop
lret
hlt
call
lods
inc
sti
push
mov
mov
sarl
or
into
cmc
push
int
loope
push
dec
inc
jmp
adc
cli
xlat
mov
mov
pushf
in
jge
and
icebp
or
mov
test
push
jecxz
jbe
ret
dec
aam
sub
das
mov
sub
aas
dec
loopne
and
push
movsl
jb
adc
mull
pop
sub
popf
pop
lods
xor
push
ror
stos
and
sub
or
pop
mov
add
mov
mov
jnp
mov
jbe
dec
jno
adc
fidivrl
aad
roll
jge
inc
add
cmc
fcomp
in
mov
test
pop
jle
loopne
ror
in
stos
mov
dec
dec
cmp
incl
aas
inc
sbb
jg
inc
push
jecxz
jbe
daa
mov
aas
shll
mov
push
sub
sub
add
add
and
cmp
das
flds
pop
sahf
and
pop
inc
das
lcall
sbb
push
sahf
inc
jge
pop
data16
xchg
fcoms
jnp
mov
push
popf
int3
jmp
and
daa
push
testb
inc
adc
rcr
jle
ljmp
mov
dec
sbb
test
mov
or
dec
push
insb
pop
dec
ds
xlat
mov
shll
dec
adc
flds
iret
pop
movsb
repz
std
dec
xchg
jns
dec
mov
xchg
in
sub
jb
xor
test
mov
lods
dec
lret
inc
add
inc
clc
xor
jg
adc
out
into
or
cmp
mov
add
xchg
stos
jnp
out
imul
rolb
je
cmpsb
fwait
sbb
dec
imul
lods
daa
push
mov
adc
stos
adc
test
loopne
addl
mov
cs
mov
sbb
xchg
pop
stos
cmpsb
xchg
pushf
or
or
test
dec
cmpsb
pop
faddl
into
movsb
rcl
loopne
rol
pop
inc
lahf
mov
lds
stc
hlt
and
sub
lcall
fs
dec
sub
and
cltd
dec
cmpl
cld
test
inc
loopne,pn
imul
push
je
xorl
jle
adc
or
sub
pop
loopne
imul
push
popf
nop
jp
sbb
jl
popa
cmp
xor
mov
mov
scas
lods
push
xchg
std
jp
and
dec
mov
dec
xor
jne
add
jns
mov
pop
jle
xchg
sti
or
jnp
rorl
out
rcrl
lea
dec
adc
cmp
xchg
xbegin
mov
xchg
lods
fstpt
mov
jae
cmpsl
jo
push
dec
mov
and
lcall
enter
jo
sub
pop
test
outsb
fs
dec
cltd
cmp
mov
fidivs
shll
pop
and
cmp
inc
jb
into
mov
cmpl
lds
or
sahf
neg
loopne
movsb
imul
mov
mov
scas
je
test
cltd
mov
add
test
mov
imul
sbb
fnstsw
add
lcall
pop
jns
push
pushf
loope
xor
into
loope
movsb
scas
mov
adc
test
ja
and
test
pushf
into
lcall
jge
rorl
and
aas
xchg
or
or
fstpt
popa
mov
fadds
mov
rcll
mov
mov
dec
lcall
mov
enter
pop
int
pop
pop
popa
stc
lea
shll
in
in
add
jnp
add
inc
inc
dec
mov
dec
push
cmp
loop
add
mov
mov
pop
leave
mov
mov
mov
idivl
jnp
negl
test
aam
sub
mov
sbb
adc
fidivrs
sbb
cld
pop
pop
out
xchg
cli
sti
inc
test
jb
mov
and
mov
int
fwait
push
xchg
mov
popa
mov
lock
sub
out
xor
fs
push
aad
mov
mov
leave
je
xor
cltd
and
ja
mov
pop
scas
dec
sub
push
repz
out
push
shll
lahf
xorb
jp
in
cmpl
ljmp
mov
jp
jecxz
dec
repnz
jg
shll
jbe
loop
mov
imul
stos
mov
xchg
or
push
in
xor
insl
jmp
push
loopne
xor
jg
rcrb
rcr
ja
call
scas
shll
nop
dec
jb
addr16
stos
inc
add
in
nop
popa
mov
scas
xchg
and
xchg
arpl
xchg
stc
popf
push
scas
mov
sub
test
data16
test
ds
cmc
pop
lret
test
icebp
push
ret
out
xor
stos
sbb
sub
ds
add
loope
mov
push
ljmp
test
outsl
movl
and
and
or
jno
dec
and
sub
sbb
clc
inc
pop
int
pop
dec
sbb
xchg
inc
inc
fistpll
int
movsb
ret
add
cmp
jnp
insb
ljmp
sub
cmpsl
lods
loopne
push
in
rcrb
mov
pop
or
cmp
jg
jbe
or
mov
xor
aas
imul
mov
sbb
cmc
and
adc
jo
xor
movl
pop
mov
mov
xchg
xchg
adc
dec
and
loopne
mov
xchg
dec
xor
cmp
adc
lea
cmp
pop
mov
dec
sbb
mov
rol
shlb
push
pushf
jmp
aam
das
xchg
popf
adc
sahf
js
pop
fld
popa
jmp
sub
jl
mov
in
pop
jno
cmc
or
sbb
popa
pop
cmp
xchg
xor
fidivs
mov
shl
scas
sbb
imul
rcrb
cld
mov
cmp
xor
into
push
lret
xchg
pop
rclb
xchg
mov
testl
xor
jno
or
fcmovb
mov
ljmp
mov
fbstp
inc
inc
add
outsl
lret
sub
pushf
jbe
and
adc
jns
push
ret
inc
int
add
icebp
jp
shl
jne
movsb
xchg
iret
mov
mov
imul
and
fidivrl
lds
imull
push
and
rorl
xor
jp
jmp
or
xchg
jg
inc
je
sbb
add
shlb
in
ja
pushf
sub
adc
and
ss
cmp
dec
sub
imull
sbb
fdivrs
jmp
dec
aam
push
and
cmpsb
mov
adc
insl
pop
jno
inc
xor
std
adcb
fnstcw
outsl
mov
lods
xchg
xchg
mov
arpl
jmp
int
fdivs
push
or
sub
sbb
add
xor
jbe
xchg
shr
arpl
inc
ret
fs
xchg
sub
cmpsb
jle
mov
fistl
inc
loope
jle
xor
mov
scas
push
dec
test
adc
test
jb
sbb
and
iret
or
pusha
js
call
icebp
jb
add
mov
scas
mov
loopne
mov
ja
dec
adc
and
sahf
fldl
insl
sub
add
rcrl
mov
sub
fisubrl
push
js
test
dec
lock
mov
loopne
and
icebp
roll
hlt
std
or
fdivl
subb
mov
out
shl
mov
addr16
or
ret
sub
loope
dec
shlb
es
and
mov
loop
mov
cmp
cli
sbb
mov
rcl
stc
ja
pusha
mov
mov
cmp
decl
je
aaa
orb
add
enter
int
shl
push
cmpsb
jno
or
cmp
and
sub
push
dec
je
dec
xchg
inc
inc
mov
into
pop
xor
cmpsb
sub
cmp
xor
sub
out
add
mov
out
xchg
xor
jnp
sbb
sbb
mov
inc
xlat
adc
scas
out
mov
and
add
rclb
mov
mov
mov
mov
je
jo
inc
inc
test
test
lret
sub
dec
pop
inc
mov
ja
out
push
rolb
ds
xchg
dec
in
stos
mov
mov
hlt
lcall
in
out
shrl
mov
pop
bound
sahf
xor
mov
cmp
filds
sbb
push
pusha
xchg
or
cmp
cmp
jge
cmp
push
xor
repz
cwtl
pop
inc
jecxz
les
or
push
sti
bound
into
jb
orl
sub
arpl
mov
insl
mov
dec
xchg
dec
sub
sub
mov
mov
ds
xchg
mov
cltd
enter
and
cmpsl
or
mov
push
in
outsl
inc
aad
pop
ds
adc
mov
mov
push
jae
and
push
idivl
inc
aaa
rcl
inc
jnp
push
fadd
lods
jl
sbb
in
jmp
push
sub
sbb
sti
and
incl
xorl
and
mov
xchg
loop
and
insb
jnp
mov
xor
jne
test
cld
xchg
neg
out
and
idivl
dec
mov
xchg
pop
icebp
in
call
adc
loopne
push
stc
arpl
mov
inc
mov
push
int
xorl
or
add
stos
inc
iret
repnz
jg
popa
ja
in
cmp
mov
and
add
push
xor
jle
xlat
cli
fists
lock
adc
add
xor
popa
mov
sub
mov
loope
data16
push
int3
push
ret
add
and
and
lret
add
nop
cmc
push
stos
mov
subb
push
and
icebp
push
addl
ja
push
sbbl
sbb
inc
ds
add
mov
or
dec
addr16
out
xchg
out
movsb
std
mov
ss
movsb
addr16
mov
cmp
jecxz
push
inc
mov
jo
nop
cs
aaa
mov
shrl
rep
add
andl
jnp
lods
sbb
mov
push
jo
pop
aad
aam
xlat
popa
inc
inc
push
fiaddl
dec
test
and
adc
loopne
sbb
mov
into
cwtl
lar
sub
jb,pt
sti
adc
mov
pop
je
cmpsb
enter
sub
jno
out
add
rorl
pop
imul
sbb
dec
xchg
jp
orb
test
shll
cltd
scas
lods
loop
fnstsw
ffreep
xor
mov
enter
cmp
jecxz
cli
fistpl
lods
sbb
cmp
adc
jmp
lock
in
mov
or
loopne
jg
movb
das
loope
shl
xlat
bound
mov
ret
pushf
fisttps
mov
or
inc
add
and
push
pop
sahf
lahf
outsl
sbb
lret
imul
mov
repz
or
jecxz
jbe
add
add
bound
ds
out
or
sahf
out
add
inc
xchg
sti
xchg
add
std
cli
lahf
cmp
dec
scas
and
add
repnz
pop
popf
lret
clc
push
loop
mov
cmpsb
pop
or
push
dec
lock
mov
in
ljmp
jecxz
jae
xchg
orl
and
jnp
mov
jo
stos
sbb
dec
mov
xlat
jge
inc
mov
inc
dec
ds
and
mov
inc
insl
cmp
pusha
test
fwait
in
jae
lret
lea
gs
inc
std
cmpb
jno
mov
xchg
xchg
jp
or
icebp
xlat
pop
and
jle
sub
dec
inc
pusha
sub
adc
pop
jno
xor
pop
out
xchg
xchg
mov
inc
ljmp
ja
stos
sbb
test
lds
imul
mov
gs
push
sahf
icebp
jae
mov
jns
and
mov
pop
mov
add
xlat
rcr
daa
and
jae
nop
dec
dec
jnp
xor
or
out
or
mov
les
outsb
push
loope
add
aam
inc
pop
mov
mov
adc
testb
fmul
stc
jo
adc
in
dec
data16
lret
cmpsb
sarl
lahf
in
add
cmpsl
xlat
inc
testb
fsubrl
inc
adcb
aad
scas
lcall
mov
and
mov
loopne
in
loop
add
insl
les
mov
add
or
test
sbb
ja
inc
stc
ret
mov
mov
inc
mov
lcall
add
loop
pop
stos
jp
mov
jecxz
pop
and
daa
or
push
shrl
mov
inc
pop
sub
xorl
loopne
and
mov
in
xorl
push
fnstcw
xchg
ret
pop
cmp
loope
insb
push
push
xor
mov
aaa
outsb
mov
jb
je
inc
test
cli
dec
cmpl
inc
ja
mov
push
jb
aaa
mov
pop
push
lock
pop
add
pop
nop
push
fwait
repz
loope
xchg
pop
add
mov
lods
mov
cmp
sub
jg
loop
push
dec
sub
sbb
mov
sub
xchg
pushf
cli
mov
jecxz
sbb
mov
jbe
mov
and
inc
inc
adc
daa
ds
lds
out
xor
iret
in
lcall
sbb
idiv
cmp
mov
fstl
ds
rorb
mov
or
int3
mov
mov
sti
push
cmpsl
dec
cmpl
sub
sbb
out
mov
sub
push
test
insb
mov
loop
cli
mov
xlat
movsl
outsl
lahf
shlb
scas
mov
push
mov
int
xor
jmp
sbb
fimuls
or
sbb
pushl
mov
aaa
insb
test
xchg
outsb
ja
arpl
stc
sub
push
negl
fsub
mov
hlt
hlt
add
sbb
ror
mov
mov
cmp
pop
test
dec
loopne
cltd
and
fadd
rcrb
mov
ret
fstl
shll
add
mov
inc
inc
sub
cmp
in
dec
dec
sbb
jmp
lds
cwtl
xchg
pop
lea
lcall
pop
xchg
push
stos
sub
inc
xor
dec
cs
cwtl
out
divl
mov
mov
int
sbb
sbbl
xchg
fnsave
aaa
je
out
fistl
adc
xchg
mov
out
or
filds
pop
mov
push
and
enter
push
or
mov
mov
xor
in
daa
loopne
shl
insb
mov
inc
inc
cmp
and
xchg
icebp
bound
mov
add
sub
add
pop
lea
sbb
jb
fimull
sub
lret
mov
mov
ds
adc
mov
arpl
add
in
fimull
lock
cmp
cvttps2pi
sub
jmp
push
xchg
cmp
jecxz
jmp
add
movsb
fldl
dec
push
pop
loop
mov
imul
jmp
jbe
jno
push
push
lret
in
sahf
jmp
call
adc
std
pop
dec
xor
dec
lret
xchg
add
and
rcll
jbe
pmaddwd
add
and
nop
insl
jb
xlat
aad
hlt
sbb
movsb
test
sarb
mov
pushf
or
sti
incb
neg
or
mov
fucomp
mov
mov
ljmp
add
ljmp
mov
and
add
cmpsb
add
vmaxsd
inc
mov
divb
dec
fldenv
popa
dec
cwtl
and
popa
aas
mov
sbb
mov
insb
jle
mov
xor
fisttpl
mov
adc
pop
pop
lods
imul
inc
xor
pop
popa
leave
mov
pop
mov
cwtl
mov
fnsave
mov
dec
adc
xor
inc
sbb
fcoml
repnz
xor
jg
hlt
and
and
mov
pop
sbb
inc
mov
pop
ret
add
mov
mov
lea
lea
test
notl
rdmsr
mov
negl
stos
fsubr
add
sub
pop
push
arpl
mov
loopne
pop
push
jns
jge
xchg
hlt
iret
dec
iret
push
int3
fistpl
shrl
push
sbb
jge
repz
fsubrl
mov
xchg
mov
xchg
sub
out
add
mov
jnp
or
lods
and
icebp
jo
dec
sub
sub
test
rcrl
repz
cwtl
out
xchg
popf
and
test
in
sub
ret
fsubs
jl
push
push
lret
negl
shll
xchg
mov
xchg
in
loope
pop
cld
xlat
inc
ljmp
mul
push
cmp
ret
fildll
dec
or
mov
add
jge
iret
adc
jb
sbb
xorb
adc
in
jbe
lret
dec
xchg
add
push
pop
jle
fdiv
pop
out
test
ss
push
cltd
xchg
and
push
cmp
mov
sti
stos
not
cmpsb
loope
iret
mov
imul
push
mov
sbb
mov
pusha
out
cmp
es
scas
pop
popa
aas
das
cwtl
jae
sbb
inc
repz
xlat
jge
adc
mov
sub
sti
mov
repnz
jmp
rolb
sti
push
cmp
inc
jg
jmp
negl
loope
cli
inc
dec
stos
push
cwtl
das
sbb
aaa
mov
cmp
or
lahf
and
adcl
xor
out
gs
icebp
xchg
cmp
jmp
dec
adc
int3
mov
push
mov
jno
xlat
pop
or
add
or
pop
bound
push
pop
lods
and
adc
jo
jns
inc
fsubrp
into
cwtl
mov
test
pop
jle
outsb
js
push
cmp
sub
fdivr
enter
call
scas
mov
jle
outsb
js
push
cmp
sub
fdivr
enter
call
scas
mov
jle
outsb
jl
push
cmp
sbb
in
cld
out
into
fsubrp
into
cwtl
mov
sub
rcrb
cmp
adc
loope
icebp
push
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
arpl
jecxz
rcll
ret
add
push
orl
push
out
jae
arpl
xor
and
add
add
repz
and
adc
add
push
addl
arpl
xor
add
repz
and
or
sbb
dec
sbbl
arpl
push
mov
xor
jecxz
lahf
gs
mov
sahf
cmpl
cmp
pop
xchg
adc
aas
sbb
lcall
cmp
cli
lods
lahf
sbb
test
xor
into
je
mov
sar
mov
loop
fmull
gs
sub
and
xor
sub
jecxz
nop
das
inc
shll
and
adc
xor
or
pop
push
jno
jle
mov
or
sub
loope
push
stos
popf
xchg
add
mov
pusha
cltd
dec
insb
xchg
sar
or
jecxz
pop
adc
push
dec
imul
mov
mov
test
xchg
inc
mov
add
lods
xor
roll
ret
sbb
dec
sbbl
arpl
xor
and
adc
add
mov
daa
paddq
rcr
cmp
daa
out
inc
pushf
outsl
mov
shll
lods
dec
mov
add
add
push
xchg
xor
push
shrb
es
push
mov
sbb
test
inc
mov
jecxz
repnz
addl
arpl
xor
and
adc
add
repz
and
adc
add
push
addl
arpl
xor
and
adc
add
repz
cmpsb
pop
xor
push
sub
xor
jae
push
sarl
jg
push
lds
test
pop
xor
add
negl
imull
aas
test
mov
push
sub
cld
aaa
negb
mov
jge
pop
mov
jo
mov
lret
mov
into
cs
adc
mov
aad
in
and
mov
fisubl
mov
in
add
push
add
sbb
sub
shrb
dec
lods
jmp
or
push
fcmovne
pop
mov
pushf
out
sbb
mov
adc
mov
movsb
jnp
out
jg
push
push
dec
clc
mov
subl
pop
and
fwait
cmc
ffree
sub
insb
mov
cmpsl
pop
mov
xchg
out
jns
insl
shll
and
mov
loop
and
movsb
pop
push
dec
out
aas
stos
shrl
jge
nop
xor
pop
cwtl
mov
xchg
and
gs
int
fwait
out
add
into
sbb
fstl
or
outsl
es
inc
and
cli
jecxz
ret
and
adc
lahf
aam
ja
cld
rorl
in
cli
xlat
and
pop
add
xor
pop
push
xchg
cmp
push
icebp
or
pop
cs
mov
or
sbb
sub
in
sahf
call
jae
inc
cmp
and
je
mov
add
pop
sub
dec
jae
addr16
fwait
cmpsl
or
mov
into
fsubp
mov
dec
mov
pop
cmp
out
aad
jle
sti
in
lods
xchg
mov
cltd
lds
and
outsl
dec
pop
arpl
mov
out
or
pop
into
fldenv
leave
add
lahf
pop
aas
fscale
inc
sub
into
cwtl
jnp
int
hlt
cmp
sbb
mov
jns
mov
lahf
jmp
call
dec
loopne
lods
sti
sub
dec
jmp
pop
jne
jl
dec
add
cmp
test
lock
insb
aad
jb
inc
popa
xlat
stos
shlb
int
movsb
ret
in
jl
es
clc
sbb
stc
pop
jge
lcall
jle
sbb
and
add
cmp
push
sbb
inc
fistl
xchg
dec
cmp
jns
es
xor
int
xor
push
and
cmp
int3
push
mov
fnsave
loop
jno
sub
std
mov
imul
in
sub
adc
out
sub
mov
movsl
xchg
mov
mov
mov
sbb
jmp
sub
mov
dec
jae
aaa
pop
xchg
clc
out
aaa
in
lret
arpl
push
jp
loop
add
add
jnp
out
nop
add
cld
jb
scas
sbb
push
fadd
movsb
outsb
int3
out
jne
dec
sbb
dec
lret
test
inc
in
mov
mov
mov
mov
div
pushf
test
repnz
push
rcll
in
faddl
mov
mov
outsl
or
sbb
dec
xor
sub
fidivrl
cmc
lds
push
imul
inc
pop
mov
aas
cwtl
rol
aas
push
sbb
sbb
and
cli
mov
iret
in
cwtl
and
inc
test
std
nop
push
js
and
roll
and
outsb
cmp
daa
sbb
inc
scas
loope
stos
aas
les
dec
outsl
or
rcrl
xor
pop
inc
arpl
xchg
push
orb
xor
inc
jo
jnp
inc
sub
mov
xchg
movsl
leave
test
in
xchg
fistpll
xor
je
hlt
inc
jp
mov
in
push
add
xor
ds
lret
mov
outsl
fs
imul
insl
insl
movl
ret
push
les
cli
mov
sbb
mov
and
push
faddl
cmp
jp
icebp
push
leave
pop
mov
mov
out
movsb
dec
pop
outsb
leave
sti
gs
dec
mov
fistl
inc
iret
pop
subb
push
mov
je
add
inc
xor
rcl
int
mov
loope
xor
jecxz
jl
or
dec
mov
push
idivl
pop
out
dec
mov
lret
xchg
vpaddq
ds
push
jecxz
push
jo
vpshuflw
ds
out
jo
in
sbb
mov
fsubr
xor
sbb
mov
sub
cld
lahf
lds
leave
xadd
pop
add
cwtl
lea
outsl
ret
or
movsb
push
cmpsl
add
test
xchg
jne
shll
inc
xor
aas
ror
dec
push
cmpb
mov
xor
mov
push
lret
adc
xchg
mov
or
shll
or
aaa
into
or
cld
xor
shrb
roll
dec
mov
test
rorb
mov
add
arpl
sahf
jno
jmp
pop
mov
scas
lock
inc
scas
adc
xor
ljmp
xchg
call
ljmp
mov
iret
nop
xchg
popa
mov
or
sahf
sti
mov
notb
or
pop
adc
js
dec
jmp
jne
das
into
cmp
imul
scas
fcmovbe
fwait
inc
xchg
jae
adc
add
int3
popl
sbb
xchg
nop
xorb
mov
mulb
mov
add
imul
sbb
inc
pop
fstps
push
and
jmp
loope
push
adc
shlb
cmp
cmp
fistpl
xor
sub
jne
sub
jno,pn
cmc
icebp
add
mov
aas
popa
and
cwtl
cmpsl
repz
outsl
sbb
cmpsl
lret
mov
cmovnp
inc
or
shll
enter
xor
dec
mov
pop
mov
sbb
dec
loop
ror
rcll
mov
xchg
sti
pop
inc
ss
and
adc
xchg
pop
add
xor
add
pop
insl
aad
mov
sub
lds
mov
pop
dec
pop
inc
ja
sub
ud0
lahf
adc
jecxz
fs
stc
dec
mov
int
cmpsb
mov
sbb
dec
mov
scas
adc
shll
lcall
mov
in
dec
bound
frstor
in
repnz
fists
enter
adc
adc
arpl
push
imul
or
adcb
popf
lock
sbb
push
int3
mov
sub
notb
xchg
pop
mov
pusha
fidivrl
xchg
push
mov
call
aad
outsb
cwtl
inc
push
mov
cmp
insb
aas
push
mov
mov
mov
sbb
js
mov
push
mov
in
pop
xchg
vpsubsw
adc
xor
xor
add
dec
addr16
dec
gs
ja
pop
sbb
cmp
mov
shlb
pop
in
mov
adc
les
xor
adc
mov
and
addr16
mov
or
or
stc
and
inc
jo
cmp
mov
pop
in
sub
and
popa
call
loope
insl
push
push
dec
cmp
inc
pop
imul
movsl
or
lods
cmp
inc
cld
shlb
inc
dec
iret
mov
add
sbb
andl
nop
or
jle
push
bound
dec
sbb
ss
mov
int
inc
ds
mov
movsb
sahf
pop
in
adc
jb
pop
rcl
mov
adc
stc
mov
dec
mov
push
stos
mov
sbb
popa
cmp
and
pop
adc
out
pop
aas
sbb
lods
push
aaa
stos
mov
dec
pop
int3
aad
or
iret
adc
call
or
insb
insl
push
jbe
push
cmp
cmc
xchg
xchg
push
jg
dec
aaa
cli
cmp
fiaddl
stc
mov
pop
les
sbb
sbb
repnz
mov
loop
movsl
dec
mov
test
push
mov
lds
pop
stc
int
loope
sarb
adc
xchg
mov
arpl
inc
mov
jne
repz
push
clc
sbb
inc
test
push
fucomp
mov
pushl
jnp
repz
mov
pop
ja
fs
xlat
popf
add
out
cmpl
adc
leave
cli
scas
mov
or
lret
pushf
add
imul
int3
xchg
jno
sub
push
lea
xor
xor
adc
fisttps
pop
insb
inc
sub
in
pop
add
js
les
stos
sbb
inc
jo
mov
or
jle
lock
test
inc
scas
dec
xor
int
mov
lock
iret
add
lea
lods
mov
mov
jmp
test
out
inc
lods
sub
push
out
in
int3
xorl
adc
jb
in
fmul
fcomip
jecxz
xchg
cmp
pop
inc
xchg
dec
mov
stos
pop
jb
iret
mov
xor
lods
mov
sbb
lods
pop
lret
cmpsb
rcl
fidivl
cmc
daa
cmc
clc
pushf
imul
rcll
cmp
push
ds
or
adc
out
aam
int3
rcrb
arpl
stc
adc
sahf
adc
dec
jg
mov
pop
and
test
mov
pop
inc
addps
jno
imul
outsl
or
pusha
xchg
xchg
stc
ret
cltd
mov
dec
push
test
lods
imul
test
test
fisttpl
je
pop
shrl
fcomp
sarl
popa
aaa
add
test
push
sbb
add
std
mov
das
jae
out
aaa
pop
jne
cmpsl
std
jne
stos
data16
and
jl
pop
add
popf
jecxz
sub
push
inc
cmpsb
adc
xchg
je
out
rclb
adc
lock
xchg
mov
orb
xor
jmp
cmp
imul
leave
cmp
and
pop
loope
mov
mov
jae
push
mov
dec
cmc
shr
and
mov
push
shlb
and
lcall
dec
mov
iret
push
cmp
or
dec
dec
adc
pop
ss
mov
mov
or
inc
decb
das
cli
push
sbb
push
jnp
sti
lret
jne
add
stos
in
mov
mov
mov
lds
stos
std
jne
inc
test
shr
cmpl
mov
jge
hlt
in
es
aad
xchg
test
push
cwtl
test
xchg
or
mov
lock
mov
hlt
lret
or
xchg
mov
ret
out
je
mov
and
push
loop
sub
aas
dec
mov
mov
cli
inc
push
xchg
adc
sub
push
and
jb
sbb
cwtl
mov
sarb
daa
lahf
repz
xchg
test
jmp
pop
aaa
xchg
lock
push
jecxz
push
fs
scas
js
lock
aam
int
and
mov
cmp
ja
loop
xchg
mov
push
sbb
jb
js
cwtl
cmp
in
xchg
xor
dec
mov
ss
sbb
mov
mov
add
rorb
enter
rclb
iret
call
adc
xchg
lds
mov
dec
jge
jecxz
sbb
dec
sahf
daa
mov
lahf
xchg
cmp
fcmovbe
cli
pop
rep
and
cmp
shlb
jnp
inc
mov
fdivp
inc
movsl
xchg
ret
pop
cmp
jno
sbb
sti
icebp
jae
insl
scas
cltd
pop
add
in
xchg
xlat
lock
sbb
xchg
pusha
lods
sbb
pop
aam
mov
inc
pop
scas
xchg
mov
pusha
dec
push
dec
mov
push
xchg
idivb
call
movsb
xchg
inc
jge
fcoml
jo
nop
ja
call
lds
jns
loop
int3
dec
cmp
lods
repz
and
lds
jb
out
aam
aad
inc
or
jmp
popa
movsl
popf
sbb
jae
push
in
cmpsb
lds
popf
pushf
xor
jg
hlt
push
xor
cs
dec
in
push
add
and
inc
jae
repnz
mov
rorb
cli
sub
add
lahf
icebp
inc
rcrl
fldcw
mov
xchg
mov
jae
jecxz
adc
jbe
test
mov
or
jl
mov
jns
mov
pop
adc
stos
mov
add
cmp
mov
cmc
sub
arpl
mov
mov
rclb
loop
sbb
insl
jno
mov
or
cmc
outsb
sbb
jmp
mov
push
cld
add
int3
lcall
mov
mov
popa
xchg
jnp
add
pop
pop
mov
jbe
sahf
popf
je
out
pop
adcl
divb
lods
pop
jle
add
push
and
fsub
das
mov
adc
scas
cmp
into
aad
mov
lret
push
bound
pop
jno
sbbb
aam
pop
sbb
mov
dec
jno
fisubrs
pop
out
sub
mov
mov
in
out
dec
insb
scas
call
jbe
fldcw
call
dec
xchg
sbb
data16
lds
and
and
or
push
jle
dec
js
jecxz
outsl
lret
mov
cs
dec
out
mov
dec
testb
mov
pop
xor
mov
pop
outsb
xlat
movsl
sub
iret
std
xchg
in
pop
mov
dec
outsl
cmpsb
addb
int3
addr16
and
mov
scas
fs
aas
mov
icebp
repnz
out
sub
fiadds
jnp
xor
jbe
xor
fnsetpm(287
fmuls
sarl
pop
sub
cmc
imul
faddl
push
adc
add
and
sbb
cmc
dec
arpl
and
mov
popa
negb
andb
dec
rol
fisttpl
mov
test
test
and
push
das
adc
pop
pop
xchg
out
jnp
adc
inc
movsl
scas
mov
adc
loope
nop
push
xor
sbb
seto
aam
dec
sbb
sbbb
repz
gs
popf
push
cmp
jbe
shl
pop
frstor
pop
scas
adc
cld
rclb
sub
xor
imul
pop
mov
ds
in
arpl
in
lahf
push
sub
pop
push
flds
frstor
repnz
mov
mov
and
push
movsl
out
ss
mov
inc
rcr
daa
xor
cmpsl
mov
pop
mov
sahf
push
rcl
test
cld
ds
sarl
jne
sti
repz
leave
xor
int3
xlat
xor
sub
mov
sti
cltd
adc
mov
sbb
mov
dec
sahf
jns
sarl
std
pop
lret
mov
cmpsl
or
pop
or
or
clc
jp
lcall
scas
jne
adc
push
sti
pop
mov
cmpsb
and
ret
pop
je
add
cmp
stc
test
ss
sub
push
out
aaa
and
add
xchg
mov
imul
mov
sub
fmulp
jne
cmp
xor
repz
xchg
inc
jns
push
mov
inc
or
mov
ljmp
clc
mov
and
sub
dec
push
stos
std
sti
movsb
out
sbb
jge
xor
adc
mov
iret
jo
dec
pop
rcl
pop
loopne
adc
test
inc
ljmp
insb
loopne
mov
daa
aas
cmovge
push
xchg
sbb
sub
push
sub
in
inc
jns
adc
out
cmp
mov
mov
and
out
outsl
std
or
mov
mov
int3
mov
out
inc
in
jecxz
cmp
lock
jno
fwait
mov
sbb
ret
or
mov
pop
add
push
and
sub
andb
nop
and
mov
jge
add
ret
stos
jns
ret
fmuls
inc
jae
push
adc
dec
mov
rcrl
ljmp
and
jb
sbb
in
push
adc
dec
cmp
nop
push
mov
mov
jp
and
mov
xchg
push
add
cmp
sub
mov
push
arpl
sub
adc
cltd
enter
ss
test
sbb
and
daa
xor
mov
mov
mov
or
sub
in
cmp
shrb
mov
movsb
sub
push
or
lahf
clc
xchg
lods
call
dec
lea
mov
test
lea
mov
fbld
cmc
jl
sub
sbb
repz
int
loopne
cmp
popa
nop
inc
lret
pushf
and
sbb
test
pop
lds
pop
mov
mov
or
xchg
push
out
stc
mov
xchg
jbe
mov
int3
sub
int3
repnz
test
add
jae
xor
lods
and
movsb
mov
or
in
mov
pop
ss
push
sbb
jle
pop
add
jl
pop
mov
push
or
push
orl
add
ja
add
cmpsb
pop
mov
pop
fbld
mov
stc
push
mov
adcb
cmc
dec
add
enter
scas
in
cld
jl
or
inc
add
in
sahf
fldl
loop
mov
aaa
inc
ret
push
mov
loop
or
xchg
xor
mov
dec
inc
stos
jno
fsubrs
lret
fbld
pop
and
xchg
pop
push
inc
fstps
je
lea
or
mov
test
push
sbb
out
xor
jno
scas
lods
sub
or
sbb
or
cltd
hlt
xchg
fsts
push
icebp
fwait
add
sub
subl
shll
loopne
data16
dec
inc
stc
cld
das
pop
in
push
clc
add
cmp
pop
lods
dec
jb
stos
mov
je
or
push
xchg
insb
icebp
in
int3
lret
sub
jmp
xor
lods
xchg
out
inc
mov
es
mov
xor
out
leave
and
jae
adc
jmp
insl
cmp
pop
push
sahf
insb
push
sarb
push
add
add
test
pusha
addl
add
xchg
aas
push
test
mov
jmp
or
lahf
mov
xchg
adc
movsl
jbe
filds
add
mov
inc
jmp
jbe
or
outsl
imul
xchg
mov
test
dec
pushl
add
flds
jb
fstpt
cmp
nop
mov
call
scas
or
aas
inc
fldcw
aaa
cltd
dec
mov
adc
lcall
cwtl
and
fmull
sbb
lds
fstpl
lahf
aaa
or
enter
leave
and
in
movsb
test
mov
sub
mov
insl
das
aaa
push
sub
xor
call
xor
out
lcall
shll
pop
je
xor
shll
leave
js
cli
dec
cmp
dec
xor
jg
jns
daa
daa
add
imul
adc
clc
rclb
pusha
inc
movl
sub
sub
arpl
add
push
or
leave
xor
outsb
or
xor
add
mov
inc
fsubrs
daa
lea
or
jae
faddp
cmp
adc
ficompl
or
xor
mov
imul
sub
inc
inc
inc
std
inc
inc
xor
and
xlat
lahf
pop
out
inc
clc
mov
add
fwait
movsl
int
loope
fildll
add
bswap
lock
outsb
testb
cmp
add
cli
cld
aad
fcomip
jl
ret
xchg
loop
adc
or
hlt
add
dec
rcll
mov
push
or
test
arpl
cld
dec
loop
stc
ljmp
push
imul
fdivs
pushf
notl
fdivrs
xchg
into
cmp
inc
cmp
mov
push
dec
jnp
mov
popf
sbb
fists
push
and
loop
cmp
fcompl
push
outsb
cmp
mov
mov
inc
test
sbb
cmpsb
adc
mov
cmpsb
cmp
adc
int3
sbb
testl
popa
push
mov
xchg
sbb
xor
and
into
adc
xchg
test
and
aad
movsb
ds
and
xchg
pushf
pusha
push
pop
cmp
lock
insl
in
and
pop
and
sbb
sub
pushf
jl
xchg
rorb
ds
lret
mov
pop
leave
or
pop
and
push
jle
cld
push
js
dec
out
and
ret
add
push
addl
arpl
xor
and
adc
add
repz
and
adc
add
push
addl
arpl
xor
and
adc
add
repz
and
adc
add
push
addl
arpl
xor
and
adc
add
repnz
and
adc
add
push
addl
arpl
stc
xchg
inc
testb
in
cs
ds
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
je
xchg
push
sbb
or
ja
add
sub
inc
test
mov
ret
jmp
divb
push
sub
sbb
or
jns
imul
xchg
mov
call
leave
mul
mov
iret
inc
imul
inc
mov
call
mov
xchg
mov
push
pop
jne
push
repnz
sub
pop
in
mov
or
add
push
lods
ficompl
jle
and
leave
sub
fnsave
int
cmp
pop
out
sarl
pop
insl
inc
mov
sbb
icebp
stos
sbb
stc
xchg
cmpsw
ja
push
xor
xchg
xor
push
and
push
xchg
pop
cmpsb
dec
sti
lods
add
jbe
pop
jbe
je
jmp
int3
sbb
mov
leave
leave
xchg
push
sbb
movsl
stc
shll
inc
or
jnp
stc
sub
out
lods
out
or
ja
aad
cwtl
jo
fdivrl
xchg
pushf
or
pushf
or
gs
sub
in
xchg
ds
movsb
xchg
mov
lods
les
pop
jns
dec
addr16
pop
jecxz
cmp
sub
fadd
call
aad
addl
push
pop
push
ret
adc
add
and
in
mov
mov
imul
push
pop
dec
jbe
xchg
mov
jmp
idivb
push
sub
sbb
or
jns
imul
xchg
mov
jmp
idivb
push
in
inc
mov
push
fdivs
cmpsb
aam
adc
mov
std
call
test
mov
adcb
cmp
or
out
and
push
push
les
mov
mov
inc
cmp
es
push
dec
sbb
sub
stos
rol
fistpll
xor
jns
push
int
mov
pop
inc
test
mov
jns
js
push
jle
fidivrs
push
pop
xor
arpl
push
mov
and
lods
xchg
dec
stos
mov
sbb
xor
dec
xchg
pop
push
mov
lahf
xchg
cmp
aam
mov
lock
in
outsb
jecxz
sub
enter
dec
pop
pusha
jg
mov
mov
add
fdivp
mov
jecxz
ret
into
xchg
addb
scas
pusha
sbb
lods
bound
gs
into
jmp
mov
int
xor
cwtl
lods
jp
adc
cwtl
cmp
dec
addr16
jnp
cmc
or
sbb
stos
dec
aas
sti
jbe
scas
leave
mov
push
adc
aad
gs
psubusw
addb
xlat
cmp
aam
in
sbb
mov
xchg
jno
cmc
push
mov
mov
into
lds
jl
mov
add
lock
add
movd
adc
sarl
dec
xchg
cmp
aam
pop
sub
out
adc
notb
or
xor
imul
adc
stos
xchg
xchg
or
ret
dec
mov
inc
subb
mov
inc
pop
into
sti
or
cwtl
scas
outsb
dec
and
jmp
adc
mov
pop
lcall
outsb
loop
lret
mov
cmc
lret
gs
dec
adc
jno
fistpl
js
ss
adc
iret
cmp
stos
sti
insl
pop
cmp
xchg
aaa
and
in
shrl
push
and
pop
popf
data16
and
cs
inc
es
scas
push
iret
cmp
test
adc
mov
dec
and
cmp
xor
fsubrp
pop
sbb
shrb
adc
cmp
push
push
outsl
xor
setl
jae
push
cmp
cmp
mov
xchg
dec
cmpl
jb
jnp
push
push
pop
call
rorl
enter
int3
leave
int3
imul
cmpsb
xor
insb
push
fcoms
movsb
gs
mov
sbb
mov
xor
adc
daa
test
outsb
ja
or
in
xchg
inc
fisttpl
sbbb
jno
sub
sub
cwtl
and
dec
mov
push
cmpsl
loope
faddp
adc
push
loop
push
xor
shrl
mov
vmread
in
leave
xchg
mov
bound
inc
je
cmp
jp
inc
in
pop
rcrl
pop
into
out
add
push
hlt
aas
push
pop
in
loope
add
cmpsb
adcl
mov
jl
das
cltd
lret
lock
shrl
mov
mov
jo
lcall
push
push
daa
int
scas
push
cmp
jg
subl
test
popa
enter
jmp
int
outsl
sbb
or
adc
push
cli
dec
push
dec
dec
or
cmpb
mov
jbe
pop
je
into
xor
pop
and
jae
mov
test
jns
jg
decb
in
es
xor
outsb
pop
jno
pop
xor
lret
out
xor
mov
imul
and
push
mov
sub
cld
mov
ja
mov
fisubrl
scas
push
push
jnp
xlat
fnstcw
jns
adcb
daa
add
add
loope
jg
mov
scas
stos
dec
dec
ljmp
sbb
sahf
push
push
mov
ror
stos
adc
dec
sub
jb
add
test
mov
stos
lods
orl
sub
cmp
lcall
into
or
repz
js
jne
cwtl
mov
movsb
mov
movsl
inc
jmp
or
loope
in
into
pop
pop
dec
lret
mov
imul
mov
sbb
dec
mov
ja
inc
cmp
mov
in
shlb
dec
stos
fsubs
sub
jne,pt
mov
mov
imul
es
je
adc
xchg
cld
jae
jne
push
stc
and
stos
imulb
ret
or
test
lods
arpl
mov
cmp
clc
lock
jle
cmpsb
lea
mov
loope
mov
push
bound
in
shr
mov
sbb
mov
addr16
jge
mov
push
xchg
hlt
popa
adc
lret
lods
mov
xor
data16
cmc
push
cmp
mov
lods
fwait
xor
cltd
mov
test
test
adc
mov
cs
pop
pop
int
lret
xor
call
jge
and
pushf
push
xchg
fcoml
out
in
popa
fwait
movsb
and
fstpl
inc
push
je
add
pminsw
jbe
inc
nop
pop
pop
outsb
xchg
shr
mov
repnz
cwtl
fdivrl
push
test
bound
mov
mov
pop
lods
call
or
gs
fstpl
nop
cmpsl
inc
dec
repnz
idivl
mov
and
mov
inc
jp
in
push
mov
adcl
or
fisubs
fmuls
add
stc
cld
inc
ljmp
xchg
fldcw
add
pop
addr16
sub
popa
mov
std
test
jmp
lock
and
je
outsl
xchg
add
dec
sbb
jp
ja
cmp
addr16
pop
out
test
mov
les
cmc
negb
fisubs
outsb
mov
mov
cmp
jae
xor
pop
add
sub
scas
sbbl
aad
popa
jo
pop
sbb
rol
leave
psadbw
negl
rolb
notb
int3
jl
lock
inc
jb
dec
or
or
push
mov
pop
sahf
dec
jl
dec
sarl
xchg
inc
lds
pop
jae
pop
call
and
mov
mov
inc
cmp
lds
inc
mov
test
stos
pop
xor
and
push
ja
cmc
inc
xor
movsl
cmp
cmp
fwait
and
jno
loop
dec
clc
jecxz
adc
out
or
or
jno
movsb
mov
xchg
cmp
mov
scas
fsubrs
jo
inc
call
mov
loop
loop
cld
std
lahf
push
cltd
call
push
and
sub
lea
jno
mov
enter
or
arpl
jne
push
add
jecxz
rorb
adcb
cmp
push
fnstenv
sbb
xlat
jmp
xchg
insl
js
cld
xchg
mov
lods
pop
sti
iret
jo
inc
push
inc
sbb
xor
mov
push
sub
mov
push
loope
sbb
lock
push
mov
fistpll
scas
arpl
xorb
hlt
xor
in
pop
add
push
pusha
lret
dec
pushf
dec
lods
jmp
fs
ret
out
aas
fcmovbe
lret
cmc
mov
sub
add
in
std
xchg
loop
dec
pop
in
xchg
out
jne
pop
xchg
jp
or
in
pop
add
rorb
mov
cmp
pusha
pop
push
or
pop
fwait
and
pop
ret
str
sub
push
flds
repnz
fxch
aaa
adc
in
and
inc
mov
mov
sbb
icebp
sub
dec
repnz
fiaddl
mov
jbe
push
jb
xor
cwtl
jle
or
stos
insb
cmp
adc
scas
gs
arpl
test
rclb
int3
negl
loope
andb
push
jl
inc
adc
mov
cmp
lret
scas
add
dec
repz
ficompl
mov
adc
pop
orb
push
es
fdivl
adc
push
int3
lahf
xchg
stos
pop
arpl
sbb
lcall
jne
ret
lods
inc
push
jge
push
into
ds
push
mov
popl
movsl
sbbb
and
xor
stos
inc
sub
sbb
roll
mov
out
fists
hlt
mov
cmp
mov
dec
inc
add
push
jp
out
out
je
mov
lret
adc
mov
xor
mov
lahf
js
icebp
pop
dec
stc
lods
push
in
xchg
hlt
cmpsb
cmpsb
mov
xchg
xlat
lea
pop
mov
test
loop
filds
gs
xchg
ss
lcall
jp
xchg
adc
scas
mov
outsl
and
push
or
in
dec
sub
scas
cltd
jns
ds
pop
xlat
jae
pop
lea
dec
sub
lods
pop
push
xorb
popf
push
mov
add
inc
push
pusha
mov
out
sub
cmp
adc
and
iret
stc
pop
fdivl
jmp
out
sub
lds
adc
and
add
movsb
outsl
add
fcoml
mov
push
pop
adcb
stc
clc
roll
xor
sbb
cmpsb
lret
mov
sbbb
adcl
add
and
fucomi
insb
mov
mov
lea
scas
mov
shll
push
push
andb
aad
daa
in
outsb
insl
xchg
enter
mov
cwtl
dec
and
scas
sbb
xor
lret
xchg
pusha
mov
addr16
sbb
int
shrb
stc
out
or
loope
shll
clc
leave
mov
popf
cs
xor
out
jg
sbb
loop
push
mov
lds
outsl
pop
fstpt
pushf
rcrl
test
es
add
gs
gs
inc
adc
inc
cmp
jmp
push
popa
xchg
cwtl
aas
movsl
adc
and
out
das
mov
add
mov
enter
ret
fs
xorb
adc
insl
dec
mov
mov
std
xchg
out
cmp
fcomip
scas
cmpsb
cmpsl
pop
mov
xchg
in
pop
pop
xchg
std
mov
lcall
xchg
add
dec
arpl
and
fwait
jo
pop
dec
xor
dec
test
and
andl
call
add
leave
mov
ja
out
and
daa
jecxz
dec
xchg
jg
shlb
mov
sbb
int
push
jle
scas
mov
sbb
jge
jg
outsb
xlat
push
dec
loopne
enter
mov
cmp
sbb
stos
adc
dec
push
dec
scas
dec
pop
pop
mov
xor
nop
imul
loopne
iret
sub
sti
mov
inc
xor
mov
and
adc
pop
mov
push
std
rcrl
inc
add
nop
mov
xor
push
jno
out
popl
jne
test
fs
stc
jne
jle
fstpl
jbe
cmp
inc
adc
jb
adc
xor
xor
pop
adc
mov
mov
jbe
add
fisubrs
sub
jbe
inc
insl
adc
fildl
xchg
getsec
push
adc
scas
std
adc
mov
xchg
out
sbb
push
jne
int3
push
mov
cld
sbb
lea
xor
jnp
mov
sub
decb
loopne
movsl
shl
mov
mov
add
pop
cmp
fwait
test
lds
test
pop
jge
scas
or
sbb
jae
inc
xor
lds
cmpsb
popa
inc
adcl
xor
inc
mov
cmc
gs
jg
adc
shrl
fwait
js
rorb
movsb
dec
jb
icebp
mov
daa
call
aaa
pushf
sub
lea
push
fcoms
add
jno
addb
dec
in
adc
aad
fstpt
lahf
fadds
dec
push
mov
pop
repnz
stc
mov
call
ja
pop
mov
mov
es
dec
scas
push
sbb
shlb
mov
ds
and
xor
xor
es
shlb
mov
xor
loop
or
outsb
mov
ror
std
div
outsb
add
pop
pop
stc
sbb
push
popl
popl
fimuls
aas
or
test
rorl
fucom
sub
pop
cmc
daa
mov
xor
test
and
out
push
add
jecxz
mov
sbb
andb
jg
aad
ds
xchg
cwtl
outsb
xchg
pusha
pop
xor
xchg
xor
xchg
ret
cmp
or
aas
mov
pop
adc
imul
mov
jmp
aam
cld
xor
mov
jp
lock
sbb
adc
divb
sub
adc
insb
out
and
lcall
mov
jo
decl
push
mov
mov
rol
inc
xor
sub
mov
ds
xor
mov
dec
push
loope
jae
pop
lret
movb
push
jecxz
test
lcall
cld
arpl
movsl
ja
mov
xchg
or
clc
je
mov
adc
out
rorb
and
push
ss
cwtl
jmp
adc
pop
dec
dec
and
negb
jo
mov
jbe
jo
and
xchg
outsl
aas
es
sarl
sub
cmpsb
cmpsl
imul
enter
sbb
and
push
and
fdivrs
pop
cmpsl
cmp
in
loope
mov
inc
das
adc
and
adc
in
ror
ds
push
pop
pop
sbb
jecxz
sbb
mov
lds
mov
loop
sub
push
pop
out
aas
mov
icebp
jg
sbb
push
pop
cli
call
jo
cwtl
cmp
mov
scas
lcall
mov
and
jg
mov
inc
xor
mov
adc
sbb
lods
cmp
push
aad
movsl
cmp
icebp
jecxz
inc
pop
dec
mov
sub
stc
cmp
loop
inc
inc
jbe
cmc
mov
xlat
jnp
push
inc
xchg
es
pop
cs
jae
arpl
je
or
xchg
pop
int
inc
pushf
inc
xchg
mov
js
push
aad
or
stos
xlat
stos
dec
pop
ret
and
testl
cs
imul
push
mov
sbbb
loope
mov
inc
out
std
adc
cmpsl
cmp
fdivl
ja
sahf
aas
xchg
pop
bound
jmp
lret
inc
inc
cmp
mov
in
mov
rcrl
pop
mov
sbb
icebp
std
fimuls
int3
stos
out
int3
mov
xor
xlat
push
loop
mov
push
pop
cmp
jne
sbb
or
cmpsl
dec
sbb
imul
inc
scas
insb
shrb
xchg
stos
and
imul
mov
dec
or
pop
mov
mov
fcomps
adc
in
inc
leave
pop
shll
fmull
add
sub
dec
popf
lock
and
inc
cmpsl
xor
roll
fdivrs
es
lods
aad
or
mov
scas
dec
adc
dec
pop
shr
popf
pushf
popa
cmp
add
out
mov
sub
outsb
cmc
inc
xor
mov
mov
loop
sub
outsb
push
mov
xlat
nop
sar
js
sub
xchg
in
xchg
pusha
pop
bound
mov
add
aam
je
mov
adc
ret
shl
ret
jb
icebp
dec
and
andl
dec
rcll
push
add
add
cs
dec
xor
sub
movsb
std
movsb
gs
pop
push
shll
mov
push
pop
arpl
push
adc
xlat
sbb
pop
test
imul
jns
fbld
cmp
inc
mov
add
insl
xchg
idivl
mov
sbb
loopne
stc
mov
stos
cli
int
data16
adc
pop
lret
dec
xchg
xchg
xor
mov
mov
andb
scas
stos
test
outsl
and
or
adc
mov
push
mov
jns
mov
jge
jecxz
sbb
out
outsl
leave
adc
loop
jb
xor
loopne
mov
xor
lahf
xor
cmp
sarl
pop
jmp
mov
xor
adc
adc
std
dec
push
imul
xor
xchg
rcrb
addl
movsl
jge
sub
cmp
add
mov
cmp
push
and
cmp
mov
sbb
mov
lea
int
lds
push
ss
pop
sbb
pop
mov
fstp
jmp
mov
xor
shll
mov
xchg
push
mov
insb
lock
xchg
inc
mov
lea
cmp
jl
fldl
sarb
xchg
mov
push
jmp
mov
lds
cmp
cwtl
jg
or
push
test
jno
xor
cmpsb
push
sbb
inc
leave
xchg
lcall
aas
addr16
setne
jl
push
mov
xor
mov
cld
pusha
xchg
test
out
or
es
pop
dec
mov
sbb
jne
sub
out
push
ret
or
dec
sub
iret
cld
addl
push
into
int3
fidivrl
and
lret
nop
into
nop
nopl
inc
dec
push
movsb
mov
out
inc
lock
outsl
mov
out
fdivs
je
jb
xchg
fidivs
mov
inc
inc
sti
add
jno
fs
pushf
dec
cmp
mov
clc
in
les
ds
andl
jecxz
stos
scas
insb
mov
jmp
mov
dec
push
push
js
mov
cmp
jge
mov
xlat
scas
mov
sbb
or
fildl
aaa
gs
mov
lcall
mov
push
cwtl
sub
fimull
mov
and
fs
dec
dec
stc
aaa
iret
lcall
and
adc
jmp
out
sbb
pop
test
rcrb
icebp
and
mov
mov
pop
sbb
pop
cmp
loop
xchg
daa
jg
dec
pop
bound
les
jmp
andb
sub
fidivl
jle
stc
nop
popa
push
or
es
cmpsl
adc
jb
movl
jno
popf
push
xor
cmp
lcall
pop
mov
jb
jl
xor
jmp
imull
xchg
adc
xor
shrl
pushl
dec
fistpl
and
stos
inc
mov
test
sub
push
das
xchg
and
bound
push
enter
and
cs
push
inc
js
je
mov
pop
xor
stc
pop
stos
push
pop
adc
jl
mov
popa
push
or
xchg
shl
divl
xchg
push
in
in
test
pop
jno
test
push
push
add
jo
fiaddl
hlt
and
mov
negl
test
imul
scas
bound
mov
push
stc
imul
call
fisttpl
ss
in
shlb
push
inc
mov
xchg
sbb
xor
je
inc
mov
out
adc
xor
mov
mov
int
jb
rorb
cmp
mov
mov
shrb
pop
and
sar
out
aas
mov
dec
aaa
or
bound
cmp
xchg
setge
inc
stos
sarb
inc
cmpsb
mov
or
mov
sahf
inc
rclb
mov
pop
sub
xor
xchg
shl
inc
dec
mov
gs
and
mov
jo
xchg
jbe
sbb
aaa
mov
mov
mov
outsb
mov
sbb
outsl
pop
movsb
push
lret
dec
adc
lods
shlb
or
jg
rcl
stc
test
mov
ja
jbe
pop
dec
xor
mov
js
stos
cwtl
sbb
jnp
in
fsubs
inc
lds
xchg
fidivrs
push
push
sub
add
mov
imul
sub
mov
arpl
or
sbb
loop
sti
push
dec
rcrb
and
rolb
adc
inc
outsb
ret
push
cmp
sbb
xchg
sbb
pop
stc
mov
stos
pop
testl
dec
gs
jg
pushf
add
xchg
iret
push
loop
je
xor
sbb
lret
jo
sbb
jo
mov
or
cmp
cmp
sub
jp
add
mov
stos
pop
rcrb
cmc
dec
sub
mov
cld
push
pushf
and
addr16
adc
dec
out
push
cmp
movsl
mov
sub
andl
sub
or
push
sbb
shlb
sub
movsl
scas
jl
pop
push
out
adcb
arpl
arpl
pop
mov
add
add
dec
mov
out
push
xchg
shr
and
inc
lods
int
push
add
cmp
rcrl
adc
ds
jp
jno
scas
stc
sub
xchg
jge
pop
int3
dec
cli
push
sub
mov
xorb
ret
dec
fndisi(8087
out
xor
sbb
mov
jle
test
jmp
loope
sub
xchg
cmc
in
cmp
in
pop
push
jecxz
push
xor
adc
push
pop
dec
jbe
xchg
mov
jmp
idivb
push
sub
sbb
or
jns
imul
xchg
mov
jmp
idivb
add
sbb
or
js
insl
cmp
mov
cmpsb
lea
fucomp
stc
adc
loop
repnz
ret
jns
jns
pop
out
mov
jns
cmp
cmpsb
mov
mov
ss
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
