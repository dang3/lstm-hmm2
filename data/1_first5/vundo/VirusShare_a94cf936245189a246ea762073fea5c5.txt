ret
ret
push
nop
xor
mov
or
pop
add
mov
jmp
or
mov
push
xchg
push
nop
jmp
push
xchg
jmp
push
in
jmp
xor
inc
xor
mov
jmp
push
pusha
je
mov
and
xchg
jmp
test
jmp
push
push
push
push
push
push
lea
jmp
push
push
mov
jmp
push
push
push
push
add
sub
and
inc
and
xor
mov
movzbl
jmp
push
push
push
push
add
testb
pop
call
xor
jmp
push
push
push
push
jmp
leave
nop
nop
nop
nop
nop
test
jmp
push
push
push
push
jne
inc
mov
shl
pop
ret
jmp
push
push
push
push
push
push
addr16
push
xchg
push
push
pop
push
mov
add
nop
push
push
pop
call
push
pop
nop
nop
nop
nop
nop
inc
shl
sub
xor
shr
and
add
ror
sub
mov
sub
add
xor
mov
add
mov
movzwl
jmp
push
push
push
push
or
add
jmp
push
push
call
lds
aad
mov
push
addr16
push
addr16
jmp
and
nop
mov
nop
ret
jmp
push
push
push
push
push
push
push
push
sbb
inc
add
nop
add
mov
cmpl
xchg
je
push
mov
jmp
push
jmp
sub
mov
push
xchg
push
xchg
push
nop
call
jmp
sub
xchg
jmp
push
push
rolb
xor
and
and
mov
jmp
lea
jmp
push
push
push
push
push
push
push
mov
push
mov
pushl
nop
pushl
mov
call
mov
leave
jmp
push
push
ret
jmp
push
push
push
push
push
push
push
addr16
jmp
push
push
pop
jmp
sub
xchg
mov
mov
andl
xchg
push
nop
xor
xchg
and
xchg
jmp
jmp
movb
xchg
incl
mov
jmp
push
nop
sub
xor
mov
push
nop
jmp
mov
push
pop
mov
xchg
test
jmp
push
push
push
push
push
push
push
add
shll
mov
call
mov
jmp
push
call
nop
mov
xchg
jmp
push
xchg
push
nop
jmp
push
xchg
add
mov
jmp
push
mov
push
push
pop
push
addr16
cmpl
mov
jmp
inc
nop
mov
xchg
mov
addr16
movl
mov
or
xor
sub
or
mov
inc
shl
add
and
mov
mov
shr
jmp
push
push
push
push
push
push
xchg
jmp
and
or
mov
mov
andl
nop
push
xchg
shr
shr
pop
jmp
or
pop
jmp
push
leave
add
mov
push
mov
jmp
push
push
jmp
insb
and
and
rol
and
mov
push
nop
jmp
push
mov
xor
xchg
push
addr16
push
xchg
jmp
call
nop
dec
nop
rol
mov
add
mov
or
ror
sub
mov
dec
pop
jmp
inc
nop
ret
jmp
push
push
push
push
push
push
sub
mov
shl
pop
inc
and
pop
jmp
mov
mov
mov
mov
jmp
push
mov
in
sub
push
pop
jmp
test
jmp
push
push
push
push
push
push
test
add
push
xchg
push
mov
pushl
shr
shr
and
inc
push
rol
or
add
sub
mov
sub
shr
shr
and
add
dec
test
jne
pop
pop
call
jmp
push
xchg
xor
mov
mov
jmp
push
push
push
push
jmp
sub
push
pop
push
xchg
push
mov
push
xchg
jmp
dec
push
les
dec
clc
nop
lea
jmp
push
push
push
push
push
push
push
sbb
push
push
push
push
push
xchg
add
xchg
push
nop
sar
jmp
push
push
push
push
push
add
add
xor
mov
lea
jmp
push
push
push
push
push
xchg
push
nop
push
nop
pushl
add
xor
mov
push
inc
add
add
mov
and
sub
shl
mov
or
mov
shl
xor
dec
test
jne
pop
pop
call
jmp
xor
xchg
jmp
push
xchg
lea
jmp
push
push
push
push
push
push
pop
push
xchg
push
addr16
push
addr16
add
and
dec
shr
mov
jmp
push
xchg
pushl
nop
jmp
push
push
rolb
pop
sub
xor
shr
mov
jmp
push
xchg
and
mov
xor
add
or
mov
shr
jmp
push
push
push
push
push
call
in
nop
call
nop
mov
mov
mov
mov
mov
mov
inc
and
rol
sub
mov
test
jmp
push
push
push
push
push
push
push
jmp
push
jmp
push
push
push
push
jmp
push
push
push
jmp
push
push
push
push
push
adc
stc
incl
push
pop
mov
nop
mov
xchg
jmp
sub
addr16
xor
mov
push
addr16
push
mov
push
mov
jmp
push
mov
push
nop
nop
nop
nop
nop
nop
jmp
push
push
nop
jmp
push
push
push
push
jmp
pop
pushf
outsl
mov
mov
jmp
movl
xchg
push
nop
pushl
addr16
call
addr16
ret
jmp
push
push
push
push
push
push
push
push
push
pop
dec
sub
add
mov
add
pop
call
push
pop
nop
jmp
push
push
push
push
push
push
cmpb
xchg
nop
jmp
push
push
push
push
push
push
push
add
push
pushl
shl
and
and
pop
jmp
test
jmp
push
push
push
push
push
push
or
add
xor
mov
inc
push
pop
add
mov
jmp
add
mov
push
xchg
jmp
xor
mov
jmp
push
mov
add
add
xor
rol
sub
pop
jmp
push
push
push
xchg
push
mov
push
xchg
xor
xchg
pushl
xor
push
sub
add
and
xor
sub
and
or
mov
shl
rol
sub
mov
dec
test
jne
pop
pop
call
test
jmp
push
push
push
push
push
aaa
add
add
and
add
push
or
push
sub
pop
add
sub
dec
test
jne
pop
xor
sub
shl
rol
mov
mov
call
test
jmp
push
push
push
push
push
push
add
add
addr16
jmp
call
mov
push
popl
xor
add
mov
push
or
pop
add
add
shl
add
mov
add
add
rep
jmp
push
push
push
push
push
push
push
sub
pop
add
pushl
dec
mov
and
sub
pop
jmp
je
nop
jmp
push
push
push
push
push
push
add
add
add
add
push
push
push
push
and
add
nop
jmp
push
push
push
push
push
jmp
lea
jmp
push
push
push
push
inc
nop
push
nop
mov
mov
mov
mov
lea
jmp
push
push
push
push
repz
jmp
rolb
push
push
push
push
add
jmp
push
push
push
push
push
push
push
push
incl
sbbl
loope
jmp
mov
add
rol
add
sub
xor
mov
rol
shl
mov
jmp
jmp
sub
mov
pusha
jmp
push
push
push
sub
dec
or
mov
push
xchg
jmp
je
call
xchg
test
jmp
push
push
push
push
push
push
or
repnz
incl
adc
push
push
push
push
or
add
mov
xor
nop
jmp
test
jmp
push
push
push
push
push
push
jmp
mov
mov
andl
xchg
add
xchg
and
and
mov
add
ror
mov
sub
dec
shl
mov
mov
xchg
jmp
call
push
pop
and
inc
and
mov
mov
xor
rol
mov
mov
xchg
jmp
shl
inc
ror
dec
pop
push
mov
dec
dec
inc
mov
call
mov
xor
mov
add
and
pop
pushl
xchg
push
mov
jmp
popl
mov
pushl
nop
xor
add
xor
sub
mov
call
xchg
movl
nop
call
mov
push
mov
jmp
add
xchg
add
mov
add
xchg
test
jmp
push
push
push
push
push
or
push
push
mov
add
add
xor
and
mov
mov
nop
jmp
pushl
mov
push
nop
call
nop
mov
sub
sub
mov
or
pop
ror
or
ror
pop
leave
jmp
push
push
push
push
push
push
push
jmp
push
push
push
push
push
pop
jecxz
and
mov
call
xchg
ror
shr
mov
inc
rol
mov
mov
movl
mov
jmp
cmp
xchg
mov
jmp
push
push
push
jmp
push
push
push
add
jmp
push
push
push
push
push
pop
hlt
jmp
push
push
push
push
and
push
push
push
push
push
push
push
add
add
push
pop
jmp
add
mov
movzwl
jmp
push
push
push
push
push
addr16
ror
xor
rol
shr
and
pop
cmp
nop
jmp
call
mov
add
mov
push
popl
jmp
add
pop
lea
jmp
push
push
push
jmp
dec
push
pop
lea
jmp
push
push
push
ljmp
add
mov
nop
push
xchg
mov
shr
and
mov
mov
test
jmp
push
push
push
push
push
push
push
icebp
jmp
clc
fistpl
jne
test
jmp
push
push
push
push
push
push
push
and
jmp
push
push
push
push
push
jmp
add
shl
sub
sub
xor
mov
sub
mov
jmp
andl
nop
add
xchg
mov
xchg
test
jmp
push
push
je
mov
xchg
add
sub
sub
add
mov
jmp
and
shl
or
and
pop
cmp
addr16
pop
jmp
push
push
push
push
push
push
mov
add
xor
mov
ret
jmp
push
push
jmp
call
mov
add
dec
pop
sub
mov
rol
add
or
mov
call
nop
jmp
sub
xchg
shr
jmp
push
push
test
jmp
push
push
push
push
push
push
push
or
adc
push
push
push
push
add
jmp
rol
xor
and
sub
mov
add
shr
ror
mov
mov
addr16
or
or
shl
mov
add
mov
mov
xchg
add
sub
mov
xor
mov
mov
rol
add
and
mov
jmp
mov
jmp
push
push
push
jmp
movb
mov
movl
xchg
jmp
sub
xchg
dec
jmp
push
push
push
push
push
push
test
decl
jmp
movsbl
jmp
push
push
push
push
push
push
rol
jmp
push
push
push
push
xchg
incl
addr16
or
ror
mov
jmp
push
xchg
call
xchg
xor
ror
pop
jmp
addr16
push
jle
mov
xchg
movzwl
jmp
push
push
push
and
shr
mov
and
addr16
cmp
xchg
jmp
ror
xor
mov
rep
jmp
push
push
push
push
push
push
pop
movzwl
jmp
push
push
push
push
push
push
incl
nop
add
nop
cmp
xchg
mov
jmp
push
push
push
and
jmp
mov
jmp
push
push
push
push
sbb
sbb
push
push
push
push
push
push
jmp
push
push
push
push
push
pop
push
push
push
push
push
push
push
add
add
nop
jmp
call
addr16
popa
jmp
push
push
push
push
inc
add
xchg
pusha
jmp
push
push
push
push
push
push
repnz
call
popa
jmp
push
push
push
push
push
push
inc
add
nop
call
nop
mov
xor
mov
dec
and
add
add
jmp
je
rol
xor
shr
mov
sub
mov
sub
nop
mov
xchg
mov
mov
jmp
call
nop
add
or
and
mov
lea
jmp
push
push
push
push
add
shrb
push
pop
add
and
add
ror
sub
and
add
push
mov
jmp
jne
and
addr16
add
xchg
add
xchg
add
mov
ror
add
xor
add
mov
inc
xchg
jmp
pushl
sub
xor
and
or
shr
pop
pushl
mov
pushl
mov
pop
shr
add
mov
add
mov
call
nop
jmp
jmp
pushl
shl
shr
pop
or
add
sub
sub
mov
mov
mov
mov
mov
add
xchg
mov
xchg
jmp
add
sub
mov
mov
and
mov
add
call
xchg
ret
jmp
push
push
push
push
push
push
test
jmp
push
push
push
push
push
push
mov
jmp
push
push
push
push
call
enter
mov
jmp
call
xchg
push
mov
jmp
or
or
pop
push
push
pop
pushl
push
pop
call
nop
sub
shr
mov
mov
sub
sub
mov
dec
mov
mov
addr16
call
xchg
jmp
or
or
or
mov
mov
inc
add
mov
sub
mov
jmp
jmp
dec
rol
or
mov
movzbl
jmp
push
push
push
push
push
push
push
xchg
xor
mov
inc
nop
shr
mov
and
mov
inc
mov
jmp
decl
jmp
push
push
push
clc
ljmp
jl
and
clc
and
and
mov
pop
test
jmp
push
push
push
push
push
adc
push
push
push
mov
add
dec
or
or
dec
mov
add
mov
jmp
cmp
mov
je
incl
xchg
inc
and
mov
jmp
inc
mov
shr
jmp
push
push
push
push
push
add
test
jmp
push
push
push
push
push
push
test
add
add
ret
and
xor
or
mov
dec
ror
mov
sub
mov
mov
xchg
jmp
add
mov
dec
jmp
push
push
push
push
push
push
push
jmp
cmp
push
pop
jl
xor
nop
jmp
or
shl
dec
mov
movzwl
jmp
push
push
push
andl
mov
jmp
decl
jmp
push
push
push
push
incl
inc
add
jmp
mov
addr16
and
sub
mov
add
mov
add
sub
and
mov
pushl
sub
pop
rep
jmp
push
push
push
push
push
push
push
clc
xchg
jmp
add
xor
shl
mov
mov
rep
jmp
push
push
push
push
push
nop
movzwl
jmp
push
push
push
push
push
inc
clc
mov
add
mov
cmp
xchg
mov
jmp
push
push
push
push
jmp
incl
xchg
dec
xchg
mov
jmp
push
push
push
jmp
mov
addr16
mov
mov
jmp
call
xchg
jmp
test
jmp
push
push
push
push
push
push
mov
jmp
push
push
push
push
push
jmp
ror
add
or
and
pop
and
or
inc
and
pop
ror
pop
leave
jmp
push
push
push
push
push
push
push
push
add
add
add
add
sub
add
pop
xor
nop
push
xchg
jmp
enter
cmp
nop
jne
xor
xor
xor
sub
inc
pop
rol
inc
mov
jmp
mov
call
push
mov
call
xchg
or
ror
sub
mov
xor
rol
add
mov
jmp
jl
jmp
push
mov
call
cmp
push
pop
jne
rorl
jmp
push
push
push
push
push
push
add
leave
jmp
mov
mov
add
nop
rol
pop
mov
shr
xor
xor
pop
leave
jmp
push
push
push
sbb
push
push
push
push
push
push
shr
push
push
push
add
mov
rol
shl
ror
add
and
add
pushl
xchg
add
xor
xor
and
mov
dec
or
rol
xor
or
mov
add
mov
call
push
pop
sub
pop
jmp
test
jmp
push
push
push
push
push
push
push
popf
add
add
sbb
mov
into
jmp
push
push
push
lahf
cmp
xchg
jne
lea
jmp
push
push
push
push
push
push
call
test
jmp
push
push
push
push
or
add
loope
dec
and
sub
nop
rol
dec
add
mov
jmp
xor
xchg
add
mov
dec
jmp
push
push
push
push
push
push
push
push
call
out
ror
and
pop
mov
dec
shl
pop
leave
jmp
push
push
push
push
push
push
push
push
push
jmp
push
push
push
push
push
push
and
ljmp
clc
sub
pop
rol
add
pop
xor
pop
leave
jmp
push
push
push
push
push
jmp
push
push
push
push
push
push
push
test
add
add
xor
inc
or
xor
mov
pop
or
shr
sub
or
mov
add
mov
sub
xchg
jmp
dec
sub
or
xor
dec
mov
sub
xchg
jmp
movsb
mov
sar
xor
xchg
call
xchg
inc
ror
add
mov
mov
jmp
mov
nop
incl
mov
dec
xchg
jmp
shr
jmp
push
push
push
push
test
jmp
push
push
push
push
jmp
push
push
push
push
push
push
jmp
push
push
push
push
push
add
add
mov
inc
xor
mov
movzwl
jmp
push
push
push
push
push
push
mov
call
enter
mov
push
pop
jmp
jnp
enter
sbb
push
push
push
push
push
jmp
xor
shl
add
ror
mov
jmp
call
addr16
mov
nop
xor
add
mov
ror
sub
xor
or
sub
mov
and
and
add
add
rep
jmp
push
push
push
push
push
in
xlat
jecxz
jmp
nop
nop
nop
nop
nop
push
mov
call
xchg
jmp
dec
nop
inc
jne
jmp
jmp
mov
add
jecxz
lock
cmp
mov
jne
jmp
lahf
sti
xor
jmp
dec
nop
jmp
and
mov
add
mov
add
xchg
add
nop
pushl
sub
pop
addl
mov
jmp
and
xor
or
mov
mov
shr
shl
mov
mov
test
jmp
push
push
push
push
push
add
sub
or
add
inc
and
add
nop
nop
nop
nop
nop
sub
mov
add
addr16
sub
nop
jmp
ror
xor
sub
or
mov
sub
mov
shr
jmp
push
push
push
push
push
push
pop
push
push
push
push
push
push
push
add
nop
shl
mov
movzbl
jmp
push
push
push
push
push
jmp
push
push
push
push
incl
mov
lea
jmp
push
push
push
push
push
push
xor
inc
mov
call
xchg
jmp
decl
jmp
push
push
jne
add
nop
cmpl
xchg
jne
call
nop
nop
nop
nop
nop
nop
mov
mov
mov
xchg
mov
xchg
dec
rol
sub
mov
push
push
pop
xor
add
dec
ror
mov
jmp
lea
jmp
push
push
push
push
push
adc
push
push
push
push
mov
dec
lock
and
mov
movzwl
jmp
push
push
push
push
push
dec
xor
mov
and
addr16
jmp
cmp
nop
jb
inc
nop
cmp
addr16
jb
inc
mov
cmp
addr16
nop
nop
nop
nop
nop
jae
inc
xchg
inc
xchg
test
jmp
push
push
push
push
add
call
push
pop
mov
nop
push
xchg
and
sub
inc
inc
xor
mov
call
nop
xor
ror
mov
test
jmp
push
push
push
push
push
push
push
jl
cmp
push
pop
jne
and
mov
add
xchg
add
addr16
add
xchg
pushl
inc
pop
jmp
pop
jmp
push
push
push
push
push
push
or
push
push
test
add
add
enter
cs
loopne
add
jmp
addl
nop
decl
jmp
push
push
push
push
push
push
incl
inc
add
mov
cmpl
mov
jmp
je
add
xor
and
mov
xor
mov
and
add
and
ror
and
mov
sub
nop
mov
xchg
nop
nop
nop
nop
nop
incl
mov
jmp
add
xchg
jmp
and
mov
add
mov
push
nop
call
xchg
cmp
mov
mov
jmp
push
push
push
push
push
push
je
jmp
das
jae
jne
jmp
lods
add
cld
and
mov
xor
add
mov
test
jmp
push
push
push
push
push
push
jne
or
sub
mov
mov
mov
dec
and
xor
and
mov
or
add
mov
jmp
call
nop
mov
mov
mov
addr16
mov
mov
jmp
dec
push
pop
mov
jmp
push
push
push
push
push
push
push
decl
xchg
xor
xchg
inc
xchg
jmp
or
mov
sub
mov
nop
nop
nop
nop
nop
shl
and
mov
jmp
add
mov
add
addr16
jmp
jns
jmp
mov
lret
xor
mov
xor
mov
push
nop
add
or
ror
mov
call
mov
andl
nop
mov
pop
mov
nop
push
mov
jmp
push
sbb
mov
jmp
push
push
push
push
push
push
push
add
xor
xor
add
add
pop
add
nop
add
push
pop
push
mov
pushl
xchg
call
mov
mov
mov
jmp
or
ror
and
xor
inc
pop
add
mov
push
mov
jmp
mov
addr16
incl
push
pop
incl
xchg
mov
xchg
xor
xchg
cmpl
mov
je
or
add
mov
mov
nop
nop
nop
nop
nop
mov
add
dec
pop
sub
xchg
xor
and
ror
pop
add
xor
mov
xor
pop
ret
jmp
push
push
push
push
push
push
push
movl
add
popl
nop
pushl
xchg
dec
add
shr
mov
call
xchg
nop
nop
nop
nop
nop
add
mov
test
jmp
push
push
push
push
jmp
push
push
mov
jmp
push
push
push
test
add
push
or
rol
sub
add
pop
add
jmp
add
mov
sub
and
mov
test
jmp
push
push
push
jne
add
nop
cmpl
nop
jne
nop
nop
nop
nop
nop
call
push
pop
mov
nop
sub
and
mov
mov
pushl
add
shl
add
dec
or
pop
or
xor
xor
pop
xor
xor
xor
mov
shr
pop
shl
or
pop
mov
mov
cmp
nop
jmp
xor
xchg
jmp
or
add
dec
shr
mov
add
mov
push
xchg
call
nop
cmp
mov
mov
jmp
push
push
push
push
jmp
xor
movsl
incl
push
aam
mov
sub
adc
shlb
rorb
sar
dec
inc
add
mov
mov
pop
add
addr16
leave
jmp
push
push
push
push
push
push
jmp
push
push
push
push
add
add
decl
or
push
push
test
add
sub
or
dec
shl
shr
mov
or
sub
add
and
add
mov
shr
mov
add
nop
add
xchg
nop
nop
nop
nop
nop
jmp
jns
movzwl
jmp
push
push
push
push
push
push
add
add
mov
add
push
pop
nop
nop
nop
nop
nop
add
mov
push
mov
pushl
mov
call
nop
mov
mov
add
xchg
add
xchg
shl
mov
rol
mov
nop
nop
nop
nop
nop
test
jmp
push
push
push
ja
incl
cmpl
xchg
jne
nop
nop
nop
nop
nop
call
push
pop
mov
xchg
xor
and
and
mov
add
mov
add
mov
nop
nop
nop
nop
nop
mov
nop
cmp
xchg
jne
nop
nop
nop
nop
nop
pushl
or
sub
pop
add
nop
nop
nop
nop
nop
nop
xor
sub
xor
sub
pop
mov
nop
inc
rol
and
and
add
add
xchg
inc
inc
or
pop
or
xor
add
add
mov
pop
leave
jmp
push
push
push
sbb
push
push
push
push
push
push
push
cmp
pop
cmp
shlb
scas
ss
push
out
fs
mov
mov
push
repnz
call
ds
jp
dec
sub
add
sarl
or
mov
hlt
sub
pop
sti
insb
and
sbb
fimull
dec
xor
ljmp
out
sub
mov
and
insl
sub
andl
int3
inc
push
popf
adc
test
pop
in
idiv
xor
filds
or
mov
sub
dec
pop
addl
jp
cmp
push
add
outsb
gs
das
ljmp
ficoms
dec
out
dec
insl
je
push
int3
clc
jg
sub
add
arpl
pop
dec
or
icebp
lret
cmp
xlat
jnp
sbb
int3
push
push
jl
cwtl
mov
std
lods
jbe
lahf
pop
jp
fsubrp
inc
dec
dec
jmp
fmuls
inc
ljmp
imul
jp
inc
call
xor
and
dec
xchg
dec
push
and
lock
sahf
aaa
inc
pop
mov
aad
dec
stos
shrb
sti
jne
add
cli
dec
push
clc
sub
sbb
fstps
cs
popa
add
sbb
xor
push
sbb
jo
shrl
add
sbb
aaa
clc
fimull
out
pop
nop
outsb
jecxz
push
sub
pop
sbb
mov
cmp
xchg
or
ss
jl
adc
outsb
nop
stos
xchg
cmp
pop
fists
js
inc
jnp
pop
push
mov
adc
shrl
jbe
cs
push
xor
cs
out
mov
in
shll
xchg
cld
ja
lods
xchg
mov
pop
mov
testb
aam
mov
mov
lret
jno
sbbl
cmpsl
push
dec
outsb
and
pop
xor
xlat
sub
mov
dec
mov
movsw
mov
pop
pop
sub
or
and
jmp
mov
repz
sub
js
popa
sbb
lea
or
dec
or
popa
fdivr
xchg
push
shr
mov
push
cmp
clc
dec
mov
sbb
in
pushf
call
lea
mov
mov
mov
int3
cli
lea
ror
fsubrs
lods
daa
pusha
pop
repz
rcrl
in
iret
cs
fdivl
int
test
outsl
xor
fsubl
jo
addr16
mov
jp
cmp
mov
popa
rcr
xchg
mov
mov
pop
out
pop
shll
fcoml
cmpsb
js
jb
es
pop
or
mov
mull
leave
ret
add
cld
lea
lret
rcrb
icebp
sub
cli
mov
inc
jno
mov
out
loop
aad
xchg
rcll
daa
adc
pop
push
fidivl
sti
fcmovnb
adc
enter
rcrb
data16
fwait
call
out
mov
dec
jno
sub
ss
mov
mov
outsl
scas
or
cmpsb
pushl
adc
mov
push
std
les
sub
shll
decb
cmp
inc
je
add
add
lock
xchg
xchg
ljmp
test
rcrl
outsl
mov
stos
adc
or
xor
adc
lock
push
mov
pop
and
lods
cmpsl
pushf
mov
push
fsubrp
testb
ret
imul
jnp
aad
out
repz
lret
xchg
scas
mov
pushl
xchg
pushf
into
lret
cld
and
fcomi
xchg
idivl
cli
lret
push
cmp
cmp
add
lcall
sbb
or
add
dec
or
stos
pop
inc
mov
aad
cmp
rcrb
cs
and
dec
jg
ljmp
jns
hlt
xor
ds
shl
insl
pop
outsl
ret
adc
dec
mov
fdivrl
cmpb
faddl
insb
mov
xchg
mov
test
add
test
cmp
mov
mov
shr
jns
jmp
or
out
mov
or
sahf
mov
enter
popa
enter
pop
add
and
leave
rol
fsub
pop
mov
push
push
aad
adc
sub
mov
int
pop
sub
push
jg
push
cmp
cmp
pop
adc
sub
push
xor
add
movsb
push
insb
inc
pop
sarl
fcoms
arpl
or
js
and
ret
cmp
and
loope
mov
dec
dec
mov
mov
sbb
lods
cmp
or
movsl
xchg
int3
shl
sub
add
pop
adc
push
sub
mov
fst
push
mov
push
jp
mov
mov
fldl
outsb
xor
int
adc
xlat
push
adc
xor
dec
aam
div
call
jecxz
cs
pop
mov
sub
fbstp
movsb
fwait
sbb
push
push
das
sub
and
sahf
and
dec
push
shr
push
cmpb
xchg
into
xor
jnp
int
dec
scas
jg
push
cmpsl
addr16
int
jnp
or
mov
ja
add
pop
sbbl
jno
daa
push
aaa
mov
pop
lret
push
imul
or
icebp
push
fiadds
rcll
dec
cmp
js
dec
fs
sbb
sub
cltd
mov
mov
inc
fdivl
mov
mov
in
insb
stos
addl
in
jecxz
ss
out
xor
lea
insb
lods
sbb
xchg
int3
stc
xchg
in
xchg
mov
add
xor
push
filds
dec
dec
in
mov
cmp
fwait
lret
xchg
je
cmp
jbe
popl
lret
mov
sub
mov
test
adc
lock
loop
insl
sbb
adc
in
repnz
xchg
leave
stos
or
sti
filds
not
es
push
hlt
mov
push
jmp
lock
mov
cmp
and
orl
mov
popa
cmp
hlt
pop
mov
nop
jo
icebp
cli
ljmp
sbb
or
xchg
rolb
int
cwtl
mov
sbb
sub
pop
movsl
push
add
stos
add
cmp
shll
pop
stos
lods
inc
pop
gs
jae
out
outsl
sbb
cmc
inc
or
add
inc
jae
inc
andb
jmp
xor
add
rorb
hlt
pop
loope
mov
cmp
rcr
or
inc
mov
mov
add
mov
ret
ja
dec
inc
mov
xchg
xchg
adc
pop
in
pop
pop
pop
lret
mov
and
jmp
push
je
or
out
mov
push
xorb
std
ret
cs
cmpsl
fistpl
ja
sub
mov
shrl
scas
push
fidivrl
das
es
mov
xchg
ss
loopne
jmp
push
ret
xor
dec
mov
test
frstor
int
xor
clc
pop
icebp
repnz
mov
scas
das
insb
orb
enter
imul
ret
pop
inc
xchg
mov
push
test
rolb
push
pop
imul
mov
pushf
cwtl
mov
inc
cmp
les
mov
js
or
in
or
or
shrl
mov
push
test
fldt
lds
push
mov
ljmp
mov
sbb
test
dec
xor
jge
shrl
push
push
or
push
fildl
daa
add
or
pop
pushf
push
add
andl
push
push
sar
les
jno
xor
js
mov
mov
adc
lar
mov
lret
push
test
outsb
and
inc
xchg
in
push
xchg
pop
adc
add
inc
imull
inc
aam
fwait
cmp
jle
imul
and
mov
popf
dec
push
push
xchg
sbb
mov
cmp
imul
and
insb
cmp
repz
push
nop
cmpb
xchg
xor
sbb
and
jno
cmp
push
jg
call
out
pop
inc
mov
or
cmp
loopne
pop
in
popa
mov
or
push
jecxz
cmp
es
cmp
pusha
hlt
test
push
or
test
subl
jne
jle
xchg
iret
jne
mov
rcl
ja
icebp
push
adc
cld
mov
int3
adc
sub
and
jne
into
das
mov
xchg
sbb
dec
or
movb
cmp
in
int
sbb
push
pop
scas
mov
leave
test
mov
jno
negb
into
outsl
js
out
push
inc
aad
mov
clc
aas
sub
inc
inc
int3
outsb
inc
shl
or
popf
out
lcall
es
ja
adc
dec
cmc
in
cwtl
push
push
stc
loope
mov
push
imul
mov
or
xor
nop
pop
xor
mov
mov
cmp
shrb
leave
push
je
dec
sbbb
xor
cmpsl
fisttpll
sub
loopne
and
imul
out
testb
xchg
adc
call
pop
je
xor
nop
and
push
push
fwait
shl
mov
xor
rcrl
mov
mov
lods
add
fisubs
insl
xor
push
push
adc
sub
push
and
negl
iret
outsl
test
shlb
mov
dec
rorl
xchg
mov
in
insb
xchg
and
adc
jno
cmpb
es
adc
movsb
stc
cmpsb
jecxz
fimuls
pop
push
shr
aaa
push
cmp
nop
insb
xchg
stos
hlt
imull
jne
adc
inc
ss
cmp
mov
add
rolb
push
aas
jo
lods
in
into
repz
in
xchg
aam
loope
mov
jmp
jmp
hlt
xor
xor
xchg
cmpsl
push
mov
aad
push
lret
ja
gs
pop
mov
inc
mov
push
je
aam
sbb
pop
js
push
in
iret
push
sub
push
sub
mov
adc
scas
push
ljmp
xchg
cmp
stos
pop
inc
pushl
ret
sbb
push
mov
pusha
loop
call
xchg
call
sbb
lea
jns
pushf
adc
push
enter
dec
stos
test
mov
imul
pushf
bound
inc
pop
sbb
xchg
xchg
and
pop
icebp
jns
mov
pop
pushfw
sub
lods
repz
sbb
dec
add
pop
mov
repnz
test
xor
add
je
call
jno
sbb
cmp
sbb
mov
out
inc
add
jg
lret
mov
mov
je
lods
push
mov
movsl
cmp
sahf
repnz
dec
pushf
int
jo
data16
sub
int
or
sub
leave
dec
mov
or
pusha
stos
into
int3
push
iret
pop
notl
fs
cmpsb
cmp
add
mov
cmpsb
adc
cmp
testb
mov
mov
icebp
aaa
iret
sarl
push
lock
and
movswl
adc
mov
sti
dec
or
and
adc
pop
stc
dec
cmpsb
xchg
ljmp
test
push
rcrb
dec
loop
adc
add
push
scas
fimull
mov
mov
rcrb
xor
cwtl
and
inc
movsb
cmp
pusha
loope
mov
in
cmp
stos
aam
sbb
fwait
add
sub
addb
dec
xchg
inc
sub
or
push
or
and
mov
xchg
mov
or
pop
imul
and
pusha
jbe
and
cmp
loopne
xor
aam
jno
pop
mov
std
sub
xor
cmp
mov
and
ljmp
push
or
add
jl
add
icebp
mull
aaa
fldenv
jae
sar
mov
mov
in
pop
dec
inc
popf
icebp
data16
dec
ret
mov
or
mov
add
pop
pop
push
cmp
mov
pushf
push
decb
test
and
jnp
add
in
aad
xlat
lds
loope
repnz
iret
add
test
jmp
fsubrs
lahf
adc
cmp
fwait
into
sahf
out
hlt
mov
in
jbe
and
adc
mov
pop
sub
jne
mov
rcrb
lods
sub
mov
or
inc
mov
gs
jb
test
mov
shlb
or
cld
scas
xadd
cli
arpl
test
cmp
jge
popf
pop
mov
rorl
scas
lret
lret
insl
aad
jecxz
out
push
rol
movsl
and
push
mov
movsl
xor
mov
mov
or
pop
sbb
add
sahf
lods
popf
add
jl
js
inc
dec
out
cmpl
lret
ja
repz
popf
pop
xchg
and
mov
shr
jmp
bound
and
pushf
push
aaa
icebp
aam
mov
xchg
dec
inc
outsb
and
or
push
ret
lcall
ja
cmpsb
or
or
mov
pop
cmp
lds
lahf
mov
inc
cmp
movsb
lahf
ret
in
aad
push
jecxz
leave
add
icebp
jg
movsl
ds
cmpsl
push
mov
pop
pop
cmp
jecxz
xchg
jno
jb
cmp
cmp
das
push
imul
and
push
movsl
clc
stos
fstps
stos
icebp
and
daa
int3
sub
pop
adc
xlat
fldt
ja
pop
xchg
jg
rcll
fmuls
push
lret
adc
add
inc
inc
dec
sbb
insb
xchg
jb
fcomip
dec
test
ret
push
orb
add
dec
mov
cmc
stc
imull
clc
push
push
pusha
lods
int3
scas
jg
enter
jb
or
enter
mov
cmpl
mov
outsb
xorb
inc
jl
aam
dec
pushf
stc
pushf
cmpsl
mov
adc
dec
lret
fistl
xchg
mov
sbbb
js
test
sbb
out
cmpsl
xor
mov
sarb
pop
xchg
fwait
test
adc
mov
xor
push
push
insl
sbb
push
pop
out
mov
int3
mov
cltd
mov
imul
pop
orl
sbb
fstpl
adc
xor
xchg
mov
lds
xchg
into
movsl
imulb
push
movsb
int3
stc
jp
add
ss
pop
cmp
jae
push
sbb
ljmp
fildll
adc
pop
mov
xor
into
cmp
mov
adc
inc
out
mov
outsl
sbb
and
jg
or
or
and
lds
dec
adc
adc
sub
jns
jle
stos
push
rclb
pop
jne
pusha
frstor
sbb
iret
test
fidivrs
in
push
fists
ret
jno
pop
dec
add
pop
pusha
imulb
pop
gs
cmc
push
repnz
in
add
mov
dec
xchg
scas
inc
outsl
jns
repz
test
mov
push
mov
mov
movsb
loopne
out
sub
into
mov
jne
pop
ret
fstpt
negl
push
jp
cmp
push
movsl
push
outsl
std
push
out
jb,pt
fisttps
push
fisttps
xchg
sbb
fsubrl
mov
jne
and
dec
or
daa
pop
inc
mov
cmc
jecxz
xchg
push
push
mov
mov
fdivl
sub
mov
loop
outsl
cmp
push
sub
xchg
sarl
jns,pn
sub
jne
mov
loope
xorb
sub
mov
in
fwait
mov
in
add
cli
enter
or
repnz
cmp
adc
lret
sub
mov
inc
push
aam
ss
mov
push
es
aad
test
xchg
adc
mov
out
mov
add
push
lret
xchg
rcrl
sahf
movsb
in
add
inc
inc
dec
inc
mov
and
pop
mov
clc
shll
enter
mov
push
cmp
jno
add
arpl
add
or
loopne
jge
cmp
enter
push
mov
mov
push
sbb
cmp
mov
je
and
lods
cld
daa
mov
mov
cltd
xlat
fs
shlb
jge
mov
dec
cmpsl
mov
xlat
ja
dec
sahf
and
repnz
xor
dec
aas
push
lret
sahf
scas
bnd
pushf
insl
iret
sti
pop
sbb
jecxz
shl
sub
jnp
shll
dec
pop
pop
push
adc
and
xor
call
push
fildl
push
or
cli
adc
mov
xchg
fadd
cmp
enter
sub
xor
sbb
shll
jecxz
dec
loopne
popa
jge
pushf
mov
pusha
push
inc
loope
mov
mov
cmc
dec
notl
lods
roll
mov
mov
mov
cltd
test
lock
iret
xor
cmp
int
sub
lock
rcrl
jg
and
add
aam
sub
pushf
xchg
sbb
inc
inc
pop
scas
aas
jg
rcrl
inc
call
push
xor
xor
jg
xchg
shlb
cwtl
insb
movsb
mov
cs
ds
int
xor
aam
push
lahf
inc
pop
push
sub
cwtl
shlb
out
pop
aaa
push
pop
stos
es
scas
mov
ja
mov
addr16
sbbb
lds
inc
fdivp
sub
dec
mov
jle
dec
aam
repz
lods
pop
hlt
nop
sub
sahf
xchg
popf
pop
cwtl
pop
jnp
inc
aas
cmpsl
mov
mov
mov
fsubl
data16
sbb
sti
jne
cli
inc
xor
push
and
iret
push
repnz
sbb
icebp
xchg
movsb
jecxz
ja
pusha
jbe
mov
and
inc
shrl
or
dec
in
mov
xchg
out
mov
fcom
mov
aam
jbe
push
and
into
scas
sub
sub
adc
rcr
loop
popf
xlat
ja
jb
xor
cld
sub
repz
shrl
mov
out
adcl
sub
roll
mov
inc
mov
mov
in
and
and
icebp
or
xchg
imul
call
adc
mov
lods
and
lock
cmp
jl
fs
mov
sarl
insl
loop
rcr
bound
aam
lods
int
fdivrs
sarl
or
fidivl
sub
movsl
dec
or
xchg
out
pushf
xor
and
mov
xor
or
sti
roll
sahf
dec
pop
iret
mov
ret
sahf
dec
xchg
adc
add
or
fisubrs
sub
xor
mov
jecxz
dec
into
ret
popa
arpl
bnd
sub
xchg
fistl
ja
out
cmp
icebp
and
insl
lds
push
dec
lods
jg
out
out
ljmp
cmp
push
pushl
enter
insl
xchg
rol
lds
cmp
insl
push
mov
xchg
cltd
push
subl
arpl
out
pop
int
push
or
mov
insl
jns
push
jo
xchg
push
cmp
mov
mov
mov
fidivs
xchg
mov
cld
enter
mov
jo
push
mov
push
mov
nop
ljmp
pusha
push
lret
mov
mov
sti
pop
insb
leave
sarb
std
in
sbb
mov
xchg
pop
xor
out
jne
out
inc
stos
lcall
insl
or
xlat
jo
popf
xchg
or
jecxz
fnsave
in
rcrb
pop
test
push
lahf
lsl
add
loop,pn
shlb
and
jle
in
push
mov
pop
pop
lods
sbb
shlb
jle
bnd
mov
mov
jecxz
lcall
insb
xchg
rorb
dec
stos
out
into
mov
fidivs
test
pop
pop
and
pop
push
jge
xlat
fistpl
mov
push
test
scas
mov
add
filds
mov
or
loopne
inc
test
jno
cmp
cmp
adc
mov
dec
mov
scas
hlt
jo
adc
push
inc
aam
xchg
push
les
mov
mov
fistps
add
add
jae
popa
jb
sbb
ret
scas
imul
mov
jae
push
bnd
xor
sub
cwtl
jae
sbb
jne
mov
adc
sbb
fistpll
sub
pop
sbb
inc
mov
andl
push
mov
jecxz
push
sub
imul
cmp
mov
mov
sahf
mov
cltd
fincstp
mov
xchg
push
cmp
mov
xchg
mov
jp
stc
das
adc
lock
add
sub
dec
aaa
les
push
je
push
sbb
dec
add
mov
fwait
aaa
gs
jge
xchg
insl
add
je
scas
leave
sbb
or
andl
push
sub
mov
mov
movsl
pop
inc
adc
mov
mov
dec
dec
leave
test
dec
pop
add
out
mov
cmp
ds
aad
mov
and
jnp
shlb
xor
sub
sahf
sarl
out
pop
sub
cld
jecxz
pmaxub
add
inc
in
in
in
push
jecxz
out
loope
jno
jp
mov
xor
xor
dec
ja
test
subl
loopne
outsl
stc
lahf
lods
sbb
cmpsl
jnp
sbb
arpl
add
pop
lret
jae
mov
jo
sar
ret
jo
pop
or
jl
lds
fcoms
jae
test
xorb
inc
xor
or
test
sbb
jb
xchg
sub
fsubrs
add
lahf
and
call
mov
xor
cld
mov
nop
cmp
adc
popa
jb
clc
inc
mov
xchg
lret
clc
mov
sbb
mov
mov
sub
pop
out
pop
and
pop
lods
pop
repz
lods
dec
and
ja
jmp
ja
pop
aad
adc
ret
inc
fwait
jbe
mov
pop
out
pop
fistps
loop
and
mov
xchg
jne
das
ljmp
ja
fwait
cmp
mov
dec
neg
enter
and
push
or
lea
cltd
lret
lea
push
lret
bound
adc
mov
cld
stc
testb
cmp
push
push
mov
jo
or
and
jg
test
mov
push
fadd
testl
cmp
fstpl
lret
loope
fistpll
mov
add
inc
and
inc
pop
je
imul
popf
hlt
es
xor
in
push
test
sub
cmpsb
jmp
pop
js
insb
pop
fs
xorl
push
adc
sbb
nop
push
add
cmp
ljmp
xor
dec
mov
ret
jge
push
or
dec
sahf
mov
adc
fs
test
stc
ljmp
out
mov
dec
dec
dec
movsb
cmp
sbb
daa
repnz
lods
or
inc
jb
hlt
mov
fwait
pop
ss
push
push
and
loop
repz
ror
push
cmpsl
lods
jecxz
sbb
mov
push
cltd
push
lcall
ficoml
add
push
int
mov
sub
aad
mov
fstpl
sub
lods
jge
sbb
mov
adcl
fists
test
cmc
mov
inc
ficompl
mov
sbb
or
aaa
cmpsb
div
jl
mov
in
insb
test
test
or
lds
lods
cmp
in
loopne
pop
xor
add
add
mov
js
push
dec
xor
add
xor
inc
mov
and
repnz
pushf
push
pop
ret
ja
mov
xchg
mov
mov
ret
pop
cld
pop
popf
xchg
cmp
sahf
inc
out
add
mov
int3
push
cltd
push
cli
inc
push
cmp
lret
insb
and
fnstenv
rol
sbb
push
stos
dec
mov
nop
test
push
mov
adc
out
xor
adc
push
out
xchg
out
add
loope
mov
lods
ds
iret
fimuls
out
pop
sbb
loope
decl
or
mov
xchg
in
adc
pop
lret
push
pop
mov
add
xchg
imul
frstor
ret
out
jae
jno
lret
mov
jbe
inc
and
lods
xor
in
sub
or
pop
jl
dec
in
pop
lods
sub
outsl
insl
outsb
lods
idiv
sti
repz
pop
std
lcall
sbb
das
shl
inc
in
mov
mov
mov
xor
adc
sbb
lods
push
and
ds
push
dec
inc
adc
bnd
mov
inc
jbe
out
push
mov
push
mov
imul
ret
lods
sub
sub
stc
ret
negb
imul
xchg
dec
sub
sbb
jns
or
lret
sub
mov
dec
and
mov
sbb
cmp
xchg
cmc
push
negb
add
subl
adc
add
xor
fs
imul
xor
loope
add
or
or
insb
cmp
lods
imul
stc
outsb
push
inc
jb
mov
ss
add
add
cmpl
test
mov
xor
cmpsl
repz
inc
or
push
enter
daa
stos
and
ret
fsubrl
dec
mov
fldl
sub
adc
and
xor
xor
shrb
pop
rcr
shll
roll
loop
lds
add
lahf
xor
fwait
and
arpl
jmp
in
cltd
stos
lret
push
mov
inc
xor
adc
vpavgw
push
xchg
cmp
jp
jae
dec
adc
addr16
decb
and
addl
and
sbb
aaa
loope
pop
cltd
popa
pop
pushf
push
push
jge
inc
pop
cmovg
fwait
adc
aaa
sbb
add
outsb
imul
aaa
lcall
push
mov
sbb
js
fwait
cltd
imul
popa
adc
inc
cmp
lods
sbb
mov
jbe
mov
cmp
dec
mov
dec
xor
xchg
das
push
cwtl
adc
fstl
push
add
into
cmpsl
out
dec
pop
ds
js
mov
mov
mov
outsl
in
jne
repz
push
pop
ja
fisubl
fcompl
xor
xchg
cmc
imul
pop
mov
stc
pop
and
ljmp
inc
fisubl
sub
test
push
adc
mov
jo
into
outsb
inc
push
sub
lea
mov
leave
sti
jecxz
fldl
scas
addr16
jecxz
mov
inc
mov
xchg
cmpsb
mov
mov
cs
jecxz
imul
xchg
xchg
ljmp
loopne
insb
cli
rcl
adc
push
lret
fnstsw
test
mov
addr16
pop
mov
ret
mov
loop
push
popf
int3
ss
cmp
lock
outsl
daa
dec
cmpsb
cmpsb
popf
pop
pop
inc
roll
and
mov
repz
dec
xor
shlb
lahf
sbb
ret
int3
jbe
fists
fdivr
rcll
out
push
dec
lahf
mov
or
fcomi
leave
adc
xchg
repnz
in
test
insb
pushf
jns
sbb
xor
jecxz
dec
sub
adcl
jae
hlt
scas
movsb
mov
ret
lret
lods
pop
inc
fcmovnb
mov
out
adc
rcrl
ret
stc
mov
jo
or
ds
inc
fcmovu
cld
xchg
and
cmp
ja
pop
jecxz
mov
push
subl
lahf
aas
inc
add
add
aaa
sbb
add
jle
mov
push
fisttpll
push
dec
lret
inc
repz
rcr
add
xchg
movsb
add
mov
in
je
pop
addr16
int3
xorb
sar
aaa
sub
mov
lods
mov
cmp
clc
mov
inc
fbstp
out
mov
or
push
sbb
mov
shlb
mov
aad
rorl
or
enter
pop
test
sub
or
negl
mov
arpl
lcall
lret
mov
and
xor
lea
mov
mov
push
inc
lret
into
mov
je
insl
leave
fiaddl
outsl
push
pop
aas
sub
fdivrp
add
neg
xor
loope
jecxz
mov
cli
pop
push
cwtl
ret
sub
mov
das
push
jle
out
jecxz
push
out
data16
mov
pop
stos
movsl
jge
xchg
in
push
inc
arpl
pop
pop
add
jp
fsubrs
and
pusha
inc
outsl
out
push
sar
fadds
xor
or
lock
mov
lods
dec
add
js
pop
jne
jmp
aam
adc
stc
xor
shll
loopne
jge
test
test
inc
out
lods
and
inc
and
inc
cltd
sbb
xchg
out
cld
daa
sub
adc
inc
repz
pop
sbb
pushf
pop
popa
test
xchg
dec
scas
addb
outsb
loopne
pop
out
inc
dec
and
inc
dec
dec
daa
and
mov
cwtl
fmuls
das
or
sahf
xor
pop
mov
inc
cwtl
mov
mov
add
loope
jp
mov
pop
rcll
je
lret
scas
incb
repz
stc
dec
push
jge
xlat
cltd
lcall
rcr
fcomi
addr16
cmp
mov
test
push
or
inc
call
adc
jno
test
inc
mov
hlt
jb
sub
xchg
jecxz
leave
mov
rcl
icebp
add
les
in
test
xor
stos
xchg
mov
cmpsb
mov
movl
hlt
faddl
data16
add
scas
xchg
and
dec
add
stos
cmp
pop
or
or
cmc
arpl
ret
sub
jae
movsb
mov
xchg
dec
push
dec
lea
dec
xor
sub
mov
ror
out
sbb
scas
xor
out
add
cmpsb
dec
test
push
pmulhuw
movsb
out
xor
or
push
push
rolb
adc
mov
movsl
mov
mov
xor
scas
repz
js
xorl
dec
jmp
xchg
loopne
mov
mov
lret
jmp
jmp
cld
mov
daa
in
imull
call
addr16
cmc
adc
cmp
repnz
nop
dec
cmpsb
adc
addb
add
loop
xor
scas
jl
lods
jno
popa
xchg
dec
jo
addl
stc
adc
in
out
push
lret
push
rcr
inc
mov
add
cmc
gs
pop
sub
dec
sbb
fxch
mov
lcall
mov
and
add
fsubr
or
dec
adc
mov
rolb
jbe
sbb
pop
out
add
cli
mov
scas
dec
shld
dec
inc
cmp
jb
bound
loope
dec
loope
xchg
xchg
dec
xchg
addr16
mov
mov
fwait
cmp
xchg
faddp
shrb
jb
jmp
jp
mov
loopne
fwait
xchg
or
dec
sub
imul
cs
jmp
je
ret
fcoml
add
std
dec
jnp
lods
xorl
jl
aaa
repz
cmp
pop
pop
imul
stc
fldl2e
std
adc
and
ja
popl
imul
testl
push
enter
cmp
jg
adc
mov
mov
fistpl
push
lods
push
add
iret
js
cpuid
adc
sub
out
mov
jns
lret
adc
scas
cmp
test
sub
ret
mov
cmp
lock
adc
dec
test
les
cltd
cld
push
dec
loop
dec
mov
js
cmp
xor
pop
mov
repnz
lret
ret
and
cmp
pop
mov
jmp
jecxz
movsb
sbb
pop
gs
and
or
add
mov
mov
jo
push
out
mov
std
and
or
adcb
inc
dec
fildl
loop
jg
jnp
xchg
data16
jno
jb
mov
push
nop
mov
mov
mov
xchg
cmpsb
and
stos
mov
ret
cmpsl
test
std
xchg
cmp
jno
cwtl
je
push
cli
es
pop
fbstp
faddl
push
sub
mov
mov
iret
push
out
popa
hlt
cwtl
cmp
movsb
jle
lods
dec
fistpl
sub
xor
jo
fwait
jo
inc
dec
mov
and
mov
imul
xor
int3
out
xchg
mov
xchg
int3
cld
test
inc
test
gs
dec
push
fadds
inc
jae
dec
stos
inc
rcl
jns
pop
mov
shlb
jne
adc
sub
lret
lods
aas
popf
xor
pop
mov
popa
enter
xor
lahf
push
push
in
cmp
call
fstpl
movsb
cltd
cs
sub
pop
mov
mov
out
imul
lret
cmp
mov
mov
mov
inc
lock
push
in
inc
adc
or
push
out
sbb
sub
shll
ret
das
add
cmpsl
inc
mov
std
ret
push
inc
adc
nop
in
adc
inc
sbb
jp
xchg
adc
jb
das
sarb
xchg
scas
pushf
pushf
cmp
mov
add
mov
or
pop
insl
pop
mov
or
add
cmp
jl
dec
push
add
jmp
cld
lahf
cmp
testl
subb
push
jae
push
lret
sbb
pop
shlb
je
cmp
iret
popa
pusha
mov
xchg
shlb
xchg
test
les
or
ds
xchg
xor
cmp
in
mov
in
push
xor
arpl
scas
mov
push
test
dec
xor
sub
pop
mov
sbb
lods
sbb
loope
jg
scas
sbb
push
insl
iret
lods
lret
pop
sahf
adc
sbb
pop
push
adc
out
push
jecxz
cwtl
idivl
mov
xor
pop
jb
dec
add
fs
ss
mov
int
push
push
notl
ret
lds
stos
popf
dec
mov
cli
les
cwtl
adc
or
scas
inc
mov
dec
adc
xor
clc
or
xchg
adc
shll
sbb
movsl
fistpl
int3
and
out
mov
dec
mov
dec
jo
sbb
lock
add
into
push
je
mov
jbe
pushf
out
dec
jmp
aaa
imul
iret
inc
inc
add
jecxz
dec
ret
leave
mov
push
adc
jl
lahf
dec
orl
push
jns
add
or
roll
adc
xchg
iret
adc
mov
idivb
stos
lods
pop
arpl
or
mov
or
popf
jecxz
jae
inc
andnps
sbb
adc
pop
push
test
or
mov
cwtl
push
fnstsw
loope
mov
mov
dec
mov
xchg
xchg
lock
insl
pop
jp
push
jl
dec
pop
push
int
inc
push
mov
push
jl
pop
popf
adc
mov
xchg
jnp
sbb
out
and
cmc
fldt
insb
ret
and
test
mov
scas
hlt
or
stos
or
fistpll
sub
mov
xchg
ret
sub
xor
pop
jp
shl
jmp
loopne
js
and
push
imul
test
mov
lea
imul
fistpl
filds
pop
add
fs
lock
mov
cld
loopne
mov
int3
mov
sub
and
icebp
lods
pusha
mov
and
add
sbb
pop
sbb
ror
cmp
mov
scas
adc
pusha
add
inc
jb
hlt
mov
and
inc
fldt
mov
int
je
pop
out
mov
or
dec
cmp
or
sbb
fisttps
neg
pop
rcll
fnstenv
sub
or
dec
add
mov
clc
pusha
iret
lods
push
lods
movsb
ja
rcll
in
mov
insb
cwtl
inc
outsl
insb
push
out
xlat
xlat
xor
fwait
or
push
push
bound
xorb
mov
push
testl
mov
adc
jae
jge
outsb
sbb
sbbl
mov
cmpl
sbb
aaa
imul
test
push
insb
lret
out
aaa
lock
adc
jg
fists
xchg
inc
jp
test
popa
or
mov
inc
jno
into
lock
mov
fs
in
jg
mov
push
jne
fsubl
or
add
sub
leave
jge
andl
cmp
scas
into
inc
or
loop
ret
mov
arpl
pop
outsl
stos
xchg
pusha
pop
sub
xchg
dec
pop
gs
into
push
and
cmp
pop
inc
shl
pop
aas
add
pusha
arpl
jle
aaa
mov
subl
lahf
test
adc
mov
hlt
pop
pop
lock
scas
repnz
lea
shrb
mov
pusha
fdivrs
xchg
and
lahf
pushf
insb
scas
dec
pop
xorb
pop
aaa
and
xor
rcrb
xchg
xlat
inc
push
mov
mov
cli
popa
push
in
shrl
sub
outsb
bnd
jl
scas
ret
pop
add
cmc
rclb
cs
daa
and
push
testb
mov
xchg
push
out
out
sbb
jecxz
sbb
enter
dec
lcallw
aad
aam
fs
outsb
adc
icebp
lds
out
sub
std
push
mov
pop
mov
add
call
test
sub
push
xor
jl
ret
xchg
sbb
mov
push
inc
cmp
mov
push
xchg
or
shll
clc
xorb
sahf
mov
and
orl
es
mov
fidivs
shlb
push
or
cmp
adc
lock
and
mov
sbb
ss
and
or
and
xchg
pusha
xor
jmp
mov
into
sub
inc
fnstenv
jae
scas
mov
mov
movsb
negl
cmp
addb
adc
push
xchg
test
or
test
xchg
adc
sbb
rcrb
adc
sub
fiaddl
mov
hlt
sbb
loop
push
mov
pop
jmp
es
dec
push
pop
push
jp
cli
sahf
js
mov
pop
lods
sub
mov
movsb
in
aas
xor
mov
lret
xchg
gs
xchg
xchg
xchg
and
jno
add
jno
into
xchg
and
aaa
lea
ss
or
leave
jecxz
adc
mov
inc
xor
jle
xchg
inc
stc
adc
ret
aas
jb
daa
sti
or
and
jp
aas
mov
ljmp
nop
push
adc
inc
ret
out
and
mov
add
repz
mov
adc
inc
cmp
push
jne
jg
mov
std
jns
sub
jb
cmp
xor
out
inc
rclb
cmp
jne
xchg
rep
nop
insl
dec
mov
push
adc
push
add
fdivrs
aaa
mov
push
sub
shll
mov
shrb
mov
mov
test
aas
movsl
ret
addr16
jl
and
stos
in
ljmp
lods
jnp
mov
xchg
mov
ret
call
repz
clc
sti
dec
in
push
lods
sahf
mov
push
xchg
mov
in
andnps
add
mov
cld
scas
push
pop
js
mov
rcrl
adc
mov
mov
jae
aam
xchg
aam
fmull
ret
daa
imul
mov
jmp
jp
jecxz
add
addb
jae
or
dec
push
mov
push
mov
fisubrs
addr16
stc
in
xlat
and
adc
sub
pushf
sahf
mov
vcvtdq2pd
xor
insl
imul
mov
add
mov
jb,pt
xor
mov
mov
rcll
fbld
in
nop
push
pop
adc
scas
push
pop
sbb
mov
ss
in
hlt
push
push
fsubl
jb
fildl
jbe
push
xchg
push
dec
xchg
repnz
arpl
lds
xchg
dec
xchg
sbb
cmc
pop
cmpb
je
pop
xchg
lods
std
inc
in
sub
cmpb
es
or
mov
mov
jae
fcmovbe
es
adc
pop
in
bound
push
jns
mov
or
outsl
pop
fs
enter
popa
or
mov
lret
inc
inc
and
inc
or
lock
add
dec
push
repz
jb
inc
add
xor
inc
rcrb
and
mov
push
xorb
mov
in
aam
loop
repz
lods
jl
dec
call
push
insl
and
testl
pop
cwtl
add
psubsb
inc
mov
jnp
aaa
pushf
pop
or
and
xchg
pop
rcl
pop
pushf
mov
xorl
pop
roll
xchg
pop
mov
sub
outsb
orl
cmc
outsb
test
sbb
pop
push
or
mov
pop
lahf
mov
xchg
push
cmp
fildl
insb
mov
inc
dec
outsl
jns
cmpsb
dec
adc
aad
or
leave
ljmp
popf
sahf
cmp
rolb
mov
dec
sbb
mov
xor
cwtl
ds
sub
jle
rol
aam
pop
mov
ja
and
and
aad
pop
xor
enter
outsb
mov
test
shrb
xor
in
add
movsb
loopne
insb
xor
in
push
inc
je
outsl
dec
icebp
mov
add
fnstcw
mov
or
adc
mov
out
cmpsl
lds
mov
cmpsb
mov
add
fidivrs
cmpsb
cmp
or
push
cltd
mov
push
outsb
pop
or
xchg
int3
pop
or
testb
out
lock
add
in
insl
sbb
mov
fprem
jbe
mov
outsb
movsb
pop
jg
xchg
pop
or
addl
ret
loopne
cwtl
mov
cmp
andl
dec
jp
dec
popf
mov
cmp
icebp
mov
dec
inc
or
jnp
dec
test
popa
or
push
xor
dec
popa
jmp
aad
mov
and
or
sub
fbld
mov
and
pop
cmp
cmpsl
push
cmpsb
fcmovbe
push
add
mov
xor
les
cmp
mov
mov
sub
push
or
push
xchg
stos
adc
stos
and
sbb
popf
mov
and
les
hlt
or
or
mov
cmpsb
and
inc
int
fsubl
lret
popa
std
loopne
mov
ret
pop
sbb
mov
lods
xor
in
std
mov
insl
xor
jg
sub
mov
sti
push
jmp
in
ret
fiaddl
insb
sbb
sbb
mov
decb
shll
lock
xchg
in
comiss
arpl
xchg
sti
gs
icebp
addr16
mov
movsl
mov
add
or
daa
rcl
test
mov
and
mov
inc
adc
pop
mov
test
push
in
pop
mov
ja
jg
pop
les
fstl
mov
fsts
jbe
add
stos
ds
mov
or
push
in
inc
mov
enter
pop
lahf
outsb
dec
loop
push
sbb
clc
xchg
loopne
jne
pop
ss
cmpsl
faddl
orw
repz
add
sbb
pop
xlat
lods
cmp
sbb
sub
adc
js
repnz
and
je
pop
das
mov
cmc
pop
vpackssdw
insb
cwtl
test
mov
lahf
gs
pushf
pop
outsb
aaa
dec
xchg
cmpsl
xor
in
push
nop
lahf
inc
inc
adc
inc
repz
pop
loop
pop
cs
stos
fnstenv
mov
ljmp
mov
out
jb
sub
add
cmp
cmp
xchg
dec
stos
jecxz
gs
mov
or
xlat
sub
jmp
data16
dec
dec
addl
or
jl
and
sahf
inc
xor
addr16
bndstx
or
vandnps
jge
cmp
lret
lods
dec
push
cld
xor
push
adc
shrb
test
pushf
mov
and
mov
push
cmp
loop
js
aad
shl
or
jns
xorl
or
pop
in
add
in
dec
loopne
sbbl
push
hlt
push
sub
inc
mov
mov
aas
cld
sub
jge
jae
cmpsb
and
adc
rolb
leave
jnp
mov
xchg
cmp
xchg
icebp
add
jmp
mov
pop
int
aam
dec
mov
popf
sbb
lret
push
or
fsubs
adc
ljmp
pop
xlat
loopne
adc
icebp
inc
inc
mov
sub
add
jns
dec
inc
mov
gs
mov
pop
mov
dec
pop
push
sub
mov
xchg
pushf
dec
or
out
sub
or
in
mov
int
fwait
lds
aam
jg
jo
lahf
jmp
cmp
shll
jecxz
sbb
test
inc
pop
mov
sbb
cmp
push
loop
mov
pop
or
cmp
push
dec
xor
cmp
mov
mov
sti
jns
and
je
shll
inc
and
sub
mov
lcall
test
adc
cmp
push
data16
and
push
xor
ljmp
test
jmp
filds
lea
lret
sbb
and
xchg
jno
in
pop
lods
mov
mov
xor
pop
mov
mov
push
inc
inc
push
xor
xchg
les
adc
dec
pusha
sti
mov
test
sbb
aas
add
mov
push
add
in
ret
cltd
mov
cmpsl
xor
mov
dec
and
xchg
xor
leave
xchg
fst
adc
push
mov
push
jo
dec
sahf
mov
inc
dec
pushf
inc
push
xchg
add
gs
push
cld
mov
sbb
and
inc
out
push
push
inc
sbb
out
clc
mov
adc
xchg
call
mov
pop
jle
mov
out
cmc
scas
jp
pop
lret
pop
out
adc
mov
jae
push
int
mov
stc
scas
lret
and
push
imul
ljmp
add
in
mov
and
cltd
jo
jb
push
popa
inc
scas
dec
out
adc
rorb
mov
test
xor
in
jl
pop
lret
in
add
mov
mov
cmp
dec
pop
push
clc
sub
cli
mov
les
addr16
xor
mov
and
add
aad
inc
push
xchg
xchg
and
xchg
inc
xor
sbb
inc
jno
sbb
hlt
into
mov
mov
dec
rorl
insl
add
jno
mov
int3
repnz
xor
ret
repz
xor
int3
subb
add
cmp
mov
push
fidivrl
mov
cmc
imul
pop
inc
mov
mov
jne
lea
andb
inc
inc
insb
outsb
pushfw
stc
mov
fwait
pop
fwait
and
jl
negb
daa
shlb
repz
inc
dec
mov
mov
nop
jae
sub
adc
xchg
xor
dec
sub
pushf
mov
jb
mov
addr16
push
jo
inc
dec
shrd
xor
sbb
dec
gs
out
xor
pop
xchg
sbb
adc
cmp
fisttpl
call
mov
addr16
pop
pop
sbb
out
lcall
test
pop
xchg
in
into
popa
sbb
pop
mov
fwait
jge
jno
push
arpl
mov
andl
sub
mov
xchg
lret
movsb
push
xchg
sahf
cltd
ficoml
push
inc
les
adc
xor
lcall
rcll
adc
daa
adc
jecxz
jmp
xchg
jge
or
outsl
xor
shr
mov
pop
dec
push
pop
push
push
or
xchg
mov
push
ds
insb
popa
jl
cwtl
dec
cmpsb
and
jg
lret
test
adc
push
roll
cld
pop
mov
or
ss
stos
test
xchg
cmp
stos
adcb
lahf
pop
push
mov
mov
outsl
or
or
nop
lret
cmpsb
mov
mov
sbb
lcall
das
fadds
add
movsl
cs
das
cmp
xchg
inc
mov
gs
pushf
call
jne
inc
aam
rcll
popa
pop
rol
push
push
and
test
cmpsl
andl
fidivrl
icebp
mov
cmp
shrb
add
addr16
inc
repz
ljmp
cmp
dec
sbb
dec
adc
gs
scas
sub
mov
faddp
adc
push
cwtl
fsubrs
clc
xchg
or
shll
fwait
insl
xchg
cmp
dec
leave
aam
cmp
loop
and
pop
and
push
or
dec
enter
cmpsb
mov
dec
pop
pop
or
or
stos
pop
movsb
mov
cmp
lahf
stos
or
or
adc
fcmovnbe
shlb
add
inc
les
nop
insb
int3
into
leave
dec
push
outsl
adc
xor
les
add
mov
pop
xchg
sbb
sub
jg
push
mov
sbb
mov
roll
jp
jmp
cmp
out
add
rcrl
ja
addr16
lea
mov
loop
push
pop
and
pusha
test
lods
adc
imul
or
out
sub
jp
fsubrs
or
daa
in
jp
mov
add
les
cmp
outsl
shll
push
xchg
push
push
pop
jae
inc
xlat
test
stos
andl
clc
adcl
fwait
js
ret
notb
enter
pop
js
inc
xor
mov
scas
pusha
inc
push
adc
movsl
jne
adc
sub
cld
mov
mov
dec
mov
or
jl
out
push
lods
das
std
mov
sbb
push
mov
xor
fidivs
and
or
enter
or
loopne
fdivrs
dec
sub
hlt
mov
popa
jae
push
inc
add
inc
test
and
sub
in
mov
ret
pop
int
out
jns
push
enter
add
insb
aad
data16
in
test
xchg
inc
and
insl
pop
fs
inc
inc
fiaddl
pop
stos
mov
icebp
daa
lea
ja
jb
and
mov
inc
add
movb
and
inc
outsl
data16
and
pop
sbb
jl
mov
aad
loop
cmp
fwait
cmpsb
cld
lahf
jecxz
lea
repnz
test
mov
or
xchg
outsl
mov
test
cmp
jbe
daa
cmpsl
pop
in
mov
xchg
add
sub
or
cltd
jle
adcb
js
pop
xchg
frstor
xchg
sbb
fistps
sub
adc
mov
fmuls
or
lcall
adc
mov
pop
and
push
mov
hlt
stc
xchg
push
sub
sub
sub
cli
push
mov
push
repnz
bound
aam
leave
xlat
mov
addb
add
cmp
xchg
cmp
in
scas
lods
dec
add
imul
inc
add
and
and
push
mov
xchg
sbb
mov
cli
jno
je
mov
mov
loope
call
rorb
pop
and
lea
nop
sub
adc
cs
mov
sti
and
pop
and
shrb
cmp
pop
adc
dec
negb
outsb
imul
jbe
mov
xchg
or
subl
push
or
xchg
shlb
cmp
push
imul
sahf
sbb
pop
xchg
cmc
lret
or
pop
loop
and
lea
ljmp
mov
leave
sub
sti
jo
add
loope
mov
jmp
jb
test
sbb
mov
dec
cmp
mov
test
mov
aas
hlt
roll
mov
push
shlb
jne
ficomps
pop
repnz
sub
adc
cwtl
stos
mov
push
pop
mov
pop
cmp
ljmp
repnz
or
xchg
jne
int
repnz
xlat
mov
xchg
adc
pop
int3
scas
jae
inc
and
add
insb
js
lret
jnp
in
mov
jns
add
mov
frstor
inc
jge
jb
cs
es
mov
inc
fsubs
add
in
jo
movsb
les
fs
jg
sub
and
jl
jmp
mov
jmp
lahf
leave
cs
xlat
xor
cmp
fmuls
jg
out
iret
cmp
movsl
in
xchg
push
out
lret
rorb
xor
les
adc
jno
push
dec
nop
pop
sbb
dec
fstpt
in
aad
jae
sub
loopne
cltd
push
addr16
lods
repnz
jecxz
movsb
push
dec
pop
test
fcoms
add
mov
jbe
subb
aas
and
push
jae
outsl
or
pop
data16
sbb
push
insb
sahf
jge
mov
andl
dec
mov
pop
cli
xchg
mov
loope
pop
adc
std
or
and
push
lods
push
xchg
enter
dec
mov
mov
add
iret
lcall
fs
movsl
cmp
push
fs
mov
pop
into
in
mov
xchg
jmp
lock
enter
fcompl
jecxz
adcb
sub
aas
in
cmc
das
iret
lret
mov
lds
seto
pop
add
jbe
push
jmp
xor
movsl
xchg
xchg
jbe
xchg
mov
lcall
sti
pop
mov
int
daa
dec
adc
push
or
outsl
jge
pop
push
pop
mov
sub
call
cmp
insl
cmp
lcall
movsb
pop
out
repnz
mov
dec
sbb
dec
cmc
mov
in
fwait
call
cli
pop
push
push
lds
sti
xchg
mov
loop
adc
inc
lock
incl
aam
cld
ret
xlat
cmp
out
mov
inc
and
pop
push
push
fisubl
xchg
imul
lds
sbbb
add
mov
mov
dec
dec
sub
and
mov
push
add
jno
pop
inc
movsl
adc
xchg
je
setg
lahf
dec
out
fsubs
out
data16
in
cmpsl
and
bound
pushf
add
les
ja
lret
push
lods
int
movb
push
popa
and
and
dec
lret
ja
cmp
jbe
mov
repz
orb
xor
cmpsl
lock
inc
xor
push
xor
pushf
sub
getsec
xchg
test
test
pop
xchg
test
push
cmp
loopne
lcall
jbe
adc
pop
orl
imul
or
sub
shl
pop
sub
lods
cltd
lods
dec
mov
mov
xor
push
adc
mov
sbb
ljmp
rorl
sbb
outsl
sbb
xor
insl
push
fisttpl
stc
lret
mov
sarl
mov
test
int3
ja
push
pushl
push
and
jge
pop
jle
imul
jo
fwait
jae
out
aas
inc
jne
cwtl
into
xor
not
or
in
mov
mov
and
insb
insl
ljmp
loop
xchg
push
and
push
cli
xchg
xchg
test
dec
loop
xor
or
jp
xorl
test
sbb
sub
mov
testl
pop
cmp
movsl
jg
xchg
jmp
ja
outsb
jns
arpl
out
xor
repnz
pop
cmpb
cwtl
clts
das
dec
or
mov
das
xchg
cmp
jmp
cs
xor
push
mov
mov
push
mov
sub
push
fldenv
sub
ja
inc
fstpl
add
or
imul
loop
add
adc
push
test
pop
add
dec
in
leave
mov
cmp
xchg
sysenter
mov
fistps
and
xchg
int
andl
sub
ljmp
xor
out
xchg
pop
or
dec
xchg
inc
test
xlat
loope
mov
push
les
sub
adc
aaa
add
add
rcrb
leave
pop
xor
jns
xchg
aam
mov
mov
outsb
sub
mov
movsl
iret
repz
arpl
jecxz
pop
jl
imul
xchg
nop
icebp
stc
pop
enter
dec
adc
sbb
outsl
imull
jecxz
dec
push
mov
inc
pop
or
push
xorl
and
add
shrl
scas
cmc
cmp
lcall
xlat
dec
incb
lahf
jne
incl
cmp
xchg
pushf
pop
xchg
lea
outsb
test
fwait
mov
data16
shll
pop
pop
xchg
xchg
jg
cmpsl
adc
push
sub
lret
jp
push
das
add
xchg
fdivr
ds
push
scas
jle
in
cmp
js
mov
mov
sbb
icebp
mov
cmp
fsts
sbb
mov
xchg
cmp
and
mov
and
mov
dec
xor
push
mov
jno
aas
xchg
aas
lock
fisttpl
jmp
sub
fistpll
call
push
push
out
scas
sarb
mov
cmpsb
mov
sbb
sub
and
xor
xlat
cmp
pushf
xchg
xor
jns
cmp
ret
pop
je
cmp
pop
push
movsl
and
lcall
cwtl
shlb
clc
jae
pop
push
int
leave
push
mov
jb
movsl
mov
and
pop
cmp
and
stos
xorl
mov
rorb
test
out
shrb
inc
mov
imul
sbb
jnp
js
pop
add
aad
test
scas
mov
inc
mov
push
stc
jge
fs
stos
and
imul
sbb
cmp
mov
sbb
adc
push
insl
or
into
out
inc
push
lods
and
bound
shrb
xlat
rcll
repnz
loopne
outsl
ljmp
pop
addr16
push
jo
mov
cli
and
sbb
aam
in
outsb
xchg
xor
dec
mov
fdivrs
ffreep
lcall
mov
in
inc
add
push
popf
cmp
pop
leave
and
xchg
adc
cwtl
ffreep
mov
jne
daa
and
stos
dec
push
insb
push
pop
repnz
das
roll
imul
sbb
inc
inc
rorb
mov
int
jecxz
enter
fistpll
pmulhw
ja
sti
xor
out
add
cmp
ljmpw
dec
adc
mov
cmp
or
push
lret
mov
cmp
popa
dec
and
mov
xchg
movsl
data16
iret
mov
push
movsb
pushl
push
sbb
shrl
int3
add
dec
dec
fcomi
cli
pop
mov
mov
in
lcall
pop
mov
sub
aas
push
and
dec
inc
nop
sbb
aad
add
popa
cli
aad
sahf
aam
xchg
cmpsl
dec
daa
dec
sbb
xor
fidivrl
push
push
testb
sub
mov
add
movsl
daa
push
lds
fstpl
stc
or
mov
mov
xor
lock
js
fucomip
sub
sbb
inc
pop
mov
pop
pop
ror
jle
xlat
iret
popa
aam
loop
shll
ss
mov
cs
dec
jmp
cmc
jle
jmp
sbb
sub
push
test
loop
rcll
pop
std
repz
lcall
xor
mulps
and
inc
push
ja
sbb
adc
and
cltd
mov
xchg
cmp
in
sub
call
cli
rorb
sarl
push
or
push
pop
loop
gs
insb
aaa
test
addr16
mov
adc
shl
scas
cmpsb
shlb
shl
jp
and
push
ret
sbb
cmpsl
mov
sbb
mov
jbe
xchg
push
sbb
cmp
sbb
fadds
mov
in
or
xlat
test
bound
dec
divb
push
int
dec
pushf
stos
pusha
inc
push
mov
movsl
test
push
mov
push
cmp
push
or
sbb
pusha
divl
in
jae
ret
mov
push
jb
jne
jg
adc
cmpb
cmp
lret
mov
pop
sub
test
sbb
cmp
add
lret
mov
rorl
lret
aas
pop
inc
cs
lods
loop
xor
pop
or
jne
mov
xchg
inc
mov
cltd
cmpsl
mov
ret
cmpsb
int
jns
shlb
xor
jo
pusha
push
nop
push
sbb
insl
jo
lahf
fcmovnb
or
mov
push
outsb
and
xchg
insl
aaa
mulb
lret
pop
inc
imul
loopne,pt
lahf
fwait
add
aaa
sbb
mov
std
mov
iret
xchg
loopne
ljmp
mov
push
mov
lds
jns
cmpl
stos
lods
push
fadd
mov
hlt
insb
mov
cmp
daa
scas
jnp,pn
lds
xor
pop
int
cmc
xlat
stc
pop
stos
test
jno
pop
sub
jmp
int
adc
aam
stc
mov
loope
inc
icebp
lods
fwait
cld
jmp
cwtl
mov
rcr
pop
add
jl
test
int3
push
mov
or
shlb
insl
xor
lar
xor
xchg
sbb
iret
xor
and
sub
dec
mov
mov
enter
mov
mov
mov
cmp
cmpsb
push
leave
das
mov
out
jge
add
clc
dec
cmpsb
fwait
push
fistpll
pop
jp
dec
push
ret
stc
mov
xchg
sbb
fmul
addr16
sub
fcmovu
pusha
ds
sbb
icebp
adc
mov
icebp
jnp
inc
sbb
xor
mov
cmp
dec
xor
sbb
int
cmp
shl
dec
insl
out
mov
pop
xorb
shll
call
xor
push
iret
add
filds
bound
leave
lds
out
mov
and
xchg
aaa
arpl
mov
xor
jg
in
shll
sub
bound
js
sub
test
fnstcw
out
test
jo
sbbb
sbb
xchg
xor
xchg
push
shrl
mov
in
inc
inc
jbe
add
push
mov
cmpsl
xor
sbbl
sbb
test
sub
mov
dec
out
fcoml
addr16
push
divl
outsb
inc
mov
imul
inc
jmp
loope
aaa
dec
fistpll
ja
in
pop
lret
pusha
mov
push
push
sbb
or
jns
cmp
iret
mov
jno
jne
iret
push
rcr
xor
std
jmp
test
push
dec
dec
pop
jmp
ja
sahf
lahf
fcompl
shl
loopne
fimuls
js
mov
es
or
sub
sarb
mov
jecxz
xchg
adc
hlt
add
cmpsl
xchg
xor
les
cmc
lret
sbb
xor
test
adc
nop
and
ds
xchg
dec
dec
adcl
mov
add
aad
inc
fsts
mov
cmpb
xchg
sbb
cmp
iret
sub
mov
shll
sbb
inc
bound
jo
cltd
or
fldcw
pushl
push
call
push
sub
xchg
in
xor
ret
xchg
push
sub
push
push
loope
xor
imul
das
mov
bndstx
jbe
sbb
inc
push
loop
dec
push
cmpsb
scas
pop
int
xor
mov
add
shrl
sahf
mov
icebp
sub
jecxz
sub
imul
rolb
jae
lds
insl
cmp
mov
mov
insb
and
xchg
dec
hlt
inc
xor
adc
iret
into
sub
adc
ror
das
cld
jnp
pop
fucom
movsb
aaa
loop
dec
adc
sub
jmp
imul
mov
mov
push
cwtl
dec
inc
ret
jmp
jb
mov
jnp
cmp
rcrl
mov
loopne
jne
ficomps
pop
hlt
scas
pop
mov
xchg
push
js
and
push
sbb
dec
push
sbb
aad
lcall
ret
test
fcomps
pop
or
aas
cltd
outsb
adc
setns
mov
lahf
mov
dec
pop
loop
mov
lahf
fwait
inc
or
push
inc
jge
jge
imul
mov
pop
cltd
or
sbb
cmpsl
in
and
jne
pop
or
xchg
movsl
fstp
jl
loopne
rcl
push
dec
test
mov
out
jmp
aaa
lods
jbe
popa
jmp
cmp
mov
jb
imul
adc
dec
jle
scas
xchg
pop
loopne
xor
pop
cwtl
xchg
je
popa
loope
ja
mov
jmp
lcall
lret
fcmovb
xlat
mov
xor
cmp
push
or
test
aaa
xchg
pop
andl
mov
out
add
pop
hlt
mov
pop
and
jecxz
push
stc
shrl
pusha
cwtl
test
test
addr16
jns
dec
pop
lcall
jnp
sub
push
dec
clc
adc
xor
xchg
mov
jo
sbb
mov
imul
fdivrl
imul
pop
adc
repnz
adc
push
stos
sarl
mov
out
cli
in
repnz
sub
ljmp
call
pop
dec
in
dec
rep
roll
push
adc
and
sub
jae
fmuls
push
add
dec
je
ret
in
dec
lret
arpl
inc
jmp
imul
imull
xorb
cmc
aaa
lret
fldcw
jo
pop
test
mov
xchg
pop
enter
xor
stos
push
or
inc
and
loope
in
data16
fsubl
mov
inc
stc
cmp
adc
xor
jecxz
push
ret
inc
ret
mov
nop
xchg
inc
les
sbb
fwait
mov
ds
or
repz
mov
mov
ret
push
jecxz
or
fcmovbe
cmpsl
jnp
out
or
xchg
mov
aaa
fdivrs
daa
inc
jb,pn
add
xor
repz
pop
or
hlt
adcb
insl
arpl
mov
clc
outsl
cmp
jmp
test
in
xchg
scas
jns
mov
jnp
fxch
fsubr
lods
xor
mov
cltd
mov
pop
fisubl
cmp
inc
jmp
xchg
push
push
stos
lret
in
andl
imul
in
aas
mov
shrl
jecxz
sub
and
clc
mov
xlat
sub
xor
sbb
fidivs
mov
or
and
push
hlt
inc
out
stos
sahf
sub
ja
lods
scas
push
ds
bound
js
cmp
leave
adc
clc
ret
aad
adc
mov
iret
jb
outsl
hlt
ja
lods
imul
push
ds
repnz
jle
stos
mov
mov
or
pop
fucomip
int
pusha
aad
sub
inc
add
jno
mov
inc
fistpl
cmpsl
out
lds
repz
dec
dec
mov
sbb
add
xor
mov
sti
fwait
dec
mov
in
add
popa
imul
lcall
sub
jg
dec
inc
sbb
cwtl
sub
pushf
mov
pusha
sti
out
sti
ljmp
sub
jns
movsb
mov
or
insl
enter
addb
inc
cmp
stc
arpl
cli
jge
ds
sub
cli
pop
jns
mov
inc
mov
and
sub
jg
mov
or
fists
addb
daa
in
pop
jb
inc
jmp
xchg
xor
adc
int3
xor
imul
out
pop
jg
inc
sbb
xor
lret
jno
popf
jle
cmp
lea
xor
or
add
adc
jne
adc
inc
mov
inc
xchg
stc
mov
in
pusha
clc
push
push
outsl
addr16
or
sbb
dec
sbb
xor
lods
pop
shlb
mov
cmp
sub
imulb
imul
pop
lods
cmpsl
test
mov
jb
xchg
js
mov
mov
inc
inc
testl
leave
or
mov
sub
jecxz
loope
dec
sbb
adc
shrl
les
movb
out
pop
mov
pop
dec
movsb
xchg
mov
mov
mov
mov
fstpl
jae
push
hlt
add
sub
jbe
add
fisttpl
aaa
or
dec
fwait
jle
mov
pop
and
mov
lret
ds
int
jne
ds
sub
ss
sub
mov
pop
int3
push
mov
pop
stc
mov
shlb
cli
stc
xchg
jae
adc
dec
les
rcll
arpl
call
jle
xchg
in
pop
les
cli
into
sub
loop
lock
scas
movsl
fistpl
test
adc
data16
test
call
adc
cmp
lea
mov
repz
ret
push
push
mov
shll
sbb
scas
movsb
mov
idivl
mov
movsb
mov
movsb
prefetch
cmpb
sbb
test
rol
jge
xchg
mov
inc
sub
lds
adc
daa
xor
addr16
repnz
fcmovnb
movsb
ror
mov
push
cmpps
pop
gs
sub
imul
in
cmc
popa
mov
sub
sbb
std
fmul
lods
cmp
imulb
mov
rol
pop
push
pop
xchg
out
lea
dec
shlb
or
divb
dec
scas
mov
mov
push
cmpsl
xlat
mov
pop
roll
enter
jae
xor
dec
jne
stos
lock
push
push
fbstp
mov
lock
xchg
cld
push
roll
cmp
addr16
push
das
inc
add
xor
repnz
cmp
xor
pop
je
scas
push
subb
seta
pop
movsb
cmpsl
cli
dec
inc
addl
xchg
adc
je
ljmp
aad
cmpsb
dec
gs
repz
mov
addr16
loop
jmp
sub
jmp
cld
outsl
push
inc
sbb
gs
and
and
in
pop
out
sbb
mov
push
pop
clc
movsb
sbb
xor
fistpl
ret
sub
enter
adc
push
sub
cmp
ret
mov
jle
inc
cmc
popa
push
pop
fcmovnu
aas
outsb
push
cmp
xorb
dec
dec
loop
xor
ss
lea
inc
or
negb
or
cmp
clc
aaa
xchg
mov
pop
and
stos
push
mov
shll
leave
and
and
gs
mov
shlb
out
push
mov
pop
push
arpl
sbb
push
sub
mov
lds
enter
mov
imul
dec
mov
out
or
insb
push
push
push
push
loop
ljmp
data16
popf
cmp
testl
jmp
clc
push
jecxz
push
sti
aam
and
scas
or
daa
ja
mov
inc
loope
inc
loope
popa
jl
rcl
and
dec
or
add
dec
and
jecxz
mov
sti
dec
repz
js
insl
add
or
push
loopne
sbb
jns
mov
aaa
and
cmp
sub
icebp
fiadds
lods
dec
mov
inc
stc
dec
sub
sub
out
cmp
leave
lcall
jnp,pt
shlb
dec
inc
jb
mov
sub
dec
add
push
push
in
fdivr
test
or
adc
out
in
arpl
stos
lock
pusha
sbb
pop
rol
test
popa
imul
mov
fidivl
mov
jle
jbe
insb
add
mov
jmp
add
sti
pushf
inc
push
mov
adc
fs
es
fwait
pop
enter
push
dec
inc
cli
pop
ficomps
adc
stc
lock
out
dec
sub
cli
in
inc
sbb
xor
inc
mov
insl
xor
push
mov
lcall
mov
cld
cmp
pop
add
adc
sub
fdivrs
pop
jno
pop
add
fisttpll
sub
push
fmull
loope
into
stos
stos
pop
mov
mov
ljmp
and
orb
push
pop
and
cmpsb
loopne
push
dec
daa
mov
push
jo
lret
arpl
adc
jge
adc
push
pop
sbb
adc
loop
movsb
dec
xchg
sub
arpl
push
lds
cs
fst
xor
adc
cmovns
shll
add
fs
test
insb
cwtl
mov
test
jp
sub
lea
es
push
gs
int
push
stc
xor
data16
pop
bound
aad
out
add
sbb
and
pop
out
inc
mov
popa
cmp
js
cltd
mov
mov
mov
mov
subb
out
dec
mov
adc
movl
sahf
sub
lahf
jmp
cltd
push
jb
push
stos
test
mov
push
mov
inc
fistps
nop
in
push
push
or
sub
test
sub
enter
mov
mov
iret
push
mov
scas
dec
pop
mov
mov
sti
scas
push
mov
cmp
outsb
and
inc
adc
aas
sub
or
in
dec
orl
mov
clc
gs
jnp
lds
adc
cmp
dec
aas
mov
sbb
cmpsb
cmpsl
adc
mov
jae
into
loope
scas
adc
jecxz
and
hlt
fs
fnsave
divb
add
sub
push
lds
mov
clc
jle
es
out
incb
xor
fldt
cmc
dec
testl
mov
rcrl
mov
lods
addb
mov
test
movsb
push
ffree
pop
push
dec
mov
test
mov
dec
sbb
sbb
mov
sti
and
cmp
add
cs
cltd
jnp
and
pop
xor
lcall
adc
out
pop
or
or
sub
sub
mov
pop
stos
inc
mov
ret
or
call
sahf
and
popf
xor
sub
std
aad
in
fldl
and
or
add
pop
lret
scas
or
and
inc
popa
test
mov
clc
inc
cmp
jle
ljmp
push
and
fs
add
push
iret
mov
subb
mov
or
cmp
or
aaa
and
or
dec
xor
mull
push
scas
adc
aad
xchg
xchg
or
ror
movsl
lret
imull
jge
jecxz
outsl
or
cmp
je
pop
lods
cmp
lock
out
add
mov
adc
outsb
in
pop
shl
mov
les
lea
lods
push
scas
add
jns
sbb
shlb
mov
pop
xchg
jns
inc
bound
and
popa
pusha
ficompl
lret
push
and
sar
cs
and
les
jg
sub
sbb
lods
test
or
inc
add
mov
in
dec
jne
or
sti
std
int3
mov
jno
std
and
jmp
mov
scas
jnp
stos
sbb
popa
mov
inc
popf
subb
inc
dec
stc
push
adc
mov
cmc
sub
lods
xor
push
cmp
adc
adc
rcrl
sub
js
sbb
pop
lock
dec
jb
lahf
repnz
movsb
dec
mov
aam
aaa
movsb
mov
daa
and
lret
mov
or
jae
pop
rcll
push
mov
sub
xchg
adc
lods
pusha
loopne
shlb
push
test
jge
lods
sbb
push
add
popf
nop
dec
jbe
sbb
dec
loop
fcom
mov
pop
jmp
xor
fnstenv
push
mov
fisttps
or
xchg
jp
pop
push
fcmovb
and
push
cmpsb
push
hlt
inc
lds
sub
les
mov
push
inc
or
pop
push
inc
ret
fwait
or
cwtl
outsb
outsl
jnp
test
fwait
roll
iret
mov
cmp
js
xchg
mov
movb
adc
adc
mov
dec
mov
pop
aas
fwait
pop
lods
and
or
vaddsd
andb
imul
decb
adc
fwait
ds
cmp
dec
je
mov
inc
testl
idivl
mov
repz
xchg
push
jne
jp
mov
jecxz
fsts
adc
and
lret
shl
lea
cmpsb
cmp
pop
inc
jno
and
mov
dec
xlat
ss
int
rcl
xchg
or
pop
ret
or
fistl
mov
js
cmp
and
jbe
adc
xor
and
xor
push
xor
dec
outsl
scas
sbb
ret
ficompl
mov
cmp
and
xchg
adc
xor
jg
adc
mov
test
int3
inc
xor
cmp
out
dec
pop
test
loop
and
inc
pop
in
cmpsl
rorb
inc
stc
frstor
fnstenv
out
mov
in
insl
icebp
mov
or
lret
pop
adc
mov
mov
daa
sbb
fisubrl
rol
sbb
popf
popf
testl
loope
add
sbb
or
sub
in
sbb
lcall
cmpsl
lret
testb
adc
push
frstor
pusha
out
cmp
cmp
test
or
xchg
aad
ret
sbb
add
xchg
fidivl
xor
lods
mov
cmp
daa
andb
in
imull
test
pop
lahf
movb
mov
adc
dec
push
sbb
rolb
scas
sub
das
aas
push
hlt
sub
or
jnp
push
and
push
push
mov
lods
lcall
pop
jns
mulb
dec
or
inc
icebp
arpl
lcall
fidivs
jnp
adc
push
mov
or
mov
pop
cmpl
data16
pop
cmp
dec
and
fcmovnb
inc
insb
xchg
pushf
cmp
andl
lret
xchg
jno
push
lock
iret
mov
adc
dec
jle
xchg
mov
loope
push
out
movsb
xor
adc
pop
testb
cmpsb
inc
scas
xchg
pop
mov
mov
lds
mov
add
cmp
cli
mov
and
test
fdiv
call
cs
fisubl
push
gs
rcrl
lahf
or
xlat
cwtl
xchg
push
and
dec
ret
loopne
push
ljmp
add
dec
sbb
jo
adc
out
sti
fidivrs
lret
int
outsl
push
sbb
andl
and
fwait
xchg
sbb
shl
xor
adc
dec
xor
test
daa
sub
dec
xchg
daa
and
cmp
mov
stos
je
mov
jb
in
test
out
out
popa
mov
adc
mov
daa
repnz
imul
fstps
imul
fstps
push
pop
fsubrs
in
push
lods
mov
mov
out
fiadds
jl
ficoms
xchg
mov
out
int
push
sub
fisubrs
push
mov
call
cmc
sub
in
test
bound
stos
xchg
inc
ss
aam
add
push
andl
fwait
pusha
fsubrs
aas
add
fucomip
push
mov
push
push
sbb
sti
sbb
test
push
xchg
sbb
jl
mov
mov
mov
inc
nop
push
cmp
pop
and
outsl
clc
xchg
mov
jnp
dec
or
sarb
movsl
cli
clc
mov
divb
and
ret
rorl
fxch
cmc
mov
call
leave
icebp
lds
pushf
fisubrs
outsb
sti
aaa
mov
cmp
dec
sbb
mov
xchg
clc
xchg
sbb
push
inc
xor
jmp
xchg
inc
push
push
cmp
and
and
imul
xor
loopne
hlt
fsubrl
or
cltd
inc
imul
std
sbb
dec
jge
fldcw
negl
push
mov
add
push
sahf
icebp
fsubr
jbe
out
data16
fidivrs
lds
or
cli
pop
lahf
testl
xchg
push
rorb
js
loope
xor
movsl
xchg
and
xchg
js
sahf
xor
jne
std
aaa
aaa
fstps
mov
ljmp
sbb
icebp
lahf
int3
aas
xor
pop
push
mulb
orb
add
add
or
mov
cmp
inc
add
lock
mov
in
cld
icebp
sbb
add
fdivl
int
roll
jae
in
lcall
and
in
fcomps
in
cli
int
inc
pop
adc
hlt
or
add
faddl
ret
push
dec
xchg
mov
pop
dec
outsl
hlt
inc
scas
adc
nop
cmpl
inc
leave
enter
pop
jge
cwtl
stc
aam
jg
jne
addr16
loope
shll
jno
pop
enter
inc
mov
cs
push
movsw
mov
mov
cs
pop
stos
push
pop
push
stos
cld
pop
outsb
movsl
mov
xchg
out
repz
push
jbe
and
sub
out
lahf
adc
outsb
js
jle
pop
xchg
mov
inc
das
pusha
in
add
push
jmp
fidivrs
stc
add
cwtl
sub
inc
orl
popf
sub
sbb
or
jb
mov
cmc
mov
in
dec
repz
rol
jge
mov
inc
mov
lcall
push
out
sub
int
mov
cmp
dec
add
mov
mov
lds
ds
cli
and
mov
and
js
pop
jmp
lahf
adc
cmp
cltd
jb
lcall
outsl
mov
out
mov
adc
or
mov
ret
ljmp
lcall
test
xchg
and
xor
lds
push
and
inc
cmp
xchg
and
outsb
fnstenv
dec
dec
push
lock
sub
lea
mov
lea
xchg
sub
jns
cmpsb
adc
inc
or
dec
push
repz
mov
jmp
mov
scas
adc
cmc
das
out
shll
jbe
cmp
and
jge
in
in
inc
lret
mov
stc
fcomip
push
mov
push
pop
lods
or
rep
xchg
xchg
aam
out
push
xchg
hlt
or
add
pop
and
stc
or
gs
add
cmpsb
pushf
add
pop
ret
xchg
out
rorl
dec
stc
jle
pop
out
inc
push
paddq
repz
ds
cli
mov
leave
xchg
popa
loope
xchg
int
loopne
xor
xchg
loop
mov
adc
jbe
or
mov
push
adcl
or
rorl
je
movsl
add
mov
pop
sahf
in
and
sub
xor
add
cs
push
inc
jge
cmp
fsubrl
lea
mov
xor
aaa
out
inc
out
fldt
xchg
je
push
scas
not
loope
dec
dec
or
aam
nop
push
int3
jb
hlt
mov
jne
add
cmpsl
pusha
lahf
pop
iret
popf
imulb
adc
lea
outsb
adc
insb
int
cltd
popa
xchg
imul
insl
cmp
jp
and
sbb
das
mov
sub
push
jne
aad
jo
cmc
adcb
sub
xor
adc
add
cmp
mov
jmp
mov
xlat
or
push
data16
pop
and
out
lock
mov
or
ret
push
jne
andl
mov
xchg
add
sbb
adc
jno
mov
popa
sbb
shll
xor
mov
out
cmp
inc
negb
xor
vshufps
sbb
out
in
mov
fucomip
and
jl
dec
mov
push
dec
das
imul
jo
xchg
dec
mov
pop
movsb
or
mov
push
insb
fwait
shl
mov
cli
or
mov
xchg
test
repnz
repz
inc
adc
in
cld
add
sub
das
mov
jle
or
xchg
pop
test
dec
xchg
xchg
popa
add
inc
xchg
mov
fiaddl
cld
dec
xchg
pop
dec
mov
sub
and
mov
dec
dec
aam
jge
inc
icebp
pushfw
in
xchg
std
lret
test
push
xor
mov
mov
xor
mov
rorb
cmpps
mov
outsb
bound
or
outsb
in
add
loope
sub
adc
xchg
dec
mov
cmp
and
sub
lret
jno
mov
scas
sub
ret
mov
mov
cs
insb
cmp
xchg
push
cltd
lea
test
ds
stos
dec
xchg
sahf
je
mov
xlat
xchg
cmp
aam
dec
gs
jl
mov
fiadds
les
inc
push
pop
mov
xlat
mov
pop
jmp
dec
daa
inc
cs
adc
or
js
pop
outsb
sub
in
dec
cmp
jl
fs
clc
xchg
pusha
les
sub
push
sub
cld
inc
push
sbb
fsubr
jg
xchg
pop
imul
sub
dec
test
hlt
push
rcr
push
loope
popa
xchg
nop
and
cmpl
ja
cmpsl
sbb
sbb
push
xchg
mov
leave
sub
movsl
mov
stos
or
mov
rcll
push
mov
loopne
clc
fidivl
cmc
mov
fstps
xor
or
xor
add
mov
push
pop
jmp
mov
pop
cmp
out
cmpsl
jp
push
fnsave
sub
xchg
xchg
and
mov
shlb
filds
lahf
and
nop
in
loop
call
cmp
mov
mov
adc
movsb
repz
xchg
pop
in
and
les
dec
inc
dec
je
nop
xor
sub
xchg
cs
cli
fwait
shlb
xlat
orb
scas
adc
dec
sbb
mov
stos
jns
ret
mov
scas
xchg
mov
scas
test
xchg
or
dec
mov
cwtl
adc
icebp
aad
mov
sub
fsubrl
je
jmp
cltd
mov
js
jg
adcl
mov
outsb
sbb
stos
sbb
cmpb
sbb
xor
lret
jp
cmp
mov
mov
cmp
pop
lods
cmp
imul
mov
add
repz
aas
and
in
gs
movsl
leave
ret
fisubs
jns
repnz
lret
and
or
aad
pop
mov
add
cmp
lods
mov
jmp
jp
xchg
adc
cmp
add
mov
push
jge
add
lods
xchg
xor
xchg
pop
jne
inc
das
push
xchg
sbb
test
adc
mov
or
jae
dec
sbb
stos
out
push
testl
mov
clc
xchg
and
shrl
sub
jb
dec
mov
push
mov
repz
stc
fdivr
push
and
jle
dec
inc
push
rcll
cmp
sub
add
bound
pop
sbb
dec
adc
je
int
subl
rclb
sahf
shrl
stos
call
jbe
movsl
shlb
fidivrs
pop
pop
cmp
lods
sub
push
int3
ret
adc
jo
jno
jae
dec
adc
out
add
jb
insb
xor
fwait
xorl
and
iret
mulb
mov
pusha
sbb
pop
mov
out
sub
out
push
sub
scas
stos
test
sub
movsl
cmp
lods
cmp
xor
cmpsl
movsb
sbb
adc
out
pop
lahf
jmp
out
cmp
pop
sbb
repnz
loop
pop
iret
pop
adc
mov
out
inc
sbb
jmp
mov
lods
adc
stc
bound
push
jmp
nop
gs
sbb
shl
add
and
insl
movsl
test
jae
test
mov
sub
jle
mov
pop
mov
push
ljmp
mov
xchg
in
lea
lea
mov
jl
jae
je
repz
adc
xchg
jl
ret
aad
add
mov
popf
rcl
mov
out
mov
and
pop
lds
fildll
fildl
lds
loope
xchg
cltd
mov
sahf
cmp
cltd
inc
add
push
gs
addl
pop
ret
xchg
xor
int3
dec
inc
inc
mov
nop
inc
fistpl
inc
dec
nop
jae
cmp
data16
mov
sbb
mov
mov
jne
imul
cmpsb
and
push
and
push
scas
sbb
inc
xlat
mov
fiadds
jecxz
fldcw
pop
inc
jl
xor
imulb
addb
mov
pop
jecxz
inc
push
lret
pusha
test
les
push
dec
push
test
lock
mov
inc
mov
sar
popf
push
and
fidivs
add
clc
fyl2xp1
adc
add
popf
pop
cmc
jbe
out
es
and
sti
fs
loop
or
outsb
dec
xchg
xor
or
imul
pop
sub
jl
fwait
cmp
fwait
dec
and
sub
mov
push
mov
dec
fwait
out
mov
sub
dec
pop
jae
ret
mov
push
xor
sub
test
int3
and
push
fld
movb
insb
ljmp
sbb
repnz
mov
mov
outsl
int3
xor
mov
fnsave
pop
mov
sbb
or
pop
std
or
enter
fsubrl
out
mov
out
and
scas
ja
mov
repnz
rol
arpl
add
shlb
shll
mov
filds
insl
flds
xchg
ret
imul
mov
adc
push
dec
fsubr
push
lahf
cli
daa
add
ss
popf
push
test
int3
cmp
mov
loopne
dec
sbb
mov
mov
sti
int3
xchg
inc
movsb
pop
adc
adc
mov
leave
aaa
loope
ja
sub
mov
jg
outsb
call
add
and
fwait
xchg
sti
push
sbb
sub
xor
cltd
lcall
in
adc
jns
cltd
mov
mov
or
mov
lods
xchg
lcall
inc
add
jp
daa
call
add
rcl
add
lock
sti
stos
and
cltd
ljmp
fistl
pmaddwd
fstpt
rsqrtps
mov
mov
push
ljmp
jge
sbb
sub
cmp
lcall
fldenv
les
or
shrl
aam
bound
mov
xor
ret
sahf
dec
icebp
out
pop
add
mov
xchg
pop
rorl
sbb
push
mov
mov
fs
xchg
add
cli
adc
icebp
adc
pop
cli
push
ja
clc
or
xchg
fs
mov
insl
cmp
pop
xor
pop
fpatan
inc
call
subl
jnp
scas
adc
mov
dec
pop
cmpsl
mov
cli
hlt
add
shr
stos
mov
movsb
in
dec
int
adc
xchg
sbb
and
xcrypt-ofb
cmpsl
sub
sbb
add
pop
sub
xchg
cmpsb
jge
inc
popf
mov
mov
or
jne
test
xor
sarb
inc
into
movsb
mov
popa
jle
loopne
movsb
push
mov
jns
cltd
mov
cmp
sti
ret
repnz
and
sbb
lahf
stc
lcall
sub
or
stc
xchg
xchg
fisubl
xchg
lods
mov
fiadds
scas
sub
xor
pop
cmp
adc
pop
insl
aas
ja
mov
sbb
sbb
std
jae
outsb
ret
xchg
sub
sub
insl
push
fs
jo
adc
cltd
xchg
or
loope
fcomi
jb
cmpsl
mov
mov
mov
mov
cmc
or
and
scas
das
push
fwait
xchg
in
add
xchg
js
add
daa
sarl
adc
lods
mov
jno
mov
or
lock
les
scas
inc
or
shll
xor
fnsave
dec
adc
or
xor
jg
or
push
pop
or
adcl
add
push
ret
and
cmp
or
repnz
xchg
push
or
push
jbe
out
adc
insb
mov
or
inc
ds
xchg
mov
sbb
out
push
dec
cltd
fcmovnu
sarl
fadd
adc
ss
jmp
jo
jle
bound
mov
movsl
inc
in
jle
cli
push
out
fidivl
test
pop
inc
push
inc
add
subw
mov
dec
repnz
gs
in
sbb
fcmovnbe
dec
mov
cld
xchg
jbe
xor
rolb
enter
cmp
mov
adc
fsubs
push
jle
xor
out
push
inc
int
sarb
jl
jl
rcll
xor
sbb
push
add
jb
cmpsb
dec
seto
mov
xor
push
in
into
loop
add
sbb
scas
adc
inc
rcl
dec
shrb
cmp
cmc
aad
repnz
aad
and
mov
bound
jns
sbb
rolb
out
pop
sbb
sbb
jb
lret
subl
test
lods
int
mov
jns
jp
and
push
aaa
mov
ss
cld
insl
les
repnz
and
inc
sbb
iret
jne
xor
sub
sub
lds
mov
addr16
shll
mov
jne
out
or
cmpsl
pop
mov
daa
inc
adc
cmp
dec
js
shll
test
loopne
inc
jl
ja
stc
dec
call
not
cmc
aas
lods
and
or
pop
cli
in
xchg
js
dec
jle
or
inc
ds
hlt
mov
pop
ds
mov
jle
pop
ret
push
stos
jno
fwait
ret
dec
cmp
push
pop
out
adc
cmpsb
jne
mov
adc
push
push
stos
cmp
mov
pop
sbb
incl
mov
push
imul
add
fcomip
movsb
adc
popf
add
mov
adc
xchg
fcomps
cmp
and
out
xorl
and
aas
cmp
sub
and
sbb
jle
pop
in
mov
ret
push
icebp
sub
or
push
mov
outsb
xor
xor
hlt
pop
rol
add
test
cmp
call
push
popa
cmp
std
lcall
jnp
lods
lock
sbb
dec
stos
jecxz
fnstsw
dec
or
fcom
jne
idivb
xchg
adc
stos
repz
lret
scas
das
clc
add
and
shr
mov
ja
cwtl
insb
lods
lock
rol
sub
iret
stos
add
mov
push
bound
and
hlt
aam
add
cld
xchg
cmc
cmp
popa
and
hlt
cmpb
stos
add
clc
mov
push
je
and
jno
push
test
mov
cli
mov
sahf
out
push
push
icebp
cli
sarl
mov
les
dec
in
jp
cmc
mov
dec
lret
std
push
sarb
sbb
out
inc
mov
jbe
imul
ljmp
in
mov
loope
ljmp
sub
mov
inc
mov
cmpsl
loop
xor
mov
adc
mov
popf
outsb
test
out
push
and
out
xchg
shlb
xchg
sti
xchg
rcll
ficompl
cmpsb
inc
dec
mov
lods
and
cwtl
cmp
loopne
cmp
mov
gs
subb
jmp
gs
sbb
jle
inc
dec
decl
cld
push
or
sbb
dec
push
ss
cmp
mov
mov
lcall
push
lods
mov
scas
cmp
notb
in
shrb
aas
or
fsubs
cmpsb
insb
mov
sub
jge
andb
cwtl
lods
frstor
clc
dec
inc
popf
pop
push
push
mov
aam
cmp
xor
jle
adc
fcom
jge
push
cmp
mov
sbb
mov
iret
sub
outsb
jecxz
mov
out
push
sub
pop
push
mov
shr
mov
out
adc
mov
pop
inc
push
mov
jmp
cmpsl
in
shlb
lcall
daa
sbb
loop
cmp
xor
sti
push
repz
data16
and
or
sub
lret
jle
jecxz
flds
cmp
pop
loope
pop
inc
mov
adc
adc
inc
cmp
xchg
in
lods
out
push
hlt
jmp
add
ja
mov
or
cmp
les
dec
xor
cmp
cmpsb
or
pop
in
inc
aas
mov
sbb
std
jmp
adc
mov
dec
cmpsl
xchg
scas
and
sbb
mov
mov
inc
xlat
test
lds
jge
lods
add
lcall
movl
dec
xor
mov
sbb
shlb
frstor
add
xchg
xchg
popa
inc
or
adc
fiadds
jecxz
lods
mov
out
iret
ljmp
xlat
inc
sbb
in
and
lret
mov
or
inc
pop
subl
stos
out
into
xlat
lds
xchg
cwtl
mov
scas
mov
pop
sub
jno
or
mov
iret
sub
outsb
and
add
pushf
xlat
test
mov
or
push
fsubp
sub
push
dec
insl
or
in
pop
push
xchg
sbb
in
ljmp
lds
sbb
xlat
lret
mov
or
pop
cmp
sub
cltd
roll
and
es
xchg
in
sub
ljmp
ret
mov
pop
push
adc
test
ja
rorl
cld
push
outsl
dec
data16
xlat
inc
fldenv
jecxz
fwait
jp
adc
or
aaa
adc
fbld
dec
sti
cmp
ljmp
adc
mov
repnz
je
mov
push
inc
insl
andl
addr16
shrl
sub
or
sar
xor
outsb
scas
push
or
dec
in
cmp
fcompl
xchg
lock
ret
xor
dec
sub
adc
subb
fiaddl
adc
pop
fistl
sbb
ror
lods
or
subb
insl
popl
mov
shr
mov
in
jmp
in
and
mov
xchg
mov
insl
dec
mov
pop
icebp
div
subl
das
jne
jp
lock
lcall
jno
jb
xchg
imull
jg
popa
dec
lret
or
adc
fwait
xor
rorl
loopne
inc
inc
jae
imulb
cmpsl
dec
sarl
push
sahf
clc
cmpsl
jecxz
gs
jb
rclb
sahf
outsl
sub
out
jle
lret
in
dec
mov
pop
aas
inc
cmpsl
leave
js
push
movsb
dec
ja
daa
popf
jp
push
jl
push
mov
jae
sub
mov
or
daa
fsubs
jns
insl
pop
int3
das
xor
out
xchg
mov
sbb
fidivrl
push
dec
jns
dec
dec
cmp
mov
outsb
jmp
push
rcrb
imul
in
inc
hlt
cmp
cmpsb
jecxz
movsl
fadds
arpl
ror
push
ss
sbb
mov
jb
adc
test
fdivr
cwtl
fdivrs
ficomps
inc
jbe
xchg
mov
mov
loop
repz
das
sbb
lea
push
mov
addr16
in
mov
outsb
call
sbb
call
lock
loop
pop
sahf
mov
loope
cmpsb
xchg
push
add
push
pop
jg
pop
fcomps
cwtl
loope
and
mull
xchg
call
cmp
adc
mov
push
daa
stos
fistpl
pop
or
popf
imul
mov
mov
aaa
sub
and
pop
fwait
or
push
push
ret
mov
adc
filds
pop
int
lcall
pop
push
sub
nop
mov
and
mov
ret
jbe
pop
sbb
push
push
ss
test
pop
lods
jb
fwait
push
lods
ds
cmpsb
dec
fwait
sub
xor
or
fnsave
mov
pop
pop
stc
cld
mov
push
scas
xchg
movsb
test
cmc
inc
subl
fldenv
dec
xchg
push
inc
mov
lock
or
jne
xchg
jns
ret
dec
cltd
dec
inc
fisttps
jmp
scas
xchg
jns
inc
jns
or
adcb
popa
into
jmp
and
mov
call
fcmovnu
gs
inc
notb
inc
fldt
pop
xlat
out
mov
sbb
cmpsb
xchg
dec
lock
xchg
sub
sar
push
dec
inc
cmpsl
or
loopne
mov
xchg
and
lds
adc
ss
ljmp
lds
insl
cld
repz
sbb
test
fsubrp
sar
stos
or
cmp
mov
rolb
dec
out
pop
cmc
xor
add
in
cmpsl
je
lds
cli
inc
dec
cld
loopne
pcmpgtw
cltd
hlt
lret
mov
jp
or
pop
mov
xchg
mov
sbbl
ret
adc
pop
popf
icebp
pusha
sbb
mov
ret
xorb
mov
cltd
pop
xchg
ja
xor
ficoml
gs
jne
mov
jnp
dec
add
cmc
das
mov
sub
mov
in
pushf
mov
fdivrp
fdiv
fcomps
or
aam
fisttpll
xchg
sub
push
imul
sbb
sbbb
sbb
mov
mov
xchg
ficoml
pop
sbb
jo
into
mov
movb
lret
enter
outsl
xchg
int
mov
aaa
xchg
fnstsw
adc
les
stos
dec
imul
fsubrs
xlat
fsts
xor
in
fisttpl
xchg
mov
and
xchg
mov
and
xchg
cmp
pop
xchg
inc
das
mov
inc
mov
mov
adc
inc
into
mov
cmc
pop
xchg
scas
stos
inc
movsb
sbb
mov
sub
out
cmpsb
inc
flds
rcrl
jns
insl
fmuls
jecxz
sbb
push
mov
inc
cmp
inc
sbb
sar
incl
mov
popa
js
inc
jle
adc
sub
scas
ret
push
jns
push
dec
cld
dec
push
outsl
mov
push
adc
push
iret
jno
adc
inc
nop
iret
mov
push
aad
ds
repz
sbb
adc
bnd
jno
lock
jnp
sbbb
inc
outsl
negb
pop
gs
and
mov
ret
push
cmpxchg
std
pop
mov
mov
scas
jle
push
js
mov
and
cli
lret
lcall
xor
push
pop
push
movsb
jns
jmp
and
mov
adc
sbb
inc
xchg
ja
mov
xchg
insl
adc
ljmp
lret
xor
cmpsl
or
stos
mov
sar
push
gs
loopne
mov
xlat
mov
enter
or
xor
aaa
out
stos
jno
sub
mov
dec
xor
test
test
lock
xchg
push
ljmp
jge
xchg
loop
stos
xor
fs
cmpsl
jno
sarl
insb
xor
loope
enter
xor
daa
xlat
mov
les
enter
jl
movsb
loop
fbstp
lods
pop
sub
sub
cmp
test
sbb
xor
and
xchg
test
add
js
add
mov
sysret
or
lret
fcmovbe
mov
loope
insl
push
dec
mov
jecxz
lock
test
lods
dec
and
imul
mov
mov
sub
outsb
xor
adc
roll
xchg
cmp
roll
clc
dec
mov
jbe
repnz
or
sbb
mov
loope
xorb
mov
mov
mov
sbb
adc
inc
sbb
insb
mov
test
hlt
ja
mov
pop
loop
jb
movb
jmp
mov
rcr
and
push
in
and
nop
out
sub
mov
add
mov
les
and
add
jb
iret
daa
clc
push
mov
adc
jecxz
mov
xlat
xor
sbbb
push
jp
call
fbstp
jns
add
jecxz
push
jo
rcrb
and
rcll
inc
dec
leave
clc
jg
cmp
cmc
lret
xchg
dec
sub
or
or
std
scas
js
loope
sub
mov
add
frstor
mov
sbb
add
cmc
addr16
mov
lahf
push
sbb
xorb
icebp
sahf
in
adc
std
lcall
ss
mov
loop
lea
ret
lret
outsl
stos
rcrb
xor
mov
imul
int3
xorl
aam
test
leave
mov
xchg
jmp
pop
cwtl
fwait
jnp
mov
xchg
sub
test
adc
scas
fs
add
aad
stc
repnz
cmp
in
leave
mov
ja
js
lock
add
mov
pop
xchg
int3
push
loop
sar
rcrb
mov
inc
pop
dec
cld
subl
js
inc
mov
or
add
sbb
mov
dec
cmp
lds
movaps
adc
fidivrl
lcall
dec
test
into
sbb
cmpsb
cmpsl
jecxz
cwtl
mov
cmp
loopne
dec
shr
pusha
adc
ret
xchg
and
in
and
ficoms
aad
or
arpl
ret
jbe
lods
imul
xor
lea
push
mov
sar
jmp
push
les
mov
dec
icebp
xorl
jae
pop
fs
jne
mov
jno
dec
push
xchg
les
xchg
cli
andb
sbbl
int3
mov
int3
pop
lahf
xor
rcll
inc
daa
cli
jns
stos
mov
or
mov
jb
adc
mov
push
int3
shl
shl
dec
inc
cwtl
es
inc
jb
pop
adc
hlt
lds
or
jl
mov
jns
adc
in
mov
arpl
fucomp
test
sub
dec
call
xor
clc
adc
xor
inc
xlat
cmpsl
stos
add
int3
mov
test
orl
jmp
mov
xor
gs
xchg
test
insl
jecxz
mov
mov
into
pop
push
adcl
sahf
mov
out
push
mov
and
cmp
int3
or
lret
loopne
lahf
mov
test
dec
cmpsb
inc
lret
add
sub
add
cmp
push
sbb
dec
cmc
and
add
scas
int
lahf
out
pop
xchg
sbb
cli
int
mov
out
sub
addl
dec
fs
dec
dec
xor
loop
mov
mov
cs
jle
test
mov
adc
pop
or
sub
sub
sbb
sti
xchg
xor
pop
pop
or
pop
or
sbb
aas
shl
pop
xchg
lods
icebp
jmp
repnz
out
pop
cmp
daa
stos
mov
mov
repz
mov
lret
sbb
cmp
jg
xchg
push
mov
xchg
aad
gs
frstor
inc
out
jp
shr
aad
out
cmp
sarb
mov
mov
addb
movsb
dec
add
outsb
cmp
pop
cmp
cltd
test
lods
xchg
ja
cmp
or
mov
mov
scas
loope
sbb
jmp
sbbb
push
and
insb
mov
push
cs
adc
inc
arpl
and
jge
dec
hlt
test
loope
hlt
repnz
add
enter
outsl
pop
stos
sbb
rorl
push
xchg
pop
mov
imul
lea
data16
jp
mov
dec
fistpl
popa
jb
xchg
mov
les
addr16
and
nop
jl
add
popf
add
xchg
mov
adcb
push
int
and
call
imul
testb
dec
out
dec
pop
imul
sahf
cmp
jmp
mov
dec
aad
fisubs
dec
test
mov
and
cmp
enter
insl
jnp
mov
out
mov
daa
inc
xor
out
cmpsl
cmpsl
in
rcrb
enter
mov
mov
pop
xchg
int3
xor
jle
out
sub
and
das
ljmp
mov
add
xchg
aaa
cmp
add
push
sbb
outsl
pop
inc
lret
mov
jno
inc
or
or
mov
or
xor
cltd
pop
mov
lcall
out
frstor
or
and
lcall
iret
enter
ja
mov
jno
xor
ret
push
ds
out
sbb
popf
xchg
fs
push
in
fs
push
int
pop
movb
cmp
fidivrs
std
mov
les
out
xchg
es
mov
pop
cld
xor
lcall
subb
push
mov
stos
push
iret
in
xchg
mov
or
xchg
mov
inc
pop
cmc
int3
nop
pop
movsl
mov
bound
insb
mov
in
cmp
mov
loope
in
les
cs
test
popf
stos
mov
adc
push
push
add
imul
enter
test
into
es
dec
out
and
mov
jb
sub
xchg
repz
dec
aas
sbb
cmpsl
mov
xor
stc
imul
ja
sub
out
pop
mov
cmp
push
mov
and
xlat
mov
ds
imul
cmp
imul
xchg
dec
xor
scas
insl
pop
xchg
sub
adc
into
cltd
jne
in
xor
mov
xchg
cwtl
fsubrl
jp
dec
mov
shl
cli
jmp
adc
lea
out
pushf
pop
add
jo
lea
xor
shl
je
cwtl
mov
fdiv
or
outsb
mov
mov
cmp
jmp
dec
mov
stc
jl
cmp
xchg
popf
data16
nop
ss
out
xchg
imul
aad
mov
jg
add
jle
push
mov
cmpsl
out
dec
xchg
fdivrl
jmp
xor
or
rcl
pop
out
jle
sub
fiaddl
xor
lds
not
stos
repz
test
lcall
data16
jbe
daa
pusha
push
fisttpl
mov
decl
mov
xor
mov
int3
sbb
mov
sub
cmp
jle
popf
lods
mov
mov
sub
data16
mov
sahf
dec
mov
cmp
xor
mov
jl
popa
pop
dec
subb
xchg
xor
mov
mov
loop
in
flds
mov
push
cli
std
xor
or
add
jo
shll
int3
inc
imul
sbb
out
and
es
xor
fsubrl
addb
cli
out
out
inc
push
fmuls
fwait
cli
pop
xchg
shll
xor
mov
mov
std
add
inc
mov
or
insl
dec
int
fs
mov
ja
adc
cwtl
xor
mov
ffree
subl
test
pop
mov
jge
sarb
adc
adc
aam
shll
xchg
sbb
cwtl
mov
jmp
jge
addl
mov
je
jp
xor
jns
add
or
push
pop
dec
fistps
mov
or
and
call
xchg
pop
push
sub
dec
ret
xchg
mov
insl
mov
test
enter
pushf
mov
jl
or
pop
fsubrs
repz
lods
mov
movsl
mov
test
and
mov
xlat
xor
inc
test
mov
enter
js
push
mov
shrb
jns
outsl
pop
mov
push
outsl
xchg
pop
rol
insl
jne
ja
testl
sub
ret
mov
fstpl
inc
push
jmp
into
jne
popa
call
mov
push
mov
and
push
rol
jp
xchg
icebp
jns
jno
fistl
dec
movsl
sub
jmp
ljmp
decl
into
mov
sarl
cmp
inc
or
and
roll
orl
pop
insb
sbb
sub
xorb
push
push
jmp
repz
fmulp
fwait
rorl
xor
mov
in
es
pop
rorb
in
decl
icebp
or
and
cmp
and
xlat
sbb
ja,pt
aaa
mov
call
jns
pop
dec
sub
or
int3
mov
add
daa
mov
or
jg
rcr
test
xchg
jecxz
and
imul
pushf
pop
sub
jo
js
out
pop
hlt
push
je
pop
cmp
enter
sub
pop
arpl
add
dec
fdivp
sub
cwtl
jecxz
xor
xor
loopne
ficomps
push
bound
xor
pop
clc
add
mov
mov
lret
jl
mov
sub
mov
lret
hlt
inc
mov
sarb
repz
fs
mov
mov
cmpsb
fcomi
out
jb
jno
jbe
scas
cmpsb
mov
fisubl
or
push
xor
sbb
xlat
jne
jl
push
pushf
and
sub
or
xchg
insl
jecxz
push
sub
push
inc
jns
cld
movsl
xor
xchg
test
jecxz
push
push
add
cmpsl
shrb
xor
lods
xor
ret
nop
xor
jo
xchg
shrb
xchg
sub
fwait
and
fsubrl
cmp
test
cmp
gs
jae
xlat
pop
jmp
loope
jae
push
into
aas
sti
cli
mov
ljmp
pop
gs
cmp
ds
icebp
and
int3
mov
rol
shl
aam
sti
shl
mov
sbb
inc
in
mov
out
add
pop
cwtl
andb
enter
mov
mov
and
stc
call
insb
mov
fwait
sbb
xor
or
mov
push
ja
dec
adc
out
mov
sahf
push
or
xchg
daa
nop
push
inc
dec
lds
xchg
in
mov
pop
xchg
fcmovbe
sub
jne
mov
ss
loopne
daa
mov
cmp
lods
sbb
aaa
addr16
test
dec
lret
xor
fimuls
imul
mov
pop
xchg
popa
fnsave
xorl
xchg
jl
dec
daa
jg
push
sbbb
loop
fdivr
fcoms
cli
and
add
daa
adc
incl
sbb
nop
mull
xor
or
insl
or
lock
scas
xchg
cwtl
cld
and
fdivrl
xor
test
pop
jge
jbe
or
popl
adc
dec
jle
pop
mov
imul
dec
adc
stc
mov
cmp
sbb
adc
jmp
out
leave
xchg
inc
rorb
jbe
arpl
push
in
ljmp
pop
sbb
xor
data16
repz
cld
mov
or
push
stc
or
cmp
xor
sub
mov
jecxz
sub
mov
movsb
dec
idiv
adcb
dec
push
ja
dec
sbb
shrb
arpl
push
mov
xchg
and
ja
je
sub
adc
sbb
dec
aad
shll
mov
ficoml
imul
push
push
ja
mov
in
xor
sbb
pop
lds
jnp
jmp
rclb
add
negl
inc
popa
addb
dec
xchg
adc
arpl
mov
icebp
lret
cmpsb
cmp
das
dec
sub
iret
aam
cld
adc
dec
or
push
mov
cli
icebp
in
popf
xchg
push
movsb
movsl
xchg
into
jecxz
dec
outsl
lahf
frstor
popa
push
jae
add
adc
xlat
dec
xchg
aaa
setbe
repnz
dec
out
push
and
iret
add
das
ret
or
jne
inc
outsl
insb
shlb
lds
fmuls
mov
sbb
adc
or
xor
mov
aaa
dec
daa
and
cmpsb
insl
lret
adc
data16
loope
mov
int3
or
clc
negb
sbb
popf
out
xor
enter
sbb
jp
fdivl
aam
inc
cmc
sub
cmp
ljmp
cmp
dec
add
fstpl
adc
add
push
inc
pop
jle
ja
mov
mov
adc
jp
push
mov
lods
popa
rorb
or
shll
mov
pop
xchg
cld
inc
xchg
fnsave
sahf
sub
sub
call
sub
stos
ja
push
xor
jg
adc
popa
pop
scas
or
xchg
xor
mov
mov
pop
decb
sbb
xor
or
sbb
cmpsl
pop
inc
cmp
adc
pop
jnp
jns
js
into
stos
loope
int3
fucom
fwait
outsl
in
ss
pop
add
cmpsl
or
sbb
push
or
mov
arpl
movsl
or
call
jecxz
int3
xor
cmp
mov
insb
mov
xchg
fs
jp
adcl
imulb
ror
mov
add
push
adc
mov
imul
push
sub
lret
xchg
incl
sti
xchg
popa
sub
cmpsl
mov
ficoms
ret
and
push
fnstenv
inc
push
ss
mov
jns
cwtl
cmp
fcompl
iret
xchg
lret
test
pop
mov
jecxz
dec
or
push
inc
inc
jecxz
dec
mov
mov
jge
pop
lret
popf
dec
and
lret
inc
lcall
pop
pop
pop
inc
ret
or
and
xchg
insb
pop
outsb
int
or
mov
pop
dec
mov
xor
lock
and
idivb
loopne
imul
mov
push
adc
jae
stc
fidivs
pop
pop
push
out
cmp
fstpl
push
add
test
mov
popf
pop
ljmp
sbb
or
fisubrs
pop
xchg
push
cmp
fistps
fdivs
push
xor
std
inc
inc
xchg
and
pop
cwtl
es
pop
xlat
xchg
fnsave
popa
shlb
push
mov
in
add
imul
cwtl
loop
add
push
mov
push
cmpsb
dec
or
mov
fwait
sti
cmpsl
mov
xchg
jle
xchg
fstpt
fisttpl
sub
mov
jbe
fwait
lret
and
packsswb
bound
es
push
push
sahf
mov
mov
xor
movups
adc
xchg
or
std
aaa
mov
inc
test
push
lcall
xor
push
mov
jmp
pop
pop
mov
dec
jns
lea
movsb
inc
popa
rol
xchg
and
jne
and
jns
inc
push
cwtl
sbb
lret
inc
mov
inc
in
int3
mov
sub
cwtl
movb
mov
mov
hlt
mov
xor
test
iret
std
dec
scas
call
outsb
out
cwtl
shll
adc
mov
sbb
sbb
popa
jo
jle
and
mov
mov
in
pushf
lahf
rclb
jno
shrb
nop
call
ss
xchg
mov
xor
movsb
pop
pop
pop
add
inc
insb
or
mov
bound
pusha
or
aaa
cmp
imul
movsb
sub
sbb
xchg
inc
mov
and
xchg
inc
loop
inc
push
pushf
pop
fmulp
sub
xchg
add
xchg
mov
lahf
testl
sbb
not
jl
std
decb
imul
repz
xorl
out
push
mov
xchg
mov
pop
dec
xor
mov
call
nop
out
pop
pop
or
into
movsl
add
lret
jle
rorl
cmc
inc
pop
ds
fs
inc
out
cwtl
fs
stos
lods
sti
cli
nop
jp
add
notl
sbb
pop
inc
popf
in
into
inc
out
pop
fnstsw
inc
rcl
push
fwait
incb
daa
fstps
push
mov
mov
rcll
dec
cld
stos
xchg
adcl
mov
pop
push
xchg
sahf
popl
js
jp
pop
cmpl
ficompl
xlat
icebp
pop
pop
loopne
je
push
imul
ja
shrl
dec
in
hlt
cmpsb
xor
ror
or
mov
jb
roll
mov
inc
inc
sarb
aaa
mov
scas
repnz
mov
xchg
inc
pop
xchg
out
adc
mov
aaa
mov
icebp
fimull
push
mov
sub
push
sub
movb
movsb
or
xchg
dec
adc
daa
mulb
bound
div
dec
fsubrl
test
xchg
gs
lahf
sbb
cmp
mov
test
xor
xchg
jno
mov
stc
out
es
dec
in
or
test
jno
fcoml
testb
scas
sbb
push
xchg
ret
or
dec
jmp
mov
clc
cmp
push
cmpl
les
mov
sbb
into
jo
aaa
mov
incl
fdivrs
mov
sbb
pop
cli
push
imul
mov
xorb
int3
ret
sub
loop
lahf
push
out
dec
shl
aad
push
push
xor
dec
pop
rclb
int3
nop
inc
pop
fwait
mov
add
jne
cmp
es
iret
jne
push
popf
adc
aaa
movsl
rorb
addl
xchg
cmp
adc
jg
lods
ljmp
mov
pusha
in
mov
jns
push
loopne
inc
shlb
pushf
inc
and
xor
cmc
add
push
ljmp
pop
int3
mov
sbb
sbb
cmc
pop
stos
std
out
pop
cmpsb
push
or
cmp
pushf
jp
xor
jno
lods
vpshuflw
push
fidivrs
xchg
push
in
clc
adc
and
fnsave
popf
imul
push
in
dec
mov
fnstenv
cmp
test
jmp
call
mov
and
fists
popa
aam
mov
xchg
cmp
in
stos
jp
push
cmp
dec
and
sub
loopne
insb
sahf
xorb
lods
cmp
es
outsb
mov
lret
adc
or
lds
sub
cmp
dec
aaa
xor
test
inc
lcall
sbb
repnz
sbb
adc
dec
loop
cmc
sbb
cli
bound
mov
mov
sub
jae
dec
push
out
jnp
inc
and
sub
inc
sbb
mov
dec
fstpl
sub
adc
pushf
xchg
sbb
mov
push
pop
pop
adc
lods
cmp
dec
pusha
cmp
xchg
mov
push
fldt
xchg
test
mov
test
not
fnstsw
jge
js
in
arpl
adc
leave
imul
xor
addb
mov
arpl
int3
mov
add
dec
adc
data16
repnz
loop
inc
loope
dec
iret
lea
insb
add
inc
subl
scas
cmp
push
mov
inc
jbe
out
push
setnp
jno
rolb
fisttpll
xor
loop
inc
inc
adc
andb
and
bound
scas
inc
jl
call
push
mov
mov
rcl
rcll
cmpl
sbb
mov
fwait
imul
gs
mov
ss
pusha
push
int
xchg
pushf
inc
aas
push
call
arpl
push
pop
rorl
mov
pop
sbb
cmp
lods
imul
sbb
add
jno
ret
xor
dec
cltd
in
insl
negl
xchg
nop
arpl
jae
pop
push
cmp
nop
lea
xor
call
jecxz
xchg
lock
dec
gs
sub
jecxz
scas
push
add
sbb
mov
aas
lea
dec
push
mov
inc
push
jb
int3
cmpsl
movsl
je
add
sbb
and
mov
push
xlat
push
push
std
xchg
cs
or
stos
out
jbe
nop
js
popf
and
arpl
fcoml
fidivl
or
mov
in
pusha
jno
xchg
pop
cmc
push
ss
mov
bound
fucomi
push
inc
or
or
sub
push
pop
push
adc
lods
mov
jl
inc
jns
icebp
int
mov
insl
xchg
xchg
push
mov
sub
imull
fisttpll
mov
fcmovb
stos
dec
gs
dec
mov
mov
dec
sub
xor
clc
in
xchg
mov
inc
push
iret
rol
sub
pop
sbb
jge
ja
ret
jmp
mov
movsb
adc
pop
inc
fnsave
cmp
loopne
clc
fildll
in
mov
jg
push
mov
test
mov
add
test
loope
xorl
stos
adc
mov
pop
sub
fisttpl
iret
std
adc
ret
lock
jns
push
hlt
std
mov
je
xchg
hlt
jae
lahf
or
dec
xchg
test
cmpsb
push
in
outsb
sahf
inc
sarl
fwait
mov
aas
inc
inc
cwtl
xor
sbb
push
sbb
lret
jp
inc
inc
ja
push
push
cld
adc
xchg
xlat
movsb
dec
add
dec
popf
push
xor
jo
sub
inc
dec
sbb
pop
adc
test
xchg
sub
adcb
jnp
fs
xor
sub
sbb
cwtl
dec
cmp
nop
cwtl
fwait
in
or
mov
mov
ret
mov
cmc
mov
mov
negb
inc
push
adc
mov
repz
or
jae
dec
out
aam
dec
gs
jle
mov
pop
push
je
jno
pop
idivl
add
push
add
aaa
ret
dec
sbb
cmp
push
pop
push
xor
shrb
xor
jg
pop
stc
popf
xchg
je
push
pop
sti
cmp
popa
cltd
insl
aas
push
adc
orl
pop
inc
out
pop
out
mov
movsb
mov
dec
das
push
fldl
or
daa
es
mov
scas
xor
sti
cltd
js
sub
outsb
push
push
jno
insb
xchg
xchg
jle
adc
push
mov
sbb
adc
fmul
mov
mov
xchg
test
sti
loope
into
mov
adc
outsl
call
rcr
adcl
cmpsl
dec
push
xchg
add
aam
mov
add
pop
push
cld
jne
sbb
xor
cwtl
fcoms
iret
and
dec
mov
je
inc
fists
faddl
pop
or
dec
in
inc
cmp
add
in
pusha
mov
pop
cmpsb
mov
add
and
cmc
shrl
inc
aas
jae
cmpsl
add
scas
mov
pop
out
enter
mov
adc
dec
pop
imul
xorl
inc
pop
dec
jg
adc
mov
dec
dec
dec
mov
dec
mov
cmpsb
outsb
push
jae
test
out
cli
lret
arpl
sbb
add
data16
pusha
inc
jle
sub
lret
outsb
sub
xor
nop
or
js
push
adc
imul
scas
or
xchg
push
out
loopne
mov
aam
stos
ss
lret
ss
insl
push
mov
mov
loopne
pop
push
push
cltd
adc
aas
iret
inc
cmc
push
leave
mov
outsb
cs
jecxz
adc
push
das
fimuls
add
popa
or
xlat
lods
xor
cmpsl
dec
popa
xchg
iret
dec
jno
pop
cmpsb
push
lods
nop
lcall
into
stos
mov
les
adc
fisttps
pusha
ds
mov
ljmp
pop
sbb
and
fists
addl
sbb
in
jle
lcall
adc
jle
dec
sahf
ss
mov
rclb
cmp
imul
call
orl
fnsave
or
xchg
ret
push
bound
mov
rcrl
lds
in
fldenv
in
xchg
dec
shl
adc
or
scas
cmp
inc
inc
inc
xor
or
push
js
mov
test
jbe
and
push
out
mov
rolb
fimuls
cmp
push
dec
cmp
mov
sbbb
popf
pop
daa
jno
dec
inc
aad
movups
dec
aad
imul
inc
adc
in
iret
push
lods
repnz
sbb
jns
mov
js
ja
adc
push
ret
mov
sbb
sub
shll
jne
push
shll
cld
sbb
movsl
sub
fwait
into
push
fwait
ret
cmp
inc
aaa
cld
ljmp
adc
add
inc
pop
pusha
add
cli
sub
jge
xor
out
es
push
call
std
adc
aas
test
inc
xorl
test
push
dec
insb
shll
fcom
fadd
xor
pushf
sarl
lret
inc
push
push
pop
or
pop
cld
inc
pop
pop
xchg
push
inc
xor
sahf
mov
in
cmp
jmp
cmpsl
cmp
idivb
cmp
inc
and
pusha
test
shr
xchg
pop
mov
rorb
xchg
xchg
in
int3
pop
daa
int
dec
das
in
cmc
jno
imul
ds
mov
aad
outsl
pop
enter
daa
xor
push
sbb
pop
mov
cmp
data16
and
arpl
loopne
es
idivl
xor
adc
faddp
pop
in
xor
test
push
jle
ja
leave
sub
repnz
test
daa
pop
pop
mov
imul
jns
sbb
inc
xchg
popf
lds
cmp
jmp
movsb
jecxz
and
out
testb
mov
lcall
imul
pusha
mov
push
xor
lea
ljmp
xor
out
or
daa
repz
pop
xchg
cmpsl
lods
in
outsb
mov
and
cmp
hlt
add
jns
pop
mov
add
cltd
js
add
pop
sbb
pop
fcmovne
xchg
lock
xchg
outsb
adc
lret
fdivl
xchg
cmp
daa
and
add
mov
push
aaa
lods
xlat
clc
pop
xor
xchg
arpl
mov
aad
jae
hlt
cmp
nop
mov
jns
mov
movsl
xchg
pop
dec
cmp
dec
push
fcom
xchg
int3
pusha
xor
jo
mov
lret
addr16
mov
scas
xchg
js
dec
loop
shlb
mov
xchg
imul
outsb
xchg
sarb
push
aas
sub
mov
cmp
push
cld
dec
inc
push
mov
mov
dec
add
lods
andl
adc
xchg
ret
flds
std
shrb
mov
into
bound
aad
stos
pop
add
push
mov
jle
rorl
test
shrl
mov
jl
and
inc
inc
mov
mov
inc
pop
push
paddd
in
and
add
inc
sub
adcl
dec
xchg
mov
ja
mov
in
sbb
cmp
mov
cltd
cltd
je
cmp
out
repz
leave
js
jp
fcomip
fs
sahf
test
outsb
inc
cmp
push
stos
pop
jbe
xlat
xchg
fmuls
mov
popf
ret
movsl
jno
pop
lods
call
mov
addr16
decl
cmp
xor
cmpsb
pop
imul
cmpsl
shll
pop
dec
int3
push
mov
xor
mov
or
inc
cli
mov
rcr
scas
push
inc
mov
push
mov
iret
jecxz
pop
add
fdiv
testb
loopne
mov
jno
ss
adc
mov
lds
cwtl
adc
xlat
pop
xchg
arpl
lods
mov
les
jb
js
mov
pusha
xchg
subb
nop
or
inc
adc
cs
daa
decb
add
pop
jg
mov
mov
cmp
scas
lret
in
or
je
jae
sahf
mov
push
aam
mov
int
xor
cmpsl
mov
xor
inc
inc
ds
scas
adc
xorl
loop
popa
cmc
push
cmp
add
popf
or
in
fwait
jo
repnz
adc
aad
cli
pop
and
lahf
or
pop
out
fwait
js
pop
mov
push
adc
xorb
mov
xchg
jns
cmp
in
or
pop
loope
sbb
int3
lret
mov
push
cld
movsb
iret
add
dec
or
jbe
and
lea
and
xchg
sbb
stos
cld
rorl
jae
out
cmp
data16
pop
push
ficoms
loop
push
push
popa
in
xchg
jecxz
leave
push
inc
mov
xchg
jmp
sub
bound
mov
pop
lock
adc
aas
aam
test
mov
mov
or
lea
test
lods
xchg
jnp
cld
jae
cwtl
sbb
pop
fs
rorb
add
pushf
test
lds
mov
out
push
movsl
xlat
loopne
sbb
jecxz
cmp
jne
ficomps
xor
ficompl
outsl
popa
or
mov
out
adc
aaa
jne
dec
pop
and
mov
cmp
popa
dec
in
jmp
mov
sub
inc
cmp
in
push
lret
dec
sti
jb
rclb
mov
mov
rol
int3
adc
cmc
jg
xor
stc
shll
xchg
shl
or
enter
mov
test
dec
dec
lahf
shrb
stos
iret
cmp
or
mov
push
not
je
addr16
jbe
mov
aaa
cli
pushf
sbb
mov
xchg
out
bnd
xchg
in
xor
lcall
and
icebp
movl
aad
lret
cli
xchg
addr16
lahf
inc
dec
inc
out
push
pushw
add
rcr
scas
call
roll
mov
mov
cmc
mov
xchg
xor
ucomiss
mov
dec
mov
minps
cmp
lret
mov
mov
stos
mov
jne
jg
xor
mov
push
or
or
add
push
cmc
fisttpll
sarb
mov
jne
or
mov
rcrl
inc
mov
insl
push
mov
cmc
sub
sbb
shrl
in
fwait
jnp
cmpsb
loopne
enter
mov
xchg
mov
fsubs
leave
xchg
sbb
repz
pop
hlt
pop
push
pop
repnz
mov
fsub
stc
cmp
add
jecxz
jne
js
xor
jns
addr16
adcl
xchg
push
cmp
mov
rcrb
sbb
insl
mov
sbb
stos
lds
shlb
dec
mov
jl
mov
jne
jle
imul
sbb
ret
sahf
mov
or
jmp
or
push
adc
gs
mov
std
inc
outsb
dec
jl
stc
sbb
mov
imul
sbbl
test
int
xchg
ret
cld
pop
negb
jg
repz
push
lahf
in
popf
shrb
inc
arpl
out
clc
into
mov
jmp
clc
movsl
push
andb
sub
movsl
inc
push
push
popa
jmp
cld
add
lea
cmp
lods
loope
icebp
jmp
pop
ficoml
cmp
mov
xchg
out
scas
xchg
fimull
pop
sarl
push
add
sub
push
sub
clc
incb
loopne
insb
add
mov
mov
pop
cld
jge
out
xchg
lds
mov
and
xor
dec
ss
dec
dec
jno
popf
jmp
mov
repz
pop
jge
into
aad
dec
outsb
in
loopne
rcrb
in
es
add
btc
jo
xor
bound
pop
sbb
inc
xchg
int
test
and
test
out
sub
xchg
sti
sar
mov
sub
loop
xor
pcmpeqd
call
ret
mov
mov
lds
xchg
inc
in
or
push
jns
lock
adc
mov
adc
jle
sbb
push
push
xchg
nop
mov
test
cmp
lret
sub
fisttpll
adc
mov
es
mov
fmull
sbbb
mov
lea
xchg
sub
inc
lcall
cmp
shl
scas
xchg
and
ss
pop
fs
aam
leavew
scas
jg
enter
loop
push
rclb
pop
int3
dec
mov
xor
add
out
out
bound
jmp
js
fdivrs
mov
subb
pop
out
movq
dec
fs
jge
dec
add
xchg
xlat
int
pop
pop
sub
addr16
outsb
insb
aam
mov
and
dec
or
dec
mov
lods
out
cmc
push
les
dec
jbe
jmp
clc
decb
or
jp
in
arpl
lret
sub
out
ficoml
pusha
xor
repz
push
sbb
in
mov
jl
cmp
push
ret
mov
arpl
mov
lahf
test
push
pop
fwait
cmp
xor
xchg
jl
lret
dec
test
cmp
cwtl
xchg
imul
inc
fcmovnu
out
push
xchg
pop
push
xor
ret
test
lcall
add
mov
xchg
lcall
sbbl
arpl
xchg
sahf
iret
dec
pop
mov
std
xor
gs
jns
dec
mov
mov
cmp
pop
push
cmp
ds
adc
fucom
mov
stos
adc
mov
xlat
xchg
adcl
lret
mov
pop
es
pop
xchg
cmp
mov
jae
jns
mov
push
cmp
rcr
ljmp
test
mov
cmp
jbe
hlt
shrb
pop
mov
xor
aaa
cld
sub
mov
xor
les
mov
push
mov
int3
xchg
jmp
ja
lar
daa
ret
and
int
push
mov
xchg
mov
mov
add
leave
xchg
add
into
pushf
jg
jecxz
push
xchg
push
shrb
fistpl
fsubp
iret
inc
inc
pop
mov
mov
mov
mov
outsb
mov
or
iret
xor
xor
insb
xor
sbb
rcrb
sbb
push
add
lcall
and
popa
jb
pop
pusha
xchg
xor
mov
cld
insl
or
jle
mov
add
cmp
jae
jbe
inc
cmp
imul
cmp
je
lret
loopne
dec
std
or
outsb
pop
out
loope
adc
ja
pop
les
mov
jecxz
test
mov
int3
int3
sub
add
mov
mov
fbstp
inc
nop
fcoms
leave
mov
leave
mov
inc
cs
sahf
push
lods
fstl
sub
push
movsb
stc
adc
jns
outsl
push
xchg
jno
sti
jp
ja
add
jae
cmp
lret
cmpsl
xbegin
pop
push
inc
mov
lds
push
sub
je
xchg
and
cmp
push
mov
mov
les
jns
pop
sbb
add
les
lds
mov
cltd
cmp
lods
lds
lods
cmpsb
lds
inc
sub
push
mov
fimuls
pop
xchg
loopne
adc
inc
lea
in
imul
lahf
xor
pop
lret
adcl
and
jge
mov
sbb
call
pop
adc
mov
das
sub
dec
out
dec
nop
out
insb
or
inc
jne
data16
daa
fildll
sbb
jge
jp
push
sti
inc
mov
into
mov
mulb
enter
push
sub
cmc
push
subb
cmp
cwtl
sbbl
cvtps2pi
or
and
bound
mov
pop
loope
cwtl
jmp
xor
pop
ds
ds
outsl
and
add
sahf
icebp
xor
outsb
out
sti
insl
jb
dec
stos
xor
dec
in
jne
cmp
pop
pushf
sbbl
xchg
adc
pop
xor
mov
lods
push
mov
push
outsl
cs
dec
cmp
ljmp
or
xchg
xchg
gs
cmp
sub
fldenv
fdivrl
jb
cmpsl
mov
test
push
outsl
shll
xor
ss
fsubrl
aad
push
adc
and
lahf
push
push
insl
scas
aam
clc
stc
out
movsb
pop
sub
es
inc
pushf
pop
xchg
test
mov
rclb
jnp
fstpt
pop
and
sub
cld
gs
out
rcrl
jl
lret
push
cmp
pop
push
pop
incb
ja
jno
test
or
xchg
push
add
pop
jmp
push
adc
call
adc
inc
mov
cwtl
sbb
cs
adc
jmp
pmaxsw
arpl
inc
lods
movsl
lds
sub
push
dec
lea
test
inc
jg
jae
cld
rclb
pop
cs
loope
jecxz
push
aam
shlb
xor
inc
fs
push
mov
roll
cmpsb
sub
push
mov
xor
xchg
inc
jle
mov
add
add
push
mov
pop
ret
into
mov
je
icebp
cmp
xchg
xchg
lea
test
xor
pop
sub
arpl
out
test
mov
orb
sar
and
xchg
push
sti
subl
idivl
outsl
int
inc
or
andl
dec
mov
sbb
insb
out
je
push
ljmp
shrl
stos
les
stos
cmp
scas
and
adc
xchg
hlt
xlat
or
mov
fxch
addr16
sub
pop
xchg
dec
mov
sti
push
jae
cmpsb
jno
or
pusha
sarl
push
xor
test
test
fwait
adc
ficoms
pop
xchg
rclb
lret
xchg
jo
in
cwtl
sahf
repz
movsb
xor
xchg
in
out
push
sub
cmp
or
mov
cld
insl
mov
inc
inc
clc
divl
and
or
cld
mov
fwait
and
pusha
cwtl
dec
nop
sbbl
outsl
add
mov
cltd
psubd
xchg
and
pushf
in
rorb
dec
data16
push
ljmp
rcr
sub
jge
push
and
or
sbb
xchg
mov
cmp
cli
xor
rcll
add
adc
xor
or
mov
mov
aad
out
int3
sbb
cld
sarl
pop
cmpsb
push
prefetch
adc
iret
ret
mov
cmp
push
outsl
aas
sbb
and
dec
cwtl
and
adc
outsb
cli
xlat
aam
ret
addr16
mov
movsl
xchg
test
repnz
repnz
repnz
ret
je
mov
jo
jl
cwtl
stos
mov
call
xchg
stos
jne
into
in
and
adc
push
std
inc
das
out
enter
mov
xchg
xor
imul
in
nop
fldt
bswap
jle
cmp
mov
int3
movsb
lahf
movsb
popa
and
mulb
ss
popf
jno
aam
sub
dec
ds
lret
cmp
mov
clc
enter
pop
inc
inc
inc
pop
mov
repz
dec
fldcw
dec
js
jbe
mov
mov
into
jmp
add
iret
sub
enter
and
mov
pop
insl
cltd
push
dec
outsb
iret
outsb
testl
pop
push
push
xchg
lret
push
insb
daa
loope
add
xlat
sbb
or
pop
cmc
pop
mov
jl
std
lret
mov
jl
mov
sub
aad
mov
inc
fisubs
mov
jecxz
xchg
add
mov
je
dec
rorb
and
push
mov
cmp
lret
pop
divb
rcll
xor
stos
or
or
mov
xor
fidivrl
lock
leave
cld
mov
xchg
xchg
push
mov
cmpsb
dec
jmp
xchg
adc
and
inc
mov
aam
and
orb
call
loope
imull
iret
insb
lds
xchg
dec
mov
cmpsb
xchg
mov
in
ja
cmpsb
arpl
or
loope
push
mov
data16
dec
ret
pop
cwtl
enter
ret
or
dec
dec
jne
shll
xchg
jns
xchg
xchg
in
add
mov
js
test
dec
insw
add
mov
jle
stos
mov
cmp
xchg
aad
mov
push
testb
fsubrl
cli
pop
cld
dec
dec
out
decl
call
mov
pop
ss
movsb
jb
or
stos
test
rcl
add
shrb
cmp
mov
push
stos
push
je
cmp
fistpl
sub
sbb
arpl
scas
pop
dec
xchg
test
clc
clc
pop
and
loop
fimull
and
icebp
and
pusha
test
fstps
jmp
jp
pushf
xchg
sahf
mov
sbb
test
xlat
mov
aaa
sub
test
aad
leave
into
std
cmp
fldl
mov
sbb
cmp
cltd
inc
pop
icebp
sub
jne
pop
inc
mov
xor
jmp
push
inc
xchg
out
fstps
mov
pop
ss
fcomi
mov
lods
add
cld
fisttpl
sbb
js
add
push
adc
int
xchg
push
xchg
mov
adc
adc
fstps
cwtl
test
daa
or
pop
push
pop
adc
pop
and
mov
jmp
mov
ds
jecxz
cltd
dec
jmp
pop
inc
std
ret
and
jnp
int3
out
adc
push
fstpt
aad
adc
in
adc
adc
jp
dec
lods
jmp
int3
lds
xor
sbb
inc
jge
mov
das
cmp
movsb
sbb
sub
cmpsb
fwait
xor
push
stos
in
sahf
jno
mov
lcall
sbb
popa
sub
add
push
cs
sub
cmc
cmpsl
aam
in
cld
enter
push
fsubl
or
cmp
daa
sbb
xchg
and
sub
jmp
decb
xabort
stos
mov
ret
push
lret
repz
repz
fistpll
in
cmc
and
xchg
jno
out
lods
mov
imul
loope
push
mov
fs
inc
scas
addr16
and
sbb
xor
dec
mov
shr
mov
cmpl
ja
mov
push
mov
enter
and
shrl
and
dec
adc
cli
push
pop
ret
mov
push
mov
add
lcall
inc
add
push
jne
lods
iret
pop
out
dec
fisubl
jecxz
lret
inc
push
pop
add
sbbl
jmp
jo
nop
jo,pt
xor
inc
pop
lods
loope
ret
jb
fwait
imul
or
push
test
mov
insl
push
inc
add
imul
inc
leave
and
addr16
jne
stos
mov
pop
push
pop
inc
sarl
mul
dec
xor
and
add
jg
cmp
out
push
dec
ret
add
pop
iret
xchg
js
les
mov
test
pop
adc
inc
aad
mov
loope
shl
dec
xchg
jno
scas
leave
add
and
jo
jge
js
imul
aad
push
outsl
stc
jge
bound
sti
gs
sbb
loope
test
outsl
xchg
xor
movsl
and
cmpsl
loope
mov
in
xchg
xor
jecxz
dec
fs
lret
lods
jno
mov
cmp
dec
jno
push
call
add
movsl
pushf
cmp
adc
xlat
aas
in
cmpsb
xor
add
lret
hlt
dec
add
int
sub
test
out
or
insb
sbb
push
fs
push
ffree
sahf
lock
movl
pop
je
pop
dec
mov
or
call
cmp
das
sub
adc
lods
ljmp
mov
mov
mov
and
xchg
pop
aad
lcall
lds
xchg
in
aas
repz
jecxz
sarl
nop
pop
mov
xor
arpl
rorl
pop
movsl
es
sub
cmp
subl
jae
stos
mov
inc
sbb
sbb
xor
jmp
lret
cmpsl
dec
shll
mov
push
nop
mov
imul
jb
lods
pop
pop
push
flds
push
mov
lahf
or
lods
test
in
andl
jmp
nop
pop
shrl
xchg
fmull
adc
into
mov
cmp
int3
xor
dec
fildl
test
push
adc
mov
sahf
xchg
dec
scas
mov
jb
in
es
add
xor
dec
dec
sbb
xor
out
into
inc
adc
popf
push
cld
xchg
ficomps
scas
sbb
aam
lret
or
mov
or
call
fucomp
mov
dec
shll
stos
sbb
pop
fistl
adc
add
jae
jae
mov
sbb
into
push
jns
cmp
loopne
dec
inc
adc
dec
lods
dec
mov
xchg
lret
sbb
jg
xbegin
subb
out
sbb
pushf
daa
push
shlb
cmp
push
fiadds
sbb
int
adc
xor
cmp
icebp
mov
rcll
rcll
push
jg
shlb
cmp
lods
mov
lods
mov
or
dec
pop
mov
pop
mov
das
dec
cmp
adc
adc
loopne
sub
xor
dec
add
pop
mov
mov
fisubl
mov
lret
lret
add
xchg
pop
cmp
xchg
sub
outsb
stc
outsb
push
sub
xchg
pop
jmp
lods
jnp
gs
popf
xchg
sahf
xor
and
testb
adc
jmp
daa
mov
rolb
movb
sbb
cmp
or
bound
push
xor
stos
jns
jne
lahf
dec
fimuls
orl
cmp
sbb
push
iret
mov
mov
cmp
jp
insb
dec
ja
ss
mov
fwait
mov
mov
test
jne
xor
pop
sbbl
lahf
xor
jecxz
addr16
jmp
mov
adc
xor
jnp
push
fimull
js
push
sub
mov
sub
rcrb
cmc
std
fimuls
mov
dec
orl
adc
add
pusha
daa
ds
jl
sub
scas
adc
mov
bound
xor
jecxz
xchg
pop
adc
test
sbbb
cmc
dec
pop
pushf
pop
mov
icebp
sub
cmp
inc
stc
pop
pop
enter
inc
push
cmp
std
push
or
jle
add
mov
dec
js
lock
aaa
jns
fs
mov
call
add
push
cmp
jle
daa
rcr
inc
mov
push
mov
and
push
dec
roll
in
dec
and
loop
cmc
xlat
stos
into
xchg
sub
cmp
lcall
outsb
jnp
mov
cmp
sub
aaa
adc
bound
jmp
and
dec
mov
int
or
xchg
loopne
dec
push
or
iret
cmpsb
inc
dec
cmc
push
stos
push
inc
mov
aam
mov
scas
in
xlat
mov
fmul
dec
cwtl
fcomps
scas
ret
xor
fists
mov
xor
aaa
xor
das
cmp
xchg
int3
xor
mov
leave
pop
mov
mov
in
push
add
jnp
and
dec
dec
loop
xor
outsl
je
mov
stos
pop
outsb
fcomps
shll
mov
cmc
les
jecxz
xor
mov
jo
xchg
fdivs
push
push
adc
mov
sub
scas
mov
mov
push
inc
neg
in
nop
sti
movsb
addr16
cmp
add
test
mov
fs
sbb
test
into
jns
mov
mov
sti
mov
sbb
jecxz
lods
sub
xorl
mov
sbb
adc
ljmp
iret
inc
lds
out
xchg
fnstcw
and
cwtl
jne
adc
cmp
mov
cltd
lds
aam
in
insl
and
fcom
mov
jne
inc
repnz
mov
mov
sbb
sbb
xchg
adc
mov
cltd
cltd
mov
lret
pop
or
out
cld
cmp
mov
jp
jns
int3
repz
stos
jb
cmc
pusha
pop
xchg
jne
mov
fisubs
adc
movsl
add
jl
adc
repnz
les
jo
or
sub
sub
or
shlb
fcmovnbe
push
sti
mov
nop
fs
out
mov
sbb
movsb
iret
jae
lret
and
lea
xlat
idivl
xor
push
cmpl
push
mov
lahf
pop
shll
call
push
pop
ja
stos
ret
xchg
jp
or
imul
test
cmc
icebp
mov
test
aas
mov
xchg
jp
hlt
das
ja
int
out
mov
out
les
inc
sarl
xor
adc
pop
sarb
xchg
ds
mov
jmp
inc
xchg
mov
add
repz
mov
mov
sbbb
push
push
outsl
cmp
inc
jle
push
mov
xor
out
mov
fs
scas
lret
insl
aas
shl
outsl
jae
cmp
or
push
jp
sti
xchg
mov
xchg
into
icebp
mov
test
fsts
imul
leave
mov
mov
stc
cmpsb
jp
and
jle
popa
push
sahf
jne
mov
mov
jne
ljmp
inc
es
sahf
mov
add
jnp
push
cmp
movsb
pop
mov
add
pushf
pushf
movsb
sub
inc
push
inc
jbe
orb
in
inc
popf
lcall
imul
lods
dec
sub
add
mov
insb
daa
dec
mov
push
pop
mov
adc
pop
nopl
mov
mov
je
pop
cmpsb
in
fidivl
ja
jbe
xor
push
imul
xor
in
cmc
das
inc
inc
pop
out
lods
shll
cmp
loopne
xchg
es
pop
out
in
out
aad
xchg
clc
cmp
jns
repnz
jb
in
push
lea
hlt
arpl
mov
scas
push
std
clc
loope
pop
imul
xorl
jnp
jmp
cmp
push
adc
mov
outsl
fsubrs
dec
mov
or
rcrl
movsl
inc
hlt
inc
or
minps
fdivrl
pop
fdivrs
push
dec
sar
movsb
xchg
in
stos
shl
jle
jno
add
lret
push
jmp
lock
arpl
fldenv
rcr
test
pop
in
dec
dec
cmp
mov
sbb
add
jns
out
xchg
jne
adc
push
lods
mov
lret
in
rolb
xor
inc
cmc
push
xchg
inc
pop
neg
inc
ja
adcb
stc
addr16
leave
jl
dec
aam
pop
outsl
xor
cmp
lock
pop
imull
push
stos
into
repnz
cmp
and
mov
mov
gs
or
sbb
inc
cmpsb
in
mov
sahf
sub
lret
lods
scas
mov
dec
dec
xor
daa
sbb
sub
shrb
loop
and
mov
cltd
arpl
inc
pop
or
xchg
push
outsl
pop
jbe
cmp
add
stos
in
out
pop
sub
push
rcll
test
jno
mov
lds
mov
in
mov
xchg
outsb
pusha
push
sub
mov
dec
movsl
mov
rcrl
and
insl
push
push
cltd
push
das
pop
jle
les
fwait
and
inc
jl
jg
popl
je
leave
orb
stos
repz
lret
test
fwait
mov
dec
and
or
ja
jge
test
inc
mov
or
aaa
fwait
lods
leave
imul
sbb
sub
inc
cwtl
mov
add
clc
cmp
push
mov
and
movsl
mov
out
int
imul
arpl
pop
test
jo
mov
cmp
or
lahf
leave
xchg
xor
in
out
add
pop
data16
pop
sub
lods
adc
jno
ret
add
je
lea
stos
test
adc
dec
out
push
sub
mov
test
fidivs
xor
test
lods
inc
sti
in
loop
xor
mov
push
and
pop
xchg
mov
lds
mov
sbb
and
cmpsb
xchg
js
lahf
cwtl
jb
lahf
mov
mov
les
ss
mov
sar
lock
push
addr16
call
in
aaa
inc
adc
mov
fs
dec
pop
and
or
jecxz
push
push
mov
lret
and
mov
mov
ret
xor
fnstenv
mov
xchg
mov
sbb
test
push
movsb
clc
insl
fadds
int
mov
ljmp
xchg
jle
repz
cwtl
inc
cmp
ljmp
test
cmp
sbb
ljmp
cld
inc
jne
add
sub
xchg
movsb
int
sbb
adc
pop
mov
icebp
test
sub
sbb
les
jno
adc
mov
jb
mov
popa
ret
push
sub
clc
je
das
outsl
mov
loopne
test
push
xlat
out
sbb
orb
pop
adc
mov
scas
enter
roll
jecxz
inc
dec
cld
pop
sbb
mov
pushf
or
sbb
or
aas
movsl
mov
clc
xor
push
and
pop
fsubr
cmc
mov
notl
cmpsb
sbb
mov
pop
hlt
aam
in
add
jb
push
sub
sbb
stos
cli
inc
dec
stc
sub
cwtl
mov
test
mov
test
dec
adc
sub
and
pop
cmp
push
jl
pop
jl
roll
iret
push
push
pop
in
push
mov
cmpsb
sbb
cmp
or
push
pop
inc
xchg
xchg
enter
sub
push
jecxz
and
sbb
inc
push
mov
jecxz
wrmsr
fs
inc
add
sbb
sub
mov
into
pop
pop
notl
out
push
testb
sbb
jg
andb
fstp
negl
das
out
or
cmpl
dec
ja
mov
inc
ret
ret
outsl
inc
cmp
lds
pop
adc
jbe
movsl
fs
cmp
stc
icebp
xor
daa
push
mov
xchg
dec
pop
push
bound
inc
dec
and
jne
dec
fs
cmc
jnp
test
aad
fs
outsb
mov
dec
add
mov
push
stc
dec
sbb
mov
add
popf
and
rorb
js
scas
pop
addr16
icebp
jecxz
push
inc
push
iret
icebp
fisttpll
aam
stc
shlb
sub
das
inc
setno
movsb
push
push
fisubrl
rcr
scas
mov
js
lea
in
iret
mov
arpl
dec
sub
jbe
out
in
inc
push
daa
mov
nop
rcrb
ja
repz
jns
mov
lahf
ror
and
shrb
subb
inc
xlat
leave
pop
sbb
adc
mov
adc
add
sub
divb
in
adc
push
arpl
or
fcomps
dec
repnz
sub
ss
stos
cmc
fstpl
aad
push
inc
inc
mov
and
or
loopne
push
lret
cmp
stc
mov
lods
mov
inc
dec
fcomps
js
mov
mov
cltd
add
in
dec
xchg
jl
pop
and
adc
sbb
loop
xchg
pop
cli
jnp
or
and
or
pop
scas
imul
test
ret
scas
enter
jge
out
rorl
sub
and
aam
push
rcll
xchg
cmp
xchg
ret
or
je
jbe
inc
loop
out
push
fcmovb
nop
into
xchg
test
insb
orl
leave
loopne
jnp
and
nop
add
rcrb
call
iret
ds
mov
sub
push
cmp
pop
fs
imul
cmpl
jg
jecxz
lods
sub
xchg
sbb
sarl
arpl
mov
jmp
pop
fidivs
clc
inc
mov
mov
test
repnz
pusha
mov
loop
out
test
push
inc
pop
shrl
jmp
xor
jbe
add
jmp
fisttps
cmc
arpl
cmp
int
fists
mov
jns
sbb
xor
mov
ret
rclb
cli
pop
xchg
jnp
push
js
xchg
mov
shr
movsb
inc
jecxz
jle
push
pop
sbbl
push
dec
fwait
mov
xor
js
jmp
mov
sbb
dec
pop
dec
sub
in
mov
fucomp
push
aad
mov
adc
lahf
rcrb
je
sbb
dec
fsubl
add
xor
sbb
ljmp
pop
add
bound
add
lock
in
ret
mov
cli
xchg
mov
and
ja
fimuls
sbb
cmp
out
add
nop
imul
sbb
sbbb
mov
lret
or
ljmp
std
xor
sahf
mov
adc
sub
fcomps
fwait
push
nop
sbb
fsts
mov
js
adc
shll
xor
call
sub
mov
sti
sbb
xor
sahf
rolb
aam
xlat
mov
xchg
in
loop
std
dec
or
cld
xor
mov
out
sbb
data16
mov
roll
test
fcomp
pop
push
sbbl
and
test
mov
fs
shrl
into
inc
xlat
iret
pop
pop
fildll
jge
push
sbb
adc
sbb
stos
mov
inc
sub
mov
call
push
sub
sarl
fildl
xchg
lods
inc
and
test
lahf
int
rcrl
add
movsl
aas
xchg
sbb
cmp
insl
and
test
mov
fildl
add
adc
jo
or
jecxz
pop
jo
lcall
push
inc
add
in
cmc
pop
dec
mov
dec
iret
loop
mov
sub
jmp
sub
sbb
popf
mov
add
xorl
inc
ja
scas
cltd
sbb
dec
add
mov
jb
leave
lods
into
std
popa
sub
jle
fdivp
adc
cmp
and
in
js
cltd
sub
xchg
cmp
adc
arpl
les
out
mov
mov
outsl
push
xchg
jl
in
call
pop
sbb
xchg
imul
xor
add
pusha
dec
repz
fwait
loop
mov
mov
xchg
dec
outsl
mov
test
add
dec
in
adc
ret
pop
xor
pop
scas
sbb
sbb
cmc
outsb
sahf
inc
subl
or
and
loop
addr16
cs
lods
fnstcw
orl
pop
loopne
mov
in
xor
popf
xor
pop
aaa
setle
xor
test
mov
into
cmp
dec
cmp
inc
and
sahf
ss
scas
adc
pusha
or
inc
dec
dec
fs
push
mov
addb
xchg
iret
fisubl
lea
dec
mov
lea
pop
add
xor
mov
ss
cmp
lcall
imul
mov
jbe
test
pop
mov
and
xchg
and
adc
inc
shl
std
test
nop
int
ret
push
and
sub
add
loope
add
mov
clc
lret
cwtl
inc
cmpsl
mov
pushf
fs
adc
daa
mov
daa
add
jne
cmpl
jae
imul
xchg
lock
adc
int3
das
and
cmp
rcll
jbe
add
ret
sbb
mov
daa
inc
enter
push
jecxz
adc
les
mov
mov
xor
inc
les
out
repnz
lret
mov
sbb
cmpsb
mov
sbbl
sub
fildll
ljmp
inc
pop
adc
mov
dec
out
in
stos
mov
loop
jo
int
loop
cmp
add
mov
sbb
jbe
call
fisubrl
inc
jmp
or
sti
jl
jg
fwait
addr16
lock
xchg
add
fdivrs
jl
or
or
leave
jno
xorl
sbb
add
cmpsb
test
out
jecxz
popf
repnz
or
jecxz
testl
test
les
es
cmc
add
int3
scas
loope
movsl
add
out
inc
or
rcrb
adc
in
or
sbb
in
int3
lea
fcompl
and
lahf
jge
adc
sub
add
or
insb
aas
cmp
lahf
rcll
cmpsb
pop
mov
cmp
stos
scas
repnz
mov
push
jns
push
xchg
popa
pushf
addr16
mov
jae
mov
mov
into
js
sbb
not
cli
mov
lcall
mov
cmpsb
lds
jmp
push
jo
xchg
test
lcall
dec
inc
outsl
or
movsb
or
fimull
fmull
xor
cmp
adc
das
insb
std
mov
cli
xor
hlt
mov
movsl
daa
fdivs
hlt
mov
enter
sub
popf
jne
or
add
mov
sbb
adc
imul
pop
mov
cmpsb
mov
add
mov
arpl
imul
jp
or
enter
xor
mov
repnz
sbb
push
and
daa
iret
add
rorb
xchg
imul
xchg
lods
aad
inc
hlt
mov
inc
xchg
mov
fstpt
pop
mov
data16
mov
mov
mov
dec
andl
push
nop
push
sbb
mov
testb
sub
pop
ljmp
xor
cli
xlat
inc
sub
mov
and
in
dec
mov
push
add
test
sahf
push
iret
in
xchg
nop
jmp
xchg
cmp
shrb
popa
mov
xchg
dec
aam
iret
aad
or
mov
jnp
js
cmp
jae
mov
ja
insl
rorl
adc
out
call
aad
ret
push
scas
push
push
lods
movl
cli
xor
or
mov
dec
roll
stc
or
cmp
mov
jbe
std
sub
arpl
fisubs
lahf
outsb
icebp
aaa
and
mov
dec
addr16
int3
clc
pop
repz
and
icebp
loopne
into
in
pop
test
jmp
test
pop
or
sub
add
ret
pop
cmpsl
jmp
push
das
addb
or
sti
js
fwait
out
daa
mov
in
call
test
xor
mov
pop
ljmp
inc
loope
sbb
push
in
jo
cltd
insb
xor
fcomps
jno
loope
fimull
inc
fwait
dec
les
imul
xchg
pushf
int
dec
lods
andl
and
or
and
sub
jp
pop
repz
add
xchg
pusha
adc
pop
mov
mov
mov
lods
pop
mov
push
xor
add
push
icebp
es
fstps
imul
cmp
repnz
inc
stos
das
adc
shlb
mov
stos
lret
es
lds
out
sbb
mov
jo
mov
mov
or
fmull
or
fucomip
push
push
xor
out
dec
mov
rcrl
leave
mov
add
leave
aaa
movsl
fistpll
sbb
pop
and
pop
les
mov
pop
mov
and
add
insb
inc
out
push
push
movsb
into
add
push
mov
ror
push
cmpsb
sub
sbb
in
cmp
xor
test
mov
andl
rcrl
into
sbb
jle
mov
push
std
outsb
inc
fdiv
jbe
loopne
pop
mov
or
mov
pop
jp
int3
xor
push
das
push
fnstsw
bound
dec
imul
add
xor
loop
sbb
stos
dec
dec
sti
mov
and
adc
jo
jnp
xor
mov
cmp
cmpsb
pop
mov
mov
push
pop
dec
sub
test
cmp
ljmp
add
ljmp
rcll
and
xchg
push
inc
and
ljmp
pop
add
dec
lret
in
outsb
sti
in
dec
hlt
fstps
dec
outsb
test
dec
mov
jecxz
dec
push
arpl
pop
push
xchg
fsubrl
push
cmp
and
pop
pop
adc
add
inc
or
add
mov
fistpll
mov
push
xor
sbb
mov
leave
pop
lds
shlb
dec
mov
jb
xor
out
inc
lret
inc
inc
std
scas
sub
sbb
int
mov
repnz
mov
pushf
sbb
lock
popa
cmp
bound
movsl
jg
mov
pop
xor
int
sar
ficomps
mov
adc
push
or
scas
xor
cmp
pop
enter
sub
jae
add
mov
push
adcb
mov
ror
jmp
mov
jb
out
mov
lret
inc
fstpt
xchg
lods
sbb
repz
push
inc
gs
jo
mov
test
fdivrl
cmp
stos
inc
fwait
dec
inc
popa
jp
data16
testb
lea
popf
in
lods
cmpsl
mov
or
out
xchg
fs
shlb
lds
aaa
inc
add
pop
imul
lret
cmp
js
dec
pop
stos
aas
iret
iret
aam
nop
cld
mov
push
push
loopne
fsubl
inc
test
add
mov
dec
jge
mov
and
or
stos
xor
cmp
push
out
fwait
sub
cmp
test
xchg
xchg
cmc
push
das
dec
and
jbe
test
mov
inc
adc
cltd
pop
jmp
in
std
imul
fistps
jge
popf
inc
movb
and
jbe
inc
lea
lods
mov
insl
or
sbb
add
push
lret
and
mov
pop
xor
testl
dec
push
jmp
gs
lret
popa
in
xchg
pop
push
cmp
mov
in
mov
or
or
je
and
lods
mov
addr16
inc
out
sbb
dec
fcompl
mov
sub
jl
push
into
sub
push
or
mov
mov
pop
sahf
stos
xorl
sti
lret
dec
dec
fs
out
push
adc
mov
sbb
call
movsb
jb
and
jae
jle
std
dec
jb
push
ds
pushf
cltd
sbb
push
mov
inc
decl
sub
mov
shll
mov
cmp
setns
dec
mov
mov
and
inc
jmp
jbe
imul
pushf
inc
iret
xor
ljmp
and
xchg
test
test
test
out
sbbl
inc
mov
int
pop
int3
das
negl
arpl
leave
or
jp
dec
in
add
cli
xchg
jb
lea
mov
cmp
in
sbb
insb
and
out
out
or
jns
push
xor
jecxz
jnp
loopne
mov
cmc
mov
cmp
jl
outsb
pop
inc
and
shr
and
xor
nop
int
add
mov
and
xor
rcll
jno
sqrtps
add
push
jns
inc
shrb
lahf
jecxz
push
std
jae
js
pop
cmp
jbe
dec
in
or
push
pusha
aaa
aam
rcrb
mov
icebp
leave
stc
jb
out
xchg
sub
fisttps
cmc
mov
aam
push
jle
mov
ret
stos
mov
jecxz
dec
outsb
push
jle
inc
out
out
cld
or
shrb
shll
or
add
insb
and
add
inc
test
sub
jl
dec
aaa
les
cli
into
outsl
xor
popl
mov
fstpl
dec
inc
les
jns
pop
and
inc
ss
jnp
mov
les
add
mov
adc
ror
cmpsb
push
xchg
enter
xor
xchg
xor
sbb
test
dec
mov
add
xchg
jle
and
bound
std
push
fcompl
xchg
or
lds
jne
mov
cmp
outsl
xchg
mov
packssdw
iret
outsl
mov
insb
add
aaa
fstps
lods
pop
push
addr16
loopne
pop
insl
cmp
cli
out
insb
ljmp
data16
xor
js
jle
pop
and
out
cmp
jmp
ret
xlat
hlt
call
adc
out
mov
pop
out
mov
les
jge
fwait
mov
shr
pop
pop
lds
call
aaa
push
or
sub
pop
and
scas
subb
cs
cltd
lret
les
sub
push
std
lods
sbb
jns
mov
xor
and
cld
mov
inc
xchg
pop
xchg
xchg
cmpps
insl
cs
sbbb
mov
rolb
es
loopne
lock
enter
cmp
adc
xor
sbbl
dec
test
cmp
in
cmp
imul
inc
jmp
mov
cmc
jecxz
int3
mov
inc
lcall
les
pop
inc
popf
mov
fldcw
inc
std
sbb
sub
std
add
push
xor
iret
mov
jge
mov
lods
lods
cmc
inc
xchg
dec
in
lret
in
fstpl
mov
hlt
je
add
jnp
fisttpl
inc
add
stos
shlb
jle
enter
mov
add
mov
mov
out
mov
adc
push
dec
data16
inc
push
adc
dec
inc
jmp
stos
cmp
pop
push
es
push
adc
xchg
shrl
lods
pop
daa
sbb
out
lock
mov
push
sub
fisubrl
testl
insl
dec
xor
test
cmp
push
out
dec
xor
cmpsl
movsl
sbb
cmp
aaa
lcall
jecxz
cmp
arpl
fwait
sbbl
mov
bound
aad
dec
xor
aas
xchg
leave
dec
jmp
aad
mov
add
sbb
in
out
insl
hlt
push
roll
insl
mov
js
jbe
sub
xchg
js
jns
lret
ljmp
loope
push
insb
xchg
sti
xchg
fisttpl
jl
adc
addr16
outsb
stos
push
fnstsw
decb
jl
daa
and
mov
sahf
aaa
js
sbb
lods
adc
jge
out
inc
mov
and
cmp
into
xchg
hlt
insb
push
std
insl
in
ficomps
lock
push
dec
mul
fsub
stc
test
mov
iret
or
insb
ficomps
stc
scas
mov
stc
les
mov
clc
adc
mov
push
jp
jo
inc
ficomps
fdivs
cmp
pop
and
mov
or
jo
fdivrl
lret
mov
hlt
push
xlat
std
pop
test
mov
mov
aam
push
loop
std
dec
pop
xor
test
sbb
and
test
inc
xor
xor
not
mov
in
dec
and
xchg
loop
pop
xchg
stc
dec
mov
xchg
int3
inc
cltd
enter
pop
fwait
mov
add
mov
and
lea
or
push
ret
pushf
movsl
push
cwtl
push
stos
pusha
push
cmpsb
idivb
xchg
jmp
sub
pop
inc
jbe
fwait
mov
sbb
ret
cmpsl
movsl
push
outsb
pop
icebp
arpl
push
cli
xchg
std
or
addb
fisttpl
test
sbb
xor
xchg
cmp
mov
sbb
jecxz
arpl
sbb
popf
mov
loop
int
out
shrb
add
fdecstp
scas
jle
pop
xlat
mov
lea
inc
mov
mov
outsl
or
push
in
mov
pop
push
adc
or
pop
test
sti
pop
jno
shlb
pop
outsl
fidivrs
lahf
cs
scas
data16
insl
xchg
inc
je
jb
sarb
fcoms
pop
std
sbb
xchg
adc
push
out
idivl
shrw
and
lock
cli
mov
nop
jnp
popf
xlat
adc
jg
push
outsb
inc
cld
in
jge,pn
cmpsl
hlt
gs
xchg
adc
pop
pop
pop
xor
xchg
test
movl
mov
push
das
sbb
dec
call
pushf
out
popa
jmp
mov
sti
out
add
add
sbb
cli
subb
repnz
aas
inc
sbb
add
insb
movsl
lcall
or
mov
inc
insb
pop
sbb
mov
jo
push
xor
leave
notb
rcl
sbb
add
cld
adc
fsubrs
sbb
std
mov
jno
lahf
lahf
faddl
jp
sbb
mov
jp
xlat
jl
xchg
xorb
push
sbb
and
mov
xchg
arpl
lods
stos
dec
sbb
jecxz
sbb
jle
xchg
xor
loopne
stc
lret
lea
add
dec
daa
test
pop
in
fstps
scas
adc
add
sbb
add
bound
adc
xchg
pushl
jo
scas
sbb
push
fsubs
or
sbbl
xor
sbb
dec
out
insb
rorb
dec
scas
jnp
pop
lods
addb
sbb
mov
xchg
cmp
sarb
nop
scas
mov
outsl
sub
jns
adc
cmpsl
loopne
mov
add
outsl
mov
loope
aaa
lods
sahf
lods
repz
into
mov
jns
mov
mov
mov
outsb
push
cmpsl
push
repnz
fwait
inc
push
inc
push
dec
lret
push
gs
or
sub
shlb
dec
push
add
ljmp
pusha
sub
add
cmpsl
fsubp
mov
and
lods
shlb
push
outsb
call
inc
xchg
loopne
arpl
dec
xchg
add
dec
sbb
insl
lret
jge
cmp
sahf
push
mov
bswap
and
scas
sub
sub
push
mov
inc
push
cld
sahf
push
aam
adc
bound
ds
xchg
int
inc
test
rcrb
js
jle
repz
pushf
fucom
jmp
or
loopne
mov
movsl
out
dec
stc
inc
adc
lret
test
ud2
loopne
jmp
xchg
std
aam
cmpsb
cli
xor
out
div
xchg
push
ret
push
outsb
xchg
mov
mov
cmc
popf
daa
test
add
nop
iret
pop
jl
mov
sar
lds
mov
add
ds
lods
or
jg
mov
cmp
movsb
mov
adc
add
shl
repnz
xchg
mov
out
icebp
xchg
aaa
mov
pop
scas
mov
inc
cs
xlat
push
imul
xor
or
sti
add
jp
mov
push
rcll
cmp
jmp
aad
test
push
mov
jmp
dec
mov
dec
out
les
pop
scas
out
nop
out
sbb
cmpb
pop
sbb
frstor
shll
out
jns
cmp
bswap
lcall
add
testb
mov
rcrl
inc
je
sti
push
jecxz
cli
inc
dec
lds
stos
push
stos
cld
cmc
sub
scas
jg
out
sbb
icebp
push
lcall
icebp
sahf
rolb
data16
hlt
ret
cmp
fs
rorb
ret
fisubrs
imul
int
inc
jo
mov
and
add
jnp
lock
push
adc
push
scas
xchg
cltd
mov
sbb
data16
andb
fcoms
mov
xor
mov
cmpsl
lock
outsl
add
inc
test
cmp
add
push
xchg
mov
cmc
and
dec
aas
jbe
xor
xor
xchg
or
adc
test
sbb
pop
popf
in
fisubl
push
pop
jmp
xchg
outsb
dec
gs
aaa
xor
xchg
ljmp
pop
xchg
push
test
jle
sub
aad
movsb
add
sbb
dec
or
and
jmp
out
rcll
clc
sahf
lcall
and
fstpt
pushl
fs
int
je
cmpsl
das
lcall
mov
mov
mov
mov
enter
insb
cmp
pop
cmpsl
adcl
pop
stc
popf
sbbl
pop
or
lods
jle
sub
jnp
lldt
mov
dec
ss
and
jl
mov
and
mov
and
rolb
mov
jbe
je
subl
add
xchg
movsb
mov
sbb
in
push
jecxz
repnz
ret
jle
jge
pop
push
mov
imull
int3
inc
ficomps
mov
mov
test
mov
push
xchg
repz
push
nopl
cld
pop
mov
jns
cwtl
mov
xchg
sbb
sub
xchg
push
aaa
push
lods
cmp
mov
jae
out
divb
rclb
leave
add
jnp
and
popa
mov
stc
push
jmp
jge
cltd
jecxz
and
lret
mov
mov
aad
sbb
xor
aas
outsl
or
xchg
pop
push
rolb
into
rcrb
jb
ficompl
adc
ds
mov
xchg
insb
cmp
jae
pushf
pop
sbb
or
rcrb
cmp
lock
xchg
jp
jns
dec
ja
cwtl
sub
icebp
push
adc
mov
xor
aas
cli
sub
pusha
repz
xchg
push
push
jmp
jl
pop
test
adc
loop
pop
sub
inc
jbe
or
fwait
test
inc
stos
lods
data16
loope
cmpsb
rclb
dec
mov
outsl
dec
xchg
ds
cli
lock
aam
mov
pop
fwait
pop
out
jl
adc
sbb
push
outsb
sbb
adc
inc
xchg
popa
mov
xchg
leave
jecxz
dec
and
frstor
xor
push
lea
cmpsl
dec
cli
mov
inc
jle
stos
lahf
sub
shl
ret
jecxz
into
inc
outsb
sub
xchg
cmpsl
popf
sub
ficompl
jb
xor
jmp
jle
out
sbb
pop
add
fwait
imul
pop
mov
xchg
cmpb
loop
mov
sar
imul
sbb
fisubs
or
add
push
jle
adc
xlat
movsb
pop
cmc
loopne
std
dec
push
xchg
jns
dec
hlt
lea
cmc
mov
dec
jae
jnp
xchg
ljmp
repz
lock
out
xchg
mov
fsubs
dec
mov
cmp
pop
mov
jae
jno
imul
sub
xchg
hlt
pop
cmc
xchg
push
int
lds
push
or
xor
xchg
out
mov
sahf
pop
xchg
pop
ds
mov
mov
pop
xor
xor
sbbb
popw
and
xchg
cs
jmp
sbb
xchg
ljmp
setge
sub
orb
push
outsb
loop
outsb
mov
cmc
pop
push
test
mov
ret
xchg
repnz
mov
lods
jmp
call
pop
jle
les
jg
or
or
inc
cmp
clc
in
int
mov
nop
rcrl
xchg
nop
sbb
fwait
mov
cwtd
fdivl
push
cmc
mov
xchg
shl
imul
mov
push
jbe
enter
in
into
jo
mov
jecxz
mov
dec
call
stc
scas
sbb
in
adc
push
push
lcall
mov
pop
je
xlat
test
dec
dec
cmp
in
mov
dec
mov
faddl
cmpsl
push
popa
daa
and
inc
out
shr
lcall
repz
clc
orb
ja
push
add
cmp
imul
pop
in
push
sahf
mov
add
mov
outsb
iret
fsubrl
sbb
sbb
or
aas
mov
ss
test
push
cmp
mov
pusha
push
aas
xchg
mov
or
lcall
mov
push
pop
bnd
enter
adc
insl
inc
dec
lcall
xchg
mov
mov
cmp
inc
enter
int3
sbb
push
sbb
pusha
fcompl
cmpsb
bound
les
xor
sbb
sbb
xor
adc
ret
jl
imul
dec
jmp
rcr
fwait
aas
daa
enter
fldt
mov
push
fdivrs
and
push
adcb
adc
cmpsb
std
jne
nop
cmp
je
idivb
daa
dec
xchg
enter
cs
mov
daa
js
cmpsb
sbb
inc
bound
nop
and
idivl
cmpsl
jnp
jb
divb
or
test
xchg
mov
mov
sbb
mov
inc
fstpl
or
sub
push
sub
iret
inc
inc
das
jl
sub
push
ret
mov
adc
test
push
mov
sub
xchg
ss
adc
fisttpl
mov
add
jmp
nop
pop
hlt
pop
shrl
push
popf
aaa
xlat
mov
sbb
sbb
faddl
imul
out
cwtl
xor
jmp
push
cli
sbb
or
push
sbb
lret
add
mov
stos
xor
lods
cwtl
jg
xor
fdivrl
bound
div
in
cmpsl
fld
test
adc
loopne
add
push
jg
add
lock
and
loopne
mov
jle
shrl
sbb
pop
scas
cmp
inc
stos
dec
cmp
add
push
pop
insl
popa
jg
sbb
and
out
test
add
cmpsl
mov
jmp
mov
stc
in
dec
and
pusha
mov
lds
push
out
insb
imul
inc
cmp
ret
pusha
sbb
or
cli
imul
repz
je
mov
push
mov
pop
sbb
ja
dec
inc
jns
sub
loope
push
and
dec
outsl
jl
dec
shll
push
scas
jl
jge
ror
roll
jecxz
lea
inc
jo
mov
sbb
push
mov
add
sub
add
xchg
aas
cli
mov
pop
in
in
adc
adc
pop
mov
cs
insb
adc
shrl
popa
in
dec
jae
fcmovbe
jl
and
add
mov
or
xchg
pusha
cmpsb
movsl
cmp
sbb
cmpl
popa
cli
out
mov
mov
jns
mov
jle
cs
rcll
mov
mov
dec
je
out
aad
jle
sub
mov
pop
dec
in
aaa
dec
cmpsb
aaa
orb
or
fstenv
roll
cmp
roll
imul
add
add
jl
push
nop
popf
in
sbb
out
fwait
mov
or
xor
xor
jb
sbb
cmp
addr16
xor
add
sub
arpl
mov
clc
int3
xor
clc
mov
push
mov
pop
shlb
movsl
js
test
sub
lods
enter
cmp
jno
dec
std
mov
cmp
push
not
scas
mov
jmp
dec
in
out
add
clc
mov
cmpsl
fsts
xchg
movsl
sbb
mov
adc
mov
jo
bound
out
aas
jecxz
push
mov
cmpsl
adc
mov
pop
pop
das
mov
test
ror
pop
mov
adc
ss
jbe
add
inc
xchg
xor
xchg
repz
pushf
jns
add
ds
inc
pop
in
outsb
in
or
test
test
and
and
sbb
mov
repnz
in
xchg
in
inc
push
pop
dec
dec
fs
push
mov
lods
xlat
sub
adc
xor
pop
rcpps
adc
mov
mov
add
adc
int
jmp
lods
add
push
xchg
adc
cmp
or
jno
add
mov
mov
mov
sbb
sti
lock
addb
in
cli
mov
loopne
jno
dec
mov
jbe
mov
das
fstl
push
ss
pop
adc
sar
leave
mov
pop
xchg
push
mov
add
loopne
mov
sub
fsubrp
xchg
dec
push
sbb
add
rcr
sub
jge
dec
jecxz
mov
test
inc
mov
push
mov
sbb
cmp
inc
add
mov
ret
popf
hlt
add
popf
adc
popa
lods
dec
mov
adc
push
sbbb
cmp
sarb
xchg
and
into
jge
push
movsb
jne
sub
pop
sti
push
push
std
adc
push
inc
mov
push
xor
mov
sub
daa
repnz
and
sub
lds
lret
aaa
mov
gs
ljmp
aam
call
dec
movsb
fdivrl
sub
push
cs
ljmp
xchg
jl
xor
fidivrs
or
dec
and
and
pop
dec
adc
sbb
adc
into
int
push
dec
mov
pop
add
pusha
cltd
sahf
lea
mov
add
sub
inc
cwtl
mov
lods
repnz
filds
lds
jecxz
outsb
push
sbb
xchg
inc
sbb
out
icebp
cmp
mov
mov
pop
sbb
enter
inc
xchg
stos
inc
dec
sbb
cs
lds
cmp
adc
jnp
cld
cltd
iret
jmp
ror
push
push
insl
adc
cmpsl
dec
sub
jle
jle
lods
cs
and
cmp
ror
scas
pop
sub
insb
loop
adc
jl
dec
ss
or
pop
aad
sbb
cli
inc
jl
jns
jb
bound
pop
add
daa
daa
fistl
nop
pop
dec
pop
mov
pop
xchg
sbb
repz
call
jo
repz
jbe
push
sar
cs
lods
and
ret
xor
jne
inc
inc
jecxz
add
and
push
call
scas
xchg
testb
jecxz
mov
mov
xchg
clc
repz
lds
daa
or
fimull
imul
push
add
mov
aaa
inc
loop
out
inc
push
lret
cmp
rcrb
or
cltd
or
jbe
fisubrl
icebp
cmp
dec
inc
js
stos
enter
push
mov
cmp
cs
js
push
cmp
add
dec
add
shrl
aas
insl
lcall
fsubrs
fiaddl
rorb
test
adc
pushl
pop
imul
rclb
mov
sbb
fsubrl
popf
repnz
insl
cs
out
xchg
xchg
stos
les
loop
push
fs
popf
test
jge
test
push
push
mov
pop
mov
fdivs
aad
inc
mov
test
mov
xor
mov
sbb
xchg
push
cmp
sbb
mov
inc
xor
xchg
fstpt
adcb
or
ja
in
pusha
cmp
cmp
in
in
add
sarl
xchg
adc
loope
out
cmp
mov
out
jl
push
shlb
mov
sub
aas
xor
fwait
xchg
dec
xchg
movsb
data16
pusha
xchg
or
pop
stos
dec
and
jge
lods
mov
repnz
add
out
lods
xor
repnz
cltd
ljmp
jmp
adc
into
scas
fisttpl
sbb
mov
jle
lcall
std
cmp
mov
insb
sub
and
lret
dec
add
or
rcrb
or
shr
cli
mov
imulb
cmp
inc
adc
scas
shll
adc
mov
out
push
iret
adc
xchg
popf
cmc
cmp
mov
push
int
aam
test
sbb
iret
jle
jbe
pop
test
inc
mov
in
arpl
jbe
mov
or
push
repz
push
pushf
xchg
cmp
cmc
push
mov
fbstp
nop
stos
insl
pop
dec
add
imul
lock
jle
jmp
jnp
cmp
ljmp
lcall
pop
filds
or
insl
iret
and
add
aam
inc
push
adc
pop
pop
lods
sbb
mov
bound
push
adc
movsb
xchg
dec
pop
loope
mov
mov
xchg
cmp
aam
adcb
pcmpgtd
xchg
jns
dec
leave
xchg
shrb
jecxz
shrl
stos
aad
sarb
mov
out
xchg
mov
rcrl
jbe
mov
jmp
cwtl
imul
sbbb
xor
push
pop
aas
mov
test
jns
mov
cmp
pop
in
jnp
inc
loope
ret
dec
mov
shr
ljmp
fisttpl
xchg
push
or
mov
aam
out
push
fs
mov
jecxz
int3
adc
dec
or
sbb
repz
mov
mov
xchg
mov
std
or
inc
leave
pop
sbb
and
sti
fistps
fisubl
cltd
aaa
jne
daa
inc
pop
inc
jmp
xchg
out
test
mov
test
aam
push
arpl
cli
dec
push
pop
aas
mov
jp
mov
ja
sub
mov
add
lds
dec
fistpll
cmpl
lret
push
cmc
mov
xchg
mov
notl
cmp
imull
or
sub
and
roll
sahf
and
push
or
sbb
xchg
sub
cmp
mov
or
ss
hlt
movsb
adc
and
andl
add
jb
push
lret
mov
shl
cld
sbb
cmc
outsb
ljmp
pop
arpl
ljmp
mov
mov
xor
xchg
pop
rcll
in
pushf
out
fcomp
lret
pop
out
popf
jge
cs
lcall
fiadds
inc
aaa
jmp
stos
push
mov
mov
or
inc
cmp
xchg
outsl
clc
adcl
jbe
push
ficomps
mov
or
mov
xor
lcall
iret
sahf
test
cmp
inc
xchg
xchg
out
and
fstps
out
inc
push
xor
inc
movsl
fidivrl
xor
mov
sub
cmp
ljmp
xchg
lock
cmp
lea
fisttps
sti
pop
rcrl
cmp
or
lock
xchg
dec
fwait
loop
test
out
jl
mov
outsl
cmc
leave
loop
leave
xor
ret
js
push
lret
mov
popa
fcmovnu
movsl
dec
icebp
stos
jmp
es
cli
repz
ss
mov
xchg
mov
out
lahf
out
aas
js
ss
push
or
xor
inc
inc
leave
cmp
dec
in
or
into
push
jecxz
push
rorb
stc
adc
pusha
lods
aad
jecxz
dec
sub
testb
sub
frstor
call
sbb
inc
mov
ljmp
or
xchg
dec
outsb
cltd
inc
mov
or
ja
jmp
pop
fistps
mov
add
fcoms
push
shrl
lahf
push
cmp
pop
rol
dec
mov
pop
adc
cmpsl
test
cmp
lea
adc
addr16
inc
cmpsb
pop
dec
xchg
in
and
adc
outsl
xor
adc
jns
add
enter
in
xor
es
cmp
or
push
dec
lcall
xor
inc
inc
jecxz
inc
inc
shlb
aaa
fcmovnb
cli
lea
hlt
push
shll
add
cwtl
jae
in
sub
dec
lret
popf
sbbl
push
and
push
inc
in
cmp
ljmp
fnstsw
ss
and
add
mov
and
popa
fidivs
pop
clc
pushf
fmul
jmp
or
dec
stos
inc
outsb
shl
mov
movsl
jmp
xor
inc
aam
sub
sub
dec
xchg
adc
sub
mov
das
dec
mov
lahf
lock
sbb
jno
adc
aam
mov
push
cmp
loope
mov
jno
push
mov
cmc
sbb
outsl
mov
adcl
das
fstpt
cmp
sub
ffreep
iret
sbb
in
and
jno
stc
xchg
jmp
jnp
and
push
push
fs
test
jge
std
dec
in
lret
test
loopne
xchg
mov
test
sti
loop
shll
into
cld
add
loopne
xor
adc
sbb
push
lds
hlt
inc
inc
fadds
arpl
lods
nop
push
dec
outsb
pop
jbe
push
fstps
inc
dec
mov
add
mov
ret
es
outsb
je
pop
xchg
cmp
adc
add
movsl
ja
shlb
inc
lcall
lods
mul
ret
mov
cwtl
pusha
lret
das
push
dec
je
dec
addr16
test
cs
and
cmpsb
lcall
cmp
cmp
cltd
xor
sbb
pop
mov
mov
push
pop
fcmovnbe
or
lods
test
mov
sahf
push
push
test
orb
jl
dec
ucomiss
lods
sbb
cli
and
push
lods
inc
jae
pop
adc
add
dec
fildl
jg
cltd
fsubr
xchg
fiadds
rcll
mov
loopne
enter
mov
mov
push
leave
mov
jl
ja
outsb
sub
hlt
or
cmp
cmp
inc
sahf
test
pop
aas
fildl
test
inc
jbe
jns
adc
adc
pop
cmpb
jl
test
cmovp
in
push
out
sbb
dec
fs
xlat
pop
mov
sbb
push
shll
pop
add
and
pop
cmp
ljmp
scas
mov
push
testl
ss
or
pop
mov
addb
pop
add
leave
jb
push
sbb
dec
lret
rcrb
mov
repz
sub
lds
xor
mov
add
mov
call
mov
popf
mov
pop
out
lret
mov
call
lods
fidivrl
fwait
sahf
pop
stos
pushf
or
xchg
lea
cmp
add
movsb
pop
push
mov
cli
daa
fs
jne
add
imul
pushf
loopne
adc
pop
rorb
mov
pop
mov
and
jge
shll
test
mov
pop
shr
ss
cmpsb
xor
stc
sarb
dec
mov
jb
scas
cmpsl
in
add
xchg
mov
sub
sub
jo
xor
sbb
call
lcall
aaa
push
fcom
add
rorl
imulb
icebp
xchg
mov
push
xor
movsl
stos
int3
insl
jne
test
mov
mov
outsb
pop
fiadds
cs
rolb
adc
mov
xor
push
inc
push
std
jge
out
cmpsl
mov
out
pushf
jmp
fidivl
lret
push
and
cmovge
dec
jp
out
and
jno
push
jb
lea
das
out
mov
es
ret
cli
xchg
lcall
pop
data16
daa
mov
sbb
dec
ret
jg
inc
imul
sbb
repnz
scas
xor
pushf
mov
cmp
ret
movsb
push
push
shl
in
jmp
out
pop
dec
loope
jo
lret
lcall
cmp
mov
add
test
enter
or
mov
mov
ja
xor
sahf
mov
mov
pop
inc
xchg
adc
fidivl
adc
adc
test
mov
aad
test
leave
inc
pusha
or
push
fxch
xchg
test
pop
loopne
push
cmpsb
fdivrs
mov
sbb
insl
lcall
aaa
cmp
lret
adc
jl
xorl
sbb
push
lods
test
js
adc
jb
push
ss
or
or
push
gs
fdivl
fldcw
push
loopne
and
sahf
sub
aaa
std
jns
setle
lret
scas
in
jnp
mov
ds
sbb
stc
loopne
adc
sbb
test
iret
and
sarl
cmpsl
scas
pop
sbb
lcall
fidivl
mov
imul
jb
and
fucomp
aaa
daa
das
cwtl
sub
pop
pop
lcall
mov
into
pop
and
pop
jmp
mov
data16
pop
je
dec
mov
adc
sbb
in
jge
test
xor
xchg
fiadds
fs
sbb
push
add
rcll
mov
mov
and
mov
sahf
sti
in
mov
lds
add
dec
cmp
lcall
or
add
test
test
xchg
push
loope
inc
outsb
jno
push
adc
xchg
int
push
ret
jle
loope
movsb
fwait
popf
in
xor
arpl
or
fstpl
jge
sbb
jns
mov
imul
jmp
mov
push
mov
test
pushf
ljmp
add
mov
imul
fs
sbb
dec
divl
dec
pop
mov
mov
xchg
mov
mov
inc
inc
or
outsl
or
jnp
jmp
popf
stc
sahf
cmpsb
hlt
sbb
in
mov
pop
or
mov
subl
jnp
roll
orb
cmc
mov
sub
enter
aas
inc
mov
xchg
bswap
sbb
xlat
dec
dec
stos
pop
cmc
cltd
pop
jge
popf
mov
sahf
fsub
lret
push
mov
in
pop
ds
xchg
das
fbstp
std
cwtl
push
sahf
and
or
ljmp
xor
pop
inc
cmp
iret
mov
dec
cmp
jb
mov
push
ss
mov
or
push
imul
insb
add
xor
adc
add
inc
pop
and
sbbl
inc
mov
mov
cld
into
lds
mov
ficoms
jno
xchg
mov
outsl
pop
movsb
sub
sarb
or
out
push
jl
js
insl
lret
pop
imul
dec
lcall
scas
jg
mov
test
push
lods
nop
lods
in
int
shlb
push
into
fidivrs
xchg
lret
sbb
xchg
xchg
popa
or
roll
sti
lret
jbe
mov
sti
sbb
test
push
xchg
sti
fldt
push
mov
ds
sbb
test
fdivrs
clc
pop
fmull
aam
shll
outsl
popa
push
and
clc
sub
ret
xchg
int3
jb
sbb
or
insl
lahf
mov
dec
xchg
imul
adc
test
inc
mov
aas
adc
push
nop
pop
push
sahf
inc
xchg
jno
data16
movsl
push
pop
call
push
enter
fidivrl
insl
mov
fbld
pusha
ljmp
ret
jo
mov
add
int3
and
add
adc
mov
cmpb
movsl
jl
pop
enter
fwait
xchg
dec
pop
out
xchg
imul
jmp
jno
pushf
into
or
cmpsl
mov
push
push
jp,pn
int
int
inc
push
inc
mov
test
mov
rcrb
out
cmp
mov
sub
inc
push
xor
and
dec
lea
jmp
adc
xchg
scas
lcall
popa
fs
sub
popf
dec
in
push
in
test
fists
jns
decb
jno
mov
push
cmp
dec
or
test
inc
cli
mov
mov
jnp
jns
or
jnp
movsb
lret
outsl
add
call
clc
inc
mov
pop
sbb
pop
pusha
mov
and
lds
mov
es
je
cs
cmpsb
jecxz
push
lds
pop
cld
hlt
xchg
or
jnp
mov
imulb
adc
sbb
aas
iret
int
add
or
nop
add
jae
jnp
rorl
fs
shll
jge
push
add
insl
imul
aam
push
push
jb
jae
add
mov
roll
cli
push
enter
sub
and
mov
lret
testb
repnz
fbstp
addr16
fmull
mov
and
ljmp
sbb
adc
sub
scas
xchg
fsubp
push
pop
jecxz
outsb
and
push
ja
movsl
inc
dec
arpl
mov
adc
inc
xor
inc
cltd
dec
lahf
iret
gs
sahf
mov
loop
loope
hlt
pop
mov
fs
dec
jge
imul
mov
sub
push
push
stos
loop
mov
add
es
cmp
sub
fsub
adc
sahf
dec
testb
lret
adcl
pop
cli
and
fwait
iret
cld
lods
cmp
mov
insl
aam
js
test
and
xor
xchg
sbb
sbb
cmovle
loopne
popa
leave
adc
and
cmp
pop
lret
sub
and
jbe
pop
mov
sub
lret
xchg
movsb
fdivrl
push
dec
sbb
and
out
nop
loope
inc
sbb
inc
stos
jnp
adc
xlat
enter
test
addr16
mov
icebp
ljmp
sub
inc
rolb
lret
pop
lahf
cmp
enter
cwtl
ror
rcll
aas
mov
mov
jl
test
sbb
dec
xchg
xchg
pushf
add
fs
dec
rorb
sbb
hlt
mov
je
sub
mov
adc
xor
lcall
push
in
cmc
test
jo
pop
aaa
scas
ret
sbb
sarb
fbstp
pop
and
call
pop
int
mov
add
mov
clc
aad
stos
sbb
imul
ljmp
mov
test
pop
inc
mov
dec
je
xorb
xor
add
out
je
aam
stc
mov
adc
add
js
or
scas
aam
fwait
xor
xchg
data16
cmpl
mov
fsubs
and
cwtl
dec
sub
insl
das
adc
pop
cwtl
push
lea
clc
adc
cmp
push
fbstp
xchg
jl
inc
mov
jns
xchg
loopne
cmp
mov
scas
stc
rorl
inc
leave
push
mov
mov
add
sbb
clc
mov
adc
stc
adc
popa
inc
in
int3
jbe
jecxz
xchg
outsb
clc
test
mov
mov
repz
push
and
inc
or
jne
dec
inc
inc
js
pop
inc
lret
dec
pop
movsl
and
push
outsb
je
jg
xor
fwait
lods
ljmp
xchg
das
int
sub
rcl
sub
aaa
pusha
jp
sahf
les
out
cwtl
pop
and
or
xchg
ds
xorb
daa
push
fwait
dec
popf
xchg
inc
andl
loope
push
or
adc
xchg
repnz
push
push
cld
fnsave
dec
test
jg
pop
cmp
int
add
xchg
cltd
dec
push
fwait
out
jle
ljmp
test
pop
or
mov
sub
adc
jo
fdivs
iret
pop
pop
jecxz
lret
out
repz
pop
push
fstpl
repnz
xchg
cltd
and
xchg
lcall
popa
outsb
cltd
in
stos
bound
pop
divl
fs
mov
fsubrs
mov
lahf
scas
mov
aad
or
cmpsb
rol
xlat
stos
dec
mov
xchg
push
sub
and
xchg
cmp
insb
int3
mov
loopne
xlat
xchg
add
and
xchg
inc
and
insb
fs
out
pusha
xchg
sbb
test
out
call
and
jl
adc
push
xor
mov
xor
jns
xchg
dec
movsb
lahf
test
loop
jbe
sub
xchg
or
push
dec
sbbb
test
mov
sub
add
test
jne
insl
mov
stc
in
xor
notl
es
cmp
int
les
xchg
aad
ljmp
into
lcall
cs
imul
lea
clc
inc
sti
xchg
mov
addl
mov
in
es
xchg
xchg
popf
lods
jno
int
in
int
enter
dec
leave
xor
popf
ds
jae
sarl
incb
pushf
test
cmc
adc
adc
jge
cltd
in
cmpl
sahf
jnp
repnz
popf
jg
or
or
mov
cmpsl
adc
pop
sbb
fldl
repnz
inc
mov
or
pop
mov
repz
aas
dec
test
mov
jns
sbb
pop
cmpsb
rorb
push
lds
movl
lea
xor
pop
sbb
fcompl
aam
test
jbe
jns
stos
mov
xchg
es
loop
sbb
dec
jo
adc
testl
pop
loop
adc
push
std
rcl
loope
in
add
or
negl
fwait
pop
ror
movsb
nop
sbb
xchg
push
mov
mov
or
fsubl
cltd
add
and
dec
in
imul
push
std
icebp
pop
lret
sub
add
mov
inc
pop
xchg
add
sahf
mov
or
push
xchg
xor
aas
push
cmpsl
ja
pop
and
icebp
sti
iret
ja
scas
imul
and
jecxz
hlt
dec
testb
mov
incb
neg
int3
jmp
out
addl
insl
jl
nop
push
pop
push
mov
xor
out
adc
pop
and
cwtl
mov
jge
ljmp
push
mov
or
cmp
mov
pop
movsb
sbb
mov
sub
dec
in
in
adc
mov
and
dec
mov
js
inc
orl
popa
faddl
enter
test
cmpsl
mov
mov
lcall
cmpsb
enter
aaa
arpl
sbb
xchg
xchg
int
sub
scas
push
mov
inc
or
fcoms
das
lret
std
outsl
mov
call
shlb
push
sti
mov
sbb
lods
aam
icebp
jle
mov
iret
mov
dec
fistpl
lds
and
cwtl
lcall
je
or
mov
dec
iret
pusha
sub
and
pop
push
test
adc
adc
ret
enter
cmpsb
adc
cmp
imul
pop
aam
mov
ja
and
iret
out
adcl
hlt
andl
lea
push
orl
jmp
cmpsl
rcrb
pop
adc
ret
pop
sbb
int3
sbb
xor
cld
pop
stos
inc
xchg
js
arpl
sahf
mov
fidivrs
pushf
mov
inc
jle
or
cmpsl
sbb
mov
hlt
inc
add
cmp
dec
sub
hlt
aad
pop
cmpl
roll
cld
jb
mov
ds
popa
cmp
mov
add
push
fsts
adc
aad
xlat
aas
push
add
inc
or
cld
push
jo
push
or
xchg
cmpsl
dec
inc
test
fmull
and
xchg
out
fwait
cli
leave
xor
test
insb
cmpsb
fcomp
or
loop
xor
addr16
aam
xor
mov
mov
sti
pop
cwtl
lds
add
sti
mov
inc
mov
dec
fisubrl
sub
loop
fwait
sub
shll
mov
test
aad
dec
ds
push
sbb
mov
sub
mov
in
mov
xor
ror
mov
test
jnp
std
sub
popf
mov
sbb
nop
out
mov
push
imul
or
test
jg
in
icebp
daa
push
add
test
cmp
jmp
xchg
mov
jnp
adcl
or
cmp
and
sbb
or
ret
enter
or
add
xor
lcall
std
mov
cmp
imul
cmp
inc
sbb
mov
imul
bound
aas
push
ss
mov
movsb
pop
dec
out
ja
mov
outsl
data16
mov
jl
shrb
fiadds
int3
pop
sub
pushl
push
outsl
icebp
scas
xchg
aad
adc
and
rorb
andl
inc
movsl
mov
and
mov
xchg
cmp
movsb
data16
sub
cwtl
mov
clc
mov
xchg
enter
inc
mov
stos
mov
and
aas
scas
push
sbb
mov
test
mov
jnp
push
in
cs
push
mov
inc
andl
pop
adc
jp
xchg
push
mov
stc
hlt
push
cwtl
jge
nop
es
push
mov
jo
jns
push
jge
lret
mov
inc
or
pop
or
jl
lret
out
or
inc
cmpsl
add
roll
test
fisubrs
fnstcw
mov
arpl
sub
jns
lds
cmpsb
aad
and
pop
fdiv
xor
sub
dec
sbb
dec
stos
cs
sub
lock
jle
add
xor
xchg
bound
push
in
xor
aad
xor
mov
ret
es
cwtl
shrl
cmp
enter
test
mov
xchg
pop
inc
bound
and
adc
jg
fsubl
xchg
inc
test
and
loope
int
outsb
mov
dec
leave
jae
inc
or
cmp
mov
lret
inc
cld
sbb
cli
fistl
lock
adc
push
adc
mov
push
mov
out
dec
mov
mov
pushf
add
xchg
sub
dec
mov
mov
push
ret
xchg
pusha
jo
or
stos
push
mov
jl
and
imul
ret
xor
in
repnz
jge
ds
push
mov
jle
in
xor
push
sbb
xchg
xlat
imul
jne
xor
stos
cmpsl
sbbb
sahf
sub
lds
icebp
bound
jns
pop
rcl
dec
push
aas
cmp
dec
int3
mov
in
sbb
cbtw
lods
inc
enter
add
cmc
adc
inc
js
dec
aad
shrb
mov
ret
inc
ds
lock
hlt
mov
xor
rcr
adc
mov
and
push
gs
jo
sbb
push
xchg
inc
js
idivb
mov
sub
xor
das
pop
decb
push
rolb
push
cmp
inc
jmp
fs
adc
and
aam
push
jno
shrb
dec
out
push
dec
aaa
push
fwait
inc
fmuls
cs
fwait
xchg
in
punpckhdq
mov
add
push
arpl
push
rorb
pop
jle
xor
and
inc
jb
xchg
arpl
scas
jnp
rolb
jb
cmc
int3
xor
mov
pop
daa
enter
pop
xchg
mulb
xor
inc
cld
push
lock
push
adcb
xchg
xchg
sbb
fmul
add
sub
scas
inc
testl
scas
pop
inc
sub
mov
scas
adc
int
inc
xchg
push
cld
orl
mov
shll
das
js
adc
ss
mov
add
inc
lock
fcoms
cmp
bound
and
xlat
fsubl
int
jmp
stos
adc
push
cli
rcl
sti
iret
adc
xor
mov
mov
push
scas
and
loope
mov
sbb
out
rcrl
pop
mov
and
cwtl
push
add
jae
je
or
sbb
jnp
scas
adc
add
xor
xor
das
dec
jbe
dec
jg
es
sbb
jb
faddl
push
insl
xchg
fisttpl
pop
sbb
cmpsb
daa
or
aam
mov
or
sti
cltd
adc
and
ja
inc
enter
jge
daa
and
icebp
ret
pop
adc
mov
scas
push
daa
subl
and
sti
mov
pop
shrb
inc
xor
out
mov
pop
mov
loop
push
and
fs
dec
int
xchg
sbb
out
jge
aas
pop
ret
test
inc
mov
iret
inc
and
mov
xchg
out
cli
mov
sbb
imul
cmp
sub
stc
sti
jnp
sub
hlt
test
daa
xor
push
push
clc
inc
enter
and
arpl
cwtl
js
sub
fstpt
dec
sub
and
ror
scas
pop
imul
roll
bound
adc
mov
ret
les
adc
cltd
jbe
inc
sub
js
mov
dec
sub
mov
mov
es
adc
push
mov
jmp
mov
addr16
pusha
addr16
cmp
insb
enter
dec
sbb
mov
loop
adc
jno
mov
fisttpll
jge
les
jne
out
adc
lret
js
sahf
pop
push
cltd
mov
gs
hlt
xor
out
push
jnp
lahf
xchg
mov
xor
nop
decb
xchg
jmp
sbb
cmp
clc
jbe
mov
daa
inc
adc
sbb
mov
dec
push
subl
into
les
push
pop
pop
xchg
add
cld
lea
xor
adc
dec
dec
push
out
jecxz
add
adc
or
rclb
shl
jg
fidivs
scas
push
inc
push
sahf
xchg
mov
sti
cwtl
sbb
add
pop
enter
pop
dec
stc
ljmp
pop
mov
push
dec
insb
push
out
xlat
sbb
sub
das
sbb
loopne
test
in
clc
inc
iret
ja
out
les
pop
loop
sub
push
fnsave
popa
lret
mov
repnz
xchg
sub
sbb
xor
notl
push
lea
and
gs
jb
or
mov
xlat
shll
dec
push
test
outsl
sub
jo
mov
les
and
xchg
pop
lods
pop
fdivrp
xor
daa
mov
sub
inc
daa
dec
icebp
leave
imul
popa
sub
jnp
fimuls
jb
or
inc
sub
inc
sahf
aam
sub
ljmp
pop
shll
sub
mov
sub
in
aaa
xor
movsb
fucomp
cmp
insl
push
aam
arpl
in
adc
xchg
jo
fisttpl
imul
imul
dec
push
iret
mov
and
lret
xchg
test
pop
ljmp
in
mov
sti
mov
pop
sub
aas
int
outsb
lret
popa
cmp
sbb
dec
pop
out
pop
dec
pop
xor
mov
adc
mov
test
in
or
push
stos
dec
rcrl
loopne
and
sbb
in
sub
dec
add
pop
jmp
xlat
add
subb
add
push
in
arpl
add
mov
jns
stc
sbb
insl
cmpsl
mov
das
pop
xchg
nop
negb
mov
pop
scas
dec
neg
xchg
sbb
mov
and
imul
test
repz
adc
mov
pop
lods
mov
pop
xor
jmp
sti
and
pop
scas
jb
xchg
cmp
fcmovbe
outsl
hlt
mov
fiaddl
sub
jg
mov
hlt
and
mov
sub
mov
pop
fildl
mov
push
and
cmp
stc
das
in
xchg
shll
mov
xor
inc
jl
dec
pop
xchg
cmp
jne
movsb
jmp
aad
movsb
jle
insb
push
pop
data16
mov
ds
popf
pop
cltd
sbb
insl
xlat
mov
inc
inc
or
sub
shrb
lods
pushf
sub
xchg
popf
ret
push
iret
xchg
pop
jnp
out
loope
and
call
imul
scas
cli
mov
repz
in
test
jge
xor
fs
lods
lods
push
adc
pop
pop
mov
mov
ffreep
js
jle
jecxz
jg
imul
ss
cmp
push
or
pushf
stc
dec
sub
cmp
ja
gs
out
cld
xor
dec
xor
aam
testb
mov
sub
inc
test
test
pop
fcomi
fsubrl
icebp
push
lcall
mov
mov
mov
es
shl
mov
out
push
dec
mov
adc
movsb
jmp
test
loopne
lea
adc
adc
and
or
sub
xchg
push
mov
mov
hlt
jl
adc
arpl
jno
fstpt
xlat
aaa
out
pusha
popl
lret
and
and
cltd
nop
pop
push
jmp
les
pop
inc
movsb
inc
xlat
and
mov
jae
in
pop
nop
imul
divl
inc
inc
mov
sub
mov
mov
sub
jbe
xchg
cwtl
imul
movsl
rclb
ret
mov
mov
sbb
lcall
push
or
dec
mov
in
dec
into
les
push
cmp
jg
adc
lods
js
jecxz
jge
push
pop
jb
push
sub
pushf
enter
adc
shrb
jg
fsubs
or
icebp
movq
jle
repnz
xor
js
push
repnz
shll
ds
and
mov
out
xchg
out
pushf
adc
lahf
fimuls
in
bound
adc
jp
test
mov
hlt
dec
out
and
pop
out
icebp
jno
dec
jne
pop
std
popf
addb
dec
out
cwtl
adc
pop
outsl
sbbl
movl
xor
into
sbb
loopne
dec
ficoms
dec
mov
lret
and
cmp
outsb
dec
push
hlt
jp
cmp
loopne
mov
aad
or
cmc
dec
push
or
or
push
add
outsl
mov
xchg
fs
jecxz
aas
push
lods
xlat
movsl
and
jp
jl
in
and
mov
lea
dec
mov
push
cltd
jge
stos
shlb
insl
aad
xor
icebp
pushf
mov
xchg
adc
fimull
xlat
mov
xor
sub
pop
fidivrl
dec
into
add
add
ds
pop
faddl
lahf
es
ss
and
add
into
iret
sub
cmp
pop
lods
sub
xor
xchg
in
sub
dec
jg
pop
mov
add
cmpsl
pop
enter
ja
mov
add
stos
das
pusha
add
fwait
inc
push
sub
ret
icebp
xor
pop
repnz
js
sub
push
es
xchg
lock
mov
ljmp
cld
lods
or
xchg
pop
push
imul
pop
popf
jp
sbb
push
cmp
mov
push
xor
ret
sbb
pop
fisttpl
iret
sbb
pop
dec
iret
cmp
mov
xchg
out
add
mov
jno
stos
mov
sub
repnz
jp
dec
dec
and
mov
mov
addl
jmp
adc
mov
es
push
sarl
push
ficompl
and
dec
and
sub
push
cltd
pop
rcrb
loope
cmp
dec
mov
out
dec
and
lods
add
aad
lcall
inc
dec
inc
inc
mov
jns
sub
mov
mov
iret
sub
cmp
xor
lds
pop
sbb
jg
stc
xchg
fwait
mov
fdivs
pop
out
jge
pop
call
fildl
jae
ret
dec
cmc
cwtl
add
popa
push
repnz
pop
push
mov
sub
testb
mov
jno
and
mov
xchg
mov
mov
jle
push
sbb
mov
inc
and
xchg
jmp
outsb
and
mov
inc
fbld
mov
push
std
stos
push
sbb
mov
aas
and
inc
rcrb
push
fnstsw
lcall
and
std
loope
nop
test
push
cmpb
jbe
xchg
rcll
lcall
push
sub
out
xor
cs
pop
push
xchg
aad
add
pop
xlat
jmp
scas
outsb
mov
mov
jo
xor
shll
cmp
push
xchg
cwtl
adc
push
push
push
push
fwait
lods
and
mov
stos
adc
push
or
repnz
or
mov
imulb
gs
stos
or
adc
daa
pop
stos
scas
push
jae
out
xchg
xchg
ja
pop
and
sbb
jns
insl
or
mov
aas
add
pop
xlat
lea
scas
xor
dec
sbb
fildll
sbb
stc
mov
out
or
repnz
js
and
pop
xchg
mov
in
movsb
or
aas
pop
sub
dec
dec
or
aam
xor
mov
ja
jmp
mov
mov
dec
subl
aas
fdivrs
jg
gs
mov
and
inc
sub
or
rolb
inc
xor
aas
out
or
nop
jmp
push
bound
aaa
data16
into
pop
rcrb
lcall
imul
outsb
insl
sbb
jecxz
outsb
sub
adc
add
xor
test
push
push
inc
jno
loopne
dec
adc
push
out
inc
xchg
pop
lds
into
insb
adc
mov
gs
jnp
scas
arpl
push
outsb
rclb
add
addr16
pop
fwait
sub
loope
cmp
mov
gs
sub
lret
lret
inc
and
inc
int
bound
out
mov
adc
xchg
inc
push
mov
out
fnsave
sbb
xor
inc
jmp
push
dec
push
push
imul
movsl
cmpl
xor
bound
in
jecxz
sbb
fistps
test
sbb
stos
add
fnstsw
rorl
dec
aaa
je
cmc
jmp
enter
insb
or
push
mov
inc
inc
pop
cld
adc
das
inc
in
inc
mov
in
lea
xrelease
addr16
dec
fiaddl
lahf
or
outsb
int3
aas
jmp
and
push
add
aam
mov
arpl
mov
sbb
mov
pop
pushf
mov
sub
imul
sbb
test
xchg
out
pushf
add
pop
dec
out
mov
xor
lgs
cltd
sub
mov
or
mov
int3
ja
xchg
jbe
mov
add
pusha
mov
cmp
vpsubq
sub
xlat
cmp
and
lahf
sub
cmc
enter
addr16
outsb
xor
adc
cmp
cmc
cmp
inc
rcl
aas
jg
inc
lock
stc
jo
inc
pop
repnz
daa
nop
lock
aaa
mov
cmp
ror
jg
mov
adc
in
test
mov
jne
xchg
jecxz
add
and
adc
and
xor
mov
rcl
insb
outsb
add
adc
lock
pusha
mov
leave
inc
inc
mov
cmp
sar
je
xchg
aam
shr
and
sub
mov
sub
adc
fldenv
xor
xchg
mov
jb
mov
data16
sbb
ja
cmp
loopne
and
aaa
or
pop
daa
xchg
pop
repnz
xchg
cmpsb
and
cmp
ja
or
mov
push
jne
mov
stos
stos
mov
inc
clc
mov
pop
fstpt
mov
aam
jno
push
pusha
fcoml
jp
sahf
hlt
and
out
arpl
xchg
divl
pusha
jno
dec
jno
lcall
xor
cwtl
jae
dec
adc
jmp
inc
jno
pop
mov
mov
dec
imul
fisubrl
js
adc
cmp
ljmp
lcall
cli
sti
sub
inc
outsl
and
int
stos
mov
cld
nop
out
in
lahf
test
in
sahf
mov
mov
xchg
mov
aas
mov
or
adc
lods
pop
and
mov
pop
pop
gs
mov
push
cmp
movsl
fstps
jns
jp
out
xchg
sbb
jmp
iret
inc
roll
mov
lock
icebp
and
in
jo
repnz
mov
aaa
pop
xchg
imul
jb
xchg
in
cmpsb
push
sbbl
out
pop
popf
push
clc
lcall
std
xchg
loopne
not
cli
out
xlat
pop
push
sub
xchg
mov
std
sbb
cltd
cld
jl
in
data16
ds
inc
sbb
in
ljmp
lcall
push
and
imul
imul
mov
sub
cs
sahf
scas
movsl
arpl
test
pop
xchg
out
aas
or
out
stos
or
jbe
add
loopne
and
pop
push
in
outsl
insl
xor
push
push
jg
lea
pop
mov
sbb
int
mov
call
push
mov
cmp
jmp
les
dec
xlat
shrl
mov
dec
addl
aad
pop
clc
jo
out
sbb
js
inc
in
ljmp
sti
mull
pop
jmp
add
xor
sub
inc
sub
pop
hlt
in
cli
pop
or
sub
mov
mov
imul
pop
and
movb
aad
cmp
lea
std
lret
mov
sahf
pop
and
fmul
add
popa
or
add
je
dec
mov
pushf
sahf
cwtl
mov
mov
sarb
in
xchg
dec
xor
and
cmp
jno
xchg
add
sub
sarb
stc
adc
cmp
mov
outsl
and
movsb
jnp
mov
xor
mov
xor
sub
insb
negl
pop
pop
mov
shrl
pop
mov
in
xchg
fidivrs
xchg
push
push
mov
shll
pop
dec
dec
inc
cs
mov
sti
jg
pop
and
adc
fcomps
sbb
fcompl
push
test
insb
adc
dec
in
in
sahf
mov
push
dec
subb
mov
sahf
inc
mov
mov
pop
and
xlat
scas
test
movsl
ds
dec
cli
insl
icebp
dec
rol
out
add
cld
jmp
inc
xchg
subb
pusha
mov
adc
imulb
outsl
sbb
pop
xor
xor
call
sbb
sub
mulb
imul
xchg
ss
sarl
mov
shlb
inc
and
add
xor
aam
pop
sbbb
push
push
pushf
stos
mov
cmp
scas
inc
adc
xchg
out
movsb
push
jo
das
pushf
mov
or
push
stos
cltd
clc
inc
mov
or
dec
push
iret
cs
push
xlat
rclb
xor
enter
std
cs
and
mov
repz
loopne
dec
xchg
lret
icebp
push
pop
mov
lcall
mov
int
jnp
ret
iret
lcall
fs
lds
imul
adc
sub
adc
xor
jecxz
nop
imul
enter
xor
scas
in
mov
pop
std
mov
push
lcall
mov
xchg
and
mov
stos
cmp
dec
sub
mov
xor
nop
scas
shll
ficompl
cmc
movsl
sbb
popf
jg
cmp
mov
clc
mov
cltd
or
test
pop
adc
out
push
inc
ds
dec
daa
stos
out
ficompl
stos
mov
sub
push
sbb
mov
inc
inc
add
pop
popa
int3
sahf
lret
in
and
pop
dec
gs
xor
bound
add
into
dec
gs
nop
test
movsb
int3
daa
int3
mov
inc
mov
outsb
mov
cmc
mov
sbb
mov
mov
scas
dec
fxch
xchg
bound
sub
fcomip
cmp
or
add
movl
testl
les
into
and
inc
clc
outsb
mov
inc
es
orb
sub
jbe
and
mov
ss
mov
jge
aam
mov
push
mov
cwtl
push
sbbb
pop
push
scas
outsl
mov
push
add
xor
aad
fwait
jg
pop
jl
les
inc
lret
jo
mov
pop
lret
imul
jno
stos
cltd
cld
xlat
sbb
push
js
test
out
xorl
sub
sub
add
and
ja
fs
idivl
xchg
mov
cmp
dec
push
aas
dec
enter
dec
sahf
lahf
stos
jg
cs
jmp
ret
dec
or
lret
jnp
daa
fdivrl
popf
pushfw
pop
push
mov
xchg
icebp
stc
sahf
xor
push
jl
rol
rcl
mov
pop
inc
shlb
rol
pop
daa
rorb
cmp
pop
bound
movb
mov
dec
pop
rorl
add
scas
insb
es
xchg
dec
out
decl
pop
cwtl
repz
jne
inc
testb
clc
cmc
sub
jno
sub
outsl
sahf
mov
movsl
xor
int3
inc
add
mov
xchg
sbb
mov
es
fs
mov
inc
mov
xor
bound
mov
in
push
mov
pop
loop
push
add
adc
leave
adc
push
rolb
hlt
insl
sub
fwait
xor
mov
imul
cmc
fsub
sbb
lcall
push
jb
ljmp
xor
dec
fists
fstps
clc
fidivrl
jecxz
lea
pop
or
lock
insb
lods
popf
inc
mov
insl
push
cmp
or
repz
push
add
fnstcw
ljmp
and
or
lock
push
jge
loopne
gs
daa
dec
addb
sub
or
popl
lock
addr16
inc
xchg
lea
lods
cmc
push
adc
inc
adc
subb
dec
leave
outsl
clc
outsl
icebp
dec
das
jns
mov
sub
mov
mov
or
sbb
and
test
or
mov
pop
push
pop
pop
or
in
iret
pushf
daa
xor
pop
xlat
xchg
loopne
add
ljmp
insb
dec
pop
mov
mov
loop
or
and
cltd
jae
mov
lcall
or
lock
sub
dec
xlat
cmp
jp
call
outsl
adc
adc
or
lret
inc
lahf
and
out
xchg
ret
mov
orl
aas
mov
cmp
fldt
imul
mov
stc
std
hlt
fsubrl
jecxz
sbb
scas
mov
pop
or
mov
fisubs
sti
dec
pop
adc
inc
push
rcr
pop
jle
dec
leave
aad
rcrl
adc
inc
jno
scas
jb
je
or
cmp
pushf
pop
stc
push
mov
xchg
push
jp
enter
jnp
test
dec
inc
inc
mov
jbe
mov
cmpsb
mov
inc
shll
sub
cli
and
scas
pop
shrb
loopne
mov
outsl
mov
mov
sbb
xchg
fists
adc
test
add
and
inc
pop
mov
shrl
sbb
xchg
sahf
mov
inc
cmp
jecxz
push
fisubs
out
clc
jmp
adc
scas
mov
scas
inc
and
sub
cmp
sbb
xlat
and
jnp
mov
pop
int3
jp
in
fstpt
nop
fistpll
aam
cwtl
pop
xchg
or
mov
inc
pop
movsl
hlt
idivl
xchg
cmp
into
repz
in
add
insb
mov
pop
jne
rcl
daa
mov
es
fcomps
push
push
dec
cmp
pop
cmc
mov
sbb
cltd
mov
movsb
in
and
fisttps
and
imul
movsl
push
adc
mov
mov
mov
icebp
jbe
mov
out
fmull
mov
popf
inc
fstps
sbb
sahf
xchg
push
icebp
outsb
repz
push
jg
add
scas
adc
lahf
cmp
jbe
cmp
cmp
icebp
pop
mov
fsubl
jbe
xchg
and
mov
sub
pop
jns
arpl
xchg
pop
xchg
fisubl
ret
inc
ficoms
movsl
popa
sbb
dec
lods
push
jl
xchg
imul
xor
pusha
push
subl
mov
icebp
or
fs
dec
add
and
mov
enter
pop
jbe
into
mov
cltd
pop
popa
in
sbb
mov
arpl
outsl
int
mov
inc
aad
scas
ljmp
in
call
pop
jns
xor
push
pop
mov
mov
mov
dec
or
ljmp
xlat
push
hlt
jle
pop
negb
dec
and
push
in
mov
xchg
dec
sarl
outsb
push
jp
mov
sub
mov
cmc
mov
push
sbb
dec
xchg
popl
mov
push
out
xchg
mov
or
js
adc
je
ljmp
repnz
xor
dec
in
leave
roll
insl
dec
jecxz
outsb
cmp
out
addr16
lret
sub
dec
push
sub
stc
into
sub
pop
cli
in
stc
sahf
fnstsw
ljmp
xchg
add
mov
test
rorl
or
out
mov
sahf
and
lahf
pop
push
dec
and
mov
and
out
lret
andl
mov
das
sarb
pop
sub
std
or
mov
fwait
xchg
out
dec
testl
xchg
inc
outsl
cmc
cmc
fstpt
lods
or
loopne
cs
mov
xchg
pop
int
or
push
cwtl
cmp
mov
fs
pop
ja
push
inc
es
sahf
xor
push
cmc
sub
dec
xor
std
sbb
das
push
sub
clc
loope
pop
dec
push
sbb
add
cltd
mov
jne
sub
adc
dec
cmpsl
aaa
or
adc
mov
add
inc
jp
mov
sbb
stos
aad
lret
in
push
adc
push
xor
mov
jnp
rcl
adc
fdivrs
loopne
inc
int3
sbb
loope
in
inc
or
and
sti
adc
insb
or
in
iret
sbb
insb
cs
push
pop
xchg
imul
sbbl
dec
xor
or
pop
movsl
dec
lahf
mov
fcomip
adc
mov
inc
xor
fdivrl
ret
mov
push
push
jl
and
fwait
jmp
fwait
aad
jne
out
mov
jae
or
cmp
mov
mov
out
std
push
into
jmp
sub
fnstsw
out
xchg
addr16
mov
add
arpl
inc
test
loop
fwait
pop
aaa
ror
mov
adc
inc
mov
xchg
into
std
inc
inc
clc
mov
xchg
xor
popf
xor
jg
int3
mov
push
out
inc
pop
mov
test
pop
loope
xor
cli
stos
outsb
repnz
or
xchg
test
stos
leave
jecxz
and
sti
cld
fcoms
cmp
pop
test
stos
int3
or
xchg
sbb
inc
xor
add
dec
xchg
leave
bound
mov
push
test
divl
jb
and
xchg
and
mov
adc
xchg
mov
sarl
leave
sub
int
leave
xor
xchg
and
roll
mov
je
in
push
or
movb
rol
dec
into
cltd
aam
push
imul
insl
xor
jo
outsb
nop
sbb
cmp
fistps
cmp
repnz
jne
lock
loopne
iret
fld
les
mov
out
adc
test
push
push
fimuls
push
or
dec
xor
psrad
jo,pt
adc
idivb
or
lods
push
or
sub
sub
stc
repz
cld
pop
mov
jecxz
push
int
scas
mov
xchg
or
add
xor
jg
sbb
cmp
inc
add
in
xchg
mov
dec
add
dec
and
and
dec
inc
mov
xor
out
cmp
fstl
cld
push
mov
sub
into
repnz
shll
imul
inc
sbb
arpl
in
pop
jno
and
dec
int
mov
dec
je
mov
scas
daa
stos
xchg
arpl
dec
enter
cld
mov
inc
imul
scas
and
dec
cmp
arpl
push
cmpsl
sbb
mov
mov
gs
cmp
ret
insb
in
pop
es
fs
jge
add
sbb
cmpl
dec
aas
xchg
in
in
test
popa
test
add
pop
or
insb
cld
sarb
mov
scas
addr16
pop
mov
js
loope,pt
fiaddl
or
and
add
add
fstps
mov
jb
lahf
test
xor
jno,pn
jge
and
mov
push
mov
outsb
jmp
mov
jo
mov
adc
xchg
fmull
mov
jno
sbb
ljmp
inc
lret
jle
add
pop
insl
outsl
adc
pcmpgtb
in
xor
aam
mov
xor
adc
sbb
sbb
push
std
mov
mov
jecxz
pop
test
ljmp
std
push
mov
ja
incb
mov
jne
in
lods
adc
add
pop
mov
ljmp
xor
popa
int3
pop
and
cs
pop
movsl
pop
cwtl
cs
sbb
xor
ds
dec
jl
jmp
cmp
jb
push
mov
cmp
data16
imul
stos
idivb
enter
into
push
or
dec
cltd
add
or
sbbl
cmp
xchg
ja
test
and
mov
fisubl
sub
addb
pop
aam
sarl
insb
jo
jbe
adc
jle
push
dec
xchg
addr16
and
cld
mov
sub
repz
cmp
push
loope
jbe
aas
int3
popf
inc
nop
jle
fisttpl
add
jnp
xchg
adc
frstor
add
repnz
fidivl
cli
and
or
adc
int
or
stos
in
nop
les
bound
or
sbb
and
mov
push
jns
mov
sub
mov
repnz
loop
push
push
xchg
and
push
xor
repz
das
aaa
sbb
mov
push
and
pop
fdivs
movsb
push
xor
cmp
sub
jnp
ret
sbb
add
test
jp
xor
gs
mov
push
xor
mov
inc
mov
sbb
mov
mov
jbe
out
xchg
std
xchg
xor
mov
cmpsl
adc
sahf
scas
mov
lret
fbld
rolb
js
loope
push
lret
test
movsl
repz
xchg
and
cmc
fadds
pop
dec
push
pushf
insl
repnz
insb
vphadduwq
call
pop
jle
lcall
ret
xchg
or
jle
and
andb
pop
sbb
gs
fisttps
inc
pop
cwtl
mov
sarl
in
pop
sbb
fimull
adc
xchg
cld
or
lret
mov
leave
adc
xchg
sbb
nop
and
pop
cmp
xor
push
mov
push
out
decb
inc
call
loopne
insl
xchg
xchg
inc
or
pushf
inc
push
sub
pop
into
xchg
pop
daa
fwait
sbb
add
sahf
add
dec
and
inc
js
aam
pop
push
mov
lcall
mov
dec
rorl
rcrl
push
iret
loop
fisttps
push
repz
mov
dec
popf
out
insb
inc
inc
pop
inc
repnz
ljmp
iret
adc
lcall
movsl
pop
mov
ret
nop
pop
mov
lret
sub
aam
test
dec
gs
mov
aam
dec
and
push
shlb
ljmp
mov
sahf
or
jmp
imul
push
pop
stos
sbb
jecxz
lods
call
add
icebp
inc
mov
fadds
mov
mov
adc
sub
mov
int
rolb
cmpsl
orl
lods
iret
mov
adc
jmp
popf
sti
out
jp
mov
adc
inc
xchg
data16
call
dec
jecxz
jno
and
sub
mov
out
pop
mov
mov
pop
adc
dec
jg
pop
ss
sub
outsb
bnd
js
lock
test
outsl
dec
and
xchg
subb
cmpsl
fildll
add
clc
repnz
stc
js
test
fstpl
out
cwtl
and
sbb
and
push
pop
outsl
mov
push
or
insb
dec
out
xor
popa
sbb
pushf
adc
pop
test
mov
nop
adc
aas
lret
dec
mov
inc
popf
add
in
lods
sahf
and
andl
mov
push
cltd
and
testb
into
adc
ds
and
mulb
xchg
jp,pn
popa
imul
lds
jmp
sarl
lret
out
les
stos
sub
mov
es
pop
rol
movsb
and
adc
fwait
mov
jo
sub
aam
test
xchg
cmova
push
dec
aas
faddp
movsl
lods
pop
imul
jo
pop
jno
mov
gs
imul
mov
sbb
cs
test
xchg
push
imulb
inc
inc
and
clc
into
pushf
cmp
push
sarl
push
mov
mov
sub
xchg
push
push
xor
cmp
dec
cmp
mov
mov
mov
cmp
dec
cmpsb
jbe
pop
sbb
and
out
loope
and
jge
inc
bound
adc
mov
test
fnstenv
aaa
test
push
outsl
nop
sub
cwtl
mov
jg
push
jb
icebp
push
scas
aaa
incl
cmp
jge
ret
mov
out
sub
fldenv
mov
sbb
fsub
fisttps
add
arpl
sub
inc
inc
test
or
cmpsl
pop
cli
nop
lcall
cmc
or
mov
clc
insl
repnz
clc
add
fmul
mov
imul
jb
xor
xor
mov
inc
inc
push
xchg
iret
xchg
mov
or
xchg
ret
jge
push
pusha
shl
es
testl
adc
or
popf
mov
mov
dec
xor
std
mov
xor
sar
sub
push
leave
push
sti
scas
jmp
dec
push
lds
add
push
cmc
jl
outsb
or
jb
faddl
dec
dec
push
or
cmp
ret
into
sbb
fidivs
scas
xchg
or
cmpsb
add
mov
loopne
inc
pusha
cs
sub
dec
dec
push
setns
inc
adc
and
pop
jns
jge
jmp
sub
xchg
iret
comiss
out
ret
in
fadds
movsb
push
adc
cmp
out
mov
lcall
stos
push
orb
arpl
inc
cli
es
outsl
pop
cmpsb
add
loopne
xchg
add
push
jae
jmp
or
jnp
and
in
sti
dec
cmpsl
insb
cld
mov
cmp
jne
dec
jl
fstp
lock
shr
dec
repz
jg
loope
pop
mov
shrl
mov
xchg
mov
imul
push
cmp
mov
popf
insl
bound
mov
pop
gs
fdivrs
mulb
clc
pop
jb
out
fiadds
enter
xlat
mov
cmc
sbb
pop
icebp
or
pop
and
mov
xchg
aam
enter
aad
sub
and
daa
loope
sub
dec
pop
arpl
jmp
cltd
sti
loop
xor
mov
cmp
push
scas
and
ds
nop
in
cvtps2pd
xchg
fsubrl
push
cmp
insb
imul
jnp
cmpl
push
test
pop
fisttpl
movsb
cmp
in
push
jno
sub
dec
stos
pop
cwtl
jmp
xor
inc
cwtl
xchg
mov
pop
jne
dec
test
rcll
jle
sbb
add
sarb
jle
pop
cs
pop
mov
lods
jle
mov
ficompl
push
sbb
xchg
sbb
xchg
iret
int
jmp
mov
sbb
test
loop
mov
cmp
lret
popf
or
add
or
xor
xor
pushf
push
scas
sti
je
sbb
popa
data16
add
mov
sahf
hlt
mov
js
into
daa
lret
dec
outsl
pop
xchg
mov
rcll
xor
dec
aam
aad
out
xchg
jp
mov
cmp
mov
bound
enter
sub
or
inc
ja
xor
jp
pop
xchg
inc
fmulp
lahf
shll
into
pop
mov
shll
cwtl
mov
test
int3
mov
bound
ss
popa
lcall
or
xchg
dec
adc
adc
mov
or
adc
pusha
or
or
je
pop
and
xlat
pop
cltd
popa
sarb
inc
xlat
insl
lock
inc
xor
cmp
push
inc
lret
das
clc
dec
mov
stos
adc
and
xor
push
into
es
out
dec
push
fsubl
sub
into
cwtl
inc
cs
sub
cmc
je
xchg
mov
push
hlt
js
std
xor
scas
xchg
scas
lcall
popa
int
lods
jbe
inc
frstor
and
sbb
xor
cmpb
jo
dec
inc
fnstenv
sahf
sub
jo
push
mov
sub
add
xchg
repnz
out
inc
cmp
mov
push
xchg
add
pop
in
cs
lods
adc
lret
int3
xchg
mov
sbb
xlat
cmpsl
cmp
mov
pop
ret
jmp
mov
subl
cmc
pop
rorl
sub
cld
xlat
and
lock
sub
jecxz
push
mov
pop
add
out
stc
mov
lahf
out
xor
bound
or
mov
sub
inc
cmpsl
not
loopne
jno
jns
sub
xchg
and
fstpl
aad
or
iret
push
ja
pop
fcomip
lea
inc
aaa
jp
adc
jae
dec
repz
sbb
repnz
mov
cmpsl
inc
mov
xchg
mov
xchg
les
out
or
xchg
mov
pop
insb
mov
loop
mov
sub
divb
cli
mov
cs
and
mov
mov
aaa
loopne
mov
mov
mov
mov
mov
mov
ficompl
mov
dec
cmp
sbb
and
pop
mov
inc
mov
xchg
test
js
pop
daa
mov
mov
xor
mov
dec
push
xlat
cmp
jo
adc
fdivrl
mov
inc
push
loop
jo
ss
sub
xchg
and
out
inc
stos
scas
shl
xor
mov
and
xchg
test
pop
movsb
in
js
cmp
ficompl
loope
cli
in
xchg
inc
std
push
jle
cmpl
sub
xchg
mov
push
stos
pusha
cli
adc
mov
clc
pop
fidivrl
aas
test
push
push
pop
test
push
cs
aaa
fisttpl
hlt
es
ja
fsubrp
dec
into
mov
pop
xor
jl
jge
or
jge
adc
enter
pusha
jecxz
jmp
out
cmp
leave
sbb
rcrb
and
daa
jb
mov
ds
in
xor
sbb
sbb
mov
add
aas
mov
cmp
xchg
pop
fnsave
jb
inc
push
aad
pop
mov
dec
les
xor
aas
scas
pushf
jecxz
data16
jmp
arpl
div
scas
sbbb
loope
jbe
dec
jbe
inc
jge
pop
mov
dec
sub
and
add
test
nop
push
aam
daa
xor
inc
push
fdiv
mov
stc
xor
jns
mov
int3
out
loop
scas
scas
call
out
xor
imul
div
mov
mulb
adc
push
inc
xchg
inc
xchg
push
cli
jg
add
sbb
xor
lods
push
test
mov
aam
clc
pop
je
sub
aaa
lock
mov
jne
leave
sub
sbb
mov
daa
ja
mov
xchg
pop
ss
sti
dec
dec
ja
jp
outsb
pop
sahf
jnp
adc
jmp
dec
mov
add
push
xor
lock
in
int3
mov
fbld
pusha
icebp
notb
shl
repnz
dec
loope
mov
add
arpl
mov
mov
mov
in
inc
idivl
mov
es
ret
push
and
stc
jp
adcb
loope
lds
bound
andb
pop
sub
and
sub
pop
push
mov
mov
fdivs
subb
dec
mov
mov
iret
mov
sbb
adc
in
loopne
pushf
fcompl
out
or
das
fcoms
insl
test
stos
adc
sub
mov
stos
mov
pop
imul
ss
and
jge
jae
sub
cli
sub
add
fdivrl
in
jmp
shld
and
test
sbb
addb
bound
cmpsl
jle
insl
mov
call
std
jp
xlat
adc
add
cmc
dec
cmp
leave
test
inc
in
loop
inc
or
sti
inc
sbb
xor
jno
and
loop
push
movsl
push
inc
cltd
lods
fistpll
lods
sbb
js
hlt
mov
mov
mov
daa
xchg
fiadds
push
inc
add
loope
sbb
cmpsb
or
mov
out
inc
xor
notb
insb
je
and
fisubs
xor
mov
xor
mov
in
cmp
jne
dec
divl
test
aad
daa
hlt
mov
rol
iret
mov
pop
adc
ljmp
loop
loop
sub
rcrl
mov
inc
mov
mov
popa
call
inc
fsub
cmpb
inc
or
inc
or
test
mov
and
pop
test
jb
rcrl
pop
das
add
mov
sub
adc
sbb
test
mov
sub
out
dec
xchg
ljmp
adc
in
xor
xor
and
icebp
dec
mov
out
stos
dec
sub
lods
pop
pop
inc
sbb
mov
out
mov
scas
loopne
xor
mov
add
stos
push
je
pop
in
inc
inc
bnd
repz
stos
mov
sub
std
inc
popf
mov
jb
inc
scas
and
jmp
or
aad
cmp
pushf
jp
dec
add
subl
scas
mov
pop
cmpsb
lcall
cmc
js
xchg
and
cmp
insl
mov
xor
add
push
pop
pop
inc
nop
pop
or
out
cmp
mov
addr16
imul
xchg
lods
fimuls
push
sub
fmul
repz
and
stos
or
cmpb
sbb
xchg
cltd
and
add
int
add
pop
insl
stos
lcall
sbb
jge
insb
mov
lds
inc
dec
jmp
jo
push
inc
mov
jge
xlat
cmp
in
or
xchg
lock
int
jle
test
jl
sbbb
int
aad
push
ret
pop
pop
adc
jmp
adc
jl
aas
mov
into
and
and
xchg
out
jle
lcall
inc
and
or
sub
dec
add
mov
xorl
test
dec
movl
jne
jmp
lock
dec
shlb
pop
or
aad
icebp
aad
mov
sub
rorb
jl
sahf
mov
jle
adc
ljmp
jbe
data16
mov
stos
dec
adc
lahf
push
popa
arpl
pop
dec
int
and
sub
ds
cs
rol
or
sbb
mov
push
fstpt
mov
dec
dec
sub
jg
es
sbb
fs
sbb
stos
fwait
and
mov
gs
add
fwait
in
stc
ja
ret
and
xor
xor
sbb
gs
movb
mov
js
jmp
ret
sbb
adc
call
adc
add
hlt
sbb
ja
dec
push
xchg
cli
add
pop
sub
sub
mov
jae
nop
mov
fneni(8087
dec
popf
or
movsl
add
cmp
push
xchg
dec
lcall
out
push
idivb
rcl
test
pusha
add
ret
dec
ret
fldenv
add
sbb
std
and
ljmp
loop
jge
shrd
pop
jnp
daa
lret
gs
jmp
xchg
jb
pop
insl
call
jbe
imul
xor
xchg
fnstsw
mov
and
lret
hlt
aaa
aas
xchg
cmpl
adc
test
push
add
dec
insb
imul
pop
xor
jle
push
mov
fdivl
jmp
mov
jae
jo
cmpsb
mov
sti
or
arpl
ja
adc
push
pop
int
add
pushf
inc
pop
test
xor
push
pop
ljmp
cmpsl
push
push
ja
out
add
jmp
repnz
lret
adc
mov
fidivrs
add
sbb
out
movsb
pop
sbbl
fimuls
iret
in
push
fnstcw
xlat
scas
mov
mov
add
and
ja
and
mov
push
cltd
fs
xor
loop
add
movsb
ret
clc
scas
lods
sbb
mov
ljmp
xor
lds
out
outsl
xor
dec
arpl
fcompl
sub
mov
cmp
mov
adc
iret
ljmp
dec
mov
dec
iret
js
jno
sub
pusha
and
ss
add
jl
push
xchg
push
add
mov
inc
repz
lods
or
or
mov
lods
xchg
cmp
xchg
in
mov
fistpll
andl
stos
sti
clc
mov
pop
adc
or
xchg
pop
ljmp
imul
adc
in
into
cmc
jo
cmp
in
mov
and
cs
jge
mov
adc
ds
andb
mov
cli
mov
sarb
adc
push
ja
fcoml
shl
sbb
add
sbb
xlat
xchg
lods
sbb
push
mov
pop
and
mov
push
jecxz
movsl
cwtl
sarb
popf
outsb
push
enter
adc
jo
mov
and
push
out
cmp
jmp
jnp
das
lods
xor
fcompl
or
sti
test
nop
adcl
dec
imul
mov
outsb
or
cmp
pop
ljmp
clc
clc
sub
stc
xorl
cmc
mov
jge
xchg
iret
ds
sub
enter
out
sbb
aaa
pop
xchg
cmp
arpl
sub
lds
aaa
push
add
movlps
pusha
add
out
xchg
pop
data16
mov
sahf
cwtl
push
ljmp
pop
lock
sub
ficompl
int3
sub
call
andb
sbb
sbb
inc
cmp
xchg
mov
lods
rcll
inc
dec
mov
ret
sbb
inc
cltd
das
sub
popa
xorb
dec
adc
fwait
sub
ljmp
inc
mov
dec
xor
xchg
pop
ret
push
adc
xlat
addl
jne
ret
pop
outsl
scas
mov
pop
sbb
mov
or
mov
pushf
scas
mov
fsubrl
inc
arpl
incl
dec
ss
or
repz
test
aaa
ficoms
lret
je
arpl
and
dec
inc
lods
les
dec
mov
movsl
pop
push
dec
push
mov
push
lods
imulb
or
and
mov
pop
test
push
nop
shrb
mov
jo
fdivl
testl
pop
mov
jne
fistl
in
sub
mov
scas
jb
stos
sahf
out
adc
iret
sub
push
loop
lret
pop
xchg
loopne
push
ds
cmp
insl
lds
fs
push
pop
rcrl
ret
xor
mov
add
pop
ret
or
out
pop
and
outsl
xchg
jo
addr16
cmpsb
pop
adc
cwtl
js
cmp
cmpsb
mov
dec
and
xor
add
pop
jmp
roll
xchg
add
std
fstpl
addr16
dec
pop
add
mov
popfw
pop
sub
dec
dec
mov
pop
icebp
out
push
cmc
push
inc
enter
mov
cli
mov
xchg
dec
push
cmpsb
jns
popa
std
aaa
sbb
and
fiaddl
outsb
push
mov
mov
jb
orb
push
sbb
mov
in
and
mov
sub
std
xor
movsb
pop
jg
shl
xor
mov
pop
into
cmpsl
stc
cmpb
and
dec
sti
mov
shlb
xchg
pop
lock
sub
aad
icebp
ja
cwtl
jne
add
daa
push
adcb
xchg
arpl
ja
push
popf
push
cmpsl
mov
insb
daa
xchg
pop
hlt
fsubrl
into
mov
mov
loopne
es
fld1
xchg
in
push
mov
rcll
in
mov
mov
pop
inc
sub
fstl
inc
jecxz
hlt
movsb
clc
js
and
aas
xor
cmpsb
sub
mov
ds
xchg
cmp
inc
pop
fdivrl
push
and
lds
popa
mov
test
push
cli
imul
cmp
add
cmp
cld
cs
sbb
mov
mov
mov
repz
iret
lret
lcall
lret
xchg
cmc
xor
and
inc
iret
out
jmp
sub
in
pop
imul
sbb
ret
cmp
shlb
or
data16
xor
add
push
xchg
mov
les
fdiv
add
gs
push
cmp
fsubl
dec
outsl
push
int3
outsb
filds
sbb
and
xor
gs
sbb
jae
out
adc
jb
add
ds
pop
push
sahf
outsl
mov
jge
xchg
cmpsb
xor
jl
das
push
test
dec
test
nop
mov
sar
je
test
test
repnz
aad
xchg
pop
fnstsw
xchg
out
sub
adc
pop
das
mov
sub
popa
sbb
lea
sbb
adc
ljmp
xchg
add
dec
sub
addr16
or
and
cwtl
fmul
mov
mov
sarb
int3
je
or
jbe
mov
sub
fsubp
cs
xchg
sbb
mov
iret
aam
cmp
jae
jo
mov
lock
loope
iret
add
pop
push
and
iret
std
dec
rcr
pop
pop
jecxz
mov
xor
insl
and
les
cmp
cmp
negb
cs
js
ljmp
adc
mov
not
andb
sti
sub
sbb
jb
add
loope
pop
imul
clc
or
rclb
jle
cmp
xchg
rcrb
pop
movsl
repnz
adc
sti
inc
out
mov
sti
ret
pop
sub
cwtl
lea
int3
leave
sarl
adc
loop
mov
jecxz
call
out
mov
rcr
lea
rorb
lods
mov
cld
pop
pop
cmpsb
or
cmp
ljmp
dec
inc
xchg
outsb
xchg
mulb
xchg
push
inc
xchg
movl
fstpt
inc
pop
es
or
adc
idivl
lods
movsl
loope
and
push
es
jge
push
push
push
mov
dec
hlt
push
pop
scas
push
sub
mov
mov
data16
mov
jg
mov
data16
mov
ljmp
int3
andl
int
inc
inc
test
scas
cli
repz
push
sbb
fs
push
shll
stos
shlb
xchg
das
sbb
lea
and
lea
adc
lahf
or
inc
mov
aam
jecxz
mov
aam
repz
cli
mov
xchg
jecxz
sti
cmp
lock
xor
mov
aad
cli
dec
in
out
pop
ds
jp
sub
xchg
outsb
push
in
push
dec
push
mov
or
jp
xor
cli
cmc
push
cmovbe
jb
nop
mov
aas
xchg
adc
jo
push
das
popf
jp
fisttpl
loope
in
insb
insb
mov
and
fdivl
ret
dec
stc
xchg
inc
push
or
jae
aad
int
cmp
add
xchg
imul
lods
mov
cmp
push
push
test
cmp
ja
push
pop
outsl
jbe
cmp
in
into
xor
sbb
cmp
jecxz
jp
test
inc
jg
push
adc
test
shll
outsb
adc
mov
sbbb
xchg
sbb
push
ds
add
jne
out
sbb
mov
pushf
mov
std
mov
hlt
int
mov
pushf
xor
push
sarl
sti
mov
xchg
jnp,pt
movsb
xchg
mul
xor
xor
dec
jmp
or
dec
jle
mov
js
dec
mov
sti
fisttps
mov
movsl
xor
adc
xorl
mov
test
sub
icebp
std
adc
mov
sbb
pop
sarl
cmpsl
into
add
push
jns
in
ljmp
mov
sub
pushf
clc
rcrl
ja
les
iret
mov
imul
jge
stos
mov
adc
pand
or
mov
inc
enter
or
inc
inc
bound
addr16
sbbl
cmpsb
pop
ja
lods
in
insl
mov
out
dec
pop
lods
or
test
jb
cmpsl
sub
and
loopne
pop
sbb
xchg
addr16
push
inc
outsb
jmp
jg
jge
add
dec
mov
imul
sbb
iret
in
shll
test
in
jmp
popf
mov
sub
es
mov
mov
push
pushl
mov
xchg
pop
mov
sub
inc
out
push
ret
popa
push
lods
test
faddl
cmp
mov
std
push
outsb
pop
mov
lock
mov
imul
lcall
push
sbbl
cmpsl
nop
aad
idivb
inc
pop
mov
jmp
cmp
rorb
sbb
lods
into
js
jns
or
xchg
pop
xorb
inc
pop
cli
sahf
lods
sti
arpl
mov
cmp
jae
xchg
arpl
or
loope
or
imul
arpl
addr16
jo
fsubs
jle
cmp
in
inc
jnp
push
sbb
popa
stos
mov
outsl
xchg
into
mov
in
xchg
sbb
dec
rolb
movsl
xor
jae
push
adc
mov
jns
dec
pop
into
lcall
and
out
das
inc
pop
mov
cmp
in
nop
push
jo
fmull
sar
mov
pushf
add
and
pop
mov
and
xchg
sti
mov
call
ret
fcomps
ljmp
lods
inc
sbb
fdivrs
les
xor
jae
movl
sbb
add
sbb
pop
add
sub
mov
in
mov
orb
inc
aad
jg
mulb
sub
popa
icebp
pop
test
cs
cmp
lret
and
aam
leave
mov
sahf
sti
mov
out
dec
sbb
jae
pushf
xor
mov
cmpl
mov
or
or
pop
mov
cwtl
cli
xchg
lds
pop
arpl
int3
stos
adc
mov
xor
sub
imul
lock
jnp
xchg
or
repnz
divb
loop
xorb
stos
xchg
outsl
ja
lods
mov
cmp
xchg
sbb
push
fwait
aaa
push
pop
sub
dec
in
cmovle
outsb
sti
or
int
test
fdivrl
cmc
jle
mov
pop
out
cmp
loope
pop
push
dec
mov
pop
outsl
xchg
push
fbld
icebp
or
sub
or
adc
or
ret
inc
int3
popf
addl
les
mov
or
jbe
jbe
lahf
sbb
dec
push
mov
pop
sahf
fucomp
cmp
add
and
adc
mov
test
xchg
bound
pop
mov
mov
or
xchg
imul
push
lea
ret
adc
sub
cmp
mov
subb
out
call
subl
mov
or
jo
xchg
fs
dec
xchg
push
out
xchg
sbb
fcom
movsl
dec
push
icebp
push
and
arpl
call
mov
imul
ljmp
xor
outsb
jg
cli
sbb
jae
fabs
mov
pop
repnz
dec
mov
popf
fs
mov
mov
and
sub
aaa
dec
dec
mov
inc
loope
fistl
icebp
jmp
les
mov
inc
cmpsl
jl
mov
mov
adc
sbb
bound
call
lods
movl
ja
jae
lahf
sahf
mov
xor
leave
dec
mull
sbb
cmp
mov
sbbb
pop
mov
jmp
loopne
mov
push
mov
test
fimull
mov
adc
pop
dec
clc
fiadds
xor
mov
es
cmp
into
invd
lods
inc
aam
cli
sub
dec
inc
imul
jmp
loop
pop
cltd
scas
adc
enter
inc
xchg
cmp
ret
cmpl
and
cmc
cli
fstpt
dec
pop
jmp
aad
das
test
fst
mov
repz
and
cmp
fstl
rorb
and
lcall
mov
push
and
mov
fs
inc
outsl
jge
add
jo
jns
orb
mov
adc
icebp
adc
stos
push
insb
push
mov
xor
or
adc
sahf
add
cmpsb
out
mov
sub
out
push
shlb
icebp
sbb
inc
gs
aas
imul
jecxz
arpl
lock
or
aam
sub
sbb
fcomp
insb
es
aaa
mov
sbb
lock
sbb
push
lea
sub
rolb
movq
push
mov
into
fsubs
sti
pop
cltd
lahf
jns
nop
pop
fs
fnsave
sub
mov
mov
call
push
pop
adc
jmp
xchg
dec
jo
fwait
loopne
xor
cmp
push
loope
cmp
ret
cmc
or
xor
pop
dec
loop
mov
adc
xor
dec
mov
adc
dec
xor
adc
push
mov
cmp
movsb
sub
add
ret
jae
dec
lods
enter
push
nop
scas
leave
dec
push
sub
int3
adc
lret
notb
inc
fs
inc
sub
iret
xor
fcoml
xlat
sti
or
stos
inc
nop
and
sbb
and
arpl
jbe
out
scas
sbb
adc
add
dec
pop
inc
push
and
popa
jp
iret
push
xor
push
push
std
dec
sbb
clc
addl
add
and
ret
sahf
mov
sbb
mov
into
xchg
sbb
or
call
push
scas
adc
add
arpl
faddl
aad
aad
add
cwtl
ror
cmpsb
js
cmp
out
cmp
pop
cmp
insb
jg
sub
aad
push
pop
stos
hlt
add
imul
adc
push
mov
pop
mov
loopne
xor
sub
and
shll
test
sub
out
inc
repnz
xor
in
aas
cli
mov
fildl
inc
add
ret
daa
mov
xor
xchg
pop
jge
divb
mov
cwtl
pusha
add
xor
call
aam
mov
test
push
imul
mov
xchg
shl
cwtl
inc
sbb
roll
cmp
loopne
repz
sub
cwtl
ret
xor
push
mov
ss
pushf
not
mov
cmp
jno
fcoms
jle
div
dec
les
mov
mov
jmp
mov
pusha
imul
int
lods
mov
jge
ja
enter
push
enter
pop
shll
std
movsb
jbe
les
addb
jmp
xchg
roll
mov
or
adc
hlt
aad
sti
aas
cli
mov
xchg
sbb
jns
sub
repnz
ret
mov
inc
mov
xchg
sarl
popa
sub
sub
loop
pop
imul
cmp
mov
lahf
xor
insl
mov
jae
clc
push
jecxz
mov
rcrl
mov
dec
lea
lcall
mov
mov
adc
mov
movb
sub
mov
data16
out
pop
sbb
movsl
test
incl
cmp
cltd
add
inc
testl
jle
xchg
mov
xchg
sub
lahf
fbld
in
jp
and
mov
aad
add
nop
mov
aas
mov
and
xor
cmp
aaa
icebp
mov
in
sub
int3
stos
cmp
xor
fcoml
pop
mov
rolb
cltd
jns
aam
inc
cmp
shrb
dec
pop
jns
adc
mov
push
into
aad
addr16
enter
fldt
imul
in
lcall
mov
mov
or
lock
adc
pusha
xchg
adc
mov
mov
mov
xor
push
adc
fmull
leave
dec
pop
and
gs
pusha
mov
lret
add
mov
insl
decb
push
sbb
fwait
inc
adc
popa
jle
dec
arpl
inc
cmpb
cmovae
stc
add
push
lock
and
dec
cmp
jecxz
sub
sahf
adcb
dec
arpl
test
fidivl
aaa
dec
jmp
enter
inc
jb
stc
adc
inc
pushf
push
pop
mov
popf
xchg
jmp
popf
loope
cmp
and
cld
push
aad
adc
ret
movsl
sub
xor
jl
fildll
jns
lcall
dec
add
cmpsb
or
daa
imul
fcmovu
jecxz
pop
xor
jns
rcrl
bound
sar
xchg
popf
aad
xchg
pop
or
leave
lret
imul
cmc
ret
xor
aas
loopne
rcll
jecxz
or
cmp
xor
xor
and
movsb
jbe
dec
scas
mov
push
cmp
mov
loope
push
fildll
fcmovnb
sbbl
in
mov
clc
push
jp
xor
in
or
stos
outsl
out
aad
aad
ss
js
mov
add
jbe
mov
into
je
loopne
lods
test
shll
xchg
into
sbb
andl
test
xor
sub
repnz
xor
and
sbb
test
mov
xor
fimuls
ficoms
inc
fidivs
xor
pop
jnp
or
jg
out
inc
rorl
test
xor
push
jecxz
out
xor
out
and
xchg
cmpb
ret
cld
xchg
jno
jl
pop
push
push
adc
xchg
jnp
negl
dec
les
jecxz
mov
std
mov
mov
xor
lea
sbb
push
and
sahf
pop
std
dec
sbb
pop
out
aad
stos
outsl
nop
push
push
or
mov
les
add
call
out
xchg
adc
xchg
mov
sbb
fimull
js
in
sub
cmp
push
ret
cmp
push
sbb
push
fs
push
scas
push
sub
sbb
adc
filds
lcall
and
loop
insl
and
push
or
lods
or
dec
loope
push
mov
and
inc
shll
ror
sbbl
shll
movsl
lret
mov
jmp
mov
or
out
sub
add
aam
inc
sub
mov
push
pusha
cltd
aas
in
mov
decl
mov
xchg
es
aaa
adc
js
sub
or
loopne
cmp
add
cltd
pop
add
cmc
ljmp
dec
orl
push
scas
insl
je
movsl
out
inc
jb
out
add
or
mov
add
pushf
js
pop
push
pop
sub
roll
xchg
lods
pushf
daa
dec
repz
sub
sub
rcrl
scas
mov
sar
stos
jno
and
jnp
je
out
sub
or
repz
aam
inc
mov
mov
jns
cmp
cs
mov
dec
inc
stos
cmp
or
shlb
adc
and
imul
aad
push
add
fsts
or
add
test
jns
sbb
push
in
sub
aam
xor
jb
jnp
aaa
fimull
rcrb
fildll
pop
pusha
daa
out
enter
jmp
add
es
dec
xchg
cmc
sub
add
jns
gs
mov
sbb
pop
cmpsl
dec
lds
and
outsb
sub
or
sti
and
cmpsb
adc
lock
lcall
dec
mov
jge
xor
imul
jg
sbb
push
cmp
sub
mov
push
push
jmp
xor
mov
lahf
or
movsb
sbb
aaa
int
or
fisttpl
mov
jmp
pop
push
or
mov
enter
jecxz
mov
add
cmp
aas
bound
call
pop
or
rcr
rclb
aaa
fdivl
xchg
xchg
arpl
insb
and
jp,pt
mov
jb
ss
jno
pop
sbbb
stos
push
lret
jmp
jg
mov
dec
lret
aaa
loope
push
inc
mov
outsb
push
push
arpl
sub
and
es
rcl
cld
clc
add
ljmp
inc
fwait
stos
lea
out
push
mov
outsl
xchg
cmpsl
mov
or
mov
jns
movsl
xchg
add
jecxz
xchg
rorl
jmp
and
add
scas
lret
adc
dec
pop
inc
ds
call
les
inc
inc
cwtl
sbb
stos
jmp
in
js
push
add
std
push
and
fsubrs
mov
popa
das
cmc
pop
test
mov
push
jns
push
or
aaa
pop
push
addb
add
push
cmp
add
dec
push
shll
add
push
shrb
lret
jae
test
xchg
xchg
stos
lret
rorb
cmp
mov
cltd
lahf
lret
cmp
stos
sbb
mov
call
gs
fld
xchg
or
in
mov
mov
cltd
cltd
and
or
jl
dec
aam
gs
test
ss
mov
lahf
mov
leave
arpl
push
repz
es
inc
xchg
test
stos
mov
add
cli
clc
jmp
test
dec
icebp
out
add
adc
shrl
xor
aam
or
pop
mov
hlt
hlt
iret
test
push
mov
sub
xor
inc
fnstenv
test
loop
lahf
mov
sarl
push
or
jecxz
lea
fildl
icebp
and
insl
mov
jl
mov
dec
cmp
fidivs
jge
push
movb
out
out
lcall
sti
andl
xchg
pop
pushf
fists
add
bound
mov
xchg
testb
mov
jne
pop
icebp
sbbl
mov
jns
mov
test
loop
daa
es
mov
out
push
loop
jecxz
repz
shlb
push
outsb
mov
dec
xor
adc
push
jae
in
in
or
out
imul
pop
std
ja
xor
sub
cmp
xor
lods
into
and
lret
xchg
rcll
mov
sbb
adc
pusha
out
cld
xchg
mov
push
add
xchg
rol
loopne
cmpsl
in
mov
pop
or
mov
cld
push
int3
mov
pop
adc
mov
popa
fidivrs
psubusb
mov
dec
lods
popa
sahf
sub
rorb
sbb
sbb
adc
enter
out
ja
cwtl
push
xor
fs
xchg
data16
lea
out
adc
repnz
mov
movsb
xlat
scas
push
inc
popf
loopne
jl
pop
add
aad
adc
inc
sbb
jecxz
dec
lahf
push
dec
lret
and
dec
in
fstpt
or
xor
cmpsl
inc
cwtl
clc
mov
pop
mov
fmull
in
pop
or
mov
das
test
and
mov
cwtl
cli
mov
jg
mov
sahf
sbb
xor
mov
mov
inc
popa
jo
jg
mov
mov
or
lock
insb
ljmp
ljmp
and
adc
outsl
fidivrl
and
mov
lock
xchg
sbb
js
fnstenv
mov
dec
loopne
adc
jbe
add
ljmp
ret
add
xor
sbb
aaa
cmpsb
jns
add
xlat
jne
je
inc
sub
scas
pusha
or
xor
pop
dec
xor
iret
cmc
loopne
fidivl
dec
or
in
arpl
push
mov
push
xchg
lret
aad
das
sbb
lret
push
pop
pop
int3
loope
fisubs
jmp
loop
mov
rcrl
adc
pop
ret
or
testb
jno
test
fcmovbe
sub
adc
add
inc
inc
adc
bound
sub
call
repz
pop
lods
mov
xchg
repz
push
imul
jo
sbb
dec
mov
and
xchg
idivb
outsl
std
repnz
sbb
cmp
dec
pushf
push
adc
stos
aam
mov
mov
mov
lods
ret
cmp
and
dec
ret
ret
js
scas
pop
das
imul
lods
adc
push
icebp
xor
mov
pop
test
outsb
jmp
ja
stos
inc
test
iret
test
fcomps
stc
xor
lea
mov
adc
cmpsl
dec
sarl
addr16
push
cmp
lods
aad
mov
popf
adc
mov
fs
cli
fadds
jl
cmp
outsl
pop
outsb
icebp
adcb
or
fdiv
pop
xor
push
adc
sarl
outsb
pop
and
in
xchg
pop
xorl
das
sub
push
mov
stos
cmp
testl
movsb
pop
jle
cmp
dec
inc
fldt
cwtl
mov
mov
push
sub
lods
add
sub
pop
dec
out
sbb
fsubrl
mov
cltd
mov
shl
or
xchg
pushf
pop
or
xchg
and
cmp
int
xchg
cwtl
xor
movsb
packssdw
mov
lods
gs
cmpsl
into
inc
ja
cmp
push
test
mov
cld
das
jae
pop
fsubrs
pusha
int3
mov
insb
push
loop
lahf
and
cmp
stos
xor
outsl
rcr
popa
mov
and
sahf
adc
sub
sti
daa
or
hlt
cwtl
les
pop
xor
les
mov
or
adc
push
je
repnz
add
bound
cld
jmp
mov
pop
cmp
stos
outsl
aaa
scas
sbb
mov
push
jo
dec
xor
add
mov
pushf
test
cmpsb
shrb
lahf
xchg
jle
notl
rcll
clc
mov
fwait
inc
pop
mov
insl
sar
sub
adc
sbb
and
cmpsb
ljmp
fwait
movsb
inc
jl
xchg
pop
es
add
cmpsl
negl
adcl
loope
jg
shrb
mov
jbe
sub
stc
and
and
or
fistpll
inc
sbb
mov
mov
pop
xor
into
dec
movb
xor
jo
repnz
jno
jnp
adc
push
xor
aas
xchg
dec
cwtl
ret
in
je
pop
aam
sub
leave
roll
mov
icebp
stos
xchg
sub
test
push
and
push
mov
sub
flds
lret
pushf
dec
ss
dec
mov
imul
stos
imul
hlt
dec
push
inc
sbb
aaa
notl
and
mov
repz
xchg
cmp
xor
cmpsl
rcrl
daa
or
mov
shlb
sub
mov
inc
sbb
imul
dec
shll
add
inc
mov
inc
lds
jg
imul
add
mov
xor
fistps
push
cmp
std
fwait
in
daa
inc
test
mov
movsl
leave
inc
sub
stos
sbb
adc
pop
insb
decb
fisttpl
data16
lods
std
jmp
imul
xor
outsb
das
movsb
xchg
call
hlt
out
arpl
mov
push
aad
imul
add
cmpsl
in
lods
mov
mov
js
aam
pop
leave
sub
out
fwait
in
dec
sub
repz
cmp
mov
in
add
les
mov
sahf
adc
mov
mov
cmp
jb
inc
dec
je
lea
lock
scas
mov
dec
scas
idiv
stos
ss
pop
adc
cmp
pop
and
push
mov
inc
shrb
xchg
scas
mov
add
mov
dec
xchg
mov
dec
lea
mov
mov
std
call
ss
lret
data16
imulb
nop
into
mov
and
xlat
loop
out
jno
dec
std
xor
loop
mov
outsl
adc
sbb
frstor
dec
inc
insl
fdivrl
adc
imul
ret
gs
mov
dec
aam
or
lret
and
dec
aad
inc
xor
cli
jle
mov
iret
in
xchg
jmp
cmpsl
sub
dec
pop
stos
sbb
subl
hlt
hlt
stos
dec
mov
insl
call
mov
lea
cvtdq2ps
sbb
leave
rclb
bound
xchg
insb
xchg
fistpl
js
dec
out
lret
popa
aad
adc
imul
popa
dec
das
test
lcall
or
mov
push
popf
popf
test
stos
adc
xor
inc
xor
pop
add
insb
shll
mov
repz
repnz
push
xchg
dec
cmp
xor
loope
test
fadds
jl
mov
jl
ljmp
stos
mov
test
dec
popa
cmpsl
push
adc
pop
lret
push
fnstsw
jbe
aas
inc
add
fildl
push
xor
lods
enter
add
shrb
or
jb
jmp
subb
pop
push
scas
pushf
add
das
xor
add
lahf
jmp
mov
call
sub
popf
inc
mov
lea
cmp
pop
ss
inc
pop
nop
int3
ret
or
dec
bound
cmp
adc
and
pop
and
movsb
xchg
push
or
or
stos
sbb
pop
add
xor
cwtl
scas
inc
jne
mov
sub
sbb
xor
mov
pop
lods
movsb
cmpsb
les
and
add
pop
sub
adc
add
push
cs
lret
mov
add
ret
push
cmp
mov
mov
cld
add
test
xchg
pop
cs
push
push
shll
sbbl
sub
mov
mov
movl
or
arpl
jp
and
or
jbe
dec
test
ret
lock
imul
fsubs
je
cmp
lcall
cmpb
cmp
jmp
lods
out
adc
lret
pushf
jl
hlt
mov
cmpsb
inc
int
sahf
arpl
popf
lahf
cmc
dec
fs
fcmovnb
cli
cmp
mov
inc
cs
hlt
cmpsl
mov
fwait
mov
pop
push
pop
subb
insl
pop
mov
adc
fxch
test
ljmp
pop
mov
jmp
fwait
es
cmp
add
nop
lcall
pop
and
out
arpl
fnstcw
aam
inc
sbb
dec
fmuls
or
pop
lea
jns
sbb
adcl
popa
shl
xor
test
scas
pop
das
rorb
lds
enter
icebp
std
adcb
cmp
outsl
int
lret
pop
sbb
lods
pop
add
jo
ja
cmpsb
jb
sub
out
movsl
xchg
into
dec
jnp
outsl
dec
scas
gs
mov
dec
cli
or
dec
mov
push
pop
outsb
mov
out
sbb
mov
pop
aam
movsb
pushf
mov
push
das
jbe
sbb
sbb
sub
inc
int3
shll
jne
inc
pop
repnz
jo
icebp
adcb
popf
cmp
notl
xchg
cmpsl
mov
es
es
mov
pop
cmc
pop
mov
inc
mov
bnd
fldt
out
ljmp
aaa
mov
pop
push
mov
fstpt
mov
lods
or
push
in
add
fstpl
sub
imul
clc
dec
cmp
std
xor
mov
xor
scas
je
pop
outsb
xor
divb
dec
aas
mov
mov
push
cltd
cltd
pop
popa
fisttps
pop
mov
inc
inc
xchg
je
fstp
gs
addl
jnp
adc
xor
ror
fsts
aaa
aaa
and
jno
daa
int3
leave
lret
sti
mov
jg
testb
lea
mov
faddl
pop
and
imulb
jne
lea
mov
mov
xlat
jnp
and
pop
lcall
mov
add
repz
push
lods
push
mov
in
movsl
push
imul
outsl
mov
sahf
rolb
cmpsb
lods
fdivrs
add
lret
or
cld
xor
dec
clc
jbe
adc
in
in
mov
jmp
push
cmc
pop
dec
mov
mov
dec
mov
push
adc
lods
adc
adc
xor
jno
adc
or
cmp
push
roll
xchg
in
pop
dec
lret
clc
dec
lret
xchg
scas
ds
sbb
loopne
gs
xchg
loopne
pop
jnp
mov
ret
pop
aad
jp
pushw
sbb
dec
les
or
fwait
lods
sub
lods
mov
pop
xor
gs
dec
xor
xchg
dec
cwtl
xchg
jo
cld
add
dec
xor
mov
out
cmp
ss
xchg
push
inc
cli
ret
add
jns
mov
clc
sbb
aaa
idiv
jge
les
fnstsw
xchg
insl
imul
cltd
aad
jbe
repnz
mov
sbb
push
push
mov
and
mov
idiv
ljmp
push
repnz
js
adc
loope
push
mov
push
cmpsb
shrl
clc
bound
jae
js
xorb
jns
sbb
mov
int
repnz
popf
inc
sbb
repz
mov
pop
shll
addb
fistps
out
sub
mov
xchg
scas
adc
in
mov
mov
idivl
lods
fisubs
mov
andl
mov
sub
ret
cmp
popa
pop
jo
push
mov
inc
sbb
in
sbb
les
cmp
push
and
aad
decb
cmp
jne
outsl
add
xchg
xor
cmp
or
lods
xchg
sub
add
xor
push
arpl
imul
dec
orb
pop
fdivl
cmpb
and
xchg
lock
inc
dec
aas
mov
adc
mov
loop
pop
mov
cmc
sub
jns
push
pop
leave
lds
lods
pop
add
xor
fmulp
movsl
ret
idivb
sub
into
mov
inc
outsl
loop
cli
fcomps
inc
sub
cmc
xchg
xchg
fs
fs
lea
stc
cmpsl
xor
inc
or
mov
xchg
push
arpl
stos
pop
adc
push
pop
push
adcl
sti
xor
or
and
mov
leave
xor
jae
fisttpl
cmp
xchg
inc
shr
inc
mov
mov
jb
push
shrb
ja
sub
xlat
fbld
dec
fdivrl
test
sbb
xor
das
jne
mov
sub
cmpsb
insb
pop
stos
mov
pop
gs
push
adc
sub
sbb
adc
pop
andb
stc
mov
or
sbbl
test
test
and
sbb
push
sbb
fisttps
inc
mov
or
jl
rcrl
sub
inc
cmp
movsl
pop
fwait
aam
xor
mov
js
push
or
inc
in
fiadds
sub
addr16
aaa
imul
and
test
outsl
lcall
ficomps
pop
sub
mov
sbb
mov
enter
and
push
pop
jno
arpl
sbb
cwtl
mov
mov
jle
pop
cmp
mov
int3
adc
mov
lcall
dec
xor
adc
or
in
js
call
ds
movsl
sbb
mov
or
jp
mov
les
test
cmp
lock
xchg
mov
push
or
lea
pop
mov
jo
nop
daa
push
icebp
sbb
pop
fdivrs
stos
dec
add
or
adcb
les
fmull
stc
cwtl
pop
cltd
ds
pusha
fsubp
sub
repnz
clc
into
mov
xchg
sbb
aad
dec
scas
cmp
inc
jbe
pop
in
adc
test
cmp
data16
je
mov
movsl
push
pop
mov
scas
inc
add
push
nop
mov
cmp
pusha
mov
ss
cmp
xor
in
jae
push
out
jae
xor
ret
fdiv
mov
dec
pop
add
loopne
pop
push
inc
lods
pop
cltd
push
outsl
es
xor
mov
mov
int3
mov
jecxz
test
mov
dec
pop
cmpsl
add
mov
lcall
lock
or
or
xrstor
aaa
adcb
cmc
dec
gs
dec
xchg
push
dec
insl
push
dec
mov
mov
lods
fwait
mov
lods
jnp
arpl
in
mov
mov
jbe
lods
rcrb
fsubrs
enter
fisttpl
mov
mov
push
jns
jb
test
enter
sub
push
decl
cmp
movl
into
cmp
outsl
gs
pop
jp
mov
adc
jnp
inc
inc
out
ja
push
sub
cmp
sub
xchg
adc
xorl
rorl
cmpsl
pop
or
cmpsl
push
jo
sub
pop
fwait
push
jb
cmp
nop
pop
jp
lds
jb
jge
xchg
adc
mov
leave
and
repz
and
outsl
shll
xchg
cmp
pop
sahf
xchg
push
adc
inc
mov
stc
jno
fisubrl
mov
in
mov
js
jb
jb
lds
out
mov
pushf
mov
xorb
imul
adc
mov
dec
insb
mov
aaa
stc
mov
lea
or
rcll
pop
add
sbb
push
pop
lds
jge
movsl
xor
adc
std
insl
dec
push
mov
mov
push
mov
xlat
sub
or
jbe
pop
popf
xchg
out
xorb
cmp
jne
std
hlt
mov
bound
lret
add
jns
jae
and
lret
xor
mov
movsl
jo
lret
sbb
push
cli
insl
xor
jbe
es
jmp
mov
scas
xchg
sbb
dec
arpl
aam
jo
dec
sub
es
jmp
es
out
fists
aas
popa
daa
or
mov
sbb
jb
ljmp
mov
pop
and
es
sbb
idivl
jp
lds
jge
in
mov
pop
xchg
andl
aad
lods
mov
lret
dec
jmp
std
shrb
sub
push
push
mov
cs
gs
xchg
adc
mov
jg
push
cltd
out
out
rolb
clc
jno
ds
jmp
call
dec
sbb
mov
shrl
sub
sbb
push
out
push
sbb
loopne
jae
push
cmc
add
adc
mov
jno
shrl
sub
lahf
sub
and
cmp
sahf
add
push
loopne
out
sbb
cmp
rcrl
insb
pop
clc
imul
nop
sub
in
scas
fs
sti
aad
lods
add
icebp
pop
xchg
xchg
jl
jl
repz
repnz
sub
xchg
mov
popa
pop
cmpsb
ds
shll
inc
dec
cmp
adcb
push
popa
xchg
popf
ss
leave
icebp
pop
mov
cmp
sbb
psubb
pusha
sbb
sbb
stos
inc
popf
in
or
fstps
fs
cmpsb
out
push
push
ss
mov
cltd
test
or
dec
test
sbb
movsb
lahf
xchg
jmp
cltd
xor
pusha
ja
gs
sub
pop
das
sub
sarl
scas
add
sbb
push
fwait
daa
sti
dec
cwtl
or
clc
mov
xchg
add
add
mov
inc
push
and
xor
push
sbb
push
rcrl
mov
dec
xor
ss
adc
call
xor
pop
push
or
inc
push
mov
out
outsl
jl
xor
sbb
xchg
arpl
shll
push
jl
outsb
fstl
orl
fs
cmp
push
push
stos
xor
sbb
cmpsl
sbbl
addr16
out
xchg
out
mov
popf
lea
inc
test
les
sub
movsl
out
mov
dec
mov
ret
clc
mov
cwtl
push
mov
lcall
in
pop
sbb
divb
sbb
adc
sbb
lret
xor
loop
popf
jns
fnsave
out
add
cltd
xchg
xor
or
cs
dec
pop
int3
iret
push
lods
pop
adc
xchg
sbb
ret
test
into
cmc
cmpsl
dec
cmp
mov
bound
aad
sbb
pop
jl
fisubs
sbb
lock
sar
mov
mov
dec
adc
repnz
pusha
xor
in
jo
out
insl
popa
out
mov
or
adc
aam
add
pshufw
scas
adc
sub
pop
mov
bound
and
dec
dec
jle
jg
pop
mov
insl
add
dec
pop
xlat
gs
and
into
cld
pop
clc
fidivrl
rcl
loope
inc
std
call
in
cmpsl
and
xor
lret
push
mov
je
cmp
fs
dec
sbbb
jp
arpl
xchg
bound
push
mov
add
fldt
mov
addb
mov
adc
lods
dec
out
push
test
lcall
sti
and
mov
jbe
lcall
hlt
add
loope
and
loop
pop
sbb
pop
cmp
cwtl
and
lods
fnstenv
or
test
imul
pop
mov
out
and
call
sbb
sbb
in
inc
xor
xor
nop
or
dec
xchg
aam
dec
fiaddl
mov
in
dec
pop
mull
hlt
and
mov
ljmp
test
mov
push
mov
jno
rcr
sar
and
jnp
out
aad
repnz
daa
lock
gs
shr
insb
mov
iret
jle
mov
ficomps
adc
adc
jmp
addr16
test
loopne
xchg
iret
enter
fwait
outsb
dec
cmp
xor
lahf
dec
xchg
mov
cmp
push
add
jecxz
adc
cmp
push
ret
lds
jnp
dec
mov
inc
jne
push
push
scas
mov
iret
or
or
or
inc
mov
push
and
sbb
iret
fdivr
or
jo
sub
loopne
and
xchg
scas
cwtl
movsb
ret
scas
sub
push
fstpt
faddl
fbld
cmp
sbb
frstor
bound
dec
movsl
xor
dec
sbb
dec
stc
cmp
adc
mov
sbb
xchg
jbe
sbb
int3
int
xor
jecxz
dec
mov
adc
sub
lock
mov
sahf
ja
cmp
movsb
fildl
inc
sub
je
lret
or
adcb
mov
cli
dec
mov
in
pop
xchg
jl
or
pop
or
dec
test
test
jg
sbb
iret
sub
call
ja
mov
outsb
sub
sub
fsubs
scas
pop
imul
daa
nop
push
pop
mov
pop
mov
cwtl
movsl
pushf
shlb
inc
xchg
movsb
cmp
xchg
add
cwtl
in
out
sbb
jnp
das
call
inc
jmp
aad
test
cld
inc
or
push
xchg
fldcw
mov
leave
pop
out
push
jmp
mov
fidivs
stos
mov
in
aad
adc
fs
test
aas
outsl
out
nop
xchg
insb
jne
pop
push
dec
dec
mov
cltd
pop
xchg
xchg
jo
dec
sarb
mov
ret
gs
cli
or
movsl
pop
mov
outsl
xor
aaa
pop
pop
mov
xor
insb
jge
cmp
cmp
aaa
movsl
dec
lods
subl
loopne
pop
lea
xchg
fldl
test
scas
fistl
fsubl
shll
repnz
jbe
in
jb
sar
js
push
mov
scas
mov
ret
push
mov
xor
sbb
adcb
cmpsb
in
push
mov
jns
adc
out
cmc
and
and
dec
ret
aaa
mov
sub
je
cmp
push
rclb
mov
pushf
inc
shlb
aaa
std
xchg
xchg
loop
mov
jl
lds
sahf
lock
push
rclb
sahf
cmp
addl
mov
enter
adc
adc
adc
xor
cmpsl
pop
lahf
jg
test
or
mov
and
addr16
xor
lods
dec
sub
adc
push
xchg
add
movsl
cmp
repz
fistps
bnd
or
jmp
jp
bound
notb
stc
adc
mov
push
test
xor
ljmp
jns
xchg
scas
mov
scas
xchg
out
jbe,pt
insl
mov
mov
roll
in
outsb
dec
aad
push
cs
inc
xchg
in
mov
imul
sti
xchg
jno
mov
mov
dec
xor
fldcw
imul
mov
cltd
insl
outsl
xor
icebp
sbb
mov
loop
aam
mov
cld
inc
shl
mov
and
xor
xchg
mov
ds
loopne
jg
repnz
test
or
mov
and
insl
adc
rcrb
xlat
pusha
or
or
in
lods
in
or
sbb
sub
shr
out
sub
xchg
scas
jae
daa
arpl
or
add
cmp
push
add
arpl
pop
mov
nop
push
lods
xor
push
pop
out
insb
pop
mov
pop
scas
divl
fisubl
sbb
cmpsb
jne
and
and
ss
pop
aaa
pop
adc
sahf
push
in
je
cld
cmpsl
dec
rep
pop
push
out
pop
scas
push
xchg
mov
push
in
mov
shll
sahf
je
sahf
cmpsb
popf
call
mov
sbb
xor
cmpsl
pop
and
adc
loope
aad
jb
jbe
mov
sbb
sbb
and
xlat
mov
push
sbb
rolb
xor
xor
inc
mov
or
and
sub
outsl
mov
lret
sbb
fdivl
iret
pushf
sub
enter
adc
jbe
bound
push
fwait
pop
and
sbb
dec
inc
mov
and
mov
xchg
mov
les
test
xchg
arpl
leave
shrl
pop
pop
push
out
jmp
loop
xchg
push
cli
mov
inc
cmp
add
iret
fcomps
aam
or
iret
imul
jbe
rcll
mov
fnstcw
sub
popa
pop
loopne
inc
mov
icebp
jl
mul
pop
fstpt
mov
in
xchg
sbb
jns
sbb
push
imul
out
push
sarb
pop
testb
adc
loopne
and
scas
sahf
pop
jne
or
mov
pop
loopne
int
inc
insb
mov
fcmovnb
push
test
and
daa
inc
and
push
lret
flds
cmpsl
adc
push
ljmp
out
xchg
out
clc
or
ss
inc
int
add
jb
cmpsl
dec
pop
out
dec
subb
cs
push
push
dec
mov
ds
mov
imul
pop
and
inc
test
mov
je
push
mov
and
ljmp
sahf
outsb
inc
push
pop
les
pushf
iret
mov
lea
fdivrs
mov
je
out
sarb
lock
pop
and
jns
dec
dec
aas
add
mov
lock
mov
jmp
scas
shlb
aaa
sub
pusha
push
mov
inc
loopne
daa
sbb
outsl
jb
cwtl
scas
jmp
das
out
loopne
and
popf
push
in
cltd
or
push
es
xor
push
out
cltd
xchg
mov
push
jge
stos
stc
test
das
mov
test
push
sub
or
dec
in
pop
xchg
icebp
inc
test
mov
mov
mov
pop
aaa
out
or
mov
dec
dec
decb
jae
arpl
jg
repz
rcrl
mov
lea
or
mov
mov
sbb
or
push
sub
stos
jbe
and
push
mov
insb
rcrb
mov
in
pop
cld
jg
mov
pop
scas
sti
add
pushf
push
pop
add
test
push
jnp
div
loop
cmp
or
cmp
cmp
inc
mov
inc
push
and
aam
push
or
outsl
cmpsb
pop
inc
int
jno
mov
lods
sub
popf
add
cmp
jecxz
shr
mov
lea
or
test
jmp
sub
push
push
in
push
mov
pushl
sahf
gs
add
jmp
stos
mov
xchg
xor
sub
call
insl
rol
add
mov
xchg
loopne
cltd
xchg
shrl
lods
inc
jb
fcoms
lahf
inc
lea
cltd
mov
inc
cmp
loopne
aam
stos
push
fwait
pop
ljmp
xchg
dec
cmp
adc
lcall
mov
nop
jno
jns
leave
andl
out
or
imulb
popf
adc
sbb
aad
ja
fisttpl
mov
in
pop
sub
subb
jnp
mov
sub
aad
cltd
push
inc
sub
jle
xor
int
adc
insl
in
jge
xor
push
adc
adc
jbe
mull
das
push
je
jmp
test
jecxz
sub
lahf
psubsw
imul
insb
mov
inc
cmp
sub
out
int
mov
xor
popf
cli
mov
dec
cltd
sbb
inc
push
gs
push
imul
push
dec
aad
lods
icebp
aam
dec
jecxz
and
out
aad
or
mov
dec
dec
leave
sti
xchg
sub
adc
xchg
les
xor
mov
in
cs
popl
stos
shrl
jb
dec
mov
popf
xor
jb
and
jmp
hlt
jecxz
sbbb
aam
inc
add
mov
xor
add
iret
les
mov
scas
pop
leave
addr16
pop
je
mov
fwait
dec
cwtl
out
arpl
jl
iret
mov
sub
xor
mov
xchg
shlb
out
and
add
or
sar
fildl
and
jle
repnz
adc
pop
xchg
cmp
mov
sahf
imul
in
jb
pop
jb
mov
in
sub
push
pop
mov
inc
insb
imul
cwtl
dec
ret
popf
inc
cmp
inc
fs
inc
cmp
pop
inc
push
hlt
int3
lods
cmpsb
sbb
dec
and
out
aad
sub
pop
test
add
pop
mov
aas
out
stos
add
inc
in
add
fisttpl
loopne
jae
cmp
lock
dec
xchg
mov
adc
add
cwtl
mov
out
adc
mov
mov
out
test
in
adcb
mov
sbbl
test
xchg
loope
jle
in
cltd
push
jno
xchg
jmp
dec
jg
into
xchg
popa
add
or
stc
inc
xlat
fdivrs
cmc
jge
fimuls
call
test
rcll
pop
mov
frndint
pop
or
pop
out
fstps
xor
insl
cwtl
jno
xor
push
and
sub
pop
inc
movsb
and
lods
pop
int3
clc
iret
dec
mov
into
xchg
popf
lods
mov
shrl
pop
xchg
sub
mov
jb
push
prefetch
daa
add
popf
ss
repz
mov
lock
jg
mov
pop
mov
jnp
cmp
add
add
ret
popa
arpl
or
mov
sub
in
aad
adc
rcrl
mov
iret
sbb
leavew
push
cli
inc
add
aad
xor
push
adc
mov
iret
adc
push
mov
mov
cmp
adc
jno
pop
rcrl
lods
push
into
lock
mov
fcomip
sub
push
data16
or
cmpsb
test
jl
outsl
insb
lods
cmpsl
in
jmp
sahf
and
insl
iret
add
pop
es
push
mov
into
sti
out
and
sar
jb
sub
ljmp
inc
xor
sub
punpcklwd
cli
adc
and
ret
push
aam
test
jmp
ret
xor
call
sti
inc
xchg
cs
mov
pop
cmp
test
mov
jl
movsb
and
and
mov
ret
cld
cmc
leave
mov
test
sti
mov
dec
mov
cmp
mov
pop
jecxz
repz
cld
scas
outsb
insl
push
aad
nop
mov
jmp
fstps
xchg
xchg
and
push
hlt
std
cmp
popf
dec
push
outsb
je
jecxz
push
jmp
mov
pop
adc
mov
in
stc
es
inc
vpmadcsswd
pop
test
daa
aam
aaa
mov
arpl
cmpsl
mov
scas
mov
cltd
lock
push
mov
cli
pop
adc
dec
fiadds
psllw
mov
test
repz
ds
cmp
jecxz
rorl
bound
movsb
leave
out
daa
pop
xlat
std
mov
cmp
sbb
aaa
pop
cmpsb
fcmovnbe
out
push
jp
pop
dec
movsl
in
dec
cmp
icebp
ret
or
lea
fldt
add
push
rcrb
pop
inc
or
inc
outsb
push
ret
lds
aam
cltd
arpl
lods
aas
loop
pop
ret
loopne
cmp
sub
insb
loope
xor
sub
rcr
pop
or
push
and
imull
cltd
jb
bound
adc
xor
cmp
int
jae
int3
inc
xchg
enter
sub
dec
ret
hlt
jg
pop
popa
andl
out
pushf
in
dec
dec
mov
mov
movsb
xlat
cmp
mov
divl
mov
mov
out
into
add
pop
sbb
jns
inc
es
cmp
add
sbb
push
incl
inc
sarl
sarb
scas
push
and
out
ljmp
fstps
ret
scas
rorl
pop
daa
sub
dec
imul
and
cs
inc
cmpsb
inc
sub
jae
in
ficoms
pop
cmpsl
rclb
fwait
sbb
fildll
in
scas
insb
fnstenv
mov
mov
xchg
pop
hlt
mov
mov
mov
ds
mov
cmpb
ror
cmp
inc
ljmp
and
es
nop
mov
or
cli
xor
mov
andb
jne
sbb
mov
bswap
ds
mov
push
sbbb
mov
sub
fnstenv
sbb
adcb
jge
in
in
xor
stc
stos
repnz
push
dec
xor
or
pop
mov
push
sbb
push
xor
push
xor
cmc
subb
imul
out
jno
dec
ss
adc
out
out
lods
loop
add
inc
push
and
loop
loope
dec
inc
lea
fdivp
pop
scas
fcoml
outsl
cmp
xor
xchg
loop
push
sub
adc
pop
cwtl
dec
sahf
in
jnp
xchg
push
jae
and
stos
flds
sbb
scas
sbb
test
int3
call
cmp
mov
cmp
jmp
sti
cmpsb
dec
rcrl
movsl
out
pusha
jg
add
mov
cmp
xchg
push
mov
add
xor
pop
and
aam
inc
fcomip
mov
mov
push
push
jbe
dec
mov
push
int
fdivl
fisubs
out
lcall
adc
inc
jecxz
insl
sub
add
lods
push
orl
jp
dec
fidivrl
mov
push
xor
pushf
aaa
add
and
jmp
mov
add
lods
scas
dec
in
mov
pushf
mov
inc
sbb
movsl
adc
cmpsl
outsb
aas
mov
in
andb
js
ror
xchg
or
adc
fdivs
loope
sub
jb
movsb
mov
hlt
mov
sti
out
stc
add
daa
sbb
in
dec
jo
mov
dec
dec
mov
mov
test
negb
xor
jbe
inc
fldt
scas
or
inc
sbb
or
hlt
arpl
fcomi
aaa
leave
daa
pop
cwtl
shlb
mov
imul
pusha
push
or
popa
scas
ficomps
push
jge
popa
mov
aas
jmp
imul
xchg
push
sbb
cli
xor
in
xor
jno
ret
jmp
call
sarb
xchg
fimuls
jae
push
jo
push
xor
or
mov
in
lock
loopne
pop
mov
or
pop
imul
ss
ret
dec
or
mov
or
push
push
inc
int
ret
jne
test
nop
ret
lcall
gs
jae
push
movsl
jnp
add
dec
loop
mov
into
jge
xchg
adc
xor
das
push
pop
icebp
aaa
cmp
cwtl
leave
jae
xor
vandps
sub
loopne
add
xlat
data16
bound
sbb
fsincos
dec
jne
scas
xchg
mov
xor
pop
adc
jnp
insb
push
movsl
sbb
icebp
js
xor
dec
or
sub
adc
mov
and
pop
pop
faddl
lret
add
addr16
pop
dec
sahf
pop
nop
insl
loopne
fildll
mov
das
imul
xchg
test
jae
mov
aaa
sbb
repz
mov
sub
jae
icebp
dec
scas
sub
xchg
imul
lahf
movsl
xor
mov
mov
and
mov
pop
adc
std
xor
lock
push
or
and
and
je
push
push
arpl
fdivr
inc
mov
fcompl
push
lret
stos
mull
add
mov
test
fistps
adc
sbb
dec
and
mov
shlb
adc
sub
jno
subb
sbb
push
add
push
push
dec
sbb
jmp
add
flds
pop
mov
mov
nop
dec
sbb
xor
or
repz
xor
call
mov
test
insb
lods
and
mov
xchg
int3
mov
mov
mov
xchg
inc
mov
jns
in
outsl
cmp
push
mov
mov
or
mov
ret
mov
lcall
das
jb
push
std
movsb
push
mov
enter
and
mov
out
pusha
jnp
leave
les
data16
sub
push
pop
popa
test
out
ja
aas
xchg
xchg
mov
popf
out
jmp
addr16
nop
sub
fiaddl
jle
cmc
clc
das
push
inc
fdivrs
jge
sbb
add
jge
inc
sbb
out
cmpl
mov
xchg
ret
and
adc
mov
add
fwait
mov
dec
call
cld
lret
cltd
mov
into
insb
negb
sarl
and
or
outsl
xchg
iret
nop
push
stos
popa
addr16
add
loope
xor
loopne
sbb
repz
mov
mov
xchg
inc
push
imul
sub
cmp
dec
sub
and
and
jp
ds
scas
mov
loopne
test
jae
out
adc
jge
lock
pop
icebp
xchg
adc
inc
sub
fcmovnu
les
rolb
lock
nop
popf
push
jge
dec
movsb
and
loopne
test
arpl
scas
enter
cmp
jns
imul
out
jl
lea
fidivl
mov
mov
push
xor
fists
out
ja
add
push
mov
cld
xchg
les
cli
sti
nop
inc
mov
fidivs
leave
cmp
jne
orb
aas
decb
lahf
dec
jne
sub
lea
adc
fwait
adc
and
dec
imul
adc
aas
clc
mov
jno
and
inc
add
jne
jmp
push
bnd
mov
and
add
dec
clc
idivl
dec
sub
fcmovb
sti
daa
stos
es
sbb
inc
dec
pusha
cld
scas
das
jmp
iret
cmpsl
dec
push
flds
dec
cmp
and
outsb
or
and
sub
fs
jns
aaa
cmc
mov
jns
push
jnp
pop
aam
pop
mov
pop
hlt
mov
js
lock
rcrl
xchg
or
xchg
pop
sahf
mov
mov
cmp
push
addb
repz
scas
cmpsl
fadds
fcmovnb
pop
xor
jb
cld
jo
cwtl
mov
sub
add
add
mov
jecxz
or
cli
mov
xchg
aas
sub
mov
fwait
mov
mov
call
cld
mov
insb
sbb
mov
mov
data16
test
xchg
jge
loop
jl
aas
rorb
imul
stc
int
aad
cmc
mov
and
pusha
xchg
push
sub
imul
jecxz
jg
inc
mov
mov
popa
xchg
aam
jbe
dec
sbb
lret
mov
xchg
cmpsl
jns
dec
xchg
scas
dec
jnp
scas
sub
mov
cli
aad
add
ror
fldl
out
xor
mov
outsl
xlat
in
add
mov
cli
add
les
bts
enter
pop
cmp
push
adc
pop
mulb
out
daa
push
pop
mull
mov
test
mov
or
cli
mov
ljmp
or
adc
and
adc
orb
aas
imul
rcr
mov
dec
xchg
xchg
inc
xchg
lock
add
and
fucom
xchg
mov
adc
shll
pop
dec
cmpsb
fnsave
fadds
sbb
loop
shr
fstps
pusha
imul
sub
aam
pop
push
stos
inc
pop
cmp
rol
bound
dec
bound
cmp
pop
ja
cmp
cmpsl
push
jo
iret
notb
stos
cmc
loop
jae
mov
adc
scas
ds
js
mov
push
fcompl
and
cmp
lods
pop
xchg
xchg
movsl
loopne
iret
daa
xor
cli
testb
pop
jne
pop
xchg
out
jge
mov
or
pop
mov
jp
pop
pop
mov
je
fistpl
test
add
adc
dec
cmpsb
pop
imul
mov
push
loope
mov
loopne
je
mov
and
les
and
ljmp
mov
adc
pop
mov
ljmp
aad
mov
jmp
ljmp
popf
add
inc
inc
in
insb
lods
lahf
les
aas
inc
pop
pushf
mov
test
inc
xchg
inc
push
outsl
iret
sub
fs
nop
xchg
jbe
hlt
cwtl
cld
jbe
mov
sahf
test
call
sahf
cmp
std
sub
pop
je
lock
lds
fs
in
rclb
xchg
mov
icebp
inc
sub
cwtl
cmp
adc
test
pop
test
ds
sub
ja
js
jmp
cmp
cmp
mov
rcrl
jns
dec
out
movsb
or
inc
mov
xchg
sbb
lock
sbb
and
cmpsl
jmp
sub
or
dec
jl
outsb
incl
xchg
xchg
daa
inc
popa
and
dec
xchg
lcall
test
in
push
add
cmpsb
xchg
insl
out
inc
loope
mov
mov
mov
icebp
mov
inc
fwait
pusha
mov
outsl
xchg
add
pop
ljmp
jl
jb
mov
xlat
push
xchg
xchg
fbld
adc
and
gs
enter
push
sbb
push
cmpsb
mov
cmp
add
insb
lea
jl
push
sbb
or
cmp
repnz
push
mov
cmp
ficompl
sarb
mov
rclb
inc
scas
push
lock
pop
xchg
dec
jge
nop
push
aaa
push
shrl
das
xchg
shrl
mov
shll
lahf
pop
mov
sarl
pop
lret
xchg
lods
jbe
mov
rolb
add
std
jne
jecxz
stos
pushf
mov
sub
pop
dec
stos
stos
imul
or
repnz
xchg
mov
mov
ds
push
pop
mov
dec
sbb
push
inc
out
pop
movsb
dec
inc
lcall
mov
cmp
or
outsb
cli
aaa
cmp
out
es
cmpb
mov
or
test
addr16
jl
cmpsl
and
adc
pop
or
jnp
addl
les
jne
mov
add
in
jg
xlat
mov
mov
ret
inc
and
mov
addr16
cld
xchg
ret
fcomp
call
cmp
aad
subl
mov
mov
imulb
add
cmp
adc
sbb
mov
add
or
mov
mov
jae
aad
out
lret
ds
inc
sub
pop
sti
xor
test
cld
dec
arpl
inc
jbe
stos
mov
cmpsb
adc
push
aas
or
mov
daa
jmp
dec
ljmp
sub
or
je
xchg
iret
jo
movsb
jecxz
js
leave
leave
fsubl
push
adc
jne
out
pop
loop
insb
mov
and
and
or
jle
xchg
into
dec
sub
test
loope
sbb
fwait
add
inc
xor
mov
sub
fnsave
jnp
pop
bound
mov
mov
inc
jne
test
out
sub
pop
shlb
lahf
adc
sub
inc
push
cli
cltd
out
fisubl
ja
addr16
testb
pop
sahf
mov
mov
xor
xchg
pushf
or
jbe
dec
push
into
outsb
popa
mov
cmp
adcb
jmp
iret
sub
or
out
imul
mov
add
aaa
je
and
fbld
mov
sbb
push
pushf
scas
sub
adc
or
pushf
add
xlat
test
cmp
popf
push
sahf
mov
outsb
mov
mov
cmp
jle
add
jmp
mov
dec
push
nop
jp
sub
cmp
stos
icebp
fmul
push
or
cmp
lds
cmp
and
int3
mov
add
jle
dec
inc
stc
push
lods
dec
jne
insl
lahf
dec
outsb
out
jno
inc
int3
inc
sahf
push
in
pop
push
and
and
rcll
movsb
cmp
mov
pop
outsb
cmp
movsb
data16
and
jns
jp
subl
ljmp
dec
sub
stos
imul
jg
lret
or
or
nop
cmc
jo
popf
mov
and
push
jp
loop
cltd
aad
int
add
lahf
aam
aaa
subb
adc
xchg
and
fiaddl
hlt
push
push
repz
xchg
inc
mov
push
cmp
pop
dec
das
jle
xchg
inc
insl
lret
test
ret
unpcklps
arpl
in
aam
or
xor
xor
idivb
pop
xor
or
inc
or
cmp
inc
jns
xor
mov
push
bound
das
pop
jge
and
ror
inc
jmp
push
testb
outsl
jbe
sbbb
inc
jle
shlb
pusha
int
add
mov
mov
bound
sbb
out
and
sbb
mov
mov
lods
out
pop
fsts
out
mov
push
rolb
fadd
dec
pop
in
mov
inc
rcrb
fs
scas
push
jo
mov
shlb
pop
popf
stc
fsubrs
push
xchg
int3
inc
inc
fsubrp
cmp
adcl
mov
scas
clc
push
mov
add
leave
push
push
push
xchg
in
xor
sahf
loopne
add
xchg
mov
sub
push
jnp
pop
jbe
xacquire
xor
cmp
xchg
jmp
vfrczps
or
pop
xor
mov
sub
loop
mov
aad
shl
cli
jmp
test
loop
jg
sbb
imul
imul
mov
xor
or
push
xchg
cltd
or
fsubrl
cld
push
adc
sub
pushf
xchg
dec
jae
pushf
fcmovnu
out
inc
cmpsl
mov
ss
out
fsubrs
outsl
inc
adc
aaa
pop
mov
xchg
pusha
add
adc
xor
and
rcrl
add
daa
aam
ret
and
push
add
add
mov
or
enter
or
lahf
mov
lock
popf
rolb
enter
pop
push
nop
test
push
sbb
dec
xchg
int
cmpsl
fimull
push
into
or
mov
arpl
inc
sbb
and
xor
sub
ds
mov
cmpsb
sbbl
mov
cli
aaa
adc
push
mov
add
xor
ret
fisttps
lea
xor
shlb
push
rcrb
dec
sahf
and
mov
sbb
inc
ljmp
int
inc
xor
xor
and
sbb
lods
or
in
xchg
loopne
jno
andb
mov
xchg
pop
pop
loopne
in
mov
test
es
data16
push
mov
dec
lods
scas
inc
sbb
mov
sub
ret
int3
push
mov
mov
xchg
mov
pop
fistpll
adc
xchg
sti
imul
adc
lret
cwtl
pop
test
int3
jge
jae
adc
loope
daa
mov
fs
in
fwait
mov
ret
push
pop
in
arpl
mov
sbb
xchg
pop
and
mov
insl
fsubr
mov
fs
lahf
and
mov
xor
and
leave
sub
arpl
mov
jmp
sbb
adcb
ss
mov
inc
jge
cmc
and
outsb
rcll
lcall
mov
int
outsl
loope
pushf
mov
bound
in
mov
mov
call
int
scas
das
ficompl
and
push
das
rolb
jl
adc
popf
add
test
aas
pop
xor
sbbb
and
xchg
rcrl
mov
lret
and
dec
xor
dec
imul
cmc
jmp
mov
sub
dec
push
stos
add
jle
add
loop
inc
icebp
xchg
mov
push
jne
fwait
inc
mov
xor
jb
sub
sub
cwtl
and
stos
mov
stos
popa
stos
lret
bound
inc
inc
addr16
in
loopne
add
push
mov
js
dec
cmp
mov
movsb
sub
inc
add
mov
fxch
lret
push
mov
cld
mov
push
push
not
add
add
test
dec
adc
lret
loop
mov
test
jmp
sbb
cmp
fists
out
insl
xchg
pushf
inc
sub
pop
jmp
xlat
add
aaa
fnstsw
push
divl
adc
addl
aaa
lea
adc
and
test
out
lahf
sub
push
daa
lcall
nop
push
aam
jle
or
push
ffreep
mov
movsb
in
xchg
adc
and
xchg
sub
jmp
jmp
mov
mov
mov
inc
mov
lcall
icebp
adc
jnp
cmp
sbb
subl
dec
inc
sub
scas
inc
fisubs
lcall
enter
sub
add
cld
cwtl
imul
imul
add
lahf
pop
jne
ret
and
dec
pop
cmp
addr16
xor
lret
in
call
push
clc
or
push
int
mov
stos
lods
mov
add
add
jne
pushf
stos
aaa
pop
adc
xor
dec
or
xchg
in
aaa
paddusw
sahf
jno
movsb
mov
push
pop
les
fstpl
cli
neg
jl
sub
and
ret
stos
cmp
jg
aam
adc
jbe
js
fwait
cmpsb
xchg
and
mov
dec
mov
cli
mov
fs
clc
stos
repz
mov
dec
push
jns
test
add
les
xor
pop
mov
mov
or
and
sbb
dec
aad
subl
shl
frstor
inc
push
roll
inc
mov
ret
insl
inc
pop
test
lcall
xor
add
ja
or
andps
xor
testb
mov
dec
enter
sbbb
popf
mov
ja
push
pop
cmp
js
inc
xchg
xchg
push
xlat
lods
mov
shlb
imul
negb
and
add
sub
in
setae
and
xchg
mov
mov
int
mov
xchg
sub
cld
imul
adc
adc
shll
add
pop
sub
mov
push
int3
fistl
loop
ss
pop
sbb
in
clc
inc
pop
cli
inc
adc
daa
jne
cmc
inc
mov
cmp
sbb
inc
pop
ja
fnstcw
cmpsb
jno
jg
pop
fcoml
movsl
pop
inc
push
cmp
pop
js
or
push
push
loope
ljmp
and
and
rdtsc
mov
mov
cmp
adc
ja
addb
jae
pop
or
fadd
aaa
mov
and
push
out
mov
inc
movsl
pop
jae
jge
mov
jge
add
lahf
mov
adcb
imul
popf
xchg
inc
mov
adc
pop
outsl
movsb
out
pop
xchg
lds
out
imul
lret
test
mov
and
dec
xor
inc
loop
adcl
jbe
lea
cmp
int
mov
inc
and
lds
jg
mov
lret
ds
pop
adc
test
sub
pop
push
orl
ljmp
pushf
adc
sti
enter
mov
in
shlb
gs
pop
inc
dec
push
jne
or
mov
nop
lcall
fmuls
jo
cmp
mov
jb
jne
and
mov
ret
adc
sbb
xor
ds
pop
xlat
arpl
or
jb
aad
out
lret
sti
jg
add
scas
out
jmp
cltd
test
pop
jnp
inc
mov
xchg
jae
push
jae
ret
mov
sub
test
inc
data16
cmp
gs
or
xchg
and
loop
fists
frstor
shlb
sub
inc
lahf
aam
dec
inc
push
cli
jmp
push
scas
loop
mov
lcall
xor
cltd
shl
sub
movsl
push
mov
sbb
and
aaa
in
aaa
lods
rclb
xor
or
dec
loope
adc
cmp
cmp
xchg
sbb
dec
aad
clc
mov
jg
fcmovne
sti
out
iret
push
inc
and
or
push
xor
push
fdivrl
out
adc
mov
aam
push
fldl
sar
sbb
cli
mov
lea
sbb
roll
cmp
aad
jl
jp
mov
push
dec
pop
push
into
sub
sbb
lods
cmp
jnp
lret
ret
mov
inc
xchg
or
jb
or
xor
repz
xor
cmp
aam
cmc
ja
xchg
repz
xor
mov
fsubrl
idivb
out
mov
dec
mov
xlat
cmc
pop
push
jp
pop
mov
loopne
xchg
pusha
mov
mov
outsl
aaa
inc
mov
lahf
arpl
shrl
cltd
xor
out
call
mov
push
pop
imul
aad
rdpmc
dec
push
xlat
and
mov
xchg
add
pusha
fsubrl
ret
fs
mov
push
int3
repz
jg
je
adc
xor
push
mov
mov
push
bound
and
arpl
sbb
scas
push
stc
push
push
scas
pusha
inc
and
aam
lret
mov
inc
mov
std
mov
and
push
adc
mov
inc
jb
bound
aad
push
add
cmc
repnz
aaa
push
pushl
add
cmpsl
mov
xor
mov
adc
lret
test
out
data16
popf
xchg
jae
pop
aaa
loopne
js
fidivl
jns
out
cwtl
sub
cmc
add
aaa
mov
mov
sbb
pop
jne
fisttps
push
cmp
inc
jge
aam
add
xchg
mov
paddsw
mov
es
adc
icebp
jle
pop
sbb
inc
inc
sbb
stos
jne
in
scas
test
sbb
add
mov
xor
dec
pop
pop
jb
movsb
dec
sub
aaa
inc
popf
addr16
mov
mov
leave
jb
cs
js
decl
push
xchg
fistpll
test
cmc
stos
push
xchg
nop
xchg
jl
mov
ljmp
aam
pop
aas
push
and
or
cmpsb
jne
insl
mov
mov
cmpl
push
mov
jmp
lea
into
push
je
lock
cli
inc
out
jb
xor
idivb
bound
push
in
lahf
mov
sbb
dec
mov
sti
les
sbb
fadd
ds
into
lods
das
clc
mov
arpl
lahf
dec
repnz
jno
jnp
sub
push
mov
mov
add
cwtl
push
sahf
in
out
ret
leave
leave
cld
mov
mov
mov
and
movsb
xor
shlw
call
test
push
pop
aad
xchg
mov
enter
sti
xchg
cld
js
or
test
and
mov
mov
fcmovnb
dec
xchg
jge
mov
lcall
leave
lock
test
sti
in
stos
call
and
inc
push
loop
mov
loop
mov
enter
push
jecxz
incb
ss
adc
in
dec
addr16
pusha
pop
aad
push
mov
daa
mov
inc
and
movsl
loopne
jbe
fwait
int
mov
push
addr16
out
mov
test
daa
xchg
insl
and
fst
dec
out
test
and
adc
or
test
push
cmp
dec
sub
rolb
xor
push
rclb
mov
inc
sbb
dec
mov
sub
sub
mov
push
mov
push
mov
jnp
cltd
enter
sbb
mov
mov
pop
movsl
jp
gs
mov
fcompl
sub
mov
pop
adc
shl
mov
xchg
xor
lret
rorb
add
movsb
out
aas
or
scas
or
in
inc
testb
subl
rcll
push
push
add
popa
nop
imul
leave
popa
inc
jecxz
inc
jne
mov
inc
mov
popa
sbb
mov
pop
xchg
xor
les
inc
pop
cmp
insb
xchg
stc
xor
xor
pop
cmp
addb
xor
insl
inc
pop
xchg
les
jl
lods
dec
xchg
mov
and
fdivr
sti
pop
cmp
jb
int3
enter
xor
add
loop
mov
add
sub
je
jns
loop
adc
inc
dec
cmp
les
sbb
push
shlb
mov
push
je
and
xor
add
push
push
mov
jmp
outsb
out
xor
and
das
push
movl
sbb
or
or
test
icebp
jg
ljmp
dec
push
test
int
jl
dec
cmp
mov
in
xchg
mov
fsts
pop
test
mov
lahf
push
dec
inc
lock
lahf
or
dec
outsl
imull
mov
imul
mov
sbb
cmpsb
push
sbb
jmp
clc
xchg
xchg
iret
in
sbb
xchg
ss
fisttpl
lret
mov
dec
fdivs
pop
xchg
sahf
movsb
leave
pop
push
add
add
filds
gs
inc
pop
jnp
add
add
xchg
rorb
mov
jl
cwtl
lret
rolb
iret
clc
push
inc
adcl
pop
mov
add
sub
mov
leave
jg
cmpsl
push
mov
in
pop
sbb
jmp
les
sub
adc
mov
jae
mov
jmp
mov
xor
js
adc
es
loop
lcall
jp
sarl
cmp
sub
cmp
loope
ss
enter
shll
fstl
sub
add
jnp
js
aad
add
cmp
cmp
push
pop
mov
push
sbb
aaa
test
jae
mov
in
arpl
icebp
movsb
cmp
pop
sub
lds
adc
pop
movsb
jge
jle
aam
jno
cmpsb
sbb
xor
loope
addr16
rclb
mov
stos
shlb
push
jecxz
sub
rcr
lea
mov
mov
sbb
inc
jns
cmc
fwait
int3
movsb
in
incl
add
fwait
push
xor
push
xchg
xchg
dec
xchg
rcll
mov
jg
mov
xchg
sub
push
push
mov
adc
pop
mov
cltd
aas
fsubrp
and
sub
add
jle
xor
cmp
fdivrl
pop
orb
pop
push
lcall
ds
xlat
loop
push
cltd
ret
jbe
sub
xor
fstpl
xchg
inc
xchg
enter
jnp
xchg
int3
popf
movsb
scas
adc
lock
sarb
mov
dec
call
stos
adc
das
add
lods
sub
push
push
call
push
mov
or
mov
push
jle
fdiv
add
aaa
xchg
inc
add
xchg
test
or
xchg
xchg
push
sub
jmp
mulb
jmp
jge
jge
cmpl
je
push
int
ljmp
sbb
push
mov
dec
xchg
inc
pop
cmpsb
leave
or
mov
mov
pusha
and
outsb
stos
outsb
mov
dec
ds
and
jns
push
push
xchg
mov
mov
loop
or
pusha
jne
loopne
xorl
xchg
push
cltd
xchg
scas
inc
xor
adc
xchg
sbb
orb
cmc
push
mov
push
mov
cmp
in
adc
xchg
and
mov
cmp
mov
xchg
fstpl
sarl
or
push
addr16
cmpsb
push
stc
pop
sub
and
add
add
dec
dec
push
aad
in
pop
pop
sahf
lds
mov
scas
cmp
lcall
insl
incb
xchg
test
adc
dec
inc
xchg
jae
arpl
pop
cmpsl
mov
jnp
push
int3
xchg
inc
mov
mov
jl
adc
popw
jmp
pushl
sub
jne,pt
push
test
xchg
out
cmp
and
fiadds
sub
cmp
inc
inc
shrb
push
arpl
jp
ficomps
insb
lahf
dec
out
nop
mov
fcmovne
mov
push
fisttpl
pop
repnz
daa
lret
rclb
shl
cmpsl
stc
ja
icebp
subb
fsubrs
addb
stos
inc
dec
mov
in
sub
lea
pop
sbb
das
into
or
jno
scas
dec
aas
mov
push
jne
push
les
cmpb
mov
lcall
shrb
in
adc
daa
xchg
test
clc
or
fisttps
stos
outsb
sub
sub
jb
dec
mov
push
out
mov
cmpl
dec
xchg
aaa
popf
aad
mov
lods
pop
mov
mov
sub
mov
das
popf
lods
repz
add
push
cmp
sub
adc
cld
push
add
aas
sub
push
sub
mov
call
lods
sbb
mov
mov
js
pop
mov
inc
mov
mov
movsb
and
clc
mov
mov
fsubrs
push
imul
ljmp
rolb
repz
pushw
test
fisubs
xchg
sbb
outsb
xchg
push
ucomiss
xchg
xchg
test
mov
jb
imul
inc
divl
data16
push
cmp
movsb
xor
js
cmc
jb
pop
pushf
sbb
mov
jb
mov
fdivs
pop
inc
insb
add
mov
aam
movsb
pop
out
pushf
les
add
mov
js
ss
fbstp
pop
mov
mov
jmp
movsb
lock
xchg
xchg
inc
sbbb
in
add
in
fwait
jle
stc
and
fwait
xor
in
rol
adc
popa
loopne
or
mov
push
fiaddl
jmp
cmp
fmuls
lock
mov
mov
xchg
in
push
std
lea
dec
lcall
jp
mov
push
pop
jne
or
faddl
sub
sub
xor
fs
xchg
cmc
jbe
fdivrl
jnp
and
inc
jmp
push
push
bound
rclb
cmp
dec
iret
pop
stos
addl
lds
in
push
jle
divl
data16
out
mov
fwait
movntq
push
cmpl
mov
jno
mov
sub
mov
sti
aam
nop
dec
scas
int
imul
lock
popf
in
vpacksswb
test
pop
xchg
jp
pop
subb
sbb
lock
sub
leave
inc
lods
xchg
pop
pop
push
or
add
insb
out
subl
sti
test
jo
pop
pop
cmp
fcmovbe
xchg
mov
mov
sbb
in
in
jg
clc
cmpsl
cmc
rclb
jecxz
sbb
push
leave
loopne
movsl
xlat
cmp
cwtl
shll
lahf
ret
mov
pushf
mov
pop
ficoml
add
movsl
xchg
xor
and
jo
test
or
and
mov
adc
mov
aas
lret
lods
xorb
mov
mov
loopne
cmp
xlat
sbb
lret
sarb
lock
js
mov
sub
mov
pop
cwtl
notb
pop
xchg
flds
stc
lahf
cmp
jnp
je
cmpsl
call
add
fbstp
dec
aam
fsubs
movl
xor
ljmp
loope
leave
cmp
push
xchg
bound
push
or
mov
push
inc
cmpl
andb
lds
scas
clc
stos
aam
icebp
shll
adc
pop
jae
movsl
icebp
xchg
inc
dec
adc
adcb
cmpsb
adc
test
rcrl
mov
insb
mov
mul
je
mov
inc
cli
ret
andb
jne
out
test
and
xchg
mov
dec
imull
aad
xchg
jae
cld
inc
test
lret
or
iret
xlat
jo
in
loop
fsubrp
cltd
sbb
cmpsl
lahf
sub
pop
jle
nop
mov
in
dec
xor
dec
mov
lahf
mov
and
scas
sub
adc
fdivl
and
dec
jl
outsl
int3
cmc
iret
fwait
cmp
mov
filds
repnz
and
and
cmpsl
dec
in
dec
scas
fwait
inc
mov
jp
pop
in
xor
and
mov
dec
push
icebp
cmp
loop
stc
out
fs
mov
push
fcmovbe
pop
stos
test
scas
test
push
test
bound
inc
mov
lea
int
aad
cmovge
out
push
test
addb
outsl
fsubs
adc
add
ret
mov
stc
into
jo
or
mov
mov
and
mov
xchg
adc
xchg
pushf
dec
cmp
pop
call
hlt
aad
fstl
filds
sbb
push
and
jecxz
roll
and
mov
in
test
popa
push
mov
fsubrl
cmpsl
mov
clc
push
inc
arpl
lahf
xchg
arpl
push
dec
lock
fdiv
stc
sahf
cmp
fwait
ror
or
cli
jge
xchg
rolb
js
fisubs
xor
xor
aad
dec
cltd
mov
cld
push
int
push
fdivs
lods
fs
pop
xchg
pop
xor
mov
dec
mov
add
aad
enter
xor
pop
xor
lods
xor
or
adc
rol
inc
mov
mov
and
cmp
jo
pop
sub
les
sbbb
pop
xchg
cmp
or
rcl
add
movsb
pop
dec
call
int3
ret
punpckhbw
int3
push
xchg
xchg
cld
push
xchg
push
in
lret
mov
lea
add
jno
je
add
hlt
or
xchg
int
sub
ret
push
scas
sub
lret
scas
sbb
add
insb
xor
jge
xchg
mov
pop
jle
mov
ja
pusha
push
into
mov
push
shlb
ret
orl
sbb
cmp
test
sbb
xor
fdivr
push
mov
mov
cmpl
jmp
inc
outsb
push
lock
movsb
dec
mov
fwait
sub
cmp
and
mov
imul
scas
add
pusha
xchg
jb
not
fistl
sub
scas
fsub
adc
and
test
cwtl
nop
mov
push
mov
fistps
inc
out
cmpsb
enter
jge
pushf
cmp
js
addb
dec
cmp
int
cmp
sar
testb
jb
adc
add
xlat
aam
dec
and
mov
jmp
mov
les
icebp
or
or
lret
shrb
insb
xchg
push
ljmp
push
nop
jl
jge
xor
xchg
mov
xchg
repz
add
shl
dec
jae
aam
add
ds
hlt
xor
mov
cmp
cmp
cmp
cmp
push
add
pop
dec
rorl
shll
push
sbb
repz
sbb
lretw
mov
adc
cltd
fldpi
cmp
pop
adc
cmpsb
mov
mov
es
jno
faddl
inc
out
insb
mov
dec
pop
push
xor
orl
xchg
push
test
xchg
dec
rorl
in
in
inc
out
mov
sbb
sub
pusha
pop
and
xor
push
cltd
aas
cmp
xor
std
jbe
andl
mov
icebp
repz
xorl
clc
cld
out
je
sub
sbb
mov
repnz
jl
rclb
lock
je
or
mov
jae
xorb
faddl
push
jecxz
dec
fidivrs
jb
sahf
dec
mov
adc
movsl
adc
mov
lret
outsb
ja
aas
or
frstor
repnz
push
scas
jbe
xor
and
jne
enter
add
pop
lret
addr16
and
push
or
in
insb
pop
in
push
jp
xor
movl
je
mov
lods
and
push
repz
cmp
adc
xor
das
mov
mov
mov
mov
ds
xchg
pop
test
cltd
add
dec
ds
or
jnp
adc
dec
es
enter
dec
adc
push
and
outsb
iret
mov
inc
arpl
mov
stos
jp
sub
je
dec
inc
push
lods
or
mov
je
out
sub
lock
test
mov
and
rcr
sub
sub
inc
into
cmp
insl
inc
clc
test
sub
mov
aas
jecxz
adc
mov
pop
shr
loopne
sbb
inc
pop
aas
inc
dec
and
mov
cmp
les
cmpsl
dec
adc
mov
sub
xchg
jle
push
les
jo
js
xor
cmpsl
js
out
jl
push
jnp
cmpsl
push
fisttps
lcall
cmpsl
lds
in
xlat
loopne
ljmp
mov
add
inc
cmpsb
bound
or
jb
sub
jbe
adc
dec
xchg
rolb
pop
xor
fwait
pop
xor
sbb
or
inc
out
imul
mov
xor
int3
mov
xor
mov
sahf
sub
loop
popf
pop
psubusb
pop
pop
mov
in
jmp
std
hlt
cltd
outsl
rcl
mov
push
daa
push
jae,pt
stc
insl
jbe
cld
xchg
frstor
inc
inc
push
xor
pop
sub
push
dec
insb
scas
jge
xchg
insb
shlb
jnp
cmp
in
xchg
daa
jp
or
xchg
ret
shr
lret
les
inc
sub
dec
and
adc
mov
push
lods
into
fistps
sbb
or
int
mov
rcrb
lcall
pushf
jge
movaps
adc
lea
mov
or
add
rcrl
jno
mov
push
dec
pop
pushf
mov
pop
mov
inc
jo
add
fbld
in
repz
mov
mov
mov
fisubrl
fbld
std
inc
push
jns
mov
dec
jge
fisubl
and
popa
push
aaa
sti
mov
push
fs
push
jb
push
or
cmp
daa
sub
pop
sbb
lods
adc
clc
fildl
pop
push
sbb
std
nop
fdivr
out
shl
js
mov
inc
dec
push
popa
sub
popa
xor
test
insl
xchg
ficoms
pusha
cmpsl
fcmovnu
shrl
mov
stos
push
push
shlb
mov
pushf
outsb
insb
mov
jmp
pop
testb
int
fdivl
inc
push
dec
arpl
jae
mov
dec
sarl
ja
jae
lret
enter
clc
jp
rcrb
movsl
jmp
int3
or
xchg
sub
jae
lahf
xor
repz
or
xchg
mov
xor
mov
frstor
bound
jp
add
in
aam
clc
shll
mov
adc
int3
dec
jno
mov
push
stc
and
mov
mov
adc
insl
in
push
xor
cmp
adcl
out
nop
xor
jp
mov
mov
add
add
jno
int3
inc
cmc
js
cmp
cs
hlt
jo
movsl
sbb
mov
inc
rolb
and
rorl
fisubs
popa
pop
ljmp
movsl
mov
loopne
and
mov
mov
test
jne
add
inc
push
scas
mov
loop
and
jecxz
je
repnz
and
stc
call
test
adcb
inc
xchg
cmp
mov
dec
mov
lea
jae
div
add
fiaddl
or
outsl
push
lock
mov
mov
sbb
icebp
jl
push
mov
adc
xor
fidivl
out
iret
adc
cmp
hlt
xor
mov
test
lret
sbb
jns
inc
jno
js
mov
mov
repz
inc
cmp
pusha
ret
pop
fisubs
mov
cmp
pop
adc
lret
mov
adc
in
call
jle
out
push
jo
sti
cmp
loope
xor
and
mov
imul
out
cmp
xor
pop
lret
out
ss
dec
sti
dec
daa
imul
loopne
xor
icebp
lods
ljmp
adc
push
das
or
ja
les
test
mov
sbb
int
fucomp
cmp
aam
push
insb
xor
push
nop
aad
scas
testl
out
cwtl
ret
pop
and
dec
sbb
outsb
sub
mov
mov
ret
out
loopne
lret
xor
aam
not
mov
loopne
not
aam
push
dec
and
sbb
aad
cmp
hlt
xchg
and
dec
jnp
xor
xor
jno
stos
les
pushf
and
adc
lret
mov
cmp
jl
cmp
test
push
add
ret
mov
dec
sub
push
fwait
mov
and
cmp
lds
popf
in
dec
test
outsb
lret
fs
sbb
into
xor
in
stos
mov
jne
pop
push
and
sub
imul
testb
adc
ds
sahf
dec
pop
adc
pop
sarl
add
leave
mov
ss
pop
add
mov
lret
jae
xor
push
add
inc
fwait
sub
ror
data16
push
ljmp
loopne
arpl
divb
and
popf
jle
stos
popf
subl
fimull
cmp
lcall
pop
aaa
popf
push
jmp
imul
cmp
lock
outsb
inc
mov
jns
sbb
rcll
movsb
icebp
sub
leave
femms
outsb
dec
mov
ds
imul
pop
and
inc
or
cli
sbb
in
mov
outsl
movsl
mov
dec
insl
xor
or
inc
pop
cmp
mov
scas
ljmp
mov
in
aad
data16
fwait
sbb
mov
xchg
int3
cmp
mov
add
and
and
inc
iret
mov
jge
pop
jge
sbb
jp
bound
inc
lods
test
mov
jl
filds
mov
stos
dec
push
sahf
stos
pop
dec
adc
inc
sub
outsb
or
push
inc
sti
arpl
inc
cmpsb
pop
xor
in
adc
push
das
jae
mov
pop
subb
mov
sbb
shl
mov
jg
mov
add
test
out
jae
push
into
jg
into
ficompl
cmp
imul
jg
imul
push
mov
stos
aaa
daa
mov
lea
jnp
fs
scas
xchg
je
cmp
gs
outsl
mov
pushf
or
or
jbe
push
or
push
call
ja
add
std
push
sti
popa
mov
es
pop
jb
cmp
and
loope
jbe
in
mov
push
lret
inc
and
mov
mov
ret
pop
mov
mul
data16
xchg
inc
jae
push
mov
es
sub
mov
lahf
sub
or
sbb
fmuls
push
ret
cwtl
std
rorb
rcll
add
sbb
inc
xor
call
enter
lds
jmp
cli
movsb
jg
pop
jno
push
loop
push
movsl
jmp
mov
sub
xor
mov
pop
aaa
pusha
mov
addr16
test
int3
pop
add
sub
cwtl
sbb
or
sarl
pop
mov
ljmp
dec
sbb
push
mov
loope
inc
mov
daa
or
int3
push
xchg
loope
pop
pop
push
test
fldcw
add
jp
push
in
and
sub
sbb
pop
mov
or
out
stos
xchg
xchg
loop
mov
adc
mov
jns
js
or
cli
inc
sub
push
pop
add
out
lret
fs
fcmovnb
mov
ss
jle
pop
loope
outsb
sbbb
aas
cwtl
add
jmp
cmp
ds
mov
sbb
jge
outsl
imul
lock
ficoms
push
xor
cmp
fwait
inc
loopne
cmc
xor
pop
push
pop
inc
jg
cmp
push
xor
leave
scas
lcall
push
lea
sub
add
lahf
inc
jecxz
das
push
pop
mov
cmp
hlt
adc
pusha
add
movl
pop
fildll
xor
push
cmp
or
outsl
ds
std
jbe
mov
xlat
mov
aam
sub
leave
leave
jno
add
jge
adc
imul
ljmp
sbb
add
pop
inc
jae
add
fistl
push
pop
xchg
arpl
in
mov
outsb
outsb
inc
adc
jg
movsb
jl
lret
sbb
inc
andb
aas
pop
fyl2x
push
mov
sbb
movaps
movsl
lcall
push
push
adc
in
cltd
and
and
mov
std
or
mov
adc
sbb
jns
data16
js
cld
testl
or
repz
fbstp
gs
mov
add
inc
rcr
mov
adc
xor
inc
hlt
mov
test
or
or
jge
mov
aam
movsl
or
in
outsl
les
hlt
testl
push
aam
or
dec
outsb
and
std
mov
push
nop
jo
sti
adc
jne
cmpl
test
mov
movsb
jbe
clc
ret
mov
xor
cmp
fdivrs
xor
inc
mov
cmpsb
jl
inc
fpatan
aaa
adc
and
stos
dec
push
sub
mov
popf
mov
insl
into
sbb
xor
sbb
xor
stos
or
dec
icebp
or
jb
fisubrl
test
mov
mov
push
adc
shl
outsl
adcb
pop
xorl
jno
sub
fdivrl
mov
hlt
and
pop
lods
push
outsl
mov
xchg
mov
push
sub
push
mov
mov
imul
ss
lret
test
lods
jl
cmpsb
loope
pop
lods
mov
test
hlt
sarb
lret
aad
inc
cli
insb
sub
rorl
sbbl
xor
mov
pop
repnz
and
test
std
popa
mov
jge
xchg
mov
js
int3
or
ja
jmp
rclb
mov
repz
in
addr16
pop
lea
xchg
adc
in
mov
sub
nop
xor
aad
push
push
sub
xchg
xchg
cmpsl
push
in
repz
push
cmp
hlt
sarb
cli
fs
or
cltd
mov
fistl
out
ret
lret
fsubl
lar
pop
mov
dec
inc
imul
and
adc
inc
jle
pop
pushf
push
into
fnstenv
mov
test
insl
sbb
insb
push
sarl
add
push
pop
push
and
mov
adcl
lock
xlat
jno
test
push
fs
jns
loope
je
mov
xor
or
mov
sub
loope
repz
in
xor
addr16
push
das
loopne
ret
aam
scas
jg
dec
icebp
ljmp
scas
jg
imull
cs
call
fnstenv
sbb
iret
rol
icebp
mov
in
add
pop
xor
js
fimuls
sub
mov
adc
fmull
cld
mov
lds
incb
jecxz
mov
fmuls
adc
fwait
jmp
push
loop
loopne
sarl
push
mov
push
lods
clc
lcall
mov
lock
out
aad
scas
mov
icebp
inc
arpl
push
aaa
icebp
cmp
dec
jb
cmp
adc
repz
int3
inc
adc
int
jle
sti
pop
loop
or
xchg
sub
and
sbb
lock
pcmpeqw
and
mov
xchg
pop
rcll
or
imul
push
fstpt
sbb
xchg
fs
dec
mov
clc
sbb
aad
pusha
mov
lcall
sub
cmp
xlat
mov
xor
cmpb
jo
xchg
hlt
sbb
mov
inc
in
jae
cmp
call
adc
aad
mov
mov
xorb
push
test
cmpb
or
rorb
mov
movsb
ds
and
test
lahf
rorb
jnp
xlat
add
mov
xor
stc
mov
lods
mov
test
xor
sti
outsl
mov
cwtl
pop
or
inc
xchg
rorl
int3
or
inc
pushf
fldt
jno
rorl
imul
mov
pushf
repnz
xchg
cltd
jbe
xlat
mov
mov
addr16
test
mov
jb
pop
subb
sbb
dec
ds
in
insb
jb
jg
movsl
and
cli
inc
sahf
loop
stos
fmuls
les
rcr
ret
dec
adc
fs
aad
sbb
adc
add
push
scas
subl
jg
push
xchg
out
or
outsl
mov
add
iret
pop
jns
lods
aad
shlb
sub
aaa
xchg
in
or
sub
lods
dec
adc
aam
jno
rcrb
imul
jecxz
xchg
insl
fdivrl
leave
js
lods
imul
lret
mov
jb
or
in
dec
push
mov
add
xchg
xchg
sarl
das
push
sub
mov
push
and
or
repnz
insb
xor
mov
mov
mov
push
rcrb
fdivrs
fwait
add
mov
movl
mov
repz
push
jge
push
fldl
cmp
mov
sarl
cli
mov
out
test
mov
xorb
or
mov
test
xchg
mov
jbe
in
and
mov
int3
rcl
lock
lcall
xchg
and
jg
sti
cli
cs
arpl
add
cltd
popa
mov
mul
fsubrl
neg
sub
bnd
ss
add
mov
mov
pushf
mov
xchg
loope
loopne
pop
fndisi(8087
arpl
xchg
imul
push
insl
jmp
clc
sub
inc
ret
std
mov
xchg
inc
sub
testb
xor
or
jnp
stos
rcll
sub
cmp
je
int3
sub
test
push
fs
mov
pop
and
mov
fnsave
mov
jl
loope
leave
cli
push
push
mov
sbb
mov
cmpsb
test
adc
in
bound
cli
xchg
inc
dec
push
nop
and
dec
outsb
xchg
dec
ja
subl
cmp
mov
dec
lods
mov
sbb
int
xchg
and
mov
xchg
sbb
lods
adc
dec
or
xor
mov
int3
pop
jns
fistps
mov
inc
rcrb
jl
test
or
cmc
xchg
cmp
dec
xchg
push
mov
sbb
and
fldl
pop
cmp
jnp
addr16
sahf
aas
inc
iret
sub
push
test
mov
adc
out
pop
cmpsb
das
andb
and
sub
leave
jae
in
or
sbb
mov
inc
ja
shl
adc
jge
and
out
jae
inc
xchg
das
sub
push
faddl
cwtl
test
mov
xchg
ljmp
dec
push
pop
sbb
rcrb
inc
movsl
jno
fsubrl
fidivs
imull
ljmp
jae
lods
dec
arpl
push
xchg
add
aam
xchg
dec
adc
pop
jge
cmp
pop
push
xchg
push
sub
lcall
dec
sbb
in
std
jle
mov
mov
mov
out
jl
sbb
and
ret
ss
ljmp
xchg
jmp
xchg
loope
fucomip
jne
and
mov
inc
jg
pop
xchg
xchg
sbb
xlat
mov
adc
aad
sbbl
outsl
dec
and
xchg
insb
in
jae
aad
inc
xchg
xchg
mov
jae
clc
daa
adc
sbb
cmp
mov
mov
lock
repnz
inc
xchg
sbb
xor
push
mov
fidivrl
test
push
dec
cmp
lahf
and
in
sti
cwtl
aad
bound
inc
cmp
fsts
fs
test
mov
mov
movsl
shl
je
adc
mov
fimuls
das
mov
sahf
clc
out
imul
xchg
ds
sbb
dec
dec
out
cmc
fistpll
inc
pop
aad
push
jle
sbb
out
ret
rcll
and
adc
cmpsl
mov
push
push
lret
icebp
jp
cmp
mov
dec
or
shl
mov
cld
lock
test
lret
sub
mov
mov
sbb
dec
aaa
dec
sti
adc
cmc
test
add
movsl
push
cmp
xchg
mov
mov
js
fisubs
adc
cmp
mov
adc
xchg
aas
sub
and
and
xchg
xchg
dec
adc
mov
lods
fstpt
pop
mov
dec
cmp
push
popa
mov
jle
hlt
jmp
mov
jbe
push
xor
inc
lret
inc
pop
mov
imul
dec
adc
movsl
and
mov
jae
imull
addr16
in
add
mov
xchg
inc
inc
cmc
cmp
loopne
mov
xor
jns
dec
sahf
icebp
loope
xlat
std
imul
or
xchg
clc
idivl
add
loopne
mov
and
dec
sub
push
pop
push
mov
imul
add
pop
sub
cmp
out
lea
add
shlb
sbb
xchg
add
fwait
inc
push
push
pop
adcl
cltd
enter
ja
aam
mov
aad
or
call
and
mov
je
loopne
dec
movsl
rcrl
xor
lock
mov
add
mov
pop
xchg
and
imul
dec
cld
jns
addr16
fidivrs
cmp
mov
out
pop
jae
mov
adc
xchg
or
in
ret
inc
aas
icebp
mov
shrb
test
movsb
into
dec
and
rol
fwait
ss
jo
ja
cli
mov
inc
nop
sub
decb
push
sbb
push
test
sahf
ret
xchg
cmp
into
xor
into
pop
dec
sub
out
dec
pushf
xchg
jns
mov
cmpsl
dec
push
mov
push
dec
push
test
out
xchg
cmp
scas
subb
cmp
mov
outsl
push
sbb
rclb
inc
push
sarb
mov
stos
xchg
add
inc
xchg
cli
sub
jl
movsl
cmp
movsb
pushf
inc
and
mov
mov
ljmp
pop
sub
cltd
fstps
or
adc
adc
nop
mov
in
aam
jo
mov
dec
push
cmp
jne
lea
xchg
jbe
mov
mov
add
push
inc
cmp
pop
ret
sbbl
jnp
push
and
xor
and
int
jmp
mov
les
jmpw
data16
insl
mov
jecxz
or
xchg
mulb
sbb
cmp
aas
dec
aas
add
sarl
es
xor
dec
mov
adc
insb
ds
xchg
fistps
outsl
loopne
fs
push
xor
hlt
push
xchg
pop
sbb
pop
out
jp
pop
into
add
or
insl
inc
sub
pop
test
roll
push
xchg
int3
dec
iret
idivl
fcompl
test
mov
aad
mov
cmp
sbb
or
push
popa
sahf
cmpsb
iret
or
outsb
mov
and
repnz
or
sahf
jns
mov
push
into
xchg
and
pop
test
or
int3
xlat
jno
sbbl
les
mov
fisttpll
cmp
dec
test
jp
mov
mov
in
arpl
inc
cmp
push
mov
cmp
mov
mov
out
jecxz
gs
and
inc
adc
flds
arpl
repz
xor
pop
shrb
loopne
std
push
push
outsb
cwtl
fcmovnbe
sub
mov
adc
mov
or
and
in
or
ret
push
sti
mov
in
mov
inc
aam
dec
stos
adc
adc
sbb
mov
sub
orb
bound
cli
mov
std
cmp
pusha
dec
mov
mov
mov
out
push
lods
jb
cwtl
loopne
mov
sbb
and
icebp
cmpsb
xor
xchg
es
add
push
ret
repnz
jbe
pop
jl
sti
cltd
mov
out
add
lcall
and
das
pop
adc
sahf
xlat
in
dec
add
and
mov
in
xchg
dec
or
fimuls
subb
nop
cmpl
sar
jmp
in
lock
mov
out
sub
xor
ficoms
aad
scas
test
imul
or
ja
enter
ret
lds
ret
add
stos
push
mov
sbb
pop
sub
testb
outsl
mov
ret
mov
or
push
mov
lods
xor
jge
mov
shrl
fcomi
push
sbb
dec
sub
addr16
mov
nop
pop
xor
and
cld
outsb
data16
in
test
xor
mov
movsb
fnstenv
mov
cmpsb
sub
lcall
pop
fs
les
cmp
iret
sbb
mov
xor
lds
pop
in
lock
mov
out
push
mov
les
movsb
dec
mov
arpl
jg
mov
jecxz
shr
cltd
icebp
je
lcall
xchg
lret
push
sub
popf
outsl
cmp
mov
ret
mov
sub
mov
mov
push
ss
push
fsubp
add
sbb
push
scas
dec
aad
bound
pusha
add
jae
cwtl
dec
push
add
jecxz
xchg
popl
and
aaa
daa
lahf
jle
dec
hlt
in
add
jnp
add
out
xchg
fstpt
mov
mov
cmc
jmp
dec
mov
mov
pop
mov
inc
adc
push
loop
mov
or
sahf
mov
xor
lock
jmp
pop
es
stos
and
lods
lahf
dec
fisttps
xor
in
daa
sbb
loop
in
inc
add
jb
fisubs
xor
subl
fwait
jne
mov
jbe
jbe
aaa
add
lods
push
pop
test
popf
cmp
sbb
jg
cmpsb
js
or
aas
cmpsl
push
jl
jb
scas
cmc
aad
cmpsb
pusha
sub
add
push
or
xchg
out
call
jecxz
aam
cmp
or
mov
push
jmp
push
scas
jae
push
leave
push
es
fidivl
ds
add
inc
mov
repz
adc
or
sbb
test
jg
pop
jae
sub
lcall
orl
std
repnz
arpl
xor
call
int3
vmovntps
adc
sub
in
fwait
cs
push
fistpl
adc
popf
mov
imul
hlt
sub
imul
lods
dec
inc
or
xor
dec
pop
jnp
dec
push
jnp
loop
cmp
shlb
int3
sub
push
out
mov
xlat
lea
push
sbb
pop
cmp
cmpsl
dec
pop
jns
inc
fidivrl
sub
mov
mov
cmp
sbb
fists
push
dec
loop
mov
or
in
push
sub
xchg
mov
push
daa
jl
ljmp
or
dec
sbb
lret
xchg
xchg
lcall
and
jle
sub
add
push
loop
je
mov
rorl
cmpsb
mov
insl
scas
scas
stc
rcrl
movsl
ds
dec
roll
mov
mov
mov
dec
sub
push
pop
sub
outsl
clc
pop
clc
jl
leave
or
addr16
rclb
bound
popf
sub
mov
sub
push
outsb
lahf
cs
fcmovnb
aad
stos
xor
jmp
sti
lods
ret
and
in
repnz
cmp
pop
lcall
or
hlt
outsb
mov
mov
jmp
sarl
sub
sbb
mov
sbb
pop
sub
in
mov
psraw
xor
shlb
rcl
outsb
gs
xor
or
sub
cmp
rclb
stc
adc
inc
sbb
lock
movsl
mov
jge
mov
sahf
and
pop
or
pop
daa
fiaddl
mov
sub
jge
aas
add
dec
pushf
cmpsl
push
xlat
mov
mov
icebp
xor
in
inc
adcl
adc
loop
xor
popf
add
jmp
fistl
aad
xor
addl
popa
inc
fmull
inc
lret
and
pop
xor
dec
sub
sarb
stc
xor
out
test
xor
out
fcoms
cmp
gs
js,pn
add
js
mov
or
jge
push
lds
jno
and
popf
out
jne
fsubl
gs
mov
xor
andb
mov
cmp
inc
lret
jne
pop
ss
push
cld
mov
and
mov
nopl
enter
jg
sbb
test
mov
mov
xorb
add
pop
popa
fildl
into
jge
loopne
add
or
cmp
xchg
pop
mov
hlt
call
jp
imull
je
ljmp
test
fs
notl
arpl
jle
pop
loope
cmp
sbb
cmpsl
mov
sub
in
lds
lods
xchg
inc
aad
shlb
jge
test
push
or
decb
xlat
ret
into
inc
jl
in
sti
cld
inc
push
xchg
shlb
scas
aam
push
ljmp
ret
or
fisubl
xchg
sti
ret
mov
adc
or
xor
out
popf
lods
cmp
xlat
movsl
mov
sbb
sbb
mov
out
dec
push
ds
jo
sub
xchg
dec
outsl
outsb
lea
fisubs
sbb
pusha
pop
call
lds
dec
xchg
or
das
and
jp
push
fs
adc
jo
hlt
cwtl
imul
dec
rolb
arpl
jno
jns
pop
je
xchg
inc
dec
sub
mov
arpl
mov
ss
sahf
ds
scas
sbb
sub
sub
or
std
pop
push
mov
leave
test
mov
iret
push
adc
rcrb
push
js
fs
xlat
mov
arpl
add
dec
repnz
lahf
push
cmp
sub
xchg
jge
bound
mov
adc
cmp
xor
aaa
pop
xor
add
inc
or
or
outsb
adc
insl
push
jo
cmc
icebp
and
mov
push
xor
and
rclb
bound
sub
pop
push
in
mov
or
call
dec
ljmp
and
xchg
fsubr
out
mov
mov
gs
push
ja
jb
loop
inc
es
and
push
mov
add
inc
mov
out
scas
test
mov
adc
xchg
ds
pop
xor
sub
out
push
mov
jl
adc
mov
push
stos
xchg
mov
lahf
popf
insb
jl
aas
adc
push
mov
test
pop
sahf
imul
dec
je
call
ret
mov
cmpsl
mov
xchg
repnz
ds
mov
fsubs
in
mov
sbb
fwait
mov
pop
adc
call
jmp
out
sbb
sbb
test
popf
fnsave
jmp
pop
hlt
xchg
stos
sbb
jl
in
mov
stos
adc
je
xchg
in
pop
rcrb
mov
xor
mov
imul
fucomi
test
sub
lods
sbb
and
jle
sbb
jg
jo
and
pop
xchg
and
xor
cs
outsl
xor
adc
nop
shlb
lret
sahf
dec
scas
mov
cmpb
xchg
push
insl
xchg
and
into
dec
xchg
sbb
mov
scas
pop
ja
aad
mov
adc
pop
inc
mov
jmp
mov
subb
mov
cmpl
out
rcr
mov
imul
or
popf
arpl
imul
jnp
int3
nop
sbb
or
sbb
xchg
mov
insb
or
cwtl
pop
stc
mov
push
ss
push
aam
sbb
insb
repz
insl
into
mov
push
xor
xor
sub
in
cli
sbb
inc
push
icebp
sub
and
aam
dec
mov
jne
mov
jl
int3
cli
mov
aam
scas
movsb
sub
stos
xor
sub
test
jb
call
sub
jnp
xor
insl
js
sub
sbb
jne
sbb
jae
push
sbb
dec
mov
push
add
add
jbe
daa
cli
fs
xor
sahf
stos
lods
push
test
test
sub
mov
jl
flds
enter
jnp
shll
popa
xor
mov
xchg
arpl
out
movb
inc
sahf
in
fdivl
call
pop
mov
inc
sub
shll
fwait
imulb
fwait
outsb
adc
das
push
add
gs
leave
fcmovb
hlt
mov
sti
push
pop
jmp
stos
fldcw
mov
insb
hlt
mov
xchg
dec
pop
lods
addl
ret
adc
fstl
shll
push
stos
cmp
or
inc
ret
sbb
mov
aas
jmp
xchg
push
xchg
ja
mov
sbb
stos
jg
loop
dec
lock
or
int3
lods
in
mov
mov
pop
repz
cmp
icebp
jmp
je
jle
jl
push
std
iret
mov
pop
pop
scas
stos
test
and
addb
popa
rcr
fcomps
xchg
lea
jge
cli
mov
add
rcr
xor
xor
pop
dec
lahf
stos
sti
xchg
cltd
ret
dec
out
cwtl
bndcn
xchg
popf
and
and
push
and
xorl
pop
dec
dec
outsl
mov
and
arpl
push
rcrb
dec
mov
push
mov
insl
sarl
mulb
mov
fsubr
add
jle
xchg
out
cmp
adc
mov
repz
scas
dec
or
mov
pop
subb
test
sbb
int3
leave
push
jnp
fs
popf
mov
rcll
scas
inc
jge
sub
lcall
dec
jae
pop
lods
cld
adc
adc
ds
pop
les
aad
addr16
sbb
std
clc
xor
adcb
int
popa
ljmp
pop
decl
xchg
lds
les
adc
xchg
mov
imul
aam
stos
into
imul
xchg
mov
pushf
cmp
icebp
xchg
jbe
leave
xchg
in
sub
lods
mov
sub
js
filds
push
sbb
movsl
lods
aam
fwait
gs
mul
push
insl
loop
iret
sahf
pop
insl
pushf
and
popf
jecxz
lds
mov
inc
lahf
outsb
xchg
pop
mov
xor
add
icebp
sub
cmp
push
adc
sbb
dec
sbb
jl
sbb
push
lcall
mov
adc
mov
jmp
push
into
inc
xchg
lods
gs
sub
loopne
je
ds
dec
adc
testl
punpckldq
js
test
push
jle
add
flds
cmp
cmp
sub
aam
xchg
pop
lcall
push
aad
mov
rolb
jmp
and
repz
cmp
cwtl
fdivrs
inc
push
insl
fidivl
jle
xchg
in
mov
add
sahf
rorl
out
imul
xor
xchg
out
pop
cmp
push
add
mov
shrb
inc
fs
mov
repnz
sbb
dec
test
adc
jle
push
xor
std
mov
dec
pop
cli
cpuid
add
pop
or
dec
inc
imul
mov
jns
dec
inc
mov
inc
sbb
lret
jno
idivl
aas
gs
nop
scas
sbb
and
movsb
pop
mov
xchg
xor
or
mov
mov
in
pusha
or
nop
mov
lock
dec
cmp
sbb
dec
lahf
or
xor
cs
xor
popa
call
out
push
mov
xor
pop
bound
mov
out
dec
ds
push
add
mov
rorl
fldcw
stos
shll
mov
shl
cli
push
aam
sub
cltd
sarl
xor
out
mov
ja
pusha
push
popa
xchg
mov
dec
xor
push
inc
std
and
xor
cmp
add
cmp
sbb
mov
mov
dec
sbb
push
mov
std
or
sub
add
jbe
fisttpl
pop
or
ret
mov
mov
leave
mov
xor
ss
iret
stos
in
imul
call
and
aaa
iret
out
int
cmpsl
pusha
lods
push
mov
and
xchg
inc
sbb
aad
inc
out
popf
nop
rcr
out
push
add
fimuls
sbb
out
mov
out
scas
nop
data16
xchg
push
and
ja
adc
inc
push
int
hlt
in
sbb
mov
pop
fstp
dec
scas
dec
cmp
sub
in
inc
daa
or
pop
int3
dec
fstl
inc
add
inc
xchg
add
sbb
jg
stos
cltd
xchg
push
cmp
fcomp
sub
rcrb
repz
orb
mov
rol
jo
push
mov
outsb
cld
fstl
rcr
data16
ja
aad
ficoml
cmpsb
pusha
cmp
cmp
cmpsl
jg
adc
pop
mov
or
jnp
xor
popa
popl
sbb
jnp
push
imul
pop
out
mov
stc
mov
shlb
pop
pop
xchg
outsl
sub
cmc
lea
sbb
mov
mov
mov
push
xlat
test
cwtl
push
inc
xchg
fcmovbe
adc
dec
mov
repz
daa
pop
push
jne
fldcw
aaa
sbb
enter
pop
imulb
out
into
and
adc
jmp
xor
loop
test
aad
icebp
mov
cmp
cmpsl
pop
xor
imul
cwtl
lea
imul
outsb
sbb
or
dec
cmp
add
leave
rolb
push
repz
out
dec
cmp
stos
add
jbe
cmpl
mov
mov
loope
fcoml
or
lret
std
or
push
repz
out
xchg
sub
mov
sbb
in
repnz
pop
mov
push
pop
out
push
shlb
fists
pop
rcrl
lcall
mov
lds
or
ss
dec
iret
fucomp
pop
sub
clc
adc
repz
movsb
xlat
cmp
dec
incl
data16
mov
pushl
jne
adc
loope
add
jno
pop
popf
sahf
test
sub
idivl
mov
push
sbb
pushf
mov
enter
fsubl
or
mov
mov
rcrb
pop
xor
push
push
xchg
dec
add
mov
ljmp
xchg
xor
inc
jge
mov
fadds
pop
inc
mov
icebp
dec
or
imul
jns
daa
push
and
xchg
adc
dec
xchg
fidivrs
ret
into
ds
lock
sub
scas
imul
fldt
es
mov
sub
pop
mov
inc
rcrl
cmp
iret
ret
pop
test
dec
push
or
mov
xor
xor
lcall
cwtl
push
mov
adc
incb
adc
mov
lods
lret
das
leave
fstl
or
ss
out
imul
popf
scas
cwtl
jnp
ds
ret
sbb
mov
jnp
or
sysenter
loop
mov
pop
ret
sbb
and
dec
outsb
ja
mov
das
push
loope
mov
adc
movsb
out
mov
jle
jp
jne
jns
popf
sbb
outsb
add
jno
xor
adc
inc
mov
mov
sub
mov
add
xchg
add
mov
sbb
inc
cmpb
mov
inc
inc
mov
xor
mov
xor
sbb
inc
pop
mov
out
mov
xchg
pop
inc
push
cmp
and
std
pop
test
dec
cmp
mov
push
push
int3
mov
psllq
push
shlb
inc
test
imul
xor
push
mov
dec
mov
mov
mov
in
cmp
mov
mov
ljmp
fcompl
mov
scas
imul
xor
enter
cmpsl
jne
dec
je
mov
xor
mov
mov
pop
inc
out
sub
adc
mov
fs
cwtl
push
xchg
cli
xchg
inc
inc
rolb
cli
pop
out
lahf
movsl
clc
rcl
mov
std
add
sahf
ss
xlat
mov
enter
ds
dec
mov
sbbb
mov
movsb
xor
cmp
adc
push
aas
xchg
xor
dec
or
cmpsb
ss
xchg
loopne
pop
jle
jae
mul
xorl
aam
fsts
add
call
mov
ret
mov
jo
ds
mov
sbb
sti
lcall
sbb
in
pop
fildll
loopne
xchg
std
or
push
pop
xchg
inc
xor
in
mov
add
mov
scas
jmp
cmp
lods
adc
movsb
fwait
mov
ficoms
pop
jne
push
mov
xor
sub
loope
cmp
fsubl
insb
adc
jno
addr16
insb
test
int3
lds
sbb
lret
pop
xchg
xchg
jne
add
mov
jp
test
pushf
cmpsl
mov
test
ficomps
lds
mov
loop
jecxz
push
movsl
inc
movsb
testb
and
lea
cmp
lahf
popa
sbb
push
push
mov
dec
push
push
scas
aad
inc
ret
cli
pop
gs
mov
inc
or
js
cmc
mul
and
mov
sub
enter
ds
es
and
js
add
mov
mov
jb
adc
fisttps
sahf
push
outsl
test
lret
fmuls
ljmp
stos
jbe
shll
ja
inc
cmpsb
fimuls
push
pusha
cld
dec
test
pop
lret
daa
add
sub
test
outsb
addr16
and
mov
jl
call
inc
inc
mov
ja
call
and
outsb
pushf
push
cwtl
inc
test
cmp
movb
jb
cmpsb
lods
fsincos
stos
push
dec
sti
stc
stos
pop
push
and
stos
mov
xchg
sub
cmp
push
mov
cmpsl
loope
xchg
pop
loopne
sub
pop
mov
stc
mov
xchg
push
add
dec
insl
incb
shrb
jge
scas
loop
jge
pop
shll
ficoms
mov
dec
inc
push
mov
movsl
out
gs
lock
icebp
mov
sbb
int3
sub
in
dec
movsb
sub
stos
fsubs
into
add
inc
mov
imul
arpl
jnp
or
popf
test
sub
push
mov
mov
sbb
and
jae
mov
dec
test
es
pop
cmpsb
fwait
xchg
cmpsl
icebp
inc
jmp
mov
ret
stc
add
repz
inc
in
cli
jnp
lds
sbb
pop
daa
xchg
pop
popa
lret
aad
lcall
aad
movb
push
adc
xchg
dec
push
add
lds
xor
daa
hlt
orb
lcall
jmp
push
pop
mov
sub
jae
rorb
xor
pop
addl
sti
pop
loop
js
stos
pop
scas
int3
dec
inc
mov
sub
pop
or
push
push
ss
sub
mov
jp
jecxz
scas
movsb
mov
ljmp
mov
lret
jge
jp
push
mov
cmp
outsb
cs
loope
mov
insl
out
loop
out
clc
jae
in
out
cmp
mov
stos
pop
jmp
int3
ja
sub
in
imul
je
lea
aam
dec
mov
or
mov
aad
xor
hlt
adc
mov
call
lahf
mov
xor
imul
sbb
dec
jo
pop
push
ja
sarb
test
sub
mov
test
scas
out
call
and
scas
push
nop
or
call
cmp
cmp
daa
pop
or
sti
xor
popa
sbb
scas
outsl
mov
outsl
and
inc
xchg
rclb
movsl
inc
pop
addr16
inc
notl
aad
adc
xchg
push
inc
adc
daa
jmp
adc
adc
xchg
out
imul
pop
in
mov
inc
mov
faddl
xlat
add
rcll
xor
lea
pusha
jp
cwtl
lock
mov
jecxz
stos
jge
dec
adc
lods
lods
and
sbb
mov
sub
mov
aas
sub
mov
insl
popa
cmpsb
and
or
and
jo
dec
sub
jbe
xchg
mov
pop
mov
cmpsb
rol
in
test
jae
and
adc
icebp
icebp
pop
popa
dec
data16
pop
addb
push
or
sbb
in
lret
hlt
cltd
pushf
fimull
bound
ja
push
sub
and
sti
pop
sahf
fnsave
sbb
cmpsl
js
cmp
cmp
jno
and
or
and
adc
jmp
jge
sti
mov
out
je
mov
test
sub
mov
cld
push
enter
nop
push
sub
rcrb
cmp
and
dec
push
aad
sti
xor
ret
in
fwait
xlat
repnz
ret
push
dec
xor
mov
sub
nop
lahf
mov
cmpsb
and
ret
push
mov
xor
test
aaa
and
pusha
andb
daa
fildl
mov
jno
mov
xchg
leave
adc
mov
mov
subb
dec
int3
lret
idivl
cmpb
and
push
mov
loopne
sub
or
cmpsl
sub
inc
and
mov
or
lahf
imul
lahf
adc
push
enter
jp
jp
into
divb
aad
dec
cmpsl
arpl
mov
sbbb
mov
mov
adc
rorb
sbb
push
enter
sbb
stos
xor
in
stos
fstps
fimuls
loope
lret
into
pop
mov
jb
clc
dec
push
repz
pop
loopne
add
xchg
inc
add
fisubrs
mov
rol
sarl
adc
repz
stc
scas
enter
sbb
outsw
mov
inc
push
in
adcb
sbb
jno
popf
mov
cs
xchg
push
lea
pusha
fistpl
push
mov
adc
addr16
loope
loope
xchg
test
or
pop
xor
mov
push
adc
int3
sahf
ljmp
mov
cmp
pop
in
sub
scas
inc
cltd
hlt
jle
mov
jecxz
cltd
test
jp
or
ja
pop
mov
imul
pop
pop
mov
mov
mov
push
fistps
xor
nop
pop
mov
mov
sti
push
lcall
push
inc
xlat
or
fsubl
aaa
cmpsl
sbb
sbb
mov
aas
push
push
xor
mov
sbb
xchg
int3
icebp
cmp
lods
xchg
out
sti
mov
ja
adc
sbb
in
movsb
ret
ljmp
sbbb
hlt
int
mov
inc
das
cmp
sti
push
and
in
xor
int
mov
mov
pusha
sti
pop
inc
ret
sbb
jle
or
xor
mov
add
inc
int
adc
mov
jno
adc
xor
sti
int3
xchg
std
pop
enter
jnp
xchg
push
lret
nop
push
andl
bound
mov
add
dec
nop
cmpsb
fcomip
add
dec
jecxz
cmpsl
xor
ss
push
je
add
ja
cmp
arpl
or
popf
popa
call
repz
mov
jne
dec
scas
mov
sub
addl
je
subb
pop
bound
mov
push
out
lea
pusha
in
xchg
add
loope
scas
pushf
test
pop
ds
ds
mov
add
in
lidtl
add
ja
in
test
mov
sub
shld
movsb
mov
inc
push
adc
mov
inc
adc
sti
mov
push
jne
shlb
movsl
lahf
cmp
pusha
xchg
aad
int
sahf
ja
insl
lds
xchg
pop
aas
ljmp
ja
fcmovb
outsb
pop
cmpsl
test
push
dec
add
scas
xor
xchg
jmp
lahf
mov
inc
adc
mov
call
and
or
jae
mov
mov
sub
rolb
ds
or
dec
sub
add
es
cmp
adc
mov
cmp
mov
stc
xchg
mov
pop
xchg
mov
imul
dec
outsl
pop
inc
push
pop
mov
in
jecxz
xor
push
push
fadd
ljmp
jecxz
jecxz
jmp
pusha
filds
cli
fsub
cld
pop
lods
mov
aas
dec
mov
push
and
lods
js
and
int
mov
movsb
inc
cmpsb
jno
push
std
shlb
pop
idiv
out
push
inc
pop
scas
push
jl
push
shll
fstpl
jmp
inc
jmp
inc
xor
xor
ds
jnp
out
xchg
cmpsb
out
inc
das
js
addl
pop
xchg
mov
push
push
mov
pop
jbe
mov
lea
adc
sbb
addr16
adc
data16
bound
sahf
fscale
insb
push
in
arpl
or
inc
stos
ss
invd
adc
cmpsl
imul
mov
rcr
adc
add
mov
nop
int
mov
je
daa
stos
test
test
fistpl
pop
pop
js
lods
xor
data16
rclb
jnp
adc
cld
aaa
aaa
pop
psrlw
sbb
or
test
jo
cmp
sub
xor
lock
lods
sbb
mov
jmp
add
xor
loope
cli
cmp
adc
ljmp
mov
ficoml
sbb
and
and
mov
sbb
pop
dec
xchg
rorl
mov
out
lret
js
or
push
inc
out
jnp
popf
lds
and
fwait
and
outsl
ret
mov
mov
or
in
add
jno
mov
mov
das
or
std
xchg
nop
test
xor
inc
pop
ret
out
addr16
xor
and
out
push
jne
mov
cs
insb
jbe
ret
pop
insb
loopne
mov
leave
sub
xchg
jg
out
pop
adc
cmp
mov
pop
xchg
xor
pushl
rclb
mov
pushf
movsl
in
xor
dec
in
xor
std
je
out
scas
mov
jg
sub
jg
ds
mov
xchg
mov
es
cli
fnsave
sub
or
fidivs
in
mov
mov
mov
mov
mov
icebp
pop
mov
lret
loope
sahf
push
dec
addr16
mov
dec
jmp
jmp
jbe
jne
insl
iret
dec
or
xchg
data16
popa
push
pop
ljmp
in
jo
cli
decl
cmpsl
fistl
bnd
add
stos
imul
push
add
repz
sbb
rcrl
push
int
mov
ljmp
and
mov
sbb
sbb
fildll
icebp
pusha
add
ret
pushf
mov
aaa
imul
mov
sti
arpl
mov
jbe
xor
push
pop
push
sub
jo
into
add
daa
cmp
imulb
pop
fcoml
gs
cli
pop
mov
jg
sub
cltd
inc
inc
test
push
inc
jb
fistpll
mov
scas
dec
or
xor
mov
test
add
or
lcall
mov
popf
mov
xor
ja
cbtw
jmp
mov
mov
push
and
lcall
enter
fidivrl
hlt
inc
bound
mov
add
out
loope
shlb
pop
and
cmp
sub
jo
or
sbb
jb
mov
orl
sub
addl
fstpl
mov
test
ret
rcr
rclb
and
push
in
sbb
clc
imul
cmpsb
mov
push
mov
or
orl
jp
inc
pop
adc
neg
in
jo
js
shrl
jg
adc
fistl
xor
sahf
sbb
outsl
icebp
sbb
mov
mov
xor
sbb
xchg
rcr
jg
fwait
shl
sub
dec
into
lahf
in
cmc
lret
dec
push
pusha
jle
push
add
add
mov
arpl
sbb
xchg
jmp
pop
pop
push
push
mov
inc
mov
and
pop
call
in
sti
and
or
adc
jg
bound
xor
dec
jmp
xchg
adc
fstl
mov
adc
stos
jmp
cmp
jmp
daa
jg
and
add
push
sti
stos
jbe
out
push
mov
sahf
outsl
sbb
sbb
cmpsl
push
inc
imulb
imul
cmpsb
xor
nop
rol
cmpsb
mov
inc
or
sub
mov
ljmp
test
mov
sbb
or
shr
inc
sahf
mov
adc
adc
mov
add
movsb
sahf
test
xchg
mov
and
fwait
xor
dec
in
cmpl
scas
mov
inc
cmpsb
rcrb
dec
cwtl
or
inc
repz
mov
lods
sub
mov
xchg
inc
xchg
adc
sahf
push
or
sarl
sarl
outsb
repz
lock
xchg
lret
mov
lahf
sbb
pop
shll
adc
xchg
sti
and
frstor
cmpsl
stos
test
dec
jp
xchg
and
jecxz
lcall
jae
jmpw
int
push
iret
push
and
fs
sub
mov
adc
mov
fwait
dec
loopne
pop
pushf
xor
jae
out
push
out
pusha
ljmp
es
jp
mov
fisttpll
adc
ficomps
ret
ss
hlt
shll
xor
xor
mov
pop
push
fistl
add
fadds
mov
jecxz
std
shlb
popa
inc
cmp
inc
ss
or
push
sbb
das
pop
add
mov
pop
fistpl
stos
adc
cmpsl
or
or
xor
lahf
and
test
and
cli
xor
mov
push
xor
clc
bswap
xor
lods
rcrl
sahf
adcl
jmp
cmp
enter
or
arpl
cmp
jg
cmc
lret
in
xchg
imul
or
add
icebp
mov
dec
xchg
imul
mov
lods
sahf
loope
mov
push
fwait
push
mov
loop
test
dec
sbb
xor
sub
push
pop
arpl
pop
mov
and
movsl
dec
fsubl
sbb
loop,pt
pop
scas
mov
cmp
xchg
ret
adc
mov
vmovshdup
out
leave
lods
xor
sub
call
not
sti
fbld
dec
imul
xchg
sub
dec
pop
stos
stc
imul
rcl
dec
xor
adc
add
mov
rolb
inc
mov
push
lret
arpl
aad
pop
push
inc
fcomip
js
mov
and
fdivl
shll
mov
aam
mov
mov
xor
jl
cwtl
movsl
xor
mov
pop
jae
adc
xlat
cmp
pop
gs
ret
adc
push
or
xor
and
sub
movsl
push
int3
mov
test
pop
mov
pop
lods
mov
in
sub
xor
inc
fisubl
in
lea
mov
jmp
fcmovnb
outsb
xchg
mov
lods
add
pusha
adc
cs
cli
mov
or
lret
pop
pop
xor
cmp
sbb
ficoml
xchg
in
pavgb
jne
shrb
push
cmc
mov
jo
push
ss
gs
ret
jno
loopne
mov
pop
add
int
pop
fdivrl
mov
sarb
clc
call
aaa
pusha
adc
push
pop
lea
inc
jl
popl
jl
loopne
in
mov
shll
dec
dec
push
sbb
and
in
jae
je
push
push
pop
jnp
cld
lret
cli
adc
jno
dec
xchg
sbb
dec
test
adc
jo
pusha
push
sub
jno
lds
fisubrl
dec
lret
dec
xlat
cld
and
mov
repnz
or
addr16
push
shrl
xchg
imul
test
shlb
imul
out
inc
xchg
mov
inc
lahf
arpl
js
push
imul
andl
add
jp
dec
popf
lahf
repz
pop
lods
add
mov
xchg
mov
jae
rclb
jae
cmp
xchg
cmp
iret
imul
push
mov
sbb
push
sbb
add
cmpsl
xchg
mov
aas
or
dec
int3
out
lret
inc
pusha
push
sbb
call
add
das
xchg
cmc
inc
addr16
pop
adc
movsb
xchg
and
jecxz
push
jno
jg
ds
and
mov
repz
add
inc
mov
fcmovne
scas
adc
test
xchg
les
mov
sbb
scas
sahf
scas
jmp
xor
test
xor
das
sub
fcompl
adc
cmc
test
and
add
mov
rcll
imul
aam
lret
fs
repz
sbb
sub
fbld
mov
mov
and
enter
xor
mov
adc
fistpll
mov
lahf
mov
int
push
lret
push
sub
jo
mov
pop
in
sub
cmp
imul
inc
rcrl
stos
test
imul
pop
clc
gs
pop
jge
and
int3
xor
repz
loop
mov
adc
ljmp
mov
sub
jle
mov
push
mov
notl
push
inc
inc
or
ror
inc
pop
xlat
sbb
add
push
xchg
shrl
sbb
push
loop
adc
fstpl
aad
popa
loopne
and
das
adc
leave
je
cmp
sarl
lcall
ss
mov
in
push
inc
and
lods
inc
add
xor
pop
or
enter
rcrb
iret
push
dec
daa
pushf
cmpl
jne
pop
sahf
hlt
stos
popa
xchg
mov
mov
xchg
stos
enter
push
pop
sub
cmp
xor
repz
jle
mov
cmp
out
cltd
xchg
popl
ss
fwait
mov
cmp
fildl
testb
cmc
leave
jecxz
and
sbb
mov
xor
inc
inc
repnz
jb
and
mov
daa
out
out
popf
and
mov
ss
xchg
and
adc
setnp
cmp
ret
fldl
mov
cmp
cs
sti
ss
je
cmp
mov
lds
cmp
sub
jnp
mov
cld
xchg
mov
scas
xor
xchg
xchg
pop
daa
or
sbb
lahf
adc
sub
enter
mov
xchg
cmp
mov
ja
shrb
repz
jo
and
lcall
fidivrs
xchg
aam
mov
and
adc
repnz
xchg
push
mov
add
mov
nop
sbb
add
rol
mov
loope
imul
ljmp
int3
push
cmp
cmp
cmpsb
jb
xor
push
and
adc
xchg
and
sarl
iret
out
push
push
mov
ljmp
jg
cli
mov
or
movsl
andb
loop
je
dec
or
pop
mov
gs
mov
lret
pop
jae
cmp
sbb
outsb
mov
roll
les
mov
subl
push
popf
jp
mov
arpl
lods
xor
nop
insb
fstl
mov
pmullw
and
mov
push
xor
mov
add
fs
ds
sub
cmp
les
cmp
sbb
imul
ret
fdivrs
cli
adc
sub
mov
idiv
pop
jnp
mov
xlat
scas
fwait
stos
pop
in
sbb
adc
cmp
cmp
xor
int
inc
and
xchg
or
xchg
xor
xor
cmp
insb
fildl
sti
mov
int
in
ja
stos
loope
push
cwtl
push
sub
dec
popa
sarl
sbb
cmp
cld
inc
int
adc
aaa
das
push
rorl
cmc
stos
xor
fldt
fstps
add
out
das
rcrl
sub
sbb
ss
or
mov
sbb
addr16
fs
cmp
dec
lret
paddd
insb
push
adc
cmp
jge
rcll
sub
or
shrl
ja
scas
clc
jno
and
loopne
test
or
ss
testl
push
popf
xchg
or
stc
push
mov
jmp
or
jge
dec
outsb
mov
sahf
sub
mov
movsb
mov
movsl
adc
out
pop
jp
push
cmc
sbb
xor
or
insb
add
xor
xlat
lock
mov
and
insb
es
push
push
rolb
jbe
cwtl
inc
ds
or
mov
aas
popl
scas
out
cwtl
cs
sbb
xor
inc
cmp
mov
leave
repz
or
imul
ljmp
daa
lods
inc
in
jno
and
push
jno
push
fs
jne
add
xchg
and
rcr
testb
in
jo
insl
push
push
sub
pop
xchg
inc
xchg
sub
movsb
in
iret
shlb
jnp
je
outsl
mov
dec
inc
mov
lods
sub
mov
xor
cmp
mov
lret
idiv
adc
mov
pusha
es
mov
loop
and
or
shll
sti
fisttpl
lahf
insb
mov
loopne
scas
sub
shr
add
push
frstor
data16
xchg
clc
loop
enter
mov
xlat
fcompl
shrl
xchg
leave
mov
or
movsl
call
xchg
lret
cmp
fs
lock
and
mov
xchg
sbb
test
mov
pusha
jno
inc
inc
add
push
mov
roll
jmp
in
cli
out
lret
imulb
vorps
or
push
pop
adcl
xlat
iret
mov
dec
jp
imul
sbb
nop
testb
pop
lret
cltd
lret
cmp
add
mov
cmp
dec
pop
xchg
insl
mov
sub
jne
jecxz
inc
leave
in
add
pop
inc
lods
mov
add
sahf
divl
inc
and
in
test
popa
pusha
push
ds
push
xchg
mov
fldt
hlt
and
sbb
bound
sahf
ret
sub
or
add
sti
arpl
sbb
inc
sub
lods
sbb
mov
jle
xchg
jns
sub
pop
jb
fisttps
sbb
sbb
push
add
int
jecxz
fisubl
sub
mov
and
fnstsw
bound
xor
push
mov
and
mov
or
les
mov
insl
cs
in
pop
jmp
or
test
inc
lods
add
push
dec
out
js
cmpsb
daa
loop
jmp
push
int
in
xor
jns
sbb
jge
xchg
inc
push
xor
dec
push
ficoml
inc
pop
fs
adc
dec
in
subb
ja
out
test
adc
mov
xor
mov
mov
mov
into
mov
dec
cwtl
mov
lea
push
movb
fcomi
out
insl
lret
dec
int
cmc
jp
arpl
push
sti
out
push
jns
xchg
ljmpw
iret
mov
pop
adc
or
loopne
in
jecxz
jge
cmp
nop
repz
cmp
int3
test
adc
ds
mov
sub
je
push
out
and
mov
and
fisttps
mov
jg
adc
ljmp
push
cld
inc
sbb
cwtl
mov
test
int3
daa
test
sub
out
and
mov
inc
mov
inc
imul
test
fnstsw
stos
push
ret
cs
out
cmpsl
insb
shlb
jg
fstl
pop
push
sbb
pop
push
ret
xor
je
pop
les
call
mov
fsubrs
push
outsl
cmc
in
notb
std
je
or
sbb
insb
sbb
inc
nop
fcoms
adc
ficompl
outsl
mov
addl
popa
loope
out
cmp
adc
push
mov
dec
dec
xchg
cmpsl
push
mov
inc
aad
imul
push
nop
call
sub
push
and
outsl
inc
sahf
xchg
scas
xchg
shr
cli
mov
imul
jnp
inc
out
cmc
add
es
xor
mov
mov
and
stos
mov
push
adc
inc
xchg
and
decb
inc
and
inc
jo
pop
ss
sbb
mov
lods
fcomip
pop
jb
mov
lods
cmc
inc
lcall
push
xchg
push
push
push
or
ret
push
dec
int
mov
call
jns
mov
inc
jno
push
or
scas
cmp
xchg
lds
add
lods
fprem1
jnp
mov
bound
fisttpll
dec
jg
xchg
lcall
sub
jns
sbb
xchg
ror
sbb
rorl
ja
ja
xlat
inc
decl
xor
push
out
adc
or
xchg
fs
sub
pop
push
fsts
lret
add
out
cmp
pusha
dec
fldt
loopne
xor
mov
jae
cmp
insl
jge
ja
jecxz
fisttpl
mov
xchg
mov
into
and
daa
and
xor
ds
repnz
pop
mov
cmovg
fsubs
add
out
sti
push
mov
mov
fwait
pop
imul
repnz
sbb
in
adc
shll
mov
pop
mov
sbb
dec
add
sbb
or
xchg
mov
jns
sbb
inc
push
cmp
and
pop
or
push
das
filds
or
lcall
inc
adc
sbb
out
mov
fdivr
and
add
push
xchg
push
stos
adc
push
sar
mul
cmp
movl
testl
enter
cwtl
adc
fbstp
hlt
push
bound
js
outsl
xchg
jg
mov
cli
adc
dec
lret
inc
adc
stc
xchg
mov
mov
test
inc
pop
cli
pusha
test
inc
mov
xchg
push
mov
gs
mov
out
mov
pop
sbb
adc
lock
addl
mov
or
lods
testb
ret
stos
mov
ret
cwtl
leave
mov
fldl
xchg
in
fidivrs
subb
xchg
out
lods
icebp
pop
popf
outsl
xchg
or
in
add
loop
inc
xor
je
jnp
jns
cmp
imul
jp
in
push
jnp
xor
inc
dec
jmp
jmp
int3
les
and
sub
xorl
xor
int
inc
xor
dec
push
or
sub
push
xchg
xor
xor
pop
jne
push
loop
xchg
cmpsl
test
pusha
leave
mov
fidivrs
dec
ljmp
mov
mov
mov
cmp
lret
xchg
roll
in
dec
rolb
mov
fstps
adcb
pop
sbb
xchg
pop
shll
xor
rorl
pusha
js
and
jmp
cli
int
xchg
jne
adc
cmp
cld
or
inc
or
adc
stos
addr16
lahf
jmp
mov
push
push
les
pop
xor
cmpl
inc
adc
sahf
add
shrl
dec
lret
push
add
xlat
sahf
jmp
add
in
out
xlat
lock
adc
xchg
cld
in
or
cmp
fidivrs
lea
in
in
fiadds
pop
popf
aaa
fwait
stos
insb
scas
cs
push
nop
negl
push
adc
cmovne
outsl
in
dec
jo
pop
fiadds
push
fsub
pushf
imul
pop
call
inc
xchg
outsb
and
push
loope
xor
jo
arpl
jbe
inc
push
call
or
daa
lods
call
jl
ja
clc
fildll
sub
cmp
cmpsb
fstpl
dec
mov
test
xchg
mov
pop
jae
dec
inc
test
lock
loopne
stc
mov
cmp
xchg
mov
ret
lock
or
xchg
shrb
mov
add
cmp
inc
inc
pop
rolb
ja
cmp
xlat
jl
cmpsl
shrl
and
cmpsl
mov
inc
dec
mov
mov
cmp
cmp
das
in
adc
push
aas
outsb
test
ds
push
sub
pop
movsl
jbe
add
in
jmp
fcompl
mov
sub
mov
cld
jecxz
jp
dec
cmc
popa
dec
push
adc
shlb
das
xchg
adc
stos
data16
pop
movsl
aaa
and
icebp
push
sub
dec
flds
scas
movsl
xchg
cmp
sahf
push
mov
das
mov
inc
rcrb
ret
jo
push
popa
movsl
dec
ss
xor
pop
outsb
testb
mov
lret
shll
push
push
xor
dec
rclb
cld
outsb
lret
cmc
popa
push
sbbl
fs
xor
call
and
insb
cmp
js
inc
push
je
stc
ss
and
sub
pop
pop
jp
stos
push
jge
and
das
jne
loopne
push
sahf
cmp
movb
bound
or
push
movsb
dec
or
rolb
nop
in
scas
inc
lods
int3
adc
iret
rorl
out
jecxz
faddl
add
xor
arpl
mov
ss
sbb
repnz
mov
imulb
mov
cmp
sub
mov
mov
sbb
movsb
lret
cmpsl
sub
ficompl
pop
inc
push
test
mul
ja
pop
loope
pop
pop
out
addr16
ljmp
push
repz
fiaddl
adc
int3
rcl
fmuls
or
pmulhw
fiadds
mov
mov
dec
mov
sbb
mov
ja
bound
xchg
push
mov
insl
push
call
into
jp
flds
mov
icebp
ss
add
cmp
sub
add
jb
hlt
sbb
stos
inc
sti
cld
lcall
ljmp
sbb
out
cmp
pop
cmp
test
push
ret
xchg
cmpsb
push
sbb
mov
adc
inc
jmp
ss
test
pop
je
jge
add
mov
jae
add
ds
cmpsl
xor
add
ret
pop
repnz
idivb
les
frstor
pop
xchg
mov
test
jl
push
testb
jo
xchg
adc
outsb
push
inc
or
or
lea
data16
retw
xchg
call
loop
or
mov
xchg
imul
inc
fadds
push
xor
nop
cltd
sub
jg
shll
faddl
test
xchg
add
int
outsb
test
push
add
dec
mov
mov
jge
int3
aad
lds
shr
mov
sbb
push
pop
sub
xchg
enter
popl
pop
test
out
mov
jae
and
neg
pop
lret
adc
push
popf
popa
dec
xchg
repnz
inc
pop
dec
je
mov
mov
call
out
cs
fstpl
fcoml
mov
fwait
ja
inc
push
mov
mov
adc
loope
xor
mov
xor
rcll
out
lahf
leave
mov
jae
pop
pop
out
jle
mov
aas
out
inc
xor
jbe
rclb
pop
ljmp
mov
daa
shrb
and
sub
std
xchg
lds
arpl
ffree
in
inc
int3
and
jp
mov
inc
mov
pop
or
dec
mov
lea
sub
adc
les
or
xchg
loope
shrb
mov
lock
mov
cld
fsubl
xchg
xor
filds
test
pusha
iret
jno
testl
aad
sti
sbb
movsl
ds
add
dec
fsts
push
cltd
sub
push
pop
or
xor
and
fstpl
out
sub
inc
or
push
push
lret
in
sbb
pop
dec
mov
mov
sub
mov
punpcklbw
inc
add
or
ror
stos
xchg
or
in
xor
or
imul
inc
iret
mov
insb
mov
or
leave
and
mov
jge
rcrb
xchg
lret
scas
jno
cmpsb
xchg
jae
sti
cwtl
and
push
add
adc
bound
push
sub
xrelease
popf
xchg
inc
call
or
fildl
and
jne
adcl
xor
inc
addr16
pop
cwtl
in
imul
mov
sahf
fcoml
jmp
cmp
xchg
jl
jle
cmp
aas
sbb
xor
cmp
mov
cmp
pop
cmp
mov
loopne
mov
adc
imulb
jne
add
or
cli
iret
adc
pop
pushf
mov
sbb
pop
cli
lret
mov
xchg
add
mov
mov
scas
sub
mov
loope
xor
pop
mov
jp
lret
add
cs
aas
dec
xor
fbstp
shrb
scas
push
daa
pop
aam
dec
repnz
mov
int3
lods
mov
push
rclb
in
fcoml
outsb
inc
ss
xchg
out
lods
shlb
sub
xlat
cmp
xor
leave
ljmp
pop
mov
sbb
jge
cwtl
mov
in
leave
popa
aam
ret
rorb
lods
out
cvtps2pd
jl
push
jl
std
cmp
cmpsb
fwait
dec
int3
lods
push
leave
ret
fbstp
in
in
bnd
sub
cltd
roll
add
popa
mov
jno,pn
pop
btc
jbe
xchg
ror
mull
out
cli
cmp
xor
lds
pop
adc
xlat
or
cld
mov
push
push
inc
push
in
add
push
xor
push
xchg
xor
inc
dec
adc
movsl
rcr
push
pushf
in
mov
mov
push
iret
sti
inc
jp
insl
add
or
mov
cmp
clc
xchg
jg
pushl
and
jnp
ficoms
jno
xlat
push
cmp
icebp
sahf
jb
shrl
dec
into
arpl
push
cmp
pop
sub
fwait
mul
fsubp
jne
inc
stc
xchg
daa
pop
sub
out
and
aam
pop
or
inc
or
pop
xchg
test
xchg
xor
stos
push
filds
out
mov
jecxz
xchg
scas
and
les
push
cs
xor
xor
bound
daa
push
dec
or
mov
mov
push
fmuls
jg
push
pop
cmp
test
stos
xlat
add
xchg
sub
imul
mov
jg
sbb
mov
daa
lods
into
roll
int
fyl2xp1
or
mov
repnz
in
push
rcll
ja
adcb
and
xor
jmp
mov
lret
pop
mov
rorb
sbb
je
xor
out
dec
mov
push
cmp
mov
aad
mov
mov
lahf
imul
push
imul
adc
jns
lea
leave
scas
cs
mov
frstor
mov
xchg
mov
repnz
inc
mov
sbb
and
sysret
push
xchg
sbb
jno
stos
scas
adc
scas
mov
xchg
push
icebp
jnp
mov
sbb
fistpll
cmpsb
outsl
into
pop
ds
push
scas
addr16
mov
clc
mov
nop
push
jns
push
je
sbb
mov
subb
pop
in
nop
pushf
and
jg
orb
and
adc
add
inc
mov
xor
jnp
add
cmp
jle
push
scas
insl
cltd
jns
mov
jp
in
and
cld
cltd
jo
xchg
into
cmp
ds
mov
xchg
and
sub
dec
add
ficompl
inc
inc
fs
adc
out
adc
sbb
inc
xchg
mov
outsb
push
and
repnz
mov
test
aaa
data16
mov
add
popf
stos
cmc
pushf
out
push
lock
xor
sub
lea
test
and
jne
shrl
scas
loop
sbb
xchg
lods
lock
and
cmp
imul
scas
fcomps
jae
jp
push
inc
or
inc
dec
jae
jbe
xchg
sbb
jns
cs
xor
into
adc
inc
test
iret
scas
aas
mov
mov
inc
scas
pop
mov
or
inc
sahf
mov
push
jp
aaa
mov
test
in
setns
adc
mov
mov
push
inc
inc
fcmovne
dec
and
dec
push
lahf
rorw
outsb
fisubrs
cmpsb
jle
ss
data16
xorl
out
dec
xor
cli
insb
push
mov
mov
or
popa
lds
jmp
cli
push
dec
jns
iret
sbb
in
xor
sbb
movsb
xchg
pop
pop
inc
and
push
cmpsl
fistps
repz
add
sub
add
fstpt
iret
mov
pop
popf
ja
add
in
leave
jle
das
lcall
cmp
mov
and
mov
add
xchg
inc
cmp
jecxz
mov
mov
sbb
add
repnz
mov
shrb
in
int
mov
inc
jno
pop
mov
ja
jmp
fucomp
dec
sub
push
fwait
xchg
imul
fimull
lcall
mov
sub
ja
cmp
push
fisubs
cmp
cmp
pop
fiaddl
leave
adc
sbb
in
mov
adc
pushf
inc
push
sbb
test
in
add
or
outsb
push
in
jo
mov
adc
icebp
dec
dec
xor
sbb
loop
dec
mov
xor
loop
mov
add
jmp
jmp
rorb
adc
loopne
aam
jg
mov
and
lahf
sbb
loop
stos
loopne
dec
or
cmpl
mov
out
fwait
xlat
mov
je
loopne
daa
jmp
push
xor
cmp
lds
ret
das
cmpsb
fcoms
fisubrs
js
leave
movsb
xchg
adc
xor
mov
ret
jge
dec
sbb
sti
inc
jp
lods
xor
and
inc
popf
out
insb
fnsave
sub
sbb
xchg
adc
sub
mov
push
sub
cli
adc
sub
inc
lods
and
mov
xlat
mov
repz
cltd
shlb
pushl
and
repz
mov
push
xchg
inc
in
scas
or
adc
lcall
pop
fbld
mov
int3
add
cltd
xor
sub
adc
popf
lods
scas
add
mov
scas
jo
xchg
ljmp
pop
and
xlat
shrl
xchg
add
jl
mov
xchg
sub
aas
hlt
jl
sub
and
repnz
stos
pop
jl
add
mov
fists
shrb
lock
cli
pop
cltd
outsl
inc
jbe
push
jmp
jno
push
rorb
in
xor
dec
scas
or
lret
mov
lods
cmp
jo
adc
inc
outsb
pop
loopne
jmp
ret
lcall
inc
cmp
cmp
dec
cli
push
pop
mov
lret
bnd
loop
sbb
xchg
jg
jo
adc
ret
jmp
mov
rcll
jge
sbb
out
mov
xchg
push
or
sub
roll
jno
insl
ds
sub
xchg
aam
xchg
and
or
leave
pcmpeqw
es
hlt
jl
mov
push
cs
divl
jg
in
sbb
push
stc
and
popf
xchg
jns
jmp
movsl
fwait
pop
mov
pop
adc
push
inc
mov
or
mov
and
cmp
cmp
jnp
fnstenv
mov
lods
xchg
ficoml
jbe
jne
inc
lret
sahf
add
add
out
pop
je
mov
pop
pop
xchg
inc
dec
sub
dec
cmp
sarl
fidivs
mov
pop
test
mov
adc
stos
mov
lea
fcmove
repnz
jns
push
pushf
es
dec
xchg
dec
lahf
mov
cmp
lret
jbe
mov
js
adc
jb
out
push
outsb
inc
pusha
jl
dec
push
sbb
subl
sub
lea
repnz
mov
lods
inc
xchg
je
lods
repz
lods
iret
dec
push
jnp
cmp
rorb
and
cmpsb
fs
lds
xchg
pop
xor
add
cmpsb
dec
ret
ds
xchg
inc
jo
ss
mov
test
xchg
sahf
das
jg
pop
rclb
push
popa
xor
movb
mov
fs
stc
mov
pop
idivl
push
lahf
sub
insl
scas
movsb
arpl
inc
out
pop
sub
mov
xor
mov
mov
fmuls
das
xchg
jg
sub
push
cmpsl
int3
xchg
out
mov
xchg
test
shl
xlat
int
fdivr
mull
xor
aaa
ss
pop
neg
aam
arpl
in
test
testb
jbe
pop
fwait
aas
xchg
xchg
imul
pop
mov
adc
mov
mov
jb
adc
xchg
mov
insl
out
lcall
sbb
cmc
cmpl
add
das
nop
jp
jns
pushf
adcb
push
and
mov
out
mov
jge
mov
ljmp
lods
test
mov
and
ficompl
out
dec
lret
pop
lea
fidivl
popf
xor
push
mov
aam
mov
cli
imul
jl
into
cmpb
sub
mov
push
fdivs
outsl
mov
test
lea
add
dec
lcall
mov
mov
add
jb
adc
and
xchg
mov
sub
pop
inc
cmp
imul
rcll
jp
pop
push
inc
mov
in
inc
scas
insb
mov
mov
cmpsb
test
pop
push
jl
adc
mov
in
repnz
mov
aas
mov
daa
jne
cs
arpl
cmp
xchg
sub
dec
mov
std
push
movsl
jns
sub
dec
sarb
cmpl
or
push
cmc
adc
je
inc
cli
ja
out
pop
and
add
jp
cltd
mov
adc
mov
adc
stos
dec
fsub
mov
push
popf
clc
ds
push
leave
xchg
imul
dec
sarl
add
nop
lds
in
mov
xor
jns
jecxz
adc
cld
and
jne
adc
aaa
stos
addl
mov
xor
fadds
out
add
outsb
sbb
mov
aaa
push
ss
pushf
mov
cld
mov
fucompp
ja
xor
dec
cmp
add
mov
int3
lret
jle
dec
xchg
movl
mov
cli
orb
lcall
sub
sub
movsb
mov
push
aam
mov
nop
data16
scas
cmp
test
cmp
call
mov
mov
fimull
inc
push
add
dec
outsb
lods
mov
xor
xchg
stc
je
dec
dec
mov
cld
clc
lea
loop
cld
mov
cmc
cld
into
jge
jnp
pop
stos
in
inc
into
push
insb
jecxz
jg
or
jae
lcall
mov
cmp
mov
sub
mov
mov
nop
rcrl
sbb
ficoms
or
inc
mov
dec
pop
mov
loope
mov
arpl
xchg
outsb
xchg
scas
mov
popa
lock
push
pop
cld
out
adc
mov
adc
xchg
mov
sbb
add
pop
add
inc
cmp
cmp
xorl
inc
call
ret
and
pop
aam
aad
divb
lds
mov
iret
and
pop
sti
in
dec
in
loopne
sub
aaa
cmp
insb
adc
cli
cmp
push
scas
xchg
mov
xor
clc
test
dec
sbb
lcall
inc
pop
or
hlt
test
dec
insl
mov
cmp
sbb
xor
enter
outsl
sub
xorl
xchg
xchg
nop
jnp
cmp
pusha
or
es
inc
les
xchg
sbb
mov
xor
sbb
mov
lock
dec
cltd
push
lock
js
repz
test
sub
sbb
or
push
fidivl
lret
fnstenv
imul
imul
cs
repz
addl
mov
sub
in
sbb
sub
inc
xor
sti
lahf
ss
push
sahf
lret
addr16
add
repz
dec
scas
sti
push
xor
popl
stos
nop
mov
orl
sbb
loop
and
add
and
sti
aam
and
add
and
xchg
inc
jne
sbb
push
and
xlat
ror
jge
pop
push
and
idivb
mov
leave
xchg
mov
mov
test
imul
mov
pop
mov
sbb
cmp
xchg
out
xor
jbe
xor
fpatan
and
mov
sahf
sub
mov
scas
nop
dec
sub
adc
je
std
das
pop
dec
xlat
xor
jae
bound
cltd
push
ret
adc
and
sbb
inc
cmp
inc
or
cmpsb
orb
dec
cmpsb
stos
jne
dec
mov
and
outsl
test
push
cli
adc
pop
jne
fiaddl
call
mov
sahf
cltd
sub
pop
push
or
addr16
inc
mov
and
sti
fdivrs
mov
push
sti
xchg
push
pushf
pop
test
leave
adc
fmuls
xchg
inc
into
aad
lods
adc
imul
test
xor
pop
xchg
push
push
or
popa
fstps
fsubr
xchg
sub
pop
rcrl
pop
inc
push
ja
cmpsl
mov
mov
mov
pop
inc
pop
and
repnz
and
inc
mov
test
or
fwait
sbb
push
fadds
orl
xor
movsl
stos
aaa
or
inc
lock
cltd
test
sbb
xor
jns
loope
push
push
rsqrtps
jns
mov
popf
movsb
mov
loop
ret
jp
scas
rcrl
test
jae
push
std
push
sbb
adc
lods
adc
and
leave
pop
pop
testl
add
sahf
push
imul
fsts
mov
mov
mov
lods
icebp
es
out
or
sbb
sti
sub
dec
cmp
mov
push
mov
cmp
dec
jns
sarb
or
dec
mov
fistl
xchg
scas
inc
cli
sbb
adc
adc
pop
dec
pop
stos
mov
xor
loopne
clc
divb
shrl
sub
imul
clc
js
fiaddl
mov
insl
jmp
xor
in
add
push
inc
stos
arpl
addr16
add
inc
scas
sub
jge
dec
out
pop
in
xlat
or
divl
pop
dec
dec
test
sbb
mov
roll
dec
cwtl
mov
push
cltd
xchg
int3
in
sub
push
sub
pop
stc
and
and
inc
pop
std
add
jl
xchg
mov
cmp
je
sbbl
cmpsb
jl
call
and
data16
mov
stc
or
sub
jns
loope
mov
shl
add
mov
int
push
sbb
xor
test
pop
imul
and
cmp
ljmp
shl
int3
shlb
xchg
add
fsubs
cld
mov
andb
jmp
push
cmp
aam
sub
repnz
xchg
out
add
out
cld
movsb
fcoml
mov
pop
pop
pop
lret
push
cmp
push
or
xchg
adc
sti
iret
adc
fdivl
cs
divl
cmc
xor
fnstsw
sub
orb
xchg
data16
cmpsb
je
pushf
pop
loopne
add
out
inc
xor
cmc
addr16
cmp
rorl
fcmovbe
mov
aas
rcl
mov
fincstp
nop
cmp
push
xor
or
sub
sub
mov
fwait
icebp
fcompl
xor
je
and
push
xchg
into
dec
test
jmp
jge
bound
dec
adc
inc
push
adc
mov
xor
ds
out
pop
adc
repz
jp
cmpb
push
pop
fistl
scas
mov
inc
pushf
mov
pop
adc
clc
in
fs
sub
in
or
cmp
mov
imul
popf
fisttpl
cmp
divl
roll
repnz
scas
xlat
sub
fistps
test
mov
mov
jg
ret
insl
mov
pop
dec
or
add
into
les
sti
das
mov
add
mov
xlat
mov
stos
mov
or
and
cmc
push
inc
fwait
mov
xchg
ss
mov
fadd
cld
lahf
mov
insb
xchg
jo
push
lds
fwait
mov
ja
shlb
xchg
push
sahf
mov
insl
lret
mov
cmp
mov
repnz
mov
mov
fstl
insl
add
arpl
cmp
mov
and
cmc
jl
jnp
or
fucomp
mul
inc
mov
aaa
jnp
inc
ja
sti
inc
or
lea
xchg
push
in
pop
leave
call
aad
mov
insb
mov
xor
push
movsb
adc
lods
loopne
sub
out
sti
and
dec
push
lcall
adc
add
mov
mov
or
and
aad
gs
inc
sarb
pop
inc
dec
hlt
faddp
and
pop
jbe
cmpsl
push
inc
cmp
ret
jno
mov
into
cld
or
add
mov
jmp
xchg
mov
aad
dec
mov
cmp
sbb
les
clc
dec
outsb
add
or
mov
int
rcll
mov
cs
data16
push
push
pop
sub
xor
imul
cld
sti
enter
insl
sahf
ret
das
pusha
cmpsb
mov
lret
cmpsl
xchg
inc
lods
ss
mov
jle
mov
dec
jl
fwait
lods
leave
mov
es
or
dec
shlb
loop
stos
aas
in
stos
data16
pop
and
push
jecxz
aaa
lahf
aad
xchg
jecxz
dec
enter
jg
add
mov
pusha
inc
add
inc
xchg
in
dec
loope
cmc
push
ret
int3
call
pop
or
xchg
fnstsw
es
in
inc
sbb
pop
and
xchg
dec
in
jae
test
sbb
or
fcomps
and
or
outsb
loope
xchg
and
test
mov
jo
jecxz
pop
jecxz
outsl
int3
mov
imul
sbb
and
ficomps
jnp
sarl
orb
ret
cmp
push
mov
pop
or
mov
jg
enter
aaa
sti
stos
shrd
clc
mov
mov
repnz
push
mov
nop
aas
pop
imul
fst
sub
nop
sti
pop
and
mov
in
jo
push
pop
push
and
out
jae
cmp
clc
push
lock
mov
rcll
push
xlat
push
popa
and
dec
and
call
testb
and
jle
cmp
or
jb
mov
enter
rcll
out
mov
call
push
add
cmc
inc
frstor
popf
aaa
ret
into
aaa
or
gs
inc
pop
xchg
mov
shrb
repnz
xor
fwait
jecxz
lea
ds
dec
fidivl
iret
repnz
leave
insl
xchg
in
lods
stos
testb
xchg
mov
jmp
mov
push
imul
pop
pop
and
pop
xchg
add
into
or
in
aas
push
sbb
lea
cmc
jns
mov
fldenv
inc
loope
sahf
es
xor
rcr
jbe
sub
ljmp
dec
in
shrl
mov
xchg
xchg
sub
mov
jne
and
stos
xor
cmp
aaa
loopne
cmpsl
mov
hlt
not
pop
hlt
loopne
cmp
das
dec
fisubs
xchg
loope
push
ds
lods
or
xor
aaa
iret
es
sbb
icebp
jp
push
loop
in
mov
adcl
loope
mov
adc
mov
rcll
fwait
aad
lock
imul
jbe
push
and
pop
int3
push
push
sub
loop
movsl
jecxz
in
cmc
jno
cwtl
xchg
inc
std
cmp
das
or
xchg
mov
ljmp
mov
sbb
and
jl
decb
add
adc
in
xchg
mov
imul
cmp
out
adc
cli
in
fbstp
lods
pop
daa
push
scas
test
outsb
cmp
push
adc
call
inc
xor
and
je
cmp
mov
inc
mov
mov
adc
mov
push
bnd
pop
mov
fisttpl
arpl
mov
mov
xchg
and
cmp
sti
cmp
mov
je
sbb
jg
repz
rclb
dec
rclb
or
and
push
mov
iret
adc
sbb
jbe
xor
and
push
or
xlat
adc
mov
push
adc
daa
test
movb
mov
cwtl
push
and
xlat
fmull
aam
sbb
mov
dec
push
lcall
js
pop
push
cmp
jge
loope
mov
or
or
insb
push
gs
mov
xlat
lea
sti
ret
js
sbb
sti
jecxz
cmpsl
and
jmp
jae
sarl
rorb
push
insb
mov
add
push
mov
dec
fists
dec
cmc
test
jecxz
int3
ss
movsl
aad
jno
push
pop
sbb
xor
jbe
inc
push
or
inc
in
pusha
push
adc
nop
mov
xor
lock
je
xor
fcomps
mov
lcall
sub
je
mov
push
push
sbb
jbe
popf
pushf
jb
lcall
subl
xchg
pop
add
inc
cli
adc
jbe
sub
shll
shll
sbb
pusha
hlt
rorl
jg
stc
insl
pop
lea
adc
mov
push
sti
rcll
and
popa
mov
and
adc
push
fsubrp
fnsave
lret
leave
jo
add
ss
in
pop
adc
push
aad
push
ficompl
pop
mov
out
jbe
adc
loop
ss
aam
in
fdivr
sarl
fcoms
mov
rclb
jmp
push
aam
xor
pop
sub
idivb
add
cs
ja
movswl
mov
xchg
scas
pop
lods
sub
gs
dec
mov
ret
cmpsl
repz
nop
or
mov
out
lock
test
daa
jle
movsb
das
lahf
movswl
inc
or
popa
xor
lcall
or
sbb
cmp
lret
insl
stos
dec
loopne
sbb
shlb
jge
dec
add
xor
sbb
mov
pop
repz
mov
scas
insb
cli
fcomps
add
out
fs
cmp
ficoml
or
nop
adc
flds
pop
push
es
xchg
out
js
sahf
push
jmp
sub
sub
lret
pop
cli
pop
mov
cltd
clc
fisttps
daa
cmp
test
lahf
jp
loop
cmp
mov
mov
test
cmp
outsl
das
aad
jecxz
dec
ss
inc
in
fbstp
jp
xor
shlb
xchg
pushf
add
jl
insb
xchg
popf
push
cmpsl
push
xor
push
xlat
aad
add
jne
xor
sbb
or
cltd
push
cmp
pushf
cli
dec
aaa
or
add
jae
dec
jecxz
add
inc
mov
insl
xchg
mov
pushf
adc
faddp
aas
push
sub
add
pop
or
rcrb
push
mov
sub
pushw
mov
mov
sbb
shrl
divb
ljmp
cmp
jp
std
out
inc
inc
hlt
ret
jns
je
push
mull
lock
inc
pop
in
scas
inc
adc
aaa
push
shl
movsl
mov
jne
sub
sbb
add
add
pushf
mov
and
lods
inc
sbb
shlb
orl
inc
ror
adc
fisttps
movsl
jo
out
add
ret
outsb
xchg
push
mov
popf
cmp
mov
inc
gs
inc
mov
ljmp
sbbb
mov
lods
fwait
sbb
dec
in
pop
ljmp
subb
xchg
pop
mov
sti
es
adc
cwtl
movsl
mov
pop
and
sub
sbb
movsl
adc
cmpsb
pop
dec
and
mov
xchg
jnp
addr16
into
inc
hlt
aas
or
jmp
cmp
xor
sub
pop
xchg
scas
mov
sbbb
adc
push
movsl
xacquire
ds
mov
mov
lock
mov
pmulhuw
pop
shll
jmp
mov
sub
lea
lret
or
push
imul
das
into
testl
imul
inc
xlat
mov
mov
dec
stos
pop
repnz
insl
inc
and
in
lods
xchg
inc
or
push
and
lret
in
into
dec
push
inc
add
fnsave
ja
loopne
std
shlb
xor
jae
mov
shlb
pop
mov
cs
loop
mov
mov
sbb
in
xchg
or
push
xchg
insl
sarl
mov
xchg
jae
jg
ss
mov
adc
jl
lock
adc
pop
adc
es
push
dec
aad
push
add
dec
mov
leave
ja
jp
and
push
mov
cmpsl
arpl
loop
mov
xchg
nop
lea
repz
jg
or
push
and
lods
cmp
push
pop
sbb
rcrb
sarl
mov
lcall
divl
jl
fnstenv
xor
sub
cs
sub
std
and
dec
call
inc
mov
repz
dec
inc
out
dec
push
imul
mov
and
and
fucomi
sbb
repnz
aad
mov
sbb
mov
jp
xchg
push
lret
jae
aam
stos
mov
sbbb
push
pop
xchg
subl
shlb
repz
pusha
rclb
push
movups
ror
scas
mov
pop
test
pop
aaa
scas
sbb
cmp
insl
inc
mov
insl
ljmp
fcmovbe
cld
int
icebp
xchg
adc
mov
and
xchg
dec
insb
lock
mov
pushf
out
pop
sub
jnp
cmp
fwait
cmpsl
cmp
int
ficoms
pop
mov
xor
insb
imul
int
mov
inc
popf
sbb
mov
and
xor
inc
dec
jecxz
mov
dec
data16
cs
rcr
cmp
jecxz
dec
lds
cmp
loop
icebp
loopne
cmc
push
dec
clc
test
rol
dec
iret
ds
sbb
test
xchg
pop
push
mov
popa
enter
cmpsb
bound
sahf
cmpsl
cmp
adc
pop
adc
lods
mov
pop
std
and
in
push
and
cmpsb
in
xlat
or
pop
jae
in
lret
sbb
dec
sub
add
mull
push
cld
mov
pop
jns
mov
cld
loop
pushl
dec
ret
aam
xchg
push
sahf
lahf
adc
pop
test
jb
mov
pop
pop
sbb
xor
stos
ja
out
add
cltd
addl
add
stos
jmp
cmc
imul
int3
pop
sub
ret
xchg
sbb
mov
ja
pop
jge
out
lock
and
gs
in
lods
inc
inc
int3
ljmp
daa
ja
cs
outsb
in
xor
push
test
test
pop
cmpsl
cmp
cltd
jnp
xchg
jo
cmp
cmp
jmp
push
sbb
leave
pop
call
pop
cltd
insb
adc
add
jo
mov
addr16
out
int
inc
inc
call
jge
inc
cmp
or
stos
fidivrl
mov
cmp
dec
sbb
mov
jecxz
add
mov
shlb
sub
add
sub
mov
lods
leave
rcrl
int
leave
push
jae
mov
xchg
add
push
push
mov
aas
ficompl
fs
orb
aam
pushf
dec
mov
shrb
sbb
dec
push
dec
adc
push
and
es
sub
sbb
cmpsb
mov
aam
out
jl
sub
mov
inc
js
sub
jge
sahf
and
cmp
imul
or
cmp
int3
inc
push
push
jg
mov
push
outsl
inc
jns
and
pop
mov
popa
xlat
bound
loopne
inc
call
sbbb
jnp
mov
stc
daa
pusha
or
sub
jmp
fwait
scas
and
gs
loope
xchg
std
add
outsb
push
imul
adc
sbb
xchg
mov
popf
pusha
repz
nop
mov
pop
aas
pop
sub
mov
jmp
pop
fcoms
fnstcw
ja
das
jge
jl
pop
mov
xchg
jmp
mov
push
ror
fcomps
or
jecxz
push
inc
adc
cld
mov
xchg
pusha
xor
lret
jl
mov
cmp
jb
out
paddw
jg
cmp
add
mov
or
mov
xor
out
in
fdivs
mov
fisttpll
mov
ret
pop
mov
ja
pop
push
cmc
insl
add
addr16
push
lds
cld
pushl
mov
aad
lret
enter
mov
pop
xchg
icebp
or
les
mov
jl
inc
jne
pop
adc
repnz
or
dec
imul
sbb
xchg
addr16
push
fistps
cltd
cmpsl
and
lock
cmp
sub
ja
daa
cmp
mov
xor
add
dec
cmp
xor
outsb
xor
div
aad
pusha
fsubl
or
adc
mov
rclb
cwtl
nop
stos
push
mov
mov
addl
sbb
loope
aaa
mov
lods
cs
fsubl
xor
or
xchg
inc
icebp
sbb
cmc
mov
and
cli
lock
cwtl
jbe
cwtl
lods
push
sub
repz
add
cmp
add
pop
fisttpll
daa
mov
inc
add
pop
cmpsl
xor
clc
xchg
mov
iret
sbb
scas
fstl
sarl
add
sti
data16
imul
cltd
les
adc
xchg
jg
sbb
int3
adc
and
mov
sbbl
pop
jns
lods
pop
push
xorl
inc
stc
jl
ret
mov
aaa
ret
inc
push
add
in
cwtl
leave
aas
jno
pusha
and
test
jno
and
clc
adcl
mov
or
popf
ret
out
cld
cltd
dec
fcoms
mov
call
scas
fisubrs
rolb
mov
or
push
push
pop
jne
jns
movsb
test
sbb
mov
or
jge
in
mov
arpl
test
popf
cmp
push
out
cwtl
jae
xchg
btr
dec
pop
pop
xchg
fsubrl
scas
outsb
and
ret
inc
out
mov
jmp
repz
xchg
ljmp
es
fcmovb
clc
shll
xchg
cltd
add
cli
push
int3
ror
into
movsb
nopl
insb
mov
decl
or
idivb
inc
das
adc
jmp
pop
inc
lods
inc
push
lods
out
ss
fstl
pop
or
jecxz
aaa
xor
inc
xchg
jmp
or
cltd
jae
movsb
ja
out
mov
sub
aaa
bound
sbb
cmc
mov
xorb
clc
cmp
add
cmp
and
add
popf
fsubrp
shll
ret
dec
arpl
sbb
pop
test
out
sbb
rolb
mov
js
xchg
pop
dec
mov
lods
repnz
fcmovnb
popa
int
push
mov
call
sub
sub
outsb
jl
aaa
imul
add
lret
cmp
dec
pushf
cmp
push
test
jl
cwtl
jg
dec
fwait
dec
aas
jns
jo
xchg
stos
out
mov
fcompl
pop
test
mov
sub
cmp
mov
inc
fadd
iret
sahf
push
inc
aaa
inc
cltd
out
pop
xchg
aad
add
div
jne
xchg
push
stos
adc
adc
stc
lret
popa
push
sti
mov
cmpsl
cmp
fdivl
pop
jo
int
stos
sub
imul
jl
fcomi
mov
fstps
push
jae
dec
repnz
mov
jb
arpl
je
test
test
adc
fs
sub
pusha
fwait
and
in
fcompl
sbb
cli
addl
lds
jo
pop
test
rcr
enter
add
jns
and
inc
push
inc
loope
imul
push
shlb
add
out
pop
sbb
cwtl
out
push
into
mov
mov
adc
hlt
shl
outsl
cli
mov
cmpsl
push
movsl
sbb
xor
and
or
jne
cwtl
scas
xor
mov
loope
mov
imul
gs
insl
jle
aaa
mov
mov
lea
scas
imul
jns
xchg
xchg
out
push
in
or
outsb
fdivp
pushf
add
stos
outsl
data16
cmc
push
jl
roll
add
lret
xchg
xchg
mov
nop
push
sti
and
sbb
js
aam
ficoml
lock
jno
pop
jno
sub
cmpxchg
and
nop
ret
adc
adc
inc
iret
mov
push
pop
cmp
lds
outsl
fsts
aaa
xchg
cli
in
ljmp
cmc
sbb
in
fadd
sub
add
adc
jecxz
mov
sti
mov
out
fidivrs
push
out
ficoms
cmp
sbb
xor
mov
aam
push
push
add
ret
aam
lds
jmp
and
mov
into
mov
cmc
test
pop
das
adc
or
aaa
test
add
xchg
test
scas
dec
cmp
lods
xchg
cmp
mov
adcl
popf
push
xor
dec
mov
test
sbb
mov
push
adc
xor
int
inc
jecxz
push
scas
push
mov
fcoms
xchg
ror
push
xchg
sbb
push
test
mov
add
sbb
aas
jl
jbe
jne
and
in
xchg
xor
sbb
popf
hlt
aaa
mov
addl
std
scas
mov
divb
and
push
inc
and
and
mov
and
pop
xchg
pop
adcl
out
jle
psubsb
fld
inc
into
inc
lods
insb
mov
add
push
js
sbb
test
and
out
leave
cli
es
pop
ljmp
lret
push
in
popf
cmp
or
clc
or
adcb
ljmp
roll
sub
pop
or
fidivrl
mov
das
adc
fldt
jo
mov
mov
pop
or
xor
push
sbb
dec
jne
repz
cltd
mov
mov
adc
cwtl
dec
fwait
adc
pusha
and
mov
xchg
je
inc
inc
sbb
popa
dec
sbb
cmp
ds
test
out
pop
mov
out
xor
push
add
xchg
push
aaa
pop
push
cld
push
dec
ja
mov
lds
stos
stos
mov
pop
rcl
hlt
ds
mov
stos
inc
xchg
call
in
mov
sbb
shl
xchg
inc
addb
cwtl
sarb
adc
sub
lcall
mov
cmp
mov
ret
cmpxchg
ret
imul
out
rolb
push
int
out
dec
fwait
iret
jecxz
aaa
cltd
icebp
inc
cli
cmp
pop
push
mov
lods
pop
andb
xor
or
js
in
pop
mov
jnp
xchg
add
xlat
pop
out
fcoms
push
jb
repnz
mov
loop
jmp
xor
imul
sbb
shr
jae
jno
jnp
jns
outsl
pop
lret
ja
dec
popf
dec
out
outsl
scas
fs
push
ret
push
lcall
xor
stc
inc
cltd
jg
dec
rol
mov
imul
enterw
mov
mov
cmpl
leave
ficoms
inc
xchg
fadd
clc
sub
lods
ljmp
repnz
pop
push
cmc
mov
jl
leave
insl
push
test
and
gs
nop
adc
pusha
scas
lahf
xor
jae
test
test
and
cmp
fcmovne
and
xchg
rclb
ss
outsl
mov
push
outsb
or
mov
sahf
shr
int
mov
adc
fnstcw
inc
mov
fmul
and
sub
cld
jl
mov
clc
or
cmp
sbb
loopne
test
sbb
cli
pop
cli
push
sbb
jmp
loope
xlat
xchg
xor
negb
dec
subl
inc
add
adc
bound
xchg
call
sbb
icebp
insb
arpl
push
leave
cs
push
xorl
push
mov
mov
xor
cmp
lock
rep
adc
mov
mov
jnp
and
mov
cs
jae
sub
cmp
in
out
push
adc
jnp
xorb
xor
ljmp
sbb
dec
jns
or
inc
mov
nop
cmp
adc
das
xchg
add
ffree
leave
imul
test
lahf
add
into
insb
lods
in
mov
pop
loopne
dec
ret
push
mov
pushf
adc
pop
adc
mov
test
or
ljmp
lcall
je
pop
xchg
xchg
mov
scas
push
testl
mov
lods
sub
mov
mov
jo
out
in
cmp
mov
mov
leave
les
pop
dec
cmpsl
pusha
mov
into
cmp
pop
push
fnstcw
adc
dec
aas
push
je
fisubrl
jecxz
jbe
jno
and
mov
lcall
stc
sbb
add
aaa
fmuls
adc
daa
iret
inc
ret
cmp
cmp
lret
jl
pop
lock
test
xorb
cmpsl
pop
adc
iret
mov
mov
xchg
fidivs
imul
jbe
inc
out
ja
jno
les
call
jge
cmpsl
pop
jle
pop
inc
aaa
xor
push
mov
sub
fists
enter
dec
sbbb
adc
dec
not
and
fwait
push
insl
gs
or
in
mov
stos
scas
repz
push
mov
mov
inc
aam
cltd
int
or
or
push
push
pop
test
dec
xchg
shlb
xorb
jo
sub
add
pusha
push
movsb
sarb
clc
inc
dec
mov
pop
aas
pop
sahf
push
and
pop
cmpb
shl
test
outsl
mov
pop
out
inc
mov
jo
or
jg
outsl
jle
imul
sarb
popa
push
es
mov
popf
and
pop
les
cwtl
push
and
sbb
adc
int3
add
arpl
loopne
hlt
inc
out
mov
fldt
mov
inc
xchg
cmp
push
mov
subb
adc
inc
loope
mov
test
adc
inc
dec
pusha
mov
test
jne
and
jns
ss
shl
ja
mov
lret
fucom
bound
test
insl
nop
inc
stos
pop
mov
ret
mov
add
clc
adc
mov
jp
xor
insl
xchg
adc
mov
xor
notb
mov
or
andl
sti
loop
aas
mov
mov
shl
add
fs
in
testl
or
dec
cmp
and
mov
iret
scas
add
cmp
pop
into
lcall
xor
sub
sub
add
sbb
les
insb
pop
mov
mov
mov
dec
imul
pop
add
and
leave
adc
ljmp
lcall
popa
mov
mov
lock
inc
cltd
ljmp
cs
inc
js
mov
sahf
leave
push
das
or
mov
stos
push
jns
pusha
fdivrl
rcr
pop
sahf
sub
test
mov
mov
in
mov
out
push
pop
fwait
rcrl
popf
ljmp
sbbb
roll
in
pop
outsl
and
data16
sub
and
xor
cmp
nop
enter
mov
insl
out
fs
icebp
xchg
insb
push
sbb
push
leave
jb
jg
add
sbb
stos
icebp
subl
jnp
xchg
js
int3
adc
fstpt
fcoms
or
fstps
std
inc
fs
jns
mov
sarl
loop
sbb
in
and
sbb
repz
xchg
dec
inc
repnz
out
mov
test
mov
fdivrl
xchg
cmp
icebp
mov
mov
xor
pop
pslld
cs
push
scas
lods
mov
out
xchg
int
mov
xchg
scas
and
js
aad
push
out
lahf
data16
jne
xchg
imul
out
dec
test
dec
lods
lcall
cmpsl
sub
mov
inc
mov
push
aas
mov
sbb
in
pop
mov
cltd
outsb
insb
rorb
stos
jo
add
divl
mov
rcll
hlt
or
test
lea
je
mov
stos
mov
mov
xor
popa
jecxz
mov
add
inc
scas
icebp
dec
and
inc
jae
call
push
jnp
push
pop
cmp
add
mov
cmp
movsl
and
or
jge
movsb
int
dec
xor
cmp
xchg
adc
cmp
aam
insl
arpl
jmp
add
and
adc
das
cmp
lea
outsl
stos
push
add
xor
mov
out
leave
mov
orb
mov
xor
clc
add
lock
cmpsl
iret
add
faddl
inc
lds
mov
cmpsb
cmp
xor
lods
pop
push
movsl
mov
add
mov
pop
andb
push
add
or
mov
push
jno
jg
pusha
dec
add
scas
push
jbe
cmp
popf
lock
clc
icebp
mov
iret
xchg
add
ss
je
call
call
push
ret
push
mov
add
dec
add
test
pop
mov
bound
aad
dec
out
and
push
std
adcb
mov
jno
mov
arpl
adc
std
mov
push
loope
mov
or
fidivrl
pop
leave
jns
gs
or
sub
testl
push
xchg
js
xlat
pop
ret
cmp
das
aad
cwtl
in
out
cwtl
sbb
into
test
gs
cmp
adc
cmpsb
aas
jle
jmp
xor
inc
insb
stos
aad
fidivrs
cmc
mov
mov
shlb
jne
cmpsb
dec
or
sub
pop
add
xchg
or
in
or
or
sub
popf
mov
gs
icebp
fcomps
out
inc
loop
xchg
mov
cmpsb
dec
mov
adcl
lds
push
cs
and
pop
xor
ret
pusha
into
imul
loopne
pop
mov
xchg
rcr
dec
mov
sub
add
mov
xchg
ficomps
jecxz
cmp
jbe
jne
mov
dec
mov
test
out
stos
ljmp
pusha
insl
mov
push
jp
push
test
sbb
mov
stc
jecxz
jae
ret
out
popf
pop
stos
inc
shlb
test
dec
mov
jae
fildl
cwtl
stos
scas
adc
xlat
outsb
push
or
sti
pop
cmpsl
jg
in
cmp
mov
and
xlat
int
loop
sahf
mov
out
push
cmpsb
mov
or
in
and
cmp
inc
dec
imul
enter
ret
in
lret
cmpsb
mov
cmp
cmp
sbb
iret
sbb
pop
sub
inc
push
pop
mov
push
lock
daa
jbe
es
lods
cli
or
shrl
sahf
fisttpll
push
lret
jns
inc
test
adc
mov
jbe
enter
fstpt
dec
fcoms
push
das
push
mov
lahf
xorb
mov
mov
inc
js
xor
testl
lcall
inc
mov
out
jns
cmp
mov
add
cmp
dec
xchg
pop
cmpsl
push
mov
pusha
mov
jae
and
cmpsl
mov
dec
into
xor
outsb
push
add
cs
mov
gs
xchg
xchg
cmp
in
push
daa
int3
test
shll
pop
das
dec
push
and
push
mov
and
or
out
out
int
cmpsb
mov
push
rorl
mov
and
clc
mov
mov
jmp
hlt
push
clc
inc
pop
movsl
add
aas
mov
jge
inc
std
repz
jne
sub
lcall
push
scas
cmp
pop
icebp
add
aaa
add
aad
ljmp
mov
fstps
jge
push
cmpb
popf
nop
and
cmpsb
dec
lods
inc
mov
mov
out
lods
cld
xchg
fwait
jae
call
ror
fprem1
lret
outsb
ret
shll
or
xchg
out
out
sub
cmp
cmp
in
mov
lods
in
mov
shlb
call
pop
mov
mov
pushf
add
cltd
jl
jg
sub
mov
cmc
lret
cltd
sbb
cmp
adc
dec
sbb
cmp
jle
push
and
dec
pop
jae
mov
jns
in
xchg
mov
js
cmc
cs
cmc
adcb
and
repnz
lock
jmp
sbb
das
faddl
cmp
cltd
in
and
hlt
popa
hlt
mov
addb
push
xor
in
repnz
add
std
add
js
into
mov
repz
push
pop
in
stos
pop
cmp
sbb
repz
push
mov
sub
outsb
dec
sbb
xor
xor
and
jo
sub
mov
daa
int
push
pop
add
repz
dec
dec
aas
push
imul
mov
cmp
push
iret
aad
xchg
sub
test
xchg
lret
test
mov
jno
mov
fwait
dec
mov
out
lcall
bound
out
mov
sbb
fimull
out
enter
lods
insl
push
lds
sub
jmp
pop
fnstenv
mov
out
lret
test
cmp
lret
addr16
repz
mov
sub
mov
lock
jge
stos
pop
divb
loope
mov
and
xchg
cmpsb
xor
fldenv
or
xor
repz
mov
xorb
or
ja
jg
bound
jb
fisubs
mov
xor
ljmp
fs
jle
pop
enter
out
into
add
and
jmp
jl
xchg
fisttps
lret
push
rcr
emms
ffreep
das
add
rol
dec
sbb
mov
mov
data16
or
scas
mov
mov
or
cltd
pushf
rcll
cmp
xchg
mov
js
push
or
xor
sbb
pop
test
xor
stc
lock
xchg
or
outsl
jmp
out
push
cs
sub
fucom
jmp
mov
mov
imul
shlb
mov
sub
cli
push
movsb
shll
ds
loop
jae
test
sbb
push
cmp
les
cmpsb
test
loop
inc
out
outsl
add
lods
addl
and
inc
and
clc
add
cmp
push
nop
lret
imul
pop
or
sub
inc
out
xchg
mov
pop
jle
push
sub
push
imul
sbb
in
and
jge
adc
inc
sub
jmp
add
inc
jne
rcrb
int3
mov
mov
popa
cmpsb
mov
test
or
sarb
add
dec
orl
xchg
es
jl
xchg
mov
xchg
add
icebp
jne
jno
dec
dec
jl
push
clc
lock
jge
jbe
lods
mov
insb
cltd
cs
imull
out
sbb
ds
pop
jg
mov
mov
data16
adc
rcrb
xchg
in
xor
repnz
xchg
sbb
lahf
ret
inc
push
stos
adc
ffreep
mov
std
je
nop
xchg
imul
mov
insl
shl
jecxz,pn
sti
stos
adc
cmpsl
sbb
das
add
adc
push
adc
jecxz
adc
xor
out
cmpsl
or
inc
xchg
mov
cs
or
xlat
call
pop
xor
and
jg
xlat
xor
cmc
outsl
daa
icebp
stos
lods
adc
and
sti
mov
push
mov
mov
ss
xor
in
xor
lret
push
aas
fisttps
addb
lret
pop
out
frstor
sbb
push
push
pop
sub
test
mov
or
movsl
xchg
fisubrs
orl
xor
mov
add
out
adc
scas
lock
mov
and
cmp
push
inc
dec
popf
add
sbb
popa
es
rolb
add
test
notl
adc
or
jl
shl
push
push
jl
pop
inc
sbb
lcall
ljmp
fisubl
jbe
xchg
test
in
mov
jno
add
loop
lahf
push
adc
adc
or
mov
scas
push
adc
cld
mov
insb
xchg
mov
iret
jg
cmp
jl
adc
xchg
pop
shll
adc
mov
in
ret
mov
pop
divb
xor
incl
gs
inc
mov
mov
divb
repz
mov
mov
xchg
adc
pop
mov
or
shll
adc
mov
clc
pop
jb
lret
sub
jbe
or
xchg
sti
mov
pop
add
repnz
inc
subl
push
subl
dec
in
xor
lret
adc
inc
xor
inc
out
and
push
jbe
test
pusha
aad
cmp
jbe
aam
rol
mov
push
adc
pop
xor
sbb
mov
xchg
daa
rcr
mov
xchg
mov
test
in
jp
or
adc
lea
xor
jnp
add
mov
mov
cmpb
lcall
or
mov
jae
shll
mov
gs
rorb
lret
mov
jae
add
stos
mov
pop
incb
and
add
lods
add
pushl
ds
or
es
add
xor
enter
shlb
pop
adcl
add
shlb
jnp
scas
mov
mov
fisttps
push
pushf
adc
inc
sahf
movsl
pop
and
aas
sar
jge
and
icebp
xor
push
test
cmp
cli
jecxz
sbb
mov
mov
push
jmp
xchg
and
out
dec
push
jbe
xchg
cmpsb
rorb
xchg
in
addb
mov
mov
xchg
xor
loop
cmp
daa
movsl
sub
lea
in
adc
pop
rcr
pop
add
or
enter
jb
cli
movsl
pop
sub
mov
jl
pushw
mov
stos
popa
repz
fnstenv
test
inc
inc
add
sbb
xchg
jo
dec
jnp
mov
mov
inc
daa
or
js
cwtl
ret
or
adc
lret
cmp
pushf
sub
jo
push
sub
in
in
shrb
mov
sub
sub
mov
jle
mov
stos
or
mov
mov
frstor
add
or
or
in
cmc
outsb
sbb
mov
mov
lock
stc
mov
xor
iret
scas
popl
cmc
jp
mov
sub
inc
xchg
nop
out
scas
ljmp
sbbb
int3
fbstp
loopne
in
lcall
insl
xchg
fcmovnbe
insb
add
mov
jne
pop
jp
out
mov
pop
add
xor
in
sbb
pop
ja
xor
adc
das
push
add
fwait
out
or
sbbb
inc
sub
lods
jb
xchg
inc
int
insl
pop
or
push
les
pop
fcomip
ss
movsl
es
dec
mov
lods
push
ja
adc
adc
lret
xor
and
mov
sub
or
jl
inc
setl
cltd
outsb
ds
push
pop
sub
cltd
out
adc
mov
lods
out
mov
lret
push
int
ret
cmp
pushf
stos
sarb
sub
leave
mov
cmp
js
jb
dec
adc
sub
mov
fnsave
loop
lahf
pop
cld
mov
js
sbb
pop
add
sahf
in
pop
into
mov
xchg
fcmovbe
xchg
aas
aad
repnz
xor
ret
movsl
fisttpl
popa
decl
inc
stos
cmpsb
or
or
femms
insl
push
clc
xor
bsr
mov
or
mov
repnz
imul
push
mov
dec
sub
push
fwait
stos
pop
jg
lds
js
jne
subl
inc
pop
into
loopne
adc
repnz
inc
mov
push
jns
jo
cmp
xchg
ret
adc
sub
jecxz
dec
sub
fildl
pop
push
popf
push
lret
aad
pop
or
xchg
push
jb
sti
sub
xor
mov
rorb
jg
pop
out
jnp
decl
fwait
or
enter
add
loope
sarb
stc
xor
in
pop
xor
nop
jmp
stos
or
cmpsl
sbb
push
xchg
loope
shrl
jecxz
mov
fbstp
in
fdivrs
ss
mov
fdiv
jle
outsb
out
in
stos
lods
mov
xchg
ror
cmp
pop
sahf
inc
cmovge
sahf
cmpsb
and
pushf
mov
out
mov
mov
mov
data16
in
je
ret
fs
mov
dec
lret
sub
adc
aas
les
xchg
or
in
cwtl
pop
mov
xor
push
mov
aad
inc
push
mov
jbe
cmp
push
push
lea
push
mov
in
popf
push
sbb
inc
in
ljmp
pop
cmp
xchg
in
dec
xor
pusha
adc
stc
out
sub
fisttpl
pop
dec
mov
mov
jl
fisubs
mov
xchg
push
lret
sub
xor
and
popf
xor
shll
sbb
mov
mov
pop
jb
add
ret
std
cmp
jecxz
hlt
scas
sbb
sbb
decb
adc
loopne
imul
push
jns
mov
ror
push
cwtl
xchg
clc
imul
xchg
nop
in
lcall
aad
or
ficoms
std
stos
or
addr16
pop
es
and
xchg
cld
out
cmpsb
sub
dec
outsb
cli
push
enter
dec
xchg
lahf
pushf
mov
pusha
adc
cmp
or
mov
pusha
popa
fsubl
jo
or
xchg
sbb
sbb
sub
inc
adc
jg
sbb
mov
cmpl
push
mov
pop
jl
sbb
and
inc
cmpsb
xor
xorl
mov
cltd
mov
adc
or
push
rcrb
push
mov
mov
jg
xchg
push
outsb
jns
xor
std
cmp
mov
rcr
jne
add
ljmp
jnp
inc
mov
pop
push
in
add
popa
jo
push
inc
sub
sub
mov
aad
ljmp
mov
xchg
daa
sub
loope
mov
movsb
js
xor
cmc
lds
xchg
pop
and
cs
mov
shll
ficoml
aas
into
stos
jp
cmc
cli
jecxz
fadds
aas
adc
sbbl
sbb
sti
push
inc
gs
les
rclb
call
arpl
aad
test
add
or
mov
xchg
inc
movups
adc
les
jg
test
mov
sbb
push
mov
sbb
scas
cld
iret
xor
nop
pusha
cld
add
inc
ds
int
das
dec
jb
out
push
pop
ljmp
dec
rcll
push
mov
mov
fisubs
jae
xchg
dec
sbb
push
jge
push
adc
sbb
push
stc
push
loopne
and
mov
cmpsb
or
pop
mov
jp
lds
inc
jbe
sub
mov
push
int
or
fwait
push
cmp
push
push
or
scas
addb
mov
les
pop
mov
push
xlat
jp
push
fwait
stos
pushf
mov
jne
push
pushw
roll
rolb
mov
fldcw
icebp
pop
sarl
ds
fildll
xchg
push
jmp
gs
loop
insb
cmp
pusha
inc
mov
dec
cmp
in
movsl
aam
sarl
pop
fsubs
scas
dec
inc
sahf
repz
push
jnp
popf
in
mov
in
jb
xor
addl
jge
cmpsl
push
mov
outsb
push
mov
or
ffreep
std
lods
incl
sbb
inc
add
dec
ds
sbb
imul
push
jg
mov
out
push
out
pop
cli
and
out
insl
outsl
jne
pop
hlt
inc
mov
aas
lcall
fnstcw
xlat
mov
xor
push
pushf
jo
mov
xchg
mov
jmp
aaa
or
jb
sbb
adc
hlt
in
repz
xor
mov
push
aad
les
cld
mov
adc
pop
jge
nop
pop
int3
xchg
sub
inc
sbb
sbb
lods
pushl
push
scas
repnz
cmp
push
dec
sbb
pop
sub
lea
cld
or
add
push
data16
les
lret
fcomp
ud1
mov
lods
cmp
mov
rcrb
int3
aad
sub
xchg
int
cmp
fidivs
popa
repnz
or
or
push
testl
mov
jb
mov
sub
stc
insb
pop
cmp
cmp
pop
mov
inc
sbb
pusha
mov
xor
jecxz
cs
pop
icebp
xlat
ja
mov
movsb
add
xlat
lods
jle
lahf
test
sbb
jp
mov
inc
ret
mov
es
inc
mov
fs
push
out
fisubrs
lcall
test
cmc
cli
jb
ja
inc
push
ret
push
sbb
add
repz
rclb
mov
mov
jl
subb
adc
cmp
mov
pop
jge
inc
pop
adc
fcoms
out
pushf
xor
or
arpl
stos
mov
and
pushf
loop
lret
mov
lcall
add
or
ret
lds
test
cld
adc
mov
jg
xchg
and
ja
iret
sub
xchg
or
mov
lret
xor
pop
sbb
insl
fdivrs
pop
cvttps2pi
add
mov
jae
loope
into
push
inc
lea
xchg
and
test
dec
add
push
inc
xor
xchg
sbb
and
pusha
ds
push
adcb
cld
adc
jle
insl
push
mov
add
inc
scas
sahf
sbb
mov
inc
jg
cld
adc
loop
pop
inc
jae
lods
mov
mov
xchg
nop
mov
mov
es
scas
push
notb
test
pop
inc
enter
cmpsb
cld
push
mov
sbb
and
shlb
jge
pop
fcmovnbe
and
adc
std
std
fisubs
mov
clc
adc
add
lcall
repz
mov
push
sbb
sub
or
pop
jecxz
stos
dec
jp
jo
jl
je
mov
xchg
enter
aam
push
outsb
mov
cmp
dec
push
push
sbb
jns
dec
or
inc
addr16
sbb
cwtl
pop
add
xchg
lret
in
xor
decb
sub
lock
mov
mov
dec
mov
nop
or
xor
dec
lret
lock
push
scas
mov
and
call
mov
fnstcw
test
dec
pushl
sahf
orl
dec
jl
xchg
shlb
mov
dec
xchg
mov
imul
repz
xor
ds
popl
add
xchg
in
int
jecxz
arpl
push
cltd
inc
mov
stc
fsubrp
cmp
dec
mov
dec
mov
sahf
mov
lcall
push
imul
dec
cli
call
mov
xchg
mov
mov
adc
cld
mov
mov
or
xor
sub
inc
jmp
cmp
xchg
sahf
or
sbb
cmp
fdivr
pop
mov
ret
in
adc
dec
in
sub
pop
mul
add
popa
notl
sbb
mov
inc
xor
sbb
adc
aaa
loope
xchg
lret
mov
pusha
push
jae
mov
mov
xchg
into
jmp
cmpl
hlt
cmc
jge
add
popa
leave
repnz
enter
addb
mov
lds
mov
imul
jae
jo
ja
arpl
or
xchg
dec
lods
scas
scas
xchg
mov
sbb
enter
arpl
mov
outsb
add
fcmove
inc
sub
mov
into
adc
movsl
xchg
scas
call
inc
sbb
add
mov
test
adc
loope
fdivrs
dec
es
fistpl
aas
inc
divb
shrl
dec
je
and
mov
sbb
inc
cmp
mov
dec
cmp
xchg
popa
sahf
cmpsl
and
movhps
or
lea
xchg
movsl
pop
popa
xor
xchg
mov
inc
insb
ja
xchg
push
int3
xchg
dec
push
adc
movsb
pop
ret
cmpsb
push
jp
jnp
jae
lcall
pushf
out
pop
push
push
lods
das
jge
mov
xchg
push
rcll
or
add
or
cwtl
ss
jnp
aas
push
imul
jl
aaa
cs
mov
fsubl
or
mov
or
std
mov
insb
mov
jb
sbb
loop
mov
push
sbb
je
dec
push
jno
cli
mov
inc
fsubl
push
sbb
sti
push
leave
out
push
or
loop
xchg
xchg
std
pop
pop
jbe
repnz
add
into
ret
inc
icebp
jg
cld
inc
cmp
inc
notb
mov
jle
mulb
dec
sarb
mov
outsb
push
das
popf
pop
ja
pop
arpl
adc
adc
popa
pusha
mov
shl
cld
adc
adc
xchg
mov
pop
clc
lret
in
lret
and
mov
insl
push
lock
mov
xor
ss
ljmp
stos
inc
add
daa
ja
ljmp
mov
mov
jns
mov
inc
mov
in
sub
ret
lahf
mov
cmpsb
adc
sub
mov
es
sbb
aam
add
push
jnp
jns
les
mov
mov
lcall
pushf
imul
or
imul
in
daa
sbb
jmp
gs
sub
insl
mov
ss
test
nop
mov
xchg
cli
ret
fmuls
ret
clc
test
pop
push
push
or
stc
fs
rcrb
dec
es
and
mov
inc
test
insb
shll
sub
cmp
enter
push
cmp
mov
loope
mov
lcall
je
adc
lods
fs
mov
pusha
cmp
lret
mov
cmpsb
js
jl
xchg
or
fmull
xlat
aaa
xchg
sbb
std
pop
testb
sbbb
or
xchg
shlb
jb
bound
mov
dec
aaa
xchg
jg
dec
scas
fldl
loope
stos
push
dec
xor
fistpl
insb
cltd
mov
ljmp
enter
sub
mov
dec
mov
adc
xchg
sub
mov
adc
lea
jne
add
push
enter
sbb
pop
loopne
mov
push
jle
in
repz
sub
stos
and
pop
out
push
jl
loopne
out
shrl
lock
adc
push
adc
mov
mov
jb
or
pop
arpl
and
add
imul
dec
imul
pop
adc
mov
lcall
adc
mov
icebp
inc
push
out
jne
mov
cwtl
test
cmp
or
arpl
xchg
xchg
clc
jge
cld
mov
xor
pushf
js
xor
lret
jge
out
lret
xor
loope
test
push
or
inc
cmpsl
mov
push
push
loop
int
xor
sub
mov
loop
fdivs
aam
pop
fwait
sub
js
pop
cmp
or
popf
push
les
cli
add
cmp
enter
ljmp
push
inc
sbb
push
sahf
into
lret
cmpsb
pop
ret
sub
push
scas
fdivrs
mov
xchg
in
call
jno
repnz
in
insb
std
mov
shrb
outsl
shrb
ror
rorl
xchg
dec
cltd
inc
lods
jmp
and
push
cmpsl
stos
and
andb
dec
add
rorb
cld
pop
jo
mov
sbb
lods
or
mov
jo
jmp
mov
sti
test
test
adc
pop
cs
push
ret
and
clc
sub
sbb
repz
and
cs
add
ret
push
addb
push
shll
jge
arpl
push
mov
cmp
fsubs
inc
lcall
pop
jmp
das
into
pop
add
loope
xchg
outsb
andb
xor
add
pop
pop
fs
push
mov
dec
mov
add
mov
or
and
loop
push
stc
mov
sub
fs
sarl
in
repnz
xchg
pop
pop
adcl
fdivrs
xchg
aam
xor
ja
sbb
pushf
sub
mov
xor
mov
cs
test
outsl
pop
or
pusha
add
sub
jmp
push
jp
sub
lret
mov
mov
cmp
lcall
rcrl
sub
rep
test
sub
aas
push
push
push
lods
aaa
in
push
mov
mov
out
jl
xchg
les
pusha
int3
pop
adc
js
adc
gs
pop
push
xor
fldt
xorb
lahf
das
test
mov
inc
xchg
cmp
mov
icebp
inc
mov
mov
jns
or
xchg
sbb
jnp
movsb
sbb
and
mov
sti
out
lods
in
xchg
adc
pop
push
xor
dec
add
inc
in
push
push
xchg
aam
or
mov
movsb
movsl
out
leave
addr16
scas
gs
mov
mov
or
jne
pop
pop
xchg
mov
cmpsb
int
je
jmp
adc
pop
sub
movsl
mov
mov
jp
stos
stc
or
sub
loop
popf
push
mov
rcll
imul
add
or
jnp
dec
lods
mov
int3
sahf
jg
pop
and
fdiv
push
cmp
add
popa
leave
push
cli
cmpl
inc
or
div
iret
ret
insb
cltd
sbb
mov
fildl
inc
add
add
mov
jmpw
xor
jmp
xchg
sbb
jns
fcoml
sub
sub
movsb
pop
mov
out
sti
mov
xchg
mov
sub
mov
push
sub
mov
pop
iret
cmp
jns
push
cmp
xor
mov
pop
sub
xor
sbb
loopnew
test
xor
push
pop
in
add
sub
repz
scas
xor
je
ja
inc
sbb
jg
or
js
loopne
aam
mov
mov
and
test
repnz
ret
dec
lea
inc
ja
es
and
inc
push
sahf
sub
lds
mov
stos
outsb
cld
push
xor
mov
sahf
adc
xchg
adc
ret
es
jecxz
adc
xchg
insl
inc
pop
cmp
xlat
inc
dec
test
cmp
popl
sub
shll
ret
sub
adc
or
mov
cs
mov
xor
pop
add
sti
push
xchg
repz
jl
lds
pop
mov
daa
cmp
and
or
jnp
push
idivl
cmp
xchg
aad
loop,pn
in
arpl
data16
pop
xor
aad
push
jmp
add
shrb
xor
mov
in
cmpsl
cmpsb
xorl
cmp
shrb
push
outsl
sti
cltd
subl
sbb
mov
test
xchg
test
mov
sbb
clc
sarl
xchg
sub
inc
lds
mov
or
mov
ret
pop
mov
lret
push
jmp
xchg
cmpsl
lock
daa
lods
dec
pop
sarb
push
call
sub
push
mov
leave
iret
aaa
ret
rolb
aam
shll
mov
sbb
iret
mov
dec
inc
ljmp
fidivl
mov
fdivl
jo
shlb
pop
and
out
mov
mov
insl
push
int3
aaa
fwait
jbe
adc
xchg
in
add
sbb
stos
ss
pop
clc
sar
pushf
mov
sub
jecxz
mov
lds
addb
fadd
enter
in
add
sub
scas
out
in
xor
imul
in
pop
pop
outsb
jmp
mov
ds
jo
sub
xor
subl
in
sbb
jle
xchg
aaa
cmp
mov
test
loopne
adc
into
lahf
test
mov
das
add
xor
jl
addb
xor
adc
inc
in
gs
pusha
add
lea
jno
jbe
lcall
leave
aam
mov
xchg
pop
mov
mov
xor
xchg
mov
add
mov
add
mov
jge
xchg
test
and
cld
pusha
sbb
aaa
decl
mov
lea
loop
cmp
out
daa
adc
push
pop
rcr
pop
push
rcr
mov
and
lcall
ret
dec
cmpsb
jmp
adc
popa
xor
dec
or
push
add
xor
jle
rcll
push
aas
pop
ficoml
xor
pop
mov
data16
fidivl
iret
sbb
in
mov
cmp
cs
stos
jo
je
or
adc
mov
inc
in
test
jno
pop
cmp
or
fs
ds
out
xchg
std
rcll
xlat
sahf
mov
xor
and
push
pushf
dec
in
jnp
lret
in
dec
adc
les
lea
jb
and
gs
ss
mov
push
test
push
cmp
stos
adc
mov
pop
adc
and
popf
test
sub
mov
lahf
or
fbld
xor
ret
rcll
cmpsl
xlat
lahf
pop
mov
xchg
cmpsl
inc
aas
popf
jmp
mov
lods
jne
lret
sub
dec
out
dec
jl
shll
sbb
fwait
lods
mov
jnp
out
mov
popa
or
xchg
push
loop
jae
fld
dec
pop
xor
sub
add
xor
mov
mov
pop
cltd
mov
notl
aam
imul
test
loop
push
pop
or
sbb
fnstenv
cmp
adc
mov
and
jmp
add
ljmp
adc
cmpsb
icebp
addr16
loope
test
lock
and
ret
push
fistps
mov
into
pop
es
fmuls
mov
in
inc
sbb
mov
loope
mov
mov
inc
jno
sub
in
cli
mov
gs
inc
test
xchg
and
ss
inc
push
iret
popf
loope
cltd
sahf
cmpsl
enter
int
test
adc
jbe
rcl
pop
fcmovnu
xchg
push
mov
mov
push
pop
subb
mov
dec
ret
in
cmp
lret
fwait
int
and
mov
cltd
cmp
sub
negb
jbe
pop
add
cmp
in
cmp
iret
xchg
or
data16
adc
push
mov
mov
scas
dec
mov
stos
pop
inc
leave
movsl
jns
cmp
mov
or
xorb
mov
or
into
data16
loopne
and
jns
std
inc
lcall
dec
xor
xor
add
xchg
sti
mov
leave
fistpll
push
daa
add
das
int3
mov
sub
std
adc
and
mov
mov
and
pop
dec
test
push
cld
insl
insl
imulb
inc
cmp
testb
cltd
call
into
push
inc
dec
jle
dec
iret
sahf
pop
outsl
mov
cmc
inc
roll
mov
jecxz
in
data16
into
dec
es
push
xchg
adc
adc
into
sahf
mov
mov
fisttps
test
bound
loop
pop
jae
insl
aad
insl
or
mov
mov
sub
pop
adc
adc
in
movsb
pop
adc
jno
mov
pop
lock
dec
xor
or
mov
stos
push
int3
adcb
pusha
fs
push
inc
mov
mov
aad
sbb
xchg
std
lock
and
push
andl
sbb
dec
xor
and
je
push
rorb
push
test
mov
movsb
sbb
rol
cmpsl
fimull
out
enter
loop
mov
insl
dec
bound
pop
add
jbe
sub
mov
fimull
add
movsl
int
decb
inc
aaa
lahf
mull
sub
sub
in
pop
aad
icebp
es
hlt
adc
mov
jge
adc
pusha
mov
mov
mov
out
loop
movsb
xor
in
jl
push
or
xchg
sbb
into
mov
pusha
jns
adc
pop
loopne
icebp
ret
dec
pop
jge
sbb
dec
mov
bound
xchg
mov
pushf
xchg
je
lea
cs
lcall
push
sahf
push
jp
rcr
push
xor
mov
mov
pop
mov
inc
xchg
sbb
push
fisttpl
sub
sbb
scas
int
mov
sbb
in
or
or
xlat
ret
cs
jp
dec
leave
jecxz
ffreep
cmp
push
or
bound
xchg
arpl
mov
sub
mov
cmp
pop
adc
ds
test
rorb
cli
push
add
cld
cmc
insl
enter
dec
mov
ja
push
jb
sub
push
xor
test
cmp
test
rcrb
in
je
sub
std
xor
imul
xor
notl
xchg
or
cmpsl
jnp
dec
test
mov
pop
mov
das
popf
sbb
mov
push
xchg
and
mov
dec
popa
dec
mov
jb
ja
push
xchg
cmp
sub
ljmp
xchg
mov
test
test
pop
push
or
hlt
aad
test
nop
jmp
mov
mov
push
loopne
outsb
into
jns
add
xchg
adc
push
mov
mov
mov
inc
add
inc
lock
xor
movsb
pop
shrl
iret
mov
dec
mov
push
pop
xchg
cmp
cmp
inc
cli
inc
inc
cltd
adc
pop
push
xchg
in
fidivs
sub
jno
sbb
test
in
mov
js
int
or
mov
iret
pop
pop
loope
pop
xor
add
jbe
cmpsb
ja
push
daa
jo
and
adc
inc
xchg
hlt
jmp
movsl
adc
leave
gs
push
push
pusha
cmpsb
ja
mov
xchg
in
neg
and
mov
stc
pop
add
cs
adc
mov
adc
adc
add
imul
xchg
push
xchg
sti
lods
enter
aad
ljmp
mov
sbb
bound
adc
lds
dec
push
fists
pop
jno
pop
sbbb
dec
inc
ficompl
repnz
push
loopne
mov
jmp
sahf
xchg
xchg
mull
push
js
in
sub
out
mov
arpl
xchg
fwait
outsl
cmp
mov
cmp
push
je
mov
dec
incb
jae
mov
pusha
insl
iret
push
jbe
xchg
fistpl
xchg
sbb
jmp
addr16
fcom
xchg
stos
xchg
notl
mov
xchg
lret
xor
out
shll
pusha
add
jge
or
fs
int3
xor
pop
and
dec
sbb
and
lret
jge
fistpl
mov
dec
add
push
idivb
aam
cmpsb
add
jne
xchg
test
and
push
es
popf
scas
jnp
jmp
cmpsl
pop
enter
mov
xchg
inc
cmc
sahf
inc
ja
pop
rol
or
mov
dec
lcall
rcrb
nop
or
jbe
pop
xor
cli
jg
jnp
mov
xchg
and
call
pushf
cli
leave
stos
dec
mov
lock
push
xchg
jno
and
sbb
mov
pop
fst
dec
stc
push
and
std
daa
imul
outsl
shl
rcr
cli
push
mov
sbb
xchg
jl
xchg
jns
xchg
mov
adc
and
ljmp
fwait
mov
sub
lock
sub
ret
out
adc
rorb
hlt
pop
and
jg
imul
cmp
push
lds
pop
ret
ja
push
dec
mov
fldenv
sub
ljmp
jnp
mov
fstps
push
xlat
mov
in
fdivs
add
out
lahf
sub
dec
inc
dec
add
lds
xlat
shlb
fld
fcoml
fnstenv
cmp
cmp
sahf
mov
pushf
mov
insb
mov
pop
xchg
scas
inc
mov
push
push
lods
insl
jbe
lahf
dec
dec
and
jecxz
mov
push
add
pop
sbbb
add
mov
movsl
add
mov
mov
xchg
jns
rorb
cmp
sub
push
cli
in
jae
dec
inc
xchg
cmp
and
inc
rcrb
pop
sbb
mov
mov
aad
movsl
hlt
stos
ret
mov
cmp
xchg
push
mov
lods
inc
jge
mov
rcrl
sub
jmp
and
sub
inc
mov
int
loop
sub
test
dec
cmc
loopne
pushf
mov
and
mov
add
clc
push
push
outsl
jne
in
aam
outsb
repz
jmp
mov
lcall
sbb
and
ljmp
scas
cmc
popa
incl
jae
fsubrs
xor
mov
and
push
jl
cmp
fldcw
pusha
jmp
xlat
xor
mov
loope
loope
lret
je
sbb
xor
lahf
ret
adc
sbb
aam
xchg
std
nop
mov
cs
lea
xlat
int
in
sub
sbb
lock
cmp
hlt
mov
sbb
sahf
outsb
dec
movsl
push
mov
xor
push
ds
xchg
mov
mov
ret
mov
push
and
ret
lfs
mov
cltd
fnstcw
and
and
push
pop
and
jns
les
mov
mov
imul
pusha
movsbl
cwtl
lcall
pushf
repz
loope
sbb
repz
popa
xchg
orl
out
mov
leave
mov
xchg
mov
repz
mov
imul
icebp
js
adc
xchg
and
mov
imul
dec
cwtl
aaa
int3
movsl
loopne
cmp
pop
pop
jo
jg
lahf
fsubs
shll
in
pushf
out
or
test
lahf
hlt
inc
jmp
xor
or
lret
sbb
add
sti
jmp
cmp
fsubl
jbe
je
adc
scas
cmpsl
icebp
add
outsb
iret
lahf
mov
mov
mov
push
loop
xchg
test
pop
out
mov
xchg
mov
sub
jl
fnstsw
mov
repz
mov
out
popf
pusha
mov
xchg
inc
sub
pause
cmp
mov
fsubrl
mov
dec
pop
push
dec
addl
popa
dec
packssdw
xor
int3
mov
xor
pop
aad
insl
mov
insb
add
mov
xor
mov
xor
mov
negl
test
stos
dec
push
or
xor
mov
jbe
push
std
repz
dec
jl
test
add
mov
jle
out
jecxz
jne
fwait
ja
std
mov
or
nop
andb
sub
mov
lods
loop
mov
push
pop
rcl
lcall
sub
cmpsb
clc
loope
incl
add
xchg
sahf
push
mov
std
aam
in
push
adc
imul
pinsrw
mov
in
dec
js
inc
adc
cltd
sbb
stos
outsb
dec
jmp
cmp
or
insb
or
das
les
into
push
dec
push
pop
mov
fisubrs
pop
or
cli
mov
mov
jae,pn
xchg
rcl
mov
add
pop
divb
add
sbb
inc
mov
outsb
mov
test
cmp
lret
jo
jnp
sub
popa
pop
sahf
mov
mov
xchg
ljmp
inc
sub
in
or
cli
xchg
stos
dec
outsl
inc
dec
arpl
mov
inc
cmp
push
dec
add
pop
pcmpeqd
add
cmpl
bound
scas
and
shl
das
xchg
test
adc
testl
jmp
stc
xor
lock
negl
mov
lcall
cmp
aad
sub
test
inc
rcll
jbe
sbb
ds
sbb
dec
mov
js
fldenv
pop
in
cs
cld
loopne
and
imul
fdivs
and
mov
mov
pop
cli
or
sbb
movsl
mov
out
mov
repnz
bound
pop
push
dec
mov
fcomip
sbb
scas
jge
nop
cld
and
nop
mov
into
cmp
repz
test
push
mov
dec
jnp
loopne
stos
and
imul
mov
jae
pushf
popa
xor
nop
out
scas
jno
sbb
ret
mov
lods
aas
pop
in
pop
sub
jmp
movsb
pop
pop
push
adc
aaa
dec
cmp
push
je
mov
ja
xchg
push
mov
add
pop
scas
out
push
filds
jle
push
mov
js
pop
push
popf
int
sbb
inc
sbb
mov
ret
mov
adc
dec
mov
jns
jne,pt
mov
pop
pop
jae
cmpsl
movsl
mov
pop
cmp
fstpl
shll
pusha
out
lahf
fs
add
cmp
aad
pop
scas
pusha
daa
sbbb
jmp
xchg
mov
cmp
aas
and
lret
mov
fadd
es
push
in
fisubs
notl
aad
jae
or
movsl
cltd
adc
fwait
sub
lea
stc
notb
jbe
roll
xchg
pop
aam
ja
xchg
add
pop
inc
lcall
movsb
nop
ds
sub
cmp
sbb
stos
pop
fs
decb
cwtl
jo
sub
dec
cli
nop
data16
out
cmpsb
aaa
push
and
sahf
xchg
mov
nop
cli
xchg
roll
dec
cwtl
sbb
neg
lods
xchg
cmc
loopne
add
xor
fidivs
dec
sarb
pop
popa
mov
xchg
inc
insb
fcompl
mov
fldcw
loope
test
test
es
inc
inc
hlt
ficoml
push
nop
lret
jmp
xlat
dec
dec
xchg
jnp
and
stos
test
ss
imul
xchg
push
in
insl
xor
jecxz
dec
fdivrs
ret
mov
out
sub
sub
in
xor
or
repz
mov
cld
les
std
sub
cmpsl
testb
outsl
out
push
les
jp
test
push
aad
aas
mov
push
stc
dec
cmp
cmp
cmc
ret
ds
cs
pop
repnz
push
mov
mov
push
and
aam
add
ret
jmp
test
sbb
adc
in
add
jle
lahf
pop
sbb
rcl
adc
pop
leave
push
icebp
imul
movsl
ret
gs
bound
jo
stos
push
sbbl
gs
adc
aad
pusha
mov
jg
push
pushf
or
jmp
dec
test
jno
aam
jnp
jnp
mov
lds
xor
sub
nop
int
or
fnstcw
mov
test
nop
inc
js
loop
mov
into
mov
sahf
or
xchg
popf
jae
mov
or
fdivr
pop
dec
jb
rcr
push
xor
mov
lods
adc
gs
mov
rolb
push
push
out
mov
inc
and
lret
les
cwtl
adc
call
dec
xor
jmp
js
cltd
jg
data16
jp
or
dec
lret
scas
xchg
js
outsb
dec
neg
fcoms
pop
adcl
jl
vandnps
sbb
push
mov
mov
and
out
adc
mov
sbb
sbb
mov
xchg
fisttpl
cwtl
cmp
adc
jbe
div
mov
pop
mov
jg
mov
mov
adc
dec
or
sbb
cmc
jae
cmpsl
sbb
int3
mov
xchg
test
add
aam
dec
inc
jno
jmp
mov
pop
dec
cmp
mov
cs
stc
mov
sub
mov
inc
das
movsb
jecxz
push
lahf
lea
sbb
jbe
outsb
test
loope
cmc
sub
adc
mov
lea
iret
inc
adc
adcb
out
cs
jb
push
ja
les
adc
in
or
loope
lret
stos
mov
cmp
xor
pushf
inc
dec
imul
cmpsl
or
adc
ja
es
xchg
movsb
sub
daa
sbb
adc
xor
mov
std
mov
pop
and
orb
and
aas
into
rcrl
push
subl
jno
test
cli
testl
and
fstl
jp
stos
out
into
add
cmp
cmp
lahf
pop
push
decl
inc
push
inc
mov
adc
add
xchg
inc
mov
add
xchg
adcl
hlt
aas
inc
jmp
ret
xchg
push
pop
sahf
jno
dec
sar
jbe
jo
xor
mov
jg
mov
sub
movsb
mov
andb
xchg
pop
lock
pop
rorb
stc
xor
sub
inc
push
and
fbstp
imul
loopne
ja
sbb
and
lcall
sbb
or
popl
push
cwtl
in
xor
or
shrl
mov
negl
imul
mov
push
pop
jnp
mov
cmp
push
lret
scas
pop
lock
or
and
arpl
in
inc
push
cmp
push
or
shll
mov
jno
test
adc
dec
jp
lds
cmp
push
mov
sarb
xor
adc
dec
je
jo
ss
dec
out
dec
dec
lret
pop
jge
xor
add
test
push
sub
sarb
pop
call
dec
sub
sub
outsl
cwtl
outsl
cmp
add
fimull
adcb
cmp
and
fcomp
xor
fcompl
push
imul
ret
jne
sub
pusha
mov
aad
js
scas
jge
fmull
mov
adc
sbb
add
inc
or
mov
xchg
shrl
insb
ds
add
sahf
jmp
fnstsw
cmpsb
int
data16
js
xchg
jne
aam
jmp
jae
sbb
or
in
xchg
dec
shll
ja
movsl
mov
int3
pop
pushf
xchg
mov
pop
mov
lods
inc
in
popf
cmp
ret
xchg
movsl
adc
xchg
mov
mov
nop
push
xchg
cli
mul
ja
shrb
mov
and
out
mov
add
scas
je
insl
inc
ljmp
bound
out
dec
insb
fwait
int
add
or
inc
jmp
push
or
hlt
adcb
fs
or
xor
adc
out
or
stos
lahf
inc
int3
shrb
or
mov
jg
jge
roll
js
mov
ja
out
adc
divl
repnz
mov
and
push
xor
add
cli
roll
mov
or
add
icebp
push
push
adc
mov
fimull
cld
out
mov
inc
jns
addr16
dec
jg
aad
xchg
dec
inc
sarl
cmp
sub
lea
xchg
mov
cmpb
mov
popf
jns
insb
mov
push
cmpsl
inc
mov
sbb
icebp
xor
cli
lods
jg
loopew
cmp
add
test
xor
subb
push
pop
aaa
xor
xlat
push
push
sbb
test
bnd
push
insl
sti
pop
sub
mov
pop
sub
xchg
xchg
mov
mov
jb
fs
aaa
or
cld
icebp
shl
mov
out
push
inc
adc
mov
inc
sarl
sarb
mov
sbb
mov
push
cld
mov
and
sbb
movhlps
test
and
neg
out
add
adc
push
sbb
xchg
addb
mov
mov
xor
add
cmp
mov
je
cmp
pop
xchg
push
loope
jb
adcl
push
xor
mov
jbe
push
cmp
adcb
pop
jbe
cli
xor
in
shlb
mov
cmpsb
cmp
shll
mov
sub
push
and
dec
jo
sub
mov
fidivrl
mov
xlat
fsub
movsl
xchg
rcrb
mov
bnd
lret
mov
nop
repz
ss
out
pop
xchg
cmpsl
loope
or
popf
iret
aad
and
adc
xchg
data16
inc
jg
add
lret
mov
out
ret
adc
jno
test
jno
mov
lret
stos
dec
movsl
add
fcmovne
jge
push
sbb
loopne
outsl
xor
mov
jge
xchg
lock
popf
dec
sbb
pusha
mov
mov
push
mov
pop
dec
shll
cmp
xchg
aad
fstpt
cmpl
sbb
and
sbb
sbb
montmul
cmpsb
inc
ror
sub
out
addb
mov
imul
lea
and
push
push
rcrb
scas
insb
ljmp
inc
jb
and
or
rolb
jge
sbbb
insb
xor
rclb
pop
bound
xor
inc
xor
mov
addr16
adc
cmpsb
push
xor
xchg
push
cmp
or
into
cmp
mov
xor
mov
loop
push
push
xchg
in
into
mov
or
jmp
push
push
push
lds
in
mov
adcl
out
pop
and
pop
xlat
pop
repz
dec
sbb
mov
cmpxchg
pop
mov
in
insb
aas
fwait
nop
xchg
fstps
pusha
addr16
cmpsb
and
sbb
lods
sub
cltd
andb
dec
dec
icebp
test
cmpsl
sti
faddp
dec
cmp
ficomps
iret
jae
test
gs
xchg
inc
xchg
fwait
jl
das
inc
js
in
jno
and
aas
add
add
dec
cmp
cmpsb
jmp
jmp
push
stos
xor
jb
sub
mov
jmp
inc
and
les
jge
xchg
jnp
cld
mov
roll
xor
nop
shlb
loopne
ror
leave
movsb
stos
adc
sti
outsl
inc
movsb
and
hlt
pop
inc
in
mov
lods
cmp
dec
lret
icebp
mov
xchg
lods
xor
add
push
mov
pop
mov
push
imul
lahf
enter
fimull
xor
mov
fbld
dec
sahf
push
fadds
jne
dec
rcll
or
aas
insl
jl
inc
mov
outsl
xlat
adc
dec
xchg
into
or
call
sbbl
cltd
popf
jp
test
loop
fs
xchg
mov
mov
sti
inc
popa
push
incb
or
push
mov
sbb
int
shl
rcl
out
loopne
cld
and
xor
std
clc
fs
jmp
pop
scas
sbb
or
xor
ret
enter
sub
rcl
inc
stos
push
xchg
xchg
or
test
rep
dec
mov
inc
xor
fmuls
pusha
in
sub
mov
add
ds
sub
rcll
pop
es
mov
mov
cmp
push
dec
jne
and
jle
mov
mov
mov
xor
jge
sub
or
mov
xor
arpl
sub
and
mov
in
and
dec
enter
sbb
xchg
ja
mov
jecxz
daa
rcrl
push
or
stc
sbb
pop
das
out
jg
inc
cmpsl
lret
lock
mov
nop
jae
pop
test
ja
rcrl
out
gs
into
loopne
mov
mov
les
mov
punpcklwd
clc
xchg
lahf
push
inc
sbb
ljmp
or
popa
cmpsb
loop
sbbl
xlat
arpl
shrl
xchg
sahf
xchg
inc
mov
jns
lret
push
adc
jle
stos
lock
mov
add
mov
shll
cmp
inc
enter
jnp
cmp
ret
sahf
stos
scas
push
outsb
push
pop
cs
cld
insl
scas
pop
leave
pop
dec
dec
cmpsb
ficoms
in
and
mov
ds
mov
std
and
or
inc
rolb
movl
push
mov
adc
mov
add
dec
fldl
daa
mov
fsubr
test
sbb
jg
or
push
loop
in
in
ret
jge
adc
cld
repnz
mov
add
shr
push
mov
mov
or
stc
shrb
pusha
or
fisttpll
pop
jb
jae
fdivrp
or
add
or
inc
repz
cmp
fldl
push
out
mov
and
scas
lods
rorb
cmp
and
xchg
push
leave
mov
sub
in
mov
inc
dec
inc
popf
cmpl
rcrl
je
gs
mov
pop
subb
call
push
sahf
out
pop
xor
cli
sub
aaa
call
ja
stos
or
fs
ljmp
mov
mov
and
shrl
es
fists
js
adc
push
pop
sub
xor
add
in
je
and
pop
sbb
arpl
aad
fisubl
jecxz
and
jp
lods
cli
shrl
mov
adc
push
push
aad
movsl
ja
mov
cmp
pop
mov
push
pop
cli
inc
cmp
push
mov
cmpsl
aam
test
pusha
mov
out
stos
outsl
out
leave
or
ret
clc
mov
aaa
fsubrl
int
jne
xor
repnz
push
cltd
stos
ret
mov
jne
aam
js
leave
pop
imul
fnstcw
insl
or
xor
xor
pop
pushf
push
mov
jg
mov
lret
enter
enter
push
push
or
pop
dec
or
sub
popa
cmp
xor
jnp
not
mov
inc
popa
enter
fstp
and
jl
jle
test
scas
pop
xchg
sub
mov
ret
daa
clc
cmp
mov
sbbl
pop
jo
xchg
in
push
push
es
pop
data16
loope
jb
xor
sub
pusha
sbb
cmp
sbb
push
loope
lea
cmc
add
js
xor
fists
add
mov
lds
sub
and
rorl
dec
jae
shll
lods
mov
pusha
push
nop
gs
test
pushf
inc
mov
xchg
dec
mov
and
mov
cmpsb
mov
insb
cmp
add
mov
icebp
sti
outsl
or
pusha
lcall
test
xchg
push
sahf
inc
ret
mov
pop
enter
inc
add
aam
gs
pop
push
jno
and
add
ret
lret
adc
cli
lods
out
sbb
xchg
pop
xchg
mov
and
sahf
xchg
pop
cltd
es
insb
mov
push
pusha
sbb
mov
jmp
lahf
test
jae
add
or
lods
lahf
xchg
or
cmp
sub
push
pop
dec
dec
sub
or
cmovo
pop
add
cmp
mov
jle
mov
cmp
or
mov
inc
std
sbb
pop
lret
in
fsubrl
cmpsb
push
mov
or
push
sarb
popf
rol
dec
test
dec
cli
in
sub
fwait
lods
sub
pop
into
stos
adc
sti
jno
xchg
xor
pop
fs
xor
lds
in
arpl
or
out
or
xor
movsb
inc
outsl
in
sbb
scas
js
push
scas
add
or
insb
jne
pop
mov
pop
push
call
add
inc
out
push
mov
push
add
repz
mov
mov
pop
aas
jmp
mov
pusha
cmp
in
stos
pop
dec
cmp
and
mov
dec
jno
mov
aam
loope
pop
push
inc
inc
arpl
decl
lods
dec
xchg
jo
aaa
shl
cwtl
push
in
jns
cmp
mov
mov
dec
fidivl
aad
or
imul
sbb
xor
xor
sub
pop
xchg
sbb
aaa
popa
jnp
or
testb
fs
movsl
or
lret
ret
out
call
xchg
loope
sbb
stc
cmp
pop
mov
ret
add
ficoml
repnz
push
loope
psrld
in
mov
lds
cmp
stc
cmp
mov
enter
push
add
test
lret
outsb
push
test
cli
insb
adc
pop
pusha
shll
test
dec
inc
pop
fistps
cmc
in
cmp
fldl
insl
xlat
mov
addl
shl
sahf
out
mov
or
stc
mov
jecxz
pop
out
in
stc
nop
bound
push
xchg
pop
test
push
jnp
lahf
mov
jl
aaa
jmp
sub
lret
xlat
adc
cltd
movsb
dec
jl
orl
or
std
out
mov
push
test
jno
or
sarb
jb
ret
test
lds
mov
xchg
xor
arpl
push
orb
test
into
mov
pop
dec
mov
pop
push
mov
mov
fstpl
in
or
fistpll
mov
xor
repnz
xchg
xor
sbb
adc
sbb
test
xlat
sbb
cmpsl
fidivrs
lock
stos
adc
rclb
nop
cltd
sbb
mov
mov
in
clc
pusha
fbstp
xor
sti
mov
ja,pt
xchg
iret
out
ljmp
test
rorl
sbb
cwtl
or
xor
jne
adc
jle
les
movsl
mov
pushf
scas
outsl
std
gs
into
sub
lret
and
mov
add
push
push
pop
lea
js
pushf
mov
mov
fdivrp
scas
and
sbb
mov
xchg
inc
sub
ja
nop
rcrb
std
xchg
fidivrl
cltd
jno
mov
lea
jne
cmpsl
sub
stos
int
rcr
dec
andb
cmp
fs
imul
mov
testb
test
jns
push
arpl
inc
nop
adc
jne
rorl
rcrb
jnp
data16
xchg
je
addr16
incb
cmpsb
xor
adc
lret
add
shl
movups
or
add
xchg
pop
aam
je
mull
mov
fwait
adc
enter
scas
rcrb
xor
cld
cmp
xor
nop
or
mov
loop
or
sahf
imul
xchg
outsl
xor
std
fdivrs
fs
xchg
push
jne
aas
mov
subb
inc
dec
andl
xor
loop
mov
sbb
adc
cmp
sub
sub
jmp
bound
sti
mov
and
lods
and
cmp
leave
xchg
in
ss
xchg
cmpsb
sarb
xor
shrb
roll
jae
aaa
push
push
jg
mov
sbb
mov
sub
inc
rcrb
jne
rcl
sbb
xchg
mov
lods
and
sub
add
cmp
insb
adc
cmpsl
int3
or
xor
mov
dec
cltd
jle
pop
lods
xchg
jns
push
data16
addr16
shrw
stc
inc
fildll
data16
xchg
mov
push
xor
sbb
bound
dec
mov
inc
imul
sete
sub
js
pop
stos
sub
add
mov
mov
dec
lldt
inc
enter
outsb
push
aad
test
pushf
rcrl
sbbl
nop
out
pop
mov
mov
cmpsb
jecxz
jp
xchg
jecxz
cmc
push
push
sbb
pop
cmp
cmp
xchg
inc
lcall
and
dec
fs
xchg
movsl
jge
test
xor
sub
sahf
fidivrl
or
nop
int
inc
adc
sub
shl
sbb
mull
pop
mov
jae
cmp
scas
jae
push
xchg
cmpsb
ljmp
in
jns
cmc
cs
pop
push
outsb
fisttps
xor
insl
jmp
cmp
jmp
sbb
adc
pop
aad
popa
xchg
mov
subb
or
cwtl
sub
jns
shll
insl
xor
imul
dec
cli
std
mov
or
stos
dec
sbb
cmp
repnz
movsb
andl
imul
ds
cs
cmp
inc
sbb
jno
nop
push
inc
jge
xchg
jl
cmpsl
je
sbb
xlat
les
inc
adc
subb
int
mov
sbb
push
sahf
pop
or
fildl
scas
mov
mov
pushf
imul
cld
sub
pop
xchg
popa
fwait
xchg
push
xor
gs
int3
sarb
xchg
jg
xchg
mov
movsb
out
pop
pop
pop
sbb
xlat
insl
add
divb
adc
in
ret
adc
mov
pop
out
pop
mov
sbb
out
fprem1
movsb
adcl
jb
xor
sub
scas
fnstenv
jge
cli
lea
call
mov
insb
in
push
out
inc
repz
subl
sub
mov
stos
jnp
cmpsl
dec
adc
pop
in
movsb
addr16
jl
stc
out
mov
fistps
mov
and
arpl
daa
add
fcompl
or
sub
add
repnz
cmpsb
ret
icebp
fidivrs
mov
pop
lcall
inc
je
das
inc
call
leave
mov
inc
insl
scas
cmpsb
out
jp
sbbb
fisubl
stos
add
mov
les
dec
hlt
dec
mov
insb
pop
pop
adc
out
ja
inc
xchg
xchg
pushf
sbb
les
xor
loop
dec
cli
jns
adc
xchg
fistpll
shlb
xor
popa
xor
pop
pop
push
inc
cs
push
xor
aaa
int
dec
scas
and
inc
dec
bound
pop
stc
pop
cli
hlt
out
inc
dec
loope
repnz
je
or
addl
xchg
gs
out
push
or
cwtl
jl
dec
aas
ret
adc
add
push
nop
sub
push
jae
push
repnz
cmc
js
lds
pusha
out
lods
pushf
fstps
ret
scas
es
std
inc
movsb
dec
or
pop
pop
and
push
pop
hlt
cmp
lcall
fidivrl
or
pusha
mov
pop
aam
push
and
in
jp
and
rclb
sub
movsb
push
inc
and
stc
scas
les
xor
pop
mov
push
out
adc
add
mov
fsubs
js
jle
push
mov
add
add
sub
jmp
fnstsw
inc
mov
fimuls
or
pop
and
iret
clc
in
xor
inc
out
mov
out
jno
jle
out
in
jp
mov
out
jnp
imul
scas
movsb
mov
adc
pop
cmp
lcall
cmp
rorb
stos
add
mov
or
jmp
mov
outsl
clc
pop
jmp
sub
jecxz
sbb
xor
inc
outsl
dec
in
pushl
and
dec
pop
es
stc
dec
cli
and
add
add
rolb
mov
test
aas
in
xor
sub
shlb
std
add
push
call
fdivrs
cltd
cmpb
xor
ljmp
not
mov
mov
aas
mov
cmp
push
loop
leave
xchg
lret
mov
stos
xor
sbb
in
test
ds
shll
adc
clc
aas
popf
push
jmp
xchg
xor
insb
sbbb
es
sbb
jb
dec
shrl
dec
adc
xchg
adc
lahf
xor
imul
inc
add
and
pop
sahf
xor
mov
rorb
loop
xchg
in
cltd
lret
cmp
jno
lods
jge
shl
push
es
jae
sbb
xchg
lahf
xchg
inc
push
sbb
movaps
icebp
mov
xor
das
fistpll
shrl
rolb
int
xchg
push
mov
imul
push
imul
mov
sbb
mov
xor
cs
fdiv
notb
test
xchg
mov
data16
negb
test
enter
push
loope
aam
enter
movsl
mov
fwait
adc
mov
and
ss
sub
jb
dec
pop
inc
lcall
jae
mov
inc
movb
lret
call
es
xchg
jp
mov
jmp
lods
add
test
add
cli
test
ret
movsl
cmpsb
andb
int
xchg
pop
push
pop
cwtl
mov
sub
jp
mov
sbb
xchg
into
mov
rcrb
mov
mov
mov
push
loopne
ret
cmp
mov
cmp
aam
pop
or
jo
sub
movsb
lods
jns
mov
je
test
popf
repz
mov
push
outsb
pop
mov
lea
fldenv
filds
movsb
jl
sbb
loop
push
sub
cli
js
movsb
lret
aaa
xor
mov
add
push
mov
fdivrl
sti
cmp
fsubs
sbb
sti
in
push
push
xchg
ds
stc
add
mov
fdivr
cmp
sbb
bound
add
dec
out
out
push
jge
cwtl
and
fs
cmp
fwait
mov
and
pushf
mov
xor
push
daa
jge
mov
test
lds
jbe
sub
rolb
aad
and
gs
mov
mov
fdivrl
adc
dec
mov
lods
lods
fs
mov
jp
sub
mov
xor
xorb
inc
jmp
jg
loop
arpl
mov
frstor
rorb
les
push
jmp
int3
xchg
sbb
imul
xor
mov
mov
add
stos
outsl
mov
test
mov
dec
xchg
adc
sti
sub
jns
mov
stos
dec
pushf
dec
cmovle
adc
push
out
sbb
xchg
adc
dec
movsl
mov
mov
mov
xchg
js
clc
push
test
pop
sbb
rorb
dec
mov
rcrl
shrb
cwtl
dec
and
hlt
add
lret
stc
movb
jl
inc
mov
in
mov
dec
push
or
or
je
ja
and
loop
push
iret
mov
pop
xchg
or
loopne
std
rcr
je
stc
add
mov
jb
pop
inc
and
nop
xchg
es
sbb
and
loopne
lret
aas
mov
and
push
incb
push
push
popf
addr16
mov
mull
mov
inc
dec
jbe
mov
ss
mov
sti
aam
xor
pop
repz
popf
out
arpl
loop
cmp
push
enter
mov
imul
cmp
adc
loop
rcrl
repz
not
imul
loopne
enter
cmp
inc
xchg
ds
sbb
daa
sub
ret
rcr
std
cmp
mov
mov
mov
or
popl
push
imull
mov
aad
pop
or
iret
daa
and
insb
xchg
push
aam
out
inc
push
clc
ds
xorb
test
jns
nop
push
inc
sub
imul
push
cld
ljmp
inc
in
testb
scas
cwtl
sub
fnsave
lods
dec
aaa
xchg
mov
mov
dec
push
test
jb
and
xlat
jle
jns
aad
rclb
lods
cwtl
or
sub
outsl
xchg
aas
fildll
outsb
ss
xor
clc
iret
jecxz
call
or
pushf
mov
out
mov
pop
repnz
and
imul
in
test
add
lods
push
sbb
jbe
sbb
cli
es
aas
cli
sarb
add
sub
cwtl
movsb
ja
dec
ss
cmpl
xchg
sub
fdivl
out
mov
and
xchg
out
idiv
or
repnz
pop
insl
sti
cmp
insb
in
movsb
push
pop
pop
or
dec
in
cmpl
into
sub
xor
pop
les
dec
cmp
dec
dec
gs
insb
adc
cmc
xchg
in
scas
mov
imul
cmpsl
pop
xor
sahf
push
mov
add
xchg
shl
adc
pushf
push
cmp
movsb
mov
cmc
cmp
dec
or
or
add
mov
mov
enter
pop
xor
xchg
repnz
fistpl
mov
sub
repnz
lea
fisubrs
dec
scas
adc
adc
daa
add
sahf
adc
rcr
addl
adc
pop
in
push
adc
loop
fucomi
push
xor
fidivrl
and
dec
jp
pop
fcoms
mov
xor
popl
out
test
mov
push
cmp
cmpsl
inc
orl
test
insl
xchg
jge
xchg
push
sbb
repz
loopne
push
insl
lds
pop
hlt
lods
push
inc
int
loope
fcmove
ljmp
dec
aaa
fsubrs
iret
dec
faddl
clc
push
pop
sbb
sbb
sti
cwtl
cmp
insl
ror
push
cmc
hlt
addr16
popa
pop
dec
loop
iret
and
outsb
xor
xor
les
in
idivb
imul
and
pop
jecxz
lea
dec
sub
inc
sub
mov
test
xor
pop
es
pop
add
pop
mov
adc
test
mov
movsb
stos
test
push
lcall
push
in
addl
jo
in
sub
les
and
flds
add
xchg
js
push
scas
mov
mov
int
mov
pusha
dec
jecxz
inc
mov
inc
sbb
sahf
rcl
out
dec
jne
hlt
mov
adc
scas
movsb
push
out
xor
add
adc
in
jb
inc
inc
jmp
out
mov
stos
insb
push
popa
lret
sub
add
xor
adc
in
dec
test
inc
xor
cwtl
js
mov
lcall
insb
fwait
push
imull
or
adc
insb
fsts
in
leave
mov
inc
push
mov
std
mov
xor
and
call
inc
adc
inc
js
inc
and
idivb
mov
push
sub
fidivl
mov
xchg
scas
xchg
push
aas
daa
popa
cmp
mov
xor
push
insb
insb
xchg
xchg
outsb
int
imul
xchg
sub
lret
mov
adc
jno
out
into
mov
cmpsb
dec
lds
add
rorb
adc
pusha
jb
daa
push
mov
sub
xchg
add
sbb
fwait
pop
fnstcw
lahf
or
sub
pop
fildl
aad
test
inc
cs
imul
test
cmova
and
add
jmp
and
lods
int
rorb
daa
fimull
dec
pop
push
aaa
adc
mov
and
dec
test
std
sub
push
popa
addr16
dec
loope
mov
test
scas
bound
fnstcw
sahf
dec
mov
lahf
mov
loop
inc
sub
ja
xor
push
test
and
in
movsl
cmp
data16
jno
int
xchg
and
mov
jmp
mov
fildll
mov
cltd
in
xor
lret
jb
jb
jbe
rcrb
nop
or
pop
inc
and
or
xchg
adc
pushf
fcmovnu
cli
lret
inc
adc
cltd
mov
mov
repz
lods
scas
ss
lods
adc
fisubs
mov
mov
loop
scas
daa
clc
mov
iret
dec
mov
jmp
jl
sub
sets
cld
icebp
push
out
je
mov
mulb
inc
movsb
js
sbb
push
pushw
sbbb
cli
rorb
fwait
sub
lahf
pop
sti
pop
and
jb
cwtl
js
jge
jge
scas
xor
jnp
ret
shr
inc
sbb
xor
fmull
mov
and
mov
push
pop
sub
or
or
adc
xchg
sbb
clc
jno
pusha
cmp
and
inc
in
and
sbb
data16
fimuls
fisubrl
inc
clc
jnp
nop
sarb
mov
cmp
roll
inc
xor
nop
sbb
out
mov
and
xlat
out
repnz
mov
cmp
cmp
iretw
inc
dec
mov
aaa
mov
sub
sbb
sti
dec
adc
inc
aas
stos
cmp
sub
jbe
cli
mov
test
jg
sbb
xor
xchg
fwait
sub
cmp
and
cltd
or
cmp
mov
in
and
mov
out
popa
push
insl
mov
mov
push
adc
cmp
cmp
faddl
scas
adc
sbbb
scas
aad
sub
xchg
xchg
jecxz
lods
cmp
xchg
cmp
or
rcrl
test
sbb
inc
pushf
cmp
and
push
jmp
or
icebp
and
push
inc
out
test
or
ja
sub
cmp
ror
adc
hlt
jo
mov
and
mov
lods
cmp
sbb
imul
icebp
xchg
cld
insb
das
inc
enter
or
adc
add
push
lahf
jns
xor
loope
fs
loopne
inc
push
aad
mov
pushf
cmp
bound
cltd
add
testb
add
in
jmp
cltd
inc
adc
scas
pushf
jg
inc
or
mov
das
ljmp
and
int
or
ljmp
loop
xor
inc
inc
ljmp
push
pop
pop
dec
jmp
pop
jnp
and
cmp
mov
mov
orb
cmp
mov
push
gs
cmp
sbb
out
xchg
gs
cmp
outsl
ret
sti
sti
sbb
push
out
cmp
or
inc
scas
jno
xchg
mov
mov
dec
mov
fdiv
mov
pop
push
cli
push
int
das
or
sti
push
and
push
push
jp
stos
dec
and
sub
dec
inc
sbb
and
xchg
mov
fstl
adc
cmp
cs
je
or
and
inc
movsb
mov
cmpsl
mov
inc
pop
xchg
sub
pop
pop
or
sahf
aas
ficomps
dec
mov
sbbb
inc
xchg
aas
stc
std
sbbb
push
adc
pop
mov
cmp
in
cmpb
aaa
mov
leave
xchg
xchg
mov
out
cmp
lods
mov
sar
mov
push
or
test
lahf
orb
and
or
cmp
lcall
dec
adcl
lea
out
sahf
daa
mov
pop
sbb
xlat
and
lods
cld
mov
mov
aam
sti
xchg
dec
xor
ss
std
or
sub
in
sahf
mov
les
call
inc
dec
jecxz
mov
and
push
sub
cmpsb
mov
ds
or
outsb
stos
xor
mov
dec
mov
pushf
outsl
lcall
sub
mov
int3
loop
pop
cmpsl
add
cmpsb
dec
xchg
inc
mov
sub
add
rcr
push
sahf
push
push
sbb
push
or
notl
popa
stc
movsl
push
jo
repz
sbbl
inc
in
in
bound
inc
bound
xchg
push
sti
xchg
mov
jae
iret
or
push
rclb
rorb
adc
pop
sti
lea
and
std
fcomi
mov
mov
icebp
ret
cmp
stos
sarl
enter
push
and
ja
jne
icebp
aas
dec
push
and
pop
lret
jo
es
in
ds
and
xor
in
mov
stc
shl
mov
cmp
imul
and
mov
mov
sub
mov
out
out
mov
ret
and
imul
push
mov
std
fnsave
xchg
sub
push
pop
les
adc
jbe
and
bound
cmp
ret
dec
ljmp
cmp
sti
lcall
push
push
fcompl
sbb
xor
and
jecxz
dec
loopne
mov
das
scas
push
stos
pushf
std
fidivs
or
cmc
add
xchg
rorl
ds
sbbb
cs
sahf
pop
nop
push
out
loopne
int
pushf
pop
push
rcrl
pop
out
sbb
ss
fnstsw
scas
nop
ror
imul
fdivrl
mov
fwait
and
jp
xor
push
ljmp
sub
adc
cmp
jae
imul
push
mov
aam
and
sbb
jbe
sub
gs
pop
out
add
xlat
nop
gs
xor
sub
repnz
inc
shr
stc
push
push
adc
lret
jl
dec
icebp
out
hlt
sbb
fs
inc
jb
out
aad
arpl
shr
cmp
xchg
popf
mov
sbb
adc
test
push
jg
sub
js
in
jg
in
sub
clc
add
rcrl
negl
xchg
jo
adc
adc
iret
lret
jmp
cmp
jnp
rcrb
inc
jne
push
cmp
jno
loopne
push
movsl
in
test
inc
push
pushf
std
andl
seto
pop
adc
dec
mov
and
mov
sbb
rolb
popa
rcr
jnp
cmpsb
push
jl
jns
mov
mov
lahf
mov
ret
push
adc
jp
std
in
mov
sub
mov
or
out
orb
push
and
mov
lahf
inc
in
addl
cmp
add
adc
adc
lret
rcrb
jecxz
jno
pop
adcb
fs
push
push
scas
push
fldt
pop
sbb
ret
mov
sbb
cwtl
ret
jae
ss
push
pop
lret
and
out
ja
mov
fsubrl
ss
push
ss
pop
std
pushf
mov
xchg
loop
js
mov
je
xchg
mov
cmp
xchg
inc
xor
test
sarl
push
sti
call
imul
mov
pop
ljmp
les
mov
mov
fs
lret
or
mov
dec
lods
test
mov
imul
cmp
imul
jae
inc
jne
adc
xchg
push
in
and
cli
inc
rep
mov
in
cmpsl
and
mov
lock
sub
xlat
out
stos
cmp
shrl
adc
pop
jg
or
add
sbb
xor
hlt
mov
lock
sub
xchg
pop
cmp
and
or
or
cmpsl
test
jnp
ret
sbb
adc
popa
and
int
dec
jb
cmovns
inc
mov
fildl
fwait
ljmp
xor
cli
xlat
pusha
xchg
cli
add
stc
lcall
repz
cmc
add
out
cmpsl
jle
imul
jb
out
inc
mov
repnz
mov
mov
lea
fwait
jl
jp
lret
sbb
pop
xor
sub
insb
sbb
cs
jle
mov
sub
push
gs
mov
iret
dec
mov
mov
sub
std
and
pop
insl
adc
or
arpl
sbb
clc
inc
fcomps
mov
adc
lods
fisubs
dec
jb
test
insb
mov
fidivs
add
mov
popa
test
loope
or
dec
mov
add
jmp
stc
dec
stos
loop
daa
mov
ss
scas
lahf
dec
or
es
and
mov
jns
out
xor
fs
pop
clc
push
icebp
adc
test
add
inc
mov
fistpll
stc
fcmove
jl
and
sub
popa
ret
into
push
push
mov
mov
add
sub
subb
push
popa
xchg
sub
push
push
out
popf
dec
call
in
lret
aas
pop
popf
xor
inc
push
rorb
mov
and
or
scas
mov
aas
mov
ret
add
xor
les
mov
mov
lcall
jmp
loope
cmpsl
add
jo
in
jb
int3
xchg
add
and
or
or
popf
xor
cwtl
jg
lds
xchg
inc
icebp
into
repnz
mov
pop
pop
arpl
cli
cmpb
fwait
xchg
enter
mov
push
hlt
xchg
cltd
adc
dec
stc
in
mov
adc
test
sub
jle
fs
add
test
cld
faddl
dec
push
dec
fcomp
inc
ljmp
int
inc
les
mov
adc
out
jne
ret
cltd
mov
ficomps
out
pop
pop
push
dec
xchg
sbb
cmp
lahf
out
dec
movsb
test
sub
outsl
arpl
mov
icebp
dec
dec
xchg
add
aam
imul
in
push
mov
cmc
add
mov
adc
ds
dec
add
lret
push
icebp
jno
test
push
pop
sahf
cmp
fdivr
insb
ret
mov
stos
mov
cltd
mov
popf
movsl
std
add
fcmovnu
lahf
xchg
rcrl
shlb
lea
loope
fists
aam
xor
rcr
fbstp
push
outsl
cmc
and
pop
xchg
shl
xchg
and
shrl
pop
dec
mov
push
push
sub
inc
das
sbb
xor
cli
jle
leave
fdivrl
or
adc
aam
into
xchg
push
mov
lret
je
jno
out
loope
test
insb
push
lcall
or
mov
out
fldenv
mov
and
dec
xor
pop
ja
add
repz
sbbb
cli
aam
popf
test
add
ret
loopne
sti
pop
pop
in
loop
scas
mov
sbb
jmp
out
jb
cmpsb
outsl
outsl
mov
outsb
mov
xchg
cmp
add
pop
pushf
arpl
dec
jge
mov
hlt
cmp
in
emms
aam
or
les
aaa
sub
out
sbb
jle
icebp
or
jecxz
popa
adc
mov
jle
addl
pop
cmpsl
pop
shr
sbbl
scas
aas
xor
jge
mov
call
xor
push
add
mov
jbe
es
mov
ret
mov
sbb
and
inc
or
das
adc
mov
dec
xchg
aaa
daa
cmc
fldl
pop
fidivrl
mov
out
adc
mov
dec
or
in
mov
fsts
pop
pop
mov
movsl
hlt
dec
push
push
push
jge
lds
in
fcmovnu
and
lods
fbstp
out
pop
aam
in
jb
lret
push
xchg
ror
addr16
imul
cmp
aad
repnz
cltd
mov
test
pushw
cmp
cmp
in
lret
das
adc
jl
mov
cmc
push
mov
pushf
sbb
mov
es
sub
stc
inc
pop
mov
popa
loopne
cmp
nop
or
out
jg
mov
add
push
fnsave
scas
ret
test
ss
stc
add
add
mov
jbe
out
cmpsl
xor
push
or
es
mov
mov
jno
out
jno
push
sahf
test
and
and
dec
pop
mov
shrl
loop
loopne
push
imul
paddsw
imul
das
movsl
mov
pop
jp
push
mov
shrl
shr
add
pusha
pop
xor
cmc
clc
dec
cmp
stc
push
test
push
or
out
ljmp
test
call
rep
mov
call
sbb
clc
adc
dec
repnz
filds
inc
adc
stos
ljmp
fdivrs
mov
add
cld
fmul
sbb
ret
mov
inc
aaa
jbe
xor
pop
insb
add
ret
shl
imul
add
xor
xor
test
xchg
dec
push
adc
inc
sbb
xchg
add
cs
int
jbe
iret
sub
call
pop
lahf
loope
jp
pop
inc
rcrb
jl
pop
out
shr
clc
push
cmp
xor
xchg
fsubrl
cmp
dec
push
adc
pusha
cmp
add
enter
ss
xchg
lods
jne
jns
add
mov
out
cmp
fidivs
lea
fcoms
mov
inc
aam
xchg
dec
into
loope
xchg
bound
push
fsubr
xor
clc
cmp
aad
lods
sbb
out
inc
pop
inc
enter
call
ret
insb
das
stos
cmpsl
pusha
xchg
mov
enter
mov
jo
inc
xchg
ret
sub
xchg
inc
mov
imul
xchg
lea
movl
das
mov
shlb
xor
ret
inc
aas
or
mov
jb
in
repnz
aaa
fcmove
cmovp
xor
bound
push
mov
js
arpl
dec
bound
push
jae
xchg
pop
push
sub
imul
cld
enter
bound
mov
or
lcall
mov
push
jnp
add
sbb
sbb
sub
xor
mov
xchg
push
ja
pop
sbb
lahf
cli
test
mov
daa
jnp
jbe
shl
ret
testb
sbb
push
add
jb
and
aaa
pop
ss
cmp
xchg
mov
jmp
mov
adc
xchg
stos
inc
inc
jo
shr
push
xor
nop
lods
jb
test
insl
mov
dec
jp
sub
js
js
pushl
in
dec
sub
mov
fidivs
int3
pmulhuw
or
inc
into
jmp
mul
push
push
mov
ret
sahf
fisttpl
fidivrs
scas
adc
aas
dec
into
out
addl
movb
out
cmc
or
in
inc
fstps
jne
imul
shll
mov
fldl
lcall
jb
les
int3
add
ret
out
insl
roll
enter
cmpsl
cwtl
xor
mov
out
and
in
test
pop
rcrb
xchg
test
daa
loop
adc
xor
pop
stc
cmp
pop
jae
sub
int
xlat
stc
xor
test
loop
jnp
inc
cwtl
addr16
push
orb
imul
mov
adc
push
and
pusha
jle
sbb
icebp
test
out
lret
cmpsb
xor
stos
adc
xlat
ja
or
sub
cmc
dec
mov
das
idivl
sub
fistpll
inc
xlat
cmc
jle
shrl
adc
mov
imul
outsl
sbb
jnp
outsl
mov
sub
inc
fiaddl
add
in
fdiv
clc
jmp
test
pop
xlat
outsb
test
leave
adc
loop
pop
push
adc
pop
inc
mov
sarb
scas
mov
pusha
jecxz
mov
sub
ss
cltd
scas
dec
push
pop
leave
hlt
mov
lea
or
jl
int3
or
push
lock
ljmp
sbb
jle
aaa
in
jmp
cmpsl
popa
pop
lcall
ret
xchg
movl
sub
cmp
pop
adc
repz
inc
icebp
jle
sbb
hlt
das
cld
fistpl
shlb
fistpll
inc
out
je
inc
jns
jb
cmp
sbb
insb
and
xchg
scas
imul
in
dec
or
int3
mov
or
bound
xor
out
xchg
mov
push
push
add
imul
sbb
xchg
mov
pop
dec
movl
push
push
add
sbb
cmp
xchg
jp
insb
pop
cmpl
cwtl
into
adc
dec
adc
mov
push
int
orl
pop
fs
repz
lods
fisttpl
sbb
es
cmovne
add
jecxz
pusha
add
clc
xor
jecxz
out
stos
cltd
and
insb
test
pop
pusha
sbb
cmp
fwait
ljmp
push
inc
cmpsl
xor
out
push
inc
bound
and
push
rcll
cld
mov
adc
test
push
daa
inc
stos
xor
dec
xlat
repnz
jg
pop
je
jecxz
adc
dec
outsb
inc
add
je
outsb
xchg
xor
shlb
fwait
mov
cwtl
lret
pop
ds
add
cwtl
inc
pop
ret
and
jecxz
arpl
sbb
push
push
popa
cmp
push
push
pop
outsb
call
inc
cld
and
int3
push
xchg
hlt
pop
dec
xchg
test
cmpsl
test
int3
insb
and
dec
out
imul
mov
sub
xlat
pop
and
cmp
dec
lods
cmp
mov
movsb
ja
mov
cmp
fstps
ss
roll
inc
ljmp
push
insb
shlb
inc
lret
out
repnz
cltd
call
add
ja
xchg
cmc
test
push
test
mov
sbb
stos
push
xlat
push
inc
fldcw
mov
iret
mov
xor
les
lods
test
movsb
push
add
lahf
and
movsb
push
dec
add
lahf
mov
pushf
push
lock
insb
gs
cmpsl
and
adc
mov
jge
sub
sbb
push
enter
push
adc
mov
pop
test
pusha
imul
aas
iret
add
scas
sbb
aas
in
aam
shll
push
push
fsubs
or
inc
cmp
mov
daa
sub
je
cmp
in
scas
sahf
xchg
jmp
push
lea
lret
lcall
push
xor
adc
pop
mov
test
cmpl
scas
cmp
ljmp
sbb
cmpsl
out
loopne
sub
pop
mov
sub
mov
dec
arpl
xchg
inc
pop
adc
push
jne
daa
fdivr
sahf
cmpsb
sub
and
outsb
mov
dec
rol
in
scas
or
popa
xchg
mov
ja
lds
inc
imul
pop
leave
adcb
sbb
int
movnti
inc
xor
adc
inc
cmpsb
fs
cmpsl
dec
mov
cmp
shll
adc
cltd
inc
mov
in
shlb
fisubrs
jb
mov
sbb
shlb
dec
sti
mov
sbb
dec
aas
stos
cli
push
jl
mov
shl
insl
sbb
out
xorb
mov
or
sti
insl
aad
ret
jns
stos
pop
mov
fisubrs
sbb
add
push
fisttps
test
dec
repnz
dec
fnstenv
sub
dec
das
nop
adc
dec
in
nop
outsb
in
or
push
push
cmpxchg
jbe
sub
icebp
push
aad
push
inc
pop
ficoms
inc
mov
popf
mov
mov
mov
fisttpl
inc
stos
call
aas
jg
jecxz
sub
inc
loopne
imul
inc
ficoms
ret
push
pop
daa
adc
pop
nop
js
mov
in
insl
jg
and
xchg
pop
cwtl
pop
jmp
jmp
imul
orl
xor
sbb
loopne
xchg
add
repnz
jmp
jnp
mov
fwait
sarl
sbb
inc
test
out
stos
pop
cmp
popf
cli
in
mov
fadd
or
sbb
dec
adc
sbb
jo
cld
out
sbb
sahf
insb
jns
out
fcmovnu
cmp
pusha
push
lcall
cmp
mov
inc
or
out
xchg
xor
jnp
xchg
and
jb
icebp
or
lods
scas
int3
loopne
movsl
dec
stc
movsb
xchg
sbb
stc
repnz
mov
push
ss
mov
sarl
or
sbb
xchg
sbb
mov
push
mov
popf
leave
out
imul
rcl
cmpsl
mov
fisttps
repnz
into
adc
insb
xchg
mov
bound
hlt
dec
jmp
lods
push
mov
aad
in
mov
sbb
in
fwait
notb
out
jp
xchg
mov
sbb
cltd
sbb
jb
pushf
jge
jle
ds
call
aas
inc
xchg
shll
lods
lock
pushf
cmp
aaa
jl
xchg
fisubl
mov
and
outsl
movsl
push
adc
dec
jne
sbb
xchg
fldl
aas
sub
movsb
mov
adcb
pop
js
mov
add
rclb
adc
mov
jg
cmp
and
inc
fisubrl
adc
and
cmp
scas
aam
inc
fdivs
and
sub
popf
fucom
pop
popf
es
mov
dec
xchg
out
dec
ja
jle
mov
mov
std
cmc
mov
loopne
mov
movsl
jno
stos
xchg
in
pop
lods
mov
fnstenv
psraw
pop
adc
test
jnp
push
inc
js
push
lock
push
mov
push
jns
jg
cmpsb
arpl
int
sub
iret
ret
pop
and
fldenv
clc
jg
inc
or
cmp
ret
daa
iret
xor
pop
cli
fnsave
xor
mov
xchg
es
inc
mov
out
or
mov
xchg
mov
and
push
dec
or
jl
loopne
xchg
dec
fs
jmp
jne
mov
lcall
rcrb
gs
imul
enter
addl
jg
sub
pop
and
inc
filds
sbb
into
lods
cmpsb
jle
fnstcw
in
popa
fs
cmpsl
mov
in
in
lea
out
xchg
in
mov
inc
jne
lods
jnp
pop
shl
pop
movsb
mov
push
dec
addr16
cmp
scas
les
rorb
inc
adc
mov
ljmp
and
xor
in
and
cmp
push
loop
adc
pop
sbb
test
mov
mov
ret
pop
int
push
jno
stc
add
lods
in
pop
cmp
xor
jg
add
adc
cltd
gs
clc
mov
mov
shl
xchg
add
inc
testl
jbe
stc
mov
and
jecxz
jno
inc
push
leave
cld
add
mov
push
dec
outsb
cmp
cmp
stc
mov
inc
mov
ret
fcomip
sbb
aam
gs
adc
into
rcr
cltd
pusha
inc
mov
cmpsl
aam
fcompl
mov
lret
aaa
cs
popa
inc
aaa
test
daa
sub
or
leave
mov
and
add
lahf
fstpl
and
jno
movsb
push
fwait
ja
bound
adc
xchg
mov
lods
lods
sbb
xchg
jmp
mov
xchg
and
cmpl
loop
out
sub
shlb
sbb
ret
push
or
mov
adc
adc
imul
add
and
pop
jno
imul
je
test
movups
mov
fists
push
pop
rorl
dec
dec
mov
sub
mov
push
adc
dec
je
add
adc
pop
dec
cwtl
ljmp
ja
dec
sub
push
cmp
aas
movsl
mov
mov
xchg
aam
cmp
jp
fiadds
xchg
and
inc
adc
fisubrs
add
inc
pop
testl
sub
lcall
xor
pop
mov
sbb
ret
fwait
or
mov
sub
enter
out
mov
ds
mov
sti
pop
sub
js
add
lret
das
fstpl
test
adc
imul
xchg
stos
pop
dec
dec
arpl
lods
dec
sahf
hlt
idivl
xchg
fisttpll
bound
ficoml
push
jb
shll
outsl
negl
jb
into
mov
jecxz
sahf
rorl
in
addr16
inc
bound
cwtl
mov
cmc
gs
or
adc
inc
orl
sbb
arpl
cmp
dec
jp
jg
stc
rclb
mov
adc
pusha
popf
mov
cs
rcr
outsb
cmp
stc
aam
cmpsb
pop
sbb
subb
les
push
negb
cmp
inc
pop
pop
and
sbbl
lea
aaa
call
xlat
aad
lods
sti
das
cmp
jne
mov
mov
pop
mov
jbe
and
inc
nop
outsl
cmp
les
sbb
and
xor
lahf
sub
cmp
or
xchg
and
js
adc
jecxz
adc
cwtl
aaa
push
std
fst
adc
paddsw
out
lret
idivl
mov
fmull
orl
rcrl
pop
push
push
dec
test
sub
scas
in
push
sbb
jle
jl
mov
sbb
arpl
push
sbb
cmp
stos
es
sbbb
test
push
divl
jmp
in
ret
xchg
sub
add
in
stos
cmp
inc
sbb
push
jnp
dec
xchg
dec
stc
lods
pop
inc
int
cmc
dec
xor
jae
es
call
jg
fdivrl
sub
push
enter
mov
push
rolb
jbe
jecxz
add
js
and
fadds
push
mov
jne
xor
scas
cmp
insl
lock
and
ret
test
cwtl
lods
push
bound
inc
lret
movsl
ds
mov
mov
in
add
fdiv
shlb
movsl
mov
das
pop
push
ja
or
add
xlat
out
call
lahf
pop
xchg
gs
xor
xchg
fidivrl
push
dec
sbb
mov
sbb
cld
push
mov
push
stos
rorl
pop
inc
pusha
arpl
cmpsb
in
addl
add
cmpsl
ret
fcoml
ror
notl
addr16
xor
pop
insl
mov
out
jno
int
inc
sbb
pop
in
adc
movb
push
mov
stc
and
int
das
add
loope
ss
in
rolb
ja
fsts
dec
push
and
cld
mov
push
or
pusha
fidivrs
out
mov
pop
out
adc
aad
xor
outsl
xchg
cmp
dec
inc
outsl
jae
mov
sub
sub
or
inc
in
push
imul
mov
xlat
dec
shlb
lods
lret
data16
mov
sbb
push
mov
add
mov
iret
lret
push
fstps
adc
les
or
or
mov
inc
mov
sub
cmpsl
pop
fwait
in
movsl
ljmp
mov
rclb
test
int
mov
int
or
add
test
dec
mov
xchg
popf
inc
push
in
cltd
mov
movsb
xchg
inc
cmp
fnstenv
inc
inc
mov
cmc
cmpsl
nop
xorl
add
jmp
mov
or
aaa
ret
adc
or
std
int3
fldt
xchg
inc
push
adcl
cmc
cwtl
xor
stos
adc
addr16
dec
push
into
fisttpll
mov
lret
lahf
andb
inc
fiaddl
cld
mov
or
pop
jmp
sub
maskmovq
addl
jne
push
xor
jge
lahf
arpl
mov
ja
test
out
adc
stos
outsl
jnp
call
out
cmc
pusha
in
insl
xor
cmp
inc
popf
icebp
dec
popf
stc
ds
lock
aam
insl
arpl
inc
xor
cmp
bound
in
sub
mov
cltd
xor
push
inc
inc
cmpsl
jp
es
les
and
fmul
xchg
push
call
jns
out
sbbl
inc
rcll
movb
xchg
mov
decl
xchg
lcall
loop
ss
cmp
xlat
aas
sub
mov
mov
les
pop
mov
add
mov
outsb
jbe
cwtl
adc
push
add
test
mov
mov
sub
and
mov
inc
add
push
sub
out
enter
cmp
and
mov
call
and
push
mov
add
jl
inc
adcl
inc
sbb
std
add
iret
loopne
out
in
aas
and
stc
fsubl
les
add
add
lea
repz
dec
jbe
sbb
fwait
stos
out
fldl
loopne
add
aas
imul
sub
cmp
daa
xchg
push
ljmp
popf
in
sbb
bound
mov
test
pop
cmp
adc
add
sub
dec
or
lock
scas
mov
shll
sub
dec
jle
xchg
jl
lcall
lock
ja
call
leave
or
mov
cmp
xor
rcll
inc
lds
jns
adc
mov
cmp
sub
cltd
sub
add
sbbl
mov
in
cltd
xchg
jge
xchg
pushf
int
int3
roll
xchg
inc
adc
inc
pop
xchg
sub
clc
fimull
fs
push
sub
sbb
mov
xrelease
stos
into
push
sub
mov
fwait
mov
or
and
imul
dec
icebp
enter
sbb
arpl
into
xchg
dec
inc
ret
and
or
les
pop
scas
mov
addr16
adc
adc
mov
dec
push
adc
jns
adc
add
mov
pop
and
mov
add
mov
sbb
mov
push
scas
xchg
lock
iret
hlt
push
xor
mov
call
cs
mov
dec
mov
ret
jg
and
out
inc
inc
xor
arpl
movsl
and
cmp
nop
xchg
cmp
movsb
ret
or
xlat
inc
xchg
mov
cmp
cmc
lret
shl
jecxz
push
pop
push
add
je
loope
cltd
nop
inc
repnz
int
incl
inc
jne
data16
pop
test
pushf
adc
pop
sbb
pop
push
in
out
loopne
cld
and
add
jle
test
fdiv
ficompl
cltd
sahf
jns
mov
ret
mov
pushf
sub
ucomiss
fs
cmc
das
add
fs
xorb
jns
test
jle
xor
and
xorb
into
cli
sub
mov
mov
dec
stos
xchg
jg
shll
mov
mov
add
std
mov
leave
cltd
push
aam
and
cmpsl
push
fildll
loop
lea
repnz
jo
rcr
sbb
aas
push
movsl
push
mov
lahf
repnz
scas
jo
out
push
sar
ret
addr16
jnp
jmp
push
sahf
or
or
fsubl
fnstcw
es
sbb
and
push
xor
cmpb
movsl
jne
cmp
andb
inc
pop
rclb
xchg
add
xorb
pop
movsb
or
pop
mov
cmp
pop
pop
mov
jo
test
es
and
pop
dec
sarb
dec
sub
call
movsb
jnp
and
movsb
xor
inc
scas
mov
adc
mov
pop
jns
mov
cmp
jmp
add
sti
repnz
ret
or
add
bnd
dec
mov
xchg
in
cmp
movsl
popf
filds
push
insb
test
push
jg
mov
jg
jbe
mov
sbb
inc
pop
push
cmpsb
adc
insb
das
cmp
push
jl
adc
xchg
cmpsl
bound
push
or
mov
xchg
insb
xor
pop
lcall
adc
pop
repz
scas
mov
xchg
add
add
add
sub
hlt
andl
lock
sub
in
dec
sub
scas
jecxz
and
out
cltd
popf
loopne
adc
das
dec
enter
push
cs
sub
loope
jnp
jno
cltd
pop
xor
into
cmc
cmp
cmp
adc
dec
and
push
jns
loop
call
xor
mov
ds
push
out
jge
fmuls
sub
push
ret
lcall
add
cld
jb
loope
andl
mov
push
sbb
leave
aas
cmp
pop
xchg
mov
stos
mov
and
mov
dec
iret
xor
sub
das
movsb
sub
stos
mov
jne
and
mov
pop
repz
mov
insb
xor
shrb
lret
push
subb
mov
test
outsb
imul
xchg
ret
mov
ret
xchg
mov
in
pop
mov
inc
out
jge
mov
popa
add
mov
inc
or
imul
mov
cmp
sbb
mov
movsl
clc
add
int3
out
mov
sbb
cmc
push
adc
push
pusha
andl
out
mov
jne
les
push
pop
out
xchg
hlt
shl
outsb
add
or
xorl
das
push
xchg
sub
mov
es
sti
mov
aaa
movsl
sbb
pop
inc
mov
inc
push
inc
shll
scas
pop
data16
push
mov
ja
repnz
push
fwait
imul
leave
out
mov
std
std
dec
imul
dec
jl
jl
sbb
push
fisubrs
push
dec
stc
iret
mov
sbb
call
inc
sti
clc
or
dec
adc
lods
daa
fisubrs
es
xor
popf
lock
sahf
sbb
loop
jecxz
xchg
add
cmpsb
scas
cli
fsubr
cmpsl
in
jg
sub
mov
push
lret
lock
inc
dec
lods
data16
adc
xacquire
popf
icebp
push
mov
add
stc
sbb
and
and
daa
inc
pop
fidivl
xor
cmp
shlb
aas
int3
in
mov
jmp
clc
cmpsb
jmp
or
cld
jl
out
push
mov
cli
pop
aas
and
clc
outsb
xlat
xchg
add
std
mov
outsl
mov
mov
sbb
lds
sub
loop
mov
jb
arpl
xchg
dec
xor
in
xchg
push
rorl
add
sub
or
dec
shr
enter
push
add
adc
fadd
and
jmp
inc
fistps
adc
sbb
into
shrb
insl
sbb
cmp
stos
pop
jnp
cmpsb
inc
incl
inc
mov
cmp
insb
scas
nop
add
lahf
fsub
pop
push
sahf
shrb
addb
out
mov
cltd
out
sbb
in
push
jno
arpl
ljmp
out
cmp
and
dec
mov
in
mov
mov
out
adc
pop
bound
pop
lcall
xchg
in
or
in
sub
cli
es
movsb
gs
js
xchg
orl
in
bound
sub
dec
test
lea
adc
add
push
mov
into
xlat
loop
sbb
mov
scas
sub
sub
daa
sbb
mov
push
shlb
mov
jne
mov
test
test
sub
pop
or
pop
dec
sti
dec
push
sti
mov
in
stc
push
mov
int3
pop
std
sub
mov
pop
and
jbe
pop
or
popa
and
fwait
push
inc
inc
jno
decl
insl
inc
ror
mov
add
mov
jg
dec
into
xchg
ds
sbb
push
mov
out
and
mov
gs
jmp
ror
sbb
or
cmp
inc
jne
nop
cmp
dec
hlt
flds
sub
pop
xchg
pop
adc
aas
inc
push
int
pop
push
ds
xor
and
sbb
cmpsb
icebp
addb
dec
cmpl
cwtl
push
cld
add
mov
mov
jb
test
xor
adc
cmc
push
imul
movsb
popf
js
lods
adc
push
jns
lods
je
out
scas
xchg
repz
addr16
pop
cmp
mov
dec
mov
out
jbe
add
sbb
popf
fs
xchg
add
xchg
mov
out
iret
aam
lret
imul
dec
movsl
mov
orl
in
pop
push
xchg
imul
pushf
adc
scas
add
aad
cmp
cltd
mov
xchg
add
push
aaa
sub
movsb
mov
lds
mov
jno
jge
sarb
fdivl
add
aaa
inc
push
sbb
test
dec
cmp
adc
inc
adc
push
rcr
mov
dec
push
mov
sbb
sub
aaa
clc
mov
cmp
stc
pop
fldl
bound
adc
rcll
sub
xchg
push
sub
adc
xor
inc
jp
and
cwtl
add
insl
pop
cmp
push
imul
sbb
std
pop
xor
xchg
lock
and
rclb
imul
aaa
pusha
les
ds
push
inc
or
daa
sub
cwtl
in
add
pop
inc
inc
jl
xchg
adcl
mov
out
mov
adc
addl
fisttpl
mov
xlat
and
neg
lahf
or
xor
enter
push
jo
outsl
and
lods
lahf
mov
or
mov
dec
sub
adcl
mov
adc
sbb
jb
jo
lcall
or
ljmp
mov
in
cmp
xchg
nop
fiadds
inc
mov
inc
jge
in
jg
xor
jmp
jne
popf
add
mov
cmp
pusha
imul
mov
test
jmp
or
nop
mov
mov
mov
xchg
or
adc
jae
add
and
fucompp
jle
cs
inc
fisttps
xchg
stos
fnstcw
lods
sub
mov
sbb
es
push
aas
mov
imul
addl
insl
loop
add
bswap
push
push
jp
hlt
jl
mov
push
or
mov
pushl
ret
test
jmp
arpl
mov
dec
fs
in
scas
mov
push
xchg
sub
xchg
and
outsb
mov
imull
mov
adc
cmp
je
fldcw
cli
or
rcll
mov
adc
test
sub
gs
aaa
jl
sbb
sti
dec
and
and
xor
es
popa
inc
push
sbb
lret
adc
imul
in
lret
pop
mov
insl
out
adc
repz
sub
or
dec
cltd
jg
addr16
add
pop
xor
adc
je
and
and
std
arpl
and
sar
push
and
mov
sub
sub
fnstcw
in
andl
pop
ret
test
mov
dec
lods
bound
jae
cmpsb
and
roll
lock
jecxz
aam
ds
iret
dec
test
cld
cwtl
mov
pop
insl
jno
int
scas
pusha
dec
xchg
fbstp
int
add
push
lcall
lahf
xlat
popf
mov
sbb
mov
cld
stc
xor
stos
mov
and
and
pop
stos
mov
xor
gs
insl
rcrb
sub
mov
inc
outsl
icebp
dec
lret
lcall
cmp
dec
lods
lahf
stc
pop
cs
mov
int3
xor
cli
pop
sbb
imul
cmp
out
and
lretw
movsl
into
ds
mov
and
push
mov
adc
dec
jnp
gs
mov
inc
test
push
pop
pop
sub
in
rcll
add
das
pop
loope
testl
lcall
fstpt
movsl
js
pusha
mov
jbe
dec
push
into
repz
cli
sbb
xchg
sahf
pop
xchg
loope
test
lret
sbb
and
sbb
dec
dec
out
lods
int3
fiaddl
sbb
shl
jae
cwtl
mov
popa
addr16
mov
xor
ret
test
adc
lret
push
stos
xchg
popf
movsl
mov
movsb
outsl
add
fisttps
sub
mov
jo
pop
pop
xor
cmp
mov
cltd
fsub
jae
fwait
mov
mov
jle
aad
xchg
fildll
and
pop
jp
sub
fwait
jne
inc
jo
je
and
mov
push
aam
cmp
lea
mov
and
in
push
sbb
les
push
and
jmp
enter
sub
mov
sti
lea
addl
out
pop
cltd
mov
push
in
dec
jno
repz
lock
and
movsb
aad
mov
xchg
sub
push
pminub
and
jmp
sbb
jb
les
fcos
or
or
aad
cmp
addr16
add
jne
pop
fcmovbe
cmpsb
outsl
adc
incb
gs
mov
sbb
cmp
inc
int
xlat
stc
mov
hlt
push
ja
pop
nop
inc
ror
dec
insb
imul
dec
je
loope
jbe
mov
popa
fldenv
iret
insb
xchg
ss
cmc
pop
pop
add
push
out
clc
mov
icebp
xlat
sbb
mov
shrb
adc
jne
cmpsb
shrl
inc
add
decl
aaa
fbld
in
or
leave
into
repnz
orl
cld
xor
lahf
cmpsl
stos
push
xchg
out
shlb
fs
mov
shrl
scas
aam
jb
out
push
cli
sub
inc
xchg
lret
push
cmp
push
popa
jae
push
pop
insb
test
sahf
cmpsl
mov
xchg
insl
add
xchg
inc
mov
dec
clc
scas
repnz
dec
xor
out
lock
push
sarl
aad
and
cmp
add
jno
lret
dec
push
addl
jmp
or
jne
sahf
cmpsb
mov
repnz
mov
data16
lret
call
and
insb
dec
shrl
jg
imul
push
inc
ret
scas
stos
add
add
xor
push
scas
insl
mov
push
loopne
repnz
sbb
popf
xor
dec
out
out
inc
and
mov
pop
iret
push
rclb
decb
icebp
pop
fimull
mov
into
cltd
test
cmp
mov
inc
xor
mov
insl
and
bound
popf
cmp
xorl
cmp
push
stc
ds
mov
std
jmp
dec
dec
das
xchg
pop
insl
out
pop
push
adc
lock
ds
push
pop
loope
filds
jge
loope
cmpsl
adcb
cmpsb
sbb
jge
outsb
dec
fiaddl
sub
addr16
outsl
insb
mov
push
test
jp
pop
and
lds
adc
leave
and
xchg
xchg
sub
or
cmpb
pop
pop
mov
int
mov
xor
push
jmp
imull
jmp
fadd
les
push
test
sbb
jb
jo
bound
shlb
aam
mov
nop
mov
jecxz
roll
xchg
jg
fisttpll
clc
les
stc
ja
xchg
and
dec
mov
xchg
movsl
lcall
into
dec
or
jge
jl
cli
out
sbb
mov
mov
ret
icebp
add
hlt
pop
test
xor
fmull
nop
sbb
xchg
add
aaa
or
jg
jb
mov
in
xchg
or
push
jo
bound
xchg
cmpb
inc
test
mov
cmpsb
test
jo
cmp
dec
adc
imul
adc
lds
addr16
ss
lahf
pop
sti
jmp
mov
test
out
repnz
push
shrl
pop
sub
and
ljmp
dec
push
ret
adc
sub
mov
mov
push
arpl
push
out
sub
ret
ja
xchg
mov
add
lcall
outsl
or
pop
add
mov
lock
mov
js
xchg
mov
imul
fst
fistpl
jne
enter
movsb
xlat
adc
addr16
adcl
ja
test
push
or
and
mov
dec
mov
mov
sub
pop
int3
pop
dec
and
mov
mov
mov
jle
and
jne
mov
nop
adc
pop
xchg
js,pn
pop
and
mov
jo
mov
inc
inc
or
push
jns
fwait
jb
rcrl
fdivrl
pushf
hlt
xor
test
xchg
arpl
mov
xchg
sub
bound
ret
rolb
dec
inc
or
and
hlt
clc
jmp
sub
xchg
shr
fnsave
and
popf
sbb
mov
mov
dec
daa
mov
mov
ss
and
shlb
sbb
arpl
jg
andl
andl
jp
repnz
adc
pop
out
in
nop
out
mov
sahf
mov
call
out
std
sub
ss
and
xchg
cmpsb
adc
ret
fists
imul
lea
movsl
and
mov
push
sub
gs
xorb
dec
movsl
inc
dec
xchg
fstl
xchg
xor
sbb
adc
lods
xor
loope
mov
or
ds
mov
inc
inc
sbb
inc
xor
arpl
cmp
jmp
jb
inc
cmp
pushf
fnstenv
mov
xchg
jl
ret
adc
rcl
mov
les
mov
inc
mov
cmp
addl
leave
lret
jmp
cmp
mov
mov
lret
aas
sahf
cmp
test
sub
mov
pop
repnz
movsl
jnp
pop
jle
cltd
or
lcall
lret
mov
inc
adc
stc
inc
pop
sarb
jge
dec
jbe
push
mov
jo
adc
mov
sahf
xor
shlb
rcl
cmp
aad
daa
jb
sbb
jno
scas
mov
mov
pop
sub
scas
sti
insl
or
or
xor
pop
pop
pop
fwait
pop
mov
idiv
inc
inc
inc
dec
sbb
jno
jbe
sub
mov
int
imul
and
lcall
xchg
adc
shr
nop
dec
out
dec
enter
xchg
jecxz
stc
push
jmp
ss
movsl
adc
inc
jp
insb
sbb
movsl
inc
xlat
mov
jg
push
cwtl
mov
dec
push
cmpsb
jecxz
mov
leave
mov
xor
bound
or
mov
les
xchg
out
ja
mov
push
or
icebp
in
sti
lret
add
mov
out
cmpsb
pop
xchg
sub
fcompl
leave
pop
xchg
stos
sub
and
repz
fcompl
xchg
aaa
lods
xchg
cltd
or
push
jecxz
repz
adc
and
sbb
int
add
push
mov
stos
sub
leave
pop
add
jo
mov
gs
mov
mov
test
mov
sub
cmpsl
sbb
pusha
lock
mov
add
xchg
ljmp
xchg
jg
sub
mov
mov
pop
cmpsb
lods
jno
fdivrp
rcl
imul
mov
adc
or
or
push
inc
mov
mov
or
mov
mov
or
cmp
insl
mov
and
lods
mov
cwtl
mov
idivb
or
inc
jne
icebp
int3
pushf
dec
mov
add
and
or
repnz
pop
in
mov
movsb
pslld
aaa
pop
imul
int3
imul
cmpsl
rorb
into
iret
int3
loope
ja
push
test
rcr
jle
out
mov
xor
enter
pop
fwait
add
jmp
inc
repz
test
dec
nop
mov
pop
test
imul
data16
cmp
in
out
shrl
mov
fcomps
insb
pop
shr
sbb
pop
outsb
dec
xchg
enter
xor
cmp
aam
in
xchg
push
pop
sub
aad
pushf
flds
test
repz
mov
adc
jecxz
adc
and
test
xchg
mov
js
inc
bnd
adc
insl
push
cltd
std
dec
daa
sbbb
xchg
jnp
jge
jae
mov
mov
mov
xlat
adc
inc
rcr
pushf
sub
adc
test
dec
aad
jne
mov
rol
mov
sbb
push
out
and
mov
jb
sarl
lods
add
fdiv
mov
pop
fwait
loope
jg
mov
mov
mov
xlat
sub
xlat
or
mov
lock
or
inc
scas
push
movsb
insl
ret
icebp
cmp
xor
andl
cmp
xor
or
inc
push
movsb
into
xchg
xlat
ljmp
stos
pop
pop
loopne
in
fisubrl
cs
in
in
imulb
cmp
data16
mov
loop
add
sbb
addr16
add
dec
mov
movsb
pusha
push
pop
fldenv
mov
loope
xor
push
dec
dec
cmp
xchg
loopne
xor
or
or
inc
push
add
and
pop
jmp
inc
push
sub
jnp
or
mov
popf
mov
cltd
outsl
loopne
xorl
shll
xchg
adc
or
hlt
xchg
xchg
test
test
mov
sarl
rcrl
dec
sbb
shll
push
adc
scas
push
scas
loope
and
jne
in
adc
mov
fwait
loop
dec
lock
mov
inc
test
test
fsubr
mov
mov
sub
int3
mov
sub
punpcklbw
inc
push
cmp
mov
xchg
loopne
ja
les
lret
cmp
dec
cmp
lock
cmp
rolb
lahf
pop
push
pop
orb
cmpsl
adcb
push
inc
out
outsb
aam
test
out
psrad
cmpsb
incb
in
sarl
aad
test
mov
mov
mov
push
aaa
imul
mov
insb
or
pop
or
loope
fists
shlb
lods
dec
das
cs
xor
adc
cmc
adc
add
hlt
or
dec
dec
je
insb
fwait
popa
or
push
pop
cmp
adc
mov
mov
clc
incl
aad
fcmovnb
lcall
mov
cmp
jecxz
pop
fstl
rcrb
ja
push
testl
shr
xchg
aad
sub
test
pop
ret
xor
cli
adc
adc
pop
push
cmp
mov
add
add
adc
xor
sbb
fsubrs
sahf
dec
sbb
mov
inc
mulb
inc
pop
mov
cmpb
bound
iret
inc
pop
adc
dec
nop
mov
call
and
ss
pop
inc
cmc
out
and
roll
push
and
xchg
std
mov
jbe
inc
pop
inc
mov
or
adc
outsl
add
add
sbb
mov
leave
insl
ljmp
aam
sub
out
sarb
popa
add
adc
push
loopne
sub
push
xchg
aas
aaa
in
test
xchg
stos
jl
mov
cltd
push
mov
sahf
add
pop
add
sub
in
test
cmp
jbe
jo
addr16
cli
test
cmc
cmp
stc
cmp
push
adc
push
mov
jecxz
ljmp
mov
inc
cmc
scas
pop
and
mov
xchg
rcl
dec
push
jno
aad
xor
adc
dec
or
cs
cmc
clc
inc
test
outsb
call
loopne
fmul
test
xor
push
int
sarb
mov
add
ret
sbb
in
dec
ss
cli
jecxz
shrb
sbb
xchg
push
aam
add
outsl
add
std
mov
inc
lret
or
jns
repnz
stc
dec
enter
inc
es
xchg
arpl
js
clc
lahf
arpl
clc
sahf
jae,pn
shll
sub
adc
fstps
sbb
jo
pop
mov
jbe
jbe
push
xchg
mov
incl
cwtl
xchg
xchg
push
pop
jno
out
lcall
mull
leave
outsb
faddl
and
loop
shll
and
jp
inc
bound
jnp
xchg
mov
push
sub
int
mov
mov
int3
mov
jmp
pusha
rolb
imul
iret
mov
icebp
pop
movsb
mov
test
mov
test
add
imul
aaa
aam
pusha
incl
pop
aam
ds
lret
and
add
jl
add
xchg
fstl
lea
stos
pop
push
mov
inc
mov
sti
dec
xor
addr16
shr
mov
shrb
aaa
xchg
cli
xchg
aas
dec
push
and
pushf
and
test
sub
mov
jne
cmp
jns
push
jne
adc
mov
insb
out
sbb
out
or
dec
popa
and
imul
mov
cmp
adc
scas
sbb
mov
sbb
pop
test
pop
rorl
cltd
mov
lock
add
test
cmpsl
test
clc
imul
add
in
into
std
push
call
mov
mov
ljmp
sbb
loope
dec
mov
enter
lret
jns
arpl
adc
mov
mov
push
and
add
pushf
fcompl
add
movsl
mov
ss
push
jge
mov
mov
xor
sbb
repz
mov
cmc
mov
idiv
ret
xor
sub
rcrb
cmp
or
sbb
pop
inc
subl
xlat
pop
cltd
inc
nop
mov
mov
jb
stos
and
arpl
adc
inc
push
fsubr
lock
enter
mov
jle
lods
xchg
mov
pop
or
notl
mov
adc
cmc
sbb
and
hlt
ljmp
jb
jo
int
imul
mov
ja
ret
jmp
push
aad
cld
jp
sbb
mov
sbb
jl
stc
jge
dec
sbb
mov
in
adc
pop
sbb
movsb
cmpsb
adc
add
xchg
cli
testb
out
shlb
jmp
cli
stos
inc
and
nop
xchg
in
movsb
jae
in
adc
ret
es
jns
pop
out
imul
inc
xor
add
cs
mov
or
or
add
out
fistps
mov
je
jp
mov
lods
addr16
imul
std
jns,pt
inc
sbb
push
jo
cs
loope
xchg
lcall
daa
jl
and
pusha
sti
xchg
test
xchg
inc
ss
cli
mov
sub
mov
xchg
jecxz
popf
push
repz
sub
xor
test
ret
lret
xchg
inc
cwtl
ret
mov
cmpsb
lock
out
insl
fcmovnu
sbb
int3
shl
xor
insb
fcmovbe
ljmp
in
ja
pop
hlt
xor
stos
icebp
cmp
lds
sarb
rolb
ret
test
fcoml
mov
ja
mov
add
add
test
adc
nop
jb
push
fiadds
xor
outsl
mov
inc
mov
lea
pop
mov
cmc
pop
clc
inc
daa
arpl
ficoml
mov
cltd
lahf
add
movb
cmpsb
xchg
movsl
enter
pop
push
fldenv
sub
and
sbb
mov
adc
imul
xor
mov
cmp
and
add
or
jne
in
lds
mov
sub
cmp
rcl
add
dec
xor
pop
mov
mov
sbb
in
xor
ja
mov
xlat
dec
rorl
popf
lret
ret
push
movsb
adcl
sarl
stc
fs
dec
cmp
imul
jge
mov
nop
in
add
fucomp
repz
pop
xor
rolb
dec
inc
or
and
mov
ljmp
cld
mov
int
mov
cmc
sbbb
add
adc
mov
sbb
int
mul
cmp
sub
mov
sarl
inc
add
mov
hlt
mov
add
cli
xchg
or
sub
lods
xchg
out
or
push
popf
dec
adc
and
aam
xchg
ja
mov
sub
fistpl
cmp
dec
aas
adc
dec
pop
aam
in
addr16
ficompl
adc
repnz
push
ds
xor
cmpsb
lods
std
mov
jecxz
ljmp
test
test
mov
inc
cmp
movsb
jge
cltd
ret
sti
xchg
int
orl
xor
or
mov
aaa
mull
pop
test
call
gs
aaa
inc
push
loope
sti
xlat
divb
cltd
outsb
lods
inc
dec
pop
sbb
ror
jl
das
mov
mov
popa
dec
sbb
pop
jg
js
es
sbb
flds
jne
out
ret
cmp
mov
ja
add
test
jb
scas
mov
aaa
fbld
pop
pop
mov
pop
addb
outsl
mov
dec
rcll
dec
mov
jno
ljmp
adc
pop
jnp
loopne
fstp
push
pushf
sbb
mov
lods
in
xor
pop
cmp
mov
shll
cltd
pop
cmpsl
mov
movsl
lret
and
pop
push
je
xchg
inc
mov
and
addl
das
jp
test
pushf
das
shrl
loopne
pushf
or
and
cmp
jbe
les
add
stos
jmp
push
scas
repz
fadd
mov
and
or
je
lods
pop
mov
mov
cmp
movsl
notl
inc
loopne
or
mov
aas
jg
sub
ja
leave
test
dec
lods
test
ss
mov
mov
insb
jmp
aas
testl
inc
aad
testb
cwtl
ss
gs
inc
sub
xchg
movsl
push
ja
cmp
fyl2x
test
addl
addr16
jmp
ja
enter
pusha
dec
in
xchg
push
adc
lret
test
fwait
pop
sbb
or
pmaddwd
mov
cmpsb
mov
jle
add
fmull
dec
xchg
mov
cmpsl
out
xor
ficoms
sar
adc
or
out
pop
js
mov
fs
xor
fists
stos
inc
mov
xchg
and
clc
stos
inc
xchg
xorb
ret
ret
test
push
push
insb
mov
outsl
push
cmp
scas
cwtl
andl
aaa
fs
cmpsb
shrl
stos
movsl
xchg
add
imul
pop
and
and
adc
mulb
inc
dec
mov
adc
dec
imul
xchg
inc
add
cmp
ss
rorl
loope
sub
mov
sbb
flds
adc
std
shll
jg
pushf
stos
inc
in
movb
sbb
dec
mov
jl
xor
jae
mov
out
add
push
stc
std
fwait
and
jo
fwait
or
xchg
xchg
jle
ror
mov
int3
arpl
mov
test
js
dec
mov
xor
leave
jl
mov
fildll
ja
insb
ja
xchg
and
add
lret
jmp
cmp
repz
nop
mov
lea
push
xchg
loopne
adc
jo
mov
ficoms
int
call
jl
loope
clc
pop
mov
or
sbb
and
xor
lods
call
xor
fwait
dec
push
in
mov
and
fists
cmp
mov
mov
imul
cmp
decl
loopne
add
aam
or
pop
dec
fwait
cmpsl
xchg
fcoms
add
repnz
fs
jae
popa
jne
or
cmp
mov
push
popa
sub
pop
sub
cmpsb
inc
icebp
cmp
jne
mov
pop
xchg
shl
decl
test
cmpsl
inc
inc
cli
test
or
push
fisubrs
xchg
mov
dec
sub
jmp
mov
aaa
icebp
call
dec
xchg
add
addr16
push
stos
mov
pop
cmc
mov
fcoms
jae
adc
outsb
andb
xchg
jnp
fcomp
movsb
mov
test
push
mov
cmpsb
xchg
in
mov
loope
outsb
sbb
movl
adcb
mov
leave
enter
leave
xchg
mov
xchg
test
adc
mov
sub
repnz
lock
inc
roll
add
xchg
pop
shrl
jecxz
jns
sub
or
add
lods
mov
pop
lods
jle
je
into
call
fistl
out
sub
cmp
cmp
mov
cli
mov
push
cmpsl
mov
rcrl
cmpsb
push
mov
mov
cwtl
dec
outsl
out
faddp
mov
movsb
mov
push
lds
inc
pop
imulb
shl
sbb
sahf
cmc
mov
cli
and
imul
xchg
ret
jae
add
loopne
pop
lret
or
lock
sub
mov
push
add
xchg
adc
jnp
jecxz
cmp
mov
outsl
jge
cmc
push
outsl
ljmp
sub
dec
dec
sbb
cmc
push
inc
xor
sub
xchg
ljmp
or
xchg
push
pop
daa
dec
int3
sub
mov
nop
lds
sbb
push
je
mov
int3
shrb
sbb
push
negb
lea
inc
insb
test
leave
stos
cmp
adcb
cltd
push
sub
outsl
push
repz
les
pop
add
pop
std
aam
mov
stos
seto
push
scas
cmp
popa
adc
fstp
xchg
xchg
in
fstpt
lahf
dec
mov
jne
stc
in
fidivs
cmpsb
xchg
push
call
adc
pop
xlat
lods
ljmp
popa
xlat
mov
subl
in
cmp
inc
movsl
mov
mov
into
movsl
addr16
mov
lock
inc
jp
ret
aam
jmp
add
xchg
addr16
push
shl
je
add
sbb
repnz
test
xor
xor
inc
out
je
in
pop
mov
fs
in
and
outsl
sub
jmp
pushf
mov
js
inc
pop
jne
andl
mov
push
jb
inc
sahf
push
jp
divb
bnd
xor
test
push
sub
es
out
push
mov
xchg
xchg
lock
sub
clc
lcall
push
mov
mov
into
dec
xlat
and
imul
mov
lods
add
jle
xchg
pop
push
fistps
loop
test
jno
repz
mov
and
lds
shrb
mov
or
or
mull
jg
dec
xlat
inc
push
subl
shl
lods
inc
in
je
in
insb
jo
pop
inc
push
mov
cmpsl
pop
lcall
in
mov
inc
cs
cmp
xchg
and
jmp
xor
lods
sbb
pop
outsl
lret
js
jg
shrl
sbb
outsl
in
out
sbb
mov
rcrb
jno
ret
xorl
dec
jecxz
jae
jmp
aas
mov
vmovdqa
lds
xchg
xlat
clc
cmpsb
xchg
aas
sbb
icebp
inc
cmp
clc
add
mov
out
ret
dec
in
mov
pop
push
xor
inc
ret
mov
call
cmc
dec
and
movsl
xlat
jmp
dec
rorl
insl
ret
rcr
shr
icebp
xor
add
mov
jns
jmp
mov
lahf
scas
aas
inc
sti
sbb
mov
add
mov
jnp
sbb
pop
mov
cmp
sbb
repnz
inc
adc
xor
add
in
cmp
std
inc
out
xchg
cli
xchg
and
jp
dec
xchg
aad
sbb
out
inc
pop
and
pop
mov
nop
and
add
cwtl
ja
out
mov
call
pop
or
shll
and
mov
cmpsb
fwait
orb
lret
adc
mov
jge
xor
test
mov
mov
mov
les
imul
lods
jo
cmp
test
shlb
shrb
cmc
pop
into
lds
inc
and
insl
or
ret
push
iret
pop
add
mov
or
std
cwtl
sbb
add
ret
add
dec
dec
clc
push
lret
push
in
stc
fldt
imul
das
push
shlb
out
jb
and
fisttpl
xor
mov
test
cvtdq2ps
jg
jmpw
inc
aaa
mov
mov
mov
fimuls
push
and
push
xor
js
dec
dec
mov
sub
lret
sbb
xorb
xlat
jb
xor
lock
lcall
fnsetpm(287
jno
mov
outsl
fcomps
arpl
push
into
lcall
clc
push
mov
lds
adc
dec
pop
mov
das
aas
fiaddl
lods
popa
dec
out
jnp
inc
jns
mov
push
pop
xchg
cmp
lret
cmpsl
ret
jmp
cmp
scas
out
out
pop
mov
les
aad
in
jnp
jmp
ljmp
push
loop
mov
jp
rcll
push
test
inc
push
adc
daa
xchg
pop
jp
cmp
frstor
int
mov
and
fcmovnu
out
adc
ljmp
cld
xchg
fsubs
push
aad
fwait
mov
hlt
add
pop
daa
inc
dec
and
test
loop
and
int3
jb
mov
inc
daa
xchg
xchg
jbe
add
sbb
mov
dec
cmp
pop
mov
adc
inc
sbb
loop
sub
mov
push
mov
mov
imul
inc
xchg
push
adc
and
lds
mov
dec
push
out
mov
and
mov
bound
inc
repnz
leave
sub
mov
xchg
mov
dec
stos
jae
mulb
shlb
shll
sarl
loop
movsl
sub
xor
dec
mov
inc
push
push
out
dec
pop
movsb
movsb
sub
push
test
inc
mov
scas
jb
pop
outsl
jmp
insl
xor
mov
sbb
sbb
stc
arpl
cmp
cmp
in
mov
stos
cs
movsl
pop
insl
jae
adc
jae
mov
sub
mov
push
dec
mov
push
in
adc
roll
inc
pop
mov
inc
stc
test
stc
in
adc
jecxz
fsubl
dec
cmp
cmp
adc
pop
fst
and
push
ret
add
jle
dec
lret
xor
cmp
cmpsb
test
pop
neg
mov
inc
inc
push
sub
lahf
push
test
lcall
xor
iret
inc
daa
leave
imul
into
cmp
stc
rclb
sbb
stos
aaa
mov
push
mov
adc
adc
jmp
dec
enter
jecxz
or
movsb
or
lret
lret
dec
xor
jmp
arpl
add
jecxz
out
daa
test
loopne
pop
and
mov
mov
and
scas
fpatan
or
lds
popf
int3
cmp
ja
lds
mov
mov
jnp
xlat
aam
inc
xchg
jle
loope
mov
sub
in
jl
pop
cmp
ret
sbb
into
imul
sub
pop
imul
fidivrs
pop
dec
ret
popf
xor
jae
lahf
enter
mov
sahf
icebp
jmp
add
fcoml
ss
filds
lcall
out
out
sbb
or
xor
mov
test
xorl
dec
stos
insl
fidivrl
pop
fsubr
xor
mov
push
push
sbb
call
es
repnz
loop
pop
stos
aam
xchg
adc
dec
mov
adc
or
xchg
ljmp
mov
xchg
out
dec
xor
lret
mov
xchg
fimuls
lock
movsl
sub
cmp
mov
clc
lret
push
mov
fnstsw
mov
jecxz
adc
aaa
push
sti
dec
or
cs
jg
pop
jns
test
inc
mov
sahf
push
hlt
mov
mov
sbb
or
imul
sub
outsb
in
pop
dec
repnz
clc
lds
lahf
xchg
cmc
lea
or
in
std
pop
mov
jbe
push
dec
xor
cmpsb
mov
enter
je
std
ljmp
cld
loope
leave
mov
rcr
mov
lcall
cmpsl
cltd
rcrl
push
sub
pop
popl
jbe
addr16
xor
and
push
test
popf
loope
movsb
or
cmp
sbb
subps
jecxz
fwait
addb
test
mov
cmc
inc
sti
adc
push
out
rcrb
aaa
scas
cmc
adc
mov
nop
xchg
shlb
fidivs
cmp
jo
imul
cmp
shl
xchg
orb
jno
pop
cmp
icebp
inc
inc
mov
mov
jl
cmp
repnz
idivl
dec
jae
dec
mov
call
movsb
jge
in
imul
arpl
cmp
push
xchg
dec
test
rolb
shl
and
sbb
pop
iret
stos
jbe
test
dec
mov
ja
in
cld
inc
fidivs
repnz
mov
aaa
dec
aaa
adc
dec
xlat
loopne
loope
sbb
mov
adc
cmp
adc
jb
seta
cld
ret
or
jnp
aas
xor
hlt
fdivl
dec
dec
mov
ja
cmp
js
ret
jns
js
cmp
scas
mov
mulb
mov
cli
int
rclb
jns
test
cwtl
jb
in
mov
jbe
push
std
xor
mov
aad
jp
repz
sbb
xchg
outsl
push
into
negb
mov
icebp
inc
add
outsb
lods
out
pop
in
andl
loope
pusha
add
pushf
lret
push
je
inc
mov
push
xchg
adc
fiadds
notb
les
nop
in
pusha
lahf
mov
ficompl
dec
jbe
mov
out
push
out
cmpl
pop
pop
outsb
and
pop
xor
mov
adc
or
out
pop
push
cmp
test
insb
sbb
inc
add
call
jno
popa
in
and
andb
rcl
and
scas
ret
fsubrs
lahf
neg
leave
movsb
divb
sbb
call
xor
insl
mov
insb
mov
mov
lret
aas
jg
add
js
push
dec
rdtsc
dec
test
sbb
ja
pusha
adc
or
inc
out
cwtl
cmpsl
push
shrb
fsts
inc
mov
xchg
mov
in
cltd
fldcw
jle
xchg
mov
jle
mov
inc
push
adc
pop
std
pop
mov
or
movsb
test
mov
xlat
stos
mov
popf
pop
mov
adc
je
pop
stos
jae
test
fwait
dec
mov
xchg
insl
jg
inc
ret
shl
sub
cld
inc
adc
loope
jbe
mov
mov
imul
cmpsl
push
fldl
insb
addb
rcrb
or
in
adc
and
push
js
jmp
push
pop
pop
adc
ss
and
imul
popa
jne
imul
cmp
xchg
stos
movsb
push
push
jg
mov
insb
or
jecxz
pop
dec
xchg
pop
xchg
adc
mov
sub
repz
scas
fbld
adc
cmp
push
out
and
jbe
addr16
dec
sub
in
xchg
ja
xlat
sub
ja
stos
in
hlt
nop
jae
aam
pop
icebp
add
lods
mov
pop
cmp
add
test
add
xchg
mov
sbb
mov
pop
in
and
xor
inc
xchg
xor
or
mov
push
aam
push
insb
call
arpl
int3
inc
int
addr16
mov
adc
enter
inc
adc
ss
punpckhbw
push
nop
inc
dec
inc
insb
sbb
mov
mov
out
mov
and
icebp
xchg
push
test
jae
notl
dec
dec
pop
mov
lds
add
pop
stc
sbb
mov
cmpl
fisubrs
mov
inc
das
pusha
shll
mov
push
les
mov
push
loope
xlat
mov
rorb
sub
mov
movsb
lods
fsubl
add
not
daa
pop
push
add
aad
js
dec
push
test
and
jno
push
lock
ja
lds
cmpsl
icebp
pop
rclb
push
push
xor
or
push
addr16
dec
sbb
arpl
stc
mov
mov
ljmp
imul
sbb
mov
xchg
aam
fldenv
outsl
adc
mov
jecxz
ljmp
push
loop
imul
xchg
jae
ret
xor
insl
mov
nop
inc
into
les
ret
push
xor
testl
push
in
scas
adc
xchg
daa
repnz
mov
pop
addl
xchg
or
inc
repnz
mov
mov
pusha
in
add
dec
jge
sub
dec
inc
push
mov
pop
jnp
pop
ss
cmp
jp
xchg
cld
or
jle
sub
daa
jl
or
add
add
adc
add
jns
mov
xchg
or
lods
push
lods
jge
push
push
dec
call
jne
incl
js
out
bound
popf
repz
inc
pop
jge
inc
decl
inc
xchg
lahf
in
push
xchg
fldl
testl
lds
testb
jecxz
lahf
xchg
inc
add
imul
pop
mov
ja
cmpsb
dec
fs
pusha
repnz
int
xor
adc
xchg
scas
imul
dec
sub
lds
push
dec
mov
pop
xchg
add
push
aaa
inc
cmp
pop
push
add
insb
dec
add
rcrl
loopne
test
jb
filds
adc
pop
iret
bound
movsb
data16
inc
push
cmpsb
or
mov
sahf
xchg
or
dec
lods
pop
sub
mov
push
lcall
inc
jb
dec
pop
lahf
gs
mov
aad
popf
mov
adc
paddusb
fisubrs
jo
arpl
adc
stc
inc
fmul
pop
or
xor
sahf
add
dec
cmp
std
pop
movsl
jl
dec
lock
lret
inc
mov
popf
int3
add
cmpsb
lret
pop
lock
adc
sti
bound
addr16
pushf
ror
data16
pop
cmpsl
mov
cvtdq2ps
outsl
adc
dec
adc
push
xlat
shll
cmp
iret
ds
mov
sbb
cmpl
test
lret
sub
lods
jae
adc
add
movsb
lcall
jae
push
roll
mov
jbe
xchg
push
push
mov
add
aaa
mov
pop
sti
nop
data16
jno
cmpsl
and
clc
xor
pop
repz
ds
cmp
aas
or
add
add
push
or
jl
xchg
stos
jg
mov
stos
add
mov
daa
shl
xchg
xchg
fnstenv
aam
bound
lahf
mov
shlb
aam
pop
cmp
push
xor
jge
xor
pop
push
repz
add
mov
nop
aad
testl
in
int
xchg
fadds
or
push
mov
jge
ds
sbb
arpl
movb
jb
ret
xchg
push
jbe
ja
and
out
pop
jns
popa
jmp
add
xchg
inc
add
or
sarb
xor
adc
in
dec
faddl
inc
jge
pop
mov
push
xchg
mov
pop
dec
sub
push
and
xor
imull
fisubrs
ret
pop
lods
mov
sub
stc
mov
sbb
adc
push
jp
mov
and
int3
jmp
add
push
add
sub
int3
scas
negb
add
mov
aaa
xlat
inc
pop
sub
jnp
lods
insb
popa
mov
repz
ror
js
xchg
pop
or
mov
dec
inc
dec
jae
cmp
repnz
mov
jl
pop
pop
cmp
dec
jae
adc
mov
jo
or
loope
outsb
mov
mov
outsb
mov
scas
mov
add
push
in
lahf
popa
jmp
and
call
mov
lcall
sbb
je
arpl
or
dec
jmp
test
sbb
mov
out
mov
add
iret
sbb
sub
xor
inc
js
inc
mov
scas
mov
cmp
int3
lds
idivb
sahf
orl
xor
fsubs
xchg
mov
inc
mov
std
add
ss
cwtl
sti
insb
xchg
and
add
push
sbb
ss
sbb
arpl
dec
daa
adc
sahf
roll
jne
adc
inc
or
push
mov
jle
sbbb
jle,pn
pop
fldenv
lret
mov
fchs
jecxz
pop
jl
jae
add
mov
cs
clc
xor
mov
xchg
dec
jns
jmp
cmp
mov
ja
dec
xchg
jnp
aas
cmp
xor
pushl
inc
xchg
add
push
xchg
jmp
mov
cwtl
lea
lcall
and
fdivrs
das
mov
xor
pop
add
orb
arpl
push
cld
or
lcall
jbe
lahf
add
loopne
stos
push
xor
scas
in
or
inc
ret
fwait
into
lods
mov
hlt
mov
dec
leave
mov
movsl
xlat
popf
cli
mov
std
std
xchg
jg
mov
add
fisubrs
cmp
adcb
jae
out
scas
mov
sbb
xchg
std
rolb
leave
cmp
inc
cmc
mov
xchg
sub
push
jnp
and
ss
jmp
pop
push
int
fs
or
pop
sti
push
int3
imul
pushf
xorl
pop
inc
mov
stc
aaa
sub
sbb
in
lods
add
int
mov
jo
push
popa
push
cmp
mov
dec
adc
pop
ja
jno
dec
sub
fildl
into
xlat
pusha
sub
xor
inc
mov
jbe
cmc
insl
jp
orb
mov
in
jecxz
jl
cmp
xor
cld
sub
xchg
mov
imul
sbb
orps
rclb
test
push
inc
stos
mov
jb
xchg
cmp
in
dec
cmp
push
xchg
test
and
dec
mov
push
sbb
sub
movsl
test
add
fnstcw
arpl
push
sbb
insl
jp
repnz
inc
inc
scas
fsubs
loop
daa
jle
imul
notb
add
idivl
stos
xor
pop
cmpsb
adc
dec
mov
sbb
sbb
insl
cs
add
cmp
sub
shrb
lods
pop
adc
scas
inc
sbb
add
xor
daa
jg
lret
mov
aad
jp
test
mov
adc
cmpsb
xchg
xchg
cmp
in
dec
push
or
push
sar
and
xchg
clc
gs
sahf
aam
sarl
cmp
ficoml
sbb
aaa
inc
xchg
push
out
fwait
jno
stos
dec
mov
adc
ds
sub
mov
fsubs
loopne
popf
jo
cmp
ja
imul
or
sub
jmp
mov
mov
mov
icebp
loop
sub
inc
sbbl
xorb
rol
loop
fadd
mov
jge
jnp
add
out
ficomps
ds
or
xlat
sbb
jg
loope
xchg
xor
jge
and
fistl
mov
ret
inc
hlt
ret
loope
sbb
fimuls
test
scas
dec
enter
in
ret
sbb
pop
lods
xor
mov
mov
cmpsb
inc
fbld
sub
cmpsb
scas
sbb
cmpsb
daa
mov
stos
or
lret
hlt
scas
in
imul
push
lret
sbb
sbb
fimuls
mov
dec
pop
mov
inc
scas
sbb
inc
xor
xchg
xor
and
cltd
sbb
out
ljmp
mov
xchg
mov
dec
xor
pop
stos
imul
test
repz
sbb
movsl
adc
cmpsl
out
and
shll
mov
and
cmp
fmull
gs
sbb
jb
mov
pop
sbb
cmc
mov
pop
sbb
dec
sbb
pop
xchg
leave
pop
push
jge
fsubs
loopne
xchg
ret
test
xchg
loopne
push
test
or
mov
in
outsl
adc
ljmp
mov
add
call
adc
inc
divb
add
fwait
push
sub
in
jns
cs
fnstcw
xor
mov
xchg
out
repz
inc
or
out
pop
test
mov
cwtl
movb
inc
push
lret
ja
jbe
fwait
lea
stos
xchg
addr16
xchg
pushl
xor
pop
pushf
cmpsb
mov
mov
or
aad
jnp
push
iret
loopne
push
cltd
xchg
bnd
adc
out
pop
push
ljmp
dec
dec
pop
add
inc
icebp
cwtl
xor
push
int
int3
loop
mov
int
xchg
mov
jne
sbb
jecxz
shr
ss
mov
repnz
cmpsl
nop
std
cld
sub
mul
xchg
jp
or
lahf
jge
inc
mov
aad
dec
test
outsl
jb
bound
mov
or
fsubl
xor
mov
nop
adc
cmpl
jb
cmp
or
imul
push
pop
or
lods
mov
test
xor
mov
inc
mov
sahf
sub
iret
pop
lods
cmpsb
cmp
movsl
push
push
cs
cmpl
jle
insl
fwait
adc
fwait
adc
sarb
cwtl
add
js
cmp
add
mov
lcall
fsubs
adc
cli
xchg
lods
mov
xchg
xchg
push
or
fwait
xchg
cmp
add
cmp
and
mov
sbb
pop
lods
add
daa
sbb
loop
std
repz
sub
das
lods
xor
add
xchg
xor
push
jo
push
push
lock
push
movsb
scas
mov
pushf
lds
mov
and
dec
in
outsl
iret
orb
shlb
lahf
xchg
push
int
fsubl
js
push
rolb
pusha
sbb
ret
or
and
mov
sub
in
dec
je
dec
push
in
sbb
in
lahf
out
scas
loope
xchg
movsl
pop
cmp
mov
mov
adc
lods
mov
lahf
jno
inc
inc
int3
testb
and
int3
out
add
imul
cltd
dec
dec
loope
imul
and
test
mov
pop
mov
fimuls
sbb
loope
dec
comiss
cmc
hlt
or
cmp
mov
xchg
cmpsl
pop
insb
int
add
bound
push
scas
popl
out
jns
sbb
cs
mov
xchg
adc
dec
sub
cmove
mov
pop
jno
pop
popl
adc
leave
cltd
mov
or
addr16
mov
mov
gs
xchg
xor
es
enter
mov
cmpsb
movsl
adc
negl
mov
xchg
xorl
jge
mov
std
cmp
scas
stos
jmp
mov
cmp
inc
push
pop
and
mov
fsub
pop
sbb
cmp
mov
or
mov
pop
or
xor
mov
pop
mov
or
xchg
cld
xchg
add
sub
fldenv
sbb
pop
out
mov
xorl
sbb
inc
clc
mov
inc
xchg
jb
add
movsb
and
xor
scas
or
mov
adc
mov
sbb
xor
lahf
add
pop
jecxz
mov
les
out
pop
mov
stos
outsl
jo
push
pop
mov
rorb
or
ja
test
xchg
add
xchg
or
push
je
lea
or
mov
cmc
cmp
test
adc
dec
xchg
js
frstor
mov
add
jno
cmp
addr16
popf
mov
inc
mov
ret
adc
es
xor
pop
test
inc
fldcw
je
mov
jnp
mov
mov
fs
neg
bound
std
push
push
lds
mov
loopne
cmc
and
adc
push
stos
pushf
pop
xlat
pusha
adc
sarb
adc
sub
js
ljmp
dec
add
bnd
outsl
jno
jmp
icebp
xchg
fsubrl
nop
sub
add
sub
es
jnp
sub
xchg
decb
hlt
push
mov
fucompp
rcll
movsl
and
and
ret
jns
int
mov
cwtl
outsb
pusha
lds
add
loop
add
mov
mov
jg
jns
popf
or
ds
push
popf
ret
adc
lahf
mov
jmp
sub
sbb
xchg
xor
jb
jg
push
add
adc
dec
test
outsl
xorl
and
test
jl
cmpsb
sbb
fadds
push
enter
ficomps
test
scas
cmp
inc
int
test
mov
push
clc
sub
jg
test
pop
push
fisubl
xor
dec
fbld
xor
lds
in
icebp
xchg
xchg
cmp
add
pop
jb
cmp
out
sahf
xchg
mov
lods
lds
in
adc
subl
mov
iret
jae
sbb
inc
test
mov
rcll
dec
pusha
imul
dec
cmc
sbbb
les
lods
popf
repz
jae
scas
adc
roll
test
cmp
push
sbb
push
jecxz
or
jno
shlb
pop
jmp
push
andl
pusha
loop
cli
enter
xchg
and
lds
or
hlt
fists
and
into
lcall
sahf
call
mov
ficompl
adc
adc
inc
cmp
mov
push
jnp
cld
and
mov
sub
imul
fnstenv
cmp
mov
or
test
and
aad
rorl
push
dec
mov
enter
sbb
pop
lahf
and
call
pop
mov
iret
push
mov
add
push
mov
cmp
enter
movntps
arpl
add
and
lock
cmp
jb
shr
pusha
aaa
jecxz
cmp
gs
xor
lea
and
jne
xchg
mov
mov
pop
hlt
push
test
xchg
pushw
inc
push
idivb
cld
jp
or
and
cmp
jo
dec
sbb
mov
fcmovne
inc
js
push
subl
pop
dec
loopne
gs
sub
ja
push
out
mov
imul
popa
in
std
xchg
or
in
shll
ja
sbb
scas
fdivrs
aam
sub
shlb
sub
pop
or
cmp
insb
cli
inc
pop
daa
outsb
lods
inc
and
sahf
das
cs
mov
fcoms
sub
mov
lahf
fcomps
and
ret
leave
xchg
les
fidivs
sarb
mov
mov
pop
xchg
xchg
hlt
jns
movsl
mov
sub
shrl
xchg
jl
push
sbb
out
lds
rclb
xchg
fwait
scas
dec
xchg
or
push
jmp
or
popl
arpl
jmp
adc
mov
in
or
clc
jle
dec
cmpsb
scas
adc
mov
ret
mov
add
jl
arpl
pop
jno
fs
fcompp
mov
xchg
pusha
aas
lods
sbb
pop
pop
ss
dec
hlt
xchg
lcall
adc
cmpsl
orl
inc
mov
lcall
sbb
into
push
sub
cmp
pop
xor
and
mov
inc
adc
mov
pop
inc
loope
cmpl
stos
bound
mov
push
shl
shlb
and
test
mov
add
dec
aas
xor
xor
push
movsb
mov
jle
ficomps
inc
out
cmp
dec
fidivrl
pop
jae
jbe
pop
push
out
xchg
inc
dec
test
mov
imul
cmpb
ds
dec
lods
or
xlat
insb
leave
cmp
sbb
js
pextrw
or
xlat
and
ljmp
jns
enter
mov
or
cmc
movsl
add
into
or
jo
push
jbe
shl
cmpb
push
push
jnp
pop
adc
loopne
xchg
inc
pushf
mov
adcb
dec
mov
js
mov
int
es
adc
inc
mov
out
inc
xchg
xchg
fiadds
xorb
add
adc
popa
out
mov
ret
ds
xor
dec
push
push
popa
aas
sbb
nop
imul
mov
mov
pop
cltd
push
imul
lahf
mov
repz
lock
adc
orb
mov
into
mov
mov
xor
or
pop
cmp
mov
or
xchg
testl
out
hlt
loope
pop
cmp
in
js
mov
ja
mov
mov
mov
scas
jge
and
int
mov
inc
fldcw
pop
dec
mov
cli
jmp
mov
sbb
pop
jns
jnp
pop
xchg
mov
or
or
mov
mov
or
repnz
test
mov
fstl
add
and
clc
mov
jmp
sbb
fcmovnb
pop
stos
hlt
mov
out
push
xor
fdivrl
jg
and
inc
fcoms
jnp
aam
mov
icebp
dec
aas
xchg
push
out
xchg
xchg
jno
andl
sbb
mov
test
ss
fsubs
xchg
cmp
dec
xchg
adc
xchg
rorl
pop
ds
imul
roll
mov
pop
jge
aas
xorl
into
inc
dec
out
pop
mov
jns
dec
daa
sbb
inc
test
js
addr16
xor
arpl
mov
dec
pop
into
clc
pushf
jne
mov
dec
xorl
loope
sub
rcl
cli
dec
pusha
subl
or
pusha
inc
sbb
aad
xchg
xchg
push
sbb
cmp
out
jge
int3
popa
inc
dec
mov
ja
imul
jns
sbb
and
ss
or
prefetch
jbe
jp
pop
mov
inc
xchg
pop
dec
out
negb
push
xor
ret
mov
sub
xchg
mov
xor
call
imul
adc
xchg
insl
leave
movsb
inc
repz
jnp
adc
inc
adc
inc
mov
roll
ds
xor
sub
shll
jg
cltd
stos
inc
cs
aas
mov
rclb
in
ds
insl
inc
or
xor
in
or
fs
adc
sub
mov
push
sbb
cs
sbb
adc
daa
das
icebp
adc
inc
jbe
xchg
lea
icebp
movsl
cwtl
xor
je
insb
cli
cmp
addl
stos
pop
mov
cmp
fnstenv
xchg
imull
mov
imul
addr16
shll
jl
sbb
cmp
xchg
push
es
cmp
xchg
aad
enter
jb
inc
outsl
pop
dec
fisttpl
cld
mov
popa
into
dec
cwtl
push
rolb
mov
ljmp
xor
scas
dec
into
bound
addr16
mov
fmuls
push
or
std
add
and
lods
xor
mov
int
jl
mov
cmp
xchg
mov
pop
sbb
fstl
xchg
loopne
mov
mov
aam
mov
aaa
jmp
mov
cmpsb
cmpl
mov
insb
jle
rolb
mov
mov
cmp
xchg
idiv
cmp
push
push
push
cwtl
ds
jge
xchg
mov
cli
loopne
jae
in
mov
hlt
jg
mov
mov
jp
jg
repnz
push
mov
notb
jns
xchg
inc
insb
inc
jecxz
pop
mov
fildll
mov
mov
and
arpl
jge
int3
sbb
scas
mov
or
cs
xchg
jae
rcll
jle
into
cmp
dec
xchg
out
out
cmc
movsb
loopne
fs
mov
arpl
cwtl
dec
das
pusha
push
int
inc
xchg
push
sti
cmp
ret
mov
push
fisubl
sbb
mov
leave
daa
push
lcall
mov
adc
insl
sahf
push
sub
mov
addr16
rcl
cmp
push
sahf
sti
mov
test
dec
popa
gs
mov
ja
leave
mov
gs
and
frstor
loopne
and
sub
xchg
push
cvttps2pi
mov
push
scas
insl
in
lods
inc
jno
mov
push
lods
je
jns
jmp
dec
icebp
mov
mov
dec
mov
repnz
lea
mov
xor
das
xchg
cmp
shl
insl
in
mov
cmp
mov
and
jno
xorb
jle
sbb
outsb
popa
aaa
adc
dec
test
imul
xor
push
ljmp
insl
cmp
aaa
push
cmp
mov
push
das
cmp
loop
movsb
aad
je
loopne
lock
inc
xor
int
mov
jb
push
pushf
jmp
sub
pop
fwait
orb
enter
lcall
iret
pop
adc
aad
inc
dec
dec
pop
loope
das
popa
notl
add
das
mov
ss
mov
lds
jno,pn
dec
shlb
js
sbb
inc
aad
jmp
add
inc
add
loopne
inc
fidivs
arpl
int3
les
xor
jae
movl
inc
ja
adc
or
cmpsl
sarl
or
dec
jl
and
jne
adc
add
shr
xor
leave
shrl
repz
adc
orb
inc
cmp
add
mov
mov
ret
clc
bound
ljmp
not
jl
xor
dec
or
out
adc
sbb
or
dec
leave
mov
out
and
mov
movups
dec
push
cs
inc
mov
jae
int
ficomps
mov
mov
sub
in
fcoml
push
in
sbb
pop
pop
sbb
scas
and
mov
movsb
icebp
or
stos
pusha
adc
movl
jo
nop
hlt
fstl
inc
outsb
aad
jb
push
orb
pop
pushl
insl
xor
mov
lcall
aaa
sub
test
loop
jp
fldenv
and
xorl
imul
sbb
inc
mov
cmp
lock
in
xor
lock
cmp
mov
movsb
filds
pop
sbb
push
push
jae
inc
inc
dec
jg
mov
mov
inc
lret
int3
das
stc
cmc
push
enter
mov
enter
mov
fs
mov
fwait
inc
clc
nop
mov
pop
add
out
mov
idivb
out
mov
pusha
rcll
addr16
pop
popa
idivl
shlb
add
pop
les
lods
clc
imul
fadd
sbb
into
xor
std
mov
lcall
imul
cmp
rcll
push
imul
xchg
popf
faddl
mov
sub
mov
jl
add
jle
or
addr16
push
xchg
cmpsb
mov
adc
pop
mov
push
das
out
aas
mul
adcb
jecxz
xchg
add
imul
mov
push
aam
sub
repnz
pop
movb
adc
lods
dec
pop
inc
and
push
and
hlt
sub
xchg
cmp
mov
or
adc
mov
jp
add
pop
movsl
dec
stc
loopne
mov
jno
jae
sbb
push
inc
adc
sub
lahf
xchg
mov
popf
test
arpl
sti
in
ret
sub
aaa
clc
dec
jne
repz
xchg
push
and
cmp
cmp
cmp
sub
mov
mov
in
and
sub
mov
inc
mov
lret
testl
dec
int3
sbb
hlt
lock
sbbb
cmp
push
pop
pop
mov
ds
lods
bound
ljmp
and
push
pop
and
es
jle
or
adc
mov
jbe
imul
mov
cmp
mov
clc
test
std
or
gs
popf
enter
sti
int3
cmp
inc
incl
cs
and
in
add
dec
push
jns
xor
or
sub
test
sbb
jae
pop
or
jo
int
xor
rolb
fsts
jecxz
or
xchg
or
fildll
jp
and
sub
mov
enter
mov
test
fnstcw
cli
repz
popf
inc
cmp
jecxz
or
imul
loopne
inc
imul
icebp
adc
xchg
loopne
je
sub
mov
adc
fisttps
adc
dec
mov
shl
mov
mov
and
and
repz
cmp
sarb
inc
jb
jb
aam
int3
popf
mov
and
push
leave
ficoml
sbb
or
mov
mov
and
xor
fs
cwtl
mov
loopne
xchg
sahf
mov
dec
hlt
test
sahf
cwtl
out
push
fs
enter
mov
jbe
sbbl
or
mov
inc
lcall
push
push
xchg
movl
jle
push
adc
outsl
xchg
mov
scas
add
dec
sub
imul
dec
or
mov
xchg
push
add
loop
jle
femms
inc
mov
and
xchg
dec
mov
mov
ffree
inc
repnz
scas
stos
iret
cld
sub
cltd
and
inc
sbb
sbb
adc
pop
fs
add
cmp
dec
mov
test
cmpl
scas
das
add
mov
or
cli
stos
icebp
in
nop
add
and
pop
inc
imul
mov
mov
push
xor
and
cmp
mov
scas
pop
es
andl
mov
add
loope
incb
mov
lcall
cld
arpl
push
jle
popf
jl
into
fcoms
rol
sbb
fidivl
push
jmp
lock
mov
pop
out
xchg
fsts
cmp
les
mov
cmpb
movsl
sahf
dec
and
loopne
mov
loope
and
sbb
adc
rcl
and
loop
push
pushf
lods
andl
aaa
or
sub
sub
jg
out
add
popa
inc
ds
or
pop
cmp
test
test
pop
stos
call
enter
pushf
testl
mov
ret
adc
daa
mov
sub
lret
imul
and
add
outsl
mov
in
bound
push
pop
adc
add
dec
add
fwait
jne
je
cmp
jns
cmp
dec
jle
out
cs
xor
add
fwait
push
inc
fcmovu
nop
lcall
test
div
out
popa
xchg
clc
inc
add
popf
je
sti
dec
jp
mov
mov
mov
repz
addr16
sub
add
jae
or
xchg
jno
inc
ficomps
cmp
push
out
insl
or
lds
lcall
call
outsl
xchg
adc
std
mov
xlat
out
mov
mov
xor
gs
fwait
popf
sub
cmp
icebp
mov
jle
iret
or
in
sub
mov
outsl
mov
xchg
sbb
push
or
jo
loopne
jae
jb
sahf
jge
push
test
mov
inc
adc
mov
xchg
dec
fwait
push
dec
cmp
mov
lcall
or
fwait
or
mov
icebp
mov
lret
mov
out
jno
dec
or
cmp
jg
and
xor
or
lcall
jns
xchg
movsb
add
mov
stos
inc
fisttpll
xchg
imul
ret
into
lret
dec
lret
lds
or
push
push
mov
push
and
push
add
test
sub
mov
push
aaa
ret
push
and
popa
js
adc
js
imul
movsb
scas
cmp
inc
mov
mov
stos
test
notb
jle
jne
shll
scas
cmc
jne
test
sub
add
lods
mov
ds
jg
push
sbb
bound
mov
mov
in
sbb
xchg
inc
xorl
mov
dec
insb
js
jnp
pop
or
shrb
jle
mov
sub
sub
jns
adc
scas
dec
hlt
addr16
jmp
icebp
pop
sub
in
scas
xchg
ficoms
test
jns
push
cld
pop
adc
hlt
inc
out
sbb
cmp
bound
mov
mov
xchg
jbe
or
add
dec
vpsrad
ficoms
movsb
mov
push
pushl
out
mov
sti
adc
rclb
ret
mov
les
sbbl
insb
divb
shr
push
sbbl
jmp
adc
loop
shlb
mov
loope
fsubs
stos
adc
add
mov
iret
jle
jge
cmp
dec
sub
insl
out
cmc
sub
mov
cmp
into
adc
bound
and
adc
sub
out
sahf
jl
cmp
or
adc
mov
aad
addl
shl
scas
imul
sbb
insb
cmpl
push
push
mov
aas
sub
or
sbb
arpl
fst
das
inc
xchg
mov
sbb
mov
sar
xchg
mov
shrl
and
test
movsl
jmp
movsb
or
xchg
test
popf
inc
adc
sbb
jb
adc
int3
stos
cwtl
inc
ret
roll
fs
sbb
adc
xchg
idiv
jo
xchg
nop
mov
dec
add
fsubl
cmp
and
lds
arpl
orb
sub
loope
shlb
xchg
jle
xchg
pop
push
lea
sub
pop
jp
add
and
ja
cmp
mov
dec
xchg
push
in
mov
push
push
add
pop
cmp
sub
jp
xchg
loop
aaa
sbb
jge
test
xchg
outsb
cmpsb
mov
std
mov
not
movsl
pop
adcl
mov
dec
inc
xlat
int
push
push
pop
cmp
cmp
cmpsl
xor
push
mov
sbb
dec
add
adc
add
add
into
bnd
sub
pop
popa
or
dec
and
dec
popf
leave
fs
jne
stos
and
pop
xor
decb
loopne
add
imul
jnp
in
cmp
xlat
jecxz
addr16
dec
sub
mov
sbb
cltd
shrb
into
inc
jle
inc
out
jns
or
cld
mov
mov
pop
leave
jno
jo
xchg
and
push
sub
movsb
fistl
lret
loope
sub
je
add
iret
mov
inc
jmp
sub
insb
pop
inc
dec
sti
fwait
xchg
sub
jbe
rcll
cltd
jecxz
inc
dec
mov
jmp
cmp
pop
lret
movsb
inc
test
mov
lock
stos
xlat
rclb
bound
fdivrl
in
jp
lock
pop
shr
lds
or
cmp
mov
adc
stos
dec
jae
bound
outsl
dec
xchg
jecxz
in
out
test
dec
and
icebp
adcb
je
leave
jno
cmc
lods
jbe
jae
mov
ja
es
xchg
loope
cmpsl
push
mov
and
sbb
in
jmp
adc
mov
fucomp
push
add
inc
cmp
xchg
mov
mov
mov
xlat
fadd
popf
pushf
sub
cmp
or
pop
xchg
out
into
mov
aam
mov
stc
push
movsb
leave
push
and
dec
aad
xchg
sub
pop
pop
popf
or
sahf
lret
ror
mov
aaa
cld
cmp
movsb
mov
hlt
cmpsb
bound
xor
insl
imul
mov
jns
jb
push
push
adc
scas
cmc
or
mov
popa
jnp
ret
leave
xchg
pop
aam
sbbb
idivb
push
leave
adc
jno
scas
js
mov
inc
push
jbe
std
mov
xor
sbb
inc
fs
fldl
push
xchg
sub
xchg
out
in
into
sahf
lock
je
mov
fiaddl
rcr
rorl
insl
sub
fcompp
add
in
xchg
cmp
cwtl
lahf
sahf
mov
xchg
mov
out
pop
xor
arpl
cltd
adc
dec
xor
pop
xchg
sub
jg
addb
insl
test
jmp
adc
test
push
hlt
push
rorl
xor
dec
out
out
push
mov
imul
repnz
sbbl
xchg
into
sbb
mov
or
pop
bound
stos
add
jp
leave
dec
push
mov
sub
mov
rclb
sub
and
leave
push
aad
or
and
inc
fs
dec
mov
cmp
in
pop
test
arpl
mov
lret
and
jmp
movsl
test
movsl
inc
ja
loopne
xchg
and
sarl
popa
cmpsl
shrl
add
jmp
out
test
xchg
fldt
or
jno
incl
pop
add
sbb
jb
push
jmp
fwait
out
cmp
or
outsb
or
lcall
js
sub
ficoms
sbb
sub
ljmp
cmc
mulb
ja
xor
mov
xchg
mov
sub
jecxz
mov
dec
loope
xor
pop
and
push
mov
xchg
pop
mov
add
fnstcw
adc
mov
jecxz
cmp
push
cwtl
jb
mov
in
call
push
mov
mov
mov
std
stos
lcall
movsb
xor
aam
mov
cmpsb
test
sub
push
mov
xor
loope
cltd
nop
popl
imul
dec
mov
mov
sbb
fisubrl
cmp
imul
data16
or
outsl
adc
aaa
or
or
aaa
mov
add
ret
add
shll
pop
test
mov
adc
pop
adc
rcr
enter
outsl
mov
in
inc
mov
mov
out
dec
mov
mov
and
cmpsl
fsub
cmpl
shlb
popa
ja
sub
int
adcl
bnd
sub
jecxz
xchg
push
pop
icebp
cmp
ljmp
lahf
dec
mov
sti
popa
mov
sbb
xor
mov
cmp
sub
ljmp
dec
dec
imul
imul
mov
mov
jecxz
push
lds
inc
popf
mov
mov
lret
out
inc
fbld
shrl
dec
lret
mov
fdivl
mov
insb
sub
jae
dec
mov
idiv
dec
push
cmpl
cs
mov
cltd
xor
lds
popf
mov
jae
xor
scas
or
fmuls
xchg
mov
xchg
cltd
lahf
aad
rolb
sub
fs
inc
icebp
and
and
mov
scas
out
xchg
bound
pop
mov
cld
ljmp
fwait
test
push
aad
mov
out
push
fadds
in
push
and
pop
xchg
xorl
call
popa
loop
mov
imul
test
mov
push
lods
mov
fcomps
fdivrs
inc
xor
enter
jbe
sarl
lret
rorl
fiaddl
and
jecxz
dec
iret
rcrb
mov
lahf
pop
push
out
mov
cmc
and
subl
xor
rorb
into
jge
dec
lods
push
jb
insl
adc
fs
sub
subl
shr
mov
sub
add
shrb
add
and
pop
push
ds
pop
pop
lret
dec
lea
mov
cmc
sub
add
inc
push
mov
repnz
mov
insb
inc
in
sub
sets
and
stc
aam
sub
mov
inc
mov
and
iret
add
push
inc
loop
ds
iret
test
in
rorb
mov
sub
sti
mov
subb
bound
adc
outsl
jae
add
loope
mov
jg
inc
movsl
jp
sub
sub
xor
push
cmp
xchg
call
sbb
pop
lcall
sub
ds
mov
mov
cmp
in
movsl
cmpsl
test
add
jmp
pop
pop
aad
push
mov
aam
ds
jno
fnsave
addl
cs
xor
jo
push
mov
adc
mulb
add
or
sub
and
les
nop
imul
shll
aam
outsl
jb
fidivl
outsl
xor
daa
push
inc
callw
jp
sub
out
dec
adc
and
imul
push
xchg
or
fnstcw
or
sbb
jnp
mov
in
push
mov
fsubp
dec
mov
adc
cmp
jle
negb
cs
pop
cmpsb
xchg
mov
lcall
mov
sub
ss
or
xchg
push
and
notb
ficompl
mov
lods
pop
jns
push
push
adc
rcll
lea
clc
idivb
fistpl
push
cwtl
push
popf
test
insl
je
cmp
mov
and
or
jb
xchg
fcomip
xchg
in
jo
xchg
fbstp
and
mov
push
mov
adc
and
add
xchg
jb
inc
mov
inc
ljmp
adc
push
ds
pop
jbe
mov
mov
fptan
aas
sbb
pusha
add
test
mov
fisubl
pop
js
data16
jg
mov
dec
mov
popa
sahf
enter
mov
add
popa
rcpps
ja
xor
stc
sarb
test
dec
mov
loopne
pushf
dec
mov
enter
movsl
push
mov
adc
mov
cmp
inc
shr
mov
xchg
mov
insb
xchg
xchg
lahf
xlat
adc
mulb
xchg
bound
add
dec
or
dec
inc
sti
ss
cmc
xorl
shlb
scas
xchg
inc
in
stos
lahf
rsqrtps
xchg
jno
xor
dec
add
cli
outsl
call
repnz
mulb
lret
enter
push
dec
xchg
clc
lret
pop
or
xchg
jle
add
adc
out
int3
fmul
jns
cmp
jmp
pusha
pop
rcl
out
imul
xor
test
jns
repz
mov
mov
lea
add
loop
and
xchg
adc
icebp
cmp
int
mov
add
lock
in
mov
mov
jae
mov
sbb
mov
cmp
imul
aad
add
push
inc
scas
jl
and
int
cmc
mov
pop
addr16
pop
out
jo
outsb
addb
in
xchg
nop
cwtl
pop
repnz
mov
push
xchg
xchg
scas
mov
jecxz
outsl
movsl
jne
add
scas
mov
xchg
add
jae
inc
and
ds
pop
outsl
mov
es
xlat
out
outsb
aas
jmp
mov
shl
movsl
in
mov
bound
xor
adc
add
mov
loop
add
mov
rorl
and
sub
add
xchg
mov
cmp
xchg
repz
mov
or
sar
test
stos
push
int
fdivrs
jle
xchg
movsb
or
sbb
pop
cmpsl
loop
dec
jbe
fs
movsb
or
enter
ljmp
mov
imul
inc
push
imul
lods
mov
push
pop
lods
xchg
xchg
daa
das
jnp
in
aam
cmpsl
or
test
lret
inc
hlt
push
insl
lock
or
cltd
lret
jno
and
push
cltd
mov
sti
xor
in
cmp
inc
stos
clc
and
imul
inc
mulb
inc
pop
jecxz
add
outsb
add
lret
or
xchg
test
scas
in
divb
in
inc
ljmp
sbb
inc
ret
addr16
cltd
in
das
ret
cmp
mov
cmp
push
in
loop
inc
aad
cmp
filds
xlat
cmp
cs
adc
pop
add
xor
or
mov
sub
insl
les
jecxz
sub
cmp
fcmovnb
inc
faddl
xchg
push
pop
mov
inc
in
icebp
sub
pop
sbb
fisttpll
mov
and
mov
lock
mov
stos
mov
or
jne
sub
cld
mov
and
and
jmp
bsr
mov
inc
push
sub
test
fisubrs
and
adc
push
daa
mov
jl
add
int
testb
adc
mov
nop
pop
cmp
dec
ss
daa
lret
inc
or
dec
dec
mov
ja
or
pop
shr
out
addl
jecxz
test
pushf
push
cs
xlat
sbbl
jp
andb
xchg
dec
pop
in
inc
xor
jne
aas
sub
mov
dec
inc
xor
adc
cmpsb
aad
mov
push
popf
insl
cmp
mov
mov
mov
sub
insl
and
out
push
test
xchg
cmp
shll
sub
or
jb
push
sti
xchg
psubd
jle
cmp
jl
std
inc
and
rcll
inc
in
jo
loope
add
rcrl
mov
xor
pop
mov
add
mov
and
xor
add
icebp
stos
inc
test
push
push
jl
jmp
fstps
movb
cmpsl
sbb
add
mov
sbb
dec
lds
imul
push
xor
push
lret
mov
out
cwtl
sahf
dec
xor
push
mov
push
adc
mov
mov
adc
mov
push
cmpsb
ja
outsl
fisttpl
add
mov
xchg
mov
xchg
sbb
clc
lods
test
imul
std
inc
jne
lcall
dec
mov
subb
imul
push
cmc
xchg
or
ficoml
xor
mov
int
sub
cmp
js
jg
enter
or
cmp
sar
mov
sub
arpl
insb
jg
lea
je
xor
xor
jp
scas
sub
xchg
in
mov
jbe
jp
scas
decl
orb
mov
fcompl
push
arpl
int
vprotw
data16
pop
lock
or
pop
sbb
xor
loope
stos
jo
test
inc
mov
enter
adc
dec
scas
push
mov
xchg
gs
sar
cmp
push
cltd
add
dec
fxch
push
movsb
test
add
test
je
xor
push
shrb
jp
and
mov
les
push
pop
stc
or
mov
push
push
xor
cmp
inc
enter
xchg
mov
sbb
lahf
and
push
mov
pusha
cmp
mov
fsubl
inc
cmc
sbb
aas
adc
dec
insl
or
rcrb
dec
and
cmp
mov
mov
xchg
mov
aaa
daa
mov
add
clc
mov
cmp
aaa
aaa
push
outsl
sbb
inc
or
sbb
pusha
add
imul
in
fstpl
ja
mov
rcr
jb
cmp
sarl
jno
or
hlt
mov
inc
mov
jns
xchg
lret
adc
xor
pushf
fisubrs
jg
orb
jge
pop
mov
arpl
je
lret
jnp
jp
test
jno
dec
xor
nop
aad
pop
jno
mov
out
cli
aas
les
inc
cs
inc
lret
es
push
jno
mov
je
push
fcmove
scas
and
loope
test
les
xor
push
mov
xchg
mov
mov
test
cld
int3
rcll
nop
ljmp
push
sbb
mov
out
mov
or
push
cmp
add
es
jl
inc
inc
mov
push
mov
mov
or
sahf
jmp
jmp
mov
cmp
int3
add
add
or
xchg
stc
cmp
sub
fdivr
xchg
jbe
js
push
push
shll
fcoms
jp
lret
jo
pushf
dec
out
push
out
stos
mov
dec
xor
test
andb
sarb
mov
stos
jmp
add
daa
sar
sti
mov
sub
daa
lods
mov
testl
and
xor
in
cmpsl
mov
jns
nop
mov
xor
imul
mov
gs
lods
rcr
jbe
and
mov
mov
pop
test
sarl
pop
cmp
mov
push
mov
daa
shlb
shl
in
sbb
mov
cmpl
test
loop
adc
in
push
jne
sar
pop
aaa
dec
rcll
cmp
movsb
lret
in
mov
mov
push
jge
addr16
fwait
push
xor
mov
loopne
sbb
rolb
push
test
mov
clc
mov
clc
fisubrs
rolb
mov
push
lods
add
add
jnp
pop
pop
xchg
add
sti
adc
inc
mov
xor
lahf
jge
shrl
fdivl
ja
mov
mov
jns
mov
jo
mov
int3
mov
or
xor
pop
in
outsb
movsb
scas
fldcw
dec
push
add
cld
jle
adc
or
shl
push
mov
xchg
fildll
mov
subl
in
sub
lcall
test
inc
dec
adc
insb
dec
pop
cmp
arpl
sub
push
mov
arpl
les
push
fistpll
call
stos
stos
out
mov
scas
pop
cmp
sti
insb
xor
mov
lods
sbb
scas
inc
dec
xor
scas
ds
pusha
mov
rep
out
cmp
ss
into
in
and
stos
add
mov
mov
mov
cmpsb
inc
inc
out
aam
sti
push
jp
add
pop
mov
or
js
inc
mov
jno
and
jg
push
cmp
pop
gs
or
cmc
push
sbb
mov
or
sub
xchg
dec
aam
scas
jae
mov
mov
inc
call
arpl
cs
rcrb
stos
inc
sub
jns
stos
xor
es
clc
sub
xorl
mov
mov
xor
mov
mov
mov
xchg
addr16
sahf
cmpsb
es
scas
or
lret
sub
mov
jle
sub
js
pop
sbb
test
out
mov
ljmp
push
inc
jno
sbb
sub
roll
int3
mov
std
and
mov
mov
movsl
or
cld
dec
xor
dec
sub
sbb
pop
mov
clc
xchg
xor
test
mov
sbb
jmp
aad
clc
out
ds
neg
ret
pop
push
pop
push
sti
fs
arpl
idiv
test
inc
flds
push
iret
jnp
sub
fisubrl
xor
icebp
mov
in
xor
cmp
xor
mov
sub
mov
jp
mov
or
cmpsb
and
icebp
gs
xor
popa
jge
cli
sub
les
mov
subb
in
mov
jl
enter
fs
int
or
sub
jno
pop
out
sub
mov
cmc
loop
rcrl
jne
xchg
sbb
push
lods
icebp
push
mov
inc
arpl
scas
aaa
xor
aaa
mov
cwtl
push
iret
adc
mov
jge
mov
xchg
adc
stos
push
inc
xor
sbb
or
cmpsl
sub
xor
test
adc
or
pop
mov
popf
fsts
pop
xchg
lahf
jo
xchg
in
test
mov
sarb
insb
aam
adc
mov
cmp
mov
or
jle
test
scas
inc
ss
ret
pop
and
xlat
int3
ret
filds
mov
daa
inc
int3
stos
xchg
rclb
sti
iret
ds
imul
jnp
in
dec
pop
jge
pop
mov
lock
push
push
mov
inc
repz
sub
xor
sbbl
adc
es
xchg
sub
fists
je
and
jnp
jo
popa
push
lods
out
push
cmp
sbb
std
inc
and
imul
cmp
pusha
mov
sub
cltd
push
mov
cltd
aam
mov
pop
mov
gs
icebp
sub
dec
pop
subb
lret
xchg
fucomip
cs
mov
xchg
in
cmpb
push
cld
shrb
add
stos
pop
mov
sbbl
stos
or
sbb
mov
cwtl
jo
jo
into
orw
xchg
pop
aaa
xor
jo
sub
mov
cs
imul
xchg
push
pop
mov
mov
jecxz
add
mov
stos
ss
cld
mov
fdiv
pop
add
sbb
inc
sbb
loop
xchg
fwait
sbb
rclb
pop
out
aas
hlt
bound
sbb
roll
pop
cwtl
pop
lahf
pop
pop
sarl
sbb
jle
fbld
imul
cmp
or
mov
pusha
clc
jl
fisubrl
add
out
inc
adc
rcll
and
enter
sti
leave
cmp
jle
popf
dec
and
mov
fdivs
insl
cld
cs
mov
sbb
pop
in
test
in
aaa
int
push
pop
adcb
mov
fadds
std
mov
call
push
int3
cmp
ljmp
aam
dec
pop
fisubs
shrl
jne
test
cmp
push
popa
es
mov
pop
pushf
mov
ud0
xor
push
in
mov
jne
je
xor
cmp
xor
mov
fiadds
adc
outsb
dec
sub
mov
push
daa
daa
push
mov
int
lcall
sub
cmp
repz
lods
push
shrl
es
je
shll
lahf
ja
aas
dec
mov
push
popa
in
push
pop
lds
outsb
dec
mov
push
mov
stc
shrl
pop
ja
out
sbb
xchg
loope
sub
icebp
cmp
jb
jg
xchg
pop
mov
push
push
cmpl
sbbb
popa
mov
and
xchg
or
inc
into
cmp
and
sub
loop
stos
inc
mov
out
xor
adc
cltd
loope
mov
lahf
inc
mov
adc
cli
mov
cmp
sub
mov
loope
fstps
mov
sub
xchg
push
call
in
and
popa
mov
jno
mov
clc
pop
hlt
and
inc
les
outsl
mov
in
enter
repnz
jmp
out
in
mov
imulb
xchg
or
insb
jo
movsb
repz
pop
add
jle
xor
imul
add
repz
fwait
push
loop
fnstcw
mov
loope
mov
arpl
aam
pop
cmp
push
pop
popf
xlat
inc
arpl
sbb
jg
in
push
arpl
lret
mov
push
xor
add
add
pop
or
rcr
ja
mov
aas
repz
inc
xor
arpl
faddl
cmpb
clc
mov
mov
xor
test
testb
xor
jbe
add
lods
test
imul
push
jne
cmp
cmp
ret
shll
xor
cmpsl
xor
stc
sarl
and
imul
pop
jge
int
jge
sbbb
clc
shlb
pop
fcmovnu
shlb
xor
stc
pop
sub
sahf
adc
jno
stos
jne
test
mov
xlat
fwait
aad
mov
idiv
mulb
stos
fs
cltd
cmp
in
in
mov
jne
mov
int3
hlt
test
dec
xlat
mov
decb
rol
fsubp
movsl
std
push
stos
mov
orl
ret
xchg
orb
mov
jmp
pop
sbb
lcall
lret
adc
pop
cmp
xchg
popa
in
bound
outsb
gs
movsl
xor
or
lcall
rcr
mov
int3
mov
lods
frstor
je
adc
cld
enter
dec
cmp
repnz
mov
icebp
push
std
repz
dec
and
daa
adc
sub
xchg
xchg
cmpl
test
inc
jae
sub
mov
mov
out
fidivl
fisubs
cmpsl
adc
mov
cli
es
shll
rcl
mov
xor
cmp
stc
repnz
mov
sahf
push
pushf
xchg
inc
add
scas
jbe
lret
and
aas
mov
out
movb
daa
push
dec
sbb
ret
or
imul
rorl
fnstcw
std
mov
adc
mov
add
cltd
dec
js
mov
lods
lods
lcall
push
lret
clc
enter
mov
mov
push
jns
fwait
dec
push
mov
sub
js
out
stos
mov
xchg
mov
jo
mov
or
xchg
aaa
mov
jnp
scas
scas
sti
inc
lcall
movsl
xorl
shlb
jle
jge
enter
repnz
inc
ret
scas
cmpsb
push
inc
mov
mov
iret
dec
or
mov
pop
mov
mov
push
push
addr16
mov
or
jecxz
jbe
cmp
xor
push
subb
es
out
in
mov
movsl
jg
push
js
mov
lret
pop
pop
inc
data16
rol
mov
fldcw
sbb
inc
push
popa
sbb
lods
out
scas
rorl
fnstenv
les
sar
movsl
pop
jno
daa
add
add
stc
xor
cmp
lret
rcrl
sub
cwtl
push
lods
rclb
insb
out
fldcw
shlb
mov
mov
es
out
inc
and
imul
into
jno
mov
aad
push
in
jno
or
and
and
jecxz
int
andl
cld
sub
int
aaa
sub
outsl
hlt
loopne
xchg
mov
jge
in
pop
bound
test
sbb
ret
mov
in
push
dec
inc
xor
loope
jmp
js
push
outsb
test
pop
pop
jno
es
xor
scas
xor
pop
jl
es
fwait
aaa
adc
fisubl
inc
mov
clc
test
or
int3
rorb
jne
and
loope
jmp
sahf
loop
int
pop
mov
das
lds
add
sub
mov
aaa
enter
push
mov
dec
xchg
ja
rcrl
push
mov
iret
out
dec
mov
push
mov
movsb
pop
cmp
in
ja
cmp
mov
jnp
and
lret
cmpsl
mov
and
jbe
rcrb
inc
pop
test
mov
or
add
adcl
and
xor
rcrb
push
loop
mov
cmp
test
push
add
mov
ds
adc
enter
sbb
add
fwait
push
and
gs
subb
mov
push
mov
dec
fidivl
out
pop
wbinvd
pop
sbb
subl
cmp
scas
xchg
fdivrs
testl
out
loopne
dec
ljmp
ja
adc
or
lahf
mov
and
shrb
loope
xor
push
mov
sbb
aaa
fdivl
xchg
xchg
cmp
out
add
clc
xor
xchg
scas
repz
fucomip
pop
xchg
jb
ljmp
fdivp
mov
jo
cmpl
mov
out
push
scas
dec
and
xchg
add
adc
adc
pop
jno
pop
xchg
out
inc
aaa
xchg
icebp
xchg
lcall
leave
out
xchg
mov
xchg
sub
sbb
or
push
push
sbb
mov
enter
outsl
sbb
sti
pop
daa
mov
xor
testl
xchg
js
movsb
inc
sub
mov
stos
movsl
fnsave
sbb
xchg
xor
jle
in
adcl
pusha
dec
mov
xor
call
or
popa
ret
inc
fst
cmp
jmp
jle
out
fstpt
push
nop
or
jg
out
add
mov
inc
push
or
je
mov
mov
push
fdivs
xchg
das
sbb
mov
push
fcmovnbe
or
mov
xchg
xchg
mov
push
mov
aam
shll
shlb
aam
ljmp
cmp
xchg
adcl
and
mov
inc
xchg
in
or
and
lods
add
jb
cmp
call
cmp
mov
into
loop
cwtl
and
xorl
inc
xlat
dec
pop
jmp
xchg
xchg
push
popf
int3
jle
rorb
mov
pop
push
out
lods
out
sub
test
pusha
xchg
and
call
cmp
add
lock
add
push
subl
in
cli
fiadds
sub
out
clc
dec
dec
cmpb
cmp
adc
les
mov
mov
scas
adc
scas
jo
xor
jae
loopne
push
insl
cmpsl
sbb
jp
stos
jbe
cmpsb
es
mov
xchg
mov
out
pop
jge
push
fstp
adc
dec
push
gs
out
imul
xor
push
ficompl
mov
imul
daa
xlat
sub
and
and
cli
icebp
out
dec
and
ja
stos
lret
xor
lods
in
mov
cwtl
inc
cli
inc
dec
and
cmp
push
mov
test
mov
pop
les
push
mov
aaa
xchg
push
repz
pop
sahf
xor
add
lea
adc
ds
gs
mov
jg
icebp
push
out
mov
cltd
pop
jb
dec
mov
std
movsb
xchg
popa
pop
sbb
sbb
inc
ja
enter
testb
lds
int
add
arpl
dec
mov
inc
mov
pop
mov
jle
cmp
push
add
aas
popa
call
ja
pop
ror
jg
jo
sub
cmp
xchg
mov
xchg
adc
jmp
mov
mov
fcomps
imul
aam
mov
sub
and
lock
arpl
lret
cs
mov
inc
push
xchg
inc
ficoms
out
inc
insb
sti
cli
xor
sbb
loope
notb
mov
loope
inc
popf
mov
jle
movsb
out
insb
bound
lock
fistps
jae
mov
mov
cs
sub
or
aaa
sub
ficoml
mov
lahf
into
inc
push
ljmp
loop
test
insl
std
dec
out
mov
pop
rcll
xchg
or
int
pop
je
lret
ljmp
in
bnd
pusha
cmpsl
sbb
popf
dec
inc
shlb
loope
icebp
aas
mov
jl
sub
insl
mov
sub
testb
je
push
xchg
lcall
in
jmp
outsl
add
push
push
js
jmp
mov
jb
ljmp
jnp
je
jno
push
jmp
icebp
fistpll
nop
fcompp
test
sbb
subl
jg
jo
nop
pop
xchg
xchg
lcall
lahf
xor
scas
and
lret
hlt
pop
stos
dec
fsubr
push
pop
lret
out
movsb
mov
test
and
negb
or
cmpb
dec
mov
sahf
cmpsb
lcall
dec
push
call
testl
and
sub
imulb
push
adc
mov
je
loope
push
pop
dec
in
xchg
dec
add
les
nop
xor
je
inc
jecxz
adc
and
stos
fstpl
and
push
sbb
jno
std
cmp
call
pop
ds
xchg
scas
cmpsb
cmpb
lods
in
hlt
pop
fcomi
xor
popa
cmp
xchg
push
mov
jmp
inc
mov
outsl
sbb
lods
xchg
cli
add
inc
sbb
inc
cs
loope
gs
jnp
sub
pop
mov
mov
scas
int
jbe
out
inc
fnstsw
xchg
add
cwtl
pop
mov
sbb
push
repnz
out
inc
lret
lea
jnp
add
adc
out
into
testl
fstpt
dec
jge
add
mov
mov
loop
lret
cmp
xchg
and
lcall
mov
lahf
inc
movsl
or
cmp
adc
jnp
jmp
xor
push
dec
aad
stc
push
cmpsb
pop
push
sub
sbb
xchg
dec
leave
aad
xor
jmp
scas
sub
mov
xor
cmc
and
insl
push
mov
pop
aaa
data16
jecxz
jle
add
xor
and
add
aad
jmp
sbb
sub
loopne
in
jp
outsl
shl
xchg
pop
cld
sub
dec
mov
es
addr16
lret
loopne
xor
divb
xorl
push
mov
lret
or
gs
mov
mov
movsb
cli
inc
test
push
imul
jmp
and
mov
lahf
push
insl
movsl
sub
mov
cmp
out
jmp
push
sbb
dec
aam
lret
push
addb
imul
pop
jge
mov
adc
loopne
sbb
add
pop
xchg
lods
jg
pop
cltd
fdivrl
in
xlat
lret
sbb
xchg
ljmp
mov
cmp
pushf
nop
mov
and
ljmp
cmp
and
aad
js
adc
pushf
in
insb
and
xor
jne
call
out
fldt
leave
icebp
loopne
lahf
lods
into
lahf
mov
mov
xor
lret
mov
hlt
out
nop
push
int3
repz
out
jae
push
fucom
mov
loope
pop
jg
les
dec
in
mov
pop
sub
jb
fimull
push
pushf
cmpsl
bound
pop
cld
or
push
sub
push
mov
repz
les
vsqrtpd
cmpsb
stos
and
adc
adc
jns
es
lahf
hlt
mov
rcll
xor
adc
stos
mov
movsl
lea
or
call
mov
aad
bndldx
cmp
sbb
dec
push
cld
aaa
dec
inc
lret
gs
ljmp
rorl
mov
loop
enter
in
jle
mov
dec
sbb
dec
jecxz
xchg
mov
fistl
cmp
sarl
add
xchg
lds
sub
stos
enter
pop
repz
sbb
imull
pop
sbb
popa
out
popf
and
fwait
ljmp
adc
mov
dec
mov
repnz
sub
fnstenv
jmp
ljmp
addr16
leave
loope
mov
fisttpl
jge
pop
xchg
xchg
push
lock
aam
sbb
add
rorl
out
xor
cmp
cld
pusha
pop
fs
ljmp
lods
scas
jnp
cmpsb
mov
xor
sahf
popa
lcall
aad
mov
mov
lods
inc
dec
and
out
or
fdivrs
xchg
inc
fcmovne
mulb
cmp
into
ficompl
cli
push
dec
jecxz
push
iret
ss
cmpsb
aaa
jnp
pop
jbe
repz
mov
in
in
icebp
inc
xchg
insl
sbbl
outsb
addr16
pop
rcr
inc
cltd
imul
imul
sub
push
popa
sub
cmp
or
or
xor
and
cmpsb
jbe
and
mov
and
ja
and
mov
mov
push
gs
cs
xchg
in
out
repnz
and
dec
sbb
xchg
imulb
imul
cs
testl
ss
cmc
fstl
lret
lcall
cmp
or
add
adc
cltd
xor
loopne
fnstenv
jmp
sbb
lods
testl
sbb
cwtl
dec
pop
xchg
mov
scas
add
pop
mov
mov
mov
xchg
dec
test
jno
mov
inc
mov
push
jl
je
push
or
nop
fnstsw
inc
les
loopne
shrb
ds
cmp
push
sbb
mov
in
jg
push
dec
ja
sub
jns
cmp
lods
ds
jecxz
cs
mov
test
adc
lret
jns
push
shl
scas
xor
dec
adc
sbb
test
push
enter
cmpsb
insl
das
cmp
popa
cmp
push
mov
out
cli
shr
or
fisubrs
inc
lds
stos
sub
icebp
mov
mov
jnp
cmp
push
cmp
push
sub
stc
mov
mov
mov
mov
jne
cltd
ss
jbe
icebp
sbb
mov
xchg
xchg
mov
sahf
jp
movsl
mov
push
insb
inc
pop
cmc
pushf
popf
mov
dec
int
das
hlt
cmp
mov
in
sbb
dec
mov
push
xchg
pop
jge
jnp
jecxz
call
or
lock
xor
leave
out
dec
les
or
jns
ret
inc
jmp
fmull
sar
mov
inc
cltd
fnstcw
mov
icebp
dec
inc
cmpb
xchg
add
test
sbb
push
sub
inc
sbbb
in
dec
sbb
jbe
mov
or
mov
ss
cmp
adcb
sahf
jbe
sbb
test
inc
jecxz
adc
pop
cmp
mov
in
aas
lea
loopne
fxch
push
or
mov
inc
xchg
mov
push
ds
outsb
sbb
cmp
mov
cmpsl
pop
jg
in
mov
int3
das
and
jecxz
outsl
subb
and
jl
lret
inc
mov
test
lret
sahf
inc
ja
jo
push
push
call
rorl
cmp
int3
aas
mov
jnp
sub
or
cs
sbb
mov
jmp
repz
popf
out
decb
ss
or
roll
pop
daa
ficomps
push
in
jo
add
mov
xchg
aad
xor
jmp
cmp
sub
sbb
xchg
jo
das
xchg
pop
loope
js
jp
sbb
imul
or
jo
pop
lea
or
jo
pop
mov
imul
cmp
cld
cmpsl
movsl
adc
jmp
jg
repz
or
cmp
cmp
mov
inc
ret
pop
lds
pop
jno
sub
mov
clc
mov
dec
push
cmp
dec
adc
push
daa
sysexit
mov
ret
outsb
cmp
push
sbb
into
push
repz
es
jae
cmp
ret
imul
pop
mov
adcb
outsl
out
cmpsl
pop
das
scas
orl
mov
cmp
xor
xchg
adc
dec
into
dec
inc
rclb
mov
xor
xor
aad
lahf
sbb
add
jmp
nop
mov
adc
push
sbb
data16
or
in
lea
sti
inc
pop
sbb
lahf
adc
push
jns
fdivl
pop
inc
mov
xchg
out
shlb
mov
icebp
or
iret
sarb
stos
xchg
popf
cmc
jno
and
cmp
xchg
adc
push
cmp
or
or
scas
pop
push
and
scas
mov
dec
pop
dec
cmc
xchg
sbb
es
mov
adc
jno
xor
and
shlb
fmuls
pop
fsubrl
jmp
mov
in
scas
pop
mov
outsb
and
mov
mov
sahf
js
mov
inc
pop
inc
and
adc
push
jmp
lock
scas
jns
lods
jo
lret
and
cmp
mov
ficoms
sbb
mov
inc
mov
leave
lods
shrb
fcompl
popa
pushf
sbb
jae
jge
repz
jns
sub
dec
pop
pop
pcmpgtd
ja
dec
lcall
andl
sbb
pop
xorb
out
stos
xlat
sbb
sbb
cmpsb
fldenv
mov
aad
jno
adc
aam
pop
inc
stos
jno
mov
mov
pop
cmpsb
setb
cmp
add
sarb
pop
pop
mov
push
arpl
in
jle
pop
dec
xchg
lret
fimuls
sbb
sbb
int
push
fcmovne
lahf
inc
xor
mov
mov
test
enter
test
outsl
ret
mul
and
sbb
add
sub
inc
aas
aad
rcl
out
mov
sbb
pop
insb
ret
addr16
faddl
test
cmpsl
cmp
outsl
ljmp
roll
adc
and
mov
jl
cmc
call
pop
mov
cmp
stos
cmc
call
and
mov
mov
movl
and
push
fwait
mov
and
push
dec
daa
scas
test
lahf
rorb
add
xchg
pop
or
scas
push
jno
jns
adc
or
fcoml
dec
dec
arpl
sbb
jno
addl
xor
outsl
cmp
mov
mov
inc
int3
pushf
es
setns
dec
and
icebp
xor
xchg
int3
dec
aad
cmp
cs
jbe
push
fdivrs
sub
test
or
push
pop
mov
xor
and
cs
sarb
scas
imul
xor
jo
push
mov
ljmp
mov
lcall
mov
rcr
xor
addr16
pop
test
daa
fadds
ret
add
adc
xchg
xchg
mov
dec
add
inc
mov
out
popf
mov
and
add
into
sbb
leave
adc
lds
iret
shlb
sbb
pop
aad
test
jns
sbb
hlt
adc
mov
outsl
adc
lcall
or
mulb
iret
pop
outsb
push
and
inc
adc
int
add
pop
movsl
gs
add
pop
xchg
mov
mov
in
push
jecxz
sbb
sbb
ja
mov
mov
adc
xchg
test
scas
mov
push
lods
out
cli
mov
xchg
leave
ljmp
inc
cli
dec
push
and
lahf
test
loopne
inc
and
fcom
pop
js
push
add
mov
push
mov
adc
dec
loopne
inc
and
or
leave
xchg
fstpt
dec
push
or
cltd
dec
dec
mov
ds
and
pop
fsubr
repnz
in
out
aam
and
adc
push
movsl
lods
xchg
ret
jb,pn
movsl
incb
cmpsl
hlt
xchg
xchg
xchg
jnp
push
pop
mov
out
dec
adc
movsb
dec
icebp
shll
mov
add
sbb
cltd
mov
or
or
fildll
popa
daa
rorb
test
fdivl
lret
xlat
call
sbb
test
dec
inc
cltd
sbb
push
mov
stos
repz
bound
repnz
pop
sbb
xchg
cmp
out
mov
mov
mov
xchg
ja
add
mov
xor
ljmp
scas
add
insl
rcll
mov
fsubl
outsb
shrb
sbb
cli
dec
xchg
mov
fdivs
ds
jmp
cmp
xchg
mov
mov
outsl
jnp
jle
adc
daa
or
jg
js
test
mov
notb
lret
cmp
cmpb
outsl
clc
jmp
pop
lret
sti
outsl
gs
add
push
xchg
add
cmpsb
fmuls
mov
popl
icebp
jmp
mov
pop
movsl
xor
fstpl
lcall
rcr
mov
mov
jnp
jno
cli
jno
fstl
mov
push
mov
into
or
xchg
lret
xchg
jge
mov
bound
sub
push
sub
xor
scas
das
xchg
or
jns
and
xchg
push
in
addl
shlb
dec
rorl
mov
test
je
pop
ret
call
arpl
or
xlat
fistl
xor
js
jae
scas
inc
rcrb
hlt
repnz
bound
aam
mov
mov
mov
daa
mov
mov
cmp
inc
xchg
mov
int
jmp
xor
dec
ret
sbb
jbe
mov
mov
fistpl
jle
ljmp
sbbb
fstp
xchg
subl
push
fdiv
call
ljmp
mov
and
shll
icebp
cmp
cltd
sub
cmp
leave
adc
xor
xor
repnz
aad
rol
movsl
paddsb
sbb
ret
clc
jbe
inc
cmc
call
cmp
adc
js
ret
sub
cmpsb
fld
add
cltd
sbbb
fisubrl
out
jnp
xchg
cmp
mov
xor
and
inc
test
mov
mov
jnp
add
ds
mov
cmp
pop
das
adc
push
xchg
jns
xor
jbe
fwait
mov
xor
enter
adc
mov
inc
inc
dec
and
mov
cmp
push
xor
pop
ja
jl
push
outsb
arpl
xchg
cs
mov
inc
imul
pop
shlb
jo
aaa
inc
jle
flds
jg
mov
xchg
pop
mov
ret
mov
aaa
push
test
pop
jmpw
adc
out
sub
test
daa
nop
fisubrl
loop
adc
outsl
ja
xchg
imul
xchg
repz
add
inc
js
les
sub
xchg
lret
add
pop
imul
lret
sub
cltd
ss
dec
fs
int
or
stc
ljmp
pop
int
arpl
push
loopne
inc
jbe
sbb
add
jp
xchg
repnz
jg
jge
and
mulb
jne
paddw
test
ret
int
jge
call
cmp
loope
cmc
mov
cmp
and
mov
bound
stc
nop
mov
pop
out
jecxz
cmc
jb
jb
fstp
sub
push
mov
cmc
lret
sub
pop
fwait
aaa
test
lock
push
adc
inc
push
arpl
lock
lcall
xlat
out
or
int
jle
fnstenv
push
push
ss
imul
out
test
or
sub
rcll
addr16
lret
or
push
xor
cmp
addl
jmp
dec
or
mov
cmp
push
pop
mov
insb
jae
pop
jl
dec
gs
cmc
inc
sub
loopne
mov
je
mov
sbb
pop
fadd
xchg
mov
sub
pop
xchg
nop
mov
into
cmc
loope
daa
push
xor
push
push
loopne
push
sub
bound
mov
fstps
push
mov
ret
xchg
clc
fsubs
rorl
xchg
cmpsb
test
xor
dec
jnp
add
mov
test
mov
imul
and
mov
sbb
je
cltd
adc
data16
shrl
adc
loop
decb
push
scas
xchg
or
xor
push
mov
pop
pop
stos
mov
scas
cmp
or
jb
cs
and
xor
xchg
into
lret
jae
int3
pop
push
xor
aaa
scas
bound
xor
imul
sbb
jae
sbb
stos
and
repnz
gs
ss
mov
jne
cmp
cmpsb
nop
aaa
jl
xchg
in
mov
mov
outsl
adc
cmp
lock
js
mov
bound
cmp
enter
icebp
mov
xchg
lds
adc
jle
mov
fcmovnbe
adc
bound
inc
mov
and
rorl
mov
movsl
push
jecxz
sub
lret
pop
out
lretw
enter
cli
mov
int
pop
ljmp
rorb
movsb
int3
mov
xlat
pop
icebp
push
jecxz
in
adc
out
sub
in
stc
add
mov
ret
push
cmpsb
xchg
popf
cmp
pop
inc
ss
aas
add
lea
movsl
int3
push
mov
xchg
pop
fs
out
mov
cmp
daa
cwtl
testb
rcr
dec
add
test
or
and
orb
loope
cld
adc
das
inc
jp
xchg
mov
and
andb
mov
repz
inc
push
cltd
out
cltd
inc
cmp
gs
xor
movsl
push
dec
push
push
push
dec
das
pop
xor
repz
ljmp
gs
hlt
xor
aad
mov
inc
push
push
inc
add
inc
mov
inc
in
mov
adc
cmp
push
data16
add
mov
inc
or
ljmp
mov
xor
add
int
lods
arpl
dec
xchg
or
xor
sahf
loopne
xor
dec
sbb
fsub
ret
or
test
sahf
inc
shrb
test
lahf
rclb
cltd
adc
jge
ret
adc
out
xchg
xorb
dec
cmp
inc
xchg
dec
fdivrl
int3
aas
inc
clc
aas
xlat
insl
mov
jecxz
fisubrl
movsb
inc
or
sbb
jno
mov
mov
in
sbb
xor
jecxz
or
movsb
mov
sahf
xor
mov
div
and
adc
xchg
jge
sbb
es
lock
cmp
rorb
mov
test
mov
repz
add
orl
fucomi
cli
stos
push
dec
or
out
call
pop
divb
sub
imul
les
jecxz
pushl
stos
enter
mov
push
lds
xchg
cmp
push
xchg
sbbb
adc
fwait
in
jnp
popa
push
adc
sub
pop
push
jo
adc
xchg
inc
push
sub
xor
xor
sub
dec
int3
js
pop
scas
jle
mov
pop
movb
jb
push
or
gs
out
orl
ret
jbe
jno
ss
push
sbb
inc
aam
inc
sbb
imul
xchg
mov
cld
out
jl
xchg
sahf
pop
movsb
xchg
push
xor
or
mov
movsb
mov
sbb
push
filds
repz
inc
lret
out
push
enter
out
jle
dec
daa
inc
add
lods
shl
and
lcall
push
imul
mov
nop
inc
push
pop
mov
dec
push
mov
sbb
or
enter
xchg
jmp
dec
fcoml
mov
dec
pop
xlat
sub
sub
pop
push
lcall
mov
sbb
inc
push
cli
sahf
hlt
adc
push
ljmp
lcall
ficoml
dec
or
sub
sbb
jg
sub
mov
mov
sbb
push
mov
stos
jno
repnz
adc
or
cmc
lods
or
test
test
jmp
sbb
mov
dec
stc
loope
mov
xacquire
inc
lock
xor
stos
mov
fwait
shll
mov
mov
js
sbb
je
jl
hlt
inc
addr16
fstpt
add
cmpsl
ja
les
xchg
xchg
sbb
or
rclb
neg
loope
pop
in
sub
xchg
lea
cmp
test
imul
mov
dec
jle
sub
das
aam
int3
lret
shr
or
sti
jp
jp
mov
adc
int3
in
mov
or
push
mov
shrb
add
dec
sbb
mov
push
lds
insb
push
js
scas
adc
pop
jmp
xor
dec
xor
sbb
inc
mov
jmp
pop
repnz
cmp
mov
lea
and
movsb
in
xchg
fistpll
les
sub
mov
repnz
loope
test
mov
push
insl
orl
dec
enter
hlt
mov
mov
jge
add
mov
mov
mov
addl
outsb
in
testl
sbb
mov
lret
sbb
cmp
xor
lea
movsb
cld
mov
push
cmp
sub
les
ljmp
loope
mov
mov
dec
jl
mov
inc
rol
adc
es
mov
or
cmp
xchg
jp
popf
and
pop
dec
add
testl
jbe
sti
cmpsl
xchg
xchg
mov
pop
xor
into
cmp
pop
test
push
roll
pop
dec
repnz
faddl
or
or
sub
popf
sbb
jno
sbb
cmpsb
hlt
push
gs
imul
imul
repz
insb
mov
sub
lock
das
sbb
xchg
cmpsl
std
add
mov
xchg
dec
cld
and
or
decb
in
dec
inc
aas
push
xchg
mov
mov
sbb
dec
in
sbb
add
adc
dec
jo
fsubrp
js
and
dec
xorb
lret
repnz
xchg
xor
loop
pop
fstpl
xchg
push
cltd
push
push
sbb
push
and
shlb
imul
sbb
pop
je
das
ss
lods
test
push
shll
in
lahf
add
sub
bound
jne
add
push
ret
mov
push
pop
or
pop
mulb
aam
cmp
sub
aad
xor
shlb
or
xchg
mov
pop
daa
ja
ret
sahf
sti
add
outsb
mov
mov
xchg
stos
inc
and
inc
push
gs
loop
test
push
jne
sahf
lret
pop
adc
inc
push
jle
or
sub
mov
in
les
mov
jb
movsb
lcall
inc
cmp
test
dec
jge
pop
stos
aaa
clc
lds
mov
test
popf
inc
das
movsb
iret
or
and
sti
sub
lds
sbb
cs
ret
push
pop
es
imull
lret
mov
jb
das
es
pop
inc
fadds
push
ljmp
lods
mov
pusha
push
inc
std
mov
movsl
push
into
adc
pusha
mov
hlt
sbb
push
and
mov
aaa
or
xor
test
les
or
call
cmp
dec
pop
sarl
adc
outsb
jecxz
or
push
and
or
shrd
sbb
or
movsb
cld
fcmovne
mov
push
cmc
dec
push
int
repnz
inc
sti
lcall
or
push
into
test
ja
push
ja
and
rorb
jbe
dec
mov
in
jnp
mov
js
lods
sbb
ja
icebp
dec
add
add
mov
jne
das
adc
jp
fildl
cmc
or
fs
pop
dec
dec
subl
int3
js
mov
xor
pop
mov
and
sti
fisubl
cs
mov
jnp
iret
mov
mov
iret
pop
roll
pop
pop
inc
arpl
xchg
xor
pop
jmp
xor
cmp
push
mov
mov
sbb
icebp
mov
xlat
outsl
jns
mov
cmp
dec
lret
clc
cmp
lcall
sbb
jne
imul
pop
nop
daa
push
xor
sbb
xlat
cltd
xchg
out
lods
mov
inc
push
sub
stos
jbe
popa
cmc
mov
or
jecxz
icebp
and
out
sbb
mov
sbb
movb
cli
and
mov
adc
cmp
jle
loope
subl
mov
pause
inc
add
shlb
lcall
mov
pop
fwait
add
mov
pop
loop
mov
push
and
or
rcll
sti
fs
aaa
sti
push
adc
cld
mov
dec
scas
or
mov
push
test
and
sub
popf
push
push
movsb
lds
dec
mov
sbb
psubusb
pop
cmp
test
or
bound
jge
pop
gs
inc
pushf
mov
mov
ja
leave
mov
cmpsb
in
pop
das
cltd
sbb
pop
inc
sub
inc
in
jecxz
adc
pop
jno
xor
out
mov
das
jns
sbb
out
adc
ja
es
insb
lods
pop
inc
add
dec
test
xor
cld
mov
fcmovu
fstpt
arpl
fiaddl
push
test
scas
mov
xor
scas
or
cmpsb
inc
mov
cmp
call
aas
adc
fistps
xchg
inc
adc
fldenv
lock
dec
fldl
or
notl
dec
leave
aam
js
rclb
movsl
outsb
adc
cmp
dec
and
push
jo
push
movsw
lret
inc
or
shll
xor
andb
je
xchg
jl
rcrl
aam
jbe
cmp
scas
flds
sbb
lcall
shlb
aaa
or
mov
test
xchg
dec
sub
imull
xchg
mov
push
mov
and
es
in
jg
pop
dec
adc
mov
clc
xchg
adc
mov
aam
repz
cmp
mov
jo
in
cld
dec
mov
mov
or
ljmp
dec
push
mov
sahf
adc
jp
or
repnz
in
out
push
sub
or
aad
jae
and
jns
es
sub
stc
and
ss
test
cmp
test
in
cmpsb
inc
fsubl
out
push
aaa
mov
jecxz
ret
mov
inc
jns
and
call
pop
xchg
push
cmpsl
hlt
add
push
pusha
jno
mov
xchg
test
inc
push
lock
cmp
inc
dec
cmpsb
popf
add
jp
push
jmp
mov
pop
push
outsl
cli
xchg
aad
hlt
push
inc
fstpt
jl
cmpl
push
sbb
cwtl
adc
mov
push
mov
ret
push
adc
and
inc
pop
xor
cltd
xor
loop
dec
jmp
or
int
ds
ret
es
loope
pop
cwtl
mov
rolb
sbb
mov
mov
lret
gs
loop
jg,pt
in
daa
cmc
insb
adc
cmp
test
in
sarl
or
mov
daa
scas
rcrl
push
jle
pop
cltd
push
imul
sahf
out
shrb
orl
inc
push
xor
cmp
xchg
dec
pop
pop
idivl
and
fldt
push
lds
cltd
sbb
sbb
xchg
cmp
push
xor
push
leave
xchg
mov
jno
xchg
arpl
inc
por
xchg
add
mov
mov
mov
in
dec
xor
or
mov
andl
out
xor
adc
scas
pop
inc
dec
sbb
and
xlat
cmpsl
inc
cld
incb
xchg
lret
xchg
pop
fcmovne
dec
pop
dec
cmp
in
lock
fldenv
or
sbb
test
leave
aam
jmp
sub
in
sbb
xchg
xchg
xchg
sbb
out
mov
shr
js
aaa
push
inc
inc
bound
cmp
jp
scas
orl
or
mov
out
mov
push
adc
pop
adc
inc
cmpsl
ja
mov
enter
inc
push
or
jno
cmpsb
lods
xchg
jg
outsl
sub
hlt
fs
icebp
insb
mov
and
ret
nop
out
loope
mov
fisubs
xchg
push
aad
daa
dec
sbb
cmp
mov
adc
xlat
in
sbb
inc
repz
and
and
nop
out
shll
bnd
cmp
lea
jb
rcrl
fsubrl
call
in
cs
ds
and
imul
lods
sbb
xor
iret
nop
fwait
fwait
dec
cli
or
jp
pop
jae
xor
and
sbb
dec
mov
mov
popf
fsubrp
mov
mov
repnz
jg
ret
repnz
sbb
pop
lahf
mov
mov
sub
js
dec
in
or
or
pop
mov
sub
dec
sarl
ds
cmp
out
mov
push
jne
into
ja
scas
mov
mov
nop
loope
outsb
out
cwtl
add
fsub
mov
dec
rolb
js
or
jns
lock
int
in
add
lods
mov
pusha
mov
push
fwait
mov
inc
push
or
and
add
sub
mov
ljmp
lods
sbb
gs
cltd
mov
arpl
fsubrp
xchg
push
inc
dec
inc
lret
fnstsw
xor
inc
orb
add
call
xchg
sbb
cmc
xlat
in
inc
sahf
sbb
sbb
lahf
mov
mov
lcall
fwait
rol
pop
sti
dec
jge
xor
jle
aaa
cmc
push
lahf
pop
fmull
push
mov
roll
inc
addr16
mov
fldl
mov
movsl
push
xor
and
xlat
xor
jae
je
mov
insb
sbb
lods
mov
das
dec
mov
inc
sub
je
adc
mov
leave
dec
subb
xchg
or
pop
nop
shrl
ljmp
fs
data16
movsl
div
sar
pop
leave
xchg
add
sbb
rorb
les
int
sub
ja
xorb
sub
test
sub
cs
or
insl
ja
aam
fnsave
inc
xchg
inc
je
mov
push
int
stos
outsb
push
movsb
shlb
ja
sbb
push
popa
cmpsb
inc
pop
dec
divl
aaa
je
or
xchg
pop
aas
mov
sub
icebp
ds
arpl
insl
into
in
movsb
and
or
push
aas
les
js
hlt
loope
push
sub
dec
imul
sub
pop
push
adc
mulb
add
push
cvtdq2ps
fisubrs
inc
xor
xchg
ss
xchg
jmp
inc
les
loope
jp
mov
repz
push
mov
fisubrl
xor
pop
je
mov
push
jb
xor
lahf
mov
sbb
sub
dec
push
jg
xchg
sahf
hlt
jnp
cmc
mov
cmc
clc
dec
jl
pop
mull
pop
sbbl
mov
lcall
xchg
dec
iret
lods
jle
jb
stc
dec
lds
clc
mov
push
cmp
movsb
lods
rorl
xor
fwait
ja
lret
pop
popa
inc
push
mov
xchg
pop
scas
xchg
pop
mov
fists
adc
jge
repnz
pop
out
xchg
lahf
gs
mov
sub
lods
xchg
ss
data16
test
mov
mov
lcall
cmp
mov
mov
outsb
pop
movsl
ja
js
lret
sub
xchg
push
xor
sub
cvtdq2ps
add
push
sub
add
jae
xchg
add
test
test
in
add
push
mov
jbe
shll
cmp
mov
pusha
mov
pushl
lret
enter
ss
movsl
and
movsl
xor
aam
mov
xchg
rcl
pop
jbe
pop
out
or
push
and
pop
fidivs
nop
loop
push
jge
xor
xchg
out
cmp
test
add
mov
sbb
leave
mov
loopne
adc
pop
neg
push
xor
mov
fidivs
and
ds
sbb
nop
cmp
movsl
xor
adc
xchg
into
push
pop
stc
pop
pop
pushl
lret
das
or
lcall
or
cltd
leave
test
lock
xor
pop
cmc
sbb
mov
dec
out
add
mov
loop
insb
push
or
lcall
adc
movzwl
outsl
insb
jge
push
pusha
mov
pusha
inc
jo
mov
jae
out
pusha
mov
out
das
pop
iret
fwait
and
and
mov
xchg
jno
inc
lea
call
dec
fisubrl
mov
jno
jns
lcall
negl
imul
push
outsl
movsl
out
push
pop
cmc
jae
enter
clc
push
outsl
xlat
mov
or
fbstp
push
lods
push
sub
mov
adc
cwtl
jo
pop
imul
pop
xchg
xor
test
add
push
xor
lcall
cmp
sbb
jbe
das
xchg
lea
push
lods
std
mov
pop
stos
in
pop
inc
jl
loop
dec
mov
xchg
mov
out
inc
ss
nop
or
loop
xchg
jnp
mov
fdivrs
cmpsb
in
sub
in
jae
stos
cld
mov
das
dec
inc
and
sbb
or
ret
push
aad
and
mov
dec
fldcw
rorl
lret
dec
jnp
imul
xorl
cltd
mov
sub
pop
imull
jmp
cmp
and
push
inc
or
leave
jno
clc
fbstp
cmc
mov
idivl
sahf
adc
lea
xchg
gs
ret
daa
lret
bound
popf
shl
adc
mov
dec
arpl
popf
sti
cmp
or
aas
inc
flds
ret
or
and
jle
cli
push
xor
sbb
gs
fsts
into
gs
das
repnz
int
mov
cld
dec
jae
mov
pushf
mov
mov
out
and
icebp
jmp
cltd
data16
pop
cmp
in
in
std
scas
push
sbb
lock
mov
add
cmp
outsb
out
pop
adc
sub
add
nop
sub
pop
pop
es
add
ds
gs
cmp
cld
sbb
nop
inc
pop
out
je
cmpsl
test
int3
mov
mov
jmp
sbb
imul
imul
mov
add
jns
dec
sti
cwtl
pop
sti
lods
cmp
hlt
jmp
call
lods
daa
jmp
inc
roll
mov
jp
rcl
xchg
mov
je
cwtl
ds
jno
nop
adc
icebp
jl
adc
mov
stos
std
popa
inc
lret
fnsave
adc
mov
mov
loop
jne
jmp
jns
stc
mov
lret
xchg
jnp
mov
mov
jle
lret
sub
sbb
sbb
push
xchg
dec
cli
test
inc
shll
adc
jl
fmull
jno
aaa
ss
adc
fsubrl
and
xor
pop
push
jmp
adc
sbb
jo
xchg
and
cmp
push
and
roll
je
movsb
or
push
loope
push
cwtl
lock
fwait
fs
jne
test
cmp
ds
mov
popf
popf
sbb
add
push
or
sbb
orl
pop
cmp
and
lds
and
in
pop
ss
push
shll
out
xchg
push
std
sbb
sti
jg
out
imul
cmp
lock
cmp
insb
les
xchg
or
jo
repnz
sarl
ss
pop
pop
lods
fimuls
ss
xchg
cmp
mov
dec
aad
jnp
out
push
push
imul
push
aad
cmpsb
cmp
shll
jae
add
mov
jbe
mov
push
leave
cmp
insb
dec
hlt
mov
pushf
sbb
fs
repz
sbb
jns
xchg
xchg
cmp
jne
inc
mov
hlt
ss
fdivrl
xor
aam
dec
adc
push
imul
out
popa
test
ret
iret
pop
jbe
xchg
add
inc
pop
aad
fistpll
shlb
shll
or
out
clc
push
cltd
mov
rcrb
ss
inc
cmp
mov
ficompl
gs
aas
mov
inc
add
sub
cmovb
dec
sarl
mov
sub
ss
test
add
int
xchg
sub
adc
jo
pop
ds
adc
sti
push
pop
mov
xorb
lcall
or
xchg
dec
dec
adc
sarb
ret
insl
frstpm(287
pop
lcall
call
inc
xor
dec
mov
test
cld
inc
out
mov
testl
xor
inc
xor
jl
rcrb
out
mulb
cwtl
mov
xchg
in
imul
pop
shll
test
insb
aam
hlt
push
out
or
add
jns
es
xor
std
or
out
frstor
push
xor
dec
xchg
xchg
jecxz
or
out
aas
xchg
movd
ja
arpl
pop
inc
fstl
divb
add
pushf
cmpsb
testl
cli
pop
imul
loop
fsub
pop
pop
push
insl
adc
testl
pop
sub
cmp
addl
pmulhuw
adc
hlt
mov
dec
jb
loopne
mov
pop
add
lret
adc
stos
or
les
dec
cli
mov
xor
and
and
insl
test
test
loopne
xorl
push
and
xlat
push
repnz
loopne
cmp
mov
leave
pop
sbb
popa
fisttpll
dec
cs
data16
lcall
ret
call
mov
fcmovnb
rcrl
les
gs
insb
clc
aas
add
popa
inc
mov
arpl
sbb
loope
and
mov
fs
add
into
jo
pop
jp
xchg
or
mov
imull
jge
lds
test
rcrb
mov
iret
and
inc
dec
stc
out
repz
xlat
add
arpl
jno
or
clc
push
and
jp
fildll
clc
xchg
pop
jnp
cmp
push
cltd
dec
in
into
rclb
lret
cmp
js
inc
sbb
xchg
in
push
sub
hlt
loop
xchg
subl
mov
add
ror
push
xchg
stos
fmul
mov
daa
lock
mov
loope
in
xchg
insl
data16
pop
mov
pop
ficompl
xor
cltd
je
sarl
and
popa
lcall
pop
bound
lock
mov
push
and
in
and
aam
enter
adcl
pop
sti
test
and
sahf
aas
push
push
jge
repnz
adc
pusha
cmp
fisubs
adc
cmp
jo
fdivrs
mov
jae
sbb
fiaddl
movsl
enter
aas
int
cmc
mov
mov
in
cmpl
sub
sub
dec
iret
loop
cmp
add
jecxz
outsl
xchg
push
pop
xchg
arpl
jp
inc
mov
cli
ret
or
mov
rcrb
in
inc
jns
std
xor
mov
push
fdivs
xor
push
test
sahf
jmp
sub
mov
fisubs
fmull
adc
scas
pop
or
rorb
jae
and
sub
fmuls
pusha
cli
clc
shrb
mov
and
inc
mov
and
adc
push
cwtl
das
cmp
push
imul
incb
xor
cmp
mov
cmp
lret
push
aam
dec
pushf
xchg
jg
xchg
xchg
or
xchg
test
push
mov
mov
dec
sub
and
pop
cwtl
mov
inc
fisttps
adc
pop
ds
out
and
dec
fsts
inc
sbb
xchg
rcll
scas
jb
loope
cmp
inc
loop
or
add
out
xor
inc
push
bound
jne
xor
push
dec
fidivrs
leave
incl
cwtl
xchg
std
jle
pop
test
mov
stos
jp
aam
push
adc
fstpt
cltd
dec
ret
roll
lods
xchg
jmp
fimuls
cmp
dec
jl
and
ror
pop
outsl
ja
sub
dec
and
xchg
test
or
jecxz
cmpsl
jmp
pusha
xor
add
divps
sub
popa
fwait
lock
loope
sub
aaa
mov
xchg
sbb
inc
jg
xor
adc
test
addr16
pop
lea
insb
mov
xlat
fildll
jecxz
pop
test
shlb
xchg
cmp
add
cmp
repnz
test
cmp
xchg
dec
and
sbbl
int
sub
xor
sbb
insb
and
and
push
pushl
stos
add
negl
or
cltd
add
adc
inc
jns
dec
data16
push
adc
inc
jge
jne
pop
jnp
pop
jle
bound
push
inc
les
ja
mov
loope
clc
out
cwtl
imul
dec
jmp
xchg
mov
sub
imul
icebp
pop
sbb
stos
daa
ss
add
sub
es
adc
inc
push
and
enter
mov
repnz
test
in
lahf
add
neg
and
xor
push
adc
in
aaa
pop
sub
in
sarl
inc
out
mov
sbb
scas
push
adc
subl
mov
out
sub
mov
sbb
in
lret
or
out
stc
les
xchg
sub
inc
bound
add
std
and
lods
inc
icebp
shl
jg
adc
dec
loopne
fs
cmpsl
xor
cmpsb
subb
int
jmp
fstps
xchg
ret
jl
pop
cli
inc
jmp
dec
fwait
push
jp
mov
in
jmp
in
push
sub
mov
push
mov
cmp
pusha
cmp
mov
in
aam
and
cmpsl
jl
jmp
in
ja
testl
dec
filds
dec
cmc
cmp
shll
jo
or
fsubrs
cltd
jle
test
push
inc
jno
sub
dec
loop
outsl
stos
nop
add
ret
clc
sahf
xor
or
arpl
cmp
int
pop
mov
jecxz
pop
les
mov
sbb
fwait
repnz
lea
push
in
mov
inc
pop
xlat
outsb
sub
mov
inc
dec
push
pushl
pop
jb
mov
add
andb
test
sub
fwait
in
push
imul
insb
add
add
add
add
insl
fs
xor
cs
insb
add
add
add
add
jb
gs
xor
cs
insb
add
add
addr16
pop
jl
pop
ja
dec
xor
push
push
inc
dec
arpl
pop
imul
jp
jne
sub
push
push
dec
inc
dec
dec
push
imul
dec
jns
cmp
jo
js
das
sub
dec
jnp
push
push
jo
dec
jo
js
push
jb
jnp
dec
popa
imul
jne
bound
jp
and
imul
pop
and
pusha
sub
pop
xor
push
pop
jg
js
and
jle
and
push
jb
cmp
sub
pop
inc
pop
jns
es
inc
sub
imul
dec
arpl
addr16
bound
and
sub
inc
inc
ss
sub
gs
fs
push
push
ja
xor
bound
jnp
dec
ja
aaa
arpl
ss
sub
subl
aaa
inc
push
pop
dec
sub
insl
popa
dec
sub
push
inc
xor
sub
push
data16
dec
xor
jp
dec
pop
outsl
push
jno
jge
bound
inc
xor
ss
inc
daa
and
outsb
sub
sub
jg
addb
xor
and
cmp
inc
jl
dec
inc
jo
pop
push
inc
aaa
and
xor
pusha
jg
outsb
gs
pusha
sub
inc
jno
jne
inc
pop
inc
dec
jnp
imul
jnp
jae
jnp
dec
push
jnp
sub
push
data16
addr16
inc
inc
inc
jno
aaa
imul
das
jge
ja
ja
push
sub
dec
arpl
dec
push
daa
sub
fs
inc
imul
push
cmp
jb
jle
cmpb
dec
sub
pop
sub
jo
insl
dec
xor
inc
dec
push
aas
jo
jg
sub
and
daa
sub
sub
xor
daa
inc
popa
ss
and
pop
bound
daa
pop
jl
imul
je
push
cmp
es
data16
push
pop
popa
pop
jne
jge
pop
jl
addr16
sub
inc
jp
sub
dec
inc
dec
pop
xor
outsb
cmp
pop
gs
push
or
push
cmp
cmp
sub
inc
insl
push
outsb
jle
pusha
dec
aas
jge
push
sub
sub
aas
add
add
pop
es
xor
pop
cmp
arpl
xor
push
cs
aaa
dec
sub
inc
push
es
outsl
xor
dec
cmp
sub
inc
jl
xor
es
fs
jp
sub
push
ss
popa
xor
push
adc
push
adc
jnp
inc
gs
inc
pop
outsl
jle
pop
imul
dec
pop
jnp
aaa
pop
jns
imul
pusha
popa
sbb
insl
sbb
imul
popa
push
pusha
gs
adc
add
add
push
add
add
or
add
add
jo
jne
jne
xor
push
inc
xor
jbe
push
sub
imul
outsl
inc
cs
cmp
sub
push
and
push
arpl
js
jl
pop
pop
pusha
sub
pop
insb
push
pop
js
jns
pop
and
cmp
jo
ja
dec
outsb
je
and
imul
inc
jbe
and
cmp
dec
pop
push
pop
or
dec
pop
push
pop
or
dec
and
push
pop
arpl
sub
pusha
and
jp
push
insl
jns
sub
ja
popa
dec
xor
pop
imul
dec
pop
jnp
inc
push
and
outsl
jle
dec
imul
cmp
inc
gs
push
pop
outsl
sub
pop
imul
dec
pop
jnp
aaa
push
and
outsl
jle
