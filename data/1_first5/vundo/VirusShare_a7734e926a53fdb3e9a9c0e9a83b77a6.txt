and
add
add
add
inc
add
cmp
inc
add
arpl
ja
imul
jne
outsb
add
imul
cmp
dec
add
inc
add
add
add
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jne
jb
jae
outsl
add
jae
add
push
add
push
add
and
push
add
jne
jb
arpl
add
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jne
jb
jae
outsl
add
jae
pop
add
arpl
push
add
jae
add
add
add
push
add
data16
add
jb
add
add
arpl
jb
outsl
add
outsl
add
je
pop
add
imul
outsl
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jne
jb
jae
outsl
add
jae
pop
add
arpl
push
add
jae
add
dec
add
outsb
add
add
add
jo
inc
add
jb
outsl
add
add
push
add
jp
add
insb
add
add
imul
dec
add
push
add
add
add
push
add
jp
add
push
add
inc
add
add
add
imul
push
imul
jb
je
arpl
mov
sub
push
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
movl
call
push
pushl
call
push
mov
pushl
call
mov
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
call
pushl
call
jmp
pushl
call
mov
push
push
call
mov
call
xor
mov
push
push
push
call
lea
push
push
push
call
add
push
push
push
push
push
pushl
call
pushl
call
push
push
push
push
push
call
pushl
pushl
pushl
call
add
jmp
lea
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
pop
pop
leave
ret
push
push
push
push
mov
push
mov
mov
mov
pop
add
mov
mov
add
mov
mov
cmpb
je
cmp
jg
mov
mov
mov
movzbl
sub
inc
test
jne
jmp
mov
call
movzbl
mov
dec
sub
push
call
movzbl
sub
add
je
pushl
inc
push
call
movzbl
pop
sub
pop
push
jmp
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
pushl
call
pushl
movl
movl
movl
pushl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
cmpl
push
mov
je
cmp
je
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
movzwl
mov
mov
mov
movzwl
xor
movzwl
xor
lea
push
call
mov
xor
pop
xor
test
jne
mov
not
mov
pop
mov
or
mov
leave
ret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
push
push
push
pushl
call
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
pushl
call
mov
add
cmp
jb
mov
leave
ret
dec
add
jns
push
adc
push
insl
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
test
addb
add
add
add
sub
clc
cmp
xlat
pop
data16
add
push
pop
fs
jae
inc
dec
and
ja
mov
inc
roll
jecxz
sbb
mov
add
push
fildl
inc
fadds
xor
or
push
inc
cmp
cmp
ljmp
or
or
jmp
test
push
addl
adc
add
subb
mov
pop
cmp
incl
lea
inc
js
jge
push
adc
add
adc
rolb
mov
decl
lcall
call
sar
add
push
rorb
repz
add
test
mov
add
clc
adc
in
add
outsb
incl
hlt
inc
adc
add
add
insb
jns
add
add
add
add
add
add
push
add
add
insl
jbe
inc
inc
outsb
inc
outsb
outsl
jne
adc
jo
insb
inc
imul
outsb
jns
sub
sub
dec
inc
add
push
imul
cmp
inc
cli
insb
gs
insb
insb
jae
outsl
jne
inc
outsb
jb
xor
inc
je
insb
add
add
fwait
add
imul
stc
add
sti
add
add
add
add
adc
dec
int3
outsl
push
sub
jle
sbb
sub
sti
and
movb
jge
lods
lock
std
fimuls
adc
pop
push
and
mov
mov
xchg
or
mov
test
sbb
jbe
jp
push
lcall
xchg
lret
add
dec
out
rcll
xchg
popf
xchg
cmpsb
xlat
inc
adc
cli
mov
mov
clc
inc
loop
stos
mov
pop
add
lcall
pop
or
mov
xchg
sub
push
xorb
cmp
bound
fidivl
nop
mov
sbb
cmp
int
sbb
jle
out
scas
cmp
andl
imul
jl
out
repz
xor
sbb
test
pop
clc
xchg
cwtl
xor
xchg
mov
pushf
lods
cwtl
inc
lods
inc
sbbl
xchg
sub
test
popf
inc
dec
fisttpll
sbb
cltd
les
dec
dec
xchg
mov
test
jmp
xor
xor
in
cmp
ficoml
xchg
mov
mov
add
sahf
addr16
pop
push
in
push
xor
xor
icebp
jge
std
js
mov
nop
outsb
mov
in
xor
cmpb
xchg
inc
adc
sbb
xchg
inc
ret
mov
xchg
inc
cmpsb
inc
aaa
jno
cmp
push
shrb
popa
xchg
add
test
dec
pop
pop
mov
sbbb
push
loop
jmp
push
jbe
fnstenv
pop
pop
adcl
imull
jbe
dec
orl
test
xchg
gs
cmp
cld
aas
mov
xchg
dec
mov
xor
mov
mov
scas
insl
xor
fs
std
popa
lcall
insl
cmp
inc
or
imull
or
add
pusha
loop
mov
pop
test
push
out
pop
cld
cli
push
ljmp
sub
int3
int3
sub
push
sbb
aam
cmp
in
sub
fdivrs
ret
leave
rcll
mov
rcrl
lds
pop
cmpb
xchg
xchg
addr16
jbe
adc
ds
popa
sub
or
cs
sub
insb
fildl
jl
sub
jge
scas
clc
ja
movsl
nop
cli
fadd
sbb
stc
push
in
adc
xchg
mov
xor
jb
pop
jmp
or
lock
pop
shll
int3
inc
xor
mov
ja
arpl
lds
loope
jge
mov
lock
xchg
cmp
push
mov
mov
loop
lret
mov
loopne
rcrb
pop
sti
mov
adc
add
cld
and
imul
push
sub
das
in
out
sub
mov
addl
xor
leave
mov
sbb
and
into
mov
pop
imulb
int3
jecxz
sub
or
sub
add
addr16
adc
mov
ret
roll
mov
mov
fwait
test
cmpsb
inc
out
in
mov
in
xor
push
cmp
stos
sub
stc
popa
js
push
add
aas
outsl
mov
xor
fs
jp
aaa
cld
int
push
pusha
out
out
ficoms
push
mov
ret
mov
gs
xor
xlat
xchg
arpl
les
xor
adc
lds
sarb
jl
dec
adc
mov
xor
adcl
mov
adc
aam
ficoms
pop
repz
jp
int
lock
cmpsl
pop
mov
pop
dec
xchg
aad
push
ret
in
sar
jo
movsb
inc
fists
xchg
hlt
movl
shll
out
daa
pushf
pusha
cmc
lahf
cs
shll
bound
inc
xchg
sub
cmpsw
dec
add
mov
bound
fsubl
lahf
push
mov
rol
jmp
inc
xchg
or
adc
push
daa
jmp
and
fnstcw
jns
fists
xchg
mov
xchg
rol
stos
mov
inc
mov
hlt
push
jno
xor
push
std
inc
dec
sbb
dec
mov
pop
jg
mov
adc
lret
or
push
out
pop
xchg
aad
ficoms
sub
xchg
flds
repnz
mov
movsl
leave
cmp
jb
or
and
fnstenv
xor
lret
pusha
gs
push
dec
cld
and
xchg
dec
sti
xchg
xchg
stos
mov
lcall
test
out
add
out
add
ror
leave
cmp
dec
shlb
les
and
and
int3
aaa
lods
ds
stos
mov
inc
xchg
dec
sub
pop
pusha
icebp
repz
jmp
lret
push
call
jge
ja
and
aam
jbe
push
push
lea
out
icebp
mov
sbb
sbb
xchg
push
mov
jl
xchg
addr16
mov
xchg
push
push
or
icebp
push
lret
lcall
cmp
movsl
hlt
pusha
mov
inc
hlt
arpl
jb
popf
cmp
mov
xchg
aad
pop
xchg
add
inc
test
mov
push
shl
jl
pushf
clc
sbb
jae
xchg
inc
dec
andl
pop
add
aas
inc
insb
push
call
inc
test
repz
pop
stos
xor
mov
xor
dec
dec
pop
inc
insb
fiadds
and
push
leave
add
mov
mov
adc
dec
fistpll
fstpt
xor
pop
pop
test
xor
pushf
loopne
pop
cmp
andb
loop
cmp
testb
arpl
adc
sti
mov
fistps
jge
sbb
gs
int
fmuls
mov
lahf
fnstcw
sub
dec
fisttpll
fsubl
push
and
loope
or
fnstcw
and
pusha
daa
roll
jg
ja
and
lods
outsb
outsl
stc
in
jae
mov
ret
out
enter
fsubrp
lock
idivb
and
lods
sub
mov
push
sub
jp
jns
push
enter
adc
push
xor
shlb
in
pop
jno
xorb
fwait
pop
imul
divl
mulb
stos
pop
sub
fcomps
cmp
pop
mov
outsb
dec
ja
or
scas
mov
or
cld
sti
out
ja
mov
sbb
insl
adc
rolb
es
and
stc
leave
and
je
nop
es
out
je
lock
xchg
mov
in
sbb
mov
out
out
aam
lcall
mov
sbb
mov
pop
or
ror
mov
sub
pop
leave
adc
addr16
ds
xchg
xor
jne
imul
push
testb
and
xchg
ret
mov
int3
out
loopne
cli
fldenv
movsl
fwait
repnz
mov
push
loope
push
mov
mov
rcll
js
idivl
cwtl
testb
dec
xchg
out
scas
jbe
outsb
mov
mov
adc
push
mov
nop
scas
xor
ror
sbb
add
popa
dec
dec
je
aaa
mov
mov
cs
icebp
adc
xchg
xor
mov
inc
fisubl
xchg
push
pusha
cmpsl
push
jne
cmpsl
ret
push
xchg
imul
lods
arpl
scas
push
out
ja
insl
or
loop
push
pop
and
sub
hlt
je
icebp
jnp
adc
shr
and
popa
xchg
pusha
sub
mov
adc
aam
adc
out
iret
aad
rcr
test
xchg
xchg
test
xor
xchg
mov
fisttpl
xchg
pushl
jp
cmp
or
ljmp
inc
addr16
ss
in
rol
ret
outsb
sub
mov
inc
add
lea
jns
mov
sti
rcr
cmpsl
jmp
lea
gs
stos
push
mov
cmp
jle
and
pop
sti
dec
lahf
sbb
in
mov
dec
or
in
outsb
loopne
lea
push
mov
xor
dec
ficoms
push
aas
pop
dec
fdivl
or
adc
jmp
leave
mov
adc
mov
xchg
arpl
mov
add
jg
iret
sbb
xor
xchg
sarl
jnp
dec
repnz
xor
jns
pop
adc
pop
xchg
ficomps
dec
mov
int3
cmp
sub
push
push
jecxz
mov
jg
inc
test
sub
shlb
mov
inc
jb
fidivl
or
stos
mov
sub
jmp
fdivl
adc
inc
fs
mull
mov
fcomp
jmp
or
orb
sbb
jns
lret
pop
mov
xchg
dec
push
jno
or
notl
adc
xor
enter
jnp
dec
fnstenv
cmc
int
and
or
dec
push
aas
ficoml
xor
shll
cmpsl
call
ret
mov
sub
xor
cwtl
repnz
push
mov
mov
jle
sarb
xor
dec
mov
test
jl
lock
jg
gs
cmc
dec
lea
dec
iret
mov
push
adc
and
inc
mov
add
mov
inc
repz
or
jecxz
movsl
sbb
mov
xchg
stos
mov
dec
call
sbb
push
loopne
jecxz
add
lds
jecxz
mov
imul
push
sub
push
repz
pusha
mov
pushf
je
mov
aas
and
into
andb
fs
xchg
push
push
xchg
pop
cmpsl
inc
dec
mulb
add
lret
ret
xchg
gs
or
imul
dec
cwtl
push
xchg
sub
sbb
dec
arpl
mov
icebp
xchg
push
cmp
xchg
sub
hlt
push
lret
fcomps
inc
inc
adc
dec
or
sbb
arpl
fmull
std
adc
ds
push
ror
inc
cld
test
xchg
fsubr
dec
adc
or
push
xchg
inc
mov
jg
jl
cmp
mov
cwtl
pop
out
adc
xchg
gs
je
add
adc
or
xchg
adcl
push
test
push
or
mov
cmc
sbb
push
xlat
lahf
repnz
cmp
jbe
std
mov
sbb
pop
repz
xchg
xor
out
or
int3
repz
lcall
inc
xor
inc
gs
dec
icebp
mov
mov
andl
inc
mov
dec
inc
loopne
out
jecxz
lds
lea
mov
clc
push
test
or
dec
push
pusha
in
or
sahf
insb
lcall
jp
jne
bsf
or
int3
xchg
insb
xchg
inc
jne
in
or
mov
icebp
pop
sbb
cltd
push
outsl
and
mov
rol
lahf
mov
fwait
imul
cmp
insb
cli
sub
test
fidivs
dec
stos
pop
add
jge
xchg
lds
mov
fcmovb
movsl
mov
mov
pop
ffreep
shll
out
cld
loop
mov
lret
sbb
pop
int3
push
and
jecxz
pop
xchg
sbb
sarl
mov
in
mov
sbb
mulb
add
mov
mov
loopne
mov
push
data16
jnp
andl
push
inc
cli
rcr
xchg
mov
stos
cltd
mov
sarl
and
cltd
mov
and
xchg
inc
and
in
mov
sub
jl
jp
mov
cmpsb
mov
aaa
adc
add
out
push
out
or
call
enter
ret
lcall
pop
xchg
and
jmp
ljmp
out
pop
stos
push
test
stc
imul
pop
xchg
ret
cmp
jnp
push
lret
mov
mov
fsubs
mov
push
hlt
and
loopne
xchg
inc
cld
dec
in
in
je
push
inc
cmp
les
enter
jo
shlb
add
dec
aas
pop
jg
mov
xchg
cltd
into
adc
adc
sbb
mov
adc
or
mov
xchg
pop
cltd
xchg
ljmp
lea
jmp
into
in
pop
cmp
pop
adc
add
inc
xlat
adc
cmp
jmp
xor
and
out
int3
mov
mov
dec
or
jb
push
cmp
push
or
cmp
ret
jmp
rclb
cmp
out
xor
add
dec
bound
fadds
aam
lds
inc
xlat
or
loop
jmp
pop
shl
fisubrs
aaa
lcall
xor
pop
sbb
pop
jg
imul
faddl
or
cmp
mov
pop
or
xchg
or
mov
gs
cmpsl
mov
cmp
imul
sbb
xchg
cmp
in
mov
inc
fs
cmpsb
jb
pop
inc
in
cs
clc
dec
and
push
push
push
xor
cmp
test
je
data16
in
push
jecxz
js
shrl
pusha
and
sub
dec
std
pusha
push
stos
popa
pop
jg
rorl
lds
push
pop
push
stc
mov
jge
enter
push
or
inc
xor
fs
cmp
mov
je
rcr
divl
popf
dec
xchg
sub
clc
mov
test
sbb
ds
inc
mov
pop
lret
rcrl
movsl
sub
fwait
lahf
mov
or
jbe
and
int
and
jp
inc
nop
pop
xchg
push
les
into
lcall
das
mov
sahf
out
es
mov
repnz
addb
fisubrl
clc
jb
shrb
xlat
xor
pop
or
jp
sbb
jae
sti
dec
loope
outsl
add
mov
das
shlb
pop
adc
clc
stos
push
ret
push
add
push
cmp
and
dec
fdivr
out
test
lret
pop
outsb
push
jno
cmp
add
mov
mov
xchg
mov
movsl
scas
enter
cmp
inc
mov
idivl
add
faddp
adc
mov
dec
es
in
dec
int3
loop
fwait
clc
fstpl
bound
das
push
ret
cmp
mov
iret
lret
mov
es
pcmpgtd
int
cmp
adc
mov
sub
xchg
lea
addr16
daa
sbb
ljmp
mov
cmp
mov
or
push
cmp
sar
cwtl
cmp
lcall
icebp
mov
pop
dec
dec
jnp
frstor
fstpt
pop
dec
loope
dec
and
pop
and
mov
jnp
pusha
loope
cwtl
or
ret
push
mov
loope
aas
movsl
mov
mov
mov
or
iret
cmp
ret
je
ljmp
cmp
jge
out
or
dec
push
in
mov
sbbl
cmpb
in
cwtl
fwait
fwait
inc
movsl
jne
inc
rorb
daa
imul
scas
push
push
push
mov
xchg
mov
push
mov
nop
and
and
cmp
addb
scas
adc
push
aaa
es
cltd
dec
mov
arpl
loope
sbb
add
pop
jp
mov
daa
xchg
outsl
mov
cmp
leave
or
mov
jno
xor
imul
test
pop
xlat
cld
insl
test
dec
dec
xor
jmp
fists
into
sbb
cs
xor
xor
mov
out
fadd
xor
mov
adc
shrb
lret
into
mov
and
adc
xor
call
add
pop
cld
push
cmp
loope
xor
in
je
fistps
cs
jno
jno
lahf
outsl
cmp
aaa
mov
push
shrb
dec
dec
inc
loop
jno
sbb
sti
fstpl
fwait
in
mov
out
pop
stc
mov
xor
cs
out
bound
dec
sbb
sub
addr16
int3
adc
adc
sub
lcall
jno
les
fistpl
jl
aam
call
pop
jmp
add
cltd
movsl
push
mov
shll
add
jmp
pop
or
mov
or
mov
xor
mov
xchg
cmpsl
dec
or
jp
xchg
test
mov
mov
sbb
jae
stos
add
push
mov
mov
or
stc
call
adc
ds
fisttpll
stc
xorl
pop
push
pop
mov
mov
xchg
pop
inc
sub
shrw
mov
notb
jbe
lods
arpl
adc
mov
xchg
push
mov
imul
pop
pop
push
inc
test
fsubp
rcl
or
mov
sub
cld
es
mov
pop
push
lret
push
iret
stos
sbb
and
pushf
popa
popa
mov
jmp
je
or
test
xor
xchg
mov
jne
repnz
in
call
cmpb
sub
loope
sbb
sbb
push
or
and
imul
xchg
jmp
fdivs
xor
jae
mov
xlat
sbb
sbb
xor
dec
cmp
stc
adc
mov
out
popf
testl
xchg
hlt
scas
adc
movsb
aam
cmp
and
push
cmpsl
out
xor
push
sti
mov
pop
pop
mov
mov
faddp
adc
lods
sbb
adc
xchg
sbb
inc
cmp
and
push
outsb
cwtl
jbe
xchg
cmp
mov
into
mov
adc
cmp
cmp
sbb
dec
loope
or
mov
and
lret
fwait
std
and
lock
mov
inc
and
sub
jl
filds
es
mov
clc
ficomps
je
psllq
adc
lock
ja
mov
fsubrl
sahf
test
sbb
xor
test
test
es
xor
push
inc
jnp
test
inc
pop
jns
mov
aas
sti
dec
sti
popf
inc
mov
mov
ss
cmpsl
addr16
mov
jg
mov
pop
sarb
pop
inc
aaa
mov
adc
sbb
aaa
fmuls
out
jl
setg
adc
lds
add
and
and
sbb
loopne
inc
push
push
movsl
shrb
scas
mov
push
or
jne
mov
ffree
adc
adc
movsl
rcr
jmp
jmp
jle
jle
dec
add
add
add
add
add
add
mov
add
dec
add
or
add
add
fwait
add
add
add
imul
add
add
add
add
or
add
add
loop
add
xor
sbb
sub
mov
sub
or
orb
incl
ljmp
ja
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
push
and
orb
jo
gs
add
add
add
add
mov
add
add
add
add
add
je
add
and
add
outsl
movsl
rolb
inc
add
add
add
add
cmp
mov
sbb
filds
arpl
jae,pn
push
arpl
je
repnz
add
outsb
jae
jb
inc
aaa
add
aaa
sbb
inc
mov
adc
mov
lea
inc
testb
cs
pop
lret
incl
adc
clc
add
sbb
push
adc
jge
out
mov
lea
decl
mov
gs
inc
rolb
jbe
cmpl
add
adc
xor
push
push
call
cmp
add
add
adc
adc
mov
lea
add
adc
mov
clc
inc
roll
add
sbb
add
add
push
lock
cmpsb
add
add
add
add
add
add
sub
clc
add
add
push
imul
pop
ss
outsl
imul
arpl
outsl
int3
cmpsb
inc
inc
push
popa
add
inc
push
popa
gs
adc
add
gs
addr16
push
dec
jb
test
imul
add
add
add
addb
add
adc
add
add
mov
movsl
xlat
mov
cltd
lods
and
shlb
lcall
dec
mov
icebp
dec
or
cmp
loope
jns
pop
xchg
xor
sbb
push
pop
adc
in
negb
adc
or
repz
xchg
xlat
out
sbb
nop
mov
adc
mov
xchg
das
mov
std
pop
shl
repnz
sub
movsl
mov
and
push
mov
sbb
divb
xor
rcrb
jmp
xchg
xor
fidivl
mov
ds
xor
fcoml
and
rcl
sub
jmp
adc
push
fisttpll
data16
leave
mov
addb
mov
cmpsl
pop
jae
sbb
fiaddl
inc
mov
mov
jae
movsb
sbb
mov
xchg
flds
mov
movsb
push
orl
call
or
xchg
loopne
dec
aaa
jns
les
orl
shrb
dec
stc
outsb
cmpsl
dec
add
mov
jno
or
jle
addr16
in
xor
mov
subl
into
jp
orl
sbb
push
rcl
push
stc
movsl
out
les
add
aas
adc
stc
hlt
test
fidivs
and
pop
jge
into
xchg
jmp
and
jne
cltd
xchg
and
out
shll
mov
sub
testb
cli
pop
les
das
iret
out
add
sahf
lods
out
mov
push
outsb
push
push
and
bound
insl
or
movsl
push
rorl
ret
dec
push
mov
mov
in
shrl
cmp
fbld
mov
dec
enter
xchg
fwait
sbbl
sbb
jle,pn
sub
dec
pop
fidivl
add
jmp
inc
or
sbb
lret
dec
mov
int3
sarb
jb
pop
cwtl
push
sub
pushf
scas
add
cmp
mov
repz
fdivr
hlt
mov
sub
jl
mov
adc
mov
or
daa
or
call
xchg
mov
jnp
add
or
jns
outsl
cmp
pop
jp
outsb
imulb
cli
mov
jp
leave
shl
loope
add
dec
cmp
pop
lds
lcall
or
or
aam
sbb
xchg
stos
pop
test
xchg
inc
push
xor
loopne
mov
mov
fidivrs
outsl
fdivrl
aad
mov
sub
ss
adc
or
out
addr16
js
xchg
gs
adc
cmpb
stc
ficoml
dec
test
sub
jne
cmc
xor
orb
sub
xor
add
arpl
inc
push
insl
adc
mov
int3
pop
dec
xchg
xchg
mov
inc
sbb
andl
cmp
or
mov
out
stc
sub
mov
pusha
push
popa
mov
daa
inc
lds
sbb
sbb
xor
push
jne
fs
pusha
pop
out
stos
fmuls
jge
repz
es
ficoml
mov
sbb
cltd
dec
loopne
xchg
call
pop
iret
xchg
jle
jno
mov
ds
pop
pop
cld
stos
outsb
push
inc
or
xchg
mov
xor
cmp
adc
in
in
jge
push
ljmp
push
xchg
cmpsl
dec
je
push
xchg
cmp
movsb
repz
push
in
into
jle
xchg
mov
cwtl
mul
push
fsubl
cmpsb
or
adc
psllw
xor
inc
mov
dec
mov
aaa
loope
xchg
mov
fcoml
rcrb
cmpsl
add
sub
xchg
pop
mov
scas
sub
dec
in
cwtl
leave
inc
dec
call
jmp
bound
adc
loope
sbb
cmpsl
stc
mov
in
and
add
fwait
pop
fldz
icebp
aaa
int
out
out
pop
test
call
or
arpl
ss
negb
and
daa
inc
out
cltd
jmp
movsl
xchg
adc
jno
xchg
inc
xchg
push
mov
push
imul
fidivrs
loop
push
test
and
movsl
dec
roll
pop
adc
cmp
cmp
test
inc
add
push
test
cmp
add
inc
insb
fstps
push
jge
cmp
pusha
sub
lea
jns
cltd
les
dec
push
adc
movsb
inc
movsl
dec
adc
sti
jle
sarl
sub
mov
sbb
mov
push
clc
dec
loopne
and
push
add
jmp
adc
push
mov
fwait
jecxz
fisubs
or
mov
dec
aad
aas
inc
pop
lret
fs
iret
dec
orl
in
fildl
jns
test
lahf
xor
test
mov
testb
fwait
push
lret
test
add
ret
jle
out
ja
sbb
mov
fs
pop
bound
out
lret
in
sar
les
sub
mov
push
into
scas
dec
insl
mov
jge
jae
ds
ja
dec
mov
movsb
sahf
add
adcb
daa
sti
lcall
fsubrl
pop
or
ret
jg
std
cmc
add
jg
shll
sti
and
ficompl
mov
ror
xchg
repnz
or
pop
lahf
sbb
bnd
shr
lods
rcrl
hlt
xrelease
cwtl
addr16
fistps
dec
mov
sarb
fwait
bound
ja
mov
ret
lods
mov
shll
into
inc
test
pop
push
enter
push
nop
aam
dec
iret
add
int3
repnz
mov
jge
cltd
shrl
push
jecxz
mov
cvtps2pd
fs
outsl
out
imul
mov
fmuls
call
adc
sbb
xchg
sbb
sub
jmp
mov
pop
xor
sbb
dec
cs
cmp
pop
scas
ds
ret
xchg
sahf
test
scas
scas
mov
sbb
mov
mov
data16
fsubrl
dec
rsm
adc
cwtl
iret
out
sub
and
in
xchg
and
cmp
sti
mov
jno
into
jl
jl
fstps
pop
mov
out
add
fisubl
movsl
inc
stos
mov
dec
sbb
sbb
gs
addr16
inc
sbb
scas
outsb
lock
jae
adc
jp
xchg
sub
loopne
bound
aam
jns
add
sub
mov
or
and
test
dec
cmp
addb
cwtl
test
pop
push
push
fistpl
or
mov
push
lret
divb
sub
sbbb
mov
and
enter
rclb
movsb
adc
or
xchg
jle
mov
jns
mov
cmc
shrl
push
push
fidivrl
shlb
in
cli
cmpsb
js
aaa
aad
mul
arpl
and
mov
dec
pushl
inc
adc
popa
icebp
lock
mov
ficompl
sub
mov
outsb
aas
imul
cmp
cld
inc
arpl
dec
outsl
dec
push
sub
add
lods
scas
sbb
je
mov
and
inc
inc
out
ss
cmp
mov
dec
jp
fs
pop
push
and
jns
outsb
and
jp
mov
mov
imul
inc
or
mov
pusha
mov
push
dec
lods
sbb
sbbl
ds
jb
inc
loop
bnd
in
movsl
push
mov
pushf
inc
ficomps
sbb
xor
xchg
insl
jae
out
adc
stos
sub
pop
movsb
xchg
jg
cmp
xchg
outsb
sub
pop
adc
ds
insb
imul
add
in
int
inc
mov
test
xchg
push
mov
xor
cld
or
scas
out
adc
scas
pop
inc
cmpsl
arpl
dec
mov
mov
sub
daa
jl
add
xlat
or
pop
in
xchg
aam
inc
js
cli
jne
lret
cmp
or
xchg
shll
outsb
sub
xchg
hlt
mov
or
lods
mov
rorl
imul
daa
ds
jno
loop
sub
ljmp
mov
lods
cmp
stos
stc
bound
mov
add
repz
sbb
aas
mov
add
xor
xchg
xrelease
mov
xor
mov
imul
jo
movsb
dec
insl
insb
dec
xor
inc
inc
pop
divb
enter
dec
sbb
adc
fisttpll
push
and
add
gs
jo
ret
pop
out
xchg
sbb
cmp
movsl
mov
mov
pop
sbb
sub
shl
add
jp
push
loope
and
in
mov
fnsave
push
dec
bound
sbb
and
push
je
xor
adc
add
jae
movsl
mov
xchg
sub
ja
mov
sti
xchg
sub
stos
add
or
dec
xchg
shl
pop
jecxz
insb
scas
jl
lret
orb
mov
out
fdivrp
pusha
mov
test
mov
mov
cld
jmp
jno
xchg
lds
mov
jno
fisubrs
rclb
js
add
aaa
cwtl
fidivl
pop
dec
retw
mov
cmp
insb
cwtl
clc
ds
sti
aam
xchg
adc
jle
mov
cmp
sbb
jl
lahf
add
dec
adc
jle
in
mov
mov
jb
faddl
dec
lret
adc
das
pushf
outsb
popf
movsb
inc
push
out
bound
mov
cmp
subb
leave
shll
ss
mov
lock
xchg
cmc
xchg
inc
or
and
or
movsl
add
mov
jno
scas
repnz
or
dec
imul
cmp
xor
mov
cmp
inc
sbb
aaa
insb
or
out
negl
movl
fimull
sub
lds
mov
cmp
popa
inc
adc
cltd
popf
out
jle
mov
idiv
xorl
int3
push
pusha
pop
movsl
mov
sahf
or
out
pusha
je
mov
push
jae
lea
pop
add
add
movsb
sub
jl
fildll
cmpsl
xor
mov
dec
adc
xchg
push
xor
sub
and
mov
sbb
mov
sarl
jg
or
add
dec
push
pop
lcall
sub
loop
pop
push
inc
enter
movsb
repnz
cmp
in
leave
aas
and
loopne
pop
push
movsb
pop
cwtl
lcall
push
cmp
adc
mov
add
outsl
mov
rolb
and
jmp
int
inc
lret
scas
jecxz
add
push
rcrb
lea
lret
inc
lea
jl
sub
mov
jge
lret
xchg
xchg
fdivrl
sarb
mov
push
jle
jp
in
repnz
fprem
cmp
call
stc
es
dec
in
jmp
xlat
xorl
push
push
push
sub
push
int3
add
inc
outsb
mov
pop
stos
addb
adcb
ss
mov
xor
cmp
mov
sub
jge
sbb
sub
pop
push
xor
push
mov
add
cmp
pop
xor
mov
xchg
bound
mov
fldenv
push
clc
out
dec
ret
push
adc
or
int3
and
add
xchg
ds
fcoml
add
sub
xor
pop
add
push
pop
ret
popa
cmp
cltd
ret
push
in
out
pop
mov
fcoml
mov
lods
pop
pop
xchg
lock
fnstsw
clc
add
sub
into
xchg
jmp
cwtl
jbe
xor
fdivrs
cs
movsl
xor
test
andl
stc
push
pusha
lahf
add
xchg
sbb
pop
cmp
adc
faddl
push
mov
sbb
aas
mov
in
jl
out
mov
mov
cmp
lds
hlt
mov
call
fnsave
sbb
or
dec
mov
imul
mov
pop
jecxz
xchg
sti
stc
testb
scas
jae
lds
sbb
push
je
test
je
cmp
lcall
jbe
xchg
xchg
jbe
cmp
int3
push
cli
lock
addr16
lods
fwait
cmpb
rcr
add
mov
inc
push
dec
sub
pop
aas
sbb
inc
faddp
rcl
fstp
adc
push
imul
push
cltd
ds
popa
ja
or
jbe
inc
mov
mov
mov
aam
push
sbb
xchg
js
lret
clc
push
insb
mov
aad
xchg
fisubl
loop
aad
mov
adc
jmp
in
loopne
xchg
outsb
dec
xchg
shlb
and
pop
push
psubsw
leave
in
leave
fs
fsubs
insl
dec
testb
and
cmp
ljmp
leave
sub
pushf
pop
and
dec
xor
jle
push
ret
mov
push
outsl
mov
cld
adc
or
imul
mov
push
xchg
xchg
mov
inc
jge
cmp
xchg
lahf
jle
les
icebp
in
inc
adc
popa
ds
gs
xor
push
jnp
lret
pop
int
cmp
aaa
lock
repnz
xchg
jg
xchg
cmp
push
sbb
shl
jmp
mov
cs
mov
mov
and
sbb
mov
inc
pop
dec
push
mov
movsl
ret
xchg
arpl
xor
pop
inc
push
pop
in
cmp
mov
sbb
and
xchg
mov
push
dec
jne
ljmp
lahf
sub
in
data16
xchg
mov
cmpsb
add
cmp
mov
add
fcomi
daa
jg
int3
call
dec
test
cmp
shlb
pushf
jbe
es
adc
lock
imul
mov
popf
scas
popa
ss
mov
xchg
addl
je
mov
mov
sub
xchg
or
xchg
xchg
pop
lahf
imul
push
cltd
pop
in
pop
or
push
pushf
loope
mov
cmp
iret
add
or
out
or
pop
xchg
xchg
push
adc
shlb
or
jne
addr16
and
mov
sbb
sub
dec
fnstcw
xchg
jmp
xchg
jp
pop
sbb
dec
out
and
push
jg
mov
les
rorl
sbb
jg
shrb
pop
lret
push
dec
and
fidivrl
push
movsb
dec
xchg
fs
movsb
push
adc
ds
hlt
adc
js
push
ror
cmp
test
cmp
sub
cmp
add
test
inc
sub
jl
inc
push
cmp
sub
jecxz
popa
aam
imull
jle
mov
xor
adc
cmp
cmp
clc
sbb
fimuls
sub
mov
mov
add
mov
jmp
mov
ljmp
testl
sub
pop
mov
sarl
sbb
push
insb
cmp
xlat
sbb
enter
cmp
cwtl
test
repnz
mov
int
arpl
mov
mov
add
jp
push
push
xlat
xor
loop
pushf
repnz
sub
iret
fdiv
insl
ja
rolb
cmp
mov
cmp
rorl
inc
outsb
aam
call
add
fisubrs
jg
mov
test
js
movl
scas
hlt
fs
sbb
add
xchg
add
push
mov
inc
xchg
loopne
adc
sti
and
neg
stos
test
lahf
inc
ror
cmp
jmp
or
sbb
inc
adc
das
mov
pop
ficomps
in
outsb
test
dec
xor
add
or
cld
pop
mov
test
flds
mov
arpl
pusha
cs
ret
mov
cwtl
in
add
push
std
or
lods
and
popf
cltd
jl
mov
inc
mov
pop
add
in
adc
jl
xchg
or
xchg
push
adc
push
inc
sub
cmpsl
xor
jecxz
push
cmp
push
jmp
hlt
fucomp
adc
les
les
dec
or
sbb
nop
sbb
mov
sahf
cmpsb
xchg
push
sbb
imull
sbb
xor
int
lret
mov
gs
hlt
cmpb
loopne
sbb
stos
inc
repz
or
ja
imul
mov
cmp
fbstp
bound
sahf
das
iret
dec
je
dec
cli
les
sahf
lret
cmp
orl
push
mov
stos
mov
sbb
mov
cli
test
push
mov
lahf
mov
enter
dec
aaa
sub
pop
inc
cmc
xor
mov
xor
lahf
andl
mov
jnp
out
inc
sbb
sti
mov
xor
jne
cmc
js
int
dec
clc
jne
add
imul
add
mov
dec
cmpsb
dec
fcoms
adc
and
jge
std
adc
xorl
mov
cmp
and
jb
imul
sarb
mov
ja
sti
pop
inc
in
scas
repz
std
xchg
push
test
xor
ds
jae
out
cwtl
fbstp
push
out
and
jnp
add
les
inc
pop
push
mov
pop
rcrb
mov
sbb
out
xchg
sbbl
cmp
shll
lahf
int3
cmp
sbb
daa
loop
jnp
jp
std
lods
in
lods
lcall
sub
scas
push
inc
dec
jb
mov
jno
pop
and
mov
cmp
cmpsb
sub
ret
add
mov
test
icebp
scas
rorb
sub
idiv
push
xchg
dec
loopne
out
jg
clc
jmp
cltd
jp
stos
stos
push
xchg
lea
sahf
xor
popa
mov
mov
loope
xlat
sahf
stos
jecxz
mov
jb
lods
xchg
scas
int
pop
lds
into
popaw
cmp
ss
or
outsl
sbb
cmpsb
nop
sub
movsb
xchg
fldt
cmpsb
jmp
push
daa
mov
clc
leave
addr16
xchg
xor
roll
dec
mov
xor
xchg
ret
data16
es
imul
mov
inc
stc
xor
sahf
push
jmp
mov
push
mov
test
add
shrl
hlt
rcl
in
iret
mov
aad
inc
pusha
bound
stc
lods
xchg
pop
and
lea
jle
shlb
jle
out
sub
imul
mov
xor
ds
xlat
and
pop
js
push
add
rol
or
and
les
insb
add
add
add
adc
add
add
addb
add
gs
add
add
add
test
add
add
fadds
add
mov
add
add
inc
xor
add
add
addb
add
add
ret
dec
int3
int3
int3
int3
int3
int3
int3
int3
pop
ljmp
add
add
and
and
and
add
adc
add
add
add
add
pop
push
add
xor
dec
add
add
ret
and
mov
sbb
sbb
sbb
sbb
sbb
sbb
jecxz
cmp
jecxz
inc
dec
outsb
out
push
imul
dec
je
mov
cld
cld
fnstenv
sahf
cmc
sar
clc
mov
add
push
je
cld
mov
jl
lea
mov
cld
mov
lock
adc
call
or
push
in
add
xchg
push
add
adc
add
rclb
test
adc
stos
inc
add
push
adc
add
shr
add
xor
push
incl
mov
push
cmp
loope
pushl
and
cld
or
adc
or
add
stos
sti
add
loopne
add
dec
add
loop
cmp
lea
add
adc
adc
adc
dec
add
rolb
pop
add
pop
sbb
add
add
sbb
cmp
sbb
sbb
sbb
sbb
sbb
pop
add
sbb
add
sub
fs
insl
outsb
add
je
add
shrb
push
add
add
add
add
insb
fs
insb
add
popa
inc
je
mov
in
insb
add
inc
xor
popa
add
jg
add
add
add
add
jl
add
add
add
add
in
mov
add
cmp
pop
call
push
sub
cmpsl
mov
addr16
arpl
cmp
cltd
in
xchg
pop
push
aam
jmp
mov
xor
nop
pop
in
and
cwtl
push
or
mov
cmpsb
adcb
push
adc
in
push
sahf
repnz
int
and
shrl
bound
push
ljmp
mov
imul
lods
fwait
dec
hlt
aad
out
daa
mov
ficompl
testl
mulb
lods
icebp
mov
repz
jge
shrl
aas
sbb
push
sub
ret
pop
mull
xchg
push
xor
out
jmp
jno
jne
sub
cmp
dec
cmp
clc
pushf
int
repnz
out
mov
lods
adc
iret
stos
pop
adc
inc
ja
or
ss
testb
jecxz
xor
es
or
mov
pusha
dec
fisttpl
dec
pop
sub
xor
and
jg
jno
add
xor
std
mov
cmpsb
cmp
xchg
stc
push
xchg
xlat
movsb
mull
std
xlat
inc
cli
cwtl
or
enter
std
loop
pusha
incl
inc
ret
sub
std
daa
data16
loope
mov
cld
jecxz
ss
stos
pop
inc
xlat
add
add
sbb
test
push
loopne
in
jp
aam
xchg
clc
pop
cmpsb
cmpsb
aas
jg
or
stos
jp
ds
mov
out
pop
pop
dec
out
fwait
gs
jnp
inc
test
push
dec
mov
jecxz
add
pop
xor
rcll
push
loope
clc
out
pop
add
mov
adc
rorl
push
sub
add
in
into
test
xchg
outsl
stos
adc
cmpl
andb
sub
pop
mov
inc
mov
push
sti
cmp
or
fdivl
dec
aam
pushf
into
push
jbe
call
pop
out
lret
mov
pop
sarb
sbb
jno
outsl
jg
rclb
ret
add
je,pt
mov
rcrb
pop
mov
inc
insl
and
xor
popf
fdivl
jmp
fwait
adc
jne
xchg
cmpsb
clc
daa
test
add
mov
fucom
stc
xor
push
int3
cmp
or
ret
sbb
add
sub
and
add
cmpsb
and
pop
push
cmpsl
fisttpl
jb
vmwrite
movd
add
lds
cmp
cmpsb
sbb
adc
add
sbb
push
mov
add
cmp
jge
or
adc
test
mov
fistps
loope
jne
cs
jmpw
js
scas
cld
repz
xor
mov
movsb
out
lea
insb
push
fsubrp
inc
inc
scas
push
lahf
add
pusha
cltd
rcll
arpl
shlb
dec
mov
sub
cmp
add
sub
das
movsb
inc
push
fldcw
inc
ret
push
stc
mov
mov
es
je
dec
jo
xchg
fwait
out
xchg
push
xchg
push
repnz
cmp
arpl
push
mov
mov
inc
and
lods
adc
xorl
imul
orl
rorl
es
jmp
cmp
scas
cmp
test
popf
ds
adc
xorl
ds
loope
loope
pop
negl
icebp
into
cltd
pusha
bound
jg
std
jp
inc
xor
mov
and
pop
sahf
fidivl
ds
loopne
fisttpl
in
in
adc
shrb
ret
mov
nop
jecxz
sub
and
cs
int3
cmp
mov
leave
ficomps
cwtl
sub
mov
mov
filds
insb
xor
jns
int
fists
pop
push
hlt
fadds
mov
mov
jmp
or
mov
mov
mov
sbb
mov
andb
xor
cli
mov
lcall
mov
cli
push
xchg
hlt
insb
pop
cmp
lret
xor
xchg
or
sbb
sahf
pop
and
insl
in
xlat
lcall
xor
in
pusha
jle
scas
and
sbb
cmpsl
jle
lret
xor
add
mov
cld
cmp
stos
sub
aad
jg
mov
mov
sub
subl
adc
shrb
cli
sbb
push
xor
nop
sub
test
pusha
inc
inc
mov
test
stos
ret
or
mov
sbb
pop
lret
fsubl
negl
lret
pop
cmp
xlat
scas
push
adc
mov
lods
lahf
aad
xchg
pop
pop
sbb
xor
or
enter
cld
sbb
add
pop
call
incl
mov
cmp
and
inc
push
clc
mov
in
and
leave
xchg
icebp
test
xor
cltd
mov
inc
mov
push
ja
push
push
mov
cmp
fsts
cltd
in
pushf
js
push
loope
mov
mov
imulb
scas
lret
nop
dec
movb
pop
sti
ljmp
mov
leave
sti
push
lret
xchg
lds
adc
subb
and
scas
scas
dec
bound
pop
enter
jmp
mov
dec
in
movsl
sbb
xchg
mov
ss
add
jne
cwtl
mov
out
xlat
mov
iret
outsb
mov
jns
adc
adcl
add
aad
push
nop
lret
fistpll
sbb
pop
add
or
ficompl
sub
xor
push
sub
stos
push
popa
push
cmp
es
lods
loopne
jae
rol
mov
data16
pop
push
xchg
je
sahf
xlat
lock
pop
incb
jo
dec
popl
ss
or
push
and
jae
lea
addr16
inc
jmp
jle
push
stc
sahf
dec
shll
add
mov
and
gs
cmp
push
cmp
pop
mov
mov
push
ret
push
push
add
cmc
xchg
xor
jle
iret
mov
jle
mov
movb
xchg
sub
loope
jle
mov
fs
shl
es
mov
call
add
lahf
push
dec
imull
int3
xor
nop
loop
ss
in
cmp
aaa
imul
loope
jnp
lea
movsl
adc
xor
loope
stos
mov
aad
aad
push
ljmp
aas
dec
fisubrl
cmovle
xor
mov
and
jle
or
and
cmc
push
adc
popf
and
xchg
shrl
iret
into
in
call
xor
mov
in
sub
cli
jne
stos
xor
insl
jo
addr16
pop
push
repnz
add
cmp
scas
or
orl
scas
out
pop
xchg
inc
mov
cld
jl
ffree
jne
imul
jnp
bound
jecxz
adcl
pop
push
cmpsb
add
pushf
in
lock
addb
inc
es
jnp
mov
out
jnp
jl
repnz
pushf
xchg
dec
loopne
lock
or
movsl
sub
cld
push
or
das
push
mov
ljmp
mov
test
dec
into
mov
push
jnp
les
mov
mov
arpl
ret
repz
cmp
jne
mov
sbb
orb
loopne
insl
cld
negl
gs
negb
lret
iret
xor
pop
pop
andl
lret
movsl
lods
ds
repz
pusha
and
aam
lds
bound
add
inc
inc
or
cltd
pop
or
dec
cmp
loope
in
out
cs
inc
push
sub
pop
add
or
scas
lock
ljmp
inc
jne
ret
xchg
jmp
push
add
je
sbb
scas
xchg
mov
adc
push
out
shlb
inc
xor
xrelease
and
fnstsw
daa
and
inc
popw
fs
adc
mov
xor
sub
adcl
xchg
mov
add
in
xor
out
subb
jg
sbb
mov
pop
mov
adc
adc
xchg
fwait
mov
push
lahf
dec
pop
or
insl
xchg
scas
xor
mov
fisubl
es
pop
push
iret
xchg
xor
xor
loopne
in
push
or
rcl
es
out
sub
sub
xchg
or
mov
in
aam
sbb
mov
scas
xor
push
xor
outsl
jbe
cltd
sbb
sbb
loopne
jae
dec
mov
add
fld
loop
add
ret
lret
outsl
mov
add
cs
dec
push
stos
fisubrl
mov
sub
push
scas
cmp
jl
jge
inc
cmpsb
enter
fisubrl
pop
pop
cwtl
jle
es
jmp
jae
inc
xor
push
bnd
cmp
add
xor
jnp
mov
push
shl
sbb
jle
lret
lea
dec
pop
adc
add
xchg
lods
roll
clc
sub
gs
fnstcw
sbb
ret
jo
pop
pop
icebp
or
jne
add
fistpll
std
push
mov
jle
dec
sub
movsb
mov
das
leave
cltd
lea
bound
lahf
insb
std
incl
mov
divl
scas
push
pop
inc
mov
sbb
mov
jecxz
jl
xchg
cmp
or
or
push
ljmp
push
add
jecxz
cmp
int
test
mov
mov
adc
clc
stos
lret
leave
cwtl
pop
test
subb
popf
test
jecxz
jnp
arpl
sbb
daa
and
ja
jg
inc
and
mov
lret
daa
leave
xchg
xor
push
cmp
out
dec
roll
jno
sub
ss
aam
push
xchg
xor
pusha
pop
or
popa
dec
jo
leave
lret
ret
lret
cmp
inc
hlt
aam
subb
dec
out
or
dec
xchg
addr16
mov
stos
add
xor
add
mov
add
sbb
popa
mov
xor
cmp
sub
je
cmp
addr16
idiv
hlt
and
shll
xchg
push
cmpsl
sub
or
sbb
negb
or
divb
jo
repz
push
les
imul
pop
inc
scas
inc
mov
adc
out
sub
mov
adc
ljmp
in
pop
dec
rol
negb
in
push
xor
sbb
add
xlat
sub
insb
xchg
push
stc
dec
ja
lret
lcall
dec
outsl
push
push
mov
out
rclb
test
sbb
xor
adc
fs
pop
push
xor
in
cmpsb
out
int3
push
je
das
mov
cmp
lock
jne
ret
es
scas
add
push
mov
sbb
mov
pop
loope
cmpsb
fstps
test
daa
xor
and
in
push
jnp
sbb
xor
push
mov
loop
mov
xor
cmp
mov
or
cwtl
mov
add
jp
ss
xor
dec
adcb
jo
mov
mov
int
imul
das
sub
int3
bound
push
or
outsl
and
push
sbb
sbb
mov
cwtl
cli
inc
insb
insb
test
enter
loopne
aas
inc
fnstcw
stos
sbb
insl
push
ja
in
sub
call
das
inc
int
dec
sub
stos
adc
push
subl
mov
xlat
cs
inc
dec
mov
or
mov
or
pusha
sarl
mov
fs
mov
dec
repz
insb
and
push
cmpsb
xor
repz
mov
popf
ljmp
jp
lret
int
repz
xchg
notl
push
xchg
test
xchg
icebp
adc
mov
shrb
mov
testl
sbb
add
int
lret
inc
js
xor
insl
mov
iret
xor
loope
in
xor
aas
or
xchg
adc
int
nop
in
sahf
lock
or
push
insb
jl
pop
sbb
mov
cmp
jne
gs
jmp
inc
nop
idivb
mov
sbb
in
pop
int
xor
pop
and
popa
cwtl
dec
jmp
stos
dec
dec
mov
push
xchg
adc
ss
mov
xor
fs
iret
pop
mov
sahf
push
sarb
shl
jo
xor
cmp
xchg
lcall
rcrb
fwait
stc
imul
or
dec
push
mov
jnp
mov
jg
popf
test
pop
das
fisttps
xchg
adc
mov
and
push
pop
pop
pop
sub
jb
xchg
adc
cwtl
inc
xchg
dec
cwtl
fisttps
fxch
or
pop
cmp
fidivrs
xor
adc
cmp
sbb
mov
xchg
lcall
lret
adc
cli
sbb
lret
mov
mov
push
fwait
jmp
orl
scas
mov
or
mov
loope
mov
dec
adc
fnstcw
insb
cmp
lods
loopne,pn
dec
cmp
mov
icebp
movsb
int
push
out
add
sub
out
adcl
or
push
inc
stos
xorl
mov
xor
dec
mov
mov
mov
cltd
xchg
mov
pop
enter
aaa
or
les
ficoms
cmpsb
pop
mov
stos
lret
mov
stos
cmp
js
pop
test
call
inc
and
dec
mov
xchg
ljmp
sub
lods
mov
into
sbb
mov
mov
mov
gs
and
jl
jno
mov
xchg
cmp
jecxz
push
sbb
xchg
xchg
xchg
and
and
mov
flds
fs
div
jge
dec
in
cltd
push
jle
pop
sbb
ret
cltd
stc
push
cmp
andb
cmpb
fwait
data16
mov
jb
dec
dec
cmp
insl
xchg
test
aad
repz
xchg
es
in
popl
cmp
daa
dec
push
dec
into
mov
mov
in
mov
test
dec
xchg
aad
es
repnz
pusha
imull
add
inc
cli
jl
xor
jl
cmpl
add
in
dec
pop
inc
jl
mov
movsl
imul
aaa
ficoml
jl
mov
out
fistl
in
sbbb
in
and
sbb
lcall
int
cmp
and
dec
xchg
add
leave
outsb
es
adc
outsl
xchg
add
lahf
xchg
sbb
mov
pop
mov
pushf
mov
mov
adc
cmpb
and
sbb
imul
call
mov
mov
aad
inc
and
mov
lods
lret
sbb
mov
jg
inc
sbb
movsb
fwait
in
push
lock
pop
lret
add
xchg
jbe
push
adc
lahf
push
pop
fnsave
fistpll
loope
divl
mov
xor
mov
inc
dec
pop
ja
jecxz
pop
xchg
jne
dec
jnp
std
insb
cmp
sub
mov
sti
dec
xor
stos
pop
mov
cmpsb
mov
dec
inc
push
cmp
ljmp
fsubrl
pusha
pop
aas
aam
push
out
jp
cwtl
imul
cmp
shl
daa
jmp
mov
fwait
cmp
dec
adc
mov
sub
sub
ret
arpl
int
out
sbb
insl
pop
sbb
andl
dec
ficomps
or
pop
jge
jns
dec
out
cltd
push
ds
mov
dec
and
subb
pop
lock
nop
scas
pop
push
stos
push
xchg
cmp
scas
mov
dec
push
movsl
pushf
push
push
xlat
dec
mov
into
sbb
cmp
popw
ret
xchg
fucom
inc
daa
loop
fstpt
mov
and
fisttps
push
or
test
out
pop
orb
jnp
jns
ss
jmp
add
aad
lret
pop
lret
movsl
push
and
stos
mov
adc
shr
mov
jne
mov
ds
and
je
xchg
out
out
repz
stos
add
dec
movsl
jle
jno
xlat
push
sbb
les
and
test
jns
lods
jae
outsl
push
aas
in
test
enterw
cld
insb
or
inc
add
xchg
mov
rclb
shrb
xchg
rol
loop
jae
cmpsl
adcl
sbb
pop
push
imul
xchg
sbb
pusha
push
loop
sub
arpl
mov
in
test
bound
imul
cmp
mov
movsb
jge
or
hlt
fldenv
mov
xchg
sbb
mov
sbb
in
add
xchg
push
xor
std
xchg
dec
mov
pop
jecxz
mov
enter
shl
push
pop
pushf
out
dec
in
scas
dec
movl
repz
fimull
and
jbe
sub
faddp
push
mov
xchg
ja
inc
xchg
jle
pop
pop
inc
push
pop
std
data16
scas
jg
mov
fsubrs
in
and
adc
pop
pop
mov
loope
jle
fstps
jg
sbb
jae
icebp
add
out
or
sbb
inc
dec
xchg
mov
push
imul
jmp
inc
cmp
adc
inc
mov
hlt
int3
movsl
shlb
sbb
out
inc
cltd
jb
cld
pop
sti
xchg
cmp
cmpsl
xorb
aad
sbb
sub
sbb
insb
mov
xor
lods
fninit
leave
push
add
pop
leave
or
lcall
mov
adc
fisubs
out
push
shrl
mov
add
bound
jl
pop
aaa
lahf
xchg
fnsave
dec
and
lahf
ja
pop
xorl
pop
decl
sub
fiadds
addr16
inc
jge
ret
popf
mov
cld
or
xor
rcl
mov
mov
lcall
pop
push
ficomps
inc
movsl
jg
sahf
or
jl
pop
mov
mov
fsubrl
lcall
inc
dec
scas
cmp
iret
ret
pop
sbb
xchg
dec
rolb
sub
mov
pop
sti
lock
jae
mov
pop
insl
repz
arpl
add
out
imul
sub
lret
popf
mov
cmp
add
adcl
jo
jo
punpckldq
fs
pop
add
sbb
add
stos
cmp
mov
pop
fdivrs
nop
stos
ficoms
add
add
sub
add
add
add
add
pushf
adc
add
add
add
add
jl
add
add
add
add
in
add
add
add
add
add
xor
push
add
add
add
addb
add
sar
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
jae
jb
jo
add
add
add
add
outsl
jb
or
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
push
add
add
add
add
sbb
sbb
sbb
sbb
add
add
add
add
test
add
js
add
outsl
outsl
pop
jb
add
add
add
push
push
movl
add
sahf
rorb
push
pop
test
movl
ret
incl
sub
xchg
inc
test
sub
cld
add
lea
adc
add
push
ljmp
cld
adc
testl
mov
in
push
std
lcall
cmp
std
add
xchg
add
add
leave
fwait
and
incl
add
xor
add
mov
add
call
mov
pop
lea
decl
sbb
sub
push
add
lock
add
call
call
data16
stc
pushl
repz
loopne
jne
add
push
add
push
movl
add
add
add
add
add
add
negl
add
add
add
sbb
sbb
add
outsl
gs
dec
dec
add
gs
je
mov
gs
add
outsl
add
outsl
add
insb
dec
add
mov
inc
js
jne
popa
inc
outsl
add
imul
fs
into
dec
insb
push
insb
push
add
add
add
add
cmp
add
add
mov
add
add
add
add
sbb
add
dec
mov
int3
bound
loop
data16
andl
roll
adc
hlt
xchg
xchg
sbb
sub
dec
sbb
mov
fwait
iret
add
adc
xor
xor
std
insb
outsl
pop
fmull
mov
and
sub
dec
test
mov
out
sbb
lods
int3
adc
jb
in
insl
int
in
je
out
out
stos
and
in
adc
ja
jle
inc
ret
mov
dec
sarb
lret
pop
add
dec
mov
xchg
ss
frstor
push
popa
test
dec
int3
cmp
push
mov
incl
js
cmp
lahf
sub
lods
cmp
test
cli
outsl
mov
cmpl
lcall
aas
gs
in
mov
outsl
in
loop
mov
sbb
imul
dec
or
lret
add
sub
and
pop
jp
adc
aam
hlt
jge
xchg
in
es
imulb
imul
push
cmp
test
mov
ds
jae
xchg
adc
mov
sub
nop
test
mov
and
gs
inc
imul
xor
in
pop
sub
add
xor
xor
ds
xchg
cltd
xchg
adc
or
mov
jge
adc
cmp
sub
xchg
mov
ret
shrb
xchg
fisttps
pop
mov
push
pop
inc
sarl
fcomps
fsubp
sbb
je
scas
loopne
jp
cmp
roll
out
fcompl
std
jnp
ljmp
fiaddl
cld
and
aam
sub
mov
adc
xorl
mov
in
rorl
hlt
pushf
cmc
ret
cmp
test
cwtl
fistpl
icebp
jbe
fisubrl
lcall
repnz
push
xchg
sbb
andl
test
and
lock
lret
icebp
push
out
insl
push
fcmovnu
repnz
lret
mov
push
rcrb
add
adc
cmp
mov
add
jg
je
lock
jb
outsl
xchg
mov
mov
adc
jle
xchg
cmp
bound
ret
jo
sub
mov
push
rcl
and
pop
inc
gs
push
inc
jnp
xchg
sbb
enter
jge
in
mov
imul
cmp
std
sbb
xchg
push
sub
mov
lea
sarb
mov
popa
jmp
std
jbe
loop
pop
aad
pop
mov
adc
mov
lock
fbld
lea
cli
es
sarl
adc
jmp
shll
xor
xchg
add
popf
dec
dec
sub
xor
outsl
sbb
cld
in
jge
push
aam
push
ret
or
add
adc
sub
nop
repz
leave
mov
xor
mov
push
mov
scas
pop
inc
pop
jle
faddl
dec
in
xlat
or
mov
pop
lods
mov
jecxz
hlt
scas
out
mov
inc
insb
fdivrs
mov
fdivrl
push
fnsave
ss
scas
imul
scas
in
das
roll
mov
xchg
roll
adc
and
cmp
dec
int
lret
outsb
outsb
mov
test
sbb
or
addb
xchg
xchg
scas
and
xchg
jne
xor
out
pop
movsb
lret
and
aad
sbb
lcall
mov
and
jnp
je
add
or
xchg
rorl
hlt
mov
pusha
mov
loope
sahf
in
inc
int3
mov
push
popa
daa
mov
ret
andl
pushf
xchg
clc
mov
push
sbbl
lods
push
rorb
xor
inc
xchg
movsb
shl
popa
sbb
in
or
mov
sti
xchg
adc
mov
dec
push
inc
les
sub
insb
inc
std
or
popf
cmc
scas
lock
arpl
dec
scas
add
adc
push
cli
mov
lret
and
xlat
mov
mov
mov
mov
aad
mov
pop
inc
push
add
fnstenv
sbb
add
fidivrs
sub
pusha
or
or
daa
mov
xor
ret
popa
mov
pop
sar
js
repz
sbb
addr16
lcall
inc
add
sbb
sbb
xchg
jp
movsb
mov
pushf
loopne
dec
mov
shll
or
sti
aas
xchg
adc
icebp
stos
out
hlt
sbb
sub
jnp
mov
mov
jns
pop
adc
out
mov
xor
push
repz
xchg
inc
ret
mov
cltd
sub
push
movsb
shll
mov
rolb
jecxz
std
adcl
mov
mov
andl
sbb
inc
loope
jp
dec
fwait
mov
mov
pop
jl
cmpsb
daa
cmp
jge
dec
push
fstl
inc
inc
scas
aam
inc
pop
jle
outsb
cli
loop
pop
fucomp
mov
dec
xchg
adc
into
sub
leave
arpl
test
mov
xchg
pop
out
shrb
test
bound
jo
cmp
je
test
lock
jl
stc
inc
jb
lds
shld
icebp
xor
cmp
test
pop
mov
push
push
stos
pop
mov
movsl
daa
cld
aam
in
les
pop
cli
or
lcall
ret
sbb
xchg
mov
popa
ret
jns
test
mov
dec
dec
push
sub
out
or
add
inc
pop
cmp
es
inc
and
loopne
adc
les
cmpsl
mov
js
adc
shll
rcl
test
std
out
ficoml
out
xchg
outsb
sbb
incl
lcall
aad
arpl
leave
xchg
mov
jp
pushf
insl
pop
popa
mov
pop
or
mov
lock
jle
adc
test
outsl
dec
rorl
mov
mov
hlt
inc
sti
xor
cmp
sbbb
sahf
jnp
dec
mov
push
test
xor
jl
inc
xlat
repnz
xor
pop
pop
xor
mov
data16
xor
cwtl
jae
mov
popf
pushf
rep
test
sub
nop
addr16
sbb
push
les
jmp
leave
loop
jg
push
mov
jne
cmpsl
in
cmc
inc
gs
daa
inc
test
inc
icebp
sbb
mov
mov
add
or
movsl
int
adc
jg
mov
pop
adc
jg
ds
xchg
mov
test
cmp
inc
adc
cmp
ss
add
ret
movsb
mov
and
sbb
jmp
cmp
lds
mov
adc
fnstenv
ret
mov
inc
enter
repz
daa
leave
and
int3
shll
fbld
enter
orb
scas
inc
orb
and
ret
fwait
lret
mov
jge
outsb
cwtl
inc
sbb
xor
and
int3
arpl
and
dec
test
mov
in
aad
pop
push
jg
and
xchg
js
or
push
jg
mov
out
sub
fwait
cli
xchg
mov
or
pushl
mov
fs
or
push
mov
mov
mov
loope
jae
lret
or
mov
and
jmp
rcl
jmp
jl
ds
fistpll
and
push
sbbb
pop
jmp
sub
push
test
xor
cmp
add
sbb
fstpl
mov
cmc
jb
adc
outsb
pop
sahf
add
push
shll
mulb
push
sub
inc
sbb
add
sti
cmc
test
add
ret
pop
das
push
cmpsb
mov
lret
xor
mov
mov
xor
mov
test
cmpsl
push
jecxz
push
rcrl
and
loopne
fldpi
xchg
clc
pop
mov
into
daa
les
gs
jge
popf
gs
enter
lods
xor
ljmp
repnz
lret
lods
insb
jnp
mov
scas
xor
mov
loop
sbb
outsl
dec
ret
jno
add
inc
dec
add
push
pop
adc
jp
dec
xchg
adc
jae
jg
add
mov
out
pusha
imul
pop
hlt
sbb
xor
ss
xchg
jp
mov
movsl
adc
cmp
xchg
mov
inc
jbe
sti
push
les
sub
sbb
mov
push
mov
aas
ds
cli
inc
or
hlt
leave
jmp
jnp
jne
test
jg
adc
pushf
adc
inc
dec
dec
pop
daa
sbb
nop
bswap
or
into
push
or
in
xor
and
test
testb
aam
xor
dec
push
test
in
add
jle
mov
mov
ljmp
sahf
fisttps
sbb
xchg
out
adc
cmp
dec
pop
push
sbb
or
pop
popf
aad
scas
in
fsubs
stos
cs
sub
mov
lods
lcall
push
rcrl
jae
aaa
inc
mov
out
cmpsl
jae
nop
xor
mov
xchg
sbb
adc
iret
add
jle
mov
mov
mov
mov
shrl
popf
inc
shrb
cs
adc
test
ret
les
insl
jno
mov
adc
pop
jo
cwtl
iret
ficoms
aad
leave
fs
dec
cmpsb
add
ret
cmp
inc
sub
lcall
in
mov
in
dec
lods
repnz
mov
rcrl
fdivrs
int
arpl
cmp
outsl
sti
rorl
sub
out
or
sub
pop
lods
and
xor
std
insl
sub
xchg
dec
jecxz
pusha
cmp
fadds
xlat
xor
ljmp
dec
mov
jmp
icebp
push
lcall
push
inc
int
add
mov
mov
jne
pop
adc
jnp
mov
mov
inc
and
leave
adc
fisubs
div
mov
mov
add
dec
pop
cmc
pushf
xchg
push
pop
push
jle
mov
dec
shlb
rolb
add
ret
and
aas
ficoml
jnp
iret
pop
jne
mov
push
jb
adc
mov
and
dec
cmpl
div
xor
push
dec
jnp
push
test
jge
jno
fwait
push
outsb
pop
in
mov
sti
cs
xchg
arpl
mov
sub
mov
loop
or
mov
mov
mov
mov
or
in
pop
xor
pop
cmpsb
ljmp
daa
cmpsl
mov
pop
and
lods
ss
mov
fisubl
lds
das
adc
stos
or
loope
arpl
mov
aam
or
and
stc
xor
dec
pop
movsl
sbb
stc
outsl
sbb
sbb
enter
mov
mov
xchg
stc
inc
cmp
aaa
sbb
xchg
lret
stos
cmp
rorl
lret
jo
clc
cmp
pop
hlt
or
stos
mov
mov
jecxz
in
xchg
pop
xor
mov
pop
mov
cwtl
scas
cmpsb
or
push
mov
xlat
imulb
icebp
out
rcrl
jo
pop
aam
adc
push
lret
in
jbe
in
arpl
stos
jp
inc
daa
pop
push
adc
push
movsb
mov
sub
xchg
call
pop
ss
mov
xchg
mov
out
inc
sub
enter
pop
je
leave
fbstp
pop
fwait
jp
jecxz
jae
mov
pop
mov
and
ror
jne
cmp
mov
mov
cmp
test
inc
inc
jnp
inc
vdivss
push
rclb
adc
mov
sahf
lret
lods
pop
mov
sbb
cmp
out
or
mov
fld
xor
pop
lods
cmc
adc
jno
adc
fisubrs
adc
test
lds
cld
js
or
mov
add
xor
or
adc
or
push
repz
push
push
pop
mov
xchg
shrl
or
adc
inc
dec
mov
or
test
in
test
mov
cld
pusha
dec
mov
cmp
xor
adc
scas
icebp
pop
movsl
jnp
sbb
pop
dec
lahf
es
inc
cltd
add
inc
push
lret
loopne
ss
sub
fimuls
cmp
leave
inc
and
mov
sbb
cltd
inc
cld
das
js
and
mov
ss
push
movaps
mov
cwtl
outsb
lods
mov
jle
mov
data16
xor
mov
fwait
ret
and
push
and
mov
fdivrs
clc
inc
int3
dec
fldt
enter
and
ds
loopne
ss
fwait
dec
xor
inc
lods
adc
sbb
bound
loopne
fiaddl
dec
leave
int
sub
and
push
shlb
push
push
mov
xor
jns
dec
sub
sbb
cmpsb
jno
push
cli
add
inc
out
jnp
xchg
and
stos
jmp
and
addb
pusha
decl
or
cli
and
add
in
out
mov
mov
enter
jbe
int
mov
add
les
or
mull
mov
cltd
and
push
xor
xchg
outsl
mov
loope
movsb
std
jp
test
or
adc
lret
imulb
mulb
dec
es
push
add
lret
lret
xchg
sbb
imul
call
and
push
mov
movsb
aas
rorl
pop
insl
mov
add
jo
fcmovnb
xchg
cmpsl
push
jae
dec
mov
jp
outsl
jns
adc
inc
mov
add
repnz
scas
jle
cmp
cmp
and
add
fidivs
push
outsb
cltd
aad
push
xchg
xor
sbb
les
and
repnz
push
adc
or
lcall
imull
dec
mov
adc
inc
mov
jecxz
mov
push
adc
mov
sbb
sbb
dec
inc
mov
pop
xchg
cli
ja
lcall
dec
dec
mov
gs
and
xchg
and
int
dec
jmp
stos
mov
into
stos
push
dec
mov
cltd
jg
scas
daa
sbb
sub
call
cltd
pop
test
test
in
dec
pop
nop
xchg
mov
sbb
lahf
es
cmp
mov
es
imul
jno
lods
cmp
inc
in
lock
repz
xchg
and
jo
test
jnp
ja
jae
dec
mov
mov
inc
loopne
ljmp
xor
inc
mov
cmp
add
push
mov
push
insl
sbb
xchg
adc
movsl
sarl
das
in
mov
push
sbb
xor
popf
push
pop
sbb
jecxz
sub
dec
push
or
sahf
fs
push
dec
cmp
jg
push
testl
and
sub
out
dec
pop
test
xchg
jns
outsb
les
int3
mov
and
jo
push
enter
mov
push
jo
mov
mov
cld
mov
push
push
jae
xorl
loope
orl
pop
jbe
scas
xchg
add
cld
outsl
aas
fs
sub
pop
ljmp
xor
lods
pop
lods
repz
pop
mov
add
das
inc
mov
inc
push
adcl
cmp
ss
outsb
sub
push
sub
loope
push
aad
pop
ret
adc
jo
push
dec
adc
dec
cmpsl
cmpsl
sub
push
push
jmp
lahf
stos
bound
pop
inc
mov
mov
ret
stos
cmp
scas
xchg
pop
and
daa
adc
jle
jmp
sti
jo
push
aas
ret
stos
leave
add
int
sub
test
push
rclb
stos
xchg
jne
mov
dec
in
pop
pop
andb
scas
sbb
scas
ds
or
sbb
push
cltd
push
mov
jb
shrl
loopne
pop
xchg
mov
xor
inc
inc
jb
subl
push
mov
dec
sbb
rorl
dec
stc
inc
or
stos
cmpl
call
in
popf
cmpsl
or
pop
int3
jno
outsl
call
test
xchg
push
mov
ror
insb
push
rol
mov
sbb
movsb
jo
ljmp
mov
and
cwtl
je
pop
sbb
ret
cmpl
push
lock
ret
push
xorl
push
add
mov
sub
pop
and
fcmovnb
mov
sbb
sbb
dec
lods
daa
fildl
mov
cmp
add
ret
rdmsr
pushf
jne
es
stos
mov
pop
test
cld
mov
mov
jp
adc
xchg
cmpsb
cltd
push
movsb
sahf
xchg
or
std
sarb
jecxz
pop
mov
mov
xlat
push
pop
es
ljmp
push
or
sub
or
enter
js
lods
cli
xchg
mov
sub
insb
adc
clc
negb
cli
xchg
mov
rcr
add
inc
jo
sbb
mov
pop
fs
in
nop
popf
xor
rcl
popf
sbb
stc
cwtl
pop
mov
mov
into
push
fcmovu
fstps
fwait
mov
insl
xchg
mov
fidivl
sbb
push
add
mov
out
jmp
inc
imul
out
jmp
adc
shlb
adc
fsubr
int
stc
test
pop
stc
pop
or
insl
lcall
fistpll
or
lds
sbb
test
xlat
int3
cltd
shrl
adc
mov
dec
test
xchg
xchg
jge
icebp
mov
ret
cmc
loopne,pt
ljmp
lods
icebp
xorl
mov
das
std
call
callw
neg
scas
xchg
pop
lods
jne
mov
aaa
push
xchg
lock
and
dec
std
and
inc
hlt
bound
ficomps
outsb
stc
mov
mov
insl
sbbl
jle
and
push
out
lock
and
push
jno
lock
sahf
mov
bound
mov
je
pop
mov
mov
jmp
fsubp
test
and
adc
sbb
jg
push
mov
cmp
cli
cmpsl
orl
repnz
dec
bound
loop
imul
ret
add
stos
jno
pop
arpl
movsl
and
mov
and
sbb
mov
or
mov
or
scas
rorb
jp
mov
test
xchg
or
add
add
add
add
add
mov
add
add
add
add
add
add
daa
add
add
add
cmp
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
dec
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
jb
and
add
or
sbb
add
add
add
adc
add
add
add
add
add
popa
add
add
add
add
add
mov
add
add
add
push
add
add
and
sub
pop
push
cmp
ja
dec
dec
jo
push
imul
add
int3
inc
xorl
pop
pop
lea
mov
jne
incl
in
mov
test
adc
adc
cld
adc
add
inc
shlb
leave
dec
inc
into
or
xor
add
add
incl
enter
fmull
in
push
clc
add
decl
add
add
add
fadd
incb
add
add
rorb
cld
mov
add
incl
add
add
clc
push
popf
push
add
inc
mov
mov
add
jne
decl
add
lcall
push
test
in
js
add
cs
add
add
or
xor
add
add
je
js
outsl
inc
outsb
je
add
cmp
gs
gs
or
gs
insb
gs
stos
dec
popa
arpl
lods
cmc
push
push
cs
jb
xor
outsl
xchg
imul
push
popa
gs
js
xor
add
add
leave
add
sub
add
add
add
add
add
add
cwtl
add
add
add
sub
add
add
add
iret
cmc
call
in
adc
js
mov
or
push
test
add
xchg
mov
gs
adc
xchg
cmp
and
ret
sub
mov
ret
add
inc
push
xchg
das
sub
cli
adc
cmp
pop
scas
dec
jb
aas
pop
cs
push
sub
cs
shll
adc
stos
mov
fists
lock
test
sbb
sti
repnz
pop
xchg
push
test
cmp
xchg
shll
adc
data16
fwait
gs
inc
loop
inc
js
fwait
mov
pop
cmp
lcall
leave
and
add
clc
push
lock
repz
mov
and
xchg
xchg
pop
push
cmp
add
cld
outsb
or
movsl
fsubs
or
sbb
popf
mov
test
push
enter
adc
cltd
xor
nop
test
cwtl
sub
rcrl
les
mov
std
and
cld
dec
or
mov
mov
xor
jbe
xchg
sub
repnz
in
xor
mov
pop
lods
iret
imul
mov
iret
adc
les
mov
lcall
imul
xor
jmp
aaa
arpl
fstpl
out
scas
loop
insb
jg
outsl
popa
xchg
xor
jne
mov
push
add
lcall
lea
xor
mov
mov
mov
inc
movsl
and
outsb
ss
and
push
dec
pop
rorl
xor
dec
repz
std
clc
into
lds
pushf
inc
jno
dec
sbbb
arpl
or
xor
mov
ljmp
xlat
pop
hlt
mov
and
lcall
pop
in
fs
inc
push
mov
pop
ds
jbe
cmp
cmp
push
cmp
outsl
arpl
lcall
mov
push
mov
lods
xor
mov
dec
cwtl
rep
xchg
and
pop
arpl
push
jmp
repz
push
mov
shlb
add
rcrl
push
and
mov
cmpsb
push
testl
inc
fdivrs
cmpsl
fistpl
mov
push
adc
enter
xor
xchg
ljmp
xchg
cwtl
mov
xchg
fnsave
mov
mov
inc
xor
icebp
stc
fisubrl
mov
ftst
mov
sbb
and
bound
mov
je
mov
lea
and
mov
inc
in
cs
lret
mov
lret
test
fsts
lods
adc
mov
push
xor
lods
lds
pop
jg
int
loop
mov
icebp
js
mov
or
cmc
enter
cltd
cmp
lock
mov
or
mov
push
call
pop
pop
icebp
sbb
jbe
sahf
pop
pusha
inc
push
cmpsl
sbb
sub
mov
clc
sub
stos
std
out
or
cmc
xchg
loop
nop
sub
mov
mov
aad
dec
sbb
pop
or
jnp
add
nop
xchg
test
outsl
push
cmpsb
mov
lock
out
push
jb
add
adc
jno
jbe
cmc
mov
nop
inc
mov
inc
cmpsb
stos
mov
int3
loopne
push
test
ljmp
xchg
data16
push
push
lods
int3
or
pop
das
cmp
inc
lods
add
jge
inc
data16
pusha
mov
pop
ffree
dec
inc
test
inc
loop
jge
xchg
or
cs
daa
scas
or
cwtl
pop
dec
lock
jno
jae
jno
sub
int3
test
push
inc
cmpsb
lcall
movsb
cld
jno
mov
push
sub
pop
out
or
movsl
adc
mov
and
dec
pop
add
add
cmp
daa
les
or
pop
cltd
xor
in
cwtl
ret
inc
inc
ja
or
cmpsb
push
clc
sub
lea
xchg
cld
mov
scas
roll
fistpl
add
std
jg
inc
imul
test
std
mov
adc
pop
or
ret
lret
jne
jo
xchg
call
ja
sbbl
mov
xor
jg
scas
popa
mov
add
nop
into
xor
jmp
and
push
cmp
and
andb
enter
pop
pop
movsb
inc
test
or
xor
pushf
pop
add
push
pusha
mov
insb
lcall
fldcw
lret
imul
je
adc
clc
aas
pop
ret
or
sarl
inc
inc
in
mov
aam
in
mov
inc
pop
cli
leave
in
sub
movsl
cltd
lods
popf
andb
pusha
fs
loop
or
dec
adc
test
jmp
testl
sbb
mov
cmp
insl
mov
fwait
mov
add
inc
inc
mov
das
ljmp
push
sub
sbb
sub
jl
pop
cs
cmp
adc
cmp
sub
fwait
orl
lods
push
xlat
mov
outsb
or
das
enter
sbb
icebp
scas
pop
xchg
jmp
xorps
fwait
scas
add
pop
sub
mov
lret
in
nop
inc
dec
mov
ds
test
test
or
repnz
mov
mov
cmp
cmp
or
test
or
sbb
loop
mov
xchg
inc
enter
pushf
jnp
xlat
pop
adc
fdivr
push
inc
repz
sbb
mov
mov
inc
decl
sub
lahf
outsl
mov
mov
cmp
pop
push
data16
xor
mov
pop
add
pop
loop
jb
add
xchg
ret
lods
je
push
pop
jmp
imul
or
fsubs
sub
test
mov
dec
push
and
sbb
xor
sub
sub
sahf
cmc
fcoml
test
mov
or
gs
sbb
cltd
mov
mov
add
in
sbb
push
inc
jbe
scas
fs
clc
mov
push
xor
cmp
jb
or
negb
dec
int
fdivl
imul
pop
add
insb
mov
or
sbb
mov
flds
mov
mov
pop
jo
or
or
pusha
jns
or
int3
fcmovnb
fsubrl
pop
jge
sahf
mov
sub
adcb
xchg
fwait
mov
xchg
xchg
pcmpgtd
stos
ljmp
fstps
aam
mov
inc
mov
insb
xchg
out
sbb
ljmp
pop
jno
imul
dec
mov
adc
fnstsw
push
cltd
jns
int3
fwait
xchg
outsb
scas
loopnew
es
xor
nop
jns
push
jo
cmpsl
or
in
ss
push
hlt
arpl
mov
dec
sub
push
daa
mov
shll
pop
fwait
cs
dec
inc
add
push
clc
out
push
push
gs
fdivs
out
scas
cltd
fmuls
mov
andb
pusha
test
push
in
push
push
sahf
mov
insb
fwait
jno
sub
scas
jne
push
jb
loope
add
pop
mov
sbb
pop
jecxz
sbb
stos
xor
jle
sub
mov
fistpl
cld
test
mov
xor
repz
popf
mov
cmp
push
add
lea
xor
lret
lcall
insb
xchg
ret
stos
sbb
xchg
mov
cmp
repz
repnz
push
mov
out
pop
and
insb
out
jecxz
inc
ret
pop
inc
fcomps
push
insl
jb
mov
lret
pop
sbb
pop
and
xchg
pusha
xchg
push
lea
sbb
ret
xor
jbe
in
fnstsw
arpl
pop
out
cmp
loopne
lods
lods
fstps
or
lcall
cmc
jge
push
clc
xchg
mov
and
jp
aaa
cld
inc
jl
loope
mov
imul
loope
mov
test
add
pop
xchg
call
imul
or
xrelease
loope
js
ret
mov
loope
xor
adc
pop
xchg
xchg
jmp
jb
mov
mov
movsl
fcoms
or
shlb
daa
add
in
adc
cld
add
bound
stc
dec
aaa
scas
fsubrl
dec
enter
mov
sub
js
xchg
mov
cwtl
sub
fld1
jnp
lcall
arpl
pop
pop
ffreep
mov
mov
inc
fwait
push
mov
mov
imul
sub
ds
xchg
into
das
jl
je
ret
add
xor
jg
add
std
out
mov
cmp
dec
push
xchg
push
xorl
pop
cmpsl
es
cmp
andl
repz
or
jp
jg
sahf
popa
outsl
xchg
aaa
ljmp
xor
sarl
imul
mov
pop
mov
dec
lds
inc
subb
pop
adc
jl
xchg
mov
movsl
cli
shll
xor
xchg
push
sti
outsb
notl
mov
out
inc
mov
mov
rcrb
or
xor
jmp
xlat
aad
mov
fwait
imul
inc
jnp
inc
pop
lret
sub
xlat
loopne
mov
dec
dec
ret
sub
pushf
cmp
movsl
pop
gs
les
xchg
inc
pusha
mov
jns
add
scas
lea
xor
loope
std
xchg
cmc
pop
or
pop
pop
and
mov
add
mov
add
lock
sbb
scas
cmpsb
shl
sarl
mov
pop
adc
adc
test
scas
sbb
loopne
mov
mov
adc
sub
push
add
sbb
add
mov
inc
sbb
enter
lock
inc
sbb
pop
inc
dec
loopne
imulb
jno
push
loopne
movsb
mov
or
lds
and
cmpl
sub
adcb
mov
xchg
push
fcmovu
in
or
pushf
outsl
xor
push
add
imul
mov
pop
sub
aas
push
xor
ss
dec
cmc
inc
pop
sbb
dec
ret
jo
mov
js
repnz
or
rcll
xor
pop
icebp
stc
outsb
dec
pop
mov
in
xchg
and
sub
mov
mov
sub
out
ljmp
dec
leave
sahf
cmp
add
scas
in
jle
jnp
or
mov
ljmp
xchg
cli
pop
xchg
cmc
cmp
into
push
xor
mov
rclw
lds
adc
mov
sbb
jnp
jg
les
shr
fcmovu
adc
pop
jp
aam
mov
inc
add
sahf
lret
pop
push
jmp
mov
mov
inc
xchg
xchg
aad
xchg
in
out
ret
stc
insl
hlt
fnstcw
clc
adc
inc
add
ds
shrl
cs
adc
leave
aad
aaa
push
xor
push
fs
sbb
int
cmp
inc
ja
mov
dec
testl
lea
pop
sub
arpl
jae
enter
dec
adc
in
or
pop
jmp
pop
pushf
cld
jecxz
sbb
add
mov
loope
jmp
js
fidivrl
outsb
shl
add
aam
sub
movsb
push
mov
out
dec
testb
sbb
mov
sbb
in
pop
mov
fcoml
or
cmp
or
mov
arpl
enter
xchg
int
mov
pop
and
bound
xchg
test
pop
lahf
mov
outsl
jl
or
ret
outsb
mov
les
stos
cmpsb
in
push
dec
addr16
pop
leave
ret
shrl
jmp
inc
adc
mov
fst
aad
ficompl
les
pop
hlt
mov
jp
sti
fdivrl
push
test
movsl
lds
xor
sub
adc
les
mov
cltd
rcl
mov
ds
sbb
xor
fldt
xlat
mov
aam
mov
popa
stos
lods
clc
dec
cmp
fsubs
insb
mov
and
stc
in
dec
xchg
lea
push
jb
scas
lea
scas
fcoml
hlt
jne
mov
mov
call
xchg
push
fldenv
pop
fucomp
mov
in
sbb
es
in
push
xor
mov
sbb
jmp
push
cwtl
lods
arpl
xchg
mov
mov
aaa
data16
add
std
movb
rclb
cltd
out
test
xor
clc
and
mov
jge
cmp
fisttpll
ss
stos
xor
sbb
jbe
ficoml
xor
dec
jb
and
adcl
add
xchg
inc
sbb
enter
ljmp
push
test
repz
push
sahf
adc
fstp
loop
dec
pop
lock
xchg
xor
sbb
lcall
inc
sbb
push
out
les
jns
ret
push
lahf
fmuls
fwait
xchg
mov
pop
clc
mov
push
or
push
cmp
and
loope
mov
mov
ret
cmp
ss
and
hlt
pop
cmp
lods
outsb
lcall
pop
mov
mov
loopne
mov
xor
jnp
daa
sbb
dec
cmp
mov
dec
sbb
cwtl
loope
insl
jbe
pushf
sub
and
mov
xorl
pop
lea
stos
push
aaa
addl
cmp
add
lret
in
pop
loop
sbb
into
fcomp
repnz
mov
imul
inc
xchg
lcall
mov
out
imul
xchg
sbb
mov
mov
xchg
sub
pop
xchg
xor
cwtl
ja
inc
push
mov
ja
xor
pop
mov
cltd
repnz
in
jle
or
dec
fcomps
int3
scas
xchg
je
jg
push
sbb
pop
aaa
imul
dec
jo
ljmp
es
xchg
xchg
loop
adc
in
inc
or
cmc
xchg
mov
xadd
cmp
sti
or
push
cmpsl
lods
sub
popf
pushf
pop
aaa
push
aaa
cs
call
mov
clc
test
stos
aaa
jp
sub
in
and
aam
add
cmpsb
cltd
adc
mov
push
lea
out
or
das
ds
or
leave
and
xor
fadds
jbe
add
pop
shlb
lret
xchg
cmp
fs
xchg
rorb
je
stos
push
les
mov
sbb
sbb
test
pop
lahf
ljmp
cmp
sub
adc
cmp
push
add
dec
push
sub
rcrb
stos
sub
test
jno
or
lods
xlat
sub
loop
jge
gs
or
pop
testb
int3
enter
pop
fidivs
fsubrl
jns
jmp
das
es
sbb
fbstp
mov
daa
repnz
movsb
iret
loope
xchg
lret
mov
js
ds
sbb
push
pop
inc
jmp
cmp
mov
jl
mov
mov
adc
pushf
add
pop
scas
jne
outsl
cli
shl
mov
rorb
inc
dec
mov
pop
iret
xchg
cmp
adc
call
sarl
stc
push
jno
pop
mov
fucomi
in
inc
sbb
jnp
mov
mov
sbb
add
push
ljmp
jbe
jmp
mov
inc
lea
mov
mov
or
inc
ds
mov
cmc
mov
xlat
push
sti
push
mov
dec
dec
jno
mulb
push
popa
add
push
and
sub
dec
data16
push
aam
mov
imul
into
pop
cmp
test
mov
insl
sbb
cltd
stos
leave
mov
adc
mov
and
adc
sub
pop
inc
xor
addr16
stc
xchg
ret
push
jbe
pop
sbb
mov
rcrb
inc
inc
lods
push
aad
ja
and
mul
push
lods
into
and
lahf
push
pushf
enter
xchg
cmp
sub
pop
sub
imul
in
pop
aad
aaa
push
inc
adc
push
sub
in
rcr
pop
pop
in
aad
lea
push
stos
push
int
and
xchg
inc
int3
into
push
lret
or
maskmovq
mov
inc
shrl
dec
inc
adc
lcall
xchg
cmp
inc
mov
leave
aam
lcall
jbe
imul
jns
fcompl
cmp
sbb
xor
rol
pop
adc
leave
inc
push
ds
jl
pushf
into
jmp
das
repz
jecxz
lret
push
or
mov
movsb
lcall
adc
adc
js
jp
mov
mov
fistl
and
push
pop
or
mov
ficompl
push
mov
mov
bound
rcrl
lret
jl
fisubrs
mov
cmc
insb
loope
hlt
loopne
std
xchg
and
xor
xor
repz
lock
cld
or
sbb
outsb
inc
lds
shlb
mov
faddl
sahf
xchg
mov
jmp
jno
mov
cmc
lds
in
mov
jl
outsl
cmp
xchg
push
jns
or
insb
sbb
ficoms
mov
insb
pop
dec
rolb
sbb
jl
or
adcl
repz
jl
test
shr
mov
inc
rolb
and
xchg
mov
enter
xchg
sbb
pop
and
repz
lcall
ljmp
ljmp
call
mov
aad
cwtl
into
xchg
sub
fistpl
sarl
cmp
add
lcall
in
stos
cmp
cmp
pop
jns
popl
push
fsubrl
and
dec
mov
add
aad
stc
ds
addr16
loope
push
cmpsl
push
xchg
push
or
fs
add
adc
bound
add
add
mov
sub
sbb
icebp
dec
and
cld
sbb
test
in
dec
movsb
sbb
inc
mov
andb
add
add
jmp
add
add
add
dec
add
add
add
pop
add
mov
add
leave
add
sub
add
add
add
add
nop
add
add
add
sub
add
add
add
add
add
add
pop
add
and
add
adc
add
add
add
stos
stos
add
jle
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
or
jne
or
jecxz
add
js
xchg
add
addb
add
insb
add
add
add
add
add
add
adc
add
and
jo
gs
loopne
jae
inc
outsb
imul
push
daa
add
enter
or
pop
js
xchg
mov
sub
decl
add
add
cld
or
adc
add
push
repz
push
filds
push
push
dec
push
push
or
or
pop
ss
pop
test
adc
add
ret
sub
push
push
push
lock
loopne
add
clc
or
push
test
lea
push
and
decl
dec
decl
add
add
cmp
clc
lea
adc
inc
sub
enter
inc
inc
adc
lock
push
in
push
nop
movl
add
add
add
add
mov
push
inc
inc
add
gs
imul
gs
gs
je
inc
inc
gs
dec
jbe
je
arpl
add
dec
dec
inc
imul
jge
add
outsb
add
push
addr16
add
jb
inc
inc
jo,pn
add
add
rolb
inc
add
push
add
repz
and
popa
push
shlb
push
lahf
and
lret
xchg
inc
sub
pusha
test
insb
push
push
test
add
jl
aas
xchg
std
movsb
inc
imul
jbe
lds
pop
mov
lods
popa
outsl
enter
aas
mov
inc
push
lea
adc
mov
mov
and
loope
xchg
lea
jmp
fcomps
in
and
movsb
cmp
cs
iret
stos
aam
icebp
test
add
pop
inc
and
mov
mov
push
adc
ds
xchg
pop
sub
mov
adc
popa
jg
mov
pop
fs
pop
xchg
sbb
sbb
daa
add
fstl
out
adc
cltd
jmp
mov
sub
ljmp
push
or
pop
add
pop
jle
or
in
aaa
lcall
xchg
aam
mov
pop
xchg
movntq
out
and
mov
adc
addr16
jmp
jle
imul
jecxz
shrb
mov
out
dec
jnp
xor
xor
cmp
mov
adc
out
in
pop
outsb
pop
lock
sbb
xchg
repnz
pusha
jns
sub
or
lds
cmp
mov
rolb
pop
and
pop
jl
aaa
push
hlt
and
add
stc
into
and
fld1
mov
lock
shll
xchg
cmpsb
xchg
inc
pop
pop
inc
pop
sbb
fdivrl
jo
push
lret
mov
aaa
xor
and
rorb
test
lods
imul
shrb
lahf
decb
xchg
out
sub
lods
repnz
sbb
repz
loope
sbb
flds
push
sub
fs
and
xchg
xchg
push
xchg
xchg
sti
jo
sahf
push
dec
dec
inc
xor
gs
pop
and
push
mov
shll
xor
js
in
sti
int
jnp
fucomp
pop
jne
or
or
add
xchg
ret
adc
dec
orb
addr16
mov
dec
adc
or
mov
std
bound
adc
push
adcl
xchg
nop
mov
enter
out
cmpsl
mov
fnstenv
rol
jecxz
repz
je
cltd
cmc
idivb
dec
and
sub
jno
subb
add
xchg
mov
mov
mov
test
dec
in
jno
ljmp
xor
fimuls
pushl
shrb
push
cwtl
xchg
stos
or
lds
cltd
test
filds
aaa
outsb
cmp
testl
scas
cmp
adc
mov
inc
loop
loope
xor
ret
and
punpckhwd
movsb
ret
cmpsl
cmp
mov
pop
or
add
aam
inc
mov
jnp
or
push
jp
sahf
xlat
adc
cld
sub
or
push
test
scas
inc
adc
sub
jge
stos
jno
rolb
xor
inc
and
dec
scas
lods
push
dec
xchg
loopne
jge
cwtl
mov
gs
mov
or
pop
dec
fwait
clc
jg
and
pushf
rolb
sub
lret
mov
popf
aaa
xor
clc
outsb
mov
pop
dec
pop
inc
aad
adc
or
inc
jp
mov
jnp
adc
mov
shr
jae
jge
xor
push
fsts
pop
shlb
loop
cmpsb
xchg
int3
mov
xchg
ret
push
mov
jge
ja
dec
dec
mov
outsb
push
push
dec
loopne
test
xor
push
cmpsb
cltd
outsb
xor
sub
sub
xor
pop
pop
loop
push
adc
insb
cmpsl
sbb
les
xor
lea
dec
xchg
push
iret
pop
add
inc
pop
dec
rcll
enter
sub
sub
and
popf
aas
fwait
js
inc
mov
cmp
test
test
ret
ret
ds
aas
cmp
or
mov
lret
pushf
xchg
cmc
cld
int
inc
das
add
je
xlat
add
pusha
mov
cli
mov
adc
pop
outsl
sbbl
xor
add
neg
test
sbb
sti
sbbl
jp
dec
ficompl
jb
fidivs
push
mov
dec
jno
cmpsb
mov
jae
ljmp
jg
lcall
addr16
mov
shlb
out
mov
fsubl
dec
pop
mov
arpl
insb
push
adc
mov
enter
and
pop
enter
xchg
fmull
in
shlb
ds
pop
mov
outsb
movsl
push
out
fldl
outsl
mov
cmp
jl
daa
inc
pop
iret
inc
ss
xor
dec
add
cmp
seta
mov
push
pop
cwtl
jge
jle
shl
mov
push
aad
imul
bound
mov
xor
ret
adc
imul
pop
and
push
hlt
lret
outsl
mov
jle
stc
cld
insl
rorb
out
or
adcb
push
push
aam
ds
and
xor
jmp
cmp
mov
jne
pop
popa
mov
xlat
mov
sbb
clc
mov
mov
sub
sbb
inc
fisttpl
xchg
lcall
jnp
les
jns
and
push
cltd
pop
addr16
pop
icebp
and
sbb
movsl
sbb
dec
cmp
pop
mov
mov
imul
cmp
jno
test
jno
mov
pusha
jmp
fmulp
mov
jo
cltd
jmp
and
arpl
rcrl
pop
cmp
fwait
xchg
mov
jmp
fiaddl
pop
dec
lcall
arpl
stos
test
cmp
loop
scas
jg
inc
mov
xchg
rorb
xor
xor
pusha
and
jbe
and
cmp
aam
jno
inc
mov
add
mov
cmp
aaa
pop
fldl
mov
mov
lods
les
stos
je
stos
sbb
push
aam
daa
enter
mov
sub
jp
repnz
inc
mov
shl
dec
in
sub
test
inc
jo
push
movsl
and
xor
push
and
iret
jle
lret
out
test
sub
movsl
lea
sub
je
xor
push
push
repnz
pop
mov
shll
sub
sti
outsb
pop
sub
mov
or
cmp
xor
leave
div
xlat
add
sub
adc
lcall
shrl
pop
sub
or
inc
jb
dec
inc
arpl
stos
jbe
adc
mov
xchg
adc
iret
les
mov
adc
scas
loop
cmp
jnp
je
fdivrp
gs
lahf
in
inc
sahf
aam
leave
xchg
mov
sbbl
cmp
sti
fs
push
lea
call
add
pop
mov
scas
jge
aas
push
stos
insb
jbe
ja
mov
fs
jbe
movsb
es
and
push
mov
psubsw
pop
sbb
lahf
loope
nop
add
xchg
cmp
mov
pop
xor
fisttpl
das
push
xchg
pop
data16
pusha
fcoml
xchg
pop
in
mov
cs
push
dec
xor
mov
cmp
xchg
fsubrp
sub
mov
xor
lret
adcl
dec
inc
add
lcall
ja
add
sti
lcall
in
mov
sbb
xchg
in
mov
std
out
dec
dec
into
mov
fildll
inc
sbb
inc
nop
lods
icebp
insb
decb
repz
cli
inc
jl
adc
shrb
jo
mov
enter
push
push
or
xchg
lods
adc
stos
in
cltd
xchg
ljmp
jl
sbbb
addr16
and
rorl
int
xchg
in
pop
mov
lea
and
stc
pop
mov
mov
xor
lods
mov
daa
dec
daa
and
pop
sub
jmp
cld
out
pop
jae
jnp
add
xchg
stos
xchg
or
xchg
nop
cmc
cmc
lods
hlt
sbb
cmpsb
and
jnp
sarb
mov
leave
rcl
pushf
popf
lock
push
pop
mov
or
sbb
mov
xor
sbb
cli
hlt
rcrl
jo
out
into
out
mov
stos
aad
jo
xor
push
pop
adc
push
push
call
jo
jecxz
loope
or
adc
popa
inc
das
adc
mov
cli
fcmovne
fmul
adc
or
jb
and
packuswb
call
cmp
imul
fs
fcmovnu
add
call
xlat
testl
gs
loop
pop
pop
mov
sub
sbb
call
rclb
str
xor
mov
out
or
jno
mulb
jmp
jmp
mov
push
xchg
dec
popa
mov
push
xchg
cwtl
add
pushf
sbb
aaa
dec
shl
mov
mov
pop
fimull
mov
daa
lods
jmp
push
fs
test
inc
adc
and
xchg
xchg
es
mov
fstps
mov
rcll
dec
inc
es
push
aas
jge
xor
cld
das
clc
std
mulb
push
sbb
andb
sbbb
clc
push
arpl
add
mov
repz
insl
inc
pop
push
fs
or
cmp
jo
and
cmc
shr
cmp
pushf
sahf
pop
es
sbb
pushf
and
test
pop
lods
outsb
shll
popl
pop
and
ficoml
add
into
push
cmpsl
xchg
loop
cli
loop
daa
fsubs
lock
popa
add
adc
and
std
lret
notl
pop
sti
push
mov
pushf
iret
push
testl
inc
out
idivl
push
or
shlb
outsb
test
push
inc
in
arpl
outsl
xor
push
sbb
adc
call
fbstp
andb
inc
sub
int3
mov
scas
scas
mov
and
fidivrs
arpl
cmp
leave
dec
das
popf
pusha
int3
cmpxchg
outsl
cwtl
mov
and
js
loope
pop
mov
stc
xchg
push
xor
cli
pop
inc
ja
adc
pop
fwait
into
jg
jo
es
jg
xor
mov
sub
aas
xchg
dec
mov
movswl
loope
je
jp
add
mov
adc
mov
push
mov
mov
mov
xor
mov
mov
add
mov
mov
fsubrp
rcll
push
push
sbb
sar
sub
shrl
xor
or
add
sub
cmpsb
xor
cmp
popl
pop
dec
outsl
jbe
cmc
mov
iret
das
and
mov
sbb
rorb
mov
sarl
aad
or
mov
xlat
sbb
fxch
pushf
fidivs
lret
xchg
int
out
push
mov
push
outsb
sbb
enter
mov
mov
aam
scas
cmpsl
aas
out
arpl
jge
and
xchg
js
subb
nop
in
push
std
inc
es
inc
or
popa
or
sahf
add
adc
mov
pop
and
cmpsb
iret
sahf
loope
dec
pop
bound
pop
mov
std
scas
push
cmp
aam
mov
jmp
lock
mov
sub
mov
in
fucomp
int3
inc
stos
lret
mul
fdivl
cmp
out
mov
sbb
add
inc
ljmp
sti
sub
mov
in
or
cmc
stos
push
add
inc
testb
loop
or
es
in
adc
mov
mov
mov
mov
sub
aaa
scas
ljmp
aam
dec
test
xchg
std
mov
in
subb
sub
and
dec
jne
sbb
dec
xor
pop
movsl
dec
adc
adcl
mov
int3
mov
inc
lahf
jl
and
iret
jno
xchg
and
fnsave
fadds
sbb
out
xchg
sub
cmp
lcall
mov
lods
or
sti
mov
ret
jb
add
icebp
cld
pop
mov
jbe
test
loop
jg,pt
fcomps
xchg
jl
pop
cmpsl
add
mov
jmp
lods
fstpt
pop
jo
sbb
ss
jecxz
cmp
shll
cmpsb
shlb
repnz
push
sarl
xchg
or
std
iret
mov
mov
sub
mov
aaa
and
xor
inc
cmpsb
std
les
test
nop
inc
cwtl
push
add
and
adc
mov
rcrb
push
and
imul
imul
out
cmp
scas
jge
jle
in
shrb
mov
rcl
xor
ds
sti
aam
mov
in
push
adc
clc
js
cld
mov
fisubs
and
test
mov
or
test
xor
andb
mov
jns
xchg
dec
rcll
adc
sub
inc
bound
sub
inc
jg
inc
pop
or
mov
ds
mov
jns
sub
lods
mov
inc
andl
xlat
push
sbb
shrl
pop
clc
cwtl
rorb
aaa
pop
dec
or
subb
xchg
movsb
and
inc
xchg
sbb
sti
jmp
adc
addr16
jns
out
je
pop
add
out
jae
pop
insb
mov
pop
fwait
das
scas
push
cli
popf
sub
aas
dec
xchg
cltd
xchg
cmp
mov
rcrb
mov
dec
mov
insl
movsb
cmp
jno
xchg
and
daa
das
and
inc
cmp
xchg
jp
outsb
inc
or
or
jle
cmpsl
and
fnstsw
popf
in
lods
call
into
bound
nop
mov
data16
insb
repnz
aam
cltd
push
into
push
mov
mov
js
out
inc
addr16
out
pop
push
or
movsl
dec
pop
les
xor
ja
int
movsb
outsb
pop
add
repnz
enter
jo
clc
les
popa
pop
cli
data16
pop
aaa
fstpt
xchg
jl
stos
cmp
mov
fmull
mov
ds
sbb
test
cmp
add
jbe
pushl
mov
icebp
xor
scas
outsb
sbb
ret
xchg
aaa
jmp
and
push
sub
int
decl
add
xor
and
filds
insl
sbb
ss
mov
jp
mov
aas
cmp
pushf
adc
ret
push
dec
das
cmc
dec
js
fcomip
adc
lret
pop
pushf
rcrb
fcomps
cs
pop
pop
fstl
test
cwtl
dec
push
jne
jnp
push
inc
dec
and
std
divb
daa
in
aas
sub
lds
outsl
stos
mov
mov
fisubrl
jns
pop
inc
movsl
cmpsb
dec
jno
mov
ljmp
arpl
push
pop
sub
mov
outsl
dec
xor
or
push
ficompl
xchg
and
aaa
popa
aad
xchg
cmp
mov
stc
push
sarl
pop
and
leave
test
fbld
nop
cld
dec
mov
xor
orb
imul
imul
sbb
aad
and
sub
xchg
pop
into
jg
dec
pop
cmpsb
fnstcw
push
scas
push
adc
lock
xchg
mov
inc
fstl
sub
jnp
mov
and
out
repz
and
jbe
and
inc
mov
jl
into
cmp
in
pop
ret
into
xor
hlt
mov
shrb
iret
mov
xchg
adc
jae
add
cmpsb
cwtl
cli
aam
push
mov
cwtl
ljmp
jg
lret
std
mov
les
mov
cmp
inc
add
xor
repz
jae
dec
mov
jns
lahf
or
mov
sti
mov
leave
xchg
or
or
push
arpl
nop
movsb
data16
xchg
lods
pop
sub
push
mov
cmp
loopne
shll
das
xor
push
inc
mov
lock
lds
scas
bound
test
inc
jae
mov
es
arpl
pop
int
test
mov
mov
fdivs
lods
fmulp
fbld
cvtpi2ps
inc
dec
dec
cmp
nop
aad
div
xor
or
call
lods
rol
inc
xchg
in
test
pop
xchg
jns
nop
out
or
mov
dec
push
int3
mov
cli
imul
sbbl
in
or
or
in
movsl
int3
out
dec
mov
test
mov
fmull
cmp
shll
movsb
xor
mov
adc
pop
cmp
mov
movsl
mov
jns
mov
and
outsb
sbb
sub
aad
in
push
repnz
outsl
insl
pusha
pop
push
push
jmp
jle
and
jp
sub
mov
data16
sub
push
adc
lret
popf
mov
xchg
mov
out
cmp
mov
mov
loopne
push
shld
icebp
loope
xor
cmp
lret
mov
lcall
fisttpll
es
add
movsb
and
xor
push
mov
call
xor
pop
divb
xor
cmp
and
insl
jbe
or
push
pop
shl
loope
nopl
cmpsb
aam
faddp
in
inc
jo
sti
push
push
out
cwtl
cwtl
lea
add
xor
pop
dec
les
and
jp
cld
div
call
fnsave
xchg
call
lds
jg
subb
repz
adc
out
std
add
mov
inc
test
mov
xlat
lret
dec
cmp
es
jno
and
cmp
add
xchg
sbb
aaa
ss
movsb
jne
call
jns
mov
pop
ret
fs
sbb
jnp
push
xor
push
outsl
out
sub
in
dec
mov
sbb
mov
sbb
sub
fwait
out
mov
mov
cmp
mov
gs
pop
repz
es
stos
inc
data16
and
sbb
cmp
movsl
in
and
dec
in
jnp
add
mov
dec
push
mov
rcrb
fcomps
loop
cs
jle
xor
inc
jecxz
push
cli
adc
mov
mov
fs
sub
aam
adc
andl
test
dec
fidivs
mov
in
pop
mov
jmp
ljmp
and
sbb
sbb
dec
pop
stos
loope
lret
pop
xchg
das
pop
lock
add
add
add
mov
add
add
and
add
add
add
rolb
add
add
inc
add
push
add
add
add
add
add
add
add
repz
and
add
addb
arpl
add
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
and
outsb
and
and
les
lods
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
mov
add
add
inc
add
or
xor
add
and
jb
push
outsl
xorl
or
push
insb
gs
jnp
shll
call
shr
fadds
push
incl
dec
add
call
std
std
dec
test
call
adc
lea
push
jne
mov
pop
stc
mov
pop
pop
add
push
adc
xchg
sar
repz
stc
aam
movl
add
pop
daa
adc
xor
test
add
loop
lea
loopne
loopne
lcall
add
roll
and
lock
push
adc
std
lcall
dec
repnz
inc
push
push
lock
call
in
push
push
subb
add
add
cmp
add
add
add
add
add
cmp
out
add
add
inc
add
jnp
insb
add
add
inc
gs
movsl
js
add
outsl
arpl
gs
gs
gs
insb
add
push
xor
push
add
add
out
gs
gs
loopne
insb
insb
insb
dec
dec
add
add
add
add
add
add
movl
add
mov
add
add
add
add
add
and
out
addr16
test
xor
das
sub
and
xchg
rorb
and
dec
push
imul
push
fbstp
test
lahf
and
lret
popf
lret
jb
cwtl
ret
mov
fldenv
add
mov
fisttpl
mov
ljmp
jmp
in
test
add
xchg
xchg
arpl
inc
adc
mov
xchg
pusha
cwtl
jns
xor
inc
and
add
add
cli
loope
stos
stos
mov
cmp
pop
push
fwait
js
hlt
movsb
sub
dec
inc
cmp
or
sbb
std
cmpb
daa
lcall
sbb
mov
xor
loopne
pop
sti
mov
adc
ret
fldl
sti
mov
ja
in
sub
out
jecxz
add
lods
leave
faddl
add
inc
xchg
xchg
ret
cmp
mov
popf
in
xchg
jecxz
push
and
fildll
ja
lret
sbb
imul
stos
sub
int3
xor
enter
aaa
xchg
push
xchg
aas
inc
xchg
mov
dec
push
imulb
cmpsl
rol
adc
xchg
mov
imul
mov
adc
jns
inc
fistl
nop
dec
andb
jno
popf
out
mov
ja
xchg
test
xchg
rorb
js
or
mov
mov
jae
mov
lcall
sbb
mov
jp
out
jmp
test
rcll
cli
es
mov
stc
in
push
mov
xor
and
mov
lret
pop
int
arpl
or
ss
icebp
cmp
int3
arpl
pop
gs
neg
mov
mov
mov
aas
fwait
ror
insl
loopne
sub
in
xchg
jecxz
dec
push
xor
dec
fs
loopne
mov
or
push
jmp
cmp
lock
dec
lods
fdivs
clc
hlt
xchg
mov
enter
aam
lea
pushf
xchg
outsl
loop
mov
aam
movsl
add
cli
add
leave
fbld
cmc
xchg
dec
mov
out
lahf
cmp
ja
outsb
aas
push
push
jns
leave
sbb
and
into
jge
and
mov
jns,pt
ret
and
outsb
sub
stc
test
push
mov
mov
xor
inc
push
push
inc
rcrl
movsl
divl
add
movsl
fidivrs
sti
xchg
iret
test
in
loop
dec
test
jl
out
mov
cmpsl
fucomi
ror
into
divl
pop
aaa
stos
icebp
and
call
or
lock
xchg
addl
pop
mov
mov
sbb
inc
lret
sbb
loopne,pt
loope
mov
cmp
push
pop
xchg
leave
sbb
lret
das
push
or
pop
push
shll
mov
and
enter
jle
cs
and
jne
push
xor
into
out
xchg
int3
or
mov
sti
testl
or
jb
faddp
or
adc
imul
test
insl
outsl
dec
aam
inc
sahf
popf
mov
adc
ds
push
outsl
test
idivl
jle,pn
jecxz
lcall
sahf
nop
dec
les
mov
jmp
jae
jne
cmp
es
add
loopne
in
sub
test
sarb
fwait
jae
xchg
js
pusha
pop
lds
and
test
mov
cmp
xor
mov
jns,pn
xchg
pop
test
and
pop
mov
adc
xchg
or
mov
dec
lock
xlat
sbb
stos
push
insb
jg
pusha
jo
sub
leave
fmulp
adc
sub
test
lea
mov
xchg
push
jno
xchg
out
push
inc
add
cli
sbb
pop
outsl
gs
xlat
sub
xlat
pop
xchg
das
mov
loope
mov
cmp
adc
popf
ss
fisubrs
cmp
pushf
xor
jmp
stos
cmpsb
pop
popa
mov
pop
enter
aam
notb
movsl
ret
das
inc
fistpl
push
into
cltd
data16
fisubrs
iret
xchg
or
mov
xor
jb
dec
add
addl
out
fistpll
addb
aad
sbb
push
fidivs
cli
sub
fs
les
lds
call
push
mov
pop
cmp
addr16
or
repnz
mov
std
mov
ss
inc
inc
pop
test
daa
cmp
jo
scas
arpl
es
adcb
xor
rol
cmpsl
inc
jb
lret
aas
inc
subb
lcall
jo
jmp
shl
add
mov
mov
lock
nop
repz
xor
fwait
add
jae
lods
jae
lcall
xor
loop
add
stos
adc
mov
sbb
clc
push
adc
scas
js
ds
outsb
rorb
fldcw
mov
jno
inc
xor
cmpsb
out
fidivs
lds
or
pop
mov
sub
jae
sar
in
rcrl
dec
out
push
lret
stos
sbb
lcall
mov
mov
ds
dec
test
sbb
fdivs
mov
jmp
sbb
cmp
lea
xor
les
fildll
ljmp
xchg
jge
mov
and
dec
es
lcall
dec
sub
pop
sub
gs
cmp
inc
or
jno
dec
ret
sbb
arpl
fwait
ja
jne
push
jl
mov
or
out
jnp
sbb
adc
push
jae
mov
fnstsw
sub
cmp
cmp
xorl
bound
popa
enter
pop
clc
int3
loopne
mov
lret
fisubrl
in
stos
in
mov
mov
dec
jb
jmp
xor
std
pop
sbb
dec
das
xor
mov
out
add
insb
scas
ljmp
jns
pop
dec
out
and
call
add
filds
pushf
cmc
popf
jns
test
dec
xor
mov
or
xor
inc
sarb
sub
jne
inc
dec
fwait
or
and
add
sub
adc
insl
add
je
xor
cld
cs
cli
sbb
sbb
addr16
jns
add
dec
mov
sub
mov
lret
xor
pop
or
mov
adc
or
call
mov
fdivl
push
mov
jl
dec
inc
popf
les
add
xchg
push
je
inc
cmc
in
nop
push
add
pop
popf
push
and
es
mov
subl
xchg
xchg
loop
stos
inc
stc
lock
jge
pushl
mov
push
out
mov
sar
inc
mov
and
inc
shrl
movsl
push
fnstenv
insb
cltd
mov
xor
andl
jno
insl
or
fs
and
out
push
sbb
xchg
test
jns
add
jmp
jmp
rcll
in
xchg
inc
push
pop
adc
aad
rcrb
push
mov
cmp
push
sar
out
aaa
sbb
pop
addb
fisubs
add
xchg
dec
mov
ds
imul
sbb
pop
test
aad
movsb
xlat
jns
push
mov
jne
inc
aam
pop
inc
sub
xor
repnz
fldl
int
je
imul
test
or
aaa
sahf
push
mov
add
int
rol
loop
xchg
push
inc
test
push
fnstcw
mov
outsl
xchg
in
add
or
movsl
fmull
lahf
roll
pop
mov
out
repz
push
daa
negl
dec
roll
test
cmp
add
out
loop
pop
add
push
stos
das
sub
jg
inc
aaa
and
insb
and
test
std
pop
adc
test
xor
jecxz
popa
stc
inc
stos
xchg
fs
xchg
jmp
movsb
popf
mov
xchg
clc
fisubrl
fiadds
lret
je
xlat
loopne
cmpsb
scas
mov
hlt
xchg
dec
dec
pusha
jg
pop
sbb
dec
clc
loopne
xchg
sbb
int3
imul
xchg
push
lcall
arpl
les
pop
cltd
or
adc
jmp
test
dec
int
jno
stos
lock
scas
cltd
inc
idiv
cmp
push
pop
in
in
fiaddl
fsub
leave
pop
cmc
imul
mov
cmpb
jmp
ret
sub
and
bsr
push
icebp
mov
gs
push
sahf
add
cmpsb
jns
cmp
fdivrp
cmp
and
in
sub
scas
in
and
icebp
sarl
lods
adc
js
std
test
cmp
loop
sbb
shll
push
sbbb
cmp
pop
lds
inc
ret
nop
mov
stos
jno
lds
jnp
pop
popa
xor
inc
jge
fisttpl
mov
mov
stc
iret
push
repz
jge
mov
gs
mov
flds
bswap
inc
add
addr16
jns
testl
and
xor
or
icebp
sub
dec
ljmp
cmp
sahf
cwtl
fcoms
adc
cmpsl
aam
jb
bound
pop
mov
push
in
test
sbb
sbb
mov
clc
push
addr16
dec
orb
int
pop
pop
in
inc
mov
jo
sbb
sub
xchg
add
fadd
mov
jbe
ja
pop
jecxz
pop
jnp
or
adc
clc
pop
adc
lods
mov
addr16
roll
popf
push
sub
and
or
lea
outsb
and
mov
in
push
fldcw
inc
mov
test
cmp
outsb
sbb
sbb
adc
fcoml
int
pop
cltd
test
xor
jg
push
sub
mov
mov
jecxz
insb
repnz
imul
bound
jle
and
inc
inc
jbe
push
cmc
xchg
pop
jge
adc
xchg
outsl
lcall
fiadds
mov
movsb
fcmovnbe
jge
mov
mov
mov
xchg
push
in
notb
jecxz
loope
sbbb
sub
cmp
mov
fistps
jae
sbb
mov
jl
dec
gs
movsl
jl
jp
inc
xchg
cmp
loop
lret
lock
test
stos
sbb
lods
adc
dec
push
jecxz
cltd
add
add
scas
stos
mov
and
ret
xchg
pop
and
jb
addr16
sbbl
sbb
add
push
push
cmc
loop
cld
add
ljmp
int3
and
xor
arpl
aam
in
repz
inc
shrb
add
cmp
dec
mov
jns
gs
int
out
fdivr
sbb
sbb
int
ljmp
inc
dec
sbbb
les
xor
jmp
mov
dec
fimull
in
add
or
push
pushf
push
jno
movsl
push
mov
pop
inc
ret
movsb
js
xchg
ja
and
pop
pop
jae
inc
jmp
ja
mov
push
mov
nop
pop
idivl
push
in
and
xlat
sbb
aam
xchg
int3
mov
leave
subb
mov
popa
cmp
mov
out
jmp
adc
sbb
push
pop
mov
mov
fistpl
sbbl
xchg
in
outsb
xor
insb
pop
xchg
sbbl
cwtl
enter
mov
xchg
hlt
leave
rclb
or
cmp
mov
jo
nop
or
daa
adc
cmp
jno
push
mov
insb
out
cltd
data16
cltd
ja
mov
xor
mov
int3
adc
js
mov
xchg
mov
xchg
stos
and
mov
inc
ror
add
testb
fisubrs
das
pop
and
or
xor
test
and
orb
add
pop
mov
test
xor
dec
sub
iret
enter
dec
je
rolb
addb
out
mov
mov
and
pop
mov
mov
lahf
adc
push
and
mov
cwtl
inc
out
jmp
sub
xchg
xchg
data16
sbb
test
mov
push
aaa
shr
sub
push
xor
ficoms
nop
ffree
and
jmp
in
lds
cmpb
sub
mov
fpatan
mov
cmp
movsb
push
rorb
cwtl
push
xchg
xlat
cwtl
push
fldt
imul
imul
push
xor
stos
jmp
mov
xor
popf
push
iret
lods
jbe
mov
pop
cld
mov
mov
insb
ret
pop
mov
and
fst
stc
lock
mov
repnz
jmp
fdivs
push
jmp
jecxz
mov
dec
push
rcrl
or
imul
popf
and
jne
mov
jmp
xchg
pop
sub
in
iret
cltd
mov
mov
jle
shr
jnp
push
mov
xchg
xchg
cs
cwtl
mov
stos
cli
outsb
jo
xor
pop
xor
sub
das
lods
fdiv
cs
xor
add
std
stos
xchg
inc
dec
dec
xor
push
jp
out
out
and
adc
add
insl
push
sub
jl
xchg
fs
outsl
add
dec
scas
jmp
xchg
add
daa
int
imul
cmp
loop
push
scas
pop
leave
insl
lods
je
ret
shll
in
fsub
movb
inc
dec
iret
das
inc
sub
mov
or
adc
mov
inc
pushf
pop
call
cmpsb
test
outsl
sub
mov
aas
arpl
jbe
dec
mov
inc
sarb
loope
fsubrs
cmp
jae
jmp
pop
xsaveopt
call
popf
stos
or
popa
sub
jl
push
into
sbb
adc
enter
mov
and
push
mov
add
fidivrs
push
out
adc
push
nop
lret
stc
and
into
mov
pop
lcall
fdivs
pop
and
lea
and
out
xor
jne
xchg
into
stos
inc
mov
stos
mov
jg
cmp
xor
and
xor
and
push
xor
fistps
inc
or
fisubrl
push
cltd
mov
sbb
mov
dec
pop
sahf
stc
fwait
fwait
cmp
pop
hlt
mov
loope
xlat
or
mov
lea
push
lods
imul
fmull
mov
or
push
aam
jae
mov
fwait
or
add
clc
and
sarl
sbb
and
push
add
or
lds
dec
mov
in
lock
add
jo
and
pushf
xchg
lcall
pop
or
and
in
xchg
dec
push
call
push
rcl
pop
call
mov
cwtl
jle
or
sub
jp
cs
sub
xor
stos
test
imul
adc
cltd
mov
jbe
jmp
lahf
imul
dec
push
popf
jge
lods
insl
jmp
arpl
mov
out
mov
jo
xor
xor
cmp
mov
add
fsubs
push
loopne
and
and
jno
inc
inc
in
imul
pop
int3
xorb
push
cmp
and
rclb
push
outsb
sbb
gs
pop
sub
cmp
cmpsb
xor
call
dec
pop
aad
andl
inc
sbb
adc
pop
cmp
aas
add
nop
add
jmp
dec
dec
add
push
pusha
hlt
lret
jl
movsb
mov
icebp
xchg
mov
add
jg
divl
push
push
cs
push
dec
imul
lods
mov
dec
xchg
jbe
xchg
pop
jl
imul
movsb
fwait
jmp
cmp
xor
mov
popa
incb
rorl
inc
xchg
pop
aaa
xchg
aad
mov
sbb
fidivrl
sti
clc
push
int
stos
aad
jg
sub
mov
aaa
xor
hlt
mov
mov
dec
scas
and
fsubs
xor
jmp
adc
fbld
or
lcall
pop
rcll
mov
fcomp
inc
scas
mov
inc
jno
mov
lock
and
stc
outsl
leave
sub
ljmp
icebp
mov
lcall
pop
lods
push
cld
or
ja
xor
add
push
lcall
pop
insb
add
fwait
pushf
jb
ja
cmp
in
loop
sahf
and
in
mov
lea
xchg
dec
add
sub
jge,pn
fwait
mov
aam
imul
inc
loopne
xchg
and
xchg
inc
fwait
xchg
loopne
adc
pop
sub
xor
sar
xchg
das
cmpsb
lahf
adc
fmull
or
pop
stos
mov
test
loop
arpl
pop
dec
jb
jmp
sbb
inc
inc
lea
mov
mov
out
mulb
xchg
adc
push
push
cmc
loop
push
xor
cld
incl
in
subb
pop
in
inc
and
fistpl
adc
push
pop
xchg
dec
mov
repz
out
jno
lods
cld
xchg
push
outsb
mov
dec
arpl
test
in
xor
add
test
mov
mov
sbb
xchg
sar
fcmovnu
in
mov
adc
mov
stc
add
aas
adc
or
push
adc
sub
js
cld
in
mulps
add
lea
mov
fistpll
or
xor
shll
and
add
or
rcr
das
js
sti
fidivrl
lcall
and
cltd
enter
sbb
cmp
popa
sub
pop
imul
repnz
addl
outsb
or
mov
loopne
fsubr
loopne
idivl
scas
scas
push
fistl
or
xchg
push
sub
adc
dec
insl
cmp
pop
cltd
mov
xchg
xchg
adc
inc
sub
mov
je
mov
adc
bound
push
adc
scas
dec
test
add
jb
loopne
dec
xchg
xor
add
pop
shlb
jo
fstpt
daa
pop
and
jb
mov
cmp
cltd
sub
daa
movsb
shlb
test
sarb
jae
add
add
add
add
add
cld
add
out
add
add
add
push
add
add
add
faddl
add
add
push
sbbb
add
add
imul
addb
mov
add
add
or
add
add
add
add
add
add
add
add
jo
jo
in
js
js
int3
int3
int3
int3
int3
int3
int3
int3
nop
add
add
add
add
imul
adc
adc
add
adc
add
add
add
add
add
add
add
add
popa
add
add
jb
add
add
add
push
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
sti
xchg
jns
jne
dec
imul
add
or
and
sti
jecxz
out
sbb
push
sti
pushf
clc
xchg
mov
mov
add
push
add
repz
jne
jne
pop
push
std
pusha
inc
mov
pushf
add
xor
add
mov
mov
push
pop
add
push
add
mov
add
xchg
pop
add
and
in
push
add
sub
loopne
add
add
call
test
decl
adc
test
cmpsl
and
adc
jne
or
push
push
adc
mov
test
test
incl
je
clc
test
lock
movsl
clc
add
push
ljmp
push
decl
loopne
add
push
pop
pop
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
inc
jb
gs
gs
add
inc
insb
gs
mov
add
gs
dec
add
je
pop
and
imul
dec
add
push
je
mov
dec
jo
add
pop
je
add
add
inc
inc
inc
xor
clc
nop
or
cwtl
mov
add
add
add
add
or
pop
cltd
pop
or
repnz
in
inc
pop
pop
les
aas
lds
ret
int
xchg
aam
lcall
inc
fstpt
test
ds
pop
adc
mov
addl
mov
stc
and
and
stc
cwtl
jle
scas
pop
mov
dec
movsl
xor
sbbl
loopne
lock
mov
int
mov
lods
add
shrl
cmp
mov
cli
or
sub
insb
lods
pop
xchg
xchg
inc
fildll
jns
dec
sti
fstpt
iret
cld
and
push
and
push
xchg
sbbb
push
clc
dec
xor
je
ret
mov
aas
jae
lods
iret
and
sub
xor
movsb
fcomps
mov
imul
and
and
inc
ljmp
cmp
and
jnp
mov
icebp
cld
test
mov
repnz
adc
jp
and
pop
ficompl
jno
imul
incl
leave
fdivrs
sar
mov
xor
xor
aam
test
sbb
and
pop
or
push
les
frstor
cmp
and
jecxz
xchg
cmpsl
pop
test
xlat
adc
xor
adc
mov
push
out
push
jg
cs
add
sbb
lea
sahf
cltd
mov
cld
lret
les
mov
mov
dec
xchg
jle
jg
repz
xchg
sub
sub
mov
das
lods
addr16
decb
pop
cmp
xchg
outsl
xor
icebp
imul
sbb
cmpsb
rcl
xchg
rcr
fwait
push
cmc
je
pushf
ficomps
mov
cmp
mov
inc
cmc
into
rolb
push
cmp
into
mov
xchg
lret
daa
mov
xor
cltd
std
in
mov
hlt
mov
pushf
inc
nop
or
jg
or
bound
sub
shl
cli
xchg
fnstenv
jns
inc
mov
pop
es
cmpsb
mov
inc
xor
in
mov
insb
cli
out
pushf
xchg
out
xor
les
fstps
mov
call
inc
add
adc
add
inc
inc
and
sbbl
push
push
mov
lods
add
jbe
mov
int3
add
enter
dec
inc
call
js
and
mov
scas
or
sbb
pop
dec
mov
xchg
dec
pop
mov
stos
xchg
sahf
sbb
jp
fsubs
shrl
jne
mov
lcall
push
dec
cs
fidivl
xchg
mov
out
lds
emms
jne
dec
push
in
mov
cld
and
sti
pop
imul
jp,pn
sbb
jbe
pop
push
jae
mov
dec
jmp
push
mov
loop
mov
daa
inc
dec
jns
push
mov
dec
adcb
mov
imul
pop
adc
or
mov
je
xor
inc
cmp
jne
fistpll
enter
or
sbb
jmp
popa
pusha
inc
fidivrs
out
inc
sub
lret
test
or
lods
mov
push
or
pop
lcall
jmp
adc
sahf
xor
jl
xor
pop
dec
addb
int3
xchg
pop
cmpsl
sbb
je
cli
dec
sbb
int3
jecxz
pslld
cmp
cmpsl
stos
mov
inc
fimuls
dec
push
pop
shll
jbe
dec
cld
jp
lea
filds
push
scas
and
inc
mov
sbb
mov
jbe
pushf
scas
adc
daa
daa
and
inc
nop
cmp
pop
shll
lcall
lods
dec
cmp
popa
gs
sub
cmp
loop
sub
cld
and
les
rclb
sub
imul
mov
push
fidivrs
cs
jmp
andb
sub
xor
pop
or
jp
addr16
in
data16
stc
notb
stos
pop
mov
dec
or
mov
popa
sti
imul
dec
mov
cmc
insl
mov
mov
mov
sub
in
mov
lea
cmp
pop
leave
data16
insl
dec
dec
idivb
gs
mov
int
inc
cmp
mov
fisttpl
cmp
jnp
ficompl
out
rcrl
mov
pop
pop
insb
outsb
insl
mov
inc
mov
shlb
leave
push
mov
pop
add
mov
jge
movsl
mov
shrl
pop
mov
les
push
xor
jmp
ficomps
cwtl
lds
cmp
lods
dec
in
lds
in
adc
insl
iret
adc
adc
test
lret
cmova
subl
in
out
jnp
loope
sub
aad
bound
icebp
jmp
movsl
jmp
xchg
stos
fstps
or
push
mov
and
fwait
jge
in
jne
fwait
test
aad
jae
imul
pop
inc
movsl
sub
lret
or
test
rcrl
es
pop
add
xlat
ret
iret
into
lea
adc
xor
test
cli
adc
inc
fstpt
leave
pop
cmp
aas
xchg
inc
pop
mov
mov
lea
mov
push
or
cmp
jno
jp
or
enter
dec
movl
or
push
popf
add
int3
push
lods
xchg
fbld
movsb
sub
jbe
push
stc
adcb
dec
pop
lods
mov
lock
mov
mov
out
push
xchg
fwait
mov
push
sti
aad
insl
stos
fistps
xchg
dec
push
xor
xchg
call
pusha
dec
in
into
dec
aas
inc
jb
repnz
les
iret
adc
ja
add
ffree
push
sbbb
adc
scas
popa
cmpsb
leave
mov
sub
aam
jb
ret
das
loop
enter
or
lea
xor
cmp
jb
scas
out
jnp
daa
xchg
sbb
push
mov
xor
mov
mov
jp,pt
mov
inc
addl
das
mov
sbb
add
mov
mov
cmp
scas
cmp
xchg
outsb
pop
lods
sbb
push
mov
add
sti
xchg
add
mov
or
sub
adc
mov
cltd
out
cltd
mov
icebp
notl
mov
les
inc
mov
cmp
cmovnp
lods
out
jecxz
jmp
cs
xor
dec
lret
mov
pop
cld
clc
jmp
and
ret
pop
dec
push
rcrl
sbb
push
insl
sbb
mov
test
aas
xchg
xchg
imul
ficomps
push
sahf
testb
mov
cmp
xchg
arpl
or
sbbb
fcoml
inc
arpl
test
add
fcmovne
or
inc
test
test
pop
adc
movsl
or
inc
lds
xchg
jae
lcall
inc
rcrl
shlb
sbb
pop
push
mov
insb
xchg
dec
inc
negb
jecxz
cltd
lods
jmp
jecxz
push
push
out
les
rorb
js
es
aad
cmp
repnz
pushf
je
cmp
cwtl
sbb
jecxz
jae
sub
pop
pop
jnp
hlt
push
insl
ljmp
mov
leave
jge
call
icebp
or
in
cwtl
fcompl
sarl
out
call
enter
or
ljmp
push
into
jns
add
dec
sub
ret
shlb
pop
sbb
lret
jecxz
pop
aad
jle
out
jo
arpl
dec
adc
loope
sub
dec
test
inc
xor
and
aaa
fimuls
sbb
loop
sbb
stos
xchg
sub
lret
lods
negl
pop
xchg
aam
cmp
icebp
insb
mov
xchg
xchg
jo
or
sub
in
xlat
push
imull
add
rcrb
ds
rcl
xor
or
repnz
and
mov
idivl
inc
mov
xor
cli
pop
adc
dec
push
xchg
jne
pop
xsaves
lock
mov
out
jb
pop
pop
ljmp
push
xor
mov
add
clc
lcall
icebp
ja
in
test
mov
jae
xchg
and
add
adc
and
call
dec
lods
adc
xor
rcll
loop
rcll
xchg
in
inc
mov
xor
mov
rcr
sub
mov
or
rol
push
in
or
aad
les
sti
push
stc
dec
pop
fwait
pusha
popa
jge
fisttpll
push
sbb
mov
sub
mov
mov
mov
mov
cld
lods
mov
adc
lods
mov
cmp
dec
jne
nop
xchg
jb
push
mov
ss
in
add
inc
sbb
mov
mov
clc
cli
bound
imul
sub
idivw
popa
jnp
dec
cwtl
xor
and
push
sarl
test
and
adc
sub
and
iret
pop
pop
in
inc
iret
loop
cli
mov
xchg
jecxz
pop
mov
mov
divl
fwait
adc
cmc
pop
dec
jbe
push
pushf
jl
test
and
pop
sbb
inc
or
je
das
dec
push
mov
fnstenv
call
lea
sbb
lock
sbb
sbb
add
push
in
mov
jne,pn
jbe
repnz
cmp
enter
je
push
cmpsl
call
cli
adc
sub
mov
or
adc
into
gs
stos
iret
cwtl
jbe
inc
scas
das
mov
cmp
stos
lret
push
pusha
movsl
dec
dec
sbb
and
loopne
test
aad
sub
insl
aas
jecxz
sub
jmp
lahf
js
adc
sahf
adc
xchg
das
sti
ds
loope
xor
stos
arpl
xchg
and
pop
mov
cmp
mov
xor
pop
push
je
or
jno
inc
xor
in
movsb
ljmp
dec
insb
push
push
add
cmc
xor
jecxz
mov
adc
enter
lods
fwait
xor
mov
sub
mov
inc
xchg
adc
mov
mov
sub
mov
lret
call
sub
cmpsl
xchg
out
mov
outsl
iret
outsb
test
or
je
ret
add
push
imul
xchg
xchg
in
jbe
cmp
mov
das
inc
and
push
stc
pop
inc
insb
xchg
fdivrs
xchg
fisttpll
jecxz
cmp
mov
jge
push
stc
and
fcomps
data16
mov
mov
fwait
mov
pop
lods
xchg
ret
fisubl
jecxz
cmp
and
pop
dec
jno
cmp
xor
popa
jp
adc
xlat
lret
and
sarb
adc
inc
gs
aam
pusha
mov
mov
pop
das
in
iret
movsl
mov
and
pop
ja
int
jmp
sub
mov
mov
loop
mov
adc
cmp
sti
leave
add
in
imul
int3
loopne
dec
mov
movsb
int3
les
sub
std
out
imul
push
push
lcall
outsl
inc
cwtl
icebp
mov
ret
loop
adc
or
add
push
std
ret
ds
inc
popf
out
inc
sbb
iret
dec
lret
pushl
push
add
cld
fildll
xlat
outsl
inc
ret
jne
sub
shrl
pop
and
push
test
add
xchg
rcrb
icebp
jp
sub
mov
iret
adc
mull
jo
neg
lock
push
mov
cmp
add
repnz
roll
iret
cmp
or
adc
jle
testb
daa
popa
sar
inc
sbb
jge
popa
fistl
stos
fidivs
and
movsl
in
pop
pop
movsb
ljmp
in
mov
adc
jg
and
data16
cmp
and
pop
and
cld
loope
inc
push
cmpsb
mov
push
mov
out
fucomip
dec
fnstcw
rorl
and
add
repz
mov
shrl
lock
add
sbb
gs
sar
out
shl
rol
lahf
shrb
or
imul
dec
mov
or
outsb
jo
mov
mov
xlat
add
ret
inc
in
cmp
repz
and
movsl
add
jmp
idivl
mov
cmp
and
das
adc
sbb
or
xor
add
fistps
cmp
lret
into
pushf
test
jmp
add
pop
or
lock
mov
scas
nop
dec
pop
and
add
test
adc
lds
incb
mov
pop
paddusw
cli
cltd
out
mov
not
sahf
aad
icebp
xlat
mov
icebp
pop
out
xchg
sahf
dec
dec
dec
and
inc
push
lock
xchg
push
pop
cmp
mov
cli
pop
outsb
xchg
push
jge
pop
repnz
jns
xor
push
lea
mov
and
ds
lea
mov
es
pop
imul
push
push
push
xor
loope
adc
shlb
adc
mov
jnp
dec
xchg
dec
lcall
adc
cli
test
jg
jmp
in
dec
ret
ljmp
iret
subl
jg
jmp
insb
cmp
inc
sbb
stos
out
dec
mov
pop
lock
leave
push
out
xchg
outsl
xchg
xchg
dec
add
sahf
xor
mov
sbb
and
loop
rol
push
adc
scas
sub
push
jg
or
inc
inc
sub
jno
mov
ss
jnp
cmp
int
pusha
scas
adc
adc
xchg
mov
pusha
fwait
popf
ret
adc
iret
adcl
mov
sbb
shll
push
xchg
pop
ja
incl
cmp
cvtps2pd
or
sbb
hlt
mov
shrl
and
inc
lds
insb
loop
adc
push
daa
ds
push
inc
popa
out
ljmp
cmpsl
xchg
and
test
loop
bound
bound
push
int
mov
ss
div
or
push
test
scas
sub
iret
pop
sub
adcl
frstor
mulb
xchg
xchg
mov
adc
pop
fsubp
adc
pusha
repz
or
pop
xchg
push
in
sbb
shl
jp
push
arpl
mov
mov
in
test
mov
xor
cmp
pop
and
je
jg
jne
fsubrp
in
add
add
arpl
adc
lods
or
dec
sub
add
call
push
mov
loop
into
lea
push
and
jge
sub
cli
cli
sbb
mov
push
cwtl
push
mov
sub
les
inc
stos
bound
dec
repnz
out
pusha
aas
ja
jle
into
adc
in
aad
les
sahf
xor
mov
xorw
jle
call
rol
and
push
mov
aam
push
jae
cmp
xchg
jge
aas
push
mov
jp
aad
sahf
imul
inc
sbb
and
cld
es
push
mov
adc
push
aam
mov
and
leave
in
mov
xor
and
rcr
pop
sbb
subl
dec
sub
jmp
pop
sbb
stos
jo
add
pop
daa
jbe
mov
cli
je
pusha
push
and
add
xchg
lds
mov
sbb
or
pop
sub
or
movsb
mov
mov
cli
dec
lds
dec
mov
adc
pop
add
inc
jge
xor
jbe
add
push
jns
push
stos
fwait
aad
mov
push
scas
sbb
mov
movsb
and
ds
ds
xchg
mov
fs
jle
xchg
or
pop
push
lock
das
dec
les
hlt
shlb
adc
idivb
test
xchg
add
xor
cmpsl
xor
cmp
movsb
mov
test
int
cmc
dec
xchg
mov
mov
mov
push
call
sub
jmp
push
pop
mov
sbb
stos
inc
imul
shlb
dec
pop
jbe
mov
js
adc
icebp
in
pop
clc
jecxz
or
or
dec
popa
loop
dec
movb
test
adc
push
or
jp
add
cmp
lods
ds
test
pop
or
push
arpl
test
movsl
dec
inc
inc
leave
out
or
mov
les
sahf
sub
mov
jecxz
arpl
xchg
mov
lret
and
inc
ret
mov
movsb
push
int3
pop
pop
pop
ret
dec
mov
adc
xor
call
sarb
xchg
loop
jbe
loope
xor
lahf
fidivrl
ss
icebp
cmp
stc
setno
mov
sarl
or
adc
xchg
lea
push
pop
push
pop
clc
mov
dec
sbb
mull
inc
or
and
jmp
enter
mov
scas
fcmovne
cltd
in
aaa
and
sub
adcl
and
push
sahf
or
lock
xor
or
clc
repnz
lods
insb
outsb
arpl
xor
xchg
sub
divb
mov
fstpl
or
add
fsubrl
pop
push
pop
scas
cmpsl
jbe
mov
dec
pushf
mov
mov
sbb
mov
mov
and
mov
mov
fwait
xchg
fnsetpm(287
xchg
sbb
arpl
mov
test
jmp
loop
cltd
pop
jecxz
sub
fiadds
fnsave
dec
inc
pop
sub
fildl
add
push
add
gs
and
fsubl
jg
adc
inc
and
test
lret
dec
xlat
and
mov
adc
iret
jmp
cvtps2pd
arpl
pop
mov
shlb
inc
ret
push
push
dec
mov
btc
or
cmc
lret
aad
pusha
out
call
cld
leave
les
scas
adc
popa
movsb
xlat
xor
cmp
in
cmpl
xor
mov
sub
push
arpl
je
push
call
jge
or
jp
int3
mov
push
outsl
push
cli
sarb
leave
in
pop
ret
pop
push
fidivrl
fsubrs
aam
add
lock
add
push
add
nop
or
add
add
cwtl
mov
add
add
add
add
add
add
add
sub
rolb
add
ja
mov
jg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
leave
add
pushf
leave
add
xchg
leave
add
mov
add
test
add
jl
add
je
add
insb
leave
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
ror
add
fmul
add
lock
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
lret
mov
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
lret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
lret
add
push
lret
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
int3
add
lock
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outsl
int
add
add
add
add
add
add
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
nop
int
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
add
dec
into
add
jo
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
into
add
int3
into
add
aam
add
fmul
add
in
add
in
into
add
hlt
into
add
pop
iret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
sub
add
cmp
add
dec
iret
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
