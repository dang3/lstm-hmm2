cld
fmuls
lods
std
sub
sbb
jbe
adc
cmp
aad
inc
pop
jo
adc
cmp
je
in
and
adc
cwtl
jae
adc
adc
fsts
mov
mov
add
int
pop
xchg
pop
rorl
movsb
mov
jae
int
jbe
adc
sbb
push
hlt
hlt
sub
fdivrs
push
adc
repnz
add
aad
lret
lret
lds
push
adc
xchg
jbe
adc
icebp
movsb
jns
push
inc
jnp
mov
loope
cmp
mov
xchg
inc
outsb
int3
mov
push
cmpsl
or
pop
arpl
mov
mov
inc
ss
popf
or
ds
inc
into
cmp
bnd
mov
pop
bound
stos
fstps
int3
in
push
leave
push
ds
in
divb
out
outsl
push
fistpll
mov
fidivs
push
ret
inc
dec
and
icebp
xchg
das
add
invd
adc
lds
sbb
push
insb
lock
adc
xorb
out
push
sub
pop
pop
rcll
in
jae
js
or
and
fldl
mov
call
cli
lods
mov
jae
adc
sub
sbb
pop
jmp
adc
jmp
test
adc
lcall
or
movsb
aas
mov
jae
adc
cld
push
loopne
pop
adc
inc
loope
cltd
cmp
mov
adc
jg
nop
jae
adc
cwtl
nop
adc
lcall
push
sbb
cmp
int3
das
test
and
cltd
inc
pop
pusha
enter
mov
insb
inc
inc
and
das
fdivrs
daa
push
adc
add
pop
push
test
es
dec
inc
pop
mov
flds
pop
in
imul
lods
movlps
adc
sbb
ret
mov
mov
jmp
cmp
aaa
fists
sub
sbb
outsb
cltd
pusha
xor
lods
cmp
sbb
mov
adc
xor
cmpsb
shlb
adc
stc
push
pop
fisubl
jb
lcall
push
mov
sbb
push
insb
ds
stc
adc
movsb
aas
in
jge
push
inc
pop
inc
jecxz
pop
adc
out
fistpll
adc
inc
sbb
fneni(8087
dec
push
das
aad
andl
pushf
and
pop
adc
cli
mov
out
insb
jo
adc
xchg
js
test
push
mov
pop
push
sbb
insb
insl
subb
ja
sbb
mov
xor
mov
fiadds
push
dec
xchg
jb
test
jo
adc
arpl
or
scas
push
arpl
lret
mov
jbe
inc
mov
leave
pop
adc
sub
lret
insl
rol
stos
push
lods
xor
cmp
push
adc
roll
sti
loope
lret
adc
adc
adc
mov
adc
adc
pusha
jo
adc
mov
roll
loope
push
mov
outsb
mov
mov
mov
daa
hlt
outsl
dec
pop
ret
mov
movsl
mov
jecxz
cld
aas
push
stos
fcompl
mov
sub
adc
test
pop
cmp
ljmp
push
and
xchg
movsl
int
rcl
cltd
mov
clc
lahf
iret
rorl
jl
xchg
mov
sub
inc
push
inc
js
push
adc
pusha
aaa
int
push
jno
xadd
ljmp
adc
pop
adc
loop
into
aad
out
fdivl
repnz
jg
xchg
fildl
addr16
push
sub
popf
pop
mov
icebp
sub
sbb
cltd
ja
insl
push
imul
add
ret
push
adc
dec
add
inc
and
fiaddl
pop
out
push
sbb
cltd
xchg
call
btrl
scas
jb
push
xchg
stos
mov
movsb
inc
mov
je
push
and
mov
lock
sbb
or
addb
and
add
stos
scas
pop
inc
push
push
test
rcrb
incl
pop
inc
jae
aad
dec
mov
ss
adc
fwait
rorl
lret
out
mov
call
or
adc
mov
pop
pushf
pop
xlat
push
roll
pop
push
lds
gs
movsl
loop
shr
push
jbe
jle
in
into
dec
xor
or
cmp
mov
adc
mov
jp
mov
jne
arpl
jl
jbe
adc
inc
lods
out
jg
cmp
outsb
sbb
jnp
adc
mov
pushf
loop
faddl
js
push
adc
fildll
sub
andb
sbb
or
mov
push
adc
subl
fisttpl
or
lods
fucomip
dec
not
in
mov
imul
or
ds
mov
cmp
and
adc
adc
divb
call
mov
push
insl
insl
es
inc
movsl
outsb
lea
mov
push
std
dec
push
shrl
or
clc
xor
inc
and
repz
jns
jo
adc
cltd
inc
orb
xor
push
mov
push
popa
fnsave
aam
mov
daa
mov
fistps
pusha
and
sub
mov
js
dec
sub
push
adc
loopne
out
dec
xchg
test
adc
iret
or
test
dec
daa
sbb
push
adc
xchg
std
icebp
dec
jmp
dec
out
in
icebp
sti
adc
nop
jo
adc
pop
ljmp
xor
and
cmp
push
cmpsl
nop
loop
sbb
push
adc
mov
push
pop
mov
mov
rclb
lock
dec
sub
fidivrs
pop
leave
popa
push
int3
mov
lcall
adc
jmp
sahf
scas
xor
inc
iret
iret
xchg
dec
xchg
jo
adc
push
das
sub
or
aam
xchg
dec
mov
out
inc
mov
out
jge
push
and
pop
adc
dec
push
pop
push
stos
push
and
pop
adc
jo
or
push
jnp
inc
lock
lahf
stos
add
jo
adc
and
jl
hlt
rcll
dec
xor
inc
stos
push
test
push
jnp
sti
pushf
jo
adc
inc
dec
jne
jns
shll
out
cmp
and
dec
dec
sahf
cmp
mov
sub
es
mov
xor
jo
adc
jnp
int3
sbb
jge,pt
jns
shlb
add
js
adc
push
add
aas
out
fdivrl
jge
hlt
mov
adc
test
std
cmpsl
dec
sahf
mov
jae
mov
fadds
adc
fs
adc
add
or
shll
mov
movsb
adc
mov
adc
inc
jge
jg
push
arpl
cli
leave
and
push
stos
fildll
ror
leave
outsb
sub
and
inc
mov
push
sbb
adc
inc
out
pop
push
stos
mov
lret
jg
sub
icebp
sbb
out
lahf
ds
add
das
mov
pop
pop
sub
push
adc
xor
enter
push
adc
aam
clc
ja
adc
in
ja
adc
push
add
jl
clc
fadds
adc
subb
jb
mov
stos
mov
shlb
sub
pop
imul
xchg
mov
lret
scas
stos
lahf
jmp
jns
stos
inc
inc
pop
and
mov
lods
lods
sbb
cltd
lods
mov
cld
js
addr16
push
out
stos
inc
pop
ret
iret
fwait
add
add
insl
into
cs
leave
cmp
fdivs
xchg
fsubrs
mov
ret
jmp
mov
stos
out
js
enter
mov
sub
call
movsl
and
mov
cli
mov
dec
clc
inc
lods
scas
sbb
adc
jecxz
xor
pushf
xor
inc
sti
or
cmc
fdivr
push
clc
rorl
cld
lods
sbb
rcr
es
cwtl
push
jle
jns
test
fwait
mov
pop
sbb
and
out
pop
and
insb
lds
jecxz
jge
loopne
add
pop
sbb
push
mov
push
mov
stc
aad
jl
into
sbb
jb
xor
repnz
aas
out
es
std
fisubrl
xor
ret
add
ja
sti
xchg
fiaddl
jmp
cmpsl
lea
stos
sub
mov
pop
adc
or
mov
iret
les
mov
push
push
nop
dec
out
aas
pop
lods
test
fidivl
add
mov
scas
or
sub
jns
jo
adc
aam
mov
jp
shr
add
pop
add
test
inc
imul
xor
shl
and
dec
enter
dec
rolb
mov
rorb
out
les
in
ffreep
in
mov
adc
pop
paddusb
nop
arpl
jbe
push
es
jnp
push
daa
loop
jbe
and
and
mov
xchg
ffreep
sbb
movsl
pop
and
pop
adc
mov
cld
cltd
push
dec
ss
sub
jge
jecxz
cmp
bound
in
sbb
or
and
adc
mov
and
jns
stc
xor
cwtl
scas
xchg
jns
jno
xchg
clc
jae
jecxz
test
xor
aas
cld
push
dec
xor
fsubs
pop
add
lret
pop
mov
ret
out
fdivrl
sbb
adc
ljmp
fnstcw
push
cmpsl
dec
adc
dec
mov
out
pop
stos
jge
hlt
and
cmpsl
inc
fistl
ficomps
daa
test
mov
lds
in
lahf
adc
xchg
pop
or
sub
fdivs
push
jmp
das
xchg
fstl
inc
into
ret
sub
xor
dec
js
adc
dec
fsub
and
add
mov
test
xor
dec
jmp
inc
scas
clc
arpl
push
xchg
add
es
out
mov
jp
mov
jge,pt
mov
sbb
push
mov
fdivrp
add
loop
popa
insl
pop
stos
sub
mov
ds
clc
fadds
adc
mov
xchg
test
pop
xchg
pop
xor
push
or
xor
cmp
cld
jmp
sub
outsl
aad
fisubrs
push
cmpsl
sbb
popa
pop
lcall
pop
mov
sbb
xchg
scas
adc
adc
repz
pop
mov
mov
cmp
lock
iret
mov
movsl
pop
std
pop
insl
scas
pop
loop
xchg
and
ficoms
mov
and
loop
jecxz
leave
mov
jno
loopne
cmpsl
ret
mov
xor
inc
and
mov
hlt
call
push
fstpl
fildll
or
dec
lods
std
nop
in
adc
pusha
dec
pop
idivb
aad
xor
push
stos
in
pop
fwait
xchg
out
pop
xor
mov
loop
shlb
inc
cmp
stc
push
pop
xchg
xchg
inc
push
imul
pop
jnp
mov
lock
sub
pusha
adcl
aas
stos
push
test
or
mov
jg
jecxz
adc
cli
cwtl
hlt
in
pop
jmp
xchg
imul
or
xorb
js
adc
add
pop
mov
cmpsl
fidivrl
insb
pop
std
mov
or
hlt
nop
nop
icebp
push
adc
push
pop
rcll
mov
mov
inc
arpl
leave
movsb
in
icebp
jl
push
adc
sub
shlb
mov
mov
add
mov
mov
mov
cmpb
and
int3
jecxz
daa
push
adc
aad
das
shlb
je
cmp
lock
sbb
fwait
mov
ljmp
daa
xlat
test
lds
js
inc
lock
test
pop
mov
push
and
arpl
aas
movsl
cs
mov
jns
mov
push
mov
xchg
push
fwait
and
das
test
add
inc
lods
jge
std
push
test
loop
cmp
sahf
fildll
xor
in
ret
sub
adc
mov
das
or
shll
mov
sbb
push
int
insb
mov
mov
in
dec
ss
xchg
xchg
daa
inc
xor
push
sub
nop
jo
adc
xlat
lahf
adc
mov
push
cmpsb
ss
in
mov
xchg
jp
cli
outsb
mov
inc
cmp
push
adc
mov
ret
aas
clc
xorb
cmp
dec
out
dec
cmp
push
loop
sbb
iret
test
out
sbbl
pushf
cmc
add
xchg
sti
shll
inc
loop
pop
mov
mov
xchg
add
sub
aas
adc
bound
push
out
xor
inc
cmpsl
mov
hlt
js
test
push
mov
leave
pop
adc
scas
xor
xor
mov
adc
xchg
dec
mov
fisubrl
xchg
mov
and
fisubrl
mov
mov
or
iret
int3
push
rorl
in
loope
sub
fisubrs
mov
loopne
push
adc
cltd
ljmp
popf
arpl
xor
loope
mov
lods
icebp
mov
mov
jge
pop
jns
cmp
sub
movsl
adc
inc
outsb
loope
push
or
lods
push
cmpsl
xchg
popf
lret
mov
out
lahf
mov
jg
mov
xlat
pop
cmpsb
fdivl
ljmp
ret
jo
adc
stos
pop
adc
stos
ja
aad
lret
fimuls
insb
test
mov
out
xor
sbb
fnstcw
pop
push
lods
pop
mov
mov
and
mov
jp
and
mov
test
cs
push
add
leave
jecxz
inc
movsb
and
push
jmp
xchg
push
adc
inc
clc
pop
hlt
popa
inc
dec
jno
loopne
gs
enter
pop
out
lods
xchg
xchg
fcoml
or
idivb
sbb
movsb
clc
or
ja
rcl
dec
push
loop
push
fdivr
mov
inc
data16
or
push
fwait
mov
mov
add
xor
push
cld
fmuls
jb
sub
and
outsl
outsb
orb
cltd
xchg
dec
xchg
pop
xlat
movsl
and
pop
fcmovu
mov
push
test
adc
dec
adc
sbb
and
xor
outsl
jbe
cmp
xchg
mov
clc
iret
popf
sub
js,pn
lret
fisubs
and
mov
shr
and
orl
jae
les
filds
sbb
mov
das
sbb
mov
or
pop
and
mov
popa
xchg
mov
push
adc
test
fwait
and
fwait
cmp
and
pop
adc
adc
sub
fmul
mov
imul
dec
test
mov
es
ret
add
lret
repnz
call
rcl
loop
xor
push
pushf
jg
dec
fsts
inc
test
cmp
mov
or
movsb
sub
lahf
pop
inc
js
push
pop
pop
sub
xchg
mov
dec
xlat
push
and
repz
ss
outsl
sbb
aam
xchg
xor
aad
je
push
mov
cltd
jno
xchg
push
cltd
cmp
fisubrs
push
mov
divl
add
lds
das
int3
pop
ljmp
lods
pop
mov
mov
pop
pop
dec
inc
adc
sbb
inc
mov
out
sbb
inc
scas
pop
mov
out
lea
loop
and
fucomp
arpl
xor
sbb
pop
xorl
inc
popf
popa
mov
cltd
xchg
sub
jg
into
jg
jae
cmp
pop
jne
mov
test
nop
fs
insb
test
sub
xlat
mov
call
jg
gs
add
jg
fsubs
into
adc
mov
in
mov
or
jnp
les
fs
cs
cmp
nop
js
ljmp
daa
mov
cs
int
enter
mov
push
loope
cmp
sbb
andl
in
std
jmp
sub
flds
or
data16
cmp
jmp
sub
push
aas
std
bound
ja
push
sub
pop
mov
dec
push
xchg
je
scas
fists
outsb
xchg
sbb
movsl
ljmp
imul
movsl
cwtl
cli
dec
add
cmp
pop
cmp
cltd
aad
and
mov
dec
sbb
inc
and
dec
leave
addb
jb
gs
push
and
popa
add
jmp
pop
lods
lea
xor
pop
movsb
out
or
fsubrs
pusha
pop
lods
pop
pop
adc
jmp
roll
mov
pop
gs
pop
pusha
pop
lods
pop
mov
xor
inc
dec
and
sbb
mov
mov
pop
aaa
xchg
pop
stos
push
mov
test
adc
pusha
rorl
jg
add
in
jle
lods
push
push
and
mov
inc
mov
inc
outsl
xlat
inc
repz
call
sahf
cmp
aaa
mov
pop
movl
test
push
mov
pop
movsl
jp
lret
daa
test
push
fisubs
mov
test
sbb
iret
ror
add
cs
mov
lret
filds
leave
xchg
movsb
pop
mov
mov
xor
mov
addr16
adc
xchg
sub
enter
lods
rclb
test
push
jnp
mov
hlt
pop
mov
add
fbstp
xchg
popf
sub
lcall
mov
aas
sbb
inc
and
fcmovne
addb
jb
lret
inc
es
stos
push
fisubl
subl
into
jae
dec
mov
mov
add
cs
inc
push
pop
cmp
push
stos
xchg
cwtl
cs
test
fidivl
fistpll
pusha
roll
cs
xor
push
stos
xchg
xchg
fstpl
lret
fcmovne
test
add
mov
icebp
jbe
push
das
pop
scas
sbb
lret
xchg
pop
push
outsl
push
fdivl
lea
arpl
js
add
and
jnp
xchg
push
mov
sub
and
mov
rolb
sbbb
cmp
arpl
sbb
pop
iret
add
xchg
cs
int
scas
pop
and
popa
lret
fwait
cmp
bound
rorl
dec
mov
pop
pop
mov
test
shl
jp
cmp
or
imul
and
dec
test
cmp
xor
flds
and
add
into
lahf
sbb
aam
mov
push
jl
xor
mov
add
out
adcl
insl
orl
lds
sbb
mov
mov
jns
adc
bound
fstpt
lcall
inc
lds
cmp
in
ror
std
and
sub
jl
lds
orl
pop
add
jmp
mov
sub
mov
push
mov
pop
sub
outsb
iret
dec
aaa
loopne
sub
je
les
and
scas
nop
jo
adc
and
nop
add
push
scas
test
pop
or
cli
cmpsb
xchg
out
add
lock
and
aaa
ret
or
cmp
pop
clc
jg
or
add
mov
jmpw
adc
mov
push
xor
into
ljmp
sub
mov
xor
push
daa
loopne
lods
aas
cmp
xchg
iret
mov
and
adc
pop
adc
or
mov
test
or
mov
push
adc
mov
xlat
out
add
loop
pop
gs
cmp
add
push
adc
inc
push
pop
inc
dec
ret
adc
sub
add
loop
jbe
push
ljmp
data16
sbb
rclb
aas
push
jl
inc
test
mov
mov
add
xor
push
imul
push
int3
incb
push
mov
popa
or
and
loop
jmp
push
ret
cmp
inc
jl
rcr
add
mov
test
test
repnz
popa
mov
stc
movsb
pop
mov
mov
pop
jbe
iret
adc
jne
jno
es
mov
sub
imul
imul
and
adc
pusha
dec
jnp
imul
xchg
jmp
icebp
mov
jbe
test
xlat
pop
pop
test
xor
xor
cs
scas
pop
test
pop
stos
push
mov
idivb
sub
push
sbbl
es
mov
pop
daa
mov
stos
push
mov
idivb
sub
getsec
jne
xorb
es
mov
sub
stos
push
sub
inc
stos
repnz
pop
loopne
add
cs
outsb
in
lret
mov
jg
popa
ret
or
inc
add
add
mov
in
mull
xor
push
mov
mov
jae
and
jp
push
cld
pop
es
jp
lret
imul
addr16
ficompl
xlat
imul
mov
xor
cmp
insl
push
mov
and
sub
imul
mov
out
mov
mov
in
out
ret
stos
stc
add
cmp
and
nop
roll
hlt
jg
pop
cs
int
cmpsb
ret
xchg
xchg
fists
iret
mov
addr16
jno
sbb
ljmp
push
mov
lret
nop
jo
adc
stos
loopne
lcall
pshufw
xchg
sbb
mov
sub
stos
pop
pushf
pop
lods
pop
push
ja
xchg
or
push
xor
outsb
das
test
push
lds
push
adc
test
cs
pop
stos
push
sub
rclb
mov
adc
add
pop
wbinvd
adc
out
insl
xchg
test
inc
pop
test
cmc
mov
pop
insb
lds
ja
jbe
mov
push
add
das
mov
lret
push
add
adc
loop
popf
dec
or
es
dec
in
popf
in
mov
inc
ss
sbb
daa
stos
call
mov
sbb
dec
ss
push
fiaddl
iret
inc
xor
or
and
add
sbb
inc
loope
xor
push
add
ret
push
pushf
sub
add
adc
pop
add
lret
inc
dec
inc
orl
inc
arpl
add
ret
das
fildl
jnp
xor
push
xchg
xchg
mov
mov
lret
lret
sub
push
sub
inc
int
pcmpgtb
sbbl
jo
xchg
add
pop
and
jne
fisubl
fmulp
stos
push
mov
loopne
ljmp
hlt
ret
jnp
pop
mov
pushf
cmpsb
xchg
movsb
rorl
or
adc
push
and
jnp
add
inc
rorl
fimuls
mov
sub
mov
mov
shlb
cs
pop
mov
jno
fwait
insb
xchg
push
mov
orb
pop
xor
sbb
pop
mov
es
add
shlb
lods
xchg
mov
push
sbb
out
lret
or
rorl
dec
sahf
push
ljmp
xchg
in
dec
sar
pop
or
or
out
sti
push
cmp
incl
cmp
stos
add
outsb
sti
mov
clc
push
adc
sub
lahf
nop
jo
adc
dec
or
jo
inc
imul
cmp
cmpsb
and
jmp
shr
sbb
fs
imul
adc
dec
arpl
mov
ret
push
outsb
sbb
dec
sahf
adc
jae
sub
roll
add
out
mov
mov
sti
add
pop
mov
or
jmp
xchg
adc
and
xor
cli
hlt
popf
cli
cs
popa
loope
xchg
push
push
mov
mov
aad
sbb
imul
rcll
lret
adc
lret
std
test
pop
mov
inc
sub
mov
ja
xchg
hlt
imul
xchg
sub
enter
lods
fsts
adc
and
mov
in
mov
push
add
jb,pn
add
and
push
stos
cmpsb
in
mov
add
and
fwait
mov
ja
pop
cs
lds
mov
and
popf
jle
jl
imul
sbb
mov
mov
in
ret
in
aaa
cltd
pop
stos
push
das
xchg
jbe
jmp
mov
push
push
push
es
mov
and
cli
stos
sbb
push
mov
ret
push
cmp
sbb
repnz
mov
in
bound
lea
push
mov
lock
sub
fmull
cmp
jg
pop
cs
mov
sub
push
mov
int
sub
sti
sbb
push
adc
pop
mov
inc
add
xlat
add
sub
daa
fsts
int
movsl
pop
and
bound
roll
mov
cmp
arpl
testl
add
pusha
mov
add
cs
int3
ja
lret
dec
mov
rolb
test
arpl
test
xor
xchg
add
mov
cmp
mov
ret
test
insl
xor
adc
addl
xchg
test
sub
test
arpl
xchg
xor
mov
sub
adc
lods
rclb
pop
test
mov
imul
insb
lds
pop
mov
cs
lods
push
mov
outsl
fnstenv
jnp
sbb
stos
adc
dec
hlt
mov
add
std
and
adc
add
andl
add
je
add
jns
add
and
adc
adc
daa
add
imul
out
mov
cmp
push
jne
mov
adc
repnz
mov
mov
push
cmp
pop
mov
push
out
daa
push
adc
inc
mov
push
fwait
fwait
xchg
mov
xchg
repz
adc
mov
push
test
push
cmp
adc
fwait
into
mov
fcos
mov
loop
mov
xchg
mov
jo
adc
mov
xor
pop
adc
dec
jl
aas
xor
mov
push
adc
in
inc
jp
out
repnz
repz
cmpsl
xor
mov
mov
mov
shlb
sub
adc
ret
push
adc
jb
dec
lret
adc
cld
adc
fdivr
fadds
adc
popf
push
fwait
or
sub
push
dec
sbbb
xor
mov
js
adc
adc
cmp
ss
xor
icebp
push
aas
xor
vpunpckhqdq
mov
es
sub
adc
and
or
adcb
adc
movsl
ds
out
test
and
ja
pand
jmp
je
xor
pop
inc
jno
xor
repnz
clc
sbbl
sbb
dec
mov
repz
push
es
jno
mov
cmpsl
mov
or
cmp
nop
ret
cli
ret
mov
add
adc
loope
mov
mov
inc
fucomi
add
cmp
and
jle
fidivl
pop
shrb
imul
and
xchg
cli
repz
fsubs
inc
inc
test
sbb
lcall
ds
xor
xchg
les
push
adc
loope
into
cli
jge
js
adc
cmp
aas
push
movsl
dec
js
adc
adc
or
xchg
or
and
loope
js
adc
push
adc
adc
push
push
add
repz
push
cmc
push
jmp
push
xchg
hlt
push
ds
xchg
scas
shrb
movsl
fdivs
sti
mov
dec
mov
call
xchg
jno
rcll
cmpsb
fucomip
pop
gs
sahf
mov
shr
and
jg
inc
out
xor
icebp
jno
movsl
movsb
int
jo
xchg
test
push
cmpsl
mov
sbb
lcall
adc
idivl
aad
ficomps
mov
jns
out
test
and
jge
jg
popa
inc
lea
adc
loope
int3
js
adc
lcall
jo
fadds
adc
inc
jb
cmp
mov
push
lods
and
mov
and
mov
xchg
pop
cs
xor
iret
stos
push
stos
cld
fmuls
jb
clc
mov
fsubr
clc
push
mov
hlt
pushf
cwtl
add
mov
out
test
fsub
inc
popa
or
inc
lock
test
and
push
out
pop
scas
stos
fldl
or
adc
ljmp
jmp
aas
les
stos
push
and
cmc
addr16
cmp
loope
push
pop
jae
jge
mull
push
adc
mov
ret
mov
push
out
repnz
lea
mov
out
pop
sub
mov
out
lds
dec
rcll
jge
mov
mov
lahf
scas
pop
out
enter
xchg
sbb
mov
js
adc
cld
shr
pop
push
out
lds
sub
nop
inc
loop
mov
pop
adc
fidivs
stc
push
or
push
cmp
xchg
rorb
xchg
int
scas
sbb
dec
stos
mov
aas
cmp
shrl
je
push
mov
out
adc
icebp
stos
scas
inc
fwait
shlb
mov
push
adc
daa
rorb
aas
pushf
scas
shll
xor
push
mov
pusha
jns
adc
dec
mov
pop
loopne
lds
flds
adc
or
pop
adc
test
adc
push
mov
pop
xlat
out
sub
movsl
dec
les
dec
jecxz
jmp
add
push
adc
dec
int3
gs
sbb
push
and
pop
adc
vmovq
es
push
pushf
xor
mov
xchg
clc
adc
push
adc
sub
fisubs
enter
push
push
les
adc
scas
pop
jns
sbbb
daa
lods
test
jbe
lret
lods
aad
inc
xor
pop
loope
test
xchg
inc
mov
pop
pop
clc
push
mov
lds
out
mov
jmp
add
shrl
imul
push
adc
dec
or
repnz
adc
fs
adc
loopne
pop
adc
sub
cs
push
lds
fdivs
ficoml
fmuls
xor
cmp
subl
scas
jge
lock
ficoms
cmp
cmpsl
sub
pop
int
aad
xchg
add
adc
mov
enter
js
js
cmpsl
add
std
jp
es
stos
leave
mov
mov
pop
fsubs
push
icebp
mov
cmp
mov
jnp
out
xor
push
adc
cmp
inc
or
adc
and
pop
adc
sbb
xorb
jno
stos
cld
movsl
movsb
jne
repz
clc
fadds
adc
mov
sti
jp
popa
roll
push
mov
hlt
pop
insb
shll
pop
mov
cli
pop
adc
inc
jbe
iret
pop
xor
aad
call
xchg
cmp
fadds
adc
leave
jne
pop
mov
xor
mov
fadds
adc
mov
sbb
fadds
adc
inc
xchg
mov
xor
fadds
adc
clc
out
js
lea
push
jmp
mov
pushf
cmpsl
dec
sahf
pop
cli
mov
and
bound
jge,pt
lock
lahf
fsts
jo
or
popa
sub
mov
dec
daa
aas
jge
iret
das
fisubs
testb
pop
adc
inc
mov
ret
add
inc
mov
out
nop
jo
adc
jne
mov
scas
push
test
inc
movsl
or
pop
jns
xchg
fstl
cmp
xor
push
inc
mov
aad
xchg
inc
pop
and
cwtl
pop
adc
pop
test
jp
rolb
mov
cmp
xchg
nop
rcrb
jo
pop
cmpsl
cmp
pop
rcrl
shll
xchg
sub
add
push
adc
jo
jle
xor
mov
daa
mov
int
cs
pop
cltd
popf
into
fld1
inc
into
btr
mov
mov
jb
adc
dec
mov
cmp
stos
push
pop
daa
mov
dec
pushf
mov
adc
pusha
adc
xorb
inc
inc
mov
loope
adc
test
push
mov
es
mov
inc
or
jns
jnp
xor
repnz
cmpsb
and
push
push
xchg
mov
dec
bnd
imul
dec
dec
mov
in
outsl
or
push
adc
push
dec
pop
jno
out
daa
add
out
and
cmp
push
aas
int
add
adc
or
fsubl
xlat
daa
cmp
adc
cmp
out
lock
cmpsl
cmc
mov
icebp
or
sbb
in
cld
repz
lahf
mov
mov
in
cwtl
fld
or
mov
loopne
lahf
jecxz
aad
sub
cwtl
bound
mov
sbb
mov
dec
popf
pop
mov
pop
dec
dec
adc
xor
dec
ja
lods
sti
mov
fisubl
shrl
mov
mov
push
jmp
jns
and
or
add
pop
movsb
pop
mov
mulb
repnz
sti
xor
adc
xor
mov
daa
shll
mov
rorl
mov
jo
adc
inc
ret
xchg
adc
pop
mov
or
addr16
jmp
adc
mov
push
leave
out
pop
fsubrp
cmpb
scas
xchg
push
popf
pop
lods
and
sbb
mov
enter
sub
adc
cli
or
xchg
mov
call
dec
in
and
divb
push
shlb
addr16
add
mov
nop
andl
pusha
sbb
pop
pmuludq
repz
fidivs
insl
adc
dec
jg
add
sub
jno
pop
xchg
cli
mov
aam
icebp
jl
dec
lds
mov
xor
lcall
jmp
clc
mov
ret
and
dec
cmp
adc
out
or
dec
push
cmp
imul
jbe
std
outsb
xchg
gs
mov
jo
adc
mov
lret
pop
sub
adc
and
frstor
push
cld
add
stos
sub
sub
xor
xor
iret
sub
das
push
sbb
sbb
je
mov
adc
mov
dec
lock
lea
xor
inc
sarl
push
pop
js
jb
sbb
out
mov
adc
arpl
in
xchg
scas
movsl
add
or
mov
ljmp
or
cmp
adc
and
inc
fcomip
pop
and
clc
mov
fmul
pusha
sbb
or
sbb
push
stos
addr16
push
push
pop
jo
clc
pusha
push
mov
stc
jns
xor
mov
test
pusha
addr16
fcmovnbe
lock
mov
and
mov
sbb
fcoms
out
mov
xor
lcall
shl
icebp
insl
mov
jmp
sub
push
adc
lret
mov
fdivr
inc
pop
jnp
jl
cmp
jae
mov
jmp
pop
push
fucom
inc
xchg
test
jae
adc
ds
gs
push
lock
movsb
jns
cmc
js
cs
mov
mov
and
mov
jno
aaa
gs
dec
sub
stos
push
xor
hlt
call
sbb
sub
ret
gs
jnp
cmp
sbb
adc
inc
push
adc
test
xor
dec
sbb
push
icebp
test
push
es
out
cmc
mov
cmpsb
inc
xor
sub
adc
dec
push
stos
rorb
pop
jp
cmpsb
mov
lcall
shl
inc
psllq
jmp
outsl
adc
mov
sbb
inc
lahf
push
sbb
gs
inc
jns
fdivs
fiaddl
test
lret
or
add
cmc
incb
mov
in
inc
and
dec
sub
mov
ret
imul
lcall
sbbl
sub
xor
push
iret
les
push
xlat
into
cld
cltd
or
sub
sub
adc
dec
ds
iret
fs
mov
lea
mov
imul
push
cwtl
and
pusha
ret
xor
fisubrl
jo
fs
test
div
mov
icebp
adc
pop
xchg
inc
cmp
adc
xor
pop
dec
add
aaa
in
sub
sti
or
mov
xchg
inc
movsb
fsubs
int3
and
mulb
mul
fildll
push
push
adc
ss
or
es
imul
add
jo
outsl
xchg
adc
adc
das
and
pop
push
inc
dec
andb
add
xchg
insb
pop
scas
fbld
pop
jns
dec
test
and
in
movl
bound
insl
lods
pop
out
lods
and
mov
stos
test
lahf
xchg
add
ret
xor
mov
cli
xchg
cmp
inc
movb
popa
push
cmpb
xor
xor
sbb
xor
jl
adc
fimull
fwait
sub
jns
es
in
mov
and
cli
int
sub
cmpb
in
rclb
nop
ds
push
xchg
fs
testb
enter
movsl
cmp
mov
jmp
mov
sub
adc
fwait
cmp
mov
jns
adc
pop
mov
mov
clc
fadds
adc
mov
pop
test
add
clc
push
stos
scas
and
and
mov
xor
ljmp
push
mov
xchg
shrl
push
mov
enter
sub
cwtl
xchg
hlt
push
xchg
add
stos
push
sub
shlb
dec
or
push
mov
push
iret
es
out
mov
xchg
mov
push
lods
sub
jne
ret
or
add
mov
mov
or
xlat
pop
jb
and
cmpsb
add
and
out
mov
shrl
or
imul
cmpsl
push
stos
push
test
cmp
les
mov
or
mov
xchg
sub
xchg
cmpsb
push
hlt
mov
sub
clc
push
dec
stc
cmp
mov
shlb
mov
fildll
gs
sahf
imul
test
cld
jmp
unpcklps
adc
push
scas
es
ficompl
jae
in
mov
loopne
ja
mov
hlt
arpl
std
test
and
xchg
fstl
mov
jae
adc
ja
cmp
cmp
adc
rcr
arpl
movsl
iret
xchg
mov
adc
push
adc
daa
inc
fnstenv
or
int
cmc
stos
xor
sub
sub
sar
idivl
push
adc
cmp
mov
idivb
fisttpl
stos
mov
cmp
out
fidivs
mov
paddsb
rcl
push
sbb
xchg
sbb
xchg
hlt
fstpl
es
push
adc
fadds
mov
add
and
movsl
adc
div
mov
in
push
dec
jne
and
dec
mov
in
aam
stos
push
shlb
pushf
dec
jne
in
mov
jns,pt
mov
in
xchg
cmp
shrl
pop
pop
mov
push
adc
push
aaa
mov
mov
add
push
scas
dec
fcompl
faddp
mov
test
push
out
push
je
pushf
or
add
ss
adc
push
jo
mov
mov
imul
aaa
dec
loop
push
pop
ficompl
lods
mov
jne
mov
sbb
push
adc
repnz
lea
in
shl
adc
hlt
xor
inc
jae
dec
dec
mov
mov
scas
out
sbb
leave
fsubr
test
adc
pusha
rcrl
mov
cmp
lcall
cmpsb
test
outsb
pusha
les
jp
mov
mov
mov
lock
sbb
out
fwait
rcrb
dec
push
push
mov
loop
xchg
sub
loopne
shlb
loopne
lock
mov
jmp
jbe
jb
jmp
mov
add
inc
addl
enter
mov
adc
je
or
add
stos
xchg
insl
mov
les
xchg
daa
lea
push
jnp
mov
mov
mov
int3
push
stc
sbb
push
pop
sub
or
xchg
mov
imul
and
loopne
testb
sti
mov
mov
pushfw
outsl
dec
stos
daa
cs
jg
or
jnp
scas
pusha
sub
das
lret
adc
ficoms
xchg
rcrb
ja
in
jp
or
dec
sbb
push
pop
push
lds
cmp
jne
mov
out
lfs
xchg
pusha
cwtl
stc
mov
stos
jl
mov
iret
mov
mov
sub
xor
lret
lcall
in
sbb
fcmove
nop
pop
adc
loop
fucomi
push
rcr
dec
inc
push
cmp
test
xchg
mov
mov
in
fimuls
insb
or
pop
hlt
dec
sub
in
cmp
out
fidivs
mov
psubb
cli
out
mov
ss
fsqrt
pop
test
mov
cli
idiv
jg
or
xor
pop
mov
mov
stos
ds
cmp
mov
push
xchg
dec
push
push
adc
loop
daa
sub
testb
shll
out
fs
adc
adc
subb
movsl
xlat
push
lods
sub
pop
pop
mov
xor
jbe
mov
es
adc
loope
mov
out
js
dec
lret
roll
popf
rcl
lea
mull
test
out
stos
add
cmpsl
push
adc
cltd
mov
mov
or
jmp
outsb
aad
adc
adc
lock
push
int3
jnp
xchg
jae
add
hlt
sahf
lret
xchg
or
pop
in
push
inc
push
and
mov
movsb
push
iret
push
ja
dec
pop
xor
cli
sahf
jmp
in
xchg
sub
pop
and
jmp
and
stos
cmp
pusha
sbb
call
shl
aad
sbb
pop
add
test
adc
fwait
ds
mov
test
jg
jo
adc
imul
jne
and
mov
xor
out
lock
sbb
rclb
lcall
inc
lea
cwtl
leave
mov
push
pop
int3
jge
xor
insb
aad
inc
arpl
jle
mov
sbb
xlat
push
js
into
ret
mov
js
mov
scas
rorb
das
cltd
jmp
jae
push
bnd
mov
fstps
push
scas
popf
nop
lcall
mov
fs
ss
repz
aad
dec
xor
push
adc
xor
outsl
out
mov
jae
fildl
jge
imul
inc
mov
xchg
mov
clc
cltd
or
fcompl
addb
push
sbb
imul
sbb
mov
inc
lret
pop
or
rep
sbb
femms
inc
pop
scas
sbb
les
in
pushl
sbb
pop
sub
mov
pop
pop
xchg
mov
sub
push
pminsw
call
movb
inc
bound
iret
xchg
sub
icebp
mov
mov
xchg
out
add
shl
xor
fsubrl
popl
pop
das
sbb
and
cmpsb
xchg
lods
subl
loop
ja
mov
sbb
roll
mov
push
sbb
inc
fwait
pop
or
sbb
iret
xor
xor
js
outsl
in
je
pop
fisubrs
test
cwtl
push
mov
sbb
lret
adc
sub
push
call
test
addr16
mov
jle
fistps
sti
add
popa
cmpsb
outsb
cmpsb
mov
sbb
mov
cld
mov
sar
fdivl
ljmp
shrl
push
adc
and
pushf
push
fcomps
cmpsl
mov
sbb
cmp
scas
pusha
and
nop
mov
sub
add
push
into
cld
fwait
pop
dec
test
outsl
mov
add
jg
sub
adc
ficoms
cmc
xorl
mov
mov
push
in
rol
jge
cmp
adc
and
jae
mov
push
mov
push
pop
stos
sahf
fwait
jge
jno
push
push
std
addr16
lahf
push
icebp
mov
xor
daa
aad
aam
lcall
push
adc
cmp
lahf
outsl
sub
scas
pop
shll
push
and
ret
mov
int3
jnp
daa
movsb
les
mov
xchg
sub
mov
cmpsl
dec
push
aad
xor
insb
add
addb
jns
repnz
push
test
cmp
gs
xchg
jge
hlt
add
mov
aad
and
mov
sub
pusha
dec
pop
bnd
cmp
sub
jno
fbld
mov
ret
ljmp
stc
cmp
sti
call
loopne
xchg
sub
jno
fbld
pusha
mov
ret
mov
mov
push
adc
push
xor
mov
jecxz
pop
mov
pop
cmp
push
idivl
leave
xor
push
adc
cs
mov
adc
xor
pop
test
jg
mov
iret
lahf
mov
inc
fcomi
daa
mov
stos
or
xchg
notl
inc
repnz
adc
sbb
pusha
xchg
sub
adc
and
mov
fs
and
mov
cmp
mov
push
sbb
sbb
jno
jns
frstor
repnz
adc
and
push
adc
sarl
cld
jns
dec
cmc
sub
adc
jmp
out
fucomip
pop
sub
xchg
imul
mov
hlt
insl
pusha
push
enter
push
adc
push
in
sbb
stos
push
xlat
int
cmpsb
ret
sub
insl
push
outsl
sbb
popa
push
lods
sub
adc
neg
fdivl
inc
repnz
adc
lahf
std
lock
push
testb
clc
mulb
adc
dec
fbld
cmpsb
inc
sbb
pop
mov
jnp
and
fwait
imul
mov
cmc
cmp
ja
dec
add
imul
xchg
lea
push
imul
cmp
stos
pop
sbb
sub
adc
jge
jmp
negl
insl
mov
andl
push
ljmp
xchg
push
filds
adc
aaa
mov
sub
pop
or
je
mov
lock
mov
popf
jae
push
add
out
adc
adc
mov
pop
sbb
je
dec
mov
andb
icebp
fs
xchg
clc
push
bnd
pop
int3
xchg
pop
out
shr
fldenv
lret
cld
xor
aaa
mov
cmp
xchg
pop
jmp
xchg
sub
and
mov
adc
add
dec
dec
cltd
xchg
ja
notb
mulb
pop
or
mov
loopne
jo
push
ja
mov
add
adc
stc
cmp
mov
clc
clc
jns
adc
aaa
fidivrl
cmp
jae
pop
sbb
push
mov
sti
call
sub
jne
pop
jmp
mov
insl
fs
add
sahf
repnz
mov
jns
adc
dec
dec
jg
jg
sbb
dec
push
inc
jbe
sub
pop
xchg
jns
adc
or
xor
fidivrl
nop
cs
into
xchg
stc
lock
jmp
stos
adc
lock
adc
cmp
jg
dec
inc
loop
jg
mov
jae
adc
ss
inc
lret
ficoms
mov
leave
mov
ficoms
push
xor
aad
jecxz
push
xor
call
cmpsl
fistpll
jae
mov
push
adc
je
adc
xchg
cltd
dec
mov
mov
inc
adc
xor
aaa
adcb
fnstenv
sbb
fadds
push
mov
mov
jmp
xor
pop
popf
iret
shrl
sub
das
xchg
sbb
mov
daa
dec
jp
adc
rclb
jg
hlt
arpl
xchg
xchg
xchg
test
cmp
xor
push
adc
ss
push
add
and
mov
cmp
xor
mov
adc
inc
push
or
xlat
pop
or
push
dec
push
push
mov
jns
adc
test
imul
lock
xchg
outsl
iret
lock
xchg
in
scas
cmpsb
cmpsl
cwtl
enter
test
pop
jnp
clc
sbb
and
jp
adc
sbb
in
scas
movsb
cmpsl
movsb
enter
lahf
mov
ret
and
shll
bound
clc
add
ret
sahf
cmp
mov
mov
int
subb
shll
das
fldenv
push
sub
dec
push
ds
pop
das
jb
iret
adc
mov
stos
xor
cltd
pushf
and
pop
sbb
gs
es
popf
iret
shr
hlt
call
xchg
push
imul
stos
fists
movl
jge
neg
adc
scas
dec
cmp
push
out
insl
push
lea
push
adc
aas
add
and
lcall
mov
aam
int
in
loope
mov
gs
in
scas
mov
add
and
push
incl
sub
iret
mov
jp
adc
sbb
scas
mov
pop
lea
ret
jp
mov
shl
movsb
adc
test
and
shl
add
incb
xchg
enter
leave
and
adc
lcall
cs
jle
repnz
in
mov
xchg
jnp
xor
movsl
cmpsb
mov
cmp
ds
sbb
cmp
jl
rcll
and
inc
ret
mov
mov
cli
inc
mov
movsl
jge
mov
xchg
xchg
fst
push
push
mov
cld
dec
into
inc
add
insl
aam
lahf
lods
add
adc
stc
imul
ljmp
arpl
stos
inc
mov
mov
pop
mov
add
int3
pop
icebp
jmp
cmc
jb
push
xchg
repz
icebp
movsb
aam
clc
adc
mov
jnp
mov
data16
fstl
in
push
fistl
inc
test
aaa
addr16
xor
test
pop
loopne
xchg
pushf
rcrl
jmp
int3
mov
push
mov
test
add
dec
pusha
mov
movsb
pop
sar
inc
sbbb
pop
in
daa
fdivrl
in
int
pop
lret
outsb
leave
jecxz
pop
sbb
push
iret
subl
rcrb
mov
jbe
adc
sub
fcompl
pop
jo
adc
dec
cmp
push
adc
lock
push
ficomps
lret
test
negb
scas
pop
xchg
mov
imul
jbe
adc
sbb
sub
or
adc
sbb
loopne
cmp
jl
adc
aaa
flds
cwtl
jae
adc
xor
xchg
test
ret
and
pop
adc
and
mov
and
aaa
lock
adc
fs
int3
ret
jo
push
adc
ja
or
into
call
pop
cmp
pop
sbb
pop
and
outsl
dec
cs
add
pop
adc
sbb
sti
pop
xchg
iret
scas
mov
inc
mov
mov
or
outsl
inc
addb
or
idivb
jl
aaa
sbb
repz
cmp
mov
xchg
out
sahf
lea
gs
inc
fwait
dec
push
fwait
ds
mov
orl
and
push
mov
cmp
pop
dec
mov
insl
pop
stc
cmpsl
adc
inc
lea
mov
mov
jo
adc
outsb
mov
dec
push
jecxz
pop
aad
nop
idivb
paddq
adc
daa
adc
int
adc
cmpsl
mov
push
adc
stos
jg
pushf
xchg
and
jno
inc
push
xchg
adc
ret
inc
pop
cmp
or
xchg
call
or
fnstcw
and
mov
nop
mov
sti
test
jecxz
out
dec
pop
cmp
or
rcrb
in
les
adc
xchg
testl
xchg
je
enter
pop
adc
mov
mov
gs
mov
push
lods
and
mov
int3
arpl
jae
or
movsb
add
mov
pop
out
inc
out
jno
cmpsl
xchg
sub
xchg
clc
mov
loopne
outsb
outsb
hlt
cld
sbb
add
inc
jb
mov
scas
add
dec
js
sahf
mov
jg
and
sbb
push
cmpsl
inc
aam
pusha
loope
sti
push
cld
add
cs
sbb
movsl
repz
push
in
insb
mov
jno
pop
out
sti
or
mov
test
push
popf
jg
or
int3
and
lret
cmpl
imul
add
inc
cmpsl
dec
jbe
lods
repz
jge
leave
pop
adc
push
xchg
dec
iret
call
inc
sti
hlt
push
test
mov
stc
imul
jb
inc
mov
lods
ret
sahf
sbb
out
fdivl
jns
scas
pop
hlt
outsl
jns,pt
popa
arpl
xchg
sbb
fsts
sub
jae
enter
push
test
and
pop
mov
mov
jnp
xchg
test
icebp
mov
mov
jbe
imul
lea
push
out
and
nop
adc
cmpsb
ss
scas
imul
fdivs
adc
jns
xor
mov
inc
pushf
or
xor
dec
jno,pn
cmc
fiaddl
adc
bnd
dec
or
adc
dec
push
mov
jbe
adc
or
push
adc
jp
mov
idiv
pop
cmpsb
mov
mov
jo
adc
not
imul
aad
sub
mov
xor
mov
lods
fists
push
movsb
push
sub
mov
rcrb
out
imul
in
and
loop
push
jl
adc
mov
loopne
mov
stc
sub
jl
and
fildll
push
adc
or
or
fistl
cmpsl
arpl
pop
nop
add
ds
lahf
sbb
pop
data16
cmp
mov
sbb
addb
lret
xlat
push
and
add
lcall
test
mov
pop
loop
arpl
mov
push
adc
pop
cs
je
in
jo
adc
mov
es
inc
pusha
cmp
adc
rolb
mov
dec
ds
mov
enter
push
dec
shlb
ss
pop
or
sbb
xchg
pop
rclb
es
arpl
mov
jb
jo
adc
fidivrl
cmc
add
xchg
outsb
inc
incb
pushf
imul
xor
jo
out
mov
push
adc
xor
cmpsb
pop
lock
lahf
push
in
mov
mov
arpl
add
shlb
adc
data16
test
xchg
ljmp
xor
dec
arpl
testl
scas
fcoml
mov
outsb
fwait
sub
sub
sbb
dec
mov
mov
dec
mov
adc
addb
jb
sbb
mov
je
dec
jbe
mov
and
roll
xorb
jecxz
mov
push
stos
and
scas
and
movd
jmp
mov
pop
cs
enter
add
pop
mov
pusha
adc
adc
mov
pop
es
cmp
xchg
mov
inc
adc
inc
mov
pop
ja
icebp
push
fdivl
daa
rcll
pop
mov
mov
out
add
adc
ds
cmp
jb
mov
push
and
ret
sti
les
adc
sbb
call
push
flds
or
or
adc
adc
ja
iret
scas
jge,pt
movsb
mov
xchg
mov
ds
stos
ficoms
popa
ret
adc
inc
mov
hlt
imul
out
xchg
and
inc
inc
sbbl
jae
adc
jg
lret
fimull
mov
popf
ljmp
shrl
and
cwtl
mov
scas
adc
or
pop
mov
xor
bound
lahf
mov
push
push
pop
repz
outsb
aad
push
and
mov
out
and
jp
aad
add
pop
in
out
adc
pop
push
ja
orl
mov
sbb
xchg
add
mov
add
xchg
sub
stos
push
jge
scas
pop
mov
in
jo
adc
repnz
jo
pop
subl
test
jle
test
mov
in
jo
adc
or
xor
lds
push
adc
adc
adc
mov
cs
dec
add
pop
in
add
data16
adc
or
pop
adc
mov
cld
mov
imul
testl
jne
cld
jle
jecxz
aaa
leave
jne
js
out
dec
movsb
mov
out
xor
mov
nop
mov
jne
loop
jl
adc
leave
into
mov
jg
rorl
adc
and
loope
jmp
and
push
adc
inc
adc
pop
cmp
cmpsl
sbb
call
repz
insb
or
sub
xor
test
dec
inc
fnsave
sub
les
insl
sbb
loop
stc
test
insl
xchg
cmpsl
sub
jae
negb
cmp
jle
xor
loope
hlt
mov
xchg
mov
shlb
xchg
loop
clc
ja
mov
mov
pop
sbb
dec
dec
ljmp
jae
fisttpl
jge
sub
loopne
push
or
fwait
and
stos
aaa
aad
leave
clc
cltd
xchg
mov
call
mulb
xor
fmuls
push
lret
dec
sti
xchg
push
jge
or
clc
mov
pop
jl
cmp
xchg
xchg
dec
mov
cmp
lahf
out
mov
dec
cli
idivb
mov
in
popa
jecxz
cs
lahf
icebp
cmpsl
popf
xor
pop
fildll
addr16
sbb
stos
in
add
adc
xchg
adc
mov
ds
sbbl
adc
or
dec
sbb
enter
mov
test
dec
les
xchg
mov
in
adc
outsb
div
jo
adc
push
arpl
popa
and
push
adc
xchg
xor
sbb
std
dec
je
out
sub
or
pop
and
loopne
push
adc
cld
mov
fcmove
sub
nop
mov
push
stos
push
std
pop
push
inc
fdivl
adc
jo
adc
pop
fidivrs
aad
sub
fistps
xor
jle
cs
push
jno
xadd
cmp
popf
dec
pop
enter
push
inc
clc
jo
adc
test
shl
pop
adc
push
adc
fistps
lods
mov
jo
adc
cs
div
xorb
imul
mov
push
cld
aas
stos
fstp
stos
pop
pop
loopne
push
adc
xor
sbb
mov
jns
xor
stos
add
fdivl
adc
jo
adc
mov
mov
add
adc
mov
push
jmp
fcmovb
lock
add
fistps
gs
inc
and
push
adc
aaa
fwait
cmp
test
in
movsb
lods
ret
jb
jo
mov
push
push
rorl
xor
sbb
push
mov
idivl
insb
jl
adc
bound
push
and
pop
jns
pshufw
inc
into
cmp
sub
push
pop
cmp
lods
xchg
and
mov
les
pop
xor
out
in
push
arpl
int3
out
mov
mov
adc
jl
add
push
call
cld
div
jg
aad
xchg
push
adc
fistpll
mov
jl
adc
testl
mov
aad
push
std
mov
lds
repnz
in
mov
fdiv
lahf
shlb
mov
clc
mov
popa
inc
lcall
je
or
cmp
fldt
adc
inc
dec
dec
mov
scas
and
shr
push
imul
xchg
xchg
mov
test
in
dec
xor
adc
clc
and
mov
fsubs
cmc
push
dec
mov
push
xchg
nop
lret
or
in
pop
cmp
mov
jmp
ljmp
lock
xchg
sbb
or
dec
ficoml
mov
mov
cltd
rcrb
ljmp
inc
lea
sub
movups
enter
jg
gs
pop
stos
jmp
pop
lods
add
cmp
sarl
or
stos
mull
enter
and
xchg
add
add
mov
mov
mov
push
lods
rcl
mov
fbld
movsb
sar
imul
xchg
iret
imul
imul
fwait
cltd
jb
cmc
add
cs
inc
shrl
rcll
dec
adc
lret
push
xchg
insb
sbb
addr16
orb
mov
mov
jmp
fnstsw
inc
sbb
shrb
push
into
aaa
xchg
push
push
sbb
fwait
xchg
xchg
push
sbb
push
mov
scas
in
jecxz
lock
cmp
out
fnsave
cmpsb
pop
fdivl
pop
dec
pop
push
pop
mov
jmp
out
clc
sahf
dec
cmc
sbb
fldt
push
out
inc
or
dec
cwtl
dec
xlat
addr16
pop
rcl
inc
mov
lret
icebp
aam
or
inc
test
add
push
loope
xlat
mov
adc
fcomi
dec
mov
push
leave
add
das
sbb
adc
sbb
enter
mov
jp
inc
xchg
scas
je
jo
push
and
mov
pop
pop
fsubl
popa
sub
xchg
mov
mov
dec
jns
test
pop
ljmp
scas
fsubr
push
inc
pop
sub
lcall
xor
and
mov
jae
loopne
loope
dec
push
xor
inc
push
and
out
fdivrl
jp
dec
lods
cmc
stos
xor
mov
lods
ret
pop
and
mov
test
xchg
and
pusha
mov
out
mov
cmp
iret
cld
add
sub
mov
popf
call
mov
add
push
mov
rcrb
ja
push
fidivrs
in
pusha
dec
pop
repnz
orb
push
xor
filds
loop
cmpsl
js
xor
out
lock
mov
add
cwtl
add
pop
cmpsb
mov
or
fldt
popf
jnp
mov
ljmp
xchg
mov
lea
ss
cmp
sub
mov
jb
bnd
cmpsl
mov
leave
ds
orl
leave
mov
jnp
xor
xor
ror
aam
nop
xor
imul
mov
negl
cwtl
popf
jg
xchg
jmp
sub
sub
push
fsubrl
shrl
pop
sbb
dec
pop
mov
daa
inc
fidivrs
ja
frstor
xor
data16
jno
add
daa
addl
mov
out
pop
jge
and
adc
push
in
pop
out
fimull
jns
scas
push
and
cltd
fists
js
sub
or
aas
sub
mov
and
push
sbb
loopne
cwtl
aas
cli
lret
in
stos
mov
loopne
and
adc
and
adc
mov
in
lods
push
es
std
sbbb
pop
mov
lret
push
ja
push
in
shll
xchg
fstl
pop
and
push
push
inc
loop
out
mov
xchg
sbb
and
stos
imul
dec
or
mov
sbb
xlat
incb
lahf
clc
and
pop
add
mov
fiaddl
dec
xchg
out
lods
push
decb
inc
xchg
adc
mov
dec
xchg
push
push
fisubl
jl
cltd
push
mov
adc
mov
jge
fistl
dec
push
sbb
inc
scas
add
jge
andb
mov
sub
pusha
in
adc
push
adc
scas
pushf
into
xchg
ds
jge
ds
inc
loop
loopne
fldt
cs
fiadds
jl
cmp
mov
inc
mov
sub
lods
dec
inc
cld
push
aaa
jne
and
jns
mov
clc
ret
outsl
inc
les
fnop
mov
mov
jns
lods
cmpsb
cmp
xorl
mov
inc
or
loopne
mov
popl
cmpsl
out
mov
inc
dec
mov
add
pop
enter
scas
fbld
push
inc
enter
lea
leave
inc
add
mov
add
fdivs
push
mov
lea
fstps
lahf
add
mov
fisttpl
xor
adc
lock
ret
push
lds
push
loope
inc
lods
std
mov
xchg
cmp
and
adc
or
inc
mov
adc
jo
push
adc
jle
inc
dec
cmpsb
cmp
jo
lahf
and
aaa
jp
mov
ret
ljmp
popf
adc
out
mov
mov
ret
jb
stc
dec
fstpt
xor
adc
es
jmp
xor
pop
dec
add
or
jno
sahf
mov
lods
mov
aad
sbb
shlb
jp
leave
sbb
jns
mov
pushw
lret
push
and
dec
sahf
mov
int
int3
adc
dec
arpl
xor
push
stos
push
fists
arpl
ret
insl
adc
sub
xchg
push
cld
jno
jg
sub
inc
insl
pop
out
pop
and
sub
xchg
mov
fsubrl
aaa
pop
es
and
insl
cli
mov
push
insb
and
nop
cmpsb
outsb
insb
es
movsb
divb
test
adc
fstpl
mov
push
aad
adc
sbb
out
inc
xchg
mov
repnz
loopne
mov
clc
or
cmp
sub
push
add
inc
cwtl
aad
jno
rorl
xlat
push
icebp
out
stos
mov
fcoms
insb
sub
mov
nop
hlt
insl
adc
sub
xchg
ret
cli
jg
cmc
and
outsb
adc
test
push
ja
pop
dec
popa
jl
call
mov
jmp
ds
frstor
pop
adc
mov
and
ja
lret
lahf
xchg
push
adc
and
mov
fs
pop
fsub
push
and
push
mov
xor
jecxz
sbb
cmp
testb
pop
and
jns
cs
ja
mov
add
int
inc
push
jecxz
stos
push
stos
push
pusha
nop
sub
pop
xor
jnp
out
push
sarl
mov
sub
push
mov
xorb
imul
rorb
jb
or
std
bound
fs
mov
add
sub
cli
mov
fsubrp
cli
sbb
outsl
hlt
movsl
mov
sbb
out
es
inc
xchg
movsl
mov
push
push
mov
into
sbb
jmp
jb
dec
adc
aad
nop
cli
dec
nop
mov
pop
push
mov
sbb
sbb
hlt
dec
xor
subb
or
mov
sub
and
in
iret
jo
fidivrl
mov
jg
insl
push
fwait
cld
jp
jecxz
inc
xor
xchg
mov
popf
push
mov
xchg
in
jnp
popf
jae
xchg
cmpsl
out
hlt
jnp
mov
insb
lret
jb
fdivs
cmp
mov
push
out
jecxz
repz
add
lret
in
push
jl
mov
clc
je
jl
push
adc
jge
stc
jp
pop
test
in
movsl
fldenv
enter
hlt
sbb
pop
adc
xor
jl
push
adc
push
das
push
clc
and
adc
imul
adc
cs
fsts
jmp
leave
cmp
sub
mov
mov
dec
fwait
aad
call
fsubs
test
lods
dec
loop
pop
in
cmp
test
loop
mov
fsubl
push
bound
adc
es
xchg
inc
or
incb
adc
js
les
ret
push
sbb
cmpsb
cmp
lahf
outsl
aam
adcl
divb
imulb
pop
sub
pop
pop
call
mov
out
inc
outsl
sar
inc
stc
call
lret
xchg
mov
mov
cmpb
fsubr
into
mov
es
pushf
hlt
dec
roll
jb
les
and
in
inc
shrl
cmc
cmc
insl
mov
repnz
push
es
cli
push
call
and
fiadds
jo
push
or
xchg
push
xor
adc
sub
and
rcrb
cmp
xor
out
testl
popf
ret
repnz
xchg
loop
xchg
mov
and
sbb
jl
fadds
or
jge
pusha
adc
mulb
push
stos
filds
stos
mov
xor
inc
lock
push
std
sub
mov
outsl
and
fistps
pop
mov
mov
in
clc
or
cmp
outsl
cmp
xchg
test
and
mov
mov
mov
add
dec
jb
cmp
push
xlat
insl
inc
outsb
mov
mov
mov
cmc
cltd
pusha
dec
insl
adc
enter
mov
xchg
mov
pop
shlb
mov
add
xchg
cmp
call
pop
and
and
pop
dec
sbb
sarb
inc
adc
add
jl
adc
shll
push
cli
fbld
sub
xchg
and
cvttps2pi
cmp
mov
push
pop
xor
push
stos
push
fsubrp
pop
push
xchg
pop
inc
imul
push
jmp
subb
cmp
mov
inc
lea
xor
movsl
loop
ja
int3
pop
xor
or
xchg
cld
jns
mov
mov
adc
mov
daa
sub
leave
insl
xchg
out
fdivrs
dec
pop
loop
mov
dec
sbb
fsubrl
push
and
xchg
insb
sub
mov
xchg
pop
cmp
jg
cmc
stos
jge
cmp
iret
std
fcom
pop
cmpsl
in
sbb
aam
dec
jmp
xor
ljmp
std
int3
dec
inc
mulb
and
push
imul
mov
cmc
jns
xor
xor
out
mov
jb
push
insb
pop
cmc
xchg
mov
cmp
ss
push
mulb
cld
or
sub
stos
push
and
dec
lret
mull
pop
pop
sub
adc
cmp
push
inc
mov
push
pushf
test
fwait
sub
out
inc
popa
ljmp
sbb
test
cmp
mov
in
jmp
aaa
dec
loop
push
pop
ficompl
inc
cs
scas
jl
data16
aaa
mov
jae
clc
dec
fidivrl
xor
lods
jl
adc
adc
push
adc
scas
lcall
adc
mov
cmp
push
into
cmp
jb
icebp
mov
push
mull
add
jge
stc
jp
adc
inc
fcoml
adc
mov
xchg
sarb
or
notb
push
pusha
test
pop
das
adc
out
fmull
aas
pop
xor
fucom
aaa
insl
sbb
stc
out
jo
jl
adc
loope
sahf
icebp
repz
mov
idiv
pop
leave
leave
popl
adc
mov
pop
fcomps
push
adc
push
push
lock
push
adc
dec
test
lcall
or
xchg
inc
sub
push
cmp
je
pop
imul
mov
adc
jle
mov
lahf
mov
sub
sbb
fldt
into
xchg
xchg
pop
sbb
and
pusha
ss
pop
mov
lods
xor
or
sbb
or
jp
dec
jmp
mov
outsb
and
and
shr
int
gs
sub
lds
xor
pop
das
lcall
mov
or
andl
ljmp
aad
sbb
xchg
sbb
sbb
mov
in
je
push
test
sub
and
push
and
mov
lock
repnz
adc
jno
clc
cli
mov
cltd
ds
xlat
inc
test
lods
mov
in
cbtw
add
jge
lock
dec
inc
push
outsl
cmp
and
pop
and
movl
dec
insb
sahf
scas
adc
shrl
pop
lods
sbb
pushf
nop
mov
push
cmpsl
dec
adc
pop
bound
lahf
jge,pt
mov
pop
fwait
int
cs
nop
fnstsw
mov
nop
fwait
gs
sbb
mov
cli
push
jno
fistpl
push
rolb
fs
jl
int3
xchg
imul
mov
loope
lods
mov
clc
push
mov
xlat
inc
test
mov
sti
imul
insl
insb
mov
aam
jnp
jle
and
sahf
push
outsl
jp
xlat
sbb
add
leave
adc
jl
push
adc
dec
add
mov
adc
loope
sub
cld
and
adc
ret
pop
adc
rcr
and
and
movsl
fdiv
pop
enter
gs
popf
clc
testl
mov
dec
or
call
xchg
movsb
test
sbb
popf
jb
mov
jg
push
jno
lret
lahf
ret
push
movsl
and
fildll
in
add
mov
scas
cmp
addb
xlat
fiadds
mov
jl
cld
xor
mov
popa
jmp
ud1
repnz
inc
gs
adc
jmp
cmp
jle
jo
bound
adc
adcb
fs
mov
shr
fists
outsb
cmp
mov
lock
pop
lods
clc
and
adc
lahf
mov
or
ret
hlt
sbb
pop
adc
xor
aad
leave
gs
bound
pop
pop
cmpsl
call
addr16
push
dec
psubb
dec
or
push
adc
movsl
push
mov
in
push
add
xor
les
data16
ljmp
testl
iret
mov
dec
insb
inc
es
movsb
fildl
xchg
fdivs
xchg
aad
decl
jle
stc
cld
gs
mov
xor
mov
pop
mov
jnp
pusha
pop
movsl
sbb
mov
or
cmc
and
inc
fdivr
xor
inc
mov
cld
mov
jae
cmp
leavew
ret
sbb
aad
sbb
or
ljmp
add
stc
repz
pop
les
cmp
push
arpl
mov
test
icebp
cmp
xor
sti
mov
in
loop
xor
pusha
cmpsl
cmp
adc
pop
mov
int
icebp
outsb
sbb
fbstp
mov
jp
dec
sub
bound
in
or
jg
in
and
shll
cli
add
sbb
pop
jnp
scas
xchg
and
pop
test
mov
jmp
test
jge
ds
push
jnp
push
cmp
cmp
imul
push
dec
xor
or
mov
imull
popa
adc
xchg
jge
cmp
call
mov
xchg
xchg
leave
pop
adc
aas
dec
jg
xchg
and
add
and
pusha
js
mov
add
int3
mov
cmpb
fwait
in
into
movsl
adc
or
and
push
outsb
std
mov
lea
add
or
and
jno
pop
std
xor
pushf
sub
adc
adc
test
lds
ljmp
js
sti
cld
mov
push
adc
xchg
mov
adc
stos
fsubrp
mov
movsb
push
cmpsl
dec
sahf
hlt
mov
sub
adc
hlt
mov
dec
mov
pop
mov
adc
pop
fmull
add
sub
mov
and
pop
les
mov
ror
jb
xor
xchg
cmpsl
int
inc
imul
cmpsl
push
stos
push
test
imul
clc
test
mov
mov
mov
outsb
adc
sahf
ljmp
fdivs
xor
xchg
pop
xor
mov
lea
out
pop
repz
dec
movsl
testl
cmp
hlt
push
dec
jg
in
xchg
out
add
shrb
adc
pop
dec
sahf
mov
shll
xorb
push
lock
pop
adc
mov
push
adc
jmp
xchg
xor
and
stos
iret
mov
pop
ret
jb
jl
and
push
and
outsb
insl
xchg
or
and
pop
xor
dec
xchg
or
adc
sar
xor
scas
push
ret
pop
adc
fcmovnu
sub
in
popa
mov
mov
jae
and
pop
adc
lds
movsb
add
roll
lret
lahf
mov
push
jg
mov
and
xor
imul
jmp
sub
xchg
rolb
or
negb
sbb
xor
mov
pusha
mov
jae
into
adc
adc
cmp
jo
out
xchg
mov
int3
dec
cmc
cmp
jne
sbb
hlt
aas
push
cli
jle
cmp
jae
push
insb
mov
push
adc
adc
mov
mov
outsb
cmp
dec
jno
out
push
les
push
adc
and
mov
je
out
jae
sar
lock
pop
fstpt
fldenv
pop
mov
inc
sbb
mov
repnz
xchg
ss
ds
insb
dec
sbb
push
adc
hlt
js
movb
rcrb
ret
out
xor
inc
sti
aaa
jp
xchg
adc
jbe
push
jl
sub
xchg
iret
and
inc
loop
ret
xor
inc
imul
ds
jl
imul
cltd
fdivr
popf
sbb
mov
xchg
jae
mov
ss
fiadds
aad
cmovg
popa
push
sahf
outsl
sarb
call
mov
mov
xor
and
ljmp
bound
negl
lea
sub
mov
out
cs
mov
mov
in
stc
dec
imulb
shll
fcmovbe
jno
pop
movsb
daa
and
pop
leave
push
or
in
scas
cli
ret
jp
movsl
pop
fwait
jns
and
hlt
jne
sub
adc
mov
mov
out
rol
adc
andl
les
cmp
adc
sub
test
mov
out
leave
test
adc
scas
mov
inc
inc
leave
sub
rcrb
repz
pop
mov
mov
cmp
dec
jne
sub
out
jp
ss
shl
dec
lret
mov
stc
dec
in
cmp
mov
repnz
inc
sbb
and
repz
xchg
jo
arpl
arpl
shrb
push
cmc
das
bound
inc
repnz
pop
mov
dec
inc
loopne
and
pop
xlat
dec
cmp
inc
lahf
aam
scas
sub
adc
push
cld
icebp
mov
lcall
lcall
inc
daa
push
aaa
cmpsl
or
or
xor
leave
lods
xor
test
popa
out
cld
cli
and
pop
mov
xchg
rol
mov
sub
cs
or
jg
movb
mov
sti
xlat
cmpsl
lods
clc
push
mov
lock
fisttpll
das
vorpd
adc
jnp
int3
stos
int3
into
je
add
hlt
imul
shrl
sub
jbe
scas
or
pop
jns
fmull
insl
mov
arpl
imulb
aam
mov
dec
jne
divb
sbb
mov
fdiv
not
shrl
fsubrs
xor
test
mov
jg
mov
lods
jg
cmp
jb
mov
insb
adc
push
sub
pop
jge
jl
push
mov
ss
pushf
cld
call
sub
adc
clc
add
xchg
std
add
inc
lock
outsb
xchg
sbb
pop
and
jno
insb
out
pop
ficomps
sarl
jae
call
xlat
adc
mov
lea
cld
test
stos
in
stc
sub
adc
sub
jnp
add
ljmp
clc
fisttpl
sub
popa
repnz
aam
stos
pop
and
jg
stos
in
mov
ss
cmp
int
dec
mov
push
stos
push
rol
mov
mov
mov
mov
cli
sbb
push
sbb
sub
and
lcall
mov
inc
jb
loop
in
fnstcw
pop
jecxz
mov
mov
sbb
mov
mov
mov
inc
mov
dec
dec
jns
add
and
popa
sbb
pop
lods
fsubrp
push
and
xchg
data16
sub
and
cmc
pop
dec
imul
aam
inc
mov
push
insl
lret
dec
movsl
cmpsb
int3
je
push
imul
xor
xchg
iret
iret
xor
inc
frstor
scas
movsb
gs
cld
or
daa
lahf
sarl
loop
add
mov
and
les
and
pop
xor
push
mov
add
xor
shll
dec
push
pop
cmp
mov
inc
ss
pop
inc
lds
or
add
add
sar
jp
add
and
dec
mov
outsl
in
cwtl
outsl
or
push
adc
orb
pop
cmp
jp
push
jb
sbb
out
cltd
cmpsb
or
scas
clc
scas
pop
or
mov
and
add
pusha
mov
xchg
rcl
push
ret
inc
pusha
push
scas
stc
and
jecxz
andl
add
add
ds
push
mov
mov
push
cli
inc
lock
pop
cmp
jo
xchg
bound
sbb
inc
jmp
mov
and
xchg
xor
cmp
mov
push
insl
jmp
out
pop
cs
clc
mov
adc
sbb
test
inc
repnz
sbb
pop
lcall
and
lea
xor
jg
pop
push
pop
jb
inc
cmpb
loopne
les
stos
shll
push
out
mov
xchg
add
ja
xchg
sub
fmull
mov
lods
cmp
cli
scas
scas
icebp
fists
push
cmp
out
push
clc
in
mov
jno
ret
dec
add
and
ret
mov
jae
inc
pop
pushf
mov
hlt
and
sbb
sub
add
pop
mov
aas
in
icebp
es
in
ss
jle
add
cwtl
nop
lret
fsubrs
loop
call
loop
xchg
scas
mov
aaa
dec
loop
push
pop
fimull
inc
imul
or
sahf
mov
dec
mov
pop
or
push
jns
test
loop
or
popf
mov
adc
dec
mov
sti
hlt
scas
push
shrb
mov
push
pop
sub
adc
jecxz
and
push
fsubl
jmp
adc
push
cmp
ja
xchg
adc
hlt
mov
imul
mov
push
lods
dec
dec
lods
std
repnz
gs
dec
sbb
xchg
rcrl
hlt
call
dec
mov
cmpsb
rcrl
mov
and
int3
arpl
int3
or
push
out
test
mov
xchg
cld
ja
movsb
xchg
push
jnp
and
fwait
sbb
sbb
jne
or
test
fldenv
cmp
stos
fildll
jmp
test
syscall
rolw
adc
xchg
les
sub
push
test
jno
adc
popf
arpl
mov
cs
call
sbb
xchg
xchg
ficoms
mov
and
mov
fdivrl
ss
sub
sbb
test
rclb
loop
push
cmpsl
dec
popa
sub
jo
adc
mov
xchg
pop
ss
jns
test
mov
int3
xchg
sub
fwait
hlt
mov
enter
out
sbb
imul
lahf
ds
out
pop
cs
xor
fidivs
mov
adc
fsubr
xchg
arpl
xchg
inc
or
cs
add
cld
mov
inc
pop
arpl
orb
hlt
call
in
xchg
mov
push
daa
sbbl
pop
out
xlat
push
pusha
mov
dec
adc
xchg
movsb
inc
mov
pop
dec
gs
les
cmp
pop
xor
and
pop
movsl
mov
lods
dec
mov
xor
inc
pcmpgtd
imul
push
fadds
aas
jle,pn
ss
or
jne
lret
mov
mov
push
push
and
cmp
iret
fwait
mov
sbb
inc
loope
xor
pmaddwd
inc
sub
adc
addr16
jg
inc
jnp
mov
pop
adc
popf
sub
sub
dec
lret
sti
add
xchg
pop
push
movsl
cmp
fildll
mov
fstpl
insb
outsb
dec
mov
jnp
fdivr
lret
cmpsb
movsl
sub
jne
scas
sub
dec
fcompl
jecxz
mov
pop
xchg
dec
and
ret
inc
arpl
insl
sbb
mov
mov
jb
dec
add
jecxz
int3
pop
jmp
push
aas
inc
ret
xor
xor
jge
hlt
jbe,pn
imul
ret
bound
and
outsl
xchg
in
fwait
cmp
popa
outsl
mov
inc
aad
sub
push
cltd
pop
call
pop
test
or
rcrl
hlt
scas
insl
xor
mov
add
adc
pop
lods
mov
mov
lods
or
adc
es
jmp
sub
in
jne
sub
adc
mov
mov
out
loope
jle
cmc
adc
adc
or
and
int
scas
xchg
cmp
mov
out
sbb
sbb
dec
mov
roll
loop
scas
shll
push
je
lods
mov
fsts
cs
dec
imul
cmp
pop
jno,pn
adc
pusha
or
std
loopne
out
adc
xor
out
push
adc
int
jl
jnp
dec
pop
xor
stc
cltd
bound
dec
imul
jle
push
sub
inc
outsb
fs
lods
adc
push
cmp
adc
push
nop
inc
loop
dec
cltd
gs
lods
out
xor
mov
and
push
or
movsl
push
jecxz
jne
loopne
adcl
inc
or
jb
push
add
jbe
xor
add
int
sub
adc
leave
test
daa
dec
repnz
mov
mov
lcall
flds
adc
rclb
push
xchg
xor
pop
adc
sarb
adc
jnp
daa
ss
jns
jg
push
pop
xor
lahf
ret
push
shll
stos
inc
adc
jbe
orb
pop
inc
mov
jge
adc
gs
ret
pop
adc
loop
into
aad
inc
ljmp
mov
and
pop
adc
push
inc
xchg
push
test
mov
sbb
sbb
ror
idivb
dec
lea
xor
and
popa
dec
outsl
or
xor
ss
pop
movhps
and
pop
inc
add
and
rcrb
dec
ja
fwait
aam
fcompl
pusha
mov
push
bound
rol
xchg
sub
imul
adc
sub
xor
pop
dec
cli
ret
cmp
xor
fsubp
mov
sahf
cmp
xor
jge
mov
fldenv
pop
scas
push
repz
gs
sahf
cli
jp
repnz
adc
sub
mov
mov
push
and
ja
or
cmpb
lcall
push
mov
test
sbb
mov
js
ds
mov
adc
and
pop
pop
fmul
movsb
lcall
addb
in
xorps
add
or
mov
aad
fsubr
mov
fsubs
cmp
xchg
pop
mov
lahf
pop
jnp
sti
sbb
das
pop
mov
pop
push
mov
sub
jge
flds
out
int
mov
lret
jle
clc
sub
push
insl
add
test
dec
mov
and
lahf
aam
sbb
adc
fbstp
shrl
fsub
cmpsl
adc
hlt
mov
mov
ss
mov
loope
lahf
je
adc
aam
pushf
pushf
sbb
xchg
pop
les
sub
adc
cmp
mov
pop
rcrl
dec
mov
xor
cmp
cs
mov
cmp
mov
lahf
sub
adc
or
shlb
inc
cltd
imul
push
mov
inc
xchg
in
or
out
jmp
mov
fcomps
sub
mov
clc
xor
mov
push
aad
jge
push
pop
jae
test
adc
mov
fbstp
pop
sbb
jmp
add
fidivrs
mov
aaa
in
in
idivl
xchg
loope
test
lods
push
imul
jno
loopne
pop
pop
bound
loop
gs
ret
gs
insb
pop
hlt
mov
xchg
inc
lods
cmp
sbb
loopne
test
sahf
inc
das
jns
out
xchg
dec
mov
sbb
orl
and
dec
mov
inc
pop
mov
idivb
enter
fistpl
loope
ss
lret
cmpb
sbb
ja
and
and
lret
push
push
xor
adc
imul
and
push
cltd
push
adc
clc
pop
xor
andb
mov
ds
js
inc
rcrb
mov
decl
sub
pop
nop
mov
xor
jnp
call
push
or
xchg
cs
andl
cmpsl
aad
ss
lods
cmp
cmpsl
push
sbb
lods
shll
shll
pop
in
push
cmp
addr16
or
jbe
adc
roll
cmpsb
xor
je
imul
out
lds
push
lods
loopne
jle
mov
sub
cwtl
fimuls
pop
xor
out
fsub
mov
sub
int3
shrl
inc
bound
dec
cli
mov
sbb
cwtl
popf
imul
inc
movsl
stos
sub
mov
xchg
mov
test
xchg
jnp
or
or
hlt
int
cmp
sub
jno
add
mov
clc
xor
push
mov
xor
jecxz
push
adc
push
inc
sbb
and
pop
adc
adc
int
cli
mov
dec
mov
jb
sub
push
and
insl
addr16
aam
dec
out
lahf
insl
sub
cld
subl
xchg
sub
scas
dec
lds
xchg
lods
clc
pop
daa
adc
addb
enter
aad
mov
lahf
adc
cltd
inc
jb
iret
lahf
mov
stos
and
loop
lea
repz
sub
push
cmpsl
dec
pop
js
hlt
test
ljmp
xor
pop
subb
and
push
push
inc
or
lods
pop
fldenv
xorb
mov
jg
cmp
jp
push
stos
push
sub
mov
xor
sub
hlt
mov
xor
or
push
out
push
fcomi
repnz
push
cld
mov
mov
add
sub
push
imul
out
test
push
stos
lock
push
cld
mov
mov
mov
aam
cli
fsub
nop
inc
xsha1
cmpsb
dec
lahf
ret
aas
adc
insl
mov
aas
jl
sbb
add
jae
out
test
pop
push
and
rcl
xchg
ret
mov
dec
ja
mov
pop
cmpsl
iret
lret
add
and
push
dec
fistps
cmpb
out
scas
aas
pushl
aad
vmwrite
scas
jp
push
addr16
mov
mov
lds
mov
ds
das
push
pop
sub
inc
mov
add
les
bound
cs
mov
lahf
pop
push
and
inc
xor
loope
sub
es
pop
shrb
adc
jbe
popa
fcompl
call
fisubs
flds
adc
sarb
inc
push
test
movsl
xor
adc
fdivs
cs
mov
enter
push
pop
lods
cmp
pop
mov
das
push
or
jge
adc
xchg
or
and
pop
adc
iret
std
bound
fsubr
lods
dec
popa
mov
adc
adc
sub
or
aaa
not
xchg
out
pop
movsb
sub
pop
cmpsl
repz
xchg
in
cmpsb
push
dec
arpl
lahf
pop
mov
popa
out
cmp
push
adc
push
sbb
xchg
repz
jo
dec
jmp
out
dec
fst
int
arpl
stc
sub
pop
sbb
dec
aad
cli
dec
or
sbb
add
loop
ret
mov
cmpsl
adc
pusha
add
push
adc
jg
adc
and
cld
mov
sub
push
adc
push
adc
or
jge
adc
inc
lret
repnz
mov
fildll
jb
cmp
sbb
cmp
sbb
jmp
push
xlat
sub
and
dec
xor
sbb
cmp
enter
bound
shlb
es
sti
cmp
mov
push
ds
dec
jo
stos
mov
push
adc
inc
or
testl
push
adc
adc
xchg
add
ljmp
mov
addr16
out
inc
pop
mov
pop
test
repnz
mov
sub
filds
xchg
jnp
cwtl
enter
lret
lahf
mov
imul
enter
sub
adc
push
int3
lahf
lsl
cmp
or
sub
test
inc
and
push
mov
repnz
push
cld
xchg
mov
pusha
dec
jne
mov
lea
mov
fldenv
adc
dec
pop
js
jp
cmp
and
pop
jge
adc
add
roll
mov
fldenv
adc
dec
pop
js
jp
add
and
push
jge
adc
or
loope
lea
mov
fldenv
adc
dec
adc
lcall
idivb
or
mov
and
push
cmpsl
dec
repz
push
hlt
lahf
paddsb
or
mov
push
xor
jo
add
xchg
cmp
push
lcall
clc
or
mov
imul
nop
and
jmp
in
pop
or
mov
mov
cmpsb
adc
sbb
cmp
mov
pop
scas
push
filds
pop
mov
inc
jae
mov
roll
inc
lea
xchg
pop
and
bound
inc
clc
mov
cli
dec
xor
push
adc
xchg
outsb
aad
add
xchg
nop
push
mov
adc
push
cld
adcl
push
adc
in
insb
jl
adc
insl
adc
cmpsl
dec
sahf
mov
jl
fadds
jmp
fwait
cmp
push
adc
int
push
lret
test
lods
pop
icebp
xor
into
sahf
aas
mov
stc
jmp
adc
imul
cmp
adc
mov
sbb
push
pop
cmp
scas
or
leave
ret
xchg
push
test
lods
sub
adc
fisttps
inc
repnz
adc
sar
lock
cmp
stc
fistl
fldl
mov
cmp
repz
sbb
sbb
ret
and
sub
sahf
aad
jg
aam
jae
jecxz
cltd
and
xchg
outsl
mov
in
and
fiaddl
dec
xor
mov
push
add
xor
jns
aas
les
cmp
dec
push
stos
xchg
fs
push
adc
sub
mov
mov
sarb
cmp
add
das
es
lock
adc
add
mov
out
mov
push
repz
adc
cmpsl
pusha
mov
mov
mov
sbb
pop
mov
xchg
fcoms
ja
vmwrite
sbb
jae
add
xchg
mov
xor
or
mov
cli
xor
out
scas
add
loop
sub
jmp
dec
sub
scas
jbe
in
add
shl
and
leave
pop
adc
adc
inc
xorb
push
jmp
call
add
daa
iret
ja
xchg
adc
inc
sti
add
and
and
or
iret
jns
imul
jmp
mov
popfw
aam
mov
fidivrs
lret
add
nop
jmp
add
push
adc
or
sbb
lcall
psubq
mov
jmp
loop
iret
enter
lcall
sbb
push
adc
adc
mov
dec
cltd
push
shlb
dec
jnp
ret
out
fdivp
mov
arpl
or
ret
sti
stc
cld
push
iret
pop
es
subb
or
mov
jb
xchg
or
rolb
jge
jo
adc
aad
aam
into
jo
fdivrl
lret
shll
repz
or
fsubrs
enter
pop
int
pop
stc
pop
adc
mov
push
roll
mov
sub
pop
lock
pop
mov
and
push
adc
or
sub
pusha
dec
push
aaa
popf
ret
cmp
das
lds
push
xchg
and
push
ret
mov
xor
sub
mov
repnz
gs
push
pop
test
sbb
push
adc
or
sub
pusha
shrl
push
adc
mov
pop
adc
xchg
xchg
fidivrs
les
fwait
icebp
das
cmp
push
mov
aam
push
mov
ss
sbb
popf
outsb
sub
faddl
adc
push
cwtl
test
test
cs
push
cmpsl
out
mov
pop
adc
cmp
adc
sub
movsl
inc
inc
cltd
dec
push
xlat
fists
push
cltd
shll
ss
fidivrl
ud0
icebp
dec
inc
push
ficoml
stos
je
add
sbb
nop
jge
adc
ror
cmp
cs
push
clc
jae
adc
outsb
pop
pop
sub
push
test
out
fdivl
and
jp
adc
scas
dec
test
push
outsb
pop
ret
push
xchg
adc
inc
and
push
adc
jb
jp
adc
inc
sarl
pop
daa
pusha
sbb
jp
adc
or
jb
jnp
adc
inc
xor
pop
out
loopne
pop
adc
icebp
fcomi
lds
adc
xchg
push
add
adc
inc
adc
mov
subb
fsubrp
cld
pusha
jns
ret
subb
xchg
mov
sub
clc
mov
sbb
arpl
sbb
mov
int3
imul
pop
push
or
push
adc
mov
mov
xor
sub
or
adc
jne
jge
mov
data16
stos
inc
mov
outsl
out
or
rcll
push
adc
mov
scas
les
adc
sahf
jno
out
aas
adc
mov
push
aaa
push
add
mov
add
adc
adc
xorb
test
push
daa
js
mov
adc
mov
aam
enter
mov
adc
insb
inc
sub
sub
mov
pop
jno
jmp
leave
cwtl
cmp
js
and
pop
adc
cwtl
andb
icebp
lcall
loopne
mov
cld
add
push
adc
adc
cmpb
pop
adc
pop
movsl
in
movsb
add
push
adc
cmp
adc
mov
sub
dec
add
push
movsb
repz
pop
jnp
adc
ret
jle
sbb
cmpsb
out
sub
shll
mov
push
call
mov
scas
popf
incb
mov
inc
mov
ret
daa
fmuls
stos
lcall
insb
mov
and
aam
mov
mov
in
cmp
jno
push
pop
xchg
add
in
inc
pop
lahf
dec
rclb
fldl
adc
inc
add
adc
lods
fildl
sub
bound
aaa
jb
adc
adc
jp
into
pushf
les
adc
cmp
imulb
sbb
mov
mov
fldl
adc
mov
jo
adc
push
aad
mov
jne
push
mov
in
jae
adc
jo
push
push
jp
adc
icebp
pop
and
outsl
mov
jmp
orl
jp
xlat
mov
dec
pop
jns
fidivrs
or
je
adc
xchg
pop
mov
std
and
fwait
scas
xor
dec
add
sub
mov
or
ret
push
sub
cmp
push
ret
sti
dec
jo
adc
dec
xor
imul
or
push
and
lods
mov
adc
stc
pop
adc
pop
jns
mov
jo
adc
rcrl
adc
into
pop
and
inc
mov
sub
adc
mov
push
adc
out
and
xor
jecxz
mov
into
es
dec
aad
dec
dec
push
stos
andb
mov
stos
sub
pop
jnp
jle
aam
xor
mov
pop
xor
push
stos
push
add
cs
sahf
mov
repz
and
cmc
mov
popa
inc
lea
mov
negb
lods
std
inc
mov
mov
subb
mov
or
jge
adc
push
adc
adc
cltd
dec
jb
iret
lahf
mov
jno
in
push
cmpsl
dec
jo
push
adc
cli
add
es
ret
mov
jae
daa
mov
out
pop
jecxz
push
push
shrl
adc
popa
adc
mov
imul
fdivrl
imul
ja
popf
add
leave
pop
adc
filds
stos
fmull
or
cmp
jge
adc
jnp
jno
mov
sbb
daa
adc
cmp
arpl
xchg
in
movsb
scas
mov
pop
stos
push
stos
scas
sub
fidivl
lret
mov
xchg
dec
adc
imul
call
lahf
dec
mov
mov
mov
test
iret
repz
loop
sub
mov
stos
push
mov
push
repnz
or
test
nop
shrl
jmp
out
aam
pminsw
aaa
sahf
stc
cmp
ficompl
add
cli
add
aam
test
pop
mov
pop
xchg
sub
adc
push
adc
insl
imul
pop
adc
dec
leave
int3
iret
xlat
xchg
leave
movsb
sub
gs
xchg
pop
inc
in
mov
jl
and
ret
mov
popf
jbe
pop
in
insl
inc
pop
icebp
jg
pushl
xor
xor
shlb
xlat
loopne
sub
popa
xor
adc
or
jne
daa
dec
hlt
pop
adc
mov
cmp
imul
mov
sti
test
xor
mov
call
cmp
mov
xor
ret
ficoms
sbb
test
or
lcall
ret
int3
inc
push
out
adc
or
dec
sbb
test
aad
addr16
int
mov
xor
mov
insl
jo
loope
pop
xor
arpl
mov
dec
sbb
mov
arpl
mov
jae
push
sbb
mov
pushf
cmp
xchg
inc
xor
mov
cltd
mov
mov
sub
sbb
leave
xor
stos
jp
lahf
adc
cmp
rclb
pop
pop
outsl
xchg
push
sarb
clc
outsl
mov
push
cmp
movsb
or
out
cmc
movsb
jp
jae
mov
dec
into
xchg
jmp
jae
stc
dec
xor
inc
imul
inc
data16
mov
add
lcall
and
jg
mov
inc
clc
ret
pop
mov
dec
mov
sub
mov
or
iret
bound
xchg
sarl
mov
insl
inc
rorl
aad
ljmp
imul
sti
ja
xlat
xor
dec
pushf
fxam
jp
lods
dec
cmpsb
xor
mov
sub
pop
aad
push
adc
testl
idivb
add
xor
jle
out
push
dec
sbb
ret
mov
xchg
sti
mov
cli
hlt
call
inc
fucomp
dec
scas
push
arpl
jb
sub
out
and
mov
mov
out
cmp
xor
stos
outsb
pop
sub
rorl
js
jl
pop
dec
clc
mov
xor
lds
adc
js
mov
in
inc
test
sahf
insl
idivb
sbb
pusha
jnp
mov
add
mov
mov
and
sti
mov
fmul
sbb
jns
and
adc
jo
sub
xlat
movsb
and
push
mov
and
cmp
pusha
hlt
ljmp
dec
mov
mov
mov
ret
gs
mov
and
push
ja
popf
add
leave
pop
adc
filds
stos
fmull
or
cmp
jge
adc
jnp
jno
mov
in
jmp
adc
cmp
arpl
xchg
in
movsb
scas
mov
cmp
in
sub
xchg
mov
push
sbb
lret
lahf
idivl
dec
lds
xchg
and
pop
adc
inc
lock
sbb
int3
outsl
insb
mov
push
adc
add
int3
cmp
push
shlb
into
mov
inc
mov
iret
iret
mov
dec
movsb
pop
movsb
mov
xchg
mov
mov
icebp
mov
or
jne
mov
ds
inc
xlat
inc
sbb
and
pop
adc
cmp
inc
add
inc
fadd
orb
out
jge
adc
pop
hlt
mov
imul
call
stos
popa
xchg
movsb
mov
push
and
imul
test
dec
fcmove
mov
arpl
pushf
stc
fldenv
push
cmp
xadd
out
int3
or
leave
pop
adc
popa
xchg
in
dec
push
inc
xor
orl
pop
test
jns
inc
mov
aad
add
sub
push
mov
mov
mov
testl
push
sub
cmp
gs
data16
xchg
jge
adc
adc
mov
dec
cmp
test
pushf
jae
rorb
jb
push
xlat
scas
daa
mov
push
adc
jmp
cmp
adc
or
pop
dec
mov
inc
mov
stos
insl
inc
ljmp
jge
adc
test
mov
or
cmp
xchg
js
and
out
xchg
adcl
sub
push
hlt
push
dec
cmp
iret
sbb
push
mov
dec
fdivp
and
xchg
pusha
lret
mov
push
mov
pop
lods
nop
mov
mov
popf
lret
adc
loope
jp
jns
and
inc
ljmp
xchg
ljmp
add
and
ja
nop
cmp
pop
shll
push
fnstsw
sbb
cmp
dec
xor
push
mov
lahf
test
std
ss
jne
cs
xor
stos
push
adc
mov
push
lahf
mov
jbe
in
lods
int
jecxz
pop
pmaddwd
ds
out
mov
inc
xor
popa
loop
scas
fistpl
into
aas
and
push
dec
ror
jb
push
or
leave
pop
adc
cmp
decl
je
cld
pop
jo
sbb
mov
stc
xor
cmp
push
sahf
sbb
mov
mov
xchg
jo
cltd
mov
gs
fwait
mov
pop
int
adc
jg
dec
jle
or
lahf
jge,pt
call
sarb
mov
out
test
daa
lods
jae
dec
jge
mov
cwtl
in
loop
xchg
xor
shll
cmp
mov
out
enter
mov
mov
mov
cmp
mov
push
cmpsb
inc
lea
mov
add
ficoml
or
mov
dec
jae
iret
pusha
dec
dec
ja
cmp
dec
mov
mov
inc
cwtl
or
mov
roll
mov
sub
in
imul
out
fwait
in
jmp
cmp
xor
push
arpl
ror
pop
mov
inc
cmp
or
cmp
js
stos
sbb
shlb
pop
icebp
daa
sbb
inc
inc
movsb
dec
sahf
mov
int3
iret
xchg
int3
adc
jns
add
sub
push
imul
out
clc
add
xor
jnp
mov
popa
cwtl
iret
dec
pop
inc
push
jno
ret
pushf
pop
dec
xor
push
stos
cmpsb
mov
xchg
add
ret
xchg
cmp
fdivrl
push
jge
mulb
sub
gs
mov
fucomip
mov
dec
adc
jle
cld
xor
cld
pop
mov
fidivrs
stc
sub
mov
out
and
sbb
arpl
das
pop
insb
test
and
xor
and
xor
sahf
mov
out
sbb
jae
dec
addr16
jle
call
sbb
out
inc
and
ds
imul
call
fs
adc
lcall
adc
pop
repnz
push
inc
outsb
mov
sub
leave
ret
xor
test
fucom
out
push
jp,pn
mov
or
adc
jne
cld
pop
rcr
or
mov
sbb
scas
movsb
ficompl
js
pop
adc
dec
test
inc
ja
insl
sub
sbb
fisttps
sub
rcrb
xlat
scas
lahf
inc
inc
pop
fisttpl
cmp
aaa
popf
or
jns
add
movsb
mov
nop
mov
cmp
or
xor
mov
sub
arpl
push
xor
aas
int3
mov
cmp
sbb
data16
adc
cs
popa
call
sbb
mov
pop
or
xlat
loop
test
mov
fcoml
sti
fcoms
mov
pop
pushf
dec
mov
shl
jb
push
xchg
fsubr
sbb
jb
repnz
or
stos
hlt
arpl
mov
pop
xor
wrmsr
mov
bound
loop
pop
aam
xor
popf
cld
and
mov
cmp
push
repnz
xorl
out
test
int3
aaa
leave
mov
add
dec
insl
jns
addr16
je
or
and
jge
dec
mov
jge
adc
call
xlat
add
mov
loope
mov
xchg
adcl
out
out
xor
stc
cmc
pop
lret
es
sub
cs
movsl
ret
hlt
ret
stos
cmp
add
mov
ds
adc
push
cmp
cmp
xchg
ljmp
lock
cltd
out
cmp
mov
jae
and
add
das
in
mov
xchg
lods
mov
xor
xor
fmul
sahf
aas
stc
add
and
out
cwtl
mov
cmp
dec
jo
mov
inc
jecxz
nop
outsb
dec
jne
jmp
push
sahf
cmpsl
loopne
pop
loope
jp
divb
pop
cmp
mov
jo
cwtl
loopne
xchg
popa
or
andl
fwait
aad
mov
fdivrl
mov
inc
mov
mov
dec
outsb
aad
sub
or
fsubr
clc
sub
ss
addb
daa
xchg
inc
mov
mov
cmp
in
push
jbe
pop
fucomip
cmp
std
pop
ljmp
mov
adc
aad
push
jmp
loope
insl
mov
arpl
pop
xor
cmpsb
add
popa
lods
pop
int3
pop
xor
inc
popa
pusha
shll
xor
sbb
cmp
mov
push
and
pop
adc
push
pusha
roll
iret
enter
aad
push
stos
sub
ds
mov
inc
sbb
xchg
movsb
hlt
mov
xchg
shrb
cmp
jnp
or
dec
subl
sahf
mov
push
jge,pt
and
push
and
sbb
jg
jge
adc
in
mov
jb
das
inc
out
nop
push
pop
mov
lea
jle
out
inc
stos
mov
in
and
push
adc
lcall
adc
push
cli
ret
scas
xchg
shll
js
push
aaa
movsb
scas
repnz
and
cmp
and
cmpsb
movsl
mov
fs
jae
les
mov
xor
jp
push
ret
cmp
mov
push
and
loop
iret
push
aaa
cmpsl
adc
mov
xor
test
push
add
cmp
clc
add
aas
jle
test
and
mov
in
movsl
scas
mov
test
stos
push
mov
pop
jb
jle
cmp
xchg
imul
sbb
dec
mov
or
leave
pop
adc
scas
and
xor
lock
adc
sub
xor
pop
jmp
scas
aam
push
xor
mov
rcr
push
add
push
out
push
push
xor
dec
sub
xchg
dec
xor
lea
subl
loopne
add
mov
gs
mov
inc
imul
stos
jno
and
ret
stc
fsubr
jmp
xchg
cs
js
stos
lret
sub
adc
jecxz
cltd
clc
mov
lcall
outsl
xchg
pop
inc
stos
stc
data16
popa
pop
std
stos
push
xor
xchg
rclb
scas
dec
sbb
xorl
fprem
lret
mov
push
mov
push
mov
out
ret
mov
xchg
add
adc
dec
negb
xor
xchg
mov
inc
sbb
movsb
adc
dec
xor
pop
or
inc
dec
or
stos
xor
mov
and
sti
pop
pop
and
ss
jns
outsb
enter
dec
inc
mov
rol
cmp
inc
mov
xorb
sbb
mov
push
out
pop
js
cmpsl
das
pusha
arpl
inc
cltd
ss
inc
pop
ja
xchg
repz
testl
jns
cltd
push
fistpl
xchg
xchg
bswap
iret
loope
add
scas
loop
add
jno
dec
pop
andl
fwait
in
inc
inc
jle
xlat
and
mov
cmp
xor
inc
outsl
addr16
sar
mov
jmp
out
or
lahf
rcrl
mov
sbb
mov
xor
pop
dec
scas
inc
push
pusha
sbb
mov
pushf
cmp
inc
mov
inc
sbb
bound
mov
insl
mov
dec
int
sti
mov
ds
dec
inc
push
sub
icebp
adc
into
pop
mov
add
je
ss
call
push
and
xchg
pop
mov
cmp
add
xchg
cld
fwait
hlt
in
adc
clc
stos
pushf
ljmp
pop
lds
pop
push
stos
mov
test
in
cmc
les
xor
ss
mov
xor
fistps
mov
adc
cmpsl
in
daa
out
and
cmpl
cs
mov
aad
fsubp
mov
xchg
cmp
jo
jmp
lret
stos
jg
shrl
fistl
shlb
and
mov
fwait
sbb
or
in
mov
push
jg
frstor
mov
aad
shlb
lods
pusha
movsb
fwait
mov
inc
sbb
dec
add
pop
dec
mov
sbb
push
cltd
xchg
inc
push
sub
xchg
push
mov
mov
sbb
jge
hlt
arpl
xchg
jp
ljmp
bound
inc
imulb
mov
icebp
arpl
repnz
nop
push
es
jl
jle
test
xchg
mov
or
jnp
add
mov
mov
cld
pop
push
es
pop
jbe
mov
adc
addr16
mov
stos
jg
cmp
cmp
fcompl
and
ret
ljmp
cmp
pop
in
pop
in
dec
cmpsb
shlb
xchg
push
push
lods
add
cltd
ss
sahf
fs
fistpll
mov
jae
loopne
std
inc
fs
xor
mov
xchg
cltd
mov
xchg
call
xor
movsb
mov
in
sub
sub
test
and
stos
jge
hlt
xchg
fsubrs
xor
jno
fsubr
pop
mov
xchg
outsl
xchg
sbb
bound
jno
loop
aam
fdiv
stc
test
insb
dec
and
jo
dec
pop
jns
lret
xchg
mov
repz
inc
add
lock
enter
or
les
adcb
out
mov
lret
xchg
arpl
push
ja
leave
and
inc
push
sub
sbb
pop
add
inc
jno
jae
mov
insl
popa
sub
inc
lret
mov
test
test
jg
clc
dec
sbb
cmc
xor
xor
jno
mov
loope
jb
lods
cmp
jne
pop
sub
dec
mov
inc
adc
movsl
push
push
mov
clc
int3
stos
nop
loope
testl
shrb
xchg
outsl
or
lods
push
jns
mov
rcrw
pushf
pop
jns
int3
push
push
stos
and
mov
ljmp
and
test
movsl
mov
push
lods
push
shlb
and
loopne
dec
imulb
rep
push
mov
and
cmpsl
cwtl
sub
call
lods
les
roll
test
lret
lea
in
aas
sub
subl
insb
lds
xor
mov
repnz
cmpl
imulb
stc
fwait
mov
mov
stos
shlb
jecxz
adc
cmpsl
lret
sbb
jl
jp
xchg
xchg
fcomip
push
sbb
stos
cmp
movsb
xchg
imul
push
adc
dec
dec
cs
cltd
in
push
push
jne
cs
fcomi
arpl
sahf
mov
aaa
push
imul
sub
adc
andl
sti
lods
pop
test
shr
adc
sbb
and
ja
mov
scas
fmuls
or
cmc
mov
inc
pushf
gs
packuswb
xor
imul
dec
outsb
sbb
mov
sub
adc
stos
adc
iret
push
ss
xchg
or
dec
xor
mov
insb
fsubrl
sahf
ret
xlat
test
dec
jo
and
iret
adc
jle
jg
adc
in
shrl
pop
adc
test
iret
ja
or
push
addr16
add
cmp
daa
mov
adc
lea
out
daa
jae
addb
gs
lds
test
cmp
incl
hlt
pop
dec
test
enter
loope
mov
stos
test
mov
shlb
add
inc
fdivrl
xchg
pop
hlt
call
repnz
in
stos
or
push
ret
push
dec
enter
jl
aam
ds
inc
dec
adc
ljmp
fwait
and
mov
int3
insl
sub
pushf
or
xchg
mov
add
int
xor
adc
test
data16
push
mov
add
cmp
enter
or
stos
fistps
sbb
add
push
jns
sub
xchg
lds
push
mov
sbb
mov
mov
sub
in
push
cs
lds
mov
into
frstor
mov
loop
in
clc
or
cmp
outsl
cmp
push
xlat
insl
inc
outsb
mov
mov
cmpsb
adc
pusha
dec
jno
and
in
scas
lds
cld
ja
movsb
nop
ret
push
ja
subl
sar
mov
movsl
xchg
imulb
andb
sti
stos
psubd
test
lcall
in
adc
int3
clc
aas
cmp
fisubs
lcall
pop
jg
or
push
and
add
es
vphsubdq
lods
add
sbb
pop
jp
xor
or
lret
in
or
scas
stos
dec
into
xchg
jecxz,pn
sub
push
jge
clc
mov
aas
mov
mov
bnd
cltd
nop
cmp
enter
xor
fnstenv
lcall
jne
sub
call
inc
xor
sbb
add
xchg
shll
jl
add
push
adc
in
test
jne
aad
leave
pop
adc
mov
lahf
movb
imul
jbe
adc
aad
or
rorl
xchg
mov
add
push
push
jg
pushf
xor
mov
fs
dec
mov
aaa
enter
repz
ds
sub
push
adc
push
jae
dec
call
imul
add
adcl
fildll
mov
insb
std
and
std
inc
dec
outsl
sti
sarl
in
push
adc
std
sahf
fsubrs
inc
es
add
or
popa
cmp
shr
lret
inc
rep
adc
fdivrs
adc
lret
or
pop
mov
test
inc
adc
dec
push
in
add
jo
adc
mov
and
mov
xchg
add
jle
adc
rolb
jno
ret
cld
divb
outsb
outsl
sub
shrb
imul
or
sbb
mov
hlt
in
push
adc
xchg
sbb
sbb
push
fldcw
xor
jne
jno
ds
std
shlb
out
xor
cmp
jle
adc
xchg
insb
and
ljmp
movsb
add
les
addb
push
aad
sub
outsl
in
sub
inc
xchg
dec
add
pop
inc
xchg
add
mov
add
inc
shrl
mov
adc
pop
ljmp
rolb
mov
aad
stos
mov
lret
inc
jp
sbb
sbb
or
pop
divb
lret
adc
adc
jle
adc
lar
cmp
xor
pop
divb
lret
out
inc
stc
jno
pop
ret
orl
out
lahf
insl
adc
sbb
lea
mov
sub
addr16
arpl
mov
xor
mov
movsb
mov
pop
adc
stos
and
inc
mov
ret
and
push
adc
ljmp
add
lret
jle
adc
or
dec
sahf
mov
std
mov
xor
mov
cs
or
scas
jmp
mov
ret
orl
jns
lahf
xor
jg
adc
pop
push
add
add
inc
dec
xor
mov
adc
push
dec
subl
imul
push
ret
push
cmpsl
mov
push
jns
movb
sub
mov
orb
push
stos
xlat
insl
pop
sub
pop
insl
idivb
sbb
testl
lret
aaa
mov
mov
lahf
aam
push
adc
add
inc
gs
dec
xchg
sub
xchg
movsl
shll
push
cmpsl
dec
adc
jmp
roll
adc
xchg
fsts
movsb
push
lods
pop
xchg
push
lea
jmp
adc
jle
adc
or
addr16
mov
scas
pop
sbb
test
inc
mov
dec
insl
movb
leave
or
int
sub
fisubrl
sbb
pusha
jle
adc
fwait
sbb
rclb
addr16
xchg
jbe
jle
adc
jecxz
dec
push
js
imul
inc
fimuls
mov
mov
int3
jle
adc
pusha
mov
pushf
lahf
push
jle
adc
sub
andb
pushl
mov
nop
or
mov
xlat
scas
dec
jle
adc
push
adc
mov
add
push
adc
imul
add
roll
cmc
xchg
enter
mov
das
fistpl
shlb
push
nop
add
mov
jmp
push
adc
in
pushf
jno
stos
movhps
pushf
sbb
addr16
pop
adc
xor
push
adc
filds
pop
mov
mov
sub
mov
add
daa
iret
mov
xchg
ret
lds
jle
adc
xchg
jo
mov
fstpl
mov
sahf
imul
inc
movsl
rorl
out
adc
push
adc
mov
iret
ss
clc
mov
int
add
dec
fmull
or
adc
cmp
inc
test
inc
adc
dec
push
loope
xchg
das
add
push
adc
cltd
pop
mov
adc
jmp
or
data16
cld
iret
mov
je
mov
inc
cmp
gs
js
int3
jle
adc
orb
fs
aam
push
adc
pop
jo
out
bound
pop
into
mov
sub
mov
push
adc
jmp
loop
sbb
inc
cmp
push
je
push
adc
xor
mov
mov
jne
sub
je
adc
adc
mov
and
mov
arpl
ret
add
push
sbb
aaa
movsl
mov
jmp
pop
mov
daa
push
pusha
jle
adc
xchg
push
pop
test
repnz
jne
dec
inc
jo
push
adc
ljmp
push
cmp
sbb
pusha
outsb
lock
add
ja
jb
mov
inc
fildll
adc
insl
fwait
pop
sbb
adc
or
out
sub
lahf
enter
sbb
ret
push
sbb
or
cli
lods
mov
loopne
xchg
sub
inc
mov
lock
push
adc
ja
addb
jb
inc
loope
pop
scas
push
stos
and
inc
mov
ret
popw
outsb
dec
inc
les
out
fucom
and
jae
adc
adc
sub
dec
aad
and
and
sbb
sbb
xchg
in
push
adc
cwtl
jle
in
push
lods
sub
jbe
test
gs
popa
mov
xor
clc
jge
adc
push
loope
in
stos
push
stos
sub
pop
mov
add
pop
adc
inc
add
pusha
mov
jne
cmp
iret
xchg
sub
das
push
test
cmp
jge
adc
divb
push
gs
xchg
xchg
sub
fadds
push
lods
dec
cmp
ret
test
xor
xor
mov
and
imul
cmpsl
push
stos
push
test
aad
jae
fdivl
pop
sub
push
adc
sahf
push
inc
xor
aad
and
pop
adc
icebp
sbb
pop
mov
xor
adc
jae
jae
add
bnd
lret
or
pop
adc
adc
sbb
pop
adc
jl
mov
push
test
dec
clc
fildll
popa
ret
test
mov
inc
lea
and
fs
xchg
sub
ds
fsubs
leave
pop
mov
mov
or
mov
mov
push
adc
movsb
sub
jg
adc
xchg
jle
pop
and
push
adc
insl
lahf
ret
sbb
inc
flds
adc
movsl
jmp
adc
add
lds
ffreep
mov
es
movsb
dec
in
ret
icebp
or
repnz
add
cli
or
push
add
pushf
dec
mov
cs
sub
insb
push
sub
push
adc
subl
insl
loope
mov
jg
adc
loopne
std
clc
daa
jne
jne
push
flds
adc
xchg
add
push
adc
data16
cmp
inc
jo
stc
inc
add
hlt
jge
adc
jno
mov
aad
jle
adc
insl
adc
test
adc
in
cwtl
jno
scas
movhps
adc
cmp
sbb
push
mov
add
idivb
mov
aas
outsb
iret
and
ja
lods
adc
inc
push
in
movsb
pop
into
pop
out
mov
push
or
pop
aas
add
fdivs
adc
cmpsl
mov
aam
jns
dec
add
pop
jmp
cli
mov
jo
adc
out
xor
pop
jae
scas
inc
addl
insb
xchg
mov
rol
push
adc
adc
sbb
jne
adc
gs
enter
shld
jle
arpl
fistpl
jmp
dec
fistpl
cli
mov
ljmp
aas
push
or
pop
ret
xchg
mov
inc
push
fidivrl
out
add
adc
cmp
aaa
push
inc
inc
add
sub
loope
pop
dec
fs
in
pop
cmc
shr
cmp
add
das
fiadds
xchg
fcomps
les
push
push
sbb
daa
aas
lods
shll
fnsave
rcll
and
mov
or
call
out
adc
je
push
lods
adc
and
mov
sti
dec
mov
mov
sub
xchg
mov
adcb
and
or
adc
jne
arpl
cmp
sub
fsub
inc
adc
mov
fsave
sar
call
stc
sbb
push
stos
or
push
dec
jg
cs
mov
ljmp
inc
mov
int
adc
cmp
xor
enter
cli
insl
jae
loopne
sub
aad
pop
sub
adc
sub
sbb
pop
mov
mov
xor
jo
mov
jg
adc
push
adc
mov
jl
adc
adc
fidivs
xchg
fwait
inc
inc
dec
lods
pop
les
test
loop
mov
push
adc
notl
or
xchg
stc
adc
mov
imul
fdivrl
xchg
push
adc
cmp
pop
iret
test
mov
lock
out
clc
sub
gs
scas
push
gs
pop
push
pop
and
test
int
add
xchg
stos
int
push
gs
push
add
adc
jecxz
or
and
arpl
cld
call
movsl
and
cmp
stos
push
arpl
outsl
mov
repz
sub
pop
mov
push
scas
push
sub
sahf
mov
fistpll
xchg
pop
insl
sub
repnz
fbstp
and
lds
or
and
inc
insl
add
mov
or
sbb
stos
fisttps
jge
mov
mov
sub
jae
mov
fsubr
pop
xchg
xchg
push
pop
iret
or
push
jb
lcall
pop
fimull
xor
cmp
scas
pop
mov
ret
imul
lods
les
lods
hlt
push
jmp
mov
ret
rcrb
mov
out
jne
mov
insb
pop
and
or
fisttps
out
sbb
xlat
push
sub
push
mov
test
pop
mov
xor
push
loope
push
xchg
int3
jl
es
inc
stos
add
mov
adc
push
dec
sahf
clc
mov
sti
fimull
mov
out
jo
push
jmp
xor
pop
jmp
sbb
mov
mov
add
jne
lea
mov
aas
jmp
sub
sub
pop
hlt
jmp
inc
lds
xor
in
inc
pop
mov
sub
jge
jb
mov
arpl
inc
pusha
mov
mov
jl
xor
adc
loope
in
decl
adc
sbb
mov
push
or
xor
adc
jbe
mov
int
jnp
adc
mov
xchg
test
daa
sbb
notb
arpl
ja
push
mov
xchg
out
imul
out
iret
cmp
mov
xorb
sub
fldt
inc
xchg
arpl
jecxz
mov
pop
xchg
lods
cmpsb
loop
pop
mov
xchg
adc
adc
sub
lock
xchg
mov
stos
xchg
mov
addr16
jmp
aad
or
jg
push
daa
lods
outsb
out
jae
cmp
pop
adc
into
lret
inc
divb
xchg
into
sbb
aam
mov
push
aam
faddl
mov
in
ds
pop
add
mov
xchg
or
aas
pop
mov
xchg
stos
jp
mov
push
inc
adc
fucomp
lahf
mov
inc
dec
stc
jae
sub
inc
mov
inc
lcall
and
or
and
push
sub
movsl
lds
fwait
gs
insb
cmp
lods
shl
or
xor
push
fucomip
pop
daa
aaa
fstpt
cmp
mov
mov
push
jb
and
sub
push
faddl
inc
pop
jl
mulb
dec
and
fstpt
xchg
pop
pop
pop
sub
test
adc
sbb
loope
lahf
mov
mov
daa
fstl
push
fildl
lea
lods
xchg
out
push
cld
xchg
out
pop
cmpsl
cmpsl
lock
test
fidivrl
or
mov
push
cmp
stos
and
mov
jl
fdivs
ds
inc
fidivrs
inc
xor
push
pushf
mov
pop
mov
es
xor
xor
pop
lahf
pop
jle
cli
sbb
jg
mov
xchg
and
popa
or
cmp
idivl
daa
fwait
xchg
addb
push
fldl
mov
subb
pop
gs
mov
daa
nop
shll
mov
rclb
das
frstor
pop
and
pop
aaa
cs
sahf
cmp
mov
mov
jmp
jne
add
jb
xor
adc
xchg
notl
sub
xchg
clc
test
mov
jno
popf
repz
xor
push
stos
push
fistps
sti
test
mov
iret
pop
inc
cmp
lods
arpl
xlat
cwtl
rolb
shrl
lods
shlb
fwait
rolb
out
daa
mov
sub
push
fcoms
test
rcrl
dec
jbe
lcall
mov
test
stos
fisttpll
loopne
sub
push
sub
stc
ret
xchg
sbb
push
jnp
mov
clc
sbb
outsb
sub
push
inc
cli
push
test
rcrb
adc
lret
adc
repnz
scas
sbb
dec
mov
pop
mov
sbb
cmc
xlat
jns
cld
outsl
leave
add
ja
stos
movsb
and
in
dec
push
rcrl
mov
cmpsb
sub
imul
mov
popf
pop
scas
xchg
xchg
in
into
dec
lods
test
das
es
push
aam
loope
rcrb
orb
clc
mov
out
in
idivl
adc
test
inc
ljmp
ficompl
lods
adc
pop
lds
imul
setnp
sbb
add
aad
pushl
sub
mov
sbb
and
fs
mov
sbb
sub
add
lods
xor
sbb
stos
mov
cmp
int
adc
fbld
xchg
or
dec
inc
and
push
das
xchg
pop
lods
inc
lods
jge
push
pusha
cmp
sub
lret
in
hlt
dec
add
xchg
push
sub
cmp
xor
mov
add
subl
mov
jo
leave
pop
adc
add
negb
mov
jecxz
shlb
mov
lock
mov
in
out
push
pop
aam
mov
fwait
movsb
pusha
sahf
adc
mov
jg
addb
insb
push
xor
inc
dec
pop
sbb
sahf
xchg
or
das
test
divb
shlb
sub
push
adc
or
mov
xchg
xor
jne
jno
cmp
sti
daa
and
xor
cld
adc
push
and
ret
dec
loop
iret
mov
lock
mov
test
testl
outsw
sbb
inc
pop
frstor
popa
addl
mov
push
movsb
rorl
dec
sahf
xor
and
adc
mov
ret
cwtl
fcoms
pushf
lret
lahf
mov
frstor
imul
xlat
pop
adc
faddl
inc
xor
xchg
orb
jb
inc
into
cmp
sub
jnp
gs
push
sub
add
and
jne
dec
push
sub
outsl
sub
sbb
ds
pushf
movhps
rcrb
daa
push
push
push
jl
xor
lea
xor
loopne
mov
test
pop
dec
cwtl
jb
test
push
and
cmp
movsl
arpl
mov
push
push
ret
sub
shll
iret
ja
add
hlt
mov
sbb
inc
or
mov
pop
cmp
test
rolb
repz
jae
arpl
xlat
insl
jnp
add
aad
xchg
fdivl
adc
hlt
call
mov
or
popf
imul
leave
mov
jp
fdivs
jne
mov
or
pop
movsl
iret
int
mov
stos
dec
jae
sub
andl
fs
inc
push
jo
lods
pop
mov
shll
out
fcompl
and
pop
adc
jno
gs
ja
lea
xor
dec
mov
push
int3
iret
jp
fists
sub
aad
loopne
push
test
sbb
jp
adc
es
inc
js
lods
mov
pop
xor
popa
andps
daa
popf
push
jge
add
xor
in
jne
add
mulb
and
dec
sbb
insb
pop
sub
out
test
fidivrl
vcvtps2pd
in
aad
pop
add
aad
mov
push
repnz
imul
repz
out
push
insl
mov
pop
mov
pop
mov
test
dec
in
jmp
sbb
clc
shl
mov
inc
aaa
or
in
incl
xlat
into
adc
xor
out
cmp
push
pop
jle
icebp
sub
mov
int3
sub
movups
leave
in
cmpsl
add
dec
push
stos
jnp
xor
sub
mov
mov
adc
insl
int
shlb
fiaddl
addr16
adc
std
cli
repz
fldcw
cmp
mov
xchg
fsubl
add
ret
jo
icebp
mov
inc
add
adc
mov
mov
stc
loopne
dec
enter
xor
add
notb
pop
pop
das
xor
in
out
loopne
jbe
push
and
add
mov
jns
loopne
dec
mov
out
jbe
add
nop
mov
daa
ret
int
and
mov
xchg
enter
dec
lret
ja
int3
cwtl
outsb
pop
arpl
ret
loope
int
sbb
gs
cs
mul
mov
daa
fxch
jae
and
rcrb
xor
sbb
mov
mov
ds
aam
fs
or
jl
cmp
pop
fdivp
ds
test
test
arpl
inc
imull
je
pop
addr16
stos
sub
bound
inc
iret
sti
mov
jmp
js
xor
sbb
xchg
insl
test
icebp
in
inc
imul
add
mov
movsb
pop
faddl
stos
outsb
add
mov
mov
aas
out
xchg
push
test
lahf
rcrb
ret
mulb
mov
pop
xchg
jo
rolb
add
mov
adc
ja
insl
sbb
pusha
rol
sub
adc
cld
push
xor
and
pop
adc
mov
dec
sbb
orl
or
push
adc
cwtl
xchg
inc
inc
cmpsb
dec
sahf
outsb
dec
sub
mov
lods
xchg
cmc
call
xchg
add
stos
push
daa
adc
add
test
insl
sbb
push
xor
aad
push
stos
xchg
in
scas
cmpsb
ret
paddb
and
gs
lea
mov
aad
shrl
add
dec
jbe
rorl
pop
xchg
pop
pop
mov
jns
cmp
sub
xor
out
push
cmp
mull
gs
test
jno
add
mov
pop
scas
push
and
jno
int
rolb
popf
fbstp
aas
lahf
pusha
sub
push
adc
lahf
and
pop
out
fsts
push
jg
popa
sub
push
adc
out
stc
jns
or
cmpsb
test
add
adc
adc
test
in
cmp
xlat
repz
adc
push
rclb
add
dec
jns
and
jae
into
adc
adc
cs
int3
dec
inc
outsb
loope
pop
xor
pop
test
jo
test
int
out
pop
xchg
in
mov
cmp
pop
lods
xchg
dec
sbb
mov
sbb
xchg
add
adc
loop
gs
pop
push
stos
push
and
lret
pop
xor
sbb
fnstsw
mov
imul
shlb
cmp
push
inc
push
es
mov
adc
push
in
and
jo
mov
addr16
lock
sub
addr16
sbbl
cmpsl
mov
insl
pop
jmp
push
adc
jle
sti
out
imul
jp
ja
xor
mov
in
outsb
mov
cs
mov
dec
cld
es
cli
daa
mov
adc
scas
call
ret
ljmp
sbb
and
mov
push
adc
xor
lret
stc
scas
push
gs
insb
dec
mov
loop
fldenv
in
dec
mov
fmuls
jg
cltd
adc
push
daa
inc
pop
xchg
jb
mov
imul
and
test
inc
mov
dec
pop
and
scas
push
mov
jnp
jmp
fwait
test
js
pop
pop
test
jmp
sub
fimull
xor
mov
sbb
pop
imull
movsl
sbb
push
xor
cmp
pop
movsl
ljmp
mov
lcall
jb
imul
xchg
mov
dec
mov
dec
js
ljmp
data16
fisubrs
or
push
adc
insl
jg
xchg
insl
fildl
pop
or
pop
pushf
xor
adc
xchg
xrstors
mov
outsb
inc
sbb
mov
stos
enter
test
fsubrs
jno
mov
ljmp
dec
mov
lcall
flds
daa
rcl
dec
int
or
cmp
mov
jmp
push
arpl
cmp
or
push
adc
jmp
loop
loopne
dec
cmp
cmp
clc
js
xor
aas
adc
data16
scas
int3
jle
adc
pop
aaa
lcall
jne
mov
mov
shll
arpl
pop
mov
push
adc
sbb
jg
mov
push
xchg
xor
push
int3
xchg
clc
idiv
jecxz
or
fs
lods
divl
pop
push
jae
inc
dec
pop
in
call
lock
push
and
push
imul
add
ret
jge
lret
cli
xchg
out
test
mov
repnz
push
and
pop
lret
sahf
jge,pt
sbb
mov
push
push
stos
inc
icebp
lock
cmpsl
sub
or
sbb
pusha
mov
and
lds
cmp
mov
push
fists
mov
add
xchg
mov
xor
mov
cs
jg
mov
adc
stos
lcall
imul
ret
addr16
mov
cmp
jo
mov
push
adc
cmpsl
data16
imull
mov
daa
mov
movsb
gs
jecxz
jb
ffree
pop
push
stos
ret
push
adc
adc
or
sbb
in
inc
mov
add
ret
int
lret
daa
fdiv
stos
push
lods
popa
or
xchg
out
and
sbb
pop
subl
out
push
push
pop
out
add
ret
test
push
mov
mov
pushf
enter
or
cs
fnsave
pop
push
stos
inc
push
lcall
jl
add
jo
mov
lock
pop
cs
xor
cli
stos
mov
push
mov
jae
dec
and
addl
lock
fidivrs
push
pop
test
lods
pop
dec
xchg
test
or
roll
mov
sub
mov
push
lods
sub
dec
aad
js
and
and
mov
gs
ja
or
lret
nop
mov
sub
xor
maskmovq
xor
orl
das
pop
lret
mov
and
sbb
mov
jne
and
orb
inc
or
xchg
jp
adc
stos
lods
mov
leave
outsb
bnd
es
mov
js
adc
int
iret
dec
mov
push
add
jnp
mov
mov
lods
test
jbe
sbb
arpl
scas
push
insl
insb
mov
push
cmc
shll
dec
mov
push
andb
or
rolb
shll
dec
not
push
push
pop
mov
mov
int3
jle
adc
mov
cmpsl
pusha
and
or
mov
cmovns
pop
inc
imul
mov
or
jnp
ret
xor
outsb
sbb
cmpsb
sarl
inc
cbtw
push
das
cmc
push
jae
xchg
cwtl
jg
xor
sbb
pop
ret
ja
push
ja
sbbl
test
jp
and
lret
sbb
paddq
je
int
pop
loopne
inc
cmp
mov
and
cmp
or
jl
rclb
jmp
xchg
rolb
aaa
data16
pop
nop
add
push
outsl
mov
fisttps
inc
xor
jns
test
repz
sub
pop
sti
iret
inc
dec
sbb
lea
and
dec
add
xchg
and
pop
jo
cmpsl
or
arpl
jns
lods
lahf
dec
test
xorb
hlt
sti
cmp
xorl
es
lcall
test
lret
push
cli
shll
push
dec
mov
mov
adcl
or
xchg
or
aas
mov
mov
ret
push
pop
out
cmp
pushf
inc
jmp
jge
stos
mov
fidivl
cmc
int3
dec
sub
jne
jne
lds
push
cmp
and
loop
loop
sub
mov
xor
inc
jl
cwtl
push
or
in
ficoms
jb
xor
jns
and
jecxz
lcall
adc
xor
inc
cmp
or
cmpsl
rcrl
stos
inc
cmp
adc
pop
and
xchg
mov
ret
jle
xor
fwait
xor
push
cld
jns
lods
pop
mov
sub
sbbl
ss
mov
xchg
push
xor
div
call
inc
stc
gs
cmp
stos
push
and
sbb
ds
ja
in
rolb
lods
mov
fmul
mov
out
sub
jbe
pop
inc
mov
in
rolb
lods
mov
fmul
mov
out
sub
xor
ds
ja
in
rolb
lods
mov
fmul
mov
out
sub
adc
ds
ja
in
rolb
movsl
mov
fmul
mov
out
sub
ljmp
mov
jbe
pop
cs
jle
es
stc
fsub
in
daa
mov
sub
test
adc
pusha
add
push
pop
mov
test
xor
pop
mov
dec
aas
jl
clc
xor
lahf
xor
sub
pop
int
sub
xchg
sub
aas
stos
ftst
xchg
cmpsl
int
test
arpl
mov
xor
arpl
mov
call
mov
roll
inc
clc
stos
jmp
jg
jno
in
xor
xchg
sub
mov
hlt
sbb
jo
pop
loope
inc
mov
out
addb
rorl
imul
inc
lods
sub
pop
ror
and
sarl
iret
adc
lea
inc
inc
fldenv
andb
shrb
cmp
jecxz
jno
adc
dec
aas
jl
jle
cmp
mov
mov
insb
and
mov
sbb
outsb
dec
inc
cmp
clc
aaa
or
pusha
xor
mov
enter
pusha
hlt
jne
fdivrs
and
jns
pop
and
popf
mov
xchg
sub
stos
call
sbb
jnp
jecxz
cmp
mov
movsb
icebp
frstor
push
adc
shlb
jmp
je
sub
or
in
sub
pop
adc
add
imul
in
rorb
dec
mov
xchg
add
pop
xchg
dec
or
insl
mov
mov
iret
mov
mov
js
mov
adc
xchg
push
cmpsl
stos
inc
addr16
cmpsb
shll
inc
adcl
lret
lock
je
adc
gs
mov
ljmp
fsubrs
mov
jge
jae
insl
or
addr16
sbbb
sbb
xchg
mov
sub
mov
loope
cmp
inc
sub
stos
sub
rorl
push
dec
mov
and
cmp
xor
xorl
add
mov
pop
adc
xor
into
adc
push
inc
ret
int
lods
push
jo
in
add
aam
sub
leave
ja
adc
inc
inc
pop
in
adc
mov
fmulp
mov
adc
rclb
stos
xchg
sahf
dec
stos
sub
hlt
fisubrs
pop
mov
mov
mov
mov
mov
dec
pop
lcall
sbb
das
pushf
jecxz
inc
rclb
mov
imul
xchg
ja
and
ljmp
pop
mov
pop
adc
mov
clc
sbbb
inc
loope
xlat
sbbb
inc
lcall
inc
testl
mov
cs
std
rolb
popa
in
fsts
mov
push
mull
xchg
mov
add
adc
add
test
lods
shl
adc
aaa
movsl
shlb
lods
call
pop
adc
in
lds
mov
or
hlt
push
stc
cmp
cmc
call
pushf
lret
xchg
sub
add
and
imul
icebp
repnz
es
mov
mov
das
pop
mov
fadds
imul
and
sbb
pusha
mov
push
movsb
gs
sbb
les
push
fbld
mov
imul
cmp
cli
sbb
andb
cwtl
bound
xchg
in
scas
mov
sti
ljmp
testl
mov
lods
stos
stc
pop
and
popa
xor
stos
adc
inc
clc
ljmp
arpl
xlat
dec
cmp
outsb
aad
mov
inc
addl
mov
xor
mov
pop
adc
or
push
aad
cmp
xchg
push
cmpsl
movb
lds
orb
lea
ss
sbb
xchg
cmpsb
pop
fsubrp
out
mov
mov
mov
push
adc
mov
shrl
fdivr
inc
push
inc
idivl
mov
push
adc
gs
mov
sub
xor
and
jae
adc
pop
mov
mov
ja
inc
andl
inc
clc
ret
fsubrp
inc
jbe
loop
adc
repz
lcall
cmp
subb
lods
inc
xor
nop
dec
loope
jl
xchg
movsl
mov
es
adc
rorb
inc
jge
out
movsl
add
inc
mov
loop
call
je
xlat
add
mov
cmp
inc
cltd
mov
and
push
add
in
stos
push
das
cmp
xor
pop
imul
imul
or
xchg
inc
aaa
fst
test
or
iret
sub
in
ja
xchg
and
stos
mov
mov
and
xor
mov
addr16
push
push
pop
test
adc
ret
fs
xchg
shl
test
adc
test
shll
xchg
or
shll
in
mov
cmp
out
sbb
mov
inc
sub
mov
popf
fistps
lock
dec
mov
push
and
mov
nop
and
add
movsb
call
enter
add
nop
lods
shl
xor
scas
es
sub
dec
sbb
jns
xchg
cmp
lea
mov
jp
fisubrl
push
push
or
out
push
push
lock
dec
jecxz
jno
xlat
stos
sub
sbb
pop
mov
negb
subb
sti
test
dec
stos
out
inc
adc
fwait
pop
scas
into
jg
pop
fwait
lods
adc
push
adc
addr16
add
mov
in
jbe
xchg
mov
int3
out
scas
and
mov
mov
mov
push
xchg
sahf
imul
sbb
test
scas
mov
lea
mov
push
fwait
dec
add
pop
and
cmp
and
push
sub
test
mov
inc
adc
rcrb
mov
xor
sub
xor
sbb
pop
hlt
adc
lret
fs
push
aam
pop
test
adc
xorb
test
leave
stc
mov
pop
inc
ret
sub
sub
sahf
and
xor
mov
lea
dec
inc
xor
vmread
lcall
shlb
push
pop
aas
lcall
jne
fwait
mov
jns
loopne
sub
sub
jecxz
mov
mov
lock
push
hlt
jg
ljmp
sub
sub
adc
je
sub
inc
stos
ret
ja
ljmp
fstl
stos
push
pop
pushf
add
cltd
mov
out
xchg
push
cld
jno
dec
sbb
push
adc
push
outsb
aad
popf
test
insl
sub
pop
adc
mov
cmc
xor
stos
mov
pop
fiadds
sahf
popa
ret
add
mov
cli
hlt
mov
out
fcompl
stos
sub
retw
test
imul
add
mov
nop
push
push
inc
cmp
pop
ret
sub
stos
and
shll
pop
xor
add
xchg
sub
push
inc
movsb
or
mulb
cmp
sbb
ret
pop
adc
lahf
test
pop
adc
mov
adc
fldenv
ret
pop
adc
mov
fsubrs
cmp
pop
sbb
mov
pop
mov
inc
mov
test
lret
xchg
mov
pop
adc
loope
arpl
jge
sub
faddl
adc
sub
mov
aaa
insl
jnp
push
fidivrl
jae
ret
adcb
mov
push
jge,pt
cmpsl
adc
add
fnstsw
mov
jno
adc
popa
call
push
jae
jae
mov
aad
push
sub
popf
aas
jns
mov
push
adc
shlb
push
stos
push
test
mov
mov
test
jo
adc
aam
inc
add
lds
add
es
xchg
mov
dec
test
lods
mov
in
sub
pop
push
mov
fldl
gs
add
scas
and
jmp
ja
mov
jne
inc
stos
cmc
dec
shr
adc
lods
lds
subl
or
out
mov
cmp
jl
std
lds
fdivs
adc
fbld
xorl
and
pusha
mov
nop
mov
sbb
adc
adc
loop
pop
rcll
lds
mov
neg
icebp
cmp
mov
mov
mov
mov
js
and
and
enter
jo
arpl
pop
mov
add
push
inc
shlb
adc
push
aas
lods
push
ds
repz
and
push
pop
movsb
pop
or
add
mov
icebp
jne
mov
sahf
push
xchg
and
les
adc
xchg
jmp
push
loopne
pop
adc
into
loopne
pop
adc
xchg
icebp
mov
or
xchg
and
cmp
insl
jns
xor
push
jns
movsb
sbb
lcall
dec
pop
int
jno
adc
sub
dec
les
sub
and
lret
jl
jo
adc
enter
int
adc
dec
pop
cltd
mov
jno
push
jno
mov
add
xchg
cmpsb
xchg
call
jp
mov
jno
adc
jbe
stos
and
enter
jne
add
adc
mov
pop
adc
in
pop
adc
pushf
cmp
or
test
cmp
leave
mov
pop
jecxz
cli
mov
in
shll
mov
push
sub
outsb
sbb
or
cmpsl
adc
pop
mov
mov
je
adc
filds
jnp
push
lcall
sub
fisubs
or
test
jp
dec
roll
adc
fiaddl
and
adc
push
inc
rorl
mov
mov
bound
lret
or
xchg
sub
aas
cwtl
pop
outsb
lcall
out
faddl
add
cmc
addr16
cmp
pop
iret
adc
xchg
sub
sub
inc
sbb
jnp
out
push
cmp
xor
lock
cmp
pop
push
fidivs
push
stos
push
stc
pop
shrl
or
push
jp
out
pop
xor
fwait
push
pusha
shl
je
cs
mov
adc
push
cmpsl
dec
cmpsl
mov
mov
imul
ds
stos
gs
daa
xchg
jb
gs
and
sub
test
pop
adc
add
or
pop
push
and
jecxz
and
sahf
popa
ret
and
push
adc
jb
out
addb
sahf
xchg
mov
add
stos
and
std
sbbb
mov
mov
out
addb
stc
pop
adc
stos
outsb
das
sahf
popa
ret
out
faddl
sbb
push
adc
pop
mov
adc
mov
pop
adc
out
adc
adc
mov
pushf
cld
imull
shrb
cmc
add
scas
mov
xchg
mov
iret
mov
cwtl
int3
insl
sub
or
enter
in
cld
jae
adc
shrl
mov
xchg
aas
and
add
sar
clc
rorl
jb
cmp
shll
pop
adc
inc
jge
in
pop
adc
popf
std
mulb
push
fstpt
outsb
xor
aam
aam
mov
jl
jp
outsl
cmpsb
popa
xchg
enter
adc
imul
aaa
imul
lds
pop
mov
adc
xchg
in
jae
adc
cwtl
xor
std
push
daa
aad
mov
jle
hlt
add
push
jne
pop
pop
out
or
dec
test
mov
push
rcll
push
adc
pop
pushf
or
mov
sub
test
mov
mov
fdivrs
adc
popf
cltd
ret
icebp
addl
cwtl
iret
jns
mov
pop
cmpsl
data16
add
and
push
adc
inc
shll
mov
cmpsb
rolb
test
adc
sbb
loop
inc
inc
push
sbb
call
arpl
sub
lds
jmp
push
shll
mov
xchg
mov
sub
jge
fcomps
cli
test
mov
into
rcl
jne
movsb
sbb
or
add
lock
adc
jl
mov
arpl
xor
popf
aas
mov
sbb
ret
out
mov
sub
sub
sub
jl
sub
outsb
fdivrs
add
popa
add
insl
js
xor
sub
or
fidivrs
add
adc
daa
fdivs
loope
dec
mov
mov
mov
push
aam
clc
mov
mov
push
adc
cld
lcall
js
jmp
mov
inc
shrb
addb
mov
int
sbb
sub
lds
adc
int3
jle
adc
pop
adc
adc
movsl
lds
adc
adc
adc
nop
or
adc
push
jecxz
mov
jl
fldcw
mov
push
in
pop
or
push
adc
and
sub
addl
jae
loop
jle
adc
stc
xchg
adc
lds
adc
adc
pop
adc
aaa
dec
adc
adc
jae
xchg
nop
test
add
push
adc
cs
or
xchg
sub
push
daa
shl
lods
pop
mov
sbbl
push
adc
mov
dec
roll
lds
or
lods
jnp
push
and
mov
stos
sbb
roll
mov
push
out
push
stos
ficoml
lret
test
mov
push
xor
adcb
ror
clc
jns
stos
stc
ftst
shll
push
xor
out
xor
add
test
sub
cmp
scas
mov
inc
xor
aad
stos
dec
ja
push
add
xor
cltd
dec
repnz
adc
daa
stos
fsubp
lret
into
andl
adc
mov
dec
roll
lds
or
lods
jnp
push
and
aad
pop
adc
out
stos
sbb
roll
push
push
pop
mov
daa
adc
add
push
jae
xchg
xchg
test
xchg
addb
inc
shr
xchg
add
and
movb
lds
cld
lds
adc
cld
lds
adc
cmc
gs
int
jnp
adc
add
mov
sub
xchg
cmpsb
insl
xor
jbe
popa
dec
inc
mov
daa
fs
rcll
or
xchg
sub
xchg
adc
pop
adc
cld
lds
adc
adc
adc
cs
adc
addl
mov
pop
adc
test
int3
pop
jge
adc
push
jge
adc
inc
push
frstor
inc
jnp
adc
push
out
lahf
pusha
ret
xchg
test
and
cmpsl
mov
movsb
lahf
adc
push
loopne
test
stos
push
cmp
adc
sbb
inc
mov
pop
adc
scas
mov
push
jge
adc
pop
outsl
pop
and
loopne
pop
adc
pop
jae
rolb
movq
hlt
lds
adc
iret
loopne
pop
adc
loopne
pop
adc
aaa
clc
cmp
adc
leave
shlb
es
mov
sbb
mov
out
sub
leave
or
out
addb
jne
addr16
inc
xchg
lds
adc
loopne
pop
adc
mov
sub
cltd
adc
and
and
fdiv
mov
push
bound
fisubrl
ds
outsl
sbb
adc
sub
test
xor
xchg
sbbb
or
push
and
add
adc
adc
add
adc
ss
sub
out
sbb
addb
cmp
hlt
aaa
stos
test
arpl
cmpsl
lock
mov
inc
and
mov
fsubrp
mov
jmp
xor
cmpsb
outsl
jo
iret
repz
sbb
idivb
adc
clc
mov
ret
cld
jg
adc
out
sub
cwtl
push
and
fdivrp
mov
push
adc
lret
in
repnz
cmp
adc
push
aad
jle
push
mov
out
and
scas
addb
stos
sarb
push
test
in
cmc
adc
fwait
pop
mov
pushf
pop
or
mov
cld
jo
adc
popf
es
es
shrl
push
je
int
in
out
or
daa
popa
gs
and
and
in
mov
pop
adc
out
mov
push
adc
push
ds
xor
jae
in
sbb
jno
inc
adc
cltd
xorl
push
pop
or
ljmp
jmp
out
sar
mov
scas
pushf
jb
pop
pop
or
mov
mov
call
push
out
jge
and
ret
add
push
adc
pop
adc
stc
mov
and
sbb
divb
sbb
js
mov
sub
repz
and
ret
aas
jl
mov
sub
pop
cmp
mov
stos
push
outsl
lods
pop
pop
or
dec
out
or
push
pop
or
xor
mov
or
xchg
rolb
push
adc
lcall
out
fdivrl
or
jno
rcll
sub
add
cs
stos
push
test
adc
mov
scas
lahf
into
push
shll
fimull
push
stos
xlat
imul
sub
and
add
pop
mov
gs
stos
push
or
aas
ret
mov
push
pop
inc
xor
and
sbb
jo
mov
lret
or
outsl
cmpsl
std
xchg
test
mov
xor
divb
sbb
jns
mov
sub
repz
mov
pop
pop
inc
inc
mov
pop
or
mov
push
gs
stos
xchg
sub
or
mov
sub
aas
inc
inc
mov
sub
pop
cmp
jb
mov
push
outsl
lods
push
inc
adc
inc
mov
sbbb
adc
adc
cltd
jecxz
sbb
mul
and
outsl
mov
repnz
mov
lock
or
mov
mov
jno
adc
stos
push
stos
pop
sub
test
pop
or
push
mov
mov
pop
mov
sub
sub
test
mov
mov
push
cs
cmp
pop
or
lret
cmc
xlat
test
repnz
push
sahf
add
cmp
mov
mov
ret
mov
or
sub
fisubl
mov
add
mov
push
add
adc
xchg
jbe
into
push
aad
popa
inc
fisubl
and
mov
jnp
roll
push
and
jno
and
sbb
push
outsb
faddl
mov
or
outsb
sub
mov
dec
bound
test
push
or
mov
cmp
cs
mov
fistl
adc
push
pop
sbb
jl
insb
fwait
adc
or
clc
xchg
out
test
mov
push
popa
das
fmulp
hlt
jne
cmp
test
add
dec
xchg
xor
sub
scas
test
push
and
scas
xchg
int
push
and
or
dec
adc
or
pop
and
jno
data16
clc
fnsave
icebp
les
addr16
icebp
mov
les
and
subl
ja
lock
imul
adc
or
lahf
mov
or
cmpsl
xchg
ds
mov
orl
rcll
sahf
jbe
inc
stos
in
cmp
xor
fistps
xlat
mov
outsl
out
or
mov
fwait
and
dec
loop
cmp
pop
push
out
dec
fmull
push
mov
test
pop
in
xor
push
lock
or
jns
cld
jo
adc
cmp
mov
push
pop
jne
xchg
adc
cmp
shlb
out
xor
add
or
out
call
jo
sub
fdivl
fs
or
adc
mov
cli
add
sbb
mov
sarb
adc
loope
mov
cmc
adc
inc
sarl
arpl
sub
mov
test
cltd
add
push
push
inc
or
cltd
or
mov
jno
and
add
sarb
mov
ret
clc
jns
jge
pop
cmpsl
sbb
in
out
dec
mov
jmp
or
pop
ja
jg
adc
aam
cmp
gs
adc
sub
pop
and
addr16
ret
imul
push
adc
inc
insb
cmp
lock
jbe
fisttpll
adc
addr16
sbb
dec
pop
mov
imul
push
or
add
test
xor
mov
pop
mov
aad
pusha
dec
pop
or
pop
pop
add
adc
fidivrs
call
mov
or
xchg
or
test
test
sub
jg
adc
pushf
or
cmp
pop
das
sub
test
push
adc
pop
mov
xchg
iret
out
or
mov
push
gs
test
cli
mov
sub
filds
mov
mov
jb
pop
cs
imul
push
stos
ret
push
adc
jbe
out
adc
add
andb
jb
mov
pop
jnp
push
dec
and
das
sahf
popa
ret
mov
mov
roll
push
adc
mov
push
stos
repz
popa
ret
push
mov
roll
adc
push
stos
lahf
dec
pop
or
mov
cld
jo
adc
mov
repnz
jge
mov
mov
add
aam
fsubrs
sub
lods
pop
daa
add
push
adc
xor
addr16
pop
cs
push
add
mov
sahf
shl
in
test
sub
cmc
shrl
jno
cs
mov
cmp
rclb
push
adc
sbb
addl
pop
pop
das
jae
lret
loopne
fcomps
ret
scas
pop
mov
enter
cmove
addb
add
xor
add
add
and
sub
add
pop
cmp
mov
repnz
in
scas
push
scas
and
mov
sbb
ret
inc
dec
mov
mov
cltd
or
jae
adc
pminsw
sbb
inc
sub
and
js
jo
adc
imul
push
adc
jbe
or
loop
movsb
sub
adc
xor
jl
sub
pop
adc
xor
jl
mov
idiv
fisubl
jg
nop
or
jnp
or
adc
mov
faddl
adc
pop
cmp
in
pop
adc
dec
imul
push
sub
mov
xor
mov
addr16
sub
addr16
pop
mov
addr16
fadd
nop
outsl
int3
jno
loopne
dec
push
repz
aaa
and
jmp
jne
pop
or
push
inc
out
lock
adc
aad
je
adc
lahf
sbb
xor
stc
stc
mov
outsl
xchg
popa
mov
jl
xor
mov
sbb
inc
es
mov
pop
jo
and
push
in
xor
add
pop
adc
push
pop
jmp
out
mov
xchg
push
push
addr16
dec
xor
scas
test
push
std
add
pop
mov
and
adc
jno,pn
inc
fsts
sbbb
ss
addl
xchg
xchg
jno
adcb
arpl
jge
fisttpl
lods
cli
popf
sbb
mov
xchg
int3
arpl
mov
and
fcompl
pusha
lods
cmp
test
pop
mov
xchg
mov
mov
inc
push
pop
lods
les
adc
jo
cs
inc
dec
test
sbb
dec
mov
adc
push
mov
or
mov
cmp
aas
repnz
push
insl
pop
sahf
shl
in
test
lcall
roll
mov
repz
inc
and
push
pop
sarl
push
fcoms
sbb
out
fwait
xlat
mov
jo
cs
lds
pop
push
jnp
adc
sbb
mov
or
mov
addb
adc
adc
cs
adc
push
loope
or
push
adc
jo
pop
dec
jl
mov
cli
lods
push
pop
jnp
adc
stos
cld
add
and
out
fcoml
mov
test
mov
pop
push
stos
push
add
lods
pop
dec
sahf
ret
aas
and
xor
jb
icebp
ljmp
xchg
sub
mov
and
out
fdivrl
roll
mov
sub
stos
cli
mov
sbb
movsb
push
mov
jle
pop
cs
test
jne
cmp
push
out
sahf
popa
ret
bound
push
mov
cmp
sub
jnp
push
fbld
jbe
popa
mov
mov
mov
or
push
adc
xor
dec
ret
mov
xor
adc
xchg
gs
stos
xchg
sub
and
iret
cmp
adc
mov
icebp
sub
pop
subl
icebp
sub
out
enter
negl
xchg
push
push
xlat
mov
dec
loop
insl
jno
push
pop
out
subb
pusha
and
or
mov
jle
and
fwait
push
mov
adcb
sub
lret
cmp
in
inc
lea
scas
pop
and
adc
mov
bnd
cmp
adc
lock
aam
fsubr
ljmp
outsl
sub
clc
lret
mov
clc
pop
adc
inc
mov
push
scas
push
mov
mov
cmp
push
in
push
mov
das
leave
test
cmp
mov
pop
adc
jle
jno
adc
xchg
adc
lret
mov
jmp
pop
adc
push
sub
adc
aas
cmp
in
je
push
pop
loopne
jl
imul
sbb
sub
enter
xor
add
push
outsl
mov
lahf
or
mov
push
cmp
pop
pop
mov
dec
mov
inc
push
lahf
pop
xchg
lods
fcomip
add
pop
adc
adc
lret
ja
sbb
mov
mov
popa
xor
dec
jne
xchg
insb
push
fsubs
test
push
ds
xor
hlt
adc
test
jmp
movsl
in
fistpll
cwtl
mov
sti
sub
mov
sbb
nop
or
int
xchg
popa
mov
in
in
shl
add
push
inc
ret
int
insl
push
scas
dec
fcompl
pop
mov
pop
les
mov
insl
mov
lret
add
jns
jne
lock
gs
movsl
dec
je
ret
leave
pop
daa
sbb
push
and
adc
out
fwait
adc
flds
aam
push
adc
pop
sub
jbe
jno
cmpsb
dec
daa
mov
adc
add
pushf
mov
out
cs
lods
inc
pusha
pop
loop
or
push
adc
or
sub
xorl
mov
fmul
sub
addb
mov
out
sub
out
js
inc
test
push
xor
jno
mov
mov
sbb
jl
sub
clc
int3
add
lock
adc
ret
in
pop
adc
faddl
adc
das
aaa
daa
cs
mov
loopne
pop
adc
repz
popf
stos
arpl
dec
adc
sub
lods
xchg
popa
ret
into
push
and
xor
loopne
and
pop
or
push
push
fisubs
pop
js
or
mov
mov
sti
xor
bound
pushf
add
sbb
jo
push
lods
and
dec
ret
imul
sti
xchg
xchg
iret
jmp
xchg
js
adc
test
pop
mov
sub
mov
add
adc
push
mov
push
lods
hlt
cmp
mov
dec
sub
lahf
jecxz
or
pop
out
fucom
sub
push
stos
insb
adc
dec
int
ret
mov
inc
and
daa
outsb
lock
add
adc
addb
mov
outsb
adc
arpl
xchg
ficompl
cmp
sbb
mov
pushf
pop
or
and
insl
xchg
addr16
sbb
sbb
push
stos
sub
sbb
test
mov
xor
pop
fisttpl
pop
push
jb
jb
mov
add
stos
stos
push
test
lds
imul
mov
add
ret
lret
lods
push
stos
stc
mov
clc
xor
in
or
xor
adc
jno
add
flds
xchg
cli
mov
pop
cli
sbb
test
gs
imulb
pusha
shrl
inc
push
lahf
mov
sub
outsb
inc
rorl
and
mov
rcll
or
inc
icebp
sub
daa
sbb
aad
ret
adc
addb
ljmp
add
mov
sbb
popa
das
test
aam
pushf
arpl
sub
testb
scas
stos
addb
adc
loopne
xchg
sub
push
inc
inc
lret
mov
push
repnz
xchg
mov
pop
jg
cmc
sbb
pop
mov
adc
aam
test
push
mov
sbb
mov
out
jg
das
idiv
mov
xchg
in
popf
and
shlb
rolb
dec
rclb
and
mov
ss
inc
ss
inc
mov
outsl
loop
pop
dec
jo
lods
cmp
aam
xor
les
icebp
insb
ret
sbb
in
dec
int
dec
xchg
mov
orb
mov
mov
lds
das
fidivrl
xor
mov
mov
mov
or
push
adc
pushf
adcb
test
sub
leave
fidivrl
dec
push
lods
lds
addb
int3
fucom
popf
mov
pop
dec
inc
iret
mov
lods
fldt
mov
pop
and
fs
add
insb
filds
ljmp
xor
mov
pop
sub
mov
lea
jbe
mov
adc
rcl
mov
faddl
adc
adc
stc
insl
push
and
sbbb
loop
pop
sub
dec
js
lret
add
ret
daa
fsubs
jnp
adc
call
in
cmc
outsb
or
and
xor
rcl
push
mov
nop
xlat
fldpi
and
sar
push
testb
icebp
out
jno
push
add
bound
push
adc
cmp
subb
xchg
fwait
xchg
movsl
jns
ss
cmpsl
mov
xchg
ficoms
add
add
rcrb
xor
cli
cmc
sbbl
pop
clc
push
movsl
push
in
mov
push
clc
mov
push
arpl
mov
mov
push
aad
cs
stos
or
fucomp
xchg
mov
adc
mov
pushf
jno
fdivrl
repnz
cmp
add
ds
push
adc
xor
popa
cmpsb
addb
jb
xchg
shrl
sbbb
mov
jmp
out
jmp
jae
push
pop
mov
daa
adc
add
push
les
push
mov
mov
idivb
cmp
pop
iret
or
aas
stos
ftst
jmp
pop
std
ret
imul
sbb
movsb
das
push
daa
xchg
jb
xor
push
add
mov
jae
and
push
adc
addb
in
ljmp
stos
cmpsb
inc
sbb
jnp
out
and
xor
dec
lret
lock
lahf
dec
mov
pushf
test
mov
adc
xor
imul
shrl
lds
or
lods
jnp
push
and
fsubs
lret
dec
ret
sub
daa
imul
push
jb
jb
lds
stos
mov
lock
or
push
test
adc
add
cmp
addb
adc
pop
or
mov
and
cs
adc
jle
fs
push
lods
icebp
cmpsl
push
je
divl
xor
xor
pop
lods
jb
jb
xchg
stc
sub
cmpsl
mov
fildl
stos
fwait
xchg
pop
sahf
orb
cs
scas
fcoms
push
stc
aas
stos
ftst
jmp
or
xchg
pop
and
lods
jnp
adc
jg
adc
pop
adc
fnsave
stos
push
test
popa
lret
sbb
test
out
fnstcw
cmp
mov
in
cmp
fcoms
push
add
mov
aas
jns
pop
pop
push
sbb
dec
mov
add
in
push
test
test
gs
jg
daa
inc
daa
or
xor
in
cmp
pop
loope
sbb
movsb
xchg
test
outsb
xor
out
cmp
mov
or
lret
or
ret
cmc
mov
aas
mov
cld
xchg
sbb
mov
cmpsb
jno
or
push
dec
test
adc
or
inc
in
nop
jmp
aas
shrd
adc
and
ljmp
mov
push
mov
add
sub
sub
pop
ficoms
test
cmp
test
push
addr16
and
je
insb
int3
mov
inc
lock
sbb
out
push
test
push
stos
aad
adc
xor
movb
sub
mov
xchg
into
das
mov
in
int
mov
mov
or
jl
mov
or
das
push
mov
pop
adc
pusha
push
add
popa
mov
pop
adc
call
faddl
adc
jno
inc
mov
or
cmpsb
add
jnp
xor
mov
jecxz
jae
adc
push
pushf
dec
orb
push
in
js
xor
ja
mov
faddl
adc
inc
sub
or
pushf
mov
aas
add
dec
pop
inc
es
pusha
push
xorb
push
aam
loop
jbe
or
inc
icebp
add
cmp
je
enter
js
rcr
cltd
mov
clc
test
cmp
ret
lods
lret
mov
popf
out
adc
cmp
das
cltd
xorl
sub
xor
or
mov
jbe
cmp
sbb
dec
lods
cmp
stos
in
jae
adc
hlt
push
flds
adc
daa
fbstp
sub
pop
adc
adc
mov
cmp
faddl
stc
int3
add
ss
out
sbb
movsl
adc
dec
flds
adc
adc
enter
dec
flds
adc
aas
dec
flds
adc
or
or
movsb
mov
repnz
add
cli
add
scas
sbbb
push
and
add
out
mov
pop
adc
pop
int
outsb
xchg
fistps
pop
sti
add
pop
mov
pop
adc
dec
es
jnp
jae
push
pop
jl
hlt
dec
mov
pop
adc
jne
or
mov
pop
cmp
jb
fnstsw
jge,pt
sahf
jmp
pop
sub
mov
fsts
add
jp
push
or
adc
add
adc
in
mov
rcrl
lahf
sahf
popa
ret
das
and
lahf
xor
outsl
sub
pop
or
pop
scas
adc
sub
ret
or
adc
ljmp
mov
push
inc
cld
jo
adc
dec
lahf
cmp
mov
push
pop
or
pop
les
jno
adc
lods
mov
or
dec
test
test
fistl
or
xor
mov
or
xchg
rolb
push
adc
fs
or
xor
mov
sbbb
adc
mov
jo
adc
or
lods
mov
jno
adc
sub
or
div
movsb
mov
in
cmp
or
inc
jmp
dec
dec
pop
or
mov
cld
jo
adc
test
inc
outsl
cmp
or
iret
gs
faddl
adc
jnp
xor
lcall
mov
daa
sbb
lods
jbe
push
sti
imul
fucomp
sbb
es
push
addl
les
xchg
fldt
sahf
stos
push
stos
cmp
jo
and
xor
adc
adc
test
lods
fisubl
mov
mov
push
inc
mov
fwait
mov
jae
sbb
pop
mov
lock
push
scas
shll
xchg
mov
mov
add
sub
jg
fwait
jl
pop
dec
fs
mov
pop
adc
ja
mov
push
cmc
or
dec
mov
stos
fdivs
adc
push
mov
xorl
mov
aam
push
adc
inc
pop
mov
lea
in
cmp
xor
xor
mov
mov
jo
adc
in
les
adc
stc
aas
int
add
js
dec
dec
push
std
inc
fisubs
leave
push
dec
mov
pop
aaa
mov
jp
xor
mov
jne
xor
push
inc
add
inc
in
clc
int3
mov
cmpsl
lock
dec
inc
iret
mov
sarb
or
xor
into
or
cwtl
adc
aad
jo
adc
loop
stos
shrl
outsb
movsl
outsb
jb
dec
push
fstpl
hlt
jb
adcl
and
movsl
into
pop
stc
pop
adc
pop
adc
sbb
push
adc
pop
adc
xor
xor
push
sub
adc
sub
lret
add
adc
clc
adc
ja
pusha
mov
push
test
jb
push
ret
cmp
dec
sahf
xchg
dec
adc
test
pop
xor
cmp
inc
pop
mov
cmc
cltd
popf
arpl
fnstcw
cwtl
subl
xsave
xchg
nop
addr16
sbb
stc
dec
jle
andl
or
sub
aam
rolb
mov
adc
or
sub
xor
sbbl
jno
adc
ljmp
sbb
sbb
push
adc
xlat
ljmp
test
cwtl
cmp
test
mov
mov
shrb
shll
jnp
jb
test
lock
outsb
sub
ret
and
adc
out
test
lods
roll
dec
jae
cwtl
fadds
sbb
push
adc
xor
fistl
lcall
scas
and
inc
adc
popf
mov
daa
je
dec
cmp
in
shl
int
cltd
dec
jp
and
mov
pop
adc
int3
jg
push
sbb
js
cld
imul
sbb
mov
xlat
push
lcall
or
jmp
mov
dec
inc
push
fidivrs
out
and
lods
aam
and
jns
and
jne
adc
adc
sbb
sbb
xchg
pop
imul
lea
sub
enter
out
mov
jae
aas
pop
jae
adc
shl
mov
jne
push
mov
jle
aas
ja
push
int
addr16
dec
inc
jp
pop
movsb
movsl
repz
push
cli
sub
popa
ljmp
repz
icebp
jmp
std
add
call
stos
stos
fists
sub
clc
or
mov
jecxz
incb
out
xchg
nop
xchg
push
and
mov
add
sub
adc
ljmp
add
pop
mov
fnstsw
xchg
fcoml
mov
xlat
cltd
dec
pop
adc
fcmove
or
int
sub
lods
mov
insl
fidivrs
cmp
hlt
out
fdivl
mov
lock
lds
mov
rclb
je
pusha
ret
pushl
mov
int3
les
mov
jge
iret
dec
stc
jb
lret
xor
pop
shrl
fists
rcl
xchg
rclb
and
adc
addl
pop
inc
fstpt
and
or
push
mov
jp
jne
pop
daa
mov
lods
mov
and
shl
inc
sbb
cli
and
mov
test
jg
push
idiv
imul
mov
mov
mov
add
jno
add
add
mov
test
pop
xlat
arpl
add
clc
inc
test
clc
cltd
or
das
loope
push
fiaddl
sub
pusha
dec
js
insl
add
int3
push
arpl
stos
jo
mov
push
adc
mov
xchg
mov
enter
push
adc
ljmp
lods
incl
movl
jns
xchg
andl
popa
mov
shll
aam
lcall
xchg
out
scas
fisubrl
outsl
shrb
sbb
dec
cs
stc
jecxz
mov
bound
mov
lds
lret
ljmp
ficoml
xlat
dec
insl
jae
fdivrl
sub
int
push
mov
imul
xchg
scas
shl
add
dec
push
dec
cltd
cmc
loopne
lods
cmp
push
cmp
in
sub
inc
mov
lret
ret
popf
mov
or
push
push
jno
scas
add
pop
push
fistps
push
cmp
scas
pushf
pop
fiadds
negb
and
push
dec
jno
xchg
in
addr16
jle
dec
adc
mov
aas
or
cmp
mov
js
ret
xchg
and
enter
adc
shll
in
subl
fcmovne
cmp
mov
int
lret
push
iret
fs
or
inc
sahf
mov
bndldx
push
data16
adc
jb
scas
push
fdivp
jo
pop
stos
sbb
push
out
sahf
lods
sbb
lret
rorl
in
xor
mov
mov
cwtl
loope
or
push
sarl
ja
sbb
ret
notb
fwait
stc
xor
lock
push
lret
mov
add
fsubrs
cmp
mov
mov
mov
adc
pop
out
mov
fisttpl
push
icebp
mov
jae
inc
lods
pop
mov
jnp
clc
pop
int3
jmp
push
subl
jb
xor
push
outsb
push
cmpsb
dec
sahf
cmp
inc
mov
lret
sahf
jge,pt
sbb
fcoms
fsubrp
inc
pop
adc
sti
fwait
iret
jle
pop
cmp
jge,pt
mov
into
in
adc
xchg
out
movsb
pop
add
into
in
adc
mov
add
pop
sbb
lea
xchg
inc
and
mov
insl
test
mov
cli
xor
adc
insl
adc
cmc
dec
sahf
cli
ds
in
adc
outsl
outsb
xchg
ret
or
cs
sbbl
add
add
sub
jmp
ret
mull
lock
stos
jp
outsb
xor
filds
adc
jne
lock
push
mov
mov
movsb
cmpsb
pop
movsb
scas
lret
enter
nop
push
stos
clc
push
test
in
adc
cmp
pop
xor
jg
push
dec
sbb
leave
pop
adc
push
push
and
jo
pop
jg
inc
mov
mov
or
in
loope
push
mov
outsb
lea
fdiv
ja
in
sbb
out
mov
xor
shrl
fadds
dec
dec
lahf
cmp
ds
pushf
jle
push
call
ret
adc
ljmp
jno
push
repnz
loopne
jne
stos
mov
sbb
pop
or
pop
push
loopne
push
adc
jae
adc
pop
mov
xchg
mov
ja
dec
jae
fs
lock
xlat
jl,pn
xchg
divl
adc
jg
int3
addr16
mov
out
aam
or
ret
xchg
mov
xchg
test
mov
enter
mov
push
repz
cs
in
xchg
push
adc
sub
add
jnp
ja
or
fdivs
fs
enter
insl
inc
sbb
in
xchg
push
adc
mov
jl
je
popf
lods
mov
dec
mov
adc
mov
adc
out
pop
fdivs
lea
je
aam
jne
xor
aad
js
adc
sub
fucomp
mov
insb
inc
mov
jae
daa
mov
aas
divl
adc
push
adc
stc
test
imul
mov
sub
dec
mov
rolb
daa
orb
iret
push
or
xor
les
imul
mov
scas
out
sub
sbb
mov
lret
imul
orb
dec
repz
into
lcall
lds
sub
mov
adcl
pushf
inc
mov
dec
push
inc
xchg
mov
int3
sbb
push
push
shrb
cli
addr16
adc
cmp
add
adc
inc
inc
sub
cli
ljmp
and
mov
ja
add
cmpsb
inc
pop
sbb
dec
arpl
pop
aas
cmpsb
sbb
mov
popa
push
jle
bound
cmp
arpl
decb
scas
in
push
jnp
rclb
ds
jae
mov
xorl
sbb
xchg
lret
fmuls
scas
roll
mov
movsl
cmp
jo
pop
out
lcall
mov
cmp
adc
inc
push
push
cs
test
mov
xchg
lea
inc
pop
dec
lock
sbb
xor
push
test
or
shlb
aam
inc
out
fdivs
jb
int3
push
jg
jae
popa
xchg
cmpsl
test
scas
fisubrs
lods
mov
ljmp
xchg
jae
int3
push
push
pop
roll
push
xor
scas
or
push
and
mov
repz
mov
loop
fidivs
xchg
clc
jge
pop
repz
add
xor
jo
mov
xor
outsb
and
iret
lahf
dec
cmp
cmc
cmpsl
lods
xchg
hlt
loope
mov
push
cmpsl
dec
ljmp
test
xchg
mov
push
jno
loopne
stc
imul
fisubrs
jp
test
icebp
jle
mov
gs
and
mov
mov
jmp
mov
out
jo
fsubs
push
addr16
jne
iret
shrl
cs
popa
inc
lea
ficomps
and
mov
sub
aaa
addr16
jne
iret
shrl
pop
movsl
movsl
int
dec
lret
cmc
fisubrs
push
cmpsl
sbb
push
cld
arpl
adcb
shrl
mov
pop
sub
pop
test
loop
lret
lahf
outsl
sub
cmc
lods
push
xor
out
sub
pop
dec
sbb
psubd
test
ja
addl
xchg
push
push
lods
and
mov
mov
clc
and
inc
shl
aad
ficomps
push
inc
sbb
push
adc
aaa
xchg
fucompp
fwait
xchg
fwait
orb
test
fisttpll
adc
cmp
scas
fnstenv
cmp
dec
daa
sahf
jl
cmc
jmp
aas
xor
xchg
add
in
inc
ja
repnz
xlat
cmp
inc
int
cmp
mov
sub
mov
jecxz
mov
and
shrl
mov
insb
jge
sub
xlat
inc
add
push
subb
stos
lods
cwtl
mov
les
jl
cld
mov
imul
cmp
idivb
xlat
sti
dec
loope
mov
cld
sub
push
fisttps
jno
mov
out
push
lods
or
xor
jg
ja
sbb
repnz
ret
aam
imul
and
or
movsl
mov
ret
mov
mov
je
cltd
pop
test
dec
call
xor
mov
cmp
loop
int3
data16
test
adc
jae
xor
test
imul
or
test
ja
push
push
sub
mov
xchg
lock
fidivs
mov
lds
movsb
inc
decl
test
push
or
dec
stos
cmp
hlt
imul
add
xor
fs
cmpsb
shlb
mov
lret
outsl
sti
shl
daa
ljmp
test
mov
cmpsl
sbb
arpl
pop
jmp
inc
stos
sti
das
add
or
js
jg
and
aam
int
insl
fistl
ljmp
loopne
adc
pop
ja
xchg
pop
movsb
cmp
scas
mov
enter
enter
enter
data16
test
xor
das
ljmp
jae
cltd
in
shrl
adc
divb
jle
inc
cmp
sbb
push
out
mov
fmul
std
add
dec
sub
push
mov
js
and
inc
pop
adc
add
adc
or
cltd
add
push
and
mov
int
add
in
dec
insb
leave
cmpb
bound
and
in
aas
fstpl
and
pop
aad
movsb
and
ss
ror
stc
push
cwtl
pop
aas
cmp
xchg
push
adc
in
inc
cmp
pop
sub
bound
jle
xchg
out
iret
leave
rorl
cld
arpl
dec
shlb
push
and
cmp
and
and
push
mov
mov
pop
cli
stos
clc
pop
push
or
cltd
test
push
adc
dec
jb
cmp
push
adc
mov
test
je
adc
shrl
popf
xchg
cmp
push
adc
lods
mov
outsb
mov
out
aam
mov
xchg
cmp
adc
fsts
mov
push
adc
mov
mov
movsb
test
push
mulb
pop
push
fisubrs
les
sub
arpl
mov
movsb
adcb
jp
fistps
and
push
adc
dec
cpuid
xor
cs
je
adc
jge
ret
push
lds
adc
cld
xchg
push
adc
insb
mov
mov
jb
xchg
push
adc
stos
mov
xor
push
adc
enter
iret
sar
int
inc
push
jmp
and
mov
xor
in
push
jecxz
lea
sub
xchg
pop
ljmp
mov
daa
dec
lea
pop
movsl
ja
cld
dec
add
pop
mov
lds
push
mov
fabs
pop
pushf
test
aas
repnz
pushf
xchg
jb
lahf
mov
pop
cli
sahf
jmp
lds
sub
out
jo
rcr
push
mov
loop
fdivs
xor
and
cmpsl
mov
sbb
call
push
stos
add
mov
in
pusha
daa
mov
fs
push
jne
loop
sahf
pusha
jo
mov
cli
cmp
adc
outsb
js
pop
dec
or
inc
faddp
xchg
cld
ret
sub
sub
popa
pusha
sbb
push
sub
inc
in
mov
push
jecxz
icebp
scas
pop
mov
cmp
pop
mov
aam
and
mov
rcll
xor
mov
into
call
inc
xchg
pop
movsb
sub
lahf
inc
loope
xchg
enter
cltd
push
mov
adc
fdivr
jnp
fucomi
and
fidivrs
es
gs
lock
xchg
and
mov
imul
and
jl
push
out
adc
xor
or
jns
insb
xchg
ret
ficoml
dec
inc
aad
xchg
adc
xor
push
or
mov
stc
sub
xor
pop
aaa
adc
subb
int3
les
lods
and
outsl
int3
inc
cmp
hlt
scas
mov
jbe
jg
mov
jle
push
fisubrl
adc
inc
lods
call
mov
fucomp
nop
in
jno
lret
pop
sbb
jg
cltd
mov
cs
adc
insb
lret
shrl
shl
cmpsb
xor
gs
pop
lcall
insb
push
out
cmp
push
rcrl
gs
in
dec
js
fsubrs
shlb
fbstp
fnstenv
fiaddl
cmpl
fstl
sar
mov
inc
mov
lock
cmc
insl
call
cmp
lahf
xor
lock
nop
cs
outsb
lahf
icebp
and
popf
mov
test
add
test
mov
xor
sti
loope
lods
push
mov
fwait
add
adc
add
repz
fisubl
inc
push
mov
mov
shll
push
insb
inc
ficoml
jp
mov
jp
pop
stos
sbb
add
xchg
jbe
xchg
scas
or
ja
xchg
sub
inc
pushf
in
push
insl
fisubl
out
sub
stos
xor
fistl
add
fdivs
es
es
movsb
jmp
repnz
test
xor
or
nop
push
mov
mov
pop
fucomip
cmp
icebp
pop
ljmp
outsb
pop
test
fdiv
pop
popa
dec
arpl
and
mov
add
leave
and
cmpsl
scas
fisubs
int3
sub
movl
xor
divl
sar
pop
fs
xor
aad
and
push
sbb
push
mov
in
push
mov
pop
mov
xchg
mov
in
movsb
mov
xor
dec
jecxz
adc
gs
in
pop
push
lcall
mov
popa
xlat
push
inc
aad
adc
and
imul
pushf
loopne
push
hlt
call
and
pop
in
dec
fldl
sub
jo
in
push
jb
pop
fucomip
cmp
stc
pop
ljmp
movsb
out
test
push
into
aad
int
fdivl
cmp
dec
pop
xor
add
lcall
test
push
and
or
cltd
lods
jo
xlat
pushf
loopne
adc
shll
outsb
pop
mov
rcrb
in
cmp
hlt
add
lcall
andb
shrl
xchg
stos
int3
sub
xlat
push
jno
add
insl
mov
arpl
dec
inc
push
fxch
pop
push
popa
dec
xorb
fsubs
ds
imul
xor
xchg
ds
mov
mov
out
les
adc
ljmp
cmp
insl
scas
push
sub
repnz
repnz
inc
pop
arpl
mov
adc
popa
aas
pop
aad
fstpl
or
sti
xor
fucomi
aas
repnz
add
loope
jp
push
push
clc
scas
aam
and
imul
test
xor
call
adc
dec
cmpsb
pop
xor
movsb
fdivl
xchg
subl
loopne
rolb
mov
iret
inc
fwait
mov
sbb
push
js
loop
aam
fdivrl
mov
jno
jo
add
dec
mov
add
in
push
loope
fcomps
jns
add
rcll
sub
rcrb
mov
jecxz
push
sub
and
push
lea
bound
push
shlb
mov
cld
rcrb
into
and
pop
jecxz
nop
mov
xchg
es
nop
int3
add
jecxz
mov
in
push
xor
loopne
mov
or
adc
mov
dec
dec
xor
mov
pop
sbb
rolb
idivb
xchg
test
jp
cmp
xchg
popa
std
popa
pop
sbb
dec
mov
push
adc
pop
scas
mov
jle
addr16
pusha
sbb
lahf
dec
orb
fldl
test
xchg
mov
rorl
jl
sbb
popf
xor
mov
add
fs
cmp
ficompl
arpl
cmp
fs
mov
movsb
or
test
push
cmp
xchg
stc
xor
enter
mov
xor
mov
test
mov
xchg
jae
or
loope
repz
daa
std
dec
subb
dec
push
test
mov
stc
clc
cltd
fadds
loope
mov
add
cmp
add
sahf
ja
clc
in
push
imulb
sub
add
xchg
aas
xor
imul
iret
rorl
loopne
push
sub
jo
xchg
mov
mov
push
mov
repnz
pop
xlat
mov
mov
sub
mov
loopne
cmp
xor
cs
mov
xchg
push
stos
cmc
mov
stc
xchg
mov
push
xor
xor
jge
pop
jecxz
mov
fisubrs
xlat
xor
out
sbb
shl
cmp
mov
push
push
ss
and
sub
sub
ret
cld
add
adcb
cs
jb
jge
ja
fucompp
fwait
xchg
rcrl
adc
cmp
push
sub
pop
pop
xchg
fwait
aam
jge
xor
mov
call
cs
ret
dec
cmp
ljmp
jbe
cmp
sub
lret
stos
or
in
data16
pop
inc
push
pop
sub
int
testl
mov
mov
sbb
mov
daa
sbbl
xchg
adc
adc
sub
mov
push
jmp
jne
push
stos
and
lods
push
psubq
cmpb
mov
pop
out
pop
mov
frstor
adc
xchg
mov
insb
mov
imul
pop
mov
push
aam
mov
dec
jne
divb
int3
aaa
enter
cld
arpl
dec
aam
in
orl
stos
pop
and
scas
jbe
sub
lock
repz
lahf
mov
lds
loope
inc
in
push
test
fistpl
dec
pop
jge
leave
mov
outsl
divl
mov
in
out
adc
add
adc
inc
jge
call
inc
push
mov
pop
cmpsb
scas
lea
jl
add
xchg
mov
mov
out
sbb
jne
mov
add
into
sbb
lods
stos
push
and
movsb
xor
and
dec
push
out
pop
fisubrs
add
push
insl
adc
shll
adc
test
fwait
and
call
pushf
arpl
jne
mov
adc
mov
lods
shll
sahf
ds
jne
pop
dec
test
xchg
sbb
pop
in
and
int3
insl
add
hlt
fwait
mov
aas
jmp
pop
cwtl
pop
mov
popf
stc
sbb
cmp
scas
pushf
insb
xchg
scas
mov
aas
cmp
shlb
or
mov
popf
imul
or
pop
mov
xor
fildl
jne
push
adc
jbe
imul
xchg
push
add
out
cli
fcmovnu
mov
outsl
mov
add
mov
data16
and
btc
jecxz
push
pop
pop
pop
int
lods
jge
and
cmp
xchg
mov
loope
addb
cmp
add
cmp
popf
or
pop
mulb
shr
lcall
sbb
pop
insl
mov
xchg
scas
lret
add
add
sahf
cmc
pop
inc
sti
aas
int3
loopne
fsubrs
sub
popf
out
cmc
fsts
jb
fists
push
pop
loop
push
xor
adc
stos
jno
lods
xchg
push
adc
jno
cmp
cmp
jbe
dec
jmp
xchg
je
mov
and
mov
mov
adc
inc
fs
fwait
xchg
jle
inc
add
and
jae
lods
mov
clc
iret
fdivs
fs
popf
rcrb
mov
clc
mov
jne
dec
sub
pop
out
mov
inc
xchg
mov
sti
enter
dec
push
sbb
orl
aad
inc
mov
cld
test
sti
mull
xchg
push
lods
stc
adc
jecxz
movsb
mov
add
mov
inc
aaa
xchg
rcl
sbb
push
adc
adc
loop
mov
push
fildll
pop
mov
xor
or
cmpsl
inc
aam
lret
mov
ja
cmpsl
popa
roll
cwtl
adc
pop
ljmp
outsb
es
and
ret
sub
xor
jno
int3
mov
popa
dec
lea
mov
negb
popa
dec
jae
pop
push
int3
orl
fadd
addb
lea
test
stos
and
push
les
pop
jle
fdivrl
ss
mov
aad
inc
frstpm(287
inc
dec
fldenv
movsb
daa
sbb
rolb
iret
daa
cltd
cs
adc
cmp
cs
and
jg
pop
jp
or
inc
jae
mov
lock
add
lods
sub
adc
out
in
xchg
loop
inc
repnz
adc
std
nop
ja
add
mov
jno
loopne
pop
xor
and
cmpsb
fucomp
push
sub
mov
mov
fidivs
pusha
shl
in
pusha
push
cmp
sbb
in
dec
stos
push
stos
push
and
jnp
xor
ss
cltd
pusha
dec
imul
adcl
inc
jbe
test
adc
imul
jge,pt
xor
mov
lods
mov
xchg
mov
ret
xchg
sub
fidivrs
xlat
xchg
int
cmp
sub
push
std
fistps
je
pusha
ret
adc
test
xor
jno
adc
lods
das
pop
sub
xchg
xchg
add
sbb
rclb
xchg
ss
adc
adc
pop
iret
enter
cmpsl
and
jmp
sub
mov
mov
cmp
mov
pop
and
mov
xor
push
sub
push
shrb
push
xor
cld
cs
adc
push
adc
stos
dec
and
leave
pop
adc
or
or
mov
sbb
xor
mov
fisttps
adc
push
popf
push
jbe
je
push
adc
les
ljmp
in
lods
cmp
push
movsl
lods
and
pop
push
nop
or
sub
hlt
lds
adc
pop
loopne
pop
adc
mov
lds
adc
nop
ret
stc
pop
imul
ljmp
pop
popa
push
jae
adc
mov
xchg
out
cmp
data16
test
push
mov
xchg
in
mov
fadd
pop
adc
add
sub
bound
xchg
sub
push
adc
pushf
or
sub
in
iret
mov
mov
adc
lds
adc
iret
lods
jge
adc
dec
cld
lds
adc
gs
inc
movsl
outsb
push
ret
mov
mov
sbb
push
jae
adc
push
pop
test
ss
or
jg
cmp
mov
fdiv
lods
add
xchg
insb
xchg
xor
lds
adc
int
and
adc
pop
cs
fs
push
adc
aam
xchg
push
inc
push
push
xchg
jbe
mov
fidivrl
xor
add
mov
fbld
or
mov
mov
push
testb
jae
adc
test
scas
popa
push
xlat
in
cmp
xor
sti
andl
mov
fwait
sub
pop
xchg
push
adc
mov
shrb
inc
sbb
adc
push
xchg
adc
rcrb
adc
cmp
lock
xor
cmp
stc
xor
add
cmpsl
xchg
jecxz
and
popa
pusha
ret
fwait
loope
loop
adc
out
or
mov
aas
dec
dec
xchg
ds
add
fcmovb
test
cwtl
xchg
xor
out
pop
adc
cwtl
addl
std
push
daa
adc
add
fadd
test
out
pop
adc
jb
adc
adc
mov
loopne
push
pop
mov
pop
jne
adc
mov
cs
cmc
gs
sbb
shl
fnsave
push
stos
stc
cmp
xchg
push
adc
jo
pop
dec
xor
fmull
push
mov
fisubs
decb
out
insl
adc
cmpsl
dec
sahf
aad
leave
adc
shll
inc
fidivrl
adc
int
fdivl
xlat
insb
adc
jg
js
mov
mov
xchg
and
out
int
ds
inc
test
cs
xor
push
stos
stc
ftst
xchg
jb
jnp
out
xor
dec
sbb
pusha
mov
es
jb
lret
and
dec
or
ret
mov
or
ret
jbe
cs
adc
int
stos
push
xchg
in
scas
movsb
cmpsl
in
add
arpl
mov
sub
push
imul
xchg
jle
lock
cmpsl
adc
inc
and
dec
test
push
add
lods
nop
push
push
inc
popa
call
cmp
jp
and
and
lret
dec
cld
push
fnstcw
out
fsts
push
jg
rcl
sti
mov
and
insl
lock
pop
cs
push
add
cmpb
push
add
add
add
ds
xor
xor
xor
push
jl
jns
cs
mov
cmp
inc
out
xor
icebp
mov
stos
push
pop
cmp
lahf
call
xchg
jns
test
sub
pop
pushl
xor
popf
adc
adc
aam
pop
mov
sbb
adc
je
fisubs
or
jecxz
add
sub
mov
pop
sub
push
scas
pop
pusha
stos
pusha
movb
lea
pop
adc
pop
lcall
movb
or
dec
popf
and
test
cmp
dec
mov
adc
shll
mov
pop
ds
jp
test
inc
lock
mov
out
cmc
add
dec
push
loope
and
and
inc
pop
jne
mov
mov
bnd
jno
adc
push
cmpsl
sti
iret
mov
pop
imul
mov
push
adc
iret
add
orb
push
add
orb
jge
getsec
icebp
nop
aaa
addr16
mov
data16
loop
pusha
movb
xchg
nop
test
inc
mov
xor
cmp
push
push
adc
mov
add
lock
mov
addr16
pop
test
ret
jge
cwtl
mov
add
rcr
je
jae
adc
lcall
cld
into
mov
xchg
hlt
jae
mov
xor
sbb
sub
pop
in
push
xchg
sahf
pop
lods
and
fisubs
repz
insb
xchg
insb
test
shrl
ret
or
rcll
inc
pop
imul
repnz
xchg
push
adc
or
push
lret
daa
fnstenv
lret
es
in
jle
fisubrs
mov
gs
mov
jno
cmpsb
mov
mov
sahf
xlat
lds
adc
outsl
push
mov
mov
insl
xchg
jno
addl
gs
bound
pop
and
sbb
pushf
fwait
mov
roll
int3
sub
push
add
xchg
loope
lds
adc
sub
data16
cmp
cmp
into
jp
push
jae
adc
popf
cmp
push
adc
out
xchg
les
pop
jo
orl
stos
popf
sti
mov
pop
adc
lcall
ds
jnp
pop
sbb
addr16
add
mov
adc
lods
pop
mov
jnp,pt
adc
cmp
push
xchg
inc
jne
inc
nop
cs
mov
jns
aas
mov
mov
aad
add
and
sbb
push
adc
mov
add
dec
mov
push
stos
push
stos
lret
test
mov
iret
ds
pop
adc
adc
xor
ljmp
jl
mov
inc
gs
aad
sbb
mov
pop
lock
push
repnz
adc
aad
xchg
cmpsb
cmp
jae
dec
adc
jmp
roll
ret
stc
in
xchg
cmp
jg
addr16
pop
call
imul
cmp
mov
mov
sub
pop
stos
push
add
sub
push
adc
rclb
or
pusha
add
cs
mov
aad
fsubr
in
stc
mov
divb
sbb
ja
loope
or
xchg
js
adc
test
pop
mov
push
jp
mov
ja
inc
add
add
adc
cwtl
adc
and
dec
sub
cmp
sbb
pusha
jle
hlt
fwait
shrb
add
jb
dec
aad
fsubs
and
pop
push
popa
mov
or
and
mov
dec
pop
mov
testb
in
add
push
loopne
stos
push
lods
dec
into
insl
ret
std
mov
mov
add
mov
sub
aas
stos
ftst
jmp
adc
mov
adc
sub
xor
or
or
pop
mov
shrl
inc
iret
aam
enter
sbb
inc
shll
xchg
cmp
or
jno
mov
pop
stos
push
stos
push
add
ljmp
pop
mov
fdiv
mov
and
loope
lods
fsubp
pop
and
scas
ds
or
mov
in
cmp
and
ficoms
push
inc
mov
outsb
insb
cli
mov
mov
je
mov
adc
push
adc
cmp
loop
push
movsb
or
fbld
push
in
movsb
dec
push
push
cli
jl
mov
int3
iret
lods
or
inc
sub
das
shll
sbb
mov
cltd
fdivs
std
cli
add
add
sbb
insl
enter
mov
std
inc
sbb
cmp
rolb
daa
enter
xchg
adcl
add
mov
jmp
dec
lahf
push
repnz
cmp
inc
xor
push
rcrl
mov
mov
test
xchg
and
out
mov
mov
push
es
fmull
inc
jge
fwait
and
andb
outsl
clc
xor
adc
aas
adc
movsb
movsl
shlb
mov
ror
adc
pushf
es
sub
jp
mov
dec
mov
lods
xchg
dec
shll
dec
mov
push
addb
add
xchg
mov
sbb
push
cltd
cs
adc
sbb
fcmovnbe
int
sub
inc
fsts
dec
jl
push
adc
xchg
inc
sti
push
add
xchg
adc
enter
adc
lods
sub
adc
sub
push
xor
popl
push
adc
mov
jnp
xchg
push
sahf
das
rolb
xlat
or
push
xor
imul
adc
jbe
icebp
push
cwtl
addr16
and
xchg
sbb
mov
and
hlt
jg
sbb
clc
mov
push
mov
pop
xchg
stc
or
test
mov
sarb
push
ficoml
and
gs
push
and
ljmp
mov
mov
js
jnp
pusha
fisubrl
lret
sbb
mov
movsb
in
push
or
fwait
xor
mov
in
dec
lcall
adc
mov
mov
dec
jns
cmp
sub
mov
adc
push
stos
push
sub
cmp
push
dec
and
dec
and
lahf
add
orb
fsubrp
push
and
mov
imul
fdivl
xor
divb
mov
in
xor
cmpsl
inc
sbb
adc
ja
fwait
mov
push
xor
mov
das
fdivl
inc
sahf
cmp
test
push
adc
icebp
aad
lds
data16
and
mov
xchg
push
adc
inc
stos
rorl
push
mov
test
sbb
mov
imulb
ret
mov
fimull
cmp
sub
ds
repnz
sbb
pusha
jns
jno
arpl
cmp
lea
dec
sub
lcall
pop
ljmp
fsubs
jecxz
mov
and
jmp
xor
jecxz
das
jge,pt
jg
pop
jmp
mov
push
and
scas
into
pop
popf
jnp
out
pop
xorb
adc
mov
mov
loope
and
xchg
sub
cmpsl
dec
sahf
cmp
mov
ss
jg
xchg
mov
rcll
xchg
sub
cmpsb
dec
lahf
cmp
clc
jbe
dec
ds
jl
cmc
bound
mov
push
stos
inc
insb
and
cmp
jns
insb
out
add
jne
add
pop
outsb
lods
cs
enter
push
outsb
or
mov
mull
mov
cmp
jnp
rcrl
lea
scas
push
fucom
pop
and
push
mov
jmp
aam
je
xchg
mov
in
jmp
push
pop
leave
movsb
pop
add
pop
mov
movsb
jae
movsl
test
outsb
neg
movsb
sub
clc
jns
das
push
adc
clc
sarb
and
mov
and
into
stos
into
fimull
pop
jg
adc
sub
pop
jo
jne
out
mov
lahf
mov
sbb
ret
out
xor
adc
in
cmp
rorb
cld
inc
push
shrb
xchg
xchg
mov
xor
pop
lret
rolb
add
pop
shll
jg
lret
sub
jl
mov
js
rcl
inc
add
out
pop
fldlg2
push
sahf
add
or
arpl
jae
xlat
add
and
mov
dec
xor
jns
dec
imul
and
sahf
dec
roll
decb
adc
sub
shrl
mov
iret
adc
aam
dec
hlt
imulb
mov
rcll
ds
or
cmp
mov
dec
test
andb
sbb
jecxz
sbb
fldt
enter
xlat
sbb
das
lock
imul
iret
xor
mov
mov
and
dec
push
jg
ss
xor
lods
mov
adc
lods
jmp
xchg
sub
ja
jo
in
gs
inc
xor
xchg
mov
jl
or
stos
outsl
lret
or
xchg
loop
iret
xchg
add
sub
jp
outsb
sub
idiv
xor
aas
out
xlat
divb
cs
xor
out
ss
xchg
adc
mov
mov
jns
jcxz
push
aam
xchg
mov
push
xchg
jne
pop
jecxz
roll
dec
mov
popa
adc
test
lahf
inc
ret
nop
pop
rcrl
clc
cmp
in
repnz
mov
push
fisubrs
mov
xchg
jb
in
adc
std
sbb
movsb
mov
loope
and
scas
mov
add
loope
xchg
bnd
std
mov
bound
jmp
stos
mov
jnp
test
inc
mov
jo
jb
les
mov
pop
sbb
stos
add
push
dec
fldl
test
test
movsl
sahf
mov
ljmp
repnz
jo
stos
or
sbb
out
sbb
and
mov
mov
mov
idivb
fldcw
dec
push
push
rorl
cmpsl
push
stos
push
test
outsb
sub
arpl
mov
mulb
jg
movsb
cmpl
stos
and
xorb
imul
mov
std
lret
lahf
mov
pop
pop
xor
imul
scas
push
filds
pop
cmp
push
out
test
ja
test
dec
dec
mov
push
stos
faddl
cmp
add
sbb
mov
movsl
mov
dec
mov
daa
sbb
dec
pop
bound
mov
push
mov
xor
xor
sub
jae
pop
in
insl
and
addl
divb
sub
mov
jge
sub
hlt
dec
insl
adc
cli
cmp
jae
xchg
mov
pop
mov
sub
xchg
pop
cs
les
clc
push
adc
and
mov
jnp
insl
aas
adc
popf
cli
adc
push
stos
push
stos
fstl
and
sub
cmp
loope
push
pop
ja
jne
fbld
test
es
sub
mov
mull
or
shll
mov
test
test
scas
push
aam
add
iret
ror
pop
sti
insl
loop
js
mov
mov
imul
fldcw
jmp
sub
xor
movsl
xor
mov
scas
cmc
scas
jb
decl
dec
dec
xor
lcall
xor
mov
lds
sar
mov
sub
stos
jo
dec
fisubl
lock
jge
lods
nop
mov
and
pop
jns
dec
xor
mov
pusha
int3
movsb
sbb
jns
imul
call
in
out
sub
imul
js
fisubs
sub
mov
cs
pop
and
clc
pop
icebp
jns
stc
in
and
shll
pop
movsb
das
pop
mov
and
mov
pop
xor
sbb
inc
movsl
outsb
lea
std
mov
sbbl
adc
std
into
xchg
int
mov
or
ljmp
sub
addr16
add
and
in
lds
add
mov
daa
fmuls
nop
es
popl
leave
sub
xchg
loope
sub
cs
cmp
idivl
or
sti
ds
btr
adc
mov
test
dec
dec
xor
jmp
fistpll
adc
outsb
mov
out
pop
lock
sub
mov
dec
testb
orl
shlb
fisubl
push
or
jl
sub
dec
adc
push
mov
mov
adc
ret
shrb
je
ret
mov
sub
lods
arpl
iret
push
ss
sti
in
xorb
jmp
sbbb
sub
push
imul
ss
test
pusha
shl
in
adc
subb
shrl
lock
mov
mov
out
lahf
ds
pushf
aam
sub
icebp
jnp
jecxz,pt
in
inc
cli
add
jbe
test
test
pop
scas
inc
shrb
hlt
in
fnstcw
jb
jo
out
in
push
fiadds
xchg
mov
int
cltd
adc
and
sbb
mov
xor
xor
and
das
insl
adc
adc
pusha
shl
cld
add
lock
enter
sbb
push
stos
push
fsubrs
pushl
ret
lahf
imul
movsl
mov
popa
cmp
filds
mov
incl
add
sbb
xchg
dec
hlt
call
dec
mov
std
inc
rolb
cmp
sarl
hlt
out
lahf
imul
push
push
pop
cmp
movsl
daa
faddl
and
jmp
ljmp
cmp
jb
mov
xchg
adc
fbstp
mov
sub
and
lcall
mov
in
mov
mov
out
xchg
mov
add
pop
in
or
stos
push
std
and
push
jp
fwait
aam
mov
xorb
cmp
cmp
mov
sub
adc
and
cs
add
dec
outsb
and
fcompl
mov
pusha
dec
jle
insb
enter
or
push
stos
inc
cmp
push
pop
cs
mov
fisubs
sbb
enter
fsubl
pop
out
sbb
js
push
lock
pop
inc
lds
test
cs
pop
lcall
mov
es
das
push
adc
mov
cmp
push
outsl
bound
outsb
mov
cmp
in
in
jne
mov
xchg
jae
inc
mov
xor
fistpl
or
test
popl
jecxz
repz
pushf
adc
pop
cmp
std
mov
push
adc
lea
ss
jg
mov
int3
pop
ljmp
lcallw
lods
push
xchg
mov
mov
cmp
ja
push
test
xchg
cltd
mov
mov
and
sbb
cltd
cmp
outsb
adc
mov
jmp
pop
push
push
dec
xor
outsl
mov
jmp
xor
cli
das
sbb
xlat
push
lret
int3
nop
icebp
push
adc
jno
repnz
popa
arpl
notl
or
addb
and
mov
push
sbb
mov
or
or
mov
jmp
outsb
shrl
lret
test
daa
lret
in
adc
popa
fnsave
sub
sbb
sbb
fstps
jo
adc
fwait
adc
clc
lahf
lahf
add
mov
int3
negl
ror
das
push
adc
lret
fldl
mov
in
mov
xchg
jnp
xchg
lahf
mov
je
loope
bound
mov
gs
pushf
je
push
mov
xor
sbb
lds
xchg
cmc
mov
xor
lret
mov
sub
jl
cmp
in
mov
pop
cmp
andnps
xor
mov
inc
in
sbb
aad
sbb
lahf
das
test
lahf
push
ss
xor
bound
std
jp
stos
jmp
pop
sub
aad
test
fcoms
adc
pop
faddl
sbb
hlt
orb
adc
das
and
push
lods
sub
outsb
mov
fcompl
sub
cmpsb
cmpb
sub
push
dec
lret
ja
cltd
fdivs
jnp
xor
idivb
add
inc
insb
pop
mov
fsub
mov
imul
sub
ja
fstps
loope
into
fsubp
xor
add
or
idivb
sbb
adc
mov
inc
lea
xor
xor
adc
cli
sbb
fdivrl
dec
jne
or
jb
lds
scas
and
mov
xor
inc
mull
xchg
dec
xor
mov
jb
mov
sub
fisubrs
dec
popa
ret
bound
inc
mov
stos
jg
pop
out
mov
dec
nop
sub
lcall
sti
ds
xor
scas
sbb
sbb
addl
loope
pop
or
adc
cmp
jnp
out
and
push
adc
frstor
imul
push
and
mov
les
clc
pop
hlt
call
jmp
in
pop
mov
push
mov
sbb
xor
cmp
pusha
rcll
adc
pop
cmp
out
test
mov
lock
arpl
lea
xor
cs
mov
xchg
and
pop
or
and
out
push
std
js
sbb
sub
fisttpll
lcall
add
or
ss
mov
xor
jnp
scas
sti
xlat
mov
jmp
mov
xchg
sbb
xor
adc
sarl
fwait
and
pop
adc
fisubrs
sbb
push
adc
cmp
imul
leave
pushf
xor
loopne
add
js
shlb
push
mov
or
and
daa
in
stos
scas
sbb
sub
or
cmc
push
mov
or
rolb
xor
cltd
jno
pop
xchg
lret
xorl
mov
dec
cmc
cld
js
push
xchg
test
xchg
andl
sub
movsl
xchg
loop
mov
mov
dec
pop
shrl
pushf
cltd
inc
lock
scas
pop
adc
cmp
and
hlt
das
fisttps
dec
nop
jbe
pop
pop
test
sub
mov
pop
je
lods
push
pop
rol
outsb
addr16
ja
xlat
inc
jmp
push
jmp
dec
mov
sbb
rorl
aaa
insl
pushf
rol
call
mov
shlb
sbb
cmp
mov
clc
mov
sahf
jg
test
or
push
push
push
adc
add
xchg
mov
pop
adc
je
add
jo
arpl
fs
cmc
push
cwtl
mov
ficompl
pusha
flds
adc
mov
pop
adc
outsl
xchg
lahf
mov
or
pop
xchg
or
sbb
mov
fistpll
mov
sbb
loop
push
adc
sbb
pop
adc
mov
jp
jae
adc
in
cmp
mov
mov
jb
mov
mov
leave
mov
pusha
flds
adc
iret
mov
inc
cmp
or
cmpsl
int
ljmp
leave
inc
add
pop
shll
sbb
sahf
repnz
outsl
xchg
pop
shll
inc
adc
jmp
shrl
push
adc
xchg
sbb
xorb
stos
xlat
int3
xlat
cmpsl
jmp
mov
adc
jg
pop
cs
push
add
lods
nop
push
push
inc
je
lods
pop
int3
jecxz
jnp
call
rcrb
jg
hlt
gs
daa
orl
outsl
push
pop
inc
jbe
xchg
adc
fwait
dec
push
pusha
rcll
or
or
pop
adc
add
adc
and
popa
ret
jmp
faddl
adc
jge,pt
and
iret
mov
push
imulb
adc
pop
adc
jne
lahf
ds
mov
inc
mov
adc
pop
adc
mov
inc
test
adc
rorl
adc
xor
lds
xchg
or
or
and
iret
mov
ret
or
or
call
cli
ja
mov
mov
mov
pop
adc
cmp
xlat
push
jp
xor
jne
popa
cwtl
cs
mov
inc
stos
push
stos
fildll
pop
mov
add
xchg
and
bound
jge
sbb
mov
push
pop
insb
lahf
pusha
flds
adc
cwtl
mov
pusha
flds
adc
lock
and
pop
adc
xchg
cli
addb
cs
daa
rorl
idivl
sub
pop
adc
inc
push
idivb
out
and
data16
pop
mov
insl
xchg
call
mov
pusha
sar
call
adc
mov
push
stos
and
test
mov
push
push
add
ss
or
repz
mov
push
add
data16
imul
out
push
pop
xor
sbb
ljmp
test
mov
les
nopl
lds
or
pop
push
cld
jo
adc
pop
mov
pop
adc
mov
aam
ds
jg
xchg
cld
mov
push
popf
and
xchg
sbb
ret
jnp
negb
ljmp
mov
ret
adcb
fs
rolb
dec
cwtl
inc
loop
aad
cmp
mov
and
cmp
sbb
adc
mov
xchg
adc
lcall
push
int3
mov
or
push
pop
and
or
xchg
or
mov
pop
adc
mov
inc
add
lahf
repz
and
push
pop
repz
sub
std
jns
faddl
adc
outsl
cld
jo
adc
add
cwtl
repnz
xchg
push
push
dec
adc
sbb
adc
pop
outsb
sbb
adc
sbb
xor
shr
push
push
and
pop
movsl
dec
int3
imulb
hlt
dec
lods
aas
add
mov
xor
mov
cli
mov
inc
jo
pusha
flds
adc
mov
pop
adc
leave
mov
adc
flds
adc
xchg
xchg
insb
push
push
adc
dec
mov
or
mov
sbb
popa
sahf
sahf
mov
add
jp
dec
mov
in
cmc
ror
insl
cld
aam
push
test
popa
loop
lods
jno
mov
add
scas
repz
mov
push
xor
or
xchg
or
sub
popfw
arpl
mov
pop
adc
adc
mov
mov
lret
cmc
test
incb
fwait
popa
or
push
adc
shrb
das
mov
leave
pop
adc
mov
pop
adc
mov
sub
adc
pop
in
les
test
xlat
or
push
pushf
outsl
xchg
shrb
daa
mov
pushl
xlat
xor
faddl
adc
mov
pop
adc
pop
adc
jmp
faddl
adc
xchg
gs
inc
shlb
cmp
shl
push
in
cmp
adc
rcl
lods
push
lods
test
adc
jns
iret
push
mov
add
pop
pop
out
mov
out
xchg
sub
daa
fcoms
pop
push
adc
and
push
pop
movl
mov
and
lock
and
pop
mov
rcl
inc
gs
adc
xlat
in
pop
int3
pop
cmp
cmp
push
inc
lea
xor
arpl
repz
cmp
push
data16
pop
adc
mov
add
test
pop
in
lds
adc
ret
mov
test
nop
lds
adc
shrl
cmp
out
xor
inc
test
or
int3
insl
test
fnstsw
sbb
xchg
jmp
and
push
ret
sahf
cmp
inc
lea
inc
xchg
or
mov
or
dec
gs
inc
push
push
stos
push
and
test
outsb
subb
shll
gs
enter
outsb
push
mov
pop
adc
sub
push
das
out
lahf
mov
frstor
faddl
adc
mov
cmp
xor
out
inc
loope
pop
les
adc
adc
test
cmpsl
pop
pop
mov
inc
mov
jno
adc
push
adc
adc
xlat
sub
mov
mov
aas
or
xor
mov
pop
adc
pop
and
mov
aas
jns
sti
mov
sbb
xchg
push
adc
aaa
push
mov
pop
mov
mov
std
ret
repnz
pop
adc
fwait
mov
pop
sub
add
add
xchg
add
lods
ret
adc
add
mov
cld
or
mov
push
in
sub
lods
stos
inc
test
shl
das
push
daa
bound
arpl
arpl
scas
mov
mov
or
shlb
inc
xchg
scas
push
sub
adc
mov
pop
adc
jl
xor
aad
scas
test
cmp
rorb
out
pop
daa
push
ljmp
sub
dec
bound
rorb
ja
pop
shl
lds
fwait
lahf
dec
inc
jmp
jno
adc
sbb
sbb
adc
jl
sahf
fstpt
sbbb
adc
ret
add
adc
push
push
sub
inc
adc
mov
pop
and
and
imul
dec
cmp
les
adc
fs
or
sbb
cwtl
push
xchg
adc
stos
pop
add
pop
adc
and
jle
add
inc
mov
add
addr16
into
mov
jge
out
and
xor
mov
cli
lods
adc
xchg
adc
rol
adc
and
inc
adc
jb
xchg
scas
push
xor
scas
daa
fmul
inc
cmp
mov
or
cld
mov
pop
adc
push
xchg
pop
jno
mov
pop
adc
loop
scas
or
push
icebp
aaa
pop
and
cmc
ja
mov
cs
bound
adc
pop
adc
rorl
sbb
inc
sahf
mov
xchg
div
ja
iret
cli
adc
adc
xlat
es
mov
loop
mov
mov
ret
ljmp
push
sub
pop
adc
mov
cmpsl
or
mov
pop
adc
mov
aas
xchg
ljmp
adc
faddl
adc
pop
pop
xor
adc
fwait
aad
mov
fsubp
cmp
int
sbb
mov
movb
adc
xchg
cltd
pop
and
popf
sbb
adc
mov
dec
sahf
jb
stos
enter
mov
adc
sbbb
es
test
jnp,pt
addr16
xor
mov
mov
mov
shrl
daa
fs
or
adc
cwtl
les
adc
xchg
popa
add
data16
xchg
push
out
push
aam
inc
cmpsl
les
adc
and
jge
xor
lret
sbbb
gs
leave
aad
icebp
ljmp
ds
add
or
lret
xor
pop
adc
sbb
pop
stos
push
rcr
inc
lahf
mov
mov
dec
jns
xor
pop
adc
xor
insl
inc
pop
mov
sub
daa
push
lods
pop
movsb
flds
pop
add
or
imul
cmpsb
inc
lea
es
stos
and
les
adc
dec
mov
lock
jge
pop
sub
leave
repnz
sub
and
popa
mov
sub
mov
addr16
call
fstpl
add
imul
and
sti
mov
fmul
jg
lret
pop
adc
lahf
shll
jle
stos
test
push
test
pop
adc
movb
and
adc
sub
push
test
js
mov
cmp
mov
cwtl
les
adc
sub
es
stos
and
sub
dec
negl
jae
pop
dec
sahf
aas
jl
sbbb
pop
or
xor
push
mov
push
pop
js
pop
or
adc
cwtl
les
adc
cld
jo
adc
sub
pop
adc
sbb
pop
adc
push
sbb
movb
mov
sbb
jae
mov
punpcklwd
mov
xchg
push
push
scas
push
mov
push
adc
pop
dec
test
scas
mov
push
adc
jbe
data16
sbb
push
xlat
pop
and
sub
xchg
int3
rol
push
push
inc
add
lcall
xchg
sbb
and
mov
das
aaa
push
jmp
jl
adc
or
lahf
arpl
adc
shrb
ss
mov
les
dec
fwait
outsl
popf
jmp
sub
inc
in
pop
stc
adc
push
lock
xchg
push
adc
mov
icebp
adc
lods
mov
sub
push
mov
xchg
push
adc
mov
adc
sub
addb
pop
bound
push
les
lret
arpl
test
ds
dec
lret
dec
fisttps
imul
fsubs
pushf
mov
stos
jge
psubsb
cwtl
jae
adc
pop
inc
movsl
outsb
push
movsb
repz
dec
mov
sbb
jb
xchg
iret
push
or
inc
mov
sbbb
adc
adc
iret
adc
mov
sbb
sbb
lcall
fcoml
cmp
push
test
mov
adc
adc
testb
inc
sti
in
imul
add
js
idivl
divl
and
mov
int
stos
adcl
sub
sub
mov
test
movb
shll
mov
mov
int3
mov
aam
pop
adc
push
iret
push
mov
sbb
movl
add
scas
add
aam
mov
pop
adc
scas
add
push
mov
xchg
sub
adc
mov
mov
sub
mov
lds
adc
faddl
adc
jae
cmp
adc
and
adc
cs
or
lret
cld
fdivl
rclb
pop
movb
orb
xor
out
sub
loope
jo
adc
add
adc
popa
sbb
push
adc
mov
jmp
shrl
scas
sub
ss
out
push
fldcw
pop
mov
insl
test
aad
les
daa
adc
jle
jg
and
xor
inc
mov
shll
sub
adc
cmp
imul
adc
add
es
fcmovnbe
lock
mov
roll
fiadds
leave
lods
push
es
stos
push
sub
xchg
mov
test
stc
popa
imul
rcrl
gs
push
stos
push
xchg
scas
cmpsl
dec
sahf
xor
test
in
lahf
jb,pt
jmp
sbbb
push
das
mov
dec
dec
sahf
cmp
or
sbb
add
adc
ljmp
imul
fdivp
dec
and
int3
out
jae
jmp
leave
dec
or
adc
inc
add
adc
push
adc
nop
xor
test
ret
repnz
xor
jbe
iret
movsb
stc
add
leave
ljmp
xorb
jmp
push
cmpsl
dec
leave
sti
ds
xor
fwait
in
sbb
and
mov
fisubs
sbb
int
mov
adc
push
stc
jnp
or
call
sbb
ds
test
shrb
mov
test
sahf
aas
or
inc
clc
dec
or
pop
xchg
movsb
movsb
dec
pushf
dec
cmp
adc
mov
cmp
jbe
out
dec
sbbb
sub
lods
push
mov
repz
cmp
jge
and
test
scas
push
scas
push
lret
pop
push
pop
mov
mov
out
addb
mov
xchg
dec
ja
cmp
int
mov
stc
icebp
mov
push
push
idivb
sub
add
fwait
test
add
lods
dec
out
dec
int
test
pusha
pop
lods
cmp
xchg
push
adc
js
repz
adc
lds
cmpl
mov
outsl
sbb
adc
data16
adc
sbb
lds
xchg
fsubl
in
xchg
push
and
push
mov
lock
inc
add
or
cltd
out
ds
jne
mov
cmpsl
mov
push
inc
mov
jg
mov
push
hlt
pushf
pop
or
add
adc
popf
loope
mov
mov
mov
sti
cmpsl
mov
adc
pop
loope
jae
adc
inc
mov
nop
push
cmp
andb
sbb
into
xchg
int
xchg
xchg
mov
imul
outsl
sbb
adc
jae
adc
mov
mov
dec
jecxz
out
shrb
or
lahf
clc
stos
mov
push
test
cmp
shll
vrsqrtps
popa
fs
fnstsw
dec
dec
ds
pop
mov
ds
and
xor
sbb
dec
ja
icebp
fucom
cwtl
imul
adc
dec
ss
out
cmp
mov
add
sub
add
mov
sbb
sarl
inc
imul
push
dec
sbb
adc
stos
popa
shll
scas
jo
xorl
icebp
xor
ljmp
push
inc
add
in
mov
push
les
mov
push
pop
sbb
aad
in
xchg
repz
dec
mov
push
orb
push
repnz
mov
push
adc
out
outsl
push
pop
dec
jbe
aaa
or
push
hlt
repz
movsl
add
shl
add
push
adc
in
dec
xchg
ret
push
cld
out
mov
ljmp
and
add
push
rcr
cmpsl
mov
xor
xor
sub
dec
gs
push
push
pusha
pushf
pop
or
pop
pop
cld
jo
adc
dec
lcall
gs
push
adc
iret
nop
or
adc
or
ss
ja
add
sbb
mov
mov
adc
push
out
in
lret
lahf
outsb
lock
add
out
mov
lds
adc
stos
fsubp
fwait
adc
test
ja
jg
hlt
pop
in
pop
or
lret
jo
adc
test
in
xchg
xchg
and
push
pusha
roll
jge
push
xor
adc
mov
test
ja
jg
hlt
pop
in
pop
or
lret
jo
adc
mov
lock
gs
icebp
push
adc
bound
pop
das
mov
mov
push
adc
adc
sub
lea
pop
ret
push
adc
leave
aad
sub
fdivl
mov
xchg
pop
push
cs
mov
aam
push
cld
mov
mov
test
fnstcw
icebp
mov
fimull
fwait
pop
sbbl
clc
add
push
mov
icebp
mov
int
sub
push
adc
jg
insb
pop
cmp
mov
aam
dec
in
hlt
std
addr16
mov
arpl
xchg
dec
and
jmp
and
add
dec
dec
pop
lds
lret
jno
adc
dec
xchg
inc
dec
jns
in
push
dec
xchg
mov
pop
mov
add
inc
popa
les
jmp
divl
pop
cmc
inc
xchg
push
adc
in
sub
xchg
push
adc
loop
cwtl
jae
adc
add
xor
add
es
iret
xor
pushf
aaa
insl
push
push
sub
in
cmp
adc
and
dec
xor
out
mov
sub
ret
xor
push
negb
insl
aam
sbb
jecxz
inc
jnp
imul
dec
enter
push
sub
xor
adc
outsb
cmp
stos
pop
and
pop
adc
or
push
inc
movsb
inc
mov
aam
push
cmpsl
pop
lods
imul
movsb
sbb
mov
jbe
fildll
out
pop
pop
into
dec
fisttps
cld
xchg
push
adc
dec
dec
das
ds
cmpsl
mov
aaa
rcr
push
out
lock
mov
mov
mov
out
js
int
orb
jecxz
sub
incb
adc
mov
in
test
xor
fnstsw
in
int3
in
adc
inc
mov
mov
pop
pusha
repnz
cmpb
loop
xor
push
test
or
push
cld
jp
push
aam
je
cmp
imul
in
mov
popa
lds
xor
adc
icebp
push
divb
mov
sbb
and
pop
adc
mull
enter
sub
cwtl
add
ja
adc
add
dec
or
mov
rorl
std
pop
adc
das
mov
lea
lds
pop
stc
mov
adc
push
int3
adc
js
cltd
push
xchg
jecxz
xchg
add
push
fstpl
xchg
movsb
daa
sbb
cmp
inc
idivl
add
sub
cltd
mov
and
pop
sarb
dec
mov
sti
mov
iret
sbb
lods
pushf
pop
xchg
push
adc
pop
xchg
push
adc
ds
test
pop
adc
iret
lahf
push
sub
pop
adc
jb
lret
pop
adc
sub
jbe
xor
adc
les
xchg
sbb
or
lods
push
in
cmp
scas
push
jmp
jnp,pt
fwait
shlb
mov
inc
cmpb
stos
or
cmp
push
outsb
dec
std
cmp
xchg
push
adc
pop
xchg
push
adc
movntq
out
iret
lahf
push
clc
hlt
pop
adc
jb
lret
notl
sub
jbe
xor
adc
addr16
sbb
xchg
pop
mov
jmp
stos
push
add
pop
dec
sahf
mov
jne
punpckhbw
cmp
push
orl
push
lods
and
lcall
movsb
push
or
xchg
jo
test
shl
stos
push
lods
iret
sub
pop
adc
sbb
mov
cs
pop
aad
sub
inc
inc
and
idivb
and
bswap
aam
adcb
add
pop
lds
pop
push
stos
fsub
addb
mov
mov
xor
sbb
pusha
loopne
or
pop
out
mov
xchg
cmp
stos
push
and
pop
mov
and
daa
push
mov
push
mov
subb
in
lods
mov
sahf
xor
adc
push
jnp
add
out
and
pop
adc
stc
in
xchg
pop
out
mov
daa
test
dec
sub
in
push
or
mov
std
scas
jb
mov
push
stos
and
sub
jl
fidivrs
in
push
or
sahf
aad
pop
in
push
or
mov
push
or
and
xchg
push
adc
jp
mov
pop
adc
sbb
lods
xchg
cmp
mov
mov
adc
pop
lret
jne
adc
push
out
push
fidivs
or
mov
add
xor
cmpsl
jmp
or
adc
adc
mov
popf
sub
inc
iret
inc
fcmovbe
inc
loop
push
inc
add
jg
sub
adc
out
push
mov
or
push
outsl
xchg
jg
lds
sbb
pop
jno
cli
mov
dec
push
lahf
outsl
in
pop
je
add
dec
mov
loop
jae
int
lds
push
dec
inc
adc
cmc
dec
push
test
adc
adc
pop
and
stc
test
addr16
sub
outsl
sub
fistl
lods
push
lods
xchg
shlb
outsb
int3
mov
in
insb
dec
andb
into
mov
shll
les
movsb
dec
mov
xchg
frstor
out
jae
adc
inc
pop
addr16
std
adc
orl
pop
sti
mov
pop
adc
rolb
inc
add
add
repz
and
sub
pusha
inc
push
add
jbe
gs
faddl
adc
rep
dec
mov
test
cld
push
cwtl
pop
or
cltd
mov
dec
xor
mov
mov
add
adc
or
or
lahf
jno
stos
subl
pop
or
xor
cwtl
mov
pop
adc
test
addb
sti
mov
addb
sub
lds
xchg
xchg
fisubrs
add
inc
arpl
mov
andl
stos
mov
jne
dec
xor
pop
or
push
mov
jo
adc
faddl
adc
outsb
xchg
or
sub
xor
adc
movups
pop
jne
pop
mov
add
adc
pop
or
arpl
sbbb
lret
jecxz
jnp
inc
push
lea
xor
call
in
fisubrl
push
stos
push
add
imul
mov
mov
sbbb
adc
mov
dec
push
stos
push
fnsave
pop
mov
mov
sbbb
or
pop
out
xchg
gs
pop
daa
in
stos
push
mov
idivb
and
mov
push
add
or
pop
es
in
push
push
insb
adc
fnstsw
dec
jne
ret
sub
add
mov
adc
mov
add
pop
push
out
test
xor
push
stos
and
and
adc
inc
inc
daa
lahf
ja
data16
hlt
test
dec
push
sub
push
lods
pushf
mov
psllq
push
jno
push
movsb
std
or
jg
cmp
jbe
scas
push
cli
add
mov
lock
and
or
arpl
dec
inc
mov
mov
stos
or
popa
ret
repnz
call
mov
adc
mov
mov
push
or
sub
cmp
push
arpl
jno
shll
xchg
sub
into
xchg
push
lods
hlt
mov
shll
fdivrs
jnp
ja
in
xor
add
xchg
sub
add
mov
mov
lret
mov
daa
cltd
das
addb
fstl
inc
push
stos
incb
sub
ret
mov
sub
and
test
nop
xchg
push
adc
leave
inc
mov
mov
add
adc
xchg
push
adc
or
in
sub
les
adc
cwtl
les
adc
add
movl
fs
or
sbbb
xor
push
jbe
sbb
push
pop
xchg
cvtpi2ps
push
xchg
cs
movsb
push
mov
out
test
pusha
cld
jo
adc
inc
sbbb
pop
mov
and
xchg
sbb
add
mov
adc
pop
dec
mov
bound
inc
push
into
pop
inc
icebp
cmp
adc
imul
loope
fdivrl
jbe
cltd
push
adc
js
mov
add
icebp
and
mov
push
bound
or
aad
shll
xor
adc
ret
xor
inc
int
pop
or
cld
jo
adc
repnz
in
mov
pop
adc
fadd
jnp
cmc
push
mov
pop
cltd
nop
shrb
pushf
pop
or
jne
cld
jo
adc
arpl
add
push
dec
mov
pop
adcl
stos
repz
bnd
push
sbb
pop
movsb
dec
fisttps
inc
pusha
pop
sbb
push
or
sbb
pop
sahf
in
push
or
sahf
xor
xchg
push
adc
push
or
js
and
out
lea
div
mov
dec
movsl
sub
pop
adc
lret
or
jg
push
fs
mov
lods
cmp
jge
cld
mov
pusha
sub
cs
je
fbstp
add
sbb
test
inc
sub
mov
imul
fcomps
mov
mov
dec
mov
sbb
mov
pop
adc
mov
movsl
cmp
mov
mov
pop
adc
bound
nop
mov
aaa
lock
std
mov
add
mov
or
mov
adc
mov
add
out
mov
fwait
push
shrl
stc
sbb
test
jne
push
push
in
rolb
mov
push
inc
ljmp
clc
xor
ljmp
adc
cli
cli
sti
int3
or
sbb
mov
insl
test
cltd
fs
adc
sub
and
sahf
cmp
cmp
out
lahf
mov
cmp
pop
cs
lret
lret
out
test
mov
jle
pushf
inc
mov
inc
fnstcw
cs
jns
adc
jb
mov
inc
popa
cmpsl
lods
pop
and
mov
xor
xchg
fsqrt
pop
cs
mov
test
fdivrs
pop
nop
ret
jo
push
adc
inc
rolb
mov
adc
cwtl
les
adc
lret
test
arpl
lea
xor
xchg
adc
aaa
cmpsb
jb
mov
push
add
push
ret
arpl
mov
or
ret
and
dec
inc
fcoml
push
stos
inc
stos
jp
cmpsl
mov
sbbb
adc
lods
cld
jo
adc
adc
shll
in
xchg
xchg
rcrb
push
lods
shrb
ret
test
addr16
adc
aas
das
add
xor
stos
and
sbb
iret
or
and
jne
inc
sbb
xorb
das
pop
mov
sub
pushf
pop
or
pop
pop
cld
jo
adc
pop
or
sub
jo
adc
fdivl
add
push
cltd
mov
mov
pop
adc
or
lahf
ja
jge
hlt
mov
scas
mov
pop
adc
xchg
lods
mov
pop
adc
sbb
dec
addl
jb
js
mov
pop
stos
push
test
aad
pop
in
fsub
sub
cmp
lock
rclb
dec
adc
sbb
and
outsl
cmp
mov
ljmp
pop
push
aad
loopnew
pop
cs
je
call
mov
bound
in
sub
jae
lock
por
jae,pt
and
push
adc
out
sets
mov
std
cmp
xchg
scas
push
shll
insb
adc
mov
jmp
sbb
xchg
pop
adc
cmpsb
adc
stos
int
push
push
mov
push
adc
jle
xchg
jbe
push
adc
call
and
cmp
flds
adc
sub
add
push
sub
les
test
pop
sbb
imul
int
inc
call
inc
mov
inc
pop
adc
das
push
and
adc
jae
out
pop
mov
inc
in
cmp
ss
pop
jae
inc
sbb
and
test
test
mov
pop
hlt
push
clc
sbb
cs
mov
aas
and
subb
xchg
pop
inc
sbb
xor
lods
int
dec
dec
push
movsb
in
pop
xor
movsb
adc
shll
or
dec
sbb
sub
aas
pop
sbb
jo
inc
and
push
fistpll
sbb
aam
pop
dec
daa
lods
adc
and
ret
push
inc
lret
imul
outsb
fisubrs
sub
xor
inc
dec
mov
jns
mov
jae
data16
fsts
hlt
jne,pt
andb
cmpsb
nop
sahf
fs
or
icebp
mov
scas
push
jge
and
and
aam
xlat
loope
fcomps
xlat
push
and
cmp
aam
mov
mov
mov
push
adc
sub
lods
adc
xlat
pop
pop
loope
and
jb
dec
push
inc
pusha
dec
mov
push
push
mov
stc
mov
push
pop
stos
xchg
mov
lcall
sbb
dec
xor
sbb
inc
loopne
jle
mov
in
pop
pop
sti
lret
sub
push
push
adc
sarl
cld
jns
mov
adcl
dec
adc
cmpsl
arpl
pusha
shl
shlb
xchg
push
fsubrl
shrl
adc
ja
jnp
gs
mov
stos
aas
sbb
cmp
mov
sub
and
pop
aaa
cs
sahf
cmp
add
xor
adc
xor
imul
push
dec
jp
and
pop
adc
add
fists
loop
adc
push
faddl
jne
cmp
cmp
pop
sbb
and
ja
pushf
xor
fs
idivb
add
dec
add
and
in
lahf
aam
adc
jp
aam
stos
pop
ja
push
add
add
sbb
daa
adc
mull
insl
sbb
orb
push
adc
stos
push
sub
scas
dec
pop
js
xor
movsb
jnp
cmc
jns
shll
add
fnstenv
add
lcall
sub
pop
jmp
out
push
jecxz
sbb
and
adc
loop
into
mov
pop
mov
xor
repnz
lods
sbb
dec
fnsave
jecxz
push
sub
mov
push
adc
push
in
push
xor
test
adc
push
in
clc
push
stos
push
xlat
push
lods
roll
js
mov
cltd
jns
cli
xor
ss
mov
pop
cs
inc
fstl
stos
push
mov
add
mov
add
jo
adc
push
in
push
out
xchg
add
lock
in
fidivrs
aam
adc
ljmp
push
adc
inc
dec
lcall
push
adc
loop
dec
cli
adc
and
jne
mov
jecxz
dec
pushf
movsl
mov
pop
adc
pop
xchg
push
jae
inc
repnz
adc
imul
xor
adc
push
pop
mov
mov
nop
or
outsl
push
push
dec
lods
sarb
add
pop
xchg
pop
movsb
sub
gs
dec
stos
addr16
rclb
cltd
push
push
lods
sub
adc
iret
les
repnz
adc
adc
cmpsb
lea
jge
ds
xchg
xchg
and
out
adc
dec
inc
mov
aam
jns
pop
cltd
out
hlt
cmp
shl
dec
push
test
mov
inc
pop
cld
fdivl
aas
adc
jle
shl
int3
les
fcmovbe
aad
lods
lods
int
sub
sarb
jp
ds
mov
ret
outsl
inc
mov
xlat
popf
lods
mov
stos
sub
jno
cltd
cmp
bound
fstpl
aam
ja
or
stc
xor
adc
adc
mov
dec
mov
inc
stos
dec
mov
pop
fisubs
jp
sub
mov
leave
mov
jge
movsb
fcoms
int3
dec
xor
daa
fxch
jno
nop
bswap
ljmp
notb
clc
mov
mov
cmp
mov
mov
push
lods
rcr
sbb
mov
sbb
stos
movsb
dec
inc
mov
out
lret
push
out
jle
and
outsb
jmp
push
lock
push
xor
adc
jmp
loopne
xor
mov
imul
addb
adc
push
and
and
mov
loope
sbb
xchg
push
adc
mov
popa
lret
aad
add
push
xchg
push
adc
xchg
xor
ds
push
fwait
dec
out
add
aam
xor
xor
dec
inc
dec
pop
pop
push
aad
rcl
push
orl
push
or
sbb
pusha
dec
jne
test
lea
mov
sub
imul
mov
inc
mov
add
pop
cs
adc
adc
test
pop
mov
push
jp
arpl
fcmovb
jg
shr
cs
sub
dec
mov
push
add
push
jae
sbb
or
icebp
push
adc
xor
roll
dec
leave
dec
rorb
daa
dec
and
push
mov
int
ss
addr16
inc
int
shrl
jns
lea
dec
mov
push
push
inc
fistpl
movsb
mov
mov
xchg
cmp
pop
cs
mov
pop
imulb
pop
dec
jbe
jns
adc
fwait
int3
or
outsb
cmp
jb
mov
xchg
stos
push
cmp
into
mov
dec
sub
lcall
mov
sub
lods
and
sub
mov
sti
clc
lock
xchg
inc
dec
pop
lods
fsubrp
call
fildl
mov
mov
orb
cs
push
fisttpll
out
mov
push
add
push
daa
cmpsl
jnp
test
test
ljmp
push
cld
add
cmpsb
mov
pop
imulb
movsl
mov
outsb
sub
mov
xor
sub
je
mov
das
repnz
push
rclb
jae
insl
cmp
or
dec
ja
jl
or
adc
mov
push
stos
and
pop
fsub
imul
fnstsw
iret
daa
adc
add
mov
shll
push
adc
pop
shll
mov
inc
fs
imul
imul
sub
add
fists
adc
adc
pminsw
jnp
mov
ds
or
pop
fnstsw
lcall
test
xchg
adc
fstl
push
adc
nop
mov
mov
out
cmp
adc
push
ret
ljmp
loope
icebp
mov
xor
cld
jo
adc
insl
or
gs
aam
aam
icebp
cmpl
imul
adc
dec
add
loopne
adc
ret
hlt
int
mov
or
dec
mov
jmp
or
sub
idivl
fldz
sub
aad
sub
cmp
lds
call
xchg
fdivs
test
or
xchg
scas
lret
iret
push
mov
leave
fisubrl
push
orps
xorl
adc
popa
pop
cmp
aaa
test
repnz
mov
fs
shlb
pop
rorl
sarb
outsl
popf
sbb
adc
out
xor
in
adc
xor
or
or
xchg
pop
les
cmp
xchg
aaa
pop
scas
xlat
and
dec
add
xchg
imul
test
dec
dec
repz
jns
lock
data16
daa
push
ss
fldl
fsts
pop
sbb
cs
and
xchg
xchg
lods
or
add
js
lea
push
adc
jbe
sbb
adc
mov
iret
outsl
xchg
mov
mov
xor
xchg
adc
xchg
loop,pn
pop
mov
mov
sub
push
push
mov
ficomps
repz
and
bound
insb
ja
cwtl
stos
sti
andl
stc
xor
xor
mov
popf
pusha
bound
call
or
lods
movq
imul
jecxz
call
mov
les
adc
lahf
push
rcrl
inc
mov
hlt
fnsave
push
int3
sbb
or
in
jmp
add
mov
test
sbb
sbb
sub
fisubs
mov
stos
fnsave
or
daa
rol
add
int
repnz
xchg
sub
fstl
adc
and
and
jns
jg
pop
mov
sub
sub
mov
cmp
adc
ror
lahf
imul
mov
cmc
or
sub
iret
ret
adc
pusha
dec
jno
and
in
scas
shll
filds
pop
cmp
push
out
test
ja
addl
dec
mov
mov
and
xchg
mov
out
clc
xchg
ret
enter
jge
cmp
inc
jp
xchg
fsubp
mov
popa
dec
jae
fisubs
inc
mov
dec
jno
adc
dec
lods
cltd
xchg
jo
sub
push
and
inc
fsubp
pop
into
aad
or
and
inc
fdivrl
hlt
adc
xchg
imul
or
xor
pop
cmpsl
dec
sahf
cmp
mov
rorl
or
bnd
sub
out
pop
ret
int3
pop
sub
jnp
out
adc
xchg
or
pop
cs
xor
stos
int3
push
test
clc
lea
test
stos
xchg
in
sbb
leave
pop
adc
dec
mov
mov
std
adc
jp
lea
xor
sbb
popa
sbb
aaa
jecxz
movsb
rclb
jne
daa
lock
cmp
and
sub
jle
mov
lea
rolb
cmp
push
scas
dec
and
les
test
mov
adc
popf
out
or
rcrl
xchg
mov
add
int3
test
pop
popaw
sub
xchg
jns
rcrl
dec
insb
mov
lods
es
data16
mov
push
xchg
fs
lcall
testb
pop
push
pop
mov
js
fcoms
jo
xorb
push
xor
fdivrs
sahf
sbb
test
fldcw
cs
in
mov
xor
mov
sub
movsb
mov
push
scas
jmp
sub
cs
gs
jmp
inc
mov
xchg
mov
int3
outsl
iret
mov
dec
aaa
sti
lods
adcb
lret
dec
shlb
or
dec
scas
cli
stos
cltd
mulb
idivb
sbb
std
push
fstl
int3
daa
imul
ja
sub
or
fucom
pop
fstpl
ficomps
push
lret
out
stos
sahf
fst
push
adc
div
xchg
inc
idiv
push
in
adc
add
xchg
and
div
aam
fnstcw
mov
pusha
nop
into
xor
rorl
jnp
or
sub
not
inc
pusha
mov
lret
xchg
stos
or
sbb
mov
push
xor
out
or
pusha
cmp
stos
push
and
outsl
cmc
cmp
mov
mov
push
adc
aad
adc
sarl
inc
dec
pop
or
push
cmc
and
push
xor
aam
jp
mov
testl
sub
out
mov
push
adc
and
cmpsl
or
outsb
mov
movsb
adc
push
fwait
or
in
sub
jae
add
cmpsl
test
mov
jmp
sub
cmp
inc
cmpsl
dec
daa
jns
mov
divl
sub
push
dec
js
xor
or
push
pop
sub
mov
aaa
mov
xor
lods
sbb
loope
inc
push
fs
dec
jo
and
pusha
out
adc
jle
lahf
pop
in
hlt
scas
pop
shll
push
in
sub
push
push
icebp
pop
popa
dec
jae
stos
xor
cli
mov
add
adc
in
jp
out
mov
push
mov
ret
push
cld
lahf
insb
mov
mov
mov
xchg
mov
pop
sahf
cmp
mov
push
cmp
sbb
inc
cmp
test
js
pushf
xor
pop
push
inc
jno
stos
loopne
in
fs
xor
dec
stos
fdivrl
or
and
mov
sub
dec
rorb
pop
and
dec
fs
push
inc
outsb
mov
inc
and
push
and
gs
push
jb
fnstcw
stos
and
mov
test
cltd
into
rorl
xor
sbb
test
mov
ret
mov
sbb
pop
add
xor
push
outsb
pop
inc
cvttps2pi
jbe
adc
xchg
movsl
fldenv
xchg
sub
outsb
pop
ret
push
int
jbe
fwait
hlt
out
and
lahf
mov
mov
push
or
xchg
jo
cmp
push
daa
dec
fnstenv
rcrl
xor
orl
out
lret
xchg
push
outsl
jl
sbb
sti
sub
fsubp
mov
hlt
adc
popa
and
jne
enter
fsubr
push
push
and
sti
popa
push
in
lahf
jmp
lds
mov
shll
into
in
adc
movsb
stc
adc
aam
das
mov
add
popf
pop
scas
push
cmp
loope
add
movsl
xor
loopne
xchg
int
pop
rol
addr16
xchg
adc
push
ljmp
xor
mov
xchg
stos
pop
mov
sbb
mov
jmp
and
cltd
push
lds
sbb
imul
lea
xchg
clc
mov
sbb
incl
mov
mov
inc
mov
test
test
jp
incb
int
cld
dec
jmp
sahf
stos
fbstp
mov
sbb
addr16
or
adc
insl
shrb
pop
and
jge
sarl
idiv
sub
xchg
xchg
push
lods
fsubs
inc
jmp
int3
and
pop
in
lea
popa
gs
and
mov
ss
mov
ret
jl
leave
std
push
in
ss
in
test
dec
push
push
ret
int
adc
mov
stc
insl
insb
sbb
leave
nop
adc
mov
mov
rorl
jb
das
lret
add
sbb
fsubl
lea
sub
outsb
sub
dec
dec
push
popf
xchg
sbb
insb
orl
lahf
outsl
or
shll
iret
or
faddl
cmp
pop
cmpl
add
fstpt
push
insb
dec
fistl
mov
adc
pop
test
loope
and
nop
les
or
jbe
or
lret
or
loope
lahf
into
aam
ljmp
testb
out
and
pop
adc
lret
jo
xor
and
adc
mov
std
mov
mov
xor
jmp
and
lret
cmc
idivl
mov
jb
push
stos
aad
aad
sbb
pop
adc
jo
pop
in
je
mov
rolb
int
sbb
pop
adc
inc
dec
sahf
fs
mov
pop
adc
jbe
mov
nop
mov
sbb
pop
adc
sbb
jo
lahf
pusha
or
pop
adc
gs
xchg
sub
movsl
sub
sahf
cmp
cli
dec
xchg
nop
mov
cli
hlt
call
pop
adc
test
inc
and
jno
movsb
ret
sti
lret
fdivrp
int
fs
idivb
add
or
fists
fdivrl
shl
fdivrl
push
or
adc
movsl
mov
gs
jnp
mov
or
mov
lea
mov
cltd
cmp
loopne
pop
call
mov
xchg
fs
xor
push
pop
sub
push
push
call
daa
adc
add
push
fistl
stos
cli
ftst
xchg
bound
repnz
jbe
cmpsb
pop
sbb
cmc
rcll
movsb
gs
sbb
mov
push
ds
push
test
adc
cld
in
enter
lods
dec
repz
rcrb
daa
sbb
xchg
loop
lahf
aad
sbb
and
mov
and
pop
adc
cmp
dec
repnz
lret
sub
pop
mov
data16
out
sbb
or
jg
inc
lret
into
sahf
sbb
mov
mov
xor
int3
ljmp
dec
cmc
stos
sbb
sub
insb
or
adc
mov
jb
dec
inc
lea
cltd
hlt
ds
mov
add
push
mov
mov
frstor
ror
repnz
int
jnp
dec
pushl
push
adc
loopne
xlat
sub
add
leave
pop
adc
outsb
inc
mov
jge
mov
mov
and
lret
add
insl
repnz
int3
xchg
push
adc
jg
ret
sub
inc
rol
cmpsb
sbb
and
popa
push
sub
pushf
adc
jl
out
in
add
jne
mov
lods
icebp
mov
in
loop
fildl
sub
aaa
and
jmp
inc
ljmp
pop
js
icebp
ljmp
add
adc
cwtl
les
adc
cwtl
les
adc
dec
aad
fistpl
fs
or
movsb
xchg
xchg
mov
dec
faddl
mov
shrb
jmp
aaa
addr16
xchg
das
in
adc
das
or
inc
push
in
lods
push
lods
push
sub
pop
sbb
scas
cli
loopne
jne
jmp
adc
wbinvd
scas
dec
add
aaa
aaa
repz
stos
fildll
push
inc
and
xchg
cmp
in
mov
push
lea
sbb
dec
pushf
aam
sub
fisttps
scas
ret
pop
xchg
jmp
pop
jno
xor
push
enter
inc
pushf
sbb
hlt
jb
push
xchg
insl
sub
sub
mov
imul
dec
mov
jns
xor
shlb
xor
adc
cmpsb
lock
mov
inc
bound
lods
sbb
inc
repz
cltd
push
out
jp
into
xlat
mov
les
jno
adc
jle
inc
xchg
js
or
add
add
jo
adc
mov
mov
fsubrl
push
inc
xor
test
add
inc
outsb
and
daa
mov
out
jo
int3
xchg
loopne
into
xor
ret
fisubrs
xchg
adc
daa
mov
adc
xor
cmp
repz
stos
dec
mov
dec
into
jo
inc
add
cs
and
add
popf
popa
push
push
das
ljmp
fwait
cmp
bound
aas
nop
jecxz
jae
pop
xchg
dec
lahf
mov
test
cld
js
gs
mov
test
sbb
call
cli
add
lods
pop
cmp
sub
sti
js
push
adc
ljmp
cli
lds
sbb
dec
xchg
mov
leave
aad
sub
sbb
sbb
gs
icebp
ss
and
imul
and
hlt
arpl
addr16
push
stos
punpcklbw
cmpsl
xor
iret
daa
adc
adc
imul
dec
add
add
sbb
and
call
xchg
push
adc
gs
ret
sub
push
push
and
jg
adc
pop
out
and
mov
ja
pop
andl
inc
sbb
test
dec
imul
add
push
cs
mov
pop
in
push
xchg
movsb
fcompl
pop
lcall
xor
and
mov
fsubrl
pop
push
pop
xor
filds
dec
inc
pop
adc
lods
mov
in
testb
stos
aad
rorl
and
fistpll
mov
repz
dec
addr16
cs
mov
imul
jecxz
outsl
adc
xchg
aaa
fmuls
ljmp
dec
jle
sbb
ljmp
jge
xor
lret
pusha
dec
jns
cmp
scas
pusha
inc
icebp
pop
ljmp
arpl
inc
adc
sub
and
adc
cmc
shrl
add
jmp
stos
fsubrp
push
pop
cmp
or
mov
mov
js
not
scas
rcl
enter
push
and
test
jns
repnz
popf
mov
push
lds
ja
in
aad
inc
inc
fsubl
outsb
imul
loopne
inc
xchg
mov
mov
pop
in
ja
mov
jne
sub
jl
pop
jg
adc
adc
aas
mov
mov
jae
jge
jp
and
cmc
sbb
pop
test
test
imul
repnz
adc
mov
into
jno
pop
das
or
push
fisttps
sahf
data16
sahf
xor
popa
bound
aaa
loopne
sahf
adc
or
cmp
jecxz
in
mov
mov
rcrl
pop
nop
sahf
pop
bound
pop
imul
pop
dec
cmc
in
xor
push
cmc
inc
imul
lcall
out
mov
mov
test
push
push
mov
push
mull
inc
or
insl
cmpsb
pop
fstpt
xchg
or
xchg
test
in
clc
and
hlt
push
ljmp
je
out
xor
aam
mov
mov
out
shll
test
dec
leave
push
mov
loopne
jmp
jae,pn
inc
jmp
mov
inc
nop
in
adc
inc
test
push
aad
push
rcl
loop
inc
andl
leave
mov
call
int
mov
sbb
pop
in
or
fcoms
push
adc
push
jle
dec
mov
mov
arpl
jmp
mov
mov
rcll
mov
cli
add
jb
cld
mov
in
ret
inc
mov
bound
ljmp
gs
mov
out
dec
shll
outsb
xor
mov
jle
pop
push
xchg
sarb
and
jp
int3
push
mov
sbb
add
repz
or
cld
sbb
es
xchg
mov
dec
out
pop
pop
test
sbb
jecxz
jmp
xor
push
test
cmp
mov
fdivl
or
cs
jno
adc
mov
push
cmpb
push
mov
sti
iret
ja
mov
sub
xchg
xchg
jge
pop
out
insb
adc
sti
cmp
out
xor
mov
iret
pop
jns
sti
jns
rorl
in
cmp
lock
mov
cs
xchg
lret
xlat
mov
bnd
add
pop
xor
pop
test
pushl
mov
jmp
mov
or
mov
cmp
sbb
and
pop
les
sub
mov
loop
jle
je
int3
mov
mov
hlt
push
push
mov
loop
xor
cmp
je
int3
mov
das
sub
push
je
stos
and
push
sbb
jmp
idiv
pop
jmp
jecxz
or
dec
aad
test
fsubrs
shll
pxor
mov
insl
sub
or
stos
fsubp
pop
and
stos
je
dec
pusha
movsb
mov
mov
mov
pop
mov
push
inc
push
sub
xchg
sti
cmp
out
and
out
xchg
push
cld
jne
mov
cli
push
mov
inc
jno
lods
pop
les
fidivrl
adc
iret
push
ds
popa
cmpsl
stos
sbb
mov
and
jmp
test
into
pusha
dec
jne
or
cs
int
adc
fcmovbe
stos
push
and
lods
add
cmp
mov
cltd
add
idiv
push
mov
cmpb
adc
cli
lahf
mov
and
dec
lods
data16
loope
mov
push
sub
mov
into
jp
mov
mov
int
imul
sub
mov
aad
aad
lock
xchg
imul
jns
stos
fstp
inc
mov
into
mov
int
push
call
or
negb
sbb
addb
popa
vmwrite
mov
adc
mov
xlat
lahf
aam
jp
aaa
sti
mov
shll
sbb
ret
mov
jo
xorb
and
push
fs
mov
lahf
adc
mov
sbb
mov
add
sub
inc
mov
or
mov
or
xchg
cmp
movsl
mov
jno
adc
jne
out
das
mov
loop
push
sub
daa
scas
push
mov
std
cld
jo
adc
inc
mov
push
xchg
cld
dec
lcall
pushf
in
fistpll
push
dec
xor
adc
sbb
and
add
sahf
xor
cltd
push
jle
inc
dec
mov
adc
mov
cwtl
cli
aad
leave
mov
dec
mov
sub
mov
cmpsl
pop
adc
adc
cmpsb
dec
adc
stos
cmpl
fnstenv
add
mov
loopne
loope
xchg
std
in
rcl
sub
inc
mov
fwait
outsl
dec
xchg
icebp
mov
jo
xorb
add
in
mov
cmp
adc
popf
ljmp
push
test
push
lock
fsubrl
push
adc
scas
imul
mov
leave
pop
adc
dec
or
aaa
jne
mov
and
lods
or
std
cmp
mov
cld
cli
adc
lock
jno
adc
ret
js
mov
add
xor
adc
xchg
arpl
lahf
pop
mov
mov
or
mov
adc
movsb
fadds
pop
jb
sbb
sub
clc
arpl
and
cmp
sub
add
sbb
cmpsl
and
test
arpl
ja
mov
scas
fcomip
lret
mov
adc
mov
jo
adc
cmc
gs
outsl
scas
lods
icebp
lret
xchg
pop
out
inc
stos
stc
lods
pop
ror
pop
jle
fdivrl
rclb
cld
sbb
shl
jle
inc
mov
stos
push
jmp
xor
adc
and
sbbl
fnsave
xlat
stos
push
stos
mov
adc
jl
xor
sbb
adc
inc
jg
arpl
cld
jo
adc
test
and
jmp
insl
test
jb
addl
enter
pop
push
stos
push
fbld
stc
mov
sbb
xchg
jge,pt
hlt
and
sbb
adc
push
stos
add
leave
push
test
sub
or
hlt
test
gs
mov
lock
sbbl
popa
ret
inc
jno
adc
ret
xchg
adc
or
fucomp
adc
les
and
out
push
std
sub
mov
in
in
push
adc
xchg
aam
mull
gs
mov
iret
leave
imul
pop
int
adc
push
xchg
mov
cwtl
pop
inc
lock
pop
jae
iret
nop
mov
and
lea
xor
push
add
loop
cmpsl
push
cmp
testb
fnstenv
sbb
mov
xor
xchg
mov
mov
cmp
jno
pop
aad
clc
imul
push
dec
in
mov
add
jle
mov
stos
aaa
lahf
mov
movsl
ret
inc
rcll
loopne
push
adc
cmpsb
scas
jge
xlat
push
and
imul
dec
or
mov
cmpsb
add
bound
push
daa
pushf
int3
inc
divl
daa
out
or
xor
movsb
sub
into
mov
lret
dec
cld
dec
xchg
add
pop
mov
inc
mov
mov
and
sub
jp
push
jge
inc
jo
mov
fcmovnbe
cmpsb
in
adc
mov
sbb
fimuls
in
imul
push
add
dec
push
add
fistl
pop
push
add
mov
je
add
mov
xchg
push
add
fistl
fistl
dec
push
add
add
push
add
lret
push
add
add
push
add
iret
push
add
dec
push
add
fistl
call
push
add
fistl
fistl
push
or
mov
mov
movsb
hlt
bound
mov
lods
ljmp
adc
lods
cmp
xor
lds
dec
shll
adc
lahf
sbbl
cmpsb
addb
adc
mov
or
sub
mov
je
mov
mov
mov
loope
push
jbe
mov
mov
adc
sub
xor
jo
std
loop
repnz
fwait
mov
add
lods
inc
jne
std
jb
lds
mov
adc
fs
ljmp
in
or
or
xor
mov
popf
mov
pcmpgtw
clc
aas
inc
dec
pop
pop
or
jmp
pop
push
sahf
jp
outsb
and
sahf
cmp
or
mov
pop
dec
mov
in
std
mov
cmp
shrl
pusha
xchg
roll
sub
data16
cmc
mov
xor
dec
fnstsw
push
test
pop
adc
loop
sbb
fsubrl
sub
repnz
outsb
mov
iret
mov
xchg
je
movsl
fsubp
push
xchg
add
incl
lahf
xchg
mov
ss
shrl
inc
fisubrs
out
push
lea
pop
dec
arpl
test
dec
mov
repnz
mov
xlat
mov
or
pop
mov
fisubl
scas
sti
test
dec
mov
sti
scas
sub
adc
rcr
and
imul
jmp
nop
cmc
gs
jno
xchg
mov
jae
mov
sub
dec
cmp
and
shl
divb
inc
pop
mov
bnd
pop
out
dec
add
xor
cwtl
mov
push
mov
mov
sti
gs
mov
jae
jb
cld
pop
jecxz
lea
jle
and
jb
jmp
cmp
mov
aaa
xchg
clc
div
lds
or
pop
ljmp
xor
fisubs
sub
movsl
sub
xor
jecxz
adc
or
mov
inc
add
outsb
test
outsl
in
ja
cmp
clc
lods
clc
pop
movsl
cltd
mov
cmc
mov
jle
inc
xchg
inc
fsub
inc
cmpsl
js
xor
out
lock
xchg
leave
cwtl
add
pop
cmpsb
mov
or
fldt
lds
dec
pusha
dec
jbe
jg
cmc
mov
mov
iret
mov
xchg
cld
fistps
mov
jl
mov
out
dec
mov
sub
bound
pop
mov
sub
idivb
inc
jmp
stc
or
inc
mov
test
push
xchg
push
movsl
rcl
xchg
psrlw
mov
shrb
or
push
adc
jo
mov
fucomp
stos
sub
insb
ja
adc
lcall
les
popf
xchg
je
fistpl
pop
icebp
movsb
push
sbb
cmp
cmpsl
adc
sbb
sbb
cmp
push
lds
hlt
mov
mov
adc
popf
xchg
stc
je
arpl
pop
fs
cmpsl
sbb
dec
mov
xchg
sub
add
and
xor
push
adc
fsubrs
in
jp
lcall
mov
js
in
mov
push
mov
ja
jno
outsl
mov
in
sar
cmp
cmp
jl
enter
popf
fsubs
cltd
cmp
jge
and
mov
fnstsw
sub
inc
ljmp
jmp
inc
xchg
mov
cmp
mov
out
mov
fcoms
addr16
in
icebp
jns
dec
push
outsb
mov
cli
insl
mov
xor
rcl
push
jg,pt
sub
jnp
mov
push
gs
mov
iret
jae
decl
fisubrl
rolb
lret
iret
cmp
or
jg
mov
pmullw
adc
nop
daa
xchg
in
out
in
sub
insb
xor
xchg
ss
dec
xchg
adcb
aad
scas
insb
sbb
push
data16
inc
cmp
scas
inc
enter
cmp
push
mov
mov
jns
xor
movsl
popa
out
jne
add
mov
xor
and
ds
and
call
pushfw
mov
fs
aad
mov
or
mov
std
push
ds
xor
cmp
pop
xor
cmc
std
test
jle
cmc
in
in
pop
dec
out
xor
pop
loop
stc
test
cmc
or
jl
cs
call
and
mov
outsb
add
or
mov
push
pusha
fistps
xchg
fnsave
ljmp
les
lds
and
sbb
push
jno
jg
inc
add
test
ja
addb
dec
dec
lret
mov
pushf
movsb
dec
insl
test
sbb
jnp
pop
sbb
xor
cld
stos
cltd
fcoms
rol
test
gs
popf
jg
iret
push
js
jno
mov
stos
inc
fcoms
pop
xchg
and
sub
cmp
out
add
xor
jo
mov
xchg
filds
sub
xchg
imul
mov
lds
push
pop
mov
cli
mov
fdivrl
mov
outsb
mov
mov
imul
push
jb
mov
insb
or
cmpsl
sbb
and
push
pop
out
mov
popf
das
xchg
xlat
pop
rcrl
adc
pop
lret
jae
mov
loopne
push
mov
data16
and
mov
mov
adc
movl
cwtl
add
adc
ljmp
sub
mov
cmp
and
sbb
daa
and
jle
cmp
popa
pop
stc
sbb
sahf
fstl
pop
adc
int3
and
mov
sub
std
adc
int
dec
pop
jb
daa
in
push
and
insl
or
mov
or
repnz
or
xchg
mov
lret
mov
cmpsb
gs
mov
xorb
mov
ljmp
test
xchg
sub
adc
lds
push
std
jp
or
std
add
pop
xor
inc
lds
xchg
lods
jbe
sbb
add
int3
ret
or
lahf
ret
pop
xor
fildll
mov
pop
insb
hlt
pop
mov
mov
dec
insl
test
cltd
lds
add
cmp
imul
push
cmp
pop
lds
inc
popa
inc
bound
cmp
pop
mov
scas
adc
je
push
mov
mov
xchg
adc
inc
bound
test
jbe
add
stos
aam
addl
icebp
sbb
add
lea
sahf
mov
int3
push
mov
mov
jne
stos
pop
jno
mov
adc
lcall
jb
aad
in
inc
lret
lods
pop
shl
push
mov
cmp
and
mov
and
cmp
idivb
or
mov
lods
movsl
mov
xchg
ret
test
and
xchg
xchg
jbe
in
pop
mov
xor
fldenv
push
lods
shl
push
ljmp
jmp
dec
dec
lods
test
pop
insl
mov
add
stc
mov
aas
or
test
or
movsl
loopne
psrld
inc
xchg
adc
ja
data16
gs
xor
shll
subl
sub
sub
adc
insb
pop
les
imul
cld
sub
ds
and
fstl
push
cli
push
xchg
mov
mov
outsb
adc
mov
movsl
stos
cmp
mov
test
pusha
je
pop
bsf
ds
mov
cltd
adc
sub
cmp
dec
jbe
pop
es
arpl
rorl
imul
je
fistl
test
dec
roll
popl
jl
push
fwait
popa
xchg
lcall
cli
mov
movl
and
mov
sbb
aad
inc
sub
je
mov
fdivs
xchg
repz
outsl
lcall
mov
and
adc
loop
dec
mov
sub
iret
ret
adc
pusha
dec
jne
cmp
or
test
stos
fsubrl
push
out
test
ja
addb
dec
cltd
hlt
jp
adc
fmuls
adc
pop
les
mov
mov
jb
jo
xchg
mov
stos
adc
pop
out
clc
xchg
jmp
imul
pop
xor
xor
ror
pop
sub
out
jmp
leave
rorl
cld
arpl
dec
mov
lret
mov
pop
and
repnz
push
jg
and
fdivp
arpl
cmc
mov
and
sbb
lods
pusha
ret
mov
mov
pop
mov
push
sub
mov
pop
frstor
movsb
std
fstp
mov
test
mov
mov
out
cwtl
xor
push
push
shll
movsb
push
cmpsl
dec
sahf
hlt
mov
xor
adc
mov
hlt
int
adc
pop
mov
sbb
fwait
movsl
and
adc
sbb
pop
pop
in
push
push
shl
xchg
or
xchg
divl
cs
sahf
cmp
mov
inc
pop
mulb
outsb
in
loope
mov
in
dec
and
fcomps
jnp
out
fistpl
jns
jg
pop
stos
lds
mov
scas
mov
adc
fsubr
clc
or
add
sbb
sub
inc
and
mov
ret
stc
mov
aad
pop
push
nop
ret
cld
sub
mov
outsb
and
push
and
movsl
in
xchg
outsl
sbb
xor
adc
add
ficoms
cmpsl
sub
push
push
es
addb
xor
ja
lcall
xlat
repnz
shll
push
adc
mov
inc
clc
mov
xchg
mov
xchg
pop
lods
cmpsl
cmpsb
imul
popf
push
out
test
mov
mov
test
in
push
adc
push
xor
dec
inc
ffree
add
mov
mov
inc
push
in
inc
cmp
test
ret
mov
adc
mov
sbb
inc
mov
gs
push
sbb
jne
popf
out
sub
and
fildll
push
adc
and
stc
dec
dec
xchg
xor
jmp
mov
pushf
xlat
xor
mov
pop
push
dec
xchg
in
mov
pop
push
and
adc
ret
ds
jg
stos
test
adc
jmp
adc
fimull
fwait
insb
lods
repz
divl
push
adc
lds
sarl
outsl
cmc
ret
inc
xchg
add
jae
adc
or
mov
je
outsl
mov
scas
lret
add
jge
inc
addr16
xchg
push
adc
sbb
lods
out
fidivs
imul
lretw
jnp
pop
adc
cmpsb
push
lds
mov
add
fmuls
xchg
cmp
es
mov
loopne
shlb
xchg
sti
dec
pop
or
scas
cmc
bound
lcall
jns
add
pop
jns
fwait
cld
subl
mov
cli
ret
pop
push
pop
ja
pop
dec
out
xlat
lahf
rcl
jo
xor
adc
push
hlt
testb
jge
adc
jbe
inc
inc
sbb
pop
or
cmpb
dec
jge
lcall
pop
adc
xor
inc
repnz
adc
mov
adc
push
push
sub
pushf
cli
fdivr
inc
push
inc
outsb
idivl
mov
push
adc
gs
aad
sub
xor
and
jae
adc
pop
dec
cmp
mov
ja
inc
andl
inc
mov
ljmp
push
mov
sahf
ficompl
loopne
mov
into
adc
scas
fists
lods
inc
xor
movsb
mov
xchg
dec
loopne
jge
xchg
movsb
mov
daa
and
icebp
push
rorb
inc
jg
in
cmpsl
push
jecxz
mov
loopne
ljmp
aad
stos
and
mov
jl
aaa
mov
mov
daa
sub
pop
scas
insb
repz
fsubrl
daa
xor
or
insb
mov
arpl
sub
fisubs
std
fistpll
lock
addr16
xor
mov
out
push
push
pop
and
scas
fstl
jne
jl
aam
xor
inc
ror
divb
xor
movsb
fsubp
push
nop
dec
rorb
cmp
hlt
addr16
mov
lods
lret
push
jbe
jo
cld
pop
jmp
add
mov
pop
and
jnp
pop
fdivrl
aas
jb
add
shll
pop
mov
roll
cmp
mov
repz
ja
mov
cmc
sysexit
pop
test
pop
sub
adc
enter
inc
xlat
ss
and
movsb
mov
test
je
aam
sbb
outsb
adc
or
push
jp
orb
and
sbb
jmp
stos
mov
xchg
mov
jno
fstpl
imul
sub
mov
addr16
push
sub
mov
jno
jae
int3
mov
mov
iret
popa
add
fcoms
sbb
lods
dec
ja
arpl
dec
test
sub
mov
fcomp
pop
push
pop
xor
sub
dec
adc
lcall
call
in
lock
inc
nop
fistpl
and
cli
push
mov
popf
nop
lret
das
mov
cmp
outsb
sub
dec
adc
cld
jno
std
test
idivl
es
jae
push
ljmp
pop
and
int3
jecxz
xor
adc
aad
sub
cmpsl
and
scas
and
cmpsb
mov
inc
loope
inc
add
adc
xor
sub
jg
mov
cld
push
data16
adc
cmp
sub
repnz
adc
push
inc
nop
mov
cmpsl
pop
jmp
cmp
jne
les
shl
dec
andb
dec
loop
jb
or
or
pop
in
mov
lea
js
outsb
dec
or
nop
fildll
dec
in
scas
jb
dec
xchg
fldenv
repnz
in
in
xchg
insb
sbb
jo
mov
je
lock
and
in
jne
xchg
mov
push
sbb
xor
lods
inc
cmp
scas
mov
cmp
out
rcrb
call
mov
loop
cmp
ret
pop
das
xchg
push
jle
cmp
adc
repz
push
sbb
or
loop
sub
pushf
sahf
insl
cmc
mov
push
pop
adc
xchg
or
test
add
addr16
clc
sbb
mov
pushf
rolb
add
mov
jne
jne
scas
pop
insb
dec
jbe
push
lret
mov
ljmp
jne
pop
sub
lods
mov
jmp
add
enter
pop
mov
cmp
jecxz
xor
xchg
cmp
pop
ret
sub
loop
push
jnp
xor
xchg
ret
cli
mov
test
shll
and
push
stos
fdivrs
lock
push
idivl
mov
pop
pop
out
add
xchg
xchg
testl
lock
mov
or
repnz
inc
pusha
nop
icebp
ljmp
sbb
xor
sbb
cmp
sarl
jb
repz
fidivs
and
sbb
rolb
mov
pushf
mov
jb
xor
inc
xorl
push
adc
test
and
fstps
inc
lea
loope
mov
add
jmp
sub
mov
ss
ljmp
mov
jg
lret
out
inc
mov
lock
jne
lock
mov
sub
or
addb
popf
jo
pop
cmp
push
inc
jg
push
cmpsl
ror
lock
and
outsb
ret
jge
scas
and
sbb
xor
adc
add
sbb
mov
push
out
cwtl
push
pop
lea
add
dec
stc
sub
mov
push
lods
and
mov
and
add
xchg
lock
cmp
lods
jmp
pop
cmp
dec
in
fdivl
adc
and
lea
outsb
mov
sub
int3
repnz
adc
ja
incb
iret
lret
adc
mov
or
fwait
mov
jns
jo
leave
pop
in
pop
pop
adc
sub
adc
gs
mov
fldl
fidivrl
pop
jg
xchg
sub
jb
jmp
in
and
add
cmpsl
or
mov
int
mov
and
pop
stos
push
add
aas
xchg
cli
adc
sti
imul
xlat
jl
ret
mov
inc
mov
jbe
sub
cmp
sbbl
mov
push
jle
jbe
xor
sahf
dec
fmuls
aas
aaa
add
inc
sub
xchg
xor
sbb
in
cltd
stos
add
je
movsl
xchg
fsubr
inc
test
adc
sbb
scas
cmpsb
add
xor
push
mov
popf
andb
in
jne
lahf
aaa
stos
fistpll
test
mov
lret
mov
fs
in
out
and
adc
jbe
mov
adc
sbb
les
pop
mov
leave
cli
loopne
sarl
inc
idivl
jae
movsb
mov
push
adc
pop
push
call
mov
and
xor
push
lds
int
loope
jns
mov
xlat
outsb
dec
mov
std
imul
in
xchg
xchg
and
cmp
xchg
xor
push
js
dec
lsl
dec
push
xor
call
test
jns
adc
loop
mov
cld
sub
xchg
scas
movsb
addl
add
mov
pop
popl
adc
pop
fidivs
dec
xchg
sti
push
sub
xor
arpl
inc
repz
and
sub
sub
loope
jo
arpl
into
enter
dec
arpl
push
stos
mov
xor
imul
sub
pop
cmp
gs
or
jne
in
sti
mov
mov
add
mov
icebp
mov
rcll
out
std
xchg
daa
iret
loope
jmp
sub
and
dec
rclb
dec
inc
xchg
sub
fldl
xor
mov
jo
movsb
aad
lret
mov
psrld
push
mov
cmp
and
scas
hlt
stos
mov
xchg
or
add
xor
cld
stos
ficompl
insb
push
test
xchg
aam
sub
inc
sub
dec
movsl
fsts
mov
iret
mov
ss
call
mov
iret
into
adc
test
add
inc
lods
pop
ret
sub
sbb
pusha
sar
fsubl
push
sbb
jle
addr16
push
stos
punpcklbw
xor
adc
in
sbb
imul
loope
daa
sbb
fdivrl
test
mov
iret
jge
jg
frstor
mov
insb
stos
push
stos
fbld
xor
lahf
cmp
cmpsb
pop
das
hlt
push
mov
mov
add
sub
jb
dec
enter
insl
outsl
jno
and
sahf
cmp
push
lret
pusha
and
iret
and
aaa
imul
pop
push
mov
fwait
scas
insl
sahf
mulb
divl
adc
ficoms
cmc
test
or
aam
negl
mov
rorb
jns
lret
mov
add
les
ds
push
adc
fidivl
idivb
fucom
inc
bound
sub
xchg
push
out
fdivrl
mov
lahf
stos
adc
dec
fisttpll
dec
push
stos
push
and
stc
xor
push
std
lcall
icebp
adc
dec
add
stos
push
stos
stos
fidivrs
or
add
and
sbb
call
jmp
icebp
mov
xlat
test
out
pop
or
xor
fildl
insb
or
inc
add
insl
sbb
add
mov
sbb
les
setbe
pop
cmp
rolb
lods
sbb
mov
dec
mov
mov
push
ret
rcll
pop
and
add
lahf
or
mov
rcrb
les
out
xchg
adc
xlat
or
ljmp
call
jl
aas
ljmp
ja
inc
shlb
mov
bound
ljmp
pop
mov
sbb
mov
push
pusha
cwtl
xchg
lods
mov
or
fs
push
outsb
and
mov
mov
std
repz
decl
pop
inc
add
fdivr
push
dec
popa
mov
mov
xchg
aam
addr16
or
cmp
xchg
test
pop
push
daa
or
frstor
testb
clc
pop
ret
sub
sahf
std
hlt
mov
sub
push
aas
add
cmp
loope
jb
cmp
enter
dec
xor
sub
cmp
gs
stc
das
xchg
loopne
outsl
loopne
mov
dec
adc
dec
mov
and
adc
stos
pop
je
imul
cmc
repz
fcmove
xor
arpl
adc
mov
lods
xchg
mov
mov
icebp
test
ret
es
and
rcr
fildll
jb
cmpsb
jmp
push
dec
xlat
enter
sahf
imul
lock
data16
nop
daa
lret
jns
test
inc
cmp
popa
or
lret
icebp
mov
jns
cltd
or
mov
fidivrs
push
adc
push
jmp
mov
mov
pop
test
mov
fisttps
sbb
pop
inc
das
cltd
mov
shrb
mov
in
movb
vmread
bound
fisubs
jne
outsl
or
jnp
out
xchg
repz
pusha
dec
xchg
adc
pop
shlb
push
movsb
jecxz
push
gs
sub
iret
ret
adc
pusha
dec
jne
mov
dec
or
test
pop
inc
pop
pop
cmp
push
pop
jb
dec
pop
add
shl
movsb
dec
sbb
mov
push
stos
faddl
cmp
test
pusha
sar
loopne
adc
test
adc
add
sbb
mov
cli
cmpb
jnp
jns
in
aad
jb
and
andl
repnz
cwtl
add
xchg
lock
cmp
jae
mov
leave
xchg
and
and
in
fdivl
adc
hlt
call
fldenv
mov
and
jnp
sub
addb
ret
ljmp
push
adc
test
sti
add
adc
outsb
sub
cli
mov
cli
sbb
push
jb
cmp
push
stos
in
and
xchg
add
scas
add
and
mov
adc
inc
shlb
pop
fstp
movsb
rclb
test
jnp,pt
mov
inc
xchg
jge,pt
hlt
mov
pusha
adc
mulb
push
stos
filds
es
jmp
test
sbb
sbb
imul
push
adc
jbe
stos
inc
sbb
add
sti
dec
ja
mov
rorb
enter
push
adc
push
in
fidivrs
push
xlat
int
cmpsb
ret
sub
jne
outsl
xor
xor
adc
out
jno
dec
repnz
adc
adc
sbb
outsb
lret
out
imul
rcl
inc
add
aas
or
sbb
dec
lcall
jge
xchg
in
ffreep
xor
fcmovu
push
aam
es
mov
mov
xchg
ret
loop
cld
stos
clc
or
xchg
jo
push
mov
mov
add
addr16
push
test
sub
sub
repnz
pop
cmc
fisubl
dec
imull
test
lcall
bound
out
mov
enter
test
fstps
mov
out
adc
cmp
push
aaa
cmp
mov
xchg
jo,pn
add
imul
xor
mov
pusha
lds
ss
stos
addb
in
xchg
stos
insl
fmuls
cmc
mov
cmpsl
int3
mov
out
cmpsl
enter
sub
and
test
inc
nop
mov
mov
jmp
in
notl
mov
aaa
and
cmp
mov
mov
jmp
sub
sti
roll
cltd
stc
out
hlt
int3
mov
aam
sub
mov
outsb
inc
adc
popl
pop
jne
dec
fdivp
es
ljmp
in
xchg
insb
jnp
mov
inc
or
jae,pn
xchg
mov
ss
andb
cmp
mov
or
pop
cwtl
xchg
inc
add
std
cmp
rorl
jbe
add
push
hlt
jecxz
cmpsb
mov
das
pop
mov
stos
pop
arpl
lret
dec
std
mov
or
ret
aaa
lods
ljmp
or
jne,pn
fs
fucomi
addr16
adc
cmp
cmp
jmp
outsl
mov
jmp
jns
enter
fcmovb
ljmp
push
mov
pmaxub
test
sbb
mov
xchg
jne
xchg
jmp
lock
mov
cmp
out
jne
lahf
scas
fdivrl
out
ds
aad
dec
sub
test
insl
jae
insb
inc
mov
clc
std
hlt
call
arpl
xchg
pop
lods
fsubs
test
mov
outsl
out
fdivrl
divb
fimuls
pop
and
outsl
sarb
dec
sahf
cmp
push
ret
cltd
xor
xchg
and
sar
int
idivb
cmc
or
and
jae
mov
inc
xchg
mov
push
nop
popa
fsubl
test
stos
add
mov
jmp
divb
divps
cmpb
shrl
add
push
and
hlt
mov
ja
fwait
and
sbb
ljmp
push
mov
mov
scas
push
incl
mov
stos
fwait
or
pop
jns
jecxz
imul
rorl
mov
and
repnz
adc
push
xorb
pop
cmpsl
xor
push
hlt
loope
mov
frstor
imul
xor
jmp
or
push
cmp
inc
mov
push
daa
sbbl
adc
adc
push
in
pop
scas
mov
pop
adc
and
xchg
movsl
push
repnz
sub
iret
ljmp
cmpsl
sub
in
bound
and
scas
cmpsb
cs
mov
add
rcl
push
sbb
sub
lock
inc
pop
fwait
int3
xor
out
inc
xlat
xor
xchg
icebp
outsl
loope
xchg
adc
pop
push
dec
push
data16
inc
lea
mov
scas
int3
int
mov
shrl
jbe
fwait
push
aas
stc
lahf
out
cmp
inc
call
adc
and
scas
fsubrl
push
adc
jae
int
and
scas
lcall
fsts
push
scas
and
adc
jo
scas
insl
pop
pop
rclb
cmp
jge
mov
fisttpl
mov
xor
adc
and
mov
xor
adc
and
bound
adc
negl
sahf
ds
jno
mov
lods
sbb
push
jmp
sub
adc
mov
and
repnz
adc
jne
add
dec
faddl
ret
pop
adc
adc
insl
fsubrs
dec
popf
sub
jns
dec
xchg
cli
cli
lock
loopne
and
adc
lret
in
pop
jae
dec
outsb
jns
xor
jle
movb
adc
push
inc
cmpsl
pop
test
std
imul
mov
xchg
sbb
jg
out
pop
xlat
js
popa
and
shll
xchg
pop
jae
mov
sub
mov
sti
pop
subl
into
push
in
mov
pop
cwtl
jae
popa
std
loope
test
fidivrl
add
fdivrl
push
or
and
jae
and
out
xchg
jg
icebp
sub
ss
test
in
inc
cs
je
inc
fsubp
call
cmp
scas
mov
jle
push
jno
repz
insl
jne
push
dec
jle
inc
xor
fs
js
mov
mov
adc
neg
rcll
mov
jns
inc
loop
sbb
popf
bound
or
adc
inc
test
lret
sbbb
cmp
xchg
push
adc
push
cmpl
xor
inc
mov
rcrb
inc
sub
mov
loop
sub
adc
jle
inc
repnz
adc
jno
cmp
xchg
push
cmpsl
pop
mov
popa
fidivrl
cmp
inc
add
data16
loope
and
dec
mov
xor
orl
cs
aam
cmpsl
cmp
fadds
es
hlt
jge
fldcw
add
test
mov
out
imul
fdivl
jnp
sahf
fwait
mov
sarl
test
pop
mov
jns
and
adc
lods
lock
cmp
mov
or
fistpl
pop
and
push
test
and
xor
jl
mov
pop
jecxz
dec
pop
sbb
in
push
push
and
fsubrs
cmovle
lret
iret
jmp
inc
lret
and
aad
adc
lods
xchg
out
lahf
mov
repz
mov
mov
decb
cwtl
aad
mov
inc
xchg
sub
adc
arpl
and
mov
jno
sbb
jecxz
mov
dec
hlt
bswap
fisubrl
ds
mov
rorl
or
in
data16
pop
inc
es
lods
pop
int3
pop
sub
and
mov
or
in
bound
sub
sti
push
adc
add
icebp
push
imul
xor
fistl
lods
and
jecxz
xchg
sub
and
insb
add
lea
pop
push
push
xor
xchg
mov
ss
dec
leave
insb
sub
sbb
hlt
mov
int
inc
imul
cmpsl
push
stos
push
test
cmp
insl
pop
sbb
cmc
ds
cli
sbb
jge
inc
inc
dec
mov
pop
mov
adc
icebp
push
pop
js
lea
cmc
data16
jle
mov
inc
arpl
mov
stos
and
lods
cmpsb
xchg
mov
std
mov
and
test
dec
mov
pop
mov
adc
hlt
or
pop
pop
ja
lock
or
jnp
cmpsb
test
mov
inc
cmp
sbb
xor
jae
das
fs
mov
dec
test
xor
xor
xchg
decl
jecxz
ds
insl
fimull
push
jge
mov
repnz
cli
push
cmpsl
xlat
inc
mov
fimuls
lahf
fcompl
shr
jle
sub
mov
dec
das
int3
fstpt
inc
int3
pop
inc
mov
stos
jae
into
mov
xor
xor
ljmp
or
cmp
popa
les
hlt
je
aam
mov
mov
push
pop
enter
dec
bound
and
nop
mov
fdivl
and
in
push
mov
jbe
lock
xchg
mov
pop
fsubs
push
mov
sbb
cmp
shrl
leave
into
mov
jno
sub
mov
jo
imul
ja
mov
adc
adc
insb
sti
push
outsl
adc
and
pop
adc
or
dec
xchg
ret
pop
cmp
jmp
call
flds
mov
mov
loopne,pn
xchg
sbb
in
dec
orb
adc
push
movsb
fisubrs
subl
shll
fsubs
into
scas
insb
mov
lret
add
sub
sbb
test
inc
ss
arpl
pmulhuw
jmp
jl
fbld
ret
into
or
jge
mov
push
xor
test
out
xor
mov
jmp
sbb
jmp
mov
ss
add
dec
les
xchg
pop
mov
jno
cmp
inc
xchg
sbb
pop
mov
aad
fdiv
inc
mov
sbbb
lret
into
div
pop
hlt
inc
push
int3
movsb
ja
cmp
aas
je
test
ret
ljmp
mov
sti
hlt
stos
dec
mov
scas
and
mov
fdivrs
test
mov
cmc
aam
push
pop
cmp
push
cmp
test
pusha
roll
inc
lea
push
stos
push
and
incl
push
jae
lods
iret
das
mov
mov
daa
inc
stos
add
pop
jbe
jnp
mov
movsl
add
sub
inc
lods
popf
sub
fwait
insb
adc
mov
push
and
shll
mov
imul
pop
add
mov
ret
loop
out
clc
mov
xchg
xor
subb
test
std
cmp
pop
test
push
popa
ret
loop
mov
xchg
jle
lahf
pop
int
int
dec
push
mov
inc
ret
push
lods
rcrb
jnp
jl
aam
and
xorb
andl
sub
lahf
mov
daa
push
push
jnp
sbb
sbb
call
push
flds
or
or
xchg
cmp
call
idivb
int
stos
xor
nop
push
mov
divl
push
ret
ret
dec
pop
addr16
mov
movsl
cmpsl
int
icebp
ss
mov
daa
jnp
pop
mov
jle
and
inc
insb
mov
pop
movsb
scas
adc
fsqrt
fisubs
adc
lock
push
mov
cmpsl
lret
sahf
aad
ja
adc
movsb
cwtl
jb
mov
cmpsb
pop
mull
push
loopne
xchg
pusha
dec
jno
or
pop
cmp
scas
push
testl
adc
sarl
jl
sbb
adc
andl
pop
stos
fiadds
mov
test
and
jne
das
mov
mov
push
pop
sub
repnz
lds
mov
in
fstl
inc
movsb
push
scas
loopne
mov
in
mov
jne
ja
or
rcll
imulb
imul
mov
mov
xor
mov
push
xor
fiaddl
das
push
dec
aam
sbb
popf
add
aam
jl
js
lret
jmp
jne
imul
adcl
ss
rolb
dec
mov
inc
inc
adc
and
hlt
loop,pt
jnp
jge
hlt
sbb
cmp
jp
loopne
and
xchg
push
inc
push
mov
je
fdivrs
jl
xchg
or
aad
inc
jb
insb
popa
pop
rcrl
adc
nop
xor
rcll
mov
fsubs
sbb
out
fsub
imul
lahf
mov
cmp
mov
pusha
xor
loopne
xchg
out
sbb
sbb
popa
push
jne
std
mov
push
adc
push
adc
and
movq
repnz
xchg
pop
cmp
lret
xchg
push
out
adc
dec
and
push
mov
mov
mov
xchg
sub
sbb
popf
xchg
mov
jb
outsb
jecxz
ficoms
shrb
xchg
sub
push
scas
pop
cmp
pop
cmp
insb
inc
push
sbb
bnd
insl
push
pushf
mov
test
out
lods
sub
xor
and
push
sahf
ja
or
push
add
mov
add
insb
sub
add
xchg
nop
push
addr16
add
fs
data16
mov
sub
jge
cmp
int
mov
int3
xor
lods
sbb
sub
popa
in
sub
aad
push
rcll
xlat
sar
or
addb
out
ds
pop
stos
lods
pop
aam
mov
xor
lock
mov
incl
inc
ret
xor
mov
and
cwtl
cmpsb
mov
sub
xchg
mov
sti
aad
lret
cwtl
pusha
dec
xorl
gs
ret
and
adc
jl
stos
aam
xor
iret
shlb
scas
and
stos
inc
xor
inc
or
push
test
inc
jae
pop
mov
push
pop
daa
add
lds
out
xchg
mov
sub
push
lock
iret
lahf
ds
lock
repnz
push
lods
pusha
push
movsb
xchg
mov
sar
idiv
ja
roll
mov
jg
xlat
bound
push
and
mov
push
jmp
stos
mov
popa
hlt
lret
frstor
cmp
mov
dec
imul
fcom
jb
mov
or
pop
out
fs
push
and
scas
pop
and
mov
adc
test
iret
insl
xchg
int
pop
cs
xchg
inc
cmp
sbb
fsubrs
sub
int3
push
insb
xchg
mov
cmp
stos
mov
pop
cs
test
cmp
or
iret
jbe
jge
hlt
gs
scas
push
fdivp
ficompl
push
shrl
lock
xchg
ret
repnz
stos
test
insl
jns
in
repz
pop
insb
lret
push
repz
jne
ja
in
mov
cmp
cmc
lods
lret
xchg
jae
xchg
mov
and
bound
jbe
push
mov
lret
pop
inc
js
imul
inc
shll
mov
cltd
cli
mov
js
fcmovnbe
repnz
inc
insb
xor
cmp
pop
ret
and
or
popf
mov
lock
push
jg
scas
jnp
cmp
mov
daa
pop
incl
lock
test
adcl
mov
ljmp
int
sbb
test
cmpsb
fwait
sbb
mov
rcrl
into
cld
adc
roll
int
xor
lods
jg
out
inc
cltd
fcmovne
test
in
xchg
test
shl
jle
dec
add
mov
sub
adc
jg
jecxz
in
cmp
or
push
test
xchg
sub
sahf
aas
clc
je
or
ja
enter
arpl
push
xchg
jns
sub
fbld
shlb
std
xchg
fdivs
lods
add
fwait
mov
lea
popa
mov
daa
and
mov
or
cmp
rolb
mov
push
fcomps
mov
push
mov
decb
push
or
pop
stos
mov
in
fildl
pop
dec
out
or
mov
push
inc
ja
ret
inc
cmp
mov
pop
cmp
xlat
fwait
push
testb
hlt
mov
fwait
xor
ss
fnstcw
fldenv
mov
or
sti
jecxz
or
xchg
sub
inc
pop
push
push
test
adc
ret
lds
ficoml
fmuls
notl
cmp
cmp
cmpsb
jae
fs
or
jle
xlat
test
inc
adc
test
mov
add
cli
xchg
bound
rolb
or
mov
pop
repnz
adc
movsl
repz
adc
fisubl
in
dec
movsb
mov
pop
xor
loope
sub
mov
jl
sbb
jge
std
popf
in
sbb
cwtl
pop
pushf
fbld
aaa
icebp
inc
rcrl
xlat
cmp
jge
leave
adc
iret
dec
jmp
xor
mov
add
inc
add
movl
in
sub
mov
and
out
push
cld
jns
mov
push
jmp
or
push
stos
and
dec
ret
push
and
jnp
add
xor
sti
or
in
jecxz
mov
pop
test
push
and
mov
cli
dec
or
jle
imul
incl
xor
outsl
mov
inc
outsl
add
pop
movsb
jge
push
inc
daa
out
add
sbb
loop
xchg
cmp
add
sub
out
repnz
leave
add
stos
push
add
fsubp
mov
stos
and
shl
mov
xor
push
add
push
and
jae
sub
xchg
dec
sub
mov
in
mov
outsb
aad
and
jge
popf
cmp
out
and
stos
outsl
push
and
mov
loope
repz
mov
push
test
mov
loopne
movsb
mov
clc
push
lret
inc
push
push
stos
push
fsubr
mov
mov
jae
iret
lahf
gs
loopne
cs
stos
gs
aas
stos
ds
cmp
push
adc
mov
sbb
shll
pop
adc
add
fists
loop
adc
xor
pop
inc
sub
pop
push
xor
lret
add
push
inc
pop
pop
dec
sahf
mov
lock
adc
bound
loope
flds
adc
xchg
mov
sbbl
nop
stc
les
ret
pop
les
adc
jae
lret
fs
mov
push
xlat
pop
pushf
sar
rolb
in
adc
andl
sbb
fstpt
push
and
mov
rcll
inc
cmp
arpl
push
mov
pop
adc
adc
imul
jp
lds
lahf
fwait
inc
popa
push
mov
pop
adc
in
cmp
pop
adc
lds
mov
in
add
out
and
sahf
and
aas
in
jae
in
addl
xlat
push
jmp
push
enter
stos
cmp
mov
filds
adc
mov
jno
adc
or
jb
xchg
dec
mov
pop
adc
lcall
sbb
mov
cmp
stos
pop
movsl
lock
adc
add
push
mov
jne
fstpt
add
ja
movsb
inc
add
fidivl
pop
push
lods
es
int
ret
inc
mov
sub
jb
jae
jno
push
loop
imul
cmp
adc
lods
xchg
pop
je
adc
adc
mov
pop
popf
xor
sbb
adc
adc
pop
push
cmp
mov
inc
pop
sub
out
mov
sub
push
gs
jae
rep
outsl
push
jo
insl
push
ljmp
andb
es
inc
sahf
dec
dec
push
add
adc
lods
lock
mov
out
cmc
mov
xchg
adcb
scas
mov
and
xchg
jmp
jo
adc
mov
fwait
loop
mov
dec
nop
or
adc
ret
out
xchg
filds
adc
add
pushf
xchg
enter
andl
mov
adc
mov
mov
mov
xchg
movsb
sub
movsl
lods
cmp
out
xchg
xchg
sbb
xor
imul
ljmp
push
inc
push
xchg
add
push
lock
outsb
sbb
popf
pushf
xor
xchg
adc
adc
lahf
jp
cmp
add
xchg
cli
add
cli
repnz
mov
sub
pusha
lret
test
in
fcoml
sub
pusha
mov
jns
insl
in
pop
mov
sbb
push
adc
imul
add
lock
mov
or
pop
push
cld
jo
adc
sbb
push
add
bound
test
sbb
push
adc
loop
sub
mov
xchg
sub
pushf
movsl
rcl
push
cmpsl
dec
jbe
ret
xor
sbb
or
fs
mov
push
das
sub
push
add
pop
js
icebp
push
push
xor
sbb
and
or
subl
xchg
cmp
and
lcall
mov
shll
orb
mov
popa
ret
arpl
jae
iret
cmc
ds
adc
aad
ret
push
cmp
push
adc
xor
pop
adc
idivb
call
faddl
adc
jno
push
test
test
push
mov
iret
adc
stos
dec
rol
adc
mov
push
lods
and
add
daa
push
cld
jle
mov
cmp
mov
mov
push
fildll
pop
mov
mov
mov
or
fldt
inc
add
dec
xchg
sub
lods
xlat
or
pop
mov
cmp
mov
inc
addb
jb
adc
lods
pop
mov
stc
imul
mov
or
adc
adc
push
stos
insb
push
mov
lds
adc
cmp
sub
add
add
aas
inc
mov
xchg
scas
jno
ja
adc
or
push
jo
jecxz
iret
cmp
adc
jo
lds
adc
push
pop
stc
fsubrl
stos
mov
or
rcl
mov
pop
adc
scas
lods
addr16
dec
pop
add
mov
pop
adc
push
push
repnz
dec
test
nop
lds
adc
cwtl
push
pop
mov
sbb
jbe
int
arpl
lret
out
sbb
fldt
sub
dec
xchg
movsl
sub
icebp
mov
or
dec
mov
sub
shrb
sbbb
or
popl
clc
pop
cmpsb
mov
or
sbb
mov
adc
adc
jae
and
dec
mov
sbb
leave
into
bnd
dec
cmp
data16
ret
inc
sub
sub
stos
lock
sbb
outsb
mov
aaa
adc
sbb
sub
aam
mov
xchg
sub
adc
data16
adc
pop
or
in
pop
fsubs
pop
adc
aas
inc
add
or
push
xchg
sub
inc
rcrl
mov
popl
arpl
xor
pop
adc
push
test
movb
add
or
jnp
push
fisubrs
mov
aaa
idivb
inc
lahf
mov
cmp
pop
out
fs
xor
pop
adc
pop
or
jno
push
jge
ficoml
jmp
repnz
adc
movb
or
or
xchg
imul
or
shlb
aaa
jmp
gs
bound
fisttps
scas
sub
cmp
sub
add
mov
xchg
push
cmc
or
ds
pop
add
les
sbb
mov
ret
sbb
or
rol
ljmp
push
inc
insb
les
scas
in
dec
push
arpl
mov
ret
aam
sbb
inc
xchg
and
adc
adc
adc
mov
out
xchg
jp
add
ret
mov
bound
aad
push
pop
cli
out
test
push
dec
mov
inc
mov
imul
cwtl
pop
or
insb
push
mov
lods
or
test
or
inc
sbb
add
pop
or
mov
mov
popa
or
outsb
cld
jo
adc
xchg
lock
or
xchg
add
fsubrs
data16
test
imul
mov
or
adc
or
jge
shr
fsubrs
dec
popa
or
push
or
inc
mov
or
or
pop
cs
lret
ficoms
lcall
test
adc
sub
push
adc
mov
sub
cli
push
js
lea
and
mov
cld
jo
adc
pop
or
sub
lods
xor
push
cmpsl
ror
pop
jle
fdivrl
rclb
cld
sbb
shl
shlb
adc
shll
and
pop
adc
lods
jge
and
mov
lods
mov
out
mov
hlt
ds
mov
inc
mov
dec
adc
jge
popf
mov
fcmove
xchg
out
fdiv
push
sub
ds
pop
or
inc
jne
repz
or
sbb
push
stos
and
dec
hlt
cmp
jmp
cmp
xor
outsb
pop
mov
push
and
into
stos
push
lods
dec
mov
xchg
js
adc
sub
add
je
adc
aam
test
pop
jns
mov
lcall
or
sub
popf
dec
shll
pop
sub
cltd
and
in
mov
shrb
xor
mov
jnp
idivb
int3
sub
mov
and
pop
mov
mov
test
leave
adc
sub
adc
mov
adc
and
movsb
sub
push
inc
aas
fists
xchg
ss
scas
loopne
fistps
mov
adc
hlt
ss
adc
int3
xchg
push
adc
fiaddl
adc
pop
in
rcll
fcmovnb
iret
or
inc
mov
pop
adc
aas
sbb
lcall
mov
aaa
push
or
or
bound
pop
in
sbb
movsl
sti
lds
pop
in
mov
push
mov
nop
mov
adc
jmp
mov
and
loop
lock
or
jno
adc
jnp
imul
add
sbb
pop
adc
pop
dec
cltd
cmp
pop
inc
mov
jo
and
or
push
nop
mov
push
or
lods
pop
pop
adc
add
cmp
jmp
push
adc
or
xchg
push
mov
adc
roll
leave
aaa
push
andb
mov
mov
arpl
or
inc
push
adc
in
repnz
xchg
sahf
mov
clc
inc
into
xlat
in
lea
pop
clc
mov
mov
dec
faddl
insb
cmp
adc
pop
adc
adc
imul
pop
pop
cld
pop
in
out
daa
pop
push
stos
or
push
xchg
push
ret
mov
aam
pop
pop
push
xchg
pop
or
cmpsl
ficoms
jae
adc
jnp
add
push
cmp
and
repnz
out
fstpl
mov
push
push
sbb
cwtl
mov
in
push
int
xor
adc
sbb
inc
cmp
test
js
sti
loope
aas
mov
daa
push
jnp
and
cltd
push
vmulss
dec
jne
push
adc
mov
adc
movsl
int3
pop
jo
add
adc
mov
ljmp
or
or
in
pushl
mov
inc
std
repz
or
fdivrl
ss
or
or
mov
pop
mov
cmp
aas
jmp
iret
lahf
clc
das
cli
hlt
cs
pop
dec
gs
xchg
sub
pop
daa
sar
pop
mov
insl
test
fdivrl
roll
mov
push
shrl
cwtl
pop
or
or
cld
jo
adc
push
addb
or
xchg
sub
shr
stos
push
lods
and
lcall
idivb
pop
cs
lret
ficoms
pop
stc
lods
testb
and
adc
push
sub
xor
xor
sub
shl
lret
daa
xor
push
xchg
loop
cwtl
cmp
in
sbb
addb
jb
mov
sub
stos
pop
sub
movsl
dec
sahf
mov
xchg
adc
inc
and
dec
adc
jge
adc
cmp
mov
adc
or
xchg
xor
fdivrl
cli
addl
adc
outsb
xchg
daa
push
imul
add
popa
insb
test
lret
shl
mov
dec
push
push
out
mov
stos
push
pop
es
cmpsl
dec
sahf
inc
imul
sbb
add
inc
lea
mov
stos
push
test
aad
xor
and
jle
pop
or
xor
cmpsl
xchg
xchg
gs
sub
loop
and
repz
ret
loop
xor
sbb
pusha
mov
scas
or
cs
xchg
add
push
lods
cs
test
pop
xchg
mov
xor
mov
pop
cs
jb
lret
fdivrl
je
lods
pop
cmpsb
outsl
fildl
jb
into
push
es
cmp
mov
xor
jne
stos
push
shrb
and
rolb
outsb
add
repz
imul
sub
inc
lock
sub
movsl
adc
or
add
cmp
ss
xorl
lock
addr16
ret
mov
frstor
aam
scas
pop
movsb
incl
out
jecxz
out
das
push
xchg
jbe
ja
lds
mov
or
dec
ljmp
xlat
pop
pop
insb
xor
mov
adc
or
dec
xor
fidivl
dec
mov
clc
or
inc
loop
cld
out
push
loop
pop
or
pop
or
roll
jo
mov
mov
jl
out
cmpsl
mulb
push
movsl
fisubl
push
pusha
mov
mov
sbb
or
scas
pop
jge
pop
mov
dec
fisttpll
iret
inc
cmp
lods
xor
int
shrl
adc
xchg
pop
or
arpl
xchg
pop
or
repz
leave
fisttpl
and
cld
push
cmpsl
sub
or
shlb
nop
pop
or
rep
sti
out
sub
adcl
mov
mov
jmp
push
daa
outsl
sti
loopne
jno
stos
cmp
dec
xor
push
xor
mov
dec
sub
push
xchg
push
adc
dec
xchg
add
sub
lret
jl
adc
test
jecxz
ret
jge
pop
popa
and
push
inc
adc
add
or
cltd
mov
pop
out
jbe
test
test
adcb
jecxz
adc
dec
adc
dec
icebp
in
add
scas
dec
mov
sbb
jg
adc
sarb
movsl
jmp
mov
divb
outsl
in
cmp
sbb
popf
push
das
pusha
movb
lods
andl
hlt
icebp
push
sub
call
dec
mov
or
jbe
cld
jo
adc
sub
jp
push
out
dec
pop
fisubrl
std
or
pop
adc
add
jno
adc
or
cwtl
sub
mov
lds
xchg
je
lahf
jo
subl
push
int
lock
ljmp
imulb
sbb
cwtl
mov
jns
divb
adc
or
aam
scas
adc
daa
stos
daa
js
or
mov
push
adc
or
xchg
push
adc
push
es
stos
push
jmp
leave
mov
jae
pop
jmp
divb
mov
test
mov
test
or
pop
adc
jo
adc
outsb
pop
mov
push
and
cs
sahf
cmp
push
fwait
test
movsb
scas
and
sbb
xor
daa
push
stos
aad
andl
out
jge
leave
pop
adc
push
xchg
dec
iret
call
push
stos
push
and
pop
adc
in
or
jge
hlt
addb
out
and
push
int
popa
or
pop
adc
add
adc
cld
jns
sbbl
inc
ds
stos
push
and
divl
adc
pop
adc
cld
jp
addb
jb
cld
jo
adc
xlat
pop
test
mov
pop
adc
xchg
stc
jbe
call
sbb
scas
pop
sub
jbe
mov
jb
iret
pusha
sub
push
adc
xchg
dec
mov
push
cmp
loop
adc
aad
imul
es
cmp
cli
je
frstor
mov
pop
adc
add
mov
xor
out
adc
pop
cli
sahf
call
cmp
adc
stos
mov
lret
fs
jle
mov
mov
mov
subb
mov
cli
mov
jle
lret
mov
pop
adc
shlb
out
stos
push
xor
stos
push
pop
clc
int3
roll
sbb
mov
and
adc
mov
pop
adc
xor
jno
adc
and
pop
adc
loopne
fiaddl
adc
invd
adc
scas
mov
jae
adc
mov
pop
adc
loopne
inc
inc
inc
xchg
mov
frstor
into
hlt
pmaxub
xchg
push
adc
xor
xchg
push
hlt
sarl
shl
fiaddl
inc
mov
mov
xlat
or
mov
mov
push
adc
sbb
pop
adc
mov
pop
int
test
inc
pop
loop
int3
loop
fiaddl
adc
call
imul
das
xchg
add
fistpll
mov
mov
test
push
insl
lods
mov
sub
and
ljmp
mov
mov
xchg
or
xchg
daa
push
pop
and
mov
cmp
mov
lods
and
adc
lcall
and
push
js
cmp
lahf
lods
jge
ss
cmp
jg
add
jl
in
imul
push
mov
insl
dec
mov
push
pop
add
mov
fwait
sub
inc
ret
int
aad
flds
adc
test
fistl
sti
and
push
adc
flds
adc
ret
pop
cs
loope
push
pop
daa
fsubs
stos
jp
adc
imul
pop
adc
lret
test
fldl
mov
dec
mov
ljmp
shlb
push
sar
mov
mov
xchg
std
and
fcomps
flds
adc
sbb
dec
pop
push
adc
loope
mov
pop
add
cmp
xchg
das
xchg
add
or
adc
pop
ficompl
mov
cltd
push
andl
adc
mov
and
push
int3
testb
and
inc
dec
stc
sbb
out
and
cwtl
addr16
sub
daa
out
jmp
gs
mov
add
xchg
add
aad
jp
in
scas
mov
push
adc
jle
loope
ja
adc
hlt
push
outsl
leave
pop
fldcw
mov
pop
adc
sahf
cmp
fisttpll
icebp
cli
hlt
call
xchg
mov
sub
daa
rol
lods
pop
mov
mov
xchg
adc
inc
mov
xor
pop
call
lret
hlt
test
xlat
push
dec
sahf
cmp
inc
mov
mov
xchg
pop
mov
sub
sub
stos
push
popa
cwtl
pop
or
pop
dec
xchg
sti
add
adc
xor
mov
rcl
dec
dec
pop
mov
pop
adc
test
pop
test
adc
cmp
out
lahf
sub
or
or
xchg
xor
push
stos
xchg
push
or
or
bswap
insl
jns
lea
xor
in
mov
pop
adc
pusha
push
insb
adc
inc
pusha
fidivl
jnp
inc
mov
popf
iret
shr
hlt
call
in
xchg
out
das
add
icebp
mov
ss
fistpl
mov
jo
adc
test
clc
sbb
out
adcl
mov
mov
mov
outsb
subb
jb
mov
sub
push
scas
fsubrs
jl
hlt
inc
mov
jbe
addb
adc
mov
push
xchg
in
scas
lods
dec
sahf
cmp
inc
clc
popa
roll
sbb
add
push
and
lret
lods
popa
or
nop
push
push
mov
daa
xor
add
sub
jae,pn
lret
push
stos
das
xchg
fcoml
iret
ret
sub
insb
pusha
in
mov
xor
jmp
sbb
loope
push
or
push
inc
add
adc
fidivrs
cmp
js
out
aam
dec
sbb
popa
std
push
lods
mov
orl
lock
adc
or
xchg
incb
aad
das
out
pop
frstor
dec
adc
or
cmp
fs
cltd
aam
and
mov
mov
add
lods
fdivl
xchg
mov
dec
jl
mov
aaa
inc
cli
leave
mov
dec
mov
push
lcall
fwait
insl
and
aaa
mov
ljmp
pop
fwait
jnp
and
push
int
push
inc
aas
ret
inc
mov
int3
shl
sbb
jmp
nop
adc
xchg
cmp
mov
jo
inc
add
repnz
lods
fistpll
pop
adc
lret
imul
jle
data16
cld
pushf
xlat
jns
mov
pop
adc
mov
vmwrite
xchg
sub
cmpsl
pop
loopne
nop
xor
jl
sub
cmpb
jno
ret
or
pop
or
outsl
fimuls
lods
cmp
sub
insb
sti
pop
ret
loop,pt
pop
lods
mov
dec
mov
pushf
lds
adc
mov
ja
lds
adc
scas
div
push
lods
sbb
call
or
mov
or
subl
das
xor
jmp
jo
in
test
cwtl
lds
adc
adc
push
stos
mov
inc
mov
fcmovb
xchg
or
loopne
xchg
pop
or
pop
insb
lret
pop
je
push
adc
xchg
test
xor
ret
cmp
cs
mov
add
push
aaa
repz
or
xchg
push
xchg
std
sub
cld
leave
test
mov
mov
fs
push
adc
mov
adc
aaa
fwait
mov
sub
mov
movups
in
sbb
outsb
jmp
dec
mov
xor
outsl
sbb
popf
xlat
cmp
jge
int3
adc
stos
scas
iret
fists
sarl
and
ja
sub
jno
stos
pop
lock
or
lods
mov
jo
adc
daa
negb
frstor
mov
pop
adc
add
mov
jle
imul
ds
or
lret
pop
xor
pop
test
jo
pop
pushf
push
mov
idivl
xor
adc
push
out
stos
inc
adc
add
add
or
aaa
jo
std
idivl
adc
jnp
mov
iret
test
test
inc
and
lods
sub
adc
mov
testb
adc
and
jmp
adc
adc
leave
outsb
xchg
fstpl
cs
add
scas
outsb
pop
and
jg
notb
ja
rcrl
inc
jno
and
mov
pop
mov
cmpsl
inc
adc
aam
jo
xchg
xchg
mov
ja
in
cmp
inc
lea
mov
and
cltd
rcrb
adc
aam
or
repnz
dec
xor
frstor
sbb
xchg
call
mov
repz
mov
jg
cmp
jae
mov
push
and
mov
xor
divb
mov
subl
imul
push
repnz
mov
in
push
pop
xor
lods
lods
xlat
dec
adc
and
mov
andl
in
loope
scas
fsubrp
push
and
push
mov
push
out
nop
lds
div
jmp
or
popf
ss
adc
sbb
ficomps
and
pop
adc
jae
cwtl
sbb
and
pop
fistps
call
gs
stc
jg
fdivrs
mov
add
imul
callw
sub
mov
fnstsw
sbb
cmp
xchg
movsb
jmp
lods
pop
mov
data16
mov
pop
mov
mov
cmpb
push
adc
cmp
pop
je
adc
popf
cld
cltd
lods
lock
sub
cltd
js
or
inc
mov
and
and
pop
mov
and
aam
adc
or
movsb
mov
pop
sub
scas
inc
mov
pop
mov
pop
mov
repz
adc
lret
mov
inc
pop
sub
xor
orl
add
addr16
ja
fsubl
pop
add
inc
nop
xor
pop
mov
jmp
sbb
jns
push
ret
ds
mov
mov
repnz
adcl
out
pop
iret
mov
lret
out
je
popf
jbe
lcall
xchg
pop
pusha
inc
mov
enter
xchg
leave
jg
push
or
jmp
outsb
mov
aaa
addr16
orb
pop
xor
jle
shll
cmp
push
imul
insl
fstenv
es
sti
jg
pop
xchg
sub
loope
fsts
push
lods
rorl
pop
arpl
pop
cmp
lahf
int3
jg
clc
test
loop
jno
xchg
ja
lods
cld
pop
pop
loop
pop
daa
pusha
cmp
jge
or
pop
mov
sub
fwait
xchg
sbb
out
jp
les
mov
fimuls
sbb
or
sub
adc
push
adc
jo
xorl
inc
pop
jle
fildll
or
test
jecxz
shlb
sbb
jge
jmp
push
jecxz
xchg
cmp
jle
xchg
inc
add
xor
gs
push
sub
pop
adc
jmp
push
adc
mov
push
es
stos
push
cmp
cmpsl
dec
jbe
fisttps
adc
ja
mov
xchg
sbb
gs
jl
sub
xchg
push
mov
xor
jns
fdivrl
push
pop
or
pop
les
jno
adc
push
add
push
scas
lock
pop
adc
inc
lahf
jge,pt
cmpsl
call
in
loope
xchg
push
add
pop
adc
push
adc
jmp
fldl
repnz
repnz
push
mov
test
adc
add
ja
sub
pop
mov
inc
dec
stos
push
ds
add
add
insb
lock
push
ja
lea
xor
pop
cld
jo
adc
pop
fldenv
fcoms
mov
movnti
out
fcmovb
js
jo
shlb
push
stos
cld
stc
push
test
push
adc
jo
mov
decb
add
lcall
mov
push
adc
add
jae
daa
les
insl
push
mov
out
xchg
and
mov
cmc
xchg
xlat
and
sbb
fcmovb
jns
jo
mov
xchg
test
push
sub
lcall
mov
mov
ljmp
aad
push
test
mov
aad
adcl
xor
addb
push
daa
shlb
xchg
sub
test
cmpsb
mov
cmp
or
in
out
out
sahf
push
jg
cmpsb
mov
sbb
ficoms
pop
stos
push
stos
mov
ror
sbb
inc
mov
inc
add
cld
sub
jae
adc
pop
test
mov
push
jl
mov
jle
int3
xchg
mov
bound
push
in
cmpsb
pop
movsb
push
nop
push
mov
jmp
aam
sub
push
imul
pop
in
sbbb
adc
daa
and
push
adc
or
and
dec
sub
shlb
adc
fstl
push
cmp
mov
or
adc
xlat
int3
cld
cltd
fiadds
mov
pop
sbb
push
lds
test
adc
dec
jl
mov
push
aaa
ficompl
cld
and
adc
pushf
sub
adc
mov
xor
cmp
adc
adcb
dec
je
adc
test
push
sub
scas
inc
scas
push
mov
jb
and
sbb
fwait
cwtl
cmp
insb
mov
push
pop
lods
push
cmp
or
rcr
push
fs
pop
into
mov
jno
push
or
jne
les
outsb
cli
pop
movsl
pop
mov
lods
jge
mov
outsl
sti
rcl
test
xor
shll
movsb
xor
mov
pop
lods
cli
imul
int3
dec
mulb
cmp
call
arpl
aam
xchg
and
push
test
pop
popa
and
in
adc
ja
xchg
call
addl
lods
push
sahf
mov
mov
into
into
mov
fstps
shll
rcr
mov
sahf
fs
xchg
add
push
inc
ljmp
adc
push
adc
nop
or
adc
dec
mov
clc
push
adc
pop
xlat
sbb
faddl
xchg
hlt
push
test
inc
cmp
pop
jg
js
out
nop
ficoms
cmp
data16
data16
sbb
push
lds
jbe
add
icebp
and
repz
pusha
lock
xor
addl
and
pop
arpl
fdivrs
dec
add
xchg
or
cmp
mov
cmp
repz
mov
pop
mov
mov
mov
int3
lahf
addr16
call
aad
movsb
push
stos
and
fisubs
xlat
push
cltd
inc
jnp
ficompl
push
adc
sub
imul
push
lods
pushf
test
cmp
clc
mov
mov
int
dec
lret
inc
pop
adc
add
mov
and
pop
or
xor
sbb
jg
jo
adc
or
idivb
out
lahf
leave
cs
hlt
add
cmp
dec
pop
stos
push
push
test
lret
test
arpl
test
xor
outsl
lock
jecxz
in
lret
inc
mov
stos
push
fsubrp
dec
pop
js
stc
push
xchg
enter
push
into
inc
or
pop
fidivrs
lret
out
test
jae
adc
mov
bound
repnz
and
out
mov
andb
or
pop
adc
fdivrl
ds
pop
adc
cs
inc
mov
xor
stos
push
outsb
aad
dec
sahf
cmp
mov
cld
into
lahf
ds
xor
jg
cmpsb
ret
xchg
sub
inc
frstor
lret
test
mov
xor
mov
imul
lcall
cmpsl
out
jp
or
add
or
jg
sbbl
stos
push
cmpsb
add
mov
xor
and
sbb
fcmovb
insb
cmc
jo
shll
pushf
sub
fsubl
lods
sub
movsb
xchg
adc
mov
push
stos
push
fdivl
xchg
push
mov
xlat
aaa
test
and
jns
xor
cmp
jge
sbb
pop
adc
mov
test
pop
inc
xchg
adc
daa
inc
es
das
int3
xchg
jnp
sub
dec
popa
xchg
push
cmpsb
pop
movsb
ljmp
adc
lock
out
or
js
jp
mov
cltd
lahf
jg
dec
dec
cli
sub
out
scas
xor
imul
scas
sub
add
push
push
add
xchg
mov
inc
or
sbbb
xchg
pop
xorb
xchg
push
add
inc
icebp
andl
adc
inc
pushf
or
sbb
out
scas
mov
popf
aas
mov
mov
jg
out
mov
lahf
addr16
sbb
mov
sbb
test
sbb
push
dec
sub
arpl
add
adc
call
scas
lcall
movsb
inc
test
xor
pop
lods
pop
aam
cmc
data16
mov
push
outsb
inc
adcb
sbb
test
add
imul
fwait
and
push
sbbb
xlat
cwtl
adc
mov
aaa
aam
sbb
cmpsl
mov
push
nop
xchg
push
adc
fnstsw
les
in
pusha
mov
cmpsb
out
mov
bound
xchg
adc
sub
push
adc
push
lret
inc
cwtl
inc
test
fwait
pop
cs
xchg
clc
flds
adc
xor
jo
adc
jno
sbb
cld
in
std
push
cltd
push
adc
lret
sbbb
adc
add
adc
lret
imul
fprem
test
sub
addl
adc
add
cmp
enter
sbbl
push
adc
fdivs
inc
cli
inc
cmp
clc
mov
inc
pusha
cmp
pop
xlat
into
jno
jg
adc
scas
nop
sub
mov
std
cltd
js
jne
push
push
lcall
adc
jo
imull
pop
or
sbb
jge
addr16
jmp
cmp
mov
ret
adc
dec
cmp
lock
push
lods
dec
ds
test
mov
int
nop
xchg
push
adc
mov
pop
mov
sub
mov
iret
jbe
out
adc
mov
add
fidivl
xchg
cwtl
les
adc
cwtl
les
adc
js
jp
lock
mov
lahf
adc
stos
dec
fs
or
gs
pop
xchg
sub
popf
inc
gs
lods
pop
ret
test
adc
cld
repz
mov
addl
dec
and
movsl
shll
mov
call
adc
sbbb
adc
jg
jo
adc
cld
pop
pusha
leave
adc
mov
sbb
inc
arpl
adc
hlt
pop
sub
int3
ret
push
int
sbb
sbb
dec
in
lret
lods
mov
sub
push
lret
test
push
jg
mov
or
mov
cli
hlt
mov
mov
pop
or
stos
mov
les
lea
mov
xor
mov
pushf
mov
push
test
ret
sub
mov
or
scas
pop
imul
fsubrp
lahf
hlt
cmp
js
inc
clc
push
imul
aam
push
adc
pop
xor
pop
test
jo
pop
mov
xchg
idivl
dec
pop
fmull
cmp
push
and
mov
jg
and
insl
push
xchg
outsb
orb
cmp
lret
repz
adc
mov
jge
aad
or
into
ljmp
xlat
mov
rclb
and
push
idivb
hlt
mov
mov
mov
xorb
xchg
test
insb
inc
js
sbb
jp
gs
hlt
xchg
daa
enter
xchg
push
xchg
inc
adc
and
fistpl
scas
aam
inc
test
adc
jg
cwtl
leave
insl
mov
and
and
and
sub
int
push
pushl
scas
fcoml
pop
push
pushf
or
xor
cltd
and
imul
mov
sub
aas
mov
mov
fdivr
daa
sti
push
push
fistpll
fidivrl
push
jae
jmp
dec
and
jb
outsl
mov
arpl
dec
inc
mov
push
lock
rcrl
jae
int3
sub
shr
jo
fldln2
pop
adc
sbb
push
mov
mov
ds
jne
mov
mov
es
or
cmpl
jae
mov
xor
push
pop
movsl
xor
ljmp
pop
das
fcompl
clc
pop
in
stos
mov
out
pop
adc
xchg
popa
repnz
sbb
push
mov
int
arpl
mov
out
mov
ror
clc
int3
adc
fcoms
clc
adc
cmpsb
pop
cs
je
int3
pop
scas
push
das
xchg
jle
cmpsl
jp
mov
push
adc
pop
jne
inc
pop
lret
loop
cmp
inc
pop
in
imul
js
xor
add
jmp
or
cld
jns
pop
jbe
je
cmc
jmp
mov
repnz
jmp
adc
xchg
gs
pop
xor
mov
add
popa
sbb
nop
inc
xchg
imul
jno
adc
adc
jp
andb
icebp
mov
jmp
shll
xchg
stc
xor
mov
adc
mov
ror
cmpsb
addr16
pop
adc
dec
lea
inc
sub
dec
dec
jbe
movsl
mov
lods
roll
cmp
cmp
mov
mov
out
scas
insb
mov
hlt
scas
cs
test
loope
cltd
jb
iret
adc
ret
ljmp
or
insl
push
mov
pop
adc
jae
testl
mov
call
jae
xchg
pop
mov
imul
ljmp
adc
lock
mov
push
and
pop
les
in
addr16
ret
pop
cmp
in
inc
icebp
aas
lods
push
es
stos
push
cli
sbb
xchg
lcall
int3
or
cs
push
mov
and
fldcw
mov
pop
adc
add
pop
xor
jo
cli
jg
sbb
or
add
cmp
adc
loop
je
adc
or
insb
adc
pop
jo
xchg
mov
sub
ret
or
pop
jbe
cld
hlt
out
call
roll
stos
jb
sbbb
push
mov
sbb
ret
mov
rolb
bound
xchg
xchg
sub
in
stos
add
nop
hlt
les
cmc
enter
jno
adc
mov
out
mov
fisubrl
adc
inc
adc
push
loopne
xor
and
xor
sbb
adc
and
dec
sahf
jno
push
mov
dec
xor
pop
mov
pop
lods
mov
dec
sbb
mov
into
cmpsb
bound
lods
pusha
push
inc
stos
jae
inc
adc
pop
adc
jmp
pushf
aam
xor
mov
cmp
ret
or
sbb
in
push
and
mov
mov
sbb
jmp
daa
or
add
adc
scas
jbe
fldcw
xchg
mov
repnz
loop
mov
mov
pop
adc
xchg
ss
clc
cmp
stos
dec
test
fdivrs
inc
mov
loopne
adc
aaa
inc
mov
ljmp
push
jb
mov
cmpsb
jl
push
adc
mov
cltd
imul
shll
je
dec
push
xorb
test
ret
sub
and
outsl
sbb
aad
mov
lods
xchg
and
cs
mov
and
sbb
out
es
test
and
pop
mov
shrb
push
loope
inc
and
std
jle
shrb
xchg
cmp
xor
and
and
mov
mov
dec
in
jge
xchg
xor
mov
notb
inc
xchg
mov
lods
pop
mov
mov
jmp
shlb
sahf
sbb
outsb
stc
js
mov
add
xor
mov
mov
sub
int3
shr
pop
cli
inc
enter
xchg
insb
xchg
test
jg
cmp
arpl
lds
ja
lret
fcoms
xchg
mov
ror
mov
inc
stos
jp
ja
jbe
pop
into
push
cmpsb
ss
out
pop
lret
je
adc
ja
mov
pop
adc
aas
es
jnp
test
xchg
jb
sbb
nop
out
cmp
lock
sarl
push
insb
pop
jno
add
mov
pop
adc
lock
outsl
mov
or
daa
lock
push
add
pop
jo
push
jl
popa
mov
xchg
jne
ficompl
jo
sbb
pop
inc
dec
movsl
push
and
ljmp
adc
daa
iret
loope
lcall
adc
adcb
jle
cmp
inc
test
push
push
popf
ljmp
sar
loopne
into
lods
ret
ret
push
push
push
daa
adc
push
rol
adc
mov
inc
adc
add
dec
lea
xor
push
fldcw
dec
mov
insl
divb
xor
mov
sbb
add
xchg
fucom
sbb
push
stos
daa
sub
sarl
push
mov
daa
jbe
addb
lea
xor
push
stos
stc
lods
mov
jae
adc
test
jnp
repnz
pop
out
fstl
stos
inc
lea
in
sub
mov
pusha
mov
push
or
pop
insb
scas
lcall
inc
stos
push
daa
mov
js
pop
adc
mov
iret
mov
push
pop
cs
add
lret
mov
aam
test
push
mov
push
adc
or
pop
out
test
stos
inc
repz
xchg
adc
roll
mov
pop
inc
rorb
mov
ret
pusha
roll
lret
add
xchg
sub
push
test
ret
lods
jae
jae
dec
psrld
pop
inc
jb
sbb
push
adc
pop
and
movsl
dec
sahf
insl
xchg
bound
int
divb
mov
or
pop
cs
stos
push
cmpsl
daa
jbe
jnp
adc
pushf
pop
or
pusha
sub
jno
adc
mov
out
sub
push
pop
mov
aam
pop
adc
inc
pop
out
inc
adc
addl
xchg
pop
dec
fs
sete
shrl
rclb
xchg
adc
adc
sbb
push
xor
xor
jo
enter
jae
test
cwtl
das
rcrb
mov
jo
fwait
cmp
add
flds
and
jno
adc
int
mov
mov
sbb
cmp
pop
sub
incl
test
mov
mov
bound
push
pushf
int3
pop
and
xchg
adc
push
popf
xchg
std
in
mov
push
jae
outsl
xor
jno
xchg
inc
dec
fwait
lahf
sub
sbb
and
add
push
mov
in
mov
cwtl
mov
cmp
addl
ffreep
inc
dec
inc
nop
jb
xor
mov
cwtd
mov
cmp
xchg
or
mov
sbb
xor
decl
data16
add
and
cwtl
mov
lds
jge
data16
push
adc
lods
inc
cltd
mov
push
adc
movl
adcb
and
and
inc
repnz
les
adc
adc
addr16
insl
call
mov
pcmpgtb
or
cmpb
aas
lret
jnp
sbb
data16
dec
mov
lret
loopne
in
mov
xchg
sub
push
add
gs
sbbb
adc
adc
adc
pop
mov
ja
aam
push
add
cld
repz
gs
fmul
push
movsl
lret
lea
test
out
or
cmp
cmp
mov
popf
bound
and
pushf
pop
or
mov
cld
jo
adc
pusha
outsb
fwait
xchg
dec
or
lds
mov
add
mov
outsb
lock
adc
pop
pop
and
jl
mov
sar
pop
cld
add
data16
mov
lock
add
pop
adc
push
ljmp
mov
sub
rclb
je
aam
sub
gs
or
push
sub
repnz
in
or
movsl
mov
aaa
rcr
insl
push
mov
pop
adc
jle
imul
imul
pop
adc
test
adc
mov
inc
loop
int
inc
mov
pop
adc
fcomps
mov
pop
adc
cmc
mov
pop
adc
lock
mov
pushf
frstor
faddl
adc
in
stos
mov
sahf
cmp
mov
or
cmc
jo
mov
gs
sbb
push
mov
xchg
cli
jle
faddl
adc
iret
lahf
aad
cmp
inc
mov
out
test
fldenv
pop
mov
aad
js
and
push
pandn
test
rolb
pop
loope
test
inc
and
jge
and
in
push
les
lock
add
mov
add
inc
lods
pop
mov
mov
out
mov
pop
int
mov
dec
pop
mov
pop
adc
push
test
mov
imul
in
jae
cmpsl
ja
jge
or
pushf
pop
or
in
add
adc
inc
sbb
mov
pop
adc
rorl
push
in
jmp
pop
sub
mov
sahf
add
jle
mov
pop
adc
test
push
call
cmp
mov
sbb
sbb
orb
or
mov
stos
push
test
daa
mov
jp
mov
xor
push
push
adc
and
stos
push
shrl
mov
test
shrb
hlt
xor
mov
pop
adc
push
shlb
push
mov
repz
xor
xchg
and
push
dec
or
fstl
push
mov
pop
adc
jae
adc
es
cmpsb
imul
pop
mov
jae
adc
mov
push
adc
jns
cs
add
push
invd
adc
jbe
js
test
adc
in
inc
nop
adc
divb
fsubs
das
lods
jae
adc
or
pop
adc
dec
push
in
test
adc
cld
iret
movsb
outsl
push
out
and
adc
lods
jae
adc
mov
jecxz
mov
das
mov
pop
mov
faddl
adc
scas
push
dec
inc
pop
mov
cmp
enter
jbe
push
or
dec
lods
push
lods
cmp
int3
mov
pop
adcb
rcr
fwait
stc
out
test
loope
dec
movsb
pop
data16
mov
jmp
inc
in
add
or
mov
jno
push
movsl
outsb
add
jbe
aas
int3
bound
pop
inc
dec
adc
add
ss
subb
and
xchg
insl
lret
lods
pop
jmp
arpl
and
push
mov
push
adc
test
fsubs
pop
dec
testb
pusha
sti
outsb
dec
pop
xchg
pop
jnp
outsl
jno
out
repz
je
adc
ja
mov
pop
adc
aas
es
jnp
test
mov
adc
sar
mov
call
loop
adc
lock
ja
mov
adc
out
sbbl
inc
dec
mov
xchg
xor
sbb
mov
push
xor
and
fistl
jl
leave
aad
sbb
cmp
repz
xchg
nop
or
adc
mov
pop
push
outsb
or
dec
movsb
mov
test
jmp
shll
test
xchg
mov
repz
add
mov
repnz
lock
aad
in
xchg
test
pushl
sub
xchg
and
cs
add
adc
inc
js
mov
mov
aaa
mov
xor
rcll
fiadds
repnz
stos
xor
fldcw
pop
mov
mov
dec
add
inc
and
psrld
sbb
cmp
and
mov
sbb
inc
data16
push
adc
mov
orl
mov
pop
pop
cli
test
push
lahf
xlat
jo
xor
xchg
add
inc
lea
push
cmpsb
xchg
lods
mov
pop
adc
mov
popa
inc
lahf
jge,pt
mov
subb
loopne
pop
or
push
inc
cld
jo
adc
jb
xor
mov
fcmovb
insl
add
adc
inc
dec
in
test
ret
and
inc
popa
shl
adc
cs
scas
jecxz
xor
pop
daa
icebp
push
stos
push
mov
dec
add
out
roll
adc
sub
inc
or
lods
pop
cmpsb
fisubrs
jnp
test
inc
inc
dec
pop
or
sub
jno
adc
sbbb
push
test
mov
out
jg
addl
jb
repnz
lods
push
stos
push
pop
test
mov
sbbb
outsl
xchg
pop
cs
adc
dec
cmpl
xchg
in
scas
mov
into
and
aaa
lcall
roll
mov
cmp
and
ret
xchg
sub
sbb
or
subb
and
xchg
adc
test
mov
test
js
push
cld
push
adc
pop
leave
lret
in
pop
test
mov
or
xchg
test
sub
xrelease
jge
and
pop
or
push
sub
iret
mov
arpl
dec
sub
xor
sbb
inc
das
add
ret
dec
pop
or
inc
push
cld
jo
adc
ljmp
add
xchg
dec
push
mov
js
dec
aas
xchg
push
mov
mov
aas
push
movl
lods
cmp
iret
mov
or
aaa
sbbb
and
movb
lahf
and
ljmp
adc
xchg
mov
inc
dec
aad
xchg
lods
stos
icebp
sub
add
push
outsb
pop
sub
sahf
cmp
imul
idivl
push
adc
dec
test
add
lds
xor
stc
mov
outsb
iret
mov
imul
not
lock
jmp
xor
pop
adc
dec
and
pushf
sbb
ja
or
aam
pop
adc
stos
cmpsb
sub
adc
inc
sbb
mov
pop
adc
sahf
call
mov
in
xchg
insb
inc
and
and
add
push
jnp
and
pop
adc
xlat
into
sub
fsubl
xor
mov
pop
adc
push
sub
pop
imul
lds
adc
repz
adc
mov
imul
jecxz
ja
cli
je
mov
xor
test
or
addb
adc
bound
imulb
movsl
test
push
pusha
outsl
push
lods
sbb
aas
sub
cld
ds
rcrb
into
xor
xlat
nop
das
mov
xlat
into
ja
mov
sarb
lds
icebp
insl
out
sbb
mov
shrl
stos
jb
mov
out
pop
jne
lahf
sub
rol
sbbb
jo
sbbb
and
xchg
mov
mov
jmp
jg
js
cmp
dec
mov
outsl
test
icebp
xor
xor
testl
rclb
push
lods
pop
ja
sub
sti
sub
mov
pop
adc
jge
pop
loop
and
test
push
cbtw
pop
or
test
add
adc
pop
or
jae
clc
mov
mov
push
ljmp
mov
ljmp
pop
jne
roll
xchg
sti
or
stos
push
xlat
xchg
push
rcrb
xor
pop
adc
fwait
jmp
pusha
shl
sbb
cs
lods
fsts
stos
inc
in
pushf
lods
pop
ret
test
adc
mov
cmp
adc
fs
dec
in
xchg
aam
push
stos
mov
adc
and
xor
pop
adc
xor
sub
xchg
cmc
xchg
sub
das
mov
fcmovnb
push
pop
jmp
mov
cmp
adc
mov
lods
pop
mov
mov
imul
fsubrp
jae
dec
and
fisubs
lret
xor
push
stos
and
cli
xor
test
insl
sbb
adc
or
add
cmpb
mov
sub
lahf
sbb
popf
lock
add
pop
push
fcoml
fmull
nop
inc
lods
pop
pop
jbe
in
adc
mov
xor
pop
pop
imul
das
and
push
add
bound
push
adc
or
cmp
mov
mov
and
ret
inc
stos
sti
push
or
dec
jo
lock
pop
adc
mov
push
movsl
pop
int3
aas
jns
imul
adc
xor
mov
cmp
lds
dec
sbb
inc
jle
ja
xchg
xor
pop
mov
push
adc
outsb
and
jp
mov
adc
mov
es
sbb
adc
jp
inc
mov
xchg
sbb
les
jo
adc
mov
fiadds
out
test
inc
lock
adc
push
adc
mov
mov
ljmp
int3
jns
jne
push
mov
nop
into
dec
push
int
jae
fdivrp
cld
loop
sub
fmuls
ret
test
aas
sub
sbb
jge
cltd
mov
sahf
mov
or
in
stc
aam
adc
mov
push
mov
pushf
rorb
cmp
lods
mov
mov
pop
adc
and
mov
jae
stos
out
inc
push
clc
lds
movsl
dec
mov
push
andb
lods
jb
pop
loop
fstpt
push
js
xor
adc
aam
fdivl
pop
adc
mov
sub
inc
mov
das
andb
cs
cld
dec
fsubl
mov
adc
insl
shrb
add
mov
xchg
fcompl
pop
test
cmp
pop
adc
pop
xchg
call
push
adc
pop
dec
fnsave
add
adc
clc
mov
js
dec
daa
push
jno
adc
inc
subl
enter
decb
adc
adc
cmc
lods
int
loop
loopne
push
rorb
out
outsb
mov
mov
pop
adc
insb
push
cltd
dec
cmc
mov
je
nop
pop
mov
mov
out
sub
mov
pop
adc
loopne
scas
pop
daa
iret
push
out
stos
ja
loop
les
adc
fs
or
mov
sub
sarl
push
adc
outsb
push
and
test
sub
push
add
cmp
mull
mov
xor
divb
jge
adc
fldl
push
push
stos
inc
lret
cld
lods
pop
int3
pop
and
adc
adc
roll
mov
mov
mov
pop
adc
imul
aaa
mov
popa
inc
lahf
jge,pt
movsb
call
pop
adc
fbld
pop
mov
mov
pop
add
inc
cli
scas
xchg
mov
pop
or
xor
xor
push
push
loope
scas
pop
mov
aad
lods
adc
cmp
or
xor
mov
pop
adc
push
inc
push
insl
push
rolb
dec
hlt
ret
cwtl
pop
or
sbb
add
adc
jo
sub
ljmp
sub
mov
pop
or
or
cld
jo
adc
push
scas
mov
pop
adc
cmp
mov
rorl
or
pop
push
cld
jo
adc
push
or
mov
add
adc
pop
or
adc
xchg
shll
cs
add
push
stos
and
pop
or
xor
pushf
xor
es
jl,pn
shl
or
jb
cld
jo
adc
inc
fstpl
dec
mov
pop
adc
lds
icebp
cli
hlt
call
jo
xor
daa
rol
stos
push
lods
hlt
pop
jbe
pop
hlt
out
push
or
sbb
pusha
cmpb
call
sbb
push
stos
and
inc
push
push
mov
or
and
divl
and
xchg
enter
and
les
roll
push
scas
or
jp
test
int
push
jne
push
sub
adc
sub
push
inc
adc
push
adc
mov
in
and
jae
xchg
sbb
movsb
inc
rorb
fstpt
inc
scas
push
scas
mov
je
adc
dec
test
imul
fldcw
pushf
and
fisubl
ljmp
pushf
or
adc
ljmp
push
loop
mov
pop
adc
fnstenv
test
cltd
xchg
out
mov
aaa
push
push
or
mov
sahf
add
aad
mov
pop
adc
lcall
pop
repz
mov
shl
cmpsb
movsb
mov
lock
or
popf
ja
fcmovnu
add
adc
nop
shlb
divb
repz
push
and
sbbl
test
fcoml
lds
nop
movhps
cwtl
mov
loope
mov
pop
adc
sahf
repnz
sbb
inc
test
mov
xor
out
stos
test
lds
mov
sbb
shrl
roll
or
push
test
add
adc
jbe
inc
dec
iret
out
mov
and
test
xor
and
and
add
pop
or
push
or
push
pusha
dec
dec
add
pop
repnz
pop
or
push
fdivrl
dec
xchg
pop
or
ficoml
test
pushf
lds
adc
test
jnp
into
mov
pop
inc
adc
xlat
rolb
push
mov
push
cli
dec
mov
mov
adc
pop
lods
jmp
dec
lock
or
mov
adc
daa
pop
test
dec
add
shll
pop
xlat
and
out
mov
enter
mov
mov
test
mov
add
adc
push
int3
pop
addr16
and
movsl
cld
xchg
mov
ljmp
xchg
xor
mov
push
testl
fbld
adc
lret
pop
xlat
and
jae
xchg
sbbb
push
xor
addb
jb
gs
cmpsb
stos
push
stos
stc
fisubs
das
popa
ret
adc
sbb
js
hlt
rorb
mov
pop
adc
push
dec
inc
pop
mov
popa
and
iret
notl
pop
jnp
jb
fnstsw
lods
push
stos
sub
shrl
xchg
adc
inc
mov
xor
mov
pop
mov
cmp
inc
jg
lods
pop
sub
sbb
mov
iret
adc
stos
movsl
gs
jnp
jb
mov
inc
stos
push
add
or
test
fdivs
mov
xchg
cltd
movsl
push
sub
sub
stos
stc
fldcw
pop
mov
insl
ret
pop
adc
pop
add
mov
xor
pop
adc
mov
cmp
sti
xor
jl
aam
pop
adc
ficompl
ja
lds
adc
fsubp
lahf
into
test
lds
adc
lcall
in
cmpsb
mov
pop
adc
outsb
aad
dec
sahf
cmp
xor
jno
addb
andl
lods
pop
les
adc
mov
cmp
mov
pop
adc
stos
sti
xor
pushf
dec
dec
ret
test
nop
lds
adc
shrl
daa
cmp
jae
mov
or
stc
lods
ss
lahf
cmp
xor
sbb
adc
adc
repz
aad
lcall
xchg
push
mov
or
call
aas
jl
cmp
mov
mov
mov
or
add
pushf
aas
sub
fstl
xor
mov
pop
adc
addr16
shlb
push
mov
repz
aad
sbb
lock
sub
aam
inc
inc
pop
scas
fdivr
pop
repz
cmp
sbb
leave
add
ja
test
scas
xor
enter
inc
mov
mov
outsb
data16
pop
adc
in
sub
jp
mov
mov
cwtl
pop
or
xor
add
adc
or
or
cltd
xor
pop
adc
add
or
push
pop
inc
add
lahf
jmp
pop
adc
or
lods
ljmp
adc
xor
fwait
mov
dec
adc
fidivrs
icebp
jno
ret
pop
lods
jmp
stos
pop
sbb
xor
pop
adc
adc
aas
add
sub
mov
shrb
mov
xlat
push
pop
test
add
or
fdivrs
and
out
sub
pop
jnp
mov
cmp
xchg
bound
faddl
adc
call
adc
lds
dec
nop
push
daa
cmpsl
add
jae
sbb
fdivr
and
mulb
sbb
rep
popa
fdivr
fisubrs
push
nop
or
adc
jecxz
jmp
imul
lret
add
sbbb
dec
cmp
fists
mov
xchg
repnz
repz
call
jg
ja
dec
inc
jae
leave
test
cmp
into
push
ljmp
int
jo
jb,pn
sub
adc
inc
lds
jbe
call
fdivrs
popa
nop
cwtl
dec
sub
mov
out
xor
add
mov
pop
adc
sbb
sbb
sub
inc
push
aam
icebp
movsb
aaa
lods
cmp
jne
out
push
ljmp
faddl
adc
inc
fists
push
sub
daa
decl
sti
pop
cwtl
les
adc
fs
or
xchg
inc
and
ljmp
js
adc
push
pop
les
into
jge,pt
ret
mov
in
add
add
adc
stos
int3
dec
sahf
insb
sub
pushf
inc
mov
inc
push
mov
sbb
cs
loop
lret
xchg
cmp
sub
pop
adc
pop
or
daa
inc
jb
add
sbb
mov
pop
adc
sub
inc
mov
dec
adc
jge
lret
mov
adc
and
mov
dec
or
inc
mov
xlat
mov
sbb
pop
cs
aad
add
stos
sbb
pop
mov
imul
and
cmpsl
arpl
clc
das
aam
faddl
adc
aad
mov
testb
test
fistpl
mov
jno
adc
in
pop
or
mov
movsb
pop
or
push
mov
push
sbb
out
stos
cwtl
pop
or
arpl
cld
jo
adc
mov
or
lods
jno
ret
sub
sti
sub
mov
pop
adc
outsl
jge
pop
out
push
movsb
adc
sbb
insb
adc
pop
pop
sbb
push
adc
pop
les
daa
push
add
jg
cmp
jb
push
rolb
shrb
jb
test
and
mov
rcll
adc
pop
imul
push
lods
pop
cmpsl
lahf
imul
sbb
ja
ljmp
add
lret
inc
scas
fildll
adc
jg
sbb
ja
or
arpl
jb
or
insl
push
mov
pop
adc
insl
jp
add
jg
push
sahf
aas
and
xchg
pusha
in
fs
mov
stos
push
clc
rorb
adc
xor
addb
add
jo
mov
sub
clc
mov
sbb
pop
cltd
adc
jecxz
lds
dec
cmp
loopne
cmp
pop
pop
movsb
push
adc
mov
or
adc
in
xor
cmp
popf
pop
mov
fwait
mov
add
fisubl
pop
mov
jne
mov
test
out
mov
scas
mov
lods
enter
xor
aam
adc
jl
inc
jb
mov
pop
or
repnz
xchg
xchg
std
push
bound
dec
cwtl
inc
add
jp
xor
ret
ret
addr16
lods
js
pop
adc
test
cmp
jg
out
adcb
add
iret
pushf
dec
bound
inc
daa
jmp
data16
sbb
lea
mov
mov
jae
adc
rclb
fwait
popa
stos
inc
sbb
ret
mov
dec
mov
iret
clc
mov
dec
imul
mov
mov
pop
adc
icebp
adc
scas
popa
out
xchg
lcall
jp
arpl
push
adc
es
dec
mov
dec
cmp
ret
inc
pop
or
dec
sbb
daa
jmp
and
pop
fstl
mov
insl
mov
xor
lock
int
shll
frstor
in
pushf
pop
or
push
outsl
cld
jo
adc
xchg
mov
clc
sub
pop
cmp
mov
mov
push
aas
es
shll
jg
enter
mov
jb
and
push
adc
addr16
dec
push
sbb
cltd
jo
xchg
mov
je
cmp
cmp
inc
add
push
cld
cltd
push
dec
mov
cmp
push
imul
ljmp
push
in
mov
and
scas
mov
pushf
push
xchg
and
outsb
fadd
xchg
cs
adc
test
adc
sbb
insl
sti
dec
pop
mov
insb
or
or
ds
fsubrl
mov
inc
jp
xor
xchg
fcoms
mov
push
or
cmp
fs
mov
push
outsl
outsb
es
movsb
mov
jb
xor
mov
add
or
sbb
je
mov
sbb
mov
cmp
and
stc
js
faddl
adc
pop
lea
fisubs
sub
stos
push
test
push
lea
sbb
pusha
push
cs
rolb
push
pop
and
jecxz
popa
ret
add
adc
adc
lcall
xchg
sub
lahf
shll
mov
jae
iret
lahf
mov
push
sbb
mov
mov
filds
xchg
into
insl
sub
mov
notl
xchg
pop
mov
xor
push
adc
es
jle
aad
or
push
adc
or
or
cwtl
jae
adc
add
mov
sahf
cmp
adc
mov
cli
hlt
gs
jae
jb
gs
mov
jo
adc
pop
xor
jge
fdivrl
rolb
adc
repnz
stos
ficomps
pop
or
cmp
push
jnp
mov
int3
lahf
push
add
jecxz
stos
outsb
dec
sub
jbe
stos
or
sbb
or
xchg
xor
add
cmp
outsl
push
pop
sbb
pop
cmpb
xchg
stos
pushf
jo
or
dec
pop
insb
sbb
leave
notb
int
sbb
out
jbe
or
cmc
mov
sub
jo
hlt
sub
xchg
mov
jae
icebp
gs
xor
or
divb
and
adc
sbb
pop
adc
add
popl
jecxz
sti
repnz
jae
int
inc
rclb
jns
and
imul
mov
jecxz
leave
hlt
push
bnd
stc
and
rorb
push
repz
dec
out
enter
sbb
lds
notl
repz
cs
popa
in
mov
cmpsb
inc
xor
lods
push
mov
or
mov
xchg
inc
push
xchg
hlt
inc
lock
lods
mov
inc
inc
mov
repnz
hlt
les
push
adc
lock
in
mov
xchg
fistpll
xor
cmp
inc
loope
lea
mov
out
or
fld1
sub
frstor
sub
xchg
pop
jl
push
adc
in
fdivs
mov
cmc
cltd
out
push
insb
inc
cmp
sub
or
hlt
orl
filds
mov
mov
fisubl
call
ds
cwtl
pusha
mov
lods
in
or
test
inc
lcall
add
aas
negb
shl
sahf
xchg
xchg
mov
dec
data16
push
adc
addr16
cld
pop
pop
xchg
in
out
in
rcrl
int3
insb
jns
sarb
pusha
shll
gs
dec
cwtl
push
adc
fists
repz
stos
notl
cmc
aam
or
push
sysexit
int3
out
popf
jne
rclb
mov
cmpsb
inc
push
cmc
cmp
lahf
xor
cmpl
push
scas
loop
mov
fbstp
push
adc
jbe
xchg
mov
sarl
js
bound
inc
mov
ds
test
cs
sub
stos
adc
aaa
lretw
pop
sbb
icebp
sub
push
addl
jb
adc
pushf
stc
mov
mov
test
fsubp
sub
js
outsl
lret
sbb
mov
jecxz
cmp
mov
adc
or
fsub
dec
adc
cltd
inc
jb
iret
lahf
addl
pop
push
pop
mov
pop
loop
test
sbb
cmc
jp
push
inc
cmp
sbb
mov
ljmp
push
inc
pop
pop
lods
fsubrp
push
and
xchg
addr16
test
adc
jo
mov
mov
jmp
sub
test
jmp
cmp
lods
pop
testl
push
int3
lahf
aam
adc
idivb
mov
mov
mov
sub
jmp
rorl
movsl
and
cmp
stos
push
icebp
popf
imul
mov
push
adc
iret
call
sub
lods
jg
fxtract
iret
call
daa
sbb
hlt
mov
test
mov
xor
sbb
sbb
jge
hlt
arpl
sub
mov
repz
mov
push
push
push
xchg
mov
testb
setle
jge
or
pop
out
mov
push
mov
das
lret
test
inc
push
jl
push
stc
ja
or
rcrb
jb
fucom
sbb
push
rcrb
jmp
mov
jae
xorb
jg
aad
xor
inc
in
stos
push
rcrb
jmp
mov
jae
test
or
int
xchg
jne
insb
and
pop
rcl
test
gs
popa
sar
or
push
xor
fs
pop
sub
adc
push
clc
jnp
into
sbb
jns
sbb
push
pop
mov
adc
fistps
sub
cmc
sub
insl
enter
test
pushf
cmp
mov
and
pop
rcl
xchg
sbb
test
ret
cmpsb
xchg
arpl
mov
mov
push
adc
sub
sarb
adcl
dec
mov
sbb
fsub
pop
and
push
inc
adc
pop
testb
fnsave
cmp
fbld
add
cmp
add
scas
pop
mov
js
or
or
mov
lds
add
add
jne
bnd
add
pop
adc
add
sbb
cmp
fdivrs
push
adc
mov
test
mov
dec
mov
cmpsl
adc
imul
loope
xchg
and
loopne
std
pusha
pop
cmp
fs
mov
shr
push
adc
aad
jp
and
pop
mov
xor
adc
push
adc
pop
jns
cmc
mov
es
sub
lods
lret
pop
aas
movsl
cs
cmp
lock
xchg
push
outsl
pop
cmp
jno
pop
mov
stos
and
jns
cs
dec
test
dec
ja
shr
hlt
aaa
dec
icebp
mov
std
rorb
adc
fisubl
add
xchg
mov
repnz
outsl
ficoms
cmp
push
rcrl
mov
mov
add
std
cmp
cld
cmp
adc
cmpsb
push
outsb
mov
jnp
xchg
cmp
cltd
xchg
and
ljmp
pop
adc
out
lahf
outsl
push
jae
shrb
adc
movsl
out
mov
pushf
jbe
adc
aaa
pop
push
adc
std
mov
mov
jge
adc
or
ds
cli
sub
add
addr16
push
cwtl
or
into
ja
mov
test
pop
adc
scas
loopne
lds
mov
sbb
push
xor
pop
int3
xor
sub
cli
in
int3
sbb
push
int
jne
push
push
push
cmp
adc
std
sbbb
and
pop
adc
mov
loope
roll
push
sub
ljmp
insl
divb
sahf
push
popa
shl
dec
imul
sbb
daa
adc
stos
fcompl
cmpsl
dec
push
js
mov
shll
andb
jl
sub
xchg
enter
out
pop
in
adc
pop
push
stos
inc
out
and
testl
gs
ja
fstl
lret
and
jg
pop
and
lret
addb
dec
in
xchg
add
test
stos
mov
lret
bound
test
cmp
movsb
stos
push
gs
imul
cmp
daa
test
inc
and
loope
xor
out
push
mov
pop
stos
push
test
mov
lods
push
sub
pop
cmp
xor
push
adc
push
inc
sbb
adc
xchg
test
and
mov
sbb
jns
popa
repz
jo
jecxz
sbb
sub
movsl
into
je
push
fdivrl
xor
dec
hlt
call
sbb
test
movsl
dec
sahf
aad
iret
in
fsub
clc
das
inc
rclb
sub
lds
addr16
sbb
testb
adc
adc
addb
daa
add
aas
test
push
dec
push
and
or
push
push
ficoml
or
jbe
sbb
lahf
pusha
insb
gs
sbb
mov
adc
decl
icebp
sub
mov
push
cli
js
add
in
lret
cmp
inc
out
mov
mov
add
int
mov
adc
or
inc
insb
mov
sbb
lahf
mov
gs
adc
rorl
dec
test
sbb
add
pop
sub
pop
int3
addr16
test
mov
cld
mov
sub
adc
and
loope
sbbb
idivb
int
insb
clc
inc
hlt
xchg
sub
aas
dec
push
pop
dec
fnstcw
inc
mov
lret
in
les
data16
lcall
pop
sbb
sbb
lods
and
sbb
cltd
fldenv
xchg
lcall
repnz
mov
into
jns
xchg
mov
pop
aad
add
cmp
mov
mov
mov
call
xchg
test
outsb
inc
aad
adc
in
rorb
pop
sahf
push
jbe
xchg
fs
bound
or
movsb
inc
mov
lods
push
sub
pop
and
mov
cli
xchg
jmp
xchg
mov
stos
inc
dec
dec
cld
jle
and
dec
ret
push
out
or
pop
inc
jl
outsl
in
int
pop
lret
jb
push
pop
cmp
adc
shll
mov
sbb
mov
int3
loop
test
mov
out
sbb
xor
bnd
xchg
xchg
in
loopne
cmp
fistl
jecxz
sbb
xchg
pop
lock
dec
inc
inc
mov
pusha
in
cmc
jne
scas
pop
daa
add
jns
les
adc
lds
cmp
nop
ret
mov
pusha
adc
mov
stc
add
push
pushf
jno
cmp
sub
push
push
jo
xor
test
jecxz
jg
loope
daa
mov
rclb
xchg
fdivrl
add
fiadds
rclb
into
inc
sub
and
loope
aam
xor
xchg
pop
push
pushf
int3
repnz
mov
mov
jge
cmp
cmc
and
jecxz
int3
sub
sub
mov
ljmp
jne
pop
sub
ljmp
xchg
xchg
enter
dec
dec
lret
cli
test
xchg
es
insb
fsubl
pop
addl
and
sub
mov
outsb
addb
lea
xchg
and
pop
adc
addr16
cmp
sahf
cmp
mov
lock
hlt
mov
sbb
rclb
cmpsl
dec
push
push
xor
adc
fdivs
adc
or
sub
mov
mov
movsl
shlb
push
cmpsl
dec
int
divb
repnz
jno
adc
adc
adc
add
inc
pop
jno
adc
mov
mov
addr16
int3
shrl
push
adc
push
mov
add
xlat
std
pop
clc
shl
xor
mov
mov
xor
mov
add
dec
cmp
nop
cmp
daa
adc
cmp
or
cwtl
jae
adc
jge
hlt
imul
adc
and
pop
dec
sahf
cmp
push
push
jnp
pusha
mov
inc
hlt
call
push
adc
or
fsubrs
jecxz
cmp
cmc
jo
dec
pop
mov
hlt
and
sbb
push
adc
xlat
inc
sbb
mov
fsubr
and
subb
xchg
pop
jg
adc
ror
push
mov
push
push
sub
dec
insl
idivb
sbb
neg
xor
adc
movhps
cltd
dec
repnz
adc
in
cmpsl
ret
xchg
mov
fdivrl
mov
arpl
jbe
push
shlb
lods
fcomps
xchg
mov
sti
aad
xor
out
mov
hlt
arpl
inc
outsb
pop
out
and
ljmp
dec
clc
mov
mulb
stos
int3
lds
or
aam
stos
and
imul
inc
dec
mov
js
fcmovnbe
aad
push
or
outsl
hlt
pop
xor
inc
dec
repz
fdivl
mov
jno
daa
pop
shrb
add
test
sub
cmpsl
lods
int3
mov
cmp
test
or
sub
mov
mov
pop
sub
mov
and
loop
jle
mov
lds
repz
ja
jbe
sbb
and
fs
sbb
xchg
rolb
mov
in
popf
sbb
add
mov
add
cmp
cmpsb
mov
or
mov
int3
shlb
insb
sahf
js
push
and
cld
sbb
outsl
cmp
push
inc
notl
into
fcoms
stos
mov
dec
in
xor
mov
loope
lock
cmc
jae
out
xor
xchg
cmp
push
push
or
popf
sbb
sbb
jl
push
loopne
inc
push
or
in
repnz
cmc
jg
mov
sbb
divb
cmpsl
cmpsb
fdiv
fwait
jns
mov
dec
mov
dec
adc
scas
jbe
adc
xchg
gs
jp
addl
out
gs
cmp
insl
out
imul
xor
cwtl
mov
adc
xor
scas
push
callw
cli
mov
mov
mov
jge
xlat
cs
inc
add
xchg
mov
jbe
stos
outsb
outsl
adc
inc
mov
cmp
enter
mov
popa
popf
cmp
je
mov
cmp
pop
pop
out
dec
cmpsb
data16
push
adc
mov
cmp
mov
lods
mov
jecxz
cmp
adc
fidivs
cwtl
fwait
cmpsl
aam
shlb
xchg
cmc
push
mov
je
pop
or
adc
je
ja
pop
push
ret
inc
aaa
int
jecxz
mov
std
add
dec
fdivl
adc
sub
imul
adc
xlat
mov
aad
scas
rcrl
out
sahf
cmp
xor
and
mov
bnd
jo
inc
lea
inc
outsb
pop
jb
mov
adcb
add
out
lahf
testb
mov
push
xchg
sub
mov
cld
xlat
loop
ja
shll
movsb
cld
arpl
sub
outsb
or
push
test
jno
push
adc
lea
xchg
adc
xchg
jno
in
pop
mov
adc
movsl
shlb
push
test
cmp
mov
insl
xchg
daa
sti
pop
cs
int
idivb
mov
dec
adc
xchg
mov
jecxz
outsb
aad
jp
dec
shll
outsb
mov
and
or
fwait
mov
scas
lret
adc
xchg
jno
in
call
mov
and
lods
push
cmp
push
icebp
jnp
mov
sub
inc
lea
push
stos
push
and
push
lds
das
xor
xorb
pop
hlt
call
inc
xor
aad
test
push
test
cmp
cld
jb
iret
adc
inc
and
insl
dec
mov
bound
cmc
stos
push
test
sub
cmc
inc
iret
lahf
jge,pt
xor
cs
int
adc
or
cmpsl
inc
sbb
test
jge,pt
cmp
mov
push
movsl
shlb
push
cmpsl
dec
adc
jl
jae
into
ljmp
mov
lods
push
or
push
test
jo
pusha
ret
icebp
mov
push
ss
into
sahf
mov
jae
dec
shlb
loopne
mov
xchg
and
hlt
add
stos
mov
and
cmp
clc
jnp
jae
inc
cwtl
or
stos
push
sti
xchg
and
repz
mov
popf
mov
adc
je
inc
mov
inc
jo
pop
cs
push
je
push
or
out
xchg
aaa
add
cmp
stos
dec
test
mov
push
aam
sub
subl
sete
ljmp
pop
sub
mov
out
push
sbb
push
pop
cmp
xor
rclb
icebp
sub
mov
ljmp
cltd
out
xchg
nop
insb
jo
cmp
ss
inc
dec
outsl
adc
int3
pop
jne
fcomi
cld
out
sahf
aam
jae
mov
aam
sbb
or
sub
and
lea
and
pop
sub
jmp
or
push
adc
push
xor
ds
repz
pop
adc
or
int3
es
mov
lret
sbb
jne
jg
negb
int3
aam
fwait
movsb
pop
mov
decb
stos
test
sbb
shrl
push
inc
movsl
enter
inc
sti
push
aas
or
dec
push
cmp
sub
dec
mov
movsl
sub
icebp
fwait
pop
fidivl
and
ret
pop
jmp
add
popa
mov
pop
out
imul
sar
inc
xchg
push
popa
in
xorl
xor
out
repz
repnz
add
cmpsb
sub
gs
roll
dec
lea
addr16
xor
jo
lds
mull
jl
addr16
dec
mov
sub
hlt
fwait
pop
clc
mov
jbe
xchg
negl
cltd
gs
das
loop
sbb
int3
adc
imul
ss
or
mov
sahf
and
push
push
mov
jle
fs
xchg
mov
mov
and
add
shlb
dec
push
inc
add
stos
js
mov
xchg
add
xor
adc
xlat
test
push
addb
mov
add
cmc
loope
mov
test
mov
sar
jecxz
clc
in
aaa
mov
stos
jmp
stos
mov
scas
int
adc
sbb
fsubr
mov
jecxz
mov
into
adc
cmp
push
addr16
clc
dec
jmp
xchg
fsubrp
fdivrl
push
and
sub
sbb
cmpsb
insl
mov
stos
jl
bound
dec
stc
mov
pop
sbb
mov
mov
push
lods
and
popa
dec
jle
test
push
jo
jmp
xor
dec
mov
in
dec
cmpsb
push
cmpsl
dec
jbe
and
push
jmp
push
rorl
clc
add
mov
xor
mov
das
addl
test
mov
ds
cli
mov
in
in
out
adc
mov
aad
adc
push
pushl
mov
sbb
test
cmp
or
clc
les
mov
cmp
adc
cmp
mov
and
pop
adc
mov
js
mov
insb
sbb
decl
stc
or
sahf
cmc
pop
daa
rclb
mov
jb
or
pop
fmull
addl
mov
xor
push
insl
faddl
or
fdivrl
mov
ficompl
loopne
mov
push
pop
rcr
mov
pushf
fidivs
loope
lods
dec
push
pop
pop
in
sbb
adc
adc
aam
notb
negl
sahf
xchg
pop
xor
shrb
push
adc
stos
fmul
jg
push
mov
mov
xor
xlat
push
insl
and
inc
mov
adcb
fisubl
mov
ror
js
fldl
adc
mov
ret
std
call
es
lods
mov
or
push
pmullw
mov
adc
mov
sbb
divb
ja
mov
pop
popf
movsl
je
adc
adc
pop
pop
cmpsb
in
bnd
pop
lods
int
clc
inc
push
andb
mov
mov
rcr
daa
dec
sbb
cmp
cs
in
cmpsb
add
ret
push
push
stos
aam
pop
jl
lock
cmp
cmp
into
cmp
adc
xor
lods
roll
push
and
pop
adc
scas
pop
cmpsl
stos
hlt
lods
xor
in
add
lods
imul
dec
lods
add
frstor
cmp
cmc
addr16
xchg
test
fnstenv
sbb
call
xchg
sbb
rcll
and
mov
cmpsb
push
shll
push
pop
test
in
imul
cmpsl
arpl
push
inc
inc
nop
add
pop
loopne
mov
dec
mov
daa
fld
repnz
mov
lahf
adc
cmp
add
test
pop
xlat
dec
test
imul
mov
test
out
mov
es
js
negl
aad
mov
lcall
pop
daa
xchg
sub
and
push
outsl
cmpsl
or
adc
and
push
arpl
or
andl
loop
sub
inc
inc
loope
pop
adc
mov
and
bound
cltd
or
cwtl
stc
inc
mov
inc
dec
push
adc
test
adc
test
mov
addr16
pop
js
shll
fnstsw
bnd
imul
outsb
push
pop
inc
sahf
cmp
mov
mov
out
sub
testb
mov
xlat
imul
jle
js
push
dec
inc
shr
pop
sti
sbb
sub
and
sbb
push
lcall
or
and
jge,pt
je
aad
xor
push
stos
push
fsubrp
push
sub
sub
push
push
fnsaves
test
push
adc
or
inc
lea
and
aam
dec
cmpsl
cmp
in
pop
jmp
ret
std
or
sbb
out
mov
or
in
divb
cwtl
mov
in
xchg
jnp
mov
stos
stos
mov
mov
xor
aas
dec
mov
push
and
lods
fbld
or
in
jbe
jmp
jns
add
lret
fs
pop
cmp
daa
inc
mov
nop
mov
push
pop
xor
adc
stos
fsubp
xchg
push
add
nop
cwtl
jecxz
ficoml
shrl
xor
out
push
aad
ljmp
dec
inc
jge
loopne
pop
rolb
sbb
pop
out
sahf
sbb
xchg
and
mov
hlt
stos
xchg
int3
adc
shl
lods
mov
push
aad
nop
and
cmp
or
ds
adc
arpl
das
popa
rclb
and
cmp
es
inc
sbb
movsb
lahf
mov
inc
sbb
pop
push
shl
sbb
cmc
xor
pop
movsl
dec
pushf
aas
repnz
fcmove
popf
cmc
mov
adc
inc
jg
and
pop
adc
popa
and
mov
fwait
mov
leave
sub
xchg
dec
mov
push
scas
sub
jae
mov
hlt
outsl
mov
jg
xor
ret
out
mov
cmp
xchg
cmpsb
fwait
bswap
mov
pop
add
xchg
xor
dec
pop
test
or
adc
in
xchg
dec
sahf
lahf
fildl
lea
dec
mov
sub
jne
in
call
xorb
retw
out
adc
mov
movsl
clc
inc
mov
mov
jp
jbe
sub
lahf
scas
xor
daa
sbb
cmp
inc
xchg
clc
div
jg
pop
xor
cmp
mov
dec
adc
scas
add
xorl
inc
loopne
push
adc
push
inc
jp
and
pop
adc
mov
pop
or
hlt
jno
ret
and
xor
pop
movsl
cmp
mov
stos
pop
xor
and
call
mov
mov
lret
push
jb
cmp
xchg
jle
pop
mov
leave
mov
add
push
and
cmp
mov
aad
sbb
int
adc
fists
lock
sub
gs
adc
and
es
add
pushf
adc
test
and
in
xlat
imul
add
pop
adc
cmpsl
aad
mov
imul
daa
mov
clc
and
mov
cltd
sub
bound
movl
ja
loopne
push
adc
lea
leave
pop
adc
xor
lcall
imul
aam
or
or
add
pop
mov
jle
adc
insl
jmp
stc
popf
xlat
xor
lds
cmp
dec
int3
push
ds
xchg
xlat
ljmp
sbb
in
sbb
cmp
and
in
pop
mov
push
dec
pop
cmp
cmp
mov
aad
push
and
fidivrl
cmc
gs
mov
mov
mov
popa
cltd
cmpsl
int
out
imul
cmpsl
push
stos
push
test
aad
lret
jo
iret
daa
loopne
push
adc
mov
flds
and
pop
adc
add
mov
jae
out
lahf
mov
out
lods
int
int
repnz
sbb
push
inc
sub
pop
dec
into
imul
cli
mov
jmp
adc
stos
cmpsl
add
pop
mov
sbb
fsubr
test
mov
clc
mov
ret
inc
shlb
mulb
sbb
mov
and
pop
out
inc
ret
pop
lods
pop
lret
pop
mov
xlat
lcall
out
inc
mov
sub
sbb
lods
fucomip
ja
push
jne
clc
stc
in
push
hlt
jg
mov
clc
pop
jmp
push
push
shll
pop
stos
push
test
xchg
inc
rcr
mov
xchg
cmp
adc
add
mov
mov
std
or
leave
pop
adc
icebp
fcmovne
lock
lret
shll
dec
mov
gs
mov
std
movsb
push
stos
and
mov
insl
sub
mov
sub
in
out
add
jns
dec
bnd
mov
jmp
jae
jno
arpl
dec
mov
nop
mov
mov
pushl
gs
cltd
pop
in
xchg
aas
lock
rcrl
add
stos
xchg
push
fstpl
or
fsts
insl
mov
movsb
fsubrl
add
fucom
push
and
adc
mov
cmc
in
fidivrs
aam
ret
cmc
ljmp
cmp
adc
and
pop
adc
and
imul
cmpsl
shrl
adc
add
xchg
inc
mov
lret
mov
xor
adc
pusha
clc
mov
mov
out
inc
aad
js
icebp
mov
movsb
inc
mov
cmp
sbb
mov
mov
cs
cmpsl
sbb
inc
ja
adc
icebp
xor
stc
lea
sti
or
pop
xor
pop
xor
inc
lcall
in
cmp
inc
add
cli
cmp
jl
mov
stos
push
dec
mov
mov
xchg
imul
cmpsb
sbb
and
inc
push
scas
jno
imul
xchg
mov
jns
imul
xor
push
sub
jmp
scas
in
loopne
push
adc
or
cmp
leave
pop
adc
in
jmp
scas
push
jae,pn
in
sbb
fcmovb
adcl
hlt
int3
jae
ja
lret
std
imul
adc
repz
dec
mov
inc
mov
cmp
out
test
stc
stos
mov
cmp
mov
sub
sahf
pop
test
mov
rolb
lods
enter
sub
fisubrs
scas
xor
or
movsb
scas
mov
dec
lods
pop
orb
lock
push
stos
push
shrb
repz
fwait
cwtl
inc
int3
cmp
push
sub
cltd
xchg
pop
cld
push
push
std
roll
outsb
mov
into
cmp
adc
ret
mov
movsl
clc
sub
and
pop
adc
fs
jae
add
adc
cmp
icebp
dec
jb
pop
and
sti
xchg
pop
mov
mov
jp
popw
push
movb
jae
dec
inc
je
sub
dec
cmp
imul
mov
and
imul
jo
jae
clc
icebp
mov
pop
aaa
and
in
ror
xor
cld
test
inc
sbb
mov
pop
or
repz
fdivrs
jle
cmp
fldt
add
daa
gs
add
cmp
hlt
out
sub
daa
dec
and
mov
cmp
mov
cmovs
addb
enter
into
pop
stos
push
shrb
and
nop
fdivrs
cmp
fldl
dec
ljmp
popf
dec
bound
test
flds
xchg
pop
cmp
pop
rcr
inc
jb
xchg
and
fcoml
jbe
jbe
mov
hlt
pushf
lret
mov
inc
insl
pop
fs
sub
cs
repnz
pop
aas
inc
xchg
arpl
mov
xchg
dec
aad
jecxz
fisubl
in
push
cld
stos
in
popa
ds
ret
int
cmp
ss
jb
xchg
dec
test
lcall
out
cwtl
mov
adc
cs
int3
enter
rcr
jae
push
ret
push
sub
dec
aad
mov
and
clc
sub
loopne
addb
gs
xchg
sub
xchg
movsl
rorb
out
out
xlat
mov
in
cmp
in
mov
adc
nop
ja,pn
lret
orl
repz
sahf
in
sub
inc
pop
sahf
fiadds
sub
ljmp
out
push
out
sbb
or
int
cmp
ss
jb
scas
dec
aad
sub
nop
sbb
mov
sar
sahf
call
into
repz
sub
lods
dec
ficomps
leave
xor
jg
out
xor
sbb
fisubs
imul
out
sbb
cltd
cmp
jge
cmp
mov
out
push
rclb
incl
push
add
cmp
cmp
daa
pop
mov
movsb
test
sar
mov
xor
loope
jg
imul
push
scas
mov
mov
pop
sub
inc
lahf
sbb
xor
ja
adc
lahf
adc
aam
ja
jp
mov
in
mov
mov
sti
lods
movsb
xchg
jle
cltd
arpl
lcall
push
jl
insl
dec
es
mov
jmp
cli
enter
mov
xor
stc
mov
cmp
test
pusha
pop
pop
lahf
sub
popa
jl
mov
into
setnp
popa
adc
push
and
in
ss
push
sub
dec
mov
in
jmp
push
mov
mov
xlat
dec
xchg
jns
int
cmpsl
mov
lods
push
mov
arpl
sbb
or
inc
adc
mov
popf
push
xchg
adc
inc
fldt
scas
into
mov
lret
jns
fmuls
jno
push
sbb
aad
fwait
test
icebp
sub
cs
adc
add
dec
push
adc
fsubrl
test
dec
xor
inc
adc
sbb
dec
jb
and
add
xchg
pop
outsl
es
xor
stos
jp
pusha
pushw
mov
jg
fiaddl
add
imul
cmp
js
mov
lds
pop
and
ds
aam
call
clc
out
out
arpl
call
sub
adc
adc
movsl
leave
sahf
sarb
jbe
inc
sbb
sti
adc
mov
imulb
jg
mov
mov
pop
out
fdecstp
cmc
pop
data16
push
int3
daa
icebp
ficoml
stos
aas
in
and
lcall
sub
mov
add
cmp
je
rcrl
or
ret
sub
dec
bound
cld
out
loopne
addb
gs
xchg
sub
xchg
fiadds
ljmp
ret
and
scas
aad
jp
in
rcl
inc
push
aam
cmp
push
stos
sub
lods
arpl
add
mov
cmpb
call
cmp
scas
push
fcoml
jbe
mov
adc
ret
insl
mov
jmp
pop
subb
cmpsl
push
stos
push
es
push
aad
sbb
and
inc
sar
stos
mov
inc
or
scas
fsubrp
pop
inc
push
sub
cs
jnp
out
push
hlt
lret
and
lahf
mov
out
mov
pop
xchg
push
pop
cmpsl
push
stos
push
test
enter
adc
push
adc
and
pop
adc
and
pop
fcomps
ret
imull
mov
jnp
stos
sbb
mov
leave
push
daa
adc
pop
adc
cmpsl
mov
xor
mov
dec
movsb
gs
pop
push
imul
ja
add
in
pop
int3
pop
sbb
mov
sbb
adc
stos
jns
fisttpll
in
out
adc
stos
shrb
into
stos
insb
int
cmp
movsb
test
das
icebp
ja
inc
push
sub
shll
lock
push
mov
stos
fists
jbe
jno
sbb
sub
sbb
cmc
mov
push
lcall
push
loopne
push
adc
mov
jle
ja
popf
add
leave
pop
adc
lods
inc
int
dec
lahf
mov
movsb
jmp
xchg
or
push
mov
sar
out
pop
sti
fsub
stc
int3
push
inc
and
sub
mov
sbb
xor
test
xlat
and
inc
cli
cmpsb
mov
repnz
fidivrs
sub
repz
jo
mov
cmp
sbb
adc
jne
idivb
ss
mov
push
mov
out
jne
mov
arpl
mov
popf
subl
inc
mov
loopne
push
adc
call
ljmp
insl
pushf
syscall
add
jl
sti
mov
mov
pop
ret
int3
insb
loop
movsb
pop
jl
xchg
push
incl
xchg
sub
mov
add
xchg
scas
dec
lods
mov
adc
jmp
and
insb
sbb
lods
mov
loopne
std
icebp
jp
sub
int3
iret
or
lahf
mov
mov
push
jecxz
mov
or
cmp
adcb
fcmovnbe
pop
das
pop
xchg
mov
jmp
mov
stos
clc
jge
mov
adc
dec
mov
nop
loope
xchg
in
idiv
aam
dec
mov
div
mov
out
sub
gs
pop
or
push
in
xor
leave
pop
adc
push
lret
pushf
scas
clc
fisubl
mov
ljmp
movsl
cmp
daa
fcom
out
clc
lds
adc
mov
push
adc
loope
adc
frstor
loop
mov
pop
adc
add
adc
adc
mov
pop
adc
rorb
sbb
adc
jmp
mov
pop
clflush
mov
loop
loopne
adc
mov
out
rcrb
cltd
rorl
das
loope
dec
jo
adc
cmpsb
mov
mov
mov
adc
push
hlt
jle
and
jns
sub
push
cs
and
ret
inc
or
scas
xor
jp
push
pop
loope
and
adc
pop
jns
push
lcall
aam
inc
test
dec
mov
cmp
aaa
mov
pusha
shl
add
sbb
fnsave
adc
and
bound
jge,pt
jg
cmp
in
pop
inc
push
inc
sub
push
adc
push
ret
jo
adc
push
fwait
jge,pt
stos
mov
ja
sbb
popf
push
lock
je
out
fdivrl
xchg
lret
lods
enter
pushf
cmc
mov
cli
push
hlt
xchg
push
and
dec
popa
dec
pop
out
push
or
lock
xchg
xchg
cmp
filds
lock
mov
out
fdivl
mov
adc
hlt
shrl
pop
xor
rclb
mov
repnz
aaa
mov
mov
repnz
add
mov
pop
scas
push
filds
icebp
les
cmp
dec
out
mov
and
scas
lret
xchg
pop
in
push
and
pushf
add
and
add
jge
mov
push
aam
popf
ss
stos
and
movsl
push
and
stos
aam
jnp
push
pop
xor
jg
xor
jl
jae
pop
out
xchg
pop
faddl
or
xor
leave
sbb
adc
jns
cld
add
cwtl
or
push
fsub
pop
inc
popa
push
mov
mov
mov
xorb
ljmp
nop
mov
xchg
stos
dec
es
cmp
adc
pop
in
push
sarb
sti
hlt
call
adc
mov
in
sbb
push
adc
stos
sub
popa
sarb
cwtl
jb
lret
push
pop
popa
test
repnz
or
xchg
popf
mov
mov
cld
or
les
cmp
aas
js
stos
push
std
scas
int3
imul
test
xor
popa
or
insl
shrl
test
imul
push
cld
subl
sbb
push
mov
cmp
xor
adc
adc
out
cwtl
pop
push
scas
lret
pushf
cmp
jns
inc
imul
sub
lods
cmp
add
mov
dec
cwtl
push
lds
int3
push
mov
std
insl
ficompl
icebp
and
lds
arpl
int
inc
and
xchg
outsl
orb
add
fldenv
insb
icebp
fs
dec
xlat
push
repnz
fistpll
fs
out
ret
sub
and
icebp
jmp
ss
psllw
push
push
pop
mov
shrl
popf
push
mov
mov
sbb
mov
lret
mov
int3
lds
movsb
dec
mov
dec
scas
and
or
sub
fimull
out
inc
sbb
outsb
out
pop
das
lret
jb
adc
sbbl
pop
leave
inc
sub
pop
ret
pop
lods
adc
rorl
fs
adc
pop
mov
inc
aam
xlat
jbe
gs
mov
pop
repz
rol
xor
push
test
je
cmpl
xchg
adc
mov
mov
lret
xchg
divb
mov
jno
ret
fists
add
es
pushf
arpl
mov
xor
push
pop
mov
ret
push
adc
sahf
dec
test
lds
popa
lods
mov
wrmsr
add
dec
push
loopne
and
cltd
push
mov
testb
mov
adc
add
sbb
fists
adc
mov
and
aaa
mov
mov
inc
jle
mov
ss
gs
aad
test
push
lods
pop
lcall
sbb
ljmp
sbb
xor
stc
add
mov
sub
rcrb
arpl
dec
in
in
loope
xchg
scas
fiadds
fsubrs
mov
xor
xor
jl
aaa
mov
clc
test
dec
pop
or
mov
int
adc
jp
test
mov
in
dec
pop
push
mov
push
stos
testb
adc
out
nop
jo
ja
push
jge
sbb
std
mov
pop
adc
add
popa
fdivs
adc
mov
call
mov
pop
add
adc
dec
mov
stc
cmp
clc
pop
adc
cmpb
mov
mov
nop
call
shll
cmp
shr
dec
sahf
push
and
adc
mov
jne,pn
mov
adc
lock
push
dec
lahf
mov
pop
adc
lods
or
mov
pop
adc
lods
jno
lods
push
xchg
or
adc
clc
out
lahf
imul
pop
out
stos
push
std
stos
jg
xchg
daa
pop
add
adc
cwtl
pusha
call
jecxz
adc
xchg
xor
jl
fwait
cmp
push
or
adc
fdivrl
or
call
lea
xor
ret
or
daa
or
jnp
mov
cmpsl
xchg
repz
adc
in
add
ret
pop
adc
xor
cmp
or
mov
rolb
sti
cmc
jmp
sub
pop
adc
iret
stos
push
movsl
sbb
adc
test
pop
adc
mov
enter
mov
cli
test
and
adc
fwait
insl
xchg
lcall
pop
fst
scas
push
stc
scas
ja
popf
das
mov
imul
es
adc
icebp
xor
std
pop
adc
mov
fwait
push
mov
mov
in
adc
cmc
repz
shrb
pop
adc
and
sub
xchg
stos
cmp
or
xor
aam
jnp
jge
out
adc
into
call
stos
imul
into
xor
dec
jg
mov
sub
adc
inc
aad
dec
jne
adc
adc
sahf
lock
dec
inc
sub
inc
add
hlt
pop
adc
adc
push
sub
enter
adc
mov
dec
push
dec
xchg
test
pop
adc
sub
xor
push
test
popa
iret
sbb
or
pop
loopne
loopne
aas
stos
mov
adc
insb
fwait
or
hlt
pop
adc
xor
aas
jae
leave
mov
sbbb
pop
stc
lcall
fidivs
xor
add
xor
mov
nop
or
adc
int
call
fs
pop
adc
ret
aad
adc
pop
adc
adc
dec
pandn
lock
jo
fsubs
fdivs
popa
adc
js
or
bound
test
jbe
adc
adc
rorl
orb
out
pop
adc
es
stc
insl
gs
fcomps
or
jno
mov
stos
pop
lret
xor
inc
sbb
adc
push
lods
jmp
sbbl
movsb
js
xor
sub
loope
xchg
dec
movsb
add
adc
fcmovbe
enter
or
pop
or
loop
jmp
stos
push
test
nop
pop
or
out
jle
mov
xor
ret
adc
test
sbb
hlt
pop
or
fwait
mov
pop
mov
arpl
jmp
sub
sub
testb
pop
adc
shrl
pop
adc
push
stos
add
ret
popa
iret
ljmpw
fdivrl
insl
adc
lret
mov
jl
ret
pop
adc
push
cmp
outsl
and
xchg
cmp
shll
add
or
cmp
push
cmpsl
dec
leave
ret
xchg
pop
adc
mov
adcb
mov
lods
jno
test
pop
adc
shrl
adc
into
xor
jl
rcll
imul
fsubr
mov
pushf
imull
sbb
adc
dec
lret
ret
or
cmp
or
rcrl
pop
adc
sti
hlt
call
jb
jmp
adc
lock
outsb
adc
xor
lahf
sub
loopne
adc
aad
push
std
stos
jg
daa
js
or
xchg
mov
call
invd
adc
sub
aad
stos
jl
cmpl
adc
out
fdivrl
push
adc
lret
je
sbb
mov
adc
push
jp
out
mov
mov
push
mov
add
ret
pop
adc
xchg
dec
sahf
cmp
lods
sbb
adc
cmc
call
jo
add
push
cmpsl
dec
leave
ret
movb
adc
hlt
mov
lock
adc
outsb
test
ljmp
mov
lahf
aas
jl
or
or
or
adc
call
push
xchg
and
test
mov
ljmp
sub
sbb
push
ds
pop
adc
push
jle
ljmp
filds
adc
fsubp
out
mov
leave
sbb
sub
adc
je
repnz
mov
jge
in
inc
repz
adc
into
mov
mov
inc
or
or
shll
fisttps
nop
in
icebp
pop
adc
jnp
mov
sbb
cli
pop
adc
xchg
iret
cld
cltd
add
cmp
jbe
clc
pop
adc
inc
mov
fstps
mov
jl
loope
dec
stos
pop
jl
pop
adc
test
or
in
pop
adc
fwait
loop
stos
sbb
sbb
adc
sbb
mov
or
cmp
push
xor
xor
adc
lahf
addr16
sub
sub
sbb
insl
test
cmp
pop
adc
jle
stc
loopne
dec
stos
mov
adc
aam
in
aaa
mov
adc
mov
cmp
pop
adc
jb
out
mov
cmp
pop
adc
sbb
mov
pop
adc
sbb
mulb
mov
dec
pop
push
in
xchg
cmp
dec
les
adc
popf
scas
lret
push
push
mov
adc
test
jno
dec
in
or
adc
std
jnp
lahf
inc
cmc
out
push
lcall
adc
dec
adc
mov
es
test
call
push
divb
add
inc
arpl
fs
lock
adc
pop
sub
ja
lock
add
cld
pop
adc
adc
adc
xchg
lock
adc
mov
into
stos
test
mov
cli
popf
cmp
pop
adc
sub
popa
std
hlt
sub
or
mov
cmp
mov
outsb
xor
or
xorb
sub
in
adc
dec
pop
jmp
mov
xlat
jmp
sub
push
or
out
fdivrl
push
int3
push
or
mov
bound
out
pop
adc
sub
or
sbb
cmc
call
dec
pop
add
pop
adc
xor
jmp
lahf
mov
cmpsl
sahf
jge,pt
or
or
testl
push
stos
add
hlt
daa
js
or
xchg
pusha
call
pop
adc
out
xor
stc
cmp
or
adc
push
jp
out
mov
mov
mov
test
mov
cmp
sarl
and
adc
scas
jl
hlt
mov
pop
pop
or
ret
push
test
push
cwtl
ljmp
lahf
imul
pop
imul
add
cli
cmp
out
fdivrl
push
aam
pop
adc
bound
testl
cmp
ljmp
mov
call
dec
pop
and
pop
adc
and
jmp
lahf
sub
pop
adc
lods
or
or
invd
adc
mov
push
test
daa
test
pop
adc
cwtl
pusha
call
or
cs
sbb
stc
cmp
in
adc
inc
jp
out
mov
mov
inc
lock
adc
in
cmp
shrl
dec
sahf
push
and
adc
inc
jl
hlt
mov
pop
cli
pop
adc
sub
cwtl
int3
push
shl
pop
adc
or
into
sahf
push
pusha
jecxz
adc
push
stos
add
cmp
or
adc
fidivrs
push
nop
in
pop
adc
pusha
xchg
add
aas
pop
loope
adc
leave
fwait
cmp
adc
out
pop
adc
jge
in
aad
mov
or
adc
aam
pop
scas
adc
and
xchg
ss
add
mov
mov
or
or
pop
mov
aaa
int3
cld
pop
adc
mov
subb
or
jmp
adc
xchg
pop
xlat
into
stos
test
mov
cli
popf
push
in
adc
sub
pusha
cld
cmc
sub
cmp
xor
movsb
cwtl
incl
adc
xchg
sbb
lock
adc
gs
sbb
add
cmp
sub
filds
adc
dec
shl
adc
or
gs
adc
or
push
imul
or
int3
cmc
jo
call
flds
or
cmpsb
and
sub
mov
adc
mov
mov
lds
dec
test
cmp
leave
out
fsubrs
push
fdiv
pop
adc
gs
mov
out
pop
inc
nop
inc
push
or
dec
dec
or
add
dec
nop
insl
pop
in
outsb
popa
lret
arpl
imul
ja
pop
es
add
iret
mov
mov
ror
fincstp
jo
or
adc
aaa
negb
nop
lahf
jne
add
mov
int3
xor
js
xor
mov
fwait
and
mov
leave
mov
das
cwtl
orb
imul
stos
daa
pop
or
sub
pop
dec
sbb
in
inc
lahf
adc
js
xor
leave
xchg
inc
xor
mov
imul
mov
rcpps
fisubl
arpl
test
sbb
sbb
ret
movsb
fwait
es
and
out
or
cmp
jo
mov
pop
pop
xor
mov
sub
test
sets
xchg
push
andb
and
pop
jmp
sub
lret
stos
aas
stos
fldenv
jo
popa
sti
ds
xor
dec
sbb
adc
mov
es
pop
in
loope
daa
rorb
push
lods
test
adc
push
in
cmpsb
mov
mov
pop
das
mov
stos
push
add
mov
or
sbb
adc
cs
push
gs
repz
sub
jo
popa
push
mov
arpl
xchg
xor
pusha
outsb
lock
aas
cs
scas
in
lret
xchg
test
fsubrs
push
lods
popa
or
xchg
pop
nop
and
out
sahf
mov
push
and
cs
fst
out
push
stos
sub
sbb
push
lahf
lret
jae
rcll
insl
or
lahf
cmc
lods
nop
push
push
ficomps
fwait
dec
or
jnp
in
out
jns
mov
sbb
testb
mov
xchg
stos
push
fsubrs
jl
push
in
cmpsl
mov
fcmovb
js
movsb
clc
mov
mov
push
mov
not
cwtl
push
adc
pushl
xor
cmp
repnz
cmp
push
and
arpl
jnp
outsb
mov
popf
adc
andl
sbb
push
rclb
sub
aam
inc
sbb
movsl
sahf
mov
push
and
cs
fstl
fldcw
jo
popa
push
jnp
push
aas
cltd
jo
dec
pop
xor
ja
or
pop
mov
aad
add
and
ret
dec
add
xor
mov
lret
jecxz
sub
sbb
shlb
pop
mov
cmp
jo
or
xchg
pushf
mov
call
mov
aaa
jg
push
push
and
or
es
daa
outsb
inc
pop
in
xchg
ss
arpl
xchg
mov
sub
js
imul
faddl
cmp
es
push
push
loope
lock
mov
xor
js
mov
adc
pop
outsl
stc
xchg
adc
push
popf
xor
and
pop
mov
push
jp
aam
movsl
mov
xchg
bound
and
push
jmp
in
ljmp
mov
add
ljmp
subb
and
xor
xlat
xchg
add
shr
aad
int3
cwtl
push
adc
loope
lds
mov
inc
add
aam
or
dec
xorl
push
test
inc
push
sahf
mov
mov
sbbb
or
mov
loop
aas
pop
cmp
jp
pop
movq
cmp
lock
and
aad
mov
or
movsb
dec
ret
inc
add
lods
sub
sbb
xchg
add
push
out
sbb
sbb
and
push
mov
adc
ret
xlat
in
dec
push
mov
into
shll
pop
lods
f2xm1
lds
adc
std
into
ds
int3
xor
lds
adc
push
dec
dec
loopne
pop
adc
rcl
mov
lds
adc
lock
adc
adc
adc
adc
push
xchg
loope
lock
adc
xchg
shlb
cld
dec
mov
mov
adc
cmp
jno
ret
mov
divb
adc
adc
adc
arpl
cmp
lcall
inc
sbb
push
pop
or
push
mov
lahf
add
adc
or
or
test
rcrb
cmp
xchg
andb
or
and
pushf
push
sbb
xchg
pop
jns
push
int3
push
mov
int3
fsts
mov
add
mov
and
dec
mov
inc
mov
ljmp
push
xchg
pop
pop
or
mov
push
pop
or
test
cld
jo
adc
dec
outsb
lock
pop
cs
scas
xchg
push
xchg
push
xlat
mov
popa
or
lock
inc
push
gs
ja
in
inc
lret
xchg
mov
lods
xchg
ret
sub
lea
xor
xchg
push
out
jmp
and
lds
movsl
and
jno
aam
adc
or
add
sbb
cmp
push
inc
inc
push
mov
outsb
adc
arpl
popa
sar
or
pop
out
fisubs
push
xchg
sub
sbb
xchg
in
lret
insb
jl
adc
clc
stos
cmp
pop
hlt
div
call
ljmp
popf
push
mov
push
adc
lock
int3
push
mov
pop
or
push
inc
add
adc
fwait
add
push
pop
inc
ljmp
outsl
iret
clc
lret
pop
or
and
inc
fcomps
mov
fidivs
push
pmuludq
out
cmp
lea
mov
stos
fucomp
mov
sub
gs
ss
dec
mov
clc
aam
subl
imulb
push
fdivp
pushf
ret
push
sub
jb
sub
sbb
mov
mov
shll
sbb
test
es
ret
sub
out
ljmp
or
rep
pop
out
mov
mull
insl
sbb
inc
dec
ljmp
sbb
inc
fldcw
pop
cmc
out
fmulp
sahf
mov
adc
pop
cmpsb
je
dec
fsubr
imulb
fisubrs
dec
pushf
aas
cli
xor
push
mov
push
pop
sti
mulb
lds
mov
push
and
inc
fisubl
cmpsb
enter
daa
sti
sbb
jge
popl
gs
and
cli
scas
aam
and
and
shl
mov
in
mov
mov
push
out
or
shr
fsts
popa
mov
or
enter
iret
std
sub
movsl
fcoml
ret
movsl
cmc
push
xchg
dec
mov
mov
cmp
mov
sahf
sbb
cmp
push
je
push
aad
xor
mov
jae
test
and
jnp
dec
pop
lods
sbb
sub
out
sub
lea
xchg
pop
dec
push
push
pop
je
shl
leave
adc
add
jl
pop
sarl
movhps
nop
loope
cwtl
cmp
push
or
adc
jl
inc
mov
cmpsl
pop
fcoml
sbb
ret
mov
pushf
sub
es
and
outsl
jl
xor
adc
pop
das
imul
lahf
lods
ds
nop
mov
imul
call
mov
cmp
sbb
andb
sbb
stos
clc
xor
lcall
rep
flds
xor
jo
adc
xchg
mov
fmulp
mov
sbb
push
sub
es
mov
bound
adc
pop
jne
adc
adc
adc
int
push
adc
cmp
cltd
hlt
jecxz
clc
test
xchg
push
and
movsl
pop
loop
jne
stc
cmp
daa
xor
dec
sub
and
inc
jle
das
mov
xor
cmc
sbb
add
insb
dec
pushf
jbe
js
xor
adc
sub
loope
lahf
add
rcrb
pop
ljmp
pop
fidivrl
std
stc
mov
cmc
jns
test
xchg
shll
push
jae
loope
stos
cli
and
add
add
push
fdiv
sbbb
adc
cmp
push
pop
mov
dec
scas
je
enter
mov
dec
cwtl
les
adc
fs
or
cltd
xchg
xchg
shl
lods
pop
mov
xor
in
fdivrl
roll
inc
repnz
aas
stos
ftst
out
or
jnp
out
xor
inc
sbb
cmc
lock
pop
cs
orl
movsl
push
stos
push
inc
sahf
xchg
mov
push
jnp
mov
rcrb
das
pop
jne
jo
jecxz
cli
stos
push
stos
and
repz
ret
cmpsb
and
outsb
dec
rol
addb
jb
lods
nop
push
push
inc
leave
mov
cmpsl
int3
xor
or
fdivrs
mov
movsl
lahf
ror
or
cs
icebp
in
xchg
push
insb
push
inc
imull
pop
int3
jecxz
imul
jo
mov
ror
or
cs
push
gs
imul
push
lods
mov
ret
or
sub
ja
dec
mov
cmp
pop
mov
mov
mov
push
push
sub
into
scas
adc
inc
stos
jnp
clc
jns
movsb
sub
pop
and
test
cli
mov
or
int3
lahf
mov
mov
ret
shl
lret
pop
aas
scas
fldcw
pop
mov
imul
sbb
mov
clc
jns
jno
cs
mov
lret
test
xchg
mov
or
mov
fwait
aaa
rcrl
cs
dec
push
fiadds
repnz
push
lods
sub
inc
test
insl
sbb
sar
mov
cs
push
push
lahf
push
xchg
sub
lods
fldcw
ret
iret
scas
adc
inc
and
adc
jg
jle
mov
jae
mov
sub
movsl
rcll
rolb
sti
into
popf
mov
sub
dec
add
sub
rcrl
jnp
nop
sbb
pusha
mov
sub
mov
pop
adc
push
scas
clc
add
mov
xchg
mov
dec
push
push
push
mov
es
int
ret
repnz
inc
mov
rclb
popf
and
sbbb
adc
pop
bound
add
adc
xor
inc
xchg
lahf
xor
data16
mov
test
jl
and
xchg
dec
cmc
mov
add
and
mov
push
bound
mov
repz
add
jnp
xchg
inc
mov
inc
pop
push
xchg
xor
dec
ss
xchg
pop
lods
fists
push
sub
and
and
and
and
bts
test
inc
jne
pop
xchg
pop
in
push
sub
xor
js
inc
pop
pop
cmpl
mov
and
pop
movsb
hlt
mov
jl
lods
jge
sbbb
adc
cwtl
les
adc
adc
xchg
insb
sub
test
mov
hlt
jbe
add
jg
ss
xchg
stc
mov
pop
xor
lret
push
arpl
insb
push
xchg
pop
fisubrl
inc
fsts
jmp
out
jp
pop
pop
inc
sub
dec
fldcw
dec
daa
pusha
cwtl
inc
int3
cmp
push
sub
cltd
xchg
pop
loopne
and
xchg
mov
sbb
out
add
mov
adc
push
adc
and
ljmp
and
pop
adc
adc
paddd
jmp
test
xor
lcall
sbb
mov
test
push
push
xchg
std
cltd
push
xchg
cmp
icebp
andl
cmp
fs
aaa
leave
fwait
cmpl
int3
and
aaa
outsb
mov
pusha
fistl
add
or
shrl
in
and
jecxz
int3
mov
adc
fistps
ret
lods
pop
daa
add
add
mov
arpl
outsb
xchg
mov
push
and
daa
fmuls
sbb
ret
test
or
push
pusha
roll
jecxz
in
jmp
sti
hlt
cmpsl
in
test
arpl
mov
xor
ret
add
inc
lea
fisubrs
je
lods
pop
fidivrs
lea
hlt
inc
mov
into
ljmp
out
sbbb
push
sbb
stos
cli
add
ds
xor
int
xor
mov
jg
imul
cmp
push
lods
pop
cmpsl
lret
or
pop
int3
jg
push
je
testb
jb
cmp
fucomip
pop
orl
pusha
aaa
sbb
mov
sahf
int3
push
jl
mov
jae
mov
push
xchg
in
scas
cmpsb
cmpsl
xchg
test
arpl
mov
xor
or
push
adc
jl
xlat
stos
push
rclb
ja
in
adc
pop
outsb
ret
jge
jg
cmp
xor
imul
fildl
add
cmpxchg
mov
xor
sbb
xchg
stos
sbb
adc
stos
jg
cmp
jb
mov
inc
jp
lods
pop
push
mov
pop
mov
or
lock
mov
in
xor
pop
or
popa
sub
jno
adc
push
lahf
adc
xchg
clc
xchg
sub
and
add
xlat
mov
mov
pop
xchg
mov
or
add
cld
jo
adc
jno
out
pop
mov
dec
xchg
jmp
int3
and
sub
cmp
adc
mov
stos
push
sub
adc
adc
or
lds
push
adc
test
lods
scas
rol
mov
lret
and
adc
sbb
lock
fs
stos
dec
test
push
es
mov
scas
stos
sbb
dec
arpl
mov
mov
or
icebp
sbbb
mov
out
push
aas
mov
sbb
rorl
hlt
mov
nop
push
jne
sarb
adc
insl
mov
xor
jg
in
mov
imul
pushf
pusha
adc
pushf
outsl
sbb
mov
mov
jg
xor
sarl
lods
ja
xchg
sub
cmp
mov
xchg
inc
stos
in
jb
mov
adc
jo
adc
adc
push
adc
or
xchg
std
test
lods
push
addr16
lret
jecxz
push
sub
or
cmp
cmpsb
push
lds
pop
movsb
das
adc
lods
arpl
jo
sbb
loop
jmp
jo
hlt
inc
xlat
mov
movsb
lods
aas
mov
pop
adc
std
or
jge
sbb
test
pop
in
sbb
add
push
popf
test
jge
pop
shll
add
movsb
inc
xchg
mov
cwtl
lds
adc
lds
adc
adc
pop
in
sbb
adc
sub
int3
mov
mov
sti
sub
and
adc
loope
sbb
adc
jnp
pusha
test
dec
fs
aam
test
pop
ja
dec
add
les
cld
rorl
outsb
lock
or
lods
sar
jo
adc
cmp
fldl
and
adc
inc
mov
dec
cmp
adc
js
outsl
fistpll
and
pop
adc
jne
xor
pop
std
pop
bound
xchg
rclb
sub
or
dec
jne
jo
pop
xchg
scas
fmull
pop
xchg
in
xchg
push
push
adc
push
lea
faddl
adc
push
xor
sub
call
pop
adc
imul
int3
and
hlt
lret
outsb
mov
adc
pop
jo
faddl
adc
lods
push
shrb
xchg
in
scas
movsl
cmp
test
push
adc
push
adc
push
lea
cmp
cwtl
push
adc
jo
pop
dec
mov
faddl
adc
inc
dec
in
push
pop
loop
ret
push
adc
into
mov
dec
mov
xor
fcomps
and
mov
mov
push
into
aad
scas
adc
loopne
mov
or
add
add
mov
popf
inc
fmul
lods
pop
pop
jbe
and
adc
adc
cmp
adc
dec
out
in
xchg
nop
push
insb
adc
jno
mov
mov
dec
mov
xor
aas
cltd
or
mov
js
adc
test
pop
mov
push
jp
mov
into
ja
push
add
pop
movsb
dec
scas
imul
push
xlat
mov
loop
dec
js
stos
add
push
setg
jno
imul
pop
scas
test
cmpsb
stos
fistpll
cltd
test
arpl
ja
sub
gs
and
push
adc
hlt
and
push
rclb
lret
nop
popa
fsubl
daa
and
stos
push
outsb
mov
push
cmp
adc
jg
iret
sbb
jno
xchg
adc
lock
mov
fmul
movsb
inc
jmp
mov
push
int
jmp
sti
jle
adc
paddusb
cmp
ljmp
les
xor
mov
pop
or
sub
fstp
aad
aam
fdiv
pop
xchg
or
js
rolb
and
mov
lret
xlat
adc
adc
shlb
mov
pop
lds
dec
mov
jecxz
and
xchg
pop
sub
mov
ret
jns
jecxz
cltd
inc
loopne
xlat
int
cli
popa
jmp
lret
jge
jecxz
inc
mov
mov
pop
mov
mov
push
xlat
cwtl
lds
adc
in
sahf
inc
pushf
lds
adc
in
outsl
inc
xlat
divl
test
data16
fadd
inc
fbld
pop
sub
or
mov
sbb
push
sub
xchg
mov
sbb
sub
frstor
mov
stos
and
push
cmp
xchg
jmp
lahf
test
mov
out
lds
pop
adc
inc
cmp
test
and
in
lods
mov
inc
mull
ljmp
push
adc
out
jbe
movsl
outsl
pop
and
pop
adc
pop
popa
push
mov
loope
popa
aad
ret
pop
adc
out
xchg
sahf
add
mov
push
adc
dec
test
push
adc
xor
outsb
nop
dec
cltd
push
adc
dec
cmp
pop
sti
pop
mov
jns
dec
dec
cmp
adc
mov
push
add
xor
cltd
push
adc
sbb
fwait
pop
pop
insl
ss
mov
or
aam
inc
xchg
jno
sub
adc
pusha
shll
fwait
sbbl
jg
adc
sub
loop
cmp
mov
ficomps
mov
adc
jmp
leave
cs
ljmp
push
adc
dec
sti
or
ljmp
sub
aaa
inc
pusha
inc
dec
and
jnp
movsl
mov
jo
fisubs
iret
push
mov
sarl
dec
pop
ja
jle
sarb
push
adc
jecxz
sub
cld
or
leave
pop
adc
mov
shr
faddl
adc
add
xchg
in
pop
adc
nop
ljmpw
xchg
xchg
into
mov
jle
and
jno
pusha
mov
test
inc
dec
pop
pusha
pop
negl
pop
je
dec
pop
or
lahf
ja
and
faddl
adc
test
cwtl
and
imul
js
testb
xchg
lea
daa
add
fwait
pop
mov
hlt
in
pop
adc
call
pop
pop
jnp
mov
mov
push
rclb
ja
ret
rcll
in
pop
adc
cmp
scas
call
sbb
in
sarb
lret
lock
je
or
faddl
push
fdivrl
or
mov
and
push
insl
lock
and
xchg
xor
pop
sub
jns
mov
stos
mov
jnp
mov
jo
and
mov
xchg
pop
add
fldenv
cmp
add
fistps
loop
into
sti
cmp
test
lods
sbb
xchg
push
push
leave
jmp
ds
or
pop
enter
in
faddl
mov
iret
lahf
mov
movsl
notb
ficoml
sbb
dec
jge
ret
test
out
ja
and
lahf
arpl
mov
add
fsubrs
enter
lret
jae
inc
fsts
hlt
mov
inc
lea
xor
aam
and
loope
xchg
adc
inc
sub
mov
adc
test
fbld
push
je
cmpsl
or
in
pusha
dec
in
mov
or
aam
pop
add
mov
dec
inc
movb
adc
pop
jbe
lock
adc
addb
scas
pop
shlb
lods
mov
mov
pop
imul
or
sbb
cmpsl
cmp
test
std
and
cld
or
add
test
cmp
loop
in
inc
into
mov
sbb
ja
aas
andl
dec
loop
sbb
fwait
test
jle
test
fcoms
aas
test
fbld
movsb
jmp
test
mov
push
mov
push
test
xchg
jne
imul
test
mov
addr16
test
repnz
xchg
sbb
sub
push
adc
push
std
mov
leave
pop
adc
jge
dec
aam
dec
aaa
jae
and
inc
or
rcrl
pop
movsb
dec
pop
xchg
xor
faddl
adc
pop
or
insl
loopne
popf
out
xlat
aam
jns
push
pop
or
mov
and
hlt
lds
adc
pop
adc
pop
adc
lds
adc
or
jp
sahf
inc
inc
jns
mov
aad
cs
out
das
inc
flds
adc
or
inc
or
or
xorl
sub
repnz
mov
pop
or
push
add
inc
sbbb
mov
push
sub
cmp
and
stos
inc
sar
dec
jae
lahf
lds
push
fwait
jg
sub
add
add
jp
fcom
cs
es
lds
push
or
mov
inc
add
adc
adc
call
pop
or
int
pop
or
mov
push
push
lock
or
mov
mov
enter
adc
into
pushf
lds
adc
cld
jo
adc
adc
sub
faddl
adc
loopne
pop
adc
fsubrs
mov
dec
inc
sbb
pop
or
iret
sub
pop
or
sbbl
js
mov
pop
popa
roll
lods
pop
repnz
sub
hlt
cmpsl
cld
sub
xor
out
fdivl
mov
jae
dec
cmp
out
cmp
adc
notl
leave
pop
jo
adc
dec
or
xor
push
lcall
inc
cwtl
jae
adc
xor
adc
into
or
subl
cmp
outsb
push
pop
insb
lahf
cmp
jo
adc
ret
sbb
cs
mov
adc
mov
push
adc
in
clc
or
movsb
mov
dec
add
in
scas
test
cmp
push
adc
arpl
jb
notl
movsb
pop
cs
fistps
inc
cwtl
jae
adc
mov
lahf
and
and
pop
adc
xchg
dec
bound
and
movsl
add
dec
sahf
ret
jo
adc
daa
rcrb
jge
hlt
mov
sbb
rorb
and
incb
adc
inc
repz
cmp
cmp
jmp
dec
inc
push
lds
xchg
push
jae
adc
sbb
push
cld
mov
push
adc
adc
pop
fldenv
push
pop
cwtl
mov
cmp
mov
xor
mov
pop
inc
jb
mov
push
add
jmp
movl
insl
sti
pusha
jno
adc
push
adc
cs
xchg
je
push
adc
lcall
add
lret
aaa
aas
jbe
stos
push
fs
test
mov
mov
fwait
and
pop
adc
std
pop
pop
push
scas
push
and
pop
movsl
push
mov
sbb
mov
testb
into
and
mov
lock
mov
and
int3
push
dec
sub
xor
xor
add
xchg
add
mov
pop
pop
dec
mov
clc
jo
adc
out
sbbb
hlt
jo
adc
insl
dec
push
adc
push
jne
lock
adc
mov
jae
and
leave
pop
adc
jecxz
mov
clc
mov
xchg
loop
pop
imull
pop
jecxz
out
hlt
xor
jno
les
and
cmp
in
sbb
lcall
in
test
push
insl
or
daa
scas
or
push
loopne
cmp
xor
cs
addr16
push
sbb
cwtl
xchg
lcall
addr16
aam
push
xor
das
lret
ds
inc
cs
jns
or
mov
stos
sub
cwtl
mov
sbb
dec
cmp
andb
pop
adc
cmp
icebp
mov
dec
or
fmuls
jne
lock
scas
fs
adc
lret
enter
push
or
push
enter
mov
call
xorb
les
mov
adc
xor
jno
adc
pop
add
mov
add
or
icebp
dec
popf
dec
jmp
icebp
mov
stos
sbb
add
adc
cmc
cmp
inc
insb
dec
pinsrw
nop
push
cmp
adc
jo
adc
aas
jg
sbb
fs
ret
push
mov
jp
mov
fwait
pop
insl
ljmp
movsl
pusha
sbb
adc
jle
xor
jo
adc
xchg
mov
xor
les
push
jb
out
push
sub
test
mov
jbe
lods
mov
leave
pop
adc
mov
xor
cltd
and
inc
mov
ret
push
lahf
mov
xor
ja
or
pop
mov
cli
pop
adc
mov
mov
jmp
ds
in
pop
cmpsb
mov
sub
and
dec
inc
xchg
sbb
push
and
shl
adc
cs
fcomps
pop
mov
stos
pusha
ret
aam
push
adc
cli
jg
push
addr16
mov
cmp
loope
push
stos
cmp
push
cmpsl
dec
adc
ljmp
jno
loopne
addr16
mov
cmp
fsubrs
lods
xchg
mov
xor
jb
es
mov
stos
sbb
ret
push
sbb
scas
lds
insl
scas
push
test
inc
imul
nop
subb
inc
fcmovbe
or
pushf
int3
lcall
lcall
movsb
dec
adc
lods
mov
mov
jp
pop
cs
mov
cmp
and
daa
mov
ret
imul
lahf
ja
outsb
stc
hlt
imul
xchg
sub
aas
lds
cli
mov
divb
es
mov
cli
jns
dec
pop
mov
pop
adc
cmpsl
ret
orl
repz
lahf
mov
movsl
lods
push
add
add
cmpsl
push
mov
outsl
adc
inc
sbb
adc
mov
xchg
sub
mov
and
int
stos
mov
push
ret
push
lds
push
jg
je
aad
fldcw
int
scas
pop
sbb
in
pop
jg
mov
sbb
popa
sahf
pop
sbb
fwait
call
push
lods
sahf
pusha
sbb
outsl
xchg
mov
fdivrs
adc
or
push
adc
inc
mov
mov
les
push
adc
xchg
faddl
adc
lret
push
adc
adc
cwtl
faddl
adc
jge
mov
faddl
adc
pop
imul
faddl
adc
or
test
pop
adc
gs
adc
mov
pop
enter
xor
in
jae
adc
in
or
sti
sbb
mov
and
pop
in
or
inc
nop
sbb
lret
repz
test
jno
adc
adc
push
popa
cmp
xor
sbb
mov
fdivs
jno
adc
lods
nop
sbb
jbe
sbb
or
mov
push
adc
in
popa
xor
jae
faddl
adc
push
adc
shl
and
faddl
adc
ret
into
dec
dec
jp
faddl
adc
adc
pop
adc
sbb
int3
sbb
ret
sbb
adc
adc
movsb
pop
mov
xchg
faddl
adc
mov
xchg
scas
jo
push
adc
mov
popf
scas
lret
je
call
pop
adc
lret
pop
adc
icebp
push
or
faddl
adc
popf
mov
mov
cmc
cmp
repz
bound
pop
mov
mov
out
js
test
adc
faddl
adc
notb
adc
pop
inc
lea
arpl
sbb
inc
data16
data16
jnp
insb
push
inc
je
xor
sbb
bswap
sbb
nop
mov
sbb
int3
sbb
out
loop
gs
ds
jne
mov
sbb
jb
adc
push
sub
mov
cmpsl
pop
inc
fadd
adc
adc
sub
outsl
cltd
insl
and
je
sahf
and
cmp
ljmp
lahf
mov
xor
popf
int3
faddl
adc
mov
jae
adc
call
inc
pop
sub
jp
test
jl
push
adc
lods
movsb
pop
push
es
repz
sbb
push
stos
in
mov
dec
xchg
out
pop
push
push
mov
enter
sahf
ljmp
je
adc
fildll
popa
push
mov
and
lods
stos
or
jo
push
adc
adc
push
inc
jl
push
adc
jae
xor
add
dec
pshufw
xchg
loopne
faddl
adc
ret
jo
adc
mov
xchg
fbld
add
adc
in
js
push
adc
ret
cmpsl
and
rcr
adc
insb
mov
cmpb
imul
cwtl
pop
or
imul
jnp
mov
jnp
out
lret
sbb
idivb
sub
adcl
sbb
lods
mov
outsl
jns
sub
adc
add
and
repnz
mov
movsl
lret
pop
cmp
cmc
mov
xor
pop
ljmp
adc
in
push
imul
push
mov
popa
sar
push
or
jp
mov
push
lahf
pop
mov
mov
mov
int3
jno
into
std
sub
arpl
sub
test
shll
and
movsl
add
pop
lcall
cmp
xchg
adc
or
pushf
mov
lods
xchg
adcl
push
cmpsb
sbb
pop
cli
les
ljmp
dec
addl
push
adc
shr
push
notl
popf
bound
lock
orb
sbb
jmp
movsb
xchg
and
faddl
adc
mov
rcr
sbb
xor
aad
mov
shrb
das
enter
pop
sub
ss
mov
subb
pop
sub
data16
sbb
dec
insl
outsl
push
jg
sarb
ret
jnp
xchg
cmpb
iret
test
decl
xchg
rorb
out
cmp
push
adc
mov
pop
xor
loopne
xor
mov
inc
xorb
ret
lret
sahf
and
xor
jns
faddl
adc
es
gs
xchg
mov
faddl
adc
outsl
adc
faddl
adc
pop
and
faddl
adc
add
test
imul
faddl
adc
jne
xchg
mov
pop
adc
mov
adc
dec
andb
faddl
adc
imull
mov
push
bound
adc
sub
cmp
mov
mov
cmpsl
mov
cmp
push
adc
sbb
pop
inc
into
and
dec
in
ss
aad
popf
push
pop
test
mov
lds
add
pop
xchg
out
stos
inc
dec
popf
push
jmp
sbb
clc
xor
test
cld
and
cmc
dec
std
icebp
jmp
insl
pop
jge
jnp
lcall
loopne
aad
js
mov
mov
out
push
pop
icebp
pop
xor
jb
jg
fnstcw
test
pop
mov
jmp
out
test
fldt
push
out
inc
mov
sahf
stc
dec
cwtl
dec
xlat
addr16
pop
rcl
inc
mov
lret
icebp
aam
or
mov
jmp
add
in
xchg
pop
cmpsl
dec
push
pop
cmp
cmc
shr
dec
jae
movsl
add
push
sbb
fmuls
xor
daa
dec
xor
push
push
sarl
pop
inc
push
sub
test
ret
or
fistl
insb
or
mov
pop
jae
adc
mov
repnz
incb
sub
js
test
cmp
test
call
test
adc
push
cmpsl
and
sahf
scas
mov
cmp
jo,pn
dec
outsl
and
es
stos
push
fistl
or
js
test
jmp
dec
mov
mov
inc
fisubrs
in
or
stos
jp
cmp
jnp
fdivrl
inc
xchg
stc
jns
test
cmc
push
lret
lods
fsub
pcmpeqw
divb
out
lahf
dec
js
adcb
fisubrs
in
aam
fcoms
adc
cmp
mulb
mov
hlt
call
pop
dec
adc
push
andb
jmp
inc
mov
je
lock
xor
xchg
inc
ss
push
dec
ficompl
lods
lret
jbe
mov
aad
ja
mov
sahf
fdivs
adc
aad
aad
push
test
push
jp
out
fdivrl
jmp
shll
sbb
and
sarb
hlt
cmp
mov
push
jl
movsb
pop
push
nop
popf
add
leave
pop
adc
and
sbb
ret
test
jp
sbb
cs
adc
jae
cmp
cmp
xchg
push
push
jecxz
ret
repnz
es
push
cmp
out
jno
pop
jno
adc
or
out
xchg
clc
test
femms
adc
cmp
sbb
ljmp
out
fcoml
and
jl
shlb
push
adc
mov
mov
faddl
lods
ret
jl
xor
fucomi
iret
repz
xorb
jmp
mov
push
jns
cmp
mov
pop
sti
sub
ja
sbb
scas
sbb
jl
push
adc
ds
mov
mov
out
mov
fisubs
xchg
out
lret
int
pminsw
stos
arpl
mov
mov
dec
pushl
inc
dec
xor
ja
dec
xchg
add
lret
mov
jno
cld
imul
mov
cmp
lods
adc
outsl
dec
mov
and
sub
mov
mov
mov
sti
stc
sub
mov
mov
and
cs
jns
ret
push
adc
cmp
scas
mov
jge
shlb
mov
cmp
pop
mov
xchg
cltd
rcrl
push
sbb
cmpsb
mov
clc
pop
rcrl
jb
stos
iret
sbb
ret
outsl
inc
push
push
xor
mov
jno
xchg
mov
adc
pop
add
pop
mov
dec
ret
int
mov
push
adc
lret
cmpsb
mov
or
xchg
insb
out
jbe
xor
loop
lret
pop
push
inc
cltd
test
cmpsl
shll
cltd
scas
jne
daa
fcoms
dec
ds
insl
cmp
sahf
cwtl
or
repnz
pop
cltd
inc
cmp
dec
vpunpckhdq
sbb
ss
es
mov
test
lods
sbb
icebp
mov
adc
mov
popl
mov
sbb
pop
xchg
jmp
cmp
xchg
mov
int3
sbb
es
cmp
leave
pop
adc
jbe
ja
adc
lcall
mov
popa
bound
addr16
lcall
pop
or
jno
add
push
imul
test
mov
fwait
and
xor
mov
fisubrl
aad
cmp
filds
jl
into
stos
or
add
cmp
movsl
mov
cmp
inc
dec
stos
push
test
fdivrl
test
cmp
cmp
sbb
shll
jmp
or
mov
dec
sbb
inc
sub
sti
pop
jae
mov
cmpsb
fldlg2
xchg
mov
jnp
iret
les
packuswb
addb
sbb
outsb
insl
jl
push
ja
shr
je
xchg
and
mov
push
sbb
sub
mov
push
adc
pop
push
cmpsl
int3
jb
adc
adc
stos
pop
ja
push
or
pop
inc
add
cmp
in
pop
mov
pop
daa
lods
sub
adc
or
and
adc
xchg
lea
mov
cmpsl
int3
jb
sub
cwtl
ss
xlat
lock
mov
mov
mov
mov
mov
das
mov
je
rolb
lret
enter
nop
sbb
push
adc
lock
push
int3
arpl
jno
mov
out
xchg
sub
pop
and
dec
jbe
mov
xor
inc
xchg
push
fimuls
outsb
cmp
lret
and
scas
outsl
cltd
es
xchg
jne
mov
xor
hlt
out
ss
jge
fldcw
mov
pop
xor
fbld
das
inc
cmp
jecxz
int
std
sbb
movsb
mov
inc
aam
pop
adcb
sub
fsubrp
push
mov
pop
inc
mov
pushf
fisubrl
mov
nop
sti
subl
push
arpl
call
lea
adc
lock
lahf
sub
lcall
add
loopne
dec
and
jae
popl
packuswb
xor
xchg
stos
push
sbb
jae
add
in
outsb
leave
mov
in
mov
insl
pop
std
mov
mov
into
sub
stos
or
jmp
xor
cmpsb
lcall
lds
stos
inc
xor
cmp
adc
sub
mov
push
pop
scas
loope
aad
and
in
loop
jg
adc
sub
push
push
popf
into
cmpsb
add
add
movsb
sbb
xor
adc
xchg
repnz
adc
xchg
lock
lahf
xchg
lods
fisttps
sbb
rclb
mov
ret
fidivl
cld
mov
fcmovne
jo
xor
icebp
mov
cmp
test
and
aaa
mov
pop
idivb
cltd
xchg
inc
jbe
and
cmpsb
jno
popa
aas
in
in
pop
sub
push
mov
mov
or
mov
arpl
inc
push
std
lret
xor
addr16
mov
lahf
loope
adc
sbb
cmp
int
in
adc
in
mov
pop
jg
iret
jno
pushf
fidivrl
mov
mov
push
xchg
adcb
pop
cmp
sub
mov
int
push
icebp
test
sub
xchg
xchg
pop
add
or
loopne
aad
jl
cmp
mov
ret
push
jl
cmp
sbb
lock
dec
xorl
iret
dec
pop
mov
xchg
sub
jg
xchg
ret
out
xor
pop
add
out
imul
sbb
cmp
mov
in
mov
pop
inc
xchg
xchg
push
sub
adc
jl
dec
sbb
bound
cmpsb
push
cmp
rcll
icebp
mov
cmpsl
fimuls
xor
cld
mov
cs
xchg
cmp
cmpsb
xor
mov
add
mov
std
xchg
sbbl
movsb
jge
popf
add
mov
lock
mov
iret
into
ja
mov
movsl
sbb
adc
jge
add
dec
jbe
mov
dec
push
fisubrl
outsl
pop
loope
sub
push
fmull
movzbl
mov
jg
rorl
lret
and
sub
adc
hlt
mov
clc
cmp
push
mov
fwait
sbb
jl
push
push
mov
adc
jg
iret
into
ja
mov
inc
fdivp
cmpsl
pushf
xlat
stos
or
sbb
out
sbb
and
mov
mov
mov
idivb
fldcw
dec
push
push
rorl
cmpsl
push
stos
push
test
imul
gs
orb
in
sbb
inc
sbb
shlb
sbb
mov
xchg
and
mov
icebp
cmp
and
inc
pop
jnp
sub
jns
dec
pusha
rorl
jg
cmp
mov
sbb
stos
fucomp
push
or
shl
ret
out
sar
cli
mov
enter
andl
and
lods
outsb
sbb
js
sub
hlt
or
adc
jno
xor
lock
mov
fisubrl
cmp
cmp
push
jnp
push
sbb
adc
roll
rolb
aam
jno
push
stos
das
popf
fcoml
jne
lock
idivl
and
fcmovb
cs
ja
shll
mov
jg
imul
xchg
adc
push
jno
mov
mov
icebp
ficoml
dec
inc
pop
pop
cmp
adc
push
and
sub
mov
std
jl
jg
das
pop
xor
daa
mov
test
jo
jmp
cmc
sbb
ja
add
pop
cs
mov
mov
imulb
cs
pop
scas
xlat
push
push
xor
sub
cmp
lock
sbbb
pop
fnstcw
mov
sub
es
dec
cmpsl
sub
imul
cmpl
ss
mov
in
adc
mov
dec
cs
rcrb
or
int3
jl
testb
mov
xor
mov
repnz
push
push
outsl
sbb
pop
pushf
shl
fcmovnb
cmc
je
pop
mov
or
lds
add
addl
ret
loope
sar
sub
fs
adc
inc
lret
xor
mov
icebp
push
jns
pop
pop
lret
fldt
outsb
xchg
dec
inc
rcl
mov
mov
inc
xlat
mov
iret
stc
mov
cli
mov
inc
sbb
lahf
pushw
stos
das
adc
cli
push
add
jmp
dec
pop
test
jg
jecxz
test
xor
in
adc
mov
gs
arpl
addb
aas
int
daa
adc
mov
xchg
push
stos
sbb
jb
push
in
movsb
push
or
mov
adc
inc
test
mov
dec
pop
lods
fistl
inc
out
gs
dec
data16
cmc
mov
sbb
and
or
aad
outsb
adc
inc
jmp
pop
xchg
jle
outsb
jo
xorb
add
mov
or
push
cmpsl
repz
mov
arpl
dec
jno
test
cmp
pusha
daa
push
loop
sub
sub
mov
xor
in
in
mov
fs
push
aam
mov
xor
push
adc
addr16
nop
or
and
aaa
xor
insb
stc
mov
sub
repz
add
stos
ljmp
xchg
mov
xchg
repz
dec
inc
outsb
ds
pop
dec
pop
daa
aam
push
cmpsl
xchg
rorb
and
clc
or
add
icebp
xor
test
pop
pushf
lahf
in
and
add
lret
jne
and
stos
lret
lock
bound
cli
add
push
lods
pop
movsb
cmpb
jnp
sbb
shlb
fstl
push
sahf
stos
push
or
adc
mov
mov
inc
mov
leave
pop
xor
stos
stos
fistps
pop
mov
mov
incl
insb
mov
cmp
jno
in
xchg
adc
addr16
xchg
adc
cmp
aad
pop
mov
jg
rcrl
mov
scas
push
idivb
imul
xorb
pop
movsb
jg
or
pop
jmp
sub
push
lock
nop
and
fildl
mov
ljmp
in
loope
mov
push
sub
movsl
jl
test
push
jnp
mov
sub
pop
out
lret
and
pop
cld
mov
pop
or
pop
stos
int
adc
xchg
movsl
push
negb
adc
push
mov
mov
fistpl
jno
jg
cmp
sbb
inc
fwait
pop
push
test
mov
out
and
adc
push
fdivrl
dec
mov
push
stos
xchg
adc
int3
cmpsb
int3
lret
push
enter
jge
and
js
pop
movsb
fsub
mov
push
bound
adc
stos
jle
jne
ljmp
or
xchg
mov
insb
cwtl
aas
nop
adcb
inc
and
and
shlb
mov
add
pop
adc
mov
mov
rcr
or
fdivs
xor
inc
repnz
leave
int3
adc
fldenv
scas
and
sahf
mov
hlt
faddl
adc
mov
cmp
cwtl
js
push
dec
dec
cld
jo
adc
in
cmp
adc
outsb
adc
mov
jno
and
leave
pop
adc
sarl
aaa
js
mov
fldl
adc
ss
loop
dec
push
dec
xor
std
or
push
jl
fldt
inc
jp
sti
and
cmp
push
or
in
sub
pop
adc
xor
jno
adc
les
adc
add
xchg
lods
adc
das
adc
xlat
ret
push
adc
adc
sbb
data16
pop
pop
push
test
lods
push
fisubs
xor
popf
lds
sub
sub
movsb
ja
imul
push
sar
rcrb
divl
mov
cmp
cwtl
sub
jo
jge
xor
aam
mov
out
repz
mov
inc
xchg
sahf
aas
call
bound
jge
sub
lods
data16
jle
pop
push
pop
int
push
jmp
cmpb
xlat
imul
fists
pop
mov
lods
int
aam
into
jge
mov
nop
into
jl
ljmp
les
mov
bound
es
fwait
out
xlat
test
adc
inc
rorb
xchg
and
imul
dec
lods
repnz
aas
add
adc
lcall
mov
cmp
jl
les
adc
adc
pop
adc
aas
test
lcall
jbe
xchg
push
imul
cmp
pop
xor
mov
and
lahf
dec
mov
or
or
inc
rorl
sbb
popa
mov
int3
push
xchg
sbb
clc
dec
jbe
mov
sbb
mov
mov
jo
adc
push
push
cmp
fsub
fwait
in
divb
adc
pop
adc
adc
push
adc
pop
adc
fldl
adc
insl
xchg
cmpsb
or
sar
adc
bnd
sub
outsb
pop
sub
fldl
adc
in
mov
cmp
hlt
fildl
sbb
and
or
fucomp
sti
sub
ss
test
sbb
addr16
cmc
gs
jae
lea
push
daa
sbb
ret
sbb
lahf
divb
inc
lea
xor
in
es
add
sbb
out
inc
cmp
imul
lret
inc
lea
xor
push
adc
mov
outsb
xorb
clc
ljmp
popf
fsubs
mov
aad
push
sti
stos
mov
push
pop
mov
leave
sub
push
adc
sbb
lds
adc
je
sbb
test
adc
cmpb
jge,pt
adc
das
pop
jg
mov
pop
adc
sub
adc
jo
adc
imul
mov
pop
mov
pop
push
stos
push
fistps
and
lea
int3
mov
push
movsb
adc
push
push
imul
pop
cmpsl
pop
roll
mov
mov
sbbl
out
cli
stos
mov
push
jp
mov
lahf
pusha
call
cmp
je
icebp
aaa
fcmovbe
hlt
push
arpl
adc
test
fs
mov
cltd
popa
or
adc
das
dec
sbb
pusha
jo
adc
pop
dec
xchg
mov
shll
inc
dec
cmp
clc
push
aaa
mov
addr16
push
lods
add
cmp
mov
mov
cmp
mov
pop
jae
adc
adcl
and
jle
sahf
add
push
iret
arpl
add
adc
mov
push
in
dec
outsb
adc
cwtl
push
adc
pop
xchg
dec
inc
cmp
ljmp
adc
dec
cld
inc
push
inc
add
cmpl
into
ficoms
mov
out
call
rorb
mov
push
repnz
and
jl
idivl
inc
sahf
jne
push
mov
mov
outsl
data16
mov
cltd
adc
cmp
inc
push
mov
cmp
push
dec
xchg
cli
xchg
cs
sub
outsb
mov
sub
aas
add
pop
mov
dec
pop
dec
pop
les
les
fldcw
jecxz
xchg
cmp
das
lods
lret
sahf
cli
insl
xchg
jmp
jmp
test
adc
popf
mov
dec
rorl
push
adc
sti
pop
imul
jae
xchg
push
jl
push
pop
lret
outsl
aas
adc
dec
dec
inc
int
popa
pop
adc
jae
pop
inc
ret
dec
outsb
fs
aam
js
push
lods
mov
pop
jae
adc
xor
adc
and
mov
sub
xor
or
dec
pop
sbb
das
nop
fsts
adc
mov
mov
xor
divb
pop
bound
sub
cmp
loop
flds
test
adc
mov
sub
in
or
push
adc
jmp
daa
mov
pop
push
xchg
fwait
sub
mov
mov
push
pop
pop
cmp
jno
push
xchg
adc
popf
scas
rorl
mov
jne
mov
std
or
in
mov
stc
xor
repz
insl
cmp
mov
cmpsl
pop
and
ljmp
sti
jbe
push
mov
scas
dec
pop
mov
push
and
jg
push
adc
roll
out
fcompl
and
pop
adc
jno
mov
scas
mov
push
lods
xchg
xchg
adc
jle
and
shll
mov
jg
cmp
pusha
jae
mov
mov
jbe
pop
or
push
aaa
jecxz
iret
lahf
dec
fmull
pop
pop
sub
xor
stos
push
fldcw
xchg
daa
out
fdivrl
data16
lods
in
or
jo
fisubrl
push
pop
mov
mov
xor
das
xor
hlt
cmp
adc
aad
fsubrs
push
lods
popa
or
xchg
test
and
jecxz
lahf
orb
cs
mov
mov
cli
add
ret
test
push
loope
mov
xor
cli
addl
mov
lret
mov
fcoms
adc
movsb
popf
mov
repz
lea
xor
outsb
xchg
out
adc
cs
pop
add
add
mov
movsb
mov
iret
lahf
sbb
or
mov
jo
test
fstpt
push
test
adc
lock
xor
xor
add
inc
lea
fstp
xlat
push
stos
shrb
cmp
push
pop
loop
pusha
push
subb
lea
and
inc
inc
scas
stos
push
cmp
push
adc
jns
fdivrl
rolb
lret
ret
push
loop
stos
ret
push
adc
push
aad
rclb
rorl
adc
in
das
pop
sub
jo
out
mov
xchg
jecxz
mov
mov
mov
mov
js
mov
mov
lret
add
clc
fldln2
or
je
jge
adc
adc
adc
push
adc
and
lcall
jle
je
ja
inc
push
sar
cli
push
adc
je
andl
lret
mov
lds
cmp
mov
daa
push
and
mov
push
mov
push
out
xchg
nop
mov
mov
jno
adc
inc
int
mov
pop
cmc
into
cld
lret
lret
aad
push
or
pop
gs
mov
call
mov
std
jp
xor
fidivrl
mov
inc
das
pop
je
js
mov
leave
pop
adc
pop
dec
jne
jmp
mov
cli
cs
jo
cmp
xor
aam
fxam
int3
leave
shlb
mov
mov
jle
inc
das
mov
repz
xchg
sub
and
cltd
gs
mov
cmp
js
ds
cmp
pop
adc
jns
dec
adc
fwait
push
loope
hlt
xlat
clc
fwait
jge
jle
into
les
pop
pop
pop
fwait
push
adc
mov
loop
out
xchg
xorb
lret
outsl
pop
xchg
sti
ljmp
xor
or
push
fwait
push
adc
jl
adc
mov
lahf
dec
test
and
mov
or
rcrl
pop
adc
xchg
repz
js
mov
push
lcall
mulb
js
fwait
push
adc
mov
data16
dec
adc
loop
sbbb
ss
int3
ret
dec
push
xchg
push
adc
jbe
repnz
arpl
jns
stos
imull
movsl
mov
mov
push
adc
push
fsts
mov
nop
jmp
sub
cmp
inc
dec
aaa
fistpl
popa
imul
jle
add
adc
andnps
lret
pop
pop
jns
xor
rcll
mov
adc
loopne
pop
jne
jns
inc
mov
movsl
loope
into
cwtl
pop
or
or
add
adc
leave
or
or
adc
pop
cmp
data16
or
je
out
fnstsw
xor
xor
inc
lea
sbb
test
repz
pop
pushf
test
fadd
js
or
shll
push
inc
and
xchg
cmpsl
dec
call
push
outsl
push
xor
cmc
cli
hlt
call
fs
sbb
push
inc
loopne
mov
mov
adc
je
shrl
std
jae
mov
ficomps
cmpsl
mov
mov
adc
int
jae
lahf
ds
adc
in
repnz
pop
and
jl
xor
fwait
sbb
adc
popf
sarl
testb
in
xor
in
mov
testb
adc
jp
mov
or
sarl
aas
add
test
outsl
fstpl
sub
push
stos
xchg
push
dec
inc
sbb
test
adc
es
or
add
ret
xchg
sub
out
inc
or
mov
mov
pop
pop
das
inc
mov
test
push
cs
mov
adc
cld
jo
adc
push
and
jae
iret
idivl
adc
push
inc
loope
push
test
adc
mov
rcrb
mov
cs
jno
adc
movsb
pop
or
outsl
lods
test
or
mov
mov
arpl
xor
pop
adc
adc
pop
adc
in
inc
mov
lods
pop
jl
outsb
idivb
nopl
movsb
cs
mov
insb
adc
pop
adc
pop
dec
ja
jp
adc
subb
movb
dec
stc
mov
lret
call
or
lods
mov
pop
sub
testl
pop
adc
sbb
int
cmp
push
test
or
cld
aaa
scas
mov
repnz
xor
pop
or
test
cs
push
and
jle
mov
cmp
jmp
and
pop
jns
jp
mov
dec
pop
mov
sbb
and
rorl
and
stos
cmp
loopne
push
int3
pusha
xchg
xor
ljmp
jecxz
pop
push
adc
je
adc
xchg
xchg
xor
and
mov
add
ret
in
and
jge
fcompl
arpl
add
mov
mov
mov
dec
pop
mov
imul
xor
inc
pop
shll
lds
cli
mov
cmp
xchg
sbb
mov
adc
pop
mov
push
andl
xor
pop
adc
pop
fstl
scas
push
lods
and
push
mov
pop
cmp
adcl
add
iret
jmp
fwait
loopne
test
or
inc
fdivrl
adc
test
or
pop
push
data16
sbb
or
movsb
pop
or
nop
mov
mov
pop
xor
pop
cld
jo
adc
mov
mov
xchg
jg
and
mov
fldenv
mov
xchg
cmp
jge
xor
or
mov
leave
pop
adc
cmp
pop
sub
mov
add
loope
cmp
push
adc
mov
nop
faddl
adc
xchg
xchg
int
adc
rcl
clc
bound
nop
faddl
adc
mov
add
adc
faddl
adc
adc
inc
or
xchg
iret
or
and
mov
pop
xlat
into
ja
fdivs
or
cmpb
scas
jmp
add
cltd
mov
bnd
inc
outsb
pop
fsts
lock
xor
or
sub
dec
mov
jp
xchg
enter
stc
pushf
xor
nop
faddl
adc
push
mov
cmpsl
cltd
add
jecxz
fdivrl
shl
pop
rcl
clc
faddl
adc
sub
xchg
mov
loopne
fdivrl
push
adc
orl
push
inc
sub
push
adc
mov
mov
sbb
iret
ds
jno
adc
jge
pop
ficoms
xorb
and
fwait
dec
inc
mov
push
adc
mov
inc
lea
xor
push
inc
push
dec
sahf
hlt
mov
pop
sbb
pusha
outsb
sub
jae
adc
or
xchg
sub
stos
mov
and
imul
shrl
push
adc
xchg
lret
sub
adc
cmp
adc
outsl
xor
and
pop
adc
sbb
pop
addr16
and
pusha
ret
mov
iret
sbb
jno
jns
gs
mov
rcrb
mov
imul
sbb
hlt
mov
das
inc
ds
xchg
popf
sub
pusha
jmp
repz
inc
mov
inc
sbb
fcomps
cmp
test
daa
rcrl
pushf
lcall
int
mov
jns
clc
ljmp
aad
mov
sub
push
movl
pop
sti
jns
sbb
andb
stos
fldcw
pop
mov
insl
dec
add
lcall
out
pop
push
clc
cmp
inc
loopne
xchg
frstor
shlb
push
lods
testb
cmp
xchg
sub
xlat
loop
imul
mov
ret
lret
xchg
test
jno
adc
jmp
and
aam
push
adc
inc
mov
outsb
xor
push
push
mov
jle
adc
mov
push
mov
or
sub
stos
es
xchg
cmp
scas
and
mov
sbb
mov
std
mov
push
adc
out
and
das
fnstcw
dec
mov
push
xchg
mul
dec
ja
jecxz
jne
or
lods
xor
or
add
push
xchg
jecxz
sub
lret
sub
sbb
push
lds
cmpsb
pop
xor
and
pop
xor
dec
pop
les
cmpb
push
fcomps
sbb
jl
out
pop
adc
pop
xchg
mov
movsb
lds
adc
es
cmpsl
sub
sbb
jecxz
dec
and
xchg
push
adc
dec
shll
rorl
pop
pop
out
push
and
gs
bswap
mov
or
js
push
inc
push
sub
sahf
sti
imul
fwait
mov
pop
sub
or
fsubrp
cmpsb
push
movsb
sub
sti
roll
sbb
popa
pop
xchg
pop
ja
add
cmp
jge
inc
dec
cmp
and
pop
adc
inc
dec
push
or
in
int
sub
push
adc
xlat
xchg
mov
movsl
das
lret
jl
push
icebp
jb
daa
fdivs
mov
int3
inc
pop
imul
mov
je
adc
enter
cmp
push
adc
lahf
fcom
loopne
rcll
sar
add
in
aas
and
xchg
dec
sar
lret
popf
bound
xor
out
sti
rcl
sbb
fs
daa
mov
adc
ficoms
lds
rol
mov
ja
pop
mov
cmp
sbb
enter
xor
ljmp
call
je
jg
imul
dec
std
xor
push
xor
pop
adc
xchg
jecxz
loope
repz
adc
adc
cmp
out
mov
lds
adc
pop
sub
mov
popa
ret
lds
adc
add
faddl
adc
imul
push
lods
int
pop
cmp
jo
iret
ja
mov
scas
iret
or
xchg
and
push
daa
scas
les
mov
adc
push
jno
pmaddwd
hlt
xchg
dec
mov
pop
adc
movsl
scas
xlat
stos
or
shll
mov
jae
mov
hlt
adc
lods
vphsubdq
or
dec
js
ret
stc
sub
mov
nop
mov
outsl
mov
lea
arpl
push
or
dec
xchg
jnp
sub
ljmp
cli
or
nop
sbb
or
adc
lods
xchg
test
push
enter
push
and
mov
icebp
fnstsw
ja
mov
adc
rolb
lods
push
lods
mull
imul
out
inc
sbb
cmp
adc
inc
cmp
mov
mov
nop
sbb
les
adc
arpl
pop
das
rcll
add
sbb
movl
bnd
push
adc
shll
pop
adc
rcrb
scas
push
lods
hlt
pop
pop
cmp
jo
iret
ja
mov
scas
mov
adc
rcrb
scas
push
lods
sbb
fldl
adc
fs
mov
cwtl
iret
jno
imul
mov
adc
aad
push
push
popa
nop
sbb
or
adc
movb
lret
cmp
cli
mov
and
push
and
repz
push
adc
adc
fdivl
mov
pop
adc
pop
inc
jno
adc
faddl
adc
cwtl
mov
pop
adc
shlb
xchg
sub
and
faddl
adc
cwtl
push
lds
lahf
pop
mov
fsubrl
nop
pop
movsb
push
pop
rcr
sub
das
cmp
and
test
popf
pop
inc
dec
shlb
dec
rorb
mov
sbb
pushf
rcrl
jge
cmp
or
fistl
or
pop
adc
jo
outsl
inc
or
push
adc
mov
xlat
push
sbb
adc
inc
sbb
sbb
adc
and
adc
jno
pushf
jae
adc
xchg
cmpsb
dec
daa
inc
int3
xchg
push
adc
sti
add
insl
pop
cmp
inc
ljmp
into
fdivrs
icebp
in
mov
aad
fwait
mov
loopne
sbb
mov
pop
adc
das
or
jns
pusha
shrb
mov
mov
xor
mov
je
enter
xchg
mov
and
pop
fsubs
or
loop
push
push
adc
loopne
cld
test
sti
and
pop
adc
pusha
pop
inc
push
movsb
push
add
pop
mov
pop
adc
adc
pop
adc
mov
push
nop
test
mov
shll
add
fldl
adc
push
int
sbb
cwtl
pop
notl
dec
dec
mov
stos
negl
fldl
adc
adc
out
xor
jno,pn
cmpsb
bound
xchg
rcr
and
aas
add
mul
pop
cmp
xchg
jno
or
push
adc
mov
nop
sbb
iret
adc
lds
adc
adc
movsl
test
pop
adc
pop
xchg
jecxz
outsl
mov
or
stos
movsl
inc
adc
mov
fwait
test
pop
adc
int3
test
pop
adc
push
adc
cmc
mov
sub
push
adc
std
jnp
aam
mov
test
push
adc
clc
jo
adc
test
nop
fwait
push
adc
dec
push
jo
adc
push
mov
daa
mov
push
adc
dec
mov
movsl
ja
lret
repz
dec
jbe
jp
adc
jg
lea
subb
mov
sub
lahf
int3
jo
adc
adc
jmp
shrl
mov
sub
lock
adc
loop
into
aad
xor
and
mov
test
jnp
jo
adc
adc
adc
pushf
cmp
faddl
adc
xchg
jp
jb
sub
faddl
adc
pop
mov
mov
out
adc
inc
pop
out
xor
pop
push
sub
cltd
in
xchg
pop
das
dec
push
stos
push
fsubs
push
pusha
ret
imul
mov
inc
sbb
addl
faddl
adc
or
or
sub
push
jno
adc
adc
pop
adc
les
adc
movsb
dec
mov
add
addl
jb
mov
push
pop
fstl
mov
mov
pusha
out
into
outsb
sub
jno
adc
xor
pop
adc
test
hlt
daa
mov
jnp
arpl
lea
xor
outsb
fisubs
lods
in
xchg
pop
aaa
dec
push
stos
push
lods
mov
jno
adc
mov
pusha
call
push
adc
test
pop
adc
inc
push
stos
push
add
sbb
outsl
and
adc
popa
roll
pop
adc
stos
cli
pop
sti
cmp
and
adc
movsl
adc
rclb
rcr
adc
sbb
fsubs
roll
movsl
sahf
lock
mov
add
in
test
pop
adc
mov
and
push
adc
dec
lcall
ja
adcl
test
sbb
xor
fisubl
and
adc
cmp
and
cmp
gs
cld
or
xor
mov
jae
adc
repnz
jle
jae
adc
xchg
adc
jle
cmc
fisubrl
xchg
rolb
push
mov
pop
ds
push
fcoms
stos
xorb
dec
or
repz
aad
pop
in
push
addr16
repnz
int
jno
les
adc
fstl
arpl
je
xchg
jmp
cmpsb
stc
sbb
int3
sti
lret
sub
add
xor
mov
daa
and
push
mov
inc
jo
mov
push
jge
fcompl
fiadds
push
inc
je
or
push
pop
mov
aam
faddl
adc
xchg
jmp
xchg
sbb
pop
jge
les
lods
mov
lods
shld
aas
cmc
nop
into
cwtl
faddl
adc
cmp
js
xlat
mov
cmp
adc
je
xlat
test
sub
popf
les
xchg
hlt
int3
mov
pop
adc
add
es
insl
xchg
and
rolb
push
adc
pop
mov
inc
adc
pushf
faddl
adc
ficompl
pop
daa
fcoms
mov
mov
in
cmc
popa
add
mov
pop
adc
cmp
mov
pop
adc
dec
pop
sbb
add
jmp
ds
test
in
mov
jno
push
stc
pop
loop
je
arpl
cmp
ret
pop
adc
dec
shll
lock
call
ds
shr
les
jbe
push
lcall
inc
ljmp
adc
ja
mov
int3
in
sbb
push
je
ljmp
pop
xchg
mov
stc
movsl
or
push
adc
cmp
add
lods
jbe
repnz
inc
xchg
mov
inc
adc
mov
cmpsl
test
fimull
sub
fisubl
popf
fbstp
xor
or
adc
or
jo
roll
pop
test
push
adc
mov
loop
inc
sbb
pop
mov
xlat
stos
mov
pop
adc
xchg
or
test
jb
fisubrl
push
adc
mov
fisubl
test
fsub
test
add
daa
nop
jbe
adc
cltd
inc
push
out
lahf
shrl
push
adc
xor
cmp
cmp
pushf
push
adc
jae
sti
cwtl
jae
adc
mov
pushf
dec
lds
adc
sbb
aad
push
push
inc
fs
adc
std
push
out
adc
xorb
mov
pushf
ret
lds
adc
or
les
adc
sbb
sbb
pop
adc
cli
pushf
call
pcmpgtb
adc
push
mov
mov
jo
adc
pop
fdivrl
je
pop
adc
loopne
inc
lea
cmp
mov
pusha
addr16
mov
jo
push
adc
scas
clc
hlt
dec
and
pop
adc
fdivl
mov
pop
mov
test
sbb
pusha
outsb
xchg
mov
ljmp
sbb
push
stos
cli
mov
sbb
fdivrl
rolb
lret
stc
in
xchg
mov
shrl
cmp
push
pop
inc
mov
or
mov
add
adc
movsl
xchg
sub
daa
rclb
sbb
add
sbb
pusha
stc
clc
push
or
cs
pushf
push
adc
frstor
mov
dec
adc
inc
sti
pop
or
cmpl
cs
mov
pop
mov
push
add
rclb
xchg
adc
jo
adc
ds
inc
jne
push
cmpsb
std
mov
es
pusha
sbb
cmp
and
jnp
sbb
pop
movsl
inc
dec
je
jecxz
dec
scas
push
scas
icebp
mov
mov
mov
cmp
push
sbb
stos
int
add
xchg
push
daa
mov
mov
rol
imul
xor
adc
je
test
cmc
push
mov
or
jns
inc
xchg
inc
test
dec
inc
lods
cmp
in
dec
aaa
fiadds
push
lds
loopne
jo
adc
cmp
and
dec
ljmp
mov
sbb
mov
xor
adc
sbb
inc
pop
dec
scas
push
scas
xor
cli
lret
fistpll
push
in
mov
sub
xor
push
adc
je
inc
xor
push
xor
xor
leave
pop
adc
add
adc
pop
adc
rcll
mov
push
or
shll
and
je
and
lock
mov
adc
jnp
popa
insl
sbb
push
xchg
pop
outsb
inc
or
xchg
enter
pop
cmp
add
mov
sbb
bound
push
mov
lcall
test
pushf
push
adc
mov
push
adc
adc
inc
xor
push
mov
adc
dec
inc
lods
pushf
push
adc
movsb
push
mov
dec
mov
out
js
and
push
adc
adc
icebp
mov
xchg
sbb
das
test
cmp
mov
pop
inc
cld
mov
cmpsb
sti
xlat
or
int
movsb
ret
mov
jle
mov
mov
sub
icebp
into
cld
enter
push
sbb
pop
adc
test
jp
mov
jne
pushf
add
or
jnp
jg
or
push
mov
adc
sub
adc
ja
or
jb
dec
pop
cmp
aad
dec
mov
xchg
ljmp
pushf
push
adc
repz
pop
inc
data16
push
adc
cmp
stos
sbb
and
stos
push
and
pop
loope
push
out
nop
cmpb
cmpb
out
jne
push
stos
add
mov
inc
movzwl
sbb
jns
sbb
mov
stos
push
mov
aaa
mov
int3
data16
mov
mov
mov
push
or
cmpsl
cmp
and
or
std
sub
push
adc
inc
loop
mov
mov
adc
out
fdivrl
jge,pt
or
cwtl
jno
adc
push
ret
push
adc
jbe
movsb
cmc
out
test
and
nop
idivl
sbb
out
bound
push
stc
lods
mov
jo
adc
inc
mov
pop
xor
out
cmc
call
pmulhuw
adc
pop
aad
inc
orb
clc
add
fdivrl
outsb
sub
js
hlt
iret
rcrb
push
adc
in
ret
test
cmp
mov
sbb
xchg
lods
sahf
andb
push
push
push
sub
cltd
mov
addr16
iret
cmpsb
jnp
mov
ret
inc
sub
cmp
cmp
push
mov
loope
iret
lahf
mov
iret
rcll
sub
les
inc
sub
xor
repnz
out
push
or
scas
push
xor
cmp
stos
mov
push
pop
rolb
lds
in
xor
dec
cltd
adc
fs
xor
jno
xchg
pop
push
and
fdivr
leave
arpl
aam
push
adc
inc
in
jo
adc
add
pop
addr16
cmp
push
and
jl
mov
and
push
jle
outsb
mov
pop
loope
out
mov
movsb
fcmove
imul
cmp
aas
cmc
xchg
sub
test
pop
imul
rclb
neg
cs
pop
adc
pusha
and
mov
outsl
mov
push
adc
pop
data16
lcall
push
adc
mov
mov
mov
shlb
pop
lahf
clc
mov
jno
les
adc
cmpsl
xchg
sub
jecxz
inc
pusha
xor
fnstsw
sbb
jp
icebp
pop
push
and
shr
mov
idivb
add
pusha
popf
pushf
aam
mov
fstl
jae
adc
fldl
xchg
inc
push
and
or
movsb
push
clc
cld
pushf
push
adc
adc
stos
cmp
jno
jb
adc
inc
lret
mov
mov
push
adc
fnsave
inc
das
adc
rcr
mov
jbe
xor
add
sti
xchg
xchg
push
cwtl
add
stos
repz
jb
cmp
mov
iret
mov
or
jae
outsb
xchg
in
push
xchg
aad
in
xchg
cmp
jge
daa
dec
wbinvd
push
mov
leave
pop
adc
inc
lret
mov
adc
cmp
adc
aad
and
cli
pop
adc
adc
xchg
test
dec
mov
cld
popl
mov
jns
int3
jo
sub
bound
out
movsl
sahf
dec
push
test
jecxz
mov
adc
ficoml
push
add
sarl
inc
or
push
adc
cwtl
sbb
push
add
xor
sub
pushf
inc
cmc
mov
jmp
divb
outsb
dec
fstpt
mov
dec
sbb
adc
jne
xchg
ljmp
push
adc
mov
out
jo
adc
mov
out
mov
lods
das
mov
les
adc
xchg
test
lods
sub
push
adc
jecxz
sbb
xor
push
fiadds
aam
cmpsl
sbb
push
push
cwtl
mov
xor
dec
pop
dec
sub
imul
jge
push
aad
mov
dec
adc
sbb
out
and
mov
aad
inc
data16
mov
cli
lods
rcrb
dec
jae
pop
faddl
or
imul
pop
pop
imul
mov
arpl
stos
sub
mov
testb
icebp
add
push
icebp
mov
ja
cmpsl
ljmp
jae
xchg
and
mov
and
pop
adc
stos
fcompl
add
ds
push
add
sbb
jl
push
adc
ror
aaa
sub
push
stos
push
rcrb
jmp
sub
cmovne
adcb
call
mulb
test
adc
mov
jnp
mov
lcall
inc
ret
and
popa
dec
bswap
fwait
push
sub
pushf
sbb
push
xlat
test
dec
adc
jg
in
cmp
aaa
fists
rorl
jb
pop
jae
adc
push
mov
mov
push
adc
daa
jp
or
ljmp
mov
inc
movsl
inc
mov
arpl
mov
out
lahf
divb
mov
ficoml
ret
dec
popf
push
adc
mov
adc
adc
pop
adc
mov
jo
adc
mov
mov
jno
adc
adc
or
pusha
jo
adc
mov
sub
jp
mov
cmc
pop
adc
rorb
in
mov
into
jnp
jno
adc
pop
jo
les
cmc
pop
adc
stos
es
mov
jno
adc
ljmp
lock
fmuls
stc
test
jae
adc
add
jno
repnz
cmc
loope
xor
sarb
and
adc
mov
fmull
adc
push
bound
fs
mov
add
out
cli
loopne
cmpsb
pop
sbb
xchg
jmp
mov
sub
jo
setnp
sub
pop
adc
movsb
out
dec
mov
sub
push
test
push
adc
nopl
jb
add
push
test
cmp
jl
cli
sub
add
mov
dec
push
rcl
sbb
jg
or
ja
mov
mov
lods
mov
xor
mov
pop
adc
cmp
mov
fdivs
adc
filds
adc
mov
dec
cmpsl
int3
es
and
xor
pop
adc
nop
in
push
adc
mov
xchg
cmc
jb
filds
adc
mov
jo
adc
loopne
filds
adc
outsb
rcr
jp
out
sub
pop
adc
xchg
xor
pop
adc
pop
shlb
adc
sub
mov
add
jns
test
js
push
adc
into
bound
adc
dec
into
repz
pop
scas
and
pop
adc
inc
xor
sbb
adc
cli
pop
adc
cmp
out
into
cld
inc
mov
shrl
push
pop
cmpsb
fsubs
sarl
je
je
push
mov
outsb
je
cli
movsl
pop
mov
push
out
sahf
mov
std
dec
sbb
adc
or
test
jno
adc
push
mov
lock
adc
scas
jno
test
rol
add
outsb
sub
clc
xchg
mov
js
push
adc
sbb
in
xchg
xchg
mov
sbb
aaa
adc
mov
add
adc
xchg
shlb
shll
cmpsl
adc
fs
adc
jp
movsb
add
add
adc
fldln2
ja
pop
int
jnp
fsubr
mov
inc
mov
add
in
xorb
sub
cmp
sub
adc
js
pop
adc
fnstcw
stos
mov
mov
subl
out
lods
cmc
mov
push
push
ret
push
dec
loop
rolb
iret
lahf
rorl
in
push
dec
dec
add
dec
test
jl
push
adc
dec
int
divb
sbb
jo
push
adc
movsb
inc
jns,pn
xor
jno
adc
jecxz
mov
and
push
mov
pop
pop
cwtl
test
adc
add
push
fsubp
imul
xchg
fistps
movsl
sahf
push
jle
lret
pop
out
sbb
jo
push
adc
arpl
decb
sti
mov
cli
cwtl
sbb
jo
sbb
mov
jg
xchg
aam
or
or
jge
filds
adc
push
mov
jg
jo
adc
mov
filds
adc
mov
enter
mov
pushf
sbb
ficoms
stos
mov
popf
xor
pop
adc
inc
or
and
push
xor
pop
adc
push
stos
push
sub
mov
mov
mov
mov
jb
outsl
mov
test
js
stos
push
sub
lret
fists
mov
push
push
adc
aad
inc
add
adc
adc
xchg
push
fwait
cmpsb
mov
int3
xchg
ss
sub
push
adc
or
call
je
lea
xor
lea
cmpsl
mov
sub
aam
jno
adc
enter
rcll
jb
cltd
push
scas
cmp
adc
adc
push
dec
mov
daa
aam
push
adc
xor
lods
adc
mov
pop
stos
sbb
xlat
jmp
daa
setbe
adc
in
testb
daa
cmp
or
bound
or
pop
mov
lret
mov
leave
adc
lds
mov
cmp
fchs
pop
sahf
adc
in
arpl
mov
cmp
repnz
iret
sbb
dec
push
addr16
dec
xor
xchg
mov
test
mov
ret
ja
mov
add
inc
into
pop
mov
dec
push
mov
push
iret
repz
mov
pop
sub
lds
push
shll
xchg
lcall
mov
sub
sbb
fxch
fldt
repz
fwait
rorl
cmp
ret
daa
das
lock
xchg
pusha
add
jne
sbb
push
lock
dec
cmp
lahf
in
push
jl
cmp
add
xorl
add
adc
xor
xor
outsl
testl
test
sbb
mov
scas
push
dec
sub
rcll
ja
pop
rolb
inc
mov
lret
call
jp
pop
mov
add
xchg
jmp
and
clc
push
insb
inc
rcll
xor
jns
loopne
std
push
in
aam
movsb
or
je
sbb
gs
sub
mov
adc
rcrl
and
scas
je
dec
jns
lcall
stc
push
out
iret
pop
mov
pop
xor
inc
jle
filds
and
movsl
int
out
pop
jge
cs
mov
jno
loopne
mov
lock
and
mov
sub
xorb
mov
test
fmull
test
add
movsl
inc
sub
popa
mov
repz
xor
jmp
xchg
mov
sarl
fisubrs
test
scas
jo
out
iret
leave
mov
jno
in
push
arpl
mov
sti
adc
push
cmpsl
int3
clc
xor
mov
iret
xchg
enter
or
mov
and
mov
jl
push
lock
test
mov
clc
out
pop
rcll
stos
fcompl
cmp
and
mov
push
pop
xlat
out
or
push
bound
mov
xchg
sub
xchg
mov
mov
cwtl
cmp
mov
iret
sbb
cmp
lret
rol
out
push
stos
sub
push
push
sub
inc
insl
idivb
sbb
imull
adc
dec
pop
test
push
adc
insl
push
cmpsl
andl
cmp
mov
iret
sbb
adc
leave
pop
adc
sbbb
adc
ds
fdivrl
ret
cmpb
shrl
sbb
push
and
sbb
xor
mov
pop
les
mov
jns
jge
lret
rclb
xchg
aad
stos
adc
sbb
into
or
push
std
ret
jbe
jb
cmc
push
mov
jae
or
pop
adc
out
inc
sbb
mov
mov
jbe
and
aaa
outsb
mov
adc
adc
mov
push
imul
push
adc
mov
sbb
xchg
movswl
fsts
push
scas
std
cmp
inc
scas
add
adc
pop
out
fdivl
jne
jno
sar
ret
enter
aas
pop
mov
stc
pop
dec
push
pop
popf
or
dec
cmpsl
sub
movsl
jne
fdivs
or
xor
inc
aam
pop
push
popf
lods
adc
adc
cltd
mov
xchg
in
call
iret
frstor
gs
xchg
lea
idivb
cmp
xor
mov
adc
js
cld
nop
sti
dec
mov
out
push
dec
inc
push
mov
int3
jle
adc
cmp
sub
ja
sub
repz
mov
sub
mov
add
dec
bound
addr16
xor
int3
xor
xchg
add
lods
jmp
cmc
push
push
mov
pushl
and
loope
in
imul
push
mov
pop
or
pop
adc
stos
push
sbb
xor
in
mov
push
adc
jge
mov
jbe
ds
je
push
adc
xchg
inc
scas
repnz
outsl
imul
js
pop
test
and
xor
imul
sub
jns
repz
jno
insb
scas
and
fmuls
and
sbb
les
inc
data16
out
rcll
iret
push
int3
mov
and
in
mov
shlb
bound
mov
stos
push
lahf
add
cmc
mov
bound
testb
mov
jnp
and
lret
aam
fs
ds
je
add
fwait
cmp
shll
ror
sbb
adc
test
cltd
cli
mov
mov
mov
bound
adc
or
and
icebp
stos
adc
ror
cmp
ljmp
outsl
test
mov
inc
pop
lods
adc
pop
cmp
inc
lcall
and
or
adc
pop
jo
cmc
inc
cmp
lret
cmp
roll
inc
dec
and
gs
cmp
stos
push
and
test
shl
jno
sub
fwait
or
or
mov
sahf
push
test
pop
sub
jbe
shl
out
push
popa
jo
push
jl
jae,pn
in
aaa
out
sbb
cld
pop
push
es
pop
jbe
xchg
adc
addr16
outsl
sub
inc
jae
arpl
sub
pop
push
and
ret
push
ja
iret
fs
jle,pt
jg
aad
xchg
sbb
push
stos
or
pop
mov
sti
arpl
add
mov
adc
shll
aaa
frstor
xchg
adcl
mov
push
jg
hlt
mov
pop
fdivp
lahf
xchg
sub
in
pop
sub
sub
jb
push
int
sub
inc
jae
mov
mov
mov
push
mov
loopne
push
pop
fldl
shrb
xlat
pop
sti
stos
fcompl
das
rolb
xor
ss
cs
lds
ss
mov
push
and
lcall
sub
aam
push
adc
xor
xor
out
inc
cli
add
lock
mov
cmove
sbb
jge
cmp
lret
cmpsb
rclb
jno
and
lahf
cmp
push
iret
roll
mov
aam
outsl
cmp
inc
xchg
dec
lahf
aas
mov
int3
out
sahf
mov
sub
xchg
xor
push
pop
fcoms
mov
cmpsb
xchg
pop
icebp
xchg
pop
inc
fidivrs
dec
je
cmp
jb
inc
xchg
out
imul
xchg
imul
and
cmpsb
fistl
jl
test
cltd
lds
orl
sub
scas
bound
je
cmp
shr
sbb
jge
lods
mov
fiadds
out
popf
and
cltd
mov
ja
in
mov
lods
out
stos
lcall
jae
cmpsb
lret
push
cmpl
inc
push
test
jno
ss
and
sbb
aam
faddl
xchg
or
bound
mov
push
mov
pop
inc
xor
out
and
int3
or
bound
inc
pop
subb
and
cmp
orb
pop
cmpsb
fs
xchg
mov
adc
mov
xor
cmp
sbb
insb
movsb
inc
add
insb
xchg
movsl
pop
sub
inc
adc
sti
jg
inc
push
cmp
stos
outsl
lcall
shl
movsb
rcll
arpl
jge
adc
jnp
lods
nop
mov
ror
and
hlt
inc
cli
mov
add
mov
dec
nop
jmp
mov
mov
cmpsb
pop
pop
or
fucomp
and
cmp
sub
cmp
jb
mov
inc
pop
push
gs
fs
pusha
add
mov
scas
dec
pop
daa
fcomps
stos
enter
fstps
orl
enter
dec
mov
sahf
mov
xchg
adc
xor
adc
mov
mov
jno
icebp
jle
mov
bound
and
ret
sti
mov
adc
repnz
jp
ficomps
or
mov
mov
ljmp
xchg
sbb
pop
les
and
aam
xchg
insb
divb
int
mov
sbb
inc
mov
xor
mov
mov
push
xor
lahf
out
xor
jecxz
or
sbb
icebp
mov
sub
das
cltd
test
insl
lock
daa
aas
jnp
add
inc
pop
cli
mov
stc
sub
jg
adc
sbb
and
adc
xor
xor
bound
pop
fdivl
adc
stc
cli
xchg
in
decl
adc
stos
ret
ja
mov
aas
lods
sbb
pop
rcrl
inc
and
scas
iret
out
jnp
ljmp
xor
jg
xor
fsts
push
and
ror
lock
in
ja
lret
jns
call
iret
inc
add
fisubrs
aam
and
cmpb
clc
xor
mov
jno
add
sub
hlt
stos
and
fsub
mov
mov
int3
or
mov
cmp
mov
fucomip
pop
daa
aaa
mov
lea
cmp
icebp
jge
ljmp
ds
aad
test
ds
xchg
lods
push
jbe
jno
loopne
loop
push
push
scas
insb
repz
fcoml
push
lcall
push
lret
push
aas
xchg
stc
jge
fldcw
or
pop
stc
jne
sbb
fcomi
outsl
push
jbe
ja
cld
mov
jge,pt
inc
call
cmp
push
and
mov
push
lock
pop
rcll
mov
cmp
in
repnz
in
pop
sub
xchg
inc
lock
cltd
jb
adc
jne
enter
push
push
cmp
filds
pop
pusha
movswl
jle
into
jbe
mov
bound
mov
pop
xchg
in
jno
fdivl
das
xor
xchg
repz
dec
xchg
out
jbe
mov
hlt
cmc
push
pushf
ja
ficoms
jb
jle
int3
aam
pusha
add
mov
icebp
scas
and
xchg
loope
scas
int3
push
cltd
inc
lock
ret
lods
dec
jno
jns
es
mov
and
jge
sub
insb
dec
out
sbbl
test
adc
cmp
inc
add
divl
sbb
cwtl
mov
fwait
popf
hlt
leave
jl
jbe
or
mov
fstps
mov
mull
aad
jnp
xor
mov
push
jl
pushf
pusha
pop
pop
jno
frstor
sbb
pop
outsl
jnp
sbb
setno
push
and
adc
aad
adc
ud0
and
test
jp
fimuls
add
cmp
mov
iret
insl
sub
in
loop
add
sbb
inc
fildll
mov
movsb
pop
popa
dec
mov
pop
or
adc
cwtl
rcrl
cmp
mov
push
push
sbb
es
repz
out
sub
popa
mov
pop
pop
or
in
sbb
jge
and
lock
jns
adc
sbb
adc
aas
push
push
inc
add
movsb
hlt
xor
xor
out
push
js
jge
mov
and
std
fwait
inc
or
jg
xchg
dec
popf
inc
xor
add
mov
ds
adc
lock
arpl
push
notb
leave
pop
adc
fcoms
pop
test
adc
notb
cwtl
sbbl
mov
int3
jle
xchg
xlat
pop
jae
mov
aam
xor
sub
jne
das
outsb
insb
jecxz
mov
push
cmpsb
dec
xor
push
push
xor
adc
int3
mov
jo
adc
push
int
lock
ljmp
movb
adc
sub
shrl
aas
call
jno
dec
mov
es
ljmp
mov
popf
push
adc
jnp
stos
jns
mov
mov
adc
sub
mov
jl
fcoms
setnp
cs
jb
enter
push
rclb
mov
ret
add
mov
in
ret
subb
jb
xorb
push
stos
inc
fwait
jnp
pop
sbb
jo
jle
adc
xor
mov
popa
movsb
dec
scas
cmp
enter
lea
push
fidivrl
xchg
retw
jae
inc
mov
dec
and
test
mov
sub
pusha
push
cmpsb
jns
jnp
arpl
lea
xor
ror
or
cs
push
les
adc
pop
xor
or
xor
mov
inc
and
popf
push
adc
adc
push
mov
aaa
lcall
adc
ja
pop
cs
scas
sahf
cltd
lret
xchg
push
push
add
sub
pop
mov
insl
divb
dec
aaa
pusha
shrl
lds
mov
int
daa
scas
fucomip
push
dec
dec
sbb
mov
and
cli
je
cs
jo
adc
pop
pop
aas
stos
fldenv
pop
mov
mov
pop
push
and
int3
sbb
or
push
in
mov
sub
rcrb
pop
mov
mov
push
int
ds
cli
fsubr
shrl
test
pop
push
test
fs
push
and
mov
dec
jge
cmpsl
gs
inc
mov
pusha
dec
lods
push
stos
incl
pop
shlb
adc
mov
xchg
int3
sahf
aas
sub
pop
cmp
jno
mov
sbb
rclb
mov
cld
pusha
or
subb
jnp
enter
add
cs
outsb
roll
loop
fwait
mov
push
or
sub
cltd
popf
cmc
jp
sub
and
cmpsl
sarb
pop
or
sahf
insl
dec
jmp
dec
dec
xor
arpl
js
out
inc
aam
jl
add
xchg
sbb
jnp
cmp
inc
aas
add
nop
fisubs
add
xchg
pop
fcomps
pop
ficoml
in
push
js
push
adc
movsl
fildll
sbb
mov
push
adc
fldcw
mov
gs
loopne
stc
xor
xor
les
mov
aad
int3
sub
inc
pop
daa
add
rcll
pop
fadd
out
aaa
pop
test
push
and
sbb
inc
mov
movb
out
loop
xchg
mov
push
and
ret
mov
and
je
mov
push
popf
addr16
mov
mov
mov
pop
mov
cmp
push
in
cmpsb
es
loop
pop
or
xchg
cmc
xor
ja
adc
mov
shl
cmpsb
dec
fcmovne
xor
data16
mov
aaa
rolb
leave
das
cmp
mov
out
and
fidivrl
adc
pop
stc
push
mov
jb
cs
jbe
mov
pop
daa
fmul
pop
jno
adc
mov
cmp
sbb
test
frstor
xchg
add
cmp
mov
mov
inc
ss
xchg
or
xlat
fsubrp
mov
jo
adc
push
fucom
xchg
add
jecxz
jmp
and
push
sar
cmpsb
mov
sbb
pop
cmp
push
gs
lds
sbb
mov
mov
push
dec
pusha
jb
dec
and
lods
cmp
out
or
jl
std
lds
shlb
or
mov
dec
push
popf
stc
xor
daa
inc
push
outsb
sbb
jmp
lock
adc
pop
fbstp
loope
sbb
xor
stos
inc
add
pop
cmp
gs
nop
xchg
sub
test
sub
popa
ret
stos
and
sar
or
cs
pop
push
lahf
leave
xchg
sub
jne
push
lods
icebp
cmpsb
ffree
test
adc
mov
xor
mov
sbbb
xlat
sarb
mov
adc
mov
cmp
pop
push
mov
pop
stos
lods
push
stos
clc
add
mov
sbb
push
adc
pop
mov
lock
adc
pop
push
gs
xchg
sub
rclb
push
lods
and
subb
mov
push
adc
cmp
mov
cs
cs
mov
in
cmp
inc
test
popa
outsb
adc
arpl
gs
out
jb
fst
sbb
stc
ds
sub
popa
ret
inc
adc
movsl
sahf
mov
bound
pop
pop
mov
pop
daa
adcl
popa
ret
mov
pop
ja
mov
or
repnz
movsb
sub
cld
fldenv
pop
mov
aad
cmp
and
and
addb
fimuls
dec
inc
pcmpgtb
retw
mov
ror
shrl
push
adc
or
adc
xchg
adc
sarl
jae
adc
inc
cld
test
stos
in
shrl
fs
mov
jp
fdivs
jne
mov
or
pop
movsl
iret
int
mov
stos
dec
jae
sub
cltd
adc
idivb
test
push
nop
mov
mov
icebp
mov
push
mov
ret
cmc
shrl
or
mov
xor
xchg
push
add
adc
xorl
adc
jge
orb
fldt
dec
rcl
cmc
xlat
std
faddl
pop
cmc
mov
sub
ss
inc
fnstsw
repnz
lret
iret
push
fldcw
sub
and
mov
jae
ljmp
out
es
ds
adc
or
xchg
insb
loope
pop
pop
icebp
or
mov
rol
and
orb
popf
push
or
add
test
sbb
cmp
imul
mov
lods
push
aad
add
aas
enter
xor
pop
push
fcompl
ss
sarl
pop
jne
pop
in
nop
or
mov
sahf
cmpsb
or
jmp
push
pop
pusha
ds
adc
aad
push
jmp
fdivl
dec
aaa
popf
test
jnp
scas
decl
ds
test
mov
aas
pushf
mov
push
push
aam
dec
fs
and
pusha
pop
mov
or
fimuls
loop
out
pop
or
and
jne
mov
ds
fwait
scas
dec
in
hlt
and
pop
pop
movsb
xchg
or
leave
mov
lock
mov
adc
sbb
sti
mov
jecxz
mov
push
adc
jb
sub
pop
sub
outsb
fcoml
fcmovne
fyl2x
adc
je
jge
adc
inc
adc
dec
add
add
fsubrs
sub
fisubl
std
aam
and
in
out
cld
cmp
pusha
push
and
nop
mov
ds
sbb
fnsave
adc
xchg
daa
jecxz
push
das
push
mov
out
lea
mov
sbb
pop
in
out
test
rcrl
mov
data16
push
adc
lcall
mov
and
xor
dec
adc
jno
int3
cmp
adc
adc
ret
sar
out
push
loope
sbb
push
adc
mov
xchg
jmp
inc
std
divl
mov
scas
mov
aad
lods
sub
adc
or
insl
mov
push
adc
orl
xor
mov
add
pusha
ret
test
mov
popa
mov
jb
in
push
inc
dec
sub
stos
dec
ljmp
dec
xlat
mov
cli
popa
stos
int
push
push
sbb
fists
or
fcoms
cmp
clc
out
inc
into
cmp
call
int
push
mov
mov
sub
pop
jl
imulb
sahf
cltd
jb
adc
jns
mov
shrl
inc
push
push
xorl
repnz
stos
add
inc
clc
mov
sti
jg
aad
push
mov
jne
aad
adc
xorb
or
aaa
mov
popf
out
lahf
dec
int3
rol
fldt
mov
xchg
cli
cmpb
push
popa
movsbl
mov
push
stc
ja
mov
pop
mov
subb
fsubr
push
and
ss
and
insb
mov
movsl
and
mov
mov
repnz
cs
sahf
cmp
test
roll
int
push
arpl
and
sbb
aaa
mov
sbb
out
xorl
pop
leave
ljmp
push
dec
dec
adc
std
mov
ret
cmp
scas
xor
xchg
and
mov
push
mov
inc
shlb
idivb
pop
fimuls
pop
sub
adc
push
popa
ret
test
push
std
jp
mov
lods
fsubs
sbb
pop
mov
push
sbb
sbb
mov
push
int
and
pop
daa
loope
mov
adc
jo
adc
cmp
ret
adc
daa
lcall
xlat
repnz
mov
sbb
flds
pop
and
pop
adc
mov
or
std
loope
pop
pop
das
and
sarb
jo
adc
mov
jmp
pop
and
sbb
lods
aas
add
inc
in
lods
jle
xchg
sbb
fdivrl
mov
sbb
push
or
movsl
imul
ljmp
pop
mov
mov
inc
addr16
in
xor
add
shlb
pop
jb
stc
sub
push
stos
lds
push
sahf
xchg
lods
stos
fucom
lahf
push
jmp
mov
cwtl
js
mov
jp
sub
fnstcw
cs
in
cli
inc
add
mov
jbe
cmpsl
pop
lcall
push
and
aam
and
push
sbb
mov
cld
xchg
xchg
and
shl
push
cmp
das
faddp
xchg
aaa
mov
dec
or
scas
and
mov
aam
sub
dec
vpminsw
sti
loop
adc
and
mov
push
mov
pushf
insb
jb
pop
fdiv
fisubs
fmul
mov
jp
and
out
mov
fisttps
pop
push
mov
pop
push
push
int3
stos
or
and
mov
push
adc
in
aas
jne
mov
mov
push
or
pop
adc
xlat
sub
inc
inc
clc
add
lock
stos
orl
add
stos
bound
jo
adc
sbb
mov
pop
and
addb
arpl
cli
inc
cmp
aam
mov
pop
pop
xor
push
iret
pop
lret
shll
sub
ja
adc
or
dec
mov
in
adc
aaa
stc
js
inc
shll
sahf
dec
push
pushf
add
cmp
fcom
add
cwtl
or
out
test
inc
add
lds
adc
mov
clc
test
sub
sbb
js
cmpsl
push
xor
sbb
repnz
push
mov
sub
add
stos
pop
mov
fldenv
aam
add
sub
xchg
fisubrl
cmp
mov
shrb
hlt
cmp
mov
int3
or
divb
inc
lea
xor
insl
mov
shll
sub
mov
mov
push
pop
mov
pop
in
inc
das
xchg
fnsave
add
push
idivl
pop
call
cmpsb
aad
dec
or
sti
xchg
sub
in
fcoml
sub
push
dec
cwtl
loopne
push
mov
fstl
outsl
cmp
pop
out
mov
lock
iret
mov
cmpsb
dec
ret
dec
inc
inc
insl
test
add
test
cmp
out
insb
mov
movsb
cmc
stos
jge
outsl
sub
test
inc
sub
xchg
push
sub
fwait
shlb
xor
hlt
fidivs
or
sub
pop
jp
fidivs
stos
fnsave
cmpsl
out
jns
insl
sbb
jle
scas
jg
adcb
pop
out
sti
add
cmp
mov
mov
pop
jo
adc
pop
ja
repnz
mov
push
adc
xchg
ret
jae
adc
and
push
std
sub
mov
dec
gs
push
add
add
nop
jbe
adc
ds
fnstsw
jo
adc
sub
lret
ret
push
adc
cwtl
jae
adc
mov
pop
pop
push
push
rcll
divl
and
pop
adc
sbb
subl
mov
sbb
clc
mulb
add
lret
aas
cmp
stos
push
cs
scas
mov
xor
out
sbb
xchg
or
push
adc
fimull
jno
mov
fists
or
adc
mov
jne
stos
insl
pushf
nop
cli
push
rcr
mov
mov
adc
mov
stos
sub
jmp
in
fdivs
adc
shll
mov
cmp
mov
xchg
mov
jns
fildl
lods
rolb
fwait
or
dec
jnp
add
in
push
adc
daa
clc
jo
adc
data16
pop
je
mov
inc
aam
push
adc
pop
mov
adc
xchg
clc
bound
push
adc
aas
lods
fcmovbe
add
mov
fucom
rclb
xchg
insb
sbb
js
repz
mov
mov
sub
push
adc
in
shll
movsl
inc
dec
sub
aam
or
mov
shl
into
add
lods
mov
xor
jecxz
movsl
outsl
add
fdivs
adc
testb
insb
negb
or
leave
mov
mov
push
mov
mulb
shr
lret
mov
jmp
xor
mov
mov
lcall
push
adc
lods
sub
jno
sub
xchg
sub
mov
pop
jl
jo
adc
hlt
fimuls
add
cmpsl
sub
test
and
sub
push
adc
test
push
adc
clc
jo
adc
xchg
in
repz
push
hlt
jo
adc
mov
in
lods
andb
dec
xor
icebp
jo
push
adc
lahf
inc
aaa
daa
jmp
mov
iret
stc
jne
adcl
repnz
or
pop
push
cmp
jecxz
hlt
pop
loope
adc
adc
stos
rcrb
arpl
idivb
pop
cmpsl
daa
or
sub
jg
sub
je
and
mov
cmp
movsb
das
push
jnp
lea
sbb
push
push
xor
xlat
inc
pop
ja
iret
nop
mov
cs
cmpsb
mov
xor
xor
push
rcrb
ljmp
jae
cwtl
pop
mov
cmc
mov
cli
ds
jmp
sahf
push
adc
mov
nop
jo
adc
jge,pt
or
inc
jae
adc
xchg
movsl
aad
aas
sahf
push
adc
jp
push
enter
jno
movsb
lods
xchg
in
mov
stos
push
stc
cmp
push
cmpsl
dec
popa
sub
jb
adc
outsb
sub
jno
adc
jb
les
adc
das
mov
dec
out
mov
dec
leave
roll
push
les
adc
push
inc
les
adc
fdivl
ss
nop
shll
pop
ljmp
push
imul
push
adc
mov
sar
mov
clc
cmp
hlt
pop
add
xchg
sub
add
mov
mov
jb
test
xor
pop
aam
pop
les
push
adc
push
xchg
insl
sub
jo
adc
popa
and
push
inc
jno
push
test
adc
mov
in
lahf
or
mov
decl
xor
pop
jmp
out
or
divb
fidivrs
mov
in
jne
pop
mov
xlat
stos
push
cli
ljmp
adc
mov
or
push
adc
inc
sbbl
loop
das
stos
mov
jbe
mov
jne
imul
and
adc
pop
call
out
call
push
adc
fistps
daa
test
jo
adc
cmp
icebp
adc
jo
adc
pop
and
movsb
push
gs
jns
inc
push
xchg
jbe
cld
sub
inc
imul
pop
adc
cmp
jns
outsb
or
shll
and
data16
jno
adc
das
xor
lret
pop
aam
icebp
rcrb
adc
mov
mov
or
xor
push
adc
jmp
jo
adc
adc
adc
das
hlt
jo
adc
push
fbstp
shr
fnstcw
lock
adc
mov
and
sbb
fs
test
dec
push
pop
adc
mull
adc
dec
adcb
outsb
and
pop
imul
pop
xor
jp
cwtl
adc
aas
mov
jno
adc
push
push
fildll
mov
push
adc
push
daa
add
mov
mulb
sub
gs
sbb
jo
adc
mov
fisubrl
mov
stos
bnd
mov
in
sbb
in
push
adc
popf
dec
and
daa
jo
repz
mov
pop
imul
mov
mov
daa
xor
sbb
aaa
icebp
insl
xlat
test
adc
arpl
pop
jb
xor
jno
mov
or
push
adc
add
mov
fcomps
add
insl
cwtl
jae
adc
popa
testb
std
das
mov
or
push
adc
mov
fsts
cwtl
jp
mov
ljmp
inc
adc
and
mov
pop
cmp
test
inc
cmp
or
lds
dec
inc
push
sub
ret
dec
inc
out
add
push
adc
fisubl
xor
fdivl
popa
dec
adc
push
adc
cmp
mov
aam
push
adc
push
adc
jg
jo
adc
in
pop
dec
dec
lods
std
lock
cmovb
cmp
xor
cmp
inc
jb
adc
mov
cmp
xor
mov
ret
ret
pusha
sub
pop
dec
pop
testb
stos
push
stos
cmp
mov
fdiv
out
jge
leave
pop
adc
jnp
leave
das
popa
dec
jg
jb
mov
push
scas
hlt
ret
test
adc
ds
adc
cmp
push
adc
jae
popa
ret
loope
adc
out
sbb
js
xchg
orb
push
pop
aas
test
inc
or
sahf
mov
iret
ja
xchg
je
pop
aad
add
insb
loope
and
data16
push
lods
pushf
mov
mov
xor
sub
mov
xchg
sub
das
mov
lods
pop
pop
popa
dec
jae
mov
or
pop
cs
test
pop
pop
xchg
pop
out
movsl
cli
mov
fs
aaa
gs
pop
fwait
imul
ljmp
xchg
sub
stc
cmp
push
mov
mov
repnz
adc
cmp
pop
mov
mov
lds
jge
in
fdivrl
mov
jne
jge,pt
jge
mov
aaa
xor
push
stos
push
cmp
adc
mov
addl
jb
sub
push
adc
aas
fcoms
pop
adc
out
xor
leave
pop
or
das
gs
lret
xchg
pusha
pushf
push
adc
ds
pop
mov
mov
inc
adc
inc
clc
pusha
jns
ret
xorb
sub
call
push
adc
cs
movb
sbb
add
xor
push
adc
fwait
in
cs
push
and
xor
rol
and
loopne
mov
mov
sbb
pop
es
mov
lret
and
push
enter
add
jmp
jo
adc
cli
xchg
adc
ret
loop
push
sbb
mov
inc
test
sub
add
sub
push
adc
jl
mov
mov
push
mov
in
xchg
add
leave
loop
push
bound
daa
xor
push
adc
out
cmp
movsb
cmc
pop
out
adc
mov
leave
pop
adc
lret
mov
jge
stc
sbb
mov
push
and
xchg
jmp
out
adc
movsb
dec
cltd
dec
gs
xor
cltd
addb
mov
and
push
stc
push
lods
push
icebp
shr
movsl
ror
lods
in
mov
les
outsb
iret
jno
loop
lods
sbb
negb
jo
adc
xchg
mov
aas
test
rcr
mov
lods
sub
push
xchg
push
sub
and
out
jle
add
sahf
test
jecxz
leave
inc
vpsubsb
lods
adc
loope
fbld
aad
mov
jno
adc
mov
js
push
adc
repz
lock
pop
scas
jp
pusha
data16
mov
les
adc
ret
out
push
popf
push
adc
push
movsl
dec
sub
inc
mov
cmp
fidivrs
adc
out
cmp
aaa
mov
jmp
sbb
negb
jo
adc
popa
or
mov
push
adc
subl
andb
lods
cmp
xlat
enter
push
das
sbb
adc
arpl
stos
daa
mov
scas
sahf
stc
xor
test
add
loope
inc
pop
xchg
jp
outsl
adc
iret
data16
mov
mov
xchg
ja
std
js
cmp
push
mov
or
sub
dec
jo
adc
pop
dec
bound
fdivrl
dec
popf
add
adc
aad
rclb
adc
push
jl
mov
sbb
fdivrl
jge,pt
pop
mov
cs
push
adc
mov
pop
pop
cwtl
jo
adc
imul
mov
sbbl
mov
and
mov
adc
stos
jns
push
repz
xchg
rolb
test
js
mov
fdivrl
push
adc
mov
mov
push
inc
sub
push
adc
mov
mov
jge,pt
jns
aad
inc
lea
filds
in
lret
pop
mov
mov
ljmp
jns
clc
mov
xor
stos
add
push
adc
xchg
clc
and
cmp
hlt
ret
adc
pop
popf
rclb
mov
or
cmc
out
push
cmp
in
lahf
insl
sub
pop
lret
or
ss
stc
add
dec
mov
jmp
sub
push
adc
jno
imul
pop
es
mov
xor
push
stos
push
shlb
popa
dec
scas
or
and
scas
sbb
pusha
dec
movsl
add
inc
lea
imul
stc
stos
pop
add
lds
scas
lret
lahf
and
inc
or
jns
aad
pushf
imul
xchg
jnp
dec
and
pop
adc
call
out
mov
das
mov
mulb
insb
sbb
push
jmp
or
push
adc
stos
pop
movsl
sbb
adc
inc
or
adc
add
adc
fistl
icebp
icebp
mov
repz
imul
cmpsl
adc
fstl
mov
adc
roll
adc
mov
sbb
push
mov
les
adc
adc
out
je
mov
incb
stos
and
push
popf
or
sarl
outsl
jmp
cld
cltd
add
sbb
push
icebp
jl
aam
push
adc
gs
and
fistpll
mov
add
adc
and
inc
outsb
aam
push
scas
fbld
and
push
jo
adc
push
adc
lods
testb
adcb
jns
sub
jb
adc
pop
dec
jnp
movsl
lcall
mov
jno
adc
adc
push
imul
pop
mov
adc
out
jmp
xor
sbb
inc
pop
sbb
fs
in
push
adc
cwtl
in
lock
outsl
sti
mov
mov
mov
outsb
mov
and
pop
pop
sub
add
or
lret
iret
shr
sbb
and
add
adc
xor
cmp
mov
jno
adc
adc
int3
hlt
cs
or
mov
fnstenv
fstps
push
icebp
unpcklps
push
adc
add
sub
push
lahf
mov
arpl
jae
inc
jo
sbb
js
pop
bound
and
outsb
cmpsl
or
xor
jg
jo
adc
inc
cmp
push
pushf
inc
jae
adc
pop
pop
inc
adc
sahf
push
adc
lods
imul
adc
push
push
les
adc
stos
data16
and
xor
push
adc
adc
daa
iret
jbe
fwait
push
adc
loopne
jns
jne
push
dec
nop
mov
cld
mov
lock
mov
out
sub
pusha
mov
jo
sub
mov
fldt
orb
inc
fidivl
shll
mov
stos
push
xchg
sub
pop
and
xchg
dec
mov
sub
lahf
ds
cmp
inc
lea
push
lods
push
xchg
mov
xor
das
int
ds
xor
mov
push
push
xchg
test
in
jns
out
test
mov
popf
jge,pt
cld
pop
test
int
cltd
into
xchg
mov
stc
add
sbb
out
and
out
loopne
xor
mov
jo
adc
andl
push
push
inc
inc
jae
adc
aaa
lcall
aas
sahf
push
adc
xchg
andb
push
fs
jns
out
mov
push
cwtl
cmp
mov
add
les
adc
jno
out
iret
rorl
or
lahf
push
xchg
sub
push
and
push
adc
out
adc
outsl
dec
mov
imul
and
jnp
dec
and
pop
adc
insl
sub
jb
pop
outsb
aam
push
cwtl
push
inc
aam
push
adc
adc
aaa
popa
roll
push
adc
stos
cli
stos
mov
mov
jb
test
and
push
adc
in
out
adc
mov
ljmp
mov
cld
cwtl
jo
adc
lock
adc
add
repz
dec
ljmp
ret
dec
jae
adc
jb
add
push
and
lock
sbb
push
lds
mov
test
scas
push
lock
and
shlb
leave
pop
adc
mov
icebp
cld
loopne
and
mov
xchg
xchg
fcomps
jle
push
stos
arpl
stos
bound
in
dec
out
jb
cmpb
push
mov
mov
jno
adc
adc
jecxz
mov
fwait
fwait
xchg
jle
mov
xor
cmp
cmc
out
jg
mov
jno
adc
sbb
sbb
test
insl
pop
push
aam
push
mov
es
icebp
mov
push
adc
repz
push
mov
nop
jo
adc
and
loopne
sbbl
jo
adc
inc
push
ja
sub
adc
les
adc
stc
int
xchg
xor
adc
pop
push
mov
cltd
mov
movsb
or
sbb
push
rorl
adc
xchg
idivb
cmp
cmp
xor
std
xor
out
push
jmp
inc
into
xorb
test
add
push
adc
stc
les
adc
icebp
insl
ljmp
adc
push
in
mov
cli
mov
jnp
inc
sbb
push
adc
das
pop
xchg
lcall
pop
adc
nop
jo
adc
lds
sahf
dec
daa
pop
out
or
pop
adc
add
cmpsl
lahf
or
pop
adc
push
adc
and
pop
adc
mov
add
jno
adc
mov
aaa
pop
clflush
int3
pop
cltd
scas
loope
inc
cmp
js
out
into
sub
add
cmp
adc
push
adc
cmp
cmpsb
ja
je
aam
sub
jl
mov
adc
fwait
pop
sbb
lahf
push
adc
jmp
into
or
daa
pushf
loope
filds
sub
jo
adc
test
cmpsb
insl
or
mov
cmp
int
nop
lea
ret
cmp
out
fsubr
and
mov
in
cmpsl
inc
lea
lret
lcall
lret
stos
out
fdivrl
cmp
cli
movsb
add
mov
in
ss
pop
test
cmp
mull
popf
dec
in
lahf
outsb
subb
fisubs
loope
sbb
ret
push
cmpsl
mov
sub
push
adc
push
lret
lock
aam
mov
dec
popf
scas
push
stos
add
test
dec
sahf
mov
shll
daa
andl
push
jno
aad
or
mov
lcall
adc
cli
int3
je
lret
dec
lea
insb
xor
in
push
cmpsl
dec
into
mov
shrl
xor
gs
xchg
sbb
ljmp
lods
test
mov
xor
ret
negl
ds
adc
aam
push
cli
stos
mov
mov
int3
add
xor
push
adc
xchg
add
push
cli
stos
jg
shlb
faddl
push
mov
mov
mov
or
imul
outsl
sbb
jb
call
ds
push
add
mov
stos
out
and
arpl
cmpsl
aas
jge
movsb
pop
pop
pop
xor
mov
adc
or
pop
adc
popf
imul
jecxz
gs
pop
adc
sub
jno
stos
mov
mov
mov
sbb
mov
xchg
in
xchg
sub
jo
xlat
jne
dec
xchg
mov
ss
pusha
clc
hlt
ljmp
add
test
sub
icebp
jae
mov
dec
jo
adc
js
adc
cmp
sets
mov
push
adc
scas
push
mov
gs
jnp
xchg
mov
out
xchg
jg
sti
or
or
enter
std
mov
jno
dec
jae
adc
mov
xor
jne
xorb
adc
adc
aaa
add
pop
shlb
push
cmp
xor
out
test
daa
jmp
mov
xlat
jne
mov
popl
push
adc
push
cmpl
cmp
mov
push
xor
adc
sbb
mov
push
mov
lods
stos
jno
std
mov
or
sbb
loope
jmp
int
sarl
repz
adc
jbe
push
cmpsl
pop
stc
test
arpl
mov
xor
js
mov
push
pop
jbe
cli
push
pushl
add
sub
repnz
aas
add
jne
lods
or
and
push
adc
dec
pop
inc
jo
adc
les
xchg
sahf
aam
push
adc
daa
mov
push
adc
sbb
js
pop
pop
jp
push
or
jns
in
dec
cmovg
bound
push
cmp
push
adc
cmp
pusha
push
les
adc
sub
sub
dec
mov
and
pop
adc
gs
jns
and
cmp
shlb
xchg
adc
mov
cltd
cmp
mov
sbb
arpl
in
push
cmc
lret
sub
jne
add
int3
jbe
xchg
incl
adc
pop
mov
pop
adc
push
rcrl
adc
mov
push
ss
dec
fcompl
jbe
add
andb
inc
ja
add
xchg
mov
xchg
add
jp
lods
mov
sbb
or
les
in
mov
pop
pop
or
push
sub
jge
mov
movsl
dec
pop
cmp
pop
or
and
push
push
cmp
jg
mov
cld
xor
mov
or
les
lock
push
mov
in
push
adc
adc
fiaddl
andl
hlt
jo
adc
hlt
mov
or
inc
xchg
incl
adc
cs
lds
adc
mov
mov
pushf
jo
adc
dec
in
adc
shlb
push
adc
push
test
push
adc
sbb
sbb
or
pushf
cmc
lea
adc
repnz
aas
sub
div
rcrb
aaa
sub
mov
push
push
mov
inc
jno
adc
push
test
cmpsl
daa
xor
adc
pop
or
cltd
cmp
add
adc
xchg
sbb
or
jo
adc
mov
test
push
adc
hlt
jo
adc
movsl
cmp
pop
pop
sub
push
adc
xor
mov
mov
adc
xchg
hlt
lock
mov
mov
outsl
dec
cmp
in
rcrb
out
push
add
ds
sub
adc
cmpsl
addr16
inc
mov
js
push
adc
sbb
dec
mov
lods
push
test
adc
les
inc
fcmovb
sub
add
adc
stos
cmp
pop
cmp
fdivrl
mov
cli
hlt
call
in
rcll
adc
iret
rcll
push
ss
rclb
push
adc
scas
dec
mov
mov
stos
push
cmp
push
adc
sbb
pop
leave
pushf
cmp
scas
jnp
daa
pop
mov
inc
cmp
test
imul
or
mov
xor
adc
insb
fdivs
adc
jge
into
xchg
andl
movsb
ljmp
imul
adc
ljmp
push
adc
adc
sti
outsl
jns
or
jbe
xchg
adc
inc
xor
mov
mov
ds
xchg
ljmp
dec
or
push
out
and
ljmp
jne
popa
shlb
adc
leave
out
dec
push
bound
les
adc
insl
dec
sbb
sbb
xor
or
sub
mov
pushf
aad
lds
xor
adc
adc
inc
nop
fwait
push
adc
pop
pop
hlt
jo
adc
sbb
jno
leave
lret
stos
stos
or
lock
adc
insb
shrb
mov
pusha
mov
aam
jo
adc
push
and
rcrl
fisubs
into
inc
setne
or
pop
pusha
inc
aad
lret
ljmp
jo
dec
dec
mov
mov
xchg
dec
dec
loop
ds
pop
pusha
js
and
into
cmp
shlb
jnp
pop
xchg
and
sub
push
ja
xchg
mov
adc
inc
ss
and
pop
adc
lret
daa
pusha
in
cmp
aam
jmp
out
test
mov
mov
clc
jo
adc
add
mov
and
fisttpll
push
adc
push
adc
sbb
cmp
pop
inc
push
adc
cs
mov
adc
adc
and
test
dec
inc
cmp
std
inc
leave
lea
mov
or
push
xchg
adc
inc
je
cwtl
push
lds
jo
mov
mov
sub
out
sti
xor
or
add
imul
jo
mov
push
nop
mov
dec
pop
inc
add
sbb
test
mov
pop
std
adc
aad
and
popa
dec
jae
aaa
mov
sbb
or
jg
sbbl
shll
rclb
cli
into
ret
test
push
jg
jno
testb
addl
jno
mov
push
mov
popa
mov
push
jecxz
push
rol
addb
mov
lock
adc
in
pop
movsb
xchg
push
mov
fwait
push
into
sbb
addl
push
adc
stos
push
test
test
adc
mov
mov
jb
pop
push
push
and
ja,pt
xor
loop
iret
sbb
jno
and
in
cwtl
jo
adc
shl
lods
pop
mov
imul
aad
sbb
add
test
out
aad
mov
into
push
jge
fidivrs
decb
sarb
mov
jb
arpl
shrl
insl
sbb
les
adc
xlat
push
call
sbb
cmp
mov
fsubs
das
pusha
ret
or
and
stc
pop
iret
bound
inc
call
push
cmp
push
fdivrl
sbb
icebp
add
or
mov
xor
scas
push
test
push
adc
inc
jl
push
lahf
jge,pt
mov
jb
nop
jo
adc
scas
fistps
cmpsl
pop
sahf
cmp
inc
callw
adc
and
xor
in
dec
std
stc
add
in
push
adc
cld
push
mov
js
push
adc
or
pushf
jo
adc
jle
jo
adc
and
sub
loopne
push
adc
or
pop
cmpsl
mov
jo
enter
push
adc
lcall
push
mull
movsl
mov
jno
adc
pop
and
les
adc
repz
adc
hlt
mov
sbb
sub
mov
cmpsl
aam
test
xchg
stc
xor
inc
sti
and
push
out
sub
ret
mov
and
push
jnp
sarl
add
std
icebp
push
out
jg
dec
jl
push
adc
in
fidivs
nop
mov
add
in
lock
or
xchg
lret
into
pop
notb
orl
nop
jmp
mov
iret
jle,pn
ljmp
adc
std
cmc
adc
jns
xchg
xchg
stos
xchg
or
pushf
push
sbb
ljmp
xorl
dec
lea
inc
cltd
push
es
mov
shrl
dec
cmp
pushf
daa
mov
movsl
jns
xchg
or
insb
mov
sbb
dec
movsb
repnz
aad
dec
or
adcl
js
movb
sbb
test
test
xor
sub
xchg
pop
bswap
nop
push
test
jno
xchg
mov
or
cli
decb
popf
int3
xchg
scas
dec
and
add
out
fwait
inc
adc
fs
or
pop
mov
sbb
mov
xchg
xlat
into
bound
inc
sbb
lret
stos
loop
sbb
mov
cli
push
imul
jns
adc
jns
mov
ret
jb
cmp
sbb
xor
jb
push
call
cmc
mov
cltd
xor
rorl
pop
push
lahf
inc
jb
pop
outsl
mov
cmp
push
mov
dec
bnd
push
int
cmp
jle
in
cmp
dec
cld
cltd
push
xor
loope
sahf
jnp
pop
or
fbld
pop
or
or
jns
lods
repnz
xlat
sbb
pushf
cmp
jle
repz
stos
aas
addr16
jnp
movsl
testb
mov
adc
lret
cmp
mov
clc
fadds
adc
cmpsb
push
jo
jae
add
pop
adc
sub
mov
xorb
hlt
pushf
sti
and
sbbl
dec
push
stos
push
rol
inc
sahf
mov
fildll
int
insb
iret
shrl
cs
cwtl
mov
adc
jb
or
nop
dec
lea
test
sbb
pusha
mov
roll
and
pop
adc
pop
das
icebp
stos
push
test
cmp
jp
mov
sbb
pop
pop
inc
lea
push
mov
push
test
ret
roll
cli
mov
cli
hlt
mov
in
fcmovbe
stos
push
and
and
jl
out
push
jmp
stos
inc
addb
lea
push
xchg
mov
scas
rorl
lahf
cmp
jmp
push
adc
imul
push
test
loopne
push
test
jo
adc
mov
cmp
mov
xchg
mul
lret
repz
dec
sbb
push
mov
aaa
sub
pusha
cmp
jo
lret
cld
stos
pop
loopne
push
cmpsl
pop
jbe
add
adc
dec
adc
sbb
cli
hlt
mov
push
adc
xchg
pop
stos
push
test
jge
ja
stc
mov
jp
jbe
pop
les
das
pop
cli
stos
mov
les
test
pop
inc
jae
iret
lahf
dec
popa
lods
sbb
stos
pop
mov
les
xchg
sub
cli
lock
out
push
jge
out
cwtl
adc
adc
push
sahf
mov
cli
mov
adc
inc
add
out
popa
mov
sti
cmc
jmp
push
adc
rclb
ficomps
add
mov
fs
shrl
add
test
push
push
mov
or
daa
xor
jg
fwait
cmp
add
jo
adc
xchg
and
push
inc
nop
jo
adc
loop
test
ret
xchg
ss
stos
or
mov
xchg
std
cmp
jns
xor
jb
dec
insb
cld
int3
and
and
movsb
inc
dec
test
mov
adc
adc
or
xchg
inc
xchg
stos
push
cmp
mov
sbb
jecxz
inc
or
jae
adc
cmp
mov
cmp
in
or
cmpsb
mov
push
push
movsb
inc
mov
aam
push
fs
sbb
aam
jne
or
push
jmp
scas
add
movsb
enter
adc
call
sub
pop
adc
pop
lret
fcomps
es
mov
mov
gs
inc
bound
ljmp
xchg
pop
push
daa
mov
lock
inc
and
mov
adc
out
or
call
ret
inc
sbb
dec
sahf
sub
fcmovu
xor
popf
bound
adc
stos
int
sbb
aad
popa
jecxz
jmp
jns
out
dec
movaps
leave
pop
adc
icebp
push
push
scas
enter
jp
in
cmc
or
pop
nop
pop
mov
cmp
andb
fldl
call
cmc
mov
cmp
insb
out
add
pop
lods
dec
xchg
fistps
mov
in
inc
lods
cmp
je
and
adc
sub
adc
pop
ja
lret
test
out
cmp
push
pop
adc
test
mov
stc
lods
fwait
insb
stos
pop
pop
cmp
cli
ret
mov
fdivl
push
int
or
in
jae
out
adc
ret
xorb
sbb
sbb
stos
dec
int3
lret
rcl
mov
jb
adc
push
xchg
jge
pusha
rorl
or
and
adc
push
and
pop
aas
jnp
sub
jae
push
pop
ss
jns
cmc
aaa
popa
ds
aad
and
pop
adc
icebp
sbb
mov
or
and
ss
daa
in
lds
nop
popf
mov
cmp
test
icebp
push
adc
nopl
inc
mov
addr16
into
ljmp
xchg
sub
cmp
int
int
mov
pop
je
adc
cmp
fs
mov
loope
and
stos
push
lods
shrb
cmpsl
pusha
pop
clc
imul
jae
movsl
fbstp
cs
inc
je
adc
adc
inc
mov
lahf
push
arpl
push
adc
outsb
xor
scas
push
test
cmp
iret
mov
dec
pop
or
push
arpl
cli
leave
addb
rol
sbb
or
in
mov
push
dec
pop
negb
sub
imul
and
and
mov
xor
mov
pop
jmp
repnz
mov
dec
ja
jb
les
push
and
lahf
mov
cmpsl
adc
inc
clc
out
lahf
ljmp
pop
pop
lods
cltd
mov
sub
mov
mov
add
xorb
sbb
leave
mov
sbbb
pop
mov
lea
push
add
arpl
inc
xor
pop
in
mov
xor
call
adc
mov
mov
push
lea
push
adc
push
lret
push
adc
xchg
jae
push
add
movsl
dec
pushf
mov
sub
gs
lret
mov
lahf
pop
mov
pop
cmc
sub
aam
pop
into
pop
dec
inc
mov
mov
push
jg
scas
mov
std
loope
or
push
adc
sbb
imul
dec
test
pop
mov
xor
sbb
pop
dec
sbb
adc
shlb
cmpsl
and
pop
je
test
sbb
nop
mov
addl
in
mov
lahf
jl
adc
insl
mov
incl
inc
mov
mov
imul
cmc
frstor
or
mov
inc
push
add
call
or
push
mov
mov
sbb
adc
xchg
stos
pop
movsb
fwait
push
stos
pop
mov
fs
pushf
in
gs
divl
adc
pop
test
pop
outsb
fisttps
outsl
pop
mov
popf
or
mov
mov
adc
pop
cmp
push
aam
loop
aaa
pop
movsb
pop
in
mov
fadds
adc
lret
inc
push
or
aad
mov
outsl
pop
xchg
sahf
movsl
cld
mov
sbbl
mov
dec
push
add
and
push
stc
cld
xchg
rclb
inc
lcall
ja
mov
add
fsubs
movsl
mov
jae
addl
iret
mov
cmc
xchg
mov
or
mov
mov
in
inc
inc
test
call
add
sbb
test
or
sub
mov
xchg
or
test
cs
shll
jbe
or
in
xchg
push
cmp
mov
fstl
aad
es
sbb
iret
jl
pop
insb
cmp
lea
xchg
fldl2t
inc
mov
jmp
ljmp
jae
lret
jmp
xlat
mov
or
cmp
push
dec
inc
lret
xchg
dec
xchg
scas
faddl
adc
loop
or
ljmp
dec
ror
aam
fimuls
or
in
jecxz
mov
or
jnp
gs
clc
mov
std
dec
mov
push
paddusw
pop
pushf
xor
dec
xor
dec
pop
rorl
jge
in
out
xor
push
shrb
lock
xchg
mov
xor
sar
jge
imul
lret
das
xchg
and
mov
cmp
loop
add
inc
outsb
jns
in
xlat
dec
out
lret
inc
push
push
stos
push
inc
adc
xchg
mov
iret
lret
stos
movsl
mov
rorl
mov
mov
rorl
sahf
cmp
mov
sbb
lahf
mov
shrl
add
adc
push
sub
sub
jnp
inc
shlb
xchg
in
push
pop
xor
fiadds
arpl
stos
cmpsl
jp
test
imul
xchg
lds
jns
xchg
mov
inc
jp
xchg
push
fbld
nop
mov
pop
pusha
orl
mov
cli
ss
lret
out
mov
cmp
nop
icebp
push
adc
stos
mov
xor
hlt
mov
arpl
ret
cmpb
movsl
mov
clc
push
mov
and
lods
mov
xorl
cli
sub
sbb
ljmp
lcall
loop
int
jmp
jmp
jno
test
or
scas
sahf
in
xchg
pop
cmpsb
push
ret
push
cmpsb
cmpsb
ficoml
neg
jae
mov
jbe
in
jmp
xor
mov
fdivs
in
fbstp
loope
int
cmp
nop
pop
ljmp
push
psubusw
pop
pop
jno
enter
repnz
shll
inc
xor
out
pop
mov
or
fnstcw
icebp
mov
add
dec
cmp
lock
push
jecxz
mov
mov
ljmp
cmp
cmpsl
into
int
xor
sbb
jbe
push
cli
roll
xor
or
dec
dec
sbb
mov
setnp
xor
sahf
roll
in
xchg
sub
orl
jne
pop
jno
cmp
stos
mov
xchg
add
int
sub
stc
jnp
push
xor
lret
in
mov
dec
lds
push
mov
jne
fstp
ds
sub
addr16
fsubs
loopne
arpl
nop
push
push
adc
sub
adc
es
idivb
mov
cli
data16
push
aam
jmp
das
scas
sbb
lock
xchg
int
jbe
adc
je
je
adc
adc
push
jp
mov
mov
cmpsb
loope
and
inc
inc
adc
cmpsb
mov
out
pop
loopne
xor
adc
add
fcos
call
push
xor
push
dec
add
insb
out
cmp
sbb
dec
dec
aaa
movsb
fisubl
adc
test
mov
dec
jns
push
aam
decb
adc
addl
jne
cmp
xchg
stc
mov
push
xor
pop
and
test
or
icebp
inc
jb
sub
push
outsl
add
pop
adc
cwtl
dec
jo
or
mov
fs
fadds
adc
mov
adc
js
lcall
test
or
imulb
sub
xor
mov
stc
cmpsl
pop
outsb
push
sbb
mov
mov
mov
cmp
test
dec
popf
ljmp
and
and
repnz
jp
jecxz
stos
xchg
adc
popf
mov
arpl
xchg
xor
xor
jge
pop
jecxz
mov
fisubrs
xlat
xor
out
mov
outsb
xchg
or
pop
in
inc
add
repz
jmp
cmp
mov
add
jg
sbbb
inc
jle
filds
and
rolb
addr16
and
or
add
pop
mov
test
mov
cmp
and
ss
pop
ss
hlt
imul
test
stos
add
clc
lea
pop
mov
mov
mov
adc
lods
mov
push
adc
fldlg2
fcomi
jl
mov
jnp
mov
dec
out
lahf
insl
sub
adc
push
sub
out
and
das
jmp
test
imul
sbb
jo
adc
in
adc
push
adc
adc
add
or
insl
sub
sbb
adc
sub
add
jo
shrl
fcomps
pusha
dec
push
jp
pop
jmp
push
pop
pop
push
and
push
adc
outsb
push
and
adc
pop
adc
mov
fildll
or
push
stos
push
outsl
push
es
jmp
test
sub
push
adc
mov
jo
adc
lret
sbb
xor
push
inc
push
dec
sahf
mov
mov
push
adc
inc
lea
mov
and
inc
sbb
adc
dec
cmc
cmp
cmp
cmp
sbb
popa
add
sub
test
jne
leave
pop
adc
adc
rcr
sub
sbb
ljmp
push
adc
sub
and
mov
and
fimuls
jno
adc
push
pop
mov
lods
push
sub
das
movsb
lds
adc
in
cmp
loopne
or
enter
adc
mov
adc
pop
push
lock
and
inc
sarb
push
adc
cmpsb
add
mov
fs
adc
pop
scas
cmp
pop
push
xchg
adc
jp
or
lods
sub
adc
outsl
sub
repz
inc
repnz
adc
add
mov
and
add
adc
pop
adc
jmp
dec
sbb
jae
repz
cmp
or
fsubr
sbb
dec
sbb
imul
mov
mov
loopne
pop
insl
mov
pop
sub
clc
loopne
dec
push
divb
leave
push
and
adcl
or
push
adc
or
sub
imul
sbb
jg
daa
pop
xchg
push
inc
hlt
jge
adc
pop
xchg
popa
mov
cmpb
push
jnp
pop
inc
ret
and
xor
xchg
movsl
push
pop
ficompl
loope
popa
push
xor
sub
pop
or
popa
fbld
mov
ds
adc
pop
fisubl
into
pop
jg
and
pop
adc
xor
adc
lret
lds
in
jge
sbb
sbb
cmp
cld
into
jbe
clc
cmp
insl
int
lret
mov
lahf
bound
cmp
addr16
jl
or
dec
jbe
imul
sbb
cmp
xchg
dec
movsb
ret
push
adc
loope
scas
ficompl
push
adc
push
adc
push
push
xor
pop
add
add
sub
sub
pop
xor
inc
pop
test
push
je
dec
ljmp
pop
fs
adc
js
pop
adc
push
cmp
jns
jle
push
lret
pop
or
xorb
dec
cmp
out
sub
or
fisttpl
mov
outsl
pop
lods
mov
xorb
pop
inc
jbe
jmp
mov
cli
hlt
adc
subb
aam
or
push
or
faddl
adc
test
sbb
les
adc
adc
pop
adc
mov
pop
mov
mov
mov
inc
jno
adc
mov
in
or
mov
leave
ret
jno
adc
xchg
les
mov
fcoms
xor
push
fcoms
enter
mov
mov
repz
int
test
rclb
sub
mov
jo
loopne
shll
push
xor
jb
dec
inc
or
mov
push
and
test
test
cwtl
mov
repnz
add
inc
and
gs
add
push
and
test
xchg
mull
aas
mov
imul
adc
xchg
clc
push
push
mov
pop
sbbb
ss
int
mov
xchg
std
jg
lods
push
and
movsl
mov
lock
gs
sub
pop
lds
mov
cli
fbld
inc
mov
ret
adc
ja
mov
lds
mov
mov
scas
fsubr
inc
mov
stos
push
in
and
iret
out
imul
mov
add
cmpsb
fsubrs
mov
fnstsw
bound
ret
mov
fdivr
daa
in
fsubrs
cmp
movsl
mov
xor
cmp
jne
ret
sub
lahf
dec
mov
push
jge
add
rclb
adc
lret
repnz
and
je
mov
push
in
adc
add
jbe
fdivl
mov
pop
mov
in
dec
outsb
push
in
pop
sub
rclb
sbb
jmp
jno
lock
sahf
in
out
test
hlt
ds
adc
mov
add
and
pop
adc
insb
sahf
aas
in
push
int
adc
push
push
rcr
push
bound
xchg
sub
xor
pop
js
jmp
movsb
lcall
outsb
loop
in
and
mov
setnp
cld
mov
imul
add
shrb
aas
pop
mov
inc
or
pop
bound
adc
stos
adc
inc
mov
test
pop
push
lret
mov
mov
clc
aas
adc
push
mov
in
cmp
push
mov
mov
jmp
sti
pop
push
ret
pop
jg
mov
mov
dec
mov
inc
rolb
or
push
pop
push
adc
xchg
xchg
in
cmp
xchg
scas
sub
push
pop
mov
push
mov
mov
loopne
mov
sbb
xchg
in
ror
frstor
inc
mov
stos
inc
sbb
in
dec
pop
jg
push
jns
rclb
add
arpl
inc
mov
sbb
enter
repnz
repz
sbb
cmc
int
pusha
pushf
pusha
test
dec
sbb
jg
into
test
xor
test
jae
sub
or
mov
movsl
mov
bound
and
inc
fmulp
jge
mov
sahf
push
and
icebp
xor
jno
in
insl
loope
int
pop
fcmovb
adc
sub
xor
repz
xor
mov
inc
lods
push
stos
cmp
pop
adc
aas
pushf
cmp
pushf
cmp
call
push
mov
iret
into
adc
test
add
pop
lods
pop
ret
xchg
adc
mov
mov
shr
jecxz
stos
push
stos
push
and
dec
cmpsl
call
and
and
aas
push
adc
les
sbb
cmc
and
pop
adc
push
mov
or
inc
fcmove
sub
jno
shlb
fldl
adc
out
inc
jbe
mov
outsb
idivb
and
hlt
add
mov
sbb
daa
sarl
mov
ja
cltd
inc
jb
dec
mov
addb
jb
lds
fidivrs
std
push
test
adc
testb
or
jo
xlat
inc
ret
push
add
dec
adc
jg
sbb
ja
out
pop
or
dec
lds
cmp
lods
push
stos
push
add
add
pop
aas
adc
out
and
mov
shll
data16
daa
fcoms
push
lods
popa
or
xchg
cmpsl
jl
inc
sbb
loop
pop
cs
lret
xor
lret
xchg
sub
int3
incl
fcomp
cmpsl
lods
hlt
inc
or
ret
or
adc
movsl
mov
gs
jnp
dec
nop
jno
sub
shll
push
movsl
repnz
adc
pop
lahf
adc
adc
sub
jl,pn
push
adc
in
insb
adc
dec
pop
rolb
lahf
adc
adc
enter
cwtl
ss
into
cmp
jle
sbb
jbe
mov
movsb
push
adc
xchg
push
stos
sub
xchg
push
dec
mov
inc
repnz
adc
fwait
dec
fadd
and
or
hlt
and
fistps
pop
adc
inc
sbb
mov
push
adc
std
push
stc
fucomp
or
sbb
inc
dec
test
cltd
jno
push
sbb
xor
ljmp
jbe
xor
mov
popa
inc
repnz
adc
fisttpll
pop
int
cmovne
js
inc
dec
or
cmp
sbb
adc
or
sbb
cmpsb
fimull
adc
mov
sbb
mov
out
push
xor
jo
adc
xchg
sbb
les
adc
loop
and
push
cltd
cmp
xor
mov
daa
mov
pop
dec
aas
push
adc
shlb
insl
rorb
leave
pop
adc
cld
pop
mov
mov
add
jle
shrd
or
jo
adc
xlat
cmpsb
test
dec
mov
sub
test
adc
les
adc
mov
adc
jno
adc
adc
insl
shr
lcall
xchg
cmp
add
adc
les
popf
xorb
mov
insl
dec
pushf
xor
daa
fmuls
sbb
adc
mov
inc
jno
adc
jl
cltd
dec
cltd
dec
adc
jl
jno
adc
add
adc
push
hlt
mov
dec
dec
sbb
adc
mov
cmp
int3
loopne
jle
repnz
xor
bound
xorb
adc
enter
pop
aaa
mov
sbb
lds
movsl
xchg
inc
cmp
cmp
push
dec
outsl
mov
cmc
pop
adc
cli
fdivs
adc
push
xor
cmc
mov
je
adc
fs
add
cmp
push
mov
nop
dec
xchg
jecxz
and
xorb
adc
jmp
push
fnsave
inc
xchg
mov
jne
sbb
adc
adc
cmpl
cmp
lock
jmp
jge,pt
in
sar
icebp
sbb
dec
and
adcl
sarb
leave
mov
jmp
jp
cli
hlt
fwait
aad
add
mov
daa
sbb
outsb
sub
shlb
adc
nop
jb
adc
jl
divb
cmp
or
sub
sbb
adc
inc
add
jo
adc
sub
int
mov
jno
adc
stos
clc
test
xor
xor
nop
push
xchg
adc
pop
ret
push
sub
mov
and
in
pusha
call
jne,pn
mov
push
inc
cld
jo
adc
lahf
cltd
cmp
jno
adc
mov
addb
mov
mov
add
mov
leave
aam
push
adc
pusha
and
adc
inc
push
push
test
pop
adc
daa
movsb
addb
lea
cmp
inc
stos
push
stos
fldcw
pop
mov
insl
dec
sub
and
dec
nop
jo
adc
ret
pop
in
xchg
test
enter
lods
pop
cltd
sbb
add
mov
xor
addb
pop
lods
clc
mov
sub
push
push
shll
pop
mov
cmp
jp
or
mov
lahf
pusha
call
cs
cmp
adc
push
adc
das
test
pop
sbb
aad
js
fdivrl
mov
push
adc
in
xchg
cmp
test
stos
push
and
xlat
xorb
ljmp
push
push
jae
and
push
adc
pop
movsl
std
fiadds
jle
jb
cmp
pop
and
dec
or
in
pop
cmpsl
rolb
push
lods
push
lcall
pop
pop
jbe
lret
repz
lock
push
imul
cmc
pop
adc
adc
mov
adc
xchg
loopne
xchg
ss
out
jno
es
ret
enter
and
pusha
mov
push
adc
stos
sub
mov
mov
sbb
idivb
mov
push
popf
adc
inc
xchg
push
push
aaa
lret
dec
sti
fwait
push
jl
int
mov
lahf
pop
mov
add
add
jae
jle
pop
or
inc
dec
in
nop
loop
mov
cwtd
push
call
nop
lret
xchg
push
imul
shlb
adc
push
stos
sub
adc
addl
inc
mov
push
lret
push
jnp
and
movsb
int3
psrlw
xchg
sub
pop
adc
fdivs
adc
or
lock
adc
cli
out
inc
adc
jmp
xor
pushf
push
adc
push
push
test
pop
sbb
addr16
add
jo
push
adc
sbb
push
sti
sti
dec
jp
dec
mov
out
mov
sub
fldl
mov
inc
movsb
push
adc
adc
std
outsl
xor
xchg
idivb
adc
ds
sbb
sbb
out
mov
mov
test
mov
fistpll
lret
add
inc
mov
dec
xchg
js
jo
adc
ds
mov
or
nop
daa
pop
push
pop
adc
mov
je
sub
int3
pop
pop
push
or
mov
xchg
int3
je
adc
inc
movsb
jae
movsb
out
xchg
or
mov
mov
jmp
and
sti
loop
mov
adc
pop
sub
out
cmp
call
int3
sarl
pop
jne
push
sbb
rol
pop
sbbl
jg
out
mov
mov
add
mov
sbb
push
icebp
mov
mov
xchg
aas
jnp
in
stos
mov
popa
hlt
lret
frstor
adc
sub
ja
xchg
in
mov
into
or
pushf
pop
jg
adc
push
loope
sahf
cmp
cmpsl
ret
sub
jo
ja,pn
pusha
push
fdivl
adc
fstp
jo
dec
repnz
adc
jo
pop
iret
ds
mov
inc
dec
cli
sub
fmuls
or
sub
sub
jne
lock
out
clc
lahf
ljmp
rolb
sbb
fucomip
push
sahf
pop
lcall
js
shr
cmp
les
jmp
fisttpll
push
xor
fisttps
sub
jmp
out
movsb
or
adc
idiv
je
loopne
xor
and
nop
pop
fsubp
push
nop
or
out
test
clc
xor
aas
cmp
bound
fs
and
inc
jne
repnz
push
mov
out
hlt
fdivl
or
jg
cmp
loope
scas
and
jno
jbe
jle
aam
cmp
inc
fidivrs
divb
jg
push
inc
outsl
pop
jmp
inc
pop
and
mov
jle
aaa
mov
jne
jae
in
pop
lock
push
add
loope
sub
xchg
dec
xchg
mov
push
shl
lahf
mov
push
push
inc
lea
mov
fucomip
pop
es
cmp
out
popf
mov
or
adc
dec
cs
int3
lret
adc
stos
and
fisubs
dec
jo
movsb
cmp
aad
jmp
push
xchg
inc
cli
push
mov
test
fimull
jg
sub
mov
xchg
mov
into
js
in
vmwrite
ja
shlb
sbb
add
aas
iret
sti
xchg
notl
rcr
std
mov
and
pop
xlat
mov
pop
jle
mov
sub
fdivrp
or
loop
xor
gs
lds
mov
lret
pop
pop
in
mov
xchg
clc
adc
mov
pop
shlb
lods
dec
add
mov
jmp
mov
popf
xchg
pop
jno
jns
cmc
test
fcom
mov
ljmp
int
lcall
gs
push
cmp
mov
in
pop
aam
mov
xor
xor
adcb
jb
mov
add
mov
jne
mov
cmp
int
adc
hlt
jno
push
pop
cmp
push
outsl
mov
movsl
dec
mov
gs
or
cmp
repz
xchg
vcvttpd2dq
outsl
jb
sub
push
lret
sti
mov
dec
fdivp
and
sar
cmp
leave
pop
adc
mov
xorb
fmull
test
pusha
or
and
lds
push
daa
sub
mov
cmp
shrb
lods
lods
xor
in
add
lock
pop
pop
adc
test
adc
mov
in
out
sbb
je
daa
adc
cmp
bound
leave
jmp
daa
fadds
inc
or
mov
mov
push
cld
rorl
xchg
inc
xor
sbb
cs
sub
ret
inc
inc
adc
cmc
or
sub
icebp
jp
adc
je
sub
in
mov
mov
inc
inc
nop
jo
adc
push
inc
loope
jle
adc
mov
ret
jno
lret
lret
popa
test
pop
sub
pop
popa
out
inc
mov
mov
iret
push
push
lods
sahf
jmp
clc
shll
mov
pushf
push
adc
dec
out
aas
jnp
sub
cmp
call
cli
mov
push
adc
dec
stos
push
cmpsl
inc
sbb
jnp
out
out
dec
lock
imul
push
sub
or
cld
jno
adc
aam
or
imul
adc
xorb
adc
pop
xlat
dec
fucom
out
mov
jo
adc
xor
pop
adc
inc
addr16
jo,pn
jb
les
adc
stos
mov
sahf
cmp
rcl
push
or
push
cld
jno
adc
repz
les
adc
dec
dec
jno
adc
mov
test
sbb
cltd
leave
push
insl
call
dec
lret
push
add
call
cmc
adc
cld
jno
adc
leave
inc
fisttpl
repnz
push
daa
sbb
add
mov
ret
adc
out
sbb
adc
adc
aad
loopne
push
test
cmp
and
sub
cs
lea
xor
cmp
cmp
test
xor
adc
dec
push
mov
andb
cld
fistps
icebp
dec
sbb
push
repz
xchg
adc
add
pop
push
pop
cmp
jnp
xchg
pushf
fiaddl
cmp
and
jnp
jns
roll
mov
fsubr
pop
clc
fldcw
sahf
movb
out
adc
sbb
jle
jae
mov
adc
arpl
jle
lods
mov
in
jmp
xchg
pop
sbb
sub
add
mov
pop
dec
inc
pusha
movb
jecxz
int3
mov
jae
call
sbb
cmpsl
sub
sub
stos
int3
nop
mov
mul
pop
mov
fstps
aas
mov
cld
sub
mov
aam
pop
dec
sbb
cmp
shlb
pop
test
hlt
fisubrl
inc
or
push
outsl
mov
add
mov
fisubrl
push
adc
jb
cmc
or
inc
and
pop
adc
clc
adc
ret
rolb
or
pop
adc
insb
ret
fmul
mov
adc
vsubpd
lds
sub
sahf
mov
ds
movsl
push
adc
fldcw
insl
stc
daa
inc
mov
cltd
sbb
test
aam
sub
out
inc
push
sahf
lcall
jmp
adc
cmpsl
test
shr
imul
dec
int3
imulb
add
fstpl
xchg
out
cmp
stc
std
shl
out
mov
add
popf
test
cmc
insl
dec
cmp
rcll
push
adc
adc
stos
push
sub
xchg
xor
popf
push
sub
movsl
push
adc
pop
xor
xchg
mov
daa
fld
sub
test
push
mov
ret
mov
daa
data16
movsl
push
adc
in
sub
mov
sub
xchg
js
cmc
mov
loopne
lea
pop
xor
repnz
out
mov
push
cltd
jmp
push
test
sti
fwait
xorl
xor
sub
test
lods
adc
jbe
mov
xchg
xor
in
push
das
das
cmp
mov
mov
xlat
std
jbe
jne
xchg
rorb
je
mov
shlb
pushf
dec
dec
mov
adc
adc
or
inc
add
xchg
dec
sbb
adc
fisubrl
xchg
pop
pop
and
scas
aad
js
sarl
cmpsb
out
psllw
or
rcl
dec
push
lahf
stc
xchg
sub
das
pop
push
lods
pop
ret
orb
mov
sbb
push
adc
jg
adc
pop
jge
outsl
mov
shll
shlb
inc
into
ret
xchg
sub
and
push
insb
adc
fstl
pop
jne
dec
and
sbb
movsb
std
or
jg
cmp
jp
push
stos
and
mov
movsb
test
jmp
mov
leave
outsb
divb
adc
pop
jge
xchg
lds
inc
lahf
and
bound
add
xchg
mov
pop
mov
lods
pop
sbb
adc
jmp
out
pusha
outsb
subb
jb
inc
add
xchg
push
stos
push
add
sbb
adc
mov
ss
mov
andb
mov
pop
inc
pop
xchg
insl
popa
jge
sbb
xchg
dec
gs
mov
aad
fsubrl
mov
lods
pop
or
orb
push
cmp
sbb
pusha
outsb
sub
jae
adc
or
leave
xchg
sub
lods
pop
mov
cmp
jb
and
insb
iret
shrl
movsl
fxch
je
push
adc
ds
mov
xor
ret
rorl
ret
test
ret
push
test
push
adc
jae
inc
mov
inc
sub
addl
lea
arpl
dec
mov
iret
sbb
das
es
lea
push
addl
sub
jae
test
and
dec
stos
pop
mov
sub
jb
adc
mov
ret
jg
idivb
popf
and
sti
test
pop
jo
adc
xlat
cmp
jecxz
fwait
insb
xchg
or
push
adc
or
lret
fsubrl
movsb
pop
movsb
push
pop
sbb
loope
adc
or
adc
lods
int3
mov
rol
popf
and
mov
ja
add
push
jo
aam
in
rorl
fiaddl
mov
inc
loop
and
lcall
mov
movsl
push
adc
mov
loopne
and
push
stc
es
push
bound
xorb
push
adc
inc
add
inc
shlb
imul
jecxz
xchg
and
sbb
push
mov
and
jg
hlt
popf
fbstp
jmp
js
adc
pop
jp
imul
sahf
lcall
dec
insl
outsl
scas
adcl
les
rcrl
movsb
lahf
xchg
ds
adc
sbb
add
jo
push
insl
insl
in
inc
movsl
sbb
jns
cwtl
mov
xchg
popa
std
scas
push
mov
dec
and
pop
cmp
int3
dec
cmp
sbbb
adc
push
int
mov
or
pop
xor
push
jo
hlt
ja
pop
out
xor
int3
popf
mov
dec
cmp
push
andl
pop
imul
sub
sbbb
add
fisubs
ja
mov
sahf
fs
add
add
ds
cld
test
out
aam
jg
mov
push
icebp
das
cwtl
mov
popf
arpl
and
jae
adc
sti
dec
aad
mov
pop
std
mov
int3
sub
int
movsl
push
adc
fsubs
scas
ret
push
push
sbb
data16
xchg
adc
icebp
insb
fwait
lcall
mov
subl
les
push
adc
inc
add
stc
xor
sahf
outsl
enter
test
xchg
pop
dec
into
add
lea
cmc
inc
fistpll
repnz
lcall
push
push
shrl
mov
sbb
ss
shl
sub
cs
dec
cmp
jae
sub
inc
push
stos
push
push
pop
push
cmp
sbb
pusha
mov
stos
or
out
xchg
pop
mov
fsubs
push
mov
out
inc
sbb
addl
pop
ffree
lock
push
adc
imul
sbb
mov
or
xor
push
inc
and
inc
push
ficoms
ret
dec
jl
mov
fists
and
pop
out
roll
sub
xchg
mov
sub
cli
stos
sbb
pop
mov
aad
outsl
in
fdivrl
mov
cmpsl
in
push
adc
cmp
bnd
mov
push
add
jb
fsubl
aam
push
adc
int3
movsb
push
adc
in
movsb
push
adc
ret
push
adc
push
aad
inc
adc
shl
jge
adc
sub
cs
push
adc
mov
int
push
mov
push
push
xor
push
sahf
loop
out
fucom
addb
dec
test
mov
daa
loop
out
pop
jge
push
adc
xor
xor
mov
adc
fwait
inc
cltd
sbb
push
adc
push
mov
xor
loopne
movhps
xlat
push
push
lahf
rcll
push
lods
pop
fs
in
cmpl
int3
je
xchg
movsb
push
adc
stos
out
mov
pop
ficoms
mov
push
aad
js
sbb
cmp
dec
jge
loop
pop
ficoms
js
push
adc
push
pushf
in
cmc
mov
jbe
jmp
cmc
push
scas
das
jo
push
adc
mov
sub
adc
cmp
fcompl
cmp
pop
movsb
push
adc
cwtl
inc
jl
mov
push
jb
adc
jae
jns
pop
sbb
int3
pop
fs
fsub
fdiv
or
add
jae
and
cmp
arpl
dec
sbb
push
adc
adc
adc
jne
xchg
setl
pushf
jl
rclb
mov
stos
jne
test
sbb
or
jecxz
mov
pop
xlat
into
ja
mov
pop
ficompl
push
adc
sub
sbbb
push
jle
leave
pop
adc
scas
add
push
cmp
xor
push
arpl
imul
xchg
adc
int3
mov
or
inc
scas
xchg
cli
pop
adc
pop
mov
push
stos
pop
mov
mov
cmp
js
pop
sub
bound
sub
and
pop
mov
mov
pop
lock
push
adc
dec
adcl
movsl
cmp
or
adc
adc
xchg
mov
popf
push
adc
pop
xchg
mov
out
adc
lds
push
adc
lea
push
adc
push
adc
push
out
sbb
push
adc
imul
inc
test
fucomi
movsl
mov
adc
and
fsubl
fstps
es
in
pop
adc
adc
popf
mov
mov
cmp
xchg
daa
nop
js
lods
loopne
mov
push
add
mov
xor
dec
cmp
enter
loop
int
sub
mov
adc
js
xor
shrb
fisubrl
jg
leave
cmp
xchg
fisubl
out
mov
jnp
push
cmp
mov
je
xchg
push
lds
dec
cmc
mov
adc
adc
or
pop
mov
sub
or
movb
xchg
jg
inc
add
jmp
lret
dec
pop
mov
aam
xor
rol
sub
sub
add
daa
int3
sahf
push
adc
imul
add
or
cs
jo
adc
adc
mov
ret
push
fs
jo
dec
pop
addr16
ljmp
jo
adc
add
cmpsb
sbb
int3
sahf
push
adc
or
adc
pusha
shrl
mov
es
stos
cli
pop
cli
cmp
sahf
push
adc
and
int
add
mov
adc
xchg
fistps
sbb
fdivs
pop
cmp
shrl
sahf
push
adc
fbld
stos
push
fnsave
push
mov
ret
arpl
lea
xor
outsb
xchg
inc
xchg
ljmp
shlb
push
stos
cli
fldcw
pop
mov
insl
sub
xor
mov
sbb
and
push
adc
imul
test
adc
mov
pop
aam
pop
add
sahf
push
adc
adc
lahf
lock
push
adc
sahf
push
adc
push
idivb
lret
std
fsubrs
mov
into
aad
xchg
in
fdivrl
mov
inc
sbb
pop
es
jae
lret
stc
cmp
pop
cli
cs
test
addr16
add
and
push
adc
cld
sahf
push
adc
push
lods
pop
sbb
aad
mov
mov
add
adc
dec
bound
aam
cmp
pop
cli
cs
test
adc
sub
cmp
shl
sub
push
adc
cltd
in
fisubl
push
stos
push
adcl
mov
adc
push
adc
push
xor
addl
das
pop
jmp
in
xchg
add
cmpsb
push
scas
pop
pop
adc
push
adc
pop
or
sbb
pushf
xlat
pop
shrl
pop
mov
jnp
test
test
adc
lret
daa
inc
mov
adc
push
adc
in
lock
adc
scas
bound
cmp
push
mov
out
cmp
or
push
dec
jae
lret
popa
out
ret
cmp
jecxz
rclb
jp
imul
adc
adc
loop
adc
mov
mulb
inc
loop
aas
mov
pop
loop
and
adc
shlb
and
mov
dec
push
gs
pop
std
and
push
adc
fidivrs
in
dec
mov
fidivs
out
das
je
cwtl
add
int3
mov
enter
adc
add
sub
ret
push
adc
or
fs
lea
aaa
enter
movups
hlt
test
push
insl
or
daa
cld
shrb
or
sarl
cwtl
sarl
std
and
sub
sbb
pop
sahf
push
adc
push
adc
into
mov
mov
dec
sbb
hlt
push
sub
sbb
mov
cmc
outsl
in
push
adc
das
ret
inc
fdiv
lods
cmp
sahf
and
sub
adc
push
adc
enter
sub
gs
push
xchg
sbb
aam
fnstcw
push
sbb
stc
mov
adc
xchg
lea
mov
mov
fs
jo
push
adc
aaa
sbb
das
mov
imul
scas
repnz
xchg
ret
pusha
pushf
mov
sub
lcall
lock
int3
mov
loopne
pop
stos
enter
cmp
outsl
xchg
pop
pop
pop
dec
cmp
lods
cmp
test
sub
lods
mov
lock
mov
cmp
iret
mov
test
arpl
fcoms
jo
adc
in
jle
daa
iret
jbe
cmc
pop
adc
push
in
lock
xor
adc
stos
sub
mov
jne
divb
cmc
pop
adc
add
sub
push
stos
push
add
fadd
dec
sahf
mov
cmp
loop
popa
roll
mov
sbb
stos
push
stos
roll
or
out
fwait
xlat
mov
sbb
cs
push
fcomi
push
push
xlat
stos
add
roll
pop
mov
insl
xchg
repnz
mov
mov
subl
xchg
test
push
cld
stos
sbb
push
mov
mov
jnp
and
repnz
push
adc
aaa
popf
int3
cs
dec
jmp
rolb
push
lods
mull
imul
call
cli
cmpsl
mov
mov
xchg
sub
push
stc
pop
cli
add
mov
test
fistl
pusha
shrl
push
adc
xchg
stos
fdivl
enter
movb
mov
adc
xlat
adc
pusha
mov
bound
pop
sub
jno
movsb
std
sub
aaa
cld
pop
lods
pop
movb
mov
adc
insb
roll
mov
pop
das
lds
push
add
lret
test
mov
xor
shrb
cs
repz
pop
rcrl
lods
mov
jo
adc
add
mov
lahf
adc
cmp
mov
in
out
or
push
out
mov
sub
adc
dec
and
addb
jb
mov
es
stos
fcomp
and
addr16
sti
nop
jo
adc
jo
adc
jmp
push
stc
add
push
mov
fs
and
sbb
pop
mov
cmp
mov
sub
mov
and
addr16
pop
sbbb
cwtl
cmp
idivb
sbb
xchg
rclb
fwait
cmp
sbb
mov
push
push
es
mov
insl
pop
scas
push
pop
mov
mov
fistpl
push
js
push
mov
pusha
stos
popf
and
sbb
sub
push
adc
jns
nop
or
jo
adc
push
adc
ss
cmc
fidivrl
mov
adc
fs
pop
orl
jo
inc
loope
test
lods
cmp
das
ljmp
inc
and
cld
mov
js
mov
jp
mov
imul
and
jnp
clc
testl
adc
cld
sub
mov
push
and
xchg
push
xor
out
ds
je
fnstcw
pop
jle
jo
fisubs
adc
flds
icebp
pop
lret
mov
jmp
aam
push
cli
jno
aaa
mov
and
das
push
dec
jg
add
adc
test
fnsave
imul
cmp
mov
cmp
jp
xchg
clc
popl
pop
in
fiadds
adc
pop
lahf
sahf
hlt
mov
jl
add
subb
pop
jge
les
push
sti
cmpsb
lret
mov
decb
xor
adc
xor
fnstenv
jo
in
cmc
mov
sub
int3
stos
cmp
loope
jle
loop
js
or
cmp
sub
mov
pop
sub
xor
sbb
lods
hlt
xchg
xchg
push
and
mov
mov
imul
out
pop
mov
pusha
nop
push
incb
mov
fisubrs
ja
fadds
loope
mov
dec
sbb
cmp
jne
push
cwtl
mov
xchg
xchg
shr
inc
xchg
push
xchg
sar
or
sahf
and
cmpsb
jbe
xor
dec
dec
adc
les
je
sub
orb
mov
or
ret
jo
adc
pop
into
jmp
sub
inc
lea
lret
mov
rcrl
xchg
mov
addb
push
adc
push
inc
jbe
stos
push
add
lods
or
push
jg
and
leave
mov
jno
in
pop
stos
push
fcoml
fisubs
lods
pop
mov
dec
jg
sub
test
cld
call
mov
mov
negb
mov
mov
mov
cli
sbb
cs
mov
aad
stos
mov
ret
jnp
out
xor
pop
sbb
lods
in
add
enter
push
adc
push
stos
cli
add
rorl
jnp
push
jb
mov
pushf
enter
sbb
mov
mov
fsubrs
rolb
xchg
addr16
and
mov
shll
xchg
jl
adc
aam
pop
cmpsl
push
stos
and
pop
or
adc
mov
imul
fdivrl
rolb
mov
cmp
outsl
or
test
mov
ret
popf
jge,pt
and
pop
adc
nop
cmpsb
add
inc
sbb
jns
out
xchg
mov
jns
lahf
fdivl
or
sub
jo
adc
cli
pop
adc
push
cmpsb
dec
sahf
mov
movups
inc
and
nop
jo
adc
ret
jne
lret
and
cmpsb
stos
jle
xor
sti
loope
cmp
shrl
pop
push
push
cmp
pop
push
lods
pop
mov
mov
call
xor
sub
xor
stos
sahf
mov
dec
xlat
xchg
and
and
cli
pop
adc
pop
jno
cli
pop
adc
or
test
gs
pop
and
push
adc
or
cmp
xor
push
addr16
or
daa
and
imul
pop
jge
repnz
or
jno
aad
sbb
jp
cmpsb
add
or
mov
adc
inc
fdiv
fisttps
pop
fistl
push
adc
sub
or
fidivs
lret
xchg
ret
cmp
xchg
pop
add
sbbb
js
push
adc
rcrb
fidivrs
sub
int
out
lds
adc
inc
enter
fidivs
push
xorb
int3
mov
adc
inc
add
je
pop
adc
push
lods
push
jo
fidivl
or
orl
outsl
js
push
adc
insb
shrb
jo
adc
je
loopne
xor
cmp
repnz
cmp
sbb
add
push
ljmp
nop
out
inc
jno
adc
lock
adc
adc
aam
ss
test
lock
pop
cmpsb
push
cs
fwait
mov
jno
adc
cmpsb
mov
nop
sbb
nop
fcmovnbe
mov
mov
sbb
dec
lods
add
bound
push
adc
pop
or
cld
test
clc
jo
adc
mov
add
adc
int3
sbb
mov
adc
imul
or
rcrb
and
jecxz
ret
repz
fs
pop
les
adc
dec
in
or
fdivs
mov
or
loop
sti
inc
cmp
bsf
or
nop
stos
add
adc
daa
into
mov
or
push
push
cltd
cwtl
mov
mov
or
in
dec
mov
pop
mov
sub
loopne
stos
xchg
mov
or
rcr
sahf
sbb
inc
add
xchg
outsb
icebp
addr16
xchg
repz
popf
in
loopne
push
jecxz
es
fcoms
xor
test
gs
mov
mov
shl
mov
frstor
push
stos
push
les
cmp
and
mov
add
dec
mov
cmp
sub
jae
mov
loopne
push
pop
pusha
roll
xchg
jb
mov
and
leave
mov
jmp
cmp
mov
dec
mov
stos
push
stos
xlat
aam
cmpsl
inc
sbb
jnp
out
popl
ret
repnz
lahf
pop
sub
xchg
pop
notb
dec
and
es
test
cld
xchg
repz
test
sub
cmp
rclb
cmp
imul
lock
movsb
mov
into
je
mov
mov
mov
notl
rclb
cmp
imul
lock
movsb
mov
into
je
mov
mov
mov
notl
rclb
cmp
imul
lock
movsb
mov
into
je
mov
mov
mov
notl
rclb
cmp
imul
lock
movsb
mov
into
je
mov
mov
sar
in
fisubs
xor
lret
ficomps
loop
push
push
push
popf
ret
xor
xor
cli
jg
es
int
xchg
pop
pop
pop
cmpsb
sub
mov
mov
loop
and
jg
jbe
stos
mov
pusha
adc
mulb
xlat
pop
stos
pop
incl
lahf
and
jnp
out
test
test
int3
jmp
dec
and
loop
gs
fcmovnu
out
enter
adc
mov
xor
adc
mov
adc
ja
mov
stos
cmp
cwtl
push
cmpsb
mov
pop
xchg
inc
cli
jmp
adc
pop
setb
cmp
imul
leave
sbb
push
adc
out
and
pcmpeqw
xchg
das
and
push
adc
call
scas
push
adc
sahf
ljmp
adc
test
cmpsb
sarb
mov
adc
add
pop
or
cmp
mov
push
adc
pushf
dec
cwtl
lahf
pop
mov
cmp
hlt
jecxz
cmp
adcb
iret
mov
jo
cmp
imul
hlt
in
pop
mov
out
cmp
daa
out
cwtl
cmp
sti
and
call
add
ss
cmp
inc
test
lret
cmp
popa
mov
cmp
stos
xor
adc
and
mov
pop
sub
stos
push
adc
push
je
push
adc
daa
xor
jnp
mov
cmpsb
push
adc
imul
aaa
sub
pop
fdivl
jns
stos
push
adc
lahf
stos
cli
mov
adc
std
fstpt
cmpsb
push
adc
adc
xchg
cli
cmp
outsl
fs
fstp
mov
cmp
xchg
cmp
sbb
scas
push
adc
repz
cmpsb
push
adc
cmp
adc
jne
repz
popa
mov
cmpsl
mov
xchg
mov
fmul
aaa
scas
push
lea
mov
xor
cmp
divb
sahf
out
cmp
cmp
push
xor
loop
pop
jno
dec
add
ja
aam
fscale
xor
cltd
push
pop
mov
pop
push
cmp
ja
aas
sbb
mov
and
xchg
pop
xor
addr16
and
sbb
out
push
cmpsl
mov
int3
sub
in
xchg
cmp
lods
cld
push
dec
add
adc
inc
js
add
fdivl
mov
and
jp
ffree
addr16
mov
mov
out
nop
lds
xor
aam
stos
and
jnp
test
pop
in
clc
or
idivb
iret
enter
pop
stos
push
stos
pop
fcom
sub
js
jl
clc
xor
sbb
sub
sbb
cmp
sub
cmp
jg
mov
dec
pop
dec
lahf
jge,pt
jbe
shlb
loopne
mov
fldenv
test
sbb
ficoms
mov
xor
out
pop
and
fcmovnb
inc
repz
cmp
out
lahf
mov
add
dec
or
push
nop
push
cmpsb
daa
dec
sahf
cmp
sti
jb
mov
arpl
sub
xor
jmp
xchg
push
sarb
mov
mov
fcmove
pop
movsl
inc
popf
js
cld
or
and
pop
leave
call
push
rcrb
mov
mov
fcmove
jg
inc
popf
js
cld
sub
xchg
testl
test
ret
test
adc
adc
jne
test
xchg
add
in
stos
and
push
fldenv
xchg
dec
jnp
mov
rcll
arpl
out
movsl
rcll
js
int3
push
stos
mov
gs
cmpsl
mov
sub
test
push
adc
int3
sbb
sahf
add
sti
orl
nop
dec
fildll
fdivrs
ret
mov
adc
in
test
mov
jae
xchg
dec
fimuls
fstpt
loope
push
mov
xor
jb
stos
jmp
cmc
sbb
xchg
lods
push
lods
push
mov
std
arpl
mov
sub
movsb
sub
sti
fiaddl
dec
push
cld
int3
enter
cwtl
loopne
add
mov
ret
ret
popf
and
xor
aam
sbb
clc
xor
rcr
sub
popa
mov
mov
dec
push
faddp
jle
mov
loope
rorl
out
iret
jbe
out
add
dec
xchg
jl
fbstp
jl
cmc
insl
dec
out
addr16
and
imul
sub
adc
pop
jae
fcoms
push
inc
jno
xchg
aam
jae
dec
sbb
jp
ja
push
stos
andl
frstor
sub
mov
push
xrelease
jbe
adc
xor
xacquire
mov
jp
jp
rol
jo
cmpsb
iret
add
adc
push
mov
add
popf
dec
mulb
push
fwait
adc
dec
loop
jo
ja
movsl
ljmp
out
push
lret
mov
repz
insl
sbb
mov
and
pop
scas
hlt
cli
adc
xchg
out
jno
jnp
pushf
jmp
xor
add
xlat
xor
sub
movsb
mov
imul
les
paddd
mov
dec
lret
sbb
mov
dec
mov
js
inc
jo,pn
push
cmp
sub
mov
bound
pop
movsl
add
xor
jae
jnp
mov
in
lret
xchg
int3
jl
inc
ret
add
pop
in
stos
mov
xchg
mov
aam
jp
add
inc
shl
mov
pushf
lock
sbb
push
jnp
iret
mov
fistl
xor
mov
jne
scas
cmp
das
out
and
clc
mov
pop
or
xor
inc
push
adc
mov
les
pop
mov
mov
into
xchg
int3
mov
mov
pusha
rorl
mov
pusha
int
and
fisubs
push
in
sbb
lods
in
incb
lock
popa
adc
dec
push
inc
add
add
cmpsl
dec
sbb
mov
cltd
hlt
add
pop
pop
movsl
jg
or
push
push
push
ret
push
jmp
fdivs
jl,pt
imul
and
lods
push
test
push
mov
mov
xor
adc
aaa
fisubl
cmp
stc
push
stos
push
sub
test
int3
aas
jnp
insl
and
add
mov
arpl
out
pop
in
movsl
loop
inc
movsl
jl
push
cmp
cli
mov
mov
jle
xchg
xor
pop
in
xor
ja
mov
gs
sub
ret
jb
psraw
adcb
gs
cmp
iret
sbb
jg
stc
mov
loope
xchg
push
outsb
push
inc
inc
sub
xor
xor
xorb
push
fstpl
mov
push
and
xor
dec
adc
and
scas
jae
cld
pop
pop
idivb
or
out
add
dec
sahf
mov
addr16
fdivrl
mov
ficoms
sub
push
adc
ret
jmp
out
mov
test
inc
sub
sub
push
adc
test
push
adc
hlt
data16
sahf
aas
sbb
mov
pop
mov
inc
stos
push
cs
xor
xor
cwtl
xlat
dec
mov
mov
popf
and
pop
out
xorps
leave
fdiv
das
adc
js
mov
xor
les
or
jle
fsts
sub
out
leave
int3
xchg
je
add
retw
in
mov
cmc
and
mov
sub
loop
idivl
aam
dec
or
sub
adc
mov
push
inc
adc
aaa
push
cmpl
mov
pop
outsb
sbb
mov
inc
shll
push
out
test
sub
scas
push
outsb
scas
mov
ficomps
mov
insb
xchg
ficompl
mov
adc
fwait
es
je
push
mov
jmp
jns
or
or
pop
popa
out
sub
mov
cltd
xor
sar
or
ficomps
adc
imul
jne
jl
push
fs
fsub
insl
stos
cmpb
cmp
rcll
jmp
mov
dec
or
in
popf
lock
movsl
jp
cwtl
pusha
hlt
inc
fnstsw
faddl
lods
pushf
sbb
or
ljmp
xchg
loope
inc
movsb
lds
ss
out
xchg
aad
cmp
fidivrs
aas
jne
js
sarl
outsl
mov
push
fcmove
inc
inc
shll
movsb
cmpsb
jo
gs
mov
js
insl
lods
pop
fcomp
push
fldl
xchg
jbe
rorl
jmp
sahf
cltd
pop
sti
lods
fs
aas
jne
stos
and
cmp
cltd
or
daa
adc
sub
dec
push
cmp
sub
test
ds
xor
push
ja
imull
add
sahf
into
push
jmp
mov
or
aad
cmp
icebp
and
pushf
xchg
scas
jp
daa
mov
sahf
sbb
in
cld
mov
bound
sub
push
mov
xchg
xchg
dec
aaa
out
xchg
inc
pop
xor
int3
sbb
push
arpl
stos
lahf
outsl
mov
add
mov
pop
les
mov
dec
sahf
jns
lods
and
enter
adc
divl
es
hlt
call
pop
loopew
inc
pop
push
stos
push
shlb
jne
clc
push
in
test
ljmp
lcall
and
repnz
push
push
rclb
cmp
out
fdivrl
cmp
mov
add
daa
xor
test
or
mov
out
out
cmpsb
js
cmc
jae
shlb
loope
into
fidivrs
mov
mov
aad
sbb
dec
dec
cmp
cmpsb
pop
imul
sub
gs
sub
iret
pop
xor
jb
mov
arpl
sub
push
adc
mov
cmp
mov
aas
sbb
hlt
jmp
adc
fcoml
loope
adc
cmpsw
cltd
xor
ja
loop
adc
sbb
mov
push
cltd
pushf
loop
das
lret
mov
sahf
mov
xchg
dec
js
push
cld
push
jg
xor
cmpsb
mov
jae
sub
xor
add
push
cmp
clc
mov
mov
out
out
push
xchg
out
in
and
cmp
xor
out
dec
addl
lret
xchg
int
and
fst
jmp
in
iret
fdiv
sub
jns
out
lcall
cmpsb
add
mov
pop
in
xor
or
xchg
loope
pushf
cmp
insb
mov
xor
sub
daa
xchg
sub
mov
cltd
pushf
stc
jg
add
sbb
push
imul
push
push
outsl
mov
mov
js
stc
cmp
insl
in
repz
movsb
shlb
pop
mov
jmp
stos
mov
loop
fcoml
imul
shrl
add
xchg
jns
pop
in
pop
push
frstor
iret
mov
lcall
adc
shll
aad
int3
sbb
xor
stos
inc
push
cmp
inc
cltd
xorl
out
icebp
leave
jne
jp
iret
stos
dec
int
mov
xlat
jb
or
insb
insb
mov
fnstsw
ljmp
call
in
cli
sarl
sbb
adc
adc
cmpsb
cmp
inc
pop
cmp
cltd
push
xchg
jne
out
scas
jb
push
fistpll
push
bound
or
out
stos
inc
mov
shll
lea
ja
jmp
cmpsl
push
mov
fs
cmpsl
out
je
sub
ja
fisubrl
icebp
cltd
mov
scas
pop
scas
push
mov
scas
mov
and
add
ds
mov
inc
mov
shll
push
test
imul
gs
xor
mov
adcb
or
mov
push
movsl
dec
les
clc
jno
xorl
sbb
sahf
iret
out
pop
clc
mov
jbe
lret
outsb
xchg
loop
mov
into
or
mov
or
mov
fbstp
imul
mov
nop
lods
cltd
and
movb
loopne
cltd
jmp
cmp
fisttps
xor
or
sub
fdivs
push
shll
xorl
dec
pslld
mov
std
pop
jl
cmp
sub
xchg
or
sarl
sub
fidivrs
pop
loop
movsl
pop
mov
into
adcb
int3
jae
bound
cmp
push
mov
mov
pop
mov
adc
push
fmuls
jg
cmp
push
popa
jnp
xchg
adc
push
rcrb
cmp
inc
scas
jle
jmp
pop
shl
jp
mov
mull
in
lods
jg
push
cmpsl
es
hlt
xchg
xchg
cmp
mov
push
dec
hlt
shll
adc
mov
jnp
sbb
inc
out
jae
sbb
cmp
test
iret
clc
push
loope
in
xchg
addr16
push
ret
mov
rclb
arpl
stos
cmpsb
sbb
ds
out
imul
sub
xlat
mov
sbb
cld
out
and
movsl
rcrb
in
and
mov
aam
jl
fmull
mov
jmp
lods
es
xlat
in
pop
scas
shl
pop
mov
insb
ret
adc
test
mov
xchg
push
push
push
add
aas
push
hlt
xchg
insb
ret
push
mov
or
pop
sbb
sub
js
pop
out
movsl
loop
mov
mov
pop
mov
push
shlb
pop
out
mov
fldcw
adc
pop
dec
fcomip
mov
fiadds
mov
sahf
leave
xlat
loope
push
push
ljmp
lods
out
cmp
push
hlt
mov
adcb
mov
mov
sbbl
sbb
jnp
out
imull
mov
push
imul
inc
push
push
in
and
and
inc
outsb
cmp
push
mov
add
pop
mov
sahf
pop
out
jmp
mov
mov
sbbb
rorb
mov
mov
push
push
int
cwtl
inc
outsb
out
fimull
ds
mov
cmc
mov
mov
popl
arpl
loope
inc
outsb
out
fisubrl
add
pcmpgtw
fadd
xor
jl
movsb
push
lods
xchg
xor
imul
pop
push
cmp
fs
dec
xor
shlb
jge
movsl
push
int3
inc
xor
pop
out
inc
push
and
pmaxsw
idivl
dec
sub
jg
mov
and
fbstp
iret
aaa
data16
adcl
or
jnp
fisttpll
rcrl
movsb
push
ret
movsl
lods
adc
dec
call
out
mov
shlb
into
fsubrl
test
inc
lret
movsl
jl
clc
inc
loopne
mov
adcb
into
xchg
inc
scas
xchg
or
enter
mov
or
cmc
dec
sub
call
xor
dec
xor
add
push
adc
clc
mov
aas
nop
insb
push
push
inc
loop
pusha
lds
es
xchg
jl
jge
dec
xchg
mov
ss
sbb
inc
dec
popf
and
call
fucomip
cwtl
mov
std
xor
fidivrl
mov
icebp
lods
data16
outsb
fabs
ja
outsb
jnp
pop
inc
dec
jb
into
mov
imul
push
cld
inc
or
jmp
pop
cmp
xor
xchg
test
stos
testl
rolb
dec
popa
incl
cli
xchg
mov
inc
retw
mov
in
test
shrl
dec
mov
xchg
out
out
dec
ret
sbb
mov
pop
or
mulb
cmc
scas
add
mov
xor
cwtl
aam
sbb
or
adc
jb
push
adc
mov
scas
mov
mov
add
jae
add
je
inc
dec
mov
mov
push
pop
sub
out
or
xlat
jae
push
jmp
dec
mov
adc
lret
mov
pop
lds
lds
enter
ljmp
loopne
fdivrs
outsb
lds
stc
jne
scas
js
sbb
jnp
insl
rorl
arpl
in
push
push
xchg
popa
int
xor
fdivrp
sub
adc
jmp
aam
dec
dec
mov
in
adc
test
sbb
movsl
inc
xor
mov
iret
fstpt
push
xor
outsl
jno
mov
fsubl
lea
lret
daa
xchg
jbe
cli
ja
frstor
and
and
mov
movsl
repnz
stos
mov
jns
add
push
push
pop
sbb
addb
fcmovnb
clc
xor
mull
lock
fdivs
shll
mov
fidivs
aad
xchg
cmpsb
jnp
cli
lahf
jnp
jl
hlt
xor
jns
xchg
rcl
or
test
pusha
addr16
hlt
mov
lahf
lret
inc
lret
leave
cmp
sbbb
fmuls
mov
jnp
xlat
xchg
mov
arpl
lahf
jge,pt
popf
fcomps
mov
push
mov
imul
push
sti
jg
xchg
scas
mov
into
jge
xor
jo
pop
test
out
lods
and
mov
mov
push
cld
lahf
outsb
xchg
outsl
mov
sbb
or
xor
repz
rcr
inc
sahf
dec
push
xor
sarb
mov
push
push
dec
lea
mov
stos
stos
in
sub
dec
fnstsw
adc
sbb
jne
or
mov
popf
push
dec
and
cmp
push
test
or
pusha
mov
out
sahf
ljmp
or
adc
push
and
test
insl
sbb
sub
cmpsl
add
xlat
mov
aas
frstor
push
sub
ret
test
pop
pop
mov
shrl
imul
push
push
stos
push
lods
xchg
mov
xor
mov
out
es
outsl
add
sub
jmp
and
or
xor
jg
lret
pop
sarl
xor
test
dec
push
mov
aad
pop
mov
cld
stos
jo
cmp
adc
jge
cld
shll
cld
sbb
cli
jge
and
out
push
js
mov
in
pop
mov
outsl
pop
imul
inc
cmpl
jecxz
inc
mov
cld
add
jo
lret
popf
and
aam
jne
imul
ret
mov
or
cmp
fadds
mov
xor
dec
mov
push
std
jne
lahf
sbb
xor
jns
pop
int3
aaa
test
adc
popa
je
push
adc
xchg
mov
mov
or
fwait
mov
sbb
xor
or
sbb
cmp
add
out
push
mov
xchg
stc
loopne
pop
bound
insl
xor
jmp
lods
ret
in
xor
fistpl
pop
sarl
pop
push
pop
fisubs
adc
lods
in
add
icebp
xchg
mov
rcll
sarl
mov
mov
loop
lret
popl
pop
xchg
inc
mov
or
insb
out
gs
in
mov
pop
cmp
push
or
xchg
mov
add
jnp
dec
sbb
sti
mov
out
push
push
shr
test
sar
sbb
inc
fwait
push
das
out
sar
adc
in
cmpsb
fisubl
sub
push
mov
inc
pop
adc
stos
dec
arpl
or
jmp
leave
lock
jmp
jle
outsl
bnd
pop
inc
bnd
push
xchg
xchg
xor
xchg
xor
and
push
aas
insb
js
fisubs
and
push
add
add
sbbb
jno
dec
jo
push
push
pop
push
outsb
push
es
add
iret
mov
jp
jb
pop
cmp
mov
xor
data16
nop
pop
in
cmpsl
and
fmulp
imul
add
sahf
lds
in
loope
mov
push
push
int3
pop
xor
adc
cld
mov
mov
out
push
dec
lea
repnz
shrl
inc
scas
cmp
mov
cmp
or
ficoms
mov
adc
mov
push
sbb
pusha
dec
mov
push
gs
ficoms
fucomp
inc
sub
push
mov
jb
aaa
sbb
movsl
cli
sti
insl
inc
test
fnsave
insl
aad
push
pop
adc
inc
xchg
loope
ret
iret
lods
divb
dec
int
cld
jecxz
jb
out
mov
bound
add
xor
lret
or
cmpsl
mov
gs
lcall
adc
stc
ja
stos
and
out
cmc
jno
fisubl
push
stos
mov
out
movsb
mov
sarl
mov
add
pop
rcrl
xchg
cli
mov
adc
cli
mov
adc
lret
stos
insb
mov
call
fnsave
pusha
flds
adc
lods
out
stos
push
out
inc
inc
daa
lahf
iret
outsb
xchg
xchg
push
pop
sub
test
sub
sahf
cmp
inc
mov
jb,pt
inc
loop
mov
push
sbb
data16
ret
orl
pop
mov
jb
xor
mov
repnz
mov
push
setge
cmc
mov
je
sub
lods
shlb
das
test
in
fimuls
aam
push
or
pop
and
xchg
cwtl
aam
pop
push
test
lcall
jb
dec
lods
xor
jae
shll
in
xor
pushf
test
jbe
and
notb
push
out
pop
mov
daa
and
hlt
mov
push
loopne
xlat
or
outsb
cwtl
cmp
xor
cmpl
enter
das
xchg
xchg
imull
sbb
push
adc
adc
mov
inc
das
adc
push
fistpll
push
push
adc
nop
loop
mov
mov
push
adc
lods
inc
das
shlb
fidivrl
shl
mov
jns
adcb
push
imul
pop
popa
xlat
inc
dec
dec
rcll
add
cmp
mov
pop
loope
test
fldenv
inc
pop
jno
aad
idivb
call
pushf
popa
inc
stos
jg
insl
sbb
cltd
cmpsb
jmp
mov
je
mov
sarb
iret
push
adc
roll
int3
inc
loop
mov
mov
mov
push
sbb
push
mov
dec
fidivrs
sti
jge
cmp
test
mov
outsb
push
and
sbb
add
std
jle
xor
sbb
mov
push
push
pushf
jae
dec
push
lar
repz
xchg
fimuls
sti
inc
mov
cmp
pusha
xor
inc
lods
mov
mov
sub
jbe
sahf
addb
push
dec
cmc
sub
inc
dec
outsl
push
outsl
in
ds
stos
jns
ds
rorb
mov
rolb
into
cld
adc
sub
push
mov
popf
adc
dec
jae
je
adc
sbb
and
xchg
jle
dec
test
addr16
lds
mov
adc
sahf
fildl
sbb
jl
in
pop
cmp
fisubrl
add
push
adc
imul
repnz
push
pop
pop
je
inc
add
inc
push
pop
push
push
xchg
daa
jp
mov
mov
or
push
adc
cli
or
or
pop
sub
scas
push
test
cmp
mov
push
das
fwait
in
lahf
insb
lock
inc
mov
xor
in
cmp
cmp
mull
mov
and
sbb
hlt
mov
test
sub
inc
or
push
cmpsl
int3
clc
pop
jnp
call
cmp
jge
ja
sub
xor
and
push
pop
pop
push
pop
add
mov
push
fbld
mov
jno
movsb
loop
push
pop
cli
mov
imul
push
push
mov
stos
sub
mov
dec
loop
insl
mov
shr
dec
push
xlat
test
mov
psraw
mov
sbb
and
jmp
es
loope
dec
push
push
mov
test
add
mov
add
aad
or
mov
adc
mov
push
leave
lahf
idivb
mov
push
dec
fsubp
movsb
stos
mov
mov
arpl
dec
mov
lcall
xchg
push
stos
push
test
pop
repnz
push
jp
pop
int3
sbb
jle
pop
ljmp
push
sub
pop
inc
cmpsb
in
fcmovne
push
xchg
add
iret
nop
mov
pop
out
subb
xchg
jle
fcmovb
icebp
mov
pop
jg
gs
popf
add
mov
bound
leave
loopne
sub
cmpsb
lahf
aam
jbe
and
cmp
jae
adc
pop
inc
jo
lret
jecxz
jnp
stos
mov
pop
rcr
cld
xor
pop
jge
fdivs
jmp
aas
ds
add
mov
scas
sub
pop
sub
dec
xor
dec
lock
icebp
stos
mov
fwait
pusha
xchg
stos
xchg
fsubs
stos
enter
cmpsb
ds
cwtl
inc
std
sub
and
mov
cmp
addl
dec
or
jns
inc
testb
in
rolb
adc
lahf
fmull
mov
push
rolb
adc
je
xchg
into
or
jl
clc
lret
adc
mov
aam
mov
ret
orb
aam
mov
jmp
sub
and
pop
test
insb
mov
mull
jns
cld
mov
pop
cld
mov
adc
loope
imul
addr16
cmpb
lock
dec
mov
inc
pop
icebp
cld
jp
sahf
sub
bound
xor
and
sbb
loopne
cmp
mov
aad
sbb
adcl
shll
lahf
mov
imulb
in
sub
push
adc
xchg
call
xchg
push
sub
mov
dec
les
pop
jb
cmpsb
add
mov
push
mov
inc
cltd
in
xor
inc
inc
ficoms
push
insb
sub
sahf
inc
jg
push
xor
stos
pop
push
jecxz
sub
subl
pop
out
push
sbb
das
repnz
popa
xchg
push
lock
daa
jno
andl
jo
out
lahf
aaa
jmp
inc
fcompl
fs
std
mov
sub
cmp
and
add
mov
or
adc
pushf
dec
xorl
or
or
test
rclb
pop
loopne
popf
pop
fcmovbe
pusha
add
sbb
add
daa
dec
fnsave
testb
imul
loop
lods
push
popa
adc
inc
sti
js
gs
inc
repnz
je
sbb
dec
ret
fstps
pop
movsb
xchg
popa
js
les
pushf
mov
hlt
xor
lods
icebp
rol
stos
pop
in
and
pop
adc
addr16
dec
add
inc
push
in
xchg
rorl
arpl
sbb
sub
lret
repnz
push
push
testl
cli
hlt
call
in
dec
mov
test
enter
pushf
int
and
adc
mov
inc
lea
adc
cmpsl
dec
adc
test
dec
pop
mov
hlt
out
xor
sbb
stos
stos
in
sub
dec
xor
fbld
mov
mov
arpl
out
popf
mov
dec
fs
jge
out
fdivrl
cmp
pusha
int
xchg
jae
pop
scas
fldl
sub
pop
dec
xchg
mov
xor
pop
shrb
xorb
push
push
gs
stos
in
stos
xchg
fsubrp
fwait
jl
xchg
icebp
push
and
fwait
mov
push
sub
jns
repz
sub
lds
ds
fstpl
jo
sbb
mov
cmc
inc
mov
leave
frstor
out
test
or
mov
jg
loop
push
sbb
nop
mov
pop
out
subb
xchg
outsb
clc
xor
fbld
mov
stc
cmp
sub
movsl
loop
mov
mov
jbe
push
jo
hlt
push
mov
push
sbbl
xchg
xor
loope
mov
mov
sbbl
in
xchg
ret
fs
data16
xor
arpl
mov
jmp
adc
lret
mov
jl
cmp
stos
fwait
dec
xchg
xlat
cmpsl
shr
push
lods
push
sub
bound
leave
repz
sbb
mov
loop
mov
jno
or
popa
sbb
push
mov
mov
ds
imul
mov
fwait
sahf
sub
iret
push
adc
movsb
icebp
leave
cs
imul
dec
jmp
leave
push
test
sub
adc
xchg
cld
icebp
mov
push
push
movl
cmp
rol
or
jp
xor
int
inc
fwait
imul
rcrl
rolb
push
sarl
sub
jns
mov
cmp
aam
pusha
sbb
pop
jl
and
pop
or
sbb
dec
out
jp
jbe
and
mov
shrb
mov
jp
mov
mov
xor
push
add
fnsave
clc
dec
lods
jge
sbb
repnz
and
sti
roll
or
mov
mov
repz
nop
xchg
rorl
aam
jg
es
test
mov
mov
adcb
imul
adc
out
mov
and
cmp
xor
jg
mov
cmc
fimull
mov
sbb
je
sub
cmp
in
and
xchg
aas
fsts
xor
mov
mov
psubsw
cmc
mov
jne
shl
dec
mov
xor
push
adc
pop
mov
loop
mov
mov
add
mov
xchg
inc
push
sub
shrb
inc
cmpsb
push
xor
mov
xor
xchg
jp
xchg
add
mov
push
xor
push
adc
push
ljmp
inc
jo
mov
jnp
in
or
aaa
mov
stos
les
cs
je
and
in
adc
mov
addr16
hlt
call
sbb
out
mov
mov
lock
outsb
lea
stos
shrl
jne
aaa
loope
push
fsubr
push
sub
dec
jle
call
xchg
jno
or
dec
mov
and
dec
pop
dec
daa
jno
test
test
mov
rcrl
add
push
mov
pop
out
addl
imulb
into
shll
test
call
ss
mov
cli
js
int3
loopne
jnp
adc
mov
addb
jb
mov
lcall
mov
add
out
lahf
aad
leave
cmp
push
add
jmp
pusha
stos
andb
pop
push
sub
bound
loope
loop
jns
stc
imul
or
push
stos
and
jnp
cmp
test
shl
adc
in
adc
in
adc
out
adc
out
adc
out
adc
call
add
mov
add
xchg
call
add
lahf
jmp
add
mov
add
in
add
lcall
adc
add
insl
lock
shl
add
add
test
add
repnz
mov
add
mov
repz
cld
jo
push
cmp
sbb
pop
insb
cmpl
dec
outsb
cmp
push
test
or
add
ficoms
mov
and
enter
idivl
pop
inc
aad
aad
push
movsl
in
and
pop
adc
lcall
adc
leave
repnz
fs
outsl
fadds
pop
xchg
mov
addr16
clc
stos
test
jnp
mov
sahf
cmp
xchg
xchg
cmp
neg
jecxz
sub
or
scas
inc
and
push
jae
orl
push
mov
sbb
cmp
lret
stc
fstl
mov
cmp
sub
repnz
or
jno
dec
gs
xchg
dec
add
inc
and
mov
pop
sub
add
jp
push
dec
inc
push
cli
xor
or
imulb
shl
sub
out
stos
jae
movsb
sub
cmp
or
pop
xor
xlat
pop
dec
push
and
cs
imul
xor
pop
xlat
int
lods
test
test
rclb
lahf
xor
outsl
in
lahf
movsl
jns
daa
sahf
adc
push
adc
push
daa
xchg
cmp
push
adc
ss
mov
mov
cmp
movsb
in
flds
adc
push
sbb
push
adc
and
push
cmc
and
xchg
in
cmp
test
daa
adc
xlat
in
pop
push
sti
adc
mov
arpl
pop
in
sbb
xor
sahf
movsl
pop
ja
je
adc
and
xchg
sbb
xor
push
addr16
dec
mov
and
lds
pop
cmpsb
mov
mov
mov
mov
dec
sbb
jbe
mov
fbld
outsl
xor
pop
inc
mov
mov
ret
jne
or
mov
es
ja
stos
xchg
leave
jmp
or
lret
push
xor
sub
push
into
mov
mov
adc
jns
ljmp
test
cs
movsl
dec
jle
add
clc
aam
push
xor
jb
pop
imul
push
clc
push
push
in
jmp
xor
adc
mov
fdivrs
je
sub
mov
mov
sbb
loop
xchg
mov
mov
mov
jnp
shll
in
loope
and
outsl
in
add
xor
jmp
lcall
pop
pop
out
incb
push
movsl
out
and
bound
jmp
or
push
test
mov
push
sarb
popa
cs
fisubrs
out
std
movsl
jecxz
js
lret
push
xor
mov
add
push
fidivrs
dec
push
repnz
cmpsl
js
jle
dec
int3
jle
mov
cmp
hlt
out
add
sbb
and
or
loop
pop
fnstsw
loop
xor
lcall
fisubrl
nop
cmpsb
lret
hlt
nop
xlat
int3
fdivr
pop
stos
fsub
lret
ja
test
adc
pop
stos
ja
mov
xchg
mov
add
sub
adc
sub
push
push
mov
mov
mov
mov
loop
add
xchg
in
cs
or
test
mov
xchg
jg
popf
sub
xchg
stc
adc
test
dec
lods
ret
fwait
outsb
xor
jg
shlb
mov
sub
cmp
sbb
testl
jnp
sub
iret
lahf
ds
in
call
xchg
add
adc
pop
fbld
push
xor
divl
fwait
je
or
xor
and
lods
sbb
mov
out
fdivl
ret
inc
fstps
shll
push
int3
xchg
sub
lods
push
cmpsb
dec
lahf
bound
stc
stos
adc
jmp
nop
movsb
and
stos
push
test
nop
fwait
stos
ret
jns
mov
jns
fs
mulb
sub
test
aaa
push
pop
mov
into
fnstsw
dec
data16
push
sub
fistps
mov
mov
lds
rcrb
iret
ret
ljmp
dec
sbb
out
dec
xchg
js
stos
addr16
pop
jmp
mov
test
es
je
lret
push
lcall
dec
pop
xchg
mov
mov
fcoms
mov
enter
clc
mov
leave
sbb
ja
push
push
xor
in
test
scas
add
loope,pt
imul
cmp
pop
stos
add
pushf
cmp
lea
push
rolb
in
sar
jmp
adc
and
scas
xor
sub
cmp
fwait
pop
dec
loop
cwtl
add
movsb
inc
fcoml
push
lods
js
aam
lods
sbb
cli
and
xchg
lock
mov
clc
outsl
xchg
pop
inc
xor
and
adc
das
pop
hlt
je
stos
cld
daa
in
cmpsb
or
loopne
shlb
jge
mov
mov
jge
dec
nop
jmp
aaa
es
jmp
fcmovnu
iret
idivl
popf
push
rcl
in
out
popf
fcom
pop
jo
inc
cmpsb
jb
sbb
pop
xchg
mov
or
mov
inc
sbb
sub
ja
dec
cmp
sbb
out
mov
lods
data16
vpcmov
mov
dec
cmp
dec
in
das
and
mov
in
cmp
xchg
dec
arpl
mov
xlat
and
shll
ret
xchg
sti
popf
adc
cmp
push
xchg
inc
push
fxrstor
int3
fcomps
lock
ja
or
push
and
cmp
or
push
aaa
loopne
pop
fcoms
pop
test
xchg
push
decb
cwtl
jmp
fildl
sub
mov
in
jb
rorl
mov
es
test
aam
das
repz
test
test
push
push
mov
pop
ljmp
ds
dec
sbb
jl
sub
push
pop
imul
movsl
mov
dec
arpl
pop
push
sbb
ds
out
out
movsl
pushf
test
cli
hlt
call
stos
xor
fsubrs
push
cmpsl
dec
sbb
and
clc
es
rol
jb
std
stos
ljmp
mov
mov
add
mov
fbstp
and
mov
xchg
pop
xor
ficomps
push
iret
lods
and
sbb
pop
inc
jns
stc
sar
call
in
fildll
lcall
fdivrl
decl
std
sahf
out
mov
inc
popw
pop
insl
pop
push
cmc
xlat
in
scas
mov
test
insb
and
gs
add
lock
rclb
push
or
mov
ljmp
mov
cli
hlt
mov
jno
add
push
sub
lret
aad
mov
insb
lcall
and
or
inc
xchg
test
outsb
jnp
sub
push
mov
arpl
jae
shrb
in
mov
call
or
push
mov
cwtl
fstps
xchg
mov
addr16
fdiv
mov
mov
xor
fwait
sbb
xor
mov
sub
mov
push
icebp
insb
lahf
xchg
mov
dec
loop
shrl
pop
pushf
xchg
movsl
faddp
stos
push
push
adc
loop
gs
pop
test
arpl
outsl
pop
hlt
dec
inc
shll
jo
and
cmp
mov
fcomip
jle
lret
mov
ljmp
imul
and
cmp
arpl
adc
in
fidivrs
mov
jg
int
aas
scas
rcrb
jmp
and
lea
ljmp
icebp
pop
test
sbbl
in
jge
and
xlat
and
insl
test
ss
loopne
es
push
pop
sub
lea
inc
mov
xchg
cmp
ja
fisubrl
lahf
jge
cs
adc
shll
aad
nop
dec
and
hlt
cmp
outsl
xor
lcall
pop
mov
sarb
adc
pushf
je
adc
inc
push
hlt
mov
pop
subl
sbb
ficompl
inc
test
pop
pop
cmp
call
xor
fs
loop
sbb
aas
arpl
jge
mov
fstl
mov
dec
adc
inc
pop
iret
xor
mov
fs
mov
xchg
adc
lods
lods
out
sbb
clc
adc
push
pop
cli
lea
rclb
dec
or
int
rcrb
mov
movb
dec
jo
outsl
sti
pop
shlb
imul
cmp
lahf
mov
enter
dec
xchg
sub
dec
test
pop
xor
sub
popa
lcall
xchg
jmp
push
imul
test
pop
pop
js
and
mov
in
iret
mov
aas
stc
sbb
test
fdivs
adc
pop
cmp
dec
mov
mov
push
cmc
mov
xchg
lods
lret
mov
pop
jl
mov
mov
jmp
dec
sbb
bound
mov
pop
sub
cld
daa
sbb
mov
out
into
jb
mov
cmp
outsl
xor
repz
jae
mov
jns
test
sarl
jne
mov
and
jmp
mov
divl
loope
push
int
sub
popa
imul
inc
js
arpl
mov
jno
pop
shrb
add
cmp
sub
inc
sub
mull
orb
mov
fwait
sbb
xor
mov
sub
out
pop
fbld
sbb
pop
mov
jl
stos
mov
je
clc
xor
inc
clc
fdivrl
in
cli
hlt
out
sbb
xchg
xor
and
pop
sub
std
out
fdivl
lea
adc
jne
std
push
popa
mov
lea
in
push
test
jge
jl
aam
jmp
fstps
pusha
int
int
scas
and
push
adc
insb
sub
lock
pop
test
hlt
call
or
loope
push
pop
stos
push
iret
addb
test
loope
fdivl
push
pop
int3
push
mov
fsubrs
into
cmp
push
xchg
out
inc
clc
xor
inc
clc
fdivrl
cmpsb
int
hlt
call
pop
and
lods
mov
lret
push
pop
sahf
cmp
and
icebp
iret
lahf
sarl
and
mov
and
push
stos
push
addb
lret
loope
fdivrl
mov
inc
pop
mov
hlt
lcall
lods
ljmp
movsl
push
mov
cmp
std
stos
adc
xor
notl
pop
adc
data16
mov
inc
sub
jge
ja
int
or
stos
neg
fistps
pop
mov
ret
cmp
inc
ret
repz
mov
jl
stos
fdivrp
pop
and
mov
sub
mov
lock
sahf
mov
repz
shrl
cmp
inc
and
push
loopne
addr16
pop
stos
sbb
dec
clc
jne
mov
sahf
jg
arpl
jecxz
mov
test
cwtl
js
jbe
pop
into
mov
mov
dec
out
aad
lret
xor
push
pop
rorb
sub
mov
sbb
mov
icebp
aas
in
ljmp
cmp
sub
mov
jg
data16
arpl
push
fbld
in
cmc
jae
pop
inc
popf
or
cmp
xor
inc
cmc
cltd
pop
dec
or
fcoms
shr
mov
fdivp
orl
pop
xchg
in
jge
mov
sti
mov
adc
push
testl
stc
pop
push
mov
inc
sahf
jge
out
sub
movb
sub
mov
inc
mov
in
dec
cltd
mov
clc
popa
scas
pushl
mov
jp
mov
pop
stc
mov
mov
mov
cmp
xchg
jne
imul
and
cmp
sub
mov
push
adcb
outsb
sub
sub
sti
roll
hlt
int
mov
sbb
push
adc
leave
gs
aaa
jb
into
xlat
outsb
push
cltd
cmp
out
adc
lret
lcall
xchg
out
gs
cmp
or
and
mov
mov
push
xchg
inc
sbb
xor
pop
push
push
xorl
lahf
insl
ficompl
push
mov
mov
popa
fwait
or
mov
mov
cmp
sub
mov
popf
jmp
push
subb
sbb
aam
mov
dec
xor
cmc
movsl
pop
add
or
cmp
mov
aaa
xchg
aam
cmpsb
mov
push
cmp
pushf
je
sbb
xor
stc
cmp
mov
cmp
cmp
popa
popf
pop
add
shrl
or
and
test
repnz
jecxz
lock
sarb
cmp
test
movsl
lret
loope
fdivl
outsl
divb
fildll
divb
push
lea
mov
mov
dec
sahf
ret
xorl
movsb
jmp
and
test
mov
rol
pop
test
mov
sub
icebp
iret
lahf
cmp
shll
jecxz
adc
pusha
xchg
dec
push
add
int3
jnp
fidivrl
out
mov
arpl
push
lea
push
mov
pop
cmpsb
in
fcomps
or
insb
xchg
shll
repnz
inc
pop
jp
mov
jge,pt
call
fwait
sbb
mov
mov
mov
ja
sub
jg
and
cmp
scas
push
test
pop
jb
pop
lret
insb
lcall
mov
loope
loopne
push
adc
sbb
or
pop
sub
push
adc
imul
add
insl
push
and
adc
and
scas
sub
fdivl
and
inc
pop
mov
hlt
pusha
int
mov
shll
mov
dec
sahf
mov
out
dec
or
jle
dec
in
sbb
xchg
arpl
pop
pop
xor
jecxz
pop
sahf
cmp
fistpll
jg
jge,pt
ds
pop
pop
push
lea
jp
sub
pop
test
adc
loope
adc
mov
sub
jbe
jb
jge
loop
adc
jmp
daa
fldcw
test
mov
ds
mov
popa
sti
stos
ss
jmp
out
cmp
sbb
and
xchg
pop
jo
pop
enter
popf
mov
shrl
pop
sahf
out
jl
loopne
and
movsl
fnstsw
cli
mov
jg
test
out
fstpl
pop
lds
in
push
fsub
pop
push
cmp
jae
insl
mov
sbb
adc
push
xchg
cmp
xchg
adc
push
xlat
cmp
imul
pop
pop
fildl
adc
cld
in
sbb
push
adc
mov
stc
cmp
inc
mov
ficompl
push
enter
mov
mov
push
push
xor
cmp
sub
xor
out
and
sub
cli
out
stos
into
push
jae
xchg
shlb
xchg
sub
imul
push
out
sub
cld
cmp
sub
cmp
notb
sub
cmp
lods
fldenv
sub
sbb
sub
mov
cli
loop
lods
ret
push
xchg
lods
sar
stos
roll
jecxz
and
mov
lds
or
mov
mov
call
mov
pop
jne
pop
fdivp
pop
inc
push
jb
sti
and
lods
pop
test
pop
popa
fbld
or
gs
dec
loop
cli
and
in
sub
outsb
loopne
adc
ljmp
shrb
push
xchg
into
es
mov
lahf
adc
aam
scas
cmp
rcrl
adc
outsb
int
mov
mov
fwait
xor
movsl
aam
cmc
pop
repnz
and
imul
gs
into
loope
data16
pop
subb
jecxz
push
mov
mov
dec
dec
clc
jle
lcall
incl
add
out
cmp
push
mov
sti
mov
pop
js
lds
ret
idivl
hlt
je
cmp
mov
mov
loop
jns
lods
push
scas
stos
sti
ja
inc
sub
pop
jns
pop
lret
push
and
mov
jmp
sbb
inc
inc
mov
dec
loop
jge
je
mov
push
nop
fsubp
inc
and
scas
movl
lahf
xchg
mov
jmp
test
sub
test
shll
pop
test
pop
mov
fisubrs
lock
push
jmp
out
cmc
loop
xchg
mov
or
inc
jb
loop
and
inc
adc
repz
and
insb
xchg
xchg
jns
sbb
mov
test
xchg
fldl2t
cmp
adc
jl
mov
or
xor
in
dec
cmp
mov
test
xchg
rol
jo
mov
and
loop
add
sti
pop
test
inc
or
inc
inc
pop
out
add
pusha
xor
mov
daa
inc
push
mov
add
insl
push
mov
stos
pop
test
and
or
push
hlt
mov
clc
hlt
and
test
cltd
fnstcw
lcall
push
mov
jo
or
dec
push
imul
sub
lds
xor
mov
dec
sahf
xor
ja
fdivrl
ds
or
mov
lea
push
and
daa
pop
lods
dec
sahf
mov
movaps
and
iret
lahf
ds
cld
xchg
imul
das
sub
cwtl
inc
pop
sub
pop
dec
jecxz
test
or
lods
incb
mov
push
and
and
mov
cld
lcall
iret
pop
mov
shll
push
das
mov
pop
cmpsl
in
push
popf
adc
mov
aas
jl
mov
out
add
jecxz
stos
push
xor
movb
out
xor
andb
jle
jb
pop
in
mov
mov
cmpsl
loope
mov
cmp
jns
popf
mov
mov
pop
daa
fcomip
pop
mov
lret
push
dec
adc
repnz
mov
adc
test
adc
cmpb
cmp
in
dec
mov
sbb
mov
scas
fucomi
jo
out
icebp
cmp
cmpsl
mov
inc
lret
andl
adc
loope
jne
lods
lcall
mov
cs
das
sub
popa
inc
adc
roll
jb
pop
sub
xchg
push
mov
mov
in
add
push
in
xchg
mov
mov
pop
adc
aad
jl
bound
pusha
loopne
adc
pop
sub
ficoms
xor
call
iret
inc
mov
insl
inc
xorl
sbb
fwait
push
pop
sbb
hlt
pop
fcomp
clc
xor
shrb
dec
mov
lods
addr16
xchg
dec
dec
or
test
int
fcoml
movaps
pop
inc
inc
mov
out
pop
lods
add
sahf
aas
or
bound
rcll
faddl
adc
aad
ljmp
mov
std
cld
dec
subl
imull
shrb
sub
outsb
loop
mov
pop
add
dec
xor
call
movsl
les
rorl
mov
repz
cmp
dec
arpl
pop
ret
jbe
test
jns
xchg
and
lea
iret
mov
icebp
icebp
add
mov
mov
rcrb
loope
lods
dec
xlat
into
jg
push
dec
or
pop
ficompl
loope
xor
jbe
jne
mov
mov
xor
mov
cmpsb
scas
cmp
loope
mov
inc
stos
lret
popf
sbb
das
jb
pop
add
jmp
pop
mov
daa
xchg
cwtl
ret
idivb
cmp
in
mov
in
cmp
sub
sub
gs
sbb
cld
ja
xor
dec
repz
pop
fstl
push
and
mov
test
out
add
dec
loop
jge
loope
movsb
mov
jb
cmp
sub
jnp
aad
xor
push
fstps
call
push
mov
xlat
sub
pushf
jl
xor
ret
icebp
iret
lahf
mov
out
jle
popa
mov
lea
inc
and
mov
mov
xor
inc
or
xchg
mov
popf
xor
or
inc
push
pop
sahf
cmp
scas
jae
and
in
popf
pushf
std
outsb
popa
mov
lea
loope
push
test
adc
xor
push
adc
and
push
enter
mov
aas
inc
lea
mov
scas
xlat
push
pop
flds
adc
xchg
mov
out
jno
sub
jg
lds
fdivrs
mov
push
adc
mov
xor
mulb
shll
jp
popa
xor
sub
insl
imul
mov
lahf
ds
call
sarb
imul
sbb
insl
lock
xlat
mov
mov
xchg
repz
repnz
sub
sub
mov
mov
jmp
enter
sub
sub
sub
sub
dec
shlb
adc
inc
sub
xchg
jns
rcrb
push
push
jg
push
iret
mov
sub
cmp
and
mov
jle
mov
mov
cmpsb
push
adc
dec
mov
sub
ds
test
mov
xor
out
jecxz
sub
add
icebp
das
sbb
inc
mov
cltd
arpl
rolb
std
outsb
movsl
stos
fisubrl
mov
push
pop
jge
clc
mov
stos
ficomps
hlt
adc
es
stos
push
or
mov
cmp
cmpsl
orps
rcl
addr16
call
fnsave
jbe
dec
iret
dec
inc
inc
fdivrp
cli
arpl
push
cmpsl
in
pop
mov
iret
outsl
inc
and
rclb
divb
ret
sub
divl
jne
arpl
dec
push
das
movsl
rolb
into
push
mov
mov
icebp
inc
inc
and
cmp
je
pop
add
adc
lods
mov
push
mov
lods
pop
out
xchg
and
push
arpl
add
mov
or
cmp
jbe
jecxz
mov
out
sub
sbb
jp
loopne
pop
xor
jg
jmp
push
outsl
data16
xchg
xor
addr16
hlt
dec
loopne
pop
or
mov
sbb
mov
insl
or
mov
sahf
inc
addl
not
push
iret
lds
call
xchg
out
xor
movsb
sbb
aad
addr16
pop
jmp
fcmovbe
mov
mov
pop
lahf
pusha
out
adc
pusha
fisubl
repnz
jo
roll
pop
out
adc
jbe
add
dec
inc
xchg
test
mov
cmp
test
pop
hlt
imul
insl
stos
rcll
sbb
dec
pop
lahf
or
hlt
push
dec
movsl
shlb
push
or
aas
pop
addr16
xor
cmp
cs
arpl
jo
or
mov
iret
pop
nop
dec
scas
mov
lahf
mov
push
test
lahf
outsb
mov
dec
jo
add
dec
push
stc
jbe
sahf
cmp
push
jnp
scas
rorl
rcrl
push
popa
inc
out
xchg
sti
cmpsb
and
fidivrs
ss
cltd
or
inc
dec
add
ljmp
cmpsb
popa
inc
adc
in
adc
fdivrl
out
enter
sbb
aam
mov
push
js
test
push
xchg
push
mov
test
or
outsl
jns
es
rclb
data16
push
fdiv
dec
sbb
push
hlt
fstpl
clc
cmpsb
ret
mov
pop
insl
mov
pop
test
dec
xor
pop
fists
xchg
push
out
mov
adc
ja
dec
mov
into
cmp
sub
push
pop
cmp
shrb
pop
stos
fs
loop
jg
mov
dec
mov
pop
movsl
xchg
seto
adc
pop
adc
lods
daa
dec
sahf
cmp
and
lahf
lea
movsb
xor
sub
icebp
mov
imul
mov
je
push
adc
dec
outsl
xor
or
xchg
scas
dec
adc
test
adc
jno
cmpb
jmp
adc
dec
jle
cmpsl
fcoms
fs
fwait
pop
fidivs
push
dec
adc
test
and
ficoml
mov
fmul
jo
cltd
fwait
mov
jge
aad
jns
fists
adc
aam
inc
cmpsb
out
mov
cmp
sti
jge
fldcw
add
fdivs
push
and
xlat
push
pop
sub
lcall
clc
aaa
test
jne
jecxz
das
stos
xor
xchg
xor
scas
sbb
pop
addl
lret
testb
fwait
sub
mov
xchg
les
mov
scas
cmpsl
dec
adc
outsb
out
jle
int
jp
js
in
aam
fists
pop
sbb
aam
jle
pop
inc
jns
iret
push
xor
adc
leave
mov
mov
lods
das
std
mov
hlt
mov
pop
jns
enter
mov
hlt
adc
pop
sbb
xchg
divl
mov
insl
bound
xlat
popf
xchg
sbb
imul
dec
mov
sub
xor
jbe
inc
jmp
pop
andb
add
push
into
cmp
inc
popf
cmpsl
xor
xor
int3
ja
fadd
xlat
out
sub
in
mov
cmp
ljmp
or
aas
scas
cmp
bound
mov
mov
rcl
das
pop
cmpsb
add
pop
and
fcoms
aad
call
mov
xor
test
mov
stos
fnstsw
inc
jb
mul
roll
lcall
cld
pop
jmp
jl
outsb
fnstcw
xchg
mov
stos
or
stc
leave
sub
test
icebp
dec
cmp
jg
fistpll
fadd
add
test
mov
aas
jl
sbb
jp
inc
ret
inc
loope
imul
cmpb
iret
cmpsb
jae
inc
ss
popf
pushf
ds
adc
nop
xor
add
nop
inc
adc
dec
repz
pop
lock
and
adc
aas
shll
inc
cmp
pop
mov
pop
cwtl
cmc
mov
sti
cmp
scas
lret
cmp
pusha
xchg
dec
xchg
pop
icebp
shll
shll
gs
mull
and
scas
stc
sbb
cmp
adc
jmp
insb
iret
xchg
lods
adc
jb
push
dec
ret
add
jge
shlb
inc
cli
adc
aaa
fsubrl
or
addl
dec
xchg
imul
in
mov
jb
jecxz
mov
fscale
rcr
scas
popa
push
mov
mov
pop
mov
movsl
sub
sbb
loop
mov
sbb
lcall
daa
dec
pop
mov
mov
sahf
mov
sub
icebp
arpl
cmp
lcall
sbb
cmpsb
sarl
mov
ficompl
jg
mov
inc
xchg
mov
out
jge
aad
push
push
pop
cmp
popf
mov
rol
dec
sahf
mov
xor
testl
xchg
xchg
dec
and
mov
pop
lcall
cmp
inc
fistpl
jns
xchg
in
shrl
dec
dec
push
xor
in
push
and
pop
nop
roll
mov
inc
push
xchg
add
pop
pop
sbb
xor
out
mov
xor
aaa
push
mov
cmp
mov
aad
adc
jmp
inc
push
aam
mov
imul
xor
shll
ljmp
sbb
out
stos
push
adc
pop
sti
adc
dec
lahf
jge,pt
lock
pop
sbb
xor
sti
pop
fcoms
sbb
push
hlt
mov
aas
sub
adc
repz
push
or
sub
pop
and
ret
push
movsb
je
out
fidivl
inc
and
fstl
or
dec
sahf
mov
or
mov
sub
cmp
sub
jne
imul
icebp
pushf
push
mov
adc
mov
jno
mov
fiaddl
cmp
sub
mov
ja
xchg
popf
lret
sub
test
sti
pop
xlat
push
and
scas
movsl
fwait
mov
jge
pop
shrl
jb
js
jle
hlt
cmpsb
int3
into
adc
in
mov
push
pushf
dec
jp
mov
inc
in
cmp
mov
roll
mov
and
insb
mov
sahf
mov
sbb
push
cld
jg
fistl
js
cmp
in
pop
cmpsb
adc
ficoml
test
or
pop
jns
pop
sbb
jge
movsb
movsl
lods
pop
xchg
dec
jmp
push
xor
pop
mov
xchg
cmp
mov
jae
xchg
push
push
dec
sub
enter
pop
adc
stos
popf
fdivs
push
popf
int3
lret
repz
adc
mov
sahf
test
mov
js
mov
sahf
jno
scas
pop
into
idivb
ja
nop
imul
pusha
fs
sbb
les
pop
mov
pusha
outsb
mov
sbb
pop
popf
call
sub
dec
mov
push
jl
lret
rep
sti
xchg
mov
lods
fiaddl
push
cmpsl
or
lods
mov
loope
pushf
sarl
out
cmc
cli
gs
rcrl
incb
jl
mov
enter
ljmp
and
adc
and
xor
ret
pop
and
popa
sbb
pop
mov
cmp
sbb
mov
add
push
mov
xchg
jmp
pop
add
push
adc
adc
push
rcll
insb
repnz
es
ror
jnp
cmp
imul
adc
mov
jo
adc
jo
fsubp
or
hlt
mov
stos
xchg
add
mov
sub
sbb
int
popf
push
ret
pop
push
or
sbb
push
adc
pop
insb
xchg
push
adc
dec
vunpcklps
adc
push
mov
xor
fidivs
les
push
je
push
fsubl
or
and
test
and
adc
jmp
and
shlb
movsl
mov
push
xchg
or
lretw
cmc
mov
jo
ljmp
loope
loope
or
sub
or
dec
pop
cmp
jo
in
sahf
std
pop
out
ds
inc
or
insb
push
xlat
and
sbb
outsb
cmp
push
int
into
lahf
mov
pop
mov
mov
xchg
ret
adc
imul
cs
jno
iret
adc
jg
pushf
shrl
inc
dec
dec
mov
push
stos
and
mov
or
xorl
sti
jg
and
mov
jl
stos
fcoms
out
jp
out
push
sbb
xor
pop
jno
loopne
cmp
stos
outsb
push
movsb
pushf
ds
clc
and
or
dec
test
mov
lret
adc
jp
addb
sbbl
ljmp
daa
inc
adc
mov
fs
inc
push
adc
jne
hlt
imul
bound
push
lods
pop
mov
mov
jle
sub
push
ud1
iret
loop
sub
xchg
repz
pop
fsubp
dec
and
dec
sahf
repz
mov
jmp
test
sub
imul
xchg
add
iret
test
movsl
pop
jbe
imul
test
stos
or
adc
jne
mov
pop
out
xchg
push
lcall
fistl
sahf
mov
sbb
adc
adc
fldcw
sbb
dec
data16
dec
sub
mov
aad
adc
push
ja
mov
sub
shlb
push
stos
fisubs
movsl
test
jbe
and
outsl
mov
or
pop
out
mov
inc
push
loop
stos
push
stos
push
lock
addr16
pushf
mov
sbb
in
inc
movb
dec
lea
sti
rclb
push
adc
sbb
jae
mov
mov
cmp
jne
addr16
mov
adc
daa
adc
and
fsubs
loopne
adc
adc
imulb
daa
xor
and
add
push
sbb
lahf
push
push
jl
mov
stos
dec
mov
jmp
scas
mov
and
in
jmp
aaa
dec
loop
push
pop
fimull
push
dec
stc
sarl
in
mov
mov
shlb
lahf
clc
repz
mov
mull
fs
xchg
aam
sahf
sub
stc
sahf
std
imul
test
mov
jle
int
cmp
mov
leave
mov
sbb
daa
inc
mov
pusha
mov
je
jmp
loop
add
xor
jmp
hlt
fcmovbe
dec
and
loopne
fnstsw
rcrb
fwait
sub
sbb
pop
or
sbb
adc
repnz
push
mov
loop
inc
jg
out
repnz
repnz
testl
outsb
sub
nop
ret
push
loope
pop
orb
pop
sti
push
mov
mov
and
xor
push
or
fsts
adc
test
and
mov
adc
in
and
xchg
xor
xchg
fiaddl
stos
jp
xlat
sbb
xor
arpl
push
adc
rorl
mov
fwait
in
jle
pop
aaa
lods
push
jne
out
mov
cli
outsb
ja
pop
pop
mov
pusha
out
adc
outsl
mov
push
out
shlb
lds
sbb
and
jle
rcl
adc
dec
add
rcl
adc
jmp
push
adc
jecxz
mov
outsl
add
in
enter
mov
pusha
out
adc
and
gs
pop
push
loop
aad
mov
add
iret
inc
cld
sub
hlt
aad
aas
mov
sub
iret
xchg
mov
aad
jo
push
int3
ss
inc
mov
je
idivb
lret
cmc
in
mov
xlat
rorb
cmp
or
jno
sbb
mov
cmp
loope
mov
push
roll
fs
cmc
out
xchg
mov
xchg
mov
ljmp
arpl
pop
sub
sub
add
xchg
adc
xor
loopne
test
dec
fs
and
mov
fs
dec
pop
mov
or
adc
stos
sbb
leave
mov
pop
adc
fisubs
movsb
hlt
flds
adc
jl
and
orl
jno
adc
outsb
das
loope
mov
and
hlt
insl
sbb
and
mov
sbb
push
sbb
pop
stos
add
mov
sub
sbb
jns
xchg
cmp
inc
test
arpl
push
stos
mov
sub
add
scas
mov
mov
jns
hlt
pop
div
jns
mov
leave
xchg
xchg
fbstp
lds
out
sbb
jno
sti
pop
adc
dec
dec
mov
stos
outsl
dec
jnp
rolb
out
ja
pop
pop
or
push
xor
or
dec
ja
test
adc
cmc
aas
lock
add
cmpl
lods
mov
lock
dec
loope
insl
lods
xchg
pop
fldl
sbb
push
add
pushf
dec
mov
fists
mov
or
inc
fsubs
and
sub
jne
lods
nop
xor
add
or
lock
xchg
sub
scas
or
mov
jle
fdivl
jno
mov
movlps
lret
leave
sbb
scas
fldenv
inc
jnp
and
adc
in
stos
mov
jmp
xlat
mov
movsb
and
jge
mov
jns
xchg
shl
dec
test
cmc
pop
icebp
xor
inc
push
dec
jns
xchg
add
fmuls
mov
sub
faddl
sbb
or
mov
mov
pop
test
cmpsl
add
dec
push
jnp
xorb
jl
pop
and
das
pop
or
jns
mov
test
scas
cmpsb
inc
sbb
jne
push
arpl
arpl
pop
into
cmp
jle
ficoms
jnp
lds
aaa
call
mov
jae
and
fldt
aaa
cwtl
insb
sub
and
or
in
adc
ret
cmc
adc
das
xchg
ds
mov
fidivl
adc
and
ret
xor
cmpsl
dec
cmp
std
cmpsb
lea
fisubrs
pop
nop
scas
pop
sbb
dec
adc
jae
dec
fdiv
add
out
dec
lahf
call
cmp
mov
pusha
and
inc
adc
leave
mov
out
push
imul
mov
adc
push
dec
std
rcr
mov
movsb
mov
push
sub
dec
movsl
repz
dec
ljmp
imul
adcl
xor
and
inc
dec
iret
push
shlb
cmp
insb
jmp
inc
push
repz
out
xchg
lret
dec
add
imulb
scas
push
pop
rolb
mov
iret
add
stos
scas
loope
into
dec
jecxz
or
sahf
jl
mov
and
call
hlt
mov
iret
fucomip
into
rorl
cmp
xchg
add
jns
pop
mov
outsl
xor
mov
stc
es
in
repnz
pop
fs
stos
and
movsb
mov
adc
pop
orb
xlat
out
xchg
push
push
lea
jae
inc
movsl
in
out
sub
sbb
imul
int3
enter
mov
scas
push
outsl
push
pop
dec
jne
lret
testb
leave
mov
ja
hlt
pop
out
mov
sbb
push
ficoml
jne
sub
cmp
mov
xchg
jbe
lret
fidivs
sub
inc
arpl
stos
and
sub
rcrb
inc
outsb
xor
push
lods
cmpsl
movsb
outsb
btc
mov
lahf
mov
adc
lock
cs
pop
inc
gs
sub
lods
test
lods
popa
movsb
stos
outsb
sub
nop
cld
mov
jne
cmp
in
stos
mov
fstpl
xchg
jmp
mov
stos
or
xor
mov
pop
scas
push
insb
adc
dec
mov
mov
cmp
pushf
cld
call
fsubrl
andl
inc
mov
clc
xor
xor
mov
push
push
cs
vmovddup
insb
or
loopne
push
adc
and
jno
arpl
sub
pop
xor
pop
in
and
pop
mov
clc
xchg
adc
xor
lahf
adc
adc
lret
out
xchg
xchg
out
test
mov
lock
push
hlt
xchg
mov
cmpsb
jge
lea
add
xchg
jae
pop
in
xor
adc
or
repz
out
fnstsw
aas
sub
int
cmc
int3
lock
cmp
sub
jo
add
mov
cli
xor
push
mov
xor
dec
inc
push
adc
inc
adc
pop
movsl
fdiv
inc
int3
xchg
js
xchg
xchg
cmp
dec
dec
xchg
sarb
iret
fld
repz
scas
sub
add
mov
cmp
pop
adc
ljmp
sbb
inc
push
lea
push
adc
mov
movsb
sub
jne
pop
pop
jle
cs
ljmp
inc
push
adc
or
push
adc
inc
mov
fidivrs
mov
sbb
subb
lcall
addb
adc
add
jno
push
adc
ljmp
jecxz
hlt
push
dec
cmp
mov
pop
jg
adc
or
push
lret
test
sub
movsb
ja
imul
xor
adc
in
fcmovu
ja
dec
repnz
adc
sbb
cmp
adc
hlt
mov
push
inc
push
and
mov
rorl
imul
data16
fcomi
push
loope
stc
hlt
inc
int3
pop
in
mov
inc
ret
shrl
mov
loope
inc
out
roll
int
shlb
ja
push
push
out
adc
lret
cmp
loop
pop
test
pushfw
test
inc
or
push
xchg
loop
lods
nop
and
fiadds
pop
loopne
or
aad
imul
inc
sub
mov
ds
mov
lahf
jp
daa
cmp
inc
ss
bnd
cmp
std
sub
call
mov
out
ss
mov
stos
data16
xchg
repz
out
inc
mov
dec
jnp
ror
add
adcl
pop
pop
iret
pop
lcall
push
pushf
int3
jnp
jbe
jb
ret
std
shll
push
sar
cmp
cmpsl
inc
stos
mov
adc
push
int
sub
adc
lahf
outsl
data16
sub
xor
dec
lcall
xchg
inc
sub
ficomps
dec
jb
cmpsb
aam
or
into
jmp
divb
inc
clc
or
bound
jmp
stos
mov
jnp
cmpsl
cs
mov
mov
ljmp
fdivl
aam
adc
mov
jbe
mov
adc
repz
fistps
clc
shl
or
xor
push
fildll
dec
outsb
jl
aam
or
into
ljmp
mov
jp
and
ljmp
fdivs
rcll
push
mov
loope
mov
fsubr
mov
out
xor
sbbb
adc
divl
shr
sub
stos
fisubrs
dec
jbe
mov
adc
arpl
pushf
ja
jg
hlt
mov
out
mov
pop
cmp
icebp
and
mov
sti
gs
mov
out
inc
ror
sbb
call
fdivrs
push
adc
pop
dec
sahf
mov
out
clc
push
dec
loopne
addl
jl
push
adc
lea
mov
pop
int3
sti
sarl
add
stos
jg
cmpsl
bound
or
xchg
jo
test
sbb
push
adc
gs
mov
orb
push
dec
aam
stos
in
pop
and
mov
insb
mov
in
cmp
push
fsubs
dec
and
lods
push
arpl
push
out
insb
mov
jmp
sti
dec
push
jmp
shrb
into
cmp
in
pop
int
insl
lahf
lcall
mov
lods
xchg
mov
push
cs
pop
jbe
xor
inc
in
cmp
dec
add
popa
jecxz
inc
add
in
pop
jns
repnz
sahf
mov
jp
jnp
rcrl
lea
scas
push
mov
xchg
inc
ret
mov
sbb
popf
xchg
or
and
adc
sbb
pop
sahf
sub
fldenv
adc
popf
adc
fstl
mov
in
jbe
or
mov
mov
xchg
xchg
mov
inc
jmp
sbb
mov
mov
adc
sti
js
cmp
data16
insb
ss
lods
js
std
xor
jmp
fs
push
adc
mov
jne
push
insb
cmpsl
out
xor
ucomiss
push
mov
dec
push
aad
movsb
nop
mov
sub
in
adc
xor
int
mov
pop
out
xchg
aas
insl
shrb
pop
cld
lret
or
loopne
cmp
pushf
jns
lahf
or
negb
xchg
scas
scas
xor
pop
mov
push
pop
insb
fstpl
sbb
pop
sti
ljmp
outsb
stc
adc
aas
pushf
out
inc
notb
andb
sub
aam
lcall
sbb
sub
adc
lea
loope
pop
fisttps
jmp
sahf
imul
cmp
mov
cli
add
xchg
lock
mov
mov
cmpsb
sahf
movsb
dec
sahf
sbb
into
aaa
fwait
inc
shr
push
pushf
mov
aam
out
xchg
jno
adc
push
cmp
dec
frstpm(287
scas
push
sti
jg
or
int3
jo
xchg
test
imul
lahf
fistpl
push
inc
loope
test
stos
fisubs
mov
jne
int
insb
push
jnp
repz
jp
sub
xchg
cwtl
jns
push
scas
xor
inc
cmpsl
add
xchg
dec
jb
in
sbb
aaa
mov
and
xchg
pop
sub
and
ljmp
rorl
sbb
mov
test
adc
pop
dec
sahf
insb
sub
clc
push
cwtl
push
dec
lea
pop
mov
sub
ss
add
inc
xchg
jge,pt
hlt
and
cmpsl
inc
xor
inc
or
test
xor
dec
fwait
adc
orb
add
cmp
in
sub
rcrb
out
fdivrl
lds
adc
je
xor
and
pop
rol
mov
mov
int3
jg
fstps
sbb
sub
sbb
jl
push
adc
data16
cmpsb
gs
mov
stos
aas
sbb
cmp
mov
sub
and
pop
aaa
cs
sahf
cmp
add
adc
mov
cmc
call
xchg
js
push
iret
test
scas
mov
xor
clc
stos
cmp
mov
cli
hlt
call
xchg
flds
aad
and
cmp
mov
fidivl
loopne,pt
adc
int
jo
xchg
mov
push
es
mov
xor
inc
clc
mov
cmpsl
aaa
mov
jg
push
imul
pop
dec
dec
test
test
jo
jecxz
lret
stos
ja
sub
xor
out
inc
mov
mov
mov
jmp
push
mov
outsl
lahf
or
push
cmp
pop
inc
nop
mov
pop
mov
jmp
in
stc
or
je
jo
inc
mov
faddl
mov
push
inc
push
std
jge
mov
test
cmp
jae
loop
das
pop
jb
mov
lods
push
clc
fmull
sbb
imul
xchg
rorb
in
adc
dec
inc
fdivl
call
les
and
pop
and
cmp
xor
xor
push
insb
loope
pop
pop
and
xchg
push
std
add
and
call
dec
sub
outsl
adc
xor
popa
or
testl
push
filds
ds
push
xchg
fs
dec
fidivrs
dec
cld
mov
inc
sbb
arpl
sbb
jno
mov
sarb
xor
pop
adc
cmpsb
sbb
addr16
and
in
lea
sbb
pop
adc
add
sbb
adc
aad
aad
rol
sbb
adc
test
adc
lret
jae
jl
pop
adc
cmp
xor
jne
cmc
pop
adc
faddl
test
pop
adc
pop
adc
in
sbb
pop
or
inc
in
add
ss
int3
adc
pop
adc
in
lcall
mov
movsl
jl
pop
adc
testb
ret
inc
clc
mov
xor
sub
add
adc
pop
adc
clc
orb
stos
cli
out
sti
push
mov
push
shll
in
pop
adc
pop
cs
jl
pop
insl
lods
mov
testl
test
sbb
adc
ljmp
out
repz
jne
les
adc
fs
js
or
mov
pop
adc
mov
mov
je
cmp
daa
sub
loope
hlt
cld
pop
adc
jmp
mov
lods
loope
lds
or
in
testb
jo
cmp
inc
popf
movsl
jmp
out
adc
testl
iret
in
addr16
pop
adc
pop
int3
pop
or
pop
dec
mov
sub
or
and
mov
push
in
ret
fistl
jbe
push
or
mov
jo
arpl
xchg
int3
push
or
lret
jbe
addr16
add
push
sbb
push
fsub
inc
push
jg
push
mov
adc
xor
jl
ja
shl
fisubrl
lret
and
dec
fst
mov
push
pop
xorl
add
inc
lea
jg
stos
sub
shrl
jnp
je
les
cmp
leave
inc
fucom
inc
bound
mov
push
xchg
test
mov
gs
add
adc
addb
rolb
pop
cmpsl
push
stos
push
test
test
inc
adc
lahf
mov
leave
pop
adc
cmpsb
rorb
mov
hlt
insl
sbb
and
xchg
pavgw
sbb
stos
ftst
orl
cmp
popf
out
mov
stos
pop
nop
mov
pop
int
out
push
jecxz
stos
push
stos
push
and
push
les
xchg
and
fnstsw
xchg
fs
sbb
leave
pop
adc
loop
adc
les
cmp
cmc
push
add
sbbb
push
xchg
in
mov
jnp
mov
into
lahf
push
jge
cmc
gs
jae
cmp
fstl
push
stos
and
pop
aaa
cs
sahf
cmp
dec
clc
and
hlt
and
cmpsl
inc
xor
inc
or
test
or
idivb
rcrb
adc
pop
or
xor
mov
push
and
sahf
push
and
adc
sbb
lahf
mov
pop
in
jle
sbb
xchg
sub
xchg
fstl
xchg
dec
ficomps
xor
adc
icebp
rcl
pop
pop
xor
push
and
xchg
push
lock
into
adc
xchg
idivb
push
mov
xlat
sub
faddl
and
stos
mov
popa
lahf
xor
cmp
icebp
in
aad
xor
shrb
sub
cmpsl
push
mov
mov
imul
das
mov
cmp
nop
stos
fisubs
push
jns
mov
repz
in
je
jg
inc
or
pop
repz
push
inc
shll
inc
mov
cmpsb
jl
pop
outsl
jno
push
adc
orb
cmp
push
and
pop
adc
sub
xor
stos
sbb
aas
repnz
divl
imul
mov
sbb
push
pushf
sub
rcrb
insl
pop
mov
out
adc
xchg
sbb
test
jb
push
sub
adc
mov
insb
sbb
sub
jp
xor
mov
pop
sub
out
daa
jne
sbb
and
hlt
jns
xlat
std
shr
into
pop
movsb
daa
aas
dec
dec
cmp
outsb
xor
xchg
sub
sbb
pop
fdivrp
ljmp
shr
dec
mov
inc
aas
add
iret
mov
mov
mov
movl
push
adc
inc
insl
xchg
pop
loope
xor
or
push
cld
stos
lret
ljmp
or
ja
ljmp
sub
inc
jo
scas
jnp
lahf
adc
add
push
aam
clc
int
mov
cmpb
cltd
outsl
xchg
test
or
pop
adc
push
ret
stos
sti
outsl
pop
mov
popa
pushf
cmp
mov
repnz
andl
mov
mov
xchg
mov
cmc
shr
lds
bound
outsl
aam
lcall
loopne
adc
mov
adc
bound
sbb
cmp
fs
push
adc
jg,pn
jmp
lcall
sahf
push
inc
stos
and
add
sub
stos
loop
js
jb
mov
jnp
push
add
dec
lret
shll
sub
sub
pusha
xchg
mov
push
adc
and
into
mov
repnz
jl
jnp
pop
fbld
mov
popa
ret
insl
mov
mov
pop
cs
push
add
nop
push
push
inc
jo
scas
pop
xor
adc
data16
mov
inc
lea
xor
cld
add
stos
sub
shlb
dec
pop
lock
sbb
mov
jb
mov
mov
ficomps
shlb
out
out
clc
xchg
jmp
mov
lods
jg
ljmp
shll
pop
and
mov
repz
add
pusha
push
rcrl
inc
mov
hlt
fnsave
mov
shr
push
mov
xor
or
aad
inc
gs
xchg
sub
xchg
hlt
xchg
mov
push
adc
cmp
jae
and
mov
sarl
push
fcompp
push
adc
and
sbb
es
out
mov
inc
push
stos
ret
lods
hlt
ret
sub
repz
xor
cmp
pop
push
add
or
lods
fistpll
ds
pop
inc
arpl
mov
push
push
aam
push
in
stos
adc
add
cmp
ficoms
xor
mov
lret
and
and
lods
mov
clc
mov
int3
xor
cmpsl
mov
pop
jmp
in
add
inc
add
xchg
mov
outsl
test
mov
stos
sbb
pandn
add
rcll
mov
rclb
xchg
ss
and
jge
daa
dec
dec
inc
insb
or
movsl
push
test
lods
sahf
popa
ja
orl
lret
xchg
mov
adc
jmp
push
rol
cmpsl
scas
lret
and
fs
std
cmp
fdivl
adc
aad
js
dec
repnz
adc
js
or
mov
out
loopne
xorb
dec
inc
cmp
mov
cltd
in
es
inc
add
roll
mov
scas
mov
inc
jne
mov
or
repnz
cmc
aas
loop
mov
sub
into
mov
mov
daa
dec
stc
cbtw
add
adc
pop
imul
outsb
sub
mov
jae
jnp
fldz
sub
frstor
pop
insb
fildll
movsb
dec
jb
divl
loopne
mov
cmpsb
cmp
icebp
arpl
pop
pop
fldpi
push
sub
movsl
jp
inc
data16
jns
cwtl
or
mov
push
pop
xchg
mov
test
mov
jb
or
das
shrl
xor
fmull
adc
fld
stos
jmp
jle
int
ret
or
cli
and
adc
movsb
in
test
mov
xor
ja
repnz
cli
jp
icebp
xchg
ret
xchg
mov
adc
aas
xor
sub
das
push
jae
loope
cwtl
dec
ljmp
jo
adc
jns
adc
out
sub
mov
dec
dec
cmp
sbb
pop
aaa
jmp
pop
adc
ja
jo
cs
repnz
adc
int3
outsl
arpl
cmpsb
xchg
sbb
and
ja
packuswb
outsb
rorb
bound
addb
in
adc
push
pop
in
pop
test
add
push
adc
gs
push
sbb
push
cmp
out
rorl
pop
lahf
and
adc
jge
mov
and
rcrl
das
push
mov
xchg
sub
push
and
xchg
cmp
outsb
sub
sbb
daa
inc
out
cli
ja
sub
mov
inc
rcrl
loop
lahf
dec
imul
int3
xor
or
sbb
and
push
shll
movsb
push
cmpsl
dec
sahf
data16
loop
inc
push
or
inc
int3
jl
lods
adc
inc
gs
in
dec
inc
push
adc
jae
jnp
add
lret
inc
mov
jge
xor
cwtl
cmp
sub
inc
aad
out
and
push
sbb
adc
stos
jns
popa
dec
je
out
add
jecxz
mov
lea
push
adc
push
into
lahf
cmp
pop
out
mov
xchg
cmp
stos
push
arpl
inc
push
adc
sbb
mov
mov
bnd
fprem1
clc
jb
lret
pop
outsb
pop
or
popa
iret
sarb
jp
add
enter
mov
xchg
jnp
add
sbbb
test
cmp
sub
adc
js
cmpsl
sub
adc
addr16
call
adc
cmpsl
push
test
cmp
dec
inc
push
adc
inc
jae
jge
sbb
cmp
and
mov
sarb
push
inc
sub
or
push
mov
test
sbb
mov
imulb
ret
mov
fimull
cmp
mov
sbb
test
jmp
and
pop
aaa
cs
sahf
cmp
mov
push
adc
fiadds
mov
sub
and
mov
popa
sahf
pop
mov
sbb
sarb
jbe
xor
push
dec
jno
mov
sub
fsubr
std
je
jbe
adc
adc
test
scas
arpl
push
adc
cmp
test
push
stos
rcl
sbb
fdivrs
jns,pt
dec
inc
push
adc
push
inc
adc
cli
dec
rorb
mov
xor
sarb
ret
enter
rcrl
and
inc
inc
cmp
push
jge
stos
dec
and
insl
or
out
sub
adc
add
pop
dec
xchg
inc
repnz
adc
data16
insb
jl
sbb
inc
mov
aaa
dec
loop
push
pop
ficompl
es
inc
sbb
lcall
cli
adc
and
jnp
mov
std
mov
xchg
outsl
inc
enter
mov
jl
ljmp
push
adc
xor
inc
into
in
xchg
push
xor
pop
shlb
mov
hlt
push
scas
mov
mov
pop
xchg
jnp
jo
ficompl
xchg
lods
push
fsubs
negl
cmp
cmp
jnp,pn
jae
push
ljmp
push
fwait
dec
push
jae
mov
fisubrs
jnp
dec
out
cmp
aam
mov
movsl
in
mov
dec
cmp
pop
sti
leave
andl
or
ret
int
mov
mov
add
arpl
mov
xchg
lret
int
ss
cmovg
andb
pop
daa
dec
daa
dec
dec
dec
aaa
sti
xlat
xlat
mov
sbb
mov
das
cli
pop
xchg
cmp
xchg
insl
lret
in
mov
jmp
mov
mov
pop
and
call
cld
inc
mov
xchg
mov
fdivr
in
pop
das
push
jmp
jge
xchg
int3
lods
adc
cmp
dec
int3
imul
cli
fistpl
or
in
inc
push
adc
inc
cmp
mov
bound
mov
nop
test
jb
inc
aas
in
mov
clc
addr16
arpl
cld
mov
lock
dec
pop
mov
imul
push
sub
add
push
cld
jg
or
ret
hlt
call
in
push
stos
fsub
pop
inc
add
jnp
out
push
hlt
pop
jne
mov
jmp
stos
push
arpl
adc
or
lock
mov
bnd
sub
gs
cmpsb
add
pop
ret
xchg
cmp
and
stos
cmp
jne
jge
shll
cmp
and
mov
lods
int
leave
mov
pop
add
inc
mov
cmp
pop
gs
cmp
sub
fisubrs
push
cmpsl
sbb
mov
shl
push
mov
mov
nop
hlt
gs
cmpsl
push
add
insb
mov
cmp
jp
cld
push
xor
adcb
add
dec
mov
or
or
mov
stos
addr16
sbb
in
rclb
push
filds
sub
xchg
outsl
jl
int3
rorl
repz
push
out
xchg
cltd
repz
fistps
mov
push
mov
ret
jl,pn
mov
push
jmp
ljmp
fwait
int
or
xchg
stos
push
lods
pushf
cmp
int3
out
and
adc
pop
repnz
in
mov
mov
push
insb
dec
xchg
daa
addl
and
and
or
xor
into
push
xchg
xchg
js
mov
inc
dec
icebp
cmpsl
aas
rolb
add
and
xor
and
icebp
clc
data16
cmp
inc
cwtl
mov
jle
cmp
mov
movsb
inc
push
stos
stos
in
cld
fcomps
imul
hlt
or
sti
add
bound
das
mov
test
mov
sub
or
jbe
jns
scas
mov
pop
cltd
inc
push
adc
add
shr
push
adc
cmpb
out
push
push
test
or
fiadds
and
test
mov
mov
mov
xor
adc
xchg
outsl
sub
mov
xor
xchg
iret
cld
adc
xor
add
lods
cmp
xor
mov
out
fsubr
mov
jb
sub
xor
mov
shlb
scas
sahf
sbb
fdiv
mov
mov
adc
pushf
mov
push
sub
xchg
cmp
sub
data16
dec
insb
test
mov
push
loopne
in
jnp
js
and
add
inc
insb
or
push
lods
push
cmpsl
push
pusha
subb
inc
push
adc
inc
fwait
call
mov
gs
mov
shl
rol
stos
cmp
push
push
movsb
aas
sarb
sub
sahf
lods
in
out
adc
adc
pop
mov
out
xor
jno
out
imulb
ret
cmpsl
roll
xchg
mov
xchg
sbb
sub
xor
dec
or
jl
push
adc
add
mov
into
push
push
pop
inc
and
enter
test
push
adc
adc
pop
bound
popf
fwait
cmp
js
aaa
into
lods
push
rolb
and
imul
jb
addr16
jns
lea
xor
movsb
and
jbe
sub
sti
subl
mov
shlb
scas
mov
cltd
fiaddl
pop
adc
jb
jle
arpl
jle
jno
ja
shl
pop
mov
lahf
mov
imul
js
xchg
sahf
loopne
icebp
fimuls
cwtl
scas
lock
xor
jb
adc
sbb
shrb
icebp
mov
stos
mov
and
ficompl
mov
xor
mov
fnstsw
add
data16
mov
int
fsubl
push
push
xor
push
or
push
in
bound
arpl
fcomps
jne
enter
aas
stos
stos
fistps
test
push
or
arpl
out
adc
mov
adc
sub
int
push
pop
xchg
mov
stc
fsubrs
adc
fwait
inc
mull
idivb
push
fimull
sarb
lods
int
hlt
cmp
cmp
jp
mov
nop
les
adc
jmp
test
add
jae
xchg
movb
aaa
pushf
xor
jecxz
call
cltd
dec
jb
fcoms
adc
mov
sub
out
inc
mov
divb
int
ds
or
and
addr16
into
aad
cmc
in
fdivl
ss
inc
fnstenv
cmp
imul
loope
scas
mov
lock
jbe
jns
out
mov
push
jnp
leave
xor
lods
inc
in
es
rorl
sbb
adc
cmp
mov
pushf
pop
xor
movsl
loop
mov
push
pop
xor
fdivrl
std
or
sti
pop
xchg
inc
jge
loop
arpl
sbb
cmpsl
fisubrl
xorl
arpl
dec
jmp
rclb
movsl
fsubrs
adc
push
adc
ret
adc
jo
add
sub
dec
sbb
push
push
adc
xor
cmp
lahf
push
mov
fs
inc
outsl
test
popf
mov
sbb
mov
cmpsb
aas
sub
mov
jecxz
and
dec
pop
mov
stc
or
xor
push
adc
lcall
iret
xchg
mov
xlat
push
and
jle
pop
add
mov
pop
fisubrs
add
push
in
inc
push
ja
bound
inc
mov
lret
inc
cmp
mov
push
decl
mov
aam
je
adc
popl
push
cld
in
push
hlt
das
push
dec
and
sahf
xlat
xor
sahf
mov
dec
mov
cmp
sub
xchg
mov
or
je
xchg
pusha
push
out
push
les
ret
fwait
add
mov
insb
leave
jecxz
ficoml
push
add
or
fistl
test
push
and
adc
aam
mov
adc
xchg
sbb
sub
pop
xchg
and
inc
adc
jno
in
call
fmuls
clc
out
imul
pop
movsb
ficompl
xor
loop
mov
and
es
sahf
leave
xlat
loopne
push
adc
and
bound
addr16
jbe
in
lret
stos
test
fcmovnu
mov
enter
xchg
loope
mov
cmp
pop
push
clc
dec
jo
adc
arpl
mov
jo
adc
test
dec
sbb
dec
push
cli
pop
xchg
mov
idivb
xor
and
pop
adc
or
std
cmp
cld
leave
lods
sar
shlb
mov
imul
loope
addr16
mov
es
outsl
dec
xchg
adc
add
mov
jbe
jecxz
cs
xchg
add
mov
or
ds
std
add
mov
addr16
jle
jno
ja
shl
ficoml
test
jle
jle
sub
pop
in
sub
mov
movsl
jmp
imul
testl
push
adc
pop
mov
adc
pusha
jp
out
sbb
jmp
iret
lahf
mov
ror
mov
adc
pop
idivb
adc
cmp
mov
idivb
sub
sub
dec
mov
fwait
test
hlt
ret
mov
xchg
arpl
mov
or
push
ficoms
adc
test
loop
adc
cmpsb
xchg
mov
rorl
or
dec
jo
adc
push
stos
push
sub
dec
pop
adc
aam
ss
lahf
jge,pt
mull
jnp
mov
jo
adc
sbb
pop
popa
dec
out
or
pop
jns
cwtl
inc
shll
xchg
mov
push
and
mov
stc
fsubrp
shll
js
adc
jnp
lahf
pop
jnp
clc
sbb
sbb
inc
push
ljmp
xlat
aam
mov
frstpm(287
and
adcb
cs
shlb
mov
popa
mov
push
sub
ds
sub
jae
shufps
jge
dec
cmc
scas
cmp
xor
mov
aas
stos
ftst
iret
dec
sbb
test
mov
jo
adc
sub
xchg
js
cmp
cli
cmp
adc
inc
clc
mov
nop
cmc
gs
ja
lods
in
xchg
xchg
push
daa
sbb
mov
dec
aaa
scas
push
hlt
xchg
cli
hlt
call
inc
xor
push
hlt
sbb
xchg
mov
cvtps2pd
sahf
popf
hlt
int
ds
gs
cmc
ret
adc
adc
aam
addl
fs
sbb
cmpsl
aad
mov
out
cmp
sub
mov
pop
jge
adc
mov
mov
and
mov
sti
jnp
push
aad
push
adc
push
in
jae
xchg
and
sbbl
adc
ftst
stos
and
cltd
mov
out
cmp
out
andl
or
mov
mov
stos
shl
sti
pop
pop
mov
xchg
sbb
filds
arpl
dec
fucom
mov
push
sbbl
or
xchg
and
data16
stos
xchg
repnz
sbb
mov
inc
movsl
pop
cmp
pushf
fbstp
sbb
popa
inc
aas
add
adc
bnd
loop
js
sub
pop
call
push
cmp
test
mov
jg
xor
push
imul
jbe
icebp
test
xchg
roll
icebp
mov
mov
cmp
jae
xchg
jbe
mov
xor
xchg
inc
popa
push
pop
mov
test
test
pop
fistpl
sbb
rcrl
mov
jmp
inc
mov
shrb
cli
addr16
lods
mov
and
cmc
dec
clc
mov
dec
mov
or
xor
repnz
aad
fmull
dec
sbb
clc
mov
dec
in
ss
fsubr
lcall
jnp
jno
fucomi
pop
xor
push
adc
nop
dec
mov
xchg
pop
adc
jmp
lods
mov
push
rol
cmpl
jbe
mov
or
scas
jp
add
add
mov
or
or
cwtl
push
adc
clc
loop
mov
add
pop
bound
leave
ret
pop
and
push
mov
push
filds
adc
xor
ja
jno
ljmp
nop
inc
loop
sub
sub
loop
xor
loopne
inc
and
add
jbe
pop
call
cwtl
push
adc
mov
dec
mov
add
stc
js
cmpsb
into
popf
mov
cli
push
cld
js
sub
movsb
ss
enter
mov
sub
fmul
mov
mov
push
jge
add
xchg
mov
push
xor
or
xor
xor
popa
push
addb
mov
lret
inc
push
push
stos
push
cmp
into
mov
and
cltd
inc
jno
add
ret
xorb
cs
mov
filds
and
jns
loop
into
aad
cmp
and
dec
sbb
sbb
jl
hlt
mov
scas
add
icebp
pop
adc
ljmp
push
hlt
mov
addb
jb
lret
daa
sbb
in
scas
movsb
cmpsl
ljmp
mov
xor
addb
or
xor
out
inc
cmp
mov
insb
add
cwtl
add
push
add
lods
nop
push
push
inc
insl
mov
idivb
and
outsl
xchg
arpl
fiaddl
or
pop
in
mov
inc
push
pop
in
pop
and
gs
push
adc
insl
fwait
jmp
pop
add
lret
ror
xchg
repz
stos
ret
push
adc
shr
xchg
repnz
inc
lock
ss
scas
rcl
push
mov
aam
sbb
sbb
jo
adc
mov
mov
orl
sub
add
loop
fwait
aad
rcll
and
sbb
inc
adc
addb
lods
loopne
xchg
push
out
cltd
mov
or
cwtl
push
adc
dec
loope
or
pop
out
xchg
add
cmp
and
mov
mov
repz
mov
xor
jne
mov
orl
mov
inc
test
pusha
mov
add
sub
jl
cmc
jmp
repz
imul
adc
repnz
adc
ret
fs
adc
in
cmpsb
and
pop
ret
mov
ja
and
ret
test
jnp
fstps
push
sbb
push
divl
mov
pop
adc
mov
cmp
test
cmp
jge
int3
fldt
movsb
lret
cmp
jbe
cld
scas
mov
loopne
xor
mov
or
pusha
sub
add
pop
cmc
adc
pop
adc
mov
jge
pop
xor
or
mov
fisubs
jecxz
sti
jmp
or
adc
notl
add
pop
adc
cmpsb
mov
sub
mov
adc
xchg
adc
pop
fimull
pop
adc
out
or
hlt
adc
cltd
mov
aad
enter
in
or
adc
or
icebp
lret
jae
mov
cltd
insb
mov
adc
faddl
mov
in
adc
in
sbb
add
adc
fmul
add
pop
adc
in
lcall
mov
movsl
js
or
ret
dec
jge
dec
clc
push
push
dec
das
dec
mov
pop
or
sub
push
adc
ljmp
dec
sub
adc
fcomps
sub
ja
gs
jno
cmp
push
pop
xor
mov
pusha
cmp
mov
dec
inc
cmpl
jno
insb
fisttpl
sub
xchg
or
or
cmp
push
or
data16
icebp
add
or
and
pop
sbb
add
pop
in
out
lods
leave
outsb
sub
push
push
push
mov
cmpl
mov
cwtl
fimuls
daa
sub
jg
sbb
mov
pop
pusha
push
mov
xor
jecxz
int
addr16
ss
sub
out
or
dec
push
adc
mov
push
mov
and
pop
adc
sarb
push
jl
mov
push
adc
dec
fwait
jge
arpl
testb
mov
cmp
sub
push
adc
ret
xchg
adc
and
sbb
and
adc
mov
xchg
movsl
dec
jae
aaa
xchg
lock
adc
std
pop
mov
nop
jle
inc
push
push
scas
pop
and
mov
xor
xor
jg
frndint
and
xor
out
idivl
mov
ljmp
push
and
call
and
pop
adc
add
fists
jl
or
push
adc
add
mov
jae
pop
cmp
jno
mov
mov
mov
mov
ljmp
cmc
hlt
call
out
loope
mov
push
pop
outsl
push
pop
dec
jmp
adc
out
adc
incb
clc
popf
fcmovne
in
pop
adc
xlat
push
data16
mov
pop
jae
iret
sbb
addr16
jno
shll
push
adc
sbb
mov
notb
lret
movups
push
adc
shlb
stc
ftst
xchg
dec
push
pusha
xchg
shrl
mov
add
mov
lock
adc
out
inc
clc
mov
arpl
gs
sahf
jmp
in
xchg
sub
sbb
in
pop
clc
adc
mov
imul
fdivrl
push
es
call
cltd
int
mov
pop
adc
sbb
pop
sub
hlt
cld
pop
adc
incl
into
pushf
xlat
lret
pop
adc
and
xchg
shrl
mov
movsl
in
pop
adc
cli
pop
pop
cld
repz
adc
cs
lcall
mov
repz
adc
ja
push
addr16
sub
fcomps
jmp
push
sub
xor
pop
mov
push
xor
xor
sarl
ucomiss
push
pushf
popf
std
in
loopne
pop
adc
xchg
stos
bound
push
aaa
or
push
push
pop
fcompl
mov
cmp
inc
lods
jg
iret
jmp
arpl
cmp
into
das
xor
and
pop
adc
and
sbb
aam
ret
mov
and
ret
mov
lock
dec
pop
out
fldt
xchg
jle
frstor
add
xor
cwtl
adc
clc
sub
inc
aas
add
push
arpl
sbb
rcr
fucom
sarb
aad
xlat
jo
xor
frstor
fstps
inc
mov
cmovl
inc
lods
notl
in
out
sti
fldt
mov
or
mov
cmc
inc
repnz
fisttpll
ret
shrl
lea
xlat
in
rcll
int3
shll
pop
jae
scas
dec
out
sbb
sub
iret
decb
or
je
leave
leave
sarb
pop
xor
push
pop
sub
sti
sahf
out
push
dec
inc
lret
mov
into
sbb
das
xchg
arpl
jo
stos
mov
aam
iret
push
ds
and
pop
adc
outsl
xchg
add
test
xor
jb
sub
mov
xor
cmc
sbb
push
mov
pop
hlt
pop
adc
push
pop
mov
adc
add
mov
std
xor
mov
mov
xor
addr16
mov
push
push
int3
pop
in
adc
aaa
stc
jl
mov
push
pop
sarb
cltd
fs
dec
iret
insl
mov
shl
in
or
mov
push
add
repnz
adcb
cmp
dec
pop
mov
js
jmp
cltd
imul
icebp
or
xchg
jecxz
jne
xchg
add
push
adc
in
dec
cmpsb
mov
test
xor
xor
or
push
loope
jmp
in
sub
xchg
bound
jae
iret
adc
lea
inc
inc
fdivs
push
jno
push
adc
jb
sahf
mov
leave
pop
adc
mov
pop
jp
out
mov
jbe
mov
adc
outsl
pop
cli
pop
adc
cmp
mov
nop
mov
push
lods
sub
cmpsb
mov
daa
push
sub
sbb
pop
mov
js
cmp
sub
and
pop
pusha
dec
clc
xor
ret
pop
in
add
cli
test
mov
push
cmp
out
adc
mov
sbb
adc
inc
nop
or
movsb
ficomps
sbb
push
dec
pop
mov
pop
adc
arpl
cmpb
dec
and
out
pop
push
stos
ljmp
bound
add
push
adc
stos
sbb
pop
pop
or
stos
lret
enter
std
pop
test
sub
dec
aad
add
adc
and
inc
lea
or
test
test
push
adc
xor
lahf
mov
leave
pop
adc
dec
push
mov
pop
push
daa
sbb
loop
pop
pusha
mov
jae
iret
ja
mov
or
sub
jno
lds
pop
sub
push
sub
xor
inc
leave
addb
push
loopne
test
sub
pop
mov
in
fwait
jae
mov
jno
es
aam
fcomps
fcomps
lahf
jb
pop
push
adc
adc
cli
add
fcomps
jp
mov
testl
dec
jns
sar
fcomps
jg
jo
rcrb
push
push
xor
lea
fcomps
pop
mov
sbb
test
test
adc
pushf
mov
jp
sbb
inc
int3
mov
cmp
fistpl
and
ljmp
loopne
imul
test
push
bound
xor
push
or
pusha
add
loope
jle
jg
pop
imul
xchg
sbb
or
clc
add
les
xor
sbb
sbb
inc
mov
mov
pop
adc
jg
pop
call
push
test
mov
mov
aas
rclb
cmp
fdivs
sbb
leave
pop
adc
fsubrs
dec
push
cmp
sahf
push
stos
and
popa
test
or
jbe
pop
js
mov
push
shrb
mov
jle
jb
pop
inc
ret
movsl
inc
or
adc
outsb
fdivrs
pop
stc
dec
aam
mov
push
xor
push
pusha
or
fmuls
xlat
ja
mul
xchg
mov
push
imul
cmc
xor
rcr
xlat
ret
lcall
lret
scas
pop
ret
in
sub
sahf
icebp
dec
in
push
js
jmp
shrb
rorb
jb
icebp
xchg
sub
adc
dec
incl
negl
cli
adc
pushf
scas
iret
sub
je
rcr
jg
js
inc
dec
or
sub
cmp
push
push
inc
daa
sub
mov
mov
jns
gs
jbe
inc
cli
loop
pop
add
jbe
jmp
jns
repnz
pop
ds
mov
lock
push
addr16
out
inc
pop
mov
mov
mov
pushf
call
dec
push
adc
stos
imul
pop
push
push
inc
and
pop
adc
lahf
fistl
movsl
and
jns
loop
xchg
cmp
push
sbb
in
xor
pop
inc
lea
bound
shl
pop
adc
in
dec
or
test
xor
aaa
nop
mov
pop
in
push
loop
pop
rol
cwtl
push
adc
ljmp
mov
testl
add
popf
mov
fcomps
jle
and
push
lods
iret
push
or
or
ret
xor
cmp
jg
ljmp
aam
sbb
es
pop
mov
ret
arpl
dec
xor
subl
stos
and
cmp
mov
stos
sbb
addr16
or
daa
sub
popa
cmp
push
stos
ret
cs
adc
pop
test
inc
shlb
lock
mov
in
add
daa
sbb
fidivrs
jl
aam
pop
outsb
ret
jge
jg
and
scas
cs
xor
sbb
push
stos
add
fcomp
imul
xor
adcb
xchg
dec
mov
pop
test
fsub
ja
jnp
test
sbb
mov
iret
leave
imul
sub
ljmp
pop
pop
cmp
enter
xor
mov
cwtl
xor
outsl
aam
adc
test
imul
push
inc
mov
sbb
xor
gs
aad
sub
pushf
mov
out
clc
lds
jle
mov
lret
inc
jb
bound
mov
fsubrl
dec
test
mov
sbb
mov
shr
clc
int
xlat
clc
iret
je
fidivs
mov
xchg
and
mov
shrb
enter
jae
test
call
and
mov
fldt
lahf
xchg
imul
jo
in
nop
jg
into
repz
jecxz
repnz
sub
scas
in
mov
sub
and
rcl
mov
out
insl
mov
andl
mov
bnd
lret
mov
and
inc
loope
and
jno
xor
dec
outsl
jo
int3
cmp
icebp
pop
cld
xor
mov
xchg
movsl
stos
sbb
lods
sbb
push
movsl
and
fstl
cmc
xchg
jnp
bound
sbb
xor
scas
icebp
mov
xlat
sub
push
fucom
dec
adc
pusha
movsl
mov
loope
sti
jle
mov
scas
or
ficoml
test
test
mov
cmp
bound
jns
xchg
or
lds
fs
jmp
add
mov
xor
or
in
push
and
mov
int
add
push
add
mov
xchg
lahf
jbe
push
mov
test
mov
clc
mov
leave
sub
fdivrl
clc
sbb
mov
and
shll
jg
xor
xchg
ss
jmp
push
pop
cs
mov
push
jne
stos
ret
push
adc
das
pop
add
clc
ss
xchg
push
sbb
adc
cwtl
jne
add
std
mov
mov
jp
cld
jb
sar
fmull
shll
std
mov
daa
cmp
and
push
hlt
dec
mov
out
mov
ret
cltd
xchg
cmpsb
cmp
jp
jae
in
int3
mov
xor
dec
in
daa
test
cs
adc
andl
xor
aas
jl
div
pop
add
push
int3
sub
fsubl
xchg
mov
fnstsw
je
push
insb
ret
lods
mov
jmp
add
dec
sti
aaa
cmpsl
add
inc
scas
mov
lret
loop
fsubp
cmp
sub
xchg
imul
adc
pusha
sar
in
pop
dec
sbb
in
imul
shlb
mov
es
sbb
add
jp
cmpsb
lea
sbb
jae
jle
fcoms
out
lahf
rorl
sbb
add
add
inc
cwtl
jnp
test
pusha
jae
divl
push
int3
movsb
icebp
hlt
mov
int
fcmovnbe
imul
hlt
cmpsl
pop
test
gs
xchg
stos
jg
cli
push
xchg
cmp
fs
in
scas
movsl
dec
sahf
cmp
inc
clc
mov
jno
loopne
out
scas
fdivl
lds
inc
insl
hlt
push
test
movntps
aam
xchg
in
loop
sub
fwait
dec
jb
lret
and
mov
cmpsl
ror
jnp
arpl
enter
stos
jmp
xchg
js
mov
xor
pop
test
hlt
mov
inc
push
adc
mov
hlt
imul
rcrb
int3
sti
sarl
test
push
or
clc
or
lods
sub
inc
jb
fs
filds
es
jmp
test
sbb
adc
mov
iret
sbbb
push
icebp
pushf
push
mov
out
test
jae
iret
ja
lods
sti
hlt
and
sub
aad
add
fistps
loop
jbe
rorl
push
les
xor
jb
movsl
jmp
repnz
push
in
push
stos
push
insl
lea
pushf
fcoms
sub
popa
xlat
js
or
shll
push
adc
std
aam
push
and
arpl
inc
fisubs
inc
xlat
jge
cs
sbb
enter
fistpl
cltd
dec
lcall
bound
and
sbb
bound
sub
clc
add
test
enter
sarb
xchg
shlb
adc
int3
push
mov
inc
ret
pop
sub
mov
xor
fimull
and
add
push
int
xlat
stos
les
jo
out
adc
shll
fistps
mov
test
int
es
dec
mov
sub
xchg
push
aas
repz
mov
xor
jbe
shll
pop
lods
sbb
sarl
pop
imul
cmpsb
sahf
ret
repnz
mov
in
jne
lahf
xchg
inc
fnstsw
test
mov
pop
filds
jg
jns
pop
jge
fistl
in
int
enter
lods
subb
adc
cld
lods
fcomps
lahf
mov
cmc
imul
sbb
sub
insb
push
loope
sub
push
lods
fwait
clc
lods
not
cmp
push
adc
js
lahf
loope
inc
shl
pop
add
mov
aas
jne
sti
inc
dec
add
lahf
pop
orb
cmpsl
mov
stos
int
push
sub
cmp
pop
stos
lret
mov
push
add
lock
mov
cmpsl
adc
push
lret
ss
test
loop
ret
xlat
cmp
xchg
enter
aas
jne
stos
cmp
mov
dec
mov
xchg
mov
adc
jae
rcr
jecxz
loopne
adc
mov
pop
lea
xlat
out
or
mov
cmp
or
dec
int
outsb
push
or
in
ja
add
je
mov
aaa
test
and
jne
or
rorb
shr
insl
leave
jb
divb
add
movsb
push
in
stc
mov
adc
sbb
inc
pop
cltd
jmp
in
mov
in
sbb
repz
es
lret
outsl
in
gs
popa
xchg
je
cs
jae
push
adc
int
out
fsubr
and
mov
xchg
iret
call
sub
cmpsb
push
fbld
cmp
mov
shlb
mov
lods
imul
xchg
pop
mov
sti
inc
int3
fwait
aam
orb
cmp
shrl
or
imul
cmpsl
push
stos
push
test
jge
push
adc
mov
idivb
inc
fimuls
mov
fsubr
mov
call
and
jnp
jecxz
roll
dec
loope
insb
xorl
mov
mov
or
pop
jg
fdivrl
hlt
adc
xor
xor
hlt
xor
pop
cmpsl
dec
sahf
cmp
xor
ret
je
divb
jp
pop
mov
mov
notl
test
sbb
or
in
jmp
add
daa
addl
lock
mov
sbb
inc
mov
in
push
sbb
mov
push
stos
faddl
cmp
test
pusha
sar
loopne
adc
int
dec
mov
mov
pop
repnz
out
xor
and
add
loopne
dec
int
or
push
fiadds
push
es
mov
sub
sbb
or
push
addr16
inc
fldenv
cmp
pop
inc
inc
sub
mov
arpl
and
mov
iret
popf
fst
lods
push
pop
and
and
cmpsb
dec
jb
cli
pop
aad
fiaddl
das
call
mov
in
push
mov
clc
mov
inc
push
adc
dec
mov
int
insl
hlt
mov
inc
fmull
loope
pop
fsubrp
mov
in
or
jg
xor
xchg
mov
mov
push
inc
mov
div
mov
adc
pop
repnz
loopne
mov
das
sub
add
aad
inc
mov
mov
and
xchg
inc
push
adc
add
insb
ljmp
or
dec
iret
dec
in
int
orl
push
xchg
cs
cmc
mov
repnz
inc
insb
in
mov
add
add
stc
add
and
lock
mov
shlb
lock
movsb
mov
pusha
int
and
sbb
pop
mov
nop
adc
ja
ja
push
and
out
fwait
inc
push
adc
addr16
cltd
imul
sbb
lret
outsl
icebp
mov
mov
pop
ficoms
mov
sub
push
arpl
adc
outsl
pop
sbb
mov
movsb
pop
fnstenv
andb
dec
addr16
sbb
sbb
jg
scas
add
leave
mov
mov
pop
test
adc
arpl
orl
leave
pop
adc
out
ja
data16
fisubs
and
sub
les
lret
aaa
add
sbb
cs
subb
stos
xchg
xchg
movsl
xchg
adcl
push
xchg
add
jnp
aam
clc
imul
mov
inc
push
lds
fnstsw
push
icebp
mov
addr16
xor
fisubl
icebp
int
mov
adc
enter
push
movsl
addr16
push
and
dec
mov
cli
std
lods
inc
push
adc
inc
outsb
mov
and
pop
adc
out
lahf
fsub
mov
xor
lods
jge
add
jne
ljmp
push
mov
dec
shlb
lock
push
and
das
out
fsubrl
repnz
push
mov
addr16
pop
xor
cmp
cli
push
out
mov
jl
in
cmp
and
push
sbb
adc
arpl
mov
movsb
cmpsb
lret
enter
pop
out
std
daa
adc
mov
cld
arpl
or
add
mov
dec
mov
cltd
pop
fisubs
push
xchg
fucomp
repz
ds
push
mov
push
mov
lods
jne
or
xchg
or
cmpsb
and
loop
into
aad
add
and
sbb
adc
adc
sub
pop
lds
lret
cmc
cmpsl
stc
sub
xor
out
fdivl
ds
xchg
ja
mov
hlt
and
test
dec
mov
cld
mov
sbb
sbb
jae
pop
arpl
test
inc
sahf
cmp
enter
fistpl
inc
lods
sbb
and
cmp
and
mov
inc
shlb
gs
sub
addb
and
lret
and
pop
dec
enter
test
xor
sub
pop
int
push
mov
push
add
popf
dec
mov
xchg
and
push
in
inc
fcmovb
sub
adc
bound
mov
sub
xchg
arpl
movl
cmc
call
and
pop
adc
add
fists
jl
adc
pop
adc
insl
cli
mov
adc
cvtps2pi
push
mov
imull
sub
mov
sbb
cmc
shrl
jns
add
fnsave
push
stos
stc
ds
popa
xchg
and
lea
movsl
dec
js
cmp
xchg
jns
cmp
inc
push
stos
and
sbb
mov
pushf
mov
sub
dec
xor
add
ret
jecxz
mov
pop
mov
mov
and
fwait
repz
inc
push
adc
repnz
shrb
and
pop
adc
test
sub
in
adc
xor
out
mov
push
inc
mov
push
adc
mov
push
mov
leave
jb
pop
adc
push
adc
xchg
js
mov
push
xchg
cmpsb
sub
push
test
fwait
jl
out
lods
cmp
in
in
sbb
xor
pop
or
push
mov
std
inc
decb
clc
xor
mov
pop
aas
shrl
and
mov
imul
mov
cmp
adc
pop
push
mov
stos
pop
and
sub
movsb
vmread
sbb
jo
ja
or
subb
ds
outsl
xchg
cmp
mov
lods
sub
sbb
adc
ds
or
mov
loopne
imul
and
or
out
push
xchg
or
adc
outsl
mov
repnz
inc
rcr
push
movsb
xor
insb
xchg
int
sub
es
mov
xchg
mov
jb
and
ficomps
inc
out
cmp
and
inc
push
adc
mov
mov
leave
pop
adc
lods
and
or
adc
mov
mov
xor
sti
in
repz
push
adc
adc
jp
test
xchg
cmc
mov
clc
out
movsl
adc
mov
cmc
repnz
or
sub
lcall
scas
scas
in
push
cmc
or
jl,pt
pop
add
sub
data16
xor
xchg
sarl
aaa
and
mov
jg
dec
sbb
mov
mov
jbe
roll
mov
add
sbb
mov
adc
pop
loope
loop
adc
mov
push
or
mov
pop
lock
add
adc
pop
mov
ret
stos
and
xchg
icebp
or
xor
shrb
jne
push
cmp
push
adc
mov
sbb
adc
jne
mov
orl
andl
jle
sahf
mov
adc
aam
sub
jge
hlt
arpl
imul
xchg
scas
push
adc
push
adc
sub
lahf
fldt
leave
pop
adc
mov
jle
out
movsb
outsb
push
dec
inc
sahf
cmp
inc
mov
mov
rorl
pop
xor
sbb
mov
ret
arpl
sahf
xor
leave
inc
add
loop
push
mov
sub
movsl
inc
jg
and
pop
faddl
sbb
mov
mov
xchg
fsub
subb
dec
jbe
jo
adc
daa
mov
push
sbb
maxps
in
xchg
lods
fisubs
push
pop
pop
adc
pop
repnz
lea
int3
outsb
lock
cs
pop
inc
gs
aas
xchg
sub
aas
stos
ftst
jmp
adc
sub
adc
xor
stos
dec
mov
mov
pop
fwait
jge
outsb
add
nop
adc
andb
mov
xor
fcmovb
jns
push
loop
pop
adc
insl
and
push
mov
adc
test
sahf
jge,pt
aas
pushf
imulb
add
push
stos
shrb
sti
ds
xor
jns
xor
push
jl
mov
gs
sub
adc
fists
mov
dec
mov
fs
adcl
pop
fnsave
rolb
mov
dec
adc
jge
and
cmp
bound
cmpsb
outsb
leave
lret
in
cld
mov
leave
mov
imul
mov
and
adc
mov
mov
xlat
lea
and
cs
mov
cmp
xchg
adc
std
leave
mov
or
aad
aam
mov
pmovmskb
roll
out
mov
fbld
rcrl
or
aaa
or
ret
cmc
jmp
add
mov
sub
jp
mov
ja
or
cltd
lcall
jg
repz
adc
mov
mov
inc
push
mov
adc
addr16
xchg
jns
cmc
je
pop
cmp
mov
pop
test
and
xchg
mov
push
inc
push
adc
mov
mov
cmpsb
bound
adc
repz
add
dec
test
andb
inc
pop
add
push
lds
imul
dec
out
lock
push
out
cld
sbb
cld
setns
cmp
mov
iret
aad
sub
sahf
shl
roll
ss
mov
out
dec
mov
dec
cli
push
push
fs
or
cli
cli
sub
push
das
lcall
aas
xchg
insb
call
and
and
test
fmuls
cs
je
int3
rorb
daa
fnstenv
xor
test
mov
push
fs
enter
and
decl
gs
test
fnstsw
pop
xor
mov
fbld
mov
push
jmp
cmp
and
dec
mov
aam
push
data16
repz
aaa
cmp
inc
dec
outsl
fiaddl
cmp
push
xchg
pop
ret
fimull
push
jle
popf
xchg
adc
arpl
stos
gs
stos
pop
mov
sub
fldt
insl
jmp
inc
test
clc
xor
mov
sbb
sbb
jns
sbb
movsl
in
mov
insb
outsl
push
and
in
sbb
fsubl
popf
dec
mov
sub
enter
xchg
inc
cs
ret
dec
outsl
xor
inc
pop
and
lea
cmp
test
insb
add
aas
orb
jb
mov
pop
fucomip
ja
adc
xor
add
adc
adc
call
dec
mov
cmp
push
adc
aas
daa
cmpsl
fiadds
mov
out
sbb
iret
lods
sub
adc
insb
jmp
repnz
adc
adc
loope
mov
inc
sub
into
imul
mov
inc
mov
mov
in
ljmp
pop
in
push
and
mov
sti
out
test
cli
stc
inc
fdivrs
inc
lret
pop
mov
bound
push
xchg
and
movsb
mov
lock
lahf
mov
ds
jg
aad
push
mov
inc
aas
pop
sti
push
and
mov
dec
popa
jl
sbb
aaa
out
fnstsw
jno
arpl
xor
scas
mov
jmp
lock
mov
cmp
lock
out
push
pop
xor
xchg
scas
xchg
ljmp
dec
jg
and
sbbl
xorb
outsl
aas
loope
cld
fisubs
cmp
jg
scas
cwtl
mov
jle
cmp
lods
shrl
add
gs
sub
lcall
jl
nop
pusha
roll
inc
push
push
shrl
or
push
jg
fnstsw
das
jl
mov
and
ficoms
mov
mov
pop
inc
jae
mov
pushf
jmp
aad
xchg
lock
out
push
and
rcr
jae
arpl
jecxz
out
lret
jb
test
movq
stos
fmulp
into
xchg
xchg
or
jg
xor
icebp
jg
mov
clc
xchg
sar
lcall
pop
or
jbe
mov
xor
push
push
test
jo
popa
mov
insb
subl
addl
cmp
xchg
ret
out
ljmp
jl
mov
jns
add
cli
jl
and
cmp
bound
faddl
daa
imul
fisttpl
stos
xor
fwait
cmp
inc
mov
push
pop
fbstp
test
addr16
cmc
ret
jne
addl
mov
sbb
fldenv
movsb
adc
ja
mov
mov
cmp
negb
iret
mov
rcr
movsb
fst
outsb
out
aaa
cmc
movsb
shll
imull
loop
add
add
jno
sub
jae
mov
pop
xchg
sahf
xor
mov
sbbl
mov
dec
push
add
and
push
stc
cld
xchg
rclb
inc
lcall
ja
xchg
pop
movsb
cmp
cmc
dec
out
pop
jecxz
out
mov
enter
ljmp
cmp
xchg
add
and
jno
orl
or
push
adc
mov
mov
adc
jmp
shrb
xchg
adc
add
cmp
push
out
ds
fwait
xchg
push
pop
cmpb
mov
cwtl
in
cmc
inc
xor
sbb
aaa
fisubl
fiadds
aad
lea
cmp
addr16
lods
mov
roll
outsb
xchg
push
xor
jns
loopne
std
push
out
sub
or
je
and
mov
xchg
push
add
fs
and
cmp
pop
jge
aad
mov
pop
ret
inc
push
inc
push
adc
sub
mov
jge
inc
pop
xlat
test
xchg
mov
shl
int3
arpl
mov
jno
loopne
out
add
mov
mov
or
and
adc
jge
shll
add
rclb
lea
cmp
enter
xor
mov
dec
mov
rcll
stos
fcompl
cmp
and
ss
dec
pop
sub
cmp
adc
daa
cmp
sub
arpl
idivb
sbb
adc
adc
das
pop
dec
mov
mov
mov
dec
and
pop
adc
arpl
nop
popf
add
mov
out
mov
xchg
mov
rorl
adc
or
out
out
cmpsb
ljmp
push
sti
ds
xor
stos
sbb
adc
jno
ja
int
mov
cmpl
stos
and
aas
pop
jbe
out
or
pop
jge
insb
adcl
gs
xchg
sub
aas
stos
ftst
lret
popa
or
xchg
cmp
inc
sbb
pushf
adc
stos
jg
cmp
fldcw
sub
cmp
fsubr
push
popa
roll
mov
adc
test
pop
mov
mov
xor
xor
mov
scas
mov
sub
sbb
or
mov
scas
mov
jb
stos
jbe
in
sbb
mov
and
xchg
pop
and
sbb
in
mov
jge
push
fsubr
mov
ljmp
cld
xchg
aaa
dec
in
aad
sbb
xlat
repz
rcll
mov
adc
adc
and
pop
adc
rcrb
push
es
mov
shll
pop
xor
andb
stc
shll
ja
insb
cmp
jno
lods
cmp
push
cmp
and
sub
add
lock
pop
int
lret
and
mov
sbb
sbb
xor
dec
push
mov
or
lock
mov
pop
jae
into
test
fs
ds
push
push
stos
and
xor
inc
dec
jg
scas
aaa
pop
push
int3
iret
mov
loopne
jns
je
pop
mov
adc
dec
xchg
rcr
lock
out
imul
push
jo
cmpl
loopne
adc
adc
imul
jbe
mov
jbe
add
test
jnp
shrl
mov
pop
nop
insb
xchg
insl
xor
mov
or
jp
call
iret
std
pop
out
xor
mov
pop
xor
repnz
fcmove
pop
rclb
inc
add
and
scas
jp
pop
inc
das
and
pop
lret
int
pop
push
fs
fs
cli
cli
test
cmp
aas
aam
lods
and
xchg
sub
sbb
jne
dec
cmp
mov
push
and
xlat
or
cmpsb
cmp
scas
in
jmp
xchg
mov
xchg
dec
jo
ds
nop
lret
lods
fcoms
cli
lods
jno
mov
mov
inc
mov
loope
or
dec
lahf
jmp
daa
test
xchg
stc
xor
in
dec
sub
push
add
jno
sub
rorl
into
push
ds
pop
iret
and
pop
adc
jmp
and
dec
dec
push
cmpsl
test
push
sub
xchg
push
jle
rol
shrl
adc
les
jmp
lahf
cmc
pop
fldcw
xchg
scas
xchg
in
lahf
cmpsb
dec
sahf
cmp
shll
adc
in
jmp
lahf
cmc
pop
fldcw
xchg
scas
xchg
in
lahf
movsl
dec
sahf
cmp
rcrl
xchg
add
jmp
lahf
cmc
pop
fldcw
xchg
mov
dec
sahf
cmp
shl
or
adc
and
jmp
lahf
cmc
gs
fs
stos
push
sub
jg
out
fdivrl
dec
stc
in
nop
mov
cmp
imul
inc
movsl
cmpsb
dec
adc
test
ds
cmp
lods
fldcw
or
data16
lahf
and
bound
mov
stos
pop
sbb
jns
shrl
mov
mov
dec
sub
ss
insl
sbb
cmp
jmp
xchg
incl
inc
mov
push
push
ljmp
inc
mov
ja
cmp
push
scas
in
enter
out
pop
sub
jno
lret
lock
test
addb
rclb
addl
jns
imul
cmpsl
push
stos
push
test
aad
dec
out
fdivl
out
iret
sbb
adcb
push
jno
push
adc
push
stos
inc
je
and
pop
adc
jl
aam
dec
iret
inc
fcmove
sub
out
das
inc
lea
pop
jo
ret
pop
adc
jnp
sub
cmp
xchg
les
fs
hlt
call
jns
jnp
push
or
pop
lahf
sahf
cmp
xor
pop
js
mov
sti
cmc
push
mov
enter
addb
push
stos
ficompl
arpl
adc
inc
shr
xchg
xlat
cmc
pop
sub
and
mov
lods
xor
jb
fwait
or
pop
lock
fwait
push
js
mov
popa
popa
loopne
cs
mov
push
mov
and
mov
cld
loopne
out
fdivrp
pushf
aad
mov
shlb
xchg
sbb
je
inc
push
adc
fsubrp
in
xchg
cmp
dec
mov
ja
sub
xchg
sbb
fadds
push
xchg
fdivrs
jbe
jl
ret
mov
dec
insb
pusha
push
incb
mov
jne
xchg
push
xor
xor
pop
js
repz
fistpl
sub
add
jo
inc
repnz
test
repnz
aad
mov
add
cld
xor
xchg
xor
lods
insl
cmp
out
loop
ficoml
xchg
push
lods
sub
cmp
mov
lea
jge
xchg
xor
and
adcl
adc
movsb
or
xchg
out
fsubr
add
sub
jo
xchg
lds
sbb
cmc
inc
cmp
data16
push
inc
xchg
icebp
or
jle
pop
iret
xchg
xchg
arpl
scas
dec
jae
push
daa
mov
aas
shrb
ret
cmp
sahf
inc
inc
mov
int
adc
jmp
pop
fwait
push
bound
out
ds
fcoml
jge
push
inc
arpl
scas
aad
imul
pop
in
fidivrs
push
nop
js
jo
aas
es
in
test
divb
xor
test
icebp
xor
jmp
and
es
or
adc
insb
repz
ja
pop
mov
lret
jbe
shll
rclb
iret
mov
sub
cmp
sbb
and
and
jns
stos
pop
and
movsb
cmp
popf
mov
mov
xchg
jle
xchg
clc
add
push
nop/reserved
mov
add
push
adc
and
mov
pushf
push
jmp
test
push
xchg
outsb
divb
mov
frstor
pop
insb
adc
push
dec
pusha
adc
pop
es
mov
rorl
jns
scas
pushf
xchg
enter
or
and
ret
add
inc
scas
clc
cmp
clc
dec
adc
std
fistps
cmc
shlb
lock
push
int3
js
pusha
add
pop
insl
xor
mov
push
lods
or
aam
mov
ud2
pop
mov
sbb
xor
push
and
dec
jae
dec
sub
insb
mov
sub
mov
data16
ficomps
out
push
and
cwtl
aam
fwait
pop
sub
orb
cltd
icebp
jp
int3
push
stos
xlat
iret
pop
cmpsl
int3
clc
xor
sub
lds
addb
mov
mov
shrl
fmuls
popa
dec
imul
rolb
out
daa
lret
addb
loope
icebp
jp
out
pop
notl
inc
push
adc
jp
mov
lahf
and
pop
adc
lds
ftst
out
or
push
pop
push
cmpsb
pop
mov
dec
cli
ret
cmp
les
jb
dec
push
push
fidivs
sub
mov
pop
fadds
mov
lods
jns
cmp
push
sub
gs
stos
inc
dec
aaa
lods
pop
dec
pop
push
mov
jae
inc
pop
out
xchg
inc
shlb
and
sbb
cltd
mov
stos
mov
or
fidivrs
ds
sbb
int3
push
sbb
add
xchg
pop
inc
jg
push
movsl
sarb
das
movsl
adc
int3
mov
dec
xor
dec
xchg
push
insb
inc
and
sbb
div
mov
xor
mov
adc
jne
in
pop
aaa
cmp
sbb
inc
mov
scas
pop
fsubrs
sbb
sub
pop
dec
shll
lock
lea
or
pop
mov
mov
and
inc
in
iret
pushf
and
jno
mov
cmp
push
lcall
inc
push
jno
xor
inc
loope
jbe
adc
data16
mov
cmpsb
sbb
hlt
cmp
fcoml
pop
xchg
outsl
push
jb
in
imul
rcrl
je
inc
pop
pop
mov
sbb
inc
lahf
jns
hlt
cmp
add
push
add
fucom
adc
jg
pop
dec
je
pop
es
mov
xchg
nop
mov
cmc
jo
sub
and
lods
fcomps
iret
dec
mov
or
cwtl
sbb
mov
in
sbb
out
xchg
lods
pop
or
dec
lods
jge
mov
outsl
adc
xor
popa
lea
int3
pushf
xor
shrb
dec
mov
pop
mov
loope
leave
mov
mov
xchg
jmp
sub
lret
ss
insb
out
push
inc
push
insb
popa
aad
in
jp
jecxz
gs
in
dec
js
mov
imul
sub
repnz
push
adc
movsb
cmp
out
stos
jnp
cltd
mov
icebp
aas
test
les
nop
push
and
fbstp
mov
cmpsl
inc
dec
int
inc
in
add
loop
push
pop
nop
mov
sub
data16
mov
push
adc
repz
xor
aad
push
mov
rclb
mov
mov
mov
push
pop
ficompl
and
cmp
dec
dec
fiadds
inc
pop
in
and
fdivrl
cmp
je
scas
pop
jo
mov
sbb
aad
xor
xor
daa
sbb
cli
ja
adc
mov
decl
scas
fcoml
stos
aad
outsl
sub
ret
cli
push
hlt
repz
iret
mov
jae
xchg
cs
mov
sub
rcl
stos
push
lods
sub
xchg
imul
xor
ss
sbb
pop
and
dec
xor
loope
sbb
psrad
daa
iret
int3
addb
aas
sbb
das
sub
lods
pop
and
push
js
in
and
sub
hlt
mov
inc
in
push
sub
push
loope
lods
pop
mov
mov
or
and
adc
orb
cs
sarl
sbb
es
test
mov
fsubrl
xchg
push
mov
xchg
jo
pop
jne
jno
and
movsb
sbb
or
inc
clc
mov
jns
clc
pop
out
fdivl
xor
and
mov
sub
cwtl
aam
bound
xor
and
jg
fldenv
and
mov
pop
add
scas
cmpsl
sub
test
insl
sbb
xor
ja
pop
cs
sub
pushf
mov
push
scas
dec
pop
insl
xchg
sbbb
inc
lock
cmc
ds
cli
sbb
popa
mov
cmp
add
mov
mov
test
insb
mov
ja
cs
lret
enter
sub
add
pop
lods
pop
int3
pop
adc
jae
sbb
adc
mov
inc
lea
in
push
testb
jl
clc
mov
dec
pop
idivb
pop
in
inc
add
fnstsw
xor
stos
and
adc
pop
repnz
dec
pop
cmp
cmc
movsl
fs
cmpsb
scas
jecxz
lret
insl
or
stos
add
mov
adc
jne
mov
or
lods
das
dec
and
lods
stos
adc
repz
adc
or
jbe
lcall
and
lret
cld
out
flds
pop
push
scas
sub
add
cmp
mov
cmp
dec
movsl
jno
loope
or
aad
ficomps
adc
cmp
rorb
ljmp
mov
aad
inc
push
adc
or
in
iret
js
loop
aaa
push
data16
inc
mov
inc
mov
adc
ret
jo
add
mov
push
popa
jne
rcrl
push
xor
in
outsl
into
xchg
xchg
mov
sub
sub
and
out
mov
movsb
adcb
jns
ds
dec
dec
xchg
loopne
and
inc
adc
lods
lret
xor
in
inc
fidivs
xchg
sbbl
xchg
je
adc
dec
lods
fsubs
hlt
addl
or
sub
negb
in
sub
daa
sahf
mov
sub
pop
xlat
jl
push
adc
out
rcr
push
mov
dec
dec
adc
jno
es
sbb
push
mov
int
call
push
inc
push
adc
push
and
fcmovnb
mov
inc
outsb
mov
and
mov
adc
sub
dec
dec
mov
inc
xor
fisubl
mov
loopne
lret
dec
jae
lcall
fwait
or
std
xlat
mov
adc
mov
fidivrs
pop
test
cmp
add
stos
test
sti
pop
aas
inc
push
cld
sahf
test
lods
daa
pop
fnstcw
cmp
add
sbb
mov
fimull
push
pushf
fdivrs
std
rorb
or
dec
push
fs
or
fnstcw
cmc
mov
sub
mov
movsl
mov
loopne
sahf
pushf
add
movsl
and
sub
jg
fcmove
or
les
jle
push
adc
repz
outsb
push
fsts
and
pop
lcall
mov
or
jge
cs
push
add
xor
popf
mov
sbb
divb
sbb
pusha
mov
cmp
lret
mov
es
jmp
sub
leave
sub
mov
mov
or
outsl
cmp
push
mov
popa
dec
imul
rclb
jecxz
lahf
push
add
lods
fldenv
addb
or
popf
push
push
inc
push
adc
and
push
push
jae
add
mov
adc
xor
faddl
inc
popa
dec
ja
cmpsb
fadds
out
inc
xlat
ss
mov
arpl
and
push
stos
sub
jbe
mov
xchg
pop
hlt
div
call
dec
mov
and
mov
sub
mov
out
or
inc
shrl
inc
mov
xchg
adc
fildll
outsb
sti
and
mov
xchg
ret
push
jbe
jae
loopne
jmp
push
push
and
out
mov
popa
ret
into
push
hlt
lahf
sqrtps
addb
jb
and
lock
lods
pop
mov
sub
cmp
stc
pusha
dec
jne
jmp
enter
cmc
inc
shrb
pop
movsl
inc
ja
push
mov
scas
lret
sbb
imul
xchg
in
jle
mov
sbb
mov
outsb
xchg
add
pop
mov
pop
out
inc
js
lods
pop
mov
sub
mov
and
bound
mov
sbb
das
pop
xor
fstl
arpl
movsl
adc
or
push
inc
add
xor
sub
cli
add
enter
pop
sub
adc
and
inc
push
adc
mov
icebp
in
test
movsb
cmpsb
fsub
lods
and
push
nopl
loop
cld
mov
int
mov
shrl
adc
andb
fs
and
jecxz
adc
xor
lods
ja
mov
es
cmp
in
fdivs
out
jle
cs
cmc
sbb
mov
sbb
mov
das
jmp
orb
mov
adc
fsub
popf
mov
inc
push
scas
jne
orl
jecxz
cmp
es
dec
push
and
and
shlb
inc
mov
mov
or
rcrb
jne
cmp
fsub
push
sub
loopne
cmp
stc
cli
jmp
out
push
in
add
das
out
pop
xchg
xchg
sub
inc
or
cwtl
sahf
loop
in
imul
stos
sub
arpl
mov
pop
mov
pop
push
sub
es
jg
and
xor
in
add
sbb
stos
mov
jp
push
mov
mov
arpl
gs
js
insl
stos
xor
fldenv
dec
fdivrl
into
xor
ljmp
shll
mov
xor
jge
call
std
cmp
xchg
popf
scas
movsb
ret
ficoms
nop
arpl
fidivs
popf
call
mov
inc
testl
push
outsb
scas
inc
cmc
or
sub
add
addl
aas
int3
fsubrs
mov
pop
mov
push
lds
cmp
lock
sti
cmp
orb
jbe
dec
push
adc
jl
aad
adc
dec
pop
mov
dec
cmp
push
sbb
jno
adc
sub
inc
pop
cmp
and
ss
dec
pop
push
and
push
mulb
loope
mov
and
mov
xor
push
mull
mov
arpl
sub
mov
data16
int3
dec
pop
cmp
shlb
cmp
inc
xlat
ss
mov
arpl
mov
pop
stos
push
lods
and
mov
mov
ljmp
mov
clc
or
mov
faddl
cmp
ljmp
addb
lods
repz
aad
fsubrp
inc
xchg
sub
jle
fdivrs
lahf
repz
pop
or
cs
push
add
lret
and
cs
xchg
mov
out
xchg
test
add
pop
push
data16
andb
inc
sub
xchg
push
out
test
je
addb
jb
xor
mov
jne
test
sbb
hlt
call
pop
cmp
xlat
pop
and
adc
jl,pn
push
cld
jg
mov
clc
movsl
mov
clc
adc
pop
fistps
dec
mov
mov
add
inc
push
adc
adc
call
push
lds
test
mov
push
pop
adc
ljmp
stos
iret
lds
mov
mov
loope
dec
xor
je
clc
xor
repz
mov
movsl
and
mov
stos
popf
imul
mov
mov
mov
lahf
aad
fwait
sbb
andb
shlb
push
mov
pop
jnp
test
jmp
cmp
inc
push
repz
cmp
xchg
test
scas
mov
mov
lahf
out
mov
push
lea
sub
xchg
inc
jb
push
and
scas
aam
inc
sub
je
fdivl
mov
sub
test
xchg
cltd
js
mov
sub
fs
push
pop
insb
mov
xchg
and
mov
in
jno
mov
jno
scas
mov
pop
jbe
xchg
out
loop
fildl
popf
fimull
push
lcall
stc
sbb
imul
adcl
pop
int
adcb
inc
sarb
push
ret
jmp
add
mov
xor
xchg
jg
xchg
add
cltd
mov
adc
xchg
mov
hlt
push
stos
jmp
push
mov
in
lcall
in
test
adc
cld
mov
pop
repnz
mov
or
jmp
add
and
movsb
rorl
or
sahf
nop
dec
jmp
sub
fstl
arpl
stc
pop
mov
xchg
jne
pop
jno
xor
push
mov
mov
adc
mov
out
pusha
sbb
jg
push
and
inc
pop
mov
pop
fcmovnbe
test
cwtl
int3
gs
push
jp
scas
cmp
push
mov
push
and
mov
mov
out
repz
das
and
movsl
test
dec
xchg
dec
sahf
sbb
lret
iret
mov
imul
xchg
adc
dec
inc
fildl
inc
mov
jb
cmp
repnz
sbbl
push
stos
xchg
adc
push
mov
rcrb
icebp
add
outsb
ja
xchg
jne
push
arpl
xchg
xchg
aad
or
cmp
xor
lret
arpl
sub
daa
iret
inc
je
iret
and
popl
cwtl
jo
jne
sti
int
lahf
movsl
mov
inc
cmp
push
out
testb
divb
sbb
dec
pop
mov
leave
ficomps
mov
sbb
mov
cmp
pusha
mov
pop
out
push
mulb
loope
and
cmpsb
stos
faddl
jg
dec
jg
sahf
aam
add
inc
xlat
cs
popa
jne
lret
mov
push
jnp
jecxz
xchg
xchg
push
and
or
adc
hlt
lahf
in
movsb
mov
pop
frstor
and
cs
xchg
mov
out
sub
sbb
lock
add
sbb
pop
out
pop
cmc
or
fisubrl
lods
daa
pop
add
inc
push
adc
jno
cmc
call
dec
push
pushf
andb
pop
pop
sub
mov
pop
int
ret
fbld
pop
in
out
adc
mov
ret
sub
daa
clc
in
add
xchg
push
push
sbb
cmp
pop
pop
cmp
fdivs
add
inc
out
xor
mov
gs
jg
clc
xchg
sub
rolb
xchg
shl
repnz
xor
lret
sbb
sbb
imul
clc
add
fstp
push
cs
xchg
mov
sti
movsb
test
sar
aam
pushf
mov
xchg
pop
out
and
mov
xor
out
fsub
mov
push
adc
jno
inc
push
imulb
std
fstp
mov
es
test
jmp
inc
cmpsl
in
pushf
hlt
hlt
int
bnd
sub
push
in
rolb
aam
das
adc
cmp
xchg
pop
sub
das
and
cltd
xchg
inc
inc
and
or
gs
xor
loope
in
xor
mov
arpl
pusha
cmp
fldt
mov
pop
sbb
mov
or
sbb
pop
arpl
in
push
into
sbb
daa
popa
std
scas
aam
es
xchg
mov
mov
jbe
or
ret
enter
push
mov
repnz
shll
outsb
repz
test
in
aad
inc
push
adc
add
and
in
ja
and
sbb
fildl
fidivl
scas
rep
fwait
adc
add
jne
insb
shrb
ret
or
in
jno
int
or
loop
jno
clc
xor
mov
jg
lahf
cmpsb
cmp
aaa
popf
js
sub
jns
lds
or
and
inc
mov
lods
mov
shll
pop
ret
loope
pushl
push
repz
mov
shll
or
push
dec
push
add
mov
mov
xchg
push
push
xor
mov
mov
dec
arpl
sbb
push
lret
inc
xor
sub
dec
mov
movsl
dec
mulb
lods
movsb
sub
sti
roll
sbb
lea
int
mov
insb
pushf
loope
sti
jmp
clc
jbe
and
pop
xchg
int
arpl
cli
sbb
pop
into
outsb
xchg
stc
insl
mov
pop
jae
cmpsl
pop
cmp
mov
and
cmp
testl
pop
inc
daa
dec
ss
inc
jnp
lahf
mov
leave
pop
adc
sub
push
or
loopne
and
sahf
mov
mov
inc
ds
idivb
mov
or
imul
adc
arpl
fstpt
jle
sub
mov
je
mov
movsb
sub
add
enter
cmp
adc
inc
jns
lods
cmp
out
dec
ficomps
loopne
mov
addr16
and
cmc
decb
cmpsb
fwait
lock
push
int3
dec
test
ret
and
cmpsb
ja
cmp
jmp
fnstenv
loope
jle
nop
mov
stos
mov
test
or
aad
aad
push
aad
jl
and
jge
cli
hlt
gs
stos
scas
xchg
enter
outsb
push
fstl
pop
mov
xor
fsubr
fdivrl
std
jb
lock
test
push
test
cmp
mull
iret
lahf
jbe
jle
jmp
lahf
loope
aad
fsubrp
inc
and
pop
faddp
aaa
addr16
rorl
or
lods
movsl
lcall
pop
mov
shr
ret
push
leave
imul
shrb
hlt
jg
pop
cs
popf
or
xchg
sub
xchg
mov
ret
jae
inc
mov
daa
pop
mov
add
int
or
push
lods
stos
and
pusha
out
adc
push
out
roll
pop
divl
mov
scas
shrl
and
popa
ret
imul
js
out
adc
std
in
xchg
or
outsb
push
frstor
add
xor
stc
sbb
movsb
movb
ja
leave
stos
dec
or
xor
stos
push
lods
and
lahf
xor
sbb
fdivrl
jecxz
cli
hlt
imul
pop
cli
and
stos
push
lods
out
je
inc
insl
jl
mov
shll
cmp
adcl
inc
dec
repz
push
stos
fsubrp
pop
ret
dec
pushw
dec
out
fdivrl
roll
int
or
add
sub
xchg
push
test
in
and
lcall
in
test
fucom
add
stos
loop
push
and
jge
mov
mov
arpl
xor
mov
lret
loopne
cmpsl
fildll
dec
iret
mov
sub
dec
jno
ret
hlt
mov
js
inc
mov
iret
mov
push
fldl
subb
or
cmp
pop
adc
dec
jecxz
bound
add
sub
mov
in
sub
enter
mov
mov
inc
stc
ss
mov
addb
scas
inc
in
pop
cwtl
xor
xchg
popa
mov
cmp
fnstsw
or
mov
movsb
test
and
adc
xor
je
jl
jmp
xchg
mov
test
imul
js
mov
jne
cmp
cmp
pop
stos
lahf
and
pop
je
jl
sbb
sub
and
cmc
mov
lock
inc
cltd
lret
ja
sha1msg2
adc
test
in
shrb
mov
inc
in
and
xlat
fs
sbb
lret
jge
aam
and
sub
cmp
mov
cmp
leave
sub
push
jb
adc
pop
rcrb
sahf
sbb
sub
mov
fsubrp
movsl
shrb
pop
jo
sarl
push
adc
jae
sti
inc
out
dec
mov
iret
and
pop
arpl
dec
fdivp
pop
jb
inc
or
jmp
addl
cmp
add
pop
test
in
roll
jno
scas
and
imul
fbstp
ljmp
mov
loopne
xor
pop
xchg
pop
jl
xor
add
cmp
loopne
arpl
or
fisubs
stos
aad
sub
pop
orl
test
mov
fwait
or
mov
cmp
mov
dec
pusha
cmp
into
jno
inc
das
call
test
adc
push
mov
stc
jbe
xor
stos
sbb
pop
cmp
dec
adc
jg
inc
sarl
push
dec
movb
pop
push
fdivr
pop
jnp
test
cwtl
mov
mov
adc
out
cmpsl
imul
push
adc
jl
push
sbb
sbb
pusha
outsb
xchg
test
adc
cs
jno
lret
inc
mov
test
hlt
ret
arpl
xchg
cmp
pop
or
add
xchg
out
test
mov
adc
mov
inc
push
pop
inc
or
pop
out
mov
inc
outsl
pop
cli
dec
inc
push
fwait
sbbl
fs
divb
or
cmc
ss
add
mov
adc
int3
cmpb
ja
cmp
dec
cwtl
xor
lret
stos
fsub
enter
mov
outsb
adc
arpl
arpl
xchg
bound
pop
cs
stos
push
and
mov
cmp
cltd
add
punpckhbw
ret
mov
subl
jb
sub
cs
pop
adc
and
inc
addb
push
xchg
mov
sub
sub
inc
inc
aam
adc
jp
aam
stos
sbb
movsb
push
or
in
push
sub
push
fs
mov
into
aad
adc
fdivl
ss
dec
pop
sub
xchg
clc
mov
pop
cmp
pop
adc
mov
movsl
and
or
adc
movsl
mov
gs
jnp
dec
xchg
int
sub
ret
fisubs
jnp
ret
arpl
arpl
pop
add
xchg
dec
pop
leave
bound
cli
cmp
or
sbb
loopne
jbe
addl
testb
mov
into
out
cwtl
sbb
in
fistpl
shll
out
aaa
fucomp
dec
inc
out
mov
aam
lahf
adc
adc
adc
pop
sub
movb
pop
in
inc
rclb
stos
pop
mov
and
adc
sub
faddp
jo
addr16
sub
or
sub
flds
push
mov
pop
sub
push
imul
stos
push
mov
sbb
and
or
repnz
add
cli
or
push
add
test
jne
nop
xchg
sarb
xlat
in
cmc
jne
xor
mov
fstpl
aam
mov
jne
dec
jnp
mov
cmc
pop
adc
dec
ret
mov
in
cwtl
push
test
push
out
sub
enter
fs
loop
rcll
xchg
jae
jno
jge
mov
ds
movb
and
cmp
addl
lods
dec
pop
jl
in
sbb
pop
mov
dec
movb
fsubrs
in
mov
sbb
cmp
in
adc
outsl
jg
outsl
jp
mov
jmp
mov
cmpsl
pop
xlat
xor
testl
mov
cmpsl
popf
jns
insl
adc
mov
and
sti
mov
mov
cs
pop
lods
push
das
aas
in
in
pop
outsl
xchg
insb
sbb
stos
sbb
cmp
jmp
pop
leave
out
lock
scas
cmp
dec
xchg
mov
popf
cmpsb
movsb
adc
jp
ja
add
sub
xchg
xchg
lcall
jp
xor
cmpsb
mov
pop
mov
push
cmc
sti
ja
xchg
in
mov
mov
mov
cmpsl
push
cmp
aaa
mov
lods
cwtl
jae
mov
push
jnp
std
testl
add
sbb
cmp
fs
fdivs
lods
push
xchg
pop
ljmp
mov
aaa
mov
ret
insl
outsb
sbb
mov
pop
das
push
stos
adc
pop
stos
adc
pushf
xchg
jae
repnz
fiaddl
inc
or
and
dec
jne
pop
jmp
xchg
mov
adc
popa
ret
pop
dec
mov
lea
popa
xchg
mov
push
rep
filds
push
add
adc
sbb
roll
adc
mov
push
test
loopne
or
pop
inc
jo
dec
daa
cmp
frstor
xchg
adc
and
loop
jns
fs
ud0
aad
inc
push
fidivl
loope
cmpsb
aam
mov
add
lock
xlat
dec
js
sub
mov
cmp
push
adc
popf
cmp
sub
into
lahf
jb,pt
mov
jne
repnz
aam
push
xchg
dec
cmpsb
xlat
jecxz
sahf
cmp
adc
sti
hlt
insl
adc
pop
stc
adc
add
ret
pop
adc
jl
push
and
sbb
pusha
pop
jae
pop
pop
stos
lret
sbb
xchg
sub
add
cmpsl
dec
cmpsl
mov
mov
sbb
dec
mov
cs
lds
mov
lds
cltd
and
shrl
sbb
and
incl
jl
hlt
add
clc
push
pop
inc
mov
mov
mov
add
dec
jno
mov
jno
mov
stc
add
push
pop
mov
sarl
imul
testb
test
stos
inc
pop
and
jg
sbb
or
pop
les
add
jns
movsl
pop
mov
add
jle
push
cmp
add
and
sbb
adc
lods
movsl
add
inc
inc
mov
inc
sub
inc
inc
dec
adc
popf
cmp
pop
adc
clc
int
mov
xor
fwait
dec
test
and
jo
scas
xchg
mov
hlt
or
inc
add
out
adc
test
ss
scas
les
inc
repz
cmp
iret
adc
les
jno
es
mov
push
shll
in
pop
mov
mov
mov
dec
aaa
je
xchg
adc
fstp
stos
push
jns
jmp
ljmp
dec
xor
inc
mov
fiaddl
sub
decb
and
pop
cmp
cld
cmpsb
sbb
mov
movb
adc
add
shlb
jmp
push
scas
call
fdivs
dec
cmp
out
jnp
lds
cmp
cmp
sub
xchg
iret
mov
mov
in
and
test
add
pop
push
pop
mov
pop
and
in
mov
sbb
fldl
and
push
jg
mov
sub
rcl
push
ss
inc
lock
movsl
into
sub
pop
push
negb
jp
stos
mov
xor
das
inc
add
xchg
cmc
push
mov
int
sub
sub
and
and
add
and
mov
add
andb
inc
push
push
push
inc
cmp
cmpsl
adc
int3
inc
loop
out
imul
jno
mov
push
adc
jae
xchg
add
sti
and
cld
rcrb
cs
js
dec
movb
cltd
cmp
jmp
rorb
insl
dec
movb
push
lods
pop
jl
and
or
pop
cwtl
sub
xchg
xchg
xchg
xchg
fwait
xchg
adc
mov
jbe
xlat
xchg
jae
sub
mov
loope
mov
lea
jmp
pop
stc
inc
in
sbb
sbb
mov
pop
in
sub
sbb
push
call
or
mov
jcxz
movsl
cltd
cwtl
sbb
push
jns
mov
lock
sub
iret
hlt
and
adc
ljmp
pushf
pop
adc
sub
jns
mov
stos
mov
jnp
mov
jo
iret
sbb
jns
fdivr
sub
sbb
adc
sub
pop
adc
dec
nop
shl
jg
pop
out
add
test
push
test
ret
out
mov
rcrb
js
hlt
mov
loop
add
icebp
and
rcrb
test
stos
cmpsl
clc
mov
mov
arpl
cmc
outsb
test
add
test
sahf
jle
out
pop
sahf
jae
push
lcall
xchg
lret
ret
push
fldl
adc
das
xchg
fisttps
mov
out
pushf
fnstenv
xor
and
mov
jmp
inc
lea
sub
push
test
aam
repnz
fdivrl
mov
mov
sbb
pop
pop
mov
pop
in
inc
xchg
or
and
hlt
insl
sbb
and
into
xor
jge
jge
mov
xor
inc
jge
push
cmpsl
int3
data16
sti
sub
lahf
xlat
gs
call
cs
outsl
test
xorl
fistpll
xchg
stc
ja
aad
scas
cmp
adc
dec
sbb
add
adc
int
cmpsb
fisttpll
dec
out
out
adc
mov
cmp
mov
aaa
mov
add
call
repz
int3
push
cmpsb
dec
jbe
jle
out
pop
inc
pop
jmp
sti
js
fmull
dec
out
out
adc
shlb
push
stos
push
pop
cmp
or
jg
stos
push
pop
in
std
sbb
push
and
jmp
stos
mov
jg
scas
jge
add
pop
loop
push
inc
aas
add
push
ja
jo
lods
mov
sbb
popa
lcall
aad
adc
mov
xchg
sbb
out
adc
pop
mov
sbb
inc
jae
xchg
int
dec
les
sbb
lcall
cmp
sub
adc
cmp
js
or
pop
adc
xor
outsl
mov
dec
sub
cmp
ljmp
mov
fnstcw
cld
jge
xlat
das
mov
xor
cmp
rcll
xor
xchg
cmp
scas
push
adc
push
and
jmp
les
mov
rcrl
pop
xchg
loopne
or
lcall
or
adcb
jmp
jae
jno
iret
inc
add
dec
sub
frstor
lods
pop
pop
inc
xor
mov
mov
pop
jns
lcall
movsb
xor
in
push
xor
mov
das
inc
call
xlat
xlat
in
inc
jae
lret
xchg
pop
loop
push
mov
jl
jne
enter
adc
aam
cmp
cmp
mov
push
pusha
pop
mov
mov
fcoml
push
rcrl
ret
das
sub
daa
mov
or
into
in
pop
mov
dec
xor
mov
mov
xor
ss
or
movsl
fstps
fwait
inc
jp
addr16
jns
lea
or
pop
adc
push
mov
ficompl
jge
shrl
jae
in
or
pushf
fadds
sbb
mov
pop
adc
sbb
push
jmp
push
data16
imul
adc
fnstsw
jge
cwtl
nop
jecxz
int
sbb
xchg
ljmp
adcl
mov
xchg
clc
in
inc
sub
and
dec
dec
sahf
pop
jmp
cmp
clc
cmpsb
dec
mov
out
jecxz
jae
dec
shrb
adcb
ljmp
sub
pop
inc
push
push
pop
lret
push
jl
int3
subb
mov
pop
jmp
arpl
push
jge
adc
mov
push
xchg
test
and
test
xor
es
jge
xor
sbb
movsl
rcrl
push
cmpsl
dec
adc
pop
push
push
inc
mov
nop
mov
cs
add
cmpb
subl
cli
ds
fdivrl
jnp
adc
gs
pop
iret
shrb
fsts
push
sbb
push
lahf
sub
pusha
push
inc
aas
add
jb
mov
inc
mov
pop
sub
push
in
adc
stos
ja
jnp
pop
or
inc
lods
pop
or
lock
adc
ljmp
pop
jns
out
or
push
jl
hlt
call
out
adc
in
inc
inc
outsb
scas
pop
mov
scas
push
decb
andb
add
or
push
pop
ja
xor
push
push
inc
sbb
jp
out
push
jmp
xchg
xchg
mov
cmp
orb
adc
cmpsb
lcall
push
enter
xchg
sub
sbbb
inc
nop
or
repz
lahf
ja
xlat
sti
hlt
mov
in
fs
aad
lods
sahf
and
mov
jns
popa
je
jge,pt
mov
call
mov
sub
cmp
lock
jp
sahf
aas
incl
int
xchg
or
push
shrl
sub
mov
in
xchg
cmp
lods
xor
sbb
pop
les
pop
push
loop
mov
aad
add
test
sub
into
push
inc
xchg
insb
cli
mov
pop
std
loop
clc
lods
lock
inc
inc
out
ret
aam
enter
dec
sub
xchg
lahf
sub
pop
inc
dec
push
jmp
scas
cmp
sarb
fwait
aas
xor
aas
loop
lods
dec
fnstenv
in
loope
sar
jl
vmovss
jle
adc
push
fistpll
pop
ret
adc
fidivs
sub
adc
inc
mov
add
inc
jne
jno
ret
mov
icebp
fidivl
stos
xchg
mulb
insl
pop
out
mov
cmp
arpl
inc
push
adc
icebp
cld
rep
cmp
mov
adc
div
mov
clc
mov
lods
xor
add
mov
out
clc
movsb
pop
movsl
dec
ret
jge
cwtl
mov
jle
jl
sahf
out
hlt
int
pushw
cmc
je
mov
mov
pop
xchg
mov
pop
mov
dec
fidivrs
bswap
inc
xchg
cs
gs
pop
fldt
sahf
cmpsl
sub
popa
ret
arpl
pop
pop
inc
adc
inc
jl
fildll
inc
sbb
aaa
cmp
mov
xchg
adc
ret
adc
loopne
inc
mov
pop
adc
sbb
in
push
aaa
js
or
jp
cld
mov
sar
fsubrl
lcall
loop
bound
pop
clc
fbstp
push
adc
add
mov
adc
xchg
out
mov
in
in
test
mov
addl
mov
xlat
enter
adc
andl
xchg
hlt
cmc
mov
jnp
or
pmaxub
jle
and
push
lcall
aas
add
push
adc
mov
mov
lahf
fsub
cmp
in
fisubl
add
addl
pop
jp
push
lods
pushf
cwtl
jmp
dec
aaa
add
in
incl
dec
mov
out
outsb
pop
das
xchg
xlat
push
jne
pusha
out
adc
xchg
adc
sahf
dec
pusha
jno
and
js
inc
push
mov
test
mov
xchg
pop
jecxz
sub
sub
pushf
int3
int3
sarl
or
add
test
ret
ret
lahf
sbb
mov
outsl
in
shrl
sahf
jg
aad
sahf
out
bound
sbb
dec
js
mov
movsb
pop
and
mov
rclb
orb
push
fucomip
pop
cs
dec
pop
sbb
jae
cmp
ds
sahf
pop
mov
cmp
out
pop
int3
mov
arpl
cwtl
mov
mov
pop
xor
rclb
lock
stos
daa
sbb
ret
xchg
and
rsqrtps
xorb
mov
and
xor
out
repnz
mov
push
adc
push
adc
xor
and
loope
and
scas
add
imul
push
addl
or
pop
xchg
ja
loopne
dec
jb
in
jmp
mov
sti
int
jp
aam
ja
xor
clc
mov
pop
cs
shl
dec
push
stos
sub
xor
ds
fdivrl
roll
ljmp
adc
inc
addr16
popa
mov
pop
push
add
mov
inc
adc
add
scas
inc
cltd
lret
xchg
outsb
aam
fst
sub
sbbb
pop
pop
mov
mov
cmp
mov
jp
in
ficoms
push
bound
sub
int
in
jge
push
test
xchg
xchg
pop
cs
ss
cmp
out
fdivrs
lds
loop
fsts
adc
push
dec
out
jp
imul
sbb
or
cmpsb
lret
xchg
ret
sub
mov
sub
scas
xchg
jne
and
pop
addr16
sbb
jecxz
popf
or
xor
and
inc
sbb
into
adc
fdivrl
adc
fwait
sub
cmp
adc
jne
dec
dec
mov
cmp
mov
popf
clc
sbb
xorb
push
inc
push
nop
jnp
scas
call
nop
repz
pushf
mov
lds
jmp
xchg
ss
enter
dec
bound
sbb
and
lret
jne
divl
mov
enter
or
push
dec
pop
add
mov
loop
pusha
sbb
nop
xor
and
fs
in
mov
stos
outsl
adcb
mov
fwait
pop
pusha
addr16
xlat
clc
jecxz
push
jle
addr16
sub
sub
outsl
imul
jne
out
xor
outsl
xchg
adc
or
sbb
stos
or
int
xor
mov
xor
cmpsl
sbb
out
popa
pop
add
pop
inc
xlat
mov
mov
jbe
add
jecxz
inc
mov
push
push
cmp
jmp
cmc
and
lret
cmp
jb
push
xlat
fstpt
jl
das
pop
mov
stos
push
arpl
add
das
pop
xchg
movsb
fld
int
in
ficoml
ljmp
lock
fwait
xchg
imul
divl
bnd
pop
pop
pop
test
daa
mov
push
pop
lods
add
sub
jne
or
mov
xchg
jbe,pt
sbb
cmp
sbb
dec
cs
push
pushf
mov
rcr
xor
ds
dec
shll
or
scas
std
jp
sbbb
loop
outsl
jns
pop
in
mov
mov
shrl
cmovbe
jnp
pop
pop
xor
lret
push
mov
sub
movsl
inc
aaa
subb
aaa
out
lahf
mov
rorl
and
mov
fsub
pop
stc
mov
clc
sbb
push
jge
andb
mov
repnz
sbb
mov
rcr
lods
pop
mov
mov
or
pop
and
ja
inc
push
out
sahf
sbb
push
stos
and
scas
ret
sub
cmp
mov
xor
pop
pop
out
ljmp
fcomp
stos
push
lods
adc
les
and
dec
fdivl
aas
jge
subl
xor
inc
dec
and
push
pop
mov
inc
pusha
sar
call
popa
dec
mov
mov
pop
adc
test
fadds
sbb
or
pop
lds
gs
xchg
stos
push
stos
outsb
push
pop
pop
sahf
cmp
inc
mov
mov
or
cs
enter
nop
push
inc
inc
ret
pop
ret
test
adc
repz
adc
cmp
daa
and
or
frstor
mov
ljmp
push
fisubs
mov
push
inc
nop
adc
xchg
mov
pop
sbb
inc
mov
add
and
push
pushl
mov
push
in
push
lods
pushf
mov
adc
sbb
pop
xchg
dec
mov
insl
cmpsb
loope
xchg
test
ja
jl
cmc
bound
dec
sub
and
jbe
dec
dec
mov
sub
or
sub
incl
inc
or
test
rcr
hlt
test
mov
and
and
call
leave
cli
test
push
outsb
and
cmpsl
pop
jle
mov
sbb
jg
fstps
aaa
jne
cmp
push
pusha
cmpsb
mov
xchg
dec
xchg
jb
dec
fisttpl
jae
mov
push
aam
cmp
test
cmpsb
mov
sbb
mov
xor
sbb
mov
ja
loope
mov
fadd
ljmp
add
adc
stos
test
hlt
int3
inc
rorl
mov
repz
dec
aad
dec
cmp
sbb
cld
cmp
sub
cmp
ja
dec
dec
popf
xor
and
mov
pop
lds
hlt
push
in
jo
shlb
mov
push
pause
repnz
inc
adc
gs
xchg
fimuls
loope
gs
or
rol
mov
loope
stc
cwtl
mov
fmuls
ljmp
out
mov
sbb
das
adc
sbb
leave
add
out
dec
sub
idivb
xchg
enter
pop
test
fnstcw
fisubrl
mov
jb
push
lret
add
mov
push
sub
pop
adc
daa
jnp
pop
cmpsb
es
push
adc
jl
mov
leave
pop
adc
add
add
movsb
neg
mov
nop
push
dec
lods
bound
loop
clc
sahf
pushf
mov
fildll
push
adc
add
sbb
xchg
sub
fs
std
ds
cmp
push
push
int
mov
sub
es
lods
cmp
lret
test
lret
cs
mov
pushf
push
pop
jne
xlat
push
repz
std
add
jge
xor
fists
pop
mov
dec
cltd
push
popa
fcmovb
xchg
nop
xor
and
loop
xor
in
cld
jp
es
jne
repnz
mov
mov
mov
aad
xor
and
mov
inc
shr
sub
movsb
arpl
sub
inc
repnz
xchg
sub
out
cwtl
and
mov
adc
pusha
sar
in
pop
dec
stos
cmp
lret
and
scas
shrl
mov
popa
dec
jae
push
popf
push
mov
xor
cmp
and
mov
stos
stos
adc
lcall
orb
clc
rcr
jp
push
stos
push
and
push
leave
lahf
cmp
xor
iret
adc
jne
xor
xchg
subl
and
mov
xor
mov
outsl
push
pushf
insb
sub
sbb
push
pop
mov
nop
mov
push
ja
hlt
and
outsb
sbb
arpl
cmpsl
stos
scas
push
hlt
pop
and
mov
mov
daa
mov
mov
or
push
addr16
dec
mov
outsb
aas
imul
aas
mov
push
iret
pop
dec
or
push
addr16
out
pop
push
movsb
shrb
push
adc
push
call
or
jge
fldcw
xor
sbb
push
fldlg2
xor
pusha
push
pop
mov
inc
mov
push
jge
cmc
gs
jae
fldt
xchg
pop
out
into
frstor
sbb
lea
gs
clc
call
adc
sub
push
sub
pop
adc
mov
sbb
mov
add
xchg
xorb
scas
cmpsb
lds
les
and
pminsw
mov
hlt
jno
shll
stos
popa
push
stos
adc
out
adc
mov
and
pop
sub
xorl
test
outsb
xchg
fidivrs
test
iret
test
xchg
cld
repz
imul
and
orb
test
gs
sub
addl
hlt
call
push
push
pushf
or
loopne
push
test
andl
cmp
sub
clc
adc
leave
lods
mov
push
pop
ljmp
arpl
xor
or
jb
scas
push
arpl
stos
imul
dec
and
daa
pushw
int3
fdivs
sub
sar
iret
in
cmpsb
js
and
jns
dec
cmc
jns
xchg
daa
test
jnp
dec
pushf
inc
push
in
sub
aad
jno
clc
icebp
jmp
inc
cwtl
cmp
mov
iret
adc
movsl
push
dec
jp
inc
or
fidivrl
sbbb
mov
popl
xor
lods
jo
push
mov
or
pop
dec
in
sbb
fbstp
shll
cwtl
loope
jle
popa
mov
sbb
add
and
aaa
out
mov
out
test
int3
xchg
lods
add
lock
into
fsubrs
pusha
cs
jl
dec
jb
mov
xor
iret
mov
rolb
jbe
push
ret
jno
data16
jns
into
in
jne
xchg
pop
fbstp
fs
out
mov
jno
cltd
ja
cli
test
jno
mov
test
add
push
xchg
stc
jmp
cmp
aaa
filds
into
sub
sub
push
addr16
data16
adc
test
xchg
sub
leave
pop
adc
addb
lods
mov
xor
rclb
out
fcomps
mov
adc
loop
dec
push
pop
test
and
cmpsb
xor
pop
xchg
jecxz
add
lods
scas
push
insl
xlat
or
and
pop
shll
leave
mov
xchg
cmp
aad
pop
js
push
or
jns
fsubl
out
add
cld
inc
aad
stc
sub
pop
dec
and
out
imul
and
test
data16
int3
les
inc
fisttpl
pop
frstor
adc
add
fcmovnb
jp
imul
xor
mov
pop
cltd
xorb
ljmp
xchg
imul
daa
jne
addb
sbb
and
lods
cmp
and
xor
or
sbb
push
mov
loope
add
push
push
pop
arpl
nop
aam
xor
jge
or
in
ret
xchg
push
stos
push
es
stc
mov
test
divb
test
repz
and
mov
inc
lock
push
data16
adc
jle
movsl
mov
in
sub
adcl
sub
cs
adc
mov
dec
mov
jnp
stc
fists
xchg
repnz
mov
pop
and
jnp
stos
insb
jmp
dec
jne
icebp
and
lds
fidivrs
out
pop
and
or
mov
in
adc
clc
stos
pushf
ljmp
pop
lds
pop
push
stos
mov
int3
mov
insb
lock
and
roll
dec
push
outsl
cmp
imul
test
sbb
sbb
push
ja
pop
cmp
jb
mov
cmpsl
push
test
cmpsb
xchg
in
fdivrl
std
jo
cmpsb
bound
jnp
and
pop
cmp
test
or
jge
test
dec
out
jmp
mov
pop
repnz
outsl
xchg
addr16
mov
mov
pop
pop
inc
push
adc
cmp
dec
nop
and
pop
adc
push
not
lret
inc
arpl
cld
lret
data16
push
adc
pop
push
mov
ja
bound
mov
in
inc
mov
xchg
insb
es
sub
movsl
mov
dec
out
jle
jb
jne
inc
add
sub
int
scas
cmp
js
test
push
sbb
andl
les
jo
fcmovu
lds
sti
ljmp
dec
stos
push
mov
adc
or
adc
les
test
pop
icebp
fs
push
mov
pop
test
lods
cli
out
xchg
aad
inc
jecxz
mov
mov
push
and
repz
mov
pop
jmp
sti
lods
shl
stc
mov
push
sub
sbb
fwait
pop
dec
sbb
scas
mov
push
aas
loope
rorb
movsl
ret
inc
jmp
mov
mov
xchg
push
andb
and
jg
pop
xor
sub
inc
sbb
jmp
add
mov
push
pop
jb
cmp
jns
xchg
mov
inc
jnp
adc
adc
pushf
and
or
loop
add
es
jbe
push
dec
pushf
pop
push
movsb
lods
or
mov
push
ret
jno
data16
dec
cmp
adc
pop
ficompl
divb
jle
stc
arpl
jb
xlat
push
test
mov
xchg
sbb
jbe
adc
mov
xchg
or
mov
data16
cs
xchg
movl
mov
xorl
aam
lods
jno
js
inc
popf
cltd
mov
fiadds
sahf
jne
xor
rorb
arpl
inc
mov
cltd
jbe
iret
mov
jb
mov
ljmp
add
stos
je
mov
add
dec
add
cwtl
cmp
cmpsb
dec
shll
sub
mov
adc
and
pop
adc
cld
add
ss
mov
sub
or
mov
adc
call
inc
jb
test
sbb
lock
loope
add
iret
adc
xchg
rcrl
sbb
leave
pop
xor
xchg
lcall
out
test
cld
jae
mov
or
shll
rcll
popa
push
mov
clc
sub
jae
addb
xchg
test
fbstp
js
inc
add
pop
scas
mov
fwait
push
pop
out
fcoml
test
pop
mov
stc
outsl
jp
insb
call
mov
push
sbb
sbb
cltd
loope
mov
add
xchg
aad
inc
adc
cmp
notl
rcrb
lret
push
mov
mov
mov
ret
cwtl
fcoms
cltd
into
lahf
mov
jns
mov
sub
xlat
pop
or
faddl
inc
xor
xchg
orb
jb
inc
ret
sub
cmpsb
pop
cmp
mov
es
ss
insl
mov
pop
iret
rorb
push
adc
sub
adc
add
jecxz
mov
and
and
roll
dec
push
fisubs
shrb
push
mov
repz
mov
cmp
mov
bound
test
mulb
push
and
xor
sti
jo
mov
sarl
loop
test
hlt
shll
jp
mov
xor
clc
jae
testb
aaa
add
xchg
push
and
jb
rorb
lea
mov
loope
sub
push
push
pop
divl
lock
pop
cld
lret
pop
lahf
in
mov
adc
and
adc
dec
mov
jbe
and
inc
push
adc
loope
in
inc
pop
push
cmp
leave
pop
adc
adc
int
cmpl
xchg
stos
pop
orl
lretw
lock
push
add
push
cmp
ja
arpl
mov
mul
mov
cmpsb
add
dec
push
sub
jecxz
and
and
mov
shll
mov
stos
ja
push
stos
push
fbstp
lods
adc
add
xchg
lahf
rorl
xchg
repnz
les
xlat
dec
add
fisubrl
mov
popf
fildl
mov
sbb
push
xchg
mov
and
mov
rolb
ljmp
sbb
and
xor
aam
mov
ret
in
xchg
jmp
dec
push
in
xor
inc
pop
push
cmp
call
adc
mov
int3
daa
stc
lds
aam
adc
lret
mov
ret
xor
cs
mov
loopne
xchg
push
pop
inc
ds
adc
sub
cld
pop
xlat
and
mov
data16
mov
xor
cmc
mov
push
inc
pop
pushf
mov
ret
push
test
outsb
push
push
daa
xchg
mov
pop
add
and
fs
jns
mov
sub
push
add
push
fstps
scas
push
popf
adc
sub
xlat
popa
add
cltd
mov
push
adc
aaa
lock
dec
sbb
pop
xor
int3
cld
mov
cmp
jb
in
aas
in
popf
push
push
les
loop
loope
lods
adcb
cmp
xchg
or
int3
mov
ficoms
test
nop
test
adc
adc
jne
mov
jb
jo
test
inc
arpl
arpl
pusha
shl
add
xor
sub
sti
out
push
std
push
jecxz
pusha
dec
pop
ljmp
ds
in
push
inc
insb
outsb
mov
mov
test
mov
mov
clc
pop
push
iret
mov
sbb
adc
test
jnp
out
fistpl
jns
jg
pop
stos
lds
mov
scas
mov
adc
faddl
cwtl
inc
push
adc
jno
cmc
call
dec
mov
aas
mov
pop
xchg
gs
cli
xchg
and
dec
xchg
jg
cs
pop
inc
stc
or
pop
int
fwait
push
and
dec
ja
fwait
aam
xlat
xor
xor
stos
arpl
std
and
xor
arpl
jb
pop
out
fsub
sbb
movsl
lahf
addr16
sbb
adc
add
jmp
sub
pop
push
ja
cmpb
inc
xchg
adc
push
aad
inc
jo
stos
cs
fisttpll
add
stos
mov
imul
mov
pop
in
pop
and
pop
fsubs
rcrb
out
fdivrl
cmp
mov
jb
pop
push
stos
mov
imul
sbb
gs
fwait
mov
stos
jns
aad
mulb
lret
hlt
xchg
scas
push
sub
xchg
insb
sbb
fwait
test
popa
shrb
sbb
or
push
push
scas
or
into
jge
es
jns
cmpsb
stos
sub
inc
fs
fstpl
inc
cmp
jo
int3
jmp
jo
lds
clc
cltd
ds
cltd
inc
insb
lods
test
shl
push
sbb
shlb
jp
push
loopne
stos
fs
out
dec
sub
mov
cmpsb
cmp
lds
cs
popa
mov
cli
icebp
pop
xchg
test
mov
clc
inc
notb
or
movsl
sti
in
lret
lahf
sub
push
divb
jg
mov
xchg
sbb
and
shll
in
out
dec
dec
and
push
in
inc
pop
jmp
jle
in
daa
mov
aaa
mov
cld
jmp
jno
or
cmp
adc
out
cld
jmp
lret
arpl
jmp
scas
or
sub
xchg
cmpsl
mov
or
mov
pushf
cmp
xchg
imul
loope
add
cmpsb
out
insl
in
aas
out
lods
in
inc
ljmp
lods
mov
mov
pop
xchg
std
ljmp
into
push
stc
and
inc
ret
int
popf
xchg
add
in
inc
insb
xchg
lret
xchg
aad
in
les
pop
cmpsb
inc
dec
xchg
add
dec
mov
sub
scas
daa
push
shrb
jb
xlat
pop
xorl
lahf
inc
dec
clc
int
mov
add
and
sahf
fs
repnz
jle
das
fldenv
ss
test
mov
pop
fisubrs
mov
jmp
push
inc
test
in
sarb
pop
je
dec
int3
mov
int3
jb
mov
test
int3
jg
push
dec
pop
mov
mov
ficomps
hlt
inc
mov
ljmp
stc
in
xchg
or
and
arpl
aad
jns
outsb
pusha
ret
sub
sub
clc
stos
aas
cmove
jo
jbe
mov
data16
in
stos
sub
or
sub
shlb
mov
jl
int3
cmpb
rclb
jge
hlt
arpl
cmp
xchg
stos
push
stos
outsl
push
movsb
push
xor
mov
mov
lods
sub
mov
and
inc
sbb
je
int3
xor
arpl
jno
push
repz
push
cmp
popf
inc
ja
stos
and
mov
add
std
cmc
in
loope
sub
loop
hlt
add
scas
sbb
fisubrl
push
mov
mov
adcb
fldlg2
cmpsl
icebp
pop
jbe
mov
adc
ljmp
dec
gs
xchg
sub
adc
add
xchg
lods
jo
dec
pop
or
add
popa
xchg
mov
pop
fldenv
lods
pop
cmp
and
mov
dec
pop
xor
aas
hlt
call
in
bound
lock
sahf
cmp
xor
xchg
sub
push
call
and
and
jne
jle
shlb
cmp
inc
xlat
cs
xorl
sbb
and
pop
mov
dec
jae
mov
inc
push
testl
pop
mov
frstor
pop
push
stos
inc
add
adc
rep
xor
mov
loop
popf
shrl
jb
cmp
popf
scas
fsub
pop
and
stos
aad
repnz
mov
jo
addb
push
repnz
loop
push
stos
filds
mov
in
cmp
mov
and
dec
je
sbb
pandn
mov
popf
push
mov
addr16
mov
mov
fsubl
jecxz
mov
scas
fucom
inc
sub
addb
mov
push
out
fadds
testl
adc
and
scas
push
mov
mov
pusha
andl
dec
icebp
mov
push
out
mov
in
dec
jb
out
pop
sub
rclb
jl
movsb
imul
popa
cwtl
inc
scas
adc
fsts
xchg
jno
jg
inc
and
ret
scas
nop
adc
adc
lahf
cmp
test
mov
add
mov
cltd
and
les
lret
das
lret
es
jns
sahf
in
push
std
outsb
cmpb
popa
cmp
adc
stos
mov
loopne
mov
cmp
pop
enter
mov
mov
ja
jnp
das
aaa
cmp
lret
push
mov
aam
add
xchg
addr16
rcrb
mov
inc
jge
lods
ficomps
cmpl
jle
fildll
fwait
scas
lods
mov
repnz
mov
or
addr16
dec
out
jo
or
gs
inc
jnp
pop
dec
outsb
ss
inc
aas
inc
outsl
pop
xchg
out
add
xchg
insb
enter
mov
or
inc
xchg
xor
xchg
jnp
rep
outsl
push
dec
push
and
leave
jl
adc
nop
adc
std
rorl
out
scas
cs
sti
xchg
je
dec
mov
daa
fldenv
push
xchg
lcall
mov
adc
xor
cmp
sub
clc
das
scas
pop
popa
ss
pop
push
ret
hlt
ret
fistps
and
popf
arpl
test
push
cwtl
arpl
or
sbb
mov
insb
sub
es
gs
popa
or
cmp
call
xor
pop
pop
cs
imul
add
xchg
lahf
out
cwtl
stos
sbb
and
lahf
in
xor
push
inc
or
xlat
out
fs
sub
daa
hlt
ffreep
int3
cld
scas
lds
xor
mov
and
dec
dec
vinserti32x8
push
es
pop
jbe
push
or
push
xor
push
mov
pop
jp
mov
xor
sbbb
push
test
in
mov
enter
jns
cmp
fstpl
sub
incl
push
jnp
jno
cld
cli
out
fsubp
inc
xchg
pop
out
inc
cli
add
stos
ret
sub
mov
pushf
pusha
dec
addl
bound
and
mov
mov
outsb
orb
push
pop
inc
add
sub
xlat
pop
cmpsb
mov
and
hlt
jg
idiv
roll
inc
lea
lret
push
and
mov
fs
inc
out
fdivrl
ss
mov
imul
jecxz
mov
fistps
pop
pop
cmp
xchg
mov
scas
ret
adc
insl
jae
clc
pop
out
arpl
and
jg
pop
mov
mov
mov
ja
lock
dec
jb
xor
xchg
push
lods
dec
sbb
push
icebp
ja
and
popa
mov
mov
sub
pop
and
jne
jl
int3
xor
testl
sub
cmp
cs
push
lods
rcrb
imul
fdivs
pushl
lods
rorl
or
ror
xchg
push
outsb
dec
cmc
or
lcall
xchg
aam
push
jmp
shrb
enter
xor
dec
fisubrs
xlat
pop
std
fbld
in
pusha
ret
ss
aad
xor
sahf
enter
js
adc
int3
inc
repz
sub
and
add
jle
mov
cld
or
int
cmpsl
scas
leave
leave
and
test
outsl
test
sbb
inc
enter
fdivrs
stos
jnp
push
dec
push
push
and
and
push
inc
shlb
or
mov
fs
push
out
push
mov
icebp
dec
cltd
push
mov
cmp
lods
fcoml
outsl
insb
ljmp
lret
mov
xor
adc
data16
cli
out
mov
cmp
jb
dec
add
jecxz
arpl
adc
into
dec
mov
dec
and
clc
lock
or
sbb
pop
fsubrl
jl
mov
sbbb
loopnew
or
pmaxub
mov
pop
mov
test
movsl
fmul
outsb
test
pop
stos
sub
pop
mov
subl
clc
mov
int
push
ret
into
add
mov
jge
jg
add
bound
pop
outsb
arpl
or
inc
movsl
in
mov
aad
outsl
out
pop
jns
roll
sbb
inc
and
xor
mov
xchg
pop
and
sarb
gs
imul
inc
scas
addr16
lea
inc
xchg
jl
loope
adc
nop
sub
pop
or
loop
cwtl
push
adc
enter
pop
xchg
add
lds
sub
push
adc
xor
xlat
ja
sub
sbb
jno
pop
std
lock
push
imul
sbb
push
xchg
jmp
jnp
xchg
shll
sbb
fwait
and
out
jno
mov
icebp
cmp
fdivrs
jbe
dec
adc
mov
mov
jp
sub
push
mov
xchg
andb
jae
adc
inc
xchg
ljmp
inc
inc
cltd
jo
data16
dec
rcll
mov
fcomps
jb
fidivs
imul
mov
pop
sbb
push
or
ljmp
fildl
bound
fiaddl
loop
into
aad
xor
and
add
dec
pop
push
lock
popa
movsb
subl
out
jno
add
data16
inc
mov
mov
sbb
imul
iret
std
or
fst
push
ja,pn
pop
push
or
mov
insb
sub
pop
lds
fidivrs
jno
test
pop
jbe
mov
pop
push
inc
inc
jnp
pop
pop
out
push
sub
or
aaa
cs
sahf
cmp
jp
insb
and
jne
jg
lds
inc
xchg
and
stos
sahf
add
cmpsl
cmp
popa
dec
imul
xor
loope
iret
outsb
sub
mov
orl
aad
adc
or
cltd
mov
popa
and
test
add
xchg
mov
stc
mov
clc
xor
aaa
test
cmp
pushf
out
test
test
mov
int
or
mov
push
adc
adc
out
pop
push
outsl
mov
enter
jg
fldcw
xor
mov
out
jl
cs
xor
push
mov
lock
adc
jbe
mov
pop
addr16
call
and
add
out
repnz
loop
leave
arpl
adc
std
or
jb
fdivl
pop
push
ret
stos
clc
xor
pop
int3
pop
pop
cmp
int
stc
fdivp
push
inc
adc
cmp
xchg
das
ds
mov
cli
movsw
mov
sahf
lret
cmc
sahf
fstl
movsl
scas
lret
dec
addr16
mov
mov
mov
insb
xchg
ljmp
xchg
jp
aas
inc
sub
and
mov
jge
orb
dec
sub
lock
mov
fcoml
add
pop
lods
jo
adc
cmp
mov
ret
mov
repz
dec
jmp
shl
out
mov
imul
loopne
testb
pop
scas
lcall
xchg
loop
add
xchg
add
and
ja
loope
dec
sub
push
daa
icebp
and
scas
hlt
sarb
mov
push
adc
lock
or
jl
mov
pusha
inc
and
in
cs
jne
jbe
jg
in
xor
ret
lods
push
fildll
lea
fs
and
daa
and
lds
add
out
and
add
jp
fisubrl
sub
std
mov
and
xorb
hlt
pushf
loope
int3
or
mov
in
movsb
repnz
popf
pop
popf
xor
fcomp
add
clc
inc
jo
or
outsl
nop
clc
inc
push
sbb
push
aas
sub
mov
adc
jg
dec
pushf
xchg
and
mov
jo
add
mov
shrl
shlb
sbb
std
movsb
xchg
idivb
sub
stos
fsubs
fsubs
push
jle
icebp
xor
lret
jg
mov
adc
lcall
pop
cmp
push
mov
xor
jg
outsl
ss
int
and
out
pop
jp
cmpsb
test
xchg
push
rcl
cmp
jne
sti
mov
pop
and
dec
fimull
mov
lds
mov
add
and
popf
scas
enter
add
mov
fisubs
adc
out
jne
nop
or
lea
insb
cmp
mov
stos
pop
push
inc
cmp
or
ljmp
xor
repnz
jl
in
mov
cwtl
fcomps
xchg
pop
adc
out
fcoml
mov
pop
int3
mov
das
mov
xor
insl
jns
rcrb
outsl
adc
push
fucomip
ja
sbb
mov
ss
mov
mov
fidivs
lds
jecxz
mov
sub
iret
addr16
adc
test
mov
in
jmp
aas
jb
movsb
xchg
int
sub
sbb
lock
add
js
cmp
and
push
adc
pop
repnz
out
fdivrl
imul
jg
f2xm1
int
push
mov
mov
popf
add
lret
adc
adc
jnp
movsb
mov
dec
fldl
push
and
mov
lcall
imul
xchg
lcall
out
dec
push
and
aad
pop
adc
cmp
cmpsb
divl
xor
cwtl
aam
push
outsb
dec
repnz
divl
fnsave
dec
jae
lods
mov
fcoms
mov
daa
push
mov
loop
pop
inc
xchg
push
mov
fisubrl
add
icebp
jecxz
inc
stos
fbld
inc
jg
xchg
aam
or
inc
out
cs
ja
xor
lret
mov
push
jg
jmp
xchg
xchg
xchg
and
mov
stc
xor
xchg
mov
xor
pop
divl
mov
adc
push
sarl
xchg
mov
jge
pop
outsb
jb
cmp
nop
jb
cmpsb
push
clc
mov
stc
xor
ss
in
test
mov
in
scas
cld
sbb
mov
jb
sbb
outsb
subb
pushf
jg
shll
stos
andb
and
movsl
add
push
mov
or
popf
adc
cs
push
shrb
rclb
sbb
jecxz
test
incb
lock
ljmp
sub
jnp
addb
shrl
popf
sub
push
insl
and
out
ljmp
aam
push
sti
mov
push
push
ds
aad
sbb
imul
and
aas
push
jl
sub
jg
dec
pushf
mov
cmpsb
leave
inc
push
adc
in
lods
cmp
andb
test
imul
cli
aas
fisubrl
jae
pop
lahf
ja
cli
mov
mov
sbb
shl
das
fildl
dec
jae
xor
mov
fs
sbb
aaa
mov
sub
cmp
sub
sub
mov
repnz
out
sub
dec
adcl
stos
out
dec
sarb
mov
cs
out
out
jl
outsb
out
aaa
repnz
stos
pop
mov
test
ds
mov
jg
int3
push
sti
pop
add
pop
mov
mov
jecxz
jle
or
mov
mov
cmpsb
dec
enter
mov
in
out
xchg
lds
push
fdivrs
add
xor
loop
dec
lods
xchg
mov
aad
jecxz
push
out
pop
push
xlat
daa
push
imul
mov
jecxz
test
xor
out
repnz
add
jae
mov
fildl
adc
daa
in
movsb
aam
dec
xor
daa
adcl
adc
sub
aaa
xchg
mov
clc
mov
shrb
loop
dec
in
in
cmp
pop
push
mov
ret
mov
test
imul
xchg
insb
inc
sub
shll
xchg
stc
xor
mov
adc
mov
mov
iret
imulb
insb
mov
mov
push
sub
xchg
in
sub
add
repnz
and
cwtl
clc
daa
repz
mov
pop
pushf
jmp
fsubp
inc
into
mov
pop
push
adcb
pop
out
mov
inc
push
jecxz
stos
push
stos
push
pusha
xchg
out
fildl
adc
adc
iret
leave
imul
mov
xchg
pop
fistps
xchg
and
jmp
mov
cmpps
adc
mov
push
xchg
sub
mov
pop
mov
int
loope
fwait
mov
adc
pushf
dec
jns
mov
push
aad
jle
push
stos
daa
sbb
ret
sbb
lahf
jge,pt
cmp
fildl
adc
incl
mov
pop
xchg
push
insl
das
mov
inc
ljmp
mov
out
cmpsb
add
pop
outsb
imul
and
xchg
sbb
aad
adc
pop
jge
imul
pop
push
enter
mov
sub
lock
add
js
mov
xor
pop
test
cmp
push
fildl
adc
adc
cli
mov
call
cmp
push
pop
pushf
mov
push
out
push
xchg
outsb
xchg
shll
mov
cmp
repnz
xchg
aad
lret
mov
lahf
aad
adc
pop
cmp
lcall
aad
lods
adc
xor
adc
hlt
call
pop
xor
adc
shlb
mov
movsb
adc
mov
jmp
nop
les
pop
fidivrs
push
mov
ret
js
cld
and
popa
outsb
add
jae
and
shrl
and
fsubrl
leave
fisubrs
test
sbb
rolb
icebp
in
mov
inc
jecxz
fstps
scas
push
call
jle
sub
out
pop
ja
xchg
sarb
jg
test
mov
push
add
sti
vmovss
adc
mov
or
pop
jge
sub
mov
test
das
inc
mov
or
loopne
rcr
into
cld
cltd
push
pushf
es
pop
and
add
jne
mov
addr16
inc
push
adc
insl
cmpsl
mov
js
jecxz
sbb
xchg
in
fnstcw
xchg
push
adc
ffree
movntq
loopne
jae
scas
cmp
insl
jne
test
lods
sub
adc
in
leave
std
cmp
repnz
adc
mov
cmp
mov
pop
rcll
sbb
popf
std
add
outsl
int3
mov
scas
lds
mov
popf
and
pushf
mov
inc
mov
pusha
mov
sahf
pop
mov
or
mov
popa
stos
lds
mov
sbb
xlat
into
xlat
in
inc
push
cmpsl
mov
movsb
mov
pop
pop
insb
jmp
stos
lods
push
or
mov
mov
leave
lcall
lods
jns
test
inc
adc
inc
cmc
roll
in
cmp
cwtl
xchg
push
or
int
mov
adc
ror
icebp
shll
and
add
xchg
lcall
popf
jmp
ret
lods
arpl
or
and
stos
outsb
fwait
or
sbb
pushf
testl
jae
adc
mov
add
sub
pop
pop
push
cltd
cmp
ret
jp
mov
inc
stos
add
das
lea
cmp
mov
mov
ret
mov
shll
push
test
loop
outsl
xlat
iret
imul
add
jmp
sub
adc
int3
loop
sub
pop
fildl
sarl
jae
mov
add
repnz
andb
xchg
xchg
in
scas
cmpsb
cmpsl
jae
test
gs
dec
sub
or
pop
hlt
div
call
push
xor
push
and
rcrb
dec
ja
fwait
aam
adc
xor
mov
sub
test
fidivs
fbld
mov
xor
out
push
jmp
jae
mov
pop
xor
inc
jp
fistps
and
ret
adc
into
mov
xchg
stos
adc
data16
loope
mov
jmp
dec
sahf
cmp
dec
mov
add
add
dec
repz
or
xor
enter
inc
xchg
rorl
jge
aad
lds
mov
sub
cmp
xor
orb
clc
adc
mov
and
ret
fwait
aam
add
xor
pop
rcrb
and
pop
cmc
or
repnz
clc
mov
cld
xor
out
cltd
enter
cmp
mov
add
mov
shlb
sub
iret
push
or
pop
mov
sub
inc
or
and
mov
xor
icebp
ja
dec
jae
idivb
ja
shll
mov
mov
fsubr
pop
pop
pop
xchg
fwait
shlb
cmp
xor
ss
jo
pop
cs
xor
push
add
mov
or
mov
sbb
pop
inc
xchg
xchg
jl
sbb
popa
loopne
cli
xlat
inc
mov
loopne
lret
out
stos
stos
mov
enter
push
ljmp
xchg
cltd
icebp
push
and
xchg
imul
gs
and
subb
xchg
ja
pop
cmpsb
scas
fildl
adc
je
push
xchg
jnp
cmpsl
xchg
notb
inc
test
mov
decl
pop
arpl
sarl
pushf
or
out
xchg
dec
and
mov
test
mov
in
cwtl
mov
fisttpll
push
cmp
mov
inc
mov
popf
add
loopne
icebp
xorb
popf
clc
mulb
nop
ret
inc
sti
lock
imul
cwtl
mov
das
jge
ja
cmpsl
dec
adc
cmpsl
out
cmp
ss
push
aad
shll
mov
lret
stc
jl,pt
mov
mov
mov
in
jp
sub
xchg
inc
cmpsl
push
mov
mov
push
mov
iret
add
add
jl
cmp
daa
movsl
xor
or
call
hlt
in
xchg
mov
mov
push
call
ss
nop
push
es
jle
xor
stos
fsts
push
xor
jmp
mov
addl
push
or
lret
pop
xorb
and
fs
filds
jl
inc
fwait
fsubl
pop
inc
inc
mov
lret
jbe
adc
sbb
ja
rorl
out
jns
scas
or
cmp
mov
and
dec
dec
and
inc
push
inc
icebp
test
mov
mov
push
scas
push
std
inc
stos
pop
fimull
adc
ss
addr16
mov
jp
data16
mov
jb
add
int3
add
movsb
push
push
mov
rclb
lcall
incb
test
lock
push
mov
shll
fisttpl
and
push
mov
sub
sub
push
adc
in
daa
in
jbe
ljmp
inc
test
sbb
jge
ja
push
pop
jge
adc
xor
setg
and
outsb
push
loope
inc
xchg
push
stos
push
fsubp
scas
into
mov
pop
lock
inc
mov
sbb
jg
mov
clc
pop
mov
inc
mov
scas
pop
lret
push
inc
mov
pusha
mov
mulb
jb
adc
adc
scas
pop
int3
sti
sarl
pop
push
fwait
pop
xor
xor
or
push
mov
fcomip
mov
lock
xchg
mov
inc
xchg
mov
aad
ret
out
lret
out
cmc
or
aaa
cs
sahf
cmp
add
adc
jno
cmc
call
xchg
inc
bound
mov
jnp
push
pop
inc
sub
stos
mov
movsb
mov
xchg
pop
out
sub
push
push
mull
insl
xchg
inc
mov
mov
add
mov
push
xchg
ja
ljmp
and
jae
iret
push
cld
jne
sub
dec
jno
push
adc
sub
pop
adc
icebp
mov
hlt
mov
dec
push
ror
addl
pop
ret
push
loope
adc
pop
adc
iret
sbb
jno
xor
fbld
sbb
inc
xor
push
cmpsl
and
or
out
fwait
xlat
mov
clc
insl
adc
dec
dec
sbb
insb
push
inc
insl
movsl
dec
sahf
push
jo
or
or
mov
xchg
dec
jl
ja
frstor
xchg
adc
insl
loop
push
stos
xlat
outsb
pop
dec
push
popf
cmp
pushf
jmp
adc
xlat
nop
mov
jmp
fildl
adc
arpl
lds
in
mov
sbb
adc
adc
shlb
test
cmpsb
nop
scas
inc
lods
push
mov
sub
fdivrs
repnz
adc
mov
and
xchg
cmpsb
dec
scas
inc
xchg
mov
testl
lods
lcall
adc
insl
xchg
dec
arpl
and
mov
out
and
faddl
or
adc
and
jp
xorb
std
std
cltd
push
lods
out
dec
xor
aad
call
dec
jns
mov
sbb
or
jl
mov
stc
xor
out
pop
adc
or
mov
out
sub
pop
and
sbb
mov
je
out
adc
cltd
xor
pop
fldcw
nop
dec
cltd
cmp
pushl
stos
jne
enter
lods
loope
adc
test
push
imul
inc
mov
adc
xchg
sbb
xchg
xor
call
aad
clc
adc
movsb
fsubs
xor
dec
jmp
rorb
jl
or
xor
sub
jb
xor
xchg
add
into
cmp
ljmp
xchg
and
aaa
out
sub
addr16
push
and
cmp
arpl
shrl
or
pop
pusha
in
out
mov
ret
shl
fists
dec
mov
sub
push
les
pop
or
dec
clc
inc
inc
inc
mov
icebp
cmp
outsl
xchg
ljmp
mov
mov
xor
popf
bound
fs
mov
jecxz
xchg
inc
push
xchg
call
cmp
push
jnp
xor
xchg
popf
mov
ficoms
or
mov
sahf
js
je
int3
lcall
or
pop
adc
and
and
cmc
push
int
jne
push
cmpsl
in
cld
repz
iret
xlat
jg
ja
inc
push
adc
testl
sub
xchg
mov
int
and
cmp
mov
bnd
add
push
inc
push
and
cmp
push
adc
daa
les
add
lret
ror
push
lods
push
stos
daa
adc
sub
pop
js
testb
push
mov
inc
shr
pop
cli
sahf
jmp
repnz
sub
jns
push
inc
rolb
and
xor
adc
cmc
add
cmp
test
test
in
xor
lds
xor
jae
adc
cmp
add
flds
stos
ds
stos
cmpsl
clc
adc
mov
imul
fdivrl
jno
push
adc
fdecstp
inc
lea
pop
stos
fucom
mov
jae
or
fidivl
sub
inc
rorl
in
adc
mov
sbb
test
lock
xor
test
xchg
movsb
cmpsl
jne
icebp
inc
jmp
or
fsub
inc
popf
sti
adc
mov
iret
adc
clc
and
out
data16
cmp
mov
stos
sbb
fiadds
or
push
xor
push
stos
sub
pop
mov
cmp
insl
fwait
int3
mov
lret
in
mov
cmp
jo
fsubp
movsb
inc
xchg
cs
lret
sub
insb
subb
sahf
jge
shll
aad
addb
mov
clc
sbb
adc
mov
repnz
hlt
pop
adc
out
movsl
and
lahf
mov
int3
jp
push
popa
cwtl
sti
cmc
jmp
fnstsw
clc
xchg
sub
push
mov
push
ljmp
xor
lods
cmp
shlb
hlt
pop
daa
xchg
pop
sarb
int
pop
jae
dec
cmp
mov
and
gs
mov
cmp
movlps
rcrl
inc
xor
ret
enter
jg
mov
inc
sbb
mov
lret
in
imul
leave
inc
aaa
add
ret
pop
fwait
xchg
dec
mov
xor
jl
popa
lds
jmp
jl
jb
adc
inc
aam
add
pop
lcall
adc
frstor
lock
push
pop
mov
loopne
adc
enter
popa
loopne
push
adc
sbb
xlat
scas
push
mov
sbb
mov
cmp
sbb
mov
scas
cmc
pop
test
stc
loopne
and
pop
adc
data16
xor
jmp
cli
pop
adc
cmpsl
enter
das
incb
pusha
jle
andb
gs
clc
inc
mov
aas
or
ror
ja
cmpsl
add
repnz
ljmp
loope,pn
cmp
iret
or
pop
fcmovnbe
cmp
loope
leave
push
ret
ror
inc
and
add
xchg
jmp
out
mov
push
out
testb
push
std
add
adc
jbe
int
cmp
mov
mov
popf
add
stos
aad
stos
fnsave
pop
pop
mov
pop
pop
imul
data16
sbb
ret
lock
int3
arpl
loop
arpl
pushf
jbe
or
out
loop
sub
stos
inc
sbb
push
push
jmp
sbb
mov
xchg
mov
push
arpl
daa
sub
lahf
adc
jmp
sub
loop
jb
push
jmp
test
mov
mov
lret
sub
test
outsl
pop
aad
aad
imul
repnz
out
fdivrl
xlat
scas
cmc
call
fdivs
push
push
dec
xlat
popa
lods
dec
xchg
enter
mov
xor
jge
cmc
gs
mov
xchg
mov
addr16
and
push
adc
icebp
outsl
jl
movsl
mov
dec
arpl
and
adc
sub
push
sbb
mov
rcrb
mov
pop
sub
cmc
lea
iret
add
imul
jbe
jnp
sub
lahf
sbb
call
iret
add
push
and
inc
fucomip
addr16
pop
js
repz
fdivrl
sub
mov
add
pop
mov
cmp
iret
add
nop
sub
push
and
jle
iret
lahf
ds
mov
xchg
les
fbld
pop
cmpsl
lret
or
and
push
out
inc
push
dec
jb
cmc
pop
cmpsl
stos
scas
dec
xlat
lret
in
pop
inc
pop
and
jae
push
int
mov
nop
shll
hlt
mov
cltd
fsts
pop
fisubs
int3
scas
dec
jle
ret
fwait
aam
mov
andb
mulb
inc
imul
sub
jne
adc
inc
push
out
inc
push
add
pop
sbb
cmp
add
mov
push
mov
or
aaa
decl
xor
and
shl
outsb
aad
fiadds
call
dec
jae
int3
lock
inc
fwait
das
mov
orb
in
xor
push
mov
inc
jge
push
je
xorl
lcall
int3
inc
repz
test
push
or
scas
push
negb
lret
rorb
icebp
xor
cmp
and
jo
ss
and
pop
ret
hlt
mov
xchg
mov
lods
cmpsb
mov
xchg
dec
dec
lds
stos
fstpt
inc
mov
out
jp
pop
das
dec
push
mov
or
stc
lahf
stos
pop
add
push
adc
std
test
int3
sub
popa
push
in
in
adc
aad
not
pop
jg
adc
lret
jl
sub
jg
scas
cli
lret
cltd
fs
adc
lds
xor
adc
xor
dec
jae
repnz
adc
popa
cmpsl
mov
xor
xchg
outsl
sbb
ss
lahf
adc
and
xor
mov
or
pop
dec
hlt
out
mov
mov
cmp
push
xchg
stos
mov
sub
mov
shr
idivl
fsts
mov
cmp
ss
inc
push
and
scas
loopne
test
lods
stos
jge
lds
out
in
loope
jp
xchg
and
inc
or
mov
cmpsb
clc
mov
leave
xor
jp
mov
pop
dec
sbb
cmp
xlat
xchg
jne
decb
int
leave
pop
jecxz
ja
pusha
add
call
pop
pop
enter
or
add
pop
add
xchg
sub
xchg
ljmp
inc
fidivrs
ficoms
loope
faddl
adc
popf
xchg
adc
ss
jecxz
jne
mov
jge
daa
fisubs
icebp
shlb
pop
jae
xor
lock
add
out
cmp
aaa
push
or
outsl
jmp
daa
adc
pop
xor
lods
sub
out
movb
mov
mov
push
pushf
shlb
lods
dec
jge
mov
call
mov
mov
testl
xchg
outsb
sbb
mov
mov
negb
add
mov
dec
testl
das
mov
cli
xchg
push
sub
jbe
inc
or
push
mov
dec
push
ficompl
outsl
pop
loope
sub
push
fmull
jb
stos
mov
jg
rorl
lret
and
sub
adc
sarb
cmp
loop
jb
xor
fwait
mov
loop
and
push
mov
and
out
mov
sti
into
ja
inc
add
inc
add
addb
stos
push
pop
inc
stc
cmc
dec
sahf
fs
bound
shlb
lock
push
cmp
nop
mov
cmpsl
ret
xchg
cmp
jnp
out
iret
inc
push
adc
pushf
mov
cmp
ret
dec
dec
imul
xchg
push
dec
xchg
jae
add
enter
lds
mov
inc
popa
dec
jae
xor
inc
mov
popa
idivb
mov
inc
lea
xor
stos
stos
fdivrl
jnp
test
shll
ror
aas
jge
mov
push
inc
cmp
pop
fsubp
push
and
mov
mov
sbb
ljmp
sub
push
xlat
test
cmpsl
movsb
popf
mov
ljmp
movsb
jae
sub
inc
cmp
dec
stc
add
fists
add
dec
jne
idivb
sbb
adc
jno
mov
ljmp
mov
stc
fsubrs
inc
roll
out
or
cmp
arpl
xor
popf
push
cmpsb
sbb
lret
int
or
testl
pop
rcr
mov
push
stos
and
sahf
dec
fimull
mov
jecxz
jg
jge
cmpsl
jg
roll
insb
xlat
and
mov
test
outsl
mov
stc
push
repz
aad
lock
mov
adc
mov
mov
or
imul
jp
mov
fiadds
jne
popf
and
add
lahf
ljmp
jle
push
and
xchg
popa
adc
add
add
jmp
jnp
jne
pop
mov
xor
inc
in
sub
dec
mov
xchg
xor
sti
mov
popa
insl
xlat
pop
in
sbb
cld
int
inc
stos
pop
fwait
outsl
push
and
or
aam
sti
inc
adc
es
mov
xchg
mov
inc
out
mov
sbbb
dec
leave
sub
sub
and
cmpxchg
lds
std
lretw
jno
add
pop
cmp
stos
xor
or
sbbb
sbb
es
mov
test
lock
in
mov
sbb
dec
int3
add
jl
and
ret
xor
mov
es
xchg
sbb
mov
shlb
or
pop
gs
jo
push
or
out
stos
nop
sub
xchg
push
mov
movsb
inc
push
jns
cli
mov
cmp
inc
mov
addr16
mov
icebp
lcall
cmc
pop
js
xchg
and
hlt
xchg
mov
icebp
sub
adc
xchg
jge
loopne
fldenv
xor
add
lock
fcomip
jae
out
add
daa
lea
push
enter
scas
ja
movsb
mov
push
cmp
push
xor
add
cmpsb
inc
add
fsubrs
fs
push
fisubs
hlt
mov
jl
mov
dec
test
mov
mulb
clc
fsubrl
xchg
push
sub
loop
xchg
sbb
jno
imul
or
les
mov
lret
movsl
mov
sub
dec
in
popa
ret
stos
int3
xchg
mov
lahf
pusha
dec
jno
mov
xchg
jb
lret
mov
push
and
imul
xor
movsl
stos
mov
pusha
adc
idivb
mov
cmpsb
lods
rolb
dec
jae
flds
inc
mov
jno
cld
xchg
adc
mul
sub
push
fcoms
push
out
jg
cwtl
leave
rorl
mov
cmp
test
in
das
lds
es
fldt
inc
mov
ja
addb
dec
dec
gs
mov
mov
clc
xor
popl
negl
or
in
jmp
pmuludq
adc
sbb
jnp
jns
adc
lock
outsl
cmp
and
inc
push
sub
jp
pusha
mov
mov
sbbb
mov
dec
adc
roll
mov
hlt
add
out
inc
lea
inc
cmc
or
fisubrl
lods
daa
pop
add
dec
push
adc
icebp
mov
call
sbb
negl
push
cmp
fnstsw
ljmp
iret
shl
mov
inc
mov
cmp
ss
nop
mov
push
fcompl
push
mov
test
adc
push
lock
cs
pop
inc
gs
mov
out
outsb
pop
pop
dec
ja
lea
adc
xlat
add
divl
lret
push
push
pop
stos
push
stos
insl
adc
dec
call
and
jle
cmp
or
test
dec
jo
ficoml
pop
test
cmp
xor
adc
sbb
pop
incb
pop
std
cmp
push
scas
leave
dec
arpl
sbb
cmp
pop
xchg
fisubrs
insb
push
push
sub
cltd
and
mov
lds
dec
sub
xchg
lock
fstpl
mov
ss
xor
aas
shrb
inc
sub
lea
idivb
js
xchg
add
sbb
adc
mov
pop
sti
lret
mov
sub
out
pushf
jo
sub
sub
sahf
push
rcrb
imul
push
icebp
out
xor
clc
xchg
and
push
mov
push
sub
add
sbb
push
mov
lods
mov
mov
loope
out
pop
lret
stos
nop
mov
and
inc
adc
adc
shl
xchg
xor
test
adc
adc
push
fstpl
repnz
iret
pop
dec
inc
mov
mov
pop
test
jbe
inc
dec
push
adc
daa
jmp
ret
mov
add
bound
xchg
pop
sbb
add
dec
pop
or
cmpsb
and
out
inc
adc
iret
xchg
pop
mov
xchg
xchg
cli
add
mov
dec
loop
add
push
ja
fisttps
sub
repz
icebp
push
aas
xor
int
jns
sbb
aam
cltd
ss
dec
int
enter
mov
ret
pusha
cmp
push
push
icebp
push
mov
cmpsb
mov
sbb
pop
push
sub
jl
cmp
nop
xchg
pop
push
cmp
lret
adc
jl
fs
dec
lods
add
push
imull
mull
jne
mov
fsubs
lods
mov
pop
jae
add
addr16
sub
push
or
push
dec
arpl
mov
ss
lret
imul
test
pop
lods
out
mov
sarl
sbb
pusha
mov
cs
xchg
or
insb
push
fnsave
jmp
push
and
outsb
js
xchg
sub
ss
lahf
adc
adc
jl
pop
lds
mov
jb
jo
cli
mov
pusha
mov
mov
subb
or
ret
std
arpl
xchg
xlat
and
mov
sbb
dec
lahf
je
call
lahf
mov
mov
pop
sub
sub
fstl
sub
push
push
xor
and
dec
pop
mov
cmc
arpl
dec
add
outsb
fsubrs
popl
and
jae
inc
push
xor
subl
and
push
adc
sub
pop
aad
je
and
pop
daa
and
add
push
in
pop
adc
in
dec
call
mov
xor
xor
sbb
inc
pop
mov
cwtl
pop
or
xor
pop
cmpsl
dec
sahf
cmp
in
clc
or
jg
add
inc
lods
pushf
stos
push
rcr
mov
dec
jo
stos
and
clc
sub
sub
addb
jb
imul
cmp
repz
mov
sbb
cs
mov
rcr
movsb
insb
adc
push
stc
adc
sub
pop
push
ja
jmp
jb
lret
xchg
and
mov
mov
jl
fsubr
clc
filds
mov
jge
aad
and
fimuls
mov
imul
out
movsl
popa
js
jle
movsl
dec
sbb
inc
idivl
cmp
fbstp
fcmovu
imul
cmp
adc
push
lods
push
fists
adc
bound
fwait
mov
enter
mov
aad
pop
jbe
and
scas
aam
inc
sbb
mov
pop
lret
out
xchg
mov
lods
cmpsl
jne
inc
mov
int
push
sub
add
imul
fwait
decl
jge
movsb
lock
sti
pop
cmpsb
add
das
mov
push
clc
adc
cmc
inc
mov
fidivl
and
in
stos
add
xchg
lret
jl
push
push
mov
stc
out
dec
jae
lahf
enter
ss
mov
loop
aam
pusha
pop
sti
cs
aam
lret
xchg
mov
and
and
push
jbe
stos
enter
pop
fisubs
mov
mov
clc
add
jmp
mov
adc
lret
ja
pop
movsl
or
movsl
inc
incb
insl
movsl
mov
out
loope,pt
fwait
cmp
and
dec
or
frstor
cmp
pop
cmp
xor
test
jecxz
add
lret
jmp
ret
ljmp
inc
lahf
jbe
popa
mov
ret
stos
sbb
jb
inc
cmp
lods
data16
xor
es
sbb
mov
jp
and
sub
imul
lcall
adc
daa
push
xor
cmpsb
lock
stos
and
mov
bound
push
adc
and
push
fwait
and
cmp
push
sub
fistps
add
xchg
or
fistps
mov
pop
nop
mov
aaa
jo
adc
std
mov
outsb
cmp
fwait
repz
mov
test
inc
cmp
repz
xor
push
adc
dec
xchg
iret
cld
sbb
jbe
fcompl
int
mov
add
and
pop
dec
scas
adc
xor
mov
movsl
imul
test
or
ret
xor
aad
repz
pop
ja
ret
push
adc
enter
mov
xchg
movsl
js
inc
enter
ja
inc
stos
das
adc
sub
jbe
cs
xor
cld
stos
fcompl
cmp
and
mov
inc
rcr
xchg
pusha
lods
pop
sub
jns
push
jecxz
stos
push
stos
push
pusha
nop
pop
jo
push
adc
lcall
mov
neg
lods
fprem1
sub
inc
lods
popf
sub
sbb
pop
add
test
mov
push
movsb
stos
scas
mov
outsb
inc
daa
sbb
out
push
popa
ret
sbb
lahf
jge,pt
aaa
push
jo
push
adc
push
sub
stos
inc
inc
and
stos
and
or
jb
push
xchg
aad
adc
ljmp
pop
test
inc
mov
mov
sbb
mov
push
shll
pop
stos
push
test
mov
shl
aaa
mov
sub
mov
lds
lcall
adc
fidivrs
cmpsb
mov
stos
arpl
lods
mov
enter
fldcw
inc
pop
cmp
and
jmp
fidivl
imul
out
scas
mov
and
mov
push
lcall
iret
ja
cmp
hlt
arpl
addr16
push
stos
punpcklbw
test
sbb
or
in
jmp
pop
fcom
imul
addb
mov
out
stos
int
push
mov
and
pusha
push
jb
fdivrl
mov
mov
sub
fnstcw
andl
push
sbb
jbe
xchg
fistpll
xor
mov
ljmp
xchg
mov
push
test
negl
fcmovne
js
mov
push
mov
pop
stos
and
xor
push
push
fistpl
mov
movsb
sbb
pop
out
out
xchg
mov
testl
sbbl
mov
jbe
push
call
cmp
xchg
jae
adc
push
push
repnz
bswap
inc
xor
xor
mov
iret
cld
cltd
sarb
loope
or
scas
fadds
jl
mov
jne
lret
jne
adc
into
or
std
dec
cmpl
ret
push
cwtl
test
loop
xor
add
imul
cmp
push
mov
ljmp
and
add
test
push
and
verw
pusha
das
psllw
stos
test
lods
push
cs
mov
cmp
or
adcb
inc
xor
jns
ret
jl
xor
adc
push
out
movsl
dec
cmpsb
push
push
andb
adc
mov
in
xchg
mov
clc
inc
jo
in
shll
mov
call
pop
and
ret
nop
rcll
jg
mov
bound
das
repz
sbb
sub
jecxz
icebp
lods
jmp
and
addr16
adc
loopne
lods
cs
jmp
test
ret
and
roll
loope
push
inc
js
lret
jge
xchg
xor
stos
int
jne
sbb
cmp
daa
mov
out
dec
scas
lret
jle
or
popw
aas
sub
adc
imul
stos
adc
lret
mov
xor
sub
inc
xlat
inc
mov
je
mov
inc
aas
imul
ljmp
daa
sti
roll
les
pop
add
je
jp
mov
jge
sub
adc
aas
sbb
push
mov
adc
loopnew
add
dec
dec
push
lods
inc
mov
inc
xchg
xchg
sbb
clc
inc
mov
inc
add
push
mov
insl
fisubrs
xchg
push
test
bound
loope
fdivl
iret
adc
subl
xchg
sub
insl
push
pop
sub
outsb
idivb
and
outsb
jb
roll
mov
pop
imull
imul
xor
pop
lahf
adc
xor
xchg
aam
add
push
lods
jmp
or
and
jmp
roll
inc
stc
sbb
add
push
aaa
jo
lods
pop
inc
or
nop
stos
xlat
xorl
popf
fstps
xchg
mov
push
lods
pop
dec
sahf
cmp
jns
fimuls
imul
adc
icebp
push
stos
push
and
ret
int3
pop
les
mov
or
cs
dec
mov
adc
jl
lods
pop
cmp
and
fbld
subb
jb
or
icebp
push
stos
push
and
push
inc
ljmp
out
adc
repnz
or
scas
sub
dec
mov
push
add
in
mov
mov
sti
xchg
cwtl
push
adc
and
rcrl
rcr
xchg
or
lods
and
es
negb
xor
insl
nop
or
repnz
in
sub
rclb
pop
cmpsl
insl
xchg
arpl
mov
xor
jns
hlt
imul
dec
or
push
stc
fsub
aam
das
cmpsb
adc
push
cmc
out
and
cmc
pusha
lods
push
scas
sti
inc
enter
push
push
stos
push
add
sbbl
testb
mov
dec
movsl
ret
jo
pop
ljmp
in
xor
and
dec
adc
xchg
sbb
daa
inc
mov
add
adc
cs
lods
loope
xchg
movsb
mov
das
lods
lods
cld
push
mov
jnp
dec
test
enter
scas
lds
adc
stos
gs
dec
mov
jnp
push
pushf
or
cs
add
fadds
push
cld
daa
insl
inc
mov
and
movsb
sub
mov
loope
xor
dec
mov
xlat
fnsave
jne
out
jnp
and
pop
int
sti
fdiv
mov
outsl
sbb
mov
les
add
pop
das
fcomi
sbbb
leave
cmp
xchg
jne
jnp
dec
out
adc
stos
pop
fs
stos
repz
sub
mov
test
ds
jbe
mov
fnstenv
add
sub
push
add
clc
fwait
stos
jle
and
add
push
loope
hlt
mov
lret
rorl
mov
jecxz
das
jl
sub
add
into
mov
jns
push
dec
mov
sbb
orb
ljmp
mov
gs
leave
sub
mov
and
mov
jp
push
lret
out
pusha
add
dec
ret
jbe
shll
xorb
push
pop
jo
push
jle
lahf
adc
rcrl
sarb
add
jns
lret
add
jp
pop
mov
dec
rcr
cltd
not
clc
test
or
ret
xchg
pop
shl
pop
loop
mov
loope
rolb
fsubs
mov
cmp
cmp
mov
mov
mov
repz
lods
cmp
mov
mov
inc
es
jg
aas
in
mov
mov
pop
out
pop
dec
push
arpl
ret
mov
sahf
push
into
das
imul
jmp
fstpl
push
cmp
mov
rcll
cwtl
mov
lods
je
pop
xchg
scas
fdivr
nop
mov
push
out
test
push
addb
adc
xchg
add
cs
xchg
in
xchg
pop
das
adcl
ret
adc
fcmovb
js
xor
pop
adc
add
xchg
in
scas
mov
or
iret
mov
adc
sub
push
adc
mov
sub
mov
addb
xor
cmp
lods
lds
inc
pusha
push
push
pop
ficoms
stos
test
aam
es
lcall
push
push
nop
cmc
arpl
dec
fisttps
out
loope
inc
push
stc
cmp
or
mov
xor
in
addl
xchg
roll
sub
adc
push
fbstp
push
or
into
adcl
pop
idivb
clc
push
in
sarl
out
lahf
mov
add
pop
cs
repnz
push
xchg
stos
cmpsb
xlat
mov
sahf
cmp
inc
mov
inc
and
add
mov
popf
push
stos
push
xchg
in
scas
mov
dec
mov
inc
mov
into
leave
ret
jns
cltd
pop
mov
stc
push
stos
push
add
push
sub
pop
js
incl
push
inc
mov
dec
and
addb
jb
lret
sub
mov
and
lret
mov
pop
pop
aad
ret
test
adc
lret
fistps
leave
lea
jb
and
out
lahf
ds
mov
add
subb
sarl
stc
xor
into
xor
xchg
fnstenv
fsubs
inc
sub
pop
xchg
int3
xorl
nop
lret
adc
push
pop
or
out
cmp
sarb
mov
lret
out
mov
cwtl
inc
out
adc
mov
scas
push
mov
sbb
cmp
ret
cmp
idivb
dec
insl
dec
push
stos
and
rclb
imulb
sbb
ds
je
sub
xor
inc
xchg
push
push
aaa
add
adc
data16
mov
dec
lahf
push
lds
jne
arpl
push
mov
popf
clc
mov
jbe
mov
pop
and
int3
push
inc
lds
pop
rclb
mov
add
fldl
aad
mov
cmp
mov
enter
std
cmpsb
cld
adc
je
lcall
mov
mov
push
xor
mov
jns
icebp
call
out
adc
xchg
jmp
push
mov
mov
shrb
jo
imul
xor
lret
outsb
leave
push
in
dec
push
adc
shll
mov
mov
sub
shr
lock
jne
mov
pop
adc
leave
scas
imul
sub
jne
ds
out
scas
scas
push
lods
jecxz
adc
les
pop
sbb
mov
jge
push
inc
fldt
push
aam
cltd
dec
leave
scas
push
mov
cs
cmp
push
js
fbstp
call
mov
je
jno
out
adc
cmpsb
pushf
cmp
and
and
loop
mov
je
xchg
lea
dec
cs
gs
pop
dec
test
outsl
mov
inc
in
dec
push
adc
imul
dec
sbb
inc
roll
cmp
clc
loopne
mov
lea
jp
or
aaa
stc
dec
ret
or
pop
movsl
mov
pop
sub
out
adc
sub
mov
sbb
cwtl
imul
aad
push
mov
mov
sti
push
loope
mov
and
xchg
dec
push
adc
add
mov
mov
std
or
leave
pop
adc
loop
lods
std
inc
mov
mov
mov
imul
dec
pop
out
pop
out
cltd
cli
ftst
xchg
or
ds
fdivrl
ret
imul
in
ja
adc
sahf
insb
adc
dec
imul
fdivs
inc
fdivrl
jmp
mov
out
push
mov
inc
and
cmp
dec
in
xor
mov
mov
sti
hlt
call
dec
mov
daa
sbb
ret
xchg
aad
inc
fdivrl
lock
jo
out
pop
imul
inc
in
sti
scas
pop
and
pop
outsb
ret
jge
jg
and
scas
outsb
and
sbb
push
stos
in
and
adc
dec
imul
pop
push
daa
inc
and
pop
adc
sub
xchg
jo
test
mov
and
sbb
arpl
out
fstl
test
pop
ret
sub
pusha
jg
sbb
ja
jmp
or
mov
outsl
clc
test
fsubp
repz
push
outsl
jp
test
sub
xor
xor
jecxz
pop
mov
mov
pop
stos
push
test
xchg
movsb
fnstsw
xchg
push
adc
in
mov
mov
fldcw
leave
pop
adc
imul
out
xor
pop
cltd
adc
subl
xchg
cmp
fwait
mov
ret
rorb
mov
xchg
xchg
and
adc
test
fsubr
pop
shll
pop
mov
xor
enter
clc
jg
fbld
cli
push
sbb
push
shlb
mov
jne
fdivrs
cmp
loopne
inc
aaa
inc
mov
mov
push
and
xor
ss
out
xchg
leave
add
jno
rcll
dec
outsb
and
dec
pop
mov
jno
jmp
dec
and
decl
sbb
mov
inc
and
sub
adc
js
inc
xchg
add
pop
incl
mov
xor
ljmp
xchg
fists
jp
pop
out
adc
sbb
sarb
dec
lahf
js
shll
inc
cbtw
ret
xor
lahf
scas
mov
mov
inc
cmp
push
in
push
movsb
pop
shrl
stos
or
xchg
and
int3
movb
mov
outsl
add
fiaddl
fisubs
stos
ret
add
push
outsb
pop
jns
mov
stos
jmp
fwait
xor
movsl
pop
mov
data16
pop
nop
add
cmp
sbb
and
movsb
sti
int
mov
mov
xchg
lcall
popl
clc
mov
jb
in
repz
xchg
insb
xchg
mov
mov
cmpsl
jbe
arpl
mov
movsl
xor
mov
dec
hlt
xor
inc
sbb
cld
push
sbb
sub
imul
repz
cmp
add
push
loop
test
call
stos
or
pop
cmp
mov
pusha
jne
rol
cmp
pop
or
cwtl
cs
push
adc
sub
dec
loopne
inc
rolb
cmp
leave
addr16
mov
repz
dec
mov
sub
jl
adc
ljmp
sub
lock
jb
push
rolb
test
jecxz
subb
ljmp
dec
push
adc
into
rep
cld
jp
leave
and
pop
adc
jecxz
and
push
push
int3
mov
mov
test
push
out
or
adc
ja
cld
cs
mov
test
cltd
fisubs
pop
popa
ret
mov
mov
shl
lock
cwtl
mov
sahf
mov
jno
in
xchg
ret
xchg
call
and
lcall
mov
rorl
lahf
and
mov
ret
test
insl
mov
adc
jae
cld
cs
mov
sub
daa
sbb
mov
adc
add
pusha
roll
mov
rcll
add
inc
fmuls
mov
out
adc
ljmp
xchg
das
mov
sub
rclb
jae
sub
ljmp
addb
jns
imul
cmpsl
push
stos
push
test
aad
ret
out
fdivl
jmp
adc
cmp
out
int
stos
push
xor
les
ds
xor
in
sbb
adc
pop
add
cmp
push
stos
push
sub
ret
shlb
imul
mov
pop
out
adc
mov
xor
mov
mov
sbb
add
adc
test
outsl
push
and
ret
or
leave
shr
pop
sub
fsts
push
roll
shrb
or
in
arpl
jno
add
mov
sub
and
mov
mov
xor
shrb
das
xchg
pop
inc
fs
stos
xchg
sub
fldcw
das
ret
xchg
imul
xchg
mov
dec
cmpsb
adc
out
mov
xchg
mov
mov
adc
inc
lahf
pop
cltd
addr16
adc
sub
add
xor
lods
mov
lret
out
cmp
adc
push
or
mov
repnz
enter
aam
sbb
test
add
push
sbb
pop
jbe
inc
fiadds
fstps
fcoms
ret
jecxz
bound
mov
rcrl
or
adc
icebp
and
adc
cmp
sbb
sub
pop
ljmp
test
jns
cmc
sbb
jecxz
jae
outsl
xchg
lods
fists
lret
sub
jno
into
or
sbb
adc
pop
mov
mov
inc
cwtl
lret
adc
xor
mov
cmp
xor
sbb
push
or
mov
fcomip
rcrb
or
push
test
idivl
xor
jg
push
cld
sub
and
cltd
jge
dec
stos
xor
das
sub
aaa
daa
mov
sub
iret
mov
or
int3
sbb
xchg
out
test
mov
dec
addb
push
fwait
div
ja
jb
loop
call
arpl
ss
lret
sbb
push
adc
adc
loopne
adc
xor
xchg
lds
xchg
inc
fs
or
into
les
push
adc
mov
icebp
mov
movsl
mov
bound
daa
je
nop
mov
out
mov
mov
sbb
movsw
mov
push
pusha
pop
add
sbb
jnp
push
mov
sub
jg
scas
cmp
divb
or
pop
gs
or
aam
out
std
in
out
fidivs
fcomip
fsts
cld
mov
fsubr
cmp
sar
pusha
in
out
stc
and
push
xor
inc
je
scas
mov
jecxz
scas
mov
jb
hlt
stos
aad
cmpsl
xchg
push
add
jbe
movsl
or
push
hlt
jg
orb
fldcw
dec
rcl
mull
cld
ficomps
sbb
jg
in
out
mov
ds
aaa
mov
ds
test
lods
fdivrs
jbe
xchg
or
mov
clc
sub
outsl
loopne
or
pop
aam
push
pop
xor
xchg
mov
int3
lock
push
mov
mov
fistpl
jno
jg
cmp
mov
roll
cwtl
push
test
mov
out
and
fistpl
jns
mov
push
out
pop
push
fidivs
add
stc
dec
mov
mov
std
push
jecxz
fistpl
jne
in
ror
inc
jb
adc
inc
mov
push
shlb
pop
mov
shr
out
push
out
mov
hlt
pop
movsl
xchg
repnz
inc
push
jecxz
lcall
sbb
movsl
lahf
rorl
in
cmp
lods
jb
mov
lds
out
jo
push
push
out
mov
mov
test
pop
and
cmp
stos
fildll
jmp
test
sbb
sbb
insl
xor
mov
outsl
leave
xchg
mov
push
es
mov
xor
inc
lock
push
std
push
adc
mov
cmpsb
iret
test
add
jmp
sub
mov
or
inc
in
in
sub
popa
xchg
jae
test
mov
mov
or
and
pop
clc
xchg
daa
je
idivb
int
idivb
ja
push
lods
sub
orl
mov
sti
jle
and
sbb
xchg
cmp
stos
push
lock
imul
adc
jno
fisubs
leave
pop
adc
iret
rclb
mov
and
pop
fstl
jns
sar
repz
cmp
mov
sub
loope
loop
lods
push
rol
cmpsl
scas
sub
outsl
mov
imul
mov
imul
mov
test
mov
scas
sti
out
int3
stc
xor
stos
lahf
mov
aad
and
inc
sarb
clc
mov
leave
sbb
push
and
out
aad
aaa
fistpl
and
ljmp
push
cli
repz
and
jae
push
sarl
test
add
xlat
shlb
in
xor
lock
jp
add
cmp
or
stc
repnz
push
ja
push
adc
mov
mov
icebp
jmp
pop
adc
jbe
mov
loop
in
pop
mov
cli
and
dec
jge
inc
popa
into
mov
stos
imul
mov
mov
add
pop
fistps
xchg
add
ror
jnp
jmp
enter
int
dec
faddl
lcall
sub
cli
mov
int3
shrl
es
xchg
push
lcall
ret
bound
repnz
jns
mov
ret
daa
fsubrs
nop
jmp
in
cmc
aaa
fnstenv
sub
loop
adc
mov
mov
mov
popa
push
loop
test
dec
stc
arpl
jo
jmp
test
ss
call
int3
push
sub
out
inc
cmp
sbb
jmp
sbb
cli
jmp
adc
sub
jne
mov
xor
ss
mov
xor
into
cld
adc
iret
mov
test
adc
jne
mov
cmp
mov
cld
test
pop
xor
push
adc
and
inc
xor
adc
pop
ljmp
add
xchg
jbe
rcll
jge
aas
mov
xor
add
ret
lods
int
adc
cmpsl
push
cld
les
jge
jns
add
fnsave
lahf
push
stos
rclb
add
sti
ds
xor
xor
xor
adc
jb
xor
daa
sbb
adc
ret
repnz
jnp
add
fwait
xchg
add
pop
orl
cmp
mov
addr16
adc
xor
mov
pusha
shrl
lds
gs
pusha
jp
push
stos
and
imul
fistl
mov
xchg
or
cs
frstor
mov
adc
and
mov
sub
add
mov
fsts
push
lods
sub
stos
ret
test
mov
xor
inc
stos
or
pop
mov
sub
insb
adc
dec
popa
arpl
inc
mov
daa
call
call
into
repz
sub
lods
sub
adc
and
test
or
add
and
test
push
adc
aam
stos
sbb
ss
or
pop
lea
pop
out
insb
adc
dec
test
push
pop
pop
jnp
lock
mov
mov
mov
test
ljmp
aad
jg
xor
cmpsb
ja
cmp
xchg
sub
jo
out
push
stos
push
stos
stc
mov
adc
test
jmp
jnp
icebp
sbb
cltd
pop
mov
pop
daa
stc
push
stos
push
xchg
jecxz
xchg
aam
mov
and
mov
push
adc
and
jno
out
mov
mov
cli
sbb
push
std
jns
add
xchg
push
or
in
jmp
mov
fisttps
lahf
pop
mov
outsb
mov
int3
test
lret
sub
test
loop
xchg
gs
mov
sbb
cmpsl
adc
push
or
mov
lahf
mov
and
sbb
pop
sbb
adc
and
and
enter
jecxz,pt
mov
flds
mov
imul
add
loope
pop
mov
imul
sbb
imul
pop
and
fimull
bound
jp
and
js
pop
xor
adc
iret
repnz
ja
xchg
jne
adc
and
mov
dec
push
test
sub
pop
mov
mov
jnp
mov
in
idivl
stc
bound
push
push
sub
adc
imul
push
mov
sbb
std
shr
push
movsb
pop
sub
imul
sub
pop
sarb
movsl
jl
psubusw
out
sti
sarb
jbe
sti
notl
sub
jg
adc
cmp
pop
xor
orb
adc
mov
sub
jecxz
rolb
movsb
xchg
push
xchg
pop
pushf
xchg
sub
popa
push
test
cmc
mov
and
mov
roll
pop
cmp
call
dec
push
adc
mov
pop
add
push
data16
jle
cmp
stos
push
inc
fwait
push
jg
inc
ljmp
adc
into
movsb
cli
aad
add
jbe
cmpsl
inc
idivb
out
mov
fs
push
rol
rorb
stos
adc
mov
mov
mov
sbb
lock
inc
sbb
orl
inc
leave
xlat
and
mov
sub
enter
pop
push
out
adc
rclb
into
je
shrb
repnz
clc
add
pop
shrl
cmp
add
ja
dec
xchg
popa
and
inc
shl
aad
push
dec
push
adc
cli
sbb
and
pop
adc
lret
add
lret
xchg
sub
adc
xor
pop
mov
aad
out
and
ds
inc
sbb
addl
add
leave
pop
sub
cmp
popa
ret
sub
iret
lahf
jbe
jg
pop
cs
dec
add
enter
lods
fstps
mov
adc
push
out
xor
mov
cmpsl
inc
lea
xor
daa
sbb
fstp
fwait
dec
fadd
test
arpl
aas
push
or
stos
adc
pop
out
sar
fdivl
or
test
sbb
sbb
jb
mov
loope
and
and
loope
pop
mov
decb
mov
xor
mov
ljmp
in
xchg
nopl
stos
push
mov
adc
test
enter
sbb
roll
mov
inc
cli
fsubr
in
lods
rolb
mov
or
and
sbb
pop
mov
shlb
pop
sub
daa
sbb
lods
pop
pop
adc
jmp
jge,pt
xor
pop
mov
aad
xor
movsb
pushf
push
test
addb
cmp
pop
addl
sub
xchg
sub
daa
cld
push
lods
pop
cmpsl
and
sbb
sahf
stc
cmp
imul
shll
imul
push
stos
push
mov
icebp
cmp
out
lcall
js
fmull
xchg
in
loopne
insl
repz
adc
inc
call
into
leave
je
mov
xor
pop
in
dec
fimuls
and
inc
fadds
push
lods
mov
outsl
sub
enter
test
mov
loope
in
repnz
push
scas
pop
mov
jge
sub
mov
sbb
dec
fldcw
mov
mov
add
cmpxchg
mov
cmp
fiaddl
mov
insb
inc
mov
sub
repnz
test
sbb
mov
pop
lahf
jne
pop
xor
add
loop
ret
stc
rolb
repnz
rorb
cmpsl
mov
popa
es
lock
mov
or
jne
test
fbld
mov
sub
imul
sub
repnz
mov
xchg
push
lods
and
mull
and
pop
sub
outsb
iret
mov
and
hlt
popf
loope
mov
and
das
decb
mov
lahf
sbb
sbb
cli
cmpsb
outsb
mov
lds
ret
fmull
cmc
insl
inc
dec
inc
std
push
xorb
pop
add
sub
xchg
push
das
pop
mov
int3
in
push
in
cmp
ja
pop
cs
add
fcoms
shlb
push
test
iret
nop
lret
pusha
fwait
sar
daa
xchg
cmp
loope
cmpl
dec
mov
adc
jp,pt
inc
mov
pop
stc
test
pop
or
sbb
dec
dec
pop
mov
dec
cmp
cld
dec
push
adc
sti
pusha
xlat
sbb
jb
xchg
pop
jns
lds
stos
xchg
inc
loop
xchg
xor
jno
clc
adc
push
push
push
test
jl
std
push
add
xor
popf
insl
lahf
push
in
push
xchg
add
inc
or
in
repz
in
jns
push
int3
pop
sub
jge
dec
jmp
stos
pop
sub
jno
cli
jecxz
or
cmpsl
cmpsl
cli
add
cmp
lret
sbb
sub
adc
scas
test
or
jecxz
roll
daa
mov
lret
daa
shl
stos
push
lods
mull
push
mov
adc
add
mov
sub
daa
adc
pop
out
adc
pop
cmp
mov
mov
movsb
gs
mov
xchg
push
stos
cli
fldenv
pop
mov
sti
ds
xor
icebp
sbb
int3
push
jl
jns
das
pop
mov
cmp
and
lret
test
mov
xchg
ja
xchg
add
ret
jmp
sub
mov
jo
int3
and
stos
popa
roll
mov
push
ficomps
stos
cli
fsubp
inc
into
aad
mov
and
ds
hlt
push
dec
jno
or
repnz
sub
push
fisubs
adc
and
psllw
adc
jb
pop
jbe
push
fsubs
rclb
pop
cmpsl
sbb
or
cmc
lea
xor
flds
or
daa
in
mov
or
in
popa
ret
repnz
setb
rolb
adc
mov
stos
mov
jp
daa
push
cltd
jae
std
dec
push
adc
sahf
enter
popa
push
aaa
push
or
leave
pop
adc
icebp
sbb
out
bound
inc
fcmove
hlt
inc
les
cs
xor
push
fsubp
inc
xchg
cwtl
rorl
shll
push
hlt
imul
jmp
xchg
or
pop
cs
int
lret
aaa
adc
fstpt
push
popa
ret
test
fnstenv
inc
fnstsw
pop
bound
pop
mov
sub
insl
push
scas
pop
inc
sbb
mov
ret
xorb
sub
cmp
sub
test
aam
mov
xor
fs
cli
movlps
pushf
mov
pop
dec
gs
ljmp
push
mov
imul
test
enter
repnz
arpl
jp
ret
mov
mov
mov
repnz
xor
dec
stos
push
adc
pop
sarb
daa
inc
inc
mov
in
pop
xlat
inc
jns
lods
cmp
fs
add
aaa
sub
adc
mov
lret
cmp
sub
cmp
sbbl
lahf
mov
mov
sub
das
ja
push
push
jno
movsl
mov
int3
cwtl
mov
xor
xchg
or
push
jmp
jl
lds
mov
sbb
std
repz
nop
ja
adcb
fcompp
push
push
xor
mov
dec
subb
mov
cmc
cli
out
sub
les
mov
inc
fidivrs
idivl
nop
add
push
cmp
xor
stc
decl
dec
mov
out
mov
pop
sti
dec
into
xlat
in
imul
stos
inc
sbb
fdiv
lods
pop
mov
rol
mov
or
push
fwait
mov
sub
sahf
dec
sbb
add
fsubs
ja
xor
push
test
inc
cmpsb
push
mov
mov
and
lret
sbb
dec
mov
and
push
daa
dec
dec
shrb
mov
jae
push
enter
loop
fcomps
and
es
and
push
mov
cmp
sub
sar
ja
jbe
lds
popa
pusha
xchg
nop
inc
xchg
push
div
movsb
mov
push
pop
stos
shl
icebp
arpl
inc
adc
stc
fs
sbb
and
cmp
mov
fists
adcl
out
inc
movsb
pop
imul
inc
adc
mov
loope
add
mov
cs
fimull
fisubs
test
in
sahf
cmp
inc
mov
ss
or
pop
push
jle
in
cmp
inc
add
adc
arpl
arpl
testb
cs
lret
add
xchg
sub
or
mov
mov
mov
or
and
mov
roll
in
gs
shrl
mov
ret
push
mov
mov
dec
addr16
jb
pusha
call
sub
xchg
sub
push
cmc
fldcw
pop
mov
insl
clc
ss
xor
into
rorl
pop
pop
sbb
lret
fisubrs
loop
idivl
cmp
and
lret
les
testb
add
lret
add
push
aas
adc
lods
pop
movsb
test
out
mov
and
or
or
add
fs
or
mov
outsb
push
rclb
mov
inc
cmp
ss
aaa
sbb
pusha
dec
fwait
roll
or
push
sbb
mov
pop
mov
pop
mov
mov
xor
pusha
rcll
xchg
stos
ficomps
adc
lods
pop
fistpl
sbb
push
and
pop
int3
jb
mov
stc
adc
cmpsl
scas
add
dec
sub
xchg
push
subb
nop
daa
leave
xchg
pop
out
xchg
lahf
fstpl
mov
mov
mov
xor
arpl
lret
xchg
sub
mov
sub
mov
movsb
mov
daa
jns
addl
xchg
cmp
and
repnz
ret
repz
ret
add
scas
mov
ds
addr16
lods
movsl
jnp
js
outsl
sbb
mov
in
or
in
in
mov
fisubrl
sbb
xor
test
icebp
popa
pop
mov
jbe
imull
sub
pop
movsb
and
xchg
mov
dec
sub
sbb
es
loope
ret
mov
pop
mov
or
sbb
pushf
stos
lods
xor
outsb
pop
ds
hlt
fiaddl
mov
inc
loop
fldl
push
add
pop
lret
loopne
and
data16
sbb
mov
and
sbb
aaa
cmp
jge
pop
jno
das
mov
in
outsl
sbb
ret
dec
xchg
jmp
test
mov
cmpsb
and
add
cmp
movsl
xchg
lock
mov
aas
stos
mov
mov
xchg
push
push
and
add
add
jl
mov
sub
lods
pop
sub
adc
add
pop
sub
xchg
mov
clc
ja
adc
lds
add
fwait
and
xchg
cltd
cmpsb
dec
ret
jl
cwtl
mov
add
inc
addr16
ljmp
insb
sub
inc
mov
das
bound
jp
sub
dec
push
jae
stc
mov
cltd
mov
scas
call
ret
xchg
and
cmp
out
xchg
and
fldl
xchg
repz
imul
ljmp
pusha
sti
push
add
outsl
and
loope
cmpl
pop
mov
in
push
js
sub
jmp
jge
sti
pop
push
mov
rcr
and
pop
loop
int
mov
or
std
ljmp
sbb
mov
xor
xchg
fwait
int
int
loop
loopne
sub
fstps
fcoms
ret
lahf
xchg
bound
or
mov
movsl
je
jne
lods
out
jmp
dec
std
idiv
mov
ret
push
fwait
or
fucomi
cwtl
outsl
inc
xlat
sub
lahf
je
clc
mov
cwtl
les
jo
adc
push
pop
rcr
aad
mov
cmp
and
insb
add
sbb
jge
xchg
jae
pop
sub
daa
stos
and
out
push
cmp
xor
xor
iret
and
mov
pushf
outsb
push
lods
sub
lcall
daa
xor
xchg
out
loope
cs
or
lret
test
divl
jb
inc
inc
adc
or
lahf
mov
inc
push
stos
and
pop
aaa
cs
sahf
cmp
dec
clc
and
mov
jl
stos
mov
push
xchg
sbb
inc
dec
mov
cmpsl
into
jb
jnp
out
jge
leave
pop
adc
push
xchg
push
int
xchg
andb
push
stos
and
stc
lods
pop
mov
mov
or
and
mov
add
scas
repz
xchg
pop
pop
or
push
ficoml
das
popa
ret
pop
mov
fdivrs
dec
cwtl
pop
cs
int
and
lods
nop
push
push
movsl
shrb
cmpsl
dec
adc
and
notb
mov
push
push
rcr
test
push
stos
sub
inc
inc
sub
inc
sti
ds
scas
mov
bound
std
gs
jnp
add
xchg
sub
sub
ficoml
or
decb
bound
jns
add
lret
aas
add
pop
mov
ret
imul
addb
lea
mov
rol
out
adc
ljmp
pop
jns
sub
out
cmp
add
cmpl
and
push
xchg
in
scas
movsl
cmp
mov
mov
and
out
inc
fildl
das
pop
icebp
lret
and
xlat
or
fsubrs
cmp
arpl
mov
sbb
cmc
inc
aas
add
mov
pop
sub
add
mov
imul
mov
cmpsb
movlps
dec
pop
lock
add
les
sbb
push
cwtl
cltd
mov
pop
add
or
mov
mov
aaa
dec
mov
cmp
nop
rcll
dec
test
sub
add
notl
mov
push
loope
and
cltd
push
lds
mov
jo
enter
adcl
dec
push
jne
and
mov
push
mov
inc
xor
mov
adc
push
mov
mov
xor
mov
dec
lret
jns
sub
lds
cmpsb
add
push
mov
repz
ret
insb
adc
cmp
xchg
inc
mov
push
les
addr16
xchg
cs
cmpl
mov
aaa
sahf
mov
out
sbb
push
fcmovne
xor
and
mov
push
jns
aaa
mov
xor
aaa
inc
mov
clc
inc
mov
and
pop
in
dec
dec
mov
popa
pop
pop
dec
fdiv
rclb
push
jl
mov
daa
idivb
incb
inc
push
test
repz
inc
aas
add
out
daa
fsubr
stos
enter
test
pop
xchg
mov
fwait
mov
pop
xchg
jge
lcall
mov
shlb
dec
int
push
ret
push
data16
stos
das
cwtl
push
bound
jecxz
cs
add
gs
xchg
xor
mov
jbe
cmp
pusha
cmp
sub
jno
or
adc
repz
sub
jl
cs
and
movsb
out
xchg
jge
mov
pop
mov
dec
jg
in
repz
and
jge
add
adc
aas
xchg
iret
push
mov
adc
je
test
test
jae
gs
adc
sub
adc
popa
ret
pop
xchg
mov
jbe
add
scas
or
lret
pop
or
push
ficoml
das
popa
ret
pop
mov
sbb
cli
hlt
popa
fs
mov
out
pop
xchg
out
test
pop
and
lahf
cmp
inc
mov
inc
sbb
add
lret
rcll
gs
inc
mov
fisubl
sub
push
mov
cmp
out
push
stos
push
xlat
aam
mov
popf
mov
das
addr16
rorl
or
subl
aas
sub
inc
aas
add
ret
adc
xor
lahf
xor
orb
cs
push
gs
push
sub
push
adc
jo
pop
mov
unpcklps
or
scas
fildl
lret
xlat
test
or
or
addr16
rorl
dec
popa
push
fstpt
add
hlt
out
sub
test
or
inc
lret
xchg
inc
aas
add
lret
push
gs
rcl
lods
pop
mov
insl
xchg
jns
fdivrl
jnp
stos
jns
mov
repnz
sbb
push
aas
stos
ds
ljmp
aaa
fbld
mov
pop
mov
sub
inc
dec
and
test
mov
xor
pop
pop
cmp
lret
push
push
inc
or
dec
test
adc
cmp
sbb
pusha
mov
cs
lret
or
xchg
sub
xchg
out
test
mov
idivl
and
push
jbe
rolb
or
jno
aad
out
lcall
jnp
cmc
in
sarl
cmc
sbb
lret
adc
out
xchg
aas
pop
xchg
push
test
gs
hlt
inc
cmpsb
daa
inc
mov
add
xlat
es
sbb
sub
mov
loope
jle
nop
add
push
jno
cli
cmp
lret
xchg
pop
es
push
or
mov
jle
mov
sub
mov
pop
lret
das
insl
ljmp
mov
jp
aaa
add
add
popl
dec
xorl
sbb
sarb
push
cmp
lods
popa
xchg
sahf
icebp
and
mov
sub
push
repnz
mov
orl
add
pop
mov
or
inc
add
daa
xorl
push
adc
mov
sub
mov
push
daa
insl
test
pop
movups
xor
jmp
pop
sub
mov
jl
sub
push
jo
hlt
cli
push
outsb
mov
stos
mov
ret
inc
fs
ljmp
mov
mov
stc
mov
dec
mov
add
pop
sti
iret
inc
lahf
sbb
mov
and
and
ficomps
int
aad
mov
rolb
mov
dec
lods
or
add
add
push
pusha
dec
xor
add
pop
out
test
and
ljmp
int
imul
add
mov
dec
xchg
adc
out
cwtl
popl
iret
subl
jecxz
stos
dec
push
adc
push
icebp
xchg
imulb
cld
arpl
xor
pop
mov
adc
cmp
aam
aas
imul
mov
sbb
vhsubps
cmp
je
int3
pop
jo
mov
jbe
sbbl
inc
xchg
push
das
jge
pop
adc
xor
mov
mov
xor
popf
out
or
mov
rcrl
inc
push
movsb
xchg
adc
and
and
inc
dec
jbe
cmp
movsl
pop
mov
or
dec
xor
pop
sarb
xchg
mov
ss
mov
dec
dec
pop
leave
imul
xchg
mov
shl
sub
mov
add
int
adc
mov
mov
ret
push
ja
sti
xor
jle
jg
aad
xchg
packsswb
ret
pop
mov
cmp
lock
adc
insl
ja
push
sarb
adcl
push
dec
movsl
sahf
cmp
inc
push
jmp
ljmp
pop
xor
stos
outsb
inc
inc
ret
sahf
mov
jmp
xchg
ss
movsl
mov
pushf
mov
mov
cmp
push
stos
push
stos
fucomip
pop
sub
cld
cwtl
cmc
arpl
mov
push
lods
add
insl
enter
lds
sbb
ret
inc
imul
inc
jo
aaa
enter
sbb
das
pop
mov
mov
test
push
mov
ret
jl
sar
clc
add
js
test
sbb
fldcw
ds
gs
mov
es
ja
sahf
add
sub
jo
sbbb
push
stos
fsts
cld
pushf
cmc
mov
ds
roll
dec
push
outsl
cmp
sbb
into
test
sbb
sbb
push
ja
xor
push
jno
mov
into
frstor
addr16
jecxz
add
jo
hlt
jmp
nop
inc
arpl
and
xor
and
add
aas
pop
or
aad
add
xor
xchg
mov
xor
int
das
movsl
add
pop
sub
mov
leave
dec
inc
outsl
or
push
scas
push
mov
xor
pushf
xchg
cmp
ss
repnz
int
dec
dec
inc
mov
mov
cmp
cmp
mov
xchg
clc
or
mov
iret
dec
test
pop
mov
lcall
dec
push
adc
fidivs
in
sahf
cmpsb
or
or
add
push
pop
mov
pop
ds
clc
xor
data16
cmp
in
test
sub
cltd
jne
sub
shlb
cli
test
mov
lds
jecxz
adc
cltd
mov
lret
int3
mov
xor
mov
hlt
rorb
aad
test
lods
push
lods
cmp
xor
adc
and
mov
sbb
jne
stos
dec
fwait
mov
push
hlt
push
or
jle
pop
nop
js
jg
xor
adc
aad
ss
cmp
icebp
in
les
pop
sub
out
mov
in
mov
xchg
stc
xchg
call
pop
test
mov
cli
ret
or
pop
mov
movsb
dec
jecxz
and
rol
and
rcrl
ja
cmp
insl
sub
or
mov
lahf
cmpsl
mov
dec
or
or
int3
push
push
divb
divb
movsl
fstps
pop
das
scas
stos
dec
or
pushf
bound
stc
lcall
andl
loope
andb
mov
sub
mov
jecxz
sarl
cli
adc
into
ja
xor
roll
jp
sub
pop
adc
jmp
mov
jb
mov
adc
stos
pop
or
push
in
aas
ljmp
js
xchg
or
add
leave
nop
pop
cld
popa
xchg
jno
addr16
or
jnp
out
adc
pop
aad
adc
adc
pop
adc
lds
dec
std
fists
rorb
sbb
mov
out
inc
sarl
idiv
jge
aad
mov
hlt
xchg
sub
mov
pop
add
int3
out
outsb
xlat
cld
jne
sbb
fisttpl
xchg
cmp
sub
rorb
lret
nop
clc
gs
popf
arpl
mov
pop
sub
mov
outsb
adc
gs
stos
stos
fnsave
cmpsl
lcall
jecxz
adc
cld
jno
int3
iret
test
aad
lret
adc
sub
insb
enter
cld
jg
aad
add
daa
sbb
sub
rolb
iret
sbb
popa
lods
jns
int
add
push
fsubp
mov
cli
mov
imul
fdivrl
xchg
dec
push
adc
fs
mov
cmp
and
push
jmp
xchg
repnz
and
add
jg
fldenv
and
mov
scas
fistpll
insl
lock
lcall
sbb
and
mov
sub
sbb
scas
push
and
dec
cmpsl
dec
jecxz
or
aas
jge
dec
jl
push
adc
cmp
sti
fsubp
pop
and
push
int3
sti
sarl
test
mov
add
and
xor
imul
jbe
ja
out
out
clc
push
inc
shrb
dec
cmp
aad
or
pop
fsubr
push
and
scas
fidivs
icebp
mov
outsl
mov
cmp
jl
hlt
sub
movsb
and
adc
test
and
mov
testb
cmc
imul
shll
ds
pop
dec
inc
add
gs
sti
mov
leave
clc
pop
xor
inc
dec
push
adc
fstp
shrl
pop
adc
push
test
push
dec
and
or
mov
in
mov
mov
pop
mov
rclb
mov
pop
mov
sub
test
xor
fidivrs
repnz
out
mov
not
dec
fcomps
es
jne
lods
cmp
jne
insl
bound
icebp
and
jg
and
lock
inc
dec
sub
push
pop
inc
push
lods
in
rcll
push
cltd
sbb
loop
adc
adc
jns
cmp
inc
add
or
fsubrl
rcll
sub
shl
mov
lds
stos
xor
push
inc
aas
add
jne
int
loop
xlat
aad
pop
mov
mov
mov
pop
and
addr16
jo
push
adc
into
rcl
sahf
pop
movsb
and
pcmpgtb
mov
add
bnd
mov
or
cmpsb
xchg
je
call
dec
mov
arpl
xor
mov
sbb
mov
dec
nop
insl
gs
pop
dec
fdiv
add
aam
adc
inc
aas
add
push
adc
gs
cs
cmpb
cmpsl
fsubs
sti
notl
cmc
mov
outsl
test
js
dec
dec
sub
int
jge
stos
push
repz
inc
cltd
lret
test
pop
cs
nop
into
cli
mov
test
sub
icebp
push
ljmpw
mov
rep
add
mov
add
cmp
add
inc
loop
jmp
jns
lods
cmp
out
fcomps
shll
xchg
mov
or
ficoms
cmp
jecxz
aas
jbe
mov
sbb
and
lock
imul
fdivs
xchg
xor
jle
mov
xor
scas
test
inc
gs
adc
or
pushf
mov
insl
sbb
push
push
jp
jb
cmc
pop
push
and
sub
pop
mov
insl
idivb
sbb
sbb
inc
ja
sub
pusha
xor
jb
pop
lcall
dec
sahf
mov
and
mov
mov
sub
push
fdivl
rcr
pop
and
shrl
mov
push
cmp
sbb
pusha
mov
shrb
sbb
mov
sub
cli
ftst
xchg
aam
test
sbb
roll
add
lret
inc
dec
std
push
test
ret
imul
inc
and
pop
repnz
sub
push
movsb
shlb
mov
int3
fwait
or
leave
mov
mov
pop
cs
ret
push
cs
stos
and
mov
jp
or
sbb
ja
pop
push
or
cwtl
xor
adc
stos
daa
fyl2x
lods
pop
mov
testl
sbb
pusha
push
dec
or
pop
out
mov
xchg
cmp
stos
push
and
pop
mov
and
mov
jp
mov
jecxz
jno
add
sbb
loopne
push
lods
and
push
xor
es
jge,pt
cmpsl
arpl
dec
je
in
loope
and
pop
je
dec
dec
or
xor
cmp
cmc
mov
dec
jno
push
xlat
insl
dec
sub
jbe
lea
adc
ja
lret
pop
mov
jnp
pusha
shll
test
push
stos
and
imul
mov
mov
adc
sbb
pop
mov
push
es
add
mov
repnz
push
les
popf
lret
jne
adc
inc
fsubrl
out
push
sub
mov
xor
sbb
add
sbb
lahf
rolb
icebp
in
push
arpl
rcr
loopne
push
scas
fldt
ja
imul
cmp
decb
sbb
cli
popf
and
cltd
mov
decl
add
int3
cld
call
pushf
add
push
sbb
inc
jg
mov
addr16
std
and
test
mov
push
sbb
jge
pushf
sbb
sbb
andb
je
popf
test
icebp
lea
aam
sub
sahf
push
hlt
sub
xor
jge
in
or
xor
sub
stos
adc
mov
call
pop
xchg
adc
and
imul
subl
fistpl
das
mov
xor
jmp
adc
lods
leave
adc
ja
ja
fildl
jns
out
sbb
mov
xor
cmpsb
sub
jo
imul
xchg
popa
in
and
jecxz
jl
adc
mov
fisubrl
std
mov
repz
out
xor
dec
push
adc
nop
xchg
mov
aad
sub
cs
xlat
xlat
mov
dec
add
mov
pop
xor
xor
pop
rcr
in
mov
in
or
imul
divb
movsl
fldenv
sar
mov
mov
inc
pop
data16
inc
mov
inc
mov
push
fimuls
sbb
jecxz
or
add
jne
add
push
lret
mov
cmp
cltd
and
mov
stc
movsb
repz
cwtl
pop
sbb
inc
pop
mov
inc
jecxz
fdivr
push
sbb
sub
sbb
leave
rcl
test
mov
repz
pop
dec
inc
add
stc
and
cltd
pop
mov
xlat
sub
test
ljmp
mov
sbb
out
sub
dec
jae
in
loope
cmpsb
add
dec
dec
pusha
ret
mov
xor
or
jns
add
or
fisttpll
push
stos
sub
pop
and
sub
xchg
div
call
adc
daa
sbb
pop
nop
add
adc
sarl
jl
jg
int
xchg
xor
nop
mov
push
mov
fdivs
jg
mov
pop
call
and
inc
push
pop
push
cmpsl
push
adc
out
cli
lcall
add
pop
mov
adc
in
pop
les
cmp
mov
and
mov
out
jg
and
push
jecxz
stos
push
stos
push
pusha
xchg
mov
jecxz
sub
jge
add
test
dec
mov
insb
xor
fiadds
push
es
mov
sub
int3
jnp
and
cmpb
sbb
xchg
dec
push
adc
clc
add
mov
out
clc
xchg
enter
jge
cmp
add
sub
inc
inc
pop
push
lods
pop
int3
fldt
jg
or
adc
xchg
adc
arpl
dec
jne
lret
xchg
inc
fsubl
xchg
xor
fnstsw
jnp
movsl
stos
mov
inc
lea
xor
scas
dec
push
adc
lcall
and
add
sbb
rcrl
rcrl
imull
cmpsb
pop
movsb
decl
loopne
nop
mov
incb
cmp
mov
into
les
mov
cwtl
xchg
es
mov
mov
xor
popf
push
repz
mov
xchg
mov
fsubr
mov
sub
inc
xchg
cmp
lock
ret
adc
lods
push
mov
and
inc
lock
mov
xor
test
fs
addr16
lret
cmp
mov
adc
test
cmc
scas
orb
cmp
jne
add
int
loope
dec
stos
scas
dec
rcrb
outsb
std
mov
ret
mov
in
insl
aaa
shrb
push
push
mov
sub
fistpll
nop
loop
int3
xchg
mov
xchg
push
ret
adc
push
iret
sbb
test
jne
sbb
loopne
sub
push
jno
push
push
sub
mov
cld
jl
and
adc
adc
bound
fcomps
stos
jb
mov
dec
subb
arpl
ret
into
in
and
hlt
loope
in
pop
shrb
jno
add
dec
lret
pop
or
scas
sbb
jbe
lods
aas
inc
mov
nop
push
mov
add
int3
dec
push
adc
adc
sbb
dec
and
mov
sahf
int
inc
loopne
jg
arpl
loopne
add
gs
fnsave
xor
push
push
mov
xor
in
ficoms
adc
shr
out
jp
pop
inc
dec
mov
add
out
add
cmc
mov
out
xlat
daa
xor
pop
sbb
jnp
jno
push
cmp
jmp
test
cwtl
or
jp
adc
push
data16
add
pop
xor
dec
push
adc
dec
aad
cld
sbb
cld
and
pop
adc
sub
inc
ret
mov
dec
jl
and
out
insb
cmp
adc
lock
mov
add
xlat
dec
sub
push
filds
adc
popf
rcrb
mov
stc
xchg
pop
lahf
mov
and
addr16
fnsave
pop
or
jge
xor
stc
ja
cs
pop
jnp
sti
hlt
call
sbb
icebp
pop
adc
cmpl
mov
ret
and
scas
sbb
xor
xor
pop
adc
cmpsl
and
insl
sbb
mov
add
jecxz
push
fsubr
xchg
and
pop
cmp
mov
dec
sbb
push
pop
mov
aad
pop
ret
pop
adc
jbe
fs
pop
jge
bound
ljmp
jae
lea
xor
ret
or
sbb
gs
pop
jge
bound
ljmp
jae
lea
xor
ret
or
sbb
gs
pop
jge
bound
ljmp
jae
lea
xor
push
mov
adc
pop
ret
or
imul
or
stos
mov
int
notb
adc
lahf
mov
movsb
lods
lds
repnz
add
inc
arpl
popa
push
jae
test
pop
adc
cli
ja
frstor
xchg
adc
adc
test
ret
test
rorl
pop
or
imul
cmc
pop
fisubrl
xchg
scas
xchg
in
subl
adc
inc
sbb
cmpsl
movsb
loopne
adc
lea
and
or
jnp
out
xor
cmc
xor
hlt
scas
mov
push
outsb
pop
das
xchg
fstpl
mov
fnstsw
rolb
pop
adc
leave
stos
push
sub
xchg
mov
imul
popf
aad
push
or
or
adc
lods
aam
inc
pop
stc
or
imul
lea
jns
sbb
sbb
adc
cmp
icebp
jg
mov
push
jae
jmp
jne
in
ret
lret
or
adc
es
sub
fs
sub
adc
call
fnsave
test
inc
das
mov
mov
pop
adc
cmc
or
xchg
lret
push
imul
ss
mov
cmp
jne
sbbb
loope
scas
in
cmpsb
or
shlb
movsb
or
das
or
insl
sbb
mov
xchg
push
lret
mov
sub
scas
mov
push
hlt
cmpl
cltd
cmp
test
dec
push
xchg
call
inc
mov
shlb
jne
movsb
stos
mov
sub
adcb
push
insb
movsl
pop
movsl
pop
aad
lods
jge
adc
jns
cmc
nop
mov
inc
addr16
loop
hlt
int
fsubrs
cmc
test
cmp
mov
lret
mov
or
sub
add
std
dec
faddl
fcoms
adc
ret
je
jne
lret
xlat
jmp
adc
cmp
arpl
mov
test
or
pop
jle
aam
and
push
or
ds
daa
enter
mov
divl
jl
xlat
jg
mov
aad
out
jno
xchg
cmc
in
movsb
testl
push
in
ljmp
push
add
ss
fwait
xchg
std
pop
subb
xchg
push
dec
or
sub
xchg
inc
nop
push
add
stos
inc
pop
mov
mov
push
adc
mov
and
pop
mov
push
mov
cmp
aas
mov
inc
adc
inc
xchg
lds
xchg
mov
add
test
fs
data16
lret
sahf
ret
sub
ljmp
and
shl
je
fwait
and
test
push
xchg
mov
adc
and
sub
mov
fimull
pop
cs
add
add
rep
fistps
into
insb
lock
jbe
mov
inc
adc
addb
enter
or
push
fldenv
pop
mov
aad
ja
and
ss
dec
mov
pop
fisubs
mov
cwtl
push
stos
in
mov
ja
jp
out
push
xor
sbb
pusha
xchg
or
pop
cs
mov
shll
mov
lods
push
cmpsl
dec
jbe
orb
pop
hlt
sbb
push
addb
or
daa
add
push
mov
lock
push
mov
mov
stos
sbb
sub
loop
gs
lret
push
stos
push
stos
mov
inc
fistps
into
lahf
ds
add
cmp
xchg
dec
ficompl
icebp
cli
fucomip
pop
movsb
mov
stos
and
sub
add
ret
xor
rclb
fiaddl
gs
and
imul
add
mov
mov
scas
add
les
dec
push
adc
xor
divl
pusha
shl
cmp
xchg
pop
inc
gs
sub
fcoms
push
lods
dec
mov
roll
repz
aaa
add
int
out
das
sbb
daa
fnstenv
lret
xchg
or
mov
sub
mov
cld
mov
inc
int
sub
fcoms
stos
push
lods
das
or
aas
or
xor
adc
cmp
cmp
mov
out
cltd
and
mov
pop
and
repnz
bound
cmp
add
cmp
add
pop
subb
hlt
sbb
imul
imul
pop
loop
or
aaa
inc
fisubrs
adcb
aam
sbb
sub
das
mov
mov
daa
push
lret
inc
cmp
lcall
inc
add
dec
loop
dec
test
jne
arpl
clc
sarl
or
push
mov
push
jecxz
dec
push
adc
fidivs
fcomps
inc
std
shll
out
out
das
cmc
dec
pop
fcmovnb
stos
mov
mov
inc
inc
mov
pop
rcr
pop
lcall
fistpl
insl
push
mov
xchg
movsb
jno
add
cmp
ja
mov
add
sub
cmpsl
lret
push
jae
aaa
addr16
adc
xchg
cmp
ss
inc
imul
xchg
mov
repnz
mov
cmp
jl
hlt
mov
movsb
pop
sar
mov
push
repnz
xor
popf
or
lret
jae
mov
imul
xchg
shll
pop
jb
cmp
rcll
jae
push
add
cmpsl
imul
push
pop
dec
push
adc
sti
xchg
mov
mov
lcall
push
lods
and
pusha
pop
jl
push
adc
jb
cld
aam
xchg
xor
sub
pop
lock
iret
or
pop
shl
stc
sbb
clc
mov
pop
push
idivb
and
adc
xor
outsl
xchg
add
aaa
shl
in
pop
push
adc
pop
enter
out
adc
xchg
inc
dec
and
mov
loop
lcall
xchg
mov
sbb
mov
push
stos
add
out
fidivrs
jne
pushf
scas
mov
aad
mov
mov
cmpsl
pop
clc
lea
std
call
mul
add
dec
push
adc
jae
jp
jmp
add
leave
pop
adc
mov
cmp
mov
sarl
sub
mov
bound
mov
int
hlt
cmp
mov
lods
fsubs
divb
inc
lea
xor
insl
or
pop
dec
sahf
hlt
mov
mov
xor
mov
stos
or
in
bound
and
stos
and
adc
xor
jnp
or
dec
push
adc
je
xor
cld
add
ss
mov
sub
jns
xchg
and
xchg
add
inc
push
aam
leave
xor
sub
xor
dec
out
fdivrl
flds
jb
cmpsb
rorb
movsl
pop
fs
mov
jbe
pushf
or
fistpll
aas
rcrb
cli
hlt
arpl
jb
xor
inc
mov
lahf
ficoml
xchg
jne
js
adc
add
pusha
cmp
fisubrl
mov
rclb
ret
sbb
fstps
ja
lahf
pusha
dec
jne
mov
subb
sbb
aaa
pop
stos
push
shlb
adc
cmpsb
mov
mov
pop
pop
out
push
pop
cmp
cli
stos
fcompl
jae
ret
sub
xor
cmp
arpl
and
fcompl
mov
popa
dec
jg
sub
or
pop
std
mov
xor
and
mov
nop
sahf
cmp
inc
push
jmp
ljmp
pop
xor
stos
outsb
inc
inc
fs
aaa
out
movsb
mov
daa
or
pusha
popf
mov
mov
inc
pop
pop
out
pop
and
mov
movsb
mov
xor
jp
shll
add
cmp
push
fsubrl
ffreep
jl
adc
mov
sbbl
test
mov
push
sub
sub
jl
mov
imul
xchg
stos
pop
push
xor
mov
cmp
xor
xor
in
pop
ljmp
cmc
or
dec
arpl
ficompl
movsb
mov
dec
lcall
push
jl
call
frstor
bound
sbb
sbb
jae
xor
xor
push
pop
shrl
subl
sarb
fbstp
cmpsb
out
mov
push
jg
es
dec
mov
pop
outsl
roll
pop
mov
mov
scas
sub
mov
xchg
or
subl
xchg
sub
xchg
stos
inc
dec
sbb
jmp
lds
mov
sbb
push
gs
jg
mov
mov
lods
jmp
les
sub
stos
push
mov
shll
outsl
jb
jbe
mov
es
add
testb
pop
pop
inc
inc
or
imul
mov
push
in
adc
lahf
insl
test
insl
fwait
dec
push
adc
pop
lret
add
push
loope
pop
fisttps
call
insb
pop
fldenv
and
movb
sysexit
push
data16
stos
push
inc
xlat
jp
mov
gs
mov
repnz
cmp
adc
jae
jle
popa
inc
popf
jl
das
pop
push
lods
jl
xor
out
bound
cmp
idivb
sub
fbld
jo
scas
in
cmp
adc
hlt
dec
pop
xor
push
imul
ja
mov
fstps
mov
es
roll
inc
mov
mov
jp
mov
cwtl
jbe
testl
sarl
xchg
ljmp
inc
push
push
adc
mov
pop
push
movl
popa
movsb
ret
sub
imul
adc
orb
mov
adc
xor
push
fsubr
pop
inc
pop
sub
xchg
insl
divb
sbb
pusha
popa
and
adc
in
dec
shll
mov
and
les
xchg
and
and
out
push
mov
adc
cs
iret
cli
push
mov
lcall
dec
push
adc
xchg
iret
sbb
sbb
leave
pop
adc
xchg
adc
in
and
popa
aad
iret
out
fdivrl
dec
pushf
xchg
ljmp
cwtl
cmp
adc
stos
xchg
inc
es
test
dec
ja
bound
fwait
and
fsub
push
sti
inc
lea
pop
bound
dec
ret
or
sbb
inc
imul
pop
jge
bound
ljmp
jae
lea
xor
stos
movsb
or
daa
in
pop
adc
iret
sbb
jno
xor
fbld
data16
push
inc
pop
test
cmpsl
and
or
out
fwait
movsb
repnz
ds
ds
insl
adc
dec
push
fdivl
lods
nop
jp
stos
push
test
cmp
out
pop
adc
hlt
imul
jmp
test
cmp
out
rol
lock
adc
add
jmp
lahf
cmc
pop
fldt
jo
dec
sahf
aam
imul
jp
pushf
div
cld
pop
adc
sbb
fistps
mov
jnp
out
xor
int3
push
in
testb
xchg
mov
xor
push
cmpsb
push
push
mov
in
pop
imul
fstl
out
sahf
push
ja
in
pop
adc
mov
push
sub
test
mov
in
mov
push
jno
cld
repz
adc
outsl
or
sub
scas
enter
mov
out
mov
push
ja
pop
pop
or
adc
shrl
movsb
inc
gs
mov
add
les
repz
adc
cmp
bound
mov
inc
cwtl
lret
std
push
out
int3
inc
inc
popf
shl
xchg
lock
adc
or
mov
jb
xchg
fistl
mov
push
out
mov
aam
adc
mov
out
call
or
push
popa
push
sbb
idivl
jmp
lods
lea
sbb
xorb
sub
jmp
add
jns
cmp
mov
xor
pushf
add
mov
out
jge
cld
rcrl
ficoms
jge
sysexit
andl
cmp
das
add
popf
push
imul
cmc
sahf
xchg
sub
mov
jns
sti
ret
dec
aam
and
ss
loopne
imul
push
push
push
lcall
cltd
arpl
sahf
imul
stc
stos
cmp
fst
fstps
in
nop
mov
push
clc
mov
xlat
mov
inc
test
xchg
insb
xchg
out
rorl
test
ret
add
jae
cmpsl
or
insl
push
mov
or
lea
xlat
and
pop
outsb
jecxz
cmp
into
xchg
jmp
dec
jne
mov
das
lahf
in
fistpll
dec
inc
sar
add
push
lds
out
xchg
mov
jmp
bound
aas
fbstp
movsb
sbb
ja
mov
cmp
and
xchg
or
mov
inc
into
add
out
out
popf
sar
cld
lret
fidivrl
xchg
incb
stc
lods
cmp
repnz
mov
scas
pushf
mov
jns
jp
sub
popa
pop
pop
cld
popa
push
out
imul
mov
bound
inc
add
adc
and
fucomip
fsubs
mov
dec
jbe
mov
adc
ja
stos
arpl
sub
mov
daa
sub
out
inc
notb
popa
mov
repz
mov
enter
pop
out
mov
mov
aaa
pop
sub
jb
lea
outsl
lods
incb
out
arpl
sbb
pop
or
or
xchg
cmp
jnp
out
sbb
adc
and
cmp
and
mov
mov
lret
jae
lahf
enter
mov
mov
call
xchg
lock
or
popa
popf
out
mov
push
cwtl
add
adc
xor
push
mov
cmpl
pop
jle
mov
inc
mov
mov
dec
sbbb
mov
inc
clc
xchg
dec
sahf
mov
jb
test
jl
pop
sahf
jge,pt
aaa
mov
repnz
sub
push
addr16
test
adc
bound
xor
addl
sub
sub
es
or
pop
sub
mov
mov
in
mov
inc
lea
repnz
imul
test
and
pop
jge,pt
jge
sub
lret
push
stos
rclb
divl
jne
adc
jb
mov
jge
sahf
xchg
xchg
hlt
scas
cwtl
sub
pop
push
rclb
lock
and
jmp
decb
adc
inc
push
fidivrs
out
adc
movsb
dec
and
out
adc
xchg
xlat
lds
dec
or
xor
aam
xchg
jmp
cld
fisubrl
and
xchg
imul
popf
cmp
test
subb
imul
hlt
push
lods
iret
add
jg
sbb
xor
mov
mov
mov
and
push
and
xchg
data16
stos
in
xchg
mov
xchg
testb
xchg
mov
mov
js
movsl
pop
bound
fistpll
loopne
shlb
xor
aaa
mov
mov
cmp
dec
inc
rolb
pop
roll
cmpsb
sub
pop
adc
aam
xor
int
mov
dec
jo
inc
imul
shlb
lock
mov
sub
push
inc
adc
jmp
nop
ljmp
jmp
stos
gs
add
adc
nop
and
cmp
repz
push
adc
dec
dec
cltd
mov
xor
inc
icebp
or
lods
orl
es
fsub
pop
dec
faddl
jns
mov
mov
sti
out
insl
adc
popf
jle
scas
mov
dec
ss
dec
inc
lock
adc
xchg
and
jno
lret
push
adc
lahf
jle
dec
mov
sbb
inc
jle
fsubs
dec
fdivp
int3
and
jmp
repz
mov
inc
sbb
mov
push
aad
cs
mov
push
iret
out
sub
es
jns
mov
dec
jmp
ja
pop
nop
xor
xor
cs
repz
jle
dec
mov
inc
ljmp
adc
pop
mov
xchg
push
jb
mov
popf
and
fisttps
lods
bound
andb
adc
fwait
mov
lds
lds
ss
shrb
nop
pop
popa
xor
xor
hlt
xor
jne
jl
push
pop
addr16
pop
adc
je
add
xor
je
inc
mov
mov
add
dec
jo
mov
pop
test
add
lea
leave
subl
lock
push
adc
gs
mov
cli
hlt
call
loope
aam
pop
adc
mov
sbb
test
ja
push
sti
hlt
arpl
insb
xor
out
adc
add
add
fdivrl
pop
cmp
dec
insb
jbe
lret
add
sub
aad
fsubr
fdivl
mov
or
pop
in
in
in
pop
adc
mov
and
xchg
mov
jg
fwait
insl
sub
fcomp
dec
xchg
negb
xor
sub
push
mov
sbb
sbb
add
ja
cs
int
out
push
mov
pop
stos
push
test
cmp
out
clc
push
inc
fnstcw
sub
popa
shrl
add
int3
pop
stos
outsl
xlat
push
rcll
mov
jl
xor
xchg
xor
inc
or
call
xchg
into
pop
cmp
or
xchg
adc
dec
push
adc
int
out
fdivrl
lahf
jmp
cli
ret
mov
add
inc
mov
mov
lcall
jl
or
pop
xchg
iret
clc
push
fimuls
inc
and
scas
mov
cmp
mov
mov
imul
ljmp
mov
test
bound
jae
iret
idivl
push
scas
ret
xchg
sub
push
inc
clc
pop
push
cmpsl
int3
clc
cmp
mov
push
xchg
sbb
pusha
xchg
dec
push
adc
test
xchg
add
movsl
and
push
ljmp
icebp
add
rorb
jle
fsubs
and
mov
scas
fidivrs
outsl
repnz
ror
and
mov
sub
sbb
push
push
sbb
adc
orb
xlat
ja
imulb
jns
movsl
addr16
shr
xor
lods
cmpsb
push
clc
fistl
test
sarb
test
push
adc
mov
xor
mov
lock
bound
mov
icebp
dec
cmp
add
outsl
out
inc
pop
or
mov
mov
enter
or
dec
hlt
push
push
jl
js
jo
mov
xor
data16
dec
push
adc
shlb
decb
into
jae
andb
test
push
xchg
fcomi
xchg
out
adc
push
adc
pushf
pop
imul
dec
pop
jp
xchg
loopne
std
xor
imul
js
ljmp
popa
or
int
push
stos
sub
lock
xchg
mov
inc
aad
icebp
cmp
mov
push
lods
add
cli
xor
ja
shlb
int3
mov
push
out
cld
movsl
insb
daa
pop
shrb
insb
push
jb
les
and
mov
fucomp
sub
sub
iret
or
mov
movsb
rcrb
inc
dec
push
adc
or
inc
ret
pushf
cmpb
pop
addr16
in
popf
push
pop
cmp
mov
movsb
out
adc
mov
out
adc
sub
fmull
mov
push
pop
add
cmp
inc
xchg
push
inc
xlat
jp
pop
out
repz
cli
jb
ret
aas
lret
fwait
xchg
test
jno
das
out
inc
fisttpll
mov
movsl
imul
popf
push
das
push
push
out
jle
sub
mov
psubb
push
js
xor
movsl
cli
inc
rcrb
cmp
add
into
cld
cltd
mov
aaa
fidivrl
lods
cmp
jne
jmp
adc
push
mov
hlt
aaa
repnz
test
popf
adc
adc
or
push
cmpsb
mov
add
xchg
inc
xchg
scas
fdivrl
dec
push
adc
clc
add
jb
clc
mov
fsubr
clc
push
cwtl
push
dec
lea
test
push
adc
test
add
lcall
push
or
push
arpl
enter
and
stc
insb
adc
inc
jno
mov
mov
add
inc
xchg
jge,pt
hlt
and
stos
inc
fs
xchg
sub
push
stos
push
jmp
dec
push
adc
and
ret
test
add
inc
and
push
adc
adc
lods
jg
cmp
mov
and
std
sbb
xchg
test
addl
idivb
push
xchg
ficoml
stos
xchg
fsub
or
push
pop
dec
jbe
lcall
mov
mov
xchg
movsb
gs
iret
or
aaa
sbbb
push
aad
jns
fdivrl
cmp
sub
jns
mov
and
push
cmpsl
dec
push
pushl
push
loopne
push
adc
xor
jge
movsl
mov
and
pop
pop
add
and
cli
mov
loop
out
adc
fldenv
out
adc
dec
fimuls
movsb
cmp
and
in
cs
jnp
test
push
sbb
and
ffree
mov
in
mov
mov
and
stos
and
shl
pushf
mov
pop
leave
push
stos
and
and
cmp
mov
ret
and
or
fsubs
test
cmpsb
mov
sarb
xlat
inc
lea
and
jl
mov
mov
repnz
scas
add
repnz
int
cmp
xor
shll
test
push
aam
pop
inc
std
pop
mov
mov
xlat
out
mov
xchg
ljmp
xchg
jg
pop
call
movsb
push
int3
push
imul
jmp
sbb
pop
repz
jns
leave
das
adc
mov
cmp
clc
dec
push
adc
es
push
out
sub
loope
xchg
cmc
clc
add
cld
sbb
cmp
xor
add
mov
sub
rorl
or
add
and
ss
ficoml
and
jno
ljmp
je
xchg
jmp
and
es
mov
insl
pop
arpl
fs
ja
sahf
cwtl
adc
adc
ja
sub
repz
into
mov
add
and
mov
movsb
lret
mov
inc
push
fwait
in
mov
xchg
ret
push
mov
iret
push
cld
adc
and
or
cmp
add
mov
sub
rcrb
cmp
sahf
int
pop
jns
ret
jp
loopne
outsl
push
mov
fisubrl
xchg
test
pop
mov
xor
shl
pop
push
insl
xchg
sbb
fildll
cmp
insb
ret
add
jmp
mov
lods
xchg
adc
cmc
and
pop
inc
xchg
jle
iret
mov
mov
sub
loop
cmpsl
imul
pop
adc
mov
xchg
jno
jno
fisttpll
dec
and
xor
fdivr
cmp
mov
sbb
stc
sub
mov
pushf
arpl
xchg
fbstp
lods
jmp
xor
xor
icebp
mov
jl
cmpl
dec
fsubrl
mov
dec
and
add
jnp
mov
adc
out
push
pop
push
rolb
xchg
arpl
xor
bound
add
out
xchg
jne
cmp
mov
and
pop
push
push
adc
xchg
push
movsb
sub
daa
outsb
and
pop
adc
pop
dec
jbe
std
fstpl
add
popa
std
lods
pop
mov
dec
jae
arpl
ret
pusha
pop
cs
shl
lret
pop
xor
adc
popa
ret
test
xor
test
sbb
out
mov
push
and
in
pop
mov
mov
xor
xor
ss
dec
mov
lds
adc
in
scas
movsl
cmp
adc
inc
cwtl
out
inc
shl
hlt
ja
pop
cs
and
jb
sub
pop
mov
mov
mov
and
push
dec
jp
or
mov
lret
push
stos
push
stos
cltd
fisubs
aaa
popa
ret
pop
movsb
inc
mov
lahf
ja
dec
cli
hlt
imul
adc
addl
pop
mov
adcb
push
rolb
mov
shlb
daa
mov
mov
jb
stos
pusha
xor
lahf
xor
incb
lret
shlb
stos
push
add
push
pop
cmpsl
or
inc
aas
add
addb
cmc
in
xchg
xchg
mov
and
mov
xor
sbb
pusha
pop
mov
sub
xchg
js
cmp
inc
xor
lock
rorl
or
push
dec
pop
push
fidivrs
add
cwtl
popa
or
xchg
pop
add
mov
roll
jle,pn
lret
fisubrl
lret
mov
ret
sahf
and
fildl
inc
addb
mov
mov
sub
daa
sub
pop
cmpsb
pop
jecxz
or
orl
pop
hlt
add
mov
push
mov
push
scas
pop
mov
push
xchg
adc
cmp
xor
inc
imul
pop
cmp
jo
enter
test
test
sub
or
and
push
inc
or
or
notb
outsb
and
sbb
loope
and
fmulp
mov
or
pop
or
sbb
push
or
in
mov
push
shll
hlt
clts
xor
jno
scas
daa
sbb
sti
jnp
repnz
loop
sub
data16
and
jbe
cmp
loop
pop
in
mov
xchg
test
xchg
aas
add
push
outsl
sbb
outsl
imul
inc
ret
int3
sbb
mov
jecxz
add
mov
imul
movsb
add
fwait
sub
pusha
cmp
mov
fimuls
xchg
jmp
mov
sbb
pop
test
stc
mov
cmp
cmp
sbb
out
push
ret
mov
dec
pusha
aam
adc
dec
ret
jge
cwtl
add
lret
fstpl
inc
movsl
sbb
adc
dec
mov
nop
loope
xchg
movsb
into
xlat
mov
push
lods
push
push
adc
inc
js
mov
loopne
in
xchg
insb
xor
leave
pop
adc
jl
rclb
xor
add
ja
adc
or
repz
fsubs
fnstcw
into
xor
pusha
in
orl
in
test
lret
fcompl
add
dec
sahf
fs
bound
fldpi
mov
pop
cmp
xor
into
cmp
inc
shlb
push
popf
bound
and
and
mov
xchg
out
pop
xchg
fwait
sti
cmp
xchg
iret
jge
add
dec
int3
add
pause
inc
loop
fiadds
inc
fimull
inc
loope
pop
test
and
ret
jo
mov
fs
mov
cmp
dec
adc
test
push
inc
aas
add
xor
nop
xchg
jmp
sub
jp
inc
add
ds
fsubl
pushf
jp
adc
push
adc
dec
pop
lock
xlat
sub
adc
cmpsl
push
mov
loop
insl
jno
push
pop
out
mov
jecxz
shrb
sub
and
lock
push
pop
es
lret
out
inc
or
scas
pop
daa
inc
aas
add
mov
xor
lock
pop
cs
adc
aad
outsb
inc
and
pop
pop
adc
push
fwait
movsl
xor
jge
cmc
gs
sbb
ds
add
mov
cmp
or
mov
push
xor
xchg
out
sub
push
xor
lret
popa
xchg
out
test
mov
idivb
and
and
add
cs
std
in
xchg
sub
cmp
push
shlb
aas
popa
ret
arpl
mov
xor
clc
cmp
icebp
add
mov
inc
shlb
pop
and
mov
into
ja
addl
arpl
cwtl
xor
push
stos
push
loope
lods
pop
mov
mov
or
and
ja
pusha
mov
stos
or
cs
shl
xchg
xchg
mov
pushf
mov
insl
sbb
push
mov
mov
push
and
sub
pop
mov
insl
idivb
sbb
sbb
inc
ja
sub
pusha
xor
jb
pop
lcall
dec
sahf
mov
and
aam
rolb
sbb
jo
rcr
pop
and
shrl
mov
push
cmp
sbb
pusha
mov
shrb
sbb
mov
sub
cli
fxam
xchg
mov
aas
add
rolb
add
lret
cmp
fidivrl
adc
xchg
mov
pop
sub
lds
test
and
movsb
pop
or
daa
enter
int
cld
mov
adc
test
sub
and
sub
stos
add
adc
jg
mov
add
nop
cmp
pop
mov
dec
mov
add
sub
and
bound
pop
dec
mov
lds
fwait
decl
xor
mov
mov
xchg
inc
or
mov
ljmp
icebp
jle
stos
int
sbb
and
incl
push
push
push
adc
mov
jmp
leave
pop
adc
clc
in
or
setno
push
and
push
sub
pop
fbld
cmp
and
jl
and
jp
jo
inc
pop
push
jmp
xchg
mov
sub
movsl
lret
and
mov
xor
cmc
xchg
inc
jle
adc
cld
dec
inc
fisubl
mov
mov
addr16
xchg
js
push
adc
out
pop
sbb
mov
outsb
lret
imul
into
mov
pop
adc
std
ljmp
int3
pop
imul
ret
arpl
add
push
mov
add
sahf
and
imul
xor
push
test
hlt
mov
and
jne
cmc
in
fldenv
mov
adc
sbb
mov
imul
addps
cmp
cld
cld
xchg
jno
scas
adc
fld
ret
push
fucomip
out
cmp
ret
adc
daa
mov
and
int3
jg
mov
or
cmc
stos
leave
xor
icebp
inc
aas
add
sub
jl
ljmp
pop
mov
repz
mov
adc
stos
aad
sbb
mov
jmp
ljmp
xor
daa
jecxz
inc
add
mov
aam
or
sub
ret
push
cmpsl
push
pop
js
jb
sbb
in
xchg
push
jl
cmp
loop
mov
ds
iret
int3
test
sti
ds
xor
lahf
sbb
sbb
orb
sbbb
out
inc
sub
popa
ret
push
ds
jae
xchg
jbe
jge
hlt
imul
aad
push
movsl
rorb
push
cmpsl
dec
adc
test
clc
sub
ror
addb
lea
fsubp
int3
and
pop
pop
jbe
lahf
or
pop
les
mov
cmpsb
iret
lock
insb
pop
out
jmp
ficompl
xchg
pusha
xor
addr16
adc
adc
cmc
sub
add
push
fs
scas
sbb
aad
fucomp
fdivrl
mov
cmpsl
jo
push
adc
imul
adc
xor
test
out
aad
jno
jo
in
out
pop
imul
insb
adc
dec
cmp
jl
xor
mov
xor
addl
adc
insb
push
xlat
mov
ja
jns
out
mov
sbb
or
sub
jmp
dec
push
mov
mov
test
sub
arpl
test
xor
sbbb
adc
jno
in
xor
push
stos
mov
and
and
psrlw
xorb
pop
jecxz
ficoml
mov
fiaddl
jae
pop
cmp
inc
mov
pop
jnp
sti
hlt
call
fdivl
pop
cmp
push
stos
push
ret
pop
hlt
pop
adc
out
pop
xor
cmp
insb
nop
mov
out
xchg
stos
push
stos
and
movsl
adc
ss
flds
cmp
test
mov
aas
mov
sbb
pop
mov
or
daa
push
push
fidivs
mov
mov
iret
rcll
adc
scas
sub
jle
mov
jnp
sbb
xor
out
aam
jne
sbb
int
pop
mov
rcll
mov
dec
imul
push
adc
mov
ret
aaa
or
int
out
adc
or
cmp
andb
aad
pop
test
daa
mov
ljmp
popf
xchg
ds
cmp
dec
ficoml
test
out
cmpsl
fidivrs
jg
shrl
jl
add
ljmp
adc
movsl
mov
sbb
pop
inc
stos
push
out
mov
test
scas
push
and
leave
cmp
adc
or
pop
cmp
jp
pop
and
cmpsb
movsb
fldenv
or
push
mov
mov
jg
lods
cmp
sti
out
inc
ljmp
movsb
into
pop
fisttps
push
push
leave
notb
or
sub
sti
and
mov
push
pop
cli
pop
adc
js
mov
ret
cmc
sbb
sub
mov
xchg
in
insb
rep
popa
frstor
cmp
jno
cli
test
scas
and
inc
je
pop
cs
add
fcoms
add
scas
sub
push
fisubrl
scas
mov
repz
and
fcompl
mov
jge
sahf
fs
pop
adc
pop
or
ds
inc
jmp
leave
jmp
mov
dec
pop
cwtl
andl
or
adc
test
cli
dec
mov
imul
adc
pop
sub
aaa
push
push
cmpsb
mov
jne
or
jmp
pop
les
div
pop
nop
in
pop
adc
leave
mov
lock
pop
das
pushf
xchg
lock
rcl
repz
xchg
sti
gs
loop
lcall
inc
test
cmpsl
dec
adc
xlat
xor
adc
sti
je
stos
lods
ret
lret
fs
sub
jbe
lea
adc
fwait
mov
pusha
shl
sbb
sbb
mov
push
push
stos
and
pop
fsub
ffreep
arpl
jle
fdivrl
into
adc
push
xor
push
stos
fnsave
cmpsl
xchg
movl
sbb
hlt
imul
shrl
enter
sub
xchg
insl
repnz
xor
nop
out
push
js
jno
loopne
in
aam
repz
push
ja
iret
cmpsb
inc
sub
mov
movsb
add
inc
lea
and
dec
adc
push
mov
mov
je
shlb
shll
inc
xchg
add
xlat
xor
xor
mov
or
ss
shrl
inc
fisubrs
out
push
lea
pop
dec
arpl
test
dec
mov
repnz
mov
xlat
mov
or
pop
mov
fisubl
scas
ljmp
ljmp
sub
sub
inc
push
and
dec
outsb
or
pop
jge
cs
push
shll
pushf
sbb
mov
fistps
test
test
adc
and
jno
jge,pt
mov
sar
int
outsb
shlb
push
cld
fmuls
hlt
sub
clc
pop
dec
imul
sub
mov
push
daa
scas
cmpsb
pop
hlt
test
fs
das
and
sahf
push
push
mov
xor
jecxz
sahf
xchg
cmp
mov
das
mov
mov
shrb
adc
mov
fildl
aas
mov
aam
pop
mov
fwait
mov
fwait
sbb
imull
test
ljmp
sub
jge
roll
adc
in
dec
push
jmp
or
xchg
sbb
test
out
mov
lret
adc
aaa
or
loop
xlat
movsb
std
adc
xlat
pop
xchg
jmp
and
in
push
mov
dec
jle
mov
jo
sti
sbb
and
cmp
out
cltd
jae
and
mov
jno
add
inc
mov
fwait
xchg
dec
adc
adc
jnp
cmp
pop
pop
stos
lret
mov
and
mov
jg
jnp
push
sti
jl
inc
nop
addr16
sti
out
subl
fisttpl
sub
std
fstps
mov
popf
push
pop
sub
mov
mov
aas
mov
mov
fnop
mov
rolb
ss
mov
sub
out
and
leave
mov
cmc
lods
dec
dec
aaa
mov
push
jbe
shufps
jns
and
jge
and
adc
icebp
cmp
jb
push
mov
cli
xchg
push
xor
stos
iret
fbld
xchg
push
adc
pushf
in
pop
push
mov
and
shl
sti
notl
push
adc
out
inc
repnz
adc
adc
sbb
mov
scas
movsb
enter
fidivl
fsubp
xchg
jno
fidivl
xchg
and
into
mov
arpl
push
mov
cs
data16
mov
shll
mov
bound
xor
mov
push
sub
cmc
push
lods
cmp
mov
sti
sub
mov
into
icebp
mov
lahf
fisttps
daa
xor
sbb
push
loop
mov
iret
xchg
mov
pop
enter
mov
mov
jecxz
lret
inc
fs
popa
adc
adc
test
loope
adc
int3
mov
dec
jns
cmp
mov
jb
pop
ljmp
vrsqrt28ps
mov
jns
mov
shrb
add
ljmp
aas
lcall
mov
fwait
mov
jp
clc
shrl
pop
in
push
and
jge
mulb
mov
outsb
xlat
shll
stc
call
fsubs
push
adc
jb
sahf
mov
mov
mov
leave
orb
jge
inc
inc
pop
mov
and
jg
pushf
lds
jae
mov
lock
add
pop
mov
pop
adc
out
in
xchg
loop
inc
repnz
adc
mov
pop
mov
bnd
and
xor
scas
push
adc
push
push
adc
lods
and
fdivrl
lahf
mov
adc
or
jp
lret
push
push
daa
adc
sub
cs
add
pop
adc
xchg
adc
push
adc
cwtl
adc
push
adc
in
and
fdivrl
lahf
scas
pushf
adc
jno
stc
shl
adc
lds
out
pop
jg
adc
ljmp
pop
fmull
sub
shlb
xor
adc
adc
dec
repnz
adc
stos
out
adc
adc
das
pop
int
lcall
das
mov
xor
int
insb
ss
idivb
test
ljmp
daa
movsl
call
push
stc
jbe
xchg
lcall
test
loop
inc
push
and
mov
es
insb
mov
push
ljmp
scas
mov
das
mov
pop
adc
mov
mov
lock
shrl
bound
sub
and
mov
out
inc
repnz
mov
imul
inc
mov
sub
cmpsb
pop
add
inc
fisubs
loope
gs
dec
and
mov
repz
mov
sbbl
xchg
sbb
and
cmpsb
imul
and
or
movsl
mov
dec
jl
jno
daa
clc
cwtl
scas
push
push
sub
ds
js
mov
sar
aas
mov
pop
int3
pop
hlt
push
test
sbb
sub
and
sbb
jl
in
or
mov
sub
xchg
enter
mov
and
sub
push
mov
cltd
fcomps
out
fstl
imul
inc
cmpsb
sub
jmp
mov
sbb
and
push
ret
lds
sub
sub
mov
clc
mov
in
stos
cli
xchg
arpl
jmp
imul
pop
pop
mov
and
negb
push
push
sub
jbe
push
xchg
cmpsb
out
jb
dec
test
push
cs
adc
adc
dec
cmpb
iret
mov
dec
or
sahf
lods
push
or
xchg
mov
pop
pop
pop
mov
mov
dec
sub
fldt
sbb
push
adc
out
sbbl
cmp
mov
adc
mov
es
mov
aas
push
mov
out
jnp
push
cmp
sbb
leave
dec
jbe
mov
cmp
push
pop
and
dec
mov
sahf
int3
aaa
lds
les
movsl
cmp
adc
adc
loop
sahf
jp
outsb
sti
mov
mov
notl
in
xchg
push
fisttpll
fildl
or
adc
mov
out
or
cwtl
xchg
adc
jle
imul
js
fs
stos
idivl
mov
sub
icebp
fists
pop
loop
cmp
adc
sbb
leave
push
jl
mov
jbe
mov
mov
xchg
adc
sbb
mov
or
cs
lods
cmc
push
stos
shrb
insl
idivb
call
hlt
mov
add
xchg
adcl
push
and
out
push
cld
jns
dec
push
push
push
adc
in
aad
push
cld
fistps
cmp
std
arpl
fdivrl
in
cmp
sub
gs
test
push
cmpsl
je
dec
jge
out
inc
and
pushf
enter
cmc
call
loope
cmp
test
movb
iret
lahf
ficoml
pop
pop
sub
xorb
addr16
cwtl
xor
xor
sbb
mov
mov
hlt
into
xchg
pop
out
cmc
or
aaa
cs
sahf
cmp
in
clc
or
mov
mov
inc
stos
add
stos
popa
or
push
jmp
jmp
addr16
mov
inc
stc
push
mov
ljmp
fsincos
mov
fdivl
mov
gs
in
ljmp
aam
inc
daa
sbb
ret
loop
clc
jg
int3
loop
lods
or
dec
mov
push
stos
and
or
aaa
mov
jle
cli
stos
mov
stos
sbb
andb
sti
add
mov
aaa
cli
aam
int
fisttps
cmp
dec
pop
mov
pop
mov
inc
shrl
mov
js
rclb
and
mov
lods
lret
xchg
pop
in
xchg
sbb
jl
jp
xchg
lret
and
push
adc
frstor
jmp
std
push
sub
ja
outsl
cltd
pop
lock
cld
mov
or
inc
outsb
pop
pop
jp
cmp
cmpsb
movsl
btr
pushf
dec
and
jb
sub
push
cmp
aas
inc
mov
js
jns
sbb
inc
cltd
push
fs
mov
sub
push
pushf
dec
gs
cmp
mov
lret
aaa
insb
xchg
sahf
aas
or
aad
repnz
mov
outsb
sbb
mov
inc
ret
int3
sbb
jg
out
or
jmp
or
xchg
daa
sub
test
jecxz
icebp
pop
leave
mov
sbb
adc
mov
nop
outsl
sub
xchg
int
push
mov
loope
mov
in
ja
cld
dec
fistpll
cwtl
idivl
xlat
xchg
mov
in
les
fisttps
pop
mov
xor
xchg
lods
imul
mov
insb
imul
xchg
push
add
pop
bound
xor
jbe
add
in
add
add
sub
cli
and
mov
ret
fisubrl
push
out
adc
out
movb
lcall
ja
fsubrl
or
notb
repz
mov
addb
sbb
sub
jno
fdivp
lret
popa
call
ret
std
mov
inc
ja
cmpsb
pop
mov
adc
cmp
or
fmuls
loop
xchg
mov
xor
mov
pop
jmp
mov
pop
adc
aad
adc
lds
inc
dec
pop
or
dec
inc
add
push
out
in
lahf
aam
jp
in
sub
mov
adc
jecxz,pt
adc
xor
pop
adc
or
or
popf
mov
adc
jecxz
cmc
in
mov
sets
jecxz
inc
lods
je
add
mov
adc
push
add
xchg
sbb
movntq
inc
pop
movsb
dec
loop
xor
or
lods
jne
xchg
xchg
js
fbld
call
mov
mov
mov
daa
inc
ret
je
clc
push
lret
lcall
jg
pop
clc
adc
hlt
mov
mov
jge
or
push
imul
push
adc
fs
cmpsl
int3
jb
fisubl
leave
pop
adc
mov
lods
in
add
sbb
mov
inc
pop
test
xlat
orb
push
loopne
or
mov
push
xor
pop
adc
or
or
aad
sub
fdivrl
mov
test
or
adc
push
loope
sbb
push
fstp
subl
mov
out
mov
adc
cs
int
push
sub
jl
push
sub
dec
aad
loope
and
aaa
inc
shr
xchg
loope
adc
leave
outsl
out
mov
mov
lahf
mov
mov
call
pop
xchg
gs
mov
sbb
aad
sbb
inc
shr
xchg
mov
or
jo
mov
xor
pop
test
jo
lods
push
lods
imul
stos
mov
mov
adc
cmpsl
lods
roll
push
lahf
ds
pushf
lock
inc
imul
cld
add
lods
inc
cmpsl
push
mov
mov
dec
cwtl
in
inc
jmp
insl
roll
jb
adc
gs
stos
stos
fdivl
cmpsb
fld
test
fs
pop
imull
sbbb
fwait
push
push
adc
pusha
push
movsl
sbb
mov
jl
cs
jmp
add
addr16
subl
push
push
dec
xor
jg
fs
ja
or
int3
pop
sub
pop
and
outsb
roll
mov
pop
xchg
xor
dec
test
jecxz
jne
adc
aad
mov
mov
arpl
mov
inc
mov
mov
test
movsl
stos
mov
jno
mov
popf
or
mov
dec
fisubs
mov
lods
mov
mov
mov
aad
icebp
push
adc
dec
fistpll
dec
out
ffreep
js
push
adc
dec
test
mov
testl
clc
adc
mov
mov
or
mov
sbb
mov
popf
enter
mov
mov
mov
dec
adc
xor
loop
into
shrl
fs
push
adc
insl
shlb
adcl
test
xchg
mov
pop
adc
hlt
jns
shrl
mov
sub
popf
lods
or
pop
ds
mov
mov
shrb
jle
mov
mov
rol
mov
cmp
jbe
inc
dec
sahf
orl
and
call
sub
or
lds
outsl
mov
adcb
rorl
adc
lock
xor
adc
mov
xor
sub
fcompl
pop
fisttpll
add
dec
pop
sbb
data16
pop
adc
xlat
roll
mov
jne
dec
or
sub
sahf
lods
je
fwait
aaa
filds
or
insb
fistps
scas
pusha
sub
sub
sub
dec
mov
iret
imul
xchg
aas
shld
inc
fldenv
testl
mov
jne
dec
pop
lods
aaa
repz
test
gs
pushf
jp
pop
fs
fstl
adc
iret
int
test
dec
and
pop
adc
enter
in
pop
adc
push
push
aas
test
or
mov
sub
push
adc
fsubrp
fwait
pop
pusha
xchg
ljmp
outsb
divb
mov
pop
out
insb
adc
dec
lcall
xor
pop
inc
ret
mov
lret
ror
mov
ftst
xchg
add
jp
fs
out
addl
ror
das
sub
lods
hlt
and
addw
shrl
mov
jno
mov
stos
fldlg2
jmp
cmpsl
pushf
int
or
dec
clc
cmp
testl
sub
cmp
and
pop
cmpsl
dec
fildl
jae
iret
adc
stos
sbb
aad
mov
pop
out
insb
adc
dec
jp
roll
xchg
arpl
ficompl
pop
pop
sub
lea
xor
inc
mov
pop
and
mov
lret
outsb
push
or
xchg
push
push
stos
and
cmovg
mov
sbb
pusha
push
subb
enter
or
fsubrp
notl
pusha
xchg
mov
add
push
adc
cmp
je
jno
mov
jle
inc
jno
mov
outsb
sub
pop
add
mov
push
jg
frndint
sbb
xchg
cmp
stos
push
and
pop
or
push
cmp
mov
adc
and
pop
adc
cld
add
mov
and
dec
cli
mov
cmc
hlt
call
loope
loope
neg
lcall
or
xor
roll
lret
repnz
scas
mulb
popf
mov
inc
addl
sub
hlt
into
int
aam
add
aas
in
jl
inc
rolb
pop
sbb
cmp
mov
sbb
ja
jne
in
stc
add
xor
scas
mov
xchg
xor
in
add
lahf
push
daa
push
lds
lds
addr16
mov
sbb
xchg
int
adc
xchg
adc
pop
push
dec
sub
ljmp
inc
push
adc
push
push
adc
xor
lods
cmp
adc
dec
inc
sbb
and
pop
adc
pop
jno
idivb
pop
adc
push
clc
inc
aad
sub
push
test
mov
fisubl
fwait
mov
jp
sbb
push
cltd
pop
jno
sub
mov
fs
push
out
pop
aaa
cwtl
mov
cmc
jle
mov
jne
fiaddl
rcll
push
adc
clc
je
sub
xchg
into
mov
adc
out
ss
arpl
test
in
xorb
inc
dec
rcl
cli
pop
jo
mov
call
dec
call
outsb
dec
mov
leave
fnstsw
cmp
lret
push
push
push
adc
iret
test
in
in
and
pop
adc
xchg
mov
or
inc
lret
and
pop
xchg
add
out
aas
out
pop
sub
cmp
mov
ret
cmc
ror
in
mov
cltd
hlt
push
sar
test
ds
cli
gs
data16
pop
xchg
pop
xchg
or
xchg
mov
addr16
mov
push
jns
mov
cmp
mov
sbb
mov
cmp
rcll
cmpsl
mov
adc
mov
loopne
xchg
aaa
cmp
lcall
scas
pushf
stc
and
or
add
je
int3
pop
jne
xchg
xorb
dec
xor
jmp
xchg
cmp
test
popf
fwait
mov
add
test
sbb
insb
dec
cmp
jge
jg
fstpl
jecxz
mov
into
stos
mov
ret
and
mov
pop
cs
xchg
cmpsb
add
and
imul
out
adc
daa
push
jmp
add
mov
push
mov
into
mov
repz
inc
mov
xor
pop
loop
adc
cmp
in
scas
movsb
cmpsl
insl
filds
jae
iret
adc
or
xchg
sub
fsubrs
hlt
roll
movsl
xchg
mov
movsb
pop
mov
sub
fsubp
or
negb
adc
inc
fwait
cmp
jg
push
cs
push
add
xchg
out
test
mov
sub
sbb
pop
jnp
stc
sbb
xor
push
xchg
xchg
push
stos
fsubrs
push
push
lods
pop
pop
hlt
sub
push
pusha
roll
sub
xchg
jo
test
mov
pop
jbe
xchg
out
pop
jge
push
push
outsb
lock
push
cs
scas
loop
into
xchg
pop
das
mov
sub
lcall
jne
leave
mov
gs
dec
mov
sub
lods
sub
ds
mov
push
imul
lret
add
lret
inc
mov
test
add
ret
xchg
pop
inc
push
pusha
roll
lret
add
lret
inc
mov
jmp
shlb
loop
mov
iret
dec
cmp
mov
mulb
adc
pop
mov
mov
pop
adc
lds
ss
dec
cli
fsubp
cmpsl
adc
scas
push
xor
adc
pop
imul
mov
cld
lret
es
lret
outsl
dec
lds
or
fisubrl
mov
leave
leave
mov
xchg
mov
inc
mov
push
mov
nop
mov
test
addl
inc
mov
xchg
adc
push
sahf
iret
test
jne
loopne
sbb
idivl
mov
outsb
jmp
clc
mov
les
adc
adc
and
je
push
adc
xor
inc
add
xchg
inc
adc
push
adc
mov
push
and
mov
xor
pushf
aaa
addr16
fistps
mov
es
adc
push
daa
sub
add
hlt
in
xchg
xor
mov
aaa
dec
mov
insl
cltd
mov
fmuls
dec
loopne
jo
push
ja
mov
adc
adc
stc
cmp
lret
or
pop
push
dec
inc
xorb
xor
sub
mov
cmpb
pushf
ficomps
xchg
insb
xchg
jle
pop
xor
mov
or
jmp
mov
daa
pop
enter
out
daa
cmpb
adc
xchg
push
adc
inc
repz
sub
pop
xchg
leave
pop
add
adc
add
fdivl
out
xchg
push
mov
popf
push
push
insb
push
gs
icebp
cmp
data16
adc
or
inc
xchg
fwait
xchg
mov
loop
pop
jno
push
imul
ss
mov
push
inc
pushf
xchg
adc
adc
loope
loope
jge
cltd
push
lds
fimull
ret
and
adc
ds
jo
xorl
mov
adc
push
adc
pop
cmp
xlat
xor
pop
xchg
inc
jo
or
aas
in
stos
jnp
sbb
xchg
xchg
fiaddl
dec
decl
cmp
xor
in
jno
mov
pop
mov
cmp
rcll
push
adc
out
sbb
shl
fs
cs
in
xchg
xchg
stos
sti
jo
and
adc
inc
jl
mov
das
rorl
jb
cmp
dec
stos
push
stos
xor
out
mov
ret
jp
cmp
cmp
pop
mov
mov
lock
loop
test
in
fdivl
arpl
enter
cs
jecxz
dec
nop
xchg
test
pop
sub
out
test
mov
adc
shrl
pop
scas
mov
lods
push
stos
push
fbld
insl
test
setle
in
pop
adc
mov
stos
xlat
insl
pop
and
adc
xor
dec
cmp
jge
jns
pop
icebp
push
jb
sbb
xlat
in
pop
cmpsl
insb
xlat
jnp
imul
arpl
roll
inc
dec
lahf
aad
stos
inc
xchg
sahf
jge
pop
push
jo
jae
or
fs
pop
scas
xor
xor
shrb
ret
jo
adc
cli
hlt
mov
or
xor
inc
sbb
scas
push
rcr
cmpsl
mov
inc
jno
iret
lahf
dec
jle
mov
pop
out
mov
stc
ficomps
js
push
sub
dec
aad
adc
xor
addr16
ljmp
pop
inc
insw
gs
test
cld
pop
mov
push
jnp
bound
dec
stc
cmp
flds
enter
nop
int3
call
add
fsub
aad
mov
and
sbb
call
out
cmpsl
subl
in
inc
arpl
pop
into
pop
dec
jo
scas
inc
in
cli
outsb
mov
lds
pop
add
add
jae
pop
or
jmp
mov
sbb
xchg
xchg
dec
es
stc
in
ret
movsb
test
mov
jp
imul
and
incl
test
adc
rcr
orl
icebp
ljmp
push
pushf
mov
fisubs
in
call
pop
xor
and
cli
cld
jl
out
stc
idiv
mov
loope
dec
and
sahf
clc
xor
mov
sbb
dec
and
xchg
aam
sbb
jecxz
inc
gs
add
jecxz
into
push
push
adc
das
mov
frstor
leave
pop
adc
rcll
into
outsb
repz
fdivrl
xor
push
lods
pop
aam
or
mov
sahf
dec
adcb
insb
clc
vorps
mov
mov
and
push
and
mov
mov
adc
dec
jmp
stos
cmp
aad
sbb
add
sub
repz
mov
and
dec
dec
cld
in
dec
push
jnp
clc
mov
adc
mov
or
lods
insb
push
push
add
popa
inc
or
xchg
mov
nopl
shr
fmuls
repnz
pop
mov
sbb
sub
mov
mov
jge
dec
sub
cmp
ret
test
in
jnp
les
jbe
cmp
xchg
in
inc
sar
lret
push
adc
int3
and
xor
lret
inc
push
adc
sub
dec
pop
stc
int3
mov
pop
xchg
in
dec
movsb
sub
lds
cmp
inc
adc
pop
aam
icebp
or
mov
mov
or
add
pop
lods
pop
cmp
pop
cli
xlat
repz
mov
xchg
mov
inc
aam
sub
testb
lcall
or
mov
cmp
sub
fimull
stos
ret
sub
and
popa
ret
imul
outsb
addb
jb
out
fbstp
and
out
popa
ret
fisubs
inc
mov
push
mov
addb
add
loop
push
mov
sub
out
test
push
popf
inc
mov
inc
test
insl
pop
pop
mov
sub
xchg
xchg
cmpsb
xlat
test
inc
cmpsb
and
int3
aas
pop
sarb
jmp
sbb
das
insb
push
lods
pop
pop
push
mov
jle
pusha
sarl
call
in
out
jmp
push
and
cmp
mov
jbe
in
sbb
and
loope
out
stos
push
stos
and
ja
xchg
cmp
mull
std
mov
xor
testb
push
or
mov
outsb
push
rclb
and
je
aam
scas
xor
or
sub
push
fimuls
outsl
adc
push
repnz
push
stos
stc
fsubrp
inc
jbe
mov
adc
loope
and
roll
orb
lret
stos
and
popa
lret
inc
adc
inc
jb
fcoml
jae
adc
push
das
pop
lret
add
xchg
sub
push
test
popa
ret
hlt
and
jg
add
test
dec
add
inc
jle
test
mov
xor
mov
outsb
inc
iret
roll
mov
jns
push
stos
fbld
cli
inc
jbe
rorl
adc
or
idivb
dec
cltd
dec
jb
fisubrs
adc
mov
inc
ja
fisttps
fsubl
ljmp
inc
addr16
stos
push
fisubl
or
xchg
in
dec
jle
outsb
popf
cmp
jae
out
cmp
outsl
and
clc
test
mov
orb
mov
xor
lds
scas
jge
shll
jne
fsts
mov
lret
mov
cmp
mov
es
xchg
in
ret
dec
mov
inc
sub
fisubs
push
pusha
pop
cwtl
push
aad
mov
inc
cmc
cwtl
inc
lods
sbbl
loop
sub
mov
sub
fwait
jl
std
mov
push
iret
mov
icebp
mov
cmp
and
xlat
cmpsb
movl
movsb
mov
fwait
adc
adc
addr16
xchg
jns
cmc
je
pop
cmp
mov
pop
aam
and
xchg
mov
stc
push
push
adc
mov
mov
icebp
jmp
pop
adc
add
add
mov
lock
sbb
pop
xor
pop
outsb
fcoms
call
in
xchg
int
mov
and
sahf
stos
pop
cmp
xchg
xchg
stos
inc
sbb
mov
dec
xchg
jbe
cmpsl
add
xchg
mov
jnp
stc
mov
cwtl
xchg
jmp
stc
insl
push
loopne
fildll
ret
cmc
insl
shll
push
pusha
roll
dec
ljmp
sub
dec
mov
jo
dec
push
sbb
cmpsb
ss
dec
clc
addr16
inc
mov
inc
and
cmp
test
adc
loop
insl
test
in
mov
out
jno
xchg
add
arpl
ss
cmpl
pop
lahf
mov
push
adc
sub
jne
ljmp
arpl
inc
mov
xor
or
push
xor
ljmp
push
sti
aaa
cmc
and
dec
xor
and
outsb
sbb
pop
mov
aad
cmpsl
loope
jo
fisubs
iret
push
mov
cli
test
andb
push
fwait
sbb
adc
xchg
xchg
aad
push
inc
xor
and
pop
adc
lds
jnp
stos
or
mov
push
and
or
sub
lcall
mov
hlt
outsl
dec
insl
jns
loopne
lods
ret
xor
pop
and
ret
mov
fdivrl
lock
dec
mov
sbb
ret
stos
push
shr
mov
mov
dec
push
sub
sahf
jge
hlt
arpl
mov
mov
ret
sub
dec
push
push
xor
movsb
imul
or
stos
mov
sub
or
popf
out
xor
movsl
sbb
adc
mov
inc
lea
mov
push
call
lcall
fwait
mov
arpl
clc
cmp
sbb
jnp
cmp
inc
lahf
sub
cs
sub
and
push
sbb
iret
mov
adc
shrb
push
adc
pop
dec
sahf
insb
clc
xchg
adc
ljmp
cmpsb
jg
pop
mov
insl
imul
ds
ret
add
add
std
dec
cmp
ljmp
xor
and
push
test
test
add
lahf
mov
loop
jg
push
mov
and
inc
daa
mov
push
adc
adc
cmp
push
inc
mov
pop
xlat
test
pop
ret
xchg
or
daa
inc
imul
adc
pop
sub
fdivl
inc
sbb
push
test
sub
int
sbb
mov
mov
leave
and
sub
add
insl
adc
and
cmp
aas
xchg
xlat
dec
fidivrs
jno
ret
cmp
pop
inc
sti
adc
aas
nop
call
inc
push
nop
mov
sub
icebp
inc
lret
fwait
cmp
jns
push
out
stos
fcom
pop
sub
mov
xchg
cli
adc
xchg
dec
adc
or
dec
test
stos
push
out
push
cltd
xchg
jg
dec
pop
cli
and
out
jno
pushf
or
or
xor
and
int
jae
outsl
mov
inc
loope
push
adc
ljmp
cli
or
jae
cmp
std
popf
loop
jae
or
test
fnstenv
ret
and
aam
pop
mov
xor
inc
pop
stc
and
rolb
xchg
mov
xor
ja
push
enter
dec
sbbl
xchg
aad
inc
sbb
dec
cltd
arpl
cmp
mov
das
push
ffree
jle
cli
test
dec
jns
loop
xchg
sahf
xchg
movl
mov
stc
loopne
pop
arpl
xchg
imul
xchg
xchg
popa
scas
lods
xor
lods
imul
arpl
pop
rorb
movsb
shl
hlt
and
jo
push
ret
xor
dec
and
ret
sti
inc
dec
dec
jne
lcall
lret
in
sub
repnz
cmc
sub
mov
mov
arpl
loope
mov
fsubs
xchg
ja
lahf
adc
icebp
lahf
xchg
add
clc
addl
test
jg
mov
outsl
xchg
dec
clc
arpl
jb
das
pop
and
ds
aam
rcll
sbb
cltd
ret
aaa
fisttps
add
push
mov
xor
inc
cmp
mov
clc
dec
xchg
mov
sbb
out
out
jecxz
aam
icebp
push
cltd
fnstenv
in
mov
inc
packuswb
cmp
les
jle
mov
stc
cmpsl
pop
pop
sub
movsb
jno
mov
sub
movsl
push
xlat
cli
cli
and
jg
mov
xor
scas
fmull
outsb
ljmp
test
jns
repz
xor
sbb
repnz
cmp
mov
sar
notl
push
push
adc
adc
adc
xchg
push
lcall
sti
push
dec
sahf
mov
dec
sub
jae
or
jno
pop
out
mov
xchg
mov
fcompl
cmp
and
adc
jge
shll
test
stos
stos
fistpll
sahf
fs
test
push
in
pop
iret
lahf
repnz
mov
push
adc
fstl
mov
adc
gs
xor
xorb
pop
in
rclb
pop
stos
add
out
cmp
mov
fsubr
fwait
pop
or
shll
inc
push
push
adc
subl
test
les
mulb
icebp
mov
xor
addb
add
loope
scas
add
sub
mov
scas
xor
xchg
ret
sub
rcll
pop
daa
sbb
ret
xchg
shlb
mov
cmpb
cmp
sahf
mov
xor
pop
test
pushl
outsb
mov
fistpl
jns
jg
movsb
test
jae
ficoml
cmpsb
in
cmpsl
movsb
lcall
loopne
iret
lahf
mov
pop
movsl
mov
add
dec
adc
xchg
cld
ja
je
sbb
ljmp
sbb
and
outsb
adc
movsl
sbb
adc
das
test
cltd
jmp
mov
jmp
fcmovnb
mov
xchg
std
fcmovbe
imul
and
das
adc
adc
mov
test
mov
gs
xchg
cld
mov
lahf
out
mov
imul
shrl
xchg
mull
mov
add
insl
adc
imulb
sarl
mov
cltd
js
push
jecxz
sub
lods
lret
add
in
and
out
push
into
or
scas
hlt
jno
sbb
push
lods
cmp
out
mov
pop
jle
cwtl
sbbl
into
mov
lods
cmp
lcall
mov
cmpsl
insb
fs
sub
cmp
adcl
sub
and
stc
testl
repnz
push
cmp
adc
mov
mov
sub
xchg
cmp
jl
push
adc
mov
lret
adc
push
std
mov
iret
insl
cmp
xchg
sbb
lock
mov
pop
ret
test
push
pop
shlb
jge
imul
shlb
lahf
mov
ljmp
shll
xor
cmp
push
xchg
jl
push
adc
xchg
repnz
leave
iret
add
call
in
or
sbb
in
les
pop
scas
dec
shl
sbb
test
mov
jne
xchg
inc
xchg
out
fcom
lods
or
enter
lahf
rolb
jnp
sbb
xchg
cld
pop
lret
loop
push
mov
or
std
jp
and
or
push
mov
fnstcw
add
jne
jnp
cmp
mov
or
lods
jae
pop
and
arpl
fldl
lds
sub
or
xchg
sbb
or
insb
fldenv
pop
test
mov
movsb
movsl
cmp
sbb
jmp
cwtl
lcall
xchg
inc
xor
jo
data16
repz
xlat
or
inc
pop
jge
sbb
dec
mov
xchg
push
push
push
adc
outsb
pop
mov
mov
icebp
test
and
dec
dec
sahf
ss
sarb
sub
loop
test
sub
cmp
push
adc
hlt
gs
fistpll
jae
push
and
pop
fsubs
cli
mov
imul
fdivrl
mov
fsubp
arpl
mov
out
mov
gs
sub
fdivrp
ret
xchg
xchg
pop
adc
scas
fsubrp
jo
xchg
mov
enter
inc
and
mov
mov
sbb
hlt
xchg
scas
push
cld
fmuls
iret
mov
movswl
jns
stos
xor
outsb
adc
repz
fnsave
jmp
push
test
ret
jo
adc
daa
mov
ja
leave
mov
mov
push
stc
lods
shlb
push
adc
sbb
mov
push
adc
adc
push
icebp
cmpsb
fisubrs
mov
cmp
aaa
lcall
adc
xor
xchg
in
dec
add
loope
jmp
dec
ret
dec
dec
test
cs
jp
pop
ja
mov
or
rcll
xor
in
push
push
adc
lret
imul
mov
push
out
dec
imul
subl
and
scas
int3
sti
sarl
test
sbb
daa
adc
addb
mov
or
cmpsl
dec
sahf
cmp
push
clc
mov
xchg
call
xchg
pusha
jp
mov
push
lock
cmpl
pop
ljmp
ljmp
pop
clc
fldcw
inc
ret
fs
add
and
int3
jge
inc
subb
xlat
int
stos
cmp
jle
sbb
aam
add
sbb
aaa
ds
pop
fsubr
push
sub
pop
sti
ljmp
cmp
lcall
into
sbb
mov
dec
ljmp
adc
mov
sbb
mov
xchg
xlat
dec
enter
sub
and
dec
imul
sub
inc
push
iret
push
xor
mov
cmp
fldenv
xor
insl
dec
push
leave
push
jne
mov
xchg
cs
lret
add
daa
push
mov
cld
les
in
mov
mov
mov
push
adc
push
xchg
lock
jnp
insb
xchg
mov
fldenv
lea
pusha
pop
ret
pop
push
or
mov
push
clc
push
imul
lock
out
js
out
inc
add
xor
pop
adc
sbb
out
bound
adc
mov
add
lahf
cmc
fwait
mov
in
fdivs
sbb
std
mov
imul
dec
outsb
jo
sahf
xor
mov
push
xor
jae
int3
mov
adc
dec
jl
push
adc
aaa
iret
sbb
and
leave
xor
and
adc
fcoms
dec
mov
and
adc
jo
lods
xchg
cs
fsts
pop
sub
xchg
pmaxub
loopne
dec
mov
adc
mov
mov
cmp
je
or
adc
push
neg
xchg
sub
movsl
adcb
loope
dec
clc
push
xor
and
adc
popa
add
mov
loope
sub
les
fiaddl
stos
jne
push
out
mov
and
jl
push
lds
or
gs
in
xchg
pop
ss
dec
push
pop
cmp
cmc
sarl
pop
mov
adc
sbb
add
pusha
or
call
movsl
add
pop
loopne
jbe
push
jecxz
scas
mov
mov
add
test
push
mov
mov
rcrb
aam
mov
gs
push
sub
test
pop
aam
imul
fdivl
xor
cs
or
jecxz
fs
xor
loop
ret
push
dec
mov
test
cmp
fucomip
cmp
xor
shrb
mov
add
out
jne
clc
aaa
ljmp
jnp
ja
sbb
mov
out
lods
stc
push
pop
sbb
jp
mov
mov
xchg
mov
outsl
jae
xchg
loop
rolb
and
scas
cmp
lret
je
divb
lcall
mov
daa
adc
mov
sub
sbb
pusha
dec
and
mov
gs
imulb
pop
movsb
aam
mov
sbb
hlt
call
sub
mov
fistl
pop
lcall
or
in
jle
pop
sti
pop
out
jb
insl
and
add
or
dec
sahf
and
mov
pusha
and
test
addr16
stos
lock
jbe
orb
cmpb
ja
push
push
adc
jge
inc
fistl
push
fistps
jmp
test
out
sbb
jno
xor
in
inc
fstl
stos
push
fldlg2
inc
test
adc
cmp
sbb
iret
add
or
mov
int
repnz
push
fsub
inc
inc
jmp
mov
mov
sbb
stos
cmp
pop
cmc
div
jmp
pop
xor
ficoms
mov
pop
rcrl
and
pop
adc
and
mov
sub
jg
mov
xlat
test
nop
or
pop
daa
out
cmp
in
mov
mov
jae
cmp
mov
sarl
testl
lock
dec
dec
jno
or
mov
or
mov
imul
xchg
cli
jg
jmp
mov
cmc
sbb
xor
bound
mov
ret
pusha
mov
mov
xchg
sbb
cmpsl
lret
jl
mov
hlt
frstor
out
sbb
fimull
stos
mov
sbb
adc
add
ljmp
stc
stc
and
jecxz
cmp
and
insl
call
sub
scas
fucomip
mov
jmp
insb
push
push
adc
adc
loop
gs
pop
fcmovnu
mov
outsl
int3
add
arpl
fsub
cmp
sbb
or
add
pop
movsb
pop
mov
jns
subb
imul
rol
xor
dec
mov
mov
xor
jae
jb
and
call
mov
pop
das
lds
jbe
or
test
push
adc
outsl
mov
mov
lds
aad
cs
in
jbe
scas
nop
cli
aaa
iret
int3
jge
dec
jnp
cmpsb
push
ret
mov
negb
mov
cmp
shlb
outsb
outsl
add
cltd
cmp
cmpsb
inc
mov
call
nop
jno
lahf
icebp
enter
adc
mov
fs
xchg
leave
jmp
push
sub
add
add
scas
xchg
dec
cmpsb
sub
pop
out
push
inc
pop
inc
imul
and
push
shll
pop
lods
inc
stos
ds
mov
in
sub
ret
and
out
subl
movsl
cld
lret
test
xor
jg
xor
xor
dec
sbb
jbe
jl
push
mov
daa
mov
sub
mov
push
mov
clc
inc
cmpsl
sbb
pop
iret
aad
inc
outsb
push
out
test
scas
fsubr
dec
int
push
pop
in
adc
add
push
or
jnp
fs
into
xchg
pop
out
cmc
fildll
ret
xchg
cmp
jo
pop
mov
sahf
inc
shll
cmp
and
and
xor
lahf
outsb
xchg
jnp
and
jge
aad
lcall
fdiv
test
push
and
popa
ss
push
stc
ja
subl
cmp
adc
mov
fistps
push
dec
dec
sahf
cmp
pushl
jmp
cld
arpl
je
mov
stc
mov
ret
insb
ja
adc
add
xor
int
push
xchg
mov
hlt
scas
dec
je
movb
adc
mov
push
int
inc
imul
cmpsl
push
stos
push
test
int3
push
push
adc
iret
sbb
imul
imul
add
sbb
shlb
mov
push
push
mov
push
jge
sub
mov
lcall
loope
or
pop
inc
mov
hlt
call
pop
fabs
frstor
sbb
push
popa
fsub
inc
hlt
cmp
aas
ljmp
xchg
sub
popa
sub
loope
and
dec
dec
push
mov
or
dec
pop
mov
dec
rol
xorb
cmp
fwait
jbe
mov
insb
or
fldt
lods
es
out
lea
add
int
das
or
inc
fcoms
push
aam
cmp
fidivrl
push
jg
ds
jecxz
ss
push
push
adc
imul
adc
jne
in
pop
mov
pop
pop
and
arpl
std
inc
xchg
xor
mov
stc
add
ja
in
and
ret
push
test
mov
stos
xlat
iret
addr16
add
outsb
lock
mov
rclb
push
sub
push
popf
xor
mov
adc
outsl
gs
sbb
rorb
imul
sbb
lods
cmp
mov
push
sbbb
vpextrw
lds
cwtl
sbb
inc
cmp
insb
popa
jp
dec
ljmp
in
adc
test
jmp
arpl
out
jne
lahf
push
fdivrl
fldt
pop
jmp
lock
sub
mov
or
out
push
pop
inc
cmc
inc
mov
ds
pop
and
dec
mov
ret
bound
jge
clc
mov
xchg
fsubl
or
mov
pop
hlt
mov
lea
rorb
mov
loop
add
mov
std
es
cli
bound
cmp
imul
sbb
and
pop
mov
sbb
pop
xorb
mov
pushf
rcl
mov
add
jmp
pushf
sub
mov
jnp
or
jl
mov
xchg
repnz
addl
xchg
mov
xor
pop
ss
jp
sub
inc
mov
fwait
outsl
or
add
jno
out
push
mul
mov
fmul
and
cmp
xor
sahf
xor
jle
cmp
cmpsb
cwtl
cmp
add
mov
xor
cmp
bound
or
testb
ficoml
mov
popf
and
or
test
mov
jo
in
xchg
push
mov
mov
movsl
mov
cld
ret
out
aad
mov
push
lods
push
arpl
mov
xchg
inc
leave
cld
mov
mov
jle
adc
pop
push
rorb
sub
push
es
mov
gs
hlt
cmp
mov
decb
mov
lods
sub
mov
cmp
or
jbe
jae
jp
cwtl
xorb
adc
insl
jae
arpl
sti
inc
sbb
push
js
jl
mov
ds
inc
xlat
divb
push
adcl
push
adc
shll
inc
clc
mov
cmp
call
dec
mov
pop
xlat
xlat
or
mov
push
cld
jge,pt
sbb
sub
fidivrl
out
pop
stos
push
stos
fldlg2
stos
divl
add
mov
dec
push
ret
mov
movsl
mov
mov
inc
data16
or
cmpsl
int3
pop
xor
aaa
fwait
mov
pusha
dec
and
mov
pop
test
sbb
shll
test
adc
test
xor
xchg
add
and
ret
and
mov
outsl
pop
cmp
cmp
adc
xor
hlt
bnd
fldcw
xor
xchg
js
push
mov
sbb
fsubr
mov
jne
jle
int3
push
bound
cli
jl
push
adc
fucom
lret
mov
push
hlt
sbb
and
fisubl
test
movsl
xchg
mov
adc
lock
mov
mov
sub
fs
lods
dec
xor
or
xchg
jae
je
and
adc
adc
lock
xchg
pop
xchg
push
push
adc
test
lea
mov
std
or
leave
pop
adc
pop
jmp
or
aaa
push
es
xchg
pop
mov
cmp
cltd
jg
fisubrs
jmp
and
lea
pop
in
add
cmp
xchg
add
push
sub
jecxz
fs
adc
adc
aaa
scas
je
jecxz
bound
les
cmpb
mov
in
xchg
ss
sbb
push
adc
adc
push
adc
roll
adc
cmp
add
mov
in
dec
cmpsb
ret
loop
ffree
mov
lret
lock
push
adc
add
sub
into
test
push
adc
or
je
pop
push
aad
add
loope
jge
rorb
pop
push
outsl
popa
dec
xor
adc
mov
aaa
cmc
je
pop
cmp
cmpsl
sbb
xchg
lods
subl
jg
movsb
jg
push
stc
ret
pop
fs
and
mov
fs
mov
les
pop
jmp
std
fsubrs
mov
iret
imul
push
adc
fadd
mov
stc
loopne
jb
outsl
stos
and
pushf
out
or
mov
mov
lods
fcomps
insb
jl
adc
jl
mov
iret
sahf
pop
es
mov
repz
sbb
pop
fldt
into
sbbl
ja
xlat
push
mov
cs
fsubs
dec
jle
scas
jp
ss
push
adc
mov
pop
mov
mov
dec
jne
sub
jmp
stos
cmc
ds
sbbb
or
cld
aam
int3
nop
jno
lahf
or
jns
nop
bound
inc
push
push
adc
mov
fs
in
jmp
shl
pop
xor
push
imul
cs
cmp
ja
pop
in
cs
xchg
xchg
xor
jns
jl
insl
dec
or
mov
bound
mov
int3
scas
fildl
and
jmp
subb
arpl
sub
daa
iret
inc
je
jae
xlat
je
sar
inc
add
je
push
lret
repnz
lcall
pop
addr16
lock
xor
pop
push
push
adc
jns
inc
lea
leave
pop
adc
add
idivb
setl
addb
lea
xchg
push
stos
sub
dec
pop
adc
add
ss
push
inc
jno
icebp
popa
mov
mov
test
sub
aam
adc
jp
adc
stos
sbb
lahf
add
push
inc
aas
add
add
jns
mull
mov
inc
sub
mov
test
pop
cs
push
cmpsl
int3
jecxz
imul
jo
mov
and
movsb
mov
sbb
repz
sub
push
mov
sbb
hlt
insl
adc
xor
adc
lcall
mov
xor
cmovg
jmp
dec
iret
rclb
ficoms
stos
fsubr
stos
incb
dec
cmp
test
cmp
xchg
ror
xchg
sub
pop
cs
inc
mov
jne
inc
enter
mov
jb
test
pusha
into
leave
imul
pop
aam
ds
push
mov
and
pusha
push
mov
jmp
pop
cmp
fs
out
cli
gs
xchg
sub
push
and
mov
jl
hlt
push
fistpll
mov
sub
pop
int
fidivrl
cmpsb
pop
sub
pop
mov
push
jnp
out
push
hlt
cmpsl
and
xorb
cmp
jo
mov
into
frstor
mov
push
mov
test
out
push
std
je
mov
inc
repz
jno
push
rorl
xlat
sbb
in
fsubp
cli
and
insb
push
push
adc
fcompl
fsubs
repnz
pop
xor
cmp
jnp
cmp
mov
daa
pop
mov
mulb
test
sti
dec
shlb
inc
adc
cmp
pop
sub
mov
enter
xorb
cmp
mov
push
out
sub
xorl
sub
lcall
jp
outsb
inc
cmp
dec
cmc
add
mov
arpl
pop
push
or
lea
orb
outsl
data16
xchg
add
pop
jmp
jmp
jl
jmp
stos
mov
dec
xlat
out
or
ds
cmp
xor
pshufw
jge
push
mov
setns
xor
mov
std
repz
mov
insl
or
sub
lock
jne
ja
ljmp
fwait
pop
fs
mov
imul
jo
mull
xor
xlat
mov
lcall
sbb
pop
test
ret
stos
out
mov
cmp
pop
lods
mov
js
outsl
push
pusha
ret
xor
mov
fadd
fucompp
mov
lods
data16
or
fbld
inc
dec
dec
insb
ja
daa
mov
dec
inc
js
popa
in
cmpl
lahf
popa
dec
fwait
ret
frstor
dec
xchg
add
mov
aas
shlb
xchg
stc
mov
jle
push
adc
dec
leave
divb
xchg
loope
fwait
inc
push
jmp
stos
or
sub
hlt
and
mov
add
movsb
pop
add
push
adc
mov
pop
rorb
imul
mov
adc
push
je
nop
and
in
mov
inc
xchg
jge
cmpsl
fildll
pop
jecxz
dec
sahf
jns
enter
hlt
mov
enter
test
push
add
mov
shlb
sbb
sub
sub
divb
roll
xor
dec
fstpl
stos
push
sub
mov
sub
jb
or
gs
lock
xor
shrl
mov
jmp
add
jne
int
sahf
cmp
inc
push
cmp
testl
mov
sbb
orl
test
xchg
dec
sub
jge
hlt
call
mov
mov
and
imul
aam
mov
fwait
insl
roll
xor
push
and
mov
std
and
push
dec
stc
cmp
sti
call
mov
test
divl
jb
sbbb
iret
push
pop
insb
or
xor
adcb
fistps
mov
mov
ljmp
or
mov
and
push
cmpsl
dec
push
jg
push
mov
xor
xor
leave
pop
adc
cld
addr16
sub
jp
and
outsb
mov
loop
or
pop
out
dec
mov
inc
mov
test
rcr
push
mov
jl
fcoms
or
call
push
lret
inc
sbb
stos
push
fsubs
pop
popa
ret
scas
fdivs
mul
shll
adcb
xchg
popf
fs
push
cs
fbld
adc
jle
or
rcrb
pusha
imul
dec
scas
sbb
test
cmpsb
dec
adc
cmpsb
bound
lea
xor
xlat
sbb
or
pop
daa
push
jae
lret
loopne
scas
fildll
push
mov
pop
mov
cld
and
int
cmp
add
shll
cmpb
je
jg
mov
or
daa
push
sub
xor
mov
pop
loop
add
push
and
lret
arpl
out
inc
ljmp
stos
dec
test
fdivs
mov
fstl
or
add
imul
bound
shlb
mov
imul
stos
cmovle
xchg
add
mov
inc
inc
dec
shlb
rcrb
imul
shrb
and
mov
sbb
adc
lahf
push
mov
stos
pop
mov
rcrb
mov
push
mov
cmp
fisubs
lds
cmp
adc
xchg
ds
adc
das
les
in
push
sub
mov
cmp
and
sub
fsub
fwait
push
inc
sbb
pop
orl
mov
fimuls
pop
cwtl
adc
sub
xchg
add
push
scas
sbb
cmp
outsb
stc
insb
jl
adc
sbb
std
ljmp
dec
fdivp
cmpsb
mov
xor
mov
fldt
and
cs
insb
sub
push
push
adc
je
or
xchg
mov
sti
xchg
hlt
pop
lds
inc
mov
push
stos
adc
push
push
imul
add
xchg
dec
push
pop
mov
mov
mov
nop
cmp
fldt
dec
dec
sar
fdivl
int
fists
clc
ret
lret
les
addr16
sub
adc
sub
add
mov
test
loop
sub
cmp
xor
and
hlt
pop
or
sub
mov
cmpsb
idiv
fistl
and
outsb
sbb
in
mov
push
and
addr16
sub
adc
xchg
jbe
push
mov
dec
push
push
xor
adc
cmp
or
call
std
clc
pop
adc
ja
iret
iret
jae
hlt
call
mov
inc
lret
in
scas
pop
ret
test
adc
xchg
sbb
adc
jns
shll
xlat
jg
adc
mov
ret
test
adc
addr16
sbb
cltd
pop
mov
cmp
lock
rolb
xchg
ljmp
pop
lret
rcr
lods
and
daa
sbb
loop
insb
jl
adc
gs
jae
inc
ror
and
lea
xor
scas
push
adc
push
push
adc
insl
outsb
out
fdivrl
lahf
jmp
leave
mov
lods
jge
cmp
push
loope
pop
and
push
mov
fsubrl
test
jb
adc
xchg
jno
lret
push
out
mov
sahf
mov
int3
lahf
outsb
mov
sub
int
repnz
shrl
push
stos
fbld
fs
lahf
sub
inc
mull
ja
jmp
imul
loope
inc
mov
in
into
mov
pop
xor
inc
mov
popa
and
mov
sub
sbb
sti
push
sub
rorb
mov
mov
aaa
lcall
inc
mov
mov
push
fs
mov
shl
mov
orb
and
hlt
pop
in
rclb
push
adc
push
push
adc
mov
subb
push
hlt
insl
sbb
dec
jb
cmp
cmpsb
ret
cmp
imul
adc
lret
push
adc
stos
enter
push
adc
out
inc
mov
mov
mov
test
xchg
cmovl
sub
lods
sub
adc
xchg
sbb
outsl
adc
sarl
outsl
ljmp
push
jne
jbe
testb
push
fucomi
dec
sub
sub
lock
mov
lods
mov
jmp
jl
stos
jb
jno
push
xchg
idivb
shll
push
and
adc
xchg
jmp
call
jnp
in
dec
shlb
aaa
data16
repnz
fdivrs
std
push
jne
or
clc
xor
pop
dec
push
fimuls
mov
mov
pop
lods
and
push
adc
sti
jle
pusha
mov
clc
je
adc
jnp
pop
inc
jecxz
lock
push
and
push
push
jne
fstpl
and
stos
aam
mov
inc
mov
mov
lcall
cmp
fsubrs
fmull
inc
jge
fisubrs
cmp
push
adc
mov
shl
push
sub
shll
bound
push
cs
nop
fisttpll
mov
shl
dec
mov
add
xchg
and
xor
or
xorb
sub
cltd
fwait
push
xchg
sbb
dec
aad
ljmp
pop
lret
fldenv
mov
test
xor
cmc
push
test
xor
dec
jns
jbe
and
pop
lret
xchg
mov
jno
pop
dec
cmp
or
shlb
in
push
fcompl
in
dec
fsub
push
lcall
bound
xchg
rorl
das
jae
jl
fwait
push
lock
xchg
adc
inc
ljmp
lds
arpl
jmp
mov
xor
inc
imul
aaa
push
jl
call
or
mov
aas
push
push
adc
push
sbb
jle
push
orb
leave
pop
adc
and
in
popa
cmp
inc
push
jno
xor
cmp
adc
dec
adc
push
push
fdivrs
sbb
fwait
cmpsl
xor
les
mov
scas
mov
dec
data16
test
sub
popa
jl
sbb
cmp
sbb
sbb
lcall
cmp
filds
int3
pop
add
pop
dec
mov
in
loope
test
add
adc
fdivl
stos
insb
mov
loopne
incb
adc
test
pop
mov
stc
outsl
jp
adc
and
inc
push
mov
xor
pop
std
loope
mov
add
xchg
aad
or
and
mov
inc
push
loope
or
rcrb
lret
push
mov
mov
mov
ret
cwtl
fcoms
jge
lahf
mov
frstor
imul
xlat
pop
adc
faddl
daa
xor
testb
mov
cmp
sub
jnp
gs
push
sub
add
and
jne
dec
push
sub
outsl
sub
sbb
ds
pushf
outsl
pop
push
rcrb
daa
push
push
push
jl
xor
lea
xor
loopne
mov
test
pop
dec
jl
ret
sub
push
and
cmp
movsl
arpl
mov
push
push
ret
sub
shll
iret
ja
in
hlt
mov
pop
gs
or
mov
pop
cmp
test
and
add
lods
sbb
inc
jb
bound
outsl
jns
dec
idivb
hlt
mov
push
xor
jno
pushf
jg
shll
test
jbe
test
repnz
sbbb
movsl
mov
xor
ds
out
test
roll
push
xor
aad
bswap
fistpll
mov
inc
inc
hlt
cmp
cmpsb
add
insb
out
mov
insb
mov
lret
sbb
mov
xchg
dec
test
sub
or
pop
push
test
cltd
shlb
pop
and
aam
pop
shl
mov
jne
inc
call
cli
xor
and
lock
cmp
leave
cli
xor
pusha
push
and
adc
xchg
mov
fidivrs
push
adc
xlat
lds
xlat
scas
cmc
and
pop
adc
jnp
push
sti
test
mov
pop
mov
cmp
push
lods
push
icebp
or
adc
mov
es
sbb
push
ds
fdivs
cli
out
enter
test
push
adc
cmp
cmp
pop
faddl
inc
ss
fildll
insb
mov
mov
push
inc
hlt
jo
adc
mov
mov
insb
cmp
push
adc
push
movsb
jne
adc
mov
leave
xchg
jbe
gs
pop
pop
push
mov
mov
mov
xchg
lret
cmp
adcb
add
push
xor
outsb
pop
enter
xor
das
or
insb
mov
cmp
fldenv
sar
mov
arpl
dec
pop
lock
in
decl
cli
fisubl
xchg
rolb
lds
lea
push
pop
fsubrs
add
fwait
xchg
xchg
fdivrs
aaa
push
add
mov
addr16
jle
jno
ja
shl
fisubrs
push
int3
testl
dec
inc
push
int
mov
andl
ja
loope
mov
xor
div
test
jmp
xlat
popa
add
sahf
cs
sub
pop
mov
cmp
or
les
adc
addl
clc
or
pop
das
out
test
xchg
test
adc
mov
dec
iret
lahf
ds
add
or
in
add
adc
popa
dec
and
adc
clc
mov
int3
lret
jbe
test
in
push
fstpl
push
mov
int
iret
insl
idivb
and
cmpl
push
cmp
lea
mov
cmc
xchg
pusha
dec
and
adc
lea
inc
jae
lcall
jnp
mov
gs
jnp
add
mov
sub
or
cmp
sbb
pop
sbbl
lods
nop
push
push
inc
ficoml
and
arpl
ss
xchg
or
in
cld
jo
adc
push
ret
push
sub
dec
aad
pop
adc
xor
mov
add
pop
cmp
out
jle
stos
push
or
fsubr
mov
out
fdivrl
xlat
outsb
hlt
call
lcall
jmp
lahf
dec
sarb
ja
mov
inc
fldenv
xchg
pop
dec
jns
push
adc
movsl
push
sub
pop
fldcw
dec
sub
pop
int3
je
pcmpeqd
out
lcall
stos
push
popa
inc
and
adc
pusha
xchg
sti
add
adc
call
in
pop
dec
and
adc
mov
jl
fcoms
push
fwait
mov
aam
add
scas
push
sti
add
pop
jp
loope
jp
imul
add
dec
and
adc
lea
mov
pop
aas
stos
fisubrl
push
ret
xchg
adc
inc
and
adc
in
in
cld
jo
adc
push
inc
inc
bound
movsb
test
test
or
scas
pop
jae
imul
pushw
sub
jge
push
pop
mov
xchg
insb
adc
sub
jae
shrb
jb
adc
lods
test
popf
enter
adc
mov
test
adc
and
es
jmp
jb
adc
rcrb
es
dec
mov
hlt
notl
in
roll
push
mov
test
cs
mov
mul
xchg
jne
aad
xor
sub
lods
ss
iret
aaa
js
mov
divb
pop
xor
jb
adc
add
push
adc
iret
sbb
adc
mov
repnz
push
aad
jno
test
mov
data16
xor
adc
mov
lret
test
dec
bound
xchg
sub
fs
call
cs
and
adc
cmpsb
dec
jae
leave
cmp
pusha
pop
jo
sarb
or
jge
mov
jl
pop
dec
lret
call
adc
pop
stos
xchg
call
andl
aas
push
push
dec
fisubs
dec
mov
lcall
sbb
arpl
sub
dec
add
xchg
mov
xchg
add
pusha
pop
inc
adc
jns
sub
roll
iret
repz
adc
cmp
pop
shrl
bound
and
incb
int
popf
fwait
cmp
add
cmp
jno
xor
push
fiadds
sbb
int3
aam
stos
movsl
and
inc
xor
mov
iret
lret
fs
xor
into
jle
ds
ja
gs
dec
pop
rorb
sbb
cmp
xor
rcr
push
or
sub
push
adc
mov
sbbb
loopne
ss
mov
mov
cmp
mov
xor
push
xor
xor
inc
nop
roll
stos
mov
jo
adc
sbb
xor
jns
movsl
adc
mov
mov
inc
data16
push
adc
bound
icebp
cmpsb
stos
fidivs
mov
clc
xor
pop
xor
ret
ret
pop
fidivrs
or
cmp
xlat
insl
pop
sbb
pop
sub
dec
mov
arpl
inc
dec
fscale
jo
fsubrs
push
cmp
repz
or
icebp
lock
or
orl
xor
mov
inc
ljmp
push
xor
std
addr16
fcmovu
imul
imulb
pop
lahf
ds
iret
arpl
incb
shrb
mov
sti
adc
push
jb
iret
lahf
mov
movsl
xchg
aad
dec
sub
cs
fcoml
jne
lock
int3
js
in
cmc
ds
xchg
inc
mov
mov
cli
aas
stos
stos
lcall
aaa
insl
sbb
cld
jne
mov
test
hlt
xchg
cli
inc
dec
cmp
test
notl
or
jb
jg
ficomps
bound
scas
adc
dec
lods
std
cmp
or
out
pop
jp
test
inc
ljmp
dec
jns
jnp
les
enter
xchg
pusha
ficomps
aaa
arpl
push
inc
clc
push
stos
push
cmp
jl
int3
xor
pcmpeqb
push
push
xchg
lcall
inc
and
dec
adc
aas
jg
out
into
sahf
aas
xchg
std
xor
aam
inc
mov
psadbw
pop
into
repnz
rcr
lds
xorl
insl
sub
and
cwtl
imul
cmp
test
aad
addr16
xchg
xchg
ja
adc
sub
sub
pop
aam
jnp
cld
push
inc
ja
jecxz,pt
nop
mov
adc
inc
pop
jmp
sub
lock
repz
dec
lds
xchg
cld
test
cmp
push
add
jp
ror
inc
adcb
lahf
fwait
cmpsl
or
jle
push
lcall
jl
lock
clc
fdiv
les
jb
jo
push
and
clc
sub
movsl
jb
and
cmp
jbe
jl
movsl
movsb
pop
ds
jge
outsb
cmp
push
sub
adc
lcall
mov
pop
fnstcw
sbb
lds
lahf
xchg
dec
inc
push
aaa
xchg
int3
inc
stos
or
cmpsl
fadd
jno
out
imul
adc
sti
add
lea
add
movsl
outsl
lods
pop
jb
das
repnz
mov
sahf
sbb
dec
mov
idivb
mov
or
leave
mov
popf
push
pop
sub
fisubl
imul
int
imul
sbb
cmc
xor
adc
xlat
cmp
testl
andb
inc
enter
sahf
mov
les
and
outsl
xchg
xor
clc
mov
dec
gs
push
cmp
ds
dec
icebp
or
push
pop
stc
data16
adc
jne
xchg
testb
dec
testb
dec
mov
dec
cld
cltd
jb
mov
js
ficoml
stc
orl
cmp
jo
jmp
sub
jb
cmp
je
int
jo
mov
xchg
push
mov
inc
ror
iret
push
in
adc
repnz
fnsave
and
adc
out
xchg
cli
sub
mov
ret
mov
mov
pop
mov
pop
popa
shll
fwait
out
movsb
and
repnz
push
mull
notb
inc
jns
loopne
fimull
in
pop
push
and
xor
fdivl
adc
cmp
test
mov
gs
xchg
cmp
stos
push
arpl
outsl
push
test
psubusw
cmpb
shll
and
insl
adc
adc
lock
gs
add
movsb
arpl
dec
stos
jae
lret
fistps
push
test
cmpsl
dec
sbb
push
jnp
lahf
adc
xchg
sti
movhps
sub
test
in
pop
loop
notl
mov
test
xor
or
sahf
pop
pop
out
roll
push
test
ret
fstpl
sbb
xor
sbb
sub
push
adc
mov
xchg
mov
mov
shlb
orb
lock
jae
pop
in
inc
and
mov
arpl
mov
adc
jne
lret
std
fsub
push
inc
and
popa
mov
out
addr16
mov
stc
and
test
pop
pop
ret
lods
movsb
mov
mov
repz
movb
dec
pop
dec
jbe
bnd
ror
adc
imul
adc
push
in
jnp
sbb
mov
mov
xor
pop
pop
sub
mov
out
sbb
sahf
mov
test
cltd
inc
stos
push
and
adc
pop
pusha
sub
clc
out
shll
cmp
enter
mov
hlt
mov
sbb
pop
or
jnp
cmp
mov
pop
jmp
mov
inc
movsl
lret
outsl
xchg
inc
adc
ja
and
aad
and
mov
xchg
sub
dec
enter
mov
push
movsl
and
mov
add
test
add
orl
xchg
sub
sub
aas
and
sbb
jmp
sahf
pop
or
testb
push
push
out
test
dec
and
cld
mov
std
push
or
repnz
out
popf
scas
in
ret
xor
xor
ret
lea
push
sub
test
popf
lods
sub
sets
ds
inc
mov
inc
aad
sub
pop
mov
inc
sbb
pop
out
dec
sbb
scas
arpl
mov
lods
cmp
mov
add
into
in
les
dec
xor
pop
or
jno
mov
loope
sbb
jg
ss
imul
ret
sbb
lcall
or
mov
or
sub
stos
dec
mov
xchg
push
popa
shll
sbb
inc
add
add
xchg
hlt
push
cmc
sti
cmpb
pop
daa
lods
cwtl
and
stos
rolb
pusha
in
cmpl
pop
pop
sbb
xchg
add
add
xchg
ljmp
fsubr
mov
imul
mov
mov
les
popf
push
and
or
and
mov
mov
sub
loopne
lods
sub
lds
add
and
in
pusha
lret
dec
repz
cmp
inc
not
and
aaa
jp
xchg
out
mov
addl
leave
mov
int
jo
inc
cmp
sbb
inc
pop
mov
sub
add
fisubrs
shlb
jl
push
xchg
je
fwait
jae
add
inc
push
add
fldenv
push
push
ret
xlat
pop
xorb
scas
rolb
lds
repnz
movsl
loop
shlb
pop
js
les
push
jae
push
enter
jno
sbb
dec
inc
pop
push
aas
out
adc
shrb
mov
and
fmul
nop
mov
pop
out
mov
cmp
and
mov
mov
sarl
cmpsl
sbb
pusha
mov
push
mov
mov
lret
adc
xchg
sbb
and
mov
mov
mov
daa
mov
push
ficompl
sub
es
lock
lahf
push
das
sbb
pusha
mov
pop
pop
mov
subb
scas
mov
adc
and
ss
rcrb
add
adc
addb
stos
push
pop
pop
pop
pushf
pop
lcall
xor
lahf
sbb
jns
xor
cs
dec
xor
push
and
movsl
shr
test
movsl
inc
mov
sbb
adc
cmpl
popf
xchg
js
andb
scas
and
mov
lock
insb
mov
popa
xchg
dec
scas
imul
lret
out
std
xlat
push
aad
add
and
ds
inc
into
cmp
mov
int
inc
sarl
out
and
mov
sti
and
call
jge,pt
movsb
add
push
mov
pop
out
mov
and
lcall
mov
inc
rol
sub
in
pop
out
gs
xchg
sub
sbb
stc
push
sub
push
fs
jns
int
dec
mov
pop
jle
aam
adc
mov
lds
movsl
into
pop
xor
hlt
and
pop
or
mov
ret
jmp
lods
fsubrp
scas
inc
xchg
gs
bsr
jae
mov
mov
out
inc
add
in
stos
test
pop
addr16
mov
cmp
sbb
gs
sbb
sub
xor
xor
mov
ret
lds
arpl
hlt
jae
dec
add
lret
and
adcb
mov
mov
mov
mov
dec
and
cmpsl
and
cltd
push
mov
pop
jle
mov
imull
push
outsl
dec
xor
cld
das
lret
ss
mov
scas
out
inc
adc
roll
scas
fildll
pop
fcoml
sahf
jns,pt
mov
mov
pushf
test
pop
test
and
cmc
hlt
and
rorb
je
out
fstpl
push
lods
fcomps
mov
mov
int3
mov
loope
int3
cmp
test
or
scas
mov
dec
mov
mov
or
sti
pop
into
fsubrp
mov
pop
in
add
dec
cmp
push
js
imul
and
stos
add
lret
inc
leave
arpl
jae
data16
jmp
test
adc
and
int3
cwtl
add
negb
add
iret
cwtl
add
out
cwtl
add
outsb
lcall
jmp
add
dec
fwait
add
stos
cwtl
add
stos
cwtl
add
stos
cwtl
add
stos
cwtl
add
dec
cltd
add
xor
add
inc
cltd
add
jecxz
add
stos
cwtl
add
stos
cwtl
add
popa
cltd
add
sbbl
add
into
cltd
add
or
add
scas
fwait
add
dec
popf
add
push
lcall
scas
pushf
add
clc
pushf
add
xchg
mov
roll
ja
repz
maskmovq
testl
push
inc
pop
jo
and
mov
les
dec
mov
jns
mov
aam
ds
clc
add
sub
add
stos
je
pushf
jecxz
cmp
scas
sub
and
or
mov
adc
dec
adc
push
daa
sbb
aad
add
and
jl
add
data16
mov
dec
adc
push
rcrb
dec
jno
ret
cs
cld
jge,pt
or
repnz
stos
fidivs
jb
fsubl
mull
mov
push
jnp
xchg
push
mov
pop
stos
push
cmp
sbb
xor
xchg
xor
decb
loope
gs
inc
scas
in
lret
fistps
adc
sub
pop
cmp
cwtl
mov
fidivl
cmp
pop
and
sub
xchg
jbe
mov
adc
int3
mov
sbb
and
sarl
test
ret
mov
fsubl
xorb
fisubrl
add
mov
or
jnp
gs
and
and
xchg
jns,pt
kmovb
push
pop
cmpsl
cmovno
ja
aas
je
testb
dec
dec
gs
push
stos
xlat
insl
pop
pop
cmp
mov
dec
mov
mov
repnz
mov
or
ret
and
and
stos
and
adc
pusha
push
insl
jno
popa
xchg
pop
scas
xchg
lret
push
out
mov
adc
and
daa
mov
mov
shll
sbb
mov
pusha
dec
xchg
push
pusha
lcall
icebp
or
mov
pop
stos
push
shrb
sub
pushf
aas
jns
adc
adc
or
jge
pop
jns
push
jmp
push
ret
cwtl
sub
sahf
shl
add
push
imul
pop
aaa
test
mov
and
adc
push
cli
andps
ret
adc
sub
or
dec
ds
mov
and
in
and
sbb
outsl
ss
imul
cli
inc
rcrb
mov
pusha
and
add
mov
xor
ret
jle
popf
fiadds
fistl
sub
dec
lcall
xchg
popa
iret
xor
lahf
and
jecxz
inc
pop
std
adc
adc
aaa
mov
sub
test
outsl
insb
fidivrl
cmp
cmc
mov
aaa
adc
decl
jp
fmuls
mov
push
lods
and
mov
mov
xchg
fcoms
lea
addl
dec
aam
pop
mov
pop
add
imul
cld
clc
sbb
imul
out
test
dec
int3
jbe
cmpsb
and
lods
out
push
inc
lcall
add
dec
add
popf
int
icebp
out
pop
cld
aad
sub
inc
push
les
setl
or
test
push
fstl
fnstenv
mov
lods
xor
sbb
cmpsl
repz
arpl
jg
mov
in
aam
push
imul
frstor
cmp
mov
jae
ja
or
lods
pop
lea
notl
iret
int3
ret
das
scas
fists
subl
mov
push
incb
add
mov
shlb
mov
xchg
cmp
xchg
mov
std
jo
sub
jns
es
mov
aaa
xchg
mov
jne
bound
sbb
mov
jmp
cltd
xchg
pop
inc
sbb
adc
xor
and
sbb
dec
ds
mov
icebp
mov
repnz
jne
dec
mov
js
push
adc
mov
mov
jae
in
popa
mov
push
imul
mov
jne
jle
shlb
cmp
or
hlt
incb
mov
xchg
dec
bound
aad
push
and
test
pushf
enter
mov
cs
ret
dec
xchg
jo
test
stc
add
sbbl
inc
mov
cld
pop
pop
jnp
icebp
imul
lods
sahf
lcall
pop
test
jge
hlt
gs
mov
mov
cli
mov
orl
cmpsl
push
lods
and
out
jno
push
lds
mov
repz
repnz
test
push
fsubp
inc
and
mov
pop
push
das
inc
mov
push
jnp
xchg
imul
scas
push
sbb
inc
xchg
pop
shrb
repnz
fists
xchg
push
pop
cs
int
add
jne
lcall
mov
clc
sub
cmp
addb
push
loop
repnz
and
mov
repz
test
sbb
inc
jne
cmp
cmp
inc
lea
lret
and
dec
mov
ret
imul
insl
fs
lahf
dec
popf
jno
loopne
mov
inc
mov
mov
decb
xchg
sbb
pop
inc
push
aas
adc
pop
mov
mov
inc
incl
pop
lret
jae
call
and
push
jg
cmp
cmp
mov
inc
cli
fisubs
mov
dec
mov
push
dec
lcall
icebp
pusha
xchg
cmpsb
int3
leave
out
xor
fimull
lret
jle
ss
sbb
sbb
idivb
push
add
and
rclb
andl
mov
sbb
xchg
mov
lods
sbb
sub
add
mov
lods
mov
nop
push
aam
and
push
or
mov
and
in
mov
xor
in
pop
dec
iret
push
mov
loopne
ja
lods
mov
xor
call
mov
popf
or
mov
xor
aam
ja
ja
mov
fsubs
cld
adc
jne
insl
rclb
mov
popf
jnp
pop
lea
in
and
fsubl
lcall
imul
lds
cmp
jp
jg
imul
icebp
jb
mov
es
stos
pop
ret
inc
mov
jecxz
imul
inc
xchg
add
push
rorl
sbb
insl
shrb
push
negb
push
cmp
mov
dec
or
int
rcrl
mov
dec
dec
push
sarl
push
push
jle
cwtl
mov
les
lret
pop
or
ljmp
jmp
xor
scas
outsb
dec
xchg
ds
sub
cs
adc
mov
sbb
cmp
lret
inc
sbb
mov
ffreep
flds
aas
sub
fnstcw
mov
lahf
adc
icebp
sub
sub
push
mov
sti
into
call
mov
mov
sahf
out
or
or
mov
push
movsb
ret
ret
fistps
pop
imulb
jg
cmp
enter
xchg
leave
repz
mov
sbb
data16
mov
test
add
in
dec
imul
sub
xchg
xchg
or
lcall
pop
fcmovbe
enter
push
lds
jne
push
sub
pop
push
call
fldenv
arpl
jge
cltd
jecxz
mov
mov
loopne
and
add
in
xor
dec
xor
sub
lods
jbe
sbb
sub
sub
ljmp
lock
pusha
xlat
mov
mov
gs
xchg
sub
xchg
and
xchg
push
bound
and
dec
iret
lahf
ds
mov
mov
sbb
pop
push
and
ret
arpl
mov
imul
movsl
push
stos
fisubrs
cmpsl
incb
loopne
sub
mov
lea
imul
push
aad
sbb
and
stos
bound
jnp
ja
in
cmp
ficoml
and
dec
jl
rcl
push
lods
adc
ret
push
data16
rcrb
inc
add
je
rolb
stc
jnp
hlt
call
inc
push
mov
stos
pop
and
mov
or
mov
imul
pop
mov
sub
pop
and
popa
ret
jnp
ss
mov
sbb
je
inc
rclb
and
push
jge
pop
hlt
cmp
cmp
test
sbb
cmpsb
xchg
pushf
and
lods
stos
push
fisttps
push
sub
jbe
xchg
or
push
popa
idivb
sbb
mov
add
push
outsb
aad
jno
push
and
test
bound
pusha
roll
jp
in
loope
movsl
jmp
fucom
push
sub
xchg
sti
jnp
pop
enter
inc
lret
sbb
xor
add
push
jp
xor
mov
cmpsb
add
or
jp
out
adc
mov
nop
mov
pop
mov
arpl
jl
xor
std
inc
fcomp
hlt
sti
movsl
arpl
enter
rclb
shlb
jg
xor
cld
sub
add
pop
imul
les
mov
sbb
sub
insb
add
or
ret
out
sub
sti
pop
mov
sub
lods
xchg
out
jl
mov
popf
pusha
xor
or
push
mov
sti
loope
pop
and
stc
xor
mov
cmp
push
push
cmpsb
and
in
jns
je
je
sbb
shlb
aam
push
sbb
cmp
cmp
movsl
and
or
movsb
mov
sbb
aam
jmp
mov
jge
cmc
push
and
mov
sub
push
outsb
fucom
mov
jmp
push
jo
xchg
add
push
sub
adc
lods
push
push
es
shl
inc
sbb
popf
adc
sub
outsb
inc
cmpl
and
push
or
sarl
dec
les
rorl
in
xlat
or
sbb
sbb
ss
jge
rep
js
jbe
pop
mov
nop
push
pop
inc
dec
push
cmp
orb
scas
addr16
in
test
mov
ret
dec
adcl
mov
jns
stos
pop
cli
cmp
lock
daa
mov
jnp
lahf
cwtl
dec
xor
scas
add
pop
data16
mov
mov
inc
cs
or
add
jmp
jnp
cmp
cmp
inc
daa
enter
mov
subb
xor
pop
leave
movsb
bound
push
mov
xor
addl
mov
dec
sarl
jbe
jg
popa
push
movsb
and
jg
pop
cs
loope
push
adc
stos
andb
ljmp
bound
lock
and
je
fistps
pop
mov
xrelease
inc
xchg
popf
lea
ljmp
dec
inc
mov
xchg
shll
mov
inc
mov
lret
push
adc
pop
in
pop
cmp
pop
push
aam
xor
or
jg
pop
out
gs
sub
stos
mov
add
call
jle
add
xchg
add
dec
push
ror
addl
push
stos
add
cwtl
dec
and
test
xor
jecxz
ljmp
dec
sbb
lret
mov
pop
sub
push
shl
out
fdivl
sbb
ds
sahf
clc
pop
insl
scas
xchg
lret
push
out
pop
aad
sub
xchg
insl
sub
mov
roll
or
mov
push
and
xchg
dec
jae
call
and
clc
jl
ja
shll
mov
sub
pop
sub
lcall
mov
inc
cmp
insl
scas
daa
icebp
lret
jb
jno
and
ret
arpl
adc
adc
cs
int
push
data16
scas
mov
sub
xchg
mov
rep
and
cmp
clc
dec
adc
lock
and
push
lock
mov
jg
pop
mov
popf
outsb
daa
jmp
shrl
push
int3
push
ret
mov
mov
insb
into
pusha
dec
jno
jge
fldcw
add
out
push
stos
sub
fiaddl
cmp
out
fcoml
sbb
je
sub
mov
xchg
js
addl
stos
push
fcom
inc
sbb
je
push
fdivrl
nop
jo
adc
lods
ret
xor
movsb
add
lods
dec
adc
jne
jae
mov
add
and
inc
popa
les
mov
xor
push
out
inc
sbb
iret
dec
scas
mov
stc
push
and
stos
mov
mov
and
gs
jo
sub
add
popf
adc
xchg
pop
adc
test
mov
push
scas
inc
or
movsb
inc
jge
jl
test
push
xchg
mov
stos
mov
mov
pop
outsb
or
stos
fsubs
repnz
mov
arpl
stos
mov
and
sbb
test
cmp
mov
rolb
mov
enter
mov
xchg
fsubs
movsl
jb
push
jge
sbbl
icebp
push
add
js
push
cwtl
xchg
testb
dec
xorb
push
push
adc
inc
dec
fsubl
or
lcall
adc
mov
mov
cmp
xor
out
inc
scas
pop
mov
cli
or
push
scas
mov
cs
mov
and
xchg
jns
pusha
shrb
pop
test
adc
and
jge
inc
jge
and
rorl
xor
scas
push
rcr
mov
pop
ss
jno
cmp
aas
pop
jmp
cmpsb
mov
out
je
test
stc
mov
aas
add
cmpsl
orl
clc
mov
xlat
mov
in
or
insl
sbb
call
push
adc
add
fs
leave
cmc
xchg
cs
pop
mov
lods
enter
xchg
add
in
in
scas
pop
xchg
mov
mov
push
or
aaa
flds
nop
jo
adc
ss
imul
popf
into
jmp
and
push
pushf
ja
add
sbb
push
leave
jmp
push
sub
dec
stos
jg
cmp
cmp
arpl
loop
mov
adc
or
outsb
mull
stc
in
call
pop
cmp
out
xchg
les
lods
jb
popa
lret
aad
dec
push
outsb
push
ficoml
jmp
fnstenv
sub
das
jl
and
xchg
mov
adc
in
int3
lret
sbb
cmp
pop
jg
repnz
sbb
pusha
mov
ljmp
sbb
sub
insb
jmp
scas
add
mov
adc
loop
testb
cmp
lret
out
inc
ss
push
cmpsl
lret
out
aaa
add
daa
add
movsl
add
mov
xor
pop
or
aaa
cs
sahf
cmp
jnp
out
adc
sub
jg
frstor
xchg
int
aad
push
insb
adc
popa
or
psubd
xor
inc
rol
cmc
mov
add
repz
sub
cs
jl
push
jae
test
iret
js
dec
mov
sbb
ficomps
mov
fadds
or
movsl
jnp
icebp
pop
pushf
pop
lods
scas
and
mov
inc
dec
sub
mov
xor
shl
sbb
and
cmp
js
dec
xchg
push
push
aad
and
mov
mov
adc
pop
cmpsl
mov
sub
push
cltd
mov
pusha
sub
sub
adc
int
addr16
push
in
mov
ja
inc
js
mov
adc
push
repnz
mov
and
movsb
jb
ljmp
inc
push
stos
mov
stos
ja
push
hlt
sbb
sub
int3
jo
out
std
lds
push
push
adc
std
sbb
and
pop
adc
sbb
push
test
xor
xor
into
hlt
xchg
xchg
dec
dec
lea
xor
push
fildll
mov
or
ds
jl
popf
xor
push
adc
push
loopne
test
push
fsub
push
sub
dec
xlat
and
mov
notl
jne
ds
std
je
mov
ret
lahf
jb
or
pushf
push
ja
push
notb
pop
sub
inc
arpl
stos
pop
fsubrs
lods
dec
jg
xor
stos
pop
shlb
lret
cmp
in
addr16
lahf
jo
xor
push
jae
and
lahf
and
and
mov
stos
mov
adc
xchg
js
mov
or
push
mov
xor
aam
adc
maxps
push
inc
addr16
loopne
mov
outsb
mov
push
push
mov
sub
fistpll
nop
loop
int3
sarb
fcmovne
add
cwtl
adc
sbb
mov
fnstsw
lods
mov
inc
test
push
call
mov
mov
mov
cmp
sub
orb
shrl
inc
xchg
mov
or
adcl
shlb
in
insl
mov
push
aaa
dec
sbb
add
fcom
and
xchg
scas
cmp
sub
subb
xor
mov
repnz
cwtl
push
mov
jmp
dec
inc
insb
nop
rorl
or
mov
xlat
dec
xchg
call
mov
daa
fisttpl
or
or
shlb
in
jo
dec
cmpsl
fsubs
dec
mov
repz
rcrl
sub
mov
jnp
sub
push
pop
fwait
ljmp
cltd
cmp
cmp
decl
imul
bound
mov
filds
cmp
push
pushf
addr16
push
nop
adc
sbb
cmp
shll
lret
or
out
push
and
fcmovbe
dec
xor
adc
mov
inc
add
lcall
hlt
pushf
stc
mov
stos
jl
mov
iret
mov
mov
xlat
iret
push
mov
add
and
leave
mov
xor
fdivrs
xchg
in
dec
push
push
adc
lret
mov
leave
pop
adc
arpl
leave
dec
shrl
out
cmp
in
and
push
fcmovbe
lahf
jbe
lock
xor
xor
rclb
sub
fstps
xor
out
test
daa
mov
fucomi
sub
fs
jb
or
pop
out
sbb
stos
ftst
xchg
adc
fnsave
pop
daa
xchg
mov
add
or
push
fsubp
mov
rcrb
out
fdivrl
gs
roll
xchg
sbb
cmp
stos
fildll
jmp
test
movntq
roll
adc
jmp
imull
push
stos
sub
mov
mov
test
popa
roll
add
cld
ficomps
add
jae
addr16
testb
pop
das
pop
mov
pop
in
push
and
outsl
aad
or
and
adc
jns
xor
xchg
jae
andb
and
mov
xchg
out
orb
in
daa
cmp
ret
bound
outsl
notl
les
xchg
lods
mov
jp
imul
call
xchg
dec
bound
ficomps
scas
fsubp
dec
into
mov
repz
fs
or
pop
in
fstl
fistl
sub
xor
inc
fs
add
xchg
cmp
stos
push
arpl
push
push
adc
sti
mov
jb
inc
shll
cmc
mov
push
pop
inc
or
inc
arpl
ficomps
fstl
ror
sbb
jno
add
imul
pop
inc
push
and
movsl
mov
hlt
mov
adc
jecxz
adc
sub
adc
es
xor
and
aad
mov
and
mov
fs
mov
cmpsb
xchg
arpl
mov
aam
cmpsb
sub
ljmp
loopne
cmpsl
mov
push
fsubr
into
movsl
iret
inc
fwait
hlt
cmovo
or
sub
mov
inc
and
outsb
adcb
pop
call
adc
jge
adc
jle
out
movl
andl
pop
cld
mov
lods
sub
adc
sub
push
and
inc
repnz
adc
ret
push
push
adc
aaa
mov
adc
jae
daa
mov
xor
loope
mov
ds
sti
lods
fadds
adcb
mov
jmp
das
cltd
jp
clc
adcl
imul
and
popf
cld
popa
rcrb
call
or
ljmp
pushf
push
sub
in
xorb
loope
push
stos
mov
es
jg
fcomps
pop
cmpsb
sahf
xchg
jmp
insb
push
xchg
loopne
add
enter
imul
iret
enter
in
in
fadd
jecxz
out
push
loope
in
mov
and
push
mov
rclb
add
add
mov
imul
cmp
add
mov
outsl
add
fisubrl
leave
addr16
stos
inc
aas
add
shrl
out
push
xchg
fwait
sti
test
mov
insb
cmp
inc
sti
shlb
nop
inc
hlt
cmp
xor
iret
fdivs
pop
iret
loopne
and
adc
cmp
shrl
sub
roll
pushf
stc
mov
adcl
loop
pusha
push
jge
cmpsl
std
popa
fisubl
push
adc
enter
sbb
inc
jbe
jnp
sub
or
jge
aad
push
lods
pop
push
mov
inc
cmp
lret
mov
adcb
mov
and
gs
adc
stos
push
and
test
icebp
divl
sub
fwait
or
or
mov
bound
ficompl
xorl
popa
jo
inc
pop
lcall
testb
push
xchg
aad
adc
mov
sub
push
roll
pusha
mov
cmp
adc
xchg
sti
and
stos
push
pop
icebp
pop
iret
ret
push
pop
push
mov
dec
pop
divb
or
mov
fiadds
sbb
mov
mov
mov
hlt
call
xchg
cmp
pop
push
fucompp
inc
pop
jnp
push
inc
fdivrl
es
hlt
call
sbb
cmp
mov
cmc
push
cmp
and
fisubrl
sub
cmpsl
mov
add
pop
inc
pop
add
insl
sbb
mov
sarl
sub
mov
loope
insl
adc
test
push
test
gs
mov
mov
ja
add
fst
sub
stos
sub
pop
js
ss
nop
push
out
lahf
pusha
dec
jne
dec
dec
sub
mov
fstl
mov
mov
mov
pop
mov
daa
sbb
addb
jns
imul
cmpsl
push
stos
push
test
cmp
mov
jmp
jno
add
repz
fidivs
and
divb
into
shlb
lahf
iret
mov
repz
sub
adc
dec
mov
inc
pop
movsl
cmp
stos
mov
aaa
ss
xorb
inc
fmull
es
dec
sbb
movl
push
jns
lock
lret
inc
mov
xor
scas
inc
int
mov
insl
cmp
test
or
inc
jp
xor
pop
fistpll
jle
movsl
pop
adc
cmp
xchg
mov
in
sub
add
push
sbb
push
nop
mov
push
adc
add
pop
adc
fsubl
popa
pop
ss
hlt
pop
adc
shrb
jecxz
ss
mov
dec
pop
sub
push
adc
jge
cmpsb
shlb
cmp
mov
mov
enter
mov
lds
andb
lds
movsbl
js
test
dec
or
subb
pop
cmc
popa
xlat
sub
lock
sub
lods
stos
gs
mov
push
stos
xchg
addr16
mov
mov
inc
mov
cmovl
dec
int3
jl
mov
adc
mov
add
push
adc
repnz
ss
fldlg2
ljmp
adc
psrlq
int3
pop
cs
cmp
pop
jl
test
sbb
xor
mov
inc
or
gs
mov
inc
aad
push
adc
pop
mov
neg
and
pop
adc
sar
ja
push
stc
dec
imul
hlt
mov
js
sub
cld
divb
int
inc
in
fxch
pop
mov
addr16
cmp
xchg
xchg
inc
inc
push
xorb
lret
fs
xor
jp
cmp
rcr
push
les
dec
or
aaa
adc
add
adc
fisubrs
fsubp
sbb
popa
orb
ret
sbb
push
mov
call
and
ret
lods
sbb
testb
es
mov
and
in
add
xchg
mov
cmovno
lret
outsl
lock
imul
jmp
test
sbb
or
push
addr16
inc
inc
leave
int3
push
cmpsl
push
iret
mov
les
cltd
adc
hlt
popl
xlat
fs
shr
adc
push
inc
mov
sti
sarl
int3
push
lods
xorl
mov
out
lods
sub
lret
xchg
pop
in
insb
adc
dec
mov
ret
test
xor
jge
hlt
call
dec
mov
inc
or
lods
pop
ret
xchg
mov
test
add
gs
cmpsl
sbb
xchg
sub
adc
adc
sub
pop
daa
mov
addb
ret
inc
frstor
push
stos
and
mov
jnp
jl
sbb
ljmp
in
rcrl
adc
adc
add
jmp
clc
xchg
adc
xor
mov
add
es
mov
and
push
cmpsl
dec
push
inc
xor
adc
cld
push
dec
jmp
leave
pop
adc
pop
fisubrs
sbb
test
arpl
sbb
hlt
gs
fwait
mov
jp
push
stos
or
sahf
insl
idivb
and
and
jno
cs
inc
out
mov
push
xchg
in
scas
cmpsl
cmpsl
lea
mov
push
popa
roll
int3
enter
movsl
push
stos
push
fldcw
pop
mov
insl
test
sbb
or
in
bound
sub
pop
mov
mov
or
and
orb
or
xorl
mov
dec
mov
xor
pop
out
and
pushf
aas
mov
int3
fiadds
push
pop
push
adc
xchg
fwait
imul
push
dec
orb
pop
adc
hlt
mov
jmp
dec
and
jbe
add
fs
hlt
mov
dec
scas
push
scas
push
sub
sti
mov
jno
dec
lock
push
es
push
or
rorl
loopne
dec
or
mov
push
movsl
mov
mov
sub
pop
xchg
fsts
xchg
out
popa
inc
push
xchg
inc
loop
pop
inc
je
lods
cmp
jecxz
pop
ficompl
cmc
or
ffree
ljmp
pop
inc
sbb
icebp
jne
cld
into
pop
inc
stos
jno
ja
into
lods
push
and
pushf
mov
adc
outsb
aad
lods
and
cwtl
in
push
mov
mov
xor
stc
push
icebp
cmp
mov
stos
ljmp
aaa
jl
jmp
xchg
jo
sbb
mov
fists
mov
push
lret
lea
inc
dec
dec
adc
outsb
inc
jnp
xor
rol
dec
jl
xor
repz
push
pop
or
mov
adc
fstpl
mov
daa
ss
pop
dec
cmp
dec
fnstsw
inc
mov
incb
mov
adc
test
je
or
xchg
mov
adc
cmc
pop
lds
popf
xlat
xor
dec
mov
in
cmc
shlb
add
aam
pop
loope
repz
pop
insb
mov
cs
test
pop
mov
xor
dec
int
xchg
push
xchg
jno
pop
js
loopne
bound
je
fidivl
fists
sbbl
sub
cwtl
jns
in
push
out
notb
cmp
rdmsr
inc
cmc
mov
mov
inc
loope
push
and
push
jl
pop
pop
adc
ja
push
lcall
xor
int3
pop
add
inc
mov
push
push
cmpsb
cli
iret
shrl
and
sub
mov
shll
test
or
jae
test
test
ret
xchg
inc
mov
inc
dec
jge,pt
dec
push
in
int3
cmp
push
stos
push
mov
push
jb
and
mov
add
inc
lea
or
mov
push
sub
cmp
dec
mov
pop
ret
roll
test
stos
insb
aaa
cld
push
lods
pop
cmp
inc
pop
bound
roll
jo
lret
and
mov
mov
dec
daa
jp
pusha
inc
mov
lahf
adc
adc
dec
outsb
jl
nop
mov
lods
pop
cmp
mov
push
adc
inc
fwait
cmp
shll
int
outsb
lret
and
mov
mov
out
xchg
adc
inc
and
cmp
addb
jb
test
sub
inc
adcb
rorl
push
or
orb
cs
rclb
out
loope
xchg
sub
mov
mov
pop
adc
inc
dec
sbb
sbb
push
btc
push
lods
adc
push
sub
mov
xor
push
xor
sub
bnd
lret
adc
cmpsl
dec
jbe
pop
or
push
cmp
sbb
pusha
adc
shll
in
stos
push
loop
fldl
je
cmp
mov
jecxz
adc
jns
fisubs
cmpsl
lahf
arpl
stos
inc
inc
jno
js
push
push
shlb
inc
aas
cmp
rcrl
jb
inc
fistps
xlat
sbb
bound
popa
shl
movsl
popa
dec
outsb
inc
mov
mov
in
push
aam
cmp
mov
std
addr16
out
cli
test
sahf
std
cld
sub
cmpsl
mov
filds
in
mov
add
lcall
dec
aaa
movl
ds
pop
inc
ficoms
mov
imulb
push
mov
call
mov
mov
mov
mov
ja
jo
pop
jmp
jne
dec
test
push
jg
mov
inc
loop
xchg
jno
mov
mov
cmp
wbinvd
popf
pushf
hlt
adc
mov
fdivp
mov
push
bound
hlt
jecxz
fcoml
sbb
mov
movsl
adc
jg
das
jecxz
cmp
mov
clc
xchg
xchg
adc
fists
and
sub
aas
jns
pop
mov
cmp
jge
es
mov
adc
mov
ss
xchg
cmp
fists
sub
pop
push
into
push
cld
hlt
loopne
mov
bound
add
xor
pop
push
adc
in
andb
pop
adc
sbb
mov
fs
rep
aas
cmp
pop
sti
shrl
dec
dec
clc
mov
gs
insb
sub
call
mov
adc
daa
aas
je
loopne
scas
jb
cmpb
lcall
pop
fneni(8087
jecxz
inc
xor
stos
jp
adc
fcmovnbe
in
mov
and
jns
cld
rclb
sbbb
sahf
fs
inc
insl
sub
cltd
iret
sar
jge
xor
dec
ret
lods
mov
shll
imul
testl
push
inc
sahf
pushf
fwait
xchg
test
adc
hlt
dec
int3
jecxz
aas
inc
loop
pop
mov
iret
mov
sub
xor
cld
sbb
fldl
cmp
fldenv
or
pop
stc
xor
ret
adc
lods
mov
test
or
adc
aaa
xorl
push
lret
lcall
inc
push
sub
adc
lahf
ds
ds
pop
mov
bound
jle
pop
ret
or
adc
repnz
xchg
mov
jnp
jno
orl
lret
cltd
sbb
test
pop
stos
push
fsub
inc
mov
jae
sub
xor
jae
cmc
data16
add
pop
insl
or
ss
sub
inc
rcrl
cmp
jmp
mov
xorb
mov
outsb
movsb
ret
and
mov
and
sub
lock
mov
ss
movsl
arpl
adc
movsl
cmp
xchg
out
mov
shrl
mov
in
pop
lds
adc
sbb
mov
adc
out
int3
popa
imul
pop
lds
mov
repnz
push
fsubr
mov
out
fdivrl
cmc
sbb
clc
dec
push
xor
inc
mov
lods
pop
lret
jg
sbb
mov
mov
sahf
mov
cli
mov
xchg
lds
fwait
ret
push
pop
cmp
and
adc
mov
iret
mov
fiadds
fcoms
add
adc
mov
mov
roll
int
imul
mov
mov
jnp
sbb
push
jnp
inc
fidivl
sub
pop
sbb
inc
imull
sub
rcrb
jae
pop
and
push
into
pop
cmp
xor
fcoml
into
push
stos
push
loop
mov
xor
popa
dec
js
mov
pop
xor
mov
and
pop
lock
addr16
mov
pop
ja
int
xlat
aad
fcoml
nop
dec
test
add
sti
cmp
mov
in
sbb
xor
loope
xchg
fcoms
jl
pop
scas
lock
mov
xchg
adc
mov
jg
shrl
sbb
stc
pop
data16
outsl
cmp
out
sub
adc
xchg
test
inc
std
out
push
adc
in
pop
xchg
insb
ret
mov
js
xchg
fnstcw
dec
shr
push
adc
cmpsb
push
push
adc
lds
call
inc
dec
ret
xchg
outsl
dec
mov
push
xlat
adc
loop
stc
stc
and
cld
mov
dec
hlt
cmp
aam
enter
pop
sub
sub
addr16
movsb
dec
iret
mov
jge
mov
addr16
mov
mov
pop
jecxz
inc
jmp
cmpsb
push
sub
pop
rcll
sbb
mov
lea
stos
das
sbb
sbb
imul
in
lods
testb
js
mov
pop
cwtl
in
adc
rorl
mov
inc
jbe
aas
sbb
mov
aas
aaa
lods
stc
pop
xchg
orb
and
insl
push
inc
jne
xor
push
mov
or
jmp
sbb
cwtl
and
inc
mov
aad
lods
xchg
daa
pop
jmp
or
push
mov
mov
lds
fldpi
mov
mov
mov
mov
dec
stc
popf
bound
adc
lcall
and
mov
out
mov
mov
push
xor
jmp
adc
add
mov
ss
mov
jl
jecxz
rorl
or
cmp
lock
jne
push
mov
cli
loopne
cmpsb
cli
into
mov
push
cwtl
xchg
inc
inc
shrb
xchg
or
and
mov
lods
es
fs
adc
aam
push
popa
or
xchg
data16
inc
imul
inc
gs
xchg
sub
mov
mull
mov
xor
adc
nop
popa
fsubl
test
stos
in
stos
pop
push
adc
cmp
xor
testb
adc
and
popa
push
xor
jecxz
addr16
movsb
jmp
lahf
out
push
les
sahf
inc
les
lods
pop
sbb
fwait
and
jae
movsl
lahf
push
jl
jp
shlb
xchg
sub
fildl
test
cmp
test
add
scas
data16
xchg
pop
in
inc
sbb
pop
ret
xchg
fists
and
test
sti
sbb
das
pop
mov
pop
in
inc
int3
fildll
test
movsb
sahf
sbb
adc
mov
dec
lea
xor
and
sahf
cmp
push
adc
call
jp
shlb
xchg
sub
sbb
mov
mov
fmull
pop
sti
jns
aad
inc
loopne
push
adc
and
rorl
cmp
inc
imul
jb
cs
sub
repnz
out
stos
add
cmpsl
push
mov
test
mov
int3
push
mov
pop
push
stos
adc
cli
mov
sub
jo
adc
sbb
push
dec
test
xor
jo
cmp
jo
adc
test
xor
mov
in
jo
adc
or
inc
pop
push
test
and
cs
mov
sub
lea
lcall
xchg
inc
push
and
out
cli
xor
fucomi
cmp
decl
cltd
sub
push
adc
mov
hlt
mov
clc
adc
test
adc
mov
mov
or
mov
xor
mov
in
jno
scas
idivl
fnsave
fbstp
test
adc
dec
and
inc
jle
add
jnp
enter
pop
aas
jno
dec
out
mov
aas
or
pushf
mov
mov
push
out
mov
mov
fnstcw
out
int3
xchg
adc
mov
or
int
je
insl
push
push
ficomps
sarl
lock
mov
movsl
ficomps
mov
aaa
in
adc
mov
push
enter
inc
mov
push
adc
andl
movsl
rol
mov
and
cli
sub
outsb
or
mov
xor
or
adc
jbe
cmp
sti
rcr
jmp
mov
jg
pushf
jae
adc
leave
dec
lahf
fmull
xchg
popa
mov
pop
adc
inc
push
push
std
jno
dec
or
cmp
mov
shrb
stos
pop
mov
pop
adc
jl
lret
dec
mov
pop
adc
scas
mov
pop
adc
fnstenv
and
test
pop
adc
fdivs
mov
fcomip
bsf
lds
adc
nop
lds
adc
mov
test
das
cmpsl
int
xor
jge
stc
push
adc
jmp
sub
outsb
xchg
or
push
mov
pop
adc
sub
mov
imul
leave
pop
outsb
mov
cmpsl
ljmp
adc
lock
dec
jl
nop
lds
adc
mov
xor
jle
sub
and
sarl
aas
mov
or
xchg
adc
adc
loope
xrelease
jae
adc
fsubrs
sbb
lcall
addb
mov
imul
sbb
jae
adc
testb
adc
popf
push
imul
xor
sub
iret
ds
pop
adc
ljmp
fldcw
jno
popa
insl
divb
or
mov
lods
insl
hlt
cmpsl
or
rclb
add
push
adc
imul
lods
or
int3
int
and
call
xchg
mov
pop
and
iret
cltd
popa
ret
fmull
pusha
sarl
cs
je
adc
dec
fadds
sti
cltd
popa
ret
nop
daa
inc
mull
rcrb
jge
hlt
gs
nop
jb
gs
rolb
iret
push
sahf
aas
jnp
mov
or
push
jl
hlt
push
in
jecxz
into
adcl
inc
adc
adc
loope
sub
out
cmpsb
mov
fisubs
iret
lea
xor
das
cmp
pop
pop
adc
jmp
roll
pop
adc
fildll
sbb
jno
popa
mov
cmpl
inc
cli
push
mov
loope
jo
adc
and
les
dec
lods
or
push
cmp
xor
pusha
clc
clc
mov
pop
mov
mov
pop
lods
adc
dec
ret
imul
jge,pt
loope
jo
adc
dec
mov
adc
push
adc
jo
xor
iret
ja
or
or
adc
push
push
push
push
movsl
dec
fwait
aam
aam
and
mov
mov
jne
push
fbld
nop
jno
cmpsl
test
out
inc
and
push
adc
mov
ror
faddl
adc
and
fsts
xorb
outsl
xor
jne
gs
or
out
mov
cmp
jge
mov
mov
push
add
inc
push
jb
faddl
adc
push
jne
add
add
push
adc
mov
xor
pop
rclb
enter
xchg
incl
je
adc
loopne
xor
mov
cmp
dec
or
sti
enter
adc
sahf
push
push
mov
jl
mov
mov
pop
icebp
test
sbb
icebp
mov
into
popf
fidivrs
inc
add
inc
sbb
std
imul
adc
jae
adc
sarb
in
setnp
sbb
nop
push
and
lea
mov
adc
sbb
bound
test
idivl
adc
pop
adc
sbb
insl
rclb
aam
push
adc
in
int
push
mov
cli
test
mov
lock
cmpsl
cmpsb
mov
jmp
dec
sub
jg
andl
mov
mov
or
jbe
pop
js
mov
push
ret
pop
popa
inc
mov
fstps
es
sbb
push
adc
cmp
push
xor
push
cmp
or
adc
cmc
imul
pop
add
cmpsl
add
mov
push
fnstenv
popa
ja
xchg
ret
mov
xchg
push
push
adc
push
cmp
into
jae
loop
lcall
push
lock
mov
mov
xorl
and
mov
and
incb
and
or
pop
pop
xor
ja
out
sub
add
push
or
lcall
jo
adc
inc
mov
or
bound
jl
lock
je
push
adc
aaa
push
push
mov
std
xchg
add
sbb
lods
cmpsl
icebp
xor
in
xchg
ja
pop
cmp
xor
inc
add
mov
sub
cmp
mov
test
jbe
dec
lods
or
test
dec
jp
dec
roll
xor
lret
adcl
push
mull
insl
sbb
shrl
push
adc
and
mov
dec
js
stos
add
mov
mov
pop
adc
pop
pop
aam
lret
out
cmp
pop
in
movb
pop
in
cmp
xlat
repz
pop
out
inc
lods
test
sbb
cmp
mov
out
jbe
xchg
mov
jae
adc
mov
adc
arpl
movsl
sbb
xor
jne
jno
pop
pop
mov
adc
cmp
cmpsl
dec
sahf
cli
fwait
cmp
inc
jb
iret
lahf
shrl
push
adc
mul
lret
cmc
or
daa
and
fistps
icebp
fdivrl
add
adc
xchg
sub
mov
lret
aaa
into
jae
outsl
mov
mov
and
xlat
pop
out
mov
push
add
push
hlt
daa
pop
stc
pop
adc
imul
sub
push
adc
mov
pop
stc
pop
adc
pop
sub
mov
jo
adc
pop
movsb
outsl
mov
xor
arpl
sbb
scas
push
pop
ret
push
sub
push
aad
cltd
adc
inc
shlb
xchg
cld
lcall
jo
mov
pop
stos
push
test
xchg
les
ja
pop
push
adc
andl
and
pop
adc
jge
add
std
xorb
cmc
bound
mov
shrb
mov
cld
xor
loope
popf
push
and
pop
mov
shrl
andl
jg
ljmp
ds
in
push
adc
lret
aam
fnstcw
dec
scas
push
sub
xor
dec
sub
or
adc
xchg
mov
insl
stos
pop
std
jne
call
and
push
mov
mov
testl
xchg
fsts
push
mov
push
rcrb
ss
jl
push
das
cwtl
jno
adc
shr
adc
or
xor
into
in
xchg
jecxz
int3
icebp
lahf
push
jmp
ljmp
jge
xchg
mov
enter
mov
dec
mov
xlat
neg
sub
mov
xchg
lcall
fistpll
pop
inc
xor
xchg
pop
mov
xchg
push
xchg
xor
xor
arpl
fcomps
push
xchg
lcall
push
cmp
jb
cmp
adc
aaa
fcompl
imul
xor
dec
mov
cmp
incl
xchg
pop
push
out
xchg
xchg
movsl
in
jl
push
adc
mov
and
push
sti
in
idivb
push
mov
push
adc
outsb
xchg
xor
lods
dec
popf
xlat
mov
std
mov
xchg
sub
xor
jno,pn
cmpsb
bound
dec
sahf
sbb
ret
and
jl
push
movsl
ret
xor
subl
mov
hlt
push
adc
imul
push
adc
notl
int3
mov
out
pop
lods
adc
mov
inc
arpl
loop
add
push
adc
inc
inc
inc
loope
mov
inc
jge
push
push
mov
push
cmpsb
jnp
and
push
adc
or
ret
inc
dec
mov
int
mov
jmp
popf
sub
clc
aas
pop
scas
add
sbb
and
into
mov
fs
adc
cmp
repnz
mov
mov
jmp
ds
jns
das
pop
mov
mov
pop
ret
push
adc
shr
xchg
adc
inc
clc
mov
stos
sbb
fistl
and
mov
lahf
mov
xor
jae
pusha
roll
mov
test
pop
stos
push
shlb
cmpsl
pusha
mov
stos
and
mov
push
ficoms
cmpsb
test
cmp
dec
sahf
cmp
mov
mov
jo
adc
ljmp
push
test
movl
sub
jo
adc
jne
fldl
stos
push
xchg
xchg
lock
xlat
fs
mov
push
add
addb
push
fidivrs
cmp
leave
push
stos
push
add
mov
movsl
orl
shlb
adc
cmp
ja
lret
xor
mov
push
je
or
mov
daa
mov
cmc
pop
cmp
stos
push
repz
les
adc
in
mov
mov
cli
hlt
fldt
in
out
mov
out
outsl
push
lods
adc
cld
or
push
dec
lock
jmp
incb
sahf
sbb
inc
aam
pop
pop
adc
xor
jl
push
adc
stos
sbb
loop
or
jae
push
pop
mov
daa
adc
fldln2
arpl
pop
push
inc
mov
test
mov
add
xor
push
dec
jg
scas
fsts
gs
lcall
push
adc
dec
mov
push
mov
lret
jns
js
aad
cmp
popf
pop
jns
movsb
push
adc
mov
sub
in
adc
cmp
scas
sub
clc
lret
mov
cmp
psubw
jo
adc
inc
sbbb
fstl
push
ja
jecxz
clc
mov
stos
jnp
data16
adc
adc
inc
xor
and
shl
in
into
cli
mov
pop
sbb
cmc
hlt
ja
lcall
mov
fcmovnu
shlb
sar
jo
adc
cmpl
stos
inc
hlt
jo
adc
mov
push
das
lock
adc
xchg
or
stos
into
stos
into
sbb
mov
fmuls
adc
xchg
das
int
aam
stc
and
rcrb
mov
out
xchg
js
es
and
bound
adc
cmp
in
mov
jmp
cmp
xor
decl
push
adc
sub
pop
adc
divb
and
test
sti
lea
movsl
pop
movsb
arpl
inc
in
pop
push
lahf
data16
stc
fdivrs
push
and
arpl
sbb
push
adc
push
in
in
bound
pop
jno
es
orb
scas
mov
jae
addl
xchg
cld
push
sub
push
mov
push
fs
les
std
ss
out
imul
and
test
xchg
mov
mov
push
fsubrl
shrl
mov
mov
sub
xchg
inc
aas
add
inc
dec
add
lods
out
gs
loop
pop
jbe
dec
iret
mov
or
push
adc
mov
xor
push
dec
aad
mov
in
repnz
loop
stos
and
adc
pop
popf
mov
into
jl
mov
mov
stc
ja
dec
aas
sbbb
adc
sub
iret
add
outsb
inc
jns
and
adc
inc
pop
imul
cmp
scas
push
lret
popa
add
inc
cs
fsubr
push
adc
jo
pop
ljmp
mov
cs
dec
pop
mov
pop
testl
ds
addr16
or
dec
jle
test
fstl
fists
ljmp
mov
pop
pusha
sar
loopne
pop
out
fstl
or
sub
push
inc
push
mov
enter
mov
jbe
bound
aam
sbb
mov
jne
sub
out
push
hlt
cmpsl
stc
lds
out
lds
sub
sbb
pop
jp
aam
and
pushf
push
inc
jne
loope
je
adc
fiaddl
pop
lahf
xorb
lods
jno
popf
cmp
negl
pusha
call
and
inc
rcll
fsubl
ror
and
cmp
mov
and
push
adc
sbb
inc
lea
mov
and
mov
idivl
lahf
ds
ja
cmp
cmp
cmp
stos
push
test
mov
inc
mov
cwtl
pop
or
add
adc
pop
or
and
and
or
xorl
jge
mov
jbe
mov
clc
add
ret
sahf
cmp
cmp
jnp
shll
sub
push
push
fcoml
out
pop
adc
adcb
or
lods
xchg
jb
ja
adc
pop
mov
cwtl
pop
or
and
push
pop
loope
adc
dec
fs
pop
nop
sub
sbb
out
pop
cli
adc
mov
cmc
in
fidivrs
dec
jae
mov
sbbl
pop
or
addb
push
jl
sbb
inc
mov
fadds
cmp
iret
les
lods
mov
mov
pop
push
adc
hlt
push
lock
stos
out
and
pop
adc
in
loopne
lret
shl
push
ret
sub
rcrl
loop
adcl
inc
mov
push
dec
adc
xchg
int3
cld
cltd
imul
cmp
push
or
cwtl
pop
or
cld
jne
sbb
and
adc
rclb
insb
sbb
cld
xchg
push
adc
mov
push
pop
popa
xchg
mov
mov
es
mov
pop
jp
inc
mov
ja
sbb
ror
test
movsb
int3
xchg
fidivl
jmp
hlt
or
jne
insl
lahf
aas
xchg
mov
cld
test
adcl
xchg
sub
xchg
popa
dec
mov
fmuls
cmp
push
aas
sahf
pushf
fnsave
out
pop
shl
mov
cmp
lds
in
mov
sub
or
clc
adc
fcomps
jae
adc
data16
push
sub
scas
jge
gs
cmp
les
fstps
or
jb
addr16
aaa
stos
and
testl
pop
push
test
adc
pop
jl
jae
adc
jne
cmp
test
jmp
inc
or
cmpl
js
pop
adc
pop
adc
cmpsb
out
xchg
adc
mov
pop
clc
mov
int3
sub
adc
sti
outsl
push
test
movsb
test
jno
leave
adc
sub
pop
test
mov
shr
addb
sbb
fwait
stc
cmp
iret
je
test
or
and
xchg
lods
push
ljmp
imulb
jbe
xchg
rcpps
ljmp
in
xor
cmp
adc
int3
push
lods
pop
pop
pop
mov
mov
shrl
scas
push
das
push
push
stos
push
add
bound
and
pop
les
daa
push
adc
cli
pop
fidivrs
gs
mov
incb
adc
and
fdivrl
mov
pop
outsl
iret
sub
enter
mov
dec
xor
roll
inc
ret
lcall
pop
or
sub
fldenv
fs
test
fs
or
jno
sbb
sub
sbb
inc
dec
loopne
cmpsl
adc
data16
push
lcall
jge
jne
jne
inc
lea
push
and
mov
fmull
popa
imul
cltd
cmp
cmpb
jnp
pop
mov
pop
adc
dec
lret
push
and
pop
mov
stc
ja
sarl
clc
xchg
or
cs
sbb
push
lahf
lock
adc
and
popa
ret
sti
hlt
flds
adc
or
cli
insl
pop
dec
and
pop
les
adc
jo
pop
pushf
inc
pop
les
adc
xor
add
sti
addr16
inc
lea
addb
push
stos
movsl
shl
push
cmpsl
dec
adc
jmp
lock
pop
cs
push
gs
push
and
pop
adc
pop
xchg
jo
iret
sbb
cmp
mov
xor
test
adc
fisubrs
faddl
adc
xor
mov
pop
adc
gs
sbb
pop
sub
and
out
and
adc
pop
adc
sbb
cmp
fiadds
movb
movsl
sub
orb
fldl
outsb
aam
pop
adc
jecxz
std
dec
movb
fdivrs
pop
adc
popa
xchg
mov
sub
pop
jmp
lock
push
fstpt
aas
mov
push
fistl
push
mov
fwait
sub
jg
sarl
lods
or
dec
test
mov
sbb
aam
pop
outsl
insb
clc
daa
stos
push
aaa
in
pop
addr16
ljmp
into
jl
pop
xor
jbe
outsl
sbb
in
lods
cmp
in
divb
mov
enter
xchg
int
dec
jle
sahf
mov
inc
push
popf
mov
cmp
cld
and
lds
adc
jnp
mov
clc
lahf
mov
arpl
jmp
xchg
imul
imul
data16
mov
divb
orl
xchg
int
mov
imul
addb
lds
adc
mov
pop
adc
nop
lds
adc
jge
and
leave
pop
cld
sbb
sbb
lret
popf
pop
sub
repz
cmp
or
push
mov
dec
push
mov
mov
sbb
mov
push
in
xchg
out
gs
sub
aad
aas
jae
xchg
mov
rclb
push
fmuls
out
xchg
lahf
adc
sar
stc
add
sub
aam
cltd
mov
pop
xchg
ja
repnz
mov
mov
test
sbb
cld
mul
out
inc
jne
int
arpl
cmp
pop
adc
shrb
push
dec
inc
add
and
aam
mov
pop
iret
cwtl
pop
or
cmp
push
addr16
inc
mov
inc
stc
sub
les
pop
cld
jo
adc
add
adc
jno
adc
mov
and
movsl
and
jno
adc
push
adc
adc
inc
adc
jbe
push
fwait
cmp
mov
push
cbtw
pop
or
repnz
lods
add
adc
adc
movb
cmp
stos
push
in
add
or
sub
sti
lock
cmpsb
es
mov
mov
stos
and
sbb
aaa
xchg
stos
dec
ja
outsl
push
or
daa
push
ficoml
push
stos
push
test
cmp
lea
jne
or
xchg
mov
add
stos
and
and
data16
in
and
decl
jg
jno
shll
push
lods
addr16
xor
dec
popa
dec
jae
leave
fdivl
jecxz
push
pop
testb
mov
mov
imulb
inc
test
adc
cld
loop
lahf
sbb
mov
lea
push
add
fsubp
push
adc
and
mov
sub
es
out
mov
cs
cs
fisubs
sub
pop
mov
mov
jmp
shrl
push
adc
xchg
sbb
xorb
stos
dec
and
fsts
xchg
mov
mov
inc
add
pop
or
rcrl
pop
pxor
pxor
cld
cmpb
push
adc
and
push
adc
xchg
aam
iret
mov
fwait
aam
mov
or
mov
sbb
out
frstor
cwtl
and
lock
stos
ret
xor
mov
mov
push
stos
sub
dec
div
flds
adc
sbb
stos
mov
dec
sbb
fs
ret
stos
push
stos
sti
cmp
sbb
or
lahf
leave
pop
jno
pop
or
pop
in
dec
push
arpl
pop
or
mov
and
pop
or
sub
cld
jo
adc
jns
push
scas
xchg
lock
or
lret
jno
adc
adc
or
cmp
test
rorb
push
insb
mov
das
inc
mov
or
jae
jmp
call
hlt
lock
or
fisubrl
mov
cli
mov
sbb
jno
test
mov
or
or
arpl
notl
idivl
sub
lock
in
mov
push
imul
adc
iret
sbb
movsb
add
cmc
or
cld
cmpsl
pop
cltd
bnd
cmp
ret
rorl
xlat
scas
xlat
fs
pop
push
jb
out
pop
push
lock
addr16
icebp
mov
cmp
nop
push
sub
and
mov
mov
adcl
test
lahf
lret
sub
push
imul
pop
lahf
hlt
arpl
fwait
loop
lcall
xor
out
sbb
mov
push
es
jle
push
icebp
sub
push
sub
nop
mov
mov
or
adc
push
jb
inc
dec
insl
ss
push
fisttps
pop
cs
jecxz
jb
daa
push
shrb
sbbb
rorb
push
xchg
and
popa
sub
cmp
mov
test
xchg
mov
movsb
leave
fidivs
out
add
xchg
jp
stos
pop
cmp
es
or
jnp
out
data16
out
imul
popl
rol
jbe
inc
jg
sbb
push
dec
mov
addb
outsb
xchg
in
imul
div
js
insl
out
pop
ss
les
ja
mov
inc
mov
push
negb
call
mov
ss
or
adc
mov
fisubl
cli
adc
popf
es
jmp
xor
inc
pop
ret
adc
xchg
outsl
or
sub
fdivs
push
and
hlt
les
jl
inc
and
or
leave
mov
bnd
movsb
test
ljmp
push
lock
xor
sbb
dec
clc
sub
popa
loopne
or
ljmp
fldenv
pop
fiaddl
popa
ret
adc
popa
roll
dec
push
rcr
pop
sub
hlt
pmuludq
mov
xor
adc
or
sbb
fs
clc
les
mov
jnp
cmp
mov
lock
dec
inc
fcomi
or
add
pushf
dec
sbb
test
pop
lods
pop
push
adc
push
aam
mov
fwait
andb
pop
mov
adc
push
out
orl
mov
dec
mov
xor
fisubs
sbb
push
cmp
dec
fwait
jo
pusha
shl
add
mov
imul
movsl
and
aas
sub
adc
sti
jp
sbb
in
push
adc
imul
inc
popa
sub
fistl
out
mov
into
xchg
lock
sub
xlat
cli
fsub
movsb
inc
adc
popa
mov
pop
push
lret
inc
mov
inc
cltd
mov
or
push
cs
dec
add
push
adc
add
out
cmpsl
lret
and
outsb
leave
lods
in
adc
sahf
push
scas
dec
xor
xchg
out
fsubp
mov
push
xor
out
fnsave
loop
enter
rep
adc
inc
pop
adc
mov
aam
les
jmp
mov
scas
cld
aas
cmp
ljmp
jecxz
and
test
pop
movb
sbbb
adc
lock
pop
pusha
sbb
loop
add
cmp
gs
nop
roll
mov
push
adc
sbb
push
stc
stos
mov
ret
jnp
inc
imul
nop
roll
jo
je
push
adc
out
mov
and
out
xchg
jbe
outsl
sbbw
xchg
mov
in
js
into
cmpl
ds
mov
ss
call
push
cmp
sbb
cmp
nop
loop
xchg
mov
adc
sub
jmp
inc
fidivl
inc
dec
mov
pop
cmp
aad
sbb
jge
jnp
dec
fbstp
mov
jmp
xlat
and
and
cmp
lock
adc
in
fdivrs
jp
aaa
sti
pop
mov
std
cmp
cld
sbb
cmp
inc
jb
and
inc
jl
rcrl
mov
jp
adc
lret
xor
mov
stos
and
enter
adc
mov
xlat
mov
and
mov
test
jno
inc
shrl
mov
push
mov
out
jecxz
data16
add
push
xchg
insl
push
sbb
jae
adc
arpl
push
incb
test
addr16
lock
adc
sbb
jle
lods
inc
cmp
aaa
sub
fsubrs
sub
adc
mov
movb
inc
xor
push
adc
xor
mov
mov
cltd
inc
mov
jo
mov
cmp
pop
cmp
push
adc
adc
stos
test
lock
adc
int
cmp
mov
or
outsl
out
nop
push
ja
adc
insb
out
xor
mov
out
push
adc
inc
and
dec
cmc
jne
push
stc
lods
mov
out
inc
cmp
lods
out
push
adc
dec
xchg
xchg
jecxz
js
pop
sub
mov
stos
lahf
xchg
repz
in
adcl
inc
pop
out
push
adc
loop
into
aad
leave
out
faddl
push
loope
ds
js
sbb
out
push
adc
dec
loope
cmp
xor
inc
lahf
ja
inc
cli
hlt
imul
sub
push
adc
mov
fs
mov
clc
jb
adc
gs
aaa
push
fsubp
and
jb
adc
adc
cmp
inc
data16
push
adc
mov
mov
jb
adc
out
int3
and
pop
popa
lods
xchg
imul
fdivl
ss
out
subb
fucom
movsb
xchg
aad
push
and
xor
scas
pop
popa
insb
jae
loopne
fdivr
out
fidivrl
push
mov
xchg
sub
fimuls
popa
sahf
cmp
test
dec
pop
xchg
push
cli
hlt
and
mov
xor
inc
mov
les
inc
negl
xor
sub
xor
ljmp
aas
dec
aaa
insl
nop
popf
arpl
dec
pop
mov
incb
repnz
ja
stos
fisubrs
cli
mov
imul
fdivrl
dec
pop
bnd
pop
mov
out
cmpsb
nop
push
aad
pushf
dec
jmp
dec
aaa
gs
sub
popf
aad
jno
adc
xor
and
dec
jno
ret
test
xor
inc
fnstcw
cmp
add
push
stos
push
xlat
insl
pop
sub
shll
stos
clc
mov
insl
stos
jg
cmp
mov
lds
push
repz
fs
lahf
mov
jae
test
lods
aas
jl
bound
daa
lock
fbld
pop
pushf
aas
mov
movsl
push
idivl
mov
out
mov
xchg
mov
push
test
mov
fdivrl
adc
mov
loopne
outsb
ds
pop
cs
aad
cmpsl
lret
and
inc
mov
into
outsl
add
xlat
out
push
movsl
xchg
push
mov
jl
sub
stos
ljmp
nop
cli
dec
mov
testl
inc
aas
test
pop
test
mov
xor
jl
sub
shll
addr16
js
je
pushf
mov
sbb
pop
mov
clc
xor
movl
fwait
add
pop
cmpsl
xor
sahf
and
xor
jae
xor
clc
hlt
fs
fnsave
lods
stos
subl
jg
mov
push
xchg
mov
aam
pop
inc
add
inc
sahf
mov
outsl
jo
sbb
xor
push
and
mov
xchg
movsl
mov
enter
jmp
repnz
fwait
and
fwait
rolb
or
mov
jp
imul
out
lods
xchg
ss
mov
sub
sbb
push
dec
scas
jmp
add
jns
loopne
pop
enter
sbb
xor
gs
add
mov
stos
dec
out
js
pop
pop
repnz
push
pop
cld
sub
dec
xor
aaa
push
mov
mov
std
xor
repz
cmpsb
mov
shrb
out
inc
mov
xchg
js
jbe
aaa
es
aaa
mov
jecxz
int
cmpsb
xchg
jno
push
fwait
stos
sbb
lcall
pusha
sahf
cmc
dec
mov
scas
mov
int3
mov
movb
xchg
add
mov
push
fcomps
adc
movl
out
test
jge
xor
pusha
stc
mov
shll
roll
rorb
pusha
cli
lahf
out
push
ret
loope
repz
inc
mov
jmp
jbe
sub
cs
or
call
mov
jnp
test
shll
shlb
mov
xchg
in
xchg
mov
shrd
mov
nop
and
divb
sbb
es
mov
push
insl
push
std
add
test
dec
sahf
mov
jb
xchg
pusha
rorl
mov
clc
test
sti
push
cld
pop
sub
adc
sub
cmp
pop
out
outsl
ret
xchg
mov
movsb
jmp
test
mov
ja
mov
mov
cmp
testb
movsb
sbbb
testb
jecxz
dec
pop
je
lret
pop
mov
push
les
mov
sbb
sbb
sub
fisubs
mov
jbe
mov
adc
sub
xchg
pop
cmp
jg
pop
movsl
adc
vcvtps2dq
mov
mov
adc
pusha
popa
idivb
sub
bound
and
int3
jo
inc
cmp
iret
jecxz
imul
iret
movsb
mov
xchg
sub
and
mov
int3
xor
xchg
rorl
xchg
lret
cmc
or
test
dec
pop
sti
gs
pusha
mov
fstpl
adc
push
stos
push
or
aas
shr
push
mov
mov
stos
sbb
das
pop
mov
shrl
pop
and
jmp
js
loope
jbe
and
cmc
mov
hlt
int3
inc
repz
sub
xchg
scas
push
repz
insl
mov
icebp
mov
inc
fstpt
idivb
inc
mov
xor
sti
fdivl
mov
sub
test
xchg
lahf
arpl
add
sbb
dec
in
mov
fistl
xor
push
clc
mov
mov
push
push
repnz
push
adc
sahf
push
frstor
lret
or
mov
rclb
cmc
push
push
add
addb
adc
cmp
das
shlb
fmul
test
fs
lods
cmp
xor
push
adc
xchg
mov
int3
stos
fs
add
cmp
jl
bound
pop
notl
jmp
scas
jmp
pop
mov
imul
inc
movsb
xor
add
test
push
sub
shrb
mov
sub
aaa
jl
jmp
popf
into
mov
into
push
mov
mov
mov
sub
test
sbb
popf
sub
sbb
int3
or
mov
cmpsb
inc
adc
jmp
jmp
mov
mov
test
mov
add
insl
push
ja
xor
incl
ja
or
pop
cmp
push
mov
mov
mov
lds
sahf
hlt
mov
inc
push
addr16
test
xchg
and
adc
ja
test
ret
pop
push
stc
leave
pop
push
jb
jecxz
cmp
ljmp
imul
push
and
jnp
aam
loope
mov
test
jg
sub
mov
sahf
in
imul
mov
movsl
jb
mov
push
pop
push
adc
sub
inc
sarb
pop
jmp
lret
popa
popa
icebp
push
adc
push
mov
cmp
adc
jle
cmc
test
add
add
pop
aas
xor
aas
out
test
sub
adc
js
inc
and
bound
mov
xchg
clc
jo
cmpsl
fistpll
js
test
push
pop
push
adc
imul
xchg
call
or
fs
test
and
pop
cmp
jns
adc
cmpsl
ret
das
push
rol
mov
mov
das
mov
je
lds
adc
enter
nop
sbb
push
adc
js
addr16
mov
stos
cmp
mov
cli
hlt
call
sbb
push
and
cmp
mov
int3
xor
out
inc
fnstcw
xchg
pop
or
sub
andb
stc
fcomip
inc
icebp
sbb
push
dec
pop
mov
mov
gs
stos
push
add
cmp
sub
cmp
add
xor
adc
movsb
cld
gs
stos
push
fdivp
and
or
test
cmp
arpl
ja
addl
loope
and
mov
loop
and
pop
ss
jae
pop
cs
xchg
je
push
push
test
pop
sub
testb
scas
fcoms
fs
ds
and
out
dec
les
sbb
cmpsl
xchg
roll
cld
pop
arpl
dec
pop
fisttpl
xchg
pop
in
cmp
rorl
int
ljmp
mov
rorl
loopne
gs
mov
imul
mov
clc
and
jg
lock
and
enter
gs
push
and
cmp
dec
lds
dec
pop
xor
cmp
aad
sbb
test
stos
in
sub
adc
scas
cmp
and
adc
and
adc
xor
gs
push
and
daa
scas
int
sarb
xor
sbb
or
or
xchg
sub
sbb
insl
xadd
xchg
aas
jns
in
pop
jns
in
sbb
addb
sub
adc
sbb
stc
add
mov
leave
xchg
pop
enter
xchg
ret
sbb
jnp
cmp
mov
movsb
movsb
scas
fistpl
xchg
inc
out
lret
stos
and
mov
jne
cld
loopne
imul
jns
xlat
lds
mov
test
and
das
out
outsl
or
sub
shll
mov
xor
adc
jno
fsubr
mov
xchg
test
sarl
add
push
aaa
lods
dec
push
push
ds
fs
dec
pop
push
adc
sub
pop
test
inc
mov
mov
add
pop
xchg
cli
ljmp
lahf
inc
icebp
fistpll
mov
jecxz
daa
cs
inc
fiaddl
jge
arpl
cmp
dec
std
lds
cmp
cmc
repnz
sub
sub
pop
lret
sub
jmp
hlt
inc
push
pop
push
adc
adc
test
shlb
adc
movsl
dec
rcrb
push
roll
dec
mov
orb
nop
mov
scas
xlat
inc
xchg
loopne
cmpxchg
jl
test
fisubrl
ret
xor
nop
fldt
xchg
xlat
in
movsb
cmc
mov
shlb
daa
fsubs
push
jle
mov
push
adc
pop
jne
inc
pop
mov
cmp
adc
popf
fwait
in
loop
cmc
jb,pt
shll
cs
push
negb
rcr
out
leave
jns
mov
movsb
fld
ret
add
cld
ljmp
out
stos
push
repz
push
fdivrl
adc
cmp
mov
movsl
and
and
movsb
mov
ret
data16
cli
push
pop
dec
lret
xor
mov
movsb
neg
dec
fimull
outsl
mov
xchg
divb
pop
xor
dec
jl
cmpsl
fadds
std
push
in
sub
and
push
adc
and
mov
add
xorl
pop
fldenv
dec
into
mov
fildl
push
mov
inc
lahf
mov
push
jg
ljmp
mov
dec
push
and
mov
sbb
lods
inc
mov
cmpsl
adc
push
adc
cmp
push
xchg
sub
fstpl
and
dec
cmpsl
lret
les
adc
rclb
sub
cmpl
pop
sub
cmpsl
dec
sahf
jnp
jle
xor
mov
inc
cltd
outsb
xchg
mov
shll
xchg
outsl
xor
xchg
jp
push
out
adc
push
mov
or
ljmp
adc
lods
stos
push
sub
adcl
push
adc
fwait
sbb
mov
scas
lret
std
or
jecxz
stos
push
das
xchg
fnsave
les
pop
lahf
jae
orb
adc
mov
xchg
jo
mov
dec
aam
push
adc
int3
sti
int
les
shrb
adc
pushf
jecxz
scas
xchg
outsb
adc
popf
fbld
sub
shll
mov
test
xor
xchg
dec
mov
sahf
inc
inc
sub
inc
push
roll
jo
cs
fwait
call
adc
cmp
aas
imul
xlat
mov
pop
and
pop
sbb
mov
rcrb
jge
hlt
imul
dec
or
xor
mov
mov
loope
imul
mov
sbb
adc
inc
out
outsl
cs
aam
fldenv
mov
dec
push
cli
arpl
movsb
xor
data16
call
imul
sub
scas
and
inc
ror
cmp
or
mov
decl
arpl
sub
sub
mov
jbe
fcom
add
stos
push
inc
ja
and
out
jmp
cld
xor
scas
int3
and
lahf
enter
int
dec
jo
mov
mov
jp
push
or
cmp
loope
jecxz
mov
aam
mov
testb
out
pop
jecxz
jp
pop
loope
cmpsb
sub
mov
jge
xchg
insb
jb
jo
xchg
popa
adc
call
pop
mov
les
add
lock
mov
ret
inc
mov
mov
push
sub
push
mov
cwtl
mov
push
adc
sub
sub
nop
loop
xor
jae
adc
fmul
cmc
les
mov
cmp
xchg
mov
push
sub
jmp
scas
in
cltd
pop
push
adc
mov
imul
or
fnstsw
mov
outsl
mov
add
mov
add
add
lret
mov
movsl
pop
sar
mov
out
out
shlb
xor
dec
sbb
bound
rorl
movl
or
mov
fdivrl
stos
cmp
mov
fs
aad
pop
push
adc
and
ret
xor
mov
dec
scas
adc
xchg
int3
insl
scas
pop
inc
and
jle
add
aaa
cmp
outsb
add
pop
jl
aam
mov
in
or
push
adc
mov
fwait
cmp
aad
out
cmc
mov
mov
cmp
pushf
xchg
mov
mov
mov
aaa
daa
addr16
mov
jno
mov
pop
fdivs
xchg
dec
mov
xchg
ret
ret
xlat
pop
clc
lock
adc
out
cmp
push
pop
adc
in
jmp
lock
adc
insb
sarl
mov
pop
mov
scas
test
fmuls
std
add
sub
mov
ss
jo
mov
cmp
gs
mov
push
ret
mov
push
adc
outsl
out
push
or
loop
jne
pop
jbe
aam
stos
mov
lret
incb
fdivrl
pop
mov
imul
xor
das
mov
jle
rcr
mov
dec
imul
js
cmpb
adc
pop
pop
out
ret
out
push
ficomps
mov
inc
xor
aaa
gs
xor
xchg
xchg
cmc
call
sbb
out
subl
xor
ljmp
nop
mov
push
pop
pusha
stc
adc
out
pop
mov
dec
arpl
lcall
push
pushf
ja
aad
xor
and
aas
jmp
testb
mov
push
adc
pop
inc
lea
push
push
movsb
stos
and
cmp
sbb
je
fcmovbe
push
std
test
cmp
cltd
or
mov
adc
sahf
cmp
mov
inc
jns
xor
jne
jge
sub
mov
xor
mov
adc
mov
adc
and
aas
jmp
testb
mov
push
adc
xchg
and
int3
insb
in
push
faddl
xor
test
push
adc
mov
adc
fisubs
mov
xlat
push
ror
push
push
out
je
push
adc
into
xchg
testb
sub
xchg
push
adc
sbb
pop
mov
ret
xchg
frstor
dec
sahf
cmp
sub
mov
add
push
mov
sub
movsb
sub
rclb
ja
adc
test
jne
lea
or
add
push
adc
adc
or
add
push
adc
pop
xor
sub
leave
cld
out
mov
and
in
stos
inc
lods
fs
xchg
and
add
movsl
sbb
push
ret
enter
and
inc
cmp
jle
pop
repnz
and
add
in
shll
dec
push
push
js
and
sub
stos
adc
and
loop
pop
sbb
icebp
sub
mov
mov
test
inc
mov
jne
sbb
mov
aam
cmp
push
ja
pop
jecxz
adc
or
jns
xchg
jecxz
jnp
fidivrl
lock
pop
dec
jne
cli
ds
jb
pop
dec
in
test
rorb
lret
in
jne
mov
or
je
cmc
jle
imulb
inc
icebp
push
adc
imul
adc
jge
movsl
sub
mov
fsts
cmp
mov
ljmp
aas
rclb
daa
sbb
or
cmpsb
sbb
jns
cwtl
mov
das
inc
dec
loop
lret
xchg
sub
sarl
clc
mov
xlat
ja
jne
push
in
cmp
push
xchg
fidivrl
hlt
cmp
push
adc
sub
fildl
jae
adc
dec
push
mov
dec
and
jae
add
fidivrs
mov
xlat
mov
les
jae
adc
cmc
imul
mov
js
and
mov
mov
xchg
xchg
mov
int
lea
sti
add
adc
push
pusha
pop
mov
jnp
loopne
inc
cmp
add
subl
cmp
bound
pop
stc
or
lds
iret
xorl
in
add
adc
and
incl
cltd
mov
pushf
push
outsl
jns
sahf
push
mov
out
stos
mov
mov
repz
aad
sub
mov
mov
jbe
mov
adc
mov
roll
jae
adc
cli
stos
clc
pop
clc
adc
hlt
mov
lahf
mov
leave
mov
jno
insl
adc
add
jg
push
mov
add
mov
packssdw
imul
adc
in
loope
push
fisubs
int3
jecxz
jnp
std
and
insb
add
addb
test
cmp
hlt
pushf
imul
jbe
pop
imul
pop
push
arpl
mov
adc
int
adc
push
and
icebp
add
jbe
les
mov
mov
stos
loopne
out
push
rcr
jae
push
stos
and
inc
lods
xchg
mov
aad
lods
out
fdivrl
mov
xor
cmp
mov
pop
stos
push
rol
mov
mov
xchg
gs
mov
outsb
xchg
flds
pop
sub
jge
js
sub
xchg
pop
mov
pop
js
imul
fdivrl
jns
int3
call
pop
fstpl
dec
and
mov
pop
jmp
and
xor
sahf
adc
stos
sbb
and
pop
pop
jmp
push
and
inc
adc
push
mov
out
lahf
idivl
pop
push
adc
push
dec
aad
add
pop
incl
mov
fwait
xor
or
pusha
mov
movsb
stos
int
adc
in
push
and
mov
cmpsb
mov
mov
xorb
mov
adc
mov
stos
punpcklwd
xchg
push
inc
sub
lea
fucomp
shrb
pop
divl
and
aaa
xchg
stos
adc
inc
sbb
inc
rcll
sub
dec
push
sub
iret
repnz
aad
mov
hlt
sbb
mov
mov
jecxz
fstpl
cli
cmp
xlat
push
cs
jge
je
fisubs
adc
dec
sbb
sub
push
add
adc
je
cld
mov
pushf
ret
lret
push
ret
dec
daa
aaa
mov
xor
xchg
sbb
sti
and
insl
mov
mov
or
xor
jno
test
mov
jno
jg
movsl
sub
mov
ja
movsl
dec
or
test
movsl
cli
in
in
ds
cmpsb
jno
xchg
fbld
pop
call
pop
scas
loopne
adc
aaa
cmpsl
jo
sbb
jns
lods
xchg
sti
scas
and
es
lods
roll
xchg
jno
xchg
movhps
test
mov
cmc
in
stc
sub
scas
data16
sbb
mov
jmp
jns
in
inc
mov
lret
fdivrl
adc
sub
push
jge
in
cmpsb
push
aas
call
stos
imul
inc
inc
clc
push
dec
cmp
pop
sti
leave
push
aas
cmp
mov
jge
jmp
sbb
pop
xchg
cli
stos
fdiv
lods
adc
nop
sbb
daa
mov
xor
nop
daa
mov
lcall
fists
jno
push
add
test
out
fnstenv
and
dec
testb
inc
jnp
xchg
gs
or
inc
dec
sub
pop
lret
int
pop
fcomps
lcall
ret
push
cmc
mov
jg
ljmp
xor
int3
xchg
cmc
cld
inc
stos
pop
outsb
pushf
push
mov
jns
rcr
add
mov
pusha
repz
mov
jno
mov
ds
inc
fwait
mov
aas
dec
fistpl
inc
sahf
lock
xlat
inc
cmc
fdivr
jnp
scas
pop
mov
out
cmp
cwtl
jo
mov
or
inc
inc
in
pop
in
jmp
cmp
push
mov
mov
adc
and
mov
dec
adc
repz
cmp
pop
mov
xor
mov
jno
in
sub
aam
inc
fmull
mov
sub
cmp
push
inc
mov
and
outsb
lock
scas
enter
pop
stos
outsb
insl
and
loop
pop
add
mov
pop
fstps
adc
sahf
leave
shll
cmp
movsb
and
repnz
push
imul
mov
out
xchg
icebp
sub
test
aam
and
cltd
fcmovu
jnp
inc
inc
jp
mov
sbb
ja
xchg
add
or
addb
push
cmpsl
jno,pn
inc
aas
jle
fdivs
or
jl
jg
pop
iret
sbbb
push
arpl
adc
insl
xor
imul
sti
int
dec
addr16
inc
fsub
add
xchg
loop
lcall
fwait
stc
xor
idiv
jno
movsl
movsl
int
dec
lret
and
lcall
sub
test
cmovne
add
test
push
insb
adc
shrb
les
adc
adc
rorl
jno
add
out
mov
stos
fucom
mov
test
mov
pusha
mov
or
lods
sub
lret
gs
sub
jb
call
mov
xorb
mov
sbb
aad
push
arpl
adc
dec
xlat
out
fdivrl
lahf
mov
leave
imul
sbb
inc
and
inc
sbb
js
out
push
sti
sub
into
insl
icebp
mov
pop
fs
lret
and
mov
sub
out
fidivrs
loopne
scas
jg
divps
xchg
jb
in
outsl
pop
sub
lods
push
mov
jp
rcr
mov
jg
cmp
mulb
hlt
into
mov
and
pop
and
dec
mov
jecxz
mov
mov
sub
xchg
inc
aam
push
sub
adc
cmpsb
arpl
sti
or
adc
pop
fstl
xor
mov
dec
pop
mov
mov
push
cmp
mov
inc
stc
rcrl
sbb
outsb
jne
add
sub
pop
mov
lret
xor
cwtl
mov
popf
push
mov
pusha
push
push
outsl
add
jl
rorl
fwait
mov
mov
add
mov
test
inc
pop
and
cwtl
cmp
icebp
push
adc
std
or
adc
push
adc
pop
adc
loop
and
fbld
sbb
ret
fs
or
jl
and
adc
loope
ds
jmp
shrl
in
scas
push
inc
gs
jg
andl
insl
loopne
cwtl
pop
or
adc
adc
mov
ret
aad
adc
pop
mov
and
inc
ret
int
loopne
sub
pop
lods
mov
sahf
in
mov
test
sbb
add
push
inc
subl
sbb
hlt
mov
fistl
lods
cmp
pandn
scas
popf
fidivrs
mov
mov
nop
pop
pop
xchg
scas
std
add
cmp
aam
push
adc
pusha
xor
shlb
shrl
xchg
ds
pop
addb
cmp
dec
cld
enter
pusha
stos
imull
and
xchg
rcl
fwait
cmc
or
ds
pop
add
dec
ret
ds
pcmpgtd
xchg
adc
push
imul
push
adc
imul
push
jbe
add
ret
js
sbb
outsl
jne
sbb
adc
xchg
mov
pcmpgtd
mov
aad
or
adc
pop
test
push
scas
je
jne
lret
gs
jge
neg
adc
or
add
push
ljmp
pop
jecxz
lahf
aad
leave
xor
pop
call
xchg
sub
push
cli
fldcw
or
add
fwait
aad
jno
sbbb
divb
sbbl
das
xchg
fstl
dec
jne
dec
aaa
gs
mov
mov
in
jge
jno
mov
xor
fstps
and
notb
add
add
mov
inc
lea
xor
stos
add
mov
mov
jns
repnz
cli
ret
cld
test
fucom
and
lods
das
xchg
fcoml
jne
lock
inc
and
stos
or
pop
out
push
adc
test
daa
mov
jmp
lock
dec
inc
mov
inc
fcmovb
div
movsb
pop
subb
push
adc
push
adc
clc
sbb
out
and
adc
test
jg
in
loope
repnz
je
dec
adc
xor
pop
push
jae
mov
gs
stos
scas
adc
lret
stos
fsubp
movsb
and
scas
pop
iret
aad
nop
out
fdivrl
mov
mov
int
outsl
in
out
mov
lods
pop
jg
jo
pop
pushl
inc
mov
mov
cs
pop
inc
gs
xchg
sub
sbb
push
cmp
inc
clc
shl
call
stos
aad
or
jle
pop
out
and
dec
fxam
inc
push
ja
jge
mov
aas
push
inc
fcmovnbe
cmc
mov
add
mov
mov
xchg
cmc
push
iret
fsubrs
cmp
fidivrl
mov
adc
adc
pop
iret
lret
adc
jae
and
or
popa
push
push
jp
xor
or
mov
inc
loope
cmp
push
push
xor
fcompl
sbb
push
loopne
std
lds
sbb
xchg
xchg
arpl
jae
xchg
ret
xor
inc
out
lcall
mov
jno
je
pop
mov
mov
ficomps
mov
mov
loopne
and
cltd
pop
and
adc
es
mov
jno
adc
jle
aad
jnp
ja
mov
push
adc
adc
xor
push
adc
mov
lock
dec
out
scas
adc
mov
xchg
leave
sub
add
pop
adc
pop
aaa
addr16
pop
rcr
adc
fadds
adc
cmc
or
adc
insl
int
jge
cwtl
outsb
rorb
lock
jnp
pop
movsl
dec
push
fadds
adc
adc
test
push
adc
shrl
mov
test
cs
xor
jo
pop
adc
pop
adc
pop
mov
in
xchg
insb
out
push
sub
enter
shl
adc
inc
cld
leave
iret
hlt
mov
je
arpl
shlb
jbe
out
and
mov
cld
jp
pop
outsl
inc
sbb
shll
add
adc
pop
sbb
es
xor
and
mov
out
jo
pop
adc
fildll
scas
push
insb
dec
push
adc
and
fs
arpl
inc
cmp
rcr
and
shlb
inc
add
push
pop
mov
fstl
int
jl
xchg
loopne
adcl
pop
mov
push
mov
mov
adc
iret
push
sub
pop
jne
push
scas
jmp
stos
lret
sub
mov
fistpll
or
or
out
pop
rcrb
pusha
or
test
adc
xchg
and
aas
test
jge
xor
pop
pop
iret
lock
repnz
sub
push
stos
inc
dec
pop
dec
sahf
cmp
push
inc
sbb
fcmovb
addb
push
outsl
aad
sub
pop
ret
push
daa
cmpsl
es
test
fstpl
or
xor
movsl
adc
inc
jb
je
push
adc
push
xchg
rcrb
mov
push
repz
lahf
mov
xorb
in
out
adc
stc
mov
dec
aaa
add
xor
jge
hlt
call
jle
xchg
sub
lods
mov
jae
adc
inc
jae
iret
lahf
inc
je
sbb
ret
push
fidivs
out
push
fistps
pop
test
ret
test
gs
xor
aaa
inc
ror
sbb
call
inc
outsb
loope
notl
dec
and
push
adc
shl
iret
lahf
ds
mov
jp
cld
add
sub
int
jae
fdivrl
jl
cli
ja
aad
inc
out
pop
push
stos
ficomps
incl
addb
lods
js
push
adc
lods
dec
xor
xchg
add
subb
push
popa
jmp
pop
pop
and
aam
adc
mov
inc
lea
xor
or
test
ret
jecxz
mov
mov
add
or
mov
stos
or
or
ret
jg
mov
iret
lahf
ds
mov
orb
adc
test
cmpsb
testb
adc
int
insl
mov
mov
pop
jo
pop
out
jae
lret
xchg
mov
lods
rorl
popa
rolb
addl
cli
iret
push
cmc
insb
xlat
and
mov
sbb
outsl
das
cltd
ljmp
push
adc
cltd
clc
hlt
stos
mov
fwait
xorb
fsubrs
movsl
out
mov
arpl
jg
adc
and
pop
es
dec
mov
cmp
jl
inc
mov
xor
outsb
neg
cs
add
jmp
jbe
or
dec
pop
sbb
cmp
mov
int3
mov
loopne
push
adc
into
push
in
stos
sub
mov
clc
xor
mov
lret
add
fsubs
fldenv
xor
icebp
push
adc
push
mov
add
dec
int3
sbb
pusha
add
adc
scas
push
mov
clc
mov
push
sti
jle
js
repnz
push
xchg
test
shrb
xchg
loopne
mov
call
xor
repz
push
adc
insl
out
sub
adc
inc
lods
mov
out
lods
ret
pop
jb
mov
mov
push
jns
fmull
and
sub
dec
xor
cmpsl
lock
adc
dec
fcompl
mov
sub
stos
cwtl
xor
pusha
scas
mov
adc
xor
repz
sub
xchg
jmp
mov
enter
lods
in
jne
jg
add
mov
mov
popa
fwait
into
and
pop
adc
push
add
or
test
add
adc
jmp
push
jg
mov
aaa
mov
pop
leave
call
pop
xor
sahf
dec
test
std
subl
dec
jo
push
adc
mov
pop
test
inc
cs
aaa
add
xchg
mul
js
or
xor
je
inc
mov
aaa
cli
mov
movsl
push
fstpl
sub
add
icebp
push
adc
pop
pop
inc
add
scas
and
xor
adc
and
jb
repz
sub
lods
pusha
nop
icebp
les
inc
negl
movsb
pusha
jno
aad
pop
cwtl
ret
jb
and
xchg
mov
fsubrs
je
int3
mov
pusha
jno
adc
fucom
and
jb
or
mov
mov
mov
sub
mov
xchg
outsb
lea
xor
add
adc
adc
lcall
jnp
movhps
mov
xor
pop
adc
mov
inc
jae
sub
add
push
adc
xor
mov
insl
sbb
inc
fsub
and
fnsave
and
adc
mov
cmp
mov
aad
xor
rclb
lods
lods
mov
jb
adc
ret
lret
lahf
rorl
cld
popf
xlat
sub
or
gs
jno
ds
sub
jnp
xor
sbb
hlt
pop
mov
jb
adc
stos
add
mov
test
stos
clc
mov
xchg
enter
loopne
call
fdivs
push
imul
jo
dec
pop
cmp
mov
cmp
mov
and
int3
fsub
dec
iret
push
pop
jge
xor
jecxz
sahf
rcrl
push
iret
ljmp
xchg
and
jg
mov
sbb
push
adc
pop
lea
insb
loope
hlt
xchg
scas
push
fcom
imul
inc
clc
xor
xor
mulb
mov
pop
push
inc
sub
mov
xorb
sti
jl
fdivr
sbb
xor
popf
scas
fildll
inc
pop
stc
jno
or
xor
outsl
jnp
cli
sbbl
fildll
inc
sti
jae
add
mov
dec
pop
negb
cld
orl
push
xor
adc
and
mov
rcr
jmp
aam
mov
mov
bound
cmpsb
and
cmp
lret
push
adc
ret
cmc
sbbl
and
jne
add
lods
fdivl
adc
aaa
aas
jns
jmp
repnz
adc
xchg
bound
push
adc
jbe
xor
insb
repnz
adc
cltd
popw
mov
jb
bnd
in
fstl
popf
insl
aam
lods
sub
adc
sti
dec
inc
repnz
adc
cli
pop
sbb
xor
and
stos
stos
mov
jb
push
and
inc
pop
push
xchg
mov
jae
xlat
cmp
mov
dec
adc
xchg
ret
pop
shlb
pop
push
mov
push
jne
clc
loopne
mov
scas
lds
xor
add
or
sub
scas
lods
movsb
loop
xor
lods
testb
add
or
ljmp
or
movsb
cmp
nop
xor
mov
push
sub
pop
adc
enter
mov
fisttps
pushf
xchg
hlt
mov
inc
hlt
xchg
insb
push
xchg
subb
movsl
pop
enter
jge
inc
test
xor
in
mov
sub
and
leave
cwtl
sti
mov
xchg
xchg
mov
adc
pop
loope
and
adc
testl
adc
int3
and
clc
test
ret
push
mov
mov
sbb
out
lret
mov
cs
aaa
xchg
mov
mov
inc
mov
push
adc
std
movsl
pop
add
jbe
jae
cmp
add
or
pop
sub
andb
xchg
lods
arpl
mov
cltd
pop
push
adc
mov
mov
int
mov
aad
xchg
test
sbb
vmovupd
xchg
addr16
out
das
mov
push
adc
inc
xchg
mov
fchs
cltd
repz
push
and
les
ljmp
push
cmpsl
mov
lcall
ds
xor
sbb
into
stos
push
lods
pop
xchg
pop
jp
mov
jge,pt
jg
fldenv
cmpsb
lcall
mov
cmp
mov
loopne
int3
xlat
cld
cli
hlt
call
aaa
pop
shl
push
adc
sbb
mov
repnz
adc
ret
mov
shl
xchg
mov
pop
cs
repnz
adc
add
pop
adc
loop
jne
adc
mov
jb
icebp
cmpsl
mov
movsl
popa
dec
push
mov
push
push
stos
push
test
repnz
adc
aad
sbb
ja
dec
add
gs
iret
mov
cwtl
and
imull
popa
cli
jg,pt
repnz
adc
ja
pusha
orl
cwtl
pop
xor
pop
test
pushl
push
cltd
pop
push
adc
push
jge,pn
movsl
mov
xchg
les
pop
mov
int3
sti
sarl
shr
test
repnz
adc
in
jne
in
daa
and
fisubrs
fisubrl
ds
mov
testb
pop
cs
mov
push
adc
insb
or
cmpsl
sbb
push
jg
pop
xor
sbb
lods
roll
pushf
fsubrs
mov
xor
inc
push
cltd
xchg
incb
adcl
sarb
test
mov
xlat
mov
jb
aam
and
mov
and
sub
ja,pt
addl
push
repz
add
mov
in
mov
sub
mov
popa
mov
aam
or
inc
pushf
aas
and
mov
mov
hlt
jae
cmpsb
mov
sarb
push
adc
cwtl
cs
xor
inc
fnstsw
cli
addl
loop
cld
add
out
pop
sub
mov
movsl
jmp
adc
push
sbb
stos
sbb
bound
pushf
les
fistpl
ljmp
or
xor
out
adc
and
into
adc
sbb
cli
xchg
mov
mov
fwait
dec
stos
inc
adc
or
mov
jg
jge
jns
sub
aam
add
and
mov
stos
dec
fwait
jb
sti
fildll
push
mov
mov
xorb
dec
adc
mov
jge
test
ss
negb
xchg
aad
movsl
pop
push
add
mov
mov
mov
xchg
out
xchg
repnz
adc
or
mov
stc
mov
adc
mov
lock
jmp
dec
shr
shlb
into
push
pop
mov
push
cmpb
push
shll
add
call
jns
dec
jbe
cmp
mov
inc
inc
xchg
cmp
cmpsb
push
lods
das
ret
ret
div
decl
jnp
mov
cmp
insl
mov
loope
dec
push
fcomip
xorb
cli
into
shlb
in
loop
pop
xchg
add
sbb
pop
cmp
dec
mov
xor
outsl
repz
lahf
mov
mov
fcoml
and
fwait
shlb
fimuls
xchg
or
repnz
adc
jle
jmp
cmc
cmp
inc
dec
or
jae
testb
sub
jnp
xchg
jmp
push
cmpsb
out
inc
das
lahf
cmc
or
rep
icebp
xorl
das
mov
lahf
adc
adc
stos
pusha
shll
pop
lcall
jns
int
sub
rorb
adc
adc
cmp
dec
jnp
sti
hlt
or
pop
push
sub
dec
dec
xchg
cmpsl
test
test
aad
out
fdivrl
lcall
add
rolb
fisubs
pop
xor
shlb
xor
enter
push
adc
mov
pop
and
mov
rol
sahf
mov
ss
out
iret
shrl
push
adc
dec
gs
push
push
repz
out
mov
push
cmpsl
dec
jne
clc
xchg
or
cmp
sbb
ja
pop
cli
hlt
arpl
mov
push
and
dec
shr
mov
aad
imul
fdivl
cmp
xchg
fs
call
xor
inc
sbb
push
cmpsl
push
jne
xchg
lds
fcmovb
jo
adc
mov
adc
jo
adc
cmp
cmp
or
and
jge
xor
push
pop
cwtl
and
adc
test
notb
adc
sti
shlb
dec
pop
inc
lods
dec
cmp
or
fcomi
adc
stos
insb
dec
sub
and
mov
stc
mov
add
jne
shrl
and
adc
dec
dec
cltd
cmp
out
jecxz
adc
lock
mov
aad
cmp
or
cmp
lock
sub
lcall
mov
adc
pop
sti
jg
cs
push
pop
adc
mov
mov
aaa
lcall
testb
pop
out
mov
push
stos
push
cmp
cmp
and
push
arpl
out
or
sbb
mov
and
adc
adc
adc
les
or
mov
aas
and
add
pop
mov
push
inc
out
aaa
repnz
push
mov
cld
cli
cmp
sti
or
mov
push
mov
xor
idivl
mov
cmp
iret
cs
scas
setl
or
ret
push
test
or
and
adc
repz
mov
inc
aad
int3
mov
or
fimull
push
pop
mov
and
xchg
and
jnp
pushf
and
adc
mov
nop
adc
adc
pop
xlat
into
movsl
repz
das
jae
loope
pop
adc
test
or
add
add
stc
in
pop
fistps
push
mov
jmp
or
popa
pop
shrb
repz
adc
clc
stc
and
sbb
xchg
add
xchg
jo
stos
sub
out
ret
xchg
cmp
popf
lret
mov
mov
fs
into
inc
add
int
push
push
and
inc
cld
xchg
xor
insl
lahf
inc
mov
sub
add
sbbb
pop
movsl
add
test
push
adc
andl
out
aaa
sahf
jmp
dec
xchg
out
mov
add
popl
cmp
or
out
sub
sub
and
mov
cmp
add
inc
xlat
in
roll
fimuls
inc
xchg
jmp
mov
enter
jbe
test
xchg
ret
data16
cli
jno
stos
push
cmpl
mov
rcrb
dec
pop
divb
loop
mov
mov
bound
xchg
jecxz
cmp
movsl
addr16
cmpsb
test
add
push
adc
inc
inc
loop
lcall
mov
pop
fcmovbe
add
xchg
push
pop
push
adc
xorl
pop
mov
lret
iret
jo
push
addr16
ret
out
push
xor
cwtl
movsb
xor
jb
xor
xor
fs
and
leave
jae
test
test
mov
pop
outsl
lock
mov
xchg
xchg
dec
jb
and
sbb
fists
test
mov
sbb
adc
mov
and
xor
push
pop
push
adc
and
adc
xchg
mov
popa
gs
pop
mov
push
mov
fwait
and
insb
aas
ljmp
pop
mov
cwtl
inc
shlb
in
scas
cmpsb
cmp
inc
clc
pop
and
or
sub
lret
in
insl
adc
cli
jg
sarb
movlps
in
and
adc
dec
xchg
push
stos
or
and
adc
inc
mov
outsl
daa
push
or
pop
out
mov
fsubrl
pop
cmpsl
push
stos
push
test
int3
xchg
mov
loope
xchg
mov
cmp
mov
push
fiadds
inc
pop
icebp
jmp
incb
mov
xchg
lahf
testb
icebp
xor
jmp
adc
mov
out
inc
adc
inc
cmp
jge
ja
stos
lods
leave
adc
xor
inc
shrl
jae
adc
mov
sti
mov
sbb
fistps
xchg
inc
es
xchg
lret
jg
in
aaa
dec
cli
mov
repnz
mov
das
sub
in
add
cmc
cwtd
mov
mov
cli
lods
add
nop
xchg
cmpsl
push
ljmp
jno
pushf
in
mov
jmp
stc
cmc
jmp
sbb
adc
rcrb
jmp
and
ljmp
das
stos
test
inc
imul
mov
popa
lods
mov
adc
mov
dec
bound
push
fnsetpm(287
push
sub
testl
and
frstor
sbb
mov
pop
mov
pop
add
xor
xor
lret
push
adc
popf
or
pop
inc
mov
in
pop
push
stos
add
div
and
aaa
test
out
call
jne
xorl
dec
xlat
xchg
repz
fldt
or
sarl
int3
add
jmp
jp
xor
jo
adc
fs
cltd
testb
jg
mov
adc
or
dec
xor
push
adc
xor
sarl
repz
adc
movsb
mov
add
in
sub
sub
mov
jns
shrl
xlat
xor
aaa
repz
dec
int3
pop
push
add
out
repnz
cmpsl
andb
pop
popa
outsb
stc
inc
or
jb
cmp
loope
repz
adc
jge
mov
repz
adc
js
imul
sub
mov
outsl
js
inc
cld
cmp
pop
adc
outsb
xor
xor
cmp
addr16
and
inc
pop
enter
fcomp
loopne
dec
mov
pop
arpl
xchg
cmpl
ss
xor
xchg
adc
mov
mov
adc
cltd
insl
xor
shrl
cmp
clc
sarl
jbe
mov
mov
cld
cltd
xchg
shll
xchg
xor
leave
sbb
or
push
mov
mov
push
and
aam
or
mov
aam
push
je
and
adc
push
adc
clc
stos
sti
ja
xchg
arpl
adc
sub
and
adc
ret
and
adc
pop
sahf
cmp
adc
mov
or
dec
rcll
test
adc
sbb
sti
mov
adc
dec
pop
decb
std
mov
lret
scas
stos
mov
mov
test
pop
adc
push
loop
dec
dec
jge
jg
cmc
cmpsl
push
cs
pop
adc
pop
das
clc
and
adc
pop
adc
jecxz
clc
and
adc
in
test
pop
adc
in
call
mov
xor
mov
testb
push
daa
add
or
push
fists
push
dec
mov
cmp
inc
jae
daa
and
cli
lods
popa
xchg
inc
ret
dec
outsb
cmp
test
fistl
dec
rol
test
in
mov
ds
or
push
fnstsw
stos
push
repz
cmp
or
and
inc
std
hlt
call
dec
data16
cmpsb
push
and
pop
sub
fdivl
jo
insb
lahf
jge,pt
jg
fldcw
sbb
test
gs
sahf
and
clc
inc
xchg
mov
jae
sub
mov
lea
xor
insl
adc
sbb
fwait
rolb
pop
xor
ss
mov
add
dec
test
sbb
mov
imul
fdivrl
add
shll
mov
filds
dec
dec
int
sub
addr16
inc
inc
daa
lahf
iret
outsb
orb
clc
or
pop
fsts
mov
dec
sbb
pop
jg
and
sub
inc
fcmovnb
negl
test
sub
add
nop
pop
and
pop
adc
inc
pop
jnp
icebp
outsl
xchg
mov
call
mov
call
mov
mov
fdivrs
outsl
repnz
loope
ret
hlt
push
adc
scas
and
call
sbb
out
cmp
gs
ss
cltd
cmp
insb
or
sbb
leave
pop
adc
repnz
mov
push
lret
scas
clc
jno
pop
fstp
sub
inc
or
jg
cmp
cltd
insl
fisubrl
fcmovbe
enter
and
cs
mov
je
push
sub
fistpll
ljmp
outsl
mov
popa
and
xor
push
jl
movsb
add
nop
adc
inc
out
adc
dec
push
imul
test
aad
pop
mov
mov
jnp
add
xlat
loopne
cwtl
cmp
mov
adc
icebp
arpl
cs
mov
inc
and
pop
adc
shll
cmp
insl
xchg
movsl
rol
or
mov
pop
or
push
jo
in
ret
int
imul
ret
outsl
sbb
mov
and
mov
dec
push
sbb
cltd
fwait
test
push
stc
int3
les
out
add
mov
cmp
ja
xchg
dec
and
add
dec
fmuls
inc
es
and
pop
xchg
jmp
test
mov
fldl
nop
sahf
jnp
inc
push
scas
jp
jae
popf
ljmp
imul
jbe
or
lds
xlat
jb
push
or
daa
je
int3
aaa
pusha
nop
mov
ret
or
sarl
cmp
ja
pop
cmp
pop
mov
cmp
jle
mov
cmp
push
outsb
ds
xor
ds
cmpsl
mov
mov
pop
pop
in
jecxz
xchg
xlat
jno
lret
adc
loopne
lods
mov
mov
cld
sbb
jp
cmpsl
mov
std
jp
call
adc
out
mov
and
das
dec
sahf
cmp
push
pop
sahf
iret
lahf
mov
jb
call
adc
es
scas
and
jmp
cmp
popf
out
jge
or
cwtl
testb
mov
sub
lcall
sub
jge
jg
pop
mov
loope
scas
outsb
pop
and
cmp
pop
adcb
iret
lahf
mov
jge
aad
test
xchg
fldl2t
cmp
adc
jbe
lock
insb
mov
lods
enter
add
and
pop
sub
cmp
cld
fwait
push
ja
fdivrp
hlt
call
dec
lret
inc
stos
rcll
outsl
fcmovnbe
pop
push
out
fdivrl
std
sub
mov
sbb
mov
push
es
cmpsl
sub
jp
mov
out
insb
sub
std
divb
inc
mov
xor
stos
push
fstpl
mov
int3
xor
int3
lahf
jge,pt
cmpsl
mov
or
sub
nop
pop
add
sahf
cmp
pushf
jae
iret
lahf
mov
arpl
mov
sub
jnp
and
or
aas
ret
push
jbe
jns
pop
aad
xor
stos
fsubrp
out
mov
test
addl
jge
hlt
imul
pop
adc
test
cmp
arpl
mov
test
inc
xor
imul
pop
adc
cmpsl
push
or
pop
adc
aaa
cmc
mov
pusha
xchg
cmpsb
into
out
insl
xor
scas
push
addr16
shrl
cmc
in
mov
xor
pop
clc
imul
shrl
sub
movsb
pop
imul
mov
jg
stos
mov
or
or
cmpsl
inc
or
outsb
movsb
test
inc
fucom
pop
scas
int3
fstpt
mov
xor
mov
cwtl
and
leave
dec
pop
rclb
adcb
sti
push
mov
mov
fs
pop
push
shll
jae
and
xchg
cld
mov
in
add
fsubrl
dec
into
jle
mov
shr
and
loop
repz
adc
je
fistpll
cmpsl
push
lds
sub
adc
mov
push
inc
nop
add
mov
test
scas
sub
lock
xor
xchg
mov
cmp
pop
hlt
sub
inc
add
or
jne
into
sbb
jne
adc
jne
cld
sub
adc
adc
and
jne
lds
es
cli
mov
adc
adc
pop
das
sbbb
inc
lods
jge
cmpsl
mov
pushf
sub
fcomi
xor
ficoms
push
lods
mov
ret
xchg
test
and
adc
mov
or
sbb
jbe
pop
outsl
pop
add
test
and
cmp
adc
adc
inc
clc
test
adc
arpl
xchg
loop
ja
xor
xchg
daa
mov
and
adc
cmp
push
daa
or
xchg
int
mov
sub
popf
cmp
pop
inc
aam
mov
pusha
test
ret
ja
adc
inc
imul
jb
adc
or
test
outsb
imul
jg
add
jnp
mov
mov
mov
mov
out
push
addb
cmpsb
jne
jb
pushf
out
sbb
loopne
push
adc
inc
and
adc
inc
inc
cld
pop
dec
clc
call
addr16
push
inc
imul
sbb
push
adc
xor
in
and
test
jns
out
mov
arpl
mov
mov
xchg
push
addb
scas
pop
mov
ret
push
push
cld
addl
aaa
arpl
push
stos
or
or
lcall
mov
mov
inc
jae
xchg
repnz
mov
inc
cmp
nop
mov
push
cmpsl
dec
xchg
mov
xor
pop
inc
fisubrl
hlt
mov
iret
into
out
sbb
and
mov
dec
sahf
mov
int
xor
add
sahf
pop
out
mov
cmc
push
mov
add
aas
mov
push
test
mov
xchg
shll
pushf
lds
pop
push
stos
push
shlb
adc
mov
sbb
sbb
jne
clc
sahf
mov
cmp
push
fildll
mov
js
out
bound
cld
dec
or
add
cmp
pop
sahf
fiaddl
adc
dec
sahf
pop
jl
aam
cmp
daa
aas
jge
hlt
add
test
or
xchg
push
stos
push
shlb
ret
test
out
fsub
sub
xchg
adc
and
mov
push
xor
jmp
stc
mov
clc
xor
cmpl
inc
cli
in
rcl
dec
jp
ss
push
push
das
push
cmp
insb
idivb
out
lahf
ds
cli
in
shll
inc
mov
and
sbbl
pushf
mov
push
fdiv
push
adc
cld
mov
sub
mov
and
cmpsb
or
mov
jae
push
nop
pop
and
pop
adc
ds
mov
push
adc
repz
mov
shr
repz
adc
pop
dec
hlt
enter
imul
idivl
loope
in
pushf
push
scas
inc
push
mov
lret
mov
and
xchg
xchg
ss
stos
imul
cld
jp
ret
xchg
sub
sub
mull
subl
lret
pop
dec
jb
add
repz
adc
cli
dec
mov
fcompl
stos
inc
xchg
sbb
test
test
fcomp
ljmp
push
adc
mov
push
xor
push
adc
sbb
pop
fcmovnu
aam
push
push
fdivs
in
add
outsb
int
out
pop
leave
repnz
cmpsb
jecxz
mov
call
push
dec
pop
mov
adc
fdivrs
sub
cmp
push
ljmp
shrl
and
test
mov
call
in
repz
cmpsl
adc
jecxz
shlb
or
addr16
or
in
outsl
andb
std
sbb
pusha
lods
mov
ret
fmull
std
repz
pop
out
ret
fbstp
dec
adc
or
adc
mov
pushf
je
addb
in
movsl
pop
jge
gs
lds
push
adc
fxch
sarb
imul
lahf
sub
push
aam
out
pop
and
fstps
mov
adc
cmp
lahf
xor
movsb
pop
fidivs
cwtl
push
in
ss
fdivrs
push
dec
jno
in
sbb
scas
in
cmpsb
push
je
xor
push
adc
mov
insl
jae
sbb
mov
cmp
mov
sti
insl
test
sarl
jecxz
dec
cmp
scas
pop
mov
pop
xlat
jle
mov
stc
cmovp
call
cmpsb
xor
imul
sti
or
inc
add
hlt
push
adc
scas
aad
mov
je
dec
jne
fwait
rclb
sbb
jle
call
and
pop
fscale
mov
cmpsb
icebp
cmp
imull
add
or
pushf
xor
aam
call
cltd
lret
mov
sub
cmp
divl
daa
sbbb
lods
popa
xchg
inc
jge
adc
push
xchg
popa
in
sub
adc
jno
mov
out
sbb
jno
xor
aam
cmp
or
stos
push
lock
stos
movsl
decb
frstor
inc
cmp
inc
add
pop
repz
roll
add
ret
mov
pop
mov
iret
lahf
mov
xor
inc
insb
out
adc
and
fisttpl
and
cli
cld
sub
adc
std
mov
jo
out
imul
out
fndisi(8087
inc
xor
pusha
dec
cltd
adc
jb
aad
dec
iret
push
stos
xlat
insl
inc
and
xchg
mov
mov
or
push
fdivrl
jmp
pop
incl
mov
cld
sub
adc
lods
cwtl
jb
adc
xor
or
inc
and
adc
icebp
add
jnp
imul
add
pusha
rcll
dec
push
addr16
in
test
mov
addb
lods
mov
sub
adc
adc
and
or
int
mov
push
jns
cli
lods
insl
adc
mov
push
stos
imul
mov
testl
push
jge
push
stos
push
filds
inc
cmpsb
xor
and
push
aam
mov
pusha
push
mov
inc
sub
add
mov
hlt
or
out
fldenv
mov
mov
movsl
test
loope
sbb
mov
fwait
negl
lahf
lock
mov
fcoml
xor
cmpsl
jl
add
push
and
jmp
fs
push
inc
std
pusha
push
mov
push
cltd
push
cmp
test
sub
push
and
fdivrl
outsb
push
add
adc
mov
mov
hlt
jns
mov
sbbb
pop
adc
call
pop
fsubrl
nop
xchg
sbb
cli
cmp
cltd
mov
ret
adc
jns
or
push
scas
cmpsb
mov
add
jne
icebp
cmp
adc
sub
in
sub
or
dec
popa
xchg
sub
or
push
jl
push
xchg
stc
pusha
loopne
sub
jecxz
inc
mov
jmp
stos
subl
sbb
jno
out
in
stos
mov
loopne
subl
adc
push
and
clc
iret
into
sub
or
push
mov
xor
or
loopne
aas
popa
inc
orl
xor
iret
or
cmp
adc
mov
daa
fsubs
fmul
lock
mov
mov
cmp
adc
adc
rcr
sub
out
cmp
adc
andl
hlt
push
adc
sti
inc
sar
mov
mov
scas
cmc
dec
es
bound
xchg
repnz
add
dec
sub
mov
fwait
mov
mov
xor
rcl
jbe
js
pushw
fwait
and
movsl
rcll
xchg
lock
push
inc
lods
cmp
or
nop
mov
mov
pushf
stc
inc
dec
mov
jle
mov
push
int
clc
mov
mov
inc
test
leave
or
lea
push
mov
push
shr
mov
and
cmp
adc
iret
pusha
dec
jg
cmp
pop
int
xor
imul
orl
mov
aas
ret
lret
mov
mov
out
bound
cwtd
cbtw
cld
fmuls
enter
gs
test
push
sub
cs
push
push
stos
push
pop
xchg
movsb
dec
sahf
cmp
mov
jne
fstpl
je
bound
sub
add
push
test
cmp
sti
insl
cmp
jo
xor
adc
xchg
cmp
add
daa
shrb
adc
push
sub
adc
sub
pop
movsb
int3
lret
sbb
test
inc
push
das
or
mov
repnz
int3
inc
sub
add
mov
or
fwait
mov
stc
jg
or
sub
adc
sub
add
sub
xor
sbb
sahf
mov
and
mov
add
and
adc
sub
adc
sub
adc
sub
adc
sub
adc
pop
sub
gs
aaa
fwait
outsb
mov
idivb
leave
popa
xchg
jno
and
and
sub
gs
aaa
mov
adc
idivb
leave
jno
xor
aad
push
stos
push
pop
push
pop
mov
test
sub
adc
mov
add
adc
add
adc
adc
ficoms
cwtl
mov
mov
std
jge
pop
in
add
xor
hlt
pushf
push
cmp
repnz
mov
jp
jo
call
inc
stos
inc
and
sub
repz
mov
fst
dec
je
xchg
xchg
cs
enter
and
popa
in
mov
imul
adc
ss
xor
dec
push
jmp
adc
and
xchg
fcmove
sub
adc
call
adc
add
add
addr16
sti
shrb
push
daa
sbb
push
cltd
mov
clc
ret
je
push
in
push
hlt
jge
and
mov
cmp
adc
pop
sbb
out
jmp
sub
sbb
shll
aas
jne
adc
ja
push
mov
push
and
out
call
lret
or
inc
enter
mov
add
adc
add
adc
add
adc
pop
sub
or
or
repz
sub
xchg
or
loopne
sti
aam
insl
stc
fnstcw
adc
inc
int3
pop
mov
sub
int
inc
aad
sahf
repnz
or
out
arpl
xchg
pushl
jp
sub
add
adc
add
stc
xchg
sbb
cmp
data16
cmpsb
xor
adc
test
sub
cld
pop
leave
xor
hlt
inc
out
ds
lods
pop
fdivl
sti
std
sub
je
test
push
add
mov
scas
push
insb
dec
fisttpl
cmc
add
push
mov
jp
mov
movl
test
sbb
fwait
shlb
test
cmp
cmp
adc
mov
ja
adc
mov
jns
mov
outsl
jo
sti
subb
adc
mov
adc
das
add
add
adc
cs
outsb
fldenv
dec
fwait
cmp
sub
pushf
mov
mov
repnz
int3
inc
insb
das
add
mov
or
fwait
mov
stc
jg
or
sub
adc
insb
das
add
sub
xor
sbb
sahf
mov
and
mov
add
arpl
add
adc
add
adc
das
add
adc
das
add
adc
pop
sub
gs
aaa
fwait
outsb
mov
idivb
leave
popa
xchg
jno
and
and
sub
gs
aaa
mov
adc
idivb
leave
jno
xor
aad
push
stos
push
pop
push
pop
mov
test
das
add
das
add
adc
das
add
or
lcall
gs
mov
mov
cld
jl
pop
in
add
mov
fsubrp
dec
adc
repz
jg
mov
pop
out
roll
test
test
das
sahf
mov
cli
js
out
fmul
push
es
mov
dec
jo
nop
xchg
sub
adc
imul
xor
idivb
inc
push
jecxz
sbb
sub
or
xor
or
add
add
adc
add
ja
fneni(8087
dec
sbb
fidivrs
pushf
out
cmovs
sbb
test
adc
jecxz
and
cmc
gs
mov
js
js
jmp
dec
inc
psrad
pop
push
cmpsl
push
test
xor
mov
aas
cmc
mov
into
leave
sbb
adc
inc
push
and
pop
jmp
sbb
leavew
faddl
bswap
inc
or
add
mov
xor
adc
xor
adc
xor
adc
xor
inc
xor
cmp
imul
jnp
fwait
add
in
imul
neg
lea
add
add
or
pop
aad
inc
mov
xor
aam
pop
int3
jl
jmp
cmp
jb
int3
xchg
xor
xor
adc
xor
adc
xor
lret
sub
pop
mov
cmp
aas
je
adc
ds
push
mov
popf
arpl
adc
scas
fdivs
loop
fistpll
lock
lret
insb
xor
outsb
fldcw
pop
test
loopne,pt
hlt
push
adc
addr16
mov
ljmp
push
adc
dec
xchg
dec
mov
adc
leave
jo
or
mov
fs
loop
cli
out
mov
pop
sub
out
push
jno
cwtl
imul
adc
pop
icebp
mov
out
push
out
jo
push
adc
sbb
rcll
ret
loope
fs
xor
lds
mov
cli
mov
pop
scas
and
stos
and
pop
push
inc
das
and
pop
inc
rorb
xor
push
jo
push
adc
push
out
pop
rcr
mov
outsb
add
shlb
js
push
adc
push
jmp
and
push
nop
hlt
push
adc
add
stos
in
cmp
or
cmp
lret
add
nop
hlt
push
adc
js
cltd
ror
cmp
idiv
and
xchg
inc
mov
xor
pop
ss
dec
push
lds
stc
dec
fstpt
xor
inc
sbb
xor
in
inc
rcrl
mov
sahf
cmp
mov
pop
je
add
xor
and
xchg
push
inc
xchg
mov
pop
and
sbb
and
dec
fs
adc
inc
rorb
enter
mov
xor
xor
mov
mov
adc
mov
cmp
push
pop
push
scas
int
out
pop
xor
or
adc
dec
bound
mov
push
test
popf
out
xor
add
iret
idivb
stos
mov
pusha
mov
stc
cmpsb
sbb
cbtw
fcomp
imul
mov
shl
shr
xchg
sbb
stos
xlat
push
add
xchg
and
idiv
dec
pop
das
pop
cmp
cltd
xchg
sub
lahf
mov
inc
mull
mov
out
inc
shll
ret
aad
push
push
and
ret
arpl
out
xchg
stc
jns
sub
ret
stos
push
stos
and
jmp
or
call
pop
mov
adc
lahf
ds
je
and
jns
hlt
jmp
sahf
out
loope
mov
cmpsl
dec
popa
cmp
mov
cmp
cmp
bound
mov
xchg
loopne
sahf
bound
aaa
ret
mov
lods
cmc
stos
sbb
inc
dec
roll
stos
push
test
xor
mov
mov
repnz
enter
rolb
pop
adc
ljmp
test
icebp
in
and
vandps
test
cmp
hlt
gs
mov
sbb
ss
rcll
dec
dec
mov
fst
pop
sub
mov
shlb
jbe
outsl
and
cmp
clc
xlat
push
test
insb
pop
xor
push
push
mov
sahf
xchg
xor
jb
push
movsb
adc
pop
stos
dec
push
pop
cmp
sub
cmp
dec
mov
mov
adc
cmp
orb
and
jae
push
mov
movsl
adc
pop
fiaddl
lods
mov
jnp
rolb
adc
ja
faddp
sub
push
xchg
nop
loop
cmp
mov
mov
adc
adc
sbb
pop
cmp
jns
rolb
adc
cld
fwait
sbb
push
lods
push
jo
sbb
js
pop
adc
rolb
adc
or
mov
jbe
fs
push
push
in
xchg
push
scas
pusha
sbb
jb
cs
adc
xchg
jle
rolb
adc
mov
fnsave
into
xchg
hlt
xchg
push
andl
and
fsts
mov
jb
lds
mov
mov
leave
mov
inc
dec
add
dec
mov
xchg
stc
push
mov
jo
je
je
dec
add
mov
xchg
and
or
inc
fwait
loop
jecxz
jae
dec
adc
inc
es
aas
jnp
adc
fwait
dec
cmp
sbb
and
and
mov
inc
xchg
jno
adc
fidivs
fnstenv
add
jle
in
push
aaa
pusha
nop
pop
icebp
fcoms
cwtl
or
xchg
jecxz,pt
or
sub
fsin
jle
mov
dec
imul
mov
movsl
outsb
stos
dec
mov
aad
std
or
mov
or
outsb
dec
sarb
stc
xor
iret
jne
mov
inc
xor
sub
add
sbb
js
xlat
jle
cld
sbb
out
xor
dec
xor
enter
filds
add
fisubl
xor
pop
cmpsl
jno
iret
sbb
test
sti
lds
movsb
jns
aad
sub
enter
mull
test
mov
dec
leave
dec
aam
int3
loope
xor
and
pop
lret
xchg
sarb
mov
dec
fcmove
xorb
push
idivb
aad
fldenv
test
inc
mov
pop
pop
jb
iret
sbb
test
sti
addr16
data16
mov
test
cmpsl
jmp
push
roll
adc
adcl
xchg
jo
pop
jmp
cmpsl
inc
pop
xchg
imul
fmul
pusha
iret
cmc
pop
orb
cwtl
cwtl
xor
mov
in
cmpsl
sub
push
jnp
sbb
jae
dec
dec
ds
sbb
push
mov
addr16
push
push
aam
sub
dec
dec
sbb
test
adc
test
inc
xchg
fstpt
add
sahf
outsb
push
push
add
mov
xor
dec
out
mov
push
and
jg
push
imul
adc
popa
out
cmc
ds
decb
popf
cmp
jno
cld
fsubr
test
pop
mov
sahf
push
jnp
sbb
jae
mov
mov
cs
mov
fdivrs
push
test
shrl
adcl
cld
adc
mov
mov
cmp
imul
pop
pop
jbe
outsl
imul
push
jno
mov
test
push
pop
dec
addb
loope
adc
jecxz
cs
outsb
and
loope
shrb
popl
sbb
cltd
dec
test
mov
fxch
lock
stos
mov
cmp
jo
pop
adc
inc
lret
sub
scas
inc
movsb
pop
mov
add
ret
lock
inc
jle
fcmovbe
lea
rolb
adc
scas
adc
and
pop
push
pop
dec
test
sub
mov
dec
aad
test
cmp
rorl
scas
add
imul
scas
mov
mov
and
les
inc
mov
jb
xchg
sbb
xor
or
jae
sahf
lock
sahf
push
roll
ss
jmp
sbb
push
jo
fistl
or
mov
jmp
jmp
rclb
outsl
lods
scas
call
xchg
xchg
inc
aas
lcall
sbb
and
pop
and
xchg
sub
lcall
call
dec
jo
or
js
in
jne
int3
adc
push
rcrl
xchg
sub
loope
or
dec
fcmovne
inc
aas
mov
in
inc
cmp
aad
je
outsl
das
test
pop
cmp
test
mov
imul
inc
aad
xchg
jne
je
pop
adc
pop
sarb
roll
adc
mov
pop
adc
add
roll
adc
mov
xchg
roll
adc
mov
cwtl
roll
adc
pushf
roll
adc
daa
fnstenv
fstps
cs
xor
and
adc
sbb
es
mov
std
cmpb
xor
adc
xor
and
jg
fsubl
xchg
imul
sbb
movsl
push
jecxz
sahf
push
and
pusha
movsb
or
mov
sbb
push
popa
dec
sub
xor
push
pop
mov
das
mov
leave
pop
adc
test
divb
jo
pop
adc
aaa
lds
lret
mov
and
dec
xorb
sahf
xchg
aam
mov
xor
nop
push
std
inc
jno
and
adc
mov
and
adc
jp
sbb
mov
jl
push
adc
pop
movsl
test
jne
inc
jae
sub
hlt
push
fldl
xor
cmp
nop
leave
pop
adc
clc
push
xchg
lods
cmpsl
nop
leave
pop
adc
xchg
sbb
cs
insb
cmp
or
jg
imul
or
nop
leave
pop
adc
push
iret
pop
mov
mov
rorl
sahf
call
sbb
cmp
ret
push
mov
pop
das
jmp
dec
dec
pop
xor
iret
lret
adc
pop
mov
dec
pop
imul
xor
lcall
aaa
mov
xchg
jo
xchg
pop
cmpsb
cld
ficompl
ret
out
les
dec
cmp
fistl
adc
fsubs
mov
jge,pn
jg
frstor
cmpsl
test
xor
in
push
sub
shrl
in
or
fidivs
mov
int3
sbb
ds
mov
jmp
xchg
cmpsb
jg
push
fiaddl
jg
stos
adc
xchg
push
shll
xchg
outsl
pop
jmp
scas
fstpl
popf
adc
testl
or
sbb
push
mov
jmp
push
in
pop
mov
mov
fidivl
jb
hlt
mov
sbb
repz
arpl
mov
stc
cmp
cmc
call
adc
stos
and
mov
push
xor
push
mov
mov
in
sub
je
fiaddl
fadd
cwtl
hlt
push
adc
xchg
in
les
cmpsb
mov
cli
or
sbb
mov
sbb
outsl
jp
cmp
cmp
xor
xor
lock
inc
stos
mov
into
xchg
adc
mov
inc
iret
mulb
sub
or
xor
jg
in
std
cmpsb
clc
bound
cmp
mov
clc
cmp
test
out
adc
addr16
ds
inc
push
dec
cmp
add
leave
lods
js
cmp
jg
pop
fs
add
mov
push
adc
rclb
jne
or
or
insl
jnp
mov
jmp
fdivp
jns
pop
adc
or
adc
xchg
dec
sub
lcall
mov
or
inc
add
fsts
ret
loope
shll
and
adc
add
jnp
out
pop
loope
paddusw
cmp
inc
lods
push
pusha
pop
mov
nop
xor
or
xor
adc
in
xchg
rcll
mov
popa
loope
movsb
fsubs
cmp
pop
ror
fstpl
outsl
jo
arpl
pop
add
or
inc
das
jne
sub
leave
mov
jne
rclb
ss
and
xchg
lock
mov
adc
test
loope
jo
xchg
add
lock
xchg
inc
aaa
jmp
inc
test
rcrb
fs
lods
jp
dec
mov
pushf
lds
sahf
in
jle
xorb
out
test
fldenv
adc
cmp
dec
push
loope
popf
pop
sarb
subl
push
jns
in
outsb
nop
dec
daa
pop
inc
aam
push
adc
lds
lds
fdivr
imul
dec
rcrb
push
fs
sub
xchg
je
faddp
or
add
lock
mov
lock
jmp
inc
mov
imul
lret
add
and
dec
and
test
or
ja
dec
pop
mov
and
mov
sub
push
adc
mov
cmp
negl
mov
imul
mov
sbb
pop
push
ljmp
mov
cmp
jne
inc
and
out
mov
fucomp
pop
and
scas
mov
aaa
jnp
add
or
aaa
jge
xor
push
leave
add
sti
add
iret
dec
lahf
cmp
push
jne
iret
lahf
mov
movsl
xchg
outsl
xor
out
test
ljmp
xlat
js
call
bnd
mov
add
push
cmc
or
popf
push
jp
sahf
cmp
mov
dec
js
clc
rcl
mov
cmp
lock
icebp
mov
and
jne
sub
push
repnz
adc
or
js
dec
sbb
cpuid
sub
aas
ret
fistl
rolb
xlat
push
or
inc
addr16
lods
insb
push
xchg
adc
sbb
push
add
xchg
inc
daa
or
cmp
cmp
shlb
scas
add
mov
rorl
sbb
inc
pop
fwait
bound
xor
dec
pop
dec
gs
pop
push
bound
inc
mov
add
or
or
lea
pop
imul
push
decb
cmp
mov
stc
cmpsb
sbb
cbtw
and
addl
mov
push
mov
mov
jno
int3
lds
sbb
mov
dec
xchg
mov
push
push
insl
leave
sbb
jl
repz
lds
inc
push
push
test
lahf
dec
lahf
jge
sbb
jo
scas
sbb
arpl
and
adc
rorb
jmp
into
loopne
mov
clc
imul
cmpsl
mov
mov
push
cmpsl
shlb
jl
ljmp
sarl
test
test
pop
or
frstpm(287
jg
sbb
fs
shlb
xchg
out
mov
mov
lods
dec
push
xchg
int
out
pusha
mov
jg
push
pop
sub
xchg
and
pop
fistpl
pop
jae
es
rorl
sarb
xor
nop
test
cld
cltd
fcmovbe
add
lahf
mov
or
ds
jl
testb
shlb
fimuls
test
pushl
cmp
loope
dec
sub
aam
pusha
push
iret
add
sahf
xchg
and
lods
dec
out
or
sub
jns
imul
pop
stos
out
sub
int3
mov
mov
rcrl
mov
adc
mov
cmpsl
lret
push
rcll
out
cmpsb
sub
orb
add
test
ret
test
shrl
pop
ret
cltd
add
mov
stos
insb
in
mov
jno
lret
dec
sti
or
sub
enter
xor
push
rcrb
pop
sub
clc
jmp
push
or
aam
adc
push
jmp
mov
insb
push
mov
ljmp
loopne
cmpsl
push
lods
dec
into
pop
data16
ja
jle
adc
fsubr
aas
pop
add
pop
enter
inc
jmp
shll
jno
jle
mov
fildll
add
xchg
mov
mov
cmp
jecxz
or
and
xlat
das
aas
lds
add
loope
je
fs
into
pop
xlat
into
add
inc
dec
test
in
sbb
imul
ret
adc
or
jmp
push
cmp
and
int3
enter
das
popa
inc
xchg
imul
and
inc
xor
cmpsb
xchg
mov
inc
jo
pop
lock
and
cmp
and
xchg
mov
xlat
push
sti
hlt
call
fiaddl
mov
and
pop
movsb
popf
mov
out
xlat
xchg
movsl
push
loopne
pop
xlat
sar
call
sbb
outsb
jnp
and
aam
imul
faddl
repz
cltd
push
jg
imul
dec
add
shll
push
test
dec
add
rolb
out
mov
pop
shll
mov
ret
push
dec
adc
test
fwait
enter
movsl
popf
xlat
sub
ficoms
in
jp
std
add
js
push
pop
cmp
fdivrl
mov
dec
pop
xor
mov
jge
adc
stos
and
push
xchg
enter
iret
je
imulb
stos
dec
sub
mov
mov
cs
mov
xchg
push
inc
and
mov
mov
hlt
fildl
lcall
mov
adc
dec
outsl
jl
enter
xchg
push
sub
push
in
jp
std
add
push
ret
push
dec
cld
pusha
ret
out
xor
pusha
dec
imul
fs
lret
xchg
sub
sub
xor
fdivrl
mov
push
sub
sub
push
fs
push
adc
cmp
pusha
mov
test
cli
xor
ficomps
aam
push
cmpsb
dec
je
icebp
jbe
fnstsw
jp
jo
dec
shlb
loopne
mov
adc
stos
push
movsl
dec
xchg
mov
cmp
iret
cmp
jb
adc
push
adc
xchg
js
cmc
inc
lret
fdiv
pop
cld
mov
xor
pop
lods
adc
cwtl
mov
pop
repnz
out
xchg
bound
daa
add
sub
cmpsl
and
pusha
mov
insl
xchg
push
loope
imul
inc
shr
sti
in
jno
out
int3
push
mov
lcall
shll
mov
jp
or
movsb
sub
jno
cmp
ficoms
push
insl
jp
rcll
in
aad
pop
xor
dec
and
call
or
inc
sarb
movsb
sub
lahf
jbe
xchg
call
std
adc
jecxz
push
hlt
xor
add
dec
test
cli
sub
sub
sti
test
jae
inc
pop
jnp
ret
xor
cmp
js
pop
stc
popf
add
mov
call
les
xchg
jp
push
mov
out
xchg
jns
cmpsb
or
push
jno
mov
adc
jecxz
or
xchg
fwait
test
inc
loop
adc
sub
adc
push
dec
mov
popl
cs
cmpsl
mov
inc
cwtl
int3
jae
imul
lods
pop
push
in
xchg
arpl
jno
and
mov
ds
lret
add
inc
lods
cmp
jg
xlat
mov
and
inc
xlat
mov
adc
cmc
push
adc
xchg
movsl
cltd
push
dec
push
mov
xlat
aas
jge
mov
sub
test
adc
mov
hlt
xchg
sub
aad
leave
cmp
inc
adc
inc
jg
xchg
cmp
pop
shrd
addr16
push
or
xor
dec
pop
inc
cmp
std
adcl
push
xor
out
xlat
lock
push
adc
cmp
dec
add
add
xor
cmpsl
fisubrs
fisttpll
sahf
addr16
iret
pop
jne
rorb
cmpsl
lahf
es
out
rcrb
push
xchg
daa
jl
or
dec
leave
mov
and
rcl
fisttps
add
sti
into
out
sarl
mov
jb
pop
xlat
sub
pop
out
mov
pop
and
pop
popa
cmp
jle
cmp
jl
iret
sbb
or
sub
mov
subl
stos
fbld
rcll
dec
pop
mov
bound
mov
nop
dec
pop
mov
xor
inc
insb
test
cmpsl
mov
in
imul
fdivrl
add
hlt
imul
dec
or
xor
aad
mov
cmpsl
dec
sahf
mov
jae
out
dec
push
jns
in
fisubs
inc
mov
xor
fiadds
sbb
imull
cltd
pop
sub
and
mov
test
cmpsl
lea
xor
rcrl
scas
les
movsl
jnp
out
aaa
mov
jge,pt
push
jmp
sbb
pop
mov
push
scas
lds
mov
fnstsw
pop
lock
mov
push
fdivs
and
push
pop
inc
adc
fldl
sbb
je
inc
hlt
sahf
jmp
push
pop
adc
push
daa
cmp
into
stc
repz
nop
mov
pop
mov
xchg
xor
inc
and
dec
faddp
je
out
jo
and
hlt
mov
inc
lea
sbb
pop
inc
push
or
jnp
out
sbb
xchg
mov
mov
mov
sub
xlat
dec
data16
das
or
outsl
push
inc
add
lock
xchg
je
mov
mov
and
mov
xchg
fdivl
cmp
pminsw
test
lea
xor
mov
adc
fistpl
mov
mov
adc
xor
mov
inc
and
call
sub
mov
jnp
daa
mov
mov
jbe
adc
out
dec
popa
pop
jmp
and
and
leave
mov
movlps
adc
mov
push
outsl
xor
out
aad
mov
stos
call
negl
jge
arpl
popf
or
mov
push
fwait
imul
nop
push
pop
pop
mov
lods
dec
add
jne
jne
sub
ljmp
shl
mov
mov
dec
in
pushf
movsb
clc
addl
imul
movsl
mov
pop
add
push
xchg
loopne
cs
es
enter
dec
push
cmp
mov
test
or
cmpsb
mov
jl
cmp
out
pop
loope
mov
cs
mov
rcrb
or
mov
mov
sub
scas
insl
xor
int
cmp
fwait
shlb
iret
pop
adc
xchg
mov
sbb
sub
ss
xchg
clc
or
jns
dec
mov
lret
push
jb
mov
add
mov
cli
loop
jae
xlat
xor
fdiv
lods
outsl
push
js
mov
xor
mov
sub
outsb
lea
jg
sbb
mov
pop
loopne
push
dec
ret
inc
cwtl
mov
les
pop
shl
push
into
dec
inc
aas
lret
dec
ljmp
in
mov
out
popf
xor
shlb
pusha
dec
cmp
mov
xchg
inc
into
sbb
lds
outsl
push
iret
fcomi
loope
pop
pop
mov
sub
int
xchg
cwtl
dec
xchg
mov
ja
fmuls
inc
inc
mov
jbe
rol
xchg
and
movsb
push
jg
adc
das
test
lret
mov
and
xchg
or
push
push
loop,pt
addr16
das
insl
divl
mov
in
jbe
pusha
mov
scas
push
mov
dec
pop
mov
hlt
push
add
cwtl
popf
ja
aaa
xlat
std
sub
imul
adc
movsl
pusha
jl
push
and
cs
rcrb
jl
hlt
arpl
pop
adc
test
outsl
sbb
push
popa
jecxz
jge,pt
mov
jb
cmp
jnp
push
stos
fisubrs
mov
mov
mov
xchg
aas
jge
mov
and
fwait
sbb
aad
push
cmpsb
cmp
push
test
int
cld
arpl
pop
gs
test
in
xor
push
mov
mov
lds
jle
enter
mov
cs
mov
in
outsb
sub
push
es
fwait
lahf
subl
xchg
sbb
call
dec
data16
push
adc
mov
dec
imul
outsl
add
mov
cwtl
xchg
jae
ds
mull
jo
adc
ret
pop
mov
lods
cmp
xor
sti
mov
xchg
pop
out
cmc
or
mov
mov
arpl
stos
mov
xchg
push
push
push
pop
cmp
mov
mov
push
mov
mov
xchg
outsl
dec
shll
ljmp
out
imul
push
jne
mov
sti
data16
add
push
out
and
cmpsl
add
insb
mov
cmpsl
outsl
and
int3
arpl
cmpsb
popa
roll
mov
dec
cmp
sti
lods
dec
pusha
sub
push
adc
rolb
ret
lret
xchg
pushf
inc
push
push
stos
push
mov
repnz
in
fmul
pop
adc
adc
shll
xchg
mov
mov
mov
imul
in
jmp
cltd
adc
pop
fistpl
pop
mov
aam
out
out
inc
lcall
or
jns
aad
mov
cmpsl
pop
movsl
xor
shll
scas
into
aaa
loopne
or
fs
or
xchg
es
mov
adc
pop
aam
icebp
or
mov
cmp
in
std
ficoml
mov
in
sbb
test
je
push
adc
mov
pop
add
in
jne
inc
cltd
cmp
jns
xchg
inc
xorb
xor
shll
mov
lock
movsb
adc
mov
pop
addr16
and
xchg
push
fs
lock
xor
test
cmp
test
adc
cwtl
pop
das
mov
ficoms
out
or
ljmp
ljmp
lcall
dec
mov
orl
inc
and
jo
adc
or
enter
test
cmp
cltd
fmul
pop
adc
call
lcall
cmp
daa
push
cld
sub
es
sbb
or
jp
mov
inc
sbb
cmp
mov
cmp
lret
mov
out
fidivrl
shlb
xlat
pop
addb
sub
adc
pusha
ror
lock
sub
push
imul
sbb
mov
cmp
sbb
repnz
jo
test
inc
dec
movsb
loope
adc
cmp
xchg
arpl
stos
int3
lock
xchg
jle
lea
rcrb
jge
incb
scas
pop
cmp
mov
aas
imul
outsl
ljmp
leave
int
xchg
mov
pop
mov
mov
adc
stos
fsub
push
ffree
jmp
inc
lock
pop
sub
popf
inc
push
sbb
in
mov
xor
mov
or
shll
pop
adc
sbb
adc
push
adc
stos
faddl
es
cmp
inc
jae
mov
or
repnz
and
inc
int3
rol
test
out
mov
ret
pop
adc
repnz
aad
or
add
daa
addl
ja
insl
mov
add
sub
add
inc
stc
pop
mov
xlat
fisttps
sub
jnp
and
push
mov
iret
lahf
aas
cmp
loopne
loop
adc
aas
push
and
cmpsb
shrb
fiadds
fldl
addr16
into
jmp
aad
and
addr16
clc
sbb
push
stos
push
lods
shrl
ret
push
mov
push
mov
lods
rorl
stos
movsb
mov
pusha
dec
mov
inc
sub
or
xor
dec
cwtl
pop
in
xchg
mov
test
sarl
int3
inc
push
jmp
ljmp
and
push
out
push
mov
adc
push
inc
mov
ljmp
cli
test
xchg
fnstcw
xchg
add
loope
cmpsl
out
pop
inc
ret
pop
adc
cli
hlt
arpl
sub
test
dec
daa
sub
lahf
xor
xor
int
jnp
cltd
ja
or
hlt
arpl
pusha
pop
cld
sbb
and
sub
cmpsl
xor
push
mov
push
mov
addr16
mov
ficoms
dec
in
pop
sbb
jbe
fistpll
xor
leave
imul
shll
mov
test
sub
ds
sarl
repz
rcrb
movsl
cmpsl
xchg
jmp
test
cs
mov
in
cld
imul
repnz
xchg
ss
push
add
test
sbb
inc
inc
jg
mov
inc
pushf
push
into
pop
adc
xorb
mov
lret
cmp
dec
fcompl
mov
xchg
mov
cmpsb
mov
lods
shll
inc
imull
fcmovnu
inc
iret
nopl
jecxz
lods
jae
mov
test
pusha
popa
pop
sbb
aaa
lea
clc
pop
test
pop
mov
ljmp
push
dec
add
ds
and
add
pusha
cltd
dec
inc
jle
in
mov
xor
sub
sub
fimuls
movsl
mov
jmp
xor
fildll
sub
pop
mov
shl
pop
lahf
push
je
jl
add
xchg
jg
and
insl
xor
mov
lret
ret
adc
dec
bswap
mov
pusha
inc
fdivrl
xor
pushf
xchg
mov
pop
adc
cld
insb
sbb
sub
arpl
in
mov
lods
xchg
xlat
cmc
and
sbb
or
fldenv
fxch
jae
push
or
dec
pushf
cltd
push
xchg
int3
cmp
xor
std
push
call
into
mov
adc
adc
pop
dec
rcrl
jle
cmp
ret
aaa
sbb
out
jle
ja
lahf
lods
dec
scas
in
loope
lea
adc
in
repnz
inc
ret
js
jae
sbb
into
cld
cltd
and
pop
outsb
pop
pop
ficoml
mov
mov
cmp
sbb
cs
out
sbb
jge
jmp
and
imull
aam
push
inc
sub
adc
pop
aam
adc
mov
fs
in
out
mov
dec
jbe
cmp
lods
test
push
pop
inc
sub
add
and
jge
xor
cmp
jmp
dec
pop
sub
rorl
cmp
cmp
inc
loop
or
ja
lds
xchg
fistps
out
fnclex
mov
inc
cmpl
mov
inc
pop
aas
jge
ja
shrb
push
push
jno
fistpl
push
cmpsl
dec
sbb
adc
mov
pushf
repz
clc
loopne
xchg
sub
roll
js
out
fdivrl
cs
mov
popf
lret
and
jb
inc
jle
lods
imul
cmp
cld
mov
addr16
ljmp
in
xchg
pop
decl
cmpsl
mov
repnz
insb
adc
mov
lea
pop
adc
push
rorb
jne
sub
jae
shufps
dec
lods
cs
scas
adc
push
pop
or
mov
in
clc
mov
adc
mov
ljmp
xor
mov
xor
aad
push
add
mov
sub
out
push
mov
cs
mov
push
es
jbe
orl
out
jo
and
dec
mov
or
and
xor
out
stos
inc
cmp
popa
mov
jecxz
xchg
inc
fucomi
mov
mov
movsl
movsl
int
adc
fucomp
cmpsl
dec
sub
cmp
or
and
enter
mov
movsb
test
in
mull
and
out
sbb
push
inc
mov
push
push
mov
sub
adc
aas
jns
cwtl
aam
cmp
xor
jno
pop
sbb
lea
mov
push
and
pop
mov
cmpb
ss
dec
pop
dec
jl
mov
int3
or
sbb
and
scas
pop
lahf
adc
pop
hlt
mov
arpl
sub
xor
sbb
mov
xor
cmp
sti
lahf
rcrl
into
hlt
pop
mov
inc
jne
fadds
xchg
jb
sbb
in
data16
jecxz
push
push
xor
flds
mov
mov
inc
mov
xchg
dec
pop
mov
dec
sbb
imul
scas
sbb
sti
lahf
or
and
fcomip
stos
pop
mov
ss
sub
cltd
mov
sbb
xchg
dec
xchg
fstpt
jl
mov
mov
jno
movsb
enter
lods
adc
mov
mov
repnz
push
adc
push
ret
into
call
sub
lret
pop
ds
cmp
popa
out
mov
add
ja
jne
jp
vpslld
and
sub
cmp
xchg
mov
mov
push
test
dec
xlat
dec
sub
push
jmp
cld
xorb
push
mov
int
mov
add
daa
push
jb
mov
mov
push
sbb
fwait
daa
stos
mov
in
inc
sub
dec
pop
pop
cmp
or
popa
leave
bound
dec
das
jmp
ds
pop
bound
xor
mov
jmp
add
in
jecxz
test
dec
ficomps
cmp
popa
pop
outsb
nop
inc
inc
add
or
xlat
mov
sarb
xor
mov
add
mov
sbb
pop
jo
jge
cmp
out
jns
outsb
popf
sub
lods
add
data16
xchg
adc
insl
and
rclb
lock
lea
jae
lret
xor
std
in
or
cltd
xchg
cmc
or
lcall
gs
and
jge
jg
mov
jnp
sub
adc
test
pusha
jae
aad
xor
jae
lock
pop
jnp
xor
in
push
push
and
aas
sub
in
lahf
rorl
sbb
leave
mov
out
adc
test
ljmp
push
xchg
cwtl
jmp
std
sti
push
pop
mov
fs
sub
and
fs
data16
sbb
test
sbb
call
dec
mov
js
and
lret
bswap
lds
rcrl
insl
mov
mov
and
enter
sbb
orl
out
jnp
inc
hlt
pushf
shl
jmp
and
xchg
int3
sarb
pusha
pusha
addr16
lock
ret
sbb
sub
int
outsb
sbb
int3
fildll
jp
mov
pop
jns
in
ljmp
xlat
dec
mov
add
xor
clc
les
mov
jae
leave
pop
aas
push
mov
mov
enter
mov
push
daa
leave
js
sub
xor
dec
pop
dec
fwait
cmp
call
sbb
in
outsl
pop
and
pop
push
test
dec
ja
xor
xlat
leave
inc
out
fisubrs
stos
stos
filds
stos
cmpsb
add
test
fs
mov
mov
pop
sub
push
xchg
push
xchg
mov
sbb
sbb
test
xor
cmp
scas
mov
bound
add
cmp
sahf
lcall
aam
add
or
sub
adc
lcall
and
scas
aam
call
and
jmp
push
dec
jb
lcall
fsubrl
sar
loop,pt
xchg
aad
sbb
rolb
push
outsl
notl
insb
testb
or
in
loope
dec
arpl
pop
dec
orl
mov
mov
jns
lret
add
cltd
mov
dec
ficoml
and
jns
call
dec
mov
js
pusha
popa
jecxz
rcl
mov
jle
ljmp
xor
cld
mov
or
add
mov
adc
test
dec
sbb
push
test
aam
jb
mov
add
into
inc
loopne
int
sub
mov
and
call
or
jne
out
outsl
lcall
add
or
dec
mov
adc
mov
in
xchg
scas
test
mov
sti
jbe
insb
push
call
mov
sbb
dec
xchg
cmp
iret
xchg
jmp
mov
xchg
insb
out
push
and
cmp
popa
add
mov
pusha
xchg
enter
cld
fwait
pop
dec
rorl
push
add
sub
ss
enter
jbe
lock
xchg
jge
repnz
fwait
sbb
daa
jo,pn
enter
mov
test
mov
sti
rorl
or
lret
push
fsincos
xorb
xchg
fpatan
jno
push
leave
mov
test
dec
out
pop
push
push
es
mov
push
pop
scas
loopne
mov
xor
add
mov
jne
lods
and
pop
pop
mov
pop
cmp
jno
cld
mov
dec
mov
in
xchg
filds
dec
aad
movsb
cld
sub
arpl
mov
xchg
jne
jns
mov
aad
sub
cmp
pop
dec
xor
orb
inc
ret
push
imul
push
xor
push
adc
and
pusha
or
pop
ficomps
leave
stos
push
repz
scas
xchg
mov
cmp
adc
adc
sbb
or
xchg
xor
out
insl
and
mov
enter
popf
fnstcw
in
aas
jae
adc
sbb
or
mov
cmpsb
mov
cmpsl
push
push
adc
incb
or
sub
test
and
inc
into
aad
or
and
lock
xor
cmp
lods
pop
scas
test
xor
cltd
stos
and
inc
out
sbb
or
adc
or
jge
lods
sub
mov
aad
xlat
pop
test
loop
ljmp
mov
xor
adc
repnz
add
push
adc
lret
inc
and
mov
paddusw
andb
mov
push
repz
test
es
cmpsl
push
ret
test
mov
cld
xchg
andb
repz
call
bnd
lods
sub
push
and
cmp
push
cmpsl
sbb
pusha
addr16
testb
repnz
lods
sub
fistps
mov
and
mov
xor
hlt
jle
fldcw
inc
subb
stos
fcompl
cmp
cld
xchg
andb
div
call
repnz
and
movsb
add
adc
sub
xor
sub
pushf
sub
push
mov
push
sub
cwtl
push
js
mov
int
clc
jae
xor
loope
js
mov
xchg
mov
or
shlb
ljmp
mov
aad
sbb
lret
aam
inc
push
pop
jo
pusha
xchg
pop
pop
and
or
push
fs
lret
pop
shlb
clc
pusha
lods
mov
adc
and
mov
push
fs
or
stos
nop
movsl
sub
or
sbb
pop
xchg
sub
dec
jae
outsl
mov
adc
dec
pop
push
fcmovnu
dec
push
andl
pop
dec
jo
add
cltd
fistpll
insl
sahf
cmp
std
inc
mov
mov
daa
or
mov
cwtl
push
adc
subb
jo,pt
es
xchg
jns
push
cmpsb
enter
mov
xchg
and
dec
sub
xchg
mov
clc
ljmp
dec
jns
mov
xchg
lahf
cmp
les
fisttps
mov
adcl
push
rcll
out
inc
hlt
sbb
lods
cs
jle
mulb
in
lods
ljmp
data16
or
pop
cltd
lea
repz
or
movsb
lds
and
sahf
push
xor
mov
xor
inc
sub
loope
xor
int3
xor
test
lds
dec
fdivs
push
aad
fnstenv
xor
adc
cmp
imul
jo
adc
movsl
cwtl
pop
je
push
adc
fs
jo
adc
pop
and
gs
add
xchg
fwait
push
or
aaa
xchg
jecxz
sbb
cs
pop
and
inc
mov
imul
jnp
and
cli
or
adc
pop
fwait
mov
aaa
and
xor
sbbl
pop
adc
sub
pop
adc
iret
in
mov
fisttpll
push
jo
jae
stos
outsb
xor
out
nop
sub
mov
adc
movsl
mov
pop
adc
lret
adc
pop
adc
pop
in
cltd
pop
mov
push
pop
lahf
sbb
scas
dec
inc
daa
nop
sar
repnz
nop
testb
gs
notb
xlat
mov
cmpsl
push
lods
ret
adc
dec
xor
or
cmp
jno
adc
push
adc
or
imull
and
adc
xchg
fst
jno
daa
sub
or
and
adc
cmp
adc
lret
or
xchg
pop
mov
xchg
add
roll
divl
roll
push
fldl
sbb
adc
roll
repnz
push
lods
dec
push
sahf
cmp
int3
push
outsb
cli
test
or
or
in
pop
sub
inc
roll
xor
mov
std
addb
jb
adc
lcall
mov
cmp
testl
aaa
dec
and
or
lahf
cmc
cmp
mov
push
movsl
dec
sahf
jge
sub
and
or
sahf
in
orl
adc
sub
adc
adcb
addr16
ja
or
hlt
insl
adc
pop
cs
or
fists
dec
icebp
or
ror
pop
adc
inc
sbb
or
jae
ljmp
jmp
push
into
pop
adc
mov
lret
pop
adc
clc
es
jg
mov
push
mov
shrl
scas
shrb
stos
pop
cmp
pop
mov
fs
inc
int3
pop
adc
pop
sub
xor
inc
repnz
stos
push
rcrb
negb
into
sahf
cld
idivl
lret
pop
adc
stos
cmpsb
mov
adc
pop
mov
mov
popa
mov
dec
sub
scas
sub
fs
and
jmp
sub
lods
daa
or
cmp
xor
orl
adc
cs
cwtl
and
mov
lret
pop
adc
mov
or
into
pop
adc
lds
bound
mov
push
mov
xlat
out
call
jbe
jo
adc
xor
add
pushf
jae
ss
pop
repz
jg
jae
adc
or
pop
stc
fdivr
jl
insb
repnz
sar
lcall
mov
cmpsb
push
jae
int3
pop
cmc
rclb
push
pop
in
shl
outsl
or
sbb
sbb
jge
jnp
pop
stos
addl
in
push
stos
sub
and
ret
iret
jb
xor
and
jge
cld
jae
fxch
inc
add
in
movsb
xchg
call
dec
mov
adc
je
cmp
imul
jmp
pop
mov
mov
popa
cld
shlb
adc
lret
mov
mov
stos
inc
add
ret
ljmp
mov
in
aas
loopne
or
pop
jge
je
fmul
pop
adc
push
jge
js
fs
jo
out
cmpl
adc
imul
iret
dec
cltd
imul
inc
and
mov
cmc
lea
and
mov
pusha
js
clc
mov
pop
push
imul
sti
jmp
add
adc
or
inc
jle
sub
cli
cmp
scas
fisubrs
test
mov
push
int3
jle
test
sbb
sbb
xchg
pop
sbb
scas
cmp
push
and
es
into
sub
outsl
and
jno
cmc
cld
xor
pop
loopne
into
mov
in
daa
out
loope
fdivrl
cmp
push
cmp
addb
or
mov
pop
stos
xor
aam
rcl
mov
bound
les
pop
xor
sbb
inc
dec
dec
jle
pushf
ds
lcall
xchg
inc
inc
xchg
mov
pop
sbb
add
jne
sub
ljmp
mov
sub
or
xchg
and
pop
adc
mov
and
sub
or
mov
stos
dec
pop
mov
mov
movsl
push
cmpsb
sbb
mov
mov
xchg
hlt
call
fiaddl
mov
adc
dec
adc
popf
out
mov
jb
mov
call
repnz
outsb
dec
sub
rol
xor
xrelease
mov
into
hlt
call
pop
fmul
pop
adc
scas
mov
adc
pop
inc
mov
mov
aaa
imul
jmp
xor
stos
std
cmp
sbb
mov
js
std
sub
sbb
cs
mov
int
mov
push
icebp
popa
ret
andl
testb
mov
ficomps
lret
mov
mov
adc
lods
dec
and
mov
cmp
jg
jmp
xor
sub
addr16
outsb
sbb
cmpsl
and
adc
out
lret
stc
push
shrb
cmp
idivl
iret
sbb
pop
jae
or
pusha
dec
or
push
xlat
imul
dec
adc
xor
cmove
add
ja
sub
cmc
sub
and
inc
mov
lods
out
or
lea
jp
xchg
scas
lret
xchg
lea
lods
insb
adc
movsl
dec
pushf
add
add
leave
bound
scas
pushf
adc
sbb
push
mov
sbb
pop
jbe
lods
mov
sbb
xchg
shl
xor
adc
imul
sahf
mov
je
push
imulb
mov
aad
out
mov
mov
addb
int3
test
pop
jns
rclb
pop
bound
add
mov
or
sbb
cmp
in
inc
lock
stos
and
out
inc
in
dec
pop
pop
popa
rdmsr
call
dec
lea
inc
int3
mov
dec
mov
push
iret
iret
cs
in
repz
in
jns
xchg
in
and
pop
adc
test
inc
push
test
mov
push
push
roll
adc
and
xchg
mov
das
jmp
in
aam
push
mov
xorl
aaa
shr
insl
fbstp
jl
cmp
mov
fsubs
mov
ja
repnz
dec
je
outsl
test
pusha
stc
jne
cmp
jecxz
jb
les
daa
data16
fidivrs
mov
jb
xchg
or
lods
notl
fmul
pop
adc
cmpsl
xchg
xchg
pushf
scas
dec
jns
mov
xchg
pusha
pop
lock
mov
adc
cs
and
arpl
cwtl
push
adc
imul
mov
iret
pop
adc
cmpb
or
mov
dec
add
cmp
std
mov
pop
jns
mov
sarl
stos
add
out
fsubrl
repz
sbb
iret
pop
adc
rcr
popf
jae
in
xor
fwait
lods
mov
mov
mov
mov
icebp
add
mov
out
jecxz
pop
popf
cmp
enter
lahf
sbb
mov
jb
mov
cmp
sub
push
data16
and
dec
pop
cmp
adc
inc
mov
popf
test
xor
mov
pop
adc
lcall
ret
push
bound
mov
pop
jbe
and
jg
inc
fbstp
mov
in
ficoms
bound
rolb
testb
cmpsl
xchg
add
incb
lock
icebp
and
cltd
sbb
push
xlat
inc
push
stos
push
sub
inc
movsl
loop
cli
insl
daa
stc
pop
out
dec
push
rcll
cltd
in
pop
frstor
and
inc
js
mov
repnz
mov
adc
pusha
push
sar
pop
jmp
push
es
pop
pop
nop
mov
repz
mov
mov
cmp
inc
icebp
add
nop
cmpsb
outsb
insl
and
add
xor
jmp
pop
dec
jno
icebp
mov
or
push
push
rcll
sbb
mov
mov
jae
jae
lock
in
add
mov
push
stos
inc
pop
cmpsl
dec
sahf
mov
adc
cli
add
adc
adc
pop
pop
dec
dec
mov
push
stos
jmp
out
ljmp
jb
sbb
add
pop
ljmp
pop
sar
mov
inc
cwtl
push
cmp
or
cmp
push
add
cmpsl
insl
mov
mov
cmc
test
insb
mov
or
and
pop
imul
lods
hlt
xor
shl
adc
orb
jb
mov
sub
daa
scas
cmpsb
out
ret
test
mov
xor
add
ret
adcl
jmp
fcompl
outsb
push
stos
push
jbe
rolb
shl
push
adc
sub
xchg
mov
aad
stos
mov
stc
popa
mov
loop
adc
stc
cmpsb
add
cli
inc
mov
sub
dec
push
scas
inc
xchg
mov
or
movsb
adc
cs
mov
rol
push
stc
cmpsb
mov
sub
ret
outsb
scas
enter
mov
pop
cli
arpl
lahf
cmp
mov
mov
mov
mov
mov
popf
jp
aaa
shlb
gs
mov
rclb
rorl
fmul
pop
adc
inc
enter
add
mov
enter
pop
add
imul
push
cmc
mov
cld
or
and
das
sub
mov
adc
sub
adc
cmp
xchg
mov
push
or
das
mov
push
mov
lods
es
ljmp
cmpsb
lret
adc
xchg
jmp
push
imul
sbb
dec
xor
and
movsb
pop
ret
and
addr16
add
enter
cmp
adc
ret
subl
pop
aam
sti
or
mov
dec
je
xor
lahf
xchg
stos
and
arpl
mov
xchg
addr16
aas
sbb
jle
movsl
push
cwtl
inc
push
push
jle
push
and
js
nop
push
ret
or
push
cld
test
jno
loopne
push
adc
or
test
xlat
xor
jno
movsb
ja
jg
pop
adc
cmpsb
testl
leave
dec
inc
cmp
cmp
push
mov
ja
loopne
sbb
mov
pop
inc
jae
cmc
arpl
sahf
mov
xchg
daa
mov
nopl
test
dec
cmc
jne
mov
mov
jne
mov
pushf
stc
arpl
mov
cmp
sbb
lcall
jp
xchg
mov
mov
pop
add
sbb
sub
int3
lcall
pop
jmp
adc
jae
add
cmp
out
pop
ret
xchg
add
adc
sub
lahf
mov
cmpsl
cmpsl
adc
jo
xchg
mov
test
aad
popf
out
fdivrl
mov
dec
pop
dec
jbe
or
in
xor
push
hlt
cmpsl
orb
jnp
stos
push
ret
pop
adc
int
dec
stos
push
and
pop
adc
and
jns
nop
jge,pt
mov
pop
imul
push
xor
lcall
push
scas
jl
pop
lock
mov
xor
mov
mov
loope
int3
push
shll
or
insl
sbb
xor
and
stc
rcr
push
andl
mov
movsb
popf
mov
or
sbb
clc
loope
into
daa
or
int
sub
or
lods
add
out
mov
fwait
adc
sbb
sub
add
sbb
imul
push
div
testb
xor
lds
xor
lcall
pop
fbstp
pop
adc
aaa
xchg
and
mov
mov
ja
pop
cmp
mov
sub
push
test
lock
jns
mov
movsl
lds
push
jecxz
jmp
int3
insl
mov
inc
cmpsb
cs
mov
rorl
pushf
call
repnz
outsb
dec
and
cmp
out
ret
ret
icebp
dec
push
mov
stc
arpl
xor
jns
shl
mov
or
push
add
adc
jo
in
jmp
push
test
and
ficoms
faddl
fldt
lds
loop
mov
xor
jne
xchg
cld
lret
out
mov
push
mov
stos
int
push
mov
pop
sub
shlb
mov
sbb
cmp
cmp
xchg
xchg
sub
dec
es
cmp
leave
pop
adc
lcall
and
std
insl
push
jne
loopne
gs
xor
or
pop
sbb
pop
int
ret
and
jns
ss
mov
inc
jnp
mov
push
mov
shlb
lea
sub
sbb
inc
mov
add
stos
les
jbe
pop
dec
in
sub
fcmovnbe
xchg
lcall
mov
ljmp
out
movsb
mov
adc
push
lods
or
sahf
cld
lret
xor
arpl
mov
out
jno
jae
inc
jb
lods
dec
imul
and
scas
repnz
mov
mov
jo
push
adc
cmp
pop
push
pusha
out
jg
scas
rcrl
jmp
and
adc
dec
inc
ret
or
jge
or
and
cld
dec
and
adc
xlat
mov
or
dec
and
adc
or
in
fwait
add
adc
pop
out
mov
lahf
sti
adc
pop
xchg
xchg
push
shlb
push
or
scas
outsl
imul
mov
dec
je
jb
adc
sub
adc
push
mov
or
icebp
jl
inc
sarb
popa
dec
jne
in
cmp
mov
jb
add
dec
sub
and
in
xorb
push
fst
shl
mov
adc
mov
scas
cld
cltd
mov
mov
push
or
or
hlt
sbb
jns
and
adc
js
and
adc
ret
leave
xchg
jecxz
mov
jne
jge
or
adc
test
loop
cmp
or
jp
jecxz
cmpsb
xor
movb
loopne
roll
adc
xor
or
imul
repz
rcll
cli
lods
pop
les
jno
adc
lods
mov
popa
ret
cs
test
ss
cli
sbb
cli
mov
sub
test
cmpsl
pusha
rdtsc
mov
sub
inc
loop
rdtsc
sub
dec
je
cmp
jne
ret
popa
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
addl
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
nop
nop
addr16
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
mov
pusha
int
repnz
sub
push
cmpsb
loopne
mov
xor
mov
aaa
sahf
dec
jo
xor
fbld
jnp
and
adc
fists
add
push
cmpsl
mov
sbb
cmp
lahf
jge,pt
loope
into
pop
adc
inc
test
and
adc
imul
jg
ds
jns
xchg
lret
lods
cmp
leave
jle
adc
push
adc
sbb
or
or
test
imul
adc
lea
xor
push
mov
xor
ret
enter
or
jo
adc
aas
stc
adc
outsb
enter
push
stos
push
movsl
je
sub
out
addr16
scas
cli
mov
mov
stos
call
xchg
push
pusha
test
xchg
lods
adc
adc
mov
cmp
xor
push
jae
mov
mov
shlb
pop
pushf
mov
mov
dec
push
add
pop
shlb
or
or
sbb
mov
int3
push
test
imul
xor
cs
mov
inc
je
push
adc
int3
iret
xchg
mov
mov
push
sbb
xlat
or
mov
or
add
or
out
pushf
arpl
outsl
dec
cmp
ja
push
jbe
add
sbb
xor
cmp
jo
pop
pop
ljmp
shrl
sub
jge
jp
push
xchg
leave
mov
jne
rorb
sub
imul
jl
push
scas
pop
mov
xchg
repnz
jo
adc
xchg
mov
inc
ret
pusha
and
xchg
ss
or
ds
mov
push
jnp
inc
mov
pop
push
and
sub
lahf
clc
jae
push
cmp
popa
out
mov
mov
ds
sub
ret
push
dec
cmp
inc
sti
aaa
ret
mov
adc
pop
shr
lcall
xchg
loope
push
pop
loope
mov
cs
xor
lock
data16
sub
fsub
sbb
push
test
inc
lcall
lock
dec
xchg
fmull
inc
sbb
pop
mov
push
pop
rcrl
sahf
fs
adc
mov
jecxz
push
divb
cmp
xlat
adc
push
sub
pop
pop
jp
sub
stos
mov
inc
lret
mov
imul
js
push
adc
mov
loope
cmp
add
addl
and
jo
xbegin
cmpsb
push
inc
cmp
lds
jge
shlb
adc
ds
or
out
or
inc
mov
mov
and
push
adc
sub
shrb
pop
rcrl
cmp
mov
or
lahf
ds
mov
mov
test
mov
das
aad
int
mov
pusha
dec
imul
insb
jb
adc
movsb
and
jnp
insl
xor
push
out
fdivrl
jle
adc
cmp
in
and
hlt
sbb
leave
or
pop
jge
or
lods
cmp
dec
fbld
in
pop
push
cltd
stos
sub
push
lods
pushf
mov
push
test
sbb
mov
rorl
loopne
xor
bound
xlat
insl
pop
pusha
or
jnp
out
and
scas
mov
ljmp
scas
mov
insb
jb
adc
in
pushf
mov
cmp
add
xor
es
xor
sahf
and
push
sub
movsl
in
sbb
addr16
in
ljmp
hlt
scas
add
lret
inc
dec
push
and
dec
outsl
or
xor
ss
jb
adc
jge
push
fisttps
lock
adc
sarl
test
xchg
fldl2t
cmp
adc
jl
add
shlb
adc
mov
cmc
jo
shlb
or
push
cld
and
or
xchg
or
cmpsl
fwait
jge,pn
movsb
mov
sbb
movsl
ror
push
cmpsl
dec
hlt
cmp
clc
aas
inc
ret
shr
shlb
xchg
sub
movsl
insl
push
mov
dec
lahf
aam
pop
adc
subl
jg
call
adc
inc
aad
push
nop
xchg
movsb
aad
dec
pushf
aas
lock
fistps
add
in
popf
mov
sbb
out
fndisi(8087
jg
fs
inc
pop
push
arpl
or
gs
jb
adc
mov
dec
insb
cmp
jae
cmp
xor
mov
mov
pop
adc
jecxz
clc
mov
push
das
pushf
icebp
xor
aam
pop
push
adc
push
dec
cmp
push
outsl
idiv
ret
pop
jae
in
push
pushf
stos
movsb
js
dec
push
call
ljmp
outsl
in
dec
movsb
mov
lods
out
push
cmpb
aam
xor
xchg
shl
jne
lret
out
mov
mov
filds
pop
cmp
inc
nop
xchg
xor
fwait
mov
cmp
or
dec
cmpsl
and
jge
add
jns
lods
push
and
das
scas
test
imul
test
fnstcw
mov
fcmovne
mov
jp
jne
aam
inc
fimull
out
addr16
lods
es
inc
fisubrs
sbb
push
into
pop
adc
sub
adc
adc
mov
movsb
pop
add
mov
or
in
sahf
cs
rorb
sahf
mov
jns
inc
movsl
enter
pop
nop
jno
push
into
pop
adc
clc
push
adc
adc
or
das
cmp
or
fistpl
stc
fists
jae
xchg
insb
movsb
sbb
mov
in
dec
add
xchg
into
fmul
pop
adc
or
sahf
mov
test
jecxz
daa
fsubrs
fmul
pop
adc
mov
pop
sub
pop
adc
pop
bound
shlb
or
int
mov
xchg
jmp
cmp
pusha
into
pop
adc
cmp
out
or
insb
bound
inc
rorl
adc
and
add
outsb
dec
xchg
pusha
into
pop
adc
imul
cmp
pusha
into
pop
adc
lret
or
test
mov
test
jne
dec
or
adc
push
popa
pusha
into
pop
adc
sbb
orl
adc
pop
jns
hlt
dec
fdivs
pop
adc
test
incl
jo
into
pop
adc
shll
incl
daa
jns
addb
js
into
pop
adc
and
push
jbe
rorl
adc
ljmp
fs
sbbl
aas
mov
dec
mov
or
ret
outsl
nop
jge,pt
sbb
mov
mov
mov
or
out
or
fdivl
shl
add
cmp
out
jb
mov
fstps
insl
dec
dec
leave
aad
push
adc
loopne
stos
xor
je
hlt
call
lea
mov
mov
jl,pn
push
cld
jnp
inc
stos
sti
pusha
into
pop
adc
inc
clc
or
xchg
push
stos
push
shrl
rolb
sub
stos
push
and
sbb
pusha
sub
test
sub
adc
or
or
sbb
lcall
or
or
movsl
sarb
push
xchg
xchg
icebp
fsub
jnp
cli
por
in
imul
jl
or
cmp
dec
sub
in
xchg
mov
test
jnp
int3
sub
xchg
adc
push
jb
sub
fsubrl
jecxz
dec
sahf
and
cwtl
lock
inc
inc
xor
or
sbb
jb
mov
xchg
xchg
push
adc
or
rcll
cli
paddsw
in
gs
lea
xchg
mov
cmp
lock
into
push
jle
daa
or
pop
sti
hlt
pop
dec
gs
dec
pop
shll
xorb
add
cmp
mov
inc
xor
and
pop
mov
mov
nop
pop
fmul
pop
adc
fimuls
adc
mov
xchg
sbb
pusha
pop
jmp
push
pop
inc
adc
enter
mov
inc
fidivrl
cmp
out
sub
out
scas
push
scas
icebp
fmul
pop
adc
jae
pop
fmul
pop
adc
ss
pop
adc
mov
dec
and
adc
insb
mov
fmul
pop
adc
mov
mov
fstp
cmp
jp
fmul
pop
adc
xchg
sbb
iret
pop
adc
inc
andl
fistpll
out
fs
jnp
jmp
iret
pop
adc
jne
int3
pop
jno
hlt
jp
jmp
imul
repnz
popaw
push
shlb
sbb
sbb
inc
mov
cs
mov
cmp
push
ffreep
les
cmpsl
add
adc
xor
fisubl
cmp
test
jmp
daa
gs
test
jmp
xor
inc
xchg
mov
mov
out
xchg
dec
add
scas
and
fcmovu
jle
lret
imul
mov
or
notb
dec
stos
in
incl
cwtl
push
adc
or
jae
push
in
lods
roll
out
cmp
fs
cltd
dec
jae
out
nop
cmpl
jbe
lods
test
pop
pop
mov
jno
and
push
add
incb
adc
pop
mov
sahf
fs
fmull
xor
dec
loopne
popa
fisubrs
mov
cmp
push
dec
in
imul
jo
arpl
addr16
push
adc
inc
int3
mov
mov
cltd
incb
out
mov
cld
daa
sarl
adc
sub
cld
or
or
mov
incb
adc
pop
jo
jb
imul
mov
ret
ljmp
loop
adc
pop
cmp
stos
idiv
push
test
sti
popa
dec
adc
roll
adc
jl
js
aaa
fwait
lret
in
lahf
nop
pop
or
push
arpl
cs
pop
adc
push
notl
sahf
cmp
pop
adc
in
push
adc
pop
adc
xchg
loopne
roll
adc
pop
mov
subl
pop
adc
mov
inc
inc
push
hlt
jge
adc
xchg
sbb
pop
adc
xlat
outsl
pop
pop
jns
push
xchg
push
xor
inc
lock
sbb
or
movl
rclb
sbb
pop
adc
xchg
adc
xor
pop
adc
roll
insl
je
roll
adc
nop
pop
jp
roll
adc
or
mov
dec
mov
call
adc
fiadds
inc
cmpsl
dec
sahf
pushf
and
pop
adc
clc
xchg
lods
in
inc
or
sub
faddl
stos
push
sub
es
iret
loopne
jnp
rclb
insb
orb
pop
jecxz
lea
or
mov
xor
ss
push
mov
sbb
lahf
ds
jmp
push
shll
addb
jmp
push
cmpsl
dec
movsl
cli
and
pop
adc
pop
adc
je
jb
mov
mov
pop
shrb
aad
sub
and
mov
jg
pop
cs
adc
repnz
xchg
sub
push
lock
or
mov
and
adc
stc
mov
shll
addb
xchg
inc
fsubrl
cmp
or
sbb
and
adc
cs
rolb
adc
sub
dec
jno
pop
ficoms
lea
cmc
pop
pushw
decb
ja
adc
dec
lods
rorl
mov
cli
xor
pop
popa
in
push
jns
and
adc
jns
test
xchg
mov
dec
insl
cltd
out
mov
and
adc
push
mov
dec
adc
clc
scas
aam
inc
ds
mov
mov
fcmove
sub
push
inc
es
xchg
mov
stc
fmull
mov
leave
pop
adc
fnstenv
xchg
adc
test
cmc
jne
adcb
xor
fwait
icebp
xchg
inc
loop
adc
jns
pop
inc
cmpsb
mov
aam
inc
test
pop
adc
xor
push
cmpsl
add
mov
sbb
pop
adc
loopne
int3
xor
les
cmp
aad
je
sbb
mov
lahf
arpl
add
lds
adc
jle
sub
inc
mov
iret
adc
mov
loopne
or
push
not
sub
outsb
int3
mov
dec
adcb
jns
fimuls
add
adc
movsb
sub
pop
pop
inc
out
fistps
nop
add
add
pop
adc
jp
xchg
outsl
stc
dec
fmull
int
xchg
popa
mov
sti
mull
sub
jg
out
pop
pop
clc
movl
jo
ss
ja
and
pop
xor
rolb
adc
or
ljmp
in
out
shlb
or
add
pop
adc
popf
jae
fsubs
sahf
loopne
pop
adc
dec
jnp
cmc
xchg
lock
clc
repnz
popa
jne
pop
iret
mov
and
frstor
cli
ss
stc
test
ss
or
pop
adc
jbe
popf
bound
pop
shr
mov
cwtl
sti
mov
cli
pop
lret
pop
adc
push
mov
adc
push
mov
in
pop
adc
adc
data16
dec
cmpsl
mov
aaa
push
xchg
ret
mov
shlb
adc
icebp
and
push
int3
mul
mov
adc
loop
fildl
jne
push
or
pop
jecxz
setle
mov
repnz
int3
out
vpmacswd
sbbb
adc
aad
push
cld
push
adc
cmpsl
push
xchg
test
insl
sbb
jle
clc
sub
shlb
or
leave
in
pop
adc
movsb
loopne
pop
adc
jle
in
pop
adc
pop
adc
jmp
dec
xchg
sub
aam
or
lods
xor
roll
adc
test
clc
bound
popa
roll
mov
pop
adc
sub
pop
ret
test
idivb
xor
or
cli
jne
icebp
sub
push
or
adc
xor
add
andb
adc
loope
fidivrl
and
ljmp
sti
and
jge,pt
push
and
pop
adc
dec
mov
pop
add
push
rol
addr16
fs
adc
mov
andb
add
inc
loope
das
sbb
pop
adc
inc
or
cltd
push
jb
iret
lahf
mov
push
sti
insb
xor
fisubrl
mov
fmuls
xor
sbb
cwtl
int
xor
sbb
call
push
adc
push
and
je
sub
mov
jnp
cmc
jo
shll
gs
sbb
push
outsb
push
inc
dec
sahf
cmp
pop
adc
adc
xchg
stos
mov
xor
lret
cmpsb
shrb
movsb
lods
xchg
cmpsl
xchg
test
xlat
cltd
push
sub
jns
in
pop
push
roll
adc
jmp
adc
cmpsl
inc
test
mov
ror
lea
xor
lret
outsl
stos
mov
daa
adc
mulb
bound
mov
adc
or
out
mov
pushf
dec
jae
insb
loope
jle
mov
or
shll
pop
xchg
sub
pop
out
aas
lds
sbb
jnp
mov
jecxz
mov
hlt
adc
xchg
je
cmp
movsb
and
adc
mov
pop
adc
ja
loop
cmp
push
or
dec
fimull
xor
cmpsl
aaa
imul
cwtl
push
mov
inc
add
dec
jg
out
inc
pop
roll
adc
ret
les
or
nop
pop
adc
jp
enter
xchg
pop
sbb
pop
adc
leave
jno
addb
clc
xor
adc
inc
les
push
adc
xor
and
sbb
push
cltd
xor
sbb
scas
push
lret
mov
push
xorb
sbb
lds
pop
jae
data16
xchg
pop
pop
cmp
loop
stc
test
mov
ret
jae
scas
push
testb
push
roll
xor
enterw
shrb
negl
lret
pop
or
stos
lds
repnz
mov
mov
shlb
or
lret
mov
inc
aam
or
das
inc
dec
lock
dec
es
addr16
jmp
pop
jno
inc
dec
outsb
jbe
mov
pop
adc
sub
mov
or
push
pusha
popa
push
test
or
push
push
cmp
repnz
lods
mov
sub
jo
daa
or
negb
adc
or
cmp
mov
sub
adc
mov
xchg
push
into
pop
adc
add
adc
fidivl
or
or
bound
cs
fmul
pop
adc
mov
fs
mov
pop
adc
cmc
adc
iret
cmp
popf
add
iret
pop
adc
push
or
adc
cmpsl
imul
mov
in
adc
andnps
fistps
cmc
fildl
jns
push
movsl
mov
shr
nop
sub
pop
ja
sahf
xchg
add
jbe
pop
mov
jle
jl
add
rcr
gs
outsl
xchg
jae
pop
negb
movsl
cmp
les
aaa
ret
lret
adc
aad
sub
movsl
inc
stc
adc
lods
push
fcoml
pop
push
mov
repnz
fistl
pusha
scas
lds
xor
stos
push
test
cmp
cmp
push
adc
loop
or
stos
int
adc
push
test
cmp
inc
jae
mov
add
push
pop
mov
rcl
push
inc
pop
mov
cmpsl
les
fwait
hlt
gs
mov
das
inc
scas
mov
sbb
lods
sub
mov
shrl
pop
iret
dec
lahf
cmp
mov
xchg
into
fwait
jno
hlt
call
icebp
sub
nop
inc
mov
fs
sti
aad
xchg
adc
xor
testl
movsb
inc
lods
sbb
dec
stos
push
test
cmp
cli
xchg
ja
loop
or
pop
decb
outsl
roll
xlat
adc
cmpsl
dec
sahf
cmp
lods
jae
lret
jge
or
adc
dec
in
incb
adc
xor
push
fsub
inc
sbb
paddsb
movsl
clc
scas
lret
sbb
or
ja
sub
sub
push
xlat
in
pop
cmpsl
jne
test
sub
ret
nop
stos
mov
dec
mov
pop
pop
fisubrs
dec
sahf
inc
imul
cmp
inc
stos
or
idiv
jmp
mov
outsl
shrl
and
cmp
js
lea
adc
mov
mov
test
pop
and
inc
int
test
test
xor
cs
daa
icebp
mov
fnsave
insl
xor
nop
inc
xchg
mov
inc
lock
ss
in
push
mov
pop
in
addr16
daa
aam
xor
adc
bound
ja
dec
inc
jns
mov
aam
inc
mov
inc
jb
fisttpl
scas
aam
clc
scas
stc
scas
mov
adc
push
mov
adc
push
push
shr
sbb
cld
cmpsl
ss
pop
push
pop
mov
and
adc
outsb
lahf
int3
jae
push
xlat
in
add
mov
int3
xchg
push
pop
stos
cmp
inc
xlat
mov
inc
ficoml
lea
popa
dec
xor
test
insl
dec
add
mov
sub
imul
pushf
imul
mov
jecxz
inc
dec
jb
and
push
ficoms
fcomp
jle
xor
outsl
ficoms
and
mov
movsl
cmp
mov
lea
sub
add
ja
int
push
mov
sub
in
divb
rcll
inc
push
mov
push
ror
push
fsts
das
mov
data16
adc
add
push
bound
jnp
push
pop
push
popa
or
xor
daa
and
das
test
xlat
fs
jb
inc
mov
jmp
inc
aas
sbb
xchg
decl
cmp
jl
pop
shll
loopne
outsb
xor
mov
sbbl
pop
andl
iret
inc
loop
mov
sbb
push
js
incb
adc
lds
cmc
insl
adc
ja
xchg
mov
divb
or
std
mov
push
dec
leave
rcrl
dec
sub
cld
pop
mov
outsb
jmp
js
movsl
nop
inc
lds
mov
jbe
pop
xlat
xchg
movsl
sbb
enter
pop
fidivrl
fdivrs
adc
test
add
out
push
and
test
push
and
dec
jecxz
int
jae
loope
std
fs
sub
jle
fwait
jge
rep
pop
cmp
or
pcmpeqb
jp
int
xor
sub
aad
mov
aad
push
adc
cmp
jns
jno
shll
stos
fisubrl
shrb
loopne
jnp
fnsave
push
out
addr16
cmp
gs
inc
push
repz
xchg
fnstsw
cmp
lahf
mov
shrl
mov
popl
fists
dec
pop
dec
xor
xchg
iret
lahf
addr16
xor
in
pop
xor
stos
or
xchg
fnstsw
xchg
mov
mov
pop
xor
push
stos
inc
inc
inc
out
mov
insl
test
jae
pusha
aad
adc
shll
andb
xchg
out
adc
iret
mov
mov
cs
dec
push
int3
fstpl
sub
repz
popa
dec
jae
in
mov
sbb
or
cs
mov
out
scas
push
lods
sub
lcall
push
decl
mov
cs
dec
push
push
cmp
fistps
cmp
pop
adc
out
and
or
andb
fmull
imul
cmp
test
dec
jge
jmp
movsb
xchg
int
and
cmp
and
and
sbb
or
lret
enter
nop
push
add
pop
cmp
and
mov
mov
sub
adc
and
push
xchg
xchg
and
inc
adc
push
psubusw
mov
test
lret
push
lock
cmpsl
stos
fidivs
adc
fists
inc
add
xor
sub
incb
daa
pop
mov
push
insb
dec
push
adc
out
sbb
imul
and
fstpt
stos
jnp
push
dec
data16
in
cmpsb
rclb
addr16
push
inc
pop
jo
sub
cld
arpl
xchg
repnz
jecxz
shrl
mov
sub
imul
mov
pusha
dec
decl
jg
mov
push
dec
xor
into
inc
xchg
loopne
sbb
sahf
and
into
mov
mov
fisubs
push
lods
cmp
mov
cwtl
outsb
outsl
jnp
xchg
and
es
jg
mov
rorl
adc
nop
ljmp
insw
pop
mov
pop
icebp
cld
inc
push
and
xchg
xor
xor
in
cmp
cmpsl
add
inc
fnsave
stc
test
out
mov
xor
lock
sub
les
les
loopne
xor
stc
ret
test
cli
out
out
pop
mov
test
inc
mov
and
sahf
push
dec
loopne
stos
pop
xor
das
mov
inc
loop
dec
ret
adc
lret
mov
ljmp
inc
dec
mov
cmp
sbb
adc
xchg
jmp
adc
iret
xchg
xorb
popa
ret
xlat
push
imul
adc
cmc
dec
inc
push
jle
xchg
pop
popa
loope
mov
push
xlat
je
pushf
bound
and
adc
mov
shrb
jge
test
push
mov
xchg
xor
loop
mov
inc
icebp
fdivr
cwtl
or
test
pop
cltd
xchg
popa
loop
std
cmp
add
jae
jle
pusha
lcall
loopne
mov
adcl
push
adc
sbb
mov
mov
cmp
xchg
jns
mov
iret
nop
push
in
stc
mov
adc
ret
fdivrs
xchg
mov
hlt
insb
adc
fs
int3
ds
dec
mov
lods
pop
push
and
jle
loop
jecxz
jge
jg
fsts
mov
push
aam
stos
and
rcr
push
sahf
dec
adc
repz
xor
and
stos
cmpsb
push
fiadds
imul
repz
fcmovnbe
movsb
lods
add
divb
pop
subb
stos
fmull
mov
sub
mov
dec
mov
cs
data16
sub
and
dec
ja
push
mov
pop
push
dec
cmp
xchg
fldl2t
cmp
pop
test
cltd
mov
sbb
lcall
cmpsb
add
xor
cmp
pop
lret
push
stos
lock
or
sub
sbb
mov
movsl
movsb
int
push
ss
xor
out
ljmp
inc
outsb
divb
cmp
icebp
and
xor
aad
adc
push
jo
jp
data16
xor
and
or
add
push
orb
ja
mov
push
jno
sbb
ja
or
hlt
mov
leave
inc
gs
out
sub
xchg
inc
and
adc
xor
lret
or
loop
fwait
or
sar
test
scas
aas
stos
pop
cmp
cmp
pusha
jb
adc
fdivrp
sub
adc
insb
gs
xchg
sub
lods
test
adc
and
paddsw
mov
ds
cmp
cld
sub
adc
mov
popa
lea
add
or
popf
dec
adc
mov
ds
xchg
sbb
or
sub
adc
cli
fcomp
jo
adc
out
mov
push
pusha
push
or
sbb
jg
ljmp
ds
psubusw
sub
adc
in
pop
mov
sub
adc
sti
sub
sbb
call
ss
cld
sub
adc
call
inc
push
movsb
jb
adc
arpl
sub
adc
cmpsb
mov
add
adc
xchg
fchs
sub
adc
or
add
sub
adc
dec
cld
xchg
sub
adc
sub
adc
sbb
adc
sub
adc
arpl
cmp
call
in
movsl
cmp
je
outsb
mov
mov
das
cmp
lds
and
sub
jnp
xlat
jmp
xor
cmp
imul
cmpsb
sbb
or
decb
sti
jg
push
push
mov
icebp
scas
sbb
xlat
fldlg2
mov
jb
push
adc
cmp
scas
jo
sbb
in
ret
stos
and
out
insb
in
dec
pop
test
pop
movsb
cwtl
jnp
lock
lcall
push
loop
adc
sub
jle
mov
mov
push
and
inc
xchg
sbb
pop
xor
int3
pop
mov
in
outsl
inc
sub
pop
aam
cmp
xchg
out
stos
jle
fcoml
cmp
aad
and
fisttps
or
jmp
cmp
sbb
mulb
mov
mov
jp
cmpsb
xor
cmpsb
aaa
xor
mov
add
jmp
rol
dec
push
out
loope
aad
sub
push
push
push
movsl
int3
lret
fadds
xchg
mov
xor
mov
lock
mov
xchg
jge
iret
xchg
and
jmp
cld
mov
cmpsl
fimuls
movb
repnz
ja
mov
cmp
adc
repz
pop
add
xchg
mov
shlb
push
stos
out
cmp
mov
insb
mov
test
lea
push
shld
sub
sub
outsb
mov
es
pusha
jns
test
pop
in
inc
add
cmp
in
fdivl
sub
mov
sbb
incb
lea
loope
adc
push
sub
jb
push
fdivrl
in
xchg
ja
push
xchg
stos
pop
xor
mov
dec
sahf
cmp
hlt
jnp
xchg
fwait
mov
sbb
shll
out
insl
outsb
push
stos
push
mov
mov
jle
in
inc
clc
mov
jg
call
sub
adc
pop
mov
clc
sub
adc
fdivl
adc
mov
dec
mov
rcl
sub
pop
clc
lods
jno
xchg
clc
sub
adc
sub
adc
cmp
stos
push
test
fsubrp
inc
and
sub
adc
push
data16
loopne
or
arpl
xchg
loopne
or
and
rcr
or
dec
jb
mov
inc
shl
sub
adc
cmp
movsb
lret
sbb
sbb
push
orl
sub
adc
adc
cld
sub
adc
pushf
jb
adc
sub
adc
adc
lods
shll
pushf
mov
push
loopne
or
int3
pop
adc
push
movsl
gs
mov
ss
sub
out
pop
sub
sub
adc
mov
dec
jns
cltd
loopne
add
sub
adc
lock
adc
in
pop
add
jg
clc
sub
adc
push
in
or
pop
push
hlt
sub
adc
cwtl
stos
nop
nop
sarb
jnp
movsl
sub
clc
call
adc
adc
jge
jb
adc
and
jo
hlt
sub
adc
cmp
sub
adc
sub
adc
adc
cmp
scas
inc
cld
cmp
or
jae
cmc
mov
cli
jmp
mov
cmpsb
outsl
jns
hlt
xor
dec
shll
jns
jmp
jo
adc
andl
test
int3
push
fimuls
sub
pushf
jb
adc
popf
adc
sub
or
test
or
add
clc
xchg
out
icebp
push
mov
jae
neg
push
xor
hlt
mov
dec
and
dec
add
cmp
imul
sbb
rcrl
cmp
dec
dec
popa
in
pusha
push
and
shrl
into
push
hlt
bound
je
enter
repnz
fcmove
inc
or
loopne
push
adc
imul
dec
mov
jmp
hlt
cli
frstor
js
adc
ret
ret
mov
sub
fucomp
jbe
sti
int
roll
dec
mov
or
jbe
lea
lret
push
or
sar
lcall
outsl
out
xchg
fcompp
aam
in
ret
adc
mov
push
add
into
xchg
sub
pop
cmpsl
jmp
lahf
scas
icebp
sub
push
dec
mov
imul
push
cwtl
inc
jbe
mov
xor
into
cmp
aam
aaa
lods
xlat
cs
into
xchg
mov
adc
mov
pop
mov
dec
roll
iret
out
hlt
mov
add
inc
xor
nop
push
movsb
mov
mov
enter
stos
sahf
cmc
or
xor
aam
les
jg
and
dec
cmc
jl
mov
push
out
fidivrs
mov
jbe
cmpsb
fcomip
jo
jne
xchg
stos
test
adc
aaa
xchg
loop
dec
xor
in
aas
add
and
adc
fsubs
and
sti
ret
jb
enter
je
cmp
cmp
or
jns
rcrl
mov
cmp
jb
call
xchg
fwait
mov
bnd
aad
pop
mov
pop
and
mov
jp
adc
out
adc
lods
pop
int
push
hlt
xchg
shl
push
imul
mov
ds
mov
in
push
fs
ljmp
xchg
push
and
lods
fdivr
dec
pop
jbe
jl
fadds
mov
std
lock
pushf
mov
dec
cltd
lret
out
scas
daa
mov
ficompl
jne
and
jae
dec
dec
aad
mov
loope
add
mov
xlat
inc
test
ffree
imul
fdivrl
mov
je
lock
xor
lcall
je
xchg
sub
hlt
ret
jge
rcrb
mov
push
and
push
jge
aam
imul
fmull
jge,pt
jns
shlb
inc
mov
and
pop
ret
xchg
js
jecxz
sbb
inc
jae
in
call
push
mov
push
cmpsb
daa
dec
sahf
cmp
inc
ja
dec
popa
add
stc
sahf
xlat
and
mov
adc
dec
push
dec
bound
push
xchg
leave
fwait
leave
scas
fldt
clc
cmp
inc
dec
and
inc
pushf
jne
aaa
icebp
ljmp
jge,pt
or
movsb
movsl
int
adc
shll
or
cmp
stos
mov
test
jo
stc
rcl
mov
sub
daa
cmpsb
daa
mov
push
mov
outsb
mov
mov
lock
xlat
sub
pop
icebp
pop
and
out
outsb
cmc
mov
in
xor
js
shll
popa
rcr
pop
and
inc
push
out
je
fdivrl
jb
cmp
rcrb
test
out
xchg
inc
loop
pop
mov
pusha
arpl
xchg
and
sbb
stos
sbb
push
popf
mov
nop
int3
stos
into
call
push
sub
mov
ljmp
into
outsb
or
sub
adc
pusha
call
iret
enter
cld
adc
ret
fisubrl
mov
xor
in
dec
test
push
test
cmp
aaa
jae
lods
lahf
jne
dec
cmpl
adc
pop
idivl
lods
xor
in
addr16
mov
into
in
movsl
and
cli
mov
sahf
call
shl
fmul
push
or
sub
add
mov
addr16
sub
adc
popa
jno
clc
ja
inc
rol
cli
pop
bound
fnstenv
nop
push
or
inc
popa
subl
jle
adc
int
call
imul
leave
out
xor
fcmovnu
mov
in
dec
bts
bound
jl
inc
xchg
sahf
sti
icebp
cmp
incb
cmp
xchg
add
adc
or
mov
lret
xchg
add
adc
pop
xchg
cmc
mov
add
pop
mov
and
xchg
je
adc
clc
push
jnp
pusha
mov
jg
jp
outsb
test
mov
dec
lret
ror
jae
js
cbtw
sbbb
in
dec
xchg
pop
or
mov
xchg
out
lods
mov
pop
jbe
mov
lock
mov
stc
loop
enter
inc
aas
in
push
and
call
inc
and
test
jne
imul
rcrl
and
sbb
sahf
cmp
jbe
or
rol
lock
in
es
shl
push
ss
out
fdiv
fsubr
lods
test
lods
mov
sbb
mov
in
and
mov
sbb
add
mov
aad
push
daa
sub
and
clc
adcl
divb
lods
mov
lods
stos
pop
sub
lcall
clc
popf
push
inc
jne
jo
shll
out
pop
push
and
scas
in
repnz
ljmp
mov
dec
mov
push
xor
out
push
xchg
sub
jg
int
les
mov
hlt
push
adc
loope
adc
orb
shll
cwtl
push
pop
addr16
ds
jns
xor
lea
mov
cmp
scas
sub
push
stc
jnp
out
push
notl
std
sub
loope
sub
jne
cld
push
fisubs
pop
and
mov
jo
jl
sub
mov
ja
mov
jns
cmp
sbb
sub
fstl
loopne
or
test
movsb
xor
sub
adc
or
stos
fsubp
test
pop
sub
daa
pop
inc
pop
jb
adc
roll
adc
add
or
sbb
adc
lret
adc
idivb
adc
ljmp
sbb
ret
jo
adc
jno
pop
les
and
adc
jecxz
and
cmpsb
dec
cmc
cmp
mov
and
mov
pop
adc
cs
rcll
jns
nop
aam
adc
jg
or
xor
adc
push
inc
pop
movl
stos
mov
push
adc
mov
push
adc
push
fcoms
sub
cmpsl
je
push
test
fdivs
adc
mov
mov
pop
in
ret
in
cltd
fwait
int
out
shrb
out
push
int3
sbb
sub
dec
movhps
add
inc
ljmp
xchg
sbb
push
xchg
pop
lea
lret
pop
push
adc
sbb
mov
mov
pop
adc
jmp
popf
pop
add
fbld
sub
lods
jne
xchg
shl
lret
sub
or
or
inc
icebp
out
push
aad
rcll
and
and
mov
xor
cmp
js
mov
add
es
sbb
mov
lods
lret
mov
fldcw
flds
std
ret
sahf
out
pop
or
cs
repz
in
mov
sti
roll
pop
adc
dec
lods
mov
pop
adc
inc
jo
insl
into
sahf
jl
mov
mov
push
xchg
inc
ret
fwait
cmp
inc
gs
xchg
push
imul
inc
arpl
push
cs
jp
in
xchg
dec
imul
sub
push
mov
push
cs
push
jbe
sub
adc
dec
lock
jno
dec
dec
jnp
roll
adc
xor
or
xlat
cltd
pop
hlt
clc
test
jne
xor
ret
mov
xor
adc
lret
push
adc
mov
sbb
xor
fwait
hlt
jo
adc
sar
adc
add
push
adc
sub
or
sub
xchg
test
push
adc
mov
push
push
push
mov
sub
or
in
xor
pushf
pop
cmp
adc
adc
adc
xor
jb
adc
sbb
jb
adc
imulb
or
ljmp
or
fstl
sub
or
sbb
roll
adc
jbe
call
pop
add
and
shll
dec
push
repnz
or
jg
pushf
lret
fs
nop
aam
adc
sub
push
adc
mov
addb
pop
loop
sbb
fstps
mov
inc
shlb
popa
aad
or
and
or
lahf
or
cmp
cmp
jmp
mov
sbbl
cmc
ss
dec
sbb
in
lret
insb
roll
adc
imul
jnp
ds
mov
mov
adc
sub
lret
cwtd
cbtw
cld
fmuls
jb
sub
daa
ret
push
jnp
jno
loopne
pop
xor
test
pop
sbb
ret
mov
fs
orb
shll
rcl
stos
push
stos
add
popa
pusha
and
imul
cmpsl
xor
cmpsb
sbb
negl
fs
ja
iret
pop
xchg
hlt
call
sbb
cltd
xchg
lock
shrb
adc
rol
sub
adc
test
or
add
shrb
or
incl
clc
clc
mov
mov
jbe
les
pop
adc
sub
gs
loopne
sub
adc
fs
adc
pxor
jb
iret
nop
mov
loop
into
or
fstl
fisubl
mov
lea
out
ljmp
lods
icebp
xchg
stos
out
push
mov
arpl
cs
pop
jnp
push
fistl
sbb
and
sbb
or
xor
jge
lcall
mov
mov
sub
xchg
aam
scas
pop
movsb
ljmp
out
fstpt
repnz
or
jno
xor
jp
insl
xor
daa
mov
mov
mov
and
mov
and
cs
ffreep
sub
adc
sbb
flds
leave
or
jns
inc
dec
xor
int3
cld
cltd
lods
repnz
lret
sbb
jl
imul
iret
pushf
adc
sbb
push
jge
mov
or
into
cmc
mov
pop
push
outsl
sbb
or
add
sbb
dec
xchg
shrl
adc
jl
movsb
loopne
add
sub
adc
xchg
cmp
addr16
lret
popa
jnp
jmp
hlt
dec
adc
sub
adc
pop
insb
rorl
in
sub
adc
loop
testb
movsl
mov
or
aam
cs
inc
push
loopne
or
pop
cmc
je
and
sub
lods
sub
add
dec
loope
testb
cli
lods
mov
faddl
dec
xchg
popa
das
and
mov
mov
jge
mov
and
mov
or
cmp
pop
xlat
mov
or
popf
jl
inc
mov
movsb
sub
adc
xchg
push
je
movsb
sub
adc
shl
es
or
pop
sbb
ret
lcall
mov
push
into
mov
in
ja
imul
leave
pop
adc
in
movsb
jb
lds
iret
test
push
test
mov
stc
cli
xchg
pop
adc
sbb
jmp
scas
in
push
xchg
int3
jbe
dec
fcompl
fs
adc
jb
ljmp
stos
xchg
inc
xchg
push
pop
add
shrb
adc
les
or
std
hlt
mov
mov
mov
popa
fbstp
add
shlb
in
inc
adc
shrl
jns
inc
hlt
sarl
dec
mov
or
imul
lret
shlb
push
inc
in
movsb
mov
pop
adc
jo
cmp
pop
imull
subb
and
scas
jo
pop
adc
adc
in
pop
sbb
stos
mov
sub
jg
das
push
cld
jnp
les
or
cmp
adc
test
jl
pop
adc
push
push
shrb
or
push
popf
mov
dec
sbb
adc
outsl
imul
or
sarl
sbb
pusha
or
push
sub
sub
adc
xchg
stos
stos
push
test
aad
or
and
mov
jo
sub
adc
add
test
or
pushw
shrb
or
xor
in
cmp
or
dec
jae
xchg
adc
pop
scas
add
lret
push
test
add
and
mov
push
pop
push
imul
xchg
push
out
push
movsb
mov
and
adc
outsb
repnz
or
jg
fldenv
mov
sarb
or
test
cmpsl
dec
popa
sub
push
adc
fs
bound
cmp
adc
fs
adc
push
clc
sub
cmp
or
sahf
jge,pt
push
shlb
or
add
cmp
or
cmpsb
xlat
sbb
sahf
cmp
or
outsb
mov
lock
xlat
push
in
aaa
push
inc
aad
stos
push
or
pop
dec
cmpsl
int3
sbb
ja
addb
mov
inc
add
sub
adc
or
adc
xor
outsl
mov
scas
fcoml
call
xor
pop
loopne
sub
adc
movsl
es
mov
mov
gs
and
sub
adc
out
jnp
jns
sbb
sbb
pop
negb
cld
pop
das
loopne
or
out
sahf
dec
scas
push
mov
add
and
movsb
sub
adc
mov
cmpsl
pop
mov
lret
pusha
xchg
sbb
lds
into
test
nop
loop
scas
cmp
jns
mov
cmp
adc
jno
cmp
inc
inc
lcall
lods
cmp
add
mov
dec
mov
lea
test
push
ljmp
pusha
pop
jecxz
repz
imul
imul
loopne
sub
icebp
retw
loope
jmp
push
mov
clc
bound
xor
dec
jb
cmp
push
loope
mov
es
lods
loop
jmp
push
aas
dec
cs
xor
loope
in
clc
mov
fstpl
cmp
popf
stos
fldcw
dec
and
adc
out
sbb
jae
sahf
aad
jno
rorl
pushf
push
and
adc
jbe
aas
mov
cmp
notb
test
adc
je
mov
in
xchg
insb
adc
and
aad
in
inc
mov
popf
scas
lret
not
dec
and
pop
add
jle
push
or
cwtl
fldenv
fsubrs
sti
loope
push
or
push
adc
lahf
push
in
mov
gs
outsl
mov
mov
imul
mov
dec
pop
lods
stos
push
mov
mov
clc
mov
pushf
or
or
lock
repz
mov
dec
and
adc
cmpsb
xor
clc
adc
and
adc
gs
faddl
call
add
les
dec
jl
fistpl
and
adc
popa
cmpsb
mov
cli
stos
sub
mov
cld
jb
dec
and
adc
or
xchg
inc
pusha
jo
adc
aad
sbb
sub
mov
adc
xor
jo
adc
sti
pushf
nop
and
adc
mov
fisubrl
das
push
stos
push
push
cli
push
and
adc
or
mov
add
jg
scas
push
and
adc
test
mov
mov
and
adc
pop
cmp
out
and
inc
daa
push
and
and
adc
xor
xor
pushf
nop
and
adc
fdivl
push
stos
sub
jl,pn
pop
push
arpl
leave
pop
adc
pushf
sahf
or
mov
fwait
cld
fsubr
lods
stc
lods
mov
jb
adc
mov
pop
xor
pop
push
xor
adc
pop
stos
mov
jl
mov
pop
mov
push
adc
and
leave
pop
adc
mov
pop
adc
mov
xorb
xlat
sahf
jge,pt
clc
add
adc
je
leave
pop
adc
push
inc
out
xchg
and
adc
adc
push
jae
add
dec
jb
insb
xor
test
cmpsl
dec
lods
std
cmp
inc
fidivl
xor
add
adc
mov
sub
and
pop
adc
fwait
sahf
cmp
add
pop
adc
movsl
add
pop
pusha
incl
adc
out
rcll
sahf
mov
sub
and
mov
mov
adc
push
in
incl
adc
shlb
push
lods
mull
mov
xor
cmp
pusha
shl
movsb
add
and
stos
fisubrs
lods
xchg
and
cmp
or
push
pusha
jmp
pusha
rolb
sub
push
adc
inc
enter
into
pop
das
sub
mov
jnp
jmp
insb
dec
xchg
sub
xor
pop
add
mov
push
inc
incl
adc
adc
xchg
scas
push
add
mov
leave
imul
aas
test
cmp
out
mov
sarb
jb
mov
push
adc
data16
xor
decb
pop
popf
fsubl
xlat
adc
and
andb
sub
fwait
in
or
flds
iret
mov
cmc
rolb
mov
aad
and
adc
dec
mov
cmpsb
mov
gs
mov
and
adc
xchg
fcom
mov
rorb
add
jno
adc
cwtl
and
adc
fcomip
cwtl
and
adc
adc
add
adc
hlt
or
aaa
sbb
sub
adc
sarl
sbb
test
push
lods
hlt
rol
mov
and
inc
xor
aam
divb
in
push
inc
mov
rol
stos
cmp
jle
iret
repnz
jb
popf
cld
cmpsl
mov
or
dec
pop
xchg
jb
adc
out
sbb
push
addl
sub
add
gs
xchg
popa
push
fsts
push
xchg
xchg
sub
or
or
pushf
sbb
fwait
rcr
jo
inc
xor
pop
add
repnz
xchg
xchg
push
add
mov
xor
push
mov
cs
hlt
cmp
popa
push
cmp
lock
pop
adc
mov
adc
cmp
stos
mov
jecxz
cmp
call
xor
cs
enter
lret
lahf
inc
inc
push
fisubrs
inc
mov
sub
mov
into
enter
mov
jne
xchg
jmp
rcrb
or
mov
daa
or
mov
mov
je
xchg
in
enter
pop
adc
stos
adc
cmpsl
sub
xchg
sbb
addr16
sbb
dec
add
insl
andb
movsl
daa
jnp
insl
sbb
inc
jno
sub
in
dec
lods
icebp
and
push
push
test
cmc
pop
jle
sarb
mov
mov
xlat
inc
push
arpl
jecxz
rcrl
pop
push
aas
test
loope
jns
jmp
and
sub
sbb
das
pop
mov
sub
push
mov
mov
mov
mov
insb
orb
fisttpll
jb
lret
push
and
jns
es
fwait
mov
mov
adc
mulb
or
fmull
outsl
loope,pn
mov
push
inc
dec
sub
sti
adc
sbb
pusha
jge
les
pushf
and
test
hlt
push
imul
pusha
ret
add
and
pop
adc
add
jecxz
adc
out
loopne
push
pop
les
fnstsw
out
xor
push
sbb
jb
js
shll
adc
sub
adc
sbbb
xchg
enter
add
xchg
lds
mov
imul
aam
add
adc
out
jns
pop
dec
pop
sbb
pop
adc
inc
push
stos
pop
out
lds
dec
popa
sbb
cmp
dec
sar
xorb
pop
out
add
popf
jecxz
push
fsubr
nop
and
add
loope
jp
pxor
add
cld
and
popf
fiadds
mov
cwtl
cmp
mov
pop
leave
lahf
ds
mov
in
cmp
sbb
fs
test
add
xchg
xor
fnstsw
sar
jmp
cmp
out
xor
aam
dec
pushf
aas
repnz
pop
jnp
mov
imul
push
in
orb
push
test
adc
inc
and
repnz
stc
xor
xchg
nop
test
in
aad
daa
dec
push
fcomps
scas
push
cs
mov
mov
adc
jb
out
cmp
or
xchg
ss
mov
sbb
or
mov
mov
imul
fnstsw
mov
dec
notb
lds
mov
jl
lret
sub
mov
fwait
inc
enter
movsl
roll
dec
cmc
mov
mov
sti
in
or
jl
sti
imul
cmc
cmp
js
outsl
add
shrl
cltd
sub
mov
cmp
pop
jg
stos
jle
jbe
daa
xor
sub
push
dec
sbbl
cwtl
add
shll
arpl
push
sub
lds
rcll
fisubrl
fs
test
int3
fdivp
subb
sub
in
jnp
lcall
xor
and
dec
mov
ret
pop
lret
inc
add
pop
dec
fdivp
sub
dec
push
cmp
orb
push
in
xchg
arpl
xor
or
lcall
sti
fidivrs
test
out
es
xor
call
or
adc
xchg
in
inc
xchg
in
dec
daa
push
mov
out
imul
xor
inc
shlb
dec
dec
int
pop
lcall
jnp
fsubs
cmp
lods
jmp
ds
cmpsb
lret
push
mov
out
push
std
addl
adc
iret
inc
sub
sbb
xlat
into
adc
js
leave
fcmovnbe
enter
lea
or
fs
xchg
pushf
stc
xor
pop
js
mov
push
int
subb
sbb
loop
popf
cmp
jbe
pop
cmp
scas
cmc
icebp
icebp
mov
jns
mov
cmpsl
xchg
popa
add
lret
cmp
loopne
mov
mov
inc
dec
mov
fimuls
popw
xchg
mov
cmp
and
hlt
call
movsb
xor
je
sub
mov
adc
fdivrl
cmp
cmp
popa
pop
inc
inc
lea
fsubl
xlat
stos
push
and
js
imul
fdivrl
jnp
adc
ljmp
push
scas
fisubrs
mov
push
cmpsl
faddp
aaa
lcall
dec
pop
or
sub
xchg
js
mov
js
pusha
or
cmp
imul
xor
sbb
fsqrt
sbb
sub
rolb
adc
adc
add
loop
dec
sahf
dec
jne
adc
mov
jge
hlt
add
sbb
sbb
test
in
sahf
cmp
push
insb
mov
and
hlt
call
in
out
adc
fstl
and
les
jge
jg
cs
rorb
fidivrl
das
mov
push
cmpsl
faddp
repnz
roll
mov
inc
fidivrl
push
pop
push
mov
pop
adc
xchg
sub
sahf
cmp
les
sub
roll
adc
or
das
stos
fistps
mov
roll
adc
out
dec
sar
jl
jge
insl
cmc
scas
mov
inc
lea
es
mov
cmp
jge
hlt
mov
sbb
inc
push
cmpsl
addr16
ret
xor
sbb
sbb
dec
shll
dec
aam
push
inc
adc
aaa
es
dec
jg
lods
pop
jb
push
out
subb
inc
or
inc
pusha
jbe
rolb
adc
pop
rcr
xchg
hlt
mov
into
fstpt
nop
sbb
push
jmp
cmpsb
push
mov
ret
cmp
hlt
ret
inc
xchg
ss
jecxz
es
rorb
xchg
aam
bnd
and
imul
and
jns
test
mov
xor
inc
les
movsb
sub
jge
out
mov
inc
je
lods
cmp
in
jmp
xchg
aas
cmp
popa
lret
inc
jle
mov
pop
int3
fdiv
iret
xchg
jmp
out
jecxz
lock
dec
stc
mov
int3
xor
sbb
mov
dec
add
out
test
cmpsl
stos
call
stos
icebp
xor
xor
xor
push
and
insl
lret
mov
loope
xchg
add
fisubrs
out
pusha
lods
sbb
mov
mov
call
cmp
inc
push
gs
xor
push
pop
sub
xrelease
push
out
pop
or
xchg
movsb
rcrl
sahf
cmp
xchg
mov
push
sbb
push
stos
or
xchg
ss
pand
rorl
repnz
push
bound
cmp
aaa
mov
pop
pop
sub
dec
pop
adc
pop
jbe
aam
fwait
inc
mov
lret
mov
int3
shlb
push
cmc
cmp
loop
sti
pop
and
out
sbb
fwait
movsb
outsb
jmp
push
push
cwtl
dec
add
push
js
inc
jle
decl
shll
xorb
enter
fisubl
pop
xlat
inc
mov
push
scas
movsl
and
cltd
fcoms
jne
stc
lods
cmpsl
push
outsb
xchg
test
arpl
lock
stos
push
jns
fstpl
clc
outsl
and
xchg
adc
push
jecxz
popf
rcrb
push
mov
cli
jbe
int3
jecxz
lahf
dec
dec
push
dec
cmpsl
fstps
adc
sub
push
cmp
idivl
iret
fsubl
jg
mov
mov
xor
xor
aad
fsubr
loopne
fisubrs
sahf
cmp
inc
lock
out
incb
push
mov
nop
push
mov
mov
cli
and
out
lahf
mov
dec
mov
jne
lret
cmpsb
xlat
hlt
test
popf
xchg
out
andb
lock
testb
shll
gs
lods
push
stos
testb
mull
or
roll
inc
inc
fnstcw
add
adc
test
adc
adc
test
adc
test
adc
cmp
inc
lods
pop
les
add
sbb
daa
mov
addb
mov
pushf
and
adc
test
add
push
test
insb
mov
gs
jecxz
jnp
mov
mov
pop
adc
stos
fldenv
popa
movsb
add
adc
dec
popa
cmp
icebp
and
jmp
daa
es
int
shll
clc
or
repnz
imul
adc
int
scas
and
pushf
aas
mov
xor
jl
jg
aad
mov
cltd
repz
push
jp
das
pop
pop
jnp
int
frstor
test
dec
pop
cmp
nop
nop
ljmp
loop
insb
adc
imul
mov
leave
cmp
pusha
xlat
mov
loope
mov
fucomip
dec
adc
jecxz
adc
adc
jmp
sub
pop
xor
stos
or
or
mov
mov
and
ja
sub
push
lock
jge
idivl
jecxz
mov
adc
enter
pushf
cltd
jnp
cmp
jmp
pop
sti
popfw
xchg
gs
shll
jle
inc
fbld
sbb
movb
sub
push
adcb
dec
stc
and
lea
faddp
sbb
lcall
rolb
pop
adc
loop
stos
cs
sahf
mov
add
test
or
ret
test
cld
mov
and
adc
pop
adc
aas
or
pop
adc
ror
add
adc
out
je
int
in
pusha
imul
rol
cltd
push
clc
je
filds
imul
mov
and
ret
jg
inc
jg
stos
stc
adc
jae
jns
mov
or
xor
shl
test
mov
mov
jmp
push
pop
mov
fisubrs
or
dec
xor
bound
imul
int3
imulb
repnz
lods
sub
add
pop
adc
in
jp
add
pop
adc
popf
jbe
ret
jmp
mov
push
inc
ret
int
mov
repz
fildl
mov
sub
lods
xlat
popl
add
fwait
mov
enter
daa
sahf
int
push
push
aam
xor
test
and
and
adc
adc
jg
cli
aaa
out
es
mov
inc
fdivrp
fs
and
adc
rolb
adc
or
or
or
or
xchg
jo
pop
adc
adc
cwtl
into
pusha
and
in
inc
dec
loop
rolb
adc
int
and
jbe
js
pop
adc
pop
outsb
xor
adc
mov
push
cmp
ljmp
roll
adc
adc
adc
xchg
mov
push
adc
and
les
nop
sbb
pop
adc
or
roll
adc
jnp
arpl
mov
pop
adc
mov
adc
push
push
subb
pop
cmpsl
inc
lahf
and
add
pop
adc
inc
cli
pop
loopne
add
pop
adc
push
shrb
test
ret
mov
xor
dec
mov
dec
rorl
lret
sub
and
mov
or
lret
pop
adc
in
in
lcall
imul
rclb
xchg
jo
and
out
jo
pop
adc
in
in
lcall
imul
rorl
and
pop
adc
rolb
adc
das
movsl
mov
pop
add
pop
adc
stc
ja
add
pop
adc
pushf
ds
repnz
add
pop
adc
xor
push
xchg
cld
fmuls
iret
outsb
sub
clc
pop
inc
pop
push
jns
scas
pop
sub
cmp
stos
push
stos
sarl
repnz
xor
xor
sbb
or
jns
mov
mov
aam
push
pop
scas
sub
roll
sti
mov
push
roll
adc
jbe
xor
xor
pop
adc
adc
dec
sahf
movsb
imulb
out
push
scas
mov
mov
and
push
or
dec
mov
lock
xchg
xor
add
jg
mov
xor
daa
shrb
movsb
and
adc
sets
ljmp
rcll
test
pop
rcr
pop
lcall
pop
ljmp
push
sub
xchg
stc
push
mov
stos
int3
adc
movsb
dec
pushf
enter
stos
mov
mov
roll
adc
test
lret
call
insl
pop
sub
outsl
or
jnp
or
pop
loopne
pop
pop
push
jne
xchg
xchg
mov
scas
push
aaa
jmp
pop
scas
inc
popa
into
imulb
pop
push
roll
adc
sti
imul
sbb
pop
adc
mov
push
xchg
xor
adc
lcall
stos
cmpsl
pop
or
pop
adc
lahf
jne
and
xor
roll
adc
adc
roll
adc
pop
adc
sbb
pop
adc
pop
outsb
pushf
inc
popf
mov
stos
es
jno
roll
adc
and
mov
pop
nop
jge
adc
rcr
pop
sub
pop
adc
pop
sbb
pop
adc
and
pop
adc
jnp
int
test
outsl
sbb
rolb
adc
movsb
jnp
fs
lcall
or
pop
adc
dec
mov
adc
pop
adc
mov
movsl
fs
leave
jmp
rcll
adc
adc
or
push
adc
and
shr
pop
and
xor
pop
and
dec
sahf
mov
push
and
lahf
fstpl
sahf
xorb
push
and
int3
sub
sub
push
push
and
lcall
or
loopne
and
cmc
push
pop
cld
and
adc
xchg
dec
or
movsb
clts
and
call
or
aas
scas
fidivrs
xor
and
cmp
or
daa
push
pop
cli
test
negb
lret
and
add
xor
outsl
sub
mov
mov
mov
pop
push
jmp
int3
sub
rep
adc
insl
xchg
fistps
test
aam
add
cli
add
inc
sub
xchg
dec
or
pop
adc
sbb
pop
adc
add
xchg
or
sub
enter
dec
mov
xor
int3
mov
shrb
jecxz
leave
hlt
ret
decl
aad
and
je
sarl
cmp
cli
push
cltd
fsubrl
mov
arpl
test
push
push
jle
roll
adc
adc
xchg
cmp
and
cmpsb
sbb
pop
adc
imul
add
adc
inc
adc
stos
insb
and
leave
inc
gs
xchg
sub
test
data16
and
push
aaa
inc
mov
xor
imul
aad
xchg
stos
push
nop
int
jbe
les
adc
lock
adc
mov
fldl
push
stos
repz
int3
scas
cmpsl
cli
adc
inc
cli
mov
add
inc
push
pop
roll
xchg
ret
push
dec
add
sub
and
lea
mov
cmp
and
sub
cli
mov
adc
clc
pop
rclb
jl
hlt
xchg
fldenv
mov
aad
aam
push
mov
jecxz
imul
mov
sbb
jl
hlt
imul
dec
cmp
sub
inc
fdivrs
lock
jo
or
and
mov
mov
jne
sbb
cmp
and
cli
fsubr
fdivrl
jge,pt
jb
xchg
dec
sahf
pop
out
and
ret
mov
inc
sbb
rcll
lods
and
jno
cmp
ficoms
call
outsl
sub
push
inc
mov
or
andb
movsb
ds
push
mov
mov
mov
mov
xchg
push
iret
enter
push
cltd
mov
xlat
std
mov
and
push
pop
push
jmp
fcmovnb
push
lahf
insb
mov
pop
ret
and
xchg
push
push
push
stos
push
cmp
or
jns
sbb
mov
cld
lods
push
ljmp
insb
dec
icebp
mov
scas
rcr
adc
mov
out
cs
inc
mov
push
pop
test
push
jo
out
mov
stos
cmp
ss
pop
sar
push
repz
pop
aad
pop
cs
push
adcl
and
xchg
sti
mov
inc
into
scas
popf
mov
roll
adc
mov
adc
mov
mov
test
pushf
push
mov
cld
les
insb
fs
jl
and
lock
pop
fiaddl
outsl
sbb
das
int
jecxz
es
orl
clc
mov
scas
insl
jns
push
hlt
add
mov
lods
test
sbb
inc
pop
xor
clc
mov
fdivl
in
leave
sub
pop
enter
lods
out
xchg
mov
push
fdivs
and
pop
cld
and
insb
xchg
pop
sti
sbb
jecxz
lock
mov
mov
jg
xchg
in
jg
orb
inc
xchg
adc
pop
inc
add
inc
push
cmpl
lods
mov
mov
lcall
jo
ja
inc
fstps
icebp
leave
pop
test
mov
repz
int
incb
ss
lea
adc
std
pop
jns
xchg
fcompl
decb
jl
dec
out
cmpsb
xchg
mov
xchg
insl
in
lods
adc
cmpsl
and
xor
imul
in
loope
sub
pusha
insb
jns
and
ret
sub
popa
push
jp
jecxz
rorb
data16
push
outsb
xchg
add
mov
adc
lds
sub
sahf
xor
rcr
movsb
roll
adc
stc
xchg
push
push
rolb
or
mov
mov
xor
pop
mov
ret
movsb
roll
adc
or
ds
xor
push
mov
sbb
jecxz
sar
xchg
shlb
mov
sti
jecxz
push
jbe
cmp
imul
lahf
push
bound
xchg
jmp
outsb
xchg
dec
lea
adc
push
adc
fidivs
rcrl
xchg
sbb
mov
mov
orl
nop
cmpsb
or
stos
cs
adc
fdivs
push
xchg
outsb
xchg
leave
mov
addl
mov
sbb
xor
sbb
xor
outsb
sub
add
in
scas
filds
ficompl
imul
lcall
imul
js
adc
push
popa
fildll
sbb
popa
ret
shl
xor
push
ja
jmp
fs
popf
stos
fistpll
lds
push
mov
cs
cs
lods
rorb
imul
jecxz
jnp
mov
jno
in
sahf
jnp
mov
jbe
xor
sub
loop
scas
mov
fistpll
and
adcl
sub
aas
repz
test
jl
jl
and
mov
jae
xchg
push
and
pop
adc
xchg
jo
andl
dec
add
push
jae
adc
fadds
punpckhdq
jge,pt
cmp
pop
loope
pop
in
push
cli
addr16
out
aaa
fstl
pop
cmp
cmp
push
lea
pop
push
filds
adc
dec
mov
mov
xchg
adc
es
subb
dec
dec
mov
pop
fucomip
push
out
into
loop
jp
fwait
movb
mov
lret
fbstp
xchg
and
in
pushf
mov
mov
loope
sahf
adc
mov
loopne
add
fmuls
pop
imul
dec
stos
jp
icebp
jmp
lret
in
repnz
mov
adc
push
and
mov
adc
lcall
imul
pop
mov
pushw
sbb
dec
insl
outsl
jl
xchg
mov
cmp
leave
pop
adc
int3
shl
sti
stc
or
sub
fadds
and
lods
mov
pop
js
mov
in
dec
cli
xor
xor
cmp
jmp
out
loop
cmpsb
pop
and
loope
cltd
scas
rol
loop
mov
out
ss
fs
push
aam
mov
xor
leave
pop
adc
test
sub
aas
out
stc
movsl
sbb
mov
cmc
or
rcrb
bound
jp
shlb
daa
jne
cli
dec
lcall
frstor
mov
mov
xor
jge
fldt
push
jl
jno
repz
jno
pop
adc
call
and
sub
xor
push
dec
and
mov
sbb
outsb
jle
and
mov
out
push
pop
add
xchg
insb
xchg
push
insb
sub
movl
pop
add
faddp
push
mov
gs
push
hlt
movsl
xor
ljmp
and
icebp
dec
ljmp
cmp
sbb
fcos
pusha
inc
pop
pop
test
mov
push
xchg
loope
jb
cli
stos
aaa
fisttps
dec
sub
pop
push
xsaveopt
push
icebp
xchg
js
adc
pop
adc
aam
pop
push
add
adc
mov
arpl
push
cltd
xor
std
xchg
mov
test
adc
ds
neg
cltd
lret
inc
sbb
std
jae
shlb
adc
adc
pop
dec
sbb
pop
adc
xchg
dec
hlt
jo
adc
push
or
sbb
sbb
fsub
imul
cmc
push
testl
and
add
push
fsubrs
ret
jl
clc
mov
mov
sub
cmp
jb
xchg
inc
sahf
and
bound
imul
jge
fwait
mov
out
out
test
xchg
mov
add
xor
dec
test
jge
ss
shl
lret
and
push
xchg
sub
inc
je
push
cmpsl
out
and
pop
adc
jg
jge,pt
jno
shlb
jecxz
and
dec
sahf
cmp
mov
xchg
jle
hlt
imul
xchg
arpl
loope
fdivs
adc
sub
inc
jecxz
jmp
pop
clc
mov
mov
xor
stos
xlat
insl
inc
sub
popf
sti
lea
sub
lahf
ds
inc
inc
jmp
mov
push
and
es
test
insl
cmp
xor
jge,pt
mov
pop
mov
test
stos
es
fistps
adc
mov
in
xor
mov
cs
add
cmp
xlat
les
in
lock
lahf
mov
jp
mov
xchg
ss
loope
stos
mov
lret
fs
pop
mov
inc
arpl
fs
es
rcrb
push
test
ss
xorb
outsb
mov
or
ljmp
aad
sub
and
cmp
subl
pop
aas
jne
cmc
jmp
in
pop
aas
ret
add
sbb
add
sub
jns
adc
jb
int
or
in
in
jo
adc
dec
insb
cmp
xchg
sub
aad
and
sub
jo
adc
cmpsb
pop
jo
xchg
mov
pop
lods
cmpsl
ljmp
mov
cld
out
xor
mov
add
cmc
cmp
frstor
mov
mov
es
aam
loopne
out
shr
push
imul
mov
add
pop
adc
cmpsb
adc
add
out
aad
daa
or
dec
insl
shll
lea
daa
or
mov
sub
out
xchg
dec
pop
cltd
xor
int
sub
jl
push
jmp
jae
inc
xor
outsl
ds
adc
enter
addr16
push
repz
push
and
inc
dec
aad
lds
je
and
test
daa
or
loop
and
push
mov
and
fcoms
xchg
sub
aaa
adc
adc
cmp
mov
les
adc
push
jecxz
push
sub
xor
ret
xchg
lahf
add
repz
test
out
and
sub
xor
pop
sub
dec
push
aad
mov
push
popl
mov
mov
mov
pop
pop
jmp
mov
adc
clc
jns
or
lret
mov
mov
test
jmp
mov
jbe
xor
add
adc
xchg
loop
push
aas
xchg
add
mov
or
cwtl
pmaddwd
xor
mov
lock
std
xchg
sub
test
and
dec
mov
das
lahf
popf
adc
inc
out
out
cmp
aam
divb
popf
ds
stc
fstps
mov
mov
pop
dec
fbstp
mov
stc
dec
pop
mov
jge
adc
ret
and
cmpsb
jg
mov
loop
dec
inc
jge
xor
movb
ljmp
jae
int3
push
ret
mov
inc
mov
inc
jmp
jne
mov
jns
xor
push
and
mov
mov
mov
cmp
jge
aad
test
xchg
fnstcw
test
add
popa
pushf
and
push
sti
fisttpl
arpl
mov
push
mov
test
cmp
jo
sub
je
repz
call
sub
sub
subb
loope
jns
pop
fwait
loopne
or
add
repnz
in
sub
test
jnp
xlat
addl
jge
mov
shlb
dec
cmp
push
stos
push
nop
push
pop
cmp
cli
ds
fdivrl
xlat
cli
hlt
call
jp
mov
xchg
stos
es
int3
jg
clc
adc
pop
jo
add
jge,pt
pop
mov
push
lea
mov
mov
call
dec
sub
lds
js
fstpl
jnp
rcrb
adc
xor
push
inc
arpl
cli
ds
mov
addl
push
mov
lods
test
cmpsl
dec
pop
repz
out
fcoml
adc
pop
dec
xchg
jnp
call
nop
xor
movsl
shlb
lahf
cmp
call
mov
cli
hlt
arpl
and
rcrl
push
mov
fwait
mov
or
push
leave
jg
xchg
fwait
mov
jae
loopne
sti
pop
add
and
imul
pop
adc
inc
cmp
pop
lahf
call
in
loop
push
addr16
mov
js
cmp
adc
push
jnp
in
cmp
sub
adc
adc
insb
addr16
xchg
movsb
aam
adc
lea
xor
repz
jae
lret
add
mov
addr16
or
nopl
or
movsb
fwait
test
sub
and
sub
adc
push
das
jmp
push
xor
mov
mov
gs
pop
adc
mov
mov
cmp
sub
adc
sbb
or
in
sbb
mov
out
mov
and
lods
arpl
sub
or
addr16
icebp
jmp
shrb
pop
sbb
or
xor
enter
mov
jmp
mov
sbb
or
out
cmp
sbb
xor
test
loope
ss
jbe
sub
ja
xgetbv
mov
roll
das
cmp
ja
test
sbb
push
or
lods
sarl
cld
adc
nop
xor
mov
test
ret
lret
rcr
in
lock
lahf
jp
mov
xchg
mov
xchg
hlt
and
mov
pop
sbb
pushf
dec
repz
xor
das
inc
mov
mov
mov
push
mov
sahf
repnz
sub
nop
ret
pop
fcmove
push
sub
dec
mov
sub
je
je
inc
mov
sar
movsb
mov
imul
ljmp
adc
push
mov
lahf
mov
lock
mov
pop
test
je
jne
push
test
mov
push
push
jge
add
lds
frstor
jl
or
in
mov
pushf
pop
and
pop
aas
jle
test
ss
cmp
xchg
test
sbb
sbb
mov
aam
icebp
add
hlt
add
xchg
loopne
bswap
iret
jge
out
inc
cltd
jb
scas
push
flds
cltd
sbb
fnsave
xchg
sbb
mov
xchg
mov
adc
clc
add
insl
mov
mov
adc
and
pop
insb
push
push
mov
jne
in
outsb
mov
pop
adc
sub
push
sar
cmp
fdivrl
inc
gs
imul
rcl
push
push
push
cmp
insb
push
rorb
jnp
idiv
fdivrl
js
cmc
inc
jmp
fld
mov
push
dec
inc
sub
clc
xchg
ljmp
imul
ja
frstor
and
mov
lds
add
decl
fdivrl
idiv
sbb
sub
cmpsb
lret
mov
mov
push
test
mov
mov
rcrb
jl
hlt
push
adc
xor
fimuls
push
and
xchg
dec
popa
jo
jg
push
mov
jnp
sti
hlt
call
pop
aas
add
daa
adc
push
es
cltd
outsl
test
fisubs
lods
shlb
adc
les
outsl
mov
insb
sub
out
fdivrl
shl
pop
clc
push
pop
sub
stos
add
pop
push
sbb
fnstsw
mov
sti
mov
daa
out
mov
push
stos
shrl
mov
movsl
aaa
push
cld
gs
pop
ss
std
arpl
add
and
cmpsb
stos
movsb
xchg
push
hlt
mov
dec
pop
jge,pt
jg
shrl
mov
cmp
jl
push
stos
push
popf
jle
mov
xor
pop
xor
xchg
pop
out
int
or
out
inc
stos
mov
xchg
cwtl
adc
fcmovne
sub
hlt
fs
pop
pop
pop
sbb
pop
in
inc
shlb
adc
jmp
jo
adc
call
ljmp
pop
shl
and
inc
out
das
mov
jmp
lds
hlt
loope
sbb
push
xor
testl
inc
push
cmp
popl
ljmp
jmp
dec
mov
sti
mov
jne
pop
daa
fcmovne
pop
push
nop
enter
lahf
and
dec
out
xor
jno
test
add
pop
scas
jo
pop
adc
jbe
push
jl
lock
push
mov
or
pop
nop
cltd
and
mov
mov
sbb
popf
push
and
into
shlb
rcr
adc
popa
jb
int3
mov
out
cmp
lock
dec
ljmp
fbstp
add
push
xlat
fs
adc
sbb
xor
cld
pop
aaa
pop
cmp
repz
ds
jne
mov
shrb
pop
dec
lods
and
push
mov
loopne
repnz
add
sbb
cmpsl
adc
lods
dec
fcmovbe
roll
push
pop
movsb
arpl
dec
mov
adc
inc
test
sbb
mov
shl
and
and
add
xchg
popa
das
rclb
negl
jg
fdivrp
cmpsb
pop
inc
inc
add
dec
push
sub
xchg
xchg
out
ret
jno
sub
jo
adc
push
dec
push
in
sbb
ss
test
fcom
aam
xor
stc
adc
pop
mov
adc
xor
and
or
jne
add
sbb
fnsave
in
popa
in
jge
addb
adc
fs
loopne
dec
jmp
adc
in
add
daa
or
xlat
loop
daa
or
cld
pushf
mov
out
mov
lea
jne
les
ficompl
add
cltd
fadd
sbb
cs
push
dec
sbb
sbb
push
jmp
fwait
cltd
shlb
pop
dec
fbstp
mov
stc
xor
push
sub
cmpsl
icebp
adc
daa
push
mov
fstpl
inc
les
scas
xchg
ljmp
repnz
stos
aad
sub
test
mov
mov
push
and
outsl
mov
stc
cmpsb
sbb
cbtw
fsub
imul
cmc
push
testl
and
sahf
push
pop
adc
pop
ficomps
push
ret
imul
fstl
int3
dec
aad
jno
arpl
adc
out
jno
test
jl
je
mov
test
outsl
leave
sbb
loopne
sbb
add
jnp
movsb
outsl
std
ja
cmp
clc
mov
out
xorl
xor
fnsave
mov
sbb
push
push
ds
push
mov
movsb
ss
rol
int
xor
lcall
dec
clc
add
popf
push
mov
mov
jmp
in
leave
push
cmpsl
dec
clc
push
mov
jae
test
jbe
shlb
push
int3
outsb
imul
cmpsb
dec
sahf
pop
inc
or
out
lahf
xchg
repz
call
cwtl
aas
imul
xor
mov
cmp
mov
xor
or
call
adc
call
in
iret
pop
cmpsl
dec
clc
push
mov
jae
test
jbe
shll
push
int3
outsb
imul
cmpsl
dec
sahf
pop
inc
pop
in
cmp
out
lahf
xchg
icebp
hlt
call
cwtl
lahf
push
stos
xor
aad
cmp
mov
xor
push
jnp
push
cmp
push
stos
push
stos
in
dec
pop
cmpsb
dec
stc
pop
mov
sub
in
xchg
div
jmp
jne
push
movsb
cmpsb
es
in
sti
pop
movsl
dec
cli
add
xchg
mov
imul
mov
test
push
push
push
or
insb
pop
lds
dec
aas
xchg
xlat
repnz
xlat
jb
sub
xchg
xlat
adc
jb
and
mov
mov
inc
push
cltd
fstpt
cmpsb
or
inc
push
push
adc
cmp
lahf
or
mov
pop
das
mov
in
test
xor
jl
fimuls
xchg
call
sti
mov
lds
ss
mov
into
pop
adc
xchg
xchg
sbb
sub
mov
mov
loopne
pop
xor
inc
mov
aaa
fwait
add
scas
push
cmp
and
jnp
jnp
stos
sbb
cmp
jecxz
jb
imul
xchg
mov
into
pop
adc
add
cs
pop
sahf
lcall
mov
mov
shll
in
mov
fmul
pop
adc
test
pop
icebp
push
mov
mov
pop
and
outsb
mov
clc
movsb
and
add
adc
mov
adc
or
iret
es
roll
icebp
inc
sbb
daa
or
inc
jne
push
push
sbb
push
leave
leave
and
lret
push
lods
sbb
shr
ret
cld
rcr
or
jmp
sub
outsb
add
or
pushf
negl
push
adc
and
popf
ret
xor
into
shlb
adc
mov
adc
push
aam
cltd
add
lods
and
dec
mov
xor
nop
add
or
adc
mov
lods
mov
xchg
inc
sar
sti
fimuls
add
push
lods
jmp
mov
roll
lock
outsb
xchg
cli
mov
sbb
imul
repnz
std
cltd
push
mov
rorl
cmp
mov
stc
mov
cmpb
mov
mov
movsl
mov
mov
adc
xchg
out
adc
call
lods
and
sbb
push
jo
adc
rcrb
dec
lcall
pop
in
ja
lret
ljmp
out
fdivrl
cmp
xchg
sbb
push
and
or
xchg
xchg
pop
movsb
daa
or
insl
xchg
cmpsb
pop
cs
outsb
or
or
mov
mov
imul
aaa
scas
lock
xor
jne
xor
pop
aas
loope
sub
cmp
mov
daa
or
jecxz
xchg
cld
jg
mov
or
sub
out
sub
aas
and
lea
dec
sbb
push
hlt
jae
push
sahf
dec
xor
jb
pop
jo
adc
push
xchg
fsubrs
mov
jns
push
lret
lock
jb
xchg
jno
lds
push
and
push
cmpsl
fdivrs
divb
out
iret
cmp
arpl
aam
sbb
jo
push
in
movsl
loop
popa
fldl
xor
daa
or
lock
das
gs
lds
jno
in
push
sub
lods
and
insl
adc
cwtl
sahf
inc
pop
jbe
and
sub
mov
in
cmp
adc
lods
sub
loop
jo
adc
jmp
pop
add
mov
shrl
sbb
mov
dec
jg
mov
ret
negl
cmp
push
lea
mov
mov
and
stos
out
pop
dec
inc
push
jae
mov
fdivrs
cmp
xchg
sti
mov
add
inc
inc
jb
adc
xchg
mov
or
imul
sub
in
pop
pop
sub
mov
jp
in
jle
xor
and
aam
outsl
push
daa
dec
scas
xchg
movsl
and
or
mov
mov
adc
cli
rolb
add
shlb
sbb
mov
pop
adc
fiadds
adc
xor
xchg
dec
fisubrl
mov
es
jb
mov
adc
mov
movsl
push
cli
sub
and
enter
add
adc
movsl
mov
xor
adc
adc
sbb
es
adc
stc
mov
insl
clc
xchg
jle
push
sub
pop
sahf
pusha
pop
scas
jl
cmp
push
test
adc
mov
rorl
adc
arpl
push
or
sbb
pushf
imul
sbbb
daa
adc
push
xor
xor
leave
popf
notl
sub
adc
cli
jge
js
mov
dec
jnp
cmp
in
sub
adc
jnp
ds
or
sub
xchg
xor
sub
enter
and
push
mov
and
mov
repnz
fsubr
cmpsl
add
push
jmp
pop
into
push
pop
outsl
cld
sub
adc
mov
xchg
jle
testb
fildl
or
mov
sub
mov
int
sbb
pop
sti
mov
inc
mov
dec
fchs
cmp
mov
adc
adc
addl
sbbb
popf
adc
out
and
mov
clc
push
pop
cmp
adc
xchg
mov
xchg
adc
push
test
sub
xchg
xorb
icebp
nop
js
jbe
rclb
dec
test
sbb
or
into
sti
and
inc
int
mov
sbb
or
mov
in
lods
inc
push
adc
lds
or
xchg
xchg
mov
ja
jbe
mov
sbb
sbb
cmp
jl
pop
xor
insb
push
jl
outsb
mov
outsb
icebp
mov
mov
or
mov
lods
sub
mov
or
aas
imul
mov
xchg
sub
call
mov
and
adc
xor
inc
lcall
mov
rol
loop
pop
jns
pop
mov
nop
hlt
mov
push
jo
adc
popa
int
jne
inc
fidivrs
sub
outsb
push
scas
dec
sahf
cmp
inc
lock
iret
sbb
andb
mov
cmp
add
or
pop
lds
rcrb
daa
or
adc
sbb
gs
int
fcmovnbe
push
push
test
nop
int3
cmpsb
ret
insl
loope
and
adc
ret
sbb
push
les
and
inc
pop
mull
test
inc
push
jo
adc
std
ja
xlat
pop
jne
icebp
and
xchg
test
aad
mov
and
push
out
push
shll
aaa
arpl
mov
or
es
popa
rolb
pop
les
loop
mov
cmp
jecxz
mov
loope
imul
jnp
push
mov
mov
sub
pop
adc
and
scas
les
xor
sbb
xchg
clc
inc
fwait
div
jns
daa
or
add
mov
push
xchg
or
cmpsl
loopne
test
mov
in
ficoms
push
out
mov
addb
push
stos
or
push
test
sub
fwait
and
mov
mov
sub
adcl
mov
jle
or
xor
sbb
mov
out
orl
adc
adc
rol
test
daa
rcrb
bound
mov
push
push
and
mov
jmp
xor
shrb
push
adc
cwtl
jae
add
adc
add
adc
add
sbb
jo
ja
shll
lret
push
fwait
test
out
cld
or
xlat
xor
lret
fwait
mov
inc
mov
jg
mov
shrl
shrb
adc
push
mov
out
cld
addr16
insl
cld
loopne
pop
or
jns
cld
push
int3
or
push
push
leave
sbb
xchg
outsb
es
cs
sarl
cmp
cld
dec
ljmp
inc
ficoms
mov
stos
dec
dec
mov
sahf
aaa
push
fidivrl
cs
scas
sbb
and
insb
stos
frstor
push
jo
adc
add
das
push
imul
jo
adc
call
xchg
aam
sub
cmp
xlat
hlt
xchg
sub
lods
fistps
out
std
sub
adc
push
pop
test
and
popf
cmp
fldenv
cmp
iret
lods
sub
jno
mov
mov
daa
or
in
fisubl
pop
mov
or
fcoms
mov
test
imul
fyl2x
push
sub
or
mov
mov
or
incl
movsl
jle
aaa
outsb
lock
add
insb
xchg
insl
push
fs
out
idivb
shr
sbb
in
mov
adc
jmp
jle
add
addr16
adc
les
adc
push
adc
mov
push
mov
mov
fs
cmp
les
popa
dec
inc
mov
popf
bound
cmpsb
jae
or
stos
adc
sub
mov
sahf
inc
pop
jns
mov
or
inc
imul
fmull
divb
dec
sbb
push
fs
mov
fs
inc
mov
xor
je
mov
adc
loop
loop
shlb
adc
jl
sti
shlb
or
repz
push
into
in
mov
outsl
hlt
fstpl
mov
dec
js
stos
cld
ljmp
add
xor
push
adc
adc
cmp
fnstsw
mov
sub
lret
inc
fisubrs
in
mov
add
nop
out
fstpl
mov
stos
ja
ret
pop
loop
iret
sar
mov
sub
push
adc
ret
push
dec
repz
xchg
push
jnp
shll
popa
sub
pop
dec
xchg
mov
push
es
jmp
sub
fwait
cld
inc
data16
push
adc
cmp
insb
sbb
xchg
mov
push
es
mov
xor
push
adc
dec
lods
roll
push
or
sbb
xlat
dec
scas
dec
rol
test
xor
outsb
mov
mov
nop
xchg
fnstcw
loopne
push
pusha
jl
popa
mov
int3
mov
sub
jmp
loop
xchg
mov
test
cmpsl
dec
enter
push
and
xchg
sbb
or
insb
jb
adc
adc
cmp
es
out
push
sti
mov
mov
out
mov
ds
xchg
sub
xchg
cmpsb
mov
jmp
sub
xor
sub
data16
je
push
adc
out
mov
sub
push
add
das
lcall
shll
cmp
stos
mov
xchg
push
stos
repz
aad
mov
loop
and
adc
scas
jmp
lret
push
and
mov
seta
jne
shll
das
jl
push
clc
push
jmp
mov
pop
insb
adc
push
movsl
dec
pushf
mov
std
outsl
mov
pop
imul
repnz
xchg
dec
pusha
pop
filds
xchg
xchg
adc
lock
lret
insb
xchg
lahf
fucomip
aad
mov
fisubl
jmp
and
shl
mov
aas
jl
data16
jnp
sbb
dec
adc
cmp
test
mov
push
incb
call
inc
and
cmp
in
mov
into
fs
inc
mov
push
add
mov
lock
xchg
sub
inc
cmc
add
mov
stc
js
dec
loop
in
lcall
mov
enter
aad
xor
mov
sub
cmp
je
pop
cmp
out
jecxz
cmp
mov
dec
xchg
mov
rcrb
sbb
movsb
daa
push
shl
enter
xor
lods
lret
lret
mov
mov
xchg
shrl
aam
cmp
sub
xchg
aaa
repnz
stos
fldenv
cmpl
pop
mov
popa
mov
shlb
xchg
jl
scas
cld
inc
repnz
xchg
into
ret
mov
dec
outsl
das
xchg
ss
lds
cmp
xor
mov
cs
push
rcr
imul
insb
sub
and
mov
xchg
fld
mov
mov
lea
cld
subl
cld
jecxz
add
popf
das
push
and
jle
pushf
in
dec
xor
rorb
add
sub
inc
in
mov
ror
rcrl
out
aas
shlb
push
pop
adc
dec
test
dec
inc
xor
and
jno
mov
loope
bound
xchg
rorl
bound
sahf
lds
adc
push
add
mov
push
lods
test
mov
addr16
inc
xor
jmp
mov
sub
cli
dec
rorl
add
nop
sbb
stos
js
dec
lods
jmp
pop
cmpl
push
and
jmp
out
cmp
adc
adc
fwait
jle
add
fisttps
xchg
pop
std
sub
stos
mov
sub
lahf
imul
fstl
stos
push
mov
retw
fstpl
jge
fsubr
roll
inc
push
ror
xor
pop
shrl
adc
aad
adc
inc
push
out
daa
sarl
pop
inc
jb
and
pop
push
es
cmpsl
ffree
test
insl
sbb
jae
add
inc
push
pop
roll
xchg
push
es
cmpsl
in
test
mov
jne
sub
push
repnz
mov
or
mov
pop
and
stos
clc
fisttps
lock
jmp
or
arpl
scas
cltd
repz
xchg
test
push
lahf
xchg
jmp
and
jne
pop
call
sub
test
sbb
out
insl
outsb
and
ret
sbb
shl
nop
call
adc
into
sub
push
pop
insl
pushf
movsb
and
jp
cmp
inc
sbb
push
adc
push
adc
and
or
outsb
or
xorb
dec
addr16
or
xor
movsb
and
push
or
dec
xchg
mov
xorb
cli
ja
shrb
pop
fisttps
rclb
xor
adc
mov
in
movsb
scas
jne
and
fidivrl
xchg
daa
push
insb
push
cmpsl
dec
sahf
insl
test
jo
adc
push
pop
dec
or
push
push
and
mov
inc
lcall
sbb
pop
dec
pop
imul
shlb
pop
jb
or
lret
mov
xchg
adc
scas
sub
ja
fwait
jp
sub
sub
pop
and
push
daa
inc
cs
mov
mov
xor
xchg
mov
inc
imul
push
adc
inc
fs
mov
sbb
ja
jno
adc
cld
lahf
xor
outsb
sub
lcall
and
movsl
sub
setbe
dec
cmpsb
aam
jl
cmpsl
shlb
adc
cli
ja
loop
roll
shlb
or
in
mulb
fst
enter
push
dec
adc
popa
xor
push
mov
mov
mov
fimuls
test
stos
icebp
fucom
ss
sahf
sbb
movsl
xor
push
mov
or
adc
stos
movsl
xor
loopne
mov
sub
mov
shl
mov
and
daa
rcll
mov
adc
mov
sub
and
adc
or
inc
aam
nop
ja
sbb
stos
and
push
pusha
cmp
addr16
pop
ret
xchg
addr16
sub
ficompl
mov
lock
adc
jle
pop
adc
pop
mov
or
pop
and
xchg
or
lods
xchg
aad
or
insb
xchg
test
subb
insl
enter
int3
in
mov
mov
mov
mov
or
iret
lcall
and
adc
cmp
adc
xchg
xor
aad
mov
and
adc
mov
and
adc
stos
cmc
cmp
into
icebp
xchg
iret
pop
enter
aad
es
scas
ljmp
adc
sub
js
out
aas
ljmp
xor
mov
xor
sbb
mov
xor
inc
stc
mov
je
jecxz
shrl
adc
pop
sbb
pop
orb
test
loopne
pop
mov
out
fsubl
cmc
shll
and
pushl
add
jnp
xchg
or
or
rorb
mov
out
sbb
lods
stos
inc
stc
adc
mov
dec
lods
out
les
mov
bound
add
pusha
jnp
xor
lret
push
push
fstpl
pop
lahf
mov
xor
dec
xor
movsl
sub
js
add
sarb
movsb
pop
cmp
and
ss
xor
lea
ljmp
pop
shll
out
fldcw
int
call
shrl
adc
sub
pop
and
xchg
xor
sbb
sub
adc
out
movsl
push
fs
xchg
sub
stos
ficoms
push
cmpsl
or
lock
loop
cwtl
mov
xor
jne
xor
shlb
data16
in
xor
filds
negb
push
or
loope
cmp
adc
cmp
lret
inc
mov
xor
adc
xchg
mov
notl
leave
mov
adc
or
rcll
sub
and
adc
and
divb
xchg
aaa
lods
div
cmp
das
pop
mov
nop
push
xchg
dec
push
stos
xchg
mull
gs
mov
dec
pusha
dec
js
cmp
cmp
out
xchg
add
and
cmpsl
xchg
ret
test
gs
inc
cmp
adc
or
push
stos
mov
push
arpl
or
movsb
mov
mov
push
adc
das
cwtl
test
sbb
clc
push
andb
xchg
mov
mov
or
mov
and
adc
je
inc
bound
divl
dec
cmp
pop
inc
jo
mov
iret
or
or
insb
dec
push
out
mov
outsb
and
and
or
sbb
imul
xor
adc
push
repnz
add
cmp
nop
fwait
cmc
ret
mov
pop
loop
pop
or
sbb
orl
ret
jnp
jnp
mov
sbb
adc
pop
dec
cli
or
sti
dec
test
aad
sbb
lods
jb
adc
leave
push
sahf
scas
sar
xor
push
das
test
push
adc
jp
sbb
rorl
notb
mov
or
nop
jae
sbb
push
and
xor
imul
out
jae
and
loop
repz
or
inc
sub
jne
xchg
inc
cmp
push
adc
jb
notl
das
cmpsb
mov
aaa
adc
add
loopne
aad
adc
imul
bnd
cld
dec
mov
xor
fs
cmp
xchg
xchg
and
andb
mov
inc
jle
cmpsb
fisttpl
dec
inc
pop
in
stos
pop
shll
sahf
jbe
xchg
dec
fdivp
sub
sub
gs
fsubrs
aam
push
in
dec
adcb
or
pop
adc
adc
adc
cmpsb
jb
sarl
jp
mov
sbb
or
pop
adc
mov
scas
push
sub
mov
loope
push
xor
js
imul
inc
cwtl
xchg
push
inc
sarb
ds
pop
sub
idivb
jmp
repnz
in
movsl
cli
test
std
adc
xchg
imulb
aaa
jno
push
pop
lcall
icebp
orl
mov
mov
pop
mov
pop
or
jge
hlt
sbb
push
int
add
loop
cmp
lods
jnp
sbb
lcall
or
out
cmp
jmp
fsubrl
stos
aas
mov
push
adc
adc
inc
xchg
popf
mov
dec
mov
add
scas
or
lret
repz
cltd
xchg
push
sub
mov
pop
push
jg
iret
lahf
lahf
and
pop
adc
rorb
and
and
xchg
popf
leave
push
mov
aad
adc
cmp
push
int
fcmovnbe
imul
adc
lahf
cmp
or
fs
sahf
xor
and
test
pop
mov
shlb
adc
xlat
imul
fdivrl
jge,pt
pushf
in
shlb
cmp
test
jo
adc
int3
arpl
pop
push
dec
incl
adc
lret
daa
sub
fildll
dec
cmpsb
fadd
test
xchg
in
adc
sub
pop
int
xchg
jo
push
inc
outsb
rclb
iret
inc
incl
adc
sbb
sub
dec
scas
cs
mov
adc
lea
out
lods
pop
ret
scas
insl
sbb
sub
inc
mov
sub
pop
adc
push
add
cmpsl
divb
or
pushf
ja
xor
aad
adc
test
stos
push
cmp
jae
dec
testb
adc
lahf
mov
subl
sbb
xor
sbb
pop
adc
jbe
cmp
mov
movsl
imul
cmp
adc
mov
adc
lock
push
cmp
stc
mov
nop
shll
js
shll
and
adc
push
push
fcompl
mov
push
stc
lret
shlb
adc
mov
cmc
jmp
in
mov
or
cs
repnz
xchg
in
ficoms
sbb
bound
lods
jge
push
dec
dec
cs
pop
adc
push
and
push
mov
ljmp
sarb
push
fiadds
data16
inc
pop
sub
pop
pop
jle
sub
sbb
cmp
mov
es
or
adc
sbb
leave
pop
adc
push
cmp
xchg
out
lock
cmp
pop
sbbl
decl
add
sbb
enter
fs
adc
push
je
adc
ljmp
xor
inc
sbb
sub
outsl
jmp
fisttps
cmp
xchg
loop
int3
bound
out
loopne
xchg
adc
pop
aam
aas
divb
sbb
push
aas
push
lcall
sub
mov
pop
cmp
pushf
roll
je
push
adc
or
mov
inc
mov
fwait
shlb
sub
pop
sub
dec
mov
jmp
test
and
fsubs
add
imul
or
cmp
or
fs
cli
std
mov
mov
je
pop
test
roll
jns
inc
lock
mov
dec
out
in
xchg
insb
xchg
cmp
cmp
out
popf
push
mov
jo
adc
pop
lods
push
mov
push
push
clc
jno
dec
ss
lods
xchg
outsl
mov
js
push
adc
mov
pop
adc
add
es
pop
or
adc
mov
xorb
outsb
xchg
cmp
mov
or
mov
int3
ret
js
push
adc
mov
cmp
mov
movsb
mov
push
mov
mov
xchg
out
lods
rcll
shrl
adc
out
dec
les
pop
mov
cmc
jo
pop
dec
lods
sbb
and
sub
clc
test
mov
and
pop
adc
xorb
adc
xchg
add
or
cmpsl
imul
mov
jle
sbb
or
sbb
mov
mov
xorb
pop
inc
or
add
dec
gs
push
and
push
cmp
imul
pop
hlt
fs
cmpsl
mov
fnsave
aam
push
stos
stos
fcompl
jno
cmp
jge
fdivrl
sub
adc
cs
jge
inc
mov
fisttps
push
scas
cmp
and
fs
pusha
mov
push
stos
mov
dec
bound
cld
add
mov
sbb
aam
daa
mov
dec
or
lcall
mov
or
lock
sub
push
push
out
sbb
imul
cltd
xchg
sub
lret
imul
mov
xor
lds
jg
fcomp
xchg
in
jb
or
and
mov
dec
pop
repz
test
adc
mov
pop
adc
or
or
mov
test
adc
or
pushf
test
push
adc
pushf
jo
adc
push
mov
adc
or
hlt
jo
adc
or
jno
movsb
test
adc
daa
or
sub
pop
dec
popa
dec
ja
fwait
aam
mov
pop
jno
add
mov
mov
push
imul
jp
jnp
cs
mov
jno
adc
adc
or
out
push
stos
imul
sbb
jne
ljmp
xor
daa
or
pop
out
add
sub
rcl
sub
cmpsb
sahf
jne
addl
add
pop
mov
shl
out
xlat
inc
sbb
imul
add
and
mov
repnz
mov
cmpsb
fisttps
test
or
lea
ret
das
sbb
sub
adcl
push
xor
xchg
loope
stos
sub
stos
cmc
orb
ljmp
cmc
enter
sbb
sbb
test
imul
orl
into
adc
and
repz
mov
xor
mov
mov
adc
and
test
pop
xchg
sub
mov
add
mov
pop
fmuls
lods
out
jns
mov
pop
mov
xor
shlb
in
lds
adc
dec
jb
je
add
push
es
push
inc
push
insl
int3
mov
sbb
inc
mov
or
jl
jmp
pop
loop
in
std
lods
neg
xor
add
nop
lock
fs
lret
out
leave
mov
dec
inc
dec
into
sbb
sti
aaa
xor
lods
dec
test
rcr
mov
out
pop
popa
faddp
popa
or
mul
xor
imul
jns
pop
pop
jb
cmp
mov
aam
mov
push
push
push
xchg
lret
in
ficomps
dec
cmp
sbb
or
sti
popw
mov
imul
fmull
in
mov
out
fildl
int3
push
mov
stos
repnz
xor
rorb
mov
iret
test
lret
pop
add
and
in
push
inc
push
lods
cmp
push
and
adc
mov
bound
mov
sbb
sbbb
mov
hlt
addr16
ret
push
sbb
jle
xor
loopne
inc
add
shrb
out
mov
or
mov
push
adc
mov
bound
insb
aad
aad
test
insl
pop
cmp
xchg
and
pop
inc
sbb
mov
data16
push
pop
push
fisubs
sahf
cmp
inc
push
sbb
jecxz
rolb
xor
push
and
dec
fldenv
test
mov
push
jge
movsb
adcb
adc
lods
and
xor
cmp
int3
mov
hlt
lds
and
cmp
cli
mov
jo
arpl
jae
iret
iret
push
push
add
add
adc
pop
push
fldcw
repz
dec
sahf
insl
adc
adc
roll
inc
lea
gs
push
and
inc
dec
pop
mov
cmpl
mov
cmp
movsb
pop
adc
sub
or
push
fisubs
lcall
aad
jae
pushf
cmc
ds
adc
pop
and
dec
push
push
stos
push
and
jl
clc
mov
adc
sbb
cmpsl
cmpsl
scas
in
lret
fcompl
xor
call
and
xchg
fbstp
push
add
scas
les
dec
inc
adc
test
inc
fcoms
and
daa
lods
adc
dec
insb
mov
cmpb
cmp
and
xlat
daa
lea
addb
mov
mov
test
push
lods
pop
cmp
and
insl
adc
pop
xor
repnz
stos
fcoml
inc
lea
mov
sbb
call
push
das
pop
xor
repz
sub
add
mov
add
xchg
mov
xor
pusha
xchg
push
fcoms
lock
inc
sub
fidivs
inc
enter
or
sbb
in
push
xchg
jno
adc
pop
xor
divb
fsubs
and
mov
push
mov
loope
popf
popf
rcrb
sub
frstor
mov
imul
and
dec
or
jo
in
in
sub
js
cmc
fcmove
dec
mov
pop
js
inc
stos
lret
xlat
into
cld
jno
jmp
dec
aam
icebp
imul
mov
adc
je
or
mov
scas
popf
clc
fidivl
or
out
lds
aam
pop
mov
adc
loop
pop
ret
cmp
mov
mov
or
inc
xor
or
sub
mov
sbb
inc
mov
sbb
ljmp
mov
push
lods
sub
scas
int
push
mov
add
ds
jae
mov
push
or
or
dec
dec
ss
daa
or
addr16
mov
leave
pop
adc
sub
and
repz
ret
dec
sbb
leave
pop
adc
mov
leave
pop
adc
les
dec
jp
adc
leave
pop
adc
jl
cmp
mov
adc
ljmp
mov
leave
pop
adc
push
inc
ret
dec
nop
dec
dec
leave
pop
adc
jmp
push
and
pusha
int3
dec
cmp
mov
or
shlb
mov
or
pop
inc
testb
pop
lods
jl
mov
adc
jbe
jp
mov
sbb
push
daa
or
mov
shrl
test
or
dec
mov
cmpsb
inc
leave
pop
adc
data16
or
mov
aad
icebp
jmp
out
pop
jne
add
pop
mov
je
pop
adc
addl
xor
and
movsl
mov
arpl
shll
rorb
pop
xchg
mov
notb
popa
sbb
enter
pop
scas
jl
aam
cmp
or
sbb
rolb
push
xchg
dec
push
add
cmp
loopne
or
cli
cmp
inc
sbb
inc
cli
mov
stos
sahf
out
leave
inc
gs
adc
rcrb
and
push
dec
dec
mov
dec
pop
push
jbe
or
lret
sub
mov
push
lret
xchg
mov
xchg
mov
adc
shll
loopne
sub
jbe
xor
push
ficoms
negl
adc
push
xchg
stos
fbld
iret
mov
sbb
adc
adc
inc
sub
leave
pop
adc
push
scas
cmc
dec
leave
pop
adc
jle
push
andb
adc
jmp
inc
hlt
popf
iret
sub
iret
pop
adc
jmp
fiadds
mov
test
or
or
subps
xchg
pop
in
daa
or
pop
mov
daa
or
fidivrl
jl
push
mov
adc
adc
sbb
icebp
popf
push
sub
mov
pop
jae
out
adc
jno
stc
je
pop
adc
xchg
push
push
leave
pop
adc
dec
into
aad
fcoml
and
clc
mov
leave
pop
adc
loop
stc
adc
pop
adc
scas
add
mov
test
ljmp
cld
movsl
lods
jge
pop
leave
pop
adc
push
cli
mov
mov
out
shll
adc
aam
leave
pop
adc
test
subb
mov
je
pop
adc
shr
xor
pusha
leave
pop
adc
mov
lods
push
stos
repnz
jno
inc
je
pop
adc
lahf
fwait
add
leave
pop
adc
xor
xchg
mov
and
mov
jecxz
push
jle
sbb
pop
mov
pop
inc
add
push
xchg
lods
xchg
jb
or
mov
cwtl
inc
fcmove
or
xchg
imul
mov
andb
adc
adc
adc
or
or
xchg
jmp
clc
stos
cmpl
add
jg
sub
pusha
cmp
into
xchg
popf
mov
and
ss
sbb
sbb
sbb
mov
stos
pandn
xchg
test
or
sar
inc
mov
out
dec
imul
jl
or
mov
inc
mov
xor
cmpsl
fistl
lret
hlt
or
pop
push
ds
repz
sbb
sub
xchg
out
mov
int
fsts
out
inc
divl
mov
jmp
sub
shrb
and
mov
pop
pusha
sbb
add
cmp
xor
sub
movsl
enter
or
pop
shrl
sbb
push
adc
or
lods
dec
and
addb
sbb
test
scas
pop
out
test
mov
mov
cmpl
sti
fs
cmp
jb
xor
mov
jns
outsb
aaa
xchg
jmp
and
jbe
repnz
int
dec
sahf
sbb
jl
inc
sbb
jns
push
push
fadd
ret
fists
xchg
add
cld
lods
enter
bound
enter
data16
sbb
mov
xor
fwait
xchg
mul
push
dec
shl
push
rolb
cmp
outsl
mov
loop
sub
adc
cltd
out
mov
sbb
jns
mov
fldcw
daa
inc
inc
mov
scas
iret
pop
inc
cmp
arpl
imulb
xchg
sahf
es
sub
lds
scas
rclb
or
leave
pop
adc
fdivs
daa
or
sub
leave
pop
adc
je
pop
adc
hlt
mov
pop
adc
pop
and
push
fidivrl
push
andb
adc
or
or
sub
pusha
loope
cltd
xchg
stc
addr16
sahf
adc
pop
jns
flds
jle
insl
ret
adc
mov
pop
cmp
pop
stos
sahf
fsub
pop
popa
or
mov
dec
ja
mov
add
fisubs
lods
sbb
and
cmp
stos
loop
pop
sub
cld
push
mov
mov
xchg
fsts
fcoms
daa
or
lods
push
pop
pop
mov
sbb
or
insb
adc
or
aaa
mov
push
xchg
and
pop
adc
fistps
push
fcmovnb
shufps
pop
lret
cmpsl
nop
sbb
adc
jb
cmc
xor
pop
adc
jbe
sbb
sub
ja
sbb
leave
dec
adc
pop
out
mov
cmpsl
dec
popa
or
daa
or
inc
data16
or
clc
cmp
fcomi
shlb
push
or
sbb
dec
fsubrs
out
jns
insb
cmpl
adc
adc
adc
push
push
inc
fdivrs
lods
std
mov
and
mov
inc
mov
push
fisubs
pusha
jg
nop
or
adc
xchg
mov
ret
mov
add
inc
mov
dec
mov
stos
fcompl
cmp
push
adc
xchg
ret
cli
jg
fucomp
xor
push
jl
cwtl
sub
dec
jmp
sti
pop
sbb
mov
dec
jb
mov
mov
adc
cs
or
adc
out
shlb
or
adc
cmc
lret
sbb
mov
cmpsb
test
pop
adc
clc
mov
pop
out
or
adc
inc
xchg
or
adc
sub
pop
movsb
push
les
jl
mov
dec
test
mov
popl
into
in
ret
and
dec
pop
into
les
sbb
xor
scas
xchg
mov
loop
movsl
mov
mov
inc
pop
and
dec
cmp
inc
adc
sbb
insb
mov
into
cmp
movsl
dec
inc
sub
jnp
stos
sbb
pop
xchg
mov
iret
sbb
pop
xchg
lods
test
leave
pop
adc
cmp
jns
mov
sub
xchg
sbb
mov
adc
mov
movlhps
mov
outsl
test
xor
or
les
cmp
daa
or
out
jmp
push
aad
daa
or
sub
es
cmp
and
in
cmp
or
les
sbb
or
call
adc
adc
or
or
inc
cwtl
adc
sbb
gs
jg
pop
xor
pop
adc
push
add
fisubs
leave
pop
adc
nop
stc
adc
or
mov
mov
xchg
pop
les
daa
or
popf
lods
adc
cmpsl
push
test
cmpsb
push
add
jle
jnp
mov
daa
or
push
cmpb
daa
or
add
mov
xchg
xlat
and
stos
into
into
lahf
add
dec
bound
xor
leave
pop
adc
or
clc
fs
cwtl
nop
ror
sub
add
cmp
sub
daa
or
ljmp
cmp
mov
cwtl
cmpsl
jl
xor
or
jo
add
or
cmp
stc
pusha
lock
and
or
and
outsl
aad
dec
xchg
rcl
xor
add
outsb
pop
ss
dec
pop
mov
aad
addr16
or
mov
push
pusha
pop
enter
daa
or
mulb
rcrb
jge
hlt
gs
daa
push
jb
sub
or
mov
and
mov
adc
or
cmp
rcll
adc
ret
outsl
adc
or
push
fdivrl
push
sub
or
jb
test
and
sbb
iret
sub
or
scas
jne
lret
outsb
pop
das
xchg
fdivrl
jp
daa
or
insl
rcll
daa
or
popf
mov
sbb
or
dec
jo
in
push
shrb
daa
or
lock
stos
adc
or
aaa
cwtl
test
adc
or
sti
xor
in
out
adc
movsb
adc
or
cmp
ret
or
insb
ret
or
dec
call
rorb
mov
push
test
mov
or
adc
test
pop
cmp
das
xor
or
das
xchg
fistps
jbe
daa
or
jnp
cs
push
out
out
lahf
mov
jle
pop
in
daa
or
fisttpll
addr16
addr16
jmp
sti
cli
adc
or
in
mov
popf
test
adc
daa
or
cmpsl
push
je
daa
or
dec
inc
nop
cmc
add
lcall
call
adc
stos
pop
jmp
or
adc
cwtl
cs
lds
mov
mov
add
std
and
adc
or
jl
leave
adc
or
clc
sbb
pop
adc
or
cmc
adc
or
pop
aad
add
pop
pop
jb
xchg
adc
andl
andb
sub
pop
adc
mov
sbb
out
addl
mov
fs
or
mov
sahf
iret
xchg
jmp
popf
lret
ret
push
daa
or
and
cli
adc
insl
adc
or
push
inc
and
push
push
imul
cmp
xor
sbb
or
and
cmp
sbb
or
aam
cmp
daa
or
ja
xchg
out
sti
ret
rclb
or
push
insl
mov
jnp
faddl
mov
xchg
adc
psubsw
cmpsb
ja
daa
or
inc
add
daa
or
shl
adc
or
data16
or
sbb
push
push
in
cmp
pop
pop
in
das
int3
fstpt
and
or
dec
mov
add
pop
stos
cmp
fwait
push
sub
sbbl
or
pop
popa
mov
dec
adc
or
jae
push
mov
adc
sub
daa
or
mov
push
out
and
or
sbb
jns
sub
push
in
sbb
or
cmp
push
lods
and
stos
mov
sub
or
rcl
dec
sbb
or
lods
adc
mov
daa
or
das
test
mov
daa
or
and
repnz
or
push
orl
daa
or
mov
add
jb
adc
daa
or
add
xor
cmp
and
push
outsl
mov
daa
or
and
ret
daa
or
inc
dec
xor
outsb
movsb
or
pop
andl
or
lods
sub
and
daa
or
js
lahf
adc
sub
subb
adc
jmp
lret
daa
or
in
es
add
jb
adc
and
daa
or
add
icebp
ss
adc
or
mov
jg
daa
or
xchg
inc
rorb
sub
push
adc
xor
or
testb
adc
repz
push
in
cmp
out
mov
or
out
mov
sub
or
les
or
and
or
int
mov
adc
adc
sbb
xor
js
daa
or
dec
and
or
dec
fidivl
adc
or
imul
arpl
daa
push
mov
mov
dec
aam
push
mov
test
xlat
rcll
or
ljmp
leave
push
in
adc
adc
push
stos
push
shlb
sbb
psubusb
daa
or
hlt
pop
dec
jbe
in
pushf
dec
and
into
inc
mov
stos
push
mov
jo
imulb
pusha
rcll
mov
or
and
dec
sahf
cmp
mov
movb
dec
or
loop
add
inc
les
adc
aaa
loope
and
iret
cmc
aas
or
daa
or
mov
adc
xchg
movsl
shrb
push
cmpsl
dec
adc
pop
xor
daa
or
or
xchg
arpl
sbb
or
push
jecxz
int3
fdivr
push
iret
fcmovu
dec
adc
das
int
orl
adcb
loop
stos
repz
enter
out
fsubr
mov
xor
or
jg
pushf
jecxz
push
add
mov
push
data16
or
test
xor
or
bound
jmp
pop
lock
push
mov
xorb
pop
xchg
jns
cs
and
push
repnz
mov
dec
cmp
movsl
fsubrp
dec
adc
jno
lcall
cmp
add
jb
xor
ficomps
xchg
test
add
mov
and
mov
xchg
push
std
sub
mov
outsb
adc
push
inc
add
push
adc
add
out
mov
jmp
jno
add
movsl
xchg
in
pop
jb
adc
xchg
fcoml
mov
mov
std
push
jb
adc
dec
outsl
ss
and
xchg
cmc
xchg
fimull
jo
fsubs
leave
pop
adc
mov
scas
lret
mov
push
pop
lret
in
dec
pop
and
mov
pop
imul
push
gs
daa
xlat
insl
stc
jge
std
push
aad
inc
mov
mov
inc
pop
sbb
scas
push
mov
out
xor
stos
mov
pop
push
dec
lock
and
mov
ss
jbe
push
loope
add
imul
sbb
pop
adc
lods
xor
xor
push
int
arpl
push
inc
rcrb
cltd
mov
jne
and
imul
mov
in
data16
jecxz
mov
mov
mov
and
push
lods
fwait
adc
cmpsb
cmp
adc
cltd
inc
mov
mov
lock
rol
sbbl
mov
aam
sbb
jg
aad
push
jo
loop
sarl
cmpsl
mov
fistl
lods
push
adc
or
lret
daa
or
cmp
ret
cmp
or
clc
leave
cmp
or
mov
or
rcrb
mov
or
mov
xor
add
std
cmp
pop
push
popf
mov
xor
or
or
daa
or
addl
aas
jle
ficoml
aam
sbb
jmp
pop
mov
xlat
fsubs
add
out
adcl
out
jb
sbb
fisubrs
pop
jle
popa
sbb
mov
add
mov
adc
in
or
loope
sub
jne
cmp
mov
je
or
pop
adc
jge
adc
or
mov
enter
lret
int3
xor
ja
jbe
lahf
outsl
mov
hlt
in
dec
cmp
xchg
sbb
pop
sub
loopnew
ss
inc
dec
push
lds
int3
rolb
icebp
mov
push
not
sahf
sahf
adc
sub
imul
adc
sti
sub
jecxz
xor
jg
push
inc
inc
hlt
jl
add
dec
daa
or
and
sbb
pop
adc
mov
jo
adc
sub
cmp
dec
adc
adc
or
pop
adc
sub
sub
daa
or
inc
push
mov
lods
jno
call
jg
daa
or
pusha
call
or
inc
cs
daa
or
fisttps
int3
sbb
adc
popa
jmp
aaa
dec
pop
daa
or
mov
pop
adc
daa
or
or
adc
cmp
jb
test
stos
xor
push
jno
mov
fucom
and
or
das
xchg
fstl
or
push
out
insl
loope
and
adc
cli
icebp
dec
outsl
mov
out
scas
mov
or
aaa
lcall
in
hlt
push
push
daa
or
or
inc
outsl
xchg
and
xor
dec
daa
or
and
test
daa
or
es
pusha
mov
cmc
clc
pop
icebp
sbb
adc
aad
dec
xor
outsb
push
dec
adc
sub
xchg
imul
adc
ja
pcmpeqb
mov
xor
push
das
dec
lods
std
cmp
cltd
pusha
dec
push
jae
in
leave
inc
add
cmp
mov
push
mov
jg
shll
add
inc
lea
mov
sub
or
push
les
adc
fmul
pop
adc
or
xlat
bound
cli
mov
and
lret
and
or
out
adc
adc
imul
and
add
dec
xchg
fs
and
adc
jno
dec
pop
dec
aaa
jae
and
adc
out
inc
push
pop
hlt
jae
shll
xchg
sbb
push
or
xorl
rol
xlat
out
pusha
sbb
or
xchg
and
jle
addr16
push
jne
push
jecxz
divb
imul
mov
push
mov
xlat
mov
lahf
insb
mov
xchg
fsts
aad
cmc
negb
mov
notb
pop
or
lcall
add
sahf
push
roll
dec
jg
testl
mov
loop
arpl
es
add
call
push
in
push
call
dec
xlat
incl
lds
sbb
sbb
sub
stc
sub
mov
outsl
sub
into
popa
pop
pop
xor
pop
stos
dec
stc
jbe
jb
jno
aaa
xor
cmp
bound
push
loop
rolb
and
movsb
and
aad
adc
sbb
stos
and
arpl
out
sub
dec
out
imul
stos
sub
xchg
mov
dec
ja
sbb
mov
mov
push
and
xorb
mov
inc
test
insb
les
fcoms
data16
dec
inc
xlat
mov
pop
push
leave
or
pop
jne
fwait
dec
cmp
ds
icebp
shrb
ljmp
dec
sub
adc
xchg
adc
int3
xchg
add
sub
push
lods
mov
test
mov
add
lcall
xchg
sahf
jb
jae
mov
or
xchg
push
mov
push
aas
xchg
mov
dec
sbb
add
jno
mov
sti
mov
loop
jo
fistpll
or
lea
imul
xchg
sub
scas
adcb
mov
out
int
das
dec
adc
std
mov
cmp
mov
mov
sub
mov
push
cld
xchg
outsb
or
xor
mov
stos
mov
push
sub
push
rcrb
loope
push
iret
lahf
ds
mov
frstor
adc
inc
xor
popa
mov
int
mov
xor
cmpsb
fstps
stos
pop
xlat
mov
fwait
je
inc
inc
fsubrl
push
inc
mov
push
movsb
add
mov
cmp
pusha
stos
push
lods
pop
cmp
xor
lea
xor
jno
movsb
gs
push
push
gs
lret
xchg
sub
xchg
mov
mov
or
mov
mov
xchg
push
je
es
enter
pop
push
stos
push
fcomip
inc
movsb
push
push
mov
clc
mov
test
and
pop
xchg
sub
repz
ja
cwtl
int3
push
insb
adcb
xor
mov
mull
stos
shll
lock
outsb
fidivs
add
popf
aam
or
icebp
pushf
imul
dec
pop
sti
adc
popa
roll
loopne
pop
adc
and
ret
sub
jp
insb
and
imul
enter
test
add
sub
jb
divb
jmp
lahf
rorl
jns
and
scas
sub
lret
out
sub
popa
ret
mov
fstpt
and
pop
adc
pop
jne
dec
cmp
in
mov
sub
dec
sarl
mov
or
jae
jns
push
outsl
jo
scas
mov
pop
test
repnz
stos
cli
scas
ror
and
jae
test
xor
outsb
push
cwtl
mov
sub
cmp
stos
mov
sbb
push
jno
pushf
cmpsb
and
fcomi
dec
sub
push
mov
lret
mov
int3
test
xchg
ja
in
bound
insb
xlat
pop
inc
add
push
and
ret
sbb
inc
ja
ret
daa
push
out
into
push
adc
jle
rclb
js
mov
enter
fadd
sahf
xorb
scas
je
adc
sub
and
cld
mov
sbb
nop
fdivrl
hlt
loopne
cltd
push
adc
xor
pop
rcl
push
xchg
daa
jle
imul
dec
dec
xchg
aas
mov
mov
pop
dec
add
jmp
inc
push
clc
xchg
call
mov
movsl
xchg
dec
pop
and
gs
pop
mov
jmp
shlb
and
pop
movsb
fbld
jmp
or
adc
jns
test
push
mov
nop
stos
lcall
jecxz
mov
push
iret
mov
mov
ucomiss
xor
jae
push
xchg
push
and
jecxz
inc
and
xchg
mov
sti
mov
xchg
cmp
add
fisubrs
arpl
scas
negl
mov
gs
aam
mov
cmp
das
mov
adc
test
add
rcr
mov
out
icebp
xchg
test
popf
dec
inc
cmpsb
and
push
mov
pop
or
ja
dec
stos
sub
int3
mov
lds
inc
cmp
cmp
xor
cld
cltd
jo
mov
aam
icebp
andl
mov
je
pop
data16
jne
mov
xchg
ret
adc
mov
insl
jp
or
pop
jne
mov
popa
loope
cld
cmpsb
sub
push
mov
xor
addr16
pop
dec
cmp
ss
ret
add
out
and
rorl
lret
mov
mov
or
ja
fsts
outsb
ss
push
fstl
xchg
aam
pop
in
push
cmp
xor
shlb
aam
test
stos
and
cmp
ja
in
hlt
push
dec
outsb
div
in
mov
aad
mov
cmpsl
dec
adc
fdivrl
jge
cmc
call
icebp
aaa
popa
pop
pop
xchg
stos
push
lods
push
stc
cmp
fdivrl
insb
and
insl
out
mov
mov
sub
lea
adc
mov
dec
cltd
mov
aas
daa
aam
addb
adcl
jbe
mov
ret
lcall
shll
mov
xchg
jo
andl
mov
or
and
sub
pusha
mov
mov
dec
gs
jg
sub
mov
popaw
dec
outsl
jp
and
mov
aam
push
adc
pop
ret
xorb
and
les
pop
mov
adc
arpl
bound
mov
dec
dec
sub
mov
jg
pop
cltd
mov
mov
push
stos
mov
pusha
sub
jb
sbb
adc
sub
xchg
push
data16
or
jl
dec
lahf
jge,pt
aaa
sub
cmpsb
lret
mov
mov
imul
pop
cld
popf
cmc
fisttpl
xlat
lret
sahf
dec
sbb
mov
aad
push
pop
adc
ret
psrad
test
lea
add
push
push
push
add
dec
mov
pop
mov
aas
jo
in
ficoms
lods
xor
pop
clc
jne
xor
ret
jmp
push
test
pop
lods
push
mov
cmpsb
push
xor
rcr
xor
stos
rclb
push
scas
pop
scas
push
mov
lret
out
jnp
fs
add
mov
mov
mov
gs
lret
leave
addr16
int3
and
pop
cmpsb
xchg
mov
xchg
les
mov
xlat
dec
sub
inc
xor
ljmp
jecxz
push
ds
pop
or
pop
mov
sub
int
mov
hlt
jp
mov
mov
push
or
or
test
xchg
jmp
add
in
xchg
aam
sbb
dec
dec
mov
mov
leave
int3
cli
mov
add
neg
ret
lea
mov
cltd
cmp
rorb
xchg
or
out
sub
stos
xchg
push
push
lods
push
cmpsl
mov
xchg
lret
je
loopne
pop
jle
mov
mov
fildll
pusha
mov
lahf
arpl
fucomip
inc
push
jbe
call
fstpt
sub
mov
lahf
aad
pushf
jbe
add
test
mov
cmpsb
in
add
cmpsb
inc
mov
or
cwtl
mov
and
cmpsb
je
cmp
jp
pop
js
lret
add
ja
outsl
daa
into
mov
dec
mov
out
mov
lahf
adc
rcrl
inc
fistpll
cltd
push
fwait
dec
and
xlat
jle
mov
cmp
or
mov
nop
mov
mov
jb
aaa
cltd
es
push
xor
mov
or
out
in
mov
adc
out
int3
pop
xor
movsl
cli
dec
ror
xchg
aam
jne
mov
es
push
lods
cmp
xchg
and
mov
insl
mov
pusha
dec
and
cmp
jl
fistpll
mov
mov
ljmp
notl
sub
or
mov
popa
fdivs
adc
cmp
push
adc
std
push
loope
and
push
repz
mov
lret
inc
sub
ret
out
inc
jo
lret
pop
jae
repnz
jb
mov
sub
push
sub
mov
jle
pop
rclb
or
cli
int
fcmovnbe
push
xor
das
or
sbb
pop
adc
sahf
ljmp
xchg
sub
xchg
cmpsb
xlat
push
lods
or
push
pop
das
lcall
jge
xorl
mov
push
sub
cwtl
cmp
dec
push
jle
mov
sti
jns
das
repz
lret
push
add
xchg
stos
lret
insl
ja
and
into
sub
and
shll
xor
test
ret
sub
cmp
xchg
add
cs
scas
mov
lret
mov
adc
mov
test
mov
rorl
or
xchg
jo
test
adc
and
mov
jb
test
insl
sbb
jae
add
inc
push
pop
jmp
push
xchg
sub
inc
dec
ljmp
mov
pop
ficomps
xchg
xchg
sub
push
pop
daa
or
sbb
cld
xchg
mov
testl
mov
jno
adc
adc
pop
daa
or
jne
test
xorb
fs
out
ja
icebp
pop
daa
or
sbb
or
xchg
xchg
rcrl
dec
outsb
or
xor
aaa
sub
jno
adc
push
push
push
fists
xchg
rcrb
adc
or
popf
shlb
adc
pop
mov
das
sbb
or
fsubp
push
gs
arpl
cmovb
or
roll
pop
sub
xchg
pop
push
and
ror
out
sarl
adc
cld
scas
and
pop
fimuls
rcl
sub
mov
enter
cs
je
and
dec
test
jno
outsl
add
fldl
cmp
inc
testb
mov
push
fimuls
sub
pop
data16
mov
jne
add
xor
adc
stos
mov
adc
gs
es
jne
and
push
rorb
sti
ret
adc
imulb
push
fsub
lret
hlt
and
js
push
adc
mov
loop
push
cltd
aas
xchg
stos
movsb
xchg
xor
sub
xchg
push
jmp
std
test
adc
repz
mov
xchg
outsb
fxch
mov
outsl
mov
sbb
push
cli
adcl
test
cmp
lahf
mov
pop
inc
lods
fldt
roll
jb
push
sbb
popf
cld
insb
shlb
adc
cmpsb
dec
outsl
loope
xchg
sub
inc
test
jmp
mov
ja
stc
mov
out
mov
cltd
xchg
xchg
adc
push
xor
loope
mov
xor
out
mov
lret
mov
sbb
fnstenv
fstpl
cmp
ljmp
lock
dec
pop
xchg
cmpsl
loop
or
popa
cmp
dec
clc
dec
sarb
ja
bound
add
adc
lock
rcrb
daa
or
add
mov
jb
adc
mov
fsubs
or
insb
jp
or
stos
mov
pusha
daa
or
andl
or
mov
pushf
add
jp
orb
jmp
and
jb
adc
push
int
not
xchg
sahf
adc
rcrl
mov
xor
stos
push
and
xchg
shlb
or
std
sub
out
mov
aas
push
fcmovnu
inc
xor
inc
lahf
jge,pt
mov
arpl
cli
leave
and
stos
push
mov
mov
cwtl
lock
pop
jle
jno
add
jns
jb
push
xchg
out
out
push
pusha
jl
movsl
lret
adc
pusha
shll
shll
xlat
cmc
add
jmp
push
and
sub
push
adc
xchg
shlb
mov
outsl
and
add
lods
rclb
sub
adc
ss
loop
or
mov
jb
mov
mov
pop
mov
push
arpl
js
add
in
daa
or
inc
inc
cmp
push
adc
add
push
adc
int
outsb
repnz
or
pop
std
cs
jo
adc
sub
lods
fs
or
aas
jnp
out
jge
daa
or
sbb
jg
jo
shll
out
push
stos
push
stos
xlat
push
push
shlb
dec
lahf
jle
cmp
push
mov
or
pop
out
fisttpl
fsts
mov
push
adc
subb
pop
hlt
call
xchg
xor
push
sub
ret
push
push
inc
cli
lcall
jmp
arpl
dec
xchg
push
cmpb
movsl
xchg
mov
jo
or
gs
sbb
movsb
add
mov
out
push
and
dec
sahf
cmp
mov
xchg
pusha
sub
jb
adc
lods
dec
arpl
mov
mov
test
mov
jmp
sub
jo
adc
leave
decl
cld
mov
lds
add
xor
sub
cli
adc
push
xor
inc
pop
mov
insb
hlt
pop
mov
xor
mov
lcall
push
xchg
scas
push
fstpt
aam
xchg
inc
jl
xchg
fmuls
out
mov
mov
addr16
lods
ljmp
xchg
sbb
push
insb
inc
fcomp
jge
add
ds
aad
sbb
std
rorl
push
jg
mov
push
sub
xchg
mov
cmp
inc
sbb
iret
mov
push
push
or
aas
ficoml
ja
dec
fwait
lret
cmp
cmpsl
iret
inc
push
enter
popf
scas
mov
xchg
mov
jp
xor
inc
xor
inc
pushf
inc
fimuls
mov
sbb
and
rcr
fistl
mov
push
mov
addr16
xlat
push
adc
adc
rclb
fcomps
inc
jns
ja
loopne
stos
movsb
roll
adc
sahf
decl
popf
scas
dec
sbbl
cmpsl
pop
dec
jo
js
pop
iret
inc
add
fs
bound
out
cs
int
xor
mov
mov
jnp
sbb
int3
push
sbb
mov
cld
jne
mov
lahf
decl
jb
mov
push
call
scas
dec
cli
mov
movsl
repnz
and
add
in
das
out
daa
cmpsl
and
cmp
jp
pop
call
clc
dec
je
rcrb
adc
xchg
xor
dec
pop
xlat
lcall
mov
data16
mov
movsb
roll
adc
inc
jl
icebp
push
imul
setge
int3
sub
iret
sbb
inc
cmp
rcl
or
dec
jbe
push
movsb
xchg
push
jl
arpl
stc
cmc
pop
and
and
andb
mov
jp
inc
movsb
roll
adc
data16
shll
add
arpl
popa
or
jns
push
adc
mov
dec
push
xor
insb
sub
xchg
sub
xor
xor
and
xor
and
sub
mov
push
lret
sub
pop
mov
aam
or
and
jnp
sti
hlt
call
in
out
adc
test
aam
imul
fdivrl
mov
inc
rol
hlt
mov
xchg
fsubs
mov
aad
push
movsl
ljmp
aad
out
fdiv
cmp
dec
add
add
lods
ret
cmp
xor
xor
pusha
or
cmp
imul
aaa
mov
lds
or
sub
push
stos
out
sbb
and
sahf
mov
sti
addr16
divl
loop
rcll
rcl
push
push
adc
pop
or
ds
insl
mov
lret
cli
sbb
or
sub
scas
pop
rcl
rorb
and
mov
mov
pop
inc
push
fisubs
outsb
adc
imul
pop
sar
movntq
subb
pop
std
lods
add
jb
xor
cmp
test
stos
ret
pop
incl
sbb
movsb
inc
mov
repz
mov
sub
and
in
mull
add
inc
fwait
mov
mov
cltd
sbb
in
pop
pop
nop
mull
imul
cmp
subb
call
lods
testb
pop
xchg
mull
imul
or
xor
call
cs
mov
adc
aad
push
fsubl
test
mov
push
cmp
jl
mov
fistpll
push
cltd
pop
sub
mov
imul
shll
sbb
ljmp
pop
mov
mov
mov
ljmp
mov
sub
jnp
je
push
push
inc
jg
push
pop
inc
xchg
xor
push
adc
cld
loopne
cwtl
pushf
inc
push
test
mov
push
divps
ljmp
add
push
movsl
and
out
mov
or
and
fmul
sti
dec
add
aas
or
or
lcall
inc
loope
sbb
push
adc
adc
adc
adc
adc
push
adc
adc
adc
adc
adc
push
adc
adc
adc
adc
adc
adc
adc
icebp
push
add
xchg
mov
sbb
enter
dec
push
cmp
pop
rcrl
dec
js
pushf
lret
inc
add
aaa
in
sub
pop
xor
lods
shrl
and
mov
lahf
je
sub
int3
repz
mov
push
mov
insb
out
out
and
adc
inc
fadds
dec
mov
je
mov
sahf
xor
or
stc
cli
dec
or
cmp
cmp
lods
sti
mov
mov
ljmp
lock
add
sbb
lods
nop
sarl
lret
test
mov
push
mov
data16
mov
subl
int3
dec
stc
movsb
ret
je
adcl
mov
xlat
mov
dec
movsl
pop
ljmp
sbb
cltd
jge
sbb
insb
cmp
ss
out
push
mov
cmp
push
stos
sub
cmp
add
mov
adc
mov
cmpl
jecxz
js
push
stos
movsb
sub
jg
pop
inc
das
lret
sbb
mov
ss
dec
adc
mov
nop
and
pop
mov
icebp
mov
dec
mov
cwtl
jns
stc
xor
dec
sub
xchg
lea
insl
stos
outsb
js
dec
ficoms
repz
in
sbb
cld
adc
loop
std
adc
lret
js
lods
test
mov
repz
mov
and
fistpl
jns
movsb
loopne
jmp
fisttpl
xchg
pop
pop
test
dec
dec
lods
adcl
sbb
xchg
icebp
lods
adc
test
pop
inc
inc
inc
or
leave
pop
adc
stos
out
imul
xor
jno
ss
push
jne
aad
inc
and
lods
inc
call
push
dec
lcall
subb
mov
sub
out
movsb
stc
add
pusha
ret
push
mov
sbb
jb
hlt
imul
pop
out
movsl
daa
adc
hlt
cmpsl
inc
ret
test
insl
sbb
jae
popl
add
loope
mov
push
dec
mov
das
sbb
adc
testb
push
shll
adc
stos
xor
ficoml
dec
ljmp
repz
je
adc
enter
aad
or
daa
mov
js
jl
and
sub
adc
pop
dec
dec
mov
or
leave
pop
adc
fcmovnb
lock
xor
sti
cltd
adc
ret
add
cmpsl
lea
xor
popf
xchg
loop
push
sti
adc
sbb
xchg
sub
fcmovu
mov
mov
sbb
repz
aas
xchg
out
mov
push
sti
sbb
sbb
popf
sbb
fcmovbe
inc
cmp
inc
lea
push
test
inc
push
popa
or
sbb
les
ret
or
int
fldcw
mov
sbb
adc
dec
pop
pop
adcb
enter
sti
and
sbb
ret
xchg
sbb
adc
or
jno
or
ljmp
adc
insb
push
and
dec
bound
outsb
mov
adc
popa
add
scas
or
mov
jl
pop
adc
jg
das
stc
sub
or
movsl
fs
xor
dec
hlt
inc
mov
or
add
out
push
popa
es
stos
xchg
or
fldt
or
xchg
jns
into
decl
jne
inc
or
inc
cmp
mov
mov
movsb
jns
ror
std
icebp
icebp
mov
mov
je
jae
addl
testb
insb
std
pop
fsts
subb
lahf
xchg
add
mov
outsb
cmpsl
mov
cli
dec
sahf
xchg
push
and
lea
xchg
push
inc
ret
jbe
sbb
pop
leave
ja
inc
lock
enter
cmc
repz
sub
dec
fimull
lods
push
push
mov
fdivl
pop
or
fwait
push
rcll
das
std
mov
xchg
std
cs
xlat
cli
dec
ds
fstpt
jb
xchg
scas
adc
mov
fldenv
insb
pop
xchg
dec
mov
out
xchg
in
xchg
xor
sbb
inc
mov
and
cmp
add
nop
insb
xchg
push
fs
lahf
or
shrb
add
add
mov
int3
pop
ja
lods
shrb
dec
jbe
xor
jecxz
loope
cltd
cs
aaa
hlt
xor
push
aas
mov
dec
dec
popa
mov
stos
push
jge
cmp
stos
mov
imul
idivb
ja
stos
push
xchg
rcrl
mov
stos
pop
mov
in
cmpsb
or
mov
scas
fisttpll
pop
inc
add
fcmovne
cmpsl
fiaddl
lret
das
push
rorb
pop
and
out
push
adcl
and
pop
adc
and
mov
sbb
and
jp
pop
or
jb
jns
sub
push
icebp
rcll
jg
push
divb
std
lcall
cmp
jp
push
mov
outsl
stos
push
scas
xchg
aam
push
cmpsl
sbb
mov
out
and
nop
xchg
roll
mov
fsubrl
fisubl
mov
adc
inc
pop
outsb
lock
pop
cs
push
jb
cmp
push
xlat
insl
pop
and
popa
dec
jae
push
pop
inc
or
and
test
or
push
fwait
inc
clc
adc
mov
push
stos
insl
push
movsb
push
cmpsl
dec
sbb
sub
sbb
ljmp
cli
pop
push
dec
sub
stos
stos
fistps
es
cmpsl
repz
test
adc
pusha
sar
in
cs
jno
adc
and
pop
jmp
pop
jbe
inc
mov
iret
xchg
jge,pt
sbb
out
mov
xorb
lds
por
roll
sbb
mov
hlt
cmovno
mov
lahf
iret
outsb
and
pop
adc
enter
out
xor
pop
mov
mov
adc
dec
cli
mov
pushf
jg
fcomi
int
mov
jbe
addr16
jo
into
jns
sti
imul
mov
mov
hlt
scas
cld
out
sbb
sbb
sub
sub
dec
clc
mov
ds
iret
lahf
pop
cld
add
cmpsb
cmpsl
jne
icebp
push
push
push
stos
push
sub
push
popa
js
les
pop
out
jnp
fbld
rcl
inc
fs
push
cltd
xchg
int3
outsl
popa
es
movsb
out
scas
dec
movsb
lret
ljmp
in
add
xor
roll
stos
push
test
jecxz
adc
jg
xor
ljmp
add
icebp
pop
xor
popf
test
and
ja
loopne
adc
mov
inc
fcomp
hlt
mov
in
test
cmp
cmp
push
and
inc
aad
stos
repnz
xchg
xchg
daa
inc
hlt
daa
push
cli
or
sarl
sub
push
ja
pop
mov
adc
sub
xchg
adc
cld
lahf
inc
sub
lea
std
ffree
push
mov
jmp
out
in
xchg
cmpsl
aaa
and
xchg
adc
test
mov
imul
out
dec
mov
mov
enter
call
cmp
in
fimuls
cmp
jns
ja
fidivs
in
inc
dec
loop
xchg
in
dec
es
sub
out
xchg
cmpsb
in
mov
mov
mov
jg
inc
mov
mov
push
and
test
pop
push
and
push
dec
je
dec
in
test
xchg
sub
dec
in
fidivl
shrb
sbb
cwtl
int3
xor
or
dec
cmp
dec
aam
adc
mov
or
add
shr
scas
cmp
mov
movsl
hlt
lret
bound
jb
mov
jp
pop
sub
inc
fincstp
add
imull
mov
mov
adc
shr
insb
incb
mov
and
jge
pop
fadds
adc
pop
adc
adc
enter
jne
test
fistps
imul
adc
lret
inc
xchg
data16
sbb
aam
fs
arpl
sub
adc
cmp
loop
cmp
push
cld
lods
popa
enter
sub
push
jle
ja
pop
push
nop
adc
insb
outsl
cmp
xlat
out
push
cwtl
adcl
cmp
lret
inc
bound
dec
lds
ljmp
cltd
daa
shrl
inc
mov
bound
lret
sbb
adc
fiaddl
pop
adc
lret
ret
out
test
insb
daa
or
pop
cmpsl
mov
adc
dec
ljmp
adc
cmc
repz
insb
daa
or
out
dec
incl
push
sub
inc
pop
cmp
adc
inc
imul
sub
repz
inc
sub
addb
mov
mov
jmp
repnz
int
insb
daa
or
rclb
bound
pushf
cmp
cmp
add
shll
jecxz
push
xchg
nop
xchg
xchg
mov
shlb
or
cli
stos
out
cmpsb
inc
imul
push
out
inc
fists
nop
dec
call
sub
ss
in
lahf
pop
or
mov
mov
aaa
push
daa
adc
push
xchg
adc
jl
xor
cld
scas
mov
lret
pop
out
subl
jg
rcrl
cmp
jo
stos
fists
in
jmp
xor
stos
and
sbb
push
loopne
inc
stos
sarl
dec
in
lahf
mov
sub
xchg
pop
mov
push
and
and
cmp
xor
in
ss
xor
outsb
mov
imul
in
stos
and
mov
push
cmp
int3
arpl
add
adc
ret
insl
xchg
mov
dec
pop
inc
xchg
cmp
xchg
add
pop
sub
gs
icebp
jecxz
data16
out
push
mov
mov
xlat
out
pusha
mov
pushf
pop
mov
and
push
fucomip
lahf
pushf
mov
and
push
add
xor
hlt
mov
ret
xor
stc
add
daa
mov
ljmp
addr16
push
adc
cmp
insl
popa
mov
add
push
and
inc
arpl
or
je
push
adc
mov
dec
jae
fsubl
scas
xchg
push
push
test
lods
fisubl
jo
and
push
loopne
fs
push
jnp
pop
or
xchg
cmp
ror
scas
jle
jb
sbb
dec
clc
mov
dec
ja
insl
cs
add
mov
pop
inc
mov
xchg
xchg
mov
fisttps
fisttpll
pusha
and
mov
mov
adc
jle
dec
sbbl
scas
fdivl
in
jo
adc
je
adc
les
push
test
cmpsb
cli
xlat
orb
movsb
push
clc
xchg
shlb
jmp
inc
adc
adc
pusha
mov
jl
shlb
adc
pop
mov
and
push
lea
test
pop
filds
arpl
push
inc
add
sti
pop
rolb
movb
lahf
into
inc
loopne
mov
fadds
push
inc
or
int3
mov
lret
insb
ds
sbb
nop
out
call
jl
divl
cmp
ja
shlb
cmp
fistpl
ss
orl
xchg
jmp
pop
jno
xor
or
btc
movsb
jo
adc
inc
cmpsb
repz
cld
les
dec
and
push
jl
push
xchg
pop
push
jnp
sub
push
add
fcomps
jo
andb
je
pop
push
xchg
cmc
push
out
icebp
dec
daa
test
les
jae
xchg
subl
cs
pop
and
mov
pop
xchg
inc
mov
and
adc
mov
aam
fisubs
mov
jp
mov
inc
dec
ja
in
xchg
popf
faddp
out
mov
orb
cltd
es
lods
add
jbe
loope
out
out
xor
dec
notl
mov
aad
mov
xchg
push
dec
pushf
jno
push
out
sahf
jmp
and
mov
bound
movsb
sbb
adc
xchg
ds
mov
add
shrb
jne
sub
cli
xchg
xor
insl
pop
mov
jb
divb
mov
adc
jmp
push
cmp
fstpl
and
adc
jmp
and
adc
ficoms
loope
pop
mov
and
adc
jp
mov
ret
jecxz
cmc
insb
and
adc
andb
cwtl
int3
push
ret
mov
jp
mov
cmp
sbb
lret
xchg
out
imul
cmp
arpl
rep
and
adc
lahf
push
das
pop
jge
inc
xchg
insb
and
adc
xchg
and
xor
push
or
test
and
adc
jge
cs
int
and
xor
jmp
xchg
icebp
popa
or
dec
mov
jno
adc
movsl
int
adc
push
and
int3
pop
cmp
fwait
das
xor
iret
and
adc
out
imul
jbe
lds
fdivrl
cmp
and
inc
lea
gs
loopne
and
adc
movsl
mov
push
mov
inc
sbb
pusha
mov
push
jns
imul
loope
mov
and
adc
and
seto
mov
in
lcall
lods
shlb
adc
xor
jle
add
add
or
pushf
pop
test
sub
jb
adc
xchg
lret
sbb
lea
mov
sub
push
mov
and
sub
popa
rorb
sbb
pop
pop
cmp
pop
mov
add
or
daa
mov
sub
mov
dec
dec
xchg
xor
push
adc
mov
mov
push
jne
sti
addr16
sub
sbbl
dec
scas
inc
inc
das
sub
push
scas
pop
xchg
xor
cmp
in
pop
aas
cmc
add
dec
inc
in
ret
cld
sahf
dec
jge
mov
imul
dec
popa
pushf
test
into
in
jge
dec
lret
loop
jg
inc
add
jns
cmp
add
das
shlb
xor
rcrl
cltd
into
daa
push
add
add
sub
cmp
mov
jns
imul
bound
sahf
jl
daa
adc
outsb
jae
jno
jg
out
or
xor
mov
mov
fdivl
xchg
sub
scas
push
sub
dec
int
mov
mov
xor
fwait
jo
mov
dec
and
sbb
in
dec
sbb
shl
adc
mov
jl
push
adc
std
andl
shl
mov
ja
push
mov
movsb
sub
ret
stc
rclb
jae
lods
cld
inc
jge
jns
fisubs
or
and
insb
lds
mov
iret
scas
adc
mov
xor
push
sbb
adc
mov
pop
push
daa
or
enter
notl
inc
mov
and
std
mov
adc
and
jo
adc
daa
or
jae
inc
xor
roll
jb
lcall
arpl
inc
jns
jbe
shufps
jl
push
adc
loop
leave
les
cmc
movsb
ret
push
adc
sub
cmp
movsb
int3
enter
movsl
push
push
mov
cmp
adc
push
push
or
daa
or
push
xlat
fnsave
or
jp
push
xor
jo
adc
seta
das
add
dec
ss
lods
in
mov
xor
mov
mov
popf
cli
cli
iret
mov
aad
jae
ret
mov
cmc
cs
addr16
out
mov
mov
mov
sbb
hlt
jo
adc
push
js
mov
and
adc
je
or
aaa
lcall
cmp
js
xchg
xchg
jo
pop
out
pop
daa
adc
push
add
sbbl
jl
push
adc
cmpsl
sub
xchg
scas
iret
xchg
mov
shrb
mov
mov
dec
mov
sbb
arpl
cld
sbb
shl
aad
jo
jb
adc
push
icebp
mov
and
jne
sub
push
repnz
jns
lret
dec
stos
push
stos
inc
push
inc
mov
mov
lahf
adc
inc
lcall
daa
pop
adc
jns
lret
jb
push
stos
inc
xor
mulb
aam
shl
test
cs
scas
movsl
call
mov
stos
push
mov
idivb
sub
push
xorb
es
mov
sub
fdivs
mov
outsl
les
sbb
outsb
iret
test
mov
sub
in
in
pop
adc
push
test
push
insb
adc
pusha
xchg
sub
adc
xchg
flds
cmpsl
scas
push
jmp
sub
adc
push
popa
roll
lret
add
lret
xchg
sub
cmpsl
scas
push
fsubrp
inc
ja
jbe
adc
xchg
sbb
pusha
xlat
and
push
pop
imul
es
stos
adc
dec
iret
test
adc
pusha
shlb
adc
lret
rcrl
sub
adc
dec
popf
sbb
mov
pop
adc
jne
mov
pop
adc
sub
push
mov
mov
in
pop
adc
imul
mov
loope
scas
push
or
cmp
pop
adc
test
or
mov
pop
adc
in
sub
adc
cwtl
sbb
inc
in
push
test
aam
push
in
pop
adc
dec
divl
js
sub
pop
adc
int
lods
cmp
mov
ret
xor
cmp
sub
adc
stc
movsl
push
bswap
xchg
cmp
sub
lret
mov
and
lock
adc
hlt
xor
repnz
aad
imul
shlb
lea
inc
add
cmp
cs
cmp
push
fldln2
push
jo
or
push
repz
or
add
jo
or
dec
pop
jo
mov
adc
mov
pop
adc
arpl
push
dec
fadd
lock
mov
lods
shrb
mov
test
mov
push
jb
dec
aam
aas
sbb
lret
jmp
push
or
stos
js
push
mov
push
sub
pop
adc
leave
andl
xchg
data16
push
push
sub
push
mov
xchg
arpl
ja
push
inc
dec
gs
out
lods
pusha
pop
imul
cwtl
sub
daa
stos
add
mov
hlt
sub
mov
xchg
pop
in
fcompl
dec
cs
adc
or
sub
mov
movsb
cs
adc
fsubp
xchg
sti
dec
cmp
jecxz
les
adc
pop
sbb
sahf
push
sbb
sub
sub
jbe,pt
fsubrs
pop
adc
fmuls
and
jo
cs
adc
aam
or
jl
popw
out
jb
dec
test
pop
adc
adc
outsb
outsb
dec
adc
cwtl
cmpsl
lock
das
pop
adc
jl
mov
xor
fnstcw
adc
add
add
aad
add
pop
adc
mov
adc
scas
push
insl
mov
or
out
ja
lea
adc
pop
lods
pop
ret
xchg
shlb
stos
sbb
push
or
pop
out
inc
bsf
pop
adc
in
dec
lea
inc
ror
xchg
cmp
adc
cs
icebp
in
xchg
cmp
mov
xor
adc
outsl
push
adc
add
pop
adc
ja
or
pop
out
push
cli
xor
push
movsl
push
stos
push
sub
push
mov
jo
je
fcoms
iret
xor
xor
adc
jge
lret
jb
push
inc
push
lods
pop
xor
adc
cmp
inc
mov
xor
adc
cmp
das
pop
int
ljmp
push
test
ret
lock
push
lods
mov
cmpb
movsl
cmp
push
inc
das
push
in
call
fsubrs
test
pusha
push
sbb
xor
sbb
xor
inc
sub
push
fsubrp
jecxz
push
hlt
lret
push
inc
mov
xorb
cmp
push
ja
lea
pop
adc
pop
lods
pop
ret
xchg
repz
es
lret
aam
pop
adc
pop
xor
adc
in
test
pop
adc
mov
adc
cmpsl
push
orb
cmp
push
ja
mov
push
mov
fdivl
pop
adc
adc
adc
cld
sub
or
sub
mov
xlat
pusha
ret
cld
enter
inc
xor
adc
sbb
das
pop
int
ljmp
push
test
and
mov
cmovl
movsb
cmp
xchg
push
in
jo
pop
adc
roll
cli
aaa
bound
add
jno
mov
inc
stos
push
out
pop
xor
add
jae
xchg
push
punpcklwd
lret
xchg
imul
fdivs
add
push
addr16
or
mov
mov
mov
pop
hlt
add
and
mov
jo
test
fcmovnb
cmc
fiaddl
mov
inc
loop
test
push
data16
inc
loope
xor
cmpsb
jmp
or
cltd
mov
lahf
imul
mov
int
cmp
pop
adc
inc
outsb
sbb
pop
cmpsb
pop
jmp
pop
xchg
cmp
loope
pop
add
mov
jle
xor
adcb
retw
and
notl
adc
cmp
dec
rclb
and
pop
adc
lods
cmp
lods
and
jae
jno
push
clc
je
sub
addb
or
jns
scas
and
push
sub
mov
pop
inc
lods
shrd
aas
dec
outsl
leave
das
jl
sub
add
inc
movsl
sbb
test
dec
lds
in
movsl
sub
daa
pop
clc
lods
fiaddl
pop
pop
xor
fisubs
insb
loope
test
adc
test
arpl
call
add
jae
ret
into
add
or
fld
cmp
test
jbe
sbb
mov
and
iret
mov
into
and
push
xchg
lods
or
mov
jmp
inc
sub
dec
mov
pushf
mov
pop
adc
and
add
mov
enter
lea
push
jns
ds
ret
jae
or
dec
sahf
lcall
push
sbb
pop
adc
es
mov
jmp
out
cmpsb
push
arpl
push
or
inc
aam
movsl
push
outsb
pop
dec
cmp
adc
or
jmp
lahf
fs
js
inc
add
in
aaa
pop
adc
idivl
mov
xchg
mull
jo
pop
adc
scas
inc
lods
pop
ret
xchg
jmp
inc
stos
ja
mov
add
gs
sbb
pop
out
inc
das
mov
and
leave
bound
add
push
ja
mov
push
mov
adc
push
mov
andb
aaa
jmp
pop
pop
out
fs
and
sub
fdivrl
pop
adc
test
minps
sub
cmp
adc
push
push
stos
push
and
shlb
adc
cmp
adc
sbb
das
pop
lret
ror
push
push
stos
adc
dec
roll
lock
jbe
jnp
or
push
lds
pop
rcll
and
pop
shlb
ja
pop
or
push
hlt
andl
sbb
pop
pop
out
mov
fildl
push
scas
push
mov
jnp
pop
insl
test
into
cld
cmp
shll
xchg
pop
out
sub
ja
imul
adc
xchg
add
arpl
mov
sbb
inc
ja
jle
adc
pop
adc
xchg
add
gs
push
scas
cmp
iret
xchg
pop
out
inc
stc
lods
test
pop
adc
in
push
lea
inc
shlb
cs
in
xchg
cmp
xchg
push
stos
adc
outsl
sbb
and
mov
pusha
rcll
push
in
xchg
cmp
imul
mov
sbb
and
out
es
xchg
inc
popf
loopne
shr
cmp
adc
adc
push
xor
xor
mov
mov
push
das
dec
jmp
cltd
das
mov
pop
clc
in
xchg
add
dec
sbb
adc
add
jno
mov
push
mov
pop
mov
or
xor
jb
adc
dec
ja
loopne
aaa
adc
fdivr
test
popf
iret
mov
mov
test
sarl
pop
adc
pushf
and
adc
mov
mov
push
pushf
jp
xchg
shr
push
pop
dec
je
rolb
lods
sarl
xor
jo
adc
adc
cmp
adc
arpl
mov
lahf
stos
xchg
sti
ds
push
and
aaa
je
inc
dec
and
mov
pop
stos
adc
pop
cmp
out
inc
jo
pop
adc
mov
add
arpl
movsb
jle
sub
ljmp
and
xchg
ret
test
pop
sub
arpl
ss
sub
pop
mov
mov
dec
adcb
inc
and
push
mov
std
cli
push
pop
sub
dec
mov
mov
jg
xor
popf
sbbl
inc
jg
outsb
stc
sar
dec
mov
loopne
pop
adc
pop
test
leave
pop
repnz
mov
xor
inc
pop
adc
insl
mov
gs
and
jp
testl
adc
shrl
jns
andl
addb
stos
pushf
nop
daa
pusha
sahf
inc
loopne
fmuls
inc
pop
adc
bound
add
inc
pop
adc
or
std
pop
or
out
mov
bound
ret
lods
push
mov
pop
nop
out
rcrl
hlt
push
data16
movsl
cmp
lea
insb
jbe
int3
pop
nop
pop
add
jbe,pt
or
inc
loop
ds
arpl
and
cltd
adc
arpl
arpl
pop
adc
add
bound
mov
inc
pop
adc
adc
outsb
sbb
and
adc
ja
inc
pop
adc
mull
out
mov
inc
pop
adc
test
sub
ljmp
fs
pop
adc
xchg
add
push
add
repz
subl
in
push
inc
pop
adc
ja
test
or
ljmp
sub
pop
mov
cmp
scas
push
fldenv
pop
mov
aam
cli
adc
add
adc
pop
pop
sbb
lret
lahf
scas
push
in
mov
pop
adc
xchg
or
and
lahf
sbb
or
mov
test
inc
test
stos
push
jmp
inc
pop
adc
stos
sbb
jo
or
inc
pop
adc
aam
sub
out
inc
add
das
pop
xchg
test
sbb
inc
pop
adc
add
and
test
ftst
xchg
dec
xor
push
push
divb
xchg
inc
pop
adc
push
scas
jae
mov
mov
mov
jle
inc
mov
mov
fstpl
xor
inc
sub
push
fsubr
mov
adc
pop
adc
xchg
add
arpl
xchg
insl
mov
adc
dec
mov
ret
adc
pusha
shll
push
mov
pop
adc
je
sub
out
inc
xor
inc
pop
adc
rdtsc
pusha
mov
negb
xor
inc
dec
inc
stos
push
fsubrp
xchg
ja
ja
adc
pop
adc
xchg
add
gs
ja
scas
push
iret
xchg
insl
inc
inc
pop
adc
inc
mov
test
pushf
add
pusha
xchg
inc
pop
adc
inc
mov
dec
pop
adc
dec
lods
pop
ret
rcr
xchg
outsb
push
daa
inc
lret
pop
adc
pop
xor
inc
cmpl
push
stos
repnz
dec
dec
pop
adc
xor
rolb
movsb
mov
outsl
mov
into
inc
mov
xor
clc
add
addb
adc
movsl
ja
mov
movsl
stos
pop
jecxz
dec
pop
adc
ret
mov
pop
adc
add
jno
and
fmuls
adc
imul
inc
or
and
pop
adc
divb
jne
insl
pop
mov
pop
adc
fimuls
and
jo
dec
pop
adc
xor
or
mov
and
ja
inc
mov
inc
dec
pop
adc
sbb
xor
cwtl
aam
add
push
aad
jge
fiadds
cwtl
dec
pop
adc
pop
xorb
xchg
lods
leave
enter
sub
cmpsb
mov
mov
mov
and
popf
pop
les
divl
adc
pop
test
sbb
xchg
pop
and
push
lods
pop
mov
dec
push
clc
mov
cmp
sbb
adc
jns
mov
cltd
mov
and
movsb
dec
push
mov
inc
fimuls
add
fildll
sub
scas
and
pop
or
movsl
push
pop
aam
mov
shlb
pop
adc
push
sahf
pop
clc
mov
gs
jmp
sbb
imul
movq
inc
popa
imul
mov
jg
cs
in
or
pop
pusha
mov
pop
adc
dec
test
adc
ljmp
add
test
push
loop
mov
jmp
inc
mov
int
fists
dec
xor
mov
shll
inc
xor
outsb
ret
test
push
test
cmp
popl
inc
jno
movsl
cmp
push
stos
pop
and
inc
jl
nop
push
jo
pop
stc
sub
pop
les
adc
ret
sbb
stc
and
iret
shrb
cwtl
pop
loop
sub
loope
add
jecxz
iret
or
cmpsb
fbld
test
in
fdivrl
bnd
fldt
pop
adc
jnp
test
cmp
lods
xor
xor
fisubl
pop
adc
dec
stos
push
fisubrs
xchg
jb
test
xchg
xlat
inc
mov
dec
xlat
pop
repz
pop
pop
add
lret
mov
lret
dec
sbb
js
mov
shll
xchg
mov
das
push
fsubs
les
pop
cmpsb
sahf
cmp
sbb
jbe
mov
scas
mov
fcoml
daa
fldcw
xor
xor
or
pusha
xlat
arpl
push
pop
pop
cs
jae
lret
lcall
mov
aam
call
xor
arpl
pusha
rcll
insl
test
cmp
pop
push
stos
and
aaa
mov
ljmp
roll
lret
rcr
loopne
push
stos
daa
sbb
ret
mov
inc
mov
bound
sbb
pop
mov
sub
fsubrs
push
lods
dec
andl
int3
push
jmp
xor
sbb
cs
or
outsb
mov
lods
mov
mov
sbb
and
fisubrs
arpl
lock
pop
cs
scas
out
adc
xchg
pop
daa
pop
push
stos
push
mov
idivb
and
push
loopne
les
pop
mov
sub
fadds
push
lods
dec
sete
test
sbb
mov
xor
sbb
cs
imul
stos
push
stos
inc
add
mov
mov
out
mov
sbb
dec
xchg
add
mov
cmp
inc
push
mov
xor
jne
xor
jb
adc
sub
rcll
sbb
stos
sbb
pop
dec
data16
sub
inc
mov
xchg
movb
mov
sub
cwtl
push
pop
adc
hlt
mov
sbb
mov
push
inc
mov
cmp
jno
scas
sbb
pop
adc
pop
sbb
sub
ucomiss
pop
or
adc
pushf
and
stos
mov
scas
dec
mov
push
pop
adc
out
adc
sub
mov
pop
adc
and
inc
inc
xor
pop
adc
ja
sub
jl
mov
mov
xor
push
pop
adc
in
and
enter
push
push
pop
adc
add
xor
adc
subl
movsl
adc
push
pop
adc
jnp
pop
test
adc
pop
mov
ja
sbb
inc
mov
push
pop
adc
or
std
fcmovne
inc
push
lods
adc
test
rorl
xchg
daa
imul
cwtl
push
pop
adc
ljmp
pop
dec
mov
mov
pusha
and
jbe
lahf
lret
or
adc
inc
repnz
das
mov
cmp
mov
sub
daa
inc
jecxz
mov
mov
aaa
cs
add
adc
xor
insl
xchg
push
and
lods
cmp
mov
enter
pop
outsl
inc
push
push
push
pop
adc
xor
add
or
cmp
fprem1
and
pop
adc
stos
icebp
hlt
rcrb
mov
test
lret
push
pop
adc
lods
dec
mov
sub
xchg
stos
shlb
mov
int
lods
mov
jno
cmp
movsb
out
adc
xor
cmp
sbb
icebp
xor
mov
fwait
and
movsb
cld
mov
pop
mov
dec
sbb
test
adc
pop
and
inc
jl
mov
lock
pop
stc
inc
les
lock
test
dec
push
adc
jo
xchg
idivl
scas
sbb
out
adc
adc
sub
mov
mov
push
add
xchg
fsubrl
in
mov
stos
xchg
sbb
pop
adc
idivb
sbb
adc
adc
jl
pop
adc
mov
stos
and
ja
call
push
lds
add
gs
pop
scas
out
pop
iret
xchg
pop
daa
xor
decl
ret
jbe
jmp
hlt
push
pop
adc
testl
cmp
push
push
stos
and
xchg
fisubl
inc
stos
jnp
adc
pop
pop
pop
adc
xor
sub
lods
pop
pop
adc
jle
test
or
loop
pusha
mov
or
cs
adc
adc
add
aam
repz
add
pop
pop
adc
mov
or
imul
stos
xor
fldcw
or
pop
adc
popf
add
gs
jae
dec
push
iret
xchg
insl
mov
pop
adc
inc
mov
ret
push
sahf
push
lea
xchg
pop
rorl
sbb
cmp
aam
loopne
pop
adc
dec
lods
pop
divl
pop
pop
adc
lods
pop
lea
inc
shl
xchg
jae
adc
sbb
adc
ftst
xchg
lcall
adc
cmpb
ja
pop
cmp
inc
ja
mov
push
mov
adc
push
mov
loopne
pop
adc
fmull
das
pop
int
cmpsb
lret
xchg
sub
scas
scas
push
fsubrs
repz
ret
das
rclb
xor
or
and
das
push
fisubs
call
pop
gs
in
es
clc
push
popa
roll
inc
ja
mov
push
aad
ret
lahf
aad
cmc
adc
xor
std
cmp
shlb
xchg
pop
es
fs
pushf
aas
jns
aad
inc
mov
dec
aad
sti
or
pop
sub
jno
enter
stos
push
out
dec
pop
pop
adc
mov
out
cbtw
rolb
inc
jae
mov
lods
stos
pop
jecxz
pop
pop
adc
mulb
or
pop
fcomps
adc
pop
mov
in
cmp
pop
mov
add
adc
lods
bound
lods
xchg
pop
pop
adc
cld
and
dec
mov
cs
jl
mov
js
mov
xor
shll
add
xor
int
xor
add
jle
xor
mov
aad
mov
rolb
mov
and
xchg
icebp
shlb
pop
pop
adc
je
pop
mov
mov
or
or
addr16
sub
mov
sub
pop
mov
mov
test
adc
fldcw
add
addr16
pop
adc
les
popa
cmpsb
add
clc
pop
pop
adc
in
stos
xor
mov
mov
adc
scas
in
int3
sub
pop
sub
pusha
jae
mov
repz
and
pop
jo
cmpsb
jge
push
jae
pop
pop
adc
sbb
pop
pop
adc
pusha
xor
pop
adc
pop
popa
in
xchg
jle
sub
pop
adc
add
jb
fwait
fs
sub
dec
ror
jae
rorb
ret
leave
aas
imul
lahf
cwtl
arpl
adc
mov
fwait
cmc
int3
push
sub
jne
cli
inc
sarb
loopne
pop
adc
jbe
pusha
pop
adc
jae
mov
jl
inc
rclb
or
shll
adc
jle
adc
inc
cmp
and
ret
mov
std
mov
fnstenv
xchg
lock
fisttps
pop
adc
dec
inc
xchg
pop
dec
push
shrb
cmpsl
cltd
jns
aas
dec
fs
pop
xor
adc
adc
enter
rcrb
adc
loopne
or
popa
lcall
popa
pop
adc
push
in
out
jle
notb
lods
sub
es
notb
add
popa
pop
adc
push
daa
or
imul
or
sbb
mov
idivb
sbb
pop
or
cmp
out
push
stos
push
mov
adc
push
cld
fldl
push
add
ja
push
pop
imul
fldenv
enter
fs
jbe
mov
ja
outsb
sbb
xchg
pop
out
inc
div
bound
adc
insl
lea
inc
shr
xchg
xor
adc
sbb
arpl
adc
fldenv
pop
mov
aam
cmc
adc
xor
out
pusha
rcll
test
lret
or
fidivs
imul
inc
push
arpl
adcb
ljmp
xchg
sub
mov
push
jmp
arpl
adc
push
insb
roll
decb
xchg
mov
push
push
cmpsb
enter
gs
dec
lock
jge
or
push
lds
sub
push
stos
and
pop
shlb
ja
jnp
adc
andl
push
cli
push
pop
pop
out
mov
mov
push
lods
sub
outsb
mov
mov
shl
add
adc
lea
fmull
in
pop
adc
push
push
push
in
add
mov
xchg
sub
sbb
jno
pop
mov
or
adc
or
ja
sbbl
mov
adc
push
addb
mov
repnz
pop
xor
sub
pop
adc
xchg
jl
cmp
scas
push
scas
sbb
pop
adc
pop
and
sub
aam
or
mov
or
aam
or
inc
lahf
jo
xor
mov
add
adc
aas
cmp
xor
cs
pop
dec
sub
sbb
in
sub
mov
fs
adc
outsl
or
add
jecxz
repz
and
and
ljmp
adc
insl
inc
xor
sti
stos
inc
lods
pop
lret
pop
ss
scas
dec
sbb
xor
cwtl
aam
add
push
aam
jge
fiadds
adc
adc
pop
mov
xchg
mov
mov
dec
mov
ljmp
lahf
inc
les
fwait
push
xor
mov
adc
popa
fwait
je
mov
push
stos
pop
shl
dec
jns
mov
pop
push
popw
adc
test
mov
fwait
arpl
popw
adc
lods
jge
sub
pop
adc
sub
pop
adc
subb
int3
addr16
adc
dec
xchg
popa
sti
ljmp
xchg
and
mov
push
xchg
aaa
lods
push
add
adc
js
ret
adc
inc
cmp
push
mov
arpl
jl
adc
cwtl
add
daa
stos
add
cld
test
pusha
sahf
inc
mov
fdivr
rolb
lret
xchg
pop
add
mov
ds
mov
stc
scas
or
mov
addr16
pop
movsl
dec
push
out
and
and
sbb
arpl
test
lds
push
jcxz
outsl
add
pop
adc
and
mov
testb
shrl
int3
pop
imul
dec
push
and
imul
inc
dec
adc
imul
imul
into
pop
movl
adc
ret
pop
adc
mov
adc
adc
jle
popa
mov
inc
pop
andb
ja
imul
sbb
add
subl
out
cmp
test
imul
push
addb
ja
cmp
mov
popa
inc
or
push
fsubrp
sti
ja
xchg
adc
push
andb
inc
enter
scas
scas
ret
lret
xchg
pop
out
inc
outsl
push
stos
pop
ret
xchg
les
and
jbe
addb
gs
sbb
pop
out
inc
dec
push
stos
pop
ret
xchg
in
and
jbe
addb
gs
sbb
pop
out
inc
scas
push
stos
pop
ret
xchg
add
and
pop
adc
test
subl
push
in
aam
pop
adc
mov
jg
add
xorb
cmp
je
mov
push
lods
push
fisubrs
test
xor
inc
mov
dec
xlat
mov
and
adc
ljmp
lods
pop
mov
pushl
lret
push
cmovge
xorb
cmp
mov
insl
pop
adc
jno
pop
ror
clc
ss
xor
daa
subb
add
js
cmp
lea
adc
pop
adc
dec
das
adc
xor
addr16
out
add
adc
xchg
sub
call
mov
mov
sbb
daa
or
pop
adc
xlat
jnp
jb
js
cmp
mov
outsl
pop
adc
and
and
pop
es
ret
jns
lods
pop
mov
sub
daa
pop
push
lods
pop
cmpsl
mov
nop
lods
fwait
sbb
shl
movsl
push
das
pop
scas
outsl
loopne
xchg
pop
out
inc
mov
shr
nop
es
daa
inc
cld
test
je
test
or
pop
mov
sub
test
sbb
sbb
fisubs
inc
mov
pushaw
ret
xchg
insb
cmp
mov
pop
push
scas
push
mov
sbb
push
je
dec
test
pop
or
jnp
ret
pop
movsb
pop
shl
xchg
pop
sub
xchg
push
aam
pushf
or
jecxz
xchg
adc
xor
dec
pop
mov
jl
inc
nop
push
dec
daa
lods
bound
mov
das
xor
push
jmp
ljmp
push
add
pop
adc
jne
jb
repnz
inc
cmp
sub
and
mov
pop
adc
rolb
fidivl
nop
xor
add
mov
add
mov
cmp
shrl
push
fldcw
sbb
mov
xor
iret
sub
adc
mov
dec
xchg
sub
pop
mov
mov
pop
out
cmp
adc
and
dec
fwait
and
mov
mov
ss
cs
aas
and
cmp
fcomps
inc
movsl
outsb
out
inc
mov
in
push
dec
mov
je,pt
mov
jnp
jae
cmp
cmp
inc
incl
push
insb
and
jp
and
jp
je
pop
out
jge
sarl
xlat
xor
dec
mov
in
cmc
roll
call
notb
leave
mov
into
lret
mov
ret
cmp
mov
cltd
cld
xchg
clc
test
inc
out
fbld
adc
lret
pushf
out
shr
sub
push
push
mov
cltd
mov
push
pusha
daa
aam
nop
out
loop
dec
jb
adc
adc
or
push
hlt
in
xor
and
jb
adc
xchg
cvtpi2ps
jl
inc
xchg
shlb
adc
pop
fisubl
xorb
pop
jo
in
jae
adc
ss
xor
cmp
jmp
js
pop
adc
nop
mov
push
adc
jp
into
and
je
adc
add
pop
and
adc
pushf
or
push
xlat
or
pop
imul
push
stos
and
pop
shlb
ja
inc
or
fs
jne
add
gs
scas
scas
mov
mov
adc
jb
popa
ret
adc
popa
shll
push
in
pop
adc
adc
sub
fistpll
add
test
cmp
pop
adc
or
adc
sub
fsubp
movsb
sub
orb
xor
adc
jae
addl
je
lret
jbe
adc
adc
push
sbb
inc
mov
jbe
adc
cmp
das
pop
lret
ror
mov
adc
ret
in
pop
adc
lock
add
pop
mov
cmp
lods
push
stos
adc
ja
adc
out
and
and
dec
es
test
loop
jecxz
out
and
ret
test
pop
subb
ja
ja
adc
xor
inc
or
push
lods
shlb
cmp
pop
xchg
adc
out
jae
lea
jge
pop
ret
xchg
or
das
jbe
push
or
jb
faddl
adc
daa
sbb
mov
idivb
and
push
xchg
pop
ret
lock
adc
pop
out
inc
nop
std
scas
pop
ret
xchg
xchg
stc
and
push
popa
roll
lret
sarb
daa
sbb
out
pop
arpl
ret
pop
adc
orl
ljmp
mov
adc
xchg
pop
cwtl
sbb
popa
ret
mov
pop
adc
pop
out
rolb
jp
adc
pop
mov
or
daa
push
fcoms
fs
inc
sbb
pop
mov
dec
pop
test
fucomp
movl
stos
add
sbb
push
pop
es
lret
ret
sbb
inc
cmpsb
jno
out
add
push
mov
lods
pop
ds
mov
jge
jp
adc
push
xchg
inc
nop
push
aaa
daa
sbb
mov
adc
and
mov
stc
movsl
sub
pop
adc
or
adc
movsb
stc
data16
or
aad
loopne
pop
adc
xchg
push
jecxz
add
dec
inc
sub
mov
stos
stos
pop
mov
jo
or
push
aaa
rclb
adc
test
or
sub
mov
sub
pop
adc
fldenv
add
push
loopne
push
int
and
mov
lret
cwtl
data16
pop
nop
add
sbbb
sbb
sub
mov
test
xchg
popa
lahf
xor
mov
pop
adc
lret
cmp
pushf
add
scas
fdivp
fisubs
fisubrs
jnp
adc
xor
pop
adc
dec
pop
cs
pop
xor
push
mov
push
and
mov
pop
std
aam
xor
in
repz
fcompl
dec
mov
sub
xchg
stos
mov
jnp
dec
int
insl
mov
add
nop
push
arpl
and
and
xorb
push
pusha
daa
mov
inc
lds
loop
call
ret
cmp
sub
cmp
inc
loope
xor
push
jmp
or
pop
mov
cwtl
push
and
add
sub
mov
ret
cmp
stc
jne
jl
adc
mov
ljmp
pop
adc
xor
cmp
gs
push
cltd
sbb
idivb
push
xor
xor
mov
jae
insb
test
stos
push
rolb
xchg
mov
cmp
xchg
pusha
roll
mov
sub
das
xor
lods
pop
int3
jle
je
cld
fdivrl
rolb
mov
add
in
dec
or
test
lock
mov
es
test
mov
sub
daa
js
lods
pop
cmpsb
mov
orb
push
fisttpll
int
or
mov
and
daa
flds
enter
push
xor
sbb
pusha
xlat
xchg
push
or
pop
adc
stos
add
xchg
lods
pop
mov
or
adc
sbb
pusha
xlat
rorl
pop
pop
out
shlb
xchg
sub
sbb
mov
adc
push
fcoml
ss
mov
push
or
cs
and
lret
out
push
stos
inc
cli
insl
mov
mov
jecxz
and
imul
movsb
push
cs
scas
push
das
enter
inc
push
stos
push
mov
idivb
and
push
subb
xorb
das
pop
mov
sub
fdivrs
sbb
test
enter
es
test
mov
sub
in
or
adc
dec
ret
test
xchg
inc
mov
cmp
add
mov
sub
out
inc
dec
push
mov
mov
dec
pop
int
mov
inc
adc
add
mov
sub
inc
xchg
scas
pop
ret
shr
xchg
add
pop
jle
adc
das
lret
lret
xchg
cmp
es
mov
rclb
test
je
mov
or
sbb
pop
and
mov
bnd
daa
inc
mov
mov
movb
mov
loope
mov
pop
adc
outsb
movsl
push
lret
lcall
jg
adc
mov
adc
xlat
hlt
mov
sahf
xchg
mov
fdivrl
adc
daa
and
addb
int3
cmp
inc
mov
inc
addr16
mov
sub
ja
mov
loopne
sub
dec
jl
pop
adc
push
je
pop
stc
mov
int3
dec
dec
push
adc
pop
jno
xchg
inc
scas
shll
pop
push
cld
xor
fnsave
xchg
xor
call
add
or
gs
fs
aas
aad
push
stos
sbb
addb
sbb
adc
js
inc
leave
push
adc
std
arpl
nop
sub
mov
mov
xor
dec
andb
sub
addl
pop
movsb
pop
das
mov
fidivrs
sub
addl
lahf
sbb
addl
mov
cmp
scas
arpl
hlt
cmp
push
mov
mov
fdivrl
add
mov
xchg
and
loopne
pop
adc
xor
pop
adc
push
pop
cs
xchg
and
dec
mov
out
cmc
mov
inc
ljmp
je
mov
jae
ret
cmp
dec
sahf
fs
nop
or
pop
mov
aas
xor
mov
mov
add
nop
xchg
arpl
and
and
xorb
push
push
xchg
addb
fidivl
shlb
or
sub
add
mov
sbb
lods
dec
mov
sub
jp
mov
sti
or
jne
in
pop
adc
enter
adc
ret
addl
out
outsb
xchg
mov
sbb
fdivs
addl
xchg
hlt
or
add
pushf
sbbb
bnd
in
sub
in
addl
inc
sub
popa
test
pop
adc
sub
pusha
mov
inc
sbb
add
subl
ret
dec
cld
pop
rolb
adcb
ja
je
mov
jo
lea
lods
pop
ret
xchg
movsb
pop
and
jbe
mov
or
jg
adc
adc
sub
adc
push
ret
test
test
adc
ret
xorb
cmp
jo
mov
loop
popa
pop
mov
mov
mov
lea
or
int
ljmp
test
pop
adc
clc
stos
aas
jbe
cltd
pop
or
push
lds
mov
test
adc
gs
dec
lcall
add
adc
scas
xchg
sub
xchg
pop
out
sub
arpl
lock
push
bound
addb
pop
adc
pop
out
inc
jno
scas
pop
ror
clc
cmpsb
xor
adc
lea
mov
xchg
and
shll
mov
pop
mov
into
test
xchg
hlt
movsl
push
stos
adc
adc
dec
cmp
and
or
ljmp
cli
pop
dec
mov
mov
pop
cmp
push
pop
push
dec
push
lea
xchg
std
lds
pop
adc
inc
in
out
loop
push
stos
inc
lret
mov
scas
adc
inc
lcall
and
xlat
push
mov
cmp
mov
fidivs
add
ljmp
popa
rolb
lret
fisttpll
jo
pop
adc
push
repz
xor
add
mov
out
test
sbb
sbb
xor
mov
add
adc
lods
jo
mov
push
mov
sbb
push
je
dec
test
xchg
adc
xchg
sub
push
ret
or
popf
and
inc
mov
addr16
test
add
fsubr
pop
and
xchg
mov
jne
or
dec
aaa
xor
jbe
xchg
mov
pop
testb
lods
cs
cltd
push
sbb
mov
aas
jns
mov
and
dec
push
je
dec
pop
jno
sub
sub
xor
cmp
jge
sti
adc
xchg
dec
mov
adc
mov
mov
xchg
es
leave
shl
dec
push
pushf
mov
adc
je
pop
mov
ja
sbb
xor
push
cwtl
xchg
xor
mov
adc
lods
pop
in
mov
adc
movsb
adc
add
adc
lcall
pop
notb
jge
sub
jno
test
ljmp
push
stos
xlat
mov
mov
adc
push
mov
bndldx
je
mov
jnp
mov
pop
pop
xor
lea
aad
pop
cmp
adc
inc
cmp
push
mov
arpl
inc
andl
aam
pop
adc
sahf
inc
in
mov
in
rolb
fstpt
pop
adc
push
loop
test
mov
mov
adc
xor
out
add
lret
loop
lret
data16
dec
jp
out
add
or
test
loop
pop
adc
adc
fwait
jns
inc
hlt
scas
cmp
add
das
adc
mov
cmp
push
push
jmp
ljmp
push
js
pop
adc
jle
adc
in
sbb
xor
cwtl
cmpsl
mov
push
ss
mov
xchg
aam
cwtl
imul
mov
adc
adcb
adc
fcoms
sub
mov
or
scas
adc
addb
jb
mov
inc
das
inc
stos
pop
ret
test
adc
daa
sub
pop
adc
xchg
push
jb
mov
inc
jnp
scas
pop
ret
test
adc
adc
cmp
stos
je
lea
pop
adc
pusha
lods
pop
ret
xchg
xor
and
stos
pop
jbe
nop
add
gs
adc
insl
xchg
mov
adc
outsl
mov
test
mov
adc
das
xor
xor
sbb
push
push
vunpcklpd
mov
sub
outsb
mov
push
mov
inc
ror
cld
cmp
mov
xchg
sub
pop
inc
cmp
pop
push
pop
ret
push
mov
pop
rorl
sbb
add
aam
lret
inc
sbb
push
or
mov
adc
dec
jno
sbb
xchg
mov
or
hlt
and
mov
push
int3
pop
pop
xchg
add
push
std
cli
hlt
call
in
pop
fldl
js
push
or
xor
inc
sub
ljmp
cli
test
cmp
push
or
pop
adc
clc
stos
aas
jbe
mov
or
push
lds
sub
push
stos
and
pop
shlb
ja
xchg
push
adc
andl
jge,pt
sbb
xor
inc
test
stos
push
lods
shlb
cltd
cmp
mov
lea
adc
inc
xorl
stos
push
mov
daa
push
lea
adc
mov
xor
std
sub
js
pop
adc
push
and
movsl
sti
out
xchg
mov
add
aas
or
dec
mov
pop
adc
repnz
sbb
in
pop
adc
xchg
jl
cmp
sub
sub
dec
scas
shlb
add
mov
adc
sti
icebp
mov
pop
std
jmp
pop
adc
add
push
leave
mov
pushf
dec
cmp
pop
adc
lods
aas
aas
dec
fcmovnbe
fmulp
sbb
inc
mov
adc
inc
mov
mov
in
popl
adc
push
ljmp
out
jmp
rcrl
jae
dec
or
dec
push
outsl
and
add
adc
popl
adc
xchg
mov
xchg
xchg
stos
fistpll
popl
adc
push
add
ss
and
cmp
xor
dec
movsl
pusha
in
aad
nop
pop
adc
sbb
adc
cmp
push
sub
pop
adc
shlb
pop
movsb
sbb
nop
pop
adc
jg
jno
push
cmp
in
stos
je
mov
jl
pop
adc
adc
mov
mov
mov
jnp
mov
pop
pop
xor
lea
nop
pop
adc
sub
xor
push
and
icebp
ja
aam
pop
adc
sub
xor
pop
pop
mov
nop
lret
and
dec
rolw
fsubl
xchg
add
sti
cmp
js
js
lods
jo
and
pop
adc
or
clc
lock
fs
pop
adc
addr16
xchg
pop
adc
out
xchg
pop
adc
nop
imul
jl
xchg
pop
adc
sahf
sub
jno
xlat
cmp
inc
mull
xchg
sub
jl
mov
fdivr
mov
pop
clc
out
mov
in
push
fdivs
test
push
xchg
pop
adc
sbb
js
dec
xor
adc
in
sub
pop
adc
imull
adc
xchg
inc
imul
mov
test
cmp
add
jb
mov
notb
outsb
aam
dec
adc
add
xchg
pop
adc
aaa
aas
or
pop
out
push
sbb
and
es
cmpsl
and
test
call
shll
push
cs
mov
sub
out
inc
aam
mov
mov
out
popf
push
sbb
cs
ret
dec
adc
sbb
pop
adc
ftst
xchg
ja
test
xchg
pop
adc
and
xorb
cmp
daa
insl
inc
test
lods
push
fsubrp
fwait
ja
xchg
push
adc
pop
adc
mov
push
lds
mov
pop
shlb
ja
xchg
push
adc
pop
adc
mov
stos
mov
aaa
push
stos
repz
pop
adc
stos
pop
jbe
xchg
add
push
xor
pop
adc
mov
sub
test
pop
ret
test
xchg
pop
adc
mov
pop
xchg
pop
adc
pop
out
inc
das
inc
stos
pop
idivl
adc
lea
sbb
cmpsb
xchg
stc
xor
sbb
ljmp
and
lcall
ds
dec
pop
cs
imul
sub
jge
hlt
jbe
sub
push
stos
adc
xchg
pop
adc
outsl
xor
and
ds
es
std
addl
xchg
sub
fdivr
stos
push
lods
dec
movsb
push
in
mov
es
test
adc
xchg
sub
fdivr
stos
push
lods
dec
test
test
in
inc
lea
daa
jb
test
gs
xchg
sub
fsts
test
scas
dec
out
ret
popa
inc
inc
mov
and
fildl
pop
mov
sub
and
mov
addr16
leave
mov
jb
sahf
pop
punpcklwd
mov
ss
scas
and
aad
push
mov
sbb
pop
adc
mov
add
aas
cmpsl
cwtl
rol
popf
xor
je
jno
es
jge
lods
mov
cmpsl
adc
add
test
mov
test
lcall
cwtl
pop
adc
xchg
and
mov
pop
mov
dec
por
test
je
pop
pop
jno
xor
cmp
pop
insb
xor
mov
xor
or
mov
mov
ss
hlt
stos
ss
stc
bound
push
mov
je
pop
mov
ja
sbb
xchg
imul
or
pop
mov
adc
mov
mov
or
fadd
lock
mov
lahf
jbe
pop
cmovge
shl
sub
sub
outsl
xchg
sub
int
pop
js
dec
mov
cmp
ds
jbe
in
sub
sbb
sbb
pop
adc
add
cs
insb
cltd
pop
adc
xor
insl
xchg
push
and
enter
mov
enter
out
inc
pusha
add
popa
out
jl
cs
inc
and
push
imul
sbb
es
mov
pop
adc
jmp
in
mov
fdivs
mov
cltd
pop
adc
std
fsubr
cld
notb
int
insl
int
stos
mov
lcall
and
movsl
fldenv
mov
pop
out
mov
pop
add
cmp
inc
loop
jb,pt
pusha
lods
dec
bound
mov
jp
adc
arpl
dec
mov
sahf
push
and
add
sub
outsl
xchg
test
dec
push
sbb
andb
shrb
pop
repnz
ljmp
mov
mov
xor
scas
lret
arpl
dec
fwait
pop
adc
adc
push
dec
addr16
mov
fwait
pop
adc
pushf
sub
pop
mov
push
push
stos
repz
adc
das
adc
inc
push
or
ljmp
cli
pop
dec
mov
mov
sub
xchg
aam
adc
and
ds
es
add
adc
xchg
sub
sbb
ljmp
pop
adc
adc
adc
or
pushf
pop
adc
xchg
push
stos
and
push
cmpsb
mov
mov
pop
adc
jae
addl
push
push
shll
add
cli
xchg
pusha
ret
sub
adc
mov
popf
pop
adc
hlt
stos
sub
out
inc
mov
and
ljmp
pop
adc
add
sbbl
test
dec
push
inc
ret
test
popf
pop
adc
inc
pop
rolb
cld
jno
lea
imul
jns
sbb
cmp
add
mov
push
imul
arpl
clc
ss
lcall
xor
lea
mov
in
xor
imul
push
mov
xchg
jns
hlt
cmp
mov
mov
xchg
adc
mov
inc
xor
xor
ja
mov
adc
je
pop
adc
adc
push
cmp
inc
mov
sahf
pop
adc
sbb
das
pop
lret
sar
inc
inc
push
stos
daa
sbb
hlt
arpl
ret
pop
adc
les
pop
adc
xor
lret
out
jae
ja
push
scas
sbb
sbb
popa
inc
mov
sub
adc
fcmovbe
xchg
sub
test
cld
jns
orb
pop
adc
inc
and
xchg
sbb
sti
xchg
ja
mov
pop
adc
push
movsl
push
int3
fcmovnu
lcall
sub
insl
sbb
push
ret
enter
push
mov
adc
jne
pop
mov
aam
rcl
test
pop
adc
and
mov
push
bnd
or
dec
sahf
lcall
fs
ficomps
hlt
and
pop
mov
dec
or
sbb
divl
pop
jno
in
mov
pop
stc
xor
cmp
jge
mov
enter
push
mov
sbbb
pop
adc
mov
pop
or
xlat
sub
sbb
add
adc
inc
in
pop
adc
or
jo
pop
adc
shll
flds
adc
adc
jnp
pop
ds
loopne
pop
adc
addb
flds
adc
add
nop
mov
mov
or
inc
jno
adc
jne
movsl
and
pop
adc
in
sub
fldl2t
in
flds
adc
pop
adc
lods
adc
iret
cld
flds
adc
test
fiaddl
adc
cli
push
out
popa
push
adc
outsl
das
lret
cmpsb
stos
incb
fiaddl
adc
or
popa
push
adc
jne
imul
popa
push
adc
push
outsb
xchg
add
push
loopne
mov
push
adc
or
pop
adc
xor
adc
sbb
xchg
jno
jno
faddl
adc
test
out
daa
cltd
adcl
xor
adc
ret
inc
jno
adc
add
pop
adc
add
adc
or
adc
adc
cmp
hlt
stc
lods
hlt
faddl
adc
xor
sbb
bound
adc
xor
pop
sbb
std
ljmp
push
adc
xlat
inc
sub
adc
mov
push
dec
out
lods
test
jno
adc
jmp
pop
adc
mov
xor
pop
adc
add
pop
adc
inc
in
xor
filds
adc
inc
bound
adc
sub
xor
mov
pop
mov
cmp
pop
adc
sahf
add
or
jp
pop
bound
adc
cli
test
push
inc
inc
jno
adc
pop
or
xor
mov
or
daa
inc
push
addl
xchg
sub
xchg
cltd
xchg
stc
add
mov
inc
jno
adc
push
or
pop
push
shll
adc
mov
test
add
inc
inc
jno
adc
pushf
pop
or
mov
hlt
push
or
adc
stc
bound
adc
lock
xchg
into
insl
sub
sti
inc
jno
adc
or
aaa
push
push
pop
or
repnz
sub
add
adc
push
ret
test
mov
pusha
sub
push
adc
pop
or
not
fs
or
mov
imul
bound
adc
std
dec
cmp
jno
adc
pop
or
push
add
or
xchg
and
arpl
adc
cli
test
push
inc
inc
jno
adc
pop
or
xor
in
push
adc
xlat
hlt
addl
push
adc
push
pop
push
stos
repz
shrl
adc
dec
cmp
jl
push
adc
shlb
das
pop
pop
dec
jb
bound
adc
decb
xor
mov
adc
dec
inc
inc
in
xor
ret
push
adc
and
adc
jbe
addb
imul
mov
push
stos
ret
bound
adc
mov
inc
inc
mov
and
adc
clc
out
pop
or
adc
loopne
pop
adc
push
movl
cli
sub
jno
adc
insl
cmp
arpl
adc
mov
test
and
pop
adc
sub
push
pop
es
and
adc
xchg
xor
pop
adc
cmpsl
outsl
pop
and
adc
push
movl
hlt
fisubl
pop
and
adc
mov
movl
lods
sahf
dec
pusha
and
adc
add
dec
stos
popa
neg
xchg
inc
mov
arpl
adc
icebp
pop
insb
and
adc
add
outsl
push
arpl
adc
adc
test
or
pushf
aad
les
or
arpl
adc
pushf
int
mov
inc
push
push
adc
adc
push
adc
and
adc
adc
lods
hlt
nop
iret
shlb
or
mov
and
adc
inc
aas
outsb
pop
je
push
adc
insb
cmpb
cmpsl
bound
orl
arpl
adc
xor
mov
adc
nop
jne
and
or
jbe
push
cli
mov
adc
jg
stc
mov
arpl
adc
jno
adc
mov
push
add
adc
in
pusha
flds
adc
adc
jecxz
dec
pop
mov
sbb
lcall
jmp
xorl
mov
adc
mov
fiaddl
adc
in
push
lahf
mov
pushf
les
adc
or
push
and
aaa
mov
cltd
inc
fwait
arpl
jp
faddl
adc
pop
lods
mov
pop
loopne
pop
adc
and
mov
lds
adc
sbb
mov
pop
cmp
pop
adc
push
in
push
or
dec
xor
pusha
xor
movsb
xorb
movsb
lds
adc
inc
add
fs
adc
add
lds
adc
insl
orl
pop
adc
lods
xchg
mov
push
pop
clc
lds
adc
jbe
push
inc
aam
adc
pop
adc
sub
jbe
movb
sbb
or
dec
jo
add
adc
adc
mov
adc
cmp
pop
or
scas
fsubp
into
xchg
insb
jo
or
inc
pusha
loope
popa
test
xor
pop
or
cmp
jno
mov
push
or
inc
inc
scas
pop
notb
adc
jns
sbb
pop
or
sbb
xor
pop
or
inc
sahf
shrl
adc
lret
or
xchg
jne
push
outsl
mov
stc
cmpsb
sbb
cbtw
sarl
adc
outsb
sbb
push
adc
daa
mov
outsb
xchg
mov
push
cs
ljmp
adc
repz
stos
adc
inc
push
adc
add
and
adc
int
or
push
cmpsb
fsubl
or
sbb
push
adc
cwtl
and
adc
aam
adc
and
adc
mov
or
and
adc
dec
fsubrl
push
in
and
or
dec
xchg
xor
test
and
adc
pushf
sub
.byte
add
add
fistl
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ret
xchg
xchg
xchg
nop
nop
mov
nop
nop
popl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
push
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
out
test
sub
rolb
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
subl
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
movzwl
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
cltd
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
div
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
inc
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
jl
xchg
xchg
xchg
nop
nop
mov
nop
nop
call
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
test
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
dec
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
ror
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
je
xchg
xchg
xchg
nop
nop
mov
nop
nop
sub
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
add
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
cmpw
xchg
xchg
xchg
nop
nop
mov
nop
nop
jne
xchg
xchg
xchg
nop
nop
mov
nop
nop
and
xchg
xchg
xchg
nop
nop
mov
nop
nop
pop
xchg
xchg
xchg
nop
nop
mov
nop
nop
mov
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
xchg
xchg
xchg
nop
nop
mov
nop
nop
xor
xchg
xchg
xchg
nop
nop
mov
nop
nop
jmp
add
mov
rolb
inc
dec
data16
sbb
scas
push
mov
sub
test
lea
div
lds
fsub
xor
arpl
jae
mov
fists
adc
in
jne
mov
iret
fisubl
sbb
ds
pop
mov
sub
ljmp
adc
inc
pusha
arpl
and
shlw
aad
mov
xchg
xor
stos
gs
xor
xlat
dec
aas
repnz
adc
lea
or
les
xchg
in
idiv
fcompl
push
jnp
mov
out
aad
mov
stos
hlt
mov
out
sbb
test
dec
push
ss
sub
pop
out
clc
or
jg
push
imul
andps
or
mov
popa
les
jge
jecxz
mov
sub
push
jle
cmp
jne
lcall
aad
clc
loop
jge
mov
pop
xchg
sub
insl
imull
lods
jns
sub
leave
jmp
arpl
sti
gs
icebp
cmpsb
mov
scas
es
imulb
push
lds
fiadds
push
test
xlat
xor
fdivp
push
xor
pop
outsl
sub
nop
int
inc
dec
les
in
adc
adc
mov
xor
fldenv
mov
ds
dec
sub
and
in
insb
or
ja
and
push
in
scas
jb
sbb
mov
lock
rorb
popf
js
das
inc
xor
std
adc
push
sbb
in
cmp
inc
pop
lds
inc
js
ficoms
stos
imul
fdivp
push
aaa
pop
int
push
jl
cmp
les
sti
adc
popf
in
cmp
or
pop
push
js
lods
in
xor
xor
out
xchg
sbb
fs
popf
xor
inc
mov
jge
pop
push
jg
fcmovu
enter
push
popf
clc
lods
mov
xchg
arpl
int3
mov
lods
xor
addb
movsl
adc
xchg
aad
cld
adc
aam
int3
push
fwait
adcl
mov
sub
adc
sarb
cltd
out
dec
cmpsb
stos
cltd
test
inc
adc
loope
xchg
aad
jl
idivl
test
test
jp
out
mov
gs
sarl
cmp
ja
movsl
xor
push
sub
dec
sbb
adc
roll
jmp
inc
pop
mov
fcoml
jb
sbb
ds
enter
xchg
sub
stos
shll
pop
push
cltd
cmpsl
push
sub
adc
mov
push
jp
add
mov
mov
add
add
mov
cmp
ljmp
out
pushf
repz
loop
adc
mov
cmpsl
ret
push
mov
lcall
and
adc
lret
dec
mov
cmp
inc
lds
fwait
test
mov
lret
call
mov
xchg
stc
notl
cs
lret
stos
sub
dec
aad
ss
jmp
cli
fsubl
lea
xlat
push
jmp
mov
imul
dec
gs
cmpsl
xor
imulb
lea
mull
es
stos
mov
mov
inc
loope
or
push
cmpsb
jecxz
jl
dec
fucomp
fisttps
mov
movsb
dec
ja
and
aas
in
mov
es
out
and
sub
adc
fcmovnbe
cli
out
test
dec
or
cmp
decl
inc
pop
lods
out
and
cmc
xor
test
or
shlb
inc
pop
adc
mov
pop
mov
or
jg
inc
ss
push
sbb
push
inc
lahf
jnp
push
inc
push
and
dec
aad
xor
ja
pop
lret
add
enter
inc
iret
cmp
shrb
mov
out
mov
stos
push
jno
add
sbb
out
imul
hlt
mov
cld
adcb
inc
inc
push
ds
mov
stos
cmpsl
cmc
adc
jne
hlt
push
in
xlat
xchg
xchg
cmp
inc
push
mov
in
int
fwait
test
aam
pop
cltd
cmp
outsl
aad
mov
fidivs
mov
out
sub
pop
cmp
inc
adc
jbe
lcall
jbe
cmp
rcr
loop
adc
data16
mov
and
es
loope
add
jge
push
cld
mov
stos
pop
jb
mov
lods
jecxz
adc
inc
jo
shrb
into
mov
inc
cmpsl
xor
xchg
out
cmp
jl
stos
pop
xchg
mov
cs
stos
out
out
xor
cmc
push
xor
and
dec
mov
pushf
cmp
scas
notl
lret
push
mov
mov
je
mov
fnsave
fcoms
lret
dec
mov
mov
out
push
lea
push
push
mov
xor
push
push
lcall
hlt
mov
push
out
jle
sub
out
xor
pop
mov
xchg
jns
dec
aad
lret
mov
mov
mov
in
mov
mov
xor
cmpsb
fdivp
and
call
push
push
sar
movsl
xchg
xor
enter
mov
js
sub
dec
aad
jae
das
xor
cmc
jno
movsl
xor
addr16
xchg
stos
inc
lahf
mov
insb
fistpl
fwait
dec
jecxz
xor
jb
and
dec
call
dec
test
mov
and
and
mov
xchg
push
aaa
loop
repz
dec
ret
iret
cmp
cmp
nop
insb
cmp
jge
xlat
mov
push
insb
outsl
jl
popa
call
test
pop
and
aaa
loope
pop
push
jge
push
cld
ficoml
pop
push
inc
js
mov
int3
and
mov
hlt
mov
mov
push
jnp
xchg
scas
je
imul
shl
sahf
movsl
pop
mov
add
dec
frstor
mulb
adc
nop
int
ret
push
dec
push
dec
stos
adc
lret
push
mov
mov
je
mov
fnsave
fcoms
lret
dec
mov
mov
out
push
lea
jl
lret
push
sub
sahf
aad
mov
out
addb
jno
ret
xchg
xor
stos
lds
jle
adc
inc
sub
pop
out
add
or
jno
ret
mov
fcoml
iretw
cmp
aas
lods
mov
out
mov
lods
lret
test
clc
mov
cmp
stos
mov
pop
mov
and
cltd
pop
icebp
stos
adc
xlat
imul
movlhps
frstor
ja
arpl
cmpsl
xor
call
sbb
int
add
xor
rclb
mov
xchg
add
stos
inc
fcmovnbe
call
dec
dec
push
mov
dec
or
and
out
jp
mov
fisttpl
in
lods
jnp,pt
mov
mov
inc
or
sbb
dec
or
xor
xchg
out
cmp
jl
stos
pop
xchg
inc
lods
js
sub
sbb
stos
imul
dec
sub
sarb
imul
sbb
ss
sub
or
cmp
fidivl
insl
aam
push
addb
xchg
imul
jg
adc
or
das
cld
inc
push
fcoml
jg
push
in
repz
add
pusha
xor
es
mov
popf
insl
sub
je
sbb
jae
fxam
adcb
xor
push
mov
sar
das
cmpsb
sbb
call
jns
mov
jge
test
or
test
mov
cs
aad
cld
aaa
loope
sub
hlt
arpl
in
or
enter
mov
js
sub
dec
aad
mov
push
cmc
jno
sbbb
xchg
jnp
inc
push
popa
push
cs
pop
insl
sbb
or
mov
in
adc
xor
push
mov
mov
imul
adc
popa
xor
or
pop
in
gs
cmp
push
loopne
push
aam
pop
lods
js
push
dec
aad
dec
push
jecxz
mov
cmpsb
xchg
mov
clc
inc
inc
inc
mov
sub
sub
mov
mov
push
xchg
es
push
out
stos
je
fsubp
pop
adc
pop
mov
xor
sbb
mov
sbbb
stos
pop
xor
sub
jae
gs
jno
fdiv
shl
lret
imulb
pop
icebp
push
cli
dec
pop
iret
cmp
cltd
cmp
ret
inc
pop
gs
frstor
mulb
in
or
mov
ret
outsl
sbb
mov
xchg
or
ror
loope
jmp
mov
mov
pop
inc
adc
sbb
xchg
or
stos
sbb
rcl
rorl
arpl
mov
pop
lods
add
lods
inc
pop
lret
mov
jb
jl
cmpsb
push
cli
pop
xor
ficoms
mov
jge
jmp
add
addr16
ljmp
insl
add
cmp
out
adc
ret
inc
pop
inc
mov
cmp
cmp
push
jp
repnz
push
pusha
ret
rclb
imul
lret
adc
adcb
lea
and
outsl
mov
pop
add
xchg
adc
ss
aad
pop
pmulhw
fcoml
nop
sbb
sahf
pop
sbb
ficoml
cmc
push
jno
adc
neg
or
test
dec
adcb
sbb
cmpsl
popa
les
jg
mov
xchg
cmp
mov
inc
sbb
pop
xor
mov
push
ret
cld
cli
mov
or
pop
xor
adc
jnp
fsubl
xor
adc
shl
inc
nop
int
nop
pop
mov
popf
sbb
out
dec
out
xor
es
gs
ljmp
jnp
cld
fsub
pop
adc
aam
cld
inc
jmp
in
gs
idivb
jnp
xchg
cld
fsub
and
xor
dec
aad
jl
out
mov
lods
lret
stos
data16
gs
rorl
dec
sub
push
aas
inc
std
or
pop
insl
xor
mov
andb
rorl
lds
and
add
cs
lahf
stos
call
cmp
xchg
add
adc
mov
movsb
push
sbb
push
mov
insb
sbb
mov
fdivl
lods
lret
stos
sbb
sub
mov
xor
pop
mov
sub
add
mov
cmp
ljmp
and
jg
sub
dec
mov
add
sbb
cmp
idivb
notl
pop
push
pop
xor
pop
mov
push
sbb
mov
adc
mov
les
pop
outsl
and
pop
mov
xor
sarl
adc
gs
cltd
xorb
notl
mov
dec
sbb
iret
pop
das
xchg
sbb
sub
inc
lods
xor
adcb
lea
mull
add
sbb
jne
pop
push
and
mov
lret
push
sbb
out
test
dec
sbb
rclb
decl
gs
lea
clc
stos
pop
in
jl
dec
xlat
mov
rorb
pop
aaa
mov
cmpsl
mov
cli
and
mov
jns
pop
xor
shl
dec
pop
insl
aaa
push
xchg
or
fcomip
mov
push
in
jnp
jp
or
ret
mov
adc
pop
pop
test
mov
ja
jecxz
add
gs
leave
or
pop
int3
dec
pop
pop
ficomps
mov
cld
cmp
fistl
in
jl
int
test
js
pop
jmp
pop
testb
repz
ja
adc
divb
jp
test
lret
mov
shrb
pop
mov
js
pop
ret
and
mov
scas
xchg
inc
into
dec
in
pop
fisubl
pop
mov
stos
cmc
xor
jno
and
shll
adc
push
pop
iret
cmp
ljmp
mov
arpl
in
rorl
sbb
mov
inc
mov
jmp
popa
push
cmp
adc
mov
lods
lret
fstl
mov
test
mov
sbb
out
imul
filds
jbe
push
mov
inc
add
sbb
xchg
jg
push
ss
fisubs
mov
push
push
jnp
fldl
outsl
lock
inc
inc
js
push
mov
dec
pop
jno
push
xchg
add
out
sbbb
xchg
jnp
inc
cmp
fdivl
shrl
cs
inc
pop
insl
lea
or
xor
imul
or
sub
les
xor
or
lahf
inc
sbb
inc
xchg
lock
ja
adc
fwait
pop
sub
rcl
mov
fimull
aad
ffreep
scas
mov
dec
aad
pop
bound
push
cli
stos
inc
mov
and
dec
lcall
xor
sub
inc
imul
movsb
movsl
xchg
mov
jnp
inc
push
pop
das
std
adc
push
mov
mov
sub
cs
add
fistpl
pusha
lock
push
and
mov
lret
mov
out
test
scas
xchg
je
jb
js
adc
mov
or
xchg
push
lods
gs
leave
or
mov
aam
and
sub
mov
lods
mov
mov
mov
xchg
cld
fsub
aas
adc
aam
ss
jmp
in
push
in
idivb
jnp
xchg
mov
out
xor
sahf
aad
lcall
pop
and
shl
push
push
out
push
xor
stos
shl
sahf
movsl
fs
mov
or
fisubrl
jle
test
shrb
dec
inc
mov
push
sbb
push
push
mov
push
push
sbb
mov
mov
pop
mov
stos
pop
bound
pop
mov
lock
xchg
sbb
ret
xchg
pop
bound
xlat
in
dec
pop
lret
aad
jg
test
mov
dec
hlt
and
call
mov
jno
shrl
out
xor
leave
or
mov
ret
out
pop
dec
jl,pn
aad
sub
popf
or
push
aas
jae
mov
or
mov
lahf
cmp
adc
push
pop
shll
out
mov
mov
subb
test
or
lahf
jnp
dec
shlb
imul
lret
push
mov
pop
jp
mov
test
popf
inc
mov
and
mov
data16
fdivs
mov
pop
push
or
mov
ficoms
mov
ljmp
lret
imul
roll
mov
xchg
add
nop
add
loop
hlt
mov
movsl
in
adcb
add
add
mov
pop
sub
push
js
sahf
aad
test
lret
pop
xchg
clc
ljmp
push
scas
push
xor
insb
jecxz
push
pop
jae
jg
push
stos
adc
fdivrs
aas
dec
adc
jle
jge
lods
and
das
shlb
incb
pop
inc
mov
clc
sbb
adc
jge
push
jp
repnz
inc
push
adc
sub
cmpsb
jecxz
mov
adc
mov
stos
lea
and
jae
mov
add
xchg
adc
mov
aad
pop
inc
in
adcb
add
add
nop
sbb
sahf
pop
sbb
sbb
add
out
inc
adc
pusha
test
xchg
mov
mov
popa
push
push
into
pop
and
inc
mov
xor
jle
inc
jp
test
or
mov
xor
adc
jnp
fdivrl
xor
fnstcw
ss
outsl
shl
inc
nop
int
nop
add
popa
sub
lds
js
js
or
jecxz
mov
inc
js
adc
andl
js
das
or
aad
cs
jnp
xlat
lock
fists
js
bound
andl
jecxz
cs
sbb
push
aad
out
test
jb
lock
pushw
and
pushf
and
sub
lcall
shrb
push
in
arpl
rorl
push
repnz
bound
out
dec
pop
lret
push
xchg
lock
pop
jb
jl
outsb
push
cmp
and
dec
pop
xchg
rcll
sarl
xor
pop
sbb
sub
int
loope
sub
push
sbb
hlt
jb
jnp
test
ret
addr16
stos
pop
dec
cmpsb
stos
movsl
int3
les
test
jg
cmpsl
ss
and
mov
and
imul
mov
sbb
sub
out
or
pop
lret
shlb
out
cmpsb
or
lock
inc
adc
adc
or
pop
pop
sahf
stos
call
inc
pop
loope
fdivrs
lcall
push
push
jbe
and
aas
lret
stos
pop
or
and
sub
cmp
jge
mov
cmpsl
lea
stos
jb
je
rcrl
pop
sbb
call
xor
lds
dec
xchg
cmp
xchg
enter
inc
lahf
lock
ret
stos
and
ja
sub
mov
fcmovu
push
sbb
add
es
lret
stos
cs
popa
mulb
xlat
adc
lods
lret
mov
gs
mov
fcompl
outsb
fistpl
movsl
les
dec
pop
xchg
jg
mov
mov
and
fcompl
cmp
push
xchg
out
sahf
stos
rcll
mov
xchg
or
mov
subb
mov
dec
mov
test
push
sub
push
cs
arpl
mov
js
or
in
popa
aad
ffreep
imul
shrb
fs
clc
xor
sub
xor
mov
mov
sbb
sbb
scas
pop
scas
and
inc
sub
add
lods
lret
cmpsb
lods
mov
mov
int
rcll
data16
sub
jae
gs
js
in
push
dec
in
adcb
xor
les
adc
stos
pop
mov
les
add
inc
cmp
ljmp
fldl
jg
xlat
inc
out
dec
inc
pop
mov
les
cmp
fnstcw
notl
fwait
pop
mov
insb
or
mov
call
lods
lret
cmpsb
lahf
invd
stos
jb
jbe
pusha
ret
iret
sahf
and
sub
lock
mov
data16
fsubrl
enter
mov
mov
stos
shl
sahf
pop
insl
xchg
mov
inc
xor
lcall
mov
pop
in
sbb
arpl
xchg
and
inc
and
sti
push
in
mov
push
cltd
subl
jb
jnp
push
inc
js
bound
andl
jecxz
cs
add
test
cmpb
xor
jmp
insb
mov
cmp
xchg
mov
jge
adcb
xorb
dec
into
mov
add
into
fwait
pushf
or
inc
call
push
mov
jae
test
and
sbbl
pop
pop
mov
cwtl
adc
out
jp
mov
push
aaa
loop
fisttpl
jnp
mov
mov
inc
insb
sbb
mov
and
push
or
push
mov
mov
ds
mov
sbb
mov
dec
or
mov
jle
push
mov
aam
pop
gs
mov
xor
push
fcoms
mov
filds
outsl
mov
movsl
add
xchg
imul
pop
mov
and
sti
push
push
aad
xchg
dec
cmp
jae
inc
pop
inc
jo
jb
xchg
imul
adc
mov
sbb
aaa
push
add
cmpsl
pop
mov
cmp
aad
lret
jae
loope
dec
fidivl
imulb
pop
mov
inc
mov
pop
insl
xchg
mov
enter
in
adcb
xor
add
dec
insb
aas
push
shll
sbb
mov
loope
xor
sbb
test
add
mov
push
insb
fisttpl
mov
push
jo
gs
mov
stos
cmpsb
jbe
and
iret
sahf
stos
es
movb
pop
xchg
pop
mov
mov
sub
incb
push
add
aaa
pop
mov
cmp
push
rcll
mov
sub
pop
callw
cmpsb
pushf
outsb
push
xor
ficomps
cmpsl
rol
imul
cli
fcoml
mov
cmpsb
enter
nop
lock
cli
cmp
stos
and
lahf
and
sub
cmp
add
lods
xor
xchg
ss
xchg
jle
xchg
sub
or
or
js
imul
push
dec
cmp
lods
imull
inc
inc
js
shlb
and
mov
out
dec
dec
pop
lret
mov
lea
inc
pushf
xchg
movsl
adc
es
out
xchg
cmpsl
push
shl
hlt
dec
and
nop
lds
sbb
popa
push
pop
jb
inc
push
dec
pop
xchg
ja
push
mov
cmpb
xchg
mov
ror
test
pop
and
imul
mov
cmp
outsl
push
adc
pop
mov
rclb
and
dec
push
xor
lods
sbb
push
inc
lcall
pop
dec
sub
mov
imul
cmpl
clc
ljmp
lret
stos
pop
outsl
lahf
and
sub
cmp
jge
jmp
add
ss
xchg
jle
xchg
sub
int3
adc
ja
mov
lret
and
das
mov
xchg
jle
xchg
sub
sahf
aad
jae
das
add
pop
lret
pop
lods
mov
inc
test
inc
test
ficoml
loop
data16
call
js
mov
adcb
movsb
aas
les
mov
mov
les
xor
stos
dec
cltd
mov
clc
xlat
cmpsb
mov
jb
cmp
les
xor
cltd
dec
sbb
push
push
mov
je
stos
inc
test
daa
sbb
sub
decl
lret
pop
lahf
movups
mov
test
aas
mov
sbb
mov
xchg
add
imul
or
dec
sahf
repnz
cmpsb
cmp
stos
dec
imul
push
inc
pop
jmp
jle
test
jge
adc
ds
int
out
pop
out
xor
dec
aad
clc
and
mov
and
lds
data16
jnp
push
ds
adc
add
inc
dec
pop
lret
push
xchg
clc
pop
pop
jb
je
repnz
idiv
add
jae
mov
out
enter
rcrb
add
int3
aam
adc
jne
aam
push
xor
int
stos
jb
je
ret
das
lret
stos
pop
dec
jbe
pop
jmp
pop
mov
inc
dec
lods
lret
mov
and
dec
lcall
xor
xchg
jg
inc
ss
fmuls
mov
addr16
es
stos
mov
mov
and
mov
sahf
stc
xchg
inc
mov
sarl
test
das
aas
fsubl
dec
push
pop
insl
adc
mov
in
orb
xor
dec
sub
dec
aad
les
sbb
push
in
idivb
sub
rorb
or
cmpsb
push
cmp
cli
mov
push
add
pop
xchg
mov
or
xor
pop
and
cmp
jae
mov
add
mov
jl
popa
pop
xchg
mov
adc
inc
in
pop
and
cmpsl
push
xor
and
mov
leave
mov
sub
mov
lods
mov
test
cmp
inc
es
std
cmp
push
mov
outsl
add
dec
mov
jne
push
mov
push
or
adc
jle
mov
out
stos
call
sub
push
fiaddl
cmpsl
mov
out
lock
jne
adc
repnz
inc
sbb
mul
test
mov
out
adc
push
aam
and
lock
in
stos
adcb
sarl
adcb
jne
add
dec
sub
xchg
pop
dec
lret
jle
gs
lods
lock
dec
dec
adc
pop
sbb
push
popf
or
jbe
jne
mov
into
das
jb
lock
mov
jge
push
decb
divb
iret
test
in
xor
add
imul
loop
mov
jge
lds
loopne
or
in
xor
out
inc
xchg
cs
shrl
les
