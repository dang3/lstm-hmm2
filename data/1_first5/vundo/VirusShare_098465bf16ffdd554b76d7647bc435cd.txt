or
push
add
or
or
pop
or
or
fisttpll
add
or
push
mov
andl
orl
subl
pop
push
popl
je
push
mov
andb
xorb
sbbw
movl
pop
xor
jmp
push
xor
mov
mov
mov
lods
jmp
popl
jns
mov
and
mov
or
xor
int
xchg
cmp
dec
enter
hlt
push
push
cltd
inc
mov
add
and
data16
push
lods
sahf
clc
stos
jl
das
rclb
lahf
mov
fwait
inc
mov
inc
or
push
mov
add
add
push
push
push
push
push
popl
mov
mov
add
pushl
mov
add
add
mov
add
push
and
add
popl
mov
xor
lea
mov
add
mov
xor
rol
xor
inc
cmpb
jne
jmp
dec
sbb
dec
lds
testb
add
call
imul
addl
inc
ds
fs
xor
mov
outsl
inc
add
data16
cmp
je
inc
cmp
jb
mov
add
movzwl
jmp
sbb
mov
lods
das
or
jne
in
or
movsb
jnp
ss
lcall
out
or
inc
enter
sub
lahf
jmp
repz
pop
gs
aam
sub
popa
scas
add
dec
pop
jecxz
into
add
aam
and
sbb
rorl
push
popl
cmp
jbe
cmp
jae
pushl
pushl
push
sub
mov
add
xchg
addl
pushl
call
call
jmp
adc
pop
push
jecxz
jl
loopne
push
imul
jmp
or
out
push
shll
addr16
negb
or
clc
inc
popf
pop
rcrl
lret
or
cwtl
movsb
mov
pop
leave
ret
sub
jp
call
or
ja
das
sub
inc
cmp
sbb
sub
jg
pop
dec
cmp
sub
addr16
sbb
xor
cmpsb
aam
jb
jge
jge
jb
push
add
cmpsl
pop
mov
jns
xchg
mov
std
push
dec
xor
loop
or
dec
stos
call
mov
out
xchg
popa
ss
jno
push
in
popl
call
test
jne
ret
push
xorl
jo
call
jmp
or
push
sub
rclb
xchg
inc
aaa
sub
in
and
fiadds
push
push
xor
js
pop
int
insb
shl
mov
movsb
mov
loop
std
push
scas
pusha
daa
pushl
or
cmp
subb
in
sbb
inc
xchg
cmpl
testb
push
mov
call
push
add
mov
sub
xchg
addl
push
orl
call
push
push
shl
shr
not
mov
sub
xchg
mov
pusha
jmp
out
popf
mov
xor
sub
inc
jmp
pop
add
adc
sub
pop
fbld
pop
sub
xlat
jo
notl
mov
cmp
and
sbb
sub
rclb
sarl
sub
xchg
addl
push
call
cmpl
jne
jmp
jmp
popa
pusha
push
popl
jge
call
test
fcoms
iret
aas
fsts
gs
dec
lea
or
add
in
push
mov
addr16
or
sbb
lds
mov
lret
jne
pusha
repz
sbb
sub
fisubrs
outsl
cmp
in
ljmp
push
js
out
lock
test
repnz
inc
adc
and
jle
lea
add
sti
decl
int
push
shr
mov
xor
pop
addl
push
call
mov
mov
push
popl
xor
xor
rol
inc
dec
jne
cmp
je
cmp
jne
addw
jnp
call
rorl
or
xchg
ds
out
into
xor
je
scas
inc
mov
in
shlb
xchg
ds
xchg
setg
sub
mov
jns
lret
arpl
xor
add
xchg
push
pop
jbe
shlb
andl
cli
stc
dec
imul
cmp
sarl
das
sbb
sbb
and
mov
fwait
invd
cmp
popl
popa
shl
push
popl
jbe
push
mov
sbbw
addb
andl
orw
pop
push
xor
push
call
int3
jmp
popa
shl
push
xor
xor
push
call
push
mov
push
popl
jns
call
adc
lock
cmpsb
repnz
lods
cmp
mov
lcall
fstpl
cmovnp
lock
outsl
inc
or
xchg
hlt
inc
add
ret
ret
leave
push
aad
pop
ss
packuswb
inc
adc
dec
push
mov
arpl
push
add
xchg
xchg
pop
stc
arpl
or
mov
xchg
mov
pop
or
or
adc
inc
add
add
pop
cmp
add
push
mov
jmp
jnp
sub
cwtl
sub
mov
ret
push
add
or
mov
xor
bound
jnp
mov
sbb
sub
dec
adc
daa
ss
fdivr
and
pop
in
mov
mov
jmp
dec
pop
popa
xor
incb
mov
xorl
xor
mov
es
int3
cld
leave
cltd
stos
dec
pop
pop
fimuls
es
adc
push
and
pop
add
clc
push
mov
shll
mov
rep
pop
pop
push
rol
mov
xor
xchg
push
xor
jmp
sub
push
and
mov
popl
mov
mov
add
sub
mov
add
or
jne
xorl
add
jmp
mov
shr
shl
mov
add
jmp
sub
mov
cmp
jne
mov
add
cmpw
jne
orl
ret
call
xor
add
outsb
call
or
push
cmp
mov
sub
movsb
mov
xlat
movsb
das
cmpsl
adc
in
mov
xor
add
cmc
rol
pop
into
xchg
and
pusha
repnz
ds
stc
movsl
push
pop
pop
nop
mov
jp
cmp
addl
ret
cli
jae
add
jbe
fisttpl
dec
adc
push
in
stc
and
popf
xor
ja
test
and
jp
xor
mov
insb
test
ljmp
xor
jle
sahf
dec
shrl
sbb
les
adc
add
push
pop
xchg
mov
fstpl
andb
stos
js
pop
or
lahf
shrb
and
data16
add
fildll
add
mov
push
or
push
icebp
xor
and
dec
dec
jne
sarb
hlt
mov
mov
sub
pusha
pop
add
push
int3
xor
scas
adcl
cmp
loop
xor
ds
aam
mov
rcr
push
shl
jo
dec
ds
sub
dec
xchg
mov
loop
push
jns
lret
adc
push
or
and
jge
stos
inc
xor
ds
loop
push
nop
jb
popf
fs
push
jecxz
xor
pop
jae
and
jle
fwait
mov
cmpsb
mov
test
ret
movsl
push
or
pop
out
mov
scas
repnz
mov
test
filds
xchg
cmp
fdivs
jmp
inc
cmp
mov
popf
out
jbe
xchg
dec
sbb
jle
cmp
dec
lret
cmpsb
push
xor
stos
popf
jge
cmp
inc
repnz
adc
stos
cmpl
dec
adc
shll
sub
ret
rolb
cmp
out
jb
pusha
pop
and
test
mov
bound
and
add
imul
das
cmp
lods
push
mov
jnp
mov
loop
push
inc
push
stos
push
pop
dec
ds
mov
pop
push
jb
push
jmp
lods
and
mov
ret
daa
lahf
inc
mov
pop
push
shrl
jno
sbb
stos
mov
shll
pop
aad
icebp
sub
fildl
dec
xchg
jbe
xchg
stos
cmp
pop
mov
cmpsb
in
push
adc
pop
in
sbb
xchg
jo
out
fists
das
incb
dec
inc
sahf
fisttpl
cmp
les
ret
pop
push
adc
jmp
mov
pusha
out
mov
xchg
xor
adc
xchg
cmpsb
mov
int
add
or
sub
lret
dec
xor
dec
pop
fistps
lea
ss
jbe
sub
out
in
das
jl
and
lret
arpl
fisttps
test
cwtl
nop
mov
loop
push
xlat
xchg
incl
xor
pop
repnz
dec
sbb
or
cmpsb
push
bound
cmp
xchg
mov
jb
mov
sub
xchg
mov
das
adc
xchg
cmp
enter
cmp
or
mov
jne
or
jbe
repz
clc
imul
movsl
push
jmp
xchg
das
xchg
xlat
loope
pop
add
sub
mov
fwait
and
xchg
pop
daa
jb
cmpsl
cmp
sahf
fcoml
out
fstpt
in
jne
sbb
jmp
add
nop
mov
pop
mov
fistl
sahf
js
in
lock
adc
sti
jae
jmp
cmpsl
lret
dec
sbb
push
xor
pop
ds
loop
xor
inc
in
sub
jo
jns
and
ret
movsl
mov
add
mov
pop
mov
arpl
push
pop
dec
pop
xchg
gs
xor
inc
mov
jo
mov
mov
xlat
sub
lret
insb
out
insl
les
lret
std
faddl
mov
cmpsl
fisubs
sub
shrl
jno
shll
cmpsl
or
jbe
fsts
into
lcall
stos
adc
mov
leave
aaa
mov
dec
push
js
dec
ds
inc
imul
outsl
add
icebp
push
jle
jmp
in
mov
jg
jae
outsl
cs
insl
incl
int
lret
mov
pop
adc
in
dec
mov
inc
adc
jne
fwait
or
mov
add
xor
cmp
jno
push
loop
loope
dec
sub
aaa
push
test
mulb
outsl
lret
data16
ljmp
push
add
nop
mov
push
sar
arpl
ds
adc
mov
xchg
sub
dec
lods
mov
loope
push
nop
aaa
cltd
add
xchg
andl
addb
cmp
insl
mov
xlat
mov
sbb
jge
add
mov
pop
pop
adc
cmpsl
cld
mov
lods
popf
and
pop
dec
add
sbb
ret
and
shll
je
pop
rcl
lock
sar
xchg
fstp
push
loope
push
inc
popf
pop
sahf
cltd
leave
mov
cltd
inc
lea
cld
push
add
sub
std
lods
lds
mov
insb
out
jl
jne
sbb
or
adc
iret
cmp
cmp
xor
jmp
jecxz
fisttpl
mov
loop
push
in
mov
gs
mov
out
mov
jmp
mov
in
hlt
xchg
iret
insl
add
aam
fmul
mov
mov
outsl
push
std
dec
ds
xchg
adc
ja
add
ja
aad
gs
xchg
push
sbb
mov
jbe
inc
fadds
dec
sbb
aad
sub
mov
adc
inc
and
add
mov
push
rolb
xchg
in
fbld
cmp
mov
mov
stos
cmp
and
sub
fwait
gs
mull
xor
cmpsb
les
lret
pop
lods
mov
mov
xchg
out
andb
sbb
xor
push
icebp
aam
daa
movsb
mov
cmpsl
xchg
inc
lock
and
inc
out
sbbl
push
and
jno
jge
and
mov
sub
mov
cmpsl
fsubs
mov
pop
xor
mov
icebp
xchg
jmp
adc
outsb
fiadds
jle
inc
shll
inc
out
ror
insl
push
icebp
xor
push
cli
pop
ds
sahf
imul
lret
loope
fisttpl
aad
test
int
sbb
mov
mov
bnd
mov
insb
rorl
pop
xchg
dec
pop
sbb
xchg
into
clc
mov
mov
outsl
xor
ds
xchg
xchg
push
add
lcall
mov
fisubrs
cmp
imul
inc
ja
xor
add
movsl
ret
ret
fildll
add
insb
and
daa
push
add
movsl
dec
lds
pop
aas
mov
push
loope
pop
add
adc
mov
cmp
testb
addr16
ljmp
push
adc
fisubl
and
lods
mov
loop
push
push
ljmp
add
movsl
iret
dec
push
ficoms
mov
insb
gs
xchg
and
push
enter
enter
jbe
and
repz
lea
stc
push
add
mov
jp
je
cmp
pop
mov
stos
xor
mov
std
push
rcrb
jne
repnz
lock
ds
aad
sub
xor
outsl
xor
xchg
dec
pop
xor
xchg
and
sbbl
push
cmovs
lret
and
push
sbb
dec
movsb
jecxz
mov
push
inc
bound
dec
out
dec
hlt
shl
popf
xlat
mov
shl
daa
sbb
outsl
mov
add
in
bound
sti
mov
div
add
je
lret
cmpsb
push
pop
mov
add
add
in
pop
add
out
and
push
fbstp
jnp
add
mov
inc
scas
xchg
cld
cmp
int
fisttpl
mov
mov
in
lods
imul
pop
mov
aaa
pusha
pushw
out
out
and
lods
jle
ret
inc
out
clc
clc
test
les
lret
sbb
vandps
or
sub
rorl
out
movsl
sti
dec
xor
jge
rcrl
jp
sub
xchg
aam
adc
add
pop
sbb
xchg
cwtl
mov
fidivs
cmpsb
testl
xor
xlat
cmc
xchg
mul
gs
add
fcmovne
ds
mov
pusha
push
sbb
data16
push
inc
aad
inc
add
adcl
mov
fmuls
out
jno
jo
dec
sbb
int
pushf
enter
or
dec
cmp
dec
or
cli
xchg
xchg
leave
loope
xchg
xor
xchg
pop
and
mov
divb
xchg
mov
push
jle
pop
xchg
sbb
aad
inc
jae
add
shll
add
lea
mov
loop
push
lret
in
je
lock
jmp
aaa
leave
xchg
in
mov
rorl
push
mov
loope
out
orl
outsl
roll
push
lods
adc
mov
and
xchg
insl
sbbl
dec
mov
lcall
loop
xchg
pop
and
jb
cmp
sbb
andb
cmpl
mov
aaa
jb
sub
scas
adc
dec
lea
mov
loop
push
xor
push
sub
or
pop
stos
jno
ret
jg
inc
or
insb
cmp
mov
xlat
mov
xor
pop
mov
iret
lods
repz
push
leave
sbb
int
test
xchg
int3
jo
sub
testb
test
add
and
rorb
ds
inc
gs
es
pop
mov
and
cwtl
lods
in
push
sub
aad
fs
and
mov
xchg
jb
repz
jo
sbb
sahf
adc
lea
push
pop
mov
sbb
jo
sub
cmp
adc
dec
mov
shlb
mov
mov
add
dec
daa
faddl
loop
pop
add
subl
clc
icebp
ret
imul
cmc
gs
insl
fidivrl
loop
loop
pop
lret
mov
mov
push
adc
mov
imul
xor
ds
clc
jle
lret
adc
dec
in
idivl
sub
or
xor
inc
fstps
pop
imul
loopne
jne
inc
into
sub
loopne
push
add
xchg
sbb
jno
ret
xor
fldenv
insl
inc
lret
mov
pop
insb
fmul
mov
cltd
cmp
mov
rcr
pop
ds
mov
lret
adc
cmp
inc
and
pop
int3
jns
jg
rcr
incl
push
cmp
or
jbe
xor
adc
sbb
ljmp
dec
or
hlt
pop
cbtw
imul
add
adc
stos
mov
xor
out
dec
dec
dec
ljmp
stc
jl
and
xchg
xor
sahf
mov
lret
add
test
sub
sbb
mov
push
fists
mov
pop
test
add
sbb
pop
pop
dec
mov
sahf
es
loop
imul
lock
mov
mov
cld
jecxz
jbe
dec
lahf
in
cwtl
jg
pop
jge
jae
dec
push
repnz
data16
shl
nop
mov
mov
icebp
sub
fmull
sub
test
jmp
jne
sbb
push
cmp
imul
aas
icebp
es
out
nop
movsl
pop
js
dec
xor
inc
ds
hlt
ljmp
mov
fs
xchg
repnz
test
cld
or
loop
push
call
shll
mov
loop
push
sahf
sahf
push
lcall
xlat
mov
iret
outsl
mov
popa
icebp
movsb
sub
mov
loop
addr16
push
daa
fiadds
loop
rorb
call
pusha
jne
rcrb
jl
or
xor
fidivs
push
add
push
jmp
nop
scas
jnp
stos
roll
sbb
inc
rorl
mov
jnp
insl
sub
sti
add
add
mov
inc
xchg
fstps
mov
idivl
add
xor
rcrl
sbb
mov
sub
iret
lds
jecxz
dec
roll
jae
pop
rorb
addr16
jbe
dec
cmpsb
lret
movsl
rcr
lahf
sub
insb
iret
fwait
mov
ja
mov
push
mov
pop
popf
cmp
pop
push
mov
lea
ss
loop
push
stc
dec
ds
js
repnz
add
push
ja
and
sbb
mov
mov
roll
addr16
cmp
add
loop
in
aaa
fisubl
dec
aaa
jo
shll
cmp
cmc
add
mov
jmp
scas
push
scas
aam
out
shll
cmpsl
out
iret
in
sarl
aas
mov
insl
add
mov
add
sbb
xchg
es
loop
push
pop
aad
idiv
xor
add
push
push
sahf
cmpsl
push
dec
xor
add
lret
jmp
stos
movb
xchg
xchg
notb
jmp
loopne
sbb
cld
xor
mulb
fldt
shll
jg
test
jmp
inc
adc
ror
mov
movsb
cmpsl
pushf
xchg
ret
ljmp
into
cmp
dec
std
out
and
fildl
mov
sbb
movsl
push
jmp
sub
pop
cmpsl
je
sub
jl
and
sbb
mov
inc
ljmp
xor
jp
adc
ror
inc
loop
in
cltd
insl
dec
push
or
dec
mov
stc
mul
outsb
mov
je
fcoml
adc
jecxz
fisubl
stos
in
xchg
and
adc
leave
pop
or
dec
add
rcrb
xchg
xchg
movsl
sbb
xchg
testb
inc
insl
lahf
dec
out
je
stc
bound
adc
add
loop
adc
inc
es
fwait
inc
mov
ret
or
fcmovnbe
cld
mov
popf
sub
mov
out
sarl
jp
dec
ds
dec
or
jmp
pushf
ds
pusha
out
mov
movsb
scas
push
xor
movsl
push
jns
lods
mov
and
mov
dec
jle
mov
fstpt
inc
inc
jmp
cs
bound
gs
fs
bound
adc
test
cmp
insl
xor
mov
ret
xlat
fimull
ret
push
data16
loope
xor
sbb
subl
sahf
sub
stc
add
ljmp
push
dec
test
inc
mov
xlat
jg
mov
icebp
icebp
lahf
sub
xchg
jecxz
push
pusha
daa
push
mov
jle
adc
xchg
into
lret
mov
sbb
xor
mov
mov
pop
mov
imul
rolb
sub
incb
cmp
add
xor
ljmp
inc
test
mov
xchg
xlat
mov
addr16
imul
fisttpll
lret
xor
jno
jg
mov
push
out
fsubrl
cmpsl
and
int
cwtl
cmp
mov
insl
inc
mov
mov
ror
sbb
sbb
div
jg
inc
out
clc
clc
test
fidivrl
movsl
push
in
mov
sub
xchg
out
cld
adc
dec
and
dec
mov
dec
mov
loopne
mov
pop
repnz
rorl
pop
xor
add
nop
nop
add
bound
scas
sub
out
loop
pop
mov
cwtl
and
stos
mov
mov
mov
or
cwtl
push
test
push
imul
push
xchg
push
subb
test
inc
jbe
roll
fistpl
aad
or
inc
sub
out
je
setnp
stos
mov
repnz
ds
jbe
mov
dec
ds
push
push
pop
xchg
es
loop
push
add
ret
mov
pushf
popf
out
addr16
xchg
or
jmp
add
push
bound
xor
dec
cli
cli
jl
loope
repnz
adc
test
mov
arpl
shlb
pop
std
mov
loop
mov
aas
lret
xor
mov
and
jmp
insb
data16
adc
add
rcl
aas
inc
sub
movsb
popf
sub
iret
js
sbb
rolb
dec
ds
mov
popf
dec
add
adc
cmp
jmp
mov
pop
jge
push
test
push
cld
dec
mov
orb
ljmp
enter
outsl
negb
mov
jae
lds
mov
xor
jmp
cmp
mov
and
addr16
sarl
shll
scas
dec
mul
jg
xchg
out
lods
mov
jbe
xchg
adc
cmp
and
js
in
int
fiaddl
add
add
and
lret
jg
or
out
xchg
sub
iret
jnp
push
movhps
push
pop
sbb
push
xor
movsl
in
je
cli
pop
pusha
inc
ljmp
push
sbb
mov
sub
inc
rcll
cltd
mov
sbb
adc
rcrl
lret
mov
imull
lret
movsl
push
and
dec
jno
cmp
mov
add
cmp
out
pop
push
add
or
jge
arpl
cwtl
or
mov
sub
or
lods
repz
xchg
lods
in
dec
dec
ds
cmpsb
push
add
movsl
push
add
movsl
call
add
fisubrs
add
movsl
push
sti
sbb
xor
push
shl
rorl
je
out
or
imul
push
dec
xor
adc
cmp
cmp
dec
es
loop
and
in
aas
arpl
jmp
not
inc
in
repz
mov
ret
andl
call
or
loop
stos
mov
andl
or
push
in
fldenv
push
sar
jno
test
loop
daa
pop
push
stos
pop
cmpsb
aaa
jne
cmc
ss
and
mov
lods
mov
mov
adcb
mov
sub
sti
push
adc
loop
push
in
repz
and
add
loop
pop
mov
ret
lahf
and
cmp
push
dec
mov
sub
lret
shrl
dec
mov
les
jg
mov
int3
and
adc
inc
lds
push
jl
push
lahf
fdecstp
mov
call
lods
adc
mov
mov
lods
adc
daa
inc
fstl
lret
insb
imul
push
inc
out
cmp
pop
cwtl
stc
mov
inc
pop
js
les
lret
mov
in
aam
rcll
std
or
aas
mov
push
fucomp
or
scas
iret
xor
mov
fistps
sub
loope
xlat
adcl
inc
stc
imul
adc
test
jne
inc
sub
sahf
sti
insb
adc
jle
popf
shlb
stos
rcr
lahf
es
add
movsl
rol
ret
loope
add
lock
xor
addr16
das
sub
add
sub
sbb
xor
iret
jmp
fs
in
fadds
push
enter
sti
out
movl
subl
push
enter
xor
xor
add
pop
sbb
lcall
in
dec
shlb
pop
adc
inc
je
jae
adc
repnz
sti
mov
movsl
fmulp
mov
mov
loop
push
pushf
lods
jae
adc
leave
adc
clc
ljmp
mov
dec
mov
sub
out
bound
pop
and
movsb
cmpsb
push
andl
insl
imul
xchg
pop
frstor
jecxz
test
add
leave
fwait
cmc
scas
push
sub
mov
push
add
or
scas
cmp
cmp
xor
out
sbb
pop
add
int
loopne
cmp
cmpsl
rcll
pop
ljmp
xchg
dec
test
jl
pop
jne
xchg
lcall
add
cmp
sub
loop
ds
cmp
hlt
idiv
movsl
lret
xchg
mov
pop
hlt
in
cs
sahf
pop
xor
sbb
cltd
push
scas
test
and
aam
xor
sahf
push
ds
mov
mov
stc
dec
xor
adcl
jns
sub
sub
xchg
lods
sub
sahf
loopne
adc
std
mov
pop
lods
and
jmp
ret
xlat
mov
sub
mov
cmpsb
icebp
xchg
cli
shll
mov
pop
inc
lret
cmpsb
push
insl
cmp
mov
mov
stos
mov
pop
loop
test
clc
in
and
out
out
mov
fwait
mov
aam
pop
jmp
push
push
and
in
dec
ds
cmpsl
in
and
sbb
es
pop
sub
fisttpl
inc
adc
mov
nop
mov
out
arpl
aad
mov
nop
jae
push
add
test
jp
xchg
mov
fmull
or
lret
xchg
add
movsl
mov
fwait
out
sbb
xchg
fnstcw
pop
ds
loop
push
out
jmp
insb
in
mov
mov
dec
movsb
jg
ljmp
or
aaa
xor
pop
lret
lods
mov
pushf
mov
lcall
add
pop
leave
pop
dec
mov
data16
aaa
mov
inc
icebp
stos
clc
loop
sahf
mov
movsb
lock
jg
lods
mov
rcrl
lret
stos
test
dec
sub
pop
inc
jecxz
stc
or
cmp
outsl
nop
cmpsl
lahf
lcall
mov
movsb
fsubp
inc
sete
or
pop
aad
enter
dec
iret
lods
test
cmp
or
add
cmp
push
sbb
mov
bnd
dec
or
jmp
outsl
mov
iret
and
cmp
mov
sub
sub
mov
xor
aaa
xor
pop
pop
lret
or
into
and
mov
lock
xor
fidivl
or
das
lahf
adc
icebp
sbb
pop
shll
fadds
cmpb
pop
cltd
pop
xor
jp
aas
test
mov
scas
shrb
jo
mov
ret
inc
mov
jmp
mov
movl
je
into
mov
push
sbb
jmp
cmp
fbstp
popa
cmp
out
push
loope
jne
mov
xchg
jl
jae
xchg
sarb
jg
rcl
gs
mov
push
adc
mov
dec
ds
cs
mov
cmpsw
stos
and
cmpsl
xchg
xchg
xchg
lods
sub
sbb
mov
loop
push
popa
lock
cmpsl
fistps
pushf
add
dec
mov
push
mov
inc
jns
enter
add
ljmp
xchg
xor
ja
or
sub
aad
ret
add
sti
fwait
clc
int3
push
jne
add
scas
pusha
ret
push
pop
dec
ds
lcall
outsb
adc
lret
add
aaa
test
rorl
or
int
loopne
mov
pop
mov
inc
shlb
outsl
and
aas
or
sbb
ds
sarl
gs
in
inc
mov
nop
pop
pusha
call
xchg
sbb
or
ficoms
inc
cwtl
shll
pop
lods
jns
outsb
xor
jge
adc
imul
imul
adc
xchg
xchg
sub
lret
sub
hlt
sahf
mov
fs
bnd
aaa
mov
cmp
xchg
dec
add
jbe
roll
imul
push
fstpt
movsl
push
add
movsl
mov
jmp
enter
pop
in
movsb
jg
and
and
nop
mov
fldt
mov
dec
ds
jl
mov
jnp
pop
push
or
adc
xchg
stos
gs
jae
mov
out
dec
neg
xchg
jle
inc
notb
add
add
aad
xor
lods
cmpb
sbb
cmp
sbb
aaa
aaa
fdiv
mov
pusha
outsb
popa
jb
and
mov
repz
jp
xchg
sar
repz
sahf
xchg
sbb
lods
aam
mov
cs
push
push
jne
flds
out
xor
or
faddl
call
insl
push
mov
jecxz
adc
addr16
popa
idivb
lret
aad
fisttpl
cmpsl
cmpsb
in
sbb
out
inc
push
jecxz
fwait
jmp
xlat
repnz
adc
jecxz
nop
addb
sbb
mov
fidivs
rcrl
repz
into
inc
mov
xchg
sbb
pop
nop
cmpsb
adc
mov
test
jno
mov
pop
xlat
stos
lea
loop
push
xchg
xor
xor
jne
cmp
js
js
mov
in
push
repz
jl
inc
xchg
xchg
and
inc
bound
mov
pop
or
ret
icebp
daa
cmc
fiaddl
es
inc
outsl
push
add
js
sbb
nopl
je
jl
scas
pop
xor
int3
cmp
fimull
add
outsb
xor
addr16
xor
add
scas
push
and
dec
cmp
pusha
jp
xor
mov
insl
and
addr16
add
pusha
xchg
fidivs
xlat
pop
mov
jb
out
outsl
push
mov
mov
inc
xor
loopne
add
repz
adc
push
or
aad
daa
in
mov
xchg
push
in
cmp
push
pop
dec
ds
dec
aad
pop
add
lea
xor
xor
adc
xor
test
jo
sbb
lret
push
in
std
scas
lret
mov
cwtl
xor
mov
jl
ds
mov
fisttpl
aad
inc
mov
popf
dec
fidivrl
inc
mov
loope
roll
test
adc
mov
scas
ror
in
mov
ret
jno
add
rorb
and
int
add
inc
lret
xor
test
movsl
push
mov
ret
gs
mulb
movsl
test
or
push
dec
push
repnz
testb
or
movsb
or
push
insl
xchg
push
or
lret
mov
ljmp
mov
cmpl
xchg
shll
into
cwtl
movsb
xchg
mov
mov
nop
daa
std
sarb
outsl
pusha
add
dec
push
repz
mov
xor
push
mov
jno
or
mov
pop
loop
sarb
pop
cmpsb
push
xchg
pop
cmp
jp
and
cmp
iret
dec
add
in
frstor
popf
shrl
xlat
daa
insl
incl
int
int
repnz
int3
sti
or
xchg
cmp
and
mov
rep
jp
pop
jl
dec
cltd
mov
cmp
xchg
xchg
fisttps
lcall
paddw
xor
mov
int3
imul
loop
mov
dec
ds
mov
add
gs
imul
adc
fimuls
daa
adc
sbb
mov
pop
adc
ret
loop
push
add
movsl
jmp
dec
xor
call
add
sub
loopne
fisttpl
addr16
push
xchg
inc
jmp
jae
mov
push
ret
fisttps
push
mov
lea
stos
add
movsl
jmp
pop
dec
dec
cmp
movsl
push
add
jae
fisttpl
testb
movsl
cmp
shll
inc
and
push
mov
xor
add
test
shl
cmp
mov
pop
icebp
sub
sbb
push
ss
mov
das
pop
sahf
popf
aaa
rorb
pusha
test
and
adc
mov
xor
jns
shrb
cmp
mov
dec
ds
stc
in
in
adc
lret
movsl
push
jo
hlt
popa
and
or
orb
adc
push
adc
pop
adc
adc
ja
push
lcall
movsl
push
packuswb
into
add
movsl
jmp
dec
lret
into
and
sar
test
cmp
insl
sbb
and
sarl
and
mov
aam
popf
out
jnp
mov
mov
push
mov
push
push
daa
out
add
movsl
bound
ljmp
mov
imul
das
jnp
pushf
push
mov
jl
xchg
cmp
insl
cmp
icebp
out
push
mov
ficoml
adc
mov
hlt
icebp
and
movsb
mov
xor
sub
idivl
sbb
dec
mov
xor
mov
xchg
lahf
mov
pop
adc
mov
popa
xchg
xchg
pop
xchg
fucom
cmp
jl
nopl
xor
int
mov
inc
push
test
cmp
in
call
gs
jl
push
push
jne
rolb
rorb
stc
data16
push
mov
add
icebp
pop
loope
adc
aas
jmp
dec
enter
fwait
pushl
sahf
push
ds
in
adc
jp
push
test
scas
ds
sbb
mov
and
jmp
jl
ds
xchg
xor
jle
popa
push
loop
aam
lods
or
lret
add
ljmp
jb
xchg
or
dec
jno
xchg
adc
mov
clc
mov
nop
push
push
int
and
jns
xor
ja
sub
xchg
arpl
pop
outsl
dec
adc
test
push
jnp
xor
popa
repnz
dec
xor
movsl
push
stos
arpl
lret
ds
pushf
es
hlt
in
mov
js
out
cltd
test
push
or
add
hlt
push
push
inc
inc
cmp
xor
out
jo
xchg
add
jp
outsb
push
lret
jne
mov
mov
bound
fidivrl
jb
pop
jbe
cltd
mov
push
push
dec
stos
daa
das
aam
ds
mov
lret
adc
dec
loope
dec
add
mov
dec
ret
pushf
sub
insb
pop
mov
in
jle
sbb
dec
clc
inc
xlat
ret
out
insl
push
jp
mov
mov
loop
push
insl
pop
xor
add
mov
lcall
sub
gs
mov
xor
lret
test
jecxz
fiaddl
loop
mov
jae
lahf
and
lods
ret
mov
repz
adc
outsl
cwtl
push
mov
test
mov
lret
xchg
roll
movsl
call
insb
add
mov
arpl
sub
jmp
roll
dec
or
daa
jmp
adc
sub
push
insl
sub
mov
and
mov
imul
stc
movsb
pusha
fisttps
imull
xchg
loop
push
out
test
and
pop
push
adc
dec
dec
loopew
push
sub
mov
fisubrl
rcrl
arpl
jmp
ds
loop
push
rcrl
movsb
xchg
iret
in
sub
fidivl
andb
popa
imul
xchg
insb
jmp
mov
cmpsl
mov
sub
out
mov
ds
fnstcw
test
and
cmp
test
dec
in
out
insl
lcall
xchg
xchg
mov
push
cmp
jl
inc
mov
xlat
js
lods
sbb
lea
sarb
mov
push
mov
les
dec
mov
test
icebp
adc
and
fs
sbb
sub
xor
pop
repnz
test
sub
sbb
and
loop,pn
push
xchg
add
ds
and
push
call
sub
jae
sbb
lea
je
cltd
fnstcw
mov
rcrl
cmp
mov
mov
xchg
pop
dec
aaa
and
cs
inc
xor
or
cmp
movsl
push
adc
mov
mov
mov
sbb
cmpsb
out
cmp
popf
hlt
mov
leave
inc
in
ds
das
int
fwait
outsb
aaa
push
into
xchg
inc
push
mov
push
xor
mov
movsl
or
or
lret
fildll
dec
sub
pushf
pop
pop
cmc
jmp
popa
cmp
and
xlat
cltd
cmp
imul
inc
ret
mov
add
loopne
add
add
movsl
cs
mov
mov
pop
mov
aaa
add
push
lock
sahf
push
jbe
sbb
cmpsl
pop
nop
sti
fidivl
push
xchg
repnz
jl
lods
xor
mov
int
xorb
xchg
cmp
daa
outsb
incb
test
insl
add
add
movsl
inc
dec
cmpsb
push
into
sub
nop
sbbl
xchg
jnp
add
je
add
fnstcw
adc
inc
push
ss
hlt
in
les
sub
roll
js
rcll
and
push
scas
dec
add
mov
loopne
cmpxchg
mov
pop
ds
xor
shll
roll
pop
dec
cs
pushf
pop
leave
pop
sbb
jg
adc
lret
inc
rorl
in
ds
push
xor
mov
mov
test
jbe
into
popa
out
mul
jnp
test
je
adc
repnz
mov
cmp
ljmp
ret
push
setg
xchg
fidivs
cmp
inc
fmull
cmp
push
aam
jno
adc
xchg
pop
jp
mov
ja
pop
pushf
aad
mov
mov
mov
out
mov
add
insl
mulb
sbbb
cmpl
ds
push
fdivr
scas
rorb
repnz
dec
inc
mov
je
xor
enter
push
loop
push
push
pop
int
inc
inc
pop
movsb
pop
push
mov
shlb
add
xor
aad
mov
lods
push
divl
push
and
adcl
xor
fld
dec
push
cwtl
leave
cltd
add
in
mov
cs
mov
mov
popa
call
mov
int
enter
aas
xor
loop
push
out
loope
add
push
pop
js
in
jb
mov
jae
in
inc
inc
outsl
sub
dec
xchg
push
in
cmp
or
cs
jg
mov
push
push
lret
pop
enter
pop
inc
pop
xor
jle
xchg
pop
decl
add
jp
lock
adc
mov
xchg
mov
pop
test
les
jno
add
icebp
aad
loop
jbe
fadds
fs
or
subb
lcall
jmp
pushl
fisttpl
scas
cmp
mov
and
lret
movsl
push
ss
iret
xlat
jmp
bound
mov
sub
in
push
mov
loope
mov
stos
notl
jb
out
std
sub
mov
cmpb
or
repnz
fcomi
mov
push
in
dec
ds
stos
rcrb
and
sarl
jae
int
insl
movsb
push
sbb
sbb
mov
sahf
push
movhps
inc
jae
jnp
sub
movsb
pop
in
push
inc
mov
jecxz
aaa
jecxz
pop
jo
xchg
leave
fsubl
dec
pop
enter
cwtl
jbe
push
xlat
les
ljmp
int
jmp
shll
lret
sub
mov
call
push
ret
pop
add
movsl
les
cmpsl
sub
filds
xor
pop
sbb
dec
jbe
inc
dec
mov
adc
hlt
repz
jmp
jb
inc
pop
xor
jne
lahf
in
movsb
scas
imulb
mov
cli
movsl
mov
in
sbb
or
jp
pushf
and
insb
div
imul
sbb
or
lods
sub
xchg
sub
insl
push
sub
xor
push
xchg
ret
mov
jle
xor
out
push
add
aaa
inc
call
jmp
nop
inc
pop
push
sub
gs
std
dec
mov
rcll
mov
nop
jno
out
sbb
push
cmp
jmp
cmp
sub
cmc
divb
add
pop
out
mov
bound
out
xor
mov
movsl
stos
cmpsb
inc
push
sbb
add
push
push
mov
divb
ss
sti
pop
and
ret
add
xchg
ficoms
adc
and
sub
cmp
push
pxor
stos
mov
cs
int3
aam
dec
dec
mov
std
mov
icebp
dec
iret
and
push
movsb
out
stos
out
xor
std
ret
pop
push
sub
lods
jno
push
out
and
jle
cmp
cmp
jmp
test
je
or
mov
movsl
push
adc
fst
xchg
sarb
sub
pushf
push
pop
xchg
mov
daa
mov
or
jb
push
out
mov
inc
les
adc
movsb
jb
in
pop
or
sti
push
nop
mov
out
pop
iret
daa
pop
mov
jmpw
push
mov
push
call
lods
add
sub
sbbb
mov
pusha
stc
fldl
fimull
into
pop
sbb
pop
mov
scas
icebp
fmull
adc
loop
push
cmc
mov
and
mov
inc
push
pop
mov
scas
pushf
xchg
out
fwait
cli
cmpsb
mov
pusha
stos
adc
mov
lret
adc
lret
pop
adc
add
insb
pop
cmp
lock
dec
adc
jno
cmovae
fwait
adcl
pop
out
fisubrs
add
dec
adc
jecxz
nop
fisttpl
enter
enter
jbe
push
inc
fimuls
and
dec
pop
jno
or
push
xor
pop
imul
mov
and
sbb
movsl
xchg
mov
pop
jo
cli
test
hlt
jns
mov
test
aaa
push
int
test
mov
xchg
mov
mov
xor
das
jo
sbb
xlat
adc
cmp
pop
jns
ret
pusha
adc
in
loope
decl
pop
adc
sbbb
daa
add
loop
je
push
sti
pop
int
xchg
shl
mov
sbb
and
or
and
mov
clc
pop
xlat
xor
sub
cmpsl
xor
pop
adc
shr
cmc
mov
cmp
adc
arpl
adc
xor
test
or
cmpsl
sbb
jmp
inc
sub
mov
jp
cs
mov
dec
xor
cli
pop
sbb
mov
fwait
push
ret
jg
loope
push
std
dec
ds
jl
sbb
adc
rcrl
out
in
inc
xchg
out
pop
mov
cmp
insb
push
out
mov
mov
enter
idiv
dec
dec
dec
pop
movsl
sti
repz
lret
sub
jmp
xor
mov
mov
push
into
lods
or
les
aad
push
cmp
adc
jge
daa
lret
mov
pop
mov
sub
pop
mov
insb
scas
jmp
inc
aas
sbb
fstpt
pop
aas
push
cmp
test
adc
lret
mov
cmp
lcall
outsl
sbb
cmp
sti
test
jb
cmpsl
repnz
lods
mov
sub
movsl
push
xchg
and
in
neg
movsl
push
inc
sub
into
adc
xor
push
xchg
and
xchg
adc
or
fadd
fst
rorb
dec
jecxz
movsb
fisttpl
mov
mov
xchg
dec
out
test
inc
and
pusha
push
push
dec
bswap
out
fwait
inc
cmpxchg
std
add
mov
lds
xchg
pop
imul
daa
out
adc
adc
mov
xlat
sub
rcl
les
aam
sbb
push
incl
out
sahf
icebp
mov
xor
lahf
push
dec
pop
add
sub
aaa
push
sub
xor
mov
cmc
js
fisttpl
imul
jbe
xchg
movsb
inc
aas
xor
mov
or
in
int
push
test
cmp
or
dec
pop
ljmp
sub
test
add
cmp
add
js
sub
lret
fildl
mov
data16
dec
es
pop
test
add
adc
mov
cmpsb
lods
insb
mov
jp
cmp
xor
and
rcl
loopne
or
sbb
iret
cmp
mov
repnz
ds
cmpsb
push
les
divps
mov
adc
and
push
sahf
xchg
lea
adc
mov
pop
clc
xor
or
jo
cmp
dec
cmpsb
adc
ds
push
dec
into
mov
inc
ds
xor
dec
ds
sbb
fstpl
cmp
pop
inc
jns
in
push
ret
push
cmpsb
or
aaa
push
int3
and
jg
in
mov
or
inc
or
sti
pop
pusha
into
jle
std
or
ja
idivb
pop
gs
repz
add
loopne
pop
stc
fadd
pop
nop
cs
daa
inc
cvttps2pi
sub
fdivl
sbb
loop
push
in
dec
ds
sbb
add
in
nop
popf
jmp
or
pop
pop
push
leave
lret
mov
ja
shrb
pushf
leave
or
add
test
loop
mov
add
movsl
push
jmp
je
inc
add
jle
or
mov
rorb
push
inc
into
mov
or
test
fcmovnb
dec
arpl
fucom
push
xlat
mov
aad
test
inc
sbb
push
fistpl
xchg
inc
insl
insb
mov
sbb
push
mov
mov
pop
mov
inc
test
cwtl
xor
or
or
rolb
hlt
xlat
push
xchg
lods
and
and
inc
jle
in
push
xor
xor
mov
jmp
nop
lret
sub
jmp
ljmp
jae
push
jle
xchg
addb
outsl
test
jmp
fidivrs
cli
ret
fs
negl
dec
leave
inc
shl
lock
cmp
fisubs
dec
push
sub
insl
adc
dec
icebp
sub
fildl
mov
in
push
pop
in
push
add
int
rcl
inc
das
inc
xchg
add
cltd
mov
xor
int3
and
fists
sbb
repnz
pop
jae
mov
jmp
or
add
sub
push
ret
addl
movsl
cmc
sub
scas
sti
loope
out
fwait
push
ret
loop
repz
sub
mov
out
nop
add
cmp
scas
mov
inc
sub
push
xchg
fnsave
fcmovnb
dec
jno
mov
push
leave
aas
icebp
insb
mov
and
xorb
adc
pop
inc
sar
pop
into
loope
bound
dec
dec
pop
mov
ror
arpl
flds
xor
jb
in
dec
sbb
lods
add
mov
pop
test
inc
xor
cs
ret
mov
ljmp
and
cli
negl
aad
sub
or
mov
dec
mov
dec
jge
mov
addr16
mov
inc
mov
loop
push
xor
arpl
jp
mov
mov
lods
aas
dec
sahf
xor
jle
arpl
pop
movsb
shll
scas
aam
stos
jle
adc
dec
test
int
sbb
adc
sub
in
add
jb
daa
dec
shrb
xor
mov
pop
lret
mov
cmpsb
push
xchg
call
jb
sub
xor
movsl
push
xchg
lods
push
repnz
xchg
mov
and
cmp
mov
fldcw
inc
push
outsl
cltd
inc
and
push
lock
popf
pusha
mov
mov
pop
or
jae
xchg
mov
mov
mov
loopne
inc
sub
js
dec
scas
inc
fists
stos
sbbl
arpl
and
test
movsl
scas
aad
mov
rorb
dec
jmp
and
push
shlb
loop
push
pop
dec
ds
dec
leave
cmpsl
push
inc
rcll
mov
pop
push
xchg
lret
insb
inc
xchg
aaa
out
rclb
push
clc
dec
and
imul
fwait
sub
inc
push
cmp
ds
fdivl
imul
push
cmp
sub
and
mov
fsqrt
es
jmp
stos
push
add
movsl
test
inc
mov
jmp
dec
ds
shrl
xchg
jo
push
test
test
mov
cld
rclb
in
in
push
jg
shl
inc
fmull
push
dec
rorb
lret
clc
mov
mov
push
icebp
negb
int
push
xor
jae
or
xor
ds
fxch
fwait
mov
incl
inc
mov
gs
cs
lods
stos
cmp
cs
push
pop
pushl
js
je
mov
push
dec
jbe
fmul
mov
jp
lea
mov
loop
push
data16
notl
insl
push
mov
loop
push
das
loop
push
pop
enter
rorb
mov
repz
imul
cmpb
repnz
adc
sbb
add
lds
scas
scas
stos
sub
dec
mov
mov
imul
imul
pop
int
pop
bound
leave
rclb
adc
push
or
mov
pushf
test
push
xchg
sbb
jmp
mov
testl
loop
push
bound
jo
test
or
or
inc
add
lock
movsb
xchg
sub
mov
insl
jmp
lds
lret
xor
insb
inc
mov
xor
mov
inc
pop
and
and
xor
into
stc
xchg
std
adc
xchg
sub
repnz
or
mov
jns
pop
icebp
int
jle
xor
popa
mov
arpl
lds
cld
or
xchg
cmp
cwtl
xor
call
dec
pop
ss
test
push
out
adc
xor
push
cmp
popf
and
pop
sti
inc
pop
jp
inc
ss
inc
test
adc
lret
inc
mull
pop
mov
test
adc
rolb
jl
xor
outsl
push
lea
sbb
dec
sbb
sbb
jbe
aas
std
mulb
fcoml
in
loope
hlt
and
sahf
sub
add
cmc
xchg
jmp
sbb
fnsave
lods
icebp
dec
mov
shl
test
xchg
ljmp
sahf
mov
mov
and
cmp
sbb
mov
inc
ret
call
adc
leave
or
in
gs
sbb
add
movsl
rorb
mov
xor
sub
xchg
mov
sbb
fndisi(8087
int
mulb
xorl
out
cmc
cmpsb
pushw
xchg
bound
dec
cwtl
sub
mov
mov
movsl
push
jl
inc
lahf
jae
add
icebp
popf
std
bound
or
inc
and
and
or
fidivrl
mov
mov
sub
add
rorb
lret
das
xchg
mov
xchg
and
mov
dec
adc
gs
sub
into
in
xor
cmpb
add
push
mov
mov
rolb
data16
clc
add
movsl
dec
inc
fwait
jbe
ds
jnp
jecxz
xor
gs
in
sbb
sbb
out
daa
cld
sub
push
jmp
pusha
or
inc
stos
sahf
mov
cmpsb
mov
out
movsb
push
xor
loopne
push
scas
or
xlat
adc
movsb
xor
pop
fcoms
inc
or
cs
jnp
or
mov
mov
push
pop
into
jno
lds
push
or
inc
adc
clc
out
mov
add
push
xchg
out
push
scas
mov
xor
add
adc
cmp
pop
cld
xlat
outsl
scas
lds
jne
iret
jmp
jb
adc
insl
add
fisubs
inc
out
insl
and
add
dec
loope
xchg
out
add
push
aaa
test
daa
rorl
aam
add
fstps
pop
ds
in
popa
inc
push
es
mov
sbb
mov
pop
hlt
in
xor
add
mov
in
fisubrl
jno
lock
loopne
add
fcmovb
add
repnz
test
aaa
xor
mov
push
cs
icebp
mov
pop
repz
inc
roll
jmp
rclb
es
push
dec
aam
pop
loop
adc
arpl
mov
mov
lret
xor
iret
idivb
mov
pop
dec
iret
fs
daa
in
add
movsl
xor
add
xlat
mov
xor
clc
jb
cwtl
mov
mov
stos
in
xchg
push
cmc
repz
or
loop
in
cmpsb
inc
ds
mov
pop
xchg
lret
aad
fisttpl
lds
shlb
call
incl
lea
aas
or
jno
test
sub
sub
cmp
fiaddl
push
push
push
xchg
sbbb
rcr
xor
cmpsb
pop
inc
xchg
shl
mov
sbb
lock
lods
push
cmc
fidivs
xlat
subb
mov
sahf
lret
shrl
and
sbbb
inc
and
cltd
xchg
xchg
jae
mov
sti
cltd
jno
cli
les
pop
int
insl
stos
clc
fimuls
cwtl
mov
inc
xchg
push
subb
nop
out
jl
ret
loope
jmp
lret
loopne
jmp
test
add
movsb
inc
mov
push
leave
inc
out
clc
clc
test
jno
jle
insl
adc
inc
xor
pop
ret
inc
mulb
rcl
mov
or
fisubrs
mov
or
cmp
je
lret
ljmp
roll
jae
mov
mov
mov
or
pop
sbb
cld
cmc
popf
fcmovnb
lret
call
call
mov
fisttpl
pop
adcb
adc
pop
fstl
pop
add
ja
scas
sar
push
adc
inc
xor
fidivs
int
sub
int
push
imul
push
fdivl
lret
out
jp
mov
xchg
pop
jbe
push
push
.byte
