jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
fsubrs
mov
js
xchg
push
push
sub
add
add
pop
add
add
add
xor
mov
cmp
add
add
stc
add
add
add
add
add
sbb
or
add
add
add
add
mov
cwtl
add
add
add
add
add
add
add
add
push
add
cmp
fs
add
add
add
flds
leave
add
add
xor
add
cltd
add
add
add
push
add
add
and
mov
jle
or
add
add
add
mov
add
addb
add
add
add
push
add
add
nop
add
xor
add
mov
add
mov
pushf
add
add
add
in
add
jg
mov
add
outsl
add
add
add
xor
test
pop
add
add
add
xor
sbb
pop
add
nop
add
add
add
mov
popa
add
add
add
add
add
add
add
add
stc
add
add
add
dec
add
add
add
add
add
cmp
add
push
add
add
add
add
add
mov
movsb
add
data16
add
add
add
add
add
mov
mov
mov
test
int3
add
push
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
mov
and
add
mov
add
add
add
add
pop
add
add
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
pop
add
add
add
sbb
sub
int3
add
add
add
add
add
push
add
add
add
add
add
add
push
add
adc
movb
add
or
push
add
add
add
xor
add
add
push
add
xor
add
add
push
add
push
add
add
add
add
add
pop
add
mov
add
add
push
add
add
cmp
or
stc
add
mov
xchg
add
add
add
add
add
add
pop
add
mov
mov
add
add
add
or
lods
add
add
add
int3
add
add
add
add
add
lods
add
mov
dec
add
add
add
les
cmp
mov
pop
add
add
add
add
add
add
add
jno
xchg
add
stos
add
dec
add
add
outsl
add
add
add
cmp
test
add
ltr
add
add
or
leave
add
or
dec
add
add
add
add
movsb
ss
sbb
int
clc
out
cwtl
stos
pop
push
and
rcrb
bound
fld
pop
and
lds
mov
pop
jbe
mov
fisubrl
test
inc
push
out
push
insb
jecxz
ja
and
cmp
cs
xchg
jb
outsl
mov
stos
int3
jmp
sbb
test
test
mov
ss
out
std
ss
mov
add
xorl
sub
inc
cmp
in
sub
enter
add
xor
ljmp
jne
or
jl
iret
sbb
jae
clc
test
pop
rcrl
push
fmul
lahf
enter
popa
mov
out
aad
cmpsl
adc
gs
sub
out
int3
cmp
sbbl
mov
aad
fstpl
arpl
ds
jle
xor
int
out
xchg
mov
mov
dec
jno
sbb
sub
insb
pop
jge
outsb
mov
cld
lret
inc
mov
in
pop
testb
int3
xor
pop
and
cmp
in
mov
mov
or
mov
push
outsl
adc
jbe
stc
jge
push
cmp
jo
push
push
jg
push
cmpsl
adc
das
test
mov
cmp
xchg
frstor
xlat
ret
rcrb
iret
and
or
sub
pop
jno
pop
outsl
xor
or
test
out
fs
out
lds
in
xor
dec
mov
add
pop
cmc
push
out
lds
or
push
cmc
dec
les
lret
scas
hlt
push
sarb
dec
mov
not
fistps
push
fwait
nop
jl
stos
sub
popa
lcall
std
sub
ja
sbb
popf
in
cmc
cmc
clc
dec
loope
sub
cmp
add
xchg
out
lods
movsb
lahf
fs
mov
jb
scas
cmpsl
inc
int
mov
arpl
lret
inc
cmp
jge
imul
inc
add
pusha
cli
pop
mov
std
dec
enter
imulb
inc
stc
cmp
repnz
lea
xor
push
push
pop
inc
data16
aad
movsb
mov
in
call
inc
lock
xchg
movsl
xchg
frstor
fsub
mov
cmp
cmp
out
call
jnp
dec
fwait
arpl
xchg
push
das
in
push
xor
cmp
scas
adc
es
inc
cmp
xor
pop
loop
imulb
cmpsb
jmp
xor
js
loopne
jbe
xlat
dec
mov
xchg
rolb
ljmp
into
mov
shlb
xrelease
int
sub
test
cmc
push
pop
loope
pusha
add
pushf
sbb
mov
into
movsl
jo
lock
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cmp
sub
sbb
or
mov
push
and
push
inc
arpl
lea
fdiv
int3
jecxz
adc
sbb
or
jl
insb
inc
pop
jae
sbb
mov
fdiv
int3
jecxz
adc
sbb
or
jl
insb
inc
pop
jae
arpl
mov
cld
xchg
nop
arpl
dec
sbb
pusha
and
clc
mov
fnsave
notb
xchg
test
mov
inc
outsl
repz
adcl
mov
out
jl
cmpsb
jae
add
in
or
adc
sbb
and
xlat
adcb
mov
ljmp
mov
push
sub
jbe
or
pop
lock
fstps
dec
popf
xor
bound
out
add
lods
cmp
ret
addr16
push
cld
arpl
scas
and
sbb
inc
push
insb
cli
iret
sbb
scas
adcb
mov
int
rcll
arpl
jnp
es
pop
shlb
movsb
mov
shll
cltd
repz
div
adc
sbb
or
jl
insb
inc
pop
jae
arpl
mov
fdiv
int3
mov
pop
inc
jne
and
sub
xor
leave
sbbb
cmpsb
mov
jbe
data16
pusha
and
sbb
pop
std
cli
sahf
loopne
std
mov
mov
dec
jae
pusha
inc
xor
inc
pop
jae
arpl
mov
fdiv
int3
jecxz
adc
sbb
or
jl
insb
inc
pop
jae
arpl
mov
fdiv
int3
jecxz
adc
imul
push
fsubrp
mov
add
cwtl
mov
pcmpeqd
cmp
pop
or
xchg
dec
mov
mov
leave
mov
push
or
scas
lods
mov
mov
pop
cmp
fs
cld
aam
and
or
xor
push
mov
mov
ret
or
jge
jo
sahf
inc
jl
ss
stos
and
in
add
push
adcl
movsb
out
fcomip
adcl
dec
sar
out
xor
sti
sbbb
jle
aad
xor
out
jae
mov
dec
cmp
loopne
or
test
sub
cwtl
jg
fidivl
and
jno
and
movsb
jecxz
or
add
sub
in
lcall
jnp
ljmp
fwait
push
imul
dec
xchg
mov
aam
outsb
scas
jns
adc
shll
pop
lret
lock
int
sti
sub
jns
loop
jnp
mov
bound
push
pop
loopne
jp
jle
pusha
cmc
xchg
gs
inc
sbb
and
stos
mov
jo
inc
outsl
mov
and
inc
fwait
pop
stos
fstpt
mov
push
insb
jge
xchg
mov
jns
fisttpl
cwtl
xor
hlt
hlt
jns
add
outsb
lods
xchg
dec
xchg
jo
sub
mov
jne
aam
stos
add
xchg
sub
adc
stos
fcmovnb
cmp
cmp
xchg
enter
mov
xor
mov
in
xchg
push
ja
pushf
pop
filds
mov
push
bound
popa
pop
mov
dec
enter
push
cmc
cmp
loopne
ret
std
or
xchg
clc
push
int
jecxz
adc
dec
adc
cmpsb
jno
xor
test
flds
repz
mov
dec
stos
push
daa
sub
jmp
sbb
jns
aas
lods
fstps
sub
insl
test
ljmp
mov
mov
adc
xlat
xor
insb
fbstp
popf
jae
cs
add
sbb
out
xor
clc
add
jne
and
lcall
repnz
adcb
push
icebp
aad
add
aam
jl
cltd
adc
lahf
testb
imul
loope
xchg
popf
pop
ficompl
or
orb
fsub
mov
cmpsl
mov
ret
mov
mov
add
pop
lds
mov
xchg
and
fmuls
and
jb
xor
sbb
repz
mov
dec
inc
xor
adc
mov
ds
int
out
fsubl
inc
push
sahf
sarl
mov
push
add
pop
dec
dec
push
sub
loope
mov
sbb
dec
sbb
push
pop
hlt
mov
and
test
and
testb
xchg
lock
jl
icebp
stos
push
cmpl
jae
or
popf
sti
shll
jne
cmp
cmp
mov
popf
hlt
jne
jbe
push
and
movntq
adc
jmp
les
cli
mov
or
mov
loope
loopne
xor
push
push
pop
xor
add
loop
jnp
jo
pushf
lret
push
fwait
lds
and
mov
cmp
iret
add
and
xchg
jmp
jg
test
shll
out
mov
cld
fwait
rolb
in
add
cld
mov
out
icebp
nop
push
fbstp
cmp
lock
jg
cs
cmpsl
icebp
scas
cmp
imul
xchg
or
push
adc
or
test
sub
sbb
sub
or
mov
xchg
mov
lret
shlb
pop
and
out
clc
loopne
mov
mov
rol
ret
insb
js
popl
cltd
or
push
aad
jae
aaa
sub
shrl
into
sbb
clc
jb
sbb
sbb
push
mov
sbb
jge
cld
int
mov
rcrb
and
push
push
lods
adc
mov
sub
push
and
fildll
inc
push
mov
cltd
repnz
adc
fucomp
in
add
jge
inc
mov
mov
repz
pop
ret
aad
mov
xchg
push
xchg
push
mov
add
mov
mov
mov
jle
and
addr16
mov
leave
test
mov
inc
bound
push
ja
mov
cmpl
push
aas
xchg
sti
pop
adc
inc
out
inc
call
push
sahf
jg
mov
fwait
xchg
ds
cmc
pop
cli
jbe
fcomps
lods
lds
cli
dec
lahf
fcompl
sbb
aaa
and
xchg
scas
andb
pop
into
add
add
sbb
lods
lcallw
out
scas
jns
sbb
mov
pop
and
stos
inc
mov
pushf
rclb
mov
decb
cmpsb
mov
ret
ljmp
pop
loopne
outsb
or
jae
cmp
and
sbb
stos
xchg
cli
int3
roll
sbb
jbe
ljmp
push
pop
pop
inc
inc
rcll
mov
xchg
push
xor
or
mov
sbb
adc
movsl
imul
xor
mov
imul
mov
jbe
test
jne
jl
shll
cmp
imul
xorb
repz
jne
dec
or
dec
mov
push
pushf
out
pop
xlat
arpl
flds
pop
aad
lock
daa
movsl
and
jo
test
pop
xor
mov
xorb
aad
lods
dec
lds
scas
test
pop
loope
movsl
or
enter
fiadds
mov
jne
sub
fdivp
outsb
push
inc
mov
sbb
mov
sbb
lahf
pop
mov
imul
dec
sub
leave
divl
nop
or
mov
sti
sub
repz
mov
or
xor
outsb
popa
xor
pop
cmpsl
filds
sahf
mov
stos
dec
lret
xchg
fcompl
lods
sub
hlt
sar
sbb
inc
aam
xor
xor
sub
imul
outsb
fstps
bound
sub
push
ret
xlat
je
pop
out
arpl
in
mov
aas
adc
xchg
cs
mov
stos
insl
push
and
daa
and
xor
and
ds
sbb
data16
cmp
dec
mov
push
inc
lods
pop
mov
jb
push
xor
xor
jl
sub
pop
lret
push
xor
sar
pop
xchg
out
push
pop
xchg
add
or
pop
clc
pop
jg
jo
jg
jns
jnp
in
dec
movsl
call
cmp
or
push
mov
aaa
mov
notl
stc
sbb
call
xor
lea
pop
add
pushf
xor
ljmp
mov
push
pushf
or
cmp
jmp
mov
cltd
in
mov
fcoms
inc
fs
xchg
gs
sbb
push
popa
jo
ret
push
cwtl
mov
and
xchg
mov
sbb
fbld
in
add
jge
sub
adc
adc
ja
and
nop
scas
inc
in
aas
mov
pushf
shrl
sub
cmpsl
divb
cmp
in
or
not
mov
int3
mov
sarl
out
cmp
sti
dec
aaa
mov
add
xchg
loope
push
pop
sub
pop
movsl
jo
cld
xchg
jbe
ret
sbb
jae
mov
je
mov
jo
ljmp
stos
mov
pusha
jecxz
jmp
inc
out
or
cmp
fdivrl
lcall
shrb
inc
loopne
xchg
mov
mov
stos
push
dec
in
add
add
ss
inc
add
xor
sbb
roll
fcmove
adc
stos
pop
jnp
mov
movsb
out
mov
or
test
loope
lock
insb
and
ss
or
stos
push
mov
sub
outsb
int
andb
rclb
fwait
daa
mov
fiadds
shrb
adc
jmp
adcb
xor
iret
or
setnp
insl
push
mov
sahf
and
ja
jp
stc
dec
cmp
stos
scas
in
sub
lea
fs
xlat
cmp
lock
cmp
dec
mov
dec
adc
idiv
xorps
int
and
lock
pop
pop
add
push
xor
mov
mov
lds
pop
jle
sub
ja
pop
mov
mov
push
adcl
inc
mov
and
lods
in
cmp
mov
jnp
dec
in
push
inc
cmp
xchg
out
aas
mov
push
lds
cwtl
les
ret
sbb
pop
jg
out
push
pop
dec
jo
adc
jg
mov
cld
movsl
in
cmc
sahf
sbb
push
dec
pop
iret
rcrb
add
scas
mov
insb
dec
fmuls
movsb
lret
divl
lods
adc
pop
push
pop
hlt
mov
xor
push
xchg
gs
hlt
pop
inc
and
mov
jp
mov
push
adcb
in
data16
test
xorps
cli
dec
push
push
inc
jg
cld
aam
ljmp
mov
xor
dec
les
outsb
cmp
sbb
push
es
imul
mov
adc
push
imul
mov
repz
fsubs
xor
xchg
dec
mov
and
dec
sbbb
xor
movsb
sub
imul
imul
outsb
scas
xchg
int3
out
xchg
aaa
ret
xlat
xor
mov
mov
dec
dec
and
lcall
dec
and
mov
sbb
shrl
push
ljmp
je
cmpsb
iret
lcall
je
lods
dec
nop
add
fnstcw
mov
cwtl
mov
inc
cmc
inc
filds
call
xchg
sbb
pop
cmpsb
mov
adc
decb
jne
cmp
mov
fildll
insb
dec
add
pushf
xor
inc
cli
lret
inc
dec
xor
rolb
test
sbbb
repnz
adc
arpl
mov
jle
or
enter
imul
or
mov
fstl
lret
lret
data16
dec
pop
subb
test
pop
and
pop
xor
mov
add
inc
shlb
faddl
mov
lods
jg
mov
mov
aad
jo
mov
jno
pushf
adcb
adc
addl
sbb
loope
push
test
xchg
jno
cmpsb
jne,pn
jne
mov
cwtl
dec
pop
shrl
insl
xor
ss
dec
mov
mov
out
shll
rcrl
pusha
and
dec
call
and
ss
dec
sub
sbb
fmull
sahf
inc
adc
test
rcrl
fmulp
cli
sbb
mov
or
add
inc
ficomps
sti
incb
daa
cmp
cmpsl
test
ds
ljmp
mov
dec
dec
cmp
xchg
test
jbe
jle
arpl
inc
mov
or
cmpsl
mov
ljmp
jp
leave
sti
cmp
mov
comiss
adc
adc
outsb
jne
pusha
push
push
push
inc
and
lods
adc
dec
test
cmp
cmp
pop
test
or
sbb
jno
negb
fisubs
in
je
add
lock
xchg
stos
loopne
and
in
outsb
mov
stc
add
stos
jb
xor
mov
mov
jmp
adc
adc
repz
addr16
mov
lods
ficoml
adc
pop
mov
adc
inc
rcrl
cmp
push
dec
notb
test
scas
mov
hlt
mov
xlat
cmp
push
fs
or
add
arpl
mov
mov
mov
mov
push
jp
orb
in
roll
or
cwtl
and
mov
dec
shll
ja
ds
lods
nop
jg
push
jae
mov
pause
rcrl
mov
scas
insb
decl
inc
gs
dec
lock
cli
pop
push
ficoml
cmp
lret
add
cmp
mov
jecxz
addl
jbe
push
fstpt
into
pop
add
sbb
fsubrl
jbe
je
fs
mov
jnp
loope
push
mov
out
stc
inc
loopne
bound
mov
push
dec
fildll
rclb
outsb
jne
adc
inc
mov
arpl
xchg
sub
jne
scas
dec
sbbl
push
xor
xchg
rorb
push
mov
adc
int
push
in
nop
xchg
sub
ret
adc
aas
fildl
repz
movsb
mov
cld
enter
cmpsl
pop
ret
idiv
imul
adc
arpl
movsl
int3
jp
cmc
fsub
pop
dec
and
int
cwtl
sub
lret
data16
jmp
imull
outsl
push
ret
mov
int
popa
sub
shll
xchg
lea
xchg
jnp
call
loop
xchg
or
fimull
cmpsb
push
push
and
xchg
sbb
lcall
sahf
dec
push
notb
mov
xchg
add
or
aas
xchg
call
jecxz
outsl
mov
out
mov
insb
ja
test
fdiv
xor
je
fisubl
xchg
and
mov
sbb
cmpsl
sbb
cmpb
pop
outsl
push
mov
dec
and
out
mov
mov
inc
repnz
iret
mov
lds
sub
bound
out
jbe
mov
inc
xor
xor
fcompl
mov
add
mov
pushf
sbb
out
subb
call
testb
adc
clc
pop
js
pop
add
push
mov
adc
mov
lss
nop
fldenv
push
jle
scas
inc
pop
movsb
imul
iret
out
mov
std
inc
je
repnz
mov
push
scas
inc
imul
test
mov
pop
xor
dec
repz
sub
daa
add
xor
mov
out
ljmp
sub
and
cmp
inc
push
fsubrs
jge
xor
mov
mov
cmpsb
hlt
in
cmpsb
adc
push
push
lahf
insb
xchg
mov
cltd
roll
fs
cmp
jge
sbb
and
mov
lods
mov
dec
loop,pn
lock
jmp
jmp
outsl
aas
ret
out
jmp
and
cmpsb
fs
les
test
mov
pop
cmc
arpl
mov
add
dec
xchg
inc
lock
fwait
out
daa
nop
das
and
roll
enter
fisttpl
push
adc
fdiv
lret
lret
push
inc
gs
jbe
iret
and
int
sub
insb
cld
xor
mov
arpl
inc
roll
cmp
push
inc
cmpl
jge
lahf
pop
cmp
dec
mov
imul
push
sti
pop
adc
pop
arpl
xor
ljmp
popa
sub
xchg
in
popa
xchg
enter
scas
adcb
jb
xor
inc
push
jnp
mov
sub
mov
roll
rdtsc
push
fldenv
sbb
dec
mov
and
insb
pop
jnp
jle
mov
fs
aam
mov
xlat
cs
mov
addr16
xchg
mov
je
dec
fcoml
rclb
outsb
pop
jmp
loopne
dec
cmp
repnz
pop
enter
je
fidivrl
popa
sbbb
out
add
lods
pop
popa
dec
inc
negb
or
mov
jns
fdivl
mov
and
adc
push
loop
loope
shll
stc
pop
roll
notl
xor
lcall
pop
popa
sub
hlt
out
sbb
sub
or
mov
daa
lods
sar
bound
lock
or
nop
sahf
push
cli
and
jg
in
fdivs
jge
pop
lea
lret
decb
adc
xchg
sar
in
fwait
ret
push
jg
and
jmp
mov
xor
jle
cltd
nop
ljmp
loop
test
pop
lret
mov
lret
ljmp
rorb
or
scas
push
adc
loopne
mov
pop
add
lods
mov
and
pop
jne
pusha
sbb
pop
orb
and
xchg
add
adc
out
jmp
cltd
out
adc
mov
push
xchg
cld
add
or
cli
iret
mov
adc
inc
lcall
mov
push
gs
xlat
xor
das
notb
xlat
mov
pushf
push
into
arpl
in
repz
lea
ret
or
je
aaa
call
inc
arpl
and
lea
cmp
mov
mov
mov
adc
pop
jns
and
mov
xchg
cmc
lcall
stos
orb
mov
mov
pop
fdiv
sbb
add
sub
cmp
mov
cmp
adc
imul
cmp
fidivrs
aad
mov
mov
ds
sahf
ds
aad
outsl
adc
pop
jle
flds
inc
into
cmp
ds
fcompl
lcall
das
and
inc
pop
inc
push
pusha
mov
enter
insb
pop
inc
push
xchg
lret
std
xchg
jge
clc
inc
inc
push
inc
imul
cmpsb
sbb
mov
aam
push
into
jmp
jmp
pop
mov
sbb
ds
bound
cmpsl
cltd
bound
xchg
push
test
lea
fdivrl
lret
out
fidivrs
mov
out
push
cmp
cmp
adc
popf
movsb
in
inc
repz
sub
mov
cmp
addr16
mov
cmp
stc
lock
fwait
dec
cmp
jns
sub
mov
cmp
ds
and
mov
rorl
insl
inc
int3
cmp
lea
mov
mov
outsl
pop
push
jne
popa
paddusb
pop
mov
cmpsl
dec
imul
repnz
scas
sub
inc
push
jle
in
xchg
cmp
into
jo
enter
pop
push
adc
data16
mov
sub
jns
dec
mov
push
sbb
jmp
int3
pusha
stos
out
dec
movsl
jno
mov
add
mov
push
add
mov
aam
subl
cmp
pop
out
enter
movsb
ljmp
jg
mov
fdivl
adc
pop
sahf
leave
mov
inc
fsub
loop
addl
sub
rcrl
lahf
push
cs
mov
data16
or
sub
mov
adc
or
cmpsl
out
sbb
pop
cwtl
repnz
cmp
test
cmpsb
test
dec
arpl
stos
inc
push
and
cmc
mov
mov
dec
pop
add
bound
mov
xor
addl
xchg
in
mov
ret
lret
fistpl
push
stos
inc
xchg
leave
push
jns
sbb
into
scas
fldl
fst
repnz
mull
lods
xchg
jecxz
jno
enter
lret
xor
sbb
stc
mov
sbb
cmc
pop
cltd
cwtl
sbb
push
fnstcw
add
mov
xchg
push
xchg
les
out
dec
leave
stos
xlat
test
sub
fldt
addl
daa
push
push
ffree
rol
inc
pop
pop
ret
sti
push
mov
dec
pushf
or
sub
sub
dec
lea
sbb
xor
test
fldenv
cmp
push
into
pop
xchg
sub
data16
cli
in
jnp
es
mov
or
mov
cltd
repz
inc
jp
pop
lock
dec
shlb
pop
sbb
lock
push
sub
sub
or
lods
pop
xchg
lods
out
stc
mov
stc
mov
lods
iret
push
mov
lods
push
mov
push
cwtl
push
aas
push
pop
sbb
xorb
sahf
cli
movb
adc
imul
es
rorl
scas
jb
jbe
sti
mov
enter
aam
sbb
fisubl
shlb
mov
fs
mov
cs
push
xor
cs
stc
sbb
cmp
ficomps
or
fimull
fdecstp
mov
and
xchg
inc
xor
jnp
fsubrp
mov
mov
sub
lret
xchg
xchg
sub
adcl
dec
dec
ljmp
mov
pushf
or
xchg
mov
cmp
test
cltd
arpl
cwtl
js
ret
mov
inc
xor
repz
ljmp
push
insb
inc
pop
jae
arpl
mov
fdiv
int3
jecxz
adc
sbb
or
jl
insb
inc
pop
jae
arpl
mov
fdiv
int3
jecxz
adc
cld
push
insb
inc
pop
jae
arpl
mov
fdiv
int3
jecxz
adc
sbb
or
jl
insb
inc
pop
jae
arpl
mov
mov
cmp
or
sbb
jb
bound
inc
and
dec
add
jns
in
dec
cld
call
lods
mov
mov
insb
jb
bound
inc
sub
cmp
or
sbb
in
repnz
loop
rcr
ret
mov
subb
dec
push
pop
inc
sub
cmp
or
sbb
in
repnz
sarl
ret
cmc
and
add
daa
insb
mov
jno,pn
push
add
lods
xlat
add
inc
out
shlb
ror
push
and
mov
loop
sbb
push
mov
mov
jb
sub
shr
xchg
jecxz
aam
cmp
jmp
jge
cmp
adc
xor
repnz
push
in
sbb
push
mov
sahf
adcb
fs
xchg
mov
sbb
neg
sub
mov
bound
in
mov
test
mov
cmpsl
cltd
cmp
mov
jl
dec
push
pop
inc
sub
cmp
or
sbb
in
repnz
loop
rcr
ret
mov
les
jb
sbb
adc
add
jne
imul
sti
scas
xorl
out
push
push
push
sbb
cmp
push
push
addr16
sbb
mov
cltd
nop
leave
xlat
call
add
aaa
pop
cmp
cmp
or
sbb
in
repnz
loop
rcr
ret
mov
subb
dec
push
pop
inc
sub
cmp
or
sbb
in
repnz
loop
rcr
ret
mov
subb
idivl
movsb
jmp
loope
mov
in
xchg
mov
daa
int
fsqrt
mov
dec
and
imul
repnz
test
aaa
test
movsb
pop
addr16
jno
add
out
mov
outsl
cltd
lret
jge
and
mov
pop
push
mov
scas
andb
movb
lahf
adc
test
mov
pusha
out
pop
pop
xchg
mov
int3
jg
mov
call
sti
add
inc
fbld
xchg
andl
mov
sub
jo
stos
jp
inc
push
aaa
dec
ljmp
or
dec
push
lahf
cs
shrb
call
enter
mov
fst
jl
out
mov
xchg
jmp
jl
call
jp
pushf
pushf
not
push
pop
pop
sub
push
mov
sti
sar
fisttpl
cmpsl
test
push
pushf
das
mov
mov
pop
sahf
lret
mov
xor
aad
pop
cltd
addr16
movsb
lahf
mov
out
sbb
push
ret
sti
add
mov
xchg
push
inc
shll
sti
xor
jmp
out
and
je
mov
adc
loope
sbb
repz
pminub
xchg
bound
xor
dec
addl
dec
xchg
jg
jne
adc
lods
divl
xchg
mov
mov
out
xor
fistl
or
mov
pop
adc
xorl
call
dec
mov
jbe,pt
push
test
fidivrs
jp
mov
cmp
add
push
mov
and
fstl
cltd
dec
lcall
loope
mov
adc
lret
cld
push
mov
enter
push
cltd
pop
mov
jecxz
or
ret
jo
sti
ja
and
mov
jae
pop
push
mov
pop
icebp
lret
or
gs
movlps
arpl
movsl
out
fldenv
aas
lds
sub
rorl
adc
dec
pop
adc
jnp
sub
std
shll
lret
jbe
stos
xor
adc
dec
scas
imul
or
iret
sub
mov
aam
push
stc
sbb
or
cmpsl
jne
or
inc
lret
or
xchg
xchg
xchg
idivl
xor
aam
out
pop
andb
xlat
js
pop
cli
les
gs
out
jle
rorl
sbb
int
mov
jo
xchg
addr16
repz
sbb
mov
outsl
inc
pop
xor
cmp
fidivrl
inc
and
out
gs
shrl
dec
ds
xor
xchg
ret
adc
push
test
push
push
push
cmpsb
sub
out
sahf
aas
cmp
or
jl
out
addb
in
incb
adc
outsl
sarb
sbb
pop
add
lds
aam
dec
xor
push
mov
add
adc
inc
pusha
pop
inc
xor
andb
dec
mov
cmpsl
subb
faddl
cmc
ret
insb
dec
lret
push
cmova
jl
jge
mov
xchg
sbb
lods
xchg
movsb
jge
frstor
lods
in
mov
xchg
cmp
fdivs
ror
and
and
push
cmp
xchg
push
fbld
jge
jne
clc
mov
fdivrp
ds
mov
fmul
cmpsb
fcomip
gs
sti
out
push
int3
push
adc
ret
adc
dec
leave
mov
cmp
fwait
cmp
inc
fiadds
sub
jp
std
idiv
cld
inc
fisttpl
mov
mov
add
mov
scas
jb
mov
hlt
js
fucom
push
leave
int
repz
jl
mov
jmp
mov
dec
or
mov
orb
call
cmp
push
andl
dec
mov
sbb
dec
fadd
pushf
jb
subl
xlat
mov
and
sbb
sub
mov
gs
mov
repnz
fsubl
rcrb
mov
dec
cmp
out
add
jae
fst
hlt
pop
fsts
adc
sub
insb
out
out
lds
aas
bound
mull
test
clc
mov
outsb
mov
or
cmp
outsl
stos
negl
sbb
stos
mov
add
insl
add
pusha
idivb
xchg
dec
adc
repnz
mov
or
inc
or
inc
dec
inc
adc
push
fstpl
insl
leave
lods
sub
add
aas
pop
lds
inc
inc
jb
or
inc
add
fstpt
and
cmp
mulb
dec
cmp
jno
ret
inc
notl
mov
xchg
or
xchg
push
cld
jecxz
adc
cs
add
cmp
xchg
daa
adc
inc
and
popa
scas
imul
loopne
js
ficoml
pop
shrl
push
sahf
and
mov
and
sarl
mov
cmpsb
pop
roll
ret
fwait
sub
push
sti
mov
push
add
xor
stc
pop
ret
adc
clc
push
mov
adc
cli
jp
stos
add
mov
lahf
movsb
and
in
xchg
cmp
mov
xchg
js
andb
popa
loopne
sahf
xchg
dec
xchg
sbb
lock
mov
cmp
jg
aaa
lock
cmpsb
jns
js
fisttps
mov
adc
jbe
mov
popa
push
mov
adc
jnp
inc
sbb
div
lret
vmread
pusha
cmp
scas
pop
out
es
in
icebp
aaa
adc
mov
bound
cld
xor
test
pop
testl
fs
mov
rorl
bound
and
shlb
das
add
push
inc
push
pop
mov
jae
mov
adc
push
pop
cmp
out
xor
imul
mov
cmp
mov
lahf
sbb
and
adc
out
mov
mov
out
jne
sub
cmp
mov
push
xor
or
negl
in
or
dec
inc
fwait
mov
lcall
jno
push
das
pusha
and
lret
outsb
jmp
jns
mov
inc
insb
adc
cltd
sbb
or
cmpsb
mov
pop
push
roll
fnstsw
imul
hlt
sub
cs
mov
pop
add
dec
lret
in
icebp
mov
mov
jo
lret
push
mov
out
call
cmp
inc
pop
arpl
push
dec
testb
xlat
mov
adc
xor
xchg
jle
imul
ffree
adc
xchg
pop
shrb
je
mul
xchg
stos
mov
and
aad
xchg
dec
stos
and
stc
movsb
xchg
mov
pop
fistpl
iret
xchg
stos
shll
mov
push
mov
in
fsubrl
call
jp
dec
out
cmp
fsubs
fbld
mov
out
cmp
cld
outsl
data16
addr16
test
jmp
sbb
pop
mov
movsl
lret
sti
xchg
sbb
inc
or
shrl
pop
test
inc
out
aas
les
sub
mov
mov
loope
and
xor
stc
cld
or
and
pop
push
ds
mov
lea
push
push
inc
pop
fnstcw
cmpsl
aam
and
shrl
enter
add
inc
pop
nop
outsb
mov
push
mov
mov
fiaddl
mov
bnd
jb
iret
mov
push
movsl
pushw
add
in
cs
mov
pop
inc
arpl
lret
fstps
push
sub
stos
mov
mov
inc
jmp
dec
xor
ss
or
orb
in
rcll
fldenv
lods
push
lret
outsb
fwait
adc
mov
pop
flds
sbb
in
insl
sbb
mov
ljmp
add
test
sbb
cmp
pop
call
dec
mov
cwtl
lods
jle
cmp
dec
jge
jg
rolb
gs
jae
pop
iret
push
push
insl
jb
into
aaa
adc
icebp
or
js
mov
sub
jle
and
pop
jae
out
roll
lods
pop
cli
fsubl
sbb
inc
lret
mov
add
lods
inc
int3
aaa
les
pop
mov
imul
mov
xor
loop
push
sbb
mov
dec
test
inc
jb
add
mov
insb
pop
jmp
rorl
test
add
adc
int
mov
loop
inc
fbld
insb
mov
fsubrp
stos
or
xchg
les
pop
cmp
idivl
pop
xor
fs
outsb
sbb
cmp
scas
arpl
push
jmp
pusha
out
ficoml
or
pop
inc
loope
fisttpl
int3
adc
ret
jmp
xor
add
dec
bound
adc
mov
out
or
popf
fs
pop
add
stc
mov
adc
inc
adc
scas
sub
push
cmp
fsubrl
repnz
out
inc
ficomps
jae
cmpsl
mov
mov
imul
loope
jb
dec
dec
stos
mov
movsb
aad
pop
mov
pop
and
pop
push
pop
push
cmp
adc
imul
inc
shl
xor
fwait
xchg
insl
mov
bound
sbb
jmp
fbstp
pop
push
test
pusha
mov
xor
xchg
xchg
or
jmp
test
and
nop
xor
into
push
aad
gs
xchg
std
out
jb
jp
inc
sbb
pop
incb
rcr
mov
bound
dec
test
imul
xchg
std
repz
xchg
mov
iret
mov
outsb
clc
lret
std
add
bound
cmp
pop
andb
aad
adc
dec
lods
pop
adc
inc
inc
cs
addl
cmp
jmp
pop
sub
jg
jae
sub
jge
sarb
aas
aas
add
xchg
shrl
icebp
xchg
inc
enter
or
les
inc
aaa
mov
addr16
stos
adc
dec
xor
push
iret
and
inc
pushf
out
dec
insb
mov
test
mov
inc
aad
mov
cmpb
cmp
adc
ljmp
data16
js
ds
lds
fs
pop
das
test
push
in
xchg
out
fs
aam
leave
push
outsb
xor
test
cmp
pop
xchg
loopne
mov
lea
mov
out
bound
dec
subl
mov
test
xor
cmpsl
inc
adc
adc
push
ljmp
iret
jb
test
mov
inc
sahf
in
popa
mov
push
stos
inc
sti
mov
lods
jge
mov
clc
aad
cmp
cmc
stos
imul
scas
mov
dec
test
push
or
push
mov
cli
loopne
out
into
aam
fisubrl
ja
jle
idivb
inc
or
push
sbb
lods
fdivrl
xchg
pushf
fcmovnu
aas
mov
arpl
push
jb
test
jge
dec
sbb
test
lret
mov
aam
and
add
and
stos
rorl
ja
fbld
ds
mov
fstps
or
in
sbb
pop
adc
les
ja
sub
cmp
xchg
out
clc
std
mov
enter
mov
imul
leave
cmpsl
es
addr16
enter
push
lret
cltd
push
out
ljmp
adc
jae
or
push
ja
jo
cmpsb
xchg
mov
sahf
jle
or
orl
iret
push
mov
movsl
or
xchg
cmp
ljmp
lcall
xchg
movsl
cli
cmpsb
and
loop
fcmovu
les
xor
into
lret
testb
paddusb
inc
sub
or
fidivl
sbb
das
fdivl
cmc
jp
insl
add
mov
pop
xchg
test
dec
sub
xchg
xchg
xor
outsl
pop
mov
inc
and
mov
inc
pop
gs
xchg
testl
push
mov
mov
cmp
loop
mov
sti
push
push
negl
cli
lds
or
fildll
outsl
xchg
ds
push
clc
lods
or
js
and
int
or
lahf
cltd
jbe
push
jg
mov
faddp
xchg
cld
popf
mov
movsb
idivl
cmp
les
inc
mov
in
in
ljmp
loop
and
stos
sahf
xor
fdivl
mov
mov
inc
faddl
rcr
push
push
cmp
pushf
xor
fs
push
std
jle
sub
cmp
lret
mov
rcrb
test
mov
push
adc
ljmp
dec
cmp
xchg
insl
cmp
fstpl
test
out
fildll
out
addr16
jne
cmc
pop
popf
test
loopne
fisubl
mov
sahf
outsb
lahf
fstl
sti
lds
dec
pop
cmp
shl
pop
inc
std
test
popa
mov
repnz
je
insl
gs
cld
pushf
mov
pop
mov
mov
dec
outsl
ljmp
fs
imul
fcomps
mov
sub
cmp
jnp
cmpl
mov
adc
mov
or
xchg
out
xchg
notl
test
mov
jb
fmulp
pmullw
test
test
jno
frstor
test
cmpsl
in
push
and
cmc
or
test
pop
daa
test
dec
negb
gs
rcrb
push
xchg
adc
popl
lods
cmp
aaa
popa
mov
cmc
lahf
or
orl
lock
mov
or
stos
xor
mov
pop
repz
adc
pop
aad
iret
mov
inc
mov
pmulhw
mov
dec
dec
xchg
in
mov
test
pushf
mov
xor
fwait
or
cmp
inc
cmp
outsb
xor
dec
pushf
xchg
movsb
aam
push
sarl
jno
and
je
aad
or
dec
cld
lods
rol
push
mov
dec
mov
mull
stos
jo
xor
mov
inc
push
je
inc
lods
jbe
in
icebp
jbe
or
ret
pop
das
pop
cmpl
inc
dec
lock
push
mov
ljmp
imul
gs
pop
fs
cmc
mov
pop
cmp
inc
popf
xor
das
mov
shlb
ds
mov
imul
mull
xchg
inc
in
imul
jb,pn
pushf
xlat
mov
imul
adc
lret
xor
int3
sub
daa
lock
jns
es
xor
pop
test
mov
shrl
and
stc
scas
sub
or
adc
mov
jno
and
or
ja
sub
imul
pop
jo
ret
icebp
inc
jg
lahf
xchg
aaa
push
add
pop
and
daa
and
mov
xor
les
mov
decb
es
mov
lret
and
loopne
test
fcmovbe
repz
inc
push
pop
lcall
ja
jo
sbbb
sarb
in
and
push
jns
in
enter
jns
je
jnp
jb
xchg
mov
push
stos
leave
mov
mov
mov
out
push
jns
push
pop
stc
out
mov
lcall
out
daa
adc
mov
daa
mov
nop
jecxz
or
mov
movsl
inc
ficoml
jl
mov
xchg
test
push
push
push
push
mov
std
jl
xchg
xor
stos
ljmp
adc
jecxz
jns
jp
jle
dec
push
pop
mov
inc
jle
imul
sub
add
add
in
mov
xchg
xchg
out
pop
roll
pop
xchg
mov
jb
mov
pop
popa
imul
imul
add
inc
pushf
adc
fsubs
ja
lret
jb
xchg
cmc
add
lea
push
jl
xchg
sbb
out
je
addr16
adc
pushf
jmp
or
xor
movsb
xchg
decb
aas
inc
std
or
rcll
sbb
and
fstpl
xchg
int
pop
rolb
mov
push
mov
push
cmpb
sub
repz
xor
stos
mov
pop
cmp
adc
shr
jb
test
movsb
push
mov
sub
stos
add
sbb
push
sub
and
or
adc
xor
ss
into
lds
cmc
daa
lret
int3
leave
adc
jmp
mov
fldt
imul
test
or
push
vpsrlq
inc
sub
sub
shrl
jno
cmp
add
sub
pop
stc
aam
pop
cmpb
out
movsl
aas
fwait
int
in
xchg
xor
dec
stos
jge
pop
das
rcll
scas
cmp
scas
stc
dec
fnstenv
fists
inc
pop
mov
jp
cmp
mov
ret
sbb
xchg
jecxz
inc
dec
repz
xchg
orb
or
repnz
std
mov
dec
loope
aad
or
fiadds
out
mov
mov
push
push
cmpsb
and
xor
jecxz
xchg
stos
xor
cmpsl
outsl
dec
mov
fnstenv
pop
lcall
imul
stos
dec
adc
in
inc
mov
imul
inc
aad
vpmaxsd
in
fsts
inc
cwtl
or
fistpl
adc
bound
or
add
push
js
pop
mov
ss
into
ds
jmp
hlt
mov
test
cmpsb
loope
stos
lods
test
jno
adc
mov
and
fchs
or
ja
iret
mov
sbb
adc
sub
hlt
cmp
fiadds
icebp
pushf
jge
bound
stos
dec
les
mov
rcr
or
cwtl
mov
cwtl
jmp
pop
or
add
dec
xor
rol
xchg
xchg
ror
mov
xchg
mov
xchg
mov
addr16
aas
sbb
mov
push
fildl
pop
cli
out
add
stc
loop
adc
mov
add
mov
clc
push
in
les
push
push
out
sub
test
data16
xor
push
inc
add
mov
icebp
popf
inc
loope
mov
lock
and
jo
sbb
mov
jne
int
imul
sub
stc
mov
xor
mov
insl
cmp
je
outsl
outsl
idiv
and
push
test
mov
dec
pop
mov
ja
ja
lds
mov
sub
sbb
jbe
pop
push
dec
js
dec
sbb
fwait
add
shlb
sub
dec
ret
and
cltd
and
mov
rcr
adcb
and
subb
inc
or
ja
push
or
int
push
mov
and
adc
dec
pusha
mov
insb
loopne
cmp
cmpsl
add
lret
inc
decl
fbstp
sub
pop
rcrl
aad
sub
lret
pushf
data16
cwtl
push
xor
scas
lods
push
push
cmp
add
or
mov
push
pushf
mov
shlb
test
sti
cltd
das
sub
clc
ret
mov
fdivr
jae
inc
aaa
push
into
shlb
xchg
mov
outsl
out
pop
arpl
add
mov
fists
lea
cmp
sub
sbb
push
dec
roll
pop
aam
cltd
mov
stos
inc
icebp
fdivrl
cltd
dec
sbb
lods
inc
aad
orl
sarl
ja
and
xor
mov
cli
andb
mov
push
rol
sub
adc
loope
pop
lock
jecxz
std
push
hlt
sti
idivl
fdivrl
test
in
xor
inc
jb
ret
push
insb
pop
fldcw
clc
dec
cld
jp
movsb
or
test
xchg
cmp
lock
xorb
mov
mov
jbe
lods
mov
adc
popa
mov
adc
cltd
jmp
xchg
or
dec
dec
cs
cmp
shll
adc
jno
jne
inc
or
cmpsl
mov
inc
xchg
lea
jnp
aam
jne
and
call
push
mov
or
adcb
cmp
mov
outsl
jmp
xor
call
mov
std
or
adc
mov
scas
ja
sahf
movsb
add
mov
mov
adc
std
repz
adcb
or
pop
xor
incl
mov
push
mov
push
popa
lock
incl
negl
insl
repz
ss
je
in
and
adc
inc
stos
xchg
sbb
mov
out
shr
dec
jecxz
sbb
icebp
pop
iret
rcll
lods
lahf
std
arpl
push
mov
sbb
shll
sub
sahf
dec
add
faddl
and
leave
jecxz
movsb
cmp
inc
jne
scas
adc
jecxz
stos
dec
aam
xchg
sbb
cld
push
jmp
mov
adc
hlt
and
mov
repnz
cli
adc
gs
cmp
xchg
push
pop
inc
sub
cmp
or
sbb
in
repnz
loop
rcr
ret
mov
subb
dec
push
pop
inc
sub
cmp
or
sbb
in
repnz
loop
rcr
ret
mov
subb
dec
push
pop
inc
sub
cmp
or
sbb
in
repnz
loop
rcr
ret
mov
subb
dec
push
pop
inc
sub
cmp
or
sbb
in
repnz
dec
data16
mov
cmp
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
jne
aas
dec
vmread
push
outsl
ja
sub
fdivrs
ljmp
fildll
aas
js
push
dec
cmp
movsl
fidivrl
call
iret
mov
es
pop
pusha
pop
jno
add
push
and
scas
cmp
rcr
out
out
mov
pop
pop
aas
and
jno
testl
push
inc
inc
inc
cld
jae
fwait
jae
mov
inc
shl
das
add
sete
mov
mov
jo
xchg
call
and
aas
iret
inc
daa
fisttpll
dec
jle
pop
dec
inc
les
inc
pusha
insl
adc
sbb
out
js
pop
dec
cmp
cmpsl
pusha
pop
xlat
fwait
mov
aaa
sbb
pop
push
lods
ja
xor
ret
shrb
cmp
sub
mov
incb
iret
push
aas
test
js
mov
scas
add
flds
jo
sahf
clc
das
lret
out
std
das
inc
fistpll
punpckhbw
jb
sbb
dec
and
mov
cmpsl
rclb
and
iret
mov
pop
dec
push
jnp
or
dec
push
xor
mov
mov
lods
icebp
xchg
mov
aas
dec
push
sbb
cmp
pop
sbb
mov
stos
mov
mov
mov
sbb
sbb
dec
cmp
scas
fdivrs
call
iret
mov
aas
dec
vmread
push
dec
cmp
scas
fdivrs
call
iret
mov
cld
iret
push
pop
ja
inc
and
jno
lods
daa
cld
inc
or
lahf
in
jmp
js
lods
pop
fdivrs
jecxz
fldcw
jmp
add
and
push
or
xlat
repnz
cs
je
xor
lahf
mov
movzbl
call
mov
sarb
fisubl
dec
cli
ret
pop
aas
imul
inc
pop
cs
mov
add
loope
pushf
out
pop
sub
mov
movsl
mov
jno
sbb
mov
je
test
cmpsb
mov
sbb
mov
and
lock
mov
je
fiadds
mov
xlat
jmp
fidivrs
mov
test
xor
mov
xlat
xor
dec
sub
push
sub
adc
popf
lds
pop
cld
lret
enter
loope
mov
in
xchg
add
movsl
repnz
roll
dec
xor
ret
cwtl
pop
inc
sub
mov
jne
mov
je
rorl
es
push
pop
scas
or
std
shlb
popf
jo
adc
mov
sub
or
push
jo
lret
or
mov
xchg
loope
sbb
jle
ljmp
out
loop
jnp
push
bswap
stos
mov
pop
mov
fstpt
sub
hlt
mov
cli
and
adc
jno
mov
ror
int3
enter
test
jmp
xchg
clc
or
into
jle
mov
jno
inc
dec
sti
jge
adc
inc
sub
mov
mov
sub
sbb
add
inc
dec
xchg
inc
mov
jb
jge
js
int
push
mov
push
lcall
fsub
jp
adc
test
dec
and
jns
pop
sub
xchg
add
lock
push
push
push
in
in
and
cmpsb
movsl
fstpt
in
enter
push
out
mov
push
xor
pushf
fisubs
mov
inc
imul
add
xor
inc
push
dec
movsb
mov
mov
xorl
sbb
ja
cltd
xchg
in
cwtl
or
les
xchg
cmc
je
stc
aam
cmp
imul
in
test
jno
add
in
lea
inc
lcall
mov
lret
mov
inc
fldl
and
jle
lcall
in
xor
or
inc
xchg
dec
mov
fisttpl
pop
push
push
std
xorl
push
rcrl
in
shlb
xchg
in
mov
daa
xor
push
cmpsl
jl
push
push
push
pusha
outsl
xor
mov
xchg
xor
jg
nop
mov
mov
sti
mov
push
mov
jbe
xor
mov
push
xchg
in
bound
xor
sub
fbld
sbb
jo
adc
fistl
add
imul
push
lret
addr16
lock
sbb
adc
icebp
and
faddl
sub
mov
xchg
add
daa
adc
psubq
or
test
xchg
push
repnz
leave
les
stc
out
jnp
and
lahf
xchg
imul
popa
jle
or
mov
ret
cmc
decb
or
movsb
jle
int3
dec
inc
push
movsb
inc
leave
adc
xor
shl
lods
adc
stc
ret
fisttps
pop
movsl
jne
repnz
and
cmp
jne
pop
ja
cwtl
fcompl
cmp
and
punpckhbw
outsb
in
fidivrs
lods
sbb
cmp
dec
hlt
xor
pop
mov
adc
sub
xchg
sub
lock
adc
mov
jle
jb
and
inc
fs
sub
out
inc
ljmp
adc
loop
adc
pop
xor
cmp
fiaddl
sbb
mov
popa
push
in
xchg
jmp
mov
clc
shlb
add
pop
xor
pop
lods
int3
repz
push
rcll
sti
mov
loope
lea
push
xchg
outsl
inc
and
fimuls
dec
inc
xchg
jo
bound
xor
sub
push
xchg
dec
pop
scas
jge
icebp
mov
in
stos
inc
lock
loope
out
fucomp
hlt
out
and
adc
repnz
call
call
lahf
mov
pusha
pusha
mov
js
aaa
mov
stos
push
out
xchg
sbb
push
adc
push
mov
jge
dec
fdivr
or
neg
in
adc
jmp
jns
insb
lods
test
xlat
jbe
jmp
xor
loope
push
sub
negb
push
mov
aam
je
sti
mov
mov
lods
sbb
lods
adc
adc
or
inc
mov
mov
repnz
ds
test
lahf
into
les
pop
dec
mov
push
incb
pushf
sub
mov
or
das
or
aaa
inc
mov
jg
cmpsb
xchg
lods
jge
aam
addl
pusha
loopne
lds
loop
xor
insl
jb
dec
cmp
fcomp
cli
or
mov
jmp
or
dec
stos
std
ja
and
js
sbbb
cmp
fstpl
xor
fisubrs
lret
mov
xlat
jo
pop
inc
jnp
in
int
jle
cmc
mov
lea
cmp
xchg
mov
lea
stc
outsb
jg
xchg
nop
mov
or
mov
xchg
lea
outsl
add
fmulp
add
int3
jle
test
imul
or
aas
pop
loope
lcall
pop
in
mov
loop
add
cli
stos
arpl
mov
push
ja
dec
sbb
sbbl
negb
inc
popa
pop
mov
scas
jns
iret
stc
and
iret
add
lock
inc
dec
sub
stos
push
ljmp
push
cmp
pop
rcr
xor
add
bound
clc
repz
fmulp
sub
sahf
clc
xor
lcall
idivl
sbb
out
into
sbb
outsl
js
out
cs
repnz
jno
das
cmp
sub
cli
sarb
xchg
idiv
insl
jb
idivb
push
inc
jp
ret
imul
or
arpl
xchg
lods
icebp
imul
jno
mov
pop
mov
cmp
cmp
sub
jle
or
pop
mov
fwait
ds
out
dec
icebp
xchg
imul
cltd
or
xlat
test
xchg
mov
cli
pop
mov
daa
mov
adc
insl
xchg
ljmp
xlat
hlt
or
insb
repz
dec
scas
inc
xchg
out
testl
cmp
cmpsb
inc
cld
jecxz
dec
xor
mov
adc
out
int3
jo
xor
adc
nop
mov
lds
and
mov
inc
xor
cmc
dec
cmp
mov
movsb
push
fldenv
pusha
test
jmp
push
je
dec
pop
lret
in
pop
mov
or
cmp
adc
std
and
clc
es
mov
pop
fimuls
xchg
xchg
in
sub
ljmp
sub
sbb
pop
sahf
bound
jmp
dec
andb
mov
sub
lods
push
test
xchg
sbb
cmp
pop
mov
imul
and
dec
in
jb
jne
pop
adc
clc
jl
callw
leave
out
aam
mov
add
jle
jne
fisttpl
pop
aaa
cmp
mov
xchg
lcall
push
out
mov
sub
in
popf
adc
mov
dec
jl
sub
mov
test
movsb
rdtsc
adc
movsl
popa
lods
ficompl
jmp
xor
pop
ja
andb
xchg
dec
and
inc
imul
aam
xlat
dec
adc
jl
sahf
adc
lods
xchg
mov
xchg
addl
xor
push
cwtl
pop
jle
sub
addr16
insb
inc
call
adc
dec
fbstp
adc
add
test
pop
mov
enter
das
iret
add
jl
ss
cmc
jl
inc
add
ss
add
aas
or
cli
cmc
sbb
icebp
jb
pop
jecxz
out
mov
adc
cvtps2pd
jnp
out
mov
push
sub
mov
jne
dec
ja
dec
pop
cli
insb
ret
pop
pop
adc
mov
mov
cmc
pop
fldl
mov
xor
gs
dec
subb
lcall
shrl
test
fs
scas
or
std
cmp
shrl
repnz
sub
das
iret
xor
inc
xlat
inc
jge
stc
pop
repnz
jmp
xchg
adc
xor
lock
push
ret
and
add
out
leave
dec
aas
mov
divl
mov
mov
mov
outsb
sbb
jo
sbb
inc
xor
and
dec
or
scas
and
and
or
push
shll
or
xor
lret
lds
cmp
dec
js
add
call
xchg
mov
xor
in
stc
push
add
or
xchg
inc
gs
lods
popa
in
imul
or
pop
cmpsb
sbb
sbb
repnz
repnz
out
fidivrl
sbb
ljmp
hlt
in
scas
fcoml
roll
mov
mov
xchg
cmp
aas
sti
mov
add
pusha
sbb
inc
insb
out
pop
bound
inc
mov
jg
inc
xchg
movsl
pop
neg
mov
cmc
xor
mov
or
popa
adc
jmp
or
sbb
in
test
outsb
mov
adc
mov
adc
xor
bswap
ss
leave
sub
mov
dec
ret
or
cmp
sub
les
fadds
push
mov
mov
test
pop
fs
imul
adc
mov
push
xlat
jno
adc
out
enter
dec
orb
sti
jnp
popf
lea
movsb
pop
lea
or
popf
popf
in
ljmp
stos
adc
pop
fcos
test
mov
xchg
add
add
inc
mov
popf
js
outsl
sbb
pop
adc
and
gs
icebp
das
mov
test
mov
add
lock
cmp
adc
test
cli
mov
jmp
jnp
arpl
cmpsl
mov
outsb
push
push
sbb
aad
or
fmuls
push
cli
imul
data16
mov
jmp
cmpsl
add
dec
test
out
cltd
push
push
mov
sbb
cmpl
sbbb
mov
aam
out
in
fistpl
imul
fucompp
in
test
xchg
fdiv
xchg
dec
sbb
icebp
pop
xchg
mov
shll
mov
enter
aam
ret
and
push
pop
lock
pusha
or
gs
or
add
arpl
outsb
pusha
xchg
mov
cmp
push
mov
pop
test
fidivl
mov
call
rcrb
pushf
sub
adc
fistpll
sti
rol
and
shl
test
add
xchg
lcall
addl
add
sbb
sahf
xchg
out
dec
mov
pop
adc
pop
dec
sbb
adc
cmp
shlb
cltd
jg
mov
xorl
jnp
xor
aam
nop
pop
inc
lock
cli
sub
jns
jns
out
push
sahf
fs
pop
inc
adc
ds
lds
dec
pop
dec
loope
call
pop
xchg
cmp
jo
cwtl
inc
inc
repz
insb
mov
sub
aas
dec
dec
lcall
jno
test
rolb
pop
fsubr
jmp
jle
in
out
sub
push
sbb
jno
xor
xor
lahf
push
push
push
jnp
cmp
xchg
notb
inc
stos
add
cs
inc
leave
mov
inc
test
lret
push
popa
jo
scas
sbb
testb
lcall
push
pop
cmc
das
out
pop
xchg
push
jae
push
aaa
movsl
xor
loope
sbb
neg
mov
popf
hlt
in
cmpsl
sti
inc
sbb
dec
sahf
xor
dec
add
loop
mov
aaa
test
scas
ja
sarl
ret
js
xor
jnp
add
xorl
lock
jl
jno
adc
addl
xor
outsb
dec
sbb
imul
jp,pn
pop
mov
rcr
adc
mov
add
cli
popf
add
dec
jnp
iret
or
mov
sub
or
push
or
mov
push
loopne
push
inc
daa
push
aaa
dec
aaa
jmp
mov
popf
repnz
xchg
out
pop
mov
mov
mov
rcrb
pop
mov
or
and
sbb
sub
addr16
add
xor
sub
sbb
add
jns
sbb
lock
or
ficoml
add
incl
lahf
xor
nop
push
mov
into
leave
insb
push
popa
xchg
out
dec
call
inc
fcomps
jbe
psrad
jb
jb
dec
cmc
pop
orb
aas
shlb
filds
push
sub
mov
fcmove
mov
movsb
lret
lods
xchg
leave
mov
inc
mov
dec
push
sbb
jp
inc
xor
inc
call
std
shr
inc
push
adc
xor
inc
sti
mov
adc
pop
adc
pop
pop
xor
cli
lock
mov
pop
sub
jmp
jns
mov
int
fucomp
aas
xor
xor
adc
repz
cmpsb
sub
rcpps
cmp
jmp
cvtps2pi
dec
imul
outsb
sbb
fisttpll
pop
add
stos
lods
sub
arpl
push
pop
call
mov
rcrb
mov
subl
cmp
add
pop
sbb
dec
add
push
sub
fldt
dec
fistpll
xchg
int
adc
pusha
or
cwtl
test
mov
jg
rclb
mov
xlat
push
jl
add
in
dec
xor
ljmp
pop
das
popa
push
add
jnp
outsb
lret
xchg
fs
bnd
leave
sub
cmc
ret
dec
aam
in
adc
adc
call
lods
dec
les
push
push
push
add
mov
xor
mov
hlt
das
insl
mov
call
addb
lret
pop
dec
int
scas
ljmp
and
pop
out
cmp
btr
and
les
je
rcrl
mov
sub
clc
rclb
loope
cltd
push
in
out
je
and
jns
cmc
xchg
rorl
pusha
cltd
mov
jmp
out
cmpsl
sub
pop
or
pop
dec
enter
jno
std
push
inc
xor
jnp
lea
jecxz
cs
and
cmpsb
dec
dec
adc
dec
push
test
or
pop
sbb
and
test
jge
dec
xchg
pop
loope
mov
lahf
pushf
adc
push
xchg
or
sub
popf
sub
pop
dec
mov
mov
pop
xor
jae
fwait
xor
outsb
mov
fsubp
push
add
mov
pop
pop
loop
add
pushf
mov
and
ret
in
lret
cmp
mov
jns
push
into
pop
add
add
push
lcall
sub
iret
push
pop
repnz
adc
jns
iret
jmp
rcrl
or
dec
mov
xor
mov
rcrb
aam
xor
cmpsb
lock
jns
daa
js
and
sub
pop
popf
dec
dec
mov
test
pop
enter
scas
jp
sub
and
push
pop
push
mov
daa
sbb
mov
lods
nop
pop
add
hlt
in
aaa
adc
test
mov
cmp
jo
mov
int3
or
sbb
lcall
xor
test
add
mov
cld
outsb
add
sbb
sahf
cmpsl
pop
xor
cwtl
mov
cmpsl
mov
test
inc
mov
jns
mov
inc
or
mov
xchg
mov
push
add
and
mov
in
push
xor
and
subb
and
cmp
mov
push
fmul
gs
mov
fldt
in
inc
lahf
push
mov
or
or
pop
xchg
jae
or
shlb
mov
xchg
dec
int
and
decl
jl
add
mov
lahf
out
mov
or
icebp
cld
and
aad
daa
cmp
cmp
cmp
add
fnstenv
adc
and
xor
cmp
sbbb
loopne
popa
dec
sarl
repnz
shrl
mov
mov
cmp
sahf
jo
clc
adc
cmp
es
dec
les
mov
lret
sub
or
sub
in
push
imul
clc
mov
into
dec
cld
push
popf
sub
sahf
dec
mov
and
addb
in
mov
test
inc
sbb
or
pop
dec
test
ficomps
mov
mov
sbb
stos
ret
mov
bound
adc
stc
jl
test
fsubs
mov
aad
inc
fistps
out
inc
inc
scas
nop
je
test
or
add
std
or
in
and
xor
jg
addb
repnz
mov
lahf
in
mov
test
jecxz
push
fisttpll
jl
addl
dec
inc
lea
push
add
adc
repz
or
mov
ret
inc
es
sarl
roll
js
pusha
sbb
iret
xchg
rcrb
sbb
sbb
mov
and
loop
lods
push
sarb
popl
in
push
xor
clc
gs
mov
fisttpl
push
scas
repnz
jecxz
inc
jns
pop
inc
push
ja
inc
sbb
lret
shll
mov
imul
pusha
arpl
in
shll
dec
bnd
cltd
decl
rcrb
test
lock
vmread
sbb
inc
test
adc
fwait
popf
xchg
mov
push
or
mov
icebp
sbb
xchg
loopne
sarl
or
push
mov
add
test
sub
mov
and
rcl
clc
and
rcl
push
push
jp
mov
adc
jbe
int3
repnz
cmp
movl
add
scas
mov
pop
inc
in
cwtl
and
fwait
mov
push
push
dec
jmp
or
out
and
ss
insl
shrl
je
mov
loope,pt
repnz
inc
push
adc
cmp
loop
out
xor
out
cvtpi2ps
sub
push
and
sbb
jb
sbb
in
movsb
gs
pop
lret
mov
jne
fdivs
es
cld
push
inc
loopne
and
fisubl
fucomi
xchg
jmp
mov
in
sub
es
xor
push
pop
jno
rcrb
jge
xchg
scas
cmp
or
dec
orl
jmp
bound
mov
cmp
and
fistpll
sub
xor
sub
test
incl
push
mov
mov
mov
fst
pavgw
push
stc
pop
mov
sub
and
enter
je
sbb
sbb
cli
bnd
pop
test
push
push
ja
aam
jl
xor
pop
inc
sub
sub
cli
loope
adc
cli
loopne
cwtl
incl
sub
dec
mov
adc
jnp
nop
scas
cs
ds
icebp
mov
mov
mov
lods
fimuls
jb
in
rcll
xchg
ds
into
jl
add
push
mov
mov
ds
jb
cmpl
stos
out
push
mov
sbb
test
mov
stos
mov
adc
xor
ficoms
addr16
mov
cmp
mov
addr16
sub
ja
push
std
sbb
cwtl
sub
les
cmpsl
test
scas
cmp
xchg
push
out
insl
mov
data16
xorb
jge
cmp
pop
jb
fcoml
pop
pop
ds
or
popf
daa
push
xchg
sub
ficompl
clc
fwait
rorl
addr16
sahf
int3
inc
add
adc
enter
daa
pop
xchg
les
dec
hlt
xor
mov
out
mov
mov
bound
adc
fwait
sub
mov
mov
mov
mov
mov
pop
sub
rcll
xchg
daa
dec
ljmp
stos
adc
pop
sbb
ret
dec
ja
jbe
adc
push
jno
push
and
cmp
cmp
cltd
sub
sarb
mulb
mov
jnp
push
gs
addr16
pop
adc
jp
pop
pusha
xor
repnz
xchg
xchg
add
pop
arpl
push
jmp
and
mov
jmp
pushf
enter
sbb
jg
adc
jl
sbb
jp
sbb
pop
mov
jnp
nop
enter
nop
dec
xchg
pop
push
dec
cmp
scas
fdivrs
call
iret
mov
aas
dec
vmread
push
dec
cmp
scas
fdivrs
call
iret
mov
aas
dec
vmread
push
dec
cmp
scas
fdivrs
jmp
iret
mov
or
js
push
iret
cmp
sub
inc
bound
adc
xor
push
hlt
and
adc
mov
test
mov
test
aaa
in
jo
lds
aad
and
adc
xchg
inc
xchg
movsl
addr16
test
ja
daa
cmc
pop
xchg
aad
and
pop
adc
mov
push
adc
and
inc
mov
aad
and
scas
inc
mov
cmpsl
xchg
dec
lahf
lods
push
xor
push
mov
jb
daa
jle
int
pop
sbb
mov
arpl
cltd
out
mov
inc
or
rolb
sbb
xchg
clc
test
jge
daa
mov
call
mov
and
dec
inc
inc
inc
push
fistpll
cmp
mov
leave
sub
push
jle
jp
daa
or
cmp
pop
or
ljmp
fs
pusha
sbb
or
push
pop
in
push
jp
push
jb
daa
or
cmp
pop
or
cmp
dec
adc
push
shlb
ficoms
je
pop
roll
lods
and
adc
xchg
inc
and
movsl
std
mov
test
jg
sub
mov
mov
or
jne
or
shll
and
inc
test
jle
bound
add
ret
xor
push
adc
xor
cli
dec
xchg
jle
inc
test
insl
xchg
jo
cmpsl
jne
inc
xchg
movsl
addr16
test
aaa
in
cmc
pop
lds
aad
and
adc
xchg
inc
xchg
movsl
addr16
test
aaa
in
cmc
pop
lds
aad
and
pop
push
js
fadds
jle
mov
stc
repz
mov
lret
cmpsl
jns
xchg
sbb
jnp
and
mov
test
mov
inc
arpl
aaa
pusha
js
sbb
pusha
mov
cmpsl
outsl
adc
xor
repnz
notb
inc
js
arpl
das
dec
sbb
mov
into
pop
lock
movsl
jg
cmp
leave
mov
push
mov
insb
je
cmpb
ljmp
or
push
mov
dec
lods
subl
cmp
repnz
inc
inc
stos
mov
ss
test
dec
inc
cwtl
stos
push
in
icebp
inc
inc
push
ficomps
mov
inc
andb
xlat
rorl
mov
pusha
adc
cmc
in
int3
push
fdivrp
popa
test
mov
ljmp
fs
or
ds
sbb
push
lock
lods
inc
mov
pop
call
push
fsubs
and
lcall
lret
sbb
mulps
mov
das
sub
or
cmc
mov
mov
mov
into
mov
pop
mov
sti
movsb
pop
or
and
jp
int3
sbb
sbb
pop
xlat
in
les
ljmp
sbb
and
xchg
iret
popa
dec
xchg
push
jo
rol
out
jmp
ret
outsl
or
fdivrs
clc
mov
bound
movsl
push
inc
out
cmpsb
push
push
mov
xor
push
cltd
sbb
jns
cmp
cmpsl
mov
sti
filds
mov
jno
xchg
pop
sub
test
sub
je
pop
cmpl
mov
shr
inc
loopne
ret
mov
js
outsb
sub
ss
out
and
push
jne
mov
cmpsb
pushl
mov
mov
sub
adc
data16
insl
xor
or
int3
aam
in
cmovg
fnsave
inc
into
fimull
leave
pop
add
mov
mov
sbb
push
cmp
cmp
or
adc
mov
loopne
std
sahf
mov
and
scas
jmp
daa
dec
fimull
dec
std
cmc
lods
dec
sbb
popf
add
jl
push
in
jb
mov
inc
push
movsb
mov
cmpb
repz
in
add
in
clc
or
adc
ret
hlt
xchg
test
jns
cmp
or
or
pusha
xor
sbb
jb
cmpsb
pop
cld
aas
aad
aad
ret
inc
cli
xor
jecxz
inc
insb
in
aas
add
cwtl
push
decl
add
bound
outsl
inc
aad
mov
xor
test
lock
pop
xchg
sub
mov
push
imul
lock
pop
dec
xorl
inc
pop
xchg
pop
dec
jl
sahf
fwait
dec
mov
in
jp
bound
mov
mov
inc
fdivs
aam
dec
out
loopne
ja
push
jmp
mov
daa
and
xchg
psllw
lea
leave
push
and
fmuls
push
pop
imul
aas
pop
mov
cli
lcall
mov
jle
out
and
lret
mov
xor
in
lods
or
mov
and
dec
scas
xchg
ror
sbb
mov
sbb
xchg
in
push
scas
fucompp
ror
cmpb
lahf
sbb
adc
shr
pop
rolb
xor
or
arpl
shl
mov
mov
and
xor
xchg
into
inc
fmull
jnp
popa
cmp
into
adc
push
repz
fsubrl
divl
fdiv
or
repz
sti
lods
pop
decl
jmp
cmpsl
xchg
jb
shlb
lock
andb
test
mov
fwait
push
fsubr
xchg
scas
xchg
loop
xor
and
jae
shll
mov
sti
xlat
sbb
sahf
and
mov
mov
sbb
jg
into
pop
pop
xchg
in
xchg
jae
decb
mov
mov
dec
in
pop
inc
mov
inc
addl
mov
loopne
inc
loop
sub
push
movsl
orb
stc
jnp
cs
jg
bound
xchg
mov
inc
aam
outsb
popf
lds
adc
jnp
xor
inc
out
imul
imul
loop
mov
sbb
sbb
xchg
add
push
loopne
adc
aam
cmp
xchg
dec
pop
int
mov
adc
cmp
mov
mov
xor
lcall
pop
jge
add
es
into
and
and
clc
push
jae
and
push
lds
jecxz
scas
dec
mul
push
in
mov
ret
push
push
stos
subb
and
and
sub
in
dec
mov
rorl
test
cmp
jle
or
mov
adc
ret
pop
push
lahf
mull
push
sub
ds
dec
adc
xor
sub
imul
pop
sbb
test
fldl
andl
pop
jno
sub
je
mov
adc
stc
lret
pop
dec
imul
cmp
aad
add
dec
cmpsl
mov
loopnew
push
in
push
cld
mov
in
icebp
sbb
ficompl
jno
dec
mov
clc
ss
inc
sahf
push
sbb
or
rorl
xor
nop
adc
cmpsl
pop
mov
xor
mov
cmpsb
mov
push
and
stos
jnp
ret
mov
lock
mov
pop
xlat
or
dec
mov
push
in
aas
and
adc
fisubrl
adc
push
out
mov
mov
insb
fistl
jge
cmp
lret
movsl
outsb
sbb
jne
pop
sti
jno
lock
pop
inc
push
xor
cs
jbe
icebp
scas
or
loope
stos
aad
push
pop
cmpsl
jne
jne
fisttpl
add
mov
js
sbbl
jg
aad
in
dec
out
loope
daa
ret
lahf
and
repz
stos
dec
repnz
loopne
xchg
ljmp
aam
sbb
outsl
dec
shrb
inc
insl
mov
lock
aad
xchg
sub
and
xor
mov
pop
mov
loope
xchg
adc
mov
xlat
add
push
push
loopne
insl
aam
out
shlb
add
sub
jbe
cli
jne
or
aad
aas
adc
add
mov
in
xor
fadd
mov
arpl
xor
jo
mov
pop
les
adc
sahf
outsl
addr16
ja
add
xor
push
iret
leave
sbbl
sahf
repz
jbe
push
aad
adc
dec
jecxz
add
nop
xchg
dec
repnz
add
xchg
jno
push
xor
jno
mov
sbb
and
into
cltd
inc
lods
or
pop
es
cmpl
and
ret
sar
adc
push
push
ret
fcom
movsb
push
faddl
mov
pop
add
bound
dec
inc
fs
or
test
dec
push
adc
or
push
repnz
xchg
sti
cwtl
mov
and
mov
aas
sbb
sahf
mov
xchg
bswap
outsl
mov
cld
enter
mov
xchg
enter
pop
and
sbb
mov
mov
data16
sub
repz
shlb
inc
insb
sub
mov
pop
in
inc
push
pop
imulb
les
sub
xchg
sbb
cmpsb
lds
or
nop
js
sbb
jb
mov
xchg
fwait
aad
sbb
or
jbe
sbb
fwait
add
pop
adc
cltd
push
sub
sub
daa
pop
mov
mov
or
and
xchg
cmc
fstp
or
mov
cs
jns
jne
adc
mov
popf
lods
mov
or
jbe
xor
ja
filds
cmp
call
daa
push
test
add
fwait
jo
test
pop
notb
iretw
insl
or
cli
aam
test
pop
mov
push
push
jge
sbb
ret
icebp
shlb
xlat
sbb
insl
bound
in
mov
pop
pop
push
test
sbb
dec
ds
add
inc
stos
icebp
or
xor
insb
push
fimull
mov
xchg
jmp
nop
adc
dec
add
imul
mov
and
jg
mov
ljmp
mov
sub
ds
xchg
stos
mov
xchg
ja
mov
jmp
popf
fcompl
stc
mov
stc
leave
lret
sti
add
test
addr16
lret
jp
cmpl
xor
leave
in
pop
cmp
mov
push
adcl
lods
aad
outsl
cld
into
push
subl
pop
mov
mov
dec
mov
push
inc
test
xchg
std
movsl
inc
cli
lahf
dec
pop
or
cwtl
inc
mov
in
dec
out
mov
xchg
cmp
jbe
jecxz
mov
jmp
adc
test
xor
push
push
pop
cld
push
lret
or
jno
notb
jb
mov
cmp
mov
in
cltd
cmc
cmp
gs
jle
jge
push
test
daa
shr
out
xchg
xorb
repnz
push
aam
lret
mov
fs
mov
sbb
imul
jmp
test
adc
ljmp
sbb
idivl
xchg
iret
addb
test
jmp
cmp
ds
fildl
test
fcmovb
enter
pextrw
or
sbb
fidivs
or
mov
data16
jmp
aam
shlb
movsb
les
aaa
cmp
or
aas
int3
add
out
mov
icebp
fisubrs
xor
push
lcall
cmp
int3
push
in
inc
sbb
call
cwtl
popf
fwait
cli
in
jo
xchg
jle
sbb
adc
test
leave
in
mov
aas
int
xor
and
and
adcb
sub
push
lahf
les
xchg
ss
mov
cmp
lcall
push
cmc
add
inc
adc
cmpsl
inc
lods
cmp
push
dec
ret
enter
xor
mov
ret
sub
cmovle
or
fbld
cmp
fisubrl
es
pop
jne
add
sub
pop
movsb
enter
and
pusha
push
sbb
movsb
push
mov
scas
test
pop
push
stc
repz
repz
lahf
inc
ljmp
mov
push
frstor
push
sti
out
out
sti
sbb
lahf
cmp
push
add
sahf
fwait
movsb
xor
inc
ljmp
scas
adc
call
fnstsw
mov
or
lret
pop
data16
mov
out
fsub
push
dec
test
mov
dec
inc
pop
sub
jg
test
loop
sub
xor
and
jmp
test
mov
ljmp
test
xor
sub
pop
xchg
push
loope
fwait
shlb
mov
pop
mov
and
fidivl
sbb
lss
and
adcb
into
pop
mov
and
dec
mov
neg
mov
inc
add
icebp
ja
inc
or
jmp
or
pop
pop
jg
mov
test
jbe
lahf
cmpsl
jecxz
hlt
ret
mov
rcrl
arpl
xchg
testl
inc
std
maxps
pop
fildl
rcrb
add
ss
sub
cmp
lods
inc
mov
shlb
jae
adc
pop
inc
icebp
jle
movsl
xchg
les
loop
in
xlat
dec
aad
add
xchg
jge
adc
aad
xchg
xchg
pop
adc
imul
outsl
mov
dec
nop
cli
adc
test
dec
adc
sbb
fldenv
or
cs
sar
mov
inc
push
or
pop
adc
mov
dec
mov
mov
add
fs
ret
icebp
add
xor
into
mov
pushf
add
or
pop
lods
pop
push
mov
jp
insb
loop
insl
into
inc
jg
xchg
in
xor
leave
test
int3
jne
out
jne
xchg
xchg
mov
xchg
add
in
jns
mov
pusha
test
fdivs
lret
sub
mov
stc
add
test
icebp
xchg
jns
icebp
fcomps
iret
inc
int
mov
inc
xchg
mov
mov
popl
mov
ss
das
pop
inc
or
enter
int
xor
ret
cmp
popa
cmc
xchg
jno
pop
xlat
push
mov
add
mov
iret
mov
sbb
push
pop
fnstsw
lahf
rolb
sub
push
xchg
pop
hlt
mov
aad
push
xchg
addr16
insb
cmpsb
adc
or
jl
pop
in
jns
mov
rcr
mov
push
pop
insb
or
mov
add
push
aam
mov
mov
pop
and
lock
in
mov
pushf
jne
jecxz
adc
sub
dec
fdivr
inc
loop
jle
mov
xchg
jb
xor
pop
xchg
out
cmp
mov
test
xor
neg
mov
adc
repnz
mov
outsl
xchg
pop
je
push
mov
dec
sbbb
push
lret
pop
push
aam
iret
pop
inc
cmp
adc
test
fdivl
xchg
stc
jge
ret
jae
stos
push
pop
loope
in
sarb
sub
push
pop
fistpll
pop
fs
loope
xor
sbbb
and
enter
push
sub
cmp
sbbl
sub
pop
call
sub
or
es
cmpsb
les
js
dec
inc
or
out
std
or
cmp
mov
push
ja
mov
dec
dec
repnz
int
jno
xor
pushf
mov
push
mov
and
jno
daa
movsl
mov
lods
iret
orb
in
in
daa
xor
mov
ja
pop
jge
mov
aad
scas
push
aam
mov
lret
shl
adc
stos
push
std
jmp
adc
adc
pop
jbe
out
jno
jo
cmpsl
imul
outsl
movsb
mov
push
les
sbb
pop
data16
mov
push
pusha
test
pushf
into
stos
sbb
add
repnz
cmpsb
ss
test
mov
mov
xchg
push
xor
inc
mov
cmp
jb
loope
imul
add
in
imul
cli
dec
xchg
mov
push
mov
mov
xlat
into
cmp
testb
daa
mov
scas
add
mov
pop
or
fld
insl
xor
call
outsl
cmp
es
mov
add
movsb
repnz
call
rcrb
jle
std
lret
inc
movsl
mov
add
pop
cltd
sub
int
pusha
outsb
in
jge
push
or
mov
je
das
mov
add
fnsave
add
movsb
pop
push
push
lret
sub
jl
pushf
lock
dec
cmp
f2xm1
jp
aam
mov
aas
mov
jge
mov
mov
popa
addb
xchg
out
loope
xlat
mov
pop
sbb
pushf
xchg
pop
push
sbb
mov
out
fwait
mov
jg
cmp
aad
inc
pop
pop
roll
jnp
das
mov
jecxz
dec
jo
enter
enter
xchg
or
and
pop
mov
dec
out
stc
pusha
cmovns
fnstenv
test
xchg
xor
add
pop
out
iret
fsubs
pop
sbbb
sub
sahf
xchg
xlat
jg
fsts
imul
testb
les
sbb
or
jbe
iret
sbb
add
mov
fcoml
fimuls
loopne
adc
mov
sbb
fs
and
adc
xchg
mov
call
shl
mov
enter
aam
xor
mov
mov
repnz
pusha
xor
jl
xchg
int3
mov
xor
add
jl
mov
std
in
sub
fbstp
rolb
js
adc
jno
call
xchg
in
jno
mov
inc
lds
test
sub
push
jno
sahf
jns
or
xor
and
jmp
addb
jge
in
mov
lods
lods
and
jbe
mov
add
inc
inc
rolb
fidivrs
jmp
call
mov
std
mov
jecxz
call
mov
xchg
or
inc
and
add
lret
pop
cmpsl
ret
push
add
pop
or
arpl
sbb
cmpsl
lock
mov
mov
ja
and
cmp
inc
xchg
jle
or
repz
xchg
fcmove
pop
add
insb
or
rcrl
mov
sbb
pop
jo
in
add
pop
test
imul
sbb
shlb
lcall
jl
jmp
test
sub
mov
das
popa
xchg
mov
imul
push
into
mov
jge
add
test
xor
add
mov
ds
and
push
loope
lock
mov
sahf
mov
mov
push
sub
push
mov
scas
jge
inc
add
jmp
mov
sti
maskmovq
icebp
into
aad
movsl
in
mov
fmull
cmp
cmp
inc
andl
inc
es
inc
scas
mov
mov
inc
xchg
adc
fcmove
sbb
fnstcw
dec
or
fcomi
imul
orb
mov
sub
repz
inc
inc
cmp
and
push
inc
inc
sub
inc
data16
push
xorb
daa
mov
int3
test
enter
cmp
or
das
dec
fidivrs
jb
dec
sub
inc
cmc
add
and
pop
dec
aas
push
or
sti
icebp
test
lds
pop
jns
ljmp
fcmove
iret
cs
or
cmp
xor
enter
test
cmp
outsl
aas
pop
xor
cmp
mov
jae
push
sub
inc
cltd
jle
popa
xchg
mull
rcrb
mov
scas
sahf
pop
std
push
shr
xor
jmp
cld
inc
pop
mov
xchg
and
out
cwtl
pop
or
pop
fisubs
mov
popf
push
xchg
inc
idivl
and
adc
out
into
cmpsl
push
fs
lcall
in
pop
adc
movsb
test
pop
xchg
sub
xchg
lods
push
xchg
outsl
leave
loope
out
testl
xchg
movsb
sbb
iret
outsl
pop
outsl
ja
mov
outsl
sbb
inc
cwtl
inc
xchg
mov
lods
pop
lods
sbb
push
js
xchg
xchg
mov
fdivs
fldl
pop
xchg
popa
inc
cld
jbe
js
inc
movsl
imul
addr16
cmp
fxch
mov
xchg
cmp
and
jl
inc
imul
and
xor
adc
cmpsb
fistl
test
dec
cmp
push
in
sti
outsl
lock
sbbl
jge
or
pop
outsl
aam
out
cmp
test
stos
nop
das
or
xchg
or
sub
mov
pop
pushf
test
fisubrl
and
jl
ja
bound
pop
mov
mov
add
xor
inc
cli
cmpsb
push
adc
inc
insb
mov
add
decb
jle
inc
data16
dec
pop
and
loopne
xchg
xchg
sbb
ret
mov
je
nop
adc
jl
movsl
lea
dec
xchg
push
aad
mov
jecxz
pmaxsw
adc
arpl
xchg
adcb
lea
out
pop
pop
lcall
pop
addr16
inc
lds
xlat
or
mov
pop
rclb
ljmp
sbb
cmp
das
fs
jle
or
xor
xchg
cmc
sub
push
repz
iret
in
push
mov
xchg
test
sbb
or
cli
pop
xor
lcall
cmc
insb
enter
jge
xchg
rep
hlt
popa
fsubrp
mov
pop
sub
mov
ret
pop
and
aam
subb
iret
mov
dec
dec
jmp
and
mov
cmp
jmp
cmp
mov
inc
xor
or
sub
in
lods
mov
sbb
and
mov
adc
pop
adc
jbe
adc
sarb
mov
int3
adc
jae
cli
and
jno
and
cmp
mov
mov
and
add
mov
jmp
fmul
cmp
dec
jp
int
imulb
andl
inc
mov
andb
pop
adc
daa
psllw
or
outsl
and
test
dec
rcll
and
xchg
jle
sbb
rcrb
inc
sbb
mov
cmpsl
jne
inc
xchg
movsl
addr16
test
aaa
in
cmc
pop
lds
aad
and
adc
xchg
inc
xchg
movsl
addr16
test
aaa
in
cmc
pop
lds
aad
and
adc
xchg
inc
inc
push
ja
addr16
test
aaa
in
cmc
pop
jecxz
mov
adc
xchg
inc
pop
push
ja
cwtl
pop
std
test
inc
insl
scas
or
cmp
sub
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
dec
popa
lret
mov
stos
scas
fdivrs
dec
push
jnp
push
sbb
dec
sub
outsb
ficompl
ljmp
stos
lcall
push
sbb
or
sub
or
mov
push
ljmp
adc
insl
sbb
pop
jns
arpl
sbb
inc
outsb
stos
sahf
lret
lret
mov
inc
inc
loop
fistpl
cmp
mov
mov
lahf
in
adc
mov
mov
and
ds
cmc
lea
jg
jecxz
lahf
lret
mov
movsb
mov
xor
gs
xchg
sbb
movsb
jle
dec
mov
pop
lret
scas
push
push
lcall
adc
mov
or
mov
xchg
and
test
cli
orb
dec
aas
push
sub
push
dec
or
aad
and
xor
outsl
xchg
jp
inc
dec
inc
mov
pushf
xadd
outsb
pop
or
test
ljmp
and
outsb
pop
cwtl
dec
enter
data16
mov
jle
add
std
movsb
sbb
out
mov
xor
dec
adc
xor
push
aas
pop
jne
fbld
std
mov
jnp
pop
add
dec
push
push
jns
push
xor
leave
cltd
out
lret
mov
stos
out
pop
push
dec
push
jp
push
sbb
dec
cmp
outsb
ficompl
ljmp
stos
out
pop
push
dec
push
jp
push
sbb
dec
cmp
outsb
ficompl
mov
sbb
mov
mov
popa
jne
daa
idivb
int3
clc
add
and
mov
cmp
mov
movsl
cmp
pop
sub
addb
les
inc
xchg
frstor
out
sub
lahf
fsubrl
dec
rcll
insl
and
outsb
mul
in
pop
or
orb
and
movsb
dec
imul
fsubrl
ret
clc
push
push
xor
mov
fdivs
xchg
cli
call
fwait
popa
cmp
fildll
pop
fwait
loop
add
es
xor
push
jb
out
repz
sub
fs
mov
inc
mov
push
jbe
mov
sub
fwait
lea
pop
imulb
dec
xchg
cmpsl
push
stos
jns
or
fwait
loopne
cmp
dec
mov
bound
pop
push
iret
fdivrl
mov
dec
movsl
gs
cwtl
inc
and
push
in
aas
inc
shl
adc
mov
pop
pop
mov
xchg
xchg
out
out
rcrb
add
movsl
out
xorl
fldcw
inc
call
fcomp
movsl
mov
push
xchg
ret
push
rcrb
mov
call
inc
sub
and
adc
loope
xor
leave
lea
nop
js
std
pop
xor
jmp
jle
clc
cld
mov
cs
cwtl
dec
pop
repz
out
stc
lret
mov
adc
aas
sbb
fldcw
rorl
xor
dec
stos
push
xor
das
mov
lret
push
mov
inc
popa
pusha
data16
gs
adc
fldl
mov
mov
setne
addr16
mov
lods
mov
mov
push
pusha
push
repz
and
jp
fsin
sub
es
and
mov
lock
subb
or
jle
sahf
add
jo
scas
xchg
jecxz
jae
cmpsl
inc
jb
cmp
push
push
pop
fsub
mov
inc
loope
notb
sbb
cmp
push
adc
iret
push
and
dec
pusha
jmp
fstp
outsl
mov
add
ss
mov
ret
leave
push
js
sbb
ret
sub
pop
pop
sbb
pmulhuw
cmp
cmp
int
sub
mov
arpl
mov
cmpsl
fs
outsl
mov
add
and
add
mov
dec
push
mull
scas
push
push
sub
mov
lret
sbb
push
insl
aad
mov
test
push
lret
and
aas
xor
and
test
xor
pop
xor
xchg
int
dec
or
dec
pop
icebp
lock
push
dec
daa
fimull
out
pop
iret
lret
add
xor
sahf
into
aaa
pop
stos
ds
pop
stos
and
int3
sub
ret
rcrb
out
push
in
inc
adc
inc
inc
mov
insl
push
push
push
xchg
pop
sbb
adc
xchg
test
add
push
or
mov
enter
andb
sbb
imul
movsb
or
mov
mov
sbb
lea
fwait
mov
mov
cltd
mov
pop
sbbb
push
cwtl
push
jno
cmc
or
mov
and
into
sbb
shr
bound
stos
xor
shl
fstps
jmp
xchg
mov
xor
push
daa
imull
out
sub
inc
dec
jno
jg
lods
sub
xor
xchg
imul
push
inc
lahf
pop
in
rcrb
loope
or
push
mov
mov
xchg
lods
shll
jb
xor
dec
daa
dec
push
lds
mov
mov
or
fnstcw
fistpl
dec
aad
outsl
inc
enter
pop
mov
or
push
lods
push
mov
movsw
lock
pop
mov
frstor
pushf
mov
cmp
inc
adc
imul
outsb
mov
or
sub
xchg
outsb
pushf
mov
insl
xchg
cmp
dec
fdivp
movsb
push
aam
out
and
or
leave
enter
dec
sbb
cltd
fiadds
mov
add
mov
in
adc
aaa
incb
adc
cs
in
pop
mov
adc
fnstenv
pushf
inc
cmpsl
cmpsl
cltd
pop
or
jle
jge
mov
push
jg
mov
es
pop
jbe
js
xor
fistpl
mov
test
xchg
xor
push
clc
mov
mov
outsl
out
repz
mov
ja
push
cmp
push
and
mov
pop
or
mov
and
and
xchg
adc
inc
xchg
out
mov
sub
fsubl
and
lods
bound
add
and
mov
loopne
pop
sbb
pusha
mov
cmpsl
and
fsubrs
test
pop
pop
daa
sti
loop
test
int
shll
enter
sbbl
cmp
push
or
xor
pop
xchg
xchg
icebp
andb
scas
inc
subb
cmpsb
es
inc
in
inc
fstpl
adc
jbe
xchg
stos
repz
lock
pop
popf
add
mov
cli
and
push
fmulp
pop
sub
hlt
subb
sti
negb
mov
aaa
xor
xchg
cltd
mov
adc
mov
mov
insb
pop
jae
stos
icebp
add
jle
jp
pop
mov
fcoms
cld
aas
decb
test
cmp
test
mov
pop
jecxz
add
dec
repnz
pop
pop
stc
and
sbb
pop
fidivrl
dec
cmp
inc
nop
call
dec
addr16
insl
subb
add
mov
pop
sbb
ja
loop
daa
mull
cltd
sarw
or
es
adc
fnstenv
fs
add
insb
cmp
or
xchg
push
out
push
mov
xchg
je
jns
jnp
outsl
push
notl
push
addr16
outsl
dec
and
inc
dec
js
jns
lods
mov
sbbl
fldenv
jbe
push
dec
push
xor
lret
push
stos
cmp
inc
fidivrl
push
xlat
sub
faddl
addb
cmp
bound
and
jns
shlb
test
out
into
xchg
sbb
je
push
movsb
sub
lods
pop
sbb
sahf
stos
xchg
jb
imul
les
orb
insb
xchg
fcoml
sti
imul
pushf
mov
lock
jle
push
or
cmp
jle
test
nop
mov
mov
fisubl
push
scas
rcl
lcall
jl
popf
icebp
repz
stc
dec
add
xor
cmp
xchg
pop
movsl
adc
pop
xorb
popa
add
imul
dec
clc
dec
cmpsl
cmpsl
lcall
sub
jmp
and
int
xchg
add
sarb
je
scas
jne
aaa
jne
aam
pop
pop
fisttpl
loopne
stos
mov
mov
or
negb
lret
loope
movsb
sbb
lea
in
stc
pop
enter
jo
jmp
mov
cld
or
jne
movsl
rclb
jns
add
push
inc
mov
decl
add
imul
add
adc
int
inc
stos
mov
add
rol
test
pop
imul
cmp
push
sbb
std
jmp
lock
stc
adc
mov
das
push
jl
pop
push
cltd
adc
lods
xchg
mov
pop
ret
jl
jno
and
sbb
testb
jp
rcrb
fwait
mov
adcl
push
and
push
ret
mov
lds
and
fwait
mov
lea
inc
adc
lods
call
imul
jge
scas
mov
test
loopne
dec
add
xor
sbb
cmp
or
add
sahf
test
loop
subl
je
xlat
pop
pop
add
sub
mov
das
jo
stc
lret
push
cmp
test
xor
gs
cmc
aaa
push
xorb
and
dec
js
imul
mov
lods
mov
mov
jmp
or
add
sti
xor
jmp
jno
in
sub
or
mov
xchg
negl
je
inc
pop
add
insb
pop
scas
popa
cli
lret
xchg
push
xor
sbb
call
dec
pop
sbb
push
ds
xchg
mov
xchg
pop
and
fs
test
fnsave
cmc
mov
adc
pop
sbb
cwtl
mov
push
jecxz
mov
inc
int
pop
out
and
fs
sub
dec
or
xor
sahf
pop
sbb
jne
repnz
insb
xchg
jecxz
sbb
and
lods
lds
fisubrs
pop
and
lret
mov
adc
shrb
add
mov
push
lret
fs
mov
adc
or
les
shll
add
xchg
push
repnz
lds
jmp
pop
and
movsl
sbb
sub
mov
testl
hlt
sbb
inc
mov
shll
mov
dec
push
inc
icebp
les
mov
jnp
repz
adc
fsubs
sahf
ret
push
xor
xchg
dec
fsubrl
lea
mov
sub
inc
sub
xor
jmp
inc
lods
xor
xor
gs
jb
stc
add
test
mov
dec
mov
sub
cmp
add
push
repnz
jmp
xchg
inc
mov
and
mov
xchg
or
dec
stos
pop
push
dec
xchg
xor
adc
pop
push
mov
bound
inc
adc
jb
addr16
add
fucomp
fadds
push
mov
pop
dec
and
mov
mov
sbb
addr16
imul
imul
jecxz
arpl
repz
arpl
subl
mov
push
xchg
pop
or
mov
jb
loop
ja
addr16
jne
fbstp
ljmp
gs
subl
orb
insb
or
popl
sub
loop,pn
mov
xorb
cwtl
xchg
testl
push
in
sub
mov
repnz
dec
jge
fstl
fwait
pop
mov
mov
pusha
dec
inc
cmp
lods
pop
pop
push
sbb
popf
or
push
add
mov
xor
insb
icebp
shr
sbb
addb
xchg
je
jno
mov
push
cmp
xchg
in
rcl
pop
or
dec
test
xchg
sahf
pop
cmp
bound
dec
xor
adc
shr
sub
pushf
push
adc
mov
or
fiadds
pop
xchg
jbe
dec
or
add
mov
imul
mov
push
jge
ja
pop
sbbb
jecxz
add
jo
inc
mov
pusha
sub
test
aaa
aam
mov
cmc
or
add
cmp
push
stos
pusha
nop
and
insl
je
imul
pop
out
push
inc
sbb
or
insb
and
adc
add
mov
cwtl
xchg
pop
sti
js
loopne
push
xor
lahf
pop
out
cs
mov
xchg
mov
cwtl
cmc
dec
add
ds
aad
pop
aas
in
xchg
adc
pushf
lds
int3
movsl
movsl
adc
mov
and
adcl
and
rcrb
sbb
dec
in
jmp
jg
in
add
in
sub
test
arpl
cmp
dec
flds
decb
dec
lods
inc
dec
jne
outsl
xchg
loope
xor
inc
je
clc
fmuls
shl
fisttpll
push
out
mov
dec
mov
xchg
mov
lret
bound
inc
test
sub
lahf
jb
ljmp
xchg
cltd
ja
rcrl
loope
imul
shll
insl
imul
testb
xor
add
pop
dec
jne
push
push
cwtl
lock
sub
fstpl
pop
dec
push
dec
mov
or
mov
cmpsb
mov
pusha
scas
hlt
arpl
mov
movsl
push
add
xchg
scas
and
xor
push
lret
fs
repz
daa
push
fdivrl
insl
jle
inc
lcall
sub
ret
sub
rorl
xchg
scas
xorb
mov
mov
mov
cmpsb
mov
add
dec
fwait
out
bound
fiaddl
stc
cmpsl
shlb
fidivs
xchg
out
rcr
add
daa
push
add
cmp
push
outsl
leave
dec
aad
into
int3
push
movb
inc
lock
push
pop
push
lret
jne
lret
pushf
push
push
insb
popf
mov
xlat
jns
mov
cmp
inc
gs
jl
jl
mov
mov
and
cltd
psrld
jae
add
lret
ljmp
push
cs
xor
stc
sub
sbb
push
add
jg
adc
enter
out
pop
fsubs
jle
in
jle
add
mov
cltd
dec
std
mov
lret
xchg
fldt
inc
mov
ljmp
sub
loope
sbb
lea
inc
inc
mov
adc
xor
lcall
and
xorb
inc
mov
loope
sbb
mov
mov
dec
xlat
jle
push
je
xlat
cli
mov
fsubs
shlb
jmp
mov
cmp
mov
lret
and
pop
dec
mov
fdivs
add
jnp
push
fsubl
fidivl
out
pop
leave
mov
jmp
in
in
mov
jp
test
xchg
cmp
cltd
fldenv
shl
mov
testl
and
sbb
jb
js
xchg
xor
icebp
xchg
jo
push
in
dec
cmp
cs
lds
ficomps
test
push
add
lret
lods
out
push
sub
sub
pop
je
or
dec
jb
pusha
mov
pop
mov
leave
mov
or
cli
mov
mov
xchg
sub
rcrb
push
movsb
cmp
fidivl
push
jge
mov
test
mov
xchg
pop
pop
adc
int
insl
das
xor
add
mov
notb
addl
in
pop
rolb
movsb
into
dec
fisubs
aaa
inc
add
add
cmpsl
clc
xchg
popa
dec
cli
das
divb
stos
ret
sar
sti
and
mov
xchg
pop
dec
out
sub
xchg
rcrb
int3
rolb
jmp
ds
dec
bswap
int3
arpl
sbb
iret
mov
push
aaa
push
xor
add
shrb
inc
and
rcrl
rol
xchg
pushl
insb
jnp
and
orl
cmpsb
cwtl
data16
rol
cmpsb
push
fdivs
mov
sbb
add
std
sbb
out
bound
das
lahf
in
adc
mov
leave
inc
pop
andb
pop
lds
mov
mov
subb
or
shl
push
in
es
lods
dec
jle
fsubl
scas
or
mull
in
fildl
push
das
pop
adc
jle
xor
pop
xorl
dec
pop
cltd
xor
dec
arpl
negb
jecxz
sbb
repz
lds
gs
add
in
out
and
movsb
jg
mov
fwait
test
je
fwait
mov
sbb
ss
push
xchg
lahf
sbb
mov
outsl
jp
add
sub
enter
in
je
lcall
pushl
jo
pusha
andl
push
cmp
jns
pushf
push
push
xor
stc
xchg
jl
shll
push
push
lret
enter
pop
mov
popf
mov
pop
sub
pop
push
repnz
icebp
push
shll
xchg
stc
jae
or
jae
sub
dec
add
jl
bound
xor
xchg
notb
jno
xchg
jmp
repz
stos
outsb
into
push
fdivl
int
shrb
dec
xchg
fisubs
ja
cmpsb
lods
shrl
pushf
xchg
fisubl
jns
and
jmp
jge
jns
aas
push
cltd
lahf
cmp
and
rcl
loop
sti
popf
push
mov
ret
divl
sbb
push
lds
stc
fnsave
or
ja
inc
popf
dec
or
jmp
add
jge
fsubrs
and
lret
jns
cmp
int
sub
ja
adc
cmp
xchg
les
push
outsb
repnz
gs
mov
add
mov
cmpsb
xchg
ret
insl
mov
jge
fwait
into
test
mov
nop
mov
push
aam
les
pop
lcall
mov
xor
fwait
push
and
aad
add
int3
cs
xchg
dec
shlb
or
in
adc
clc
adc
xchg
cmpsb
xchg
mov
push
dec
repnz
jg
sti
sahf
adc
popf
mov
or
jecxz
and
jp
jnp
dec
sbb
fs
xor
xor
ds
popf
cmp
shrl
cmp
ret
shl
add
mov
pop
add
lahf
ficomps
pop
fld
adc
sbb
movb
dec
cltd
xchg
mov
repz
pop
adc
inc
sbb
mov
xchg
dec
add
jl
push
pop
push
pop
dec
loop
and
jne
icebp
mov
pop
push
mov
add
xor
jmp
jmp
add
cmp
shr
loope
dec
mov
add
jmp
decb
scas
mov
clc
mov
adc
es
push
bound
fbld
xor
sub
shlb
mov
xor
cwtl
push
pushf
repnz
ret
push
loope
cmc
inc
cli
popf
bound
push
jo
stc
jo
popa
andl
ljmp
icebp
xchg
pushf
and
shl
dec
pop
jnp
adc
push
fdivs
pop
rdmsr
jmp
mov
push
mov
loope
jns
xorl
push
add
mov
cs
loopne
cwtl
in
cmp
test
cmc
ficompl
rcr
js
sub
or
aam
lock
insb
and
in
jnp
pushf
hlt
nop
adc
jge
popf
adcl
push
mov
notl
scas
xchg
repnz
mull
mov
jecxz
cmp
test
lahf
inc
les
dec
mov
inc
addl
cltd
mov
inc
mov
pop
cmp
mov
xlat
inc
inc
aad
ret
pop
out
sti
add
out
mov
sbb
adcb
lret
add
dec
repnz
push
movsl
ficoml
inc
lcall
add
xchg
insl
inc
jge
scas
pop
push
xchg
pop
repnz
mov
cs
pushl
movq
or
jnp
add
sahf
jne
push
scas
or
inc
inc
mov
mov
mov
sbb
subb
sbb
mov
mov
add
movsb
insl
xchg
pop
call
mov
data16
mov
xchg
cltd
icebp
sub
mov
mov
movsl
in
sti
mov
icebp
mov
test
es
sbb
and
adc
outsb
push
fxch
fs
aam
inc
cmp
add
in
test
test
lea
in
inc
mov
cmp
test
scas
add
outsl
out
jl
call
and
jne
push
scas
adc
xor
xor
orb
outsb
mov
sbb
movb
and
inc
mov
fcoml
jo
sbb
lcall
fmuls
inc
cmp
sti
cmp
repnz
add
adc
sbb
psrlq
sub
cmp
add
stc
addb
lds
or
mov
and
cwtl
push
lcall
adc
push
mov
adc
rorb
iret
sbb
sbb
sbb
adc
xchg
cmp
les
test
sub
sub
sbb
clc
mov
xor
sbb
jo
xchg
lods
lret
mov
lea
insl
cmp
movsb
scas
push
call
inc
leave
mov
daa
negb
cltd
or
sbb
add
lds
add
mov
repz
jle
insl
pop
out
pop
cli
out
es
adc
fmul
jne
sahf
shl
ret
mov
xchg
sub
mov
outsb
or
rolb
sub
ss
or
sbb
out
ja
in
out
cmp
lock
push
mov
shll
adc
pop
cmp
in
dec
adc
pop
pop
push
xlat
inc
cs
mov
or
sub
out
jo
xchg
cmp
cmpsb
enter
je
pusha
xchg
xchg
dec
ror
and
mov
test
adc
or
pop
jl
mov
adc
imul
rorl
clc
mov
dec
fstpl
inc
std
cli
scas
xchg
mov
xchg
mov
or
orl
aas
sbbb
sbb
pop
fs
addr16
mov
iret
out
cmp
in
mov
inc
fdiv
insl
das
cmp
clc
leave
jb
fs
cwtl
idivb
fnsave
cld
insb
orb
cmp
xor
push
mov
shr
scas
lcall
out
pop
push
dec
push
jp
push
sbb
dec
cmp
outsb
ficompl
ljmp
stos
out
pop
push
dec
push
jp
push
sbb
dec
cmp
outsb
ficompl
ljmp
stos
out
pop
dec
push
jp
push
sbb
dec
cmp
outsb
fistpl
ljmp
jle
out
pop
loope
movsb
sarb
push
insl
xorb
lock
movsb
data16
les
xchg
jno
push
mov
mov
out
testb
leave
cmpsb
adc
add
hlt
push
in
aam
les
mov
movsb
es
ss
je
fs
testb
and
adc
add
push
push
and
jbe
push
test
in
es
ss
je
inc
xchg
xor
in
in
fbld
mov
movsl
xchg
mov
int
mov
fwait
in
push
icebp
scas
or
sbb
dec
stos
imull
cmp
mov
fidivrs
mov
sbb
xchg
jnp
lahf
out
mov
lea
xor
pop
les
fs
notb
mov
and
hlt
jno
movsl
shlb
outsb
mov
or
icebp
pop
test
stos
or
and
js
and
sbb
sub
movsl
ficoml
js
push
fidivs
imul
pop
inc
mov
jp
scas
sbb
adc
sti
popf
push
and
test
sbbb
clc
mov
test
les
jbe
push
mov
movsb
es
ss
je
int3
out
idivb
or
ss
xor
test
adc
dec
loope
ret
mov
mov
xchg
icebp
mov
add
dec
ret
pusha
insl
xor
aaa
test
out
mulb
jae
mov
mov
fwait
push
divb
repz
jno
ja
xchg
and
push
movsb
es
ss
je
fs
testb
and
adc
add
hlt
push
in
aam
les
mov
movsb
es
ss
je
fs
testb
and
adc
add
hlt
aaa
mov
test
sub
push
mov
fcmovb
push
std
ljmp
cld
imul
andb
mov
mov
inc
fstl
and
xchg
das
leave
add
jns
psrlw
fwait
nop
mov
movsl
fs
daa
sub
jno
or
jp
pop
ljmp
or
ret
push
ja
cmp
pop
mov
bnd
cwtl
test
in
sbb
lock
xchg
cltd
fs
jno
dec
add
jmp
inc
pop
mov
cmp
fcmovbe
xor
cmpl
scas
mov
imul
ret
dec
mov
fiaddl
enter
nop
aam
aad
rclb
mov
insl
sub
push
xlat
addr16
loop
mov
dec
loopne
or
rclb
cmp
pop
mov
xchg
and
push
jb
cmp
mov
sub
nop
sub
add
scas
clc
adc
sub
shlb
jg
fisttps
jns
cmovge
mov
jp
xchg
scas
mov
dec
jnp
inc
jne
std
popa
pop
add
iret
push
imul
iret
movsb
mov
scas
in
mov
insb
fisttpll
jg
or
pop
mov
jle
xchg
lods
notl
sbb
insb
outsl
lret
negb
sbb
add
loopne
ljmp
and
iret
data16
fistps
cmp
aad
rclb
movsb
jge
jecxz
mov
push
cmpsb
or
push
int3
jmp
outsl
push
xor
mov
mov
aaa
ret
mov
int3
out
pop
test
adc
xchg
gs
lods
fcomi
jns
daa
push
js
sbb
dec
and
in
fs
decb
aad
and
cltd
clc
faddl
arpl
insl
sarb
inc
cmp
out
xchg
int3
sub
out
scas
gs
shlb
out
jne
push
test
adc
ja
dec
into
jo
cli
mov
jo
add
push
std
jnp
mov
sahf
mov
gs
sub
push
sub
add
jle
lcall
adc
inc
out
cwtl
loope
jmp
lea
cltd
mov
cmp
shll
lods
add
push
in
decb
jp
dec
aam
rcl
out
in
push
jp
xor
or
stc
jle
lock
and
push
roll
ljmp
sub
xchg
mov
fbld
popf
cli
cmpl
inc
mov
or
in
sub
xlat
jae
int3
inc
subl
adc
mov
add
mov
lock
ds
rcl
out
outsb
inc
jo
pop
imul
scas
push
mov
das
sub
and
jecxz
pop
mul
inc
xchg
inc
push
int3
or
jno
loopne
out
dec
ret
add
sahf
mov
ror
out
cli
imul
push
and
gs
mov
pop
mov
in
pop
adc
cmp
pop
cmp
mov
adc
aad
add
jb
int3
stos
decl
cltd
push
je
push
mov
in
rcll
out
and
push
cmpsl
push
push
dec
jo
mov
les
mov
xor
jae
mov
mov
repz
push
sub
mov
push
pop
test
mov
movsb
pop
std
sub
cmp
lahf
daa
sub
in
jg
inc
sbb
cmc
jae
enter
insb
push
cltd
lret
scas
ret
fwait
dec
mov
xchg
std
xchg
inc
pop
cwtl
cmpsl
xchg
xchg
jb
nop
xor
sbb
int3
jmp
jbe
aaa
push
mov
mov
jb
pop
jo
aad
mov
xchg
and
push
mov
push
mov
imul
xor
in
pop
jno
or
sbbb
lret
fnstenv
cmpsb
mov
inc
in
jno
mov
cwtl
jp
push
pushf
jo
sbb
push
jae
cmp
imul
and
mov
xchg
dec
out
push
jmp
add
push
das
pop
sbb
push
mov
gs
xchg
inc
mov
sbb
bnd
out
mov
lods
lret
sbb
js
btr
or
xchg
jb
in
dec
mov
mov
pop
cmp
dec
mov
mov
int3
mov
scas
and
pop
dec
add
push
cmpsb
daa
pop
aad
fwait
dec
cmp
or
lods
loop
hlt
into
mov
mov
mov
or
sub
orl
fistpll
insl
dec
lods
ret
movsl
cmp
or
mov
out
push
jecxz
jb
xor
add
mov
mov
mov
loopne
ret
jg
pop
bound
jl
mov
js
insb
shlb
out
repz
push
mov
and
lret
jnp
sbb
into
negl
sub
in
mov
notl
enter
cmp
mov
add
mov
or
stc
inc
inc
icebp
inc
xor
jmp
ja
mov
cmp
inc
sbb
sub
clc
in
adc
lock
mov
dec
hlt
xchg
movsb
add
lods
cmp
sub
lods
pushf
xchg
aas
insl
adc
jbe,pn
or
jle
push
jmp
lret
cmp
cmp
cs
fstl
lods
add
out
push
add
test
inc
in
xor
cmc
push
pop
daa
ljmp
in
fdivrs
data16
int
pusha
and
mov
clc
cs
mov
and
jg
mov
mov
mov
push
and
cs
fnstenv
loop
xchg
xor
outsb
mov
mov
cwtl
and
or
fwait
ljmp
or
arpl
or
push
lods
or
push
mov
cmp
xor
mov
xchg
mov
test
pop
cltd
popa
xchg
movsl
mov
push
addb
jmp
cmp
mov
pushf
adc
ss
inc
test
inc
in
pop
iret
arpl
vsubsd
mov
test
dec
mov
and
xchg
insl
int
repz
cmp
add
pop
jl
xchg
lea
adc
or
fsubl
jle
or
in
bound
pusha
dec
xor
out
jg
in
xor
outsl
fdivp
mov
ret
xor
out
lods
cltd
mov
mov
jmp
outsb
dec
xchg
inc
enter
sub
data16
mov
mov
or
sub
loope
cmpsb
sbbb
js
shrl
scas
jl
into
movsl
xchg
inc
or
int3
cmc
mov
and
stos
loope
stos
lds
pop
insb
fsub
xchg
cltd
xchg
inc
add
mov
aaa
sbb
xor
lcall
sub
add
push
mov
pop
js
push
das
push
adc
stos
jle
negb
popa
incb
inc
addb
xchg
addr16
rcrl
out
xchg
jo
ja
and
js
clc
jo
outsb
xchg
repz
sub
mov
xchg
push
fs
int3
sbb
movsl
mov
cmp
cmovg
cmp
mov
ret
xor
sub
loopne
test
add
mov
add
stos
add
int
popa
or
xchg
inc
aam
sbb
es
pop
add
jbe
add
in
fsubs
push
rcrb
xor
ja
popf
xor
iret
xor
push
cli
cld
stos
movsl
in
push
lods
xchg
xor
jae
repnz
in
cwtl
mov
loope
jmp
xchg
jge
adc
push
lahf
bound
jecxz
aaa
inc
xchg
xor
cmpsl
aam
lods
fcompl
lahf
ja
adc
add
xchg
arpl
xchg
mov
ds
xchg
lret
mov
xchg
lret
out
pop
dec
jmp
xchg
test
jne
mov
outsb
push
or
pushf
mov
jo
movsb
or
mov
cli
lods
inc
xor
gs
pop
mov
add
xor
cmp
inc
or
aam
push
bound
inc
sub
and
lret
mov
stos
insb
mov
inc
xor
jmp
icebp
stos
mov
stos
rolb
addr16
idiv
or
fisubl
push
cmc
adc
jecxz
push
loope
jbe
sbb
adc
pop
das
dec
mov
xchg
jge
fsub
xor
sub
test
les
ja
in
repz
pop
bound
or
mov
jo
data16
jle
inc
subb
rorb
and
xchg
sbb
xchg
je
ss
cmpl
jle
adc
cmp
movsl
outsb
sbb
nop
loope
lret
fimuls
mov
mov
jae
testb
cmp
inc
pop
icebp
imul
lods
repz
and
mov
cld
rclb
ss
test
mov
popa
lret
cltd
inc
jle
loopne
pop
sub
int3
dec
pop
add
clc
or
je,pt
xor
and
and
fmull
js
aam
jns
inc
stos
call
add
popa
test
xchg
and
into
mov
pop
xchg
movsl
cmp
jmp
in
movsb
xchg
dec
in
and
ds
or
std
sub
add
shl
sbb
xchg
xlat
mov
lock
xchg
testl
and
xor
fwait
or
xchg
sub
cmp
shlb
mov
cmp
shll
imul
mov
ja
lret
mov
mov
xor
rcrb
cltd
pop
mov
sbb
or
lea
cmp
pcmpeqd
mov
xchg
pop
inc
cmpsl
cmp
imul
into
les
std
or
not
jge
out
adc
xlat
mov
roll
dec
icebp
mov
fs
mov
dec
js
mov
subb
jae
neg
mov
and
xchg
mov
mov
xlat
decl
outsl
mov
scas
push
into
in
fdivrs
mov
sbb
std
pusha
adc
nop
jle
in
cmp
push
orl
mov
and
push
movsb
test
jno
ds
jle
es
bound
push
pop
xchg
test
mov
mov
sub
mov
repnz
cli
mov
das
sbbb
mov
cmpsl
or
pop
lahf
imul
in
xchg
orb
push
scas
cmp
and
je
or
int3
jmp
pop
enter
lods
testl
jns
mov
out
movsl
fs
imul
inc
jae
or
and
scas
mov
je
pop
adc
aam
fadd
sbbb
lcall
push
pop
cli
jle
jae
add
mov
mov
in
imul
inc
add
or
ret
das
or
push
mov
add
out
sbb
fmul
cmp
mov
aas
cmpsb
mov
fcoms
sub
lahf
movhps
inc
hlt
jns
out
sarb
into
sbb
ljmp
aaa
cmp
adc
push
rcll
cli
xchg
jge
push
ss
ret
cmpl
xchg
repnz
cmp
pop
aad
xchg
dec
mov
jg
aaa
fiadds
pop
nop
pop
xor
addb
rorb
adc
icebp
inc
pop
decl
push
xlat
stos
add
stos
sub
mov
xor
sbb
stos
fidivl
ficoml
lret
sbb
out
dec
leave
sbbl
adc
inc
cmp
mov
insb
std
into
dec
gs
mov
lret
xchg
repnz
popa
stos
adc
fmul
push
push
test
mov
loope
jb
addr16
int
mov
adc
xlat
cmp
jb
jge
fmull
cmp
fistl
cmp
loope
fwait
in
cmc
or
push
ljmp
jl
mov
inc
ret
in
int3
ja
pop
sub
enter
jne
mov
xchg
pop
push
dec
shlb
cmc
outsb
inc
add
in
les
lods
add
dec
dec
sbb
sbb
mov
cli
xor
lahf
pop
sarb
out
lahf
add
dec
cmpsb
aaa
or
shlb
frstor
out
data16
inc
xchg
cmp
decb
aad
ljmp
test
dec
sub
clc
sbb
ss
xchg
push
xchg
imul
push
mov
and
imul
cwtl
sbb
rcrl
pop
out
fwait
xchg
fs
cltd
push
mov
mov
daa
popa
pop
jbe
stc
test
pop
jno
std
sbbl
mov
nop
push
push
ds
mov
sti
push
or
enter
in
mov
mov
lock
jno
lret
push
push
add
ds
sbb
subb
mov
fisttpll
mov
push
mov
mov
jge
push
cmp
sbb
xor
rorl
jno
pop
push
das
mov
add
mov
jge
jecxz
xor
mov
jmp
sub
les
lret
and
add
push
bound
cmpsb
push
inc
fidivl
push
nop
testb
jb
fs
lcall
into
lods
inc
push
sbb
call
fcmovnb
lcall
push
adc
add
loope
or
cmp
and
jp
xchg
test
mov
push
adc
aad
and
cmc
or
push
inc
loopne
mov
and
dec
inc
icebp
sub
sahf
inc
scas
xchg
mov
stos
push
fs
ror
out
cmp
dec
sub
jecxz
shll
dec
fdivp
push
jbe
lcall
arpl
shll
xchg
sbb
xor
mov
aas
or
test
adcl
mov
mov
shl
enter
out
ss
mov
fcomps
add
dec
repnz
dec
pop
or
add
lds
popa
jbe
push
xchg
ret
push
add
add
pop
mov
loop
xchg
shll
stos
jnp
mov
push
stc
pushf
push
sub
xchg
fidivs
aam
adc
iret
js
or
daa
adc
cmp
inc
mulb
pop
cwtl
sbb
cltd
imul
add
jg
xchg
mov
mov
test
mov
aas
mov
in
dec
xor
add
movl
push
icebp
testl
add
jne
push
imul
mov
ljmp
or
cld
adc
or
or
push
mov
inc
icebp
xchg
outsb
cmp
fsubrs
or
jmp
pop
and
pop
and
xchg
add
add
inc
stos
inc
jl
adc
mov
inc
xor
xchg
aam
aas
lcall
imulb
push
push
into
lcall
inc
push
pop
mov
cmpsb
int
and
daa
mov
xchg
add
push
aaa
dec
pop
lcall
cmpsb
mov
pop
das
mov
push
inc
in
in
sbb
movsb
pop
xor
imul
dec
out
inc
fincstp
mov
jp
push
ror
adc
ret
ret
cltd
mov
push
mov
pop
inc
addr16
push
bound
imul
mov
outsl
or
mov
outsl
dec
enter
mov
fimull
mov
xchg
and
fldenv
pop
mov
aaa
xor
sbb
repnz
xchg
sbb
pusha
pop
jmp
xchg
fs
arpl
xchg
mov
fwait
fwait
mov
jp
pop
mov
xchg
cmpsb
or
test
dec
scas
rcr
cmpsl
ljmp
jle
loop
cmp
pop
sub
mov
popl
and
lods
xor
pop
or
aaa
rorb
cmp
std
leave
lcall
inc
mov
mov
xchg
jae
sbbb
inc
push
dec
out
jb
inc
or
insb
dec
mov
xchg
fcoml
sbb
add
xchg
inc
ret
mov
addr16
mov
dec
pop
fwait
push
jecxz
bound
xchg
or
dec
adc
xor
xchg
scas
jp
out
mov
movsl
arpl
push
popa
ljmp
lods
call
and
das
cld
inc
ret
sub
cltd
sar
lret
add
push
pop
push
scas
test
test
jae
mov
mov
pop
push
and
shrb
push
xor
jge
dec
ds
mov
sbbl
clc
in
adc
insl
addr16
push
lea
shl
add
add
stc
xor
lret
dec
out
gs
je
popa
rorl
push
jecxz
fsubrl
lods
stos
test
adc
sbbb
popa
fadds
adcb
jge
lcall
mov
shll
cld
pusha
repz
out
inc
loopne
or
xor
loopne
insl
test
clc
jbe
cld
enter
inc
and
mov
jbe
xchg
sahf
adc
jle
cmp
arpl
adc
lods
jne
jge
and
outsl
push
mov
shll
insl
adc
sub
jp
cmpsl
sub
and
loopne
les
das
leave
pop
dec
and
push
fadds
insl
int3
pusha
aaa
inc
in
outsl
repz
std
imul
ds
dec
adc
push
push
xchg
jge
jae
fidivl
xor
je
xchg
dec
add
cltd
or
test
or
clc
jmp
out
xor
fsts
or
xor
imul
cmc
inc
xchg
call
jae
push
jne
mov
test
or
int
sbb
stos
das
add
ljmp
xor
out
daa
adc
test
arpl
aad
xor
xchg
lds
hlt
sub
daa
filds
push
dec
mov
je
fisubs
inc
xor
data16
jg
xorl
int3
or
in
xor
jo,pn
jbe
fs
jns
dec
dec
adc
xchg
xchg
arpl
jns
jno
hlt
or
cmp
notrack
jb
cmp
pop
nop
pushf
or
aam
xchg
and
call
mov
lods
xor
inc
in
es
mov
adc
out
dec
js
sub
sub
mov
je
out
movsl
cwtl
test
pop
push
popf
addl
lahf
adc
pop
pushf
jg
out
mov
add
popf
shlb
sbb
jae
enter
shrb
xchg
push
mov
adc
xor
xor
leave
insb
or
sbbb
mov
xchg
ljmp
pop
jno
or
sub
js
push
mov
je
das
cmp
fimuls
push
outsb
sarl
scas
push
jle
aas
nop
jno
push
mov
cmp
mov
in
xor
mov
cmp
push
push
lds
adc
xchg
cmp
pop
pushf
xchg
aaa
cs
add
fistpl
cmp
insb
mov
scas
lret
aaa
xor
add
cwtl
sete
and
jnp
call
xor
pop
cmp
and
push
stc
into
lods
outsb
es
sbb
dec
ror
add
lret
test
std
rcr
ja
cmp
rorb
xor
je
pop
jge
xor
test
sbb
out
fstpl
sub
popa
fsubrp
xchg
aas
inc
adc
shll
push
outsl
ss
clc
movl
cmp
sbb
imulb
ja
into
adc
sbb
mov
xlat
inc
mov
aam
fwait
jp
scas
in
mov
dec
xor
test
sub
jno
scas
pop
mov
in
loope
jl
xchg
and
ljmp
enter
sub
push
orl
mov
arpl
jb
mov
dec
mov
cwtl
cmp
shlb
or
lock
enter
gs
add
push
push
and
insb
jp,pt
enter
popa
sti
cmp
cmpsb
sbb
sti
mov
jo
cmc
adc
inc
adc
les
dec
and
scas
add
mov
pop
sub
testb
fsubl
insb
fld
shr
das
sti
outsb
mov
dec
das
shll
or
mov
cltd
sbb
pop
cmp
lods
pop
inc
enter
adc
cmp
mov
xor
test
dec
add
loope
enter
testl
jmp
push
mov
pop
movsl
mov
push
cmp
into
test
cmp
xchg
cltd
jae
cmp
jecxz
push
push
mov
pop
fcoms
mov
lds
dec
fsubr
pop
std
jno
mov
xor
fldt
cli
xchg
outsb
imul
xchg
jo
cmp
lods
fistl
mov
leave
addr16
sub
mov
push
fldl
or
rclb
in
add
jo
aas
out
cmpsb
movsb
lds
sub
cmp
stos
scas
dec
xabort
jbe
jae
adc
aas
outsb
icebp
or
scas
and
mov
hlt
cs
cmpsl
in
shll
push
mov
movsb
es
ss
je
fs
testb
and
adc
add
hlt
push
in
aam
les
mov
movsb
es
ss
je
fs
testb
and
adc
add
lock
ljmp
pop
iret
es
ss
jne
pusha
out
testl
sbb
push
add
jbe
push
mov
movsb
cmpsb
adc
inc
cmp
divb
icebp
dec
push
pop
pop
insb
dec
jl
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
xchg
lea
mov
sub
adc
je
jmp
push
dec
inc
mov
xchg
lea
aam
mov
cmp
add
push
pop
pop
push
dec
inc
movsb
lods
mov
test
cld
fisubs
push
pop
inc
insl
jne
jge
add
add
sbb
aam
ret
icebp
sti
jecxz
cmp
and
mov
adc
jne
insb
out
test
push
cs
xor
xlat
test
pop
pop
sub
mov
inc
repz
sub
movsb
mov
inc
sub
outsb
cmpsl
lret
fstpt
jg
iret
push
out
cltd
push
shlb
rcll
add
test
hlt
and
sub
sub
repnz
stos
dec
push
in
xor
pop
adc
lock
lods
cmp
in
std
mov
mov
dec
dec
rcr
insb
jb
add
inc
cs
xchg
ret
dec
pusha
jmp
sti
cmp
pop
push
dec
inc
je
mov
popf
lea
in
aam
frstor
xor
sbb
inc
dec
dec
inc
shll
loope
testb
cmp
adc
jge
or
cmp
sub
int
out
jmp
hlt
in
stos
frstor
dec
inc
sbb
add
sub
sub
fdivs
shll
int
cmp
adc
add
je
fs
push
dec
inc
mov
xchg
lea
aam
les
adc
add
je
fs
push
dec
inc
mov
adc
xchg
xor
pusha
cmc
mov
push
sub
cmpsb
dec
lcall
cmp
sti
inc
jne
jbe
xchg
popa
inc
cs
insb
outsb
push
or
dec
lock
popa
xor
outsl
xor
mov
or
pop
mov
test
ds
mov
add
addb
popf
mov
adc
cld
mov
xor
and
xor
pop
push
inc
mov
xchg
jae
sub
roll
xor
push
add
ds
into
cld
xor
lcall
sbb
sub
dec
xchg
mov
jg
fldcw
add
js
arpl
jmp
inc
ret
inc
inc
push
daa
dec
xchg
mov
xor
ja
fidivl
rcll
ss
push
sbb
pop
clc
cmp
fwait
jb
adc
cs
enter
sti
sub
sbb
or
int3
push
xor
fdiv
in
aaa
push
in
push
and
jmp
stc
daa
mov
cld
cmp
xor
inc
mov
iret
sbb
and
push
adc
popa
test
xchg
xor
lahf
dec
int
push
out
mov
mov
mov
mov
add
in
push
cwtl
fsubs
ficoml
jbe
xlat
fsubrs
push
test
cmp
fwait
inc
iret
insl
mov
scas
xchg
insl
ret
inc
rorb
stos
lcall
pop
xor
xchg
inc
int
push
mov
enter
sub
push
jmp
lret
mov
daa
mov
push
and
mov
fs
lock
mov
push
mov
aas
int3
cmp
sarb
mov
in
sbb
fs
xchg
fdivs
mov
in
sbb
and
aaa
jmp
fbld
xor
pop
ret
pop
push
cwtl
imull
in
mov
mov
sbb
dec
shrl
rclb
fistps
loop
cmp
pop
loop
pop
aad
dec
jbe
out
cwtl
cmp
shll
xor
xchg
dec
sbb
nop
inc
xchg
mov
iret
xlat
cltd
insb
roll
push
test
cwtl
insl
or
push
loope
xchg
mov
enter
jns
jmp
fwait
imul
leave
adc
cmp
lcall
cmpsl
into
sbb
dec
hlt
pushf
push
mov
mov
xchg
xor
fwait
mov
dec
lret
inc
gs
push
sbb
xchg
ret
mov
aas
shrb
adcl
rolb
fdivl
jge
aam
jp
dec
data16
ret
fbld
mov
sarl
xchg
push
lea
and
inc
fbstp
cmp
or
sbb
push
ffree
vmovlps
adc
inc
flds
fstps
clc
fdivr
or
cmpl
push
adc
sub
shrl
in
ficoms
jb
mov
jbe
in
mov
mov
cmp
push
popa
scas
inc
push
add
pop
lret
out
sub
in
sub
xchg
sahf
mov
and
and
mov
ds
js
inc
insl
cmpsl
cmpsl
mov
inc
sub
xor
hlt
add
scas
divb
ret
jp
mov
popf
nop
push
adc
lods
jnp
jl
addr16
cld
lods
fidivrl
push
cwtl
xchg
lea
and
fsubrs
pop
out
fisubl
fwait
cmc
adc
push
lahf
pop
shl
lahf
test
lret
popf
ds
jae
sub
mov
andb
jl
and
fcompl
push
inc
cltd
popa
adc
inc
mov
and
push
add
in
lret
in
push
dec
js
lds
push
cli
mov
stos
xor
inc
cld
sbb
mov
jbe
or
or
je
push
mov
xor
in
push
aaa
iret
out
xor
sbb
and
mov
jp
and
outsl
pop
mov
xchg
mov
push
outsl
push
dec
mul
cmp
pop
out
add
andb
fisttpll
lds
xchg
cmp
mov
fs
rol
fidivs
repnz
xlat
jmp
sub
lcall
fisubrs
xor
das
bound
and
xchg
pop
jecxz
sahf
fidivl
or
cmp
lahf
xchg
mov
mov
and
or
and
inc
or
mov
jb
addr16
sbb
dec
popa
mov
mov
je
jns
sub
ret
lea
pop
scas
push
jo
call
and
push
mov
loope
mov
mov
push
scas
mov
scas
sti
pop
xchg
mov
mov
mov
mov
sub
stos
push
lea
rol
xor
enter
or
cmp
shll
je
test
into
mov
andl
mov
das
cmp
cs
lahf
cmc
into
and
test
repz
xchg
cmp
xchg
in
lods
adc
test
iret
icebp
mov
flds
aam
mov
dec
out
mov
cmpsb
push
jl
cmp
inc
or
fs
mov
loope
mov
mov
jbe
xchg
and
and
xchg
dec
unpcklps
dec
daa
loop
in
mov
mov
icebp
push
mov
test
movntps
test
andl
dec
jmp
mov
fsubrl
push
mov
lods
dec
orb
insb
adc
addr16
aam
dec
push
movsb
sbb
dec
push
mov
dec
cmc
stos
loop
and
jne
outsl
inc
test
jp
lret
sti
sub
imul
fldenv
dec
sbb
mov
iret
lods
cli
mov
pop
add
loopne
sarl
xor
push
scas
rorb
roll
push
in
xor
js
out
ss
sbb
mov
clc
ficompl
ja
cmp
mov
inc
mov
outsb
sbb
ret
and
mov
xor
xor
sbb
out
fildl
imul
cld
push
pop
sbb
popf
mov
in
icebp
mov
or
pop
xchg
pop
push
jle
xchg
jg
jnp
test
cld
add
test
adc
cmp
and
or
mov
rolb
jne
fimull
je
push
icebp
xor
mov
push
movsl
aam
xchg
shlb
scas
sti
mov
repnz
clc
cli
inc
outsb
jge
mov
clc
mov
inc
push
xchg
enter
adc
sahf
out
pop
pop
ss
cmpsl
xchg
sub
sarl
lret
loopne
push
out
or
mov
test
cs
cmp
pop
insl
mov
popf
ror
pusha
inc
rorl
mov
out
sbb
pop
xlat
jge
fs
jge
insl
loope
int3
movsl
add
or
sub
pop
fs
or
pop
int3
inc
dec
stos
lds
adc
adcb
mov
ficoml
add
hlt
cmp
lods
mov
hlt
inc
insb
xchg
lret
jp
mov
cmp
popa
pop
inc
or
jecxz
aam
sbb
pop
dec
gs
test
xchg
out
rorb
and
sub
mov
fbld
in
loope
loope
sub
or
cli
fdivs
mov
inc
mov
sbb
xor
or
aaa
shrl
xlat
xchg
mov
mov
sarb
inc
mov
das
sbb
jl
lret
or
mov
enter
adc
add
jbe
fidivs
stos
jno
lods
push
or
dec
mov
push
fisttpll
mov
and
mov
into
leave
push
fldcw
mov
fs
pop
out
push
outsl
inc
ret
xchg
pop
and
and
jge
roll
negl
mov
adc
xlat
pusha
dec
mov
mov
subl
notl
push
lea
out
cmpsl
pop
sub
and
into
out
xor
jmp
xchg
adc
xor
inc
shlb
out
mov
adc
xchg
icebp
mov
repnz
subb
mov
imul
adc
push
into
push
xchg
cmp
cld
and
out
cmc
mov
pop
xor
pop
ja
xchg
adc
mov
out
xchg
dec
xchg
adc
mov
cmpsb
adc
pop
js
mov
fidivs
mov
mov
enter
daa
dec
adc
sbb
or
push
push
insb
or
mov
or
mov
fstps
sub
repnz
popf
jle
xor
scas
or
xchg
inc
add
mov
wrmsr
dec
push
gs
add
int
xor
pop
mov
pop
loop
pop
cmp
inc
or
or
imul
adc
add
mov
movsl
pop
jb
add
lock
cmp
sbb
mov
jp
jmp
lret
ret
insl
aas
loope
or
xchg
jnp
dec
loope
xchg
dec
inc
cmpsl
loopne
mov
insl
push
sub
out
mov
cmp
pop
hlt
pushf
add
mov
sbb
dec
rorl
mov
mov
fsubl
jecxz
cmp
sub
imul
divl
icebp
jns
movsl
cmpsl
sarl
ds
std
insb
gs
adc
mov
decl
bound
rcll
push
dec
pop
push
int
fbld
mov
fsubrs
jae
cmc
jae
movsl
imul
ret
mov
mulb
addr16
rorb
sub
pop
sahf
mov
mov
pop
fstl
mov
das
cmp
sarb
sbb
and
ja
xchg
into
leave
adcl
sbb
js
inc
jb
loope
das
pop
sub
cmp
mov
call
inc
inc
pop
negb
rorl
push
scas
xchg
pusha
add
mov
mov
push
inc
hlt
and
aam
mov
lods
jmp
ret
or
inc
xchg
inc
lock
mov
lods
inc
inc
xchg
sbb
jo
mov
inc
dec
mov
jmp
and
fs
xchg
pusha
aas
adc
dec
adc
stos
and
or
mov
andb
sbb
scas
mov
xchg
cmpsl
mov
jl
jl
popf
pop
mov
sbb
fldcw
mulb
mov
xlat
sahf
jns
or
je
and
lds
test
ss
lock
mov
push
addl
int3
mov
out
in
mov
pop
adc
je
sahf
jno
or
out
cmp
xor
dec
pop
cmc
sbb
inc
mov
movsb
test
pop
sub
pop
sub
jmp
sti
call
jmp
outsb
push
cltd
mov
pop
or
aad
pop
xor
mov
cmp
add
sub
push
dec
mov
add
inc
imul
or
rcr
mov
dec
pop
xchg
insl
out
rorb
cmc
dec
push
jl
and
or
test
push
fildl
shll
xchg
bound
jge
push
pop
rorl
xchg
mov
sarb
imul
and
mov
lock
das
movsb
or
inc
mov
leave
imul
or
rol
mov
xlat
mov
add
les
dec
push
dec
mov
mov
and
stc
in
loopne
insb
fs
out
mov
jg
dec
sub
sub
inc
clc
adc
push
or
lods
es
pop
and
push
fnstcw
jno
pop
or
ret
inc
and
pop
adc
mov
sub
loope
je
and
mov
cmpsb
xchg
mov
jae
aas
in
xchg
lock
jbe
push
in
and
out
sub
sbbl
sub
add
fisubrs
icebp
add
mov
fidivs
xchg
scas
call
dec
dec
sbb
xor
pop
out
cmpsb
add
xor
mov
inc
adc
sarl
xor
scas
into
ds
std
aam
rorb
inc
ja
and
and
test
scas
stos
orb
dec
in
jne
adc
jmp
xor
jb
or
cmpsb
rorb
fbld
mov
gs
push
xor
jmp
mov
push
fisubrs
fdecstp
jg
loope
and
addr16
xchg
jge
clc
xchg
mov
dec
sbb
lcall
jmp
mov
jb
inc
aas
fcomp
mov
int
aaa
cmc
sub
dec
and
mov
sub
inc
xchg
xchg
sahf
call
sub
cmp
add
fisubrl
fcomps
dec
sahf
rolb
hlt
pop
or
mov
ja
sub
mov
mov
jae
out
push
in
je
push
dec
mov
dec
inc
jo
fistpl
mov
sub
or
fildl
adc
inc
sbb
int3
xchg
push
push
stos
lock
out
ds
pusha
cmp
sti
aam
mov
cmp
je
decl
push
outsl
cmpsb
add
xor
adc
push
jmp
cmc
sti
adc
mov
mov
pop
mov
inc
cmp
dec
sbbb
sbbl
ja
jo
jmp
in
inc
add
daa
cmpsl
xor
hlt
xchg
jecxz
movsb
mov
repnz
jb
into
stos
pop
add
push
icebp
sub
mov
mov
push
stos
sub
xchg
jne
test
lea
outsl
mov
clc
jae
out
into
add
ljmp
dec
in
and
cmp
push
or
sub
hlt
cmpsb
pop
push
push
cmp
cmp
lret
sti
mov
repz
mov
outsb
lea
adc
push
push
and
inc
sub
aas
xlat
outsl
push
rorl
cs
cmp
pop
inc
outsl
lcall
xchg
aas
inc
push
ror
inc
cmpsl
cs
mov
pop
sub
sub
into
in
cmp
out
movsl
pop
aaa
jno
xchg
inc
lret
mov
jecxz
sub
fsubl
int3
mov
push
mov
stc
sti
fcompl
mov
inc
sbb
popf
add
stos
push
adc
hlt
stos
dec
jne
mov
lret
and
in
shll
stos
sbb
fldenv
es
dec
xor
popf
push
mov
push
mov
repz
jno
je
push
dec
mov
in
xor
push
pushf
test
sub
xor
push
or
and
dec
or
and
jae
add
jnp
int3
bound
mov
in
mov
jle
jecxz
or
push
and
mov
and
cmp
push
movsb
add
pop
pop
jne
repz
insb
aad
xor
sbb
test
or
fildl
dec
ficompl
adc
mov
das
jbe
adcb
repnz
mov
fs
add
push
in
sub
inc
ret
jno
gs
and
jo
inc
aas
iret
lret
push
lea
stos
inc
or
aas
xchg
mov
cmpsl
pop
ljmp
je
pop
and
push
xchg
adc
sbb
jb
ss
pushf
mov
aam
daa
fdivs
fisttpll
inc
mov
push
pop
dec
bnd
sub
ficoms
cmc
jo
popf
arpl
idiv
mov
cmpsl
cli
mov
stc
cmp
xorb
or
into
pop
mov
mov
leave
negl
pushf
loop
jno
or
call
rolb
jl
ret
jl
sub
icebp
addr16
fdiv
pop
loopne
test
inc
pop
dec
sub
cmp
in
scas
mov
mov
mov
xchg
movsl
mov
lea
sub
jbe
mov
outsb
std
pop
stos
sbb
out
in
jl
ret
ret
jecxz
test
mov
stc
sbb
bound
sub
push
add
push
lcall
stc
and
mov
test
lcall
mov
push
mov
scas
iret
leave
in
pop
mov
imul
or
mov
lock
xchg
xlat
lods
and
xchg
jmp
push
jge
fistps
mov
lahf
lcall
jno
xchg
outsb
imull
fcompp
mov
test
enter
add
aad
lcall
fstps
lods
shl
xchg
daa
into
mov
insl
ds
jmp
inc
mov
mov
xor
push
aaa
push
les
push
lds
push
jecxz
leave
jge
jae
lcall
pushf
sub
lods
xchg
cpuid
cld
bnd
mov
dec
ljmp
arpl
jp
sbb
and
jb
jecxz
hlt
out
dec
int
out
bound
sbb
mov
xchg
add
jo
fs
xor
cli
rorb
shll
xchg
jbe
int
xor
push
stos
out
lods
dec
test
pop
lds
cmp
or
out
ficompl
jne
rcrl
ret
cmp
pop
push
jae
js
roll
gs
data16
rcrb
cmpsb
mov
sbb
sub
shlb
inc
imull
xchg
call
fsubr
inc
insl
xlat
test
xor
js
aad
dec
xchg
fistps
dec
icebp
sbb
xor
push
xchg
cmpsl
add
mov
sbb
pop
out
xchg
cmpsb
inc
cmp
sti
cmp
or
ds
fildll
sub
aad
jle
mov
pop
stos
jmp
pop
stc
or
loopne
fwait
inc
loop
mov
aam
mov
or
pushf
fistpl
mov
mov
js
mov
adc
sahf
and
mov
and
in
fldz
mov
or
xchg
dec
lea
jmp
aad
stc
loop
out
les
movsb
leave
pop
sub
jne
xor
rcll
mov
cmp
jbe
ret
cltd
push
outsl
mov
cvtps2pi
fldenv
mov
or
xor
push
mov
xor
sarl
test
sub
jmp
xor
cmp
out
mov
push
ret
fisubrl
mov
and
lds
cmpl
fs
stos
dec
stos
cmp
cld
or
mov
push
sbb
stc
jl
shll
cmp
or
adc
pop
loop
int
ficomps
or
fwait
ja
adc
pop
adc
lret
push
and
js
push
and
adc
mov
jecxz
xor
out
add
push
mov
xchg
sti
add
nop
adc
les
mov
mov
sahf
cmc
mov
into
dec
scas
fists
nop
or
inc
xor
lcall
movsb
or
fs
mov
and
mov
popa
in
pop
adc
mov
mov
cmp
jns
sahf
dec
js
xor
mov
ret
or
jns
js
push
sbb
andb
dec
orl
ret
fwait
xlat
xchg
xchg
lcall
xchg
cmp
add
mov
inc
inc
dec
xchg
or
push
out
test
das
nop
mov
sub
cmp
jno
adc
sbbl
notl
adc
push
mov
xchg
inc
adc
dec
jo
add
mov
pusha
mov
mov
das
out
iret
mov
ret
jbe
mov
icebp
xchg
sahf
cmc
insl
mov
ret
and
fidivrl
fistps
lods
out
xchg
outsl
clc
pop
movsb
push
sbb
into
and
jmp
fiaddl
dec
push
mov
mov
lock
fsts
iret
push
cld
adc
aad
pusha
imul
imul
push
inc
lods
xor
cwtl
leave
ds
fmul
pusha
push
les
hlt
and
leave
pop
cmp
loop
jp
xchg
sub
dec
push
in
scas
std
pop
mov
push
cmp
fs
mov
xchg
dec
add
jge
push
aas
lret
inc
cmp
ret
jecxz
movsl
out
sbbb
adc
imul
test
inc
js
stos
repnz
fsubrl
fldl
xchg
push
sahf
xor
mov
pop
fstl
push
adc
enter
xchg
dec
ja
fildll
mov
and
lock
cld
outsb
scas
repnz
cmp
mov
jecxz
cmp
addr16
sbb
mov
xor
jo
push
je
push
imul
mov
xchg
shll
cmpsl
inc
ficomps
mov
push
xorb
ficoms
pusha
arpl
pop
fdivl
int3
xor
je
dec
jge
xchg
das
jl
mov
mov
call
or
or
packsswb
jnp
cli
xor
scas
xchg
stc
and
fiadds
data16
hlt
test
and
xchg
sub
inc
scas
lods
enter
orl
mov
mov
sbb
adc
or
out
out
outsl
xor
rorb
xor
xchg
scas
or
mov
imul
inc
ror
add
xlat
mov
cmp
cmp
and
cmp
pop
and
pop
pop
decl
fldenv
in
mov
and
lods
repz
outsl
arpl
sbbl
je
cmpsl
xor
mov
pop
call
jno
adc
call
movsb
xchg
xchg
lea
aam
les
adc
add
je
fs
push
dec
inc
mov
xchg
lea
aam
les
adc
add
je
fs
push
dec
inc
mov
xchg
lea
aam
les
adc
add
insb
fs
push
dec
inc
mov
nop
lea
aam
add
xor
mov
cld
in
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
or
out
add
jbe
or
cs
and
xchg
nop
and
mulb
cmpsb
lock
dec
adc
data16
push
push
push
inc
es
pusha
xchg
nop
or
mulb
cmpsb
lock
pushf
adc
add
xor
inc
or
pusha
scas
mov
mov
rcll
jbe
and
lea
xor
aad
mov
negl
rcrl
jecxz
xchg
dec
sbb
inc
pop
and
fists
jmp
push
sbb
pop
dec
daa
lock
add
testb
lret
push
ja
loope
push
sub
mov
pusha
jns
sbb
push
psubsw
add
add
xor
xor
push
jmp
xor
mov
or
adcl
lea
push
xchg
mov
push
aad
sbbl
sbb
mov
xchg
push
clc
cltd
xor
push
mov
iret
in
outsl
cs
out
mulb
jecxz
cmpsb
loopne
adc
data16
and
push
push
inc
es
pusha
xor
inc
cmpb
call
shlb
and
and
pushw
add
cld
xchg
jmp
out
mov
icebp
test
fimuls
xor
outsb
dec
pop
inc
pusha
aad
in
and
int3
cmc
mov
testl
inc
cmp
inc
es
pusha
nop
and
mulb
cmpsb
lock
inc
adc
data16
push
push
push
inc
es
pusha
nop
and
mulb
cmpsb
lock
inc
adc
icebp
dec
xchg
xor
in
leave
lds
push
stc
inc
jae
test
mov
ss
cmp
push
mov
mov
mov
mov
mov
inc
hlt
scas
adc
fwait
xchg
pop
loop
dec
loopne
lret
mov
sbb
orb
xor
or
mov
repz
test
sti
out
js
adc
add
dec
cli
mov
cmp
fnstenv
jmp
test
ret
es
dec
test
in
call
mov
push
ja
sbb
out
roll
mov
loop
jg
inc
or
imul
mov
repz
jne
testb
daa
imul
mov
mov
inc
xchg
sbb
jmp
jle
pop
into
or
repz
sbb
imul
mov
test
xor
xor
fwait
leave
je
inc
adc
cmc
or
mov
test
add
ds
push
mov
fwait
lods
and
xor
pop
xchg
sub
mov
jecxz
mov
iret
push
adc
rclb
inc
test
push
shll
mov
xchg
test
inc
jns
xchg
and
xlat
cld
or
mov
out
xor
sub
lahf
lea
push
aas
in
xchg
mov
fsubl
in
fbstp
js
repnz
in
sti
ja
fisubrs
xchg
repnz
xchg
sbb
and
mov
daa
pop
cld
subb
and
std
push
push
fbstp
inc
mov
dec
dec
scas
add
pop
xor
push
adcl
cmp
dec
cwtl
lods
jl
adc
push
dec
and
jmp
cs
or
setp
iret
int
insl
mov
rcrb
add
jne
mov
pop
mov
pop
mov
popw
nop
lcall
test
inc
frndint
and
pop
dec
mov
leave
mov
fldl
xor
arpl
or
leave
loopne
and
aaa
mov
mov
push
loop
inc
stos
jg
ljmp
push
std
lods
leave
hlt
xor
mov
dec
int3
cld
sbb
pushw
jg
xchg
cmp
idiv
cmp
xor
push
cmp
mov
adc
xor
sub
xchg
xor
pop
xchg
dec
pop
xchg
in
cmp
adc
xchg
adc
nop
xchg
cmp
rcrb
pop
sub
iret
repnz
sub
ficoml
jmp
aas
scas
imul
xor
cmpsb
imul
adc
or
push
stos
jae
inc
iret
pusha
add
adc
or
mov
adc
xchg
nop
mov
and
addr16
pop
adc
and
mov
or
repnz
xor
sub
test
mov
cltd
lods
xor
lcall
push
push
sti
adc
jnp
mov
mov
arpl
mov
ror
in
sbb
into
repz
or
pop
mov
outsl
shlb
je
mov
inc
fwait
dec
pop
sbb
xor
mov
cltd
out
pop
mov
or
inc
test
pop
mov
aas
sbb
test
pop
and
pop
mov
outsl
faddl
mov
mov
cltd
add
inc
push
sahf
arpl
cmpsb
adcb
ds
add
or
jp
fstl
das
cwtl
push
mov
add
inc
int
inc
icebp
adc
jmp
xor
sub
inc
sub
hlt
mov
mov
xchg
jns
add
icebp
xchg
adc
out
mov
xchg
mov
and
fs
mov
pop
adc
es
inc
xchg
adcb
aam
cmpsb
inc
and
test
aam
mov
lret
movsb
icebp
inc
loope
push
jmp
fcmovnb
lock
adc
xchg
mov
jge
xchg
mov
pop
adc
aam
imul
out
dec
push
ret
cs
or
test
xchg
push
cmp
rcl
xchg
call
xchg
cmpl
das
stos
jmp
mov
push
inc
aaa
aas
mov
cmp
dec
sub
cmc
sahf
mov
jo
push
jns
cld
int3
mov
inc
fdivs
in
gs
popa
pop
push
pop
inc
mov
and
sub
jnp
jae
mov
outsl
lahf
dec
and
inc
jecxz
cwtl
fwait
push
aas
loop
push
push
insb
clc
or
lock
adc
ja
test
jmp
aaa
mov
inc
mov
ds
mov
mov
stc
mov
lcall
xor
pusha
add
inc
ja
lahf
xor
in
xchg
push
stos
lock
aad
push
jne
repz
xchg
aas
call
xor
pop
lret
jb
pop
lock
movsb
mov
cwtl
sbb
test
movsb
pop
mov
jle
xor
sbbb
call
mov
inc
outsl
dec
shll
lret
and
cmpsb
int
xchg
leave
out
pop
xchg
add
sahf
mov
jmp
lods
or
sbb
fildll
sub
pop
stos
loope
loope
aaa
xchg
cli
add
leave
adc
dec
mov
adc
lds
shl
push
fcoml
aas
push
sbb
shrl
es
or
inc
fcmovu
mov
in
rcll
mov
mov
dec
mov
sub
negb
sub
mov
inc
sub
nop
jmp
mov
out
add
jb
leave
push
cmp
jg
mov
push
jb
jno
dec
cltd
outsl
call
and
ja
jecxz
shr
enter
cmp
mov
xchg
insb
decl
xchg
adc
mov
fmul
mov
rcl
arpl
inc
add
or
xchg
fisubl
cltd
mulb
pop
insl
jbe
mov
push
nop
pushf
mov
jecxz
push
pop
add
das
pop
mov
leave
bswap
add
lcall
adc
iret
or
dec
sti
test
sub
arpl
test
jo
data16
aad
decl
lock
sub
cmp
and
mov
inc
outsb
dec
inc
enter
out
pop
in
call
repz
setnp
push
mov
xchg
mov
mov
cltd
insb
cli
sarb
daa
data16
sub
ss
mov
movsl
jecxz
lret
loope
shr
or
call
rclb
aas
jmp
jle
xor
and
mov
test
and
or
jbe
xor
mov
rcll
mov
inc
cmc
scas
pop
push
outsb
jl
mov
movsb
or
out
jae
nop
mov
cmp
stos
push
repnz
mov
pop
mov
pop
jbe
xor
mov
aas
adc
ja
push
loop
iret
mov
mov
decl
adc
pop
enter
mov
push
test
cmp
dec
cmpsl
ret
mov
daa
int
pop
loope
cld
ja
adc
lahf
in
xlat
sub
test
out
cwtl
cli
xor
mov
jne
icebp
fwait
mov
pop
popa
jle
and
cmp
popa
sub
cmp
add
dec
fmul
scas
mov
mov
ds
xchg
fwait
adc
outsb
into
add
and
mov
call
add
sbb
sbb
imulb
xlat
xchg
int
sub
jl
add
les
xchg
jb
xchg
fs
fimull
push
xchg
out
imul
mov
fnsave
adc
das
jo
sbb
add
sbb
out
rclb
inc
insl
xor
add
mov
ja
arpl
aam
mov
imul
xchg
sbb
lret
adc
repnz
push
sub
or
lahf
xchg
lret
xchg
adc
sbb
addr16
jge
jne
add
pop
mov
mov
aam
aad
jnp
out
mov
fs
xchg
mov
sti
movsb
popf
mov
dec
xchg
mov
pop
divl
add
pop
cmp
ja
push
movq
and
inc
sbbb
push
jbe
push
dec
imul
stos
dec
daa
cmpl
sbb
cld
sbb
sub
loopne
idivl
fisubrl
mov
inc
and
adc
push
std
inc
lcall
jge
fstpt
ret
leave
fdivrl
ds
jno
jmp
pop
and
cli
sti
in
xlat
arpl
inc
loopne
std
or
xchg
inc
jne
pop
jmp
xor
mov
xor
andb
mov
pop
jb
inc
xchg
outsl
imul
roll
mov
and
cli
popf
out
pop
or
lods
jno
cs
jbe
jo
jns
inc
imul
in
jmp
imul
ret
adcl
mov
push
fisttpl
std
stos
xor
sahf
iret
dec
das
movl
out
mov
push
and
mov
fisubrl
jmp
gs
push
or
shll
sbb
xchg
out
gs
mov
inc
push
inc
aas
xor
sub
cld
jbe
dec
add
and
leave
movsb
jbe
xchg
jae
xchg
push
insl
hlt
xchg
andl
insb
xchg
ja
sbb
mov
dec
subb
mov
adc
cltd
pop
push
jnp
lret
sti
and
xchg
lret
add
fldl
outsl
mov
ja
inc
cmpsl
xchg
outsb
pushf
call
or
je
xor
mov
out
jg
pop
and
sub
mov
popa
dec
icebp
mov
loope
call
test
pushf
subl
jns
mov
push
xor
mov
int
lret
rorb
sub
loope
dec
sbb
repnz
pop
jo
enter
cmc
adc
ret
push
or
aaa
sub
sbb
aad
mov
push
divb
dec
sti
push
pop
jae
mov
cltd
out
jne
repz
addl
xchg
adc
sub
push
push
int
and
in
fucomp
lcall
lret
xor
aad
dec
imul
xchg
loope
in
popf
hlt
inc
mov
inc
jb
push
fnstsw
call
dec
or
mov
sub
lcall
gs
jecxz
cmpsl
jmp
cli
push
pop
and
call
or
add
cltd
mov
ret
inc
in
movsb
pop
lea
divb
jge
outsl
adc
pop
push
xchg
and
in
mov
inc
outsl
xor
outsl
gs
imul
cmpsb
mov
ja
clc
xchg
or
mov
inc
fmuls
lods
inc
out
jecxz
push
scas
jp
or
mov
mov
push
lcall
push
xchg
lahf
fsqrt
into
mov
int
mov
outsb
inc
in
mov
cmpl
xor
popl
sub
jns
aad
repnz
mov
fisubrs
inc
mov
cmp
mov
inc
rcr
fst
and
sbb
divb
pushf
or
dec
pushf
push
lcall
pop
or
sbb
xchg
sub
dec
mov
sub
rcrb
pop
fwait
cmc
cmp
mov
push
adc
sub
cltd
jmp
iret
inc
sub
out
shlb
mov
js
daa
push
sbb
pop
insl
sub
aaa
shr
mov
outsb
shr
pop
jge
mov
rolb
imul
test
dec
mov
and
aam
insb
and
jle
test
push
xor
in
sbbb
or
lret
aam
lea
out
and
dec
filds
sbb
push
fbstp
xor
dec
scas
xor
lock
nop
aas
aad
loope
mov
stos
adcb
shll
mov
mov
adc
lods
xor
ja
add
mov
jl
xor
pushf
sbb
out
jne
cld
out
push
push
mov
xchg
inc
mov
bound
cmpsb
sub
push
lods
les
xor
mov
addl
fstpt
jae
mov
pop
ficompl
mov
in
xor
or
enter
outsl
or
popf
sub
ja
std
sub
ss
xchg
cmp
neg
loope
dec
lea
jle
sub
pop
jle
outsl
and
cmp
nop
movmskps
xor
pusha
dec
push
arpl
in
pop
sbb
sbb
aam
imul
cmp
xor
push
push
mov
inc
fisttpl
mov
dec
jno
sti
xchg
xor
fisubrs
lcall
inc
ja
loop
ret
dec
mov
inc
lahf
add
pop
push
leave
jecxz
stos
fadds
movsl
xor
xchg
cwtl
dec
jbe
into
cmp
or
lock
lret
mov
cmp
hlt
cltd
jae
push
mov
cmp
ret
out
sarb
cmc
mov
addr16
cwtl
sbb
adc
in
dec
xchg
pop
inc
jle
ficoms
jns
fwait
decl
test
pop
push
sbb
mov
shlb
lcall
je
mov
insb
jne
dec
sarl
push
adc
jge
cltd
loop
mov
lock
jge
popa
cmc
icebp
ret
and
pushf
stos
andl
pop
pop
cmpsb
dec
sbb
xchg
outsb
and
pop
dec
test
push
push
outsb
push
cwtl
into
aam
test
ljmp
outsb
mov
fstl
call
mov
cwtl
orl
and
mov
arpl
sbb
push
push
mov
cwtl
push
add
mov
pmuludq
xor
andl
mov
fimuls
aas
mov
scas
push
lret
cmp
test
add
movsb
inc
loopne
jb
cmp
test
xchg
cmc
adc
jne
insb
fildll
data16
aam
jl
push
xor
dec
pusha
jle
cmp
jmp
sbb
mov
mov
mov
clc
lahf
shlb
mov
into
jp
and
pusha
aad
pusha
mov
lds
int
icebp
repnz
jno
jb
jmp
dec
push
push
fnstsw
jno
jmp
adc
stos
cmp
jg
adc
cmp
cld
pusha
and
and
push
daa
stos
fildll
scas
lea
sbb
xchg
stos
jge
out
jae
adc
es
jge
inc
sub
mov
add
aad
sub
sub
ret
push
cltd
hlt
cmp
adc
xor
and
iret
or
mov
inc
adc
sub
popa
lahf
jge
pop
cltd
cwtl
sub
hlt
pop
cwtl
dec
push
pop
in
sbb
arpl
lahf
or
adc
data16
std
mov
adc
push
sbb
ljmp
xlat
dec
in
jl
mov
dec
cmp
add
insl
adc
mov
cld
sbb
es
lods
shll
scas
ds
sbb
jno
mov
lods
jo
xchg
mov
insl
add
lock
repz
iret
pushf
push
addb
push
inc
movsl
in
in
push
fdivrl
jmp
jb
sbb
mov
jnp
ficoms
pop
outsl
mov
call
adc
arpl
pop
xor
or
cmp
ficoms
sub
int
rolb
lcall
mov
push
mov
fimuls
and
notb
ret
jl
in
leave
adc
jmp
fsubr
mov
sarl
cmp
cld
out
inc
push
rcll
icebp
cli
cmp
pusha
into
ret
ret
incl
inc
movsl
sar
nop
sarl
xchg
sbb
gs
test
scas
sti
cld
xlat
dec
jae
nop
aad
mov
pop
add
pop
outsb
popf
push
lock
xchg
jp
aas
dec
sbb
scas
lods
pop
and
pusha
inc
imul
or
mov
add
inc
or
adc
cmc
dec
push
or
dec
stos
dec
cmp
pusha
outsb
xchg
mov
or
xor
jnp
jle
pop
repnz
cli
adc
popf
xchg
es
mov
inc
repz
mov
imul
push
pushf
inc
fcomi
or
adc
pop
loopne
xchg
cmc
mov
push
pop
push
pop
mov
shll
sbb
mov
xor
scas
xchg
xlat
ror
iret
subb
mov
repz
sub
jns
into
pop
sub
repnz
pushf
sbbl
shrb
adc
clc
shll
inc
adc
pop
fmul
neg
cmp
icebp
mov
push
cmpsl
out
sub
jg
ret
mov
mov
add
push
arpl
push
push
mov
out
and
pop
cltd
mov
hlt
mov
jo
imul
cmp
dec
jp
mov
outsl
cs
push
jl
xchg
lret
or
popa
jno
sub
rcrb
int3
adc
sbb
arpl
mov
xor
jmp
cmc
out
mov
cmp
push
jbe
std
call
lea
push
sub
cmp
sub
jne
popl
dec
push
inc
jb
mov
nop
psubd
mov
push
sub
and
lcall
roll
jo
icebp
loopne
in
jo
loopne
xor
adc
out
push
pusha
pop
xchg
lods
inc
data16
jb
sub
dec
sbb
dec
daa
fwait
mov
in
jge
add
nop
sub
cld
sub
fisttpl
mov
jmp
sub
ret
mov
sub
pop
loope
inc
jle
xchg
outsl
and
int3
dec
iret
push
in
inc
dec
in
pop
sbb
test
fsubrp
inc
leave
lret
xor
push
dec
aad
fwait
mov
and
dec
lcall
xor
inc
dec
mov
pushf
daa
dec
cmp
testb
ss
push
sahf
push
cmpsl
roll
loop
sti
aam
mov
sub
push
mov
mov
sbb
jge
in
neg
adc
xchg
sahf
mov
stc
imul
imul
movsb
pop
xchg
stos
bound
fdivs
les
int3
rcrb
xchg
push
lret
push
push
leave
push
loopne
and
in
add
dec
push
push
inc
ja
mov
jno
jmp
jge
cwtl
scas
mov
push
aad
out
sbb
shrl
pop
xchg
aad
ret
pop
inc
mov
mov
adc
pusha
movsb
mov
jg
fdiv
pop
roll
mov
sub
lods
push
mov
icebp
test
out
pop
pop
jg
je
shrl
js
xor
mov
hlt
mov
loop
dec
repnz
jmp
aam
sldt
xchg
popa
mov
pop
pop
mov
adc
add
iret
inc
shlb
sub
movsl
jg
daa
push
sbb
cmpsl
fs
dec
xchg
dec
inc
in
lcall
loope
adc
mov
mov
xor
into
sbb
iret
loopne
push
add
xchg
xchg
mov
loop
xchg
mov
ljmp
pop
hlt
iret
mov
pop
ficoms
mov
xor
and
dec
xor
enter
dec
or
ret
inc
dec
das
xor
sub
fisubrs
ljmp
pop
out
mov
outsb
decb
hlt
mov
xor
sub
adc
stc
dec
lcall
fs
mov
mov
cmp
inc
adc
xor
pop
push
inc
jg
dec
dec
in
and
cmpl
mov
sub
paddusw
jnp
inc
scas
push
dec
inc
inc
lods
mov
xchg
shlb
fisubrl
jge
mov
cs
sbb
icebp
push
in
pop
subb
mov
imul
nop
scas
pop
and
iret
jb
leave
imul
xor
push
xchg
aas
cmp
sub
sub
lock
ljmp
cmpsl
push
and
add
cmp
cmp
inc
xor
adc
jge
xor
or
add
mov
mov
movsb
in
js,pt
sub
xchg
jo
push
xor
frstor
hlt
ja
mov
xor
xchg
ret
jmp
test
dec
xor
jmp
xchg
push
pop
jl
bnd
cmp
push
fs
into
add
and
fdivl
cmpsb
lds
adc
outsb
rcrb
push
das
in
ret
adc
mov
add
adc
mov
daa
loop
daa
sub
test
pop
arpl
outsl
test
xor
stos
adc
icebp
sti
inc
dec
add
std
and
daa
mov
or
iret
xor
rcl
push
xchg
xor
in
fsts
add
or
jp
adc
inc
fstpt
or
mov
in
mov
adc
loopne
dec
dec
pop
cmp
ret
test
push
pop
or
cli
mov
aas
push
cwtl
cmp
aad
shrl
repz
mov
cmp
jb
or
inc
add
jns
mov
mov
test
enter
sbb
add
sbb
in
inc
add
xor
dec
push
jg
and
pop
stos
pop
and
add
out
jno
jbe
jecxz
mov
pop
or
mov
push
daa
hlt
inc
jecxz
cltd
add
xor
push
push
push
inc
es
pusha
nop
and
mulb
cmpsb
lock
inc
adc
data16
push
push
push
inc
es
pusha
nop
and
mulb
cmpsb
lock
inc
adc
add
jbe
pop
push
adc
jno
pusha
ret
sub
rorl
loopne
adc
out
xor
push
push
push
shlb
mov
outsl
sub
dec
mov
xlat
icebp
pop
push
aas
pop
cmovns
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
