mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
and
mov
adc
gs
mov
dec
in
sbb
sarl
and
adc
popa
fbstp
inc
jg
mov
aas
xchg
iret
pop
icebp
outsl
sarl
xchg
addr16
push
fistpll
out
dec
jmp
mov
aas
jecxz
mov
xchg
sbb
sti
jo
push
shll
push
mov
ret
outsb
sub
dec
cmpsb
ret
jp
cmp
std
ds
and
repz
out
xor
adc
lcall
hlt
pop
scas
cmp
pushf
fisttps
push
inc
lea
or
mov
ljmp
adc
or
and
adc
jne
inc
push
faddl
jle
nop
mov
pop
jl
ds
lods
jo
jg
dec
cld
inc
out
xchg
push
fbstp
cmpb
stos
popa
inc
popa
sbb
mov
pop
jb
pusha
into
insb
je
rorl
call
repnz
loope
push
pop
sti
pop
mov
mov
sub
lahf
adc
popa
fbstp
inc
inc
pop
pop
sbb
cmpl
dec
fstpl
outsl
fnstcw
into
and
pop
insl
jge
les
push
psrad
das
and
repnz
cmpsb
pop
sahf
or
cmp
lret
jge
xor
bound
dec
les
scas
xor
add
rol
insl
sarl
sub
call
mov
aas
xchg
dec
loope
icebp
outsl
sarl
and
adc
popa
fbstp
inc
call
mov
aas
xchg
dec
loope
icebp
outsl
sarl
and
pushl
push
jp
mov
sarl
push
nop
dec
inc
ret
repz
jge
mov
in
xor
xchg
shrb
imul
hlt
lret
mov
cmp
sub
sysret
mov
xchg
inc
outsb
xchg
lret
push
fsubrs
mov
outsl
sahf
daa
inc
popf
and
scas
ljmp
test
leave
int
cmpsb
and
stc
das
jmp
adc
mov
mov
lret
dec
mov
mov
out
jo
push
mov
divb
je
inc
mov
mov
enter
ficoml
sub
call
jns
cmp
sarb
jnp
sbb
jns
push
test
xchg
dec
add
pushf
sub
test
add
sbb
pop
cld
jle
jnp
or
inc
push
scas
jo
pop
mov
ss
xchg
or
cli
jb
push
rcll
test
and
mov
cmpsb
ss
dec
in
repz
aas
mov
daa
imul
std
cld
or
dec
out
pop
sub
jp
fs
jmp
outsb
dec
outsb
gs
jge
ds
adc
and
mov
pushf
cmp
ss
roll
loop
adc
adc
sub
lret
testb
inc
lret
mov
mov
mov
loop
jb
mov
xlat
xchg
and
call
popa
pop
cltd
jae
mov
add
stc
popf
adc
adc
addr16
inc
popf
jmp
ss
push
data16
ret
lds
mov
and
out
xchg
sub
in
lods
inc
xor
das
inc
xchg
pop
das
inc
jns
sbb
andb
orb
andl
xor
adc
lods
arpl
mov
adc
or
icebp
xor
or
pop
xor
xchg
xchg
push
outsl
out
sbb
outsb
mov
push
shll
push
lock
pop
rcrb
pop
movsb
mov
fisubl
sbb
jne
inc
xchg
call
push
mov
mov
adc
push
xchg
cmp
ss
test
sti
ss
jo
pushf
mov
mov
cwtl
xchg
push
js
loop
mov
scas
mov
mov
jo
inc
pop
sbb
scas
jg
jl
sbb
sbb
sub
cmpl
xor
jle
out
cmp
xchg
pop
inc
mov
into
popl
int
fwait
adc
lods
inc
popa
jb
sub
cmp
fildl
std
push
stos
lea
or
std
mov
xor
sub
mov
mov
rcr
stos
lods
add
iret
mov
xor
lret
inc
mov
mov
sub
pop
popf
stc
outsl
push
push
addl
push
sub
nop
cmpsl
mov
jnp
roll
nop
mov
push
cld
and
xor
fwait
xchg
inc
dec
dec
and
and
out
rcrb
jo
add
mov
xor
mov
xchg
andl
jbe
movsl
je
add
jmp
mov
cwtl
es
adc
pop
and
aaa
lahf
cmp
jnp
adc
or
jb
add
addr16
dec
mov
jmp
add
insl
dec
jno
mov
xchg
jnp
rcrl
int3
in
jle
inc
sbb
adc
aad
jns
pop
shrl
and
ret
outsb
imul
cltd
push
into
mov
mov
pop
sbb
bound
mov
push
sbb
arpl
in
lods
stos
cmpsl
outsb
sub
jnp
xor
test
and
push
adc
adc
das
notl
cmpb
lahf
orl
mov
jnp
mov
cmp
outsb
xor
inc
push
mov
add
mov
mov
xchg
adc
mov
imul
mov
jns
mov
je
clc
outsl
mov
mov
mov
testl
mov
or
les
and
push
xor
cmp
xor
iret
mov
fidivrs
xchg
push
or
scas
cmpsl
test
cmp
pop
test
fcoml
enter
mov
ret
push
pop
imul
sbbb
mov
lcall
dec
mov
mov
outsb
aad
or
aam
inc
jl
cmpsb
bound
jb
xlat
cli
push
data16
std
aas
push
andb
aam
rclb
inc
aaa
outsl
rorb
add
dec
insl
jnp
cmc
mov
ja
xchg
test
ss
xchg
jl
jno
sub
or
push
test
shrl
pop
movsl
lods
xchg
jg
cltd
ljmp
jne
inc
xor
xchg
inc
mov
xor
pop
loopne
aaa
sbb
ja
jecxz
xor
adc
jp
je
lahf
mov
sahf
out
bound
movq
pop
stos
jns
sbb
sbb
inc
mov
pop
mov
jle
addl
mov
mov
mov
inc
imul
xchg
fiaddl
mov
scas
cmp
aad
or
iret
add
sbb
and
mov
mov
pusha
in
out
jg
orb
cmp
shl
gs
push
jmp
popf
scas
mov
jno
aad
xchg
test
or
jns
cli
sbb
roll
cmp
mov
jle
in
pop
aam
out
stos
sti
cmp
xchg
popf
aam
inc
dec
pop
mov
mov
mov
xor
and
icebp
dec
mov
dec
and
pusha
outsb
loope
leave
dec
xchg
iret
dec
adc
int3
lcall
inc
fsub
lock
inc
sub
sti
push
inc
mov
jl
lock
in
mov
mov
lea
push
xor
imul
mov
lcall
add
or
arpl
loopne
push
gs
xor
or
inc
aaa
dec
xchg
xor
and
xchg
push
addb
mov
das
push
inc
daa
sbb
jg
and
repnz
shrb
stos
pop
out
pop
push
test
push
adc
cmpsl
mov
pop
xchg
jge
test
cld
jmp
and
popf
push
xchg
ds
xor
mov
dec
hlt
scas
jb
lahf
push
or
jecxz
jnp
shll
mov
xor
aad
cltd
mov
repz
and
lcall
cmc
mov
inc
mov
inc
in
movsb
dec
sbb
xor
adc
mov
jae
jbe
mov
xorb
pop
xchg
daa
mov
fnstsw
loope
jg
repnz
out
and
mov
stc
mov
inc
mov
bound
ret
inc
xchg
inc
std
jno
adc
pop
aad
fwait
insl
repnz
sbb
add
outsb
imul
bound
cwtl
cmp
lret
enter
arpl
push
repz
int
stc
dec
and
fcmove
outsl
sub
push
movsl
fstpl
pushf
arpl
stos
and
mov
mov
mov
jl
or
fs
repz
mov
mov
xchg
insb
and
mov
inc
xor
out
xlat
or
pop
aas
lcall
mov
ja
in
sub
mov
rorl
push
ljmp
adc
inc
aad
js
push
cld
xchg
mov
inc
push
mov
aam
sub
xor
pusha
fisttpl
lds
jle
or
dec
into
mov
xchg
sub
pusha
push
sub
adc
mov
jmp
lock
mov
add
insb
popa
iret
inc
sub
in
mov
fwait
add
xchg
stos
dec
addr16
out
mov
or
nop
std
jns
cmpb
sbb
sub
repz
push
jns
fdivrl
push
std
pop
or
loop
pop
arpl
xor
in
jp
inc
call
pop
cltd
in
fwait
je
fcomp
mov
lock
lret
lcall
dec
adc
push
and
cmp
push
xchg
pop
test
stc
mov
mov
pop
in
xchg
aam
pop
and
or
ret
sub
mov
cli
or
sbb
sub
adc
adc
lea
sbb
push
xlat
cli
test
addr16
in
cmc
jb
arpl
jecxz
xchg
dec
add
stos
sbb
orl
fidivl
test
adc
cmp
nop
sbbb
bound
negl
lahf
lret
orb
cmp
fcoms
sbb
cmpsb
pop
or
push
insl
mov
mov
jmp
lcall
xor
mov
sbb
jne
pop
out
and
jns
sbb
fnstcw
out
xchg
xchg
jmp
xor
test
cmp
inc
lcall
sbb
or
addr16
ds
bound
fbld
jns
cmp
xor
sub
fsubrp
pop
jns
mov
or
xchg
sahf
jle
fcoms
enter
sbb
xor
dec
xchg
mov
sbb
sarb
out
jl
jl
xor
fs
push
ret
or
mov
scas
cmc
je
xorb
fs
popf
pop
dec
sbb
mov
call
inc
in
out
jge
xchg
out
fnsave
push
inc
sti
or
rorl
xchg
xchg
je
cmpsb
ss
mov
lret
adc
inc
movsb
ja
mov
sbb
inc
stc
xchg
sahf
cmp
les
in
mov
loope
movb
mov
pop
mov
testb
xchg
inc
cwtl
rolb
pop
iret
dec
imul
mov
xchg
adc
adc
dec
push
test
lock
inc
dec
jp
loopne
sub
fwait
jae
mov
pop
mov
add
jge
sbb
sbbl
imul
shlb
das
pop
daa
push
into
dec
push
mov
xchg
sti
push
mov
xor
cmp
adc
dec
mov
js
jle
lret
loop
and
and
shl
in
ret
sahf
popf
mov
sub
mov
lds
mov
cmp
pop
inc
roll
incb
cmc
sbb
addr16
ljmp
inc
mov
notl
sub
fisttpl
mov
dec
aaa
and
pop
bnd
dec
jmp
pop
ss
ss
out
repz
jns
std
mov
mov
push
fs
js
cmc
popa
jp
ret
testb
adc
stos
mov
push
in
outsl
cmp
ja
sbb
push
movb
insb
sbb
jno
push
cmpsl
xor
mov
xlat
pminsw
data16
push
pop
fistl
cmpb
mov
insb
test
adc
repz
mov
cmpsl
sub
dec
xchg
sub
je
fidivrs
xchg
sub
mov
or
les
push
orl
push
repnz
mov
cmc
jne
mov
xor
xchg
sbb
mov
dec
aas
loop
popl
add
stos
bound
and
sbb
sahf
push
movsl
xor
sarb
inc
loop
add
inc
test
cmp
sub
test
dec
adc
pushf
int3
out
mov
sub
pop
jge
xor
and
inc
add
negb
stos
cli
dec
cmc
push
pushf
pop
pop
in
mov
push
xlat
or
aas
popf
adcl
into
pop
push
lret
repnz
mov
pushf
pop
jb
aam
lahf
mov
push
aaa
fisttpl
aam
outsl
mov
lret
cwtl
jle
mov
and
mov
rclb
push
adc
lret
add
xor
pusha
into
pop
xchg
sub
sbb
jmp
cld
mov
inc
int3
fsub
mov
fcomps
sbb
or
or
lock
rcl
ja
ja
pushf
mov
cmp
pop
out
pop
test
insl
xchg
lock
or
push
loopne
movsl
mov
jge
dec
fcmovne
cmp
fnstsw
dec
mov
mov
sbb
inc
call
roll
mov
fnsave
jo
adc
repz
dec
and
pop
push
nop
daa
sahf
and
ljmp
mov
mov
outsl
lret
out
jle
xchg
arpl
mov
sbb
fisttps
mov
or
pusha
btc
ret
pop
out
imul
mov
dec
xchg
iret
rcl
dec
sub
cltd
movl
jle
clc
insl
mov
sbb
pop
and
sub
and
scas
add
jmp
inc
imul
sbb
pop
mov
daa
ret
pop
popf
nop
mov
dec
maskmovq
divl
mov
stos
push
and
add
insw
add
jmp
cli
lods
jbe
dec
stos
jne
xor
out
ss
jae
jne
jmp
mov
mov
inc
fbstp
jne
pop
lret
insl
pop
sub
outsl
mov
aaa
sub
mov
test
mov
rol
sahf
sub
inc
adcb
rclb
dec
scas
lret
cmp
xor
jecxz
icebp
adc
lods
adc
in
dec
xchg
mov
xor
je
rclb
mov
dec
mov
popa
sahf
gs
movsb
leave
jnp
or
cmp
adc
pushf
stos
mov
push
and
pop
subb
mov
jecxz
jp
cmp
mov
jmp
imul
popa
mov
xchg
sbb
add
lret
xor
jno
inc
add
mov
out
shlb
rorb
es
cwtl
rol
mov
jnp
and
and
sub
inc
adc
in
sub
scas
sti
outsl
adc
out
push
movsl
xchg
rol
pop
call
mov
or
sbb
xlat
pop
mov
and
pop
insb
test
inc
pushf
pop
stc
mov
cmp
mov
loope
loopne
xorl
cmp
dec
mov
cmp
adc
xor
xchg
push
mov
push
in
data16
add
mov
addr16
in
int3
lahf
and
inc
pop
ja
mov
sbb
mov
push
mov
mov
and
mov
lods
inc
popf
ret
and
sbb
xchg
xchg
mov
push
fprem1
test
push
mov
mov
fnstsw
and
cmpsl
push
jp
or
inc
mov
int3
fidivl
popa
xchg
movsl
mov
fstpl
adc
fisttpl
out
adc
js
xchg
sbb
jmp
adc
mov
dec
icebp
scas
push
sub
jae
jns
jg
jmp
out
loop
in
ficompl
adc
lcall
ficompl
bound
in
loope
dec
sarb
inc
loopne
jp
iret
pop
inc
xchg
lock
addr16
es
in
lcall
pop
mov
sahf
idivl
aas
jns
push
jo
mov
into
repz
cwtl
jbe
lock
lret
cld
push
je
out
jo
mov
ficoml
xchg
clc
roll
enter
cmp
pop
or
shll
lods
in
xchg
mov
cld
cld
or
pop
das
fdivrs
mov
fildl
movsl
pushf
gs
add
out
xchg
pop
jg
push
lock
cmpsl
mov
cmc
add
mov
adc
je
into
test
sti
adc
test
adc
lods
daa
xchg
ret
ljmp
aam
popf
enter
sub
xor
addl
pop
fwait
mov
jmp
jmp
pop
mov
xchg
shlb
in
xor
lahf
jp
scas
les
cmc
bound
adc
mov
mov
in
cmp
nop
sbb
cmpsb
xchg
ja
add
xchg
les
add
fs
aaa
mov
sbb
adc
mov
adc
loop
inc
or
out
xchg
add
xchg
sbb
jp
mov
packuswb
divl
movsb
fldenv
divl
xchg
mov
or
cs
stc
dec
ds
pop
or
xchg
and
dec
lcall
pusha
andb
xchg
add
xchg
iret
jp
inc
fwait
bound
jg
sbb
aam
and
sub
loope
test
pop
sbb
jne
aaa
xchg
mov
dec
into
outsb
ror
test
fcompl
test
loopne
inc
arpl
xor
push
xchg
outsl
add
mov
push
sbb
testb
lcall
mov
sti
fcompl
hlt
push
jle
out
mov
mov
add
sub
dec
movsl
lds
mov
inc
mov
dec
push
andb
pop
outsb
repz
xchg
jp
mov
in
rolb
and
cmp
mov
mov
sbb
int
inc
lea
inc
add
in
jmp
sarl
mov
and
iret
nop
jmp
cmc
sub
add
in
movsl
jmp
jl
inc
inc
call
jge
adc
fyl2x
scas
aad
into
push
adc
dec
ss
pop
xor
andl
outsl
je
jle
mov
sub
mov
push
sahf
mov
lock
insl
mov
adc
mov
and
cmp
shrl
adc
push
and
movsb
xor
cmpsl
lods
cmp
push
push
push
jg
dec
pop
ss
enter
cmp
add
cs
mov
adc
mov
adc
pushf
cmpsl
shll
xor
insb
mov
mov
xor
sbb
pop
test
pop
gs
mov
mov
adc
push
mov
xor
enter
mov
inc
fmulp
aas
in
mov
cmp
cmp
sub
mov
out
push
and
add
xor
dec
je
shll
add
push
imul
lret
pop
mov
je
test
and
jns
inc
jle
nop
and
repz
lcall
sub
pop
xchg
add
lods
xor
ds
lret
push
outsl
sbb
mov
aaa
inc
inc
lret
pop
push
lods
dec
mov
scas
das
leave
scas
arpl
mov
cmc
lock
sbb
or
pop
dec
vmread
xor
ds
or
mul
pop
int
scas
or
mov
sub
cltd
das
push
push
ret
ds
pusha
cmp
repnz
icebp
jnp
cmp
push
push
leave
mov
fs
iret
xorb
cmp
xchg
sti
and
cmp
xlat
dec
inc
lret
into
mov
add
ret
loop
rcl
mov
inc
pop
ffreep
pop
imul
ljmp
jge
sbb
xor
ret
dec
sbbl
stc
pop
cmp
clc
mov
inc
push
inc
or
jl
xchg
lods
mov
fisubs
testl
out
push
adc
jp
cmp
dec
rcrb
movsl
leave
cmp
lcall
ret
dec
sub
inc
repz
loopne
mov
mov
mov
mov
or
adc
xor
or
test
inc
cmpsl
sub
call
es
pop
icebp
mov
adc
jbe
xorl
push
and
xchg
jcxz
or
out
xor
pusha
ds
sbb
lock
dec
lahf
push
negb
pop
add
popf
sbbb
pop
cmp
lods
jbe
pop
out
ror
xor
in
jns
lahf
out
mov
shll
mov
or
pop
leave
lea
rcr
and
mov
or
outsl
divb
push
sbb
inc
aaa
pop
notb
dec
lds
mov
mov
les
or
push
push
iret
ret
xlat
sub
sbb
gs
inc
pop
das
ss
lods
push
imul
test
imul
cmp
aaa
aam
bound
movsl
or
cmpsb
lock
xlat
sbb
mov
iret
popf
xchg
sub
imul
pusha
sbb
xor
xchg
sbb
imul
add
imul
cltd
inc
outsb
leave
test
jns
add
lret
pop
stos
notb
mov
mov
int
data16
movsb
fstpl
ss
test
add
mov
pop
aad
mov
jp
std
fs
stos
nop
fiaddl
test
outsl
outsb
jle
dec
ds
cmc
lret
popf
js
cld
out
mov
call
es
xchg
pop
daa
jmp
mov
inc
dec
addr16
mov
rolb
sub
loop
mov
adc
dec
add
rcrb
lods
pop
pop
lret
imul
fstl
lds
sarl
mov
test
popa
rorb
and
loop
dec
icebp
pop
sarb
clc
ret
xchg
pushf
cmpsb
and
js
fdivs
in
movsl
arpl
les
lds
adc
pop
cs
xor
imull
xor
aad
loopnew
ljmp
push
dec
xchg
pop
clc
lcall
cs
fisttpl
mov
jl
lret
and
mov
add
out
push
xchg
mov
sbb
xor
rorb
push
push
jl
xor
xchg
out
addl
fbld
gs
ljmp
lahf
mov
jne
mov
aaa
inc
mov
and
jg
imul
mov
add
and
pop
jmp
mov
loopne
jb
push
mov
push
movsb
push
mov
xchg
pop
xchg
mov
jae
jb
fnstenv
mov
stc
cmc
rclb
push
push
data16
push
icebp
ret
push
jbe
xchg
into
fcmovne
sub
push
ja
lahf
mov
int
gs
rorb
xchg
cmp
xchg
mov
loop
cmova
push
jnp
lcall
les
mov
mov
push
inc
xchg
lcall
push
repnz
add
andb
clc
clc
add
or
dec
mov
push
das
mov
divl
arpl
push
stos
jmp
repz
xlat
aaa
jmp
roll
add
jnp
jmp
clc
mov
or
jb
dec
push
cmp
out
in
sbb
xchg
fiaddl
mov
shll
or
push
sub
push
sub
loopne
cmp
mov
mov
cmp
push
adcb
in
xchg
stos
push
inc
mov
iret
mov
xchg
pop
mov
int
pushf
xor
cltd
xor
push
add
call
or
scas
imul
mov
or
lods
sub
call
inc
push
push
sarb
push
test
daa
jns
enter
lods
push
jecxz
movsl
mov
adc
jns
aam
xchg
cwtl
dec
mov
es
and
clc
sbb
mov
xor
lock
subl
mov
ja
hlt
lret
jmp
lds
xlat
dec
sar
push
pusha
fwait
sar
sbb
push
add
lea
xchg
mov
cmp
jge
and
push
jge
push
lcall
adc
cmp
fadds
mov
jno
inc
call
mov
aas
xchg
dec
loope
icebp
outsl
sarl
and
adc
popa
fbstp
inc
call
mov
aas
xchg
dec
loope
icebp
outsl
sarl
and
mov
sbb
inc
jg
push
pop
mov
cmpl
icebp
outsl
enter
lds
push
iret
popa
fbstp
sar
divps
sbb
cltd
das
mov
mov
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
fcmovu
lret
ljmp
shll
inc
jp
push
sbb
or
cmp
sub
fcmovu
lret
ljmp
mov
dec
dec
jp
push
sbb
sub
fcmovu
lret
ljmp
mov
imul
jns
jns
inc
pop
scas
xchg
stos
mov
xchg
and
and
jo
insl
and
xchg
cmpl
fbstp
bound
aaa
inc
and
test
or
jnp
and
sub
pop
inc
jo
cmc
insb
in
pop
dec
push
out
nop
sbb
xorl
ficoml
fidivrl
ljmp
jecxz
stos
dec
stos
mov
xchg
ljmp
mov
xor
pop
loop
adc
pusha
inc
out
and
testl
sub
out
xor
rolb
mov
add
xor
cmovnp
push
pop
pop
std
aas
sub
sbb
lret
ljmp
mov
dec
dec
jp
push
sbb
or
cmp
sub
fildll
scas
fsub
sti
aad
fldt
das
das
push
or
pop
pushf
imul
dec
pop
dec
lods
mov
mov
fadd
lret
out
subl
sbb
in
jp
cltd
push
pop
inc
jnp
sahf
lret
lcall
mov
pop
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
lret
ljmp
mov
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
stos
out
nop
xchg
sub
mov
movsb
sbbl
jo
jnp
xor
or
movsb
sbb
mov
xor
push
xor
in
das
ljmp
xor
fwait
mov
inc
scas
dec
loop
lods
and
cmp
adcl
sub
test
and
out
lods
xchg
sub
daa
mov
dec
pop
pop
jg
add
jl
inc
repz
dec
je
or
cmp
xor
repnz
mov
jne
adc
sti
ljmp
imul
lds
mov
sub
mov
xchg
inc
mov
out
mov
sarl
push
push
ja
lods
lock
cmp
int
mov
fisttps
loope
scas
negb
adc
icebp
lahf
and
out
push
mov
aaa
loope
stos
lods
aaa
ret
xor
scas
or
lcall
ljmp
in
or
cmpsl
or
js
push
hlt
mov
imul
int3
mov
data16
ret
je
dec
sub
or
jns
test
xor
lcall
negb
jecxz
xor
xor
mov
push
cli
aaa
inc
insl
lret
xor
push
mov
sti
lcall
cld
adc
sub
not
inc
or
scas
sbb
into
mov
and
dec
dec
inc
stc
leave
or
fwait
and
xor
and
scas
data16
clc
loopne
sbb
adcb
repz
push
adc
cmpsl
push
pop
lock
pop
in
and
mov
insb
repnz
fwait
xor
inc
loopne
mov
push
loop
fwait
sbb
mov
mov
sbb
aad
in
repnz
fisubl
mov
fiadds
jnp
addr16
lea
mov
push
lods
lock
adc
lods
mov
xchg
or
add
push
imul
popf
sahf
mov
sub
jp
loop,pn
call
sbb
addr16
mov
data16
fisubrl
int
jb
push
stos
ds
inc
cli
mov
inc
xchg
jecxz
cli
iret
ja
mov
notl
cmp
or
push
call
jne
xor
loopne
nop
sbb
imul
mov
decl
cs
out
inc
dec
insl
cmpsb
push
mov
cmpsb
enter
and
ret
sub
xor
stos
mov
mov
fdivr
mov
outsb
lret
mov
lock
xchg
push
icebp
jo
adc
pop
xchg
push
push
fidivrl
popa
lret
nop
ds
pop
lcall
sbb
lods
int
cmp
xor
push
xchg
push
and
xlat
ja
out
inc
jp
adc
lret
and
inc
sbb
leave
lcall
pushf
add
pop
loope
pop
outsl
cmpsl
nop
fdivl
pusha
xor
xor
stc
movsl
xor
jb
sub
out
pop
jne
push
or
mov
mov
and
mov
jae
dec
xchg
aad
int3
cmpsb
cmp
mov
xlat
out
inc
mov
cmp
in
mov
mov
test
mov
das
push
xor
ret
sub
bound
icebp
int
mov
sub
mov
outsb
cmp
rclb
pop
std
dec
add
and
mov
cmp
pop
jns
and
dec
ret
xchg
out
mov
sti
int3
clc
sbb
and
dec
jae
ficoml
sub
lret
lods
and
fisubrl
jno
pop
or
sbb
jmp
test
xchg
jbe
push
push
mov
sub
jecxz
repz
test
fdivr
std
fdivrp
sahf
fsubl
stc
shlb
push
or
jbe
dec
in
mov
mov
ljmp
sbb
lret
fsts
add
push
das
cmp
aaa
jns
push
sub
cmp
leave
or
push
sub
imul
pop
adc
push
cmpsb
and
inc
ljmp
dec
out
sub
arpl
jmp
mov
dec
jmp
out
and
push
int
jge
sbb
loop
lcall
bound
mov
push
icebp
xor
mov
sar
pop
sti
mov
add
cs
xchg
aaa
push
divb
mov
pushf
adc
inc
out
in
fcomps
in
push
fsubs
ss
push
outsb
dec
je
daa
xlat
stos
into
lcall
jne
std
xchg
pop
xor
mov
and
jmp
ljmp
ss
xor
inc
sti
dec
xor
addr16
ret
mov
xorb
stos
inc
jmp
xchg
leave
outsb
in
cmp
cmp
cmp
push
movsl
push
jg
pusha
movsb
repz
gs
jnp
in
ljmp
pop
fidivs
push
add
ret
mov
sti
inc
xchg
adc
jmp
ljmp
cmc
ret
pop
repnz
dec
or
and
and
cld
mov
pop
and
jbe
mov
push
cmp
inc
inc
das
mov
pushf
push
mov
mov
sbb
mov
push
dec
xchg
lahf
scas
fdivl
push
es
in
aam
xchg
fs
ja
push
call
fldt
inc
clc
scas
mov
out
mov
adc
jbe
inc
dec
ja
lcall
cmp
jb
in
test
sbb
aam
pop
loopne
push
notl
push
std
cmp
movsl
push
push
push
out
add
fs
push
lods
loope
dec
hlt
inc
or
ljmp
dec
sbb
lea
test
adc
loope
push
and
mov
mov
and
out
inc
push
adc
jnp
cmpl
add
cmp
lds
lea
imul
scas
repz
jge
adc
popa
or
pop
es
adcl
fsubrl
imul
outsb
dec
adc
or
pop
js
jns
sbb
pop
lock
ret
ret
test
and
fsts
rolb
push
mov
movsb
in
jbe
push
and
rorl
out
inc
outsb
inc
out
or
int3
je
xchg
mov
maxps
jae
cmp
sub
int
les
adc
inc
shrb
pop
push
inc
add
or
xchg
jp
std
push
dec
js
lret
or
adc
scas
imul
xor
sub
inc
or
movsl
enter
aaa
pop
jge
cld
testl
inc
je
mov
mov
and
sub
pop
hlt
std
jbe
mov
push
add
cmp
arpl
pop
push
add
mov
movb
or
adc
std
cmc
dec
adc
sbb
sbb
lcall
js
mov
js
adc
mov
inc
push
cmpsb
push
gs
push
push
mov
add
dec
mov
insb
or
mov
and
mov
push
adc
data16
and
dec
or
jns
add
inc
stos
xchg
into
les
mov
jg
add
fs
xchg
arpl
cmpsb
ret
int3
pop
inc
ja
in
pop
jne
std
dec
jl
or
lea
sti
sahf
and
inc
test
ljmp
xchg
loop
not
sub
pop
enter
or
jne
jmp
in
or
cmp
mov
push
fsubl
push
ljmp
in
sbb
movsb
cmpsb
mov
xchg
pop
int3
cltd
jmp
cli
std
invlpg
xor
mov
ror
or
jp
jbe
out
adcl
push
out
add
jge
xchg
leave
jb
sub
dec
dec
dec
in
mov
sub
add
ja
mull
push
roll
adc
ret
dec
popa
iret
sahf
mov
sbb
adc
loop
sbb
adc
push
cltd
cmp
insl
inc
pusha
insb
mov
mov
mov
lcall
pop
cwtl
dec
sbb
dec
aaa
add
push
jno
in
out
and
leave
jecxz
mov
sti
mov
mov
cwtl
test
push
mov
fdivs
aam
xchg
mov
cmp
sbbb
jne
push
rolb
jmp
scas
roll
pushf
jle
scas
xchg
addr16
arpl
mov
pop
mov
fiadds
and
repnz
mov
jns
dec
mov
outsb
mov
ja
insb
pop
xchg
adc
stos
inc
xchg
lods
xchg
mov
xchg
mov
cwtl
cli
insl
roll
lahf
repz
adc
jg
dec
mov
aam
cmp
in
push
cmp
sub
iret
imul
movsb
ds
hlt
jb
and
pop
mov
xchg
aaa
shlb
and
subb
cmc
add
in
inc
faddl
subl
lods
add
idivl
les
jne
push
decl
lahf
iret
pop
jg
loopne
xor
lea
loope
out
fisttpl
sub
ret
repnz
popf
or
in
xchg
sar
add
and
mov
inc
push
repz
pop
and
ffree
icebp
enter
sub
cmpl
sbb
test
and
inc
adc
jne
add
and
xor
pop
sbb
addb
and
nop
push
sbb
jmp
fldcw
sbb
imul
lds
adc
push
fsubs
arpl
push
fildl
jnp
loopne
adc
iret
inc
out
inc
call
cmp
jle
cli
inc
ret
in
push
mov
cwtl
inc
xchg
inc
or
mov
push
sbb
ss
clc
adc
xor
dec
lods
adcb
sbb
jno
outsl
daa
divb
push
pop
push
insl
sahf
imul
pop
ret
xchg
mov
dec
les
in
fxch
cltd
addr16
cmc
push
insl
mov
jo
pop
sahf
add
out
mov
push
lcall
nop
fdivrs
repz
cwtl
test
xchg
lahf
mov
aaa
jecxz
jae
and
mov
add
push
lock
pop
mov
pop
shrl
imull
mov
inc
stos
pop
or
pop
mov
les
pop
push
sub
stos
mov
test
jmp
lods
out
xor
filds
sbb
or
mov
nop
jle
adc
jp
or
xchg
call
in
push
mov
sub
imul
clc
sub
cmp
xchg
mov
gs
pop
mov
sti
insl
push
mov
sub
std
mov
enter
ss
dec
inc
ds
shll
xor
movsl
mov
mov
dec
xchg
xchg
and
lret
inc
or
popa
or
xchg
lret
xchg
lahf
and
in
rcll
int3
iret
dec
jnp
fdiv
je
sub
mov
outsb
inc
cltd
lods
les
lret
cmpsl
sahf
rcrl
mov
mov
into
cli
cld
rclb
jl
pushf
and
add
int
fiadds
add
fildll
or
scas
dec
data16
addr16
xchg
insl
inc
ja
xor
scas
pop
shrb
mov
push
mov
inc
fisttpll
inc
call
mov
testl
jnp
jnp
out
cmp
dec
mov
or
inc
idivb
pop
leave
and
iret
adc
ret
mov
xor
shll
insb
rclb
xorl
hlt
testb
shl
mov
nop
dec
test
and
or
push
pushf
arpl
fstpl
inc
mov
jnp
sub
mov
in
jno
and
out
rcrb
mov
clc
faddl
test
add
lods
sub
loopne,pn
jbe
jbe
sbb
inc
sub
cwtl
movsb
and
call
jmp
in
and
inc
pop
repz
stos
stos
mov
xchg
push
ja
push
jb
mov
inc
mov
and
adc
aas
dec
cs
mov
mov
cmp
xchg
and
cmp
push
test
gs
icebp
sub
popf
sbb
test
repz
sbb
adc
cmp
push
out
cmc
aas
shll
mov
outsb
xor
xchg
or
dec
pop
ss
sbb
test
push
sbb
movsl
sbbb
inc
or
xchg
and
jle
mov
cmpb
push
repnz
pop
xor
arpl
stos
or
or
insl
fwait
xchg
mov
jg
mov
jo
and
nop
cs
aad
gs
xchg
mov
cmpsb
lcall
pop
mov
or
adc
cmp
int3
push
push
and
xchg
rcrb
out
sub
lds
scas
jge
pusha
cwtl
out
xor
mov
sub
imul
ss
loope
sbbb
data16
dec
lahf
mov
hlt
pop
jb
rcll
xchg
sbb
dec
xchg
dec
adc
dec
je
mov
pop
sub
test
push
aaa
in
lret
and
std
pop
divl
das
jp
mov
in
sub
jno
cmpb
into
push
fs
pop
adc
add
sub
jmp
popa
mov
add
sub
das
pop
mov
and
int3
add
xor
xchg
dec
mov
xor
ret
xor
nop
sbb
pop
aad
lcall
les
sarb
pop
pop
pop
in
dec
cmp
xchg
pop
cmp
xchg
in
ss
push
sub
jmp
lock
push
jne
test
push
and
inc
sbb
pushf
and
jecxz
jnp
loopne
cmpsb
push
clc
xlat
inc
pop
push
adc
cmp
andps
xchg
inc
out
enter
test
jbe
push
es
loop
fisubrs
ja
rcll
mov
adc
or
scas
jns
hlt
mov
iret
xchg
inc
imul
in
fldt
xor
dec
mov
mov
rcrl
cmpsb
pop
imul
and
lods
test
sbb
mov
xchg
xor
or
pusha
lods
lret
sbb
fs
test
arpl
mov
call
mov
out
jl
push
sbb
js
sub
push
test
test
push
pop
or
xor
push
jge
and
cwtl
sbb
xchg
xchg
daa
pop
bound
jb
dec
inc
pop
jo
mov
fcoml
lds
jmp
or
addl
iret
xchg
push
les
push
mov
xlat
pop
fmull
sbb
inc
call
pop
fisubs
out
xlat
add
dec
xor
lahf
or
pop
ja
xchg
sti
xor
add
loop
repnz
ljmp
pop
repnz
xchg
xchg
es
loope
lret
mov
rsqrtps
jns
leave
out
out
lea
mov
mov
ret
clc
mov
cmp
sahf
gs
lods
insl
data16
xchg
icebp
cmp
cltd
ret
pop
adc
add
push
adc
outsl
stc
xor
or
push
outsb
push
test
xor
xor
mov
jp
xor
das
cmp
fldenv
fwait
mov
imull
pop
lret
pushf
popa
adc
clc
fwait
cmp
pop
jne
and
ret
mov
add
dec
lods
lahf
mov
aad
imul
notb
idivl
insl
mov
jmp
and
pop
aam
mov
cmp
cs
push
lahf
or
rolb
test
leave
lock
add
jb
loopne
inc
mov
aam
jmp
call
dec
fcomip
push
mov
fisubrl
mov
es
sbb
push
ret
cmc
out
imul
sahf
fptan
mov
pushf
dec
sub
dec
push
xor
nop
xlat
sub
je
push
mov
in
push
cmp
mov
xlat
iret
movsb
test
popa
push
out
fdivrs
flds
xor
ljmp
sti
adc
lock
lods
in
test
xor
jge
ljmp
cs
dec
test
call
mov
loopne
gs
mov
fisttpll
faddl
int
and
jno
sub
mov
lods
fdivr
rcrb
test
lods
popf
mov
xchg
mov
ljmp
shrl
push
mov
pushf
push
push
test
mov
stos
dec
adc
cmpsl
movsb
jmp
push
dec
cli
add
addb
push
test
dec
pop
scas
xor
cmp
movsl
xor
pop
or
inc
jo
sub
mov
push
add
sahf
sbb
out
mov
ret
adc
dec
or
adc
add
in
fs
mov
cltd
mov
pushf
outsb
shrl
in
pop
clc
lds
ret
jmp
scas
cld
fcoml
cmc
adc
lods
xor
inc
ja
cmp
mov
sbb
aam
lock
movb
incb
int3
xchg
jge
mov
push
test
cmp
loopne
in
mov
sub
add
push
bound
mov
adcb
cmp
xor
inc
in
inc
je
addb
js
jmp
push
imul
jmp
insl
jne
hlt
xchg
cltd
shrl
out
push
ret
sub
int
lcall
inc
push
mov
jmp
push
int
adc
or
pop
sub
sub
ss
sbb
adc
adc
jmp
push
sub
sub
loopne
stos
call
push
mov
jbe
or
fists
dec
loopne
shl
push
push
xchg
std
sub
lods
fs
push
sub
insb
fs
out
jle
add
xchg
in
stos
xchg
cli
xlat
insb
arpl
pop
cmpsb
negb
int
in
push
pushf
inc
loope
sub
divl
pop
fdivrl
mov
push
mov
in
scas
pop
stos
jne
lods
sbb
loopne
sbb
pop
jl
pusha
mov
faddp
imul
lcall
mov
or
xchg
popa
test
leave
fcomip
test
add
or
fildl
ret
cmp
xchg
stos
dec
xor
dec
lret
mov
lock
mov
dec
in
stc
lods
add
hlt
add
adc
inc
jmp
test
shll
daa
mov
mov
mov
mov
shlb
push
test
pop
pop
test
xchg
out
lahf
test
mov
mov
lea
pop
repz
lret
push
jecxz
pop
cmpsl
cmp
test
ficoms
mov
dec
fucom
jbe
mov
xor
mov
sub
sub
mov
loop
lea
push
lea
sub
imul
popa
clc
push
test
inc
mov
fstps
xor
outsl
mov
sbb
pop
bound
arpl
into
shrb
inc
inc
mov
mov
mov
add
xchg
test
out
test
sbb
xchg
inc
xor
sub
inc
rorb
mov
sbb
shll
mov
push
xchg
fdivr
cmp
jne
add
sti
pop
inc
mov
imul
adc
adc
jg
or
inc
or
in
push
ret
sub
xchg
pop
popf
or
xchg
inc
mov
loope
mov
xlat
inc
dec
mov
push
sti
or
cmp
data16
adc
jo
aad
jmp
je
inc
test
mov
dec
xchg
daa
lods
dec
fdivs
push
out
roll
outsb
push
pusha
cmp
mov
dec
mov
loope
std
and
pushf
add
push
out
push
loopne
xor
pop
insl
inc
dec
loopne
in
insl
in
cmp
fwait
cmp
jmp
loopne
and
iret
cmp
xor
cmp
push
jno
orl
test
ret
repz
cmp
adc
lods
je
lods
or
cmc
jne
movsb
adc
adc
cltd
inc
lcall
jo
dec
sbb
inc
call
sub
mov
insb
pushf
fidivs
mov
lods
fldenv
mov
sti
or
lret
mov
ljmp
push
leave
push
inc
jo
outsb
jp
test
lret
aad
push
jmp
mov
mov
adc
jbe
jo
popa
outsl
test
shrb
cld
rcll
movsl
jp
out
mov
push
mov
outsl
shll
ret
inc
movsb
sub
pop
out
mov
loopne
les
loop
mov
fnstsw
and
xlat
jbe
mov
data16
dec
jnp
enter
xchg
mov
ret
dec
and
ficompl
mov
mov
daa
pushf
add
cmp
push
cmpsb
ljmp
neg
pop
pop
or
insb
pop
xchg
pushf
adc
mov
jg
aad
ret
cmpsb
adc
jl
pusha
jl
or
mov
sub
mov
push
add
arpl
ja
jne
pushf
jecxz
fadds
or
sbb
gs
aas
jo
jp
jnp
push
std
dec
add
subb
sbb
pop
fsts
add
je
xorb
xor
jb
outsb
cld
pop
loope
or
inc
les
lahf
fimuls
dec
and
lock
add
ss
sub
test
adc
mov
out
jmp
fildl
push
push
lret
push
inc
add
inc
sbb
sti
repz
bswap
popl
pop
adc
cli
or
pop
test
jb
sbb
sub
mov
leave
idivl
lcall
repnz
data16
pop
fs
cmp
insb
mov
and
mov
mov
add
mov
out
pushf
fadds
das
popa
cmp
push
cmc
xor
mov
outsl
test
addr16
stc
std
out
mov
sub
inc
cmp
cmpsl
insl
xchg
movsl
cmpsl
push
test
lea
cmp
or
in
rclb
sbb
mov
int
pushf
insb
arpl
mov
push
out
cmp
scas
pop
aaa
sbb
in
lcall
dec
addr16
mov
pushf
ss
cmp
call
lcall
outsb
stc
inc
ficoms
int3
inc
sbb
lahf
aad
std
push
sarl
mov
add
mov
mov
loopne
and
movsb
xor
push
idivb
jge
int3
ljmp
mov
out
cmp
push
jb
lahf
cmp
push
jl
dec
sub
addr16
cwtl
sbb
mov
dec
jge
fdivrs
xor
sub
dec
sbb
mov
cld
aaa
or
mov
ret
jns
xor
mov
outsl
sbb
sbb
out
sti
sbb
out
jecxz
loop
jmp
repnz
popf
sub
out
lcall
scas
pop
pop
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
lret
ljmp
mov
dec
dec
jp
push
sbb
or
cmp
sub
fcmovu
lret
ljmp
mov
dec
dec
jp
imul
or
cmp
sub
fcmovu
lret
ljmp
mov
mov
sarb
sbb
xor
rcl
int3
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
test
and
push
lcall
mov
sbbl
imul
mov
push
jmp
arpl
cltd
sub
sbb
imul
pop
or
cmp
imul
fsts
jns
sbb
cmp
pop
arpl
dec
jne
das
mov
cmp
jnp
jp
dec
dec
cmpsl
outsb
aas
mov
adc
xor
adc
pop
xchg
jl
dec
or
repnz
dec
outsb
movsl
sahf
mov
loope
sbb
into
jnp
xchg
jmp
pop
fldcw
xchg
mov
pop
ret
push
adc
jbe
push
jmp
cmpsl
sbb
sub
idiv
out
cmp
js
xor
inc
push
push
fs
addl
ss
fwait
insb
jl
cmpsb
cmc
mov
cmp
dec
sbb
repz
inc
jl
scas
in
out
and
cli
xchg
add
insb
jl
dec
or
rorl
shrl
xor
inc
jmp
jp
mov
fwait
cmp
imul
pop
pusha
les
push
iret
inc
fbstp
xchg
mov
out
adcl
int
mov
lret
xchg
call
and
daa
mov
fsts
pop
jne
push
mov
cmpl
jp
xor
push
std
and
sub
arpl
xchg
sub
sbb
imul
pop
adc
and
jae
arpl
xchg
sub
sbb
imul
pop
adc
dec
dec
jl
aam
mov
outsb
sbb
lods
dec
push
aas
out
notb
push
nop
stos
and
jge
xor
stos
pop
sbb
dec
pop
jbe
jno
inc
lods
and
sub
and
mov
loope
pop
outsl
mov
push
mov
adc
and
sbb
mov
and
inc
xchg
jb
and
push
xchg
adc
push
jno
lret
cmpb
fs
mov
pop
xchg
test
enter
addr16
sbb
pop
js
hlt
loope
jecxz
push
mov
popa
stos
mov
adc
push
stos
add
xchg
ja
jmp
movb
fdivl
push
add
mov
insl
sub
aad
aad
or
into
mov
rolb
dec
mov
or
adc
sub
loope
fdivr
repz
cltd
rolb
sbb
inc
daa
dec
ficomps
das
repnz
pop
aad
lods
ret
pop
pop
mov
addl
mov
das
gs
sub
pop
lods
cwtl
pop
jnp
sbb
jo
xchg
loop
pop
lcall
shlb
add
pop
or
rcrl
push
fildl
push
pop
jge
jg
jbe
enter
cmpsl
loope
add
pusha
mov
shlb
shl
lods
xchg
fidivs
mov
inc
mov
push
fistpl
push
sbb
fs
cmpsb
jle
cmpsb
lock
arpl
mov
insl
aad
cld
data16
mov
xor
inc
addl
xor
dec
frstor
ror
cltd
xchg
clc
fistpll
jle
mov
enter
out
jne
lahf
and
mov
push
push
and
push
xchg
dec
inc
and
pop
inc
add
push
push
es
dec
adc
bound
adcl
in
into
adc
or
push
lret
popa
xor
call
ljmp
rorl
sbb
xchg
stos
cs
ja
sbb
mov
fisubrl
mov
sbb
add
pop
pop
jmp
in
sub
jno
mov
shl
jp
and
adc
and
cmp
sub
pop
int
jmp
pop
adc
lret
jl
push
out
in
and
pop
fadds
in
mov
jecxz
hlt
addr16
hlt
stos
ja
repnz
ss
cmp
pop
push
jnp
call
cwtl
in
fnstsw
hlt
and
mov
xor
hlt
add
cmp
call
jl
test
mov
dec
in
int3
push
and
xchg
pop
inc
fidivl
jmp
das
xor
data16
fs
test
jge
cmp
inc
xchg
scas
or
mov
rorb
xchg
push
outsl
imul
pop
addl
test
in
inc
xor
pop
adc
jmp
jb
jmp
mov
xchg
cmp
push
xchg
cmp
push
test
pop
add
or
and
pop
imul
fs
mov
cltd
sbb
fimuls
fildll
mov
or
pop
sbb
in
popa
push
add
dec
lcall
mulb
cmp
fisttpll
pop
addr16
je
sbbb
dec
jb
subl
adc
lret
aaa
lcall
sbb
jge
inc
xchg
sarb
xchg
push
iret
push
imul
daa
in
pop
inc
mov
int3
jge
dec
mov
cmp
or
add
dec
pop
ja
mov
daa
push
adc
std
push
xchg
ljmp
ljmp
adc
test
das
mov
in
xchg
or
in
adc
mov
cltd
es
fs
adc
xchg
jmp
xor
or
mov
adc
mov
sbb
mov
fldcw
mov
jb
aas
push
shll
sub
stos
add
enter
loop
dec
mov
lods
icebp
xchg
imul
mov
cmp
cmp
lds
inc
iret
pop
loopne
sarb
addr16
add
es
iret
inc
outsl
icebp
mov
push
test
mov
mov
jb
aad
adc
fwait
and
fs
cmpsb
and
mov
rorb
dec
mov
jmp
cmp
dec
xchg
jb
stc
not
rorb
into
ja
xor
xlat
mov
lret
in
adc
xor
arpl
sbb
adc
mov
mov
inc
lea
out
cmc
aam
repnz
sarb
dec
arpl
mov
add
scas
jl
jo
js
gs
out
stos
xor
lods
pushl
jb
mov
icebp
inc
jecxz
dec
cli
mov
mov
imul
and
xchg
xchg
notb
iret
sub
out
testl
fdivrl
lret
dec
pop
mov
jnp
jecxz
pop
lret
clc
lret
jle
nop
fidivl
stc
inc
pop
lcall
test
xchg
push
outsb
in
stc
xchg
mov
in
push
iret
dec
mov
xor
push
cmp
adc
pop
scas
add
adc
mov
lcall
sbb
fldl
mov
xchg
sub
dec
dec
add
cmp
mov
dec
add
insl
imul
fisubrs
addr16
js
in
cli
push
fwait
insb
and
sbb
pop
mov
mov
cmpl
add
jae
adc
mov
mov
loop
and
pop
scas
sub
divb
push
movsb
cmp
push
popa
outsl
subb
out
lahf
jp
cltd
icebp
or
rcrl
pop
jo
ja
fisttps
lock
jo
push
adc
cs
in
jae
std
add
test
lahf
sbb
into
repnz
dec
mov
cmp
push
mov
jge
mov
add
movsb
sbb
push
dec
add
std
ljmp
ret
v4fnmaddss
shrb
inc
sahf
jo
in
pop
jbe
mov
adc
xlat
ret
jle
xchg
int3
pop
pop
or
std
stos
cwtl
xchg
sti
or
pusha
dec
outsl
mov
ret
imul
jp
repz
ret
jns
mov
xchg
lcall
push
lahf
test
sahf
cltd
cmp
adc
or
push
sbb
or
inc
arpl
pop
gs
lds
dec
out
xchg
das
xor
adc
cld
imul
push
movsb
scas
daa
xchg
or
arpl
mov
icebp
jae
jo
jge
hlt
mov
mov
je
std
xchg
inc
cmp
andl
inc
push
mov
mov
sbb
xor
in
adcb
xor
xlat
sub
enter
cld
mov
sbbl
mov
cmp
fimull
mov
andb
and
fbld
inc
xchg
lods
pop
ja
leave
cmp
fnstcw
sub
ret
scas
lds
cwtl
je
sbb
cmp
fyl2xp1
xchg
in
sbb
mov
mov
push
fs
dec
loop
mov
push
mov
arpl
sbb
ftst
and
or
adc
loope
fidivrl
inc
pop
stos
xchg
bound
loop
sarl
adc
sbb
repz
push
xchg
xchg
shrl
aaa
mov
fistps
aas
and
cmpsl
mov
repnz
mov
xchg
sbb
into
cmp
nop
js
testb
nop
jecxz
add
mov
out
xchg
je
xchg
out
je
and
add
lods
xorb
jns
shrl
je
mov
ret
xchg
ja
add
xchg
stos
or
int
out
insl
filds
shl
adc
push
loopne
nop
outsb
clc
mov
cmpsl
xchg
inc
jge
or
push
aaa
dec
and
fstps
inc
jo
mov
lock
jno
push
push
imul
and
pop
mov
xor
imul
gs
outsb
std
or
xchg
testl
mov
test
xor
xchg
test
insb
inc
cmp
lock
sbb
lods
mov
pop
daa
mov
mov
mov
xchg
mov
not
shr
je
ss
pusha
cmpsb
inc
xor
cmp
dec
stos
scas
pusha
jle
fstl
shrb
mov
rcl
cmp
imul
lea
add
mov
sub
pop
cmp
xchg
inc
pop
cmpl
popa
mov
mov
xchg
insl
xchg
imul
mov
push
mov
or
insl
jecxz
dec
enter
dec
ret
es
dec
push
mov
mov
aas
jae
ja
dec
mov
call
inc
pop
rcr
loopne
aad
and
es
and
mov
icebp
xor
mov
pop
std
stos
dec
jg
clc
dec
cs
add
jns
sbb
and
inc
insl
xor
xchg
ficoml
in
out
les
std
jge
mov
ret
scas
scas
std
ret
dec
les
jmp
mov
fidivrl
push
push
jge
cmp
push
adc
fdivr
xor
dec
lcall
jnp
mov
xor
pop
enter
or
sbb
out
aaa
pop
dec
aas
or
push
stos
pop
adc
fistl
leave
addr16
adc
enter
inc
imul
mov
clc
lret
inc
jecxz
repnz
movsl
jne
fs
fcoms
lods
pop
or
xor
stc
movsb
fwait
iret
xor
sub
iret
divb
xchg
cmp
mov
int3
rcll
loope
icebp
aad
aas
inc
mov
pop
jge
aam
and
dec
pop
or
xchg
hlt
cmp
js
add
mov
push
stc
sti
jmp
mov
jbe
inc
inc
mov
enter
push
jae
mov
jo
lea
ja
jmp
push
sbb
scas
pop
and
sbb
and
xchg
xor
adc
jno
or
rcll
inc
data16
adc
push
lea
dec
sbb
cmpsb
inc
aam
dec
mov
and
andb
jp
popa
push
inc
fistpll
mov
stc
mov
push
sub
insl
mov
pop
push
lock
ljmp
pop
cmpsl
pop
in
es
sbb
dec
rol
test
lahf
mov
mov
mov
subb
sub
repz
cli
rorl
dec
in
test
ds
lods
and
or
gs
sarb
mov
push
dec
sub
cld
gs
arpl
in
jp
enter
cmp
push
jnp
pusha
daa
aaa
cmp
leave
push
adc
add
push
mov
rolb
and
lahf
movsl
fs
cltd
imul
mov
push
xchg
test
and
clc
pop
lods
leave
in
cld
clc
stos
lea
js
jae
push
push
pop
adc
imul
imul
xor
ret
mov
shlb
stos
mov
push
out
jns
lahf
push
popw
imulb
stos
pushf
cli
loope
mov
mov
fwait
nop
lds
jg
sti
adc
fdivrl
push
lret
lock
loopne
jnp
jle
loope
mov
lcall
push
jae
xchg
xchg
imul
mov
and
test
fs
xchg
call
add
jns
mov
sub
sub
xor
cmp
cltd
movsl
scas
aam
mov
in
shr
push
repz
lods
mov
adc
ja
imul
movsl
jne
sbb
push
mov
inc
ss
sbb
aam
decb
test
xchg
cmp
jns
push
xchg
adc
add
jno
and
in
dec
lcall
xlat
cmp
js
jns
push
mov
sahf
xor
xor
insb
das
mov
pop
out
clc
imul
xchg
mov
and
jns
stos
lds
rorl
rorl
fcomps
rclb
out
push
dec
lret
sub
dec
mov
mov
xchg
inc
sub
sub
add
dec
dec
and
push
popf
ror
mov
sbb
mov
xor
es
std
mov
insl
fwait
mov
out
jb
mov
push
fildll
pop
pusha
aam
cmp
outsb
inc
movsl
jb
repz
arpl
mov
mov
push
pop
push
pop
fisubl
add
sarb
and
xchg
mov
and
lret
mov
xor
mov
repnz
xor
insl
inc
adc
subb
loop
or
clc
add
adc
push
push
push
add
les
insl
mov
push
add
dec
in
shlb
jg
push
les
lcall
outsl
or
fildll
loopne
jle
push
shr
jae
mov
test
inc
mov
and
movsl
xor
pop
pushf
push
add
push
jae
mov
outsb
xor
mov
or
addr16
js
ret
push
jb
test
or
fisubl
mov
push
mov
cmpl
adc
dec
xchg
test
jecxz
ja
fcompl
add
adc
out
jl
je
dec
lahf
adc
cwtl
dec
or
mov
sbb
xor
or
mov
mov
leave
and
adc
and
inc
aam
mov
out
and
in
fwait
push
add
lds
insl
jo
cmpl
js
inc
mov
in
xor
push
xor
cs
jg
jg
daa
jnp
pop
push
and
test
test
loop
insb
je
mov
xchg
jmp
in
jns
in
cmp
sbb
inc
es
and
mov
fs
or
daa
pusha
test
stos
clc
ret
mov
je
jg
xor
dec
jmp
sub
pop
addl
fstpt
test
mov
mov
sbb
pop
dec
iret
mov
lods
pop
punpckhdq
mov
insb
cwtl
pop
fdivs
nop
pop
and
mov
xor
add
ljmp
adc
mov
icebp
mov
lahf
loopne
xchg
lods
jbe
out
push
pop
cmp
lret
xchg
rclb
pop
adc
push
mov
xor
xchg
sub
lock
outsb
jno
jns
mov
cmp
add
xchg
pop
cmp
insl
lret
ret
insb
cli
lods
leave
sbb
jns
ss
loopne
pop
js
test
and
push
bndstx
cli
inc
inc
inc
leave
popa
add
pusha
in
push
out
jo
mov
cs
mov
pop
jne
push
xchg
xor
and
pop
mov
arpl
arpl
test
into
mov
and
cmpsl
cmp
sbb
jae
in
les
aaa
mov
es
cmp
or
push
cwtl
mov
dec
or
mov
aad
mov
clc
loopne
and
in
cmp
test
fdivp
mov
lcall
inc
les
inc
dec
shll
push
or
cmp
push
loopne
arpl
aaa
mov
inc
mov
inc
dec
daa
test
sub
sub
xchg
fistpl
gs
std
mov
in
fnstcw
repz
mov
fcmovu
insl
cmc
mov
mul
push
adc
test
jge
lea
out
arpl
out
jno
lcall
dec
dec
frstor
aaa
or
dec
jp
push
xor
iret
mov
scas
mov
leave
cmp
cmc
ljmp
stos
or
imul
inc
sbb
pop
aas
jns
int3
adc
stos
fcomps
shlb
mov
fsubs
icebp
mov
sub
jl
inc
enter
ret
sbb
daa
cmp
jnp
mov
popf
adc
cltd
sbb
push
mov
mov
call
or
fwait
std
das
mov
adc
push
xchg
mov
rorb
stos
xchg
inc
inc
int
test
ja
stos
aad
ljmp
jns
fldcw
icebp
mov
rclb
sbb
shlb
data16
popf
or
push
mov
dec
shr
js
cmpb
push
cmc
pop
in
adc
dec
loope
push
mov
repz
lea
jmp
pop
dec
or
xchg
adc
pop
mov
rcrl
in
jne
mov
and
lods
loop
rolb
movb
imull
push
scas
lods
push
xchg
in
into
mov
jbe
clc
mov
test
cwtl
mov
mov
into
popa
imul
ret
call
roll
nop
cmp
cmpsb
rcrb
xlat
into
in
cli
fiaddl
sub
or
push
cmc
andb
xor
mov
loop
dec
and
test
push
dec
add
cmp
arpl
daa
lahf
xor
ret
mov
bound
inc
mov
jle
or
jge
mov
jnp
data16
or
repz
js
jb
aad
cli
cmpl
fsub
imul
out
mov
inc
push
je
pop
and
loopne
xlat
mov
jmp
jecxz
fucomp
or
mov
dec
movsb
negb
adc
lret
mov
mov
adc
push
push
int
stos
and
mov
inc
lret
pop
xor
push
mov
push
addr16
push
cmp
out
mov
cmc
daa
ljmp
clc
out
out
lcall
sbb
push
add
dec
or
cmp
dec
xor
lcall
idiv
cwtl
icebp
mov
push
jnp
loope
int
dec
aas
dec
add
and
jae
push
rorb
pop
in
lret
push
cld
fistps
and
xchg
shlb
test
cmp
in
mov
jge
push
test
push
jmp
xlat
cmp
jl
inc
lock
in
inc
xchg
xchg
and
jae
stos
outsl
adc
into
movsl
pop
fidivrs
std
add
incl
fs
loop
cmp
in
std
add
or
or
jmp
fsts
insl
stc
stos
jmp
xchg
rclb
fldt
mov
mov
popf
mov
test
mov
xor
sub
push
int
cmp
pop
incl
insl
inc
aad
mov
sub
mov
test
add
dec
fisubrs
sub
call
leave
cs
fimull
rorb
stos
lods
mov
inc
xlat
es
inc
mov
pop
sub
dec
xchg
test
test
popf
push
xchg
jbe
pop
js
les
iret
push
xchg
test
xlat
int3
jbe
hlt
pop
loope
push
cli
lods
jecxz
cmpsb
fsubp
xchg
out
mov
or
xlat
sbb
adc
jns
stc
aam
or
lcall
dec
push
push
mov
xchg
mov
stos
pop
pop
hlt
sub
add
xchg
js
xchg
cmp
dec
push
jmp
sbb
popf
jnp
jno
and
cli
add
jmp
ds
mov
testb
mov
outsl
fisttpl
into
adc
es
sbb
stos
shl
xor
dec
imul
outsl
and
scas
pop
push
sbb
test
and
cmpsl
jecxz
jae
add
imul
ljmp
adc
nop
outsb
into
cmp
movsl
sbb
les
mov
xor
out
adc
xchg
data16
dec
mov
push
adc
inc
adc
js
push
test
repnz
xor
aas
sub
cs
xchg
pop
popl
or
mov
mov
xor
jmp
faddl
stc
ds
in
out
dec
dec
ss
xchg
in
out
test
or
sbb
pop
xor
mov
xor
and
movsl
jge
mov
add
loop
mov
outsb
push
jb
sbb
hlt
mov
pop
jmp
xor
add
push
adc
xor
addr16
outsb
xchg
pop
popl
adc
add
xchg
lds
adc
jp
repz
inc
out
lods
sub
pop
jmp
sbb
movsb
or
imul
xchg
mov
pop
inc
sahf
pop
outsb
shl
sahf
add
shl
loopne
shl
jnp
jle
mov
and
stos
xchg
daa
movsb
mov
dec
push
and
mov
testl
ja
shll
inc
arpl
push
das
leave
xor
mov
xor
lcall
into
rclb
sub
insb
cwtl
mov
and
int
testb
push
mov
das
daa
push
ljmp
pop
addl
cmpsb
jnp
push
repz
aas
fwait
std
mov
jnp
mov
daa
inc
dec
xchg
cmp
test
push
or
jae
jo
stc
jmp
cmpsb
sbb
mov
ret
fiaddl
bound
pop
pop
mov
fadds
popa
mov
xchg
pop
sti
aaa
cwtl
iret
insl
ret
outsb
and
sbb
mov
sahf
mov
xsha1
cmpsb
dec
test
rcrl
bnd
sti
es
sbb
mov
mov
xchg
dec
popa
ret
adc
imul
sbb
pop
mov
rclb
movsl
lahf
inc
negb
divl
pop
lahf
dec
mov
pop
jnp
insl
xor
decb
jno
jne
in
xchg
sti
mov
lea
pop
imul
ja
in
dec
cmp
sbb
shr
jg
ljmp
xchg
pop
lods
jmp
insl
cmc
push
jnp
aad
ja
enter
push
repnz
mov
cmc
int3
popa
inc
jne
xor
jmp
jbe
jecxz
addb
sbb
cmp
pop
xlat
lods
mov
fs
sbb
xchg
cmc
push
mov
inc
sbb
sbb
pop
hlt
scas
dec
inc
jl
in
jb
sub
insb
sbb
mov
lahf
fdivl
sub
movsl
ret
or
ret
adc
and
notl
test
test
shll
mov
cli
nop
push
mul
cs
mov
dec
cwtl
sahf
add
icebp
xor
cmp
mov
aad
cld
mov
cmpsb
dec
lret
cmovae
js
sub
dec
pop
or
pop
in
mov
sahf
xor
sub
push
aaa
movsb
cmp
int3
bswap
rcll
data16
jb
add
andb
filds
adc
jb
hlt
xchg
shrl
inc
mov
adc
mov
les
sbb
sbb
cltd
or
inc
into
add
ss
fiaddl
pop
add
pop
das
test
and
leave
imul
mov
cmp
push
push
xor
pop
jmp
cmp
jmp
and
jae
arpl
xchg
sub
sbb
imul
pop
adc
and
jae
arpl
xchg
sub
sbb
imul
pop
adc
and
jae
arpl
xchg
sub
sbb
push
rcrb
test
and
repz
jecxz
insb
jl
sbb
mov
xchg
sbb
int3
int3
int3
int3
int3
cmpsb
pop
mov
xchg
cltd
cwtl
mov
fcmovnbe
daa
es
push
push
adc
data16
push
push
push
push
cmpsb
cmpsb
mov
xchg
div
mov
ss
ss
sbb
add
inc
inc
push
push
mov
sahf
mov
int3
aas
lds
push
data16
sbb
sbb
add
cmpsb
xchg
loopne
mov
imulb
pop
pop
adc
mov
add
outsb
lea
sahf
mov
dec
idiv
push
sub
insl
testb
dec
inc
pop
mov
push
call
and
test
xor
shl
and
mov
cmp
leave
idivb
mov
mov
mov
cmpsb
mov
xchg
cmp
aaa
leave
xor
jmp
mov
int3
push
cmp
sahf
cmp
jns
jbe
out
or
stos
lock
inc
out
sahf
push
jbe
mov
test
imul
cld
ficomps
daa
mov
push
and
push
inc
outsl
cmpsb
scas
mov
icebp
out
test
iret
iret
aas
ds
pop
movd
popa
pop
inc
push
xor
ret
shll
xchg
mov
cwtl
mov
pop
dec
jne
jb
or
and
leave
mov
mul
xchg
mov
test
push
jb
push
data16
sbb
sub
xor
out
shr
out
jecxz
mov
test
es
push
push
push
data16
inc
inc
push
push
cmpsb
cmpsb
mov
xchg
div
mov
es
push
push
push
data16
inc
inc
push
push
cmpsb
cmpsb
cltd
xor
cmpsl
in
mov
bnd
iret
or
cmpsw
test
insl
cli
xchg
dec
ja
imul
cld
clc
mov
out
cmp
xchg
daa
fcoml
mov
fstpl
stc
dec
push
out
and
mov
bound
jle
mov
cmpsb
aas
call
in
push
xor
negb
xorb
std
inc
add
and
test
lds
and
sbb
bound
cmc
sub
jnp
push
jmp
ds
pop
pop
pop
inc
cwtl
sub
imul
in
aaa
xchg
dec
sahf
pushf
lods
cli
push
sbb
jge
ljmp
jmp
cs
xchg
jle
or
bound
xor
cmp
js,pn
add
add
imul
mov
adc
addr16
test
aaa
pop
lret
jne
adc
out
cmc
es
adc
lock
mov
push
popa
mov
das
jg
shll
and
orl
or
dec
popf
fsts
and
lods
push
test
dec
push
inc
mov
jo
mov
insb
adc
mov
jecxz
rol
cmc
gs
lret
xchg
mov
adc
pop
std
cmp
sbb
dec
and
xchg
cmp
pop
decb
ret
mov
xor
ds
nop
xlat
jo
inc
add
push
test
push
inc
mov
adc
dec
jmp
adc
mov
jo
inc
mov
loope
int
fwait
mov
scas
js
jl
xchg
sbb
sub
or
cmp
push
sub
inc
xchg
sahf
rolb
cwtl
cmpsb
inc
mov
xlat
inc
clc
pushf
lea
adc
xor
jns
repnz
mov
addr16
lds
add
add
pop
dec
lcall
sub
push
lods
fsubrl
inc
mov
and
fsubr
ljmp
xchg
daa
mov
movsl
stos
lock
mov
mov
inc
shrl
cmpsl
pop
or
and
sub
adc
push
rcrl
mov
jb
or
inc
xchg
jge
and
nop
or
sti
push
or
inc
cmc
insl
mov
mov
clc
jae
push
pop
fcomps
call
cmp
mov
push
rcrb
lods
outsl
repnz
mov
sahf
mov
sti
lock
iret
addl
sbb
mov
mov
movsb
mov
cmpxchg
outsl
or
rcrb
ss
dec
nop
push
inc
sbb
in
fs
pop
mov
jmp
xchg
and
push
fldcw
repz
sub
pop
ret
jae
cld
sbbb
push
mov
xor
pusha
mov
cs
mov
lcall
fcomip
outsl
mov
jns
rolb
and
push
inc
xor
lods
jp
je
fs
fsubp
scas
shl
call
jecxz,pt
cmpb
cmp
mov
in
call
dec
pusha
das
push
inc
and
dec
stc
pop
loopne
inc
jb
mov
mov
popf
lahf
mov
xor
xlat
and
insb
sbb
test
lahf
popa
stc
and
loope
dec
pop
sub
lahf
mov
lahf
mov
dec
adcl
jecxz
lcall
roll
fsubp
mov
inc
sarl
lret
mov
adcl
clc
sub
fistl
or
lea
xchg
orb
out
and
pop
dec
ljmp
and
jns
adc
sub
out
sbb
mov
xchg
lcall
insl
mov
cmp
scas
sbbl
dec
pop
jmp
repz
and
in
fiaddl
xchg
mov
lods
jnp
negb
mov
popf
ret
pop
sub
cltd
add
imul
pop
mov
push
inc
pop
fsubrp
mov
adcb
jns
js
rclb
jb,pn
xchg
ret
mov
xlat
test
add
stos
pop
adc
test
call
cmpb
mov
push
call
and
js
sub
xchg
and
icebp
jl
mov
and
xor
outsl
js
or
int
pop
pop
or
push
pusha
cmovbe
and
daa
ret
lcall
lret
cld
dec
pop
test
push
fdivr
inc
mov
test
mov
jg
mulb
jl
dec
loope
ret
cmp
cwtl
nop
aad
or
aam
or
hlt
daa
jecxz
push
add
popa
pop
and
dec
pop
xor
push
pop
pop
sbb
cs
push
xor
pushf
push
mov
dec
inc
dec
lock
in
mov
push
xor
in
out
cmp
mov
out
mov
push
jp
xor
shlb
ret
jge
cli
mov
cmp
adc
orb
sbb
je
into
sub
inc
inc
ret
mov
fcom
push
data16
cmpsl
add
lods
call
cmp
mov
sti
or
jno
fcos
jb
mov
mov
je
push
jmp
jecxz
jp
test
aas
in
movsb
je
insb
fidivrs
cltd
mov
add
jg
or
bound
or
jecxz
dec
or
cmpsb
stc
test
sti
push
pusha
iret
lret
sub
pop
pop
pop
call
bound
flds
ret
call
and
add
cmpsl
jg
pop
repz
push
aad
sti
adc
xchg
inc
sti
pop
ret
aam
jge
mov
fcomps
dec
and
add
xor
xor
arpl
shrb
mov
shll
jns
daa
lods
imul
mov
pop
idivb
outsb
adc
int
xor
sub
int
jae
push
inc
out
push
and
jno
add
add
pop
inc
inc
popf
lret
ss
dec
das
xor
js
push
dec
subl
into
insb
mov
std
sub
lahf
daa
xchg
hlt
cmc
popa
xchg
mov
pop
inc
or
fisttps
test
or
adc
mov
or
pop
jle
daa
adc
adc
mov
in
jle
int
fdivs
int
popf
fsubs
imul
cmpsl
inc
mov
jmp
lods
cmpsl
dec
cmp
adc
add
dec
mov
fldcw
cmc
xchg
mov
mov
pusha
outsb
scas
andb
or
sub
aad
dec
jle
jge
xchg
lods
test
xor
adc
push
push
icebp
adc
push
call
lcall
mov
shrl
add
clc
mov
ds
pop
loop
pop
arpl
mov
subb
inc
and
jmp
out
adc
stos
jmp
dec
inc
sbb
or
mov
cmp
xor
adc
ret
cmc
xchg
mov
test
pop
sbb
pop
sbb
sbb
jb
popf
push
sahf
jae
cmp
dec
fwait
cmpsb
adc
scas
add
out
push
jbe
mov
inc
sbb
add
aam
std
negl
cmp
data16
faddl
fnstsw
mov
fsts
jo
fadd
loope
cmc
mov
adc
jge
out
xor
daa
fldl
out
dec
sahf
pusha
fincstp
push
lcall
cmp
and
data16
das
dec
mov
dec
insb
jns
pop
xchg
scas
lret
out
xor
icebp
mov
dec
das
aad
int
sbb
js
mov
enter
add
adc
xchg
pop
cmp
push
test
cmp
sahf
ss
sti
pop
mov
iret
cli
jmp
adc
dec
sbb
push
rep
mov
imul
stos
pushf
and
sbbl
stos
cmp
push
andw
xlat
xchg
dec
ret
fmull
sub
subb
out
add
sbb
jne
push
push
pushf
cli
sbb
add
mov
pushl
lahf
fwait
xor
mov
dec
xchg
movsb
pushf
cltd
dec
push
fxch
inc
outsb
cmp
inc
std
xor
mov
push
pop
mov
rcrb
inc
cmpsb
xchg
sub
jo
rcrb
inc
jecxz
cld
pop
cmp
mov
lods
pop
xchg
sarb
mov
test
outsl
addl
popa
es
call
invd
mov
rolb
mov
sahf
sub
sahf
cld
subb
ret
pop
stos
movsb
in
pushf
movsl
scas
add
mov
inc
test
xchg
inc
cmp
pushf
cmp
cltd
mov
mov
and
loop
mov
pushf
sbb
xchg
fmulp
or
cmc
mov
ss
push
fxch
test
xor
push
lcall
xor
push
or
jle
jo
push
jl
and
loope
jns
sti
popf
adc
xchg
imul
push
loopne
and
pop
fidivl
in
outsl
xor
arpl
notb
or
pop
mov
mov
inc
decl
pop
mov
add
mov
aaa
cltd
cmp
mov
jp
dec
fwait
pop
test
popa
std
mov
aaa
jl
sub
out
sbbb
sub
in
or
inc
jl
pop
int3
out
mov
and
jb
mov
bound
pslld
fnstsw
arpl
dec
pop
inc
lock
mov
popa
sub
mov
push
scas
dec
pop
in
ja
xor
push
insl
pop
aad
sti
stos
sarl
adc
push
inc
ja
sub
jno
mov
vpcmpeqw
pop
sbb
sub
sbb
ja
sahf
push
fisubl
out
lea
inc
push
jnp
dec
icebp
rcl
jp
lea
add
and
lcall
adc
int
xor
or
pushl
pop
iret
mov
pop
cmp
test
daa
sbb
sub
idivl
cltd
or
push
sbbl
sti
mov
cmpl
clc
xor
lcall
sbb
jp
xor
outsb
xor
scas
sahf
orl
cli
jb
imul
daa
clc
shlb
or
mov
test
jne
push
and
or
mov
or
mov
nop
pop
decb
out
mov
xor
dec
cmpsb
stos
std
cld
cmp
cltd
pop
jge
lahf
fisubs
xor
jo
jno
xchg
xor
mov
pop
dec
cmp
repnz
push
je
jg
sbb
test
jge
mov
std
aad
cmp
sbb
leave
dec
cmpsl
lods
cmpb
sbb
roll
cld
jae
rorb
sbb
decl
pop
stos
jl
adc
bound
lods
test
mov
xchg
cmp
pop
inc
cmp
pop
popf
int3
mov
xchg
ficoms
lods
pusha
arpl
push
shlb
rcl
xorb
mov
push
js
and
icebp
pop
orl
mov
xor
sub
aaa
popf
arpl
dec
cmp
inc
test
mov
sub
and
push
jae
push
out
jle
cmpsl
mov
cli
movsb
mov
push
fidivrl
or
xor
pop
popf
inc
outsl
lds
scas
xchg
adc
push
pushf
in
arpl
sub
cmc
je
sub
adc
int3
ja
cmc
push
cwtl
je
mov
mov
jo
push
push
jg
jae
pmaddwd
pop
divl
loop
mov
gs
mov
push
jecxz
adc
xchg
cmp
ljmp
mov
mov
shlb
cmp
mov
push
lret
or
cmpsl
dec
mov
stos
cmp
adc
aaa
push
mov
mov
mov
fldcw
ds
cs
les
mov
ret
scas
push
push
ret
mov
mov
arpl
aas
or
mov
push
mov
mov
stc
sbbl
inc
fwait
iret
std
addl
pop
mov
stc
mov
pop
das
fwait
push
aas
or
in
pop
cli
adc
push
push
or
es
sti
sahf
subb
cmp
lahf
lods
add
out
outsl
ret
cmp
mulb
loop
lret
sti
sub
nop
in
xchg
and
sbb
adc
jae
sub
adcl
frstor
mov
lock
scas
mov
jb
fadds
fldenv
push
jnp
sti
scas
gs
mov
push
sub
sbb
push
adc
xlat
out
cmpsl
xchg
ds
xchg
pusha
push
jae
pop
fwait
repz
jp
stc
xchg
loop
sbb
outsb
xor
aam
push
mov
inc
loopne
shr
fstpl
mov
dec
shl
jecxz
mov
add
arpl
inc
pop
ret
mov
mov
and
out
mov
cltd
sahf
rorl
pop
mov
mov
push
push
mov
mov
adc
pusha
inc
scas
xchg
sbb
sti
ds
ffree
push
push
jl
fucomi
xchg
or
cmpsl
mov
mov
fwait
jmp
out
loop
addr16
je
shll
cmc
adc
mov
jp
add
xchg
fwait
or
aad
pop
les
ss
and
jecxz
cmp
push
test
outsl
je
xor
jne,pn
divl
cmp
cmpsl
inc
lea
fs
add
add
scas
pop
loop
aaa
sbb
lret
push
sub
mov
movsl
adc
js
out
or
sub
cmpsb
mov
push
stc
mov
pushf
add
mov
mov
insb
bound
push
dec
pop
outsb
push
outsb
xchg
mov
xchg
out
lods
adc
stos
fs
push
and
std
fsubl
sar
in
lahf
fistps
stos
bound
ficoml
icebp
pop
dec
cltd
xchg
sahf
stos
gs
xlat
xchg
lret
and
mull
xor
in
sub
pop
push
sub
push
and
ss
push
inc
iret
ja
xlat
gs
xchg
add
sub
xor
jbe
mov
insb
in
push
jo
adc
popa
adcl
clc
lods
icebp
mov
or
shll
push
sbb
sub
jecxz
in
push
dec
mov
push
ret
push
push
cmpsl
fstpt
stc
cmp
ljmp
ret
mov
cli
pop
aad
sbb
sbb
sti
jae
pop
xor
pushf
jae
jae
testl
sbb
push
push
int3
shr
and
stos
ss
cmp
insb
mov
sbb
enter
fsubs
jb
xor
sti
sahf
jecxz
les
add
mov
in
xor
leave
push
push
and
or
int
int
fistpll
adc
insl
sub
jae
push
cmp
push
movsl
enter
dec
push
cmpsl
push
sub
jle
mov
outsl
popf
ljmp
enter
sub
xchg
jo
add
mov
es
or
and
mov
mov
pop
lods
mov
jns
pop
mov
and
xchg
xchg
pop
ret
xlat
and
mov
sub
aaa
int3
xchg
fldcw
xchg
xchg
jns
roll
dec
or
xchg
mov
outsl
fimull
inc
inc
jl
adc
insl
outsb
xchg
loopne
xor
xchg
lock
or
or
mov
stc
push
divb
lods
push
adc
lods
adc
lds
loope
jne
mov
loope
or
rcll
push
push
xchg
in
cmpsl
cmp
push
les
aad
sub
jns
lds
mov
xor
sub
jmp
push
push
je
lock
ret
jl
arpl
sub
pop
int3
cmpl
call
mov
or
mov
in
cwtl
push
dec
test
mov
push
jnp
and
xchg
pop
mov
rol
ss
jecxz
xor
xchg
fisttpll
cltd
dec
daa
std
xor
push
push
sti
aaa
ret
pop
mov
inc
xchg
xchg
dec
pop
popf
xchg
or
pop
pop
mov
movsl
pop
pushf
pop
jg
cmp
das
mov
stc
fsubr
sbb
sbb
icebp
ja
jg
js
rcl
sub
push
mov
push
sbb
cld
jp
cli
push
stos
cmpsb
test
scas
clc
div
dec
fldcw
cmp
fistl
inc
loop
bound
rcll
insl
out
sub
adc
test
pop
xor
adc
xlat
mov
pushf
stos
xor
lret
mov
fiadds
or
loopne
or
and
sar
daa
popf
sub
xchg
je
add
cld
lods
addb
scas
dec
mov
lods
je
call
ret
push
sub
aad
in
pop
push
pop
roll
repnz
dec
cwtl
jns
add
or
push
repz
cs
push
pop
inc
cmp
xchg
or
mov
jge
push
fnstenv
out
gs
gs
repz
sti
mov
inc
fsubs
shr
mov
push
loop
sub
data16
inc
pop
dec
cmpsb
xchg
es
fldenv
cmp
push
loope
mov
test
dec
fsubs
jnp
fmuls
dec
xlat
mov
cmpsb
pop
push
repnz
pop
mov
or
jne
pop
mov
xchg
mov
movl
mov
cmp
gs
sbb
shrb
scas
fdiv
push
xor
lock
pop
or
xor
add
and
sbb
cli
add
daa
xchg
mov
xchg
cmc
sub
leave
adc
push
js
aaa
dec
or
insl
pop
scas
dec
lods
pop
loop
repz
and
stos
inc
scas
dec
in
loop
xchg
sub
cmpsl
add
sbb
xor
into
or
pop
mull
xchg
pop
sbb
sahf
add
divl
roll
in
das
lock
jne
jb
sub
fistl
cmp
jg
adcw
xchg
mov
lcall
and
xchg
xor
jecxz
pop
fistpl
js
lods
repnz
pop
outsb
inc
push
mov
inc
push
xlat
inc
mov
sbb
inc
popa
push
or
mov
pop
or
stc
adc
bound
ret
dec
out
adc
lods
inc
and
faddl
clc
xchg
cmp
cmpsb
pop
mov
pusha
push
incb
push
cli
jbe
dec
push
aad
popa
loop
or
sbb
sub
push
xchg
cs
iret
loope
call
leave
mov
dec
neg
mov
cmp
movsl
inc
mov
lahf
mov
and
ss
les
jp
mov
mov
xchg
push
mov
inc
push
call
les
hlt
pop
mov
pop
aam
push
jle
rcl
rolb
push
in
fmul
mov
icebp
ljmp
sarb
aad
jns
push
outsl
lea
int
jo
pop
fwait
mov
and
mov
sahf
or
icebp
sbb
ret
xor
test
dec
fs
lods
aas
jge
sbb
pop
adc
and
sbb
mov
clc
leave
sbb
dec
cmp
fidivl
stos
sbb
daa
cmp
enter
fsubrs
test
xor
xchg
pop
std
cmp
cmp
pop
dec
add
scas
popa
pmulhw
mov
pop
adc
dec
push
fcoml
mov
mov
insl
sbbb
decl
out
pop
sbb
pop
fistps
out
inc
xor
push
xbegin
stc
inc
das
mov
lock
popa
leave
sub
push
dec
lock
adc
mov
mov
repnz
adc
std
sub
out
jl
pop
mov
fisubrs
xchg
stos
cltd
add
js
scas
leave
js
mov
clc
loopne
dec
repnz
jne
cmp
cbtw
cs
mov
xchg
mov
inc
xchg
mov
xchg
pop
movsl
jl
lock
out
push
pop
xor
clc
mov
or
mov
sbb
test
mov
out
rolb
cmp
inc
into
das
jecxz
or
sbb
jmp
loopne
sub
mov
aam
jnp
mov
hlt
movsl
mov
mov
loop
cltd
push
jge
test
ja
or
fisttps
mov
or
xchg
faddl
mov
aas
sahf
cmp
arpl
pop
test
xlat
push
outsb
sbb
rclb
sub
test
mov
lahf
mov
cmp
add
shl
mov
push
push
and
rclb
test
in
out
je
popa
call
test
cli
mov
and
and
rol
imul
xor
arpl
icebp
lcall
ret
mov
cli
outsl
lock
out
mov
cmp
in
fistps
xor
dec
testb
movsl
pop
adc
cs
cmp
mov
cmpsb
pop
rcll
adc
mov
xor
cmpsl
dec
mov
movsl
inc
pop
shlb
cs
imul
loopne
mov
sub
inc
movsl
enter
mov
loopne
push
addb
or
call
cmpb
mov
push
les
push
xchg
dec
nop
pushf
mov
pop
mov
dec
inc
daa
stos
push
lahf
pop
stc
ja
ljmp
xchg
loopne
inc
gs
or
sub
xchg
out
and
hlt
add
insl
sbb
push
jnp
sub
out
das
out
xchg
popf
lcall
fcompp
pop
fs
sti
adc
icebp
int3
shrb
inc
repnz
sbb
mov
xor
mov
test
add
arpl
popa
test
fists
add
in
xor
pop
pop
cmp
or
add
loope
icebp
and
inc
inc
jbe
ds
push
or
hlt
xor
mov
subl
pop
mov
aaa
mov
mov
decb
mov
lret
mov
stos
xchg
adc
mov
push
push
cmpl
sbb
adc
adc
ss
mov
cwtl
jo
ja
mov
xor
mov
paddw
inc
test
shl
mov
mov
jae
add
mov
leave
fucomp
in
cmp
loope
pop
arpl
in
mov
sbb
pop
into
stos
adc
fisubrl
cmp
sqrtps
lods
mov
mov
add
add
dec
dec
dec
sbb
sbb
lods
shl
mov
in
cmp
mov
int3
into
jo
std
stos
inc
bound
and
dec
pop
xchg
lock
mov
pushf
inc
cmp
mov
mov
push
cmc
loop
ljmp
jmp
adc
in
lea
out
mov
in
sub
fs
roll
dec
add
and
mov
inc
jp
adc
or
and
xchg
daa
imul
ds
pop
mov
mov
sar
mov
add
or
shrl
inc
or
sar
sub
mov
jmp
out
or
jge
aam
rolb
or
test
adc
es
popl
lds
push
mov
test
rolb
xor
out
aas
repz
dec
mov
imul
es
push
push
push
data16
inc
inc
push
push
cmpsb
cmpsb
mov
xchg
div
mov
es
push
push
push
data16
inc
inc
push
push
cmpsb
cmpsb
mov
xchg
div
mov
es
push
push
pop
data16
inc
inc
push
push
cmpsb
cmpsb
mov
xchg
div
inc
push
fldenv
leave
pushf
lods
push
push
popa
adc
decb
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sbb
sub
sbb
or
cltd
push
mov
mov
jnp
in
pop
jmp
stos
cmp
dec
sti
jns
imul
leave
imul
mov
sub
jns
imul
lret
jle
xor
pop
mov
xchg
testl
in
sbb
dec
sub
cmp
data16
cli
or
fchs
je
test
and
xchg
movsb
int
jb
lahf
xor
les
hlt
es
xor
loope
add
test
aam
jo
rolb
xchg
cltd
cmp
sub
ret
hlt
jns
inc
rcrb
or
test
pop
sti
pop
sti
xchg
cltd
aad
in
xchg
inc
mov
pop
out
jge
push
fs
loop
inc
sahf
js
push
aam
jecxz
mov
jns
jnp
or
into
out
xor
jle
leave
add
fwait
leave
push
jecxz
inc
in
hlt
in
enter
orl
subb
pop
sti
dec
jmp
fldt
cltd
cmp
adc
arpl
jae
inc
jmp
fstps
out
xor
mov
scas
fcoms
ficompl
lds
push
mov
daa
sbb
jnp
imul
and
stc
cld
dec
mov
jle
or
jmp
stos
push
ljmp
into
pop
enter
fldt
cltd
cmp
or
jnp
imul
jmp
stos
cmp
dec
jmp
fldt
cltd
cmp
or
jnp
imul
jmp
mov
xorl
or
jge
jg
adc
mov
add
js
push
sub
jno
cmp
jge
cmp
aad
inc
jbe
mov
adc
repz
push
push
push
scas
dec
jl
fdivs
pop
mov
pop
push
dec
stos
mov
inc
push
outsl
loopne
cs
sbb
lods
jae
ljmp
add
push
std
push
add
test
xsaveopt
fistps
pusha
data16
call
pop
adc
in
or
mov
rcrb
lods
loop
mov
fldt
insb
inc
out
sbb
out
lret
jge
ds
stc
pop
ljmp
in
shrb
imul
movsl
add
lods
add
int3
xor
leave
jno
stc
pop
popf
sub
xchg
sub
sbb
jae
or
mov
inc
sti
gs
xor
out
repz
sbb
xchg
sbb
int3
xchg
sbb
imul
jle
xchg
test
loop
or
test
push
insb
xchg
test
pusha
jo
pop
inc
push
lea
ret
rolb
and
mov
addr16
ror
jecxz
dec
out
fildll
shrl
mov
test
push
test
ficompl
stc
daa
pop
test
pushf
push
sub
neg
add
push
call
fwait
inc
std
push
popf
pop
xchg
into
je
dec
xchg
dec
push
push
dec
enter
stos
inc
subl
fdivr
inc
dec
clc
inc
clc
inc
into
and
add
xor
cltd
xchg
or
movsb
imul
aas
sub
and
lret
mov
icebp
dec
sub
pop
lahf
enter
inc
add
jge
xchg
subb
repnz
push
ja
add
cmp
inc
push
iret
in
mov
and
fdiv
clc
push
fsubrp
and
lods
roll
sbb
pop
mov
push
mov
inc
ds
or
cmpsl
xchg
lea
movsl
jno
jbe
movsl
mov
jno
ret
test
repz
inc
mov
cmp
mov
imul
cmp
out
cmp
adc
push
fcoms
sub
jge
jbe
jb
mov
in
mov
pop
dec
test
cli
dec
sub
in
loop
popa
dec
popf
aas
fisubrs
sub
in
adcl
push
les
mov
sub
pop
daa
enter
frstor
dec
shlb
ret
xchg
data16
enter
jne
nop
xor
ret
cmc
out
mov
cli
sbb
xchg
aad
pop
mov
dec
iret
add
daa
push
push
sti
or
movsb
push
fiadds
pop
jecxz,pn
push
xadd
push
inc
pop
jae
mov
jg
sahf
dec
add
xchg
ss
in
sahf
test
mov
repnz
lcall
lcall
nop
aas
sub
sbb
jbe
out
xchg
inc
stos
lea
adc
cmp
test
push
jg
in
mov
aas
cmp
sar
sti
mov
push
jmp
lock
and
jmp
pop
fcomi
mov
xchg
stc
mov
dec
push
out
sub
pop
out
mov
out
mov
sbb
into
add
ja
dec
push
pop
jo
cltd
scas
sbb
or
mov
in
mov
cmp
hlt
adc
mov
scas
test
push
adc
fdivl
xchg
jl
nop
adc
xor
addr16
dec
push
ret
push
mov
xchg
add
imul
pop
inc
scas
leave
adc
sbb
jge
mov
popf
inc
xchg
stc
jno
jb
jl
movsl
fwait
lret
sbb
sub
dec
shl
sbb
test
loopne
pop
mov
push
aam
mov
out
inc
pop
mov
xor
rclb
pusha
loope
test
push
pop
jo
repnz
mov
pop
add
dec
outsl
jno
fs
lock
sbb
pusha
sbb
jbe
xchg
insb
jge
lds
mov
jnp
dec
adc
mov
jo
lock
push
pop
faddl
aaa
pop
nop
cmp
cmp
pusha
and
data16
ja
xlat
arpl
test
clc
incb
iret
int
in
stos
pushf
mov
pop
pop
mov
in
lds
and
icebp
stc
cld
fsubrl
idiv
xchg
push
push
test
jmp
mov
sub
mov
out
dec
jmp
lahf
scas
rcrl
loope
adc
pop
cltd
pushf
xchg
lods
addr16
out
sub
ja
addl
mov
test
dec
sbb
sarl
push
lret
das
push
xchg
and
outsl
mov
loopne
mov
ss
ffree
pop
loopne
xchg
push
fwait
and
insb
cmc
cmp
aam
movsb
jbe
mov
adc
iret
sbb
test
cmp
push
movsb
adc
rcl
xchg
push
jp
imul
and
rcrl
jecxz
sbb
or
std
jl
jmp
leave
xor
jno
or
pusha
std
rcl
mov
ds
push
sbb
je
xor
inc
mov
and
push
les
xchg
jo
cmp
int3
push
or
rclb
jg
loop
mov
lret
enter
mov
or
dec
leave
and
add
pop
cmpsl
inc
cmp
popf
arpl
cmpsl
cltd
adc
jne
cmc
xor
cmp
pop
mov
sbb
pop
gs
xchg
xor
cmpsb
loopne
int3
imul
push
dec
xor
cmp
mov
sti
jbe
fisubrl
jo
pusha
add
movsl
jmp
decb
repz
gs
inc
hlt
jb
add
adc
add
aam
or
sub
push
adc
and
dec
mov
mov
imul
xchg
jle
push
cli
mov
push
mov
rclb
jle
push
out
xlat
push
into
adc
xchg
and
mov
daa
cltd
cmp
cmp
add
or
das
mov
in
and
jne
cmpsl
cmp
call
call
add
mov
dec
jg
sub
add
js
fcomip
fs
inc
fsubs
mov
shlb
bound
jl,pt
xor
sbb
out
call
jle
rcrb
push
adc
jno
or
sbb
mov
aaa
sbb
cs
fimull
xchg
pop
jmp
imul
mov
push
sbb
inc
sti
xor
andb
int
les
jo
outsl
insb
or
xor
fmul
or
movsb
insb
loopne
ja
push
jbe
ds
cmp
rorl
out
pushfw
sub
xchg
dec
inc
clc
int
push
lahf
cwtl
out
jecxz
jl
mov
addb
jmp
or
lret
scas
sub
jl
sbb
scas
add
mov
lahf
xchg
ret
stc
mov
stc
adc
xchg
sub
jmp
add
movsb
pushl
leave
pop
ret
nop
icebp
cli
daa
test
pusha
push
and
ffreep
lahf
in
pop
jne
cmp
dec
pop
jge
mov
pusha
test
sbb
enter
jno
pop
adc
in
ret
pop
fcoml
adc
xor
jnp
pop
xlat
loope
cmpsb
in
into
sub
shll
lods
cmpb
into
mov
xchg
push
stos
and
in
sbb
stos
lds
clc
dec
push
push
fs
push
addr16
gs
std
or
mov
out
pop
mov
in
or
mov
imul
push
mov
lcall
xor
mov
dec
push
jecxz
xchg
dec
inc
leave
inc
sbb
or
insb
mov
daa
je
xor
cmp
inc
and
repz
xchg
arpl
push
xchg
fists
add
imul
push
nop
sub
sbbl
jb
xor
lds
or
fst
pop
outsb
add
xchg
inc
push
push
pusha
fst
mov
nop
mov
mov
aas
shl
ds
in
fisubrs
cmp
bound
xor
lahf
insl
pop
hlt
or
mov
adc
out
pushf
loope
xchg
test
jo
sbb
mov
clc
jl
fbld
adc
insb
adc
insl
mov
mov
adc
xchg
jne
lods
sti
addb
inc
and
mov
fstl
dec
out
inc
cmp
mov
hlt
mov
int3
dec
cli
mov
std
dec
lods
mov
int3
out
push
fwait
push
mov
jbe
jl
mov
test
xor
mov
add
push
hlt
xchg
movsl
insl
push
loopne
icebp
inc
push
mov
mov
or
shlb
push
pushf
lods
mov
scas
sub
push
mov
insl
cmp
adc
dec
push
fldcw
cmp
mov
add
add
gs
push
icebp
int3
sub
in
add
mov
add
dec
dec
sub
sub
cltd
cs
add
sub
inc
push
imul
xchg
js
lds
sbb
mov
push
jle
ret
or
xor
cmpsl
sti
rol
lods
ficoms
jge
rolb
xor
out
ds
out
mov
sbb
cmp
pop
imul
and
xor
push
repz
repnz
mov
fwait
push
add
or
adc
arpl
pop
lcall
hlt
inc
lea
out
jb
or
dec
xor
scas
in
fcomip
movsb
adc
lea
hlt
xchg
loop
inc
pop
jge
jne
sbb
push
jne
das
jp
mov
add
mov
cmp
inc
xor
fwait
add
inc
cli
pop
inc
lods
adc
shrl
std
mov
icebp
sub
cmp
push
push
divl
add
fucom
push
in
jg
push
mov
push
in
shl
outsb
and
jp
mov
pop
rclb
and
sbb
xor
repnz
hlt
inc
sbb
xchg
sub
pop
and
sub
out
xchg
ret
push
mov
in
xlat
je
cmc
sub
dec
cmp
sub
jmp
add
pushf
mov
push
sbb
mov
inc
es
push
adc
add
and
pop
sub
in
pop
loopne
xchg
scas
sbb
leave
xchg
out
fs
ljmp
or
push
push
idiv
stos
jmp
in
dec
loope
addr16
cwtl
xor
repnz
push
add
rolb
sbb
jmp
mov
fidivrs
push
sbb
dec
xor
or
mov
div
cmp
push
ds
jbe
fldcw
scas
sub
into
xchg
dec
mov
mov
cld
mov
lret
and
fistl
adcl
adc
push
daa
imul
push
pop
xor
outsl
repz
ret
xchg
cmp
aas
add
push
sub
xchg
pop
rcll
mov
xlat
pop
popf
es
mov
mov
push
xchg
cmp
or
nop
das
mov
in
mov
int3
xor
daa
or
addb
pop
fstps
stc
inc
xor
out
es
pop
ljmp
data16
popa
mov
dec
insb
inc
pop
das
arpl
cmpsl
sub
inc
mov
xchg
sbb
xor
shlb
push
imul
test
jns
push
ret
cmpsb
cmp
call
in
iret
mov
inc
jno
call
rclb
add
stos
fiadds
xor
loope
lods
lods
pop
hlt
popf
xor
or
xchg
add
add
mov
push
test
cs
in
lahf
and
jmp
test
rcrb
js
or
call
icebp
je
es
adc
cmpsl
mov
jg
or
iret
mov
push
pop
jo
aad
sahf
and
mov
add
loope
or
nop
adc
mov
add
push
push
dec
enter
jae
push
pop
arpl
mov
mov
pop
and
pop
fisttpll
cmp
les
inc
mov
and
scas
lods
jns
dec
push
and
aad
inc
orl
jnp
inc
movsl
rorb
fwait
test
lock
in
mov
popf
into
mov
lcall
pop
pop
sbb
adc
add
push
jno
test
pop
and
xchg
pop
lea
mov
push
adc
es
nop
pop
negl
add
lcall
add
pushl
testl
adc
jae
jno
cmc
in
fisttps
scas
mov
and
test
repnz
inc
mov
inc
and
xchg
dec
inc
in
xchg
add
stos
push
cmp
idivb
divb
stos
stos
mov
and
inc
push
ret
sub
add
shll
pop
lcall
inc
pop
popf
xor
adc
lcall
fsts
push
jne
xchg
aad
andb
cmp
mov
sub
out
and
scas
adc
xor
mov
xor
mov
adc
mov
xchg
cwtl
add
mov
das
in
cmp
sub
inc
xorb
xchg
add
lock
mov
nop
mov
push
lods
xor
cli
aaa
mov
dec
fsubrl
sbb
xchg
mov
push
pop
and
or
pop
sbb
sub
adc
add
jl
or
addb
push
dec
lcall
push
int
gs
leave
cwtl
es
fs
jae
rcr
mov
pushl
jno
pusha
adcb
xor
negl
testb
mov
test
lods
adc
mov
cltd
sub
rolb
pop
pop
les
cmp
jne
scas
ror
or
xchg
insl
jns
repnz
or
mov
xlat
sbb
jnp
add
push
out
pop
and
mov
and
daa
cwtl
inc
dec
cltd
iret
dec
ds
and
repz
cli
dec
cmpsb
dec
adc
insb
dec
fistpll
push
mov
out
bnd
stc
sub
mov
imul
pop
jnp
out
pushf
pop
fs
sub
pusha
jp
mov
cmp
pop
push
fwait
xchg
cmp
mov
and
test
into
stos
shr
fs
jbe
adc
aam
sbb
mov
call
cltd
jp
les
mov
jmp
sub
jns
jb
dec
mov
push
ja
or
xor
fildll
call
sub
loop
mov
and
and
fwait
cmp
jns
mov
fsubrl
pop
xchg
xchg
dec
test
xchg
fs
push
push
cltd
mull
pop
shlb
cmpsl
in
and
call
ljmp
cmp
loop
adc
push
adc
pop
sbb
or
daa
add
jg
call
xchg
pop
pop
add
insb
outsb
mov
push
mov
addr16
int3
push
ret
or
stc
mov
jge
bound
cmc
popf
mov
es
mov
fwait
outsl
xor
lock
push
fisttps
div
and
int3
or
cmp
dec
loopne
xor
aaa
cld
int3
jmp
pop
enter
js
lret
dec
loop
xchg
int3
add
cmp
inc
test
test
xor
imulb
arpl
pop
push
fcompl
push
push
dec
xchg
jecxz
or
sbb
lcall
fildl
hlt
jo
mov
xor
loopne
cwtl
jmp
mov
inc
addr16
insb
inc
vmread
into
mov
je
mov
insl
fstpl
icebp
xchg
ret
sub
sarb
cmc
cmp
cmpsl
stc
cld
fsts
lcall
pop
repnz
imul
adc
lea
pop
jecxz
xchg
xchg
push
ja
test
pop
popa
cmp
xchg
in
out
andl
bnd
add
out
push
push
dec
rcr
mov
lahf
pusha
push
jae
subb
push
int3
addl
in
lea
and
pop
xchg
mov
jo
push
jae
inc
cltd
mov
cli
in
addr16
mov
enter
xchg
iret
push
mov
sbb
dec
movsl
ds
jnp
push
xor
sub
xchg
mov
int
and
jo
clc
popl
xor
outsb
add
lds
push
inc
mov
mov
push
jg
inc
dec
movsl
dec
mov
aam
add
ror
gs
pop
push
out
out
pop
and
dec
mov
jp
sbb
sahf
sub
test
lcall
xchg
std
adc
ret
cmpsb
pushf
mov
pop
xchg
sub
fisttpll
mov
movsb
push
loop
xchg
jp
and
lahf
mov
scas
xchg
add
ficoms
xchg
scas
jl
mov
in
push
and
mov
or
and
dec
cmpsb
push
jno
das
or
sti
in
shrl
test
out
xor
lcall
sub
sahf
movsl
cwtl
sub
fdivrs
push
mov
arpl
es
pop
lahf
fisttps
mov
ja
push
pop
jle
xchg
pusha
in
sarb
stc
lcall
xchg
dec
push
test
push
and
add
jl
subb
pop
addr16
into
xor
or
push
stos
jo
je
nop
hlt
lcall
pop
bnd
insl
sbb
inc
sbb
nop
inc
dec
mov
scas
jg
and
jl
in
cmp
mov
into
add
dec
das
mov
nop
nop
incb
hlt
inc
mov
or
inc
jnp
pop
mov
es
push
pop
mov
push
xchg
jne
fucomi
mov
imul
and
mov
ret
mov
adc
out
dec
aad
rorb
lods
mov
mov
and
mov
jbe
or
add
dec
ds
andb
nop
data16
adc
or
mov
inc
push
mov
inc
sbb
cmp
jle
or
pop
sbb
mov
mov
mov
movsl
test
test
mov
int3
stc
scas
pop
cmpsb
mov
andb
cmp
xor
mov
mov
xor
scas
push
xchg
push
mov
fwait
xor
das
add
stos
movsl
and
cs
outsl
sbb
fmuls
repz
jmp
stc
cmpsl
inc
fnstcw
clc
xchg
orb
je
mov
pop
sub
out
lret
cmc
and
jnp
pop
mov
ss
call
out
fucom
subl
rcrb
lds
xor
mov
xchg
dec
hlt
loope
cwtl
cmp
scas
iret
test
push
adc
mov
sub
jle
mov
iret
add
dec
mov
jle
dec
clc
jo
sub
cmp
or
rorb
jbe
repz
jnp
mov
aad
clc
dec
and
xchg
lret
adc
in
dec
lcall
cmpsl
jl
shrl
sub
pop
mov
xchg
push
cwtl
pop
jbe
add
lret
icebp
andb
push
or
mov
mov
cmp
inc
out
insb
and
jle
mov
iret
icebp
sub
movsl
inc
rcrl
cmp
mov
sub
scas
aad
dec
pop
or
test
sub
dec
stos
push
inc
xchg
iret
inc
inc
add
inc
lret
sub
mov
or
xchg
fistpl
and
das
test
aad
pop
das
popf
cld
mov
popa
stos
repz
adc
jo
dec
pop
stc
jl
ljmp
out
mov
push
fstpt
sub
cmc
clc
daa
cltd
sub
ljmp
out
movsb
or
iret
mov
in
sub
sti
cli
jge
xchg
adc
in
daa
fwait
cltd
aas
sbb
aam
xchg
adc
jbe
into
inc
push
or
pop
and
or
pop
add
pop
mov
les
mov
mov
adc
mov
cmp
test
ret
xor
aad
push
dec
incl
adc
ja
xchg
and
dec
pop
mov
in
push
pop
out
fstp
loop
pop
stos
dec
rclb
ret
cmpsl
lahf
mov
dec
mov
jecxz
imul
or
lahf
push
mov
sub
fwait
incl
push
ret
or
dec
in
sub
mov
loopne
fwait
cmp
push
outsl
dec
rcrb
cmp
jnp
popa
outsl
cwtl
inc
jp
jg
mov
loop
lret
pop
testb
and
rcrb
movsl
or
adc
mov
faddp
std
pusha
insb
fcmovnu
mov
push
push
shrb
cmp
out
adc
fwait
or
mov
pop
movsl
jmp
xchg
push
ret
repz
pop
pcmpgtb
adc
outsb
repz
cmp
popf
xor
inc
xchg
pop
popa
dec
sub
stos
lcall
lods
aam
xchg
and
push
add
mov
int3
in
and
adc
jae
roll
insb
jb
or
faddl
sti
cmp
dec
aas
pop
stos
inc
mov
mov
jmp
jl
sbb
shlb
and
push
and
aad
inc
cs
test
cli
sbb
sub
mov
imul
daa
sbb
adc
add
iret
pop
pop
pop
jecxz
negl
push
cmp
sub
lods
mov
arpl
xlat
rcll
mov
and
xor
data16
push
mov
jae
lret
push
aad
fwait
push
jl
out
add
in
add
sub
test
fidivrs
xlat
adc
mov
mov
mov
rcrl
mov
insl
mov
push
and
xor
test
movsl
pusha
push
divl
and
popa
and
ret
aad
lods
push
je
fcoml
jg
sub
ss
cwtl
dec
loope
sbb
or
fadd
add
cwtl
inc
pop
imul
mov
push
pop
clc
mov
gs
push
ret
outsb
add
mul
sub
push
je
cltd
dec
cmp
push
test
cmc
test
sbb
clc
arpl
shll
xchg
in
mov
aas
mov
hlt
add
mov
add
mov
mov
sub
xchg
inc
xor
ret
cmp
mov
jge
or
push
dec
adc
fnstenv
inc
xor
sub
sub
mov
test
adc
cmp
movsl
test
pop
pushf
jle
jge
pop
daa
repz
xchg
jo
dec
jne
jmp
ljmp
pop
and
gs
lods
adc
sub
daa
call
xor
xorl
jp
dec
ret
mov
dec
outsb
fidivl
pop
mov
loop
into
sub
and
popa
and
les
mov
push
push
les
or
mov
stos
fwait
sub
jns
imul
mov
jnp
imul
jmp
stos
cmp
dec
jmp
fldt
cltd
cmp
or
jnp
imul
jmp
stos
cmp
dec
jmp
fldt
cltd
cmp
psubusw
imul
jmp
scas
cmp
dec
jmp
fldt
cltd
cmp
jl
repz
adc
and
xor
int3
int3
int3
int3
bswap
sbb
sub
cmp
dec
mov
push
inc
shlb
test
cmc
fsub
in
aad
lds
sbb
inc
adc
pop
jmp
mov
mov
in
xchg
cld
lds
in
push
dec
cmp
jb
jl
call
lret
cmpsl
mov
mov
dec
sub
push
push
dec
inc
pop
out
mov
push
popf
lret
mov
pop
repz
xor
mov
fsubrl
nop
clc
fwait
loopne
loopne
lods
dec
mov
cltd
loope
icebp
pop
jp
call
xchg
xor
andb
aam
dec
repnz
and
sub
test
sbb
into
fidivrl
pushf
and
aad
in
adc
je
leave
add
pop
or
lea
cmc
sub
fcompl
in
cmp
adc
or
mov
and
pop
testl
push
stc
test
lock
cmc
sbbl
xchg
adc
cwtl
int
push
popf
inc
hlt
sbb
aad
inc
push
xor
cmp
test
and
insb
fcmovb
dec
xor
arpl
test
cld
stos
outsb
and
and
xor
sbb
and
fldlg2
mov
xchg
cltd
movsb
inc
jo
fs
je
and
cmp
sub
ror
rep
lock
mov
test
bound
outsl
popw
adc
push
jl
mov
mov
in
aad
lds
cmp
dec
jne
gs
push
jl
mov
mov
in
aad
lds
cld
sub
mov
iret
push
pop
and
sbb
pushf
pop
addl
nop
mov
testl
repz
jecxz
lret
mov
push
cmp
mov
and
ffree
and
mov
testl
outsb
lcall
dec
jg
mov
mov
movsb
je
add
rcrl
cld
dec
daa
inc
mov
andb
inc
cltd
and
jecxz
add
sub
shrl
in
add
push
or
aad
xor
mov
test
lret
ret
adc
add
cld
loopne
movsl
cmp
mov
inc
imul
mov
add
pop
repnz
pop
jno
add
fnsave
xchg
dec
outsl
jae
mov
push
pop
sub
das
jne
fidivrl
jae
loopne
pop
cmpsl
das
aad
adc
cwtl
xchg
inc
push
iret
add
scas
mov
or
divl
mov
imul
mov
out
pop
cltd
jne
fwait
shll
lock
lahf
popa
xchg
jmp
xchg
lret
xor
incb
cmpsb
lods
sti
inc
mov
rcrl
jmp
sub
scas
cmp
inc
and
mov
mov
inc
push
jnp
roll
dec
xchg
xor
or
cmpb
jle
pushl
add
inc
jecxz
inc
test
in
push
aaa
divl
pop
sub
adc
mov
mov
subl
mov
movsl
popf
stos
nop
push
mov
and
imul
loop
mov
push
xlat
sarl
push
cmp
sbbl
in
or
sub
inc
int3
and
nop
and
fmull
push
cmp
ret
mov
fwait
das
xchg
test
push
sub
pop
mov
push
repz
rcl
inc
xchg
int
jb
xchg
cld
repnz
push
loopne
adc
xchg
jno
mov
push
xor
xchg
lds
pop
mov
lods
mov
lea
mov
mov
xchg
das
loop
data16
out
pop
into
mov
pop
sti
dec
dec
lahf
loop,pn
mov
aad
dec
fldenv
sub
jg
pusha
push
fisttpll
sub
mov
pop
movsl
fsubl
xchg
mov
nop
lcall
lcall
adc
std
int3
xlat
das
and
sti
xor
or
outsb
rorl
push
mov
mov
mov
sarl
movsl
fsubrl
lahf
loope
sub
adc
mov
add
cmpsb
push
repz
dec
cli
inc
inc
in
sub
pop
jbe
push
and
repnz
shrl
rsqrtps
mov
aas
lock
mov
mov
outsb
add
pop
xor
aas
in
inc
sbb
pop
xchg
ret
popf
adc
jne
scas
jns
cmpsl
sub
mov
icebp
push
sbb
pop
dec
jp
das
xchg
test
pop
hlt
ds
mov
cli
push
dec
mov
loopne
push
sub
push
cmp
adc
addr16
pop
stos
lret
mov
aas
xchg
test
and
dec
adc
push
fcoml
loope
test
pushf
aas
lea
xchg
pusha
fdivrs
inc
mov
ret
jecxz
pop
pop
xor
sub
push
aad
inc
jp
and
xchg
adc
and
aas
xlat
loop
inc
jge
push
test
lret
out
lret
dec
jnp
dec
sub
dec
loopne
lahf
dec
xor
mov
movsl
cmp
int
pop
pop
lock
lea
or
jecxz
insl
cwtl
das
daa
mov
sbb
fldenv
lret
inc
out
mov
xor
mov
stos
daa
push
movsl
pusha
aam
sub
int3
xchg
sub
or
push
cmpsb
pop
cmp
rcll
sti
addb
or
cmp
xchg
data16
rcrb
mov
sbb
int
jmp
fisttpll
sub
in
xor
call
cli
test
lcall
popa
shlb
sti
push
xor
loop
lret
pop
cmp
in
gs
jp
pop
jle
enter
leave
ret
xchg
mov
lods
popa
pushf
cmp
sbb
sub
ds
inc
ljmp
std
add
bound
pop
push
pop
sbb
add
inc
popa
mov
sub
mov
fidivs
mov
adc
cltd
inc
dec
sarb
lahf
int3
stc
les
xchg
fs
push
daa
cmc
hlt
mov
mov
mov
xchg
leave
pop
jle
push
cmp
jns
das
mov
lret
mov
fwait
ja
cmp
loopne
mov
mov
and
or
jl
addr16
xlat
xor
or
dec
loopne
insb
out
fisubl
sub
xchg
mov
xchg
or
mov
xchg
lock
pop
mov
into
or
pop
stos
jmp
add
dec
or
push
lods
inc
inc
cwtl
pop
les
pop
shrb
cmp
push
mov
je
ret
lcall
es
adc
cmp
adcl
ret
push
daa
xchg
mov
xchg
or
cli
mov
movsl
sbb
and
rcl
cs
data16
push
ret
cwtl
mov
cmc
imul
insl
mov
inc
dec
sub
hlt
movsb
enter
xchg
cmp
ret
jecxz
lock
xchg
push
imul
sub
leave
test
inc
sahf
cwtl
aaa
cmpsl
xor
adc
inc
rcr
fcomi
xor
sbb
mov
inc
lret
sub
xlat
nop
jg
mov
into
adc
and
push
and
sbb
clc
push
iret
dec
xor
loopne
sti
imul
xchg
pusha
mov
jle
fidivl
mov
sbb
adc
inc
lcall
or
sbb
cli
pop
jmp
cmpsb
sub
push
xchg
fnstenv
daa
mov
sub
negb
fstpl
jbe
or
addl
jns
adcl
pop
fimull
mov
ja
push
pop
mov
xchg
cwtl
pop
subb
jle
xchg
dec
lret
pop
jecxz
mov
mov
loop
hlt
and
cmp
xchg
cmp
xchg
fidivrs
jl
scas
fwait
jbe
sbb
mov
lods
jno
dec
add
mov
ret
outsb
sbb
mov
add
rolb
mov
jae
mov
imul
clc
inc
push
mov
lret
add
cwtl
cmp
test
cmp
repnz
std
jae
push
push
lret
loope
pop
jp
lcall
dec
mov
lock
inc
or
xor
push
inc
inc
inc
inc
mov
lds
ljmp
xchg
sbb
push
mov
hlt
ja
outsb
cltd
sahf
sub
jo
or
cli
sahf
popf
loope
jns
rolb
stc
mov
sbbb
jne
jne
scas
dec
pop
sti
stos
sub
les
mov
icebp
scas
sub
pusha
jbe
jl
cs
cwtl
mov
add
aas
push
pop
pop
or
test
add
inc
add
leave
mov
xchg
jmp
cmpsb
test
imulb
sbb
mov
mov
inc
cmp
push
jl
fistpll
jle
int
fdivrl
leave
in
xchg
jmp
mov
cli
sub
fucomi
cmpb
sub
mov
test
mov
out
add
inc
fisttpl
adc
xor
outsl
mov
jecxz
add
dec
cltd
xchg
adc
dec
inc
es
bswap
push
dec
cmp
scas
scas
ljmp
cwtl
sub
rcrl
sar
inc
fiadds
stc
cmp
cmp
mov
pop
push
ss
pop
mov
jmp
add
dec
inc
mov
xor
repz
nop
and
loope
cs
pushf
int
pop
cwtl
repz
mov
xor
cld
popa
xorb
roll
pushf
and
pusha
sbb
push
mov
adc
stc
xchg
lods
pop
out
inc
pop
test
dec
daa
or
jno
shrl
insl
push
fisubrs
adc
xchg
gs
or
cmp
int
sbb
dec
std
popf
xchg
push
bound
mov
test
inc
mov
outsl
sub
fsubrs
inc
les
test
xchg
cmp
lret
inc
adc
cmpl
mov
je
pop
negb
aas
movsb
movsb
cmpsb
push
aaa
stc
aad
ss
in
dec
repnz
pop
mov
sub
dec
cmp
jge
int3
std
cs
icebp
lcall
inc
rorl
int3
test
enter
aaa
sahf
mov
xor
leave
pop
mov
xchg
xor
lret
pop
sahf
dec
mov
dec
jne
jo
popa
mov
xchg
daa
aam
imul
cmp
into
sti
xor
mov
loop
int
andb
mov
cmp
insl
sbb
mov
xchg
jp
jmp
push
fisubl
inc
fs
sub
inc
int
jmp
push
lahf
mov
shll
fdiv
sbb
lret
arpl
push
imul
das
je
insl
xlat
sti
lods
mov
or
cmp
sbb
test
sahf
mov
jp
ss
call
sbb
cmp
mov
push
xor
orl
push
inc
jno
jl
xor
and
bound
jg
andl
shr
mov
dec
out
sub
mov
push
cmp
fdivrl
pop
adc
outsb
pop
add
imul
lret
xorb
rsm
pop
aad
cvtdq2ps
ds
movsl
mov
pop
sbb
out
dec
mov
jp
sub
lods
pushf
std
iret
outsl
mov
mov
mov
xchg
inc
mov
ret
or
cmp
xchg
aad
adc
push
cmpl
push
daa
arpl
push
mov
cmp
mov
jge
lock
in
cmp
fwait
data16
enter
hlt
add
mov
or
pusha
cmp
push
loope
into
mov
addb
in
dec
mov
enter
popf
push
sysexit
add
out
lahf
cld
test
jp
fs
jae
xorb
push
lret
pop
or
insb
outsl
xor
sbb
fstps
aam
or
scas
pop
push
dec
xor
into
sti
std
mov
stc
mov
je
mov
jae
mov
or
cli
pop
into
mov
and
aad
sbb
into
daa
stc
js
rcrl
adc
mov
movsb
js
pusha
cmp
sub
dec
mov
xchg
push
xchg
mov
das
mov
sbb
sbb
aas
mov
mov
mov
iret
in
push
cmp
aam
and
pushf
stc
add
mov
xchg
leave
sub
std
stos
leave
add
push
leave
cmp
cmp
fcmove
ret
xchg
cs
cmpsl
icebp
stc
imul
lds
cmp
jecxz
mov
xchg
cmp
jp
mov
pop
sbb
call
orl
cmp
cmpsl
add
dec
xchg
mov
inc
add
push
inc
sub
mov
in
push
add
mov
mov
and
push
push
enter
inc
sub
shrl
subb
mov
mov
jbe
add
outsl
std
les
sbb
and
iret
xor
repz
in
stc
into
xor
lea
push
lret
sbb
insb
push
sub
pusha
or
push
mov
mov
pop
add
sub
pop
sub
rol
xchg
inc
sbb
dec
in
mov
out
iret
int
dec
mov
push
pop
testb
loope
mov
jge
dec
or
xor
adcl
jno
or
pshufw
sub
fcompl
scas
mov
movsl
nop
out
or
adc
cld
cmp
xor
setnp
mov
insb
cmpsb
mov
jb
sub
lods
cmpxchg
aam
insl
divb
cmpsl
push
andb
imul
xchg
inc
pop
movl
cli
add
sbb
jne
mov
into
jbe
inc
mov
mov
js
pusha
out
mov
or
lods
mov
push
jg
jo
daa
enter
es
into
out
leave
lret
push
loopne
mov
sub
ss
scas
or
pop
xor
in
rcrl
push
mov
inc
sbb
inc
cld
lcall
ljmp
jbe
cmc
mov
sub
mov
jno
pop
mov
jno
call
pop
dec
mov
sbb
adc
mov
scas
shll
mov
inc
negb
xchg
push
mov
fdivrs
xor
mov
mov
mov
aam
dec
cltd
stos
pop
xchg
std
push
jmp
jge
incl
xchg
and
sbb
jnp
inc
dec
rcr
mov
rorl
call
cmp
dec
notl
orl
push
cli
xorl
popa
clc
or
and
daa
jle
loop
insl
sti
cwtl
gs
shrb
mov
lods
adc
adc
movsb
mov
test
outsb
imul
sbb
and
push
pusha
mov
outsb
mov
popf
popf
es
mov
sub
jl
loopne
scas
cmp
popa
mov
shlb
dec
sub
js
push
push
shll
je
sub
cltd
test
push
mov
xchg
mov
add
outsb
inc
ja
xor
and
test
inc
adc
jle
je
adc
ja
inc
sbb
lods
ljmp
mov
push
stos
and
in
sub
popa
adc
inc
test
dec
pop
pushf
pushf
loopne
adc
lods
inc
shlb
or
popa
frstor
scas
pop
pushf
outsl
popf
addr16
shrb
fisubl
rorl
add
out
inc
jno
pop
lea
popa
mov
divb
add
xor
insb
sbb
mov
arpl
sbb
fstpl
push
movsb
ja
jl
jbe
test
jmp
pop
arpl
out
in
xchg
push
push
cmpsb
loop
mov
aaa
pusha
cmpsl
adc
testl
mov
fwait
cmp
dec
cltd
inc
lea
pop
pop
aad
sahf
inc
dec
je
inc
xchg
push
gs
lods
cmp
pop
and
jne
ja
mov
pop
mov
add
or
fdiv
fistps
push
pop
lods
sbb
stos
or
xor
jp
lock
xor
pop
lcall
ret
mov
and
mov
and
inc
mov
out
dec
xor
scas
in
outsl
xchg
add
xor
push
and
fldcw
sub
jl
and
jb
sub
enter
daa
scas
jbe
jnp
lahf
xchg
push
push
fwait
mov
inc
jns
addr16
xor
xor
sbb
rorl
jno
mov
push
arpl
ja
dec
mov
push
xor
out
jp
xchg
imul
out
xor
and
sub
aam
test
ror
push
std
gs
fldl
push
xor
imul
cmpsl
jnp
add
mov
mov
jnp
pop
add
adc
arpl
mov
sarb
and
stos
jmp
movsb
cmp
stos
lods
aaa
push
adc
sub
pop
pop
imul
bound
sbb
cmp
or
pop
rorb
adc
add
das
dec
fldt
aam
mov
cmp
mov
adc
mov
xor
int
ds
xchg
xchg
jae
xchg
aam
inc
int
rorl
push
push
mov
mov
inc
pop
xlat
add
jne
jmp
inc
jp
repnz
jnp
aam
out
incl
jns
xor
dec
jp
jnp
stc
addr16
andb
jecxz
imulb
rorl
outsb
out
fisubrl
mov
mov
sbb
rorl
jmp
mov
jle
ffree
sub
dec
xor
xchg
xchg
xor
and
xorb
in
mov
cmp
mov
test
cmp
xor
out
pop
sbb
stos
sbb
lahf
scas
xor
pop
fistpl
sahf
jae
cmpsb
in
lods
shlb
shl
hlt
xchg
mov
cwtl
das
or
xchg
add
fs
lret
inc
out
je
push
pop
mov
push
and
sub
pop
mov
jmp
push
cmpsb
aas
jns
jg
loope
jae
push
jmp
repz
sub
js
mov
scas
popa
jmp
sbb
cmpsl
int3
sbb
out
and
aad
popf
and
cmp
mov
addr16
dec
lods
vmovddup
mov
xchg
movb
sub
inc
mov
mov
cmp
sbb
pop
inc
lods
push
mov
jns
push
fbstp
sub
je
stos
pop
sbb
mov
jp
xlat
cmp
mov
cltd
sub
jp
mov
lods
inc
cli
push
fisttpll
mov
out
or
ljmp
or
sarl
mov
cs
jne
clc
jp
or
icebp
fcomi
pop
inc
adc
cwtl
loopne
pop
movsb
mov
shlb
mov
sbb
cmp
in
mov
call
mov
ret
inc
mov
adc
movsb
mov
scas
pop
sub
xlat
mov
es
cmp
stos
out
imul
pop
cmp
mov
shll
push
cld
shll
and
or
or
sarl
out
mov
shl
out
xchg
jo
scas
sub
cmp
fstpl
rcl
and
ficomps
mov
scas
cmp
sub
div
add
lock
int
repz
mov
pop
scas
sub
addr16
cmp
mov
and
das
mov
cmpsb
sbb
shlb
add
outsl
movb
ret
push
cwtl
dec
pop
int3
mov
leave
push
mov
stos
clc
xchg
and
pop
cmp
lock
stos
mov
and
test
mov
insl
jg
insl
mov
cmp
push
sbb
jo
xor
pop
mov
jnp
inc
es
cmpsl
add
mov
iret
data16
push
popf
sub
mov
rol
mov
imul
sbb
outsb
dec
daa
emms
xchg
lock
cmpsl
sub
cmp
addb
xlat
add
xchg
xchg
jge
sbb
jp
sarl
pop
bound
or
fisubs
dec
xor
andl
dec
pop
mov
pusha
test
int
sub
mov
stc
or
or
loopne
sub
mov
pop
fbstp
das
sbb
andb
xchg
inc
stos
idiv
xchg
cmp
lds
lret
push
aas
ljmp
mov
xrelease
fwait
lods
rcll
ljmp
mov
dec
sbb
ficoms
sub
pop
fstl
stos
mov
xchg
sbb
lret
sub
bound
cmp
out
inc
adc
inc
pop
inc
sub
sub
mov
icebp
ret
jns
mov
ljmp
xchg
mov
outsb
jno
jge
lret
mov
adc
push
je
icebp
mov
push
or
cltd
fisubs
adcb
mov
daa
gs
jp
mov
push
pop
ffreep
add
mov
or
lret
mov
mov
es
push
pop
or
sub
jecxz
outsl
xchg
insb
mov
fadd
lds
lods
xor
movsb
and
sahf
adc
inc
lahf
cmovns
push
and
roll
mov
fst
jle
sahf
insb
aad
out
and
mov
add
into
daa
add
repz
mov
sub
mov
adcl
out
cmpsb
dec
sub
adc
mov
iret
sbb
cmovge
and
iret
mov
mov
push
stc
shr
or
add
in
sbb
repz
jge
dec
mov
mov
dec
sbb
insl
xchg
mov
xor
inc
sub
xchg
jmp
dec
out
jo
push
lds
out
cwtl
cmp
fnstcw
pop
mov
sbb
xchg
popf
xchg
pop
dec
jb
mov
fdivrl
inc
cs
fwait
loope
gs
out
cmp
mov
jg
jg
je
dec
dec
movsb
jnp
mov
jmp
and
lret
adc
xchg
fimull
push
cld
jnp
xchg
and
sahf
mov
pop
dec
iret
mov
out
xchg
sbb
enter
mov
bound
scas
mov
jl
jmp
mov
ret
mov
adc
icebp
push
jmp
pop
int
jl
and
mov
cmpb
jl
inc
pop
negl
cli
xor
jmp
sub
cmp
repz
imul
lods
jmp
es
rcll
fcmove
outsb
push
adc
cmp
cwtl
addl
fistps
ret
idiv
jnp
in
insb
in
xchg
mov
loop
cmp
rorb
movsb
fisubrl
sahf
in
and
adc
out
dec
jge
and
out
cmp
cmpsl
mov
loope
fsubrs
mov
adc
mov
mov
cmp
jmp
cltd
je
rorl
iret
ficomps
sub
iret
jp
lret
and
sub
cmpsb
push
xor
sahf
lods
inc
lret
mov
test
sahf
subl
lret
popa
fdiv
je
mov
test
aas
mov
hlt
adc
pop
push
cltd
mov
ds
adc
dec
xor
test
repnz
out
or
and
lods
jb
add
pop
pop
iret
dec
inc
lahf
fucomp
mov
jne
mov
add
mov
or
cmpsl
fsub
pop
std
fldenv
mov
call
or
xchg
shlb
insl
jbe
cmp
stos
cmp
insb
ret
hlt
mov
enter
xchg
es
jle
cmp
xchg
push
idivb
push
aaa
xchg
shll
mov
imul
or
pop
dec
stc
rcl
sbb
fdivrs
or
in
icebp
jp
adc
jbe
scas
in
mov
popa
jo
leave
test
pop
jg
ss
loop
dec
sbb
jecxz
test
pop
add
ljmp
sub
dec
sub
lods
inc
sahf
push
aas
mov
sub
cmp
pusha
and
sbb
sahf
xor
lods
test
mov
jno
jmp
mov
cwtl
sub
leave
mov
ss
or
and
adc
add
fildl
lods
pop
insb
mov
daa
adc
and
dec
jne
gs
push
jl
mov
mov
in
aad
lds
cmp
dec
jne
gs
push
jl
mov
mov
in
aad
lds
cmp
fdivl
int
push
mov
movsl
pop
xchg
mov
in
cmc
adc
sbb
sbb
dec
jne
gs
aad
inc
mov
clts
xchg
mov
sbb
sub
cmp
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
mov
xor
add
adc
ficoms
inc
cmp
or
xchg
leave
in
cmc
sub
cltd
aam
and
xor
add
cmp
sbb
stc
mov
in
xchg
leave
in
hlt
test
and
xor
add
adc
cmp
sbb
push
mov
in
icebp
leave
xchg
popf
in
mov
ss
ss
sbb
push
lret
addr16
mov
and
das
mov
mov
mov
and
adc
fstp
sbb
or
leave
sub
mov
scas
jne
pusha
mov
clc
iret
pop
and
movsb
add
push
rcrb
imul
xor
inc
xchg
add
insb
xor
and
clc
dec
cmp
movsb
xchg
push
divb
jl
add
cmpsl
push
aam
fiadds
cltd
lret
xchg
push
faddl
mov
cmp
or
mov
add
xchg
or
sub
out
xor
mov
xchg
mov
dec
mov
jmp
icebp
leave
sbb
nop
lods
hlt
outsb
lds
xor
add
adc
cmp
sbb
stc
mov
test
xchg
leave
in
hlt
test
push
push
jo
push
push
adc
add
pop
int3
pushf
push
popf
jmp
lock
nop
fdivrs
enter
imul
cmp
jno
dec
inc
outsb
sub
testb
cmpsb
scas
fiaddl
fsts
sbb
xor
sub
cmp
sbb
stc
mov
test
xchg
leave
in
hlt
test
and
xor
add
adc
cmp
sbb
stc
mov
test
xchg
leave
in
hlt
test
and
xor
mov
inc
push
pop
cmc
push
ret
mov
scas
xor
jns
add
inc
jne
mov
and
ljmp
cmp
fwait
iret
jbe
add
cmp
and
cmovno
aaa
jecxz
xchg
jbe
xor
lea
cltd
and
xor
das
mov
add
out
adc
mov
shl
divl
pop
xor
push
aad
outsb
push
mov
les
ja
int
les
adc
jo
aas
mov
cmp
jecxz
mov
or
add
push
push
push
xchg
aad
sub
into
cmp
cli
imul
mov
xor
jae
aad
aaa
mov
push
adc
inc
stos
jecxz
ret
or
rcll
mov
xchg
rcl
mov
rcrb
je
out
in
int
ret
enter
sub
push
push
sub
mov
mov
stc
xor
jle
xchg
push
sub
add
push
mov
icebp
out
mov
mov
lret
mov
int3
orb
xor
or
ljmp
pushf
icebp
inc
add
scas
add
pop
add
repnz
mov
adc
in
pop
pop
sub
aas
push
xor
mov
fidivrl
pop
inc
ljmp
cmp
pop
fmull
and
out
loopne
jo
and
jle
pushf
pop
rcrl
dec
int
push
adc
mov
enter
lods
dec
sbb
in
and
insl
dec
and
adc
jmp
jo
and
or
push
jle
pop
call
xchg
adc
xlat
ret
leave
or
cli
test
in
and
xchg
mov
enter
aam
mov
sbb
shlb
cmpsb
mov
int
clc
bswap
cwtl
test
xchg
xchg
jle
test
iret
dec
sbb
in
lea
mov
imull
add
jno
sbbl
xlat
test
adc
jmp
jecxz
mov
inc
push
and
inc
popa
rcll
mov
push
xchg
stos
add
out
fs
xchg
mov
add
adc
adc
jb
mov
das
adc
sub
lret
out
mov
sbb
iret
out
push
cmc
aas
ffreep
js
and
sub
lds
incl
int
mov
hlt
arpl
pop
stc
inc
and
xchg
aaa
cmp
out
out
mov
dec
lret
xchg
notb
jl
negb
inc
inc
scas
movsl
mov
cmp
mov
push
inc
mov
imul
lret
mov
pop
scas
fstpt
fsubs
and
xchg
mov
pusha
clc
int3
ds
es
mov
lcall
fwait
xor
loopne
pop
in
mov
push
loopne
sarb
xchg
cwtl
stos
out
les
mov
or
scas
jg
pop
mov
dec
sti
out
or
pusha
pop
cwtl
pop
test
lods
lea
pop
push
inc
mov
dec
and
and
mov
or
sbb
andl
or
jo
or
adc
sub
mov
pusha
notb
fnstcw
pop
pop
repz
lcall
cmpsl
iret
adc
cli
push
mov
pop
cmpsl
sbb
cmpsl
stos
lret
add
or
add
in
mov
repnz
mov
cs
test
das
push
mov
ret
mov
fdivrl
daa
dec
cmp
clc
nop
addl
jmp
pop
aad
mov
add
mov
dec
mov
cs
or
jno
mov
jb
mov
push
ljmp
test
shll
adc
cmp
dec
xchg
cmpl
lods
sahf
in
repnz
and
push
add
inc
pop
dec
lahf
test
sahf
decb
jb
int
dec
xchg
out
lods
mov
mov
xchg
lock
popf
lods
push
out
dec
popa
xchg
jle
sbb
mov
mov
jmp
xlat
or
jns
mov
jno
dec
mov
flds
sub
into
lret
push
cmp
xchg
jnp
push
insl
or
out
lods
mov
mov
push
or
adc
loop
call
xchg
in
dec
cmp
jmp
xor
repnz
xor
dec
ljmp
in
hlt
xlat
push
iret
scas
sbb
fisubrs
out
outsl
cltd
xchg
jns
or
sub
jae
dec
bound
aam
mov
cmp
testl
test
lahf
out
clc
mov
push
iret
imul
std
jno
jge
out
xchg
cmp
add
es
pusha
cmp
fisubrl
mov
xchg
jmp
push
jne
mov
sub
mul
fdivrs
sbb
insb
xchg
add
sub
dec
mov
ds
aas
adc
pop
leave
scas
cmp
fimull
cmpsb
xchg
dec
inc
xchg
hlt
add
cltd
not
sbbb
adc
cwtl
loope
jnp
and
sub
and
ret
cli
inc
repz
fwait
push
insb
stc
incl
pop
jecxz
test
fdivl
out
xor
push
inc
sahf
xchg
inc
sbb
mov
inc
jb
loopne
stos
xchg
clc
and
or
int
sahf
mov
sahf
negl
cmpsl
inc
pop
hlt
adcl
into
sbb
push
int3
aam
notl
lods
adcl
pop
pop
cmp
test
xor
mov
mov
fildll
inc
push
and
mov
addb
fucomip
dec
insl
les
aas
and
jo
ss
pop
into
fcoml
call
push
mov
inc
push
xchg
call
fisubs
xchg
jmp
je
cld
xchg
mov
test
xchg
aam
in
add
mov
add
or
pop
ret
stos
pop
in
adc
orl
dec
xchg
xchg
inc
les
nop
incl
cmp
addl
jmp
push
das
das
and
pop
and
jno
popf
mov
add
stos
cmp
dec
pop
xchg
ljmp
adc
push
jo
int
icebp
dec
push
dec
mov
sbb
mov
cltd
aam
add
int3
js
dec
mov
cmp
push
std
loope,pt
xchg
mov
pusha
cmp
mov
fs
xor
je
and
jno
inc
enter
mov
ljmp
das
fstps
push
xor
jmp
icebp
jp
push
mov
dec
cmp
jae
add
and
xchg
sahf
push
mov
imul
lea
fwait
jecxz
sbb
ss
ss
push
shrl
cmc
sbb
int3
xchg
jp
cmp
fisubl
in
dec
xlat
lahf
int3
dec
cmc
adc
gs
nop
lea
gs
sub
cli
push
das
cmp
pushf
cmpl
push
mov
pop
les
sub
mov
int
jmp
ja,pn
insb
and
mov
popa
jo
cmpsl
sub
scas
das
popf
call
or
mov
xchg
add
xor
lret
adc
push
mov
sub
adc
dec
shrb
inc
or
out
mov
pop
popa
push
movsl
adc
push
shll
inc
cmp
xchg
xchg
rcll
or
mov
mov
enter
jns
scas
pop
push
dec
mov
in
sbb
jbe
dec
out
pop
xor
call
sub
cmp
fsubl
outsb
test
popf
ljmp
or
cmpsl
ret
popf
jne
xchg
cmp
jmp
mov
es
inc
jo
imul
rolb
pusha
pop
pop
xchg
je
or
pop
popw
std
mov
push
push
jno
jmp
push
adc
enter
fdivl
outsb
popf
pushf
adcb
sbb
loop
push
sbb
sbb
cmpl
and
mov
loopne
add
inc
jne
rcrb
jecxz
subb
scas
xor
ret
lea
and
jge
and
mov
xlat
jp
push
lea
mov
push
adc
and
mov
ds
add
sub
cmp
fdivrl
dec
lds
push
sahf
enter
add
idivl
fldcw
pop
bound
and
es
jbe
sub
lock
sbb
push
inc
in
negl
push
into
cmpsb
cmp
rcll
sahf
movsb
sbb
shl
mov
mov
pop
ja
push
and
jns
jle
in
sub
sti
imul
icebp
or
xorb
add
cmp
dec
mov
outsb
sbb
test
mov
push
repnz
jae
aas
or
aaa
mov
shlb
lahf
aam
sbb
dec
inc
xor
cmpsl
gs
xor
je
cmp
lea
xchg
adc
adc
nop
scas
sub
outsb
call
fsubs
inc
lret
mov
scas
sahf
xor
push
adc
sub
adc
pop
daa
mov
push
adc
mov
xlat
mov
es
mov
cmc
lods
mov
jle
push
mov
loopne
sbb
adc
ds
in
mov
int3
mov
sbb
fwait
mov
jmp
xor
ret
add
xlat
ja
push
push
mov
jecxz
lret
test
call
addl
pop
cltd
clc
jne
mov
pop
int3
cs
inc
stos
or
fildll
cltd
faddl
or
jns
inc
lods
jb
ds
in
stc
push
scas
jae
lods
sub
add
mov
mov
jg
mov
jno
add
out
pop
jae
test
in
fstpl
aaa
xor
leave
and
xchg
push
clc
jle
sub
ret
push
jmp
dec
xchg
fcoml
lock
mov
dec
int3
fs
ret
or
dec
push
je
mov
mov
jno
mov
cmc
scas
rorl
cmpl
test
cmpsl
jge
lock
push
xchg
sti
dec
push
inc
jge
je
push
mov
push
mov
or
scas
lret
jb
mov
out
loopne
insb
ljmp
add
adc
xchg
sti
rcr
xchg
ret
pop
je
das
push
test
test
mul
push
adc
add
inc
jnp
mov
lret
pop
jo
lahf
adc
mov
sub
lahf
or
cmp
dec
pop
cltd
inc
push
jmp
imul
lahf
hlt
sbb
call
addr16
mov
dec
stc
mov
xchg
test
dec
push
fmull
mov
jb
pcmpgtb
sub
jno
les
loopne
mov
dec
lcall
fsub
fiadds
mov
adc
stos
jg
mov
mov
xor
mov
mov
add
rep
sahf
into
inc
insl
ret
shrl
scas
dec
jb
ret
sbb
inc
das
xchg
xchg
cmc
aad
and
adc
divb
in
jg
dec
lret
out
lds
jp
sbb
fidivrl
mov
xor
mov
call
out
xchg
or
mov
xor
filds
mov
and
xchg
jg
adc
jp
xchg
push
das
mulb
pop
loopne
push
arpl
xor
or
popf
and
inc
push
sub
jecxz
xchg
push
mov
push
jb
pop
hlt
jnp
xor
pushf
adc
daa
mov
imul
test
int
adc
xor
dec
xor
int
fdivl
lret
rcll
lea
push
and
nop
fcmovnu
mov
sbb
mov
lcall
das
fsubl
and
jmp
in
push
pop
and
jmp
push
mov
add
adc
cld
out
test
and
stos
jp
sub
je
outsl
mov
cwtl
inc
loop
jp
add
mov
aam
push
push
in
mov
rcrl
sub
sbb
lods
sub
int3
in
jl
out
fadds
xor
into
fists
sbb
test
inc
sbb
fwait
inc
test
adc
xor
mov
sub
and
adc
cmp
cltd
sbb
xchg
sub
pop
jb
lret
add
push
nop
mov
test
jle
push
sub
nop
adc
mov
js
xchg
add
fwait
das
cmp
enter
scas
popa
mov
shlb
inc
mov
mov
mov
add
dec
push
jecxz
pop
gs
add
xchg
ret
cs
mov
mov
ds
xchg
nop
pop
jne
pushf
push
jo
icebp
cs
cmp
push
loope
xchg
mov
add
test
out
fisttps
mov
stos
dec
mov
push
bnd
mov
xchg
inc
mov
imul
popa
inc
or
add
xor
adc
testl
sub
xlat
enter
pushf
and
fiaddl
aaa
cmp
push
subl
fiadds
mov
cli
loop
inc
sarl
push
inc
gs
cli
mov
ja
sub
xor
sbb
cwtl
clc
aas
repz
and
cmc
adc
mov
dec
jl
cmpsl
sti
mov
cmpsl
lcall
dec
pushf
push
nop
fstpt
arpl
loopne
imul
cwtl
xor
std
iret
cltd
lcall
pop
imul
lret
push
xchg
outsb
notl
add
mov
pushf
fisubs
in
es
sahf
push
loopne
sub
push
inc
out
xor
shlb
aad
cs
aad
fwait
movsb
cs
xchg
push
xchg
data16
dec
ds
sub
jmp
pop
mov
vprotd
dec
mov
cmp
adc
and
mov
mov
and
mov
jge,pt
or
cmp
rclb
xchg
pop
lods
sub
mov
iret
aas
int3
test
mov
js
sbb
or
mov
mov
rcrb
out
pusha
in
jl
and
cmpb
push
sbb
xor
bound
jae
cs
lahf
scas
push
jp
mov
cs
sbb
mov
cmp
pop
aad
push
scas
rorl
pusha
test
ljmp
fs
xchg
popf
mov
pushf
push
test
out
cltd
adc
test
mov
fst
pop
in
stos
subl
pop
jnp
stc
daa
ret
int3
inc
addr16
pusha
movaps
mov
ja
and
or
cmc
adc
pop
push
shrb
jnp
cmp
dec
lret
in
iret
cmp
push
clc
mov
xchg
in
mov
dec
shl
shrl
fidivs
add
inc
jle
outsl
lret
add
mov
push
loopne
and
jle
inc
jno
xchg
mov
rcr
lahf
sahf
lods
sub
push
push
pop
inc
mov
jecxz
cmp
jmp
scas
aad
adc
imul
adc
sar
aad
imul
and
jecxz
ret
insl
xchg
sub
push
xor
mov
out
gs
push
add
add
pop
ret
adc
pushf
testl
sub
or
xchg
mov
xor
lret
cmp
hlt
idivb
xor
cli
dec
push
jmp
arpl
jge
xchg
imul
adc
xor
les
pop
xchg
jne
call
xchg
mov
roll
inc
sub
jnp
loopne
lcall
dec
push
xchg
cmp
lcall
pop
scas
dec
sub
sub
mov
loop
rorb
mov
mov
sbb
jecxz
xchg
rclb
jg
data16
insl
rorl
insb
cli
cmp
mov
dec
daa
xchg
mov
add
cltd
out
shll
pushf
push
js
stos
ret
in
sub
ret
mov
addr16
mov
rcll
pushf
addl
sub
sub
cs
push
pop
ret
add
fwait
pop
sbbb
ljmp
repz
test
xchg
repz
nop
add
scas
aam
test
dec
leave
jp
lds
push
hlt
jo
xchg
inc
adc
cltd
push
adc
pop
addr16
mov
js
ss
adc
mov
push
outsb
addb
dec
pushf
cmp
sub
outsb
outsb
dec
adc
sub
mov
mov
mov
cmc
cltd
aas
push
mov
popf
sub
pop
xchg
and
sub
xor
jno
inc
pop
sub
rcrl
sbb
insl
mov
adc
mov
mov
dec
jno
mov
out
in
and
pop
push
outsl
cmp
sbb
call
out
test
fisttpll
pop
cmp
pop
pop
xchg
adc
and
fs
lock
adcb
mov
stos
bound
inc
nop
loopne
mov
push
mov
xchg
dec
in
mov
sub
add
add
stc
cmp
fiaddl
out
mov
xchg
mov
pop
imulb
cmp
lods
test
fsubrs
cs
mov
loop
rorl
xchg
dec
add
mov
lret
and
ss
bound
roll
push
push
push
inc
mov
push
in
imulb
xor
push
shll
mov
cltd
jg
sbb
movsl
aam
idiv
getsec
je
cmpsb
and
push
ja
test
sub
or
sub
ror
stc
sub
pop
mov
pop
add
lcall
mov
mov
imulb
popf
cmp
pop
mov
push
mov
dec
inc
sbb
cwtl
lds
jbe
into
out
dec
add
add
dec
push
jg
repnz
dec
mov
sahf
push
sub
jmp
cmpsb
ds
mov
pop
mov
adcl
insb
pushf
jecxz
adc
mov
enter
ficomps
mov
aaa
mov
xchg
inc
cmp
sub
jno
and
xchg
fs
push
sub
adc
pop
jb
mov
negl
insb
adc
jne
pop
and
pop
mov
lds
pop
sub
in
es
out
lods
xlat
daa
test
jne
dec
and
outsl
scas
stc
adc
into
stos
lds
leave
fisttps
subl
lock
aas
mov
cmc
out
adc
test
pusha
fwait
dec
hlt
fldcw
in
jge
jp
stos
negb
incl
cmp
repnz
es
stos
mov
cmp
call
test
cld
xchg
call
push
test
rclb
xchg
arpl
inc
xchg
icebp
loopne
cmp
jne
mov
faddl
in
shrl
icebp
pop
sbb
add
cld
idivb
mov
lcall
lods
adc
jns
testb
stos
movsl
sbb
lret
sub
cld
jo
mov
push
adc
lcall
xchg
stos
mov
and
xor
rorl
xorl
ljmp
fmull
ret
cmp
xchg
fldenv
xchg
jo
mov
lods
or
imulb
inc
sbb
push
popf
es
imul
adc
mov
sbb
mov
jb
sub
into
inc
and
adc
test
mov
scas
loopne
sbb
iret
push
imul
push
sbb
ret
addl
mov
in
push
sahf
rclb
cs
pop
inc
addb
jne
sub
sbb
ja
adc
insb
push
aaa
xchg
cmp
std
mov
inc
push
inc
cld
inc
into
add
bound
dec
jl
xchg
outsb
add
sub
add
push
sbb
fcomip
rorb
lcall
repnz
and
mov
mov
mov
dec
in
iret
cli
addr16
push
aaa
jmp
scas
sub
sub
insb
mov
push
mov
ljmp
inc
addr16
jecxz
sarl
in
movsl
xchg
inc
ret
mov
aaa
jmp
add
out
or
mov
sahf
mov
xor
sbb
or
or
imul
ret
and
or
lcall
or
addr16
jp
movsb
or
xlat
cmpsb
insb
stos
cmc
mov
sub
xchg
mov
dec
add
add
sbbb
mov
ret
push
pop
pushf
inc
roll
mov
fidivrl
or
enter
imul
in
add
cli
shrb
jle
ss
jbe
cmpsl
xor
lahf
and
out
sub
pop
dec
xor
sbb
subb
cmp
movsb
mov
cmc
jl
fwait
push
sub
add
maskmovq
pop
cmpsb
add
push
dec
mov
shrl
stos
icebp
dec
add
sub
jecxz
scas
mov
lods
jp
das
xchg
sarl
cmp
pusha
mov
lret
lods
cltd
inc
push
pop
push
adc
push
cmpl
dec
lcall
pop
xor
lcall
xlat
mov
jl
stc
cli
jbe
mov
stos
popa
lret
dec
aaa
jmp
xchg
add
ret
sbb
insb
xor
scas
das
movsb
sbb
filds
mov
adc
xchg
stc
sti
scas
clc
adc
repz
scas
andb
mov
icebp
jp
leave
fwait
mov
fistps
sub
sbb
xchg
jns
out
cmc
pop
jg
std
aas
in
out
mov
in
jae
cmp
push
dec
push
shlb
in
xchg
into
aas
pop
jne
inc
push
add
sbb
sub
dec
repnz
js,pn
and
mov
mov
bound
xor
sub
stc
dec
mov
xor
push
mov
mov
sbb
mov
jl
test
cmc
les
shlb
lea
mov
adc
xchg
arpl
pushf
test
jl
dec
mov
cmp
cs
lret
shrl
out
lods
mov
xchg
out
cmp
sahf
push
lds
adc
xchg
mov
or
xchg
into
dec
pushf
sub
jge
or
stc
or
cmp
mov
xchg
cmc
inc
call
imul
mov
adc
xchg
sbb
jl
ds
sbb
imul
gs
jge
xor
cmc
mov
movd
xor
dec
adc
adc
rcr
adc
nop
inc
pop
pop
imul
cmp
sbb
stc
mov
test
xchg
leave
in
hlt
test
and
xor
add
adc
cmp
sbb
stc
mov
test
xchg
leave
in
hlt
test
and
xor
add
adc
cmp
sbb
jns
jmp
in
hlt
test
and
pop
adc
cmp
sbb
stc
mov
fsts
cmp
jbe
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
movl
mov
sahf
xchg
negl
sbb
sub
cmp
dec
inc
pop
push
push
jp
addb
mov
fcmovbe
ljmp
pop
add
cmp
dec
sub
push
push
jp
push
xchg
xchg
sub
jl
fcmovb
xchg
xlat
out
testl
push
pop
push
push
push
add
hlt
mov
mov
out
shr
insb
stc
jl
in
bound
add
inc
das
in
dec
sub
sti
xor
lcall
std
mov
call
iret
inc
lret
sahf
jmp
mull
fiaddl
cmp
sahf
adc
mov
aad
les
push
xlat
push
cltd
loop
iret
iret
ret
xlat
out
loopne
fs
or
clc
dec
call
movl
jbe
repz
push
idivl
xor
lea
pop
aad
cmp
mov
addr16
push
mov
testl
add
sub
cmp
iret
inc
pop
add
addr16
mov
cmpsl
mov
sahf
xlat
ljmp
pop
repnz
and
sub
push
push
push
push
clc
sub
out
cmpsl
aam
movsb
mov
fwait
mov
jp
pop
inc
and
xor
push
cmp
repnz
ret
mov
mov
outsb
dec
je
push
cmp
aas
push
pop
xor
sbb
ret
test
rorb
out
testl
daa
cmp
dec
inc
pop
push
push
jp
mov
mov
xlat
ljmp
pop
sub
cmp
dec
inc
pop
push
push
jp
mov
in
xchg
jecxz
popa
clc
mov
xchg
mov
daa
mov
lods
add
sub
aad
lcall
fldt
insb
call
adc
adc
into
testb
inc
inc
push
mov
xchg
int3
pop
sub
sarl
rorb
and
dec
xor
cwtl
ret
push
ljmp
adc
add
cmp
add
push
in
adc
xchg
mov
iret
jecxz
and
xchg
jg
inc
xchg
notb
incl
add
adc
push
push
pop
push
pop
jbe
mov
xor
cli
xchg
mov
cmpsl
mov
sub
sub
and
pop
aam
jge
insb
inc
imul
mov
and
and
out
mov
ss
ds
ficoml
in
add
loop
jns
fwait
sub
ss
mov
and
cmp
add
movsl
push
les
adc
pop
adc
fsts
mov
sub
pop
fisttpl
insb
mov
and
or
shll
rcll
sbb
mov
mov
mov
push
nop
mov
aam
xchg
fcmovu
adc
adc
ja
xchg
and
xlat
xlat
push
pop
lahf
xchg
xor
arpl
sub
jo
enter
dec
jo
imul
sub
imul
or
aaa
es
sar
adc
jb
pop
pop
dec
xchg
add
ss
inc
jbe
mov
sub
int
or
inc
fnstenv
xchg
sbb
pusha
outsb
mov
dec
pushf
lret
cwtl
push
cmovnp
adc
cmp
in
sub
jno
ja
cmp
mov
add
adc
push
mov
es
cmp
pushf
jmp
lds
enter
aaa
push
xchg
jnp
lock
inc
pop
mov
addr16
insl
hlt
cmp
je
jno
test
mov
ret
repz
movq
cmpb
scas
in
sbb
fs
lahf
ficompl
xchg
sub
in
sahf
pop
lcall
or
lcall
inc
pop
mov
sahf
push
inc
insl
insl
push
insb
rol
dec
cmp
scas
cmp
jmp
stos
aaa
orl
cmp
sbb
adc
mov
cmpsb
pop
mov
pop
xor
fsubl
ja
push
sub
movsb
fnstsw
pop
lock
mov
loope
adc
or
outsb
xchg
adc
leave
aam
mov
outsb
enter
lods
xor
jno
sub
push
sbb
data16
sub
mov
je
jb
inc
sbb
push
fwait
lods
aas
subl
loopne
and
sbb
aam
dec
rcll
add
dec
xor
adc
pop
add
enter
dec
enter
pop
movb
cli
insb
add
xchg
hlt
add
push
shl
or
push
in
popa
inc
fiadds
and
lods
subb
push
lret
das
sub
mov
ljmp
ss
jp
sbb
loopne
lret
iret
imul
add
cmp
mov
xorl
and
div
inc
out
pop
pop
jb
pop
enter
rcr
fbstp
push
pop
leave
hlt
fistpll
jmp
movsb
mov
out
inc
sub
mov
cmp
jmp
lahf
aam
repz
and
mov
stos
daa
fnstenv
pop
out
je
mov
pop
xchg
repnz
insl
pop
cs
jmp
push
sbb
subl
scas
xchg
outsl
pop
mov
cmp
sub
orl
dec
add
cwtl
rcrb
inc
scas
pushf
je
jo
mov
lds
aaa
add
enter
std
fdivr
jno
das
adc
sub
int
jne
or
mov
xor
arpl
xor
push
es
addr16
xchg
clc
lods
dec
mov
cs
inc
outsb
pop
dec
jne
push
mov
popl
fisttpll
jmp
sbb
xchg
lods
sbb
testl
cli
stos
xchg
and
inc
and
cmp
or
lcall
bound
add
push
mov
int
ja
popf
push
mov
mov
cmp
aad
mov
jb
jo
xor
jbe
mov
aad
iret
fmulp
ljmp
inc
test
push
andl
push
stc
and
and
jno
sti
hlt
mov
jns
push
sbb
insb
sub
mov
aad
pop
into
cmpsb
pop
daa
rcrb
xor
cmp
addb
adc
adc
and
ficomps
int3
arpl
xchg
mov
fisttps
cmp
mov
push
mov
xchg
in
std
daa
mov
pop
sbb
mov
push
shr
mull
pop
xchg
int
cmpsb
fwait
fs
incl
dec
ja
push
dec
sbb
gs
inc
jo
sub
mov
mov
sbbb
not
cli
adc
popf
and
aaa
loope
ja
pop
jle
mov
mov
inc
adc
sub
pushf
rolb
sbb
or
cmpsb
int
sub
bound
mulb
icebp
mov
clc
shr
in
jns
loop
aas
adc
aas
outsl
repnz
xchg
cltd
add
add
inc
add
mov
xchg
ret
jecxz
lock
fidivl
xor
daa
xor
mov
stos
popf
push
dec
rcll
or
jmp
loope
daa
sub
mov
sub
or
pop
into
mov
negl
jg
in
fcmovnb
push
mov
sub
pop
inc
aam
fldenv
scas
sbb
push
in
mov
insl
and
xchg
sbb
add
pop
push
push
dec
movsb
mov
cmp
loopne
cmp
ror
add
mov
xchg
enter
cmp
out
sub
fwait
adc
mov
dec
cmp
pushf
dec
mov
xor
rorl
scas
adc
and
sar
lea
jae
sbb
cmpsl
stc
pop
call
jne
jge
lcall
shll
cmp
dec
cmc
cmpsb
lds
aaa
lahf
jae
push
jmp
stc
mov
sahf
sub
cmp
lods
jbe
arpl
push
aas
jmp
push
addr16
stos
mov
nop
push
cmp
lds
fists
into
negl
pop
ficomps
les
dec
rorl
mov
mov
cmp
ss
adc
jmp
mov
subb
ret
push
push
inc
ja
jae
or
cmp
inc
mov
xor
jbe
in
jp
dec
push
out
das
push
int
and
fldt
loop
int3
mov
cmpsl
stos
das
out
pop
push
mov
or
mov
dec
repnz
dec
inc
add
test
sahf
or
mov
cli
daa
inc
sub
jnp
insb
or
push
pop
adc
adc
ret
xchg
adc
mov
adc
arpl
jno
lock
pop
add
into
fstl
lods
scas
adc
in
push
imul
and
test
fwait
arpl
mov
mov
xlat
lock
imul
mov
inc
xor
jne
push
sub
jle
daa
mov
and
mov
out
cld
inc
popa
lods
add
mov
lock
cmp
xchg
inc
testb
cltd
jl
adc
jns
popa
add
idivb
jmp
xchg
jmp
jmp
push
fst
dec
shl
ss
or
les
ds
cmc
dec
sub
push
mov
dec
add
in
cwtl
xchg
ljmp
inc
shrl
fcomps
movsb
push
stos
or
movsl
jmp
mov
enter
dec
push
adc
adc
xor
scas
pop
je
dec
aad
push
aad
ret
mov
mov
pop
cmp
adc
sub
jge
xor
aam
sub
pop
fistps
inc
enter
or
jnp
xor
mov
sub
push
scas
inc
push
in
ret
sub
push
enter
mov
adc
jecxz
dec
cmp
dec
aad
stos
dec
enter
insb
divb
lock
in
pop
cld
sbb
mov
mov
xchg
xchg
outsb
inc
enter
jg
arpl
dec
inc
std
sbb
hlt
ljmp
dec
lea
jo
sub
in
fisubs
xchg
sbb
int
xor
cmp
andl
add
movb
and
lock
push
movsb
add
adc
xor
inc
push
mov
adc
inc
or
sahf
xlat
and
cmp
std
mov
test
into
inc
or
stos
out
movl
push
rcl
xor
lret
andb
and
push
mov
lods
pop
push
mov
rorl
jmp
xchg
jl
cwtl
int
call
in
jo
int
fistpl
cmc
and
push
in
push
frstpm(287
pop
test
mov
mov
mov
mov
cltd
mov
mov
repz
or
pop
test
xchg
dec
in
sbb
mov
mov
mov
pop
push
out
cli
xchg
aad
ficoms
sti
dec
popf
rcl
add
mov
inc
inc
mov
and
sub
sti
sub
mov
dec
jl
stos
mov
jecxz
or
subl
out
xchg
ja
xchg
lods
xchg
mov
dec
mov
popl
lock
cmc
cmp
pop
insl
lock
shll
adc
movsb
cmp
ret
sub
push
adc
flds
mov
mov
inc
lds
inc
add
xchg
dec
mov
xchg
jecxz
cld
mov
mov
int
inc
in
es
gs
addl
xor
loop
mov
shrl
inc
out
out
das
cld
sti
xchg
stos
mov
lock
cmp
cs
or
jb
dec
inc
mov
out
mov
into
pop
gs
sbb
push
js
out
jmp
test
sbb
movsb
lcall
movsb
int3
push
cmpsb
inc
lret
sub
mov
xor
leave
mov
add
xchg
xchg
cmp
mov
jle
in
lock
fwait
js
stos
mov
mov
xchg
sbb
mov
pop
adc
scas
shlb
sub
mov
fs
cmp
rclb
xor
push
aas
mov
cmc
add
test
call
jbe
movsb
out
push
jmp
sti
test
dec
mov
loopne
pop
pop
loopne
xor
mov
cwtl
arpl
pop
in
aad
bnd
sbb
cmp
xchg
in
leave
stos
jnp
sahf
ja
xor
dec
mov
aam
out
iret
cmp
jmp
xchg
sub
add
andl
mov
int
je
jae
or
sbb
sub
push
in
jne
push
lock
addl
add
cmc
decb
into
push
sahf
or
xchg
sahf
popa
jns
fstpt
stc
xchg
into
or
and
jo
testb
push
mov
mov
adc
inc
xor
cltd
push
clc
ss
sbb
lods
cmpsb
cmc
pop
pop
cmp
jnp
xor
mov
setg
inc
or
pop
or
cmpsb
repz
test
pop
pop
sub
test
test
repnz
push
inc
ljmp
mov
jae
scas
aaa
mov
sub
call
shrl
dec
repz
mov
ret
mov
adcb
cld
push
cwtl
fmull
out
and
jmp
imul
push
cmp
imul
ficomps
mov
sahf
xchg
inc
ret
add
jmp
add
inc
lahf
icebp
pushl
dec
mov
jne
rclb
xchg
cli
iret
leavew
sbb
mov
add
push
pop
int3
bound
jns
pop
jns
mov
je
in
inc
int3
fbld
dec
xchg
rcrb
pop
sbbl
test
scas
ljmp
dec
lahf
ss
loopne
sub
pop
lret
arpl
test
test
mov
fmul
or
mov
mov
mov
js
inc
sub
popf
les
repz
lds
popa
lahf
add
pop
fwait
loope
popa
mov
mov
mov
jle
jnp
enter
stos
imul
enter
mov
popa
test
xchg
stc
push
dec
das
cli
and
fsubrl
test
xor
and
cmp
stos
bound
push
mov
mov
adc
dec
fldt
xchg
jmp
xor
popa
gs
loop
ds
aaa
in
icebp
mov
test
lahf
in
ljmp
leave
pop
sub
or
sbb
sahf
mov
mov
shl
rcll
pop
mov
out
je
push
pop
popa
aad
jl
cs
jbe
sub
mov
inc
mov
xchg
mov
stos
cmp
enter
xor
aaa
out
ret
into
leave
cmc
test
mov
je
dec
add
dec
aas
mov
clc
mov
jle
repnz
adc
sub
sahf
mov
xorb
jmp
mov
adc
cld
fs
push
es
cmp
not
mov
xchg
mov
inc
cmp
adc
jae
mov
fildl
pop
dec
pop
push
out
test
mov
mov
and
insb
dec
dec
xchg
jp
popf
repnz
or
movsb
dec
sub
mov
or
jne
xor
mov
arpl
sbb
fcompl
mov
call
loope
jb
mov
xor
cld
push
imul
sahf
jg
inc
lret
sahf
or
add
sbb
add
sub
int
cmp
inc
cmc
xor
insb
fs
fwait
push
lahf
je
stos
add
out
outsl
movsb
and
das
or
sub
push
push
mov
pop
mov
into
xor
out
xchg
add
aad
inc
mov
out
cmp
mov
pop
and
add
and
es
mov
mov
stc
pop
mov
mov
jae
rorb
fucomip
out
xchg
xchg
sbb
inc
rol
mov
pop
jae
fsubrs
addb
and
cmpsb
push
outsb
rcrl
popa
sbb
insl
imulb
dec
pop
xlat
ss
and
ret
adc
imul
xlat
inc
lea
dec
popa
and
fstpt
scas
pop
repnz
andb
out
enter
xor
imul
aad
sub
adc
xchg
cmpsl
mov
mov
dec
push
gs
in
jge
mov
add
subl
xor
cs
sub
and
ljmp
jne
into
jb
cmp
mov
dec
mov
hlt
movsl
outsb
insb
inc
stos
ss
jl
jmp
mov
idiv
mov
pop
cwtl
adc
fisubrs
push
mov
sub
push
pop
push
jbe
cmpsl
div
aam
scas
xchg
loop
sti
jbe
clc
jl
mov
pop
fadds
cmp
sbb
add
daa
xor
iret
test
scas
pop
jmp
addr16
xchg
ds
frstor
outsb
repz
pop
lret
aaa
bswap
adc
add
hlt
daa
lret
xor
add
or
arpl
inc
push
inc
adc
adc
mov
lret
mov
xchg
imulb
cmp
stc
jecxz
jg
mov
fwait
rclb
divb
data16
dec
adc
test
popf
fstpl
test
xor
or
add
rcll
jl
adc
popf
ret
mov
jle
sub
xchg
in
pop
or
gs
mov
sti
mov
flds
jge
cmp
dec
push
popf
mov
lods
adc
or
or
xchg
push
sbb
push
popa
xchg
es
or
cmp
psllq
mov
pop
dec
icebp
fisubrl
jb
enter
cmc
xor
insl
inc
sub
jmp
int
or
repnz
mov
ror
adc
cmp
push
mov
inc
sub
js
xor
or
inc
sub
adc
adc
nop
inc
add
lret
add
push
pop
addl
ja
mov
je
mov
lcall
shl
jne
ljmp
fwait
inc
lock
loop
fnstenv
fwait
in
push
or
fcmovne
ret
movsb
fstps
sahf
je
nop
repz
cltd
cmp
sti
xor
inc
test
pop
mov
and
cmp
divl
sbb
pop
insl
push
fxch
push
out
push
ss
loop
jne
fsubrp
add
jae
test
mov
aad
shl
push
in
sub
nop
mov
inc
mov
push
mov
ljmp
int
loopne
mov
into
cmpb
shll
aas
addl
cmpsb
jge
mov
clc
inc
ss
and
jmp
clc
adc
test
adc
stc
stc
repnz
adc
int3
add
jo
mov
jnp
xchg
std
js
jno
icebp
jne
sub
mov
ret
add
lret
push
iret
leave
jno
push
lcall
xchg
pop
test
in
mov
adc
push
fnstsw
stos
mov
dec
mov
inc
mov
enter
dec
sbb
xchg
jnp
and
ljmp
pop
mov
sarb
or
mov
out
imul
add
in
cmp
push
cmpsb
int3
outsl
scas
inc
inc
daa
insb
fadds
mov
lock
jae
imul
mov
push
xor
cmpsb
stos
pop
rcrl
jae
leave
sub
cmpsl
mov
pop
adc
xchg
sti
jb
add
mov
or
push
adc
xor
cltd
xchg
sbb
mov
bound
cmpsl
mov
xchg
pop
mov
pop
jge
push
enter
sub
ja
and
jmp
ss
xchg
jnp
dec
pop
out
lock
lds
popf
sbb
fcmovnbe
nop
sti
in
imul
insl
mov
fstpl
cli
mov
sbb
movsb
jle
cmp
mov
divl
pop
fs
or
insb
lahf
push
rorl
xor
push
andl
mov
jmp
clc
popf
ljmp
repnz
jo
and
iret
sbb
lods
outsb
and
hlt
sub
xchg
inc
mov
add
gs
mov
sub
push
pop
xchg
add
pop
lret
frstor
pop
push
pop
mov
mov
push
mov
fists
xor
jle
fwait
enter
cltd
movsl
jp
mov
lock
mov
pushf
xchg
test
in
cli
dec
mov
cmpsl
test
xorb
push
imul
stos
dec
push
sbb
lcall
inc
daa
stos
xchg
or
loope
stc
and
cli
cmp
push
mov
jno
js
sub
push
outsl
pop
lock
pop
lods
inc
shl
in
idivl
fcoms
push
ret
add
or
sarb
insl
cs
push
ss
into
add
fs
lcall
in
mov
rcr
mov
fidivs
mov
xchg
adc
clc
sarb
movsl
rcll
mov
cmpsb
jo
loop
jns
jnp
xlat
jns
cmpsb
aaa
in
mov
iret
sbb
cmp
scas
push
add
js
pop
pushf
mov
je
push
roll
or
mov
mov
icebp
dec
cld
subb
popf
mov
in
push
mov
in
add
std
fxch
lea
daa
xchg
jp
dec
sti
aas
pop
loopne
mov
cmpsl
in
aam
btc
lcall
aam
inc
int3
add
std
pop
jb
cmp
pop
xor
xor
repz
out
lret
in
lock
enter
ret
ret
ja
jb
jbe
test
push
and
add
iret
mov
sbb
push
pop
push
pusha
imul
push
and
test
xchg
fstpt
jle
rorb
or
sub
int3
cvtps2pi
lods
dec
add
sbb
xor
sbb
xchg
shlb
push
jnp
aaa
sbb
cmpsb
inc
cli
aad
ret
int
add
lods
sub
scas
xlat
ljmp
aaa
pop
rclb
xchg
int3
dec
call
inc
test
cmp
pop
jg
dec
pusha
nop
adc
movsb
mov
push
push
or
lods
pop
sub
mov
push
in
jecxz
dec
loop
and
aad
jle
test
in
and
pop
add
cli
aad
lds
mov
jle
jbe
das
and
ja
cmp
mov
push
jbe
pop
fstp
addl
fnsave
loop
push
or
jbe
sbb
popa
mov
mov
stos
sub
pop
gs
stos
dec
lock
pusha
pop
lock
ffreep
in
adc
sub
adc
cmp
fnstcw
pop
dec
lea
mov
mov
and
pop
les
nop
or
xor
icebp
cmpsl
popf
sub
dec
or
in
out
pop
pop
aaa
iret
gs
cmp
or
xor
stos
mov
aad
xor
push
push
jno
test
push
scas
repz
jecxz
cmc
xchg
lcall
xor
decl
cmpsb
jg
in
dec
stos
sbb
mov
outsb
data16
push
pop
and
xor
or
sti
cmp
into
mov
jae
inc
lgs
fwait
testl
push
sub
jp
sbb
insl
sbb
adc
pop
xor
int
jne
adc
cmpb
xchg
pop
clc
pop
rorl
fcoms
or
xor
in
out
inc
inc
out
cmpsl
ficompl
xchg
adc
vpcomb
sub
test
sub
push
paddusw
xchg
push
mov
data16
scas
cmpsb
js
sub
pushf
insl
adc
xor
test
js
cmc
mov
sbb
pop
push
je
lods
jns
das
mov
fcmovne
repnz
ljmp
pushf
and
xor
xchg
sub
jnp
push
or
daa
jmp
fidivl
scas
leave
fnstcw
cmp
aas
sbb
pushf
dec
jno
pop
iret
icebp
gs
cltd
dec
jno
mov
fs
xchg
mov
sti
popf
push
xchg
pop
cmp
sub
cmpsb
ficoml
adc
mov
xlat
mov
or
sub
ret
in
roll
aaa
cmpsb
ja
cmc
push
cmpsl
fwait
xor
cltd
iret
pop
adc
push
test
fisubs
fcmovbe
ljmp
pop
sub
cmp
dec
inc
pop
push
push
jp
mov
mov
xlat
ljmp
pop
sub
cmp
dec
inc
pop
push
push
jp
mov
mov
xlat
ljmp
pop
and
ds
dec
inc
inc
push
outsb
addr16
ja
xchg
mov
lret
out
testl
daa
cmp
iret
shrb
int3
int3
int3
int3
int3
mov
sbb
mov
aad
cmp
pop
add
add
add
cltd
add
mov
add
add
add
add
jl
cmpsb
add
add
add
xchg
add
push
add
imul
test
sbb
mov
add
incb
mov
add
pop
add
add
add
add
add
add
add
js
fadds
inc
add
add
add
add
add
cmp
push
add
add
dec
add
push
xchg
add
pop
add
sub
cld
add
fadds
sti
add
add
add
add
add
cltd
add
add
add
add
popl
add
mov
add
add
add
add
push
add
add
mov
add
add
add
add
or
and
lldt
push
add
add
add
add
and
cld
add
add
add
add
add
push
dec
add
mov
hlt
add
test
adc
sub
and
mov
add
push
add
add
add
add
xlat
add
fildl
push
add
xchg
add
add
add
mov
add
add
xchg
add
add
add
add
add
add
add
cmp
enter
mov
add
jl
add
and
and
les
les
xchg
add
add
call
add
add
add
add
cmp
push
add
rolb
add
adc
or
adc
sub
mov
add
add
add
add
add
add
add
add
add
xor
push
add
hlt
add
add
addb
add
sub
sub
fadds
sub
ret
add
add
add
push
add
mov
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
and
test
push
add
mov
fwait
add
add
add
add
add
add
add
add
popf
add
add
add
pop
add
add
add
add
add
add
loope
adc
roll
js
hlt
add
xor
add
add
popf
add
add
add
add
add
add
add
push
add
movsl
add
add
add
incb
fildl
add
add
add
add
add
mov
jnp
xchg
add
add
outsb
add
add
add
add
add
jge
imul
xchg
add
pop
call
add
push
add
add
push
add
add
add
push
add
inc
add
add
add
call
add
jg
hlt
add
add
push
push
add
add
push
cwtl
add
add
add
add
xor
movsl
add
add
lret
add
add
add
add
add
add
add
jg
add
mov
loope
add
add
rolb
add
add
add
add
add
add
add
mov
stos
add
cmp
xor
mov
add
add
add
and
add
sbb
aad
js
add
add
add
add
cwtl
enter
push
lret
mov
cmpsb
jmp
cmp
cmp
cmpb
jns
in
stc
ds
clc
mov
adc
out
inc
dec
mov
adc
push
std
mov
rcll
and
fbstp
jb
daa
mov
or
aad
outsb
and
mov
js
lock
sub
xchg
shrb
lods
cmp
dec
stos
lods
cmp
push
mov
pusha
fwait
std
adc
lcall
inc
sbb
ret
dec
mov
les
int3
jb
ss
ds
inc
mov
nop
or
xchg
sub
add
aam
sub
cltd
loopne
ljmp
imul
cmp
inc
call
jecxz
pop
nop
outsb
repnz
jns
mulb
xor
lods
xchg
lds
push
iret
test
dec
cwtl
stos
sub
pop
sbb
jl
fmull
jns
adc
icebp
xchg
inc
loope
mov
mov
or
xlat
scas
fucomp
adc
mov
nop
ljmp
sub
adc
insl
xchg
dec
test
stos
lods
jno
jmp
and
das
cli
cmpsb
xchg
lds
adc
jl
jae
mov
mov
out
jns
jge
xchg
xchg
lock
and
into
mov
push
mov
cs
mov
mov
cmc
push
ss
jne
jnp
inc
dec
mov
les
push
sub
aam
hlt
popa
rorl
jns
add
addr16
push
push
dec
inc
sbb
movsl
repnz
sarb
cmc
add
pop
ret
addb
arpl
push
in
cmp
loope
inc
xor
xchg
dec
jb
or
sub
pop
mov
jnp
insl
pop
sti
popa
cwtl
popa
adc
and
fistpll
pop
cld
xchg
xchg
mov
setg
ret
insb
out
pusha
mov
mov
scas
add
cld
pop
cmp
dec
repnz
clc
sbb
xchg
pop
sbb
out
adc
in
ljmp
enter
stos
jb
xor
add
imul
shrb
outsl
xor
leave
repnz
call
push
add
xchg
rorl
pop
insb
rcll
mov
arpl
aam
mov
or
les
xor
paddb
in
sti
lret
adc
cmc
std
fcmovne
arpl
push
sarl
loopne
insl
leave
sbb
xchg
lods
mov
pop
jo
cmc
xor
lret
cs
movsl
lcall
cmpl
mov
lods
inc
jge
mov
dec
or
xchg
push
movsl
sbb
cmpsb
xor
cli
mov
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
