jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
popa
loop
mov
sbb
inc
stos
mov
add
add
or
add
xor
out
add
add
add
add
pusha
add
add
add
add
add
add
add
adc
add
add
pop
add
and
test
inc
add
add
pop
add
add
xchg
add
adc
dec
add
add
adc
add
add
add
xchg
add
add
add
add
add
add
add
and
stos
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
lcall
add
add
add
add
add
add
add
sti
add
loope
push
add
add
add
movsb
add
add
add
add
add
add
add
add
add
add
add
dec
add
or
sub
add
add
add
add
cmp
jbe
hlt
add
add
add
add
push
add
add
add
add
add
push
add
add
add
arpl
pop
add
add
xor
xchg
add
pop
add
add
add
test
sub
sub
add
leave
add
add
add
add
add
or
push
add
add
add
sub
sti
add
add
add
loopne
outsb
add
add
add
add
add
sti
add
add
add
add
add
add
add
add
sub
pusha
add
add
add
dec
add
add
add
add
add
add
add
add
sub
mov
sti
add
mov
add
add
add
add
add
add
add
jge
scas
add
add
add
add
add
add
add
add
add
add
data16
addl
add
add
add
add
dec
add
add
add
aas
add
loope
mov
xchg
add
add
add
add
add
add
pop
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
inc
add
add
add
add
add
add
push
add
add
pop
add
add
out
add
add
add
add
out
add
or
sub
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movsb
add
add
data16
sti
add
add
add
add
add
add
adc
add
add
pop
add
add
add
xchg
add
add
add
add
add
pop
add
add
lock
add
add
add
add
and
add
add
add
add
dec
add
insl
add
add
add
inc
cmp
dec
add
sbb
fwait
jp
dec
in
popa
movsb
pop
sahf
fmuls
lods
lret
mov
mov
adc
mov
adc
dec
pushf
push
ret
iret
add
imul
lds
sbb
xchg
pop
jl
jecxz
dec
enter
mov
and
cmp
pop
cmp
sub
into
sbb
and
jge
xchg
and
mov
mov
repnz
aam
mov
mov
mov
adc
xchg
cmpsb
std
les
cmc
sti
cmpsl
mov
in
lock
fiadds
fidivrs
out
cmp
fdivr
arpl
insl
dec
lds
cmp
fs
jb
mov
cli
cmpb
sub
leave
jns
sbb
shrl
ficoml
inc
xchg
xor
andl
sahf
pop
fildl
mov
mov
or
dec
sbb
sarl
inc
es
ljmp
cmp
into
cmp
lock
pop
in
push
data16
pop
popl
cmp
lret
fucom
pop
std
loope
sub
mov
decb
mov
mov
pop
pop
rcrb
in
jbe
mov
mov
subl
sub
dec
rcrl
es
jno
adc
filds
pop
ss
push
arpl
push
sub
or
xor
imull
add
sub
mov
mov
ret
dec
in
fidivrs
loopne
out
adc
pop
loop
xor
cmp
jne
fidivrs
sub
aad
add
shrl
call
push
and
mov
sbb
xor
or
xchg
imul
xchg
jo
pop
add
jecxz
pop
fwait
xchg
repz
in
mov
jne
in
mov
or
aad
icebp
inc
jle
lods
outsb
jnp
cmpsl
xchg
push
mov
sti
dec
mov
adc
test
push
cli
outsb
icebp
mov
lods
mov
sub
cmp
into
fdivp
or
inc
hlt
rolb
clc
mov
dec
hlt
in
repnz
push
ficoms
in
xchg
hlt
jnp
mul
jb
dec
jmp
outsb
jp
les
fs
push
cmp
jns
jns
jp
fdivl
sti
in
mov
out
sub
sbb
fidivs
outsb
adc
pop
mov
dec
sbbl
stc
jns
fnstsw
lea
mov
adc
pop
outsl
cmc
inc
adc
testl
xor
fmuls
pop
imul
push
rcrb
and
xorl
and
jecxz
sub
or
and
jbe
daa
sub
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cs
fisttpll
in
push
std
fimull
mov
mov
jge
or
sbb
cmp
fisttpll
in
push
std
outsb
lea
dec
lods
pop
fdivrs
insb
nop
jge
push
fidivrs
push
in
push
std
ja
popfw
push
lods
pop
mov
rorl
out
out
dec
xchg
inc
xchg
dec
mov
adcl
cmp
scas
cltd
mov
pop
ss
ss
ljmp
shr
stc
scas
int
int
xchg
adc
and
xchg
mov
mov
xchg
and
ret
aas
pop
cmp
jbe
jle
dec
inc
pop
mov
adc
into
mov
cs
stos
xchg
mov
mov
pop
pop
and
stos
popa
clc
adc
fidivrs
adcl
lock
push
data16
cld
scas
mov
xchg
outsb
jge
pop
decb
xchg
fmulp
dec
push
loope
xchg
ret
mov
dec
xor
sbb
subb
faddp
out
daa
fisttpll
in
push
std
jns
outsb
popf
dec
lods
inc
mov
xchg
insl
xchg
or
fidivrs
int
movsb
imul
add
pop
leave
scas
cmp
cli
or
mov
mov
outsb
sahf
add
jle
dec
cli
or
das
mov
fildll
out
push
mov
mov
jbe
es
pop
mov
mov
jge
or
fidivrs
push
in
push
std
outsb
lea
dec
lods
pop
mov
mov
jge
or
fidivrs
mov
insl
cmp
js
xor
orb
les
cs
pop
sub
incl
add
xlat
repnz
aad
cmp
in
push
push
push
mov
iret
div
in
test
mov
ss
xchg
out
out
insl
bound
out
ljmp
push
jns
cs
mov
xchg
das
outsl
adc
or
rcll
maxps
scas
mov
repnz
stc
or
enter
push
ret
test
fxch
movsb
push
dec
fwait
outsl
sbb
lods
mov
addr16
pop
mov
movsl
xor
insl
daa
les
mov
inc
sub
add
dec
fidivrl
push
shlb
int3
bound
test
dec
fwait
es
lock
loope
xchg
xchg
sub
shll
out
popa
jle
enter
pop
or
cs
loopne
adc
loop
mov
lret
cltd
inc
mov
jle
fwait
or
push
pop
xor
in
nop
mov
rol
add
fs
inc
jl
push
dec
pop
fsubrl
xchg
pop
and
sti
dec
push
out
iret
sub
inc
rcll
mov
cs
sbb
call
int
mov
mov
adc
add
pop
fadds
or
inc
repnz
pop
jl
sarl
adc
xor
mov
loope
mov
mov
bound
mov
outsl
jle
and
sub
push
inc
ljmp
push
and
xor
xchg
clc
cmp
sub
outsb
lock
xor
pop
adcb
outsb
cmpsb
push
in
mov
das
push
in
rclb
fstl
popa
call
and
decl
or
imul
mov
push
lahf
stos
into
lods
sbb
rcrb
dec
mov
and
sbb
arpl
ret
cld
xor
mov
push
add
cli
rcr
cmc
jb
leave
enter
ret
inc
xor
xchg
adc
js
out
cld
lret
pop
sahf
pop
xchg
cmc
jno
dec
mov
pushf
mov
dec
xchg
in
stc
insb
cmp
mov
fmull
fdivrs
ja
xchg
dec
xchg
mov
insb
lock
test
push
in
xlat
push
pop
mov
nop
jae
sub
sahf
sub
sub
sub
iret
loop
loopne
pushf
std
test
pop
cld
xor
sbb
cmp
dec
stc
jecxz
mov
cmp
xchg
xchg
inc
sbb
out
push
pushf
shlb
inc
sub
clc
out
cmc
jge
xchg
iret
push
mov
std
inc
adc
idivl
and
lea
push
inc
mov
scas
in
cld
dec
popl
xchg
je
in
dec
outsb
adc
push
nop
inc
aam
std
out
mov
jbe
inc
sub
pop
mov
ja
test
icebp
popa
push
jp
cmp
sti
mov
push
add
cmp
sbb
call
mov
cmp
inc
adc
gs
cmp
mov
in
lcall
sub
icebp
mov
inc
fistpl
jl
dec
test
js
or
sub
mov
pop
clc
cmpsl
icebp
lea
inc
mov
popf
inc
cltd
lcall
jmp
fwait
xchg
mov
fwait
sub
jge
fmuls
inc
mov
xchg
mov
sub
lret
xor
stos
imul
pushf
sub
outsl
call
dec
shl
adc
aam
sub
push
xchg
shlb
dec
out
add
sbb
fisttps
lods
xor
or
movsw
repz
jno
pop
inc
stos
ljmp
push
sbb
inc
dec
ja
dec
sahf
and
push
stos
fwait
pop
and
in
and
pop
dec
mov
mov
leave
arpl
repnz
sub
inc
hlt
xchg
dec
cs
xor
inc
lcall
xor
lret
int
xchg
push
jae
sbb
cwtl
xchg
mov
jg
sbb
jg
mov
add
nop
sub
dec
xchg
imul
mov
test
jb
ss
loopne
mov
loope
add
mov
mov
push
sbb
int
xor
aad
out
xchg
jp
and
jno
sti
mov
mov
xor
pop
cmp
xchg
in
or
sbb
jnp
inc
sbb
dec
call
lock
mov
mov
and
ljmp
cmp
xchg
mov
mov
mov
mov
stos
inc
push
pusha
mov
push
int3
push
ss
mov
add
aam
gs
pop
test
scas
frstor
stos
sbb
daa
movaps
dec
cmp
add
movsb
sbb
nop
arpl
out
pop
sbb
lret
or
movsb
xor
jmp
cmc
sbb
cld
stc
mov
imul
inc
cmp
fldcw
lcall
xchg
or
jge
dec
shll
adc
and
jmp
or
test
icebp
push
xor
xchg
popl
xor
jmp
mov
mov
adc
repz
lods
push
mov
enter
or
xlat
mov
movsl
cmc
scas
push
mov
mov
adc
lods
mov
fucomip
repnz
jns
in
push
sbb
pop
mov
xchg
hlt
mov
hlt
out
bound
mov
cmc
mov
sub
outsl
xor
xor
mov
push
mov
mov
lods
out
xchg
jecxz
fwait
sub
das
cmpsb
sti
aas
or
push
stc
lds
adc
lea
adc
mov
ss
test
and
nop
inc
push
ret
xor
jns
stos
pop
sub
sub
or
jge
movsb
lods
in
jo
dec
cmp
cmp
out
inc
pop
pop
call
nop
test
enter
dec
mov
pushf
or
loopne
pop
and
add
jnp
mov
rcrb
ja
lahf
pop
in
adc
cwtl
jo
sub
mov
cmpsl
sbb
hlt
or
jo,pt
dec
pusha
or
pop
ss
dec
push
gs
push
add
adc
add
pop
mov
add
stos
in
or
mov
icebp
cwtl
pop
aad
jmp
xchg
aam
gs
add
xor
xchg
and
mov
in
lds
pop
ja
outsb
incb
sbb
cli
sub
push
adc
cmp
cmp
test
dec
fsubs
andb
xlat
and
cli
call
push
shlb
hlt
cs
bound
mov
loop
adc
test
pop
cmp
jg
mov
cmp
pop
cltd
std
dec
incl
fsubp
adc
mov
sarb
sub
sbb
xor
cmpl
jno
aaa
pop
in
push
xchg
lods
dec
pop
xchg
mov
mov
jnp
loop
inc
push
dec
fildl
inc
cmpl
xchg
shll
mov
enter
shr
add
ds
pop
lods
xlat
mov
cmpsl
xor
and
mov
les
push
mov
arpl
sbb
loope
iret
mov
imul
and
jae
add
imul
test
rolb
ja
pop
pop
xchg
imul
movsl
out
cli
dec
jae
in
or
cmpsb
xor
mov
dec
pop
shll
test
cwtl
rolb
inc
xchg
jno
lods
fbld
mov
sbb
lcall
pop
sahf
xchg
ficoms
pop
lea
jg
into
xchg
adc
inc
jmp
dec
fisubrl
xor
mov
pop
cmp
sbbl
and
lock
mov
in
jecxz
or
inc
add
xchg
data16
and
push
lock
pop
aam
inc
mov
jbe
jnp
dec
pop
mov
fdivl
or
jbe
sub
fldl
jbe
std
sarb
insb
cmp
adc
fcmovu
adc
adc
pop
mov
jno
bound
mov
mov
xchg
repnz
lock
lcall
fists
mov
dec
cmp
jle
push
adc
nop
es
jp
jecxz
imull
fiadds
xchg
inc
lcall
loope
lods
or
adc
lock
xor
dec
out
push
test
pop
stos
popf
in
sub
pop
test
adc
fdivrp
in
cmpl
fstl
in
std
rorb
pop
or
mov
pop
and
out
push
xchg
lcall
adc
cs
stos
dec
inc
mov
dec
lret
imul
xor
cmpsb
xlat
test
adc
inc
xchg
mov
lods
cmp
mov
test
xor
dec
or
and
ljmp
andb
sarl
inc
xlat
lret
mov
fmul
inc
roll
and
pop
dec
pop
aam
xchg
andl
jb
pop
xor
inc
call
xchg
ja
mov
rep
data16
and
sar
and
pop
les
xchg
daa
int3
add
dec
test
adc
sub
movsb
pushf
inc
or
mov
lret
in
jns
std
jp
imull
or
shrl
jle
pop
jns
and
mov
adc
pop
fstpl
movsb
lods
cltd
cmp
mov
sub
pop
out
imul
sbb
xchg
fcoms
cld
inc
push
arpl
mov
sub
mov
jne
dec
fmuls
push
xchg
in
xchg
mov
call
jle
sub
and
ja
in
xchg
mov
jl
outsl
or
push
mov
lahf
aad
aaa
xor
push
xchg
inc
push
inc
loopne
sub
or
inc
pop
nop
pop
push
shlb
andl
lret
cmp
jmp
imul
push
push
dec
pop
mov
test
ret
std
adc
das
bound
cmpsb
sbb
dec
cmpsb
or
or
fmul
push
dec
pop
cmp
pushf
sub
rol
insb
fs
sub
jge
scas
mov
jne
mov
inc
adc
rclb
sar
out
adc
xchg
xchg
repz
add
pop
add
dec
ficomps
cmp
jge
mov
adc
test
pop
out
adc
push
add
xor
jl
sbb
rclb
pop
xchg
xor
orb
fnstenv
in
adc
mov
std
fcomp
in
cmpb
xor
fdivs
inc
pop
dec
mov
js
add
dec
or
addr16
in
in
ds
mov
leave
push
xlat
jp
sub
add
mov
nop
scas
adc
scas
jp
std
cld
jns
push
psubusw
xchg
inc
sub
push
cmp
outsb
cmp
mov
sahf
pop
mov
jno
jnp
pop
fisubl
insb
insb
shlb
sbb
dec
dec
loop
add
add
lods
rcl
inc
or
pop
sarb
dec
jnp
add
shll
imul
sub
es
aad
cmp
cmp
lret
push
pop
cli
je
shr
sbb
aam
jbe
mov
bound
cli
mov
pushf
mov
push
mov
inc
es
test
imull
sub
movsb
sbb
fdivl
test
es
push
push
daa
adc
aas
dec
push
inc
xchg
mov
bound
pop
pushf
ret
mov
adc
mov
call
in
into
cwtl
mov
scas
dec
xor
sub
mov
push
or
mov
adc
cmp
daa
rorb
xchg
inc
insb
jge
hlt
jno
int
pop
insl
jl
js
stos
push
add
dec
fisubrs
negb
push
jnp
inc
sbb
fisubrs
scas
sti
cltd
push
add
out
hlt
mov
lret
std
pop
inc
stos
addr16
jmp
gs
movsl
pop
roll
mov
clc
inc
sti
ret
hlt
xchg
xor
cmp
mov
dec
push
adc
ds
int
mov
and
push
sti
sbb
rcll
xor
cmpsb
jno
cmpb
jl
cltd
cmpb
mov
clc
mov
stos
inc
rorl
and
mov
mov
pop
pop
nop
push
sahf
jl
cmp
mov
dec
aad
aas
mov
test
js
fmul
fs
add
insb
lahf
add
outsl
jno
sub
push
inc
fimull
sub
int
add
sbb
jg
mov
push
out
mov
bound
mov
idivb
int3
sbb
cmp
pop
pop
pop
andl
push
push
xor
add
add
aas
mov
in
pop
cmp
dec
lcall
movsb
and
lock
dec
fisttps
inc
xchg
leave
cmpsl
test
lea
rorb
jo
daa
cltd
outsb
or
cli
fdivrl
inc
and
mov
in
jns
adc
imul
es
subb
stc
int
ret
adcb
jge
cmp
sub
out
orl
ret
test
notl
call
movsb
pop
inc
and
xchg
ds
iret
rol
dec
sub
xor
mov
mov
mov
xchg
jno
dec
adc
jl
psubb
movsb
ret
push
nop
arpl
enter
cmp
cli
dec
or
pop
cmpsb
insb
pop
push
mov
inc
bound
add
sbb
pop
stc
fldt
in
push
sti
push
pop
jecxz
xchg
int
orl
outsl
ret
ss
xor
push
adcb
mov
fstpt
xor
lock
test
mov
adc
jo
xchg
mov
sbb
inc
inc
test
stos
jnp
test
js
xor
testl
pop
sub
ret
loop
xor
jae
clc
add
in
adc
mov
cld
out
rcr
add
sub
aas
pusha
les
and
jle
xor
mov
or
aaa
fcmovnu
pop
xor
xor
jno
sbb
adcl
sbb
or
inc
scas
inc
mov
add
cmp
nop
mov
fnsave
push
iret
insl
ss
add
lcall
jecxz
lock
xchg
push
sbb
bound
jns
test
repz
xor
xor
in
pop
nop
mov
ljmp
add
out
scas
out
mov
xchg
inc
mov
fldcw
sub
lds
scas
pop
inc
sub
fsubl
outsb
rorb
xchg
push
sub
or
xor
xchg
data16
mov
outsb
or
in
arpl
jmp
pusha
jle
mov
pop
xor
dec
adc
cmpb
stos
lods
lds
iret
ss
in
inc
stos
mov
in
icebp
xchg
mov
les
add
test
jns
jne
insl
hlt
jmp
or
pop
shll
or
ds
dec
sbb
leave
rcrb
ds
es
adc
jo
loop
mov
fcoms
loope
pushf
adc
loop
lret
mov
ss
mov
das
ss
sub
xchg
inc
push
shrb
push
jge
push
inc
in
int
int3
dec
inc
iret
mov
push
mov
imul
push
lahf
mov
call
xchg
sub
mov
xor
inc
stos
push
bound
lds
xchg
xchg
cwtl
dec
and
sbb
iret
fdivr
sub
push
cmp
jmp
pop
lret
pop
mov
cmp
cmp
push
jle
jnp
mov
out
std
push
mov
pop
mov
stos
fdivs
and
out
mov
lret
mov
or
push
adc
push
and
pop
inc
int
in
sub
loop
shl
loop
jbe
cmp
lret
and
and
and
div
add
xor
pop
adc
pop
jmp
int
push
loopne
ss
xchg
repnz
sub
push
mov
leave
sbb
lahf
sub
push
xchg
xor
cmp
in
es
xchg
stos
dec
repnz
test
mov
jne
cmp
movsl
pop
stos
dec
push
or
arpl
jg
push
sbb
push
daa
sti
je
shlb
dec
xchg
cli
cmp
in
into
push
xchg
xlat
stos
pop
daa
das
stos
cmp
aad
pavgb
das
mov
mov
or
pop
shrb
int3
jmp
jb
add
push
push
and
or
mov
adc
adc
imul
adc
fistpll
movb
fmul
fsubr
test
mov
pop
push
sub
or
jno
inc
mov
sub
pushf
lock
mov
push
push
aas
xchg
sub
aas
subl
roll
fcoms
mov
adc
push
xchg
cmp
sbb
std
or
int3
dec
loop
iret
xchg
dec
pushf
enter
mov
sarb
push
sahf
les
jge
jmp
jle
fidivs
popf
sub
xor
dec
xchg
outsb
push
and
in
jl
into
gs
out
cmc
lret
fadd
inc
aam
lahf
push
mov
lods
jae
xchg
sub
cli
jl
sbb
mov
in
mov
insl
ret
ds
gs
sub
xchg
ret
push
xchg
popf
pushf
mov
mov
fbld
mov
out
cmc
mov
sbb
test
add
sarb
mov
mov
xor
orl
jmp
xor
push
mov
xchg
sbb
rolb
aam
cmp
in
pusha
dec
xchg
fidivs
fsts
jmp
sbb
cmpsb
fimuls
sub
add
jno
int3
xor
xchg
xchg
fsubrs
add
lret
sahf
mov
mov
faddl
mov
bswap
outsl
scas
sub
lods
rcrl
xor
xchg
lret
ds
cmp
dec
cmpsl
jno
push
pop
pushf
out
mov
xchg
xor
test
stos
into
mov
lret
cli
lods
arpl
cltd
mov
js
xor
or
cli
insb
mov
lret
pop
mov
prefetchwt1
or
sbb
dec
pop
or
pop
add
lods
lea
add
pushf
lods
cwtl
sbb
inc
mov
xor
std
push
popl
inc
pop
inc
in
sbb
mov
subb
adc
cs
pcmpgtb
ss
jne
pop
push
les
xacquire
out
add
fbld
xchg
adc
adc
cwtl
xchg
clc
adc
gs
sbb
adc
mov
lahf
ret
repnz
cmc
adc
mov
push
inc
lds
mov
inc
rcll
adc
or
jb
mov
cmp
gs
pop
jno
insl
adc
int
test
sub
mov
mov
mov
fnstenv
jne
add
mov
shll
test
xor
mov
dec
js
outsl
cltd
mov
pop
and
scas
push
clc
repnz
inc
add
or
add
push
xchg
pop
xchg
inc
mov
dec
enter
mov
mov
hlt
out
in
mov
dec
ja
dec
and
adc
xor
pop
shll
sahf
inc
sets
or
xchg
in
xchg
ficompl
mov
or
xchg
and
scas
mov
pop
lcall
stos
mov
test
sub
fidivs
mov
xchg
cmpsl
fwait
pop
gs
arpl
lods
mov
pop
dec
scas
pop
icebp
push
inc
fsubrs
xchg
out
add
bound
iret
test
mov
pop
sbb
sbb
fdivrs
sbb
arpl
fldenv
pop
push
clc
or
dec
hlt
cmp
movsb
and
inc
jl
in
mov
cld
dec
jbe
and
mov
outsb
add
cmpsl
clc
ss
int3
xchg
mov
xchg
movsl
call
sub
and
sarl
out
jb
jl
insl
xor
dec
sbb
pop
iret
into
clc
sub
jl
push
sub
popa
xchg
mov
sbb
mov
cli
jns
adc
cmpsl
gs
cwtl
stos
stos
and
push
ds
jnp
add
icebp
popf
cld
xchg
or
shlb
pop
xlat
mov
stos
inc
cmpsl
fcmovnu
lods
int
jl
push
sub
mov
test
lods
mov
or
or
pushf
clc
mov
jae
enter
jmp
fisubs
mov
enter
xor
inc
arpl
add
mov
dec
xchg
popa
and
sbb
xlat
shl
ficompl
call
xor
mov
and
mov
adc
pop
push
inc
xor
add
adc
mov
jo
jae
and
xchg
mov
add
lea
inc
repnz
icebp
jmp
pop
pop
or
stos
xor
sbb
ret
mov
je
aam
mov
push
xchg
pusha
xor
sub
aam
xchg
mov
push
sti
mov
and
cmp
push
mov
test
mov
bnd
lds
cltd
push
xor
mov
jnp
inc
fstps
adc
filds
bound
push
adc
fldl
jle
dec
lods
pop
mov
mov
jge
or
fidivrs
push
in
push
std
outsb
lea
dec
lods
pop
mov
mov
jge
or
fidivrs
push
in
push
std
outsb
lea
dec
lods
pop
mov
mov
jge
or
fdivrl
paddsw
std
insb
lea
into
lods
fidivrs
dec
inc
mull
jbe
xor
and
mov
mov
xchg
pushf
out
hlt
fimuls
sbb
sub
cmp
dec
outsb
pop
sti
imul
mov
leave
out
fsin
jmp
sbb
push
cmp
dec
outsb
pop
jle
or
pop
mov
mov
jmp
xchg
ds
push
push
dec
sub
adc
cmp
pop
std
scas
clc
loope
loope
iret
sub
fcmovb
mov
and
fwait
les
ds
gs
ds
call
flds
adc
xchg
rcl
xchg
push
sbb
aas
push
sub
jbe
rep
ret
jns
repnz
arpl
das
and
or
cmp
mov
mov
mov
mov
mov
stc
and
cmc
xchg
push
enter
sbb
adcl
or
out
stc
jmp
or
adc
icebp
mov
sbb
adcb
popa
inc
xchg
call
push
jae
mov
pop
fstps
push
pop
lods
jnp
mov
dec
scas
cltd
mov
leave
out
fsin
jmp
sbb
sub
cmp
dec
outsb
pop
jle
dec
jns
in
sar
out
out
imull
jge
jns
jl
pop
data16
iret
prefetcht0
ljmp
clc
in
lods
cmpsb
xchg
lcall
jle
push
outsl
cmp
or
adc
out
out
in
out
out
sti
mov
fsin
jmp
sbb
sub
cmp
dec
outsb
pop
jle
dec
jns
mov
mov
jmp
sbb
sub
cmp
dec
outsb
pop
jle
dec
jns
mov
fstps
and
adc
inc
dec
sub
jns
ljmp
movb
adc
insl
outsl
add
lret
mov
lret
mov
repz
aas
jbe
aas
adc
icebp
and
sub
out
fists
outsl
xor
imul
sub
mov
jns
jae
leave
pop
out
xor
lea
xchg
or
mov
shll
sbb
inc
or
js
scas
cli
or
jno
lods
xchg
out
incl
test
cmpl
mov
movl
push
cmp
or
jge
mov
daa
hlt
mov
fildll
mov
lods
ret
jnp
mov
jbe
jne
sbb
jns
mov
in
jge
nop
xor
or
inc
sbb
enter
aam
fsubr
jne
addb
dec
es
mov
or
in
gs
adc
loop
stos
xor
jnp
sub
lea
insl
inc
test
mov
mov
sub
adc
loop
jmp
in
sbb
jg
lahf
cmpsb
imul
aam
or
jo
scas
nop
rclb
xchg
jno
fildl
xchg
xchg
cmp
into
mov
xor
push
outsl
xchg
popa
cmpsb
pusha
mov
les
out
pop
and
mov
and
add
inc
lods
mov
sar
mov
repnz
jnp
jns
push
jo
push
mov
mov
pop
and
and
mov
aad
inc
and
add
icebp
jo
add
xchg
fs
xor
ret
shll
jno
jmp
mov
jbe
mov
lods
jle
mov
insl
movsb
sahf
mov
cmc
lds
sbb
xor
or
jge
lds
jbe
repz
flds
add
xor
mov
pop
in
and
jo
add
jbe
je
mov
pop
cwtl
sub
sub
imul
jae
sarb
jne
aas
je
mov
rcll
cmp
fimuls
lock
cli
dec
pushf
loope
jle
movsl
cwtl
sti
jmp
dec
pop
push
dec
stos
ljmp
push
jnp
shr
or
push
gs
sub
nop
mov
nopl
insl
inc
ret
inc
into
outsb
dec
fwait
xchg
push
in
pop
ss
inc
mov
add
cld
stos
pusha
fisttps
lods
sub
jecxz
jnp
dec
xor
ret
dec
movsb
mov
data16
mov
xchg
and
and
sbb
outsl
inc
test
xor
mov
fwait
and
xor
into
xchg
mov
in
into
and
or
mov
scas
add
inc
shll
xchg
inc
lret
cmpsl
data16
imul
dec
lcall
cwtl
xor
add
push
outsl
imul
xlat
jmp
lahf
fistpll
push
sahf
mov
jo
int3
js
out
jle
xor
and
out
scas
pop
sahf
push
xlat
sub
mov
push
notb
mov
mov
mov
out
inc
cmp
mov
test
mov
mov
jb
cwtl
jp
sahf
das
movsb
jb
cltd
pop
roll
jbe
clc
mov
mov
fsubl
xchg
push
popa
imul
add
stc
ret
jns
aam
mov
xchg
popf
jl
mov
mov
mov
data16
cmp
cmp
xlat
hlt
loop
dec
mov
xchg
push
sbb
scas
out
loop
jl
and
mov
mov
daa
mov
or
fdivrs
cmp
int
repz
lock
gs
xchg
push
clc
adc
mov
jge
jo
orb
push
mov
sbb
lea
lods
or
or
icebp
icebp
out
neg
dec
add
or
aad
and
ror
ljmp
push
push
jae
and
fistl
sub
push
mov
imul
aad
push
and
sbbb
fisubrs
sub
adc
stos
add
outsb
push
aaa
push
jb
call
sbb
jmp
sub
mov
jno
stos
test
push
stos
inc
xchg
lock
aaa
repz
cmpsb
adc
cwtl
lcall
cmp
push
cmp
sub
test
or
insb
js
jge
adc
dec
cwtl
push
push
cld
sub
imul
ret
cmp
leave
das
push
out
mov
stc
pop
mov
ret
mov
or
or
fs
mov
sbb
pop
ljmp
push
orl
rorl
cmpsl
fidivrs
daa
aad
xor
pop
mov
pop
int
push
pop
in
mov
pop
xor
jle
or
jmp
xchg
add
js
fnstenv
int3
xor
xchg
jecxz
mov
in
xor
push
rorb
movsb
repz
cmpsb
add
jne
sarl
add
mov
sbb
popf
shl
jge
push
sarb
ret
iret
jecxz
icebp
dec
sbb
push
out
pop
mov
rcll
fdivl
lds
dec
inc
inc
adc
xor
push
lcall
push
push
lea
xor
mov
bound
shll
and
or
xor
mov
mov
sbb
pop
sarb
push
dec
add
push
lea
push
clc
lcall
xchg
lods
add
xchg
push
dec
repz
movsb
xor
repnz
and
xchg
out
mov
push
pop
mov
pop
aam
scas
or
in
and
ss
pop
adc
std
ljmp
das
jge
sbb
les
inc
or
mov
xor
js
inc
lods
push
inc
mov
adc
push
iret
and
sub
pop
dec
sub
mov
cmc
test
in
imul
movsl
lret
insb
xor
call
bound
scas
ret
push
xchg
data16
lds
push
push
lods
dec
divb
mov
pushf
in
outsl
sub
iret
outsb
lods
mov
add
or
cmc
adc
pop
mov
push
mov
or
mov
push
adc
fisttpl
xchg
cld
shl
movsb
adc
ja
lods
fwait
sbbl
outsl
xorl
sbbl
xor
jne
inc
cwtl
shrb
push
pushf
push
lret
dec
xor
push
int
jmp
in
jmp
dec
add
xlat
add
shlb
mov
xchg
add
mov
xor
sbb
shrb
sbb
sbbl
les
jecxz
add
mov
cmp
or
mov
xchg
cmp
mov
pop
mov
xor
imul
fsubl
sub
out
std
mov
mov
mov
push
dec
or
bound
movups
repnz
fidivl
pop
imull
adc
adc
mov
pop
sub
jo
dec
push
mov
push
mov
insl
ds
insb
popa
push
push
add
mov
ds
ret
inc
out
lcall
jecxz
jno
dec
imul
mov
in
sbb
fsubrl
jbe
xlat
jle
dec
fnstenv
fmul
rcrb
mov
les
ss
outsb
push
xlat
mov
xor
fld
or
cmp
cli
notl
push
sbb
ljmp
ss
jno
jne
jno
xor
dec
shl
jo
outsb
jp
sbb
lea
adc
data16
xchg
jecxz
insl
xchg
push
fs
xor
or
dec
pop
rcrb
pop
fwait
stos
pop
mov
icebp
test
sbb
dec
sahf
imul
jae
mov
subl
lea
pusha
in
repz
in
xchg
pop
mov
jno
lods
and
add
movsl
adc
inc
aad
in
mov
fsts
or
push
mov
jl
push
imul
jle
mov
mov
outsl
out
jae
bound
sbb
repz
sub
lret
jbe
cmp
das
in
mov
inc
and
lods
mov
les
adc
inc
shl
and
dec
les
data16
inc
sub
cwtl
xchg
outsl
pop
or
out
inc
lret
xlat
xchg
lds
testl
std
add
pop
test
stc
push
jg
and
xchg
imul
adc
cltd
xchg
mov
mov
pusha
and
in
int3
lods
das
mov
aas
aaa
inc
fistpll
xor
in
push
pop
hlt
push
lods
sub
lea
xchg
ror
push
push
mov
jbe
loope
push
out
lret
and
jmp
das
jae
mov
xor
pop
inc
mov
enter
jno
sub
mov
rcl
jg
xchg
int3
and
cmp
adc
jecxz
push
ss
rcll
xor
cld
or
mov
xor
or
push
push
add
push
aaa
adc
je
mov
xchg
negl
test
fs
int
sub
adc
xor
push
test
push
push
dec
inc
repz
cmpsb
inc
movsl
test
or
out
lods
std
push
mov
pop
fsubrs
sub
jne
lret
mov
push
inc
or
out
mov
dec
fs
mov
and
fwait
je
test
stos
sar
or
je
and
gs
dec
loopne
popf
push
mov
je
dec
lods
dec
cwtl
mov
cli
jnp
popa
nop
add
cmp
sub
inc
xor
lods
mov
dec
push
cmp
xor
mov
cmp
ss
lahf
lcall
cmpsl
fucomip
xor
pop
and
push
icebp
xlat
cmp
iret
mov
sbbl
and
mov
in
sahf
cmp
daa
leave
ret
lahf
addr16
mov
cmp
mov
test
pop
outsb
aaa
mov
fstl
jmp
dec
hlt
mov
jmp
fs
call
adc
push
pop
outsb
call
xlat
add
sub
xchg
jle
or
pop
lea
test
ljmp
xchg
scas
and
aas
cmpsb
add
adc
out
pop
lahf
xchg
outsb
mov
movsb
push
mov
inc
add
lods
stos
fisttpll
subl
andl
rcrb
dec
out
into
mov
cld
rclb
jmp
negb
sti
add
mov
xchg
lcall
roll
outsl
mov
hlt
loopne
push
xor
cltd
decb
and
cmp
push
data16
xchg
mov
loop
or
mov
js
add
cmc
lds
jnp
jns
push
mov
fnstsw
cld
pop
adc
mov
mov
sbb
or
sysexit
movsb
mov
mov
and
int3
jb
or
jecxz
push
mov
rorl
lret
ja
cmpsl
icebp
sub
clc
icebp
push
aaa
ja
dec
in
imulb
pop
into
push
jo
ret
cmp
out
and
sbb
nop
inc
pop
cltd
sub
stc
shrl
sahf
xchg
popa
push
dec
in
pop
int3
mov
clc
stos
in
mov
fwait
or
nop
fisttps
ljmp
dec
xlat
in
add
call
loop
dec
or
test
stos
std
mov
mov
mov
mov
repz
jle
or
es
fcomp
add
fisubrl
enter
or
push
sbb
mov
add
xor
js
lcall
data16
loope
and
inc
pop
mov
sti
add
cmpsl
rcrl
xchg
call
or
clc
sahf
pop
sbb
dec
push
enter
out
jo
sub
pushl
fwait
lock
pop
rorl
cmp
test
cmp
jae
popf
sbb
mov
sub
nop
aam
sub
dec
inc
and
lret
mov
mov
or
or
lret
mov
xchg
ja
sbb
std
mov
mov
push
out
push
xchg
mov
add
icebp
pop
cmp
jl
gs
adc
mov
loope
ljmp
push
int
pop
pop
and
dec
pop
add
and
jnp
into
test
cmp
push
push
dec
gs
and
in
loop
dec
cli
imul
jg
mov
out
jp
insb
or
pop
mov
insb
shr
jp
inc
mov
adc
aad
test
xlat
fnstcw
test
mov
cmp
xchg
cmpsb
pop
cmpsl
loop
addr16
shlb
dec
int
xchg
adc
cmp
push
jg
adc
mov
xchg
jle
push
jg
xchg
xorl
mov
push
andl
cmp
ror
ljmp
xor
loopne
fstps
dec
mov
xorb
mov
daa
repnz
sbb
push
stos
ja
enter
mov
xchg
cmp
adc
das
cld
sub
js
mov
add
mov
pusha
adc
xor
jnp
jge
fimull
mov
sbb
cli
push
ss
clc
or
hlt
jb
add
mov
cmp
mov
pop
or
cmp
adc
stc
test
xchg
repz
pop
add
ror
and
ljmp
js
jle
or
test
ja
andb
loop
bound
add
into
jg
pop
inc
arpl
movsl
sub
mov
repnz
lahf
jp,pt
push
out
fwait
sbb
add
pop
inc
mov
mov
jbe
cmp
jno
inc
and
rcl
cmp
push
pop
mov
sbb
and
lea
in
push
in
sahf
mov
push
xchg
push
mov
arpl
jmp
sbb
lea
push
out
fisttps
pop
outsb
repnz
jbe
xchg
lret
xchg
and
les
xor
out
iret
mov
nop
jb
pop
rcrl
xchg
xorl
insb
dec
jmp
adc
fs
push
inc
xchg
jbe
dec
dec
imul
test
mov
lcall
pusha
rorl
push
xchg
clc
inc
inc
mov
sub
cmc
lods
push
dec
pop
mov
pop
add
xchg
xchg
fisttpll
add
pop
mov
scas
popl
movsl
adc
mov
ljmp
loopne
xchg
mov
inc
in
cwtl
xor
fwait
std
xchg
not
jle
mov
out
and
iret
movsl
jle
icebp
pop
xadd
mov
cmp
sub
mov
mov
sub
insb
mov
or
pop
movsl
bound
mov
fstps
cmp
aaa
sti
xchg
sbb
ret
and
fidivrs
cltd
xor
es
mov
mov
orb
xor
addb
push
sti
sbb
inc
scas
frstor
xchg
mov
scas
lock
fldl
cmc
repz
test
xor
mov
jg
jecxz
jecxz
popa
lahf
ds
out
js
mov
outsl
stc
imul
lahf
cltd
mov
mov
popa
adc
xchg
sub
je
xlat
mov
xchg
dec
inc
push
fsub
mov
adc
incl
cmp
mov
jle
mov
lret
jo
mov
mov
xlat
mov
pop
inc
outsb
inc
mov
ret
lahf
outsb
cmc
gs
lock
add
mov
jl
mov
adc
rcr
add
lcall
and
frstor
data16
imull
inc
shrl
mov
cmp
std
fxch
xchg
jg
inc
hlt
vpackssdw
xchg
out
dec
push
lea
jecxz
xchg
in
leave
pop
ja
mov
add
add
nop
outsb
ja
mov
pusha
out
mov
repz
data16
jp
subb
out
adc
lahf
daa
cltd
xor
add
dec
sahf
rorl
and
pushf
push
fcomps
stos
fisttpll
mov
push
movsb
arpl
lods
cld
cmp
aad
outsl
mov
out
pushf
sbbl
cmp
pop
ret
and
jae
scas
push
ficoms
pop
cmc
cld
ljmp
es
test
or
stc
mov
loop
sub
or
jns
push
jl
mov
es
andl
dec
into
ret
lret
outsl
dec
cld
cmpsl
sbbb
mov
dec
or
lods
add
cmpsb
jo
or
lret
inc
mov
sbb
jns
lock
cmp
xor
or
fs
ret
lds
test
cmp
fdivrs
nop
ret
mov
sbb
insl
fdivs
sub
adc
stos
xchg
icebp
mov
out
or
cmc
sahf
sbb
mov
jle
movsl
lods
xor
dec
push
fnstenv
mov
lcall
jae
cli
add
movsb
xchg
pop
test
pop
shl
pop
jae
es
or
jb
xchg
arpl
mov
add
push
test
out
or
je
fcompl
sub
xlat
and
push
in
mov
dec
idiv
inc
andb
add
push
rorl
stos
aad
add
mov
rorl
repnz
mov
pushf
sbb
jmp
cmpb
jl
leave
sahf
mov
mov
mov
pop
stc
sub
stos
jecxz
loopne
adc
pop
jae
fisubrs
fstpl
stos
das
or
xor
push
jg
loopne
call
clc
sahf
push
push
push
push
std
jns
imul
nop
pop
loopne
les
add
pop
test
ret
bound
lods
pop
cmc
inc
cs
shl
sub
mov
mov
dec
sbb
cli
test
das
in
pop
test
mov
cmp
and
fcomps
sahf
jmp
nop
and
jae
nop
sub
outsb
jecxz
adcl
sub
lret
push
stos
cli
lds
dec
lret
push
sbb
iret
outsl
stc
xchg
or
mov
adc
cmpsb
mov
push
or
testl
cmp
xor
xchg
aam
leave
sbb
jg
stc
dec
mov
jb
jns
aaa
dec
popa
movsb
adc
jb
cmpsb
fcoms
sub
push
adc
jae
push
fistpl
je
mov
int3
loopne
dec
push
inc
mov
lds
rolb
mov
jecxz
xor
rorb
ljmp
sbb
fiadds
jp
aad
rcrl
xchg
movsb
out
das
in
push
insb
mov
mov
xor
and
insb
and
in
jo
sbb
ss
sahf
add
sbb
sarl
sub
sub
add
and
cs
scas
dec
in
pop
gs
mov
jnp
dec
pop
mov
js
xor
push
fistl
inc
lods
leave
insl
push
mov
into
loop
out
flds
add
into
mov
mov
mov
and
sub
aaa
mov
jmp
pop
ljmp
push
add
push
push
sahf
pop
out
fisubl
test
sbb
lret
add
push
push
iret
bound
ss
or
cmp
movq
test
adc
xchg
pop
mov
sub
pop
movsl
roll
lahf
inc
popa
mov
lock
sbb
clc
in
xlat
movsl
jbe
push
and
test
rol
aaa
xor
xlat
loop
adc
mov
cmpsl
jne
int
and
lcall
rcl
xchg
icebp
jge
and
push
mov
ljmp
mov
dec
cmp
add
mov
dec
xchg
fldcw
add
stos
jg
cmpsl
mov
sbb
fwait
mov
mov
cmpsl
in
sbbl
adc
lahf
add
mov
and
test
mov
pop
test
scas
adc
int3
sbb
mov
fbld
dec
test
pop
call
adc
lcall
xchg
pop
int3
sahf
jp
fmuls
stc
sbb
pop
xchg
je
test
jbe
addr16
and
fsts
cli
test
sti
jl
add
or
push
mov
xchg
ror
sbb
pop
out
sub
mov
insl
push
pop
dec
mov
insb
das
adc
inc
ret
adcl
mov
add
and
pushw
push
jno
cmp
mov
insl
push
sarb
mov
cmp
movaps
mov
xchg
pop
std
rorl
pop
sbb
sub
mov
cs
sub
add
jnp
vpshufd
pop
into
and
xlat
movsl
test
xchg
or
xor
and
das
bnd
popa
ds
int3
in
movsl
xor
xchg
or
xorb
sbb
push
faddl
clc
lahf
int3
js
sub
inc
test
lds
subb
je
pushf
outsl
pop
xchg
test
in
add
mov
jmp
sbb
sub
cmp
dec
outsb
pop
jle
dec
jns
mov
mov
jmp
sbb
sub
cmp
dec
outsb
pop
jle
dec
jns
mov
mov
jle
into
stc
fimuls
scas
sbb
sub
cmp
dec
outsb
pop
jle
dec
jns
mov
mov
imul
out
orl
imul
mov
mov
in
xor
faddl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
mov
xchg
ds
lcall
and
add
adc
arpl
inc
inc
push
mov
mov
xchg
repz
hlt
rol
ret
aam
and
xor
add
adc
arpl
inc
push
mov
mov
xchg
repz
hlt
rol
ret
aam
sbb
push
jae
or
and
rclb
push
aaa
push
cmp
popa
lcall
lods
add
inc
popf
sti
lods
sub
iret
xchg
jl
or
jecxz
sub
cltd
cmpsb
push
in
add
adc
add
into
test
mov
bound
xchg
jg
ret
popf
push
xor
ja
adc
ret
aam
fs
inc
ss
mov
adc
mul
push
sub
cmpsb
and
cli
imul
sarb
inc
dec
jae
jl
stos
in
or
xchg
xchg
clc
jle
and
add
and
test
loope
das
adc
pop
movnti
fcmovnbe
and
and
ret
push
jg
mov
xchg
repz
hlt
rol
ret
aam
and
xor
add
adc
arpl
inc
adc
leave
xlat
addr16
ret
repz
movsb
xor
pop
adc
jp
or
xor
add
testb
stos
stos
xchg
aam
popa
jb
adc
js
or
cmp
hlt
mov
loopne
mov
hlt
rol
ret
aam
and
xor
add
adc
arpl
inc
push
mov
mov
xchg
repz
hlt
rol
ret
aam
and
xor
add
adc
arpl
inc
push
mov
xchg
or
pop
in
adc
stos
lret
xor
pop
fcomps
into
clc
decl
data16
xchg
adc
leave
cmc
mov
mov
push
mov
sub
lea
adc
pop
cli
xchg
lea
aas
mov
leave
daa
mov
xor
sbb
aas
and
loope
cmpxchg
xor
addr16
jge
mov
inc
jl
sbb
lea
mov
mov
sbb
inc
lods
jne
pusha
insl
andl
xor
cwtl
xlat
jecxz
notl
pop
outsl
pop
mov
mov
stos
ss
lret
push
pusha
aaa
and
inc
mov
nop
cmpsl
out
push
daa
and
or
sti
bound
mov
addr16
aad
vsqrtss
sbb
lcall
std
dec
inc
mov
test
fs
mov
imul
push
ficompl
dec
jecxz
add
insb
mov
repnz
cmp
and
out
jl
push
sbb
cmpsl
popa
loopne
and
inc
mov
jno
xor
xchg
pop
jnp
sti
cmp
ds
mov
sbb
push
lahf
stc
das
pop
aas
cmp
cmc
leave
xor
dec
daa
cmpsb
dec
add
xor
mov
cmp
mov
mov
cld
xor
add
mov
xchg
push
dec
mov
fisttps
ret
or
fimull
push
mov
xchg
xchg
call
push
popf
dec
imul
dec
push
cmc
lods
ret
inc
mov
es
sub
insl
insb
popa
jl
bound
test
pop
out
jmp
repnz
xchg
sub
xchg
lahf
or
jnp
rcll
xchg
adc
cltd
pop
inc
jne
bound
dec
mov
mov
adc
jb
cmc
es
test
xorl
cmpsb
push
test
push
std
lahf
mov
xor
testb
lods
cmpsl
cmp
popf
loopne
ficompl
sbb
and
xchg
lods
and
sub
add
cmp
shrl
insl
ljmp
popf
mov
or
dec
sbb
adc
data16
in
andl
push
hlt
movsl
repnz
push
into
sub
ds
sarl
inc
jge
sub
jno,pn
jge
xchg
mov
xchg
scas
mov
sub
mov
mov
mov
push
pop
mov
aad
cld
insb
pop
jno
icebp
fistpl
inc
jae
add
dec
andb
js
leave
and
cwtl
testb
cmovl
adc
add
mov
add
lock
push
sub
push
pop
cmp
mov
jmp
clc
mov
pop
stos
mov
cld
xchg
mov
push
lret
xor
jne
or
xchg
lcall
dec
lret
sub
je
loopne
and
push
outsb
lea
lahf
loopne
pop
sbb
push
xchg
sbb
das
bound
addl
pop
subl
int
out
fs
xchg
mov
mov
push
mov
adc
int
fisttpl
stc
xor
sbb
out
fists
cmpl
aaa
into
push
rolb
dec
add
arpl
pop
sbb
sub
push
mov
inc
inc
dec
inc
and
jno
mov
cmp
shrl
movsb
cmc
rorb
in
xchg
pop
leave
insl
subb
pop
dec
sbb
ret
dec
sub
in
mov
xchg
push
inc
lea
jbe
add
out
pop
subb
jo
or
xlat
mov
or
fstps
jnp
hlt
jnp
adc
xor
adc
arpl
pop
mov
jbe
fldpi
mov
mov
insl
dec
jg
xchg
mov
mov
clc
push
std
arpl
sbb
jb
mov
cmp
push
stc
or
and
pop
scas
xchg
dec
jne
dec
lret
jl
mov
lret
dec
inc
notl
pop
pusha
aad
sbb
mov
js,pn
jle
div
mov
adc
cmp
mov
mov
jo
int3
mov
xchg
mov
neg
cltd
or
in
push
pop
or
pop
int3
push
cmp
out
es
push
xor
lds
pop
and
in
adcb
roll
jns
add
mov
rorb
lods
cltd
movsb
push
pop
push
adc
lahf
dec
add
mov
movb
fdivrs
ficoms
or
jae
xchg
xor
fimull
xchg
push
push
into
pop
iret
inc
pop
std
cmp
out
dec
cs
in
mov
std
xchg
push
dec
xchg
lret
sub
inc
imul
lret
push
fcmovnb
xor
sbb
or
mov
xor
lods
xor
rolb
stos
mov
in
inc
pop
popf
clc
lea
std
mov
dec
sbb
add
enter
out
jmp
pop
data16
fwait
inc
test
and
mov
dec
xor
inc
xchg
inc
xchg
cld
int3
outsb
cli
and
aaa
push
in
test
and
mov
ja
or
cli
fxch
scas
xchg
repz
pop
fmuls
jp
inc
aaa
int
xchg
sub
loop
pop
push
lcall
jbe
mov
inc
sti
and
ljmp
cmp
arpl
jl
pop
fs
mov
lahf
xchg
dec
sub
into
xchg
dec
pop
inc
xor
inc
pop
xorl
clc
test
fcoms
out
rcll
ja
pop
lea
jecxz
add
jb
repz
push
jmp
sub
adc
adc
sti
insb
push
add
add
add
add
popf
push
mov
inc
pop
jne
xor
movsb
pop
test
inc
sub
int3
jmp
js
pop
adc
cmp
popa
add
repz
mov
xchg
push
sti
cmpsb
insl
sub
and
mov
ret
or
bndldx
bound
out
xor
cs
subb
push
in
fwait
in
add
gs
sbb
mov
mov
push
mov
xchg
mov
mov
adc
mov
mov
cmpsl
pop
xchg
fistpll
mov
and
jns
and
pop
addl
inc
mov
sbb
jl
daa
mov
push
fistps
nop
data16
and
rol
scas
shll
shlb
and
xor
lods
stos
cmp
stc
mov
push
sbb
into
jge
inc
int3
push
arpl
mov
dec
lret
lret
es
test
imul
or
test
add
mov
nop
adcb
shll
xchg
mov
xchg
mov
fstpl
cltd
push
mulb
fstpl
inc
fisttpll
mov
sub
adc
inc
pop
rcll
aas
mov
mov
ds
fsubrl
sub
cmp
dec
push
sub
or
je
mov
add
adc
mov
icebp
inc
push
repnz
into
loope
pop
mov
cmp
daa
jge
pop
mov
insl
sbb
sti
mov
sub
call
dec
pop
mov
js
inc
inc
sahf
movl
inc
aaa
leave
mov
loopne
rcrl
enter
push
or
cmpsl
in
subb
rclb
pop
lods
cld
in
mov
ss
cs
movsl
inc
bound
cmpsl
in
mov
and
stos
dec
push
add
sub
iret
push
lods
and
ds
pop
sub
xor
jg
or
lcall
push
or
test
fidivs
mov
adc
enter
jnp
mov
hlt
sbb
cmp
xor
scas
jb
movq
test
repz
xorb
fsubl
add
lcall
addb
jns
rcrb
in
jge
jnp
xchg
mov
ret
cmpsl
xchg
adc
sahf
cmc
aad
ficompl
ss
mov
imull
xlat
jmp
xchg
das
mov
dec
xchg
lock
leave
mov
stos
clc
jb
xor
and
pop
jnp
push
int3
and
arpl
pop
iret
dec
and
imul
mov
xor
clc
test
fsubrs
addr16
dec
test
pop
clc
xchg
outsb
or
scas
push
push
inc
adc
pushf
cmc
push
pop
sar
subb
popa
les
jge
sbb
fildll
jno
mov
mov
inc
and
aad
cwtl
inc
jnp
jb
adc
pushf
jo
mov
pop
cwtl
or
xchg
test
jne
push
sti
mov
cmp
xor
imull
pop
aaa
lock
cmpsl
lock
xchg
cmpsl
cmc
inc
data16
xlat
cmp
xchg
and
pop
popf
imul
xchg
enter
orl
scas
cli
sub
jne
pop
adc
fmull
test
cmpsl
ret
pop
js
ss
sbb
push
inc
dec
cmp
repz
stos
mov
jmp
adc
or
loope
push
lahf
xor
rorl
imul
int
scas
cmp
mov
ss
enter
push
repnz
imul
sahf
push
xchg
das
out
push
pop
mov
push
xor
fld
jns,pn
daa
xor
mov
test
cld
in
cmp
push
fldt
outsl
push
adc
mov
mov
imul
fdivl
stos
jecxz
mov
jmp
lods
cltd
cmp
mov
and
leave
jae
imul
sbb
out
cmp
shll
jmp
hlt
mov
xor
out
lret
pop
ret
leave
pop
ss
dec
dec
lea
cltd
mov
subl
xor
enter
mov
mov
pop
stos
mov
add
cmp
mov
ss
test
xor
push
sbb
or
bound
and
loopne
mov
clc
leave
sbb
push
xchg
and
or
lea
insl
dec
xchg
push
mov
fwait
mov
add
pop
cmp
inc
orb
out
test
frstor
xorl
push
repnz
add
inc
aaa
cmp
shll
call
inc
inc
gs
cmp
dec
ret
pusha
jle
je
add
dec
loopne
or
testb
out
mov
push
orl
sub
or
add
mov
or
or
xchg
mov
and
pop
in
xchg
xor
lcall
xchg
xor
inc
fwait
sbb
in
test
aam
fadd
arpl
outsl
jmp
push
mov
sbb
fstpt
insl
sub
test
dec
pop
pushf
fcoml
push
push
repz
outsl
cmp
in
sub
inc
or
stos
xchg
js
fbstp
pop
cmp
push
cwtl
push
inc
pop
pop
add
xchg
sub
mov
nop
inc
pop
in
cmpsb
cmp
inc
mov
notl
dec
sbb
dec
pop
mov
sub
repz
cwtl
mov
mov
add
js
jne
or
scas
inc
popf
xchg
xor
popa
sub
ljmp
lahf
and
test
addb
mov
xchg
sbb
xor
fwait
mov
in
mov
ret
sarb
imul
sbb
mov
arpl
xor
lret
push
pop
lret
inc
notb
cmpsl
sub
hlt
add
stos
inc
mull
and
mov
movsl
add
neg
lods
das
adc
jmp
add
fists
adc
fwait
cmpsl
imulb
dec
insl
adc
add
inc
imul
mov
mov
shrl
mov
mov
lea
daa
ret
popf
push
and
dec
fstpl
jecxz
and
ret
pop
xor
shrb
inc
xchg
dec
imul
xor
mov
scas
shlb
insl
dec
push
push
shll
arpl
clc
mov
pop
subb
sbb
push
in
inc
dec
cmp
pop
mov
popf
cmp
jge
adc
pop
outsb
mov
push
jo
jmp
pop
add
xor
jle
repnz
popf
cmp
sarl
inc
fs
cli
gs
dec
xor
lret
fbstp
sahf
jb
movl
sub
or
inc
inc
jnp
aam
cmp
push
loopne
gs
adc
push
cmpsl
lods
xchg
int3
int3
hlt
pushw
cld
lcall
jp
mov
add
lock
outsb
jl
loope
adc
add
mov
mov
mov
xchg
xchg
mov
xchg
cmp
mov
push
je
iret
lds
loop
in
lea
inc
lahf
cmpb
push
mov
jge
jbe
outsb
movsb
mov
adc
shll
scas
xchg
dec
adc
cld
mov
xor
rorb
out
fnstenv
mov
mov
mov
adc
inc
jmp
pop
push
cmpsl
setb
fldenv
pop
push
std
les
int
mov
xor
jae
pushl
jae
icebp
add
xchg
scas
inc
push
das
popa
test
cmp
xchg
mov
dec
xchg
test
hlt
ds
adc
popf
out
pop
xor
call
adc
lods
xchg
loopne
pop
sub
xor
lahf
aaa
ret
adc
pushf
gs
nop
xchg
push
cmpsl
aas
out
ds
push
jecxz
mov
roll
mov
add
in
mov
outsb
jo
sbb
es
rcl
jnp
lahf
shl
mov
aas
mov
outsl
aad
call
cmp
sbb
arpl
dec
lret
scas
test
into
mull
and
mov
sarb
repz
das
sub
xchg
mov
lock
cs
and
xor
lcall
push
mov
mov
and
fistpl
cltd
and
push
jb
movsb
mov
jb
xor
data16
cmp
jnp
imul
sti
or
xchg
cltd
add
sbb
mov
sub
cmc
divl
lods
sbb
mov
outsb
jno
xchg
dec
js
aam
mov
call
inc
imul
mov
out
or
jbe
push
mov
lcall
push
fildll
push
daa
scas
sbb
pop
mov
addb
jbe
sub
mov
lods
mov
pop
call
push
iret
dec
fcoms
sbb
jae
push
or
cmp
xor
adc
negl
xchg
scas
popa
loop
xchg
lods
jne
ret
mov
loopne
add
pop
fldenv
pushf
pushf
shll
jp
loopne
mov
js
stc
out
aaa
dec
ret
mov
push
pop
inc
xchg
es
mov
std
movsb
pusha
stos
push
mov
lahf
fwait
loopne
in
inc
jle
insl
and
pop
in
into
and
adc
out
cmp
movsb
cs
xor
jns
jae
add
dec
outsl
fs
and
or
push
lea
xorl
ret
mov
daa
icebp
test
adc
inc
mov
stos
rol
xchg
movsb
insl
jb
fcoms
dec
sahf
mov
push
fdivrl
mov
hlt
xchg
add
ja
fdivs
fiaddl
jecxz
in
or
stos
ficoms
or
and
push
xchg
in
lcall
stc
rorl
xchg
ja
bnd
sahf
in
repnz
aaa
scas
xchg
popa
lock
cltd
popa
out
aad
test
cmp
repnz
ret
or
and
ret
pop
jmp
mov
dec
into
mov
vunpckhps
andnps
mov
and
bnd
cld
pop
je
test
mov
xchg
sbb
adc
std
xchg
adc
scas
mov
mov
dec
int3
rol
in
je
jae
and
jmp
jmp
pop
jbe
test
out
es
sub
je
pop
ffree
mov
imul
cmp
orb
mov
jbe
pop
mov
ret
std
aas
mov
add
sti
pop
jmp
cli
inc
leave
fld
mov
adc
lods
leave
xchg
out
adc
bound
sub
or
mov
movsl
xchg
inc
cli
shrb
cltd
mov
js
outsl
mov
sub
jl
mov
add
sbb
es
mull
xor
movsb
popl
cwtl
repnz
pop
stos
sub
cmp
shrl
ss
push
adc
xor
fs
push
cld
popf
add
mov
in
and
sub
pop
adc
aad
inc
shll
cmp
mov
mov
aas
lock
mov
and
push
pop
cmpsb
call
out
adc
xor
popa
dec
mov
js
mov
mov
jne
and
sbb
sub
lret
pop
fstps
and
out
stos
jl
mov
add
lods
push
test
adcb
sub
inc
data16
add
pop
rorl
xchg
in
jg
sub
pop
je
ds
or
cltd
aad
xor
add
stos
adc
test
and
xor
push
pop
mov
out
fwait
mov
xchg
jnp
sub
or
into
imul
sub
cmp
out
mov
ret
mov
lret
sbb
inc
dec
inc
nop
jle
in
mov
cmovg
hlt
xor
sbb
adc
pusha
jno
push
push
out
sbb
mov
fistps
in
aam
jo
rcl
cmp
mov
ffreep
idivb
stos
iret
lea
jno
xlat
jns
sbbb
jg
adc
pop
popf
mov
jg
mov
in
mov
cmpsb
ret
ficomps
jge
pop
stos
cmp
jns
push
loopne
mov
xorl
sbb
stos
mov
pop
mov
sbb
add
jo
std
cmp
xchg
sbb
sub
cltd
cltd
nop
lods
jbe
sbb
sbb
xchg
repz
stos
mov
xchg
mov
sbb
sub
push
xor
sub
dec
pushf
adc
push
sarb
adc
lea
dec
fsubp
loop
dec
cmovl
jge
jbe
mov
scas
ret
sti
scas
push
rcr
mov
add
movsl
loope
rcrb
loop
mov
cli
push
cwtl
inc
rcll
and
xchg
inc
fnstcw
orl
popf
call
popf
jnp
adc
loopne
or
movsb
fisubl
repz
pop
dec
movb
mov
adc
dec
stos
jo
pop
imul
xchg
addr16
mov
push
jae
je
idivb
push
mov
out
nop
stc
mov
repz
std
inc
or
dec
jecxz
scas
outsb
mov
push
pusha
jne
lret
sub
pop
nop
xchg
and
mov
sbb
and
dec
inc
jle
lds
and
movsb
popf
icebp
ljmp
mov
adc
jne
sbb
dec
les
cmp
decb
in
sub
mov
sub
xchg
les
clc
sahf
fwait
adc
das
aam
subb
pusha
js
mov
jl
and
dec
leave
push
arpl
add
test
jmp
out
scas
xchg
sub
pop
xor
dec
push
ret
dec
mov
sbb
fmull
and
scas
xor
sbb
mov
mov
outsb
mov
or
nop
and
lcall
push
call
fdivs
outsl
mov
jge
jb
or
mov
sbb
sbb
stos
es
xor
std
push
enter
sbb
negl
subb
jns
or
xlat
test
pusha
jo
dec
adc
les
fdivr
fcompl
aam
mov
xor
ljmp
adc
aaa
ss
enter
pop
mov
and
xor
and
dec
ret
outsl
mov
push
sti
sub
int
jge
mov
arpl
addb
jb
cmp
ret
sbb
sub
or
dec
or
sbb
loop
mov
scas
jge
lea
cmp
lret
das
adc
sub
jae
aaa
adcl
stc
pop
in
test
xchg
out
inc
loope
in
dec
cltd
leave
mov
inc
in
jno
adc
push
adc
push
xor
pushf
mov
std
in
or
aaa
sahf
mov
clc
mov
addr16
jmp
ss
mov
pop
xchg
cmp
sub
inc
test
les
lea
xchg
cld
push
cltd
pop
sub
cli
inc
ljmp
cmp
adc
xchg
jno
and
mov
dec
scas
jle
rorb
cmpsl
adc
ja
popf
jle
cmp
repnz
pop
fwait
jmp
mov
mov
test
hlt
rol
ret
aam
and
xor
add
adc
arpl
inc
push
mov
mov
xchg
repz
hlt
rol
ret
aam
and
xor
add
adc
arpl
inc
push
mov
and
in
hlt
rol
inc
aam
and
xor
jae
arpl
inc
push
mov
mov
nop
repz
je
inc
ret
sub
sahf
mov
in
adc
incb
int
mov
mov
adc
dec
and
bound
xchg
mov
int
mov
loop
xchg
insl
adc
dec
xor
sub
jb
fwait
pop
mov
adc
lret
call
xor
or
push
sbb
ffree
movsb
aad
or
sbb
add
shlb
mov
or
adc
dec
loop
mov
and
sbb
sbb
fdivs
int
and
sbb
push
test
test
fucomi
je
in
stc
xchg
sarl
adc
dec
int
out
jmp
bound
aaa
and
test
pop
and
inc
ret
bound
insl
in
mov
ret
xlat
sbb
or
insl
std
pop
push
movb
cmpsl
push
ljmp
pop
fimull
mov
sub
testl
pop
xor
inc
dec
inc
ja
jecxz
mov
aam
mov
mov
pusha
push
je
xchg
mov
mov
ret
popf
loop
jmp
add
or
cmp
jne
daa
dec
das
js
jae
sbbb
rol
ret
mov
mov
adc
sub
daa
inc
push
je
push
sti
scas
shrl
push
jbe
ja
inc
xor
push
je
dec
push
xchg
addb
out
icebp
lods
rcrb
add
pop
and
cmp
bound
xchg
frstor
lods
rcrb
add
pop
and
cmp
bound
sbbl
dec
sarl
addr16
aaa
jecxz
ds
in
ja
xchg
or
aad
arpl
lcall
pusha
cmp
mov
pop
or
ljmp
mov
push
call
push
cld
adc
in
inc
mov
lret
clc
push
dec
ja
mov
repnz
imul
scas
subb
cmpb
xchg
stc
lret
insl
sub
cmp
test
je
mov
and
jl
inc
jae,pt
jae
sarl
ja
add
jge
sub
inc
aas
and
lret
or
mov
xor
scas
mov
data16
sub
pusha
insb
ss
xchg
gs
jge
call
outsb
loopne
xchg
aas
push
mov
add
sahf
xor
test
sahf
push
in
je
or
jle
fsubs
ror
jecxz
sbb
inc
pop
push
daa
adc
and
pop
jl
aas
xor
pop
sub
pushf
aaa
mulb
mov
inc
aad
inc
xchg
fmuls
in
cmc
jno
adc
outsb
dec
sub
jle
shlb
cltd
push
in
rcrl
xchg
mov
data16
mov
aad
dec
cmpsb
ja
test
adc
ret
int3
stos
add
pop
jb
push
loop
out
pusha
inc
push
loopne
fwait
lahf
cltd
decl
add
xor
jmp
pop
shrb
add
push
mov
sti
push
mov
sbb
rcr
data16
shl
push
push
loop
pop
ficompl
movsb
idivb
dec
out
aad
adc
mov
xor
jg
lcall
fnstsw
pop
sbb
jbe
xor
shr
jg
pushf
lods
jo
dec
fs
mov
ja
mov
push
test
test
mov
js
pop
mov
leave
xor
cmp
mov
push
popl
stos
jnp
stc
sbb
aam
mov
or
mov
adc
add
xchg
lahf
cld
popa
cwtl
rcrb
cmp
into
dec
add
je
sub
mov
dec
fsubr
fnstcw
imul
inc
xor
or
jg
cmpsb
xchg
mov
ss
mov
xchg
mov
aaa
jecxz
fucom
add
bound
pop
cltd
jbe
jne
cld
setne
imul
rcrb
lret
push
subb
movsl
xor
hlt
stos
imul
lahf
adc
inc
les
fwait
repnz
fistl
xor
push
lds
jle
cs
cmp
sub
jno
movsb
imul
and
or
dec
push
fwait
aam
dec
push
sub
inc
mov
sti
out
mov
cmp
cmp
ficompl
sub
stc
cmp
std
inc
andl
imul
cli
mov
iret
pop
arpl
push
push
aad
or
mulb
outsl
jns
xor
ret
dec
pop
mov
sbb
cmp
mov
mov
cmpsl
mov
mov
inc
sti
mov
aad
imul
mov
mov
cmp
mov
lds
imul
inc
adc
gs
mov
int3
daa
enter
jnp
lea
out
leave
or
addr16
ss
sbb
bound
dec
mov
and
adc
mov
push
out
dec
addr16
hlt
in
mov
pop
inc
cmp
sbb
int3
adcb
ret
loope
add
xchg
xor
push
sbbl
das
sbb
test
dec
mov
jmp
in
xor
cmp
mov
in
xchg
lret
popf
mov
xchg
push
cmp
rcl
sub
adc
mov
and
fildl
inc
rol
out
add
jl
cld
ds
adc
jle
and
xchg
roll
hlt
and
pop
xor
stc
fnstcw
ja
or
loop
in
jb
inc
inc
or
scas
and
xor
scas
add
mov
pusha
cmpsl
movsb
dec
les
pop
push
mov
dec
pop
popf
mov
aas
sub
paddsw
adc
jbe
roll
mulb
inc
enter
icebp
negb
mov
inc
pop
enter
sub
mov
push
pop
xorl
push
hlt
cwtl
fstl
scas
push
sbb
movsl
pop
jno
out
pop
jo
push
mov
dec
test
push
mov
sti
mov
hlt
cmp
pop
scas
jmp
nop
or
mov
out
ret
xchg
mov
pop
mov
add
xor
mov
xchg
popa
cwtl
xor
mov
popa
jb
add
mov
fcomps
mov
push
in
hlt
es
test
test
sbb
xor
sub
inc
xchg
and
testl
sub
test
sbb
push
in
add
mov
and
movsl
test
pop
mov
call
test
fisubrs
pop
sbb
mov
xor
sbb
std
push
stos
sub
xor
fucom
push
jle
inc
inc
and
mov
mov
sbb
jmp
imul
lods
mov
or
outsl
or
gs
fistps
das
aam
mov
mov
jp
dec
cmc
jp
and
mov
pop
popa
adc
xlat
or
xor
aam
nop
cld
cmp
stos
dec
aas
daa
mov
xor
mov
mov
or
push
sahf
jmp
inc
cltd
add
or
jp
dec
mov
cwtl
push
repz
or
faddp
mov
xchg
stos
out
adc
add
idivl
mov
pop
scas
sub
xor
mov
popf
idivl
faddl
shll
mov
jae
mov
dec
push
mov
ljmp
imul
in
cmp
insb
repnz
out
scas
push
or
dec
inc
jl
or
mov
fs
shrb
mov
cld
cmp
push
mov
popf
adc
pop
pop
aam
xchg
inc
or
push
stos
hlt
fiadds
jb
add
inc
fidivs
mov
aas
bound
mov
mov
int
push
inc
mov
mov
jmp
je
pop
pop
ja
call
mov
fwait
xchg
or
push
fcmovnu
xor
inc
inc
fldl
and
mov
push
mov
cmpsl
inc
int3
pop
int3
push
call
rcrl
jae
and
lea
mov
js
icebp
out
jp
add
int3
jmp
xor
fildll
add
xchg
jb
pop
loop
repnz
pop
xor
mov
jae
mov
cmp
pop
gs
mov
int
movsl
outsl
cld
aaa
or
shlb
xchg
testl
push
dec
movsb
or
pusha
mov
pop
push
loop
ss
scas
in
sbb
push
or
jecxz
ljmp
imul
push
outsl
imulb
and
nop
or
pusha
dec
add
add
lock
fistps
mov
adc
stc
push
outsl
arpl
fistl
lahf
inc
ljmp
fwait
ret
sub
leave
mov
nop
fcmove
sbb
xchg
pop
add
test
push
pmovmskb
jp
andl
lcall
sbb
cmp
jle
jg
mov
cmp
je
lahf
popa
ret
ret
ds
xor
ret
xor
and
inc
adc
add
lods
or
sarl
cmp
push
out
test
adc
stos
pusha
int3
daa
scas
push
mov
and
mov
enter
sar
mov
js
repnz
dec
cmp
scas
loope
lahf
mov
xchg
popa
mov
lahf
pcmpgtb
popa
xor
sbb
jmp
and
ljmp
hlt
mov
or
inc
lods
cmpsb
mov
sti
xor
popa
or
popa
std
or
pop
jmp
das
aad
sub
test
ror
push
push
and
jbe
cli
leave
pop
int3
lahf
pop
outsl
stos
or
cmp
iret
call
or
fucom
ds
shll
pop
mov
xchg
test
scas
scas
test
cmp
push
fisubs
shll
push
and
jne
je
movsb
rorb
out
add
adc
xchg
and
rcrb
je
lock
cmp
adc
ja
fsubp
hlt
adc
notl
jbe
in
cmpsw
jbe
inc
in
leave
push
xor
ja
outsb
push
stc
dec
aaa
in
mov
lahf
push
add
fistl
je
sbb
fsub
insb
mov
rcrb
mov
fsubl
mov
mov
cltd
movb
aas
fs
mov
cmpsb
xchg
push
and
cmpsb
mov
add
push
pop
push
aam
push
or
sub
cmp
aaa
loopne
test
pop
push
jo
in
rolb
icebp
push
sub
fdivp
loopne
jmp
aaa
cli
xchg
adc
divl
pop
mov
lcall
add
add
lret
mov
mov
xor
jbe
sub
lea
xor
fwait
test
aam
sti
mov
sahf
add
sbb
ret
mov
int3
addr16
adc
pop
xchg
movsl
mov
in
cmp
clc
fdivs
lods
mov
dec
ja
and
push
cmpsl
roll
fisubrl
and
repz
or
and
js
sub
mov
sahf
sbb
pop
fadd
jp
fisttpl
fsts
mov
inc
inc
mov
flds
repnz
pushf
mov
icebp
or
popa
data16
pop
je
mov
aad
mov
into
add
insl
mov
push
movsl
add
int3
clc
ret
mov
xchg
push
add
sbbl
inc
les
xor
dec
sub
ret
pop
jns
xchg
lahf
dec
mov
lods
div
adc
sbb
inc
inc
sbb
and
mov
cmpsb
mov
mov
std
push
bound
dec
jge
or
sarl
in
dec
pop
or
lret
call
cmp
mov
inc
pop
pop
pop
sub
cld
mov
jb
cmp
leave
push
in
add
jae
lock
data16
add
ljmp
mov
ds
xchg
sbb
pop
xor
ror
jp
repz
fbld
lret
adc
insb
add
scas
add
jg
enter
and
testb
pop
lea
mov
cmpsl
test
inc
push
or
jg
mov
sbb
mov
sub
or
movsb
push
jge
sbb
iret
fcomps
in
fiaddl
popf
push
jp
inc
les
shll
in
movsl
add
loopne
xor
xor
rcr
inc
popf
xchg
dec
pop
mov
jbe
das
fimull
xor
decb
in
in
sti
popa
out
cmc
popa
mov
mov
test
fsubs
mov
leave
mov
ss
jne
jl
cmpsb
xor
std
mov
bnd
add
into
push
lcall
into
adc
cmpsl
inc
movsl
inc
cmpsb
sub
inc
xchg
mov
lahf
jg
sbb
xor
mov
push
sub
inc
js
rorb
pop
lea
sbb
je
enter
ror
js
cmp
adc
and
adc
adc
ja
jmp
pop
cmpb
xchg
fiadds
orb
movsl
sbb
cmp
aas
in
insb
sub
int3
out
shl
push
dec
stos
bnd
sarl
mov
sub
stos
imul
out
pop
xchg
loope,pt
jmp
fistl
popf
stos
dec
cld
mov
addl
or
xchg
xor
push
sbbb
sub
bound
mov
push
addr16
negb
mov
inc
mov
adc
mov
pushl
or
push
icebp
adcb
imul
jp
mov
pop
pop
loope
cmpsb
sahf
pop
sbb
xchg
jb
adc
cltd
and
nop
jo
cmc
rcrl
jbe
out
cwtl
test
gs
jge
inc
xchg
adc
inc
xchg
out
mov
repnz
push
std
sbb
pop
xor
dec
in
flds
or
loope
dec
or
and
fcomip
jae
orb
xor
push
or
pop
sbb
hlt
lock
shll
shl
dec
sahf
popa
enter
push
add
dec
sti
into
xor
fsts
sbb
out
pop
fdivp
xchg
mov
rcl
repz
mov
and
pop
js
inc
hlt
aaa
aaa
dec
loope
dec
and
pop
repnz
aad
or
inc
xchg
adc
add
clc
xor
mov
xchg
xchg
fwait
dec
or
sub
or
push
mov
in
pushf
fiaddl
mov
and
scas
outsb
jo
mov
pop
orb
inc
cmpsl
mov
cmp
xlat
negl
jge
jnp
loop
inc
inc
lods
or
das
lods
xor
scas
and
mov
push
out
hlt
subl
cs
pop
push
mov
and
push
push
inc
in
test
icebp
outsb
sub
imul
mov
aaa
push
pop
addb
xor
and
and
leave
hlt
dec
dec
jmp
xor
neg
dec
lods
vmread
adc
jbe
pop
and
push
mov
iret
shlb
jo
push
jmp
stos
add
dec
daa
pop
add
inc
pop
cs
mov
cwtl
mov
adc
xchg
aam
inc
adc
lret
pop
data16
stos
xchg
sub
push
rcll
and
add
or
pop
jle
mov
push
aaa
leave
enter
sub
xor
add
pop
testl
rclb
cmp
test
pop
mov
fisubl
sar
jo
pop
in
aaa
jae
pusha
mov
out
or
jae
psrlq
add
push
jl
test
loop
pop
pop
pop
loopne
shlb
cwtl
addr16
xor
mov
ror
xlat
inc
test
xor
shrb
pop
outsb
pop
mov
ljmp
push
add
fmulp
outsl
cmpsl
shlb
add
sbb
sbb
sub
leave
fisttpll
cmp
icebp
xchg
fbstp
pop
cmpsb
and
xchg
stos
dec
in
lods
cmp
movsb
mov
mov
mov
mov
jecxz
lcall
jae
push
mov
into
dec
mov
ja
add
mov
divl
sbb
div
xabort
bound
shll
aad
das
andb
pushf
ret
aas
pop
inc
outsb
jnp
and
repnz
sub
movsb
jp
pop
popf
or
leave
or
int3
and
mov
sahf
xchg
adc
aam
inc
cltd
cmc
movsb
cs
rcrl
cmpsl
sbb
orl
adcb
sahf
adc
pop
pop
je
pop
cmp
cmpsl
fisubl
icebp
mov
repz
add
and
xlat
shl
sub
pop
sbb
cmpsb
xchg
es
imul
push
or
cmc
push
xchg
fwait
lods
xor
incb
pop
das
movsl
jle
mov
arpl
rcrl
negb
xor
mov
scas
jbe
aaa
popa
mov
sbb
xor
and
lock
or
stc
int3
pop
jnp
out
in
inc
loope
cmc
mov
push
vpshld
cwtl
fsubrl
cs
scas
sub
mov
sub
ret
out
jle
or
or
push
add
push
xor
inc
test
out
repnz
fmull
jle
incl
add
insb
or
push
cltd
aam
mov
shlb
or
xchg
inc
inc
and
lods
outsl
mov
roll
add
arpl
xchg
fdivrl
dec
cmp
decl
ja
test
cmc
inc
ljmp
ja
pop
and
scas
mov
leave
es
cmpsl
sub
cmp
xchg
cltd
mov
in
das
xor
movsb
push
out
rorb
dec
xchg
push
shlb
inc
push
ds
dec
xchg
and
lahf
mov
mov
shll
xorl
std
adc
xor
and
jae
xor
inc
movsl
aaa
cmp
jne
les
push
and
lret
inc
cmp
push
xchg
and
call
loope
jl
shl
in
dec
push
lahf
sub
mov
or
dec
mov
mov
sbbl
mov
inc
clc
cmp
sahf
mov
sbb
inc
sub
push
es
xor
stos
cmp
mov
outsl
sahf
pop
mov
pop
insl
xlat
push
pusha
les
cltd
lods
ljmp
or
mov
mov
call
test
jecxz,pt
or
and
adcl
sub
sysexit
pop
lret
sahf
or
dec
or
mov
pop
cwtl
xchg
popl
cmp
loope
jae
xor
test
sbbb
push
jae
scas
xor
mov
cmpsl
xor
mov
out
jl
sub
scas
cwtl
cli
call
out
mov
stos
mov
add
out
xchg
fisubrs
hlt
xor
and
cmpsb
ss
push
add
jno
rorb
ret
pusha
in
imul
decl
leave
nop
inc
mov
loope
aaa
mov
clc
lods
mov
pop
pop
and
movsb
lods
jns
sub
add
pop
adc
lds
cmp
jnp
mov
icebp
flds
scas
leave
in
jbe
sarl
jns
jle
fcomip
cmp
add
cmp
stc
stc
push
aad
mov
and
cltd
shlb
call
cmp
sub
pop
cmpsb
ja
or
fdivrs
rcrl
cmp
int3
outsl
fcmovb
mov
cwtl
mov
sbb
cmp
mov
xor
sti
pushf
inc
mov
fwait
jbe
sub
fisubrl
nop
fnstenv
xor
sarb
sbb
cmp
mov
repnz
lds
fidivrs
popa
adc
nopl
in
dec
mov
mov
xor
or
jne
xorl
mov
das
add
xor
mul
pusha
in
outsb
and
aas
mov
shrb
inc
push
dec
mulb
in
addr16
and
pop
lret
pop
and
mov
outsb
mov
aam
dec
jl
jns
rclb
pop
push
lea
mov
out
mov
pop
push
cltd
cli
or
adc
mov
inc
push
xchg
sbb
or
faddl
xchg
xchg
ret
sbb
pop
outsb
in
inc
lcall
push
jb
fsts
mov
rorb
xor
cs
mov
jae
fbstp
rolb
aas
sub
xor
cmp
out
hlt
sbb
push
sub
xor
inc
ror
mov
sbb
mov
cmp
push
cmp
fldl
mov
add
nop
jmp
push
push
out
cmpsl
push
dec
xor
mov
ret
leave
jbe
rol
pushl
lahf
aam
test
andb
dec
flds
sbb
lds
ret
js
adc
sti
xchg
nop
ret
dec
pop
mov
sub
mov
jns
lahf
cmp
mov
rolb
and
sti
jp
push
pushf
mov
in
sub
pop
into
nop
pop
ret
add
addr16
stos
jecxz
scas
iret
sti
xchg
sub
jp
inc
in
fildl
int3
aam
mov
outsl
xor
inc
pop
ficomps
dec
aam
push
adc
dec
inc
es
push
push
loopne
add
mov
push
inc
cmp
sub
fimuls
cli
sub
sbb
movsl
or
or
imul
cmp
cmpsl
fwait
xor
jns
jbe
lea
mov
push
or
test
aas
add
addr16
sbb
and
inc
cmpsb
push
or
rolb
mov
cmpsl
pop
aad
sub
push
sub
mov
out
xchg
push
push
rol
jge
add
flds
push
cmp
cmp
inc
int3
xchg
fnstcw
bound
int3
test
jle,pn
mov
icebp
daa
sarl
push
cmc
and
leave
inc
and
adc
out
and
dec
cld
mov
scas
pop
adc
aam
mov
nop
xor
adc
xlat
sub
xchg
stos
aam
imul
les
fldcw
and
bound
movsl
fwait
lret
sub
jp
lea
cwtl
sub
push
jge
sbb
sahf
jecxz
outsl
andl
pop
sarl
movsb
je
sub
mov
pop
in
push
cmp
in
jns
ret
inc
sub
mov
in
test
sbb
sti
fimull
int
gs
in
addr16
mov
int
pop
in
add
ljmp
xor
dec
loope
shll
outsb
sub
xchg
push
jb
subl
mov
mov
lcall
mov
xchg
cmpsb
repz
not
xchg
lcall
rcrb
add
pop
and
cmp
bound
xchg
frstor
lods
rcrb
add
pop
and
cmp
bound
xchg
mov
ret
popf
loop
bnd
insl
adc
inc
cmp
jbe
xchg
mov
ret
popf
loop
xor
xchg
mov
dec
lret
loop
repnz
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
rcl
sarl
andl
push
jae
and
jae
add
adc
hlt
icebp
repz
rcl
shll
xchg
stc
imul
inc
and
and
adc
add
icebp
ljmp
mov
mov
arpl
inc
das
and
and
jp
xchg
xor
mov
dec
movsb
mov
push
cwtl
xchg
mov
cwtl
mov
xor
lcall
ret
ret
inc
fs
and
cltd
pop
mov
inc
pop
and
out
adc
in
mov
mov
xchg
bound
in
adc
lods
adc
and
and
mov
lds
stc
pop
xchg
xchg
cmpsb
mov
push
mov
sahf
inc
aad
mov
inc
sbb
add
test
lcall
sub
mov
mov
and
je
insb
mov
pop
sbbl
cltd
mov
xor
and
adc
adc
icebp
repz
rol
shll
mov
pop
push
dec
inc
cmp
sub
add
or
cmc
xchg
mov
aam
enter
aad
or
xor
inc
pushw
jecxz
repz
fstp
in
out
clc
in
cmp
push
add
and
pop
inc
and
adc
mov
test
fistpl
xchg
andl
push
inc
and
xor
add
adc
jecxz
repz
rcl
shll
xchg
andl
push
inc
and
xor
add
adc
jecxz
xor
mov
and
inc
stos
sahf
mov
sbb
incl
xorb
dec
xchg
push
inc
leave
push
pop
es
sub
sti
push
addr16
inc
fildl
fists
in
imul
outsl
inc
jle
jb
xchg
rclb
int3
addb
xlat
adc
inc
push
add
xlat
stc
inc
sahf
dec
leave
inc
mov
sbb
push
add
test
inc
jb
arpl
jmp
sub
jp
dec
stos
fisttpl
int
xor
sbb
test
movb
sbb
sub
cwtl
push
inc
add
movsb
icebp
aas
enter
pop
xchg
orb
test
push
cs
sahf
in
inc
test
sti
dec
jmp
cltd
jmp
xchg
call
and
addr16
jnp
xchg
adc
jo
mov
out
jae
mov
leave
pop
xchg
movsl
push
mov
pop
imul
jb
leave
jns
aad
add
jmp
popa
xchg
mov
push
add
inc
and
mov
gs
mov
shl
loope
push
xchg
or
push
mov
add
sbb
cwtl
test
pop
mov
aaa
dec
clc
sbb
and
mov
into
test
hlt
call
cld
cli
and
test
jge
outsl
sub
add
xchg
mov
stos
cmp
mov
pop
insl
mov
xor
mov
jp
mov
cmp
dec
loope
and
mov
test
std
xchg
ja
mov
movsb
dec
adc
pop
push
mov
jb
es
jl
sbb
jne
mov
or
int3
jae
lret
adc
sbb
mov
sbb
xlat
inc
mov
loopne
shr
xor
xchg
sub
scas
push
jg
mov
ret
enter
jle
daa
inc
mov
mov
inc
sahf
or
mov
into
ds
test
or
cmp
in
pusha
ss
rorb
cmp
inc
xor
mov
sbb
and
ss
aas
inc
push
js
push
jmp
stos
inc
shll
xchg
int
sahf
dec
or
mov
jne
xchg
inc
sti
sbb
mov
add
daa
mov
aad
aad
push
inc
cmp
clc
jp
jne
fdivl
jnp
call
out
jno
jns
jl
add
stc
push
shlb
push
push
push
lds
xor
stos
jg
imul
sub
adc
ja
loop
jnp
in
cwtl
or
adc
mov
xor
jne
or
lods
jne
sbb
dec
ljmp
inc
sbb
add
aas
out
mov
cmpsb
repnz
fisubs
pop
addr16
dec
fcomps
add
out
jb
movsl
mov
push
mov
inc
pop
data16
lock
fisubrl
mov
ret
xchg
int3
insb
ret
and
in
out
mov
add
mov
jns
js
aaa
push
inc
movsl
adc
xchg
mov
xor
mov
push
imul
in
ds
fiadds
or
jmp
add
incb
mov
jl
or
sarl
ficomps
call
ss
pop
push
mov
jp
adc
mov
mov
cwtl
sbb
pop
mov
jg
int
rclb
jmp
add
das
mov
mov
xchg
mov
sub
in
iret
lret
mov
lcall
mov
lds
add
jl
dec
sub
pop
mov
add
add
lea
jo
lret
mov
mov
ds
shlb
jp
mov
stos
das
adc
jl
popf
cmp
cmp
shll
mov
push
mov
fists
fadd
pop
nop
sbb
jnp
imul
loope
int3
push
clc
cmp
insb
and
cmp
movsl
in
xchg
andb
mov
lea
mov
jmp
aaa
negb
jbe
fwait
into
bound
xchg
xchg
fbstp
in
mov
rorb
xchg
aas
roll
mov
sbb
test
jae
mov
mov
in
gs
inc
pusha
popa
cmpsl
movsb
test
inc
ret
mov
add
push
mov
cmpb
jge
leave
imul
iret
lods
cltd
xchg
jg
iret
mov
sti
push
pop
xchg
fcompl
test
loop,pt
lds
jns
daa
sarl
pushf
jmp
jb
and
ret
test
mov
hlt
and
adc
xor
and
aaa
cmpsb
xor
lea
xchg
aaa
jbe
fs
mov
dec
xlat
xchg
sti
imul
repz
or
cmp
xchg
out
lods
and
cmp
js
sbb
mov
das
mov
repnz
sub
sbb
mov
mov
push
stos
push
nop
test
push
and
sub
test
jbe
cmc
fisttpll
mov
mov
pop
int3
imulb
mov
add
rorb
fists
and
sbb
out
jg
dec
adc
pop
in
mov
cwtl
lods
outsl
scas
dec
xor
sbb
push
add
push
add
rorl
sbb
leave
cwtl
rolb
jae
add
xchg
loope
adc
movsb
sarb
sub
js
pusha
fwait
adcb
leave
ret
into
fnstcw
andl
push
xchg
pushf
adc
and
cmp
xor
pop
xchg
rcrb
mov
push
sti
fstps
aaa
push
ret
inc
mov
mov
or
sub
notl
mov
cmp
ffree
dec
aas
pop
jo
add
push
xchg
test
insl
ds
inc
or
pop
mov
mov
sbb
dec
pop
xchg
push
add
dec
push
inc
std
add
xor
push
mov
iret
insb
and
mov
push
mov
sbbb
cmp
test
das
add
repnz
sar
push
clc
lea
je
mov
fisttps
jae
or
mov
pop
cmpb
pop
jne
imul
and
stc
adc
imul
xlat
pop
lcall
cli
push
add
in
xorb
lcall
das
loope
jne
repz
xor
sub
and
daa
dec
fisubl
fcmovne
push
cmp
aam
and
mov
addr16
mov
jne
cmp
jmp
mov
xchg
call
subb
push
aam
jg
pop
push
mov
leave
sbb
les
lahf
inc
adc
insl
negb
mov
addr16
outsb
mov
hlt
and
jb
add
push
inc
jle
pop
fnstsw
dec
idivb
fnsave
pop
cmpsl
pop
dec
pop
cld
shrb
fcomi
bt
ficoms
pop
fwait
aas
negl
jne
xlat
mov
ret
mov
xchg
mov
jno
jno
mov
inc
iret
shl
jmp
mov
cmc
insl
imul
shlb
mov
jno
popf
jg
mov
lock
add
dec
inc
cmp
pusha
xchg
mov
jge
incl
shll
inc
test
je
inc
mov
xchg
aaa
leave
sbb
lock
ret
aam
adc
lea
and
xchg
adc
mov
xchg
pushf
js
popf
xchg
pop
mov
jecxz
loop
dec
lcall
pop
cmp
int
jge
roll
jo
xchg
fnstsw
mov
int
jecxz
adc
shrl
ficoms
pushf
adcl
pop
clc
mov
out
cld
loop
icebp
push
add
inc
inc
add
adc
aam
and
sti
clc
int3
adc
jb
dec
je
test
out
negl
xor
mov
adc
push
xchg
mov
mov
mov
ja
and
inc
ret
fstps
hlt
push
fwait
cmp
xchg
push
mov
jnp
testb
cltd
sti
lret
ret
lcall
push
fs
xchg
xor
xor
in
sub
sbb
shll
or
out
arpl
daa
repnz
sti
imul
cmp
pop
dec
pop
push
xchg
ljmp
nop
les
into
ja
pop
push
mov
sbb
stos
xorl
cmpsb
cld
xor
jl
add
adc
lahf
sbb
mulb
mov
rorl
push
dec
cmc
rcrl
pusha
dec
push
adcl
mov
test
sbb
inc
push
push
outsb
punpcklwd
pop
mov
daa
dec
sti
cs
push
popf
sbb
stc
aad
fsubrs
lahf
push
into
add
cmp
pop
enter
adc
aaa
test
pop
jmp
cmpb
dec
dec
xchg
mov
jnp
mov
mov
mov
push
inc
cmp
mov
dec
mov
cs
inc
addl
xchg
mov
xchg
rolb
mov
mov
lret
mov
adc
cmpsb
loop
pop
adc
xor
mov
mov
roll
popa
out
mov
popf
fbstp
sub
fstpl
ljmp
andl
popa
in
or
push
movsl
mov
sub
movsl
push
xor
xchg
clc
inc
arpl
jns
sahf
ja
mov
xchg
mov
orl
mov
lcall
fstpt
shl
ljmp
test
push
push
gs
rcll
ficompl
lods
pop
lahf
int
adc
sahf
ss
adc
push
shr
loopne
adc
sub
mov
sbb
cmp
adc
mov
mov
cmp
jo
push
mov
and
fadd
mov
xor
push
leave
adc
jne
or
inc
fwait
cwtl
add
je
hlt
aad
cld
mov
aaa
mov
mov
cltd
xor
popa
and
and
mov
aam
cli
int3
adc
mov
fisttps
divl
push
cmp
sub
mov
ja
xor
inc
lods
dec
push
into
push
subl
dec
lods
insl
mov
inc
pop
movsb
or
icebp
lcall
or
xor
lcall
fs
arpl
ljmp
aas
lahf
and
mov
xor
ja
xor
push
pop
mov
jecxz
dec
xchg
or
sub
jae
dec
pop
das
xchg
loope
stc
cmpsb
dec
sbb
bound
dec
dec
sti
xchg
mov
cs
inc
cld
in
in
and
dec
js
icebp
cmp
test
cmp
dec
pop
push
lcall
pop
pushl
jmp
lret
mov
pop
push
mov
push
addb
mov
mov
cmp
sahf
je
bound
out
jmp
pop
adc
or
sub
mov
dec
in
xchg
or
into
push
test
call
sbb
les
push
aas
mov
xchg
lock
mov
sbb
jb
es
jnp
pop
pop
push
mov
movsb
or
add
add
iret
mov
mov
sbb
inc
inc
ljmp
jp
dec
popa
push
pop
fsubrl
mov
sbb
xor
stc
push
decb
imul
mov
dec
sbb
imul
icebp
and
cmp
sbb
dec
repz
lea
push
push
fwait
btr
outsb
stc
add
aas
dec
jne
test
leave
push
je
es
mov
push
pop
int
xchg
insl
imul
pushw
inc
dec
shlb
repz
xor
nopl
inc
inc
add
push
call
imul
jb
movsl
adc
int3
mov
and
add
repnz
clc
mov
aaa
mov
pop
mov
inc
cmp
mov
sbb
cmpsb
jmp
cli
mov
pop
dec
test
pop
push
movsl
inc
lea
and
cmp
outsb
rolb
les
and
adc
je
sub
add
inc
xchg
push
shrb
push
fnsave
cmp
aas
movsb
mov
out
inc
push
fidivl
jo
cmp
xor
fisttpll
dec
mov
pop
cwtl
inc
cltd
fcomi
out
and
imul
test
xor
pop
add
xchg
ss
rorb
inc
or
pop
jmp
adc
out
fimuls
stos
mov
pop
pop
dec
ret
dec
push
jbe
outsb
cmp
xor
pop
xor
inc
xor
pop
push
xor
aaa
sti
aaa
ffreep
cmpsb
or
int
mov
jns
inc
ljmp
or
jge
roll
out
lods
pusha
scas
add
mov
stc
std
loop
sbb
sbb
or
xor
sbb
push
loope
push
xor
inc
mov
shl
adc
adc
cs
enter
out
pop
pusha
mov
dec
stc
or
mov
sti
mov
mov
adc
stos
rcrb
stc
ret
cmc
mov
mov
xchg
stos
inc
sbb
inc
fbld
ret
pop
sub
and
add
imul
mov
fwait
cs
jnp
mov
cwtl
xchg
mov
cmp
mov
pop
mov
ss
hlt
movsl
cmpsb
xchg
loope
mov
push
sub
dec
pop
shlb
pop
adc
cmova
add
aas
imul
sbb
ss
cmp
push
add
ljmp
ror
inc
roll
mov
inc
push
loopne
cmp
cmp
imul
push
mov
cmpsl
pop
adc
in
imul
lcall
mov
gs
test
lea
pusha
ds
stc
nop
test
shrb
xor
in
push
adc
sahf
mov
add
dec
lcall
pop
mov
pop
loopne
pop
dec
cld
into
cmp
sti
xor
push
push
dec
dec
cmp
das
mov
stc
mov
aam
inc
aad
sbb
ret
jnp
sbb
out
ficompl
test
cltd
push
lret
je
clc
mov
mov
repnz
jns
stos
inc
lret
cmp
fmull
xchg
mov
loop
xchg
xchg
mov
and
shlb
std
xor
sub
insb
std
push
cmp
in
lahf
shrl
xor
into
pushf
cmp
ss
push
ret
sahf
cld
cmp
sub
mov
and
fwait
or
in
cmp
or
arpl
scas
aaa
dec
mov
xchg
addr16
jmp
daa
xchg
ret
sbb
adc
jns
inc
addl
sahf
lret
cmpsb
sbb
jg
ror
add
enter
cmp
sbb
stos
and
and
lods
inc
mov
lret
jns
in
nop
and
inc
mov
push
jp
push
jbe
std
rorl
cmc
je
scas
jmp
jo
mov
xor
and
addl
loopne
leave
lea
mov
add
add
cmpsl
test
xchg
dec
aam
in
and
and
mov
mov
or
push
push
orl
lret
loope
loop
push
cwtl
lods
cmc
hlt
rcr
mov
mov
mov
jmp
clc
push
cmp
jge
and
mov
fcomip
push
cmpsl
psubsw
cmp
aas
stos
sub
lods
mov
sahf
leave
in
mov
popa
test
adcl
xor
mov
add
fadd
addl
std
cmp
subl
fnsave
addr16
cmc
jg
push
sub
pop
inc
fdivr
cld
outsl
aad
push
pop
xor
xorl
or
or
or
mov
fwait
pop
fimull
push
jns
push
mov
xchg
int3
add
movsb
mov
jb
out
lea
insl
call
popf
sub
call
dec
push
fsubp
shl
lret
fnsave
outsl
out
pop
popf
dec
cmp
loope
ret
adc
lods
mov
scas
mov
mov
test
mov
jle
rcl
jecxz
stc
shlb
loop
dec
xchg
and
push
call
repz
mov
in
push
jge
mov
std
in
testb
jbe
xchg
add
push
cmp
pop
add
mov
adc
in
adc
xchg
aad
test
lcall
sub
fadd
fs
in
out
outsl
adc
dec
imul
xchg
fidivrl
sub
pop
add
mov
aas
imull
fwait
mov
add
std
xchg
mov
and
inc
push
movsb
mov
mov
movsb
mov
push
pop
std
aas
in
push
add
adc
leave
pushf
ds
inc
stos
psubusw
and
je
jp
lret
imul
sar
sbb
lods
and
out
dec
sub
and
dec
jno
fdivs
inc
push
push
mov
lahf
cmp
rcll
push
jge
mov
nop
cmp
loop
lock
cmc
push
out
pushf
rcrb
adc
or
push
pop
add
les
pop
push
or
cmpsl
pop
arpl
pop
and
rclb
loope
dec
in
in
xchg
jecxz
loop
lret
pop
fidivrl
push
add
outsb
inc
cwtl
out
test
std
pop
add
lods
js
test
ret
dec
cmp
out
and
daa
cmpsl
mov
mov
hlt
cli
xor
xchg
fnstsw
sahf
mov
pop
xchg
testl
std
daa
or
out
lods
sub
inc
xor
xor
pop
jmp
mov
and
sub
sbb
inc
lock
mov
pop
xor
ja
cmpl
push
mov
ret
lret
mov
mov
clc
dec
fsubs
mov
xstore-rng
cmpsl
pop
in
testb
fimuls
lods
inc
icebp
dec
mov
ss
hlt
push
in
mov
stos
shl
aaa
fldenv
mov
dec
push
adcb
sarb
pop
inc
sub
jge
in
pop
out
mov
mov
cwtl
mov
dec
popf
sbb
mov
jg
outsl
ss
outsb
ds
mov
pop
outsb
inc
mov
mov
sahf
adc
addl
fs
out
fsub
adc
xchg
add
push
ja
mov
pop
mov
fs
jmp
mov
adc
sub
in
movsl
inc
das
mulb
mov
orb
adc
or
add
pop
mov
sub
or
icebp
repnz
insl
test
dec
mov
jns
dec
cmpsl
inc
repz
rol
pop
jne
adc
or
dec
repz
ja
ss
je
or
mov
cmc
test
mov
ss
shrl
dec
out
outsb
in
sub
jnp
push
mov
lret
push
jns
xor
std
sti
and
jne
movsl
gs
pop
and
push
adc
repz
fadds
stc
out
jecxz
adc
pop
js
mov
inc
mov
push
pusha
and
add
mov
cmpsl
cmc
mov
movsb
pop
mov
inc
push
iret
call
or
test
arpl
dec
dec
push
push
insb
jns
pop
shrb
out
cmp
adc
cmpsl
mov
push
cltd
dec
movsl
vsqrtsd
popa
push
scas
jns
jl
jnp
bound
nop
pop
push
cmp
jns
es
push
mov
dec
xchg
rcrl
ss
loope
and
lds
sbb
fidivs
jae
xor
aaa
mov
arpl
insb
adc
fnstenv
call
out
imul
bound
mov
inc
sub
jecxz
mov
ret
inc
jae
mov
fsts
add
repz
dec
xchg
aaa
push
xchg
or
mov
xorl
inc
mov
insl
daa
xorb
mov
push
fidivrl
xor
sar
stos
pushf
mov
and
pop
test
jp
scas
dec
or
scas
xlat
xchg
mov
pushw
push
lods
in
test
inc
aad
xbegin
fdivrs
push
mov
mov
push
hlt
imul
mov
cmp
jae
push
ret
xchg
jno
adc
ret
addr16
add
xchg
repnz
pop
adc
add
mov
dec
into
ljmp
out
sbb
sub
and
adcl
mov
out
into
xor
cmpsb
ret
mov
push
inc
insb
cltd
aas
mov
test
mov
xor
cltd
inc
and
fwait
rclb
or
and
sahf
aas
int
fmull
jnp
nop
mov
adc
inc
repz
mov
dec
xor
jp
mov
pop
pushl
add
mov
pop
mov
out
sub
xchg
out
adc
push
pop
shl
imul
inc
shll
cmp
xchg
test
push
fistpl
push
jnp
movsl
in
xor
pop
mov
dec
pushf
sub
mov
std
cmp
lret
sbb
ljmp
cmp
mov
movsl
mov
rcll
lock
or
aam
nop
jbe
outsb
rcl
shll
xchg
andl
push
inc
and
xor
add
adc
jecxz
repz
rcl
shll
xchg
andl
push
inc
and
xor
add
adc
jecxz
repz
rcl
shll
xchg
andl
push
inc
and
aaa
and
adc
add
icebp
loope
rcl
shll
adc
jmp
mov
in
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
sub
leave
cmc
inc
lds
das
push
jl
mov
icebp
jne
inc
rcll
and
xchg
adc
inc
lds
and
adc
mov
icebp
push
out
inc
rcll
dec
aad
addl
cmc
insl
xchg
xlat
xor
jmp
push
cmpsl
sbb
pop
divb
adc
add
xchg
je
add
repnz
into
xchg
jp
hlt
mov
insl
outsb
es
lahf
fsubrs
movsb
into
dec
sub
xchg
xlat
gs
or
ds
and
add
cwtl
xor
popa
lock
sti
test
and
push
mov
enter
add
into
add
cmp
add
and
adc
lcall
sub
mov
xchg
in
outsb
inc
in
mov
fiadds
pop
xchg
and
mov
push
push
jbe
xor
adc
ljmp
hlt
out
lods
loop
ss
call
sbb
and
mov
les
jno
inc
inc
cmp
mov
pop
test
mov
push
iret
sbb
addl
aas
sti
dec
roll
in
jo
andb
xor
dec
filds
inc
je
mov
lcall
jmp
stc
flds
mov
movsb
and
jns
sarb
mov
mov
xchg
adc
add
icebp
jne
inc
rcll
and
xchg
adc
inc
lds
and
adc
roll
mov
add
mov
jmp
cmp
cmpsb
lret
jae
jmp
insb
and
cwtl
test
es
inc
pop
orb
jne
mov
mov
mov
cs
fists
xchg
xor
gs
addr16
mov
inc
jne
pop
cwtl
cs
or
cmp
addb
mov
pop
xchg
and
jmp
pop
loope
jge
clc
gs
mov
cs
cmpsl
pusha
push
jns
and
jnp
mov
mov
pop
mov
aad
call
xchg
gs
fdivrl
sub
dec
enter
sub
jmp
in
cmp
jae
cmp
cwtl
jae
jmp
int3
lods
pop
mov
jg
push
pop
and
into
inc
mov
push
sahf
and
mov
pop
lds
pop
jnp
mov
jb
jns
ja
push
cmp
push
int3
sti
in
icebp
inc
das
add
dec
lret
add
in
pop
orb
push
pop
xor
int3
mov
lcall
lds
mov
mov
gs
sti
fs
sub
xchg
jl
adc
les
push
dec
outsb
out
xorb
popa
xchg
outsl
xor
mov
cli
or
jno
daa
ret
into
xor
dec
mul
sbb
movsl
outsb
cmp
or
in
jo
pop
mov
mov
mov
xor
mov
jae
xchg
fwait
mov
popa
push
xchg
mov
push
mov
lahf
add
aam
pop
insl
jnp
stc
sbb
insl
fbld
xor
add
sub
stc
mov
pop
pusha
jp
sti
fbld
xor
outsl
lcall
lcall
adc
pop
mov
imul
xchg
imul
imul
imul
arpl
push
pop
aas
addr16
xchg
idiv
and
inc
bound
push
lods
das
and
je
jl
jnp
call
imul
xor
xchg
jnp
es
imul
and
iret
das
test
aaa
lds
xor
shlb
fcomi
xorl
mov
or
shll
insb
and
mulb
pop
dec
daa
jo
jns
mov
mov
pop
les
xor
lcall
addr16
insl
outsl
lods
cmp
mov
call
lahf
xchg
cmp
clc
pop
xchg
cmpsb
lds
xchg
dec
or
sub
je
std
xor
jg
lods
pop
loopne
inc
cmp
fisttpll
xorl
aaa
rol
push
pop
daa
jge
out
push
jle
ja
repnz
call
xchg
lock
xchg
sbb
mov
pop
call
mull
xor
aaa
lock
pop
aaa
cmp
dec
push
mov
test
out
inc
sti
inc
mov
or
jge
roll
mov
sub
in
movsl
jns
sub
inc
fsubr
in
cmp
in
mov
scas
mov
stos
jb
jle
dec
cmc
sub
jns
or
xor
lds
jno
xlat
cltd
inc
loope
sub
jg
fmull
lcall
outsl
cld
into
bound
cwtl
shlb
fsubrl
mov
aas
xchg
xlat
adc
cmp
or
jl
xchg
shlb
or
cmpsl
pusha
into
lods
cmpsb
loop
push
fdecstp
call
jl
cmp
jp
ret
ret
daa
cld
iret
cli
xchg
xchg
imul
mov
call
inc
loop
rcll
jns
out
inc
pop
out
mov
pop
lret
shl
outsb
cmp
push
mov
sub
fsubr
push
push
mov
mov
pop
sbb
inc
mov
lahf
push
dec
mov
mov
push
mov
jp
stos
adcl
fwait
sub
bound
aas
loope
jo
shlb
movsl
mov
mov
sahf
rcl
mov
xor
ficomps
cltd
loope
sbb
sub
inc
or
adc
pop
adc
imul
add
fisttps
pop
xchg
jno
testb
loop
mov
loope
das
out
into
fimuls
inc
lods
and
stc
pusha
push
add
ss
mov
jo
jecxz
inc
mov
std
cmc
xor
mov
push
mov
je
jbe
and
xchg
out
insb
fucomip
mov
dec
sbb
dec
push
pop
mov
cmp
mov
add
or
mov
mov
xchg
mulb
nop
pop
push
mov
dec
pop
aas
aad
cs
sbb
cmc
xchg
test
add
orb
shl
and
jge
fldpi
es
scas
push
dec
mov
es
mov
sarl
adc
xchg
sbb
jmp
movsl
jo
mov
jae
xchg
ficomps
mov
push
pop
mov
iret
cmp
mov
dec
ret
lahf
repnz
cmp
ds
adc
mov
pop
mov
std
xchg
scas
testb
dec
push
or
pop
sbb
xchg
jo
ret
subl
mov
test
int
sar
inc
dec
sbb
sbb
scas
aam
dec
adc
xor
aam
cmp
sbb
icebp
and
dec
xchg
cwtl
daa
rcll
pslld
lret
jl
xchg
xor
lods
jo
bound
pop
jae
and
push
dec
popa
xor
int
shr
mov
push
enter
adc
out
mov
outsl
cli
dec
mov
enter
mov
push
cmpsl
sub
pop
outsb
test
cmp
or
inc
jle
mov
jge
sbb
adc
outsl
addr16
mov
iret
or
hlt
test
xchg
mov
jns
inc
inc
dec
mov
les
xchg
jo
ds
push
and
lret
jns
sahf
push
mov
js
xor
pop
cmpsl
dec
call
xorb
rclb
mov
mov
lret
xchg
sub
xchg
mov
sbb
add
jne
stos
sarb
push
jb
xchg
vpslld
push
aad
sub
mov
lahf
xor
xor
rol
mov
cmp
cmpsl
mul
or
jne
fwait
stos
cmp
mov
sahf
insb
addr16
inc
xchg
push
cltd
pop
push
test
add
mov
in
push
sbb
mov
fiaddl
lods
jnp
mov
inc
xchg
push
cwtl
jo
shll
and
cmp
push
mov
test
fsubrl
dec
or
mov
cmp
out
aaa
mov
sub
rcrl
dec
jge
jl
rorl
add
xchg
pop
loopne
sbb
jl
inc
or
xorl
cltd
jle
push
pusha
lds
mov
rorl
pop
imul
or
sbb
arpl
cmp
lret
and
mov
inc
insb
out
sub
sti
fsubrs
sub
mov
dec
ljmp
sub
fcmovbe
cwtl
in
outsb
sub
xor
test
sbb
and
rorl
adc
or
jae
xor
loope
or
lds
add
pusha
out
xorb
mov
or
icebp
inc
and
enter
mov
or
jge
test
cmpsb
push
pop
cmpsb
sbb
cwtl
popa
inc
sbb
cli
mov
shr
mov
or
or
jns
cs
sbb
pop
inc
mov
xchg
fs
test
frstor
bound
scas
out
fs
mov
dec
jg
es
inc
mov
pop
ljmp
mov
push
aas
daa
int
aad
mov
sbb
stos
stos
xchg
xchg
lds
inc
sub
aad
mov
cmp
pop
mov
test
fdivrp
shrb
test
push
inc
jle
bound
jnp
mov
cli
fimull
sbb
fstl
sub
add
cmpsb
imul
jnp
xor
bound
cli
pop
mov
xchg
inc
fidivrs
lock
ret
test
call
sahf
xchg
shrb
cmp
sub
lahf
xor
int
push
or
subb
sbb
and
add
shrb
sub
arpl
jb
mov
cwtd
mov
adc
test
dec
dec
movsb
jne
clc
stos
bound
lahf
mov
imulb
and
out
cmp
ljmp
mov
pop
sub
iret
test
andl
pop
into
sahf
push
jecxz
jge
mov
push
xchg
addr16
fistpl
adc
loop
inc
adc
mov
push
sbb
sub
clc
pop
push
or
mov
mov
jo
xchg
daa
outsb
or
xchg
adc
popa
out
inc
xchg
jecxz
push
mov
xchg
mov
xchg
divl
aam
movsb
les
out
push
sub
fwait
rolb
ret
push
pop
test
xchg
xor
popa
jo
cmp
shll
xchg
mov
sti
push
push
mov
add
cmpsl
out
adc
sub
je
add
rolb
lcall
push
mov
add
xor
and
adc
enter
pusha
mov
in
mov
cmp
rcr
imul
mov
cmpsb
mov
lret
push
stc
rolb
cs
xchg
or
arpl
shld
mov
cltd
andb
adc
shlb
test
xchg
popa
popa
mov
loopne
inc
push
jb
aam
jb
cmpsb
repnz
xor
cmpl
fidivl
js
fwait
ss
xchg
in
div
ret
xchg
or
sbb
cld
aam
imul
sahf
xchg
inc
pop
xlat
shlb
in
push
mov
or
add
cmp
pop
push
iret
push
inc
movl
jp
dec
push
inc
je
and
or
dec
ret
dec
sub
addl
aam
in
daa
or
es
sbb
sbb
xor
cmp
sbbb
adc
stos
sbb
cs
outsb
popa
fdivrl
ljmp
adc
pop
adc
sub
cmp
jo
xrelease
pop
inc
push
jnp
addr16
sahf
bound
add
cmp
addr16
push
or
shlb
add
adc
cmp
sahf
sahf
call
mov
bound
sarl
and
push
lret
out
or
jne
subb
mov
pop
test
jp
push
push
push
in
ret
ljmp
inc
into
fbld
std
xchg
mov
or
jbe
out
mov
fcompl
jl
repz
xor
mov
outsl
stos
xchg
mov
adc
add
push
daa
in
scas
test
das
mov
jae
push
and
inc
xor
sub
add
adc
cmpl
mov
enter
push
mov
mov
xor
in
dec
es
movsb
mov
rcrb
pop
scas
test
pop
ds
pop
xchg
push
icebp
pop
xchg
xor
aam
ds
je
cmc
mov
jl
mov
test
loope
cmp
loopne
out
mov
jae
fiaddl
das
mov
fistps
mov
fnstcw
jno
mov
lahf
inc
push
pop
lcall
pop
mov
mov
ffree
mov
fdivl
out
loope
jg
stos
ret
ret
push
mov
jae
or
pop
or
insb
add
jl
xor
out
push
push
push
xor
popa
pop
fwait
movsb
inc
inc
cmp
test
push
cli
lds
leave
push
mov
ljmp
dec
sub
cmp
mov
xlat
push
psubd
pop
nop
push
rcr
ret
sahf
adc
loop
outsl
fistps
or
dec
jmp
bound
xor
adc
stc
lods
xorb
mov
sarl
sub
pop
ficomps
ror
flds
neg
imull
add
mov
rorb
pop
push
jbe
cltd
cmpsb
push
mov
mov
stos
mov
xlat
scas
js
fidivrl
dec
sub
xor
daa
mov
sbb
idivl
call
push
test
jbe
imul
fnstcw
lahf
push
ficoms
cmp
pop
fwait
arpl
lahf
inc
xor
popl
inc
idiv
jo
add
int3
out
pop
push
jo
idivb
mov
sub
add
xchg
fbld
insl
add
jnp
roll
pop
es
daa
lret
and
orl
mov
cwtl
push
in
ss
push
mov
or
and
jecxz
insl
popa
subb
xchg
out
sarb
into
xor
fsubs
mov
fisubl
test
lret
jne
sub
cmp
into
loop
divb
cmp
cmp
jne
scas
rcll
jmp
rol
jg
fldt
mov
std
lods
or
push
aaa
and
in
popf
sahf
push
cmpsl
lret
incb
pop
lods
ja
inc
cwtl
xchg
push
jl
scas
fs
mov
mov
xlat
sub
cli
je
sbb
xchg
dec
inc
jne
jmp
pop
lcall
insb
add
ja
jmp
mov
lea
push
rcl
inc
fwait
mov
repz
dec
lahf
and
jl
mov
js
lea
cltd
dec
pop
pop
inc
rcl
dec
add
lret
add
jbe
lods
xchg
fstl
cmp
push
inc
in
jecxz
mov
push
repnz
cwtl
xor
sti
sbb
xchg
dec
add
mov
jmp
insl
xchg
outsb
bound
push
xchg
sbb
mov
and
pop
test
loope
and
push
or
out
push
jecxz
mov
popf
sbb
aaa
cmp
pushf
dec
mov
and
cmc
jg
xor
out
jnp
cmc
mov
push
iret
adc
adc
jle
sbb
repnz
fadds
push
je
inc
fwait
mov
ljmp
mov
adc
lea
add
insb
aad
sti
mov
mov
mul
data16
subb
inc
mov
pop
ljmp
insb
lods
inc
mov
cmpb
scas
test
push
sub
in
hlt
xor
movsb
push
cwtl
dec
pop
inc
popf
inc
jl
shrb
sbb
sub
mov
maskmovq
testl
adcl
add
mov
loopne
jecxz
jo
push
ret
push
push
lods
xor
adc
cmpsl
std
rcrb
xor
daa
lds
push
repz
inc
sti
movsb
mov
fs
cmp
loopne
ja
lods
cwtl
std
sub
cld
adc
xchg
mov
clc
adc
stos
push
xchg
or
pop
mov
into
and
ljmp
cld
cmp
jne
jmp
ret
add
sub
mov
fwait
push
movsb
data16
cmp
scas
push
push
jns
cmpsb
in
jecxz
and
mov
mov
insl
popf
std
fucom
mov
xor
sbb
mov
push
sbb
jbe
arpl
push
jge
lret
ljmp
in
or
sbb
xor
xacquire
jge
mov
insb
pop
cmc
jmp
aas
pop
loopne
popa
jecxz
inc
pop
daa
or
pop
sti
or
test
loopne
pusha
inc
push
rorb
test
mov
jbe
push
cwtl
decb
cld
xor
aaa
rorl
popf
out
inc
fildl
sarb
sbb
popf
mov
loop
xchg
leave
xchg
or
cli
lods
out
dec
out
scas
lds
pcmpgtb
out
mov
pop
ficomps
and
cwtl
outsb
orl
inc
test
or
aad
aad
push
aaa
inc
int
rdpmc
push
loop
ljmp
pop
icebp
xor
cmp
adc
inc
pop
dec
insb
and
aaa
fildll
add
dec
xchg
decb
fidivrs
push
lcall
xchg
rorb
push
dec
inc
cld
inc
jo
sbb
into
push
push
push
push
add
cltd
in
mov
dec
movsb
les
jecxz
inc
xchg
aas
lahf
into
in
shr
mov
sbb
sahf
cld
ds
push
cmpsb
cmp
aas
adc
adc
clc
jne
mov
addb
test
push
fldt
and
mov
sbb
movsb
out
xchg
es
pop
jne
jmp
adc
inc
fdivrl
or
cwtl
fdivrl
xchg
pushf
mull
aas
aad
pusha
ss
loope
fldt
mov
xchg
gs
cld
sti
xorl
jle
push
pop
and
xchg
xlat
scas
pmovmskb
and
or
mov
xor
adc
jne
jne
cmc
xlat
push
sahf
jmp
adc
mov
cmpsb
cmp
or
or
adc
sahf
lahf
or
inc
jae
lods
fcoml
cmp
cmovno
out
fisubrl
push
inc
pop
and
and
ja
xor
mov
movsl
clc
loop
clc
xchg
lcall
mov
std
dec
mov
sbb
jnp
and
xchg
nop
xchg
and
les
iret
cmc
fldl
jmp
mov
or
int
pop
and
cs
dec
jp
rolb
mov
je
fisttps
jp
push
mov
xchg
and
cmp
les
push
mov
push
xor
xchg
call
pop
sub
nop
add
push
xchg
xorb
dec
jmp
mov
sub
xchg
test
int
sub
or
stc
dec
push
mov
cli
popf
dec
xor
mov
pop
jnp
scas
mov
bound
xchg
jb
push
jmp
icebp
fcmovnu
fldl
adc
xchg
aad
cmp
cli
es
std
jp
in
cmpsl
sub
scas
and
xchg
jle
pushf
dec
jne
lahf
xor
mov
xorb
popa
jb
adc
hlt
test
sub
mov
or
fldcw
push
xchg
mov
iret
and
mov
add
fwait
ljmp
push
loop
aaa
or
and
and
stos
sbb
popa
mov
out
pushf
and
daa
mull
icebp
insb
sbb
jns
stc
jns
scas
hlt
xchg
add
pushf
jnp
enter
mov
adc
push
and
out
xchg
js
nop
test
repz
int3
int3
pop
adc
jns
cli
loopne
dec
and
adc
push
in
leave
int3
jg
pop
sahf
cmp
rorb
dec
dec
ss
repz
popa
imulb
je
pop
test
pop
rolb
jmp
insb
push
lret
stos
add
push
dec
mov
jo
gs
clc
aam
int3
cmp
xchg
iret
xor
pop
push
push
fcom
hlt
sbb
jnp
int3
push
je
mov
lea
and
jp
or
jecxz
push
add
fistpll
iret
stc
dec
outsb
cmp
fwait
cmc
sbb
test
cmp
fldl
iret
and
dec
sub
sbb
mov
xchg
adc
cmp
repnz
pop
in
pop
xchg
sub
je,pn
or
test
xor
dec
and
xor
int3
sbb
icebp
jg
loop
pushf
stc
inc
and
ret
jb
or
vmulsd
rcrl
xor
int
lahf
cwtl
or
jbe
xchg
das
outsl
add
aas
in
mov
ficoml
or
clc
sbb
xchg
pop
leave
add
jne
stc
dec
sbb
inc
loopne
add
mov
push
xchg
mov
cmp
sbb
mov
sbb
mov
mov
push
sub
repz
lods
and
lret
dec
cmc
mov
push
sti
pop
pop
pop
sahf
xchg
or
push
addl
xchg
cwtl
inc
lret
insb
js
scas
shll
lret
sub
push
out
jns
xchg
ds
in
insb
xor
and
mul
push
mov
out
xor
jne
fsub
or
inc
inc
in
lds
jb
in
pop
sbb
sbb
mov
cmp
xlat
lea
or
xchg
ret
jmp
push
adc
insb
fiadds
imul
jo
or
jo
pop
push
lret
insl
int3
pop
jmp
fwait
into
push
jmp
and
into
push
mov
arpl
mov
add
xchg
call
and
mov
dec
jl
and
cmpsl
movsl
out
ljmp
dec
das
cmp
fcmovnu
add
sbb
insl
sbb
enter
xor
insb
inc
popa
leave
cmpsl
mov
inc
scas
lret
aad
sahf
fstl
iret
and
inc
cmp
and
and
mov
sub
ja
mov
xchg
or
xchg
cld
lahf
lods
pop
sbb
mov
sub
rorb
lods
cmp
mov
dec
fwait
cmp
cmp
push
inc
imul
pop
stos
xor
mov
iret
pop
cmpsl
mov
xchg
in
mov
pop
mov
es
cmp
rorl
les
sahf
int3
adc
cmc
mov
dec
insl
movsl
jne
jns
cmp
inc
std
enter
sbb
push
xchg
inc
mov
pushf
js
add
inc
sub
dec
aaa
add
add
sbb
sbb
out
gs
or
loope
lods
fcoms
or
sub
dec
aad
movsl
xor
loope
icebp
jne
inc
rcll
and
xchg
adc
inc
lds
and
adc
roll
mov
add
jb
push
mov
xor
xchg
in
icebp
jne
inc
aad
mov
and
pop
cmc
leave
lds
and
xchg
xchg
loope
push
fildll
shll
lods
cmp
jle
outsb
ljmp
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
outsb
mov
das
fwait
jo
popa
scas
ds
sub
sbb
or
jnp
imul
dec
stos
pop
fwait
outsb
mov
push
jmp
fldt
lret
ds
sub
outsl
into
or
jnp
imul
dec
mov
fwait
jbe
addr16
pop
jmp
lret
and
sub
and
lock
dec
stos
aaa
call
loope
push
mov
stc
inc
icebp
push
shr
pop
test
gs
push
or
xor
pop
pop
outsb
out
adc
outsl
loopne
movsb
cmp
ss
decb
lret
pop
scas
mov
inc
mov
fsts
add
movsl
pop
cli
push
cmpsb
pop
and
push
in
popa
jnp
sahf
loop
ds
mov
in
outsb
or
cs
fisubs
sahf
cmp
xchg
push
sub
popa
pop
and
aam
jbe
mov
inc
loopne,pn
fidivrl
aas
sub
fimuls
stos
cmp
out
adc
inc
xchg
mov
add
jmp
inc
mov
iret
inc
lret
dec
out
inc
pop
push
and
fwait
jle
fs
push
jmp
lret
daa
cmp
sub
sbb
or
jnp
imul
sub
pop
outsl
out
jg
pop
mov
push
jp
das
cmpsb
js
addr16
push
jecxz
int
scas
pop
sarl
push
out
jnp
jge
sub
dec
lret
push
pop
mov
mov
push
cld
aas
icebp
sub
dec
fcmovnbe
bswap
cmp
jp
push
fldt
lret
ds
sub
sbb
or
jnp
imul
dec
stos
pop
fwait
outsb
mov
push
jmp
fldt
lret
ds
sub
sbb
or
jnp
imul
dec
push
fldenv
dec
scas
insl
and
adc
inc
frstor
pop
rolb
xchg
push
test
and
leave
push
sbbb
test
shlb
adc
push
sti
data16
pop
mov
or
cmp
push
aaa
lahf
sahf
mov
out
pop
aad
jb
lds
add
enter
jecxz
into
and
xchg
jo
sub
xchg
inc
push
mov
adc
adc
cs
push
jmp
js
adc
test
in
les
pop
test
adc
es
pop
sti
adc
mov
jae
in
cmpsl
loopne
test
cmpsl
push
xor
dec
lds
dec
push
mov
fsts
movl
pushf
mov
call
lcall
sub
or
jg
aas
int3
js
test
lods
and
jge
test
inc
lds
cmp
loopne
out
mov
xchg
mov
sbb
xchg
xchg
pop
mov
sub
lock
clc
or
fnsave
outsb
and
out
cs
sahf
dec
mov
insb
xor
mov
sti
cld
xchg
frstor
lea
or
cmp
sti
mov
xchg
xchg
inc
pop
in
adc
das
pop
xchg
fwait
mov
movsb
insb
or
shlb
rolb
andl
jo
add
jp
add
iret
jns
lds
or
cmp
jo
xor
popa
inc
movsb
xchg
mov
cwtl
sbb
fisttps
push
xchg
jb
push
jecxz
test
outsb
inc
call
stc
sub
push
unpckhps
cmp
push
adc
pop
mov
push
jno
addb
jns
cld
xchg
mov
mov
xor
aam
jbe
mov
sub
cmp
adc
adc
mov
aaa
xchg
adc
sbb
or
out
call
lods
test
xchg
les
negl
adc
fidivrs
pop
pop
out
xchg
ds
jmp
jo
fmul
nop
cmp
sub
jg
pop
pushf
mov
iret
mov
loopne
outsb
dec
leave
ficomps
sub
jle
jns
inc
jl
ret
aam
xlat
enter
jl
test
xlat
add
push
dec
sub
cli
frstor
or
das
xor
jns
mov
xchg
je
ret
mov
xor
imul
in
inc
dec
out
ret
in
xor
in
jg
cmc
ret
adc
cmp
in
dec
negb
fldcw
mov
mov
in
add
jmp
das
push
scas
cmp
cmp
movsb
aad
xor
popa
fmuls
pop
xlat
sbb
addr16
push
in
inc
push
lock
sbb
and
add
inc
and
popf
bound
add
add
mov
in
add
adc
shll
sbb
jle
jo
out
push
cmc
aam
mov
or
mov
fwait
sub
test
cmpsl
dec
hlt
sub
lret
push
or
inc
push
sub
and
xchg
mov
aam
dec
shlb
add
movsl
mov
fs
jae
andb
repz
dec
stos
ljmp
jg
push
inc
jecxz
mov
bound
insl
inc
add
xchg
cmp
push
adc
sti
iret
nop
fdivrs
push
xlat
mov
push
aad
lds
sbb
xchg
call
dec
pop
mov
repnz
xlat
xlat
adc
in
mov
add
lret
jmp
dec
cmp
test
add
mov
xchg
fstpl
mov
sbb
insl
fnstsw
xor
inc
pushf
xor
xchg
sub
mov
or
mov
mov
enter
inc
jae
mov
cli
nop
sub
add
fmul
mov
out
loop
adc
lds
and
hlt
cmp
fimuls
xchg
cmp
mov
aaa
mov
adc
pop
mov
test
mov
out
pop
jp
in
pop
mov
loop
fisubl
movsb
cmc
jbe
lcall
inc
xor
mov
or
es
cmp
jne
cmp
sti
or
test
lret
fwait
and
mov
jge
pop
mov
dec
mov
addr16
cmp
into
fs
push
add
andl
push
jb
adc
les
in
jae
icebp
arpl
sbb
fdiv
retw
lcall
xor
rcrl
push
cmp
je
mov
mov
loop
mov
imul
lods
imul
push
pop
loope
or
cmp
jnp
mov
fists
inc
pop
pop
aam
sub
pop
or
cltd
fwait
dec
fdivr
rcrb
sti
xchg
js
movsl
rcrl
cmc
cmpb
pop
stos
cld
dec
sub
dec
add
xchg
cs
lahf
mov
lods
test
cmp
jmp
push
cltd
test
imul
ljmp
add
pushf
fimuls
dec
jb
shrl
xchg
jno
cmp
jmp
mov
aas
mov
xorl
push
xor
sub
cmpsl
in
xchg
lods
aaa
pop
pusha
push
loope
jge
pop
andl
incl
in
cmc
stos
jb
inc
test
push
xor
in
push
adc
loopne
lret
dec
in
cmpl
mov
mov
cld
pop
sbb
or
loop
ret
loope
dec
adc
outsb
dec
adc
pushl
mov
and
cli
insl
out
testb
adc
xlat
cmp
sub
clc
jnp
std
or
inc
xchg
jmp
push
sbb
xor
outsl
xchg
clc
xor
bound
stos
xor
mov
dec
sub
cwtl
mov
push
dec
sbb
lock
stc
out
incl
notb
mov
jno
add
sub
sub
inc
cld
int3
cmp
xchg
or
sbb
dec
in
xchg
xchg
sbb
repz
lret
cmc
fwait
das
xor
xchg
add
mov
cltd
shrb
jg
pop
mov
fdivp
out
mov
shrl
fincstp
sub
add
and
sbb
stc
fimuls
dec
int
repnz
inc
inc
adc
cmpl
lea
adc
outsl
loop
roll
cmp
cmc
arpl
aaa
cmc
aas
sub
xchg
aad
mov
aas
out
pushf
xor
inc
movsl
mov
fcompl
lret
push
sahf
clc
push
shl
daa
and
call
pop
popa
dec
and
insb
icebp
sub
lea
popf
adcb
jns
xchg
sti
scas
add
imul
inc
pusha
scas
and
lret
dec
sub
aaa
sbb
cmc
popa
sarl
push
xchg
fwait
into
lahf
sar
movl
push
iret
xor
jbe
or
imul
test
cmpl
mov
inc
sbb
fwait
inc
roll
xchg
cmp
add
out
dec
sar
notl
sti
pop
add
mov
aaa
push
sub
push
cmp
adc
xchg
sub
imul
jbe
push
or
mov
loopne
xchg
pop
mov
roll
clc
leave
mov
sbb
faddp
and
sbb
addl
out
cmp
fiaddl
pop
test
cmp
lods
scas
jno
lret
pop
sahf
pop
aaa
ljmp
jne
push
mov
add
sub
pop
dec
test
jmp
cmp
pop
mov
testb
lea
mov
aad
or
jmp
xchg
addr16
je
add
aas
fisubrl
xchg
or
and
push
out
std
push
add
dec
mov
imul
test
jo
lcall
cli
data16
dec
pop
test
stc
aam
mov
scas
dec
je
or
mov
pop
mov
mov
stos
aas
add
sbb
mov
fcom
mov
pop
fisubs
pop
test
push
addr16
imul
and
pop
add
fstps
orl
lds
push
inc
dec
loopne
repz
pop
or
shlb
ret
nop
inc
scas
mov
or
lds
or
cs
jnp
clc
lcall
shll
lret
sub
pusha
push
fwait
in
das
icebp
jno
shlb
jo
sub
cmpsl
xor
add
shrl
xchg
insl
lock
pop
jecxz
cwtl
pop
add
cmp
js
stc
rcrl
or
fwait
push
test
inc
and
jg,pn
shll
movb
dec
cmc
and
shl
add
cli
mov
push
sub
rorl
test
jae
mov
aas
and
call
add
add
jns
push
aaa
jae
stos
or
mov
sub
lret
mul
ud1
flds
outsb
sub
and
mov
jecxz
hlt
ljmp
dec
loopne
fcmovnbe
sub
xchg
popf
pop
xchg
cmp
inc
scas
mov
adcl
mov
and
mov
aaa
jle
mov
sbb
inc
out
cwtl
add
xor
lahf
cmp
addr16
cli
xchg
cmc
sbbb
pop
jns
gs
jp
cmp
jbe
in
mov
loopne
outsb
stc
add
push
psrad
cmpsb
xchg
fstl
xchg
fnsave
lods
insb
out
lds
push
or
lock
mov
stc
add
test
subl
jnp
push
cmp
aad
pop
inc
add
jp
aas
xchg
lahf
into
fwait
test
adc
sub
stc
out
insl
enter
inc
sub
movsb
fcmove
shll
push
mov
imul
test
inc
sub
xchg
xlat
mov
orl
mov
xor
dec
xlat
leave
jecxz
fidivl
xchg
jae
imul
sbb
fisubs
js
sub
mov
mov
rol
les
sub
dec
icebp
jns
test
push
push
xchg
out
rol
xor
mov
aas
jp
inc
pusha
mov
sub
jo
pop
sbb
sbb
je
ret
cli
push
loop
mov
add
cmpsl
fs
inc
inc
stos
sub
mov
pop
out
sub
xor
clc
pop
sahf
mov
mov
daa
cmc
inc
enter
ret
outsl
dec
sub
jmp
dec
dec
mov
pop
and
adcl
jbe
mov
inc
mov
cmpsl
add
hlt
sbb
out
je
mov
mov
in
into
push
mov
cmc
or
in
jle
add
into
pushl
mov
add
jmp
shlb
jge
mov
into
mov
add
loopne
imul
xor
push
mov
aaa
mov
rol
jge
cmp
adc
xor
adc
imul
stos
insb
dec
inc
rcrl
push
push
addb
in
lret
dec
cmpsb
jne
cmp
ret
or
mov
mov
sub
fdivrl
dec
mov
mov
add
in
jge
push
rcrb
sbb
jg
sbb
insl
jbe
xor
in
fisubs
dec
sub
outsl
cld
push
lret
imul
test
cmp
rcrl
nop
push
push
mov
cmp
sub
xlat
fcomps
jmp
in
cmc
cmp
mov
lret
pusha
sbb
adc
addb
add
ret
aas
insb
xor
mov
std
or
mov
adc
inc
jns
mov
adc
mov
mov
pop
les
adc
pop
xchg
inc
jae
test
push
sarl
cmpl
sti
loopne
aas
out
out
cmp
sbb
flds
insb
ja
mov
insl
push
cs
jne
sbb
add
aas
pushl
jnp
xlat
sahf
adc
mov
mov
test
push
and
repnz
xchg
cmp
loope
xchg
jo
or
shll
scas
call
mov
divl
cwtd
fstl
or
adc
loope
mov
in
sub
xchg
fstps
mov
push
mov
xchg
xor
out
mov
jmp
rolb
fcoms
cmp
shrb
mov
movsl
mul
fwait
push
mov
in
out
rorb
push
and
jno
repz
lds
fcomps
ja
push
adc
out
movsb
jns
jns
test
or
ja
jp
popa
das
fcmovnu
lea
adc
gs
or
xchg
fs
push
into
fwait
push
cmp
mov
or
subb
fs
cmpsl
xor
cld
or
aas
mov
xlat
pop
mov
outsl
bound
push
loop
inc
test
sti
lods
out
pop
in
leave
xor
mov
xor
imul
jns
lods
mov
jo
rorl
sbb
lahf
rcrb
dec
cmp
pop
mov
cwtl
shlb
mov
popf
xlat
pop
out
in
and
aas
dec
out
sub
dec
cli
movsb
popf
and
xchg
mov
pop
roll
jbe
je
loope
test
jns
mov
adc
shll
rcrb
inc
adc
cltd
inc
cmp
sbb
xor
ficoms
mov
scas
test
mov
popa
xor
jb
imul
dec
cmpsl
iret
jno
push
outsb
hlt
ret
sahf
or
inc
nop
test
pop
shr
pop
jl
sarb
adc
adc
test
pop
fstps
mov
lea
cmp
push
xchg
push
adc
mov
pop
jp
test
jns
enter
jle
mov
pop
pop
loopne
cmp
les
std
cld
adc
xchg
adc
xchg
dec
stc
mov
add
add
add
outsl
call
sarl
iret
enter
in
xor
imul
and
fdiv
fnstsw
out
or
jle
rcr
test
xor
aas
es
fcmove
out
out
jnp
testb
cli
push
jl
dec
test
inc
xor
into
shll
out
fdivr
sub
sub
je
insb
out
into
mov
jns
shll
dec
mov
outsb
fs
popf
jg
lcall
mov
arpl
icebp
or
adc
lret
or
cmp
into
mov
jmp
xchg
pop
mov
das
cwtl
mov
out
mov
or
lods
sub
mov
or
cmp
mov
movsb
jg
jl
pop
or
imul
stc
xchg
outsb
jge
add
shl
mov
jno
nop
stos
mov
mov
dec
dec
mov
push
xchg
in
push
adc
aas
dec
add
in
test
push
popa
mov
inc
addb
and
int3
mov
iret
lahf
iret
sub
test
cmp
jb
cmpsb
and
out
cltd
dec
xchg
sahf
mov
push
xchg
aas
pop
cmp
pop
mov
setnp
mov
or
xchg
cmp
fdivrl
mov
js
pop
sar
sbb
pop
fs
repz
and
jo
fists
sbb
mov
push
jmp
inc
ret
cmpb
daa
les
outsl
test
lcall
es
adc
jne
mov
shlb
adc
lcall
sub
fnstenv
xor
lea
addl
push
jnp
jae
insb
in
js
xchg
or
shll
enter
mov
std
inc
xor
stos
lahf
mov
out
ret
and
faddl
inc
in
mov
cmp
es
add
arpl
dec
mov
and
push
add
insb
mov
cs
pushf
sub
inc
mov
sub
out
mov
and
mov
dec
fstpl
hlt
xchg
imul
in
mov
jns
push
in
and
inc
dec
pop
nop
sbb
and
push
bswap
ret
popa
stos
sbb
add
gs
or
and
cmp
outsb
rorb
popa
dec
mov
outsl
fs
js
or
mov
lcall
das
push
dec
cltd
jecxz
ret
adc
and
loope
cmp
add
add
mov
sti
sbb
fdivrl
pop
adc
repz
mov
roll
or
inc
adc
add
dec
inc
jg
les
pop
dec
cltd
popa
cmp
mov
sahf
mov
jbe
mov
es
lea
lret
cmpsl
cld
xor
sbb
push
inc
int
mov
scas
push
push
imul
out
popa
lods
push
pop
sbb
sbb
inc
pop
movsb
jp
popf
sub
mov
lahf
jb
arpl
sbb
mov
push
dec
fildll
jns
push
pusha
sub
mov
add
fcmovnb
pop
dec
dec
test
fs
pop
xchg
adc
inc
mov
fidivs
outsb
and
or
push
jg
arpl
pop
pop
lcall
mov
jp
cli
ret
roll
sti
push
mov
xchg
inc
scas
and
out
inc
std
xchg
loope
mov
fidivrs
cli
add
jae
daa
ljmp
inc
sub
lock
sbb
push
and
rcrb
and
and
or
adc
test
add
jns
imul
inc
cmpsl
sub
jnp
cwtl
xchg
mov
jb
in
mov
stos
stos
sub
jmp
lock
or
rcrb
arpl
stos
mov
xchg
out
mov
dec
sbb
dec
or
xlat
sti
ss
pop
dec
lahf
pop
or
leave
xor
adc
mov
dec
xchg
pop
cmp
add
test
pop
xchg
shlb
xor
pop
cmp
jae
cmp
pusha
sub
push
pop
std
fstpl
into
inc
mov
popf
pusha
cmp
ja
clc
sub
cmp
add
fmul
sbb
xor
ret
xor
pop
stos
clc
aaa
xor
or
outsb
jle
cmc
dec
cmp
mov
mov
arpl
xor
icebp
push
and
inc
mov
push
ret
out
imul
and
push
std
test
jmp
dec
lahf
jae
mov
pop
dec
push
pop
cmc
push
jmp
and
jns
mov
and
xchg
divb
sub
and
mov
mov
or
data16
push
pop
add
mov
mov
int
shlb
mov
mov
gs
call
and
or
and
lahf
int
cmp
jo
lahf
sbb
xchg
xchg
lret
stos
movsl
into
jnp
mov
imul
sub
jmp
arpl
xor
jo
inc
lds
mov
popa
addl
jne
dec
dec
orl
and
xchg
and
xor
sbb
outsl
jmp
lret
jge
pusha
mov
cwtl
push
jge
cmp
addl
sub
mov
adc
lret
mov
and
sbb
inc
daa
pusha
leave
icebp
dec
mov
inc
ljmp
aad
xchg
add
call
inc
fstps
mov
outsb
xor
push
jmp
loopne
popf
das
push
or
lahf
sbb
pop
iret
xchg
js
outsl
inc
mov
sub
sbb
xchg
jno
in
push
and
mov
dec
or
test
push
in
xor
sbb
mov
pushf
or
fimuls
cmp
mov
jle
fsubr
sbb
sbb
inc
fwait
cmpsl
rcl
fucomi
fcoms
sbb
cmpsb
ret
sbb
arpl
mov
int
je
adc
add
and
subb
adc
xchg
pop
call
js
rorl
jmp
or
lret
cmp
insb
cmc
cld
adcl
push
out
loop
ret
cmc
jae
mov
hlt
mov
dec
pop
not
jmp
mov
sub
mov
lds
sbb
add
movsb
sbb
fs
cwtl
addr16
call
sbb
clc
or
out
xor
pop
js
jl
xor
and
popa
pop
push
rorb
sbb
push
dec
pop
sub
or
xor
mov
hlt
pop
xor
mov
or
push
mov
sti
hlt
sbb
xchg
loop
subl
jg
movsl
lahf
mov
or
iret
sbb
loope
cs
fwait
loop
cwtl
repz
mov
jo
pop
jl
dec
dec
int
cli
or
dec
mov
dec
fisubrl
lcall
in
jns
and
std
push
out
incl
fcoms
sbb
pop
arpl
push
jnp
lcall
push
or
inc
rcrl
push
test
cmp
push
cld
mov
adc
adcl
enter
inc
ss
arpl
call
sbb
loopne
psllw
cmpsl
dec
sbb
sub
mov
push
jmp
fldt
lret
ds
sub
sbb
or
jnp
imul
dec
stos
pop
fwait
outsb
mov
push
jmp
fldt
lret
ds
sub
sbb
or
jnp
imul
dec
stos
pop
fwait
outsb
mov
push
jmp
fldt
lret
ds
sub
sbb
or
jnp
imul
dec
stos
pop
fwait
outsb
mov
push
jmp
fldt
lret
ds
sub
or
movsb
push
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
cmp
mov
and
stos
push
mov
mov
test
movsl
imul
pop
in
adc
cwtl
and
enter
sub
sbb
dec
cmc
pop
in
mov
ret
mov
clc
or
sub
jge
or
aaa
sbb
enterw
fdivrs
push
cmp
testl
pop
or
scas
std
push
xor
fucompp
inc
test
pop
push
jns
dec
xchg
cmc
xchg
rolb
sub
insb
stc
aad
mov
lods
sub
pop
es
and
mov
and
sub
or
movsb
mov
sub
or
push
ret
inc
clc
fcmovne
fiaddl
lock
enter
inc
mov
rcrb
sbb
mov
cmpsl
push
add
cmc
or
xor
xlat
out
aad
arpl
orb
negl
cwtl
and
enter
sub
sbb
dec
in
pop
xlat
fcoml
dec
stos
lock
sub
mov
adc
sbb
xor
and
push
sti
inc
cld
inc
rorb
pop
pushf
pop
enter
jp
push
lock
jge
and
inc
xchg
fisubs
in
pop
mov
inc
enter
sub
sbb
dec
cmc
pop
in
adc
cwtl
and
enter
sub
sbb
dec
cmc
pop
in
adc
lret
xor
sub
aaa
or
jb
out
jns
mov
sub
push
sub
inc
add
cwtl
and
add
pop
lock
sbb
mov
mov
adcb
clc
jns
adc
je
decb
stc
xchg
add
test
jl
adc
lret
push
imul
mov
inc
dec
fs
push
pop
call
cmp
sbb
sahf
lods
mov
mov
ret
cld
lods
mov
mov
in
and
lea
xor
hlt
leave
xchg
sub
mov
mov
sahf
push
pop
adc
sbb
cltd
or
in
fwait
push
inc
mov
adc
xchg
fstpt
xchg
insl
and
in
test
jl
add
ljmp
movsl
cmpsw
mov
test
mov
mov
insb
add
mov
mov
and
call
jmp
cmp
int3
mov
push
dec
push
aas
mov
sbb
fcmovnbe
xchg
adc
sub
imul
mov
dec
push
inc
fwait
mov
fisttps
mov
mov
sub
add
inc
std
or
jo
shlb
mov
xlat
std
leave
test
lods
fimull
xchg
push
es
xchg
aam
cmpsl
scas
repnz
push
sub
add
adc
pop
jl
xor
mov
mov
sbb
sub
add
mov
jge
cmp
mov
mov
pop
daa
popl
stc
test
inc
and
xchg
jo
inc
hlt
cs
push
xor
aam
xchg
out
mov
aad
pop
push
mov
xchg
out
adc
jns
iret
push
and
xor
xchg
inc
aas
dec
xor
mov
lea
hlt
enter
mov
aam
xor
ja
adc
out
outsb
int3
rsm
fs
add
out
mov
dec
fstpl
pop
mov
mov
lock
lcall
out
inc
cmp
push
outsl
aaa
into
xor
adc
push
loopne
mov
mov
and
adc
push
insl
pop
pop
ret
sbb
push
lds
push
fists
xor
or
adc
push
jb
sub
in
cmpsb
pop
mov
xchg
mov
mov
jle
add
flds
xchg
dec
xchg
adc
mov
pushf
in
and
dec
aas
dec
cmp
jge
or
pop
call
and
insb
sub
push
or
mov
fs
pushf
and
mov
rcrb
testl
sahf
adc
dec
xlat
repz
into
sub
test
mov
lods
add
inc
push
aam
arpl
inc
js
mov
dec
insb
inc
xor
mov
rolb
xchg
cmpsl
pop
ja,pt
pushf
lock
sbb
mov
in
fstps
imul
les
out
sbb
in
vmovlpd
mov
mov
lods
movsb
fidivrl
lahf
dec
xor
mov
dec
add
pop
mov
pop
sbb
sbb
leave
out
sbb
daa
divb
test
fldt
push
add
in
adc
sbb
pop
mov
mov
push
cmp
mov
push
cmpsl
call
imul
cs
ss
or
or
sub
fsubl
pop
popf
in
lahf
xor
sbb
inc
call
push
std
addl
pushw
fstl
xchg
push
cli
leave
popf
add
sub
loope
pop
cli
les
pop
inc
or
std
pop
dec
lock
mov
mov
das
in
inc
mov
loopne
push
jp
shlb
and
push
pop
addr16
sub
outsl
scas
or
dec
test
sub
cmp
cs
leave
gs
loope
mov
fldl
movsb
sbb
outsl
mov
fistpl
rcrb
insb
shlb
xor
dec
ret
cmp
js
push
xchg
add
fldcw
jmp
lods
mov
int
dec
adc
jae
xor
out
rorl
cld
sarl
lret
popa
fwait
xchg
inc
add
jl
mov
std
mov
or
pop
int
mov
sub
ja
mov
sbbl
inc
pusha
je
mov
mov
xor
or
jg
popf
sbb
dec
push
xor
clc
test
and
and
lods
cmpsl
test
push
aad
inc
mov
je
mov
push
je
test
lock
sbb
cmp
jns
jle
mov
std
ficoms
insb
mov
mov
sbb
xorb
pop
adc
pop
add
in
nop
mov
icebp
fisubs
popf
pop
push
mov
out
jnp
jno
sarl
mov
int
fisubrs
mov
insl
lods
push
push
cltd
negb
adc
sub
jp
fmuls
sub
cs
frstor
ss
mov
mov
add
sbb
or
lret
incl
push
and
jmp
in
push
dec
imul
das
std
adc
adc
rcl
xor
mov
lods
je
push
mov
cmp
adc
enter
cmp
mov
iret
sbb
push
mov
push
jge
in
add
mov
and
arpl
ja
sbb
or
mov
mov
testb
dec
daa
test
adc
dec
iret
out
cwtl
ljmp
jmp
outsl
add
mov
adc
mov
jge
sbbl
xchg
in
sbbl
mov
lock
into
jns
jb
lret
xchg
fcmovu
popa
stos
icebp
xor
lret
lcall
mov
push
sti
je
loopne
xor
nop
sub
fiaddl
adc
nop
xchg
repnz
inc
loop
sbb
add
add
mov
sub
dec
and
and
aas
jno
out
xchg
mov
and
ret
mov
rcrb
mov
scas
aas
pop
out
in
inc
adc
and
add
insb
cwtl
sbb
hlt
lock
int3
pop
xchg
sub
daa
cmpsl
adc
shll
push
fadds
mov
mov
fs
xchg
mov
aas
or
hlt
test
bound
and
inc
stc
inc
and
imul
shr
and
shrb
or
add
mov
std
pop
inc
adc
cmpsb
mov
clc
add
cli
fiaddl
pop
addb
mov
xchg
dec
mov
jae
or
in
fildl
ror
push
cwtl
and
bound
push
call
lahf
in
mov
fisttpl
or
out
rol
mov
int3
adc
test
xchg
xchg
dec
pcmpeqb
push
rcrl
aas
lock
or
adc
pop
cmovle
aas
mov
fisubrs
pop
shrb
or
bound
mov
jmp
inc
jp
lahf
lcall
add
dec
leave
inc
add
mov
data16
jns
pop
insb
add
dec
lods
stc
in
and
jge
mov
push
adc
ds
popa
shll
mov
shll
xor
dec
rcrb
cmp
pop
add
sbb
insl
mov
and
sbb
inc
adc
add
adc
adc
adc
stc
pop
es
sub
adc
cmp
and
ds
std
jl
in
fcomp
jg
out
insl
xor
aam
imul
and
pop
pop
sub
loopne
fcomi
in
push
test
ficompl
mov
adc
add
mov
sub
dec
adc
fisttps
sub
movsl
pop
mov
dec
js
mov
xchg
adc
nop
addr16
or
push
dec
add
inc
push
fists
mov
fistps
es
ja,pn
mov
xor
rol
fdivr
arpl
outsb
mov
loope
push
and
and
pop
sbb
mov
jae
jnp
sarl
xor
inc
pop
aad
mull
fcompl
push
adc
repnz
xchg
je
mov
or
test
cmpsb
mov
inc
out
out
mov
scas
push
aaa
dec
lret
jno
stos
repz
lea
into
das
add
loopne
ds
xchg
pop
push
int
insl
pop
xor
inc
sub
dec
das
lea
in
in
iret
add
dec
add
or
jnp
jecxz
pop
pop
inc
push
testb
and
mov
jmp
aad
movsb
adc
jp
pop
sti
xor
mul
je
cmpsb
pop
imull
inc
jno
adc
adc
pop
push
push
inc
push
mov
and
xorb
sub
lea
scas
in
into
jecxz
cld
data16
xor
mov
xchg
cs
aaa
lods
data16
xor
rolb
jge
adc
and
lods
pop
repz
sbb
mov
movsb
add
push
adc
or
out
loopne
lret
fnstsw
outsl
add
jne
jne
cmc
and
mov
and
in
scas
arpl
fimuls
push
cmp
sbb
push
outsb
scas
mov
adc
mov
sub
enter
xchg
jle
add
jb
lea
in
pop
mov
push
sub
jae
jmp
lret
dec
add
xchg
push
or
fidivl
cmp
jo
sub
cmp
insb
pop
and
lods
std
outsl
enter
mov
cs
in
sti
add
int3
xlat
mov
into
or
cmpsl
pop
add
dec
push
adc
inc
push
decb
xchg
jle
ret
sbb
push
jo
dec
add
movsl
stos
add
dec
push
add
and
xchg
hlt
mov
mov
sub
xor
sbb
adc
lods
pop
mov
pop
push
ss
sti
fadd
insb
aas
icebp
jo
xor
ja
setae
movsl
xor
mov
cmovae
movsb
cmpsl
loope
push
in
pushf
push
mov
lods
popf
push
or
mov
xchg
add
push
jno
pop
push
in
mov
stc
jge
ret
scas
xchg
mov
xor
inc
and
jp
cli
sub
mov
add
and
out
add
ret
fcoml
test
dec
frstor
daa
in
sbb
pop
rdtsc
test
lock
mov
lahf
xor
xchg
mov
int
inc
imul
ss
insl
in
or
in
mulb
push
movsl
add
dec
testb
fistpl
jb
scas
cmp
aad
xor
adc
movsb
cmp
repz
aam
lahf
insl
mov
outsb
and
pushf
cmp
test
mov
call
add
cmpsl
cmpsb
cmp
sub
dec
jg
js
mov
mov
test
mov
jbe
lret
cwtl
or
std
sub
push
push
in
ja
jge
lahf
test
imul
mov
adc
mov
xchg
cld
addb
push
aas
lods
jmp
mov
xchg
les
push
int3
cli
mov
cmpsl
out
cwtl
subl
mov
push
enter
cmp
mov
int3
fwait
data16
lea
pop
or
lahf
movb
jns
or
aaa
bound
clc
sbb
push
fs
outsl
addr16
dec
and
or
pop
into
aam
test
sti
xor
xchg
movb
lods
and
pop
call
stc
mov
cwtl
mov
jb
ret
dec
aas
push
lods
mov
jae
fldl
push
xchg
xchg
xor
and
xchg
cmpsl
mov
adc
xchg
jnp
mov
aam
sti
adc
or
test
dec
mov
and
mov
imul
mov
cmp
sub
mov
pop
in
mov
call
pop
pop
int
jo
xor
mov
cmpsl
sub
pop
in
das
mov
pop
jno
add
fsubr
popa
and
mov
inc
sahf
dec
iret
and
movsl
test
and
fisubl
repnz
shrl
adc
pop
or
pop
movsb
mov
in
pop
cli
mov
addr16
fistpl
lret
bound
sbb
sub
rorb
lods
inc
xor
pop
push
ret
inc
adc
enter
sbb
sub
and
mov
inc
mov
xlat
lea
arpl
decl
add
pop
je
mov
or
add
mov
psubsb
and
movsb
fidivl
pop
and
sub
movsb
ror
dec
cmp
fbstp
sbb
pop
or
dec
rolb
inc
mov
scas
es
xchg
subb
and
cmp
das
adc
sub
das
fidivrl
das
and
dec
adc
imul
out
arpl
cld
cs
jae
xor
dec
lods
inc
sbb
xchg
mov
aaa
aad
and
inc
lods
pop
in
loopne
mov
mov
mov
outsl
mov
mov
dec
xchg
out
xor
pop
push
out
push
addl
dec
push
fisubrs
aad
and
dec
mov
enter
and
arpl
push
dec
jae
dec
cmp
xchg
jg
std
mov
mov
mov
test
mov
idivl
push
out
or
paddq
jp
cmp
aas
push
testl
or
pop
sahf
adc
notb
push
popa
hlt
mov
sub
cld
fiaddl
or
cmpsl
ljmp
jl
sbb
fs
test
jmp
push
push
mov
or
popf
int3
std
or
mov
pop
pop
push
arpl
icebp
sbb
lret
mov
sbb
sbb
shrb
sub
mov
xchg
ret
push
daa
int3
outsb
lods
sbb
mov
aaa
lret
loop
test
fiadds
xchg
stos
cmp
rcll
push
xor
jne
cmpb
inc
dec
imul
dec
out
cmp
imul
pusha
cmpsb
adc
or
jne
sub
lea
sbb
js
stos
and
pop
pop
negl
aas
add
jge
or
dec
jmp
cmp
jns
adc
xor
mov
ds
mov
adc
jbe
xchg
les
xchg
fdivrs
outsl
mov
stos
mov
or
aam
cmp
arpl
or
add
sbb
stos
mov
mov
jae
pop
xlat
arpl
pop
and
mov
inc
gs
pop
pop
fiaddl
std
xchg
pop
ds
xor
in
dec
loope
fidivrs
mov
stos
imul
jl
in
loop
cmpsl
test
sbb
push
jnp
xor
jmp
lods
clc
mov
inc
add
mov
sbb
loope
or
and
cmp
jl
cmp
jo
ja
cmp
push
lret
lock
sub
sti
mov
cwtl
inc
imul
push
cmp
in
scas
sbb
fs
aaa
test
ljmp
subb
pop
movsb
cmpsb
mov
lds
les
and
js
push
or
into
neg
jne
shrb
sub
dec
adc
xchg
jb
lds
add
cmp
push
js
push
fcompl
xor
cmp
jl
into
lcall
add
fidivrl
ss
mov
inc
aaa
mov
sahf
jbe
in
sarb
cmp
in
ret
inc
xchg
cmp
mov
shll
lea
movsl
mov
dec
add
mov
fwait
inc
or
dec
jb
fwait
jmp
jl
fwait
dec
mov
sbb
jp
mov
xchg
insb
repz
shrb
out
imul
sub
sbb
xor
xchg
push
and
pop
cmpsb
mov
jns
xchg
jo
xchg
pop
push
add
lret
mov
bound
loopne
inc
fsubp
push
sbb
test
pop
jmp
test
in
jl
add
add
mov
jecxz
addr16
ror
sbb
jl
stos
outsl
xchg
mov
or
dec
or
outsb
xchg
inc
fidivl
pop
pusha
rcr
jnp
mov
xchg
aad
lret
mov
lea
outsb
inc
aad
lret
dec
mov
pop
mov
mov
orl
pop
pushf
in
adc
and
mov
xchg
fistl
sarb
outsb
std
xchg
cld
push
clc
cmc
mov
sbb
mov
mov
repnz
cmpsb
scas
jnp
je
mov
cmp
mov
mov
fwait
sbb
jge
aaa
dec
loope
push
sub
movsl
add
add
mov
aaa
fimuls
repnz
int
mov
lea
or
inc
lea
outsb
stc
add
cltd
lods
cs
mov
nop
lock
sbb
lahf
lcall
and
and
cmp
push
and
in
add
inc
or
and
mov
cs
pop
and
mov
add
fldlg2
sub
xor
sbb
fsubrs
inc
fnstsw
ja
aam
inc
fprem
push
adc
xchg
xor
test
and
push
out
stc
push
or
call
loope
outsl
jb
vxorpd
out
add
sbb
cmpb
psllq
adc
fimuls
jo
dec
jl
pop
aad
cld
xor
out
flds
addr16
push
fwait
gs
or
mov
sbbb
mov
icebp
sub
rolb
push
fnsave
lea
shlb
cmp
or
mov
cmpsb
ret
into
and
in
fcmove
mov
iret
mov
in
adc
dec
std
sbb
jle
xor
mov
jno
das
loop
into
mov
xchg
mov
xchg
and
ffreep
cmc
cmp
mov
cmpsb
les
ds
dec
pushf
mov
xchg
inc
popa
cli
out
push
fildl
jl
pop
dec
sub
pushf
ljmp
cmpsl
xor
icebp
aam
cld
cltd
xchg
or
jns
xor
jmp
aad
outsb
repnz
arpl
pop
lret
fsubs
sahf
push
repnz
rorb
dec
lret
dec
into
or
inc
xchg
push
cli
pop
cmp
repz
sub
xchg
xchg
push
xchg
movsl
gs
xor
mov
pop
imul
cmp
push
xor
lea
cmpsl
leave
outsb
push
sti
dec
jl
data16
cld
bound
cmpsl
add
inc
sbbb
xchg
mov
sbb
jmp
xor
mov
sbb
mov
sbb
sbb
jnp
sbb
xor
das
xor
daa
iret
stos
mov
dec
adc
je
cwtl
push
movsl
mov
clc
pop
ds
mov
loope
cmp
adc
fdivrs
in
and
pop
xchg
jle
addr16
nop
mov
outsl
out
dec
pop
inc
cmpl
pop
decb
movsb
dec
lret
pop
stc
pop
xor
dec
lods
jle,pt
fisubs
xchg
lea
shlb
mov
dec
pop
or
out
aam
js
lods
or
inc
mov
jno
imul
cli
xchg
sub
lcall
insl
out
in
jns,pt
push
or
lock
lcall
dec
imul
stos
or
mov
xor
sbb
movsb
push
neg
cli
in
rclb
xchg
adc
cs
rcrb
imul
gs
jecxz
popf
inc
pop
push
cmp
inc
js
sbb
or
mov
mov
dec
in
pop
xchg
das
mov
mov
add
fwait
stos
in
ja
adc
dec
lods
mov
cmp
ja
jns
lahf
fdivs
dec
push
inc
or
cli
aad
cltd
out
nop
out
pop
mov
test
pop
ror
andb
pushf
mov
repz
mov
fld
mov
xchg
ljmp
outsb
push
jp
xchg
add
mov
hlt
hlt
xor
mov
test
incl
shlb
stos
push
mov
mov
test
fsubr
nop
imul
cli
and
cltd
mov
pusha
dec
sbb
push
les
stc
leave
sti
nop
aam
divb
outsb
mov
aas
xchg
clc
iret
call
sub
inc
sbb
int3
test
or
push
lret
adc
cmp
mov
test
add
sbbb
jnp
push
sti
leave
or
cmpsl
scas
pop
mov
scas
pop
test
jmp
outsb
shlb
xchg
dec
das
xchg
mov
dec
sbb
cld
mov
inc
fnstenv
lret
mov
add
test
mov
mov
into
cmc
mov
or
shrb
push
jecxz
repnz
in
add
call
jne
sub
sbb
dec
cmc
pop
in
adc
cwtl
and
enter
sub
sbb
dec
cmc
pop
in
adc
and
push
clc
cs
sub
lods
push
cld
pop
add
rcrl
inc
enter
sub
das
mov
lods
lock
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
