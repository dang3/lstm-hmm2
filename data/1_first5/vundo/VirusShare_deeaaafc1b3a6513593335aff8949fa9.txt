add
add
outsb
add
add
push
add
ja
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
jb
outsl
add
cmpsl
sbb
repz
lods
ss
loopne
ss
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
mov
add
add
add
add
movl
daa
add
mov
mov
add
add
add
add
add
add
add
add
fldl
mov
and
sbb
aaa
add
add
add
add
add
add
nop
add
add
fldl
pushf
add
add
add
add
aaa
add
add
add
aaa
add
add
nop
add
add
add
add
aaa
add
add
add
fldl
lods
add
add
add
add
add
add
add
add
add
add
add
add
fldl
flds
and
aaa
add
add
add
add
add
add
add
add
jb
mov
add
add
or
add
add
add
add
and
add
add
add
aaa
add
add
add
aaa
add
add
add
add
mov
mov
cltd
add
jge
cmp
mov
add
add
add
add
add
add
add
add
mov
add
add
dec
add
add
add
add
add
aaa
add
add
add
add
add
aaa
add
add
add
aaa
add
add
add
mov
add
add
add
leave
push
mov
aaa
add
add
test
cmp
add
add
imul
push
mov
aaa
add
xchg
add
mov
add
push
add
add
jb
xchg
add
add
add
add
add
mov
int
aaa
add
add
add
add
adc
mov
repnz
add
mov
cmp
aas
add
add
lods
add
add
xchg
add
add
add
add
add
add
aad
imul
rolb
pop
add
insl
add
add
add
add
popa
add
add
add
add
add
filds
mov
popf
add
push
add
add
add
add
add
add
add
mov
push
add
sbb
verw
add
loope
mov
adc
add
add
add
add
add
add
add
add
add
pop
add
xchg
loope
repnz
add
add
add
add
mov
add
mov
add
cltd
add
add
add
add
push
add
add
push
add
add
add
fldl
mov
popf
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
xchg
and
inc
add
xor
add
add
add
add
add
mov
lock
filds
lock
add
add
add
add
add
add
mov
mov
repnz
and
mov
cmp
loope
sub
into
vfrczss
or
push
push
out
inc
frstpm(287
es
mov
jns
subb
xlat
sub
cmp
mov
es
mov
out
stos
jbe
pop
mov
push
sahf
hlt
pop
mull
or
cmp
inc
mov
cs
jbe
mov
rolb
jle
ficoml
push
adc
inc
or
xlat
fsts
jmp
into
mov
lret
in
mov
adc
movsl
jns
in
jmp
pop
std
push
fwait
fwait
stos
ds
ret
adc
pushf
mov
jle
int3
sbb
sti
hlt
push
or
enter
out
pop
incl
mov
push
adc
lock
stos
fdivs
insb
and
int3
ljmp
pushf
cmp
outsb
mov
leave
bound
xor
ror
jge
out
fs
add
xchg
out
mov
dec
nop
jnp
andl
int
pushf
cmc
mov
dec
shll
push
mov
lods
add
aam
dec
mov
sbb
pop
or
and
hlt
sti
mov
and
negb
xor
inc
scas
xchg
test
mov
fs
mov
fiaddl
add
pop
mov
push
dec
jo
adc
shrb
or
xor
push
loop
add
jnp
lret
loop
test
mov
cli
push
pop
insb
push
and
pop
outsb
xchg
shr
ret
filds
inc
inc
adc
mov
jno
lahf
in
adc
or
xchg
jbe
xchg
stos
jle
insb
sbb
cmp
sbb
jnp
popa
and
pop
test
push
inc
stos
in
mov
ror
xorl
mull
and
mov
lahf
jmp
xor
ljmp
add
fs
shl
pushf
cmc
push
insb
lret
hlt
andl
mov
jp
push
jmp
adc
xor
fcompl
mov
repnz
fisttps
out
jg
je
adc
out
call
xchg
xor
inc
mov
xchg
mov
shll
scas
xchg
push
mov
cwtl
pop
sub
std
jnp
xorl
xchg
subl
pushf
incb
mov
xor
and
or
sti
sub
pop
ja
pop
aam
xchg
inc
int3
xor
jnp
xchg
inc
xor
mov
lods
mov
fisubrs
mov
scas
mov
dec
pop
test
jne
mov
mov
out
js
dec
dec
stos
mov
pop
pop
and
pop
jl
mov
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
jmp
sti
fxch
jmp
aam
stc
in
xchg
mov
dec
imul
sbb
sbb
jmp
sti
fxch
jmp
mov
int
dec
jnp
dec
imul
or
cmp
pop
loop
roll
sti
mov
mov
mov
adc
and
sub
jo
pop
dec
cmp
pushf
lods
lods
clc
mov
pop
popa
in
dec
and
stos
add
and
cmp
inc
add
mov
addr16
orl
push
or
or
fimull
sub
mov
enter
repz
xlat
push
cvtdq2ps
cmp
test
jae
hlt
sub
sbb
jmp
jmp
add
incl
mov
inc
loopne
jp
jle
movsb
test
or
out
rcrl
mov
mov
mov
mov
dec
scas
stos
jns
pop
cmp
hlt
cmp
movb
sbb
and
push
into
mov
inc
xchg
dec
divb
ss
or
or
or
sbb
lret
insl
fcomi
mov
jae
cmp
arpl
xor
sbb
fwait
sahf
fldcw
std
mov
fsubrl
pop
sbb
sbb
pop
insl
jns
jbe
test
fadd
out
stos
mov
enter
push
cmovnp
push
sub
push
jge
jg
mov
mov
jecxz
mov
mov
dec
imul
or
sbb
jmp
sti
fxch
jmp
mov
mov
dec
imul
or
sbb
jmp
aam
je
test
adc
dec
jmp
lock
shl
xor
movsl
loop
stos
icebp
adc
inc
addb
shlb
xchg
dec
cs
ss
out
lcall
scas
in
outsb
pop
fmul
inc
test
repz
in
add
jl
aas
leave
adc
ja
add
add
les
pop
mov
jg
test
mov
lahf
in
fistpll
push
mov
pop
fsubrp
insl
fdiv
mov
ljmp
pop
or
mov
or
loop
call
and
punpcklbw
jae
push
insb
pop
cmp
inc
push
arpl
mov
sub
and
xchg
jge
popa
dec
lahf
sub
loop
xor
xchg
fnstsw
jno
xor
les
daa
mov
ret
pop
inc
jae
pop
cs
std
mov
icebp
fildl
inc
lds
sbb
movsl
push
fsts
sbb
adc
xor
jbe
jl
leave
xor
popa
mov
stos
repz
xchg
ds
pop
into
push
flds
sbb
std
pop
push
jecxz
loop
add
dec
cmpsl
mov
test
jl
jo
mov
aad
jp
lea
lods
cmpsb
jge
cmp
pop
cmpsl
jmp
outsb
mov
inc
jb
das
dec
call
pop
mov
sbb
sbb
mov
mov
stos
fildl
cmovl
or
xor
xlat
and
mov
ljmp
push
pop
mov
repz
pop
jbe
cltd
inc
addr16
out
jnp
scas
bnd
popa
clc
ljmp
mov
ret
pop
loope
rol
lods
jle
dec
inc
or
shrl
mov
out
inc
aas
adc
jno
mov
sti
icebp
cmp
in
and
pop
mov
or
add
dec
and
push
lahf
adc
fbstp
or
cli
adc
sbb
shlb
or
mov
dec
cmpsb
cmp
xor
jle
push
notb
stos
daa
rcrb
negl
test
xchg
mov
jne
sbb
pop
xlat
xchg
inc
pop
insb
xchg
sub
push
lret
push
stos
addl
pop
popa
fisttps
testb
mov
stc
lea
clc
out
mov
jle
outsl
data16
jno
test
sub
int
inc
fadds
je
add
int
clc
vfrczsd
pop
fsubl
stc
pop
jp
or
rcrb
push
jmp
add
aad
sbb
jo
lahf
mov
enter
pop
sbb
pusha
push
mov
imul
enter
sub
add
pop
pushf
xlat
hlt
daa
dec
xchg
and
out
jg,pn
fsubrs
or
in
and
xor
inc
nop
sbbl
repnz
pop
xchg
mov
xchg
neg
and
mov
jle
sub
inc
movsb
insl
sub
testb
aas
mov
es
cmpsl
lret
add
or
call
fs
xchg
jb
lea
clc
dec
jle
sub
fbstp
push
out
das
mov
inc
xchg
mov
jmp
push
mov
lods
inc
add
and
popa
pop
add
mov
push
add
test
jge
jb
adc
pop
rcll
push
mov
push
fsubrs
movsl
incb
out
fistpll
leave
inc
ja
pop
cmp
xor
int3
arpl
dec
mov
pop
xor
and
filds
ret
out
ret
mov
xor
aam
push
hlt
pop
pop
call
fisubl
in
jbe
mov
xor
dec
push
aad
pop
add
pop
sbb
jg
insl
popl
nop
mov
sub
arpl
xchg
xorl
adc
lahf
popa
or
loope
std
movb
xor
pop
gs
xor
int3
add
mov
inc
mov
jno
fidivrs
test
stos
cmpl
psraw
sub
xchg
cmc
stos
xchg
xchg
rcll
cmp
mov
mov
fistpll
lea
pop
inc
sti
mov
adc
loope
fiadds
out
cmp
sub
loop
sbb
mov
mov
push
sbb
adc
test
dec
push
pop
test
cltd
push
andl
cwtl
mov
mov
call
xor
movups
test
hlt
ja
xlat
rcl
jae
inc
addr16
pop
xchg
dec
xchg
repz
daa
out
jo
adc
mov
mov
jl
in
stc
stos
cmp
mov
push
sub
cmp
pushf
aad
adc
add
mov
daa
cmp
adc
imul
pop
stos
lret
jne
add
inc
xor
pop
adc
xchg
ljmp
outsb
call
or
pushf
jb
das
movsb
addr16
cmp
dec
add
xor
xor
or
cltd
xchg
test
add
dec
sbb
mov
aam
mov
imul
fadds
inc
das
xchg
cmpsb
les
in
cld
mov
ret
stos
sub
popf
or
xchg
shl
xor
sahf
in
sub
xchg
cli
arpl
cld
add
shlb
jmp
xchg
jp
push
inc
sbb
call
lods
bound
jb
xlat
aad
insl
adc
testb
adc
lea
mov
adc
jns
test
lcall
mov
aas
fdivl
xor
lcall
repz
pop
dec
ret
into
in
pop
ja
lcall
and
movsl
jge
and
inc
sti
xchg
cmp
and
ja
mov
push
push
adc
mov
pop
movsl
jecxz
jbe
pop
pusha
mov
dec
adc
ret
out
dec
mov
mov
cmpsl
ret
subl
jmp
mov
lea
xor
mov
pop
and
mov
imul
xor
jge
jmp
xor
sbb
dec
and
and
pop
push
popf
xor
scas
adcb
push
add
and
xor
jb
mov
ja
stc
xchg
data16
repz
jge
scas
sbb
add
cmp
pop
adc
jecxz
push
jns
pop
jmp
sbb
mov
movsl
pop
dec
cmp
add
das
jae
mov
fisttps
adc
clc
mov
jge
ret
add
mulb
xor
xor
stos
data16
fcom
das
out
pop
ficoml
inc
xchg
orb
add
lods
mov
dec
sbb
lcall
sahf
test
fiaddl
xor
adc
fs
out
dec
dec
mov
arpl
mov
iret
movsl
xchg
push
cli
popa
fstl
dec
lea
pushl
sbb
sti
fimull
aad
fistps
inc
xchg
pop
stos
sarb
xchg
add
cmp
iret
jne
test
pusha
mov
pop
dec
sub
or
popa
cmp
pop
pop
es
rorl
jmp
test
test
cmp
shlb
xchg
sbb
rorb
sbb
inc
nop
idivb
aas
rolb
push
movsl
mov
int3
nop
xchg
xchg
mov
enter
xor
and
dec
lock
enter
dec
sub
mov
in
cmp
sbb
ud0
ss
or
int3
rcr
sub
sub
out
fsubl
xlat
sahf
test
out
pop
daa
push
fcomp
sub
push
mov
movsl
fisubs
push
push
pop
sub
sbb
lahf
push
sbb
cmp
jp
sbb
add
popa
sub
fcoml
pop
arpl
add
mov
and
in
data16
push
mov
or
test
es
daa
mov
push
maxps
aam
rcl
loopne
xor
inc
add
aaa
fs
and
inc
test
mov
xchg
mov
jp
and
push
and
les
loop
das
sub
arpl
sti
xchg
mov
push
out
xchg
jg
nop
push
arpl
cld
inc
mov
cli
pop
cltd
scas
nop
fldenv
rcr
incl
loope
push
jmp
adc
sbb
shlb
loopne
mov
out
xor
mov
sub
call
pusha
loope
sbb
mov
jg
mov
pop
sbb
test
push
imul
std
popf
rcrl
sbb
xchg
pop
mov
mov
push
pusha
dec
cmpsl
adc
jnp
xor
stos
jns
sub
inc
pop
subb
add
sbb
push
mov
xor
rcrl
aad
pusha
push
loopne
jp
inc
push
outsb
mov
aas
test
inc
lret
mov
bound
sub
jno
adc
je
adc
xchg
push
lret
sahf
clc
xor
addb
rclb
shl
repz
sub
sub
cwtl
dec
leave
cmp
mov
pop
pushf
ret
pop
fmul
or
jbe
out
mov
loop
inc
jb
and
sub
jmp
or
outsb
in
shrb
cmp
pop
js
dec
shl
mov
jp
xor
jbe
sbb
jge
repnz
lret
cmc
aas
fnop
push
adc
repz
pop
rolb
adc
imul
test
jo
cs
cmp
mov
inc
adc
addr16
pop
int
lret
ja
and
pop
movsb
test
outsb
rcrl
popf
iret
cmc
clc
push
mov
stos
inc
mov
in
ljmp
cmp
sbbl
les
hlt
adc
icebp
out
push
cmp
sub
faddl
inc
sbb
sbb
mov
sbb
sbb
mov
fstl
jb
test
pop
stc
cmovg
shr
jge
icebp
dec
cld
pop
lods
es
inc
les
mov
icebp
jb
call
enter
mov
sbb
in
icebp
xor
sub
arpl
mov
sarb
jg
sub
inc
sar
inc
xchg
sub
adc
adc
ss
ficomps
jp
push
orb
inc
pop
mov
dec
and
xchg
cli
sub
lea
adc
gs
loopne
mov
push
xchg
inc
sbb
mov
ret
sbb
inc
jns
and
jmp
mov
std
cld
push
push
daa
outsl
dec
rcll
mov
adc
mov
pushf
mul
sahf
mov
jno
mov
add
pop
scas
jno
dec
cmp
insb
scas
push
ret
arpl
xchg
sahf
std
xchg
mov
xor
sbb
adc
out
imul
mov
push
loopne
xor
xchg
call
jge
sbb
pop
dec
clc
lea
inc
cld
lods
pop
aaa
sbb
add
stos
sahf
lret
in
xor
pop
ja,pn
inc
sbb
fsubr
adc
rorb
jnp
out
imul
push
je
xchg
mov
sbb
mov
lock
cmp
add
repnz
xor
mov
and
mov
bound
mov
pop
and
lret
lret
aad
fnstenv
jbe
icebp
inc
dec
and
add
jbe
jg
pop
inc
pop
pop
cmp
rol
mov
leave
pop
sbb
pop
adc
movsb
jae
cld
mov
sub
lret
repnz
jbe
aas
lods
or
sub
adc
js
xor
les
shrl
fwait
leave
push
gs
daa
fdivl
aad
xor
jbe
push
scas
pop
imul
and
jne
das
pop
divps
fwait
inc
cmpb
or
sbb
pop
test
jp
jns
iret
adc
mov
movsl
arpl
push
js
ffree
icebp
cmp
push
jns
sbb
daa
jae
mov
outsl
mov
lret
out
inc
movsb
xchg
xchg
lcall
pop
jmp
cmp
movsb
fdivl
cmpsb
xor
sub
aaa
scas
cmc
and
aam
mov
fiadds
lea
cmpsl
repnz
xchg
lahf
int
std
add
sbb
push
and
mov
lock
stc
shr
xor
lea
data16
rcrb
dec
lret
add
push
test
shrl
mov
out
in
ret
fdivl
mov
push
pop
adc
pop
stos
push
loope
lret
out
in
mov
stos
movsb
mov
jbe
mov
mov
adc
fdivs
out
jne
jp
mov
mov
das
stos
test
pop
mov
jg
mov
or
mov
ret
lret
pop
popa
sbb
push
dec
cmp
cmp
mov
imul
push
mov
xchg
in
and
ljmp
out
sbb
ficoml
hlt
xchg
cmc
dec
out
and
addr16
xor
add
mov
push
cs
sahf
jmp
adc
or
xor
fidivl
fcoms
xchg
js
test
lods
sub
into
mov
inc
leave
xlat
mov
mov
lock
push
xor
xor
and
lods
aaa
das
out
jg
or
je
xchg
movl
pop
sub
dec
sub
popf
orl
cmp
jo
test
shr
cmp
jno
sahf
mov
cmp
decb
mov
out
add
bound
jae
fisttpl
sbb
mov
mov
inc
mov
clc
sub
fsubs
pop
jb
pushl
jge
loop
or
lds
xor
cmp
push
mov
push
dec
or
cld
std
imull
add
call
pop
nop
out
mov
std
inc
adc
int3
in
push
push
xor
cmp
jecxz
sar
popa
lret
hlt
xor
pushf
out
cmp
in
push
dec
rcrl
rcpps
pop
insb
jae
add
and
or
push
mov
ds
sti
mov
pop
and
pop
pop
pop
sub
and
jne
or
push
and
mov
dec
push
scas
jnp
xchg
lods
mov
ja
adc
insl
jle
outsb
cmc
mov
mov
cs
bound
sbb
cmpb
repz
lcallw
stos
xchg
outsb
mov
js
imul
or
pop
fadd
loope
cmp
adc
fisubl
cmp
ud1
xchg
cmp
test
jl
in
xor
test
mov
cs
mov
inc
sbb
fistpl
mov
xor
jg
cmpsl
add
lahf
sub
cmp
inc
aad
dec
xchg
or
xor
adc
xchg
sub
scas
ret
mov
inc
call
mov
mov
pushl
shlb
test
and
arpl
cmpsl
add
mov
sbb
xor
mov
mov
mov
lods
xchg
leave
sbb
je
jo
movb
pushf
mov
xchg
sub
jne
sbb
mov
call
pop
pop
xchg
loop
pushf
push
push
ja
dec
mov
add
sub
push
mov
mov
imul
adc
jns
stos
sbb
sub
or
mov
cwtl
lea
decb
movsb
call
jne
incl
or
ds
lea
in
mov
imul
push
push
sarb
mov
push
js
aas
add
pop
mov
fcmovnbe
insb
cmpl
adc
xor
jo
rcr
push
aad
pop
inc
xor
int
lahf
pop
shlb
mov
adc
pusha
adc
fsts
ja
in
pop
xchg
sbb
aad
cmpsb
nop/reserved
loop
jp
xlat
setl
xchg
cmp
int3
push
or
mov
dec
or
imul
stos
out
les
lret
stc
mov
inc
mov
stc
daa
pushf
stos
sub
sub
mov
add
rolb
cmp
movsb
ds
ret
add
les
dec
daa
aad
out
idiv
add
pop
cli
or
aas
pop
fidivl
mov
std
inc
dec
loop
push
mov
pop
or
hlt
fsubr
xor
int3
aam
push
je
bound
loope
aas
xor
and
xor
cmpsb
imul
fstl
ds
das
lods
xor
loopne
jno
lret
dec
dec
imul
cmp
pop
dec
cltd
cmpl
int
dec
xorl
shll
cmpsl
pusha
std
xlat
rcrb
xchg
faddl
fwait
test
and
dec
push
test
test
and
jne
in
mov
xchg
cmp
mul
adcl
fldt
jne
ja
xchg
xchg
lea
iret
jbe
sbb
jg
dec
insb
mov
add
int
addr16
imul
inc
hlt
mov
fstpt
pop
mov
adc
inc
insb
inc
dec
pop
jnp
sub
jb
inc
lret
mov
and
imul
pop
in
mov
dec
outsb
rorb
imul
and
sub
fs
pop
int
and
cmc
sbb
jno
dec
cmp
cltd
cmpsl
or
pop
imul
shlb
repz
rcll
mov
mov
addr16
in
insb
mov
cmpsb
dec
add
dec
xchg
insb
and
adc
pop
cmp
aas
mov
jle
mov
das
es
dec
shlb
sbb
mov
loopne
lcall
cmc
jg
pushf
lock
je
ljmp
xchg
mov
lahf
adc
mov
inc
adc
popa
sub
mov
cmc
int3
lea
in
std
inc
das
jae
pop
lods
mov
jb
jmp
add
test
mov
mov
xor
xor
dec
cmp
das
pop
push
mov
xchg
cld
int3
scas
roll
dec
inc
cmpsb
movsb
ret
jmp
add
mov
lock
scas
enter
ret
les
adc
jno
jno
sti
mov
rcr
and
notb
pushw
sub
sub
push
pop
jnp
cmp
sub
xorb
xlat
repz
add
rcl
cmp
call
jle
aaa
leave
int
mov
push
test
adc
test
mov
mov
and
test
subl
xchg
lods
mov
xchg
imul
push
outsb
negb
cltd
sbb
fldcw
clc
mov
pop
je
int3
xchg
lock
or
insl
loopne
pop
xchg
pop
call
cmpsb
inc
pop
frstor
xor
call
dec
push
jb
daa
int
popa
mov
dec
xor
adc
add
mov
in
lea
test
mov
lcall
ss
adc
pop
pop
xchg
insb
in
in
mov
cmpsl
scas
cmc
mov
in
mov
subl
push
call
inc
icebp
sti
inc
mov
pushf
jge
std
cmp
inc
dec
xchg
push
mov
mov
jg
cmp
push
mov
mov
outsb
mov
cmp
in
adc
inc
lcall
push
fadd
sbb
or
mov
icebp
mov
adc
stc
fistl
mov
adc
icebp
mov
push
push
inc
inc
movsb
hlt
jp
lret
fadds
mov
jnp
jle
push
fisttpl
jmp
test
mov
cmpsl
inc
cmp
or
push
lahf
adc
stos
adc
out
ja
pop
and
add
movsl
je
ds
mov
imul
xor
mov
dec
dec
subl
repz
lods
cmp
ds
std
dec
xor
cld
out
arpl
test
sbb
sbb
mov
cld
jns
lock
js
lds
jecxz
push
dec
sub
or
cmp
pop
out
lea
sbb
aad
jge,pt
sub
test
mov
inc
push
xor
mov
cmc
mov
add
ss
and
xrelease
jbe
jbe
cli
cmpsl
enter
push
sub
bnd
aaa
rorb
int
dec
cmp
inc
adc
rclb
aas
test
or
xor
push
lcall
adc
add
xchg
xchg
and
adc
mov
iret
adc
movsl
sahf
je
xchg
xchg
pop
mov
jns
push
ljmp
maskmovq
negl
xchg
xchg
shrd
lea
jb
fdivr
out
push
ficoml
rorb
dec
inc
cmc
xchg
notb
outsl
push
jno
nop
in
arpl
jecxz
insl
sbb
add
cs
push
mov
xor
inc
dec
sub
sub
repnz
pop
fidivrs
jae
xchg
sahf
stos
ret
or
cmp
aaa
in
mov
xchg
mov
mov
int3
or
popf
mov
sub
sbb
cmp
lea
xor
inc
xchg
fwait
ret
inc
lcall
add
adc
xor
das
push
adc
xor
lds
cmp
sbb
cmpb
test
mov
lds
dec
rcr
roll
cltd
mov
jnp
dec
imul
or
sbb
jmp
sti
fxch
jmp
mov
mov
dec
imul
or
sbb
jmp
sti
xchg
lret
xchg
stos
mov
mov
dec
imul
or
sbb
jmp
stc
fxch
jmp
mov
mov
loope
pop
push
pop
xorl
aas
cs
pop
inc
cmp
adc
sbb
pop
mov
mov
mov
push
das
push
aas
cs
pop
dec
outsl
pop
jg
dec
jle
mov
mov
out
iret
fisttps
das
push
aas
cs
pop
dec
outsl
pop
jg
dec
jle
mov
nop
lahf
cmpsb
mov
nop
filds
push
dec
pop
imul
pop
mov
dec
mov
ljmp
into
daa
arpl
test
mov
loopne
xchg
fiaddl
js
mov
and
lret
je
iret
add
idivb
xchg
jmp
adc
dec
hlt
adc
fimuls
mov
pop
outsb
out
push
int3
mov
fimuls
pop
ds
push
mov
outsl
nop
cmpsb
push
jle
jno
pusha
xor
icebp
mov
ret
inc
flds
loop
outsl
push
subb
or
jae
lods
inc
daa
fdivrl
icebp
stos
es
imul
lahf
jl
test
fcmovu
push
hlt
scas
push
mov
lahf
repnz
or
ficoml
aas
cs
pop
dec
outsl
pop
jg
dec
jle
mov
mov
out
iret
cltd
dec
inc
ja
dec
dec
pop
pop
and
pop
or
aas
das
iret
ret
lcall
xorb
or
cvtdq2ps
or
push
outsb
and
jmp
pushf
shr
fsincos
rep
orb
addr16
dec
inc
jnp
imul
jg
dec
jle
mov
mov
out
iret
fisttps
das
push
aas
cs
pop
dec
outsl
pop
jg
dec
jle
mov
mov
out
iret
fisttps
das
mov
into
xchg
stos
movb
idivb
shlb
ret
pop
xorb
add
push
fnstcw
lret
int3
idivl
stc
mov
sub
icebp
jb
sub
movsl
inc
shll
cmp
xchg
sti
push
xlat
push
or
stos
cmp
out
in
and
or
cs
mov
jb
mov
add
and
pop
cli
negl
popf
sub
aam
pop
cmpsl
das
jmp
ret
test
loop
js
mov
dec
add
sbb
mov
test
or
adc
jle
ror
jp
cli
mov
int3
xor
jecxz
pop
popf
lds
sub
and
aam
or
addl
push
cld
addr16
inc
imul
out
pop
in
pop
dec
and
popw
pop
cwtl
pop
je
pop
lds
leave
and
fdivs
sarl
jmp
and
jne
sbb
push
in
fucomi
clc
mov
jbe
fs
sbb
xchg
jmp
mov
xchg
int
mul
cmc
cmp
call
inc
or
mov
sub
andl
lret
insb
sub
push
mov
xor
test
fsubl
in
cmp
mov
or
mov
sub
xchg
push
mov
push
push
push
fbld
pop
imul
popa
movsb
sarb
mov
test
mov
daa
lcall
add
imul
negl
mov
scas
out
xor
xchg
stos
daa
xchg
fcomps
dec
xor
bound
out
push
inc
sarl
pop
add
jno
test
jp
mulb
mov
pop
sti
and
sub
xor
xor
cld
daa
mov
je
into
fninit
adc
mov
jge
and
fstps
xchg
jle
xchg
cmp
sbb
std
pusha
outsl
pop
cli
xchg
and
jg
cli
stos
push
add
jb
xchg
add
push
cltd
adcl
mov
stos
cmpsb
andl
dec
lock
mov
lcall
jmp
mov
ljmp
or
ret
xorb
xchg
cld
adc
xlat
ret
xor
pusha
and
stc
test
movsb
jecxz
stos
xor
mov
jecxz
and
xchg
aam
mov
mov
pop
push
cli
in
sbb
lods
and
jg
mov
ret
cmc
mov
nop
in
hlt
sbb
nop
jl
inc
mov
mov
xchg
loop
out
add
leave
movsb
push
pop
inc
jg
in
mov
jmp
mov
mov
cwtl
enter
outsl
cmp
cmpsl
loope
mov
jne
aad
mulb
and
sbbl
stos
idivb
push
push
jge
inc
xchg
stc
cmpsb
xchg
push
mov
hlt
xchg
rol
add
incb
out
repz
xor
inc
mov
cli
movsb
sbb
ret
icebp
sub
shrb
into
adc
sbb
insl
out
stos
fildll
mov
mov
imul
mov
inc
mov
add
mov
dec
fiadds
roll
add
popa
imul
out
pusha
inc
jnp
and
pop
push
sub
or
mov
jns
ret
lret
push
cmp
mov
xor
inc
xor
sub
add
pop
cmp
mov
cmc
fwait
and
mov
xor
mov
out
adc
scas
insl
cmc
pop
inc
jbe
out
adc
clc
out
or
xor
inc
aas
pop
sbb
pop
insb
pop
or
stc
add
jmp
cld
divl
jle
cmpsl
mov
jp
add
xor
xor
push
or
inc
fistpl
iret
mov
loope
cwtl
and
fisttps
add
mov
jne
jno
cltd
push
aas
call
inc
mov
xchg
inc
mov
out
push
xor
icebp
pop
shl
push
lods
cmp
push
cmc
mov
pop
xchg
pop
xor
xor
or
rcrl
fimull
leave
lret
rcl
das
cmc
mov
mov
jbe
jle
dec
ja
adc
push
xchg
cwtl
outsl
iret
jp
mov
mov
push
int3
ds
mov
and
lock
mov
hlt
imul
das
xchg
pop
pop
sub
cmp
push
sbb
push
xchg
movsb
mov
cmp
mov
hlt
xchg
popf
and
or
imul
adc
in
xchg
mov
jo
aas
loopne
pop
sarl
cmpl
pusha
cs
pop
cmp
pushf
dec
iret
fcmovnu
cmp
stos
in
xchg
inc
sub
popf
and
call
in
loopne
mov
repnz
xchg
sbb
leave
mov
cmpb
add
adc
push
fdivr
jns
jl,pt
std
jb
cwtl
add
xor
rcrb
sbb
out
xchg
and
enter
pop
cmp
mov
flds
jg
ret
xchg
int
outsl
jl
xchg
test
out
loopne
jb
popf
leave
jbe
xchg
add
in
xor
out
adc
inc
mov
push
ret
mov
lea
mov
andps
add
ds
cmp
and
xchg
inc
repz
in
push
add
cmp
test
insl
shrl
and
out
int3
push
dec
mov
int3
stos
cld
fmuls
ljmp
jne
jb
mov
push
xchg
jmp
add
test
xchg
push
ljmp
push
or
stc
and
adc
popf
jbe
movsb
jmp
jb
outsl
xor
pop
mov
aaa
repz
adc
mov
or
shrb
scas
popa
fucomip
inc
cwtl
lock
sbb
pusha
pop
jg
sbb
and
cmc
lock
and
rcrb
stc
add
adc
mov
and
jge
clc
aad
stos
jbe
out
aad
lahf
clc
push
bound
in
add
fisubl
lea
adc
cmp
xchg
mov
test
xchg
jns
or
and
cmp
xchg
cmp
insb
outsb
stos
cmp
sbb
jg
inc
enter
repnz
mov
mov
xchg
cmpsl
jmp
jo,pn
xlat
xchg
adc
mov
and
adc
xchg
ror
adcl
leave
fcmovne
bound
xchg
xchg
add
stc
sbb
and
and
insb
xchg
movl
sarl
cwtl
test
xor
mov
jp,pn
sti
jne
sti
push
sbb
or
loopne
adc
sub
sub
pop
jecxz
insl
aas
xchg
std
repz
jb
cmp
dec
in
jns
cmp
in
test
dec
in
imul
jnp
sub
fidivrl
and
enter
or
outsb
ror
xchg
push
sbb
fs
or
test
bound
icebp
js
fmuls
aas
loope
mov
pop
aam
dec
adc
clc
mov
xchg
push
cli
js
adc
inc
aaa
ret
mov
loop
mov
cmpsb
pop
imul
push
in
ss
movsb
aas
or
js
fcmovb
pop
sub
add
push
pop
incl
in
sbb
stc
xor
cmp
mov
xor
icebp
inc
xchg
cwtl
add
pop
fs
lahf
sti
ljmp
dec
pusha
adc
test
lods
js
xor
cs
repz
xchg
mov
imul
popf
push
lock
push
shrl
in
movsb
sub
imul
and
inc
mov
adc
mov
adc
jg
rorl
mov
clc
insl
jle
sub
inc
cmp
jmp
movsl
sub
xchg
xchg
ss
push
lret
push
daa
lds
out
cld
insl
mov
pop
dec
adc
push
std
mov
loope
xchg
push
pop
inc
sahf
dec
sbb
lret
lock
adc
dec
leave
fs
and
in
or
push
lahf
mov
cmp
xchg
popa
sub
mov
sbb
in
mov
js
and
adc
push
and
das
mov
lds
loopne
and
orb
lea
ljmp
mov
xlat
jmp
or
sub
dec
ja
jl
lods
or
cmp
ret
xor
cmpsl
fists
push
push
in
or
dec
and
div
in
lret
lods
loop
xor
add
popf
ret
out
inc
testl
cmpb
jae
pop
insb
in
sbb
xchg
hlt
push
cmp
jbe
push
stos
mov
loope
mov
roll
mov
out
jle
cmp
imul
mov
loop
pushf
dec
cli
cmp
ret
popw
xchg
adc
mov
in
xchg
jmp
sti
aad
jge
in
cli
stos
mov
in
cmp
push
or
pushf
and
xor
mov
scas
lds
push
in
inc
cmp
insl
inc
adc
jg
popa
mov
mov
imul
loope
push
rorb
sti
pop
cmp
add
mov
cmpsb
jle
adc
mov
insb
mov
push
add
pop
sbb
clc
xor
in
or
mov
xor
xor
xor
ljmp
dec
cltd
fwait
add
jae
test
add
xabort
les
pop
clc
lret
call
or
sbbl
mov
add
lods
cmp
pop
xchg
cmc
push
xchg
popf
iret
out
les
enter
lret
inc
cmp
push
imul
pop
adc
addb
adc
cmp
xchg
xor
shrb
jl
jecxz
mov
pushf
lret
ss
xor
xchg
jmp
rcrb
mov
sarb
fists
lcall
mov
mov
xor
inc
jo
and
movsb
leave
mov
push
icebp
pop
dec
pop
mov
add
sub
hlt
xchg
push
aaa
push
call
fwait
aad
cmpsl
in
fcoml
je
ret
std
bound
inc
aaa
decl
inc
imul
xor
into
mov
clc
psubd
sarb
push
subb
call
adc
mov
mov
pop
mov
rorb
cmp
xor
pop
inc
ljmp
jne
les
fadd
mov
sti
hlt
push
das
fwait
lds
cmpsb
jno
and
sti
mulb
xchg
lret
mov
mov
aaa
inc
jle
pop
sub
xor
dec
add
je
orl
push
pop
leave
and
fwait
mov
mov
test
inc
ret
hlt
cmp
mov
mov
mov
iret
out
and
fildl
les
bound
std
lret
call
mov
or
test
cmpsl
fnsave
mov
xchg
and
pop
out
fbstp
cmc
mov
xchg
cmp
lods
pop
or
popa
xchg
jmp
or
in
cmp
push
nop
inc
mov
xorl
insl
je
add
and
cld
sub
sahf
movsl
outsl
fdivs
jl
sub
jns
dec
popf
orb
cmpsb
mov
insl
scas
mov
aam
fsub
leave
adc
shufps
jg
xor
repnz
cmpb
std
xchg
or
test
and
rclb
addr16
int3
xchg
or
in
fwait
das
xorb
push
push
xchg
scas
in
sub
lret
in
add
mov
add
push
xor
pop
into
imul
mov
cmp
scas
sub
xchg
pushf
or
in
sub
xchg
or
mov
rorb
in
mov
cmp
loopne
pop
lret
pop
out
aam
jns
xchg
lods
dec
or
push
lret
xlat
mov
aas
adcl
aad
pop
xor
movsl
xlat
imul
mov
and
xor
mov
jbe
mov
jmp
loop
add
lds
addb
fcomps
ja
or
jnp
pop
out
or
arpl
xchg
or
test
or
jnp
dec
mov
dec
dec
sbb
arpl
sub
sahf
inc
je
addr16
fdivrs
mov
mov
rcrb
leave
icebp
imul
adc
enter
lds
imul
insl
out
xor
pop
cmp
sbb
es
arpl
clc
pop
mov
or
fsubl
das
cmp
sbb
mov
or
pop
ret
addr16
out
jno
mov
sbb
inc
fs
daa
sar
and
rcrl
dec
roll
dec
daa
std
aaa
xor
or
lret
lock
fistl
lods
cli
lods
lods
cmpsl
outsb
scas
xor
and
cmpsb
pop
popf
add
fucomip
inc
je
jl
push
out
mov
xor
lcall
mov
add
in
push
lret
inc
mov
pop
jnp
out
stos
mov
xchg
js
sbb
jl
fwait
pop
jge
xlat
mov
add
fnsave
mov
fbstp
out
inc
adc
jo
insl
fwait
cmpsb
lcall
int
mov
sbb
js
repz
scas
mov
xchg
out
in
int
pop
roll
lcall
sarb
push
and
or
notb
out
orps
pop
addl
push
aam
mov
jl
movsb
divb
lea
inc
test
loop
insl
push
push
xchg
pop
push
imulb
push
xor
mov
in
jl
lds
cwtl
jl
in
lods
test
push
inc
push
inc
xchg
and
aaa
imul
fcomps
mov
pop
sbbb
adc
dec
out
pop
xchg
shrb
inc
inc
xchg
outsl
fndisi(8087
mov
push
mov
xchg
push
jne
int3
and
lock
or
clc
jg
xor
out
jp
sbb
sub
inc
xchg
pushf
movsl
scas
es
sub
dec
outsl
mov
clc
das
dec
xchg
push
mov
adc
push
xor
mov
xor
pop
insl
test
aas
fisubl
mov
sub
or
pop
pop
std
cmp
pop
jb
rcrb
and
dec
in
ds
outsb
div
adc
pusha
das
mov
stos
and
sub
mov
fldt
dec
test
push
cmpsl
bound
pop
xchg
testl
in
adc
fidivrl
in
pop
repz
dec
mov
filds
jne
mov
xor
xor
fdivl
icebp
and
data16
xlat
inc
hlt
jge
or
mov
mov
add
mov
pop
push
push
std
fsubrl
cmp
add
pop
test
mov
outsl
loope
add
push
outsl
or
push
add
ret
repnz
mov
or
adc
sub
fdivrp
xor
hlt
mov
jne
testl
pop
xor
mov
pop
test
sbb
sub
popf
imul
je
add
lret
int
movl
addr16
cmp
aas
mov
idivl
mov
adc
cmp
outsb
xchg
pop
rcr
and
dec
xor
jae
sbb
mov
testb
test
push
jnp
test
ss
jno
sti
mov
push
mov
cmp
mov
ja
loop
shl
sarl
rorl
ja
adc
stc
adc
xor
data16
inc
sbb
sub
js
mov
sub
fcompl
das
xlat
push
dec
mov
hlt
pop
loopne
mov
inc
repnz
mov
push
stos
jb
lock
jmp
xchg
cmpsb
out
and
xor
cmpsl
push
rorb
fwait
pushl
std
and
mov
mov
and
add
sti
outsb
or
sarl
push
insb
add
lods
and
sbb
lret
js
aad
xor
jns
xchg
push
imul
push
or
and
outsb
adc
dec
xorl
push
out
int
xchg
stc
cmp
lea
sbbl
ss
das
cmp
pop
mov
dec
push
cmp
in
inc
jo
xor
and
call
mov
jge
popf
xchg
outsb
outsb
pop
and
mov
inc
daa
push
mov
lret
ljmp
mov
fstpl
and
mov
xor
or
mov
daa
cld
div
out
gs
dec
sub
or
enter
mov
adc
push
cmp
imul
and
dec
enter
push
xlat
and
xor
sub
or
pop
jp
lret
insb
into
dec
dec
jg
jp
xor
fcompl
loop
pusha
dec
movsl
inc
ss
xor
mov
mov
xchg
sahf
add
fsubp
imul
cli
push
pop
add
mov
mov
mov
lret
dec
cmp
xor
push
dec
shrb
scas
ja
sti
xor
adc
jb
mov
stos
loope
jae
push
int3
pop
loopne
loope
mov
jb
push
cmpsl
call
cs
enter
sub
ss
outsl
inc
je
bound
pushf
jnp
jp
lods
cmp
sbb
cmpsb
and
or
cmpsl
repz
das
lcall
sub
in
cmp
shr
xor
ljmp
rep
ret
orb
cmpl
leave
out
call
lahf
lret
lods
xor
sti
mov
mov
cmp
test
stos
adc
xor
lret
pop
push
mov
les
and
mov
imul
ja
adc
test
add
xchg
cs
pop
lret
and
sub
jb
pop
lock
mov
cwtl
mov
rcll
fistpl
xchg
xchg
test
and
pop
imul
rolb
cmpsl
pusha
mov
int
dec
and
mov
pop
sub
aaa
leave
mov
pop
push
push
jae
outsb
cmp
sar
dec
in
loope
cmp
clc
and
and
arpl
std
shlb
popf
lret
notl
jo
fs
cltd
gs
scas
dec
lcall
mov
nop
test
xor
daa
mov
in
jle
loope
scas
jl
inc
cli
jae
sub
cmp
mov
cmp
rorl
xchg
or
lcall
icebp
hlt
xor
int3
and
mov
fildll
add
sbb
inc
out
jl
pop
lahf
cs
loope
ja
mov
mov
cs
and
scas
push
sub
cld
mov
jb
loopne
dec
sbb
cld
mov
outsl
push
sti
sar
loop
add
stc
divb
push
out
mov
and
icebp
cld
mov
push
mov
jl
ds
mov
pop
xchg
cmp
mov
and
stos
jecxz
push
addr16
pop
sub
mov
ja
aam
jmp
dec
lds
imul
mov
mov
inc
jo
inc
push
addr16
addb
arpl
cmp
adc
inc
dec
call
inc
or
inc
inc
movsl
test
insl
add
out
mov
shll
or
adc
jmp
and
jnp
mov
inc
in
int
xchg
stos
sti
sub
in
aad
movsb
or
sbb
and
xchg
test
push
mov
enter
bound
jg
xchg
int
cltd
mov
adc
mov
ja
mov
bound
sbb
into
movsl
repz
test
inc
cmp
adc
rclb
cs
mov
lods
adc
fisttps
xchg
adc
insb
ret
in
stos
addl
test
int
movsl
mov
cld
mov
lret
test
cli
test
arpl
xchg
cmpb
pop
push
pop
movsb
rorb
jno
and
mov
ds
jae
inc
mov
fnstenv
lods
and
cmc
dec
sti
xor
push
cwtl
jle
es
push
cltd
xor
push
les
fidivrl
cmp
nop
cltd
fwait
and
lahf
dec
cmp
out
and
in
xlat
mov
jnp
xchg
pusha
scas
std
mov
int3
pop
pop
in
ljmp
clc
pop
sahf
mov
jecxz
hlt
out
fwait
mov
hlt
js
mov
or
push
xlat
std
push
jle
insl
mov
rolb
pushf
jmp
call
cmc
mov
loopne
push
mov
loope
test
popf
sub
pop
inc
mov
pop
out
sbb
shll
cmp
jae
sti
or
adc
cmp
outsl
push
add
mov
mov
outsb
pop
push
inc
jne
push
mov
push
cmp
mov
jno
shll
jnp
xor
jl
js
adc
js
fnstsw
and
fidivl
test
gs
and
shrd
cmp
push
and
loopne
arpl
imull
lea
ds
dec
outsl
pop
jg
dec
jle
mov
mov
out
iret
fisttps
das
push
aas
cs
pop
dec
outsl
pop
jg
dec
jle
mov
mov
out
iret
fisttps
sub
aas
cs
push
dec
outsl
pop
jg
dec
jle
mov
mov
out
iret
fisttps
das
push
aas
cs
sbb
pop
ljmp
jle
mov
adc
mov
xor
and
in
sub
push
push
mov
push
pushl
movl
movl
movb
push
push
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
mov
mov
lea
push
movl
movb
movl
movb
movb
movb
movl
call
pop
pop
leave
ret
mov
push
sub
sbb
or
adc
sbb
or
mov
scas
mov
stc
iret
insb
out
fldz
leave
push
cmp
sub
sbb
or
dec
imul
mov
fistps
into
jmp
push
cmp
sub
sbb
or
dec
imul
mov
mov
stos
or
jb
jle
aad
outsb
mov
daa
lea
sarb
pop
bound
outsl
subl
cli
inc
xchg
hlt
pop
sbb
jmp
jno
out
and
mov
add
fwait
popa
xor
dec
gs
hlt
les
sahf
inc
ficoms
pop
push
je
clc
push
sub
stos
inc
fldcw
stos
push
aad
or
bound
outsb
mov
bound
mov
xchg
popf
push
out
es
jecxz
icebp
insl
pushf
cmp
mov
inc
jl
dec
outsb
lret
sti
out
data16
dec
jmp
adc
push
mov
stos
lock
sub
test
lret
mov
mov
int
enter
sub
sbb
or
dec
imul
mov
fdivrp
into
jmp
push
dec
sub
pusha
pusha
sbb
pop
or
neg
cmp
shl
lret
cwtl
sbbb
cmp
dec
sbb
cmp
sub
int3
shl
xabort
out
lcall
push
jno
insb
pop
jns
imul
mov
fdivrp
into
jmp
push
cmp
sub
sbb
or
dec
imul
mov
fdivrp
into
jmp
push
cmp
pusha
mov
jl
sub
pop
mov
lret
sahf
sarb
pop
pop
idiv
cmc
sub
mov
mov
push
test
in
out
mov
jns
jmp
cmp
jnp
std
dec
lods
addr16
jle
sub
jne,pn
iret
int3
xor
dec
aas
dec
xchg
idiv
repnz
cmp
sti
in
jecxz
shll
pusha
in
inc
gs
mov
leave
lock
cmp
and
jl
fidivrl
jmp
mov
mov
dec
sbb
das
sbb
aaa
mov
cld
adc
inc
into
xor
inc
push
inc
dec
inc
bound
inc
push
stos
ja
aaa
imul
arpl
push
movsb
push
insl
test
repz
jo
loope,pt
icebp
dec
sbb
mov
cmc
dec
pop
ja
gs
push
out
nop
insl
push
js
popl
or
int
inc
push
orb
or
and
fnsave
test
daa
das
std
jns
adc
inc
pop
insl
jno
xor
jbe
mov
cmp
sub
xor
jmp
js
jae
lock
mov
aaa
inc
insb
cmp
cmp
push
enter
sub
das
out
dec
js
dec
dec
outsb
inc
sbb
jle
rorb
or
pop
jle
inc
test
adc
pop
xchg
popw
out
ja
xor
push
adc
out
pop
sbb
mov
cmp
xor
sub
and
mov
cmpsl
and
cwtl
push
test
and
mov
je
xchg
pop
mov
push
jecxz
daa
lret
sahf
xchg
loopne
xchg
call
and
inc
mov
sbb
sub
outsb
pop
js
and
push
xchg
insl
cs
lock
fisubl
jg
shl
mov
lahf
dec
loope
dec
movsb
mov
inc
rcrb
fadd
adc
mov
sbb
or
and
repnz
sti
pop
rcll
sub
jge
lret
jl
or
arpl
lret
push
fwait
mov
adc
jae
in
or
mov
mov
xor
push
or
xchg
cmc
and
mov
mov
pop
icebp
loop
stc
in
sub
pop
sbb
cmp
xor
jp
lahf
cwtl
daa
outsl
mov
push
es
imulb
lret
or
mov
or
sub
xor
add
add
dec
clc
icebp
cmc
mov
icebp
inc
or
out
fcmovbe
xchg
adc
inc
repnz
or
jb
aam
jmp
pushf
dec
mov
xor
jo
into
mov
daa
inc
pop
mov
mov
mov
inc
xor
add
cmp
pop
loope
cwtl
add
jecxz
loope
xor
jg
and
rorl
leave
mov
adc
shrb
shrb
xor
xor
and
test
xor
in
mov
xor
xchg
jle
lcall
out
loop
sub
incl
mov
ror
mov
aam
fsubrl
sub
std
imul
test
jge
or
add
cmp
fiadds
dec
in
int
jecxz
and
mov
lods
in
gs
nop
mov
inc
pop
mov
jl
lods
test
pusha
sbb
loope
and
scas
cmp
arpl
imul
test
xchg
out
lret
or
int3
sub
pop
lahf
dec
sbb
push
jo
dec
lahf
mov
cmp
outsb
sbbb
push
add
cld
mov
enter
call
aad
xlat
cs
imul
and
negl
data16
stos
dec
cmp
inc
mov
cld
push
je
push
adc
inc
pop
add
jg
xor
sub
sbb
jp
stc
mov
andl
xor
mov
xchg
test
fsubs
sbb
push
and
inc
fdivl
in
cmpsb
ret
pop
lds
mov
outsl
and
stc
pop
nop
and
sub
insb
xor
cwtl
inc
xchg
data16
stc
mov
test
push
out
pop
push
mov
push
inc
add
inc
sbb
mov
inc
repz
dec
arpl
and
cmp
adcl
adcb
adc
in
test
adc
data16
push
test
xor
mov
cmp
test
inc
ficoml
mov
shr
arpl
insl
fidivrl
lock
enter
enter
pushf
mov
xchg
mov
jnp
in
cs
xchg
and
clc
push
cmpsl
iret
push
cmpsl
test
and
and
gs
dec
pusha
jbe
mov
in
push
lahf
and
or
addr16
es
loop
addb
sub
aad
aas
ss
mov
into
jge
cmp
mov
mov
xchg
shrl
sub
pop
loop
push
addr16
rcl
dec
clc
pusha
shrb
stos
fidivs
scas
or
and
and
fadds
jg
mov
add
lcall
ljmp
mov
push
mov
lcall
pop
and
ljmp
cmp
and
push
pop
and
mov
xor
xor
sti
movsl
cmpsl
push
push
mov
orb
icebp
rcl
add
mov
add
dec
mov
rcll
sub
sbb
fs
repnz
push
call
adc
imul
mov
ret
mov
mov
sub
add
inc
lods
jb
addr16
pop
enter
inc
je
mulb
xchg
jle
and
fstl
inc
and
call
popf
fwait
je
jb
lret
inc
out
adc
jae
dec
mov
add
and
lods
cmp
cld
lea
jmp
cli
and
ja
jnp
push
mov
ljmp
mov
sarl
ss
call
inc
aad
pop
fdivrs
add
filds
jecxz
adc
push
sbb
gs
mov
fmull
cmp
ret
push
pop
imul
pop
jnp
fildl
add
ljmp
mov
lret
dec
mov
rol
imul
cmp
xchg
or
pushf
sbb
dec
fcoms
imul
repz
mov
sahf
mov
shrb
dec
jb
mov
xchg
rol
cmpsl
test
xchg
mov
xor
fistpl
sub
out
inc
test
and
jl
or
lahf
mov
stos
mov
inc
int3
int3
mov
gs
sub
and
rcll
mov
sti
dec
add
mov
inc
out
test
add
mov
jnp
xchg
adc
push
inc
cmpsl
xor
pop
pop
inc
inc
dec
fisubs
mov
jle
sbb
icebp
mov
mov
or
shrl
push
mul
shrb
and
or
xchg
jae
subb
es
mov
jmp
les
sahf
xchg
imul
lahf
in
adc
scas
movsl
dec
imul
pop
repz
pop
jmp
add
add
fdivl
dec
fs
lds
lock
movsl
cltd
mov
sbb
aam
and
xchg
xchg
movsb
aad
xchg
pop
hlt
jb
dec
add
mov
or
mov
into
fisttpl
cli
test
adc
iret
sub
xor
out
sbb
mov
imul
and
scas
jp
jg
call
dec
add
jg
cmpsl
shll
pop
cld
aas
adcl
xchg
pop
adc
test
jae
ja
aaa
mov
lock
fistpl
fwait
das
jno
sub
adc
sub
les
rep
and
jb
push
mov
ljmp
adc
lock
cmp
sub
inc
and
xchg
mov
pop
mov
bound
aam
fidivs
mov
std
cmpsl
jo
jmp
repnz
enter
mov
mov
js
sub
stc
jno
icebp
in
shll
leave
mov
das
pop
adc
std
out
mov
mov
jmp
out
mov
das
push
pushf
or
pop
adc
pop
iret
scas
mov
in
xchg
arpl
ret
mov
rcl
dec
addr16
shr
lret
sbb
in
inc
cmp
xor
cmpsb
xchg
movsb
cli
out
push
push
leave
xchg
shrb
xor
jne
test
mov
push
rorb
inc
or
cmp
insb
cwtl
mov
sub
wrmsr
xchg
scas
fimull
cmp
shll
aaa
push
mov
fisubrs
insb
test
jno
out
dec
popa
push
cwtl
fsubrs
mov
test
push
sbb
inc
insb
jge
jno
sub
aaa
loopne
push
imul
mov
movsb
dec
jb
into
xor
imul
aad
add
das
pop
xchg
lods
add
ljmp
int3
or
add
add
aam
lds
xor
dec
dec
mov
add
into
push
xchg
sbb
imul
call
inc
add
mov
pop
icebp
or
add
and
inc
jb
cli
sti
mov
loop
out
and
cli
jmp
fidivrl
fldl
mov
mov
pop
pop
loop
sbb
push
pop
and
adc
cmpsl
sub
aas
jne
into
jb
pop
mov
jb
scas
mov
out
mov
pop
add
pop
mov
xchg
out
js
adc
or
mov
cmp
dec
mov
fstpl
loope
pushf
test
and
and
pop
push
push
cltd
xor
idivl
enter
mov
inc
mov
sub
in
sahf
sarl
les
mov
pop
pop
dec
lahf
insb
or
cmp
adc
sti
in
stos
mov
dec
ret
sbb
xlat
mov
jmp
mov
les
push
push
sub
xchg
fadd
and
jne
cmp
sub
adc
mov
pop
adc
dec
movsl
shlb
inc
dec
dec
mov
cmc
xchg
xor
push
nop
aas
and
inc
mov
aas
scas
leave
xchg
enter
outsb
sbb
in
push
cli
into
adc
xor
mov
orb
dec
mov
lods
movsl
add
inc
int3
mov
movsl
out
out
test
lcall
mov
jae
scas
enter
repz
pop
jp
outsl
mov
bound
mov
ljmp
popf
iret
adc
push
and
adc
ret
rclb
in
and
stos
out
outsl
aas
lret
les
push
mov
add
imul
and
test
arpl
lods
xchg
push
mov
f2xm1
or
insb
fwait
pop
or
in
xchg
movsl
jecxz
sub
pop
cmp
dec
push
xlat
inc
jae
out
jbe
mov
jle
jo
fwait
sub
mov
sbb
adc
loop
dec
jo
push
out
ss
ficomps
in
movsl
rclb
sti
aam
sbb
xlat
mov
xchg
xchg
arpl
pop
xor
push
lods
fbld
push
fsubr
cmc
fisttpl
jnp
das
jae
xor
dec
out
pop
push
fcomp
jg
adc
in
cli
addr16
cmpl
dec
pop
mov
lea
mov
sub
in
xchg
or
cmp
lret
je
sbb
int3
scas
and
or
pop
pop
mov
sub
fdivs
mov
mov
test
pusha
jmp
jp
rcll
xchg
xor
mov
je
jb
xchg
in
jo
outsl
ljmp
js
mov
cld
repnz
dec
sub
leave
pop
push
pop
xchg
sbb
repz
pop
hlt
fstpl
mov
xlat
push
pop
int
cmp
hlt
mov
movsl
aaa
xor
inc
sbb
mov
out
jo
add
test
dec
xor
xchg
lea
ja
in
out
inc
into
mov
mov
jnp
xor
inc
pop
ret
cs
sahf
add
adc
imul
and
rcrb
mov
in
lret
xor
dec
bound
mov
push
icebp
das
test
lcall
jno
movsb
inc
aad
popa
jmp
or
mov
addl
test
sbb
pop
sbb
cmpsb
outsl
or
ficoms
xchg
repnz
mov
cmp
fistl
jp
xchg
mov
iret
xor
add
rolb
jge
aaa
sti
cmpsb
inc
rolb
inc
loopne
aam
and
loope
inc
xlat
dec
cld
add
gs
or
sub
das
push
fdivrs
and
and
jmp
or
les
mov
jb
sub
sbb
mov
stos
mov
in
fdiv
jmp
xchg
jnp
pop
mov
push
lea
idivl
cld
pop
jmp
pushf
mov
bound
push
adc
mov
ljmp
loop
sub
shrl
push
stos
dec
sbb
movsb
mov
inc
cmp
push
insl
mov
push
jmp
cmp
frstor
rcll
jns
cmp
xchg
jle
add
addr16
es
push
insl
xchg
in
mov
lods
repz
sbb
mov
out
cli
inc
cltd
outsb
fwait
push
xlat
and
push
outsb
jp
hlt
xchg
shl
fisubrl
sub
cmp
imul
inc
clc
dec
dec
adc
stos
popa
pop
pop
and
les
adc
in
cmp
and
in
jno
or
js
cmpb
imul
stos
push
sahf
xchg
dec
xchg
in
cwtl
repz
rclb
sbb
and
sub
out
push
leave
push
arpl
sub
cmpsb
int
mov
add
xchg
ret
sub
mov
fwait
test
mov
in
test
and
add
mov
mov
ret
sub
hlt
or
sub
push
insl
mov
insb
movb
fidivs
sar
cmp
mov
jnp
xchg
fsubr
jp
clc
dec
jbe
in
inc
rol
lret
push
fstps
xor
movsl
xchg
add
cmc
mov
inc
dec
ret
mov
fs
mov
shr
loopne
add
mov
add
cmp
jne
and
in
imul
cmpsb
lahf
xor
push
leave
inc
aas
dec
jb
loopne
iret
dec
popf
mov
xlat
xchg
xchg
icebp
push
jl
mov
sbb
test
and
mov
pop
sub
in
mov
mov
ret
mov
jno
and
pop
fcoms
pop
arpl
mov
cmpsl
hlt
insb
pop
aaa
adc
into
daa
mov
popa
outsl
and
stos
sbb
push
pop
js
cmp
test
push
es
dec
lea
pop
pop
and
inc
in
mov
test
cmc
mov
mov
ret
test
mov
ja
pop
movq
sarb
xchg
sub
in
movsb
repnz
lret
ja
ret
cmpsb
jle
into
fldenv
sub
loope
jle
add
fcoms
ret
sti
push
cmp
mov
push
aad
lea
adc
test
or
shr
pop
xchg
cmp
jnp
jo
mov
in
jl
test
jb
inc
mov
mov
ss
scas
mov
les
cmpsb
in
decb
call
pop
aam
test
mov
arpl
mov
inc
ss
sbb
insb
popf
idivl
movsl
cmc
sub
mov
jns
imul
jnp
ljmp
pop
sar
roll
pop
push
stos
pop
push
cmpsl
stos
inc
cvttps2pi
cmp
insb
mov
fsubs
mov
xor
and
shlb
mov
lock
movsb
jo
pushf
inc
dec
adc
add
outsb
xor
sbb
push
rcrb
cmp
aaa
addb
inc
iret
lock
fwait
push
aad
lock
xor
xchg
in
stc
clc
imul
ret
inc
stos
fstps
fsubrs
xor
and
jne
xchg
imul
inc
sbb
fmuls
sbb
jg
std
sbb
fisubrs
dec
jbe
insl
mov
jmp
in
inc
jp
pop
or
mov
js
lahf
cmp
push
sbb
xor
mov
mov
js
aas
fwait
push
xchg
leave
lods
add
out
popf
in
cltd
sti
sbbb
cmpsl
lcall
xchg
sbb
cmp
xchg
movsl
sub
xchg
mov
dec
inc
and
fistpll
mov
mov
push
mov
push
xchg
jmp
imull
mov
jp
fnstcw
out
in
mov
mov
inc
addl
adc
mov
xor
mov
stc
cmp
enter
rep
cmp
jl
or
clc
es
sbb
push
inc
add
ja
xchg
repnz
shrd
cwtl
out
mov
add
xor
in
cmpsl
pop
ljmp
les
push
pushl
fsub
jmp
and
pushf
jecxz
and
cwtl
pop
xor
dec
mov
cmp
fucom
jnp
mov
pop
cmp
rol
insl
les
sub
push
out
jle
pop
sub
and
push
dec
aad
lods
jp
aam
and
dec
int3
addl
dec
mov
pushf
icebp
movb
fdivrl
testl
inc
int3
cmp
shlb
sti
sahf
xor
bnd
mov
adc
mov
insl
fdivs
mov
aam
xor
mov
add
pop
cmp
xlat
inc
dec
mov
std
fwait
dec
adc
mov
rcl
push
addr16
fbld
mov
addr16
jo
xor
scas
test
std
cltd
lea
cmp
adc
aam
mov
cli
lahf
push
inc
cmpsl
xorl
jbe
xchg
gs
mov
pop
insl
es
xchg
ret
xor
sbb
inc
push
push
mov
mov
fidivs
pop
mov
sbb
movsl
jo
adc
lahf
mov
movsb
shrb
stos
xchg
shlb
push
add
jnp
clc
xchg
push
cmp
js
inc
sub
in
mov
sahf
in
and
push
test
push
pop
dec
push
xor
dec
sbb
sti
or
dec
sahf
adcb
dec
in
fwait
enter
bound
cmc
jmp
pop
dec
push
ja
into
daa
ret
leave
mov
testb
push
cwtl
cmp
and
inc
arpl
aad
xchg
push
test
push
and
cmp
or
jge
pop
je
xchg
add
clc
jecxz
popa
mov
in
nop
lret
shlb
pop
push
cmp
push
js
xlat
mov
loopne
add
movsb
insl
mov
cwtl
mov
movsl
and
scas
faddl
xchg
das
sub
push
jp
push
pop
pop
dec
mov
inc
insb
clc
aam
mov
push
inc
lea
pop
iret
xor
mov
lds
out
into
movsb
mov
xchg
aad
loopne
aam
loop
jne
or
mov
and
and
orl
movsb
cmp
repnz
repnz
jp
mov
icebp
jnp
test
pushl
inc
cltd
les
inc
xor
sub
stc
adc
pop
clc
jno
out
lea
inc
pop
insb
ds
pop
sbb
cwtl
inc
sbb
imul
xlat
mov
test
xor
rcrb
cli
adc
sub
inc
xchg
push
push
jl
lahf
scas
lret
jbe
inc
dec
push
adc
dec
outsl
in
ja
imul
popf
ljmp
aas
mov
fcmovbe
enter
sub
das
dec
cli
ss
in
add
push
std
adc
cmpsb
push
push
ss
dec
adc
insb
xchg
dec
mov
inc
jl
sbb
xchg
hlt
movb
orb
mov
add
mov
scas
into
std
cltd
xor
aam
or
loope
mov
fidivrl
mov
lcall
js
mov
fcomp
pop
push
sbb
scas
test
shlb
sti
dec
xchg
test
aad
cmp
pop
xchg
xchg
stos
cmpl
push
stos
mov
jl
mov
outsb
jns
sub
sub
dec
cmpsb
cmp
test
mov
dec
xchg
push
inc
pop
dec
cli
pop
fdivl
adc
jge
jns
inc
push
mov
pop
in
rorb
mov
mov
idivl
data16
mov
test
pop
addr16
push
nop
fisubl
pop
sub
mov
cmp
sbb
cld
add
push
inc
in
and
push
cmpsb
les
jl
jo
das
dec
cmp
adc
pop
cmp
sub
gs
outsl
pop
repnz
jecxz
int
ds
mov
mov
movsl
jmp
xor
jae
or
lret
mov
ret
jbe
jecxz
repnz
stos
xchg
rcr
in
or
ret
mov
inc
xor
aad
xchg
mov
inc
xchg
jns
lcall
incb
ret
das
xchg
dec
aas
xchg
inc
xlat
and
aam
xchg
inc
out
jl
jp
fisttps
fcomps
adc
lods
mov
cs
bswap
xor
xor
push
sub
sbb
or
dec
imul
mov
fdivrp
into
jmp
push
cmp
sub
sbb
or
dec
imul
mov
fdivrp
into
jmp
push
cmp
test
pop
jns
jmp
sahf
cmp
mov
stc
into
jmp
pop
cmp
sub
sbb
or
dec
imul
mov
adc
scas
test
adc
hlt
push
out
xlat
leave
fnstenv
test
jne
pop
inc
pop
aaa
sub
cmp
sbb
sbb
leave
fnstenv
mov
jns
imul
pop
or
sbb
adc
shrb
xchg
aas
cmp
pop
pop
push
pop
sbb
mov
cmpsl
pusha
dec
pop
lods
pop
xor
push
repnz
ret
adc
add
mov
mov
cltd
and
inc
sbb
or
sub
mov
insb
pop
or
push
or
mov
mov
lahf
std
mov
and
addr16
daa
cmp
fcomip
cmp
sub
sub
dec
mov
data16
addr16
test
daa
push
addl
or
ljmp
mov
inc
sbb
or
push
in
jns
or
pop
jb
daa
mov
or
out
out
sbb
leave
cmp
dec
xchg
dec
pop
push
push
mov
mov
testb
jmp
mov
xchg
nop
and
and
inc
jg
sub
jge
mov
fcomp
dec
xlat
jecxz
xchg
ja
xor
xor
ss
inc
dec
push
or
mov
mov
ret
in
shl
adc
xor
sbb
dec
push
jle
inc
jl
test
pushf
mov
xchg
lods
in
cmpsl
mov
ja
addr16
dec
inc
pop
aaa
sub
cmp
or
sbb
jmp
fnstenv
mov
jns
dec
inc
pop
aaa
sub
cmp
or
sbb
jmp
pop
lret
fmuls
sub
mov
add
cmpsl
mov
adc
mov
arpl
test
inc
cli
cli
inc
cmpsl
mov
hlt
sub
mov
xor
lcall
shlb
lds
dec
and
push
pop
fdivl
int3
mov
push
pmaddwd
sti
add
scas
in
es
mov
outsb
sub
xchg
sub
int3
stc
shlb
test
ljmp
xor
adcl
inc
sub
pop
jp
hlt
mov
addr16
xchg
cltd
adc
sub
add
jae
rcr
imull
or
pop
sub
mov
and
rcrl
cmp
dec
mov
fldcw
rol
jae
loop
ds
leave
nop
pop
loope
pop
out
xchg
pop
mov
xor
mov
div
ror
arpl
and
dec
cmpsb
lahf
mov
stos
pop
dec
cli
push
and
ljmp
jb
jp
movsb
outsb
lcall
loopne
push
ss
mov
fdivrp
adc
mov
push
nop
cmpsl
pop
fidivl
mov
pop
ret
adc
pop
in
bound
out
inc
shl
mov
lods
gs
mov
rclb
mov
jo
mov
add
adc
pop
in
aas
jns
mov
enter
adc
push
mov
cmpsb
fbld
jo
loope
bound
sti
outsl
aas
push
push
movsb
insb
cmp
lret
adc
or
and
jmp
insl
dec
sbb
mov
pushf
mov
xchg
iret
shrl
out
test
not
mov
mov
nop
dec
rcrb
aad
xor
lea
pop
je
bnd
mov
inc
aad
mov
out
lock
mov
dec
rorl
ret
jp
cmpsb
jmp
pop
js
xchg
test
fimuls
adc
mov
mov
clc
cmp
and
loope
loopne
call
mov
stos
mov
lods
push
push
ljmp
xchg
aad
xor
xchg
sub
or
sbb
cmp
data16
pop
js
stos
clc
jbe
xor
dec
popf
test
jae
cmpb
cli
mov
and
aad
out
std
push
mov
data16
mov
pusha
inc
mov
shrl
or
ja
cmp
mov
fmulp
push
je
lcall
test
movsb
mov
icebp
iret
mov
inc
cmc
pop
ror
xchg
nop
pushf
cmp
and
popf
and
rorb
xchg
popf
inc
dec
lahf
mov
sub
push
pop
outsb
adc
pop
dec
xorb
test
daa
cs
dec
or
adc
dec
cmp
repz
loope
je
sbb
cmp
int3
mov
test
or
sbb
pop
push
sub
mov
push
xchg
adc
adc
rcl
data16
fcom
pop
adc
cmpsb
addb
loop
dec
fisttps
jo
sub
movsl
shl
pop
push
arpl
mov
mov
aaa
push
jle
dec
jl
imul
mov
arpl
mov
mov
in
jge
in
das
lcall
mov
push
add
jg
clc
mov
stos
and
cwtl
xlat
sbb
and
std
add
icebp
fs
pop
loopne
push
mov
inc
es
cmp
and
lret
pop
xor
dec
mov
push
je
lea
and
push
movsb
std
in
xchg
cs
loopne
adc
mov
xchg
mov
push
xor
jno
stos
sub
sub
xor
ret
enter
mov
cmp
mov
adcl
test
loop
inc
mov
jae
mov
out
fmul
dec
cld
xor
sub
or
lds
fstpt
cltd
test
xlat
mov
in
gs
mov
call
or
jo
arpl
xor
adc
rorl
xchg
test
jo
arpl
jo
xchg
int3
in
iret
push
lahf
aam
pop
dec
push
and
mov
aam
das
pop
mov
adc
dec
cli
lea
adc
dec
xor
aad
push
pop
movsb
cmp
or
aas
cli
cmp
pop
imull
pop
inc
std
xor
adc
adc
mov
mov
jno
mov
add
outsl
push
pop
scas
shl
rcrl
enter
sbb
scas
add
cltd
lods
gs
dec
scas
dec
sahf
lcall
imul
mov
add
hlt
sbb
jp
aam
sbb
call
inc
xchg
xchg
dec
and
dec
sbb
enter
push
jp
lods
sub
jmp
jmp
lret
xchg
mov
adc
leave
int
test
ja
cs
icebp
add
nop
test
call
scas
adc
enter
push
xor
xchg
push
out
cld
xor
xor
mov
sti
pop
insl
inc
arpl
in
push
adc
fwait
cmc
shr
sub
dec
push
leave
repnz
stc
outsl
inc
cmp
xchg
in
popf
sahf
add
inc
jg
sbb
sbb
sahf
int
cli
xorb
xchg
fisubl
cmpsl
inc
rclb
inc
test
cmpsl
cs
pop
loope
pop
jmp
mov
add
and
scas
inc
out
ret
dec
mov
xchg
insb
and
mov
cmpsb
xorb
sbb
push
dec
xchg
jp
sub
dec
repnz
out
xor
push
outsl
add
pop
mov
into
fnstenv
nop
popa
in
lods
push
in
out
ja
stc
out
and
xor
jae
adc
mov
mov
pop
xchg
hlt
stos
lock
es
pop
xchg
or
dec
cmc
adc
mov
or
fs
lahf
push
jl
daa
pop
filds
movsb
movb
push
popa
out
je
jae
push
cltd
xlat
sbb
jae
push
jns
js
sbb
pop
xchg
add
adc
jle
push
mov
lcall
add
and
push
and
scas
movsbl
jle
jo
mov
cltd
jp
lock
arpl
mov
mov
out
pop
mov
leave
cltd
das
mov
push
and
jl
js
jl
xlat
or
cmpsl
push
pop
cli
xchg
mov
lahf
mov
push
daa
cmp
imul
les
jns
mov
mov
push
mov
lcall
daa
cltd
add
fs
jmp
or
xchg
clc
popf
jo
jo
lahf
fstpl
popf
movsb
xchg
mov
rolb
or
mov
sbb
push
dec
pushf
inc
test
stos
sarl
inc
pushf
pop
jne
mov
loop
shrb
out
xor
mov
add
pop
push
lods
shl
sbb
jmp
dec
pop
mov
dec
xor
mov
adc
rcl
arpl
stc
adc
xchg
push
jecxz
leave
cmp
out
enter
enter
mov
call
push
dec
pusha
enter
lret
mov
test
fstpl
mov
mov
mov
aaa
aad
dec
fnstsw
jle
out
add
and
aam
and
mov
loope
je
mov
or
sub
jp
or
xor
mov
mov
idivl
das
nop
and
repnz
jg
mov
and
test
lds
pop
sub
test
imul
jg
divl
cli
adcb
cmp
jle
sbb
pop
push
lds
xchg
ja
cltd
leave
test
jge
in
jle
test
insl
or
ret
stos
nop
inc
pop
adc
jae
lods
test
cmp
inc
shl
lret
rorb
pop
mov
subl
mov
in
hlt
lahf
out
dec
mov
loopne
jp
xchg
out
sub
in
sbb
sub
sub
arpl
jnp
push
or
and
push
ret
xchg
push
pop
pop
sub
cmp
jmp
or
iret
dec
fsubrl
lea
mov
jb
and
and
popf
add
or
xor
iret
shll
fildll
outsl
and
mov
xlat
arpl
sub
dec
jnp
neg
iret
mov
push
test
xchg
stos
and
adc
loope
mov
push
inc
pop
lock
add
out
mov
hlt
shr
cmp
daa
insb
popa
or
das
or
pop
movzbl
mov
mov
jge
push
test
out
push
sbb
mov
xor
mov
shl
and
or
dec
je
lret
xchg
sahf
push
into
out
addr16
aam
imul
int3
loop
data16
xor
fstps
sbbl
orb
shlb
jbe
ret
mov
aad
jbe
shll
in
pop
dec
cs
dec
int
xchg
cmp
or
subb
fldl
inc
mov
popf
in
shll
lret
scas
std
cmp
xchg
push
sbb
mov
or
sbb
pop
lds
mov
repnz
sbb
out
jns
nop
and
jo
mov
sbb
xchg
shll
rolb
js
push
pop
sahf
loope
cmc
push
xchg
outsb
cmp
call
dec
xor
or
xchg
je
jb
notb
in
cmp
add
fsubrl
cwtl
leave
mov
inc
and
sub
ret
daa
adc
pop
fldcw
pop
sbb
jo
sbb
mov
inc
rolb
cs
out
orb
jge
push
mov
jp
mov
mov
out
mov
jp
loope
insb
mov
stos
js
pop
mov
and
stc
jge
dec
mov
jo
icebp
pop
aad
or
out
cltd
push
rolb
jo
sar
sarl
mov
mov
test
xor
jae
fmull
sbb
mov
push
fs
jb
mov
add
fstpl
ss
sbb
pop
jae
fdivrl
jno
lods
xor
push
and
push
ret
xchg
xor
push
das
jne
jno
cmp
sub
inc
push
frstor
dec
sbb
cmc
outsl
xor
adc
repz
inc
outsl
fadd
add
add
cwtl
jl
mov
hlt
push
adc
icebp
inc
test
xor
andl
pushf
xchg
cmp
inc
sub
adc
mov
sbb
cwtl
push
cli
mov
sbb
sub
xor
loopne
push
xor
mov
shrb
loopne
cltd
xor
and
rclb
hlt
lods
mov
mov
mov
imul
jmp
aam
out
mov
xchg
scas
jbe
or
pusha
rorb
movsb
scas
fisubrs
loop
fldl
bnd
dec
pop
inc
imul
ljmp
ljmp
pop
mov
lret
dec
jp
jns
cmp
xlat
jae
and
daa
dec
push
ret
and
es
mov
stos
xor
jge
cmp
enter
filds
loope
inc
mov
mov
repnz
pop
shlb
scas
int3
push
out
outsl
bnd
je
add
call
ds
adc
cmp
sbb
mov
mov
sahf
test
fstl
lahf
sub
in
scas
fwait
push
sbb
jle
pop
dec
sbb
cmp
inc
add
pop
push
mov
cmovo
or
and
push
icebp
mov
sub
xchg
loope
mov
pop
sub
mov
xor
jns
or
push
stc
xlat
les
mov
sbb
pop
out
cmp
inc
shl
jnp
xchg
xchg
popa
adc
fsts
testl
gs
inc
lcall
je
xchg
dec
shlb
es
int
rolb
in
cltd
jo
test
xlat
es
mov
iret
inc
rorl
adc
int
xchg
push
adc
mov
aam
pop
leave
dec
bound
out
or
cmp
sub
shll
jp
lods
jecxz
ja
pop
fmuls
stc
dec
mov
leave
or
add
sti
test
aam
add
mov
xorl
sub
add
adc
arpl
popf
daa
cmp
sbb
cltd
mov
xor
fs
cmp
or
xchg
jecxz
iret
outsb
fistl
ss
pop
cltd
rolb
xor
fwait
and
cli
push
repnz
idiv
addr16
call
ret
push
mov
cmpsl
cs
jb
loopne
sarl
rcrl
sub
xchg
inc
push
cmp
mov
mov
dec
mov
ret
icebp
cmpsl
or
cmc
jg
cwtl
movsl
jg
xor
dec
mov
out
daa
and
xchg
out
stos
adc
daa
lock
js
ljmp
push
sbb
dec
pop
jno
outsl
pusha
mov
iret
and
test
add
rcrl
push
jle
xor
dec
fwait
rcrb
jns
xchg
and
push
xor
add
push
clc
and
xchg
popa
jne
les
ret
add
mov
mov
push
jp
cmp
daa
inc
aas
mov
ja
mov
or
call
cwtl
into
dec
pop
dec
jne
rclb
push
pop
dec
and
xor
into
aad
adc
stc
popf
aam
or
out
cmp
pop
rol
sub
enter
repnz
outsb
test
xchg
sbb
mov
aam
les
movsl
lcall
out
int
es
ret
dec
mov
or
or
fdivrs
dec
popa
aaa
xchg
mov
mov
cmpsl
push
repnz
add
inc
test
adc
inc
xor
fidivrs
cmp
inc
lods
sub
es
lret
test
pop
dec
push
sub
xchg
out
jge
faddl
ret
xlat
cwtl
in
ror
loop
pushf
or
cs
mov
movsb
sar
imul
js
cmp
repnz
xchg
mov
call
les
repz
int
jp
loope
xchg
xor
cmp
icebp
cmp
jne
imull
scas
std
fldcw
mov
ret
add
push
mov
mulb
out
mov
insb
daa
das
outsb
mov
mov
dec
dec
std
dec
lods
testb
push
and
inc
je
sub
pop
je
aaa
repnz
insb
sbb
scas
mov
cmp
cwtl
std
lock
mov
test
and
xor
jns
dec
jo
lods
mov
mov
pop
into
dec
mov
sub
repz
cmp
adc
xor
mov
pop
icebp
stos
jge
jnp
pop
stc
inc
cltd
mov
jns
jbe
aad
rcl
cld
xlat
pop
push
cmpsl
imul
cs
rcr
mov
mov
repnz
sub
flds
ljmp
das
sub
mov
mov
dec
lcall
ds
mov
mov
dec
xchg
pop
les
imul
fisttps
rolb
js
adc
mov
insb
ret
icebp
cmp
add
cwtl
mov
cmp
fucom
daa
repz
xor
aas
jecxz
js
xor
mov
fcom
push
enter
or
out
pop
dec
flds
cmp
sti
pop
mov
sub
sub
pop
mov
int3
inc
dec
leave
xor
sub
xlat
pop
xchg
out
outsl
das
ficompl
cmp
adc
fsts
les
cmp
xchg
les
in
lea
push
loop
push
int
add
pop
ffree
adc
stos
adc
test
jg
and
stos
pop
jp
cmp
cmp
add
fiadds
fsubl
sbb
outsl
xchg
mov
mov
mov
xlat
sub
lret
insb
sbb
lea
sub
fimull
sti
sbbb
and
popl
data16
popa
mov
jo
aas
xchg
test
jns
pop
in
je
pop
adc
xor
gs
and
adc
sub
sahf
jae
lret
sbb
fldl2e
insb
stos
cmp
mov
lock
and
stos
movsl
cwtl
xchg
cwtl
and
add
cmp
cltd
or
sub
aam
popa
out
pushf
add
pop
into
loope
mov
subl
inc
xchg
lods
das
cld
xchg
fbstp
mov
inc
xor
sti
dec
insl
cmpsb
mov
ja
arpl
mov
add
xchg
mov
jnp
ss
dec
xchg
stos
out
xchg
cwtl
cmc
add
out
push
outsl
in
lods
sbb
add
outsb
push
js
sbb
xor
sbb
mov
mov
adc
out
cmpsl
ds
cmp
outsl
decb
cmp
rclb
push
sub
sub
leave
stc
das
cmp
cmpsl
aas
mul
pop
mov
mov
mov
fcompl
shrb
mov
in
in
ds
data16
stos
fidivs
fwait
imul
mov
ret
out
cmp
hlt
jle
ret
into
add
jae
insl
pop
jmp
add
rorl
cmpsb
mov
mov
das
js
pop
sarl
sti
cmc
xchg
and
and
xor
cmpsl
jl
sbb
je
fcompl
mov
pop
cmp
cmp
xchg
xchg
push
jl
in
or
inc
in
sbb
or
lahf
sub
pop
pop
rorl
aad
jbe
jl
and
imul
lds
pop
stos
inc
jle
push
pop
cmpsb
mov
jle
out
inc
dec
stos
cld
cwtl
add
xchg
inc
add
cld
jns
out
std
mov
inc
or
add
xchg
push
mov
cld
lcall
aam
or
lret
repz
inc
fimuls
lcall
jle
dec
ja
pop
bound
lret
jo
lret
fsubrl
pop
pop
frstor
fs
stc
dec
call
cmpsl
jb
xchg
pusha
jne
imul
dec
hlt
mov
add
jp
jo
ret
cmp
cmc
xor
bound
fcoms
popf
inc
shrl
mov
lret
ja
push
in
fucom
imul
es
loope
shll
clc
xchg
ja
ss
mov
inc
fdivrl
sub
adc
jnp
lds
jae
jmp
sub
xchg
pop
xor
and
movsl
jle
sub
test
pop
adc
mov
sahf
popf
mov
leave
dec
decb
outsb
mov
rcr
test
add
xchg
push
add
and
psubb
and
inc
adcb
dec
mov
idiv
test
sbb
std
jp
mov
in
lea
loopne
out
mov
or
push
mov
mov
das
push
pop
lods
loopne
or
xchg
mov
dec
pavgb
imul
mov
lcall
adc
std
testl
js
sub
jl
adc
aam
sub
dec
bound
sbb
sbb
cmp
xor
test
fidivs
add
stos
mov
adc
pop
and
pop
xchg
mov
mov
mov
test
pusha
and
loopne
adc
cmp
jbe
stos
inc
jge
pop
lret
cld
mov
popa
pop
nop
cltd
cwtl
bound
mov
jns
sbb
xchg
add
test
or
push
push
cld
or
shlb
out
outsl
jmp
lods
add
or
push
dec
shr
fsts
mov
faddl
rcll
cltd
ds
cmp
aaa
rcrb
rcrl
lods
mov
pusha
xchg
xchg
sub
or
push
mov
and
cltd
cld
sub
shrb
dec
xchg
es
or
and
push
lds
xchg
inc
xchg
sbb
movsl
mov
fsin
adc
cld
mov
inc
cmp
ucomiss
test
leave
mov
je
jne
divl
mov
or
je
sub
pop
repnz
xor
sbb
dec
fs
jg
xlat
fcomip
sub
int
inc
nop
addr16
and
xchg
shl
inc
add
mov
movsl
outsl
lock
and
repnz
fidivrs
push
fdivs
jecxz
sub
jbe
das
jp
cmp
xchg
xor
imul
cwtl
or
or
mov
and
jecxz
divps
jnp
ret
jae
adc
or
cmpb
pop
mov
sbb
or
stc
in
arpl
mov
sub
inc
test
jae
add
sbb
and
inc
dec
add
mov
hlt
adc
movsb
outsb
mov
jns
cwtl
jns
out
or
sbb
es
fnstenv
mov
jns
dec
inc
pop
aaa
sub
cmp
or
sbb
jmp
fnstenv
mov
jns
dec
inc
pop
aaa
sub
cmp
or
sbb
jmp
fldenv
test
inc
cltd
ja
addr16
dec
inc
pop
aaa
sub
cmp
or
sbb
jmp
out
mov
mov
xchg
mov
cltd
ja
cwtl
sar
dec
inc
cs
mov
clc
out
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xor
and
adc
add
mov
dec
dec
jnp
lds
mov
shr
sar
or
sbb
sub
cmp
popa
pop
push
imul
mov
mov
shr
sar
or
sbb
sub
cmp
popa
pop
push
imul
mov
lahf
mov
js
push
adc
cmp
loopne
lock
out
sbb
ret
mov
movsb
lret
andb
jns
stos
xchg
dec
ja
mov
scas
arpl
outsb
mov
loopne
xchg
dec
stos
popa
or
push
push
inc
je
cli
inc
adc
ficompl
cmc
push
xchg
repnz
jmp
ficomps
xor
aas
jnp
add
je
aam
inc
test
and
outsl
das
jmp
push
lret
mov
cli
into
jg
dec
icebp
jnp
mov
ret
popa
rcl
add
pop
je
xlat
adc
cld
mov
sub
ficoms
mov
xchg
xchg
fsubl
ds
push
enter
scas
mov
jmp
out
std
or
sbb
sub
cmp
popa
pop
push
imul
mov
mov
shr
rcll
sub
jno
adc
xor
repnz
lock
mov
push
outsb
inc
jle
dec
insl
cmp
and
sub
adc
aam
lock
clc
sbb
mov
dec
and
pop
insl
pop
cmp
imul
mov
mov
shr
sar
or
sbb
sub
cmp
popa
pop
push
imul
mov
mov
shr
sar
or
mov
cs
aas
adc
loopne
dec
push
push
push
and
int
test
jp
pop
push
fwait
xchg
loopne
sbb
or
push
dec
cmp
and
int
xchg
pop
dec
push
or
push
mov
arpl
pop
xor
out
enter
mov
xchg
aad
aas
push
pusha
push
cmpsl
cmpl
call
mov
inc
push
in
repz
aas
xchg
mov
sbb
add
pusha
pop
sbb
fisubrs
add
cmp
dec
mov
fldl
arpl
cmp
xor
pop
shrl
mov
cmpsl
andl
xchg
clc
sbbb
lods
pusha
call
push
outsb
je
pop
push
addr16
push
in
sbb
xorb
ficomps
lock
and
rcr
clc
cld
fiadds
sub
mov
bound
jle
outsl
jno
ss
movsb
pop
and
push
push
scas
lock
rol
test
xchg
mov
ds
jge
out
dec
push
cwtl
movsb
sbb
push
add
or
ljmp
sbb
jo
cmpsl
cmpsl
leave
lods
shll
sub
outsb
dec
sub
push
scas
push
inc
lcall
cltd
xchg
in
mov
push
imul
int
fwait
jnp
push
jne
out
inc
sbb
imul
test
loope
in
and
push
xor
jne
adc
outsb
xchg
aad
xchg
jns
sub
jne
adc
mov
neg
sub
pop
fcmovnbe
ljmp
enter
pop
inc
cmpsl
cmp
mov
decl
out
xchg
xor
in
movsb
xchg
cmp
cs
mov
inc
push
sub
cmp
lods
xchg
scas
mov
lcall
aam
stos
les
rcr
mov
push
bound
push
cmpb
sub
jge
data16
jl
je
add
push
push
jmp
arpl
enter
jge
iret
pop
mov
add
jmp
jnp
pusha
jae
jg
imul
mov
roll
jmp
adc
pop
ja
sahf
inc
pop
icebp
stos
scas
in
xchg
xchg
bound
mov
cltd
leave
outsb
insl
fsubrl
clc
pop
push
sbb
sbb
adc
sbb
sbb
neg
xor
test
das
std
jge
mov
popa
out
lret
test
inc
lea
js
int
mov
outsb
cli
sbb
jp
xchg
push
xchg
cmc
nop
ja
mov
fdivrp
xor
dec
dec
jbe
xor
and
cmp
mov
jmp
das
aaa
inc
popa
popf
ja
dec
scas
xor
fidivrs
outsb
cli
adc
fcomps
rorl
add
sub
repz
mov
notb
ja
pop
mov
mov
cmp
in
jecxz
cli
pop
pop
mov
mov
jp
rclb
jno
push
test
dec
pop
test
cmpsb
aam
sbb
mov
ret
psrlw
push
adc
cmpsb
out
jnp
mov
push
ret
jg
and
push
pcmpeqw
xchg
insl
mov
cmpsb
cmpl
jo
cmp
and
mov
leave
xchg
pop
fwait
iret
pop
push
loope
sbb
inc
and
adc
add
les
outsb
add
mov
lea
xor
mov
xor
std
gs
sbb
mov
stos
xor
lcall
pop
in
test
sbb
sbb
mull
cmp
xchg
push
outsl
xchg
xchg
je
mov
or
sti
cld
mov
pop
in
iret
xor
aam
mov
inc
dec
pop
jp
mov
mov
insl
xchg
cmp
adc
inc
pop
in
aam
lds
mov
pop
pop
and
int3
shll
scas
lea
fs
andl
in
fstpt
nop
lret
in
iret
adc
add
cmp
mov
or
mov
iret
push
xchg
xor
mov
mov
push
mov
mov
out
loop
push
or
popf
push
loopne
push
mov
dec
es
mov
sub
icebp
lahf
push
push
mov
mov
sahf
into
pop
ret
mov
call
pop
lods
orb
mov
sahf
cmp
ret
xchg
dec
inc
mov
xchg
gs
fbstp
gs
out
test
shll
or
add
pop
orb
jmp
dec
adc
push
cmpsl
ret
daa
jle
mov
mov
push
pop
js
pop
pop
xor
push
sbb
jnp
std
shll
xor
dec
mov
lahf
mov
pusha
xchg
adc
adc
repz
mov
mov
out
pop
pop
inc
xchg
shlb
hlt
sub
ret
and
sub
push
pop
aad
jns
daa
jno
clc
test
adc
or
loop
mov
sbb
sub
push
ljmp
jns
pushl
cmp
mov
ret
hlt
loope
pusha
dec
or
inc
nop
inc
es
add
adc
push
rcll
or
pop
jp
sbb
adc
lock
insb
sbb
aad
sub
sbb
xchg
mov
xorb
lcall
test
or
ud0
add
daa
lods
ret
jne
out
cmpsb
mov
add
leave
xchg
push
shrb
xor
fnstsw
test
xchg
fwait
roll
push
push
cmp
mov
xor
cmp
mov
push
adc
lods
nop
pop
jno
inc
sub
mov
faddl
in
pop
mov
aam
adc
jnp
mov
mov
int3
lock
fisubs
xor
cmpsb
sub
arpl
insl
jno
xor
jg
jl
pop
mov
mov
into
in
insl
jecxz
int3
push
mov
movsl
scas
test
add
pop
xlat
mov
dec
mov
jecxz
frstor
sti
or
or
mov
test
leavew
stos
jns
flds
std
pop
sub
sbb
pop
aas
inc
inc
test
cld
xchg
jmp
sbb
adc
and
hlt
xor
shll
cmp
jae
xchg
jmp
subl
lahf
pop
inc
lret
xor
cmpl
test
mov
pop
push
jo
jmp
daa
je
mov
dec
push
es
pushf
orb
mov
jns
or
and
ja
push
pushf
sbb
ret
lcall
fildll
xchg
fnstcw
movsb
sbbl
and
push
jl
lret
or
push
and
add
loop
movsl
js
sub
pop
sub
add
loop
jl
in
lcall
aam
push
adc
mov
pushf
mov
mov
cli
daa
adc
inc
adcb
hlt
sbbl
add
or
and
pop
mov
cmp
sbb
scas
loop
ljmp
jmp
xchg
mov
mov
push
pop
enter
mov
sahf
sub
xchg
ror
ljmp
mov
icebp
or
aaa
push
out
and
rcrl
jne
mov
into
ret
cmp
pop
mov
rcll
mov
pop
pop
imul
subb
mov
bnd
add
sub
inc
jb
clc
push
mov
aam
fstpl
bound
push
filds
ror
xor
xor
push
mov
pop
shl
add
adc
cmp
jb
fistl
mov
cmpb
stos
add
inc
push
cmpsl
popf
ljmp
je
incb
jge
movsl
aaa
or
test
xor
fiaddl
mov
in
fs
pusha
inc
xchg
inc
lret
in
loope
insl
add
pop
add
push
ss
sub
ret
mov
loop
inc
aas
orb
call
push
mov
pop
call
addr16
pop
xchg
xchg
xchg
inc
loop
mov
push
bound
je
xor
sbb
add
in
cwtl
pop
test
add
sub
xchg
add
push
sub
sbb
or
push
call
xchg
insb
decl
xor
in
push
or
mov
mov
and
call
jae
mov
adc
push
mov
mov
cs
cmp
pop
popf
dec
adc
and
push
cmc
and
stc
nop
adcb
ja
lret
xchg
subb
sbb
and
cmp
div
xchg
jne
stc
fists
cli
lea
xchg
push
iret
jbe
ds
cmp
mov
les
cmp
dec
pop
and
ss
call
pop
ljmp
mov
inc
sbb
rolb
jle
call
xchg
cmp
mov
and
jae
jg
rcr
cmp
in
sbb
jne
sub
and
jecxz
push
adc
sbb
pop
inc
dec
push
jbe
mov
bound
sbb
push
call
jp
mov
int
xchg
aad
cmpsb
lret
cmp
out
cld
jnp
int
out
stc
or
ficoms
xchg
out
jmp
leave
sbb
pushf
push
push
stos
test
inc
cmpsl
cmp
scas
or
inc
test
or
fnstsw
add
rolb
lret
or
sbb
jp
loopne
imul
mull
cmp
add
stc
xlat
adc
in
push
outsb
sbb
mov
aam
lods
arpl
add
movsl
xchg
repnz
add
and
push
ljmp
sbb
outsl
jle
push
rorl
mov
fstpl
pop
aaa
and
nop
daa
ret
pcmpeqw
fs
or
fwait
cmp
xor
adc
dec
pop
sub
ljmp
fldl
cmp
out
sub
pop
inc
in
fcoml
out
call
mov
aas
loop
pop
cmp
pop
adcl
test
xchg
mov
scas
sub
pop
add
cmpsb
inc
repz
mov
xchg
and
aas
pop
adc
dec
xchg
mov
pop
stc
and
mov
add
inc
into
cmp
cld
push
int
lea
in
fcmovnb
jle
dec
jns
and
sub
out
dec
aad
fdivrs
mov
or
push
inc
dec
loopne
pop
jno
rcll
cmp
pop
mov
out
push
push
test
rcrb
or
jp
cmp
cs
mov
xchg
out
test
cmp
icebp
lahf
pop
in
mov
subb
ret
cs
adc
mov
lock
incb
or
or
test
into
insl
loopne
sub
pop
dec
push
push
addr16
xchg
xor
testl
inc
lods
push
data16
mov
add
cmpl
aaa
inc
add
imul
sbb
jl
jbe
enter
loopne
cmp
std
test
es
es
in
dec
clc
sub
push
fstl
or
sbb
rolb
fcoml
imul
pop
je
mov
mov
push
jbe
cmpb
ja
test
fs
notb
andb
cmp
mov
or
jae
pusha
fwait
sbb
pop
mov
in
ret
and
out
adc
lods
sub
mov
mov
cltd
fs
ss
add
cmpsl
mov
icebp
gs
pushf
in
xchg
inc
xorb
in
cltd
fwait
add
add
sub
pushf
rclb
out
sarb
lcall
mov
das
fstpt
push
arpl
in
push
xor
ror
sbb
pop
stos
lea
in
and
push
xlat
hlt
sbbl
repz
jns
sbb
mov
inc
roll
adc
mov
xor
int
inc
cltd
aam
outsl
pop
xor
pusha
jge
or
lret
data16
out
mov
push
inc
mov
dec
aam
ret
adc
xor
mov
mov
adc
fwait
mov
jecxz
mov
xchg
mov
in
insl
add
cwtl
push
cmpb
imul
dec
pop
sbb
add
inc
mov
enter
dec
pop
test
inc
jle
mov
sahf
dec
repz
stc
andb
bound
push
jne
cs
or
lea
pop
lahf
mov
aas
lret
fst
dec
mov
mov
dec
jbe
mov
test
in
sbbl
xchg
rolb
jnp
xchg
adc
mov
mov
pop
xchg
xchg
jno
lea
sub
out
cmp
out
test
and
imul
push
sar
inc
xchg
jecxz
pop
mov
pop
mov
rclb
andl
inc
lret
mov
shrb
nop
sbb
and
leave
mov
cltd
mov
gs
rol
ffree
jmp
jnp
push
dec
mov
popa
stos
hlt
jle
pop
xor
pop
sahf
and
popa
mov
or
push
aaa
out
dec
adc
sub
gs
icebp
sbb
movsb
test
popf
insb
cmp
jg
and
dec
cmp
fsubrl
rol
jne
mov
xlat
sub
jmp
jns
dec
gs
mov
or
add
jp
lods
pop
fbstp
sbb
or
sbb
stos
add
mov
shll
dec
sbb
xchg
mov
jae
push
xchg
inc
jmp
bnd
pop
or
pop
sbb
sub
sbb
inc
cltd
stc
inc
mov
jl
or
cmp
loop
mov
sub
mov
ret
test
int
inc
sbb
and
popf
outsl
mov
addl
loop
int3
outsb
mov
nop
cmp
scas
test
mov
add
lds
fdivr
xorl
pop
shlb
jae
lret
xor
xor
cli
dec
sub
scas
sub
in
into
adc
mov
jns
add
xchg
fstps
mov
xchg
arpl
jnp
jo
adc
mov
ja
daa
mov
xchg
jae,pn
jl
aad
mov
cmp
push
repz
xchg
shrb
test
lea
cwtl
popa
les
push
test
ret
aam
sarl
enter
dec
mov
cmpsb
adc
fildl
out
xchg
pop
fdivs
lods
cmp
subl
out
shll
and
and
pop
and
dec
add
mov
repnz
orl
stos
mov
negl
mov
out
push
add
and
arpl
fs
pop
jmp
sbb
inc
cmp
dec
lods
cmp
mov
pusha
push
sub
inc
xchg
int3
mov
jecxz
jp
enter
sbb
in
fcomps
adc
fcoms
sbb
cmp
sub
sub
outsl
ret
xchg
or
lret
inc
mov
pusha
cmc
addr16
pop
ror
fnstcw
repnz
pop
push
test
sub
xor
call
cwtl
stos
mov
cmp
mov
fidivrs
cmp
dec
sti
iret
hlt
dec
sbb
insl
les
adc
cmp
jg
and
shl
push
es
xchg
imul
in
xchg
pop
mov
xchg
das
rol
sub
cmp
mov
aam
push
jne
cltd
pop
lock
icebp
pop
ss
fwait
push
pop
movsl
jmp
sbb
sbb
mov
mov
aam
jmp
adc
xchg
dec
fs
test
sbb
ret
lods
test
out
jae
push
sbb
sti
xchg
shl
push
shll
jnp
mov
jge
dec
mov
xor
and
rcl
imul
nopl
ljmp
mov
mov
add
ss
addl
mov
mulb
cwtl
pusha
out
bound
cs
sub
popf
push
xchg
inc
push
mov
andnps
push
sub
mov
loopne
sbb
imul
fiadds
and
stc
popa
fisubl
or
mov
dec
xlat
adc
sub
lea
jbe
out
fwait
popa
mov
jge
cmp
test
mov
loopne
cmp
mov
ss
cmp
pusha
mov
adc
add
and
repz
pop
cmp
lds
cmp
push
xor
dec
data16
xlat
cltd
repnz
in
insb
aad
cmp
mull
sub
pop
push
cmc
bound
addr16
dec
mulb
hlt
and
add
lds
subb
shrb
lea
jmp
pushf
fstl
std
and
cs
sub
les
mov
adc
xchg
xor
mov
fmulp
jbe
pop
sbb
arpl
jns
aaa
push
bound
repz
jns
dec
mov
aas
les
icebp
sub
je
and
mov
or
sub
jne
mov
scas
and
scas
test
xchg
sub
sub
lahf
mov
cwtl
test
inc
arpl
cmpsl
fnstcw
cmp
mov
push
test
xchg
jae
std
loopne
leave
fidivs
stos
add
push
add
mov
dec
cmp
pop
loopne
mov
imull
out
or
mov
fstpl
daa
insb
imulb
daa
jne
mov
add
mov
dec
inc
sbb
jmp
sub
arpl
in
lret
jecxz
int
and
pop
addl
pop
call
cmpsb
mov
mov
xchg
movsl
xor
dec
fisubs
cld
sbb
push
pop
jp
stos
mov
inc
xchg
enter
xchg
in
add
fdivl
fwait
imulb
es
std
arpl
mov
pop
leave
lcall
add
pop
sbb
add
jecxz
mov
and
insb
cmc
and
dec
mov
leave
ret
inc
push
imul
iret
or
xlat
cmp
nop
or
mov
das
lahf
pop
outsb
cwtl
out
enter
fbstp
pop
stc
in
cmp
jecxz
test
sub
aad
xchg
in
sbb
ds
mov
in
xorb
mov
jae
popf
xor
add
out
inc
push
das
incl
adc
and
cmp
cmp
sub
push
mov
scas
cmp
aaa
xlat
lds
insl
xor
add
add
inc
insb
mov
mov
aad
push
dec
imul
mov
sub
sahf
xor
lea
flds
xor
add
test
dec
xchg
pop
addr16
sbb
dec
rorl
rcrl
loopne
loope
test
mov
test
cld
xor
jnp
and
or
lahf
or
and
sbb
xchg
fmul
rorb
cmp
fimuls
sub
push
fwait
nop
cmpsl
jge
xor
mov
in
ret
js
out
fcoml
xchg
adc
orl
xchg
out
js
test
outsl
mov
dec
ret
repz
aam
pop
jecxz
lahf
fcmovb
sbb
add
push
jle
jge
jecxz
jecxz
jb
out
cmp
cwtl
jecxz
hlt
mov
ss
mov
push
dec
cwtl
jl
nop
mov
sahf
test
mov
inc
les
mov
leave
popf
cmp
andl
imul
xorps
push
mov
adc
or
scas
in
dec
and
cmp
inc
rep
loopne
shlb
push
sub
addl
mov
pop
shl
mov
adc
movsb
scas
fdivrs
test
lods
cmpsb
pop
mov
loopne
mov
cwtl
pusha
rorl
sbb
in
xor
addr16
dec
mov
push
iret
jne
and
call
add
aaa
push
rcrb
jno
outsl
xor
movsl
nop
sub
movsl
outsb
mov
loop
sub
push
xchg
cli
sub
ficoml
pushf
mov
js
inc
movsb
insb
mov
and
add
in
cmp
fs
dec
jp
ds
jl
into
lock
repz
movl
push
pop
jecxz
test
xor
xchg
inc
mov
cmp
jge
jae
and
aam
adc
push
sbb
pop
lods
push
mov
mov
psraw
aam
iret
lcall
add
int3
cmpsb
push
lret
rcl
int
nop
xor
cmpb
dec
inc
mov
and
sbb
pop
sub
adc
jns
push
adc
imul
add
aas
dec
lcall
mov
or
adc
mov
shll
sahf
jg
mov
sbb
or
push
adc
sub
in
imul
mov
push
out
inc
mov
push
push
inc
xchg
fmulp
push
jmp
add
jo
decl
jb
or
loopne
inc
pop
or
adc
imul
and
imul
dec
outsl
mov
jecxz
mov
dec
mov
ds
and
cmp
popa
pop
push
imul
mov
mov
shr
sar
or
sbb
sub
cmp
popa
pop
push
imul
mov
mov
shr
sar
or
cmp
dec
popa
pop
push
imul
mov
mov
mov
shr
sar
or
sbb
sub
cmp
popa
pop
push
imul
mov
int3
addl
add
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
stos
cmpb
jecxz
popf
mov
sub
sbb
push
jp
dec
pusha
pop
jo
cmpb
ljmp
test
or
adc
and
xor
jnp
dec
pusha
pop
jo
cltd
mov
test
fsqrt
enter
ljmp
jg
push
or
adc
pop
fmulp
fneni(8087
mov
repz
in
lods
adc
add
loop
adc
and
xor
mov
sbb
sbb
loopnew
mov
and
pop
xor
xchg
pushl
iret
cmp
nop
or
loopne
shr
mov
roll
adc
dec
lahf
iret
imul
jmp
stos
ficomps
jecxz
rolb
mov
jmp
in
cmp
mov
shll
add
les
add
movsl
ss
xor
xchg
xchg
mov
inc
cli
inc
mov
pop
cmc
xchg
jg
in
pop
gs
dec
jno
outsb
loope
mov
cli
fbstp
mov
mov
bound
imul
cli
ror
loopne
jmp
or
sbb
push
jp
dec
jp
jno
sbb
int3
pop
xchg
mov
mov
pop
outsl
pop
adc
pop
push
in
and
sub
jmp
fcmovnu
pop
mov
xchg
lahf
ret
pop
jne
inc
sbb
popf
xor
push
and
xor
push
scas
repz
ror
loopne
lock
cmp
or
sbb
push
jp
dec
pusha
pop
jo
cmpb
ljmp
lock
cmp
or
sbb
push
jp
dec
pusha
pop
jo
sbb
pop
daa
in
cmp
adc
pop
fs
ss
les
jno
xchg
scas
test
lea
imull
hlt
inc
movsl
push
rorb
mov
pop
in
mov
xchg
xchg
shll
js
jmp
dec
push
xor
cmp
inc
push
jno
test
fcomps
cmp
imul
lahf
das
insl
pop
clc
cmpsl
xchg
std
pop
ljmp
jnp
jg
imul
or
call
jle
mov
or
push
mov
inc
xor
mov
lret
xchg
popa
int
in
fnstenv
cmc
cmpsb
xchg
push
add
imul
fbstp
scas
insl
sbb
subl
ret
xlat
clc
push
aaa
scas
arpl
adc
inc
adc
pop
lods
out
mov
ret
push
rorl
cld
das
icebp
cmpsl
push
pop
aam
push
add
test
or
mov
mov
or
cmp
xchg
insb
jp
fdivs
ljmp
xor
push
cmp
add
pop
test
and
push
xchg
mov
gs
push
adc
fsubs
and
cmp
inc
inc
mov
bound
leave
xor
nop
mov
xor
loopne
adc
js
test
add
mov
or
addb
mov
call
divb
ja
sbb
stos
push
jl
or
mov
jg
fs
cwtl
das
stos
orl
pusha
xor
xchg
jo
in
cmp
or
push
xlat
call
push
pcmpeqd
ljmp
mov
cld
push
neg
insl
fisttps
jmp
mov
int
inc
adc
in
xorb
add
add
xor
mov
cld
test
mov
jecxz
or
fwait
cmp
inc
inc
daa
cmp
lods
arpl
and
jge
fistpll
mov
mov
test
loopne
js
out
inc
scas
stos
xor
cwtl
mov
adc
push
stc
dec
pop
xchg
je
mov
push
out
adc
movlps
mov
jg
fnsave
popf
aam
lock
adc
hlt
arpl
mov
cwtl
lods
mov
lea
mov
cmc
addr16
pop
push
lods
daa
push
call
or
xchg
pop
repz
imul
xchg
pop
xchg
xor
push
repnz
jns
rcl
sub
int3
std
movsl
push
cmp
or
es
divb
imul
fdivl
xchg
cmp
fsubrp
out
hlt
mov
pop
movsb
sahf
adc
nop
or
ret
sub
dec
adc
ljmp
or
inc
test
add
adc
and
lods
shl
xchg
push
sbb
or
add
jecxz
fxch
testl
ss
ljmp
jne
shll
jbe
xchg
adc
test
stc
jb
test
in
insb
imul
frstor
popa
cmpsb
data16
test
cld
arpl
add
push
jg
pop
adc
sub
shlb
add
in
push
ret
adc
nop
shrb
imul
dec
or
mov
mov
icebp
pop
sub
popf
pusha
ret
cltd
pop
iret
pop
jo
les
out
jle
adc
psubq
mov
or
imul
outsl
and
leave
push
ja
jno
int
arpl
test
mov
xchg
in
push
movsl
mov
sub
sti
mov
test
movsl
imul
leave
lds
jo
jle
lea
dec
push
scas
test
jbe
add
insl
mov
addb
and
cmpsl
int3
xor
ffreep
mov
and
add
ficomps
mov
test
cmp
and
imul
add
mov
push
sbb
mov
dec
inc
loopne
jns
sub
add
repnz
xor
ja
adc
add
cltd
leave
cmpsl
int
mov
pop
lods
ficomps
minps
push
lahf
push
and
pop
divb
nop
pop
ja
loop
call
gs
sbb
lds
popa
pop
and
jl
jg
push
cld
sbb
push
aas
fs
mov
js
mov
hlt
xchg
inc
xor
sub
js
xor
xchg
mov
dec
and
sub
cmp
arpl
test
mov
js
push
fucom
and
enter
mov
inc
xchg
dec
push
rcrb
mov
or
jecxz
inc
xor
fnclex
lock
sub
sbb
push
pusha
dec
dec
pop
adc
in
lcall
scas
push
hlt
cmp
and
xchg
push
mov
cmp
xchg
adc
dec
or
sahf
test
out
aaa
cwtl
rcll
cltd
push
outsl
cmc
add
jno
mov
mov
test
jp
sbb
jmp
xchg
add
push
jmp
add
stos
lret
adc
dec
ret
hlt
insl
std
scas
jbe
push
push
adc
bound
jne
addr16
icebp
bound
setnp
fsubs
cwtl
movsb
lcall
lods
outsb
mov
mov
push
or
jne
pop
mov
fldl
mov
shll
stos
xchg
das
xor
mov
stos
cmp
stc
out
std
sbb
add
mov
sahf
sti
xchg
pop
ja
add
cwtl
repnz
xor
cld
jo
mov
nop
cwtl
jge
dec
cmp
fidivl
test
cmp
mov
gs
pop
pushf
pusha
test
cmp
inc
jnp
std
xchg
cmp
mov
add
xchg
xchg
xchg
add
pushf
sbb
pop
push
add
hlt
arpl
fbld
cmp
lret
pop
pop
inc
cmp
pop
roll
pop
jae
loop
in
lret
rcl
mov
popa
sti
adc
arpl
cmpsl
aam
out
stc
cmp
dec
inc
lea
orb
mov
push
movsb
mov
cmp
cli
sahf
test
mov
xchg
aaa
mov
add
mov
pusha
lds
cmp
dec
pop
gs
add
aam
dec
or
sbb
cltd
fdivrs
scas
test
xor
or
xchg
adc
and
mov
mov
adc
stc
sbb
push
push
dec
out
inc
push
push
push
or
popf
or
sub
inc
xor
xchg
or
fstps
sub
mov
mov
out
inc
adc
inc
inc
and
idivb
xor
aam
mov
rep
mov
outsb
ucomiss
pop
jne
pop
or
loopne
insl
outsb
movsl
mov
ljmp
repz
fbld
popa
push
andl
dec
stc
mov
arpl
mov
or
fstps
negb
mov
mov
lods
mov
leave
pop
mull
aas
add
movb
or
leave
pop
jmp
push
shll
lcall
jge
cmc
mov
and
aad
imul
fwait
loope
xchg
insb
mov
xchg
push
sbb
cmp
insb
sahf
sbb
mov
dec
add
imul
jl
sub
mov
jmp
data16
sbb
add
scas
mov
sbb
popf
mov
push
adc
cmp
bnd
xorb
testb
inc
in
dec
push
jle
mov
xchg
mov
add
push
ljmp
xchg
fsubrs
dec
scas
mov
call
fildll
jmp
dec
cmp
mov
sbb
xor
sub
lcall
addr16
lods
jle
insl
adc
pop
mov
pop
aam
int
mov
decb
insl
jne
xchg
imul
jmp
addr16
push
xor
pop
cmp
decl
adc
jg
fsubrl
jge
push
aas
xchg
ljmp
pushf
fidivrs
dec
or
mov
aad
jle
pusha
mov
push
mov
jecxz
imul
xchg
out
dec
cli
mov
and
shrl
fstl
inc
mov
xchg
call
cmp
cmp
test
test
xchg
sbb
xchg
push
flds
loopne
fwait
jecxz
mov
adc
ror
stos
movsl
sbb
adc
cmpsb
mov
test
mov
js
mov
mov
scas
and
in
leave
mov
rorb
pusha
and
xchg
loope
mov
sub
push
lret
popa
dec
push
into
jmp
faddl
push
mov
cmp
mov
and
jmp
mov
push
mov
xchg
movsl
dec
xor
or
mov
mov
pusha
cmpsl
adc
pop
cmp
movsl
loop
addl
sbb
push
out
or
push
add
out
sbb
mov
out
inc
out
cmp
sub
mov
add
hlt
arpl
mov
push
ds
out
aad
in
xlat
xchg
xchg
movsl
jecxz
dec
jecxz
adc
push
xchg
cmp
xchg
andb
xor
xchg
adc
mov
dec
enter
xor
and
lods
xor
rcr
imul
dec
cwtl
pusha
sbb
rcr
jecxz
mov
int
jae
sbb
fisubrs
stos
mov
mov
jmp
and
jb
inc
int3
jge
inc
inc
mov
ljmp
xchg
xchg
js
mov
shll
movsb
mov
cmpsb
std
cmp
xchg
cmp
xchg
out
mov
xchg
test
xchg
pop
call
in
stc
dec
xchg
mov
cmp
sbb
pop
cmp
das
es
mov
lret
add
mov
fsubl
idivb
imul
out
icebp
int3
fs
xor
enter
xor
call
sbb
rcll
xchg
or
das
shl
jnp
adc
jb
and
push
fisttpl
mov
push
test
cmp
cmpsl
lds
into
mulb
cmp
ret
das
stos
cmc
dec
xchg
hlt
movsl
or
dec
mov
in
lret
push
cmc
mov
outsl
xchg
or
iret
test
popa
cmp
pop
test
mov
push
push
mov
in
sub
ss
dec
icebp
sub
enter
pop
addl
and
mov
adc
sbb
sub
cmp
push
in
loope
fisubrl
add
push
jp
lods
pop
mov
mov
xor
icebp
pusha
popf
addl
add
or
std
rolb
mov
mov
mov
arpl
rdpmc
cmc
int
addr16
mov
jg
scas
xchg
rorl
sbb
jns
xor
iret
push
out
or
push
or
cmp
int3
sub
inc
add
cmp
fmul
inc
adc
das
dec
and
std
in
sub
fists
cmp
push
add
call
cmp
mov
push
mov
sub
popa
push
cmp
andb
add
dec
cwtl
lods
stos
push
or
shl
in
add
pop
mov
pop
cmp
pop
jmp
in
and
and
psubusb
push
inc
sub
int3
cmpsb
sar
shr
mov
sbb
xchg
jle
add
or
mov
daa
cmc
ficoml
cmpsb
loopne
iret
cs
xchg
push
lds
cmpsl
sbb
mov
sub
dec
frstor
scas
push
push
mov
mov
cbtw
subb
add
add
cltd
loope
push
lds
repz
pusha
push
mov
nop
mov
fsubrl
cmp
pop
stc
mov
dec
call
out
subb
loope
pop
xlat
sbbb
xchg
xor
outsl
sbb
imul
cwtl
cwtl
pop
jmp
lock
clc
inc
inc
mov
shll
in
xor
inc
jnp
jo
inc
dec
repz
call
mov
sub
xchg
dec
dec
icebp
xchg
inc
fisubl
xor
jb
inc
mov
or
jae
je
jge
fwait
rcl
scas
popf
and
ja
adcb
sub
xchg
xchg
push
stos
jge
jecxz
mov
ljmp
add
cmp
and
movsl
pop
push
sub
pop
mov
pusha
add
mov
push
mov
in
bswap
lds
rcrb
or
pop
cmp
clc
inc
andb
jmp
into
movsl
push
add
sub
and
sbb
scas
jnp
sbb
cwtl
mov
push
xor
cmc
mov
and
or
leave
movsb
dec
sub
inc
iret
sbb
clc
cwtl
cli
mov
call
inc
nop
je
mov
cmp
xor
adc
test
mov
test
insl
cs
pop
inc
pop
push
lock
pop
repz
xchg
mov
cmc
mov
mov
cmp
fiaddl
push
pop
and
lret
xchg
lret
cmp
out
sbb
mov
fildl
dec
lods
cmpsl
icebp
jg
mov
into
mov
inc
mov
pop
cs
rcl
fistl
mov
dec
mov
scas
sbbl
xchg
inc
cmp
stc
fisttps
shlb
out
bound
pop
scas
sub
jge
xor
es
xlat
dec
scas
test
cmp
push
sbb
loopne
cmp
enter
popf
mov
pop
push
daa
sahf
mov
sahf
subb
adc
sbb
insl
cwtl
lods
insb
push
cmp
mov
lahf
sub
add
xchg
aam
into
dec
imul
test
jp
sarl
pop
and
lock
adc
shll
xor
loope
and
vpsrld
outsl
jg
in
fadd
fmulp
pop
inc
pop
lods
dec
hlt
cli
mov
stos
or
sub
cmpsb
outsl
call
cmc
xorb
jno
data16
sub
out
cmp
outsb
jbe
aam
pop
pop
sbbb
push
sbb
and
cmp
js
loop
dec
mov
iret
mov
data16
shll
push
dec
scas
or
mov
pop
jb
mov
cmp
cmpsl
shll
icebp
fs
test
aam
imul
jae
hlt
or
decl
ret
les
insb
adc
dec
loop
sub
stc
mov
pop
jle
das
fsubrl
dec
nop
sbb
push
add
add
loopnew
aam
lret
rcrl
test
fistl
push
jnp
jnp
inc
inc
xchg
and
mov
push
pop
maxps
jge
sbb
xchg
mov
test
dec
add
cs
jle
es
leave
xchg
out
jg
test
jo
cmp
in
push
and
ret
mov
pop
int3
xchg
stos
jg
rorl
add
std
rorb
mov
push
cmc
js
pushf
mov
loopne
push
rcrb
adc
and
in
adc
into
ror
shlb
loope
jmp
outsl
lds
stos
int3
lds
add
mov
pop
pop
push
in
and
push
aad
mov
xor
and
sub
fcmovnu
inc
mov
scas
pop
xchg
addr16
cmp
and
mov
mov
mov
adc
xchg
jge
cmovg
and
test
rorb
add
adc
sub
cmpl
or
dec
inc
lods
call
scas
inc
movsb
notb
pop
sbb
xchg
pop
add
das
jbe
stc
xor
enter
pop
mov
leave
pop
ljmp
push
les
push
leave
sbb
in
arpl
cli
inc
mov
hlt
dec
fstpl
jne
in
mov
arpl
sbb
aas
das
jnp
mov
inc
add
lret
sbb
ja
in
xchg
iret
subb
stos
adc
jbe
adc
ss
test
pushf
movsb
pop
setg
test
sahf
imul
inc
cmpsb
in
out
push
sahf
mov
sbb
int3
pop
int3
xchg
mov
js
or
pop
push
pop
jae
jb
insl
repnz
icebp
fists
fidivl
xchg
pushf
mov
icebp
movsl
ffree
les
outsb
pusha
dec
push
cmp
sarl
mov
mov
mov
or
jecxz
das
stos
mov
push
sbb
in
popf
lret
push
pop
cmpsb
jns
inc
cli
cmpsb
iret
insl
mov
cwtl
out
adcl
rorb
mov
bnd
cmp
in
jbe
lcall
pusha
es
dec
loopne
imul
adc
jb
mov
in
dec
rorl
ret
testl
mov
cmc
sub
push
mov
push
dec
shll
pop
and
mov
mov
and
dec
add
fwait
adc
leave
mov
pusha
fists
adc
adc
cwtl
or
cld
mov
ja
test
add
icebp
out
or
adc
jns
cmc
cmp
por
repnz
cmc
fimuls
inc
jg
fsubr
imul
xor
pop
jmp
pop
mov
pop
popf
cltd
shl
movsl
dec
jge
dec
mov
rorb
cltd
mov
sti
dec
inc
mov
push
into
jg
or
int3
mov
repz
in
adc
shrb
pusha
xorl
and
out
push
sbb
incl
insl
je
cmp
ja
xchg
in
or
cmpsl
int
divb
pop
cmp
pusha
push
shrb
push
sub
sahf
jb
sahf
ljmp
inc
sarl
outsl
pop
add
xchg
add
jbe
inc
push
mov
dec
mov
fistps
and
and
sub
shll
mov
fisttps
cs
cmp
or
lahf
hlt
mov
add
mov
shlb
and
sub
sub
inc
jnp
imul
mov
adc
jmp
in
lds
jbe
mov
loop
xchg
rcrl
int3
xor
shll
xchg
inc
fdivl
mov
lods
hlt
in
xchg
and
jp
cmp
add
mov
imul
shrl
pop
pushf
outsb
xlat
out
hlt
lods
movsb
mov
fsubrp
test
outsl
iret
add
pop
or
or
xchg
lock
mov
test
and
push
or
fmull
filds
pusha
xlat
pop
test
jae
pop
les
sbb
xchg
rep
sub
insl
add
add
inc
fisubl
mov
shl
dec
xchg
cld
icebp
insl
add
adc
xor
or
sbb
adc
insb
pop
xor
sbb
and
dec
bnd
and
jmp
sub
test
in
xchg
inc
sub
hlt
jb
jns
rol
push
add
cmp
jmp
jns
inc
cmp
or
and
push
xchg
mov
mov
add
sub
jecxz
mov
std
mov
je
xchg
xlat
and
xchg
jecxz
lcall
shrb
add
add
das
gs
es
add
popa
inc
pop
xchg
push
adc
int
push
adc
jmp
lea
in
out
testb
out
mov
add
pop
cs
daa
ret
or
jbe
inc
jecxz
enter
jle
dec
jae
jmp
push
cmp
divb
adc
xchg
cmp
rorb
in
shl
xchg
sahf
lret
inc
cwtl
inc
pusha
rolb
insb
adc
cmp
dec
and
in
sbbb
std
rcl
dec
fcoms
push
jmp
ret
jns
xchg
ret
mov
mov
xchg
sub
ljmp
push
sbbb
or
xor
inc
inc
inc
les
jl
aas
cmpsl
mov
or
enter
push
ljmp
stos
shrl
fxtract
jge
push
push
sub
cltd
jne
dec
gs
out
xor
jg
xchg
das
cmpsb
dec
sub
mov
mov
lock
outsb
add
xor
inc
fldt
fmuls
mov
xorl
xchg
mov
jle
jge
ret
sub
xor
fdivr
outsb
test
cmp
inc
lret
push
sub
dec
mov
aad
dec
enter
or
in
cltd
adc
pop
sub
mov
pop
sbb
sbb
inc
imul
rcrl
lcall
inc
cmpsl
repz
xchg
add
int
daa
dec
in
jnp
stos
jle
idivb
add
fidivrl
bound
cmpsb
mov
mov
fldenv
ja
adc
sub
inc
push
mov
mov
sbb
cld
inc
xor
pop
or
inc
xchg
sub
mov
lea
sbb
mov
add
leave
popa
sub
mov
out
pop
jle
pushl
or
sbbl
lock
call
addl
enter
enter
mov
cli
ror
loopne
lock
cmp
or
sbb
push
jp
dec
pusha
pop
jo
cmpb
ljmp
lock
cmp
or
sbb
push
jp
dec
pusha
pop
jo
cmpb
ljmp
lock
cmp
or
sbb
inc
jp
dec
fs
je
test
mov
sar
dec
loopne
xor
add
mov
sbb
pop
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
stos
ljmp
test
in
lcall
push
pop
and
aaa
cmp
sbb
sbb
ljmp
cmpsl
stos
mov
xchg
ja
imul
cmp
or
sbb
lret
mov
mov
addr16
pop
and
ss
insb
imul
fs
cmpsb
cmpsb
xlat
mov
adc
push
orl
xchg
fcoml
cld
mov
es
ljmp
idivl
adc
jecxz
mov
mov
mov
dec
mov
out
sbb
das
out
je
push
scas
pop
daa
push
jnp
dec
test
push
hlt
xchg
mov
filds
mov
jb
and
push
mov
ficoml
jg
sbb
or
pop
and
cmpsl
xchg
daa
outsl
mov
jns
sub
cli
bound
jb
sub
dec
xor
add
lahf
push
jle
aas
push
movsl
mov
or
in
ljmp
cmpsl
stos
repz
xchg
push
jp
dec
dec
pop
inc
sub
cmp
or
xchg
ljmp
leave
in
ret
out
imul
push
sbb
arpl
sbb
sub
pop
jge
js
jg
xchg
addb
jmp
in
pop
or
sub
push
lods
jb
push
dec
xchg
stos
les
loop
mov
xchg
ja
inc
dec
push
pop
daa
sub
cmp
or
sbb
ljmp
cmpsl
stos
mov
xchg
ja
inc
dec
push
pop
daa
sub
cmp
or
sbb
ljmp
jmp
xchg
jae
jns
and
les
fmulp
mov
push
insb
das
push
ret
fldt
leave
in
fisttpll
std
iret
inc
outsb
outsl
mov
xor
test
mov
orb
mov
aas
add
gs
and
and
lock
jge
orb
out
push
xchg
and
sub
and
adc
cmpsb
orb
nop
and
sub
jecxz
shrb
lea
jmp
es
xorb
pop
lcall
adc
hlt
ljmp
sbb
jg
sub
cmp
sahf
mov
repnz
jge
int
xor
sub
jb
cmp
adc
add
in
and
dec
aas
xor
or
mov
push
inc
push
jo
adc
push
xor
pop
mov
out
sub
flds
fsubl
dec
push
or
mov
rcll
test
or
sbb
stc
enter
sub
sahf
shlb
xor
xor
das
mov
cmp
add
and
mov
and
test
imul
push
or
in
or
push
adc
bound
jns
adc
inc
mov
data16
inc
cmp
mov
inc
or
jmp
adc
or
call
arpl
mov
imul
xor
push
pop
cld
pusha
mov
divb
mov
dec
xor
sub
sbbb
mov
adc
sub
fsubrl
and
adc
push
add
lds
inc
scas
es
mov
fidivrs
adc
call
pop
icebp
aad
inc
divl
adc
inc
pop
and
mov
sarb
lret
mov
push
push
sbb
or
or
idiv
ret
movsl
ss
insl
inc
adc
mov
rorb
dec
test
imul
subb
daa
inc
dec
js
js
dec
cmp
and
add
lret
pushf
aad
pop
jne
cmp
dec
mov
cmc
mov
data16
arpl
mov
out
leave
icebp
lret
sbb
push
adc
push
icebp
sbb
fidivs
ds
loopnew
or
and
cwtl
jmp
add
and
outsl
repnz
push
aad
fs
scas
and
mov
cmpsb
mov
pushf
jle
mov
sbb
divb
into
mov
lds
sub
adc
cmp
inc
sub
jecxz
test
scas
lret
fsqrt
push
repz
xchg
loope
push
dec
loopne
inc
loope
cwtl
push
sbb
cwtl
jnp
xor
jmp
inc
insl
out
dec
popf
in
int
and
dec
loope
aad
mov
or
mov
popa
out
sbb
shr
or
add
jl
fwait
out
and
mov
mov
lock
rolb
pusha
xchg
in
icebp
shlb
out
cld
inc
inc
fmuls
into
pop
daa
xchg
cs
dec
sub
pcmpgtw
cmpsb
pop
jle
fwait
jno
inc
idiv
data16
pop
jb
dec
push
adcl
mov
es
mov
test
sub
mov
jg
cmpl
cmc
lret
add
push
iret
in
inc
cmc
ret
roll
testl
lods
xchg
or
out
leave
dec
and
fists
cmp
adc
jge
pop
cmpb
aam
lods
popf
jns
sbb
cmp
or
xor
sbb
lds
and
pop
loope
ljmp
clc
dec
les
mov
lcall
xor
sahf
sti
mov
ja
lds
je
lret
sub
rol
leave
jb
push
and
lcall
jnp
sub
bound
fbld
dec
sarl
mov
lock
loope
cmp
mov
loop
fsubrl
sarb
js
pop
stos
aad
ret
clc
mov
loopne
mov
hlt
mov
mov
frstor
push
mov
push
xchg
into
xchg
sbb
int3
insb
scas
pop
loop
test
xchg
push
mov
ret
sub
mov
jne
scas
inc
dec
push
push
mov
pop
call
inc
sub
jbe
xchg
pop
jne
mov
jp
arpl
sub
lea
fmull
or
addl
sub
test
push
imul
lods
nop
mov
pushf
aas
repz
jg
add
cmpsb
jne
lock
dec
mov
inc
push
sub
cmpsb
push
icebp
xlat
push
inc
pop
iret
testl
in
adc
adc
cmp
mov
add
mov
pop
inc
mov
sbb
rol
mov
mov
nop
jl
nop
dec
inc
lds
xchg
pop
lahf
and
in
jns
jno
xchg
sbb
xchg
pop
test
cli
mov
and
dec
lahf
in
adc
inc
sub
cmp
mov
das
aas
nop
orb
add
mov
out
int
inc
dec
aaa
rorl
xchg
sbb
adcb
into
mov
cmc
jbe
xchg
addr16
gs
mov
adc
out
adc
lret
xor
lock
pop
clc
into
cmp
jmp
pop
sti
xchg
jp
sub
jmp
out
sarl
sbb
out
jae
push
jns
lods
jne
jb
fisubrl
nop
adc
dec
sub
xchg
adc
xchg
cld
and
xchg
int
ljmp
stos
sbb
out
pusha
or
loop
cmpl
and
mov
push
in
sbb
jnp
mov
push
pop
fmuls
and
dec
cmp
es
pop
in
and
cmp
inc
pusha
push
cs
push
inc
cmpsb
push
jno
jg
in
xchg
stos
arpl
cmovne
sub
addr16
mov
adcl
mov
sbb
leave
out
stc
dec
mov
sti
mov
fadds
aam
dec
mov
mov
dec
cli
push
push
sub
mov
mov
fcoml
addr16
inc
stos
cld
jno
add
fld1
addr16
out
addl
jae
loopne
daa
jmp
int3
jbe
jns
ljmp
mov
jg
xor
negb
add
int3
test
pushf
into
sub
jmp
jecxz
test
xor
sbbb
xchg
inc
pop
xchg
mov
and
xchg
or
or
fst
jge
ja
out
icebp
xchg
js
stos
jae
push
jmp
fs
test
jb
cmp
xchg
stos
xor
jecxz
or
lahf
call
push
fldcw
inc
inc
sarb
dec
lods
pop
pop
fimull
es
adc
pop
and
lcall
cld
int
scas
cmc
loop
stc
xchg
test
rcr
xor
repnz
test
pop
xor
testl
neg
xchg
mov
jmp
loope
sbb
fiadds
xor
lea
js
cmp
les
dec
or
mov
gs
rcr
jle
push
rol
subb
xchg
jmp
mov
cltd
sub
cs
push
rcll
xor
mov
scas
jne
adc
mov
inc
sbb
daa
and
or
push
dec
sbb
arpl
mov
cmp
sub
adc
les
and
cmp
cmp
imul
daa
xor
xor
xchg
lret
pop
xchg
sbb
pushf
mov
dec
cmc
push
cmc
and
ror
pop
lret
xchg
inc
jns
jne
iret
in
jb
mov
daa
add
add
addr16
inc
cld
adc
sub
inc
cmovg
roll
das
gs
jnp
sub
bound
shll
pop
bound
pop
aaa
jecxz
test
xchg
pop
add
xchg
jno
outsb
enter
negb
jle
mov
scas
adc
jp
push
ljmp
xchg
fistps
lret
aaa
scas
into
pop
inc
xchg
test
shr
int3
push
leave
jge
add
bswap
push
fwait
cmp
test
jb
bound
aam
mov
scas
notb
mov
lret
mov
pusha
aas
xchg
cs
jge
lcall
test
jmp
sub
xchg
jl
test
xchg
xlat
and
push
rolb
mov
mov
mov
loop
int3
ficoms
add
jo
mov
xchg
mov
sahf
sub
dec
cmp
enter
and
mov
inc
xor
rcrb
jns
scas
into
and
jns
mov
mov
popf
cmpsl
mov
cwtl
iret
lahf
je
sub
gs
cltd
lret
stos
xor
sbb
adc
aas
sahf
mov
inc
sbb
call
mov
inc
cltd
loop
fs
mov
into
test
sbb
in
jle
mov
push
divps
jnp
std
shlb
mov
and
sbb
sub
push
insl
lret
mov
add
popa
mov
decb
cltd
fistpl
sub
mov
test
add
cmpsb
sub
mov
or
fs
mov
xor
mov
cmpsb
mov
jmp
test
test
inc
cltd
push
cs
lods
roll
lcall
jp
mov
jno
mov
mov
mov
int3
out
sti
adc
int3
or
sub
pop
data16
and
pop
pop
call
inc
dec
je
pusha
lret
fstpl
add
dec
jae
xor
les
scas
sub
lods
test
jno
jbe
adc
mov
xor
ljmp
je
repnz
fisubs
mov
pop
jns
dec
outsb
adc
call
pop
enter
sbb
scas
xor
xor
test
test
clc
cmp
sbb
sub
mov
stos
sub
fwait
lret
enter
mov
mov
jo
jbe
clc
mov
jge
jno
cmpsl
mov
inc
jge
pop
xchg
cmp
lods
adc
loopne
add
mov
dec
mov
loope
push
ds
ds
inc
jge
fildl
sti
inc
and
hlt
push
lds
fidivl
mov
aaa
mov
xchg
pop
les
push
push
iret
jle
and
inc
aad
std
repz
inc
aas
add
je
idiv
xchg
sub
and
inc
lods
mov
xor
fiadds
mov
pop
add
inc
jbe
int3
xor
xor
mov
jnp
sar
sbb
popf
arpl
movsb
add
push
mov
jae
fldl
es
cltd
int
or
cmp
jmp
aad
inc
and
sbb
lret
jne
pop
or
jns
mov
rorb
out
cwtl
loop
inc
in
add
stc
add
out
adc
loopne
pop
iret
push
lock
aad
sub
pop
test
cltd
scas
pop
inc
sub
fstpl
dec
int3
jmp
pop
rcrl
mov
divb
jnp
fnsave
xchg
loope
xchg
push
imul
mov
lcall
hlt
pushf
pusha
ss
mov
shr
int3
imul
jp
mov
adc
imul
jns
push
sbb
mov
fwait
add
ljmp
popf
mov
mov
jo
push
pusha
test
mov
or
xlat
sub
dec
mov
test
insb
jno
andb
test
call
and
addr16
dec
aad
and
rorl
mov
and
mov
sub
ret
push
mov
fdivrs
rol
xchg
lret
dec
adc
stos
jno
ljmp
fnstcw
repz
ds
push
das
jge
or
or
inc
sbb
sbb
dec
dec
push
fwait
aas
adc
or
sub
std
fstpt
xchg
rclb
add
sbb
cmp
add
xor
sub
divl
rcr
push
xchg
lods
aas
inc
aam
mov
jle
pop
and
pushl
pop
lret
imulb
jle
imulb
sarb
jbe
mov
nop
jge
add
das
cwtl
sbb
add
addr16
rcll
pop
cli
xchg
fistpl
aas
or
cmp
std
stc
cli
mov
test
mov
xor
mov
popa
dec
jbe
ret
cltd
add
mov
sbb
sbb
add
xlat
stc
jno
in
movsl
jmp
loope
in
and
ds
mov
inc
arpl
leave
mov
lret
stos
loope
xchg
rolb
out
lcall
cmp
clc
sarb
cli
out
cmp
popa
and
cmpsb
nop
subb
pop
sbb
daa
lret
sahf
test
in
inc
dec
cmp
hlt
lods
xchg
sbb
fcomi
pop
sbb
xor
xchg
loop
or
aam
jno
repz
sbb
cmp
stos
in
adcl
fidivrs
mov
push
out
mov
push
inc
xchg
jnp
outsb
or
or
push
orb
ret
cmp
decb
push
dec
pop
push
xor
int3
scas
mov
cmp
testl
shrb
cmpsl
jmp
cmp
jmp
in
or
movsl
sbb
mov
andb
subb
testb
push
and
arpl
mov
push
cmp
jne
cmpsb
or
sbb
xchg
xor
mov
jg
or
or
aas
push
lcall
push
xor
push
dec
stc
inc
inc
jnp
loopne
push
scas
mov
test
xor
jae
mov
mov
mov
pop
seto
cmp
push
xchg
hlt
push
xchg
jne
inc
push
mov
adc
inc
xchg
mov
mov
push
std
add
lcall
add
repz
fptan
adc
shlb
xor
add
sbb
rdtsc
pop
test
imul
mov
adc
jp
call
or
xchg
mov
jns
jle
test
push
dec
cmpb
nop
push
popf
fimuls
and
push
jle
pop
ljmp
addr16
cmp
push
loopne
seta
jae
mov
xchg
stos
cwtl
fsub
xchg
insb
xchg
in
jae
push
jae
mov
arpl
inc
dec
movsl
rorb
sbb
inc
inc
inc
fs
mov
push
and
mov
in
daa
inc
cmc
int
and
lahf
rorl
jno
cmp
jge
adc
daa
loope
jge
sbb
sub
pop
push
test
fsubrp
out
pop
adc
xor
mov
or
jno
sbb
sti
or
mov
jne
out
notl
mov
ficomps
mov
mov
mov
cmp
sbbl
dec
loope
sbb
add
scas
imul
fidivl
je
xchg
xchg
sbb
sub
cmp
push
shlb
ret
xor
pop
sbb
xor
sbb
ja
jge
bound
bound
sbb
xchg
jmp
push
and
mov
in
xor
cmp
aas
lods
or
popa
iret
and
cmp
sub
ds
and
cmp
sbb
lds
xor
popf
test
inc
lcall
push
mov
xchg
mov
push
push
inc
js
xchg
mov
sbb
ja
movsl
sbb
lods
loopne
push
into
scas
dec
xor
aaa
fbstp
test
sbb
subb
in
ja,pt
lea
push
or
mov
ret
adc
and
bound
xchg
sub
sbb
add
out
fildl
icebp
dec
hlt
mov
push
popa
ret
push
dec
xchg
dec
mov
insb
mov
add
sbb
iret
clc
iret
pop
add
pop
xchg
hlt
sbb
leave
lret
shlb
sbb
std
into
mov
aad
push
loopne
mov
pushf
cmpb
xor
mov
lods
mov
data16
cld
std
cli
xchg
push
jle
clc
leave
andl
mull
pop
test
je
es
or
lods
dec
inc
mov
cmp
stos
cltd
dec
pop
imul
aaa
and
pop
xchg
or
xor
hlt
test
mov
popa
pushf
push
lods
push
cltd
xchg
sti
cmp
nop
fdivp
push
dec
in
sahf
xor
lret
xchg
mov
adc
and
subps
clc
push
rclb
shrb
popf
ljmp
lret
inc
cs
dec
bound
jmp
sbb
ret
xor
and
stos
pop
loop
xor
aas
lahf
sbb
in
pop
cmp
push
or
cmc
test
add
negl
in
mov
push
inc
subl
xor
hlt
adc
mov
scas
adc
sarb
rcll
das
clc
jecxz
mov
decb
call
add
inc
and
pop
jae
mov
inc
dec
repnz
loope
subl
xor
sub
sub
inc
cmp
mov
hlt
mov
std
xchg
push
mov
or
push
rcrb
in
adc
fisttps
fwait
xchg
or
insb
cld
cld
add
shl
xchg
std
pop
xor
mov
or
adc
add
jecxz
push
cmp
jns
push
push
cs
loope
jae
pop
mov
sbbl
xor
adc
adc
lret
gs
loopne
cmp
cltd
imul
dec
mov
testl
cmp
adc
jb
add
pop
xor
or
add
outsl
scas
fisubrs
inc
dec
rorb
addl
mov
imul
adc
in
das
std
hlt
inc
sti
jle
pop
xchg
outsb
pop
pop
pop
jne
jae
xchg
mov
ss
push
pop
test
mov
inc
mov
inc
or
xor
inc
cmpsl
fdiv
iret
push
push
mov
xor
arpl
shll
popw
ljmp
mov
jbe
fstpt
sbb
lods
mov
and
js
test
lods
cmp
lret
addr16
add
mul
jns
in
dec
bound
jne
les
lea
push
adc
test
mov
inc
int
imul
nop
addr16
push
jnp
adcl
std
push
push
add
scas
ss
jne
inc
fisubrl
dec
adc
popa
cmp
pushf
data16
mov
int
out
dec
jne
jmp
sahf
xchg
fwait
dec
push
xor
push
cmp
mov
outsb
inc
loopne
sub
pop
dec
jbe
ljmp
adc
cmpsl
mov
inc
leave
jns
cmc
mov
jg
stos
jl
mov
daa
cltd
insl
mov
xchg
sahf
ja
mov
mov
nop
jmp
push
mov
ret
fstps
orl
ret
xor
scas
xchg
lods
adc
gs
xchg
mov
and
push
pop
xchg
cwtl
push
stos
mov
outsl
test
xchg
cmpsl
negb
sbb
rcr
je
dec
jge
push
xor
outsl
fsubp
sbb
mov
adc
imul
stc
loopne
sub
xchg
out
leave
push
cld
cltd
movsb
jg
add
push
jge
decb
shlb
out
mov
shll
mov
mov
jo
ja
mov
les
jns
cmpsb
xchg
lea
inc
mov
mov
add
add
ss
or
add
ss
out
mov
cmc
mov
or
cli
insl
test
mov
les
mov
mov
call
into
popa
ljmp
aas
xchg
stos
cs
mov
mov
aaa
mov
xor
mov
insl
data16
sub
lea
or
fs
pushf
jne
fmul
cld
adc
test
lods
mov
jne
or
and
in
mov
test
shr
pop
idivb
loop
jae
adc
adc
cs
xorb
in
adc
push
inc
adc
std
movsb
jge
inc
out
jmp
and
sub
inc
dec
rcll
into
popf
mov
push
mov
dec
push
ss
aad
fs
sbb
lea
lea
les
je
aas
in
aad
lea
ds
in
mov
pop
mov
or
jl
or
mov
pop
sbb
rol
cvtpi2ps
mov
mov
pop
pop
mov
jo
mov
out
and
nop
aaa
call
mov
lcall
mov
addr16
jp
dec
push
pop
daa
sub
cmp
or
sbb
ljmp
cmpsl
stos
mov
xchg
ja
inc
dec
push
pop
daa
sub
cmp
or
sbb
ljmp
cmpsb
stos
mov
xchg
ja
dec
dec
push
pop
daa
sub
cmp
or
sbb
ljmp
cmpsl
stos
cmpsl
mov
addr16
shr
dec
push
sub
clc
cmc
call
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
cld
jbe
and
adc
arpl
ss
data16
dec
inc
xchg
push
xorb
xchg
inc
out
mulb
adc
sub
repnz
fcmovbe
ret
ja
inc
xchg
push
cmpb
mov
add
push
sbb
xor
repnz
mov
loope
les
ss
lret
daa
out
cmp
das
ret
fnstsw
sbb
adc
scas
dec
insl
pop
leave
cmpsb
jno
mov
and
or
out
or
sbb
stos
sbb
iret
sub
mov
iret
or
fdivp
fcmovnbe
loop
pop
and
leave
repnz
shr
cmp
inc
xor
inc
xchg
inc
jbe
cmpsb
bound
sbb
adc
rcl
adc
add
sub
and
incb
dec
lahf
fildll
ss
rol
cs
mov
xor
xor
fdivs
lret
shrl
leave
daa
sbb
es
std
add
mov
pop
test
fisubl
cmpsb
jle
call
xchg
addl
adc
nop
aas
repnz
push
rorb
jle
outsb
dec
inc
mov
aad
rorl
adcb
inc
push
mov
xchg
je
js
or
adc
and
xor
cmpsb
xor
and
and
stos
jnp
xor
ss
inc
andb
std
add
icebp
iret
add
sahf
jle
and
adc
add
repnz
rclb
ret
jbe
inc
xchg
push
andb
xchg
inc
out
mulb
adc
add
repnz
rclb
ret
jbe
inc
xchg
push
andb
lods
leave
push
ljmp
inc
jne
ljmp
sbb
les
xor
stc
clc
ds
cld
and
stos
xchg
loop
mov
rorb
imul
jae
mov
sarl
rorl
out
xchg
mov
xchg
aaa
xchg
adc
and
lahf
mov
cmpsl
adc
cmp
shlb
cmpsl
mov
addr16
int
mov
jmp
cli
jecxz
stos
inc
jne
inc
test
in
inc
movsb
add
in
inc
dec
jae
insl
inc
in
or
fsts
jecxz
repz
aad
clc
mov
lahf
in
dec
xchg
mov
cwtl
cli
repnz
cmp
jno
sbb
cmp
inc
push
mov
sbb
ss
outsl
dec
repz
fimull
cmp
leave
enter
js
adc
jno,pn
adcl
out
xor
pop
xor
mov
hlt
clc
ss
cmc
scas
and
cmp
lcall
push
popf
sub
mov
adc
push
ret
lret
fstpl
ret
rolb
arpl
push
xchg
bound
xlat
js
push
subb
xchg
mov
dec
fstps
push
popf
jmp
xchg
jmp
xchg
mov
xor
xor
insl
adc
clc
dec
jae
mov
cmc
add
sub
pop
mov
adc
aaa
cmc
push
lds
inc
idivb
cli
daa
xchg
out
aam
dec
imul
or
cmpb
rcrb
sbb
pop
push
xor
outsb
add
std
inc
lahf
stos
fisubs
subb
mov
add
testb
pushf
int
adc
outsb
js
stos
jae
push
pusha
lock
aam
mov
pop
shrl
pop
pushf
fdivrs
mov
popa
mov
imul
inc
leave
in
mov
xor
mov
mov
loope
jmp
out
jb
xchg
jecxz
sbb
inc
test
stc
adc
cmp
cmp
sahf
nop
push
cli
js
sub
mov
lods
out
jnp
or
push
mul
popf
std
enter
mov
fidivrs
cld
pop
gs
jecxz
imul
repz
pop
shrw
outsl
dec
fistps
aas
push
std
dec
adc
mov
dec
test
sub
sub
cmp
cld
outsl
scas
push
adc
sbb
cmpsl
mov
into
cmp
mov
pop
andl
jo
inc
imul
mov
inc
cmp
adc
adc
push
stos
mov
ret
inc
cmp
in
or
cmpsl
enter
cli
push
or
leave
sub
andl
mov
adc
call
clc
sbb
aas
cmpsl
stc
jnp
adc
or
js
mov
xchg
jg
insb
and
or
leave
data16
add
iret
xchg
clc
ds
data16
in
idivb
cmp
popf
sbb
imul
mov
sub
adc
fstl
fadd
and
mov
add
cmp
xor
jle
dec
xor
std
xchg
inc
je
clc
xchg
pop
pusha
pop
add
add
jne
lret
test
repz
loopne
ret
jl
xchg
ljmp
xlat
mov
jnp
movsb
std
mov
xchg
xchg
pop
xchg
imul
out
pop
cmp
lods
repnz
jns
lods
es
jle
adc
pop
mov
fisttps
mov
mov
loop
dec
out
test
and
xchg
cmp
stc
and
scas
enter
cmp
int3
fs
lret
shrl
movl
clc
xchg
imul
rdtsc
pop
lds
dec
popf
xlat
outsb
stc
or
pop
stos
in
lret
mov
lcall
add
ljmp
es
daa
jmp
sbb
mov
ret
inc
sbb
rcrl
add
daa
pop
int
cmp
mov
xchg
sbb
stos
std
inc
mov
adc
repnz
pop
es
movups
pusha
jae
insl
push
xchg
lea
ljmp
addr16
xor
cmp
push
xor
adc
adc
sub
les
pop
or
xchg
push
pop
dec
lea
lret
adc
xchg
sahf
cli
stos
shrl
stos
cmp
mov
xchg
movl
test
test
cmp
adc
xchg
cwtl
pop
insl
pop
fcompl
mov
lods
test
and
jg
loopne
icebp
xchg
sahf
push
add
and
popa
loope
shlb
jmp
inc
xchg
aad
cmp
sub
xchg
outsl
adc
cmc
push
push
je
movsl
xchg
inc
inc
getsec
mov
ss
sub
lds
sub
imull
out
inc
lret
jne
popa
add
inc
in
nop
add
icebp
pop
ret
jb
push
sti
sarl
mul
jo
push
cmp
xlat
scas
push
or
pop
fnsave
and
mov
mov
lcall
mov
out
xor
ficompl
adc
fs
sbb
loopne
out
loopne
dec
fidivs
xchg
jae
mov
sbb
jne
sahf
push
cmpsl
xor
cli
mov
or
imul
movsl
jp
mov
call
rolb
or
push
das
sbb
xor
dec
xor
adc
push
mov
push
adc
in
dec
enter
arpl
jo,pt
pop
mov
inc
out
add
es
fidivl
mov
push
lret
mov
in
jns,pt
and
aaa
add
dec
push
cmp
add
jg
or
adc
in
push
in
sbb
scas
pop
in
adcl
sbb
or
das
jb
into
jae
in
out
stos
cmp
sahf
outsl
jle
pop
jbe
std
jmp
push
mov
jp
in
and
nop
imul
jbe
jge
jns
fwait
and
imul
dec
adcb
dec
xchg
fists
mov
in
andl
or
ja
or
pushf
jnp
jnp
jecxz
cld
inc
jg
sbb
mov
cmc
mov
pushf
xchg
neg
test
in
lock
push
lea
mov
fstpt
pop
cwtl
dec
out
aas
pop
test
pop
sbb
in
loope
arpl
ret
pop
dec
jmp
inc
jo
mov
sbb
sbb
push
xchg
imul
mov
xchg
inc
shrb
mov
mov
bound
add
jl
mov
push
dec
fcomps
out
xchg
dec
sub
jge
inc
sbb
movsl
fildll
testl
inc
mov
dec
push
daa
sub
fldenv
addr16
lahf
dec
aam
cmp
cli
jmp
dec
jecxz
clc
jge
std
bound
jb
mov
loopne
sub
subl
pop
jge
mov
test
pop
fsubrl
push
daa
jns
mov
mov
push
adc
outsl
and
cs
hlt
push
addr16
in
movsb
les
addl
mov
or
cmp
cltd
out
icebp
aas
push
mov
mov
stos
mov
pop
push
dec
jo
inc
cltd
test
adc
scas
push
mov
in
inc
mov
popa
cli
dec
fists
pop
nop
addb
repnz
push
pop
xchg
mov
es
mov
aad
cmpsb
outsl
cmp
test
daa
out
int
pop
sub
mov
mov
rorb
jbe
mov
in
adc
jecxz
in
int
ds
push
pushl
or
lods
dec
rolb
sub
rcrb
nop
adcb
jno
cmp
xchg
sbbb
les
xor
es
into
out
outsl
sbb
fcoms
lahf
dec
test
cmc
lds
clc
out
xchg
cwtl
andl
mov
jl
pop
cmpsl
ds
cmp
stos
mov
push
xor
es
add
cmc
iret
stos
leave
inc
mov
xchg
dec
idivb
xor
adc
outsl
aam
adcl
xchg
mov
inc
ret
adc
or
ret
out
imul
insb
cmp
ficoml
cltd
stos
mov
test
fnstcw
cli
adc
cltd
ja
cmp
negb
mov
add
xor
in
movsl
test
mov
add
ja
xor
sbb
or
out
xchg
xor
xchg
xchg
in
sub
sbb
imul
mov
aaa
pusha
jp
pop
or
push
fs
scas
ljmp
push
mov
mov
xor
jg
out
in
lods
je
fisubrl
repnz
fimuls
mov
fistps
sub
popf
cld
inc
sub
outsb
dec
fwait
nop
push
inc
fstp
mov
int
xor
test
cmp
pop
dec
pop
std
ss
dec
jl
sub
lock
in
sbb
dec
pop
popw
pop
mov
sub
mov
mov
je
mov
jns
lods
dec
jns
enter
cmpl
mov
cmp
sub
sbb
dec
cmpsl
pop
loop
sub
pop
push
or
xchg
aam
or
cmovg
test
shll
mov
xor
lea
xchg
in
outsl
adc
fdivl
lret
sbb
jo
lods
je
pop
pop
cwtl
sbb
cmp
ds
das
popa
dec
out
adc
fadd
jo
pop
and
jp
insb
nop
leave
sti
inc
mov
loop
push
stos
dec
repnz
arpl
mov
in
lods
in
sub
mov
sub
xchg
insb
mov
mov
bound
mov
push
xchg
lret
jge
or
into
pushf
add
mov
xor
insl
or
rclb
popa
inc
sbb
aam
ret
mov
jl
gs
aas
std
sub
push
push
mov
into
popf
add
cmp
jmp
orl
outsl
pusha
pop
add
fisubl
mov
cld
out
rcl
xchg
jnp
shll
jl
sub
insb
pop
dec
rcll
jecxz
push
imul
popf
hlt
sub
jp
mov
loopne
call
movsl
mov
sub
jbe
bound
sub
xor
dec
add
xchg
movsl
sub
das
lret
pusha
push
mov
jnp
jns
sahf
sbb
pushl
dec
xchg
add
gs
and
cs
jbe
rorb
mov
je
mov
subl
xor
and
sbb
xchg
jne
cmp
stos
pop
cmp
or
push
dec
sbbb
and
lret
jbe
jecxz
pusha
push
das
popa
aas
in
push
xor
add
iret
jne
stos
popa
sbb
aad
ss
ficoms
out
pop
dec
outsl
and
lret
std
cmpsl
loopne
out
in
cmp
push
xor
popa
cmp
and
sub
jg
cmpsl
xor
jns
pop
cmp
jae
out
or
pop
pop
jp
in
addl
push
mov
jno
inc
mov
testb
xor
dec
lahf
jnp
cmpsl
sub
pop
popa
jno
mov
dec
adc
test
fs
sbb
iret
cmp
xchg
inc
fs
mov
and
jl
cmp
dec
mov
iret
mov
push
les
ret
adc
push
pop
stos
les
lret
xchg
jns
in
stc
inc
loopne
stc
enter
ljmp
clc
pop
dec
cld
out
gs
xor
stos
add
adc
scas
or
in
orb
and
mov
jne
add
or
pop
out
aad
mov
jl
out
and
scas
aam
repnz
or
imul
fwait
mov
loopne
jnp
xor
mov
iret
adc
adc
out
xchg
ret
pop
loopne
mov
add
mov
bound
mov
or
push
in
push
adc
jnp
aas
cmp
scas
hlt
test
das
fmull
lods
sub
jbe
cmpsb
iret
xchg
fldcw
inc
ret
inc
sub
dec
and
push
pop
push
push
mov
out
test
add
push
mov
movsb
lods
adc
xor
cmp
stos
jmp
xor
sbb
mov
cmp
or
sbb
mov
fwait
dec
movsl
dec
bound
push
fldt
int3
fcmovnbe
or
sub
add
adc
test
add
cmpsb
lods
lods
push
icebp
insl
sub
shrb
loopne
nop
jb
int
pop
out
mov
xchg
jno
mov
divl
pop
js
rclb
movsl
add
lret
and
mov
inc
add
movsl
rcll
adc
adc
lahf
ret
stc
pop
data16
sti
cmp
cmpsl
cmp
add
ret
push
mov
push
setbe
in
in
cmc
imul
call
xchg
push
or
fiadds
rol
sbb
mov
das
mov
out
test
dec
sub
insb
push
pop
ret
adc
jle
out
arpl
rclb
add
xchg
movsl
inc
movsl
pop
cmc
mov
push
jb
fxch
addr16
xor
shll
movsl
dec
ret
mov
popa
pop
push
dec
cmc
pushf
pop
sysexit
jne
dec
mov
stos
lret
aad
pop
adc
cmpsb
lret
cmpsl
subl
pop
xlat
or
pushf
shlb
cmc
dec
inc
sub
outsl
xor
pop
cmp
fisubrs
pop
pop
arpl
adc
inc
mov
sbb
mov
mov
sbb
fstps
fwait
push
test
pusha
repnz
push
lahf
or
dec
into
add
inc
lret
mov
call
sub
sub
sbb
mov
pop
sub
lock
jge
stos
and
std
xor
es
inc
jb
rcrb
mov
add
sbb
daa
mov
jo
add
jl
push
outsb
fisubrs
faddl
adc
in
std
jns
dec
mov
jno
cld
popa
mov
cmpsl
adc
and
mov
fwait
out
test
cmpsl
in
add
int3
cmc
ja
pmaxsw
fcomps
push
cmpsb
push
xchg
dec
in
rcll
xor
push
fwait
jle
out
mov
test
call
hlt
lea
mov
cwtl
idivl
scas
cmc
insb
mov
sarl
sub
jle
std
mov
popa
jp
lods
jno
lock
dec
dec
aaa
daa
fistpl
aas
mov
sub
call
xchg
pusha
stos
call
mov
push
inc
dec
arpl
pop
cs
jno
test
lret
dec
insb
xchg
fwait
jle
dec
cmp
sbb
das
fdivrl
pusha
enter
add
dec
mov
or
stc
std
aad
mov
pop
scas
test
out
cmp
cmp
mov
dec
inc
mov
mov
icebp
pop
in
aaa
push
mov
or
sti
xchg
inc
in
incl
jecxz
pop
push
lret
shlb
mov
movsl
and
add
jae
cs
cmp
cmc
scas
cltd
popf
lods
leave
dec
and
mov
add
fidivrl
pusha
jo
xor
outsb
inc
jp
or
cli
cmp
xor
cmc
and
call
mov
in
enter
ret
cmp
cmp
outsb
aad
xchg
and
adc
cli
adc
popf
or
sub
sbb
jp
xorps
rorl
sub
and
int
scas
adc
mov
ss
bnd
popf
aas
mov
cmp
push
jne
dec
xorl
xlat
xchg
scas
cmp
jno
xchg
or
out
mov
and
and
js
or
mov
sbb
lret
cmc
mov
xor
pop
adc
jo
leave
dec
mov
xor
stos
ljmp
mov
cmp
mov
and
xlat
int3
scas
xlat
leave
out
test
je
js
sbb
push
xchg
ret
or
mov
jl
or
sahf
not
mov
in
cmp
cmp
in
inc
loop
outsl
ds
pop
and
sbb
push
popa
cmp
sbb
dec
push
testw
stos
sbb
std
and
adc
ret
add
push
lahf
iret
les
sub
dec
nop
neg
cs
jle
movsb
and
into
mov
push
mov
test
and
lahf
cmp
in
andl
xor
lea
test
or
loopne
ret
jns
push
sbb
in
jo
and
adc
stos
pop
mov
bound
add
xchg
stos
mov
add
cmpsl
fwait
add
stc
daa
adc
ds
into
add
xor
jae
imul
ret
jg
out
jnp
test
sub
repz
clc
das
pop
xchg
inc
pusha
movsb
mov
push
xchg
ja
or
repz
inc
adcl
add
inc
ret
adc
test
sti
mov
jmp
mov
pop
add
inc
outsb
cmp
pushf
pop
push
sub
sbb
xchg
cmc
push
ret
sahf
insb
mov
outsl
push
stos
rcl
addr16
ljmp
call
xchg
dec
mov
notl
push
mov
lea
insb
adc
outsl
arpl
xchg
xchg
mov
dec
dec
lds
xchg
lods
jne
xor
popf
rcl
ret
loop
pop
sbb
test
and
iret
jmp
mov
faddl
arpl
mov
mov
xchg
pop
pushf
ror
push
inc
movsl
addb
test
divl
rcr
jnp
lahf
and
mov
outsl
cmp
js
ss
popf
cmpsl
push
push
cmp
pop
lods
pop
pop
mov
xor
lods
imul
mov
xlat
in
jne
add
callw
mov
cmpsl
cmp
das
fcoml
mov
jp
add
or
adc
das
cmp
iret
sbb
pop
fwait
daa
xor
mov
jg
test
mov
cmp
xlat
lret
xchg
fdivr
add
mov
into
fists
inc
mov
pminub
inc
loope
cmp
dec
inc
pop
movsl
lea
sbb
inc
js
sub
outsb
adc
jae
add
sub
std
ds
jg
or
push
lret
mov
pop
in
pop
add
lods
test
inc
out
jle
ret
inc
add
ljmp
jg
int
mov
cmp
arpl
lcall
add
inc
out
es
cmc
repz
mov
leave
sub
in
push
lret
push
pop
sub
orl
xchg
sub
push
gs
jg
pop
ds
mov
scas
iret
jg
adc
es
lods
repz
fisubl
and
pop
mov
cltd
cmp
add
push
imul
insl
cmp
pop
mov
sbb
sub
repz
lcall
add
fistpl
jge
ss
push
cmc
sub
add
jmp
std
cs
mov
adc
push
mov
mov
sarl
pop
insb
mov
leave
push
or
pop
shl
pushf
xor
out
int3
cs
punpcklbw
push
mov
rol
inc
je
rcll
test
mov
enter
adcl
in
loop
or
int3
leave
cmp
ret
stos
mov
pop
psubusb
inc
lahf
and
sub
mov
sub
jo
fistpl
sti
cmp
mov
add
inc
popf
jmp
dec
jle
das
out
nop
call
popa
lock
and
gs
xor
stos
int
in
xchg
loop
int3
test
xor
pop
rorl
jb
rolb
ds
addr16
xor
or
sub
add
xchg
xchg
xlat
lret
xor
rsqrtps
sub
jbe
cmp
adc
loope
xchg
xchg
lcall
mov
sub
jbe
mov
into
xor
hlt
fisttpl
push
je
cmp
or
pop
sub
sbb
das
loopne
sti
testb
jg
push
adc
or
int3
imul
icebp
jb
mov
jl
aaa
std
xchg
sub
jecxz
mov
xor
sti
mov
xor
xchg
push
xor
or
or
dec
and
push
fimuls
and
xchg
leave
lea
inc
imul
ret
loope
mov
dec
imul
in
into
fs
aam
push
jle
cmp
fwait
subb
adc
pop
jne
or
out
and
jmp
int
sbb
enter
stos
jo,pn
je
test
js
gs
aas
aas
stos
inc
add
and
xchg
enter
cs
imul
hlt
out
shlb
xor
int
mov
stos
movsb
loopne
sub
in
jecxz
pop
push
mov
fisubs
mov
hlt
or
dec
push
hlt
push
pop
xor
or
push
sti
inc
es
push
jb
repnz
or
jae
pop
inc
pop
into
aaa
popa
loop
enter
ficomps
cmp
inc
out
mulb
adc
add
repnz
rclb
ret
jbe
inc
xchg
push
andb
xchg
inc
out
mulb
adc
add
repnz
rclb
ret
jbe
inc
xchg
push
andb
xchg
inc
out
testb
add
repz
rclb
lret
data16
mov
xchg
xchg
addb
xor
and
push
ret
leave
dec
lods
rclb
mov
lret
mov
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
