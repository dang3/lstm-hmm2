pusha
call
pop
add
popa
jmp
loop
xor
cmp
dec
loope
hlt
sbb
sub
fidivrs
js
mov
and
inc
push
nop
mov
jmp
lret
test
jmp
cmpsw
push
std
repnz
sar
lahf
in
mov
lock
mov
sub
xor
imul
stos
or
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
push
pop
push
jmp
adc
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
jmp
jmp
or
push
clc
shll
aaa
movsb
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
movsl
jp
jmp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
cmp
jle
sub
mov
sbb
mov
add
mov
xor
jmp
loop
xor
xor
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
jmp
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
xor
lock
and
movb
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
aad
es
mov
cmpb
jnp
ret
jne
ret
jmp
sub
scas
dec
jmp
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aad
aam
jb
inc
jmp
jns
pop
insb
xor
xchg
pop
add
jmp
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
notb
in
sub
push
push
xor
mov
mov
mov
and
push
jmp
aaa
movsb
or
test
jmp
or
fucomi
or
das
cmp
sbb
inc
pop
inc
and
or
xor
xor
and
and
add
lea
push
jmp
insb
xor
sbb
jmp
mov
pop
add
and
les
popf
clc
incl
inc
cld
ror
or
dec
jne
mov
mov
pop
pop
xor
leave
ret
push
mov
sub
push
push
jmp
iret
pop
gs
dec
loope
and
xor
mov
mov
mov
add
and
inc
or
sub
and
add
and
push
jmp
push
mov
and
inc
push
nop
sub
jmp
mov
les
add
add
xor
add
and
and
sub
sub
xor
xor
ror
push
jmp
lahf
in
sub
jmp
mov
mov
add
add
dec
cld
dec
jne
mov
mov
mov
jmp
push
xchg
test
and
jmp
xor
imul
stos
or
jmp
or
add
xchg
jmp
movb
fstps
jmp
dec
xchg
stos
fwait
cmp
jbe
in
les
add
add
leave
ret
push
mov
sub
push
push
jmp
repz
and
xor
mov
mov
mov
add
ror
add
dec
jne
mov
mov
mov
jmp
mov
les
add
mov
jmp
xchg
popf
or
jmp
adc
loopne
pop
aas
or
les
add
add
leave
ret
push
mov
sub
push
jmp
adc
or
push
jmp
push
dec
dec
outsl
jl
pop
mov
add
xor
mov
mov
mov
sub
add
add
sub
dec
jne
mov
mov
pop
mov
jmp
and
jmp
adc
mov
cmpb
or
jne
jnp
icebp
add
sub
leave
ret
call
xor
dec
inc
imul
mov
inc
xchg
and
jo
in
xchg
cmp
test
mov
cmp
inc
bnd
sbb
in
js
sub
push
sbb
lea
cli
xchg
or
jo
loop
arpl
data16
sbb
or
fisttpl
pop
dec
push
mov
jno
dec
inc
push
outsb
test
jnp
xchg
insb
repnz
es
xchg
loope
subl
add
push
lods
fwait
loope
sbb
aaa
aad
testl
je
dec
icebp
in
jl
fwait
in
pop
mov
mov
shrb
mov
loope
xchg
jo
push
mov
lcall
cmc
jecxz
cmp
mov
mov
dec
fucomp
pop
cmp
or
rorl
mov
jle
out
jp
cmp
ret
xchg
add
jp
jnp
sub
sarb
iret
pop
insb
push
aas
arpl
or
sti
lahf
sub
dec
push
out
add
out
mov
rcll
jmp
sub
adc
cmpb
mov
add
xchg
fcoml
and
aaa
mov
pop
mov
cli
or
jge
pusha
jmp
mov
outsb
test
movsb
cwtl
daa
inc
xchg
push
mov
mov
inc
int3
in
mov
mov
pop
or
pusha
loope
rorl
into
lock
loopne
ret
add
sti
and
xchg
mov
lahf
ds
xchg
dec
stos
dec
lock
out
mov
sahf
ss
mov
ja
add
pop
jb
push
xor
push
nop
cld
loopne
lock
mov
jge
bound
dec
add
test
inc
push
lea
lds
pop
movsl
pop
pushf
sahf
xor
mov
icebp
push
jne
jbe
inc
xchg
test
fwait
xor
or
ja
fdivrs
leave
mov
mov
mov
repnz
imul
shll
mov
pusha
xchg
fistpll
aad
imul
jo
push
fnstsw
fs
sub
divl
jp
fistl
sbb
mov
and
add
daa
lahf
mov
xor
push
sub
or
inc
out
idivl
or
adc
leave
push
mov
mov
xor
inc
pop
insb
mov
out
jecxz
adc
popf
cli
xor
or
cltd
mov
sub
jb
push
and
aad
inc
jg,pn
jbe
pop
rcrb
mov
addr16
dec
jecxz
stc
cmp
fbld
mov
ljmp
mov
xchg
hlt
cmp
jle
test
sub
cmp
fisttpl
push
pop
inc
jae
sub
rolb
aad
xor
pushf
loope
ror
mov
aaa
xchg
add
sqrtps
xchg
fisubrs
pop
ret
jmp
int3
mov
and
ljmp
and
lcall
push
fildll
xor
scas
sti
dec
and
xorl
scas
sbb
out
sbb
push
testl
inc
fidivl
test
xor
call
sub
sbb
lahf
dec
add
dec
push
out
sahf
je
xchg
fisttpll
sub
mov
or
jmp
mov
sbb
out
cmp
inc
cmpsl
cmp
fisttpl
or
stos
scas
nop
cmpsb
je
lds
mov
adc
sub
push
dec
roll
fs
or
lret
fstpl
mov
adc
and
popf
daa
xor
cmp
pop
adc
js
fstpl
mov
cmp
out
push
lock
adc
pop
adc
mov
repnz
cmp
and
sbb
adc
mov
mov
dec
out
mov
pop
adc
add
shlb
outsl
stos
mov
jmp
sub
pop
inc
inc
xchg
test
xorl
mov
mov
push
xor
mov
push
mov
inc
xchg
mov
push
in
jle
sub
push
rcrb
mov
or
inc
stos
cmp
xchg
add
sub
ja
pushf
aaa
sbb
insb
sub
bswap
mov
pop
aad
mov
inc
pushf
mov
sub
int
icebp
mov
jmp
pusha
jnp
mov
jecxz
lret
dec
lret
mov
lods
xchg
out
mov
cmpsl
lods
xor
jl
dec
mov
stc
jno
push
movsl
or
push
test
inc
pop
sbb
addr16
int3
sub
fistpl
loop
add
push
inc
lret
lcall
divl
fiaddl
or
mov
inc
sti
fcmovbe
pushl
fnclex
cmpsb
stos
mov
out
pop
cltd
dec
lret
daa
xchg
sub
inc
rcl
int
and
pop
shl
sbb
mov
fwait
jecxz
mov
mov
jmp
and
daa
mov
repz
or
and
mov
shlb
push
rclb
loop
ror
call
mov
mov
mov
lcall
or
ljmp
mov
mov
xchg
mov
js
outsb
mov
xor
lret
js
fdivrl
lret
test
in
add
dec
mov
xor
ja
arpl
ficompl
and
mov
int3
jae
addl
or
mov
jae
mov
je
sub
dec
jo
in
int3
push
push
inc
or
push
dec
add
mov
jmp
pop
addr16
shr
sbb
enter
jae
inc
shll
cmp
jle
neg
mov
dec
lds
mov
das
and
shlb
pushf
mov
xor
mov
cmc
pop
cmpsl
push
ds
sti
xchg
icebp
add
rcrl
pop
int
es
outsl
sub
sbb
out
sbb
cltd
dec
sbb
sbb
ljmp
scas
sbb
in
fisubrs
mov
cmpsb
inc
dec
jno
mov
out
out
sbb
mov
inc
sti
add
cli
loopew
cmp
add
fdivrs
leave
ret
mulb
dec
adc
adc
fucomip
leave
stos
cmc
or
sub
sub
leave
ret
scas
xor
and
push
mov
mov
push
jno
dec
jmp
pop
imul
lock
cmp
lahf
xchg
test
jae
fs
and
addb
sub
jle
mov
cmp
mov
push
test
sub
push
or
pop
cmp
testl
insb
push
xchg
repz
add
imul
fsubl
push
push
mov
andl
call
dec
mov
xchg
movsl
jmp
cltd
out
xor
dec
xor
lret
jno
ret
sbb
and
nop
inc
fsubrs
aad
and
movsl
xchg
testl
xchg
dec
push
out
add
imul
mov
insl
pop
and
and
leave
ret
push
xchg
lock
sub
cmp
cmp
or
mov
mov
mov
inc
lods
and
cli
lods
rcr
fists
les
fwait
push
jno
arpl
dec
pop
sahf
iret
ret
loopne
jns
bnd
xchg
xchg
test
lcall
cld
mov
mov
push
jae
fs
aaa
jae
js
repz
popl
popa
outsb
jle
sub
inc
mov
movsb
jmp
mov
inc
cs
mov
and
aam
xchg
push
fldl
jb
loop
xor
mov
sahf
push
push
sub
pop
in
addl
add
adc
stos
cmpsb
addr16
mov
mov
mov
out
adc
mov
mov
andl
mov
shll
lock
in
xor
jb
icebp
mov
jmp
insl
fiadds
test
push
xchg
xor
pusha
popf
loopne
lret
lcall
adc
out
adc
inc
mov
and
pop
lods
fwait
or
jbe
mov
icebp
enter
adc
add
ja
fdivrl
int3
inc
and
fwait
push
gs
mov
into
gs
mov
mov
loop
rcl
cmp
fxtract
mov
lret
cmp
pop
inc
popf
jmp
pop
je
clc
dec
sbb
call
pusha
rorl
testl
pop
push
jns
pop
outsl
mov
out
andl
sbb
lea
mov
inc
cs
adc
fdiv
dec
in
sub
mov
sub
adc
incb
dec
inc
jno
nop
dec
test
and
and
jbe
scas
add
jbe
cs
pop
outsl
cld
xchg
adc
sub
or
jb
nop
xchg
jge
mov
pushf
sbbb
mov
inc
out
push
sti
pop
jbe
and
iret
or
popf
inc
sub
enter
loopne
push
mov
adc
mov
xchg
jp
adc
repnz
adcb
push
pop
vandps
cmp
mov
fisttpl
pop
dec
hlt
or
in
mov
pop
sbb
out
jle
hlt
sub
cmpsb
imul
push
int
or
fstpl
mov
shr
push
mov
popl
std
icebp
mov
push
fstl
mov
or
pop
or
inc
jg
xchg
fdivrl
iret
rclb
adc
lods
out
fcoms
ja
stos
mov
dec
arpl
fs
adc
and
cwtl
sub
scas
pop
pushf
inc
std
dec
lock
inc
mov
inc
aas
mov
or
sub
inc
mov
inc
ss
loope
jl
sbb
inc
dec
pushl
jno
lret
hlt
push
lahf
cmc
jl
jge
stos
xchg
outsb
enter
in
fs
sub
inc
mov
rorl
xor
ja
aas
dec
loopne
and
sti
add
das
or
dec
mov
push
jae
icebp
dec
lret
sbb
out
cmp
icebp
mov
int
daa
je
sarl
mov
mov
fsubrs
push
inc
mov
pop
out
jmp
xlat
sarl
pop
push
popa
test
sub
mov
lret
dec
fiaddl
jbe
xchg
dec
xchg
fdivrl
in
enter
mov
push
xorb
out
sbb
dec
mov
test
fisttpl
in
pop
scas
sbb
ja
add
lret
imul
mov
sarl
fs
cmp
mov
xlat
outsb
and
push
stc
mov
mov
pop
in
add
andl
push
aaa
xchg
leave
ret
sub
dec
fsubrs
pop
ss
sar
pop
rcrb
or
fdivrs
ret
jle
sbb
int3
mov
lcall
adc
divl
mov
flds
xor
nop
inc
js
daa
sbb
or
fimuls
mul
sub
push
sub
ss
push
out
jp
sbb
fstpl
mov
dec
out
xor
mov
out
inc
pushf
xchg
pop
arpl
mov
push
pop
fldl
out
xchg
pushf
fnstenv
xchg
insb
dec
mov
adc
push
lods
adc
cmp
data16
pop
lahf
dec
push
mov
mov
jbe,pn
mov
cld
sbb
jb
pop
jns
shrb
or
cmp
ljmp
ljmp
sbb
dec
cmp
mov
dec
in
push
aas
lahf
in
stos
jl
stc
dec
dec
or
dec
and
fldlg2
daa
out
sti
rcl
add
lods
pop
push
mov
mov
cmc
xor
push
test
sbb
popf
push
mov
arpl
mov
pop
xchg
mov
add
add
push
in
jp
or
lahf
shll
jmp
ja
es
dec
iret
ret
leave
ret
icebp
push
scas
push
adc
loope
sub
mov
adc
movsb
pop
out
sbb
dec
movsl
movsb
js
adc
out
or
iret
add
sbb
leave
jge
pusha
dec
scas
lcall
fldt
int3
rorb
gs
xchg
fstpl
inc
pop
adc
repnz
or
xchg
sub
test
push
cmpsb
or
and
cli
in
mov
test
or
loope
push
movsb
hlt
out
or
xor
dec
adc
or
sbb
out
jp
cs
push
insb
cs
or
pushf
fstpl
ja
lock
pop
out
dec
cmpsb
jns
popf
cmp
pop
inc
add
mov
testl
out
sbb
xlat
dec
lods
mov
cmp
inc
push
mov
jle
xchg
out
call
push
sub
movsl
fbstp
mov
testl
popf
mov
ljmp
push
sbb
lock
nop
jno
xor
push
pop
and
aam
daa
jnp
cs
xchg
xchg
or
or
addr16
mov
add
imul
in
mov
insb
lods
dec
jnp
iret
lahf
push
iret
je
jge
mov
xchg
sub
out
rorb
arpl
das
mov
loop
xor
mov
dec
sbb
divb
mov
lret
mov
pop
lahf
mov
dec
jns
shrb
jo
fidivl
or
or
mov
loop
jns
lahf
aam
data16
mov
leave
out
jne
cwtl
push
pop
pop
pop
xchg
test
lock
push
loop
xor
push
mov
dec
push
insl
cmp
xor
sti
pop
push
xor
std
xchg
jge
cmc
loopne
iret
add
dec
ret
adc
sub
in
add
lahf
dec
in
sub
xlat
iret
maskmovq
divl
mov
jb
ljmp
stos
lods
lcall
sbb
push
aam
and
enter
inc
mov
jae
test
xchg
filds
xor
sbb
fwait
adcl
sbb
into
fistpll
hlt
insb
push
cmp
testl
and
ja
movsb
xchg
imul
sbb
out
scas
xchg
fdivrl
lcall
add
lock
mov
ss
out
push
mov
shlb
negl
xor
mov
jo
xchg
in
sti
cmpl
shl
pushl
fsub
fildl
cmp
ljmp
lret
ret
jo
outsl
rorl
push
mov
js
adc
insb
orl
dec
jbe
outsb
mov
jnp
std
push
lods
and
loop
fisubs
add
adc
cmp
insl
jno
jmp
imul
ret
jg
ret
shl
jno
cmc
and
cmp
inc
cmp
out
mov
xor
inc
jae
sub
jno
xlat
roll
sub
rcll
fxch
or
pop
cs
stos
or
mov
out
push
xor
mov
lea
rcrl
dec
pop
fiaddl
mov
jo
fcmovne
xchg
mov
mov
loop
mov
imul
push
mov
push
lret
xor
sbb
in
inc
fstpt
inc
cltd
jne
jle
push
mov
ljmp
mov
cmpsl
roll
insb
popf
div
pop
test
leave
xchg
aad
jns
mov
jns
push
and
jb
shll
or
xor
adc
pushf
add
enter
aad
jo
xchg
bound
dec
xchg
test
repnz
sub
or
or
gs
xchg
dec
icebp
fdiv
mov
es
in
les
ret
fnstsw
out
sbb
dec
loop
jmp
push
rol
sbb
xor
xchg
test
stos
stos
and
xor
inc
add
dec
inc
push
xchg
js
in
int
repz
and
pop
xchg
push
jb
ret
mov
jecxz
pop
jge
clc
dec
pop
sbb
pop
adc
push
lret
fstl
jecxz
mov
push
xlat
daa
add
icebp
test
jnp
inc
ljmp
fdivl
pop
mov
sbb
jmp
mov
out
stos
inc
adcb
aad
testl
and
adc
cmc
push
mov
xchg
jnp
sti
xchg
jge
mov
add
sahf
adc
jg
and
inc
notl
adc
xchg
test
aaa
adc
in
or
loopne
sub
mov
and
mov
and
test
jecxz
sarl
mov
sbb
adc
js
xchg
test
inc
jp
pop
mov
mov
or
and
inc
dec
call
aam
popa
test
sti
ror
bound
pop
jge
mov
add
or
test
outsl
out
clc
inc
mov
in
cli
lods
push
fs
test
sub
repz
cltd
ss
sbb
dec
push
out
dec
mov
jnp
das
add
sub
orl
aam
jp
xor
std
lods
dec
cld
sbb
mov
out
sti
add
jae
loope
cmp
jo
loop
or
dec
and
rcl
push
out
sbb
pop
xchg
icebp
mov
cmp
fs
hlt
or
mov
and
fisttps
out
call
test
sbb
fcoms
icebp
shll
jmp
mull
sbb
out
sbb
mov
les
je
fdivrl
fs
pop
push
dec
scas
es
mov
clc
push
test
aam
xor
neg
shll
or
fmuls
xor
sbb
jg
les
xor
cmp
shll
es
fldl
ja
xchg
cmp
stc
pop
ret
movb
imul
fs
fisubl
or
fisttpll
dec
movsb
outsl
dec
mov
dec
push
out
add
subb
popa
mov
paddq
pop
mov
xchg
jo
sti
sbb
and
cmp
hlt
or
ja
adc
stc
imul
les
cwtl
xor
loope
jnp
jo
jge
mov
fsub
cmc
daa
sbb
adc
cmp
nop
push
imul
jne
pop
test
lds
cmp
in
push
jnp
jle
cmp
shlb
jno
push
pushf
xor
pop
aaa
hlt
lock
movsb
pop
out
push
sti
movsb
imul
shlb
mov
jp
jecxz
loop
or
or
sbb
cmpsl
fstps
scas
fdivrl
lcall
rclb
push
xor
ja
mov
xchg
movsb
jb
push
insb
cmp
pop
mov
pushf
cli
jbe
sub
inc
push
out
push
pop
mov
in
mov
sub
sbb
gs
or
push
push
cmpl
xor
popa
mov
out
dec
mov
shrb
pop
adc
push
pop
cmp
int3
dec
mov
push
movsb
jo
addl
stc
and
jle
fidivrl
fwait
shrl
in
inc
cmc
adc
popa
adc
clc
adcb
inc
mov
mov
xor
dec
cmpsl
jns
mov
sbb
fdivrl
mov
sbb
xor
mov
cmpsb
popa
aaa
cltd
xchg
cwtl
fistpl
pop
ret
lcall
cmpsl
leave
dec
scas
cmp
insl
std
ljmp
pop
lods
cltd
sti
out
out
sbb
dec
mov
xor
ja
arpl
inc
jo
push
xor
lea
mov
bound
sub
or
mov
xchg
insb
adc
inc
xchg
ret
jl
jno
cwtl
les
mov
mov
sbb
ljmp
in
testl
lcall
or
nop
jbe
xchg
dec
std
inc
popf
xchg
adc
and
mov
and
sbb
or
imul
lock
ret
gs
stos
or
lret
aam
sahf
sub
ror
add
ljmp
jp
out
dec
push
shll
lcall
or
out
in
sbb
mov
mov
ret
dec
cmp
pop
jne
pop
subl
daa
mov
pop
mov
or
lock
shlb
ret
add
mov
sahf
ret
sub
pop
loop
jmp
cmpsl
mov
es
shr
sbb
cmpsl
jbe
cmp
fs
shll
int3
push
sahf
xor
mov
into
push
ss
jno
mov
lock
out
sbb
mov
push
jle
ja
ljmp
into
popf
in
js
jge
fadd
test
fs
inc
or
leave
lcall
ret
cwtl
add
cmc
aas
or
mov
push
ret
gs
lret
push
add
rolb
mov
cmpsl
push
mov
cmp
lock
xchg
call
dec
pop
aas
scas
push
xchg
jg
mov
test
add
sti
push
shl
lock
xchg
test
fucom
hlt
inc
push
out
push
jae
and
pop
lcall
cmc
gs
mov
fucom
push
inc
xchg
xor
pop
jno
adc
push
fdivrs
rcll
xchg
push
lret
arpl
push
xor
das
nop
ret
gs
stos
or
enter
inc
pop
in
loop
adc
mov
xchg
lahf
rcrl
cmpsb
adc
push
jbe
addr16
adc
or
inc
mov
dec
enter
std
jmp
and
fucomip
repnz
fs
dec
or
stos
mov
push
out
into
mov
mov
jno
pop
and
dec
sub
rcl
and
iret
ret
push
or
cltd
or
stc
mov
push
push
pop
test
mulb
xchg
xor
mov
mov
push
dec
mov
sarl
arpl
mov
xchg
out
sbb
adc
in
push
sahf
js
fiaddl
test
ja
pop
shlb
rclb
sbb
test
insl
adcl
repz
or
cld
shlb
or
pushf
mov
xchg
dec
xchg
test
fiadds
mov
imul
jb
ret
jae
aad
inc
push
popa
mov
inc
push
xchg
cwtl
jp
addb
mov
add
iret
mov
clc
xor
inc
movsb
adc
push
jge
dec
sub
cmp
in
sbb
je
orb
das
bound
mulb
lcall
popf
pusha
inc
mov
cmp
movsl
fsub
icebp
mov
inc
add
jecxz
daa
sbb
jo
popa
mov
inc
sti
mov
bound
and
fmulp
add
mov
mov
test
test
dec
mov
xchg
test
push
scas
clc
and
pusha
into
loop
mov
mov
sti
js
pushf
sti
push
ror
sbb
imul
sub
cmp
imul
and
mov
mov
mov
jg
out
test
popf
cs
aad
dec
ret
fs
sub
lret
icebp
inc
repz
mov
ja
sbb
jnp
mov
js
jnp
xchg
ret
mov
enter
push
jle
jae
mov
add
data16
mov
inc
xchg
insb
adc
dec
xor
fmuls
testl
popa
inc
sbb
in
jbe
into
sub
mov
cli
inc
xchg
add
xchg
cmp
xchg
inc
jns
dec
mov
pop
mov
xchg
dec
bound
aam
loope
dec
push
dec
jmp
push
rcr
mov
dec
sti
xchg
xchg
cli
xor
mov
loop
mov
lds
inc
add
xchg
inc
inc
int3
aam
mov
test
pop
inc
jecxz
cli
mov
sarb
mov
sbb
mov
shrb
arpl
mov
xchg
and
cmp
into
call
jnp
jp
cmp
loop
cmpps
loopne
or
ss
outsl
cmc
pop
sti
pop
cmpsl
dec
cltd
adc
data16
pop
sbb
out
mov
fidivrs
das
mov
sahf
adc
xchg
ss
cmpsl
fsubrs
or
xor
add
xor
mov
dec
push
out
jmp
push
mov
adc
mov
and
push
cltd
fld
mov
mov
cmp
xchg
sub
pushf
jg
xchg
scas
test
lret
pop
xor
rcll
jae
imul
pop
xchg
jnp
cmp
pop
pop
sbb
xchg
push
pop
std
negl
enter
mov
inc
dec
mov
lods
or
inc
push
jbe
out
lea
sub
outsl
fwait
sahf
fwait
mov
das
and
data16
xchg
or
movq
and
jge
notb
test
cmp
hlt
jb
fadds
ljmp
sub
adc
mov
notl
mov
fisubs
or
sub
push
mov
adc
push
xchg
sub
mov
inc
out
es
jb
pop
mov
cmp
sub
push
jae
mov
shlb
bound
adc
push
sub
add
daa
pop
and
leave
fs
jg
es
jp
iret
ret
cmc
push
test
dec
jecxz
cmpl
pushf
xor
adc
or
sub
les
push
jae
mov
pop
add
cmp
or
std
jnp
fstpl
inc
push
out
push
lret
and
cmp
fmuls
int
jge
mov
adc
dec
sti
mov
mov
insl
lret
aaa
inc
xor
bound
push
jg
add
fisubrl
add
js
pop
and
sub
sar
lods
or
xchg
jnp
loopne
and
dec
jmp
pushf
adc
sti
xor
les
stos
int
mov
dec
push
sbb
cli
sbb
icebp
add
outsb
fucomip
shrb
xor
xchg
cs
adc
jae
sbb
xchg
mov
nop
mov
xor
shrb
push
loope
dec
cltd
ljmp
sbb
cltd
in
mull
lods
lret
cmp
inc
push
out
push
sbb
push
xor
fprem
movsl
mov
mov
leave
xor
out
mov
cmp
pop
inc
sub
lea
enter
sub
xor
xlat
pop
stos
push
inc
push
out
sbb
mov
nop
and
xchg
insl
and
enter
jle
sbb
or
sub
shlb
lods
arpl
stos
or
jmp
pop
out
mov
jbe
sub
cmp
mov
jbe
and
xor
jns
and
sbb
jmp
mov
sub
and
jo
add
or
arpl
clc
adc
adc
adc
adcb
push
loopne
js
sbb
push
sbb
lahf
stos
xchg
dec
inc
and
inc
jo
push
hlt
insl
dec
call
cli
int
test
ret
mov
push
outsl
mov
inc
iret
loopne
jno
cmp
cmp
xor
loop
ja
pop
ljmp
out
push
test
xor
cli
clc
add
lahf
push
repz
xor
lret
cmpsb
pop
pop
sahf
jbe
mov
xchg
push
jns
mov
push
repz
mov
pop
add
push
or
dec
push
out
sbb
adc
adc
fs
fbstp
and
stos
mov
pop
scas
xor
pop
jnp
xchg
test
out
mov
insb
jecxz
cmpsl
jle
repnz
mov
xchg
lds
das
fs
incb
loope
adcl
shll
mov
inc
cmpsb
les
inc
xchg
fdivrl
int
repz
push
psrad
divl
sarb
test
dec
adc
sbb
or
mov
aas
lcall
cmpsl
iret
repz
cld
in
stos
mov
jns
andl
xchg
sub
cmp
xor
push
jmp
push
inc
add
int3
fidivrl
xchg
test
scas
mov
aad
fs
daa
lods
nop
mov
pop
pop
mov
decb
cwtl
insb
or
add
shll
dec
lods
mov
sbb
pop
out
sbb
fnsave
pop
in
rcll
fisubs
pop
cmpsl
out
and
sub
xchg
cmp
loop
icebp
xchg
popa
cli
mov
nop
mov
iret
pop
or
pushf
and
mov
mov
mov
adc
das
sub
cmp
mov
xor
mov
sub
push
pushf
inc
roll
rclb
pop
rorl
shl
loop
lret
dec
pop
out
sbb
mov
inc
xchg
push
insb
fiadds
mov
sub
testl
es
inc
push
insl
mov
inc
out
imul
test
movd
sbb
leave
xchg
push
mov
in
push
fnstsw
loope
test
and
cmp
pushf
cmpsb
sbb
or
inc
popa
or
adc
sub
shll
test
sbb
mov
sbb
mov
test
lcall
icebp
sub
xchg
ja
jno
dec
cmpsl
loope
call
jo
xchg
scas
repz
loop
cmp
and
lret
xchg
test
xchg
dec
sbb
xor
loopne
xchg
sub
jge
loop
push
mov
fstpl
mov
out
adc
test
pop
not
shlb
push
ror
test
popf
mov
push
cltd
ljmp
mov
xchg
mov
and
leave
and
adc
out
sbb
roll
dec
daa
shrl
pop
jne
fdivrl
mov
cwtl
imul
xchg
dec
sub
cmp
lds
in
aad
sbb
mov
add
test
dec
int3
inc
add
mov
xor
sub
arpl
sbb
fnstsw
addr16
sbb
push
cmp
lret
shr
dec
jle
lcall
lcall
push
loopne
test
je
or
shl
dec
sbb
aas
mov
mov
in
jl
sub
push
scas
mov
sbb
or
dec
test
mov
push
sbb
pop
es
jmp
or
push
adc
ret
mov
fstpt
cwtl
mov
sub
shll
jae
cmp
mov
xor
mov
leave
out
inc
lahf
mov
xor
test
or
sti
adc
rorb
stc
fldt
dec
into
adc
cmp
in
push
pushf
rcll
out
mov
and
jne
sub
fcmove
sbb
sub
or
repnz
jbe
shlb
divl
push
aas
sub
mov
into
mov
xchg
movl
xor
and
movsl
pop
xchg
loop
push
out
push
cmp
dec
movb
jecxz
cmc
mov
mov
aam
lock
dec
push
mov
jmp
sbb
adc
add
jae
fs
sbb
cmc
out
dec
out
rolb
jp
sbb
sbb
pop
ss
fs
rclb
negl
ja
int
lahf
push
out
sbb
mov
loope
inc
jp
mov
fcmovnb
lahf
lret
cmp
jne,pn
push
out
push
les
in
rorl
adc
sbb
fistpll
mov
adc
cmp
leave
xchg
test
imul
shll
mov
jmp
pop
mov
popa
jecxz
out
insb
lret
addl
aaa
into
pop
adc
mov
dec
outsb
jmp
add
jge
int
xchg
or
or
adc
inc
jns
sahf
add
orb
pushf
sub
cmp
shll
sbb
xor
outsl
sbbl
add
pop
pusha
adc
sub
fcomip
aas
pop
divl
decb
jo
test
xor
dec
in
sub
popf
add
xchg
push
sub
mov
ret
inc
jl
inc
xchg
test
pusha
xchg
jo
data16
cld
dec
ffree
repz
or
nop
fldt
js
xor
push
popa
loope
shll
ss
lock
repnz
mov
and
inc
test
andl
mov
mov
ja
mov
mov
sub
sahf
mov
xchg
jmp
outsl
cmp
rolb
iret
adc
xor
mov
dec
jo
pop
jb
nop
xor
jmp
xchg
xor
hlt
dec
push
out
push
outsb
xor
fcomps
ljmp
mov
xchg
jmp
push
push
xchg
pushf
push
lea
out
lea
pop
inc
pushf
dec
int
xor
stos
insl
fnstenv
clc
lods
cltd
pop
xchg
pop
dec
jns
cltd
adc
out
jmp
mov
ja
ret
xchg
sub
adc
xchg
bound
sub
xor
or
pop
pusha
sub
xchg
dec
add
adc
dec
cmp
inc
xchg
test
lahf
inc
xor
and
mov
push
out
scas
xor
pop
sbb
fadd
gs
xor
push
xchg
push
and
sbb
jo
push
ja
js
sub
gs
adc
mov
jns
cmpsb
inc
dec
add
sub
dec
or
pop
inc
and
gs
aas
jo
test
hlt
mov
stos
sahf
xor
mov
adc
arpl
add
fisttpll
insb
and
pop
adc
out
pushf
ds
clc
idivl
or
jae
sbb
cmp
cmpl
call
insb
and
mov
out
mov
push
dec
sbb
aaa
lods
mov
adc
mull
mov
cmc
pop
cmpsl
dec
adc
sbb
push
sub
bound
loop
mov
push
xchg
pop
mov
mov
mov
inc
xchg
push
aas
xlat
xchg
aaa
mov
dec
lock
pushf
mov
icebp
sub
sarb
iret
push
cmp
out
mov
shlb
sbb
cmpsl
pop
les
inc
mov
call
ljmp
cwtl
xor
or
dec
jo
push
pop
rcrb
loopne
rcrl
pop
push
out
lcall
mov
pop
sbb
jae
pop
pop
icebp
ljmp
or
pop
and
mov
xchg
sub
mov
add
nop
pop
sbb
push
test
or
adc
push
mov
inc
cltd
call
dec
arpl
out
xchg
sbbb
mov
jne
pop
adc
out
push
nop
daa
xchg
vpsrlw
mov
mov
jmp
mov
jb
jns
add
sahf
sub
cmp
or
or
lahf
pop
xor
dec
scas
mov
jmp
js
fcomps
pusha
dec
mov
psubusb
cmc
mov
sub
iret
andl
add
xchg
cmp
and
xor
inc
fcoms
and
lods
je
mov
cwtl
inc
sbb
and
in
aas
aam
loop
ja
decl
add
lret
hlt
xchg
sub
xchg
test
jae
dec
dec
xor
rorb
testl
jl
dec
push
out
push
lret
das
enter
fs
in
push
jae
and
dec
and
fcoml
test
cmp
jo
or
imul
popa
fidivs
adc
or
aam
push
lods
sub
outsl
push
ss
pop
xor
and
addr16
and
push
gs
or
test
push
nop
outsb
jno
clc
mov
outsl
adc
movsl
in
push
jge
pop
mov
cld
cmp
pop
push
mov
inc
popa
jmp
mov
adc
cli
sub
and
jecxz
xor
mov
dec
es
imul
and
pushf
shl
or
xchg
lods
pop
pop
sub
adc
push
imul
and
sahf
shl
or
es
inc
xchg
push
mov
and
dec
push
out
push
scas
mov
lods
addb
jno
adc
mov
cmp
loope
cmp
fisubs
lds
addr16
out
je
ficomps
mov
inc
mov
dec
out
mov
fidivrl
loop
xor
mov
fs
ss
push
push
outsl
mov
inc
add
pop
xor
pop
in
fisubl
or
inc
fcoms
mov
dec
repnz
sbb
xchg
std
add
xorl
dec
lret
mov
sbb
and
sbb
mov
add
ja
xchg
and
testl
lret
div
into
fisttps
and
mov
nop
fdivrl
lcall
xor
pushf
fistps
push
xor
add
sub
xor
dec
jbe
cmp
inc
bound
andb
pop
insl
filds
sbb
out
push
lds
cmc
xor
cwtl
inc
cwtl
repnz
div
pop
insl
fists
loope,pt
add
inc
outsb
dec
das
pop
aaa
fldenv
lahf
cmc
sub
shrl
daa
stos
jmp
fdivl
fs
or
test
pop
sub
imul
sbb
jp
rcl
cmpsb
mov
shl
out
xchg
test
lock
mov
dec
and
int3
mov
sahf
pop
cli
sbb
insb
call
xchg
insl
nop
pop
cli
mov
mov
xor
adc
outsb
js
movups
jmp
insl
sbb
mov
xor
insb
test
lock
sbb
mov
popa
jl
mov
lcall
sub
nop
inc
mov
call
or
int
lret
mov
lock
jl
icebp
mov
popf
popf
stc
jb
dec
je
fstpl
mov
adc
sub
fldt
mov
push
or
xor
cmp
cmp
imul
push
mov
add
nop
jp
jbe
xor
popa
shll
andl
or
cltd
xor
das
push
sahf
movsb
js
in
aas
test
loop
cmp
dec
inc
mov
dec
dec
inc
mov
imul
xchg
cmpsl
mov
fdivrs
push
mov
xlat
push
jnp
dec
adc
mov
cmpsb
shll
les
pushf
es
sbb
add
pop
mov
or
inc
int3
push
outsb
jl
test
mov
fcmovu
pop
lds
out
xchg
push
sbb
mov
dec
jo
push
test
das
enter
fisubs
or
popf
mov
out
xor
filds
mov
lahf
test
jp
or
addb
inc
pop
ss
in
pop
pop
outsl
jp
mov
push
and
out
mov
outsb
rorb
ret
and
sbb
jo
mov
xor
xchg
jbe
pop
mov
pop
fildll
xor
lcall
jp
sti
stos
push
jno
ss
gs
inc
pop
pop
mov
mov
sbb
and
hlt
or
cmpsb
mov
and
push
jg
js
xor
mov
adc
lret
fidivrl
repnz
call
adc
jb
sub
fnstsw
sub
or
shl
mov
mov
fiaddl
fiadds
stos
adc
jno
dec
je
pop
aas
jae
sub
les
lret
xorl
or
sbb
fldt
mov
jle
addr16
push
push
dec
add
cwtl
out
jecxz
scas
stos
testl
jmp
pop
jmp
fdivrl
fldenv
fsincos
int
pop
xor
stos
mov
out
and
add
insl
sub
jl
insb
and
hlt
or
cmp
adc
mov
xchg
dec
sti
cmp
push
xchg
stos
loopne
mov
jbe
enter
and
cwtl
xchg
xchg
sub
out
lret
mov
enter
inc
push
out
xchg
mov
das
inc
ja
xor
ja
cmp
dec
dec
in
add
and
in
mov
add
and
push
int3
mov
and
jmp
mov
mov
add
mov
dec
jg
ljmp
pop
inc
lods
mov
mov
mov
loop
and
popf
mov
popf
mov
aam
sub
sub
test
sbb
adc
popf
or
mov
mov
sbb
arpl
pop
xor
cmp
xor
notl
incl
xor
mov
popf
popf
sub
dec
push
inc
mov
in
mov
add
and
in
mov
aas
sub
jge
mov
gs
in
jecxz
and
rolb
cltd
push
inc
out
popa
sbb
js
scas
rcrb
bound
sub
sub
xor
sub
std
jge
sub
pop
hlt
enter
push
pop
hlt
enter
stc
sbb
in
adc
in
fisttps
xor
outsb
mov
lods
mov
imul
lods
mov
jb
call
out
mov
in
mov
xor
filds
dec
inc
in
mov
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
jns
dec
jecxz,pn
ds
pusha
pop
nop
lock
adc
ja,pt
push
inc
or
lret
xchg
mov
sarl
rcll
ficoms
movsb
mov
inc
cwtl
xchg
jnp
movsl
push
leave
lret
cld
push
xchg
sbb
sub
cltd
mov
adcl
cs
pop
ret
out
ja
mov
in
mov
jge
enter
stos
mov
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
in
mov
add
and
or
adc
and
mov
sarb
in
push
adc
ror
cmc
push
mov
cmp
cli
jae
mov
pop
das
cmp
ficompl
mov
out
or
aad
inc
mov
daa
jecxz
or
test
dec
sub
mov
push
cmp
test
push
xchg
imulb
and
mov
ror
sbb
dec
fwait
mov
shll
mov
pop
mov
ljmp
arpl
sbb
aas
cmc
aam
dec
test
mov
outsb
add
sbb
mov
leave
sbb
xor
cmp
inc
inc
cmp
shlb
mov
jno
in
movsl
std
push
bound
cmp
sbb
scas
pusha
push
inc
jmp
fildll
jle
and
jae
and
pop
push
mov
aaa
hlt
loope
loope
mov
push
mov
out
lods
or
aaa
push
jle
dec
push
fdiv
or
loope
fistpll
push
std
inc
xlat
cmpsl
mov
add
xchg
jg
inc
das
sahf
mov
xchg
mov
lods
mov
mov
sbb
out
add
dec
sub
jb
ret
or
sub
ds
xor
xor
ljmp
out
out
inc
adc
in
dec
mov
out
loopne
outsl
fwait
and
and
dec
jecxz
mov
insl
inc
mov
jp
arpl
mov
into
int3
cld
cli
xchg
shll
jne,pn
pop
push
sub
push
addl
out
lea
cmp
cli
cs
sub
mov
inc
xchg
or
sahf
mov
push
push
scas
aas
cli
jbe
push
stos
and
stos
daa
ficompl
fcoml
xchg
mov
cmp
dec
int3
dec
push
push
pop
or
pop
sarb
insb
push
sbb
stos
mov
sbb
push
imul
cmp
repnz
call
push
orb
mov
mov
les
mov
repz
mov
in
fiaddl
mov
lcall
les
cmp
adc
out
mov
in
jbe
mov
cs
shr
ds
jge
push
cmp
jo
cltd
xor
push
data16
es
mull
pop
leave
mov
insl
jnp
sbb
pop
mov
pop
sbb
ret
push
es
mov
push
mov
inc
ljmp
jnp
out
lods
lcall
sti
adc
arpl
lods
sbb
xor
loop
insb
inc
dec
ret
mov
xor
aaa
cltd
loopne
iret
dec
ficoms
cmp
aas
xchg
orb
in
sub
int
xchg
xorl
cmp
sub
dec
or
jecxz
ss
out
sub
pop
in
fimuls
mov
mov
adc
daa
push
clc
xchg
sub
add
das
or
scas
daa
shll
rol
stos
mov
cltd
mov
jnp,pn
mov
les
imul
loopne
push
jl
andl
cli
ret
cmp
or
dec
cltd
push
push
push
stc
pop
test
fisubl
mov
xchg
js
pushf
fwait
idivb
sub
inc
cmp
dec
cltd
xchg
lcall
imul
inc
popa
adc
pop
enter
adc
icebp
mov
mov
lahf
imul
repnz
cmp
out
cmp
mov
in
ret
xchg
stc
or
daa
lods
pop
in
jp
decb
in
adc
dec
jl
push
jne
lahf
jo
mov
stos
in
or
mov
stos
fdivs
mov
test
and
cmp
push
and
andps
sbb
pop
mov
xchg
pop
mov
cmp
out
push
aam
cwtl
lret
bound
inc
les
inc
xchg
cli
dec
jnp
add
stc
fsubl
sbb
fildl
aas
ret
gs
movsb
addr16
cld
insl
inc
rol
jl
sahf
and
and
pushf
inc
mov
or
int3
fmuls
clc
scas
or
test
jp
cld
bound
dec
sbb
aaa
loop
xlat
jns
jno
jge
inc
mov
add
adc
pop
in
or
add
sbb
lods
pop
xor
out
cmc
push
and
out
add
fsubrl
push
cmp
inc
mov
test
arpl
pop
adc
repnz
mov
test
push
push
push
xor
sbb
sub
ret
icebp
shrb
pop
mov
push
and
insl
mov
add
aad
imul
cmp
ret
push
mov
imul
js
dec
mov
int
lock
rol
push
arpl
cmpsl
lock
iret
mov
enter
retw
lcall
popf
push
fmuls
push
push
sub
popa
shr
xor
insl
in
mov
jp
sbb
std
mov
out
xchg
cmp
mov
or
push
mov
sub
insl
fisttps
dec
mov
stc
fbld
xor
pop
xchg
pop
leave
adc
cmc
cmp
iret
subb
push
sbb
and
adc
ret
lcall
movzwl
addr16
lods
push
bnd
inc
or
jb
std
add
lcall
adc
xchg
jp
sti
insl
add
stos
mov
out
mov
shlb
sbb
outsb
fmulp
push
shl
jecxz
popa
cwtl
out
sbb
mov
out
fisttpl
pushf
aaa
lock
add
pop
dec
lret
or
adc
leave
add
mov
push
addl
lds
aam
mull
sub
in
cs
inc
shr
orl
jo
fnsave
pop
mov
ja
push
mov
and
mov
aam
push
inc
popa
push
fcompl
out
clc
dec
add
es
in
cmc
cmp
mov
stc
sbb
add
add
leave
imul
cwtl
add
repnz
mov
and
mov
add
dec
das
andl
xchg
mov
mov
sub
and
or
adc
sbb
cmpsl
in
aaa
cmpsl
push
les
push
xchg
out
test
aam
loopne
mov
jl
push
repnz
or
addl
pusha
fimuls
jl
and
aaa
xchg
incb
inc
dec
clc
inc
sbb
sub
ds
cs
ret
push
xchg
andb
ljmp
xchg
aad
cld
call
adc
or
push
and
and
jge
and
dec
sub
lods
mov
aas
popl
int3
in
test
std
popf
mov
xchg
jb
pop
sub
pop
sub
xchg
xchg
jp
push
jmp
int3
popf
cmp
push
cltd
sbb
pop
xor
imull
ret
and
jno
hlt
loop
cmp
add
sub
dec
or
ss
lods
and
push
shlb
pop
push
test
shl
xlat
pop
mov
movsl
lds
xchg
mov
jmp
hlt
xchg
shl
or
jns
mov
in
in
ret
in
addb
jb
and
and
inc
shll
imul
xor
cmc
jmp
jecxz
mov
cmp
in
cmc
filds
mov
sub
sub
stos
jle
adc
mov
fldlg2
out
gs
inc
loop
inc
mov
jae
fldt
and
jle
addr16
fisubl
push
and
push
mov
into
push
outsl
je
movsb
enter
popf
mov
std
mov
mov
mov
dec
aas
adc
sahf
cmc
out
fcoms
leave
int3
popf
scas
jecxz
lds
mov
fwait
dec
fldcw
cmp
call
add
cmp
xor
outsb
stos
pop
roll
xor
icebp
cmp
dec
mov
xchg
test
adcl
jle
xor
sub
lret
mov
pop
or
mov
mov
leave
addb
mov
lret
int3
sahf
mov
jb
push
cmpsl
rcrb
addr16
xor
mov
jns
gs
and
dec
lret
mov
mov
insl
pop
popf
adc
sub
push
mov
xchg
xchg
aaa
fcomps
movsb
pop
sub
insb
mov
lret
je
clc
jmp
sub
imul
inc
orb
ret
addr16
push
call
push
sbb
es
add
bound
roll
xchg
push
xchg
test
push
cmp
jmp
in
stos
adc
aas
repz
outsb
movsb
icebp
xor
sbb
mov
mov
enter
pop
mov
pop
cs
aad
call
mov
iret
stos
sbb
mov
pop
jmp
inc
xchg
push
loopne
movsb
mov
xor
jle
mov
je
test
dec
jmp
stos
mov
jg
btc
aam
xchg
lods
mov
push
jae
jmp
rsqrtps
int
push
push
mov
lock
pop
push
lods
pop
outsb
jge
lret
outsl
add
lds
daa
adc
sub
in
sub
sbb
sub
imul
std
cmp
xlat
inc
scas
inc
cmp
rcrb
je
ds
and
jns
divb
push
sbb
sub
pop
movsb
sbb
test
mov
rcll
and
jl
push
mov
sbb
rcrl
out
inc
xor
pusha
mov
xor
and
pop
sti
and
adc
push
subb
push
xchg
xor
pop
push
sub
fmuls
jns
mov
movsl
loop
xchg
mov
repnz
jg
push
mov
adc
and
sbb
clc
dec
pop
sbb
mov
and
cltd
mov
sbb
sub
mov
lods
sbb
in
xor
stos
lods
sti
xchg
xsha256
cmpsb
push
jae
cld
mov
lret
fsts
mov
addb
and
in
sub
jecxz
lock
out
mul
int
jb
jns
out
or
out
rclb
inc
loop
out
and
dec
hlt
adc
mov
or
and
cltd
fsubrs
or
mov
inc
jl
add
rolb
mov
fwait
or
filds
mov
popa
nop
lea
pop
imul
stc
inc
dec
and
sbb
mov
jle
sbb
lcall
lods
ss
add
scas
push
mov
scas
push
daa
sbb
call
movsb
daa
std
rolb
popa
into
mov
or
pop
testl
pop
repnz
jg,pt
pop
sbb
das
gs
push
iret
pop
mov
mov
sti
mov
cli
cli
out
jg
pop
lret
push
add
fdivrl
ja
mov
push
jnp
popa
in
test
pop
fnstenv
nop
cmp
sub
sbb
xchg
outsl
xor
push
mov
adc
ljmp
int3
push
out
out
mov
outsb
or
cmc
add
dec
sbb
sbb
push
xor
cmp
xchg
rep
aas
add
pop
fildl
mov
mov
pusha
mov
daa
push
ret
dec
cmp
mov
push
cmpsb
mov
dec
xor
stos
mov
ffree
and
out
xchg
pop
subb
cld
int3
push
imul
vandps
ja
inc
into
loopne
mov
add
jo
arpl
addr16
loope
adcl
or
pushf
add
push
mov
push
xlat
cld
imul
inc
sub
xlat
pop
pop
dec
call
dec
mov
or
addr16
mov
and
and
push
add
dec
out
adc
adc
aas
xchg
fs
ja
xor
enter
imul
sar
mov
mov
loopne
push
sbb
adc
test
cld
inc
mov
mov
sbb
ja
ja
ret
mov
cmp
addr16
lea
xchg
fstpl
mov
aas
add
mov
filds
jns
dec
mov
pushf
fsubl
popa
sbb
jno
push
stc
ret
xor
iret
mov
and
pop
push
and
mov
je
fdivl
rorb
aad
jnp
cli
lret
nop
loopne
cmc
and
sub
jmp
dec
pusha
xor
pop
or
int
popa
out
stc
mov
xor
es
into
mov
xor
jge
loope
in
int
inc
pushf
or
xchg
data16
movsb
lea
push
stc
sbb
cmp
jns
imul
rorl
addr16
xor
jg
mov
fwait
jg
xor
repz
fdivs
lea
rorl
fadds
movsl
xchg
int3
adc
cli
or
outsl
cmp
ljmp
xor
jae
push
adc
lods
cmp
jmp
imul
dec
fbld
fidivl
add
or
and
es
cs
cltd
pop
pop
pop
stc
cmp
testb
cmp
stos
mov
fstpt
sti
test
sbb
xchg
sbb
cmp
mov
add
scas
adc
jno
cmp
and
inc
xchg
mov
add
stos
push
out
js
aas
lcall
mov
test
stc
pop
cs
sbb
pop
and
jmp
pop
hlt
push
adc
pushf
or
in
es
push
xrelease
mov
nop
imul
jg
test
push
data16
call
in
cmpl
jne
xor
adcl
shrw
enter
push
mov
cmpsb
cmpsl
jecxz
lock
faddl
outsb
dec
mov
mov
mov
sbb
dec
es
cs
pop
ljmp
mov
add
add
inc
fs
and
insl
scas
dec
daa
push
xchg
cmpsb
out
jne
add
jg
out
dec
adc
fsubrs
xorl
and
lcall
xchg
add
cwtl
cli
push
sbb
out
addl
in
sbb
fimull
pop
sub
push
iret
nop
add
xlat
negb
add
jl
in
punpckldq
add
les
push
repz
cmp
pop
das
lods
sbb
adc
push
xchg
mov
mov
fistpll
inc
testb
and
iret
in
out
test
sub
cmp
push
fdivl
popf
mov
pop
push
or
push
cmp
and
lret
bound
shl
pop
xor
in
pop
lret
cmpsb
popf
jl
jb
je
fwait
sar
lret
ds
call
ret
in
dec
mov
push
scas
or
enter
xor
inc
clc
int
mov
rcr
pop
dec
adc
xchg
pop
push
pop
pop
xchg
in
imul
cwtl
fcmove
pop
adc
cltd
inc
aaa
arpl
test
fisubs
mov
mov
test
xchg
xor
cmp
hlt
or
mov
adc
dec
jmp
push
add
cltd
in
fnstcw
xchg
pop
cli
popa
sbb
mov
test
fs
mov
loopne
mov
lock
into
insb
data16
aad
cmpsb
data16
cld
outsl
pop
repnz
inc
or
sbb
dec
xchg
cld
aas
js
daa
cmc
fsub
daa
adc
rorl
inc
lcall
scas
mov
mov
std
xor
lahf
xlat
add
cmc
mov
inc
cmpsl
lea
mov
add
lahf
aaa
jp
pop
lds
aam
roll
mov
fs
imul
sahf
mov
scas
push
mov
jecxz
data16
call
dec
mov
pop
in
mov
es
inc
xchg
out
inc
mull
fstl
and
sbb
out
jae
mov
push
aas
inc
push
roll
pushf
sub
sbbb
xchg
adc
ret
lcall
movsb
scas
out
pop
xchg
mov
clc
sbbb
adc
add
or
sub
xchg
push
jne
fiaddl
cmp
outsb
pop
jecxz
loope
xchg
in
and
rcrb
aam
test
mov
xor
pop
orl
jb
std
pusha
inc
lret
cmp
jo
mov
xor
push
pop
scas
fcmovne
cmpsb
mov
daa
daa
sbbl
jecxz
loope
pushf
scas
mov
addr16
test
jg
mov
dec
ret
stc
mov
mulb
out
jl
leave
xor
mov
insb
xchg
inc
test
sub
and
sbb
jb
mov
mov
inc
insl
push
pop
mov
lock
std
insl
mov
cmp
push
adc
jge
add
jns
sbb
dec
jg
mov
mov
cmc
insl
xchg
cmp
push
mov
sbb
sub
xor
insl
out
testb
inc
jmp
loop
xor
xchg
pop
push
fwait
and
sub
stos
std
ss
inc
push
mov
mov
sbb
xor
mov
into
int
and
cmp
mov
sub
leave
push
mov
adc
or
mov
nop
fsubrs
arpl
into
ror
jo
inc
jnp
inc
ljmp
adc
xchg
push
pop
add
lea
scas
packsswb
jne
stos
add
push
int3
xchg
inc
jne
or
dec
lods
push
jae
test
push
pop
ret
add
mov
push
or
dec
cmp
clc
dec
xchg
nop
mov
sub
aam
cmpsl
js
add
and
and
push
repnz
xchg
or
dec
mov
dec
int3
mov
inc
jo
xor
sar
push
ret
pop
notb
cmc
movsb
or
mov
sbb
push
pop
add
cmp
dec
push
mov
shlb
or
fldcw
repz
mov
sub
push
push
jl
js
lret
arpl
cmp
cmp
into
loopne
and
pushf
adc
cmc
or
adc
push
xchg
jge
or
lret
push
jl
and
dec
prefetcht1
inc
ret
js
mov
pmulhw
add
pop
fstp
jecxz
loopne
xor
adc
loopne
pushf
test
fwait
xorps
in
mov
pop
repz
js
xor
xlat
out
shlb
out
or
fsts
jmp
dec
push
out
aaa
push
and
jae
push
test
adc
adc
mov
mov
jns
adc
fldcw
fdivl
test
adc
shll
mov
test
mov
xchg
fs
das
cwtl
push
sub
movsb
add
jns
jmp
inc
mov
je
mov
push
cvtps2pi
inc
pop
call
jg
rorb
in
mov
stc
lret
or
mov
adc
fidivl
push
scas
cmp
shlb
pop
inc
int
xchg
and
mov
push
ja
or
sbb
push
sbb
ret
lcall
mov
faddl
fs
fildll
int3
inc
xlat
outsl
mov
es
lods
call
dec
sti
sbb
pop
xor
push
lahf
aad
shlb
or
or
push
int3
jmp
into
gs
testl
rcr
aaa
pusha
mov
add
cmpsb
pop
lock
out
test
gs
mov
add
mov
lcall
mov
xor
xchg
xor
pop
mov
loop
mov
xchg
popa
push
stc
int
das
sub
pop
sub
std
push
les
cld
js
icebp
test
addl
jle
jae
adc
repnz
adc
insl
mov
cmp
xor
js
cmp
or
lea
push
test
gs
arpl
or
xchg
adc
lahf
int3
repnz
cmpsb
test
adc
incb
cmp
add
lret
xchg
jno
jnp
jns
popa
mov
jl
repnz
aad
pop
sbb
js
lods
push
jo
jge
jbe
cmp
push
call
or
in
mov
testl
adc
lcall
loopne
data16
mov
enter
mov
xor
mov
sbb
pop
rcll
push
roll
ret
add
or
cmp
pop
jmp
add
fwait
push
adc
sbb
arpl
sbb
addr16
or
xor
mov
shlb
ds
ror
rcll
outsl
imulb
cmp
jp
nop
repz
jno
popf
aas
adc
jecxz
cmc
jo
icebp
xor
xchg
sbb
jbe
lds
mov
fs
xor
jp
daa
pop
sub
cwtl
mov
pushf
ljmp
js
add
arpl
jbe
into
or
int
dec
hlt
sub
lret
fdivs
sbb
dec
mov
loop
fistps
sahf
add
and
stos
shrl
loop
fisubrs
call
sub
mov
xchg
adc
adc
cld
cli
adc
in
mov
inc
hlt
push
je
sahf
movsb
lret
fsubs
fstpl
mov
sbb
dec
add
add
sbb
push
mov
mov
xchg
pop
cmpsb
rol
pop
dec
push
dec
jae
add
subl
dec
xchg
jp
cmp
adc
or
test
aas
add
mov
cmpsl
inc
jb
je
xor
out
xor
cmp
xchg
in
popa
out
int
das
insb
int3
in
mov
data16
add
clc
push
clc
shl
pop
loop
in
std
inc
xchg
push
dec
lods
adc
xor
mov
pop
push
pop
sub
jo
jne
lahf
int3
fcmovnbe
and
xchg
push
negl
or
push
cwtl
pop
shll
fstl
fdivl
dec
jns
movsb
add
jbe
call
rep
pop
push
int
jns
movsb
in
out
cltd
enter
cltd
jns
cs
jno
arpl
and
xor
or
xor
inc
mov
repnz
sti
mov
xchg
popa
mov
mov
xor
test
adc
xor
and
fdivl
dec
ss
dec
dec
cmp
call
add
jmp
push
int3
pushf
sub
ja
mov
iret
or
add
popa
inc
pop
ljmp
fs
jl
in
cmp
les
incb
pusha
test
aad
xchg
mov
mov
loop
loopne
inc
jecxz
or
repz
mov
movsl
fdivrs
cmp
add
aam
orl
mov
scas
fs
lds
mov
sub
js
jl
lea
dec
push
mov
andb
mov
jns
lods
pop
test
gs
movsb
mov
cmp
mov
mov
pop
jmp
jb
sbb
push
btr
and
jne
leave
adc
fidivrs
xchg
mov
or
stc
xlat
fs
shll
mov
nop
insw
fadds
outsb
jmp
sub
into
xor
mov
inc
fnsave
sbb
xchg
aam
mov
mov
lods
dec
push
mov
out
call
gs
or
test
loope
nop
rorl
inc
int
push
lea
and
mov
pop
int
mov
sti
add
sahf
push
and
in
mov
repz
pop
lods
jo
rcl
adc
adc
pop
mov
mov
jne
es
enter
lea
aaa
cmp
xchg
iret
mov
push
mov
jmp
sbb
or
scas
pushf
in
jb
sub
pop
mov
fimuls
dec
leave
mov
adc
loop
nop
imul
cmp
pop
leave
das
and
or
addr16
enter
jb
ja
js
inc
andb
loope
inc
mulb
mov
movsl
jo
kmovb
ljmp
arpl
decb
dec
inc
xor
incb
loop
jmp
xor
cmp
leave
sbb
rcll
inc
jbe
dec
xchg
push
jnp
call
pop
cmp
dec
jmp
aad
pop
jb
popa
push
push
adc
ljmp
mov
mov
rcrl
mov
xchg
fidivs
fucomi
lock
shrb
movsl
inc
add
repnz
scas
xlat
fisttps
out
sub
popa
and
mov
jnp
add
cmp
rorb
in
negl
jp
mov
pop
cs
jmp
aam
cmp
insb
xchg
sbb
cwtl
adc
push
jnp
and
mov
test
or
ljmp
and
xor
ret
add
popa
add
push
inc
add
or
jmp
test
in
cmp
pop
mov
int
dec
aas
andb
icebp
fistpll
fsubs
mov
lahf
mov
dec
lret
ss
fldcw
js
test
nop
add
daa
add
cmpsb
sub
and
jl
inc
sub
xchg
pop
popf
int
outsb
push
push
mov
mov
scas
sbb
iret
cmp
mov
jg
andl
adc
scas
fucomp
sub
sub
cwtl
push
test
lahf
cmp
and
pop
or
jno
mov
leave
fwait
iret
jnp
out
imul
xchg
push
pop
cmpsl
adc
or
rclb
aas
stos
loopne
mov
dec
imul
std
sub
fldz
jno
mov
sbb
pop
stc
cmp
or
dec
push
or
shrb
xor
xor
test
pop
push
mov
clc
shll
lea
add
test
pop
divl
mov
or
adc
sub
and
adcb
push
and
lret
hlt
leave
xchg
daa
aaa
into
xor
repnz
or
mov
jbe
adc
dec
iret
pushf
cmp
mov
push
bound
cltd
aad
sbb
jo
aaa
popa
or
inc
cli
loope
leave
popa
sbb
fidivl
dec
std
jns
pop
cmp
jns
mov
incl
scas
or
xchg
shlb
adc
mov
aam
xchg
push
shr
or
push
push
sbb
pop
cwtl
orb
and
je
sub
mov
outsb
fmull
pop
sahf
xor
push
movsl
xor
imul
rcrl
popa
or
cmp
cli
fxch
inc
cmpsb
xor
bound
or
loope
mov
popa
das
mov
mov
add
fwait
add
cmpsl
aam
push
pop
ret
push
adcl
push
pushl
cmpsl
pop
push
xor
push
mov
sbb
fisttps
popf
cmp
push
adc
push
insb
mov
aaa
cmp
mov
jnp
insb
icebp
stc
or
out
push
sahf
faddl
lds
jns
xchg
dec
cmp
outsb
iret
je
aas
xor
inc
adc
lret
pushf
frstor
fs
inc
cwtl
add
std
mov
push
ljmp
idivb
add
push
xchg
xor
je
js
rol
or
js
push
inc
mov
add
outsl
mov
adc
test
pop
dec
pushl
in
xchg
outsb
das
loopne
dec
cmpsl
mov
sahf
xor
push
dec
in
sahf
xor
jne
xorb
adcb
imul
mov
pop
and
cmp
sbb
nop
cmpsl
stos
pop
or
mov
les
push
aad
fcmovnu
jp
loop
js
sbb
mov
mov
mov
out
dec
inc
or
enter
mov
in
jge
into
jmp
pop
out
frstor
into
mov
cmp
fs
mov
mov
test
ljmp
inc
and
imul
push
push
pop
mov
sbb
insb
mov
xor
into
mov
pop
je
sbb
iret
inc
push
in
cmc
sub
jno
jl
repnz
add
push
pop
jae
jmp
xor
mov
test
rcrb
cmpb
movsl
call
daa
cmp
xor
iret
mov
pop
lds
add
repz
cltd
jno
mov
jns
stos
mov
arpl
aam
and
sub
add
jmp
scas
dec
cs
dec
bnd
sbb
or
lea
xchg
scas
cli
repnz
sbb
cmp
leave
pop
push
push
cltd
add
in
xchg
sbb
dec
loope
cli
insb
xchg
xchg
stos
xor
mov
adc
inc
mov
inc
idivb
in
mov
jge
push
imul
fisttps
outsb
jecxz
pop
daa
push
aad
inc
xchg
rcrl
sbb
push
inc
gs
cmpsb
pop
das
sbb
adc
xor
loope
mov
out
loopne
mov
sub
xor
mov
repnz
repnz
lahf
in
push
and
lret
imul
imul
cmp
push
xlat
push
ja
fldt
sub
fnstenv
jns
les
sbb
mov
stos
add
dec
nop
fldt
mov
js
pop
add
adc
jb
or
mov
xor
xchg
movsb
or
int
popa
pop
sbb
scas
lahf
sarl
add
out
jne
cmp
adc
fildll
insl
in
fnstcw
std
xor
or
mov
dec
loopne
add
cld
push
subl
popf
enter
push
pop
adc
movsb
scas
in
cmp
pop
xchg
mov
xchg
mov
loopne
dec
xor
outsl
adcl
nop
shlb
lods
cmovp
iret
xchg
imul
loop
sbbb
dec
notb
sahf
xchg
or
bound
inc
add
jbe
leave
rclb
xchg
ret
push
push
xchg
insl
jg
cmpsb
xor
cwtl
jp
pop
test
cmp
lds
lea
adc
bound
in
inc
pushf
jae
mov
iret
mov
int
enter
loopne
push
cld
stos
lock
mov
jno
xchg
test
xchg
out
mov
xchg
mov
ds
mov
jne
shll
adc
mov
scas
and
cmp
and
mov
rcrl
in
add
dec
pop
imul
jno
rcrb
pop
jnp
sub
jg
jb
jb
pop
lret
outsl
cltd
jnp
in
jo
cli
push
or
lds
mov
loopne
sahf
jmp
es
ss
sub
mov
inc
daa
lret
and
xchg
test
imul
sbb
sarb
inc
sbb
inc
dec
shrl
dec
cmp
pop
mov
stos
xchg
mov
jg
dec
cs
arpl
xchg
mov
xor
jmp
xor
out
movsl
push
inc
lods
jae
mov
fs
leave
add
dec
pop
jl
and
mov
aas
repz
pop
mov
outsl
in
popa
or
push
sub
sti
pop
scas
pop
imul
adc
sarb
add
jne
subb
ret
adc
imul
pushf
jae
mov
bound
out
pop
mov
mov
xor
xor
scas
pushf
cmp
xor
mov
fwait
pushf
movsl
bound
mov
cmp
mov
lock
ret
cmp
fnsave
or
repnz
repz
pop
loopne
and
pop
arpl
out
lret
dec
push
rorb
arpl
movsl
jo
in
pushf
pushf
clc
jb
lods
push
cmp
jns
jle
jne
js
pop
jecxz
mov
std
arpl
test
inc
aad
int3
mov
and
push
mov
lds
int3
or
mov
inc
sub
jle
sbb
and
push
fwait
jne,pn
fdivp
jg
and
shr
and
xor
sub
mov
jp
cmp
je
mov
dec
xchg
pop
lea
pop
out
mov
in
and
pop
sahf
mov
sub
jl
and
test
adc
ret
push
mov
mov
loope
inc
mov
sub
jg
clc
dec
mov
push
pop
ror
xor
mov
test
cmp
in
jge
dec
neg
and
movsb
jmp
nop
imul
and
cmp
or
fs
xchg
jb
adc
bts
push
jg
lahf
ret
mov
push
ds
jno
leave
pop
cs
sbb
addr16
xchg
jne
call
ror
fdivs
leave
adc
cmc
and
dec
or
sbb
push
adc
mov
insl
inc
xsha1
cmpsb
into
in
ljmp
dec
jne
mov
ljmp
aam
repnz
scas
mov
xchg
jmp
sbb
cmp
adc
out
adc
dec
lcall
jno
pop
jne
enter
test
and
mov
mov
push
or
rcrb
arpl
mov
jne
add
push
mov
xchg
mov
in
cli
outsb
movsl
inc
ljmp
insb
cmpsb
das
rclb
subb
mov
cmp
jno
int
ss
roll
or
js
mov
mov
mov
not
xchg
mov
loopne
pop
xchg
paddw
scas
fisubrs
pop
xchg
jl
mov
out
cs
sarl
test
push
cmp
add
andb
lret
insb
pop
nop
nop
and
fisubrl
jecxz
leave
pop
sbb
push
xlat
mov
mov
pop
mov
cmp
xchg
cmp
in
cmp
sar
cmp
mov
xchg
xchg
inc
sarb
xchg
sbb
push
cmp
mov
push
mov
sub
xchg
jecxz
mov
les
mov
cmc
pop
push
fwait
inc
adc
jnp
popa
jnp
mov
jp
les
fiaddl
sarw
sbbb
xor
cmpsl
loop
loope
iret
lds
push
popl
jnp
and
pop
push
es
es
mov
dec
idivb
insb
jnp
test
jns
shrl
or
xchg
pusha
cld
push
jg
hlt
push
les
cwtl
data16
pop
daa
or
dec
pusha
xchg
xchg
inc
out
cmp
xchg
inc
sahf
adc
lret
sbb
jbe
add
and
bound
shlb
push
dec
xchg
repz
cmc
pop
std
jmp
pop
insl
xchg
cmp
mov
dec
add
mov
bound
sub
scas
push
pop
xor
bound
test
fdivp
push
test
enter
call
jb
imul
push
orb
dec
dec
popf
xchg
loope
push
insl
dec
xorl
sbb
data16
or
add
sub
test
dec
popf
mov
ret
mov
jns
adc
pop
nop
pop
jp
lahf
cmpsl
inc
mov
jae
cmp
jns
aad
lahf
adc
andb
jg
sub
imull
nop
mov
push
int3
orb
stos
in
mov
adc
mov
fisubl
sbb
jnp
std
ficoms
push
or
aaa
cmpsb
and
jle
pop
test
es
cmp
cs
sbb
addb
aaa
sbb
mov
cmp
jp
sub
std
xchg
add
adc
mov
repnz
xchg
add
adc
cmp
cmp
insb
mov
adc
test
push
fidivl
sbbb
and
js
mov
lahf
das
pop
push
imul
scas
in
adc
cmp
pusha
xor
or
push
sbb
adc
test
cmp
xor
loop
push
push
jle
mov
dec
test
push
nop
jmp
mov
imull
push
loop
pushl
mov
inc
inc
inc
test
dec
mov
fs
cltd
or
jae
gs
repnz
int3
ljmp
scas
cld
inc
lret
pop
adc
mov
mov
xchg
fsub
les
xor
cmpsb
int
lods
jnp
out
gs
xor
shl
rcl
sub
js
das
dec
pop
popf
cmpsl
mov
lods
fsubrs
or
mov
jbe
jae
xlat
mov
pop
pop
rol
rcrb
fisubs
roll
cs
mov
or
in
push
mov
ret
adc
xchg
jns
stos
in
pop
mov
ja
test
leave
nop
insl
cwtl
xor
add
dec
dec
or
pop
scas
add
aaa
add
repnz
movsb
sti
mov
jmp
sahf
inc
push
mov
mov
sub
lret
js
out
jecxz
add
or
cmp
sub
jmp
xchg
push
in
push
stos
mov
jbe
in
lds
out
sub
aad
cs
jp
movsb
mov
add
imul
bound
push
es
out
data16
add
sub
lock
xchg
sti
xchg
inc
xor
sarl
adc
cmp
repz
inc
fadds
mov
dec
xor
lods
mov
fistl
jb
sti
je
call
push
cmp
cmpsl
push
pushf
jae
popa
jecxz
es
jo
sub
les
add
pop
inc
sti
mov
imulb
roll
ret
pop
or
rclb
push
add
mov
jo
mov
and
push
les
xor
cmp
and
or
cmp
in
pop
lahf
popf
mov
pop
pop
inc
pop
jg
inc
loop
outsl
lea
adc
imul
stos
movsb
xorl
jb
mov
or
fiaddl
scas
sbb
adc
xlat
push
jl
sarb
cmc
inc
jg
ss
andb
ss
rcl
cmp
imul
das
dec
lods
lret
or
inc
ja
jbe
mov
popl
mov
push
jle
dec
jmp
loope
or
nop
inc
aam
dec
pop
jl
cmp
dec
fldcw
sbb
fs
lahf
repz
int3
dec
push
pop
jns
pop
push
xchg
in
scas
xor
xchg
mov
mov
mov
push
lahf
and
push
popa
pop
icebp
test
xchg
addr16
test
cmc
inc
and
inc
jp
and
dec
jge
or
movsb
push
fsubr
int
xor
mov
cmp
and
push
aad
inc
in
jecxz
test
cmp
ror
push
je
cmpsb
outsl
xor
mov
mov
loop
sub
bound
sub
mov
push
fsave
xchg
adc
pop
ror
stos
pop
jns
rorl
dec
pop
bound
lcall
insl
jns
nop
pushf
lret
outsb
in
push
mov
lds
imul
inc
adc
test
imul
scas
mov
xchg
leave
and
ja
cmp
int3
iret
cmp
xchg
pop
xor
mov
add
inc
xor
jnp
inc
ficomps
es
cld
cmc
adc
mov
enter
aas
leave
cmp
and
into
in
test
gs
adc
xchg
fstps
inc
mov
mov
int
jno
push
imul
popf
daa
lea
dec
in
add
mov
iret
sbb
dec
and
push
scas
leave
jae
mov
xchg
call
adc
in
add
jns
mov
scas
nop
dec
adc
in
mov
movsl
bound
lods
es
cld
inc
mov
pop
insb
in
cltd
adcl
aad
and
sbb
fisubrs
sbb
out
pop
repnz
inc
stc
adc
dec
icebp
mov
sub
jge
jl
or
push
mov
lret
orb
push
mov
pushf
loopne
fildll
mov
pop
xchg
mov
dec
or
or
and
mov
add
imul
scas
dec
js
xor
push
lcall
cmp
cld
das
test
cld
inc
mov
in
xor
xchg
call
jo
jle
push
inc
cmpsl
lret
mov
lahf
out
push
aaa
leave
data16
cmp
aad
pop
jge
enter
icebp
ret
pop
aaa
xchg
and
sub
movsl
cmp
lds
aas
mov
cmovg
rorb
add
adc
push
sbb
lret
xchg
mull
jge
mov
sub
push
int
cmp
push
sbb
mov
mov
scas
cltd
std
int3
pop
aam
stc
cmp
inc
xchg
push
adc
lds
cmpsb
and
push
cmp
xchg
les
out
pop
add
xor
or
inc
mov
jge
popf
scas
repnz
lcall
fsubl
test
in
pop
sbb
xchg
in
push
ret
push
scas
aam
and
fs
cmpsb
mov
std
insl
adc
mov
popf
add
adc
es
adc
cmpsl
jl
dec
mov
scas
sub
cmp
sbb
stos
lret
xchg
es
rorl
mov
outsl
imul
cmp
xor
into
sahf
icebp
mov
ss
int
ret
ljmp
test
out
sbb
pop
lods
nop
aad
mov
js
aam
pusha
jnp
dec
fdivl
xchg
push
sbb
inc
adc
xor
xchg
inc
in
add
imull
out
clc
repz
sti
xor
pop
sbb
repnz
ds
mov
xor
es
incl
jae
daa
adc
cmp
dec
jns
sub
int
mov
mov
add
lods
push
imul
cwtl
sbb
add
push
test
stc
and
push
int
push
xor
inc
leave
in
mov
mov
test
and
adc
ror
sub
sub
pop
xlat
mov
xor
in
cmc
out
repnz
call
push
nop
popf
xchg
push
xlat
xorl
stc
pop
push
mov
mov
dec
clc
sbb
inc
cmpb
sub
cmpsl
xchg
adc
xlat
push
xchg
and
dec
xlat
pop
push
pusha
xor
into
push
mov
push
sti
mov
les
mov
cmp
push
nop
sub
add
mov
mov
dec
mov
fnstcw
jno
pop
mov
mov
mov
sbb
mov
xorl
int3
and
and
popa
jecxz
popa
leave
mov
adc
pop
xor
js
xchg
iret
cld
jb
data16
imull
sbb
mov
xchg
cmp
test
pop
dec
outsb
cmpsb
cmp
outsl
sub
fsubl
sbb
jno
xchg
mov
dec
lock
out
andl
add
push
fwait
pop
add
out
mov
scas
mov
lahf
dec
sti
std
mov
mov
loop
push
std
push
or
adc
push
lds
mov
and
push
cmp
int
mov
test
dec
jb
jbe
sub
xor
sbb
mov
inc
clc
jl
mov
aas
fstpl
pop
dec
sbb
testl
stos
and
mov
xchg
sbb
and
jbe
or
or
icebp
inc
sahf
faddp
shrl
outsl
inc
insb
es
test
stos
xlat
aad
icebp
sub
xchg
into
pop
into
push
mov
fldenv
mov
aas
pushf
xchg
fistpl
stc
add
jns
fists
sub
mov
nop
push
mov
cs
cltd
and
jp
shll
jae
push
das
rorb
inc
push
inc
imul
add
cmp
icebp
dec
push
and
inc
lods
iret
cwtl
inc
inc
lcall
aad
sbb
test
or
gs
adc
or
fcoms
mov
lahf
and
or
fisttps
push
ljmp
movsb
aas
cmp
sub
imulb
xchg
xor
add
sbb
dec
ds
cld
std
out
or
sbb
cmp
fwait
push
punpcklbw
test
scas
mov
jae
imul
xchg
dec
mov
fs
outsb
inc
iret
sub
jle
sub
xchg
dec
sahf
in
inc
lcall
inc
jge
xorb
jecxz
mov
jno
outsb
pop
jge
or
leave
fisttpl
jg
out
cld
mov
mov
shll
pop
mov
add
dec
lds
movsb
repnz
lea
in
sub
mov
push
inc
push
cmp
fiadds
add
cmp
mov
push
pop
shlb
in
arpl
adc
jbe
pop
loop
sbb
das
je
xchg
mov
test
stos
inc
fstl
xor
pop
pop
ficoml
pop
mov
js
add
dec
jmp
inc
mov
fimuls
aaa
add
push
lods
idivl
mov
mov
jp
test
mov
popa
pop
sub
mov
cwtl
sbb
jo
pop
shlb
mov
fs
es
int
xor
adc
scas
push
in
push
inc
bound
dec
sub
dec
sub
fcoml
sub
mov
bound
imul
stc
test
and
test
pop
or
sub
pop
mov
ja
daa
test
stc
or
pop
or
pop
movsb
insl
jl
inc
dec
and
mov
fildl
leave
inc
popa
fdivl
clc
lods
pop
xchg
pop
lock
das
int
push
lcall
mov
dec
and
loopne
cwtl
jp
dec
dec
inc
add
mov
jecxz
or
inc
loopne
pop
or
cmpsl
pop
mov
mov
ljmp
and
jb
jae
in
dec
or
mov
loopne
xor
icebp
mov
lahf
movb
aad
mov
jecxz
adc
inc
mov
jmp
cld
lea
icebp
inc
imul
dec
mov
jns
movsb
cmpb
pop
scas
mov
cs
shlb
dec
mov
in
dec
mov
insl
cwtl
mov
or
xlat
aaa
fldt
sti
cs
jnp
xchg
mov
inc
cmpsb
cmp
inc
mov
jo
lds
inc
ja
mov
fmull
pop
scas
xor
cmpsb
xchg
cli
push
xchg
jmp
loopne
sbb
mov
xchg
iret
cmp
add
lret
je
ret
xchg
sarb
mov
in
arpl
jno
pop
mov
add
lods
rclb
sahf
std
pop
lret
or
daa
in
lock
enter
loopne
test
loope
jp
mov
ret
imul
jno
fdivs
mov
mov
out
sub
nop
push
aaa
add
pop
int3
repz
pop
mov
xor
and
xor
cmp
inc
jge
push
mov
std
int
or
cmc
cld
jmp
cmp
sbb
mov
popa
std
loop
mov
jne
loope
pusha
out
mov
rcll
jbe
lods
push
xlat
cmp
dec
cli
sbb
in
push
xchg
test
pop
jae
fldcw
sbb
imulb
cltd
xchg
icebp
jb
jl
pop
and
cld
nop
cmp
mov
xchg
loopne
arpl
inc
repnz
repnz
adc
mov
mov
add
dec
clc
testl
add
push
cmpsb
lret
or
bound
lret
fisttpll
mov
push
hlt
aaa
mov
mov
mov
repz
in
add
jecxz
push
pop
popa
adc
jne
xchg
xchg
and
cwtl
and
dec
push
add
sbb
sbb
lds
jg
xor
in
mov
pop
mov
das
xchg
lds
jnp
mov
jnp
mov
sub
pusha
pusha
sub
movsb
out
sub
jp
push
ret
push
faddp
ret
adc
fnstcw
mov
popf
add
pop
stc
jle
dec
jno
dec
xchg
xor
mov
lods
xchg
in
stos
push
test
pop
mov
push
and
pushf
lods
ds
mov
addb
movsl
push
or
or
arpl
add
xchg
int
pushf
sub
out
mov
enter
lods
jb
and
lods
and
cltd
inc
mov
popa
mov
mov
mov
mov
dec
xor
and
mov
cltd
cs
ret
hlt
cli
mov
add
add
imul
push
mov
movsl
dec
push
popf
in
dec
mov
out
pop
jno
arpl
cmpsl
jae
push
dec
shlb
xchg
dec
mulb
in
sub
sbbl
mov
filds
in
xchg
mov
xor
adc
pop
dec
jmp
fisttps
std
cmp
mov
insl
mov
vzeroupper
and
aam
mov
dec
adc
jp
cmp
repnz
popa
add
mov
mov
ret
mov
data16
adc
loopne
push
mov
cmp
fisttps
sbb
jge
cmc
out
cmpsb
in
mov
mov
divb
lds
mov
orb
xor
pop
lret
ret
mov
xor
add
pop
aam
jg
sbb
cmp
in
jecxz
addr16
ficompl
or
cld
into
out
push
pop
in
push
lock
xor
fucomip
cmp
lcall
add
push
ss
mov
lret
cmp
icebp
push
push
jbe
ljmp
pop
mov
mov
stc
mov
ja
out
add
inc
inc
xchg
sahf
stc
pusha
int
into
pop
out
sub
adc
mov
push
loop
gs
mov
fwait
pop
lcall
mov
popa
xchg
inc
adc
loop
sbb
push
flds
cmp
stc
adc
loop
cmp
aas
sub
out
jge
xchg
push
out
adc
scas
pop
adc
lret
mov
faddp
lahf
pop
ret
jle
jle
pop
hlt
adc
adc
sbb
mov
or
stos
rcrb
insl
ret
insl
das
xchg
jle
inc
fdivrs
mov
or
cmpl
rorl
clc
push
rol
popf
jbe
lret
and
into
mov
mov
jbe
decb
sbb
pushf
testl
sub
mov
push
gs
jge
cwtl
or
in
ret
negb
jo
in
ja
out
fwait
push
jle
arpl
mov
bound
add
mov
shl
xchg
push
adc
xchg
dec
shll
pop
insl
cmp
or
jnp
add
jg
sbb
push
cli
and
dec
mov
push
jns
or
xor
xor
sub
mov
fwait
mov
sub
sub
loopne
jne
or
mov
push
pop
sahf
sub
cs
jne
cwtl
lock
add
sbb
mov
arpl
popa
mov
cmp
std
mov
mov
pop
inc
mov
arpl
lret
jl
xor
mov
shl
int
mov
sbb
mov
mov
outsb
imul
push
or
lock
faddl
add
movsl
sub
out
mov
les
insb
adc
scas
stc
xchg
lods
lcall
outsl
mov
jmp
fcomps
pop
inc
push
rolb
imulb
popa
push
or
pop
cmpsl
xchg
inc
mov
mov
cmp
push
jmp
push
imul
sub
sub
xchg
fdivl
xor
dec
stos
and
jmp
inc
leave
jne
mov
scas
push
jbe
adc
or
jg
loope
aad
daa
xor
cmp
xorb
aam
mov
fsub
std
inc
in
outsl
roll
int
push
jmp
xchg
shlb
mov
clc
movsb
xor
outsl
and
mov
out
pop
sub
mov
adc
rcll
lds
and
sarb
nop
call
sub
pop
add
loopne
das
insl
ja
les
loope
mov
mov
adc
lahf
push
addr16
scas
ret
and
enter
inc
repnz
push
data16
sbb
in
mov
insb
pushf
mov
mov
hlt
fldt
stc
jmp
out
fs
mov
lcall
pusha
das
dec
popf
scas
add
add
rcll
std
sbb
into
jb
xchg
insl
loopne
insb
inc
test
mov
mov
mov
mov
mov
aas
push
mov
leave
lock
mov
mov
cmp
shrl
dec
subl
add
inc
xchg
jo
jnp,pt
or
adc
jnp
ds
add
in
data16
jbe
xor
clc
cmp
dec
mov
scas
jp
sbb
sbb
out
test
loope
fxch
mov
pop
outsb
inc
je
data16
movsl
lock
jns
sub
out
lds
add
sbb
in
xchg
push
addr16
dec
ret
cwtl
sbb
xor
dec
fistl
int3
mov
cmpsl
mov
and
cmp
test
and
adc
incl
mov
push
sbb
inc
out
fisttpll
out
or
test
out
aad
dec
in
add
in
xor
sub
sub
push
xor
in
push
es
dec
sub
lods
jbe
xor
subl
cs
or
lea
jp
popa
test
jp
rcll
insb
and
cwtl
sub
filds
inc
xor
sub
daa
or
movsl
jo
cmpsb
int3
bsf
adc
jg
push
sub
sbb
jle
into
or
leave
testb
add
jno
fwait
les
jl
imul
push
or
pusha
inc
jecxz
dec
sahf
outsl
adc
xor
push
cld
mov
cmp
fdivrl
cs
aaa
or
je
dec
lods
aas
sub
das
pop
mov
fildll
pop
lds
mov
xor
push
bound
ja
xchg
or
in
sbb
ljmp
lods
fs
clc
xchg
xor
push
push
xchg
lahf
cmp
inc
jle
popa
mov
lds
out
sbb
cmp
movsl
and
sahf
lcall
push
mov
