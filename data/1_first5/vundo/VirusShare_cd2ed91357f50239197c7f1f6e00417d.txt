out
jns
jp
xchg
js
mov
xchg
stos
add
mov
pushf
inc
movl
inc
xor
inc
popl
add
adc
xchg
xchg
rorl
popl
cmp
inc
adc
idivb
add
subl
fwait
rorb
pop
pop
push
shr
xchg
cmp
repnz
sbb
cltd
repz
fdivs
push
repnz
cwtl
mov
orl
push
mov
cltd
mov
mov
add
xchg
test
xchg
in
call
lret
adc
dec
aas
test
xor
js
xchg
mov
xchg
or
xor
cmpsb
mov
mov
dec
xorb
fldenv
sbb
pop
test
orl
mov
lret
orl
insb
stc
xchg
push
xchg
in
ja
mov
insb
scas
mov
cmpsl
add
iret
ljmp
and
mov
xchg
cwtl
jl
ret
jno
xlat
in
orb
jae
out
orl
mov
or
ret
mov
fistpll
adcb
push
or
add
scas
jo
jg
iret
or
dec
jnp
inc
fldcw
cmp
filds
cmp
icebp
push
imul
xchg
loope
add
adc
pop
pop
xlat
inc
adcl
cmp
mov
repnz
test
xlat
mov
test
mov
es
pop
sbb
fcoms
test
imul
lahf
cld
lods
dec
shr
lahf
or
in
jmp
mov
std
adc
mov
hlt
call
bnd
aam
insb
lods
lds
push
xor
xchg
or
outsl
cmp
cli
arpl
inc
iret
mov
orb
add
int3
dec
sti
cmp
jns
xchg
mov
repz
filds
iret
popl
hlt
sub
adcl
into
addl
popf
add
xchg
andl
outsb
lea
adc
dec
pop
lcall
xchg
rcll
loope
pop
or
xchg
mov
inc
sbb
jg
popa
or
or
xchg
xchg
and
in
cmp
out
loope
repz
xchg
mov
xor
push
add
add
mov
mov
fs
jmp
xchg
and
inc
leave
push
and
and
jmp
push
xor
lahf
dec
push
repz
out
mov
stos
std
mov
cwtl
pop
push
jl
adc
testl
jp
mov
pop
xor
sbb
loope
imul
frstor
sub
fidivrs
imul
mov
inc
int3
shlb
pop
pop
std
or
add
outsl
rcl
cwtl
mov
fnsave
and
mov
dec
sbb
cmpsb
mov
test
ficoms
jbe
adc
out
xor
les
lret
ljmp
js
test
test
xchg
es
mov
inc
cmpsl
int
movsb
mov
shr
pop
xor
or
enter
jno
sub
cmp
xlat
rorb
add
push
xchg
sti
ret
loope
jle
adcl
jo
add
mov
insb
nop
xchg
adc
ret
cli
test
xchg
add
add
or
lds
xchg
push
in
data16
or
jo
pop
je
mov
or
lahf
xchg
cmpb
or
xchg
outsb
mov
mov
push
enter
pop
and
mov
sbb
xor
xchg
aam
js
nopl
ret
cmp
lret
andb
mov
fcomp
fmull
loope
dec
sub
jmp
adc
push
imul
ja
add
lock
mov
or
mov
orl
sti
lcall
pushf
push
push
dec
pop
test
in
jbe
xchg
fstpl
call
mov
repz
or
mov
push
outsl
pop
inc
mov
cmp
js
push
imul
sub
call
aas
mov
pop
andb
icebp
dec
cmp
sub
add
cmp
leave
dec
rorl
sub
sahf
das
mov
xchg
cmp
bound
mov
pusha
sbb
nop
divl
fdivr
and
add
test
popf
iret
xlat
xchg
cmp
imul
xchg
imul
xchg
ficoms
sub
xchg
testl
and
jmp
ret
sbb
mov
test
in
js
movsb
outsb
mov
adc
in
dec
cmpsl
pop
mov
fwait
pop
test
or
xor
iret
daa
addb
imul
outsb
out
inc
clc
jo
sbbl
insl
cmp
divl
dec
mov
push
and
cmpsb
cli
or
xchg
popf
inc
subl
int
xchg
mov
out
jo
mov
cmpl
dec
cmc
imul
inc
jge
mov
imul
movb
fidivl
push
mov
mov
arpl
mov
insb
je,pt
jnp
jl
cmp
sub
nop
jnp
push
pop
jne
jne
sub
or
sub
ljmp
fwait
sub
inc
cmp
jmp
aad
sbb
ljmp
add
xchg
xchg
cmp
pop
repnz
jno
pop
rcr
mov
aam
jo
mov
xlat
incl
cmpsb
push
xor
aam
sub
call
rcll
cmp
mov
cmpb
cmpl
mov
inc
faddl
xchg
test
cmpsl
mov
inc
sbbb
nop
loopne
mov
mov
mov
mov
sbb
mov
inc
jbe
push
in
jno
xor
orb
xor
test
push
mov
xor
lret
mov
add
pop
jecxz
insl
xor
mov
mov
jg
or
and
push
js
dec
dec
add
jmp
cmpsl
mov
fwait
xchg
dec
loop
leave
popf
out
aad
xor
movsb
xchg
adc
incb
faddl
mov
push
dec
mov
std
rclb
pop
cld
dec
jne
xchg
cwtl
clc
mov
imul
pop
mov
in
nop
cmp
mov
mov
mov
push
insb
mov
xor
addb
xlat
mov
pushw
xchg
aam
xlat
pcmpgtw
das
xor
pop
popl
fcoml
js
fidivrl
add
js
inc
jle
mov
mov
test
cmpsl
shrl
dec
dec
rcll
test
xorl
rcrl
add
inc
xchg
add
ss
and
sub
in
ret
repz
aaa
sub
mov
adc
xchg
xlat
pushf
in
lea
pop
mov
out
xchg
ror
inc
cld
mov
fisttpl
jmp
push
fcmovnu
mov
in
rcl
mov
mov
adc
jmp
loope
push
aam
into
adc
xlat
adc
call
pop
insb
popf
addl
jmp
cmpsl
rcll
mov
sub
push
aas
adc
nop
out
in
scas
popa
dec
pusha
lret
mov
push
cmp
cli
lea
cmp
xchg
ja
mov
mov
loop
jge
xchg
mov
mov
xchg
rcrl
jmp
cli
mov
cmpl
mov
jbe
sbbb
mov
mov
cmp
hlt
gs
mov
xchg
outsb
rcll
jne
xlat
sub
push
loope
loope
movsb
pop
pop
roll
addl
pop
sti
mov
repnz
insl
jecxz
xchg
setp
in
mov
sub
xchg
mov
mov
add
inc
mov
pushf
mov
xchg
cmp
nop
jg
hlt
xchg
mov
cltd
rclb
test
scas
mov
jnp
jg
les
and
inc
insb
jg
xchg
pop
mov
movd
jg
or
push
xchg
or
jp
shlb
mov
lods
inc
inc
jg
xchg
test
sbb
jp
jnp
pop
push
ret
inc
test
xchg
mov
cmp
or
fsts
push
ja
jno
xchg
mov
xor
xchg
or
mov
sbbl
popf
out
or
xchg
sarb
scas
scas
pop
push
cmp
add
daa
pop
in
scas
pop
lret
insl
cmp
movl
push
push
mov
pusha
jle
pop
leave
xchg
movsl
push
xchg
and
rcrb
mov
negb
negb
xor
xchg
xor
rorb
shr
cmc
xchg
xchg
cmc
mov
fdivl
cmp
into
xchg
test
lret
xchg
pop
aaa
xchg
and
inc
or
xchg
mov
filds
repz
arpl
xchg
scas
mov
scas
jne
or
sbbl
cmp
xchg
lahf
push
cmpsl
call
fwait
mov
push
xor
mov
sbb
xor
mov
mov
mov
add
addr16
push
and
push
fildl
pop
sahf
dec
jnp
cmpsl
movsl
jmp
add
cmp
inc
xchg
int
clc
lea
add
aad
xchg
int3
ret
pop
add
imul
test
xchg
seta
into
bnd
mov
arpl
roll
rcrb
insl
jmp
ss
repz
ss
xchg
fisubs
push
loopne
jae
mov
repnz
jnp
popa
jmp
cmpsl
subl
xchg
hlt
sahf
sub
xor
aas
inc
pop
push
sarl
push
scas
test
pop
out
repnz
sar
ss
or
xorl
pop
sub
imul
mov
mov
loope
xchg
je
push
mov
mov
mov
xchg
add
xor
xchg
sub
mov
cmpsb
outsb
push
jno
xchg
rorb
mov
mov
push
mov
ja
and
xchg
stc
mov
stos
shll
inc
cli
mov
jg
mov
leave
mov
pop
fldenv
sbb
sbb
divl
nop
push
sub
nop
dec
movsb
icebp
xchg
push
adc
jge
xchg
insl
push
push
xchg
outsb
leave
movsb
dec
inc
outsb
jns
jg
mov
fwait
xchg
cltd
adc
xor
jo
mov
cmp
iret
mov
fldl
es
clc
cmp
mov
inc
push
cli
xchg
xchg
push
sbb
fcos
repnz
mov
lods
ja
stos
ja
cmp
aad
lds
stos
ljmp
loope
insb
xor
or
inc
lods
movsl
add
pop
outsl
add
or
xchg
dec
xchg
adc
imul
jnp
call
addb
insb
test
addr16
pop
repnz
xchg
cltd
adc
out
pand
mov
xchg
mov
sbb
mov
stc
lahf
or
pop
pushf
pop
sbb
or
repnz
sbb
mov
stos
ljmp
cmp
pop
xor
insb
push
xchg
shrl
cmp
lods
inc
add
fmull
dec
ds
mov
repnz
jb
mov
test
jb,pt
daa
and
xor
scas
mov
lcall
sbbl
pop
mov
rcrl
fldenv
add
mov
div
jp
rcll
inc
hlt
popf
es
xchg
jns
pop
or
push
xchg
mov
popf
mov
test
adc
xchg
cmp
pop
add
dec
sub
bnd
repz
in
push
mov
xchg
fadd
dec
dec
mov
and
xchg
repnz
inc
adc
push
inc
fldl
inc
xor
xchg
push
jl
dec
inc
fmull
or
push
add
stos
ss
cmp
fisubrl
push
in
test
enter
pop
test
mov
ja
movsl
mov
cmpsb
mov
mov
push
jmp
scas
xchg
mov
pop
xchg
add
xrelease
test
js
jnp
pushf
mov
jae
clc
sub
cmc
jecxz
outsl
mov
mov
mov
xlat
xor
push
mov
lock
test
negl
jno
repz
push
iret
sbb
adc
xchg
inc
xchg
scas
cmpsl
dec
lods
jp
xchg
or
jae
imul
rorb
clc
xchg
or
or
jbe
cmpb
pusha
inc
cli
cmp
cs
incl
stc
insb
hlt
xchg
xlat
loopne
jbe
fildl
add
inc
jg
push
lahf
sti
jmp
add
lret
pop
add
rcl
xchg
xchg
sub
aad
mov
adc
and
movsb
popf
xchg
jb
rolb
mov
mov
cltd
cli
outsl
icebp
orb
mov
jo
in
lahf
cmp
xor
push
ljmp
jns
pop
data16
ljmp
es
dec
or
mov
fldenv
out
lahf
mov
push
fimuls
push
cwtl
mov
fisubrl
icebp
pushf
add
loope
mov
push
sbb
pusha
arpl
fldl
nop
xchg
push
test
out
lock
out
mov
inc
jno
xchg
outsl
in
xor
test
rcl
jle
or
pop
jecxz
rorb
sahf
ficomps
add
dec
xor
lods
rcl
mov
movsb
insb
lock
js
dec
divb
mov
xor
cmp
xchg
lahf
fimull
inc
push
outsl
push
stc
xchg
mov
xchg
xor
and
cmpsl
mov
shll
ljmp
out
mov
mov
repnz
lahf
dec
insb
rorl
hlt
fcomip
mov
mov
pop
push
cs
lods
cmp
push
mov
addr16
lds
cmpsb
rclb
add
inc
adc
cli
mov
mov
adc
repz
shrl
sub
in
test
fdivs
pop
xchg
aad
pushf
xlat
pushf
mov
fnstcw
dec
push
mov
xor
jns
cmp
repz
xlat
jg
aad
test
jae
add
xchg
scas
push
fisttps
mov
popf
decb
stos
jno
inc
xchg
mov
dec
jae
stc
xchg
hlt
ficomps
cmpl
mov
aaa
in
test
test
adcb
mov
pop
sub
int
cmp
xchg
shrb
in
push
mov
or
cmp
push
test
outsl
aad
dec
mov
mov
pusha
outsb
jmp
fwait
movb
jmp
lock
test
js
popl
lret
cmc
enter
stos
addr16
cmpsb
lock
sub
int
movsb
rclb
xor
stc
mov
ja
inc
dec
fwait
test
fnstcw
mov
out
jo
test
rcll
xchg
xchg
or
call
mov
sub
out
jge
mov
xchg
subl
lds
mov
push
inc
insb
and
jbe
data16
xchg
shrl
add
mov
cmc
mov
push
jne
sub
lret
mov
stos
or
mov
mov
fdivrl
mov
mov
out
xor
jl
stos
ret
mov
out
fcompl
xchg
dec
lret
mov
pop
call
stos
xorl
xchg
imul
mov
adc
xchg
dec
repnz
mov
lds
lcall
lea
arpl
sub
out
cmpsl
lock
mov
stos
std
mov
pop
xor
mov
mov
xchg
mov
pop
or
stos
sti
pop
add
mov
lods
xor
mov
jmp
test
mov
xchg
add
insl
mov
jo
or
test
cli
or
xchg
cltd
lcall
mov
and
mov
xor
andb
insl
jae
sbb
and
push
mov
inc
xchg
pop
rclb
sbbl
hlt
adc
mov
jmp
mul
mov
add
lcall
pusha
pminub
pop
stos
aam
movsl
test
pop
mov
jmp
fcomp
push
add
lods
push
cmpsl
dec
cmp
rorb
sarl
and
pop
xchg
lahf
add
shlb
cmp
cld
pop
cmpsb
mov
xor
jle
dec
hlt
xchg
lds
mov
mov
sub
inc
lods
out
adc
out
mov
mov
pop
insb
mov
leave
loop
lods
sahf
test
push
outsl
sub
mov
in
cmpsl
fisttps
cmpsb
repz
add
ret
dec
mov
bnd
mov
cmpsl
shrl
pop
jg
js
shrb
jo
mov
scas
repnz
lret
stc
mov
pop
test
dec
fisubrl
inc
shll
lea
ljmp
shlb
cmpsb
les
xchg
je
pop
xlat
lret
lahf
pop
nop
nop
lods
pop
xchg
ljmp
rorb
dec
cli
mov
and
pop
shll
mov
lods
mov
jns
inc
sarl
xchg
lds
xchg
pushf
xor
push
cld
xchg
cmc
push
jmp
aas
test
into
sbb
pop
push
mov
insb
lock
fwait
mov
mov
pop
xor
push
jecxz
mov
or
test
cvtps2pi
jmp
cwtl
insl
push
stos
add
xlat
cltd
sti
mov
outsl
or
and
cmpxchg8b
xchg
popa
jns
mov
xor
stc
cmp
jae
movsb
jne
mov
jnp
movsl
jnp
jnp
xchg
inc
cli
pushf
cmp
stc
addl
test
scas
inc
adc
inc
jns
sub
jns
icebp
test
ret
and
hlt
mov
add
adc
shlb
inc
popf
mov
popf
ss
mov
loopne
push
add
dec
insb
dec
pop
pop
in
test
mov
inc
fdivs
out
mov
fimull
mov
rcl
mov
xchg
dec
les
push
outsb
add
imul
ljmp
xchg
repz
ror
xchg
mov
inc
inc
iret
test
imul
pop
popf
cmpsl
js
pushf
xchg
cld
repnz
and
dec
call
ret
or
sub
sub
std
sub
ja
mov
mov
roll
cmp
lahf
cltd
rcr
insb
movsl
stos
fdivrl
mov
mov
adc
in
inc
mov
arpl
inc
xor
mov
inc
filds
fld
loop
test
pop
or
jns
int3
sar
or
inc
xchg
scas
sub
dec
orb
xchg
subl
dec
fld
lods
pop
lock
orl
or
mov
movsl
lcall
aam
mov
lock
inc
subl
hlt
in
xor
js
test
dec
repnz
in
js
ja
sbb
dec
xor
cmpsl
xor
jecxz
xchg
stos
mov
inc
test
dec
les
pusha
sarl
xlat
and
in
outsb
daa
xchg
stc
mov
mov
adc
rol
jg
roll
and
icebp
pop
push
std
or
outsl
es
ljmp
ret
ljmp
push
cmpsl
mov
addr16
lock
add
addb
repz
adc
movsb
push
push
xchg
les
testl
cwtl
enter
les
test
sbb
inc
xchg
and
lock
outsl
icebp
dec
xlat
pop
das
fcomi
test
aas
mov
xorl
loop
in
test
push
aaa
sarl
xor
add
loopne
lock
insl
in
mov
xor
cmp
mov
jp
pop
mov
movsb
add
push
ja
cmp
cmp
aam
jle
testb
mov
inc
loope
add
push
test
outsb
mov
cmp
pop
xchg
nop
clc
imul
call
inc
pop
cli
arpl
sbb
insl
inc
mov
scas
fwait
mov
mov
xchg
stos
dec
stos
jl
movsb
pop
push
mov
pop
or
lret
movsb
aaa
imulb
xchg
push
jmp
out
ret
enter
mov
xchg
ljmp
sti
xchg
pushf
mov
add
lahf
loop
cli
test
and
imul
xor
push
int
lret
push
cld
mov
int
scas
lcall
and
imul
cmpsb
jg
cmp
xchg
clc
js
dec
mov
inc
cmpsl
int3
inc
aas
or
test
mov
jmp
jnp
pop
in
idivl
lahf
xchg
pop
inc
xchg
test
fsubl
lea
aaa
add
fwait
pop
sub
sbb
cmovne
pop
xchg
into
xorl
add
adc
xchg
dec
pop
mov
repz
sub
mov
loope
cmp
mov
in
aam
add
xchg
pop
aam
insb
fcomip
mov
mov
adc
stos
add
fstp
outsb
test
push
mov
cmp
je
aam
ret
lock
scas
jecxz
mov
add
xchg
inc
xlat
xor
mov
mov
in
stos
cmpsl
mov
aad
lods
bt
add
push
aad
inc
test
jo
std
aaa
xor
popf
insb
mov
mov
push
mov
pop
xchg
fiadds
ja
addl
cmp
fadds
and
xlat
dec
jmp
setp
xchg
mov
mov
rolb
imul
mov
out
dec
dec
mov
sub
jp
inc
rclb
inc
mov
shlb
xchg
adc
lea
shll
arpl
pushf
mov
rcl
jnp
data16
pop
xchg
sbb
leave
mov
xchg
sub
push
mov
push
loope
data16
ficompl
imul
ljmp
aam
push
popf
sbb
sub
mov
fsubl
jns
sub
cmpl
fs
mov
int3
pop
movsb
xchg
clc
push
subl
int
adc
rcrb
mov
and
cwtl
gs
mov
mov
inc
mov
movsb
movsl
mov
xchg
into
loop
ret
dec
orb
int3
adc
or
cltd
popf
lahf
scas
fnstenv
test
add
test
push
in
sub
iret
cmp
mov
aaa
xchg
scas
hlt
loopne
sbb
aas
ljmp
pop
popf
into
fimull
mov
add
cmp
lahf
mov
mov
imull
cmp
push
lcall
scas
adc
xchg
push
xchg
inc
mov
and
xchg
aas
mov
rolb
and
xrelease
jecxz
ret
fnstsw
cli
inc
mov
aaa
movsb
rcrl
jbe
movsb
aaa
aaa
sahf
mov
add
in
inc
xchg
sbb
pop
jle
xchg
mov
aaa
fs
fucom
icebp
maskmovq
testl
dec
dec
addr16
jo
repz
mov
hlt
xor
xor
and
add
mov
pop
frstor
repz
add
dec
mov
in
lcall
mov
pop
xchg
je
push
push
or
push
xor
mov
xchg
loop
mov
push
insb
pusha
movsl
imul
fcoms
xchg
xchg
pop
xchg
adc
pop
inc
out
inc
push
popa
addr16
jo
sub
cmp
xlat
subl
lods
dec
cmpsl
xchg
test
dec
mov
cmpsl
mov
pop
mov
orb
sarb
imul
dec
mov
add
dec
out
mov
mov
mov
cs
xchg
push
orl
inc
mov
pop
inc
sahf
test
push
or
jge
mov
or
fdivrs
leave
andl
ret
andb
adc
sub
and
cwtl
pushf
pop
inc
mov
in
mov
pop
fwait
pop
inc
jnp
jno
jnp
mov
and
jnp
sbb
push
xchg
push
fisttpl
stc
push
jmp
mull
fildll
sahf
or
xchg
cld
mov
sbb
xlat
mov
fwait
lods
push
push
xor
out
lret
dec
xchg
lahf
jle
inc
stos
mov
adc
add
fnstsw
ja
push
div
cs
push
sbb
mov
mov
das
push
loopne
rorl
pop
ljmp
lods
jo
insb
lahf
push
mov
es
mov
mov
hlt
movsb
xor
cmp
mov
loop
jl
cmp
js
pop
or
outsb
in
addr16
fs
je
or
fidivs
jnp
data16
xchg
cltd
mov
test
pushf
sub
or
aad
mov
lahf
int3
mov
inc
mov
jle
jle
int3
mov
fxch
fistl
ret
or
xor
movsb
int3
insb
arpl
fidivs
rclb
fcompl
push
xchg
jmp
xchg
jmp
push
test
aam
in
xlat
mov
cmp
cmp
sti
cld
loop
mov
or
sarl
popl
pop
lock
xor
movsb
movsb
jns
jno
icebp
ja
or
xor
mov
test
jmp
enter
idivb
xchg
addr16
ret
rcrl
sarl
or
les
test
xlat
push
add
sbb
xor
pop
pop
jmp
push
enter
ret
imul
fucomp
ret
jno
popf
dec
andl
movsl
insb
rcr
mov
out
cmp
in
push
in
out
dec
mov
add
addr16
arpl
dec
inc
xchg
clc
orl
out
and
push
addr16
hlt
cwtl
xchg
xchg
call
lds
cltd
xlat
ds
push
dec
insb
fwait
cltd
push
loop
fwait
mov
fildll
sub
repnz
xor
add
mov
mov
mov
xor
inc
adc
adc
add
addb
sbb
popa
xchg
loopne
daa
outsb
ja
leave
fcmovnb
or
mov
mov
xchg
sub
ja
faddp
add
adc
cmc
fildll
fstp
add
movsl
mov
adc
fucomi
shll
xchg
mov
mov
sahf
mov
daa
xchg
and
rcrl
sbb
test
mov
stos
mov
test
mov
daa
mov
stos
xchg
dec
stos
push
out
addr16
cmp
test
inc
stc
inc
jmp
mov
xchg
jmp
filds
fimull
xchg
xchg
and
test
hlt
xor
shll
das
fcmovu
lret
mov
cmpsl
data16
test
xchg
loope
mov
pushf
test
addl
mov
shlb
test
pop
inc
pop
loopne
repnz
mov
push
addr16
lret
fs
lods
lods
jp
stos
rcll
xchg
mov
pushf
add
fisubrs
or
xor
mov
lods
je
cmp
mov
insb
shl
daa
sbb
mov
cmp
or
pop
aam
cmp
fisubs
int
ss
jo
fiadds
or
iret
out
hlt
fwait
orl
lods
xor
dec
test
jnp
daa
xor
addr16
arpl
aam
add
nop
mov
mov
dec
out
inc
xchg
pop
pop
xor
or
out
popf
shl
jnp
cmpsl
mov
iret
jo
popf
inc
jns
mov
ret
mov
test
sbb
mov
ja
je
cwtl
scas
xchg
xchg
addb
sub
mov
jne
xor
push
pop
ret
leave
sub
push
pop
push
ret
mov
outsl
or
sarb
push
in
inc
iret
cmpsb
call
jg
js
js
repz
cmpl
rcl
ja
jl
in
cwtl
dec
xchg
pop
ja
nop
cli
xchg
xor
dec
xchg
repnz
in
gs
outsl
xchg
dec
repz
mov
push
shll
inc
stos
in
xchg
xchg
inc
mov
mov
mov
jbe
mov
inc
mov
push
pop
mov
dec
cs
cmp
mov
sti
orl
pushf
adc
mov
pop
mov
mov
xor
inc
es
and
xchg
les
add
fucomi
jbe
mov
rcl
idivl
add
cmpsl
divl
cmc
xchg
cwtl
sub
mov
movsb
ret
stos
aam
jle
mov
iret
and
jbe
jae
lock
stos
dec
sarl
mov
mov
popa
sbbb
cmp
arpl
and
or
pop
xchg
ret
mov
out
inc
jae
mov
mov
jp
sub
fwait
mov
dec
mov
out
xor
mov
in
and
in
add
push
rorb
adc
out
and
nop
mov
movsb
scas
add
add
das
repz
clc
mov
fwait
mov
inc
xchg
stos
mov
sbb
pop
aaa
lods
mov
div
mov
xor
add
dec
cltd
repnz
ljmp
inc
hlt
test
insl
pop
mov
or
fsubrl
jns
inc
xchg
sub
mov
in
mov
pop
sbbl
insl
std
sub
mov
test
push
xor
repz
shr
push
mov
sbb
and
add
push
aad
xchg
enter
adc
xchg
js
shlb
stos
pop
jl
lcall
jbe
mov
inc
pop
add
mov
pop
movsb
adc
stc
clc
xor
in
adcl
testb
divl
gs
leave
loope
mov
out
mov
ljmp
push
shr
jmp
lahf
cmp
push
andl
pop
add
pop
xchg
rcl
icebp
aam
fcompl
xlat
xor
pop
test
stos
popa
sbb
xchg
scas
cmc
mov
pop
mov
pop
xchg
ljmp
jnp
shr
inc
adc
mov
insl
sub
cmp
xor
mov
xchg
fwait
push
or
lret
push
mov
test
mov
add
ss
xlat
aaa
mov
in
rcll
jns
into
adc
popa
pop
jmp
jns
rcl
push
pop
sti
push
test
push
movl
hlt
fidivrs
mov
lahf
bound
jp
outsl
sahf
xchg
push
mov
jmp
push
notb
xchg
in
xchg
test
loop
jmp
dec
push
cmpsb
xchg
lret
lea
scas
imul
add
sbb
jecxz
push
cmpsl
dec
test
mov
pop
push
fsts
sbbb
dec
jecxz
inc
add
dec
roll
xor
das
hlt
mov
pushf
push
or
insb
testb
cmp
int3
mov
aas
shlb
mov
mov
add
scas
daa
pop
lret
mov
lods
mov
xor
repnz
xor
mov
jp
pop
movsl
fisubrl
add
fmuls
cmp
xchg
fnstsw
pop
push
fiaddl
xchg
mov
mov
cwtl
out
stc
rcll
mov
enter
stos
repz
mov
testl
fnstenv
dec
shrl
aas
add
scas
repz
jnp
ficomps
mov
or
ffreep
push
or
movsb
shll
rorb
mov
pop
cli
fwait
sarl
or
sbb
in
cltd
xlat
inc
cmp
xor
int3
stos
sti
cmpsl
push
les
imul
push
fsubrs
lods
pop
xchg
mov
arpl
push
or
ret
push
mov
push
call
sbb
lahf
sbbb
push
cs
ja
out
test
nop
mov
xlat
mov
add
pop
stos
std
das
push
in
xlat
push
xor
insb
inc
out
xorl
cwtl
repz
ret
fninit
aaa
shll
dec
mov
enter
mov
or
jmp
sbb
ret
test
and
xchg
dec
xchg
lcall
divl
push
pop
jne
push
fs
repnz
test
jge
loop
xchg
sub
xchg
in
pop
lcall
fwait
movsl
dec
stc
fcoms
xor
bsf
add
cmp
repnz
stc
dec
mov
out
mov
fwait
dec
jecxz
scas
imul
mov
pop
mul
cmp
dec
dec
aad
icebp
decl
stos
push
fptan
enter
fidivl
mov
mov
push
cmp
sbb
imull
mov
and
andl
enter
xchg
jno
xchg
repz
ja
fwait
lahf
movb
mov
inc
sbbl
lahf
pop
cmpsb
add
mov
mov
imul
adc
xlat
roll
dec
cwtl
stos
cs
adc
les
int
out
mov
mov
mov
xchg
out
pop
add
dec
leave
ret
inc
cmp
add
fisttps
sbb
loopne
mov
leave
in
mov
lret
inc
mov
add
rclb
fcoms
andw
mov
dec
test
mov
push
mov
xor
mov
outsl
mov
stos
add
xor
push
push
or
sub
push
xchg
adc
mov
pop
dec
push
pop
test
cli
cld
mov
subl
cmpl
sbb
xchg
cli
jg
leave
in
in
imul
fisttps
pop
mov
sub
mov
daa
mov
jecxz
fsts
mov
and
xchg
mov
jae
mov
inc
imul
scas
leave
fisttpl
aaa
or
js
push
cmpsl
fdivrs
adc
adc
pop
mov
movsl
pop
xchg
popl
jl
repnz
aas
inc
ja
subl
push
cmpsb
xor
dec
cmp
mov
xor
xchg
int
add
inc
sub
or
movsl
inc
xlat
mov
xor
andb
cmp
mov
dec
jns
xchg
mov
and
stos
jne
xor
fistpll
mov
mov
outsl
aaa
call
mov
mov
imull
or
lahf
jg
lahf
out
cmpsb
jb
xchg
xchg
xor
mov
fcmovbe
pushf
ds
jnp
push
fcomps
mov
xlat
inc
fucomi
push
sub
aam
cmpsb
rcll
xlat
sub
push
inc
sbb
mov
jns
lcall
mov
int3
and
and
test
push
cmp
mov
test
pop
test
rcrb
xlat
addl
adc
push
xor
movsb
jecxz
jmp
ficomps
pop
test
mov
mov
fbstp
pop
out
dec
pusha
movsl
js
scas
mov
in
das
mov
loope
lcall
push
mov
inc
mov
adc
pop
cmpsb
mov
ds
cmpsl
sahf
repnz
sbb
mov
adc
add
xchg
push
pop
xlat
push
dec
mov
nop
xchg
xor
pop
xlat
sub
or
xchg
inc
jae
ja
test
adc
stos
sbb
jecxz
adc
fcmovu
push
pop
fwait
mov
mov
or
ss
xor
call
js
add
mov
mov
inc
mov
or
iret
mov
push
cmp
jg
icebp
or
xorl
add
mov
or
repz
aaa
xchg
repnz
sbb
sti
cmp
xor
sbb
mov
icebp
nop
test
mov
dec
orb
ficoms
aas
mov
cld
xor
add
mov
adc
pop
mov
and
stos
cmp
scas
cmp
leave
dec
mov
lods
push
mov
sbb
bound
loop
addr16
in
xchg
into
sub
cmpsl
or
pop
xchg
or
mov
inc
or
cmc
imull
mov
ret
loope
fmuls
repz
mov
pop
xor
xchg
xchg
mov
or
out
sysret
inc
xchg
es
push
daa
mov
or
outsl
xchg
mov
sbb
mov
scas
dec
cmpsb
inc
ja
fsubrs
ja
mov
dec
or
mov
or
sbb
adc
rclb
jb
stos
xchg
lea
jns
mov
data16
jno
outsb
ffree
pop
inc
mov
xchg
test
cmp
push
movsb
xor
inc
pop
adc
lgs
mov
dec
clts
fwait
cmpsl
pop
xor
outsl
inc
data16
flds
popl
dec
lret
out
sarl
scas
fldcw
xchg
and
cmpb
movsb
xchg
and
xchg
pushl
adc
mov
mov
test
mov
ret
jbe
addl
cwtl
mov
js
cmp
mov
push
add
cmp
pop
and
sub
dec
jns
outsb
repz
sarb
fstp
stos
sti
adc
leave
rcll
int3
and
popa
cwtl
pop
fdivs
sub
mov
xchg
pop
rcrb
add
das
imul
and
fldenv
sahf
xchg
jns
lcall
jo
xchg
jge
pop
jecxz
push
fwait
or
inc
das
cmpb
popa
cwtl
xchg
scas
mov
nop
rorb
das
imul
repnz
add
cmpsb
ret
ret
test
cmp
xchg
mov
mov
imull
mov
mov
push
outsb
popf
add
mov
mov
fwait
insl
inc
repnz
in
test
ficoms
xchg
push
sahf
int3
xchg
xor
mov
cli
lret
xor
repnz
sub
xchg
mov
xchg
mov
mov
push
add
jl
sbb
xchg
rorb
mov
popl
je
jbe
push
shll
stos
fisubl
inc
sub
fbstp
dec
js
pop
int3
mov
test
repnz
dec
adc
je
pop
inc
dec
shrl
mov
aad
xchg
sub
ljmp
test
iret
add
cmpsb
or
fwait
sti
xchg
inc
shr
mov
ljmp
cs
js
repnz
push
lret
mov
icebp
addb
out
sbb
and
cli
pop
xchg
inc
scas
lea
aad
xchg
mov
mov
stc
out
arpl
arpl
loope
js
pop
repnz
scas
mov
xchg
pop
sbb
mov
aam
ret
cwtl
xor
xchg
test
shrb
xchg
scas
out
mov
aaa
mov
movsl
push
lcall
outsl
xor
mov
fiaddl
and
mov
mov
mov
aad
scas
rcl
add
xchg
pop
jnp
dec
add
stos
xchg
inc
push
repz
das
js
pop
js
mov
jne
jae
daa
in
sbb
jmp
or
mov
mov
dec
into
outsl
xor
insl
xchg
mov
orl
jae
and
stos
cmp
test
repz
add
push
cmpsl
fwait
adc
inc
fimuls
cmp
movsb
jo
stos
fwait
repnz
mov
sahf
enter
outsl
sub
mov
xor
arpl
aaa
test
test
aam
sub
ret
adc
push
fucomip
xor
rorl
sub
outsb
add
add
aad
push
pop
aas
lahf
mov
sti
inc
les
gs
sarl
jb
scas
lds
dec
test
cmp
push
rcl
mov
push
das
dec
icebp
in
mov
push
ror
arpl
lahf
mov
aam
dec
xchg
test
int3
out
ljmp
stos
stos
cs
and
push
add
pop
rcr
outsl
lcall
pop
movsl
pop
movsl
test
mov
shrb
mov
data16
cmpsl
leave
push
shll
les
jo
mov
ret
lea
pminub
push
jo
push
and
sub
rep
sbb
pop
movsb
mov
pop
imul
imul
outsl
ficompl
mov
insl
addr16
arpl
add
xorl
sahf
es
mov
stc
xchg
jno
xchg
movl
aad
rolb
sbb
xchg
je
jmp
dec
xor
xlat
adc
dec
fcoms
icebp
shl
aaa
or
dec
xlat
rcrb
sub
mov
pop
push
jle
das
mov
push
inc
add
pop
shr
push
sbb
mov
and
mov
xchg
push
aad
je
xor
dec
adcb
pop
jge
lds
cld
add
mov
popf
ret
xor
test
shrb
sub
stos
or
orb
ret
inc
js
adc
daa
mov
fwait
mov
fisubl
stos
nop
xor
fsubr
cmpl
add
lahf
out
mov
subl
into
dec
adc
testl
xchg
xchg
outsl
cmpsb
ficoml
xor
popa
jecxz
shll
ret
int
push
push
cmp
fistpll
and
dec
lret
or
outsl
mov
outsb
and
lahf
fidivs
push
push
xor
iret
int
or
xchg
das
sbb
fisttpll
fwait
mov
cmp
mov
fnstsw
push
in
pop
mov
sahf
xchg
sarl
dec
jno
dec
mov
adcb
loopne
push
shrl
sbb
sbbl
pop
addl
pop
xor
xchg
ss
pop
add
and
dec
dec
add
cwtl
cmp
cmovge
pop
pop
ja
or
rcrl
ljmp
mov
orl
cmpsl
out
subb
sbb
pop
add
fnstcw
xchg
mov
nop
setbe
xor
shlb
adc
sahf
xchg
xchg
jecxz
xchg
loopne
movsl
pop
mov
stos
mov
xor
stos
fistpl
fwait
push
push
xlat
sub
push
sbb
jns
mov
fwait
rolb
cltd
push
jmp
mov
test
mov
push
sub
cmpsb
fdiv
push
sar
push
js
pop
jns
outsl
adc
dec
in
js
pushf
loopne
add
sub
push
stos
lahf
daa
sbbl
dec
icebp
push
add
jle
in
fiaddl
fildll
out
mov
lods
iret
test
stos
fiaddl
and
jno
cmpsl
inc
pop
pop
cmp
sub
testb
mov
jg
aam
lahf
or
xchg
setle
cmp
icebp
into
movb
xchg
test
mov
into
addr16
repz
xchg
push
pop
cmpsl
pop
dec
fcomip
cld
inc
ss
mov
lods
or
popf
out
push
push
ja
in
mov
cmp
enter
pop
mov
das
cmpsl
or
xorb
lods
mov
stos
repz
mov
mov
or
mov
in
xlat
adc
ja
push
or
mov
daa
pop
js
push
inc
or
mov
xor
stc
shll
test
mov
stc
lds
lods
lret
mov
inc
hlt
mov
ret
mov
cwtl
sub
mov
mov
add
nop
or
iret
subb
pop
mov
test
lahf
aad
inc
andl
mov
movsl
lea
mov
mov
and
fldcw
insb
leave
enter
iret
fistl
cmpsl
rclb
pop
pop
pop
inc
xlat
mov
fstpl
xchg
scas
in
into
lds
iret
xor
mov
sub
mov
xor
mov
mov
lcall
mov
ret
lahf
dec
fwait
and
inc
pop
in
hlt
clc
rolb
mov
ret
dec
cli
repz
mov
shr
sub
adc
xchg
or
dec
shrl
lahf
sbbb
mov
pop
ja
adcl
mov
mov
mov
xchg
jg
test
pop
jno
cmpsb
xchg
scas
out
jge
pop
repz
pop
cli
cmpsl
sbb
stos
stc
xchg
in
std
ja
mov
test
es
push
dec
jae
rcll
mov
lret
loopne
stos
xchg
cmpsl
out
jecxz
arpl
arpl
xchg
mov
xchg
xor
inc
in
add
cs
fcompl
not
popf
cmpsl
fwait
clc
sbb
cmp
push
repnz
fdivp
in
mov
pop
xchg
pop
movsb
jg
repz
xchg
pop
mov
lods
push
push
fnstcw
add
clc
pop
xchg
lcall
jno
cmp
pop
fldt
xor
pop
pop
in
fisttpll
mov
jl
adc
push
cli
add
xchg
test
lahf
pop
mov
pop
cmpb
lock
out
pop
pop
mov
cld
pop
pop
imul
enter
xchg
push
jl
mov
dec
inc
js
lods
jge
pop
mov
nop
sub
inc
int
fwait
mov
cmc
xor
pop
mov
fimull
lods
movb
fildll
daa
mov
stos
mov
sbb
sub
lods
movb
repz
nop
arpl
addr16
jge
fcoml
loope
mov
daa
mov
inc
or
xchg
loop
add
sub
or
stos
out
rolb
pop
fwait
xlat
scas
repnz
add
aas
push
add
add
rcrl
ret
rorb
lods
std
cli
xchg
out
repz
orl
ljmp
fisttpll
insb
ret
idivl
sbb
test
xchg
cmp
xchg
divl
out
dec
or
imul
decb
pop
dec
mov
adc
jb
outsb
dec
lods
inc
dec
loopne
cmpsl
loope
ds
repnz
xlat
lods
mov
mov
mov
pop
mov
mov
or
or
adcl
xchg
mov
mov
scas
mov
or
xor
dec
lods
pop
add
fildl
ja
adcl
cmpsl
mov
aas
pop
lea
jmp
scas
stos
movsl
xorb
adc
test
fstl
xor
cmp
insb
pop
pop
mov
xchg
mov
arpl
jg
pop
aam
xor
fdiv
mov
xchg
jecxz
dec
cmpsl
ficoms
cmp
sub
xchg
xor
cwtl
mov
sbb
hlt
jecxz
aam
xlat
sub
xor
mov
lds
stos
cli
jae
mov
stos
add
push
ret
mov
cmpsl
xlat
lahf
lahf
cmp
clc
in
push
jmp
mov
xchg
loopne
dec
out
je
and
pop
loope
add
sub
cmpsb
daa
and
jp
leave
xor
and
sub
out
xor
xchg
fidivl
sti
adc
repz
es
or
daa
sarb
xchg
jnp
stos
xchg
xchg
or
add
mov
insb
jge
xor
int
inc
cmp
or
notl
aam
sahf
rorl
icebp
mov
loope
fwait
lcall
jbe
pop
das
das
sub
sub
mov
xor
cs
jp
cld
push
xchg
cltd
push
shll
sbb
cwtl
jae
cmp
xchg
lcall
stc
mov
cmp
or
xchg
lods
push
aad
inc
mov
rol
loope
arpl
inc
lds
cmpsb
lahf
outsb
cwtl
dec
mov
mov
lock
test
icebp
add
xlat
popl
lock
cmp
iret
clc
mov
int3
mov
jmp
out
aam
cmp
add
push
pop
push
cmp
movsb
insb
lcall
add
mov
cmp
out
add
pop
faddl
lret
mov
add
push
add
add
add
push
lcall
add
push
xchg
shlb
or
and
cmp
rcll
fstl
leave
cmc
enter
add
stos
fnstcw
push
leave
ja
jp
orl
inc
aas
dec
int3
sbb
dec
sub
jne
movsb
push
in
rcrb
cmpsl
sub
xchg
mov
repz
push
fwait
rorl
jge
mov
mov
aam
sub
roll
stos
jl
lea
jnp
and
jne
xchg
test
in
enter
inc
jle
jl
shll
imulb
jecxz
pop
inc
ds
or
rcl
repz
inc
or
fildl
xchg
adc
lods
ja
jno
movsl
fimuls
imul
dec
cmpsb
test
and
jb
pusha
test
repz
dec
das
fldt
enter
or
arpl
scas
rcll
enter
xchg
or
stos
shll
shl
fcmovnb
movsb
mov
dec
sarl
fwait
repnz
std
add
fcomi
xlat
jmp
mov
scas
andb
mov
pop
add
mov
or
or
sbb
je
add
loopne
xchg
mov
xchg
aam
pop
mov
pop
push
xchg
or
shl
movsl
sbb
xchg
in
data16
lahf
push
jns
pop
sbb
adc
fadd
push
pop
or
mov
inc
cmp
imul
loope
orl
or
test
aad
daa
test
pop
cld
adc
inc
fwait
int3
or
mov
nop
push
add
js
stc
fdivl
or
or
and
mov
fsubs
ss
or
out
daa
shlb
fisttps
inc
das
mov
pop
fidivl
andl
das
mov
sbb
sbb
add
aam
mov
add
xchg
imul
jle
int
or
mull
movsb
subl
sub
sub
sti
mov
inc
fmuls
mov
jmp
sbb
rcrl
fwait
cmpsl
std
dec
cltd
mov
shl
sub
inc
rorl
dec
das
dec
jmp
test
incb
fwait
jb
dec
dec
fldcw
push
inc
mov
adc
mov
gs
leave
insb
ds
adc
leave
cltd
leave
insb
push
mov
adc
insb
leave
insb
lds
mov
pop
fwait
aam
push
test
mov
cmpsl
sbb
jns
pop
push
add
jmp
push
dec
out
sbbl
adcb
mov
xchg
out
mov
xor
xor
or
test
adc
cmp
leave
test
repnz
push
xchg
add
inc
out
or
mov
fdivl
add
es
xchg
hlt
sti
cld
cmp
mov
aad
add
mov
cld
xor
jle
dec
test
jb
ja
adc
pop
arpl
inc
mov
sbb
jmp
push
and
int3
pop
mov
jmp
fisubs
scas
mov
rcrb
fadds
adc
xchg
ret
out
xor
push
jae
or
inc
mov
aad
les
pop
pop
xchg
pop
xor
ret
jmp
xorb
movsb
inc
jnp
cltd
rcrl
aam
cmp
jno
icebp
sub
int
loopne
in
or
mov
cmp
cmp
xchg
fidivrs
mov
addl
mov
dec
mov
and
add
mov
push
add
in
inc
xchg
outsb
pop
iret
inc
dec
roll
pop
pushf
mov
adc
filds
ljmp
sti
push
mov
loope
xchg
aam
mov
movsb
sbb
add
add
enter
je
addr16
lret
cmp
jno
repz
cmpsb
sbb
sbb
icebp
jecxz
jo
jp
test
aas
cmp
or
lcall
jno
repnz
lcall
add
icebp
cmc
inc
insb
pop
movsl
loope
xchg
sbb
adc
or
fsubrp
movsb
inc
pushf
out
fnstenv
les
xchg
xchg
xlat
push
inc
inc
call
mov
sarb
push
sub
addb
int
stc
out
cld
mov
lcall
fwait
int3
push
jecxz
fwait
xchg
lods
cmp
xor
in
rcr
or
dec
addr16
or
mov
xchg
add
and
cmp
inc
pop
lret
dec
stc
inc
xor
adc
lcall
push
lods
mov
cmp
sub
inc
into
icebp
xlat
mov
jo
adc
pop
sbbb
aaa
lds
idivb
xchg
cs
mov
cmc
xchg
rol
outsl
rclb
out
cmc
aaa
lds
jnp
loope
lcall
mov
test
js
int3
inc
loope
push
or
test
xchg
pop
out
in
sbbl
adc
pop
fadd
jae
mov
inc
xor
popl
sub
cmc
dec
mov
loopne
pushl
insl
add
sub
int
das
into
mov
inc
mov
xor
adc
call
testb
insb
mov
gs
ret
mov
fmull
push
sub
inc
in
jno
paddsw
mov
jns
xlat
outsb
dec
nop
cwtl
sbb
shrl
xchg
or
sti
mov
mulb
shrb
xor
or
mov
xchg
jne
rclb
leave
out
in
ds
orl
add
xlat
test
imul
pop
pusha
inc
pop
sub
add
add
rcrl
dec
or
mov
repz
aas
repz
aam
mov
inc
test
mov
pop
inc
mov
push
nop
adc
mov
sarl
roll
movsb
in
bound
pop
lds
push
int3
mov
add
sahf
adc
leave
insb
push
arpl
sbb
sbb
mov
mov
adc
or
lock
xlat
mov
sahf
les
outsl
add
andl
iret
mov
mul
aam
loope
lds
fwait
popf
pop
mov
iret
addl
mov
rorl
mov
addl
mov
adc
pop
mov
rol
incl
mov
shll
movsb
inc
mov
fldt
cmp
rorb
test
daa
fwait
xchg
xchg
pop
xchg
sub
mov
mov
fistpl
jnp
and
cwtl
lret
pop
sbb
iret
cmpsl
out
sbb
int
out
and
fdivs
cwtl
and
mov
enter
xor
mov
sub
jmp
imul
pushf
fwait
les
xor
aaa
inc
mov
inc
cmpsl
cwtl
pop
mov
inc
shll
push
sti
or
push
mov
dec
out
inc
jge
inc
mov
adc
cmpsl
dec
insb
leave
dec
mov
pop
out
dec
pushf
les
dec
stc
dec
test
mov
ja
push
mov
int3
adc
roll
int
xchg
jle
mov
lahf
out
stos
into
scas
out
mov
dec
mov
xchg
inc
out
je
sbb
dec
test
mov
jg
outsb
dec
adc
stc
les
mov
aaa
out
insb
iret
out
jae
fdivs
jecxz
rol
jb
jecxz
jno
stc
dec
test
jo
sub
cltd
pop
fdivs
fucomi
jle
push
out
jge
out
jl
fdivs
ret
pop
out
jnp
daa
out
jp
mov
jne
repz
sahf
jle
xchg
mov
jb
adc
ss
and
shll
xlat
and
or
xchg
mov
les
ficoml
push
add
mov
sbb
imul
push
dec
or
subb
shll
stos
mov
add
ja
xchg
inc
add
push
iret
inc
add
jo
and
adc
int
push
adc
shr
dec
push
lret
orb
fsubs
push
pop
mov
repnz
loopne
fcom
lods
inc
cli
add
push
imul
std
lock
cltd
ss
stc
imul
mov
fidivs
cltd
lahf
ja
xchg
mov
leave
xchg
test
lds
in
dec
addb
add
lahf
dec
sbb
mov
fdivp
ljmp
ss
xchg
mov
mov
xchg
lods
jo
cwtl
mov
add
je
xor
jne
fsubrl
adc
or
jecxz
and
stos
arpl
mov
call
xchg
ljmp
in
mov
add
loopne
rorl
int3
dec
test
fisttpl
pushf
out
fadds
orb
in
mov
scas
aam
icebp
ret
das
leave
jae
imul
test
mov
gs
mov
fdivrs
mov
aam
pop
xchg
das
add
xor
pop
pop
aas
rclb
push
aam
xchg
xchg
roll
iret
sahf
or
jle
cmp
xor
mov
pop
mov
aaa
mov
or
xlat
cmp
jle
pop
fs
das
adc
add
pop
cwtl
push
rcrb
pop
mov
jo
cmp
mov
mov
jne
or
xchg
das
movsl
and
sub
sbb
inc
aaa
das
fidivs
subb
or
mov
cmpsl
xlat
in
mov
sahf
xlat
lods
es
movsl
adcb
mov
cmpsl
adc
cld
test
sbb
sbb
seto
cmc
fcoms
lds
das
pop
cwtl
mull
ss
fwait
and
cmp
and
dec
mov
sub
fnsave
dec
xchg
stos
mov
adc
in
rcll
or
push
lods
mov
das
clc
movsl
push
repnz
inc
scas
jnp
xor
xchg
mov
jns
xorl
dec
cmpsl
xchg
push
push
fs
mov
cmp
or
fisubs
and
xchg
or
dec
roll
insl
sahf
dec
mov
das
fcos
icebp
std
inc
or
cmp
sbb
inc
roll
shll
add
cmc
test
dec
shl
xchg
mov
mov
in
mov
lahf
push
sub
or
loop
je
jp
shll
pop
imul
jge
cmp
dec
cmpsl
ja
ficoms
and
aam
pop
xchg
cltd
cld
or
repnz
sti
mov
shl
mov
xchg
in
inc
mov
cli
mov
cmpsb
nop
ror
mov
nop
mov
cmpsb
popa
and
movsl
adc
lahf
xchg
ret
cmpsl
mov
push
add
dec
xchg
out
xor
xor
insl
daa
shl
xor
rol
out
or
push
rorb
mov
dec
sub
shll
inc
pop
scas
mov
mov
mov
sbb
insl
adc
mov
fdivl
add
push
xchg
xchg
cmpsl
fwait
xchg
std
fwait
scas
add
ljmp
cmp
push
xchg
testl
jb
in
mov
mov
insl
jo
add
or
pop
cmp
mov
test
xchg
push
ljmp
jo
clc
and
sbb
push
lods
sub
jg
jmp
cmp
cwtl
sub
ficomps
pop
fimuls
cmp
popf
daa
dec
nop
xchg
mov
dec
lods
jno
cmpsl
addl
test
pop
ret
imul
aaa
notb
cmp
imul
xor
rolb
push
call
push
xor
and
mov
out
jnp
xor
dec
cli
repz
adcl
push
mov
push
sbb
hlt
hlt
ja
test
jl
cmpb
mov
adc
push
imul
sbb
sbb
xchg
push
xchg
sub
shll
call
pushf
daa
sub
arpl
das
cmc
int3
cmp
push
or
call
out
ret
orb
mov
addr16
cs
int3
imul
ja
insl
lods
xlat
inc
cmp
push
sbbb
inc
push
negb
fsts
aaa
ret
imul
shll
movsb
mov
es
add
js
nop
xor
dec
add
mov
lods
add
cli
jns
loopne
jmp
sbb
shlb
loopne
arpl
icebp
push
ret
sti
mov
cmpsl
ror
push
stos
andb
hlt
xchg
mov
mov
mov
add
out
orb
lahf
rol
push
xchg
jbe
int3
repnz
mov
pushf
pop
and
clc
out
push
cmp
push
jg
lods
idivl
mov
gs
adcb
pop
sub
call
dec
add
mull
and
or
mov
insl
or
cmp
ret
js
mov
xlat
pop
or
mov
hlt
or
repz
mov
ret
testl
jg
xchg
sar
mov
xchg
repz
pop
jg
test
mov
test
mov
push
in
add
xlat
dec
movsl
test
es
subb
jbe
jecxz
or
mov
cltd
ret
sti
pop
add
lret
cmpb
jnp
add
test
cli
faddl
psubusb
pop
mov
mov
xlat
jns
mov
fdivl
mov
add
popf
lret
inc
cmpsl
out
mov
stos
or
cmpsl
cmp
sub
rolb
pop
sti
xchg
mov
fst
pushf
das
addr16
inc
sub
pop
divl
lock
dec
cwtl
rcll
push
xchg
sbb
clc
mov
mov
jle
jl
test
or
xorb
imul
bound
jp
dec
xlat
insl
xchg
inc
cwtl
xchg
mov
scas
ds
test
jge
sbb
pop
cmpsl
pop
das
inc
aam
cmpl
mov
mov
jae
ret
xorb
mov
and
pop
lds
lret
inc
outsl
repz
shll
std
cmp
xor
ret
pop
cmpsl
fdivl
lahf
lcall
loope
xor
xlat
out
ret
in
mov
lock
mov
out
adcb
sbb
stos
jmp
jle
lock
cltd
shll
pop
xor
pop
fdivl
or
sarl
test
adcb
ret
xchg
mov
inc
enter
push
jnp
repnz
cmp
out
mov
jecxz
jge
inc
es
fs
inc
pusha
shll
xchg
aas
xlat
xchg
cmpsl
jg
cmp
aam
xchg
test
aaa
mov
pop
pop
int3
push
dec
imul
mov
adc
pop
imul
jmp
gs
sarl
test
mov
test
repnz
cmc
loope
lods
das
aam
xor
cmp
call
xchg
mov
pop
faddl
iret
rcrb
xchg
out
cmp
sub
jae
jno
fistl
jmp
pop
lahf
mov
jnp
cmp
addl
pop
mov
cmpl
ss
int3
jae
inc
xchg
xchg
fsubrs
repnz
outsl
push
loope
aaa
loope
iret
mov
out
rcrl
xchg
loopne
ss
fldenv
mov
pop
cmpsl
mov
mov
shl
push
test
xor
fwait
jg
jge
cmpb
dec
inc
leave
sbb
lahf
aam
jmp
aam
fwait
or
pop
jo
jp
repz
inc
inc
sarb
mov
mov
xchg
pop
rcl
test
or
pop
stos
mull
sub
push
mov
mov
pop
arpl
rcll
jne
adc
jge
repz
xor
aaa
ss
cmovnp
mov
pop
or
lcall
insl
mov
xchg
mov
shll
xchg
out
xchg
mov
into
mov
rcrb
and
lret
call
mov
sub
jp
dec
add
mov
and
dec
jae
notl
cltd
xor
jge
out
leave
ror
add
mov
in
cmp
pop
push
xor
inc
adc
mov
pushl
inc
and
ret
mov
aad
cmp
stos
iret
je
insl
stos
xor
mov
xor
scas
xchg
orl
xor
xchg
jmp
int3
iret
xchg
xchg
negb
or
fisttpll
pop
mov
in
flds
jg
sub
and
mov
or
movsl
xchg
jmp
sbb
add
mov
and
negl
lret
js
jo
mov
leave
setle
mov
lahf
insb
mov
jb
shl
or
mov
lods
lock
dec
loope
ss
push
daa
insb
adc
sbb
fcmovu
in
and
repz
fwait
add
xchg
xlat
xchg
adc
xor
das
les
aam
cmc
pop
xlat
mov
mov
addr16
shlb
stos
ret
mov
jmp
imull
mov
je
sahf
xchg
call
dec
lods
xor
cmpsl
test
fldenv
add
add
pop
xchg
dec
lods
repz
mov
mov
roll
inc
cmp
mov
dec
mov
es
xchg
pop
push
sbb
out
mov
scas
mov
push
fiaddl
pop
jmp
jbe
sub
inc
inc
adc
out
adc
sub
xor
in
loope
dec
dec
pop
pop
sub
dec
lds
inc
daa
icebp
addr16
fwait
xchg
mov
je
in
xchg
dec
aaa
das
jnp
cld
in
pushf
mov
lea
pop
bound
ficompl
sbb
nop
pop
loop
jmp
scas
nop
xchg
arpl
subl
ja
sub
mov
mov
ljmp
addr16
outsl
or
xchg
daa
mov
fdivl
pop
das
dec
push
pushf
shrb
lods
pushf
lret
inc
dec
jg
cmc
mov
cltd
mov
mov
insb
cwtl
lcall
test
shll
leave
fcomp
cmp
push
add
jno
test
leave
add
xor
dec
sbb
push
dec
push
xacquire
mov
ljmp
xchg
xchg
repnz
pop
aaa
clc
dec
imul
in
add
and
xchg
mov
dec
mov
aas
adc
aad
lods
mov
xchg
arpl
pop
mov
fadds
xchg
into
lcall
shrb
jle
out
xor
or
ja
sub
add
movsl
xchg
add
add
xchg
shll
in
mov
adc
push
andb
repnz
inc
scas
xchg
xchg
sbb
js
orb
or
inc
mov
lahf
scas
mov
xchg
jnp
sarl
xchg
sub
xorl
push
sti
add
icebp
inc
cltd
sahf
scas
arpl
mov
call
pushf
pop
lds
pop
sbb
xlat
ljmp
dec
rcl
mulb
pop
push
xchg
repz
lods
add
pop
cmp
xchg
mov
stos
xlat
push
mov
int
repnz
pop
xor
scas
push
xor
inc
push
adc
xchg
xchg
insb
popf
ljmp
mov
insb
addb
jmp
addb
fcmovu
sbb
sbb
cmpsl
or
or
ss
out
mov
iret
jns
movl
mov
aaa
pop
pop
movsl
out
mov
and
jcxz
or
dec
sub
push
repz
filds
dec
mov
xchg
push
push
inc
orb
aam
or
cmp
js
lods
loope
lahf
lds
mov
cmpsb
fwait
daa
aas
dec
adc
add
add
xchg
add
ljmp
leave
rcl
fmull
xchg
std
jae
inc
imul
mov
mov
dec
ficoms
mov
ljmp
bound
cli
sub
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
rcr
repz
pushf
sarb
sahf
fistpll
mov
imul
pop
lock
mov
or
jl
inc
rcrl
and
mov
push
add
mov
leave
xchg
sbb
shl
and
mov
mov
mov
mov
adc
mov
cmpsl
rorb
mov
mov
xchg
cwtl
xchg
inc
cmp
rorb
jo
popl
cli
xorl
mov
or
sub
cmpsl
lahf
fisubs
inc
lret
shl
xchg
or
mov
cmpl
mov
cld
insl
ret
dec
scas
cmp
adcb
negl
dec
xchg
mov
mov
mov
scas
cmp
stc
sti
ret
sub
fsubl
loope
lods
add
or
loope
out
idiv
test
xchg
and
fwait
mov
insb
cmp
sbb
std
mov
les
xchg
inc
and
xchg
fldt
mov
lret
xchg
cwtl
andb
mov
imul
and
cli
sbb
cmp
outsl
cmp
into
pop
andl
xor
cli
into
shrl
arpl
rorl
pop
mov
testl
mov
call
add
mov
ror
dec
orb
into
mov
xor
out
aam
xor
mov
ja
and
push
push
repnz
xor
lods
cmp
cmp
fnstenv
pop
push
mov
pop
sbb
ret
dec
call
cmpsb
popf
pop
xor
inc
fwait
sarl
popf
sub
repnz
add
subl
cltd
loope
xchg
push
dec
jge
lods
lea
cld
mov
mov
mov
popf
lahf
movsb
lret
aas
loop
addl
mov
int3
aam
mov
flds
mov
pushf
lret
popf
push
cmpsb
mov
inc
aaa
adc
adc
xchg
inc
test
pop
cmpl
faddp
movsl
cmc
cmpsl
push
cmp
andb
or
jg
pop
cmp
and
mov
cmp
mov
sti
cmpsl
xchg
fdivrl
lods
cwtl
ja
pop
sbb
cmp
ds
mov
xor
sbb
add
adc
dec
ljmp
push
ja
mov
arpl
dec
push
in
adc
xchg
pop
pop
icebp
cmpl
sbb
shl
xchg
cmp
sbb
mov
push
cmp
inc
xor
leave
std
pusha
imul
mov
hlt
inc
test
push
and
jmp
sbb
loope
xchg
aam
arpl
or
aad
scas
clc
fildl
lahf
shrl
mov
icebp
inc
iret
pop
aam
jnp
jge
movsb
inc
mov
cltd
out
cmc
cmp
inc
mov
loopne
pop
mov
repz
push
ds
lcall
push
loope
lahf
add
mov
hlt
popl
ss
adc
push
repz
sbb
rolb
xorl
xor
hlt
xchg
and
inc
xchg
ret
and
push
cli
sbb
out
xorl
mov
mov
or
xor
std
out
pop
insl
orl
adc
daa
pushf
jl
push
inc
sub
aaa
adc
jg
sti
pop
filds
push
rorb
cmp
xchg
mov
or
mov
mov
cli
stos
dec
movsb
xchg
lcall
pop
ss
neg
pop
mov
mov
shrb
mov
pushf
js
outsl
xor
enter
push
popa
daa
push
nop
and
mov
pop
and
fwait
iret
sbb
xchg
imul
cmpsb
cmp
out
sbb
cmp
mov
repz
xor
inc
mov
xor
lock
fcom
js
jnp
out
stos
adcb
filds
aaa
iret
adcl
test
push
iret
repnz
incl
push
mov
cwtl
add
sub
mov
je
inc
repz
jle
cwtl
or
pusha
in
in
movsb
xchg
mov
cmovle
cmc
adc
mov
lahf
out
sub
xchg
or
sbb
xor
in
fs
and
fistpl
shrb
or
pop
jmp
or
dec
mov
dec
imul
ret
addl
or
push
in
inc
xchg
outsl
or
pop
sub
pop
stc
mov
lahf
sbb
inc
and
mov
mov
inc
imul
fwait
daa
dec
or
lock
ss
ffreep
xor
xchg
xor
aaa
inc
xlat
xchg
xchg
cmpsb
mov
mov
int
or
mov
add
xor
daa
mov
insb
into
push
out
xor
push
fwait
iret
xorl
push
lcall
dec
mov
hlt
cmp
mov
add
xchg
les
mov
mov
test
pop
mov
outsb
mov
push
movsl
stc
mov
jmp
sbbb
adc
xchg
int3
mov
nop
das
mov
stos
das
xchg
xor
push
popf
cmp
cmp
in
daa
test
lahf
test
mov
xchg
fidivrs
inc
out
test
jl
xchg
addl
cmpl
iret
xor
dec
sahf
mov
inc
call
push
orl
push
jns
mov
or
mov
xchg
js
xor
mov
popa
xchg
jae
sbbl
mov
dec
cltd
and
repnz
push
xchg
cld
in
fsubrl
mov
frstor
mov
loope
and
lea
ljmp
xchg
xchg
lock
xlat
or
leave
mov
stos
push
add
mov
mov
das
cmp
vmptrld
mov
push
mov
lret
repnz
fwait
orl
adcl
jo
js
in
stos
roll
lea
mov
or
xor
xor
scas
repz
mov
fimull
xchg
aad
sub
cli
gs
test
xchg
pop
or
sub
test
mov
xchg
iret
movd
pushf
jmp
lea
dec
inc
pop
push
mov
sbbb
ret
repnz
inc
add
pushf
mov
sub
outsl
pop
insb
mov
insl
jmp
test
andl
out
rolb
lcall
aam
sub
test
xchg
add
xchg
dec
shl
mov
test
sbb
dec
das
cmp
xchg
inc
movsl
pop
inc
push
sub
jecxz
notl
mov
hlt
fisubs
mov
loop
adc
pushf
test
ja
sub
daa
outsl
daa
cmpsl
mov
jo
add
or
push
adc
iret
xchg
pop
movsl
aas
ret
scas
js
cli
or
xchg
addr16
jbe
inc
inc
data16
xlat
sub
sub
scas
dec
repz
rcr
mov
addl
cmp
add
jo
mov
rep
insb
mov
push
ret
xchg
cwtl
aas
xor
adc
mov
dec
stos
xor
sub
int
jecxz
push
inc
and
imul
icebp
nop
mov
ret
pmulhuw
insb
test
out
sub
push
jbe
lcall
pop
jecxz
sub
in
mov
rcr
call
incb
addr16
sub
movsl
add
repz
testl
push
loope
mov
xchg
and
out
rcrl
shl
shr
mov
insb
sbb
jmp
sbb
iret
popf
bnd
ja
xchg
jae
movsb
cmp
jecxz
loopne
rcrl
fldl2e
ret
dec
jmp
movsb
sub
sub
and
dec
xchg
mov
aas
dec
in
pop
cmp
jne
and
or
loopne
rclb
sbbb
lods
cltd
sub
sti
xchg
rclb
mov
cmp
movswl
xor
js
mov
cmp
stos
xor
xchg
xchg
sub
jge
aam
rorb
aam
mov
dec
int
das
or
jo
cmpsl
das
jmp
fwait
stos
rorb
and
jg
rclb
mov
mov
lcall
xor
ret
sti
test
dec
icebp
sub
push
addl
jae
xor
cs
lods
rcrb
jg
fsubrl
addr16
js
mov
fwait
icebp
test
xchg
xlat
ja
gs
add
cmp
sub
scas
data16
loopne
fistpll
fwait
inc
xchg
fwait
out
call
sbb
outsb
xor
aam
cmp
mov
imul
stc
sub
lret
mov
js
push
into
cwtl
ja
sbb
fldenv
cli
adc
lret
adc
lret
fwait
push
fwait
or
mov
movsb
pop
push
fwait
add
adc
mov
xor
mov
add
cli
jmp
fcoml
out
push
add
cmp
mov
shlb
add
add
push
pop
add
addr16
insl
test
mov
sarl
xor
xchg
fnstenv
inc
add
push
xor
mov
popf
inc
mov
mov
fs
mov
xor
shlb
mov
sahf
aaa
in
ja
cmpsl
xchg
dec
cmc
js
mov
movb
ja
dec
ss
ret
xlat
mov
sub
popf
jnp
aad
mov
fnstcw
sbb
add
mov
cltd
pop
in
dec
sti
cltd
nop
lods
adcl
jno
insl
cwtl
outsl
or
dec
xlat
aam
insb
xlat
outsl
scas
leave
cmc
add
daa
movb
xor
fmuls
push
fdivr
xlat
adc
dec
popf
pop
out
mov
pop
clc
xchg
lods
add
inc
add
icebp
repz
movsl
into
imul
outsl
imul
dec
xorl
dec
clc
xchg
xchg
mov
fmul
jcxz
das
dec
cmpsl
lods
js
fnstsw
lahf
mov
bound
enter
mov
insb
cmp
out
sbb
pop
ss
les
lret
jle
rolb
pop
pushfw
imul
out
sbb
lods
fists
ficomps
jg
jns
and
mov
mov
das
xchg
add
pop
je
mov
mov
xor
xlat
fwait
repnz
or
andb
inc
fists
jmp
inc
mov
mov
jmp
xchg
mov
inc
sub
arpl
mov
in
mov
mov
pop
sub
cli
icebp
fcoms
repz
cld
imul
sti
test
popf
cs
sar
rcl
pop
pushf
fdivr
adc
iret
ds
insb
aam
lods
xor
xchg
daa
popf
jmp
iret
jecxz
xor
ss
ljmp
push
aad
mov
mov
rorb
inc
cltd
addr16
xchg
test
adc
sahf
jae
cmp
rorl
pop
or
in
jae
ja
sbb
pop
mov
push
icebp
lock
test
loop
dec
idivl
jp
fdivl
not
in
add
sbb
dec
rorl
orb
sub
push
or
call
jmp
mov
in
sahf
adc
int3
outsl
les
sub
cmpsb
mov
jecxz
dec
jp
cmp
xor
jo
xor
aam
adc
pop
int3
imul
or
mov
push
xchg
out
negb
ja
incl
mov
mov
mov
mov
sbb
adc
test
inc
or
fdivl
leave
or
sub
cs
mov
aas
or
mov
mov
sti
inc
lret
cmp
lea
cld
aas
xchg
or
pusha
jae
jp
pusha
xor
xchg
rcrl
mov
xchg
or
scas
cmp
jae
dec
mov
cmp
sub
sub
pushf
inc
insl
xchg
rolb
clc
sbb
lds
mov
adc
mov
cwtl
iret
dec
push
sub
sub
movl
movntq
lcall
xchg
into
test
scas
push
hlt
out
and
sti
test
in
pop
xchg
ds
imul
dec
addr16
mov
les
or
test
sub
add
subl
fstps
fstl
in
xchg
fildll
mov
and
mov
push
imul
push
scas
push
adc
pop
mov
add
push
or
pop
xor
sub
lahf
xchg
cltd
test
repnz
mov
adc
jno
inc
pop
out
cli
mov
sub
jg
xor
in
test
or
ja
ja
mov
xchg
gs
mov
mov
push
hlt
pop
pop
shlb
xor
repnz
movsl
xchg
repz
loopne
scas
aam
and
sysenter
and
test
cmpsl
dec
out
repz
xchg
mov
pushf
xchg
stos
divl
mov
out
in
xchg
mov
andb
out
ret
fwait
aas
daa
adc
xor
push
mov
scas
in
fildll
cmp
mov
sub
repnz
jg
stos
pop
xorb
add
int3
out
ret
push
push
add
ljmp
fwait
xor
outsb
aaa
pushf
xor
scas
in
lcall
out
mov
cwtl
cmpsb
shl
cltd
popf
inc
pop
lcall
or
int
fldcw
das
lds
mov
xor
lret
aam
adc
cld
scas
jbe
lods
gs
shl
mov
loop
push
cmp
scas
rcrb
cmc
xchg
aas
fistpl
roll
enter
repnz
inc
data16
in
test
mov
aam
mov
sbb
adc
aad
es
mov
test
stc
shll
dec
inc
fcoml
xchg
pushf
subb
sbb
xor
cmpsb
rclb
mov
push
lret
inc
fisubl
cmp
inc
pop
aad
xor
and
and
repnz
mov
dec
lds
movsb
insb
mov
fisttpl
pop
pop
lsl
xlat
or
aaa
aam
add
loope
adc
addr16
cwtl
mov
addr16
push
add
jae
dec
xchg
fmul
stc
loope
mov
repz
jo
pushf
js
add
xchg
and
js
or
test
cmp
mov
aaa
push
xchg
ja
fcoml
inc
xchg
pop
mov
mov
cmpsl
dec
es
outsl
xchg
or
jg
out
pop
orl
out
mov
out
xchg
dec
pop
mov
std
sahf
outsb
imul
lret
mov
ss
shld
pop
in
in
dec
js
dec
inc
mov
out
scas
xchg
enter
jg
out
inc
jmp
call
mov
addr16
in
scas
mov
lods
cmp
mov
mov
jo
cmp
fdivs
lds
js
popf
inc
out
in
in
sti
aad
mov
mov
pop
xchg
inc
pop
pop
cwtl
in
movsl
pop
cmp
rep
clc
cwtl
icebp
test
jnp
icebp
fcmovb
lock
xchg
es
testl
jnp
mov
xor
aam
sti
stc
xchg
or
es
xchg
add
dec
test
lods
mov
or
test
sub
mov
mov
mov
sub
hlt
scas
out
sbb
test
and
cmp
fucomp
pop
jo
repz
and
xchg
or
testb
dec
mov
mov
push
dec
and
xchg
add
cmp
mov
sbbb
jmp
xchg
lods
ret
cs
lea
loope
loopne
push
das
lret
test
daa
push
xor
fnstcw
or
xchg
sbb
or
push
mov
inc
add
js
dec
xor
jg
sbb
addl
jecxz
js
fstpl
imul
insl
xor
es
xor
mov
xlat
jmp
insb
inc
or
inc
xor
mov
shr
cwtl
jl
sbb
mov
adc
pop
insb
mov
test
add
shlb
test
add
test
cwtl
and
fstp
xor
scas
imul
xor
faddp
insb
dec
test
scas
add
out
out
mov
gs
nop
scas
inc
xchg
mov
mov
sahf
sub
add
lahf
push
out
pop
aaa
in
outsl
lcall
or
pop
mov
mov
and
jnp
mov
inc
ret
fmull
call
pushf
aam
inc
imul
and
pop
imull
pop
sub
and
xor
std
sbb
ret
stos
subb
lahf
das
call
insl
jne
arpl
lods
outsl
lret
xchg
inc
xor
hlt
ret
ja
das
addr16
sub
inc
mov
xor
loopne
das
inc
orb
inc
pusha
lea
jae
out
icebp
lods
shlb
jmp
jecxz
xchg
rcrl
icebp
es
mov
adc
mov
repnz
or
sarl
repz
addl
shrb
add
mov
dec
mov
mov
inc
lret
fadd
ret
sarl
xchg
jns
dec
and
test
or
ss
jp
imul
std
stc
icebp
mov
rorl
and
call
test
xchg
mov
mov
stos
subb
mov
call
les
in
movsl
mov
lret
rol
sub
daa
inc
pushf
push
ja
xchg
and
inc
shrb
stos
jno
mov
out
xchg
push
add
jmp
cmpsl
xchg
jbe
jo
jecxz
mov
mov
cmpb
pop
xor
push
adc
mov
dec
mov
lret
ja
jnp
inc
je
loope,pn
sbb
mov
pop
pushf
mov
pop
xchg
pop
outsb
movsl
ret
jl
ljmp
cld
mov
or
stos
inc
pop
mov
pop
and
mov
add
fcmovnbe
clc
sbb
sub
push
jmp
cmpl
xlat
xchg
mov
stos
ja
out
iret
fcmovu
insb
shl
pop
jmp
lods
into
jno
insb
lea
aad
xor
or
push
loop
dec
decb
aad
push
mov
jo
lret
pop
mov
push
mov
inc
jmp
jo
nop
test
sbb
xor
arpl
mov
bound
pusha
mov
xchg
addr16
push
cmpsb
dec
popa
popf
cli
xchg
jmp
movb
mov
outsb
mov
repz
pop
cmp
scas
shrb
aad
cmpsl
pop
cmp
or
xchg
sti
mov
pop
and
sahf
xchg
xchg
popl
cmpsl
nop
inc
jecxz
pop
sti
in
lahf
popf
jnp
mov
jmp
sbbl
rcl
inc
cmp
sbbb
scas
daa
cmp
mov
add
push
jb,pt
pop
das
daa
das
jo
jb
jb
xor
dec
cli
sbb
adc
imul
pop
test
mov
push
mov
das
mov
sbbl
xor
jg
xchg
movsl
lods
imul
cwtl
stos
mov
jmp
xor
test
adcb
sub
jecxz
mov
mov
lock
or
push
xchg
inc
lcall
inc
rcl
aam
inc
xchg
std
inc
popa
test
lahf
out
mov
daa
add
and
and
dec
mov
jmp
jg
in
push
mov
xchg
xor
dec
mov
mov
lahf
aam
subl
hlt
test
jl
jb
pushf
lret
pop
mov
mov
jp
bound
fcmovb
and
mov
mov
scas
mov
dec
dec
or
mov
lods
popf
push
fucom
rcrb
call
mov
push
fs
jg
clc
pop
rclb
flds
mov
xchg
aas
or
andl
inc
cs
dec
shll
lea
int
mov
mov
mov
rcl
scas
mov
mov
xchg
mov
mov
adc
cwtl
inc
and
sbbl
sahf
push
aaa
adc
aaa
mov
hlt
jg
subb
popf
stc
rorl
dec
cmp
lds
out
sub
mov
insl
mov
and
sbb
xlat
fimuls
icebp
xchg
mov
pop
outsb
mov
dec
ss
test
lahf
mov
inc
push
mov
xor
dec
jnp
loope
lcall
add
add
xchg
mov
dec
push
repz
jo
mov
inc
mov
dec
pop
fdivr
sub
or
cs
rcr
rcr
push
std
cltd
repz
das
lods
dec
rolb
dec
adc
inc
popf
imul
rolb
push
sarb
sbb
jno
test
mov
call
lret
or
mov
adc
xchg
push
shl
xor
inc
fisubrs
arpl
or
sbb
rol
test
mov
xchg
pop
lret
daa
scas
inc
icebp
mov
daa
movsb
rorb
cmc
inc
rcll
cli
lret
pusha
cmpsl
stc
push
cwtl
clc
add
les
pop
pushf
pop
movsb
pop
jbe
pop
jg
iret
pusha
pop
xor
aam
mov
pop
idivl
fcoml
pop
cmp
sbb
dec
pop
stos
movsb
sub
pop
cmpsb
sub
mov
fiaddl
and
jmp
repnz
repz
cmp
and
les
addb
shlb
pop
push
or
ss
es
jb
sub
xchg
mov
sbb
scas
iret
push
xchg
out
aaa
rcl
push
inc
mov
cmc
pop
sub
cmp
add
ficoml
cmp
data16
in
cmpsl
mov
cmp
jl
cmp
es
dec
rcr
rcrb
sbbb
imul
daa
in
lret
fwait
outsb
mov
push
aam
xlat
mov
iret
inc
push
lret
cmpsb
or
mov
test
fdivs
xor
inc
jno
lods
pop
ljmp
inc
adc
mov
add
mov
aad
xchg
aam
sahf
mov
scas
stos
pop
ret
push
in
push
mov
insb
int
test
mov
cli
push
fnstcw
inc
xchg
or
push
data16
xchg
jmp
movsl
cmc
lahf
mov
nop
sub
sbb
sbb
push
repz
cmp
xlat
push
out
sbbl
cmp
mov
xchg
inc
movsl
add
lods
add
popf
jb
xchg
inc
test
call
fimuls
sbbb
fwait
or
mov
lret
in
dec
pop
mov
dec
addr16
jge
loope
add
pop
xchg
push
das
mov
and
mov
in
daa
push
pop
ret
or
aaa
jns
xchg
xchg
or
or
cmp
iret
push
sbbl
xchg
fcmovbe
mov
adc
or
jecxz
jge
add
iret
out
add
incl
push
pop
or
rol
mov
stos
jns
movsl
mov
fsub
mov
xor
unpckhps
lahf
aaa
and
fs
mov
add
movsl
or
cmp
xor
mov
xchg
sar
cmpl
or
inc
adc
mov
mov
cld
aam
into
inc
das
lahf
imul
xor
jno
and
or
nop
adc
ret
adc
xlat
sub
sti
mov
call
inc
daa
and
lea
stos
lahf
push
icebp
fucomip
xchg
test
rcl
jmp
cmc
xchg
mov
out
dec
dec
out
roll
jmp
hlt
inc
inc
and
mov
ret
mov
push
jnp
shll
les
arpl
xor
dec
pop
sbb
sti
xlat
and
xchg
rclb
ja
dec
sahf
cli
popf
mov
scas
sbb
push
mov
add
mov
fs
cmp
loopne
jp
dec
cli
rolb
mov
in
mov
adc
lahf
xchg
iret
rcl
mov
andl
inc
pop
xlat
iret
dec
test
das
sbb
movsl
mov
pop
fmuls
shl
jl
push
leave
addl
jno
mov
push
iret
sarb
clc
mov
mov
ficomps
jge
aad
add
mov
out
js
mov
sub
cmpsl
mov
mov
mov
popa
cmpsl
add
dec
aaa
pop
repz
aas
xchg
or
roll
pop
pop
mov
arpl
sbb
ret
sbb
push
xchg
negb
pop
dec
fwait
xchg
aam
xor
outsl
cmpsb
loopne
out
cmp
shlb
das
or
fidivrl
inc
push
fldl
shll
lods
xor
push
ror
aam
enter
lods
jle
test
cli
mov
popl
and
lods
push
fdivrl
jae
mov
xchg
mov
pop
cwtl
test
daa
test
out
dec
addb
lods
xchg
ret
sbb
or
lods
movsl
fiadds
lcall
xchg
into
or
mov
push
fcmovnu
ret
sahf
mov
mov
mov
les
leave
pop
imul
dec
addr16
mov
and
inc
iret
cli
dec
ret
lret
stos
into
xchg
test
push
imul
movsl
push
aad
jb
popf
push
rcll
lcall
fdivrl
hlt
orb
dec
xlat
cmpl
or
movsl
add
cmpl
aad
mov
xchg
mov
and
cltd
push
in
mov
popa
pop
mov
pushf
add
repz
add
dec
bnd
inc
mov
mov
or
pop
mov
jp
aaa
rcl
inc
push
or
push
lret
sbbl
insb
mov
in
call
out
inc
fsubr
xchg
mov
cli
mov
xor
daa
daa
insb
xchg
jo
and
cltd
mov
mov
xchg
dec
push
mov
inc
stos
mov
rclb
mov
movsl
std
inc
movsl
inc
aaa
repnz
sbb
lret
pop
out
xchg
call
mov
xchg
sbb
sbb
xor
arpl
test
aaa
cmp
das
adc
pop
in
and
ljmp
add
mov
mov
pop
cmpsl
xchg
dec
je
cwtl
inc
add
lahf
cmpsl
jg
ja
pop
mov
push
xlat
ret
insl
xchg
xchg
mov
lcall
push
out
push
sti
les
add
pop
popf
cltd
mov
pop
repz
sbb
dec
sbb
cmpsl
enter
ss
push
jecxz
mov
mov
pop
mov
mov
mov
push
lret
repnz
xlat
inc
pop
imul
xchg
push
jecxz
call
or
mov
lods
dec
ret
repz
jl
mov
xchg
scas
mov
push
add
aaa
xlat
xor
jbe
push
cmp
or
mov
xor
push
mov
xor
fstl
std
mov
and
repz
test
fneni(8087
fdivrs
add
adc
out
fsub
fwait
mov
ret
jo
pop
jb
xchg
mov
repnz
add
adc
xchg
sarl
pop
daa
xchg
fnsave
push
cmc
cmpsl
jg
push
stos
lods
push
clc
repz
cmp
clc
jmp
or
push
jmp
push
lahf
push
scas
loop
or
pop
xor
dec
ret
imul
sbbb
mov
xcrypt-ofb
cmpsl
outsb
scas
lret
pop
xor
out
xchg
or
xchg
les
stos
ljmp
int3
inc
insb
or
or
js
incl
sbb
push
js
nop
or
movsl
aas
adc
sub
mov
repz
adc
out
mov
sti
inc
mov
inc
mov
stos
xchg
mov
xchg
test
in
xor
or
xchg
inc
pop
ja
dec
test
mov
mov
lahf
inc
lahf
adc
loop
lods
jo
mov
lahf
inc
lea
insb
mov
cli
mov
pop
adc
adc
jmp
pop
mov
inc
dec
mov
xor
mov
mov
xlat
push
xor
inc
xchg
pop
inc
arpl
cs
inc
in
add
int
out
aaa
and
int
ret
dec
pop
dec
adc
ret
ret
ret
xorl
xchg
aad
out
cmp
xchg
out
inc
dec
inc
mov
das
sub
nop
sahf
and
cmc
aaa
xchg
ds
ret
and
mov
xchg
out
leave
iret
or
sub
jo
pop
icebp
bound
mov
cmpsb
ret
out
pusha
jne
lods
mov
adc
stos
out
dec
pop
cmp
aaa
pop
leave
into
andl
inc
mov
push
jae
push
arpl
pop
leave
aaa
push
add
mov
lret
outsl
sahf
inc
pop
js
repnz
xchg
add
es
mov
dec
stos
cmp
mov
add
pop
or
stos
sub
fdivrs
popl
cs
dec
push
es
mov
push
mov
lock
adc
in
push
nop
int3
xchg
cmp
sub
ror
subl
xlat
std
loop
mov
insb
ret
fsub
xchg
lahf
les
int3
push
mov
roll
jo
mov
adc
xchg
xor
dec
jge
rcr
insl
jmp
insb
test
scas
push
sarl
insb
lods
or
inc
xchg
movsb
lret
push
sub
cli
dec
cmc
ret
out
loopne
aam
xchg
sub
scas
clc
cmp
add
aam
xchg
mov
insl
ficompl
dec
clc
and
int
xor
mov
and
inc
cli
mov
push
inc
out
shl
dec
jg
push
outsl
dec
xorb
out
jbe
inc
pop
mov
mov
jg
push
sar
imul
sub
fs
int3
inc
pop
bound
in
pop
or
or
xlat
out
push
cltd
addr16
xchg
test
jae
popa
jb
test
jns
shlb
orb
xor
pop
shlb
cli
lret
inc
cmpsl
xchg
nop
pushf
lret
mov
xchg
mov
inc
insl
add
xchg
test
mov
leave
pop
pop
call
xchg
xchg
mov
js
mov
xlat
insb
rcr
xchg
mov
hlt
xorl
lea
xchg
xchg
repnz
inc
fcmovb
and
stos
mov
fisttpll
pop
push
scas
xor
rolb
xchg
add
sub
push
jo
cld
jmp
and
test
or
xchg
aad
data16
mov
push
into
xchg
sbb
lock
inc
scas
mov
leave
cld
sub
add
ret
int
in
ljmp
aad
dec
cmp
adc
aam
fldcw
filds
iret
flds
mov
lahf
clc
mov
je
pop
loop
add
mov
test
mov
insb
lret
xchg
scas
scas
sahf
movsl
jmp
rorl
push
enter
jecxz
inc
icebp
or
loopne
xchg
lahf
cmc
xor
pop
mov
std
xchg
loope
int3
outsb
in
jle
and
inc
fldt
xchg
adc
xchg
sbb
hlt
cs
xchg
int
jmp
rclb
sbb
dec
sbbl
out
fidivl
mov
xchg
xchg
mov
aaa
jecxz
and
and
inc
xchg
es
mov
sti
popf
addl
orb
pop
out
lods
popa
add
icebp
test
mov
ljmp
mov
shrb
and
rclb
cmp
addl
mov
dec
add
mov
js
test
add
outsb
sub
sub
in
rcrl
enter
mov
ret
test
fildll
aas
push
add
jo
xorb
stc
cmp
out
es
xchg
xor
adc
or
idiv
dec
jb
cmp
fisttpl
les
and
mov
mov
lds
xchg
or
mov
icebp
or
cltd
mov
addb
dec
mov
xchg
xchg
xchg
dec
cmp
mov
jns
mov
add
shrl
les
cld
repnz
in
test
lds
icebp
cld
push
mov
xor
cli
jg
movsl
mov
jmp
movsl
lcall
mov
push
mov
push
xchg
rolb
in
fnstsw
pop
js
mov
fildl
mov
and
iret
pop
or
int
aam
dec
jl
mov
mov
cmp
add
aas
sbb
mov
cld
xchg
xchg
xchg
enter
shrl
mov
shlb
mov
lahf
xchg
ficompl
adc
lret
test
insb
sarl
iret
bound
pop
xlat
shrl
test
iret
xchg
push
push
es
mov
jp
popf
aaa
cmp
push
rorb
cmc
lahf
jb
mov
jge
es
jmp
orb
push
inc
push
out
lods
mov
mov
add
xchg
lds
aas
adc
sbb
cli
addr16
inc
xlat
xlat
fcmovne
std
stos
into
mov
clc
xchg
ret
inc
not
sahf
or
mov
ret
or
nop
inc
mov
mov
lods
cmp
pop
int
lods
mov
hlt
subl
arpl
push
pop
leave
jl
jl
dec
xchg
jne
xchg
cmc
cmc
cmpl
mov
mov
mov
mov
cmpsl
sahf
jl
stos
movl
insb
pushf
mov
xchg
lcall
popf
lahf
ljmp
xchg
shrl
dec
pop
mov
test
dec
pop
hlt
mov
roll
andb
int3
mov
inc
comiss
mov
xchg
mov
mov
dec
ljmp
jo
clc
mov
movsl
lock
je
fsub
or
loope
sub
movsb
lcall
out
cld
mov
lods
ret
mov
fwait
insb
movsl
mov
in
push
add
push
lret
jbe
das
mov
ret
fmuls
mov
xchg
inc
push
xchg
cmp
arpl
xchg
xor
shl
xchg
inc
pop
cld
loop
cmp
scas
enter
sbb
outsl
movsb
add
or
fwait
mov
stc
xchg
shll
jl
sub
add
pop
mov
add
inc
cmpl
xchg
and
mov
push
add
loop
pop
out
push
lret
add
nop
in
test
hlt
cmpsl
mov
mov
lea
sti
push
push
stc
insb
es
inc
mov
loop
imul
xchg
popf
jecxz
pushf
popf
xchg
shrl
insl
sbb
mov
pop
imul
fs
jle
lods
jge
sbb
aas
test
lods
inc
out
shlb
lea
push
jbe
sub
loopne
xlat
jno
aaa
jmp
mov
rol
into
data16
xor
pop
sub
rcl
dec
jmp
adc
jnp
lds
jmp
or
out
sub
int
ret
sub
cmp
xor
testb
daa
sub
fmull
add
lret
mov
xchg
out
add
fnstenv
ss
add
cmpsb
jecxz
mov
jecxz
or
test
mov
mov
fdivs
mov
mov
call
sbb
movsb
pshufw
mov
loopew
xlat
jno
or
out
subl
mov
mov
mov
out
idivl
mov
mov
mov
ja
in
lds
mov
mov
mov
aam
aas
movaps
std
xchg
test
filds
leave
xchg
stos
xchg
repz
out
mov
scas
add
inc
sbb
ljmp
mov
or
dec
es
ljmp
mov
inc
inc
inc
hlt
xor
jg
dec
testb
sbb
div
filds
fwait
cmp
xchg
scas
mov
xchg
fstpl
rorb
mov
dec
rcrb
cwtl
pop
lods
xlat
or
xor
cwtl
cmp
cltd
mov
or
mov
jb
stc
rcll
repz
cltd
or
dec
mov
popl
ret
ja
sub
mov
in
popf
jbe
cli
cmp
insl
ret
mov
bound
and
insl
cmp
insl
popa
rorb
xchg
daa
jg
clc
mov
sub
and
inc
es
jnp
mov
andb
and
clc
popf
mov
lea
cmp
insb
lahf
sahf
pushf
push
aad
jo
xchg
adc
add
leave
arpl
xchg
mov
scas
jecxz
movsl
inc
fists
mov
xchg
sar
into
and
xchg
mov
dec
ret
jne
add
lea
popa
fstl
xchg
dec
inc
sub
in
inc
imul
sahf
iret
mov
jno
xchg
mov
mov
xchg
add
xorl
mov
movsb
push
push
pcmpeqb
xchg
cmc
test
jle
jnp
aad
jle
or
mov
jb
add
dec
adc
and
imul
jmp
decl
dec
add
jecxz
dec
add
mov
mov
add
xlat
test
adc
stc
pop
jle
dec
sahf
jae
mov
cltd
jle
mov
pop
pop
cmp
orl
leave
jp
addl
inc
mov
xchg
adc
jl
xchg
mov
mov
inc
cmp
mov
aas
mov
jne
daa
push
jle
pop
cmpb
push
adcl
pop
test
or
lds
pop
jle
mov
fcomps
ret
inc
lahf
pop
cmp
push
dec
add
xchg
jle
lahf
stos
test
neg
int
sub
pop
aam
sbb
cmc
lea
xchg
jecxz
dec
add
pop
xchg
jle
sahf
inc
sbb
jnp
outsb
mov
dec
add
jne
les
jecxz
ss
pop
int
pop
shll
xor
xor
adc
int3
mov
pop
mov
mov
iret
nop
stos
rcr
filds
dec
xor
out
out
push
xor
xor
jmp
mov
add
xchg
std
pop
xchg
or
movsl
icebp
push
cmp
je
push
nop
ret
loope
xor
daa
adc
daa
mov
dec
xor
outsl
push
jnp
jns
fisttpl
pop
inc
sub
mov
sbb
call
loope
fstl
test
hlt
and
jmp
cmpsl
jp
fadds
adc
aam
adc
outsb
ret
and
and
pop
xchg
and
pop
cmpsl
enter
xchg
or
xor
cltd
test
lods
jp
cmp
into
adc
js
ficoms
loop
cmp
xchg
setno
rorl
fnstenv
add
pop
fildl
test
push
bnd
mov
sti
xchg
test
movsb
xchg
test
mov
or
les
dec
xor
gs
jmp
iret
lods
sbb
mov
pop
inc
data16
icebp
cmpsl
pop
sbbb
jae
push
arpl
addr16
jmp
and
and
mov
movsb
mov
sub
out
lods
push
jo
mov
jp
inc
addb
test
mov
andl
stos
outsl
dec
ret
push
nop
cwtl
addb
xor
xlat
aam
jbe
xchg
xor
mov
nop
push
es
pop
mov
push
pop
mov
fildll
lods
inc
ja
mov
xor
repnz
cltd
loope
mov
imul
jmp
imul
rcll
sub
scas
jg
in
add
daa
push
hlt
filds
inc
mov
mov
repnz
gs
lods
inc
roll
dec
mov
in
and
andl
out
add
test
mov
mov
lods
jmp
sarb
mov
leave
mov
aam
xchg
stos
repnz
inc
mov
dec
dec
pop
sti
clc
jb
in
sbbb
and
adc
mov
sub
clc
movsb
popl
and
cmp
push
test
rorb
cmpsl
pop
aaa
xor
xchg
inc
mov
test
xchg
sub
popf
insb
icebp
nop
or
repnz
ret
popa
sbb
and
push
fcmovnu
test
orl
out
and
or
inc
icebp
subb
leave
push
add
pop
push
inc
data16
add
cmp
jmp
jmp
in
mov
popl
lock
cld
cmpl
aas
fimuls
mov
mov
das
shrb
mov
out
mov
into
adc
xchg
inc
shrl
les
jnp
das
mov
mov
mov
mov
idivb
dec
xor
dec
jno
dec
sub
sub
ret
sti
std
or
int3
sub
xchg
ss
dec
push
out
inc
mov
sub
pop
sub
je
xchg
jl
sub
cli
dec
sbb
stos
or
lds
mov
ljmp
les
lods
out
addb
push
jno
sahf
inc
insb
mov
js
pop
in
add
xor
lea
inc
frstor
popf
and
or
repnz
mov
sbb
iret
sbb
movl
adc
sar
xlat
cli
sbbl
addr16
jo
pop
pop
lret
cltd
push
sub
jl
test
ret
rclb
sbb
rorb
lea
das
fimuls
pop
rorb
hlt
xor
xor
pushf
jecxz
push
inc
and
xchg
out
mov
mov
out
xlat
push
or
mov
inc
andb
sub
das
xchg
out
mov
test
and
ficompl
dec
icebp
cld
lea
or
xor
test
xchg
and
movsb
pop
sub
rclb
dec
push
cmp
and
aam
pop
addb
popl
or
shlb
mov
jno
and
mov
mov
mov
adc
iret
aas
iret
rcr
fists
loop
sbb
out
jecxz
mov
test
lds
sub
rolb
ja
imul
lods
jns
es
sub
cmp
adc
sub
ljmp
xchg
jns
dec
aad
lahf
repnz
jae
push
mov
test
test
aaa
jecxz
mov
mov
mov
adcl
mov
mull
fnstcw
lret
xchg
cmp
jb
inc
push
push
dec
mov
push
jns
icebp
lods
imul
imul
lcall
pop
xchg
mov
jne
sub
dec
pop
test
bound
cmpsl
mov
xor
mov
pop
orb
addr16
cmp
je
shll
ja
xchg
add
or
aas
adc
rcll
cmpsb
inc
adc
shr
out
xchg
pop
mov
pop
js
test
mov
mov
mov
and
mov
mov
ret
or
je
dec
jmp
iret
mulb
mov
mov
push
xor
inc
adcl
call
inc
cltd
xchg
xchg
mov
scas
mov
add
xchg
mov
imul
into
add
add
ficoml
in
scas
cmp
jle
loop
add
or
pop
inc
cmpsl
loope
sub
insl
xor
out
aam
sbb
in
add
ret
sbb
add
outsb
int3
dec
inc
repz
adc
adc
and
mov
jbe
push
xchg
mov
cmp
andb
movsb
subb
pop
mov
pop
mov
mov
aam
or
push
xchg
fmuls
out
sbb
sub
outsl
out
movsl
test
fdivrl
pop
fnop
xchg
xor
cmpsb
cmp
std
xchg
ret
push
cltd
sti
xor
mov
and
mov
xchg
lcall
orl
xchg
jb
popl
xor
mov
push
cmp
lret
xchg
xor
mov
jo
movsl
ret
sbb
inc
ror
add
mov
jmp
cmpsl
mov
adc
jge
repz
add
xchg
out
pusha
cs
cmp
cltd
subb
js
ds
push
call
add
adc
push
mov
scas
stos
mov
std
imul
stc
dec
lea
xor
sar
add
cmp
leave
sub
test
pushl
rcll
call
adc
add
call
push
adc
sub
inc
fidivs
out
jmp
mov
inc
add
rolb
popf
rcll
xchg
pop
xchg
int
ret
add
and
xor
mov
mov
sarb
mov
jmp
jl
push
lds
or
mov
xchg
xchg
adc
or
aas
arpl
mov
bnd
mov
popa
sub
xor
test
stos
mov
fs
cmp
lods
and
xlat
mov
stc
mov
add
rcl
arpl
retw
stos
inc
mov
int3
dec
hlt
loop
jg
lret
cmp
ljmp
push
mov
arpl
and
lds
cs
cwtl
sbb
lds
dec
pause
add
sbb
jmp
iret
pop
insb
xchg
sbb
mov
or
lods
jl
out
negl
mov
mov
cmp
xchg
push
mov
sub
and
jb
pop
fildl
push
mov
xchg
pop
mov
andb
jmp
fiadds
add
mov
or
shll
jnp
inc
arpl
negl
movl
adc
xor
mov
jle
in
orb
ja
repnz
test
pushf
in
rorl
fimuls
sahf
out
jl
incl
pcmpgtb
js
mov
lea
inc
cmp
mov
cli
insb
shrb
repz
xchg
imul
push
insb
mov
xchg
stc
jb
lods
or
cmpsl
jmp
inc
sub
arpl
stos
popa
test
xchg
cmp
cmpsl
mov
out
xchg
push
sarb
xchg
mov
pop
iret
mov
test
lds
movsl
out
addl
add
cmc
mov
es
and
pop
sub
cmpsb
adcb
push
out
and
cmc
stc
pop
cmp
dec
in
or
xor
xchg
jo
fisttpll
dec
test
iret
out
fists
into
or
push
sti
aaa
addr16
cmc
imul
repz
mov
push
mov
push
into
fwait
jecxz
sub
inc
cmpl
imul
imul
shll
jmp
sbb
mov
fwait
jmp
pop
mov
mov
pop
xchg
jae
mov
pop
test
jecxz
pop
xchg
leave
mov
stos
fdiv
add
stc
push
filds
push
ficoms
test
add
in
pop
dec
icebp
sub
insl
or
mov
mov
scas
mov
out
xchg
lods
sub
pushf
mov
pushf
pop
lock
cwtl
sbb
nop
fldenv
xchg
fsubs
mov
cmpsl
mov
or
pop
lcall
mov
push
cmp
xchg
adc
stos
outsb
xchg
xor
add
movsb
test
mov
inc
dec
and
in
mov
xor
and
cmp
xchg
pop
cmp
jle
sub
xor
loope
add
leave
repz
mov
pop
fldt
ret
mov
sbb
ja
xchg
out
mov
or
shrl
inc
aam
stos
xor
orl
xlat
std
inc
es
inc
push
mov
aam
in
rolb
cmp
shr
insb
xchg
es
xchg
ja
xlat
aam
add
sahf
in
xchg
movsb
pop
repnz
out
paddusw
and
pop
outsl
out
insb
pop
stc
cmpsb
aaa
scas
scas
out
subb
xchg
xchg
and
pop
int
xchg
and
fisubs
push
and
in
and
loopne
movsl
or
jae
out
cmp
shlb
xchg
push
addb
jb
out
sub
aam
lahf
pop
hlt
iret
in
jmp
out
lods
in
repz
stos
aaa
xchg
aam
pusha
sbb
repz
pushf
mov
rcl
in
testl
repz
mov
movsl
rcrb
dec
das
sbbl
and
mov
rcl
xlat
sarb
fbld
jb
cmp
inc
mov
mov
out
sbb
pop
mov
popa
adc
jecxz
mov
dec
add
addr16
scas
ret
lds
repnz
pop
stc
mov
pop
rcll
pop
inc
cli
or
ja
sbb
cltd
insb
mov
mov
cmpsb
push
mov
lds
mov
mov
mov
xor
mov
jmp
daa
mov
mov
or
mov
pop
sbbb
pop
and
repz
mov
int
mov
xchg
push
adc
mov
sbb
dec
shlb
mov
jns
jb
xchg
xchg
mov
aas
movsl
jnp
rclb
inc
pop
inc
lods
mov
inc
insb
xchg
xor
xchg
in
loopne
or
jg
movl
inc
jno
mov
loop
repnz
add
mov
and
adcb
clc
or
les
add
shlb
pop
and
mov
xor
test
pop
addl
mov
fstps
fwait
and
flds
xchg
xor
xchg
adcb
nop
add
mov
rcr
xchg
sarb
lods
mov
pop
cmp
jle
push
cltd
xor
jecxz
dec
ret
add
fdivr
add
shrl
in
lods
lcall
rolb
or
insb
sbb
mov
stos
lahf
pop
xchg
xchg
dec
aaa
and
arpl
addr16
add
fs
addr16
mov
lret
sbb
je
test
cmpsl
pop
in
mov
mov
mov
push
popf
in
xchg
bsf
xchg
or
jecxz
inc
mov
mov
add
jg
pop
lahf
xchg
aas
mov
mov
pop
rorb
push
subl
inc
push
test
sbb
mov
pop
and
loopne
cmp
mov
addl
xchg
xchg
popa
mov
or
adc
cmpl
into
cmp
xchg
mov
mov
pop
shlb
mov
push
loope
jnp
sbb
arpl
test
nop
rcl
fwait
cmpsl
lds
out
fcompl
std
dec
cmpsb
xor
das
jnp
or
repz
mov
mov
ja
sahf
test
cmpsl
mov
xchg
sbb
jmp
mov
test
mov
add
mov
test
repz
xchg
sti
inc
and
push
lods
inc
or
int3
lcall
dec
sti
shll
and
stos
dec
add
lea
cmp
orb
mov
adcb
lcall
xchg
pop
mov
daa
popl
push
mov
pop
movsb
das
fiadds
shll
pop
shll
shlb
pop
fsubrs
int3
ss
fwait
js
int3
scas
subb
jp
xchg
pop
repz
lret
mov
js
xchg
imul
push
xchg
mov
icebp
mov
inc
pop
orl
push
insb
push
vpunpcklqdq
unpcklps
fstpt
add
pop
mov
jnp
mov
push
sub
ja
sub
faddl
jbe
mov
inc
repz
movsl
adc
cmpsl
pop
decl
imul
dec
mov
inc
icebp
pop
clc
xchg
or
addl
addb
js
mov
mov
add
mov
add
mov
mov
push
test
sub
mov
xor
iret
cld
mov
xchg
and
push
fstpl
sub
frstor
push
sub
adc
loop
add
cli
test
int3
testb
adc
clc
fmulp
cmpsb
jbe
fimuls
scas
or
cmp
int3
mov
mov
xchg
sub
or
repnz
outsl
jns
mov
roll
icebp
push
shrl
jno
inc
shll
cli
or
arpl
in
xor
lahf
and
repz
hlt
fidivrl
lcall
xlat
mov
je
mov
xchg
int
cmp
aad
stc
in
movl
xchg
daa
mov
out
movsl
negl
mov
add
xor
insb
mov
pop
iret
push
loope
push
or
addl
sub
out
inc
rorb
cltd
jg
push
inc
lods
daa
test
add
cmp
lahf
mov
sbb
out
cld
add
pop
or
cmp
pop
enter
outsb
or
jns
sub
out
test
or
ljmp
xcrypt-ctr
add
orb
test
loopne
ret
test
fmuls
iret
xlat
out
test
xchg
mov
inc
mov
ljmp
cmpsl
lret
fsts
mov
cltd
repnz
and
push
add
dec
popf
repz
movsl
iret
cld
test
fnstcw
jbe
lods
jae
ret
test
cmp
jg
cmp
xchg
lea
nop
cmp
adc
xchg
pop
add
lock
negb
push
cmpsb
scas
adc
xor
xchg
lea
mov
xchg
repz
mov
fwait
adc
lahf
xchg
sti
inc
outsb
std
sbb
push
out
outsl
or
or
add
and
out
mov
shl
mov
and
cmp
fiaddl
dec
jo
in
mov
stos
int
pop
xchg
cld
mov
add
sbb
subb
xchg
mov
mov
inc
or
sti
push
aam
pop
jmp
addb
lea
imul
repnz
repz
sarb
std
mov
popf
add
std
insb
fists
rorb
bound
adcl
dec
das
lcall
repz
cmp
inc
or
ja
inc
inc
cmp
das
lods
mov
mov
scas
xchg
or
in
mov
rol
mov
lret
jnp
out
lahf
or
shlb
cmp
clc
jo
push
xor
sub
lds
mov
xchg
sarb
aaa
icebp
xchg
repnz
or
js
jp
inc
inc
outsl
hlt
pop
jo
inc
addl
sbb
test
addb
addl
movb
xchg
in
loopne
mov
cmp
mov
repz
or
xchg
int
jb
mov
jbe
cmp
xchg
je
jno
jne
jo
pop
push
jge
add
mov
pop
jg
js
jo
cmp
inc
test
lahf
jle
sahf
mov
jae
nop
pop
movsb
pop
jne
sbbl
pop
cmpsl
js
inc
call
stos
cmpsl
mov
mov
xorl
lret
jo
test
lret
or
pop
cmp
mov
insb
lahf
mov
mov
adc
movsb
inc
popl
or
ret
mov
mov
pop
adcl
or
sti
add
scas
mov
in
sbb
div
ret
and
inc
cmp
lock
inc
repnz
movsl
inc
jns
xchg
dec
or
dec
or
push
daa
shll
push
testb
fdivs
adc
std
mov
adcl
or
mov
xor
test
div
or
push
ret
mov
cwtl
xchg
xor
sub
call
xchg
mov
int3
lock
setae
or
or
add
lds
push
std
pop
adcl
xchg
mov
or
jge
push
sub
div
mov
das
jge
lods
ja
inc
jmp
xchg
sahf
test
pop
xchg
add
nop
jno
and
push
nop
cmpb
inc
ljmp
jmp
int3
pushf
outsl
icebp
test
ljmp
inc
cltd
mov
pop
in
mov
mov
sbb
rorl
xchg
ljmp
lds
add
mov
repnz
mov
mov
xor
rep
inc
addb
or
pop
stc
pushf
mov
push
push
ret
jg
push
mov
or
or
cmpl
cmp
cmp
icebp
mov
adc
jg
push
gs
div
sub
adc
jl
push
rorl
test
push
lahf
or
out
jp
pop
jge
in
or
in
mov
mov
sub
stos
sbbl
push
lret
lods
inc
inc
mov
gs
jmp
add
inc
icebp
orb
std
or
orb
loope
lods
stc
jmp
xchg
add
lods
aad
jg
or
and
xchg
mov
xchg
xchg
movsb
pop
fwait
pop
adc
mov
jecxz
adc
pop
sub
jns
xchg
push
mov
dec
pushf
dec
jo
sub
loope
sbb
cmp
push
fisubl
ss
or
add
subl
xchg
outsl
stc
shr
test
cmc
pop
scas
arpl
lods
push
xchg
rcrb
test
lret
lods
nop
enter
cmp
mov
aad
lock
test
jbe
adc
test
xchg
scas
jmp
xchg
xchg
mov
frstor
xchg
xchg
aas
jp
mov
xchg
cmc
cmpsl
xorb
rcr
and
cmp
mov
movsb
ror
push
js
lea
hlt
mov
pushl
nop
cltd
jnp
data16
leave
mov
outsl
inc
icebp
data16
pop
hlt
les
mov
adc
lock
mov
outsb
adc
xchg
mov
sti
movsl
popf
mov
mov
mov
out
leave
jmp
pop
fisubl
test
mov
out
mov
jmp
out
daa
pushf
shrl
icebp
out
jl
jle
lods
xchg
roll
rcll
cmp
cmp
dec
inc
rcl
xlat
andb
pop
pop
jge
add
mov
push
mov
add
inc
sbb
aad
loop
cmp
mov
rcl
repnz
xor
mov
mulb
insb
sbb
xchg
cwtl
mov
mov
lahf
sbb
xchg
lcall
loopne
xchg
cltd
inc
push
into
arpl
inc
mov
inc
stc
stos
adc
adc
xchg
test
pushf
mov
adc
sub
movsb
loop
mov
jge
mov
lahf
stos
pop
pop
ss
mov
xchg
ljmp
inc
lods
dec
pusha
lock
xor
or
mov
mov
sub
subl
repnz
adc
cmc
jp
neg
test
fwait
adc
xchg
add
sub
mov
or
sbb
shll
jno
pop
outsb
test
ret
shlb
xor
jnp
xor
bound
cmp
orl
loope
xchg
mov
mov
fsubl
insb
lea
mov
xchg
or
add
mov
lret
in
dec
iret
mov
es
fldl
mov
fcomi
jo
lock
cmc
ror
js,pn
stos
pop
ja
movsb
mov
test
pusha
mov
cmp
stos
js
repnz
sub
filds
xchg
insb
shll
mov
loope
mov
icebp
add
rcrl
xchg
inc
or
pop
cli
jmp
dec
and
mov
add
sub
ljmp
xor
xchg
data16
or
or
fisubl
or
lret
sbb
adc
sub
mov
xchg
lods
iret
test
push
icebp
mov
hlt
cltd
js
lea
pushf
fwait
arpl
mov
insl
aaa
in
xchg
sub
repz
xor
out
push
and
idivl
cmpsl
push
jmp
fcomip
out
mov
mov
out
inc
lods
dec
adc
mov
mov
ljmp
cmpb
lock
add
mov
repz
cmp
push
repnz
xchg
sahf
aaa
in
out
nop
test
xchg
mov
call
push
push
sbb
jp
test
fcmovne
data16
mov
out
fwait
xchg
cld
xchg
rcll
idivl
jecxz
out
or
sbb
popf
es
dec
div
and
aam
out
test
lds
push
push
mov
xchg
fists
mov
cltd
and
push
cld
adc
fwait
int
pop
std
xor
repnz
ror
nop
aam
push
pop
arpl
outsb
lea
aaa
pop
dec
fcoms
mov
add
outsb
mov
bound
inc
mov
cvtps2pi
fwait
sub
xchg
lods
mov
push
dec
xchg
sub
ss
ss
xor
xor
movsl
adcb
fwait
lahf
int3
or
sahf
sbb
xor
or
dec
or
and
ss
cmp
xchg
inc
repz
fsubrl
cmpsl
sbbb
dec
xor
stos
adc
pop
pop
pop
outsb
cmpb
ret
fnstenv
dec
push
xor
andl
stos
mov
nop
lds
dec
stos
out
mov
lcall
stos
mov
xchg
cmp
xor
lahf
xchg
dec
movsb
rcl
into
mov
add
xor
mov
pop
push
mov
dec
jne
movsb
stos
test
pop
call
mov
dec
push
ljmp
sub
add
inc
or
fidivl
test
sub
jae
dec
cmpb
clc
jg
hlt
sbb
push
xchg
jae
aaa
imul
sub
dec
xchg
dec
xchg
popa
add
and
and
adc
pop
cmp
imul
or
dec
push
push
pop
xchg
mov
jo
mov
out
sbb
scas
fcomps
or
outsl
lods
jbe
and
mov
mov
lret
ss
mov
jae
cmp
call
popa
seto
jb
in
and
into
mov
test
hlt
frndint
sub
insl
scas
js
rolb
ror
popa
dec
xor
jne
cwtl
mov
cld
les
jmp
xchg
cmp
in
icebp
lret
or
jp
jo
pop
in
test
jbe
movl
jmp
seto
mov
ds
mov
dec
cmpsb
add
jae
lock
in
xchg
xchg
orl
mov
mov
ljmp
fsubrs
inc
das
test
aaa
insb
lcall
xor
repnz
repz
jg
pop
outsl
mov
pop
test
aad
sbb
in
lods
mov
jle
scas
pop
insl
sbb
movsb
push
or
xchg
aad
sbb
push
adc
xorb
nop
fstps
and
outsb
mov
rcl
shll
push
das
dec
rol
fwait
jbe
mov
xlat
stc
pop
mov
les
imul
mov
xchg
addl
jne
mov
push
iret
jecxz
ret
xchg
mov
daa
mov
pop
adc
mov
xchg
shr
push
add
mov
add
in
pop
int
or
stc
cmpsl
cld
jl
ljmp
dec
mov
sbb
lock
mov
fldt
and
in
jnp
leave
pop
faddl
add
xor
rcrb
jo
fwait
mov
add
or
ljmp
lret
clc
mov
push
fwait
mov
pop
cmp
lret
pop
shrl
fwait
sub
jge
lock
in
mov
pop
shrb
pop
mov
add
fwait
and
xor
repnz
sbb
ljmp
shl
rcrb
lock
stos
repnz
frstor
mov
xchg
ja
push
cmp
cltd
or
xor
xlat
add
adc
or
scas
xchg
lea
lods
mov
ret
fucomip
sbb
arpl
fld
pop
icebp
in
or
test
lock
pop
pause
cltd
aam
into
sub
jno
pop
scas
insb
xor
jecxz
xchg
lea
fmul
mov
xlat
pop
lret
addb
out
mov
aam
push
shlb
sbb
data16
jb
lea
int
push
jno
pop
stc
repnz
mov
mov
or
mov
rcr
mov
aaa
cs
pop
or
sbb
jg
cmp
in
xchg
inc
aas
addr16
inc
lret
lahf
mov
xor
xor
subl
sbb
ja
mov
xchg
sub
push
pop
dec
fiaddl
cmpxchg
xchg
xchg
cmc
pop
mov
test
aad
mov
push
jl
or
int
shlb
xchg
xchg
mov
out
inc
test
sub
sub
mov
inc
jg
sbb
incl
and
adc
mov
cmp
xchg
add
fidivl
mov
cmpsl
push
mov
cwtl
jp
push
pop
adc
mov
add
popf
repnz
push
lret
les
sbb
lods
das
stos
push
movsl
adc
jmp
clc
and
cpuid
mov
test
hlt
mov
mov
mov
cltd
sub
pop
pop
ret
and
xchg
repz
push
mov
jl
mov
mov
jg
pop
inc
xchg
fcmovnb
cmpsl
pminub
inc
push
ret
xlat
mov
icebp
xchg
push
sbb
push
scas
mov
stos
pop
cwtl
sti
aam
sarl
cmc
pop
jno
xchg
rolb
stos
int3
psubw
jecxz
out
rcrl
subb
push
push
filds
mov
repz
or
out
inc
inc
lds
jae
stos
cmpsl
xor
adcb
sub
popl
lds
loop
mov
inc
aad
lea
mov
ret
aam
sahf
test
xor
aam
pop
xchg
pushl
xbegin
jmp
cmc
outsb
out
dec
dec
iret
xor
pop
fsts
adcb
mov
dec
adc
mov
push
popf
mov
sub
xchg
mov
cmpsl
ret
mov
loop
rcrl
stos
jne
push
mov
lea
dec
cmpsl
push
xchg
pop
test
xchg
jnp
jne
sahf
cmp
negl
mov
add
imul
fwait
stc
mov
andb
pushf
push
repz
pop
cmpsl
int3
push
insb
lods
jle
lahf
dec
aam
mov
sar
lea
xchg
in
test
add
pop
xor
ret
iret
repz
test
cld
xor
orb
rol
sub
mov
dec
xor
das
in
aam
mov
or
or
pop
repnz
mov
and
repz
sub
popf
les
mov
addb
push
mov
mov
loop
mov
jae
fdivs
arpl
roll
imul
outsl
jbe
lea
pop
mov
call
je
mov
testl
nop
mov
and
mov
jbe
lock
cmp
cltd
lock
cmpsb
cmc
jno
or
mov
mov
mov
push
stc
jmp
lea
or
addr16
stc
movsb
ss
out
js
out
roll
mov
stos
add
jge
js
add
shr
cmpsl
stc
out
cmc
popa
or
out
mov
ljmp
adc
aad
add
xlat
inc
xchg
in
xchg
mov
cltd
shl
dec
adc
pop
loope
out
mov
call
pop
adc
dec
xchg
mov
addb
xchg
cmpsb
push
lret
ljmp
inc
daa
movsl
dec
aad
nop
mov
or
inc
sbb
jno
add
loopne
ds
popf
movsl
iret
ret
aas
cwtl
loope
fwait
int3
mov
leave
pusha
xor
fsub
xchg
jno
lret
rorl
repnz
jle
sbbb
movb
xchg
dec
pusha
les
mov
ret
rcr
pop
push
test
jl
xor
xchg
lret
inc
scas
cltd
out
sub
in
sbbl
lret
jp
andb
mov
ficomps
int3
jle
mov
loop
ss
test
fcmovnbe
das
push
lcall
add
mov
xchg
pushf
inc
aad
rcrb
shll
das
in
fs
and
xor
inc
mov
insb
sahf
add
sbb
fcomps
mov
pop
mov
mov
and
rcrb
adc
iret
xlat
jle
movl
sub
xor
shll
aam
rol
xor
imul
pop
and
ret
adc
xchg
or
ds
iret
push
sub
push
xchg
lret
roll
xchg
xchg
popl
std
lret
sbb
jge
dec
mov
mov
sub
lods
and
repz
mov
xlat
add
inc
xor
das
test
dec
imul
dec
shrb
xchg
rcrb
push
outsl
jecxz
inc
xchg
aam
xchg
idivb
mov
add
ret
add
clc
sahf
push
xor
es
xchg
mov
hlt
adc
mov
sub
adc
das
or
out
movq
or
xchg
ds
out
add
or
pop
test
mov
rorl
inc
xchg
jmp
cmpsl
iret
mov
push
xlat
iret
arpl
fildl
loope
push
test
mov
in
push
clc
mov
add
xchg
push
test
dec
mov
push
and
jecxz
dec
test
addr16
xchg
icebp
divl
mov
aas
loopne
mov
imul
stos
lods
int3
mov
xorb
scas
mov
sub
jmp
cli
sub
bound
dec
cmp
xchg
arpl
xchg
mov
lret
test
aad
shll
xchg
cwtl
arpl
jae
arpl
cmp
bnd
gs
psubsb
rclb
or
xor
jbe
test
xchg
packuswb
test
xchg
pushf
pop
and
inc
ret
sbb
ror
push
xchg
addr16
lock
loop
das
ret
subb
or
jb
lock
lcall
sbb
out
xchg
mov
push
cs
out
lods
out
into
mov
mov
int
jo
loopne
sahf
aas
repz
int3
repz
cltd
cmp
xrelease
fstps
xchg
mov
mov
rclb
sub
lds
jge
lds
add
popf
aaa
pop
or
jp
test
sbb
xchg
pushf
mov
xchg
mov
mov
xor
std
inc
cmp
adc
ljmp
push
cltd
or
sub
xor
push
fsubr
cmp
or
stos
mov
fbstp
xchg
xchg
fsts
mov
push
cmp
inc
xorl
push
add
in
shll
bnd
or
addl
pop
test
daa
jl
push
xchg
out
jmp
mov
and
mov
mov
call
adc
mov
popa
cmc
ds
lds
cs
ds
std
sar
shl
inc
xchg
mov
iret
lret
frstor
jle
rcrl
jno
xchg
in
inc
movsl
xlat
mov
lds
push
mov
fwait
xchg
out
add
mov
dec
xchg
xor
xchg
mov
add
gs
mov
push
add
icebp
xchg
cmp
popf
stos
in
mov
pop
cmc
push
mov
xor
lods
push
aad
loope
repz
ror
pop
mov
outsl
dec
xor
ja
jno
jne
int
in
xchg
mov
jnp
test
icebp
je
lahf
hlt
lcall
inc
js
lret
jno
jo
cltd
ds
push
popf
jo
sbb
sti
lods
jbe
jne
popa
lret
xchg
or
sar
fmulp
cwtl
imul
test
cmp
pop
xor
mov
hlt
int3
or
test
lret
lods
adc
mov
mov
mov
cmpl
sarl
mov
pushf
lret
or
rcr
inc
jmp
adc
mov
pop
cmp
inc
add
xor
adc
clts
pop
xor
xchg
add
sub
mov
int3
das
xchg
mov
xchg
ljmp
ljmp
aas
push
rclb
test
stos
pop
aas
std
push
jge
cmc
inc
das
pop
out
push
iret
sub
lret
out
mov
sbb
sub
lea
cmp
rclb
sahf
xchg
pop
jmp
adc
or
push
rorb
lods
mov
cwtl
lret
sub
out
sbb
jno
aas
xor
aad
mov
aaa
or
jge
fsubr
or
aaa
aaa
lahf
cld
test
or
js
daa
jge
inc
pop
jp
insl
add
jge
mov
std
js
jle
es
push
xchg
and
test
cmp
es
push
repnz
mov
test
and
dec
aaa
imul
jmp
das
add
aas
add
mov
pop
xor
sbb
aas
add
in
repz
mov
sub
cmp
ret
mov
xchg
and
mov
and
push
gs
cmc
mov
fidivl
or
mov
lods
sahf
fstps
or
fisubs
in
jle
adc
or
or
das
stos
cmp
cmpsb
and
or
xchg
imull
aaa
es
lret
mov
add
int3
jae
add
psubb
bswap
fstl
cmp
repz
inc
repz
cwtl
ja
aas
push
xchg
pop
cmpps
push
push
insl
inc
xchg
icebp
xchg
mov
dec
mov
push
mov
adc
or
fwait
xor
pop
pop
stos
lahf
or
pop
test
insl
mov
loop
or
insl
sub
sub
xor
mov
cltd
nop
xrelease
xchg
xchg
repz
aaa
movsl
movsb
sbb
and
andb
xchg
aas
cmp
xchg
loope
pop
or
mov
xchg
outsb
test
iret
je
dec
mov
testb
psubd
js
shll
xchg
adc
mov
cli
mov
jp
or
fwait
xor
cmp
push
add
sbb
xchg
js
repnz
xchg
mov
imul
add
icebp
sahf
xor
test
push
es
push
stc
add
lcall
scas
outsb
adc
mov
jbe
sbbb
xor
test
shrb
mov
mov
mov
fidivs
or
or
add
or
rep
dec
jnp
or
ds
or
shr
or
add
cs
add
adc
imul
imul
sahf
test
xor
mov
mov
jae
xorb
cwtl
test
lret
int
push
daa
jmp
sti
mov
shrl
cltd
repnz
filds
jo
xor
outsb
ja
jge
mov
xchg
ret
cmpl
icebp
mov
out
aad
and
mov
aad
into
or
lea
mov
pop
jo
or
jnp
lea
imul
stos
jo
pusha
jnp
in
call
shll
imul
pop
clc
lods
cmpsb
or
testb
mov
lods
jns
mov
jns
xor
lods
push
xchg
xchg
popa
les
stos
mov
inc
ret
std
xchg
sub
ja
jmp
daa
flds
sahf
in
stos
sub
jbe
sub
fstpl
cmpsb
xor
xor
mov
loope
lret
aaa
subl
or
push
jmp
icebp
rorl
jnp
idiv
cmpl
fs
in
pop
xchg
cmc
or
add
push
test
xchg
jp
inc
cli
loope
xchg
stc
xchg
js
xor
pusha
jl
clc
mov
mov
cwtl
sub
cld
in
imul
sbb
sub
ror
repnz
sbb
pop
add
mov
jg
rcl
std
sbb
cmpb
cmp
pop
xor
add
jecxz
outsl
sbb
mov
inc
mov
inc
push
jbe
pushf
add
jecxz
xchg
mov
pushf
rdpmc
lret
call
mov
xchg
in
daa
jb
adc
iret
pop
mov
aaa
jg
adc
pop
setnp
sub
mov
mov
lods
mov
dec
loope
imul
shlb
sbb
add
fs
pop
test
dec
leave
push
mov
or
test
inc
xchg
pop
push
add
sub
imul
data16
xor
add
jns
pusha
aas
sbb
push
jecxz
mov
jne
mov
dec
cltd
stos
addb
mov
xchg
aas
nop
pop
aaa
push
fwait
pusha
in
mov
out
jp
mov
stc
ret
cmc
testl
frndint
xchg
rcrl
mov
dec
test
lea
loope
inc
imul
ja
les
cmpsb
aas
mov
dec
cmpsl
je
test
lock
add
cmp
xchg
cmpsl
cmp
arpl
push
test
dec
rcl
add
shrl
adc
sub
fsubr
mov
inc
out
int3
sbb
sbb
xchg
inc
and
ljmp
loope
add
les
jnp
mov
bound
push
ljmp
inc
jb
xchg
pop
fldl
lret
jmp
dec
pop
fst
inc
orb
cmp
stc
filds
test
add
mov
decl
fmuls
out
jae
or
mov
sahf
aaa
jnp
addl
or
pop
in
pop
or
xchg
xor
stc
fidivrs
icebp
xchg
clc
add
adc
pop
or
daa
adc
loope
test
inc
aad
shl
lcall
mov
jmp
add
mov
mov
xchg
lds
xorb
xchg
jp
jmp
pop
dec
mov
sbb
int
pop
mov
xchg
push
push
imul
xor
repnz
imul
stos
and
stc
setl
aaa
mov
aad
mov
outsb
fiadds
arpl
loop
and
lret
pusha
xchg
gs
xor
pop
in
or
pop
sub
movsb
or
sahf
arpl
pop
fstl
mov
xchg
cmpl
mov
lret
lea
cli
jae
clc
adc
xlat
dec
inc
xor
test
xchg
dec
jmp
jecxz
lods
mov
xchg
int
cmp
pop
pop
sbb
dec
repnz
dec
mov
adc
mov
push
enter
movsb
andps
das
or
bound
push
xchg
mov
sbb
mov
call
mov
jle
mov
jg
stos
mov
test
mov
stos
xor
xor
les
fldcw
aaa
and
ljmp
shlb
mov
push
adcl
mov
decl
adc
subl
faddl
push
lahf
sbb
push
ja
ja
arpl
fisttps
mov
loope
or
or
mov
ss
mulb
mov
mov
fldenv
and
repz
xor
xchg
das
push
mov
and
pop
xchg
adcl
push
fcomps
fmull
aas
aam
mov
jmp
xor
testl
mov
mov
jo
add
xchg
xor
or
neg
aam
inc
dec
pop
cmpl
inc
lcall
loop
mov
xor
inc
xor
xchg
sti
xchg
or
jo
stos
xlat
pop
stos
inc
fldl2e
lahf
mov
shl
mov
in
cwtl
lds
lahf
sub
das
shll
loop
mov
aaa
int
mov
loope
ja
popa
movsb
jmp
lret
stc
popa
fadds
mov
sarl
rorb
outsl
lods
xor
pop
les
call
cmpsl
xchg
imul
sub
adc
dec
mov
movsl
mov
jb
outsb
popl
lea
xchg
mov
pop
xchg
push
add
add
add
mov
mov
fwait
xchg
inc
fcompl
add
or
pop
cmpl
call
insb
int3
aad
test
out
gs
mov
or
mov
mov
inc
push
cmpl
cwtl
ja
mov
jecxz
mov
sti
sub
ss
decb
jl
jge
sub
aam
leave
aad
cmc
mov
xchg
jbe
movsb
or
add
mov
sbb
test
push
in
push
or
jo
dec
jno
ficomps
lret
sbb
dec
lret
or
lgdtl
lea
pop
dec
ficoms
inc
adc
jge
dec
mov
inc
insb
test
dec
lsl
test
icebp
add
or
or
push
int3
inc
outsl
dec
or
pop
jmp
stos
push
dec
xorps
push
sub
enter
dec
xchg
enter
fisubl
pop
and
dec
push
ljmp
pop
mov
push
inc
pop
in
fisubl
xchg
fistps
mulb
or
je
xchg
xchg
pop
std
test
outsl
mov
xchg
xchg
xchg
lret
iret
pop
inc
xchg
int
aaa
jl
movsb
rcll
xor
mov
push
ret
mov
add
addr16
xchg
xor
stc
fwait
dec
sub
ret
fdivrl
ror
xor
ja
cmp
lahf
inc
push
icebp
or
inc
loopne
cld
test
push
stos
lea
stos
lock
clc
enterw
or
cmpl
or
cwtl
outsl
or
jbe
dec
mov
ljmp
ret
cmp
inc
mull
iret
push
aaa
push
fistl
leave
adc
inc
cmpsb
dec
rcrl
shll
ss
adc
mov
adc
pushf
xor
push
mov
negl
xchg
inc
inc
cmp
dec
xor
pop
pop
mov
or
sti
jge
pusha
cmp
mov
clc
nop
xchg
mov
add
test
mov
adc
add
mov
xchg
or
rcll
lds
leave
in
cmpb
repz
outsb
cli
andl
add
in
imul
addb
shl
das
sub
jb
lahf
imul
in
rclb
ret
mov
test
xchg
mov
ljmp
mov
pop
xchg
aaa
std
dec
adc
jp
insb
mov
andl
sub
and
pop
lods
sbb
xchg
loop
aad
mov
cmp
pop
pop
int
fstp
js
js
pushf
icebp
lock
jne
rorl
idiv
sbbb
mov
pop
dec
xchg
sub
scas
jns
lods
test
bound
xchg
dec
stos
jmp
int3
cmp
xchg
aad
dec
xchg
pop
cmp
sti
mov
ljmp
roll
cmpsb
out
fptan
nop
dec
sub
aad
repz
out
test
or
xchg
ljmp
xor
in
es
cmc
in
js
xchg
addl
lret
jecxz
scas
xlat
jecxz
mov
cmpsl
subl
pop
repnz
arpl
cmp
inc
cmpsb
adc
lds
scas
adc
jp
sarb
xorl
mov
add
mov
ja
inc
and
pop
mov
data16
test
notl
lahf
aas
or
js
or
or
add
decb
xchg
xchg
stc
sub
test
loopne
xchg
mov
cmp
ljmp
sbb
mov
add
xchg
sbb
rolb
pop
xchg
add
rcrb
add
cmpsl
jle
or
push
and
cmp
rolb
lds
lcall
out
and
aad
fcomi
cmpsl
push
mov
xchg
inc
push
pushf
mov
aaa
faddp
int
push
lods
sbb
cmp
mov
push
loopne
add
orb
mov
sbb
ss
sub
mov
ret
mov
out
lods
xchg
fbld
inc
mov
dec
jmp
ret
repz
mov
es
cli
mov
mov
test
les
test
mov
in
mov
shl
inc
int
mov
jp
stc
popa
movsl
pop
push
leave
popf
mov
stos
test
xorl
add
mov
jmp
add
mov
xor
sbb
mov
jg
jbe
ds
out
jmp
minps
mov
jmp
aad
out
jge
pop
cmc
ja
adc
mov
mov
shll
cmp
lea
nop
xchg
test
test
scas
push
cli
ja
pop
mov
sub
andb
popf
mov
lock
cmpsl
mov
add
cmpl
jae
xchg
xchg
cmpb
and
mov
or
cli
cmpsl
or
testl
inc
mov
ret
mov
repz
mov
jp
shlb
xchg
lods
xchg
mov
dec
add
iret
cmp
push
in
lock
xchg
insb
movsl
inc
pop
int3
lret
inc
jecxz
xlat
jns
movsl
in
add
test
mov
mov
inc
xchg
fbstp
shlb
loope
mov
pushf
loope
lahf
popf
push
mov
sti
xchg
lds
icebp
hlt
xlat
mov
jne
or
mov
scas
movsb
test
das
stos
aaa
jae
lcall
xchg
aad
sbb
sub
cld
mov
cmp
call
arpl
xor
or
lcall
mov
cs
lahf
inc
popa
xor
push
lock
bound
add
pop
mov
mov
insl
push
nop
clc
js
or
lahf
xchg
jbe
mov
imul
scas
add
pop
lock
nop
jb
fisubs
in
lea
xchg
push
pop
pushf
ret
cmc
bound
repz
jns
dec
or
das
fnstsw
add
inc
xchg
mov
pop
shll
insl
jbe
hlt
xchg
pop
fcmovnu
xchg
cmpsl
mov
inc
icebp
xchg
jns
in
pop
aas
scas
xor
jbe
clc
fwait
pop
out
jp
mov
sbb
test
mov
sbb
add
in
ljmp
sub
out
clc
cmp
test
inc
pop
scas
pop
sti
add
xchg
or
ret
or
push
cwtl
nop
enter
add
mov
imul
aam
mov
pop
jno
daa
mov
mov
sub
ret
push
es
loopne
call
dec
dec
inc
pop
dec
fldlg2
arpl
nop
dec
insb
leave
pop
faddl
dec
repz
mov
jp
xchg
mov
insb
inc
xchg
adc
xchg
inc
and
pop
mov
ror
xchg
push
test
xlat
and
lcall
inc
pop
outsb
pop
mov
gs
adc
scas
mov
mov
xchg
mov
sbbb
test
aad
movsl
mov
test
cmpsl
leave
scas
xlat
in
lahf
ret
repz
fimuls
push
inc
andl
mov
fimuls
add
xchg
sub
pop
lods
sub
mov
sbb
imull
mov
leave
jb
xchg
testb
fadd
cmp
adc
xor
xchg
jl
pop
hlt
popf
mov
inc
push
mov
insb
fidivrl
pop
add
shrl
inc
cli
jg
sub
jae
cs
and
push
fisubrl
stc
cmp
mov
aam
add
or
test
xorb
lcall
mov
mov
mov
popa
and
xchg
in
ret
jp
jo
outsb
mov
inc
fcomp
cmp
mov
mov
ss
dec
ja
xchg
or
push
add
xchg
idivb
in
mov
aaa
int3
arpl
andl
adcl
notl
jbe
call
shll
filds
add
mov
icebp
lcall
aad
sti
xor
mov
loope
repnz
lahf
mov
and
aad
or
cmpsb
jne
dec
sbb
ja
cmp
mov
mov
scas
dec
and
fldenv
clc
ficomps
or
xchg
pop
insb
shll
out
fs
mov
xor
in
ret
addl
movsl
cmp
loope
imul
sahf
sarl
outsl
pop
shr
out
add
sub
fnstsw
addr16
imul
mov
cli
inc
cli
xor
and
inc
scas
xlat
pop
fwait
cmpsb
pushf
mov
adc
xchg
mov
xor
movsl
lea
int3
jecxz
lods
movb
mov
push
ficoms
mov
jp
nop
sbb
jmp
call
xor
and
in
fwait
mov
push
hlt
faddl
jo
mov
movsb
mov
pop
pop
movl
xchg
repz
mov
cmp
cwtl
out
fsts
mov
xor
adc
mov
sbb
negl
test
or
movsl
push
xor
pop
sti
movsl
or
cwtl
xchg
mov
inc
lcall
ja
adc
mov
and
mov
mov
aas
iret
xor
loope
mov
and
movl
dec
lahf
inc
cs
std
shrb
xor
das
jbe
cmp
daa
mov
cmp
mov
outsb
icebp
fwait
call
xchg
loopne
mov
and
lods
xchg
xor
shl
ret
sbb
es
lahf
adc
enter
dec
mov
aaa
pop
notl
mov
loope
setne
mov
in
add
fbstp
xor
movsb
aas
or
mov
data16
xchg
push
fcoml
and
subl
mov
xchg
cmpsb
repnz
mov
pop
xchg
fucomip
mov
imul
lods
mull
aas
ss
xchg
sub
ret
ret
imul
inc
inc
mov
ret
mov
ret
or
xchg
xlat
mov
cmp
jmp
cmpsl
das
push
daa
out
cmc
mov
ja
and
ja
js
jae
and
dec
xor
std
sbb
roll
jl
repz
sbb
jle
sbb
test
xchg
push
inc
dec
shlb
repz
movsb
testl
lahf
out
outsl
arpl
mov
pusha
ds
inc
test
mov
iret
test
dec
mov
mov
dec
cmp
push
push
push
notb
xchg
repz
adc
and
scas
test
pop
add
lods
rcr
repnz
mov
mov
jg
pop
xchg
cwtl
jno
repz
inc
pop
mov
add
mov
mov
bnd
mov
icebp
lahf
btc
inc
iret
cmp
jg
movsb
pop
outsb
or
out
rcr
ds
cmpsb
das
incl
mov
shl
lret
inc
lea
cmc
mov
push
push
add
inc
pop
ror
and
cs
sti
xchg
push
adc
pop
scas
inc
push
or
js
mov
mov
ja
in
orb
or
int
jg
pop
addr16
enter
gs
mov
mov
fucom
pop
mov
popf
push
lods
lcall
ret
xchg
repnz
lea
mov
push
xor
imul
cld
rep
je
outsb
imul
jnp
xchg
mov
int3
rcll
aas
push
ud0
jne
pop
js
clc
js
lock
or
or
mov
fwait
mov
xchg
push
pop
jno
subb
mov
sbb
or
loope
jp
inc
fistps
test
arpl
mov
arpl
cmp
mov
xlat
mov
or
push
or
insb
mov
ja
movsl
aam
test
fisttpl
or
mov
imull
push
jp
jmp
test
mov
pusha
dec
xchg
inc
or
repnz
mov
mov
sarl
ja
pop
dec
lret
in
test
inc
fiaddl
lock
jnp
rol
mov
or
xchg
mov
pop
add
aaa
jge
lods
push
fidivrs
aam
dec
fistpll
jae
cmpb
mov
testb
pop
pop
jmp
mov
js
push
movsb
jns
loope
or
sub
jbe
xchg
mov
jbe
je
jns
cmc
xchg
lret
or
fwait
cmp
rcll
sbb
ret
cmpsl
jae
fisubrl
gs
xlat
xor
push
cwtl
pusha
sbbb
mov
ret
inc
push
or
das
sub
testl
pop
pop
jnp
add
adc
mov
cmpsb
aad
cmc
or
das
and
ljmp
test
fstpl
lods
addr16
loop
nop
sti
sbb
mov
inc
mov
jecxz
ja
sar
test
lea
mov
les
sbb
adc
ret
xchg
loop
sbb
or
les
xor
stos
int
jp
mov
add
jae
push
add
or
rorb
in
xchg
xor
jno
add
push
add
ds
sahf
mov
das
add
push
mov
mov
out
dec
pop
stc
dec
or
mov
sarb
sar
daa
mov
iret
orl
mov
aad
xchg
fisubl
lret
push
in
icebp
and
dec
mov
add
iret
hlt
mov
fstps
push
test
int3
adc
inc
or
jp
insl
mov
decl
xchg
xchg
add
or
or
mov
aas
nop
pop
minps
flds
dec
pop
test
gs
xchg
xchg
stos
movsl
inc
fdivr
push
mov
ret
xor
fwait
stos
add
push
jae
repz
in
cld
subb
lahf
cmpsl
enter
std
dec
xor
xchg
ret
lcallw
int3
adcb
addr16
pop
mov
outsb
lahf
jae
ja
ds
xchg
push
sbb
sbbl
lods
in
jnp
movsl
lds
cmc
mov
pop
add
ret
pushf
mov
cmpb
je
and
mov
mov
lea
pop
rcr
ret
nop
or
or
or
inc
add
into
test
frstor
cmp
fcoml
add
sub
dec
mov
push
scas
gs
test
sti
mov
add
das
fbstp
stos
out
xor
int3
test
fists
cmpsl
xchg
repz
imul
mov
jb
pop
inc
cltd
fiadds
lea
xor
icebp
idivl
cmc
sub
notl
sbb
cli
fld
pop
ljmp
and
jle
or
sub
nop
push
pop
adc
repz
ret
sbbb
push
ja
jae
cmp
xor
orl
lods
add
pop
ja
pop
lret
roll
push
push
jns
xchg
mov
cld
js
jmp
icebp
adc
xchg
into
or
mov
push
scas
add
or
aam
rcll
adcb
repz
fisubl
xchg
loopew
test
mov
subb
and
inc
sahf
xchg
mov
lea
cli
lods
jmp
test
xchg
adcb
cmp
jno
jmp
nop
inc
test
xchg
inc
pop
inc
in
pop
addr16
xor
gs
clc
lret
fdivrs
jmp
rcl
sti
mov
test
add
movsb
movsl
ss
bound
add
sbbb
xchg
jns
iret
cli
dec
loope
xchg
rorl
cmp
inc
cmp
cltd
dec
repnz
fadd
fld
stos
fnstcw
testl
or
orl
lea
dec
rcll
mov
shll
shll
xchg
in
scas
xchg
dec
xchg
inc
add
js
mov
jbe
inc
daa
out
push
adc
inc
jmp
xchg
xchg
lea
adc
imul
jmp
add
imul
lahf
adc
stc
add
sub
addr16
mov
mov
cmpsb
push
clc
inc
adc
cmpxchg8b
cmc
ss
xchg
addr16
cmp
jns
inc
mov
in
jns
dec
jecxz
add
push
push
sahf
mov
test
comiss
xor
push
das
xor
or
adcl
jno
xor
rorl
and
or
imul
cmp
mov
incb
sbb
outsl
aad
mov
cmp
inc
lea
mov
jmp
lret
in
movsl
pop
mov
and
mov
test
fcoms
or
pop
pop
in
adcb
mov
add
xchg
call
add
mov
fildl
mov
call
js
insb
out
xor
or
and
loope
add
lods
orb
addl
xchg
mov
pop
xchg
push
mov
stos
std
push
scas
ljmp
rcrb
jle
out
or
pop
es
inc
addr16
inc
jp
mov
test
sbb
mov
iret
inc
nop
out
pop
test
iret
inc
lcall
pop
xorb
xor
sbb
push
adc
cmp
test
and
xor
fcomip
jnp
jnp
mov
arpl
cs
mull
leave
mov
insb
pop
fsubs
inc
inc
mov
mov
mov
mov
ljmp
daa
xchg
mov
cwtl
or
mov
insb
mov
jns
jp
test
mov
mov
xchg
pusha
lcall
out
in
movsb
out
and
mov
ljmp
add
mov
xchg
fwait
mov
sub
pop
into
xor
fabs
popl
ljmp
orb
xrelease
imul
sub
sarb
add
push
ss
pop
xchg
inc
dec
aas
cmp
cmpsl
cmc
scas
mov
add
push
and
fwait
jge
xchg
pop
scas
daa
in
cmp
xor
push
add
cltd
or
pop
xorb
sub
imul
sbb
roll
rorl
jecxz
inc
fisttpl
into
xchg
xchg
mov
movsb
add
les
push
adcl
out
sbb
or
push
jmp
imul
imul
jae
inc
mov
jg
jnp
pop
cmpsb
jnp
or
mov
inc
ret
and
xor
mov
sub
mov
xchg
and
pushw
mov
loopne
mov
int3
andl
lea
mov
int3
je
arpl
mov
stos
pop
mov
test
pop
ljmp
call
push
fld
sbb
sub
cmpsl
enter
test
pop
mov
mov
mov
fsubrl
faddl
test
xchg
addl
fwait
test
fwait
out
out
sbb
lahf
xchg
sbb
push
stos
sbb
xchg
xchg
mov
mov
popl
push
repnz
xlat
out
or
int3
imull
xchg
xorl
add
pop
mov
xchg
xlat
popf
xchg
pop
filds
lds
outsl
test
pop
mov
nop
or
cmpsb
dec
ljmp
addr16
cmpsl
xor
shlb
inc
pop
stc
sub
std
pop
stc
mov
inc
cwtl
shll
inc
pop
test
or
stos
ret
or
call
lods
push
adc
cmp
leave
xchg
xchg
inc
in
stos
popa
pop
cs
lea
push
ud2
add
sub
rcrl
pop
xchg
aaa
test
pop
cmp
ud2
in
arpl
sbb
test
out
out
pop
sbb
push
mov
test
aaa
adc
pop
and
or
and
pop
push
stos
stos
pop
mov
test
punpckhbw
push
or
or
add
test
jae
in
cmp
test
mov
ret
sbb
xor
aad
mov
or
or
mov
xchg
mov
pop
in
sbb
push
xchg
loop
inc
fs
lea
adcl
movsl
mov
or
mov
bnd
lods
bound
sarl
jbe
mov
jae
or
jnp
movsb
mov
repz
ror
pop
sub
lea
jle
push
js
cmpl
jp
lret
test
ja
addl
xchg
pop
inc
xchg
rcl
xor
inc
in
mov
xchg
ret
lea
repz
xchg
xchg
jg
push
stos
mov
mov
movq
shl
fcmovb
xchg
nop
iret
insb
sub
adcl
xchg
xchg
daa
rcl
push
or
lahf
or
xlat
and
daa
ss
jne
outsl
jmp
mov
or
xchg
dec
xchg
or
inc
scas
inc
lods
pop
decl
mov
sub
inc
stc
mov
adc
and
enter
xor
xchg
add
mov
test
sarl
call
lods
rorb
cmp
mov
insb
cmpsl
dec
js
test
inc
movsl
adc
jge
pop
add
stos
push
test
scas
or
sbb
sub
mov
or
outsl
lret
jne
or
cmp
inc
je
daa
movsb
ljmp
xor
mov
ss
sub
mov
in
add
cwtl
push
push
add
outsl
repz
xchg
jnp
jl
mov
or
js
or
stos
scas
stc
mov
dec
int
mov
fbld
jbe
or
iret
dec
jg
xchg
jne
shr
int
pminub
rep
pop
mov
pop
inc
mov
mov
cmp
pop
xchg
xchg
add
jmp
mov
sti
sub
les
stc
test
jl
mov
adc
ret
add
or
mov
pop
and
addl
mov
mov
sbb
stc
mov
xchg
xchg
aad
mov
cs
popf
repnz
mov
repz
jecxz
xor
sbb
sbb
pop
xchg
sbb
mov
nop
test
loope
lahf
fmuls
fnsave
inc
cmp
mov
fdivs
shll
xlat
testl
inc
jp
xor
subb
inc
sub
cli
scas
push
aas
aaa
jno
call
xchg
push
test
jmp
in
push
or
andb
add
mov
cmpsw
inc
xchg
inc
lods
ss
cmp
sbb
mov
rol
repz
sub
and
pusha
stc
dec
les
pop
or
insb
push
mov
cmp
ret
xchg
push
dec
mov
sub
xchg
add
dec
fisubrs
shrl
ret
int3
pop
mov
mov
outsl
das
add
xchg
mov
test
or
sbb
jle
jl
mov
imul
scas
stc
addl
test
or
test
or
je
xchg
pop
pop
bnd
xor
mov
insl
dec
insb
shl
mov
scas
ret
xchg
cli
ja
test
cltd
test
je
pop
movsl
push
decb
in
jnp
fs
xchg
jbe
leave
mov
fbstp
mov
cmpsl
insb
imul
int3
notl
data16
inc
pop
shlb
jge
add
lds
pop
jmp
sub
add
inc
fcoms
daa
outsb
xchg
xchg
int
ficoms
jle
lods
lea
test
lods
cmp
push
push
movsl
insb
xchg
das
mov
das
mov
inc
andl
rcll
imul
mov
push
inc
mov
into
mov
orl
addl
push
fldenv
pop
sub
push
push
decb
iret
xchg
out
in
pusha
add
add
mov
lahf
cmpsl
sti
sbb
mov
cwtl
mov
mov
test
das
mov
sub
cmpsb
je
icebp
insb
cmp
addb
push
loope
mov
ja
xchg
sti
sub
jp
pop
mov
add
je
ss
dec
iret
daa
and
jb
das
pop
gs
scas
icebp
jp
mov
pop
mov
jbe
fbld
dec
dec
popf
cmc
xchg
test
imul
push
inc
lods
mov
lods
mov
add
lods
adc
subb
sbb
into
sbb
repz
scas
movsl
mov
les
ret
popf
pop
push
push
push
shll
loopne
and
jl
pop
and
mov
pop
jb
mov
pop
xchg
and
ljmp
sub
lahf
rorb
repz
fisubs
daa
int3
aad
clc
fisubrs
int3
rorl
lret
inc
shll
iret
sub
mov
insb
pop
mov
sbb
xchg
sarl
pause
and
jo
xchg
or
sub
mov
add
fcoml
sbb
push
pop
cmpl
lret
pop
aad
cmp
rclb
aam
adc
jo
jmp
out
sbb
mov
popf
mov
mov
xor
mov
scas
repnz
mov
test
pop
addr16
insb
shrl
lahf
mov
xorb
ffree
and
mov
sub
xchg
insl
repz
push
hlt
sbb
movb
xchg
add
pop
push
out
adc
mov
movb
mov
xchg
rcl
lods
outsl
mov
rorb
stos
jb
inc
xor
xor
int
insl
adc
lcall
dec
cld
xchg
cmp
jno
cmc
push
test
add
inc
adc
hlt
mov
xor
mov
xchg
jnp
mov
cmpb
pop
adc
cmpsl
movsl
cwtl
mov
setne
dec
popf
imul
sub
mov
xchg
test
inc
repnz
sbb
aad
push
mov
pop
jle
and
push
push
sbb
xchg
cmpsl
jge
sbb
jmp
addl
push
aam
movsb
pop
xlat
xchg
dec
mov
push
push
iret
ret
mov
xor
out
jnp
pop
mov
call
mov
or
jl
xchg
add
inc
pusha
movsb
repnz
orl
xchg
sbb
mov
mov
cmp
xlat
push
or
dec
rolb
mov
andb
cwtl
ljmp
stc
pusha
inc
stc
xchg
sarl
insl
rol
xchg
sarl
orb
jl
sbb
and
ret
orb
or
mov
repnz
mov
mov
sub
adc
test
lea
xor
dec
pop
mov
push
gs
in
cmpsb
scas
repnz
sub
fmuls
test
shll
push
scas
mov
jae
test
fistpl
ret
and
mov
adc
lahf
pop
test
hlt
mov
xor
mov
pop
sub
cmpsb
sub
sub
test
jmp
push
leave
pop
sbb
div
mov
test
pop
xchg
call
cmpl
repnz
das
dec
ss
jmp
mov
or
push
aas
ljmp
mov
fldl
xchg
mov
inc
scas
lds
xchg
mov
test
test
pop
fistl
adc
test
push
aaa
test
push
xchg
add
sbbl
adc
mov
xor
add
jne
in
xchg
xchg
inc
xor
xchg
xchg
test
subl
cltd
inc
jl
icebp
in
loope
jl
imul
data16
jns
sub
out
sbb
sarl
decb
lret
sbb
inc
mov
sub
notl
jle
xor
xor
pop
rcl
lods
push
jno
and
flds
inc
cli
fmulp
scas
inc
xchg
in
adcl
ds
jmp
xchg
mov
aaa
xor
sbb
inc
mov
int3
inc
rorl
mov
ja
dec
test
push
testl
mov
mov
repz
lods
jg
in
mov
jecxz
test
lds
ficompl
and
je,pt
mov
and
pop
andl
adc
pop
mov
out
scas
dec
into
jp
lret
lock
ret
mov
mov
test
test
lret
mov
mov
addr16
xorb
imul
push
xchg
or
out
mov
fs
and
fadds
js
xchg
ja
outsb
or
js
out
aaa
scas
xchg
test
jmp
test
inc
xchg
repz
insb
sub
lods
testl
mov
sbbb
mov
xor
outsl
rcll
cmp
push
mov
ficoms
add
stos
loope
mov
push
add
cmp
cmpl
xchg
loope
add
mov
pop
xchg
sbb
icebp
jl
mov
mov
leave
repnz
ljmp
inc
lods
nop
lcall
clc
xchg
xchg
inc
aam
push
insl
addr16
aad
aam
neg
xor
in
jg
mov
fstpt
scas
or
cmpsl
xchg
orl
test
fdivr
add
test
popl
std
repz
and
jb
cmpsb
incl
js
aaa
les
testl
repz
leave
cmp
xchg
lock
lret
xchg
jae
sub
push
dec
ret
jnp
shrb
pop
das
xor
cmc
sub
ds
es
add
shll
insb
add
pop
imul
pop
out
xchg
dec
xor
cmpsb
mov
adc
push
aaa
mov
lahf
add
dec
xchg
in
inc
stos
out
mov
iret
mov
popf
lar
jb
stos
shl
push
lcall
in
div
pop
pop
repnz
lods
push
mov
fstl
push
clc
sub
fiadds
ret
sub
lock
repz
cli
and
lods
test
movl
movsb
xor
imul
xor
and
rol
subb
aad
jecxz
lea
inc
clc
dec
adc
inc
jo
xor
mov
mov
mov
add
dec
or
jno
in
inc
push
aaa
cltd
mov
lock
xor
and
mov
mov
xchg
rorl
div
pop
daa
ljmp
xor
push
les
mov
sub
fildll
stos
out
inc
mov
ja
mov
xlat
push
jp
push
roll
cmc
arpl
cmc
mov
imul
and
lods
rcrl
jo
and
cmc
xchg
orb
push
jmp
mov
push
roll
and
lods
in
pop
mov
das
mov
mov
cmp
sub
in
and
stos
jbe
dec
decb
xchg
mov
mov
add
xorl
inc
sti
jno
sub
jno
mov
repz
jns
fiadds
fisttpl
rcll
lret
sbb
jbe
rcrl
lds
addr16
jp
imul
mov
push
pop
in
or
xchg
gs
xorl
repz
jecxz
aad
cmpsb
test
loop
out
add
xchg
or
rcrl
scas
popf
addr16
xlat
or
test
xor
sahf
scas
into
xor
xor
mov
mov
lods
xor
inc
sub
insb
add
add
sub
ret
leave
js
aaa
ret
gs
movzwl
gs
push
popa
inc
adc
xchg
mov
adc
orps
xor
mov
and
int3
ret
fnstsw
cli
test
xor
in
mov
movsl
pop
ret
jmp
repz
out
jg
add
mov
mov
pop
xor
test
repz
cmove
sbb
out
pop
pop
cmp
dec
jno
push
test
cli
dec
hlt
mov
cmpsl
jns
fiadds
cmc
je
cwtl
inc
and
xchg
sahf
std
stos
out
xchg
jno
mov
add
outsb
add
cmpsb
lret
scas
sub
add
jmp
orb
testl
sahf
popa
test
sub
outsb
jae
call
fistl
pop
dec
inc
int
or
mov
mov
mov
jnp
xchg
mov
xchg
mov
pop
stos
xorb
sarb
lahf
cli
test
mov
mov
movsl
xor
pop
cmovg
test
mov
aaa
pop
inc
jl
cmp
xor
cs
inc
xchg
faddl
mov
sbbl
push
xorb
mov
nop
daa
mov
jecxz
addb
lret
jbe
nop
mov
pop
mov
imul
rcl
cmp
push
loopne
stos
mov
lret
sbb
arpl
pop
xor
sbb
test
mov
lods
pop
sarl
test
out
ret
shl
mov
xchg
and
shlb
pushl
cwtl
xchg
out
femms
subl
cs
xchg
cmc
jl
mov
lock
pop
imul
jnp
or
mov
addr16
rcrl
in
lock
loopne
fwait
int3
adc
lds
jno
nop
pusha
mov
jge
ja
rclb
and
mov
fsts
shrl
cmp
insb
xorl
jmp
pop
adc
repnz
inc
mov
std
and
repnz
cli
dec
pop
pop
xchg
sar
pushf
lahf
sub
sub
mov
mov
jbe
mov
aam
cs
stc
mov
cmp
sub
xor
test
xor
pushf
outsl
repnz
jb,pn
push
insb
pop
xor
cmpsl
movb
pushf
mov
aas
pop
mov
ja
pop
mov
test
icebp
lcall
popf
scas
lahf
stos
sub
inc
xchg
inc
add
cwtl
push
pop
fsubrl
test
cltd
push
stos
jecxz
push
movsl
adc
mov
popf
mov
inc
or
or
and
lret
addl
jmp
daa
scas
popf
push
sahf
push
daa
xlat
pop
rol
lock
out
push
xchg
addr16
xor
out
sbbb
pushf
push
repz
dec
or
loope
pop
mov
inc
pop
mov
pop
flds
inc
lea
push
in
lea
movsb
and
cmp
icebp
mov
xrelease
stos
jns
mov
jmp
push
cmpsl
and
in
and
popa
pop
lahf
fcompl
dec
int3
insb
sbb
jo
test
popf
stc
out
js
orb
xor
lods
or
insb
sarl
inc
inc
das
lahf
cltd
sysenter
mov
shrd
jl
jmp
xchg
mov
fidivs
shll
push
insb
nop
lahf
das
mov
leave
insb
xchg
inc
lods
xor
or
mov
sbb
inc
xlat
aas
xchg
arpl
addr16
mov
sbb
xor
mov
out
pop
or
dec
mov
push
mov
arpl
xchg
lock
xchg
ret
pusha
nop
mov
push
mov
lods
mov
jmp
aam
scas
call
add
cltd
dec
mov
add
mov
jbe
xchg
popf
cmpsb
and
xlat
cwtl
mov
jnp
fs
fsubl
add
jg
ja
scas
xchg
test
out
js
add
ja
sidtl
add
xchg
pop
mov
out
adc
stos
outsl
sbb
xchg
pop
cmp
push
sahf
gs
lahf
jbe
mov
mov
pinsrw
xor
ss
outsb
lret
xlat
icebp
adc
cmpl
stos
in
dec
add
fsubl
outsl
sarb
push
cmc
test
rcrb
ffreep
ss
rorb
cmp
xor
sti
lcall
icebp
xchg
and
rorl
xchg
shll
enter
sbb
repnz
test
rclb
inc
push
ror
ret
fdivp
out
lcall
fisttps
inc
daa
push
xor
ffreep
xlat
lds
or
add
xchg
add
push
int
mov
dec
data16
stc
xchg
jne
stos
mov
mov
in
mov
adc
xchg
fdivl
mov
ljmp
mov
xchg
or
add
call
and
jnp
stc
pushf
ja
adc
fwait
dec
rclb
rcr
mov
inc
xchg
xchg
movzwl
and
pop
push
or
jns
ljmp
test
in
mov
cmpsl
inc
test
or
pop
fisttpll
ret
adc
stos
lea
push
inc
cmpsl
stc
push
popf
addb
sahf
stc
add
push
pop
and
out
pop
outsb
bts
or
lahf
fwait
mov
mov
shl
mov
mov
or
pop
cli
ret
pop
pop
mov
push
bnd
mov
inc
mov
mov
jbe
push
aas
pop
cli
popf
fisubrs
lahf
fwait
sub
repnz
mov
pop
push
ljmp
popf
shll
cmp
cmpsb
adc
repnz
dec
fdivrl
insb
fistl
dec
xor
jmp
mov
lret
arpl
outsb
sub
add
xor
inc
pop
jl
mov
push
cmc
out
adc
sub
mov
or
sbb
mov
dec
xor
mov
in
push
xchg
xlat
aas
arpl
pop
and
mov
rolb
ds
mov
loopne
push
mov
inc
xchg
shlb
out
xchg
cmpsl
inc
in
popl
jo
mov
lods
in
and
insb
test
xor
aas
inc
fstpl
and
xchg
fcomps
inc
push
out
sbb
sub
mov
cmpsl
mov
in
repnz
fists
xchg
cmp
pop
mov
orb
test
pop
insl
rorb
aas
add
jmp
xor
ficompl
mov
xchg
outsb
repz
xchg
and
add
ficoms
mov
sti
jb
push
dec
nop
push
jo
fbld
aam
cmpb
movaps
movsl
andl
mov
out
push
ljmp
push
dec
shlb
stc
push
gs
jbe
movl
mov
repnz
xchg
or
das
ficoms
test
fdivrp
nop
inc
and
in
or
cmp
dec
pop
mov
mov
loope
jp
mov
stos
fdivrp
sahf
or
leave
lret
sub
pop
xchg
lahf
mov
dec
call
sub
dec
out
lret
or
aam
daa
addr16
or
lcall
add
insb
jmp
sahf
cmpsb
stos
fildl
pop
mov
mov
and
pop
ret
mov
movsl
pop
imul
ss
jl
adcb
add
fcmovne
repz
shlb
mov
lret
push
cltd
jbe
mov
daa
lcall
adcl
sbb
push
pushf
cmp
scas
test
clc
scas
sub
sarl
xchg
mov
xchg
xchg
roll
mov
push
shr
pop
ss
inc
popl
jns
out
sti
pop
scas
fdiv
fidivrs
xchg
mov
popa
ljmp
inc
lcall
mov
mov
ss
imul
addr16
repnz
in
lahf
sbb
inc
cwtl
shll
mov
cmpsl
icebp
popa
scas
pop
rcrb
inc
add
in
js
dec
daa
lret
inc
repz
lds
cmpsl
fs
mov
pop
mov
fcoms
push
push
add
rorl
xor
xchg
cmp
daa
or
xchg
jle
fidivs
push
mov
jecxz
aas
adc
ffreep
out
repnz
repz
in
pop
jno
add
je
repnz
fnstcw
lea
xchg
or
xor
lahf
pop
movsl
mov
test
lds
aaa
push
cmp
lret
xchg
dec
mov
stos
sbb
pop
or
repz
mov
or
jno
ret
stos
dec
xlat
scas
xlat
adc
repz
dec
ret
nop
mov
aas
xor
out
or
bound
xchg
xchg
sbb
cld
mov
xor
sub
stos
js
inc
arpl
fmull
mov
cmp
pavgb
mov
jl
js
mov
ret
or
mov
sbb
sbb
in
sbb
mov
pop
stos
repz
lock
mov
scas
test
pop
cmpsb
imul
xchg
lea
inc
stc
sahf
push
inc
test
scas
cmp
pop
add
cltd
enter
jg
xchg
mov
xchg
movsl
les
fcoms
repnz
push
sub
or
pop
roll
lock
cmpsb
inc
add
fs
fcoml
addr16
add
gs
in
pop
int3
shlb
sbb
movsb
out
hlt
jmp
jl
repz
cmp
pushf
mov
xchg
rcr
repz
dec
xlat
xor
mov
call
test
xchg
hlt
mov
stos
repnz
imul
mov
notl
frstor
push
jae
lock
dec
lcall
mov
fnstenv
mov
negl
push
sub
xchg
outsl
adc
mov
popf
xchg
repnz
xor
cmpsl
flds
adcl
dec
xchg
je
xor
hlt
jbe
movb
out
sub
enter
lret
jp
xchg
cmp
sahf
repnz
sbb
pop
xchg
cmp
fwait
rorb
cmpxchg
ljmp
sahf
pop
fidivl
dec
pop
mov
mov
ss
add
das
lods
sti
inc
fnsave
pop
sbb
pop
push
adc
push
movsb
ja
lea
xor
sahf
adc
aaa
mov
repz
xorl
leave
pop
mov
stc
xchg
ret
inc
xchg
dec
les
xchg
repz
ljmp
test
pop
and
aam
pop
adc
cmpsl
cmp
cmp
cmp
ja
movsl
rcll
lods
incl
jge
in
scas
mov
xor
pop
xchg
repnz
xlat
mov
negb
test
in
icebp
ret
pop
lods
loope
aas
sbb
xor
inc
sahf
mov
pmaddwd
das
clc
repz
mov
cmc
xchg
test
pop
lret
and
loope
xchg
cmp
adc
pop
xchg
cmp
icebp
xchg
dec
idivl
fcomp
nop
ret
pop
mov
xchg
inc
lds
fiaddl
negl
rolb
mov
xchg
idiv
jb
lret
mov
sbb
mov
jbe
icebp
inc
fs
pop
imul
xchg
jae
pop
sahf
movb
lods
jmp
loope
and
xchg
jmp
movsb
or
mov
ljmp
xchg
out
imul
sti
ret
pop
xor
cli
loopne
imul
jmp
shr
inc
push
cmpb
movsl
outsl
sahf
cmpsl
les
push
or
lods
and
sub
icebp
out
imul
dec
or
mov
mov
lahf
rcl
or
das
push
fsts
ret
int3
sahf
cwtl
sti
inc
insb
test
maxps
imul
ss
xchg
push
xchg
xorb
push
stos
xor
mov
ret
iret
addb
mov
clc
dec
daa
jl
push
test
push
xchg
xchg
std
mov
cmc
jne
mov
or
mov
decb
gs
jnp
fwait
mov
test
mov
js
mov
add
cmp
sub
out
jne
sbb
mov
ljmp
fistpll
push
cmp
lds
xor
movsb
or
dec
or
imul
rol
xchg
fst
pop
fsubs
jle
mov
add
add
mov
push
fsub
ds
fisubrl
mov
movsl
inc
push
push
xchg
mov
fdivs
jbe
adc
dec
mov
cmpsl
iret
push
iret
push
and
addl
mov
into
arpl
fnsetpm(287
icebp
inc
lods
adc
stos
mov
inc
mov
xchg
pusha
mov
inc
out
stos
aam
push
ds
lret
mov
les
test
clc
lds
aam
mov
xchg
mov
imul
rolb
add
mov
or
rorb
imul
sub
mov
inc
adcb
cmp
jb
test
mov
jno
data16
cld
js
dec
mov
stc
add
inc
push
jl
stc
dec
xor
or
lcall
xor
push
xor
push
movsl
imul
stc
ret
stos
mov
scas
fdivrl
mov
mov
pop
mov
mov
fimull
stos
ret
icebp
push
xchg
aas
outsl
fisubl
sub
inc
xlat
cmp
setle
lcall
mov
out
imul
fildl
mov
cli
mov
loop
jae
repnz
lret
add
pop
loopne
stos
cmp
subb
add
adc
addr16
adc
jmp
mov
test
jmp
lds
in
cwtl
sub
xlat
xlat
andb
mov
xchg
push
lcall
dec
mov
add
cmpb
inc
bt
mov
sarl
test
pop
mov
aam
enter
stc
mov
jno
test
orl
mov
test
addr16
imul
push
mov
popl
cmpsb
xchg
cmc
daa
add
dec
mul
fistpl
incb
fisubrl
hlt
icebp
sub
mov
fiaddl
repz
mov
cmp
cmpb
ljmp
mov
mov
shlb
add
xchg
xor
repz
push
iret
out
test
cwtl
cmp
xorl
fadds
jecxz
in
fcmovnu
mov
repnz
adc
cmpsl
aas
pop
loopne
sahf
mov
dec
inc
aas
stc
mov
jnp
arpl
pop
pushf
or
fwait
xchg
in
ficoml
mov
loope
xchg
ja
push
in
out
or
shll
or
inc
sub
inc
sti
push
jecxz
repnz
roll
out
inc
xor
cmpsl
sbb
arpl
test
out
push
push
add
cmp
xchg
ja
into
rorb
xchg
pop
cli
inc
sahf
push
pop
scas
stc
ds
add
rorl
scas
push
bound
mov
idiv
xchg
std
ror
call
js
stc
sahf
in
cmp
test
cmpsl
cmp
xorb
repz
mov
repnz
shr
test
mov
cmpb
cmpsl
adcb
mov
mulb
xchg
sbbb
and
jmp
fcmovb
pop
xchg
adc
push
mov
add
push
mov
push
int3
nop
add
flds
clc
pop
push
test
mov
jnp
cmpb
cmp
pop
inc
shll
mov
movsl
lds
ret
xchg
aaa
mov
dec
popa
test
xchg
arpl
mov
cmp
mov
mov
mov
mov
popf
mov
pop
xchg
mov
pushf
add
filds
cmp
lret
pop
and
incl
fwait
cwtl
cwtl
repz
iret
mov
adc
xchg
insl
xchg
lret
lea
mov
insl
movl
jno
add
xor
mov
test
mov
js
rclb
inc
push
les
frstor
inc
jo
xlat
int
imul
inc
ret
and
pushf
or
xchg
xchg
dec
sbb
lret
aad
movsl
adc
xchg
lahf
jo
leave
xor
int3
repz
shl
les
jmp
mov
lret
insb
fisttpll
mov
adc
mov
mov
mov
mov
movsb
lods
xchg
sti
xchg
dec
rclb
imul
scas
adc
daa
jb
cmc
or
jl
push
jmp
out
mov
je
mov
sti
mov
shr
push
or
mov
out
retw
adc
lock
cli
dec
dec
scas
roll
cmc
cmp
mov
cmp
dec
mov
xchg
mov
push
cltd
cwtl
adc
mov
xchg
ja
add
sti
mov
fwait
shl
xor
fnstsw
xchg
dec
scas
mov
int3
ljmp
mov
lds
inc
sub
movsl
clc
mov
cmpsb
sbbl
and
mov
pop
add
pop
fimull
ja
into
in
dec
jp
ljmp
mov
inc
cmc
sub
lods
cmpsl
sarl
and
sub
sti
lahf
test
xchg
lahf
mov
outsb
or
mov
out
outsb
push
and
xchg
add
sbb
fwait
outsb
lahf
add
cld
fwait
hlt
test
pop
out
ss
adc
repnz
pop
push
add
jmp
add
pop
fldcw
or
push
mov
loopne
dec
inc
orl
xchg
jno
inc
outsb
dec
mov
arpl
mov
jae
jae
add
push
rcpps
xchg
mov
push
lods
mov
repz
imulb
xchg
paddsw
dec
mov
cmp
int3
outsl
mov
rorl
lcall
add
xorl
pop
cmpsl
loopne
mov
fnstsw
lock
clc
cmp
scas
cmp
jg
pop
xchg
mov
cmp
mov
pop
cmp
inc
lds
add
ja
out
add
dec
lcall
push
mov
clc
lods
jl
add
ss
scas
cmp
xorps
out
shlb
push
aas
loop
shl
adc
jg
xchg
cmp
add
out
push
ja
inc
lret
insb
rcrl
mov
lcall
sahf
push
mov
dec
or
mov
add
mov
sbb
add
nop
cs
rcr
mulb
adc
pop
mov
xchg
mov
jmp
pop
xchg
push
dec
push
repnz
pop
xor
xlat
and
xchg
les
mov
aaa
cmp
popf
dec
popf
fcomi
lods
mov
cmp
cltd
adc
sub
mov
xchg
inc
gs
ja
inc
loopne
mov
in
in
rcl
daa
stc
xchg
pop
iret
stc
pop
test
iret
pop
pop
push
mul
mov
mov
push
sub
lea
adc
fistl
xchg
les
imul
xchg
iret
lcall
lahf
xchg
or
push
test
mov
mov
icebp
add
mov
xchg
pop
in
xor
test
pop
subb
dec
iret
xchg
nop
lods
xlat
add
sub
mov
inc
cmc
insl
jb
sub
xchg
xor
or
sub
inc
push
dec
addl
xchg
pop
rorb
xlat
sbb
add
pop
movsl
xchg
jo
xchg
xchg
in
xor
cmp
sarl
dec
jno
lcall
stc
int
jge
icebp
test
mov
ffree
pop
int3
or
mov
xor
test
xorl
fstpt
ret
jns
repnz
pop
cmpsb
sahf
insb
fwait
or
dec
mov
sbb
inc
stos
fwait
sbb
orl
stos
xlat
test
rcr
in
stos
cmp
aad
nop
adc
imul
jae
pop
icebp
lock
inc
jl
popf
xor
jae
scas
int3
fnstcw
jg
push
push
xchg
push
mov
divb
clc
arpl
idivb
or
push
imul
jns
gs
test
popf
or
addr16
xor
xor
popf
cmpl
mov
das
add
stos
jecxz
adcb
jno
rcr
flds
fsubrl
bswap
out
xchg
bswap
addr16
sub
jns
ret
hlt
mov
lods
ret
out
cltd
dec
aam
repz
cmpsb
fcmovb
and
xchg
and
xchg
test
popf
cld
insl
or
xor
ret
inc
lds
mov
stos
inc
daa
pop
mov
and
loop
cmpl
cli
stos
ja
data16
push
roll
loope
mov
mov
dec
shlb
mov
fwait
add
ja
inc
cmp
jmp
xchg
jns
les
aaa
jmp
les
and
movsl
js
add
insl
push
xchg
mov
xor
xchg
gs
pop
scas
out
or
scas
lods
dec
pop
mov
or
xchg
mov
xor
ss
add
es
daa
ds
push
xchg
or
stos
xchg
cwtl
jb
mov
mov
test
rol
inc
repnz
push
xlat
out
mov
mov
shll
mov
push
jae
iret
shr
inc
push
scas
dec
pop
sub
push
mov
xor
les
cmpsl
int3
pusha
mov
xlat
rcrb
jl
lods
xchg
jo
iret
insb
push
add
int3
xchg
jl
shll
js
loop
add
add
mov
mov
les
out
inc
dec
add
mov
test
repnz
mov
jae
or
pop
xchg
pusha
addl
mov
leave
dec
lcall
mov
shrl
jb
cmp
cltd
rclb
packssdw
fisubrl
lcall
subb
int3
xchg
jnp
mov
addl
pop
adc
mov
inc
cld
xorl
push
cmpb
enter
xor
adc
jecxz
ret
push
clc
pop
xchg
cmp
mov
dec
xchg
and
add
bswap
divb
in
sbb
jo
cmpsb
call
gs
insb
sub
mov
repnz
push
lods
pop
jmp
inc
insl
dec
inc
enter
pop
pop
into
mov
pushf
das
and
shl
fisubrs
ret
jg
imul
into
add
xor
aas
rol
icebp
or
mov
fadd
add
popf
jmp
jmp
xchg
mov
loope
fwait
insl
pop
inc
jno
enter
popl
xlat
es
dec
xchg
in
popa
aam
jp
and
inc
js
enter
shlb
das
fadds
sub
neg
mov
stos
dec
xor
shlb
xchg
js
fucom
cmpsl
dec
xchg
dec
ja
add
insb
pop
xchg
insb
cmpsl
pushf
enter
dec
inc
xor
idivl
hlt
aam
dec
xor
popa
xchg
ljmp
xchg
xchg
dec
jle
mov
or
pop
cmp
int3
mov
mov
cs
jns
leave
ud1
add
mov
dec
icebp
inc
push
dec
pop
movsb
cltd
jnp
repz
stos
lahf
pop
enter
and
dec
stos
call
mov
leave
sub
in
call
test
shl
repnz
xor
mull
jbe
incb
lds
mov
push
cld
fcomp
fcomps
roll
sahf
out
orl
dec
mov
fwait
in
dec
mov
fwait
cmp
lahf
jnp
addl
sub
inc
call
ja
and
shl
push
aas
adc
sbb
add
ret
jle
js
lcall
std
les
mov
push
push
outsl
jns
jp
sarl
or
pop
insb
mov
jns
dec
repnz
jmp
cmc
pusha
cmpb
insb
xchg
cmpsb
rcl
jl
lea
outsl
or
push
lcall
xor
sbb
dec
rorl
push
or
jb
or
add
mov
xor
iret
inc
mov
push
mov
shlb
jmp
repnz
add
sub
mov
mov
lods
lret
rcrl
loop
and
pop
insb
imul
repnz
push
ds
bound
dec
dec
loop
adc
dec
rcll
push
fimuls
dec
add
cmp
mov
push
pop
dec
and
imul
sarl
lea
mov
lods
xchg
jbe
stc
stc
enter
scas
sub
int
mov
fildl
cli
add
mov
ja
inc
pushf
pop
movsb
fisttpl
roll
cli
hlt
xchg
pop
cmpsb
mov
mov
or
in
sub
cmpsb
or
sarl
std
xor
int
clc
or
aaa
cmpsl
push
orb
fnstenv
mov
movsb
aam
orb
jno
imulb
mov
das
aad
repz
pop
movsl
mov
mov
adc
xchg
cmp
mov
mov
push
lea
jbe
imul
insl
addl
mov
mov
mov
aas
dec
dec
push
enter
jl
inc
das
pop
cmpsl
fnstenv
mov
and
jecxz
lahf
std
addr16
fistl
cmp
clc
ljmp
shlb
sti
mov
stos
fcoml
aaa
or
add
je
pop
mov
push
icebp
decl
mov
sarl
add
scas
clc
in
popf
das
inc
mov
stos
push
pusha
dec
das
mov
mov
jns
lods
imul
daa
in
sarl
es
shlb
xchg
cmpb
fadd
jae
repz
icebp
push
cmp
fstl
call
mov
pushf
lcall
hlt
mov
lods
pop
loope
orl
mov
mov
pushf
negl
push
pop
test
hlt
lods
cmp
ret
pop
repnz
push
orb
idivl
and
aas
pop
push
stc
xchg
xor
movsl
mov
sbb
sub
xorl
int3
lcall
dec
clc
rclb
sti
rcrl
push
or
lds
jns
stc
sarb
add
into
adc
jecxz
push
mov
pop
pop
and
xchg
pcmpgtd
std
scas
repz
xchg
into
xchg
out
loop
call
add
scas
loop
and
scas
gs
insb
test
mov
or
xchg
mov
cmc
inc
mov
pushf
gs
dec
pop
mov
loop
jnp
cmp
leave
sarl
in
xchg
repz
outsb
mov
divb
mov
fdivrl
jae
mov
mov
leave
mov
mov
pop
arpl
mov
cwtl
or
rcrb
out
push
adc
push
dec
icebp
push
imul
lret
inc
cmp
mov
push
adc
xchg
dec
decl
cmp
sub
sbb
xchg
rcrb
test
ret
inc
mov
push
sbb
pusha
dec
xor
cmp
push
mov
mov
xchg
fcomps
test
in
test
cmp
mov
add
fdivl
iret
inc
mov
arpl
rcr
imul
mov
arpl
adc
dec
mov
add
pop
out
test
xchg
loopne
iret
xor
sub
xchg
movsl
pop
pushf
or
fadd
xchg
xlat
xchg
and
enter
ds
or
test
push
xlat
and
movb
mov
testl
rcl
inc
pop
cltd
rcr
inc
cli
lcall
pop
fwait
xchg
pop
ljmp
adcl
popf
mov
insl
mov
add
stos
daa
dec
pop
test
fwait
inc
ror
inc
lea
xchg
push
notl
sub
xchg
inc
out
dec
pop
and
pop
gs
push
fisttpll
jecxz
xchg
stos
mov
lds
jecxz
sarl
add
pushf
out
popf
xchg
rcll
xor
pop
dec
mov
jecxz
or
mov
jmp
out
sub
mov
movl
xchg
movlhps
xchg
pushf
mov
and
lods
xchg
dec
push
iret
push
out
scas
cmpsb
pop
and
addr16
add
movsb
push
sub
add
cmp
push
imul
add
push
ficoml
not
xchg
test
and
xor
in
mov
sbb
mov
sub
jmp
mov
cmp
sbb
ja
jae
mov
push
scas
es
mov
push
jae
xchg
iret
xchg
rcrl
mov
xchg
sub
or
das
repz
imul
rol
or
popf
xlat
mov
aad
jmp
sub
push
sbbb
out
add
outsl
push
jmp
sahf
xchg
shl
sbb
cmpsl
dec
adc
push
pop
jno
shr
xchg
mov
add
mov
stos
xor
sar
shrb
sub
jne
rol
add
icebp
or
cmovp
xor
adc
ficoml
mov
int
sbb
cmpsb
fcmovu
sti
mov
ret
leave
pushf
outsl
aas
mov
and
cwtl
addr16
mov
pop
lods
mov
inc
mov
rcrl
mov
out
add
jecxz
into
sub
add
xor
js
add
xchg
ret
cmp
icebp
imul
das
nop
pop
xchg
cmp
cmpl
push
mov
shll
adc
test
mov
cmp
pop
pushf
jmp
nop
mov
push
scas
out
push
pop
xchg
and
rorl
push
scas
popl
fs
and
lahf
lods
jg
push
push
lods
out
ret
fidivl
push
pop
and
loop
pusha
mov
es
mov
jle
mov
icebp
inc
addl
daa
ds
nop
out
stos
adc
repz
xchg
repnz
mov
fimuls
mov
addb
aad
rorb
add
repz
lret
adc
negb
scas
les
repnz
movsl
mov
int
fdivr
into
cmp
xchg
jne
xchg
stos
xchg
and
mov
mov
or
es
outsb
or
lea
push
add
cmp
mov
pop
pop
sbb
cmp
mov
insl
pushf
in
lods
pop
dec
mov
mov
jae
cltd
jecxz
jb
jne
xchg
mov
mov
mov
aas
xchg
addr16
daa
cmp
or
xchg
inc
or
sub
push
push
cmp
cli
sahf
pop
jl
sti
xchg
adcl
mov
test
jnp
mov
jmp
inc
mov
addb
jo
inc
sbb
fstl
mov
stos
mov
adc
or
fs
adc
pop
xchg
adc
stos
movsl
xor
and
insb
sub
repz
pop
cwtl
iret
iret
jae
shlb
adc
inc
mov
popl
jb
pop
pop
test
add
adc
sbbl
subl
hlt
mov
sbb
ss
cmp
iret
fisubrl
lods
or
cmp
pop
lcall
loop
xchg
adc
inc
mov
mov
inc
inc
mov
into
pop
sub
cmpsl
jmp
pop
jl
out
pop
stos
fwait
pop
lret
sub
dec
cmpsl
bound
jl
pop
mov
xchg
rol
pop
sti
fwait
cltd
sahf
mov
loop
clc
sbb
data16
inc
cmpb
sbb
ss
xchg
pop
fistps
out
test
inc
mov
mov
fs
test
pop
xchg
fs
repnz
pop
sub
cltd
daa
jg
loopne
or
shl
xchg
mov
xchg
fbstp
xchg
movsb
daa
sbb
aad
push
dec
out
fistl
les
mov
mov
fwait
mov
adc
pop
stc
mov
aad
cwtl
xchg
pop
int
xchg
icebp
pop
ret
das
cld
addr16
push
in
jecxz
or
or
lea
xchg
mov
sub
out
jg
inc
cmpsl
cmp
ss
outsl
mov
push
jle
inc
sbbl
sti
call
test
sub
scas
insl
xor
pop
jecxz
cli
fdivl
insb
aad
filds
dec
mov
xor
negb
inc
xchg
push
xor
add
pop
xor
ss
xchg
add
mov
mov
loop
dec
mov
inc
cmc
push
out
xchg
iret
repz
insl
mov
repz
setp
icebp
pop
js
cmp
lock
cwtl
out
imul
cld
loopne
sbb
enter
cmp
mov
repz
mov
cmpsl
or
aaa
lock
adc
lret
ret
cmpsb
push
out
add
addb
mov
test
pop
rcl
push
pop
lock
movsb
mov
pop
pusha
xor
inc
es
fimuls
setge
xchg
daa
lock
fimuls
adcb
mov
shrl
aad
loopne
repz
outsl
push
daa
sbb
sysenter
mov
iret
xor
add
jp
sub
push
adc
add
mov
xchg
pop
stos
addr16
dec
test
adc
psrld
out
dec
sti
mov
lret
jb
rcrb
les
loope
adc
in
shl
cwtl
ds
ja
or
ret
cmp
clc
sub
pop
sbb
jno
push
es
sub
push
xchg
xor
add
rorl
addb
test
inc
inc
test
mov
push
cld
pusha
jmp
subl
push
pushf
test
xchg
sti
push
hlt
mov
das
add
pop
leave
add
pop
or
repnz
cli
mov
out
orl
shll
inc
xchg
lods
ljmp
es
js
enter
lock
sbbl
movsl
mov
adc
push
fisubl
fidivrl
leave
insb
aam
fsubs
and
orl
ficomps
icebp
inc
push
es
fwait
pop
sbb
in
cmp
mov
fisttpll
stos
stc
mov
repz
and
repnz
lods
repnz
aas
lahf
mov
xor
orl
ljmp
xchg
or
aaa
imul
xchg
shrb
ljmp
ljmp
or
sbb
cs
xchg
inc
or
loopne
iret
add
stos
fcmovnbe
or
push
out
or
inc
mov
aas
arpl
imul
mov
mov
gs
sti
pop
ret
push
add
jg
xor
adcb
or
subl
popa
push
pop
test
pop
xor
cltd
or
out
and
cwtl
and
adc
in
popf
push
int3
mov
mov
pop
gs
push
test
mov
xchg
jb
mov
jnp
icebp
or
add
cmp
pop
jmp
test
and
sti
popa
inc
test
call
js
xchg
in
fmuls
jo
xor
or
in
jecxz
inc
jno
mov
cli
xor
jo
add
xchg
mov
addl
loope
xchg
fstpl
adc
lcall
rorb
push
xchg
jno
lea
sysenter
aad
add
dec
mov
push
rorb
pop
lret
fstps
pop
xchg
sti
mov
out
jg
dec
jae
test
mov
or
sub
sbb
fdivrl
test
cli
cltd
jg
dec
dec
xchg
mov
lods
xchg
or
stos
test
push
pop
mov
stos
jns
arpl
mov
xor
push
scas
mov
sahf
shlb
lods
fisubs
mov
stos
rol
repz
mov
push
pop
adc
add
push
sub
add
loop
hlt
ljmp
movsl
stos
dec
jae
mov
pushf
fdivrl
jl
in
mov
jnp
push
cmp
xor
sub
js
push
popl
roll
lea
pushf
mov
pushf
cli
mov
add
hlt
dec
lahf
cmpb
cmpb
hlt
mov
insl
fiaddl
xchg
sub
ss
shll
lcall
push
sahf
iret
cwtl
js
xchg
add
dec
cwtl
xchg
xchg
mov
jbe
ret
fdivl
scas
lahf
mov
lahf
pop
outsl
fwait
sbbb
imul
mov
cmp
into
xchg
fistpl
pop
push
insl
push
xor
cmp
mov
jecxz
jl
fdivrs
test
mov
mov
cmp
xchg
lret
xor
lods
inc
sub
and
out
call
into
iret
subl
es
subl
das
scas
adc
push
jp
loope
pop
in
jno
jns
mov
push
push
and
xlat
out
add
aas
rorb
sub
push
xor
jo
movsb
ret
push
pop
test
mov
movsb
cmpsl
and
data16
fildll
andb
xchg
test
data16
mov
pusha
mov
mov
xchg
xchg
adc
testl
pop
into
xchg
divb
repz
lods
fidivrs
add
xchg
mov
jmp
testl
les
mov
ret
movsl
xchg
addr16
sbb
inc
mov
pop
dec
test
mov
imul
inc
xchg
ret
sarl
xlat
in
mov
out
jg
iret
push
subl
add
insb
lods
dec
out
or
test
nop
aaa
push
pop
mov
cmpb
push
orl
or
sbb
lds
xorl
or
mov
cmp
and
fldcw
pop
adc
inc
inc
lods
mov
pop
xchg
outsl
outsb
repnz
out
pop
add
stos
shlb
and
fcomip
cmc
es
inc
add
add
inc
js
fmul
xchg
inc
mov
into
jl
mov
cmp
jle
fsub
or
dec
fisttps
mov
subl
ret
repz
iret
in
or
mov
call
xor
pop
das
mov
shr
dec
xchg
iret
xchg
mov
int
outsl
and
mov
stos
lahf
and
or
roll
xor
movsl
pop
incl
shll
pop
je
sbb
mov
cmp
in
xchg
sahf
clc
push
or
js
mov
pop
mov
inc
xchg
ja
out
dec
aas
push
mov
iret
rcll
ljmp
iret
icebp
insb
arpl
scas
lea
mov
push
lcall
lea
inc
pusha
xchg
popl
ds
lea
ret
push
test
scas
int3
stos
inc
aam
jmp
inc
mov
mov
sbb
into
mov
push
ret
xor
imulb
insb
jmp
sbb
push
rclb
rcrl
dec
orb
mov
rdtsc
subb
ljmp
js
adcb
enter
adc
add
roll
push
inc
adcl
test
out
or
and
pop
cmpsl
les
fcomip
test
clc
outsb
std
adc
mov
std
push
nop
out
insb
ljmp
aam
or
stos
and
xchg
xlat
pop
push
add
adc
jns
cmp
add
lcall
mov
xchg
push
jp
cltd
mov
arpl
jl
push
pop
inc
jae
fisubrl
jg
jg
out
aaa
inc
lret
popf
mov
aas
fisttpll
inc
xchg
mov
add
ds
xchg
hlt
xchg
mov
in
mov
jl
push
cmp
sar
div
in
outsl
lods
repz
xchg
in
das
ret
add
cmovb
cmp
dec
cmpsl
mov
xchg
pushf
and
out
insb
xchg
repnz
add
shll
jns
jnp
test
scas
jnp
jb
xor
aas
call
fsubrs
in
roll
orb
mov
adc
cmpsb
push
dec
xchg
dec
fdivrs
add
cmc
add
cmp
xchg
repz
popa
pushf
mov
lods
mov
cmc
loop
aaa
cltd
pop
adcl
or
xchg
je
aaa
lea
fiaddl
iret
fbstp
xchg
lahf
fwait
test
in
xchg
inc
mov
mov
dec
daa
cli
lret
dec
out
std
fiaddl
in
pop
inc
repz
repnz
out
nop
mov
xchg
cli
xchg
adc
pop
and
pop
fistps
mov
inc
ds
ficoms
mov
mov
pop
mov
add
and
xlat
jmp
sub
sub
mov
push
fwait
adc
sub
mov
mov
ljmp
test
add
xchg
es
adc
sbbb
xorl
ljmp
imul
or
or
mov
xchg
add
sub
mov
lcall
ljmp
add
fsub
add
rep
push
pop
loop
add
aaa
push
out
push
repz
xchg
xor
lahf
repnz
or
jg
inc
int
xchg
jmp
mov
addr16
adc
or
scas
test
pushf
sbb
xchg
mov
mov
jmp
loop
insb
popf
int3
das
ret
xchg
push
sbb
stos
xchg
adc
push
roll
roll
aad
push
movsb
cmpsb
lcall
or
jmp
jg
inc
stos
test
fcoms
jp
push
stos
jno
stc
xchg
mov
fs
push
seta
lret
xor
pushf
sub
mov
mov
insl
es
pop
inc
xchg
cmp
xchg
stos
out
jae
test
jecxz
lea
mov
subb
out
pop
cmpsl
pop
addl
notl
das
xchg
jnp
xchg
pop
push
fdivrs
shll
arpl
in
sub
sbb
test
jmp
sbb
movsb
cltd
xor
movsb
rol
pop
mov
scas
cmpsl
les
pop
ja
mov
jg
and
aaa
mov
frstor
mov
in
scas
inc
add
fisubrl
cltd
les
sbb
ret
pop
movsl
mov
mov
out
cmp
test
aaa
ret
mov
pop
jecxz
push
stos
mov
mov
mov
mov
mov
push
and
iret
iret
adcl
jp
sbb
cmp
add
mov
jp
inc
xchg
push
lret
rcrb
stos
pop
popf
cmp
mov
aam
jecxz
jnp
mov
ret
repz
jnp
movsl
bound
cltd
nop
lea
mov
mov
xadd
add
fwait
sbb
pop
cmpsb
out
das
jns
lods
fisttpl
aad
mov
ret
loope
fadd
repnz
lret
jne
jecxz
cmp
inc
cmpsb
in
fcoml
push
mov
add
xor
lahf
mov
out
pop
orb
popl
xor
pop
ret
bnd
lret
ja
outsl
outsl
adc
ja
sub
cmp
cmpsb
cwtl
movsl
mov
imul
push
sub
call
je
jp
xchg
and
adc
xor
aaa
push
push
add
cmp
test
or
addr16
pop
or
das
xchg
pushf
sbb
jge
adc
scas
pop
das
mov
sub
jo
mov
push
adc
xchg
out
mov
adc
dec
fdivrs
or
sub
or
mov
je
clc
clc
orb
or
mov
stc
mov
mov
and
lea
jg
lret
mov
movsl
xchg
addb
jl
xor
jp
lods
jg
dec
shrl
mov
test
jl
or
test
jmp
cltd
mov
add
add
xor
stc
cmc
add
std
mov
add
ljmp
int
or
repnz
sbb
mov
push
subb
sbb
adc
mov
sub
cld
lds
shrb
mov
call
int
ret
jns
add
mov
pop
outsb
or
popa
sahf
jbe
fdivs
test
flds
or
lcall
mov
lret
lods
outsl
call
fnsave
cmpsl
shlb
ficompl
repz
js
call
mov
popa
mov
xchg
shrl
mov
ret
mov
inc
repz
pop
mov
repnz
dec
jno
xor
mov
mov
rolb
ja
cwtl
roll
or
andb
insl
xchg
xchg
mov
pop
cwtl
aad
rcrl
dec
orb
mov
add
fwait
lahf
popa
pop
add
pop
jecxz
fwait
mov
sbb
mov
mov
jno
or
frstor
nop
shl
gs
arpl
loopne
test
or
cli
jbe
flds
test
insl
ret
pop
cmp
dec
pop
insb
jmp
in
fdivl
jp
push
iret
jecxz
sub
cmp
shrb
scas
cltd
scas
cli
jae
ror
movsl
mov
fwait
repz
lods
out
pop
leave
cmpsb
lahf
pop
into
aam
loopne
xor
inc
or
dec
popf
stos
test
rep
out
stc
rcr
sarl
cmp
xor
adcb
adc
sbbb
dec
out
pop
cli
scas
addr16
sub
out
sub
push
xchg
fcoms
lahf
xorb
mov
mov
cmp
out
add
xchg
add
xchg
jae
ret
lock
mov
add
shrb
in
xchg
das
xor
xor
lcall
mov
movsl
scas
lock
cmpsl
xchg
lock
adcl
in
push
fcomp
jmp
cld
xchg
jle
incb
add
sub
mov
sbb
out
or
movsb
push
lods
xorl
or
test
ljmp
setnp
xchg
jo
jp
sub
fwait
es
popf
data16
sbb
pop
fwait
xchg
inc
pop
pop
ret
cmp
cmc
sahf
sbb
xchg
ret
call
je
cwtl
lcall
test
lock
int3
addr16
mov
lahf
adc
leave
adc
mov
fwait
addr16
add
add
mov
stos
es
add
or
push
shl
cltd
mov
xchg
sahf
xchg
add
xchg
shlb
sarb
push
jae
shrl
and
insb
pop
cmpsb
addr16
repz
mov
iret
mov
jbe
mov
rcrl
insl
out
das
xchg
mov
push
lcall
imul
push
jae
mov
add
inc
shll
scas
dec
jp
ss
jnp
or
add
cmp
arpl
or
or
and
jge
fcmovbe
xchg
add
add
cwtl
pop
xchg
push
pop
inc
pop
fld
xchg
icebp
jb
daa
movsb
daa
and
fists
jo
jmp
inc
es
and
jg
movsb
pop
jp
xor
push
mov
and
sahf
xchg
pop
leave
jmp
insb
fsubrs
lret
jae
ficoms
js
into
sarb
sbb
sarl
popa
mov
into
mov
xorl
jecxz
mov
frstor
popa
mov
mov
cmpsb
cmpsl
pop
dec
scas
xchg
inc
mov
repz
icebp
cmp
in
mov
jns
xchg
mov
jl
jae
jp
dec
dec
or
iret
insb
xchg
jnp
mov
xchg
xchg
or
mov
add
test
cmpb
mov
mov
push
stos
movsb
xchg
nop
clc
sbb
inc
ficoms
bnd
adc
hlt
or
lods
out
xchg
pop
fst
xchg
add
cmp
xchg
mov
mov
daa
inc
mov
lahf
outsb
mov
mov
lcall
popa
push
sbb
cmpsl
lahf
add
lods
jo
push
fisttpl
mov
hlt
lcall
jp
jnp
fiadds
xchg
mov
into
stos
arpl
cli
xchg
or
ljmp
push
divb
mov
mov
ret
and
inc
mov
fidivrl
mov
sahf
mov
cmp
pusha
aam
pop
sbb
jno
cmp
outsb
dec
cmpsl
jmp
ret
cltd
gs
inc
jns
push
lea
jo
mov
xchg
jb
dec
pop
jo
faddl
xchg
push
inc
daa
loope
shll
lods
iret
in
das
stc
xor
test
pop
orl
cmp
jae
sti
fnstsw
cmp
dec
lea
sub
sbbl
add
dec
clc
insl
fisubrs
popa
push
ret
rclb
xchg
stc
mov
cmp
aaa
je
movl
xchg
lret
clc
out
mov
cltd
shll
add
sbb
das
mov
jbe
or
xadd
sbb
push
das
adc
int3
test
lret
add
mov
nop
rcrb
xchg
xchg
outsl
add
push
xchg
fdivrl
jno
lods
stc
push
jno
out
iret
pop
inc
jb
lret
jno
imulb
repz
xchg
jecxz
addr16
push
addl
aas
into
insb
mov
js
mov
cs
lea
jl
mov
ljmp
or
cmp
or
cmp
jnp
jbe
leave
cmp
addr16
add
xchg
movsb
rcrb
rorb
sbb
cmp
add
mov
sbb
loop
dec
jns
sti
cmp
iret
pop
mov
popa
in
imul
shll
xchg
sub
loopne
pop
test
push
or
fists
pop
scas
dec
and
addr16
es
mov
xchg
pushf
shl
xchg
inc
out
and
xor
inc
ficomps
mov
inc
mov
cmpsb
sub
out
and
es
fildll
ret
jecxz
cmp
mov
sti
movl
js
cltd
mov
and
sub
insl
lods
mov
inc
in
cmp
aas
adc
jo
push
aam
aad
lds
mov
loopne
cmpsl
or
sti
scas
sbb
pop
mov
inc
mov
sbb
xchg
push
mov
xchg
inc
inc
fs
imul
inc
in
mov
pop
jae
aad
inc
in
add
sub
test
mov
bound
pop
test
repnz
ljmp
test
cmc
ljmp
ss
sub
pop
lds
push
or
mov
mov
dec
fnstsw
fnstenv
add
xlat
xlat
xlat
add
loop
xor
ret
adc
hlt
cltd
ficomps
dec
icebp
test
or
stos
xchg
pop
push
dec
sqrtps
xchg
loope
dec
movl
out
pop
adc
pop
mov
gs
mov
push
mov
add
mov
mov
cmp
pop
mov
adc
xchg
mov
test
add
sbbl
push
mov
enter
stos
fstps
mov
ret
call
mov
out
add
lods
inc
loopne
push
dec
addr16
enter
int3
sti
sbb
pusha
add
adcl
stos
xchg
lahf
sbb
lds
xchg
xor
fdivrl
repz
mov
hlt
xlat
xorb
sub
lods
sbb
in
mov
pop
and
test
gs
scas
jbe
fcmovb
mov
cmp
sarl
arpl
mov
xchg
or
test
ja
test
pop
and
mov
mov
inc
mov
andl
dec
adc
incb
pop
cmpsl
xchg
add
jp
loope
fsubrl
je
insb
mov
mov
es
and
insl
or
das
iret
movq
sub
ja
jl
and
lods
mov
rclb
mov
ret
int3
lcall
jns
das
out
jb
cltd
repnz
js
add
or
mov
lea
cwtl
mov
movsl
jcxz
inc
mov
fnsave
mulb
push
lods
lahf
orb
rorb
sbb
push
add
xor
out
push
jns
mov
pop
mov
push
out
jb
xchg
cli
loope
movsl
insb
stos
lock
jno,pn
in
orb
sub
jge
add
mov
sahf
lahf
sets
test
cmc
mov
inc
pop
fdivrl
jle
xchg
orl
ror
stos
sarl
push
add
lret
push
ret
cmpsl
andl
in
xor
test
jb
xor
ja
movsl
fcomi
jle
mov
cmpsb
dec
ja
pop
cmp
xchg
mov
xchg
push
xor
test
repz
sbb
or
mov
jne
mov
xlat
ret
mov
push
pop
pop
fdivl
jo
mov
add
in
xchg
in
mov
movsb
lahf
dec
jno
xor
sbb
test
pop
fldl
cs
push
xchg
sub
rcrl
xor
mov
cwtl
jbe
add
pop
xchg
push
mov
fidivl
xchg
dec
repz
and
xchg
xchg
test
aam
xlat
fsubrl
pop
add
hlt
sub
mov
xchg
xchg
fidivrs
and
mov
add
arpl
xchg
clc
outsl
bound
repnz
cli
mov
fs
jae
loopne
stos
xchg
stos
cs
jecxz
nop
push
movsl
lods
cltd
mov
ss
add
inc
and
insb
add
add
sar
mov
das
test
loope
cltd
dec
xrelease
xor
xorl
add
inc
aam
jg
mov
mov
fst
data16
mov
jb
rep
fwait
shlb
dec
mov
jg
mov
mov
xlat
push
outsl
test
insl
mov
repnz
bound
les
popl
and
adc
ja
ret
into
pop
jno
test
inc
in
rorb
bound
jns
out
pop
lods
sbb
or
or
scas
in
push
mov
mov
sub
dec
mov
xor
sbbb
scas
std
sub
popf
mov
imul
mov
mov
pushf
mov
add
cwtl
iret
mov
xchg
imul
push
daa
aam
and
scas
push
cmp
mov
cmp
imul
push
cli
mov
xor
shl
jecxz
cltd
mov
insl
add
test
push
sti
gs
movsl
pop
xchg
outsl
mov
jle
inc
scas
fndisi(8087
xor
inc
rcr
jecxz
pop
xchg
dec
cmpsb
dec
mov
aam
add
xor
add
fwait
add
push
mov
or
aam
add
inc
repnz
cmpsl
insb
xlat
mov
pop
es
pop
mov
push
not
arpl
repnz
test
xchg
mov
xlat
and
in
icebp
call
mov
repz
add
ja
test
xchg
inc
out
add
xchg
mov
xchg
mov
stos
fucom
adc
xchg
jmp
aaa
das
inc
enter
adc
imul
pop
mov
pop
icebp
mov
nop
repnz
add
lods
test
imul
popf
push
pop
test
stos
xchg
ficoms
pop
aam
out
rcl
leave
aas
lea
aaa
das
xor
aam
aam
sub
mov
cmpsl
adc
in
xchg
xchg
repnz
daa
mov
or
fisttps
push
cmc
cmpsl
xchg
sbbb
cmpsb
out
mov
pop
pop
fxtract
rorl
push
mov
adc
jae
jge
and
lea
dec
or
mov
nop
test
push
ret
dec
cmp
xor
inc
ficoml
xor
sub
xchg
push
xlat
jmp
int
mov
cld
aas
cmpsl
pop
sub
pop
in
mov
movaps
popf
nop
addl
mov
ret
mov
mov
repz
mov
je
daa
inc
sar
testl
fdiv
pop
adc
xchg
dec
loop
xchg
mov
arpl
pop
pop
jecxz
aad
rorl
mov
test
stc
inc
mov
push
inc
push
insl
add
lahf
popa
and
aam
movsb
add
loope
mov
jo
dec
insb
flds
rolb
pop
cmp
scas
in
test
mov
xlat
mov
movsl
fimuls
cli
daa
fsubl
stos
pushf
mov
fidivrl
cmp
int3
rol
ret
mov
add
ret
test
dec
arpl
aas
inc
or
pop
inc
push
mov
mov
loopne
clc
adc
scas
insl
repnz
fnstcw
mov
dec
inc
les
mov
sbb
stos
lods
xchg
shrl
inc
mov
mov
cwtl
cmp
rclb
pop
mov
subb
aam
gs
pop
and
jecxz
daa
xchg
jp
xor
setns
mov
pop
mov
pop
js
outsb
test
rol
js
out
jno
shld
xchg
cmp
inc
push
mov
xchg
js
push
shrl
lods
jne
ffree
lock
cmp
stos
lea
mov
fwait
repz
add
sbb
xchg
dec
sub
nop
sbb
mov
lods
xor
inc
add
cli
ss
mov
jp
in
mov
xlat
aam
mov
push
jnp
pop
mov
and
mov
mov
mov
xchg
mov
xchg
mov
in
jmp
xchg
les
lods
mov
ljmp
movsb
pop
mov
test
pop
loop
fwait
mov
movsb
fisubs
pop
loop
adc
rol
fisubs
lret
into
loop
adc
push
pop
int3
fcmovnb
adc
push
pop
loop
enter
movsb
fisubs
push
pop
loop
repz
jecxz
sti
mov
push
mov
push
xchg
add
mov
or
aad
mov
cmpsb
movsb
lds
les
scas
sbb
daa
lods
cwtl
jg
cmpsb
in
and
test
xchg
dec
or
sbb
aaa
mov
fisttpll
sbb
jno
loope
jae
push
popl
sahf
jecxz
stos
orb
adcl
andb
stos
mov
fwait
mov
daa
mov
dec
sbb
jecxz
movb
sbbl
out
jmp
sahf
jecxz
div
sti
pop
in
into
xor
adc
pop
adc
pop
sbb
test
das
mov
fabs
cli
add
out
aas
inc
fiaddl
mov
and
push
call
cmp
in
mov
cmpb
test
mov
sub
mov
push
sub
js
push
movl
add
pushf
sub
dec
out
popf
es
out
lret
mov
out
pop
out
fptan
mov
mov
repnz
shlb
daa
mov
ja
faddl
cltd
fldcw
dec
lcall
inc
fsubrs
arpl
push
adc
lahf
cmp
xchg
xor
cmc
xchg
decb
in
mov
jl
xor
fistl
out
lods
fucomip
frstor
xchg
daa
pop
dec
push
push
push
mov
mov
cmp
and
push
mov
inc
fidivl
outsb
in
in
mov
add
les
pop
and
cld
shr
xchg
shlb
xor
xchg
lea
add
fimuls
subb
add
pop
cld
rclb
mov
outsb
mov
clc
repnz
insb
mov
push
js
repz
xchg
jo
add
cmc
jne
testl
sbbb
filds
inc
lods
scas
inc
fidivrs
insl
xchg
fnstcw
fwait
ret
test
and
and
stos
popf
add
aas
dec
popf
dec
xchg
xchg
mov
mov
xchg
fwait
cmpsb
test
cmpsb
test
cmpsb
test
dec
pop
mov
and
cmc
cmpsl
mov
mov
scas
and
mov
push
lret
scas
xchg
in
mov
mov
stc
ds
adc
out
xchg
jns
dec
jns
jbe
repnz
push
mov
mov
cmc
incl
testb
mov
stos
xchg
fisttpll
dec
cmpsb
mov
dec
lahf
nop
or
movsl
fwait
lahf
fwait
dec
icebp
cmpsl
cmpsl
xor
scas
popf
xchg
jmp
scas
xchg
sahf
mov
shrl
stos
mov
fimuls
test
aam
add
scas
jl
jnp
mov
push
mov
lods
cwtl
cmp
sbb
mov
jae
and
cwtl
or
push
sbb
sbb
nop
out
pop
in
mov
bsr
xchg
pop
out
sti
mov
lea
mov
pop
cmpxchg
mov
bound
loop
pop
cmp
aas
movsl
jns
shrl
or
xchg
mov
mov
xor
inc
fmull
push
cwtl
jp
inc
fiaddl
insb
pop
addl
enter
sbb
icebp
adc
sbb
adc
mov
repz
jmp
shrl
pushf
xchg
fwait
repnz
in
loope
cmpsb
je
cli
mov
mov
loopne
aas
inc
lea
mov
roll
ror
call
loope
paddq
repz
cmc
xchg
cmc
insb
add
xchg
xor
decl
shll
daa
cmpsb
add
or
mov
cmpsl
mov
xchg
push
js
mul
inc
cmp
stc
push
int
pop
loope
inc
lret
inc
hlt
mov
repz
test
push
aam
mov
jp
test
ret
xchg
lahf
mov
ret
inc
repnz
mov
mov
lea
mov
mov
mov
out
dec
xchg
dec
or
jp
call
scas
ljmp
subb
ret
cltd
js
mov
rorl
fsubp
fstps
sbb
mov
clc
test
das
mov
dec
mov
xchg
sti
dec
push
pop
mov
out
std
inc
mov
insl
sbb
cld
outsl
out
bound
xchg
incl
std
das
or
pop
fiadds
repnz
sbbb
sti
popf
sub
fwait
xchg
add
ss
inc
daa
sbbb
pop
inc
int3
scas
xchg
ja
test
cld
arpl
xor
or
sti
orb
test
ss
addl
mov
rolb
xor
in
scas
nop
movsb
inc
stc
adc
ss
inc
xor
cltd
popf
push
addb
jmp
arpl
cld
mov
mov
aam
cmp
ds
xlat
shlb
movsb
ret
lods
adc
xchg
enter
dec
mov
test
jno
insb
ljmp
aaa
addl
leave
pop
fisubrl
jbe
xchg
rol
cmpsl
xchg
mov
cmpsb
dec
pop
mov
mov
inc
and
or
xchg
or
mov
mov
js
outsb
cmpsb
rcrb
add
loope
test
push
test
and
pop
mov
xorb
dec
mov
fs
scas
mov
cmp
in
das
inc
cltd
dec
or
in
xchg
sbb
orl
xchg
push
cltd
and
xchg
dec
ret
icebp
in
mov
lods
add
icebp
pushf
cmpsb
dec
mov
adc
xlat
rolb
sub
xor
xor
in
cltd
lock
mov
xchg
xor
faddp
clc
mov
in
pop
and
xchg
mov
mov
sarl
aaa
test
mov
xor
push
pop
cwtl
cld
cmp
jno
or
repz
addb
dec
pop
aaa
clc
fldenv
data16
dec
sub
xchg
insl
rol
leave
push
mov
fnstsw
insb
lea
or
orl
inc
sub
ret
mov
scas
sub
lea
mov
negl
imul
jae
cmpsb
es
cwtl
push
mov
mov
aam
sahf
repz
xchg
and
insb
addb
mov
xor
pop
xchg
into
mov
pushf
insb
xchg
leave
cmpsb
fwait
rcll
test
lret
push
pop
addr16
xchg
popf
jmp
add
pop
sub
outsl
inc
jecxz
or
sbb
testb
popa
mov
loope
pop
jmp
test
test
mov
lahf
and
xchg
scas
jg
test
in
ljmp
int3
lahf
pop
xchg
xor
std
clc
mov
inc
sub
xchg
add
lds
or
add
mov
out
jbe
js
jno
mov
shll
xorb
and
and
adc
rcr
fmuls
mov
xor
cmpb
test
mov
test
cmpsl
addl
arpl
test
mov
mov
add
mov
mov
mov
inc
mov
movsl
inc
adc
dec
movsb
pop
insb
ret
inc
insb
mov
mov
rcrb
roll
push
mov
or
xor
mov
cmp
or
loopne
xor
sub
mov
mov
add
outsl
mov
lcall
mov
andb
fistpll
push
int3
fists
sbb
fistpl
aam
xchg
mov
stc
sub
mov
adc
ja
cli
mov
xchg
add
rorl
lret
adc
fmull
sbb
mov
push
and
mov
fiadds
ds
or
pop
xor
cmpsl
in
fisttps
push
or
sbb
or
inc
fsts
mov
sbb
push
jle
xchg
adc
insl
les
mov
cli
mov
sti
xchg
or
in
jbe
sub
mov
pop
jbe
dec
push
pop
arpl
mov
ret
cwtl
jb
test
test
stos
adc
mov
outsl
mov
jno
repnz
rcrb
cmc
ficoml
xchg
cmpsl
push
mov
addl
mov
insb
cwtl
ret
push
xchg
sub
xchg
pop
outsl
aam
shr
cmpsl
lock
aaa
inc
outsl
shll
cmovne
cmp
xchg
pop
into
mov
insb
xchg
pusha
fldl
lahf
xchg
ret
les
lods
pop
ret
push
xchg
cmc
or
aad
daa
and
rcrb
adc
push
jl
test
lret
and
fadd
rolb
loope
lock
int3
sbb
ds
idivl
add
sbb
test
inc
repz
pop
inc
lods
fiaddl
roll
mov
or
out
pop
xchg
fisttps
mov
scas
and
mov
sub
insb
rorb
lods
movsb
imul
lods
icebp
mov
lods
lahf
pushf
rorl
mov
push
lret
dec
or
or
loopne
in
test
and
std
mov
adc
ret
rcl
rcr
inc
test
cltd
jg
jp
test
js
outsl
js
jae
sub
xchg
inc
push
cmpsb
xor
cmpsl
stc
vprotd
out
fcomps
cmpsb
xlat
icebp
fbstp
imul
push
pop
xchg
mov
pushl
aad
xor
and
enter
dec
xchg
fildll
lahf
repnz
xchg
mov
outsl
aaa
push
mov
test
jno
or
sarl
sub
test
xor
or
lock
pop
jecxz
mov
or
adc
in
dec
mov
and
push
nop
ret
push
out
pop
cltd
add
inc
pop
fucom
fldcw
js
fdivrs
push
sti
mov
pop
xchg
mov
test
lods
andb
and
inc
jge
jno
mov
imul
xchg
fcmovnbe
add
mov
sbb
mov
mov
arpl
mov
inc
cmpsl
dec
mov
push
inc
stos
out
dec
mov
nop
mov
mov
xchg
pop
andl
jb
pushf
cld
sub
aaa
cwtl
std
add
jge
push
loop
shl
cmpsl
add
dec
arpl
xchg
inc
xor
and
and
mov
mov
in
cmovg
dec
outsb
sbb
leave
shlb
lahf
jecxz
cwtl
or
jmp
ja
xor
xchg
pop
jbe
jnp
out
mov
roll
stos
les
ss
fdivrs
test
jecxz
shl
daa
xor
cmp
push
add
mov
xchg
add
and
ljmp
pop
xchg
int
pop
sub
mov
cmp
rcrb
pop
adc
xchg
xor
and
inc
mov
imul
test
or
imul
mov
repz
mov
data16
xor
addb
scas
test
mov
and
imul
outsl
out
repnz
mov
ljmp
fbld
pop
mov
nop
jnp
mov
inc
jno
pushf
lret
xor
sti
mov
pop
jmp
leave
jae
xchg
orb
in
aas
in
mov
inc
cld
xchg
ret
dec
cmpb
shll
ss
rorl
mov
popa
push
or
cmp
xlat
repnz
mov
rcll
mov
rclb
mov
rcl
shll
push
add
leave
mov
imul
loope
fistpll
fisubs
jmp
test
pushf
out
rcll
roll
jo
and
xchg
in
mov
adc
xchg
or
gs
adc
popf
mov
clc
mov
push
xor
sbb
mov
adc
clc
imul
lcall
addl
push
das
nop
push
decl
mov
inc
push
inc
mov
cs
rolb
insb
push
subb
and
bnd
mov
scas
ss
addb
cs
test
jnp
mov
popa
lahf
push
xorb
mov
xchg
sahf
mov
adcl
fwait
addl
sub
sub
jmp
pop
xor
add
lret
or
or
or
xchg
enter
jl
xchg
sti
add
ja
xchg
adc
andb
sbbl
daa
xchg
icebp
ret
mov
cmp
aam
jno
add
jge
inc
rorl
bound
mov
ret
add
fadds
sbb
adc
daa
cmp
push
xchg
sbbb
cmp
xchg
jp
fwait
lods
inc
pushf
push
fidivrl
out
or
test
shlb
xor
mov
mov
cli
cmp
push
inc
add
popf
pslld
inc
mov
jo
or
mov
test
pop
scas
adc
xor
adcl
rcll
push
lea
fidivl
sub
or
or
addb
cmp
or
pop
in
pop
sbbb
push
leave
xchg
lods
orl
pop
aas
aam
inc
xchg
shr
filds
xorl
cmc
xlat
add
out
loop
lock
rcrl
arpl
js
icebp
pop
psubw
fidivs
cmpsl
inc
lods
jg
xor
aad
es
test
xchg
pop
xlat
add
mov
shrb
inc
cmpsb
sbb
pop
add
test
dec
lahf
fwait
rcrl
rcll
sahf
fwait
xchg
xor
xchg
fucomi
push
pop
rcrl
cmpsb
dec
fwait
lahf
xchg
xchg
roll
lret
mov
jecxz
jo
pop
out
dec
mov
adc
loop
cld
aad
xchg
lcall
faddl
pushf
sub
inc
mov
loopne
add
aaa
roll
dec
dec
lahf
push
mov
es
mov
orb
lret
push
add
cmp
xchg
add
xchg
subl
rorb
xchg
ss
mov
cmpb
scas
stc
stos
loop
mov
pop
addl
movsb
and
mov
mov
out
bound
xchg
cmp
repz
pop
daa
xrelease
repz
xchg
dec
pop
xchg
out
mov
cmpsb
fwait
adc
shr
lods
andb
sbb
mov
popf
xor
xchg
lret
cli
stos
add
scas
xor
stc
sti
push
push
push
repz
test
scas
ret
jae
cld
cld
cmp
fdivl
mov
out
xor
movsb
lret
inc
or
mov
push
mov
iret
xchg
add
pop
lods
daa
xchg
inc
lret
push
out
out
sbb
pop
nop
popf
jne
test
daa
pop
add
inc
test
lcall
xchg
orl
dec
mov
nop
or
mov
in
or
pushf
dec
pop
rorb
or
mov
jnp
and
cmc
xchg
xlat
dec
cmpsl
push
adc
sarl
test
insl
mov
sub
test
lret
imul
lcall
xchg
lea
pop
sarl
mov
loop
iret
movnti
xchg
add
scas
mov
cmpsl
xchg
fldt
push
pop
cs
inc
add
fcoml
orb
xor
out
repz
cmpsl
stos
setne
orb
repnz
andb
jmp
mov
and
cwtl
jp
repnz
push
mov
push
xchg
mov
pop
xchg
xor
adc
mov
mov
addr16
ret
inc
mov
call
inc
daa
test
call
mov
jne
xchg
adcl
xlat
dec
ljmp
add
mov
push
pop
jo
test
jae
sbb
insb
ja
jmp
scas
call
mov
pop
aad
ljmp
lcall
rorb
jecxz
cmp
mov
push
xchg
ror
sub
or
or
push
xchg
leave
or
or
or
repz
outsl
cmp
xchg
xlat
dec
insl
inc
popl
shll
adc
mov
push
int3
inc
fisubs
cli
mov
pop
lods
dec
xor
nop
inc
inc
je
leave
pop
cmp
cmpsl
scas
xor
push
mov
in
and
mov
jno
push
repnz
fstps
in
sub
jge
ljmp
dec
push
pusha
test
rep
jae
adc
fldl
cmp
xchg
fs
popa
shll
inc
rcll
sti
pop
rcr
sti
or
pop
rcll
mov
call
xchg
add
int
iret
mov
pop
cli
outsl
xchg
ljmp
xor
out
jle
inc
out
iret
and
iret
test
mov
sbb
xchg
push
push
inc
movsl
movsl
xchg
mov
test
popf
jmp
fisttpl
ret
jecxz
mov
cmp
push
mov
xchg
fidivrl
test
pop
mov
mov
out
xchg
xchg
push
sub
leave
call
cli
lea
repnz
sub
jae
arpl
faddl
stc
iret
mov
xchg
jb
movsb
sahf
pop
pop
insb
add
push
sti
cmpsb
xlat
es
jmp
xor
sbbb
fimuls
mov
jo
pushf
test
xlat
ss
lcall
or
jo
pop
pop
pop
pushf
dec
xchg
sbb
cwtl
jns
das
xchg
fcoml
adc
xchg
sbb
push
sahf
movsl
and
scas
xchg
test
dec
adc
xchg
lahf
cmp
adc
xchg
mov
movsl
test
push
ja
mov
pop
and
jno
mov
jg
and
int
fcom
imulb
cmp
inc
xorl
shll
mov
push
xlat
in
mov
hlt
nop
mov
repnz
mov
cmp
mov
icebp
lret
mov
mov
mov
add
js
insb
xchg
shlb
rcl
daa
movb
arpl
inc
mov
js
inc
add
cmp
inc
sbb
xchg
inc
mov
ret
inc
or
stc
pop
inc
dec
sub
popa
dec
jp
inc
orl
insb
cmpsb
xor
rclb
push
addr16
loope
fdivl
xchg
dec
clc
daa
call
mov
xchg
inc
mov
and
test
fdivrl
out
loop
jg
js
mov
inc
out
xchg
xchg
mull
xlat
aaa
mov
fimull
fwait
add
xchg
das
insl
mov
and
or
in
push
icebp
mov
into
clc
add
addr16
and
ret
lea
add
test
pop
xor
mov
adc
pop
add
xlat
cli
xchg
filds
xchg
orb
xchg
test
or
orb
add
rorl
movsb
ss
cmp
ret
mov
adcb
stos
jle
cmp
inc
insb
mov
xchg
push
iret
mov
jno
cmp
sbb
incb
xchg
insl
ss
andb
dec
cmp
add
stc
movsb
cli
push
ljmp
jno
pop
pop
repz
stos
lcall
mov
push
sub
cmp
cltd
ja
adc
pop
sbb
push
push
mov
push
lods
push
movsb
pop
add
mov
ljmp
xlat
jge
scas
in
xor
gs
scas
mov
sub
test
ret
mov
dec
ficompl
out
mov
lds
mov
scas
cmc
ljmp
xchg
inc
mov
lret
fcmove
rolb
lcall
out
xlat
adc
loopne
mov
and
movsl
decl
xchg
pop
lcall
fadds
xchg
nop
mov
push
mov
movsl
sub
jmp
cli
pop
adc
das
loopne
mov
ret
push
or
fists
test
cmp
and
xchg
cmp
xor
xchg
sar
xchg
push
inc
loope
in
icebp
lods
rcrl
xor
aam
stos
movsl
fsts
jecxz
shll
iret
ret
xchg
aaa
dec
repnz
ret
rol
pop
fmuls
jne
fmuls
dec
push
xchg
inc
icebp
arpl
pop
arpl
mov
add
jbe
add
cmp
pushf
dec
orl
xchg
cmp
pop
mov
ret
inc
sub
fnstsw
cmpsb
pop
or
rcl
rcl
fstpt
add
xchg
add
and
jno
ret
aaa
or
mov
add
mov
js
repz
rol
add
jnp
out
mov
fwait
js
imulb
cmpsl
cltd
mov
outsl
cmpsl
das
aaa
stos
jecxz
subl
mov
xor
lea
pop
lret
ret
icebp
or
pop
sbb
push
lea
dec
add
paddsw
icebp
addb
rolb
jne
lock
inc
sbb
mov
movsl
out
push
cmc
jne
push
negl
xchg
ljmp
rep
mov
test
ja
cmpb
inc
add
gs
xor
push
repnz
mov
stos
inc
dec
adcl
mov
ljmp
sub
icebp
xchg
adc
mov
out
orl
jbe
and
dec
insb
jecxz
lcall
mov
cmp
insl
dec
xchg
lds
ret
add
repnz
orb
pop
imul
add
xor
jnp
mov
repz
loope
mov
lret
inc
leavew
jae
test
mov
nop
mov
loopne
lods
xlat
shlb
les
ja
fcmovne
clc
pop
insb
lahf
mov
pop
lcall
mov
je
cli
shr
lahf
mov
out
and
add
inc
mov
arpl
cmpsb
dec
cmpsb
inc
mov
f2xm1
rol
push
add
ja
rclb
xchg
push
idiv
enter
orb
xchg
jmp
mov
dec
cmc
rorl
xorb
and
pop
and
mov
mov
sub
fstl
lahf
aaa
mov
test
pxor
mov
sub
cmpsl
rolb
fsubrs
inc
incl
mov
mov
jbe
ret
cli
push
inc
insl
cwtl
push
data16
xchg
push
mov
stos
sbb
push
jne
xor
ss
outsb
inc
scas
mov
inc
pusha
xor
fsubr
lods
outsb
or
stos
cmpsb
push
stos
pop
xchg
or
inc
mov
or
jl
push
aam
aam
icebp
enter
bound
movsl
jno
shrl
sbb
orb
or
or
fcoml
or
dec
popa
pop
lds
and
mov
aam
test
cld
mov
daa
cli
xchg
repnz
dec
test
and
shr
dec
data16
xchg
xor
ljmp
notb
shrb
mov
fiadds
hlt
fsts
ljmp
inc
outsl
add
les
arpl
xor
nop
lods
sar
repnz
mov
xor
and
adc
popf
add
mov
mov
xchg
xchg
push
or
mov
mov
lds
stos
pop
jl
sti
mov
aas
push
test
cmp
outsl
add
lods
rep
mov
pop
popa
insl
insb
add
lcall
pop
xor
mov
mov
rclb
dec
icebp
mov
stc
and
xorl
ljmp
repz
enter
cmp
or
push
pop
stc
xchg
mov
into
loop
or
sbb
jno
cmpl
dec
ljmp
mov
push
cmc
popa
mov
out
sbb
push
out
jne
sahf
hlt
mov
pop
repz
testl
lea
xchg
mov
jno
pop
cs
sarl
repnz
cmc
lret
repz
cmpsb
cld
into
inc
enter
dec
mov
ds
outsl
adc
stos
mov
rol
xchg
mov
lds
test
cmp
out
or
inc
inc
fs
les
push
pop
mov
sbbb
xor
aas
inc
pop
pop
and
push
ret
stos
shr
enter
test
xlat
aad
fistpll
cli
pusha
cmp
jns
pusha
leave
js
sbb
jne
add
cmpsb
ror
hlt
cltd
inc
nop
data16
enter
or
and
add
mov
jmp
js
xchg
sbb
jecxz
sub
sbb
popf
fildll
pop
lea
arpl
lds
repnz
mov
cmp
or
xor
repz
push
push
jns
iret
mov
cmp
outsb
test
sub
inc
jmp
or
adc
add
jae
jmp
xchg
jp
ret
shr
shrl
sub
xlat
xchg
gs
mov
push
and
ret
lods
nop
xor
stc
test
sti
mov
inc
and
in
fisubrl
inc
jmp
jno
insb
test
aas
addl
push
push
scas
std
cmp
mov
push
jp
jg
out
mov
mov
fsubp
in
in
adc
or
adcl
test
sarb
rolb
hlt
out
fcmove
nop
js
dec
and
cmp
addr16
fwait
cli
dec
cmp
push
adc
inc
mov
dec
mov
push
jmp
bound
outsl
outsb
pop
mov
push
insl
insb
imul
inc
icebp
push
push
cmc
les
insb
addl
xlat
inc
xchg
movl
xlat
shll
push
repnz
mov
xor
push
jns
mov
test
mov
cmp
roll
xchg
push
js
xor
outsl
cmpsb
xor
movsb
inc
xchg
mov
les
cmc
test
mov
cli
int3
ss
roll
dec
stos
xchg
repz
bound
aas
mov
jg
jge
dec
lret
popl
cmp
jne
jns
mov
inc
je
inc
ret
aas
inc
inc
call
sub
xchg
jbe
dec
loope
cli
jge
mov
xor
lahf
lret
jno
xchg
shl
in
dec
stos
mov
mov
jno
mov
xorl
jns
cs
jge
imul
call
jl
shll
les
and
test
mov
ret
popf
leave
popf
je
lcall
push
stc
adc
ja
pop
mov
jmp
sub
stos
xchg
or
adc
xlat
shl
push
call
sub
es
xor
iret
or
mov
mov
inc
aad
sbb
lock
hlt
je
add
js
xchg
rclb
lods
aad
inc
ret
lahf
xorl
out
mov
mov
or
pusha
movsb
repz
mov
xchg
paddsb
orb
or
xchg
shll
or
into
fcmovbe
sti
adc
movsb
sbb
push
lahf
inc
xlat
sbbb
aas
aam
inc
jns
arpl
frstor
addb
xchg
das
and
insb
sub
add
fst
sbb
ja
in
push
popf
addr16
and
inc
inc
aaa
out
fsub
xor
imul
mov
ret
mov
out
and
pushf
ret
push
adcl
push
xlat
lods
shrl
test
inc
or
sub
popl
mov
jle
cli
jge
and
addl
clc
insb
xchg
push
inc
icebp
out
bound
repnz
xchg
sub
lods
lea
push
mov
lods
inc
xchg
jmp
and
sbb
or
int3
lea
or
jae
xchg
rorl
stc
push
jg
inc
push
pusha
add
popf
pop
clc
and
jnp
sub
addr16
lea
jge
cmp
xchg
sbb
mov
inc
cmp
cli
fisubrs
lea
lds
adcl
push
mov
add
fcompl
cltd
cltd
add
fwait
xchg
mov
ret
and
or
mov
or
mov
inc
xor
push
ret
shll
daa
and
scas
pop
cld
push
adc
jmp
out
inc
fdivl
jnp
aaa
mov
sub
mov
lods
es
mov
test
test
dec
mov
add
xorb
inc
sbb
xchg
xor
push
test
or
pop
mov
pop
inc
popf
fwait
js
cltd
pop
ss
gs
xchg
cli
lods
aas
cli
lods
aas
cmpsb
or
pop
xchg
mov
jae
xchg
daa
int3
insl
sub
xchg
popa
jns
scas
es
pop
fsub
pop
lock
stos
mov
stos
stos
push
loop
test
jno
jno
aam
add
stos
mov
mov
popf
mov
insb
mov
or
icebp
and
pushf
loope
jne
stos
pop
xor
mov
jg
mov
ljmp
add
dec
push
dec
push
in
xor
push
inc
test
scas
repz
xchg
cmp
pop
or
out
movsl
mov
cli
mov
insl
bnd
xchg
mov
xchg
push
cmp
aam
repz
adc
mov
inc
shl
in
cmpsl
pop
repz
mov
insl
cmc
mov
and
adc
orl
inc
daa
lret
shrl
add
and
and
push
into
mov
inc
iret
mov
aad
or
pushl
pcmpeqb
mov
aas
mov
cs
int
adc
idiv
fwait
aaa
xchg
loope
dec
push
ret
lahf
bswap
out
dec
outsb
out
xchg
jle
and
mov
fcom
xchg
lahf
test
shrl
das
mov
jns
dec
adc
dec
sbb
mov
ja
jmp
cli
cmp
cmpsl
pop
test
jnp
cmpsl
fadds
std
enter
fmull
pushl
repnz
mov
imul
jecxz
dec
jnp
and
cmc
pop
inc
mov
xchg
push
or
test
dec
lds
mov
jb
das
test
insb
xor
fwait
stc
mov
mov
mov
mov
pop
dec
xchg
lea
icebp
sub
pop
add
mov
push
mov
pop
fisttpll
xor
dec
xor
fdivl
aas
das
mov
push
cmpsb
lcall
or
xchg
mov
xlat
shrl
push
js
sub
mov
jp
mov
lea
sbb
aaa
or
adc
adc
outsl
lds
mov
iret
xchg
repnz
pop
mov
fiaddl
mov
leave
ljmp
sub
fildll
or
pop
adc
ret
ds
cmpsl
ret
sbb
rcrl
filds
fistpl
ja
sar
loopne
jnp
add
scas
stos
sahf
aam
imul
add
adc
pop
out
push
and
push
lahf
mov
icebp
test
repz
ret
dec
fwait
imul
into
jns
mov
xlat
pop
aad
andb
test
jp
sbbl
inc
jg
inc
inc
fwait
outsl
mov
rclb
push
push
add
shrl
test
mov
rcrl
jo
or
mov
jne
rolb
movsb
bound
cmc
mov
cmc
mov
scas
push
imul
movsb
lahf
fdivl
mov
pop
out
inc
adc
fdivs
push
repz
mov
lods
not
xor
repz
insl
cli
test
mov
stos
xlat
adc
mov
push
pop
mov
mov
mov
sahf
mov
test
enter
cwtl
and
call
cld
jno
mov
mov
mov
xchg
popf
aad
bound
add
mov
sub
push
jle
outsl
cltd
sbb
fiadds
fsubs
xchg
mov
jnp
insb
loopne
ret
scas
ret
or
js
andl
fidivl
aam
pop
movsb
lods
pushf
xchg
cmp
int3
shll
bnd
mov
addl
mov
es
fsub
seta
mov
repnz
data16
sbbl
loopne
or
js
popa
pop
mov
ja
xor
pop
shll
xchg
fisubs
cmp
fcompl
out
mov
push
mov
movb
rcr
shll
in
subl
lret
push
movsb
insb
test
jg
mov
sbbl
mov
mov
inc
gs
mov
rcrb
in
in
cmp
pop
xchg
jne
loope
xchg
out
pusha
daa
arpl
jle
lods
inc
xchg
xchg
mov
or
inc
xor
std
ret
aam
xchg
xchg
roll
test
pop
push
or
mov
repz
xlat
cmpsl
pop
pushf
mov
xchg
cmpsb
mov
rclb
or
pop
mov
orl
pop
push
movl
add
pop
or
xchg
fsubl
cmp
rcr
xchg
mov
sbb
fcmovnu
imul
mov
xchg
in
cmpsb
fprem1
jns
pop
addb
and
xchg
xlat
scas
sarb
sbb
mov
push
add
stc
or
cmp
or
out
and
xchg
sub
in
push
popf
xlat
movsl
sbb
push
inc
add
es
xlat
pop
test
mov
stos
pop
xchg
inc
xor
mov
outsl
xchg
sbb
mov
sub
mov
rcrb
cmp
subl
jg
enter
xor
repnz
mov
fwait
fwait
add
pop
int
sarb
jl
iret
sahf
pushl
nop
jae
or
xchg
loopne
pushf
mov
out
add
pop
cmpsl
pushf
push
sbb
jbe
push
ficoml
mov
lahf
mov
pop
adcb
movl
test
popa
pop
xor
std
outsb
ret
enter
test
mov
fildl
adc
mov
pushf
imul
rorb
cmp
mov
xchg
jnp
cltd
lret
adc
pop
sbb
lea
inc
mov
mov
xchg
jle
inc
xchg
ja
cmpsb
pop
fsubr
xchg
das
cltd
outsl
imul
mov
dec
icebp
mov
sbb
leave
xor
jmp
iret
cmp
xchg
repz
cmp
xchg
test
addr16
mov
mov
ja
xchg
push
pushf
cmp
aas
cmpsb
iret
shlb
jmp
fistpll
arpl
inc
scas
pop
xchg
inc
loop
icebp
dec
sub
scas
out
mov
jns
addl
aas
clc
mov
pop
out
add
pusha
jbe
outsb
mov
mov
cmp
jmp
or
rorb
scas
rorl
jne
xchg
fsts
pop
mov
xchg
mov
add
xor
inc
outsl
add
sti
dec
mov
imul
jle
out
adc
adc
xchg
fildl
test
iret
sbb
icebp
pop
lcall
fldpi
push
xchg
dec
or
mov
ja
mov
adc
pop
loopne
data16
aas
leave
jae
inc
movsb
pop
push
cmp
jb
mov
jb
mov
push
inc
fcomps
arpl
xchg
pushf
arpl
xchg
xchg
inc
das
cmp
ret
in
lahf
push
sahf
sti
xchg
divl
imull
inc
adc
adc
inc
cltd
jo
pop
cmp
out
sahf
iret
cmpsb
pop
lcall
sarb
stos
dec
jo
jg
pushf
mov
push
imul
arpl
jle
jle
mov
addr16
icebp
mov
jne
adc
cmp
push
or
mov
xchg
mov
lahf
cmp
stos
imul
jl
sbb
movsbl
lea
fwait
mov
xchg
repz
inc
cmc
mov
sub
cmp
call
xchg
xchg
fcoms
negl
sbb
cmpsb
pop
push
loope
adc
add
sahf
jecxz
inc
mov
jnp
inc
test
aaa
push
and
pop
and
xor
xor
mov
dec
out
ret
adc
repz
xchg
in
cltd
test
mov
dec
or
mov
xchg
imul
inc
or
pop
sbbl
push
outsb
xchg
add
icebp
pusha
jns
sarb
dec
xchg
mov
movsb
xor
out
lahf
mov
or
and
inc
aam
mov
mov
cmp
mov
stos
js
add
ja
mov
xchg
aaa
mov
sti
pusha
sti
outsb
mov
xor
jb
jmp
inc
sbb
pop
push
fwait
push
inc
les
mov
mov
test
add
pop
xor
jno
jo
lea
xor
int3
out
pop
lods
subb
movb
mov
test
jmp
jnp
lea
mul
and
outsb
pop
inc
cmp
sub
test
pop
jecxz
mov
decl
insl
movsb
pushf
jnp
lret
ljmp
lea
xchg
lahf
iret
mov
test
lea
mov
pop
push
fsub
cmpsb
sub
nop
mov
into
mov
fldl
mov
aad
add
dec
lret
js
xchg
sub
or
mov
xchg
adc
mov
or
imull
xor
jl
jne
sti
lret
pop
jp
fdivs
lea
fildl
int
or
mov
into
and
mov
adc
mov
adc
mov
mov
out
cmpsb
jb
jecxz
dec
iret
pop
repz
fnsave
lea
dec
test
lahf
test
jmp
stos
pop
lds
pop
sub
pop
arpl
cmpsb
push
mov
xchg
add
sti
xor
mov
dec
xchg
inc
mov
movb
push
rol
mov
jl
subb
pop
mov
stos
mov
add
mov
out
dec
xor
loope
xchg
roll
xchg
jp
xor
inc
ret
repz
mov
xchg
dec
pusha
adc
loopne
inc
sbb
fnstsw
or
into
sub
sub
xchg
xchg
fwait
jb
mov
mov
mov
imul
pop
mov
add
outsl
cmp
rcrl
fnsave
cmpsb
movsb
jmp
dec
mov
je
mul
test
mov
push
mov
xchg
out
repnz
lcall
mov
mov
add
push
mov
xlat
ret
jns
clc
push
mov
loop
loop
leave
call
icebp
loop
stc
aaa
clc
shr
in
mov
out
xchg
es
cmp
aam
movsl
xorb
lcall
ds
sbb
test
int3
sahf
movsb
mov
stos
mov
xchg
jl
imul
test
pushf
rcrb
mov
sub
add
jno
js
inc
shl
mov
push
xchg
or
gs
pop
enter
out
loope
cmc
xchg
cmpsl
mov
xchg
or
gs
not
push
mov
jecxz
jmp
sub
fsubrs
mov
test
in
mov
pop
stc
mov
test
cmpsb
mov
or
xor
adc
lret
inc
nop
mov
push
cwtl
add
fucomi
add
test
push
mov
repnz
daa
dec
inc
dec
bound
lret
fwait
dec
test
lcall
js
out
cmpsl
in
hlt
repz
test
mov
imul
mov
dec
cmpsl
mov
loopne
mov
popa
jle
mov
xchg
iret
rcl
xlat
mov
repz
loopne
loop
leave
repnz
pop
jmp
jmp
cmpsl
hlt
pcmpeqd
jmp
xchg
into
ret
mov
fdivr
rol
ror
or
aam
cld
xchg
adc
jp
loope
jmp
out
into
add
ljmp
je
mov
ret
cmc
repnz
enter
jno
adc
sarb
push
mov
les
mov
js
js
sar
cmpsb
in
out
stos
leave
out
movsl
call
fnsetpm(287
fistpll
sti
clc
lods
mov
cmc
imull
aam
repnz
icebp
fsubr
test
mov
mov
hlt
shr
enter
rcl
into
cli
js
jns
iret
sarl
ljmp
xrelease
orb
js
js
mov
xchg
xchg
xchg
nop
lahf
sahf
popf
pushf
fwait
lcall
mov
fsubr
loope
clc
fs
stos
test
clc
xlat
call
std
scas
int
out
aad
movl
ljmp
enter
sti
jecxz
loopne
mov
mov
mov
mov
lret
aam
sarb
js
out
mov
ret
mov
fcmovb
mov
scas
mov
in
in
icebp
mov
add
add
add
js
femms
or
or
push
adc
adc
push
sbb
sbb
es
and
js
das
cs
sub
ss
xor
ds
cmp
inc
inc
inc
inc
inc
inc
js
js
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
data16
pusha
loop
js
outsl
outsb
insl
insb
imul
ja
jne
jae
jno
jg
jge
jnp
jns
js
js
enter
repnz
sarl
mov
test
jmp
stc
xabort
fs
loope
into
mov
fcmovne
test
out
mov
js
pop
jns
in
int
loop
outsb
scas
ret
testl
lds
js
mov
stos
lods
mov
mov
fbld
mov
jmp
hlt
aad
js
add
sub
adc
dec
pop
dec
and
into
xchg
in
or
test
out
mov
in
sub
pusha
loope
sbb
xor
in
pop
jmp
xchg
in
fsubr
out
ljmp
sbb
fisubl
popa
frstor
sbb
fidivl
xor
jecxz
jmp
or
js
js
cmpsl
fsubs
test
mov
jg
and
sub
cmc
out
mov
cmp
push
pop
pop
sti
pop
mov
cmpsl
loop
ret
lods
sahf
pop
xchg
aas
into
jecxz
lods
out
xchg
nop
jo
sbb
scas
cmpb
sub
xor
jb
pmulhuw
push
ret
leave
out
loop
push
test
mov
cli
in
test
mov
test
out
hlt
mov
jbe
sub
cwtl
dec
fdiv
mov
push
sbb
lcall
inc
loopne
jns
push
jmp
mov
jecxz
jmp
pop
mov
icebp
jl
cmp
scas
in
jl
cmpsl
push
xchg
inc
sub
fstp
es
in
mov
mov
push
adcb
jmp
cmc
scas
cmpb
mov
test
call
pop
pop
pop
pop
mov
call
call
xchg
xor
jmp
cwtl
hlt
aam
por
jecxz
arpl
cmc
jecxz
nop
repnz
pop
loope
xchg
loop
enter
aad
pop
ja
mov
fcmovnb
repnz
xchg
repz
hlt
inc
fcmovnbe
mov
adc
out
fsubr
cld
shlb
xorb
push
stos
mov
xor
test
jmp
adc
push
movsb
mov
addb
loopne
mov
roll
orb
cmpsl
test
cltd
or
or
test
test
jno
out
out
cmpsl
sbb
cmpsl
mov
in
ja
xor
cmpsl
mov
mov
pop
out
aaa
test
adc
add
incl
hlt
xchg
cmp
push
fdivl
lock
sbb
stos
std
stos
fisttpll
movsl
fisubrl
mov
adc
mov
mov
fsubr
pop
in
mov
shrl
jecxz
dec
inc
mov
in
add
cmp
scas
mull
mov
and
int
vmwrite
test
add
popf
xchg
test
data16
cmpb
add
lret
adc
add
cmpsl
push
pop
inc
xor
in
lods
sti
xchg
jge
scas
cmc
mov
scas
xor
mov
inc
xor
sbb
decb
jbe
adc
shlb
or
dec
int3
jmp
mov
sbb
push
jp
cwtl
movsl
fisubs
sbb
pop
jg
xor
and
daa
dec
lea
mov
ljmp
mov
ret
or
pop
mull
cmpsl
lock
and
lcall
iret
nop
les
in
ret
addr16
loopne
aaa
mov
or
inc
pop
lds
xchg
outsb
pop
movsl
cld
push
sbb
mov
cmp
fistpl
dec
imul
jecxz
jecxz
cmpsl
xchg
xchg
int
negl
repz
addr16
lods
stos
shl
inc
test
or
mov
enter
fdivs
sbb
jge
repnz
xor
into
jmp
mov
imul
sbb
adc
jo
push
fcmovnb
cmc
lcall
test
or
add
adc
stos
xchg
repz
dec
lea
int3
test
add
mov
call
or
inc
mov
mov
std
push
pop
hlt
out
nop
shrb
test
jle
cmpsl
shrl
mov
cmp
es
or
clc
out
and
lds
jo
out
test
dec
push
hlt
mov
and
test
js
js
xor
out
imul
jae
divl
adc
sbb
aas
js
js
pop
cltd
outsb
push
divps
lods
lret
xor
subb
pop
jecxz
xor
js
aaa
in
iret
idivb
je
cmp
cli
push
pop
popf
insb
arpl
xor
inc
add
pop
jmp
inc
das
pushf
js
xchg
sbb
jle
jp
dec
loop
enter
pop
jmp
xchg
mov
mov
mov
sbb
out
cmc
mul
and
js
js
rclb
jp
mov
xor
mov
pop
xor
pop
jle
sub
fldcw
rcl
pop
ret
push
pop
fidivrs
mov
mov
pop
push
dec
xchg
out
cmp
jae
cmpsb
movsb
inc
xor
push
adc
sub
sbb
test
xor
ss
js
insb
js
test
lret
out
fildll
out
mov
pop
icebp
xor
push
pop
lods
js
lds
push
push
cwtl
dec
andl
push
aas
outsl
and
jle
js
xchg
lds
mov
lahf
pop
mov
mov
clc
stos
mov
repz
ret
push
xchg
jae
in
in
in
js
fdivr
fwait
pop
mov
add
push
jne
adc
pushf
inc
jae
add
js
js
inc
pop
aaa
loop
outsb
xor
sti
jnp
lcall
je
push
or
lret
push
jl
fcomp
jg
out
lret
mov
mov
push
and
push
adc
js
pop
out
push
and
push
in
outsb
out
les
jmp
sub
out
hlt
stos
cmpl
js
bound
lea
mov
movb
add
out
js
pop
insl
shlb
aad
push
loope
sbb
dec
mov
fstps
dec
pop
scas
movsl
pop
push
aaa
js
js
xor
push
inc
nop
mov
xor
sub
cmp
push
xor
sbb
js
js
sbb
rclb
lock
sbb
xchg
pop
hlt
xchg
mov
add
mov
jnp
das
fucomp
std
mov
arpl
js
adc
sub
sbb
ja
jns
js
and
add
jne
cltd
jns
sub
dec
roll
divb
in
js
js
push
pushf
push
jns
lods
push
push
pop
xchg
dec
int
loopne
pop
jle,pt
push
xor
js
nop
push
or
out
and
push
stc
adc
es
inc
pop
mov
jbe
cmp
loopne
cmp
pop
xorl
mov
pop
lods
mov
pushf
lea
jno
test
inc
push
loopne
push
js
mov
cmp
rorl
out
popf
add
cmp
push
call
aad
lock
rorb
cmp
test
sarb
mov
cmp
sub
js
inc
js
clc
cs
xor
pop
stos
lcall
sbb
jne
imul
in
repnz
js
adc
test
orl
cmc
xchg
rolb
adc
lods
ss
mov
pushf
xor
push
adc
xor
sti
cmpsb
pop
pop
mov
push
js
clc
add
gs
jbe
xor
out
jmp
xchg
cmp
fsubl
aaa
adc
jmp
shlb
popa
notl
dec
mov
xchg
out
sub
jg
js
out
jmp
jmp
mov
js
daa
imul
leave
inc
xor
jp
loopne
jo
out
lret
xchg
js
inc
into
pop
test
int
push
sub
push
pop
loope
pop
js
js
cld
mov
sub
cs
sbb
clc
dec
xor
mov
jne
cmp
js
dec
mov
xor
and
mov
adc
push
dec
scas
rcrb
cmp
pop
movsb
test
int
js
js
inc
test
lods
mov
mov
or
fisttpll
push
ss
mov
sahf
add
aam
movsb
inc
pop
js
nop
xchg
add
fst
inc
adc
enter
dec
into
cmp
push
or
outsl
push
fs
xor
stos
add
dec
fwait
pop
add
xchg
js
js
inc
int
movsb
pop
aam
divl
adc
push
sub
push
xor
fwait
adc
add
ficomps
fsubs
js
add
pop
jge
aaa
sbb
popa
fwait
daa
js
mov
js
sbb
add
fs
sbb
cmpsl
shll
and
jbe
push
je
mov
pop
jns
loop
inc
pop
sub
rol
dec
in
call
sub
mov
stos
mov
xchg
je
rcrl
fiaddl
shl
push
fdivr
cs
add
repnz
fwait
js
js
push
mov
adcb
cmp
nop
cmp
pop
mov
js
je
cmp
outsl
in
cli
pushf
inc
cmp
js
mov
enter
stc
in
add
rorl
cmp
js
js
or
movsb
and
mov
mov
or
adc
mov
call
ret
jge
dec
aam
rcr
cmp
xchg
jmp
inc
mov
js
adc
push
pop
xchg
cs
inc
push
jge
imul
fistl
js
fcoms
in
pop
xor
sbb
enter
mov
pop
idivl
mov
and
jp
movsb
popa
sti
mov
mov
shll
js
js
or
mov
jp
lods
sub
sub
mov
jmp
mov
sub
call
dec
insl
xchg
aam
scas
sar
out
fwait
gs
mov
mov
pushf
js
js
mov
jne
aam
xor
iret
aad
pop
loop
mov
stc
out
je
pusha
cmp
jns
push
js
js
push
push
mov
mov
add
adcb
call
cmp
mov
pop
add
lea
pop
movsl
dec
jge
js
js
mov
dec
sub
mov
jae
dec
mov
inc
repz
insl
inc
js
js
pop
inc
pop
lock
rclb
andl
and
add
cmp
neg
cmp
out
pop
outsl
lock
fstpl
stc
mov
sbb
jns
pop
fwait
xchg
aam
add
pop
in
aas
ja
js
xor
shlb
inc
adc
inc
push
outsb
cmp
xor
inc
cmp
lods
add
dec
sub
notl
fidivrl
lods
shll
js
js
pop
loope
inc
clc
in
outsl
shll
je
test
inc
cs
loopne
add
js
sbb
jle
pop
jp
dec
je
cld
jp
dec
cmp
cs
jp
xor
xor
js
add
mov
xorb
lock
xor
iret
jb
in
mov
sar
cmp
jg
leave
push
push
mov
push
dec
xor
mov
adc
mov
sbb
cmp
shld
pop
mov
mov
mov
loopne
cs
inc
jge
rolb
dec
in
cwtl
inc
insl
js
js
push
fnstenv
pop
sbb
mov
adc
fnsave
in
pop
js
js
cmovns
stc
jge
adc
dec
in
or
adc
js
js
push
pop
daa
subl
loop
jmp
daa
aam
outsl
mov
mov
in
pop
jg
xlat
fsubrl
jmp
iret
cmp
js
js
loope
push
and
cmp
or
in
inc
movsb
push
cmp
push
push
and
add
mov
mov
dec
out
mov
js
cmp
fdivl
in
loop
jae
stc
inc
mov
aam
icebp
mov
mov
ja
xchg
es
mov
or
js
in
inc
xchg
push
add
das
inc
js
insb
inc
dec
xorl
xchg
mov
jp
js
call
adc
jecxz
popf
into
adc
lea
js
js
push
mull
fwait
rorb
cltd
lock
cltd
sub
popf
inc
pop
sub
js
js
jb
out
sahf
dec
jne
xchg
js
jo
and
hlt
xchg
xchg
fnstsw
cmp
test
or
xchg
lret
nop
addr16
push
stos
push
js,pt
jns
jg
mov
mov
add
mov
fnstenv
js
sbb
xchg
lahf
mov
cmp
mov
push
adc
pop
leave
js
adc
pop
in
mov
imul
lret
cld
daa
js
jns
daa
movsl
movsl
push
popa
cmpsl
jecxz
cmpsb
scas
xor
lods
cwtl
pop
cmp
in
scas
testb
stos
inc
icebp
xor
sbb
and
mov
inc
or
imulb
ficomps
fwait
mov
icebp
cmc
js
js
jbe
repz
repnz
stc
enter
xchg
in
sti
and
pop
adc
push
cmp
daa
cmp
dec
inc
cld
aaa
test
ljmp
xchg
inc
js
data16
neg
imul
test
mov
mov
je
clc
sub
mov
ljmp
inc
outsb
out
push
and
cmp
cmp
out
in
outsb
clc
adc
iret
nop
es
into
leave
cwtl
xor
xor
js
int
in
enter
leave
adc
pop
pop
lret
inc
shrl
add
inc
js
and
add
lcall
lcall
shl
test
js
mov
mov
push
xor
or
aam
sub
sti
xlat
push
stc
cmp
outsl
mov
js
fdivrl
faddl
push
fidivrs
insb
fiaddl
js
js
call
fadds
pushf
mov
xor
jo
imul
popa
in
pop
jns
mov
js
js
aas
bound
int
push
rcrl
and
push
gs
push
punpckhdq
mov
jns
js
insb
cmp
out
insl
ja
xchg
jp
push
jnp
jmp
jns
js
js
sarb
xchg
popf
jge
std
pop
jl
inc
sbb
sub
jg
outsb
xchg
inc
jne
mov
js
js
shll
mov
lods
dec
jb
adc
jo
js
jno
pop
shlb
jnp
mov
js
pop
cmp
pop
or
xor
push
cmpsb
jb
int3
mov
pop
mov
push
push
pop
push
cmp
stos
push
andl
push
mov
daa
push
es
push
ficompl
flds
adc
pop
daa
sub
pop
inc
into
lahf
inc
aam
jl
adc
add
xchg
std
sub
dec
sbb
cs
dec
js
xchg
inc
jbe
jecxz
ret
dec
ljmp
stos
js,pt
clc
outsb
test
imul
test
scas
outsb
adc
mov
jecxz
jne
clc
add
insl
movsl
adc
adc
dec
sub
sbb
xchg
mov
sbb
sbbl
cmp
sbb
push
je
mov
push
or
data16
xchg
or
or
or
pop
or
add
js
movsb
inc
pf2id
add
mov
add
push
pop
pop
push
rorl
add
and
add
js
js
cmc
push
add
push
gs
loope
jle
and
ljmp
xchg
scas
sub
js
js
inc
sub
lahf
push
jbe
test
mov
icebp
shl
and
mov
jg
je
mov
and
js
js
adc
and
pusha
sahf
xorl
push
dec
add
xor
in
into
sarb
jns
loop
aaa
out
movsl
push
cmp
iret
xchg
cmp
out
xor
js
inc
js
cmp
fnstsw
push
pop
cmp
cmp
or
mov
outsb
push
nop
jns
adc
or
in
mov
es
in
inc
xor
call
aas
cmp
js
js
pop
in
jne
lock
rcll
sbb
sahf
xlat
jge
and
sbb
lds
cld
jnp
js
pop
sub
inc
loopne
cmc
repnz
clc
sub
xchg
lahf
xchg
stos
jl
and
mov
and
and
dec
sar
mov
dec
or
js
add
add
mov
imul
ja
add
adc
call
add
xor
pop
or
scas
repnz
pop
jns
mov
push
out
cmp
jg
jg
ja
sbb
iret
lods
mov
movsl
rcrb
add
into
clc
adc
jb
cli
mov
inc
pop
jge
mov
push
sbb
lahf
adc
daa
clc
lods
mov
sti
cmpsl
pop
jge
adc
outsl
iret
das
out
sbb
mov
das
movsb
lcall
dec
icebp
xchg
mov
add
data16
out
adcl
cmp
fwait
popa
fidivrs
jae,pn
pop
xchg
lret
add
addr16
stc
out
mov
clc
fs
iret
lock
mov
ss
scas
inc
and
daa
aas
pop
jb
call
js
ja
jnp
xlat
loope
pushf
mov
ror
mov
xor
aaa
and
mov
popf
aaa
pop
push
clc
push
loopne
push
call
jae
jmp
mov
jns
js
inc
push
push
adc
shl
ret
xor
jg
pop
das
lret
js
sub
and
adc
shl
sbb
test
mov
js
js
cmpsl
test
dec
mov
jle
shlb
in
daa
mov
push
nop
out
mov
cmc
mov
jbe
mov
arpl
xlat
data16
js
leave
mov
js
scas
sub
movl
push
call
sub
dec
aaa
push
js
aad
sahf
imul
mov
pop
pusha
outsb
mov
add
jge
test
push
ss
pop
fcom
arpl
add
mov
js
jp
mov
popl
mov
and
cmp
into
nop
int
jb
je
movsl
js
jns
mov
xchg
sbb
lcall
test
xchg
jg
and
in
fsts
jo
mov
fidivl
movsb
in
js
js
in
lret
push
jb
push
in
insb
xor
aad
mov
outsb
xor
pop
roll
insl
mov
js
js
invd
shl
mov
jle
movsl
sbbl
sbb
pop
inc
xchg
mov
xor
aam
xchg
sbb
scas
dec
and
inc
mov
xchg
adc
outsl
js
mov
icebp
and
repnz
pop
xchg
xchg
subb
cmc
sbb
js
js
hlt
dec
movsl
jbe
rol
adc
jp
fsts
icebp
in
jbe
or
mov
js
jg
test
mov
adc
pop
mov
outsb
inc
jle
or
ret
js
js
mov
sub
es
sbb
pop
mov
add
jns
test
js
shll
xchg
neg
or
xchg
data16
test
fistpll
add
popa
mov
icebp
push
addr16
jno
fdivrl
outsb
into
pop
mov
js
cmpsb
addl
inc
dec
cs
mov
mov
icebp
sti
push
imul
call
ss
sbb
dec
xchg
xor
add
js
inc
ds
loop
bound
xchg
mov
push
js
js
fwait
or
xchg
loope
inc
negb
stos
pop
call
adc
orl
js
sub
mov
test
push
les
jno
outsb
and
loopne
cwtl
cs
dec
std
dec
js
push
js
repz
loope,pt
addl
stos
push
mov
cmp
sub
sahf
sub
outsb
in
mov
jecxz
and
pop
pop
aas
and
push
js
push
outsb
cltd
adc
jle
ss
cmp
stos
fstpt
lcall
js
jecxz
aaa
cmpsl
jne
ds
cmp
pop
popf
pop
push
cli
ljmp
adc
js
add
jmp
shl
in
das
inc
jp
jle
or
xchg
enter
pop
jge
mov
js
aam
mov
out
xchg
fsts
arpl
test
int3
cmpl
js
rclb
jp
int3
mov
das
jge
xor
dec
push
sub
jle
jp
js
mov
jmp
ret
repnz
push
mov
push
mov
sub
inc
mov
js
js
cmp
xchg
cmpsb
xor
shll
movsb
dec
cmp
and
fadds
pop
xor
mov
test
sti
add
out
lret
xchg
inc
out
sub
loope
mov
xchg
pop
push
cmpsl
cmp
jp
rcll
lods
divb
add
xorl
arpl
push
mov
clc
in
incl
adc
pop
lahf
clc
in
mov
ljmp
push
jecxz
popa
in
xchg
int
js
pop
aad
out
add
mov
jne
xchg
jmp
adc
xchg
cld
add
mov
loop
push
js
aaa
pop
inc
xchg
xor
or
aas
insl
jnp
psubq
pop
lcall
sti
je
test
lret
loop
xor
and
js
mov
push
cmp
gs
and
mov
push
inc
ljmp
outsb
in
mov
js
js
pop
jnp
loopne
rcrl
push
ret
subl
sub
mov
dec
xlat
xor
mov
js
sub
dec
mov
mov
pop
push
mov
arpl
fnstcw
js,pn
jle
scas
pop
dec
pop
aaa
push
fs
push
das
xor
xor
nop
test
pushf
js
mov
jmp
push
add
sbb
xor
ss
js
js
sbb
sbb
sub
pop
xchg
add
in
xchg
adc
mov
jns
in
mov
arpl
js
test
mov
ja
adc
add
jne
out
addl
pop
jge
js
xlat
dec
sahf
jmp
imul
in
andl
push
lods
addr16
pop
std
fucom
pop
int
js
adc
ds
call
nop
xor
out
or
push
and
es
adc
pop
jge
sbbb
enter
push
cmp
jae
shl
mov
xor
fdivrs
mov
mov
int
movb
das
loopne
shlb
clc
out
insb
shr
push
add
mov
out
gs
mov
nop
jge
adc
rcr
xchg
rolb
mov
scas
lods
xor
js
clc
or
pop
in
addl
and
push
dec
mov
pop
sbb
pop
sub
js
cmp
in
repnz
and
test
adc
sbb
mov
cmc
and
addb
js
rclb
aas
std
xchg
cld
lods
sub
push
or
push
cmp
js
js
pop
push
cmpsb
add
jbe
vcvtsd2ss
cwtl
pop
add
push
cmp
fcompl
pushf
js
aaa
lock
xor
lock
frstor
mov
loope
mov
js
xchg
jg
sub
out
mov
daa
lea
push
js
sub
psrlq
loopne
out
js
jbe
out
jo
out
ror
jmp
int
push
fstpl
pop
mov
mov
js
js
mov
aam
cmp
inc
shlb
outsb
cmp
jne
dec
cmp
adc
mov
js
and
push
adcl
pop
loopne
loope
test
ficompl
jns
js
pushf
test
mov
mov
mov
fldl
push
js
inc
js
mov
in
lods
stos
aam
push
inc
cmp
jae
rcr
and
enter
dec
js
shl
push
inc
cmp
jge
outsl
or
sub
js
xor
mov
sub
lret
stos
or
pop
fwait
dec
int
xchg
aam
movsb
xchg
pushl
push
out
adc
insb
push
shlb
pop
xor
add
adc
xchg
add
test
aaa
stos
jge
cs
sbb
jecxz
fwait
push
js
js
dec
pop
dec
fisttpll
and
and
lock
outsl
and
js
js
push
pusha
inc
pop
add
pop
inc
xor
ret
rcrl
call
idivl
mov
js
sub
orb
pop
shll
push
shl
jae
js
push
cmp
cmp
je
and
push
repnz
andb
nop
sbb
jl
add
mov
mov
xor
js
jo
inc
js
sarl
cli
fistps
mov
in
ret
inc
enter
rcrl
jp
lds
or
outsl
xor
inc
mov
adc
xchg
or
dec
fisttpl
mov
push
mov
jmp
aam
js
nop
std
cmp
shll
jmp
mov
adc
pop
xlat
add
sar
xchg
imul
arpl
in
fucomi
popa
lcall
js
jp
add
xchg
mov
mov
movsb
sbb
jp
and
xor
in
mov
mov
js
push
sub
or
dec
cmpsb
lods
cmp
sub
push
imul
js
add
mov
insl
jl
shrl
mov
iret
xor
int3
js
adcl
ret
iret
or
loop
not
push
mov
popa
je
jns
inc
cmp
push
sti
dec
dec
daa
mov
push
cmpb
js
ss
ljmp
and
mov
movsl
pop
lea
sub
push
jmp
js
js
ljmp
or
les
movsb
test
testl
mov
rorb
popa
adcl
pushf
add
test
popf
out
fnstsw
lock
pop
fstl
xchg
js
popf
js
enter
stc
fsubs
pop
ds
xchg
gs
aam
in
adc
jae
xchg
inc
push
fdivl
clc
adc
adc
cmpb
xor
pop
in
add
mov
sub
pushf
call
loope
mov
clc
inc
dec
js
fadds
loop
xor
inc
and
orl
sub
jp
sbb
js
lcall
cld
pop
cs
cmp
xor
mov
stos
fwait
mov
call
cltd
xchg
mov
mov
hlt
iret
mull
in
push
jb
roll
ficompl
dec
jge
leave
push
popaw
mov
addr16
scas
sub
jp
js
xchg
int
or
add
push
test
mov
mov
insl
js
add
enter
shrl
test
mov
in
push
push
mov
jae
js
js
xor
and
sub
roll
fstl
in
dec
aam
into
enterw
jnp
cmpsl
stc
sar
push
stos
adc
dec
jno
or
js
cmp
cwtl
cmp
push
andl
je
shl
sub
iret
push
jmp
mov
cmp
movsb
mov
in
xchg
mov
arpl
cmp
and
push
pushf
loope
or
cmp
cmp
push
or
inc
jae
pop
popa
push
cmp
and
mov
push
xor
ds
jg
popa
sarl
std
pop
loop
das
stc
fnsave
stos
insl
js
js
jo
mov
ficoml
dec
mov
mov
mov
mov
add
test
cmp
shrl
pop
orl
out
or
add
push
mov
js
js
push
mov
push
jecxz
pop
adc
lea
stos
lea
mov
lcall
cwtl
and
lcall
push
sbb
sub
inc
sahf
out
xor
push
js
xchg
mov
dec
xchg
jo
js
enter
lret
push
xchg
mov
mov
js
js
xchg
aas
or
nop
std
arpl
mov
or
or
ret
imul
mov
test
loop
fsts
call
mov
xchg
adc
outsb
nop
jg
push
in
insl
mov
pop
mov
js
cmp
adc
insl
jns
stos
fmull
in
lret
movsl
daa
mov
movsl
cmpsb
mov
fsubs
pushl
jl
pop
cwtl
scas
jnp
shrl
fwait
jae
xor
inc
test
jb
sbb
negl
pusha
jo
cltd
fisubrs
cmc
pop
mov
lock
fwait
icebp
enter
js
push
nop
jbe
push
sbb
stc
push
pop
clc
int3
xor
cli
mov
cmpsb
incb
push
js
jae
and
lds
cld
inc
dec
jp
cmp
nop
jmp
jge
xchg
pop
outsb
ljmp
out
mov
test
inc
js
je
mov
sub
in
mov
out
inc
loop
push
push
jecxz
cmp
js
loope
test
iret
push
dec
cmpsl
into
xchg
es
xor
js
rorl
pop
in
leave
fwait
mov
xor
roll
rolb
js
leave
jno
add
mov
mov
hlt
lods
les
lcall
test
js
js
shl
cmp
aam
inc
or
mov
xchg
gs
cmp
push
frstor
outsl
fsubl
js
fsubp
push
fbld
add
fisubrl
fldt
ret
sub
pop
addr16
xor
push
mov
gs
imul
xor
js
js
aas
loopne
arpl
mov
imul
shrl
jae
outsl
test
arpl
por
js
insb
sub
or
jp
aas
ja
push
push
inc
jns
jmp
sarb
js
mov
jl
std
pushf
jle
inc
lds
sub
je
outsb
iret
jne
add
ja
jp
js
mov
xchg
jae
adc
lods
and
or
jge
enter
js
and
pop
cmp
push
in
mov
jb
pop
xor
or
jb
jns
js
push
pop
mov
bound
mov
loope,pn
push
push
xor
adcl
mov
popa
js
js
and
popf
fiaddl
jns
inc
sbb
mov
inc
lahf
into
inc
rcl
dec
test
js
inc
adc
and
dec
lret
dec
or
dec
dec
sub
xchg
and
js
jbe
ret
xor
add
les
push
popf
dec
test
inc
ja
js
js
pop
ljmp
adc
scas
sahf
adc
mov
sub
movsl
insl
jne
addr16
mov
cmp
sbb
sub
mov
es
call
js
adcb
push
cli
or
mov
or
fadds
or
out
or
js
js
lds
push
or
cmovno
add
cltd
aaa
popa
push
pop
pop
push
add
sarl
js
add
and
add
cmc
mov
gs
daa
das
cmpsl
cmp
dec
sub
jmp
sti
jb
js
scas
xchg
int3
sub
sub
and
lahf
and
sub
daa
jg
inc
es
jp
and
js
js
inc
hlt
push
xor
and
xor
pop
mov
ss
aaa
or
sarb
nop
jg
push
movsl
out
cmp
aam
cmpl
or
js
jge
pop
fstp
pop
cmp
mov
js
cmp
loop
mov
xchg
xor
imul
adc
mov
ja
mov
push
mov
cli
cmp
js
inc
jecxz
xchg
push
cmp
jne
pop
pop
addr16
lock
in
js
das
sbb
mov
jge
sbb
cmp
negb
inc
dec
loopne
and
repnz
pop
dec
dec
call
imull
cmp
and
jl
lahf
push
sbb
or
aaa
inc
cmpsl
sub
js
js
mov
mov
lea
push
test
mov
mov
fidivs
mov
push
loopw
add
enter
mov
aad
js
call
push
jg
cmp
ja
jg
iret
adc
inc
frstor
sarb
inc
js
clc
into
call
adc
mov
push
inc
lahf
mov
push
leave
int3
jp
orb
sbb
lahf
inc
mov
jp
sahf
test
push
sti
xchg
gs
sbb
filds
das
mov
cmp
pop
mov
jo
xchg
icebp
dec
in
sub
mov
call
addl
fwait
sub
cmp
jae
aas
fmulp
xchg
pop
mov
stc
mov
dec
test
xor
mov
in
dec
mov
out
inc
loope
daa
lret
js
addr16
call
js
imul
pushf
mov
mov
scas
and
js
push
and
pop
aaa
popf
mov
push
call
adc
cwtl
jae
mov
js
call
loope
dec
ldmxcsr
push
ret
out
mov
js
sar
cltd
lret
and
jns
pop
imul
aas
push
rcrl
loopne
mov
xchg
and
test
pop
jle
mov
ret
in
jbe
js
mov
inc
jle
mov
nop
decb
mov
sub
sarl
jno
push
js
adc
hlt
xchg
mov
xchg
addl
cmpsb
outsb
cwtl
js
add
cmp
inc
or
sub
xor
js
js
sub
js
sahf
push
in
cmpsb
jmp
add
mov
or
js
sbb
jle
add
mov
cwtl
jb
js
mov
popa
mov
inc
xor
and
scas
test
jb
outsl
js
inc
mov
icebp
je
sbb
jmp
dec
int3
inc
iret
clc
data16
sub
in
loope
jo
fstps
ficoml
adc
jbe
lret
js
in
sahf
xorb
out
in
or
pop
xor
or
std
xor
daa
inc
shrl
jns
mov
mov
rorl
movsl
push
jle
sbb
cmp
pop
jge
jmp
lcall
js
cld
add
adc
js
js
sub
das
mov
and
movsb
pop
inc
loope
out
xchg
dec
hlt
dec
sbb
and
js
js
push
sub
dec
icebp
lret
dec
jbe
in
ret
mov
outsl
jle
js
inc
js
adc
mov
mov
imul
outsb
mov
or
lret
out
js
fsubs
mov
mov
adc
jns
mov
outsl
pop
jnp
js
js
xchg
mov
xchg
lock
sub
mov
push
cmpsl
fs
js
addr16
icebp
jno
into
outsb
fidivrs
sarb
cmpsb
push
mov
dec
sub
push
cmp
js
mov
sti
icebp
push
xor
dec
imul
lea
js
js
arpl
das
incb
xchg
dec
out
push
sub
mov
xchg
inc
mov
mov
js
xchg
jns
or
xchg
and
call
ds
mov
push
ja
aas
popa
adc
into
cld
pushf
ss
iret
jl
fisubrs
loopne
and
push
xlat
jnp
cs
repz
loope
out
pop
addb
jg
lods
jge
jp
test
test
decl
ljmp
xchg
mov
lcall
mov
xchg
cmpsl
mov
cld
mov
xchg
add
jmp
xlat
test
cmp
cmp
testl
sbb
subb
push
mov
orl
pop
cmpb
adcb
scas
aaa
bswap
mov
mov
ja
rcll
lods
push
mov
push
repz
mov
lret
lret
addl
outsl
popa
sbb
mov
fisttpl
adc
sub
sbb
nop
clc
jmp
out
sbb
or
jg
out
sbb
and
sbb
mov
mov
movsl
out
sbb
add
sbb
adc
sbb
mov
out
sbb
or
sbb
adc
xchg
popl
and
mov
mov
mov
sub
and
sbb
in
out
cmp
pushf
mov
test
cmp
jnp
andl
xchg
add
mulb
sahf
and
mov
out
pop
and
sbb
gs
sahf
adc
sub
sahf
and
sbb
rorb
mov
xchg
mov
xchg
mov
mov
mov
loop
sub
addb
insl
fcmove
mov
push
lcall
dec
cmpsl
ljmp
lret
jge
xchg
iret
push
mov
hlt
mov
push
mov
mov
movsb
and
les
pushf
adc
mov
lret
xor
iret
jno
nop
lock
push
mov
loopne
sub
add
imul
fistl
pop
call
and
jl
or
cmpsb
sahf
adc
adc
ss
add
iret
add
outsb
push
add
iret
add
jle
cmpsb
sahf
int
and
adc
sahf
adc
iret
add
dec
sub
jecxz
add
pop
cmp
inc
sahf
adc
adc
sahf
adc
iret
add
jecxz
add
int
jecxz
cmp
sahf
adc
pusha
cmpsb
sahf
adc
scas
sahf
adc
jecxz
add
push
iret
pop
cmp
mov
lock
stos
and
xchg
xchg
cwtl
push
andb
dec
xor
addb
cmp
sbb
addb
out
test
mov
mov
outsl
and
or
int
cmp
lock
xchg
or
dec
mov
adc
outsl
in
in
cmpsl
repz
mul
xchg
hlt
jge
stos
xchg
out
popf
jmp
jmp
ficoml
adc
ljmp
xchg
stos
xchg
in
int3
adc
mov
ljmp
mov
dec
ja
loope
scas
in
in
cwtl
in
test
pop
cmp
inc
mov
lcall
div
mov
pop
aaa
adc
pop
pushf
sub
test
mov
cmpsl
mov
ja
and
pop
les
push
sbb
add
adc
dec
in
xchg
xor
es
shr
mov
mov
pushf
loope
into
das
xchg
shlb
pop
aaa
mov
stc
test
hlt
out
std
loop
fmull
mov
cmc
imul
out
div
or
push
push
shll
or
adc
push
mov
mov
dec
ror
shll
mov
jmp
mov
les
ljmp
sarb
pop
cmpsb
jle
xchg
xchg
xchg
adc
sbbl
lret
xchg
xchg
lret
bound
lea
xchg
adc
lret
pop
and
inc
xor
testl
cld
aad
int
sbb
ss
mov
push
mov
jo
xchg
xchg
push
mov
pushf
fwait
lcall
xchg
iret
addl
rol
dec
cmpsl
add
addl
sub
mov
sbb
les
clc
xchg
mov
mov
in
or
push
mov
or
mov
push
mov
fwait
sbb
pop
push
mov
push
mov
lret
lret
inc
movsl
and
mov
xchg
adc
lret
xor
push
mov
or
in
mov
push
mov
popf
sbb
lret
cmp
push
mov
add
inc
mov
push
mov
xchg
adc
push
push
mov
push
mov
icebp
jno
lret
lret
dec
test
push
mov
cltd
sbb
pop
push
mov
push
mov
lret
lret
inc
cmpsb
es
lret
xchg
push
push
push
mov
push
mov
divb
lret
lret
dec
scas
cs
mov
push
mov
sahf
push
ficomps
mov
push
mov
lret
lret
inc
mov
push
mov
xchg
adc
push
push
mov
push
mov
bnd
lret
lret
dec
stos
sub
mov
push
mov
lcall
push
mov
xchg
xchg
adc
aam
push
mov
push
push
mov
xor
mov
push
mov
hlt
je
mov
push
mov
int3
int3
lret
lret
lods
lods
sub
mov
push
mov
in
insb
insb
pushf
push
mov
push
pushf
sbb
lret
lret
mov
lret
cld
cld
jl
adcb
addb
rol
push
mov
inc
inc
mov
lret
loopne
pusha
pusha
nop
push
mov
push
nop
adc
rcl
lret
lret
mov
xor
mov
push
mov
lock
mov
push
mov
or
enter
lret
test
sub
mov
push
mov
call
mov
push
cwtl
sbb
fcomp
lret
lret
mov
lret
clc
clc
js
out
sbb
test
out
sbb
iret
scas
sbb
lahf
fistpll
and
ret
mov
insb
sbb
movb
out
daa
out
sbb
mov
cld
push
rolb
and
xchg
mov
sbb
xchg
mov
xchg
sbb
lcall
mov
aam
addl
adc
lea
mov
adc
and
orl
iret
sbbl
pushf
das
jecxz
jecxz
lcall
pop
cmpsb
mov
xor
xchg
xchg
xchg
xchg
dec
pop
mov
xchg
xchg
les
mov
mov
scas
fnstsw
xor
adc
sub
lea
mov
lret
cmpsl
scas
mov
push
mov
push
xlat
out
pop
daa
mov
addr16
cld
push
in
fsubrl
push
int3
mov
jl
test
pop
test
xor
pop
mov
push
repz
jecxz
pushf
scas
add
imull
stos
cmpsl
push
mov
in
loope
mov
hlt
xchg
mov
test
out
in
jle
ljmp
scas
cmpsb
hlt
repz
faddl
outsl
and
dec
enter
jmp
fstpl
les
rcl
aam
xlat
into
fnsave
xchg
aad
adc
addl
lods
dec
xchg
and
jns
mov
mov
rcrl
lods
push
sahf
add
mov
test
jo
mov
nop
insl
js
cs
fisubrs
xchg
adc
cmp
lret
mov
push
cld
ror
std
xor
adc
outsb
or
push
out
test
mov
push
mov
fcom
pop
sub
notl
sub
mov
in
xorl
loop
mov
loop
loope
mov
adc
mov
test
mov
mov
jecxz
call
pop
ljmp
out
or
imul
mov
dec
lods
mov
insb
pushf
cmpsl
xor
xor
mov
mov
jnp
xchg
jno
sub
movsl
mov
mov
aas
dec
dec
mov
mov
pop
ds
cmpsl
mov
lods
push
push
clc
lock
mov
adc
test
shrb
cld
lcall
xchg
xchg
test
or
popa
jns
pusha
push
sbb
iret
cwtl
addl
jmp
loop
out
cmp
cwtl
pop
mov
pop
mov
or
rclb
mov
cli
mov
dec
adc
loop
aaa
imul
daa
pop
cmpsl
daa
aaa
jae
sub
adc
movsb
jns
ljmp
lods
mov
and
adc
sbb
enter
jo
aaa
test
mov
xchg
xchg
pop
sub
test
jecxz
mov
test
xchg
cmpsl
iret
xchg
add
xchg
sahf
add
out
cmpsl
xchg
movsl
ds
out
xchg
sbb
xchg
mov
push
call
or
test
stos
pushf
push
push
mov
xchg
sub
js
int
cmpsb
movsl
movsb
mov
scas
lods
lods
stos
stos
test
mov
js
js
mov
mov
mov
mov
ror
int
lret
lret
xlat
aad
sarl
xchg
lret
fstp
fcmovnu
out
in
jecxz
loope
push
mov
in
in
jmp
push
div
repz
lock
jl
jg
icebp
cld
sti
cli
stc
sbb
into
lret
dec
js
jne
rcl
into
les
ret
aad
les
jnp
ja
ret
enter
rol
dec
mov
sub
pop
andb
xor
jmp
mov
mov
aaa
popa
ss
nop
xchg
or
mov
insb
sbb
fildl
mov
push
add
mov
int
pushf
fiaddl
mov
cmc
cmpsl
jae
in
popf
xorb
mov
push
lea
test
xchg
cmpsl
aad
push
lods
mov
ret
sbb
arpl
cmpsl
call
or
das
add
xchg
scas
xchg
leave
repz
out
lock
push
push
in
or
out
ret
neg
jl
mov
mov
fsubl
cmpsl
rcrl
push
jmp
jmp
ret
pop
sub
repnz
aas
bnd
cwtl
enter
lea
std
cmpsl
int3
ljmp
mov
aaa
add
adc
cmpsl
pop
hlt
shlb
inc
lea
cltd
pop
rolb
pop
add
loop
lea
lea
inc
pop
icebp
lods
pop
and
enter
dec
test
popf
jge
cld
push
lcall
push
xchg
ss
repnz
xor
sbb
cmpsb
mov
pop
pop
std
test
mov
jo
std
dec
cmpsb
pop
icebp
addl
test
sti
sub
mov
pop
scas
mov
cmp
mov
xlat
orb
out
out
add
cmp
cmpsb
mov
xchg
pop
test
jmp
scas
cmc
scas
rcll
shrb
insb
jl
cmp
pop
imul
loop
or
xchg
xchg
ret
mov
push
xor
xlat
movb
rol
hlt
popf
dec
xlat
lea
mov
repnz
mov
cmpsl
int3
cltd
adc
pop
xchg
lret
mov
shlb
test
nop
jno
cmp
jl
mov
adc
mov
mov
add
mov
nop
jne
inc
and
into
jmp
icebp
adc
enter
icebp
out
div
pop
pop
ret
out
jg
andl
ljmp
push
push
jnp
shll
mov
mov
xchg
mov
or
in
xchg
out
xchg
xchg
mull
loop
ret
adc
xchg
dec
and
dec
aad
cwtl
mov
out
mov
mov
mov
out
jecxz
pushf
pop
rep
pop
in
xor
enter
adc
pop
lds
mov
pop
cmpsl
xchg
pop
fucomi
cld
sub
loope
pop
loope
mov
ljmp
js
sub
hlt
sub
pop
lods
gs
sub
es
testl
cmp
xchg
stos
xchg
cmp
filds
inc
lock
xchg
scas
or
push
adc
mov
add
and
xchg
adc
cmp
or
in
cmp
fucomp
cmpsl
jmp
div
in
test
sub
sub
jge
hlt
movsl
imul
add
lds
cld
sbb
inc
test
aaa
call
inc
and
xor
mov
divl
mov
in
roll
mov
push
ret
popa
lea
push
adc
mov
lar
cltd
add
cmp
test
test
repz
fs
and
sub
or
jmp
int3
sbb
xchg
pop
fdivrp
xchg
pop
fs
mull
dec
pop
mov
cmpsl
pop
imul
ror
enter
mov
aam
leave
rorb
xchg
xchg
sbbb
mov
mov
mov
mov
cmpsl
call
add
mov
ja
je
out
icebp
push
jo
iret
mov
xchg
ja
xchg
test
xlat
hlt
mov
push
pop
inc
xor
mov
cmp
mov
sahf
mov
daa
xor
mov
test
movsb
test
in
lea
movsl
movsb
or
pusha
sbb
mov
mov
or
fcoml
out
mov
fdivs
enter
mov
inc
or
mov
jle
aaa
dec
xchg
cmp
inc
push
lods
mov
filds
cmp
mov
jo
push
inc
push
xlat
jmp
fldcw
shl
adc
push
mov
inc
popa
popf
ljmp
xchg
xchg
test
sbb
add
addr16
push
test
push
cmc
call
hlt
aas
lahf
dec
cld
push
ficoml
or
addl
repnz
lock
test
cltd
mov
inc
xchg
xor
dec
lcall
lret
icebp
and
xchg
sub
mov
movsl
addl
xlat
les
in
jne
cmpsb
int3
in
push
bound
sbb
pop
mov
test
into
push
cmc
mov
lods
int
sbb
fcmovb
call
dec
jno
pop
test
adc
cli
dec
cmpsl
lret
incb
xor
mov
test
ret
fisubrs
lea
mov
xor
enter
inc
xchg
and
xchg
add
lods
xchg
movsb
inc
ffreep
int
push
daa
sarb
push
pop
lret
add
in
jp
loop
stos
mov
loopne
rcl
int3
cld
push
mov
les
test
movsb
fs
enter
mov
mov
xchg
hlt
xchg
sarb
sti
mov
repnz
mov
xchg
aam
add
sub
push
cwtl
loopne
mov
mov
mov
pop
adc
xlat
int
jae
sbbb
fwait
arpl
add
mov
jle
mov
pop
pop
add
movb
pop
lods
mov
pop
imul
movsb
mov
arpl
mov
pop
aam
ret
rol
aaa
cwtl
mov
stos
mov
ret
pop
cltd
push
stos
or
xor
jp
lret
lret
pop
lods
shlb
out
lds
xor
ret
jle
cmp
lods
in
mov
sub
ret
rcl
mov
mov
shll
or
aam
lods
mov
stos
add
dec
pop
mov
shl
leave
mov
mov
roll
lods
rcl
iret
hlt
mov
ret
pop
int
fwait
lret
aad
lods
adc
aaa
ror
lret
rcr
arpl
cmpsl
dec
lahf
mov
adc
fsubrs
sbb
arpl
xchg
loop
sbb
clc
mov
cmpsl
lods
mov
rorl
iret
hlt
mov
loop
pop
pop
jnp
lods
scas
int
fwait
iret
mov
aad
mov
aam
aad
mov
dec
adc
mov
shrl
shlb
pusha
lret
pop
iret
lret
mov
push
ficoms
aad
mov
in
inc
xlat
sub
out
push
rcl
les
out
jl
fsub
mov
test
mov
push
xlat
repnz
xor
out
in
lcall
in
inc
cmp
push
mov
pop
push
repnz
push
cld
pop
inc
movsb
pop
repz
loope
nop
hlt
mov
rolb
scas
mov
repnz
fnsave
in
loopne
shll
aam
repz
loopne
mov
pop
dec
rolb
and
cwtl
mov
or
xlat
xchg
out
jns
aam
xchg
test
mov
lods
adc
mov
mov
pop
xchg
rolb
and
out
mov
xchg
int3
cmp
pop
dec
push
pusha
mov
nop
into
ja
cmp
stos
sbb
out
jno
cld
fmuls
jmp
mov
xor
mov
push
fnstsw
in
push
sbb
mov
mov
outsb
xor
xchg
lcall
or
subb
aad
mov
out
mov
ffree
push
inc
cmp
jnp
cmp
lret
ret
aaa
iret
int3
shlb
daa
in
inc
adcl
test
je
into
xor
ror
jecxz
mov
int3
mov
aad
mov
pop
out
imul
xchg
lahf
orb
mov
test
mov
mov
popfw
mov
pop
mov
adc
and
jmp
adc
inc
popf
shl
out
pushf
movsb
cmpsl
test
add
int3
fwait
jmp
push
stos
add
repz
mov
lock
push
or
cmc
pop
pop
icebp
xchg
mov
xchg
loopne
in
es
in
xor
out
in
aaa
nop
in
loopne
inc
aaa
out
cmpsb
gs
js
xchg
add
andb
stos
add
outsl
mov
push
leave
lret
lds
decb
addb
iret
inc
into
aaa
sbb
nop
aas
iret
aam
pop
mov
call
out
rol
fistps
jmp
fdivrs
sbb
into
adc
jle
imul
fisttpll
adc
aam
shll
ror
push
cmp
rolb
adc
outsb
sub
ror
ret
stos
pop
push
loopne
mov
andb
mov
gs
lock
fs
fmul
mov
rcll
enter
mov
pop
xlat
rol
sti
dec
xor
adc
jmp
fcmovne
mov
enter
pop
sbb
ret
shlb
add
ficomps
bound
dec
iret
cmp
ficomps
lret
pop
into
pmaxub
faddp
repz
aad
ficomps
xlat
rol
fisubrs
rcrl
sbbb
outsb
mov
dec
push
push
ljmp
hlt
out
in
and
pushf
pop
xchg
call
mov
dec
mov
pop
jmp
dec
dec
cmpsl
xchg
lock
stos
cmpsl
aaa
xor
mov
mov
sub
mov
int
mov
or
shl
add
xlat
int3
xor
add
mov
mov
lret
jecxz
cmc
pushf
loop
orl
adc
out
mov
movsb
in
icebp
movsl
mov
pop
pop
inc
out
and
sub
inc
into
xor
sub
adcb
mov
hlt
in
xchg
mov
in
pop
mov
cmpsb
sti
mov
data16
sbb
mov
enter
xor
xor
mov
addb
out
out
loope
fcoml
rclb
mov
imul
stos
add
in
or
inc
adc
pushf
in
aaa
test
rorb
cltd
mov
pop
push
sub
mov
out
in
adc
xchg
jmp
fists
pushf
orl
jecxz
pop
adc
push
repz
movsl
pop
xchg
stos
out
or
xchg
sub
loope
fwait
lahf
icebp
addr16
jl
fnstenv
xchg
addb
xchg
daa
out
mov
sbb
xchg
cli
movl
lods
movb
scas
sbb
mov
repz
repz
fcoml
and
addr16
out
cmp
pop
stc
pushf
lret
out
cwtl
xlat
call
pop
notl
fsubr
pop
loop
call
mov
jb
pop
xorl
xor
inc
daa
andl
add
mov
mov
mov
andl
xchg
sbb
lods
dec
vmaxpd
lcall
test
shr
xor
mov
leave
fstps
dec
mov
xchg
aam
imul
test
mov
int3
test
mov
sbb
fists
xchg
lcall
cmpsb
lret
lods
mov
add
xor
pop
sti
test
xchg
pop
imul
nop
pop
xchg
cmc
out
mov
test
nop
cmc
mov
and
cmp
aaa
mov
push
dec
rclb
int3
mov
rorb
adc
cmpb
mov
xlat
jnp
push
fwait
pop
mov
fwait
outsl
sti
rolb
movsb
fwait
daa
cmpsl
push
int3
cmpsl
mov
cld
test
shlb
test
outsb
mov
test
int3
jae
mov
or
sahf
iret
add
neg
cmpsl
repz
movsl
addl
js
push
lds
adc
adcb
imul
insl
jo
xchg
mov
mov
test
pop
nop
fbstp
insl
mov
fcomi
les
xchg
pop
adc
lret
push
or
test
or
push
mov
test
in
test
lret
lret
dec
pop
push
sbb
xchg
mov
sbb
cmp
push
mov
xor
shr
and
mov
adc
ljmp
push
sub
push
push
push
stos
stos
int
loope
push
mov
push
or
and
adc
imul
and
sbb
pop
cmc
divl
sub
mov
fidivs
push
stos
sbb
inc
push
xor
lret
lret
testb
mov
push
mov
inc
push
pusha
js
sbb
movsb
int3
hlt
and
and
repz
lret
cmp
and
sbb
pop
sahf
icebp
mov
push
stos
lods
adc
dec
push
xchg
mov
incl
pop
inc
cmpsl
add
xor
sbb
aas
mov
mov
dec
adcl
cmpsb
test
pusha
mov
test
call
cmp
pop
lock
orb
out
or
lret
xor
jle
enter
pop
mov
pop
aaa
insb
or
out
push
hlt
xchg
dec
addl
imul
mov
call
cmp
pop
mov
movsb
mov
les
push
push
clc
xorb
xchg
push
fisttpll
cmp
xor
cmp
cld
push
sahf
xchg
sbb
push
jmp
movsb
jmp
mov
cltd
add
mov
sub
mov
rolb
jecxz
movsb
lds
mov
test
mov
jecxz
arpl
js
xchg
cmc
dec
cmpsb
fmull
ja
ds
daa
ja
dec
cmpsl
inc
mov
mov
add
test
jae
adc
stos
in
test
faddl
and
jne
lret
pop
test
out
mov
xchg
xor
mov
push
cmp
mov
enter
jne
jae
xchg
xor
mov
adc
jne
cld
movsb
leave
xchg
mov
mov
imul
rorl
xchg
jne
or
or
adc
add
cmc
std
xchg
inc
xor
inc
fildl
imul
movl
xchg
dec
xor
push
cmpsl
and
pop
dec
xor
mov
das
xchg
jne
cmp
inc
test
mov
jne
mov
sbb
adcb
test
mov
dec
mov
lds
sti
add
in
lea
cmpsb
arpl
ljmp
ret
sbb
sbb
pushf
imul
aas
xchg
addr16
decb
fldenv
jmp
movsb
mov
movl
sahf
pop
cmpsb
jecxz
dec
daa
out
mov
pusha
cld
mov
sub
fsubs
inc
xchg
jae
sbb
xchg
xchg
sub
sbb
mov
or
fnstenv
mov
inc
shll
or
cld
fxtract
xchg
mov
jo
pushf
xor
cmpsl
hlt
std
orb
xlat
pushf
mov
sbbb
mov
test
xor
enter
adc
adc
jo
jo
or
cmp
jg
jmp
sbb
arpl
jg
jg
jg
add
jecxz
push
jg
js
xchg
mov
mull
fisttpl
jmp
jg
cmpsl
test
jg
call
mov
jne
movsb
jle
jle
xchg
pop
sbb
test
sbbb
scas
mov
mov
sbb
aaa
dec
mov
xor
push
cmpl
testb
or
add
inc
cmpsb
jge
pop
jge
xchg
arpl
sbb
dec
pop
jmp
movsb
xor
pop
mov
mov
jnp
pusha
mov
out
test
enter
stos
cmpb
leave
sbb
loopne
jle
nop
dec
jl
out
lods
add
arpl
or
xchg
pop
adc
arpl
xchg
test
sahf
pop
movb
inc
imul
pop
imul
inc
dec
fdivrs
xchg
nop
adc
sbb
orb
sbbl
inc
mov
int3
and
test
adc
and
jnp
mov
xor
int3
jnp
jne
and
outsl
mov
sarb
jp
xchg
mov
adc
mov
add
pop
xchg
out
adc
xor
fstl
jp
xor
pop
aaa
movsb
call
dec
arpl
pusha
out
inc
cmpsb
pop
mov
daa
and
pop
adc
sbb
dec
flds
mov
push
jns
or
popl
jns
and
inc
fnstenv
dec
add
cmpsb
test
sub
adc
pop
xor
subb
xorl
mov
mov
mov
sahf
mov
loop
push
dec
mov
js
arpl
enter
sahf
pop
xchg
pop
mov
out
lods
fmulp
mov
lods
cld
or
inc
addl
pop
dec
xor
cmpl
out
pop
pop
ret
pop
ljmp
pop
into
sbb
xchg
nop
out
pop
fadds
adc
aaa
cmpsb
or
xchg
mov
movsb
inc
in
sahf
pop
pop
je
mov
test
ret
mov
jle
adc
pop
or
jecxz
cmpl
test
movl
mov
cmpsb
stos
mov
cmc
jne
test
rolb
mov
mov
cli
xchg
lahf
mov
cwtl
je
lds
test
insb
test
mov
mov
lock
test
cmp
dec
lock
dec
dec
lahf
inc
jo
pop
test
sub
jg
test
xchg
test
mov
jle
cmp
cmpl
pusha
jecxz
jl
dec
lods
in
mov
xorl
imul
addl
test
shlb
jnp
subb
lahf
cmpb
add
lret
test
pop
mov
mov
mov
pop
int3
or
adc
subl
sub
orb
mov
arpl
pop
adc
imul
arpl
call
xchg
xorl
sti
enter
mov
cmp
add
stos
add
jmp
xchg
call
andb
sbb
mov
dec
dec
mov
adc
sbbb
xacquire
jecxz
movhps
and
cmpb
loop
icebp
fisubs
enter
dec
imul
cmpsb
test
push
xchg
xchg
iret
cmp
adc
dec
mov
je
mov
dec
loope
mov
lods
xor
arpl
xchg
aad
test
xor
push
loope
mov
loope
cmpb
arpl
test
sub
lock
cmpsb
add
mov
xlat
or
mov
adc
lods
push
and
jecxz
shr
je
push
in
mov
xchg
cmp
test
mov
movsl
rorb
add
imul
xor
add
adcb
mov
pop
shlb
pop
cmpsb
jecxz
jle
adc
test
sub
mov
xchg
adc
scas
test
popf
jecxz
pop
les
into
jmp
cld
dec
test
lods
loop
repnz
xchg
cmp
leave
fidivrs
cld
test
sbb
repnz
xchg
mov
xchg
stos
xchg
dec
and
mov
pop
test
lahf
fwait
xlat
xchg
test
lea
lret
sbb
dec
mov
jmp
subl
xorl
adc
add
push
lods
xchg
mov
push
sub
and
sbb
dec
pop
or
je
mov
adc
push
ret
jno
imul
nop
and
mov
dec
mov
js
out
rol
repz
hlt
adc
ror
mov
xor
inc
inc
nop
and
mov
push
mov
jl
out
in
and
lcall
cwtl
pop
cmpsl
push
sbb
shll
movb
stos
mov
add
ret
les
rol
les
int3
xor
mov
std
mov
lret
rorb
call
out
popa
sti
test
out
sbb
daa
ud0
xchg
xor
add
call
push
test
mov
fildl
loopne
das
add
and
cltd
hlt
xor
xchg
lods
dec
je
push
loop
clc
iret
cmp
mov
hlt
int
imul
iret
repz
inc
xor
pushf
pop
stos
out
push
inc
mov
add
aaa
xchg
loopne
sarb
clc
jmp
fcoms
mov
lret
call
xor
cltd
jo
movsl
gs
call
loopne
repz
cmpsl
mov
lods
in
addr16
inc
ret
jmp
stc
cmpsl
xlat
test
out
loopne
stos
movsl
cmp
in
rorl
jmp
mov
xchg
adc
jns
or
cmpsl
aad
ror
aam
cmp
rol
ret
test
ffreep
adc
and
iret
mov
js
dec
imul
fldl
aas
xlat
cmp
xchg
pop
push
imul
inc
xchg
push
mov
xchg
lahf
mov
add
push
repz
dec
out
mov
mov
orb
xchg
out
sti
nop
cmpsb
mov
add
mov
mov
mov
mov
adc
fidivs
jmp
ljmp
push
fwait
cmc
inc
test
mov
out
xor
addb
mov
or
scas
sbb
add
es
and
sbb
push
inc
pop
mov
lahf
or
in
or
outsb
adcl
xchg
scas
lds
xchg
es
aaa
ds
out
inc
push
jb
inc
mov
roll
mov
mov
cwtl
test
movsb
jne
cwtl
push
aaa
push
aaa
push
les
mov
hlt
mov
cld
rorl
neg
pop
mov
lahf
xchg
add
dec
jg
mov
or
out
mov
rcrb
sahf
ds
mov
xchg
inc
xchg
rcr
int3
pop
mov
xchg
lock
mov
pop
dec
jecxz
rorl
movsb
decl
and
pop
daa
call
add
arpl
sbb
test
stc
pop
jnp
xchg
cmp
das
inc
and
and
aaa
dec
mov
jns
xor
xor
dec
and
bound
outsl
and
addb
pop
fcomp
pop
in
pop
mov
push
pop
pop
addr16
pop
inc
imul
sti
add
outsl
pop
mov
push
mov
push
inc
das
pop
sti
out
popa
push
mov
lret
mov
sbb
inc
aaa
and
add
sbb
mov
mov
lods
dec
cmp
sbb
adc
jmp
movsb
pushf
jmp
and
mov
jb
lret
jg
dec
hlt
adc
inc
mov
adc
sahf
pop
xchg
sahf
pop
xchg
adc
adc
jmp
cwtl
xor
out
popl
adc
xchg
lea
xchg
lret
xchg
adc
or
xchg
dec
lahf
mov
sahf
jmp
mov
push
jnp
adc
enter
mov
fwait
mov
std
push
jnp
jg
outsl
xchg
test
test
and
mov
push
mov
push
imul
inc
ficoml
cmp
xor
sub
mov
daa
sbb
adc
lret
psubq
jmp
lret
jecxz
fcmovnbe
iret
push
mov
push
mov
mov
xorb
cld
pop
testl
ret
mov
jo
test
test
adc
jno
cmp
mov
dec
cli
cwtl
test
push
pusha
outsb
lahf
and
mov
sbb
adc
xor
xchg
xchg
jae
insl
mov
xor
push
repz
test
lret
inc
daa
jmp
daa
test
mov
into
sbb
jge
sbb
xlat
inc
mov
pop
xchg
js
adc
cmpsl
cmp
sahf
cmpl
pushf
or
pushf
js
js
inc
push
leave
cmpsl
ja
xor
lods
das
sub
out
push
fidivrl
bound
add
notb
push
adc
js
mov
jle
daa
ret
push
xchg
or
add
push
and
into
cwtl
mov
call
pop
dec
sarb
in
shlb
addr16
lds
pop
or
js
js
sbb
sub
icebp
fs
jne
test
push
mov
sub
inc
inc
jge
insb
js
js
and
jo
data16
adc
loop
inc
push
mov
sub
sahf
fs
mov
nop
mov
push
add
icebp
js
js
dec
iret
lret
arpl
adc
mov
aam
and
mov
sbb
ja
js
js
cmpsl
inc
shll
or
fisttpll
mov
loopne
adc
mov
pop
pop
jmp
js
sbb
cmpsl
or
mov
xchg
js
idivb
cmpl
jecxz
pop
enter
xchg
add
mov
sahf
fistpll
js
nop
xor
mov
rcrb
and
out
jmp
cmpb
add
mov
js
std
bound
cmp
mov
out
xchg
lock
sub
mov
lret
adc
popa
dec
mov
js
adc
ret
dec
xchg
cmp
cmp
cltd
ss
js
js
mov
cmp
std
mov
stc
ss
xchg
cmp
mov
cmpl
js
xchg
jl
movsb
mov
mov
mov
cmp
sti
rcll
mov
js
orl
push
push
mov
std
in
les
push
jl
js
std
add
push
mov
pushf
outsl
add
test
js
js
xor
repnz
test
push
movsb
pop
mov
into
pop
fnstsw
rcrb
add
gs
js
out
xor
ret
fidivs
xchg
stos
mov
mov
aam
dec
in
mov
inc
pop
inc
cli
jl
js
js
inc
cltd
sbb
fst
push
mov
lahf
leave
int3
loop
jp
or
adcl
push
js
sbb
dec
sbbl
xlat
in
test
arpl
test
mov
xchg
ret
xchg
pop
or
lahf
mov
ret
xchg
xchg
scas
pop
pop
pop
jecxz
cmc
xchg
sbbb
call
xchg
mov
xchg
mov
ss
mov
test
mov
cwtl
mov
cmpsb
ljmp
call
jmp
xor
hlt
xchg
sbb
in
lcall
mov
loop
cwtl
mov
hlt
xor
hlt
in
test
imul
jmp
nop
hlt
inc
add
mov
pop
pop
loopne
test
jecxz
xchg
repz
cmp
repz
test
andb
les
lock
or
xchg
inc
or
pop
sub
sbb
xor
movsb
testl
mov
mov
lock
push
xor
inc
fs
xchg
sbb
sub
loop
iret
xor
push
jmp
push
loopne
jecxz
in
pop
out
hlt
xor
sub
rorb
pusha
loop
pop
push
push
cmp
mov
xchg
dec
in
push
xchg
cmp
or
jecxz
mov
pop
loopne
mov
xorb
aaa
mov
mov
fs
out
fwait
add
inc
inc
cld
push
aam
repz
out
icebp
mov
add
inc
nop
incl
jmp
in
repz
iret
aam
xchg
out
sub
ljmp
icebp
repnz
sub
xor
imul
ljmp
std
call
hlt
pop
lods
insb
xchg
cmpsb
push
sbb
loop
out
cmc
cwtl
sub
push
jb
xor
jecxz
cmpsb
mov
push
repnz
popf
lds
mov
scas
repnz
xchg
dec
sarl
jo
xchg
in
lds
loopne
in
aaa
add
fisubrs
jbe
push
inc
add
ret
out
cmp
in
lods
and
out
jmp
push
cmp
mov
sub
in
jecxz
xor
jmp
jecxz
mov
jo
insb
test
testl
scas
mov
mov
jae
mov
xor
ror
aaa
test
nop
negb
and
cmp
out
cmpsl
add
imul
iret
sub
out
pushf
out
outsb
call
mov
jmp
in
dec
movsl
jecxz
scas
ret
and
cmp
addr16
fsub
dec
cmpsb
mov
cmpsl
test
fisttps
mov
roll
ljmp
xchg
xchg
mov
lods
cmp
add
dec
pushf
lds
add
pop
xorb
imul
and
xchg
inc
mov
mov
aam
repnz
dec
leave
adc
hlt
mulb
mov
cmp
and
leave
lods
push
cwtl
sahf
fs
test
enter
pop
mov
lock
jb
ret
xchg
pushf
subb
add
add
cmc
and
jbe
cmp
push
out
push
mov
xor
ss
int3
repz
loope
mov
cmpsb
and
cli
fcmovu
cmc
gs
aad
js
movsb
insb
in
lds
mov
mov
pop
out
loop
hlt
pusha
js
sbb
into
sub
bnd
rclb
fs
mov
imul
sahf
pop
loopne
jmp
mov
or
mov
or
jmp
in
add
call
push
adc
cmp
ss
mov
nop
pushf
in
sahf
stos
into
or
lahf
sbb
les
loop
out
aam
out
test
push
mov
mov
mov
add
push
jmp
push
mov
pop
mov
negl
push
mov
out
add
and
dec
imull
in
add
test
mov
pushf
fs
fldl2e
in
loope
jmp
pop
out
xchg
jecxz
lcall
jmp
aaa
iret
jp
add
mov
pop
test
sbb
loope
stos
outsb
inc
iret
fists
js
xchg
mov
imul
mov
call
out
sarl
push
out
in
mov
cli
loopne
scas
jecxz
mov
xor
push
jmp
pop
movsl
inc
addb
xchg
ljmp
mov
ret
test
push
inc
out
loopne
js
mov
insb
hlt
adc
xor
or
stos
cmp
repz
enter
inc
or
and
out
loop
cmc
pop
dec
pop
lret
mov
jecxz
shrb
ret
test
push
dec
push
mov
xchg
add
jecxz
jecxz
jmp
enter
add
sub
into
imul
stos
push
stos
add
adc
mov
cmp
ljmp
in
add
jl
ds
adc
dec
mov
lock
or
iret
fstpl
repnz
cmp
fldenv
lock
push
xchg
in
insb
mov
mov
hlt
mov
xchg
xor
pop
rol
mov
test
in
add
int3
mov
jmp
xchg
xor
push
add
add
hlt
sar
mov
mov
adc
jb
mov
push
pause
add
ss
mov
cli
repnz
dec
in
push
in
cltd
ja
cmp
fidivrl
fwait
cmpsl
mov
clc
mov
lret
jl
inc
das
outsb
ficoms
and
dec
xchg
fwait
sbb
fisubl
or
test
cmp
and
sar
and
inc
xchg
jbe
push
cwtl
loope
mov
les
aaa
fdivrl
mov
sub
pop
pop
push
xor
cs
xchg
xchg
xchg
inc
push
arpl
out
mov
fwait
out
jo
sbb
mov
pop
test
mov
mov
lds
push
mov
pop
cli
subl
negl
out
movsb
mov
sahf
movsb
jb
out
cmp
sub
lock
fsubrl
aam
in
mov
lds
inc
push
lret
insb
mov
push
lock
aaa
int
in
rclb
out
inc
hlt
xchg
dec
inc
sbb
and
loopne
push
adc
mov
sbb
xchg
pop
cld
scas
les
inc
push
cmc
push
jle
test
hlt
insb
sahf
scas
push
mov
mov
test
fadds
mov
cmp
mulb
push
xchg
sahf
out
dec
sbb
xorb
push
xchg
repz
mov
push
mov
sahf
cwtl
lcall
mov
inc
pop
lods
push
decb
xchg
mov
push
into
cli
subb
loopne
push
pop
or
and
xchg
mov
cmovb
call
sub
sbb
sbb
in
fsubl
fsubp
cltd
xchg
pop
cmpsb
movsb
cmp
out
jecxz
or
stos
mov
in
mov
and
adcb
aaa
inc
mov
mov
push
push
mov
mov
out
xor
inc
ljmp
ljmp
add
out
mov
repnz
mov
jecxz,pt
cmp
mov
adc
lahf
and
sub
add
sti
mov
push
push
call
dec
sbb
loope
adc
mov
mov
ljmp
mov
test
hlt
mov
sbb
add
xchg
add
xor
mov
into
nop
iret
mov
stos
cmp
lds
or
mov
test
stos
sub
push
out
ss
mov
in
aaa
xor
mov
pop
cmp
add
icebp
and
cmpsl
aam
test
in
orl
clc
out
or
mulb
rcrb
jl
push
movb
cmp
mov
scas
add
lea
adc
mov
out
inc
inc
lock
mov
ds
dec
mov
dec
addr16
stos
and
orb
dec
lret
imul
cmpsl
fisubl
addl
xchg
inc
popa
sbbl
add
cmpsl
mov
mov
mov
mov
jae
je
xchg
lcall
or
mov
iret
mov
pop
sbbb
jle
xchg
mov
fmull
mov
sbb
mov
pop
mov
add
rclb
jo
movsb
sbb
and
negl
div
add
cs
sbbb
and
xchg
xlat
in
mov
call
mov
data16
rorb
pop
adc
out
shlb
adc
mov
jecxz
mov
pop
dec
pop
push
dec
mov
mov
mov
out
subb
cmc
mov
sarl
aaa
mov
lds
les
rorb
loope
mov
ljmp
ret
mov
jmpw
pop
mov
xchg
jmp
mov
fidivs
addr16
jo
stos
shlb
mov
mov
lret
sub
xchg
xchg
cmpsb
filds
mov
adc
mov
arpl
dec
xchg
push
in
xchg
inc
pushf
lock
pop
cmpsb
mov
into
inc
lods
sbb
adc
mov
stos
sahf
loop
test
or
cmpsl
cmpsl
adc
xchg
cmp
cmpsl
add
js
rolb
pop
lahf
push
adc
xchg
rorb
jp
fsubs
lods
insb
mov
aam
ret
mov
add
mov
fidivrl
pop
fadd
jle
xchg
xor
mov
xlat
out
repz
movsb
pop
sub
mov
dec
and
sarl
fcom
xor
pop
stos
ret
or
shl
inc
test
lcall
mov
sub
xchg
pusha
in
mov
push
in
jbe
cmpsl
out
lret
lcall
mov
mov
mov
push
int
loope
int3
stos
and
hlt
xchg
lods
inc
data16
xchg
add
and
xchg
sbb
popl
or
pusha
cmp
les
repnz
xor
inc
xchg
lcall
cmpsl
shlb
pop
ss
js
xchg
call
and
cmp
push
lret
test
and
cs
mov
cwtl
stos
loopne
or
mov
aam
lea
cmpsl
pop
xchg
mov
xchg
out
loope
aaa
sarb
pop
lea
ret
enter
xchg
ret
rcl
xchg
xlat
or
lcall
rcrl
roll
dec
add
cmp
pop
lret
shr
shr
pop
lds
xchg
mov
sub
out
xchg
mov
aad
fwait
xchg
jns
xchg
stos
mov
popf
pop
pop
adc
inc
loop
pop
mov
push
add
sub
cmc
jecxz
scas
pop
mov
xchg
loop
roll
mov
mov
rclb
xchg
aaa
add
mov
pop
hlt
dec
repnz
or
jge
ret
icebp
dec
xchg
repz
repnz
hlt
out
rclb
inc
lcall
out
mov
jge
push
pushf
ret
jmp
roll
mov
stc
in
loope
les
mov
mov
jecxz
inc
mov
mov
pop
test
push
pushl
out
out
aam
xchg
mov
mov
idiv
xchg
aaa
jmp
aad
sub
das
mov
xchg
icebp
test
fimuls
call
fdivl
jne
out
leave
dec
aas
ljmp
loope
shr
aaa
inc
test
loop
xchg
lret
xor
ss
ret
xor
mov
out
push
data16
movsl
sbbl
add
lods
fwait
nop
movsb
mov
les
mov
jno
jp
sub
pop
xor
popf
negl
mov
xorps
push
xchg
popf
dec
leave
jns
shl
mov
mov
mov
mov
or
loop
lods
lret
aaa
cmpsl
xchg
loope
xchg
in
or
xchg
mov
mov
mov
out
lock
and
jmp
dec
out
sbb
lds
popf
push
xchg
xchg
ret
loop
int3
les
icebp
sbb
dec
mov
push
test
ja
mov
mov
mov
adc
cs
fiadds
aaa
xchg
aam
div
out
call
out
into
jbe
ret
xor
rorb
lahf
mov
lret
test
mov
int3
daa
insb
adc
mov
jno
call
imull
lea
subl
frstor
and
enter
in
out
add
pop
pushf
aas
ds
xchg
loope
es
into
ret
xchg
push
sahf
add
mov
mov
into
hlt
rcll
jnp
push
mov
mov
icebp
xlat
push
nop
sub
sub
and
push
cmp
jno
xchg
mov
in
aam
and
xchg
out
adc
dec
mov
pop
jmp
push
and
insb
addl
mov
ret
rorb
add
in
add
xor
es
mov
hlt
gs
sahf
ljmp
stos
jno
int
cmp
or
ja
pushf
jmp
popa
xlat
xchg
in
fcmovne
inc
cmc
mov
in
lahf
aam
cmpsl
xchg
mov
je
movsl
xor
test
mov
loop
rcrl
inc
mov
cmpsb
adc
lret
fwait
icebp
fldpi
test
xor
mov
mov
mov
xchg
xchg
bound
addb
push
fbld
lahf
jecxz
cmp
inc
mov
pushf
loop
hlt
pop
push
loopne
dec
loopne
int3
loop
mov
inc
adc
lds
jmp
mov
inc
fwait
mov
movsl
loopne
xchg
popa
movsl
scas
mov
jno
xchg
lret
mov
jno
scas
mov
pushf
xor
add
or
mov
mov
push
loopne
stos
mov
fisttpll
xor
out
pushf
xchg
pop
dec
ret
aad
leave
fwait
adc
pop
mov
js
test
int3
rorb
sti
pop
add
pop
mov
mov
xor
and
xchg
test
mov
sarl
xlat
test
sub
cmpsl
dec
icebp
sub
push
and
test
inc
gs
cmc
jbe
inc
inc
push
out
sub
lcall
add
jno
and
icebp
jmp
pop
sub
dec
inc
pop
jmp
lds
repz
cmp
cmpsb
xchg
aaa
test
ljmp
mov
add
mov
mov
dec
sub
mov
pop
mov
aaa
out
hlt
fidivl
js
dec
ftst
incb
ficoml
inc
adc
mov
addb
js
stos
adc
loop
mov
mov
mov
mov
lahf
js
js
mov
adcb
stos
lods
mov
jmp
mov
rorl
subl
lcall
xor
xchg
mov
xchg
mov
mov
xchg
mov
nop
jge
js
xchg
ja
xchg
sbb
ja
js
ja
call
insl
adc
mov
ja
test
popf
mov
add
lahf
ja
xchg
xchg
ja
push
lds
xchg
stos
jl
jns
cmpsb
mov
mov
mov
adcb
xchg
call
mov
mov
test
int
test
test
sbbb
pop
int3
js
cwtl
sub
leave
ja
test
cwtl
popf
or
cmpsl
mov
out
std
popf
orb
nop
lret
mov
data16
stos
cltd
fwait
mov
mov
fnstcw
andb
mov
xchg
cltd
mov
js
pop
scas
clc
test
mov
addl
mov
xchg
stos
mov
pop
cmp
mov
lods
mov
mov
lahf
xchg
mov
ss
xor
xchg
mov
pop
cmp
xor
xchg
test
movsl
fstl
inc
gs
xor
jl
xor
cmp
nop
xchg
enter
xchg
dec
mov
test
jl
jp
ja
xchg
stos
mov
movb
xor
pop
js
mov
ja
xchg
or
mov
xchg
andb
mov
lock
xchg
xchg
mov
sub
mov
pop
mov
subb
data16
ret
push
test
popl
mov
cmp
mov
enter
xchg
movsb
movsb
orb
mov
jp
mov
mov
mov
addb
push
xchg
ret
movsl
mov
xchg
cmpsl
movsb
xchg
adcb
pushf
rcrb
aam
mov
popl
jmp
xchg
jl
js
sbbl
test
mov
mov
rorb
fsubrl
popl
mov
orb
decl
mov
fadds
mov
in
clc
fidivrl
jbe
xchg
cmpsl
fwait
mov
add
mov
lods
cmpsl
movsb
add
pop
jg
mov
adc
movsb
stos
xchg
xchg
pop
test
cmp
pop
xchg
mov
ret
xchg
aaa
and
int3
mov
xor
jbe
cltd
mov
mov
lcall
xor
stos
xorb
mov
xchg
mov
pop
call
pushf
addb
mov
cltd
loopne
sbb
ljmp
pop
lea
cmpsb
xor
pop
out
stos
rorb
orb
add
lea
cwtl
mov
xchg
and
pop
jns
in
loop
jecxz
mov
xchg
mov
mov
stos
ja
stos
cmp
sub
ja
test
adc
loope
in
aas
xorl
pop
filds
mov
ja
xchg
mov
std
ja
xchg
mov
fidivl
sti
lods
pushf
sbb
cmpsl
mov
or
pop
mov
inc
xchg
xor
mov
push
jns
xchg
mov
test
mov
cld
inc
inc
mov
ja
jo
adc
aam
and
fimuls
pop
xchg
xchg
sub
jno
fnsave
mov
fsubrs
movsl
xchg
pop
xchg
test
andl
lret
fldl
inc
ja
test
xor
xor
test
jle
fisubl
fcmovbe
mov
pushf
pop
xchg
xor
sarb
sub
cmpsb
test
mov
test
inc
movsl
fnsave
fwait
js
jmp
int3
xchg
lahf
mov
outsl
popf
xorb
das
in
lea
xchg
inc
push
xor
mov
mov
stos
xchg
fcompl
jno
cmpsb
mov
nop
pop
fwait
add
shll
cmpsb
mov
xchg
cmp
es
xorb
push
adcb
pop
pop
jg
dec
xchg
mov
mov
pop
mov
dec
jbe
adc
xchg
popf
popf
mov
loopne
mov
mov
mov
fwait
inc
fcmovnu
test
pop
clc
lods
push
mov
mov
mov
mov
mov
lcall
mov
cli
jo
lods
test
rcrb
jg
pop
mov
pop
mov
dec
mov
cs
sahf
xchg
jns
data16
aad
push
clc
iret
lret
xchg
xchg
ja
ljmp
xchg
addb
ja
rcr
xchg
mov
es
pop
test
xchg
jb
in
xor
cwtl
mov
xchg
subb
mov
xchg
stos
jns
xor
into
xchg
mov
mov
pop
pushf
mov
repz
mov
mov
xor
ja
gs
sbb
popf
adc
xor
lret
xchg
sbb
inc
nop
test
scas
mov
popf
nop
fnsave
stos
addl
xorb
pop
adcl
or
dec
pushf
add
cli
mov
adc
in
cmpsb
cmp
and
addr16
lahf
andb
cmp
out
cli
les
fisubrl
das
mov
cmp
mov
int
loope
inc
leave
dec
pop
pushf
adcb
test
ja
mov
mov
adc
mov
jge
pushl
xchg
test
daa
adc
arpl
pushf
icebp
inc
jnp
lret
mov
mov
mov
xor
stos
inc
movsb
mov
enter
sti
cltd
dec
and
pop
pop
andb
test
rcrl
sub
nop
out
push
xchg
mov
scas
xlat
scas
sar
imul
stos
pushf
mov
nop
hlt
mov
jmp
adc
lcall
shrl
movsb
mov
aad
shlb
sbb
lock
test
subl
popa
sahf
xchg
inc
mov
push
mov
cmpsl
lret
mov
hlt
cmp
bound
mov
ffree
popa
lods
push
aad
in
mov
xlat
jecxz
popa
repnz
lods
mov
popf
pushf
mov
sub
lahf
mov
or
test
xchg
aaa
inc
int3
add
xchg
adc
jnp
dec
lock
mov
pop
bound
add
es
gs
mov
xor
mov
fisttpll
icebp
mov
pushf
in
mov
incb
pop
adcb
mov
in
ret
ja
test
dec
sbb
stos
xor
mov
mov
mov
sub
std
mov
pop
addl
sbb
orl
jl
repz
scas
jecxz
ret
sahf
popa
loop
aas
jno
movb
xchg
call
mov
decl
xchg
stos
jns
icebp
icebp
aad
push
adc
clc
mov
ja
test
xchg
sub
data16
xchg
subb
scas
mov
cmp
test
cmp
movsb
lahf
adcb
ret
ja
mov
cltd
xchg
jp
lcall
mov
inc
in
loopne
xchg
cmpsb
mov
loop
lods
fdivrs
pop
int3
cmp
ret
adc
nop
xor
sbb
popf
test
lcall
test
shll
sub
rcrl
cmp
xchg
mov
xchg
popf
sahf
xchg
mov
lea
push
scas
test
aas
fdivr
test
mov
test
subl
xchg
cmpb
fimull
mov
fimuls
ljmp
sahf
xchg
loopne
rolb
or
stos
aad
mov
aaa
mov
cmp
in
popf
xor
rol
xchg
push
mov
fnstsw
pushf
outsb
stos
flds
mov
pop
cld
xor
or
mov
cmp
xchg
sarb
add
fwait
test
or
or
out
cmp
in
xor
xchg
mov
cli
ja
xchg
jmp
and
mov
les
das
fistps
pop
leave
cmpsl
cwtl
cltd
pushf
mov
sbb
popa
or
roll
lea
popf
fcoms
xchg
movsl
mov
mov
adc
hlt
imul
xchg
mov
out
lret
or
aad
scas
ror
cwtl
sahf
clc
ljmp
test
enter
pop
in
xor
addl
rcll
in
ljmp
inc
cmpsl
xchg
push
rorl
aad
xchg
xor
and
mov
push
out
mov
pop
mov
xchg
mov
lcall
push
movsl
cmp
add
cli
mov
jg
sbb
mov
fstpt
cli
push
mov
mov
mov
ja
test
jae
adc
push
mov
shl
push
xlat
loopne
jmp
lock
mov
movsl
mov
mov
stc
pop
fcoms
aam
mov
jge
sbb
lcall
dec
repnz
ja
test
push
lea
or
lcall
mov
mov
push
mov
jbe
cmp
repz
divb
xchg
out
and
mov
add
xchg
mov
xchg
test
ljmp
mov
test
cmp
xchg
xchg
popf
lods
xchg
lcall
in
lock
test
stos
xor
out
and
dec
xor
sbb
mov
mov
lods
pop
test
leave
lods
xchg
push
push
cltd
or
mov
sbb
andl
dec
push
subb
insl
outsl
jne
adcl
ret
mov
cmpsl
add
mov
stos
add
mov
pop
inc
cltd
add
gs
les
icebp
pushf
adc
popf
jg
test
jmp
cld
mov
mov
mov
xor
imul
mov
cmp
ds
dec
xchg
or
dec
mov
xchg
mov
mov
cmpsb
rsm
filds
test
cmp
arpl
ja
xchg
stos
push
xor
mov
push
lahf
xchg
lock
cs
dec
stos
push
inc
pop
ret
test
jo
pop
jmp
out
orl
mov
sarl
adc
les
test
cmp
xchg
xchg
sbbb
pop
xor
cmpsl
popf
mov
cmpsb
mov
xchg
andl
mov
int3
adc
lahf
aam
dec
in
rcl
xchg
xor
loope
sub
stos
in
fimull
repz
test
out
stos
sbb
pop
aas
lahf
shll
xor
loope
adc
mov
jno
jecxz
inc
sbb
scas
in
ret
subb
lcall
pop
xor
mov
into
mov
add
mov
ja
aaa
xchg
mov
and
push
fwait
sti
cmpsl
xchg
ljmp
fidivrs
mov
ja
xchg
sbb
jmp
out
decl
adc
pop
xchg
fmull
aaa
addl
pushf
daa
sbb
pop
lret
xchg
push
mov
test
xchg
sbb
mov
xor
pop
test
nop
sbb
jno
mov
pushf
pop
xchg
addb
fcmovnbe
idivl
fwait
xor
push
jne
push
test
ljmp
and
cmp
popf
inc
test
pop
repz
mov
aaa
xor
pop
testl
cmc
test
add
mov
aaa
test
in
test
mov
orb
pop
mov
aam
les
push
repz
hlt
cmc
in
sbb
andl
loop
loop
mov
jecxz
push
pop
lds
icebp
in
daa
test
pushf
clc
mov
xchg
xchg
xchg
push
adc
sbb
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
adc
add
xor
cmp
add
add
push
add
add
insb
add
add
jl
add
test
add
cwtl
add
add
mov
add
add
rolb
add
in
add
cld
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
dec
push
add
js
add
mov
add
cwtl
push
add
mov
push
add
faddl
add
call
push
add
add
add
xor
add
inc
pop
add
push
pop
add
push
pop
add
jl
add
mov
add
xchg
pop
add
pushf
pop
add
test
add
rolb
add
pop
add
rolb
add
fadds
adc
ss
push
mov
int3
push
addb
cmpsb
mov
imul
inc
sbb
add
fildl
mov
aam
cld
arpl
jae
add
xor
cltd
out
adc
leave
add
cs
in
and
adc
lret
dec
pop
jge
xor
mov
sub
and
dec
in
je
aam
add
fildl
mov
cld
test
adc
dec
jne
gs
or
xor
xorl
jne
and
adc
test
add
scas
jp
mov
subl
xchg
rcll
sti
xorl
cld
cld
iret
lcall
cmpsl
push
test
sub
mov
sub
add
imul
aaa
add
mov
add
and
mov
push
call
cmpsb
mov
clc
adc
add
aam
andl
fcoms
fildl
add
or
jnp
adc
cli
push
dec
imul
jb
mov
popf
shl
ret
stc
cmp
sub
sub
inc
repnz
xchg
and
push
add
jne
xor
addl
fsubs
fisttps
xchg
ss
cld
stc
popf
addl
cmpsl
les
in
ja
sub
or
adc
subl
aad
xchg
push
lock
pushf
jmp
xorl
inc
and
or
lret
loop
ja
jmp
pop
addb
in
orl
jl
fadd
orl
pop
mov
out
jmp
jmp
out
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
lret
jmp
aaa
sti
mov
inc
pop
xchg
pop
pop
ret
xchg
xor
mov
out
xor
filds
mov
aas
jecxz
imul
xchg
pop
pop
ret
xchg
jmp
xlat
fwait
pop
lret
add
xor
push
sbb
addl
repz
jmp
mov
jmp
stos
outsl
adc
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
jmp
pop
fistpl
mov
push
pop
fistpl
jmp
jmp
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
jmp
filds
fadds
add
jmp
arpl
jmp
jmp
mov
aaa
sti
mov
xor
mov
aaa
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
jmp
subl
jmp
sbb
addl
repz
aas
jecxz
imul
ljmp
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
out
or
jmp
mov
aaa
sti
mov
push
pop
fistpl
jmp
daa
jmp
jmp
cmp
mov
inc
or
repz
aas
jecxz
imul
xchg
pop
lret
jmp
out
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
lret
jmp
stos
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fcmovne
jmp
sub
xchg
push
sbb
or
cmpl
jmp
repnz
lret
mov
jmp
scas
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
jmp
jmp
dec
rdpmc
idivl
outsl
adc
lret
xor
mov
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
lret
lret
insl
add
add
das
xchg
outsl
adc
fwait
pop
add
mov
jmp
add
sti
mov
push
pop
lret
jae
sti
mov
push
pop
fistpl
lret
jmp
push
pop
lret
pop
lret
mov
cmp
mov
push
sbb
or
jmp
mov
das
pop
lret
mov
cmp
mov
push
sbb
or
jmp
mov
sub
lret
mov
cmp
mov
push
sbb
addl
repz
and
jmp
lret
mov
jmp
lret
mov
cmp
lret
fistpl
mov
inc
pop
lret
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
lret
addl
repz
aas
lret
sbb
lret
cmp
lret
idivl
dec
jae
sti
mov
push
pop
fistpl
mov
cmp
jmp
pop
fcmovne
jmp
lret
mov
sub
xchg
push
sbb
lret
cmp
lret
fistpl
mov
push
sbb
addl
repz
aas
jecxz
imul
jmp
or
lret
sub
xchg
inc
or
repz
aas
lret
sbb
lret
cmp
mov
inc
or
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
lret
imul
xchg
pop
pop
lret
jnp
jecxz
imul
mov
jmp
mov
aaa
sti
lret
xlat
fwait
pop
add
mov
aaa
sti
mov
push
pop
fcmovne
jmp
aaa
sti
lret
xlat
fwait
pop
jae
sti
mov
push
pop
fcmovne
jmp
aaa
sti
lret
xlat
fwait
pop
jae
sti
mov
push
pop
fistpl
jmp
daa
jmp
ret
jmp
mov
pop
add
mov
aaa
sti
lret
xlat
fwait
pop
lret
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
lret
mov
aaa
sti
mov
lret
mov
jmp
stos
outsl
lret
addr16
xorl
das
rcll
dec
rdpmc
idivl
outsl
adc
fwait
lret
idivl
pop
pop
xor
mov
repz
ret
xchg
jmp
cmpsl
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
lret
lret
xchg
xor
mov
outsl
adc
jmp
rdpmc
idivl
outsl
lret
dec
rdpmc
idivl
outsl
adc
fwait
pop
add
mov
lret
and
add
jecxz
jne
jmp
xchg
pop
pop
ret
xchg
xor
mov
pop
pop
ret
xchg
jmp
cmpsl
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
jmp
jg
mov
pop
add
mov
aaa
sti
mov
jmp
mov
lret
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
jmp
daa
lret
add
sti
mov
push
pop
fistpl
pusha
jmp
lret
lret
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
lret
addl
lret
sub
xchg
push
sbb
addl
repz
jmp
stos
outsl
adc
lret
add
add
sub
filds
mov
aas
jecxz
imul
xchg
pop
pop
lret
jnp
jecxz
imul
das
inc
or
repz
aas
jecxz
imul
lret
iret
repz
lret
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
jmp
daa
jmp
push
lret
dec
jae
sti
mov
push
pop
fcmovne
jmp
aaa
sti
mov
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
jmp
pop
fistpl
mov
push
pop
fistpl
jmp
daa
jmp
push
lret
inc
pop
lret
mov
cmp
mov
push
sbb
addl
repz
aas
lret
lret
mov
cmp
mov
push
sbb
addl
lret
sub
xchg
push
sbb
addl
jmp
addr16
xchg
push
sbb
lret
addb
jmp
addr16
xchg
push
sbb
or
mov
jmp
imul
xchg
pop
pop
lret
jnp
jecxz
imul
jmp
or
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
lret
lret
imul
xchg
pop
pop
ret
xchg
xor
lret
out
outsl
adc
jmp
rdpmc
idivl
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
jmp
lret
jg
out
outsl
adc
fwait
pop
add
mov
jmp
lret
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
jmp
out
pop
add
mov
lret
outsl
adc
fwait
pop
add
mov
lea
jmp
mov
mov
jmp
xchg
pop
pop
ret
xchg
xor
mov
lret
jmp
inc
pop
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
jecxz
jmp
jmp
push
sbb
addl
repz
lret
push
sbb
or
daa
jmp
push
sbb
addl
jmp
lret
lahf
inc
pop
lret
mov
cmp
mov
push
sbb
addl
jmp
addr16
xchg
lret
mov
cmp
mov
push
sbb
jmp
ja
jmp
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
lret
jmp
and
stos
outsl
adc
fwait
pop
add
mov
jmp
stos
outsl
adc
lret
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
lret
lret
and
stos
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
jmp
addl
repz
aas
jecxz
imul
xchg
pop
pop
lret
jnp
rcll
add
jmp
push
pop
fistpl
out
arpl
jmp
push
pop
fistpl
das
arpl
jmp
push
pop
fistpl
mov
cmp
mov
push
sbb
lret
lret
push
pop
fistpl
mov
cmp
mov
jmp
lret
mov
lret
push
pop
fistpl
mov
cmp
lret
lret
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
jmp
stos
outsl
adc
lret
xor
mov
outsl
adc
fwait
pop
lret
mov
das
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
jmp
lret
inc
or
repz
aas
jecxz
imul
lret
iret
repz
lret
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
jmp
lret
inc
or
repz
aas
jecxz
imul
xchg
pop
pop
ret
lret
aas
jecxz
imul
daa
inc
or
repz
aas
jecxz
imul
lret
lret
jmp
fistpl
mov
cmp
mov
push
sbb
lret
cmp
mov
jmp
lret
mov
cmp
mov
push
lret
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fcmovne
ret
mov
lret
fistpl
mov
cmp
mov
push
sbb
addl
repz
ret
xchg
xor
mov
outsl
lret
pop
add
mov
jmp
out
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
jmp
mov
aaa
sti
mov
push
lret
lret
out
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
jmp
scas
push
pop
fistpl
jmp
daa
jmp
push
lret
dec
jae
sti
mov
mov
jmp
dec
jae
sti
mov
push
pop
fistpl
mov
cmp
mov
jmp
lret
mov
jmp
scas
push
pop
fistpl
mov
cmp
jmp
lret
dec
jae
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
jmp
ja
jmp
lret
mov
cmp
jmp
pop
fcmovne
jmp
aaa
sti
mov
inc
pop
lret
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
loopne
xlat
lret
das
ret
xchg
xor
mov
lret
xchg
jmp
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
jmp
lret
xlat
fwait
pop
add
mov
aaa
sti
mov
pop
add
mov
jmp
out
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
lret
xlat
fwait
pop
add
mov
aaa
sti
mov
lret
idivl
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
lret
mov
push
pop
fistpl
mov
lret
jmp
mov
aas
lret
sbb
addl
repz
aas
jecxz
lret
lret
iret
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
pop
pop
ret
lret
aas
jecxz
imul
xchg
pop
pop
ret
xchg
jmp
lret
rcll
dec
rdpmc
idivl
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
pop
add
mov
aaa
lret
adc
fwait
pop
lret
mov
outsl
adc
lret
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
add
jmp
mov
push
sbb
or
out
jmp
sub
xchg
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
lret
rcll
dec
bswap
jmp
imul
xchg
lret
lret
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
lret
xlat
fwait
lret
idivl
push
sbb
jmp
lret
scas
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
fcmovne
jmp
jmp
push
sbb
or
icebp
call
mov
sub
xchg
push
sbb
addl
repz
aas
jecxz
jmp
filds
lret
out
xchg
push
sbb
addl
repz
aas
jecxz
mov
jmp
ja
jmp
push
sbb
jmp
repz
aas
jecxz
imul
xchg
lret
repz
aas
jecxz
imul
xchg
lret
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
lret
out
outsl
adc
fwait
pop
add
mov
jmp
out
outsl
adc
fwait
pop
add
mov
jmp
out
outsl
adc
fwait
lret
jmp
pop
lret
mov
cmp
mov
push
sbb
addl
repz
lret
pop
lret
mov
cmp
mov
push
sbb
addl
jmp
addr16
jmp
pop
lret
mov
push
sbb
jmp
ja
jmp
sub
ja
jmp
push
sbb
addl
repz
lret
push
sbb
addl
repz
lret
push
sbb
addl
jmp
addr16
xchg
push
sbb
or
das
jmp
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
lret
clc
add
add
frstor
out
jmp
ret
xchg
and
stos
outsl
lret
lret
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
jmp
stos
outsl
adc
fwait
pop
add
lret
and
stos
outsl
lret
lret
add
add
das
das
rcll
dec
rdpmc
idivl
outsl
adc
fwait
pop
add
mov
aaa
lret
adc
fwait
pop
add
mov
lret
arpl
jmp
lret
lret
and
stos
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
lret
fistpl
mov
lret
push
pop
lret
jae
sti
scas
push
pop
lret
jae
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
frstor
push
lret
dec
rdpmc
test
pop
pop
ret
xchg
jmp
cmpsl
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
lret
jecxz
fcomip
mov
aas
lret
sbb
addl
repz
jmp
jmp
filds
mov
aas
jecxz
imul
xchg
pop
pop
ret
lret
jmp
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
lret
jmp
mov
aaa
sti
mov
push
pop
fistpl
lret
add
jmp
stos
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
jmp
jae
sti
mov
pop
add
mov
aaa
sti
mov
pop
add
mov
jmp
stos
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
lret
mov
jmp
stos
outsl
adc
mov
aaa
sti
mov
lret
mov
aaa
sti
mov
pop
add
mov
aaa
sti
mov
lret
mov
aaa
sti
mov
jmp
fistpl
mov
cmp
mov
jmp
adc
fwait
pop
add
lret
and
stos
outsl
adc
fwait
pop
add
mov
aaa
lret
adc
fwait
pop
add
lret
sub
lret
mov
cmp
mov
lret
jmp
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
jmp
pop
ret
lret
aas
jecxz
pop
pop
ret
xchg
xor
jmp
das
rcll
dec
rdpmc
test
outsl
adc
fwait
pop
add
mov
aaa
lret
in
inc
or
jmp
addr16
addl
repz
aas
jecxz
imul
xchg
pop
lret
mov
lret
outsl
adc
mov
aaa
sti
mov
push
lret
dec
jae
sti
mov
pop
add
mov
aaa
sti
mov
push
lret
dec
jae
sti
mov
jmp
rcll
dec
rdpmc
idivl
pop
pop
ret
xchg
jmp
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
jmp
ret
xchg
jmp
jecxz
imul
xchg
xor
mov
jmp
ret
xchg
xor
mov
pop
pop
ret
xchg
xor
mov
mov
jmp
pop
add
mov
lret
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
pop
add
jmp
jg
out
pop
add
mov
aaa
sti
mov
push
lret
dec
jae
jmp
outsl
adc
mov
aaa
sti
mov
push
lret
dec
jae
sti
mov
jmp
lret
mov
cmp
mov
push
lret
mov
cmp
lret
fistpl
mov
cmp
mov
push
sbb
lret
cmp
lret
fistpl
mov
push
sbb
lret
cmp
mov
push
sbb
jmp
ja
jmp
push
sbb
lret
add
in
mov
push
lret
mov
cmp
mov
push
sbb
addl
in
mov
lret
jmp
aas
jecxz
pop
pop
ret
xchg
xor
mov
lret
xchg
xor
jmp
das
rcll
dec
rdpmc
idivl
in
pop
ret
xchg
xor
jmp
das
rcll
dec
rdpmc
idivl
in
pop
ret
xchg
xor
mov
pop
pop
ret
xchg
xor
mov
jmp
jg
jmp
pop
pop
ret
idivl
outsl
adc
fwait
pop
add
mov
jmp
stos
outsl
lret
clc
jmp
idivl
pop
add
jmp
lret
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
lret
xlat
fwait
lret
idivl
pop
add
jmp
jg
out
outsl
adc
fwait
lret
idivl
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
lret
lret
out
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
pop
lret
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
lret
jecxz
xchg
push
sbb
mov
jmp
mov
aaa
sti
mov
mov
aas
jecxz
imul
xchg
lret
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
lret
dec
rdpmc
test
pop
pop
ret
xchg
xor
mov
lret
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
lret
mov
das
adc
fwait
pop
add
mov
lret
or
imul
jmp
or
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
jmp
lret
jnp
jecxz
imul
xchg
pop
pop
ret
xchg
jmp
jecxz
imul
xchg
pop
pop
lret
das
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
lret
mov
aaa
sti
mov
push
pop
fistpl
jmp
jmp
scas
push
pop
fistpl
mov
cmp
mov
jmp
jmp
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
jmp
lret
dec
rdpmc
idivl
outsl
adc
fwait
pop
add
lret
and
fwait
pop
lret
mov
pop
add
mov
aaa
lret
daa
jmp
push
pop
fistpl
mov
cmp
mov
push
sbb
lret
jmp
repz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
imul
xchg
pop
pop
ret
xchg
xor
mov
outsl
adc
fwait
pop
add
mov
aaa
sti
mov
push
pop
fistpl
mov
cmp
mov
push
sbb
addl
repz
aas
jecxz
nop
nop
nop
