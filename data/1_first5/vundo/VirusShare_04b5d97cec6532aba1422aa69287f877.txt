mov
insb
pop
push
mov
mov
add
mov
pop
push
or
pop
mov
fisubl
and
jbe
jle
cmp
cmp
jno
xchg
jle
dec
cmp
xlat
int3
mov
xorb
xor
inc
jle
stos
stos
mov
popf
inc
imul
xor
sarl
loopne
sub
inc
push
dec
sbb
xchg
push
je
pop
pop
sbb
shlb
xchg
inc
push
shrb
add
xor
pop
mov
mov
push
jno
add
out
imul
jle
int
out
mov
add
push
pop
sbb
stc
and
cwtl
or
in
repnz
shrl
fldl
mov
pop
dec
jp
mov
mov
lret
dec
repnz
and
mov
jb
cmp
cmp
push
test
lcall
dec
dec
mov
dec
inc
into
pop
test
mov
pop
call
mov
rcll
sub
mov
fiadds
pop
mov
testb
out
inc
into
loope
xor
mov
mov
addr16
testl
push
mov
maskmovq
idivl
rorl
cli
and
or
sbb
xchg
mov
dec
movsl
xor
fstpl
jb
int
mov
les
push
add
jb
popa
cs
xlat
cmpsl
push
imul
adc
mov
into
xor
dec
xchg
pop
sahf
sub
xor
out
fcoms
cmp
xor
popl
mov
add
mov
call
pushl
popl
mov
pushl
popl
and
push
popl
mov
sbbw
and
and
pushl
popl
mov
xorb
and
push
xor
or
popl
mov
jmp
sub
xorl
mov
and
push
popl
pushl
popl
cmp
jne
push
popl
lea
mov
pushl
popl
mov
and
add
cmp
je
xor
movw
ret
push
popl
pushl
popl
push
xor
push
popl
pushl
popl
and
mov
push
popl
pushl
popl
and
push
popl
mov
and
orw
mov
and
pushl
popl
lods
push
mov
add
popl
mov
and
movw
mov
pop
push
popl
pushl
popl
ret
push
movl
mov
add
pushl
popl
push
sub
push
push
pushl
popl
push
push
pushl
popl
mov
mov
movw
add
pushl
push
popl
mov
add
push
popl
add
mov
addb
add
xor
push
popl
pushl
popl
lea
orl
mov
mov
add
mov
subb
xor
orb
rol
push
popl
pushl
popl
xor
inc
pushl
popl
cmpb
jne
push
popl
pushl
popl
cmp
je
inc
push
popl
cmp
jb
addl
mov
add
push
add
add
popl
mov
movzwl
mov
or
add
mov
push
popl
add
push
or
or
popl
mov
pop
cmp
jbe
push
sub
sub
popl
mov
cmp
jae
pushl
push
popl
pushl
popl
pushl
sbbb
sub
pushl
popl
movl
addl
push
popl
pushl
popl
pushl
call
addw
call
push
popl
pushl
popl
pop
pop
push
sub
or
popl
mov
pop
xorw
pop
add
pop
pushl
popl
leave
push
popl
ret
pop
push
xor
and
popl
mov
xor
push
popl
pushl
popl
call
xorb
test
jne
ret
orl
push
push
and
and
popl
mov
push
sbbl
mov
push
add
sub
popl
mov
pusha
call
subw
mov
sub
push
popl
movl
addl
pushl
popl
push
call
movb
cmpl
je
cmpl
je
push
sub
mov
popl
mov
cmpl
jne
call
pushl
popl
popa
call
push
popl
pushl
popl
sub
movl
xor
addl
push
push
and
and
popl
mov
call
subw
push
push
dec
mov
xor
xchg
andb
mov
shl
push
popl
pushl
popl
push
push
sub
xor
popl
mov
xor
push
push
popl
pushl
popl
call
push
popl
pushl
popl
push
push
popl
pushl
popl
mov
subb
push
push
popl
pushl
popl
jmp
pop
push
popl
mov
push
popl
push
push
orw
push
mov
pushl
popl
mov
xorb
rep
pop
push
popl
pop
push
add
inc
add
mov
add
xchg
push
push
dec
shl
ror
mov
inc
inc
mov
xor
pop
andw
xor
jmp
push
xor
and
popl
mov
sub
mov
pushl
popl
sub
push
sub
sub
popl
mov
sub
mov
sbbb
sub
pushl
popl
or
jne
add
add
subw
jmp
call
cltd
dec
dec
dec
push
or
imul
jg
dec
push
jge
push
fidivs
arpl
add
mov
xchg
dec
mov
lds
fwait
xchg
pop
inc
mov
ja
inc
fwait
adc
mov
and
in
aaa
andl
movb
imul
ljmp
fwait
push
jp
outsb
push
shll
or
bound
test
xor
and
jmp
sub
enter
sub
mull
inc
xor
xchg
pop
push
dec
jle
sbb
into
cmpl
cs
mov
loope
jmp
inc
push
in
jbe
sbb
fldenv
stos
jo
jmp
pop
dec
jmp
sub
jl
dec
inc
dec
icebp
jle
pcmpgtb
xor
xchg
jg
ja
push
cmc
push
mov
inc
xchg
jle
mov
dec
or
in
daa
mov
lret
loope
mov
mov
add
push
cmp
jmp
inc
sti
sub
lock
mov
arpl
lock
and
jmp
inc
shl
lcall
jbe
cmp
xchg
pusha
inc
lods
push
daa
jg
cmp
cmp
lods
repnz
pop
loopne
inc
jmp
mov
rol
pop
jae
ds
and
and
sub
inc
sbb
lods
mov
add
test
in
pop
lock
pop
xorl
aaa
fidivrl
into
dec
mov
bound
int
jo
dec
ljmp
mov
lea
mov
lret
sbb
mov
lods
adc
aas
gs
xor
cmpsl
cmpsb
add
push
xchg
aad
adc
repnz
bound
adc
ljmp
mov
mov
clc
cmp
sbb
dec
daa
dec
or
dec
pushf
mov
xchg
shll
jo
add
fwait
or
push
jl
xchg
cmp
lds
add
push
cmp
mull
jge
and
jle
sbb
shll
adcl
xchg
fwait
dec
sbb
xor
lahf
fwait
or
aad
and
add
mov
sub
and
add
outsl
xchg
cmovl
sarb
dec
mov
xlat
inc
sub
xchg
in
push
call
mov
dec
fwait
add
add
mov
mov
pop
js
mov
sbb
leave
rcrl
jge
jbe
stos
xor
sbb
sub
movb
sub
frstor
popa
push
lcall
and
aaa
std
push
lods
popa
aas
out
xchg
mov
pop
mov
imul
xor
xor
loopne
mov
lds
sahf
and
js
jo
aam
cmpb
xlat
mov
sti
add
push
das
and
lcall
jp
adc
mov
mov
jl
dec
aam
or
push
fnstenv
pop
das
cs
shlb
int3
movb
mov
push
ret
and
push
rol
add
ficomps
aaa
fimull
iret
cltd
out
sub
dec
sahf
lods
add
push
xchg
js
lods
cs
mov
lret
sbb
sahf
cmp
push
and
aaa
xchg
inc
mov
jl
dec
pop
scas
or
dec
les
mov
fiaddl
dec
das
int3
and
pushf
adc
xor
adc
dec
sub
add
and
dec
or
jae
ret
and
sbb
and
mov
cs
shl
jle
xor
xchg
mov
pop
inc
scas
sub
fcomps
fldcw
repz
sbb
mov
inc
imul
lds
sbb
jnp
jae
push
mov
lods
mull
push
in
sbb
sub
repz
add
dec
or
push
jns
inc
mov
sub
movsl
aad
lret
sbb
xchg
into
push
dec
lds
pop
es
mov
pop
ret
push
mov
das
adc
adc
fcmove
lret
adc
sarb
out
aaa
pop
stos
jg
ds
cmpsb
xor
push
fisubrl
jmp
or
xor
fisubs
sub
iret
jae
imul
cmp
lea
dec
idivb
push
xlat
xchg
mov
push
loop
adc
inc
lds
push
xchg
pusha
inc
stos
inc
push
outsl
int
fs
jmp
sub
and
loopne
dec
int
push
xchg
pop
jne
push
aas
sbb
pop
lcall
pop
cmp
cs
push
repz
sbb
dec
cmp
sub
movb
jbe
jge
cmc
jbe
jnp
dec
or
test
add
pop
jp
loopne
fs
xor
shll
ljmp
and
adc
sbb
push
cwtl
jg
popa
sahf
push
mov
push
push
je
xchg
fwait
sub
cmp
pop
mov
push
lods
sbb
or
lock
jae
xchg
addl
mov
jp
ja
insl
sub
xchg
mov
adc
and
int
mov
cmp
pop
jb
push
dec
dec
rcrl
jmp
adc
inc
int3
and
data16
sub
pop
je
and
dec
rol
jns
fisubrs
es
and
mov
dec
push
dec
xchg
jg
mov
in
aas
clc
ret
test
xchg
xor
leavew
popf
sti
cld
xchg
pop
inc
lods
lcall
dec
xlat
pushf
fcmovbe
jns
lea
push
pop
mov
je
or
sbb
mov
std
mov
cmpsb
sub
inc
mov
movsl
xor
mov
lds
mov
ret
pop
mov
pop
xor
lahf
mov
jns
inc
mov
testb
or
mov
xchg
and
mov
add
pop
outsl
or
add
mov
lds
rol
fmull
pop
pop
or
adc
jle
xchg
xor
and
sbb
mov
inc
cmp
add
inc
push
dec
rcrl
xchg
fiaddl
add
repz
ret
sbb
fcoml
stos
dec
mov
fwait
push
fdivs
jnp
cltd
vhaddps
dec
mov
dec
rcrl
cmp
and
cmc
add
aad
pop
sub
lcall
sbb
ret
push
pushf
sub
xor
sbb
aad
inc
sti
cltd
mov
mov
stc
int
test
sti
add
pop
mov
clc
or
pusha
inc
xchg
rcrb
xchg
iret
xchg
out
add
in
push
mov
cmp
sbb
and
mull
jle
enter
xor
sbb
inc
jecxz
out
lock
scas
sahf
mov
and
inc
jo
aam
in
inc
xchg
imul
mov
scas
pop
stos
arpl
ljmp
rcll
js
cmp
sbb
push
loopne
sbb
xchg
fs
push
cmp
push
mov
cmpsb
add
pop
push
fdivrs
add
or
mov
stc
cmp
push
add
push
pop
push
or
aam
jle
sbb
push
mov
inc
scas
or
repz
or
testl
or
mov
inc
sti
cmpsb
arpl
in
stos
sbbb
add
repz
pop
mov
add
repz
sub
cld
push
or
cld
mov
into
in
orl
dec
sti
ret
pop
mov
sarl
or
fdivrl
adcb
add
icebp
sub
in
sti
pushfw
nop
mov
xor
jp
popf
sub
cmp
xchg
cmp
in
in
xor
dec
xlat
scas
inc
out
insl
sub
lea
xlat
sbb
popf
sub
daa
xor
xor
movb
xor
pop
cmpxchg
jg
inc
sbb
mov
inc
dec
popf
mov
ja
fstps
xor
repz
push
push
sbb
fidivl
std
inc
out
test
ljmp
test
cmp
movsb
mov
push
mov
lret
int
std
fwait
mov
inc
inc
jo
and
jne
xor
xchg
aad
adcl
xchg
push
mov
enter
mull
bound
cmp
jno
imul
add
pop
arpl
roll
xchg
push
mov
xchg
popa
mov
lock
in
pushf
mov
push
dec
mov
xchg
pop
inc
lods
add
xchg
inc
out
es
and
or
insb
sbb
fists
pop
lock
and
mov
dec
out
aaa
aas
mov
jne
ficomps
out
add
mov
gs
divb
mov
mov
dec
xor
add
xlat
xchg
jge
int
popf
es
call
jo
lods
enterw
or
fisttpll
and
sub
les
pop
sbb
dec
xlat
pushf
fisttpll
sbb
adc
dec
in
and
add
cld
jmp
jle
add
ret
fs
sahf
stos
mov
mulb
mov
daa
add
mov
aas
sbb
js
int
ljmp
mov
xor
cltd
adc
movb
or
mov
rol
add
inc
loopne
mov
dec
or
daa
lcall
mov
sub
es
pusha
sbb
cld
mov
je
push
cltd
lods
or
ds
popf
jae
es
stos
and
mov
add
repz
aaa
stc
ftst
jmp
pop
dec
push
dec
cmpsl
jg
xor
lock
aaa
mov
xchg
aad
xor
lcall
push
inc
dec
lods
mov
insl
clc
imul
mov
dec
daa
dec
cli
out
dec
sti
and
insb
add
fists
arpl
sbb
mov
aas
stos
pop
cmp
push
fwait
xlat
fidivrl
test
push
mov
sub
mov
xor
add
in
testb
and
cwtl
outsb
or
lock
cli
inc
add
pop
ljmp
iret
imul
fisttpl
dec
shll
add
mov
push
xchg
vsqrtsd
and
mov
mov
je
xchg
sbb
pop
fwait
jno
mov
int
mov
pusha
or
add
push
repz
ret
lock
and
mov
adc
mov
cmc
adc
jl
shrb
mov
or
mov
aaa
add
cmp
sarb
movsl
pushf
push
adc
mov
dec
mov
aaa
stc
lcall
std
aam
xchg
iret
mov
push
cltd
popa
dec
call
es
sti
les
rorl
mov
aas
in
and
inc
cwtl
outsb
or
fidivrl
mov
cmp
dec
pop
ljmp
aam
push
or
iret
call
mov
dec
loope
rorl
fbstp
pop
lea
mov
ds
sub
or
cmc
sbbb
mov
mov
int3
daa
fmuls
scas
scas
aad
sub
or
sub
pop
mov
shrb
inc
not
dec
jbe
sub
mov
mov
aad
lcall
mov
sub
jb
sub
shl
cltd
and
jl
push
hlt
inc
cmp
sub
nop
repnz
sub
adc
push
mov
fildll
xor
fiadds
iret
xchg
leave
out
test
not
test
movsl
filds
push
notl
inc
and
out
ss
xchg
cltd
sub
push
pop
pop
mov
jp
insl
pop
xor
ljmp
insl
adc
sahf
mov
xchg
xor
add
mov
dec
fnstcw
add
call
mov
xchg
cli
sub
add
dec
add
push
mov
test
mov
inc
push
jo
and
outsl
or
fisubrl
xor
aam
inc
and
dec
pminsw
push
xchg
cltd
inc
test
mov
fisttpl
dec
shll
gs
and
lock
je
jge
or
push
and
pop
inc
inc
cli
movsl
xor
bound
cmp
in
sub
inc
sbb
cmpb
push
mov
cld
aad
mov
iret
lcall
lods
cmp
test
rep
sbb
call
movb
aad
ss
mov
out
and
push
enter
mov
icebp
inc
rcr
fwait
das
pop
mov
arpl
sub
insb
lock
js
push
jb
push
stos
mov
mov
test
loop
add
mov
or
fmuls
orb
push
in
in
fisubl
stos
inc
out
imul
jl
cs
adc
xchg
dec
sub
int3
xor
xchg
fdivrs
popa
pop
outsb
mov
or
cld
push
add
and
add
fadd
add
adc
pop
xor
lret
enter
and
fs
mov
insl
or
fisubrl
nop
mov
inc
dec
ljmp
sbb
mov
lret
pop
cmp
sbb
xor
adc
mov
je
sub
jl
push
dec
pop
lahf
jne
sbb
dec
sub
and
inc
sbb
clc
mov
push
addr16
or
or
lock
jge
daa
mov
stos
and
xor
xlat
pop
insb
pop
mov
das
incb
insl
daa
mov
shlb
mov
sub
inc
outsl
jg
cmp
or
stos
loop
andb
ret
and
fidivrs
mov
aaa
hlt
adc
mov
fwait
shl
loop
ljmp
lea
faddl
in
mov
mov
fildll
stos
sar
xchg
addr16
and
out
repz
sbb
fnstenv
sbb
cld
xchg
popa
decb
loopne,pn
sub
insb
cs
inc
dec
mov
mov
jl
xchg
ss
sarb
dec
fldenv
scas
xchg
ret
cmp
in
mov
push
lods
hlt
pop
cmp
cs
dec
sbb
sbb
push
inc
insl
repz
push
pop
dec
xchg
sbb
inc
inc
sbb
add
mov
mov
or
or
mov
lock
or
jl
push
lds
outsb
xchg
jg
xor
fwait
adc
sbb
add
sub
pop
sub
add
cwtl
cmpsb
mov
iret
xor
mov
push
pop
outsb
mov
xorl
jo
jle
sub
mov
rorl
adc
dec
popf
push
cmpsl
add
test
push
imul
insl
popa
push
inc
repnz
sub
lahf
adc
mov
mov
inc
fidivrs
movsb
sbb
or
mov
mov
rcrl
mov
push
xchg
scas
xor
pop
xchg
jcxz
inc
dec
dec
test
dec
mov
sarb
cmp
adc
adc
fcoms
mov
in
add
cmp
scas
into
jbe
insb
and
fwait
push
mov
add
or
sbb
in
stos
js
loopne
fdivrs
jl
xor
es
xchg
mov
das
add
push
jae
mov
dec
xor
push
mov
roll
jne
fisubs
aas
xchg
loop
xchg
add
add
test
push
add
and
dec
mov
push
loop
sbb
insl
or
stos
mov
stc
icebp
sbb
cli
push
pop
inc
std
and
jecxz
add
jbe
sbb
aam
sub
sbb
movsb
sbb
dec
fsincos
xchg
fs
mov
faddp
dec
xorb
xor
adc
insl
std
xor
push
mov
insl
sub
cmp
lds
inc
ret
clc
dec
rol
add
sbb
dec
out
mov
or
cmp
pushf
adc
xor
xchg
add
shl
insb
and
testb
fwait
aad
roll
xchg
imul
inc
test
cmp
add
xlat
cmp
sub
push
and
xchg
imul
roll
loope
out
fucomip
pop
jnp
mov
cmpsb
and
inc
insl
mov
mov
and
fcom
repnz
cltd
outsb
xor
in
add
dec
ret
decl
add
adc
xchg
mov
jg
or
jno
mov
aad
loope
cmpsl
mov
lds
addr16
push
fildll
fwait
push
mov
ss
cli
jae
scas
inc
out
in
and
or
leave
jns
ja
add
loop
cs
inc
insl
mov
enter
mov
leave
lahf
lock
sub
mov
mov
push
or
scas
cmp
pushf
psubsb
xchg
mov
xchg
lds
insb
and
xchg
frstor
sarb
sbb
das
in
mov
mov
cs
int
test
dec
rol
pop
or
and
inc
add
inc
lods
sbb
aam
and
outsb
mov
call
jnp
call
ljmp
push
cltd
outsb
mov
lds
mov
mov
mov
sti
xor
lahf
add
movb
jns
movsb
fwait
js
mov
ror
shrb
jo
and
sti
cltd
outsl
or
fcmovnbe
and
fisubl
jle
int3
out
fcomps
dec
pminsw
sub
pop
sub
pop
ret
xor
outsb
testl
sbb
mov
aaa
out
pushf
jmp
rcll
mov
inc
nop
insb
push
mov
mov
aaa
inc
mov
fsub
ja
mov
xchg
lahf
mov
dec
cmpl
cmp
xor
fs
jge
sub
xor
aam
stos
mov
inc
dec
test
es
nop
add
mov
sbb
popf
pop
call
push
aas
popf
push
sarb
or
cmp
adc
out
stos
inc
xor
cs
add
mov
inc
add
dec
rol
add
dec
sub
cmp
cld
dec
out
cmp
sahf
xchg
andl
sbb
flds
inc
jp
xchg
cmp
fwait
rclb
lods
addr16
add
cld
inc
or
jns
es
xor
mov
jno
rcrl
sbb
xor
ret
xchg
mov
inc
dec
lcall
sti
inc
mov
sub
sbb
popf
add
jp
insl
pusha
enter
dec
mov
mov
aaa
out
loopne
lods
and
icebp
aas
ljmp
inc
mov
xor
add
sbb
movsl
sarb
add
pusha
sub
jns
dec
cltd
xlat
pop
clc
xchg
int3
xchg
out
add
xor
lods
rorb
sbb
inc
sub
mov
imul
lcall
push
xchg
fstpl
pop
insl
pop
add
js
les
inc
dec
jle
or
jg
movsl
je
and
xchg
aad
out
xchg
jne
push
into
pushf
xchg
int
push
push
int
xor
adc
fstpt
sbb
push
fdivrl
ret
je
fimull
cmp
lret
data16
xor
jecxz
mov
jnp
sbb
daa
sub
jle
stos
xor
loope
mov
xor
jo
push
or
shr
push
pop
inc
cmc
dec
mov
xorb
mov
ja
insb
sub
insb
pop
mov
lea
mov
adc
fadds
lock
add
dec
mov
insl
pushf
push
xchg
fisubrs
pop
cwtl
or
je
push
or
jo
jb,pt
sbb
lods
xchg
out
insb
mov
mov
mov
imul
negl
stos
xchg
dec
fistpll
daa
repnz
pop
daa
lret
cld
mov
and
mov
sahf
rcr
mov
adc
xchg
push
xchg
xlat
hlt
aam
sub
mov
and
int
and
cld
dec
push
xor
lock
dec
sub
outsl
je
vsqrtps
mov
dec
mov
nop
outsl
decl
pop
ja
dec
cltd
sbb
call
adc
test
mov
sbb
out
imul
mov
jne
xor
cli
stos
push
push
pop
mov
mov
out
cltd
dec
cmc
sbb
inc
sbb
rorb
shl
sbb
adc
mov
cmpsb
repnz
jbe
sub
nop
xchg
sti
xchg
cltd
dec
in
loop
fildl
dec
rcll
add
jmp
dec
xchg
aas
add
dec
int
pop
mov
cltd
inc
mov
and
fildl
dec
rcr
mov
ficoms
aaa
aad
xchg
imulb
push
mov
sub
xchg
aad
ljmp
fnsave
ret
pop
sub
je
or
inc
sbb
xor
cmpsl
sub
call
cmp
and
or
cli
mov
xor
fwait
fwait
cmp
lea
inc
inc
ja
out
push
lret
and
mov
adc
shl
aaa
std
push
cmp
xchg
aaa
out
sti
jl
js
ss
dec
lods
insb
push
mov
add
or
push
je
dec
in
loope
inc
sbb
push
xchg
hlt
inc
sbb
lock
clc
popa
jg
dec
push
shll
test
sub
outsl
or
sub
add
lods
ljmp
clc
sub
sbb
fistpll
je
pop
fldt
xchg
cld
mov
xor
repz
test
jnp
js
sub
adc
add
inc
lds
sub
icebp
xchg
sbb
cmp
pop
push
add
sahf
pushf
adc
cli
in
data16
add
test
push
push
jl
inc
jo
add
movsbl
push
sahf
mov
dec
sub
adc
pop
jg
mov
and
es
push
data16
cltd
inc
or
je
dec
sub
icebp
xchg
sub
into
push
loopne
addr16
repnz
lcall
sub
in
jne
fisubs
mov
or
add
mov
fidivrl
in
je
pushf
fcompl
adc
cltd
das
jbe
dec
in
fstps
inc
sbb
inc
fidivrl
vmovdqa
scas
mov
mov
mov
imul
pop
cli
mov
sti
test
and
adc
jmp
loope
jmp
dec
dec
scas
test
jmp
xchg
pop
mov
sarl
inc
or
adc
sbb
pushf
jg
xor
mov
lock
push
loop
xchg
outsl
mov
rorb
in
ljmp
inc
in
adc
jae
add
dec
je
jl
adc
sbb
push
cwtl
scas
sub
rol
mov
push
dec
insl
pop
ja
sbb
fcomps
stc
movsb
pop
sbb
lods
stc
xchg
push
adc
fimull
inc
fst
cmp
or
xlat
ljmp
movb
mov
dec
xchg
leave
dec
sbb
sar
out
xchg
out
add
push
push
cmpsl
jbe
lods
pop
sbb
pop
pop
lods
or
in
fidivrl
dec
inc
xlat
xor
mov
jl
shrb
int
sbbl
pop
addl
insl
xor
movsl
xor
or
push
mov
jbe
jno
inc
repnz
shrl
inc
sbb
movb
push
popf
xchg
rol
add
int
fwait
xor
cmp
sbb
push
mov
mov
mov
js
pop
mov
lahf
scas
cld
mov
outsl
sti
dec
add
fnstcw
insl
imul
mov
movb
arpl
dec
gs
ret
sti
dec
rol
test
and
dec
rol
jns
fbld
aaa
dec
mul
outsb
out
loopne
adc
insl
aad
xor
cmp
xlat
aas
lock
inc
or
sbb
inc
pop
xor
jp
xlat
rolb
js
jb
sarb
add
mull
cltd
inc
cmp
cmp
shll
adc
add
xor
cld
lods
or
call
sub
divb
repnz
xlat
ljmp
jecxz
jge
repz
imul
jns
fildll
test
cld
push
into
mov
out
idivb
pop
xchg
adc
lock
mov
into
mov
fnstenv
dec
jbe
mov
test
pusha
decl
repnz
ret
adc
aad
fcomip
inc
sbb
movb
push
popf
gs
add
inc
cld
lahf
stc
movsb
mov
push
mov
push
int
bnd
cli
inc
sub
sub
and
nop
cmpsl
sbb
dec
or
add
js
sbb
mov
mov
aaa
add
push
dec
out
inc
and
ds
movl
cmp
clc
dec
outsb
inc
mov
cwtl
cli
repnz
cmp
add
or
int
mov
cltd
push
cmp
sub
dec
rol
jecxz
mov
fstpl
cwtl
aad
cmc
jb
mov
mov
xor
mov
nop
cmc
inc
dec
or
dec
addl
adc
lods
mov
jne
ficomps
ljmp
xchg
mov
cld
iret
lods
shll
sti
dec
fwait
push
mov
and
nop
sbb
in
lock
je
int3
xchg
cmp
movb
jne
pop
inc
inc
jns
add
push
mov
in
int
push
fcomip
in
push
jo
and
sbb
or
dec
jmp
push
adc
cmp
enter
mov
mov
in
cmpl
pop
jns
xchg
pop
inc
mov
mov
lret
fadd
shll
dec
jb
pop
mov
lea
fcompl
les
ret
adc
cmp
or
inc
sbb
cmp
sub
add
or
and
lcall
lods
xor
je
cmp
in
sub
inc
sbb
xchg
cmpsb
pop
cmp
and
sub
add
outsl
test
in
sub
fs
jecxz
das
mov
and
pop
inc
and
pop
fldl
daa
inc
ret
xor
dec
mov
cmpsl
cmp
cmp
cmc
aaa
scas
or
repz
pop
mov
cmpsl
sbb
or
cmpsb
mov
add
jl
add
shrb
add
inc
cli
jnp
movsb
scas
js
mov
ss
jle
add
sbb
sub
pop
stos
cli
cltd
cltd
inc
or
push
fisttpl
dec
rorl
imul
int3
pop
ljmp
or
add
cs
inc
add
pushw
movb
mov
aaa
std
pop
mov
repz
popa
test
mov
cmp
mov
negl
jmp
loopne
xchg
or
js
jmp
mov
out
push
add
fstp
lret
ret
ja
inc
inc
mov
lret
inc
lea
inc
imul
pushf
adc
or
pop
ss
or
loop
add
adc
mov
stos
in
fdiv
iret
jne
pop
bound
fwait
or
and
mulb
xchg
call
dec
jge
sub
rol
xchg
notl
in
data16
addb
cmp
cmp
ljmp
es
add
in
and
fld
add
mov
lock
dec
xchg
push
mov
or
sub
and
add
ja
sub
and
inc
lea
out
and
loope
mov
lods
adc
mov
sub
out
mov
movsl
out
movsl
dec
fstpt
jmp
or
add
adc
sbb
je
cmp
sub
inc
sbb
stos
mov
push
sub
mov
iret
xchg
int3
out
and
mov
out
sub
sub
and
inc
sbb
dec
mov
adc
pop
mov
inc
subl
mov
aaa
sbb
mov
xchg
jle
addr16
or
rcrl
pushf
inc
out
scas
js
and
and
cmpb
dec
jne
mov
add
jp
insl
pop
inc
iret
adc
inc
testl
in
xor
mov
fwait
ja
add
sbb
fwait
or
push
enter
xor
cmpl
in
inc
insl
sahf
push
test
xchg
push
inc
divl
adc
hlt
push
add
jb
negl
mov
jmp
mov
fcoms
in
subl
cmp
inc
mov
stos
sbb
cmpsl
mov
jle
xchg
sub
cld
dec
lahf
cmpsb
pop
mov
mov
inc
sbb
mov
lock
imul
inc
sbb
jmp
mov
out
sub
cmp
repz
fsubr
dec
pop
lahf
jmp
ss
cmc
xchg
add
push
add
fildll
jae
shl
sub
cli
inc
jge
xchg
adcb
das
mov
cmp
sbbl
jb
pop
inc
test
add
xchg
push
or
jp
repnz
dec
dec
rcrb
jmp
inc
fmull
sbb
sbb
xchg
insb
hlt
enter
jno
int3
inc
clc
out
inc
test
jecxz
or
sti
mov
lds
imul
daa
xchg
out
test
mov
mov
push
rclb
imul
repz
cmp
push
xchg
dec
in
psrlq
js
xor
lea
add
xor
enter
sbb
pop
aas
sbb
jb
adc
mov
loopne
dec
lds
mov
pop
pop
lods
fildll
jns
rol
xchg
clc
cltd
inc
dec
dec
mov
nop
jl
stc
add
adc
xchg
movsl
sub
cmc
xor
ret
movsl
add
pop
fwait
xlat
push
cmp
pushl
sbb
lahf
shlb
and
push
xchg
cmp
inc
pop
je
dec
and
pop
fstpl
js
aaa
inc
ret
or
sti
add
pcmpgtd
mov
inc
mov
cmp
lahf
mov
mov
out
adc
mov
jle
in
aam
sub
inc
mov
into
je
cld
jecxz
movsl
mov
push
mov
jle
int
push
mov
sub
xchg
mov
sti
xor
sbb
movb
sub
fs
dec
ja
push
mov
or
pushf
mov
aam
movb
inc
mov
mov
int3
and
out
ljmp
push
sbb
xor
int3
mov
in
stc
arpl
add
out
out
negb
sub
ja
insb
and
jae
cmp
fwait
push
mov
insl
pop
jnp
loope
int
mov
jbe
add
dec
icebp
es
leave
cmp
mull
jle
enter
shrb
repz
test
inc
cld
loopne
push
fwait
add
pop
adc
mov
mov
shrl
cli
movsl
and
imul
cmp
and
daa
insl
shrb
sbb
ret
cli
push
pop
jbe
and
push
sbb
xlat
popf
pop
ret
jp
repnz
dec
movsb
sbb
or
jmp
pop
pop
ret
std
vmovdqu
and
data16
pushf
mov
and
push
sbb
fimull
inc
int
pop
push
cs
xlat
ljmp
rcrb
xchg
or
into
add
repz
sbb
outsl
decl
call
inc
lods
mov
ret
xlat
popf
outsb
mov
lds
mov
mov
inc
sarb
xor
lahf
mov
add
mov
aaa
sti
pop
sub
add
xchg
in
ret
ljmp
and
ficomps
test
and
test
xchg
pop
or
out
int
mov
jns
and
pop
cwtl
das
xchg
outsl
int
in
jb
jge
and
cmc
pop
insl
sbb
jg
cmp
xor
push
cmc
push
daa
push
mov
aad
add
push
cwtl
movsl
xchg
iret
push
outsl
es
cwtl
sahf
jmp
add
mov
les
arpl
pop
sbb
repz
sbb
rcr
adc
iret
xchg
les
cmp
pop
popf
jae
dec
into
in
loope
inc
sbb
les
dec
xchg
mov
test
xlat
sbb
pushf
jbe
cmp
inc
inc
dec
jae
inc
ja
sahf
call
inc
mov
idivl
mov
loop
cmp
jmp
push
xchg
pop
inc
mov
outsb
xchg
lret
pop
mov
pop
sub
jmp
push
js
sub
pop
loope
jnp
cmp
stc
fcmovnb
movhps
cltd
and
data16
cmp
loope
fadd
push
je
jns
xchg
cmp
in
cwtl
cltd
inc
out
orb
cmp
sub
cltd
xlat
repnz
hlt
xchg
out
add
cmp
mov
pop
ficomps
mov
and
dec
daa
dec
into
out
push
fisttpl
push
jge
mov
cmc
stos
mov
daa
add
popa
push
push
mov
push
fsubrl
push
out
push
aas
in
xchg
sbb
mov
cltd
xor
inc
xorb
xchg
lret
loope
mov
jae
mov
lea
fdivl
loop
ret
push
dec
xor
dec
mov
mov
dec
push
xchg
imulb
pop
cmpsl
lds
dec
aam
add
push
dec
mov
hlt
push
mov
mov
inc
pop
mov
push
mov
lock
and
rol
enter
fbld
nop
fdivrs
and
rcl
sbb
aaa
add
mov
sarb
pushf
adc
inc
cwtl
andl
xchg
in
sub
insb
cmp
pop
jns
cmp
cmp
push
mov
and
push
inc
pop
xlat
mov
jmp
shl
insl
int3
xor
inc
sub
mov
or
lret
pop
sbbl
mull
pop
and
aam
pop
or
sbb
icebp
xchg
sarb
popa
imul
out
imul
or
jbe
insb
and
mov
out
dec
dec
cwtl
xchg
sub
mov
jns
push
push
mov
cmp
dec
das
push
xchg
pop
xor
mov
pop
pop
push
mov
dec
fwait
or
mov
rcl
jbe
inc
sub
in
push
cwtl
outsb
or
xchg
add
fidivrl
sub
lret
cmp
int
dec
pop
ljmp
rcrl
push
fcoml
push
push
inc
ret
and
andl
imul
cli
push
cmp
stc
fldt
mull
movsb
pop
mov
lods
jo
sbb
nopl
jae
iret
add
repz
scas
stc
inc
ret
aaa
insl
ficoms
aaa
fnstenv
fwait
pand
xchg
imul
mov
push
mov
mov
je
mov
lds
es
lcall
jle
insb
int
sbb
and
nop
testb
lock
fimuls
daa
fiadds
dec
out
add
and
popf
outsb
mov
repz
sbb
or
inc
inc
xor
mov
adc
push
rolb
xor
cltd
jle
setp
fwait
add
shrb
stos
mov
rol
add
xor
int
imul
sbb
pop
dec
rol
dec
sub
xor
cmpsl
mov
lret
fimuls
pushf
adc
stos
pop
adc
rol
add
xor
je
fildl
dec
shll
cmp
and
outsb
mov
or
out
sub
xchg
cmp
mov
push
xchg
jmp
mov
repnz
sbb
sbb
lea
xchg
cltd
inc
pop
xchg
dec
and
inc
sbb
lock
and
adc
fwait
or
mov
and
mov
pop
addl
cmc
xchg
out
add
int
sahf
imul
push
pop
cmpb
cmc
jb
pop
xor
movb
pop
add
sub
sbb
xlat
cld
inc
in
repnz
pop
mov
out
cltd
outsl
or
fimull
inc
cld
fstp
pop
xchg
dec
pminsw
inc
cltd
outsb
sahf
push
cwtl
jp
fidivs
pop
call
jae
shll
lds
sbb
xchg
stos
sub
insb
and
push
outsb
jb
cmp
shll
sbb
test
jmp
in
pusha
movsb
cmp
popf
jbe
push
mov
fs
mov
pop
movsb
inc
and
or
sub
dec
xchg
movsb
inc
mov
test
inc
push
mov
or
jg
repz
lret
and
test
les
mov
mov
mov
movw
push
daa
les
dec
xchg
mov
xor
inc
dec
pushf
add
out
movb
cmp
scas
push
in
and
mov
mov
lret
and
dec
js
or
xor
fstl
xor
dec
dec
push
daa
add
hlt
inc
sbb
out
dec
cwtl
inc
inc
xor
cmp
push
xlat
sahf
into
cwtl
mov
aaa
icebp
cltd
ja
or
lea
mov
xchg
fcmovne
pop
into
mov
jmp
inc
dec
test
cmc
loop
ja
lret
and
bound
rcl
movb
or
inc
xchg
movb
push
pushf
mov
movb
shlb
repz
sbb
and
cltd
enter
xor
repz
xchg
lods
or
sub
fwait
enter
dec
push
sbb
mov
pop
xchg
es
push
cmp
sub
inc
cwtl
pop
push
leave
add
repz
push
mov
sbb
pop
frstor
sbb
insb
xor
cmpsl
add
repz
dec
rol
pop
mov
jecxz
or
repz
arpl
mov
jg
inc
es
mov
or
push
in
and
lahf
fwait
inc
out
mov
inc
sbb
hlt
movb
or
push
fcoml
ret
jge
ljmp
data16
push
mov
sbb
inc
and
inc
push
lea
repz
cld
in
inc
jae
aam
sub
mov
sbb
push
popf
mov
and
mov
mov
inc
add
fwait
mov
cmp
inc
jecxz
inc
cmp
inc
mov
aas
jmp
daa
addr16
xor
mov
xchg
sub
pusha
cmp
test
jb
cmp
movb
cmp
in
daa
repz
sbb
dec
sub
or
sub
inc
fwait
inc
fcmovbe
mov
repz
sbb
fadd
add
jbe
sbb
rol
or
icebp
into
mov
inc
push
mov
push
and
outsl
mov
loop
adc
fwait
testb
aad
sub
rcrb
add
cmp
and
jge
es
sbb
ret
mov
sbb
or
sbb
in
xorl
jp
fisubrs
and
push
movups
mov
pop
pusha
cmp
sbb
or
fnstenv
insb
sub
inc
push
in
jge
addr16
xchg
fldcw
mov
xor
clc
and
arpl
push
push
xor
cli
inc
sbb
sub
fists
aaa
fcmovnbe
cmp
push
xchg
or
shlb
fistpl
pop
push
sub
inc
ret
aas
ret
add
mov
jmp
movsl
sub
xchg
pop
push
mov
mov
lods
mov
hlt
cmpsb
sub
test
push
rcll
aaa
jo
sbb
xor
jae
cltd
outsb
mov
shll
xchg
fistpll
mov
cli
sub
and
inc
add
mov
dec
mov
dec
lcall
hlt
inc
sbb
out
dec
lahf
inc
loope
not
xchg
movsb
mov
mov
mov
sub
cmp
adc
pop
mov
out
call
xor
cmpsl
dec
addb
cld
mov
push
cmp
sub
cli
xchg
sbb
jmp
out
dec
inc
dec
fistpll
inc
js
mov
rcl
mov
and
mov
sbb
jge
test
or
xor
ljmp
adc
int
out
lret
mov
sub
fs
or
aad
pop
push
add
jp
insl
popa
lret
mov
leave
mov
push
lock
xchg
xchg
sub
mov
sub
mov
in
adc
pushf
inc
out
add
popa
je
xor
pop
mov
mov
or
repz
cltd
aaa
out
lock
sbbb
xchg
sub
mov
pop
xchg
dec
inc
mov
mov
add
mov
pop
icebp
std
push
imul
dec
imul
int
movsb
push
lds
fisubs
dec
mov
inc
mov
pusha
clc
push
push
jne
ficoms
push
stos
cmp
ficoml
inc
dec
fnstcw
mov
inc
repz
cli
dec
shr
mov
fwait
adc
sbb
je
cld
cwtl
jo
cwtl
js
mov
inc
int
cmc
pusha
pop
dec
inc
sub
sub
cmp
in
sub
inc
sbb
push
popf
add
push
push
icebp
cmc
mov
inc
cld
cmpsl
and
inc
fwait
cmp
lea
inc
cmp
repz
add
xchg
es
and
mov
add
lea
dec
jbe
and
fadds
pop
xchg
inc
cld
cmpsl
push
lret
and
test
adc
sbb
cmpsb
sub
outsb
pop
sbb
push
int3
and
insb
xchg
ja
insb
sub
in
xor
jb
mov
fs
pop
add
pushf
inc
in
aaa
jo
add
inc
and
add
movb
cmp
lods
xor
sub
inc
sbb
mov
or
repz
mov
xchg
lret
sbb
mov
lods
jmp
lea
inc
je
adc
dec
mov
or
movsl
cmp
in
lret
leave
sbb
and
mov
xor
mov
push
dec
out
add
int
inc
cli
push
loopne
fcmovne
insl
xor
mov
push
mov
fildll
fwait
insb
aam
jnp
jae
ret
sbb
sbb
pcmpeqw
ficomps
inc
pop
cld
and
ljmp
sbb
out
jle
xchg
aaa
movsb
push
sarb
cltd
mov
gs
pop
cmp
dec
ret
decb
add
lods
sub
cmp
imul
add
fiadds
inc
cmpl
lods
in
fidivl
jle
sub
push
sti
pushf
fimuls
push
xor
inc
sbb
or
dec
sub
jns
jp
xor
movb
dec
int
inc
xchg
lock
push
sub
mov
stc
sub
push
rolb
dec
mov
sti
fsubl
movsl
xchg
js
mov
aas
inc
xchg
pop
shl
inc
inc
and
sub
in
xor
inc
sbb
fwait
dec
lret
dec
dec
ret
adc
mov
or
inc
sbb
cmp
xor
pop
fists
pushf
adc
mov
rcrb
add
push
test
scas
cmp
or
ja
dec
push
into
mov
repnz
mov
fisttpl
fmuls
ss
addr16
or
mov
xlat
sbb
xchg
scas
dec
fnstcw
nop
lret
repnz
xor
add
xchg
inc
sbb
xchg
adc
repz
cltd
inc
enter
fisttpl
shll
mov
sbb
lods
or
mov
sti
sub
add
push
int
push
push
mov
jae
ds
int3
mov
sbb
jae
adc
iret
xchg
enter
icebp
push
enter
jnp
inc
cmp
cmp
cmp
and
push
leave
std
jne
cmp
cmp
popa
aaa
ljmp
lea
xchg
xor
test
cmp
push
cmp
pushf
inc
lock
xor
mov
gs
or
repz
clc
fs
pusha
pop
or
push
add
jle
jg
adc
mov
cmpsb
enter
shrl
fcoml
pop
pop
ja
hlt
repz
enter
scas
movsb
push
mov
xor
sbb
les
shll
mov
popf
insl
xlat
mov
cmp
mov
repz
sbb
dec
out
fsubrl
icebp
ret
and
or
jmp
dec
mov
add
int
pop
and
adc
mov
jne
fistpl
pop
pushf
jb
hlt
std
repz
rcrl
push
jb
nop
pop
sbb
roll
adc
insl
test
inc
cmp
sub
jecxz
inc
outsb
int
cmp
movsl
sub
xchg
ficoms
aaa
aad
mov
cmc
sub
xchg
cmp
push
dec
mov
inc
adc
stos
pop
push
fistl
ret
int3
ret
jmp
and
data16
xchg
test
sbb
pop
rcll
cmpsb
adc
and
inc
mov
pop
and
push
jno
fnstenv
pop
jne
and
or
repnz
out
into
push
mov
mov
inc
neg
out
and
xor
sub
xchg
jne
mov
and
into
icebp
sti
lods
icebp
add
push
and
adc
ror
iret
adc
add
add
add
xlat
xor
pop
sbb
fcomps
push
fdivrl
jmp
or
ret
ljmp
data16
pop
sbb
add
and
xchg
or
sbb
sub
or
dec
cltd
xlat
dec
xchg
hlt
xchg
out
add
ds
lods
cli
pop
test
and
xor
push
rcrl
aaa
add
mov
lds
insl
pop
cmp
dec
cmp
and
dec
shll
add
add
fstps
mov
stos
lcall
xor
sbb
xchg
sub
push
xor
lret
mov
xor
inc
sub
mov
fidivrs
stos
mov
sbb
pop
pop
xor
and
dec
imul
repz
sub
icebp
xchg
mov
adc
dec
sbb
and
dec
mov
cmp
add
xor
mov
fldenv
dec
mov
int3
pop
call
mov
inc
sbb
test
cmp
arpl
inc
sbb
out
ss
sub
fistl
ja
sbb
fnstenv
pop
xor
and
js
add
add
jmp
xorb
and
imul
sbb
sub
and
cli
out
xor
in
ljmp
mov
sahf
movsl
mov
add
jbe
lret
xchg
inc
cld
cmpsl
sub
jns
cltd
xlat
cmp
cld
xchg
out
add
pop
push
xchg
into
mov
mull
jne
es
fisubrs
in
mov
jne
push
je
push
ds
popf
jae
sahf
xchg
and
mov
xor
je
call
loop
pop
xchg
insb
adc
mov
cmp
push
int
hlt
dec
popa
mov
xchg
das
imul
aad
add
cmc
jp
jge
push
outsb
daa
push
pop
mov
mov
inc
mov
ss
push
pop
imul
pop
mov
jmp
or
mov
mov
lds
jl
jmp
xor
out
scas
arpl
fwait
add
ja
sbb
lds
jle
movsb
rcr
xchg
pushf
jb
mov
ret
push
mov
addr16
std
xchg
jbe
and
fcmovnu
icebp
cld
dec
jle
enter
lods
icebp
xchg
imul
push
adc
rolb
push
rorl
pop
jge
mov
popf
push
rorl
mov
add
rorl
jge
mov
jnp
dec
out
outsb
stos
std
std
and
pop
aaa
fcmovbe
ss
sti
xchg
testb
add
or
pusha
sarb
adc
sbb
inc
sbb
mov
push
pop
aaa
jmp
adc
stc
ds
lret
dec
outsl
mov
fisubrl
sbb
daa
jbe
dec
idiv
jne
std
lgs
jns
mov
cwtl
les
inc
xor
and
and
add
into
lds
aaa
jnp
lahf
and
add
dec
xchg
test
mov
cld
sbb
pushf
mov
or
push
popf
popf
rol
add
dec
cwtl
jb
xchg
fistl
push
xchg
lret
pop
sbb
push
or
pushf
cmp
or
hlt
cmp
mov
pushf
cmp
pushf
pop
add
inc
std
out
cmp
loop
inc
sarl
mov
mov
aas
adc
je
nop
loop
sub
mov
repz
imul
mov
push
sbb
add
aam
sub
int
sahf
sub
and
inc
sbb
mov
dec
inc
dec
pusha
jg
cmpsl
push
loopne
inc
push
and
mov
inc
dec
stos
push
sub
sbb
sub
es
xor
and
pop
js
ret
xchg
lds
add
movb
sub
aaa
loope
lock
rcrl
repnz
push
into
xchg
call
popa
dec
fisttpl
dec
shl
push
xlat
popa
in
pop
cs
out
jbe
push
aaa
fcmovu
sbb
add
and
push
mov
insl
repz
adc
les
add
dec
fwait
loope
loopne
arpl
xchg
cltd
inc
sub
sbb
lret
sub
mov
roll
fimuls
in
pusha
inc
inc
repnz
jbe
and
mov
fcomps
jbe
and
int
lahf
push
mov
or
and
mov
jae
rcll
sbb
in
arpl
ficomps
cltd
mov
and
fwait
or
pop
xor
gs
pushf
inc
out
pop
mov
pop
xor
adc
shll
call
aam
sub
fisttpl
jmp
rol
push
push
mov
fidivs
incb
mov
push
xchg
insl
pop
ffree
cmpsl
mov
dec
xor
mov
mov
fisttps
ret
add
fdivl
ljmp
loopne
imul
imul
mov
fld
add
xchg
pop
cltd
aaa
jecxz
lock
xchg
leave
out
and
sbb
fisttpl
push
push
cmpsb
push
js
inc
mov
mov
in
sub
inc
sbb
gs
add
mov
lds
and
fldenv
and
dec
push
sub
out
icebp
xchg
adc
sub
dec
ficoms
addl
lea
cmp
pop
xchg
add
xor
clc
jg
xor
fstpt
xchg
xor
push
mov
rol
add
je
mov
repz
sbb
adc
mov
add
aaa
fdivl
xchg
xchg
xchg
popf
nop
xorb
push
mov
mov
mov
ficompl
inc
enter
push
or
insb
and
pop
imul
push
or
clc
mov
les
jns
sub
push
lds
dec
cltd
xlat
lods
into
xchg
in
out
add
icebp
push
mov
sub
xor
mov
and
outsb
mov
icebp
mov
push
shlb
sbb
outsb
dec
aad
sub
push
rcrl
mov
add
ficoms
xlat
test
sbb
cmp
cs
icebp
movsl
fists
xchg
fistpl
mov
clc
daa
insl
mov
push
sbb
addr16
pop
dec
scas
stc
add
mov
aaa
jmp
adcl
or
xor
in
mov
dec
orl
jge
dec
fwait
mov
pop
mov
shrl
cmp
mov
mov
or
aaa
frndint
push
mov
xor
nop
jg
cltd
outsl
or
rcl
ficoml
in
cld
mov
sub
dec
pminsw
dec
jne
outsb
dec
ret
lds
mov
jg
cmp
dec
pop
mov
mov
mov
mov
jmp
or
adc
imul
mov
xchg
and
pop
mov
pop
mov
pop
dec
add
dec
movsl
xchg
aam
pop
mov
in
scas
push
and
inc
push
popa
inc
jbe
sub
jp
mov
xor
outsl
pushf
push
rorl
rol
add
into
lock
out
add
aaa
dec
sub
adc
push
dec
push
fdivr
pop
test
dec
mov
mov
lret
pop
cmp
sbb
sbb
iret
xchg
sub
mov
pop
mov
in
insl
out
inc
sbb
xchg
aad
ret
sbb
ret
inc
ret
adc
enter
cli
inc
sbb
push
outsb
ficoms
aaa
xlat
mov
daa
jbe
sbb
lds
sub
loope
test
cmpsl
mov
pushf
mov
sbb
adc
pusha
inc
sbb
pop
dec
jmp
shrl
or
cli
xchg
mov
xor
faddl
data16
xchg
xor
stos
out
fimull
pop
ja
push
sti
pushf
fisubrl
xor
push
jne
lods
pusha
adc
js
add
movsb
pushf
js
mov
adc
rcll
dec
jo
and
mov
pop
ss
movsl
roll
mov
dec
push
cwtl
pop
mov
add
sbb
stos
aam
inc
dec
lock
bound
dec
adc
dec
test
mov
adc
mov
cli
fsubrs
cmpsl
xlat
sub
js
jg
mov
xor
xchg
daa
rcll
add
jg
or
les
mov
lods
movsb
mov
jne
cmp
mov
cmp
cltd
ret
icebp
lret
cmp
adc
nop
in
sub
inc
sbb
test
and
jmp
lret
jno
fwait
adc
mov
jno
xchg
jp
push
jp
or
sbb
aam
dec
and
inc
fimuls
ss
push
pop
mov
push
dec
pop
jg
push
push
mov
dec
mov
fisubs
xchg
mov
pop
insl
mov
in
push
mov
stc
mov
ss
jo
mov
pop
cmp
sub
and
int
cmp
jl
js
cmp
cmp
repz
sbb
ficoms
aaa
cmp
psrad
in
and
sub
and
cs
adc
repz
sbb
add
aaa
fdivrs
add
ret
sbb
pop
cmp
cmc
je
inc
xor
mov
insb
decb
aas
sbb
and
add
lret
inc
cs
subb
cwtl
inc
inc
dec
pusha
lock
inc
shlb
pushf
push
bound
cmp
aas
icebp
iret
jno
mov
dec
fnstsw
and
mov
jb
int
mov
scas
jecxz
mov
adc
xchg
rcll
push
mov
into
gs
sbb
loope
pushf
or
movb
push
pushf
not
movb
or
repz
test
sar
jp
fisubrl
jl
insl
out
push
mov
xor
xchg
movsb
sub
mov
xchg
cmp
out
inc
inc
push
mov
add
jle
repnz
push
aaa
imul
loopne
or
mov
imul
test
add
xor
int3
mov
xchg
pop
mov
mov
push
les
push
rol
add
dec
cmc
pop
stos
sub
lock
push
adc
or
aaa
xchg
sub
add
inc
add
xlat
movb
sub
dec
rol
jns
fildll
pop
mov
aam
xor
in
push
lds
insl
pop
mov
inc
xor
int3
imulb
mov
mulb
sarb
rcrl
aas
sbb
loope
rcrb
int
mov
data16
out
fnsave
fistpl
adc
pop
loope
movsb
jmp
add
ret
pop
pop
leave
fstpt
das
data16
pop
mov
sbb
pop
xor
sbb
push
push
inc
ret
stc
dec
rol
add
or
popf
loopne
jne
shll
rolb
stos
add
gs
add
dec
push
inc
out
mov
cmpsl
aas
push
xchg
fisubrl
or
ret
pop
adc
push
cmp
inc
rol
mov
add
inc
dec
rol
outsl
jecxz
cltd
dec
sub
dec
fisttpl
dec
shll
add
mov
xchg
sti
test
cs
leave
outsb
popf
push
and
dec
mov
xor
test
out
add
mov
scas
lret
pop
pusha
add
pop
negl
pop
and
xor
push
cmpsb
add
xor
inc
adc
xlat
mov
loop
mov
fcmovu
ret
jne,pt
dec
or
xchg
pop
ja
insb
and
add
je
loop
jmp
clc
push
jb
rolb
xchg
mov
in
dec
sbb
movsl
dec
rol
pop
push
jmp
jp
xor
cmp
mov
dec
push
jp
out
xchg
ficomps
mov
cmp
mov
dec
test
inc
xchg
jmp
fstpt
inc
adc
rep
jmp
scas
xchg
sub
in
stos
mov
lds
push
sub
add
faddp
add
mov
divb
mov
push
jne
and
mov
mov
dec
repnz
jbe
sbb
cltd
inc
dec
dec
pop
lock
aam
add
filds
dec
dec
dec
in
cmp
aas
nop
mov
and
ja
insl
sub
cmc
insb
push
mov
jnp
xor
jp
loope
out
xlat
pushf
fsubrs
test
adc
cmp
jl
jecxz
dec
push
repz
adc
mov
xchg
inc
jg
rcl
lret
dec
inc
mov
mov
shrb
mov
adc
mov
push
jl
add
and
popf
movsl
cltd
mov
cmp
dec
and
std
or
xlat
movb
sub
jl
mov
fmuls
int3
mov
inc
shll
xchg
dec
rcl
xchg
repz
sbb
inc
daa
into
pop
movb
dec
push
lock
jo
out
push
add
pop
push
scas
arpl
out
inc
imul
test
mov
pop
mov
lds
xor
dec
sbb
jo
mov
outsb
sub
jne
push
ret
jb
push
les
iret
in
movb
xchg
push
xchg
mov
hlt
data16
ljmp
dec
out
pop
jl
fcomps
ja
and
int
cmp
xchg
push
mov
cmp
or
repz
mov
sub
into
out
adc
mov
add
pop
or
jg
jle
shlb
mov
and
add
cli
and
jae
ret
and
adc
mov
outsb
mov
xchg
ss
popl
dec
fidivrl
xchg
pop
add
fstp
mov
and
js
sbb
sub
cli
jbe
sub
inc
sbb
lahf
test
ficomps
aaa
fdivs
fsubs
into
add
jp
sti
aad
add
dec
lret
loop
andb
inc
mov
loope
daa
ljmp
ret
notl
xchg
daa
cmpsb
and
data16
push
mov
sbb
jmp
push
lret
cmp
jne
ret
sbb
mov
loope
dec
shll
cmp
repz
sub
mov
test
mov
mov
xlat
sbb
fwait
sub
and
jp
insl
gs
daa
push
lods
outsb
lcall
out
inc
aaa
lds
push
lods
mov
adc
rorb
mov
int3
aas
sbb
adc
sub
and
mov
jecxz
pop
cmp
jne
push
lahf
sbb
dec
cltd
aas
inc
test
pop
cmp
cs
cli
movsl
jo
sbb
cwtl
cld
and
int
cmp
inc
add
repnz
and
add
mov
jp
jmp
xchg
cmc
sub
pop
adcl
les
xchg
inc
ljmp
pop
pop
mov
add
add
jp
mov
cld
push
mov
mov
cmc
inc
xchg
sub
and
mov
add
in
out
push
inc
daa
and
mov
xor
mov
fwait
pop
mov
bnd
or
pop
jg
dec
adc
pop
push
mov
mov
fcomip
je
inc
inc
ret
adc
faddp
adc
mulb
pop
data16
arpl
cs
push
das
sub
sbb
push
insl
adc
pop
xchg
outsb
bound
imul
add
adc
xchg
sahf
inc
add
outsl
mov
jne
shll
test
dec
push
es
leave
inc
ljmp
mov
pop
ret
sub
dec
dec
aaa
jg
sti
repz
shll
ficoms
lahf
mov
inc
gs
xor
fidivrl
xor
fdecstp
pop
mov
fimuls
xlat
leave
inc
out
stos
cmpsl
jmp
scas
push
shlb
je
adc
push
mov
push
xchg
pushf
or
jns
inc
jge
cmp
arpl
lcall
add
cli
hlt
jge
addr16
ret
mov
das
popa
mov
mov
insl
repz
cs
xchg
ret
mov
loop
std
push
lods
sub
fmull
cmpsl
sbb
mov
scas
or
lods
mov
ljmp
push
jnp
xor
xlat
xchg
inc
call
dec
sbb
fcoml
xor
and
mov
xchg
pop
repnz
ljmp
int
lea
or
push
cltd
ret
inc
add
dec
outsb
int
inc
and
dec
rol
add
xchg
aaa
out
lock
push
fwait
adc
mov
lcall
jmp
jle
sbb
pextrw
js
inc
ret
cli
dec
rol
add
or
xorb
cwtl
jp
insl
pop
xor
cmpsl
or
lods
or
sub
push
fwait
sahf
cmp
dec
aam
or
dec
fst
scas
inc
repz
ret
sub
sbb
push
dec
imul
jne
das
fxch
xchg
inc
ljmp
xor
int3
js
xchg
leave
sub
add
shll
pop
aas
jmp
adc
and
fwait
add
cld
rclb
push
flds
inc
adc
stc
cli
scas
pop
stc
mov
mov
iret
xchg
cltd
je
gs
into
add
dec
movsb
dec
pop
push
inc
insl
repz
dec
daa
dec
push
jg
mov
nop
das
daa
cmp
mov
call
pop
jp
pop
add
sub
pop
push
sbb
cmpsb
aas
push
xchg
aam
or
sub
sbb
in
dec
jne
or
xor
add
int3
mov
lds
je
mov
jne
fistps
pop
out
and
lahf
xchg
das
sub
lods
fwait
or
jae
mov
out
in
sbb
push
jo
pop
xor
push
dec
loop
scas
and
inc
jo
xchg
cmp
repz
xchg
orb
adcl
cmp
mov
loopne
adc
rcr
pop
push
fstpt
lods
aam
sub
mov
lea
repz
adc
mov
xor
aad
sub
mov
ljmp
sbb
hlt
push
scas
in
and
mov
dec
loopne
test
out
ljmp
mov
sub
xchg
jae
insl
pop
mov
leave
add
mulb
ss
loopne
nop
loop
and
in
cwtl
cli
inc
and
pop
xchg
jmp
jp
mov
and
or
int3
or
outsl
adc
js
xchg
or
adc
nop
and
fwait
daa
add
cmp
out
xor
or
leave
xchg
mov
fcomp
push
jb
inc
mov
xchg
int3
out
and
mov
nop
sete
or
fisubl
cmp
push
xor
push
mov
rcrl
or
push
jle
sub
mov
inc
fwait
rcl
rolb
les
pop
pop
xor
or
jle
test
addl
mov
mov
and
popf
sbb
inc
mov
add
repz
rol
int3
hlt
ficoms
aaa
xlat
jmp
and
incl
pavgw
repz
push
or
repz
push
and
sub
dec
rol
pop
ds
ss
pusha
mov
inc
mov
push
cmpsb
js
mov
fcoms
int3
ret
adc
dec
mov
cmpsb
pop
and
imul
sub
mov
lret
dec
inc
mov
or
mull
add
jecxz
movsl
roll
jo
mulb
outsb
clc
in
shrl
add
cmc
mov
cwtl
or
pcmpgtb
lcall
xchg
jns
std
loop
sub
out
xchg
lcall
aaa
dec
fidivrl
outsl
dec
in
in
pop
mov
dec
insb
adc
jno
xlat
ljmp
shrl
pop
ja
and
imul
in
lock
lea
fbstp
add
sti
sub
repz
xchg
cltd
inc
mov
sbb
mov
gs
or
adc
fnstsw
mov
add
push
cmp
cs
add
pushf
sbb
or
repz
jp
bound
lock
sbb
dec
mov
sbb
test
add
push
popf
jb
sub
decl
adc
and
add
mov
add
xchg
jge
adc
rclb
xor
.byte
.byte
and
