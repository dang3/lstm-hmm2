and
rol
xor
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
push
nop
xor
mov
inc
xchg
call
xchg
jmp
nop
nop
push
mov
or
rol
or
mov
jmp
shr
and
add
lea
nop
nop
nop
nop
nop
nop
sub
push
pop
rol
mov
mov
call
mov
cmpl
xchg
jmp
push
push
pop
push
mov
movl
mov
push
shr
mov
or
or
shr
dec
sub
shr
and
mov
or
inc
dec
test
jne
pop
and
ror
mov
mov
call
cmp
xchg
jne
xor
xchg
jmp
mov
xchg
add
mov
add
cld
add
xchg
test
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
jle
jmp
jne
xor
xchg
ret
nop
nop
nop
nop
push
mov
call
nop
sub
and
shr
and
and
pop
jmp
push
pop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
jne
xor
xchg
jmp
push
addr16
jmp
xor
or
rol
shr
shl
pop
call
xchg
push
nop
add
or
and
mov
jmp
nop
nop
nop
nop
nop
push
cld
sub
ror
sub
mov
mov
sub
xchg
jmp
je
push
xchg
mov
shl
add
shl
mov
mov
jmp
nop
nop
nop
nop
nop
nop
nop
push
xchg
xor
xor
ror
or
mov
sub
addr16
mov
mov
mov
push
pop
andl
xchg
push
addr16
add
xchg
xor
xor
and
sub
shl
mov
jmp
shl
add
dec
mov
or
mov
shr
nop
nop
nop
nop
nop
nop
nop
nop
add
mov
and
push
pop
mov
cld
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
push
pop
jmp
nop
nop
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
xor
pop
mov
mov
mov
mov
jmp
nop
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
pop
mov
mov
mov
push
pop
mov
mov
jmp
mov
mov
jmp
nop
nop
nop
nop
nop
nop
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
shr
sub
pop
mov
nop
mov
addr16
mov
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
cmpl
cld
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
push
mov
push
xchg
push
addr16
push
addr16
add
mov
push
push
pop
call
xchg
and
shl
add
mov
jmp
mov
mov
jmp
nop
nop
nop
push
cld
shr
mov
push
mov
call
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
push
xchg
push
mov
pushl
nop
call
mov
push
popl
call
addr16
ror
xor
shr
add
shl
mov
jmp
push
mov
push
mov
push
mov
push
mov
test
nop
nop
nop
nop
nop
jmp
mov
nop
nop
nop
nop
nop
jne
rol
mov
movzbl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
nop
mov
mov
mov
mov
movl
mov
jmp
and
mov
mov
xchg
jmp
nop
nop
nop
push
mov
sub
mov
and
nop
sub
mov
mov
and
add
jmp
lea
nop
nop
nop
nop
call
xchg
test
nop
nop
nop
nop
nop
nop
nop
jne
sub
add
add
mov
or
rol
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xchg
mov
xchg
andl
mov
push
nop
xor
addr16
jmp
or
mov
and
add
add
push
xor
and
or
sub
push
dec
xor
pop
sub
rol
ror
ror
sub
dec
test
jne
pop
lea
call
xor
xchg
mov
nop
mov
mov
mov
xchg
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
dec
add
inc
mov
push
mov
push
cld
and
mov
rol
mov
jmp
mov
mov
and
sub
add
or
and
mov
test
nop
nop
nop
nop
nop
nop
nop
jmp
add
rol
mov
and
mov
jmp
sub
mov
mov
mov
test
nop
nop
nop
nop
nop
nop
jne
xor
mov
jmp
push
cld
call
nop
movl
push
pop
jmp
jne
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shr
sub
dec
xor
ror
pop
mov
xchg
mov
mov
mov
mov
and
sub
sub
sub
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
pop
push
push
pop
pushl
mov
pushl
mov
call
xchg
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pushl
shl
add
shr
shr
mov
pop
pushl
inc
mov
ror
sub
pop
rep
nop
nop
nop
nop
nop
shl
and
add
add
jmp
push
nop
pushl
cld
call
push
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
je
lea
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
xchg
push
xchg
push
push
pop
call
addr16
jmp
nop
nop
nop
nop
mov
mov
call
mov
pushl
shl
xor
rol
pop
jmp
jne
rol
ror
add
pop
and
sub
shl
pop
sub
pop
add
pop
call
mov
jmp
add
mov
pusha
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
add
add
mov
jmp
nop
add
add
cmp
incl
add
leave
sub
pop
pushl
cld
push
push
pop
pushl
xchg
push
xchg
call
cld
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
add
add
mov
add
xchg
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
push
addr16
rol
rol
rol
add
pop
cmp
xchg
mov
nop
nop
nop
nop
jmp
cmpb
mov
je
cmpb
xchg
je
pushl
sub
and
add
inc
mov
pop
jmp
jmp
lea
nop
nop
nop
nop
nop
nop
inc
xchg
push
xchg
mov
mov
mov
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
nop
jmp
cmpl
mov
setne
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
movl
nop
nop
nop
nop
nop
nop
nop
nop
xor
nop
nop
nop
nop
nop
nop
nop
nop
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
shr
or
or
xor
mov
mov
mov
andl
addr16
add
cld
mov
xchg
test
nop
nop
nop
nop
nop
nop
jmp
sub
cld
shr
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
jle
and
mov
movzwl
nop
nop
nop
nop
dec
dec
rol
mov
and
xchg
jmp
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
jbe
lea
nop
nop
nop
nop
jmp
mov
mov
jmp
test
nop
nop
nop
nop
nop
nop
nop
nop
je
call
xchg
jmp
je
mov
mov
inc
or
mov
movsbl
nop
nop
nop
nop
nop
nop
nop
nop
rol
nop
nop
nop
nop
nop
nop
xor
addr16
incl
addr16
jmp
mov
shl
dec
pop
and
or
dec
mov
xor
xchg
nop
nop
nop
nop
nop
rorl
nop
nop
nop
nop
add
cld
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
mov
and
xor
or
and
pop
sub
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
xchg
jne
pushl
ror
ror
mov
shr
pop
and
mov
add
nop
add
xchg
jmp
xor
and
mov
mov
xchg
add
and
xor
shr
mov
add
nop
mov
xchg
jmp
push
xchg
call
mov
add
xchg
push
popl
movb
nop
movl
xchg
call
push
pop
popa
nop
nop
nop
nop
nop
nop
nop
jmp
xchg
jmp
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
call
push
pop
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
push
xchg
xor
cld
shl
ror
and
pop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
call
xchg
dec
mov
lea
nop
nop
nop
nop
nop
jne
test
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
je
jmp
add
mov
inc
push
pop
jmp
add
ror
xor
sub
mov
inc
or
mov
mov
add
mov
jmp
xchg
test
pusha
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
addr16
popa
nop
nop
nop
nop
jmp
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rep
nop
nop
nop
nop
nop
dec
xor
mov
add
mov
movzwl
nop
nop
nop
nop
nop
incl
xchg
add
mov
cmp
push
pop
jl
rol
xor
ror
sub
inc
mov
jmp
shl
inc
or
mov
sub
xchg
mov
xchg
mov
mov
jmp
movb
mov
incl
addr16
jmp
shl
sub
and
and
mov
jmp
cld
movsl
flds
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
jne
add
xor
sub
and
sub
mov
cmp
xchg
je
jmp
push
jl
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
incl
addr16
xor
push
pop
inc
xchg
xor
and
xor
mov
and
xchg
inc
xchg
inc
mov
jmp
incl
addr16
sub
mov
cmp
mov
jl
jmp
dec
nop
nop
nop
nop
jne
add
cld
cmpl
xchg
jne
add
pop
jmp
pushl
add
mov
shr
or
rol
pop
mov
ror
dec
rol
mov
add
andl
nop
pushl
add
inc
and
or
xor
pop
add
xchg
mov
xchg
and
or
mov
mov
add
nop
cltd
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
xchg
add
mov
jmp
shr
nop
nop
nop
nop
nop
je
test
nop
nop
nop
nop
nop
je
add
mov
or
add
mov
mov
jmp
xor
xchg
jmp
sub
shl
mov
add
mov
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xchg
add
xchg
xor
and
shl
sub
add
pop
xor
inc
xor
pop
sub
pop
jmp
ret
cli
fsubl
ret
inc
and
mov
and
sub
xor
mov
mov
xchg
add
mov
rol
add
dec
pop
push
popl
add
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xchg
mov
xchg
incl
xchg
dec
xchg
mov
nop
nop
nop
nop
nop
nop
nop
jne
jmp
jmp
cmpsb
xor
leave
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sar
nop
nop
nop
nop
nop
nop
nop
nop
shr
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
jmp
or
clc
mov
mov
nop
jmp
call
mov
jmp
cmp
jle
mov
nop
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
and
shr
and
and
mov
mov
xchg
sub
push
pop
sub
mov
jmp
jo
roll
nop
jmp
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
jmp
loop
mov
test
add
cmp
mov
jne
lea
nop
nop
nop
nop
call
mov
jmp
rcrb
sub
inc
mov
mov
mov
mov
sub
cld
decl
nop
nop
nop
nop
nop
nop
nop
jne
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
jmp
xchg
rcl
test
nop
nop
nop
nop
nop
nop
nop
je
rol
add
or
mov
sub
cld
add
and
xor
or
dec
mov
mov
cld
incl
addr16
dec
xchg
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
or
push
jle
sub
xor
mov
add
add
shr
rol
mov
add
xchg
add
mov
dec
nop
nop
nop
nop
nop
jne
jmp
cmp
jl
jmp
xlat
cltd
xchg
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
rorl
nop
nop
nop
nop
nop
nop
nop
nop
xor
mov
inc
add
mov
xor
nop
jmp
rorb
xchg
add
add
sub
mov
jmp
dec
xchg
dec
xchg
ror
or
rol
mov
movzbl
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
inc
out
add
mov
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
push
addr16
pushl
xchg
call
mov
jmp
scas
rolb
loopne
nop
nop
nop
nop
add
xchg
incl
mov
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
shr
mov
call
mov
jmp
lcall
xchg
call
xchg
test
nop
nop
nop
nop
nop
nop
nop
je
shl
mov
sub
sub
and
mov
call
mov
jmp
mov
jge
add
add
add
jmp
andl
and
or
xor
mov
mov
cld
jmp
orl
xchg
ror
or
mov
xor
mov
pushl
dec
and
pop
rep
nop
nop
nop
nop
nop
nop
nop
jmp
xchg
aaa
or
add
jmp
je
pushl
addr16
call
mov
pushl
xchg
call
addr16
mov
shl
xor
mov
jmp
mov
add
add
inc
xchg
cmp
push
pop
jae
inc
cld
inc
addr16
test
nop
nop
nop
nop
nop
nop
je
mov
mov
jmp
aam
pop
test
nop
nop
nop
nop
nop
je
xor
mov
xor
and
mov
add
mov
sub
xchg
jmp
shr
shr
dec
mov
mov
sub
addr16
jmp
mov
and
shr
sub
dec
xor
mov
sub
xchg
mov
nop
incl
mov
jmp
or
mov
jmp
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
jle
mov
mov
rol
rol
ror
or
mov
movzwl
nop
nop
nop
nop
nop
shr
xor
and
xor
ror
mov
jmp
push
mov
cld
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
mov
xchg
xor
xchg
inc
xchg
jmp
jmp
adc
out
lock
cmp
addr16
jne
and
mov
jmp
xchg
sahf
and
mov
mov
sub
inc
mov
mov
mov
xchg
incl
cld
incl
xchg
mov
nop
xor
mov
jmp
jg
je
or
add
mov
jmp
out
xor
xchg
je
ror
and
xor
mov
add
pop
sub
mov
shl
pop
leave
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
xchg
inc
mov
add
addl
xchg
nop
nop
nop
nop
nop
decl
nop
nop
nop
nop
nop
nop
jne
add
addr16
cmpl
xchg
jne
pushl
nop
nop
nop
nop
nop
nop
nop
nop
inc
rol
sub
pop
nop
nop
nop
nop
nop
mov
xchg
mov
xchg
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
push
mov
call
xchg
and
dec
pop
push
xchg
mov
xchg
call
mov
mov
cld
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
dec
xor
mov
shl
mov
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
dec
add
add
or
mov
add
mov
push
mov
call
addr16
nop
nop
nop
nop
nop
cmp
addr16
mov
nop
nop
nop
nop
je
add
xor
sub
or
mov
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
nop
jne
shl
mov
rol
mov
rol
ror
add
mov
or
mov
add
xchg
add
push
pop
jmp
nop
nop
nop
nop
nop
jns
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
pushl
xor
mov
or
sub
and
pop
add
mov
add
push
pop
push
push
pop
nop
nop
nop
nop
nop
pushl
mov
call
cld
mov
mov
add
xchg
nop
nop
nop
nop
nop
add
xchg
mov
ror
shr
or
and
mov
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
jne
add
xchg
cmpl
nop
jne
nop
nop
nop
nop
nop
pushl
nop
nop
nop
nop
nop
sub
pop
nop
nop
nop
nop
nop
mov
xchg
xor
mov
mov
rol
and
ror
ror
and
add
mov
push
pop
cmp
cld
jne
mov
mov
nop
nop
nop
nop
nop
add
xchg
inc
inc
and
mov
xor
pop
mov
mov
pushl
sub
mov
dec
dec
dec
pop
add
mov
nop
nop
nop
nop
nop
sub
or
mov
pop
xor
pop
dec
shl
dec
mov
sub
and
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpsl
in
cmc
rol
xchg
ficompl
ret
add
dec
int
lds
lods
cmp
outsl
subb
xor
lods
jno
fwait
pusha
adc
sub
cltd
pop
lret
stc
pop
push
or
das
repz
gs
add
es
ret
insl
adc
bound
out
or
daa
popa
stos
test
mov
and
xor
fwait
cmp
add
stc
xchg
push
xorl
and
orl
mov
jnp,pt
inc
mov
push
movsl
stos
add
or
xchg
cmpsb
sbb
ss
in
xchg
shl
push
lods
cmp
pop
fwait
cltd
or
xchg
je
hlt
inc
test
and
sbb
mov
xchg
addl
cli
bound
pop
icebp
adc
add
inc
cltd
dec
imul
jo
push
out
cmp
push
subb
mov
es
mov
mov
jae
jmp
mov
jae
out
mov
clc
xchg
jl
adc
push
pop
lret
pop
jmp
imul
bound
out
fdiv
push
jle
int
add
dec
adc
mov
mov
push
mull
fwait
mov
mov
sub
sbb
xor
lock
or
mov
imul
shlb
fs
out
jmp
sub
das
je
pop
fldt
jo
dec
addr16
mov
pop
out
sbb
leave
xor
mov
test
and
enter
xor
add
cmp
int
aad
xchg
dec
mov
jmp
dec
cltd
push
fisttpl
mov
in
mov
rclb
push
call
outsl
adc
sqrtps
stc
roll
imul
sub
lock
cmp
sbb
movsb
dec
sbb
jle
rcll
rclb
pop
pop
scas
ficompl
nop
inc
push
push
scas
hlt
xchg
jne
mov
xor
or
mov
jnp
ja
jno
aaa
mov
dec
cmp
xor
in
lds
sti
out
clc
fcomip
loop
jl
sarl
out
mov
mov
mov
or
dec
sbb
pop
or
out
push
cmp
inc
fxch
sub
je
bswap
popa
loop
lret
dec
jecxz
jo
jae
out
clc
and
cld
imul
out
mov
sub
cmp
addr16
test
push
stc
sbb
push
faddl
mov
data16
dec
and
adcb
bound
sbbb
les
jg
push
sub
sbb
dec
dec
punpcklbw
push
jl
notl
roll
jle
inc
dec
lods
dec
xorb
lods
jbe
adc
sbb
sbb
aaa
rcr
sub
faddl
or
pusha
inc
cmp
add
xor
and
pop
test
xchg
mov
xchg
mov
jb
mov
jp
or
rorb
int
cmpl
lret
inc
jecxz
out
pusha
in
jbe
ljmp
sub
cltd
jne
out
mov
inc
das
and
lods
xorb
popf
adc
dec
jmp
sbb
lods
adc
subl
fsub
push
test
ja
sub
xor
std
gs
ud0
sbb
mov
push
imul
pop
xor
mov
ret
hlt
out
sbb
sub
fisttpll
mov
shrb
xor
xorl
add
cwtl
jecxz
inc
cmp
inc
popa
jge
or
inc
xchg
fcompp
cli
adc
sbb
les
addr16
add
bound
mov
mov
pop
mov
push
pop
inc
int
pop
pop
dec
mov
fdivrs
sbb
pop
ss
lods
push
imul
rorl
xchg
jae
in
insb
shl
testl
jo
mov
jge
clc
lahf
jo
rcll
push
scas
lods
mov
push
rolb
sti
jnp
and
movsl
imul
add
js
repz
jnp
cmp
push
xchg
mov
cli
jecxz
addr16
stc
push
mov
sub
ja
in
pop
jle
or
movsl
lcall
lret
es
adc
jmp
add
loope
jb
in
lahf
push
shl
cmp
xor
addb
loope
mov
int
adc
or
jge
int
sbb
dec
gs
nop
call
les
movsl
sbb
pop
mov
loop
lds
sbb
push
xlat
jp
mov
xor
test
mov
jno
lret
movsb
adc
movsl
dec
mov
or
lret
mov
nop
pop
mov
mov
jmp
jae
mov
stc
mov
push
loope
scas
or
fcmovnb
lds
xchg
and
or
or
and
jg
adc
inc
insb
pop
add
icebp
stos
ds
inc
or
push
and
mov
sub
lds
xor
pop
hlt
or
mov
icebp
out
testb
repz
loope
sub
dec
js
adc
sub
popa
paddd
jp
jae
lret
mov
adc
div
jg
nopl
push
and
mov
pop
dec
dec
fistpl
xchg
push
inc
and
rol
outsb
pop
mov
in
mov
inc
pop
cmp
jno
loop
mov
mov
cltd
mov
fmul
cmpsb
dec
fiadds
je
cmp
lret
jl
aaa
xchg
mov
adc
fdivs
out
scas
jns
cmp
and
jnp
xchg
inc
cmp
loop
xchg
fcmovnb
inc
pop
fcomps
cmpsl
cmp
ret
mov
outsb
jo
fbld
sarb
push
imul
pop
orb
dec
add
inc
push
mov
adc
hlt
mov
mov
sub
or
fs
xor
and
aaa
xor
dec
mov
xlat
mov
sbb
je
sub
aas
hlt
bound
mov
fs
bound
aaa
and
mov
pop
out
mov
pop
or
inc
jnp
addr16
pop
sbbb
inc
add
push
sub
sbb
dec
xor
js
add
iret
cltd
xchg
push
filds
adc
and
inc
cmc
std
imul
dec
jl
movsl
dec
mov
xor
sub
cmc
add
inc
mov
cmp
pop
arpl
enter
ret
dec
aaa
call
iret
lods
fldl2e
mov
pop
jmp
mov
adc
push
sbb
mov
pop
lcall
inc
out
int3
or
lods
cmpsb
add
inc
outsb
sbb
repnz
push
mov
testb
xor
dec
aaa
out
dec
icebp
mov
or
lods
dec
loope
mov
int3
addb
movq
cmp
clc
adc
xor
add
das
mov
and
jg
je
sbb
push
shlb
fisubl
andl
sub
insb
push
xchg
inc
daa
dec
xchg
popf
jecxz
sbb
or
insl
ja
xchg
push
jb
aam
out
xor
fstl
fisubl
jecxz
in
enter
cmc
cmpl
ret
xorb
mov
cmp
push
add
pop
gs
jno
xor
pop
push
ficoms
pop
aaa
aad
shlb
mov
push
fwait
pushf
les
pop
jo
out
fiadds
inc
mov
dec
arpl
xchg
cmp
push
cld
mov
std
jno
dec
and
lock
imul
push
mov
pop
insb
xchg
hlt
repz
mov
cmpsb
scas
clc
das
call
xchg
add
mov
dec
nop
push
aas
bsf
cmpsb
setne
popa
mov
insb
mov
iret
pop
and
fcoms
push
dec
pop
or
mov
adc
out
ja
scas
push
pop
loopne
jbe
push
iret
lods
out
jo
scas
xchg
in
inc
cmp
pop
add
gs
jle
outsb
xchg
add
dec
push
stos
push
decl
hlt
test
dec
cltd
adc
shl
inc
daa
add
inc
das
popa
mov
imul
std
ret
dec
div
aas
cmp
pop
aaa
pop
cmc
in
pusha
pop
out
inc
sub
push
sub
repz
mov
add
push
lahf
jle
lods
mov
xchg
cltd
mov
jb
xchg
lret
xor
idivl
lds
hlt
loopne
orb
jle
ja
data16
xor
inc
or
iret
ljmp
xchg
add
jae
test
jne
mov
add
and
rclb
adc
xchg
mov
out
jle
cmc
cli
cmc
imul
mov
imul
and
push
stos
or
mov
push
jno
adc
cmpsb
add
xor
add
das
rcrl
imul
push
dec
rol
das
pop
xchg
mov
jl
sub
clc
flds
in
mov
and
ret
dec
or
adc
inc
jb
and
fisubrl
js
aad
or
insb
and
andl
sub
pop
outsb
ss
loope
mov
fidivs
fldcw
push
push
xor
popa
lret
dec
testl
incb
jge
sub
push
mov
fisubrs
stos
mov
into
ja
pop
push
scas
test
aas
mov
dec
pusha
jns
inc
mov
push
lahf
iret
jb
sahf
mov
inc
cmpsl
mov
pop
loop
jecxz
pop
neg
xchg
ds
ljmp
and
js
cmpsl
popa
xlat
pop
fdivs
pop
inc
int3
or
or
add
fcmovbe
mov
mov
into
test
jle
xchg
inc
iret
and
xchg
push
stos
dec
mov
adc
test
xlat
jo
iret
ss
xor
int
jp
and
pop
mov
pop
push
shrl
sub
mov
add
sub
push
aaa
fldenv
shl
movsb
loope
hlt
cltd
lock
gs
sub
mov
xchg
push
cli
fsubs
repz
pop
xor
outsl
push
in
mov
lock
add
mov
pop
sbb
adc
es
xchg
sub
cmc
jnp
cmp
push
ret
jecxz
loopne
aaa
cld
push
pop
in
mov
push
stos
or
pushf
call
adc
iret
jp
or
inc
and
mov
ss
push
mov
stos
mov
imul
addl
sbb
cmp
mov
sti
mov
add
iret
adc
in
adc
sbb
imul
ret
xor
sub
inc
mov
push
leave
leave
sbb
cmp
rclb
mov
push
add
sbb
push
push
addl
inc
jbe
add
inc
mov
xor
cmp
mov
js
lods
adcl
movsl
jg
call
enter
mov
shl
jo
dec
pop
push
repz
xor
cmpsl
popf
fadds
subb
and
inc
mov
pop
dec
cwtl
int
inc
xor
xor
xchg
pop
inc
fsts
lock
pop
push
repz
push
mov
sbb
pushf
lret
sbb
pop
into
lods
int3
or
dec
sub
std
mov
mov
aam
dec
xchg
cmc
fidivs
sarb
lcall
adc
jl
inc
fbld
leave
ljmp
loop,pt
clc
adc
dec
in
aaa
sti
push
sbb
jne
stos
jno
imul
sub
test
js
das
ss
movsl
sahf
mov
push
shlb
arpl
fldt
mov
and
jl
out
jae
cmp
cs
push
jg
std
push
not
or
fdivs
cmc
sbb
mov
cmp
mov
and
fbstp
mov
loopne
outsb
movsl
jmp
fsub
mov
add
sub
fcompl
cmp
push
adc
mov
out
data16
scas
cli
loopne
pop
lds
je
mov
xchg
rclb
daa
sub
addr16
xchg
mov
pop
test
xchg
comiss
insl
imul
lods
aaa
fs
cmp
js
mov
in
loop
pop
fidivl
cld
pop
mov
or
aam
sti
xchg
daa
mov
cmp
test
out
pop
loopne
mov
jg
test
incb
xor
xor
adc
adc
pop
pop
add
cmp
mov
or
cwtl
xchg
or
inc
bound
and
mov
add
divl
or
add
outsb
and
jp
imul
lock
sub
dec
loopne
sbbl
shr
loope
sub
out
jmp
imul
cmp
dec
pop
icebp
pushf
outsb
and
scas
add
add
or
ljmp
aad
andl
sbb
mov
fisubrl
and
and
inc
fcompl
sti
pop
in
mov
inc
lret
jecxz
mov
hlt
inc
loop
and
stos
push
sbb
xchg
jp
lret
mov
or
push
adc
xor
inc
cwtl
subb
mov
test
mov
test
bound
xor
sbb
int3
lds
mov
push
mulb
movl
mov
or
mov
out
out
fisttpl
mov
shrb
lahf
inc
gs
pop
aad
sbb
bnd
repz
xor
or
adc
xor
and
inc
push
pop
lret
xchg
idiv
subl
out
aaa
dec
ret
cs
and
jmp
ljmp
xchg
push
push
jnp
dec
pop
cmp
pop
or
cs
mov
aaa
jl
dec
subb
sbb
cmpsb
lea
in
dec
mov
lds
push
sbb
cmp
into
mov
jle
pop
and
sbb
ja
sbb
jae
in
pop
test
cs
nop
xor
mov
adc
adc
lret
outsl
push
es
cmp
shrb
stos
push
mov
jbe
stos
xchg
push
test
mov
rcl
push
adc
dec
mov
cmp
pop
xchg
push
lcall
xor
xchg
inc
ja
fs
mov
cs
jae
inc
mov
mov
mov
lods
scas
test
or
jle
push
ror
xchg
pop
pusha
cmp
in
jmp
and
sub
and
lods
pop
lds
jb
aaa
cltd
in
fdivrp
repnz
ss
bound
je
inc
aam
inc
int
jae
jg
push
add
fadds
xlat
mov
xor
lret
xor
data16
mov
fimuls
ljmp
mov
loop
sub
fdivrs
mov
add
cld
push
lods
cs
in
fs
mov
fsubs
add
mov
enter
bound
add
jno
mov
leave
lea
adc
std
pop
pop
addl
mov
repnz
dec
insb
xchg
inc
movsb
cmp
adc
jmp
aad
nop
pop
sub
out
scas
xchg
ss
js
ficompl
mov
stos
cltd
push
dec
lds
idiv
loopne
pop
imul
or
ret
aad
lret
mov
jae
inc
stos
rorl
cmc
mov
inc
push
leave
inc
mov
xor
xchg
ret
adc
outsl
inc
adc
test
pop
js
xchg
push
pop
pop
sbb
orb
les
fcmovnbe
test
dec
cmpl
mov
push
nop
or
pop
test
cmp
out
and
pop
jno
out
pop
adc
mov
lea
inc
jne
adc
orl
jmp
iret
outsb
adc
outsb
mov
push
jp
add
fwait
and
xchg
notl
pop
mov
pop
pop
clc
les
dec
inc
mov
sarl
and
jmp
mov
repnz
cmc
and
sbb
and
xlat
ficoms
jb
popa
pop
push
or
pop
out
xchg
xchg
jmp
sub
aam
mov
sbb
mov
cmp
push
je
daa
outsb
in
xchg
mov
cwtl
cltd
inc
and
jo
sarb
mov
or
jno
add
scas
add
mov
mull
mov
bound
dec
js
pop
jge
xor
cli
imul
in
pop
mov
push
push
in
cs
stos
test
bound
adc
sti
ljmp
ljmp
jns
into
mov
adc
daa
mov
xchg
push
rolb
pop
mov
add
cmp
leave
xchg
xlat
in
mov
sbb
add
fistpll
mov
popl
and
loope
loop
cli
jg
dec
adc
inc
pop
ror
pop
sbb
outsb
stos
sbb
sub
test
loop
pusha
inc
out
out
int
cmpsb
jno
push
mov
push
jp
pop
mov
leave
outsb
dec
in
loopne
shl
jg
iret
sbb
inc
mov
jge
leave
icebp
fiaddl
cmc
mov
mov
dec
sbb
pop
jb
inc
or
jae
mov
mov
push
xchg
leave
xor
xchg
mov
leave
ss
jne
out
push
cmp
or
push
cmp
and
stc
push
adc
and
call
xchg
push
decb
test
out
jo
pop
loope
xchg
lahf
fidivs
mov
aad
inc
and
mov
andl
xchg
xor
cmp
test
jbe
lcall
insb
jmp
sub
pop
sub
jnp
fisubs
popf
cs
adc
test
xchg
roll
jno
insl
scas
or
leave
push
outsb
cmc
adc
xchg
mov
inc
in
loopne
shll
into
movsb
jo
jbe
lcall
mov
lock
subl
or
nop
stc
jbe
stos
jg
inc
call
xchg
inc
ficompl
xlat
lret
xchg
sub
xor
cmpsb
push
roll
lds
daa
addb
push
enter
testl
decl
xor
shrb
ljmp
hlt
andb
pop
mov
push
dec
movsb
repz
lcall
outsl
pop
lock
fistpll
sub
sbb
push
popa
cmp
das
push
sub
cmpsb
jno
incb
pop
ss
ljmp
ss
loope
inc
pop
cmpsl
cwtl
cmp
mov
lret
aaa
dec
fcmovbe
mov
in
sbb
loope
es
inc
iret
es
imul
adcb
pop
xor
sbb
lahf
rclb
call
or
movsl
ljmp
push
jne
insl
jbe
xor
cmp
push
xchg
das
sbb
xchg
xchg
xchg
scas
dec
xchg
sbb
test
out
or
sub
out
mov
push
mov
outsl
test
sbb
mov
push
push
int3
mov
orl
sub
or
ja
aas
repnz
lds
mov
push
ficoms
jecxz
int3
pop
mov
insl
mov
cmpsl
das
repz
xchg
inc
cmp
jo
and
xchg
rorl
push
int
scas
addr16
loop
push
js
push
lock
push
jo
pop
sbb
sti
or
pop
pop
jmp
sahf
inc
adc
dec
sub
imul
hlt
xchg
test
fsts
and
gs
lahf
jge
add
rorb
jl
pop
ret
and
push
sbb
fisubl
sub
jo
xor
movsl
adc
mov
repnz
test
lea
inc
pop
iret
cmpsb
push
mov
jo
adc
pop
jecxz
xchg
pop
mov
test
stos
fwait
dec
xchg
and
mov
add
mov
and
outsb
out
mov
jecxz
push
pop
cmp
ret
mov
out
icebp
mov
enter
jp
add
mov
repz
mov
scas
jl
pop
sahf
mov
mov
popa
movsl
cmp
or
call
out
popa
imul
lcall
mov
dec
insl
add
xchg
xchg
data16
in
mov
aas
mov
imul
push
jg
inc
fwait
cmp
rcl
or
sti
xlat
xchg
rorl
xlat
in
xor
sbb
mov
mov
jmp
inc
ljmp
fwait
mov
sub
mov
ljmp
mov
jl
adc
into
xchg
cmp
lret
rcrl
adc
js
adcb
xchg
cmpsb
jg
inc
ret
cmpsl
fnstcw
cmp
mov
lret
mov
push
ss
pusha
aad
add
jns
push
cs
ret
and
push
jmp
fists
xchg
mov
ffreep
inc
in
mov
jle
nop
sub
push
mov
mov
in
scas
aas
mov
fidivs
cld
int
je
sahf
add
fistpll
imul
sub
and
ror
pop
mov
xor
mov
jo
mov
mov
sbb
int
ljmp
fs
lods
mov
cmp
loop
fst
notl
pavgw
adc
mov
cmp
cli
mov
sbb
mov
or
popl
lcall
imul
xor
pop
xchg
ja,pt
mov
iret
aam
push
sub
scas
xchg
popa
arpl
fs
test
xor
mov
mov
fwait
aaa
xchg
aam
ret
pop
ss
mov
pop
fsts
jne
cwtl
in
jbe
shrl
cmp
addb
mov
clc
mov
jg
fcom
mov
pop
push
test
jb
pop
xchg
push
testl
mov
ret
bound
sbb
mov
add
jmp
push
mov
and
jne
and
mov
cs
pop
imul
cs
insb
leave
leave
pop
out
int3
xor
fxch
shlb
pop
popf
push
popf
push
mov
xor
lods
pop
add
push
pop
cmp
xor
lods
cmpsb
aam
push
in
jne
jmp
mov
push
dec
or
sarl
shlb
add
xor
xchg
xor
stos
push
scas
mov
into
jno
or
push
and
xchg
dec
fsub
add
jp
xchg
test
dec
shll
mov
movsl
fdivrs
adc
or
adc
xor
aas
clc
hlt
and
pop
xor
lcall
imul
enter
push
sarb
scas
int3
test
mov
xorb
xor
add
inc
call
es
scas
mov
xor
push
mov
cmp
clc
pop
cwtl
fcmovnu
ja
xchg
out
and
inc
mov
pop
fistps
outsl
loop
cld
push
clc
in
rcl
jge
jbe
ret
mov
test
mov
outsl
cli
movsl
dec
adc
and
lcall
push
lea
in
aam
pusha
aad
aaa
adc
lcall
jg
cmp
data16
push
inc
mov
nop
clc
or
cmp
push
xor
test
insl
pop
jg
cmp
shll
inc
jmp
out
jae
outsb
push
lret
dec
pop
cmpsl
sbb
sub
in
in
and
push
cmp
movsb
push
xor
imul
cmp
popf
inc
and
cs
jg
aam
add
enter
or
ret
popa
clc
int
cmc
rcll
xor
add
pop
push
addb
mov
test
xchg
test
xchg
push
jle
jecxz
das
lahf
or
pop
scas
ret
mov
das
lea
and
js
mov
or
cli
mov
jns
imul
add
dec
arpl
lret
stos
pushf
enter
insl
in
cmp
scas
jge
repz
cmp
cmp
cli
inc
dec
divl
xchg
cmovle
loop
cmp
hlt
sbb
inc
movsb
xchg
aaa
lds
pop
sbb
jmp
bsf
inc
out
arpl
bound
mov
push
in
push
jne
add
mov
in
out
pop
dec
fidivs
jle
push
jmp
sub
fmuls
push
pusha
cmp
sbb
mov
std
imul
and
out
ss
jae
jo
adc
push
sub
test
out
sbb
lea
aas
sbb
rol
pop
inc
sti
dec
idivl
fld
stos
xchg
sub
and
lcall
addr16
and
test
jo
rcll
stos
test
cmc
inc
imul
mov
bound
test
je
aaa
popa
push
loope
cmp
insb
inc
lods
jecxz
push
faddl
pop
mov
fsubrs
arpl
subl
inc
adc
mov
shrl
outsb
rorl
xchg
ret
push
mov
and
push
mov
pop
adc
push
push
sbb
and
push
outsl
mov
xchg
mov
test
adc
cmp
inc
roll
dec
cld
pop
test
addl
push
leave
das
pop
mov
repnz
sti
popa
xchg
lret
sbb
insb
and
fldl
out
sbb
xor
dec
and
jns
sarl
push
frstor
addr16
xor
pop
cmpsb
ret
inc
stos
insl
popa
pop
outsb
xchg
mov
inc
xchg
loope
push
mov
or
aas
mov
into
mov
mov
adc
mov
mov
cmpb
notl
cmpsb
lods
cltd
mov
xor
repz
push
pop
sub
repz
adc
pop
dec
adc
add
fisubrs
cmp
xchg
pop
aaa
mov
out
add
push
adc
out
aaa
rclb
cmpsl
cltd
sbb
jo
pop
stos
xchg
mov
cmp
adc
pop
iret
dec
imulb
sbb
pop
push
add
xchg
xchg
lcall
fxch
es
lret
sub
jno
gs
frstor
push
sbb
loopne
and
sbb
inc
mov
sub
insb
xchg
cmp
cmp
sbb
lods
add
loop
jno
cmpl
and
pop
sub
repnz
pop
sub
cmpb
sahf
or
int3
ret
jle
cltd
xchg
and
xchg
or
lock
in
cld
enter
imul
orb
and
into
sbb
xor
movsl
jl
push
xor
mov
xlat
popf
cmp
sbb
rcll
ret
or
mov
das
dec
inc
in
mulb
repnz
movsl
mov
or
jno
subb
fadd
and
inc
lcall
fistl
into
arpl
sub
lods
mov
insl
aaa
adc
adc
cmp
shr
vcmpss
call
xchg
mov
inc
mov
cltd
imulb
cld
xor
sahf
or
and
pop
dec
cltd
mov
dec
test
out
pop
mov
clc
mov
lret
ret
xchg
mov
jnp
js
stos
pop
inc
std
cmp
not
fwait
jo
cmpsl
mov
push
jecxz
dec
cmpsb
jo
test
es
flds
enter
sbb
mov
fimull
movsb
push
pusha
fimuls
mov
jb
scas
mov
xchg
loope
je
repnz
out
lahf
loopne
pop
mov
or
xchg
add
inc
shll
xor
xchg
ret
stos
or
adc
sub
xor
imul
popa
imul
jl
mov
in
iret
es
scas
es
lods
cltd
add
setae
xchg
inc
jmp
jecxz
pop
dec
mov
and
sbb
lret
mov
iret
mov
mov
sbb
dec
call
sbb
cwtl
adc
fwait
dec
inc
push
movsl
jo
mov
stos
pop
pop
sub
jge
cltd
and
sarb
xor
xchg
jmp
cmpsb
add
lea
inc
xor
rorl
negb
cmp
fwait
adc
arpl
sbb
sti
pop
cmp
das
movsb
in
in
jl
or
lods
jne
mov
sub
cmp
pop
addr16
fdivrs
adc
add
icebp
jge
lret
popa
inc
cmp
sti
adc
adc
adc
inc
and
cmp
add
mov
pop
lahf
and
movsl
sub
mov
test
adc
push
outsb
fs
lcall
jecxz
adc
add
mov
cltd
mov
xchg
out
mov
jns
lods
inc
fcoms
shr
insl
mov
pop
add
mov
push
nopl
jo
out
jg
ficoms
sub
std
dec
inc
mov
roll
mov
sbb
xchg
add
das
push
or
out
mov
outsb
xchg
xor
andb
push
pop
add
mov
daa
lods
sbbb
and
hlt
data16
sar
mov
nop
lahf
js
js
sbb
jb
dec
jns
xchg
mov
push
jno
sub
mov
push
faddl
enter
test
insb
push
in
cmp
xor
movsl
sbb
cli
test
pop
stos
jmp
push
mov
scas
test
xchg
jg
cs
mov
mov
pop
ss
aam
inc
mov
inc
pop
xchg
sbb
mov
dec
lds
jl
dec
jmp
test
mov
and
dec
inc
mulb
cmp
add
jl
cmp
sub
xchg
das
mov
dec
popf
aas
pushf
xor
or
jecxz,pt
mov
rcll
sub
jmp
or
js
fwait
movsb
test
cmp
imul
inc
mov
xor
lahf
xchg
lret
stos
mov
iret
in
and
and
jecxz
mov
dec
push
dec
cmpsl
or
inc
inc
orl
mov
sub
sub
mov
pop
xor
mov
mov
lds
or
pop
fmul
scas
in
ljmp
jp
jo
in
lahf
cmp
out
popl
push
cmpsl
rcl
cwtl
lods
scas
adc
jne
sbb
insl
cmp
mov
arpl
cld
gs
dec
rcrb
sbb
clc
dec
mov
out
pop
insb
subl
lods
xchg
pop
leave
shl
xchg
test
cmp
lods
bound
pop
pop
ja
jns
mov
dec
add
insl
dec
shrb
jecxz
jne
or
lcall
xchg
xor
cmp
dec
outsb
mov
sbb
push
cli
out
in
or
ja
xchg
mov
gs
shr
push
daa
mov
orb
test
push
and
mov
dec
mov
call
xor
pop
adc
push
jmp
xchg
cli
pop
iret
out
push
mov
push
push
mov
mov
fildll
aaa
scas
es
push
test
dec
btr
fsts
mov
cli
push
jle
push
add
out
push
fnsave
push
fwait
cmpsl
cmp
inc
fists
pop
fs
adc
sub
lahf
xchg
ss
ljmp
xor
rcrb
dec
push
imul
aad
xchg
fiadds
jne
inc
aas
adc
add
sub
fcmovne
lods
pop
cmp
inc
sbb
outsb
mov
aad
movsb
lds
ret
pop
and
xor
insl
cmp
and
test
pop
icebp
mov
aaa
pop
int3
xchg
mov
insb
pop
rol
popa
sbb
xchg
and
dec
ds
loope
rcrb
push
lahf
cmp
cmp
sarl
sbb
jge
lea
repnz
stos
iret
adc
mov
adc
add
add
cmp
jnp
out
sbb
lret
int
lahf
ficompl
jo
nop
sub
mov
cmpsb
shrl
pop
enter
lods
inc
mov
int3
jge
mov
loop
sbb
jle
cmc
cmpsl
dec
fnstsw
mov
sti
lods
popa
push
cmpsb
pop
jp
push
sbb
adc
pop
gs
mov
mov
add
jp
out
ja
mov
sbb
xchg
jle
into
dec
lods
add
xchg
out
push
cmp
mov
jbe
and
push
xchg
inc
dec
out
lock
jp
rorl
jae
inc
cwtl
fstps
push
leave
je
xchg
cltd
sahf
jge
mov
sahf
jae
fcmovb
int
xor
jmp
xchg
mov
fucomip
cmpl
loopne
sbb
jb
jne
xchg
test
mov
or
les
push
xchg
xchg
and
dec
adc
fiaddl
cwtl
outsb
test
inc
lret
movsl
negl
add
pop
sahf
icebp
outsb
jle
enter
in
adc
pop
fwait
lods
pop
outsl
nop
xor
cwtl
xor
cmp
cld
insb
adc
jge
adc
in
mov
data16
inc
xchg
xchg
pop
test
mov
movsb
pop
cmp
sbb
pusha
out
int
jo
fnsave
dec
int3
ds
div
push
mov
push
sub
cmp
loope
das
jb
add
sti
xchg
popf
mov
and
dec
in
inc
or
mov
xchg
mov
mov
mov
in
cwtl
jns
stos
and
and
inc
repz
stc
aam
xchg
and
adcb
xlat
sub
add
adc
in
pushf
mov
add
aaa
mov
and
mov
xor
mov
out
or
dec
mov
shrb
jnp
js
loope
lock
or
dec
jp
ss
jnp
rcl
or
push
aas
fisttps
fstpt
jnp
lock
xor
push
cmp
add
lea
daa
mov
sbb
popa
adcb
lret
or
mov
mov
and
sbb
mov
dec
mov
push
add
inc
popf
push
inc
movsb
inc
inc
xchg
mov
roll
add
mov
mov
sub
das
lds
pop
mov
dec
dec
pop
or
ljmp
sub
es
and
inc
fwait
inc
leave
popf
add
icebp
adc
js
imul
jge
sbb
fcomps
sub
jecxz
mov
gs
repz
push
fwait
cmp
dec
mov
and
iret
data16
inc
mov
add
jno
stos
mov
push
jnp
bnd
ljmp
inc
jae
into
filds
add
cmp
cmp
ds
out
push
lods
mov
es
or
loopne
stos
stc
inc
pop
fcmove
adc
out
add
push
loopne,pt
push
sbb
adc
push
add
inc
add
aad
xchg
clc
lea
jle
mov
fwait
dec
push
add
cmp
pop
in
xchg
inc
pop
inc
pop
mov
sbb
mov
stc
loope
push
push
mov
and
or
stc
repnz
test
test
negb
mov
lahf
mov
in
rorl
xchg
push
cmp
das
jge
pop
jl
and
inc
lcall
loop
and
les
sti
in
add
cli
push
add
mov
sub
mov
into
mov
mov
sbb
icebp
pop
outsl
add
lcall
loopne
lret
xor
les
outsl
mov
cmp
sub
cmp
xchg
rolb
insb
push
fisttps
cld
popa
push
cs
loope
fs
push
or
xchg
sub
lds
jp
fwait
sbb
negl
inc
mov
jbe
pop
fists
xchg
push
icebp
lahf
adc
cwtl
mov
cmp
repz
dec
sbb
scas
or
push
in
inc
jae
in
mov
dec
out
push
outsl
arpl
dec
les
pushf
pop
cwtl
sbb
jg
sbbb
inc
dec
push
and
dec
les
pop
fdivrl
add
sub
fdivp
es
jno
fsubl
popa
xchg
adc
std
xorl
int
lea
cmpsb
andb
shr
dec
jns
lock
adc
jmp
bound
test
cmp
iret
add
pusha
stos
push
pop
imul
icebp
mov
jmp
xchg
movsl
jle
jae
add
movsl
stc
cmpsl
pop
popf
xchg
mov
ss
cmp
xchg
jae
xchg
mov
std
xchg
jle
inc
xchg
xchg
add
and
push
jmp
negb
inc
xlat
psrlw
cmpsb
fdivrs
pop
dec
cwtl
das
xchg
stos
mov
ret
adcb
add
or
mov
inc
ja
cld
shll
pop
xchg
ljmp
aad
or
xchg
mov
int
xchg
mov
gs
sahf
sbb
in
xor
jo
movhps
xor
dec
mov
pop
sub
sub
cmc
jecxz
sbb
lret
cld
lods
adc
jb
out
push
add
xchg
jmp
dec
jnp
dec
in
pop
or
in
rorl
dec
sar
pop
pop
sub
add
mov
or
xchg
pusha
pop
mov
mov
sbb
gs
popf
jns
clc
or
imul
dec
ficompl
sub
fwait
bound
adc
pop
mov
push
mov
mov
test
dec
xchg
iret
jge
insl
jmp
jmp
lret
in
mov
outsb
leave
jge
aad
adc
lcall
pop
cmp
ds
ficompl
in
in
stc
pop
pusha
push
repz
ss
adc
sub
in
jg
in
arpl
xor
push
and
push
or
inc
rorb
push
shll
fcmovb
enter
test
pop
lcall
pushf
push
jl
dec
push
lahf
adc
xchg
or
fstpt
pop
stc
mov
int
fsubrl
stc
inc
bound
mov
sbb
xor
push
jae
andl
jge
inc
inc
add
incl
in
popf
lods
xlat
insb
cs
mov
pop
test
in
fwait
mov
stc
dec
mov
lods
std
lods
enter
pop
out
mov
leave
rcll
rcrb
popa
mov
inc
inc
repnz
sbb
and
inc
fwait
sub
rolb
push
out
ret
and
xlat
insb
push
cmp
jb
mov
popf
movsl
stos
sti
ret
adc
pop
fwait
hlt
stos
push
pop
cwtl
mov
ret
mov
mov
movl
loopne
insl
cli
add
jbe
movsl
insl
in
inc
pop
clc
test
dec
scas
insb
test
fs
test
sbb
or
les
pop
xor
push
cmp
les
jmp
fimuls
xchg
jmp
or
mov
call
aas
mov
sub
rorb
jl
mov
inc
in
jae
dec
or
xchg
sub
in
cmp
mov
dec
or
sbb
aaa
loopne
dec
and
lds
sahf
push
pop
or
sbb
pop
stos
pop
mov
mov
push
jge
test
jmp
nop
sub
int3
in
dec
pop
inc
pop
cmp
adc
cmp
xchg
dec
sbb
mov
push
add
inc
cmp
mov
push
popf
rorl
dec
fadds
cmp
movsb
or
test
je
mov
stos
cltd
or
xor
lahf
xchg
cli
mov
js
scas
outsl
cmpsl
cmpsl
xor
ss
jmp
scas
adcb
sub
cmp
pop
add
push
cmpsl
lds
mov
mov
call
inc
lahf
cmpsb
adc
dec
ret
adc
add
mov
stc
inc
xor
pushf
sub
outsl
notl
out
int3
not
movsl
inc
add
loop
mov
add
outsb
sbb
cmp
imul
stos
and
fsubrl
test
dec
jmp
sbb
or
fstp
arpl
jns
bound
push
xor
sbb
mov
mov
ret
stc
and
mov
pop
ss
jp
xchg
aaa
sbb
jnp
pop
sbb
mov
mov
add
fwait
push
frstor
sbb
mov
sti
and
jae
inc
pop
xchg
ds
gs
pop
xor
jb
adc
jge
cmp
adc
shrb
dec
aas
xor
sti
sarl
or
mov
int3
push
loop
in
fsts
pop
cmp
cmp
adc
sub
lcall
xchg
pop
sbb
cmp
dec
and
cld
enter
jp
mov
sbb
and
inc
aas
xor
call
and
jne
dec
test
push
lods
movsb
cwtl
sbb
repnz
popa
loop
out
ss
test
es
jmp
aam
aad
outsl
jne
xor
jnp
popa
andl
mov
adc
sbb
pop
push
daa
insl
scas
popf
js
xchg
or
mov
or
or
clc
sbb
xchg
outsb
inc
pop
in
aas
dec
adc
pop
dec
mov
add
dec
mov
aas
movsl
das
lret
out
je
iret
scas
push
testb
sbb
scas
mov
gs
add
aad
rcrb
pushf
lahf
sar
jbe
and
inc
outsl
dec
and
test
ret
push
mov
xchg
pusha
dec
jge
mov
or
in
cmp
lret
hlt
sbb
pop
icebp
sahf
sub
int
jo
dec
add
mov
int
das
je
or
xchg
in
mov
jns
scas
xor
addr16
fs
es
push
ret
adc
inc
jno
add
inc
jecxz
sahf
mov
cmp
push
in
ret
int3
pop
loopne
mov
mov
sub
call
inc
pop
cmovg
loope
and
xor
test
addb
scas
les
lcall
mov
enter
inc
addl
gs
fwait
scas
push
inc
add
and
pusha
movsl
outsb
fsubrl
inc
dec
xor
fdiv
test
loop
sbb
or
dec
jno
aad
inc
test
out
add
add
stc
jmp
je
popf
or
lcall
mov
pop
mov
jnp
xchg
cmpl
jb
les
cmpsl
or
jne
mov
mov
jle
stos
dec
mov
lret
cmp
mov
loop
adc
push
jnp
in
shll
aam
pop
loopne
repnz
xor
xor
loopne
lret
pop
lahf
mov
add
gs
mov
pop
fldcw
mov
in
adc
dec
xchg
sub
mov
push
jb
jnp
js
gs
mov
loop
push
cmp
je
xor
sbb
aam
and
lret
mov
lea
pop
stos
loope
push
gs
xchg
cmp
and
sbb
push
mov
and
sub
dec
or
movsl
aam
and
pop
clc
outsb
or
popa
jl
outsl
bsf
add
push
ds
stos
insb
xor
outsl
ds
bound
orl
adc
xchg
idivb
cmp
and
pushf
jnp
dec
dec
add
insl
arpl
sub
std
imul
lods
cmp
or
ret
fdivl
pop
lock
jp
inc
rcll
and
loopne
jle
into
inc
cli
fldcw
dec
xor
outsl
sub
test
pop
mov
xchg
mov
test
add
arpl
repnz
stos
movsb
mov
mov
rolb
xor
test
out
cmp
popl
lods
shlb
pushf
lods
cs
decb
add
dec
stos
cmp
cmp
aas
addr16
popf
mov
fidivs
or
mov
pop
clc
stos
xchg
std
dec
jne
jp
decb
push
mov
pop
inc
and
lret
and
popf
and
add
pusha
arpl
sub
sub
jo
fadd
lock
adc
fsubrl
ljmp
pop
and
popl
adc
jge
addr16
pop
cs
jbe
push
pushf
mov
ja
jo
pop
fildll
sarl
pop
aas
push
loopne
imul
adc
mov
das
add
or
jge
and
fnstenv
sbb
inc
ficomps
dec
hlt
js
fcmovu
sbb
pop
fdivr
into
push
jp
js
dec
adc
nop
call
lods
negl
jp
mov
les
pop
inc
test
push
or
mov
nop
or
jnp
incl
sarb
sbb
cld
push
sbb
jmp
pop
jbe
fldenv
and
les
in
pop
inc
jg
sub
or
sbb
adc
shrb
mov
pop
or
mov
adcl
cmpsb
adc
mov
or
inc
outsb
js
inc
push
or
stos
inc
dec
add
and
pop
adc
mov
and
mov
daa
mov
mov
jl
fsubrl
jp
shll
icebp
mov
add
repz
xor
jg
mov
ret
xor
adc
mov
push
add
jmp
cmpsl
lods
xchg
and
lods
fiadds
push
mov
repz
xor
lds
adc
add
sub
or
push
xchg
jge
push
lods
push
adc
fwait
push
mul
adc
scas
das
fldt
mov
into
jmp
jo
inc
stos
mov
out
adc
call
pop
push
movsl
loop
rolb
clc
mov
pop
inc
clc
popa
call
hlt
sub
cmp
jle
divl
sbb
add
cmc
arpl
mov
repnz
jae
rdtsc
xchg
fildl
mov
jl
inc
mov
mov
jo
mov
mov
inc
imul
out
fmuls
mov
pop
xor
xor
mov
mov
mov
test
xchg
shlb
roll
lret
scas
pop
mov
xchg
jge
mov
int
mov
and
subb
movl
mov
add
jle
add
dec
in
sahf
hlt
ret
imul
mov
das
aad
movsb
sub
mov
daa
insl
jge
cmc
or
xor
pop
loope
test
mov
sbb
sbb
cmc
fucom
xlat
into
mov
loope
icebp
outsb
cmpsl
adc
ficoml
sbb
xchg
and
fcomip
int3
mov
push
iret
mov
push
cltd
fisttpll
mov
jl
hlt
pushf
pop
inc
jbe
mov
sbb
aas
scas
jnp
xlat
jg
les
add
vpor
push
rolb
xor
iret
cltd
mov
jge
jl
jne
scas
pop
imul
leave
data16
add
inc
test
test
dec
out
cmp
sahf
mov
inc
mov
lods
lcall
sub
sub
faddl
mov
andl
out
dec
inc
mov
addr16
mov
dec
cmp
ja
mov
ss
ja
insb
xchg
into
insb
icebp
xor
xor
inc
test
ss
stc
mov
or
cmpsl
outsl
and
test
inc
in
lret
test
lods
adc
push
imul
mov
sbb
sbb
jl
xor
sub
sub
add
add
jg
sbb
add
sub
cmp
mov
mov
sbb
in
movsl
jle
sub
and
scas
sbbb
pop
xchg
push
enter
xor
xchg
ret
fldcw
outsl
pushf
fstpt
push
inc
and
imul
mov
ljmp
mov
icebp
fucomi
xchg
jle
fs
loopne
rcr
dec
das
xor
sarl
pop
cmpb
mov
or
insl
xchg
or
push
jae
mov
rorb
negb
div
cld
addl
dec
xor
pusha
xchg
sarb
test
call
sub
push
shlb
rorl
mov
jne
setle
xor
hlt
inc
rcrl
inc
ja
inc
icebp
jecxz
add
lods
sub
pop
jbe
jmp
lret
sar
push
sub
aam
mov
pop
scas
icebp
add
adc
jl
clc
movsb
aad
mov
subb
popf
dec
push
sar
jmp
call
popf
and
jno
dec
arpl
mov
cmpsl
jb
push
pop
jmp
std
push
das
sub
push
xchg
std
jmp
lock
xor
push
jne
in
sbb
jae
mov
pop
loopne
jg
cs
lret
lea
adc
add
pop
rorl
ss
add
pushf
ja
es
and
jle
lcall
in
sbbl
in
cltd
ret
cmpsl
or
out
and
or
int
cmc
jns
jb
in
add
in
mov
mov
mov
sbb
mov
nop
xchg
xchg
mov
jnp
cmp
cmp
mov
xchg
daa
add
mov
mov
and
sbb
jnp
cmp
pop
pushf
inc
xor
mov
mov
jmp
and
inc
and
stc
inc
roll
and
sub
movsb
das
xchg
lret
sub
ficoml
loop
pop
xchg
int
jmp
stos
jmp
sub
cmc
mov
rcrb
outsb
or
test
lret
pop
in
mov
lret
xchg
jnp
lret
loopne
lods
jbe
rcl
cltd
pop
das
dec
stos
gs
adc
xor
dec
sub
enter
push
cmc
cmpsl
gs
xchg
pinsrw
xchg
mov
jbe
pop
icebp
in
icebp
sbb
add
ucomiss
xor
and
pop
lods
push
mov
cld
enter
jmp
jns
icebp
ss
ss
push
test
inc
filds
adcb
aas
jmp
pop
clc
adc
pop
mov
xor
jg
fwait
lea
data16
ljmp
and
pop
clc
fistpl
out
insl
ds
div
push
rcrl
sub
pop
dec
cmpb
and
aam
xchg
inc
aad
xchg
js
push
das
rolb
dec
aad
jmp
mov
mov
lret
loopne
and
lods
mov
in
stos
pop
out
mov
pushf
enter
div
hlt
and
jo
sbb
and
pop
fs
sbb
cmpsl
into
bound
mov
mov
or
push
out
loopne
dec
scas
sbb
imul
les
add
push
enter
int
inc
pop
dec
addr16
out
push
xchg
stos
dec
aaa
loopne
jno
arpl
inc
cmc
xchg
inc
adc
mov
adc
xchg
in
insb
rcl
jae
pop
fildl
mov
pop
mov
pop
xor
push
mov
push
aad
mov
adc
cmp
xor
roll
pop
inc
movsl
aas
out
lock
cs
cs
pop
dec
xchg
pop
push
test
das
jmp
pop
loop
xchg
js
ds
sub
dec
test
inc
inc
ljmp
aam
xchg
sahf
push
cs
andb
jg
int3
mov
add
jo
rcr
sub
mov
iret
add
sub
dec
std
adc
xchg
or
cltd
cmp
and
das
js
cmpl
test
adc
mov
or
inc
icebp
imul
xor
xchg
and
push
jmp
xor
loope
pop
je
push
xor
cmpsb
mov
push
sub
aam
pop
aaa
cmpsl
pop
out
repnz
lock
mov
jge
cmc
jmp
dec
test
add
je
adc
andb
jnp
fcmove
cs
leave
mov
dec
lock
scas
bts
cmp
pop
push
ljmp
sub
bound
xchg
lahf
fiaddl
fadds
pop
pop
jbe
jmp
mov
push
insl
xchg
in
shrb
loopne
in
and
shrl
mov
insb
dec
loop
xor
adcb
setnp
std
dec
sarl
out
lock
adcb
cs
arpl
cld
and
mov
int
push
and
mov
mov
add
je
ds
aad
and
popf
pop
adcb
stos
out
xlat
push
mov
mov
stos
mov
adc
pop
and
add
popl
sub
arpl
mov
cmp
cmpsl
int
xor
gs
dec
mov
lahf
arpl
dec
out
in
or
jmp
dec
jg
sub
cli
and
dec
ret
cmp
sub
mov
adc
fnstcw
cmc
fwait
dec
in
cwtl
out
sub
pop
ljmp
sysret
popf
daa
scas
fildl
sbb
cli
pop
xchg
push
pop
cwtl
ss
lret
stc
pop
movsb
pop
sbb
mov
push
cmpsl
cmp
inc
pop
lods
stos
out
rcrb
jb
adc
mov
xchg
mov
daa
frstor
lret
repz
push
notb
jae
push
movsl
mov
call
jnp
cmpsb
out
and
insl
gs
enter
xchg
xchg
jmp
xor
movsb
sub
jbe
out
in
cmp
out
sahf
pusha
push
mov
or
test
jmp
adc
stc
cmp
add
lret
pusha
or
pop
cld
inc
outsb
lret
adc
mov
inc
lock
mov
dec
out
jbe
xchg
test
stos
cmp
or
test
xchg
and
push
mulb
lea
movsw
jmp
mov
sbb
shll
lds
in
adc
fstl
mov
cmp
cmp
mov
out
unpcklps
popf
cmp
fs
fmuls
sub
push
add
std
jmp
call
fcmovnbe
arpl
push
pusha
adc
jl
sub
sbb
hlt
and
subl
frstor
ret
out
push
sahf
and
add
in
adc
test
mov
jb
and
inc
sahf
leave
sub
aam
in
mov
mov
mov
lea
fcoml
pop
sbb
mov
and
mov
add
jnp
pushf
test
mov
jp
jp
sub
push
orl
aad
stc
mov
lcall
hlt
testl
push
mov
push
in
jg
inc
inc
iret
fwait
mov
pushf
lock
jg
popl
sbb
jmp
adc
or
mov
jmp
mov
sub
mov
cwtl
fildll
bnd
jae
sbb
adc
jp
push
mov
jmp
adc
add
rcrb
inc
xchg
fbld
lahf
mov
out
add
idivb
cmp
jp
les
jle
push
pop
mov
pop
rcl
dec
cmp
xor
mov
mov
lods
mov
rolb
cld
int3
pusha
in
mov
jge
mov
jnp
scas
and
jbe
push
mov
mov
sahf
hlt
icebp
mov
test
xchg
sbb
sahf
push
mov
in
lock
jge
push
jp
loope
push
pusha
or
lret
jae
test
cmp
bound
cmp
add
imull
mov
dec
inc
addb
les
orl
repnz
sbb
inc
iret
int
or
mov
xchg
and
in
xchg
push
test
mov
cwtl
outsb
dec
pop
pop
scas
idivb
add
adc
push
mov
out
fsts
call
mov
push
in
dec
pop
adcl
adc
sub
lds
inc
fidivrs
fwait
inc
jae
es
fidivs
fmulp
pop
push
add
xchg
add
adc
cs
pushf
or
loopne
iret
nop
out
and
jg
xchg
jle
dec
ret
in
pop
jo
movsl
adc
int3
sub
popf
ffreep
pop
movsb
add
iret
jle
xchg
test
fsubrl
mov
mov
dec
fdivl
shr
adc
and
test
lock
div
bound
and
lods
fistpll
adc
add
cmp
addl
inc
int3
pop
push
xchg
xchg
mov
lock
xor
iret
sbb
popa
stc
mov
pop
and
jmp
add
orb
test
cs
pop
mov
inc
xor
mov
cmpsb
clc
cli
xchg
and
xchg
fnstsw
push
sbb
in
adc
nop
scas
add
lret
cmp
aaa
scas
in
and
or
rcll
jmp
cmp
push
sbb
aas
in
into
pop
outsl
push
pushf
jb
es
shl
adc
jne
jl
inc
pop
ss
outsb
mov
scas
mov
scas
sub
mov
dec
and
jb
int3
insl
shlb
stc
dec
subb
lods
ds
cmc
out
xor
mov
js
gs
jae
movsb
or
in
in
subb
sbb
jl
stc
movl
mov
hlt
mov
cs
xchg
sbb
movsb
pop
push
jo
lods
rclb
fs
jle
int
mov
pushf
nop
xor
cmpsl
mov
cmp
jle
leave
sub
and
or
adcb
imul
daa
in
push
xchg
mov
loope
cmp
or
sbb
mov
mov
mul
das
pop
stc
lock
inc
fists
dec
xlat
adc
inc
cltd
sbb
filds
pop
sub
movd
inc
mov
loop
cwtl
pop
push
shl
mov
xchg
push
mov
pusha
xchg
insb
cli
test
xchg
pop
jae
xchg
leave
pop
ficoml
addr16
xor
sti
pop
pusha
and
scas
jg
insl
sbb
xchg
ljmp
push
fmuls
jb
je
cmpsl
xor
pop
lock
bsr
ds
jno
arpl
jns
xlat
iret
lret
inc
push
cmpsl
dec
push
mov
lock
or
data16
stos
lret
sbb
in
fsubs
cmpl
scas
ljmp
cmpsl
sub
sbb
loopne
ljmp
pop
xchg
jns
test
insl
aam
mov
add
ja
mov
pop
mov
add
push
repz
push
cmc
mov
or
cmc
pusha
shlb
stos
aam
les
cmpsb
sub
mov
movsl
cmc
fsub
test
and
sub
push
jl
hlt
mov
add
idivl
ljmp
and
clc
addb
mov
loopne
cmpsb
lds
and
xchg
xor
imul
hlt
test
test
adc
push
in
loopne
inc
inc
push
or
pop
jbe
leave
lods
idiv
push
add
cltd
lods
sbb
test
xchg
mov
add
dec
dec
ret
outsb
push
sub
or
sbb
movb
jl
sbbl
jecxz
sub
push
repz
sahf
inc
jle
jge
test
mov
imul
xchg
sbb
cltd
jl
jg
lock
push
or
fwait
push
outsl
iret
adc
xor
lahf
and
and
push
out
pusha
sbb
mov
pop
les
cmp
lret
sbb
mov
add
pop
cmp
loop
sbb
or
roll
aam
repz
rcl
mov
jecxz
scas
fwait
aas
decl
cmp
add
aad
scas
add
cmp
sahf
dec
or
adc
ja
je
repnz
into
call
sbb
mov
subl
ds
mov
dec
icebp
popa
les
mov
pop
dec
outsb
push
dec
jne
mov
or
mov
stc
in
ret
mov
shll
outsb
jp
nop
cmp
mov
and
test
insb
int
or
push
jb
popf
lds
jg
and
mov
ja
sub
mov
xchg
icebp
add
add
cmp
push
test
or
fldenv
cmp
xor
pop
cmp
lret
jbe
xchg
xchg
adc
pop
mov
jne
je
mov
cmc
and
addr16
lret
xchg
sub
cmpsl
insb
cmp
push
xor
push
push
pop
imul
mov
aam
int3
fimuls
mov
shlb
sahf
jle
pop
imul
jl
jmp
ret
mov
jae
call
mov
pop
ret
dec
push
popa
inc
in
pop
dec
pop
das
jo
cmpsb
stc
and
and
out
sarb
je
mov
xor
outsb
lahf
jno
into
mov
mov
andb
popa
sub
push
test
test
sub
xorl
test
scas
shlb
dec
in
ja
std
mov
test
inc
and
negb
std
enter
loope
mov
jbe
jnp
test
cmp
or
mov
inc
daa
in
and
insl
icebp
cmp
mov
test
std
scas
mov
inc
es
stos
pavgb
add
into
adc
jl
pop
cmp
and
xchg
mov
xchg
sub
stos
adc
call
cmc
dec
decl
xchg
fistl
lods
cld
mov
ret
loope
into
movsb
data16
jb
or
bound
sarl
bound
ret
add
ret
mov
mov
andl
ret
pop
fmull
mov
mov
mov
adc
mov
movsl
lret
jecxz
inc
cli
sarb
fiadds
xchg
pusha
and
movsb
ja
sbb
mov
lods
adc
inc
or
sti
leave
andb
aaa
sub
pop
loope
adc
inc
mov
les
jns
fs
or
jmp
sbb
jp
mov
push
shl
push
adcl
add
push
cwtl
inc
scas
bound
adc
test
in
push
adc
pop
pop
dec
out
shrl
std
lea
xchg
test
repz
outsb
adc
idivl
push
pusha
nop
cmp
xchg
movsb
std
xchg
int
fists
fildll
xor
jp
inc
dec
cmp
inc
cmpsb
sub
push
jbe
js
ss
mov
ljmp
cmc
xchg
or
test
dec
mov
jae
bound
out
sbb
dec
enter
mov
mov
movsb
jns
add
sub
imul
adc
sbb
and
adc
lods
popf
pop
lea
dec
insl
xor
and
repz
int
imul
ja
imul
into
cmp
inc
out
out
adc
icebp
and
push
lds
cli
mov
loop
push
pusha
xor
xchg
imul
iret
lods
cwtl
pop
lock
sub
mov
or
test
inc
test
test
mov
ljmp
test
xlat
ds
mov
fsubrs
jecxz
pop
push
clc
xor
jmp
dec
sub
mov
and
dec
sti
inc
sahf
mov
movl
imul
xor
add
in
iret
xchg
add
rcrl
ret
dec
lods
push
rorb
pop
sbb
jbe
and
shlb
andb
in
rcrb
push
jne
push
mov
xor
hlt
push
in
or
cmp
movsl
fs
aad
and
jg
mov
or
in
fnstsw
mov
push
add
add
shll
adc
xchg
mov
nop
cwtl
jnp
stos
push
push
sbb
mov
push
mov
lret
mov
popa
rorl
cmp
notl
iret
das
dec
repnz
outsl
in
xor
scas
shlb
jbe
add
pop
add
sub
mov
lock
les
mov
arpl
cmp
test
lret
sti
gs
jg
jmp
movsb
dec
fcmove
sbb
sub
dec
sub
pop
sbb
loop
cld
aam
mov
xchg
xchg
pop
mov
cmpsb
mov
fmull
or
outsb
or
xor
out
dec
pop
clc
pushf
stos
fs
mov
ficomps
jg
in
adc
mov
cmp
ss
out
inc
shrl
pusha
imul
insl
sub
push
mov
mov
in
pop
add
or
psraw
loopne
xchg
icebp
fwait
icebp
call
std
sub
cmpsb
repnz
sub
jbe
cld
into
sti
add
repz
mov
xlat
mov
mov
out
loopne
inc
call
jecxz
loopne
push
mov
pop
fistpl
out
repnz
adc
mov
mov
repnz
sti
or
jae
enter
push
or
push
imul
jo
dec
push
dec
out
mov
sub
fimuls
pop
jl
cli
and
jbe
fdivl
pop
fadds
out
xchg
xchg
lcall
dec
sub
out
sbb
push
dec
aas
fisubs
and
hlt
push
insl
into
test
mov
push
outsl
mov
mov
flds
sti
incl
jecxz
sub
push
mov
jno
adc
jno
jo
aad
mov
or
daa
adc
xchg
shlb
aaa
xchg
push
jmp
xchg
sbb
outsb
daa
popa
jbe
xchg
adc
roll
push
jnp
jle
push
addb
pop
xchg
les
sbbb
pusha
out
loop
mov
mov
pop
sbb
xor
cli
push
ret
in
or
xchg
scas
inc
roll
ja
les
test
fiadds
push
dec
xor
dec
fstpl
in
ds
out
xlat
mov
fcmovu
and
lret
xchg
add
repz
pushf
decl
or
dec
jmp
push
hlt
bndldx
aas
sbb
ret
jge
cmc
or
mov
sti
jne
adc
sub
sbb
sub
iret
xchg
sarl
fists
pop
inc
sub
sti
dec
outsb
bound
lahf
xor
push
inc
loopne
mov
mov
adc
xchg
push
daa
ljmp
xor
andl
hlt
enter
pop
sbb
xchg
and
popf
pop
cli
call
pusha
pop
test
stos
int3
scas
push
dec
lock
js
jne
cmpsl
adc
subl
dec
leave
jecxz
popf
repnz
lods
jp
cmp
pop
xorb
mov
mov
mov
pop
aaa
dec
lds
test
aaa
add
dec
inc
mov
data16
addb
adc
inc
mov
or
cmp
or
imull
jae
nop
punpcklbw
jb
adc
mov
adc
mov
leave
pop
shrl
rorb
adc
js
rcl
out
jmp
mov
sbb
xchg
adc
push
mov
mov
int3
daa
jp
cmpsb
xchg
loopne
lret
xchg
loop
mov
out
movsl
mov
nop
stos
mov
push
nop
adc
cmp
push
fsubs
sbb
xchg
out
nop
cmp
cmpsb
fldenv
add
inc
fbstp
cli
push
dec
xchg
fidivs
les
les
lods
testl
mov
sub
cmp
pop
aaa
out
jg
mov
test
lret
and
add
stos
adc
ljmp
movsl
pop
adc
std
cli
adc
xchg
cltd
lods
inc
dec
outsb
cmp
loop,pn
les
mov
scas
test
push
ss
fistpll
cmc
xchg
lods
push
scas
or
fnstsw
int
pop
jae
je
das
ret
gs
roll
icebp
movsl
sub
mov
mov
xchg
lea
and
pop
or
divl
adc
je
test
dec
nop
mov
jle
inc
addr16
mov
mov
pop
scas
inc
xor
sbb
test
jmp
lahf
test
push
movsl
sbb
add
or
imul
imul
stos
nop
ret
jmp
shl
sbb
cs
fwait
push
pop
cwtl
out
faddp
push
mov
subl
test
mov
mov
or
pop
mov
pop
lea
sarl
cmpsl
sub
push
pushl
das
mov
stos
loope,pt
pop
xor
dec
int3
enter
sub
sahf
push
outsb
inc
xchg
jb
es
inc
gs
std
stos
adc
loop
repnz
dec
lock
notl
mov
mov
push
push
mov
loop
lcall
sub
inc
leave
push
dec
push
jmp
sbb
pop
rclb
rcrb
sub
mov
inc
addr16
lahf
sub
ja
cltd
jnp
aad
mov
out
in
jb
dec
out
lods
scas
dec
icebp
nop
mov
je
jmp
repz
xor
jle
shlb
movsl
ret
add
dec
ret
test
das
and
scas
test
cli
sti
test
dec
shrb
pop
xchg
push
sysenter
pop
mov
js
mov
adc
adc
pop
jmp
adc
pop
imul
mov
cli
jo
inc
loop
leave
or
ds
ret
leave
pop
mov
mov
jmp
cmpsl
sbb
cmpsb
lods
cmp
inc
push
fstl
jle
pop
gs
jmp
dec
je
push
sahf
push
xchg
outsl
mov
push
dec
out
add
sub
inc
leave
popf
imul
push
in
shl
insb
push
xchg
stc
pop
call
cmpsb
mov
xor
cwtl
inc
cmp
test
cmp
add
adc
sub
lods
add
jb
fadd
add
lret
adc
xchg
mov
call
or
pusha
ret
add
dec
pop
movsl
cmpsb
les
loope
mov
cmp
ds
dec
dec
leave
aaa
adc
std
or
std
dec
inc
pop
mov
push
fldl
lock
fldcw
or
xchg
adcb
sbb
out
jb
pushf
roll
push
aam
je
and
pop
push
lret
sbb
push
shrl
outsb
dec
in
sbb
xchg
push
cmpsb
or
push
cmpsl
arpl
roll
mov
adc
pop
fcmovb
pop
les
out
out
ljmp
je
mov
iret
into
and
mov
mov
adc
or
cld
cmp
push
das
mov
xlat
add
pop
sub
pop
push
cmp
shrb
xchg
jecxz
pop
pop
out
mov
dec
test
cmc
pop
outsl
arpl
cmp
dec
fldl
retw
cmpsb
xchg
add
jle
lahf
sbbl
icebp
arpl
adc
fsubrs
cmc
outsl
xchg
fcmovu
inc
sbb
je
sbbl
pushf
test
push
add
jg
jno
fimull
ret
call
mov
hlt
pop
lcall
sbb
inc
dec
shlb
xor
lahf
xchg
inc
mov
loop
arpl
and
mov
fsubrs
mov
jno
xorl
outsb
mov
ljmp
and
push
pusha
xor
sti
ret
mov
dec
and
into
sbb
outsb
daa
bound
xor
dec
mov
pop
repnz
mov
lret
ds
add
jge
movsl
imul
adc
imull
cltd
inc
mov
movlhps
repz
and
pushf
std
add
push
nop
inc
jnp
ja
stos
lret
nop
pop
test
mov
dec
sahf
mov
arpl
mov
dec
popf
filds
sub
jle
mov
adc
aad
int3
mov
imul
mov
iret
ret
cld
sarl
mov
xor
mov
push
sub
jge
das
notl
or
into
cmc
push
nop
add
mov
divl
aad
sbb
aaa
leave
push
ror
sbbb
imul
loop
aam
mov
adc
add
add
pushf
cmp
dec
faddl
sti
loope
sbb
xor
rcll
xor
aaa
cmp
test
or
jmp
dec
movsl
pop
les
xlat
imul
or
adc
adcb
and
xor
outsb
into
pop
xor
sub
icebp
gs
loop
inc
shl
adcl
movsb
sbb
xchg
xchg
orb
cld
xchg
inc
pop
shlb
jecxz
and
dec
cmp
sub
cmp
jmp
dec
fnstsw
paddsw
cmpsl
push
or
mov
loopne
push
test
inc
fucomi
or
pop
jo
mov
push
fdivp
fidivs
push
cltd
ret
int
mov
jp
inc
cmp
pop
add
loopne
sbb
sub
cmp
addr16
loop
insl
and
jae
in
into
outsb
shrl
out
add
jecxz
std
lds
push
cli
jns
ja
mov
inc
jae
outsl
imul
insb
loop
xchg
into
pop
out
inc
mov
push
inc
test
repnz
add
xor
movsb
movsl
lcall
inc
jns
lahf
xor
ror
xor
or
imul
scas
nop
pusha
aam
mov
mov
pusha
test
scas
cmp
jmp
js
push
mov
mov
mov
test
mov
iret
sbb
repnz
dec
std
push
pop
mov
push
inc
mov
in
sbb
mov
sbb
mov
push
mov
and
aas
push
rclb
pop
mov
cli
jo
imul
mov
mov
jmp
aad
mov
cmp
jge
mov
jnp
add
out
iret
xchg
cmp
imul
push
jae
call
je
stc
sbb
ret
push
popf
test
les
inc
jge
push
xchg
sub
adc
rol
inc
xchg
fsubs
inc
in
dec
add
shr
mov
mov
scas
sbbb
xor
push
or
push
iret
mov
popl
push
ret
dec
out
and
adc
jae
test
stos
push
shrl
xor
cmp
cmpsl
dec
cs
mov
adc
enter
mov
inc
xlat
mov
les
std
roll
sbbb
dec
es
sahf
or
add
inc
cmp
fimuls
dec
insb
xchg
call
cmp
dec
inc
xchg
les
xchg
add
lock
jne
popa
inc
or
or
add
xor
ret
adc
out
lret
iret
pusha
inc
aam
jp
sbb
cwtl
lret
lret
lret
jno
js
push
in
lret
jmp
inc
imulb
dec
out
xchg
add
lock
ficoms
iret
mov
add
sbb
xchg
and
es
cmp
repnz
test
add
cld
mov
sub
stc
mov
hlt
xchg
imul
mov
mov
lock
xor
mov
jg
push
push
dec
in
test
sbb
cmp
push
cli
dec
jnp
insb
jo
repnz
pop
fxch
addb
push
daa
movl
lods
mov
sub
inc
imul
out
rorl
adc
inc
shll
push
dec
mov
push
andb
fildll
xor
add
push
js
cmp
jmp
cli
jns
icebp
cmp
fyl2x
insl
shll
inc
mov
sub
mov
cwtl
mulb
cmp
ja
adc
cli
sub
mov
add
mov
inc
pop
lods
mov
repz
xor
adc
cli
pushf
loop
add
roll
sub
jo
repz
stos
add
push
push
jo
push
dec
loope
sub
push
aam
adc
arpl
sbb
aam
loopne
dec
cmp
adc
and
pop
and
cld
shll
fcmovne
push
push
aam
lods
pusha
mov
jg
inc
and
jmp
mov
sbb
pop
lret
cmp
out
jb
push
and
rorl
rcrl
sub
mov
imul
lds
cmp
movsb
sbbb
mov
push
push
cmp
lods
pop
cltd
pop
orb
lea
xchg
or
andb
test
aad
adc
push
xchg
nop
roll
xor
in
sbb
inc
xchg
cmp
add
push
hlt
push
mov
inc
addr16
lock
add
fwait
inc
std
mov
sbb
inc
xchg
and
add
mov
mov
mov
syscall
pusha
pop
imul
ljmp
add
pop
xchg
xor
push
lret
retw
push
push
mov
pop
pop
jmp
xor
cmc
aam
stc
push
adc
lods
cli
mov
bound
inc
or
dec
push
sub
orb
lods
mov
shrl
into
insb
pop
and
or
jmp
jle
es
cmp
outsb
xchg
imul
add
sub
clc
and
addl
js
xchg
push
mov
out
loop
sarb
sub
adc
xor
xchg
mov
mov
push
push
daa
sbb
add
xor
stos
fcmove
push
sbb
repnz
sub
mov
jmp
mov
mov
xor
dec
cmp
xchg
movsl
out
inc
fildl
or
push
xchg
out
adc
xchg
loopne,pt
push
adc
xor
dec
jecxz
loopne
out
fxch
fsubl
cmp
lcall
xor
jnp
push
orb
and
pop
cli
jecxz
mov
push
ds
sbb
std
mov
pop
and
sar
cmp
jnp
mov
iret
in
sbb
repnz
aas
or
mov
pop
cmc
pop
lahf
stos
ljmp
jecxz
xchg
and
mov
xor
shlb
jmp
scas
adcb
cmc
mov
or
mov
idivb
fs
and
pop
sub
add
pop
jo
pop
sub
lods
adc
ja
mov
sbb
ja
shlb
and
cmpsl
stos
leave
daa
rcrl
push
and
loopne
notl
sbb
jg
xor
sbb
dec
push
mov
repz
adc
mov
jl
mov
rcrb
push
push
mov
xchg
sbb
xor
add
nop
sub
leave
pop
iret
mov
test
pop
dec
nop
sbb
test
out
pusha
xor
test
lds
das
sbb
mov
pushf
jmp
mov
arpl
enter
mov
jge
sub
cmp
push
pop
mov
or
fmuls
xor
cmp
ret
cs
sub
sti
xlat
pop
movsl
loop
sarb
cmp
lods
dec
mov
int3
cmp
stos
dec
push
push
cs
xor
clc
xor
mov
lcall
js
les
adc
sbb
dec
inc
xor
arpl
or
stos
inc
lea
xchg
mov
loop
push
es
or
fsubl
fsubl
sub
das
adc
ret
ja
xor
out
cmpsb
lea
into
mov
lret
outsl
inc
cmp
fwait
sub
sub
dec
pushf
inc
cmp
xchg
stos
pop
pop
cwtl
das
cmp
leave
roll
daa
movsl
mov
dec
jle
in
push
cld
xchg
movsb
shlb
ja
movsb
pop
icebp
pushf
outsl
dec
sbb
inc
sub
pop
les
xor
cli
imul
aaa
jae
add
outsb
adc
bound
sbb
enter
jo
pop
add
mov
xor
leave
ret
or
pop
into
pop
stc
xchg
out
pop
or
or
jbe
pop
push
rolb
test
mul
mov
mov
mov
pop
jl
mov
xchg
xor
mov
andl
jns
test
or
movsl
mov
mov
push
or
test
sub
mov
and
divl
jp
add
or
inc
add
es
jg
lds
repz
mov
mov
les
movsl
rcl
test
push
shl
rolb
out
mov
ret
cmp
jns
xchg
jl
push
jle
add
loope
test
rorb
std
es
cld
sub
xor
adcb
cwtl
imul
or
gs
inc
pop
xor
out
pop
push
pop
push
pop
jno
pop
xor
inc
xchg
popl
enter
subb
icebp
shll
data16
mov
dec
cmc
push
or
pop
or
jo
ljmp
fcomip
xchg
cmp
jg
testl
and
and
sub
xorb
mov
and
fiaddl
dec
std
mov
sbb
mull
mov
fstps
jno
or
inc
frstor
dec
cmpb
test
sbb
das
xlat
cli
cmp
shlb
daa
sub
jns
cmp
mov
mov
insl
xor
mov
cwtl
and
dec
xchg
pop
mov
jno
pop
cmp
dec
out
jbe
lahf
sbb
and
jle
jle
mov
lds
movsl
pop
int3
pop
mov
fwait
dec
sbbl
mov
add
cmpsl
gs
cmp
pop
cmp
jmp
fwait
scas
mov
data16
clc
cmpl
aam
stc
push
sbb
popf
and
mov
mov
jne
pusha
lods
jmp
dec
pop
mov
mov
or
int
daa
inc
stos
clc
jmp
lds
scas
test
inc
idivb
mov
add
fisubrs
inc
test
clts
imull
inc
mov
aas
cwtl
mov
stc
sar
or
mov
pop
and
cwtl
dec
dec
popa
mov
sbb
data16
ds
xchg
push
or
jge
or
mov
xorb
loopne,pt
lret
enter
push
pop
push
icebp
xchg
xlat
mov
shlb
cs
and
jmp
push
stos
push
adc
hlt
es
dec
inc
pushf
hlt
lock
idivb
insb
jp
add
popa
leave
shrl
repz
xor
stc
or
loop
mov
mov
in
pop
stc
cmp
push
loop
add
dec
aaa
jmp
sbb
dec
outsl
xorl
bound
inc
xor
inc
imul
movsl
clc
fsubrs
fcoml
gs
jmp
cmpsb
jp
mov
pop
lods
pop
in
or
sub
and
in
jb
cmp
jbe
gs
adc
sbb
test
mov
pushf
adc
and
xor
xchg
cmpb
enter
jg
arpl
inc
push
sub
mov
dec
xchg
out
or
popf
sbb
scas
mov
rolb
add
cmpsl
push
out
pop
cli
adc
mov
gs
addr16
stos
jmp
and
jl
xor
bound
xor
ja
mov
xor
sti
mov
repz
sbb
sar
mov
rcl
jmp
mov
push
es
repnz
add
lret
mov
in
daa
std
shlb
inc
pop
jmp
pop
hlt
and
sahf
mov
jns
imul
inc
lods
xorl
inc
lock
popa
popf
jge
std
mov
inc
in
or
jl
fistpl
ljmp
xor
call
jae
jmp
arpl
mov
and
jb
cmpsl
lgs
in
pusha
shrb
and
or
xchg
fiaddl
andb
cmc
in
push
cs
push
add
mov
iret
add
or
xor
sar
lods
mov
in
push
fiadds
sbb
adc
cmp
jmp
pop
popf
add
add
jbe
test
pop
and
out
lret
jns
push
arpl
pop
popa
xor
mov
pop
and
les
lods
imul
jl
cs
jb
gs
mov
xor
fidivl
push
adc
add
fsubrs
pop
mov
fdivl
bound
xor
inc
sub
xchg
imul
stos
mov
pop
mov
dec
subb
mov
pop
in
rorl
fisubrs
jo
inc
inc
ficompl
xor
or
ja
mov
rcl
mov
stos
loopne
xchg
jl
push
inc
mov
stos
push
daa
arpl
cmpl
and
mov
cld
std
push
cmpsb
lods
mov
xchg
sub
dec
fstl
xchg
xchg
insb
and
push
jae
xor
repnz
aas
sub
test
cmpsl
and
pushf
outsl
pop
testb
sbb
mov
mov
push
mov
cmp
mov
and
mov
add
clc
mov
and
iret
nop
lods
cli
out
pop
movsl
push
ss
int3
push
mov
ss
aaa
icebp
sbb
push
notb
inc
cs
inc
xchg
adc
xchg
das
push
out
mov
sub
push
loope
xchg
aaa
jnp
test
push
rcr
xchg
iret
jmp
push
push
std
aad
leave
sahf
movsl
movb
jbe
mov
loope
xlat
adc
lods
mov
daa
popf
push
xor
jne
rorl
in
adc
inc
les
xorl
mov
test
push
mov
xchg
mov
push
je
imul
add
test
andl
mov
les
movsl
lret
or
insb
pop
adc
popf
aam
enter
cmp
outsb
shr
frstor
insb
movb
and
pop
mov
adc
mov
je
jp
cmp
mov
inc
jns
pop
jl
xchg
jl
push
in
xor
mov
mov
jg
sbb
addr16
testb
push
xchg
or
mov
mov
sahf
push
dec
mov
mov
push
adc
addr16
push
push
and
push
mov
insb
and
jae
sbb
mov
pop
xor
adc
out
in
cmpsb
popa
adc
jle
divl
ret
and
pop
sbb
push
lock
mov
add
addl
loop
xchg
mov
mov
jbe
cmc
xor
sbb
push
iret
sub
mov
jmp
xchg
leave
pop
ficomps
mov
or
rcl
push
mov
lea
pop
adc
movsl
push
jo
add
sahf
imul
sub
mov
lock
push
fdivrp
loopne
sarl
or
push
scas
loop
jbe
sub
pop
dec
ss
sub
lock
clc
or
scas
cmpsb
loop
push
pop
and
rolb
pop
stc
inc
mov
rorb
or
add
lds
or
mov
das
popa
jecxz
pop
jge
or
push
loope
adc
cmpsb
pop
das
mov
bound
mov
xor
mov
jae
adc
jo
imul
test
pop
inc
ljmp
ss
fnstsw
cs
cld
call
sbb
aaa
dec
jge
repz
cli
or
or
jmp
je
loop
fs
pop
je
fsts
lret
mov
add
sbb
clc
stc
in
dec
stos
push
cltd
leave
flds
mov
jmp
fdivl
mov
xchg
xchg
testl
flds
sub
outsl
pop
scas
adc
add
aas
push
js
lock
scas
adc
cwtl
data16
mov
add
inc
icebp
insb
pop
pop
push
icebp
ljmp
pop
push
test
fwait
sbb
push
inc
cmp
lds
lahf
fmull
movsb
push
outsb
cmpsl
sbb
fucomp
add
dec
inc
into
popf
xchg
cmc
icebp
pop
pusha
adc
mov
xorl
push
xor
pop
sbb
hlt
aam
xchg
cmp
scas
pop
lock
je
sbbb
les
ret
push
push
shrb
lea
sar
jecxz
sbb
or
aad
xchg
jo
push
cmpsl
sti
adc
lds
ret
popa
mov
loop
sub
push
jno
cs
mov
fldcw
jge
inc
pop
mull
test
jns
xchg
sarb
push
inc
scas
pop
and
pushf
pop
cmp
jl
xchg
pusha
roll
mov
pop
or
imul
inc
insl
and
arpl
jge
mov
sahf
popf
fld
cld
mov
xchg
and
ja
add
addr16
out
loope
mov
aaa
movsl
les
sti
mov
pop
push
mov
adc
loope
popf
ficoms
xchg
push
jge
mov
into
mov
cmpsb
jae
sarb
es
paddusw
xor
sbb
push
xor
stos
outsl
jmp
repz
mov
scas
adc
shl
xlat
pop
mov
aam
cmp
lea
scas
enter
cmc
cmp
fcompl
xor
imul
jge
pushf
jae
push
adc
sarb
pop
fcomi
xchg
sarl
in
mov
xor
insb
cmp
loope
or
cmp
jno
mov
jbe
ljmp
cmp
repnz
pop
cs
inc
rclb
lret
push
jns
sbb
lock
jno
cmovns
mov
pop
sub
pop
sub
push
popf
jmp
mov
lds
dec
popa
test
jo
xchg
sti
add
enter
add
dec
push
pop
jge
les
js
arpl
xor
ret
scas
xchg
jno
inc
dec
inc
jmp
mov
inc
dec
adc
and
pop
sub
sub
add
adc
dec
icebp
add
mov
push
ljmp
push
hlt
aad
mov
scas
lds
push
or
cltd
mov
push
pop
in
xor
insb
pusha
or
jne
cmp
cmp
cmpsb
cmp
int
shrb
pop
std
outsl
adc
mov
cltd
fisttps
scas
movsl
das
lds
add
cmpsl
push
lock
out
push
cmp
push
cli
xchg
mov
dec
push
sub
inc
popa
adc
inc
aaa
inc
and
push
and
cltd
jg
mov
jno
popf
hlt
loope
inc
inc
mov
add
and
cmp
xor
daa
sub
inc
aaa
jg
aad
xlat
xchg
aas
popa
inc
xchg
mov
out
push
subb
xor
lcall
punpcklbw
push
ds
pop
pop
out
mov
xchg
and
pop
mov
mov
adc
mov
jae
data16
sti
lahf
xchg
pop
sub
shlb
stos
xlat
ja
pop
cs
addb
sbb
mov
pop
movsb
dec
jne
fnop
pop
cmpsl
cmp
int3
jbe
test
lcall
jns
mov
jg
jle
xchg
mov
mov
cmp
lahf
mov
or
test
cmpsb
decb
jns
ljmp
cmpsb
pop
pop
xor
add
jl
sub
inc
stc
pop
insb
pop
lret
sbb
inc
insb
mov
in
and
mov
pop
divb
mov
lock
ljmp
pushf
mov
sbbl
inc
sbb
jmp
mov
bound
punpckhbw
jp
call
jae
fidivrl
xchg
mov
xor
mov
es
stos
jmp
ret
lds
adc
adc
loopne
mov
jbe
aaa
mov
xchg
mov
and
cmp
jae
push
rcrl
cwtl
pop
das
ficompl
scas
pmuludq
pusha
into
out
adc
into
repz
xor
cmp
inc
fcoml
aad
in
lock
inc
sbb
addb
cmp
ljmp
cld
lea
xchg
sub
loopne
js
outsl
cmp
mov
loope
pushf
cmp
nop
pushl
out
sbb
mov
loopne
sbb
sbb
pop
pop
fbstp
pusha
cmpb
cld
pop
clc
in
push
loopne
es
mov
call
call
xchg
fisubl
divb
insb
mov
jl
add
add
pop
jp
pop
sbb
mov
mov
ret
xchg
movsl
lahf
lcall
mov
push
lahf
jo
ficoms
imul
push
add
call
clc
lcall
fisttpl
adcl
jecxz
pushf
adc
or
sbb
stos
or
push
jae
dec
rorl
sub
jno
pushf
iret
lds
mov
sbbb
xor
dec
inc
xor
mov
aad
add
mov
adc
cmp
test
mov
dec
dec
mov
xor
mov
cmp
fsubl
addr16
fimull
shl
pushf
cwtl
es
cmp
daa
pop
fsubl
jle
pop
scas
mov
pushf
cmp
lret
and
insb
xchg
cmpsb
xor
mov
das
outsb
xchg
add
jo
cld
iret
insl
fs
out
inc
mov
add
lea
and
or
xchg
mov
sub
add
out
xor
repz
outsl
sbb
stos
subb
in
movsb
sub
fwait
in
lods
loope
dec
mov
enter
add
repz
push
mov
add
or
rol
or
ret
jae
stos
in
or
dec
lahf
inc
lcall
adc
in
andl
ret
xor
jnp
ret
aad
imul
pushf
pop
mov
clc
lea
adc
mov
or
sub
or
loop
xor
mov
mov
inc
repnz
repz
mov
fildl
das
xor
inc
xor
add
mov
sti
fstps
mov
std
rolb
lods
das
mov
cmp
faddl
xor
adc
fcompl
xor
inc
cmc
mov
outsb
ljmp
and
sbb
out
dec
pusha
add
sti
dec
dec
sbbb
and
jecxz
bound
inc
pop
jle
add
orb
clc
in
push
mov
lock
mov
add
inc
lahf
rorb
pop
incl
push
cmp
and
mov
mov
mov
sub
aaa
mov
jbe
aam
xchg
cmp
adc
jge
push
arpl
addr16
inc
xchg
fmull
insb
sahf
mov
fidivrl
lret
fdiv
movsl
jge
xchg
rol
dec
pop
test
into
jne
mulb
jbe
xor
shr
mov
cld
addr16
xchg
or
loope
xchg
les
mov
push
and
push
xchg
push
mov
jp
inc
mov
lret
mov
sbb
mov
mov
mov
xor
ss
dec
fnstsw
roll
mov
test
scas
fs
xchg
addr16
popa
and
rcll
cmp
loopne
pop
adc
lock
push
out
mov
inc
scas
and
js
pop
push
ret
sub
inc
iret
add
push
addb
pop
mov
rcll
sbb
or
lock
imul
fldenv
fiaddl
cs
fisubl
test
sarb
cmpl
sbb
sub
movsb
push
and
dec
adc
inc
scas
repnz
sti
aam
or
loopne
andl
scas
stc
inc
cmpsb
andl
push
push
hlt
mov
or
xchg
pusha
sub
add
adc
ja
mov
and
xor
icebp
push
mov
scas
push
imul
adc
lret
mov
mov
xor
push
inc
or
mov
xchg
xchg
adc
push
cmp
fcompp
sub
jle
push
es
aaa
inc
sahf
pop
popf
xor
inc
xor
lods
dec
mov
sbb
iret
dec
jb
cmpsb
out
pop
fisubs
fnstenv
jge
push
mov
cmp
cmp
loop
cmp
mov
into
jns
mov
stc
push
sub
cltd
pop
jecxz
shl
jle
testb
mov
sub
sub
sub
xor
cmc
jne
adc
mov
jge
mov
or
scas
popa
jno
lret
pusha
sahf
or
cmp
xchg
and
dec
sub
mulb
repnz
dec
sbb
out
movsb
jg
adc
outsl
xor
xchg
in
push
mov
das
enter
xchg
inc
adc
sub
mov
dec
pop
ret
jl
xchg
loopne
xchg
mov
jl
sbb
shl
inc
jno
gs
mov
out
rcl
jbe
inc
rcrb
pop
xor
dec
cmp
mov
adc
repz
cmp
rep
outsb
push
xor
xor
inc
incl
sarl
jne
sub
stos
cmp
aas
pop
dec
in
add
add
test
pop
push
mov
fidivrs
dec
int
pop
icebp
insb
cwtl
ss
addr16
jl
mov
shrb
and
mov
cmp
cmpsl
mov
lea
pop
data16
fcmove
add
xchg
sub
cli
aas
inc
add
push
mov
jae
mov
cmp
iret
cmpsb
sub
repz
jns
mov
iret
aas
loopne
xor
dec
hlt
sti
jns
or
inc
loopne
jbe
dec
or
xlat
stos
mov
shll
lods
out
mov
push
lods
jns
pop
mov
add
movsb
loopne
les
clc
inc
sbb
lock
out
scas
cmpsl
mov
xor
mov
test
lcall
data16
mov
std
mov
test
int
or
cmpl
mov
std
out
cs
cmpl
cmp
pop
mov
jl
sarl
aas
mov
sub
pop
pop
xchg
pop
inc
jno
xchg
dec
and
shrb
adc
test
fwait
jne
std
or
pop
xchg
and
lods
aaa
sarb
mov
sar
push
mov
fstps
call
outsl
xor
fbstp
or
stos
add
pop
xor
loope
pop
push
nop
aam
jnp
add
dec
lahf
push
fisubl
fdivl
ds
cltd
repnz
push
in
mov
loopne
jg
dec
inc
push
add
cmpsb
xlat
std
mov
inc
xchg
in
sahf
cmc
cmpsl
push
or
or
iret
sbb
jnp
hlt
cld
cmp
inc
lods
jl
dec
pop
outsl
inc
push
dec
dec
inc
loope
mov
xor
pop
inc
add
adc
sub
out
add
popf
out
repz
sbb
scas
and
mov
xor
loopne
ror
add
inc
addr16
out
std
int3
mov
aam
sub
or
lods
inc
mov
loop
mov
scas
push
lds
test
fmull
repz
cmp
cmpsl
sbb
sbb
loop
fs
mov
jns
xchg
out
stc
popf
xor
test
scas
dec
mov
mov
lret
rcll
lock
pop
sbb
jle
negl
js
jne
shrb
sbb
ret
popa
pop
rcrb
inc
jl
sub
mov
mov
out
in
or
icebp
add
sbb
push
negl
sbb
sub
ljmp
sti
inc
mov
repz
mov
inc
and
jl
pushfw
iret
cmp
cmc
dec
vmwrite
adc
jmp
push
in
adc
das
rcrl
xchg
out
mov
mov
inc
sub
test
inc
lods
jns
mov
jo
mov
jae
imul
mov
jg
add
arpl
fs
inc
inc
mov
popa
aaa
jb
xlat
mov
stos
or
jl
mov
pop
incl
in
mov
push
adc
lods
std
xchg
mov
jmp
xor
les
out
add
js
pop
xchg
imul
sti
scas
mov
lods
in
or
js
outsl
je
cmpsl
in
aad
pop
sbb
sbb
cmp
das
addr16
ljmp
imull
outsb
mov
xchg
iret
nop
sbb
push
mov
aam
cmpsl
dec
pop
and
andl
scas
xor
xor
in
arpl
mov
aaa
mov
ret
mov
push
push
inc
ds
sahf
insb
cmp
aam
icebp
ds
jmp
mov
xor
insb
js
jmp
lods
mov
mov
xchg
mov
leave
mov
xor
fldl
aaa
xor
stos
shl
dec
dec
inc
ficompl
push
push
fldenv
and
push
mov
xor
pop
movsb
push
popa
jo
shlb
jp
faddl
mov
les
pop
cmpsb
mov
pop
adc
sbb
xor
test
je
inc
push
add
fdivrp
dec
cmpsb
pushl
mov
xor
inc
lea
sbb
add
addr16
test
lods
hlt
mov
imul
imul
cmpsb
jg
jo
pop
out
sahf
mov
aad
arpl
pop
push
lods
mov
mov
sub
jmp
pop
and
jmp
jmp
insl
shl
divb
cs
mov
mov
and
xor
gs
sbb
das
jg
lods
inc
and
outsb
data16
jmp
jg
inc
jb
subl
ja
mov
and
jg
in
jb
cmc
es
inc
or
adc
not
xchg
sbb
pop
daa
fs
cltd
insl
daa
enter
xchg
mov
fstl
pusha
push
xchg
jge
bnd
stos
outsl
stc
faddl
inc
lds
sbb
lds
dec
fstpl
jg
jno
hlt
rcl
hlt
repnz
inc
sbb
cmpsb
dec
inc
sub
push
inc
jb
aad
ret
out
xchg
push
insb
add
clc
test
aad
addr16
dec
sbb
lahf
push
jge
xchg
cmp
xor
insl
pop
xchg
aas
idiv
cli
jl
jle
scas
sbb
adc
mov
add
xchg
loopne
pop
xor
fisttps
in
out
pop
push
mov
cmp
pop
push
cmpsl
out
dec
aad
scas
or
lds
pop
rcr
insl
ja
fs
ret
jecxz
xchg
push
inc
pop
cmp
adc
aas
or
jb
in
adc
decb
lret
in
mov
popa
mov
and
ds
adc
push
negl
inc
mov
int3
dec
clc
xor
imul
aad
das
imul
mov
mov
mov
mov
test
in
jns
inc
arpl
xchg
mov
xor
dec
mov
mov
jo
mov
mov
into
xchg
scas
insb
sar
das
cmp
mov
loopne
and
scas
dec
jb
pmaddwd
aaa
decb
popf
cmp
orb
cmp
sbb
je
out
sti
les
mov
cmc
jae
inc
movl
pop
enter
stos
movsb
hlt
xor
jmp
movsl
sbb
jns
aad
inc
data16
mov
test
push
lret
or
repz
pushf
pop
adc
and
lahf
cmp
repz
test
dec
lock
lea
testb
add
jg
jl
mov
fwait
test
cmp
push
or
pop
arpl
int3
js
addr16
out
push
je
xchg
or
cmp
mov
in
in
scas
xor
inc
inc
inc
shr
push
movsl
mov
inc
cmp
fsubs
lods
fdivrl
cmp
fistpll
add
jne
xchg
pop
jne
xor
push
cmpsl
push
pop
sarl
jmp
jb
cwtl
hlt
les
sub
js
insl
movsb
cmp
sbb
or
leave
in
cmpsb
xor
mov
inc
loope
dec
or
rcl
ret
jecxz
bound
pcmpgtd
fs
inc
push
cmp
sbb
clc
mov
fidivrs
ljmp
decl
sbb
cmp
pusha
les
les
aam
jecxz
push
sbb
std
popf
pop
cli
jne
add
or
jecxz
mov
sbb
stc
in
pop
mov
arpl
mov
out
lods
mov
jno
push
xchg
int
adc
imul
adc
das
nop
cmp
rcrb
stos
pop
cmp
in
fidivrl
mov
dec
arpl
jb
mulb
mov
mov
scas
popf
pop
popa
mov
mov
sti
out
jmp
aas
ffreep
sahf
fsubl
in
xchg
stc
mov
sbb
ja
and
xor
push
pop
std
in
sub
jbe
bound
das
ret
sti
movsl
imul
jae
xor
jns
mov
lcall
push
add
in
jecxz
push
jp
cmpsb
mov
cmp
mov
adcb
xadd
add
adc
movsb
cmp
adc
arpl
sbb
aad
push
xchg
inc
aaa
sbb
cmc
inc
adc
jb
mov
sbb
xor
fsubl
out
aad
sbb
pop
in
mov
pushf
pusha
idiv
jbe
popf
sahf
popl
into
jg
lahf
lds
pop
ss
cli
ret
cmp
fdiv
xor
les
lock
mov
movsl
xchg
test
or
cs
cmpsb
out
les
popf
mov
roll
cmp
lcall
sarb
jb
cmp
ret
popa
sub
aad
shrb
jp
add
mov
enter
nop
or
nop
mov
je
sbb
das
and
pop
sbb
fisttpl
iret
push
cmc
inc
pop
clc
gs
es
push
insb
dec
cmp
xchg
jl
out
mull
jl
xlat
leave
stc
dec
push
pop
sahf
mov
mov
dec
jbe
cmp
cmovge
sti
mov
lds
stc
fs
push
sbb
dec
sti
sahf
pop
mov
aaa
cwtl
push
sahf
outsl
testl
xchg
xchg
cmp
sub
fs
fs
adc
add
lods
xlat
rclb
cld
sti
push
fisttpll
imul
es
xor
cltd
pop
jnp
js
jno
loopne
aaa
fwait
mov
dec
call
ja
or
mov
jmp
int
fs
sub
mov
fnstsw
dec
sub
lods
fmuls
mov
cltd
dec
ljmp
mov
adc
arpl
movsb
fs
aaa
mov
sbb
or
stos
pushf
in
div
xlat
iret
inc
adc
cmpsb
cmpsl
shr
call
or
push
call
jae
or
dec
out
in
pop
pop
mov
jo
mov
inc
push
cmp
mov
not
rolb
call
lods
dec
add
mov
arpl
mov
sbb
jo
data16
adc
sbb
call
outsl
fdivs
popf
push
cld
and
pop
pop
push
mov
ljmp
add
add
sub
loopne
sub
arpl
and
mov
decl
xchg
out
push
and
divl
lcall
dec
movsl
push
jnp
test
inc
xchg
ljmp
test
test
cmp
lcall
mov
mov
mov
bound
mov
repz
call
mov
push
mov
cwtl
arpl
cli
lds
dec
mov
xchg
sub
call
mov
iret
hlt
sbb
loopne
jno
leave
inc
aam
xor
xor
std
orb
jbe
mov
inc
add
negl
inc
out
lret
inc
adc
push
inc
xor
adc
pop
orps
notb
push
arpl
lods
notl
jae
mov
negl
pop
das
add
pop
bound
fs
add
in
pushf
pop
pop
std
dec
dec
mov
test
cli
dec
push
test
rol
or
pop
std
prefetch
outsb
jecxz
dec
xchg
mov
cli
pop
xchg
dec
lea
iret
adc
xor
arpl
xor
add
pop
jb
lock
aas
std
loope
repnz
cmpsb
aam
lds
mov
test
adc
stc
out
or
loopne
cmp
push
sub
mov
dec
pop
sub
divl
push
nop
les
adc
aam
punpcklwd
jb
rorb
iret
leave
mov
push
dec
cmp
iret
mov
mov
xor
ss
push
adc
adc
or
dec
jge
mov
mov
rcll
lods
jge
and
dec
jno
sbb
push
and
arpl
lock
sbb
scas
scas
mov
daa
in
add
repz
mov
popa
push
aam
cld
fiadds
push
js
mov
fcom
jmp
insb
dec
add
test
pop
lret
inc
test
out
adc
cmp
mov
xor
jbe
ja
cmpsl
divl
bound
emms
or
sbb
pop
jae
scas
inc
xchg
out
dec
xchg
sti
addl
mov
dec
or
cs
enter
insl
and
fisubl
leave
fsubr
mov
lea
shlb
add
push
fmull
in
inc
jecxz
std
repz
sbb
push
insl
aaa
lds
push
add
jne
pusha
mov
push
movsl
adc
movsb
cmp
ljmp
mov
cmpsb
sbb
stc
data16
popa
cmc
rclb
pop
cmp
mov
mov
repz
addb
mov
sbb
push
lret
flds
ret
pop
popf
repnz
adc
pusha
rorl
jmp
mov
dec
aam
pop
push
push
xor
dec
sub
dec
sub
test
mov
mov
pop
add
rorb
rcrb
jmp
call
jnp
std
out
mov
jne
and
fistpl
push
sti
shlb
cmp
xor
rcll
xlat
outsb
inc
mov
fimuls
pushf
loopne
pop
cmp
pop
insl
pop
sub
inc
mov
sbb
lods
xchg
xlat
test
jno
lcall
mov
imul
mov
sub
sbb
cltd
shll
jae
pop
gs
ja
xlat
push
push
mov
imul
mov
sub
cmp
xor
push
mov
xchg
sbb
das
cmp
jns
movsl
cmp
js
sti
mov
dec
mov
mov
gs
les
cmp
push
push
add
add
mov
cmp
std
jle
cmp
xchg
fcmovne
cwtl
mov
psubsb
pushf
sbb
sbb
jl
pop
adc
mov
dec
mov
add
andl
push
push
mov
movl
loop
js
jge
mov
xlat
dec
dec
dec
aaa
loope
shlb
shlb
sbb
in
or
out
lcall
test
fcomi
xchg
out
cmp
int3
or
mov
cmp
rolb
xchg
repnz
jecxz
lds
dec
inc
sub
mov
loopne
jp
adc
jb
push
and
test
sbb
pusha
xchg
sub
sub
into
sub
sub
and
xchg
cmp
std
icebp
das
jbe
mov
roll
sbb
dec
dec
fld
mov
pop
int
xor
mov
scas
out
jbe
xor
in
or
dec
cmc
push
push
repz
and
pop
pop
mov
xchg
mov
or
xchg
pop
imul
int3
pop
sub
lods
pop
add
push
sahf
xor
lds
and
mov
dec
pop
fs
jg
out
push
test
push
out
cs
fidivl
mov
sbb
sbb
in
in
cld
jns
sbb
int3
ret
mov
lahf
call
sbb
xchg
in
inc
cld
cmp
aam
push
jge
rorl
sub
loopne
sub
fbld
pop
jg
mov
outsl
inc
je
mov
dec
call
add
out
mov
shr
push
add
cs
int
cmpsb
aad
lret
and
push
push
or
cmp
gs
xlat
fwait
jbe
sub
jge
adc
sti
mov
xorb
loopne
stos
adc
mov
xchg
add
pop
jno
int
jne
mov
ret
xlat
xchg
nop
lods
jo
outsl
hlt
sbb
cmpsb
je
lret
mov
sub
and
sbbb
jecxz
fs
sub
fsubp
pushf
rcll
mov
mov
test
dec
dec
cmp
adc
cmpsb
add
xchg
insl
push
inc
lcall
mov
jo
dec
loopne
dec
pop
in
dec
stos
insb
addr16
dec
adc
in
lret
mov
xor
and
pop
sbbl
cmpsl
lock
test
sub
cli
call
stos
ret
cmp
fcompl
das
xlat
int
movsl
aas
or
xchg
mov
inc
int3
lahf
and
add
rcrl
pop
cltd
push
push
lret
add
mov
lds
data16
jg
mov
adc
lods
mov
fdivrs
out
ficoms
mov
and
pop
fcomps
pop
jmp
push
orl
or
leave
jnp
fstps
test
push
xor
sub
inc
dec
mov
mov
add
sbb
aad
je
adc
cmp
mov
fwait
mov
pusha
mov
stos
mov
adcb
push
mov
cs
fnstsw
fcoms
push
pop
push
jle
fs
lods
rcrl
subb
int3
sbb
adc
nop
adc
jne
adc
jo
mov
push
cmc
lret
rcll
cmc
mov
data16
cmpsb
push
movsb
popa
xchg
xor
mov
notb
idivl
push
int3
pop
mov
sbbb
aas
je
jo
test
add
aad
jg
lret
jle
lcall
sub
rcrb
int
mov
test
lea
cmp
out
stc
push
in
pop
or
adc
pop
sub
loope
fldcw
xchg
mov
pop
mov
sbb
xor
mov
sub
les
inc
xor
fdivs
xchg
movsl
pop
pop
popf
sub
fs
push
jg
push
cld
mov
mov
jnp
sbb
mov
add
out
jae
push
add
aas
imul
lds
mov
or
outsl
mov
sbb
icebp
mov
xor
cmp
and
in
lds
das
mov
leave
xchg
xor
daa
mov
pop
mov
dec
add
sub
xchg
jl
or
mov
cmc
aam
inc
dec
mov
inc
imul
repz
les
les
aas
or
sbb
push
pop
xlat
cs
sbbb
push
push
jmp
inc
sub
push
loopne
fisubrl
add
cld
mov
rcl
or
inc
mov
sub
imul
cmp
pushf
xchg
mov
out
gs
push
lcall
stos
stos
pop
fstl
mov
ret
loopne
and
and
inc
jp
xor
pop
jmp
loop
mov
cmp
jp
xchg
outsl
test
mov
in
addr16
ficompl
fsts
sub
bound
sbbl
xchg
loopne
movsl
mov
mov
and
out
fidivrl
jge
jmp
ljmp
pop
add
mov
lret
out
jbe
iret
out
mov
out
xchg
enter
mov
dec
add
push
in
jg
call
sahf
insb
out
xchg
cmpl
bswap
sub
les
aad
mov
test
jns
and
fs
and
sar
inc
xor
dec
xor
push
pmullw
lret
mov
lret
cli
lahf
xchg
jecxz
xchg
fistpl
xchg
push
xchg
sahf
xchg
jge
icebp
popf
jp
fsubrl
gs
orl
test
insl
mov
rsqrtps
jle
push
jmp
jl
push
int3
mov
hlt
or
lahf
xchg
or
jne
mov
jmp
aam
test
lds
mov
mov
addl
out
mov
iret
out
sti
stc
in
mov
jle
loopne
outsb
push
das
scas
aas
mov
cmp
fs
std
jecxz
and
int3
sbb
adc
dec
enter
jae
and
inc
adc
fsubrl
sti
sbb
jo
jl
sbb
push
adc
jle
add
int3
push
aam
shll
or
or
hlt
jno
int3
sbb
adcb
sbb
stc
sub
movsb
mov
mov
jp
pushf
xor
test
cs
ljmp
cmpsb
jae
in
pop
inc
lahf
adc
jmp
mov
ffreep
and
notl
jecxz
fidivs
mov
jle
jae
jb
add
pop
mov
and
mull
test
sub
jne
mov
jbe
pop
call
inc
xlat
fmull
dec
mov
and
dec
stos
mov
inc
push
xchg
adc
enter
aaa
pop
jmp
mov
out
ljmp
aas
hlt
sti
and
push
cmc
popf
sub
mov
inc
cmc
adc
sbb
push
dec
inc
inc
jmp
std
push
mov
xor
jecxz
scas
arpl
dec
xor
dec
movsl
cmp
or
pushf
enter
in
in
add
aad
mov
and
ds
cs
xor
mov
shll
dec
dec
ds
test
lret
movsb
mov
movl
sbb
cmp
mov
jmp
xchg
mov
scas
or
and
icebp
pop
sbb
ret
sbb
jecxz
shlb
mov
lret
xor
inc
scas
xor
clc
outsb
and
sub
add
adc
lret
cltd
imul
xchg
add
iret
and
jmp
js
cmpsb
fcompl
ret
cli
lret
fbld
xor
out
adc
push
in
loopne
fs
out
adc
repz
out
in
cmp
mov
insl
pop
andl
insl
dec
lods
jl
mov
push
xor
xlat
mov
aaa
divl
pusha
dec
out
dec
jbe
jnp
cwtl
xor
inc
mov
jo
adc
aad
xchg
out
or
inc
mov
ljmp
in
int3
cmc
add
mov
sub
outsl
mov
xchg
mov
mov
sbb
hlt
stos
inc
imul
mov
pop
pusha
add
mov
sub
stos
loopne
iret
adc
inc
cmp
push
adc
movsl
xchg
aas
cmp
xchg
sub
xor
or
jb
popf
jae
inc
ljmp
int
adc
xlat
fistl
out
movsl
out
pop
mov
mov
cs
inc
push
jle
fwait
pop
fidivrl
or
mov
movsb
addr16
je
jecxz
incb
fldl
loop
and
mov
imul
in
out
push
dec
inc
pushf
stos
les
jge
out
inc
test
dec
jl
mov
xchg
pop
mov
mov
test
dec
pop
sbbb
mov
mov
fldenv
or
pop
or
sarl
push
in
adc
fdivl
and
mov
xchg
push
cltd
cmpsb
icebp
pop
mov
mov
cmp
clc
dec
pop
stos
jge
xor
xor
scas
stos
mov
inc
fwait
inc
sub
pop
icebp
and
sahf
loopne
mov
pop
jp
ret
and
es
pop
cmp
push
leave
ficomps
xor
add
fwait
sbb
test
out
sbb
stos
jb
mov
sbb
cmp
push
sub
cmp
aam
andl
mov
outsl
cld
mov
jl
add
scas
xchg
fisubs
aas
call
dec
leave
rcll
xchg
xchg
in
scas
mov
lods
push
rolb
mov
push
out
push
mov
pextrw
inc
mov
cmp
sub
mov
insl
stc
pop
repnz
addl
loop
jbe
aad
push
jnp
test
inc
mov
out
addr16
xlat
and
movsl
mov
fistl
mov
repz
into
mov
sub
mov
sub
int
rcrl
arpl
push
inc
inc
mov
dec
arpl
insb
cmp
call
ds
std
mov
lret
add
ret
lahf
mov
lahf
dec
push
pop
movsl
std
andb
cwtl
push
stos
push
adc
bound
pop
lahf
mov
clc
jle
mov
and
mov
lods
loopne
adc
arpl
rcl
scas
insl
leave
adc
dec
mov
mov
mov
imul
jmp
mov
pop
mov
adc
sbb
sarb
and
roll
jl
ret
in
sti
mov
std
cmp
fs
shrb
pop
scas
ljmp
mov
xchg
outsb
lea
sbb
jmp
cmp
pusha
in
inc
imul
push
lods
xchg
mov
jge,pt
les
and
mov
or
cld
je
add
daa
mov
negb
cmp
add
es
pushf
fidivl
inc
jbe
pop
andb
add
xor
mov
arpl
xor
ret
and
insb
inc
sub
jp
adc
mov
adcl
dec
push
mov
cwtl
bound
sbb
xlat
loope
aad
or
iret
cmp
ja
mov
sbb
pushf
pop
fstpl
mov
add
das
adcl
jbe
test
mov
mov
lret
mov
jbe
jo
rol
scas
add
faddl
jle
addr16
add
xchg
push
inc
ficompl
and
mov
aam
cltd
dec
pop
mov
push
cmp
add
test
mov
sub
lahf
mov
inc
scas
inc
jo
jae
stos
push
lret
ret
cmc
imul
mov
int3
sbb
scas
std
push
and
or
jbe
lahf
pop
mov
cmp
sub
es
lods
push
aas
adc
in
mov
addb
hlt
adcb
popa
nop
jg
adc
popf
and
fadd
jge
ljmp
inc
cmpsl
cmp
ficompl
push
adc
sub
push
inc
rorl
and
lods
sub
adc
setp
push
testb
inc
out
jbe
cs
nop
xchg
out
mov
inc
imul
mov
and
mov
push
pop
mov
pop
or
test
leave
cmp
pop
test
insb
mov
sbbl
lods
out
sbb
add
xlat
daa
sbb
jo
push
sbb
push
ret
mov
push
inc
into
lds
add
inc
and
sbb
xor
insl
cmpsl
nopl
into
icebp
push
out
cmp
daa
xchg
xlat
push
add
cld
mov
jg
xor
lcall
add
mov
or
es
xor
inc
lds
call
loopne
pop
add
jle
xor
shr
imulb
int
mov
mov
js,pt
lods
jp
fisubl
jmp
test
mov
pop
inc
pop
ljmp
mov
and
mov
enter
dec
sub
xchg
cmp
data16
pop
mov
inc
xchg
jne
inc
inc
mov
jg
lods
sbb
jno
ret
inc
icebp
rcll
jnp
iret
mov
jo
jne
ss
rorb
sbb
out
mov
iret
leave
repz
mov
insb
mov
loopne
push
loop
das
into
pop
pop
mov
out
sbb
mov
cltd
mov
cmp
adc
repz
movsb
sbb
fwait
std
push
stc
jb
fdivs
stos
icebp
add
pop
jnp
in
jl
das
rorb
test
mov
inc
mov
cmp
bound
xchg
mov
mov
jb
std
pushf
lcall
cmp
cwtl
mov
and
cmp
xchg
inc
and
dec
inc
mov
dec
inc
ret
aam
insb
test
sahf
jle
mov
push
push
jge
sti
pop
push
cld
out
mov
push
lds
call
xchg
sub
inc
out
ljmp
cmpsb
jbe
fs
mov
xchg
sbb
xor
cmp
sahf
xchg
push
lahf
into
jb
pushf
stos
add
sarb
in
int3
pushf
mov
xor
pop
jp
aam
pop
rclb
call
mov
movsb
xlat
and
xor
pop
ja
and
popa
rorl
mov
idivb
adc
add
idivl
popf
add
adc
jns
add
ret
xlat
mov
jge
mov
inc
scas
outsl
add
lock
adc
enter
jne
inc
cltd
popa
pushf
stos
sub
jecxz
hlt
out
loop
pop
scas
nop
data16
add
test
sub
pop
push
fsts
sahf
repnz
rorl
push
popa
cmpsb
mov
jno
scas
jmp
std
inc
adc
test
lcall
fdivr
xchg
dec
xor
test
movb
test
sti
dec
test
jecxz
xchg
in
adc
in
testb
push
pop
add
lds
dec
in
push
loope
and
or
decb
lds
cs
stos
add
sahf
lods
xor
mov
icebp
jb
leave
pop
int3
dec
mov
shlb
fsubrp
fidivrl
pusha
push
in
movsl
rolb
aam
jecxz
jnp
mov
test
cmp
pop
iret
out
adc
lahf
sbb
pop
or
test
push
daa
lods
scas
jbe
xchg
or
adc
test
icebp
xor
push
adc
pop
imul
inc
into
test
clc
ret
out
fldt
and
mov
ffree
pop
xlat
ljmp
ficoms
pop
pop
mov
add
pop
repnz
xchg
mov
or
gs
add
and
shlb
push
ret
inc
insb
fdivr
andl
jbe
cmpsl
mov
aaa
std
jg
mull
adc
cmpsb
dec
out
push
lods
in
shl
test
adc
mov
inc
pop
cmp
lahf
popa
scas
sub
mov
lods
clc
shll
jns
test
ret
jg
jle
fwait
xor
mov
mov
mov
mov
fidivl
fisttpl
push
sbb
insl
rolb
cmp
loop
mov
scas
pusha
in
stos
nop
js
jo
sub
push
data16
insb
mov
sub
movsb
cmpsl
mov
in
pushl
scas
cltd
pop
dec
sbb
sarl
test
or
cwtl
in
loope
cmp
push
ja
pop
dec
enter
incb
fnstenv
jmp
xor
fldl
jns
lock
sub
mov
sbb
insl
sub
cld
mov
or
ret
ss
sub
fstpl
mov
add
jbe
mov
out
mov
jno
das
cs
mov
loopne
and
test
test
les
mov
leave
add
fadd
stos
cld
adc
inc
xchg
adc
dec
ret
popf
mov
add
js
jbe
rcl
dec
sub
lods
les
in
lret
lret
bound
data16
mov
jge
mov
mov
rcrb
or
jecxz
pop
hlt
rcrb
push
loopne
std
cmp
or
sub
loop
mov
pop
push
ret
outsb
xor
push
xchg
les
mov
stc
daa
sti
mov
inc
cwtl
repnz
adc
imul
xchg
out
or
insl
adc
psubsb
daa
push
xchg
mov
push
fcmove
scas
dec
push
aad
hlt
xchg
add
push
push
push
or
xchg
lahf
push
or
xchg
mov
add
dec
ljmp
sub
pusha
adc
ds
fisubl
ret
sbb
push
mov
jmp
mov
sbb
dec
lcall
lret
mov
out
adc
jle
aas
inc
jg
mov
aaa
cwtl
mov
hlt
mov
testb
or
pop
jae
into
adc
roll
mov
dec
fnsave
xor
ljmp
xlat
aad
jg
ficoml
aas
aas
std
int
daa
mov
in
shll
dec
mov
push
or
aam
test
mov
push
inc
and
push
das
in
sbb
out
ret
fs
jg
shll
rep
push
xorb
pop
xor
vpunpckldq
jmp
fwait
dec
out
gs
jno
jecxz
aad
xchg
fucomp
cmp
lret
inc
xchg
lret
push
mov
test
xchg
pop
push
test
xor
or
and
inc
scas
cltd
pop
mov
insl
ja
nop
test
jae,pn
lods
enter
hlt
pop
push
daa
fdivrs
stos
scas
push
dec
inc
fmuls
hlt
inc
iret
xor
and
inc
aas
push
and
mov
addr16
xchg
xchg
jecxz
ret
inc
mov
adc
js
shlb
cmc
aad
xor
les
lret
pop
test
test
push
std
testl
xchg
daa
or
test
jns
push
test
loop
iret
imul
or
sub
lds
cmc
mov
sbbl
jbe
jo
lret
popf
testb
es
out
jg
lret
xchg
add
mov
mov
popf
fwait
sub
cld
outsl
mov
inc
shll
int
icebp
dec
pop
mov
dec
cmp
xchg
int3
lds
das
dec
push
mov
lret
cmp
out
xlat
jne
mov
or
xchg
pop
mov
inc
nop
push
ret
test
add
xor
dec
imul
lahf
dec
fsubrl
add
iret
cs
pop
lds
aad
outsb
cmp
sbb
cmp
jl
cmpsl
stos
xchg
int
jmp
dec
mov
aad
xor
aaa
lea
mov
icebp
punpckhwd
push
insb
lahf
inc
and
sub
movl
fucomip
out
push
in
mov
rolb
je
xorl
pop
fdiv
iret
shll
icebp
mov
pop
mov
xchg
pop
pop
insb
cmpl
shlb
jbe
cmp
jo
jbe
dec
xor
js
aad
jp
jb
sub
xchg
add
dec
mov
cmp
scas
fnsave
insl
inc
mov
ljmp
xor
push
inc
movsb
add
lods
adc
pop
bound
lret
jae
mul
lahf
xchg
dec
sub
lods
add
in
and
push
ret
cli
ja
xchg
mov
xor
mov
out
jb
dec
test
loop
test
int
adc
mov
arpl
out
fdivrl
inc
out
in
dec
push
in
mov
sahf
rcr
lea
das
rcrb
mov
add
clc
outsb
sbb
pop
push
out
pusha
xchg
mov
out
loope
loopne
fsubrs
movsl
jno
push
xor
add
daa
jne
mov
and
and
scas
outsb
push
movsb
pop
mov
cmove
pop
das
out
js
add
jge
shl
dec
stc
ret
jl
sbb
out
pop
stc
popf
inc
pop
mov
mov
mov
test
das
dec
aam
and
lret
cs
bound
test
in
aaa
jecxz
setbe
pusha
lahf
push
mov
sub
pop
out
xor
mov
mov
mov
pop
xchg
mov
inc
dec
pop
adc
mov
push
push
and
mov
sub
jmp
inc
jnp
add
ja
and
outsb
cmp
ss
mov
push
jg
push
scas
mov
sbb
xchg
pop
adc
xor
push
pop
jb
sahf
add
mov
dec
push
das
dec
pop
aas
sub
push
aas
outsb
jae
int3
and
fdivrs
out
popf
jnp
sbbb
sub
outsb
adc
sti
mov
sub
pop
cmp
int3
push
dec
rolb
call
fwait
lods
dec
xchg
neg
xchg
add
gs
xchg
mov
ss
fnstcw
ud0
jecxz
sub
adc
ret
xlat
jp
scas
add
mov
stos
pop
sub
sbb
out
pop
xchg
scas
jae
sub
mov
sub
mov
mov
js
inc
mov
cwtl
xor
mov
fadd
add
jae
les
jle
mov
loop
push
sbb
idivl
out
fs
das
mov
xlat
or
pop
xchg
jl
mov
sbb
or
sbb
inc
shrb
addl
pop
imul
loopne
insb
dec
jae
test
xchg
sub
mov
cmp
adc
or
aaa
push
pop
hlt
nop
orb
push
in
and
stos
fcompl
sbb
adc
sub
inc
inc
ds
pop
aad
adc
push
sti
push
xchg
es
mov
insb
mov
fimuls
xor
movl
lahf
lock
xchg
out
mov
in
data16
aaa
push
push
dec
jae
insl
sub
scas
pop
sbbb
sbb
cmp
and
jge
pop
add
pop
ds
inc
push
ss
and
mov
aad
xchg
push
mov
ficoms
scas
ljmp
mov
xchg
divb
push
aad
push
pop
test
sub
jmp
data16
cmp
dec
ss
stc
mov
adc
lea
mov
lds
fistpll
mov
repz
imul
imul
into
mov
adc
jnp
add
loopne
cwtl
sbb
mov
rcrl
cltd
cli
aaa
insl
stos
enter
inc
repz
les
cwtl
into
aas
lock
xlat
fucomip
shlb
inc
push
in
leave
adc
push
push
icebp
mov
sub
or
sub
fdivrl
lock
lock
in
push
cld
cmp
push
xor
push
cwtl
jns
dec
sbb
cmp
dec
dec
mov
push
jb
sub
ret
adc
pop
mov
or
cmpl
push
xchg
fistpll
ds
xor
mov
push
in
imul
mov
shlb
push
mov
jl
popf
lods
mov
inc
nop
mov
and
mov
dec
dec
ss
aaa
int
in
adc
shr
loop
shrb
popa
cmp
and
in
pop
das
sub
jp
fimull
sub
stc
stc
xchg
dec
andb
gs
cwtl
xor
sbb
icebp
sbb
shlb
in
jae
push
bound
popf
sbb
gs
int
mov
jle
rcrl
addr16
push
or
jb
and
add
arpl
inc
xchg
mov
int3
mov
lds
or
push
clc
mov
icebp
arpl
xor
pushf
fcom
scas
inc
sbb
inc
out
lds
dec
fisubl
fidivs
test
push
nop
cmpsl
xor
jl
push
je
sbb
mov
or
mov
sbb
movl
mov
inc
pop
push
mov
cmp
das
cmc
mov
pop
cs
ljmp
jg
pushf
imul
jmp
in
icebp
out
arpl
fildll
insb
pop
in
out
xchg
or
nop
popf
jmp
bound
mov
jg
cmc
fdivrl
mov
mov
outsl
negl
lods
inc
ret
fs
and
and
mov
adc
inc
push
je
adc
xorb
sbb
testb
movsb
rorb
out
adc
mov
mov
cmp
ss
cltd
mov
inc
sahf
inc
dec
cmpsb
mov
push
xchg
push
jg
and
rolb
dec
enter
test
ljmp
aam
call
pop
xchg
shll
mov
jecxz
lods
xchg
pop
lcall
push
out
pop
jp
int3
inc
scas
ret
movsl
std
mov
inc
rolb
lret
mov
xor
cmp
mov
aad
cmpsb
push
jp
mov
jo
jmp
adc
daa
mov
int3
mov
jo
jbe
fs
mov
mov
mov
outsb
mov
lods
cmp
test
sub
aad
jns
xor
xor
fidivrs
fimuls
test
inc
lea
pop
ror
jecxz
mov
mov
dec
pop
mov
pushf
sbb
jae
or
push
dec
loope
int3
push
adc
cmove
push
aam
popf
mov
and
add
aaa
adc
test
and
xor
daa
dec
arpl
xchg
mov
into
jecxz
sahf
insl
ja
mov
pop
mov
pop
ja
mov
int
push
mov
std
std
adc
sub
xor
outsl
outsl
jnp
inc
loopne
jmp
call
lods
ljmp
push
decb
loopne
pop
je
filds
ret
mov
mov
push
add
jb
xor
dec
in
add
lcall
jo
jns
lds
sub
mov
mov
and
nop
mov
fists
insl
repz
cmpb
stos
enter
jge,pn
cmc
jl
movsl
out
sbb
sbbl
imul
xor
lahf
jle
sti
stc
pop
jae
xor
xchg
out
gs
cmp
dec
mov
dec
bound
cmp
aam
in
sbb
cmp
out
mov
xchg
gs
sbb
cmpb
xchg
shlb
movsb
pop
repz
dec
ret
pop
mov
push
ljmp
call
lods
aad
xchg
mov
imul
cltd
fcmovnbe
xchg
pop
lods
lcall
xchg
pop
inc
mov
mov
andl
addr16
aad
sub
pusha
addr16
push
js
imul
xchg
mov
cmp
jecxz
ret
lods
xchg
and
cmpsb
mov
or
adc
xchg
dec
mov
jb
inc
sub
inc
sub
test
pop
hlt
push
std
test
fimull
ljmp
push
cld
lret
es
xor
ds
aas
push
ja
call
jg
sub
mov
js
dec
dec
das
mov
arpl
insl
dec
and
loop
cli
dec
push
mov
or
sbb
or
leave
adc
cmc
sub
mov
es
daa
inc
sub
lcall
adc
dec
mov
lock
inc
cmp
iret
jns
ljmp
mull
jmp
testb
cli
push
std
out
andb
or
adc
pop
sbb
push
xchg
js
mov
jecxz
nop
cmp
push
lret
and
enter
push
mov
xor
test
pop
mov
inc
mov
xchg
ret
loop
out
jmp
pop
sbb
push
test
inc
cmp
mov
inc
jecxz
gs
mov
xchg
xlat
das
jmp
sub
fildl
lret
sub
stos
sbb
bound
sub
pop
insb
scas
sub
pop
aam
shll
pop
push
popa
cltd
in
push
loop
cmp
cmp
mov
cs
ror
js
outsb
dec
jg
ss
jle
xlat
add
icebp
stos
pop
pusha
testb
mov
mov
loope
sbb
xchg
inc
xchg
arpl
cmp
mov
sub
imul
xor
sarl
sub
shl
shrb
rcrb
std
addr16
mov
movsl
out
out
mov
repnz
jecxz
hlt
out
lods
mov
pop
jmp
mov
pop
popa
dec
test
pop
ss
lods
lcall
mov
jne
lret
mov
test
dec
xchg
xchg
scas
in
aaa
push
xor
xchg
in
test
iret
push
punpckldq
xor
mov
out
or
mov
or
jl
pusha
je
imul
jno
mov
mov
fwait
xor
sub
sub
daa
inc
in
xor
jae
jnp
js
push
divl
sbbb
push
mov
xor
mov
adc
shll
arpl
xor
jb
mov
mov
and
js
mov
leave
leave
in
sti
cwtl
mov
sbb
out
pop
xchg
jp
fwait
push
xchg
xor
jp
call
cmpsl
data16
fs
mov
mov
lret
fisttpll
cmp
cmp
outsl
push
dec
mov
loop
xchg
aad
mov
xchg
mov
imul
sti
dec
cwtl
outsl
sub
sbb
push
addb
dec
test
mov
fcompl
dec
add
sub
fwait
int
mov
in
jbe
aas
bound
aas
aad
mov
jae
cmp
lods
push
out
mov
mov
addb
outsb
insb
jbe
mov
aad
orb
pop
xorb
mov
jp
mov
rsm
and
lret
and
scas
xor
lds
mov
mov
sbb
cwtl
lds
js
cmp
and
out
sub
stos
push
xchg
add
inc
jp
in
mov
mov
lahf
and
adc
loope
mov
adcb
in
xor
or
xor
not
lret
xor
dec
cwtl
cmpsl
cs
cmp
out
mov
push
rorb
dec
mov
or
push
mov
rorl
xor
icebp
cs
aam
jae
repz
insb
ret
push
xchg
sbb
fdivp
dec
add
aad
rclb
cmp
dec
cld
sbb
or
cld
popf
pop
negb
jo
xchg
pop
pop
dec
cmp
mov
psubd
daa
jecxz
rclb
jo
ds
jne
lods
inc
sbb
stc
xchg
scas
ja
sub
insl
clc
jge
das
stos
cli
repz
pop
push
es
mov
push
xchg
add
sbb
adc
pop
out
fnstsw
dec
leave
in
insb
jne
add
add
sub
xor
mov
dec
sahf
cmpl
sbb
dec
push
cmp
sbb
mov
shl
mov
cmc
loop
mov
mov
ljmp
or
mov
pop
pop
inc
and
in
xchg
mov
add
out
mov
jp
decl
jmp
test
ljmp
rol
xchg
dec
das
push
jl
mov
in
jb
push
sub
call
adc
outsl
icebp
pushf
jb
lods
pop
aaa
mov
das
shl
ljmp
and
cmp
adc
out
les
add
fsubl
test
out
inc
or
das
cmp
lret
xchg
adc
out
fistpl
inc
cmc
lods
test
jnp
mov
cld
xchg
push
cwtl
sub
xor
sub
mov
outsl
xchg
add
lods
cmp
outsb
in
inc
mov
jmp
pop
mov
aad
xchg
arpl
jns
push
fsubl
es
mov
pop
mov
std
cmp
cld
int3
xor
mov
or
test
stc
mov
or
inc
rolb
imul
mov
push
mov
loope
lea
push
xchg
and
or
xorl
or
and
jne
divl
sub
xor
push
es
incl
sbb
push
sbb
jl
ret
add
dec
mov
cli
in
lods
cmp
ret
stos
fistps
pusha
out
dec
jno
add
out
aad
and
jg
mov
insl
xor
das
fs
out
mov
dec
rclb
mov
jg
cmpsb
mov
sub
mov
stos
clc
sbb
mov
lods
test
dec
jmp
inc
xchg
sbb
rcrl
repnz
in
xchg
adc
lods
push
xchg
xor
rclb
jns
out
fldcw
mov
mov
mov
fdivrs
popf
push
vpunpcklwd
loope,pt
outsl
popf
jl
cmp
roll
repz
shl
jno
ss
outsb
pop
pop
das
cs
call
pop
jp
xor
and
mov
mov
push
cmc
sub
mov
bound
add
mov
jnp
pop
ret
loop
sbbb
xchg
xor
fcomps
add
notb
xor
mov
scas
xor
jb
adc
jecxz
xchg
xchg
dec
and
lods
movsb
sub
and
lret
dec
xlat
cli
xchg
es
mov
test
xor
loop
shll
pop
out
mov
xor
add
data16
mov
bound
adc
aam
mov
mov
das
cmp
add
push
or
mov
and
outsb
dec
popf
pop
test
rclb
mov
pop
dec
idivb
scas
dec
push
push
enter
arpl
or
xchg
mov
adc
pop
pop
pop
scas
sub
and
mov
push
inc
jecxz
pop
popa
iret
push
add
adc
add
js
xor
movsl
nop
cld
lret
pusha
addr16
xchg
inc
stos
popf
aas
cmp
sarl
sbb
pop
mov
mov
ret
dec
mov
jg
push
icebp
insl
jmp
scas
mov
insl
mov
xchg
mov
outsb
push
aam
pop
sahf
mov
or
clc
mov
mov
sub
push
jo
out
hlt
mov
xchg
into
cmp
arpl
out
mov
and
loop
mov
clc
fs
pop
insl
mov
jae
arpl
cwtl
mov
add
test
mov
push
cmp
mov
mov
cmpsl
mov
addr16
or
mov
les
dec
insl
xchg
jmp
das
xor
or
xlat
xor
inc
out
dec
lods
sub
gs
or
mov
call
fiadds
lods
ss
aas
add
mov
jp
std
jle
xchg
add
inc
scas
cmpl
cs
sbb
sub
inc
jge
es
jb
dec
nop
aaa
push
pushf
and
sub
mov
in
push
lahf
xchg
pop
cwtl
or
bound
jbe
sub
lods
xchg
out
test
test
hlt
filds
flds
jo
sbb
or
mov
mov
aam
sub
es
outsl
repz
lcall
mov
sbb
adc
stos
fstpl
or
outsl
aad
dec
add
shrl
dec
clc
loop
aaa
add
lret
scas
ret
pop
movsl
out
dec
jae
cld
inc
ret
xor
push
clc
and
movsb
in
adc
rcr
cld
loopne
mov
mov
or
sub
jmp
sahf
push
shll
in
cmp
jne
cmpsb
pusha
mov
jae
pop
aaa
add
mov
ja
mov
pop
mov
int3
fsubr
and
mov
in
cvtdq2ps
cmpsl
add
mov
cld
test
xchg
xchg
mov
es
aas
clc
cltd
push
push
xor
xor
push
inc
jmp
out
sub
xlat
push
push
outsb
pushf
xchg
repnz
mov
out
and
inc
adc
mov
mov
clc
aam
ret
jmp
leave
pop
push
rorl
les
and
adcl
mov
lea
aaa
bound
push
add
jnp
ficoms
push
xchg
adcl
bound
dec
mov
incl
xchg
jge
push
pop
idivb
ret
inc
mov
ds
mov
cmp
mov
mov
and
xorb
mov
leave
or
stos
idivb
jb
xchg
ja
push
in
mov
adc
int
ret
adc
sub
into
mov
or
dec
aas
pop
ret
inc
pop
sbb
adc
mov
sbb
and
adc
insl
ljmp
sbb
mulb
add
andb
jae
stos
adc
rcll
cmp
jl
jno
adc
or
adc
adc
loope
cmp
jg
call
jo
roll
popa
es
mov
int3
and
mov
fsts
pop
push
xor
daa
loope
cwtl
jp
mov
das
xchg
cwtl
cld
xor
fsts
dec
test
hlt
cmp
jge
push
mov
adc
cmp
mov
mov
mov
sbb
and
lret
leave
jmp
xchg
sbb
jne
pop
jo
imul
sub
and
stc
pop
lret
pop
in
xchg
mov
popf
dec
adc
mov
fadds
inc
ret
aas
das
cwtl
mov
jns
cli
push
sub
jne
iret
cwtl
pop
mov
imul
mov
inc
cmp
adc
ja
or
add
jmp
mov
std
test
xchg
pop
popf
jle
in
je
or
push
inc
mov
sar
push
mov
mov
fiaddl
lret
jg
adc
bswap
pop
jg
lea
imul
or
leave
mov
das
outsl
push
ret
pop
out
sub
out
or
pop
ljmp
push
imul
fs
pop
push
je
jmp
idivb
or
fisubl
enter
mov
sbbl
test
xor
out
ljmp
je
shlb
push
push
jno
sti
scas
sbbl
sbb
pushf
jge
loop
xor
arpl
jecxz
jl
lret
dec
cmp
dec
scas
lods
sub
sbb
ja
pop
incb
xor
jle
addl
xchg
xchg
movsl
in
xcrypt-ofb
cmpsl
sub
lods
xchg
push
sahf
mov
fwait
inc
cli
mov
pop
outsl
out
lret
js
and
cwtl
sarl
jno
and
in
sub
rcrb
lret
leave
sbb
cmp
or
dec
sbb
adc
add
add
fildll
in
and
pop
testb
lahf
push
in
jns
mov
stos
mov
in
je
popf
lahf
inc
add
inc
movl
pop
mov
imul
gs
sbb
jb
dec
inc
push
push
inc
mov
push
mov
cli
jo
in
popl
arpl
add
negl
mov
decl
lcall
pop
out
sub
out
push
sub
shrl
imul
push
fistpl
movsl
fs
xor
or
ss
push
lret
test
test
pop
js
cltd
repnz
icebp
add
sbb
pushl
arpl
xor
push
loop
les
pminsw
arpl
xchg
ret
adc
test
cmpsb
cmpsl
or
add
cmpb
mov
into
xchg
fs
call
mov
push
xor
ds
sbb
lret
movsl
xchg
sbb
ss
into
cld
inc
or
scas
mov
std
out
pop
loope
inc
pop
out
cmc
mov
aaa
incb
shll
scas
lret
dec
adc
xor
lret
arpl
push
cmpl
xchg
xlat
cmp
dec
jae
or
test
push
out
lds
addl
out
stos
ret
stos
cli
push
ud1
mov
xor
xor
in
rorb
push
or
ljmp
jmp
int
mov
add
fistps
adc
or
sbb
ret
jecxz
aad
lcall
push
shlb
mov
addb
inc
mov
lret
fstps
rcr
rcrl
jno
xchg
hlt
lcall
jl
xchg
es
mov
cwtl
add
shlb
pushf
aas
cli
pop
icebp
add
lcall
cmpsl
mov
fs
jbe
popf
ret
bound
add
insb
incb
call
int
jmp
cwtl
bound
mov
lahf
outsb
mov
mov
loop
in
subl
ret
pop
fdivrs
rorl
out
sbb
cmp
mov
adc
jb
mov
jge
dec
inc
xor
mov
sbb
pop
mov
ja
sub
rcll
mov
and
mov
loop
xor
xchg
aam
and
movsb
dec
xor
jae
in
push
push
xchg
jae
aam
or
jnp
jns
jne
cli
jae
pop
jae
jae
or
into
push
xchg
es
fimuls
dec
fstpt
imul
fwait
insb
sbb
dec
mov
pusha
mov
sbb
jecxz
sbbl
arpl
stc
add
mov
dec
popa
in
in
dec
mov
sarl
setge
and
sub
rcrl
mov
sub
lea
sbb
loop
sbb
xchg
cmc
cli
adcb
push
add
mov
shl
sub
vpsrad
xchg
jb
xor
mov
mov
mov
or
jno
lods
das
adc
test
movsb
push
stc
xrelease
mov
aad
loopne
data16
and
xchg
neg
adc
mov
or
lock
adc
push
dec
dec
xor
dec
movsl
stos
add
add
mov
les
sbbb
mov
test
arpl
mov
mov
test
xchg
mov
xchg
xlat
lahf
inc
or
fisttpl
jno
in
popa
aas
stc
frstor
xchg
inc
cwtl
std
mov
ljmp
repnz
cmp
outsl
int
sub
lret
pop
js
gs
and
adc
mov
and
or
jp
sub
cli
cmpsb
adc
loop
lock
inc
jnp
cmp
push
jbe
int3
data16
cmc
xlat
fsts
jecxz
jmp
sub
inc
xlat
cmp
cmp
add
fs
jmp
iret
in
push
cmp
xchg
lret
sbb
dec
cmc
insb
pop
adc
imul
add
jp
je
adc
or
and
in
and
cmp
xchg
adc
dec
push
add
mov
mov
pop
jns
arpl
xchg
jg
dec
inc
cmpsl
push
jbe
xchg
inc
xchg
imul
pop
stos
pop
nop
lahf
adc
jecxz
mov
loope
test
frstpm(287
dec
popa
cmp
in
sub
mov
pop
das
and
mov
sub
jns
aad
mov
repz
add
stos
add
imul
inc
int3
jp
mov
or
repz
pop
inc
hlt
ret
fptan
sti
cmpb
sub
and
sbb
scas
cmpsl
or
inc
add
dec
adc
pop
bnd
js
mov
lea
fiaddl
sahf
pop
push
sahf
in
mov
popa
mov
push
ds
jp,pn
sbb
movsb
ljmp
mov
mov
mov
inc
mov
cwtl
adc
jp
in
mov
addr16
repz
incl
sbb
push
stos
lahf
xor
ss
xor
mov
aaa
notb
push
adc
test
dec
sbb
mov
and
or
mov
lret
jnp
ret
pop
xor
cmp
sbb
adc
push
mov
das
repnz
xlat
and
les
gs
adc
adc
mov
dec
mov
aaa
mov
aas
add
fimull
or
push
in
and
dec
mov
pop
cld
hlt
test
or
shlb
push
fadd
push
gs
xor
sbb
cs
fwait
mov
in
mov
push
xor
lret
ret
push
inc
jp
out
jb
mov
dec
push
jne
aad
jnp
mov
daa
cld
jp
or
cmp
cmpsb
pop
lcall
jnp,pt
mov
sbb
inc
rclb
stos
add
sbb
xchg
jmp
leave
mov
cmc
pop
enter
sbbb
and
jne
int3
adc
pop
fsubs
out
popf
mov
lahf
fmull
lret
xorb
jmp
arpl
orb
xchg
js
inc
loopne
test
push
mov
adc
xlat
add
stos
arpl
push
stos
add
jae
lea
mov
popf
mov
ret
movsb
les
xor
notl
out
int
lret
lds
insl
cmc
fdivl
push
je
jg
call
xchg
or
xchg
xor
xchg
int3
loope
fcomi
sbb
xor
repz
mov
mov
dec
mov
push
rclb
jmp
push
xor
sahf
mov
inc
sbb
xor
pop
rcrl
scas
push
ja
dec
sbb
inc
mov
push
pop
xchg
push
mov
inc
orl
sbb
sub
ror
idivl
push
xor
jne
repz
add
stc
in
sub
and
xchg
dec
in
clc
ss
inc
push
pop
nop
jbe
aas
fimull
sub
sub
jne
jne
scas
push
jg
cmpsl
je
or
jb
fdivl
dec
and
cwtl
loopne
inc
mov
fadds
scas
xor
aaa
cli
fistl
cmp
leave
lcall
insl
mov
popa
sub
rcll
pusha
cld
sub
or
cmc
sbb
sub
test
xor
xchg
lods
jae
xor
rolb
pop
mov
sub
icebp
jne
popf
stos
cmp
and
pop
fnstenv
mov
fidivs
cmp
inc
cmp
mov
jg
mov
inc
mov
call
push
mov
scas
push
add
dec
xchg
mov
shlb
ss
fs
mov
pop
mov
mov
mov
stc
ss
and
aam
outsb
scas
aad
imul
call
cwtl
popa
mov
iret
lds
out
ficoml
repz
lea
repz
jne
daa
pop
out
cwtl
cmp
arpl
cmp
fwait
inc
nop
stos
cmpsl
mov
xchg
outsl
movb
imul
mov
push
mov
jb
pop
icebp
and
mov
lret
leave
add
mov
xchg
add
sub
inc
adc
mov
je
dec
aam
mov
pop
jns
mov
cwtl
and
mov
pop
dec
int3
inc
cld
jle
mov
addr16
mov
mov
arpl
imul
in
sub
and
xor
ljmp
ja
leave
jge
push
ret
cs
pop
dec
cmp
cmp
je
std
iret
nop
lds
mov
cli
into
insb
add
push
pop
xor
push
mov
push
xor
lret
jmp
cmp
mov
xor
test
adc
push
mov
mov
lea
cmp
pop
int
fldenv
jnp
cmc
mov
in
adc
loopne
adc
aam
add
mov
cs
jae
shl
and
ficompl
and
inc
fs
mov
int
cwtl
fdivrs
jge
xchg
mov
jmp
inc
aam
je
gs
or
pop
add
out
push
fdivrp
lret
int
clc
mov
sbb
mov
cltd
mov
lock
loope
sbbb
jnp
inc
mov
sbb
sub
add
lods
jbe
scas
add
xor
pop
xchg
int3
mov
push
mov
xchg
imul
push
stos
cmpsb
push
movsl
xchg
loopne
sarl
hlt
insl
pop
pop
test
aas
pop
mov
push
push
sbb
movsb
adc
adc
aas
xchg
mov
mov
sbb
dec
sarl
jae
mov
addr16
les
dec
jns
jl
push
add
adc
call
xor
push
jmp
in
xchg
inc
dec
shl
popa
mov
repz
movsb
or
or
fwait
call
mov
cmp
je
sbb
rolw
jmp
fcomi
pop
aas
hlt
hlt
sbb
fcomip
xor
lea
sahf
fwait
mov
sbb
decl
jbe
insl
clc
fiaddl
mov
ret
add
pop
fisubs
xchg
xchg
mul
ss
cwtl
dec
std
bnd
movsl
jge
mov
not
push
or
add
sti
push
sbb
dec
jns
cwtl
or
push
add
jg
es
and
movsb
fists
mov
and
jge
js
jecxz
stc
cs
aam
pop
mov
rol
add
scas
xor
enter
fcomp
jnp
and
add
adcl
rclb
jbe
jg
sub
and
out
lahf
jl
je
xlat
les
es
xchg
mov
scas
or
lods
out
pop
repnz
lahf
arpl
iret
mov
xchg
fs
test
pop
pop
sahf
cltd
push
sbb
dec
fisttpl
cmp
and
adc
mov
ljmp
cwtl
push
push
lods
pop
push
and
cmp
dec
test
out
jo
mov
or
cmc
fbstp
cmpsl
cwtl
ds
int3
fcoms
test
push
mov
stc
cmpsl
icebp
mov
imul
sbb
sub
flds
add
add
jbe
pop
cmp
roll
std
push
dec
insl
fwait
mov
js
sub
dec
lods
mov
daa
iret
mov
sub
add
or
jl
stos
addr16
repz
scas
mov
sub
ret
outsb
into
stc
test
lods
push
daa
mov
out
or
mov
lea
fs
fidivrl
andl
mov
shlb
fdivp
sub
jl
aam
mov
mov
iret
test
mov
cld
jle
xchg
cmp
fcomps
aam
and
or
movsl
or
jnp
hlt
mov
sub
lods
xchg
lds
mov
mov
or
leave
ss
pop
in
mov
dec
push
cmp
in
sbb
pop
fs
sub
sbb
lock
outsl
xor
xor
jp
xchg
orb
fadds
shrl
push
sarb
fs
xchg
dec
mov
dec
or
outsl
adc
cmc
sbbl
imul
mov
stos
jecxz
xchg
bound
push
sub
mov
jg
push
add
lret
nop
ret
jbe
movsl
mov
mov
adc
popa
pusha
out
mov
add
push
pusha
cwtl
sbb
out
stos
sarl
rcll
aam
je
cwtl
jno
or
fisttpll
push
xor
xchg
push
cmpsb
add
dec
movsl
ja
aaa
jmp
roll
loopne
and
sbb
push
jg
jecxz
sub
push
pop
or
subb
jnp
xlat
xor
nop
push
or
fwait
add
out
jge
and
ja
movsl
test
or
in
aam
sbb
jecxz
sub
dec
aam
sub
fmul
movsl
fs
aam
das
xchg
mov
and
bound
rcr
inc
or
ss
jbe
add
cwtl
popf
or
fisubl
mov
fimuls
icebp
sub
inc
and
pop
test
push
mov
mov
cmp
int3
rorl
dec
test
into
mov
or
pop
add
ds
shll
and
add
jbe
jno
scas
loopne
test
sbb
pop
cwtl
lret
lods
mov
push
xchg
adc
jge
jbe
push
mov
mov
in
int
add
ds
ljmp
or
xor
test
loopne
xchg
out
pop
sbb
gs
or
or
insb
push
sarl
pop
in
lcall
insl
sub
and
sbb
push
dec
lods
push
and
xor
cmp
cmp
dec
rcrb
xchg
adc
ret
adcb
ds
mov
ljmp
or
bound
xchg
fidivl
pop
push
push
clc
lock
and
mov
in
mov
aaa
adc
mov
push
pop
repnz
inc
das
in
and
mov
out
jno
psrld
mov
push
aas
sarb
and
orb
out
cmp
shl
add
rorb
jge
xor
es
mull
std
xchg
filds
mov
repnz
test
test
xor
lock
cmc
push
ret
mov
cmpsl
dec
mov
mov
idivl
jge
lds
es
les
and
xchg
rcr
add
mov
int3
sarl
xor
sbb
or
in
fadds
mov
lock
pushf
jne
addr16
mov
cwtl
not
filds
cmp
mov
mov
cwtl
pop
xchg
sbb
movsl
dec
dec
imul
jnp
add
insb
push
jecxz
mov
out
push
xchg
jmp
jle
sub
adc
shlb
lds
mov
dec
push
imul
lods
into
add
fldcw
or
daa
lods
jg
insb
mov
mov
divl
xor
fisubrl
call
into
add
xor
jbe
popa
jp
or
int
cs
xor
das
push
mov
test
push
popf
pop
sahf
je
mov
jns
xchg
inc
mov
mov
lods
and
pop
mov
iret
jnp
popf
adcl
pop
ror
repz
ret
movsl
paddsb
jo
xor
aad
lods
sti
shl
add
stos
push
sub
mov
imul
jo
leave
inc
mov
sub
cmpsb
inc
fldt
inc
jb
cmpsl
cmp
add
jp
pop
stos
and
xchg
mov
fnstsw
add
sub
daa
ljmp
mov
inc
inc
in
mov
mov
mov
in
mov
in
dec
jg
cmpsl
lock
jecxz
faddp
or
xchg
jb
leave
sub
push
mov
das
pushf
mov
rcrl
leave
inc
mov
pop
ret
sbb
cmc
fistpll
adc
in
test
daa
insl
into
rcrb
sub
stos
dec
aad
xchg
pop
data16
je
mov
dec
scas
add
dec
insl
adc
repz
pop
shlb
jb
mov
mov
push
in
clc
xor
bswap
clc
push
clc
scas
lahf
pop
xchg
push
mov
inc
rcrl
ja
mov
push
add
jbe
aaa
push
cmpb
aaa
hlt
cltd
sbb
inc
sbbl
and
ss
and
lock
dec
aas
and
arpl
add
and
xchg
inc
xchg
sbb
popa
jg
dec
mov
out
test
jnp
aad
fstl
inc
stos
mov
dec
lds
jge
out
ficoml
sub
xchg
inc
inc
sub
test
shr
jmp
jbe
pop
or
gs
lds
test
insb
jp
cmp
leave
push
lret
pop
fwait
in
inc
es
sub
call
jns
stc
into
inc
mov
ficomps
push
inc
and
cmp
cmc
push
aam
and
dec
ror
imull
push
push
pop
mov
mov
aas
out
xchg
subb
cmpsb
add
jge
cli
dec
ljmp
nop
lock
cmp
sbb
subb
cwtl
mov
scas
roll
inc
dec
pop
fiaddl
scas
push
in
rcl
cmp
mov
or
lret
popa
xor
cmc
xchg
add
and
add
cli
xorl
sahf
xor
mov
mov
pushw
dec
cmp
dec
clc
jmp
inc
in
sarb
sbb
lods
push
sbb
jl
repz
into
addb
inc
pop
mov
pop
pop
rorl
negl
inc
cmp
popa
fldt
daa
mov
mov
jp
mov
mov
bound
jae
movsl
aas
fcomps
ljmp
push
push
pop
mov
fmul
in
cmp
pop
into
sbb
dec
and
clc
jno
jnp
repnz
mov
adc
arpl
dec
xchg
aaa
movsl
das
xor
pop
outsl
fdivs
stos
cltd
pop
cmc
fcoms
sub
pop
lret
lods
cmp
sti
repz
mov
imul
jns
js
adc
add
fwait
cmc
jmp
sub
sbb
mov
xor
addr16
dec
in
jbe
repz
adc
std
push
lds
js
jle
ljmp
call
inc
mov
add
sbb
arpl
pop
push
mov
mov
out
push
lods
loop
push
fisubl
mov
mov
push
or
add
mov
jg
in
scas
andb
cmp
jmp
xor
and
mov
scas
cli
cmp
mov
mov
mov
ss
insb
push
push
pop
pop
int
fs
mov
dec
jb
xor
fwait
pop
outsb
dec
lret
xor
ret
mov
mov
fnsave
pop
mov
movd
push
leave
adc
dec
int3
xchg
push
mov
cs
push
mov
xor
and
out
lret
test
dec
ficoms
out
xchg
sub
pop
inc
add
filds
inc
int
decb
jne
adc
inc
mov
outsb
ffreep
pushf
cli
sbb
rorl
rcl
mov
enter
ja
dec
int3
pop
int
or
test
clc
cmc
lea
mov
jmp
push
mov
cwtl
sbb
cld
mov
dec
iret
into
rcr
xchg
mov
inc
mov
scas
mov
fs
lahf
and
in
lods
adc
aas
inc
adc
imul
js
fbstp
stc
mov
sahf
jle
ljmp
inc
jne
mov
cmpl
lods
sbb
xchg
xor
sbb
push
fcomps
mov
arpl
scas
sub
out
test
inc
dec
cmc
cmpsl
push
pop
imul
inc
xchg
insb
sti
or
and
imul
dec
repz
scas
out
ret
xchg
arpl
mov
sbb
add
es
xchg
scas
int3
and
repnz
shll
pushf
mov
test
insb
js
push
cmp
std
mov
cli
fcomi
leave
vpaddw
testb
aas
adc
icebp
xor
push
nop
ret
outsb
mov
adc
pop
stos
sbb
pushf
or
xor
jmp
out
and
adc
mov
repnz
int
inc
scas
xlat
sbb
xorl
insb
mov
fcompl
mov
mov
iret
pop
jb
dec
pop
push
pop
xchg
jno
push
rcll
add
dec
jno
iret
popa
pop
pop
xchg
ror
cmp
lret
daa
call
push
push
dec
push
andl
dec
fsts
sbb
add
mov
mov
mov
cmpb
mov
fidivrs
rclb
or
and
jnp
xor
push
jg
push
lock
add
mov
mov
add
sub
push
pop
mov
call
lock
mov
repnz
movsl
and
pusha
push
and
call
xorl
jmp
xor
lea
test
jnp
in
mov
das
xchg
jmp
jo
xchg
movsl
fstps
outsl
leave
dec
movsl
repnz
lret
in
inc
pusha
pusha
call
mov
rorb
cmpb
cmp
test
push
cli
pop
fimull
addl
push
xchg
cmp
jo
loope
sahf
stos
mov
xchg
cmp
mov
mov
lahf
repz
nop
mov
lcall
pushf
mov
inc
aam
xchg
fs
and
cmc
inc
jb
cmp
out
add
imul
lock
mov
jle
loopne
clc
sub
mov
push
insl
aaa
or
mov
jb
mov
bound
jb
xor
mov
lods
xchg
fmuls
mov
test
xor
inc
mov
fucomip
inc
mov
sub
jge
mov
inc
push
jae
sub
lahf
xchg
dec
xchg
adc
cmp
or
pop
pop
sbb
jmpw
xor
adc
jno
lret
test
push
loopne
mov
addps
pop
sbb
cli
lea
fcoml
dec
dec
or
in
xor
or
mov
rcll
pop
icebp
push
lret
mov
test
push
cmp
xor
mov
pusha
adc
cmpb
cmpxchg
pop
pusha
and
mov
aas
imul
jns
adc
mov
or
out
loop
mov
mov
dec
dec
cmp
mov
cmc
mov
mov
and
jbe
sbb
adc
iret
leave
into
mov
popa
inc
mov
mov
ljmp
mov
xchg
fldl
call
stc
dec
lock
pop
jnp
std
pushf
jb
xor
dec
push
insl
push
xchg
adcl
inc
pop
scas
mov
dec
jl
les
mov
je
sub
xchg
xor
dec
sub
movsl
stos
dec
adc
add
cmp
in
pop
xchg
cmp
add
sub
imul
jmp
rcl
add
pop
cld
js
fwait
jo
jmp
push
or
add
dec
inc
lahf
adc
dec
cmpl
dec
or
daa
dec
sbb
push
in
inc
mov
push
mov
cmp
outsb
sbb
push
lcall
lret
bound
insb
sub
lcall
inc
xchg
dec
repz
jge
pop
jl
sti
inc
dec
inc
dec
sub
das
pop
popa
loopne
mov
fisubrl
mov
std
sub
pop
imul
jb
dec
xor
cmp
jp
addr16
push
push
std
xchg
sbb
scas
jns
cld
jge
out
jge
mov
repz
xorl
outsl
xchg
xchg
and
enter
repz
ss
add
sbb
xchg
daa
or
andb
int3
mov
out
clc
shll
mov
adc
xor
cld
inc
mov
push
push
fcmovne
daa
roll
cs
and
stos
jns
test
test
pop
jae
mov
xor
push
les
sub
outsb
sbbb
xor
dec
mov
adc
cmp
xor
dec
pop
shufps
fldt
lea
dec
shll
push
mov
scas
fstpt
int3
add
mov
xor
push
dec
outsb
arpl
cmp
ret
lods
pop
les
jp
push
fnsetpm(287
stc
mov
jmp
mov
add
int
or
stc
push
pusha
mov
push
pop
aas
add
add
into
das
mov
clc
fsub
push
insb
loope
mov
xchg
jl
fldt
imul
shll
or
shl
fldenv
movsl
lcall
xor
in
aad
scas
jp
mov
fwait
push
sub
cmpsl
loopne
popa
pusha
shrb
sub
cmp
clc
int3
call
xchg
pushf
dec
push
mov
icebp
das
inc
push
and
orb
sub
cmpsb
fildl
mov
imul
sarl
mov
sub
pop
sbb
pop
int
sahf
inc
fxch
add
sbb
dec
pop
rclb
cltd
arpl
test
sub
shl
jg
xchg
jge
cmpb
sbb
inc
xor
push
int3
popa
pop
std
cs
adc
loop
int
cmp
popa
adc
lock
jmp
mov
in
add
sahf
ret
insl
xor
mov
dec
fcmovnbe
sub
cli
cmp
add
jl
enter
icebp
mov
push
jns
scas
mov
mov
shl
xchg
popf
out
lret
and
pop
idivb
mov
xor
orl
mov
cmc
inc
xor
jg
jae
inc
mov
and
test
cmp
jbe
xor
lock
jg
cli
push
fsts
dec
mov
mov
adc
mov
jne
and
jmp
and
xchg
fwait
out
iret
jge
cs
mov
stos
cmp
push
bound
sbb
xchg
rorb
push
xor
sub
cmp
fdivp
addl
incl
jecxz
adc
and
xchg
das
mov
sbb
or
push
mov
mov
mov
and
pop
fmull
jno
fbld
fmuls
sbb
adc
movsb
addb
negl
xor
lods
ja
std
imul
pop
daa
fiadds
nop
sti
dec
dec
cld
scas
mov
cmp
js
cmpsl
into
and
jle
mov
lds
xorb
jecxz
cmp
cmp
ret
mov
insb
outsl
adc
int
mov
ret
xchg
cmp
and
scas
sarl
ljmp
es
cmp
fistpll
pop
ljmp
jnp
das
int
sbb
mov
and
jl
mov
add
je
cmc
jo
into
stc
stc
lcall
rclb
sub
mov
push
nop
mov
and
mov
fcoms
sub
inc
lods
xchg
loop
mov
jecxz
dec
xchg
push
lret
in
fmuls
outsl
iret
mov
push
outsb
xchg
lahf
aad
push
sbb
sarb
xchg
adc
mov
inc
pusha
sub
cmp
out
jno
and
pop
mov
or
dec
push
mov
and
inc
icebp
popa
call
pop
loopne
ss
lds
test
xor
sbb
sub
orb
inc
je
jecxz
mov
xor
push
rolb
out
inc
sbb
dec
or
pop
mov
jnp
rcrb
lret
xor
into
lahf
fs
lahf
inc
fisubrs
and
sub
int
adc
mov
mov
add
test
inc
dec
xchg
pop
imul
or
cmp
jecxz
jle
test
out
mov
cmpsb
pop
out
imul
cmc
jmp
aad
inc
xorb
pop
aas
es
addl
scas
cmp
or
sbb
inc
loop
loopne
xadd
ljmp
adc
pop
test
jnp
cmpb
mov
pusha
mov
mov
stos
andl
xchg
outsl
xchg
imul
mov
xchg
cwtl
mov
shrb
mov
or
test
out
xchg
dec
outsl
mov
fwait
rorl
stos
clc
or
rsqrtps
xor
test
cmp
xor
push
es
call
push
mov
iret
inc
in
mov
dec
jg
xor
sbb
sbb
add
xor
dec
fldcw
popf
adc
mov
sbb
je
cmc
popa
mov
fmuls
and
inc
sub
xor
cwtl
cli
jg
and
dec
sbb
loopne
jae
cmp
ljmp
mov
add
jbe
outsl
dec
imul
add
or
icebp
jae,pn
ds
dec
int3
sti
lods
sbb
cwtl
fildl
into
lea
push
cltd
push
shlb
xlat
js
out
jg
push
in
mov
in
test
loope
sbb
iret
addb
jecxz
fistpll
sbb
mov
icebp
movb
in
test
fmull
cmp
insb
cmpsb
jne
jnp
xchg
jle
mov
dec
aam
and
movl
gs
sub
add
or
mov
ljmp
xchg
popf
shlb
inc
cmp
pop
push
clc
ss
mov
frstor
pop
sbb
add
mov
xchg
xchg
and
jecxz
xchg
ds
sub
or
xor
es
inc
or
mov
cmc
mov
and
stc
cld
jo
xor
mov
cmp
inc
jae
jmp
push
in
or
repnz
ja
push
loope
and
add
in
xor
add
daa
sbbb
pop
sub
xchg
sbb
mov
mov
jecxz
cmpsb
js
cwtl
popa
scas
dec
dec
jnp
mov
bound
cltd
in
mov
call
shlb
or
add
mov
and
cld
lods
addb
rcl
push
push
lcall
or
jae
push
lods
int
out
dec
mov
dec
ja
push
ljmp
jb
sahf
cmp
cmpsb
pop
jg
mov
vunpckhps
mov
push
aad
cmp
mov
rolb
imulb
aam
loopne
mov
mov
xchg
js
cltd
or
mov
inc
orb
fstpt
out
add
sub
inc
adcl
adc
sub
mov
inc
icebp
adc
mov
jb
sub
sub
sarb
data16
out
enter
data16
or
popa
sub
and
aaa
movsl
mov
je
add
inc
out
mov
je
mov
adc
shr
lds
mov
mov
pusha
or
push
push
out
push
stc
add
dec
lods
sbb
test
shrb
pop
jo
add
adc
and
sub
xchg
pop
mov
mov
adc
sub
cmp
lahf
imul
ret
scas
mov
pop
aaa
jmp
jae
loope
imul
add
fs
in
data16
pop
push
sub
mov
xorl
push
lock
mov
ljmp
loope
mov
adc
mov
adc
sbb
mov
adc
int3
add
push
sub
inc
jo
mov
out
cmp
add
mov
ret
jo
iret
pop
jmp
mov
sub
xor
xor
in
ja
repnz
rorl
mov
xchg
pop
loope
mov
bound
fisubs
jl
jecxz
xor
imul
push
enter
xsha1
cmpsb
dec
sbbb
xor
test
cltd
lret
xchg
mov
setg
sbb
pause
cmp
push
inc
shll
inc
movsb
lods
movl
xor
dec
mov
outsl
xchg
xchg
scas
or
lock
inc
dec
xlat
inc
std
adc
add
and
sbb
xor
stc
cs
addb
ss
sbb
sbbb
outsl
aas
jecxz
loop
and
inc
minps
ds
adc
sti
xor
sbb
and
rcrb
loopne
subb
xor
cmp
out
lock
or
cmp
fucompp
cmp
dec
xchg
imul
mov
pushw
std
andb
xchg
arpl
sbb
dec
push
jno
lock
xor
inc
fmuls
jmp
sarb
ret
push
loop
jecxz
cmpl
push
daa
in
push
loop
pop
cmpsl
nop
outsl
fdiv
sahf
in
mov
jle
cmc
cmp
jne
xlat
rolb
or
push
cmp
inc
jbe
xchg
jae
rorb
xlat
push
inc
push
sbb
sahf
push
xor
or
cwtl
add
xchg
shrb
out
pop
fsubp
xorb
sbb
inc
sbb
inc
fnstsw
add
out
lods
jge
push
fidivrs
sub
jle
cmp
xchg
sub
dec
mov
enter
or
pop
pop
mov
dec
xor
xor
add
pop
pop
cmpsb
nop
sub
clc
mov
loopne
inc
ja
jae
cltd
jg
mov
pop
in
mov
jg
pop
mov
dec
daa
sbb
inc
mov
loopne
dec
mov
push
adc
push
and
fucomp
and
adc
clc
and
mov
jg
mov
movb
enter
dec
js
jbe
out
push
fadds
dec
mov
sbb
mov
mov
out
add
xchg
ficoml
or
imulb
push
jo
gs
add
xchg
insl
sub
xchg
mov
sub
pop
pop
adc
sarl
mov
pop
repnz
jns
dec
xlat
mov
mov
into
fdivl
hlt
mov
call
push
cmp
pop
call
lods
cmpsb
mov
jge
adc
inc
into
push
xchg
push
mov
mov
push
stc
loop,pn
mov
pop
insl
insb
inc
mov
mov
adc
movsl
xor
and
dec
mov
jne
jl
xchg
lods
or
jb
movsb
cmp
cltd
push
mov
push
push
scas
pop
xchg
rcrl
fstpl
jae
mov
daa
pop
dec
mov
jb
inc
or
lret
push
sub
sbb
pop
pop
add
xchg
lods
icebp
mov
sbbl
push
adc
jne
repnz
andb
lret
addr16
scas
or
jmp
popf
add
pop
repz
loopne
push
jae
sub
cli
sub
lock
cmc
lods
aas
jp
inc
cltd
mov
stc
xchg
stc
sbb
cmp
lcall
inc
fs
incl
fistpl
flds
gs
test
cli
cs
scas
cmp
jns
sub
sbb
in
add
mov
sbb
imul
mov
andl
insl
jle
fistl
xor
cwtl
ljmp
test
mov
cwtl
jle
xchg
inc
jno
dec
ds
inc
ret
jmp
cltd
sub
xor
and
leave
push
popf
add
cmp
push
xchg
sub
scas
adc
sub
call
jp
mov
fstl
imul
iret
mov
shl
ja
or
fcomps
mov
xor
cli
mov
lds
mov
std
dec
xchg
push
movsb
cmp
sbb
out
shrl
jno
lods
add
fimull
dec
mov
popa
pop
or
sub
cmp
shr
adc
mov
jns
pop
inc
or
add
test
clc
test
loope
subb
iret
mov
orl
dec
pop
std
mov
or
jl
mov
xor
dec
pop
lods
dec
cmp
sbb
adc
jns
scas
ljmp
sbb
push
imull
inc
fimull
dec
lods
mov
fisttpl
or
sbb
mov
ja
or
jno
sbb
mov
subl
stos
jb
or
pop
shll
ljmp
cmp
pop
ret
shrb
xor
jno
cli
sbb
cmp
pop
lcall
mov
scas
jl
xor
push
lods
inc
out
imul
jo
lret
roll
call
into
adc
aas
outsl
je
xor
add
and
add
pusha
xor
ds
fwait
sti
sub
cltd
fcmove
lock
or
imul
xlat
ret
sbb
jp
jg
pop
ja
lret
mov
scas
or
les
orl
mov
xor
pushf
sahf
mov
clc
cmc
outsl
into
add
fneni(8087
mov
adc
daa
cmpsb
mov
sbb
cmp
insl
data16
ficoml
pop
jmp
shrb
pop
imul
adc
adc
inc
jno
pop
inc
xchg
lret
pushf
je
std
int
pop
rorl
daa
xor
push
popf
fwait
loope
inc
sahf
fildll
push
lahf
jb
sbb
out
ficoml
aaa
push
push
mov
out
xor
pop
pop
add
fisttpl
pop
les
aaa
mov
mov
shlb
inc
pop
arpl
jmp
inc
cmpsb
ds
and
dec
mov
imul
pop
pusha
push
test
sahf
test
jb
push
enter
jl
popa
push
test
ret
out
repz
pop
cmp
out
addr16
out
mov
xchg
inc
sub
call
mov
pop
mov
gs
push
pop
cs
sub
mov
push
lret
mov
imul
cmp
push
popa
mov
ret
push
cmpsb
std
add
das
pop
mov
dec
ret
jge
scas
into
ret
sub
lds
mov
add
andb
fsts
add
ret
loopne
andb
inc
mov
fnstenv
sar
pop
cmp
mov
jle
mov
mov
out
xchg
ret
fdivrs
pop
loop
lret
data16
sbb
bound
push
xor
pop
test
leave
add
dec
push
bound
daa
mov
sbb
adc
lods
aaa
repnz
adc
andl
push
call
add
add
inc
test
dec
mov
dec
in
xchg
in
and
jns
adc
mov
aad
sub
out
fidivrl
std
sub
leave
hlt
dec
lods
je
int3
fdivrs
mov
or
inc
cld
jbe
pop
cmp
push
je
je
cmp
mov
push
ret
push
lea
lods
jg
xchg
lds
fldl
fucomip
xchg
push
sbb
mov
lock
dec
jg
in
add
insl
fdivrl
cmp
insb
pop
or
push
jl
adc
mov
cmp
jne
cltd
mov
or
dec
sarl
adc
mov
aam
frstor
in
arpl
and
or
dec
sub
shrl
pop
and
movsl
or
mov
scas
test
mov
inc
dec
pop
dec
mov
lret
sarb
dec
xchg
ljmp
and
mov
fnstsw
test
sub
pop
or
repnz
pop
call
adc
aam
xor
je
sub
es
xchg
pop
ljmp
ljmp
stos
sbb
inc
inc
or
inc
orl
into
jp
fucomi
popa
inc
or
rol
cmpsb
mov
cmp
add
imul
std
mov
dec
aas
into
pop
popa
arpl
xchg
repnz
jae
pop
pop
in
loop
xor
stos
mov
add
push
add
xchg
je
push
lcall
imul
outsl
nop
mov
das
into
les
cmc
push
jl
daa
sbb
mov
push
push
lea
fwait
int
cmp
push
mov
pop
addr16
cmpl
xor
xor
les
push
enter
mov
add
nop
or
sahf
mov
push
aaa
popa
pop
cmpsl
inc
inc
pop
hlt
pop
sub
mov
jo
xor
imul
jg
xchg
fstpt
jno
addr16
jmp
sti
js
imul
lret
aaa
and
dec
pop
lods
mov
divb
aas
cmp
test
push
sbb
push
imul
jmp
data16
cld
in
loop
aas
jbe
and
cld
adcb
mov
or
push
dec
or
ffree
dec
hlt
adc
sub
or
lods
lea
rolb
dec
loop
dec
gs
push
test
and
mov
bound
lea
push
xchg
xchg
cwtl
and
lds
inc
mov
jg
mov
add
in
icebp
stos
sub
cmpsl
pusha
into
add
or
inc
call
pusha
es
in
pushf
cmc
fdivl
sub
add
addr16
adc
rcrl
mov
cmpsb
mov
jb
sbb
jae
repz
in
push
aad
pop
jge
sub
into
loopne
testb
push
js
stc
fmulp
and
cmp
adc
adc
push
aaa
pop
pop
cltd
mov
inc
call
and
adc
mov
lcall
push
push
sub
bound
jmp
les
shll
inc
gs
in
gs
lods
push
imulb
and
jo
xlat
mov
lock
imul
dec
lods
test
int
scas
xor
jmp
and
clc
add
loope
ja
testb
jp
stos
jl
mov
dec
cmp
pop
add
adc
xor
dec
movsb
lock
mov
shll
sub
pop
addr16
rolb
faddl
addb
js
pop
pop
pop
push
jbe
jecxz
pusha
push
jo
pop
jge
and
xchg
push
xor
aad
jae
lcall
xchg
xchg
xor
xor
cmp
adc
sbb
loope
dec
adc
mov
imul
fmull
outsb
adc
xchg
test
in
je
adc
ret
inc
popf
icebp
inc
xchg
cmp
mov
shlb
push
inc
jbe
add
mov
call
test
scas
add
mov
sub
cs
pop
xchg
clc
pushf
sub
jo
pop
jl
imul
push
mov
mov
in
xchg
mov
scas
xor
push
pop
enter
jb
sbb
loopne
inc
adc
jl
mov
cmp
inc
sbb
aad
or
xchg
iret
cmp
insl
insb
addr16
or
push
lods
inc
testl
push
in
xchg
fidivl
and
xchg
xchg
adc
lods
or
sti
or
inc
cwtl
pop
push
fs
sub
jp
jne
sarl
popa
arpl
inc
cld
imul
sbb
and
mov
add
xchg
test
push
fxam
mov
mov
fmull
outsl
fnsave
sub
mov
jae
lock
jbe
fsincos
lcall
cmp
out
clc
leave
ljmp
out
xlat
fnstsw
cmp
imul
xlat
icebp
ljmp
fcomip
mov
pop
cmp
outsl
pop
jb
xchg
xlat
xor
sub
or
lret
push
into
xlat
adc
daa
inc
inc
mov
cmp
jecxz
sub
repnz
lea
nop
adc
cmp
shlb
xchg
nop
mov
fadds
sbb
idivb
stos
mov
imul
jo
sbb
push
pop
gs
xchg
loop
cli
cmpsb
jmp
jnp
mov
mov
rcll
sbbl
mov
dec
imul
mov
insb
add
or
dec
or
in
push
cmc
mov
pop
divb
mov
or
dec
cmp
in
shl
xor
sub
inc
add
and
mov
mov
hlt
push
push
xchg
lahf
outsl
and
inc
inc
sbbl
cmc
xlat
mov
xchg
orl
ss
testb
pop
lods
xchg
inc
clc
in
mov
push
or
inc
pop
adc
sti
and
adc
sub
mov
dec
xor
sub
jnp
pop
fs
sbb
pop
ds
push
test
filds
and
daa
scas
fdivrp
mul
mov
and
sti
fmuls
jmp
dec
scas
aas
sbbb
xor
push
loope
mov
loope
dec
test
lahf
adc
adc
add
pop
insl
enter
test
in
in
jnp
cs
aaa
fnstenv
stos
jle
pop
jmp
mov
imulb
jmp
or
cmpl
stos
std
mov
dec
in
sbb
mov
stos
pop
cld
pop
loop
mov
pop
cmp
popa
dec
mov
aad
cs
sub
inc
enter
dec
repnz
mov
popf
testb
les
pushw
dec
in
sbb
xchg
and
or
cmpsb
cltd
cs
and
cmp
int3
out
push
lahf
arpl
pop
mov
or
icebp
sbb
mov
fwait
push
outsb
lahf
mov
mov
into
out
push
daa
je
idivb
sbb
mov
inc
outsb
ret
out
adc
into
jns
mov
decb
inc
add
and
or
xchg
cmc
stos
aaa
xchg
sbb
sahf
sub
jle
and
jno
mov
cmp
popf
ljmp
push
pop
inc
jbe
sub
inc
inc
pop
mov
sbbb
or
cwtl
in
xchg
aaa
imull
sbb
into
movsl
sbb
movsb
std
scas
insb
fnstenv
adc
ds
fdivr
xlat
cmp
mov
cli
pop
bound
imul
mov
xchg
adc
and
ss
mov
mov
mov
dec
lea
fidivrs
into
mov
out
cmp
sbb
in
and
mov
push
mov
mov
repz
mov
stos
bound
outsl
fldl2t
jecxz
cli
mov
sbb
cmp
ds
clc
cmc
adc
sbb
dec
pushf
enter
adc
add
and
mov
lods
gs
movsl
addr16
xlat
mov
jl
jmp
pop
xchg
or
pcmpgtd
sbb
add
inc
xchg
shrb
jecxz
pop
scas
sub
test
ljmp
push
sbb
les
xchg
and
sub
shlb
push
cmpsl
xchg
sbb
push
adc
insb
fs
cmp
sub
adc
test
jae
lret
addr16
mov
pushl
xor
or
call
daa
icebp
cmp
aas
sub
or
ds
dec
push
cltd
rorl
jecxz
in
mov
je
repz
jmp
jecxz
adc
mov
and
adc
mov
nop
dec
fwait
mov
test
inc
movsb
jnp
mov
ds
out
jbe
pop
xor
mov
testl
dec
mov
sub
pop
call
dec
rcr
sbb
shrl
mov
subl
movsl
daa
inc
roll
dec
adc
and
in
adc
insl
into
ss
and
ljmp
cmc
inc
add
lods
or
sub
cmp
std
and
inc
dec
fcmovnu
xor
jnp
jno
sub
sbb
test
lahf
lret
ljmp
lock
pop
pop
fcomps
lret
or
dec
ja
and
mov
jmp
adc
jp
std
mov
pop
push
add
adc
fldcw
lahf
dec
and
lcall
aaa
js
xchg
mov
adc
leave
jnp
loope
pop
cwtl
mov
inc
dec
jecxz
imul
dec
mov
test
and
jmp
sub
xor
pusha
das
xor
xor
and
addr16
push
xor
ja
push
loope
mov
out
xchg
leave
rol
in
jb
das
jp
aad
out
xorb
pop
jae
push
popf
mov
mov
sbbl
shlb
xchg
imul
lcall
xlat
mov
pop
getsec
or
mov
shlb
cmp
or
xor
gs
in
xchg
sub
jns
fnsave
test
xor
mov
sub
lods
cld
add
mov
sbb
mov
jg
lret
mov
sbb
jb
stc
mov
out
sub
and
loop
and
inc
daa
or
pop
push
aaa
mov
fsubrs
into
pop
sub
pop
ss
and
ja
inc
jns
cmp
jge
mov
enter
inc
cmp
and
xchg
testl
hlt
mov
lds
sub
pop
fs
mov
les
pop
repnz
paddsb
xchg
es
in
and
adc
loope
dec
push
push
mov
xor
in
add
mov
mov
call
in
push
sbb
adc
pop
xchg
rcrl
stc
lcallw
lods
out
push
aaa
in
add
dec
or
popf
jns
icebp
push
sub
cli
push
mov
out
movsb
popa
push
mov
push
or
sub
std
mov
push
push
icebp
pop
inc
mov
push
ja
xor
dec
jl
cmp
out
cmp
jg
push
call
inc
gs
mov
aam
cmovbe
xor
outsb
inc
dec
call
add
add
or
imul
int3
fisttpll
int
out
xlat
mov
dec
push
pop
pop
xor
sarb
add
imul
shrb
add
inc
imul
xchg
cmp
cmp
xchg
inc
jecxz
lods
jo
mov
in
or
pop
pop
cmp
mov
and
pop
push
push
pop
andb
mov
cwtl
mov
inc
sti
inc
lahf
inc
ret
arpl
pop
stc
dec
adcb
loopne
mov
mov
and
jbe
daa
push
push
fiaddl
jmp
fildll
mov
inc
push
fldenv
rolb
cmpl
xor
and
and
mov
add
xchg
add
rcrb
stc
add
sub
in
jno
sarb
sbb
sti
out
cmp
dec
xchg
jbe
aaa
mov
cltd
mov
or
adc
mov
mov
daa
std
or
jbe
cmp
lret
ret
es
push
mov
test
xor
repz
mov
dec
enter
outsl
jg
sub
add
push
push
pusha
fdivl
push
sub
jle
cltd
jmp
arpl
mov
xor
test
testb
or
rcrb
jp,pt
add
xorb
mov
imulb
jne
push
mov
add
xor
cli
mov
pop
lret
cld
cltd
enter
mov
xchg
cmp
pushf
adc
xor
andb
push
add
aad
aad
fistpll
or
xchg
xchg
push
and
cmp
add
push
sub
and
cmp
test
mov
jle
ret
imul
imul
icebp
push
aad
pop
jge
sahf
scas
pop
ffreep
push
pop
bound
sahf
sub
aas
call
dec
fimull
fdivl
aaa
jmp
mov
or
jle
jno
push
inc
pop
or
jl
rcrl
pushf
sub
or
push
mov
sub
bound
push
push
mov
inc
ljmp
lahf
pop
leave
out
aaa
ljmp
filds
sti
adc
or
stos
in
mov
jle
jg
int
or
sbb
xor
scas
dec
outsl
notl
cltd
notl
imul
divb
sbb
addr16
aas
xchg
adc
shrl
add
cmc
or
das
inc
xchg
imul
inc
call
and
mov
lahf
out
negl
xchg
popa
ret
pop
idivb
imul
cltd
add
pop
pcmpgtd
pusha
jnp
out
push
cmp
ljmp
les
mov
jp
pop
pushf
ljmp
xchg
xchg
popa
push
xor
jecxz
mov
mov
rorl
and
lock
pushf
call
xchg
sbb
outsb
jmp
cmpsb
pshufw
jns
xor
push
push
dec
push
int3
or
iret
lahf
outsl
in
movsb
stos
loope
push
iret
rcr
pop
push
mov
mov
dec
test
jae
mov
nop
mov
mov
cmp
pop
scas
ja
imul
ret
add
repz
lret
lcall
push
adc
imul
cli
pop
test
fsubl
push
std
shll
fldenv
add
dec
sub
lock
lock
test
test
in
push
mov
mov
xor
cld
test
pop
stos
xchg
les
hlt
or
inc
xchg
push
iret
cltd
enter
into
or
movsl
mov
xchg
jo
js
mov
es
notb
adc
test
pushf
testb
mov
adc
push
jp
mov
sbb
arpl
popf
sti
cmc
insb
into
mov
lock
and
pop
out
jg
nop
sub
mov
in
stos
movsb
push
lock
lods
mov
pop
out
stos
dec
inc
stos
xor
or
mov
icebp
xchg
cmp
xchg
arpl
movsl
mov
mov
pop
shrl
mov
inc
dec
mov
scas
push
mov
and
sub
fwait
std
sbb
loop
pop
sahf
mov
sub
lahf
pop
and
sub
push
mov
fisubl
adc
fldcw
test
xchg
xchg
shl
outsl
clc
lock
mov
add
mov
enter
iret
jbe
dec
push
shll
and
xorl
jno
mov
pop
cwtl
sti
nop
dec
stos
or
or
sub
call
or
pop
fsubl
mov
adc
ljmp
out
mov
push
xor
mov
lods
xor
fs
xor
je
clc
adc
jmp
cmpsb
lods
ds
addr16
add
pop
shl
mov
cmp
out
addr16
out
hlt
jbe
cmp
in
cmc
cmp
sbb
neg
aad
adc
fldl
inc
aas
pop
push
dec
js
pop
jge
les
icebp
xchg
inc
sbb
or
andl
testb
mov
cld
pop
sub
into
mov
pop
cmp
mov
mov
cld
lock
int3
push
add
loope
jecxz
push
cmpsl
cmp
fwait
in
aaa
insl
loope
push
cltd
mov
lcall
out
xor
mov
and
fistpll
dec
inc
fsubl
clc
inc
xor
fidivrl
cmp
pextrw
ss
sub
andb
or
cmp
jle
lcall
and
jns
add
push
sub
and
sub
inc
cmp
out
outsb
and
xor
ror
cli
imul
nop
mov
or
pop
test
ja
mov
jg
pop
mov
dec
and
push
lcall
and
mov
sub
out
mov
data16
pop
xchg
mov
push
sbb
repz
or
sbb
xchg
fistps
push
or
xchg
adc
std
inc
orb
addr16
inc
ds
test
sbb
jecxz
stos
in
out
idivl
and
jl
in
push
sub
lods
xlat
lds
or
cmp
inc
or
jl
push
mov
pop
cwtl
iret
and
iret
cld
ljmp
push
cmpsb
sarl
sub
leave
xchg
push
xor
push
enter
inc
cmp
jb
cmc
cmp
jb
adc
js
mov
aas
or
mov
mov
js
mov
out
xor
cmc
push
lds
push
pop
and
sbb
das
or
jge
dec
insb
pop
in
xchg
pop
inc
out
cmpsl
or
cwtl
movsl
mulb
sbb
std
push
cmp
subb
adc
add
mov
insl
loopne
mov
rolb
outsl
inc
jns
pop
pop
pusha
mov
in
enter
imul
and
sub
jl
xor
pop
add
or
push
mov
sbb
and
les
pop
xor
xchg
mov
push
shlb
xor
aad
push
jae
lcall
loope
out
sub
cwtl
lods
in
out
cld
or
mov
outsl
cli
or
sub
js
pop
nop
je
nop
push
lock
iret
lock
rorl
sbb
xchg
rol
xor
xor
inc
int
jl
add
roll
and
sbb
out
push
push
xor
sbb
cmp
sub
fimull
xor
inc
lds
call
mov
jo
add
enter
cltd
movsb
sub
mov
daa
cmc
xchg
dec
adc
push
sub
mov
stc
mov
mov
int
push
dec
scas
xor
sbb
xlat
sarb
int
adc
jmp
push
daa
test
xor
aaa
xor
pop
inc
mov
pop
orl
enter
ljmp
or
ret
ss
xlat
call
mov
fwait
xchg
and
movsl
or
outsl
shlb
xlat
adc
rol
int3
sbb
mov
mov
pop
inc
fbstp
ss
mov
sbb
int
dec
pop
jle
dec
jmp
stos
pop
mov
fsubrl
das
aas
sub
mov
movsb
or
pop
subl
pusha
pop
xchg
daa
pop
ret
inc
add
iret
jo
mov
push
adc
cmp
xchg
imul
dec
add
and
ss
in
pop
inc
std
mov
inc
mov
lcall
inc
inc
or
test
push
mov
loop
sarb
int
xchg
push
orb
inc
push
leave
js
lahf
enter
xchg
jo
xlat
shlb
dec
xchg
out
jl
jecxz
pop
add
loope
pop
rcrb
xchg
subl
faddl
mov
pushf
imul
inc
lods
das
cmp
mov
mov
repz
mov
fnstsw
mov
jae
sbb
mov
clc
iret
fnstcw
fisubl
pop
fildl
lock
fsubrs
xchg
es
mov
lods
xchg
sbb
into
adc
pop
mov
inc
mov
out
jmp
sbb
sbb
or
pop
mov
sti
fstp
sbb
je
pushf
rorb
in
nop
push
lods
cld
pop
jb
dec
mov
xor
or
loop
ljmp
xchg
add
nop
not
xchg
std
int
aad
mov
mov
pop
in
mov
jnp
and
test
pop
cmp
test
ljmp
fsubr
dec
loopne
cmpsb
fisubs
andl
jecxz
cs
add
xor
cmp
sub
clc
push
hlt
cmc
mov
ret
icebp
in
sub
jle
mov
ss
insl
xchg
pop
and
xor
dec
ret
aam
sub
fdivrp
js
jb
dec
dec
cmpsl
cmp
push
faddp
sub
push
push
dec
outsl
sbb
test
cmpsl
xchg
ss
ja
pmulhuw
ds
adc
out
jns
clc
jo
sbb
shl
inc
sahf
fcmovnb
roll
fsubrl
aam
cwtl
sarb
mov
cli
mov
push
lods
lods
add
mov
and
jecxz
pop
scas
movsl
pop
add
stos
mov
ja
pop
sbb
nop
xchg
cld
jg
or
stos
loopne
mov
jnp
mov
dec
jns
mov
pop
and
add
and
ss
and
adc
pusha
jbe
vphadduwd
leave
inc
jnp
gs
or
shlb
loop
sbb
aas
lea
sub
pusha
repnz
dec
fldcw
mov
icebp
popa
pop
lret
xor
rorb
or
inc
push
ljmp
subl
ljmp
pop
mov
fwait
xor
jl
idiv
loop
mov
sbb
data16
xor
inc
in
dec
xor
inc
gs
test
mov
sub
push
jl
xchg
lahf
imul
pop
clc
cmpl
dec
ja
ljmp
aaa
jmp
bswap
and
push
cmc
mov
mov
cmp
pop
sbb
fisubl
fstpl
call
pop
ffree
mov
scas
ret
or
lea
rolw
fisubl
fmul
sbbb
and
lods
int
sahf
fidivl
jecxz
push
fdivl
add
mov
add
sub
xchg
or
fildll
inc
push
stos
jl
nop
into
ljmp
mov
push
sub
data16
faddp
or
bound
push
or
sti
dec
test
mov
and
dec
outsb
cs
inc
iret
pop
pop
in
ret
gs
scas
loopne
aaa
and
add
mov
xchg
popf
xlat
sbb
inc
xor
push
mov
add
into
xchg
push
pop
jnp
pop
jo
je
fs
les
aaa
push
imull
push
test
inc
jb
push
pop
mov
fnstenv
cmp
jle
xor
dec
fcoml
cmpsl
test
fucomp
mov
ljmp
ljmp
and
mov
inc
sub
sub
inc
cmp
dec
arpl
dec
insb
cmp
in
or
insl
push
popf
sub
cld
inc
out
scas
mov
mov
mov
stos
divb
pop
outsb
stos
adcb
add
test
push
inc
xor
test
mov
stos
in
add
xchg
out
mov
inc
sbb
int3
xchg
fwait
and
or
push
pop
rorl
inc
sbbb
loope
rol
lock
jmp
lds
mov
sub
push
out
pusha
mov
scas
mov
mov
ja
push
pop
dec
andb
sbb
adcb
scas
arpl
sbb
xchg
push
pop
push
push
push
push
push
fwait
cmp
std
test
test
bound
test
sub
add
sti
flds
push
add
jle
jge
xchg
jge
pop
push
pop
pushf
ljmp
loop
lret
adc
inc
fisttpll
test
cmp
adcl
mov
popa
mov
aam
andb
mov
fsubrl
fldcw
leave
repz
mov
push
sub
inc
dec
outsb
stos
push
mov
sbb
adc
iret
mov
sbbb
incb
lock
push
arpl
ss
jae
add
or
mov
outsb
cmp
mov
or
pop
pop
in
stos
or
mov
ss
jp
jb
test
and
sahf
ds
lcall
dec
das
gs
push
js
mov
sbb
mov
add
in
xchg
sti
test
push
std
xchg
ficomps
or
xchg
dec
lret
inc
push
cmp
xchg
or
xor
or
inc
mov
xor
popf
xor
gs
imul
jecxz
out
cmp
test
mov
push
arpl
and
les
push
decl
mov
std
fpatan
pop
ds
dec
mov
mov
mov
scas
xchg
fisttpll
jl
imul
mov
hlt
jae
arpl
test
or
insl
stc
bound
repnz
dec
add
dec
push
and
lret
cs
rdmsr
iret
imul
das
cmp
inc
inc
mov
repnz
sbb
pop
jp
clc
mov
add
jge
inc
jmp
sbb
cwtl
dec
mov
dec
xchg
xor
fildl
jecxz
insl
cmp
inc
mov
loope
xchg
xor
or
and
adc
mov
cmp
sub
mov
stc
movsb
xor
xor
lcall
mov
cmp
dec
push
adc
popf
jmp
es
ret
push
ds
jno
scas
arpl
lret
push
std
nop
jle
cld
cli
lods
push
jae
and
mov
cld
shrb
sti
std
and
jbe
jbe
dec
mov
movsb
push
pop
push
movsl
aaa
jb
sbb
inc
call
or
inc
xor
jge
lret
stc
pop
cli
sbb
ret
pop
dec
adc
fsin
mov
ficoms
cwtl
mov
popa
push
lods
inc
adc
nop
sti
out
add
mov
cmp
andl
into
je
nop
jge
ljmp
pusha
and
daa
fnstcw
clc
lds
mov
dec
loope
xor
sub
xor
lahf
das
lcall
fidivs
mov
cli
call
adc
push
push
xchg
icebp
sti
bound
push
aam
mov
jne
arpl
sub
jp
in
lret
sbb
dec
stc
ffree
stos
pop
in
cwtl
sbb
stos
dec
stos
aaa
sub
aas
mov
out
call
fcoms
scas
imul
xor
stos
cmc
add
arpl
xorb
data16
out
fnstcw
aad
push
stos
push
or
clc
pop
fbstp
lcall
insl
enter
push
pop
push
popf
sbb
xchg
movsb
sbb
sbb
out
pusha
mov
mov
cmp
fs
and
mov
push
dec
clc
jns
pop
mov
cmpsl
lahf
std
ss
inc
xor
ret
lock
lret
push
aaa
icebp
cli
lahf
mov
xchg
sbb
xchg
xor
loopne
cld
in
dec
jno,pt
movsb
xchg
jne
cmp
xor
cmpsb
jb
cwtl
mov
jge
mov
mov
pop
mov
cmp
jmp
leave
out
scas
hlt
test
sti
xchg
shlb
mov
and
out
rcr
fidivrl
shlb
popa
dec
push
sti
hlt
xchg
adc
inc
push
dec
test
int3
add
add
xor
ja
sbb
call
lock
mov
into
mov
jmp
cmpsl
and
or
out
jmp
xchg
add
jb
xchg
test
pop
enter
xlat
daa
xchg
outsl
call
inc
data16
stc
imul
cltd
adc
bound
stc
movsb
jmp
or
popf
pop
mov
fldl
fisttpl
cmp
js
ja
hlt
mov
xor
xor
push
cmp
pusha
repnz
sub
lret
xchg
sub
push
repnz
leave
mov
ret
jle
inc
jo
jno
inc
test
xor
mov
mov
mov
cmc
mov
out
movsb
cmpb
mov
adc
dec
test
adc
sub
push
sub
sbb
cltd
dec
pop
shrb
test
and
or
push
das
nop
loop
cmpsb
jno
inc
mov
fildll
adc
mov
sti
loopne
or
rdmsr
adc
pop
popa
or
inc
inc
gs
data16
leave
rclb
add
mov
cmpsl
fnsave
jecxz
mov
test
push
movsb
fcomip
test
xor
xor
aaa
and
in
mov
push
shrb
lahf
mov
pop
fnstsw
shlb
xchg
push
iret
jmp
cmp
daa
add
pop
lahf
les
push
sbb
inc
sbb
dec
es
lods
adc
push
sahf
and
cld
or
adc
inc
fcmovnb
cmc
or
stos
and
inc
leave
adc
sub
cmp
jge
mov
movl
push
mov
stc
adc
das
adc
outsb
aas
or
sbb
and
mov
pop
cmp
stos
xchg
shll
cmpsl
in
and
push
stos
inc
int
mov
mov
or
movsl
mov
mov
aaa
lret
outsb
imul
clc
js
push
or
push
xchg
jae
ss
iret
jnp
mov
in
pop
jae
mov
cltd
xor
push
jns
mul
adc
sbb
and
xchg
pushf
pop
sub
sbb
cmp
in
cltd
adc
mov
pushf
sub
and
mov
or
int3
rorb
popf
push
aas
xor
fs
mov
sub
mov
pop
outsl
cmpsl
or
inc
add
sbb
std
xchg
xchg
dec
lret
push
addl
ret
pushf
cmp
jmp
xor
push
dec
sbb
or
out
push
adc
pop
cmp
dec
imul
mov
pop
test
cs
inc
dec
subl
sbb
cmc
pop
push
ret
ja
and
inc
push
push
inc
imul
shll
addr16
add
stos
roll
cmp
jmp
in
or
or
cld
add
and
jns
inc
scas
or
aas
out
cs
nop
rcl
or
mov
jo
mov
xchg
shll
je
jp
fstps
gs
mov
js
jae
cltd
scas
sbb
or
out
jg
xchg
adc
aam
int3
xchg
or
mov
add
jle
pop
pop
sub
jb
shrb
popf
xor
xchg
or
or
clc
sbb
cmp
enter
jg
test
xor
cmp
and
sbb
lods
mov
inc
and
push
lret
int3
lcall
shl
cmp
xor
xchg
and
es
fsts
pop
push
and
sbb
inc
daa
sub
cmpsl
in
incb
mov
shll
lods
pop
or
into
push
and
stc
or
cld
negl
pushf
les
jo
jnp
xor
into
aas
ret
push
inc
test
sbb
push
rorl
shrl
push
ret
or
ret
push
sbb
lods
ss
push
xor
inc
xchg
cmp
and
inc
adc
xor
dec
mov
out
mov
pop
or
into
cmp
shrl
fisubl
sub
add
push
leave
loop
lahf
jle
popf
and
fldcw
jnp
out
adc
stos
cld
jae
mov
das
inc
mov
push
mov
lcall
ja
fiaddl
inc
or
or
sbb
xchg
insl
into
js
hlt
in
add
and
mov
mov
adc
push
mov
inc
test
push
xor
add
fs
pop
orl
test
outsl
inc
lret
sub
rcll
test
sbbb
into
cwtl
hlt
ss
sub
addr16
add
inc
mov
jmp
cld
fcomip
hlt
test
pop
faddl
mov
push
popf
lds
sub
stc
jo
inc
cmpsl
or
mov
dec
in
out
ljmp
lods
fnstsw
push
cmpsb
cmp
xor
push
ljmp
data16
jnp
hlt
cli
cmpsl
lret
sub
push
rcll
inc
fistps
or
stos
cltd
insl
push
mov
ss
add
icebp
jecxz
mov
dec
or
in
or
push
sub
jge
gs
ja
clc
xor
sub
cmp
pop
jo
jns
mov
addr16
rcrb
sbb
mov
inc
or
insl
dec
outsb
das
call
sarl
loope
lret
cmp
pop
rcll
ss
es
outsb
popa
xchg
and
xchg
and
mov
sub
aad
icebp
rcrb
cmp
push
out
scas
rorb
jnp
and
push
push
dec
in
pop
int
divb
mov
jns
outsb
inc
pop
fwait
sub
mul
xchg
insl
arpl
fldl
adc
aas
jge
fs
fisttpll
test
int
mov
cltd
loop
or
scas
jl
iret
mov
sti
ja
mov
fisubrs
push
dec
adc
adc
jmp
sbb
aaa
pop
push
rorl
test
mov
add
lret
adc
test
mov
lcall
mov
fdivs
cmp
or
adc
ret
mov
fdivr
push
inc
cli
sub
push
sti
xchg
ret
in
pop
pop
popf
sub
cmp
stc
mov
pop
jo
mov
and
mov
mov
inc
mov
push
int
not
fcoml
aaa
mov
push
xorl
adc
push
out
push
or
push
fs
outsb
xor
xor
ja
imul
sub
cltd
cmp
or
iret
sub
cmp
andl
push
les
jns
mov
loop
xchg
sub
in
rcrb
dec
fsubs
mov
mov
jno
imul
and
mov
fnstsw
ret
movsl
stos
pop
xchg
fs
mov
lret
divl
xchg
ds
pop
sub
xchg
sbb
cmpsl
fwait
ds
outsl
ror
add
or
hlt
in
outsl
and
cltd
je
jmp
fisttpll
cmovg
push
dec
fnstcw
sub
push
arpl
pop
sub
outsl
out
and
xchg
bound
movsb
pop
movsb
je
fistpll
pop
push
ret
les
fiadds
test
xchg
rol
push
aas
xor
jns
cli
jmp
jmp
in
sub
lret
jb
mov
pusha
push
adc
and
sub
pop
ljmp
jno
ret
addr16
scas
dec
xor
dec
or
add
mov
pop
dec
adc
sub
jle
ljmp
sbb
mov
mov
into
movsl
pop
ret
mull
inc
pop
dec
xor
imul
lods
mov
out
fidivl
adcl
adc
cltd
ds
jo
je
pop
jo
xor
stc
shlb
jecxz
or
test
xchg
insb
inc
xlat
sub
cmpxchg
aaa
xchg
decl
loop
cltd
cli
cs
jb
dec
adc
int3
and
mov
mov
mov
dec
jle
repz
loop
fmull
sbb
pop
fcompl
push
inc
outsb
xchg
jge
js
dec
incl
das
jg
ret
jg
dec
addr16
sbb
repnz
pop
imul
push
adc
data16
aad
mov
mov
ret
stos
cltd
mov
pushf
mov
sub
xchg
int
fwait
lods
je
sub
jae
les
outsb
xchg
cmp
fcoms
add
adc
mov
xchg
mov
cmp
dec
sbbb
cltd
pop
sbb
inc
mov
mov
test
inc
or
sbbb
mov
es
sbb
and
repz
cmpsl
in
repnz
lret
mov
pop
repnz
jb
and
mov
out
mov
push
test
jmp
popf
add
daa
imul
xchg
jnp
pusha
mov
inc
cmp
stc
repz
ss
in
or
fmuls
and
mov
push
jb
adc
sbb
in
lds
cltd
mov
movsb
loop
adcl
push
jge
mov
lds
js
push
or
filds
insb
or
fisubl
mov
pop
mulb
scas
add
sub
subl
lahf
cmc
or
and
mov
xchg
scas
pusha
icebp
in
cmp
sub
insb
or
in
out
in
cmp
jbe
leave
xlat
adc
inc
push
insb
mov
iret
push
xorl
mov
jno
push
mov
fnsave
adc
andl
jbe
iret
sub
cmp
js
mov
fmul
and
cwtl
pop
mov
or
cli
sub
repz
movsb
pop
or
fisubl
sub
inc
xor
outsb
fisubrl
cwtl
in
inc
mov
popa
notl
add
jecxz
push
cmp
movsb
ds
lea
lock
fcmovne
lret
hlt
cmp
cltd
divl
out
or
mov
jecxz
std
cmp
imul
test
dec
add
mov
mov
push
push
add
pop
cmp
cli
inc
xor
mov
aad
cmp
xchg
xchg
ja
fstpt
mov
push
or
aaa
jne
out
dec
or
mov
cmpsb
mov
push
popa
add
sbb
int
int3
mov
xchg
loop
pop
mov
out
pop
cmp
push
add
outsb
loope
orb
cmp
mov
pop
xor
and
repnz
std
and
ja
and
scas
mov
cmp
cmp
lcall
dec
ljmp
int
add
leave
insb
sbb
fbld
pop
shrb
or
repz
cwtl
inc
subb
inc
xchg
lret
sub
adc
inc
out
push
dec
jg
loope
mov
dec
mov
daa
jl
into
xchg
mov
repz
cltd
out
add
inc
popa
xchg
jmp
sub
and
mov
inc
ss
enter
dec
push
cmpl
or
xchg
sti
push
lea
scas
mov
fadd
xchg
adcb
out
inc
mov
and
iret
xchg
sbb
adc
fs
out
dec
push
or
and
xchg
sub
ficoms
dec
mov
push
add
fcomps
out
dec
dec
sub
sbbb
mov
sahf
mov
jo
xor
imul
sbb
in
cs
mov
mov
xorl
xlat
fs
mov
and
adc
out
mov
sti
xor
jle
cs
jle
lods
xor
mov
sub
mov
mov
loopne
fldcw
inc
dec
es
fs
cmpsb
std
bound
sub
mov
xchg
pushf
xorb
je
lods
xor
fdiv
cmp
rcrl
sub
cmp
outsl
add
lret
sbb
test
es
ret
push
and
out
cmp
inc
cli
jo
cmp
fldcw
dec
ret
fstpl
pop
fisttpll
adc
daa
cmpsl
cli
jae
rcrb
sti
xor
cmp
dec
dec
sub
fnstenv
xchg
add
lahf
inc
inc
xchg
je
clc
leave
mov
xchg
mov
aas
jno
clc
xchg
add
shl
outsb
ficoms
rol
adc
xchg
ret
mov
xor
and
outsl
xchg
adc
sbb
push
aaa
adc
mov
mov
movsb
rcrl
inc
and
test
sysexit
and
imul
out
test
or
sarl
or
out
cwtl
cli
mov
adc
lock
imul
pushl
pcmpgtw
mov
dec
call
sbb
ret
mov
out
pop
xor
push
nop
sti
mov
ljmp
add
mov
dec
ja
sbb
xchg
clc
les
and
pop
decl
das
dec
pop
xor
loopne
push
std
inc
add
mov
push
hlt
sets
push
lahf
inc
iret
in
mov
cld
cld
sbb
sarb
shl
mov
nop
jmp
shr
je
lock
dec
inc
mov
cmp
das
push
lods
add
xor
adc
xchg
data16
xor
je
outsb
in
xor
jge
js
ds
imul
push
adc
jnp
stc
pusha
and
cmpsb
repz
aad
cld
aad
mov
cmp
dec
mov
jmp
aam
nop
fs
mov
cmpl
loopne
mov
add
daa
outsb
mov
cmp
xor
lret
das
loopne
or
and
insb
lds
dec
mov
dec
cmp
in
adc
jmp
inc
cmp
fsubl
lcall
push
adc
pop
int3
or
mov
dec
mov
adc
or
mov
addl
mov
dec
xlat
jp
jle
js
sbb
ss
or
push
lods
push
aad
pusha
mulb
negb
inc
rorl
push
lahf
push
ret
mov
or
inc
rol
xor
pushf
pop
push
imul
push
into
inc
lods
aam
push
xorb
lods
dec
mov
stos
pop
jne
movsl
jp
aas
punpckhwd
mov
push
mov
pop
pop
inc
test
in
lret
pushf
fistl
rcrb
outsb
sub
lods
fsts
cmp
lods
or
push
int
daa
pop
insb
flds
jne
xor
in
sti
cld
mull
cs
pop
lcall
repz
adc
pop
lret
repz
negl
adc
push
sub
ds
xorl
pop
push
ret
xchg
add
lcall
add
adc
add
sub
dec
mov
add
mov
xor
cmpsb
push
out
rcl
ret
mov
mov
or
sbb
fisttpll
cmovg
shrl
pushf
mov
ret
mov
sub
rcrb
pop
lods
dec
xlat
in
arpl
or
jnp
push
sub
add
cmpb
hlt
lret
or
pop
aas
pusha
pop
adc
andb
xchg
push
and
inc
dec
incb
icebp
or
and
xchg
xchg
xchg
movsb
push
xor
cltd
into
bound
jl
outsl
fisubl
cltd
xor
sbb
sub
inc
addr16
mov
bound
jo
pop
std
sub
imul
cltd
fildll
xchg
lahf
or
mov
stos
xor
rorl
push
mul
push
jle
cmp
call
icebp
mov
loope
push
fstps
push
bound
jecxz
cltd
dec
pushf
lock
mov
xchg
push
outsl
out
xor
cmp
loopne
lret
js
lret
call
mov
sti
dec
ret
xor
jmp
push
adc
nop
enter
lret
lea
mov
xlat
xorl
jb
mov
mov
xchg
adc
inc
sbb
xor
push
loopne
cmpsb
hlt
sub
shlb
push
inc
pusha
fidivrl
orb
xchg
pop
in
dec
jno
insl
daa
dec
in
xor
or
stos
xchg
or
sbb
inc
leave
out
daa
or
pop
js
hlt
notb
repz
push
pop
inc
push
push
or
xor
add
pop
jnp
jmp
jno
cltd
sahf
popf
push
push
loope
pcmpgtd
fisubrs
fimull
cmp
inc
add
pop
xchg
mov
pop
and
dec
gs
inc
pop
fidivs
push
shrd
and
pop
pop
jo
lret
fsubrl
repnz
mov
loopne
ret
and
push
movl
sbb
fnstsw
pop
or
push
cmp
sbb
cmp
hlt
mov
addl
rclb
aad
lock
scas
mulb
pop
rclb
enter
xor
cmp
add
ret
inc
mov
jb
cmpsb
mov
sahf
jp
push
out
fisubs
jo
mov
nop
and
bound
cs
jne
adc
xor
stc
in
push
pop
lods
sbb
and
dec
gs
stc
pusha
and
mov
int
mov
xor
inc
pop
adc
sbb
inc
lret
push
lea
sub
and
fwait
add
outsb
mov
enter
ret
jg
mov
fsubrs
mov
push
icebp
jns
imul
mov
push
ret
nop
outsl
adc
sbb
int3
lock
lods
push
sbb
into
mov
push
jo
insb
and
lret
sbb
insl
cmp
xacquire
test
mov
push
lret
xor
xor
lret
cmp
rcrl
repnz
stc
std
sbb
mov
xchg
ror
sbb
xorl
mov
pop
push
pop
dec
jae
out
fs
cltd
xchg
push
scas
and
mov
pop
sbb
call
mov
cmpl
push
fucomi
cmpsb
rcrb
jg
enter
xchg
adc
inc
out
mov
fsts
xor
arpl
add
incl
adc
test
push
adc
push
xchg
aad
and
bound
dec
ss
fimull
sub
rolb
pop
fsubp
mov
popa
xchg
out
xchg
xchg
pop
adc
pusha
xlat
and
sub
cmc
out
mov
rcl
sahf
les
lret
xor
cmp
shlb
mov
mov
clc
pushf
xchg
inc
cmpsl
jnp
jnp
add
js
mov
fcoml
scas
imul
das
cmp
lcall
fistpl
dec
cmc
push
pop
movsb
repz
push
hlt
mov
das
jns
add
fs
push
out
pop
cmp
xchg
add
cmp
jg
je
cmp
push
pop
les
movsl
fstpt
cwtl
inc
fstl
sbb
outsb
jns
cltd
push
xor
scas
mov
sub
jg
xor
divl
shl
sbb
jnp
clc
cwtl
call
sbb
dec
fucom
test
jae
xchg
add
fsubrl
hlt
ds
mov
test
xor
pop
push
push
negl
pop
pop
pop
sub
jge
cmpsl
lods
in
add
sbb
or
cmp
inc
cmp
clc
and
stc
sub
and
jne
cmp
jmp
push
clc
fwait
inc
fs
pop
es
or
rcrb
push
mov
movsl
dec
into
cmp
cmp
inc
adc
push
mov
adc
dec
jg
xchg
punpcklwd
inc
xor
popa
xchg
lea
mov
mov
dec
pusha
pop
sbb
filds
xchg
jns
pop
insl
mov
mov
aas
xor
icebp
out
jg
fsubp
xor
data16
icebp
jecxz
sbb
test
out
sahf
leave
sub
pop
pusha
outsl
pop
insb
dec
repz
sbb
mov
rcrl
outsb
mov
jl
repnz
dec
mov
stc
aad
jns
bnd
jb
jg
mov
dec
xchg
jno
cmp
test
out
inc
cmp
in
mov
movsb
pop
xor
out
arpl
jl
jp
xor
out
jg
clc
push
insb
scas
lcall
and
cli
rorl
mov
fidivrs
out
fbld
rclb
push
mov
pop
sub
sbb
or
pop
mov
inc
call
add
xchg
test
in
sub
xchg
cmp
xor
adcl
mov
add
jp
cmp
int3
inc
gs
adc
movsl
xor
mov
pop
pushf
sub
lds
test
sbb
sbb
mov
ljmp
sbb
sub
adc
pop
sbb
adc
xchg
cmp
and
sub
mov
mov
sbb
push
mov
icebp
outsb
inc
not
in
arpl
mov
jo
sub
xchg
mov
push
add
rcrb
lods
sub
hlt
mov
test
inc
stos
mov
push
dec
push
mov
mov
gs
test
inc
xor
mov
mov
jns
xor
sub
js
push
adc
jo
xor
mov
out
mov
ljmp
jge
cmp
js
jb
call
mov
mov
jbe
dec
adc
add
scas
je
pusha
add
pop
mov
imul
xchg
cwtl
je
mov
fstps
fldl
mov
popa
adc
xchg
add
insb
sbb
mov
movsb
fwait
aam
pushf
imul
add
gs
inc
aad
cltd
fldln2
in
push
aas
and
stos
ja
cld
sbb
and
clc
xor
pop
iret
cld
das
pop
cli
fists
lret
or
cmpsl
mov
call
mov
xor
dec
shr
adcl
leave
dec
pop
imul
mov
popa
jg
in
jne
xchg
pop
xor
popf
or
mov
sahf
pop
xlat
xchg
scas
ja
xchg
cli
sub
gs
mov
popa
mov
sbb
sbb
dec
iret
call
lcall
aaa
or
rcrl
in
into
leave
and
sbb
xchg
repnz
xor
movsb
mov
xchg
jecxz
fcomi
mov
cld
adc
jle
test
lock
addr16
jnp
cltd
mov
jge
mov
pusha
inc
sbb
and
mov
popa
pop
lods
mov
repnz
adc
pushf
push
cmp
and
jb
aam
pusha
lret
stc
in
bound
jl
sbb
insb
jo
add
lea
std
cmpsl
ficompl
cld
fildl
jmp
sbb
mov
repnz
dec
or
fcoml
sbb
mov
ficomps
push
fcoms
mov
test
push
xor
aas
cld
jne
ljmp
arpl
outsl
movsl
dec
xor
pop
inc
movd
popa
pop
push
add
xor
add
mov
ffreep
mov
jne
ss
mov
pop
inc
add
fsubrl
adc
call
pop
sub
xor
xchg
and
in
scas
leave
andl
mov
fwait
jg
xchg
push
pop
adcb
jae
or
xor
pop
fisubrs
pop
adc
cmp
mov
fistpl
inc
inc
sbbb
dec
sbb
dec
lds
rol
xor
jp
add
jl
scas
jp
adc
les
sbb
cmp
mov
sub
add
inc
mov
xor
dec
pop
mov
push
mov
adcl
imul
jp
jbe
popf
cmp
cld
adc
test
ficompl
cmp
popf
sub
bound
test
pop
jae
dec
idivl
inc
sbbl
mov
mov
out
lret
fs
in
lcall
add
jmp
addr16
dec
inc
dec
xchg
jbe
andl
add
mov
cmp
adc
xchg
mov
cmpsb
push
mul
dec
sbb
mov
ficoms
pusha
xchg
test
shlb
cld
jae
stos
stc
add
pushf
shrb
dec
or
cltd
jae
adc
xchg
scas
ret
ret
pop
mov
out
scas
adc
push
inc
das
mov
das
cli
xor
notl
adc
push
sahf
sbb
imul
push
inc
test
icebp
arpl
push
jecxz
icebp
push
mov
xchg
jecxz
push
imul
fiadds
fisttps
imul
xor
push
std
jmp
dec
mov
jb
and
aam
sub
repz
mov
aas
sub
lea
loop
loop
lret
cld
inc
mov
mov
js
sarb
mov
lret
imul
xchg
pop
push
pop
fmuls
and
movsl
sbbl
imul
enter
je
adc
jbe
lods
pop
loope
xor
xchg
xor
lea
push
scas
out
adc
jne
sub
push
mov
test
outsl
lret
mov
xor
aas
addl
pop
jmp
test
lea
rcr
add
in
lcall
cwtl
andl
mov
enter
repnz
movsl
iret
cli
test
or
loop
push
testb
push
inc
or
and
cld
loope
adc
inc
cltd
js
xor
js
jmp
push
imul
and
into
inc
in
daa
scas
mov
into
aas
or
icebp
xchg
push
lea
mov
sub
dec
and
jns
sub
lea
xor
mov
lret
mov
xchg
out
xchg
mov
fs
mov
jno
jae
mov
lret
ljmp
in
jmp
jmp
xchg
jno
sub
jbe
hlt
lds
insl
sub
pop
dec
incl
jb
imull
push
jmp
push
movsl
fsts
cmpl
cltd
rolb
jl
inc
xchg
sbb
and
test
mov
sbb
add
pop
inc
aam
cmc
gs
icebp
inc
push
xchg
cmp
shll
sbb
lret
je
fsubrs
test
std
sub
push
cld
into
addr16
xor
cld
push
repnz
sub
ja
mov
mov
sub
pushf
dec
xchg
hlt
stos
lret
inc
aas
mov
fistl
lahf
out
cld
xor
loope
daa
in
xor
lods
mov
mov
sbb
pop
mov
enter
sub
fcompl
and
add
insl
popa
push
xor
das
sbb
mov
je
dec
mov
dec
mov
lock
mov
pop
push
outsl
jae
jmp
lods
xor
cmp
insl
xlat
outsl
rorl
cld
sub
sub
mov
jge
into
adc
mov
out
pop
push
rorl
dec
outsl
ss
test
or
pusha
test
and
rcrl
fisubrs
data16
mov
clc
shrb
int
repz
int3
sbb
add
cmp
push
and
pop
outsl
push
je
or
add
push
cltd
adc
inc
pop
call
or
mov
mov
jne
dec
sbb
sub
adc
ss
movd
push
test
mov
mov
mov
js
dec
mov
inc
inc
dec
add
or
jecxz
cmp
adc
insb
dec
sbb
or
jecxz
cli
rol
call
insb
cmp
pop
aas
pushf
lahf
cmp
fwait
push
aad
rcr
mov
enter
jae
push
push
aam
rolb
divl
jnp
outsb
or
mov
ret
inc
insl
or
mov
out
inc
dec
shlb
inc
ds
outsb
xchg
stos
push
xchg
adcl
outsb
cli
loope
push
xor
ret
xchg
outsb
jns
pop
lret
clc
lcall
jp
addr16
adc
fdivr
xor
push
fsubrl
pusha
add
cli
mov
stc
mov
arpl
adc
push
insl
daa
adc
dec
inc
cmpb
sub
jnp
lods
shrl
in
pop
xlat
call
lahf
addl
leave
pop
aam
notl
xchg
fcoml
and
in
lods
das
xchg
dec
mov
push
aad
fdiv
inc
pop
mov
mov
dec
ss
pusha
xchg
pushf
adc
lds
aad
jo
mov
or
clc
xchg
jl
jge
in
sar
shrl
ljmp
insb
sbb
mulb
fcomps
aam
push
imul
pop
or
mov
add
add
bound
imul
dec
fs
aad
add
lea
jbe
jno
xchg
addr16
hlt
mov
adc
push
lcall
jo
and
push
adc
xor
fdivl
mov
nop
lea
mov
jl
cmp
sti
pop
jcxz
jnp
mov
pop
mov
out
inc
movsb
cmp
pop
push
icebp
ljmp
push
loop
aaa
int
pushf
sub
insl
popf
lea
inc
test
sarl
push
push
or
loopne
fdivl
aaa
push
jno
and
rcll
out
js
lods
shlb
mov
lods
outsl
mov
inc
test
dec
jmp
push
cmp
sub
add
dec
test
jnp
insb
cld
inc
mov
jne
xor
adc
add
iret
xor
mov
sbb
data16
pop
fisubrs
insb
jge
scas
mov
les
xchg
xchg
add
lahf
sub
mov
sbbb
ret
std
shr
sti
aad
adc
pop
push
pop
fildl
cmpsl
pop
adc
xchg
cmpsb
hlt
xor
outsl
add
pop
xor
push
pop
pop
das
pop
stc
lahf
pop
int3
loopne
lods
mov
sbb
dec
fwait
pop
mov
or
or
int3
inc
mov
lahf
sub
cmpsl
fidivl
xchg
mov
ljmp
mov
push
pop
or
cmp
movsl
cmp
adc
mov
lock
scas
jo
lods
shl
daa
cmpsb
push
iret
stc
aad
popa
rcrl
mov
adc
or
and
cmp
cwtl
mov
pop
xor
adc
into
js
inc
in
test
jbe
mov
gs
mov
cld
mov
jne
shlb
jo
jp
lods
jmp
and
jnp
sub
into
movb
jbe
xchg
fimuls
cmc
cli
mov
popf
push
jecxz
in
cmp
leave
repz
xchg
dec
int3
dec
pop
jl
inc
mov
xchg
mov
stc
pop
pop
mov
push
mov
add
test
pop
add
pop
inc
mov
dec
lods
std
movsb
sbb
add
mov
xchg
pusha
jno
xor
lock
into
fdivrs
dec
ss
jge
sub
xor
push
jmp
icebp
sahf
push
lret
adc
ss
mov
call
shll
scas
xchg
fistps
push
mov
jno
orl
stos
lods
or
cmp
mov
inc
sub
pusha
or
push
jmp
jle
xchg
jae
je
aas
push
popf
and
fstpt
insb
mov
fimull
cmp
sbb
lret
mov
lcall
push
fwait
out
fiadds
add
xchg
adc
push
cmp
in
dec
cmp
roll
and
dec
pop
shrb
push
je
loopne
int
jge
popa
aad
lret
sub
or
enter
dec
lods
sub
mov
lahf
repz
daa
jmp
out
insb
or
cmp
ret
lret
sarb
cmpsb
lret
hlt
sbb
xor
add
pushf
cmp
dec
cmp
adc
xchg
into
or
inc
xchg
sarl
popf
pushf
shll
out
cmpsl
scas
and
inc
mov
fisubs
jge,pn
cli
push
push
popa
xchg
fadd
xchg
xor
loope
loope
mov
loop
cmpsb
xchg
fnstsw
mov
jno
mov
mov
cmpsb
adc
push
and
test
test
dec
jecxz
mov
addr16
loope
jp
xor
cltd
insl
addr16
pop
ds
fadd
aad
xchg
stc
pop
out
scas
sub
arpl
or
push
pop
jno
mov
push
cmpsl
sbb
aas
std
inc
push
lea
push
and
xchg
xchg
stc
adcb
xor
pushf
loop
repnz
push
sar
les
clc
icebp
jbe
cmp
push
adc
clc
xor
cmp
mov
rcll
inc
es
bound
mov
add
arpl
jo
daa
movsb
movsb
inc
or
out
call
leave
dec
push
repnz
cld
jne
repnz
push
insl
orb
mov
pop
xor
push
divb
mov
or
sbb
mov
mov
lods
fmuls
jmp
push
adc
imul
jmp
imul
sbb
and
xchg
cmp
push
jge
out
imul
imul
sub
pop
jle
mov
push
loope
orl
sbb
pop
shr
std
je
fimull
loope
mov
jmp
test
mov
aad
lret
pop
aas
rolb
mulps
in
add
dec
cwtl
adc
nop
into
mov
popf
adc
add
lahf
pop
or
xchg
cmc
adc
inc
add
aam
push
xor
and
out
jno
das
xor
lcall
aam
sub
clc
lods
dec
mov
in
jge
xor
pop
repnz
or
and
stos
js
aas
xchg
jge
pop
iret
adc
pop
jle
mov
int
lret
daa
aaa
mov
fs
ljmp
mov
in
push
add
sub
lret
dec
inc
cmp
subb
mov
test
cmpsb
mov
addr16
push
mov
push
xlat
sub
leave
das
inc
push
lock
and
ja
pop
xor
sarb
out
cld
mov
int
adc
scas
sub
mov
push
pop
jp
popf
out
int3
pop
jle
stos
and
mov
and
repnz
inc
inc
and
push
shr
cmpsb
fmulp
aaa
loop
emms
jl
outsb
lods
fistpl
jb
mov
cs
xchg
jecxz
jecxz
pushf
mov
adc
pop
lahf
mov
jbe
xor
cld
add
test
inc
adc
test
xor
stos
lods
and
leave
xlat
sub
or
cmpsl
inc
enter
jae
subb
ficoms
adc
xchg
mov
mov
adc
xchg
sarb
test
sbb
subl
fadds
dec
and
in
aas
push
adc
fldl
fprem
cmc
jl
arpl
sbb
dec
lods
cs
mov
cld
ret
fsubl
xchg
aam
rcrb
adc
cmp
js
insl
sub
mov
or
sbb
add
lock
fwait
mov
shrb
outsl
sahf
mov
int3
fwait
lock
lods
lds
cmpsb
mov
adc
or
outsb
inc
stos
movsb
fxch
jle
cmp
cli
leave
jmp
cmpsl
dec
push
lcall
loope
push
aad
mov
push
std
mov
arpl
pusha
mov
cmpsb
je
and
xchg
lock
jmp
push
push
scas
sub
sbb
sub
add
pop
add
andb
sbb
pop
mov
pop
dec
jns
pop
mov
inc
outsl
negl
testl
xor
sbb
test
arpl
roll
pop
sub
mov
pop
mov
pop
cli
out
xor
enter
xor
xchg
out
xchg
jne
mov
inc
stc
lahf
or
lret
lods
mov
jle
lods
adc
aaa
jae
mov
insl
daa
or
stos
push
xchg
fbstp
fisubl
pop
mov
adc
push
lcall
pop
cmp
cmp
shll
xchg
movsb
mov
outsl
and
hlt
pop
xchg
roll
imul
push
int
loopne
jp
mov
dec
adc
pushf
jne
mov
adc
sbb
movsb
cmp
arpl
lods
push
adc
sub
adc
mov
inc
scas
fs
es
cld
cmp
clc
in
lret
ret
ljmp
jns
mov
stc
mov
and
jns
movsb
or
inc
insl
in
repz
push
pop
pop
outsl
push
cmp
dec
imull
bound
imul
call
js
sti
jecxz
xchg
pop
in
mov
pushf
jg
mov
sbb
imul
mov
xlat
add
lock
mov
push
pop
inc
in
cmpsl
lcall
int3
adc
in
mov
pop
inc
insb
jnp
lcall
jnp
push
das
imul
mov
pop
iret
movsl
ss
inc
pop
jl
and
into
xor
sahf
mov
push
int3
adc
stc
leave
out
js
popf
dec
je
fimull
mov
push
push
jge
adc
dec
adc
leave
xchg
fs
mov
sbb
xchg
repz
sbb
lahf
popl
and
mov
fs
pop
xor
fadd
mov
nop
lock
mov
fidivl
add
or
ret
cwtl
fwait
addb
data16
jno
lods
push
mov
cs
push
sbb
loop
pop
adc
xchg
cmp
popf
scas
xchg
js
adc
jp
mov
inc
insb
add
cli
xor
in
cwtl
jge
and
popa
and
std
cmp
pop
push
movsb
bound
inc
mov
iret
add
lret
repnz
aad
ja
mov
out
dec
xchg
inc
inc
sti
out
andl
test
mov
push
jg
mov
push
insb
mov
les
repnz
popa
in
cmp
add
or
arpl
mov
ss
leave
jo
push
pop
int3
imul
mov
mov
dec
xchg
jo
jns
jae
loope
loope
xor
sbb
xchg
mov
aam
xlat
hlt
sbb
sbb
les
nop
jge
sbb
push
mov
jae
mov
jp
pcmpgtb
test
iret
push
rclb
xor
sbb
push
dec
mov
arpl
movsb
inc
cmp
ja
inc
std
xor
fidivrl
inc
push
ja
jecxz
cltd
loopne
das
mulb
and
push
sahf
xor
cmpsb
fldcw
inc
and
xchg
mov
int3
and
cld
lret
aas
int
sub
inc
xor
push
cmpsb
sub
insb
lret
or
cs
or
jno
sbbl
gs
xchg
jmp
pop
xchg
sbb
leave
pop
and
pop
dec
pop
inc
add
jg
inc
shl
or
imul
test
mov
xor
inc
cmp
inc
scas
ljmp
xchg
mov
mov
jmp
xor
cs
sti
nop
mov
dec
popf
mov
test
jmp
dec
ljmp
and
ss
jae
lock
jle
int3
insb
jae
or
imul
xchg
popa
fistps
bound
ja
inc
sbb
cmp
push
std
or
jg
das
dec
sbb
mov
add
jns
ds
shl
pop
sbb
cmp
stos
ret
xchg
popf
xchg
xor
out
fstpt
aaa
lret
rclb
out
ret
inc
loopne
sub
decb
inc
std
mov
not
mov
cwtl
push
stc
stos
jbe
mov
xor
push
jns
lret
sbb
jns
dec
hlt
aaa
dec
aam
sub
lds
add
ljmp
outsl
in
repnz
push
in
pop
outsb
nop
out
repz
sbb
shlb
test
add
inc
arpl
mov
out
fbstp
jecxz
rcrb
fsubrs
out
push
sub
ds
dec
and
fs
gs
es
mov
add
mov
int
cmpsb
inc
inc
stc
pop
inc
orl
xor
dec
cli
rcll
rorl
outsb
loopne
mov
ja
enter
cld
mov
testb
sub
mov
pop
mov
pop
addr16
xor
repnz
sub
leave
mov
xchg
dec
and
out
jne
insb
lcall
rorb
call
inc
lcall
mov
mov
subb
pop
cwtl
pusha
sti
repz
push
jl
and
test
adc
stos
cli
cwtl
inc
repnz
fdivs
jb
cmp
subl
sti
xchg
lods
in
dec
pop
sub
call
push
clc
mov
push
push
jae
xor
sub
push
outsl
cmc
imul
or
push
sbb
lret
inc
xchg
adc
or
mov
dec
sub
inc
push
cmpsb
je
test
push
xor
push
cmp
out
jbe
cmp
mov
nop
in
out
mov
int3
xlat
in
das
push
das
dec
add
pop
xor
and
fimull
cli
cmp
cmpsb
jae
aad
scas
mov
cltd
jnp
shrb
add
dec
jo
outsb
int
xlat
icebp
ss
jne
test
push
data16
mov
sarb
cmp
rorl
adc
fldpi
cmovg
mov
pop
insl
fildl
jmp
xchg
push
test
cmpsb
xchg
sub
jnp,pt
dec
inc
sbb
add
inc
pop
xor
or
xor
jae
ret
data16
sbb
test
movsb
push
cmc
outsb
add
pop
cwtd
adc
inc
pusha
xor
cmc
imul
jno
lcall
push
daa
cmc
xor
jp
ss
dec
xor
fsubl
lret
cmp
lahf
out
test
pusha
and
inc
leave
out
rorb
mov
cs
xchg
xchg
jl
cmpsb
dec
sbbb
jmp
int3
mov
mov
leave
icebp
data16
pop
mov
xor
mov
lds
pop
insl
sub
jmp
fnstcw
cmovo
mov
xchg
push
pop
jg
jae
lods
cmp
mov
ficoms
jns
pop
pop
cmp
or
clc
jle
fldcw
std
in
mov
ja
cwtl
rcrl
xor
cwtl
repnz
push
push
or
sub
add
cmc
loopne
das
loope
leave
clc
xor
inc
jl
mov
in
mov
call
das
loop
push
scas
imul
push
cmp
inc
pop
fdivrl
xchg
mov
dec
dec
xor
movsl
jo
push
and
das
mov
fwait
nop
jb
dec
mov
lds
scas
lahf
inc
xor
call
notb
dec
addr16
cmp
jno
jg
je
mov
xor
mov
mov
pop
lods
inc
mov
scas
mov
fildll
test
lods
mov
fldlg2
sar
aad
xchg
push
mov
cmp
adc
sbb
repz
cmp
lock
push
jno
pushf
stc
scas
cmp
cmp
out
push
push
cmp
shll
xchg
pop
lcall
inc
in
mov
cmp
aas
test
jns
shrb
add
dec
push
cltd
or
cmc
or
sahf
stc
xchg
ja
lds
mov
mov
cmp
and
sub
gs
ss
xor
mov
mov
mov
add
mov
arpl
aad
into
outsl
repz
fisttpll
xchg
lock
mov
movsb
xchg
mov
mov
or
cli
sarb
cmpsb
push
ret
insb
lods
sub
cmp
or
push
sahf
loopne
or
test
ds
and
jb
dec
repnz
call
xchg
lcall
push
mov
inc
pop
das
lds
mov
lock
adc
sti
arpl
mov
xchg
iret
push
push
and
in
cmp
xchg
in
or
fsubrl
sbb
in
mov
in
mov
xor
add
mov
in
cmpsb
inc
out
xor
lock
cmpsl
xchg
mov
cwtl
dec
inc
push
mov
xchg
jnp
pop
fmuls
aad
jnp
test
mov
inc
xchg
das
inc
and
sub
sub
sub
cwtl
mov
mov
clc
movsl
mov
or
mov
loop
sbb
out
push
sbb
mov
sarl
or
cli
cmpb
fxch
sbb
loopne
into
jae
movsb
insb
mov
icebp
test
and
pop
pop
ds
inc
mov
nop
inc
push
sub
out
rorl
cld
jns
inc
jno
add
popa
cmp
pop
or
push
js
stos
clc
test
lea
add
lret
push
inc
push
mov
test
ljmp
xchg
arpl
sbb
mov
pusha
stos
gs
mov
incl
mov
repz
aas
aad
popf
hlt
xor
in
pushf
cmp
das
add
std
xchg
mov
lock
push
and
adc
lret
out
sbb
mov
xchg
stos
jp
push
add
leave
mov
fdivrs
adc
jno
pop
pop
sub
out
sub
lahf
cmp
mov
hlt
daa
mov
jbe
bndstx
insb
scas
cltd
int
mov
sbb
and
inc
fnstsw
inc
aas
pushf
or
lods
movsb
aaa
mov
out
shrb
scas
mov
adc
out
jge
mov
adc
mov
push
sub
cmpsb
sbb
inc
pop
vminss
jge
es
and
mov
mov
inc
int3
ss
scas
fclex
bnd
jmp
pushf
pop
arpl
fsubrl
popf
add
cwtl
inc
fwait
push
xchg
mov
jno
cmp
cmc
sbb
mov
or
jg
jnp
xchg
imul
sti
test
leave
andb
jp
mov
cwtl
imul
mull
pop
mov
push
mov
mov
dec
add
push
push
outsl
cwtl
mov
push
mov
bound
loope
adc
popf
inc
sti
icebp
pop
movsl
inc
add
mov
xor
cmp
mov
hlt
adc
cmpsl
in
push
les
pop
fadds
rcll
dec
roll
mov
rcl
inc
sub
test
adc
out
push
push
outsb
mov
notl
sbb
int3
xchg
andb
add
push
fidivrs
mov
jp
lahf
sbb
lods
cld
cmp
or
fidivrl
dec
cltd
adc
in
mov
inc
cmp
aaa
or
mov
adc
pushf
push
sub
pop
add
adc
xlat
iret
stos
jge
iret
jbe
data16
lcall
mov
xor
cmp
test
inc
sar
jnp
or
bound
cmp
xlat
or
inc
stc
or
std
sbb
repz
or
pop
and
jnp
add
sbb
test
popa
dec
add
push
fidivrs
cli
imul
push
cs
fdivs
push
hlt
cmp
xor
fs
inc
xor
or
xor
mov
jecxz
popa
push
cltd
or
ffree
imul
or
inc
sahf
bound
push
and
lds
pusha
leave
cltd
mov
mov
mov
xchg
mov
dec
inc
leave
cwtl
fisubl
jmp
shrb
jnp
xor
and
dec
adc
lret
xor
stos
lock
data16
test
outsl
inc
fildll
xchg
ja
mov
or
push
shrb
ret
mov
loope
pop
adc
push
adc
pop
adc
push
rcr
push
cmp
fs
inc
dec
filds
mov
mov
scas
inc
je
inc
arpl
jecxz
add
dec
aaa
addl
addl
push
sbb
xchg
xor
xorl
insl
jno
adc
popa
inc
xchg
sbb
jo
fstpt
mov
mov
mov
or
or
cs
push
mov
aad
add
decl
outsb
ja
xchg
jge
lret
adc
add
fcom
sbb
cmpsb
test
jg
inc
shrb
mov
add
mov
movsl
and
cmpsl
sahf
dec
rcrb
call
mov
sub
sbb
push
movsl
add
imul
in
loope
jge
rorl
jne
scas
lods
daa
sbb
pop
in
pop
inc
sbb
push
xor
stos
sub
sbb
inc
loop
xchg
pop
pop
sahf
loopne
idivb
mov
in
xchg
lahf
arpl
cld
sub
rcl
jg
testb
cli
int3
mov
or
js
jo
mov
inc
jbe
movsl
and
inc
sub
clc
xchg
fs
mov
push
mov
pop
mov
test
dec
cmp
pop
cmp
or
dec
xor
adc
dec
mov
call
fistpl
push
sbb
mov
fisubrs
sbb
loop
push
mov
cmp
je
fsubp
add
xchg
inc
or
mov
sub
ds
ficomps
mov
js
push
pop
test
popf
jg
cwtl
lahf
ret
or
add
or
hlt
xchg
fadds
fs
jl
es
xchg
les
pop
cmp
add
push
negl
ds
adc
cmp
inc
dec
xchg
outsl
popa
add
stc
jp
jp
mov
sub
pop
gs
int3
push
xlat
leave
hlt
jl
fstpt
in
mov
std
addl
dec
xchg
sbb
aaa
ret
sbb
insb
fistps
jmp
mov
xor
aad
pop
add
pushf
add
ss
les
loope
xchg
imul
add
je
sbb
mov
popa
cmp
in
push
or
ljmp
push
ds
inc
lahf
lods
xor
jecxz
mov
ss
es
je
in
mov
std
inc
pop
pop
jmp
inc
call
push
mov
mov
bound
outsb
jge
add
cmp
adc
cmp
test
xor
mov
adc
add
out
dec
mov
sub
call
cmp
cmpsl
push
std
adc
sbb
test
aaa
lds
cmp
xchg
mov
into
dec
out
xchg
mov
fidivrl
mov
les
sub
mov
fdivl
out
dec
test
push
jecxz
mov
dec
rcrb
aas
ss
stos
jmp
outsb
scas
cmp
cmp
call
lahf
inc
xor
jno
add
std
das
push
idivb
mov
jmp
cmp
inc
mov
lods
fs
iret
xor
out
xor
icebp
pop
add
ss
and
ds
jge
fisttpll
addr16
je
stos
icebp
scas
aaa
jmp
adc
ret
and
dec
das
or
mov
inc
leave
rcr
pop
nop
cmovl
jge
ffreep
mov
mov
mov
dec
xor
in
or
or
out
xor
mov
mov
data16
and
mov
iret
fistl
lcall
pop
fwait
push
jns
movsl
mov
sar
adcb
adc
mov
pushf
mov
jmp
mov
fisttpll
minps
cli
dec
out
inc
adc
push
int3
xor
mov
pop
pop
loope
adc
pop
or
mov
xor
cmp
jg
sti
push
pop
mov
rcl
push
outsl
test
stc
sub
push
sub
mov
dec
pop
lods
mov
out
imul
ljmp
cwtl
mov
js
ds
inc
and
clc
aam
mov
xchg
fs
out
ss
movsb
sub
jmp
int
ss
outsl
xor
sub
dec
data16
je
int
js
stc
pushf
xchg
add
mov
and
and
mov
cmp
mov
jl
movsb
mov
sbb
lea
adc
cmp
lock
jo
in
sbb
and
adc
mov
xor
adc
and
mov
fsts
xchg
mov
xchg
mov
imul
add
popf
mov
and
sub
lea
repz
dec
lret
dec
xor
push
cltd
andb
iret
addr16
jg
aam
daa
dec
addr16
and
rorb
subb
pushf
dec
sbb
out
add
push
cmp
mov
push
loopne
div
loop
sbb
sub
data16
in
jge
dec
xchg
subl
xlat
je
cmpsb
mov
push
in
in
rclb
repz
push
es
dec
xchg
ret
sub
inc
negl
mov
imul
inc
aas
jmp
xchg
mov
inc
adc
leave
lret
loopne
mov
shl
nop
insl
iret
mov
lods
addb
or
cmpsl
sbb
lods
or
ret
pop
or
jbe
lods
ret
cmc
jge
test
and
mov
aam
cltd
jno
add
jmp
cmpsl
test
mov
sub
mov
inc
push
negl
xchg
mov
lea
push
inc
mov
sbb
outsl
mov
dec
cs
movsb
shr
mov
mov
fisubrl
rcr
repnz
fisubrl
fmull
mov
ret
dec
adc
test
xor
adc
lcall
push
lcall
add
pop
rorl
and
inc
jae
popf
cmp
aad
sub
iret
test
sub
imul
dec
push
mov
insl
sub
adc
pop
imulb
test
movsl
aam
push
pop
adcl
push
les
push
imul
inc
lea
nop
or
ret
rcrb
lds
not
pushf
xor
mov
dec
shll
sti
push
shrl
test
jge
xchg
popa
xor
lahf
mov
lret
push
fildll
mov
mov
mov
daa
lds
lds
push
lahf
lret
mov
mov
arpl
test
fwait
cmp
sbb
repz
lret
arpl
cli
and
xor
outsb
adc
leave
bound
lock
movsl
cmp
les
dec
scas
mov
pop
out
pop
adc
and
aam
or
ret
adc
fwait
cmp
test
sub
fldcw
in
mov
pop
lock
push
or
test
cli
in
adc
mov
xchg
mov
mov
jo
ret
adc
in
adc
jns
in
add
jnp
mov
cs
mov
pop
cli
cmpsb
insb
xchg
imul
movsb
push
adc
stc
inc
es
dec
mov
fmuls
cmp
test
ret
mov
out
cwtl
add
scas
push
and
pusha
mov
pop
fisttpll
fs
mov
ret
sti
push
inc
xchg
mov
mov
popa
fidivl
inc
push
test
stc
pmaxub
lock
push
push
jle
cmc
std
popa
aaa
insl
loop
xor
fwait
mov
mov
pop
addr16
rol
bound
add
je
icebp
jno
inc
jge
add
mov
mov
pop
pop
dec
dec
inc
mov
outsb
push
ret
jns
jecxz
xor
push
push
movsl
ja
and
mov
rcrb
cmp
insb
scas
aad
jg
mov
sub
adc
xchg
arpl
addl
adc
insl
icebp
add
and
mov
jmp
jbe
mov
mov
sub
scas
addr16
sbb
sahf
mov
push
loop
adc
cmpsl
xchg
dec
in
cmp
test
ss
in
jge
stos
pop
enter
lds
aaa
scas
lcall
mov
ljmp
mov
sbb
and
test
push
inc
test
sub
popf
iret
in
cmp
test
add
ds
pop
adc
movsb
xor
leave
mov
aaa
or
push
xchg
ret
mov
xchg
dec
xchg
lods
xchg
mov
test
pop
dec
in
mov
lret
stos
xor
mov
push
out
inc
lcall
pop
popf
pop
cwtl
sub
dec
push
subl
xchg
push
popf
loop
outsl
pop
scas
ret
sub
lea
ja
adc
inc
push
sub
jb
dec
xor
outsb
inc
fwait
js
cmpsb
pushf
scas
ljmp
icebp
addr16
xchg
or
adc
inc
movsb
mov
jbe
push
jno
mov
addl
cmpsb
ljmp
mov
shlb
pop
ja
dec
xor
fcmovnb
dec
dec
fnstenv
sbb
negb
movsl
cmp
push
fldenv
pushl
pushf
pop
jmp
stc
mov
fdivp
in
mov
shll
insl
aas
cmp
mov
xchg
and
lret
stc
mov
cmp
adc
adc
mov
mov
mov
mov
push
bound
sub
out
or
sub
in
fs
aam
jbe
and
outsl
nop
pushf
sbb
jmp
xor
ljmp
into
jle
pop
fcompl
sub
cli
xor
inc
lods
sub
mov
mov
fnstenv
mov
cmp
repnz
jp
es
push
outsl
shrl
xorb
das
sub
mov
xchg
pop
shrb
cli
xchg
out
lds
cmp
loopne
test
lods
mov
out
in
movsb
mov
iret
lds
sub
mov
mov
int3
or
stc
lahf
xor
mov
lds
mov
ret
ds
xchg
xor
cmpsb
lret
les
insl
dec
add
loopne
dec
movsb
mov
cmp
sub
mov
and
aaa
dec
cli
scas
cmc
popf
xor
sbbl
cmpsb
sub
xor
push
sub
or
ret
push
jnp
sub
test
xchg
xchg
pusha
jge
or
and
gs
sub
sbb
sub
call
shl
sti
pop
shll
dec
test
mov
ficomps
sahf
lods
mov
sti
mov
pop
add
inc
dec
sti
loopne
jbe
roll
pop
adc
stos
push
int
in
add
jp
fs
aaa
pop
jle
je
and
rcrl
shll
bound
repnz
push
loop
pop
iret
popa
lock
fistpl
adc
imul
inc
inc
in
inc
push
es
jbe
jae
aam
cld
jl
cmp
rclb
test
mov
ss
pop
insb
fldenv
pop
pop
enter
pop
lods
xor
inc
bound
cld
and
leave
lock
lret
lods
flds
mov
outsl
popa
xchg
jnp
pop
idiv
dec
out
je
cmp
dec
push
in
ret
scas
sbb
mov
pop
push
cs
xchg
and
pushf
fmul
je
int3
aad
scas
enter
add
pop
shrb
cli
dec
jae
nop
insl
cmp
pushf
jno
repnz
jno
xchg
add
loopne
jge
fsubrs
fdivrs
leave
sarl
push
mov
aaa
testl
stc
clc
cmpsb
loopne
sarb
mov
lea
imul
cltd
adc
cvtpi2ps
pop
or
sbb
lahf
xor
jmp
sbb
aad
and
push
sbb
xor
or
push
mov
push
ret
addr16
sbb
aaa
pop
aaa
mov
jbe
subl
cmpl
mov
lds
insb
popa
mov
je
mov
cmpsb
loopne
mov
clc
das
or
stos
scas
mov
adc
xchg
repz
subl
push
cld
jno
add
jmp
mov
or
cmp
clc
mov
push
jecxz
mov
push
fmulp
cmp
adc
je
mov
test
cmp
movsl
lea
mov
jns
cmp
aaa
jmp
mov
cmp
std
jns
pushf
inc
mov
sti
push
je
pop
cmp
sbb
in
popa
fimuls
or
popa
inc
std
pop
xchg
les
xchg
orl
hlt
loope
mov
adc
enter
aam
hlt
xor
pop
cmp
push
push
push
iret
scas
mov
shr
and
jg
push
fwait
pushf
mov
cs
shll
mov
popa
xchg
jp
and
mov
xchg
sbb
divl
lods
xchg
popf
or
add
cmp
cmp
je
inc
mov
adc
pop
int3
sub
stc
xor
mov
out
push
or
push
xchg
lret
or
clc
fldl
es
cmp
pop
aas
cmp
adc
xor
fbld
lock
int3
xchg
dec
icebp
dec
shlb
cmp
push
pop
xor
jg
xchg
cmp
xor
xlat
lret
negb
and
cltd
gs
adc
or
mov
sub
cmp
scas
push
sbb
sub
stc
and
sbb
sub
aad
mov
lret
test
pop
ret
les
xor
xchg
scas
in
movsb
sar
repz
sbbl
inc
adc
xchg
es
add
cmp
pop
or
xor
jno
pop
pop
mov
out
je
adc
outsb
imull
pop
push
cmc
scas
clc
int3
loope
repz
sbb
pushf
push
cmp
jmp
rcrl
movsl
adc
xchg
jg
xor
push
lret
pop
ljmp
push
les
push
add
andl
es
jecxz
dec
and
xor
shll
pushf
push
cmp
leave
stos
inc
leave
jg
adc
xchg
push
es
xchg
add
add
xor
sub
repnz
mov
mov
mov
adc
xor
lds
pushf
push
push
lods
dec
dec
pushf
jg
jmp
loope
adc
stos
aaa
sbb
dec
nop
pop
outsb
push
jne
cmp
lea
jmp
stos
aad
dec
inc
enter
into
subl
in
jnp
push
fidivs
xchg
mov
push
lahf
je
pop
call
pop
and
stos
enter
jo
adc
or
fs
clc
outsb
jne
in
scas
ds
sub
push
inc
adc
sub
adc
pop
sbb
lods
jle
lcall
jo
mov
jle
mov
push
inc
jmp
push
cmp
mov
ds
jle
mov
jnp
mov
sub
xlat
je
repz
mov
xchg
shll
stos
jp
pop
jecxz
fdivr
dec
mov
xchg
ja
fistps
push
jg
jb
mov
in
mov
jno
out
dec
repz
or
insb
and
arpl
in
sub
push
pop
cmpsb
and
mov
mov
in
push
jo
inc
gs
mov
mov
shrl
xor
call
mov
cli
adc
mov
add
mov
stos
jle
notl
xchg
imul
xchg
push
adc
nop
frstor
push
pop
push
pop
mov
add
repnz
jno
shll
mov
and
clc
push
mov
mov
aad
rcll
dec
ror
movsl
out
addr16
lcall
fwait
and
and
xchg
adc
mov
add
and
lcall
stos
or
add
pop
mull
jp
adc
cmp
xchg
sti
mov
fdivs
dec
cmpsb
sti
pop
cli
jnp
push
cs
loopne
cwtl
fimull
not
jp
int
das
std
out
xchg
fistpll
add
and
lret
sub
mov
addr16
jo
pop
ds
and
vmread
cmp
sub
cmp
cmpsl
cld
or
aas
sub
nop
or
xlat
test
cmp
mov
aas
cld
iret
adcb
sarb
xchg
pop
or
and
rcr
stos
mov
or
pusha
imul
stc
xchg
jge
push
sbb
mov
repz
mov
sti
add
mov
hlt
mov
jo
push
cmpsl
xor
fists
pop
je
leave
pop
add
pop
mov
cmp
mov
lcall
int3
ss
js
jecxz
mov
loop
cmpsb
jnp
mov
sbb
mov
repz
pushw
into
ljmp
dec
push
cld
icebp
imul
loope
jp
push
adc
outsb
cmp
out
cmpsl
jge
dec
fmulp
adc
fidivrl
lea
or
out
ja
dec
mov
pushf
gs
jne
loop
mov
mov
inc
int3
repnz
fidivl
punpckhwd
mov
in
sbb
in
jmp
lods
push
mov
mov
mov
jl
and
lods
in
outsl
pop
rcrl
loope
mov
push
pop
pop
movsb
inc
xchg
cmp
subl
sbb
stc
mov
aad
jns
or
cmp
and
push
pop
enter
lock
ficomps
fwait
hlt
loope
es
int3
cs
pusha
aaa
jb
xlat
das
fstl
pop
inc
gs
in
xchg
dec
daa
jl
repz
mov
dec
mov
dec
jnp
push
lods
xchg
mov
lods
lret
pop
dec
arpl
test
rorb
testb
xchg
ja
adc
cld
into
popa
push
pop
andb
scas
lcall
cmp
les
mov
mull
jns
fdivl
test
aad
pusha
adc
xlat
dec
inc
dec
rcll
push
mov
movsl
mov
xor
stos
push
lahf
pop
hlt
pop
xchg
inc
iret
aaa
and
mov
sbb
xor
sbb
adc
mov
xor
and
pop
stos
iret
inc
lods
daa
ret
add
lret
repnz
mov
xlat
cli
cmp
cmp
mov
mov
sti
xchg
jecxz
inc
lret
dec
int
add
int
dec
fldenv
or
lds
vphadduwd
jle
test
aas
jo
inc
hlt
mov
insb
insb
mov
inc
in
and
outsb
scas
mov
repz
mov
cmpsb
push
int3
in
int3
fmuls
hlt
jnp
or
dec
xor
pop
mov
fwait
aad
mov
leave
and
jnp
pop
rol
add
sub
xor
mov
mov
cmpsl
pop
sti
xacquire
das
es
sub
xor
movsl
jge
and
negl
sahf
add
es
out
sub
dec
mov
lcall
fistps
fldl
ret
xor
mov
cmp
push
sbb
adc
mov
lock
cmp
inc
add
out
jno
ss
test
lcall
add
cmc
sub
rcrl
or
aas
xchg
and
ja
cmp
mov
iret
mov
sub
ret
out
xor
cmp
in
and
out
push
mov
push
push
gs
adc
push
arpl
adc
imul
rclb
sbb
adc
sbb
pop
cmpsb
pop
pop
stc
push
stos
test
sbb
faddl
or
jo
dec
pop
les
add
sub
lea
mov
add
push
push
mov
add
mov
cltd
or
xchg
addb
jns
push
or
adc
dec
push
pop
lock
adc
dec
push
bndstx
sbb
lcall
insl
inc
fidivrl
add
pop
pop
mov
inc
lea
mov
adc
sbb
lret
mov
das
test
clc
stc
iret
test
into
jnp
imul
xor
cmc
jne
repz
pop
ret
sarb
xchg
loope
scas
imul
or
sti
int3
adcl
sbb
mov
test
into
jmp
shrl
xchg
mov
enter
and
fwait
or
jnp
pushf
mov
push
testl
and
or
dec
inc
lods
or
cmpb
imull
repz
xchg
mov
ss
push
adc
cld
das
std
and
push
data16
ror
sahf
sub
mov
xor
pop
fstpl
mov
or
mov
bound
jbe
push
push
ucomiss
test
test
cmc
add
int
jne
call
out
dec
shlb
sub
pop
ret
sbb
insl
cmp
adc
je
push
push
sub
cmpl
cmp
xor
int3
mov
cmp
subb
mov
subl
xchg
inc
jae
rcrl
mov
pop
push
jmp
inc
jno
sbb
bound
xchg
and
sub
stos
mov
mov
jmp
xchg
call
mov
push
cmpsb
push
add
sub
loopne
dec
call
stos
adc
leave
stos
jne
mov
shrl
jns
add
lret
stos
sub
dec
outsl
jnp
mov
mov
dec
sarl
xlat
pop
ret
cltd
jne
jns
push
mov
sbb
outsl
outsb
shlb
gs
in
test
jb
scas
dec
or
inc
addr16
pop
jg
mov
lahf
xor
rclb
std
std
sbb
lcall
xor
adc
xchg
push
rclb
or
fs
mov
jp
into
inc
lods
cld
sbb
push
or
cmp
sub
cwtl
fxch
repz
sub
ss
dec
nop
mov
jg
mov
aad
shll
mov
cmp
out
push
sarl
xchg
mov
outsl
sub
mov
cmp
adc
fisubrl
sub
xchg
push
xchg
cmp
mov
outsl
xlat
or
outsl
cmp
loope
or
xor
fisubrl
shll
les
loope
fnstcw
in
lock
xchg
fsubr
xlat
cltd
jl
dec
loop
in
dec
cmp
add
lods
loop
or
push
sub
dec
cmc
test
sub
add
sub
fcoms
xchg
or
pop
adc
and
daa
xor
mov
mov
xor
scas
leave
test
xor
sbb
push
pop
mov
xchg
data16
push
cld
out
inc
mov
clc
into
lcall
loop
pause
mov
and
lea
jmp
cs
aas
add
cltd
pop
subps
addr16
inc
imul
sarb
adc
xlat
aam
mov
pop
loope
mov
shl
daa
mov
pop
loopne
adc
stos
adc
lcall
adc
faddl
daa
and
rol
pop
mov
pop
xor
push
fstpt
mov
das
jb
rorl
out
xchg
sbb
jp
fsubrl
pop
push
add
fwait
pop
push
mov
fstpt
fmull
dec
mov
inc
mov
cmp
mov
scas
loopne
testb
loopne
mov
iret
add
adc
stc
cs
sub
imul
sbb
lret
mov
setno
mov
iret
ret
out
xchg
cmp
add
cmp
push
sub
enter
in
adc
imul
mov
fs
inc
adc
and
repz
adc
mov
xchg
push
dec
imul
mov
mov
rcll
xor
outsl
pop
out
in
push
xchg
pop
xchg
movsb
je
dec
inc
pop
lcall
lret
add
cmpb
dec
sarl
mov
xor
pop
iret
xchg
movsb
test
sbb
in
xchg
arpl
add
mov
pop
add
mov
add
fisubl
insb
stos
mov
out
dec
add
loope
aaa
add
dec
xchg
cwtl
xchg
mov
aaa
fdivr
and
fnstcw
or
fwait
cwtl
fsub
inc
dec
call
xor
jle
les
mov
push
repz
inc
pop
das
mov
and
les
mov
movb
popf
mov
movzbl
mov
mov
inc
adc
lea
in
sar
adc
clc
xor
sti
mov
shrb
loopne
mov
mov
daa
jle
fldt
mov
cmp
lock
pop
ds
cltd
lods
or
repnz
adc
out
adc
jecxz
or
shll
cmp
sbbb
mov
orl
mov
pusha
repnz
or
mov
stc
call
add
mov
into
pop
xchg
adc
outsl
and
mov
divl
pop
cmp
mov
sbb
lahf
mov
ret
not
jle
movsl
sbb
xchg
pop
loope
xchg
dec
jb
mov
lret
shrb
xor
push
sti
scas
scas
and
ds
imul
addr16
sahf
scas
les
aas
xor
push
aam
icebp
movsb
rol
in
in
xor
ja
out
imul
cwtl
sbbl
push
rcrb
cmpsb
fs
fs
ret
mulb
xor
pop
ljmp
mov
ret
push
cmp
push
mov
fdivrl
sub
push
mov
inc
push
roll
push
pop
jecxz
cmp
jae
and
sbb
lods
and
add
xchg
ss
xchg
adc
mov
test
out
mov
pop
and
mov
xlat
lcall
shl
mov
or
mov
xchg
psrlq
mov
inc
sbb
xchg
inc
cmp
in
pop
or
outsl
mov
add
daa
sarl
mov
lret
in
push
sub
sbb
in
adcl
push
andl
cmp
cltd
dec
lea
push
xor
ret
adc
ret
cmp
cmc
mov
pop
scas
rolb
push
sub
dec
pop
jnp
and
mov
sbb
push
mov
or
out
mov
mov
push
fbstp
in
addr16
add
xor
or
ret
sbb
ljmp
inc
xor
mov
sbb
insb
mov
pop
or
push
push
loope
rcl
lcall
fucomp
fsts
lcall
cs
mov
ret
cmpsb
xor
gs
stos
aad
loope
xchg
loop
js
jae
roll
pop
mov
xor
mov
mov
mov
mov
fsubrs
push
es
shl
pop
aad
push
imull
and
xchg
outsb
pushf
xor
scas
xor
or
jae
sub
lock
cmc
ljmp
inc
aas
xchg
cltd
bound
and
iret
xchg
adc
sub
mov
loop
das
out
sbb
xor
fcomi
dec
inc
fldz
dec
pop
scas
mov
cmp
add
imul
mov
inc
xchg
fdivs
push
inc
jne
lock
aaa
mov
dec
sbb
jnp
cmp
jge
push
pop
jno
dec
xorl
adc
sub
jp
mov
js
in
pop
sarl
sub
adc
xor
push
pusha
add
aam
mov
mov
mov
mov
add
add
hlt
push
loopne
pusha
sarl
arpl
into
jg
add
sbb
jmp
js
cmp
sarl
mov
cmp
fwait
jns
clc
xchg
inc
popf
jae
das
mov
clc
dec
xchg
mov
xor
aas
mov
pop
out
dec
cmp
mov
push
and
pop
jecxz
sbb
sub
mov
pop
ficomps
mov
leave
push
scas
xor
and
mov
mov
push
mov
lock
xchg
fcoms
sub
imul
fidivs
rcll
mov
cmpsb
jb
xchg
cmp
out
pop
repnz
add
ret
stos
gs
outsl
into
call
add
xchg
or
call
mov
and
adc
test
stos
cmc
inc
icebp
push
fbld
dec
adc
xchg
dec
mov
add
icebp
daa
aas
ret
mov
mov
cld
mov
mov
pushf
hlt
or
popf
push
cmp
add
imul
add
cs
bswap
popf
adc
lcall
js
push
movsl
pop
and
cld
pop
loope
mov
inc
stc
add
call
dec
out
xor
movl
push
cld
pop
dec
clc
fstl
mov
pop
push
mov
mov
or
mov
sbb
push
mov
leave
sbb
mov
mov
ja
out
jl
dec
pop
xchg
jne
fidivs
cli
push
push
cli
pop
div
dec
jg
sub
mov
ret
adc
or
add
add
enter
stos
sub
lea
ja
dec
dec
mov
in
test
inc
mov
xchg
cwtl
push
and
popf
mov
aaa
aad
mov
cwtl
in
cltd
ffree
jne
jmp
jb
mov
add
mov
das
mov
out
mov
cmp
pop
cmpsl
push
fcom
add
adc
fistpl
daa
repnz
pop
rcrb
idiv
ja
mov
hlt
adc
lods
jbe
aaa
pop
imul
pop
jbe
cmp
ja
jmp
lods
xchg
icebp
mov
inc
fwait
jbe
pop
add
cwtl
cmpsb
xor
into
ds
push
sbb
pop
dec
add
addr16
lods
in
std
fidivrl
mov
mov
stos
cltd
test
jl
stos
lock
cltd
cs
push
loopne
stc
push
movsb
mov
aad
or
rcr
pop
and
push
lret
aad
push
jb
das
ja
test
push
sub
jmp
sub
bnd
jns
cli
enter
dec
scas
call
xlat
jnp
push
dec
or
popa
pop
xchg
push
cld
and
push
sub
stc
inc
sub
lret
rorb
xor
adc
popl
insl
xor
lret
cs
dec
mov
das
adc
adcl
xorb
sbb
popa
pusha
stos
dec
loopne
adc
loopne
adcb
and
mov
lea
cmp
mov
mov
mov
mov
pop
scas
lods
test
mov
xor
data16
aam
cmpsb
cwtl
xorl
adc
pop
fdivl
cmp
insl
sub
je
jns
setge
mov
cmp
das
add
add
je
sbb
adc
movsl
out
mov
mov
sub
mov
mov
dec
fdivl
sbb
movsl
int
cmp
sbb
arpl
fidivs
lock
lock
iret
icebp
xor
xor
add
in
dec
je
fcomps
pop
sub
in
sub
fiaddl
cmp
and
push
lods
pop
bound
mov
repnz
mov
adc
movsl
inc
sub
xchg
mov
jnp
inc
or
sti
xchg
aas
js
cmp
xor
pop
imull
and
jg
inc
inc
nop
cmp
in
leave
es
adc
and
jnp
pop
pusha
test
scas
sbb
xchg
in
sbb
inc
mov
pop
cmc
ss
jns
mov
test
xor
mov
scas
jmp
adc
js
xchg
mov
std
push
jb
aas
push
cmp
nop
xor
out
sub
push
add
inc
xchg
repz
movsl
insl
pop
mov
test
fidivrl
sarl
mulb
test
pop
sti
inc
das
call
mov
adcb
or
push
test
mov
sub
pop
jecxz
mov
xchg
in
mov
cmp
cmp
movsl
cmp
in
cmp
cmp
insl
dec
add
dec
fld
daa
xchg
shrl
fmuls
out
sbb
in
pop
lods
or
fdivl
mov
sbb
sub
mul
mov
jb
aad
sub
in
adc
jp
push
jecxz
push
and
jl
hlt
sbb
or
sub
shlb
cmp
adc
inc
out
fdiv
sbb
ja
aam
hlt
pushf
lea
cmc
xchg
cmp
cwtl
mov
sub
or
lds
pop
in
popa
mov
xchg
dec
inc
out
pop
or
xchg
jecxz
fsubp
cwtl
xchg
mov
inc
jae
adc
rclb
push
mov
cmpsl
nop
sarb
inc
out
add
push
orb
cmpsb
xchg
arpl
xchg
cmp
sub
repnz
pop
stc
scas
cmc
add
inc
push
ss
sahf
dec
imul
mov
in
jl
or
cmp
push
jns
pop
push
xor
xchg
shll
shrb
imul
leave
sub
addr16
cli
lods
fldcw
lock
jmp
sbb
rol
xchg
arpl
pop
test
gs
dec
push
fistps
adc
mov
lds
pop
pop
adc
test
cmpsl
out
mov
push
in
popa
mov
mov
cmp
test
adcb
jae
push
push
inc
rorl
jge
mov
push
cmp
pop
std
mov
add
jecxz
mov
inc
pop
test
dec
adcl
push
or
and
inc
test
pop
jecxz
mov
nop
adc
ljmp
scas
mov
mov
inc
xchg
jae
and
xchg
adc
rolb
xchg
jge
lods
stos
inc
dec
mov
sti
popf
adc
push
pusha
icebp
stos
aas
xor
out
lea
movl
or
jmp
dec
fs
mov
je
int3
ljmp
ljmp
jmp
xchg
dec
dec
ds
lods
ja
mov
cmp
leave
cs
data16
loopne
ja
negb
dec
adc
and
out
lret
dec
addl
add
fstl
cmp
inc
aam
push
std
mov
call
popf
scas
iret
mov
and
push
mov
and
mov
pop
inc
mov
mov
mov
mov
lret
jnp
in
lret
mov
cmpsb
fcoml
xchg
mov
mov
jno
pop
out
hlt
rcl
xor
in
scas
ficoml
test
add
pushf
sbb
std
std
sub
idivb
scas
dec
imul
and
sbb
mov
pop
ljmp
inc
ficomps
mov
inc
mov
and
dec
repnz
or
push
xor
cmp
jns
in
and
dec
dec
cld
ret
push
lods
xor
test
sbb
test
pop
fiaddl
or
lcall
popa
repnz
movsl
pop
cmp
adcl
add
add
cmp
mov
xor
mov
fld
icebp
mov
bound
movsl
int
pop
test
lahf
xchg
inc
sbb
lcall
fadd
mov
dec
inc
dec
int3
dec
jecxz
adc
sahf
ret
fisubrs
in
pop
gs
cmpsl
adc
mov
or
sub
mov
sbb
int
pop
xor
in
jne
imull
xlat
sub
cmp
ficomps
mov
jns
popa
sahf
mov
inc
xchg
out
into
xchg
inc
fsts
mov
jae
add
out
pop
rcrl
dec
arpl
xchg
sbb
out
lret
push
lcall
and
lret
jecxz
jbe
dec
xor
push
mov
cmpsb
or
scas
dec
xor
xor
cmp
cli
fcomp
insl
mov
xchg
cmp
lret
mov
push
test
iret
int3
dec
xchg
outsl
mov
or
in
mov
xor
or
repnz
pop
push
das
mov
mov
pushf
dec
data16
xchg
mov
dec
aas
jl
insl
xor
fwait
scas
das
push
add
mov
mov
mov
lcall
adc
jmp
dec
add
mov
mov
xor
xchg
stos
iret
xchg
in
lods
jne
int3
cld
cmp
jne
mov
imul
mov
and
js
cmpl
jnp
mov
shl
mov
push
dec
add
xor
rclb
jnp
mov
out
lahf
cmc
mov
repz
test
shufps
inc
outsb
push
lret
sbb
imul
stos
add
sbb
out
inc
mov
adc
cmp
movsb
std
and
add
iret
sub
pop
dec
xchg
imul
repz
mov
movsl
ret
inc
mov
das
iret
jp
jns
xor
dec
incl
mov
dec
jb
fstl
rcrl
add
shll
aas
fsts
add
mov
and
sub
or
cmpsb
inc
movsl
outsb
jne
push
cmpsl
or
fldenv
cld
imul
or
pop
sbb
cli
shrb
out
jnp
add
ret
dec
movsb
and
pop
xor
cltd
dec
jmp
and
mul
ss
and
jle
hlt
ja
push
in
jp
outsb
ret
mov
add
pop
imul
inc
mov
mov
sbb
inc
and
ret
jne
orl
push
sahf
lds
pop
inc
cmpsb
pcmpeqw
nopl
mov
test
out
mov
xchg
nop
lahf
sbb
xchg
or
sbbl
sbb
xchg
in
xor
nop
inc
pop
jl,pn
mov
loop
jnp
mov
dec
jmp
push
sub
in
sarl
xor
fs
call
adc
lret
pop
mov
lret
jge
notl
sbb
adc
pop
or
mov
add
cs
jle
add
or
sub
iret
dec
jno
lea
lret
xchg
push
loopne
test
lret
lahf
mov
adcb
sbb
sbb
xchg
push
xchg
xor
xor
nop
in
popa
inc
add
push
fistpll
fadds
scas
outsl
pop
push
add
and
clc
lahf
xor
shrl
in
js
cld
das
mov
testl
adcl
jns
ret
mov
mov
push
mov
mov
adc
jg
int
out
inc
inc
jecxz
jp
pop
mov
clc
dec
shll
insl
sbb
je
fiadds
pop
xor
adc
xor
sahf
test
adc
je
inc
pusha
jbe
test
ds
mov
imul
pushf
sbb
in
mov
movsb
xor
sbb
or
rcl
fs
inc
aaa
loopne
pop
xchg
cld
hlt
nop
pop
fcmovb
cvtps2pi
cmp
sub
push
xchg
cmp
dec
incl
jne
enter
sbb
mov
jns
mov
lea
cli
lods
insl
inc
out
shl
in
inc
jb
cmpsb
movsl
xchg
jge
pushl
fstps
movl
xor
insb
js
push
mov
imul
push
pushf
mov
test
push
inc
mov
and
mov
pop
sti
cltd
cmp
jg
ret
xor
stc
arpl
jge
and
fcomps
jg
cmp
mov
inc
sbb
jl
or
cmp
and
imul
shrl
outsb
popl
leave
cmp
fidivrl
stc
mov
adc
scas
cmp
scas
les
fstl
adc
test
sbbl
or
fcomps
pusha
outsl
and
push
dec
pop
int
jae
jle
dec
push
lcall
cmc
cmpsl
pop
sub
dec
fwait
dec
pop
pop
lret
jge
shl
xor
sar
push
sarl
inc
sub
test
inc
xchg
adc
xor
orb
xchg
xchg
sub
cs
and
lds
jns
lock
not
mov
sbb
and
jno
cmpsb
jo
dec
not
pop
mov
mov
sub
xchg
xor
cwtl
adc
inc
fisubs
testb
mov
ret
adc
rclb
test
sbb
dec
jo
pushf
pop
ljmp
loope
rolb
dec
or
sbbb
mov
mov
sbb
insb
mov
dec
sbb
dec
xor
ret
add
scas
movsb
mov
mov
xchg
gs
pop
mov
mov
mov
stos
js
std
pop
sub
bound
xchg
inc
fdivl
icebp
push
popf
loope
or
adc
mov
fisubrl
mov
inc
mov
mov
fnstsw
mov
pop
loop
in
out
repz
roll
test
adc
mov
mov
and
pusha
cwtl
jb
insl
push
data16
gs
lock
mov
inc
movsl
xlat
rep
fisttpl
xlat
cmpb
inc
and
mov
pop
jmp
das
or
test
stc
sub
scas
mov
mov
sbb
pop
sbb
mov
xchg
inc
pop
mov
push
adc
xchg
mov
pop
jge
sub
mov
dec
and
inc
mov
or
xchg
daa
dec
or
iret
mov
ret
jecxz
mov
and
mov
dec
push
and
jbe
mov
fwait
pop
lea
outsl
push
addr16
jo
or
mov
movsl
push
pop
hlt
mov
sub
test
sahf
fwait
rcrl
ds
scas
add
adc
pushf
cmpsb
push
inc
and
cmp
popf
sbb
into
adc
cli
out
xchg
outsb
inc
jmp
and
fmull
push
xorb
stc
sub
xor
xlat
imul
xchg
pop
fildll
mov
adcb
testb
xchg
fwait
cmpsl
push
loop
push
scas
in
xor
imul
cmp
add
popa
dec
shrb
and
cmp
ror
call
xor
cmp
loop
sarl
xchg
cld
icebp
test
shr
aas
mov
cwtl
test
cmp
enter
push
addb
mov
mov
dec
in
jecxz
adc
mov
icebp
jno
adcl
test
out
sub
test
cmp
or
movsl
cltd
and
loopne
dec
sub
mov
adc
cld
rcrb
and
sbb
or
ds
repz
sub
adc
sar
in
xchg
mov
sub
loope
leave
dec
ljmp
out
pop
fdivl
movsl
jge
incl
xchg
pop
fcomi
dec
lods
subl
dec
fwait
mov
out
test
notl
repnz
adc
aas
pop
cmp
dec
and
dec
ds
insb
pop
shlb
stc
leave
leave
notb
leave
jmp
sbb
cmpsl
loopne
mov
xchg
mov
fwait
lret
cs
in
call
dec
cltd
sub
jmp
leave
bound
xlat
enter
je
jmp
or
add
mov
lods
mov
xchg
decl
stc
pop
pop
or
das
movsl
outsl
lods
xchg
inc
dec
mov
cmpsl
andl
inc
iret
mov
jp
mov
cwtl
fwait
sbb
xor
hlt
faddl
fstp
paddusb
and
xlat
ret
dec
pop
adc
fwait
cwtl
push
fs
rolb
sub
or
icebp
lock
pusha
jl
push
mov
jb
les
inc
mov
push
push
push
ror
rorb
sti
shrl
aaa
gs
cld
ret
xchg
sbbb
push
and
lcall
addr16
push
add
jae
jne
pop
outsb
test
fnstenv
test
push
cmc
jae
repz
in
inc
or
lret
sbb
ret
lret
jno
gs
sub
xlat
imulb
mov
dec
outsb
dec
lahf
pop
insl
push
fxch
fisubl
cli
sub
inc
movsb
pop
mov
ljmp
cmpsb
sub
or
cs
adc
dec
cltd
dec
push
sarl
ficomps
sbb
dec
popf
adc
sbb
inc
rcrb
hlt
xor
push
lock
inc
mov
xchg
ljmp
mov
loop
outsb
es
push
xchg
in
add
push
pop
into
push
add
cs
shrl
rorb
cmpl
sar
jle
adc
cmp
out
jp
mov
xchg
std
inc
inc
jmp
xchg
pop
outsb
imul
and
fsub
sti
lock
push
push
out
fsubrs
cltd
mov
pop
shll
inc
ret
stc
cmc
xchg
jge
in
inc
in
add
xorl
imul
xor
xor
or
mov
insb
pop
das
pop
mov
jmp
imul
addr16
rcll
mov
push
xchg
cmp
inc
js
dec
push
jne
shrb
cmp
lock
cmp
popa
hlt
jl
sub
adc
jno
es
out
cmp
inc
push
sbb
test
or
fwait
pop
jo
fmul
and
ret
fs
lea
jno
sub
out
icebp
or
or
and
push
xchg
pop
sti
int
dec
push
xchg
jecxz
icebp
sar
dec
inc
mov
or
dec
ss
repnz
sub
daa
inc
push
sub
stos
fildl
jl
push
test
xchg
pop
clc
jl
out
fistpl
int3
inc
jl
jne
sbb
mov
inc
icebp
inc
push
repnz
lret
dec
pop
addr16
fisttpl
jg
cwtl
and
rorl
popf
jns
sbbl
pop
pop
in
int3
mov
aas
mov
aam
xchg
stos
xor
imul
push
stos
shr
jns
sub
pop
jl
and
xor
daa
xchg
jge
loopne
jae
jne
ds
and
push
sbb
adc
ss
sahf
in
stc
jle
xor
lret
orb
push
out
push
cwtl
xor
fidivs
mov
pop
xchg
insl
push
xchg
push
mov
outsb
test
subl
movsl
test
mov
enter
sbb
sub
add
ja
sub
imul
mov
out
leave
inc
cmp
lods
in
mov
mov
mov
rcrb
ljmp
in
pop
jle
mov
cmp
fiaddl
cmp
lret
popa
pusha
jl
jmp
mov
movsl
das
mov
stos
aam
sub
fists
jmp
inc
enter
lahf
lds
mov
pushl
jmp
ret
pop
iret
popf
dec
call
mov
mov
lock
pushf
xor
and
adc
xor
pop
insb
sub
adc
jbe
test
lods
fsubl
inc
aam
sbb
in
test
shlb
insb
flds
sbb
inc
add
cmp
imul
cmp
sub
shlb
dec
push
or
push
pop
loop
scas
inc
xchg
jno
mov
mov
pop
arpl
push
jg
cmp
cmp
aad
aam
inc
mov
mov
pop
stc
lret
mov
cld
aas
and
jp
push
pusha
ret
xchg
mov
sahf
cmpsb
ja
cwtl
xor
pusha
mov
adc
jno
mov
in
into
popf
cmp
xchg
insl
pushf
data16
lds
and
mov
addr16
and
mov
adc
stc
mov
pushf
add
int
lret
out
stos
push
push
xchg
jmp
mov
inc
pop
repz
rorb
and
xor
dec
imul
mov
pushf
mov
jmp
add
inc
inc
inc
sub
mov
cmpsl
cmpsl
jo
ret
cld
rorl
imul
sub
leave
popa
adc
sub
push
sub
xchg
and
cmp
dec
pop
adc
push
stc
aam
xor
sti
insb
and
mov
loope
adc
pop
in
int
movsb
mov
sub
sbb
or
clc
outsl
daa
mov
jmp
mov
add
xchg
sbb
insb
pop
mov
leave
add
cwtl
push
fimull
in
push
add
repz
hlt
mov
imul
jbe
mov
mov
dec
cwtl
add
sub
cltd
out
jge
les
movsl
xor
push
mov
pop
fisubl
inc
mov
push
push
jno
jnp
in
enter
lahf
sti
push
and
je
or
ret
add
in
jmp
mov
cltd
test
mov
js
jbe
add
xchg
mov
cltd
or
in
stos
pop
pop
xchg
je
jae
mov
out
in
addr16
sbb
mov
mov
in
jmp
frstor
or
outsl
out
rorl
cmp
subl
lds
jae
clc
mov
xchg
jecxz
into
mov
and
dec
adc
dec
mov
inc
and
mov
xlat
lret
xor
xchg
inc
roll
shlb
fnstcw
add
int3
mov
jge
adc
idivl
testl
hlt
mov
cmp
int
jnp
cmp
ret
adc
fcomps
loopnew
ja
leave
nop
add
jne
shlb
mov
mov
lock
insl
pop
jmp
xchg
imul
pusha
into
fstl
shll
pop
mov
jno
jmp
xchg
aas
ja
popf
lock
add
test
in
sub
sbb
mov
add
add
jne
fwait
jge
insl
loopne
aad
lock
outsb
imul
jmp
sbb
jmp
in
cli
inc
imull
sbb
shrl
leave
es
out
cmp
add
repz
inc
xor
je
stc
pusha
xor
dec
mov
pop
add
rclb
in
mov
imul
mov
iret
sbb
push
jno
jecxz
mov
es
jb
mov
lret
pop
notl
nop
jmp
jb
xchg
in
es
sub
mov
xchg
cli
fimull
iret
add
cmp
dec
icebp
mov
int
dec
aas
mov
xor
adc
push
push
inc
daa
mov
jbe
mov
mov
push
fdivrl
xchg
add
xlat
and
out
sub
rorb
lret
lret
arpl
test
scas
adc
mov
ret
movsl
ret
enter
mov
jae
pusha
cld
icebp
or
movsb
lcall
roll
dec
iret
mov
outsl
nop
jno
imulb
pop
ss
ja
push
add
jne
je
pop
mov
jnp
dec
leave
push
mov
cmp
push
dec
sti
imul
cs
sti
inc
dec
inc
je
jmp
filds
xchg
dec
popf
dec
enter
xor
or
adc
fstl
mov
xchg
cmpsb
push
add
sub
fcmove
lods
outsl
aaa
call
icebp
addr16
or
push
pushf
addr16
jmp
mov
push
sbb
mov
test
cmp
lcall
mov
lock
cli
ficomps
jne
jg
ljmp
xor
ss
push
lods
xchg
xor
and
js
rorb
xchg
sbb
fcmovne
xchg
adc
add
cltd
jle
and
call
icebp
nop
ljmp
stos
insb
adc
jecxz
fs
inc
ja
js
mov
dec
lret
xor
sub
jecxz
arpl
stc
cmp
imul
xchg
sbb
arpl
aas
cmpsb
xchg
addr16
mov
sub
cmp
or
dec
test
jne
pop
adc
ljmp
pop
inc
pop
sbb
scas
xchg
cld
sbb
fucomip
jp
push
sub
xchg
inc
sub
jnp
adc
ja
dec
add
dec
xchg
cld
lahf
mov
jl
and
addb
arpl
mov
mov
mov
xchg
mov
push
add
cmp
in
adcl
js
popf
mov
outsb
pop
push
xor
push
and
test
push
je
mov
stc
sub
icebp
nop
cwtl
jbe
icebp
rcr
lcall
js
push
les
pop
pop
dec
outsb
add
dec
fcmovnb
mov
filds
push
push
or
sub
es
movsb
inc
mov
jge
push
push
insl
in
mov
lret
xor
sub
add
add
loope
and
xor
jnp
adc
nop
mov
shrl
loop
lods
dec
mov
lret
cmp
lods
std
aam
jnp
cmpsb
test
xchg
pop
push
mull
movsl
jnp
or
es
push
out
mov
xlat
movsl
xchg
fcoms
lret
dec
jp
rcr
jle
inc
int
outsl
jp
mov
jno
insb
popf
xchg
les
xchg
fnstsw
nop
fwait
movsb
cmc
mov
push
inc
xor
add
shlb
xor
mov
scas
push
xor
mov
ret
cmp
mov
xchg
dec
sub
xor
or
inc
in
mov
push
mov
std
pop
gs
in
addb
fidivl
sti
add
push
sub
push
mov
pop
je
clc
adc
pop
jne
jmp
scas
jo
in
std
add
jb
xchg
jg
loope
cmp
mov
xchg
dec
je
cmc
sub
mov
mov
mov
xchg
stos
lds
and
xchg
mov
iret
sub
out
inc
cmp
pusha
cmpsb
enter
cltd
ja
cli
popf
or
cs
ja
cld
mov
push
orl
jae
movsl
jns
out
mov
push
dec
cmp
dec
arpl
push
mov
repz
jns
lock
mov
push
int
push
dec
ja
push
popf
imul
pop
outsl
scas
inc
sbb
xor
inc
xor
das
shll
inc
notb
sub
int3
sub
push
sub
fwait
adc
lods
cmp
rcll
rcrb
lret
push
mov
cmp
pop
or
jnp
and
mov
or
es
mov
xchg
push
rorb
dec
les
js
mov
mov
out
fisttps
add
outsb
bnd
cmp
lea
xchg
call
outsl
jnp
add
jle
aas
mov
adc
fbstp
mov
in
jecxz
repz
popa
sub
mov
and
mov
inc
lret
test
jno
jg
mov
mov
push
icebp
imul
iret
lcall
scas
lods
lods
ja
jp
dec
aaa
mov
or
or
adc
adc
cmp
xchg
clc
fpatan
fwait
ret
shll
and
dec
xor
lea
dec
push
xchg
stos
jmp
mov
xchg
push
push
test
fstpl
cmpsl
cmp
pop
and
jecxz
and
xor
cmp
repnz
mov
mov
imull
fs
std
fstl
mov
outsb
jbe
inc
inc
cs
int
mov
or
or
push
lock
pop
and
pop
pop
xchg
bound
jge
mov
mov
mov
repnz
mov
pop
or
lahf
ljmp
xorb
mov
inc
sub
mov
xchg
sbb
lds
int3
addb
or
sbb
add
pusha
lds
lahf
stos
mov
int3
scas
mov
movsb
in
mov
push
mov
dec
jmp
pop
mov
mov
adc
stc
push
sahf
lcall
pusha
cs
fldt
cmpb
xor
sbb
adcb
xacquire
xor
stos
mov
mov
cltd
into
push
pop
mov
cltd
cli
imul
sub
jecxz
in
fwait
pusha
sbb
pop
cmpsb
in
xor
lahf
pushf
and
and
outsl
fwait
imul
dec
lods
decl
lock
test
xor
fstp
filds
lods
jns
jge
push
mov
out
fistpl
gs
sahf
clc
stos
cmc
popa
pop
leave
sub
add
inc
adc
pop
jg
mov
aas
pop
das
cmp
inc
std
pop
and
lock
icebp
int
sub
xor
insl
mov
and
jmp
dec
jmp
jno
mulb
mov
shrb
lcall
int
dec
xchg
mov
clc
jmp
pop
lods
mov
imul
dec
inc
stos
xor
push
dec
jnp
cmpsb
aam
jo
psubb
cltd
repz
mov
sub
add
jecxz
movsb
setl
mov
ret
mov
xor
sub
dec
into
lock
mov
ja
call
sbbb
pop
push
mov
cwtd
call
leave
mul
lea
mov
cwtl
cld
xchg
std
and
js
addr16
lea
lahf
aas
jno
fstpt
test
stos
xor
rolb
lcall
test
data16
sub
pop
cli
stc
push
imul
jae
mov
xchg
ret
dec
mulb
int
rcrl
jb
idivb
pop
insb
out
das
or
xor
mov
add
test
es
scas
and
push
cmp
pop
test
iret
dec
adc
sub
loope
mov
sbb
popa
xchg
lret
movsl
data16
in
mov
xchg
in
out
add
in
popa
xor
inc
lds
push
xchg
ljmp
pop
adc
cmpsb
mov
xchg
popf
fdivr
mov
inc
lea
jae
iret
test
pop
pushf
lret
add
push
add
scas
cs
dec
jle
xchg
aaa
jle
ret
push
cmpsl
adc
jbe
adc
int3
stos
mov
jo
arpl
jne
xchg
dec
sahf
xchg
notb
rcrl
push
mov
pop
cmpsb
mov
jecxz
notb
inc
lds
inc
ja
mov
and
lret
mov
testb
mov
enter
fwait
adc
sti
and
in
into
xor
cltd
popa
sbb
pop
test
mov
aam
mov
mov
fsubl
test
lret
inc
call
popa
mov
xchg
clc
out
test
sub
xchg
xchg
xor
lcall
or
fisubl
jnp
test
std
add
pop
mov
mov
test
jge
xchg
in
pusha
push
push
or
ja
xor
in
xchg
sub
push
xchg
into
lods
and
xor
cmpsl
sbb
addr16
fwait
js
jle
shll
xchg
lea
sub
xor
scas
pop
sub
cwtl
or
les
lds
mov
cmpsl
push
cmpsb
mov
inc
mov
clc
sti
jl
mov
ret
test
xchg
arpl
lret
inc
jae
faddl
dec
dec
add
icebp
test
xor
in
cmp
mov
repz
inc
jbe
shr
cmpsl
pop
pop
imul
data16
lea
js
int3
fdivp
lahf
scas
push
jmp
mov
adc
fst
mov
clc
jp
cmp
push
aam
xor
fcmovnbe
pop
lahf
xchg
mov
lret
mov
mov
inc
or
dec
out
mov
sbb
push
pop
les
daa
mov
mov
fcomps
sbb
sbb
js
mov
pop
cmp
jne
jo
sub
lcall
push
stos
rcl
dec
adc
pop
lret
jb
cwtl
pop
rorl
or
addb
jg
mov
cmpsl
mov
int
stos
jno
ret
icebp
add
dec
mov
imul
ds
xlat
loop
rorb
jmp
push
insl
inc
xor
hlt
leave
push
mov
xlat
push
hlt
data16
pop
sbbb
mov
push
test
or
jmp
mov
mov
lcall
jle
lahf
fmull
and
sbb
jecxz
jecxz
sub
test
mov
in
aam
adc
fistpl
jmp
sbb
js
sbb
ror
inc
decb
cmp
sti
sbb
ss
arpl
and
iret
xor
xchg
mov
sahf
imul
int3
scas
mov
out
and
repz
add
jbe
and
daa
sbb
mov
imul
mov
loopne
push
insb
insl
and
jp
sbb
in
or
rcrl
repnz
xor
or
and
jns
mov
xchg
cmp
jbe
jae
int3
push
rcr
cwtl
outsl
js
sub
fiaddl
sbb
mov
cmp
addb
mov
ficoml
mov
fadds
aad
jg
jp
xor
dec
and
fldcw
sub
mov
loop
cmp
xlat
scas
out
cmp
cmc
shrl
xchg
fstpt
inc
scas
ds
pop
jl
mov
mov
sbb
pusha
rorl
mov
sub
mov
fcoml
inc
fs
ret
test
cmp
mov
aaa
rcrb
xlat
enter
pop
fisttpl
pushf
insl
push
lods
arpl
dec
add
mov
sub
add
jbe
or
pop
mov
data16
imul
jge
inc
or
jge
xchg
jne
push
cld
and
movntq
ret
push
push
lods
ret
scas
mov
scas
inc
cmp
aaa
stc
lea
popf
fadds
je
les
lock
mov
out
sbb
and
mov
je
jnp
mov
jbe
test
imul
mov
and
mov
mov
push
xor
fisttpll
mov
inc
pop
cld
add
push
sbb
pop
lods
dec
sub
les
ret
jnp
loop
fisttpll
ret
inc
rol
mov
test
iret
test
cmpsl
in
sbb
pop
ljmp
stos
stos
sahf
mov
aad
shl
mov
adc
xor
dec
repnz
mov
inc
pop
icebp
cmp
loopne
jne
push
cmp
dec
jl
push
or
inc
ss
or
ror
rcl
imul
sub
mov
dec
in
add
push
sti
test
jl
sbb
xchg
jg
int3
xchg
mov
jb
rol
push
rcrl
adc
call
out
inc
in
xchg
xor
pop
sub
mov
fsubrs
xor
adc
jg
in
push
and
pop
sub
pushf
or
mov
xor
es
es
or
mov
enter
add
loopne
cmpsl
sub
mov
addl
pop
mov
pusha
jecxz
sarb
addr16
insb
cltd
cs
or
dec
movsl
shl
andb
jb
pop
dec
xchg
inc
xchg
mov
push
pushf
insb
mov
mov
inc
xchg
lret
stos
movsb
lds
imul
add
icebp
repnz
sarb
mov
jl
lods
outsb
dec
movsb
nop
mov
jmp
divl
stc
nop
sub
and
cltd
mov
jno
mov
int3
popa
cmpsl
add
push
xchg
sbb
lea
push
jne
cltd
mov
fs
test
jnp
push
ret
inc
pop
lahf
cmpsb
dec
imul
bound
sarb
sbb
lods
pop
stc
ret
push
or
pop
jecxz
outsb
into
cmp
mov
pop
stos
sub
push
ljmp
or
sbb
sbb
fstp
mov
sub
cmc
dec
arpl
jg
fisubrs
loopne
rorb
push
xchg
in
and
sub
sarb
je
xchg
jmp
cmp
mov
dec
popf
and
dec
lahf
jo
inc
cmpsb
and
test
push
or
icebp
sahf
dec
cmp
and
in
dec
push
xchg
adc
or
cmpsb
or
cltd
fstpt
cmp
fbld
push
mov
movsl
jae
cltd
add
push
lods
add
aas
sarb
vpcmpgtb
les
test
add
xchg
sub
jb
imul
adc
shll
cli
fs
dec
and
das
lds
mov
mov
jl
icebp
jne
fstpl
aad
dec
ds
push
xchg
sti
orb
mov
jns
push
mov
jl
sbb
fbstp
dec
mov
sti
adc
arpl
xor
ficoms
std
mov
loop
lock
xchg
mov
inc
sbb
fistps
cmp
rorl
push
loop
ret
jno
fptan
push
arpl
cwtl
ret
cld
subb
mov
xchg
adc
pushf
jg
xchg
shl
or
adc
mov
mov
jle
xchg
pop
xchg
bound
pop
mov
mov
mov
jle
xor
pushf
aas
shlb
and
pushf
adcl
jg
rclb
push
jae
imul
rolb
jae
movsb
pusha
dec
lods
add
orb
clc
push
les
inc
outsb
mov
loope
mov
test
mov
mov
ljmp
inc
ja
in
loopne
xor
dec
aaa
pop
xor
mov
out
aas
out
mov
cwtl
gs
dec
jmp
addr16
repnz
xchg
arpl
dec
inc
fisttpll
cmp
jge
mov
xor
iret
movsl
or
mov
sbb
pop
fcmovnu
cmpsl
inc
shrl
aam
fidivl
mov
adc
mov
ja
test
lea
scas
pop
test
pusha
pop
add
test
fdivs
add
pop
imul
aam
or
jg
sbb
iret
movsl
inc
mov
xchg
or
aas
inc
loop
add
sbb
pop
clc
sbb
ds
mov
stc
out
xor
sub
pop
inc
not
popf
cmp
aad
xchg
xor
aam
test
cmp
jno
xchg
test
in
mov
jl
mov
xor
repz
fildl
pop
mov
add
dec
idivl
iret
xchg
aaa
dec
xchg
js
mov
cmp
cmp
jo
and
push
xchg
bswap
lods
scas
dec
divb
add
ror
xchg
jo
out
loope
test
push
xlat
fimuls
jge
sbb
cmc
push
data16
rsqrtps
das
into
aas
adc
movsb
sbb
mov
and
nop
push
filds
pop
and
sbb
test
jno
sbb
mov
sbb
lods
mov
jp
imul
xchg
push
ret
cld
jg
push
pop
cmp
cwtl
mov
push
adc
xchg
sbb
repz
adc
insb
popf
mov
insl
test
orl
push
cmp
push
mov
xor
mov
jle
ljmp
sbbb
nop
repnz
mov
cmc
data16
cmp
rolb
xlat
pushf
pop
adc
add
mov
iret
dec
lds
outsl
mov
xchg
rol
popf
loope
xor
into
aaa
call
mov
cwtl
xor
sbb
call
aad
or
sub
int
jmp
loop
xor
ret
push
sbb
dec
ret
sbb
fs
loope
sbb
xor
test
lahf
sbb
cmp
pop
sub
pop
and
inc
test
add
jge
cwtl
dec
sahf
fsub
repnz
pop
data16
or
ja
stc
aad
xor
dec
pop
sub
jae
push
mov
inc
addr16
sahf
jne
lea
ret
cmp
mov
xchg
pop
xor
bnd
xor
ss
int3
mov
inc
push
jb
push
cmp
fadd
sub
and
dec
icebp
test
dec
dec
gs
xor
sbb
orb
xchg
scas
fistpll
out
push
sbb
ret
fadd
ljmp
loope
mov
jmp
lea
sub
xchg
dec
jp
std
fldt
mov
cmc
push
ljmp
or
pushf
jne
mov
mov
jns
int
js
dec
stos
ja
insb
mov
loopne
enter
mov
add
lods
insl
std
sub
or
and
adc
stos
fst
mov
sub
aam
cmp
aas
into
and
xor
or
adc
das
cmc
xor
xor
int3
mov
dec
sbb
ljmp
arpl
pop
aas
inc
inc
mov
push
xor
xchg
xor
push
xor
imul
pop
fmul
and
xlat
negb
leave
jmp
xchg
push
push
add
ss
or
jmp
mov
ret
mov
lret
inc
je
daa
aaa
lret
fstps
inc
sbb
xor
cltd
mov
adc
rcl
xchg
inc
adcl
and
in
in
push
add
xor
and
and
xor
adc
jle
fadds
leave
popf
add
ret
xor
adc
stc
cmpsl
scas
sbb
sub
lea
test
daa
cmc
push
jge
add
aad
and
scas
gs
push
popa
xor
fadds
inc
sti
sar
cltd
test
and
cs
jmp
lods
jle
cli
add
cmp
xchg
push
push
mov
adc
xor
imul
xchg
mov
jnp
ret
jle
adc
push
ret
test
cmpsl
push
outsb
adc
mov
jecxz
or
mov
mov
mov
cmp
jle
popa
or
inc
or
push
decb
aam
inc
jb
out
or
jbe
aaa
out
push
dec
imul
mov
ficompl
jmp
mov
pop
das
pushf
pop
sub
int3
mov
mov
ret
mov
fstpl
pop
pop
cmpsl
jmp
int3
insb
xor
jmp
cmp
gs
sub
gs
jo
mov
ja,pt
xor
xchg
bound
test
cli
fildl
inc
test
lahf
icebp
in
xchg
std
jb
inc
int3
xchg
pop
in
and
mov
mov
mov
adc
cs
movsb
aaa
fisttpll
dec
out
xorl
test
push
push
and
icebp
and
pop
ja
scas
outsb
jne,pn
xor
stos
rolb
and
fwait
mov
test
icebp
cmpsl
inc
inc
xchg
cld
pop
in
inc
jae
cltd
and
cld
pusha
addr16
mov
mov
mov
mov
test
pop
icebp
das
and
inc
jmp
push
stos
push
mov
pop
test
sti
pop
je
mov
inc
adc
cld
cmpsl
jg
cmp
call
jge
push
jmp
dec
in
mov
stc
jno
mov
or
sub
bound
pop
jae
jecxz
sub
lcall
cmp
cli
or
pop
out
cmp
sbbb
and
and
push
sti
add
jno
aam
nop
daa
out
mov
push
push
xor
mov
lret
lea
test
xor
aad
mov
cmpsb
insb
int
mov
out
or
pop
mov
mov
test
fidivrl
push
pop
aad
and
inc
cltd
pop
icebp
ret
call
or
or
call
loop
fisttps
pop
mov
fwait
ds
test
inc
xchg
je
or
stos
movsb
loop
or
cmp
mov
cmc
or
cli
mov
mov
inc
xchg
mov
hlt
repz
imul
push
addb
xchg
inc
push
jg
fnsave
sub
xor
xor
stos
jo
sbb
mov
xchg
lcall
xor
nop
sahf
or
fstpt
inc
divl
cmp
sahf
shll
insl
xchg
mov
xor
pop
xor
sbb
je
out
addr16
pop
popa
pop
int3
je
aam
inc
mov
jne
dec
jae
cmp
into
mov
xor
adc
test
and
call
iret
push
dec
call
fildl
pop
insb
sbb
leave
out
imul
scas
lcall
xor
dec
adc
xchg
lahf
pop
es
fwait
cwtl
pop
inc
push
imul
or
cmp
push
and
and
popf
imul
call
sbb
popa
sbb
repz
nop
or
cmp
mov
addr16
xchg
jns
push
loope
addr16
fdivr
enter
jnp
nop
cmp
sub
and
std
lods
in
es
imul
lock
xchg
std
or
cmp
lods
lret
push
ljmp
mov
mov
xor
dec
fidivs
test
xchg
dec
mov
cmc
aas
mov
sbbb
jo
jns
cmp
mov
mov
jg
insb
in
movsb
ja
bound
sbb
pushf
fists
shrl
stc
cmp
add
test
jmp
jnp
add
pop
pushf
pop
mov
push
data16
lea
cmp
js
das
pop
in
es
xchg
ja
xchg
cli
repz
cmp
mov
xchg
push
das
int
out
clc
dec
es
test
add
mov
jecxz
test
fidivl
into
cmp
test
sbb
adc
mov
xor
pop
scas
mov
fstpt
cltd
enter
xor
mov
xor
inc
inc
sbb
popa
daa
std
mov
in
adc
cltd
jp
shlb
sti
nop
mulb
nop
xlat
xchg
pop
mov
mov
lea
jno
mov
adc
xchg
in
mov
loopne
push
pop
jle
push
mov
shr
pusha
dec
jnp
pop
and
mov
ja
push
addb
outsl
dec
jns
scas
pop
std
cmpsb
in
mulb
xor
mov
popa
jne
fsts
xlat
les
loope
dec
inc
movsl
les
pop
out
push
in
add
sbb
mov
cli
and
cli
pusha
push
inc
int3
fs
rorb
jge
jb
sbb
add
xchg
ficompl
cmpsb
sub
popf
idivl
out
sub
inc
or
pop
mov
lret
hlt
mov
ret
or
mov
andb
mov
jbe
xlat
lahf
lret
rorb
jo
fdivrl
pop
push
in
adc
ja
ja
adc
les
mov
je
jl
and
cmpsb
data16
rcrl
xor
lahf
push
aas
inc
into
xchg
add
leave
cmp
jbe
loope
mov
or
sbb
int3
xchg
sbb
jb
js
adc
lods
sbb
sbb
xlat
mov
add
movsl
mov
js
jmp
mov
sub
inc
sub
outsl
mov
out
es
shrb
adc
dec
adc
ljmp
ret
cmc
mov
fists
lods
test
fs
mov
bound
mov
add
dec
ljmp
sbb
rcll
and
jns
mov
sub
sti
push
cmc
call
dec
std
sahf
cmp
xchg
and
shrb
idivb
movd
cmc
xlat
mov
inc
push
push
add
in
imul
jmp
jbe
in
and
outsb
lds
pop
xor
inc
mov
inc
fnstcw
fmuls
mov
cld
adc
push
mov
jae
pop
pop
in
lret
stos
sbb
push
scas
rcrb
xlat
jns
mov
addl
pop
and
dec
adc
repnz
pop
repnz
jle
ret
bound
lock
sahf
jne
lods
nop
inc
stc
mov
cmpsl
aaa
xor
push
adc
mov
jbe
leave
adc
mov
jns
sub
cltd
rcll
inc
ja
lcall
add
je
xor
sub
sbb
int
jmp
adc
add
mov
pop
jae
jb
mov
cmpsb
test
fistps
mov
test
fisubl
out
adc
push
jbe
push
hlt
pop
pop
into
outsl
test
cmp
cwtl
mov
dec
insl
mov
xchg
cli
pop
test
sub
mov
les
iret
sbb
into
aaa
jb
pop
xor
sti
aaa
mov
pop
cwtl
and
scas
fwait
mov
hlt
into
inc
jl
repnz
clc
dec
xchg
fsubrl
flds
ss
mov
jbe
addr16
xor
hlt
xlat
mov
xchg
xchg
sbb
cmp
fs
aaa
pop
cmp
ja
sbb
xchg
mov
mov
out
mov
xor
pop
cld
cmpsb
sahf
lret
lret
cltd
push
inc
test
jo
sbb
mov
add
mov
fucom
sti
pop
or
lock
test
add
sbb
add
cwtl
jo
add
push
fs
je
lret
imul
inc
scas
mov
lock
popf
inc
jle
mov
and
aaa
adc
sbb
mov
or
idivl
dec
jl
pop
cmp
inc
adc
sub
sbbb
movsb
call
addr16
dec
mov
pop
adc
push
pop
fs
cs
fs
xchg
push
add
arpl
movsb
loopne
mov
lods
jbe
test
push
stos
and
inc
push
mov
dec
adc
sub
jbe
fldenv
cmc
push
out
pusha
rolb
fyl2x
dec
pop
insb
push
jb
popf
and
mov
icebp
cwtl
dec
push
loopne
test
sti
push
mov
inc
dec
xchg
xchg
orl
cmp
sub
dec
pop
test
outsl
adc
or
xor
xor
adc
out
pop
aad
adc
inc
dec
jo
ja
repz
jg
out
cs
jl
call
jnp
adc
and
cmpsl
xor
shl
out
xor
mov
push
mov
in
sbb
sbb
xchg
hlt
pop
out
sub
mov
lahf
cs
lock
popf
std
imul
dec
incb
xor
sbb
inc
xchg
push
lcall
neg
shl
test
push
movsl
sub
mov
clc
mov
adc
aaa
jecxz
hlt
imul
mov
pop
lretw
mov
ja
mov
ja
jmp
sub
pushf
xor
in
fcmove
dec
cmp
subl
shl
divb
repz
in
insb
jecxz
or
adc
cmp
xchg
pop
jecxz
out
jmp
mov
scas
mov
aaa
out
sahf
pop
add
sbb
addr16
es
mov
cmpsb
jo
sahf
cmp
dec
sub
fs
mov
cli
mov
sahf
call
inc
jl
stos
xchg
add
fdivl
sbb
sbb
cltd
jae
and
and
sahf
ret
push
int3
add
fsubrl
test
shrb
sub
jge
jo
pop
loope
xchg
cli
imul
or
fbld
addb
sbb
mov
insb
mov
inc
mov
shl
les
jnp
test
cs
in
ret
cwtl
pop
test
shrb
mov
jns
xor
push
outsb
and
dec
into
dec
outsl
lods
mov
jb
inc
mov
pop
mov
sbb
imul
mov
pop
sbb
int3
negl
mov
mov
popl
and
ds
flds
mov
adc
cmc
jb
sahf
adc
mov
sbb
mov
jmp
mov
add
fmull
mov
loopne
bound
pop
ret
stos
jp
mov
push
push
andl
sbb
fldl
lods
scas
pusha
mov
mov
xor
lds
movsb
adc
arpl
nop
jecxz
push
or
nop
dec
fidivs
iret
test
add
lods
mov
in
inc
jp
push
jne
jge
int
dec
inc
dec
inc
loopne
leave
aad
sahf
sbbl
and
das
cs
mov
pop
sbb
ja
test
negl
imul
jecxz
aam
fcmovu
out
outsl
imul
mov
das
push
mov
or
mov
or
sbb
xchg
adc
jp
inc
test
sub
mov
xchg
xchg
into
mov
test
pop
cmpsl
jnp
fstp
ss
inc
dec
and
add
in
mov
mov
pop
enter
pmaxub
inc
add
xchg
fcom
clc
inc
xor
fcmovne
addr16
shrl
dec
scas
cmp
and
dec
mov
lahf
mov
mov
jbe
lods
aam
sbb
outsb
rclb
sbbb
cmp
push
cmp
loop
push
ret
mov
test
xor
pop
push
mov
and
hlt
dec
in
sbb
pop
ret
adc
push
dec
pop
ret
xor
out
loope
adc
cmpsb
popa
or
cmp
test
add
xorb
sbb
mov
es
data16
cmp
test
dec
add
nop
addr16
or
ja
pop
aas
imul
xlat
inc
sbbb
push
add
movsb
sti
outsl
inc
xchg
lods
xchg
and
adc
or
ds
sub
pop
call
pop
imul
push
inc
xor
pushf
sub
vpextrw
movsb
sti
jno
inc
aad
inc
loope
add
jne
sbb
imul
pop
mov
shll
cmpsb
test
sbb
mov
in
xlat
into
mov
mov
mov
pop
daa
testb
test
aad
mov
ljmp
aaa
stos
pxor
lds
lock
ss
push
test
xchg
ljmp
push
dec
es
nop
mov
dec
js
xor
sbb
push
fmul
pop
call
pop
mov
mov
insb
repz
insb
enter
pop
cld
aaa
add
std
and
outsl
pop
negl
xchg
pop
or
mov
addr16
out
jbe
xchg
sti
insl
pop
cmp
iret
xchg
out
dec
cmc
sbb
je
jnp
dec
enter
test
add
dec
or
mov
mul
xor
incb
sub
cmp
stc
add
addl
pop
mul
xchg
addr16
cltd
xchg
out
xchg
test
incb
js
mov
cli
in
xor
push
push
jg
lock
sbb
push
out
insl
mulb
ljmp
cmp
sub
or
and
mov
jnp
inc
fs
mov
sbb
loopne
mov
sub
cmp
fsts
and
mov
sub
js
lret
push
fcomp
or
repnz
out
pop
out
and
in
cmp
out
pop
rolb
cs
aas
xor
mov
leave
leave
xchg
mov
fldl2t
add
adc
lds
stos
mov
push
lock
test
mov
sysenter
or
orb
cmp
outsl
sub
xor
mov
mov
lods
dec
mov
xor
push
dec
loop
mov
or
adc
loopne
xor
loopne
fidivl
in
push
or
xorb
xchg
mov
shrl
ja
and
ret
daa
inc
sub
mov
in
scas
lds
setle
xor
dec
test
adc
cwtl
push
sti
es
sub
mov
mov
decb
inc
iret
mov
or
mov
leave
mov
sbb
sbb
cld
jne
push
sbb
arpl
imul
call
mov
adc
push
inc
push
clc
scas
push
bnd
lds
jmp
xchg
hlt
repz
andnps
insb
mov
movsb
jae
jne
imul
adc
cld
xchg
or
ja
out
xor
adc
test
sarb
xchg
sti
les
push
pop
test
jne
movntps
mov
addr16
aam
xchg
lret
negl
jne
sbb
mov
xchg
jne
gs
xchg
in
or
push
movsl
cmp
mov
nop
cmp
push
sbb
sbb
xor
adc
loope
sbb
insb
call
mov
data16
cmpsl
repnz
outsb
stos
ret
jbe
aaa
mov
inc
lock
incb
push
push
inc
jbe
jnp
inc
push
mov
imul
push
das
movsl
jge
clc
mov
test
int3
push
gs
cmpsl
pop
je
push
xor
push
and
cmpsb
xchg
aam
stos
idivl
popa
fucom
int3
lock
sbb
push
sbb
enter
bound
pop
or
inc
in
pop
jge
test
lret
xor
mov
mov
sbb
jl
or
xchg
mov
lahf
fs
negb
jo
lret
orb
sbb
and
jge
xor
xchg
out
push
loope
add
out
add
fwait
aam
iret
sub
xor
xlat
ja
aad
mov
dec
mov
iret
imul
push
and
lcall
jbe
into
jno
and
sbb
imul
arpl
int
dec
jne
leave
cmp
adc
pop
fidivs
jle
mov
adc
mov
sub
fwait
push
sarl
repz
jne
jge
psrld
pop
jmp
sub
push
xor
mov
sahf
push
mov
mov
cltd
in
jge
loopne
aad
fcom
lret
je
xchg
mov
xlat
push
out
mov
cltd
cli
xchg
dec
nop
loope
stos
bound
sub
mov
icebp
sub
push
add
ret
mov
insb
add
lds
fidivl
sub
xchg
xchg
push
dec
xor
loopne
add
push
xchg
cmpl
out
js
cmp
mov
mov
fdivl
imul
pop
pop
dec
aaa
loopne
jl
cmc
push
mov
cmpsl
aad
cs
fstps
add
lret
cltd
pop
ljmp
inc
xchg
push
xor
mov
test
dec
in
int
int3
jno
cld
lret
sahf
fs
or
popa
inc
mov
mov
push
mov
sub
pop
cwtl
jne
insl
ljmp
xchg
idiv
std
int3
stos
inc
andb
or
lods
jp
rcl
je
cmp
insl
cmp
or
mov
cmp
pusha
or
inc
adc
pop
jbe
pusha
adc
in
iret
cli
scas
fcoms
mov
in
cmpsl
xchg
in
inc
sub
and
add
sbb
popa
sti
aad
outsl
cmp
nop
pop
rclb
inc
sub
jg
adc
loopew
aaa
xchg
mov
addr16
outsb
and
int
push
lock
inc
test
mov
popf
xchg
push
das
je
int3
shll
mov
xor
cltd
out
or
ljmp
push
cmp
inc
and
adc
push
shrl
adc
ds
cmp
push
data16
imulb
mov
cmp
pop
clc
or
lds
cld
bound
rcrb
pop
cmp
and
lahf
aas
pusha
movsl
hlt
call
rorl
xor
mov
rdpmc
push
xor
mov
orps
jecxz
xor
aas
jmp
adc
popa
push
rsqrtps
cld
lgs
xchg
ljmp
sahf
into
sub
mov
std
shl
int3
das
enter
or
jl
into
mov
or
jns
movsb
es
orl
dec
scas
scas
xchg
aad
mov
lahf
sbb
in
pushf
call
sub
shrl
dec
outsb
repnz
pop
adc
xchg
sub
jnp
add
les
push
in
shlb
mov
fistpl
add
dec
adc
in
sarl
xchg
ja
insl
mov
jbe
imul
cmpsb
add
out
lods
inc
xchg
mov
push
les
out
scas
arpl
xorl
or
or
cmp
shl
inc
jno
cmp
and
jae
pop
pop
xor
sbb
mov
mov
xchg
scas
aaa
dec
outsb
sbb
call
cltd
xor
lock
dec
xchg
or
insl
sbb
adcb
scas
fwait
push
jp
jecxz
in
cwtl
push
arpl
loopne
setle
mov
clc
inc
iret
push
scas
sbb
mov
adc
test
cwtl
lods
pop
std
cli
flds
dec
imul
loope
or
mov
cmpsb
mov
fsubrp
pop
mov
xchg
push
inc
and
pop
lea
mov
je
dec
stos
xor
and
mov
mov
ror
aad
sub
cmp
inc
inc
mov
xor
std
dec
mov
addr16
push
xchg
dec
xchg
xor
inc
in
push
push
in
push
fwait
mov
push
pop
inc
repz
sub
aaa
pop
in
mov
rcl
dec
repnz
push
sti
and
imulb
or
add
xchg
loope
pushf
dec
rorl
push
dec
add
sarb
or
mov
and
jns
pop
sub
out
pop
jo
data16
mov
pop
jecxz
sti
cmp
fidivl
je
jne
jg
cmpsl
xchg
inc
mov
jne
pop
stos
mov
in
pop
fstpt
test
arpl
add
ss
mov
mov
dec
mov
jmp
jg
shl
push
mov
js
call
movsb
mov
cmp
repnz
gs
repz
mov
or
mov
cmp
xor
rcrb
jle
sbb
popf
sub
mov
pop
gs
hlt
push
adcl
and
pop
scas
rorb
xor
xor
mov
arpl
inc
inc
loop
leave
out
inc
into
mov
arpl
jae
andb
lds
xchg
rclb
pushf
decl
push
fistps
sub
dec
mov
sub
mov
lock
xor
and
movb
and
and
sahf
ds
bound
xlat
mov
xor
andb
sub
lds
ja
xor
xor
ret
pop
fs
out
dec
cmp
jl
sub
out
or
in
in
add
outsl
push
add
sbb
out
call
ja
push
je
lods
xlat
sub
nop
aad
cmp
aam
iret
in
pop
adc
cmp
xor
test
neg
and
mov
in
push
out
hlt
inc
pop
test
mov
out
mov
cmp
mov
cmp
adc
push
dec
insl
mov
or
mov
or
lea
repz
mov
stos
icebp
js
add
mov
in
jnp
sbb
and
vmovss
dec
sbb
cld
stc
cld
xchg
popa
cltd
insb
mov
mov
into
scas
pop
mov
adc
add
inc
xor
stos
add
es
and
cmp
loopne
sbb
push
dec
mov
mov
lahf
mov
roll
fsubp
mov
jno
push
push
std
jb
jbe
cmp
sbb
cmc
and
push
je
clc
fnstsw
imul
mov
xor
or
repnz
inc
xor
push
test
jb
mov
popa
xor
jmp
ds
mov
jp
popf
outsb
mov
fldenv
les
lods
out
fcmovne
lds
add
inc
bound
leave
jns
pop
or
arpl
inc
sahf
mov
xchg
cmp
jecxz
subb
mov
pop
sbb
mov
mov
movsb
jecxz
lds
leave
mov
fcomp
lahf
add
jo
or
ds
jne
nop
jp
sbb
shll
orb
adc
addl
ret
or
inc
pop
adc
jl
daa
pop
sbb
or
sbb
and
dec
fidivrl
out
mov
into
mov
in
mov
cmp
outsb
pop
ret
mov
scas
mov
sbb
jl
dec
jp
and
adc
mov
pop
popf
cwtl
push
or
daa
flds
push
je
insl
jmp
rorl
dec
cmpsb
sbb
push
dec
push
mov
jecxz
jg
loop
imul
clc
xchg
cmp
int3
aam
loope
cmp
idivl
jns
push
stos
rcrb
mov
or
push
mov
ficompl
push
sub
jnp
push
loop
push
or
cmp
mov
das
shlb
fdiv
movsl
in
cmpsb
or
fcmovne
mov
add
addr16
cltd
daa
pushf
pusha
mov
xchg
mov
mov
and
xchg
and
mov
or
out
stc
cmpsl
imul
cmpl
mov
and
je,pn
or
out
rcl
cwtl
int3
cli
jae
repnz
lods
xor
mov
mov
lods
push
enter
lea
xor
add
ds
cmc
cmp
das
mov
je
sbb
in
sub
cmp
sub
aas
dec
jo
add
jge
loope
push
sbbl
jne
push
scas
das
fmulp
test
mull
or
fcmove
rolb
mov
mov
sti
cmpsb
sbb
addr16
sbb
xchg
addr16
out
into
dec
inc
rorb
dec
sub
mov
popf
inc
and
and
pop
movsl
insl
mov
insb
push
push
lahf
push
adc
test
ja
mov
pop
jmp
outsb
jmp
xor
ds
rclb
mov
lds
pop
mov
data16
or
lahf
push
popf
push
std
test
mov
jnp
push
sbb
rcrb
mov
sub
movsb
sbb
and
push
js
fwait
mov
outsl
mov
fidivrs
jno
xor
stc
clc
pusha
test
sti
mov
sahf
gs
stos
mov
cmovns
clc
lret
add
imul
mov
push
cwtl
int
cwtl
out
and
gs
push
mov
adc
inc
or
cmpsl
sbb
testl
mov
test
orb
xchg
push
inc
mov
lods
pop
mov
into
or
insb
push
jg
mov
pusha
arpl
pop
push
lods
inc
xchg
pop
sbb
dec
mov
in
sub
and
mov
mov
mov
jae
mov
pop
add
stc
adc
or
and
add
sub
fildll
cmpb
daa
push
cmovb
jg
fs
push
xchg
xchg
sbb
inc
out
scas
out
xor
add
jmp
xlat
popa
sub
incb
push
jae
or
push
sub
mov
jle
mov
das
sub
fs
sbb
movsl
in
dec
pusha
int3
and
adc
ds
pop
js
out
dec
mov
push
daa
in
mov
in
addr16
movsl
add
sub
out
repz
or
cld
jge
sbb
sbb
jmp
inc
cmc
popa
sarb
and
pop
cs
pop
dec
inc
or
cmpsb
xchg
js
ss
cmp
cmp
xchg
xor
or
test
dec
lcall
movsb
mov
jmp
repnz
sbb
and
sbb
pusha
adc
stos
cmp
adc
sub
mov
lret
cld
dec
imul
in
sub
mov
in
and
inc
dec
inc
xchg
pop
inc
lret
sbb
pop
jge
xor
pop
jle
push
xchg
leave
aam
xlat
adc
jmp
addr16
popf
and
pushf
leave
mov
pop
mov
mov
sti
jmp
lock
cld
jno
and
les
loope
arpl
inc
imul
xor
dec
outsl
mov
mov
lds
mov
nop
mov
mov
xchg
cwtl
scas
fidivs
and
xchg
sarl
jo
jo
push
jmp
test
adc
filds
xorb
loope
cwtl
pusha
jmp
sub
data16
xchg
mov
pop
inc
inc
fwait
mov
or
jo
or
dec
or
js
int3
cmp
icebp
gs
inc
add
loop
out
adc
repz
adc
pop
rcll
cld
pushf
popa
cmp
arpl
enter
out
add
es
sbb
push
push
imul
adcl
jnp
inc
loope
pop
shrb
sbb
xor
insb
sahf
adc
pop
roll
mov
bound
out
push
sti
pushf
icebp
or
outsb
fnsave
pop
push
negl
ja
jo
mov
fstl
adc
mov
or
cmp
inc
outsb
call
sub
enter
jno
sub
and
xor
jecxz
xorb
push
repnz
push
mov
sahf
out
push
repnz
mov
lret
jo
cmp
pop
push
int
pop
and
aaa
das
mov
pop
aad
pop
and
sbb
mov
out
arpl
jg
dec
mov
ljmp
scas
mov
lahf
sbb
rcll
movsl
inc
leavew
adc
cli
loopne
or
mov
dec
pop
es
mov
addb
inc
mov
movsl
cmp
sub
sbb
repz
out
shlb
loope
popa
ljmp
jae
mov
mov
adcb
pop
cmp
data16
out
popf
mov
std
mov
enter
insl
pop
test
jl
jbe
and
sbb
outsb
mov
loopne
dec
ret
or
flds
iret
outsl
sub
mov
mov
jle
cwtl
negb
mov
shrl
imul
xchg
cmp
dec
dec
push
sti
mov
mov
mov
add
jecxz
adc
pop
xchg
idivl
out
ret
fmuls
mov
or
mov
mov
sub
add
pop
pop
and
sti
in
mov
or
jbe
mov
sub
sbb
jg
int3
inc
mov
mov
cmp
xchg
jg
cmp
xchg
call
cmp
sarl
sarb
scas
mov
mov
popf
sbb
mov
sbb
dec
lock
scas
xchg
addr16
jg
and
jno
pop
divb
movsb
outsb
xchg
push
mov
sbb
int
pop
and
lea
adc
dec
sbb
in
loopne
es
jb
mov
xchg
fs
decl
jge
pop
movsl
pop
test
mov
inc
aas
cmc
add
cmpsl
push
into
add
and
ret
push
xor
mov
cmpsb
add
xor
cltd
inc
cli
ficompl
lret
dec
mov
in
or
stos
mov
js,pn
dec
xchg
mov
jmp
test
mov
enter
mov
sbb
push
sbb
pop
push
mov
or
test
rcll
dec
jmp
mov
lods
pop
leave
fwait
mov
and
shlb
outsb
mov
sbb
ja
push
jg
jle
ret
jno
loopne
shrb
bound
subl
mov
btc
pop
pop
pop
repnz
inc
stos
popf
out
xchg
int3
push
test
add
pinsrw
pop
cmp
shrb
xor
sbb
mov
and
nop
jmp
or
adc
loopne
mov
cmc
jecxz
outsl
pushf
sub
pop
fsubrl
jne
mov
add
sbb
jg
in
pop
cmp
dec
es
inc
cmc
push
xchg
cmovbe
xor
sti
ftst
ljmp
movsl
mov
add
mov
mov
jne
push
inc
loopne
dec
out
bt
mov
mov
cmp
and
je
pop
fs
cld
or
cmc
push
jbe
inc
int3
xchg
xchg
jno
dec
cmp
sbb
xchg
pusha
sarl
hlt
mov
push
add
or
mov
fscale
push
push
pop
or
and
pop
mov
adc
aad
shll
mov
rol
adc
cmp
jg
adc
xchg
in
xlat
bound
ficoml
xor
mov
and
push
je
xchg
scas
add
mov
jge
aas
ss
mov
cmp
sub
adc
pop
lret
sub
push
mov
jb
mov
xor
cmp
cmp
popf
stos
pop
cmpsl
mov
dec
inc
movsb
movsl
adc
inc
out
inc
sbb
iret
push
mov
ret
movsl
cmp
pusha
inc
dec
in
ja
rorl
mov
icebp
ja
mov
jge
loope
add
or
or
ljmp
add
sahf
adc
into
popf
fstpl
push
xor
mov
adc
std
out
scas
cmp
imul
inc
or
push
jmp
pop
inc
sbb
lods
outsl
scas
test
int
push
cs
repnz
jl
xchg
jae
xchg
repz
lds
into
xor
cmp
add
inc
inc
enter
js
out
lea
lea
insb
dec
pop
data16
aad
call
inc
inc
outsl
jl
inc
xor
mov
popf
mov
out
xchg
sbb
mov
adc
mov
cmp
sub
jg
test
mov
imul
jne
call
mov
mov
cwtl
jb
jae
fstps
mov
cs
xchg
or
mov
ret
push
dec
and
cmp
jbe
mov
mov
adc
cld
xlat
mov
or
shll
repnz
hlt
popa
int3
fistpl
mov
mov
jmp
cmc
or
mov
pop
and
les
jl
into
lcall
dec
jecxz
push
mov
sbbl
push
push
aaa
rolb
das
push
test
addr16
add
sarl
ds
sbbl
sub
jl
push
out
or
aam
rorl
fidivrl
xchg
ret
out
add
mov
adc
and
sti
fiaddl
sbb
pop
sbb
adc
js
fldcw
out
shl
int3
or
push
cmp
pop
daa
mov
aas
cmpsb
push
cmp
jo
sbb
push
into
clc
sub
imul
insb
pop
sbb
fdivp
xchg
add
mov
aas
xchg
inc
adc
xor
in
pop
fucom
xchg
cmp
xchg
sarb
inc
jns
adc
mov
lods
pop
pop
loopne
add
mov
xor
pop
scas
xchg
aaa
jl
mov
push
cmp
insb
popa
pop
sub
mov
rolb
pop
pop
je
out
fbld
jo
or
mov
cmp
and
xchg
inc
pop
add
cld
xor
flds
mov
sub
pop
pop
cli
sbb
mov
cmc
xor
ja
adc
sub
aad
jge
popf
dec
loopne
in
ljmp
dec
cmc
xor
roll
mov
into
pushf
pop
mov
mov
dec
dec
repnz
leave
ret
push
aas
iret
mov
xchg
cmp
std
cmp
and
fs
outsl
inc
cs
popf
cld
add
mov
int
xor
cmp
jmp
hlt
mov
adc
test
xor
mov
cmc
sbb
push
jmp
iret
imul
sub
lods
fmull
rep
rcr
or
or
clc
dec
out
shrd
sub
sbb
pop
jbe
cld
sub
add
xor
je
dec
mov
loope
mov
inc
bswap
lods
js
jp
mov
cs
sbb
sub
jmp
cmp
repz
insl
cmp
in
jecxz
lods
cmpsl
adc
ss
out
or
adc
rorl
cmp
jo
pop
aam
mov
insb
int3
xor
xchg
mov
sbb
rcl
mov
inc
mov
pop
ss
and
cmp
out
and
lcall
xchg
jle
nop
cmp
mov
pop
fldcw
push
fcoml
daa
pop
mov
mov
imul
xchg
add
add
mov
inc
and
push
and
stos
or
push
xchg
cmp
pop
adc
outsl
jbe
sbbl
jecxz
and
push
xchg
cmc
cmp
fbld
aam
pop
dec
addb
es
iret
sbb
and
je
iret
jmp
sbb
push
add
enter
shlb
fsubl
aas
dec
jnp
call
dec
lds
movsb
inc
ja
pop
test
mov
mov
and
cs
sub
imul
mov
xor
xor
fisubrs
inc
repnz
inc
xor
popa
ljmp
mov
jnp
mov
mov
aaa
outsb
mov
inc
outsl
lret
xchg
jmp
imul
clc
inc
mov
xlat
repnz
and
call
icebp
in
loopne
push
pusha
push
lods
lcall
push
pop
xor
fmuls
pop
ret
iret
and
push
xchg
mov
mov
xchg
mov
jmp
fst
stc
out
push
loopne
fucom
mov
push
ja
shld
cmp
cli
xor
sti
out
repnz
jb
leave
inc
dec
ss
test
mov
icebp
pusha
inc
inc
ds
repz
jnp
sub
ljmp
out
mov
movsb
shrb
test
or
daa
sub
addr16
popa
xchg
cmp
ja
stos
pop
loope
xor
imul
mulb
dec
add
xor
loop
jl
mov
push
aaa
mov
lcall
subl
sahf
jbe
jg
fnstsw
std
jns
mov
mov
xchg
fwait
adc
fildll
xor
jb
out
xor
dec
rol
pusha
and
dec
fisubrl
mov
jbe
js
cwtl
lods
dec
stos
paddb
sti
inc
push
adc
cld
out
fwait
pop
inc
dec
sbb
sbb
in
fistl
leave
cmp
push
movsb
ficomps
dec
mov
mov
std
lods
inc
lods
add
add
sub
test
sub
xchg
push
popa
mov
xor
mov
pushf
into
es
xchg
lcall
rcl
sbb
clc
sub
popf
orb
nop
mov
lret
lahf
aas
cmpsb
repz
ret
xchg
repnz
das
aas
xor
mull
mov
add
shrl
cli
stos
or
pop
inc
push
arpl
dec
mov
mov
inc
loopne
loop
aad
int3
in
mov
aad
mov
push
in
int
into
inc
inc
bnd
cmpsl
push
mov
loop
in
mov
insl
cmp
mov
lahf
push
mov
shll
sbb
and
xchg
popa
repz
fldcw
jl
sub
in
or
lods
inc
or
cli
loopne
scas
dec
xor
sbb
jns
pop
cld
scas
cmpsl
mov
lahf
xchg
test
les
and
jecxz
jne
pop
or
xor
jo
sub
nop
lods
test
dec
sbb
insl
push
add
idivl
lcall
mov
mov
movsb
dec
cmpsb
ret
inc
jno
adc
rcrl
xchg
pop
add
int3
outsl
xor
shll
cmpsl
xor
mov
imul
dec
sti
lret
xchg
loop
jne
cs
lret
sbb
jbe
dec
push
jmp
mov
mov
popa
pop
dec
sub
in
outsb
shll
cwtl
subl
dec
into
or
and
subl
cltd
mov
mov
add
sbb
je
sub
das
mov
stc
dec
push
js
out
and
mov
pop
icebp
cmp
aaa
add
hlt
lea
outsb
dec
pop
subl
lock
aam
cmp
loopne
push
cmp
adc
sbb
xchg
mov
loop
cmpsl
mov
popf
es
frstor
lcall
movsb
jp
scas
xor
fstpl
jg
jae
xor
mov
test
mov
push
cs
cmp
inc
fsubrs
xor
pop
adc
xchg
and
or
psubb
cli
cmp
adc
pushf
data16
sub
popf
out
fs
iret
jecxz
mov
mov
imul
mov
call
leave
loopne
mov
mov
repnz
cmp
jo
mov
clc
enter
mov
fiaddl
dec
sub
addr16
lds
mov
fwait
data16
pusha
mov
sbb
pusha
sub
push
cli
xor
bound
add
mov
pop
insb
jg
sbb
fs
js
or
cmpsb
push
leave
leave
mov
idiv
aam
jno
js
cli
jb
and
dec
fiadds
xchg
mov
pop
push
int
pop
cmpsl
test
flds
inc
fadd
dec
clc
aaa
aaa
push
xor
outsl
xchg
and
mov
push
jmp
in
cmp
pop
and
lcall
push
xor
xor
imul
push
iret
push
mov
movl
loopne
mov
pop
dec
hlt
jb
pushf
or
cli
xchg
lods
aam
ss
insb
enter
cmp
cmpsl
inc
jnp
call
jl
ds
les
stc
out
sub
mov
ficompl
mov
in
js
jo
cmp
fimuls
stos
cmpsl
or
jg
jecxz
in
loope
inc
dec
add
sbb
es
and
fistps
dec
sub
xor
mov
pop
cmp
cli
int
lods
arpl
cwtl
lahf
ja
jle
cmovbe
jl
call
cmp
pop
out
or
addr16
les
lahf
push
mov
mov
gs
adc
int3
push
adcl
mov
addr16
shll
pop
jne
push
pop
out
xchg
int3
mov
jl
vunpcklps
and
jecxz
andl
xlat
jnp
cs
pushf
ss
inc
cmpsl
xor
xchg
lds
mov
pop
pop
rorb
arpl
xchg
push
mov
fistpll
sbb
movsl
dec
cwtl
pop
xchg
loope
or
outsl
int
pop
mov
push
out
pop
pop
jp
fiaddl
xor
xchg
xor
jae
pop
fs
add
xchg
inc
add
test
adc
aaa
into
sub
adc
hlt
pop
xor
xchg
jo
xor
push
sarl
imul
push
test
ds
push
push
dec
leave
popa
in
movsl
push
lcall
lods
popf
lds
mov
or
and
pop
jecxz
mov
out
inc
sub
jne
dec
lods
lods
daa
les
or
sub
push
fdivrs
push
jbe
sub
shrl
cld
mov
roll
mov
imul
popa
pop
and
shrb
pop
adc
add
push
div
push
cmp
mov
pop
push
fisubl
xchg
mov
shlb
mov
adc
pop
std
sbb
adc
xor
inc
jmp
dec
jo
xchg
bound
fwait
and
jecxz
adc
mov
ret
adc
push
pop
out
fmull
mov
dec
jge
adc
int
inc
dec
push
leave
dec
data16
mov
xor
stc
jns
jmp
mov
cs
adc
jecxz
mov
test
cmpsl
cltd
pop
sbbl
sarl
push
ljmp
cmp
sahf
xchg
mov
repz
in
adc
mov
pop
call
jns
jmp
mov
pop
sub
or
mov
sahf
add
inc
sahf
push
mov
nop
fsubrl
inc
push
lret
cli
dec
add
dec
mov
movl
jbe
add
cmpxchg
push
test
mov
jnp
mov
mov
ljmp
fldl
push
mov
aad
pop
xchg
pop
cmpsb
xor
inc
sbb
orb
lcallw
sub
push
int3
ret
je
add
xor
mov
popa
icebp
pop
sbb
add
xchg
mov
dec
mov
fisttps
sbb
mov
shrl
mov
lock
out
push
pop
loopne
mov
popa
xor
xor
aam
sbb
mov
fnstcw
pop
xchg
sbb
lods
xchg
ficoml
or
and
jns
xor
push
xchg
xchg
je
jns
xor
jg
sub
lahf
jl
inc
push
dec
lods
pop
xchg
mov
ret
sub
xchg
cli
dec
setg
dec
nop
mov
or
inc
lods
sar
inc
cmpsb
fisubrs
fdivl
out
mov
int3
test
jecxz
stos
cmp
loop
adc
adc
lret
cs
adc
insb
aam
sti
shl
fbld
fs
lock
jo
imul
push
aas
call
test
in
jge
mov
mov
xchg
lret
push
les
adc
or
ret
dec
out
xchg
imul
outsl
fcmovnu
arpl
dec
jp
pop
int
fwait
mov
pushf
inc
pop
cli
inc
pop
mov
inc
adc
inc
aas
adc
stos
mov
mov
lahf
test
mov
iret
imul
jle
sub
shrb
adc
addb
cmpsb
aas
movsb
rcr
and
shlb
xchg
fildl
lcall
in
notl
fistl
lcall
xor
aam
adc
call
xchg
cs
in
inc
outsl
aam
ficoml
jae
push
mov
stc
imul
fs
pop
mov
lcall
movsb
dec
xchg
xor
pop
inc
movsl
mov
xor
ljmp
outsb
addr16
pop
jge
incb
adc
mov
scas
mov
add
lahf
dec
scas
push
and
push
push
mov
jmp
pop
in
lods
xchg
adcb
xchg
add
rcrb
and
test
shll
lret
jge
in
pusha
or
mov
sub
adc
sbbb
cs
enter
xchg
push
or
pop
xchg
divl
or
je
bound
add
cmpsb
jae
outsl
dec
emms
pop
push
sbbb
xchg
mov
xchg
cmpl
popa
dec
xchg
das
mov
jl
mov
ja
shrb
popf
test
sbb
jo
hlt
iret
and
mov
icebp
loope
shlb
jmp
mov
dec
inc
xchg
scas
int
push
add
sbb
jecxz
mov
or
xchg
out
mov
or
inc
cs
xchg
outsb
lock
push
mov
ljmp
sbb
aaa
mov
push
ljmp
push
cmp
xchg
lock
data16
and
mov
pop
gs
push
int3
sbb
dec
mov
sbb
mov
dec
xorl
xchg
loop
xchg
cmpsl
test
jnp
jbe
adc
ficoms
xchg
mov
popf
pop
jmp
mov
das
cmp
pop
jmp
cmp
cmpsl
dec
cwtl
mov
lea
movsl
int
sbb
stos
add
xchg
pop
fmull
add
sti
ljmp
add
std
leave
or
popa
lret
imul
adc
and
mov
jle
out
pop
add
leave
xchg
fisubl
repnz
fisubl
mov
mov
call
lcall
js
movsl
xchg
mov
enter
mov
cmp
adc
into
mov
lock
mov
sub
or
fsubs
xor
sub
into
pop
mov
dec
rorl
jb
fiadds
cmp
push
mov
lods
stos
or
adc
push
cltd
xchg
jne
push
aas
xchg
adc
adc
icebp
call
and
xchg
sti
cmp
push
mov
jb
jo
mov
icebp
mov
push
sub
ljmp
mov
fistpl
pop
ficompl
sub
or
sahf
cwtl
and
negl
test
push
sub
js
jo
cwtl
and
cmp
daa
cmp
stc
pop
sarl
xchg
inc
dec
pop
pop
pop
fucom
xchg
and
add
fs
xchg
mov
loop
mov
roll
aam
dec
mov
mov
mov
xchg
and
pop
jno
outsl
pop
pop
shlb
pop
xor
add
mov
jg
and
out
cwtl
les
mov
xor
and
ljmp
sti
inc
mov
xchg
sub
push
stos
push
iret
call
subb
sbb
xchg
sub
fstl
adc
adc
lea
stos
mov
push
sbb
sahf
test
dec
ljmp
insl
add
adc
loope
int3
outsb
pop
pusha
mov
icebp
pop
or
repz
add
or
xchg
pop
cs
sub
rcrl
add
jb
cmp
popf
xor
sbb
fcoml
xor
and
filds
xchg
dec
mov
add
adc
inc
inc
xchg
and
dec
cmp
stos
dec
fisttps
int
pop
repz
sbb
adc
hlt
fmul
jne
fadd
fsubl
push
rolb
jle
mov
cmp
imul
mov
sbb
bnd
and
pop
dec
pop
sub
push
out
movsb
cltd
mov
loope
xor
sbb
mov
cmp
stos
fildl
jp
mov
aam
fwait
cmpsb
push
je
cltd
fldl
movq
scas
daa
in
add
outsl
jne
jb
mov
ret
jmp
mov
popl
jmp
sbb
sbb
cld
aam
push
clc
and
dec
xor
inc
js
mov
pop
out
test
xchg
outsl
sbb
adc
push
out
jecxz
inc
and
out
mov
jmp
sbb
push
or
push
and
rol
cmc
pop
lea
pushf
inc
xor
mov
fisttpl
dec
cmp
das
ds
addl
jne
xor
loop
into
xchg
fsubl
mov
mov
push
out
cmp
adc
cmp
push
jmp
jp
popf
nop
cli
xchg
xchg
lods
mov
aas
jo
pusha
pop
add
pop
ret
adc
pop
test
mov
pop
adc
xlat
and
test
xchg
xor
dec
push
cli
sahf
shlb
into
divb
mov
xor
lods
scas
fcmove
out
jle
or
xorl
fcmovb
mov
push
aad
dec
sub
adcb
adc
int3
and
mov
adc
fcomi
fisttpll
push
or
test
inc
lods
mov
and
shll
sub
sub
sub
pop
sti
les
in
pop
push
or
pop
sub
inc
lret
call
push
lods
push
xor
pop
xchg
shlb
and
inc
xor
fs
mov
call
push
mov
lods
sbb
mov
icebp
test
xchg
jl
inc
fucom
add
push
cmp
test
add
mov
movsb
flds
jno
fbstp
test
inc
loope
cmp
mov
push
lcall
mov
cs
add
push
xorl
jno
andb
cld
dec
jae
unpckhps
fidivrl
add
daa
sti
lcall
inc
test
xor
cmpsl
fdivs
rcl
pop
stos
inc
rorl
pop
inc
add
inc
jns
jge
pop
loopne
loop
int3
xorl
outsb
in
inc
stos
xchg
lods
jno
jno
lods
push
test
jl
cli
lret
sub
in
push
xor
pop
ret
mov
aaa
mov
outsl
inc
lods
cmp
pop
test
outsb
xchg
idivl
xor
dec
adc
sbb
sub
mov
and
xor
inc
sahf
xor
hlt
orb
fbld
or
sub
lds
into
sbb
or
and
cmp
cwtl
movsb
ret
push
fnstenv
stos
lods
scas
roll
sahf
cltd
int3
lock
jg
pop
jge
mov
jb
loope
mov
mov
jmpw
repnz
mov
adc
pop
setbe
fidivs
minps
and
jmp
ror
add
ds
pop
xor
jb
push
xchg
xchg
adc
clc
mov
push
push
aaa
adc
repz
adc
pop
popa
mov
inc
push
xor
idivl
adc
mov
shl
ss
loop
pusha
and
lods
dec
aas
push
mov
add
mov
daa
add
inc
divl
imul
mov
and
add
jmp
cmpsl
add
or
and
movsl
xor
pop
push
dec
pop
push
cli
lock
mov
scas
clc
out
mov
popl
dec
clc
jmp
ret
loopne
xor
fwait
xchg
ficoms
icebp
leave
sub
je
enter
add
jle
pushf
fisttpl
mov
jo
out
jb
jecxz
imul
mov
lcall
addr16
or
xchg
jbe
scas
push
inc
imul
push
shl
jmp
aaa
push
mov
sub
xlat
xor
add
ljmp
push
jp
jno
mov
mov
js
inc
jne
shr
fdivs
loopne
scas
movsl
test
add
mov
jne
push
or
push
push
pop
iret
dec
lret
dec
xchg
mov
shlb
xor
sbb
sbb
pop
add
or
mov
sbbl
ljmp
fistpl
test
mov
insb
mov
cld
mov
sbb
pushf
fdivr
stos
addr16
xor
adc
outsb
xor
mov
scas
cltd
mov
ljmp
add
xchg
add
inc
and
xor
in
sbb
add
cmovle
sbb
adc
nop
data16
in
mov
ds
lcall
inc
jl
jae
cmp
jl
dec
jmp
insl
inc
cmpsb
xor
sub
in
nop
adc
movsb
mov
or
xor
cwtl
push
or
notl
sub
and
loop
cmp
mov
inc
dec
idiv
int
dec
into
or
jns
std
mov
je
dec
repz
mov
cmp
ds
add
sub
fstl
sbb
pop
outsl
aam
adc
mov
push
adcb
cmc
jg
stc
mov
jle
fnstenv
cwtl
xorb
cmp
rol
cmp
std
dec
inc
or
push
mov
xor
add
push
pop
pop
insb
dec
cmc
clc
push
sti
sbb
mov
mov
in
shl
xlat
mov
mov
adc
daa
push
stos
sbb
clc
dec
jmp
test
push
sbb
dec
jne
dec
rcrl
adc
cltd
add
cmp
pop
call
repz
fldenv
fadd
jb
pop
dec
imul
jae
ss
jno
jge
sub
mulb
xchg
ret
in
fidivrl
imul
movsb
int
pop
shrl
mov
mov
xor
mov
fidivrl
xchg
imul
dec
and
dec
in
call
dec
pusha
or
inc
inc
dec
in
int
push
sub
mov
add
pop
mov
or
push
imul
bound
pop
mov
xchg
adc
loop
loop
daa
mov
cmp
std
jnp
add
add
push
jo
clc
cwtl
jo
mov
add
sbb
stos
je
adc
push
or
and
sarl
popf
add
ret
in
pop
and
imul
and
les
ret
dec
lds
sahf
push
mov
inc
inc
sub
inc
jno
sub
inc
jle
ret
pop
add
jb
fidivs
lahf
shrw
mov
push
ret
insb
mov
aad
xchg
cs
dec
mov
out
lret
outsl
jb
xchg
js
inc
or
cmc
lret
mov
push
lret
mov
jo
cmp
lock
jge
xor
or
mov
ss
clc
rcrb
int
insb
sub
shl
dec
test
xor
push
mov
flds
sub
xchg
xchg
mov
sub
pop
lds
cld
lahf
subl
lock
xor
sub
test
xchg
xchg
mov
leave
and
insl
sbb
mov
sahf
ljmp
push
inc
sbb
icebp
adc
sbb
jg
scas
and
pop
cmp
dec
xchg
in
mov
jl
insb
mov
pop
sbb
mov
fbstp
outsl
xor
add
in
mov
push
movsl
adcl
inc
nop
aad
dec
cmp
jns
fs
lahf
mov
fdivs
sub
mov
lahf
mov
mov
xor
mov
push
add
icebp
gs
jecxz
ss
mov
aad
shrb
adc
xchg
or
out
ficompl
inc
scas
in
imul
hlt
push
test
dec
and
push
insl
lock
fstp
mov
loopne
pop
cli
lcall
adc
mov
sbb
push
and
call
dec
cld
cld
adc
inc
mov
pop
lea
out
int
test
and
daa
push
ja
dec
test
dec
call
outsb
jb
xchg
add
in
cld
adc
in
mov
push
fwait
adc
dec
pop
jmp
pop
popf
into
es
negl
dec
jmp
pop
arpl
inc
xor
insb
sub
dec
dec
lahf
fdivs
jle
stos
mov
cmp
push
lret
les
pop
sbb
mov
and
pop
lcall
repnz
jns
jns
sbb
mov
and
jo
xor
jns
hlt
dec
xchg
insl
stos
lods
fwait
mov
sub
enter
daa
lea
shll
mov
or
xchg
xor
add
cli
popa
subl
fmuls
pop
and
dec
jl
cli
inc
jg
loope
sub
sbb
addr16
enter
mov
out
jbe
sub
or
popa
pusha
lcall
popa
inc
sbbb
xor
mov
rcrb
aam
xchg
pop
sarl
sti
jae
xchg
mov
fidivs
pop
imul
inc
lods
sahf
push
adc
loop
or
les
mov
mov
ds
fiaddl
movsl
sub
in
sbb
lock
mov
push
add
andb
lcall
dec
in
cld
pop
mov
dec
insb
out
lods
int3
out
pop
loop
out
stos
insl
rorb
mov
std
int3
out
push
mov
mov
xor
mov
sbb
enter
es
add
sbb
insb
push
jmp
and
icebp
fsubs
jo
inc
into
sub
lret
outsl
sbb
mov
mov
fisubs
mov
mov
mov
insb
clc
jbe
cmp
movsl
lcall
daa
jb
xor
add
andl
dec
lcall
cmp
pop
dec
push
cmpsb
fidivrl
cmp
sub
dec
je
lcall
cwtl
rolb
sbb
hlt
push
dec
dec
mov
movsb
in
jg
icebp
je
cmp
push
shrb
ret
call
popf
mov
add
shlb
fisubl
pop
jl
ljmp
outsl
inc
adc
ret
inc
adc
loop
call
ret
push
push
mov
mov
and
push
push
adc
data16
push
push
incl
jne
frstor
cmpb
jb
mov
in
pop
outsl
push
iret
jno
hlt
sub
sbbl
lods
in
cmp
js
push
stos
ret
inc
negb
xor
inc
adc
sub
jg
jle
cltd
adc
es
sti
sbb
or
mov
nop
jle
jecxz
and
add
mov
adc
pop
out
adc
ret
cld
jbe
outsl
jb
jns
imul
je
mov
mov
pop
scas
jo
in
mov
frndint
pxor
ja,pt
aaa
lds
jg
dec
mov
shl
testb
ss
lds
sti
or
xor
mov
jne
outsl
inc
push
add
aas
in
jns
js
sub
fistps
inc
pop
rcl
mov
xor
outsb
rcll
iret
xchg
test
lret
pop
outsl
sti
dec
fbstp
clc
inc
in
jae
xorb
xlat
and
movsb
pop
jl
or
lock
or
jb
andl
bound
sub
push
push
ds
test
cmp
xor
dec
loop
sub
js
rclb
test
or
cltd
mov
pop
orl
or
jge
mov
test
lea
push
xchg
and
xchg
cmp
bound
aas
and
mov
leave
mov
mov
mov
in
add
insl
or
outsb
popa
insb
mov
add
das
dec
mov
test
popa
jnp
leave
adc
push
dec
cmp
inc
sarb
sub
cmpsl
lcall
xor
mov
mov
adc
cmp
cli
out
aam
and
xchg
movsb
dec
add
lret
aas
fsub
iret
call
xor
cmp
push
repnz
add
testb
cli
stos
sub
mov
sub
inc
jbe
cwtl
pop
in
sub
push
or
jp
xchg
dec
mov
xchg
data16
jle
inc
mov
insb
jp
nop
sbb
xchg
jo
and
fistpl
loope
inc
push
inc
imul
popf
stos
xchg
pop
push
xchg
mov
imul
out
outsl
sarl
repnz
mov
xor
sbb
dec
or
inc
push
sbb
mov
movsl
fadds
or
jmp
mov
outsb
inc
and
cmp
dec
and
or
mov
sbb
mov
mov
mov
pusha
mov
andl
idivl
not
sbb
scas
mov
add
lret
dec
pop
lds
prefetchwt1
xor
inc
cltd
adc
loop
xchg
mov
in
insb
cmc
inc
sahf
and
sub
jae
fs
repnz
jge
xlat
jae
mov
xchg
insb
push
add
push
pusha
lods
mov
arpl
arpl
insl
adc
push
mov
lcall
inc
out
mov
pop
jns
push
add
js
xor
mov
aas
jae
xchg
cmpsb
int
notb
push
icebp
jmp
xor
pop
aad
pusha
ds
gs
jo
adc
scas
xor
inc
ss
in
pop
mov
lret
pop
aad
lret
mov
insb
test
push
inc
mov
cmp
cmp
fcoms
cmp
ror
add
mov
and
sbb
repnz
xchg
jecxz
mov
inc
daa
add
add
cmpsb
pusha
inc
jge
sub
or
out
sbb
mov
fisubrs
repnz
jb,pn
fwait
and
in
idivb
int3
stos
mov
mov
adc
das
dec
test
out
push
outsb
enter
or
xchg
aaa
stc
xchg
xor
insl
push
inc
lods
imul
mov
sub
insb
inc
ds
push
lret
inc
add
fisubrs
push
cs
fnstsw
mov
or
push
cwtl
movsl
or
outsb
mov
jg
cmpsl
mov
cltd
sbb
ljmp
aaa
add
stos
sbb
nop
lret
scas
add
pop
inc
jne
push
cld
sti
out
ret
in
xchg
add
pop
mov
inc
loopne
inc
push
addr16
stos
dec
or
insl
repnz
adc
cmp
mov
xchg
leave
xchg
ds
dec
jge
pop
add
jnp
push
repz
fstpl
bnd
pusha
or
and
sti
jg
push
jno
movnti
or
cltd
outsl
aam
xchg
mov
lea
cmp
imul
call
inc
nop
aad
aaa
ret
dec
ljmp
popf
out
rcrl
arpl
data16
btr
push
sbb
lcall
push
rcrb
sub
gs
cld
mov
and
repnz
out
fstl
jno
or
fcomip
or
enter
lods
popf
sti
xchg
iret
fsubs
xchg
scas
movl
sbb
pop
cmpsl
pushf
int3
push
test
shll
call
lret
stos
hlt
push
js
daa
sahf
inc
mov
enter
sub
cmp
dec
add
xchg
nop
js
ret
mov
mov
xchg
mov
aaa
leave
adc
pop
and
insl
loope
icebp
lods
jae
mov
cmpsb
lods
add
push
inc
hlt
inc
iret
fisttps
cmc
bnd
ds
call
cmc
sub
adc
imul
cs
cmp
cwtl
jge
and
xor
setl
inc
shrl
rcrb
mov
adc
pusha
inc
and
mov
push
shl
dec
adc
imul
sub
repnz
mov
ljmp
pop
test
sbb
cmp
sbb
pop
addr16
adc
out
jle
jge
mov
loope
push
es
scas
jns
pop
shrb
xchg
popa
test
sbb
dec
out
sbb
movups
cmc
shl
sub
pushf
int3
inc
ss
jmp
push
jg
rolb
xor
sbb
rorb
sbb
test
imul
std
lret
sbb
jae
xor
adc
jo
scas
add
test
pop
dec
cmp
fsts
jl
mov
push
mov
nop
hlt
push
sti
mov
loopne
cmp
add
movb
jb
fs
lret
xor
adc
cmp
jecxz
dec
adc
cmp
pop
les
cwtl
lods
ss
dec
mov
out
pop
pop
jo
pop
cmp
adc
or
lods
mov
push
jo
repz
jae
inc
cmpsb
inc
xor
sahf
fcomps
jmp
idivb
je
mov
push
test
or
inc
inc
and
jae
cmp
push
sahf
pushf
inc
jno
push
add
dec
jmp
daa
clc
sub
adc
xchg
push
loopne
xchg
scas
cmp
das
xor
push
leave
addr16
testb
sarb
outsb
lods
cmp
cmp
mov
aas
add
daa
movsb
push
mov
fadd
push
mov
dec
mov
ret
xor
cltd
ss
cmp
jmp
add
aas
adc
sbbb
mov
sbb
xchg
loope
and
mov
push
cmp
cli
cmp
shrb
sbb
and
loop
sub
adc
or
xchg
addl
fwait
inc
inc
mov
or
xchg
xor
outsb
mov
pop
xor
aaa
sub
repnz
mov
pop
dec
jecxz
cmp
arpl
sahf
lret
push
fisubs
ret
pusha
aam
icebp
push
push
pop
out
aas
ss
ljmp
lock
sbb
cmpsb
sti
push
out
mov
stc
subl
or
add
jg
pop
mov
lods
push
add
cmp
pop
inc
test
fs
push
pushf
push
ds
cld
adc
sbb
ds
inc
mov
aam
jnp
and
ja
sbb
mov
frstor
sbbb
mov
lea
or
or
push
popa
jae
std
repnz
mov
fidivrl
or
dec
sarb
test
cmp
mov
sbb
add
dec
outsb
imul
cltd
add
cmc
jae
outsb
jecxz
outsb
xchg
outsb
jne
sub
aam
into
push
mov
sarl
dec
stos
inc
push
push
rcrb
mov
and
push
stos
test
jne
stc
jb
mov
imul
mov
push
pop
mov
lea
mov
xlat
pop
push
testl
cmp
iret
stos
aad
icebp
pop
fwait
arpl
jns
inc
int
sahf
push
fwait
or
loope
aam
popf
push
sub
inc
rcrb
in
test
mov
mov
fucomi
ret
sarb
add
add
es
mov
push
jmp
insl
push
and
test
sub
xlat
hlt
dec
mov
sub
scas
loope
sub
add
fdiv
cmp
push
sbb
mov
dec
dec
iret
mov
imul
xchg
clc
jb
cmp
fdivs
push
inc
pop
xchg
fs
mov
pop
loop
xchg
and
andb
add
cs
icebp
adc
ljmp
add
call
enter
aam
mov
daa
cmp
iret
push
xchg
ds
movsb
or
mov
pop
popf
jmp
inc
push
divl
data16
add
mov
cld
fdiv
aas
or
push
jle
cwtl
add
inc
aam
andl
imul
add
pop
cld
xor
or
sbb
pop
iret
jb
hlt
outsl
das
xor
dec
pop
jbe
lea
test
push
sbb
pop
inc
xchg
outsb
pavgw
pop
dec
xor
rorl
imul
fcomps
cmpsl
and
in
inc
and
jbe
lret
and
daa
mov
add
push
mov
inc
adc
mov
xor
jne
shrb
or
aaa
lret
lods
test
sub
mov
pop
xchg
xchg
inc
outsb
add
icebp
mov
aaa
aad
and
pop
sbb
lea
insb
sub
andb
sahf
lods
push
xchg
shlb
add
ja
daa
shlb
pop
in
mov
leave
sbb
adc
pop
sub
int3
insl
sbb
mov
addr16
push
mov
push
adc
mov
jnp
leave
lods
ljmp
arpl
ja
pop
mov
or
sub
je
and
int
or
jge
dec
mov
mov
cmp
or
xchg
push
push
push
dec
lds
push
imulb
insl
pop
add
scas
mov
negb
push
pop
pop
and
or
and
mov
xchg
int
mov
mov
ja
sbb
mov
add
cs
fs
pop
scas
xor
xchg
xorl
je
std
mov
into
inc
loope
aad
xchg
pop
fldcw
adc
cmp
out
jnp
stos
sub
addb
cli
lods
sbb
push
ror
pop
imul
add
jmp
mov
scas
sub
imul
adc
scas
inc
add
xchg
ficompl
xchg
outsl
push
add
mov
cs
mul
cmc
fsubl
jmp
cmpsb
and
or
lahf
sbb
jecxz
xor
sar
sbb
push
xchg
jmp
push
jb
adc
ljmp
push
push
aad
dec
and
gs
inc
out
cmp
push
mov
dec
stos
lods
bound
ljmp
pop
ljmp
lret
shlb
pop
aas
xor
cmp
xchg
mov
jl
add
mov
push
xor
cld
daa
sbb
mov
adc
or
call
adc
jno
ret
push
adc
mov
cltd
mov
xor
jae
lahf
ret
or
call
adc
test
test
int
xchg
stc
mov
jne
cld
out
fimuls
adcl
test
adc
loopne
jg
adc
push
cli
insb
fldcw
arpl
sahf
pop
hlt
adc
sti
sbb
adc
rclb
pop
sbb
stc
aam
jne
sahf
sbb
setl
or
mov
inc
lock
loop
adc
push
or
push
test
mov
cli
sbb
adc
cmp
rcl
pop
inc
pusha
lret
in
sbb
jge
test
xchg
sbb
ja
mov
insb
in
adc
or
adcb
cwtl
out
sub
insb
or
push
lahf
movsl
imul
enter
aas
data16
cmc
mov
xorb
push
mov
jg
mov
lret
jle
scas
jmp
jbe
mov
xchg
mov
fwait
shrl
cmpsb
and
jns
js
push
sbb
rcrb
sbb
jns
addr16
outsb
scas
aas
sub
jecxz
mov
mov
push
addr16
in
test
jb
lcall
xor
mov
lea
push
aam
out
xchg
pop
aaa
inc
xchg
sbb
stos
mov
aam
cld
cli
cmp
decb
or
int
dec
jp
or
cmp
mov
sub
and
push
and
cmpsl
or
jmp
mov
ja
lea
lds
adc
xor
popf
and
jecxz
adc
pop
and
rclb
add
test
pop
int
iret
or
dec
mov
adcl
xchg
jns
subl
lods
push
mov
sahf
mov
dec
lret
cmp
jnp
rorl
aad
sub
fmuls
dec
mov
mov
dec
fs
test
and
inc
inc
push
add
addb
sbb
pop
aaa
scas
mov
pop
add
daa
leave
pop
rcrl
and
imul
sti
pop
sub
inc
dec
pushf
gs
std
addr16
cmp
in
jae
mov
pop
sub
mov
lret
xlat
xor
arpl
jno
aad
rcrl
aad
push
std
sub
mov
pop
xchg
sti
sub
gs
ljmp
cld
fidivl
clts
cmp
sbb
dec
and
inc
mov
enter
pop
or
xchg
in
or
push
mov
adc
aas
mov
mov
daa
shlb
cwtl
xor
xchg
lods
dec
rclb
or
xchg
pusha
xchg
dec
nop
out
xor
mov
sbb
aaa
push
fucom
mov
sub
fnsave
inc
insb
or
sub
pusha
mov
add
js
and
mov
mov
jp
cmpsl
add
sbb
mov
pop
sub
movsb
insb
cmpl
fimuls
sub
pop
sub
test
sbb
pop
lods
in
inc
push
or
mov
dec
cs
sbb
in
cs
packsswb
mov
sub
pop
scas
pop
mov
sub
cmp
pop
into
push
add
adc
sti
cmpsb
add
xor
mov
sahf
and
mov
lret
pop
in
jmp
add
flds
loop
and
fs
sub
pop
xor
mov
or
cmpsb
and
popa
fnstenv
iret
pop
je
insl
jb
mov
inc
test
cmpsb
icebp
das
pop
push
rolb
push
dec
sbb
ret
cld
mov
push
mov
lret
mov
test
adc
dec
sti
xchg
cmp
adc
mov
xchg
lods
leave
je
mov
gs
pop
mov
xchg
adc
dec
insl
jl
jnp
xor
cmp
and
rolb
sbb
jmp
fadds
xor
out
in
jl
lret
cmp
mov
jmp
nop
add
xor
movsl
jno
pop
dec
push
sbb
mov
push
lock
inc
es
div
push
mov
int3
push
adc
cmpsb
xchg
loopne
xor
or
and
lcall
xchg
stc
pop
lcall
pop
or
repnz
gs
xchg
popa
pop
mov
xchg
loope
fwait
ja
mov
test
loop
shlb
sbb
daa
loop
test
pop
push
nop
test
inc
mov
dec
add
icebp
gs
push
jle
sbb
or
imul
lds
cmp
xchg
fwait
jl
xchg
scas
ret
pop
mov
sbb
call
cmp
sbb
aad
xor
leave
in
cmp
jae
movsl
clc
rorl
cmp
insb
mov
and
mov
in
and
rorb
mov
jb
xchg
repnz
movsl
add
or
dec
mov
fistpll
xlat
rorl
pop
aaa
sbb
dec
add
divl
dec
jae
inc
xor
ljmp
das
mov
cmp
lods
sbb
sub
push
nop
mov
adc
sbb
xchg
js
gs
dec
out
es
push
lahf
out
pop
cs
inc
outsl
add
mov
sub
and
jecxz
cmp
sahf
push
pop
mov
movsb
push
mov
test
adc
add
clc
jp
lret
and
fidivrl
pop
mov
mov
pop
xor
sbb
test
lods
sbb
jl
fstpt
sub
rcl
sub
sti
jno
xor
jo
sbb
xor
push
push
stos
shrb
das
dec
xchg
lds
es
stc
sub
cli
adc
add
ja
xchg
pop
mov
les
lods
xchg
push
lea
shl
sarb
and
jl
repz
rdmsr
outsl
xchg
lods
repz
add
sub
out
movsb
adc
int3
arpl
popf
arpl
std
test
lds
int3
push
jmp
push
out
roll
push
xchg
call
push
mov
push
add
repnz
xchg
clc
ja
push
push
test
outsl
cs
sarb
imul
cmpb
mov
push
jae
pop
in
movsb
movnti
popa
adc
cmp
fs
cwtl
adc
insl
stc
mov
add
nop
out
pop
xchg
jecxz
mov
mov
mov
inc
xchg
scas
lahf
outsl
addr16
bound
rcrb
cwtl
dec
push
add
adc
aam
pushf
xor
inc
sub
push
sub
or
jo
mov
jno
xor
cli
fisttpll
ss
loopne
in
lds
push
lahf
mov
xchg
pop
idivl
add
arpl
lods
ja
mov
ljmp
insl
imul
push
adc
mov
ds
orl
das
aaa
decb
or
fistps
jg
add
pop
add
add
pop
cmp
lods
pop
lcall
int3
addl
insl
and
in
jecxz
scas
cld
inc
and
cmp
sub
stos
loope
jmp
subb
push
mov
xor
add
inc
mov
adc
popa
sar
inc
lds
mov
leave
inc
push
push
stos
ss
xor
xchg
mov
and
bound
les
sbb
jnp
jns
push
xor
xchg
lret
sub
shlb
cli
shr
and
xchg
xchg
ds
int3
aas
shl
adc
jmp
push
mov
cmp
repnz
fisttpl
add
imul
repz
rolb
mov
inc
jb
fisttpl
adc
ror
ficompl
mov
sbb
popa
outsl
hlt
mov
fcoml
test
es
jae
stc
andl
adc
repz
mov
cmpsl
pop
ljmp
jne
sbb
xchg
jae
jmp
clc
arpl
xchg
fwait
pop
test
shll
rorl
jmp
jo
pop
or
pop
push
out
rorl
dec
loopne
in
push
and
testb
dec
sub
cs
stos
or
xor
iret
data16
inc
sbbb
nop
pop
sahf
mov
lods
idivl
lods
aaa
cli
xor
outsl
push
popa
aas
mov
sub
mov
or
cmpsl
lock
inc
dec
lret
xlat
add
and
or
cli
sub
cwtl
pop
pop
or
int3
sbb
in
aam
xchg
int3
xchg
jmp
lea
mov
mov
push
enter
nop
shlb
shll
mov
pop
insb
lret
dec
xchg
or
ficompl
mov
scas
add
xchg
out
inc
cltd
add
inc
in
lds
jns
push
sbb
adc
movsb
aad
jae
pop
lret
sub
ret
jg
in
lods
push
mov
cwtl
inc
mov
xchg
int
xchg
jno
mov
ja
into
xchg
sub
mov
pop
xchg
inc
fisttpl
push
outsb
mov
or
jmp
test
insb
sub
adc
mov
pop
xor
imul
and
mov
dec
stc
lcall
xor
js
jl
lahf
or
mov
rorb
jbe
imul
xchg
sub
js
outsl
sar
mov
lock
mov
inc
mov
scas
insl
aad
mov
and
fmull
arpl
pop
adc
jp
add
pop
ja
imul
cmp
out
call
enter
mov
fwait
imul
ret
jg
shrb
jno
add
add
pop
je
jnp
pushf
cltd
hlt
inc
sub
cli
pop
jp
repz
xor
push
iret
mov
mov
dec
xchg
and
push
add
inc
mov
and
inc
jmp
daa
out
stc
fcomip
mov
mov
idivl
bound
outsb
paddsw
bound
inc
cltd
lcall
std
es
mov
jne
pop
stos
mov
jp
cltd
mov
xor
rorb
push
pop
clc
push
lds
outsl
pusha
or
xor
pop
lahf
rorb
cwtl
sbb
push
fstl
jne
hlt
mov
inc
jl
cmp
loopne
pop
sbb
xor
cmpsb
push
jecxz
movsb
add
enter
sahf
mov
fsts
lahf
cltd
mov
daa
xor
lock
dec
inc
dec
pop
push
fxch
or
adc
lods
xor
in
xor
shrb
jnp
mov
movsb
xor
outsb
shr
loope
ret
add
mov
out
sbb
mov
lcall
push
ss
or
icebp
inc
repnz
sbb
push
int3
mov
mov
add
cwtl
or
das
mov
scas
dec
test
cltd
je
loop
lret
rolb
mov
mov
sbb
in
push
push
lock
mov
inc
out
push
fcomi
and
cmp
das
inc
test
xchg
jmp
add
je
pop
push
in
mov
dec
jnp
in
jmp
arpl
cmp
xor
jecxz
xor
fists
and
mov
or
inc
fisubl
imul
mov
cmp
jae
sub
jecxz
in
fstpt
jl
into
mov
xor
fstl
jae
jbe
lods
aam
or
sti
inc
sbb
ja
imul
stos
xor
mov
ja
adc
out
sub
and
mov
pop
cltd
rcll
clc
push
jp
sar
out
push
jg
repz
pop
add
adc
hlt
fs
fstpt
push
sar
mov
mov
aas
inc
push
stos
imul
pushf
imul
xor
xchg
sbb
xor
jno
arpl
int3
enter
or
cmp
movsl
jbe
adc
fcompl
scas
jb
das
outsl
xchg
xchg
arpl
sti
sbb
or
into
or
mov
imul
cwtl
pop
jg
and
dec
mov
ljmp
cmp
mov
lcall
cmp
add
xchg
adc
cmc
add
iret
push
xor
mov
pop
or
adc
push
jnp
push
shlb
or
jg
jo
sarb
js
frstor
cmp
inc
jbe
out
jne
movsb
xchg
pop
pop
or
fmul
inc
addr16
mov
xchg
sbb
xor
push
aaa
out
outsl
mov
inc
pop
aas
dec
adc
pop
insb
jp
fstps
mov
jmp
add
inc
in
lds
dec
mov
dec
addr16
aad
ss
push
mov
mov
dec
dec
cmp
stos
frstpm(287
int3
pop
and
shlb
xor
imul
or
mov
cli
cmp
fmuls
data16
into
or
jp
repnz
sbb
jns
outsb
mov
popa
add
in
insl
inc
movsl
stc
jle
push
push
sbb
and
orl
loop
arpl
and
out
paddb
data16
add
mov
xchg
sub
pop
in
jne
jae
test
cltd
enter
xchg
sub
mov
sbb
mov
lock
icebp
shll
test
mov
push
dec
push
in
jp
popa
hlt
fimuls
shlb
fdivr
in
outsb
jecxz
sbb
mov
mov
popf
aas
mov
push
xchg
inc
pop
fwait
mov
fdivrs
js
insb
enter
movsl
fnsave
dec
call
dec
cli
in
fwait
pop
mov
icebp
mov
ret
jge
inc
adc
idivl
push
pop
xchg
xchg
dec
pushf
mov
and
lds
out
mov
bound
imulb
or
movsl
js
inc
cmpsb
dec
pusha
fldenv
add
cmp
pop
sbb
jo
popa
jg
stos
fs
sbb
sub
popa
mov
mov
sub
push
mov
aaa
cld
adc
cli
mov
ficompl
pop
pop
push
mov
scas
mov
or
ret
loop
insl
leave
mov
stc
mov
push
shlb
fcomps
pop
jmp
push
sbb
sbb
mov
push
fs
test
sub
stc
insl
push
ds
shlb
outsl
sarl
push
jge
addr16
rclb
inc
mov
and
sbb
xor
test
inc
xchg
xchg
inc
stos
push
mov
pop
jne
or
and
xor
sub
and
pop
in
mov
scas
out
jp
inc
add
xor
cmc
xor
aas
movsb
dec
mov
decb
dec
test
mov
xor
pop
xor
or
xchg
inc
je
in
mov
xchg
popa
movsb
cmp
sarb
inc
mov
imul
in
xchg
or
pop
loope
push
mov
ficoml
or
test
dec
mov
xchg
bound
mov
sub
loopne
cs
roll
dec
jg
int3
mov
xor
cwtl
mov
orb
xor
adc
push
sbb
leave
mov
adc
js
and
jge
loopne
das
xchg
shl
in
and
mov
jmp
or
mov
dec
sarl
std
sub
enter
das
jg
cltd
std
pop
popa
int3
inc
loope
ljmp
sbbl
sbb
xlat
iret
mov
mov
mov
dec
inc
push
out
inc
jbe
mov
cmp
cmp
psrlw
jmp
fs
dec
inc
insb
in
mov
pushf
and
sbb
popa
leave
dec
push
cmp
out
fwait
pop
out
cmp
mov
jecxz
rorl
adc
dec
lcall
xor
dec
add
xchg
pop
lcall
xchg
xor
aam
push
fs
sar
in
mov
mov
rcll
js
dec
mov
mov
jnp
loopne
shrl
sub
sbb
jo
popf
dec
fst
testb
rcll
cmp
gs
xor
lret
hlt
fists
xchg
xchg
inc
out
repz
pop
je
ja
push
mov
pusha
push
icebp
mov
out
add
dec
shlb
inc
fdivs
fisttpll
leave
je
pop
outsl
lret
pop
insl
jbe
xor
jbe
add
jbe
stos
jge
mov
hlt
cmp
xor
test
shll
jo
ja
xorps
dec
imul
imul
and
or
pusha
icebp
outsb
or
adc
xchg
xchg
fimuls
pop
out
fcom
popa
sbb
or
cmc
loop
addb
xlat
xchg
outsl
sarb
adc
jge
cmp
jbe
into
jo
dec
and
sbb
ljmp
fbld
dec
add
ja
icebp
or
loopew
sbb
sbb
and
push
mov
lahf
ficoml
or
sahf
lret
sbb
dec
sub
.byte
